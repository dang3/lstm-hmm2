push
mov
sub
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
push
andl
xor
or
inc
mov
cmpl
ja
jmp
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
push
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
decl
add
add
mov
mov
xorl
mov
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xorl
mov
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
movl
mov
xor
xor
add
or
mov
adc
mov
xorl
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
push
orl
pop
andl
sub
dec
add
movl
adcl
mov
movl
orl
mov
xorl
mov
adc
mov
andl
mov
xor
mov
adcl
xor
add
addl
mov
andl
lea
mov
add
mov
xor
subl
add
mov
incl
lea
addl
push
sub
mov
andl
xor
add
push
and
mov
subl
push
andl
pushl
call
mov
add
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
or
movl
subl
mov
sbbl
mov
sub
lea
adc
mov
inc
movl
or
mov
mov
xor
xor
sub
sub
mov
xor
xor
sub
mov
sbbl
sub
mov
movl
mov
movl
mov
movl
cmp
movl
je
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
pushl
call
jmp
mov
adcl
xor
xor
orl
lea
mov
xor
mov
xor
xorl
div
mov
sub
mov
xor
addl
xor
sub
movl
cmp
movl
jne
mov
xor
mov
mov
addl
mov
orl
xor
addl
xor
orl
add
adcl
add
mov
cmp
jae
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
lea
adcl
mov
mov
xor
addl
add
lea
movl
mov
mov
cmp
movl
jbe
addl
movl
jmp
addl
sbbl
mov
xorl
xor
xorl
inc
incl
adcl
add
cmp
jb
movl
cmpl
je
cmpl
jl
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
jmp
mov
dec
and
adc
push
pop
movhlps
addl
subl
es
cmp
js,pn
je
push
jno
jae
dec
fsub
cld
insl
push
jb
bound
pusha
push
cmp
push
jle
lea
xor
ja
add
pop
lock
rol
lock
sub
xchg
xor
fs
flds
jo
sbb
lsl
and
jne
scas
sub
hlt
push
xor
and
test
mov
or
jecxz
imul
xchg
xor
int
rcll
push
adc
or
mov
shll
add
mov
pop
push
or
or
out
fwait
mov
cmp
mov
sti
xchg
ret
aam
adc
pop
in
mov
outsb
stc
xor
mov
xchg
xor
xor
fs
jle
xor
nop
adc
cltd
jbe
and
xlat
add
push
dec
sti
int
repnz
ljmp
outsb
fadds
jl
scas
sub
xchg
lock
and
inc
add
mov
pop
inc
mov
fs
mov
dec
repz
pop
psllw
mov
fcmovnu
xor
mov
cwtl
in
ds
xchg
fsubr
stos
cmpsl
mull
outsb
jns
int3
loop
or
ds
insb
mov
xchg
imul
mov
cmp
ljmp
pop
mov
pop
or
shrb
rol
stc
pop
mov
adc
mov
push
lock
sub
es
negb
js
fidivs
aam
mov
pop
xor
xlat
mov
loope
mov
push
push
leave
pop
xlat
call
addl
push
add
add
lds
xor
imul
pop
imul
sbb
movsl
mov
adc
pushw
out
mov
loope
or
cltd
mov
js
xchg
mov
pop
xor
mov
pop
cmpl
inc
rol
mov
xchg
cmp
xchg
sub
out
push
nop
ret
mov
mov
nop
mov
xchg
popl
rcrl
xchg
out
lods
das
cld
mov
lahf
sti
sbb
sub
pop
xor
pop
jl
xchg
cmp
and
fldcw
push
pop
dec
mov
push
mov
js
lcall
jb
repnz
xlat
int3
ds
cmc
out
mov
ds
xor
mov
adc
into
fisubrl
add
ret
xorb
dec
xor
nop
mov
cltd
jnp
jae
ret
cmc
jne
jl
lahf
imul
xchg
jns
iret
rorb
fldt
push
fdivrs
mov
add
cmp
lods
iret
mov
mov
cmp
fldl
sbb
xchg
sbb
inc
cmp
leave
jle
dec
xor
int
push
mov
inc
lret
sahf
divl
mov
xor
dec
iret
jge
cmpb
jp
cs
pop
xor
in
xchg
or
sub
xchg
cmpsl
or
bound
xchg
or
in
cld
mov
jp
xor
pop
sti
push
fld
dec
inc
adc
test
stos
cmpsb
das
mov
mov
jg
outsl
test
push
cmpsb
cmpsl
cmpsb
dec
in
and
xor
movsl
inc
jle
add
jns
movsl
xchg
sub
icebp
add
sti
pop
rcl
mov
mov
jnp
rcll
jbe
ficoms
pop
leave
ljmp
jo
enter
inc
push
aad
xor
addr16
push
inc
push
cld
sbb
xchg
sbb
add
adc
xchg
adc
or
sbb
cmpsb
sahf
loopne
outsb
jecxz
xchg
pusha
in
sub
data16
notb
cs
xchg
outsl
adc
adc
sti
sub
dec
in
test
lods
inc
lret
in
and
pushf
int
jo
sbb
shlb
das
add
sub
addr16
pop
sar
in
cli
dec
shlb
subl
vpunpckhwd
clc
push
dec
es
push
mov
pop
cmp
fildl
or
cmp
aaa
rolb
nop
xchg
ja
jp
test
fdivp
mov
adc
xor
inc
stos
push
fdivl
xorb
push
mov
mov
sub
xchg
aaa
ja
mov
or
jge
clc
push
cmp
or
sahf
out
cmp
cs
in
mov
aad
sbbl
aaa
scas
std
int3
xchg
ds
pop
mov
ficomps
out
lret
jo
push
ljmp
test
test
aas
sbb
cltd
mov
imul
lds
rcr
int
pop
in
dec
jns
lods
roll
mov
jbe
mov
dec
xchg
movl
sub
js
sar
mov
cmpsl
outsb
jmp
mov
aaa
inc
cmp
push
or
lea
sub
sub
in
pop
mov
xor
inc
add
cmpsb
int3
lea
add
add
orl
rcrl
mov
sub
pusha
movsl
add
or
aaa
into
pop
orb
add
xor
xchg
nop
bound
pop
sarl
lcall
add
mov
mov
insb
fcmovnbe
jno
cltd
lea
repnz
das
je
in
cmp
mov
pop
xchg
stos
mov
punpckhbw
push
mov
fadds
or
ss
sub
call
or
out
repz
push
roll
sub
pop
insl
and
dec
int3
sbb
jb
jmp
sub
stc
in
cmp
mov
mov
pop
jecxz
out
int3
xor
xchg
jg
ds
jne
ja
clc
pop
mov
xchg
nop
add
aas
ficomps
pop
in
mov
sub
push
mov
in
lahf
fcmovu
push
push
lret
cwtl
jmp
and
jge
sub
mov
xor
in
push
int3
shlb
pop
add
inc
or
jno
xchg
xlat
movsl
insl
nop
pop
pushf
and
iret
jb
popa
js
push
inc
pop
and
fidivrs
push
jg
adc
and
insb
xor
das
loop
clc
lock
inc
push
stos
sub
push
arpl
xor
sbb
xchg
xchg
or
cmp
es
mov
iret
js
mov
mov
into
inc
in
mov
jg
xchg
add
and
lock
insb
mov
popa
sub
mov
int
and
je
int3
stc
sub
lds
std
mov
and
pop
dec
inc
jg
pop
insb
add
adc
jne
sub
mov
out
mov
pusha
xorl
mov
mov
call
jns
jg
loop
sar
notb
xchg
lods
dec
dec
loope
cmp
inc
xor
and
out
stos
lock
pop
popa
sbb
xchg
shlb
adc
fnsave
pop
insb
pop
cmp
cmc
adcb
les
lahf
scas
clc
and
shrb
jbe
mov
pop
dec
lods
mov
mov
imul
mov
dec
inc
push
sbb
inc
dec
xchg
dec
sub
add
adc
jnp
mov
jmp
xchg
into
mov
int
cmp
xlat
mov
in
push
test
inc
leave
pushf
in
fdivrp
mov
jns
lret
cld
mov
push
adc
xchg
add
jp
lods
in
call
movsl
out
ss
jno
xlat
iret
ret
jp
and
std
inc
dec
daa
xchg
mull
hlt
adc
out
lods
cmp
fisttps
push
movsl
loop
inc
push
mov
adc
xchg
inc
lret
xchg
dec
xor
push
in
and
mov
pop
fiadds
repz
xor
pop
sub
xchg
push
nop
and
or
ss
insb
dec
sub
loope
add
stos
into
pop
fldenv
inc
aam
dec
inc
mov
rcrb
xor
inc
jg
push
mov
ss
pop
and
pop
mov
mov
loopne
cmp
sub
orb
loope
fucomip
inc
lea
insl
mov
sbb
pop
repz
cmp
mov
cmpsl
outsb
pusha
lahf
xor
xlat
and
outsl
mov
into
ds
ret
push
or
and
ficoml
inc
cltd
dec
cmp
lods
mov
das
hlt
movsb
mov
inc
inc
mov
inc
push
sub
daa
dec
sahf
or
add
call
ret
xorb
pop
xor
add
inc
mov
pop
std
or
ja
sar
shrl
xchg
fildll
xchg
sarb
inc
jae
mov
xchg
jge
push
cld
arpl
sbb
rcr
jecxz
and
xchg
cmp
or
loopne,pn
xor
jo
sub
jbe
out
aad
rolb
xlat
add
add
jne
mov
jno
leave
xor
loope
pushf
mov
dec
push
loop
aam
mov
sbb
pop
pop
or
add
fsubr
inc
dec
icebp
push
sub
and
and
out
xor
cmc
arpl
lcall
popa
xchg
ret
ficoms
xchg
or
test
iret
xchg
test
pop
pop
out
lock
in
inc
xchg
mov
fidivrs
mov
push
xchg
jne
push
rol
das
cltd
add
ja
mov
mov
cs
jo
pushf
and
or
add
out
and
xor
shll
mov
ret
jle
push
dec
divl
or
into
dec
and
push
adc
push
mov
loop
sbb
cltd
das
icebp
test
in
mov
data16
sbb
push
sarb
jae
push
pop
add
mov
lea
iret
enter
sbb
jle
loopne
stc
cmp
ss
cltd
xlat
call
fisubrl
mov
and
mov
in
and
jno
jp
int3
cmpsb
inc
out
lock
cmp
in
jnp
inc
add
push
outsb
sub
sbb
mov
stc
cld
hlt
pop
add
xchg
into
adc
andl
jge
mov
lcall
push
mov
scas
push
xchg
loope
adc
cld
fwait
xor
adc
sub
xlat
jecxz
xchg
pop
addb
cmp
and
sbbb
xchg
jl
sbb
sub
bound
ret
add
and
jge
insl
les
loop
pop
adcl
mov
sub
cld
push
aam
mov
sahf
jo
dec
mov
xchg
sub
xor
dec
test
add
sbb
mov
sarb
pop
shrl
addr16
out
xchg
shl
inc
pop
xchg
add
cmc
clc
sbb
mov
adc
push
xchg
mov
pop
cmp
adc
lcall
sub
inc
mov
pop
rclb
jae
mov
fstpl
dec
cmp
dec
mov
dec
repz
xor
sarb
jmp
scas
popa
sbb
fstpt
in
cmpsl
mov
ds
ret
es
sub
or
or
iret
bound
mov
stos
xor
das
aam
jg
jle
push
outsb
mov
sbb
insl
bound
push
cmp
loopne
mov
mov
movsb
or
pop
js
xor
js
jbe
mov
repz
push
lahf
pop
cwtl
shll
inc
iret
cli
jo
cld
jmp
jne
nop
shrb
add
sbb
dec
fnstsw
xchg
mov
mov
add
push
adc
or
xlat
mov
hlt
jmp
pop
cmc
je
mov
sub
pop
inc
xchg
mov
jbe
jle
insb
pop
inc
mov
push
mov
pop
pop
add
das
xorb
aas
test
push
xchg
pop
cmpsl
cmpsb
xor
jb
iret
pop
mov
mov
fcmovnb
add
jg
stos
inc
int3
mov
lcall
add
jbe
add
outsl
out
in
push
sbb
fstpl
lret
pop
adc
jbe
adc
adc
mov
mov
xchg
add
mov
pop
fsub
mov
cli
arpl
mov
or
out
xchg
xor
mov
sbb
ljmp
mov
and
xchg
sub
insl
repz
jnp
sbb
ret
rcrl
outsb
out
ljmp
xor
rcll
std
inc
test
cltd
lds
mov
scas
sbb
xor
or
out
add
jl
mov
fwait
sarl
jmp
repz
pop
jmp
cmpsl
cld
ljmp
mov
pop
ja
mov
icebp
scas
pop
sbb
xor
cmp
cli
fs
or
or
mov
or
ja
sbb
mov
xchg
xor
shl
shrb
add
test
push
aad
mov
inc
mov
adcl
ret
push
xor
add
cltd
push
mov
xchg
and
jo
mov
je
push
fmul
push
loopne
mov
xchg
inc
mov
sub
repz
mov
int3
xor
hlt
xor
mov
ror
push
mov
or
jg
scas
jge
outsl
daa
xchg
outsl
cmp
call
out
in
and
or
std
pushw
add
cli
inc
jle
dec
loope
gs
cmp
repnz
cmp
xor
ret
call
jle
inc
insb
xor
push
push
dec
popf
xchg
jge
add
divl
lcall
aad
pop
out
push
and
mov
mov
xorl
xchg
sbb
test
nop
fwait
leave
cli
cmp
in
jle
outsl
inc
rolb
test
mov
mov
and
aad
je
icebp
pop
pop
xchg
dec
adc
lea
jno
sarl
mov
clc
mov
scas
hlt
xchg
mov
out
in
loope
jmp
adc
movsb
jp
hlt
icebp
shrb
sub
je
lret
pop
fldenv
or
mov
imul
or
push
mov
psrlq
leave
fsubrs
sbb
mov
lret
add
out
stos
cmp
hlt
push
cmp
bound
js
push
push
inc
jg
popf
adc
mov
scas
roll
adc
lds
push
cmpsb
sub
add
lret
push
adc
js
or
jl
xchg
or
nopl
jno
sbb
pusha
dec
pop
xor
add
es
push
xchg
pop
dec
add
test
int3
sti
jmp
adc
sub
pop
jnp
cmp
sbb
sahf
aad
sbb
mov
arpl
insb
lcall
adc
cmpsb
lcall
cld
mov
ds
fidivs
sbb
pop
gs
stos
mov
cli
xchg
inc
push
call
and
ret
sub
push
mov
inc
xchg
es
test
mov
push
daa
jbe
jmp
jmp
and
dec
or
dec
mov
ds
rcl
jno
push
fsubs
shl
mov
sub
add
rorb
cmp
inc
pop
pop
add
pop
movsb
jge
cmc
jns
push
cmpl
rclb
jle
add
add
and
cwtl
pop
push
popa
test
nop
movsb
or
adc
lcall
in
std
clc
xor
mov
sbb
cmp
push
inc
out
or
cmp
in
push
aas
or
cmpsl
cmpsb
ss
cmp
mov
ret
andl
adc
lcall
and
repz
testb
mov
adc
add
add
jns
subl
mov
mov
lahf
jbe
and
mov
shll
jno
mov
ret
push
popf
mov
ret
shll
js
mov
cltd
call
lcall
push
scas
loop
sbb
add
pop
fsubrs
int3
push
xor
jbe
out
inc
add
in
add
ret
pop
sbb
add
popa
aam
sbb
call
sbb
scas
int3
mov
movb
xchg
mov
jo
ret
push
lret
pop
jge
xchg
call
jae
push
mov
inc
and
nop
in
ss
push
inc
push
xlat
aad
sbb
push
xchg
jg
pop
push
int3
push
adc
pusha
ss
fldenv
or
mov
das
dec
fidivs
pop
push
or
and
or
inc
fistpll
stos
adc
js
lock
test
mov
sub
push
inc
jbe
or
inc
sbbl
sub
cwtl
dec
cmp
mov
cvtdq2ps
ljmp
pop
push
aas
sub
jp
fistps
xor
in
mov
lcall
inc
sbb
pusha
push
add
hlt
cmp
cltd
mov
pop
dec
adc
loopne
nop
jp
out
aad
in
rorl
testl
out
mov
xchg
cmp
rol
xchg
sarl
add
or
leave
adc
fdivs
pop
push
lcall
aas
inc
mov
mov
sub
fcmovnbe
sub
jns
mov
in
mov
mov
arpl
xlat
pop
dec
aad
inc
inc
jnp
cs
lret
je
pop
lods
inc
test
jne
xor
mov
cltd
dec
les
sahf
int3
cmp
dec
xchg
rcll
xchg
mov
push
sbb
orl
fcomps
pop
xchg
stc
and
xor
pushf
push
mov
push
cmp
loopne
jb
or
shrb
jp
jb
dec
xorb
mov
cld
cmpsb
mov
insb
fisubs
js
test
pop
xchg
jp
cmp
mov
mul
lcall
dec
mov
pop
cs
mov
je
xchg
xchg
push
push
lea
mov
icebp
adc
adc
pop
xor
stos
movsl
jle
int3
inc
pop
adc
jo
addb
popa
jns
cmp
add
pop
lds
xor
adc
jne
fldt
xchg
jge
mov
popa
aaa
xor
sub
xchg
mov
jp
and
adc
bound
pop
movsb
sbb
add
xor
jb
inc
dec
ret
mov
divb
in
mov
add
sub
jp
add
dec
pop
out
test
cmc
ret
es
or
cs
popf
fldcw
add
xor
lods
and
pop
or
adc
icebp
mov
outsb
inc
jnp
sub
pusha
ret
sbb
pop
cs
sbb
stc
int
mov
cmp
dec
fcmovne
cwtl
shl
fistl
pop
pusha
inc
outsl
sbb
cmp
fwait
cmp
shll
neg
xchg
inc
test
pop
push
add
push
push
xchg
mov
xor
xlat
or
and
dec
add
dec
rolb
stos
call
bound
cmpsl
xor
es
lret
add
lods
mov
ret
dec
in
cmc
push
sahf
loope
or
mov
mov
cmp
mov
ja
les
ret
mov
push
in
call
es
sbb
call
inc
mov
xchg
test
inc
in
pop
repz
jmp
imul
js
fs
bound
clc
push
inc
push
cld
loop
pusha
mov
mov
and
xchg
pop
push
inc
inc
cmc
inc
fwait
sbb
mov
pop
orl
xor
mov
xchg
call
insb
aam
xor
lock
push
xor
movsb
js
frstor
cmp
or
push
mov
push
aas
hlt
dec
scas
lock
sub
cld
push
shll
shll
mov
xchg
scas
or
jo
idivl
cs
shll
inc
faddl
inc
jns
mov
pop
test
xor
sub
stc
jnp
sbb
ljmp
xchg
add
adc
inc
adcb
cmp
ret
inc
out
es
add
outsb
stc
fstpl
scas
mov
mov
fsubrs
pop
and
xor
scas
inc
pop
adcl
jmp
insl
call
popa
xchg
inc
dec
ret
scas
lods
pop
cmp
add
mov
insb
ja
fwait
xchg
xchg
daa
loopne
jle
cmp
jecxz
pop
push
fwait
rcl
adc
inc
shlb
movsl
fadd
cmp
dec
aaa
jmp
js
add
movsb
lahf
add
sbb
lods
inc
xor
out
leave
iret
lret
dec
out
insb
push
clc
dec
mov
pusha
pop
lcall
add
adc
repnz
adc
divl
mov
push
xor
iret
fmulp
sub
xchg
in
imul
movsl
addr16
out
add
pop
shr
dec
dec
into
fsubrl
adcl
insl
sub
push
call
lods
sub
shlb
pop
xchg
xor
lcall
xchg
add
je
arpl
cmpb
roll
jb
loope
xchg
ja
incl
imul
fwait
sbb
and
pop
inc
ljmp
mov
fwait
mov
into
adcl
jbe
push
jo
scas
cltd
out
daa
notb
fwait
mov
xor
rolb
cli
addr16
push
in
inc
sbb
int3
subb
mov
push
jns
xor
sub
lret
call
adc
inc
mov
inc
push
mov
push
push
fdivrs
imul
stc
in
mov
loop
mov
sub
ss
aaa
jne
xor
xchg
mov
icebp
lock
les
filds
fwait
sub
lds
inc
adcl
jb
fiadds
stos
dec
repnz
sbb
lahf
jnp
mov
push
or
iret
dec
xor
iret
leave
kmovw
mov
and
push
jmp
insb
sub
stos
sbb
jl
jg
fnstenv
loopne
test
push
sahf
sbb
dec
in
push
pop
out
or
push
nop
rorl
jne
dec
rcll
xchg
xlat
jne
cltd
add
mov
push
xor
shll
outsb
or
loop
pushf
push
or
or
outsb
or
insb
subb
dec
mov
popf
hlt
push
fildl
dec
enter
add
mov
fsubrs
pop
push
gs
insl
in
cmp
mov
xor
inc
and
xchg
xchg
scas
xchg
pusha
icebp
int3
mov
out
insl
jle
fisubl
lods
test
push
in
cli
jmp
outsl
mov
popa
faddp
std
mov
cmc
stos
mull
mov
pusha
add
cli
xchg
push
lods
cmp
mov
jno
adc
inc
push
std
xchg
xlat
pop
mov
cmc
aaa
mov
or
outsb
loopne
pop
stos
divb
outsb
adc
imul
cmpsl
mov
std
imul
sub
std
xchg
cltd
ds
cltd
mov
jge
fs
ror
sub
hlt
push
je
xchg
shll
push
loopne
insb
imul
cwtl
xor
or
iret
in
or
xchg
push
mov
add
test
inc
out
inc
pop
lds
pop
icebp
sbb
pusha
sub
loop
cmc
inc
cmpsl
jg
aam
add
imul
xor
cmp
nop
sub
fisubrs
arpl
sarb
imul
rol
push
add
pop
add
out
scas
jl
mov
xchg
and
out
fcompl
in
mulb
cmp
fnstcw
scas
lods
loopne
lods
sub
mov
jmp
cmpsb
and
or
push
push
imulb
shll
loopne
leave
popa
inc
lret
and
test
sub
std
push
inc
dec
mov
scas
push
or
cwtl
out
xchg
mov
testb
popa
cmc
dec
cmp
cmp
sbb
mov
or
hlt
ficoms
sub
inc
cltd
xchg
test
mov
aad
push
in
xchg
mov
xchg
scas
xchg
adc
shl
sti
jb
addl
xchg
jno
and
dec
movsb
sbb
pop
cmp
xchg
jge
in
sbb
fimuls
cmc
inc
fistpll
push
lret
inc
jno
mov
or
jecxz
inc
jns
in
mov
dec
cmova
or
mov
cwtl
fldenv
xchg
inc
sub
mov
sbb
aad
ds
cmc
mov
pop
scas
push
fcoms
testl
dec
insl
dec
mov
push
dec
inc
pop
push
insb
out
jae
jp
cmpsl
add
cmp
ss
aad
and
and
push
xchg
cli
out
xchg
jbe
add
adc
cmp
aaa
andl
imul
sbb
jge
xchg
jne
pop
outsl
imul
negl
jne
jg
lds
mov
fidivrs
sahf
xchg
dec
andb
or
repnz
cmp
mov
dec
and
and
inc
jecxz
and
jnp
and
push
lea
push
daa
dec
fisubrl
xchg
aas
cld
ds
lods
mov
mov
lcall
cmp
jecxz
cmp
dec
and
push
cmpsl
mov
dec
push
sub
loope
push
cmp
push
shll
inc
lods
push
or
mov
fwait
sub
idivl
pop
mov
movsb
outsl
jmp
leave
mov
mov
jle
into
stos
push
xchg
sbb
nop
mov
shl
jecxz
dec
adc
sbb
mov
push
mov
insl
popa
jp
jae
jns
xchg
mov
jmp
in
lahf
dec
ljmp
scas
or
mov
ds
cmp
sub
mov
scas
jb
lret
and
gs
fwait
out
lock
insl
outsl
adc
test
rorb
dec
outsl
fisubs
stos
imul
fimuls
leave
testl
in
push
ret
lods
xor
jne
pop
jno
loop
test
push
add
cs
jo
inc
test
cld
shrl
loopne
mov
adc
xor
bound
jecxz
inc
sarl
mov
xchg
mov
push
adc
adc
and
lahf
out
shlb
jle
lret
stos
pop
xor
lahf
and
outsl
out
push
mov
xchg
push
lahf
xchg
or
and
adc
jnp
dec
pop
test
jl
inc
shll
insb
jmp
hlt
xor
roll
sbb
pop
adc
jge
fsub
lea
dec
pop
xchg
dec
lahf
jp
outsl
sub
push
mov
nop
rcl
int3
add
xor
xchg
fsubp
fldt
lods
mov
in
pusha
mov
adc
dec
xchg
push
cmp
testb
inc
or
sahf
jne
inc
adc
sub
lods
jp
mov
jp
xchg
pusha
cltd
ret
push
orl
int3
or
cmpsb
lods
jo
scas
cmp
mul
inc
adc
sti
lods
mov
and
into
enter
aas
lea
stos
out
adc
mov
and
adc
sbb
aam
shl
ret
jb
inc
xlat
or
push
jle
mov
je
jge,pn
and
jno
mov
mov
or
sub
inc
mov
mov
adc
adc
lret
movsb
into
cmovne
inc
cmpsl
loope
sbb
ror
adc
mov
sub
mov
mov
push
sti
xchg
or
ret
fsubl
inc
movsb
jo
lock
insb
es
inc
stos
cli
sbb
out
push
jl
add
cltd
jbe
push
aas
in
dec
mov
gs
pop
jge
ficoml
mov
inc
cmp
xchg
jo
dec
push
xor
adc
dec
rclb
fdivs
push
mov
cmp
xchg
mov
scas
shll
adc
insl
in
outsb
mov
pop
adc
cld
lret
and
mov
push
jmp
test
jne
arpl
loope
xchg
jae
ffreep
dec
in
fsubrl
dec
mov
lahf
test
or
jbe
aas
frstor
jnp
pop
out
add
in
xchg
mov
mov
dec
scas
mov
test
inc
push
mov
mov
jns
ds
mov
sti
or
cltd
dec
and
es
pop
pop
inc
icebp
mov
adcl
sti
fyl2xp1
fs
mov
adc
fistpl
mov
outsb
fs
jns
out
xor
dec
push
cmp
and
xchg
mov
mov
scas
ljmp
and
sub
sbb
inc
rorb
mov
sub
mov
jecxz
lahf
mov
popa
fucom
mov
mov
push
push
jge
xor
repz
adc
call
dec
stc
fistpl
dec
pop
rclb
pushf
jp
lods
pop
jns
stos
pop
sti
gs
xor
jge
jge
fisubrl
cmp
mov
cli
test
jne
andl
cltd
sbb
loopne
stos
dec
push
orb
nop
ss
mov
mov
inc
call
jp
cmp
and
add
das
xor
shrb
push
mov
mov
mov
push
addl
pop
movsl
cmp
xchg
xchg
inc
hlt
jo
test
mov
jbe
cmpsl
insl
loop
stos
sbb
push
mov
fwait
adc
dec
hlt
pop
dec
frstor
sti
movsb
test
cmp
sub
ret
sbb
popa
flds
cs
xchg
fistpll
and
mov
inc
push
mov
inc
inc
xchg
aad
push
cld
ds
pop
mov
dec
addl
mov
imul
cmp
push
cmp
adc
lcall
roll
test
ficompl
jns
loopne
push
fs
std
sbb
xchg
nop
xchg
jle
cld
push
mull
mov
mov
cmpsl
jl
das
repnz
mov
out
adc
movsb
sahf
in
arpl
dec
das
sbb
adc
and
sbb
mov
mov
add
fisttpll
lret
clc
mov
icebp
push
xchg
sahf
inc
xor
outsb
and
frstor
imul
sbb
fists
test
adc
jo
daa
gs
fidivs
mov
pushf
push
fwait
out
sub
fisttps
pop
into
jae
das
inc
test
addb
out
pop
pushf
ja
test
xlat
int
jo
inc
stos
and
and
lret
cmp
test
dec
jnp
popa
xchg
mov
sbb
leave
fwait
xchg
jns
and
mov
xchg
and
push
das
adc
cmpsl
int3
leave
mov
nop
lcall
shlb
aaa
pop
push
cwtl
pushf
jb
data16
test
or
add
lret
dec
insl
pop
xor
sub
lea
mov
sahf
xor
insb
xorb
pop
cli
pop
aad
cmp
stc
and
sub
lret
test
cmp
jb
inc
movsb
mov
enter
mov
cli
test
pop
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
jmp
dec
inc
sub
scas
push
adc
mov
addl
popf
jo
ja
add
in
or
mov
bnd
sub
mov
or
xchg
cwtl
push
lds
pop
sbb
xor
jae
hlt
mov
mov
leave
inc
inc
insl
push
les
jns
sbb
out
fidivrs
cmpsl
lahf
lret
jae
and
imul
mov
rclb
fdivrs
sbb
jno
mov
shrl
les
add
stc
push
dec
sub
mov
add
and
push
aam
sbb
inc
fwait
inc
add
fimull
xchg
xor
push
aas
jecxz
sub
ret
mov
jp
and
mov
std
or
sbb
out
in
jmp
inc
testl
mov
in
pop
push
lcall
shlb
js
jge
mov
ret
pushf
dec
bound
cmp
or
insl
lret
in
mov
mov
pushf
sbb
xor
dec
dec
scas
xor
mov
jnp
xchg
shlb
sub
ljmp
xorl
in
inc
mov
ret
das
pop
jmp
pop
sub
outsb
and
scas
or
sbb
xor
int3
shlb
dec
cmp
adc
cmp
sub
orl
in
lods
push
fildl
out
std
mov
adc
fdivrl
inc
and
in
xlat
jmp
xchg
mov
mov
xlat
add
movsb
jecxz
in
dec
dec
sub
sbb
sbb
rcll
sub
cld
sub
fisubrs
xchg
int3
imul
or
fisubs
test
jmp
insb
js
sub
dec
xor
and
sti
ja
cmp
jbe
cmp
out
dec
and
insb
into
aaa
xor
aam
sti
sbb
jp
jl
and
aam
popf
test
mov
mov
getsec
lds
push
sar
add
dec
scas
imul
jle
xorl
or
push
test
scas
sti
dec
dec
div
test
jno
inc
rorl
pop
add
mov
popa
mov
fiaddl
jp
add
mov
addr16
testl
mov
rcl
in
jne
js
leave
mov
cltd
into
mov
dec
mov
xor
adc
jp
scas
inc
gs
out
jmp
xchg
ret
ds
jecxz
cmpsl
leave
out
pushf
sbb
xchg
or
movsl
xor
fcmovnbe
in
ja
sub
hlt
and
adc
mov
dec
lcall
popa
pop
pop
jle
out
jo
and
xor
out
hlt
sub
bound
shlb
bound
psllw
aas
push
dec
mov
std
mov
fdivrs
repz
jns
and
mov
sub
aas
ret
xchg
aam
sarl
outsl
pop
add
insb
jae
fisubrl
add
or
xchg
mov
add
dec
adc
jle
add
sti
inc
hlt
popa
lret
pop
das
cmp
insb
subl
inc
test
js
stc
ds
fidivs
test
ljmp
mov
das
jmp
outsb
mov
and
jae
xchg
xchg
lods
add
daa
das
mov
xor
jp
push
addr16
shrl
rcrl
mov
stc
mov
cmpsb
jo
int3
jg
mov
and
notb
jge
stc
out
clc
stc
leave
fsubrl
outsl
notb
pop
sti
lret
sub
mov
push
push
fcmovbe
clc
mov
xchg
sbb
fcmovnb
cld
and
mov
mov
or
in
push
lods
sub
mov
or
mov
jg
sbb
int
sbb
sahf
imul
add
ret
inc
sbb
jmp
in
fldcw
insl
mov
inc
xor
push
stos
pop
in
xchg
out
mov
cmp
sub
pop
jge
xchg
stc
cli
inc
adc
mov
jno
push
rorb
pop
arpl
mov
xchg
jne
andw
push
and
daa
cmpsb
jbe
push
js
rolb
flds
adc
and
fsubrl
inc
add
cmp
je
jbe
out
pop
test
inc
sub
mov
imul
mov
pusha
aaa
jne
popf
in
push
add
daa
push
pop
aas
scas
adc
push
jl
mov
mov
mov
aaa
dec
pop
cltd
popw
pop
mov
ficompl
xor
xor
xor
pusha
jnp
jno
sbb
fsub
movsl
lds
jle
mov
jp
scas
push
and
fmull
mov
fadds
and
sub
xor
sbb
stos
pop
or
loopne
es
aam
mov
mov
mov
fwait
push
push
insb
ret
mov
push
adc
adc
dec
xor
cmpsb
pop
push
mov
and
cwtl
jmp
into
sbb
pop
inc
dec
sbbl
mov
popf
andb
popf
xchg
xchg
add
jbe
add
add
repz
add
or
pop
jl
inc
pop
pop
sub
push
mov
mov
mov
stc
inc
outsb
in
sbb
xchg
gs
mov
adc
cmovne
xchg
gs
stos
addps
lds
pop
mov
aas
or
lcall
inc
pop
leave
mov
ja
pop
mov
repz
das
jne
pop
dec
incb
into
and
xor
push
dec
lock
mov
xchg
loopne
xor
jae
enter
cmpsl
in
sbb
outsl
pusha
subb
loopne
mov
aad
sarb
mov
int3
mov
lds
mov
stos
sub
aam
dec
add
dec
xchg
adc
outsl
pop
aaa
repnz
jg
xchg
sbb
xchg
sbb
or
push
movsb
jno
repz
clc
sbb
xchg
clc
add
mov
scas
and
mov
push
cltd
inc
push
xor
jle
daa
or
and
dec
sbb
sbb
xor
push
sti
pop
jmp
jecxz
sahf
and
stc
stos
stc
sbb
add
lahf
test
jae
jne
imul
orl
cwtl
gs
pop
sub
movl
ficoml
push
mov
sub
xchg
das
push
lods
pop
add
movsl
sbb
iret
xchg
fs
jne
call
xlat
in
mov
out
enter
pop
ds
into
lret
or
test
aaa
or
insl
mov
mov
push
decb
pop
adc
ret
mov
addr16
mov
mov
pop
cmp
test
rolb
movsb
xor
loopne
aad
fxch
cwtl
adc
outsl
sub
and
movsb
add
sub
jecxz
cmp
out
or
pop
xchg
repz
movsl
imul
dec
cmp
inc
push
sbb
cmpsl
lods
cmp
sahf
jb
mov
adc
in
rcll
xchg
push
shll
jmp
scas
fwait
ret
out
mov
jecxz
sbbb
gs
insb
adc
fwait
xor
mov
idivb
dec
int3
push
xchg
scas
mov
fwait
mov
ds
cmc
xor
mov
scas
gs
jnp
lods
jle
mov
fcmovb
addr16
jp
or
mov
push
pop
push
xchg
push
stc
pop
fwait
mov
push
and
mov
mov
mov
hlt
lock
shrb
add
cltd
in
insb
xchg
imul
fs
jb
call
cld
ret
jmp
imul
push
popf
es
or
jp
fstps
push
mov
mov
aas
out
lret
jmp
sbb
and
push
in
fildll
into
shll
jne
push
ljmp
pushf
div
popa
push
push
lcall
aaa
test
fldcw
jecxz
xlat
mov
cmp
es
mov
stc
mov
cmc
clc
xor
xchg
adc
rorb
mov
repnz
mov
xlat
movsl
mov
cmp
xor
xchg
loop
out
stos
int3
pop
leave
mov
push
outsl
aad
sbb
mov
mov
mov
loope
mov
out
inc
inc
xchg
push
insb
loop
pop
aaa
sub
dec
inc
jnp
enter
scas
and
and
and
mov
mov
fadds
pop
xchg
ja
stos
cmp
out
push
rolb
js
inc
fildll
popa
test
out
pop
fstps
fnstcw
cmpsl
sbb
adc
aaa
bound
or
dec
push
int
xlat
iret
pop
enter
jge
call
lock
or
inc
inc
call
gs
add
fdivrs
mov
call
jb
call
ja
jno
push
xchg
cmpsl
fistl
mov
fscale
shrb
fmul
outsl
movsl
dec
filds
push
jne
adc
mov
rorb
mov
std
into
filds
cmp
bound
test
jmp
sbb
xchg
cmc
int3
in
dec
mov
inc
int
push
sub
out
loopne
test
test
cmp
out
filds
inc
js
cs
stc
ds
sbb
outsl
popa
scas
mov
push
out
sub
push
push
test
cwtl
cmp
enter
xchg
mov
int
insl
pop
mov
fwait
mov
add
mov
dec
lcall
jp
outsl
add
enter
lods
inc
leave
ret
add
add
scas
pop
lds
je
xchg
dec
stos
imul
dec
data16
scas
xchg
rclb
xchg
int
adcb
lods
je
sub
mov
pop
pop
pusha
shl
sub
lock
mov
fidivs
stos
out
or
sub
fwait
jno
daa
cmp
mov
es
sub
cld
lock
loope
jmp
mov
ljmp
addr16
jg
fwait
cltd
subb
int3
push
sbb
sub
xchg
dec
fwait
jns
dec
xchg
and
outsl
in
jecxz
testl
aam
sahf
mov
dec
lods
push
shll
js
ss
popa
xchg
jbe
stos
lahf
insl
iret
push
lcall
push
aas
arpl
pop
pop
int3
sub
push
rcrb
push
add
add
lret
xchg
int
jae
add
hlt
sub
jae
frstor
popf
in
mov
or
jo
push
rcll
in
sti
inc
loope
fstl
adcb
nop
loope
iret
push
push
dec
iret
mov
inc
pop
or
stc
out
cmp
xchg
and
aad
js
pop
mov
or
fiadds
lock
inc
xchg
inc
mov
and
sbb
jbe
mov
pushf
xchg
imul
push
and
sbb
nop
jns
mov
loopne
adc
jo
icebp
repnz
inc
mov
lahf
xor
cwtl
xor
pop
mov
fisubl
ret
jl
mov
xlat
xchg
push
adc
or
mov
hlt
xor
mov
fwait
stos
shll
or
push
aad
jb
pop
call
mov
lods
cmp
negl
lcall
sti
inc
jecxz
mov
mov
mov
jecxz
cs
pop
int
cmp
movl
stc
das
cmpl
scas
dec
iret
push
mov
add
lock
imul
lods
cmp
pop
adc
aas
cs
inc
and
ljmp
sbb
mov
clc
sbb
test
daa
lock
jae
addr16
sbb
rcr
dec
mov
enter
pop
aaa
ss
jae
push
in
mov
push
adc
cmp
fsubrl
test
add
popa
hlt
sbb
mov
lds
loopne
mov
adc
push
out
add
int3
adc
or
lods
xchg
movsl
mov
fcomp
fadds
lret
aam
rcrl
stc
loop
adc
mov
pusha
mov
nop
lds
clc
loop
outsl
fwait
dec
sbb
pop
push
xchg
test
gs
hlt
orb
jne
fstp
in
getsec
dec
jmp
inc
movsl
inc
inc
jb
ret
repz
push
jmp
push
dec
mov
sub
jge
popf
push
and
lahf
pop
test
pop
xlat
sbb
jl
or
stos
sbb
adc
leave
fiaddl
and
int
add
int3
mov
pusha
jmp
sbb
jp
mov
pop
sub
test
mov
ljmp
cmp
loop
xor
xor
lahf
shrl
sub
jnp
outsl
xchg
out
pop
cmp
adc
pop
out
or
dec
insl
ja
push
ljmp
lea
cwtl
hlt
mov
jns
test
fs
cs
sbb
das
ljmp
pop
push
push
or
in
inc
adcb
cmp
jge
mov
push
sub
push
orl
push
in
iret
stc
out
les
outsl
xchg
cs
jecxz
mov
pusha
xor
fistpl
lds
jp
xchg
dec
push
push
jge
mov
mov
and
jne
pop
dec
push
dec
rolb
pop
ljmp
int
dec
daa
fnstcw
jl
pop
mov
cwtl
repz
stc
xor
repnz
jecxz
adc
cmp
dec
imul
ss
sti
inc
out
mov
or
mov
and
adc
mov
and
pop
ljmp
push
jecxz
mov
leave
negl
cmp
push
jmp
and
add
int3
sbb
fcmovb
das
outsb
cmp
lock
cmp
testl
mov
and
push
jl
cmp
adc
insb
cld
loop
imul
incb
and
fwait
ret
mov
mov
aas
lcall
cmp
gs
jp
aam
and
scas
ja
jae
dec
outsb
shrb
test
and
rcr
gs
push
scas
jp
divb
mov
and
mov
xchg
xor
xchg
iret
out
daa
popf
jnp
cld
inc
sbb
jno
inc
inc
pop
rolb
subl
pop
jb
addl
shlb
icebp
jae
mov
jo
xlat
mov
test
lea
cmpsb
sub
sbb
cwtl
jbe
test
sbb
cmc
sbb
test
dec
mov
cmc
pop
mov
popf
mov
mov
xchg
jne
test
mov
sbb
repz
xchg
clc
into
adc
imul
test
lods
and
cmp
or
mov
out
faddl
xor
sub
shll
imulb
stos
dec
and
in
sbb
inc
loopne
stos
jne
inc
dec
aas
lock
outsl
push
aaa
or
mov
lcall
pop
push
mov
lods
mov
fwait
mov
mov
lcall
es
push
rclb
and
inc
ljmp
pop
mov
cmpsb
pop
mov
jle
mov
popf
push
adc
scas
movsl
decl
push
cli
jnp
jmp
jp
int
sti
add
and
ss
cmp
test
shlb
push
mov
pop
stc
adc
ljmp
mov
sbb
jbe
and
add
add
xchg
xchg
xor
dec
popa
imul
add
sarl
mov
add
cmp
adc
in
data16
or
xchg
pop
cld
xchg
dec
jbe
cmp
sub
fistps
push
and
add
mov
mov
cwtl
push
jne
or
insl
jmp
jae
cmp
in
adc
ret
js
push
jge
pop
dec
mov
push
sbb
int3
or
sub
mov
jle
fs
das
push
and
std
mov
cmp
jno
jns
sub
cmp
jecxz
outsb
jno
movsl
cmp
push
ja
push
test
mov
mov
push
test
jae
movsb
pop
arpl
test
sar
mov
shrl
xor
add
sahf
cli
cmpsb
sub
fidivrl
aaa
jg
sub
push
push
inc
stos
popf
sbb
orl
adc
mov
inc
pop
mov
and
dec
jmp
push
jae
sub
lret
hlt
shl
test
stos
ret
jb
inc
lock
fwait
mov
orb
int
stc
mov
aaa
and
clc
test
xchg
popa
jle
gs
xchg
rcll
push
stos
insb
and
mov
pop
lret
inc
pop
pusha
lcall
jno
andb
jno
jge
dec
jne
rcr
mov
cmpsb
jecxz
dec
mov
ret
enter
push
shl
sub
ret
xchg
testl
insl
pop
insl
mov
shll
out
cltd
aas
add
int3
pusha
xchg
std
sub
or
inc
sub
je
cmp
sbb
sub
outsb
and
subl
jne
lcall
xor
popf
nop
pop
and
xlat
jecxz
int3
jmp
insl
dec
sahf
sbb
push
xor
sbb
not
ret
addr16
cmpsb
out
int3
jo
mov
repz
shr
js
push
bnd
das
ret
wrmsr
das
sbb
sub
xor
push
jl
scas
sbb
cwtl
mov
hlt
dec
mov
call
pop
cmpsb
sbb
mov
dec
cmpsb
sub
icebp
pop
mov
cld
in
cli
xchg
aam
out
jg
stc
aam
cmp
nop
andl
lds
jnp
movsb
add
ss
jns
lods
lods
insl
movsb
fdivrs
shll
stos
and
lock
dec
popa
movsb
jmp
push
fs
mov
xchg
dec
fdivrl
ja
cli
and
fstps
mov
in
std
jmp
fcoml
jg
arpl
mov
les
fnstcw
xor
test
push
call
fistpll
popa
out
dec
push
out
popa
sbb
call
mov
push
xor
arpl
jp
mov
lock
loopne
sub
push
mov
and
sarb
aaa
jle
adc
sarb
shlb
push
ret
sub
push
jno
adcb
xor
nop
push
daa
mov
sbb
lahf
mov
or
inc
cmovs
scas
into
mov
icebp
out
out
lods
cltd
push
addr16
jno
cltd
jne
adc
push
lahf
jge
lret
sahf
shlb
cmp
dec
mov
inc
jmp
cwtl
sbb
xchg
jno
inc
xchg
test
xlat
fwait
popa
xchg
ret
mov
adc
test
cmp
cmp
mov
aas
jmp
loope
test
push
jbe
pop
addr16
imul
insl
push
mov
inc
inc
imul
push
cmpsb
fldcw
xor
pop
mov
jle
mov
data16
in
aas
sub
outsl
leave
or
js
mov
in
stc
mov
xchg
sub
add
dec
jne,pn
insb
inc
push
out
pop
adc
push
jnp
ds
adc
pop
mov
shll
int3
mov
hlt
adc
mov
push
call
mov
enter
fstpl
sub
lret
or
pop
jo
xor
sti
mov
xor
lcall
movsb
push
insl
jno
xchg
cmc
jne
enter
push
pop
xchg
jl
cmp
dec
xchg
pop
push
mov
mov
mov
cmp
repz
cmp
loopne
mov
lods
jmp
push
lods
jl
pop
fisttpl
jecxz
dec
jnp
jp
dec
xor
push
xor
shrl
fsubrl
lea
rcrb
xchg
push
rorl
scas
xchg
xchg
jg
xor
and
mov
bound
cmp
cld
popa
mov
cmpsl
repnz
outsl
loop
cmp
mov
sarl
mov
lea
push
and
mov
sub
jns
pop
mov
add
es
push
inc
push
inc
xchg
pop
lahf
fcmovu
add
in
imul
lock
repnz
jb
cmp
jl
pop
mov
xchg
pop
sub
int3
pop
adc
adc
lret
push
adc
std
cmp
pop
mov
cmpl
pop
add
out
aaa
ss
xor
push
arpl
add
es
les
inc
out
inc
jge
mov
stc
lcall
fistps
es
push
out
mov
sbb
int
movsl
testb
cmp
pop
pop
fwait
icebp
call
cwtl
aas
xchg
popf
lahf
cwtl
leave
sbb
fstp
cmp
sbb
in
adc
xchg
and
push
iret
mov
jecxz
jbe
lea
pop
dec
mov
bound
outsl
popa
das
dec
adc
push
mov
dec
push
xchg
mov
jecxz
mov
push
jmp
xchg
in
data16
xchg
sbb
les
not
movsb
inc
aad
scas
xchg
call
or
inc
jp
test
arpl
scas
pop
push
aam
data16
push
mov
adc
jbe
ficomps
inc
lds
shll
lea
sti
lret
or
ja
movsb
loopne
std
jp
pop
push
fsubrl
daa
sti
insb
les
mov
mov
sbb
imul
mov
cltd
shrb
repnz
cmc
mov
js
add
insl
mov
add
sub
mov
mov
aas
sbb
xchg
pop
push
test
hlt
jp
xor
lret
adc
jl
mov
clc
xchg
movsl
test
mov
xlat
or
aas
xchg
adc
dec
jp,pn
mov
in
stos
sub
not
cmp
xlat
push
nop
fistl
idivl
shl
adc
gs
pop
pop
cld
icebp
or
lods
push
add
mov
pop
mov
mov
cmp
inc
inc
adc
mov
scas
movsb
test
inc
rcrl
push
imul
cmp
test
mov
fstps
movb
repz
pop
adc
je
jle
pushf
leave
and
xlat
add
iret
out
cli
cs
or
jg
dec
leave
aad
ds
push
outsb
dec
int3
cwtl
js
mov
push
in
fstpt
jmp
or
aaa
aas
cmp
loopne
negb
repz
adc
loopne
outsl
lds
aas
and
cld
imul
mov
add
add
sub
ftst
add
sub
mov
call
sbb
subl
repz
cltd
sub
mov
stos
lods
out
gs
daa
or
dec
jnp
and
jns
push
and
aad
fidivl
clc
mov
ja
inc
pusha
outsl
ds
in
mov
shlb
pop
ljmp
pop
dec
shrb
xor
mull
arpl
lret
sbb
mov
pop
mov
aam
xchg
jo
rcll
fwait
inc
jo
loope
xor
ja
jnp
push
cmp
arpl
mov
int
mov
lret
jbe
dec
mov
mov
push
imul
inc
rcrb
les
mov
loop
pop
scas
mov
inc
loopne
lret
sub
sub
enter
xor
stos
inc
pop
inc
outsl
jge
cli
data16
sbb
or
aas
sti
aaa
out
es
cmpsb
pop
xor
jp
cmp
xcrypt-cbc
cmpsl
aam
sub
fstps
lock
je
dec
test
ds
push
dec
sbb
ret
sahf
xor
ret
aam
cmp
add
sub
mov
mov
and
adc
dec
leave
xor
stos
insb
mov
cmp
or
mov
xchg
arpl
inc
fadd
pop
test
push
scas
lcall
jle
inc
sahf
jno
out
ret
sahf
sbb
pop
sub
imul
adc
add
adc
mov
xchg
lods
xchg
mov
cltd
ds
cs
jp
push
sbb
stos
inc
rcll
hlt
xchg
fidivrs
add
movsb
push
cmp
push
mov
int
idiv
sbb
shll
gs
mov
lret
aad
pop
sub
insl
ds
adc
and
ds
fsubs
sub
iret
clc
inc
sub
cwtl
push
adc
lods
jg
lods
test
loope
jnp
xor
cmpsb
pop
and
mov
and
outsb
incl
pop
jge
in
out
ss
cmpsb
lret
cmpsb
jae
cltd
pop
scas
stc
mov
icebp
daa
push
push
stc
jo
push
lahf
xor
mov
inc
inc
fldl
ret
inc
aam
js
ja
jb
rolb
add
and
je
xor
arpl
cli
cld
adc
clc
fbstp
xor
push
cmc
push
add
mov
xchg
pop
lret
int
push
push
push
and
inc
mov
add
test
jmp
mov
and
pop
jo
pop
xlat
push
mov
lret
sbb
loopne
push
sub
push
roll
pop
fiaddl
je
add
sub
push
andb
pop
and
mov
cmc
aas
adc
dec
push
stos
dec
cmp
sub
sub
pop
dec
jecxz
sbb
xor
pop
and
insb
test
inc
mov
mov
negb
dec
aam
xchg
pushf
inc
bound
push
imul
xchg
pop
sub
adc
mov
cwtl
adc
and
dec
lret
cmc
sbb
inc
dec
mov
adc
mov
push
popf
loope
int3
pop
mov
xchg
insb
pushf
mov
insb
ret
mov
mov
inc
sbb
aam
mov
xchg
lcall
push
dec
push
incl
xor
inc
xchg
pop
sahf
in
dec
js
pushf
cmp
and
and
pop
shll
or
shll
xor
out
inc
push
das
and
and
pop
movsl
add
out
pop
shr
stos
cmpsl
call
or
outsl
stos
test
push
cli
adc
push
out
mov
mov
lods
cltd
inc
jp
cmp
pop
add
mov
cmpsb
add
jp
in
push
mov
jno
dec
fnstcw
xchg
lcall
push
xchg
or
sbb
sbb
insb
push
pusha
mov
mov
fidivrl
scas
das
sbb
dec
andl
mov
mov
cwtl
push
aam
orb
mov
dec
mov
push
dec
jmp
push
inc
arpl
add
push
xchg
lret
jge
clc
lea
stos
cmp
push
adc
sti
adc
xchg
add
arpl
rcll
cmp
inc
inc
adc
imul
add
lret
jae
test
cmp
in
xchg
iret
das
and
lods
outsb
adc
stc
cwtl
jp
shr
pop
andl
push
jg
pop
imul
test
scas
add
sub
mov
orb
xor
xchg
sub
push
or
cmp
dec
addb
dec
dec
and
leave
or
mov
and
iret
in
out
sbbb
xchg
fdivrs
addr16
cmpsb
push
stc
and
mov
mov
sub
or
xchg
push
jecxz
mov
add
or
xchg
ret
test
push
jge
jns
pop
add
inc
iret
pop
mov
xchg
aad
adc
mov
sbb
and
dec
mov
aad
mov
lret
push
sbb
lea
popf
mov
js
adc
push
mov
lds
sbb
jle
sbb
mov
mov
in
mov
mov
and
mov
outsb
push
xchg
test
lret
rolb
shlb
and
in
jno
adcl
les
cwtl
je
xchg
push
xchg
ljmp
leave
sbb
push
test
iret
into
dec
dec
sub
inc
test
jp
cli
shl
push
cmp
pop
inc
das
mov
push
fsubrl
inc
ficomps
aas
mov
enter
loope
aad
jl
mov
into
jnp
jne
mov
sub
sub
push
call
or
aam
imul
push
mov
sbb
inc
sti
aad
out
sub
testl
push
mov
test
mov
fistl
mov
adc
cmp
mov
lret
sbb
add
shlb
adc
mov
insb
add
pop
fucom
negb
push
adc
inc
xchg
fs
inc
clc
lods
jno
xlat
insb
inc
in
call
pop
xor
sub
pusha
mov
icebp
loopne
add
push
mov
and
sub
jmp
adc
push
xchg
jmp
cmp
cmpsb
xlat
pop
and
pop
push
lcall
enter
sbb
imul
sbbl
pop
das
mov
mov
jp
add
jle
add
adc
ret
adc
enter
add
cmp
popl
push
mov
lea
hlt
fcompl
push
adc
fisttpll
mov
push
push
les
mov
dec
mov
and
mov
inc
jb
aad
mov
add
aad
insb
lock
xor
sarl
in
enter
mov
rcl
lea
push
xor
and
cli
iretw
insl
repnz
adc
cmp
pushf
aas
movsb
mov
clc
jnp
rcr
negl
sbb
bound
push
push
hlt
or
jmp
je
dec
std
jg
and
inc
out
adc
dec
sbb
and
repnz
adcb
cmp
xor
fildll
andl
or
add
adc
pusha
mov
xor
jo,pn
adc
cld
xor
bound
fcmovne
dec
sbb
pop
adc
dec
arpl
sbb
jns
insl
xchg
mov
or
add
add
ljmp
jo
clc
pop
insb
cmp
xlat
clc
cmp
enter
lds
mov
frstor
mov
or
cmp
jl
je
xor
pop
dec
pop
jge
add
jl
inc
mov
nop
add
das
push
pop
imul
notl
ljmp
push
int
outsb
adc
mov
movsb
lret
fnstcw
and
mov
data16
xor
enter
adc
pop
adc
bound
sar
dec
arpl
dec
andb
cmc
and
sarb
icebp
push
sub
inc
mov
fwait
or
cmc
pop
adc
cltd
or
xor
sbb
push
pop
jno
dec
negl
cmp
fucomip
inc
dec
inc
mov
cmp
iret
push
pop
sbb
pop
daa
push
leave
mov
fisttps
adc
mov
push
in
dec
inc
loope
or
or
sub
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
sbbl
xor
sbbl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jb
movl
push
movl
mov
push
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
orl
xor
subl
push
addl
mov
andl
add
mov
mov
addl
test
je
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbb
mov
mov
and
mov
xor
movl
cmpl
je
cmpl
jg
jmp
push
push
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
add
mov
sub
mov
add
xor
adc
add
add
mov
mov
add
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
push
push
call
jmp
add
mov
movzbl
add
mov
mov
xor
mov
or
add
andl
mov
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jb
mov
andl
sub
subl
lea
xorl
xor
adcl
xor
cmp
je
mov
sbb
mov
mov
xor
add
movl
cmp
movl
jne
xorl
pushl
call
xor
mov
mov
mov
sbb
mov
sbb
mov
xor
add
movl
cmp
je
pushl
pushl
movl
call
mov
adc
mov
adc
mov
subl
xor
adcl
add
cmp
movl
je
xor
add
and
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
adc
mov
mov
orl
add
and
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
adcl
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
jmp
mov
mov
pop
add
jl
adc
addl
add
loope
lds
leave
mov
cld
push
adc
divl
inc
nop
pop
mov
inc
outsl
popf
lahf
jmp
fdivrl
or
js
and
adc
das
int
adc
push
fcoms
jmp
mov
xor
ret
xlat
lea
outsb
adc
into
in
mov
fsubrl
mov
enter
lock
popa
add
or
jns
mov
repnz
adc
fs
jno
cmpsb
pushf
mov
push
sub
mov
daa
lahf
dec
mov
mov
pop
leave
jg
das
fists
jmp
mov
lcall
adc
andl
call
adc
jge
into
jmp
lahf
push
das
sbb
cmc
shlb
mov
mov
mov
dec
lds
leave
mov
cmp
sbb
cmp
xlat
pop
and
xor
out
out
test
cmp
std
pop
push
test
ss
mov
adc
push
icebp
lock
sahf
dec
into
push
jbe
cs
add
shlb
jo
mov
cmp
mov
pop
pop
iret
dec
jle
mov
dec
call
mov
ja
inc
sub
pop
adc
sub
mov
andb
push
push
insl
ja
mov
jo
xor
push
pushf
xor
nop
dec
mov
sbb
jb
dec
jge
adc
mov
out
or
mov
repnz
inc
fstpt
xor
subb
cmp
sub
xor
aad
test
pop
jnp
insb
aas
out
xor
pushf
dec
out
pop
sarb
ds
push
push
add
or
imul
test
cmp
pop
test
dec
mov
lret
add
outsw
lds
pop
inc
mov
jne
int3
bnd
xchg
pushf
cmp
stos
cmp
jle
add
stos
add
rcrl
inc
fistps
pop
sar
shrl
call
inc
jmp
pop
enter
inc
or
imul
iret
fimuls
mov
lret
js
mov
fnstsw
iret
jb
push
push
or
adc
out
popf
mov
pop
add
pop
jo
mov
cmp
push
fs
dec
sub
in
inc
int3
and
push
and
or
adc
sub
add
sbb
std
pop
sub
dec
pop
scas
mov
and
dec
cli
pop
mov
cmp
sarl
xchg
lds
cmc
and
xor
add
jns
mov
mov
popa
fisttps
insb
xchg
out
and
jp
add
add
pop
test
stos
push
and
push
insl
movsb
inc
and
xchg
out
cmpsl
xchg
xchg
mov
lret
inc
ret
es
jb
or
dec
repz
push
sbb
fcomps
mov
xchg
and
xlat
xor
push
in
aas
aaa
imull
sbb
push
or
addr16
lds
adcl
or
cmp
push
xchg
hlt
cmp
lock
and
add
jo
rcll
hlt
lret
jmp
pop
mov
das
leave
xorl
pop
ja
push
cli
movsb
cmp
and
cmp
loope
aam
dec
add
adc
movsb
sbb
or
negl
stos
mov
pop
push
mov
shl
jno
test
loopne
push
and
pop
ss
or
jecxz
jl
or
push
jbe
jecxz
xchg
jecxz
es
jmp
xchg
xor
mov
xor
mov
push
mov
and
add
out
add
xor
sub
out
repz
and
pop
rolb
test
in
in
arpl
pop
adc
and
out
mov
jb
pop
mov
insb
add
mov
popa
repnz
ret
lods
fisttps
jne
arpl
bound
push
repnz
push
or
in
bound
add
in
dec
int
dec
push
jmp
movsl
ja
dec
sub
outsb
or
lret
push
xchg
pusha
jno
adc
int3
adc
lea
rcrb
mov
push
repz
sbb
sarb
add
sbb
fstps
add
lods
cld
inc
in
push
pop
cwtl
lret
mov
jp
aaa
testb
adc
scas
hlt
mov
inc
push
dec
cltd
xchg
inc
mov
mov
inc
push
and
into
pop
loope
stos
dec
mov
cs
aas
shrl
mov
and
push
js
insb
lahf
leave
or
loope
xchg
into
mov
jl
dec
mov
cmp
sbb
mov
xor
addb
mov
loope
mov
aam
pusha
sbb
sub
lret
pop
and
lods
pop
adc
inc
adc
push
inc
in
adc
testb
cmp
sahf
mov
mov
and
icebp
call
mov
dec
aad
loope
out
xchg
add
mov
lea
sbb
into
fwait
lods
js
or
xor
dec
outsb
mov
mov
ja
or
lock
rcrb
push
jge
jp
ljmp
and
sbb
mov
int
jmp
mov
mov
and
cwtl
cmp
inc
fsubs
mov
mov
lret
scas
mov
icebp
sub
mov
sbb
jmp
or
imul
inc
dec
out
out
repnz
jp
iret
fcomps
xchg
cmc
or
stos
adc
daa
daa
xchg
push
inc
loop
out
or
fisttpl
hlt
jge
fists
icebp
dec
in
out
xchg
aad
inc
pushf
and
adc
hlt
ja
out
cs
xchg
push
and
mov
or
fsubs
mov
mov
xor
leave
xor
cwtl
jecxz
sbb
ja
insb
sbb
ret
movsb
imul
adc
sar
dec
pop
mov
sbb
in
inc
ja
cmpsl
or
jbe
fmull
fisubrl
jg
stos
push
dec
cmp
ret
jp
cmp
mov
loopne
fdivs
popf
stos
jl
in
lods
pop
outsb
jns
test
testl
push
cmc
repnz
or
mov
loop
ja
pop
cmp
into
inc
mov
push
sbb
sbb
xchg
push
mov
mov
inc
mov
fwait
and
push
out
mov
cltd
push
sbb
mov
aad
sbb
push
mov
lea
pop
xchg
imul
mov
cmp
sbbl
and
cmpsb
gs
pop
cmp
xor
fwait
mov
add
xchg
inc
out
pop
pop
dec
pushf
rorb
loopne
jne
lods
pop
dec
push
and
outsb
pusha
jno
dec
xchg
adc
cmp
es
add
aaa
xchg
jo
xchg
stc
adc
and
or
fdivrp
mov
xchg
mov
jnp
and
idiv
add
testb
lock
pushf
or
les
jo
pop
cmp
xorb
addr16
xlat
into
xchg
adc
pop
fcmovnb
sbb
imul
mov
shll
popa
cmp
adc
xchg
mov
sarb
in
sub
lcall
sub
ds
int
stos
ret
lods
push
sbb
popf
jb
and
cs
sbb
sbb
lds
in
mov
test
pop
adc
or
or
ficomps
or
pop
mov
add
pop
insb
into
out
les
rolb
out
ret
xor
ds
cmc
add
mov
gs
xchg
xor
repnz
push
add
aad
test
inc
movsl
inc
jecxz
stos
insl
jo
data16
shr
pop
test
pop
ret
sbb
cpuid
fdivrl
and
mov
bound
fnsave
mov
adc
decb
jle
sar
xchg
xchg
xchg
push
sub
or
arpl
insb
mov
sbb
jbe
pop
mov
dec
roll
inc
add
les
pop
add
push
adc
scas
or
inc
test
jnp
sar
sub
paddd
ljmp
rol
aas
arpl
iret
mov
idivb
cmp
cli
and
push
mov
fsubr
pop
pusha
cli
out
popa
pop
mov
push
stos
jns
andb
mov
push
mov
cmpl
pop
jmp
scas
outsl
sbb
rcll
pop
mov
push
movsb
inc
sbb
insb
adc
ss
sub
testl
mov
out
push
mov
cmc
lods
gs
dec
pop
loop
cwtl
inc
mov
cmp
loopne
cmpl
jne
jg
xchg
scas
xorl
stc
sub
pop
pop
xchg
dec
in
push
loope
adc
xchg
lret
jle
or
cmp
ljmp
jnp
ja
mov
faddp
stos
idivb
lcall
push
dec
outsb
add
mov
std
pop
std
adc
lahf
aad
add
das
mov
es
pop
aas
mov
jge
add
pushf
jmp
ljmp
fadd
cmpsb
inc
int
sub
add
dec
mov
mov
loope
dec
outsl
mov
xor
in
cmc
test
rcl
insl
adcb
sub
ret
jecxz
cmp
mov
imul
fwait
popf
mov
push
xor
jns
xchg
out
fwait
mov
pop
or
iret
xor
pop
stc
ret
jne
jb
or
ffreep
repz
sbb
loope
int3
mov
scas
insl
pushf
lods
push
and
sti
sbbl
out
rcll
lods
pop
jmp
lahf
xchg
xor
jge
mov
xor
xlat
imul
into
xor
movsl
dec
out
nop
movsl
ja
sub
bound
sub
mov
xor
js
dec
mov
inc
loop
jns
loope
push
out
jge
or
je
cmp
and
fstpt
dec
les
push
mov
mov
pop
dec
sub
xor
xlat
pop
push
stos
in
xchg
xchg
adc
pop
popf
popa
xchg
dec
je
xchg
repnz
push
add
push
mov
outsl
ret
add
mov
inc
push
fs
stos
aad
fs
or
sti
mov
js
loopne
dec
enter
push
jle
dec
addr16
sbb
and
xchg
ja
jnp
xor
sbb
cltd
orb
shrb
outsl
out
clc
jl
lea
pop
lahf
mov
xor
es
lahf
dec
mov
add
and
cmp
ja
jp
xlat
pop
sub
push
push
and
mov
mov
or
fwait
sub
mov
push
or
es
pushl
mov
cmc
adc
mov
sarb
xchg
inc
or
cmp
push
stos
int3
xchg
lea
aad
aaa
fildll
paddq
jle
mov
xor
and
mov
loop
mov
add
fimull
je
aam
jl
xchg
test
xchg
test
shlb
rclb
addr16
in
pop
xor
repnz
ja
lods
stos
ffree
out
mov
add
push
jbe
ficoml
jne
xor
rorl
movsl
lret
push
cmp
push
movsl
scas
fbstp
data16
xor
inc
repnz
fiadds
inc
inc
pop
popf
xor
lods
out
and
cmp
inc
sbb
jae
adc
pop
gs
or
data16
sahf
daa
xchg
add
fdivrl
rclb
xlat
mov
mov
outsl
scas
sub
addl
clc
sarl
push
hlt
rclb
hlt
cmp
pop
not
stc
stos
ja
nop
loop
and
sub
cld
ss
std
jmp
pop
jo
jmp
shrl
test
push
mov
cmp
fisubrs
enter
add
test
pop
xchg
xor
xchg
adc
fiaddl
lds
cld
stc
ret
push
inc
iret
sti
popf
cmpsb
add
int
dec
or
dec
jmp
push
fstl
outsl
push
sti
mov
addr16
pop
cmp
dec
jae
mov
inc
push
aad
xor
lds
mov
std
ja,pn
into
pop
jecxz
leave
jbe
lret
inc
sbb
xor
sbb
movsl
push
mov
or
scas
lret
add
repnz
sub
je
pushl
jl
popf
push
in
inc
test
inc
mov
xchg
dec
stos
push
sbb
mov
sub
jl
push
divl
xchg
push
mov
sub
cli
adc
inc
mov
bound
push
jno
inc
jge
xlat
sahf
aas
dec
xor
scas
aam
xor
xor
fsts
jnp
scas
insb
hlt
push
jne
out
repnz
movsl
adc
mov
fldcw
pop
pop
andb
lahf
orl
xchg
mov
shl
mov
test
mov
mov
ficompl
or
orb
hlt
cmp
xor
push
shlb
stc
arpl
fidivs
push
and
enter
dec
and
add
test
hlt
xrelease
push
out
sub
jae
mov
setbe
ret
jmp
mov
popa
mov
xchg
xor
push
cmp
push
hlt
mov
lds
jl
dec
xlat
mov
push
and
inc
andb
mov
hlt
or
jnp
mov
clc
add
sub
cmc
push
mov
cmp
mov
lret
addr16
push
aaa
mov
cmp
or
adc
pushf
repz
pop
aad
repz
imul
insb
mov
or
pop
nop
mov
hlt
mov
mov
sub
paddusb
test
mov
push
test
push
mov
sbb
pop
je
sub
js
adc
pusha
cmp
adc
rorl
jb
test
into
xchg
leave
inc
ja
pop
mov
movsl
cmp
and
loope,pt
les
sahf
lcall
je
push
repnz
jmp
movsb
stos
es
push
je
rolb
sbb
dec
pop
jecxz
loopne
in
mov
fldt
orb
in
sbb
cld
mov
icebp
jecxz
xchg
dec
pop
lods
mov
jg
mov
adc
int3
popf
add
push
outsb
roll
aas
pop
push
fisubl
fs
fimuls
xor
cli
call
sahf
mov
movsl
mov
cmp
sub
insl
enter
mov
cmpsb
pushw
int3
iret
lea
xchg
jns
sub
mov
jb
push
jnp
js
mov
scas
push
xlat
inc
orb
int3
call
sub
jmp
push
int
cld
xchg
pop
repz
aad
bound
xchg
mov
pop
outsb
push
cmp
sbb
arpl
pusha
push
sti
movsb
jne
jl
or
scas
int
cmp
jg
es
jle
jb
mov
imul
movsl
xlat
test
popa
dec
sbb
fwait
or
pop
jl
inc
inc
filds
mov
stos
outsl
xor
mov
jmp
cmp
jecxz
je
push
leave
mov
and
int
jp
inc
fstpl
adc
sahf
out
jae
xlat
je
or
data16
cld
imul
repz
adcb
cmp
mov
jnp
lcall
call
xlat
insl
dec
rclb
out
xor
in
loope
pop
mov
xchg
mov
sub
cld
mov
pop
std
xor
or
sahf
dec
pop
ret
movsb
mov
xor
xchg
das
cli
sbb
mov
shr
ret
fs
xchg
push
iret
jg
dec
test
push
imul
ds
pop
fwait
cmp
xor
sub
out
mov
jp
cli
jp
gs
lods
jnp
sub
sbb
pop
lea
aaa
and
sbb
inc
insl
shll
push
push
movsb
out
or
jae
lcall
je
xchg
lret
sbb
mov
rcrb
ds
hlt
mov
xchg
push
testl
scas
idivl
sub
inc
hlt
movsl
cld
and
fmul
dec
out
mov
or
fwait
cmp
fstl
js
out
or
inc
xlat
addb
dec
mov
push
sub
ret
dec
push
inc
es
xchg
hlt
xchg
divl
bound
adc
jmp
sub
xchg
jnp
fstps
mov
addr16
add
cld
cmp
mov
stos
lods
mov
lea
ljmp
rcrl
fcmovbe
dec
aam
push
lds
arpl
jl
xchg
sahf
mov
dec
xchg
push
cmp
outsb
sbb
jae
jbe
inc
push
sub
rol
cmpsb
push
sub
movsb
popa
and
cs
push
repnz
shrl
and
sub
add
lods
stos
mov
mov
das
xlat
addr16
enter
sub
lods
addr16
pop
shrl
pop
or
ret
js
stos
mov
cmpsl
shll
dec
into
mov
xor
imul
mov
cmp
outsl
xchg
jge
mov
xorb
js
movsl
sbb
mov
cld
xchg
pushf
js
mov
jge
icebp
dec
sbb
or
jb
daa
das
jnp
xor
push
sub
hlt
movsb
mov
fnsave
push
test
adc
out
stos
mov
jl
std
shrb
dec
cmpsl
cmp
test
cld
xor
into
in
daa
xchg
or
iret
orb
iret
push
ja
xchg
into
int
mov
adc
repz
mov
ja
or
scas
pop
mov
mov
mov
mov
mov
mov
insl
imul
incb
cmp
rorb
sbb
iret
and
push
nop
imul
popf
in
roll
inc
imul
daa
movsl
cmp
mov
mov
pop
and
jb
ret
js
stc
inc
test
push
jp
mov
jb
or
sub
sbb
add
loope
test
push
mov
push
cld
mov
dec
test
ret
pop
xchg
mov
repnz
cmpsb
mov
inc
adc
push
mov
push
data16
scas
mov
push
jnp
and
and
pop
jbe
xlat
mov
mov
mov
jne
or
jp
xchg
test
addr16
lods
inc
orl
push
sbb
data16
sub
fdivl
lock
sbb
enter
mov
les
push
roll
outsb
push
orb
mov
mov
jge
shll
xlat
out
mov
xchg
out
pop
es
inc
and
push
in
push
dec
imul
mov
or
jne
ljmp
xchg
sub
cmpsl
cmp
xor
push
leave
adc
push
outsb
lret
jle
popf
repnz
in
mov
test
aam
add
mov
and
or
lcall
jnp
pop
push
pop
sbb
imul
les
ja
adc
imul
push
add
int
aam
jge
xor
sbbl
sub
push
cmc
inc
cmc
sbb
mov
loopne
ss
pop
in
push
jmp
int
scas
in
fcomip
loope
cld
into
addl
jb
inc
pusha
or
out
mov
jno
mov
sub
aam
inc
inc
xchg
pop
and
outsl
fistpll
xchg
out
inc
mov
dec
jne
xor
mov
mov
inc
inc
out
fmul
mov
mov
mov
add
push
outsl
jns
dec
lret
jmp
lret
shll
cmp
dec
or
mov
mov
mov
cmp
push
mov
outsl
pop
imul
cmpsl
enter
push
mov
adc
iret
js
stos
dec
aad
inc
adc
repz
pop
aaa
repz
cmpsl
adc
mov
in
mov
mov
mov
addl
jge
add
aaa
lcall
mov
cmp
shll
sub
mov
xor
xchg
sarl
ret
or
push
adc
adc
jge
mov
pop
and
xor
pop
insl
jns
dec
out
adc
or
movl
adc
or
mov
cmp
mov
cmp
fcomps
jl
mov
add
pop
cmp
mov
add
std
lods
cltd
pop
lret
sub
jae
jecxz
test
xchg
dec
xchg
aad
hlt
adc
xor
jp
idiv
sbb
repnz
sub
cltd
sbb
outsl
pushf
aaa
push
xchg
adc
jp
lret
lahf
mov
nop
cmpsb
rclb
shrb
fcoms
shl
mov
orb
mov
push
sbb
lahf
pusha
aad
and
aad
test
xor
call
rcr
adc
jge
test
jl
fcoms
test
push
mov
les
xchg
cmp
je
aam
test
insl
mov
fimuls
mov
sbb
adc
pop
adc
jp
cli
les
nop
mov
mov
dec
lock
sub
or
in
jmp
outsb
pop
push
in
mov
mov
push
aas
and
push
outsb
jno
fcomip
lahf
fdivr
cmpsb
daa
dec
or
dec
inc
lret
clc
roll
sbb
dec
cmc
jnp
dec
inc
xchg
in
cmpsl
xchg
xor
ljmp
mov
decl
dec
and
inc
cmp
adc
or
xchg
test
dec
ja
outsl
outsb
inc
mov
jg
inc
call
and
cmp
jmp
or
sarl
cli
ret
or
mov
call
std
scas
push
inc
pop
daa
pop
and
repz
aaa
pop
cmpsl
pop
faddl
into
jo
sbb
arpl
in
add
sub
and
and
loopne
jnp
inc
dec
push
inc
xor
push
inc
cltd
out
in
mov
sub
into
popa
movsb
jnp
or
cmpsb
and
in
jmp
out
mov
cmp
push
scas
cmpsb
stos
cld
leave
fs
push
pop
and
push
mov
gs
enter
loop
sbb
stos
stos
rcr
lret
cmp
ljmp
or
dec
mov
insb
iret
dec
fisubrs
incl
loope
movd
cmp
data16
push
fs
and
enter
mov
sahf
mov
iret
xchg
sahf
xchg
fwait
test
sbb
adc
mov
sub
jno
adc
xchg
cmp
out
int3
mov
aas
jno
addr16
lret
mov
push
jp
adc
clc
clc
insl
push
sti
mov
lods
xor
insb
insl
subl
ret
sub
loopne
jnp
mov
movsl
repz
cmp
mov
scas
sub
idiv
imul
jnp
mov
fistps
fwait
adc
jno
test
popf
push
mov
in
subl
aad
arpl
push
rol
and
cli
pop
sbb
adc
xor
insl
cs
std
rolb
jecxz
fwait
xchg
jns
mov
mov
push
mov
mov
fcomps
cmpsb
adc
push
scas
sti
pop
adc
pop
jp
outsl
adc
shl
mov
xchg
hlt
fcomps
sbb
dec
arpl
lret
add
mov
fcmovne
fidivrs
jp
enter
or
adc
insl
popa
enter
xlat
xchg
mov
xchg
and
xchg
decb
scas
addr16
mov
xlat
int3
and
test
inc
xor
pop
dec
adc
test
and
mov
xchg
sub
jecxz
js
push
jo
pop
ret
repz
and
sbb
ret
idivl
xchg
js
jno
mov
pop
pop
insl
rorl
xchg
mov
fsubl
into
pop
fsts
loop
repz
aas
addr16
fcmovnb
cltd
mov
ds
lds
dec
loope
mov
add
std
cmp
in
loop
in
xchg
out
ja
mov
int3
ret
fsubl
stos
xchg
lods
call
sub
ret
adc
mov
int
xchg
out
div
loop
xchg
adc
cmp
outsl
mov
sub
pop
lods
jge
mov
mov
cld
push
inc
and
push
jge
popa
dec
dec
xor
insl
aaa
mov
push
into
mov
mov
es
inc
popa
jns
mov
arpl
popa
sub
pop
addr16
ret
arpl
jge
xchg
shr
inc
mov
mov
sub
sbb
ja
jo
xor
imull
xchg
cmp
mov
and
inc
push
lods
sub
test
or
inc
sub
dec
inc
pop
dec
arpl
sti
ror
mov
xchg
mov
insb
mov
mov
aad
mov
in
aas
insl
ja
push
faddl
and
int
cmp
je
in
les
cmc
popa
scas
sbb
int
mov
add
push
movsl
fs
call
in
cmpsl
ljmp
rorl
xchg
mov
jg
mov
in
sbb
lds
lds
es
pop
xor
aad
pop
cmp
pop
push
in
sub
cmp
push
sbb
jo
adc
add
idivb
or
in
and
xor
push
out
insb
jp
imul
xlat
in
pop
ror
in
cs
jne
xchg
jg
dec
ret
inc
or
int
jecxz
pop
outsl
dec
shrb
add
das
mov
cmp
daa
ret
adc
mov
mov
jl
jp
jbe
leave
jo
call
pushf
subb
mov
rcll
js
xchg
pop
cmp
pushf
add
and
inc
push
fnstcw
mov
or
out
jp
cmpsb
push
or
orl
or
sub
jge
movl
int
pop
adc
jnp
xor
into
popf
scas
negl
clc
sar
mulb
adc
pop
lods
sarl
sub
jns
dec
add
jle
sti
or
sbb
jge
jno
push
adc
popa
test
das
xor
cmpsb
scas
inc
data16
and
jle
outsl
dec
cmpb
dec
pop
fadds
adc
lods
aad
dec
stos
cmp
dec
mull
jle
add
pop
mov
add
add
pop
test
mov
rolb
xchg
addr16
repz
xor
int
sbb
rcrb
mov
dec
xchg
cwtl
mov
dec
push
push
push
movsb
outsb
jne
push
cmpsl
test
test
adc
push
lods
addr16
loope
mov
and
xor
xchg
jne
mov
aad
pop
cmp
inc
and
dec
sbb
mov
mov
dec
jne
repz
hlt
adc
fnsave
inc
inc
jecxz
imul
push
mov
xchg
test
or
lcall
xor
cld
jno
rsqrtps
clc
xorb
push
mov
xor
xor
inc
push
movsl
in
nop
in
push
in
mov
cwtl
cmp
lret
mov
xor
push
call
jno
xor
mov
push
push
pop
pop
rcr
in
popf
data16
mov
in
fistl
in
ret
and
add
xor
std
into
or
xlat
daa
mov
jno
xor
xor
cmp
loop
shrl
push
test
jecxz
fcoml
ret
iret
scas
push
pop
cmp
jecxz
fdivrl
add
arpl
or
xor
xor
xor
fildll
jle
or
pop
inc
push
adc
mov
loop
inc
hlt
incl
push
pop
call
ss
sbb
lret
pusha
pop
xchg
pop
mov
add
shl
or
push
arpl
inc
xchg
cmp
shlb
add
pop
lret
adc
xchg
fmull
ljmp
mov
cmc
ror
dec
mov
mov
fnstcw
add
fwait
xchg
and
jb
jnp
imul
mov
cltd
push
sbb
or
push
mov
cmp
push
mov
dec
shll
push
mov
leave
and
dec
jb
push
scas
mov
fistl
rolb
aas
adcl
adc
lods
push
xchg
xchg
inc
mov
addr16
ret
sti
mov
fldl
lahf
xor
gs
in
inc
stos
cmp
ffree
cmp
push
and
call
lock
ss
call
je
fstps
push
popa
mov
popa
sbb
sbbl
ret
xchg
outsl
leave
fistps
mov
pop
idivb
or
sub
stc
in
sub
xchg
cli
dec
sbb
ss
arpl
flds
jl
mov
fsub
les
jae
out
mov
scas
push
js
xchg
pop
push
div
out
outsl
addr16
stc
add
jecxz
out
pop
adc
inc
ret
or
sbb
mov
adc
movsb
push
mov
mov
imul
jae
sarb
jge
out
lea
std
jae
sahf
fbld
out
xorb
and
nop
cmc
adc
ljmp
fdivs
fisubrl
mov
xchg
gs
movsl
xchg
pop
in
pop
dec
sub
outsb
bound
enter
int
repz
cmp
push
les
inc
in
jecxz
xchg
dec
cmp
emms
dec
stos
pop
rclb
jl
jno
cwtl
mov
jns
jecxz
adc
inc
arpl
sbb
xchg
xchg
cmp
mov
mov
in
cmp
insl
outsl
daa
inc
adc
je
call
or
pop
cmp
gs
test
jo
movsl
hlt
jl
xor
int3
sbb
fs
imul
lahf
ret
mov
aas
sbb
add
adc
mov
es
push
and
stos
repnz
aas
ret
mov
xchg
xor
ds
fwait
pop
pop
push
push
xchg
outsb
jge
adc
out
stos
lcall
adc
jnp
or
inc
orl
xor
insl
xchg
repz
inc
es
xor
and
hlt
hlt
lret
sub
into
jg
in
cmp
xchg
sub
in
jae
test
mov
mov
cmp
xor
into
add
out
add
mov
cmp
les
inc
or
ss
cmp
shrl
dec
add
and
lock
jl
adc
add
aam
sbb
mov
adc
jp
and
inc
lock
push
loopne
pop
mull
scas
jmp
cwtl
mov
lret
aas
mov
add
fcmovnu
sahf
in
xor
scas
ds
std
lods
pop
ficomps
mov
adcb
fiaddl
insl
insb
add
pop
insl
rol
add
int3
dec
and
cmpsl
enter
dec
or
push
xor
jge
out
cmp
xchg
mov
loopne
ret
mov
test
test
cwtl
and
jbe
out
fildl
lahf
push
and
push
cwtl
ljmp
pop
ret
enter
jb
mov
aad
cmp
xchg
add
sbb
insl
xchg
push
sub
or
jb
add
hlt
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
jmp
or
mov
into
and
and
adc
addl
jmp
dec
stos
push
mov
or
jb
jg
and
fcmovnbe
mov
mov
cmc
cs
pop
xchg
mov
fnstenv
repnz
xchg
mov
mov
lds
lods
aam
pop
sbb
jl
cwtl
stc
das
imul
sub
mov
insb
popa
inc
gs
mov
aaa
adc
shrl
xchg
jg
mov
cmp
cmp
shll
rorb
jecxz
jne
sbb
cmp
xchg
movsl
sbb
push
stos
fwait
mov
clc
cmpsl
xchg
inc
lds
cld
push
pop
pop
push
clc
ret
xchg
int
cltd
sub
scas
in
xchg
pop
lret
mov
cmpsb
or
jecxz
lods
les
in
pop
or
loope
cmp
pop
fidivs
es
fstpt
dec
or
roll
dec
sbb
mov
jbe
aad
dec
arpl
push
jge
sub
jne
repnz
xchg
iret
stc
xchg
mov
call
lods
xor
adcl
rcl
call
xor
ss
dec
sbb
jb
cmovns
sub
jge
ss
fistps
dec
push
sbbb
push
xor
lock
lret
dec
mov
cmpsl
pop
icebp
xchg
dec
sbb
adc
xchg
sub
cmp
test
int
mov
cmpsl
dec
xchg
in
sbb
pop
ss
adc
jmp
xor
push
pop
mov
push
dec
fisubl
aam
nop
shl
in
mov
jg
cmp
dec
cmc
int3
dec
stos
sbb
cmp
jle
stos
in
lds
sub
enter
adcl
sub
or
push
add
scas
and
or
sahf
and
ss
js
clc
aas
mov
mov
push
lahf
push
sub
jne
jmp
mov
aas
hlt
pop
daa
add
add
xchg
movsb
adc
test
xlat
cmc
test
push
pop
xor
nop
mov
in
repnz
push
int3
and
je
mov
scas
pop
in
adc
in
pop
out
push
rcr
add
ret
add
es
mov
ret
in
movsl
sbb
in
loop
jbe
push
fldl
xchg
aas
mov
push
jo
inc
lret
mov
push
fbld
sbb
mov
push
fldt
inc
lds
sbb
pop
test
sahf
fs
jge
sub
push
jo
popa
mov
rcrl
aas
or
inc
daa
loope
test
xchg
dec
fwait
inc
jne
cmp
adc
sarl
mov
loope
pop
sbb
es
and
and
jge
pop
insb
cmc
cli
imul
xor
inc
divl
mov
xchg
cltd
enter
loopne
mov
push
out
xor
ja
jl
test
sub
andl
movsb
mov
adc
sbb
insb
dec
mov
mov
mov
lea
mov
mov
call
cmp
pop
adc
jbe
js
jb
icebp
xor
dec
sub
je
pop
mov
fidivrs
insb
jnp
dec
mull
pop
or
pop
icebp
mov
jnp
jg
pop
cmp
pop
sbb
out
mov
jmp
jge
pop
inc
mov
jl
adc
int
inc
pusha
icebp
xchg
mov
out
in
aaa
inc
aam
cmp
dec
xlat
cs
pop
loop
sub
js
mov
jns
push
sub
ljmp
fists
cltd
loopne
cld
lods
lret
xor
xor
loopne
mov
push
test
lock
dec
sbb
std
aas
out
movsl
or
or
add
shlb
in
adc
mov
out
fisubrs
leave
test
push
imul
icebp
shrl
aaa
nop
or
adc
lret
fwait
adc
in
std
nop
into
loop
mov
push
xchg
mull
or
std
in
sbb
int3
xor
push
sub
inc
ret
ss
mov
dec
sbb
int
mov
cmp
lds
test
out
adc
aas
sbb
test
push
xor
push
fsubrs
outsb
aam
shrb
or
cmp
jb
mov
add
sbb
xor
test
enter
cmp
push
mov
mov
mov
das
icebp
mov
cwtl
xor
in
or
ret
pop
and
scas
mov
jmp
xchg
fsubrs
outsl
xchg
int3
and
sub
mov
sub
popa
shll
imul
or
addr16
push
jb
arpl
rcll
jb
cmp
or
adc
stos
outsl
scas
pop
xchg
into
rolb
jmp
es
in
outsb
sti
arpl
xchg
in
test
out
mov
in
mov
sbb
push
outsl
int3
ret
mov
rcll
sub
das
jl
fidivrl
push
popa
mov
sbb
test
push
mov
mov
mov
push
ja
fs
sbb
leave
jge
mov
and
mov
jns
pop
setge
xor
sti
xor
push
mov
or
sbb
mov
aas
xchg
jecxz
dec
inc
aad
cmp
out
push
jno
jle
jle
adc
lret
and
jp
mov
cmp
scas
loop
repz
fstpl
mov
insl
jle
shll
mov
lea
ret
add
ja
sbb
stos
out
sub
ret
aad
iret
ficompl
mov
pusha
sub
in
mov
dec
test
in
dec
in
sbb
out
push
inc
mov
aas
inc
repz
out
inc
rorb
xor
ret
cmp
dec
dec
jecxz
mov
and
insb
ret
into
mov
pop
leave
aaa
sbb
clc
ret
sub
lds
clc
push
push
ficomps
repz
pushf
sub
test
add
mov
into
pop
sub
xor
add
mov
cmc
sti
xor
and
xchg
test
fiaddl
push
jns
xchg
add
push
pop
shr
jl
pop
mov
ljmp
add
repnz
dec
mov
movsl
or
xor
and
and
stc
mov
jmp
xchg
sbb
xor
idivl
sub
je
out
loopne
and
or
fldl
mov
testb
add
inc
pushf
leave
leave
aas
sarb
push
mov
gs
in
adc
jle
es
ss
push
das
jge
add
and
mov
icebp
xchg
call
in
pushf
xchg
xchg
pop
ror
cmpsb
jb
mov
movb
fwait
into
fists
xlat
das
pop
mov
test
sbb
fstenv
adc
mov
add
adc
pop
cmpsl
out
xor
lds
ret
repnz
mov
cmp
dec
adc
xorl
sti
outsb
call
jl
loopne
sbb
cmpsb
xchg
xchg
jno
movsb
sbb
lcall
repnz
and
add
adc
jo
es
dec
mov
aaa
jae
ja
mov
pop
pop
mov
ficomps
lods
pop
cld
inc
inc
imulb
jno
out
lds
cmp
push
iret
add
insb
add
movsl
out
jo
in
mov
ja
or
xchg
fsubl
dec
ds
loope
jo
repnz
pop
cmpsb
pop
filds
test
sti
cmp
mov
ljmp
jg
and
xor
je
cmp
sbb
jl
ljmp
repz
adc
shrb
adc
in
aad
jmp
and
lds
push
scas
xor
loopne
jb
push
ljmp
outsb
repz
pop
jbe
add
ficoml
fldenv
xor
inc
mov
sbb
sub
lret
xchg
hlt
insb
xchg
jmp
dec
cmp
scas
aaa
out
pop
test
xchg
mov
ror
loop
sbb
mov
or
call
scas
push
pop
cmp
neg
push
shl
mov
test
jecxz
fnstcw
mov
sahf
repnz
movsb
lcall
outsl
rclb
pusha
and
pop
aam
mov
jno
jo
xor
or
in
fs
ret
fwait
aam
in
inc
ret
inc
adcl
mov
jnp
in
cmp
adc
fistpl
inc
insl
sbb
jecxz
scas
sub
daa
sub
or
xor
addb
xchg
sbb
add
sti
imul
fildl
jbe
scas
pusha
push
addr16
mov
sub
mov
inc
add
jbe
daa
mov
push
popa
test
je
push
mov
pusha
sar
mov
js
ficompl
insl
inc
inc
enter
je
int3
daa
ficompl
imul
cltd
xchg
xor
lret
add
sbb
cwtl
jno
jne
pop
cwtl
xor
lods
movsb
ret
cmp
les
ret
ss
inc
xor
scas
andb
sub
rcll
cmp
lahf
or
and
lock
bound
mov
test
cmc
xchg
adc
mov
add
push
inc
jle
gs
mov
cld
stc
je
fwait
pop
ds
mov
or
xor
push
shlb
dec
mov
mov
add
xchg
mov
dec
std
pop
out
xchg
push
mov
lret
mov
lret
or
in
sub
std
adc
enter
fsubr
call
fwait
mov
mov
scas
sub
je
loop
sarb
mov
fsubs
loopne
add
aas
jb
adc
cli
sbb
sbb
rorl
xlat
inc
xchg
lahf
aaa
setnp
call
dec
das
shll
pop
ds
mov
lret
and
push
inc
sbb
das
jne
jne
mov
in
aam
inc
add
daa
cmpsl
add
lods
pop
and
int
xor
push
jecxz
std
and
mov
aam
jne
push
test
lret
mov
cli
cmc
and
cmp
daa
xchg
sub
push
push
dec
test
inc
lea
mov
in
mov
jle
dec
imul
xchg
int3
outsl
and
lods
xchg
add
lea
xchg
sub
andb
inc
cmp
das
or
addr16
or
cmp
fwait
push
repnz
push
out
inc
push
jmp
sub
jecxz
lret
jl
push
imul
adc
lods
xchg
loop
xor
xor
fsin
cld
std
push
pop
loop
cmpsb
repz
inc
push
xlat
mov
pushf
jo
jno
icebp
cmpsl
xor
test
data16
rorb
jo
push
in
insl
cs
stc
dec
adc
inc
sbb
pop
aad
imul
fwait
leave
inc
les
test
test
fildll
test
jge
jle
xlat
push
aas
cmp
cwtl
mov
test
jl
jne
pop
cmp
sysexit
xor
xchg
adc
lods
int3
int
ret
cmp
xor
shlb
xlat
sub
sub
sbb
jo
push
test
inc
pop
xlat
in
into
sahf
sbb
clc
jl
and
and
sarl
fwait
sbb
gs
lods
xchg
dec
cmp
jb
bound
pop
fcmovb
lret
pop
xchg
loope
pop
jnp
sub
sbb
sub
pushf
fidivl
mov
adc
dec
xor
pop
push
push
andl
or
jnp
ds
inc
pop
ret
jo
mov
stc
mov
sub
shrl
xlat
pop
sarb
push
dec
or
add
int
lea
aaa
cmpb
jle
push
add
les
dec
pop
xor
ss
push
jmp
int3
push
pushf
jae
adc
cmp
sub
insl
stc
dec
push
aaa
mov
xor
cmp
mov
iret
shlb
clts
js
pop
js
push
cmp
cltd
cmpsb
call
pushf
pop
cmp
sub
mov
fidivl
pop
and
push
dec
lea
je
jns
jge
inc
push
adc
xchg
ds
inc
mov
aaa
dec
imul
xchg
mov
hlt
mov
and
sbb
arpl
sub
lahf
js
stc
xchg
jp
nop
pop
dec
movsb
xchg
hlt
jmp
fidivl
jge
add
aad
and
iret
in
inc
cli
mov
aad
jbe
mov
jb
xor
test
lcall
btcl
cmp
pop
xchg
jge
jne
sub
pop
sbb
dec
lahf
pop
adc
outsl
inc
jno
cmp
call
js
test
movsb
ja
mov
add
xchg
jnp
mov
int3
and
dec
mov
sbb
gs
xor
adc
rorb
cmpsb
push
adc
mov
cs
inc
ret
jmp
nop
pop
jmp
push
punpckhbw
pushf
inc
iret
insl
jecxz
add
jbe
std
rcl
mov
test
adc
and
loope
inc
sbb
and
test
das
xchg
xor
fsubrl
jno
lods
das
popf
and
out
or
xrelease
mov
popf
mov
jecxz
jb
fidivrl
add
dec
xchg
insb
les
sbb
out
push
mov
out
mov
je
popa
xchg
mov
sbb
adc
pop
sbb
movsb
push
sahf
vpaddusw
mov
mov
in
jmp
or
repz
or
pop
les
jns
xchg
push
add
dec
imul
nop
adc
sbb
lea
inc
mov
repz
sub
out
fldenv
xor
push
dec
rolb
fxch
sarl
xor
test
push
orl
ds
roll
pop
pop
ja
dec
into
in
jo
pushf
jmp
loope
fstpl
lcall
jnp
roll
pop
or
xchg
pop
sbb
add
mov
lock
sbb
add
push
ret
pop
push
jno
jecxz
jle
and
jecxz
lret
imul
xchg
ss
pop
mov
imul
addb
pop
jnp
into
adc
cli
add
jae
das
jb
mov
gs
scas
outsb
icebp
cmpsb
movsl
mov
icebp
mov
mov
xchg
popa
fsubrl
adc
cmpsb
add
test
sbb
and
add
adc
insb
xchg
add
jp
mov
mov
movsb
popf
add
pushf
jecxz
insb
bound
fmul
out
mov
clc
sbb
and
mov
lret
pushf
jae
aaa
jle
xchg
popa
lret
ret
or
imul
or
jns
ret
frstpm(287
xchg
testb
imul
mov
pop
mov
fdivrl
cmp
xor
call
test
jne
insl
sub
or
adc
push
xchg
inc
push
icebp
inc
pushf
nop
add
dec
rcrb
push
jmp
fsub
mov
insl
sti
mov
xchg
or
add
out
fmuls
xchg
cmpsb
filds
xchg
leave
sbb
lds
xchg
add
ljmp
adc
jmp
cmp
cmc
stos
sub
subb
enter
push
outsl
inc
xchg
adc
jbe
dec
cmp
pop
inc
sbb
cli
aam
fadds
and
mov
popf
mov
insl
out
dec
in
cli
xchg
inc
or
or
jg
mov
les
out
mov
test
in
xlat
mov
add
xor
out
mull
lcall
ja
mov
mov
cwtl
jo
into
daa
push
xchg
test
push
inc
sbb
hlt
ficompl
xchg
ret
inc
out
jnp
insl
dec
scas
adc
jns
push
aad
sub
mov
jecxz
test
sbb
sbb
fs
cmp
addr16
jp
aas
ljmp
dec
add
xchg
xchg
loope
bound
decl
test
mov
xchg
push
hlt
jle
ss
xchg
dec
fadd
xchg
test
mov
sbb
xor
imul
sbb
out
or
in
push
mov
lea
xchg
stos
loopne
ret
mov
mov
lds
loop
out
es
lahf
sbb
jae
sub
dec
or
ds
sbb
sub
sbb
pusha
xchg
cwtl
pop
ja
dec
pop
repz
gs
mov
adc
mov
and
test
mov
iret
mov
xor
daa
xchg
mov
push
bound
mov
sbb
andl
bound
push
enter
je
inc
xorb
pop
lock
fmuls
mov
mov
fs
lret
adc
push
test
jbe
insl
sbb
jnp
jae
pop
test
add
or
rcll
mov
js
mov
popf
xor
mov
test
push
push
xor
hlt
push
jbe
mov
mov
push
into
or
bound
lahf
cmpsb
or
adc
scas
jmp
not
lret
imul
dec
push
cmp
xor
jns
repnz
mov
cli
aas
mov
flds
out
paddw
aad
push
inc
stos
dec
ljmp
mov
mov
lock
cmp
je
or
xor
gs
lahf
pop
add
and
lahf
inc
loope
insb
adc
pop
cwtl
nop
das
call
adc
inc
or
jne
fsub
push
push
sbb
loopne
aam
cmp
pop
xchg
sbb
push
pop
pop
inc
ret
fstps
negb
cmc
rcll
sbb
inc
call
aam
test
mov
fwait
mov
cmp
mov
push
aas
mov
mov
ja
inc
cmpsl
xchg
imul
or
in
lea
xchg
aas
movb
cmpsb
lret
mov
push
sbb
cmpb
test
mov
les
out
dec
inc
add
inc
pushf
cmp
jmp
pop
adc
mov
pop
call
pop
sbb
repz
ss
daa
push
sbb
jae
cmp
xchg
sbb
xchg
add
mov
out
je
int3
sub
clc
adc
or
cmp
mov
fs
sbbb
push
mov
in
mov
rcrb
push
mov
sbb
xor
inc
adc
popf
shlb
push
andb
add
dec
test
fdivl
ret
fnstsw
outsb
loopne
scas
cmp
cmp
out
lahf
jne
mov
fs
gs
jnp
pop
aad
fstpt
inc
aas
scas
cmp
push
stc
or
test
ja
sbb
fsubl
out
aaa
sub
pop
rcll
mov
out
daa
mov
je
mov
addr16
repnz
mov
pop
dec
xchg
inc
aad
pop
popw
inc
sarb
pop
pop
cmc
fldenv
pop
jbe
icebp
dec
push
out
and
xor
push
inc
mov
jns
in
xor
fisubrs
mov
lock
mov
xchg
outsb
jle
push
cmpsb
xchg
aam
and
popa
mov
jmp
add
in
sub
push
shlb
inc
push
out
inc
jb
in
repnz
sub
scas
pop
inc
push
sbb
sub
cld
jbe
lds
adc
lcall
pop
pop
loopne
repnz
mov
push
jo
insb
sub
fucomi
or
sub
int3
and
mov
or
xchg
stc
fucomip
cmp
sub
and
mov
inc
test
cmc
js,pn
ret
js
adc
icebp
add
pop
test
pop
test
push
or
int
or
mov
push
popf
mov
stc
push
adc
jp
sti
addr16
xchg
xor
call
inc
in
lahf
outsl
push
xor
in
xchg
call
call
and
cmp
jae
ja
int3
clc
insb
mov
shl
adc
sarb
push
lea
pop
push
out
mov
movsl
jne
shll
movsb
mov
movsl
in
cmp
xor
rclb
and
or
xchg
je
sbb
mov
mov
sarb
cmpsb
es
rorb
mov
add
xchg
inc
mov
popf
pushf
inc
ret
fldcw
movsb
gs
stos
aad
cmp
sahf
shrb
or
jmp
xchg
and
jmp
fisttps
pop
loopne
ljmp
adc
arpl
jae
cltd
inc
sarb
mov
repz
lcall
cwtl
sub
addr16
xchg
loopne
jns
mov
xchg
jnp
jns
stos
mov
and
stos
xor
divb
clc
je
inc
inc
jmp
or
sbb
stc
cs
jge
and
cli
pushf
movsb
popf
subl
mov
movb
and
addr16
mov
xchg
movups
xor
std
cwtl
xchg
lock
sbb
push
and
fbstp
mov
or
jecxz
pushf
adc
push
int3
pop
jge
fiadds
sbb
add
jo
dec
add
mull
mov
hlt
or
ss
xor
and
pushf
jge
insl
xchg
aad
jecxz
push
ficoml
bound
jnp
sahf
adc
hlt
adc
and
jbe
push
or
scas
pop
je
mov
data16
cmp
sub
test
and
js
imul
out
mov
fldl
cwtl
mov
sbb
pop
jno
xchg
push
int
inc
es
imul
xor
lea
lods
or
mov
out
pop
pop
ja
movsl
adc
dec
int
and
es
in
adc
jp
jne
in
lock
orl
jnp
or
add
xor
ret
mov
out
fildll
fiaddl
xchg
pop
test
adc
test
aad
shll
lock
rol
mov
lods
mov
lock
mov
into
sbb
lret
xlat
in
pushf
sar
push
lcall
ficoms
add
push
outsl
call
and
outsl
or
mov
sub
pop
jl
jle
pop
ja
mov
xor
push
sub
sbb
enter
add
and
adc
lret
in
cwtl
push
mov
sub
mov
mov
mov
dec
push
clc
std
aaa
inc
mov
mov
mov
mov
arpl
andl
es
add
dec
jnp
xor
inc
fbld
and
mov
sub
orl
and
pop
cmpsb
xchg
dec
fiadds
ficompl
shr
push
add
jmp
pop
pusha
pop
jl
ss
movsb
fildl
pop
in
cmpsb
leave
pop
dec
repz
insb
inc
ja
cmp
fdivl
sub
xchg
adc
or
int
and
mov
stc
xor
and
xchg
push
mov
iret
or
icebp
jbe
cmp
rorl
loopne
aam
mov
movsb
xchg
xchg
in
lret
inc
and
sbb
mov
cld
push
test
pushf
into
das
call
jg
sub
inc
mov
mov
and
leave
shrb
adc
cmc
xor
ret
testl
loop
xchg
jge
rorb
adc
dec
mov
stc
mov
jne
xchg
or
dec
and
nop
nop
aad
and
mov
jnp
adc
aaa
popf
outsl
sti
dec
fwait
outsb
lret
jb
push
inc
mov
mov
sbb
stc
loope
pop
xor
sbb
mov
push
pushl
inc
mov
sahf
arpl
cmp
lods
sub
popf
sub
cmp
lcall
aaa
push
lock
push
pop
xchg
jge
stc
shr
xor
cmc
test
mov
mov
pop
xchg
mov
nop
sub
lea
dec
mov
ds
ret
adc
push
es
popa
or
and
xor
or
mov
dec
mov
repz
ds
mov
out
aaa
dec
xor
sti
loopne
out
popf
xlat
in
repz
push
clc
shlb
push
clc
testb
or
int3
idivl
or
lahf
and
in
inc
xor
popf
cmp
lcall
int3
inc
mov
scas
popa
jns
or
jne
lea
inc
sarb
outsb
fdivrl
je
fsubrl
ss
xchg
fidivl
pop
xorl
xchg
out
fbld
mov
mov
sahf
and
ss
pop
popa
pop
sbb
xchg
xchg
lret
nop
push
leave
call
jb
fimuls
and
xchg
adc
repz
icebp
iret
lret
xchg
fisttpll
xchg
gs
inc
adc
aas
cltd
mov
arpl
xor
out
or
cltd
shlb
shlb
or
aam
adcl
js
clc
es
sbb
fisttps
xlat
adc
andl
int
push
xor
mov
stc
mov
mov
lret
mov
mov
out
jae
xchg
and
pushf
pop
cmp
jecxz
dec
lods
or
in
jns
aad
or
lods
mov
lcall
test
aaa
inc
dec
gs
add
pop
mov
gs
cmp
push
jecxz
push
jb
mov
hlt
adc
and
adc
addr16
icebp
jb
xchg
lds
xlat
cmpsb
xchg
sub
mov
orb
int
bswap
fs
loopne
leave
in
cs
cmc
mov
dec
mov
jg
enter
xchg
daa
dec
mov
cs
or
pop
jle
ds
fdivrs
jns
and
mov
in
xchg
jmp
pusha
mov
jbe
or
bound
imul
jg
dec
jg
cmp
xchg
xchg
jmp
or
and
pop
mov
pushf
mov
sbb
rol
in
jmp
and
flds
ja
push
test
lods
shll
add
cwtl
jo
and
movsb
inc
mov
pop
sarb
popf
jg
mov
outsw
mov
es
inc
fwait
sub
pop
mov
inc
gs
das
adc
incl
pop
cmp
adc
add
loope
aam
dec
sbb
fadds
sbb
shrl
push
xchg
stc
xlat
cmp
inc
shll
divps
inc
popf
popf
int
mov
cmpsl
mov
insb
add
insl
dec
les
loope
aaa
jne
mov
and
ljmp
fdivrl
xchg
fistpl
enter
sarl
jns
out
mov
lret
aam
sarl
insb
or
push
push
inc
adc
push
adc
jbe
aas
fcomps
xor
inc
cmp
xchg
insb
sub
subl
dec
xor
bnd
jecxz
jne
or
sub
in
dec
cld
mov
in
pop
mov
insb
sbb
xor
push
loope
lods
inc
sub
xor
inc
mov
into
pop
mov
and
or
inc
int3
pop
aam
test
ret
jnp
cmp
xchg
and
mov
push
or
cmp
insl
mov
imul
pop
movsl
fcomps
inc
push
push
jge
rorl
pop
xor
nopl
leave
bnd
fstpl
and
and
push
push
sub
dec
dec
sahf
add
imull
pop
sbb
cmp
xchg
loope
aam
decl
adc
and
imul
lret
je
rolb
mov
scas
movsb
pop
dec
sbbb
cld
xor
dec
rolb
adc
aam
repnz
fs
pop
jb
mull
les
jnp
ficompl
shl
pop
mov
inc
cmpsl
mov
ret
lretw
jmp
sbb
fdivrp
fisubrs
cltd
imulb
mov
sti
scas
inc
shl
cs
adcl
jge
test
or
cmpsb
inc
insl
dec
cli
lds
jne
fcompl
xchg
jbe
lock
clc
repnz
add
pop
pop
and
stc
lret
pop
ja
aaa
xchg
lea
jne
pop
flds
ds
lock
rclb
stos
or
lock
inc
xchg
repz
and
mov
mov
inc
push
sbb
lcall
test
mov
sbb
lods
mov
stc
and
das
call
out
mov
or
xadd
inc
inc
xchg
nop
stc
enter
pop
nop
or
inc
add
stos
fadd
xchg
aaa
add
sub
mov
subl
push
dec
xor
outsl
imul
dec
push
mov
aad
or
xchg
imulb
push
fneni(8087
dec
repnz
sbb
or
jae
pop
clc
push
fisubl
xor
outsl
or
xor
push
mov
popf
xchg
sub
movsl
add
rorb
jo
mov
push
pop
in
inc
test
outsl
add
jle
dec
adc
insb
xor
sub
mov
andb
cmc
insb
daa
dec
add
xor
add
ljmp
lock
adc
sub
daa
mov
insl
inc
xor
sahf
shrb
inc
push
roll
cltd
sub
ljmp
jle
mov
sub
dec
push
and
sahf
ja
mov
xor
lods
cmp
xchg
arpl
aaa
add
sub
push
insl
ss
sarl
push
movsl
mov
pop
adc
imul
nop
jns
xor
outsb
sbb
sbb
inc
add
adc
lret
pop
jae
push
mov
xor
add
inc
jle
cmp
sbb
inc
shll
push
ret
dec
push
aam
push
cmovle
or
xchg
xchg
js
out
mov
ss
push
stos
je
and
cmpsl
fxch
inc
popa
idiv
aas
mov
cmc
orl
test
jne
dec
das
stc
aas
scas
adc
push
dec
sbb
add
push
jnp
mov
ret
out
add
loopne
sbb
xor
mov
inc
adc
jp
dec
test
out
cs
lds
ljmp
ficoms
outsl
rcll
loop
mov
jbe
icebp
push
dec
stc
into
dec
imul
pusha
mov
or
leave
stos
sbb
in
incl
mov
fldl2e
ja
sub
outsb
gs
cmp
inc
push
xor
jg
mov
pop
mov
dec
mov
outsl
mov
jno
xchg
sub
test
or
das
mov
rolb
mov
pushf
mov
sub
add
mov
jb
lods
jae
inc
dec
cltd
add
dec
mov
push
repnz
and
sbb
pop
or
gs
or
test
loop
mov
mov
push
sub
data16
call
gs
bound
mov
ljmp
rcr
shl
loopne
fwait
std
jbe
pop
faddl
sbb
add
cld
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
jmp
cli
mov
addb
xchg
cwtl
sub
addl
test
push
jle
push
jo
mov
fdivrs
adc
cmpsl
arpl
js
js
sbb
shl
jae
inc
subl
and
push
movsl
sbb
mov
inc
fcoml
ljmp
push
les
mov
xor
mov
add
lret
loop
mov
jno
inc
fcomps
inc
sbb
pop
loop
add
fwait
and
sub
inc
jecxz
jne
pop
inc
das
es
or
dec
cmpb
mov
xor
cmp
dec
aad
xor
mov
push
mov
push
enter
inc
jmp
dec
loop
sbb
les
fsub
and
lock
mov
fldl
and
rcrl
repnz
and
pusha
and
xlat
and
popa
icebp
or
insl
xor
lcall
sbb
xchg
inc
add
xchg
iret
adc
jp
jge
push
jbe
cmpsb
cs
aad
lods
mov
sub
ror
or
push
mov
pop
mov
xchg
gs
pop
lock
pop
mov
daa
ja
pushf
pop
push
and
push
mov
cli
inc
pop
inc
and
lret
pop
lock
mov
int
mov
xchg
cmpsb
add
xchg
out
mov
pop
sbb
pop
sbb
ret
into
push
cmpsb
inc
stos
sbb
in
inc
mov
add
xor
xchg
jmp
stos
out
jge
dec
in
xchg
mov
test
orb
sub
add
sub
loop
add
pop
mov
and
pop
mov
testb
mov
jecxz
mov
xchg
insl
mov
cmp
ds
cmp
or
adc
das
pop
add
xchg
out
jmp
jmp
sub
ja
jbe
test
inc
pusha
xor
jnp
add
jne
imull
imulb
pop
call
push
repnz
add
ficomps
jg
push
and
out
mov
sbb
inc
sub
push
into
cs
mov
aad
cli
pop
loopne
rclb
mov
jmp
add
int
lret
cmpsb
scas
fwait
sti
inc
pop
dec
push
and
movsb
mov
lock
fwait
sbb
pop
lret
addb
fcmovnu
cmp
ret
outsl
mov
cmp
xchg
or
mov
subl
cltd
test
sub
or
jne
push
sahf
test
sbb
cmp
lret
push
jecxz
push
adc
and
pop
and
std
and
shll
aad
xor
push
and
icebp
repz
not
test
push
or
cltd
into
pop
shr
iret
mov
fnstsw
jb
mov
lret
add
imul
sti
icebp
or
add
lock
testb
xor
lcall
push
js
inc
jae
pop
data16
cmp
sub
sub
aam
mov
es
xchg
sbb
pop
dec
rcll
in
adc
adc
push
pop
xchg
mov
inc
adc
loope
mov
fs
stos
mov
jle
mov
pop
mov
inc
dec
add
rcrl
iret
in
lcall
inc
sbb
xor
pushf
or
cmc
leave
popf
push
adc
orb
insl
add
ret
fsubs
les
adc
mov
jl
aam
mov
cwtl
xchg
and
dec
cmp
sahf
pop
sbb
mov
inc
out
out
mov
mov
mov
pop
ja
pop
arpl
dec
je
cmp
mov
out
fwait
mov
push
inc
movsl
mov
in
adc
pop
jle
arpl
inc
push
pop
mov
shr
pop
mov
jge
sahf
insb
repnz
aas
jg
insb
push
jmp
pop
mov
idivb
sahf
outsl
js
push
inc
mov
ljmp
scas
insb
popa
dec
inc
or
outsl
xlat
mov
mov
dec
lock
adc
cwtl
pop
repz
movsbl
pop
jmp
xor
dec
sbb
scas
or
jo
lods
push
rcrl
adc
adcl
int
ret
jecxz,pt
je
or
push
mov
dec
daa
bound
jmp
mov
adc
jle
aas
mov
cli
xorl
fwait
mov
xlat
inc
test
imul
xor
sbb
sub
mov
or
cmp
and
in
sub
xor
shrb
insl
mov
ret
lods
sub
fiaddl
jb
adc
lods
sbb
pushf
aaa
outsb
mov
nop
stc
cmpsb
pop
mov
cmp
mov
dec
daa
inc
xor
xor
add
std
repz
or
and
mov
xchg
addb
out
rclb
push
xchg
cmp
pop
mov
daa
or
out
data16
movsl
and
sti
dec
mov
pushf
dec
decb
sbb
pusha
mov
leave
nop
xchg
out
adc
movsl
call
test
ret
and
sahf
jmp
cmp
jae
movsl
ja
movsb
stos
and
mov
dec
shrb
rclb
and
or
push
xchg
movsb
fscale
hlt
ds
in
dec
sub
jae
scas
arpl
mov
lods
pop
stos
pop
mov
scas
or
subb
jb
sbb
jns
addr16
push
outsl
je
adc
data16
dec
xchg
les
fldenv
roll
xchg
int3
xor
hlt
adc
jnp
jecxz
xchg
fs
inc
enter
cli
hlt
mov
and
push
iret
sub
xchg
dec
cld
xlat
sub
jmp
fst
xor
jnp
jbe
dec
popa
arpl
fisubl
or
sbb
sbb
add
lret
mov
push
mov
aam
sub
pushl
xor
ret
movsb
out
sti
test
enter
dec
jle
jae
push
in
sub
out
jnp
or
jb
push
pop
lods
es
popf
lods
adc
aad
jle
mov
mov
push
and
xor
xchg
ret
dec
outsb
cmp
dec
xlat
sub
add
add
or
xchg
sub
inc
pop
sub
jp
jbe
adc
cli
mov
arpl
add
jg
xor
add
call
sbb
sbb
lock
jmp
xlat
fiadds
xchg
xor
dec
leave
pop
out
dec
and
mov
imul
fldl
jo
cmp
inc
and
lods
jp
push
pop
roll
and
add
push
mov
dec
imul
leave
adc
dec
das
insb
dec
js
sub
mov
mov
sub
add
xchg
fildll
hlt
xchg
dec
cmpsb
iret
jg
aam
cmp
push
cld
adc
orl
xlat
sbb
dec
mov
imul
sarl
rol
add
jae
adc
or
xchg
cmp
xchg
mov
nop
sbb
mov
pop
lock
add
lcall
aad
stos
mov
add
jne
adc
or
fldcw
jbe
loop
jecxz
loopne
sub
mov
and
xchg
xchg
stos
mov
lcall
xor
lcall
sub
popf
rclb
inc
mov
inc
xchg
leave
mov
int3
adc
dec
clc
sbbl
xor
sbb
cwtl
cmp
clc
and
pop
cmpsb
into
cs
sub
sub
xchg
add
xchg
push
adc
cltd
mov
or
inc
mov
dec
pop
mov
adc
outsl
shl
imul
cltd
enter
fsts
inc
sbb
dec
subl
xor
mov
scas
adc
dec
mov
add
jns
ds
pop
data16
or
cmc
hlt
in
mov
and
pop
jg
xchg
imul
repnz
dec
je
scas
mov
addb
es
cmp
pop
mov
mov
out
mov
rcll
dec
push
jbe
lcall
nop
xchg
push
jmp
pop
pop
cmp
mov
xor
fists
xchg
sahf
mov
dec
mov
pop
test
mov
sub
fst
sbb
sub
sbb
or
loop
sbb
adcb
xchg
mov
add
xor
sbb
jg
gs
test
mov
cmpsb
ret
mov
jecxz
iret
add
aad
add
push
sbb
mov
xchg
loop
adcb
and
xchg
adc
jle
mov
test
lds
xchg
jno
inc
fsubr
mov
push
aad
inc
xchg
xor
dec
mov
add
cmpb
jle
out
sahf
stc
nop
pop
loopne
cltd
push
jno
xchg
adc
lret
ljmp
pop
mov
push
test
adc
in
popa
icebp
pop
fisubrl
mov
cld
mov
inc
and
sub
test
into
lock
aas
cmp
imul
outsl
adc
adc
test
mov
mov
test
xor
leave
iret
sbbb
xchg
push
in
loopne
push
loop
sahf
push
jmp
push
or
xchg
jb
gs
outsl
repz
jecxz
shrb
cmp
add
mov
sar
push
xor
push
push
sbb
gs
fsts
mov
sbb
out
adc
jmp
fnstcw
push
cli
cmp
mov
add
sbb
pop
sub
repnz
subb
shrl
std
cli
sbb
sbb
or
push
mov
ficoml
cmp
aad
push
inc
shl
mov
stc
rorl
lds
lret
push
mov
shl
sub
dec
test
idivb
arpl
sub
jae
repz
add
or
jnp
movsb
pop
sub
fldcw
mov
sub
mov
movhps
jae
call
pushf
push
call
mov
sbb
cmpsl
push
xchg
lds
cmovl
fbld
fstl
stos
dec
fwait
dec
inc
imulb
pop
ds
jmp
daa
in
les
sbb
jg
mov
ljmp
addr16
cld
sbb
mov
mov
nop
sub
fdivs
daa
dec
xchg
loopne
icebp
aaa
fldenv
das
pushf
mov
push
jo
push
ret
mov
sti
mov
cmp
arpl
cmp
xchg
jmp
cwtl
mov
mov
sub
pop
add
pop
int3
popl
adcl
cmc
lcall
out
push
jecxz
xchg
mov
enter
jl
pop
pop
dec
mov
and
cwtl
loope
inc
push
scas
xor
xorl
mov
jmp
sbb
cwtl
pushf
jbe
push
push
test
sbb
bnd
idiv
imul
jb
sbb
scas
repnz
bound
jns
int
scas
adc
pop
cmpsb
push
push
leave
dec
xchg
test
xor
push
test
xchg
sahf
lods
push
fsub
fmul
icebp
xchg
xchg
xchg
jp
fbstp
test
dec
dec
scas
orl
sti
and
cmp
mov
lcall
enter
jmp
jb
int3
xor
scas
fpatan
stc
sbb
inc
imul
sub
sub
xor
roll
cld
adc
fidivl
xor
xchg
subb
das
fucom
jae
add
mov
test
mov
inc
pusha
push
cmp
lret
pop
in
aam
xchg
push
sub
sub
daa
sbb
jmp
hlt
in
inc
pop
jnp
adc
push
pop
adcb
cmp
pop
testb
ss
add
dec
iret
sub
and
scas
sub
jbe
mov
aas
and
mov
filds
adc
cmpl
ficoml
and
cmp
dec
jg
pop
push
cmp
mov
sahf
lods
xchg
mov
or
jecxz
push
and
mov
dec
sub
xor
sub
das
push
inc
cmp
out
lock
orl
insl
pop
mov
idivb
jl
inc
das
imull
aam
pop
dec
fldcw
inc
aaa
icebp
pusha
icebp
rorl
pusha
adc
lea
fmuls
aad
inc
push
aam
sub
and
lock
loopne
iret
sbb
shll
or
xchg
pop
daa
aas
aas
aaa
repz
popa
cmp
dec
xor
lahf
lods
mov
out
outsl
cmp
mov
or
fwait
cld
mov
test
dec
sub
xor
push
mov
je
cwtl
outsb
lcall
add
addr16
sahf
inc
lret
and
inc
inc
icebp
jae
sub
in
jmp
fisubrs
sub
mov
or
jecxz
daa
sub
or
cltd
es
mov
jo
push
or
stos
enter
xor
pop
pop
fldt
lahf
lock
pop
int3
and
lods
xchg
fdiv
mov
cmpsl
imul
fisubs
push
cmpsl
lock
pop
or
insl
stc
inc
adc
rolb
inc
ljmp
dec
into
xor
aas
sbb
enter
out
push
inc
mov
dec
dec
xchg
pop
daa
mov
jecxz
test
lock
adc
mov
or
xchg
movb
sub
flds
movsb
aas
and
push
and
xchg
testl
mov
mov
repz
movsb
sbb
push
lea
mov
mov
sub
fbstp
insb
mov
push
outsl
jecxz
lret
fidivs
out
sub
inc
adc
ds
adcb
scas
repz
push
loope
pop
out
cs
sub
adc
sub
int3
jnp
jmp
stc
call
and
fwait
lock
sub
in
xor
push
test
jae
movsb
stos
xor
lds
sub
lret
inc
adc
psllq
inc
mov
sub
pop
inc
adc
push
xchg
jmp
mov
mov
dec
loop
push
fstps
lahf
or
es
mov
pushf
inc
int
int3
jmp
loopne
or
pop
and
lahf
stos
test
js
push
push
inc
das
adc
and
cltd
pusha
hlt
sub
cmpsl
mov
jmp
cli
into
lea
decl
cmp
mov
dec
jmp
cmp
cld
jbe
adc
push
out
jle
fidivl
xchg
repnz
mov
mov
cmp
or
xor
loopne
mov
mov
xchg
xor
aam
mov
ds
pop
rcrb
sti
mov
push
xor
jne
fadds
pop
jge
push
mov
jns
aas
adc
mov
inc
xlat
sarb
push
insl
and
sbb
lea
pop
xchg
cmc
cmp
cmp
mov
movsl
movsl
and
jno
test
ljmp
push
sub
or
ret
push
cmp
sbb
and
insl
fst
popa
xor
shr
pop
pop
out
pop
aaa
fsubrl
add
xor
mov
icebp
cmp
sub
jmp
adc
xchg
rorl
sbb
add
int
sbb
lods
daa
dec
adc
xchg
pushf
mov
sub
xlat
pop
push
add
pop
imul
sub
movl
jbe
cmp
pop
jmp
gs
jnp
jne
jg
push
cmp
lds
gs
sub
test
inc
imul
es
sub
xor
fnstcw
idivl
in
dec
pop
shrb
fbld
mov
cmc
xor
daa
sbb
jbe
enter
ret
scas
push
cmp
mov
and
inc
iret
in
repz
xlat
cld
add
add
retw
call
sbb
push
jb
or
out
push
pop
mov
movsb
out
imul
and
xor
adc
mov
pop
fsubrp
cmp
adc
mov
in
aas
movsl
adc
outsl
xor
add
pop
mov
and
es
push
call
shll
scas
push
adc
test
test
push
push
fwait
mov
mov
jg
adc
xlat
xchg
lods
adc
stc
movsb
sbb
jmp
mov
mov
loope
jp
cmp
push
or
cmp
lock
push
ss
inc
cmpsb
mov
arpl
push
stc
pop
xchg
add
lahf
mov
add
sbb
popf
mov
cmp
cmp
cmpsb
mov
nop
inc
sub
cmpsl
mov
add
cmp
adc
cmpsb
adc
push
cli
shll
enter
out
mov
popf
sub
push
shl
cmp
in
mov
mov
add
add
fcoml
xor
and
hlt
jmp
shlb
repnz
cld
dec
dec
jne
push
fsubr
xchg
or
insb
push
mov
rcrb
in
mov
cmp
jecxz
xor
stc
adc
mov
jmp
ja
lret
daa
push
push
inc
orb
out
dec
or
sahf
adc
loop
xchg
pop
cld
adc
rcl
mov
pushf
push
dec
cmpsb
push
nop
es
je
pusha
xchg
mov
aaa
push
adc
sbb
ds
pop
outsb
test
js
pushf
push
subb
push
xchg
or
daa
idiv
sub
push
lcall
xlat
xor
mov
push
daa
nop
sbb
inc
sarb
mov
mov
gs
loopne
dec
cmp
mov
sub
mov
and
push
push
fbstp
inc
jle
sbb
ret
fwait
mov
int3
sbb
fcompl
inc
adc
and
sbb
test
pop
sbb
data16
call
sub
mov
es
mov
imul
andb
scas
xchg
dec
in
int3
and
addr16
pop
into
xchg
test
adc
sbb
mov
insl
mov
rcr
test
pop
xlat
dec
or
xchg
sub
add
sub
jle
jmp
int
cli
into
imul
mov
mov
out
sahf
leave
pop
or
addr16
mov
and
std
pop
adc
sub
or
flds
and
push
lret
and
and
push
mov
dec
add
and
pop
push
xchg
inc
mov
out
mov
add
adc
pop
pop
and
in
fwait
push
adc
test
movsb
shl
popf
adc
pop
push
xchg
mov
push
mov
inc
mov
lcall
in
mov
add
cs
mov
loopne
arpl
inc
fs
loop
pop
jecxz
and
mov
pop
adc
pusha
lods
fstps
aam
mov
push
pop
shrb
loopne,pn
mov
loopne
outsl
xchg
iret
add
inc
mov
scas
mov
aaa
mov
jae
pop
pop
xor
sbb
clc
inc
movsl
loopne
scas
pop
inc
mov
dec
pop
cltd
hlt
stc
fcompl
mov
sbb
fsubs
push
stos
ret
pushf
push
or
push
movsl
jns
sbb
dec
cmp
add
mov
jb
ret
mov
xor
pushf
sub
in
in
rcll
sbb
jp
cmp
adcl
inc
mov
outsl
push
mov
cmp
xchg
andl
pop
rorl
jg
mov
push
ljmp
icebp
push
daa
mov
test
mov
push
sarl
mov
int
mov
stos
addl
es
inc
movsl
out
dec
jnp
mov
sub
add
out
cmp
dec
cli
sbb
or
fdivrs
cmp
enter
sbb
leave
loopne
push
cmp
andl
add
test
push
mov
adc
ds
push
or
repz
int3
shrb
or
rorb
push
into
sub
into
in
call
pop
sub
lcall
iret
mov
imul
pop
push
mov
mov
push
pop
sbb
xchg
dec
xor
sbb
mov
jl
xor
std
les
cmp
jmp
fdivp
xchg
jecxz
dec
es
out
xlat
shll
jmp
sbb
push
bound
push
cmp
mov
cli
mov
nop
mov
ret
dec
out
aaa
add
sbb
push
sub
sarl
lret
mov
jl
adc
cli
int3
sbb
or
push
pusha
jge
shlb
sti
and
push
or
jle
fcomp
popf
imul
fistps
addb
js
movsb
in
push
cmp
lods
and
inc
sbbb
adc
adc
dec
sbb
les
lcall
sub
add
cli
adc
inc
push
xchg
push
test
into
xlat
jmp
js
inc
out
fst
out
fcoml
movsb
inc
or
push
cmp
and
call
aaa
cmp
jae
aam
jns
addb
aam
test
xor
mov
dec
repz
aas
ljmp
and
pop
stos
dec
xchg
ds
add
out
fcmovnu
xchg
and
add
mov
fiadds
pop
stc
sub
add
lds
cmp
mov
mov
fs
cld
pop
mov
mov
js
lret
dec
out
inc
sahf
hlt
inc
add
rcll
aam
dec
dec
pop
movsb
push
dec
gs
cmpsb
fimull
bound
dec
xor
sub
cmpsl
mov
xchg
or
adc
cmp
aas
cmp
mov
inc
insl
dec
adc
xchg
adc
push
pop
cli
lcall
cmp
or
nop
insl
adc
lea
jge
push
mov
mov
mov
bound
xchg
pop
das
mov
aas
xchg
dec
jecxz
mov
outsb
pop
js
loopne
xchg
inc
imul
or
out
mov
push
dec
mov
mov
mov
jp
jl
frstor
cltd
sbb
dec
outsl
or
rorb
cmp
mov
test
mov
sbb
in
adc
sti
loope
fcmovbe
push
fdivrl
inc
xor
sbb
movsb
xor
fists
stc
rcrl
mov
sub
mov
cmp
pop
push
push
push
jmp
nop
fidivrs
into
dec
in
dec
xor
jbe
pop
jp
mov
cwtl
sub
and
into
or
scas
sbb
insl
mov
arpl
inc
pop
sbb
mov
dec
cs
cld
popf
lret
xchg
mov
and
sub
clc
pop
lea
call
shlb
pusha
fisubl
popa
jo
pop
addr16
dec
rol
inc
loop
mov
lret
je
mov
mov
out
jecxz
pop
sub
int3
scas
scas
push
and
adc
inc
inc
adc
aas
fbld
inc
sub
mov
dec
loopne
inc
jecxz
fdivrs
jl
lods
push
xor
sub
pop
dec
add
push
mov
popf
mov
or
push
dec
mov
dec
push
rcll
test
push
fimuls
sub
std
xor
sub
jmp
aas
sub
add
movsb
mov
push
dec
mov
das
add
loop
and
dec
pushf
mov
mov
and
push
or
mov
iret
mov
sarb
push
insb
cmc
jno
mov
sub
pop
iret
test
lahf
push
push
or
inc
outsl
jb
and
leave
pusha
iret
pop
push
adc
xor
arpl
ds
inc
and
jo
jge
cld
test
lret
adc
into
clc
mov
ja
test
push
dec
enter
fldcw
dec
in
repz
inc
pop
xor
cmp
pop
scas
or
push
lods
mov
xchg
rcrl
in
pop
push
push
test
movsb
adc
cmp
imul
notb
pcmpgtw
push
subl
jnp
add
push
or
inc
cwtl
inc
pop
xorl
movsl
mov
push
cmpl
mov
repz
mov
pop
iret
iret
ret
xchg
inc
out
pop
sub
push
inc
push
sub
jecxz
mov
and
fldl
dec
fimull
or
icebp
out
mov
sub
xor
out
add
les
insb
call
or
and
xor
mov
out
sbb
inc
out
pusha
ds
cmpl
scas
xchg
cli
outsb
icebp
cmpsl
pop
ret
cmpsl
popa
mulb
push
push
xchg
fdivrp
inc
icebp
bound
enter
arpl
adc
xor
mov
push
mov
jns
out
dec
dec
adc
into
stos
inc
sbb
cmpsb
icebp
leave
ror
aas
push
pop
mov
jge
add
mov
rcr
sahf
faddl
js
cwtl
mov
sbb
xchg
je
fstp
mov
push
sub
aas
ljmp
pop
out
sahf
les
sub
dec
mov
push
sbb
push
push
lods
mov
loope
aad
int
shll
or
xor
cmp
xorb
cmpsb
leave
arpl
xlat
clc
sbb
xchg
arpl
fcomp
or
sub
dec
test
inc
in
mov
sbb
sbb
or
cltd
sub
je
pop
sbb
and
xor
push
addr16
frstor
leave
scas
std
loope
dec
fdivrp
rcrb
aaa
fwait
ret
fildll
lret
ret
test
adc
in
hlt
xor
imul
cmp
movsl
and
popa
mov
adc
cmp
push
outsl
fstl
stos
cmp
xor
add
mov
mov
adc
movsl
in
icebp
push
rolb
xlat
xchg
jnp
mov
mov
icebp
jmp
cmp
push
in
push
xor
xchg
mov
fcoml
xor
xchg
pop
and
push
scas
xor
inc
iret
repnz
sub
outsl
fcomps
add
sub
cltd
cmpsl
push
adc
push
mov
cmpsl
cltd
arpl
pop
stos
dec
je
sub
shr
int
test
jae
clc
or
rcr
pop
mov
pop
inc
jb
add
fwait
mov
sahf
and
xor
sbb
das
mov
in
pavgb
les
out
lods
clc
mov
xor
in
xor
js
pop
dec
pop
xchg
fisubs
insl
aaa
les
cmp
sbb
data16
mov
icebp
mov
mov
out
xor
inc
jne
dec
pop
cmp
adc
jbe
fwait
add
dec
or
addr16
mov
jp
push
int
cmp
sub
mov
pop
add
sbb
sub
mov
jno
pop
mov
test
jb
xchg
xchg
roll
jbe
ss
add
mov
popa
mov
cmc
jecxz
mov
test
out
jp
bound
push
dec
adc
add
push
movsb
sub
xor
add
sbb
cmp
ja
fisubrs
push
cmp
pop
pusha
jno
jnp
ret
stc
loopne
pop
fcomip
push
jge
dec
xchg
test
push
imul
push
inc
or
into
mov
fsubr
mull
mov
pop
dec
push
test
mov
push
adc
xchg
lods
icebp
fcompl
add
bound
pop
sbb
cmp
test
add
jg
jmp
adc
in
in
pushf
dec
dec
loope
jg
adc
ljmp
mov
sbb
add
subl
jmp
inc
mov
mov
lea
imul
lea
sbb
sub
fxch
mov
mov
gs
sbb
adc
out
jle
dec
test
fbld
fmul
fwait
jo
in
popf
sbb
cmp
pop
cs
adc
movl
repnz
pop
push
cmpl
dec
fisttpl
out
cmpsb
jnp
mov
cs
and
jae
and
xchg
sbb
adc
aaa
push
add
cmp
adc
lcall
std
jns
dec
adc
push
imul
xor
testb
jb
inc
jge
mov
addl
xchg
ljmp
pop
stc
hlt
aam
outsl
ss
adc
scas
fisttps
out
jle
and
inc
inc
int
dec
cmp
and
push
pop
insl
xor
fstl
inc
aam
fwait
or
pushl
dec
stos
rcrb
push
mov
mov
xor
in
jg
popf
js
cmp
cs
ficoms
repz
repz
pop
leave
jl
xchg
rol
iret
xchg
jb
mov
leave
outsb
pop
pop
in
insl
and
cmp
mov
mov
pop
fcmovnbe
dec
jb
jl
aaa
in
pop
or
cltd
sub
adc
pop
cmpb
enter
fsts
nop
mov
out
movsb
jp
out
in
pop
xor
jg
in
mov
test
cwtl
sbb
aam
pusha
mov
pop
leave
stos
cwtl
adc
lds
mov
stos
sbb
insb
adc
lahf
cwtl
xchg
jno
and
inc
sub
sbb
decl
mov
in
lock
jbe
adc
fucom
cmp
cmc
dec
jo
push
cltd
pop
imul
and
mov
test
fwait
jns
in
imul
lahf
sbb
jo
push
leave
xchg
mov
pop
aas
sahf
mov
add
test
cwtl
cmp
mov
orl
dec
push
add
pop
mov
push
mov
lock
in
or
or
sbb
jne
lods
dec
adc
dec
cmp
test
test
imul
dec
mov
xlat
pop
std
inc
jnp
push
jno
loopne
and
inc
sub
push
and
mov
sub
out
and
fidivrs
icebp
call
cmp
cmc
xchg
imul
dec
ffreep
mov
lods
push
mov
jne
push
push
cwtl
dec
pop
add
jle
lods
and
aam
push
jg
loop
inc
mov
aas
jp
pop
push
mov
ss
lds
jg
mov
push
int3
rcrb
popa
out
mov
sub
pop
sti
sub
clc
decb
cwtl
mov
ret
test
clc
and
out
insl
cs
jg
inc
insl
or
mov
push
jmp
xor
popa
sbb
pop
ficompl
mov
dec
imul
sbb
push
xchg
in
stos
jge
mov
leave
push
enter
cmp
push
cmc
stos
xchg
sbb
jbe
push
js
stos
lods
push
inc
sbb
inc
xchg
cmp
inc
int
and
jg
insb
shlb
scas
jl
loopne
jne
jns
lahf
cmp
xor
sub
sbb
scas
scas
les
xchg
adc
sbb
jno
cmp
and
jne
in
dec
lret
xor
mov
mov
rcrl
xlat
aaa
sub
ret
xchg
and
bound
xchg
aas
pop
mov
scas
push
pop
xchg
and
dec
pop
mov
and
push
jmp
aas
push
xchg
popa
pop
cmp
jb
jbe
lods
and
and
sub
rcl
ss
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
jmp
inc
sbb
push
mov
aad
cld
pusha
dec
xor
roll
subl
aas
jmp
adc
lods
fisubs
mov
cmp
fmull
movntsd
loopne
lret
lock
adc
fs
lods
shlb
jb
fldt
js
push
fwait
mov
xchg
pop
scas
adc
push
inc
aaa
push
lock
add
or
jmp
sti
pop
cs
icebp
mov
xchg
jae
loop
pop
cld
adc
sbb
movsl
in
jecxz
adc
imul
lcall
fcmovnb
mov
lods
xor
inc
inc
shlb
xlat
pop
arpl
les
rcrb
sub
aaa
bound
mulb
bound
in
mov
mov
cmp
add
lahf
imul
lret
or
xchg
inc
inc
addr16
jmp
shrb
pop
pop
jp
icebp
popf
icebp
cmp
mov
ret
psubd
or
roll
cmc
movsb
aad
pop
enter
testl
cmpb
jg
mov
lock
pusha
mov
add
into
stc
xchg
out
stos
lret
and
scas
outsl
inc
std
sbb
mov
cmp
mov
ds
fbld
popf
cmp
fs
xchg
adc
add
in
and
jmp
xor
mov
push
sti
aam
xchg
jae
rol
jl
dec
push
out
in
gs
loop
push
fs
stos
cmpsb
adc
xchg
in
insb
pop
scas
adc
je
ficoml
cs
gs
pop
push
push
or
mov
es
repnz
jl
js
pop
cmp
mov
loope
mov
mov
adcb
lcall
into
mov
push
dec
or
int
pop
mov
cmp
nop
cmp
aam
sub
adc
pop
sub
nop
ljmp
imul
cmpsl
ret
mov
adc
jbe
xchg
int
jo
iret
jns
cld
arpl
out
sub
cmpsl
in
adc
inc
xchg
lcall
sub
or
and
sbb
ror
cmp
dec
out
sbbl
push
adc
pushf
out
fistpll
out
or
mov
mov
or
fisubrl
mov
ret
repz
mov
stos
sbbb
cmp
jne
shl
xchg
adcl
jmp
jp
xchg
ja
les
sub
add
dec
and
sub
jae
pop
add
test
xchg
push
xor
gs
xchg
dec
es
xor
adc
test
sarl
mov
pop
cmp
imul
sti
out
leave
xchg
dec
out
add
test
push
and
jge
add
testl
inc
push
hlt
mov
push
cmpb
adc
stos
add
adc
xor
in
test
mov
fs
xor
mov
icebp
sbb
call
enter
cs
outsb
inc
in
flds
or
clc
push
mov
popl
repnz
and
adc
push
push
mov
mov
mov
in
pusha
in
jmp
push
mov
es
pop
in
pop
cs
dec
or
scas
and
iret
mov
fmull
pop
inc
and
jo
adc
pop
jo
popa
push
ficoms
xchg
push
mov
or
jp
pop
inc
mov
mov
push
data16
fsubrs
in
iret
in
adc
dec
inc
loopne
mov
lret
fiadds
mov
pop
and
sbb
aam
push
push
popa
mov
mov
mov
sbb
add
aam
sbb
je
lea
mov
test
addr16
xchg
cmc
mov
stc
adc
lea
imul
jl
rcll
dec
cmp
and
ret
outsl
inc
data16
cmpsl
mov
ret
iret
loopne
sub
xor
mov
enter
inc
mov
push
insl
inc
das
arpl
call
xorl
test
cmpsl
rcrl
std
push
adc
jecxz
dec
shl
dec
subb
dec
push
fucomp
xor
andb
pop
and
inc
inc
hlt
je
jne
or
fbstp
push
repz
adc
jmp
stc
data16
xchg
sbb
or
xor
je
je
test
jp
mov
rcl
cli
sbb
sti
cmp
sbbb
insb
js
pop
lds
and
pop
adc
push
out
cltd
ja
test
jno
jnp
jo
mov
lods
inc
sbb
popa
mov
jo
scas
add
into
ljmp
test
lods
sub
adc
jecxz
cltd
mov
adc
test
push
sbb
ret
push
test
cli
pop
pushf
or
push
int
decl
mov
dec
in
fadd
adc
push
sub
std
adc
loope
xor
sahf
lods
cmpsl
outsl
int3
add
aas
ss
jg
cltd
jge
jae
jbe
fmull
ss
mov
loop
cmp
js
adc
dec
cmpsl
or
dec
mov
xlat
enter
xchg
push
jp
pusha
cmp
out
mov
pop
pop
push
cmp
sbb
push
mov
or
out
jnp
lods
imul
push
dec
adc
ret
inc
ss
mov
aam
pop
jo
iret
inc
clc
fs
dec
ss
repnz
mov
add
lds
loop
push
imul
jecxz
imulb
shlb
add
stc
sub
iret
add
or
mov
sbb
je
lcall
sub
aas
out
mov
adc
pop
insb
movsl
shll
or
fcmovbe
insb
gs
xlat
cmp
mov
pop
iret
dec
test
les
in
push
or
sbb
push
das
pop
xchg
cmpsl
push
in
insl
rcrl
sbb
push
into
xchg
scas
pop
jge
or
or
fildll
cld
xchg
mov
lret
in
add
out
rclb
aam
sub
jb
sbb
enter
push
std
sbb
shll
daa
repz
push
hlt
std
xor
push
scas
sub
cmc
push
sbb
or
lods
loopne
fistl
add
jmp
jecxz
or
inc
pop
cmp
insl
push
das
xchg
adcl
inc
push
jecxz
xlat
orl
ljmp
aas
cmp
adc
icebp
adc
fistpll
inc
xor
mov
cld
mov
xchg
inc
pop
mov
push
je
arpl
js
les
push
inc
sub
xchg
nop
pop
arpl
xor
dec
jo
sbb
mov
dec
pop
ret
test
fucomip
cli
add
fwait
xchg
js
jge
dec
mov
test
icebp
cmpsb
dec
pushl
cmc
fmuls
scas
push
xlat
call
rcll
push
sbb
sub
scas
dec
pusha
daa
xchg
rorb
popa
mov
mov
ss
movsb
mov
push
cmp
nop
mov
push
shr
push
mov
xorb
sahf
dec
or
ds
sbb
arpl
outsb
mov
add
stc
push
mov
xchg
cld
jg
jl
mov
imul
push
shll
push
xchg
jne
bound
push
fs
or
enter
or
add
sbb
stos
or
sti
jp
add
mov
ljmp
sbb
xor
mov
sarl
aaa
in
pop
jnp
xor
adc
add
sbb
loope
cmp
notl
repnz
not
subl
aam
jmp
stos
pop
icebp
enter
insl
sbb
test
dec
icebp
and
pushf
fbld
and
mov
int3
es
lea
test
lods
lods
cmp
ja
cmpsl
lcall
test
mov
sbb
lock
add
push
jno
mov
xchg
lcall
shr
and
cmp
sahf
ljmp
hlt
cmc
dec
mov
xchg
pop
and
push
mov
mov
call
mov
insb
loope
mov
insb
test
mov
out
in
xchg
int
jle
push
push
cmovo
outsl
outsl
cs
sarl
rolb
iret
addr16
popf
dec
xor
out
mov
mov
test
dec
rclb
xor
mov
in
and
or
repnz
insb
subl
mov
pop
mov
xor
mov
mov
addr16
sub
mov
ss
sahf
cs
mov
lret
fsubrs
imul
adc
jge
shll
js
jge
repz
cmp
dec
mov
gs
lods
dec
mov
jo
in
xor
ds
inc
outsb
fcomi
outsl
enter
mov
jno
shlb
mov
mov
or
mov
pop
nop
fst
fwait
in
push
inc
loope
sub
shl
stos
testl
mov
loop
mov
push
jl
decl
push
dec
mov
adc
test
ret
dec
jo
xor
push
cmp
jno
and
shl
add
ja
sub
mov
pop
lret
int
sbb
cmp
bound
sbb
xchg
loopne
inc
adc
or
aaa
orl
mov
xchg
stc
or
int3
daa
cmc
lahf
pop
mov
imul
cmpsb
mov
jmp
mov
stos
xor
insb
xchg
xchg
out
das
in
testb
xchg
mov
add
mov
ret
jbe
or
mov
adc
js
jb
dec
int3
ja
or
ucomiss
sbb
jl
imul
test
stc
in
bound
pusha
push
std
push
push
sbb
pusha
push
mov
out
fsubr
out
or
scas
inc
fptan
insb
or
movsb
sbb
daa
addr16
jecxz
fwait
xor
push
or
addl
pop
std
fdivrs
adc
and
lcall
lods
arpl
cmpsl
pusha
pop
sbb
cli
rorl
cli
pop
sbb
dec
dec
shl
aaa
mov
flds
mov
mull
mov
inc
pushf
mov
rcr
jne
cmp
dec
test
jecxz
xor
test
shl
hlt
jp
cmp
xchg
cld
lds
shl
bound
es
out
push
jae
ja
popa
loope
fistps
xchg
inc
loopne
and
ds
sbb
jp
lds
std
test
cmpb
es
lods
cmpsb
push
mov
aam
in
add
sub
jo
mov
lods
sbb
rorl
mov
rcr
jns
movsb
lcall
rol
or
pop
mov
out
inc
clc
and
xchg
dec
mov
pop
in
xor
dec
cwtl
push
mov
pop
jbe
inc
rcll
fs
sub
cmp
jl
cmp
push
out
into
sub
mov
fstl
cmp
shl
cmc
movsb
xchg
jmp
std
pop
out
icebp
in
or
cmpsl
iret
push
adc
pop
jnp
mov
inc
jns
pop
mov
adc
mov
xchg
mov
pop
mov
add
mov
ret
and
cmp
sbb
fwait
movsl
loope
xchg
jbe
add
hlt
shlb
xchg
or
js
cld
inc
sbb
call
push
mov
xor
in
push
cmp
dec
jg
pop
sbb
xor
int3
icebp
push
cltd
add
pop
or
adc
mov
add
mov
push
mov
xchg
or
mov
adc
sbb
hlt
shlb
cltd
fcomps
inc
mov
outsb
cmpsl
mov
insb
inc
jp
dec
cmpl
xchg
pop
aam
sbb
ja
fst
outsl
add
in
into
fldl
test
xor
and
push
pop
and
fstps
ja
inc
fildl
mov
in
xchg
imul
cwtl
ficoms
mov
and
scas
sarl
test
clc
insb
in
xchg
add
fcomi
shl
inc
stc
mov
subb
xor
mov
mov
inc
divl
rorl
adc
sbb
stc
sahf
inc
and
iret
sbb
ljmp
rorl
rol
cmpsl
adc
jle
fidivrs
pop
jns
movb
mov
dec
in
fs
inc
bound
jnp
ret
outsl
sbb
sbb
adc
loope
cmpsl
mov
leave
jno
sbb
idivl
hlt
pop
add
push
popf
pushf
lcall
xlat
sub
sub
sub
jns
lahf
adc
add
push
pop
cmp
sub
cmp
popa
icebp
cmp
data16
or
or
pusha
adc
add
arpl
cmp
cmpsl
pop
daa
jae
in
mov
cltd
aam
dec
je
mov
adc
sub
adc
cltd
cmp
sbb
iret
push
mov
aas
dec
scas
popf
push
mov
insl
enter
push
jns
mov
sub
dec
add
roll
loopne
outsb
loopne
in
stos
mov
xchg
hlt
mov
and
test
push
popa
sub
outsl
xchg
jno
lret
lahf
int3
loope
shlb
movsb
mov
jbe
test
sti
jge
add
iret
inc
push
sub
cmpsb
pop
jno
mov
jg
xchg
aaa
icebp
ss
rorb
dec
jae
ds
mov
mov
idivb
push
mov
shr
mov
testb
hlt
add
xor
movsl
nop
add
aas
mov
jmp
mov
and
push
scas
jg
pop
scas
jl
mov
or
inc
push
stc
ret
clc
push
cmp
or
cmp
sbb
testl
and
shll
movsl
movsb
inc
in
xlat
loop
pop
inc
iret
sar
and
outsb
daa
dec
push
arpl
mov
ret
das
mov
iret
sarb
arpl
lahf
push
out
xor
mov
sub
mov
mov
addl
xlat
xor
adc
jp
mov
xchg
movsb
psadbw
or
sub
pop
sub
mov
pusha
insl
or
jecxz
icebp
cmp
add
test
mov
sub
in
cli
sub
lahf
jne
mov
xchg
sbb
dec
jle
xor
daa
in
nop
sahf
addl
repz
cmp
cmp
insb
in
inc
lgs
pop
test
cld
sbb
aad
ret
mov
lds
lock
push
pop
jmp
or
jne
push
jmp
or
int3
lock
jae
dec
xor
push
repz
imul
test
cmp
ja
mov
pop
push
inc
cmpsl
pop
in
and
and
cli
cmp
enter
cmc
adcl
gs
cmpsb
sbb
sub
jbe
pop
cmpsb
sbb
and
out
mov
sti
out
inc
xchg
and
mov
in
adc
cmp
inc
mov
xorb
imul
outsl
ds
insb
ljmp
sbb
daa
into
adc
add
jp
sbb
dec
mov
xchg
clc
mov
outsl
out
xchg
aam
ss
fwait
pop
add
in
push
iret
test
sarb
and
xor
jo
push
in
pop
leave
pop
add
lock
lcall
push
jae
sar
in
sti
fisubs
sti
ja
xlat
mov
scas
cmp
xchg
mov
ljmp
mov
xor
das
lods
xchg
negb
stc
xor
pop
mov
and
insb
add
imul
or
jp
das
dec
nop
data16
jg
pushf
push
les
clc
lods
or
cmc
adc
inc
mov
aas
or
jp
and
pop
pop
inc
into
lds
jmp
add
sbb
imull
dec
lahf
hlt
mov
push
inc
cmp
inc
daa
inc
xor
inc
adc
mov
cmc
jae
lea
adc
cmp
inc
test
das
jo
pop
test
pusha
push
fnstenv
adc
shl
push
fdivrs
outsb
mov
repnz
and
mov
out
jnp
cmp
lret
rolb
sbb
roll
lahf
mov
sub
rcrb
jne
jnp
lret
fs
mov
scas
out
cld
sbbb
test
and
jle
lock
scas
lea
add
aas
mov
aam
dec
xchg
and
movsb
fildl
dec
mov
xor
adc
lret
cmp
test
add
fsubl
insb
dec
fbstp
les
push
xor
bound
aam
aad
movsl
sbb
dec
or
xchg
movsl
inc
cli
xlat
cmpsl
stos
xlat
in
hlt
dec
rcrb
pop
rcll
inc
lret
in
mov
in
ljmp
rcrl
movsl
jl
mov
mov
push
xor
bound
sub
cmp
xchg
out
pop
sub
sub
sbb
and
int
adc
or
lcall
sbb
xchg
add
movsb
stos
stos
cmp
mov
shr
sbb
or
roll
stos
pop
outsb
cmpsb
pusha
jecxz
or
scas
outsb
out
pop
punpckhbw
lods
mov
inc
mov
sub
out
and
lret
jp
dec
pop
xchg
jae
cmp
pop
push
add
ljmp
xor
cwtl
push
jle
das
fidivl
ret
sub
sbb
outsl
negl
mov
sbbb
int
outsl
and
and
pop
inc
ds
add
in
xchg
pop
pop
sti
jne
xor
mov
and
imul
push
sti
ret
jg
cltd
mov
mov
xor
adcb
gs
dec
pop
subl
push
sti
mov
push
icebp
sub
jl
ja
mov
sub
xlat
and
rcl
std
cltd
xchg
and
cmp
jno
mov
dec
push
mov
test
rorb
fucom
pop
test
mov
popa
pusha
es
ret
jg
mov
ficompl
sbbb
pushf
movsl
cmp
xor
cmp
daa
aad
movsb
jbe
je
test
push
leave
mov
sub
fdivl
repnz
call
fmuls
adc
cmpsb
outsb
and
call
adc
xchg
mov
stos
fwait
push
push
out
loopne
pop
mov
mov
dec
add
cwtl
dec
add
fdivrl
xor
fwait
add
add
jmp
mov
repnz
cli
ds
cs
stos
add
add
je
push
mov
sub
cmpsb
jno
loope
pop
add
test
in
or
mov
add
out
clc
shlb
push
add
cmp
ret
mov
lods
test
imul
arpl
imul
aaa
sti
call
pop
loopne
mov
xchg
jne
fmuls
movsl
pop
jae
ret
icebp
add
mov
mov
scas
and
negl
ficompl
sahf
pop
jae
mov
and
repz
pop
add
cmpsb
pusha
rcr
mov
mov
dec
pop
sbb
push
mov
cltd
repnz
ds
adc
in
out
std
out
push
cmpsb
std
dec
mov
mov
outsb
int
add
roll
adc
cmp
or
stc
xchg
fnsetpm(287
adc
push
xor
mov
test
insb
push
pop
fsubs
xchg
lret
or
fnstenv
add
and
jecxz
pop
sub
test
ds
fisubl
mov
scas
insb
pop
jne
jmp
push
add
cwtl
bound
popf
xchg
aad
shll
sahf
pushf
ljmp
jb
lock
push
ret
mov
xor
mov
xchg
pop
xchg
fdivrs
xor
or
pop
outsl
adc
imul
movsb
mov
jmp
xchg
jmp
insl
dec
aaa
mov
push
xchg
aas
xchg
enter
mov
insl
push
insb
jmp
les
mov
or
nopl
adc
mov
sub
ljmp
nop
mov
icebp
lcall
jmp
mov
sbb
or
mov
js
add
cmp
jp
or
add
lock
out
jg
pop
xchg
jecxz
lcall
pusha
hlt
cli
mov
pop
shrl
push
add
std
inc
push
scas
data16
cld
leave
adc
shll
jb
clc
xchg
xchg
mov
das
pop
mov
xor
jbe
xchg
xor
jnp
mov
inc
icebp
jp
mov
adcl
sub
aam
dec
stos
loope
xor
imul
inc
insb
stos
pop
icebp
idiv
stos
mov
sbb
mov
xor
mov
stc
and
ret
push
jecxz
ja
sub
xor
or
pop
xor
and
pop
stos
js
popf
xorb
jo,pt
push
fimull
mov
fsubrs
dec
lahf
mov
inc
imul
mov
pop
jge
cld
pusha
es
sbb
ss
dec
pop
dec
mov
outsb
movsb
cltd
jge
ss
enter
stos
js
push
jbe
and
add
sub
cli
mov
xchg
sbb
in
inc
adc
loope
fwait
out
adc
sbb
inc
lods
xchg
ds
and
outsb
insb
jbe
xor
fdivl
shl
cli
scas
push
ret
movsl
lods
inc
or
mov
pop
stos
insl
aas
fcmovnbe
js
repnz
imul
imul
gs
mov
dec
push
test
sub
loopne
addr16
push
mov
pop
cmp
sbb
or
inc
sahf
or
insl
adc
lods
dec
in
cltd
push
mov
std
insb
aaa
mov
push
mov
dec
sub
and
xrelease
mov
cli
push
movsl
divl
inc
sbb
dec
sti
or
js
lea
sbb
lahf
push
dec
sbbl
sbb
push
movsb
cmp
js
pop
pop
sbbl
xor
xlat
stos
xchg
nop
sub
add
pusha
fs
and
xchg
shll
data16
push
outsl
test
repnz
and
push
cli
cmp
and
out
lahf
ret
ret
jbe
or
add
call
mov
mov
pop
pushf
add
push
xor
mov
aam
jle
push
cmp
aas
xchg
je
and
cmp
sahf
push
xchg
and
rcrl
repnz
or
adc
pop
les
xchg
jge
xor
dec
loopne
dec
insb
push
mov
inc
lds
fldl
cmp
lret
lds
inc
pop
adc
fisttps
imul
ret
xor
popa
std
jp
cmp
adc
xchg
std
mov
loope
mov
test
inc
mov
out
xchg
push
xchg
pop
int3
push
jno
movsb
and
cmc
mov
incl
dec
pop
adc
pusha
xor
rep
ja
dec
mov
sbbl
cwtl
sbb
or
add
rcr
mov
nop
sub
mov
pop
fs
mov
jge
adc
push
sub
jae
mov
jmp
mov
jp
cltd
xor
add
mov
stc
out
call
cmp
mov
add
jl
and
jle
mov
pushf
mulb
xor
xor
sarb
sub
inc
push
xor
js
push
add
and
fisubs
xchg
cmpsl
pop
incb
xchg
sub
cmpsb
cmp
dec
rolb
mov
and
xlat
ds
mov
stc
adc
mov
sbb
mov
add
mov
in
mov
xor
jp
cmp
push
inc
sbb
rorl
jns
mov
push
inc
and
dec
into
lock
lahf
lea
push
rclb
dec
loope
inc
xchg
popf
push
sbb
adc
hlt
pop
mov
add
loopne
cmpsb
in
loopne
out
outsb
push
cwtl
mov
sbb
movsl
dec
xor
xor
mov
ss
lock
outsb
fst
xchg
push
mov
daa
or
daa
ret
loope
mov
mov
cmc
ljmp
and
rcll
sub
lret
ss
jo
arpl
imul
push
xchg
fcoms
adc
xchg
lahf
cs
xchg
add
std
fildl
xor
inc
mov
sbb
mov
cmc
in
inc
mov
add
mov
aam
or
push
pop
movntps
outsl
test
js
mov
mov
enter
dec
rorl
in
stos
jnp
jne
mov
enter
loop
mov
xchg
les
xor
clc
mov
pop
dec
nop
add
xchg
push
lds
jmp
ret
nop
out
lock
rcll
mov
repnz
repnz
mov
ljmp
mov
cld
test
stos
sti
push
int
cld
fucomi
cmpsl
lcall
mov
out
sub
xor
popf
imul
in
rcl
std
xor
and
push
call
cmp
push
jecxz
add
dec
push
mov
arpl
sahf
xor
scas
cmpsl
xor
lods
mov
lahf
sar
xor
mov
stc
ret
sbbb
jne
sti
popf
cmp
sbb
mov
je
pop
mov
enter
xorb
add
mov
fisubrs
pop
insl
mov
xor
sub
or
add
sbb
push
sbb
cmpsb
stos
mov
je
fbstp
or
shll
int
pop
adc
mov
cmp
mov
cld
xor
cs
loopne
in
ljmp
fucomp
jmp
pop
or
iret
dec
sub
or
xchg
xor
dec
dec
jae
in
jmp
push
cs
mov
add
push
push
fadd
ret
out
mov
out
lahf
and
add
jne
jns
loop
aam
pop
lcall
xchg
out
icebp
stos
jmp
into
and
sahf
adc
mov
int3
imul
in
jge
aas
loop
sub
in
fsubs
xlat
shll
into
add
movsl
cmc
sbb
pop
jbe
shll
push
or
mov
and
jo
ret
dec
repnz
mov
pop
xor
inc
incb
push
mov
test
rorl
mov
xchg
mov
stc
sbb
mov
aaa
jno
push
push
scas
mov
mov
sub
cmpsl
xchg
int
call
sahf
repz
sbb
dec
jb
shl
pop
xchg
mov
rcr
into
leave
loop
or
call
test
mov
ljmp
and
imul
sbb
xchg
pop
jecxz
shlb
jge
mov
flds
loope
xor
jmp
inc
inc
adc
push
and
cmpsb
sub
push
cmp
adc
loop
lods
aam
int
imull
clc
cmpsl
cmpsl
pop
pcmpgtb
bound
call
mov
int
push
les
adc
xor
adcb
fldcw
outsb
daa
outsb
fcoms
pusha
loopne
xchg
push
pop
aaa
lret
jle
or
jge
lds
jb
jp
js
arpl
cmp
dec
inc
jp
sub
jnp
inc
mov
pop
and
sahf
mov
inc
insl
push
pop
dec
mov
inc
xchg
mov
andl
mov
mov
imul
add
lods
out
stc
cmp
test
cmp
jnp
jge
pop
mov
jo
jmp
pop
xchg
cmp
or
js
xchg
xorb
cmpsb
sub
lea
jl
lret
bound
fs
pop
sbb
push
add
and
cmp
insl
loop
jns
clc
mov
data16
outsb
or
mov
shrb
mov
pop
fisttps
loop
lahf
pop
push
xor
add
mov
sbb
lcall
insb
push
cwtl
out
fwait
add
sbb
jno
push
imul
xor
mov
xchg
lea
mov
in
ss
mov
in
insb
shll
pop
fdivrl
sub
mov
cmpsb
fucompp
add
mov
or
lea
sbb
out
inc
mov
add
std
xchg
push
sbb
sub
into
iret
add
dec
lods
add
and
lret
es
fucom
repnz
and
mov
dec
out
jl
cli
out
std
or
xlat
cmc
or
push
fnstenv
jge
mov
sbb
int3
mov
jecxz
mov
shlb
int3
in
movsl
out
jl
inc
fmul
jmp
mov
jae
push
sbb
sbb
xchg
testl
in
sbb
lahf
popf
pop
dec
push
inc
dec
leave
pop
ja
nopl
inc
cmc
sti
sub
adc
subb
insb
popf
ja
pop
out
push
inc
xchg
mov
adc
mov
in
mov
pop
adc
lcall
andl
sbb
sub
xlat
pop
jnp
aam
dec
pop
inc
dec
xor
xchg
andl
call
dec
cmc
cmp
mov
push
jnp
mov
insl
push
xchg
lahf
ret
mov
add
fwait
movsl
repnz
dec
sub
std
shlb
lcall
or
std
iret
shlb
in
jp
testl
shll
sub
xor
fidivrl
lea
xchg
pop
je
jne
xchg
in
ja
adc
imul
mov
push
pop
xchg
push
out
and
decb
in
dec
xor
adc
fs
xchg
std
ficomps
and
iret
jle
mov
and
rcll
push
ja
pop
add
mov
test
adc
add
mov
outsb
xor
xor
aad
cmpsl
sbb
sub
jge
fists
mov
mov
and
addr16
or
iret
stos
shl
mov
std
or
aaa
and
fldcw
in
lret
movsl
xorb
or
shrl
jb
xor
jb
mov
sub
mov
and
or
and
not
arpl
mov
lods
pop
push
cmp
lds
int
mov
in
cmp
cmp
in
test
push
push
fwait
xchg
jno
fnstsw
add
adc
pop
cmp
scas
and
mov
xor
dec
popf
into
cltd
dec
inc
xchg
nop
push
dec
test
pop
outsl
lret
lahf
mov
mov
cmp
ds
dec
icebp
adc
and
mov
test
leave
ret
or
shrl
daa
test
out
push
sbb
loop
sbb
das
sbb
mov
lahf
js
mov
xor
xlat
adc
mov
xor
or
lea
stc
fists
out
cltd
push
push
add
cmp
dec
mov
lods
mov
fisttpll
rorl
enter
cwtl
ljmp
loopne
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sub
xor
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
addl
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
ja
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
mov
xor
xor
mov
adcl
add
andl
mov
inc
mov
cmpl
jge
jmp
pushl
call
cmpl
jb
movzwl
or
mov
andl
movb
mov
sub
lea
movl
cmpl
je
cmpl
ja
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
xorl
mov
xor
add
andl
mov
sbb
movl
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
subl
push
dec
mov
andl
xor
or
mov
adcl
push
andl
add
movl
jmp
movl
mov
movl
mov
movl
inc
movl
cmp
jb
sbb
mov
adcl
xor
subl
add
jmp
mov
mov
sbbl
xor
adc
mov
xorl
add
adcl
movzwl
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
call
jmp
mov
addl
movzwl
xor
add
mov
mov
inc
mov
mov
cmp
jne
movl
cmpl
je
cmpl
jle
jmp
push
call
xor
add
dec
mov
jmp
mov
and
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
push
pushl
push
pushl
call
cmpl
jb
xor
inc
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
xor
mov
andl
xor
xor
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
xor
and
add
orl
mov
adc
movl
or
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
mov
mov
mov
xor
xor
or
add
mov
mov
je
addl
mov
mov
and
mov
mov
xor
xor
xorl
sub
sub
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
call
mov
dec
mov
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
add
imul
orl
mov
sub
jmp
add
cld
shl
mov
xchg
lret
test
cmpl
addl
lea
sbb
mov
sbb
addr16
mov
in
fldlg2
and
sbb
adc
test
xchg
mov
aad
jno
cmp
repnz
loop
sub
fsts
mov
shlb
cmpsb
ljmp
xor
xchg
jmp
sub
mov
push
aas
dec
inc
xchg
xor
lds
inc
fcoml
dec
mov
inc
and
pop
adc
xor
push
adc
das
add
movsb
sbb
mov
inc
cli
iret
mov
cmp
mov
arpl
scas
out
xlat
fwait
test
clc
adc
btc
sbb
push
xor
mov
add
test
in
cld
jo
dec
cltd
mov
push
mov
stos
fstpl
and
dec
adcl
inc
push
or
in
xchg
dec
sbb
and
hlt
sbb
cmp
pop
inc
test
subb
jb
mov
mov
mov
adc
inc
daa
repz
sbb
cs
rcrl
outsl
nop
inc
bndstx
push
insl
imul
push
sbb
test
cmpl
pop
lds
pop
inc
stos
dec
dec
dec
je
cmp
mov
rorb
mov
mov
mov
stos
scas
xchg
cli
add
je
idivb
fchs
ja
push
ret
mov
mov
xchg
mov
push
cmp
pop
loope
inc
mov
test
push
repz
and
dec
cmpsl
adc
push
mov
fs
mov
lds
cs
test
mov
popa
nop
mov
mov
scas
pop
mov
cmp
outsl
sub
jge
dec
fsubrl
dec
adc
or
iret
push
lea
cld
fs
mov
stc
cmp
push
xchg
ja
mov
cwtl
adc
sti
xor
inc
push
out
push
mov
int
fiadds
xchg
cmp
push
xchg
xor
fistpl
sub
jne
jae
bound
jmp
aas
mov
fldenv
cltd
cmp
mov
icebp
lods
add
arpl
mov
leave
add
pop
ds
add
aaa
sbb
or
dec
cwtl
ds
pop
pop
xor
or
lods
cld
lret
je
in
repnz
dec
pop
mov
pop
test
or
leave
xchg
push
inc
xchg
lret
fcmovne
mov
fmuls
jg
cltd
pop
xor
or
adc
lods
aas
mov
mov
subb
je
lcall
push
subl
inc
xor
jns
call
loope
mov
jno
push
rorl
out
sarl
into
fidivl
orl
push
movsl
in
and
cld
mov
ljmp
or
repnz
sub
sti
mov
adc
imul
into
pop
mov
enter
jne
and
adc
xor
rclb
lods
ja
pop
dec
orl
leave
icebp
mov
cmp
arpl
dec
pmuludq
nop
jl
push
push
adc
scas
mov
pop
jl
adc
cld
mov
mov
hlt
dec
mov
add
fdivs
outsl
xor
dec
arpl
test
inc
pop
and
and
out
in
into
and
jecxz
push
or
pushf
dec
xor
mov
shlb
add
insb
push
pop
add
ljmp
xor
sub
xorb
add
ficomps
clc
and
mov
pop
mov
andl
inc
mov
jle
jnp
addr16
bound
jae
jl
cwtl
fsin
mov
mov
jne
mov
mov
ret
pushf
decl
or
push
jmp
sub
dec
lea
sbb
aad
in
jb
fnstsw
pop
lods
pop
xchg
out
cmp
or
inc
lcall
xchg
ret
ss
jno
and
jno,pt
xlat
push
hlt
xor
and
inc
jno
mov
int
sbb
out
mov
cmpsb
xchg
divb
popf
mov
jae
sbbl
shll
in
sub
mov
adc
outsb
pop
mov
filds
in
push
int
mov
rcl
insb
mov
shr
pop
rol
cmp
clc
scas
cs
pop
rcrl
lahf
jmp
sbb
cwtl
xlat
stos
dec
xchg
mov
xchg
mov
mov
outsb
jno
pop
sub
xchg
mov
xchg
in
fiaddl
fwait
push
sub
mov
rcrl
hlt
cwtl
aaa
add
cmpsl
pop
stos
xchg
jnp
sbb
add
mov
in
xor
ja
fists
sahf
ds
push
mov
in
adc
scas
shrb
fistpl
nop
out
mov
repnz
stc
xor
mov
icebp
loop
push
push
pop
xor
add
jbe
or
xchg
popa
sbb
scas
sbb
imul
xor
mov
mov
addb
inc
cld
sbb
mov
nop
or
jmp
aam
mov
insb
test
fucomip
and
sub
repnz
sbb
scas
mov
xor
mov
cmpsl
sbb
out
stos
xor
sbbb
stc
xchg
out
or
test
cmp
cmp
and
push
pop
mov
test
jne
lock
cltd
sarb
aam
popa
or
cmp
pop
mov
mov
popa
roll
mov
outsb
pusha
cltd
lods
push
sub
dec
dec
ja
mov
mov
cmc
ret
fisubrs
aaa
call
jecxz
or
dec
fcmove
jg
arpl
jecxz
or
in
push
ljmp
push
fistpll
jmp
push
popa
das
nop
out
mov
pusha
inc
and
loopne
sbb
leave
aaa
enter
pop
push
and
bnd
pop
mov
scas
lahf
pop
push
jg
mov
rcrb
inc
ds
push
loop
cmp
jne
and
decb
xchg
add
pop
sub
adc
mov
mov
jl
mov
ret
sahf
mov
mov
out
aad
push
cmp
push
out
shll
fs
dec
icebp
loopne
outsb
or
fidivrs
ljmp
ds
push
pop
aam
push
daa
int3
add
iret
add
dec
aaa
aam
cwtl
push
jae
mov
out
pop
fildll
push
hlt
mov
lret
push
js
lds
test
arpl
lock
jmp
cwtl
fildll
or
fdivr
cmpsl
xlat
sahf
pop
push
xchg
jmp
arpl
ja
jno
aad
push
ljmp
xsavec
inc
mov
and
mov
adc
scas
sub
push
sti
jbe
xchg
hlt
mov
arpl
add
lods
jo
mov
mov
adc
aad
ret
xchg
jns
jg
push
pop
ret
push
xchg
adc
xchg
es
stos
sub
cmc
lds
xor
shll
sub
jo
test
cmpsb
pop
xchg
aad
or
in
loope
mov
jle
xchg
fwait
and
outsl
iret
or
cmp
repz
stos
jl
jle
fbld
xchg
or
les
sbb
add
cwtl
stc
fimull
dec
daa
test
push
xchg
sbb
imul
jecxz
ja
js
cltd
enter
push
je
mov
cltd
xchg
sar
outsl
xor
add
ljmp
mov
test
subb
sbb
adcl
popa
mov
shll
adc
mov
inc
lahf
dec
xor
sbb
and
test
cld
cmp
popf
push
icebp
int3
inc
movsb
add
xchg
outsl
lock
shrl
add
js
lahf
jmp
pop
pop
in
lret
out
rclb
add
xchg
jbe
out
sub
jp
mov
inc
jmp
ror
or
rcrb
mov
mov
enter
cmp
or
hlt
stc
daa
or
adc
mov
jbe
adc
mov
adc
scas
mov
mov
lahf
cmpl
push
iret
call
xor
les
sbb
jl
dec
mov
pop
push
or
xchg
dec
repz
scas
mov
add
aad
rolb
loopne
stc
sub
push
or
test
out
add
popf
in
push
adcl
xor
imul
dec
mov
fdivl
cmp
adc
mov
mov
test
mov
stos
mov
pop
xchg
xor
sti
or
and
out
out
movsl
xchg
jmp
popf
jb
rcl
out
sahf
xchg
fsubl
mov
les
mov
mov
mov
mov
mov
in
iret
cmp
adc
mov
iret
stos
sub
cmp
pop
out
xor
imul
xor
adc
imul
mov
fiaddl
jno
nop
push
pop
adc
mov
xchg
fs
insb
jecxz
mov
pop
sarl
inc
mov
pop
sbb
vxorps
dec
loopne
inc
dec
jno
sti
mov
and
pushf
mov
icebp
jecxz
fnstcw
xchg
loop
ret
idivl
jmp
call
hlt
cmp
jno
push
pop
push
and
shlb
jb
out
mov
adc
inc
mov
popa
add
jae
or
adc
pop
fistl
clc
ds
lret
std
wrmsr
sti
cwtl
xor
lock
popf
pop
out
mov
jp
pop
push
lds
push
pop
pslld
data16
ret
fists
mov
push
mov
movsl
pushf
mov
jns
jp
or
cmp
fidivrs
mov
mov
test
xor
rolb
or
stc
cmc
pop
popf
loope
and
cmpsl
inc
outsb
pusha
xchg
std
test
adc
test
outsb
ljmp
sbb
xor
pop
test
rorb
mov
mov
xchg
mov
cltd
sbb
or
adc
inc
sbb
sub
nop
cmpsb
out
mov
mov
loop
aam
data16
test
dec
imul
shl
jbe
sbb
dec
movsl
mov
or
jno
adcl
icebp
loope
xchg
mov
add
xchg
pop
and
mov
inc
lcall
add
sub
testl
shll
sbb
scas
ror
loopne
lds
subl
jne
pushf
push
sub
add
inc
icebp
jae
inc
sbb
mov
mov
pop
push
outsb
xor
pusha
idiv
lods
scas
fidivrs
stos
repnz
inc
scas
scas
out
pushl
addr16
add
lretw
inc
lock
push
es
sti
xchg
cli
push
sub
sbb
pop
adc
jle
fisubrs
cmp
xor
jmp
call
push
loop
dec
xchg
sti
pop
or
inc
jb
push
lret
test
lret
inc
sbb
push
or
daa
xchg
pusha
mov
mov
jo
sub
xor
and
divps
jnp
push
inc
lea
lods
daa
or
fucomip
inc
sub
push
xor
xor
popf
jnp
pop
inc
inc
scas
testb
das
pop
stos
xorb
push
push
mov
xlat
xlat
enter
pop
out
adc
push
pop
mov
inc
insl
rol
dec
inc
mov
loope
jecxz
cltd
mov
jle
aad
cwtl
ljmp
push
std
fisubl
push
xchg
shlb
mov
push
in
add
pop
pop
fwait
lcall
es
cmp
insl
inc
call
ss
add
std
mov
or
jo
mov
out
push
sbb
lret
jmp
jmp
pop
outsb
mov
push
adc
cmpsl
ds
out
cmpsb
cs
aas
lea
test
lret
test
add
dec
sub
das
push
lea
daa
inc
mov
xlat
mov
xor
sahf
bnd
mov
dec
rcrb
dec
fistpl
xchg
pop
inc
aam
add
ljmp
xchg
dec
mov
sbb
insb
fisubl
push
cli
sbb
push
test
dec
jns
repnz
mov
pushf
mov
bound
pushf
int3
push
lods
adc
sbb
sbb
mov
dec
out
pop
test
js
out
dec
mov
dec
sbb
jbe
imul
fists
or
mov
pop
cs
xor
loop
lea
loop
pop
in
mov
mov
das
jge
jmp
pop
cmp
push
add
mov
dec
dec
lods
pop
shrb
jmp
lret
iret
dec
leave
stos
push
adc
aaa
push
fs
pop
xchg
cmc
push
xchg
lahf
and
push
jbe
xor
cmp
push
fstl
sahf
jmp
xchg
jae
aad
push
sbb
xchg
ljmp
xchg
add
mov
in
scas
jg
mov
push
leave
inc
cltd
dec
add
sbb
adc
loop
aam
sbb
adc
jecxz
jge
and
push
test
in
sub
pop
adc
pop
sti
push
ret
pop
punpckldq
xchg
fidivl
sahf
inc
pop
dec
cli
fimull
push
lcall
mov
hlt
jmp
movsl
lret
movsl
cwtl
xchg
jno
cmp
clc
loop
adc
or
cld
out
imul
jne
outsb
mov
outsl
cmp
xchg
xor
loope
lret
adc
xchg
mov
pop
mov
mov
mov
jmp
dec
mov
adc
fsubl
inc
mov
bound
xor
addr16
dec
dec
les
add
sbb
cmpsl
adc
pop
outsb
call
and
dec
or
fidivrs
sahf
cs
stos
sahf
adc
lds
fisttps
fsubrs
das
xor
push
cltd
and
icebp
pop
inc
enter
mov
mov
movsl
into
mov
loop
mov
pop
adc
aam
aad
mov
push
jp
fisubs
pushf
imul
mov
cwtl
add
sbb
aam
xchg
adc
cld
lds
movsl
dec
sbb
xchg
mov
in
jno
xchg
enter
inc
fs
cs
repnz
aas
mov
push
push
jge
fidivs
pop
inc
mov
inc
mov
aad
iret
dec
add
mov
aad
cwtl
cmp
cld
xchg
mov
je
popf
jmp
mov
daa
dec
jae
fists
out
movsb
mov
cmp
aas
arpl
jno
mov
jns
ficoms
dec
push
dec
enter
pop
xlat
addr16
stos
xor
jno
cmpsl
adc
aaa
pop
loopne
xchg
add
mov
cmp
xor
out
loopne
mov
cwtl
out
mov
out
jo
jmp
mov
jecxz
lret
jae
outsl
inc
xor
ret
loop
inc
mov
ret
mov
test
rorl
sbb
jo
dec
pushf
lcall
lock
sub
ret
out
push
outsl
mov
mov
or
call
fs
fneni(8087
lods
sbb
inc
xor
fsubp
pop
in
pop
mov
iret
out
scas
outsb
jp
fcomps
cmp
push
pop
mov
roll
xor
add
test
adc
lods
shrb
sbb
ret
out
xor
repnz
loopne
lcall
push
cltd
inc
mov
sbb
cmp
sub
xor
pop
ret
in
pop
mov
inc
inc
cmc
in
cmp
mov
aam
mov
sub
mov
fs
fs
lret
inc
mov
imul
mov
jg
test
das
dec
sbb
xadd
xchg
or
adc
cmp
lea
inc
adc
push
cmp
lcall
shl
pop
inc
mov
mov
addr16
xchg
inc
adc
mov
mov
loopne
mov
or
ljmp
icebp
stos
sbb
outsb
mov
cmp
lret
push
inc
lods
and
mov
mov
or
xor
push
clc
push
or
cmp
mov
insl
aad
fimuls
clc
sbb
mov
add
push
pop
cmpsl
xchg
xchg
adc
imul
daa
fsubrl
push
cmc
mov
push
aas
sbb
xchg
mov
in
mov
mov
ljmp
ret
shlb
or
les
push
jnp
popf
cmpsl
and
pop
push
inc
cs
fxch
std
fnstsw
jns
lods
scas
cmp
dec
je
mov
outsb
mov
sub
sbb
in
fisubrl
jno
in
cmpsb
punpcklwd
pop
dec
mov
push
mov
pushf
add
dec
xor
jae
mov
dec
inc
or
adc
add
push
jmp
aad
out
in
push
inc
ret
fstpt
jae
inc
loop
lcall
push
push
ljmp
or
mov
sbb
or
mov
pop
cwtl
fidivl
out
outsb
outsb
shl
jp
mov
test
mov
pop
pop
inc
mov
test
shrb
sbbl
lock
nop
call
rolb
ret
aam
sub
les
vmread
lds
int3
sub
dec
testl
push
repz
sti
enter
and
push
lods
repnz
lds
aaa
test
je
imul
xor
jne
jecxz
not
jg
xchg
cli
xchg
pop
out
es
repnz
mov
xchg
rcll
inc
movsb
clc
std
bnd
jae
push
cwtl
and
push
shlb
pop
jns
in
inc
cli
and
nop
sbbb
popa
stc
push
adc
shrb
xlat
scas
or
fs
fistpll
std
pop
dec
lret
mov
pop
repz
xchg
sub
jle
xor
ja
ret
push
lock
rcll
cmp
lea
cmp
ss
aaa
mov
imul
call
imul
xor
push
xlat
outsl
mov
pushf
push
rolb
jle
sbb
fs
mov
sbb
cli
cltd
xlat
std
adc
add
fildl
ret
stos
js
arpl
xchg
pushf
into
inc
xor
sbb
sbb
dec
ss
cmpsb
aad
stc
iret
mov
cmp
sbb
sbb
mov
mov
movsl
sub
imul
dec
mov
int3
mov
dec
in
idivl
xchg
push
sub
cmp
cwtl
jno
mov
mov
sbb
jae
add
sarb
sub
sbb
movsb
or
adc
pop
ret
jns
and
inc
cmp
push
frstor
jecxz
fneni(8087
cli
jns
sbb
imul
stc
imul
les
mov
scas
pop
loope
pop
add
fistpll
stc
std
push
sub
dec
pop
push
nop
pop
mov
jns
jp
sbb
out
fmul
outsb
dec
lret
movl
mov
push
push
inc
fst
idivb
lds
and
lods
inc
sbb
rcl
cltd
mov
push
inc
int
jb
inc
cmp
xorb
mov
add
jae
scas
xchg
stos
rcr
mov
and
insl
xchg
das
mov
xchg
adc
pop
sub
push
test
cmp
scas
jecxz
jmp
push
or
ret
cmpsb
insl
inc
inc
dec
dec
addr16
jg
push
mov
ljmp
int3
fildl
push
test
aam
sub
mov
lret
bound
lock
inc
lret
jmp
pop
inc
fistl
aam
mov
in
pop
and
mov
test
pop
test
jle
push
clc
out
mov
repnz
lcall
cs
inc
jno
shl
sti
out
lea
ss
or
repnz
and
in
test
adc
sti
jns
mov
fistpll
fildl
scas
adc
push
inc
xor
jecxz
mov
mov
addr16
cmc
fildl
jmp
iret
or
cmpsb
adc
test
int3
adc
fwait
lea
ljmp
jmp
mov
call
sbb
fsts
add
push
movsl
ja
add
sub
in
cmp
jbe
ret
cltd
fistpl
sub
jns
lret
fmul
and
xlat
xlat
imull
sbb
loop
jmp
lret
push
outsb
xchg
mov
cmp
loop
xor
popa
mov
inc
pop
jp
fcmovne
dec
mov
fdivl
xlat
lods
js
mov
lods
xchg
inc
xor
push
mov
add
lahf
mov
pop
or
inc
mov
stc
in
sub
sarb
jae
mov
push
mov
cmp
imul
xor
push
mov
cmp
jl
sti
adc
test
scas
stc
outsb
dec
adc
ret
mov
fsubr
sahf
sbb
ljmp
fdivl
mov
fsubrl
insl
mov
or
imul
xlat
pop
and
lret
xchg
mov
mov
mov
pop
shr
into
dec
pop
lahf
inc
push
sub
jb
daa
cmp
stos
jmp
pushf
dec
jnp
negb
in
mov
in
test
mov
inc
push
and
mov
lock
daa
lret
xchg
in
xchg
ljmp
int3
cmp
add
xchg
ljmp
add
fdivrs
xor
or
pop
fnstenv
fwait
sti
hlt
xchg
cmp
ljmp
xchg
cmp
xlat
mov
push
je
pop
inc
mov
mov
inc
and
dec
sub
bound
sbb
outsl
lahf
adc
push
in
jg
mov
pop
aam
pop
ljmp
or
adc
lret
int
fidivrs
adc
ficompl
dec
xchg
bound
mov
mov
add
pusha
mov
adc
stc
cmpb
xchg
sbb
mov
mov
lcall
sub
insb
bsf
mov
test
ret
mov
in
cmp
push
sub
cmpsl
shlb
sub
sbb
push
fs
ret
inc
cld
fucomp
cmp
aas
movsl
fsubrl
pop
jne
dec
shl
add
sbb
out
dec
lret
hlt
dec
xlat
imul
icebp
mov
cltd
cmp
in
jmp
add
sub
mov
gs
and
je
aam
cmp
mov
dec
inc
add
lret
ds
adc
jmp
jbe
rcrl
std
push
lret
add
rol
ret
enter
sbb
enter
mov
addr16
sub
rcll
xchg
jae
cwtl
cltd
cwtl
leave
pushf
inc
mov
sub
into
pop
fnsave
lcall
stos
or
in
jp
je
aaa
ret
lahf
sbb
daa
inc
xorl
jo
ja
or
mov
mov
adc
daa
andl
xchg
ja
ja
pop
dec
jnp
adc
mov
mov
mov
lret
insl
loop
sub
and
inc
mov
push
dec
sub
add
push
and
mov
sbb
ljmp
test
fsts
or
imul
jmp
loope
movsb
ss
pop
pop
popa
aad
in
gs
mov
repz
sbb
lahf
xchg
aad
pop
push
ret
fsub
adc
aad
jl
lret
ret
hlt
dec
ret
or
call
and
add
rcrb
lds
ret
xor
adc
inc
sbb
ja
fldt
enter
pop
jb
sub
out
jns
mov
mov
mov
icebp
inc
pop
out
dec
push
cmpsl
pop
fnstenv
mov
lds
bound
cltd
mov
mov
nop
shll
loop
push
jo
mov
xchg
pop
pushf
mov
shrb
jmp
fsubs
cmp
mov
jae
adc
or
stos
loope
es
add
jecxz
outsl
inc
sub
xchg
out
push
mov
jmp
stos
dec
push
mov
lret
and
add
sbb
jmp
cmp
out
daa
dec
divl
test
cltd
inc
mov
int
popa
and
sbb
xor
call
test
out
push
aaa
scas
cs
mov
push
fisttpll
fs
mov
imulb
push
shl
sbb
mov
loop
cld
sub
inc
mov
pop
add
mov
cmpsb
clc
mov
xchg
hlt
sbb
aad
nop/reserved
pushf
sbbl
aaa
rorb
out
adc
cld
mov
sbb
push
inc
call
aam
movsl
and
inc
cmp
push
jbe
cmp
xchg
cltd
push
cmc
and
rorl
popf
fnstsw
inc
lods
cld
jmp
inc
hlt
or
xorl
jmp
mov
pop
mov
shl
ds
mov
shll
rcr
pop
outsl
push
push
nop
or
out
into
gs
aas
cmp
jle
dec
mov
xor
int
mov
in
ret
sub
jne
fcomps
xor
xchg
and
test
cmp
aaa
sub
mov
xchg
cmp
aaa
jo
subb
test
push
dec
jo
fsubs
gs
sub
pop
adc
jecxz
pop
cmp
mov
sub
pop
sub
test
pushl
insl
pop
jp,pt
dec
jo
jne
jbe
fadds
sbb
stos
or
es
mov
cwtl
or
push
pusha
push
mov
and
lret
xor
xchg
inc
pop
mov
icebp
rorl
sti
and
in
sbb
sbb
loope
pusha
push
mov
cmc
push
and
jae
pop
pop
movsl
mov
dec
cmp
pop
cmpsb
lcall
pop
or
icebp
dec
push
jp
push
jno
add
sahf
loopne
cmp
dec
ret
call
jp
and
cmp
dec
sub
sti
xchg
fisttpl
and
xor
loopne
inc
push
or
ja
or
movl
scas
add
jbe
pop
dec
into
mov
arpl
mov
and
xchg
or
mov
movsl
test
scas
pop
insb
sbb
cmp
sbb
sub
add
add
jnp
sub
push
pop
adc
cmp
js
mov
cmp
clc
mov
decl
jbe
test
adc
das
jb
push
shl
dec
xchg
add
or
mov
loopne
js
or
mov
cmp
and
int3
adc
aam
mov
xor
xchg
insb
test
add
push
mov
sub
dec
test
fs
adc
shl
jo
push
or
test
dec
sahf
andl
mov
fistpl
iret
add
fadds
xchg
outsb
add
fwait
test
jns
inc
inc
push
push
mov
stc
imul
mov
xor
aas
sti
or
out
ss
mov
fsubl
mov
test
cwtl
repz
cltd
adc
rcrl
sbb
sti
mov
inc
daa
orb
sbb
push
ljmp
movsl
in
ret
stos
fiadds
cld
push
add
hlt
xor
stc
loopne
jp
movsl
ret
push
inc
xor
mov
dec
lcall
shll
repz
push
pop
int3
mov
add
mov
push
gs
adc
add
in
adc
nop
aas
test
setp
clc
clc
int
push
enter
and
out
pop
fwait
hlt
and
cltd
ficoms
xor
repz
xchg
cmp
and
jbe
out
and
shll
mov
outsl
push
xchg
hlt
fisttps
jb
xor
test
mov
push
iret
cmp
testl
sbbb
pop
cld
imul
out
outsb
add
ss
push
sbb
mov
rcrl
pop
stos
pop
sbb
xor
xchg
mov
icebp
ret
jge
shl
incl
and
dec
mov
cmp
fdiv
cmp
cmp
or
in
addl
push
sbb
xchg
hlt
je
shl
mov
in
pop
pop
dec
in
pop
cmc
mov
mov
shrl
sbb
inc
xorl
pcmpgtw
lahf
mov
sbb
mov
ret
movsl
out
outsl
cmc
xchg
jl
sub
fwait
in
mov
sbb
movsl
or
mov
mov
inc
mov
or
std
cmp
les
movsb
pop
jge
and
cmp
xchg
pop
notl
enter
enter
icebp
jno
imul
add
mov
sarl
flds
sbb
es
sub
rorl
rcrl
loopne
out
pop
aas
leave
add
and
or
mov
arpl
add
push
adc
testl
mov
out
and
mov
xor
xor
or
inc
and
icebp
add
es
sub
movsl
es
in
out
les
imul
mov
scas
cmp
loopne
xor
and
xchg
jp
cli
repz
into
outsl
out
sub
test
ss
cld
scas
outsb
lret
mov
sub
jecxz
xor
movsl
or
movsb
mov
arpl
test
les
in
das
xchg
cmc
fcmovnu
stos
fcmovb
sahf
sarl
ja
xchg
pop
test
arpl
bound
rcl
test
scas
mov
cmpsl
or
rorl
adc
mov
adc
push
arpl
sbb
pusha
xchg
sub
cmp
sub
inc
sub
xor
inc
fs
mov
sti
push
aam
shrl
gs
mov
pop
or
lret
dec
mov
fldcw
jge
icebp
cmp
add
fwait
clc
mov
sbb
inc
xchg
cld
xor
data16
dec
adc
jno
push
cwtl
adc
add
cmp
sarb
sub
aaa
push
sub
mov
fmull
add
or
adc
jns
cli
sahf
cld
lods
jmp
mov
dec
shlb
ret
sbb
dec
mov
inc
repz
jae
and
cs
pop
pop
mov
in
pop
push
adc
mov
mov
outsb
inc
sub
and
pop
xchg
xchg
mov
lret
test
or
mov
cmp
push
enter
dec
sbbb
xor
jl
push
mov
and
or
ss
inc
or
mov
in
jp
ret
or
add
add
add
sldt
add
sbb
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
add
or
mov
mov
xor
mov
andl
add
sbbl
xor
mov
movl
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
and
mov
add
mov
addl
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
sub
xor
mov
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
jmp
xlat
push
xchg
repz
addb
test
cmp
ds
addl
add
or
int3
pop
ds
test
and
xor
inc
add
jne
fcomp
pop
ret
sub
mov
inc
popa
xor
lea
daa
fldenv
fwait
pop
pop
popa
lds
loopne
sbb
out
gs
jno,pt
cmc
std
mov
and
mov
scas
xor
pop
jns
xor
shr
mov
lds
push
inc
cs
cld
out
add
bound
push
lods
dec
test
clc
fstl
nop
adc
inc
mov
decl
lcall
addl
pop
nop
push
cs
add
sbbb
mov
or
loope
mov
pop
hlt
dec
sub
fisttpll
and
inc
sub
test
sbb
in
dec
fldcw
xchg
lahf
push
or
xor
adc
shrl
fsubs
xchg
cltd
add
out
movsb
stos
ss
mov
lret
push
jge
mov
mov
int3
sbb
xor
pop
cmp
add
add
out
xchg
xchg
lahf
jb
cld
and
lcall
shrb
cmp
xorl
repnz
lea
scas
in
mov
in
out
cmp
cmp
inc
fnsave
lahf
mov
or
xchg
lcall
pop
push
in
bound
test
pop
sub
pop
dec
adc
mov
xchg
xchg
jl
imul
ret
sub
stos
pushf
sub
or
iret
ss
pop
jle
in
xchg
loop
roll
sub
push
pop
push
test
insl
or
xor
xorl
push
mov
adc
mov
loopne
pop
jb
out
inc
ljmp
pop
mov
popa
sub
arpl
push
cmp
je
out
xchg
dec
cwtl
call
addb
sahf
nop
cmpsl
xchg
xchg
pop
pop
pop
js
jns
pop
dec
fldt
fcmovnu
out
adc
pop
pop
std
push
xchg
jl
sahf
into
mov
aaa
loopne
adc
out
push
rolb
sbb
addb
and
icebp
and
add
rorl
in
jae
xlat
jno
bound
lahf
push
xchg
mov
inc
mov
mov
aas
dec
push
mov
pop
jbe
shl
popf
loopne
movsb
bnd
xchg
loope
bound
xchg
repnz
mov
rcr
xchg
adc
cwtl
push
mull
mov
negb
jae
adc
orb
mov
push
stos
mov
xor
ja
mov
addb
mov
addl
mov
pusha
xchg
cmp
dec
and
add
sub
mov
sbb
sahf
sbb
in
adc
pop
test
and
mov
iret
mov
lret
les
into
jmp
mov
mov
mov
addl
sbb
out
outsb
jecxz
sub
jbe
jg
cmpsb
mov
adc
lds
and
push
lret
xchg
lea
mov
adc
and
jns
int
xchg
cltd
rcrl
cmp
adc
jns,pt
fiadds
mov
in
mov
mov
cltd
inc
in
movsl
insb
mov
leave
lret
pop
push
std
ljmp
jae
mov
push
or
out
add
cltd
out
fsts
xchg
imul
mov
test
dec
cmp
mov
sahf
jnp
icebp
sbb
inc
int3
arpl
jnp
in
lods
cli
gs
test
shll
lcall
mov
lret
sbb
lods
loope
jo
adc
cmpsl
rorb
sub
add
mov
jns
or
jmp
cmpsb
mov
cmpsb
jle
pop
mul
and
in
dec
std
mov
ret
in
xor
push
or
addr16
jnp
sti
inc
fisttpl
mov
imul
mov
rolb
ret
repnz
mov
cmp
sbb
lea
xchg
adc
test
mov
out
cwtl
adc
push
push
loope
jg
lret
xchg
sti
and
insl
into
cld
fisubrl
or
nop
mov
jle
jno
out
mov
ret
dec
enter
push
dec
test
call
sub
insl
or
and
cmp
xorl
jp
mov
push
jb
dec
jne
push
nop
mov
repnz
movsb
pop
sbb
dec
xor
icebp
icebp
pop
pop
dec
xor
les
mov
push
dec
arpl
add
xchg
arpl
int
clc
es
adc
mov
scas
cmpsl
xchg
jnp
sbb
movsb
jge
les
inc
mov
and
fs
jge
lods
or
mov
fdivr
mov
push
add
aad
xchg
lcall
mov
mov
aas
call
fidivs
pop
mov
in
stc
push
ret
adc
pop
push
inc
push
inc
mov
dec
lcall
inc
push
lahf
roll
int3
fs
sub
xlat
das
fstpt
gs
scas
or
inc
mov
xor
imul
pop
pop
dec
xorl
fistpl
pop
xchg
outsl
xor
in
adc
fstl
bnd
es
mov
pop
mov
add
cmp
sbb
lds
loope
ds
fs
sbb
mov
icebp
xchg
mov
lret
xchg
test
lcall
xchg
shll
xor
mov
lret
xor
cmp
pop
xor
dec
mov
or
push
in
cmp
push
insb
pop
add
sub
jns
ds
add
mov
fwait
repz
add
pop
mov
leave
ja
sbb
hlt
and
jecxz
fisubrs
xchg
aas
int3
push
addl
xor
data16
push
push
pop
mov
push
scas
pop
repz
aad
ja
lods
adc
pushf
loopne
jb
jno
js
ss
xchg
add
ja
mov
push
cmp
inc
xor
inc
shlb
or
stos
push
stos
outsb
mov
shlb
add
in
or
ljmp
xchg
jl
xchg
xorl
inc
in
loop
jb
ret
dec
inc
fisttpl
sbb
imul
aam
fiadds
pop
xchg
jge
push
xchg
test
dec
in
pop
mov
sarl
or
push
out
aam
push
imul
cmc
mov
inc
movsb
out
lcall
fwait
ret
pushf
sbb
stos
mov
es
mov
test
pop
jbe
outsl
notb
inc
xor
mov
lds
lods
orb
mov
pusha
sbb
lods
add
inc
sub
pop
mov
cmp
int
mov
mov
out
das
int
jo
in
out
mov
push
test
mov
mov
mov
mov
lods
adc
push
xor
pop
icebp
mov
rol
bound
fnstenv
jo
xor
pusha
push
and
push
mov
fstps
mov
cmp
dec
mov
sarl
std
mov
int3
out
pop
push
add
popf
addr16
lds
and
inc
inc
jb
cmpsb
rcrl
sbb
outsl
mov
push
push
sti
jo
fldenv
sub
lods
mov
aaa
adc
sbb
or
fidivs
mov
std
rolb
add
xchg
cltd
push
test
pop
jne
sub
jg
outsl
push
mov
fbstp
loopne,pt
out
sarl
int
or
imul
clc
xchg
or
or
adc
in
cmpsb
aad
andb
sub
jmp
and
stc
jle
or
xor
and
jbe
dec
out
fildll
pusha
sub
mov
iret
jmp
adc
jns
sub
push
cs
pop
push
aad
int3
pusha
xor
push
aad
scas
fdivr
loop
sub
xor
mov
push
fwait
ret
add
test
ss
fs
dec
sub
adc
cmp
cwtl
xchg
xchg
ja
mov
pop
add
arpl
inc
test
daa
xchg
pop
mov
pop
ret
mov
cmp
dec
cltd
loop
jg
adc
cwtl
xchg
cli
jb
out
xchg
sbb
add
bsf
jns
xchg
lret
gs
fisubrs
ss
ret
in
cmp
cmc
rcrb
daa
js
and
dec
xchg
sti
ret
insl
scas
inc
and
lock
push
cmpsb
jne
dec
jb
shrb
mov
sbb
xchg
insb
addr16
mov
scas
pop
or
inc
inc
fdivl
mov
out
jne
addl
fdivl
sub
scas
js
je
mov
popl
mov
repz
jg
rcrb
sub
cmp
in
jne
mov
xor
sti
pop
jmp
imul
mov
jnp
xchg
xor
mov
jp
pop
lea
rorb
and
cmp
mov
inc
inc
call
sub
jbe
adc
cli
xor
lcall
popf
shll
ja
and
movsl
mov
popf
cwtl
inc
subb
fdivs
arpl
add
cmpsl
push
xor
imul
adc
jne
fstpl
insl
ret
and
xchg
or
cmpsb
inc
in
sub
mov
adc
das
push
inc
push
xor
ja
cmp
popf
mov
xor
mov
sub
pusha
jo
rclb
add
subl
and
pop
movsb
leave
push
jns
sbb
jb
ds
mov
inc
out
inc
repz
cmc
cs
sub
mov
rcll
pop
out
mov
cmc
movsb
ja
scas
insb
pop
sbb
test
mov
lods
repnz
enter
loop
mov
jle
repz
xchg
pop
push
data16
ret
cmp
fstpt
mov
pop
adc
dec
rcr
or
pop
inc
stos
shrl
lret
pop
inc
pop
orl
add
outsl
adc
dec
sub
fsubs
ret
aas
nop
fwait
sahf
int
cmc
pop
cmp
movsl
lods
mov
xor
push
test
dec
scas
je
fisttpl
cmpb
adc
dec
ja
mov
mov
mov
mov
pop
das
xchg
inc
add
jae
loope
or
cmp
xchg
add
mov
adc
insl
lret
cmc
jnp
or
mov
push
addr16
loope
mov
xor
xchg
aas
adc
push
inc
stc
adc
lret
lods
jecxz
mov
jo
rolb
xor
mov
and
mov
outsl
jge
sbb
xchg
fdivrl
push
add
mov
cmp
mov
lret
jns
out
jne
cmp
add
mov
adc
and
cmp
rcr
pop
and
enter
push
pusha
outsb
nop
inc
sub
icebp
iret
fs
roll
jo
loop
das
jb
push
outsb
cwtl
adc
lea
out
insl
sbb
decb
mov
xchg
sbb
dec
push
xchg
and
adc
cmp
or
fmul
fwait
inc
jmp
sti
and
or
test
sub
aaa
mulb
mov
lds
add
test
mov
dec
inc
jmp
push
lods
shlb
es
mov
push
mov
push
stos
js
cmpsl
sbb
stos
cs
test
adc
out
push
stos
je
lret
or
pushf
fs
push
jbe
xor
cmp
sbb
dec
mov
mov
adc
lock
jno
pop
stc
xchg
mull
xor
int3
in
sbb
inc
shrb
dec
andb
adc
jnp
popa
loop
mov
shrb
fwait
mov
adc
das
ds
dec
dec
inc
mov
andb
outsl
pop
fiaddl
aaa
lea
xor
inc
fimull
mov
ds
cmp
decl
sbb
stos
aaa
xor
rolb
cmpsb
cmp
inc
dec
adc
or
jno
sarl
jecxz
cmp
jno
mov
pop
rorl
mov
call
clc
cmp
mov
or
shl
dec
mov
or
jae
xlat
jge
ret
inc
adc
or
mov
jp
dec
rol
push
mov
mov
lods
lods
or
push
jp
sbb
shlb
dec
decb
jmp
mov
dec
push
psubsw
adc
dec
rol
lret
pop
jecxz
mov
xchg
out
lock
cmpsl
xchg
mov
inc
lods
mov
iret
mov
mov
je
ljmp
jle
and
lahf
es
fisubl
lods
sub
adcl
lds
pusha
mov
out
lods
cmp
xor
pop
in
sub
or
and
out
and
rol
xchg
repnz
lcall
dec
mov
jg
in
shr
pop
sub
pop
mov
mov
xor
cmc
xchg
cmp
cmpl
movsl
push
loop
call
mov
adc
jge
push
imul
icebp
cmc
mov
mov
fmull
xlat
xor
sub
adc
xchg
jnp
push
lods
decb
dec
mov
mov
ss
ret
cli
mov
pop
xchg
sarb
fcomps
pop
jmp
sbb
inc
sbb
ss
js
loope
inc
movsl
sub
ret
push
pop
or
sub
test
insl
cmpsb
aad
aaa
jns
inc
bound
repnz
stos
inc
lods
mov
mov
pushl
outsb
xchg
shrb
pop
mov
repnz
jle
push
jbe
je
push
dec
jmp
popa
out
aas
xor
dec
andb
dec
shl
adc
push
xor
xor
push
jo
scas
fildll
jle
adc
mov
sub
cld
mov
push
mov
or
cwtl
jp
push
fsubl
xor
insb
repz
jne
jns
inc
mov
lds
cmc
cmpl
jae
outsl
out
sub
out
push
or
jmp
sub
adc
pushf
fcoms
pop
jno
inc
cmp
sub
push
into
sub
xchg
out
xor
out
in
mov
ret
fnstsw
fstpt
sbb
ljmp
add
xchg
and
xchg
gs
test
sub
fbstp
movsl
adc
ret
cwtl
jmp
cli
cmp
sub
xor
or
xchg
jl
loop
out
jge
mov
jmp
dec
lods
cmp
orps
mov
pop
int3
jecxz
pop
icebp
fidivl
dec
stos
xchg
jp
adc
mov
imul
mov
inc
and
repnz
sub
jbe
outsl
test
dec
push
sub
nop
mov
and
lods
xchg
xor
sahf
stos
xchg
push
push
in
cwtl
movsl
leave
ds
in
jno
pop
and
push
xlat
jae
jnp
cltd
out
pop
pop
pop
push
out
jbe
sarb
xor
jmp
pop
lods
mov
aad
addr16
fwait
repz
sar
push
jno
cmp
xlat
mov
add
in
jmp
test
jecxz
sbb
mov
popa
out
aas
or
pop
pop
add
pop
mov
add
pop
mov
out
out
mov
mov
mov
fstpt
out
jg
int3
cmp
movups
std
addl
in
pop
or
sbb
xchg
push
loope
push
mov
jle
xor
je
mov
inc
ret
and
hlt
jecxz
cwtl
mov
push
ret
xchg
leave
rcrb
enter
imul
mov
stos
pop
flds
mov
in
out
mov
push
mov
jne
ja
pop
cli
xchg
repz
mov
mov
mov
push
dec
test
inc
popf
jnp
scas
jns
lods
and
mov
and
loopne
cli
call
rclb
inc
ret
sub
mov
js
stc
pop
inc
adcb
jne
nop
mov
or
bound
out
test
xchg
dec
testl
call
xor
aas
mov
mov
lea
cmp
mov
inc
les
sbb
push
dec
mov
push
push
mov
jns
in
inc
test
sub
xchg
cltd
adc
in
fstl
mov
std
loopne
jmp
pop
popf
sub
xchg
imul
sti
insb
adc
lret
addr16
stc
mov
into
cmpb
add
movsl
xchg
mov
push
imul
ds
imul
int3
lods
sbb
leave
repz
inc
movsb
add
fs
mov
cmc
pop
mov
and
xor
pop
ljmp
imul
or
cmpsl
mov
roll
dec
add
sbb
jns
pop
out
and
push
and
test
pop
sahf
inc
fildll
test
cmpsl
dec
push
les
xchg
in
push
call
stc
lods
sub
mov
insb
stc
xchg
mov
push
rclb
pop
fsubrs
insb
mov
pop
mov
inc
adc
dec
lods
jne
sbb
lods
cmp
fcompl
movsb
test
punpckhbw
stos
mov
fisubrl
xor
xchg
out
aaa
pop
pop
and
lahf
movsb
ret
pop
and
enter
sub
shr
insl
xchg
sub
pop
cli
test
insb
xor
shl
dec
out
into
test
rcll
sahf
mov
stos
push
xchg
jnp
push
mov
fdivr
gs
adc
adc
out
mov
fildll
daa
mov
ret
and
mov
les
xchg
sub
jg
test
into
inc
xor
popa
lcall
jle
push
test
fmul
fs
fcoml
mov
cmp
or
or
mov
hlt
xchg
iret
andl
lea
cmp
jns
xor
cmp
shlb
adc
push
adc
jo
add
mov
xor
cld
enter
adc
nop
push
loopne
sbb
mull
mov
imull
xchg
sbb
mov
push
dec
subb
jb
dec
push
rcrl
and
xor
push
mov
pop
adc
lea
and
bound
or
cmpsb
inc
insb
adc
jp
das
dec
push
jmp
dec
cld
movsb
inc
aam
or
imul
cmp
dec
mov
rol
sbb
movsl
fld
fstpt
insl
cmp
out
insb
mov
push
pop
jno
pop
push
das
push
push
sbb
pop
dec
and
and
sub
scas
or
shll
sub
divb
sets
addl
sbbl
divl
sub
push
jnp
mov
imul
stc
pop
sub
aaa
and
jae
and
sub
lea
push
push
or
aaa
mov
stos
adc
jg
lret
lock
mov
sbb
repz
sub
call
test
sar
aaa
rcll
arpl
mov
fwait
es
xchg
dec
xor
or
imul
mov
shr
ret
adc
data16
xchg
fiadds
cmpps
clc
mov
xchg
aad
mov
ficoms
les
icebp
jge
or
and
rolb
fisubl
das
dec
mov
cli
jnp
arpl
push
jo
mov
mov
xchg
cltd
push
and
pop
sbb
stos
shrl
jbe
icebp
test
jno
mov
lret
test
pop
sbb
int3
in
popf
paddusw
add
mov
fidivrs
das
stos
loop
jge
push
or
sti
jge
loopne
push
in
mov
sbb
mov
ja
inc
shlb
insl
enter
pushf
roll
mov
ja
incb
daa
mov
inc
xorb
rorb
lret
nop
mov
lcall
dec
jg
pushf
xor
sbb
mov
jle
mov
mov
inc
xchg
roll
imul
inc
pop
add
mov
outsb
push
in
push
or
xchg
shll
mov
jmp
rolb
cmp
stc
xlat
xchg
in
call
push
adc
rcrl
mov
repz
icebp
push
popl
stos
sbb
cmp
jnp
inc
cmc
in
dec
xor
jl
test
mov
nop
int
aas
cwtl
push
pop
nop
push
sbb
xchg
push
mov
pop
fdiv
mov
ljmp
xchg
jbe
mull
test
jecxz
jne
mov
add
mov
push
shll
iret
shrb
leave
inc
lret
adc
mov
jns
sub
fld1
dec
int3
push
testl
aam
mov
cmpsb
cld
test
jnp
push
sub
cmpsb
pop
push
stos
add
fcompl
jp
popa
xor
leave
xchg
out
mov
pop
or
cmp
dec
les
insl
movsl
sbb
xchg
outsl
mov
and
pop
xor
imul
push
sbb
loope
jge
aam
push
xchg
mov
dec
push
pop
test
mov
inc
mov
mov
sbb
ficoml
scas
sub
jne
incb
jle
inc
loopne
insb
lahf
cmp
jb
cmp
arpl
lods
bnd
int3
pop
mov
mov
call
int
lods
jg
jg
ljmp
lock
xor
mov
popf
pop
enter
jnp
adc
js
pop
cmp
insb
pop
push
mov
dec
inc
inc
mov
mov
pop
sbb
mov
adc
ret
push
jb
or
out
pop
rorb
mov
adc
nop
icebp
scas
adc
nop
scas
cmp
cmc
bound
sbb
sbb
xchg
jmp
add
dec
sti
test
fwait
lahf
int3
jg
mov
or
or
inc
inc
mov
cld
nop
fmulp
push
insb
into
ja
jns
loope
test
push
xchg
cmp
leave
pop
pop
jecxz
clc
je
jo
stos
and
pop
loope
aam
cli
xlat
jg
sbb
je
imul
lds
pusha
push
sub
push
leave
xchg
mov
or
movsl
xchg
pop
gs
fisttps
jns
mov
pop
orl
mov
movsb
mov
mov
xchg
push
jecxz
xlat
mov
stos
push
out
adc
mov
frstor
and
bound
test
inc
dec
inc
lock
mov
xlat
push
call
stos
sbb
loop
loope
push
push
in
or
inc
insl
ljmp
or
insl
jmp
inc
xor
lods
outsl
push
jp
mov
pop
adc
hlt
ficoms
mov
mov
sarb
lea
fists
fisubs
xor
and
mov
cmp
test
push
loopne
test
cmpsb
xchg
sub
push
in
mov
push
movsb
pushf
cltd
test
pop
mov
mov
es
int
jns
sbb
dec
cwtl
out
jg
adc
sbb
scas
adc
clc
dec
rcrb
jg
shr
out
jge
mov
xchg
push
jns
push
xchg
imul
aam
repz
gs
dec
xchg
rorb
test
divb
jmp
jge
test
outsb
outsb
push
pop
in
aaa
ficompl
sbb
push
rcrb
jo
jne
dec
je
mull
inc
dec
fwait
scas
fcmovu
rcrb
test
cmc
andl
mov
repz
lods
xor
mov
xchg
push
inc
jns
adc
and
mov
push
jp
push
mov
dec
in
adc
sbb
cmp
jo
hlt
cwtl
sub
aaa
add
inc
lods
xor
xor
popa
loopne
fwait
and
xchg
mov
into
popa
lea
xor
sbb
shrb
sub
mov
cwtl
int3
cmp
and
loope
and
ret
add
out
sahf
ljmp
rolb
cmc
loop
lods
jle
pop
in
inc
push
mov
insb
mov
lret
test
sub
adc
sbb
jp
mov
mov
inc
leave
pop
lcall
nop
xchg
aam
add
lret
arpl
mov
sub
push
pop
repz
push
jne
xor
out
sbb
scas
lret
inc
repnz
lret
cltd
in
sti
sub
xchg
mov
mov
movsl
je
insl
sar
mov
dec
and
push
sub
jp
mov
and
and
sub
movsl
xchg
xchg
aad
cmpsl
test
aad
into
pop
add
ret
adc
jne
jecxz
mov
mov
jns
cld
or
imul
mov
repnz
aad
jmp
xor
mov
mov
shrl
dec
fimull
or
sbb
pop
jle
iret
mov
mov
dec
fisubrl
dec
icebp
ja
aam
sub
xor
and
or
dec
xchg
mov
aam
in
or
lods
pop
and
mov
stos
xchg
mov
fdivrs
repz
push
leave
fidivrs
repnz
pop
pop
aad
xchg
repnz
push
lods
ss
dec
sub
or
cmc
outsb
push
lods
sahf
insl
fs
or
sub
lds
mov
xor
div
sbb
outsl
dec
adc
xlat
mov
enter
cmp
jge
icebp
pusha
mov
add
insl
jmp
int3
mov
mov
aam
stc
cld
fsubrs
pop
loop
imul
cld
test
repz
cld
inc
imul
xlat
xor
lahf
add
mov
cmpsb
inc
pop
loop
lret
fadds
jo
xchg
aad
sbb
out
pushf
clc
mov
pop
mov
test
mov
mov
in
mov
cmp
inc
mov
mov
push
mov
loope
push
jbe
fidivs
inc
mov
insb
scas
push
adc
les
fldt
repz
inc
mov
pop
cmp
in
out
mov
icebp
cmp
cmc
pop
sub
pop
add
es
sub
xor
xchg
addl
nop
lock
bound
les
pop
push
add
mov
mov
mov
into
daa
push
adc
and
outsb
js
mov
inc
int3
pop
fstl
and
inc
lahf
das
leave
xchg
loopne
jns
fidivs
loop
or
les
fcomi
mov
ret
repz
bound
xchg
mov
lahf
xchg
pushf
cltd
clc
rcll
lods
pop
stc
dec
sbb
add
test
sbb
ja
xchg
pop
aas
jge
sbbb
into
ja
mov
sub
cmp
or
push
arpl
adc
aam
data16
sub
mov
arpl
shlb
add
dec
jp
popf
ss
imul
xor
jns
fs
gs
xchg
aam
xchg
push
scas
push
or
jle
cltd
and
in
ds
in
dec
push
sahf
out
idivl
xchg
hlt
test
dec
rcrb
pushf
adc
mov
xor
or
inc
fiadds
push
mov
rcrb
jns
cwtl
inc
dec
mov
sub
das
sbb
in
mov
xlat
shr
jle
in
insl
add
loop
adc
popf
lods
dec
sbb
insb
mov
into
mov
in
jmp
sub
mov
jbe
aaa
nop
scas
push
jle
js
add
mov
jg
xor
pop
jnp
jge
rorl
cli
fs
lock
cmp
xchg
nop
push
push
sub
adc
imul
jnp
mov
fistpll
cmc
mov
jge
xor
cmp
mov
mov
jg
adc
jno
pushf
cmp
or
mov
xchg
leave
mov
aad
mov
mov
cmp
lods
sbb
sarl
dec
dec
mov
jns
xor
jle
or
stos
sbb
inc
mov
adc
sub
scas
cmp
lods
stos
repnz
movsl
fldt
or
mov
dec
scas
sti
xor
and
scas
cld
pusha
push
pop
mov
push
push
loope
xchg
inc
fstpl
xchg
nop
jae
cmp
pop
mov
xchg
mov
push
mov
gs
outsb
mov
aas
ja
xchg
adc
ds
fdivrs
inc
sub
aas
jmp
pop
push
stos
jge
or
cmp
icebp
icebp
loope
ljmp
aaa
das
add
out
mov
push
add
lret
out
fstps
dec
cmp
pop
mov
and
push
mov
mov
adc
push
js
pop
pusha
enter
pop
dec
cld
push
shr
movsl
cmp
add
sbb
in
test
scas
inc
inc
movsl
jo
pusha
xchg
lret
mov
xchg
mov
addl
inc
insb
rol
cli
sub
inc
inc
jb
or
pop
movsb
bnd
dec
and
pop
jns
mov
jnp
xor
cmp
push
dec
popf
mov
inc
sahf
jns
pop
pop
rcll
sbb
sarb
add
clc
cmpsl
jne
pop
dec
and
test
mov
mov
and
mov
lock
popa
mov
lds
pop
pop
int3
cmp
xchg
test
out
xchg
stos
push
mov
push
bound
stos
dec
cmc
fprem1
lods
cmp
mov
and
enter
jmp
push
pop
loope
das
test
and
sbb
call
test
lea
fsubr
ja
and
or
test
xchg
inc
test
lret
negl
lock
sub
jecxz
lock
leave
push
call
lret
loope
scas
jecxz
loop
lds
mov
dec
shr
sti
repnz
int
xchg
sbb
pusha
sarl
cmp
fmul
hlt
inc
pop
sub
add
pop
mov
dec
mov
js
cmp
cld
call
mov
imul
pop
xor
xlat
pop
xchg
pop
xor
dec
inc
dec
mov
xchg
fiaddl
push
das
mov
push
cs
mov
dec
cld
sub
je
test
or
flds
cmpsb
nop
mov
add
jns
daa
fdiv
add
push
sub
mov
sbb
dec
xlat
movsb
sbb
jg
or
cmpxchg8b
cmpsb
cwtl
mov
sbbl
sar
ds
daa
xchg
sbb
fsubl
pop
out
ja
xchg
xchg
mov
leave
xor
mov
andb
movsl
bound
pop
cli
lahf
insl
fs
aaa
sti
push
add
jno
aad
push
ljmp
outsl
pop
xchg
movsl
mov
xchg
mov
hlt
sub
aam
sub
out
mov
sti
out
jbe
mov
jns
or
or
mov
and
or
cli
orl
mov
gs
ficomps
rolb
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
jmp
jo
cmc
dec
orb
sub
mov
pop
addl
and
inc
stos
xor
dec
cmp
outsl
call
inc
push
mov
out
popa
jl
pushf
lock
adc
aad
es
popl
xchg
pop
pop
outsb
in
std
mov
sbb
imul
push
cli
pop
and
cmp
add
lret
out
or
cmpsb
lcall
xor
fsincos
push
sub
test
aaa
xor
or
test
das
add
push
jle
jae
jno
cwtl
mov
sahf
imul
aas
pop
push
pop
adc
mov
arpl
outsb
das
sbb
push
aad
jmp
lcall
scas
stc
xchg
loope
in
adc
xor
into
subb
test
and
jbe
push
mov
mov
push
iret
mov
jne
imul
pushf
jge
sbb
push
sub
cmp
xor
test
pop
adc
outsl
ds
jmp
pop
rorl
mov
sbbb
xchg
pop
pushf
imul
add
jbe
jmp
lds
mov
mov
in
jp
cmpsb
inc
adc
iret
push
push
aas
push
lds
loope
push
mov
mov
enter
in
sub
sbb
xchg
ret
push
mov
psllq
out
jne
and
sub
not
cmpsb
rorb
sub
test
ret
inc
pop
icebp
xchg
adc
push
out
testb
ret
add
shrb
push
js
xchg
int3
pop
imul
pop
negb
xlat
repnz
xchg
pop
in
add
mov
mov
sbb
daa
xor
cmpsl
and
mov
std
ljmp
jp
sbb
das
ss
inc
add
cmp
pushf
sub
dec
lds
jns
cs
inc
int
rcr
add
scas
adc
and
or
pop
xchg
mov
mov
and
jg
xchg
adc
cld
repnz
mov
dec
mov
adc
lock
jmp
notl
lds
fisttps
jge
cmpb
jecxz
or
int
bound
cmpl
fwait
and
mov
push
aam
mov
clc
mov
adc
fiadds
int3
cwtl
sbb
and
pop
lea
pop
fwait
jg
mov
aad
scas
out
add
xchg
test
mov
hlt
add
cmp
fsubr
leave
inc
rclb
jp
jb
popa
js
addr16
xchg
shlb
adc
addb
cli
les
mov
inc
popf
lret
js
lods
lds
sub
fisubl
scas
test
pop
test
flds
leave
rorb
mov
popa
lcall
mov
inc
jno
mov
mov
mov
jae
fwait
and
ret
mov
jno
stos
pushf
push
mov
or
adc
jne
mov
jmp
adc
outsl
mov
jge
add
inc
jne
adc
int3
out
lock
xchg
mov
add
sbb
arpl
fstl
push
inc
jmp
jns
stc
mov
fsts
std
xlat
shll
sub
inc
cwtl
mov
sub
pop
add
fiaddl
popa
mov
ret
jmp
mov
xchg
pop
xchg
xchg
mov
mov
filds
inc
push
popf
cld
outsb
jmp
shrl
mov
or
not
jecxz
mov
or
mov
push
and
push
lods
hlt
inc
fwait
pop
xchg
dec
mov
dec
ljmp
and
shlb
test
icebp
out
mov
sub
dec
mov
lret
cs
pop
fwait
stos
push
pop
jae
mov
and
test
sbb
imul
inc
in
and
je
xchg
or
jle
mov
push
push
mov
das
add
scas
push
iret
popa
xor
pop
and
addl
iret
lret
push
cmp
repz
add
int3
sbb
hlt
ja
les
inc
jbe
sub
in
mov
mov
arpl
xchg
fcos
cs
cmp
cmp
orb
push
mov
out
mov
frstor
ss
ljmp
push
inc
mov
imul
sub
cs
call
cmpl
ret
or
enter
in
jnp
in
inc
add
clc
add
test
and
mov
imul
je
scas
dec
xchg
cmp
and
and
jno
ret
testb
sub
mov
dec
in
dec
pop
icebp
push
mov
sub
std
in
mov
cmc
sub
adc
data16
rcrl
push
jecxz
iret
or
cmp
xlat
out
jmp
scas
js
xchg
adc
mov
jo
dec
cmp
push
clc
out
xor
pop
mov
shlb
pop
fcmovnbe
or
or
bound
lods
and
je
or
cmp
shlb
data16
lods
enter
stos
aas
adc
mov
pop
sub
dec
mov
imull
lds
mov
dec
mov
rcrl
les
cmpsl
leave
ds
cmpsb
test
rcrb
mov
fnsave
xor
adcb
shr
cmp
adc
fdiv
movsl
in
push
movsl
xchg
dec
int
xchg
mov
ror
cmp
pop
arpl
push
popl
jp
inc
out
ss
push
pop
inc
jno
js
pop
mov
adc
std
in
sub
ret
jns
scas
inc
lahf
sbb
xor
pusha
dec
mov
ja
faddl
push
sbb
mov
push
sbb
mov
mov
sbb
adc
or
jecxz
test
lods
jle
inc
ret
inc
push
outsl
sub
xor
xor
lahf
and
repnz
ret
jno
add
pop
inc
cmp
push
in
inc
mov
cmp
push
xor
pop
mov
push
xor
sbb
mov
or
push
je
mov
imulb
dec
mov
fadds
sbb
jecxz
jno
inc
xor
dec
outsl
mov
addr16
and
mov
aam
lcall
pop
pusha
lret
cli
js
popa
pop
inc
mov
pop
pop
test
iret
fidivl
pop
pop
mov
movsb
pop
mov
into
shrl
mov
jmp
aaa
push
aaa
out
xchg
xchg
fisubrl
jge
test
xchg
push
push
in
sbb
mov
mov
out
sbb
in
enter
mov
xchg
pop
jae
dec
icebp
push
pop
cmp
arpl
sti
pop
lds
adc
scas
into
aam
jp
xchg
mov
mov
cmpsb
fcomp
dec
pop
sub
hlt
cmp
or
xchg
arpl
pop
outsl
ss
fdivl
outsl
jb
fistpl
or
push
xor
rcrb
fwait
mov
sbb
fistpl
adc
dec
dec
sahf
fsub
mov
sub
jmp
add
cmpb
pop
jmp
pop
call
lea
ficoms
out
pushf
mov
std
sbb
hlt
lock
sub
sub
dec
cmp
aad
mov
mov
outsb
mov
mov
mov
inc
sbb
jmp
or
sahf
insl
push
push
inc
lret
nop
and
hlt
adc
mov
lds
test
popa
jp
pop
and
mov
movsb
inc
cli
int3
mov
std
test
sbb
adc
fsubrs
mov
das
mov
adc
push
int
add
stos
cld
pop
cmp
in
push
dec
call
jl
call
pushf
mov
pop
mov
pcmpgtw
pop
add
add
stos
jp
mov
outsl
imul
stc
and
fcompl
cmp
mov
iret
sbb
and
dec
push
jecxz
out
push
test
insb
loope
mov
xchg
mov
test
ja
lret
and
mov
xchg
or
jle
dec
adc
jle
add
xchg
insb
arpl
ds
add
inc
test
jg
cmp
inc
xchg
mov
mov
lods
dec
mov
insb
in
stos
mov
or
popl
daa
xor
loope
cmp
xchg
int
and
xchg
add
sbb
xchg
ljmp
sbb
xchg
xor
mov
mov
mov
mov
jmp
fisttpll
insb
shrd
add
mov
cmp
pop
push
cmp
incb
xor
sahf
mov
arpl
fdivl
push
cmpsb
cmp
enter
push
and
and
into
sbb
pop
mov
shlb
stos
gs
dec
dec
popf
inc
push
mov
andl
dec
adc
cmp
pop
loop
add
mov
call
adc
lahf
filds
push
push
push
cmpsl
jg
adc
shrl
mov
pop
call
rclb
cmp
xor
jb
orl
rcll
pop
fisubs
in
adcl
jmp
mov
add
icebp
adc
pop
cmp
mov
sbb
into
insb
sub
or
jmp
xchg
mov
adc
loopne
cmp
sbb
add
adc
xchg
ret
rcr
testl
in
movb
icebp
cmp
movsl
dec
mov
mov
leave
ret
mov
sbb
mov
sbb
cmp
jnp
push
lcall
cwtl
mov
jae
push
sub
fsubl
mov
lcall
jnp
loope
std
rcll
mov
insb
fs
adc
xchg
and
jae
and
pop
dec
xor
add
add
lahf
cmp
add
negb
mov
jno
and
icebp
cmpsb
lahf
lock
or
js
xor
mov
mov
mov
in
and
std
mov
stos
or
inc
test
sbb
sub
sti
int
cld
fstl
xchg
sub
ljmp
push
idiv
mov
xor
xor
xchg
js
aam
sub
dec
call
mov
aad
inc
cmp
jge
mov
jge
mov
xchg
pop
outsb
sub
pop
ja
loopne
mov
sub
outsl
enter
pop
scas
xor
lock
repz
in
sbb
mov
pop
push
adc
fidivrs
loope
test
push
aaa
movsl
divl
inc
adc
mov
dec
add
mov
jp
fldcw
and
jg
mov
or
sbb
psubusw
push
or
in
xchg
sbb
jmp
out
mov
sub
pop
mov
ss
inc
and
push
and
mov
arpl
mov
mov
or
and
fucomip
sub
lret
lods
mov
jae
data16
pushf
out
mov
sahf
mov
adc
xor
adc
lret
add
fcoms
sub
mov
movsl
data16
std
jmp
xchg
lcall
repnz
outsl
data16
inc
mov
and
xor
push
lock
popa
out
mov
cmp
dec
inc
repnz
movsl
push
xor
negb
ljmp
ss
call
cmp
ja
ss
scas
mov
shrb
fnstenv
mov
and
dec
sbb
mov
pusha
scas
jno
push
sbb
ljmp
out
popa
loopne
fisttps
insb
ds
fsub
mov
ds
cwtl
push
cmp
cmp
mov
call
out
insl
loopne
jecxz
leave
cli
ds
or
rcrb
gs
add
ljmp
mov
xor
out
jo
testb
aad
mov
ret
jno
xor
rol
or
pop
mov
mov
outsl
loope
inc
xor
fs
insl
fldl
mov
push
push
outsb
mov
addb
pushf
adc
in
mov
frstor
add
mov
push
notb
mov
shlb
inc
outsl
xor
bound
hlt
push
mov
imul
push
mov
out
in
pop
inc
popf
loop
insb
sub
inc
cmp
and
and
jge
iret
inc
mov
jb
push
pop
in
xchg
imull
das
stos
data16
cmpsl
cmpsb
adc
mov
fldt
adc
xlat
jl
mov
out
hlt
jmp
pop
and
fmuls
mov
rorb
push
frstor
xchg
cmp
outsb
sbb
xchg
adc
or
lahf
clc
xchg
cmp
lods
loop
jno
xor
imull
push
inc
pushf
mov
shrb
out
pop
fildl
jae
mov
bound
cmp
out
xor
cmp
and
jae
imul
dec
ret
jnp
aam
clc
xchg
lods
les
retw
icebp
and
and
cli
adc
sbb
pop
sub
stos
xor
rcrl
pusha
mov
inc
dec
aaa
out
jl
mov
or
jno
hlt
add
dec
push
je
dec
pop
lcall
scas
cmpb
pushaw
scas
ret
xor
lds
lods
inc
add
lret
cmpl
pop
fs
jle
js
cli
les
ljmp
mov
shrb
mov
cmovae
push
loope
cmp
cmpsb
xor
imul
lea
push
lcall
pushl
pop
and
call
fisttpll
cld
cltd
shrb
xor
insl
test
cmpsl
mov
push
jbe
shr
repnz
cs
aam
cltd
push
dec
add
or
adc
imul
das
xorl
fwait
out
add
and
enter
into
sub
pop
sub
lock
rorl
in
aad
insl
in
mov
clc
sti
dec
or
pop
in
out
or
sbb
push
sub
addb
sar
daa
sbb
mov
lock
out
mov
mov
in
insl
scas
scas
inc
in
sbb
orb
add
jne
js
scas
out
jb
or
decb
mov
jne
mov
push
fdivr
ret
xor
xchg
call
push
and
and
fisttps
sbb
lock
add
cmpsb
fidivs
mov
xor
popf
adc
push
test
sub
push
mov
push
pusha
bsr
dec
int
push
je
daa
scas
sbb
outsb
rcrl
or
fldenv
mov
mov
push
push
pop
insb
lahf
cmp
cmp
in
push
dec
fidivs
iret
stos
ss
in
inc
arpl
fnstsw
test
jmp
push
and
and
sbb
fsubrl
add
xor
xchg
xchg
dec
cmp
daa
out
add
mov
jl
xlat
popf
je
push
cmpsl
mov
addr16
mov
fidivl
jl
cmc
shll
mov
stos
fildl
push
jnp
test
push
xchg
xor
or
jp
aad
and
fnstenv
and
in
shrb
icebp
or
pop
jmp
adc
adc
pop
aad
dec
ret
mov
and
xchg
mov
pop
mov
xor
negb
into
test
cld
adc
scas
js
adc
jge
sbb
sbb
lds
jl
mov
add
sbb
dec
pop
push
jmp
into
lea
std
scas
sbb
mov
or
xor
dec
into
dec
dec
xor
or
xor
jmp
xchg
mov
sub
pop
mov
arpl
scas
mov
inc
adc
js
push
imul
mov
jmp
insl
sarb
repz
out
sbb
int
push
clc
xor
loop
mov
cmp
and
inc
addr16
or
loope
sbbl
xor
sub
mov
stc
lods
inc
jbe
enter
mov
fs
out
into
scas
lock
lods
push
mov
sti
inc
js
in
fmull
jmp
inc
jle
outsb
cld
daa
in
push
js
mov
inc
inc
inc
cmp
pop
movsl
insb
sub
test
fistpll
jg
pop
cmp
cmp
and
lahf
lcall
mov
xor
movsl
jo
xchg
das
testl
loopne
and
aad
je
dec
testl
lods
lret
mov
and
xor
in
stos
dec
cmp
push
mov
rcr
loopne
cmp
add
fisubrl
pop
sti
jle
pop
sub
jnp
aam
or
mov
mov
roll
push
xchg
lret
adc
ret
mov
mov
cli
jp
sbb
xchg
cmc
jns
cmp
adc
das
sbb
imul
lds
gs
adc
cwtl
xor
lahf
adc
jge
pop
or
stos
mov
in
and
cli
push
loope
add
lock
loopne
dec
pop
mov
add
and
pusha
push
jbe
fmull
js
pop
jl
sbb
cltd
fs
pop
pop
mov
es
ret
mov
ret
push
out
xchg
and
push
shrb
inc
add
pusha
test
fwait
mov
xchg
dec
imul
xchg
dec
pop
fdivs
cli
out
and
pop
mov
and
xor
dec
hlt
and
mov
enter
fcomip
pop
movsl
sub
cmpb
push
xlat
aaa
sarl
gs
lret
out
cmp
pop
mov
js
push
mov
cld
sarl
shl
js
inc
and
push
or
pop
ret
repnz
into
out
xchg
scas
aaa
and
aad
movsb
rcrl
pop
adc
mov
fstps
pop
xor
push
mov
mov
or
loope
sbb
ds
or
xor
cmp
xchg
fs
lret
jbe
test
xor
sbb
mov
leave
je
rcll
dec
cmp
sbb
dec
test
cwtl
in
xor
movsl
fs
jo
fisttpll
cmpsl
clc
es
icebp
add
xchg
add
clc
push
repz
mov
in
rorb
jne
jecxz
call
jae
mov
test
icebp
addr16
adc
jge
clc
clc
mov
cltd
sarb
dec
xor
mov
mov
icebp
fmuls
ljmp
shlb
add
pop
icebp
bound
fwait
mov
add
insl
loope
mov
dec
and
pusha
cmp
dec
or
les
rorl
sub
push
push
rorb
imul
add
lock
insb
pop
pop
int
lock
andl
adc
mov
ljmp
or
xor
dec
or
or
and
lods
cld
jmp
aaa
inc
add
push
jp
dec
shlb
push
mov
je
pusha
cmpsb
inc
repz
xlat
xor
imul
jp
cld
xor
imul
loopne
cs
mov
dec
imul
out
push
ljmp
add
xor
out
jne
sub
pop
enter
loop
ljmp
lea
xchg
cltd
jae
sub
imul
add
andl
test
adc
and
or
mov
jns
or
aad
inc
cwtl
xchg
mov
pusha
push
mov
ljmp
adc
stc
outsb
xchg
lods
pop
or
out
dec
sub
mov
or
jnp
sub
int
inc
jl
iret
popf
adc
lahf
ficoms
sbb
jge
imull
or
pop
sub
ja
mov
stos
inc
aaa
inc
pop
mov
dec
idivb
inc
out
xlat
mov
push
outsb
pop
push
add
outsb
in
faddl
subl
jmp
lret
inc
cmc
lods
cmp
and
in
ljmpw
lea
or
testb
negl
sbb
leave
or
and
xchg
cmp
mov
lcall
push
dec
lods
scas
popa
xchg
cmpsl
xchg
cmp
push
outsb
or
and
std
push
jne
shlb
mov
pop
insb
das
stos
popa
scas
jp
test
adc
loop
mov
push
xchg
inc
and
roll
sbb
in
jmp
scas
insb
mov
outsl
loope
mov
pop
cld
jl
mov
arpl
add
test
insb
xchg
push
xchg
popa
imul
dec
popa
in
bound
dec
push
xchg
push
into
jo
mov
xor
sub
in
xchg
popa
and
sbb
jno
int
popa
stos
or
xor
pop
shlb
or
xchg
xchg
sub
mov
es
in
addb
push
dec
pusha
js
jge
popf
adc
test
test
push
mov
sub
mov
adc
data16
and
lods
cmp
push
xchg
adc
add
cmpsb
xchg
jbe
lock
inc
dec
loope
outsb
adc
iret
cmp
popf
sub
push
fbld
lods
sbb
sub
mov
jge
push
sbb
or
and
inc
jne
dec
movsb
dec
mov
inc
lcall
shr
and
das
fs
fildl
pop
sbb
inc
dec
fsubs
or
and
daa
and
pop
lret
aas
outsb
outsb
ret
fs
sub
andl
or
adc
das
mov
jne
or
mov
stos
dec
ret
rorb
dec
or
ror
dec
cmc
sbb
rorl
sarb
sub
pop
xchg
imul
addr16
in
jle
xchg
movsl
mov
dec
ror
cmc
cmp
cmpsb
mov
sbb
ds
lods
inc
pushf
jecxz
sub
mov
fnstcw
or
out
xchg
insl
sub
nop
xor
mov
les
push
shrl
and
arpl
fsubrs
push
imul
outsb
cld
insb
push
addr16
mov
mov
mov
mov
inc
jp
sub
push
mov
insb
sbb
xor
cltd
sub
cs
pop
adc
in
mov
sub
xor
aad
pop
push
aas
add
testb
pop
clc
pop
cmc
fisubs
mov
test
fnstcw
adc
iret
rclb
dec
stc
push
loop
rcll
jnp
jl
sarl
xorb
jp
xor
mov
cmpb
notl
inc
xor
loope
shll
mov
mov
leave
jecxz
xchg
enter
sub
int
sbb
jns
push
and
push
out
daa
and
or
mov
mov
pop
xor
adc
enter
push
pushf
dec
insl
and
enter
rcll
mov
sbb
push
aad
mov
jae
push
or
scas
pop
sbb
or
imul
sbb
jne
sub
icebp
fwait
dec
mov
add
imulb
push
xlat
jg
les
pslld
cmpsl
jno
dec
push
repnz
rcrb
push
cmp
xor
data16
in
mov
inc
in
push
icebp
scas
jne
and
mov
int
and
and
push
js
leave
sub
jmp
and
popf
mov
jge
cmpsb
leave
add
or
xchg
test
sub
mov
xchg
adc
mov
lds
stos
pop
adc
fsubrs
push
cmp
ja
aad
out
sub
mov
ss
cmpsl
dec
and
cmpsb
imul
or
xor
sbb
loop
jle
jne
adc
std
lods
rol
ror
cmp
mov
cmp
sbb
sub
xchg
push
rolb
sub
xchg
pop
inc
sbb
addr16
imul
push
sub
pusha
notl
mov
or
les
adc
test
mov
arpl
sbb
xchg
inc
pop
cwtl
in
inc
sbb
jmp
ss
sahf
bound
test
add
sbb
xchg
mov
ja
lods
call
inc
mov
push
lret
cwtl
push
inc
fdivs
xor
sbb
sbb
xor
imul
add
imull
movsl
sub
jbe
mov
in
lods
dec
xchg
xor
aad
jbe
add
pop
lods
test
add
imul
add
jmp
std
outsl
adc
push
bound
stos
jae
jns
shll
stc
sub
mov
popf
sbb
cmp
mov
into
xchg
popf
jmp
scas
jo
push
fisttpll
iret
es
imul
int3
leave
outsl
outsl
mov
dec
jnp
mov
gs
cltd
cmp
cmp
mov
gs
out
or
andb
pop
out
lods
push
popf
test
dec
mov
or
ds
jl
stos
fimuls
scas
mov
and
cmpsl
in
cmp
icebp
pop
push
mov
jns
jns
call
int
movsl
and
arpl
xchg
or
hlt
stos
push
jns
into
dec
call
xchg
call
sbb
shll
dec
jns
sbb
test
pushf
pop
push
pop
leave
mov
push
jge
pop
pop
mov
dec
mov
mov
cmp
dec
cld
mov
lock
sti
orl
into
cmp
sbb
xor
mov
adc
sub
es
xchg
imul
test
std
sub
jae
data16
and
add
ljmp
bound
iret
test
cmp
imul
jp
jl
jmp
xor
cwtl
pop
dec
popa
popf
fcmovnbe
and
cmpl
out
cld
out
dec
sub
xchg
fmull
push
push
mov
movsl
mov
lret
jno
out
or
lds
inc
es
rolb
aas
jno
jns
loopne
das
into
jp
push
push
test
jne
adc
lcall
fs
sbb
in
je
cmp
push
movsb
pop
adc
adc
mov
add
das
sti
xchg
rorl
pop
stc
mov
cmc
add
and
js
out
xchg
jecxz
xchg
jmp
xchg
hlt
jns
pop
addb
push
xchg
ss
and
mov
std
andl
insl
push
das
sub
xor
insl
sub
sbb
and
in
shll
pop
push
mov
inc
xor
repz
xor
loopne
mov
notl
push
sbb
ss
loop
ficompl
movsb
insb
lea
and
mov
sbb
push
in
hlt
sub
lea
or
mov
fnsave
mov
ret
aaa
fidivl
mov
fadd
fnsave
cmpsl
xchg
jp
ret
bound
and
inc
mov
sbb
cmpsb
lds
test
pop
mov
inc
arpl
xor
scas
lods
pop
xor
mov
inc
mov
pop
or
xlat
mov
inc
xchg
adc
inc
lods
negb
cltd
mov
xchg
insl
popf
and
cwtl
adc
jle
fbstp
scas
jg
push
insb
bound
icebp
jmp
fisttpl
dec
mov
push
xor
push
enter
dec
scas
push
into
popf
mov
pusha
je
pop
loop
xchg
lods
mov
int
jmp
test
push
jge
mov
aad
test
cmc
or
pop
sbb
mov
mov
int
mov
fnstsw
mov
xorl
cmpsl
xchg
pop
xor
inc
pop
push
and
sub
das
or
sub
mov
loope
push
jecxz
mov
js
push
add
dec
test
xchg
inc
cs
xchg
sbb
inc
pop
bound
mov
pop
pushf
shl
aas
ficompl
pusha
mov
inc
scas
leave
int3
jb,pn
cmc
out
and
mov
dec
jo
push
insb
jne
arpl
push
and
movsb
or
and
int3
lahf
test
xchg
or
ljmp
outsl
ret
mov
lcall
mov
dec
mov
icebp
pop
sbb
into
jg
in
xor
mov
ror
das
xchg
mov
xlat
pop
push
test
sub
dec
cmp
insb
mov
insb
jg
jp
mov
mov
arpl
adc
ljmp
mov
push
xor
push
mov
inc
mov
xchg
push
stos
push
stos
icebp
scas
test
lahf
jnp
ret
pop
inc
jl
add
repz
inc
and
xor
adc
in
aaa
mov
out
sbb
addr16
es
lea
aas
mov
sub
leave
jecxz
in
xchg
and
push
sahf
sub
addl
and
and
xlat
enter
push
and
scas
adc
sti
dec
sbb
sarb
xchg
push
or
std
cs
pop
or
repz
pop
pop
add
adc
sub
sub
cmp
outsb
leave
mov
js
lret
sub
push
mov
push
addr16
adc
pushf
negl
in
fisubl
mov
xchg
mov
sbb
pop
push
or
ret
not
mov
test
or
cld
imul
lcall
mov
sbb
mov
out
out
jnp
es
dec
cld
out
dec
inc
in
and
xlat
out
dec
adc
test
int3
repz
xchg
xchg
adc
mov
pop
add
cld
scas
stc
mov
push
bound
or
cli
add
push
jmp
out
add
aam
xchg
outsb
push
out
cltd
outsl
aas
or
shl
into
sti
sbb
int3
js
mov
out
mov
push
xchg
or
mov
es
sub
call
mov
test
pusha
and
int3
push
adc
out
dec
cmp
mov
mov
lcall
jno
push
pop
nop
or
enter
mov
push
xchg
inc
xorl
test
cmpsl
xchg
les
ret
add
inc
scas
and
mov
sbb
mov
mov
adc
in
call
rorb
mov
fsub
sbb
fwait
sbb
imul
mov
cmp
jno
push
into
into
and
mov
mov
addb
jl
pop
xchg
je
pop
clc
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
jmp
adc
xchg
add
inc
addb
sahf
lcall
xor
dec
mov
adc
dec
pop
jmp
cmp
mov
mov
cwtl
fmuls
mov
jo
notb
popf
orb
mov
jp
push
in
imul
sbb
mov
xor
out
ds
movsl
fwait
cmp
hlt
cmp
push
jo
lcall
xchg
sti
xchg
cmpsb
adc
mov
repnz
imulb
add
mov
scas
and
popf
dec
mov
mov
faddl
xchg
sub
xchg
push
xchg
in
or
mov
cli
mov
mov
insl
sahf
stc
mov
or
dec
jo
xchg
lret
or
adc
loop
ffree
pop
sbb
fcompl
lds
mov
mov
sar
je
lea
push
jle
out
out
mov
mov
outsl
xor
adc
sbb
and
mov
mov
fsts
pop
pop
subb
cwtl
mov
test
movlps
aad
adc
sub
dec
aad
inc
mov
xchg
mov
push
sub
push
fcoms
fs
mov
in
pop
push
repnz
add
je,pt
inc
xchg
test
mov
mov
xchg
push
pop
fisttpll
and
js
xor
incl
sub
das
ja
es
add
add
and
nop
shll
or
ds
and
dec
mov
xor
jo
xchg
cmc
movsb
mov
test
js
gs
mov
pop
push
mov
out
lods
sbb
das
and
mov
rorl
repnz
push
int
inc
sbb
subl
popa
sti
adc
mov
or
mov
inc
pop
pop
dec
and
jp
rclb
xlat
gs
jne
imul
xchg
sbb
mov
fisttps
and
test
leave
dec
cmp
cld
rcrb
ret
mov
lock
fisubrs
int3
cwtl
lds
sbb
xor
fisttpll
shll
sub
xor
add
out
push
loopne
adcb
push
inc
imul
repz
jae
daa
mov
test
inc
inc
mov
mov
mov
jae
fidivrs
jne
or
push
pop
pop
push
push
or
jmp
aam
out
mov
xor
test
cwtl
fldenv
or
in
xchg
jmp
test
pop
push
dec
sbb
outsb
sub
addr16
nop
mov
psllw
jne,pt
cmp
mov
das
dec
lret
and
cmp
inc
sub
pop
je
das
scas
jne
cmp
jl
outsb
xchg
cmp
repz
adc
ja
std
lcall
inc
std
sbb
test
xchg
sbb
lcall
mov
cld
lds
out
and
dec
repnz
jno
jge
mov
mov
movsl
cs
cwtl
cli
lock
mov
pop
sti
jnp
mov
sti
jge
push
rorb
mov
out
andl
jp
test
xchg
mov
rcrl
push
mov
sahf
and
test
call
fcom
out
gs
fsts
jl
dec
mov
lret
and
add
xor
std
sub
sbb
aad
iret
cmp
repnz
lcall
movsl
jnp
data16
sbb
call
or
dec
lods
std
outsb
jo
adc
mov
js
push
lea
lret
mov
aam
fucomip
ret
adc
pop
push
cmp
push
cmpsl
fadds
lret
sbb
jmp
fstpt
lds
push
pop
popl
xor
push
xchg
adc
mov
ficomps
add
sbb
leave
adc
cmp
int
aaa
cmpsb
mov
xor
and
dec
inc
push
movsl
in
fs
andl
dec
repnz
sahf
das
popa
rcll
jecxz
cltd
cli
and
cmpsl
pop
roll
xchg
adcb
loopne
ja
cli
out
aaa
inc
stos
sub
rcrl
mov
or
aad
pusha
or
xor
xor
mov
popf
insl
xor
sar
xor
int
aas
jo
push
jg
imul
fstpl
call
and
jecxz
mov
ja
pop
cmpl
push
ja
sub
jo
jp
mov
aam
out
xor
inc
jg
cltd
scas
pop
ss
sub
push
ss
pushf
jno
and
ffree
cmpsb
jecxz
jmp
mov
jno
aam
mov
cmp
or
movsb
outsl
mov
ds
fstl
jae
dec
mov
inc
imul
std
flds
ret
mov
es
lcall
fists
sub
js
les
or
jbe
inc
cmp
loop
scas
pusha
dec
popa
orb
jae
lods
shrb
ds
jb
add
xor
push
fwait
outsb
mov
add
loop
sbb
stc
mov
cmp
xor
leave
sbb
pop
das
jmp
insb
mov
cwtl
pop
jae
push
adcl
adc
xchg
cmpsl
pop
mov
xchg
inc
movsl
ja
movsb
fsubl
insb
fs
and
pminub
test
xchg
and
pop
cmp
sub
testl
mov
sbb
dec
rclb
nop
clc
fisubrs
mov
test
push
jb
into
pop
sub
outsl
aam
mov
and
cmp
push
ds
cmp
mov
sub
cmp
mov
push
rcrb
repnz
inc
in
das
icebp
mov
mov
imul
inc
xchg
or
and
mov
push
mov
daa
pop
sub
ljmp
roll
leave
fstps
dec
xor
das
mov
lds
inc
mov
sbbl
mov
cli
dec
enter
mov
cltd
push
fadds
sbb
in
jne
fadds
rolb
add
stc
sarb
or
fisubs
gs
imull
fbld
add
in
imul
lods
sti
or
jg
cwtl
je
ret
loope
mov
cmpsb
nop
mov
xor
js
fs
lret
push
lea
cmpsb
jg
popa
in
add
popl
cmp
mov
and
cltd
ja
push
dec
pop
adc
call
jecxz
or
cmpsb
aas
js
add
insl
and
or
mov
rcrl
int3
icebp
out
mov
push
jne
testl
xchg
adc
test
jnp
xchg
subl
mov
fdivrl
out
and
adc
jg
dec
dec
cwtl
rorb
pop
xchg
mov
sub
xchg
std
mov
insb
or
xchg
sub
cld
mov
jae
fs
mov
mov
cmpsl
xchg
nop
fstpt
fiadds
mov
or
mov
jp
test
mov
add
dec
je
imul
sbbl
push
xchg
xor
mov
outsb
mov
enter
push
cmp
pushf
cli
sti
idivb
and
loop
loop
lock
icebp
loope
add
xchg
or
ja
addl
out
cmpsb
pop
cwtl
popa
fwait
es
sbb
shrb
es
mov
jecxz
dec
push
inc
nop
mov
enter
sub
xor
and
adc
cmpsl
imull
movsl
popa
les
sarl
in
sarl
test
js
lods
lea
xchg
roll
add
mov
pop
jl
testl
lret
cwtl
lds
aaa
mov
jg
inc
test
mov
sahf
repz
cwtl
loop
jg
das
mov
lret
cmp
mov
mov
xor
cmp
in
fcmovne
bound
sti
icebp
jmp
lea
ss
cltd
enter
sahf
jmp
test
fisttpll
xor
push
mov
mov
cmp
das
push
loope
cmp
push
add
loope
adc
mov
cmp
gs
mov
es
jb
push
and
adc
movsl
and
inc
rorl
popa
jmp
sbb
repz
test
inc
out
sbb
outsb
into
push
push
ficompl
sbb
push
pop
jno
pop
in
cmp
push
mov
jnp
mov
popf
pop
xchg
jecxz
fsubrs
pop
mov
and
jle
in
fadds
xor
in
push
adc
add
adc
loop
pop
and
shr
inc
adc
xor
and
leave
leave
dec
adc
push
popf
sub
or
stos
and
shlb
adc
lods
out
dec
pop
dec
sbb
jge
mov
or
lock
repz
stos
jbe
jae
lds
and
test
mov
cmp
or
insb
ja
xorb
loopne
cmpsb
jmp
addr16
adc
push
pusha
sarb
mov
mov
mov
fwait
subb
cli
xchg
call
jne
inc
jb
mov
mov
test
cs
mov
pop
jo
repnz
pop
lret
mov
faddl
ds
push
push
repnz
ds
push
dec
cmp
xchg
mov
dec
cmp
inc
push
sbb
mov
lods
mov
mov
inc
lds
jp
mov
out
in
adc
jmp
add
sar
xchg
mov
ds
leave
mov
int3
sub
fimuls
pop
in
outsb
shlb
mull
cs
push
fldt
outsl
adc
cli
xchg
dec
rcr
push
sti
and
iret
aas
test
cld
cmp
xchg
pop
and
addb
int
xchg
dec
hlt
lret
dec
and
sub
inc
cmpsw
leave
mov
lret
or
popf
test
mov
mov
notl
leave
cli
sbb
push
fldt
outsl
adc
sbb
sub
jecxz
fdivr
and
or
add
iret
in
or
xchg
or
mov
decb
repz
lcall
xchg
int
adc
mov
das
mov
addl
cmp
mov
fldt
in
mov
fstpt
xor
or
js
popa
sarl
xor
or
mov
mov
push
sub
adc
push
ret
or
popf
into
outsl
jns
mov
je
ja
push
or
adc
push
lea
and
cmp
mov
gs
hlt
jle
add
dec
mov
aam
mov
insl
outsb
lea
ret
rorb
in
loope
fs
stos
cmp
jecxz
push
mov
lret
dec
clc
sbb
sarb
imul
mov
aad
push
mov
movsb
or
sub
sbb
xchg
sbb
dec
rcrl
jp
or
push
loopne
jecxz
sahf
inc
call
adcl
scas
ja
sub
sarb
repnz
push
fildll
test
xor
dec
aaa
xor
and
scas
movsb
out
inc
mov
cmp
js
test
xchg
data16
pop
sbb
sub
mov
in
adc
push
icebp
pop
jnp
xchg
mov
jp
push
sahf
dec
inc
and
or
adc
addl
fcom
xor
inc
xor
mov
jmp
rorl
xor
jle
xchg
jp
xchg
subl
les
ret
iret
popa
sub
comiss
pushf
mov
out
andb
xor
jmp
jns
jp
xchg
sub
mov
mov
pusha
les
imul
lock
lret
bound
mov
dec
cmp
jl
test
mov
aas
mov
daa
ficoms
xchg
push
xor
xorb
div
cmp
iret
adc
cmpb
lcall
cmc
fst
jo
pop
ja
pop
push
mov
push
adc
mov
stos
add
daa
cli
mov
add
mov
fidivrl
or
xchg
sbb
ret
ja
dec
inc
xor
sbb
xor
cmp
jmp
outsb
jae
inc
xchg
pop
mov
xchg
xor
xchg
gs
mov
sti
inc
push
je
xorl
pop
lods
aas
mov
dec
mov
es
mov
das
test
dec
fisttpl
ret
push
mov
push
cltd
and
sti
jb
scas
bound
cmp
mov
push
pop
lods
xor
sbb
mov
xor
sub
test
ss
hlt
pushf
leave
cmp
scas
lea
inc
inc
xor
scas
std
jnp
jno
sbb
mov
dec
sbb
imul
int
lea
ljmp
xchg
mov
ret
ret
mov
out
incl
mulb
ret
add
mov
xchg
push
test
sub
cmpxchg
pop
jp
or
jo
pop
sub
cmpsb
mov
jne
mov
cli
jge
shl
jp
push
and
cmp
in
add
or
xor
test
ds
mov
ret
fdivl
or
or
xchg
daa
loopne
gs
jbe
in
push
cmpsl
lds
ja
or
icebp
xchg
xchg
jmp
movsl
mov
inc
inc
sub
leave
mov
aas
mov
in
sub
mov
das
leave
and
addr16
data16
hlt
into
shrb
mov
clc
cmp
cmpsb
popf
sahf
push
mov
pusha
fisubs
cwtl
mov
adc
add
pop
sbb
mov
aaa
decb
push
aad
ja
dec
cli
xchg
outsl
dec
mov
pushf
inc
inc
sbb
ficoml
popf
mov
lods
dec
add
fists
loope
inc
stc
aam
mov
pop
cmpsl
sub
icebp
and
into
sti
or
mov
shll
push
sub
sti
mov
shrb
sbb
sbb
or
mov
dec
ljmp
imul
aad
cmp
sub
das
imul
cmp
mov
insb
fs
add
fwait
bnd
sub
cmp
jb
inc
fcmovb
mov
mov
pop
push
jbe
push
jle
sbb
pop
std
jmp
sbb
xchg
jb
pop
push
iret
push
dec
int
cmpsb
sbb
cmp
cmp
stc
in
lods
adc
imul
mov
dec
sub
insl
jnp
mov
inc
std
call
xor
es
int
or
cmp
adc
aad
sub
mov
call
and
dec
push
pop
dec
enter
xchg
jb
push
sub
scas
cmp
scas
enter
mov
sub
outsb
and
loop
xchg
aaa
push
cld
loop
xor
and
pop
mov
ja
rcrl
mov
pop
arpl
ss
jecxz
fists
cmp
roll
sub
popf
enter
rcl
clc
in
adc
push
and
sbb
test
jl
repnz
sbb
fadd
es
cmp
ss
push
pop
jbe
push
aam
imul
jg
ds
mov
sub
and
movsb
adc
pop
and
loopne
insl
andl
outsb
pushf
vmwrite
xchg
push
mov
cmpl
fwait
jo
push
adc
push
mov
push
cli
mov
sbb
pop
dec
jb
xor
jp
repnz
mov
jae
push
rclb
cmpsb
daa
adc
pop
aam
out
and
aaa
push
es
pop
scas
mov
fidivrs
cmpsb
inc
scas
push
iret
adc
inc
jb
das
dec
outsb
cwtl
mov
repz
mov
sbb
stos
xchg
xor
push
pushl
cmp
and
pusha
add
sbb
cmpxchg8b
push
mov
imul
repz
sahf
ret
xchg
fadds
and
mull
lret
jge
sub
adc
sbb
roll
loopne
cwtl
rorb
xchg
xor
xlat
mov
jmp
mov
std
pop
push
lcall
jb
mov
jge
loope
into
jnp
cmpsb
sbb
sbb
adc
in
cmpsb
add
mov
push
push
leave
and
in
cmpsl
in
sub
dec
pop
pushf
out
cmp
outsl
mov
fnsave
cmp
lods
sbb
ja
in
mov
adc
out
aam
loope
push
mov
jno
cmp
je
push
jle
xchg
jg
adc
dec
cmp
inc
jmp
imul
push
nop
xchg
jge
stc
push
fidivrl
incb
fisttpll
dec
adc
ss
xor
cmp
das
lret
jnp
push
mov
fwait
inc
cltd
mov
hlt
dec
cmp
jl
xchg
mov
clc
mov
outsb
pop
sbb
adc
adc
das
call
sub
lea
dec
pusha
inc
js
or
into
jl
sbb
stos
hlt
and
popa
cwtl
fsubrs
iret
stos
icebp
cmp
test
inc
es
lret
dec
and
dec
inc
and
mov
xor
cmp
mov
sub
mov
lret
adc
enter
mov
push
push
adc
addb
sbb
mov
fsubl
sub
pop
nop
sti
cmp
jl
adc
pop
imull
outsb
test
in
dec
xchg
adc
sti
std
or
sbb
cmp
mov
js
shl
pop
adc
in
pop
lret
iret
xor
addr16
sub
cmp
repz
add
pop
sub
clc
shrl
sbb
imull
mov
sahf
vpsrld
sahf
test
mov
dec
out
popa
les
enter
addb
in
push
and
jns
add
push
push
pop
pop
dec
jmp
mov
jl
cmp
jp
inc
std
jo
mov
mov
scas
sbb
push
insb
pop
movsl
mov
and
lods
les
test
add
sub
pop
push
ds
stos
xchg
js
pushf
cld
jp
push
sub
cmp
or
clc
das
daa
aam
popf
lods
xor
movsb
dec
sub
je
divl
xchg
mov
arpl
in
jmp
cmpsl
jbe
mov
xchg
in
mov
dec
repnz
addr16
mov
fsubs
inc
cmpsb
or
xor
cmp
xor
xchg
sub
test
pop
scas
mov
mov
arpl
das
inc
clc
aas
wbinvd
mov
push
test
mov
enclu
pop
push
cwtl
push
fldenv
bnd
aam
jg
mov
pop
push
in
inc
cli
cmp
jmp
pop
test
inc
lea
push
add
lahf
in
add
add
inc
addr16
lods
inc
dec
xchg
push
mov
imul
aad
test
pop
fsubl
mov
adc
pop
xor
lahf
subl
ret
push
mov
nop
and
mov
pop
mov
xchg
xchg
cmc
push
pop
movsl
stos
mulb
test
lock
mov
lahf
xchg
jnp
pop
andb
or
lcall
inc
pop
rcr
cmp
rcrl
rclb
rcr
bound
mov
cmpsl
dec
sbb
cmp
cld
push
mov
xor
out
imul
cwtl
in
stos
je
cli
stos
pop
dec
imul
cmc
dec
mov
dec
adc
mov
out
pop
and
jmp
outsb
sbb
adc
out
xchg
outsb
jg
xchg
jmp
in
lods
fmul
jle
arpl
fiadds
outsl
xchg
lds
shll
or
inc
ret
and
jle
sub
xor
ds
mov
call
movsb
adc
sub
das
cmp
pop
aam
sbb
cmp
mov
loop
clc
ljmp
orb
dec
les
inc
into
in
xor
dec
mov
dec
icebp
mov
sub
iret
or
inc
pop
xchg
out
cli
fbstp
call
xor
dec
lds
push
movsl
sbb
addr16
mov
sub
dec
push
xor
xchg
and
mov
shrb
jno
or
xlat
popa
or
dec
xor
lret
jl
jno
lahf
jge
mov
or
mov
je
mov
gs
decb
js
sub
dec
jecxz
mov
xchg
mov
test
das
mov
mov
jne
push
or
cmp
and
movsb
dec
outsl
mov
pushf
pushf
pop
mov
fnop
int
stos
nop
or
adc
and
inc
jno
aad
sarb
mov
sahf
inc
sbb
jecxz
out
loop
rorl
ds
shrl
xor
jae
addr16
add
insl
dec
pop
sub
fmuls
icebp
xor
sub
inc
add
push
adc
cwtl
jge
push
std
sbb
mov
pop
mov
adc
fisttpll
test
movsb
push
inc
lock
popf
push
imul
lds
pusha
hlt
fcomip
xchg
cmp
insb
lock
mov
xchg
sub
cmpsb
xchg
mov
stos
jge
out
jle
fisubl
jl
lods
rcrb
out
jmp
test
popf
test
xor
ds
dec
push
pop
ret
enter
push
jmp
mov
jle
outsb
mov
mov
dec
adc
movsl
push
xchg
pop
div
into
leave
xchg
or
cmp
mov
nop
dec
aaa
xlat
inc
in
ljmp
mov
mov
or
jge
cwtl
out
sub
addr16
imul
cmp
adcb
sub
and
lret
bound
push
popf
in
adc
aam
imulb
or
sti
pusha
mov
push
jbe
pop
addr16
adc
fimuls
jle
jno
adc
jbe
push
adc
pop
outsb
in
xor
scas
push
std
ss
push
or
add
push
lods
loopne
icebp
orb
pop
shrl
test
jne
jb
repz
jl
ret
cmc
pop
lock
in
cmp
mov
dec
jl
or
cmp
xchg
imul
movl
cmp
pop
jnp
mov
sub
pop
inc
pop
cmc
outsl
xlat
shrb
mov
es
push
jmp
push
cmp
lret
xor
cmp
adc
inc
test
data16
in
mov
push
jns
cmp
push
ljmp
insb
mov
out
arpl
sub
stos
idivb
lahf
aam
enter
push
arpl
mov
push
push
adc
in
dec
pop
pmaxsw
and
shrl
push
movsb
mov
mov
cmp
push
jl
data16
insb
orl
sub
and
pop
rorl
mov
xlat
outsl
mov
es
incl
mov
sub
mov
imul
mov
lds
xchg
xchg
je
int
scas
xor
sub
mov
or
leave
in
cmp
add
cmp
clc
inc
in
push
gs
push
xor
call
add
adc
push
xchg
sbb
popa
aas
or
push
iret
pusha
int
or
or
pusha
add
repz
lret
add
dec
bound
std
mov
enter
jcxz
lods
arpl
pusha
pop
hlt
mov
cmpsl
sub
inc
sbb
arpl
xor
sbb
fcoml
icebp
mov
fstl
ljmp
shl
fisttpl
movsl
xor
insl
aas
inc
sub
xlat
jecxz
enter
xchg
sub
mov
ret
and
iret
cmpsl
cmp
cmp
sarl
jo
mov
sbb
mov
dec
add
stc
jae
xorb
inc
rclb
mov
aaa
mov
lds
inc
add
outsb
pop
push
popa
ret
xorl
dec
adc
push
nop
lret
out
xchg
cmpsb
jp
pop
mov
ret
cmpsb
push
add
and
lods
push
jbe
rorl
push
sar
push
inc
and
nop
int3
cmpsb
push
pop
push
mov
nop
cmpsl
inc
mov
imul
pop
add
dec
out
jno
mov
lahf
or
aaa
in
imul
fmul
repnz
int3
jle
test
jo
nop
sbb
test
testl
addl
jb
add
adc
or
inc
movsl
xchg
int3
cwtl
add
pusha
or
push
lock
jg
push
mov
cld
mov
fs
daa
xchg
ds
push
out
cmpl
xor
iret
test
das
inc
mov
inc
add
enter
push
pop
rorl
sbb
ljmp
insb
insb
cwtl
jmp
fdivs
xor
daa
cs
sub
push
lds
es
adc
mov
lds
xchg
xor
sarb
xor
jmp
push
jb
mov
pop
nop
mov
dec
jle
aad
mov
push
jns
addb
adc
loope
leave
and
sub
push
jp
cmpsb
dec
add
sbb
sub
cmp
jg
call
mov
mov
int3
mov
cwtl
xchg
jg
or
mov
popf
aaa
dec
movsl
icebp
cli
addr16
add
pop
xor
mov
dec
ret
or
sbb
sub
sbb
cmp
dec
xchg
mov
daa
mov
cld
into
popf
cmp
xchg
push
push
outsl
xor
sub
push
mov
ror
sbb
repnz
in
mov
jno
or
xor
adc
fs
add
stc
aaa
mov
insl
nop
arpl
mov
std
rorb
adcb
scas
push
or
adc
adc
out
stos
icebp
rol
inc
gs
outsb
mov
cmp
pop
sub
or
cld
jmp
loopne
test
cwtl
into
outsl
pop
fmuls
shrl
scas
bswap
out
js
in
push
repz
lcall
mov
fisttpll
xchg
rolb
jmp
adcb
mov
dec
aad
cs
outsb
mov
stos
xor
pop
and
xor
in
jmp
inc
add
rcll
cwtl
inc
movsl
cmc
pop
or
adc
cltd
xchg
pmullw
inc
push
int3
repnz
or
inc
ret
inc
push
inc
into
and
repnz
cmp
dec
jno
cmp
cld
mov
test
jb
inc
adc
movsl
sbb
fiaddl
xorb
jg
fcmovnb
mov
or
pop
jne
xor
adc
imul
push
pop
stos
stos
jo
das
test
mov
les
arpl
mov
adc
cmp
nop
cli
mov
iret
fsubrl
sbbb
repz
mov
sbb
mov
adc
lds
pop
xchg
mov
jg
icebp
mov
rcrb
rcl
lds
jae
aas
mov
mov
xchg
in
sahf
incl
adc
ljmp
mov
pop
fildll
xlat
cmp
imull
fisttpl
jecxz
dec
jp
rcr
sub
mov
xchg
pop
add
add
cmpsb
test
mov
mov
popa
xchg
pushf
xor
scas
adc
mov
outsb
mov
or
test
test
ret
mov
pop
ja
jg
sub
hlt
fwait
out
cwtl
adc
mov
int
mov
cmp
push
outsw
imul
out
pop
xor
or
inc
gs
out
arpl
pop
xchg
push
test
fidivrl
xor
in
shrl
mov
cli
dec
scas
and
fisubrl
mov
and
cmp
push
dec
xor
popl
adc
daa
push
lret
cmp
or
popf
add
ret
mov
push
enter
mov
seto
push
movsl
pop
fldcw
sbb
aam
cmp
cld
ss
addr16
shll
xchg
jbe
jne
cs
shrl
scas
orl
es
lds
dec
xor
pop
cmpsl
lods
add
mov
insl
gs
ljmp
or
jns
dec
ficomps
movsl
push
imul
xor
xchg
shr
lcall
vmulsd
xor
pushf
sbbl
or
cld
aad
or
out
rcrb
in
cli
jnp
add
insl
mov
rdtsc
and
shll
push
imul
adc
pop
fcomps
sti
clc
test
or
xchg
lahf
mov
cmpsb
popf
push
add
mov
dec
dec
mov
adc
push
inc
ret
pusha
dec
xchg
fdivrp
lods
dec
aaa
insb
mov
pop
repnz
sti
jno
xor
jo
mov
push
mov
adc
mov
sbb
cmp
jg
scas
sub
stc
cmp
lret
mov
fdivrl
cmp
out
arpl
fcmovbe
insb
mov
pop
jb
add
sbb
jb
imul
or
mov
repz
xchg
daa
and
popl
add
pop
mov
inc
adc
shlb
inc
aaa
jns
adc
ret
or
and
or
movsl
fwait
xchg
pushf
mov
sub
fstp
lods
xchg
mov
jbe
mov
repz
mov
adc
push
cmp
das
fdiv
or
sahf
pop
push
or
test
pop
xor
loope
lds
cmpsl
inc
mov
fdivl
pop
out
adcl
push
or
mov
adc
or
imul
xchg
dec
xchg
imul
push
mull
adc
cmp
adc
jmp
in
push
les
fcmovnb
sbb
jg
xor
push
xchg
dec
adc
cwtl
mov
mov
cmovae
cld
sti
ret
test
test
jne
mov
fadds
mov
and
dec
push
sbb
xor
or
pop
add
add
aad
incb
jl
lret
es
xlat
sarl
pop
daa
int
xchg
int
push
jle
add
push
in
loopne
pop
adc
sub
ss
or
sub
mov
aad
xor
frstor
xchg
xchg
jbe
cs
dec
in
jmp
xchg
push
mov
mov
mov
mov
push
lods
cmp
xchg
idiv
mov
mov
fisubl
lods
cmp
xor
cwtl
frstor
faddl
cmp
leave
inc
adc
xlat
pop
push
push
xchg
add
pop
pop
and
xchg
aaa
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
jmp
pop
cmp
inc
xchg
test
and
lret
xor
addb
call
push
sti
mov
sbb
leave
cltd
inc
mov
or
mov
ds
cmp
leave
clc
push
pop
ja
push
xor
cmp
jp
ja
cmpsb
data16
jo
push
mov
and
mov
faddl
arpl
movb
hlt
push
sbb
pop
push
inc
mov
jecxz
lds
out
xchg
ficoms
xchg
push
cltd
das
xor
jo
or
mov
jnp
add
sahf
or
hlt
pusha
mov
pop
xchg
into
xor
or
add
in
out
and
mov
mov
mov
cmp
mov
out
inc
add
cmp
cmc
cld
in
das
xchg
push
ljmp
insl
jnp
push
mov
mov
mov
inc
bt
and
cmc
imul
mov
jo
arpl
jl
ret
dec
sti
mov
out
ljmp
pop
add
mov
pop
adc
mov
jo
imul
mov
pop
jno
fwait
bound
test
xlat
scas
std
imul
addr16
cmpsb
mov
mov
pop
add
inc
test
inc
or
or
ljmp
mov
rcrl
cli
mov
out
cwtl
rcrb
and
popf
popf
lcall
cwtl
and
insl
xchg
cmp
push
cmp
sub
mov
dec
enter
cmpl
and
push
adc
std
out
lahf
pusha
loop
loope
inc
pop
mov
add
xchg
xor
addr16
pop
jno
daa
or
cmp
xlat
arpl
scas
std
int
jbe
xchg
add
mov
stos
cli
adc
in
test
jno
mov
aad
xor
fadds
dec
pop
notb
les
enter
mov
ljmp
in
mov
rorl
mov
fnsave
xchg
clc
push
stc
in
in
les
mov
mov
rorb
xorl
lahf
inc
gs
jg
sub
jge
and
aam
dec
ss
or
jecxz
xlat
ss
adc
mov
xor
jle
daa
inc
int
scas
dec
out
xlat
aam
shll
ja
jne
stos
dec
icebp
cs
pop
jecxz
jae
push
rorl
std
mov
push
mov
shlb
pop
cmpxchg
push
scas
repnz
mov
and
xchg
mov
ret
mov
ror
cld
mov
mov
adc
and
and
mov
xor
lret
mov
push
pusha
jne
loopne
mov
leave
loope
sbb
int
insl
cmp
inc
daa
movsl
enter
sbb
mov
int
pcmpeqb
clc
jns
mov
or
add
push
jae
xor
jecxz
xor
add
push
sub
outsl
sub
sub
in
leave
bound
inc
icebp
mov
rol
inc
stos
jo
ret
jle
push
testb
inc
pushf
xchg
loop
cltd
divl
pop
jmp
add
push
and
push
cmp
pop
test
jge
cmc
mov
movsb
ja
jl
jl
add
in
xorb
rolb
ret
xor
sbb
test
push
int
jne
dec
decb
test
call
dec
loop,pt
xchg
inc
pop
push
lcall
mov
lahf
sub
jge
repz
clc
dec
mov
mov
scas
adc
xchg
pop
push
loope
cmp
cld
bound
cmpsb
rclb
fsubrp
adc
imul
call
mov
jp
dec
lods
sub
cld
rolb
sbbb
rdpmc
arpl
cltd
xchg
add
mov
fs
inc
test
cmc
xchg
les
fstl
pop
jbe
bound
sbb
dec
ret
pop
mov
inc
cmp
xlat
ss
stc
mov
bound
test
test
in
pop
and
mov
movsb
rorl
adc
pop
mov
mov
bound
mov
pop
mov
jecxz
jmp
test
insb
loopne
nop
mov
ret
icebp
fwait
mov
mov
push
aaa
lcall
jp
mov
ja
cmp
lret
pop
mov
out
in
sub
add
lock
rorb
jp
push
pop
je
fwait
jge
fdivrp
lods
mov
add
outsl
jae
jbe
mov
cmp
pop
pop
pop
xchg
ljmp
xchg
dec
or
sub
addr16
sbb
aaa
test
mov
jno
out
push
xchg
mov
out
dec
imulb
mov
scas
lea
nop
ja
pop
jge
das
out
sbb
test
cld
jmp
xchg
shl
sahf
push
push
or
pop
mov
popf
mov
out
cmp
sbb
lock
mov
dec
lock
in
sbb
jp
or
push
scas
into
xchg
cld
xlat
arpl
ret
ja
xchg
scas
jmp
xchg
ss
xchg
mov
xor
mov
testb
es
add
jns
aam
or
pop
pop
dec
stc
sub
pushf
dec
xlat
and
jle
scas
call
adc
fwait
push
mov
ror
add
in
mov
dec
lcall
and
mov
mulb
jnp
movsb
int3
add
test
sub
imul
dec
test
stc
loop
les
das
js
imul
ljmp
lds
xor
aaa
and
outsl
adc
jne
and
mov
mov
xor
xchg
mov
jmp
xchg
xor
sub
out
push
imul
clc
xorb
add
bound
lds
mov
add
jecxz
cmp
dec
mov
sbb
mov
xchg
in
or
das
dec
pop
icebp
inc
fisttps
mov
cmp
xlat
aad
lcall
cmp
mov
movsb
and
push
mov
adc
mov
mov
fbstp
push
incl
cli
test
repz
lret
and
xchg
jg
xor
popf
arpl
mov
js,pt
xchg
inc
arpl
add
xchg
push
int3
jecxz
movl
inc
fcoms
popl
clc
in
sub
out
and
aad
clc
fldl
ss
inc
leave
jg
inc
cmp
leave
fmull
push
mov
and
int
push
sarb
xchg
jnp
and
popf
adc
fimuls
into
bound
mov
xor
xchg
dec
and
fiadds
push
ret
and
sti
mov
push
sbb
enter
std
push
fcompl
mov
mov
repz
add
pop
cmp
xchg
in
orb
mov
pop
movl
dec
adc
jae
aad
gs
mov
xchg
sub
gs
and
push
cltd
add
jne
cmpsb
jb
sub
stc
shrl
out
adc
inc
xchg
ja,pt
lahf
jmp
paddq
mov
mov
mov
mov
push
jae
or
dec
and
idivl
mov
clc
ret
mov
jp
sub
mov
cld
inc
push
in
lcall
bound
xchg
xchg
repnz
ret
scas
dec
adc
dec
jl
mov
pop
mov
aam
cmp
sub
push
fwait
in
enter
lret
xchg
imul
mov
enter
loope
ret
push
fidivrs
dec
psubw
adc
fistl
movsb
inc
xor
sub
pop
arpl
inc
js
lds
sbbl
sbb
xor
mov
pusha
and
gs
jne
lea
rolb
aas
and
es
or
dec
lret
insl
out
sbb
inc
cmp
cmpsl
icebp
es
dec
push
std
push
cmp
les
adc
push
filds
cmc
mov
sub
mov
pop
push
jbe
push
mov
lret
call
mov
int
test
push
test
push
dec
sub
je
adc
cmp
cs
aad
jb
mov
mov
lea
lcall
in
add
arpl
add
xor
jg
cmpl
mov
out
loop
inc
in
pop
gs
mov
clc
ret
lea
push
scas
pop
xchg
and
xor
roll
fcoml
cwtl
push
cs
push
jge
in
stos
push
jb
into
pusha
inc
mov
mov
lods
pop
and
cmpsb
insl
lret
lock
std
ss
sbb
xor
jno
cli
sub
test
sbb
cmp
scas
hlt
xor
pop
data16
subl
in
insl
mov
dec
outsb
push
ss
aas
pop
nop
movsl
lds
push
pop
aas
add
inc
je
mov
lods
xchg
mov
dec
cmp
mov
mov
or
adc
imul
and
xor
lock
jnp
mov
push
jg
insb
popa
add
inc
adc
xchg
cmp
movsl
sar
repz
adc
ficoms
inc
adc
dec
jg
push
inc
push
enter
xchg
pop
xchg
push
dec
adc
aas
pop
jle
daa
lods
cs
xchg
jl
sti
jno
inc
outsl
dec
push
jp
or
orl
add
pop
into
xor
pop
lret
or
adc
and
inc
out
dec
jge,pn
xlat
leave
xchg
inc
ljmp
je
sub
push
js
popa
out
in
repz
lock
fsubl
mov
and
adc
pop
in
and
fwait
jb
lret
mov
test
imul
sub
pop
and
adc
xlat
inc
xor
ror
cvttps2pi
sbb
sbb
xor
addl
lods
pop
scas
sbb
or
or
sub
hlt
pusha
sbb
hlt
add
or
adc
scas
inc
dec
cltd
sub
dec
dec
fisubl
es
fcmovnbe
or
mov
je
jge
gs
mov
adc
outsl
or
mov
lahf
bound
mov
fistps
xchg
add
cltd
vpmacsww
lods
dec
test
sbb
fldt
popf
popf
jno
mov
inc
mov
popa
fwait
pop
xor
add
adc
bound
lret
xor
lds
mov
cmp
mov
fisttps
push
out
rcrl
lret
jmp
clc
fldcw
enter
pop
decl
cmp
jmp
jbe
push
dec
rorl
addr16
scas
adc
outsl
das
mov
iret
cmp
je
xchg
addr16
cld
imul
mov
adc
cltd
xor
sub
jl
pop
cmpsb
pop
les
adc
inc
xchg
xchg
and
mov
cmpsb
sub
and
dec
fsubrl
inc
pop
cltd
and
fwait
mov
repnz
mov
insb
movsl
sbb
mov
mov
adc
mov
fs
aas
nop
jle
shrb
and
xchg
stos
push
cmp
rolb
push
iret
pop
xchg
push
ja
jmp
mov
stos
mov
dec
pop
push
adc
sbb
inc
jl
nop
cmp
mov
or
mov
mov
xchg
addb
push
jb
adc
lahf
adc
mov
inc
sbb
cmp
jg
call
pop
jle
mov
sbb
pop
mov
in
and
pusha
pop
cmpsb
dec
add
sbb
push
cmc
mov
imul
cmp
xchg
stos
mov
sub
jl
outsl
inc
adc
push
jne
dec
fprem1
mov
cmp
add
andb
dec
adc
mov
out
fstpl
test
push
pushf
mov
inc
rorl
popa
lcall
fbstp
inc
inc
movsl
jns
dec
jg
pop
lods
inc
leave
sbb
aaa
jno
repnz
in
das
inc
repnz
and
xchg
push
lock
movsb
mov
sbbl
sbb
sbb
es
pop
mov
lds
mov
sbb
popf
xlat
mov
js
or
shll
pop
xchg
aaa
mov
sbb
pop
and
push
or
mov
xor
push
cli
sbb
xor
cltd
addr16
pop
icebp
and
inc
lea
inc
test
test
cmp
cmp
in
addb
mov
sub
inc
xchg
test
cli
les
lret
lods
in
xor
aam
out
xchg
dec
ljmp
mov
mov
or
dec
jp
pushf
xchg
ficoml
lods
cmp
pop
cmp
push
push
into
mov
loop
mov
sar
in
mov
psadbw
push
xor
adc
sub
scas
and
imul
jb
mov
psubsb
inc
stos
ret
inc
sub
xor
shl
add
out
jno
mov
pop
adc
addl
cmp
out
mov
lret
ret
pop
bnd
xchg
jno
lods
adc
jne
push
jno
in
in
test
pop
loope
stos
jl
andl
jns
rol
push
and
sub
sahf
fistl
mov
xor
das
add
out
dec
aaa
int
out
sti
ljmp
loopne
jnp
inc
add
sub
jno
insl
leave
call
dec
ljmp
dec
sbbl
pop
sti
in
into
arpl
jns
pusha
dec
out
aam
push
xor
and
out
xlat
pop
jmp
jg
int3
mov
aam
sbb
mov
stos
push
xor
dec
rcl
jp
mov
xchg
xor
or
xor
popa
test
adc
jl
andb
sub
int3
test
and
and
push
je
mov
adc
sbbb
scas
addr16
imul
gs
hlt
or
fndisi(8087
inc
or
ja
int3
out
outsb
packuswb
inc
roll
jecxz
gs
jnp
pop
out
cmp
out
ds
adc
mov
add
ret
or
and
push
jmp
push
lock
lret
inc
in
pop
xchg
dec
lds
ret
lods
insb
imul
inc
cli
push
add
flds
stc
and
and
loopne
xlat
scas
mov
mov
cmp
and
pusha
pop
stos
sahf
test
and
scas
dec
adc
aad
push
scas
hlt
jge
jmp
les
xor
jbe
and
hlt
imul
mov
push
xchg
subl
popa
jmp
stos
stc
xor
xor
fsubp
add
mov
test
cltd
and
inc
and
outsb
sub
xorl
push
add
or
cmpsb
fsts
pop
push
mov
xlat
clc
test
push
clc
sub
fs
insb
call
lods
cmp
out
push
dec
mov
mov
sbb
add
daa
rorb
bnd
int3
mov
mov
std
scas
mov
movsb
sbb
enter
lock
jne
jne
sbb
pop
loope
and
cld
pop
inc
push
sub
cmc
pop
clc
in
mov
stos
aas
sahf
test
jge
inc
rcrl
ljmp
sbb
leave
rcll
imul
and
cmc
je
es
out
jnp
and
adc
sbb
out
dec
inc
inc
adc
dec
gs
mov
shr
das
pop
dec
enter
sub
sbb
or
divb
inc
int
mov
pop
shl
pushf
push
outsb
popf
insb
ja
in
loopne
iret
mov
mov
cmp
addb
cmp
das
xchg
ret
mov
scas
test
je
stos
jbe
sbb
and
pop
shl
lds
stos
cli
incl
push
popf
insb
repnz
mov
xlat
mov
js
outsl
pop
push
in
xchg
push
inc
dec
insb
sbb
jbe
int
movsl
dec
mov
pop
inc
into
and
inc
repz
xor
add
pusha
mov
outsl
dec
testb
sbb
daa
outsl
ljmp
pop
je
jp
orl
adc
mov
stos
mov
fs
mov
inc
push
sbb
in
fcmovnb
stc
or
jno
dec
pop
out
inc
stos
jecxz
out
push
iret
cmpsl
test
test
fs
jecxz
or
xchg
push
mov
idiv
out
fnstenv
xor
jg
or
dec
test
faddl
and
cs
pop
xchg
jmp
push
cltd
inc
jb
daa
insl
jno
out
pop
sub
ret
pop
in
dec
push
sbb
int3
mov
adc
fwait
mov
xchg
insl
push
xorb
inc
fst
push
pop
cwtl
xchg
je
adc
cltd
ljmp
mov
jl
or
xor
xchg
sub
das
mov
mov
adc
mov
ret
std
push
shlb
dec
lahf
mull
dec
mov
scas
mov
mov
ret
out
ljmp
out
popa
sbb
adc
test
cltd
cmp
add
mov
jp
pop
push
pop
jecxz
push
xchg
jae
inc
mov
xchg
sub
jns
cli
aad
fwait
ds
stc
push
xor
clc
sahf
subl
lea
cmc
loope
aas
pop
imul
mov
jno
lock
cmpsl
int3
jns
inc
push
clc
push
movsl
xchg
lea
idivb
push
push
int3
cli
iret
mov
test
ror
outsl
cltd
jne
jg
mov
add
add
ljmp
dec
cli
in
jns
push
mov
dec
out
mov
dec
mov
sahf
rcrl
aaa
mov
add
fdivrp
test
mov
add
xor
sbb
push
inc
out
faddl
popf
pop
xlat
hlt
xchg
std
movsb
ss
sub
ja
test
lret
cltd
pop
pop
inc
mov
xorb
cmp
jp
popf
fnstcw
or
dec
out
push
shll
xchg
stc
xchg
lret
rcrb
ret
jne
roll
sbb
lods
aam
mov
and
dec
dec
pop
popa
loop
in
lcall
inc
push
lds
imul
sbb
dec
mov
xlat
jbe
dec
shll
cli
or
xchg
popf
aad
shrb
sbb
mov
pop
fidivrs
and
lods
push
fnstenv
mov
push
out
lds
ss
push
orb
jbe
sbb
lods
outsl
jns
aam
cmpsl
sub
es
call
cld
push
push
loopne
push
mov
test
addr16
lods
xor
repnz
js
and
vpunpckhdq
stc
cli
ret
or
lods
outsb
dec
push
iret
jo
sbb
xchg
mov
mov
jl
mov
test
addr16
mov
iret
ret
cmpsl
inc
jae
aas
and
pop
leave
out
rorl
or
xchg
and
mov
cmp
xor
mov
inc
and
ret
pop
mov
xor
and
lahf
jmp
hlt
js
out
mov
mov
sbb
lods
fildl
dec
fistps
cmp
ficompl
jno
and
jecxz
push
dec
les
mov
push
xchg
add
mov
pusha
stos
in
clc
push
loope
pop
stc
sub
fldl
add
jnp
adc
mov
mov
xchg
cs
ficomps
pusha
mov
sarl
cmc
addr16
mul
scas
faddl
aas
aam
xchg
pop
mov
adc
pop
inc
pop
push
leave
fsubrl
or
sbb
inc
jns
and
sahf
dec
stos
je
mov
jno
idivb
pop
dec
test
data16
out
sbb
and
dec
mov
xor
inc
or
roll
cs
out
pop
cmp
adc
inc
out
cltd
fidivrl
test
movsb
cmpsl
pop
arpl
push
push
mov
and
faddp
cmpsl
out
and
out
cmpsl
sub
ret
daa
xor
lcall
pushf
xor
push
cmp
jp
dec
lea
jno
cmpsl
cltd
push
cmp
mov
div
jg
roll
rorl
popa
loopne
movsl
xlat
xchg
insb
loopne
dec
mov
loop
aam
mov
sbb
cmp
dec
daa
hlt
hlt
lret
jns
mov
and
and
xchg
icebp
out
dec
movsl
cmp
mov
repnz
adc
push
jle
sarl
mov
add
mov
inc
mov
and
lahf
negl
rclb
and
into
rorl
test
stos
pusha
jne
mov
filds
cs
xchg
mov
cmpsb
sbb
adc
adc
or
outsl
jne
mov
jnp
jb
nop
stc
in
dec
jl
mov
xor
sub
shl
mov
and
sbbb
sbb
push
pusha
fmuls
leave
jae
ss
xor
pop
cwtl
and
filds
sub
mov
dec
xchg
lahf
ss
push
mov
push
xchg
loopne
ljmp
int3
push
jae
dec
shll
add
adc
imul
adc
inc
pop
test
iret
stos
cmpsb
push
add
rcll
adc
outsl
popf
pop
jno
adc
add
scas
xchg
adc
jne
imul
mov
xor
mov
sub
ss
push
jbe
push
xor
bound
pop
fcoml
cmp
inc
movsb
cmp
xor
movsb
sbb
es
out
out
pop
sarb
push
popa
pop
rcl
sbb
pop
add
pop
cmp
clc
test
jl
sbb
sub
mov
lcall
xor
lods
lds
mov
mov
xlat
jmp
cmpsl
xchg
fsubrp
mov
loope
inc
rcll
cli
xor
jecxz
mov
and
and
sub
cmp
pusha
mov
mov
daa
push
ror
pop
fstpl
jae
fsubs
mov
stc
inc
mov
dec
jns
jge
or
push
jl
rorl
sub
cmpsb
cmpsl
push
and
add
enter
in
test
incb
jecxz
mov
ds
frstor
sbb
sub
cltd
sbb
es
and
lea
cmp
and
mov
mov
sbb
push
adc
or
push
movsl
dec
pop
mov
arpl
sub
data16
inc
dec
in
movsb
stos
rcll
xor
divb
sub
xor
loop
xchg
cld
pop
pop
push
mov
and
jecxz
add
mov
lds
test
push
add
xchg
leave
out
xor
jne
mov
adc
inc
dec
add
pop
testl
loop
std
in
imul
push
lcall
mov
adc
dec
cmp
andb
scas
add
insb
ss
sub
inc
add
movsl
popf
js
jp
sub
jmp
mov
and
out
fisttpl
aas
lret
in
aad
lock
ljmp
mov
inc
js
cs
inc
xor
cmpsl
inc
jo
ror
dec
jnp
loop
rclb
sbb
cmpsl
and
out
sti
inc
mov
lock
sbb
xlat
hlt
sub
pop
out
mov
push
inc
scas
or
arpl
jle
cmc
push
mov
add
xor
call
sarl
xor
pop
lods
lahf
cltd
or
fisubs
push
xchg
call
je
insb
push
xor
icebp
dec
cmp
je
out
lea
shlb
aad
andb
dec
es
sub
mov
xchg
mov
jmpw
or
mov
testl
sbb
in
fmuls
test
stc
push
dec
and
and
adc
fidivrl
subb
sbb
rorl
icebp
adc
aad
cld
jbe
sar
in
iret
and
xor
int3
daa
paddsw
aas
mov
push
cmp
jns
mov
add
cld
out
rorb
dec
xor
mov
add
xchg
nop
pop
sbb
fs
inc
aaa
cwtl
addr16
inc
loopne
aaa
push
sbb
outsl
cmp
lock
jle
insb
fbstp
adcl
out
mov
ss
das
lods
xchg
mov
mov
jmp
std
and
mov
fmuls
jae
rolb
ja
push
loopne
iret
mov
cwtl
mov
sub
cmp
add
pop
cmp
jmp
jnp
fcomps
mov
shll
add
xchg
imul
cli
mov
out
aaa
xchg
scas
xlat
sbb
scas
ss
stos
pop
test
sahf
out
push
hlt
je
in
fisttpl
mov
pop
cmp
mov
inc
mov
push
cmp
loop
les
rolb
out
scas
push
fwait
shrl
add
leave
push
cmp
lret
lret
xchg
and
inc
cwtl
test
mov
out
nop
pushf
mov
int3
push
lret
jo
cmc
add
rcll
pop
inc
jae
jo
enter
dec
and
aas
cmp
test
and
push
pop
mov
decl
and
sbb
dec
daa
cmpsb
jns
mov
nop
mov
ret
adc
mov
pop
jns
push
test
iret
rcr
shlb
adcl
and
mov
dec
dec
outsb
lds
adc
aam
rcrl
enter
repnz
aam
or
and
xchg
out
lods
xchg
or
fimuls
bswap
js
dec
loopne
sub
adc
gs
mov
push
jecxz
mov
adc
mov
xchg
jne
push
clc
add
jl
jno
jb
push
mov
pop
pop
sub
scas
xchg
mull
mov
adc
dec
mov
xchg
jno
sub
test
aaa
dec
lret
rclb
dec
xchg
dec
mov
in
jnp
and
test
push
xchg
iret
pop
test
inc
jns
jge
out
adc
push
mov
sbb
mov
xchg
mov
int3
or
aas
add
pop
jae
xchg
test
xchg
and
cmp
xor
cli
mov
and
adc
fidivl
sbb
subb
hlt
inc
sahf
push
mov
ja
dec
test
cmpsl
sub
jb
and
into
jle
push
adc
in
mov
test
popf
fnsave
dec
inc
lock
push
xchg
or
cmp
rclb
push
inc
xchg
ret
in
lds
and
inc
sbb
or
icebp
push
fwait
sub
dec
shl
ss
mov
cmp
testl
sti
ljmp
mov
icebp
mov
jg
fcomi
dec
mov
lahf
incl
sbb
iret
mov
outsl
imul
xlat
xor
pop
test
lods
les
pop
sahf
enter
mov
lret
adc
or
imul
push
xchg
fsubrs
in
scas
inc
pop
sub
das
insl
stos
dec
ficoms
xchg
movsl
jnp
jb
in
in
adc
fbstp
add
pop
inc
pushf
pop
stos
flds
xor
adc
in
ret
ret
int
xlat
push
out
das
jno
add
imul
imul
test
inc
ds
les
test
jne
dec
daa
popf
xchg
repnz
jle
ljmp
cmpsb
mov
inc
lock
fs
mov
ja
push
inc
imul
mov
jb
nop
loope
fnsave
jbe
mov
xlat
push
mov
je
negb
insb
inc
addr16
insl
iret
mov
cmpsl
mov
outsl
jne
push
jg
icebp
or
mov
mov
mov
sbb
or
adc
add
sahf
mov
cmpsl
cmpsl
call
dec
xor
xbegin
cmpsb
rorb
mov
addr16
movsb
add
xchg
movsb
dec
out
fldl
out
call
or
sub
out
scas
in
popa
jnp
mov
push
inc
jp
mov
mov
add
outsl
sbb
add
call
clc
sbb
pop
xor
popf
cmp
sbb
scas
or
push
aas
adc
mov
enter
jmp
testl
sbb
add
testl
xor
imul
xchg
addr16
shl
shlb
das
xor
in
shll
dec
ds
xor
add
mov
sbb
imul
or
mov
xor
ljmp
in
fdivrs
push
sub
jb
cli
ja
jge
xchg
inc
jmp
call
and
aad
pop
je
fwait
jl
iret
fstl
mov
stos
jp
cmp
test
mov
stos
cmp
pop
push
pop
dec
adc
jbe
sub
mov
ficoms
xchg
jae
sub
inc
push
jmp
testl
sub
sub
push
test
push
mov
sub
aaa
scas
test
cmp
cmp
add
and
cmc
notb
enter
jge
pop
data16
mov
fmuls
inc
pop
xchg
jle
lcall
jns
shlb
mov
mov
lea
lcall
mov
push
out
lds
sub
xchg
mov
test
pop
or
push
decb
ds
jo
dec
test
sub
in
pushf
pop
fdivs
push
and
push
push
popa
add
mov
inc
jecxz
ret
sbb
cmp
add
test
adc
jo
xchg
xor
test
pop
std
je
push
js
add
dec
mov
sarl
popa
push
fmulp
das
aas
pmaxsw
insl
xchg
mov
jno
lcall
xor
mov
jne
or
movsb
rdtsc
in
inc
and
test
jmp
inc
mov
xchg
int
bound
testb
sbb
mov
or
jge
xlat
addr16
fmul
mov
pop
aad
fnstsw
push
in
mov
lret
push
cmp
xorl
xchg
pusha
xor
add
inc
mov
cmp
xor
and
mov
pop
rcl
cmp
enter
mov
testb
cmp
jmp
movsl
jg
out
cmpsl
lcall
lods
cmc
pop
push
bound
mov
sbb
les
pop
mov
add
outsl
icebp
nop
imul
out
and
mov
hlt
cltd
cmp
hlt
sahf
les
xchg
adcb
xchg
add
fs
and
imul
cli
in
rol
mov
mov
sahf
sbb
ret
pop
mov
xor
fildl
rorb
jo
adc
shrb
movsl
lea
xor
xchg
mov
mov
test
mov
sub
add
test
inc
lret
outsb
in
fisttpl
cmpsb
jmp
in
mov
je
rolb
movsl
sub
cmp
das
xor
mov
mov
clc
fistpl
cmc
inc
and
rcrl
jl
dec
or
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
push
movl
cmpl
je
cmpl
jle
jmp
push
push
push
push
call
mov
dec
mov
jmp
push
subl
mov
xor
xor
add
mov
mov
and
mov
mov
mov
xor
mov
movl
cmpl
je
cmpl
ja
jmp
push
call
xor
xor
dec
mov
jmp
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
movl
or
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
pushl
push
push
pushl
call
jmp
mov
movl
cmpl
je
cmpl
jle
jmp
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sub
and
jmp
xchg
fdiv
test
xchg
push
je
pusha
out
incl
sub
in
fbld
or
cmp
push
cmpsb
dec
push
fadds
push
pushf
or
add
es
imul
icebp
lahf
or
fs
outsl
pop
and
and
dec
xchg
or
adc
fld
es
jmp
pusha
or
push
stos
mov
and
shr
in
arpl
mov
or
inc
cmp
shll
ljmp
rcrl
in
xchg
xorl
js
scas
in
out
dec
jbe
inc
in
out
xor
xor
dec
lods
cmpsl
adc
xlat
push
jns
sbb
xchg
mov
leave
and
out
mov
adc
loop
sub
popf
push
push
sbb
adc
push
loope
subl
jne
push
and
sahf
sub
sbb
out
or
xchg
sub
jl
ja
cmp
lret
or
inc
xchg
lcall
dec
inc
and
cli
push
pushf
mov
sbb
shr
push
ficompl
sbb
orl
fistpll
mov
xor
sbb
mov
and
stc
das
insl
flds
sahf
pop
mov
je
or
test
jbe
jg
pop
inc
leave
cltd
mov
xor
idivl
pop
je
into
cwtl
cltd
and
lret
mul
adc
mov
jne
or
in
adc
sbb
inc
xchg
push
lods
sbb
mov
push
aaa
mov
mov
outsl
jecxz
adc
add
notl
loopne
inc
inc
adc
mov
gs
repz
pop
inc
adc
and
les
imul
mov
cmp
or
ds
mov
je
dec
outsl
jo
sub
sbb
js
cwtl
addr16
xchg
mov
or
xchg
pop
pop
test
dec
fs
jge
push
js
or
xlat
push
fistpll
psubb
inc
push
test
sub
add
inc
pop
pop
mov
int
mov
pop
es
cld
adc
ficoms
adcl
add
pop
ret
inc
xchg
and
jns
lea
xchg
cmc
in
push
or
int3
fidivs
mov
sbb
lret
scas
loopne
pop
sbb
adc
notl
mov
xor
dec
int3
fistps
mov
push
add
in
loop
push
push
test
mov
xlat
dec
mov
cmp
dec
or
dec
add
icebp
jecxz
xor
sarb
mov
mov
das
andl
dec
xor
sub
sahf
mov
aaa
fwait
sub
pop
fwait
mov
xchg
into
xor
ret
or
push
pop
mov
mov
inc
cmpsb
sbb
fs
repz
sbb
push
lret
mov
mov
ljmp
out
jae
xor
dec
and
pop
sub
loopne
lea
xchg
jmp
pop
dec
test
pushf
adc
push
int
jae
pop
pushf
sub
aas
sbb
shlb
mov
and
sbbb
popf
pop
and
aaa
mov
push
sbbl
pop
sbb
outsb
add
lret
xchg
lock
jb
test
mov
xchg
arpl
xchg
lcall
jns
mov
mov
out
adc
cmp
stc
orl
pushf
lret
stos
pop
push
mov
sti
jnp
in
jmp
cmc
pop
sub
insb
int3
les
hlt
mov
cmp
xchg
dec
repnz
fs
mov
subb
sarl
jnp
xchg
add
out
pop
fdivl
jae
sub
repnz
rcrb
pop
ret
sub
scas
adc
es
fsubl
cmc
shll
push
aad
addr16
stos
cmp
andb
iret
pop
pop
xchg
cwtl
push
ret
movsb
dec
mov
or
ss
outsl
lds
mov
xor
sbb
sti
test
in
xor
repnz
lock
or
decb
mov
dec
mov
push
cmpsl
add
xor
xchg
cwtl
pop
lret
icebp
int3
cs
out
pushf
pop
adc
mov
add
cmp
mov
mov
inc
sbbl
jp
out
push
push
dec
inc
jg
jmp
test
cmp
mov
mov
xchg
cmp
xchg
adc
sub
das
fimull
mov
xchg
cwtl
ret
cmp
cmc
dec
enter
popa
or
fdivrl
subl
fsubrl
push
inc
loopne
sub
dec
cmp
enter
int3
mov
in
in
int
leave
sti
imul
and
inc
imul
push
jp
daa
cmpsb
cs
jmp
dec
mov
push
divl
mov
repz
fmulp
scas
inc
pop
pop
mov
fsubrs
push
mov
adc
mov
xor
push
pop
les
xor
inc
lock
and
cltd
pop
cltd
sub
mov
sbb
loop
imul
das
pop
stos
rcrl
aad
push
cmp
insb
sub
sub
icebp
fsub
add
repz
xchg
ljmp
scas
push
inc
in
fmull
mov
popa
ret
je
mov
sbb
xor
xchg
pop
cmpsb
dec
push
mov
sub
sbb
mov
cmp
enter
ret
cli
cltd
cwtl
shlb
lds
xlat
out
jns
mov
fnstenv
inc
nop
stos
cmp
push
sbb
les
adc
into
mov
dec
push
jmp
aad
and
outsl
jp
cmp
jecxz
sub
dec
xchg
mov
mov
push
cmpsb
push
cmp
jmp
sub
adc
jne
mov
lds
in
pop
in
xchg
push
cmpsb
xor
jmp
insb
fsubr
mov
ds
sbb
sahf
add
sub
mov
mov
mov
push
mov
or
ja
and
mov
shl
ds
inc
stos
and
mov
stc
or
jl
shlb
stc
es
loop
jns
mov
cld
lods
rorb
pop
xchg
mov
mov
cmpsb
mov
cmp
adc
sbb
push
and
ljmp
ficomps
and
fcomps
sub
push
push
inc
das
ficoms
cld
lret
pop
insl
mov
fnstcw
movsl
sub
pop
and
and
stos
xlat
in
sbb
sub
pop
hlt
in
adc
das
pop
sub
popa
in
xchg
jnp
jns
sub
dec
mov
int
jno
sahf
rcl
cmpsl
jecxz
dec
daa
push
xchg
mov
jmp
cmp
out
addl
xor
xchg
movsl
in
test
sahf
mov
out
cmp
push
mov
pop
fistpll
xchg
repz
fcoml
int3
ret
sbb
mov
cwtl
xchg
ja
fs
pop
or
icebp
sahf
imul
sub
lret
or
aam
ljmp
lea
xchg
adc
int
mov
adc
in
lock
xchg
fmull
add
jge
mov
cmp
insb
lcall
std
mov
pusha
xor
or
int3
mov
mov
jb
movsl
sub
mov
sti
push
mov
mov
adc
or
xor
loop
push
mov
aas
mov
pop
cmp
fmuls
cmp
cmp
adc
repz
cmp
sbb
aam
jno
sbb
pop
mov
mov
inc
int
push
movsb
add
sbb
out
mov
rcrl
xchg
inc
jae
push
mov
mov
inc
or
leave
sahf
movsb
mov
in
in
cmp
test
js
and
loope
out
in
stos
add
xchg
pop
sub
int
push
ret
es
mov
mov
inc
fwait
or
mov
test
ljmp
push
mov
cmp
pushf
int
sahf
cmp
cmp
pushf
jl
xchg
lds
imul
jae
std
xor
mov
gs
movsl
lcall
jecxz
cld
xchg
sahf
roll
cli
mov
jecxz
xchg
mov
scas
jnp
jge
xlat
add
pusha
add
mov
aas
pop
jne
pop
jb
in
add
mov
icebp
lods
hlt
dec
lahf
mov
mov
cwtl
sub
clc
ficoml
hlt
xchg
push
push
fsubr
mov
mov
repz
mov
bound
jns
cmpsb
inc
xor
fistps
jge
cwtl
lea
lods
inc
add
xchg
hlt
push
mov
jno
dec
inc
or
ja
mov
outsb
adc
jl
es
mov
dec
sub
dec
mov
jb
xor
inc
and
leave
stos
in
or
xchg
lods
inc
mov
test
les
xor
push
lcall
stos
hlt
mov
js
jl
bnd
std
add
dec
xor
es
inc
cli
jb
mov
pop
cmp
xor
std
test
add
in
jg
inc
jp
into
incl
inc
push
dec
insl
pop
hlt
xchg
cmp
jnp
mov
test
loop
mov
dec
bound
aas
mov
or
ja
aam
rorl
push
xor
fsubrp
mov
jg
fbstp
add
jo
mov
dec
dec
cltd
inc
in
and
and
aad
loop
cmpsl
mov
add
push
pop
out
into
inc
add
and
add
cmp
outsl
mov
and
nop
add
sub
inc
adc
xor
cmp
mov
sbb
pop
lret
jb
push
xor
int3
out
ss
xchg
dec
shll
adc
outsl
int
or
jp,pn
mov
aas
cld
xchg
mov
sub
clc
pop
mov
fsubl
sub
cmpsl
lods
xchg
rcl
or
mov
lea
pop
pop
fldl
mov
es
xchg
mov
outsb
push
pop
xchg
sub
mov
sub
outsl
pop
pop
sub
push
sbb
adc
mov
test
ret
dec
pop
fcmovnb
push
loopne
cmp
test
mov
jl
inc
pop
dec
sarl
sbb
add
int
push
sarl
fnstsw
xchg
mov
cli
shll
mov
orb
fstps
sbb
out
aas
jo
jns
repnz
nop
or
hlt
pop
lds
test
ret
dec
es
mov
adc
xor
dec
mov
push
scas
mov
in
std
pushf
fs
mov
mov
lret
mov
sbb
in
xor
sbb
push
test
mov
add
cmpsb
sub
cmpsb
iret
cmp
mov
out
stos
stos
jbe
insl
ret
lock
xlat
adc
outsb
aam
adc
inc
sub
xor
lret
mov
nop
push
push
sub
jbe
mov
pusha
inc
repnz
decl
pushf
sub
dec
and
stos
sbb
mov
sahf
cmc
jl
std
add
push
int
and
add
into
sbb
jge
data16
cmc
cmp
cmp
es
push
mov
femms
aam
scas
shlb
insl
scas
xchg
add
mov
rorb
pop
inc
ret
xor
mov
mov
push
xchg
xchg
mov
and
fstl
ja
inc
adc
lock
aaa
xchg
mov
add
dec
imul
sub
xor
dec
jmp
mov
insb
push
push
mov
and
mov
cmp
ja
js
add
rorl
mov
out
jns
call
cmp
test
xchg
popa
test
pop
mov
ds
cmpl
in
pop
cltd
xor
adc
mov
es
iret
in
lret
sti
aaa
aaa
pop
mov
pop
lods
test
ljmp
sbb
sub
mov
dec
std
pop
push
iret
std
subl
sub
mov
outsl
scas
fmuls
xchg
xor
rcr
stos
mov
sbb
in
cli
inc
jp
leave
into
sbb
sahf
lahf
lea
dec
jmp
mov
ds
rcrb
mov
jns
add
inc
mov
jo
push
data16
add
stos
adc
push
mov
dec
jne
sti
mov
cld
mov
mov
data16
lret
arpl
clc
je
enter
cmc
jbe
ljmp
xor
fstpl
sbb
jo
aam
adc
and
gs
in
cltd
push
xchg
pop
fwait
pusha
mov
inc
xor
xchg
xchg
in
daa
gs
inc
mov
push
mov
xor
push
mov
xchg
repz
aam
popf
addr16
mov
and
sbbb
loope
add
insb
leave
scas
dec
dec
or
ret
lods
or
jo
xchg
xchg
add
sti
loop
out
push
test
mov
fldt
test
inc
mov
sbb
hlt
movsl
gs
pop
sbb
push
adc
cmp
out
cmp
xchg
add
mov
filds
mov
dec
lret
mov
sbb
cmc
cs
mov
fdivs
pop
pop
mov
lock
in
scas
dec
cmpsl
mov
cltd
xor
aad
inc
je
mov
push
cmpsl
popa
in
clc
cwtl
jge
jnp
mov
mov
addr16
pop
xor
cmc
or
mov
jg
cltd
xor
ljmp
xor
ret
or
pushf
cmp
mov
mov
mov
inc
dec
icebp
sbb
into
pop
xchg
fwait
mov
orl
jb
call
or
cwtl
in
cli
in
dec
add
movsb
xchg
in
inc
xchg
dec
xchg
mov
push
fs
and
loopne
xor
cmp
loope
fs
cmc
and
in
mov
xchg
orl
aas
outsl
cs
adcb
fidivrs
dec
lods
dec
inc
test
mov
mov
rorb
push
mov
das
push
dec
mov
cwtl
in
ret
or
stos
clc
push
js
loop
or
pop
pop
clc
leave
repnz
stos
dec
test
fnstcw
imul
add
in
sahf
sbb
lret
cs
xor
cmp
loopne
lret
pop
repz
jns
fisttpll
pop
xchg
das
ljmp
mov
xor
dec
inc
lret
nop
fdivs
pop
add
daa
dec
jns
inc
or
mov
inc
mov
jne
jae
lret
mov
adcb
mov
adc
sbb
add
xchg
in
cmc
lea
mov
mov
fisttps
fstl
outsb
mov
add
repnz
add
push
or
and
push
cmp
xor
pop
xchg
sar
pop
lcall
mov
or
addr16
push
pop
jb
mov
int3
cmp
push
outsb
cli
cmp
cmp
dec
in
adc
or
mov
int
mov
loope
mov
add
pop
mov
add
clc
push
adc
icebp
cwtl
inc
mov
cmpl
idivb
inc
cmp
fistl
push
dec
push
shlb
cltd
sahf
neg
lods
adc
jns
idivb
std
dec
push
xor
lcall
and
mov
subl
pop
mov
test
sub
mov
popf
sbb
mov
pop
enter
call
push
scas
xor
std
xchg
mov
pop
sbb
inc
into
lock
mov
xchg
mov
inc
mov
loope
xchg
mov
push
into
pop
sub
aas
sub
adc
mov
lods
movsl
in
lock
sbb
stos
aam
or
xchg
cmp
and
in
cmpsb
les
out
add
mov
adc
jmp
adc
ljmp
imul
push
push
sbb
add
mov
or
mov
jns
mov
sbb
jmp
sbb
test
mov
xchg
fwait
neg
inc
xor
sbb
xor
sbb
cmp
xchg
prefetcht2
push
lret
push
cmc
popf
adc
or
inc
jp
cli
pop
in
cld
ret
and
lds
jp
jmp
dec
add
imul
ficompl
mov
hlt
ss
fdivrs
push
sbb
vpsrad
imul
cmc
fistl
and
sbb
mov
dec
xchg
cmpb
test
sbb
les
rcl
mulb
xlat
aam
sbb
mov
mov
cmpsb
arpl
push
jmp
jae
mov
xchg
mov
leave
imul
and
stos
xor
and
jne
pop
mov
and
inc
adcb
jns
cmp
adc
mov
imul
mov
dec
cmp
std
adc
cli
jbe
mov
jae
cmpsb
cltd
sub
jle
hlt
dec
jmp
pop
stos
je
scas
mov
push
insl
std
nop
jl
or
leave
and
pusha
mov
push
jb
les
call
ss
fdivrs
cwtl
xor
xchg
daa
sub
rcll
pop
mov
shl
sub
std
out
mov
pushf
sub
push
in
pop
sub
cmp
icebp
aaa
insl
inc
wrmsr
push
jp
ret
addr16
popa
jae
popf
in
jo
ljmp
pop
lahf
and
out
dec
loop
xchg
ret
shll
daa
cwtl
lea
cmp
test
js
xchg
or
add
xor
push
cmpsl
and
arpl
fidivl
test
adc
inc
pop
or
mov
das
or
mov
xor
sbb
pop
movsb
inc
mov
or
pop
in
test
inc
fisubl
mov
inc
jnp
adc
mov
dec
add
bound
xlat
imul
jg
pop
adc
out
pop
dec
fidivl
es
sbb
inc
mov
pushf
mov
inc
dec
mov
mov
pop
pop
sub
xchg
repnz
xchg
sahf
popa
lret
mov
scas
hlt
cmpsb
xchg
mov
test
nop
mov
dec
cmp
jg
sbb
xchg
imul
pop
fiadds
or
jne
sbb
dec
add
push
ret
faddl
inc
inc
lock
pop
bound
adc
notl
stos
cli
jns
cmp
lds
dec
cmp
andl
jno
ss
cwtl
push
sbb
cmpsl
ss
cmpsb
mov
loopne
cmpsl
jmp
adc
lea
push
cs
cmp
jnp
adc
ret
aas
mov
in
inc
jnp
bnd
pop
inc
mov
in
push
cli
loop
pop
jle
push
jge
add
adcb
andl
out
sub
cmp
sbb
hlt
mov
jg
jle
sbb
adc
bswap
mov
lahf
push
orl
sub
cmp
jle
pop
out
and
je
ret
jmp
das
sbbl
mov
je
cmpsl
xchg
jnp
stc
shll
add
push
jo
popf
adc
push
cmp
bndldx
cmpsb
pusha
call
ficoms
xor
cmp
gs
pop
pop
loop
mov
or
subl
mov
lods
test
push
lea
stos
or
in
or
cmpsb
mov
push
sti
dec
push
xor
pop
jl
loop
push
in
cmp
push
loope
mov
fisttpll
out
ret
mov
enter
cmpps
push
daa
add
sbb
ffree
les
mov
rorb
push
push
lock
mov
cmc
pop
add
shrb
add
shlb
jbe
sub
dec
into
mov
shl
sub
stos
incb
lods
cmc
out
cmp
ja
cmp
repnz
test
mov
mov
mov
pushf
add
xchg
mov
fs
int3
idiv
incb
sbb
push
sub
dec
mov
dec
ficoms
xor
mov
call
int3
sub
xchg
bound
inc
outsl
jnp
xchg
dec
aas
arpl
shll
jo
sub
je
sbb
pop
mov
pop
pushf
dec
push
add
lsl
push
lcall
notb
fistps
mov
iret
push
xlat
dec
cmc
dec
push
xchg
jp
testb
movsb
insl
out
ret
cmp
jb
sbb
xchg
je
or
les
push
mov
sarl
fbld
std
dec
or
inc
aaa
movsb
ret
or
mov
stc
inc
repnz
jge
cwtl
in
mov
mov
movsl
insl
ret
xor
inc
enter
xor
mov
fiaddl
push
mov
ret
inc
xchg
and
pop
or
test
clc
into
sbb
pushf
int
in
imul
and
push
adc
ljmp
add
repnz
lret
jmp
data16
cmp
pop
lods
add
data16
mov
mov
push
push
cmp
repz
cmp
mov
addr16
push
mov
int
cmp
imull
loop
fstps
fistl
test
mov
mov
xchg
xor
les
lret
divb
movsb
xchg
adc
insl
mov
dec
movsl
mov
mov
insl
and
mov
enter
dec
ja
xor
xor
fistps
out
out
sarb
add
and
add
xchg
inc
subb
mov
jae
xor
or
hlt
test
adc
pop
sub
pop
pop
outsb
leave
and
test
jl
mull
or
sub
popa
push
and
mov
mov
dec
push
mov
aam
bound
stos
testl
inc
pop
pop
mov
push
jne
push
dec
and
stos
dec
fsub
repnz
dec
rcr
fsubp
inc
lahf
mov
sub
aaa
xchg
movsb
dec
dec
mov
out
popf
insl
adc
pop
xor
and
xchg
lea
or
push
fcoms
pop
call
aad
mov
out
out
in
push
mov
jg
fwait
mov
lahf
in
push
ljmp
daa
push
shl
packsswb
and
and
xor
add
push
test
pushf
mov
into
adc
or
jns
sub
mov
cmc
dec
dec
inc
pop
cmpsb
shll
and
jb
inc
adc
mov
pop
adc
rorl
or
mov
hlt
out
pop
xorl
cmpsl
fwait
add
sub
fs
inc
hlt
inc
insb
repnz
pushf
in
sbb
push
orb
jae
jo
cltd
out
jo
sub
xchg
cmp
mov
pushf
ret
xchg
mov
mov
inc
push
add
sbb
clc
xchg
mov
xlat
es
cmp
xchg
xchg
add
arpl
clc
push
push
pop
pop
aaa
insl
mov
lods
jp
lods
lds
fxam
adc
cmp
rorb
inc
enter
mov
jg
mov
pushf
push
test
out
xor
sub
jp
mov
hlt
push
mov
mov
insb
stos
arpl
add
cmp
popf
mov
stos
or
test
int3
dec
cmp
xor
or
repnz
jmp
add
sub
mov
out
jb
add
int
xor
loopne
rolb
xor
int3
jle
sub
sbbl
push
das
aas
divl
fisttpl
adc
dec
enter
outsl
mov
inc
jns
adc
cmp
aas
mov
movsb
adc
adc
inc
or
nop
mov
jno
add
sbb
les
shl
pop
lods
jmp
repnz
jle
xchg
jmp
stos
daa
gs
in
dec
daa
dec
dec
daa
fbld
fcomps
lods
rorl
cmp
insb
out
fdivrl
ja
mov
fdivs
rcrl
xor
cmpb
mov
xor
xchg
xchg
push
or
xor
cld
push
mov
roll
sbb
lods
pop
in
mov
sti
jmp
cmc
js
sbb
sbb
mov
lret
scas
insl
dec
aaa
mov
test
cmpsb
pop
loope
push
aam
xchg
inc
stos
push
movsb
inc
adc
stc
xchg
and
cmp
lods
or
out
lock
cwtl
mov
push
out
ljmp
leave
add
xchg
xchg
cmp
xor
cmpsl
cmpsb
mov
xor
insl
xchg
stos
lds
inc
cli
gs
cli
xchg
add
add
xor
bound
je
adc
dec
std
and
jmp
adc
ret
std
movsb
movsb
outsl
nop
jne
jo
enter
jp
imul
xor
xchg
enter
out
sbb
mov
scas
sub
inc
pop
repnz
cmp
imul
pop
das
or
mov
adc
xlat
fsubrl
jnp
add
test
dec
add
push
js
xor
xchg
sbb
mov
mov
cmp
scas
jb
jmp
lret
aaa
and
enter
push
sub
lods
inc
addr16
push
sbb
xchg
fs
pop
sub
mov
or
ja
jne
addr16
xchg
push
jl
dec
mov
jg
aaa
or
mov
les
cli
imulb
ror
xor
ror
imul
sub
ficoms
or
sbb
popf
and
sub
jle
aad
mov
out
cmp
xchg
fxch
push
fsts
mov
pop
out
insl
fadd
jne
sahf
clc
outsl
pop
cmp
lret
gs
sbb
and
push
dec
and
sub
xor
ds
push
mov
pushf
mov
repnz
jecxz
lods
xchg
es
or
push
stos
mov
adc
sti
push
sti
mov
fcmovne
pop
dec
out
cmpl
roll
loopne
prefetchnta
push
loopne
ret
and
and
pop
add
mov
lret
inc
mov
jg
nop
xor
jg
cmp
adc
dec
les
gs
fisubl
adc
push
cmp
js
in
aaa
sbb
cmp
call
outsl
fbstp
push
lret
lock
cmp
fstps
push
cs
repnz
stos
out
imul
stos
xlat
mov
or
xchg
push
fistl
sbb
jge
inc
add
test
xlat
dec
test
aam
in
or
jno
sub
sbb
dec
stos
call
int3
adc
xor
in
dec
lock
inc
cltd
dec
out
or
mov
jp
xchg
push
incb
add
dec
pop
sahf
lret
pop
xor
push
aam
in
mov
pop
jp
dec
popf
pop
xchg
stc
mov
mov
ret
insb
lds
adc
xchg
popf
stc
cs
fs
mov
icebp
mov
iret
jnp
inc
mov
pop
aam
dec
and
shlw
lahf
bound
cmpsb
insb
sarl
sub
addr16
clc
std
pop
cmp
or
mov
outsl
pop
xchg
mov
sub
or
fsts
xchg
rcrl
sub
shl
imul
cmpsb
mov
sbb
aad
in
insl
add
test
out
pushf
and
push
mov
icebp
jae
or
fldz
or
out
sbb
imul
or
gs
sbb
mov
fadds
inc
repz
in
inc
inc
mov
loopne
fistpll
lods
out
or
daa
adc
lahf
jmp
push
mov
repnz
mov
push
cmpsb
ja
lods
add
lea
mov
hlt
push
add
arpl
xchg
mov
lds
sub
stos
aaa
mov
loope
inc
in
mov
jecxz
xor
out
inc
in
adc
andb
mov
icebp
psadbw
jg
pop
adc
leave
fs
mov
and
insl
lods
rorb
aad
add
test
imul
scas
xor
scas
jg
lock
mov
fstpl
aam
stc
jg
xor
mov
enter
fsubrs
mov
aad
imul
aam
push
popa
lcall
hlt
xlat
call
int
call
jmp
mov
mov
and
lret
push
faddp
mov
rcll
pop
dec
rcl
mov
mov
jne
stos
sub
clc
pop
or
pop
pop
mov
adc
scas
push
pop
outsb
pop
in
push
xor
cmp
sub
fstpl
jmp
call
lret
xor
xor
xor
test
lea
mov
inc
aam
push
mov
mov
movsl
add
adc
mov
mov
insl
adc
les
xor
mov
ficoml
or
mov
mov
sub
movsl
fmul
mov
cmp
and
ss
call
lcall
jg
gs
and
mov
fmul
bound
jne
xchg
inc
inc
sbb
xor
xorb
and
cmp
dec
add
pop
negl
js
jle
pop
test
aad
dec
lds
dec
ror
or
adcl
sub
ds
jle
xorl
hlt
ljmp
sub
mov
les
mov
js
sbb
stc
dec
xchg
shll
rcl
dec
jno
xor
std
push
push
cwtd
pop
mov
ret
incl
add
jp
adc
pop
subb
out
dec
das
push
aad
int
jle
out
push
sub
mulb
mov
lods
sbb
rcll
cmp
imul
mov
addr16
rcrb
mov
mov
and
xchg
mov
adc
push
and
lret
mov
cmp
mov
jo
push
je
inc
xchg
iret
jmp
sub
das
xchg
imul
sbb
dec
xchg
ret
mov
inc
inc
imul
hlt
mov
aaa
dec
xchg
andb
test
inc
fnstcw
mov
stos
pop
or
popa
push
mov
adc
push
push
add
lock
test
sub
add
add
cmp
pop
into
adc
shl
adc
xor
in
les
pop
mov
cmp
dec
in
mov
sbb
mov
or
xchg
mov
xor
dec
ret
add
loopne
inc
popf
dec
mov
adc
or
pushf
mov
shlb
xor
push
orb
out
xorl
mov
loope
cmp
nop
scas
dec
xor
xor
sbb
and
shl
dec
aaa
xchg
push
daa
jmp
subl
add
sub
cmc
dec
mov
movsb
jecxz
xchg
sub
sub
cltd
mov
xor
lods
adc
stc
mov
pop
jg
push
or
ds
bound
inc
jno
inc
jp
push
iret
pop
aam
lods
xchg
pop
add
inc
mov
testl
cmp
sub
adc
sub
jae
or
out
jae
mov
dec
cmp
shrl
aaa
cmp
xchg
insb
mov
mov
and
xorl
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
jmp
push
movb
movsl
mov
cs
ftst
jp
addb
push
sbb
aas
xchg
xchg
ret
push
cmc
cs
dec
fstp
mov
jg
in
divb
mov
mov
lock
jge
aam
aad
movsl
aas
mov
ud2
sbb
pop
xchg
shll
mov
mov
adc
sti
jbe
lahf
fcoml
mov
sbb
imul
sbb
pop
stos
fnsave
leave
mov
or
xchg
sbb
cwtl
in
sub
xchg
or
push
popf
leave
sbb
xor
or
sub
scas
xchg
push
loope
adc
nop
pushf
mov
addr16
test
push
out
or
mov
xor
enter
xchg
push
test
pusha
mov
xor
ficompl
inc
dec
test
subl
mov
adc
jo
jb
cli
and
pop
in
repnz
sbb
adc
push
and
test
mov
int3
pop
iret
xchg
jo
nop
jecxz
mov
rolb
pop
and
lods
mov
inc
rcr
ds
into
dec
lahf
ror
mov
xchg
call
dec
loopne
leave
jle
adc
out
dec
sbb
shll
sti
jo
add
mov
scas
sahf
push
adc
push
movsl
arpl
inc
fwait
cwtl
mov
push
push
repnz
dec
in
aas
aas
mov
mov
sbb
dec
sbb
xor
pop
cmp
adc
mov
nop
clc
ss
jne
cs
das
clc
push
mov
pusha
lret
adc
xchg
adc
jo
pushf
lret
sub
out
cs
std
mov
inc
lods
jb
std
push
inc
pop
mov
fnstsw
mov
add
mov
shr
sbb
cmpsb
sbb
sbb
jns
push
jge
sbb
pop
mov
dec
mov
push
out
mov
push
pop
sub
push
pop
mov
mov
imul
call
cmpsb
out
nop
ss
and
addb
cmc
imul
mov
outsl
loope
sbb
sbb
movsb
outsl
out
test
jo
pop
pop
subl
xchg
ds
jb
repz
pop
pop
adcl
xchg
fdivl
dec
push
fmuls
out
and
bound
stc
adcl
sbb
aaa
test
push
jg
std
cmp
mov
mov
jno
push
mov
inc
push
sub
or
xor
jae
inc
xlat
push
js
xchg
cmp
jmp
out
loopne
cld
mov
cltd
out
lods
dec
addr16
daa
sar
pop
test
dec
out
fsubp
xor
in
xchg
jne
and
add
sub
loop
adc
dec
xchg
jge
adc
inc
add
je
pop
pop
add
pop
push
pminsw
sub
std
pop
mov
outsl
mov
icebp
mov
test
dec
xor
cmp
fs
add
xchg
popf
xchg
nop
dec
sti
mov
xor
jmp
lret
sbb
fmuls
mov
lahf
inc
add
repz
add
pop
lock
dec
aam
xor
insl
int
addr16
jmp
lods
jb
enter
xchg
outsl
pusha
pop
mov
xchg
lahf
add
sub
dec
or
dec
dec
push
dec
jg
std
scas
aas
adc
cmpsb
pop
mov
mov
aas
sbbl
mov
into
lea
popw
aad
mov
add
cmc
movsl
push
add
cltd
pop
or
enter
xlat
test
leave
cmp
sbb
subl
mov
scas
dec
std
lcall
mov
jno
sub
adc
out
mov
out
mov
dec
call
mov
dec
pop
xchg
xor
test
mov
push
xor
int
lods
cmc
in
loop
das
lock
push
nop
mov
cmp
clc
xlat
imul
insb
and
xor
jne
imul
pop
push
repnz
jle
push
movl
aam
add
jl
or
filds
aas
aad
jno
popa
mov
imul
mov
mov
xchg
lahf
cmp
xchg
test
push
mov
ret
movsb
jp
or
mov
ficompl
sbb
imul
xchg
data16
mov
push
adc
pop
div
push
pop
xchg
dec
int
dec
shll
sar
jbe
xor
je
or
lret
shlb
mov
push
cmp
inc
cmp
in
hlt
sub
or
or
cmpsl
repnz
enter
mov
nop
mov
cmc
cmp
jbe
je
sti
sbb
cmp
mov
push
arpl
loope
inc
lahf
outsb
das
jle
not
mov
fmuls
nop
sahf
into
adc
lods
pop
mov
lret
in
out
inc
xor
subl
mov
movsb
adc
lock
and
push
scas
fwait
or
mov
ja
fsts
cmp
xor
pop
mov
pushf
jne
cld
jo
lea
pop
mull
cmp
cmp
push
inc
ss
arpl
or
mov
es
sbbb
es
mov
jb
out
mov
xor
insl
int
sub
out
mov
sub
ljmp
std
mov
jge
adc
pop
jmp
xor
and
jg
push
clc
clc
clc
or
inc
add
jb
iret
mov
dec
into
mov
leave
loope
movsl
push
bound
or
into
mov
es
push
es
or
rcrl
jnp
xchg
mov
imul
daa
movsl
xchg
cmp
call
cmpsb
idivb
jne
dec
les
push
mov
divb
ss
mov
or
in
ss
sbb
cltd
out
repnz
cltd
adc
enter
sub
mov
decb
pop
mov
mov
or
shlb
cmp
push
xor
leave
push
xlat
cwtl
xchg
mov
push
mov
add
xchg
aad
and
les
cli
xchg
add
outsb
xchg
or
fldl
cmp
lret
mov
pop
mov
xchg
mov
lret
cs
mov
dec
test
mov
das
push
loop
cltd
pop
push
stos
test
push
jp
jmp
icebp
aaa
pop
mov
sbb
and
push
dec
pop
mov
or
xor
push
insl
cmpb
icebp
mov
mull
dec
mov
and
jo
loopne
das
dec
cmc
cltd
xchg
bound
dec
out
push
cli
repz
decl
pop
inc
jno
sbb
std
sub
pop
popa
rcll
xchg
cmp
dec
ss
mov
lds
inc
arpl
jb
loopne
mov
mov
jge
dec
mov
mov
shlb
test
rcr
stos
dec
bound
popa
mov
or
or
les
jg
lods
mov
ljmp
xchg
mov
cmc
mov
add
xchg
scas
stos
cs
int3
push
rorl
pop
jo
inc
lret
inc
jns
sbb
add
inc
push
sbbb
adc
lds
push
jge
jp
inc
or
pop
fisttpl
pop
cs
test
test
lods
pop
push
aam
lea
stos
call
add
mov
int
cld
rolb
outsb
inc
mov
pop
pop
jne
out
test
cmp
cmp
gs
add
sbb
arpl
mov
cmpsb
pop
dec
adc
push
pop
clc
mov
nop
aas
xor
shlb
int
xlat
pop
neg
inc
sbb
je
fisttpl
sub
mov
inc
mov
inc
sub
fstpl
outsb
push
inc
mov
ja
jbe
insb
pop
je
stc
or
std
pmulhuw
cmp
mov
scas
loopne
jl
jae
sub
mov
cmp
stos
pusha
in
adc
mov
scas
insb
mov
sbb
and
xorb
jge
fisubrl
dec
cmp
jle
sbb
mov
dec
pop
jge
jecxz
xchg
fbstp
xchg
inc
sbb
mov
icebp
pop
iret
mov
es
mov
loopne
mov
dec
shll
mov
ret
sub
xchg
dec
or
shlb
xor
inc
rorl
aas
or
sarb
sub
or
pop
cld
jne
inc
xchg
incb
add
sahf
inc
insb
into
bound
push
into
sub
lret
mov
ficoms
push
xchg
inc
jp
mov
sub
dec
xor
ds
mov
jnp
dec
pop
scas
mov
dec
xchg
std
aad
cld
cmp
mov
dec
je
clc
mov
cltd
movsl
ret
and
xchg
insb
xor
jge
jnp
dec
int
cmc
cld
adc
clc
adc
mov
sti
push
adc
aaa
dec
in
mov
jns
dec
dec
inc
pusha
mov
mov
push
and
jmp
sub
mov
cmp
subl
push
jb
testb
insl
cmp
mov
or
mov
or
pop
mov
lret
andl
sbb
push
insl
insl
mov
sub
fucomp
mov
loopne
scas
mov
pop
pop
fisubrl
pop
jno
pop
scas
mov
inc
mov
add
outsb
pop
loope
dec
xchg
jne
in
sbb
mov
mov
jb
xor
cmp
xlat
leave
adc
dec
or
jecxz
adc
sub
pusha
mov
dec
adc
into
mov
xchg
mov
movsb
lahf
repnz
sub
mov
add
jnp
negl
pushf
orl
lea
cli
fs
cmc
jp
mov
inc
sub
cmp
das
ret
fimull
adc
add
push
sub
addr16
mov
cmp
and
add
sbb
cmpsb
sbb
sti
adc
dec
ds
bound
xchg
push
add
jo
mov
mov
lahf
sbb
js
jb,pn
mov
sti
mov
sub
addr16
mov
sbbl
jmp
push
mov
add
mov
gs
dec
mov
aaa
imul
jo
es
stc
xlat
sub
shrl
mov
repnz
and
sbb
out
cmpsb
mov
stos
cltd
mov
push
call
in
ds
nop
sbb
inc
scas
add
in
mov
jo
xchg
lret
in
add
and
mov
mov
push
lds
sbb
adc
xchg
jb
jle
inc
pop
pop
and
lods
push
xchg
cwtl
jge
adc
loope
mov
fdivrp
mov
jp
add
dec
jae
addl
jp
arpl
xor
jl
xchg
push
add
movsb
test
jns
sti
enter
mov
xchg
lcall
es
cli
std
lock
xchg
int3
lods
imul
cmp
adc
adc
mov
mov
jecxz
imul
test
adc
testb
test
or
mov
cmpsb
jecxz
pusha
pop
popa
pop
mov
pop
les
dec
jp
repnz
push
add
dec
outsb
dec
jae
scas
pop
mov
push
sbb
adc
les
sub
cltd
pop
pusha
sbb
mov
lea
ljmp
std
jns
fcomi
xchg
cmc
out
insb
sbb
inc
dec
dec
je
cwtl
jns
inc
add
xchg
jae
outsb
sbb
std
xchg
xchg
cmp
dec
cmp
jnp
cmp
in
dec
and
shll
stos
sub
or
fdiv
repz
addr16
popf
adc
cmpsb
fildll
add
aad
cs
sahf
sub
xor
mov
mov
lds
jne
jns
xor
test
or
cld
test
fwait
insl
repz
idiv
lea
shl
xchg
push
loop
in
icebp
or
subb
std
cs
push
repz
sbb
pushl
enter
out
adc
push
jno
xchg
push
addb
jb
cltd
fs
cmpsb
lea
aas
xor
xor
mov
sub
and
popa
clc
push
or
sub
test
mov
cli
imul
mov
cs
sbbl
xor
ljmp
add
cltd
adc
mov
sub
test
xchg
and
sbb
push
adc
xor
fstp
inc
roll
inc
xorl
jne
push
push
push
icebp
frstor
adc
adc
inc
xor
sbb
xor
mov
stos
jae
cmp
sbb
mov
adc
push
lret
pusha
nop
loop
movups
push
cli
popf
js
sbb
out
or
cmpsb
pusha
cmp
cmp
cli
mov
jge
lret
mov
pusha
into
scas
fxch
vmovshdup
pop
scas
push
stos
push
xchg
push
mov
shll
fstps
mov
mov
rcrb
fbld
pop
imul
loop
adc
lahf
out
arpl
lock
and
pop
cmp
push
je
je
cltd
fisubs
sbb
jmp
cli
movsb
xchg
pop
stos
hlt
leave
xor
xchg
cmpsb
lods
push
or
and
and
sub
mov
sub
push
aam
mov
loopne
sahf
loope
movsl
iret
xor
stc
out
add
cmp
xor
repz
idivl
es
xchg
lds
add
jmp
push
mov
cld
ret
jg
mov
das
dec
jbe
or
les
ds
mov
aad
sbb
aad
sub
imul
test
add
xor
stos
push
pop
ljmp
xchg
mov
movsb
jl
mov
out
and
in
sahf
push
cli
mov
pop
and
xchg
xchg
fldl
dec
fwait
cmp
das
pusha
sub
cmp
mov
fnsave
adc
cwtl
aam
add
add
nop
push
jo
cld
sub
test
in
pop
ja
push
xor
push
sbb
inc
aaa
add
divb
cli
in
jnp
inc
pop
jo
lods
mov
movb
lret
jl
xchg
loope
stc
adc
aam
and
mov
test
xchg
test
or
lea
sbb
scas
inc
mov
dec
pop
sahf
pusha
adc
pop
insb
xlat
fs
add
idivb
pop
loope
xchg
push
pop
adcb
inc
push
mov
jp
fcmovne
xchg
out
loopne
in
mov
aam
dec
test
sahf
icebp
cmp
jb
or
in
stc
push
cmp
stc
jns,pt
jb
cmc
dec
push
and
sbb
pop
mov
sub
cmp
cmp
loopne
xor
inc
adc
or
lock
jo
rclb
dec
cmpsb
and
jns
xchg
xchg
mov
bound
fnstcw
push
push
aas
pushf
adc
movsb
dec
xor
ss
mov
push
repz
mov
scas
and
inc
cmc
mov
bound
cli
lret
inc
mov
test
int3
push
sub
loop
or
push
mov
or
inc
pop
popa
mov
cmp
mov
fcomi
or
inc
pop
into
add
into
mov
insl
fldt
imul
xor
aas
ret
jmp
add
inc
jecxz
cmp
out
negb
cmpsl
hlt
pop
fcoml
sbb
jl,pt
shll
pop
jae
push
mov
sub
jg
sub
add
stos
les
add
inc
mov
stos
push
sub
add
mov
push
imul
and
sbb
outsb
inc
pop
and
test
jno
jbe
aam
int3
hlt
loop
in
and
cld
inc
inc
add
inc
jno
sbbb
inc
or
sti
xor
mov
or
add
sub
cld
jl
in
bound
fwait
dec
jno
dec
pop
cltd
inc
int3
loopne
add
jbe
sbb
mov
cmp
divb
xor
outsb
scas
add
and
aaa
lcall
rcrb
loope
and
pop
inc
enter
out
shrl
cmp
sbb
xchg
int
mov
push
int3
mov
dec
xchg
xchg
es
cmp
sub
fbstp
popf
fildl
xor
and
out
lcall
dec
rcr
in
movsl
in
cmp
stc
sbb
in
pop
cmp
pop
iret
pop
fmul
jno
xor
pushf
mov
sbb
test
add
shll
jle
mov
xor
pushl
arpl
imul
or
shr
loopne
das
pop
stc
lea
fbstp
ja
enter
mov
into
cmp
lock
sbb
mov
shlb
pushf
pop
in
or
and
cmp
jne
pop
stc
daa
icebp
xlat
nop
mov
xchg
jno
xchg
mov
mov
cmp
call
out
mov
das
sbb
out
pop
inc
gs
arpl
sub
in
mov
jge
out
insl
cmpsb
push
adc
mov
cld
ret
jmp
out
shl
in
gs
repnz
dec
mov
push
out
shll
xchg
shrl
xchg
adc
adc
pushf
sub
mov
popa
xchg
inc
inc
mov
jb
xor
push
mov
or
imul
inc
fstps
mov
dec
xchg
out
cltd
mov
mov
sbb
lds
dec
lret
mov
and
pop
hlt
into
jnp
int
aaa
out
xchg
pop
cmpl
mov
insl
sbb
fistpll
xchg
push
jne
xor
ja
jne
aas
pop
icebp
jb
loop,pn
nop
jb
int3
push
pop
cmc
xchg
pusha
rclb
or
mov
mov
aaa
sub
mov
push
and
add
in
jne
pop
jp
fucomp
cltd
sub
mov
clc
add
push
mov
pop
xlat
in
jbe
stos
mov
jg
mov
hlt
outsl
xchg
es
mov
rcr
into
inc
dec
adc
addr16
outsb
cmc
nop
cmp
fstpt
movsl
sub
mov
jmp
and
dec
fsts
insb
sbb
push
cmp
push
out
leave
or
jae
call
or
shr
pop
into
jle
push
adc
xor
stos
fdivrs
in
nop
inc
shll
sbb
rcll
mov
test
aaa
aam
push
call
push
or
fs
lds
ret
sbb
inc
dec
repz
jg
xor
adc
push
ficoml
sbb
add
dec
out
leave
andb
cli
or
movsb
hlt
shlb
or
notl
bound
scas
sub
adc
xchg
repnz
pop
dec
jae
decl
mov
mov
sbb
test
ljmp
sbb
xor
fidivrl
sbb
popa
arpl
enter
pop
and
popf
inc
lods
ja
dec
mov
loop
dec
jg
jg
dec
cmpsb
jmp
xchg
hlt
jo
ja
mov
popf
jb
sub
xchg
repnz
popa
popf
pushf
aas
push
repnz
push
jo
jne
mov
in
js
inc
gs
mov
dec
ret
mov
push
popa
sub
dec
lds
jb
fiadds
push
gs
jl
lods
mov
xchg
mov
push
add
adc
scas
and
sbb
sbbl
push
imul
das
inc
sbb
daa
int
push
push
push
mov
imul
hlt
xchg
test
aaa
add
push
out
mov
cmc
jg
lahf
stc
pop
into
in
add
sub
sbb
bnd
xchg
mov
pop
sarb
fs
pop
inc
sbb
mov
adc
xchg
pop
sub
dec
inc
sahf
sbb
mov
lahf
lahf
xor
cld
mov
mov
adc
fcoml
mov
push
mov
sub
dec
movsb
and
jmp
xchg
adc
pop
scas
pusha
mov
inc
lret
sub
xorb
ret
push
imul
fcmove
loope
add
add
mov
inc
dec
dec
incb
arpl
dec
ret
out
pop
shlb
outsl
in
mov
mov
jns
loop
push
xchg
sbb
or
cmc
mov
pushf
cltd
xchg
push
add
xchg
ss
push
dec
stc
sbb
das
push
shlb
fdivs
or
sbb
jmp
leave
xor
fcoml
iret
jecxz
sar
mov
popf
mov
jmp
xchg
lock
adc
push
xchg
je
push
mov
or
add
jmp
pop
lret
jno
cmpsb
jb
fs
out
lahf
lods
sub
sbb
rcll
ret
xor
loope
and
addr16
sub
dec
lea
sub
adc
stos
shl
imul
cld
dec
cmp
sbb
gs
insl
mov
subb
lea
xor
mov
and
mov
pop
push
mov
lcall
add
call
xor
in
cmp
dec
inc
imul
xchg
imul
stos
add
je
xchg
and
xor
pop
pusha
bound
cmp
add
dec
aas
push
adc
imul
lods
sub
add
or
dec
or
and
jb
mov
sarl
or
jae
or
pop
popa
imulb
fs
rolb
nop
xchg
mov
int3
test
cmpsl
shl
lds
pushf
loopne
jmp
fsubrs
cmpsb
sub
jns
mov
jbe
cmp
addr16
faddp
add
sub
adc
xchg
imul
add
sub
les
roll
aad
inc
scas
dec
mov
sub
jge
popf
xor
jnp
jae
push
idivb
scas
rcll
adc
add
sub
xor
xchg
lahf
movsb
fidivrl
jg
lahf
lock
dec
cltd
jp
hlt
cld
roll
insb
push
aaa
into
and
mov
incl
or
cmp
jmp
outsb
cld
pop
aam
orl
mov
pop
stos
or
and
imul
hlt
mov
lods
adc
pop
inc
test
jmp
mov
pushf
mov
idiv
mov
out
in
jecxz
sub
lret
mov
pop
mov
jle
aas
ja
xor
ret
aaa
imul
das
fs
test
fs
cltd
mov
or
cmpsb
pop
add
pop
jnp
insw
movsb
mov
dec
clc
cli
push
outsb
jg
and
cld
iret
or
lock
mov
pusha
test
ds
cmp
daa
inc
loope
mov
push
sub
fiaddl
cli
ljmp
lret
loopne
mov
inc
mov
out
fstl
aad
shll
ss
call
add
add
xor
cmpl
dec
pop
outsl
fists
dec
sbb
fbstp
jge
mov
nop
push
push
dec
fisubl
cmpl
lret
mov
jnp
cltd
iret
jb
int
subl
jo
and
out
outsl
pop
popa
sbbb
add
dec
int
fildll
and
or
xor
popf
popf
add
loop
add
jmp
jno
sbb
and
cld
sti
sarb
aaa
cld
xor
push
dec
dec
dec
dec
pop
fs
xchg
aad
push
xlat
pop
outsl
pop
mov
or
jecxz
cmp
xchg
jge
sti
xor
scas
sbb
pop
inc
loopne
aam
test
shrl
mov
loop
push
mov
dec
push
adc
call
dec
add
dec
iret
ficoml
hlt
outsl
and
jns,pt
sub
lock
mov
cmp
xor
dec
test
jge
jle
mov
push
add
cmp
push
ret
data16
xlat
mov
xchg
xchg
sbb
pop
mov
push
add
lods
dec
add
mov
ret
sub
pop
rorl
stos
pop
or
fnstenv
mov
stos
clc
xchg
fistps
in
lods
pop
pop
imul
and
pop
in
cwtl
xor
mov
mov
test
subl
dec
leave
jbe
adc
mov
sub
adc
arpl
lret
mov
add
lret
movsb
out
add
xchg
sub
sub
pop
dec
cmp
adc
mov
loope
xchg
fsts
inc
outsl
xor
test
mov
jb
push
ljmp
mov
imul
lds
ljmp
fisttps
ret
adc
ret
adc
mov
cmpsl
cli
outsb
jmp
cs
sarl
or
outsl
aad
out
in
xlat
fdivrl
ret
mov
icebp
add
cmp
mov
ficompl
mov
push
jns
pop
fildll
jg
or
popf
jno
push
rorb
in
and
popf
dec
xor
inc
cmpsl
fldl
adc
jne
xor
inc
lcall
jns
sbb
imul
loop
cmp
ljmp
es
fdivr
ret
mov
das
repz
mov
adcb
imul
les
movsl
push
dec
mov
push
add
mov
loope
xchg
cwtl
mov
add
pop
sub
push
sub
imul
mov
ljmp
bound
or
fsubrs
es
jle
push
pushf
addr16
pop
lods
fdiv
jp
in
inc
repz
or
movsb
push
jg
cmp
filds
scas
inc
pop
adc
ljmp
sbb
insb
ficomps
mov
pop
cmp
mov
mov
and
lret
call
ret
hlt
sub
xor
pop
mov
xor
bound
xchg
push
cwtl
jp
popl
shlb
sbb
aaa
xchg
sub
push
and
jp
cmp
dec
xchg
std
push
fdivrp
fsubrl
push
pop
and
push
mov
loope
bound
add
xor
and
jle
fdivrl
mov
addb
sub
sbb
in
jge
sbb
lock
xor
pop
push
dec
mov
ret
leave
mov
add
cmpsl
jp
test
xorb
xor
stos
fsub
imul
xor
sub
push
mov
mov
or
fnstcw
add
dec
mov
xchg
pop
aas
sbb
lds
mov
dec
imul
imul
lret
mov
lods
jns
and
in
jmp
loopne
out
out
rcll
lcall
ret
data16
pop
inc
repz
or
mov
cmp
cmpsl
xor
jb
cmp
xchg
or
loope
adc
sahf
mov
dec
cwtl
stc
decb
enter
cmp
pop
lock
movsl
push
pop
push
ljmp
stc
insl
pushf
fdivs
mov
and
dec
adc
dec
stos
adc
sbb
stos
leave
cmp
mov
stos
aaa
jle
pop
xchg
mov
xchg
or
lret
fbld
xchg
loop
sbb
jl
inc
fnstcw
jmp
daa
cs
jg
iret
int3
lcall
and
push
dec
leave
mov
mov
pusha
imul
aas
shrl
aad
aad
int3
or
pop
call
xchg
xchg
inc
push
dec
xchg
shrb
dec
fdivrs
sbbb
add
js
popa
pop
les
nop
lock
and
pop
lods
xchg
dec
jmp
stc
jl
in
inc
lods
or
mov
imul
push
pop
cmp
fistl
fldt
add
insl
outsb
xor
test
and
outsb
clc
subl
jbe
jecxz
lret
jo
adc
mov
mov
notb
aad
mov
dec
sbb
pop
xchg
enter
mov
sub
das
lahf
aam
mov
push
movb
mov
mov
iret
sbb
testl
je
dec
stos
ret
nop
repz
shll
cld
mov
loop
test
jnp
in
popf
in
add
xchg
mov
rcrb
rcr
test
rcr
shll
mov
in
out
hlt
gs
jp
test
add
push
cld
xor
in
fimull
scas
sub
xchg
jo
mov
xchg
popa
les
rorl
ljmp
xchg
adc
int
fcmovb
sar
int3
or
and
mov
addr16
cmp
int
mov
push
dec
insb
daa
jns
aad
adc
cmp
rcrb
inc
scas
sbb
aas
fcompl
add
and
jnp
sbb
ret
xchg
cmp
pop
pop
test
stos
or
scas
arpl
lret
xchg
popf
insb
fxch
out
in
out
addr16
pop
mov
test
je
in
push
jmp
jmp
pop
or
and
add
movsb
popa
xchg
mov
addr16
xor
in
pop
push
test
aaa
mov
push
into
daa
or
lods
lds
stc
mov
adc
push
sub
sbbb
xchg
sub
pop
pop
cmpsb
inc
imul
and
pop
lds
inc
mov
test
cmc
test
jnp
shlb
sub
fcomp
sbb
hlt
dec
adc
pop
xor
dec
jbe,pn
inc
adc
test
jnp
jno
loope
pusha
cmp
imul
cltd
ret
loopne
out
addr16
xchg
test
push
insl
or
push
pop
cmp
xchg
sbb
mov
inc
ror
dec
mov
ja
adc
in
fnstsw
js
and
addb
lahf
or
fwait
adc
mov
dec
xlat
xor
push
outsl
xlat
call
adcl
mov
and
std
lods
cmpsl
movsb
push
dec
inc
mov
lcall
cmp
sarl
imul
sbb
mov
aam
mov
xor
fists
push
push
in
and
call
or
and
adc
fadds
addr16
sbb
jge
and
cltd
push
negb
cmp
push
or
repnz
mov
out
scas
or
jl
repz
push
jl
mov
lea
in
lock
pop
mov
or
jb
faddl
inc
xchg
ljmp
or
sub
lds
push
das
jmp
pusha
std
popf
mov
shlb
pop
xor
dec
jnp
imul
aaa
sub
pop
imul
es
stos
in
xor
test
xchg
hlt
cmc
add
into
xchg
jle
es
lahf
xchg
xor
mov
mov
mov
jp
mov
mov
pusha
test
fs
xchg
ret
mov
arpl
pop
rcl
or
jle
adc
jecxz
jo
xor
sub
mov
or
pop
push
add
dec
call
call
add
hlt
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
jmp
adc
incb
cmpsb
xchg
or
lahf
cmp
mov
divps
aad
std
daa
rolb
stos
popa
inc
lret
push
sbb
jle
xor
add
jno
out
sub
movsl
inc
adc
popf
xchg
sahf
and
lds
xor
in
xchg
cs
push
and
loopne
mov
mov
test
xor
test
push
and
push
cmp
repz
add
sub
inc
jmp
dec
lret
jo
inc
roll
shr
or
dec
insl
hlt
dec
ss
pop
loope
xchg
out
pop
mov
sahf
xchg
xchg
jge
push
adc
xor
fisubs
mov
arpl
dec
in
mov
mov
dec
and
push
aam
add
jnp
jecxz
aad
push
sti
xor
divb
cmp
cld
and
loopne
lods
into
push
inc
ljmp
cmp
imul
dec
addr16
cmp
mov
or
inc
jmp
stc
test
mov
clc
or
or
test
ror
fdivrl
cmp
es
bnd
out
sbb
jb
jo
repnz
inc
cs
dec
cmpsb
sub
mov
in
ljmp
add
xchg
xchg
cmp
pop
mov
out
sub
push
and
shll
jne
mov
fmul
mov
outsb
mov
leave
pop
inc
or
fcomip
add
and
cli
shrl
out
nop
jge
jbe
add
xor
xchg
jecxz
pop
leave
mov
xchg
icebp
sbbl
jg
aam
push
in
xchg
push
inc
popa
out
stos
loope
aad
data16
push
inc
cmp
jne
in
add
adc
mov
outsl
repz
and
scas
je
or
aam
imull
lods
pop
lahf
arpl
mov
bound
stos
jmp
fbld
in
jno
pop
xor
mov
aam
cwtl
mov
sub
sbb
push
jo
lods
xchg
push
lea
fdivr
dec
xchg
addr16
adc
pop
adcb
adc
inc
pop
test
lret
fdivs
mov
mov
and
mov
aad
call
push
icebp
adc
repnz
cmp
mov
fadd
jge
xchg
and
popfw
ss
cmp
xor
dec
ss
adc
push
xor
popf
ffree
xchg
ljmp
cmp
pop
lds
inc
in
mov
adc
push
je
in
outsl
sbb
icebp
jp
mov
push
or
aad
insb
gs
rclb
jmp
xor
repnz
mov
sub
and
int3
jl
mull
mov
xchg
jbe
scas
cmp
fwait
add
loopne
push
fnsave
cld
test
repz
fsubs
jns
adc
loopne
cmp
pop
sub
dec
cmp
inc
test
in
lea
or
addr16
in
sbb
sbb
rcll
sub
or
adc
iret
inc
xor
add
movsl
mov
sahf
mov
call
ds
cmp
cmp
or
ds
and
push
cmpsb
cmpsl
call
and
mov
stos
or
outsb
das
lahf
and
or
mov
daa
shr
mov
leave
sbb
repnz
jp
gs
dec
push
aam
push
addr16
mov
adc
pop
and
mov
push
cmpsb
xchg
imull
mov
rorb
mov
or
movsl
push
iret
mov
pop
test
push
mov
inc
dec
pop
in
je
sbb
adc
xor
add
les
mov
lods
jl
dec
pop
jbe
cli
frstor
test
jnp
fimuls
sub
cmpsb
daa
xor
jbe
adc
movb
sbb
sub
shlb
pop
ja
mov
cmp
xchg
dec
sub
sbb
loopne
sti
or
cmp
lock
sub
jp
popa
add
popf
or
adc
in
lea
div
xchg
or
jo
call
mov
aaa
xor
aas
out
and
jge
mov
pop
sub
pop
pusha
lds
add
sbb
mov
mov
cmp
enter
enter
sti
add
xlat
lds
aad
lea
push
cmp
or
jge
sbb
out
rcll
cs
mov
mov
xchg
add
cmp
out
sahf
sub
push
dec
out
and
cmp
sub
inc
mov
jae
mov
daa
or
lcall
gs
push
or
es
adc
lahf
mov
mov
std
jle
add
adc
ret
add
rcrb
rorb
cmp
and
push
outsl
lods
andb
xor
push
pop
push
mov
sti
sub
test
ljmp
rclb
hlt
mov
mov
or
aam
pop
imul
inc
and
sub
sahf
mov
add
inc
mov
popa
in
xlat
mov
add
sarb
dec
xor
js
and
cmp
gs
jl
insl
inc
pop
xorb
cmc
insb
loopne
xor
pusha
divb
adc
sub
and
jg
into
pop
mov
aaa
adc
cld
add
push
mov
cmovbe
ficompl
ljmp
xchg
add
sahf
outsl
and
sbb
add
or
mov
fimuls
dec
ja
jecxz
xorl
mov
mov
dec
dec
cltd
rcrl
repnz
dec
push
mov
add
sbb
fldlg2
mov
call
std
ret
mov
fisttpl
xor
push
jo
stc
mov
outsb
jp
sub
out
pusha
mov
popa
jp
nop
cmpsl
lods
mov
bound
or
jl
add
loope
mov
iret
in
mov
cmp
lcall
adcl
out
cmpsb
or
cld
add
ss
jbe
mov
loopne
pop
mov
lcall
aam
inc
mov
dec
mov
pop
mov
mov
cmp
rcrb
xor
nop
inc
test
cltd
outsl
lret
idivb
arpl
sbb
rcrl
fidivs
orb
xchg
jl
mov
jbe
push
xchg
cmpsl
fidivrs
xor
push
imul
lea
fldl
loopnew
or
cmp
xor
lods
outsl
aad
adc
dec
pushf
xor
loopne
dec
test
dec
bound
js
out
notb
fnstenv
sbb
sbb
or
cmp
inc
pop
and
adcb
adcl
cmp
mov
or
or
mov
jnp
mov
mov
sbb
mov
ret
ret
dec
pop
rcll
inc
lret
and
test
xlat
lahf
mov
test
mov
push
mov
cwtl
shlb
jno
jecxz
cmc
jecxz
lods
jns
call
jecxz
push
into
rclb
push
outsb
adc
psllq
pop
jno
jns
ret
push
push
lea
mov
xchg
mov
out
push
inc
aaa
push
sub
xchg
lock
xchg
or
jae
gs
dec
jl
jo
imul
lret
ret
cs
popa
add
jg
mov
jp
dec
xor
shl
lea
dec
mov
outsb
dec
mov
xchg
aad
mov
mov
das
push
stos
mov
scas
mov
or
jne
aad
imul
pop
pop
repnz
xchg
jb
and
iret
shl
sub
nop
lock
lcall
in
sub
into
rcrl
dec
add
inc
js
addr16
mov
jae
ficoml
test
loopne
jb
das
pop
sbb
addl
lret
sbb
sbb
or
dec
add
xchg
pop
mov
cmp
les
cmpb
jl
mov
lret
or
mov
fwait
jnp
and
dec
int3
jmp
push
adc
push
mov
dec
mov
test
or
out
popa
sbb
jbe
shlb
cmp
call
iret
push
daa
xchg
lahf
subb
hlt
sahf
divl
nop
addr16
cltd
mov
sti
dec
sbb
fldenv
mov
dec
jb
movsl
mov
nop
aad
jno
pop
hlt
daa
sub
std
sub
cwtl
xchg
mov
js
dec
mov
or
in
or
pop
push
and
pop
inc
stc
cwtl
sahf
ss
xor
enter
fs
and
xor
jnp
iret
stc
and
xor
lea
xor
push
inc
xchg
xorb
mov
mov
xor
push
lea
push
sbb
mov
jae
div
or
cmpsl
popa
and
sub
pop
mov
jo
dec
addb
jmp
iret
sbb
lods
push
mov
in
lahf
aad
xchg
je
cmp
cmp
add
fiadds
cmp
std
push
sub
in
std
out
mov
jb
xchg
jecxz
std
xor
sarb
ret
jg
push
sbb
orl
fwait
test
ja
add
loopne
jge
xor
lods
mov
out
pop
push
adc
jmp
xlat
gs
in
xchg
andl
movl
dec
gs
subl
or
test
outsl
and
lahf
and
stc
push
test
mov
inc
sub
adc
jbe
lcall
xchg
mov
jg
sub
fs
call
nop
inc
nop
mov
mov
cmp
mov
inc
inc
inc
dec
mov
jmp
fnstsw
loopne
push
inc
mov
pop
and
cmpsl
mov
mov
jl
sarl
addr16
mov
bnd
or
test
mov
adc
adc
scas
out
insb
xchg
xchg
mov
xor
shrl
mov
insl
arpl
lret
jb
mov
jle
inc
jecxz
addr16
xor
mov
jmp
mov
lea
lcall
int
sbb
iret
dec
ss
stc
addr16
jge
and
sub
inc
mov
insb
les
mov
pop
xor
mov
test
xor
call
jbe
dec
cmpsb
sbb
clc
or
fbstp
lret
inc
and
mov
jge
test
cmp
outsb
mov
push
push
jg
pop
jmp
lea
out
sub
mov
loopne
cltd
sub
add
pop
inc
test
pop
leave
xor
pop
jl
inc
jp
repz
and
mov
mov
bound
stos
mov
mov
lock
cld
dec
sar
popf
mov
out
dec
xchg
roll
mov
hlt
adc
test
adcl
push
lods
fsubs
jae
movsl
stos
cmpsl
out
imul
lahf
mov
pop
adc
jmp
mov
pusha
aad
xchg
push
ja
and
icebp
testl
jnp
xchg
mov
lea
cmp
adc
pop
test
mov
mov
xorb
aaa
daa
sahf
ret
insb
sbb
add
xchg
xchg
push
sbb
adc
test
mov
add
dec
rcr
shll
lret
push
sub
test
sub
mov
adc
sbb
pop
loopne
aas
mov
fstpl
shlb
pop
jge
xor
xchg
or
fcom
scas
int3
flds
in
and
ds
popa
movb
ss
lds
adc
push
fcmovnu
mov
sub
dec
out
dec
adc
daa
mov
xchg
pop
add
icebp
and
fadds
push
cld
jg
std
ret
and
pop
cmp
shl
jmp
mov
loope
loopnew
ret
mov
mov
das
adc
rcrl
push
clc
out
rorb
je
dec
je
cmc
sbb
jg
dec
rcll
orl
test
loopne
in
test
sub
sbb
pop
pop
mov
subb
mov
fsts
out
das
int3
insb
inc
cmp
scas
jp
rclb
sub
les
cmp
adc
leave
jns
cmp
mov
pop
jl
cmc
mov
pop
push
daa
mov
dec
xchg
ficomps
dec
inc
jp
mov
xchg
mov
aaa
lea
xchg
movb
imul
dec
xchg
les
jns
jge
shll
mov
and
stos
jge
sub
mov
mov
aas
pop
out
pop
inc
in
arpl
dec
xor
dec
movl
mov
movq
and
mov
cmpsb
mov
pop
and
dec
sub
mov
push
sub
push
or
aaa
mov
push
sahf
or
stos
jmp
cmp
mov
adc
mov
mov
push
inc
in
js
loop
mov
add
sub
sbb
cli
rcr
faddp
jnp
cld
ss
pop
mov
push
dec
adc
ja
jle
jmp
fwait
icebp
inc
scas
xlat
int3
icebp
out
dec
mov
jecxz
iret
ret
mov
dec
fisttpll
iret
jge
mov
mov
jbe
adcl
adc
out
outsb
into
lcall
sti
sbbl
inc
mov
xor
lcall
out
ja
cmp
sub
adc
or
pushf
pop
in
dec
das
cmp
or
out
and
test
adc
xchg
repz
imul
dec
mov
dec
jbe
jmp
mov
xor
mov
sub
xchg
adc
lret
jbe
cld
stos
jnp
jno
lods
ret
movsb
xchg
stc
mov
push
jle
adc
mov
jne
test
mov
and
mov
mov
xchg
es
xchg
rclb
sbb
fs
xor
mov
mov
rcll
push
adc
xlat
sub
dec
test
lock
mov
addr16
jmp
cmpl
xor
ja
sahf
mov
xor
fldenv
mov
imul
fstpl
loopne
jg
int
add
lds
adc
xchg
push
mov
sahf
sti
cmp
jle
sti
subb
test
push
mov
adc
pop
bound
mov
cmp
xor
fildl
sub
mov
push
clc
cmp
rcrl
rcr
add
dec
xchg
ret
orl
shrb
loope
adc
xor
xchg
xchg
repnz
mov
daa
push
daa
adc
fbstp
cmp
inc
jnp
test
mov
js
xchg
mov
mov
lahf
cs
in
and
sbb
jmp
out
insb
or
add
ret
pop
stos
ret
xchg
mov
data16
stos
lds
xor
jno
sahf
mov
dec
js
pop
rol
jg
call
cmp
pop
mov
jle
and
das
push
jge
out
sub
cmp
outsl
push
test
int3
and
jmp
adc
outsl
xchg
xlat
lds
mov
sbb
dec
jae
and
jb
mov
fstl
push
inc
pop
cltd
cmp
insl
xchg
scas
stos
or
lret
and
icebp
jae
cmp
shll
inc
loopne
or
addr16
testb
lods
jecxz
fildl
jns
and
cmp
orl
pop
mov
orb
inc
xchg
pop
dec
fstpl
xchg
popl
and
popa
ja
and
std
pop
sbb
sub
test
or
adcb
test
push
lcall
lods
sub
cmp
push
dec
sub
or
cld
aam
sarb
inc
xchg
cmp
xchg
and
jo
das
cmpb
pop
dec
sti
popa
sbbl
xor
push
call
push
lret
adc
xor
mov
mov
push
pop
sbb
fwait
push
mov
and
xchg
push
cld
test
adc
sbb
or
xchg
jg
leave
xlat
inc
orb
add
leave
leave
inc
cmp
stos
pushf
scas
stc
and
jns
pusha
push
and
fistpll
or
xchg
out
sarl
call
loope
popa
ds
mov
xor
pushf
mov
inc
and
sti
test
cmpsb
das
mov
pop
dec
fbstp
imul
hlt
dec
fwait
jge
call
sbb
mov
cmp
mov
and
xchg
cwtl
fistps
arpl
pop
sti
and
add
pop
xor
xor
push
dec
sub
out
mov
sbb
das
sub
and
test
andl
add
ds
mov
cli
mov
xchg
add
jl
movb
push
frstor
sub
dec
and
mov
iret
jmp
push
cmp
loop
adc
shl
cmp
mov
out
or
mov
jecxz
dec
loopne
mov
jmp
sub
adc
lea
mov
add
pop
jecxz
aaa
mov
mov
or
loopne
das
mov
sahf
and
ret
shl
sbb
sbb
add
in
nop
stos
ret
mov
xor
mov
jns
out
cli
pop
sbb
lret
daa
sbb
cmpb
cwtl
movsl
dec
jo
lea
jne
xchg
loop
lret
nop
je
jecxz
push
mov
mov
adc
push
pop
jbe
test
testb
dec
movb
push
ret
xorb
dec
push
testb
repz
in
add
lahf
sub
jns
adc
pop
mov
sub
ja
xor
fistl
subb
pop
test
test
or
xchg
jo
rcrb
mov
adc
xchg
cmp
ret
jno
xlat
or
sti
or
loop
fsubs
test
push
add
pop
jle
xlat
into
repz
shlb
xor
outsb
mov
das
push
scas
int3
push
cmp
stc
mov
or
stos
mov
fs
fiaddl
ss
loopne
xchg
insl
dec
dec
adc
out
insb
or
xchg
jge
pushf
mov
call
mov
in
je
mov
xchg
ja
jle
mov
mov
inc
rcll
inc
sbb
sub
dec
aam
mov
or
sbb
pop
mov
decl
sbb
ja
cmp
push
and
mov
mov
xchg
add
int3
jbe
inc
xchg
sub
inc
push
and
cmp
icebp
inc
push
cwtl
xchg
mov
cmp
and
cli
jb
push
push
cmp
lret
ljmp
mov
xchg
imul
sbb
jns
xor
lret
sbb
sbb
and
call
xchg
push
daa
add
and
out
loope
fs
mov
ret
loop
adc
insb
xchg
sub
mov
jns
or
stos
imul
enter
jmp
fiadds
rolb
test
inc
and
sub
jbe
jp
push
cmp
jp
sbb
addr16
dec
xchg
jbe
and
lea
and
movsb
pop
jge
js
add
jne,pn
pop
pop
mov
mov
mov
cmpsl
cmp
insb
ljmp
mov
ljmp
xlat
jmp
fidivs
inc
add
mov
sbb
movd
aad
popf
aad
in
mov
pop
fldenv
call
iret
scas
xchg
inc
in
in
cmp
inc
sarl
jmp
sbb
inc
ja
aaa
push
sbb
mov
stc
dec
fcmovb
cmp
in
out
mov
adc
push
mov
add
mov
push
repz
rcl
data16
jns
pop
pop
xorl
xchg
jmp
lods
out
std
cli
xchg
stos
sbb
xlat
inc
int
mov
add
lods
or
inc
add
jle
add
out
push
xchg
push
popa
loope
enter
dec
test
das
xbegin
gs
mov
xor
lock
aaa
cs
xor
cltd
add
scas
fwait
jo
add
mov
mov
and
push
enter
dec
or
mov
std
dec
and
fyl2xp1
aad
mov
mov
pop
test
jmp
out
sub
leave
xor
imulb
popa
dec
sbb
cltd
js
cmp
or
push
mov
movsl
rcr
push
test
ss
add
push
mov
mov
sbb
dec
jmp
pop
and
lcall
cmc
dec
push
xor
cld
xor
pop
add
dec
popl
jo
insb
in
test
or
mov
mov
push
push
ja
les
fsubr
rorb
dec
jp
loopne
imul
jg
addl
scas
out
nop
push
add
xor
xchg
xchg
dec
or
imulb
std
xchg
out
inc
outsl
andb
negl
ljmp
popa
pop
jge
je
popf
icebp
test
inc
test
push
sub
dec
mov
sub
out
es
mov
out
cmp
pushf
jne
mov
aaa
fidivl
inc
mov
hlt
jne
mov
test
push
outsb
add
mov
lahf
jecxz
aam
mov
cmp
int
fists
arpl
cmp
xchg
ja
lcall
jbe
fsubp
adc
daa
arpl
adc
in
test
test
adcl
dec
scas
xor
int
pop
push
imull
lahf
test
add
jmp
shlb
inc
xchg
dec
xchg
lret
push
leave
xor
dec
and
hlt
fsubr
imul
lahf
inc
mov
xchg
int
cmp
mov
test
and
mov
lcall
mov
push
add
test
pop
push
inc
outsl
and
les
mov
mov
fs
xchg
faddl
outsl
lods
shr
cltd
and
repnz
aaa
inc
lods
test
xchg
xchg
adc
mov
cmp
xor
lods
inc
mov
sbb
adc
orb
lret
pop
ss
fisttps
cmp
cmp
and
out
clc
mov
push
xchg
filds
mov
mov
test
sub
jg
int
add
jns
lahf
inc
jmp
mov
aas
stc
arpl
xor
mov
jp
les
push
ret
xor
push
push
ds
adc
pusha
shll
arpl
pop
fcompl
adc
mov
xchg
xor
rsqrtps
push
xchg
imul
cmp
cli
lret
mov
sbb
or
inc
daa
sub
mov
xor
xor
stos
inc
cmp
std
mov
cs
lods
jns
pop
clc
bound
std
cmpsl
jmp
xchg
cmp
mov
adcl
test
int
insb
stos
and
in
in
cmp
xor
outsl
cld
and
lds
bound
pop
jne
mov
enter
push
imul
aaa
jbe
mov
dec
pop
fsts
jp
inc
dec
jle
adc
mov
mov
push
xor
sarl
mov
jo
push
xchg
je
xor
stc
lcall
xor
and
outsb
push
and
cmp
stc
js
fwait
mov
push
cmp
in
popf
dec
dec
test
pusha
inc
mov
pop
push
add
sub
mov
pop
or
adc
jg
sub
xlat
dec
test
pop
stos
xchg
xchg
inc
mov
in
push
out
push
popf
daa
je
push
sbb
je
push
hlt
jl
push
cmp
mov
mov
cmpsl
mov
fildl
mov
xor
sbb
mov
add
aas
cmp
imull
ljmp
lret
andl
js,pn
add
shll
imul
aas
adc
dec
sahf
daa
outsb
int3
add
lods
xlat
jb
les
andl
sahf
insl
add
inc
inc
enter
rcr
mov
aam
les
mov
int
sub
mov
lods
daa
xchg
nop
mov
test
sub
mov
cli
test
lea
cltd
mov
int
xchg
inc
and
insb
pop
inc
cmp
mov
test
cltd
dec
cld
shrl
cli
test
xchg
out
pop
mov
cmp
mov
hlt
adc
gs
and
loop
or
pop
jne
mov
popf
adc
add
divps
mov
jl
ljmp
pop
mov
or
es
sub
js
sub
out
aad
out
pop
dec
sahf
and
js
xor
sbb
out
shlb
les
jmp
popa
inc
rorl
cmpps
std
inc
lods
mov
cmp
jns
jne
push
call
xchg
xor
leave
cmpsb
imul
lock
leave
xlat
clc
mov
insl
xor
mov
xlat
jecxz
cwtl
sub
int3
xor
push
cwtl
adc
push
push
outsl
mov
rol
fldl
sub
in
sti
loop
adc
test
out
das
stc
hlt
jo
out
cmp
push
fwait
cmc
fstl
mov
insb
push
jae
hlt
adc
pop
lock
ljmp
movsl
or
jge
mov
cwtl
mov
cmp
dec
xchg
push
in
sub
rcrb
pusha
pop
push
xor
mov
inc
addl
pop
lea
jo
pop
outsl
bound
stos
add
sbb
psubsw
repz
jo
push
test
das
out
loope
outsl
int
dec
call
mov
mov
loope
mov
or
inc
and
in
push
xchg
adc
mov
inc
fbld
clc
cwtl
xor
dec
cmpb
adcb
and
mov
xorl
cmp
call
fsts
shlb
pop
or
adc
in
shrb
arpl
je
or
mov
dec
xor
pop
cmp
pop
cltd
xchg
or
xor
pop
dec
mov
sbb
out
out
xor
imul
pop
test
sbb
outsb
adc
sub
and
pop
sbb
lock
test
bound
into
aad
push
cmp
xchg
sarl
xor
mov
adc
in
cmp
pop
and
loopne
loope
ret
inc
mov
test
mov
clc
imul
jae
fistl
pop
or
scas
push
mov
or
push
hlt
cmp
divb
xor
std
in
pop
mov
push
mov
sarl
xchg
xchg
scas
adc
sti
jp
test
or
push
push
in
and
dec
ds
shlb
hlt
out
xchg
xlat
mov
daa
xor
cmpsl
cltd
fiadds
inc
bound
neg
ss
sbb
int
or
jne
jp
lret
movsb
xchg
mov
ficomps
adc
or
pop
xchg
mov
mov
xchg
imul
or
daa
mov
les
pop
mov
xor
cwtl
fisubrs
test
int3
sbb
mov
adc
or
jb
adc
mov
insl
out
cmc
inc
and
repnz
in
movsl
aam
xor
movsl
sub
dec
dec
in
and
mov
je
xchg
dec
and
adc
psubsb
movsb
and
popa
je
inc
insl
add
popa
cmp
ja
loopne
shlb
cmp
dec
ret
cmc
pop
ret
stos
sbb
out
lcall
and
clc
xchg
and
inc
stos
sub
inc
stos
stos
ror
inc
aam
popf
mov
add
sub
lcall
add
hlt
or
cld
inc
push
add
push
iret
jnp
mov
cwtl
in
and
dec
add
test
test
call
ret
jle
fldenv
shl
xchg
jb
xlat
das
stos
sub
cs
lret
ret
xor
jno
sti
pop
inc
jno
mov
ja
sub
gs
mov
movsb
mov
out
hlt
mov
cld
mov
cli
je
adc
add
lods
jne
and
xor
pusha
jbe
add
in
nop
adc
fistl
addr16
jne
mov
iret
repnz
push
hlt
jle
mov
sahf
dec
lahf
cmp
add
cmp
push
mov
jg
lds
pop
stos
scas
into
and
mov
inc
adc
mov
aad
inc
pop
scas
hlt
mov
cmp
shr
jp
lock
adc
push
mov
push
leave
test
jge
shll
test
les
stos
pop
das
mov
push
pop
push
and
fsubs
pop
shll
andl
mov
pop
dec
xchg
cwtl
sub
mul
adc
push
mov
mov
sbb
loopne
xor
call
adc
test
xor
mov
push
jecxz
ret
lahf
sti
shlb
icebp
cli
jns
or
into
insb
xlat
shl
mov
bound
push
repnz
addr16
cmp
insb
add
cmp
mov
movsb
mov
test
cmp
fcomps
mov
xchg
enter
mov
add
mov
movsl
fnsave
lahf
and
cmp
cmp
and
jecxz
and
imul
mov
jmp
or
jo
cmp
popf
add
xor
add
in
negb
je
les
sbb
outsb
call
pop
bound
movsb
inc
push
or
inc
cmpsl
inc
lret
jo
sbb
xor
stos
das
lock
aas
sarl
into
es
mov
rorl
add
ds
xor
shrl
adc
xor
fiaddl
mov
sub
xchg
inc
movsl
pop
mov
ret
rol
inc
xlat
lcall
pop
sub
enter
push
sti
mov
insb
ficompl
cmp
inc
repz
push
and
adc
xchg
jnp
inc
add
into
icebp
lock
push
int
or
fdivl
les
xchg
mov
fcmovu
out
ss
and
cld
or
mov
inc
jb
mov
pop
pop
out
hlt
pop
cltd
xchg
out
dec
cmc
xor
dec
push
inc
ja
stc
mov
jl
sti
test
push
push
pop
pusha
add
pop
inc
cmp
arpl
mov
dec
nop
sarl
sbb
fsts
popf
mov
lds
add
icebp
addr16
test
mov
fsubrs
mov
push
push
out
sub
jmp
pop
jmp
in
jno
mov
das
adc
xor
test
insb
repz
mov
pop
jns
and
fcmovbe
push
mov
les
jle
xor
sbb
daa
adc
jne
stos
scas
lret
xor
daa
and
push
call
fs
outsb
or
rcl
ja
xchg
out
jp
clc
xchg
sub
inc
je
pop
fs
inc
mov
inc
jae
xchg
inc
xchg
mov
mov
mov
xor
dec
sbb
mov
cltd
aad
ret
ret
fucomp
xor
or
or
inc
mov
loopne
sbb
movsl
cs
repz
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
push
adc
push
movzbl
sbb
push
movl
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
lea
mov
movl
lea
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
mov
sbb
xor
add
mov
xor
or
mov
and
mov
mov
movzbl
adc
mov
add
and
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
call
mov
dec
mov
jmp
mov
movzwl
xor
mov
xor
andl
mov
addl
add
movl
cmp
je
mov
movl
jmp
mov
mov
adc
mov
or
movl
cmp
movl
jne
movl
cmp
movl
jne
movl
push
push
movl
jmp
mov
mov
movl
cmp
jne
movl
cmp
movl
jne
push
push
jmp
mov
mov
cmp
jne
movl
cmp
jne
push
push
jmp
mov
movl
mov
cmp
movl
jne
cmp
jne
movl
push
movl
push
movl
jmp
mov
mov
mov
mov
mov
movl
cmp
movl
jne
cmp
movl
jne
sbbl
mov
or
xor
sbb
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
mov
mov
and
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
xor
mov
add
cmp
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
sub
orl
push
xorl
push
push
orl
lea
push
subl
push
call
movl
cmp
movl
je
subl
push
adcl
push
adcl
call
movl
jmp
andl
mov
addl
push
lea
push
push
push
movl
push
addl
call
imul
cmp
movl
je
xor
movl
jmp
addl
lea
orl
push
addl
push
xorl
call
test
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
push
call
cmpl
jb
mov
mov
mov
sub
add
movl
mov
xor
or
sub
and
lea
or
mov
adcl
lea
andl
mov
inc
mov
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
mov
sub
add
mov
mov
mov
adc
mov
xor
mov
adc
xor
mov
sbb
mov
mov
add
movl
mov
mov
cmp
jne
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
mov
sbbl
xor
add
subl
mov
sbb
mov
xor
addl
add
orl
mov
mov
xor
adcl
add
sbbl
mov
sub
mov
adcl
mov
adcl
mov
orl
mov
not
mov
sbbl
mov
mov
sbbl
mov
mov
subl
mov
movl
andl
mov
addl
xor
add
jmp
orl
lea
push
push
call
movl
cmp
movl
jne
xorl
push
subl
lea
push
push
push
addl
push
decl
call
imul
cmp
jne
sbbl
lea
push
orl
push
addl
call
xorl
test
movl
jne
mov
mov
orl
xor
andl
lea
push
sub
mov
xor
lea
addl
push
adc
mov
pushl
andl
call
mov
neg
mov
xor
lea
adc
mov
add
mov
andl
xor
xor
notl
add
mov
and
mov
xor
movl
lea
movl
mov
cmp
jbe
xor
mov
adc
mov
mov
adc
mov
inc
mov
mov
and
mov
sub
sbbl
xor
xorl
mov
subl
lea
mov
lea
sbbl
mov
lea
push
xorl
push
movl
call
cmp
jne
push
lea
subl
push
orl
push
push
sbbl
push
xorl
call
imul
movl
cmp
movl
jne
lea
push
push
andl
call
sbbl
test
movl
jne
subl
lea
sbbl
push
push
adcl
call
movl
cmp
jne
adcl
push
lea
orl
push
push
decl
push
push
subl
call
imul
movl
cmp
movl
jne
lea
andl
push
addl
push
andl
call
movl
test
jne
andl
lea
push
addl
push
call
movl
cmp
jne
sbbl
push
subl
lea
push
push
push
push
call
andl
imul
cmp
movl
jne
lea
push
negl
push
call
sbbl
test
movl
jne
orl
lea
push
push
sbbl
call
cmp
movl
jne
push
orl
lea
push
push
xorl
push
subl
push
addl
call
addl
imul
movl
cmp
movl
jne
adcl
lea
orl
push
push
call
andl
test
movl
jne
decl
lea
decl
push
orl
push
addl
call
cmp
movl
jne
push
addl
lea
xorl
push
push
subl
push
push
orl
call
andl
imul
movl
cmp
jne
addl
lea
subl
push
sbbl
push
adcl
call
orl
test
jne
andl
lea
xorl
push
push
call
movl
cmp
movl
jne
subl
push
adcl
lea
andl
push
push
subl
push
movl
push
call
incl
imul
cmp
movl
jne
orl
lea
movl
push
adcl
push
andl
call
sbbl
test
movl
jne
subl
lea
addl
push
andl
push
sbbl
call
movl
cmp
movl
jne
orl
push
lea
orl
push
push
push
push
addl
call
xorl
imul
movl
cmp
jne
lea
xorl
push
push
call
test
jne
addl
lea
push
adcl
push
orl
call
movl
cmp
movl
jne
addl
push
lea
xorl
push
push
addl
push
push
xorl
call
xorl
imul
movl
cmp
movl
jne
orl
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
or
mov
mov
not
push
and
mov
xor
adc
mov
andl
push
adc
mov
xorl
add
movl
cmp
movl
je
xor
mov
sbbl
mov
subl
xor
xor
xorl
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
movl
andl
xor
xor
inc
mov
cmpl
jle
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movsbl
mov
sub
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
push
andl
xor
or
inc
mov
cmpl
jl
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
orl
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
push
mov
mov
mov
mov
xor
xor
mov
add
add
imul
mov
jmp
jge
jnp
mov
mov
jmp
repnz
repnz
addl
mov
mov
loopne
cli
rolb
jecxz
jle
insl
icebp
jge
pop
js
test
inc
incl
xchg
mov
add
and
mov
xchg
rorb
lock
xlat
xchg
mov
cwtl
hlt
push
jl
or
and
add
mov
mov
pop
cmpl
mov
addl
jmp
add
ja
xor
adc
adc
scas
inc
pop
loope
jecxz
out
sub
mov
xchg
cmp
scas
xchg
stos
mov
sbb
fucomip
xchg
inc
mov
adc
adc
mov
pop
loop
sub
dec
gs
cmp
shlb
rcrb
dec
inc
sti
add
mov
mov
cld
fdivl
add
stos
dec
outsb
and
push
push
fistpll
pop
or
movsb
mov
or
shlb
or
pop
xchg
pop
mov
in
mov
xor
sarb
inc
cli
jnp
subb
ja
pop
add
test
push
aaa
test
cmp
jnp
test
ss
imul
mov
push
mov
pop
xchg
and
pop
jge
stc
pop
mov
sbbb
outsl
xlat
mov
aaa
mov
cmp
push
cmpsb
inc
xor
lock
pusha
mov
cmp
rol
sbb
out
es
xchg
mov
add
mov
into
fildl
mov
cmp
call
movd
push
ja
fcomi
mov
pop
ror
lods
jnp
movsb
test
jge
sub
jnp
pand
ds
mov
js
cmc
and
mov
dec
imul
pushf
push
sbb
and
mov
pop
cmp
jl
enter
cmp
sti
cmp
jecxz
loopne
out
data16
mov
test
inc
in
lods
adc
insl
int
popf
out
jle
lods
push
mov
sub
jae
lret
and
sub
xchg
jbe
movsb
or
daa
add
xor
mov
inc
sub
in
xor
sbb
or
push
cmp
add
sbb
inc
cmpsb
cmp
xchg
insl
jae
mov
mov
and
push
lods
test
mov
je
xor
iret
mov
cmc
fcoml
jns
out
xor
fcoms
movsb
add
mul
frstor
fwait
add
cs
test
insb
add
mov
fcoms
fmuls
dec
lea
frstor
scas
fucomi
icebp
fisubl
sub
mulb
fidivs
mov
lcall
out
xchg
test
xchg
add
add
cmpsb
scas
push
sub
add
add
testl
lea
stc
jo
jno
and
cmpb
pop
popa
andb
enter
add
cmp
add
hlt
aad
xchg
sbb
pop
push
fiaddl
gs
push
in
cwtl
adc
mov
mov
mov
std
adc
in
outsl
or
adc
int3
cwtl
enter
test
cmp
push
movsl
xchg
in
jbe
mov
adc
fstps
push
cmp
xchg
mov
mov
pop
js
jnp
test
or
lds
rcrl
push
in
push
sahf
push
mov
out
mov
or
hlt
das
xchg
imul
test
push
sbb
push
add
mov
test
jmp
mov
lods
push
mov
loop
dec
push
cld
sti
sti
rorl
cmp
ss
push
sahf
sbbl
imul
inc
xchg
or
cmpsb
cltd
lds
cs
arpl
aaa
cmp
cmp
push
add
pop
push
jne
mov
or
testb
cmp
xchg
add
add
cmc
sub
xchg
gs
xchg
pop
in
inc
lea
call
jmp
es
ja
pop
pop
call
ljmp
push
call
mov
mov
sub
shll
xchg
pop
adc
push
into
test
lret
mov
jb
data16
stos
loopne
jg
jns
mov
mov
sub
mov
lahf
sub
xor
jb
es
mov
ss
cltd
mov
jecxz
idivb
iret
and
mov
xchg
dec
push
fimuls
lds
jbe
or
mov
lds
out
push
out
jno
daa
mov
cli
sub
out
inc
pop
loope
pandn
push
scas
mov
movsb
dec
js
xor
mov
out
les
cmpsb
mov
fisttpl
dec
inc
xor
pop
xchg
out
or
bound
and
pop
or
mov
xchg
fnstenv
pop
xorl
fcmovu
sti
lods
push
loop
testl
enter
lcall
or
adc
or
or
jge
jp
mov
mov
out
pop
pop
ficoms
int3
dec
push
lcall
rcrl
xchg
add
mov
xchg
mov
lret
fimull
push
bound
mov
jo
bound
lcall
sub
ja
mov
arpl
cmp
loopne
push
es
gs
push
lock
dec
push
daa
andb
adc
movsb
add
mov
and
sub
jg
out
cmpsb
inc
adc
and
out
lahf
stos
add
adc
adc
mov
adcb
sub
mov
push
out
mov
jae
inc
es
popa
cmpsl
mov
add
pop
aad
popa
int3
add
std
mov
sti
push
movsl
ror
pop
adc
cmp
sub
mov
jmp
sub
xor
out
ficompl
jecxz
ffree
adc
adc
xlat
in
insb
neg
push
loop
cld
xchg
and
lret
clc
and
in
adc
ja
call
mov
scas
lret
dec
outsb
addr16
push
mov
push
push
sub
cwtl
faddl
repz
cmp
push
push
int3
fadds
pop
mov
xor
jge
dec
insb
cmp
nop
adc
ret
dec
adc
das
pop
xchg
scas
jns
push
cmp
lret
sbb
sub
xchg
fisttpll
mov
ror
mov
lds
fldt
jmp
popa
cmp
xchg
pushf
subb
xchg
ret
nop
jp
jmp
int
mov
orl
sbb
jp
sbb
push
ficompl
iret
mov
fildl
push
mov
testb
adc
mov
add
xchg
mov
xlat
in
psubsw
shlb
lcall
mov
xchg
in
pop
or
mov
lds
cmp
shll
cmp
push
cld
icebp
add
adc
xchg
fcom
mov
repnz
insb
sub
faddl
push
jno
insw
or
jecxz
cmc
addl
pop
enter
movsb
test
out
cmp
loope
mov
sub
imul
aas
imul
sbb
icebp
sarl
mov
rcll
mov
add
aam
dec
mov
mov
or
mov
lea
mov
xchg
ficoml
push
push
mov
xchg
cmp
aam
inc
xor
push
push
sbb
pop
sbb
pop
in
mov
std
pop
sub
mov
pop
int
lret
pop
jmp
adc
jae
dec
lds
sti
arpl
adc
in
jno
cmpsb
mov
mov
repnz
andl
enter
stos
sub
fldt
xor
cli
hlt
and
les
ja
xrelease
js
and
nop
ret
xor
pop
jno
add
shrl
add
inc
sarb
repnz
inc
popf
push
in
lret
gs
push
fwait
aam
scas
fwait
push
mov
aaa
sbb
inc
aad
mov
orb
push
sub
imul
pop
neg
clc
ret
inc
jge
mov
popf
xor
std
push
imul
sub
push
jge
cltd
pop
fisttps
xchg
jo
xor
jge
push
cli
mov
insl
push
int3
xlat
stos
cmp
stos
jge
jp
pop
lret
imul
ret
sbb
mov
dec
aam
sahf
inc
sub
cmp
scas
mov
or
dec
insb
jge
lds
fstl
lret
popa
fmuls
bound
int
add
sub
xor
sahf
push
stc
xor
push
clc
subl
jnp
pop
sar
insl
inc
jo
or
xor
mov
lock
jo
sti
and
inc
cmpsl
or
mov
mov
cmp
jle
mov
sbb
je
sbb
hlt
add
cmpsl
cmpsb
iret
push
jnp
sahf
push
dec
xor
push
fwait
mov
mov
aad
push
iret
daa
fs
inc
inc
pop
ror
pop
jecxz
xchg
mov
xor
lods
push
iret
mov
jp
push
mov
mov
popa
xor
or
mov
inc
inc
add
lcall
push
push
jge
test
sbb
mov
lret
ljmp
xchg
jne
inc
dec
pop
mov
jns
dec
imul
jg
in
xlat
jnp
ret
ss
mov
or
enter
and
cli
insb
xchg
sti
or
pop
push
test
dec
outsb
sbb
aaa
mov
xor
sbb
ljmp
push
nopl
sub
outsl
pop
mov
xchg
hlt
pop
mov
stos
sub
ja
aam
cmp
test
adc
aaa
jno
int3
stc
or
addr16
lret
sar
xchg
dec
xor
push
dec
jle
mov
rcrl
fsubrs
das
aaa
mov
stos
ret
xor
loope
push
repnz
int
sub
ljmp
inc
mov
adc
xchg
xchg
jmp
hlt
pop
std
cli
mov
lahf
push
push
sub
jae
shll
pop
adc
in
push
mov
loope
add
or
xor
cmpb
push
sarl
ror
mov
or
inc
mov
sbb
fldt
jae
push
fimuls
dec
push
jecxz
aam
fwait
aam
addl
mov
mov
pop
pusha
jae
shlb
fldcw
pop
popf
into
or
insl
pop
mov
into
scas
mov
and
push
ss
sahf
sub
or
dec
dec
push
nopl
jecxz
and
fwait
inc
xor
mov
aas
and
xchg
test
jo
push
or
mov
sti
mov
cli
fwait
mov
inc
lds
sahf
dec
push
sub
xor
jne
pop
add
dec
ds
lret
icebp
xchg
cmp
movsl
push
inc
test
mov
fildl
jae
add
repnz
sbb
test
mov
in
sub
bnd
mov
mov
push
adc
in
int
push
mov
leave
stos
mov
push
pop
or
xchg
mov
jne
pop
or
js
and
roll
and
add
sub
xor
aad
inc
fdivp
lods
cltd
xchg
fs
shrl
jne
xchg
pop
dec
inc
adc
ja
pop
sbb
fisttps
push
adc
cmp
cmp
aad
cli
iret
ljmp
mov
icebp
dec
push
or
xchg
gs
lahf
in
push
rolb
cld
hlt
dec
lea
les
std
das
std
loope
fidivrs
adc
ficoml
in
scas
dec
stos
xchg
sub
cmp
lahf
stc
call
lock
or
sbb
mov
mov
sub
xchg
repnz
mov
imul
jl
sbb
mov
fildl
and
and
outsb
add
shl
jmp
jbe
cmp
mov
ret
jp
xchg
pop
cmp
call
addr16
inc
test
out
popa
hlt
pop
pushf
xor
in
xor
xor
fcomip
icebp
call
les
das
push
popf
inc
loopne
cmp
shrb
fidivl
scas
adc
mov
in
pop
mov
mov
add
jge
adc
sub
cmp
xor
pushf
fidivrl
and
xchg
cmp
mov
mov
ret
cmpsl
cmp
lds
sub
pop
adc
cmpsb
xor
mov
and
cmpsl
dec
add
pop
jae
push
push
data16
pushf
mov
mov
xchg
mov
mov
mov
aas
lods
scas
int3
lahf
mov
inc
leave
inc
sub
push
je
ret
pop
dec
sbb
aam
adc
xchg
mov
dec
or
pop
adc
insl
jecxz
jbe
lahf
jns
cld
adc
in
jno
insl
push
and
pop
nop
out
or
add
xor
mov
rclb
int3
xchg
insb
xorb
mov
pop
fdivr
mov
sti
adc
push
js
mov
jle
lock
xchg
pop
jns
lret
test
outsl
pusha
ret
and
pop
inc
add
mov
mov
lods
lret
dec
aam
xchg
imul
pop
sub
movsb
arpl
pop
int
jno
jg
and
and
and
cld
lds
stos
inc
fidivs
dec
testb
repz
inc
hlt
inc
push
cwtl
mov
test
in
int
int
jo
and
mov
push
cmp
push
jecxz
repnz
andl
dec
adc
mov
daa
sbb
ds
pop
xor
pop
push
ret
sbb
stc
xor
ljmp
into
es
stc
in
sbb
lock
mov
sub
mov
mov
xchg
sbb
mov
mov
sub
push
out
arpl
lahf
push
imul
dec
pop
xor
jb
fbld
fwait
rclb
paddusw
mov
jle
sbb
lods
fdivr
stc
pop
fwait
mov
sub
clc
xor
mov
add
or
in
lahf
or
dec
or
xchg
inc
push
mov
dec
pop
xchg
and
jecxz
or
xorl
xchg
into
cmp
cld
hlt
sbb
insb
addr16
and
xor
addb
jo
lret
lods
mov
sub
jne
hlt
xor
lods
push
mov
or
les
nop
dec
fistl
jp
movsb
loop
ljmp
outsl
mov
lahf
fmulp
mov
out
call
jb
pop
add
cld
pop
sub
jle
outsl
add
cmp
cmp
outsb
sar
sub
pop
mov
push
les
sub
loope
inc
jge
aad
add
sbb
mov
cmc
pop
sti
mov
int
xchg
nop
lods
jmp
fs
fnstenv
jmp
or
pop
insl
jbe
jl
mov
ja
lock
sbb
imul
push
sbb
mov
lods
negb
fcom
push
adc
std
fs
fs
addr16
lock
fisubrs
push
cs
mov
fildl
cmp
pop
sbb
ficompl
jecxz
push
lret
mov
adc
cmp
or
mov
pop
jbe
pop
pop
je
cmpsb
stos
push
cmp
jb
into
or
adc
fwait
inc
stos
jge
fdivrp
dec
pop
int
mov
jp
sub
jno
fcomip
push
xor
xchg
or
aaa
push
adc
ljmp
push
mov
add
insl
and
sub
jmp
aam
cmp
ret
in
movsb
call
mov
sbb
pop
xchg
mov
lods
shll
repz
push
dec
or
jbe
pop
lods
aaa
dec
add
scas
xchg
sti
xchg
mov
pop
scas
cltd
ficompl
and
lds
cwtl
jg
fidivrs
fldl
cmc
push
xchg
mov
sbb
add
xchg
adc
cmp
and
sbb
dec
sub
mov
sarl
pop
push
fdivl
mov
mov
lret
test
jmp
cltd
iret
addr16
pop
sbb
xchg
sbb
jb
dec
stos
ret
cltd
mov
dec
cmc
incb
xchg
cwtl
pop
jle
lcall
adc
xchg
iret
xor
rolb
int
sbb
das
lret
xor
andb
sbb
shlb
add
imulb
fstpl
jno
ja
cs
push
jb
xchg
mov
sub
sub
inc
xchg
sti
sub
cld
in
loopne
xlat
adc
sub
aas
loopne
mulb
mov
lahf
sbb
mov
mov
das
adc
ja
or
jmp
dec
dec
movsb
aad
popa
pop
aaa
pop
sub
adc
ja
push
xchg
daa
aad
movsl
xchg
clc
icebp
add
ret
mov
movsl
mov
cwtl
mov
cli
scas
imul
xchg
sub
bnd
cltd
int
icebp
aam
mov
or
push
in
lret
daa
mov
xor
pop
adc
xchg
mov
aas
ret
inc
push
xor
je
mov
flds
fsubp
mov
es
mov
cmp
mov
pushf
jno
cmp
xchg
imul
mov
push
fnstcw
mov
xor
clc
fmull
push
call
jge
bound
lahf
ds
lret
cltd
lds
add
je
das
pusha
xchg
cmp
or
xchg
jge
adc
mov
cmp
in
arpl
outsb
test
ret
clc
loop
jecxz
add
fstpt
mov
xchg
out
insl
inc
xor
pop
fadd
notb
adc
add
or
adc
dec
mov
add
pop
adc
std
and
mov
mov
mov
pushf
stos
out
or
add
movsb
aas
mov
iret
in
dec
gs
add
rcrb
cli
fiaddl
push
pop
fcoms
adc
sub
xchg
jecxz
sbb
fbstp
fsubl
dec
dec
sbb
push
jl
gs
push
imul
add
cld
out
lret
insb
lock
pop
cld
mov
mov
sarl
or
mov
in
out
ljmp
lahf
xchg
loope
inc
sbb
pusha
loope
stc
sub
dec
mov
ret
lret
fmull
das
dec
cmpb
xchg
xchg
sbb
pop
ljmp
test
xlat
int
mov
mov
rorl
and
dec
roll
scas
cmp
scas
or
cli
shll
mov
into
rcll
fs
mov
les
pop
jne
aaa
cld
ror
out
lahf
int
push
add
hlt
test
cmpsb
xchg
bnd
push
cwtl
dec
push
adc
insb
dec
xchg
int
add
sub
ret
xor
mov
lock
out
mov
push
int3
out
leave
sub
pusha
mov
out
out
popf
xor
xchg
iret
testb
jmp
cmpb
pop
in
jle
insl
mov
and
jl
cld
in
pop
pop
push
test
insl
jae
clc
pop
js
add
jbe
out
idiv
gs
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
add
cmp
dec
add
add
add
add
add
add
pop
add
add
add
add
add
inc
push
mov
pop
and
dec
gs
cmp
sub
add
add
pop
push
jns
and
and
outsb
pop
inc
imul
outsb
jae
fs
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
add
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
cmp
sbb
add
jmp
jmp
ja
mov
pop
test
mov
imul
sbb
test
scas
popf
or
mov
fwait
les
sets
mov
popf
fwait
mov
stos
mov
mov
ja
mov
mov
sbb
test
mov
mov
xchg
test
push
and
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
add
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
