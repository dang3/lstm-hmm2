push
mov
sub
sub
mov
push
add
push
push
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
movl
cmpl
je
cmpl
jge
jmp
push
call
mov
dec
mov
jmp
mov
or
add
mov
xor
mov
andl
mov
subl
mov
mov
and
mov
mov
xor
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
jmp
mov
and
xor
add
add
subl
mov
mov
mov
movl
cmpl
je
cmpl
jbe
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
mov
not
mov
push
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
pop
sub
sub
add
movl
movl
cmpl
je
cmpl
jb
jmp
push
call
mov
dec
mov
jmp
mov
movzwl
sub
movl
mov
xorl
mov
mov
mov
mov
adcl
xor
sbbl
add
orl
mov
notl
lea
mov
adc
mov
orl
xor
orl
add
orl
mov
adcl
lea
push
neg
mov
subl
xor
xorl
add
subl
push
mov
addl
push
orl
pushl
orl
call
sbb
mov
adc
mov
mov
adc
mov
mov
movzwl
and
movl
mov
mov
sbbl
lea
sbb
mov
movl
sbb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
xor
mov
addl
sub
movl
mov
not
movl
mov
mov
movl
cmp
movl
je
jmp
mov
inc
popf
test
popa
filds
pusha
addl
cmp
jp
jbe
add
insl
push
je
lods
jge
data16
cmp
push
mov
mov
ja
add
repnz
rol
repnz
sub
xchg
adc
xchg
jb
sbb
lsl
and
jne
mov
pop
sbb
mov
fs
and
xchg
imul
inc
mov
pop
push
adc
add
clc
and
mov
and
scas
pop
jb
jb
inc
inc
in
cmpsl
aas
mov
mov
xor
sub
pop
xchg
push
mov
inc
divl
mov
mov
or
pop
stos
cmpb
stos
xchg
dec
mov
mov
sub
jne
push
clc
inc
jp
test
lahf
jmp
insl
push
mov
sbb
lea
out
sub
xlat
sbb
lock
sub
dec
aaa
push
xor
ljmpw
push
aaa
push
jecxz
rcrb
dec
and
jmp
call
outsl
inc
mov
aas
fsubl
ja
xorb
clc
adc
mov
adc
ljmp
jo
xlat
clc
cmp
push
or
mov
sbb
inc
loope
cmp
sbb
inc
jge
mov
ljmp
pop
xchg
inc
out
addb
inc
sub
push
mov
addr16
adc
stos
and
loope
cmp
mov
inc
out
mov
in
push
call
insb
inc
mov
das
jae
int
mov
mov
jbe
popa
jge
fs
ret
dec
and
pop
cmc
arpl
xorl
les
jmp
es
mov
mov
movsl
xchg
roll
out
stos
sbb
fildl
sbb
sbb
subl
sbb
shl
popa
dec
pop
xchg
testb
arpl
aaa
sub
loop
insb
add
fdivl
sub
sub
mov
popf
push
mov
out
pop
cmp
cltd
sub
inc
inc
fisttps
stos
lock
adc
int3
lahf
xabort
imul
sub
lcall
xor
and
iret
cmpsb
mov
decb
jmp
rcr
jo
jne
inc
iret
jmp
cmp
and
xor
bound
rorl
push
cmc
ss
or
jmp
adc
dec
mov
dec
ret
lods
adc
addr16
adc
sub
and
push
push
fbld
int3
iret
jno
aad
fdivs
cmc
in
pusha
stos
iret
push
mov
mov
jno
test
movl
dec
or
fcoms
aas
mov
lret
push
daa
sbb
lcall
loopne
push
dec
in
jb
iret
rcrl
mov
repz
sub
mov
insb
mov
pop
jl
push
enter
cmp
fstpl
mov
ret
cmpsb
dec
jb
ljmp
and
pop
mov
clc
mov
jg
mov
ss
and
call
cmp
rorb
pop
int3
out
mov
faddp
icebp
or
jb
mov
repnz
js
jno
imul
and
das
ja
mov
jg
pop
insb
sub
and
shl
sbb
and
lods
ja
cmpsb
cmpsb
hlt
dec
mov
imul
lods
dec
xor
mov
inc
fildl
mov
fsubrs
mov
pop
jg
xor
cmovb
push
mov
subl
lea
push
outsl
sbb
mov
sub
push
pop
loop
mov
mov
out
repz
and
mov
mov
les
xchg
adc
jne
es
hlt
sbb
pop
test
mov
in
push
inc
xchg
xchg
sbb
mov
add
repnz
sarl
jp
cmpsb
sub
inc
lods
subps
mov
lret
std
cwtl
outsl
xor
ds
iret
adc
jecxz
popf
xor
dec
cmp
scas
inc
aas
sub
int
mov
insl
mov
sbb
jnp
push
sub
rorl
outsl
icebp
or
mov
push
es
mov
orl
pop
das
push
mov
inc
stos
and
push
sub
lret
xor
pop
mov
lods
jmp
int
lcall
inc
out
stos
test
or
push
push
lret
iret
and
cmp
or
jp
xchg
stos
pop
jo
and
mov
imull
ret
push
fdivl
fidivrl
and
stos
add
add
lret
mov
test
ja
jae
xor
add
add
jmp
cwtl
or
loope
push
pusha
mov
lcall
push
xchg
sbb
fisubrs
push
add
out
and
dec
fdivl
and
xchg
inc
push
out
mov
sub
popf
jb
lcall
movsl
ret
adc
dec
sub
outsl
pusha
adc
xor
jle
and
pusha
pop
xchg
push
pop
inc
out
movsb
shll
imul
push
in
jns
inc
shrb
xchg
aaa
aam
inc
lods
shll
fcmovnb
clc
dec
mov
popa
jae
adc
jae
adc
xchg
or
subl
out
stos
lods
mov
dec
xchg
adc
pop
or
pop
xchg
adc
mov
mov
sbb
push
sbb
stc
loope
xchg
sti
aaa
scas
vpunpcklwd
faddp
jns
add
jecxz
loopne
aaa
inc
jno
ret
scas
stc
adc
add
jg
push
and
adc
repz
or
xchg
cmp
movsl
push
pop
mov
outsb
ror
sbb
xchg
or
mov
xor
lods
aas
loope
push
ret
out
fisttpl
out
sbb
test
stc
cmpsb
jmp
jecxz
str
pop
out
cs
sahf
je
pop
dec
ljmp
ja
inc
and
lods
call
ret
xchg
push
in
subb
xor
jb
pushf
or
pop
dec
lret
insl
icebp
and
lahf
movsb
push
push
mov
lret
cmpsl
lret
addl
gs
dec
imul
pop
sarl
mov
push
rcl
das
addr16
orl
lock
ljmp
dec
sti
outsl
xchg
and
sub
dec
enter
and
outsb
sub
fwait
mov
xchg
and
movsb
sarb
enter
jno
mov
decl
mov
and
xor
iret
jbe
xor
push
mov
push
sbb
ret
pop
cmp
into
mov
mov
adc
xchg
mov
es
mov
mov
out
jl
jns
int
cmp
sbb
jp
and
sub
call
ljmp
dec
cmp
pop
sub
jns
lret
lea
mov
cmp
pop
ret
sbb
pop
jmp
or
xchg
inc
subl
push
xlat
mov
cmpsb
dec
jb,pt
lods
outsb
push
sti
arpl
aam
out
dec
sub
sub
xchg
pop
inc
ret
ljmp
sbb
mov
out
dec
mov
pop
jmp
xchg
cmpsb
jmp
insl
cmp
dec
daa
adcl
sbb
fldenv
negl
aas
stos
jmp
js
jnp
icebp
bound
push
xchg
adc
cmp
add
pop
out
shlb
mov
ds
sbb
pop
push
push
push
mov
repz
fdivrs
popa
jmp
xchg
mov
or
or
add
add
lahf
pop
mov
cld
xor
cmpsb
in
mov
mov
movb
lahf
cmc
popa
lret
xor
mov
xchg
dec
mov
adcb
sbb
aas
adc
push
mov
scas
mov
cltd
cmp
push
jae
loop
xchg
scas
gs
stos
iret
sti
lcall
sbb
imul
xchg
je
pop
out
fsqrt
add
arpl
mov
js
jecxz
cs
out
filds
cwtl
js
aas
fistl
out
mov
testb
dec
push
cli
loop
imul
jb
movsl
push
flds
jl
insl
dec
into
subb
cmp
lahf
mov
lods
ja
jmp
mov
mov
dec
cmp
lcall
enter
ljmp
cmp
cwtl
popa
jbe
into
fnstsw
or
sub
scas
andl
mov
sbb
mov
and
roll
imul
sbb
add
out
mov
movhps
jle
js
mov
mov
sub
mov
push
jne
inc
and
pop
xchg
in
out
dec
add
push
sbb
pop
xor
inc
dec
mov
xlat
daa
xor
add
movl
sahf
jb
in
mov
pop
pop
xor
repz
cli
rcrb
gs
push
xor
in
cwtl
cmpsb
jns
sub
inc
sub
dec
mov
pop
sub
lret
rclb
pop
repnz
jmp
scas
movsl
fwait
out
push
jns
jo
aam
add
int
push
fidivrl
cmp
mov
xchg
jp
jl
jno
pop
jl
shrb
int3
push
das
xor
dec
jl
shl
lcall
in
es
jle
xchg
xor
clc
jno
rcll
jae
cli
inc
push
jmp
mov
fmulp
das
push
shll
inc
shrl
push
sbb
push
sbb
fcos
out
cltd
arpl
xchg
in
add
adc
popa
xorl
dec
js
jmp
cmp
push
test
rcrb
shlb
rcrl
mov
jecxz
stc
vpunpckhbw
sti
mov
xchg
rcr
push
xor
pop
push
cs
mov
mov
pop
push
push
out
cs
loopne
jo
sti
cld
outsb
push
mov
sub
outsl
xor
pop
sub
out
push
call
mov
xor
mov
sbb
add
fnstenv
mov
mov
pop
jb
and
jnp
pop
rcrb
jge
dec
pusha
arpl
cmpb
negb
shr
inc
fwait
inc
divb
es
sub
push
jp
call
lret
jmp
jmp
rcr
push
jge
pop
push
scas
in
fimuls
xchg
xchg
pushl
out
shll
push
add
and
lds
adc
in
sub
xor
stos
cmp
loope
push
popf
dec
xchg
or
add
out
mov
es
addr16
xchg
icebp
lods
mov
and
out
pusha
inc
jmp
xchg
in
dec
lcall
ja
mov
pop
cmp
repnz
cli
mov
xor
inc
and
mov
sti
push
repnz
xor
cmp
mov
mov
or
sub
xchg
jecxz
fcomps
dec
or
dec
mov
jmp
adc
mov
movsb
loopne
or
cli
add
cmc
push
xchg
adc
push
add
test
nop
xor
hlt
imul
out
pop
jecxz
mov
pop
mov
push
jae
xlat
push
inc
push
push
jp
gs
mov
das
cmpsb
aam
arpl
lds
data16
xor
push
xchg
fildl
andl
dec
and
xchg
aam
sbb
dec
add
mov
jmp
jae
js
pop
xchg
inc
mov
jg
add
int
cwtl
xchg
jo
and
mov
mov
int3
ret
mov
cmovg
push
push
shlb
sti
sti
xchg
imul
mov
mov
cmp
mov
rcl
dec
pop
or
jmp
dec
inc
sub
sub
xchg
outsb
mov
pop
fidivs
lcall
rorb
popf
push
mov
mov
jecxz
add
aad
fwait
lods
cwtl
inc
data16
jecxz
fldl
push
xchg
mov
ss
cmp
sahf
loop
dec
jno
sti
out
les
mov
repnz
in
jae
paddusb
pop
jmp
fwait
imul
outsl
in
leave
jne
mov
inc
fimuls
popa
sbb
inc
ds
dec
aaa
xchg
xchg
int3
in
popa
cmp
imul
inc
mov
cs
adc
into
rclb
lods
sbb
jl
xchg
mov
or
dec
xor
int
push
loopne
jg
xorl
sub
xor
in
sub
shrl
fwait
sbb
mov
inc
mov
sbb
popf
add
dec
jmp
shrl
add
cmp
iret
sbb
sbb
movsb
das
adc
inc
mov
xchg
adc
lods
std
pop
sub
cmpsl
push
fiaddl
mov
mov
xchg
aas
push
lods
push
cmc
or
and
iret
ret
into
sub
xchg
sub
outsb
movsb
xchg
add
sbbb
ret
jle
jae
out
jne
push
repz
xor
xchg
flds
fldcw
cmp
jno
lock
inc
pusha
rcrl
jnp
cmpsl
in
add
mov
pop
dec
sarw
and
rcrb
mov
into
jo
out
movsb
call
cs
sahf
mov
pop
sub
leave
icebp
fcompl
mov
pop
push
cmp
test
mov
xchg
addr16
jl
inc
pop
imul
imul
inc
cwtl
lods
lcall
dec
add
jne
js
lret
and
ljmp
cmp
jg
mov
sahf
ljmp
cli
outsl
sarl
push
push
pop
int
out
enter
mov
jmp
jo
jmp
es
and
push
xor
inc
xchg
stos
cmpsb
enter
jnp
pop
cmp
cmpb
outsb
cmp
ds
mov
sub
test
xlat
cmp
orl
inc
mov
lea
mov
or
ret
jp
inc
and
in
repz
mov
test
sahf
jg
jle
ror
xor
pop
mov
cmp
pop
lret
push
cmp
mov
int3
sbb
xlat
jo
imul
sbb
or
cmc
sbbl
jp
idivb
test
sbb
xchg
sub
mov
pushf
out
ss
pop
repz
scas
mov
fwait
es
insl
add
jne
xor
xor
push
lret
fsubrs
inc
cmpsl
fists
xor
repnz
fcmovnb
xchg
add
movsb
stc
mov
sahf
and
adc
out
mov
mov
xchg
xor
jmp
ljmp
movsb
and
cmp
fldl
jp
and
xchg
mov
fldt
daa
jmp
push
data16
mov
in
xchg
and
repz
scas
push
jmp
and
ret
push
out
fwait
mov
push
cmp
xor
ss
loopne
add
pop
sbb
jns
out
icebp
imul
int
sbbb
xchg
sub
ret
adc
push
inc
adc
mov
std
movsb
sub
mov
iret
mov
mov
ljmp
dec
add
inc
aaa
push
das
in
and
push
movsl
adcb
mov
mov
cmp
aad
jns
xchg
scas
nop
inc
pop
mov
mul
push
dec
les
pusha
push
stos
cmp
lahf
mov
loope
cmp
es
in
lcall
lea
push
fldl
pusha
mov
mov
mov
or
divl
outsb
adc
jb
and
mov
arpl
mov
jle
aam
mov
movsl
enter
dec
loope
ja
lds
scas
subl
mov
fdivrl
or
out
mov
add
pop
sub
je
test
xor
xchg
dec
jge
dec
out
mov
jnp
and
jbe
mov
aas
movsl
in
lea
add
mov
or
clc
or
mov
push
cli
dec
sbb
mov
repz
cmpsb
jge
loop
xchg
dec
push
jle
mov
xchg
push
cld
push
sbb
arpl
int
adc
out
sbb
cmp
lds
repz
leave
or
mov
pusha
jbe
mov
and
out
mov
dec
loopne
jge
arpl
shl
sub
loop
sbb
mov
rcl
mov
cli
insl
fcomi
out
into
xchg
pushf
rcrb
ljmp
xchg
iret
jnp
push
in
xor
jg
sbb
add
inc
icebp
lods
neg
jge
pop
push
hlt
and
ja
fistl
mov
and
shlb
outsl
and
xchg
xchg
out
repz
cmp
test
push
jae
sbb
jno
jp
push
fisttps
xchg
dec
hlt
sbb
sub
rolb
and
xorb
sbb
push
xchg
mov
mov
test
inc
inc
fimull
cli
cmpsb
push
mov
add
xchg
int
or
or
roll
in
mov
pusha
orl
or
shll
mov
aaa
push
sarb
jnp
mov
daa
lret
xor
fidivs
iret
dec
cltd
repnz
testb
outsb
mov
add
dec
cmpsl
pop
in
or
push
jbe
pop
int
xchg
ljmp
inc
test
test
int
dec
pop
sbb
cmp
cmp
jns
inc
sub
add
mov
or
xchg
lods
push
cmovno
aam
mov
fwait
xchg
dec
test
pop
sbb
mov
xchg
rcll
jecxz
xorl
js
and
xchg
insb
or
jo
lods
je
dec
jp
enter
daa
mov
popf
adc
pop
or
arpl
or
mov
sahf
add
or
jp
loope
cs
pop
xor
rcrl
out
add
test
mov
dec
dec
or
mov
xchg
aaa
insl
add
fdivr
pop
enter
insl
inc
jge
outsl
rcrb
fcom
jbe
dec
cld
test
bound
xchg
xor
pop
mov
in
mov
add
push
enter
mov
shlb
cmpsl
leave
xchg
lcall
out
push
cmp
popa
xlat
nop
popa
xlat
aas
sub
mov
mov
neg
pop
mov
xor
jmp
cwtl
sbbl
adc
mov
jns
push
mov
mov
ljmp
push
sbb
call
sub
push
aaa
add
stc
mov
movsb
mov
bound
mov
mov
or
adc
fmulp
cmpb
pushf
les
rcl
inc
sub
sahf
and
movsb
push
inc
sahf
outsl
ffreep
hlt
cmp
mov
jns
fldenv
jmp
int
jne
ficoms
and
sbb
push
pop
add
push
iret
fwait
inc
and
clc
into
cmp
sub
lcall
push
addb
dec
mov
loopne,pn
jp
jbe
mov
pop
fwait
call
and
std
ja
stos
shrb
in
in
xchg
ja
mov
or
dec
rolb
dec
inc
cmp
cmp
xchg
xchg
jns
push
addl
or
push
dec
add
inc
inc
je
lahf
lods
aas
loop
cld
lea
cmp
mov
dec
xor
sbb
push
insl
dec
daa
daa
stos
icebp
jmp
sbb
test
int
jp
jo
test
jle
dec
adc
clc
insl
mov
xor
sub
ror
iret
dec
add
mov
mov
or
sbb
xor
dec
sub
cmp
add
sub
mov
jno
adc
inc
dec
jp
dec
xchg
inc
xchg
aas
neg
push
stc
divl
jb
add
sub
ficoms
int
mov
loop
push
mov
push
inc
inc
lea
filds
cltd
daa
mov
out
or
jl
out
pop
push
cmp
pop
pop
mov
in
mov
add
pop
fnsave
hlt
enter
jge
and
mov
in
adc
cmp
fcomps
dec
mov
push
lea
add
mov
or
xchg
mov
shrl
loopne
sbb
jg
xchg
xor
lret
enter
sti
push
js
leave
out
adc
outsl
notl
pop
sbb
mov
pop
and
jmp
jle
addr16
or
scas
cmp
xchg
sbb
cmp
aas
push
sbb
sbbl
lret
icebp
ret
adc
jo
icebp
fdivs
movsb
mov
pop
pop
je
lock
inc
mov
mov
pop
xchg
arpl
or
stos
loope
jecxz
fadd
icebp
adc
push
or
loope
fst
xchg
call
push
popf
inc
mov
push
inc
push
stos
int3
iretw
push
orb
popf
and
movsl
jns
jge
xchg
push
movl
add
sbb
cwtl
or
pop
jb
cmp
cmp
shlb
in
vmwrite
mov
push
data16
xor
lea
scas
xchg
or
pop
mov
inc
cmpsb
pop
repnz
jle
sbb
jecxz
ss
inc
jmp
data16
inc
aad
or
lahf
adc
cmpsl
jnp
pop
jne
repz
jmp
in
inc
inc
scas
jecxz
xchg
cs
dec
icebp
xchg
push
and
or
mov
cmc
fs
xchg
loope
xor
xor
fistps
ret
outsb
aas
mov
pop
iret
out
insb
inc
in
jo
jno
xchg
fcompl
cwtl
pusha
cld
mov
xchg
dec
xchg
fidivrl
jecxz
cmpsb
js
xlat
mov
mov
ja
popa
jg
icebp
sub
push
inc
xchg
push
xor
cld
xor
mov
and
push
mov
stos
roll
push
dec
mov
and
fcomp
dec
mov
pop
mov
or
mov
repz
clc
adc
out
testl
add
jne
dec
sarl
out
stos
popf
outsl
ror
leave
xchg
stc
clc
push
push
mov
ss
loope
mov
mov
andl
addr16
in
dec
cmpsl
and
push
iret
sbb
test
std
icebp
je
mov
cmpsb
cwtl
sub
push
sub
sub
mov
rcr
psubsw
push
mov
nop
jns
push
lea
push
inc
mov
sbb
xor
ret
add
mov
movsb
or
or
mov
aaa
adc
pop
fisubrl
rol
repz
out
mov
mov
sub
jge
and
aad
sbb
mov
sbbb
jecxz
mov
inc
fdivr
lcall
test
push
and
dec
sarl
subb
xor
and
mov
imul
push
sbb
stos
lret
mov
inc
cmpsl
jo
daa
push
mov
orl
mov
movsb
loope
adc
arpl
mov
in
or
mov
out
addb
jle
popa
jno
loopne
xor
mulb
test
and
fimuls
out
mov
add
pop
outsl
lds
cmp
adc
dec
cs
stos
lret
xchg
lds
hlt
jecxz
in
and
es
into
cmp
fs
je
lahf
cmpl
add
enter
pop
sbb
adcl
push
adc
jb
sub
cmp
test
hlt
sbb
sar
adc
inc
add
lcall
dec
cmc
fisubrl
inc
xor
xchg
int
or
imul
dec
and
vprotb
js
push
je
mov
jae
push
lret
insl
gs
hlt
xor
jmp
gs
enter
loope
or
iret
lock
pop
ret
les
test
dec
imul
outsb
cmp
pop
fwait
rcrl
inc
mov
adc
lahf
popa
or
xchg
js
shlb
push
mov
cmp
aam
subb
jge
pop
pop
leave
call
mov
jg
push
ret
int3
xchg
hlt
mov
in
adc
bnd
pop
shrl
push
std
sub
sbb
rcrb
xchg
inc
mov
orb
aam
adc
adc
lods
xchg
push
jecxz
adc
aad
out
xlat
bound
lods
pushaw
xchg
xchg
sub
dec
popf
adc
pop
roll
mov
adc
ret
inc
int3
pop
mov
lods
mov
lcall
jp
pop
dec
cmpsb
fnstsw
arpl
adc
add
lret
or
cmpsb
mov
cmc
add
add
sbb
test
loop
cmpsb
xchg
sbb
stos
int3
push
xor
outsl
cmp
mov
inc
cmp
pop
lock
shr
push
or
mov
aad
sbb
nop
push
mov
mov
fcoml
rorb
jmp
dec
js
jnp
xchg
xor
fwait
adc
test
repnz
in
sbb
lods
inc
xor
test
out
xchg
rcr
test
pop
xor
iret
lea
orl
xor
push
icebp
icebp
mov
jb
jae
cltd
out
leave
loope,pn
mov
pop
in
pushf
cmc
daa
dec
or
insl
jae
rcll
pop
addr16
dec
jne
push
sbb
pushf
mov
push
cld
adc
pop
pop
es
mov
mov
clc
sub
int3
mov
sarl
push
sbb
int
mov
sahf
pop
mov
jle
push
mov
xor
sbb
lods
mov
adc
ret
in
inc
aam
icebp
sub
fiaddl
lods
jae
and
cs
jne
jl
ficompl
cmp
cmpsl
outsl
sbb
mov
mov
pusha
int3
sub
loop
shll
xorl
movsb
lahf
add
pop
divb
mov
fsubrl
dec
outsb
jnp
sarl
in
pop
aad
adc
rolb
faddl
jne
jge
mov
pop
cmp
rolb
xchg
shl
cs
jne
loopne
mov
sub
sbb
jmp
cmove
dec
sbb
popf
pop
mov
int3
shl
sub
in
fwait
xchg
stos
inc
cli
roll
ror
ljmp
popa
or
enter
inc
imul
fcoms
mov
dec
ret
pop
push
in
jnp
sbb
mov
jbe
mov
dec
add
add
pop
int3
xchg
rcrl
push
mov
mov
xlat
int
pop
push
pop
pop
lds
stc
imul
cmp
ljmp
lret
sbb
xlat
sbb
push
sbb
mov
lret
iret
aam
pop
mov
repz
push
adcb
xchg
xchg
cmp
ja
mov
roll
ficomps
or
cmp
jmp
cmp
xor
icebp
mov
aad
xchg
dec
inc
dec
popf
aaa
imul
mov
icebp
or
mov
cmp
rcrl
cmp
pop
nop
jg
lods
jae
loopw
xchg
cmp
jge
or
sbb
repnz
dec
outsb
cmp
jbe
clc
fidivrl
push
mov
cmp
add
inc
ljmp
push
add
push
push
cli
dec
pop
jo
add
adc
je
mov
dec
or
leave
lock
pusha
xchg
mov
enter
js
mov
arpl
pusha
push
movsb
cmp
out
and
aad
hlt
dec
test
mov
sub
test
dec
mov
mov
sbb
mov
add
lret
insb
test
mov
push
xor
xor
cmp
out
xor
roll
jo
and
dec
iret
lret
cmp
jmp
addb
scas
dec
pushf
loopne
scas
adc
scas
pop
add
data16
call
cmp
mov
jne
popa
jge
gs
and
fsubl
imul
mov
leave
sbb
push
test
stc
ret
mov
rclb
jo
xchg
jbe
sbb
sub
mov
or
aas
pop
fwait
mov
mov
rcl
sub
loopne
sarl
mov
aaa
pop
lahf
mov
shrb
sub
daa
xor
mov
rcrl
mov
adc
insl
mov
or
jb
jno
pop
test
sarl
test
cmc
aam
adc
loopne
dec
jl
pusha
sub
pop
je
aaa
std
daa
icebp
popf
mull
or
jb
sub
xchg
sub
fs
roll
stos
ja
push
stc
push
inc
into
les
rcll
sti
repnz
mov
sbb
push
or
push
inc
mulb
pop
loopne
ret
mov
stc
dec
add
mov
pop
clc
sahf
enter
mov
fistl
mov
cmpsb
enter
adc
in
arpl
and
dec
pop
lods
jmp
sahf
jl
lea
enter
lods
pop
rcr
mov
int3
xchg
mov
jno
and
aad
std
and
jl
push
aas
js
or
lret
xor
dec
mov
in
push
into
xchg
push
cmp
push
xchg
adc
test
pop
movb
loope
mov
imul
insl
sub
add
push
mov
push
sub
loope
cld
dec
fsubs
in
jnp
popa
inc
pop
aaa
fisttps
aaa
xlat
cltd
lcall
jecxz
mov
cmp
test
test
dec
mov
enter
pop
mulb
lods
int
mov
test
mov
push
sub
aad
sbb
cmp
sub
mov
insl
dec
test
stc
movsb
adc
outsl
fists
push
sub
jmp
lods
add
xchg
ret
loope
imul
leave
mov
scas
fdiv
mov
pop
pop
iret
pop
xchg
and
dec
pop
push
jbe
insl
mov
or
mov
repz
stos
mov
cmp
mov
xchg
and
in
clc
dec
in
imul
xor
jns
cmp
xor
rclb
outsl
sbb
in
cld
leave
dec
or
out
pop
scas
gs
repz
xor
movl
pushf
dec
pop
ret
ret
cmp
pop
pop
mov
sbb
rcll
ret
mov
cmp
lret
shrb
jmp
add
pop
ficoml
gs
imul
xor
out
test
mov
mov
fcomps
shll
xor
gs
outsb
fcmovbe
idivb
mov
lea
inc
ret
push
sub
test
enter
cmpsb
pop
jecxz
pop
test
xlat
in
je
nop
faddl
jle
fs
jge
mov
sbb
adc
clc
cwtl
pop
mov
cmp
stos
xor
xchg
rorl
and
push
add
lds
pop
jmp
mov
mov
xor
xor
subl
lea
mov
sbbl
xor
adcl
div
movzwl
add
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
xor
sub
movl
cmp
movl
jne
mov
mov
sbb
mov
mov
orl
xor
xor
add
add
mov
movl
cmp
movl
jae
mov
xor
lea
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
call
cmpl
jb
mov
orl
xor
xorl
add
lea
mov
movl
mov
movl
cmp
jbe
xorl
addl
movl
jmp
orl
addl
mov
andl
xor
xorl
inc
subl
incl
add
movl
cmp
jb
andl
mov
inc
mov
cmpl
jb
jmp
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
mov
xor
mov
sub
addl
add
sbb
mov
subl
xor
sub
subl
ror
sub
xor
mov
add
mov
mov
mov
sub
and
mov
movl
cmpl
je
cmpl
jbe
jmp
push
call
mov
dec
mov
jmp
mov
negl
sub
subl
xor
movl
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
jmp
outsb
pop
or
push
pop
xor
cld
fwait
lds
push
inc
pusha
addl
and
hlt
cmpsl
out
lcall
xchg
sub
arpl
mov
ljmp
jecxz
stos
jmp
flds
sbb
xor
or
adc
inc
fsts
and
push
sub
mov
mov
fidivrl
scas
stc
xchg
ja
mov
lods
inc
dec
mov
inc
pop
test
and
add
dec
mov
inc
lds
push
aam
jbe
cmpsb
imul
ret
jge
sub
aam
ret
push
cmpsl
pop
sbb
mov
hlt
scas
pop
out
adc
pop
ljmp
je
fadd
sbb
sti
lcall
adc
sti
leave
cmp
mov
iret
mov
jbe
and
mov
dec
sbb
sbb
xor
sub
pop
addl
push
in
dec
pop
push
xchg
pop
dec
mov
push
jbe
adc
mov
jp
push
inc
or
xor
and
das
popf
sbb
sbb
repz
jge
ds
mov
movsl
jmp
lods
stc
pop
ror
jb
mov
addb
push
jecxz
test
sbb
xor
scas
lret
inc
push
adc
fldl
lret
sub
or
out
and
dec
insb
ja
cmpsl
decl
cmp
xor
ret
and
daa
les
mov
jne
dec
mov
call
loop
hlt
xchg
jb
sbb
shlb
rolb
mov
out
push
mov
push
cmp
push
jge
mov
jp
mov
push
dec
sahf
imul
jge
data16
ret
cmp
les
ret
sub
out
add
es
pusha
stc
cmp
mov
popa
xlat
inc
cmpsl
cs
sub
ret
jecxz
adc
test
push
bound
mov
fcmovnu
frstor
out
mov
xchg
ret
sbb
out
and
jo
gs
pop
popf
pop
outsl
test
lds
push
jo
xor
dec
or
nop
xlat
push
ffreep
push
xor
add
pushf
jge
test
out
pop
outsl
out
add
fstpt
mov
leave
xchg
lods
mov
test
mov
adc
pushf
into
rcrb
pop
mov
inc
push
insl
xchg
mov
notb
out
and
push
das
lret
cwtl
add
dec
imul
rcrl
mov
or
mov
fldcw
push
push
arpl
pop
pavgb
call
mov
inc
cmp
and
push
push
cmpsl
sti
dec
int
xchg
sub
test
push
fstl
mov
mov
ret
ds
lret
sub
out
pop
adc
les
lock
mov
test
xlat
cld
test
jnp
jle
dec
cmp
adc
pop
loopne
jne
or
push
push
jbe
or
lods
andl
adc
std
scas
minps
mov
scas
pop
add
imul
clc
mov
jg
pop
mov
lods
pop
and
ja
lret
sub
call
xor
shll
test
add
sahf
stc
inc
fnsave
xchg
jge
les
js
mov
ja
mov
dec
xchg
rorl
or
xchg
int3
sbb
and
out
mov
jae
pop
aad
imul
test
sbb
fadd
loop
test
jo
notl
imul
jecxz
adc
push
hlt
jmp
filds
pop
shrb
inc
sub
cli
in
clc
mov
push
mov
rcrl
out
jae
push
inc
adc
pop
xchg
sub
aad
xor
mov
in
aad
or
test
cmc
or
cmpsl
add
adc
push
inc
push
lret
hlt
adc
aaa
sbb
xor
xchg
enter
jno
dec
cwtl
xor
dec
or
sub
sub
aaa
jmp
sahf
lods
cwtl
mov
pop
inc
nop
dec
fstps
movsl
mov
add
outsl
cwtl
sbb
jno
fwait
jmp
sbb
pop
ja
mov
push
sti
cmpsb
mov
jmp
dec
sbbl
jb
mov
mov
mov
orl
outsl
pushf
xor
in
ljmp
fistpll
roll
jbe
mov
dec
pop
mov
add
add
daa
adc
aad
aas
cmp
xchg
xchg
test
mov
mov
mov
sub
ljmp
jl
pop
push
movsl
loopne
sub
in
sarl
jae
test
xchg
in
dec
xor
test
xchg
push
mov
add
movsb
test
addr16
push
addb
out
inc
and
add
sub
loopne
add
repz
loop
ret
jecxz
lds
jle
sbbl
mov
stc
fiadds
mov
xchg
xchg
ret
xor
or
jle
xor
pop
mov
jne
int
dec
jle
outsl
js
popf
int3
inc
mov
shll
ja
push
pop
aas
bound
lret
xor
fsubr
nop
aas
stos
arpl
push
add
insb
scas
aaa
les
add
mov
jbe
movsl
push
sti
mov
mov
inc
push
lcall
popa
mov
or
ja
in
inc
xchg
pop
mov
pop
aad
dec
lahf
clc
subl
lret
inc
jne
and
insl
jecxz
mov
xor
add
push
test
popf
popf
imul
dec
outsb
adc
or
lret
adc
in
xchg
scas
xchg
pop
das
cmp
mov
imul
add
test
mov
sbb
sub
je
xchg
dec
arpl
outsl
or
dec
push
movsl
jp
scas
int
sbb
mov
pop
inc
pop
jne
inc
mov
dec
xchg
xor
repnz
ss
clc
mov
jmp
adc
jae
pop
xor
inc
incb
mov
adc
and
push
jmp
pop
and
repnz
out
or
fisttps
fwait
dec
mov
test
push
loop
adc
aad
test
mov
xor
loope
dec
lret
mov
push
pop
xor
dec
insb
int3
push
fistpll
push
ljmp
cld
mov
jne
adc
push
sbb
or
cmp
jbe
sbb
dec
push
cmpps
sbb
clc
mov
ljmp
or
ljmp
adc
pop
lods
mov
xor
inc
dec
jge
mov
lret
js
imul
out
fnstenv
jecxz
outsb
clc
jne
push
aad
dec
stc
clc
pop
dec
xor
mov
and
test
xchg
insl
icebp
or
mov
movsl
out
out
cmp
and
jno
test
sub
push
cmp
out
inc
inc
dec
inc
nop
insb
dec
cmpsl
and
sub
pop
cmpsl
sub
adc
pop
xchg
xor
call
pushf
jmp
rorl
movsb
in
push
cmpsl
cli
mov
jns
xchg
sbbl
sub
adc
push
out
adc
and
mov
sti
mov
mov
sti
out
xchg
shlb
js
dec
cmpsl
ja
mov
cmp
test
xchg
cwtl
daa
adc
mov
std
jnp
jp
clc
inc
addr16
nop
mov
leave
add
jg
mov
nop
mov
jge
jo
loop
push
mov
xchg
aam
or
sbb
sahf
or
adc
push
shll
xor
imul
pop
dec
repz
pusha
or
add
sbb
inc
xchg
push
sbb
dec
mov
xor
mov
jge
push
shrl
shlb
jb
lods
jne
dec
mov
add
enter
add
mov
cmp
and
push
mov
xchg
sbb
stos
bound
sbb
outsl
cmp
pop
cmp
sbb
pop
or
push
mov
lds
and
sub
loop
ficoms
mov
fsubrl
call
xchg
cmpsb
dec
adc
fs
mov
or
lret
mov
mov
mov
pop
sbb
pop
aaa
dec
lods
dec
cwtl
data16
shll
test
push
pop
sub
xlat
mov
cmp
and
fbld
cmpsb
ret
pop
pop
or
popf
dec
scas
xlat
ss
out
fidivrs
lret
xor
mov
shrl
xlat
mov
push
lret
mov
cmp
inc
push
cs
cmp
ret
ror
movsb
adcb
mov
ds
cli
mov
jae
adc
pop
pop
iret
cmp
jecxz
mov
repnz
aad
loope
mov
std
or
clc
jg
ret
jo
mov
and
inc
xchg
inc
cwtl
in
cmp
testl
mov
xchg
outsl
pop
jge
int
dec
lods
push
fsts
das
xchg
loopne
cmpsb
sbb
pushl
pop
xchg
aas
out
cmp
xchg
lret
xor
xchg
cmp
insl
push
xor
sarb
fcompl
in
pop
xchg
jo
pop
jmp
sub
jbe
loope
test
sbb
xor
dec
lcall
shlb
loopne
sbb
das
xchg
push
cmp
sbb
add
xor
lods
ret
cmp
mov
pop
jo
push
push
call
adc
imull
iret
test
fdivrp
fldl
arpl
push
push
mov
cmp
adc
mov
out
stc
divb
lock
inc
inc
push
dec
inc
loope
dec
lea
movsb
sbb
jb
xchg
and
sarl
and
lods
xchg
flds
push
push
xor
pop
xor
add
shlb
popa
sub
jecxz
cmp
sub
push
jb
ss
xchg
mov
mov
mov
and
std
lods
int
nop
dec
mov
xlat
ljmp
int
jge
test
outsl
mov
fisubl
mov
repz
test
or
add
mov
dec
cmp
cmp
jg
ror
movb
mov
mov
insl
rcl
pop
test
or
push
es
and
mov
push
mov
lcall
push
lock
mov
outsl
addr16
nop
xchg
xor
inc
mov
jg,pt
cmp
jae
inc
fidivs
dec
rorl
cmp
ret
fwait
xor
pop
out
iret
or
lds
push
or
test
loopne
iret
movsb
stos
outsb
decl
jp
mov
loop
lods
mov
stos
cli
adc
inc
and
push
push
or
test
mov
jg
aaa
jae
fbstp
push
dec
lcall
mov
push
sub
jecxz
sbb
or
lods
jno
dec
lods
mov
lds
push
in
jecxz
iret
pop
fsubs
push
incl
mov
fnstenv
shr
movsl
bnd
sub
mov
push
in
mov
in
addr16
pop
push
stos
jo
mov
and
jae
dec
dec
dec
xor
stos
iret
enter
jge
xor
inc
push
popa
es
outsb
jge
lock
or
cmpsl
push
sti
dec
cltd
out
xor
fidivrs
out
jns
fadds
sbb
sub
les
lock
adc
sub
fisubl
or
andl
push
jle
rcr
pop
mov
xchg
xchg
pop
arpl
push
dec
cmp
sbb
mov
mov
and
pop
js
insb
ljmp
pusha
out
adc
lea
outsl
lds
mov
mov
loop
cmp
sti
push
mov
cmp
fs
xchg
cmp
mov
sbb
sbb
pusha
sarb
subb
fdivrs
dec
xor
faddp
insb
push
xorb
icebp
inc
xchg
mov
jg
adc
pop
jmp
push
imul
xchg
push
in
imul
in
adc
fcoml
stos
das
popa
dec
imul
loopne
xlat
sbb
pop
mov
fnstcw
das
mov
mov
enter
repnz
pop
outsb
hlt
icebp
cmp
pushf
and
xor
adc
mov
push
cmc
jns
inc
imul
xchg
inc
andl
mov
xor
out
rorb
call
sub
jae
mov
ss
bound
rorl
pusha
lahf
lds
cmp
scas
xor
mov
lods
xchg
adc
mov
jne
mov
inc
cmp
sbb
pop
insl
outsl
jbe
pop
mov
sbb
mov
fwait
mov
mov
jae
cmp
aad
jle
mov
sbb
jo
mov
xchg
push
ljmp
adc
and
lock
and
push
repnz
outsb
push
sbb
sbb
inc
decb
cwtl
sahf
push
loopne
add
in
jmp
es
lea
mov
daa
push
lcall
pushf
insb
mulb
add
fldt
imul
jne
movsl
scas
sbb
or
out
test
lcall
pop
loopne
es
int3
jae
fs
outsb
push
int
lahf
xor
lock
fcmovbe
jns
mov
jo
popf
sub
test
inc
stos
push
xor
les
lret
mov
inc
cmp
fxam
movsl
imulb
repz
push
lea
aas
xchg
fsubrl
and
arpl
sbb
sub
popf
out
fs
xchg
xchg
lahf
mov
add
adc
aas
fcmove
or
shlb
ret
hlt
in
mov
xor
or
mov
out
mov
cmp
mov
sub
jb
or
clc
dec
sub
or
mov
fstpl
vphadduwd
jae
ret
les
loopne
xor
and
xchg
dec
int3
ret
push
out
inc
fwait
xor
iret
sar
xchg
sbb
jp
xor
jge
lahf
sbb
push
mov
cli
leave
push
cmp
inc
jge
mov
dec
inc
lahf
sbb
xchg
inc
imul
popf
imul
test
loopne
iret
je
mov
cmpsb
jae
add
call
int3
dec
push
mov
icebp
sub
add
loop
in
imul
inc
jo
bound
xlat
shll
daa
and
inc
jns
add
mov
setle
movsb
sbb
xchg
cmc
dec
ficomps
cwtl
cli
and
fildl
fwait
out
loope
out
insl
xor
adc
imul
push
cmpsb
dec
lods
mov
pop
dec
cmpsb
mov
cmp
mov
mov
ljmp
mov
imul
push
push
ret
add
cld
jns
pop
jp
pusha
xchg
mov
add
adc
imul
rcll
jmp
movsl
xchg
mov
in
mov
xchg
sbb
or
cmp
pop
inc
mov
subb
jns
mov
cli
imul
sbb
insb
fs
xchg
sbb
jbe
icebp
jge
sub
pop
cmp
jecxz
and
dec
outsl
or
aaa
push
in
dec
nop
cli
pop
sub
xor
sub
add
jmp
insl
sar
xchg
jmp
scas
lahf
std
pop
divl
ds
addl
mov
fdivs
inc
push
or
arpl
push
inc
lods
out
cmp
cmc
test
addb
dec
rclb
mov
jns
inc
inc
add
ds
in
out
inc
push
jecxz
inc
nop
int3
jle
xchg
pop
adc
push
ficoml
test
mov
xchg
and
les
rorl
jl
nop
movb
add
lock
test
js
dec
mov
pop
sbb
fcomi
jno
xchg
icebp
cmpsb
xor
repz
cmp
dec
insl
adc
ss
outsb
or
jnp
and
adc
xor
je
fprem1
fmull
outsl
icebp
xchg
inc
pop
andl
cmpsb
ret
dec
shrb
add
das
and
clc
gs
and
lret
mov
or
in
int
xchg
jae
mov
mov
jno
xor
cmp
mov
imul
sbb
and
iret
enter
pop
and
enter
push
mov
pop
xor
or
ljmp
aas
fs
gs
jp
repnz
stc
dec
nop
mul
scas
mov
and
shl
push
stc
pop
or
or
and
cmp
cmp
les
mov
fcomp
push
call
in
xchg
lods
jb
pop
mov
xchg
mov
jl
jl
stc
pop
xor
filds
dec
jg
mov
sbb
xchg
inc
mov
xorb
lcall
lds
xchg
inc
fs
inc
fmull
jno
mov
push
lret
jb
fldl
testl
mov
adc
icebp
in
add
push
mov
decb
mov
cltd
jp
data16
jno
xchg
popf
sub
addr16
mov
lret
insl
pop
or
fists
push
repnz
push
idivl
add
pop
xchg
dec
add
or
cld
ret
ret
pusha
jg
jecxz
dec
sbb
out
xlat
daa
add
push
jns
loop
sub
daa
stos
jns
movsb
fidivrs
mov
xor
rclb
push
dec
cwtl
scas
adc
out
push
into
pop
pop
outsl
insl
sbb
push
mov
arpl
mov
push
pushf
or
addl
js
loopne
dec
inc
in
xor
xchg
push
repnz
and
jo
fsts
jne
outsb
movsl
in
je
inc
stos
out
ja
cmp
and
arpl
push
lret
mov
add
mov
mov
incb
sub
and
and
and
in
push
shr
shlb
int3
jo
lds
push
dec
mov
fst
pop
fidivrs
movl
dec
mov
sbb
jle
jmp
pop
sbb
mull
mov
dec
mov
das
stos
inc
out
inc
jb
fdivs
ss
push
mov
pushf
pusha
nop
cli
out
sbb
push
es
mov
cmp
mov
adc
insb
mov
repnz
xchg
xor
icebp
adc
adc
adc
imul
inc
movsb
and
insl
rep
ficoms
lods
cmc
pop
xor
test
movsl
lods
fstpl
xor
xor
sbb
jae
xor
lods
dec
fimull
jmp
cltd
popa
negl
stc
mov
data16
test
pushf
mulb
cmpl
adc
inc
dec
stc
xor
push
std
cli
sbb
int
lcall
adc
pusha
notb
addr16
pusha
mov
xor
mov
mov
lock
movsl
shl
sub
push
mov
cmp
fisttps
adc
pop
and
mov
out
ficompl
sub
nop
imul
rcl
sub
mov
pop
aaa
cmpsl
into
ret
pop
rcll
or
mov
and
fs
pushf
lds
dec
es
pop
daa
iret
jmp
add
ret
or
mov
pop
in
mov
xchg
or
test
jge
lcall
push
jmp
mov
scas
lret
add
jp
jge
cmc
andb
loop
pop
or
mov
add
aaa
mov
jmp
ljmp
aas
out
loopne
or
popf
int3
roll
mov
sub
sub
mov
jns
loop
dec
imull
mov
bound
mov
aam
xchg
test
cmp
paddd
xlat
adc
sbb
cli
add
xchg
xchg
cld
ret
mov
jl
jge
aam
dec
sub
imul
adc
jbe
mov
sbb
iret
mov
dec
insl
pop
mov
mov
and
repnz
and
inc
shl
sub
add
stc
sub
cmpsl
js,pn
cmp
cmp
inc
jl
adc
dec
jge
mov
pop
int
push
add
sbb
imul
popa
dec
mov
inc
inc
syscall
jl
es
xor
push
nop
fisubrs
divb
push
mov
mov
or
gs
mov
and
mov
jmp
mov
in
icebp
insl
aaa
dec
mov
clc
outsb
int3
or
push
mov
add
loope
mov
and
cmp
xchg
rorl
inc
fstl
sti
mov
movsl
ja
in
mov
xor
outsb
das
sarl
xchg
stc
cmpl
mov
xchg
jae
dec
test
adc
imul
test
andb
orl
jno
jno
mov
cmp
inc
sub
or
ljmp
int
fsubs
push
pop
push
pushf
xchg
arpl
dec
xchg
jmp
or
jns
cmc
jle
inc
and
sbb
mov
mov
and
psraw
xor
cmp
insl
sub
mov
or
jp
fnstcw
fldl
adc
cmp
fs
arpl
stos
cltd
insl
out
mulb
xor
xchg
inc
and
dec
shrl
les
lea
mov
hlt
fsubs
adc
mov
out
mov
fcoml
pusha
lods
cmp
cmp
add
ds
clc
sbb
sub
das
test
lods
push
outsl
idivl
in
ret
and
shlb
fdivs
in
cltd
xchg
and
sub
and
or
sub
xor
in
jecxz
and
lcall
imul
push
mov
mov
bound
sub
out
cmpsb
aam
rcrl
xorl
mulb
out
mov
fidivrl
push
xchg
fdivrs
popa
test
and
sub
xor
lret
popf
aam
testl
sub
scas
jp
and
mov
lret
mov
cmp
pop
xchg
stos
ja
dec
push
movsb
or
xchg
mov
das
jne
hlt
mov
adcl
mov
pushf
xor
mov
fistl
shlb
jnp
js
sub
lret
fisubrl
out
sbb
insl
or
shll
ss
push
lock
fidivl
cmp
push
test
dec
jle
rcr
lret
movsl
xor
or
cli
loope
inc
aas
repz
out
pop
notl
pop
mov
test
mov
rcll
in
idivb
xor
xchg
pop
push
pop
movsl
leave
cmp
jno
pushf
xor
sub
js
add
ret
loop
pop
xchg
inc
jp
pushf
sub
sub
ret
inc
cwtl
roll
dec
dec
dec
cs
add
aas
call
outsb
add
jmp
mov
sbb
dec
cmp
cmpsb
not
jmp
shrb
lods
in
or
imul
mov
lods
fcmovnbe
sub
xchg
mov
mov
mov
push
pop
push
push
jmp
dec
loop
sbb
and
ss
popf
lock
xchg
sbb
sti
mov
test
in
jge
addr16
mov
in
mov
sub
mov
scas
pop
mov
pop
pop
daa
pop
mov
jne
hlt
in
xor
mov
sbb
xor
sti
sbb
xor
inc
test
aaa
jnp
jmp
pop
insb
push
lods
push
pop
movsl
cltd
ja
xor
popf
sbb
mov
out
fwait
jno
mov
xor
or
inc
loop
mov
aas
shl
jg
mov
xchg
fmuls
loopne
or
into
cmpsb
adc
decl
add
in
imul
add
test
push
xchg
dec
xchg
adc
ds
xor
in
hlt
fs
and
push
xchg
add
stos
lods
mov
mov
mov
rcrb
cmp
jae,pt
or
add
arpl
adc
mov
pop
xor
and
outsl
or
xchg
lods
jl
add
adc
popa
jmp
fsubrs
xor
fidivrs
fisttps
mov
mov
fdivl
fsts
lods
std
popf
adc
js
add
ss
aad
xor
or
ret
add
nop
or
pop
out
pop
xorl
or
popa
out
sbb
add
xor
enter
leave
xchg
aas
lret
mov
push
and
enter
lcall
in
push
adc
imul
and
mov
xchg
adc
adc
mov
sbb
imul
pop
xchg
daa
jns
lret
int3
mov
shl
xchg
push
repz
push
jmp
rclb
mov
inc
push
cmc
shl
inc
inc
push
mov
shll
sti
push
jno
mov
mov
push
test
adc
cmp
xor
clts
loop
xchg
push
cmp
adc
lret
cmpsb
clc
or
lea
aaa
and
adcb
xchg
ret
pushf
pop
out
sub
sub
movsb
fstps
mov
cmpl
xor
jmp
jne
stos
leave
jg
lock
xor
je
lret
dec
mov
std
and
int
imulb
sub
xchg
dec
dec
and
cmp
outsl
xchg
add
push
adc
jns
jnp
cmp
jae
hlt
jnp
dec
or
sub
sub
jge
ret
jge
rclb
xchg
push
jne
les
or
inc
mulb
orl
in
mov
int3
cltd
and
push
dec
xchg
cmpb
outsl
cmpsb
pop
xorl
mov
cs
roll
mov
mov
mov
mov
sub
dec
dec
xor
inc
roll
and
cmc
add
xchg
int
mov
ret
out
aad
fsubr
in
sbb
fstpl
and
cmpsb
dec
mov
jo
inc
aam
cltd
pop
cmp
dec
int
push
sub
pop
inc
xchg
mov
sahf
mov
jae
addl
mov
pextrw
je
add
jae
mov
inc
xor
cli
aas
icebp
mov
or
push
pop
and
cmpsb
sbb
push
inc
enter
push
cmpps
cmpsb
into
jnp
mov
inc
mov
aaa
dec
outsb
into
lds
xor
push
dec
mov
inc
iret
pop
xchg
rol
mov
iret
or
push
mov
mov
lahf
iret
mov
nop
aas
cmc
les
out
mov
cmovb
gs
ss
dec
push
add
subb
adc
mov
push
mov
mov
lds
xchg
roll
outsb
sbb
addr16
insl
ljmp
fidivs
add
adc
dec
dec
fildll
lahf
mov
lods
fdivr
sub
mov
pop
inc
and
xor
mov
pop
aaa
mov
stc
mov
mov
sub
sbb
sbb
sub
and
mov
insl
jge
cltd
nop
jge
xor
fsts
xchg
or
mov
neg
xor
pop
in
sbb
cmp
aad
aam
pop
cmp
add
jecxz
mov
jo
repnz
fs
out
mov
xor
dec
daa
in
shlb
mov
pop
or
xor
or
call
repz
inc
out
jne
mov
fwait
adc
imul
add
es
inc
sti
push
jl
addb
mov
adc
jo
popf
pop
cli
enter
aaa
mov
ss
scas
adc
push
stos
add
mov
fmuls
add
xor
xorb
cld
push
adc
cmp
sbb
sub
movnti
mov
jb
xor
das
xchg
adc
lahf
aas
push
into
sbb
push
push
jl
js
lods
int3
or
shll
addb
mov
sub
dec
cmpb
mov
or
sarl
inc
push
icebp
sbb
fucompp
cmp
arpl
leave
lea
js
mov
insb
daa
movsb
jl
mov
push
jns
mov
test
adc
cmpsl
out
and
stc
pusha
das
sub
cmp
iret
and
aas
gs
pop
jnp
cld
gs
nop
mov
sbb
lock
push
outsb
gs
dec
jle
mov
jl
stc
insb
cmc
and
inc
pop
jmp
mov
lahf
mov
push
push
push
in
rol
add
xchg
xchg
fidivrs
scas
pop
jb
into
test
mov
minps
rclb
push
or
pop
add
gs
divl
inc
pusha
xor
xchg
xchg
out
sbb
imul
xor
jne
xchg
sbb
mov
imul
loope
rclb
pop
cwtl
xor
push
out
pusha
shrb
or
push
sbb
push
adc
jnp
popa
jb
sub
lods
out
test
fists
iret
sbb
xchg
in
dec
xchg
or
push
sub
sbbb
mov
std
xchg
jno
sti
out
in
out
into
popf
xor
push
ss
mov
jl
xor
mov
test
mov
mov
ds
add
pushf
setno
xchg
test
jne
lcall
addr16
or
negl
cmpsb
mov
add
sbb
ss
rclb
aad
lods
movsb
lret
insb
cltd
sbb
mov
sbb
adc
fmulp
xor
das
cmc
or
dec
mov
cmc
sub
push
mov
test
mov
outsb
std
gs
cmp
dec
repz
lods
jl
mov
push
push
add
mov
gs
push
das
pop
lret
jl
mov
jo
std
mov
sub
mov
popl
mov
call
fstpl
test
mov
sarl
inc
push
jbe
jmp
push
pop
sub
and
outsb
jge
mov
ja
mov
mov
cli
mov
ret
jg
push
popa
jmp
or
mov
dec
fcomps
push
lcall
fsubrs
lahf
or
jp
cmp
xchg
push
cld
sub
push
adcb
les
repz
in
es
lds
int3
popa
icebp
cmp
mov
xchg
or
mov
push
mov
pop
daa
dec
jno
mov
sti
pop
jle
jmp
test
movsl
ret
out
jbe
movsb
dec
out
cld
xchg
popf
inc
jmp
jnp
test
ljmp
push
pop
mov
jecxz
xchg
stos
inc
cmp
lahf
shrl
sbb
sbbl
sbb
jo
adc
mov
popa
into
sbb
pop
imul
mov
mov
ret
out
pop
and
add
stos
in
int
mov
orl
cltd
clc
stos
repz
cmp
pop
cltd
or
push
es
imulb
push
ret
mov
std
adc
adc
lret
insb
jle
pop
add
push
sbb
sbb
or
mov
adc
std
jne
sarb
xchg
push
cmp
insl
cmp
sbb
cmpb
mov
pop
or
js
add
fisubrl
adc
adc
sub
mov
jle
sbb
and
pop
rorb
add
add
pop
pop
pop
leave
ret
xor
ret
push
mov
sub
andl
xor
xor
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jb
movl
push
mov
adc
jmp
xchg
xchg
add
stos
repnz
dec
out
or
addl
mov
std
pushf
xchg
cmp
cltd
lea
cmp
mov
cmc
jnp
or
push
mov
les
outsl
cmp
loopne
and
mov
pop
mov
lcall
xor
test
icebp
xor
int3
sahf
or
and
dec
gs
inc
lock
and
fs
dec
dec
jo
mov
mov
clc
test
sub
mov
stos
xchg
scas
dec
pop
pop
mov
or
xorb
cmp
idivl
test
inc
pop
leave
cmp
adc
sub
imul
push
ficomps
lret
roll
leave
jecxz
push
adc
mov
add
test
inc
dec
ffreep
sub
ljmp
xchg
cmp
mov
cmpsb
mov
add
mov
fistpll
mov
jecxz
inc
call
mov
in
adcb
add
push
pop
cmp
mov
add
mov
rcrl
push
imul
adc
pop
scas
das
inc
loop
insl
call
lret
xor
repnz
push
lret
lock
mov
roll
inc
adc
mov
push
bound
mov
mov
xor
imul
stos
xor
out
out
jge
dec
movsl
insl
mov
jge
add
sti
aas
push
daa
xchg
cmpsl
or
lcallw
mov
push
ds
mov
sbb
push
cmp
cmp
mov
fwait
pop
dec
mull
cs
jbe
xchg
icebp
xchg
outsb
icebp
daa
add
jbe
ficoms
pop
popa
adc
clc
inc
shr
ljmp
jns
cmpsb
clc
add
and
outsl
loopne
lret
xor
psubusw
cltd
sub
js
sarl
movhps
mov
scas
je
iret
add
inc
dec
ret
loopne
fwait
push
and
shll
jmp
sub
push
addb
test
add
pop
lock
das
xchg
test
pop
cs
aad
out
and
or
push
xchg
xchg
cmp
push
cmp
push
stos
aam
push
clc
push
lret
push
pop
call
cmp
jmp
and
xor
clc
xchg
aaa
add
jge
dec
xchg
rclb
pop
lcall
inc
inc
ljmp
fstpl
ss
sahf
dec
jp
or
jno
ret
pop
or
mov
pop
mov
and
sarb
ljmp
ja
lock
stc
dec
iret
mov
stos
dec
or
xor
aad
mov
mov
cmc
mov
int3
push
jmp
mov
add
fwait
lods
push
aaa
push
pop
push
adc
sbb
add
mov
add
push
lds
fs
test
loope
lods
add
loop
mov
mov
inc
outsb
cwtl
data16
sub
inc
out
jle
mov
mov
adc
xchg
scas
cmpsb
push
fdivs
mov
movsb
cmp
jnp
popf
test
or
data16
and
jns
popa
push
or
adc
addr16
push
adc
xor
pop
cmp
repnz
cmp
aam
inc
data16
in
sbb
xchg
nop
insb
push
sub
mov
add
aam
xchg
scas
inc
cmpsl
mov
pop
add
in
inc
dec
je
idivl
xorl
shll
sti
and
js
mov
pop
cmp
out
or
aas
stos
fs
popa
test
adc
dec
movb
dec
mov
push
mov
sub
xchg
inc
loopne
inc
add
stos
loop
ret
in
insb
pop
mov
aam
ret
inc
test
movsl
pop
mov
into
loope
and
inc
push
add
inc
xchg
push
stos
push
sti
cmc
repnz
and
loope
mov
decb
jbe
pcmpgtw
fsubr
mov
in
and
xor
outsw
pop
fildl
fldcw
jl
sbb
pop
test
into
xor
jb
outsl
out
clc
dec
test
test
aaa
notl
fadds
addr16
sub
jmp
nop
cmp
pushf
ljmp
stos
xchg
repz
hlt
in
pop
mov
pop
mov
out
mov
int3
cli
add
push
add
insl
outsl
out
ffreep
xor
imul
pop
aam
insb
scas
and
mov
jo
outsb
cmc
and
lcall
and
out
pop
cmp
sbb
add
divb
jo
add
push
xor
xchg
movb
sbb
int
jae
int3
shll
test
pop
pop
jae
mov
outsb
jg
push
adcb
mov
adc
pusha
gs
loopne
das
mov
push
sbb
xchg
stos
stos
int
mov
mov
dec
pushf
shl
loopne
fistpll
jnp
cli
and
or
fwait
jecxz
xor
fcmovu
mov
push
mov
pop
iret
cld
xchg
lcall
mov
repz
jb
rcl
iret
push
or
pop
sub
adc
popa
imul
push
mov
inc
mov
fwait
enter
xor
dec
fadds
inc
mov
popa
xchg
pop
jge
sub
in
and
cwtl
mov
push
fcomi
movsl
mov
add
xchg
xchg
mov
mov
mov
mov
enter
std
icebp
sub
rcrb
je
dec
sbb
in
mov
add
push
loop
dec
aad
insb
xor
cli
mov
xor
pop
arpl
xchg
mov
mov
pop
aaa
imul
js
xchg
or
and
insb
jle
fbstp
pusha
cmpsb
push
insl
mov
push
inc
pop
fld
cmp
mov
xchg
xchg
mov
cmp
dec
jmp
fsubs
push
pop
test
add
pop
cmp
jecxz
inc
das
jmp
dec
inc
pusha
sbb
jbe
ljmp
pop
pop
pop
mov
fiadds
mov
adc
xor
jle
enter
push
or
lds
pmulhuw
int3
and
inc
mov
sub
jl
bound
jl
pop
and
lcall
fs
repnz
cmp
bound
xlat
dec
nop
cmpl
cmp
adc
outsb
out
pop
call
jp
or
jns
cmp
push
int
and
mov
adc
xchg
cwtl
and
imul
jae
ja
pop
jmp
and
and
jle
cmp
lds
shll
mov
sbb
sbb
or
xchg
ficoml
mov
outsl
or
mov
enter
push
adc
rcl
and
mov
pop
and
sub
adc
jmp
stos
pop
cld
mov
adc
push
out
push
stos
jo
outsl
movsl
cwtl
in
mov
test
test
ja
cmpsl
lods
inc
mov
aaa
or
in
jno
jecxz
fwait
daa
out
pushf
pusha
or
addr16
xchg
xlat
xor
fstps
sbb
adc
test
cltd
pop
dec
lret
nop
in
jmp
cmp
pop
inc
daa
adc
add
inc
shl
iret
cmp
lret
in
and
loopne
or
pusha
out
jb
push
inc
aaa
into
movsl
test
jno
aam
aaa
daa
mov
imul
pop
rcr
or
push
test
adc
lret
xchg
sub
pop
or
lock
aam
daa
fsubrs
jp
xchg
fists
dec
inc
arpl
addr16
divl
push
fst
pop
fs
cmp
sahf
or
add
cmp
nop
or
and
pushf
jo
outsl
andl
into
push
mov
scas
enter
outsb
rcll
fcoms
xchg
mov
add
repnz
test
push
jbe
xchg
ss
mov
cmpb
sub
lea
test
fnstsw
mov
pop
xchg
shlb
push
sub
mov
std
and
mov
jbe
es
in
xor
dec
sub
or
lds
mov
mov
test
jno
xchg
jbe
xchg
int
and
popf
jbe
sbb
stos
shrb
and
shll
out
cld
lods
pop
push
test
xchg
mov
enter
mov
fsub
fisubl
pop
stc
xchg
cmp
jge
sbb
lods
jo
fnstsw
pop
fwait
adc
or
hlt
jb
mov
jae
xchg
ret
rcrb
popa
test
or
insl
fsubl
lret
xchg
cmp
pusha
js
mov
push
stos
sub
xchg
add
pop
jmp
mov
inc
repz
outsb
mov
mov
mov
cmpb
pop
dec
lock
jg
ja
cli
fcos
add
in
and
aaa
or
xor
movsb
and
test
sahf
pop
mov
push
addr16
test
pop
divb
jnp
sbb
inc
das
fld
ret
fsub
push
or
jo
loopne
adc
les
mov
cs
pop
jmp
js
mov
cwtl
std
fstpl
push
xlat
pop
adc
push
sahf
aam
xor
xor
xchg
xchg
mov
decl
mov
mov
out
js
clc
mov
push
and
in
mov
mov
lahf
aad
push
out
out
rclb
out
xorl
out
inc
lret
loop
dec
push
dec
push
stos
inc
clc
xor
lock
jnp
sub
js
movsl
cmp
icebp
lret
lock
testl
cwtl
dec
push
sti
lret
insb
push
scas
mov
jnp
ljmp
test
jbe
cmp
push
into
ss
or
aam
push
xchg
scas
mov
shrl
cmpsl
mov
jne
xor
pop
sub
sahf
out
sub
mov
xchg
js
mov
das
push
fstpl
sahf
mov
or
sti
cwtl
nop
int
leave
or
sub
sbb
mov
out
xchg
xchg
add
fs
addl
cmp
lret
sub
addr16
sbb
and
push
lret
adc
dec
push
fs
ljmp
dec
cmp
jge
pop
daa
add
ljmp
out
imul
loop
addr16
push
mov
jno
insl
push
fs
cmp
mov
stos
push
data16
cmp
or
push
rcrl
mov
xchg
adc
test
and
subb
lods
and
mov
mov
das
adc
push
add
call
push
out
mov
ja
jae
lcall
pushf
or
jne
push
loopne
sub
aas
add
sbb
lret
xchg
test
inc
loopne
jmp
repz
inc
sbb
fwait
dec
sti
test
mov
ja
pusha
mov
dec
jbe
push
pop
iret
pop
mov
xlat
and
arpl
pop
mov
test
pop
sbb
dec
mov
lods
sbbl
mov
xor
or
lods
int3
lods
jbe
xchg
add
aad
push
dec
xchg
xor
pop
outsb
shl
xlat
mov
pop
inc
into
xor
out
fisubrl
scas
lahf
mov
lods
adc
cmpsb
jae
adc
loopne
cwtl
inc
outsl
jp
add
add
shrl
and
xchg
dec
fsubs
es
mov
mull
push
roll
push
push
mov
out
ret
mov
sbbb
xchg
std
repnz
adc
mov
mov
and
xor
pusha
insl
cmpsl
rol
xchg
loope
mov
mov
jmp
dec
dec
add
divl
jl
xchg
xor
sub
or
xlat
inc
xchg
shrb
mov
mov
xchg
mov
loop
test
fmul
sbb
mov
call
repnz
fwait
push
mov
sub
sbb
in
sbb
sbb
mov
rolb
sbbb
les
push
xor
je
outsb
inc
jae
lcall
mov
das
ret
jno
pusha
sbb
sahf
xor
or
pop
adc
das
insl
sub
and
clc
mov
mov
out
test
and
mov
test
int
xchg
pop
xchg
adc
fcompl
popa
mov
shlb
sub
adc
cmc
dec
push
mov
dec
cmp
mov
testl
jae
pop
mov
ret
and
sub
rolb
xchg
fwait
sub
pop
or
add
mov
mov
loopne
frstor
jecxz
jmp
dec
shrb
cmp
dec
dec
xor
mov
mov
fisubrl
loop
xchg
int3
xchg
aam
or
sub
adc
adc
hlt
push
xchg
stc
or
cmp
xlat
dec
pop
sbb
inc
stc
mov
dec
sub
dec
and
mov
mov
es
test
int3
mov
in
fdivl
stos
sub
ret
roll
mov
shlb
stos
je
orb
hlt
jae
rol
arpl
sub
pop
enter
jb
sbb
inc
jle
out
pop
adc
ret
jmp
mov
outsb
and
mov
les
push
jae
fstps
lcallw
shr
adc
test
cmp
sub
sbb
adc
and
or
and
cmp
jae
mov
jecxz
lcall
subb
jle
ret
sub
cmc
mov
push
fyl2x
jp
or
xor
mov
fwait
add
ljmp
push
mov
sahf
sub
lods
sbb
push
jno
mov
lea
push
hlt
pop
lock
push
movsb
mov
arpl
cmc
scas
ss
incl
hlt
push
jae
out
cwtl
inc
inc
sub
sti
jno
push
ds
pop
inc
add
mov
into
jecxz
fildl
clc
test
sub
fcompl
jns
dec
daa
fwait
repnz
sahf
lret
xor
icebp
cmp
mov
pop
pop
mov
cmp
fisttpl
int
and
aad
in
mov
int
pop
jbe
hlt
or
jge
insb
xchg
cs
adc
pop
xor
das
fs
xchg
xor
mov
adc
sbb
dec
cmp
mov
mov
ss
pop
out
mov
mov
out
insl
push
dec
rorb
lahf
sub
test
cmp
inc
mul
mov
cltd
dec
cmp
iret
jb
inc
xor
mov
push
mov
jmp
jns
fwait
cmp
sbb
out
pusha
xchg
outsb
push
and
test
pop
mov
adc
mov
repz
in
test
subb
es
xor
imul
imulb
imul
in
inc
in
lcall
sbb
test
push
cmp
mov
mov
mov
jecxz
cmpsb
lods
test
and
out
into
and
adcl
pop
xchg
and
jb
cmp
push
adc
mov
mov
stos
add
aam
and
or
lea
xchg
pushf
lock
xchg
loop
out
inc
je
mov
xchg
icebp
xchg
ljmp
js
clc
js
outsb
xchg
insl
popl
sub
jmp
decb
jecxz
cmp
das
scas
jbe
xchg
mov
push
sub
pop
cmpsl
jge
sbb
push
inc
cmp
or
jno
mov
pop
add
cmp
push
lret
pop
std
xchg
cs
sub
psrad
mov
fwait
adc
push
sbb
lods
or
sub
ja
and
add
out
or
pop
std
jecxz
inc
lret
ss
xchg
inc
xor
test
cs
sbb
popf
sbb
es
xchg
mov
int
xchg
push
aaa
mov
aaa
cmp
daa
stc
inc
xor
jbe
xchg
repnz
and
je
data16
jns
mov
aaa
add
stos
movsb
adc
or
dec
adc
dec
ljmp
dec
xor
fwait
in
mov
push
cmp
stc
outsb
jl
lahf
je
arpl
mov
orb
xor
test
xchg
jb
enter
outsl
push
xchg
scas
cs
jb
ja
decb
sbb
mov
stc
add
decb
imul
pop
aam
mov
sbb
mov
pcmpeqb
jns
loope
push
or
push
out
xor
out
inc
loop
and
orb
cld
sub
je
xchg
mov
sarl
mov
fildl
mov
addl
and
mov
or
pop
pop
subb
fldl2e
push
xor
call
pop
inc
xor
or
outsl
stc
inc
aaa
or
mov
cmpl
pop
fcmovnu
xlat
mov
sub
jge
stos
fst
push
dec
insb
add
or
cmpsl
xor
mov
xchg
adc
test
xor
dec
cmpb
adc
in
inc
call
dec
cmp
jns
sbb
mov
sar
add
outsb
lret
negb
and
jmp
test
fsubs
mov
pop
into
icebp
jl
jbe
iret
and
psrlw
mov
fwait
jl
push
push
daa
cld
imul
cmpsl
or
dec
andl
lret
sub
inc
stos
leave
push
fldcw
jp
mov
dec
aam
test
cmp
popf
xchg
mov
jbe
mov
addr16
dec
dec
leave
fdivrl
mov
xchg
mov
mov
xorl
pop
xchg
ljmp
loopne
insb
in
shl
test
adc
out
mov
loopne
add
jbe
mov
xchg
add
mov
int
push
lods
ss
jl
adc
ja
cmc
movsl
or
sbb
fisttpll
sbb
scas
lock
nop
into
std
cmc
iret
inc
add
pop
add
add
shll
les
adc
and
jle
mov
aam
mov
mov
enter
mov
mov
add
mov
loopne
push
pop
push
test
adc
pop
mov
mov
jbe,pn
adc
subl
sub
clc
in
adc
mov
test
outsl
pop
lods
lret
add
jo
lock
fdivr
add
push
xchg
or
dec
cmpsl
std
mov
push
repz
movsl
cmp
pop
outsb
mov
jb
jne
je
flds
adc
cmp
pop
fsubr
stos
iret
jle
sub
and
add
aad
sub
and
pop
out
mov
lds
and
arpl
mov
std
xchg
dec
push
and
sbb
jns
push
test
lock
add
leave
mov
and
fisubrs
inc
jmp
or
cmp
out
or
pusha
test
lahf
iret
and
pushl
adc
in
stos
rol
mov
icebp
fwait
pop
and
push
jge
jmp
xchg
and
lods
fmuls
and
movsb
mov
lock
dec
scas
pop
fnstsw
cmp
and
ret
mov
cmp
stc
aam
add
ret
mov
jmp
mov
repz
mov
inc
inc
mov
pop
pop
sub
inc
popf
mov
adc
dec
into
push
in
inc
bound
sti
dec
outsl
inc
out
cli
mov
pop
shl
arpl
push
in
pop
or
push
repnz
mov
xor
lcall
sahf
leave
xchg
dec
pop
inc
xchg
iret
cmc
shrb
lods
fistl
cmpsb
insb
xor
ds
and
sbb
adc
lods
pop
add
and
jmp
sub
and
mov
insb
add
add
outsb
out
sub
inc
dec
xchg
mov
scas
ret
pushf
repz
lcall
lea
cli
lcall
and
enter
add
mov
and
adc
outsl
xor
addr16
jle
repz
mov
sub
imul
inc
call
lahf
in
push
inc
push
popa
mov
push
add
shlb
dec
xchg
mov
jae
xchg
das
xor
or
dec
stc
cmp
and
subb
bound
cmp
xor
push
into
int3
lea
sahf
mov
xor
es
mov
dec
xchg
push
push
or
pop
outsl
jno
xchg
fisubrs
int
or
into
insb
mov
push
xchg
jge
incl
stos
inc
sti
pusha
in
lea
call
push
fsubp
push
leave
pop
or
dec
enter
mov
ror
add
test
movsb
ss
outsl
stc
shlb
push
sbb
mov
icebp
xchg
mov
lcall
pop
inc
faddp
push
jbe
add
jns
pop
mov
scas
icebp
sahf
orb
jge
cwtl
pusha
add
or
lcall
cmp
adc
push
jo
and
rcrb
push
lret
das
mov
bound
mov
add
pop
lret
je
sbb
and
dec
call
scas
sub
cmp
jle
test
repz
popf
or
insb
cltd
ret
cmpsb
stos
xchg
dec
dec
inc
adc
out
sti
outsl
xchg
dec
xor
jle
mov
out
imul
adc
lea
jmp
ret
sub
push
xchg
pop
pop
mov
stos
cld
sahf
sahf
out
dec
xchg
add
sbb
cmc
pop
rclb
mul
push
xor
dec
xchg
inc
or
mov
test
mov
in
in
and
sbb
stos
iret
mov
dec
icebp
inc
pop
jae
xchg
and
mov
scas
push
pop
jmp
add
jle
xlat
fldt
add
jg
cltd
imul
or
lahf
pop
lock
shlb
scas
cmp
out
adc
and
mov
jnp
sbb
xchg
ror
in
sbb
mov
push
pop
hlt
mov
leave
leave
mull
dec
mov
lcall
mov
lahf
test
xor
mov
insl
or
xor
stc
sbb
out
movsl
ret
shlb
dec
mov
dec
scas
std
or
imul
push
in
cmp
fisttps
mov
lods
mov
push
repnz
dec
lods
push
pushf
dec
or
add
lret
inc
out
mov
pop
mov
clc
in
inc
nop
or
ret
cmp
xchg
iret
movsl
sbb
pop
xchg
and
movsb
aaa
mov
mov
mov
add
cmpsl
xor
lret
cmp
mov
fsubr
push
lods
push
js
xor
shlb
rcrl
mov
mov
dec
sarb
cmp
push
sarb
rorl
les
jae
mov
jl
data16
imul
fnsave
mov
fwait
in
pop
into
in
dec
sub
xor
imul
add
scas
push
repnz
xchg
outsl
ja
mov
outsb
xor
nop
lods
adc
pop
std
xlat
cmp
jg
mov
mov
aam
pop
sbb
aad
out
dec
lods
add
push
addb
dec
out
movsl
jo
inc
adc
mov
popf
xor
ss
adc
sub
push
imul
stos
push
or
arpl
mov
push
mov
push
test
push
mov
xor
cmpsb
mov
in
out
daa
andb
or
in
pop
and
sarl
arpl
adc
gs
xchg
xor
out
xchg
push
in
sub
cmp
pop
pop
push
xchg
cmp
cmpsl
add
pop
pop
dec
dec
add
pop
push
pandn
mov
xor
lods
out
outsb
and
xor
push
jp
out
lock
idivb
adc
jl
mov
arpl
jg
movsl
jecxz
into
out
dec
sbb
cmp
test
mov
pop
aas
sahf
ret
xlat
mov
pop
mov
cmc
shl
pop
mov
test
push
pop
sub
mov
pop
hlt
pop
mov
xor
xorl
sub
sbb
hlt
cmp
addl
mov
nop
out
test
sti
shl
mov
and
addr16
testl
pop
mov
adc
pop
or
xchg
test
push
xchg
popf
adc
mov
mov
jno
push
lcall
cmpsl
push
fs
mov
fistpll
fisubrs
aad
push
sub
mov
inc
cmp
dec
lret
orb
repnz
sbb
into
sahf
inc
inc
or
jge
add
fiaddl
push
popf
cmp
inc
hlt
aad
push
ja
push
mov
sbb
out
jnp
xchg
jl
cwtl
sahf
nop
fs
mov
jae
and
mov
pushf
push
sub
ljmp
pop
dec
cmpsb
inc
dec
xchg
cmp
push
repnz
mov
xchg
aas
inc
aad
sbb
cmp
jmp
js
hlt
jle
cmp
xor
sub
les
shlb
jo
push
loop
xor
adc
es
inc
xchg
in
mov
sti
daa
subl
dec
iret
inc
mov
arpl
cld
pop
daa
out
outsb
shl
imul
outsl
imul
repnz
pcmpeqd
insb
cmp
jae,pn
sub
dec
in
pop
nop
les
dec
cld
jl
jns
adc
sti
add
test
cmp
xor
xor
aas
movsl
sbb
inc
dec
pop
push
and
fcompl
pusha
xchg
outsl
popa
pushf
shrl
cmp
imul
gs
or
rcr
push
insl
pop
and
arpl
test
mov
andb
add
movsb
pop
addr16
int3
push
subb
mov
js
sub
fsubrs
in
add
sbb
cmp
pop
xor
lea
push
arpl
mov
lahf
push
fwait
mov
mov
jb
shll
daa
aad
ss
out
jo
in
sbb
punpckhbw
jl
sahf
mov
pop
lea
data16
sbb
jb
scas
xchg
push
or
xor
push
mov
push
sub
clc
or
insl
popfw
adc
pop
dec
cmp
daa
jmp
dec
push
es
xchg
jo
and
add
and
and
repz
mov
out
xchg
pop
imul
mov
ret
sbb
insl
or
lods
sbb
out
mov
jecxz
testb
popa
xchg
mov
pop
mov
sbb
inc
sbb
adc
ret
arpl
mov
push
ret
jecxz
sti
jnp
xchg
into
sbb
in
ds
loop
push
jmp
push
add
lret
in
les
inc
jg
mov
mov
mov
xlat
cld
pop
push
ds
inc
pop
daa
popf
push
aaa
stos
xor
adc
or
mov
adc
sub
inc
pop
inc
mov
data16
test
and
popa
cltd
adc
loope
add
jg
dec
shlb
outsl
aaa
add
outsl
mov
push
aaa
mov
outsb
push
lcall
adc
push
mov
mov
push
pop
xor
pop
outsl
pushf
mov
pop
push
std
dec
xchg
xor
lods
push
daa
mov
in
fwait
add
and
and
and
cmp
fadd
bound
mov
insl
sbb
mov
iret
push
test
lock
add
mov
movsl
inc
add
adc
ljmp
cmp
mov
add
mov
jnp
shr
jmp
scas
mov
dec
push
shr
jecxz
xchg
dec
dec
into
repz
aam
xlat
dec
jns
cld
nop
jb
lods
fldt
ja
jp
insl
fdivrl
jbe,pn
pusha
test
pop
xor
clc
xlat
pop
push
ss
inc
pop
xor
sbb
or
shll
xor
nopl
and
jg
fstl
mov
jo
pushf
adc
inc
outsl
push
mov
call
mov
and
mov
dec
xlat
jo
ret
enter
mov
fistpl
and
bound
cmp
mov
push
pop
dec
popa
int3
addb
mov
cmp
jb
shll
or
adc
xchg
test
stos
push
fimull
xchg
out
outsl
mov
insb
push
cmp
cmp
lret
mov
fmull
dec
dec
adc
pusha
xchg
pop
push
out
ficoml
mov
jno
mov
paddq
cmp
push
inc
add
sbb
jmp
cmp
pop
shlb
mov
pop
push
jg
lods
daa
dec
and
andb
insb
mov
mov
test
imul
lcall
imul
mov
cmc
pop
in
aam
sub
int3
rclb
mov
mov
jge
mov
scas
bound
push
add
adcl
push
fmuls
in
or
notl
add
mov
mov
loope
xor
mov
adc
aas
sub
cmp
in
aam
sbbl
cmp
data16
xor
adc
idivb
aad
ficompl
dec
rolb
pop
cld
insl
inc
lcall
outsl
popl
cmp
mov
sbb
out
cmp
cli
aam
nop
xlat
movsl
sbb
xchg
sbb
push
test
xorb
cmp
xor
cmove
push
sub
jb
jae
data16
and
sub
daa
jne
int
and
or
fcompl
pop
rcrb
mov
mov
call
mov
cli
sahf
cmp
mov
rcll
les
stc
cwtl
push
xchg
xchg
sub
sbb
dec
inc
outsb
push
mov
adc
sbbb
push
cmp
jge
and
sbb
xchg
mov
dec
dec
mov
jg
stc
dec
in
int
cmpb
fstpl
sub
icebp
cvtps2pd
aad
iret
or
dec
in
test
je
imul
inc
sub
das
xchg
or
aam
jb
rclb
or
push
push
ret
shlb
nop
cmpsb
cmp
mov
sub
cmp
sbb
mov
push
idivb
in
mov
mov
rcl
or
push
sbb
call
lcall
rorl
adc
jle
das
or
mov
das
xchg
fmull
jg
jo
mov
xor
aam
sub
pop
iret
push
sti
pop
push
imul
or
xchg
fimuls
out
or
cli
mov
testb
fcmovbe
cmp
addr16
fiadds
mov
jb
jns
rolb
dec
add
addb
sbb
push
fwait
dec
add
movl
mov
jmp
sbb
les
push
jge
cmpsl
jns
addl
mov
outsb
es
mov
mov
jmp
sub
sub
push
xor
aam
ret
adc
inc
jl
sub
cmp
lds
scas
test
and
fucompp
scas
jo
xchg
out
fs
arpl
dec
jo
add
inc
ficoms
jecxz
cmpsl
push
mov
add
push
mov
cs
cmp
stc
inc
imul
sbb
dec
fnstcw
xor
adc
mov
and
or
ds
nop
adc
movsb
scas
add
lods
popf
xor
adc
pop
jns
jmp
adc
loop
sub
jne
testl
mov
mov
out
ds
xchg
cltd
aaa
lret
mov
stos
sarb
shrl
enter
inc
dec
cltd
sub
int
lcall
movb
mov
addr16
and
inc
or
xor
push
jecxz
pop
push
scas
icebp
into
dec
ljmp
test
loopne
addr16
fs
popa
sub
stos
leave
cltd
cwtl
loop
adc
pusha
mov
out
sbb
cwtl
movb
lahf
mov
bound
pop
mov
mov
fistpll
clc
mov
or
add
jb
ret
mov
add
dec
sahf
imul
ffreep
ljmp
mov
pop
cli
loope
pop
enter
cmp
inc
lock
fdivrp
push
jge
enter
cmp
add
rclb
and
fcompl
out
xor
xor
cmc
sbb
pushf
and
les
data16
and
inc
loop
cmpsb
adc
jle
ret
enter
inc
and
mov
stos
lret
mov
out
movsb
ds
cwtl
or
out
cmpsl
inc
xor
sbb
imul
stos
je
rcll
jmp
call
sbb
std
cmc
xchg
cltd
push
sbb
gs
leave
push
js
ret
sbb
test
int
adc
adc
cs
xor
sub
mov
push
mov
pop
fidivs
pop
scas
pop
inc
das
outsb
ja
sub
enter
ds
mov
sbb
insb
stos
loope
inc
mov
mov
sbb
pop
inc
mov
mov
movsl
push
nop
lods
inc
push
into
pop
inc
lahf
repnz
fcomi
sbb
dec
outsb
push
cmpsl
movsb
push
into
and
sbb
scas
lock
rolb
cs
sbb
push
adc
jae,pn
in
aas
sbb
jns
cmpsl
or
fiadds
sub
fwait
and
sahf
in
xchg
sbb
fimull
rcrb
in
movsl
jmp
lcall
jg
jo
dec
popa
inc
inc
push
sarb
sub
dec
jbe
jle
addl
out
jl
inc
fsubr
pusha
addl
in
les
mov
mov
push
add
xchg
sbb
aas
adcb
jb
ficoml
cmp
mov
cmpsl
and
sub
cmc
addr16
ja
xor
xor
mov
cld
adc
sub
test
jbe
sbb
out
sbb
cmp
enter
into
inc
xlat
imull
jae
or
add
inc
bound
iret
ljmp
pop
dec
dec
push
insb
dec
sbb
test
stos
outsb
aas
arpl
pop
stos
lret
rcrl
xchg
xor
cltd
lret
xchg
ret
cld
mov
or
push
cmp
stc
gs
mov
and
mov
sbb
add
xchg
or
fidivrl
xchg
or
push
movsl
gs
enter
pop
jno
call
push
fdivl
xlat
int3
cmp
clc
lahf
cld
call
cld
mov
pop
mov
in
pop
xor
add
adc
push
cmpsb
inc
mov
push
aas
push
in
xlat
or
popf
ds
sub
push
lods
clc
leave
push
leave
lock
add
inc
push
enter
push
sub
xor
xchg
cs
sub
add
pop
cmpsb
jmp
sbb
or
or
in
sbb
cs
ljmp
xor
lahf
or
mov
rolb
das
sub
cltd
inc
push
mov
ja
sub
xchg
sub
orl
fistpl
mov
push
dec
repz
test
int3
inc
fmuls
sti
imul
adc
add
add
js
test
xchg
mov
cmp
dec
lahf
ret
pusha
scas
push
pop
icebp
les
ror
lcall
jbe
es
imul
push
adc
icebp
xchg
mov
adc
fneni(8087
int3
loopne
imul
aad
pop
iret
addb
test
mov
pop
in
hlt
sub
sbb
xor
inc
mov
pushl
cmp
sbb
cmp
and
xchg
cmp
jge
jecxz
pop
lcall
push
mov
cmc
xchg
aad
sar
mov
jae
call
shrb
popa
ss
xchg
cwtl
inc
repnz
scas
fmull
out
sti
repnz
or
std
stos
sbb
xchg
jmp
fcoml
imul
cwtl
cmp
mov
dec
jns
inc
inc
es
fildll
faddp
add
out
mov
ss
xchg
jns
cmp
pop
daa
xor
push
fisttpl
arpl
clc
cmp
ljmp
push
cmp
test
mov
pop
shl
addr16
ficoml
mov
inc
call
sbb
fstpl
pop
enter
push
adc
and
xchg
xchg
push
sarl
xor
sahf
sahf
dec
xor
fidivl
js
fdivrs
sbbb
push
lcall
loopne
shlb
or
dec
xchg
movsl
loope
cwtl
adc
iret
jnp
js
popa
xchg
and
pop
mov
jl
int3
pusha
xchg
aaa
xor
jbe
inc
neg
leave
mov
divl
out
imul
or
loopne
scas
clc
push
cwtl
xor
arpl
pop
scas
or
imul
and
adc
aaa
jl
inc
xchg
mov
jne
push
ds
and
cmpsl
mov
insb
lret
rorb
cmp
cli
rcrl
push
addr16
adc
cmpsb
and
nop
pop
mov
jecxz
xorb
jo
aaa
inc
incl
jmp
test
push
sbb
sub
and
add
int3
popl
and
xlat
lods
sub
push
dec
xor
jge
or
mov
sbb
mov
inc
lea
or
or
jne
cld
jl
sub
cmp
aaa
sbb
push
loop
xor
nop
jle
sbb
lahf
mov
aas
ret
mov
imul
pop
xor
out
and
ds
popf
or
shl
dec
test
jl
mov
and
outsl
js
mov
mov
mov
cmp
outsb
shlb
lahf
es
shr
push
cmp
add
fisubl
cld
or
mov
xchg
rolb
addr16
sub
and
sbb
mov
jns
push
scas
cmp
rcr
mov
cmp
cmp
inc
ds
movsb
push
push
inc
dec
mov
mov
cmp
mov
sub
mov
outsl
mov
adc
ljmp
mov
add
pop
arpl
or
mov
shll
inc
cmc
xor
dec
addr16
das
lods
xchg
mov
stc
jo
jle
fldt
pop
idivb
sub
ss
xor
push
jp
iret
sbb
cli
mov
or
pop
shl
leave
mov
movsb
jl
stos
pushf
sbb
ljmp
test
push
les
fnstenv
push
shrb
mov
jne
xlat
int3
loopne
outsb
leave
aas
sub
lea
cmp
mov
std
movb
call
cld
leave
jp
cli
mov
testl
adc
xor
pop
ja
dec
jb
cli
dec
inc
adc
dec
clc
out
addb
es
nop
idivb
enter
popa
and
fwait
out
push
leave
ret
jecxz
dec
imul
call
dec
int3
mov
ds
push
lock
mov
movsl
rcl
data16
sub
outsb
mov
out
enter
cmpsl
dec
das
shl
jp
push
movb
pop
xor
hlt
lcall
sbb
out
adc
sbb
mov
xchg
mov
pop
sahf
ljmp
cwtl
sub
mov
push
jbe
xor
push
push
fcomps
fimull
sub
ret
in
mov
cmp
dec
sbbl
stos
push
and
je
scas
jo
fisubrl
mov
outsl
in
rorl
iret
pop
daa
js
out
jnp
push
out
add
adc
xchg
cmp
dec
cmpsb
pop
sub
sub
and
xchg
push
mov
inc
lods
jbe
add
pop
or
or
xor
mov
test
je
jmp
dec
lahf
and
test
negb
mov
mov
dec
sub
sahf
lock
push
ret
enter
inc
mov
fsts
sbb
jb
mov
add
mov
cmp
xor
pusha
call
loopne
in
mov
mov
or
testb
cwtl
pop
lods
mov
imul
add
jno
xor
popf
arpl
add
dec
xchg
pop
jl
mov
sub
mov
pop
dec
ljmp
jo
add
mov
cmp
and
je
fsts
rorb
out
shll
jb
sbb
mov
in
fs
in
insb
adc
stos
fwait
cli
pop
dec
aaa
xchg
test
mov
idivl
scas
or
movsl
dec
cmp
pop
sub
orl
and
sub
mov
or
dec
data16
loope
push
dec
inc
push
cmp
jae
cli
js
movsb
sub
and
or
add
cld
inc
cwtl
pushf
xchg
pop
fisttpll
call
mov
mov
out
adc
loope
pop
ds
pop
ljmp
jb
push
xor
ds
loope
data16
cmpsl
push
sbb
fstpl
iret
jp
data16
nop
out
add
shlb
lret
lods
cmpsb
mov
adc
in
fldt
rorl
cmp
mov
rcrl
mov
shl
mov
adc
and
mov
mov
xchg
xor
js
in
cli
dec
iret
jnp
in
or
jmp
in
aaa
xchg
jle
shll
je
mov
pusha
mov
popf
data16
cld
sbb
das
jecxz
mov
xlat
arpl
mov
jae
adc
pop
add
cmpsl
lock
js
sub
movsb
lock
mov
std
stc
nop
and
sbb
scas
push
fcmovnbe
adc
clc
add
popa
loop
je
adc
pusha
ret
fcompl
push
push
jae
sub
in
cmpsl
btr
inc
push
jle
jb
in
cmpsb
mov
sub
sub
fildl
mov
adc
jle
enter
mov
loop
mov
mov
xlat
or
inc
mov
dec
pop
mov
mov
sarb
mov
add
fistps
subb
jae
popf
and
cs
rclb
adc
pop
mov
test
sub
scas
jp
lock
cs
movsb
test
xchg
sbb
sub
sub
shl
push
lret
enter
shll
fcmovnb
jg
arpl
xchg
loope
sbb
pop
outsb
mov
gs
scas
std
mov
push
loop
lret
sbb
cld
arpl
mov
test
xlat
cmp
lret
fldenv
fldenv
jp
adc
mov
mov
and
call
mov
and
add
lahf
push
cld
adc
jmp
mov
jecxz,pn
outsb
mov
sub
pop
jne
imul
rcll
jmp
cmp
subb
xor
push
xor
out
and
rclb
mov
popf
cld
in
sbb
pop
les
dec
addr16
mov
jge
call
xchg
pop
or
call
lods
imul
into
sbb
pop
sub
punpckhwd
or
and
sahf
adc
inc
dec
or
or
std
pop
mov
test
mov
pop
aas
mov
or
xchg
inc
lds
ret
sbb
sbb
push
mov
push
inc
mov
inc
cmp
and
loopne
cmp
bound
pop
xchg
or
jne
inc
pop
arpl
mov
cltd
add
pop
ja
xchg
loop
arpl
push
bound
jno
adc
xor
mov
push
nop
ja
sbb
push
inc
mov
fldcw
gs
aas
pop
int
cwtl
ffree
pop
or
xchg
hlt
mov
mov
xchg
jo
in
loope
and
xor
jg
mov
sub
mov
adc
arpl
imul
test
pop
in
cmpsb
icebp
stos
aam
data16
lahf
enter
mov
add
jbe
mov
xor
sbb
cmp
daa
push
cmpsl
in
jle
add
xchg
mov
mov
filds
lods
shr
sbb
add
mov
mov
pop
dec
cld
push
jmp
push
cmp
jge
out
inc
js
push
ret
mov
inc
jp
adc
cmp
out
fcmovb
add
cmp
ficoml
xchg
dec
in
ljmp
aad
xchg
fsubrp
sti
mov
sub
mov
mov
jp
pop
rolb
push
addl
mov
fisubrl
and
inc
sbb
jo
add
jns
sub
fdivr
lahf
insb
sub
mov
inc
mov
lds
popf
call
iret
jl
xchg
dec
mov
dec
xor
jne
and
xorb
push
les
jp
shrb
bound
xchg
cmp
inc
push
pusha
fnstenv
loopne
lcall
mov
mov
das
mov
mov
or
shll
xchg
lods
mov
pop
rorb
adc
adc
inc
xchg
jge
or
adc
xor
in
xchg
cld
pop
pop
mov
cmp
inc
cs
jmp
add
xchg
pop
xlat
or
pop
cmp
iret
jo
into
scas
push
enter
movsl
fdivrs
in
pop
pop
movsl
lds
and
pop
jbe
aas
push
mov
shrl
ss
add
rcll
and
jo
sub
xor
jno
add
movsb
rcrl
sti
jne
out
sub
or
lret
cs
loope
pop
in
les
xlat
and
dec
in
push
inc
into
out
or
call
add
push
xchg
sub
sub
push
vpaddb
dec
mov
pop
mov
and
sbb
loope
daa
imul
out
push
or
popa
dec
dec
jns
xchg
xor
adc
mov
and
int3
repz
ds
cmpsb
mov
push
inc
mov
mov
rcrb
inc
out
and
insb
sbbb
xchg
dec
popf
test
sub
xchg
movsb
in
aas
sbb
sbb
mov
push
lahf
das
pop
cmpsl
cltd
fisubrs
sub
sarl
or
mov
lret
push
rclb
adc
scas
jnp
shl
out
push
jbe
jecxz,pt
daa
fyl2x
or
je
push
and
int3
ret
int
xchg
scas
lods
sahf
lock
sub
lretw
subb
std
andb
cmpb
loopne
test
xor
adc
hlt
jae
fwait
xchg
ljmp
adcl
add
aas
sub
adc
mov
adc
scas
shrb
ljmp
shr
popa
xor
and
repz
lock
push
aas
jl
setl
gs
dec
pop
or
mov
add
jge
sbb
mov
dec
xor
push
popf
fcoml
ret
insb
xor
xchg
sahf
pop
pop
sbb
add
icebp
outsb
pop
fldenv
cld
add
movsl
mov
pushf
in
sbb
xchg
mov
xlat
pop
xorl
jle
pop
in
sbb
or
fldl
mov
pop
jno
jno
adc
mov
bound
cltd
test
jg
push
out
ret
jmp
sbb
pop
xor
push
mov
repnz
mov
push
lcall
pop
xor
jg
pop
dec
dec
xlat
inc
and
or
bound
add
push
lds
jbe
jbe
sub
pop
push
lcall
cmp
mov
shrl
dec
adc
imul
cmovae
pop
loopne
jno
pop
mov
loopne
cmp
mov
fwait
stc
fs
popf
fcoms
inc
fyl2x
mov
adc
sbb
rcrb
xchg
imulb
add
lock
cmpsb
test
jno
dec
or
arpl
and
sti
gs
push
sbb
mov
xchg
mov
and
mov
adc
fldcw
cmp
sarb
mov
pop
mov
out
movsl
imul
out
cmpsl
add
bnd
push
loop
jae
cmp
je
pop
mov
in
mov
je
lods
xchg
daa
mov
jecxz
jno
mov
bound
ja
dec
data16
sub
mov
lods
mov
cs
mov
pop
sarb
ljmp
or
jns
jae
xchg
cmp
aad
sbb
fisttpll
addb
loop
adc
scas
rcr
cwtl
fidivs
shr
scas
inc
jmp
adc
iret
lea
jp
gs
mov
mov
xchg
test
xor
xor
popf
or
clc
push
repz
movsl
lcall
or
push
inc
std
rorb
jle
sti
stos
pop
sub
inc
sub
dec
mov
enter
pop
and
mov
mov
cli
outsl
divb
clc
inc
cltd
cmp
adcl
mov
jns
stos
cmpsl
data16
out
xor
pop
mov
add
mov
in
pop
xlat
es
mov
dec
sub
int
or
push
fcmovnb
outsl
cwtl
in
addl
decb
push
das
lds
mov
test
jp
daa
iret
lea
in
test
push
jle
dec
push
adc
and
imull
outsb
jle
shrb
aaa
lea
jmp
shll
test
adc
xor
xorb
jmp
mov
add
outsb
in
jo
jne
xchg
imull
paddsb
inc
xchg
push
jge
fidivs
sub
aaa
or
cmp
dec
sti
xchg
mov
cmp
imul
adc
and
jmp
in
das
xchg
and
dec
sbb
loop
mov
gs
clc
and
test
fstpl
lea
call
outsl
aas
stos
lods
arpl
sbb
mov
mov
test
jnp
int3
imul
adc
cmp
sbb
mov
lcall
mov
je
jnp
mov
sub
pop
imul
in
arpl
pop
push
xor
fidivl
jmp
and
js
stos
mov
mulb
cmc
xchg
xchg
mov
sub
data16
test
mov
add
popf
aaa
sub
bound
inc
arpl
sbb
push
repz
insl
fsubrl
int3
dec
nop
mov
push
out
push
fdivrl
and
lods
or
sbb
dec
mov
pusha
sub
mov
jl
sbb
pop
jmp
mov
mov
push
adc
push
cltd
inc
mov
shlb
sbb
pop
insl
leave
insb
dec
mov
mov
dec
pop
mov
add
insb
dec
jb
shr
in
icebp
pop
pop
pop
cmp
and
popf
cmp
iret
test
in
pushf
bound
bound
lds
out
ret
arpl
std
js
jecxz
addr16
shl
aas
je
out
sub
xchg
pop
push
push
mov
add
pop
ret
push
outsb
iret
adc
sub
lcall
cmova
scas
aaa
sbb
int3
mov
dec
cmpsl
lret
or
in
jmp
push
rorb
or
movsb
cwtl
push
call
adc
mov
out
pop
pop
xchg
sbb
mov
repnz
jg
xchg
adc
jle
jns
in
loopne
xor
adc
cmpsb
enter
stos
int3
fwait
adc
minps
push
loopne
adc
loopne
pop
cmp
stc
call
and
push
adc
inc
out
bound
fistps
cmpsb
dec
jo
push
mov
fdivp
in
pop
repnz
and
cli
test
jmp
outsb
adc
into
dec
pop
scas
xchg
rcll
rcrl
test
fnsave
loop
cmp
jg
dec
pop
mov
das
into
mov
jmp
pop
decl
das
cmc
je
in
gs
inc
gs
les
notb
enter
jbe
xchg
push
rcll
xor
and
out
mov
xchg
mov
test
stos
jl
std
lods
adc
leave
idivl
lods
js
xchg
test
mov
call
or
mov
repz
in
mov
pop
mov
inc
and
aas
sbb
mov
dec
inc
push
xlat
mov
repnz
lock
sub
inc
ret
das
pop
pushf
jns
xchg
xchg
idiv
jl
push
mov
sbb
scas
sub
jnp
push
mov
push
out
cmp
push
add
mov
push
push
addr16
daa
inc
fdivrl
xchg
add
xchg
ficomps
add
mov
xor
repz
sub
popa
enter
and
cmpsl
fnstsw
das
mov
in
and
shlb
cltd
movb
pop
aad
mov
imul
cmpsb
cmp
xchg
pop
dec
lea
dec
clc
cwtl
sbb
mov
lods
xor
adcb
ljmp
sti
push
cld
sbb
mov
and
xchg
sbb
inc
sub
pop
jp
andl
jbe
movsb
fs
ljmp
mov
pusha
sbb
mov
xchg
rdrand
cmpsl
pop
jnp
xor
and
adc
adc
sub
aaa
mov
jge
test
xchg
and
fcmovnb
jb
xor
gs
fstpt
sbb
push
out
jp
xor
mov
int3
cmp
adc
push
lea
adc
inc
aam
mov
sbb
fcomp
out
dec
xor
push
add
pop
pop
lahf
pushf
inc
dec
cltd
iret
jo
pop
hlt
repz
call
int
rep
shlb
xlat
xchg
rol
lcall
divb
insb
in
lods
in
mov
in
aam
int
mov
cmp
or
kmovb
jmp
in
push
sbb
imul
push
pop
lea
rcrl
push
in
gs
jmp
adc
call
pusha
pop
insb
popa
fnstcw
xor
sbb
mov
addr16
and
lcall
out
repz
cli
push
xor
xchg
loope
ret
ja
xchg
dec
lret
into
sahf
out
add
sbb
mov
cmpsl
xchg
dec
sub
dec
outsl
test
sbb
jecxz
jmp
xchg
int
sti
jae
call
outsl
int
and
ret
push
jbe
fldl
push
xor
stos
cltd
jo
subb
fs
ds
xor
jne
iret
push
aas
out
jg
ljmp
pop
cwtl
push
xchg
pop
sub
sbb
push
push
inc
cmpsl
out
je
lcall
xorb
pop
adc
mov
add
or
bnd
lds
mov
and
jb
lock
rol
cmc
imul
fmull
mov
enter
mov
jno
in
jb
cmpsb
sti
add
loopne
mov
push
sti
mov
ljmp
or
and
lds
test
pop
push
stos
shl
pop
std
fnstcw
dec
push
stos
adc
scas
lcall
add
popa
pusha
rclb
jnp
mov
shrb
aad
cli
push
cmp
adc
ss
adc
out
xchg
sbb
or
and
repz
pop
jmp
test
jmp
sahf
dec
insl
sub
fmull
mov
xor
mov
scas
mov
pop
pop
shlb
mov
inc
mov
and
mov
aad
addr16
icebp
in
in
jo
movsl
sti
push
mov
enter
mov
sbbl
loop
jno
jb
ret
int3
stc
je
ret
call
and
adc
mov
cmpl
pop
shl
ja
insl
mov
and
inc
dec
xchg
insl
dec
in
adc
cmp
xchg
jae
jo
pop
sbb
pop
notb
enter
pop
mov
stc
notl
mov
ret
adc
ret
mov
cltd
mov
xor
sarb
mov
fidivrl
cmpsb
int3
mov
cli
xchg
sub
aam
gs
adc
fsin
pushf
in
outsl
adc
mov
bound
pop
call
gs
push
in
into
out
adc
jg
js
xlat
jbe
out
and
and
mov
mov
push
imul
hlt
jp
cmp
mov
rol
pop
pop
cmp
adc
fcmovnbe
sbb
and
jne
addr16
adc
jns
es
dec
xchg
mov
xchg
loopne
sub
out
loope
and
test
mov
or
repz
ja
mov
hlt
sbb
xchg
cmp
in
dec
add
cli
mov
add
jmp
or
das
loopne
aam
inc
cmpl
std
rcll
push
iret
mov
dec
je
cmovle
cmp
ret
cwtl
or
bound
cmpsb
enter
adc
adc
add
pop
lea
and
add
int
and
pand
add
pop
dec
rorl
mov
cltd
mov
ret
jle
in
arpl
jp
push
add
cltd
addr16
lods
xor
adc
sub
stos
mov
popa
mov
sub
imul
pop
std
test
pop
xchg
mov
loope
add
pop
into
mov
out
movsl
push
mov
sbb
lock
push
into
and
pop
jge
pop
mov
push
xor
dec
fs
dec
cmp
fisubl
out
dec
das
in
ljmp
andb
or
nop
pop
frstor
cmp
push
mov
inc
cmpsb
mov
xor
xchg
into
pop
js
les
sub
add
xchg
hlt
das
lods
lcall
add
pop
jns
jmp
and
xlat
jne
sbb
lods
xor
sahf
mov
push
in
sub
sub
push
cmovp
push
outsl
js
ss
loopne
addl
stos
xor
push
fisubs
push
outsb
adc
push
shrb
inc
lods
fisttpll
push
sub
dec
lods
cld
sahf
xchg
inc
and
out
mov
outsl
mov
divl
jne
jecxz
cmp
jno
cmp
or
sahf
daa
jnp
in
shrl
dec
xchg
in
mov
jae
sbb
loop
std
adc
jle
test
jg
ljmp
mov
and
sbbl
push
jb
int
mov
sub
das
push
jnp
ja
jbe
cwtl
lret
sub
dec
pop
adc
icebp
or
mov
sbb
mov
lahf
mov
imul
lcall
subl
hlt
lods
xlat
and
fstps
outsb
imull
lahf
mov
inc
add
push
adc
adc
lea
fildl
jo
lcall
jmp
imul
cld
imul
sbb
xor
stos
jge
mov
fs
xchg
or
enter
fs
pop
dec
push
pop
push
sbb
push
adcl
xchg
fiadds
andb
orl
mov
lahf
outsl
cli
pop
jae
sbb
dec
int
xchg
sub
ret
mov
mov
inc
mov
fwait
inc
adcb
push
or
push
les
or
inc
jae
or
add
cmp
cwtl
pop
gs
adc
cmp
icebp
leave
shlb
data16
dec
inc
sahf
mov
out
mov
sub
iret
xchg
fisubs
push
pop
sub
sti
mov
sub
test
fdivl
sahf
mov
fwait
stc
dec
pop
push
xlat
bound
sbb
popf
ja
push
dec
mov
fisttps
and
pop
sti
xlat
mov
push
sbbb
pop
pop
fists
insb
dec
add
les
movsb
add
cmc
stos
mov
mov
rclb
mov
js
test
scas
jb
pushw
in
cmp
out
or
lret
rorb
mov
sbb
jecxz
cmp
js
sti
in
aaa
fidivrs
daa
pushl
fcmove
and
jge
fsubrp
hlt
pusha
add
in
push
dec
mov
test
out
adc
mov
mov
add
or
pop
in
movsb
add
and
sti
loope
cli
sbb
fldenv
in
int
movl
cmpsl
insl
stc
iret
sub
sti
int
sti
inc
repnz
or
int3
cmp
xlat
sub
pop
sbbb
cmp
mov
gs
xor
xor
call
or
sahf
mov
fwait
bound
and
dec
in
inc
in
stc
jnp
adc
add
push
test
mov
nop
mov
xorb
lds
outsb
push
insl
nop
xchg
out
add
pusha
scas
testl
and
test
mov
addr16
sub
jne
cmp
shll
fsubl
mov
pusha
xchg
rcrb
xor
cmc
stos
ss
xor
nop
jecxz
or
mov
sbb
lods
aam
mov
or
bound
mov
sub
rcrl
push
xchg
jbe
mov
mov
pushw
sbb
pushf
or
jne
fcmovnb
sub
push
push
and
insb
xchg
not
fcompl
pop
xlat
sub
clc
sbb
pushf
into
mov
mov
mulb
and
je
cmp
push
aad
ret
cli
int
xchg
jp
dec
mov
or
xlat
mov
xchg
dec
adc
xor
outsl
shl
cmc
add
daa
cmp
aas
adc
inc
aaa
push
dec
xor
into
xchg
test
dec
ret
push
add
shlb
xchg
cmpsb
test
lods
stos
sbb
adc
mov
orl
mov
xor
push
and
mov
andl
add
mov
mov
adcl
test
je
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
pushl
call
cmpl
jb
mov
mov
dec
mov
mov
xorl
xor
and
add
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
mov
dec
mov
jmp
mov
add
xor
add
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
call
jmp
jmp
dec
shr
shl
push
mov
adc
ja
testb
test
mov
pop
lret
and
lea
iret
jg
andl
les
pushf
iret
mov
adc
fwait
jmp
mov
mov
repnz
movsl
in
or
pusha
mov
pop
out
inc
pop
push
scas
test
out
cli
cmpsl
lods
cmp
addr16
mov
mov
les
xlat
rcll
in
sbb
lahf
jo
leave
inc
aaa
outsl
xor
mov
idivb
cli
pop
push
push
call
sbb
cmpsl
xchg
add
xchg
mov
rorl
enter
mov
je
mov
push
pop
pop
es
and
jnp
and
mov
mov
pusha
loopne
and
mov
jns
cltd
xchg
or
adc
mov
fcoml
jecxz
test
sbb
adc
aad
orl
ss
movsl
pushf
cmp
push
in
push
enter
mov
rolb
cvtdq2ps
dec
xlat
repz
loop
or
mov
xor
jno
es
jbe
sub
mov
in
cld
inc
pop
pop
movsb
pop
sub
push
arpl
lds
sub
mov
into
and
pop
sub
cmpl
jns
push
aam
sbb
ret
out
in
adc
jp
dec
mov
decl
shr
ret
cld
or
or
or
mov
or
dec
out
in
ss
pop
dec
add
inc
movsb
mov
jno
mov
cld
push
les
push
jbe
imul
or
roll
inc
into
dec
mov
inc
addr16
cwtl
aad
add
loop
je
in
jecxz
mov
cmpsl
mov
sbb
cmp
fiadds
inc
stc
dec
jb
and
ss
jle
movb
subl
ret
ret
ss
outsb
ja
into
imull
test
ds
cmp
dec
inc
mov
or
xor
mov
mov
jle
mov
ficomps
aad
cmp
mov
sbb
adc
cld
adc
xchg
inc
inc
mov
int
cmp
aaa
cmp
pop
test
ret
jnp
aam
mov
mov
sbb
mov
es
lods
lahf
arpl
xchg
push
pop
xchg
ret
mov
daa
test
mov
xor
adc
call
pop
add
es
adc
les
fisttpll
in
mov
pop
repnz
imul
mov
jns
pop
adcl
call
lcall
inc
xor
push
jge
mov
mov
cmp
xor
xchg
scas
lret
fsubrs
mov
cwtl
mov
dec
mov
sti
dec
aas
push
clc
mov
fisttps
mov
out
ja
in
xchg
std
inc
out
repz
mov
pop
aaa
dec
fisttpl
inc
mov
xor
xchg
or
and
fnsave
jle
add
xor
or
jmp
xchg
fdivrs
pop
mov
int
jg
ds
pop
adc
jne
iret
xor
xchg
addl
iret
mov
mov
cmp
and
loope
fs
push
push
sub
sbb
pop
mov
int3
shll
movsb
filds
jmp
movsl
dec
mov
jbe
xchg
outsb
xlat
loop
sub
jns
lret
and
dec
mov
leave
adc
mov
add
jmp
cwtl
imul
pop
scas
xor
imul
sbb
rcrl
bound
stc
sti
mov
fsubrs
push
adc
push
add
fldenv
jg
lcall
adcl
daa
rcrb
jno
iret
pop
and
cld
lahf
push
es
jl
pop
adc
cli
inc
inc
mov
dec
cwtl
cmp
mov
pop
xor
nop
push
mov
int
sub
lcall
jg
mov
ret
mov
aas
push
repz
pop
pusha
shl
repz
movsb
enter
out
fwait
cmp
add
insl
xor
fidivrs
orl
repz
cmp
rolb
ds
cli
cli
out
js
and
int
and
outsl
dec
dec
cmp
popf
idivb
popa
fbstp
jnp
inc
in
loope
mov
sub
daa
ljmp
xchg
sahf
jae
aaa
xor
sbb
out
idivb
sbb
and
movsb
jle
fadds
xchg
lock
hlt
or
add
adc
push
mov
mov
lock
pop
push
or
dec
mov
xor
sti
lahf
cld
jg
jo
and
sub
pop
adc
sub
and
push
popa
mov
xor
cmp
mov
and
pop
fisttpll
in
mov
mov
scas
xor
fistl
ja
sbb
adc
shll
dec
fcmovbe
inc
and
inc
clc
fwait
ja
aaa
stos
call
imulb
and
lods
xchg
dec
fiadds
pop
lds
dec
xchg
jnp
fcomi
fdivs
inc
in
xor
sbb
sar
mov
push
sti
fidivs
std
pop
push
mov
jge
or
mov
lahf
testb
ds
mov
fnstcw
dec
les
les
or
push
mov
sub
add
movntq
out
and
js
pop
sub
repnz
jg
rcl
mov
dec
movsb
addr16
fsubs
inc
sahf
push
or
push
divb
mov
mov
pop
out
call
or
pop
cmpsb
dec
adc
xor
fstpt
xorl
inc
sbb
sar
or
stos
sti
fidivrl
fs
mov
aad
lret
bound
mov
sub
and
sbb
cmpsb
and
jge
movsb
sbb
push
inc
pop
ret
bound
jno
fistps
and
xchg
lock
cmp
dec
repnz
jbe
jl
add
popa
add
and
cmp
movsl
mov
roll
and
mov
es
adc
insb
push
pop
lea
mov
shll
jle
ja
push
mov
andb
xchg
shlb
aad
mov
sub
test
pop
insb
jnp
clc
or
push
stos
arpl
mov
rol
mov
adc
ja
pop
shll
pop
fucomp
xor
loop
adc
mov
pop
add
fisubl
jns
fcomi
test
clc
movsl
cmpsb
iret
aas
dec
mov
insl
jg
pop
ss
bound
test
lods
loope
mov
cmp
jge
push
cwtl
adc
and
sub
imul
insb
xor
repnz
mov
adcl
inc
lea
movsb
shrb
push
pop
mov
cmp
aas
xchg
lock
insl
rclb
jns
pop
cmp
fstpl
push
andb
xchg
fs
mov
push
lahf
adc
inc
dec
out
add
add
ret
mov
popa
lret
add
xor
ja
fld
arpl
fcompl
sub
sub
pop
pusha
daa
ja
test
inc
push
rorb
pop
addr16
inc
outsl
sub
pop
pop
int
sarl
cmpsb
es
sbb
adc
push
pop
lahf
loopne
cmp
sbb
jmp
in
call
in
cmp
sbb
mov
orps
push
pushf
push
pop
fisttpl
push
or
cli
push
aaa
mov
push
dec
ret
push
adc
add
popf
lcall
dec
xor
pop
or
pop
inc
pop
call
les
iret
mov
jbe
push
dec
mulps
js
aaa
daa
aad
dec
jp
fcmovnbe
lods
jo
xor
test
push
push
jle
xchg
dec
pop
mov
xor
repnz
ret
cmpsb
imul
xchg
mov
stc
out
mov
cmp
adc
imul
ljmp
cli
jl
es
divl
adc
dec
sub
fiaddl
std
arpl
adc
cs
dec
and
test
daa
aas
outsb
movsl
and
hlt
out
pushf
or
aaa
mov
in
mov
jle
insl
test
loopne
lcall
and
dec
mov
jle
out
das
bswap
mov
testl
into
pop
xchg
into
rolb
add
pop
pushf
xor
cltd
cmp
pop
adc
fsubrl
decb
stos
movsl
mov
ljmp
xlat
xor
mov
jmp
repz
mov
pop
addr16
dec
pop
bnd
pop
std
popa
out
push
xor
cmp
xchg
ja
mov
jns
outsb
cmpsb
std
adc
pop
loopne
jge
in
dec
mov
dec
loopne
lock
jl
pop
nop
outsl
and
sti
push
push
jg
mov
adc
xor
std
push
xchg
ljmp
lock
cmp
addb
add
fisttpl
ss
sub
mov
inc
sub
ret
or
shrb
mov
push
or
sbb
xor
out
push
cmp
fists
psubusb
aad
lea
cmp
inc
jge
insl
sub
dec
into
mov
in
pop
ficomps
fnstsw
mov
adc
dec
inc
jmp
movsl
ja
loope
xor
aad
xor
hlt
aad
dec
sbb
add
in
sub
cli
in
mov
rorb
xchg
lods
in
das
mov
push
xchg
sub
xchg
add
insl
mov
or
scas
jmp
cmpsl
push
pop
cmp
out
out
test
add
jg
add
mov
adc
lea
sarl
jmp
mov
mov
inc
cmp
cmc
bound
loope
xor
cmp
fisttps
jge
es
lret
mov
push
fsubs
fstpl
mov
das
jnp
inc
jl
fistpll
lcall
lea
xchg
lods
jp
sub
jno
push
jle
xchg
int3
lock
mov
out
push
dec
cld
xor
cltd
xor
push
mov
xor
pop
inc
fwait
cmp
fucomi
jnp
sbb
pop
or
xchg
xchg
push
sub
in
cmp
sbb
adc
xchg
mov
jb
dec
subb
imul
mov
daa
inc
mov
or
outsl
mov
push
icebp
lock
xchg
ss
mov
push
xchg
xor
jle
shrl
push
mov
sbbb
xor
push
out
mov
aaa
push
inc
sbb
sub
cmp
out
test
xchg
out
out
cmp
push
mov
sbb
mov
sub
ffree
inc
data16
add
cli
jl
jo
mov
mov
push
test
sub
xchg
mov
xchg
inc
xchg
mov
or
push
push
lock
negb
push
insb
shll
sub
popf
mov
mov
outsl
mov
test
mov
xor
loopne
cmp
test
mov
call
xchg
fidivrl
mov
pop
mov
andl
fisubl
imul
inc
bound
jecxz
jno
sbb
xchg
dec
pusha
bound
mov
dec
adc
and
xchg
rdtsc
jb
js
and
xchg
in
lods
pusha
xchg
lock
scas
mov
out
scas
sub
add
pop
adc
stos
aam
rcll
repz
cmp
cmp
out
pop
lret
lods
xchg
adc
xlat
or
pop
mov
cmp
push
in
jno
inc
fs
pop
test
mov
jmp
add
xchg
or
imul
or
mov
stos
pop
orb
and
fs
jg
and
push
mov
adc
inc
clc
iret
mov
ja
std
leave
ret
mov
mov
sub
shll
push
push
je
xor
push
jg
negl
inc
jecxz
xchg
xchg
mov
in
je
adc
jl
fnstenv
xchg
jg
dec
je
inc
test
ss
in
clc
xchg
ljmp
inc
push
roll
cmp
push
repz
clc
push
pop
hlt
fsubl
fisubl
jg
sbb
add
pop
mov
into
pop
xchg
ret
mov
loopne
and
or
xor
and
push
adc
pushf
test
mov
mov
sub
rcll
scas
pop
cld
idivl
dec
mov
fdivrl
xor
jns
jecxz
cwtl
imul
pop
mov
sub
popa
cmp
call
cmpb
outsl
les
cmpsl
adc
das
ret
int3
mov
fs
sbb
jns
mov
lcall
insl
xchg
push
popa
pop
mov
insb
subl
push
mov
push
add
lods
dec
out
push
mov
mov
shl
sbb
xor
mov
lods
imul
and
imul
push
push
in
mov
jg
cmp
mov
push
cmp
jne
adc
out
das
add
jmp
mov
mov
sbb
loopne
stc
adc
lcall
jne
out
daa
xor
repz
fsubs
insl
pop
int
and
pop
jnp
test
sbb
test
dec
mov
or
dec
xchg
cwtl
stos
mov
dec
or
sub
notl
pop
popf
add
cmpsl
xchg
sub
pop
inc
into
or
adc
ja
jo
push
jns
push
jbe
mov
add
and
ja
das
lcall
jg
jle
mov
aas
pop
mov
in
cltd
cmp
je
push
icebp
xor
ret
mov
push
or
xorl
scas
aam
lods
xchg
stos
cmp
jmp
dec
mov
push
mov
pop
stos
mov
ljmp
xor
sub
pop
sub
mov
outsl
jb
stos
cmp
cwtl
push
hlt
int3
lods
scas
ror
repz
aam
sbb
or
inc
and
adcb
in
push
inc
xchg
sti
in
jns
call
sti
push
ds
ja
fs
mov
push
adc
pop
outsl
mov
push
les
add
jg
out
fistl
jo
xor
call
adc
dec
jle
mov
jne
xchg
imul
jp
ja
ss
adcb
cmp
enter
stos
les
mov
xlat
xchg
sub
ret
inc
aas
or
cmc
sbb
lcall
mov
cmp
and
pop
mov
fnstcw
dec
out
out
cmp
lcall
jnp
pop
mov
icebp
fidivl
adc
xchg
mov
outsl
cwtl
stc
mov
xchg
inc
xlat
add
leave
aad
sub
cmpsb
bound
les
cmp
testb
push
sahf
lock
cli
inc
mov
and
pop
add
pop
out
adc
pop
mov
testb
xor
aad
sub
les
out
push
xchg
pushf
lds
mov
mov
jno
mov
fstps
imul
test
cmpsl
scas
mov
jge
xchg
arpl
dec
or
test
cltd
lret
sub
add
dec
push
xor
call
dec
xchg
aam
lcall
addr16
push
arpl
leave
and
sbb
scas
xchg
add
jb
insb
mov
mov
jae
jnp
jmp
stos
dec
dec
in
pop
sub
sub
mov
xor
mov
and
addl
or
out
mov
mov
adc
dec
fs
cmpsl
jnp
inc
jne
int3
inc
mov
inc
fdivr
mov
out
push
dec
mov
mov
inc
sub
push
cmp
nop
enter
sbb
jecxz
rorl
xchg
pop
pusha
sub
outsl
mov
pop
lea
pop
cmpsb
imul
lahf
mov
cmpsl
inc
jo
xor
xchg
cmp
xor
adcl
test
ret
xchg
mov
cmc
jno
ret
dec
insl
xor
cmp
jne
push
lahf
test
mov
lods
lea
add
int3
jmp
les
cltd
inc
push
pop
data16
xchg
mov
fstpl
outsl
inc
call
sub
popf
mov
fstps
xor
insl
test
inc
mov
xchg
xchg
adcl
lds
push
and
sti
xchg
insl
pop
imul
dec
or
outsl
sbb
or
inc
pop
mov
in
jmp
adc
inc
clc
jno
push
addr16
push
mov
cmc
data16
fimull
ss
sbb
mov
push
das
and
out
xchg
mov
das
pop
cmp
lods
lds
hlt
cmp
imul
fdivs
rcr
cmp
les
cs
mov
pusha
sub
hlt
push
in
and
xor
aas
loope
movsl
stos
ret
jo
push
push
push
xchg
rolb
fwait
int3
pop
pusha
push
filds
push
fnstenv
sub
pop
inc
xchg
and
iret
push
mov
in
test
popf
into
add
sub
out
dec
stos
jbe
je
aaa
cmp
int3
cmp
ds
dec
xor
and
add
call
ss
gs
loope
test
jmp
adc
js
sub
movsl
fdivp
std
int
outsl
xor
pop
out
mov
jecxz
push
sbb
adc
cli
imul
pop
test
cs
jnp
and
mov
add
push
int3
push
xor
and
push
pop
xor
xor
xchg
mov
cmp
jne
pop
in
ja
fldenv
add
icebp
xchg
sbb
xor
jg
lahf
out
rorb
xchg
pop
mov
xchg
stc
xchg
insl
inc
stos
imul
and
ret
int
sub
roll
imul
mov
mov
dec
ret
or
push
imul
xchg
jnp
mov
inc
xlat
mov
imul
inc
mov
das
cmp
int3
into
testb
adc
jae
repnz
mov
add
pop
cmp
sti
dec
mov
outsl
ret
insl
sub
sub
jns,pn
inc
mov
dec
ret
push
inc
add
cmp
sub
js
lret
adc
fldcw
test
dec
and
xchg
icebp
pop
js
jl
push
dec
dec
je
repnz
in
add
pop
mov
stos
mov
cmp
fld
stos
mov
cmp
test
in
or
rcl
int3
sahf
mov
add
jnp
loope
cwtl
test
sub
fucomp
add
adc
sub
xchg
sti
call
stos
lret
dec
jg
xchg
push
jge
clc
jmp
jl
or
adcb
fimuls
xchg
fstl
stc
out
or
test
repnz
adc
rorb
mov
mov
or
sub
fmull
movsl
pushf
cmp
ja
cmp
ljmp
enter
add
loope
pusha
cmp
nop
cmp
mov
dec
imul
cmp
sbb
push
push
les
cmpsl
rorl
decl
lret
repnz
repz
inc
gs
adc
jmp
pop
lods
sti
sbb
xor
enter
or
push
ja
push
shll
out
inc
jbe
clc
mov
jmp
sbb
or
jp
hlt
nop
jbe
adc
inc
push
adc
add
jbe
scas
and
sbb
out
in
call
mov
sbb
mov
out
xor
cmp
movsb
in
cli
sete
arpl
dec
push
popf
mov
stos
mov
pushf
sbbl
lock
sub
sub
pop
or
rolb
mov
dec
fisttpll
sbb
pop
sbb
scas
cmpl
je
bound
mov
lcall
adc
jbe
gs
adc
jo
or
test
fs
cmp
sub
xlat
or
jb
and
test
lret
and
mov
std
movsl
aas
pop
xchg
xchg
fldenv
lods
lret
popf
pop
cmp
jbe
inc
pop
hlt
or
jnp
or
in
xor
mov
xchg
push
or
imul
fistpll
inc
push
mov
xor
mov
les
mov
cmp
scas
fistps
lock
ret
cmp
cmpb
dec
inc
fwait
cmpsl
sar
gs
cmpsl
add
mov
sub
test
or
loope
ret
or
adcl
fs
add
mov
iret
fisubrs
jns
loopne
lahf
es
push
lods
jb
inc
or
mov
lea
in
jnp
push
out
dec
loope
ret
mov
mov
xchg
push
mov
xor
or
xor
sub
pop
sbb
outsb
ret
xor
xlat
shrb
ret
in
icebp
pushf
inc
jl
loope
repnz
repnz
cmp
adc
jp
mov
js
cmp
jmp
mov
push
xor
mov
fs
or
lret
mov
or
hlt
movsb
adc
rorl
mov
sub
jne
neg
and
fcmovbe
rcll
mov
cmp
enter
push
loopne
mov
push
pop
push
not
cltd
jno
pop
les
mov
mov
out
in
xchg
cmp
mov
shll
movsb
aad
fsubrs
negb
fmulp
inc
xchg
mov
mov
cli
jmp
loopne
pop
lcall
pop
loop
test
orl
adc
mov
sbb
enter
push
and
ss
shrl
push
scas
icebp
cmpsb
sarb
arpl
ret
popf
pusha
std
sub
sub
je
adc
push
jo
push
mov
mov
jg
pop
jo
lock
push
jnp
stos
adc
pop
imul
fcoms
lcall
ljmp
popa
out
fstl
aam
stos
mov
adc
dec
insl
loope
cmp
scas
scas
dec
or
orb
mov
lahf
fmull
xsavec
aam
sub
push
sub
mov
mov
out
movsb
inc
adc
push
pop
and
shlb
pop
call
jg
ds
cmp
shlb
dec
outsl
xchg
ret
pop
mov
jecxz
xor
mov
xchg
test
popa
or
mull
test
stos
cmpsb
sub
cmpsl
shrl
xor
adc
mov
push
push
pop
jb
adc
xor
es
mov
ficomps
jecxz
std
imul
insb
les
fcmovnu
xchg
mov
xchg
push
push
sarl
mov
fmull
cwtl
pop
dec
enter
jge
fisttpl
insl
push
dec
inc
in
xlat
adcl
lock
push
loop
es
ja
mov
cmpsl
push
pushf
imul
inc
loope
pop
jae
push
lods
je
ja
push
mov
pop
sbb
xchg
add
lds
sbb
stc
inc
stc
fists
add
pop
sub
pop
mov
xor
sub
cmp
xor
pop
stos
add
lods
sub
dec
add
push
pop
bound
gs
cmpsb
xchg
sub
pop
shl
popf
and
add
sbb
inc
dec
push
loop
cmp
test
jl
push
dec
loopne
push
and
std
mov
mov
pushf
movsb
lret
clc
pop
jmp
inc
fwait
das
dec
jmp
cmpsl
inc
xor
bound
lea
shll
cmp
or
es
ljmp
pop
push
pop
push
jbe
fs
call
or
jp
cmpsb
sbb
dec
sbb
dec
pop
pop
add
pop
imul
cmc
jbe
lods
out
aad
dec
ficoml
or
xlat
xchg
add
mov
das
test
pop
push
jle
xor
nopl
xchg
adc
sub
cmpsl
flds
sti
mov
cmp
jmp
int3
or
cmp
shll
mov
out
mov
mov
adc
loopne
mov
roll
xchg
xlat
push
dec
repz
cmpsb
lahf
add
jns
cli
sbb
lret
sub
xchg
inc
and
sub
loop
sbb
push
outsb
add
imul
sub
or
mov
loope
rolb
mov
jno
inc
out
mov
fisttpl
imul
jl
pop
mov
xlat
addr16
faddl
fnsave
and
cli
std
adc
adc
inc
sub
repz
push
sub
in
pop
or
dec
fldenv
and
int3
lcall
js
mov
xor
ficompl
adcl
xchg
push
cs
int3
push
mov
ret
je
push
outsb
mov
sub
xor
cld
mov
push
pushf
adc
test
xchg
ljmp
ds
jmp
dec
inc
imul
fwait
sar
cvtps2pd
jl
push
add
test
mov
sbb
lds
pop
add
mov
fidivl
xchg
orb
imul
lahf
stos
push
divb
das
data16
pop
lods
adc
mov
int3
test
in
sub
pop
into
sbb
sbb
pop
cmp
jo
movsw
jnp
movsl
xor
stos
jnp
push
adc
mov
movsb
jno
mov
aam
or
daa
cld
add
data16
iret
shlb
sub
es
sub
cmp
cmpb
add
ss
bound
mov
pop
out
sti
out
in
jmp
jne
outsb
jge
in
insl
lock
fnstenv
nop
aas
pop
aas
or
test
aaa
dec
test
pop
push
sub
stos
jle
into
xor
rorl
pop
dec
inc
lcall
sbb
pop
add
insb
push
out
mov
and
hlt
imul
scas
push
inc
push
and
sbb
and
mov
dec
imul
and
pop
inc
aad
fnstenv
in
lds
and
pop
push
daa
inc
cmp
cmp
mov
push
mov
int3
test
and
clc
mov
stos
mov
xlat
out
add
pop
popa
ljmp
push
pop
push
std
stos
xchg
clc
aaa
lods
js
xor
adc
lea
jne
aaa
and
pop
sub
mov
dec
mov
aam
sbb
xchg
jp
or
jne
leave
adc
or
sar
sub
sub
xor
mov
cli
test
cmc
xchg
hlt
adc
pop
jns
int
xchg
xchg
mov
and
pushf
stos
xchg
fcomps
cs
mov
das
jo
or
push
ljmp
mov
mov
lock
lds
divb
push
popa
gs
jg
sub
movsl
jo
push
jle
xchg
mov
xchg
or
sbb
xor
jae
dec
dec
cmpb
mov
outsl
mov
push
notb
lods
xchg
inc
aas
inc
and
add
test
cmp
add
cmp
inc
pop
jnp
out
nop
mov
bnd
movsb
or
fcomp
mov
arpl
push
dec
out
cmp
xchg
ljmp
movb
stos
pop
sbb
or
push
jge
pop
insb
bnd
pop
movsb
nop
pop
loope
clc
test
ljmp
mov
leave
jae
lea
push
xchg
xchg
leave
mov
pop
or
js
mov
mov
pop
and
ret
mov
daa
mov
shll
pop
repz
jecxz
bound
jp
mov
std
data16
jmp
adc
paddd
jne
clc
jg
push
jle
jmp
jns
pop
inc
sbb
push
ret
sub
dec
notb
xchg
xlat
mov
scas
mov
sub
push
mov
xor
pop
cmc
movsb
lea
in
xchg
sahf
mov
xor
lret
and
mov
mov
sbb
mov
outsl
aaa
jl
jge
repnz
jns
inc
inc
or
icebp
out
popf
jo
fs
repz
mov
xchg
rorl
pop
push
mov
jmp
cmpsb
jae
mov
imul
test
out
sub
jns
mov
fistl
xchg
orb
ss
aam
adc
sbb
ret
movsl
and
imul
xor
lods
push
xchg
pusha
jb
adc
pop
fmull
jl
sub
loopne
pop
leave
mov
popf
lods
jo
ds
movq
mov
xor
in
or
lret
jp
jl
loope
add
mov
mov
adc
and
sub
and
xchg
sarl
xchg
es
cli
cli
cld
add
data16
rcrb
cmp
subl
or
adc
jmp
mov
popf
dec
fists
xor
and
mov
cltd
pop
scas
es
ficompl
add
mov
push
sub
push
movsl
out
divb
ds
shlb
and
push
and
cmpsl
push
scas
shrl
lods
cmp
fdivrs
or
pop
mov
fnstsw
jns
jl
mov
aam
mov
ljmp
mov
or
pop
fnstsw
mov
insb
or
push
inc
jo
mov
jmp
pop
adc
jp
xlat
fmull
fs
inc
mov
vmwrite
cmc
hlt
and
loopne
addr16
jo
jg
xchg
xor
insl
mov
sub
insb
lret
lahf
cmp
mov
push
sbb
jno
mov
jle
inc
pop
sbb
test
fs
imul
push
fwait
add
mov
hlt
inc
inc
mov
jl
test
xchg
fsubs
push
cmp
hlt
cltd
add
lock
add
push
pop
mov
cmpsl
repnz
stc
push
idivl
add
lret
cmp
in
xor
push
sbb
mov
pushf
loopne
lcall
or
and
push
lds
movsl
sti
and
sub
lcall
xor
ret
in
popf
mov
out
or
lock
repnz
fidivs
push
cmp
pop
inc
mov
xchg
cmpsl
or
jecxz
sbb
sbb
pop
movsb
stos
je
mov
imul
cmc
das
jne
lahf
sub
xchg
xlat
cmp
out
lock
mov
mov
fwait
cltd
repnz
xor
loop
mov
mov
xor
pop
out
xchg
fildll
cs
in
mov
mov
jp
mov
add
push
add
add
add
je
cmpl
ja
jmp
pushl
call
mov
dec
mov
jmp
xor
add
or
mov
mov
or
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
add
sub
mov
xorl
sub
lea
xor
xorl
xor
movl
cmp
movl
je
mov
and
mov
negl
xor
incl
add
movl
cmp
jne
xorl
pushl
xorl
call
or
mov
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
xor
sbbl
add
cmp
movl
je
pushl
xorl
pushl
call
mov
mov
mov
and
mov
negl
xor
subl
add
cmp
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
or
mov
adc
mov
add
xor
xor
sbb
mov
mov
dec
mov
add
mov
add
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
mov
mov
and
mov
xorl
mov
add
movl
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
jmp
jns
mov
mov
or
push
rolb
adc
inc
cld
ss
out
xchg
xor
jb
lods
xor
icebp
xchg
jns
push
push
outsl
dec
push
xlat
and
mov
add
ret
pop
cli
push
ljmp
divl
push
pop
popf
jnp
int3
addr16
call
cmp
das
lcall
pusha
push
cli
pop
idivl
negb
in
imul
into
aaa
stos
fidivrl
mov
jno
in
fucomip
push
jl
mov
mov
mov
pop
jecxz
push
or
repnz
nop
pop
leave
stc
loope
xchg
cmpsb
xchg
sti
popf
mov
stos
xchg
fcoml
xlat
in
and
sbb
ficomps
pushf
leave
inc
mov
mov
orb
rol
les
mov
fidivrs
dec
lds
and
adc
dec
hlt
and
imul
mov
push
movsl
and
cwtl
jns
je
mov
cwtl
adc
sbb
imul
sbbb
jo
pusha
xchg
clc
adc
xor
dec
sarl
aam
or
mov
fisttpl
xor
aaa
dec
lock
sbb
rolb
or
in
mov
add
daa
jb
bound
fbld
bound
inc
push
sbb
mov
pop
xor
mov
cmp
int3
add
mov
mov
stos
jo
fnsave
and
push
and
inc
pusha
pop
sub
add
rol
cli
mov
lods
lret
mov
mov
add
sbb
out
or
sub
jle
add
inc
inc
lcall
cli
sahf
movsl
popa
out
mov
sbb
lret
push
jnp
gs
fcmovb
outsb
cld
inc
in
adc
imul
sti
inc
test
int
int3
repnz
mov
cld
inc
and
repnz
in
xor
jb
dec
cmpsb
loope
out
push
add
mov
jno
inc
fidivs
pop
aam
push
xor
xchg
xchg
pop
cmpsl
add
lds
sub
xchg
jle
cmpsb
pop
add
mov
idivb
or
sbb
mov
out
bound
inc
aad
adc
xor
mov
dec
mov
shl
lret
jne
sti
daa
outsl
fdiv
push
pop
das
iret
xchg
jle
fs
mov
pop
push
xchg
lods
jbe
data16
addb
push
mov
mov
pop
mov
clc
fmull
pop
fstpt
enter
in
fnstenv
and
dec
shrl
addb
mov
lods
in
sub
cmp
or
in
mov
jmp
add
out
mov
lahf
pop
ss
push
cwtl
jno
repnz
mul
add
lods
cmp
addr16
push
pop
xor
jno
xchg
or
push
sarb
mov
js
jb
out
ljmp
jns
sahf
int3
ja
in
cs
into
xor
xchg
imul
inc
xor
xor
sbb
dec
addl
xchg
cmc
xor
stos
ja
lcall
je
mov
mov
push
push
xchg
adc
stos
lds
aaa
ljmp
mov
mov
hlt
push
mov
jo
push
push
add
pop
lahf
mov
mov
push
icebp
add
fstl
jno
xchg
jl
addr16
fldcw
fwait
sarl
out
insl
dec
cs
and
add
sub
aad
xor
push
cmp
inc
mov
mov
xchg
sbb
fiaddl
movsl
cmp
mov
mov
add
push
adc
add
fildl
repz
pop
mov
mov
pushf
push
sub
shlb
js
mov
mov
iret
adc
sti
test
dec
mov
jns
jo
dec
mov
punpckldq
or
repnz
pop
pop
pop
mov
js
sti
push
loopne
fs
mov
dec
inc
xor
ljmp
mov
sti
sub
mov
and
dec
cmp
pop
addr16
sti
mov
imul
xorl
into
jecxz
stos
jl
arpl
inc
adc
jnp
out
jp
dec
xchg
mov
ficoms
and
lea
mov
in
jl
dec
jl
stc
sub
movb
push
push
test
inc
and
xchg
add
es
jbe
sbb
and
cmp
orl
mov
lret
mov
sbb
lret
loopne
arpl
ds
int3
jge
mov
push
shlb
insl
ds
and
mov
enter
jo
jmp
outsl
adc
jecxz
cmpl
aam
cli
sub
lcall
ljmp
pop
lahf
shlb
int
in
fdiv
mov
dec
in
xor
xchg
push
fistl
movb
jne
mov
in
clc
dec
fwait
lcall
jne
aad
or
jg
cmpl
adc
push
pop
adc
pop
xchg
lret
push
testl
inc
sbb
adc
filds
jb
fnsave
adc
inc
fdivl
aam
nop
shll
pop
rolb
mov
fsubl
jnp
rcrb
sbb
push
xor
popf
movnti
lea
jmp
adc
into
sbb
adc
adc
xchg
xchg
lretw
and
hlt
inc
mov
jg
jae
mov
xchg
aam
adc
loopne
push
lea
xor
mov
or
mov
imul
pop
nop
test
subl
add
subl
loop
out
sub
xlat
mov
jns
fidivs
push
dec
add
xchg
imul
push
daa
int3
add
mov
cmc
inc
dec
cmp
and
sbb
repnz
xor
les
loopne
jmp
data16
scas
ja
ret
popf
cmp
shrb
mov
jae
adc
sbb
cltd
testb
das
es
jne
add
pop
mov
cltd
dec
imul
and
mov
call
jmp
push
mov
imul
out
push
loopne
jb
sbb
adc
ret
cmp
rolb
dec
sub
push
mov
mov
sub
in
jecxz
mov
lods
push
add
add
fisubrl
xor
pop
hlt
jecxz
jl
cli
inc
mov
add
xlat
into
mov
dec
inc
sbb
out
stos
lock
xor
jb
test
lret
mov
add
sbbb
cmc
and
fbstp
jbe
lahf
mov
daa
imul
xor
in
xchg
es
scas
mov
or
test
mov
fidivrs
dec
in
ds
xlat
ds
loope
mov
sub
mov
test
mov
jae
lcall
xor
sbb
jecxz
es
jae
inc
aaa
push
sbb
add
jle
mov
stos
stc
cmpsb
push
out
inc
pop
dec
sbb
ficoms
dec
imul
stc
jp
pop
pop
pop
stos
xor
push
sbb
push
push
push
ss
sti
or
mov
and
scas
in
loopne
out
pop
push
pop
jbe
sub
adc
lea
mov
inc
test
jno
mov
dec
lea
xchg
nop
or
or
imul
mov
cs
repnz
or
xor
ds
rclb
xor
or
les
in
int3
in
lcall
sub
xchg
mov
push
es
add
push
dec
fdivs
xchg
cmc
dec
mov
mov
hlt
sbb
push
inc
inc
mov
jo
mov
and
ret
lds
shr
sbb
test
iret
xchg
hlt
pop
int
ljmp
mov
inc
pop
sbb
insb
push
fadds
jno
and
mov
push
jmp
stc
pop
sub
jb
nop
mov
lahf
fidivl
cli
jns
mov
outsl
push
inc
or
xor
adc
mov
jb
pop
xchg
xchg
nop
mov
outsl
movsl
xor
or
mov
dec
iret
cmp
int3
jmp
cli
sahf
bnd
dec
push
fcoml
inc
xor
lret
iret
fs
dec
xchg
mov
dec
cmpb
call
jle
incb
sbb
repnz
aad
sub
testb
or
repz
or
inc
enter
mov
ficoms
clc
stos
or
shl
or
add
fs
xor
out
ljmp
mov
cmp
test
in
inc
add
push
lret
mov
sub
jne
xchg
dec
lods
mov
ja
xor
addr16
test
mov
fadd
xchg
mov
pop
icebp
imul
incl
adc
in
aaa
aas
push
xor
rolb
and
and
js
movsl
push
js
mov
popa
push
lds
cs
cs
dec
stc
cmp
pop
mov
mov
xor
decb
movsb
sub
stc
les
lahf
mov
fnstsw
pop
mov
mov
daa
inc
pop
enter
and
xor
mov
lahf
pusha
xlat
jns
das
or
xchg
pusha
stos
and
jne
mov
sub
sbb
imul
stos
pavgb
inc
stc
aad
out
sbb
lds
pop
cmp
sbb
ja
out
rolb
aam
lret
cltd
icebp
into
sub
xchg
cmp
gs
push
mov
mov
data16
das
cmp
dec
stos
cmpsl
in
cmpb
test
adc
sub
loope
pushf
int3
icebp
jnp
aad
aas
aad
cltd
xor
inc
ljmp
shll
fwait
pop
rcll
adc
push
je
xchg
clc
xor
orl
je
mov
dec
outsb
outsl
movsl
loope
sub
dec
mov
inc
je
cmp
test
fisttpl
dec
or
mov
jle
push
frstor
aad
cmpsb
inc
mov
cltd
loop
xchg
mov
test
hlt
add
xchg
outsb
mov
iret
in
loop
daa
push
rcll
sbb
mov
data16
aad
jmp
add
insb
jne
mov
or
cmp
jo
push
repnz
cmp
sar
mov
lods
jno
and
lret
fisubrl
mov
nop
push
scas
cwtl
add
in
cmc
loopne
mov
ds
add
cmpsb
ljmp
ss
xor
adc
sbb
nop
sbb
fwait
js
adc
ror
cmp
mov
sub
sub
and
or
mov
push
mov
xor
out
xor
lcall
int3
lret
dec
push
cli
test
mov
add
mov
bswap
xchg
fisttps
jbe
stos
cmpsl
and
xor
ljmp
dec
adc
inc
mov
outsb
sbb
sbb
pop
repnz
sbbb
adcb
pop
into
mov
repz
pushl
mov
xchg
jnp
xlat
dec
dec
push
fsubs
mov
sti
lret
sbb
jne
aad
es
xchg
negl
or
loopne
jg
outsb
pop
jb
outsl
add
mov
bound
pop
jne
scas
aaa
or
dec
lods
rclb
add
dec
lock
jle
sub
jmp
imul
cmp
push
mov
das
enter
or
enter
icebp
add
jecxz
inc
cmpl
in
mov
pop
xchg
fwait
aaa
jl
push
sti
cmc
cli
cmp
jne
dec
adc
ja
notb
bound
sbb
mov
in
fsubrl
push
shrl
add
dec
daa
test
push
push
add
lahf
pop
inc
inc
push
xor
iret
or
sbb
lods
and
ljmp
dec
xor
aad
or
mov
xchg
jbe
adc
ds
mov
adc
iret
decb
subl
jge
mov
lock
repnz
jmp
repnz
xchg
mov
shlb
out
outsb
add
inc
out
mov
or
mov
xor
lret
imul
es
mov
cmp
in
jnp
std
test
adc
pop
cmp
jb
sarl
dec
ds
cmpsb
push
fldt
rcll
fisubl
stos
sbb
sub
out
xchg
mov
lods
mov
jle
sbb
or
mov
sbb
push
sbb
sub
push
addl
or
repnz
es
into
jecxz
ja
jmp
or
jae
mov
jns
repz
mov
inc
iret
mulb
icebp
mov
rorl
scas
and
xchg
lea
push
std
int
xchg
rcrl
dec
out
jo
imul
loope
pop
sbbl
push
jecxz
sbb
cli
sub
sub
das
xor
daa
push
pushf
dec
in
fists
pop
add
jle
les
xor
jmp
scas
aad
outsb
mov
aad
xchg
pop
xlat
jb
lret
mov
push
adc
mov
js
dec
add
imul
stos
rcr
push
mov
jnp
pop
sbb
testl
jmp
and
dec
enter
stos
pop
sahf
lds
mov
pop
adc
js
add
or
mov
pop
mov
ret
inc
movsl
push
jb
cmc
stc
daa
addr16
icebp
insl
cmp
mov
sub
movsb
aam
cmp
mov
mov
and
or
out
std
loope
mov
psraw
aam
jbe
mov
cltd
popf
mov
push
fstl
es
jae
xchg
adc
cli
pop
js
pop
aad
hlt
add
mov
dec
mov
rolb
cwtl
mov
fsubrl
mov
jns
dec
dec
cwtl
leave
cwtl
cli
imul
and
xchg
scas
or
int
jno
repz
das
sarb
out
add
imul
enter
fwait
or
sub
mov
mov
je
filds
lea
cltd
add
cmp
addb
mov
les
inc
cmpsb
rcll
mov
sub
call
inc
mov
out
cmpsl
sbb
jmp
pop
pop
mov
adc
pop
xor
dec
mov
or
imul
xor
cwtl
ret
into
pop
lock
lods
push
iret
sbb
jg
or
push
scas
jl
pop
xor
call
sub
dec
mov
and
popf
jge
das
adc
insb
fldl
cmpsb
ss
daa
or
int
inc
outsl
jb
pop
sbb
mov
jnp
push
dec
jbe
dec
ds
cmp
daa
pop
adc
int
leave
lods
mov
push
loopne
push
cs
sub
daa
cld
jge
xchg
ret
jle
cmp
inc
scas
insl
scas
cld
aam
sub
addr16
in
mov
dec
in
xchg
add
sbb
roll
pop
push
ss
int
das
js
aas
mov
lahf
leave
pop
movsb
lea
or
jmp
push
jne
jl
and
dec
jo
push
pop
sarb
fs
and
push
pop
fdivrs
or
xor
movsb
shll
add
jecxz
roll
xchg
jecxz
mov
lahf
dec
jbe
cltd
lret
push
adc
xchg
daa
scas
mov
cmp
xchg
and
das
stos
sbb
or
mov
jecxz
pushf
add
sub
addr16
and
xchg
pop
xor
data16
movsl
jmp
dec
lock
mov
lea
inc
pop
mov
mov
ficoml
dec
lcall
cmp
dec
or
sahf
subl
jl
test
pop
inc
add
cmp
xor
iret
scas
xlat
cmpsl
imul
adc
in
into
jae
mov
adcb
scas
inc
fstpt
jl
pop
sub
int3
scas
in
repnz
popf
xor
xlat
xchg
mov
or
fiadds
dec
testl
popf
out
fwait
fs
xchg
mov
in
cli
mov
xor
notl
or
movsb
push
dec
popa
aaa
out
dec
cwtl
mov
insl
stc
fnstsw
inc
imul
dec
clc
adc
stos
out
rcrl
jno
push
cmp
push
mov
mov
dec
icebp
jecxz
out
mov
pop
popf
mov
mov
adcl
cmp
pop
or
call
je
sahf
jnp
sbb
shlb
aad
cmp
inc
shlb
imull
sbb
add
dec
fldcw
fisttpl
pushf
std
sti
xorl
mov
adc
popf
jge
aas
dec
mov
inc
push
int3
mov
repnz
adc
fistps
pop
mov
inc
sbb
mov
fdecstp
cmp
je
cmp
and
aas
and
scas
setg
mov
sbb
or
gs
popa
notl
pop
mov
pop
sbb
in
cmp
loope
push
jno
push
pop
arpl
std
sbb
adc
das
sbb
int
addr16
das
push
pop
xor
inc
xchg
mov
cmc
enter
inc
xlat
cmpsl
shlb
jbe
cmpsb
or
sub
insl
in
hlt
iret
nop
pop
mov
push
in
stos
insb
jmp
stos
mov
pop
add
call
push
in
dec
add
jb
inc
int
mov
mov
pusha
mov
das
add
or
inc
repz
mov
xchg
adc
cmpsb
sbb
negb
inc
lea
cs
sbb
push
sbb
loop
int3
xor
and
mov
sub
add
inc
push
push
fcomps
push
dec
mov
cmp
repnz
xchg
fstpt
andl
aam
pop
and
std
xor
cmpsb
mov
fcompl
add
cli
xchg
sbbl
xchg
lahf
test
cltd
dec
push
rolb
lret
iret
xor
imul
mov
sbb
imul
stos
sbb
test
add
push
stos
orl
out
xchg
shll
into
lods
adc
or
inc
fwait
mov
mov
adc
jbe
and
add
sub
arpl
adc
inc
xor
mov
orl
test
repz
xchg
sbb
push
cs
pop
lds
test
inc
inc
dec
mov
ds
pop
sub
mov
mov
push
xchg
jmp
into
mov
pusha
insb
fistl
fsubl
scas
xor
xchg
popa
arpl
push
cmpsl
push
ds
adc
dec
mov
push
call
outsb
lock
das
dec
xorl
push
aas
insl
pop
pop
cmp
outsl
mov
jo
test
sbb
jecxz
mov
mov
movsl
push
movsl
push
mov
inc
dec
insb
cmp
xor
mov
push
fstl
cmpsl
lods
adc
push
push
fidivl
ds
in
and
xlat
xchg
mov
mov
lods
or
addr16
mov
sti
inc
test
outsl
pop
mov
aam
mov
and
aas
jle
xchg
jge
in
mov
xor
xchg
add
notb
jg
dec
jnp
jg
clc
or
nop
in
and
lods
or
dec
jbe
jnp
jae
lret
sbb
sub
fistl
push
outsb
mov
nop
jb
xchg
xchg
dec
andl
insb
call
rclb
sub
cs
movsb
jb
inc
pop
subb
mov
cltd
inc
call
enter
dec
mov
jmp
mov
clc
sahf
jbe
jmp
add
out
or
lcall
sub
sbbl
jmp
xor
in
mov
fmuls
push
inc
dec
div
das
mov
iret
push
call
xchg
jno
popa
mov
adc
mov
call
ja
cmp
cmpl
mov
scas
jnp
iret
dec
xchg
jns
dec
jg
jmp
cwtl
push
ret
mov
lret
imul
and
xchg
ficoms
jns
scas
xor
mov
xchg
gs
repnz
adc
mov
dec
loope
adc
inc
std
jne
fldl
dec
and
outsb
popl
dec
loopne
testl
hlt
or
cmpsl
imul
cmp
in
sbb
add
sub
daa
int
out
xorb
push
les
cltd
cltd
mov
adc
add
std
pop
mov
or
divb
decl
imul
adc
negb
rol
cmp
ljmp
pop
fisubl
add
push
jnp
in
stos
or
adc
xchg
sbb
nop
mov
sub
push
sbb
cwtl
add
cli
mov
data16
cwtl
movsl
outsl
xor
mov
lods
push
test
pop
call
inc
dec
mov
xchg
sub
test
sub
cmp
sub
loop
rclb
fadds
pop
jae
jmp
outsb
lret
push
mov
adc
orb
test
in
mov
mov
pop
mov
adc
out
pop
jnp
aad
xchg
mov
dec
xchg
xor
or
jl
mov
adc
out
xchg
and
and
dec
es
push
dec
repz
sub
sbb
aad
push
ret
sahf
inc
call
jle
scas
dec
das
js
test
cmpsl
pop
sub
stos
in
mov
and
pop
add
in
cmp
fistps
das
sbb
push
mov
add
pop
cmp
pop
js
dec
jae
and
fucomi
test
or
andb
cmc
mov
push
xor
in
jnp
sbb
daa
cmp
mov
mov
lcall
aam
inc
xor
and
inc
pop
lret
inc
xchg
sub
cmpsb
pushf
fwait
mov
or
lods
jnp
int
jge
push
mov
call
add
out
mov
mov
jbe
cmp
mov
rcrl
ret
cmc
sub
xor
iret
in
scas
lcall
mov
mov
scas
add
enter
loopne
fadds
addr16
pop
nop
pop
jmp
xor
mov
jo
rolb
scas
bound
add
test
in
jbe
xorb
push
mov
mov
loopne
popa
das
or
in
pop
mov
xor
sbb
lods
int
xchg
and
insb
pop
daa
fimull
stc
push
fwait
push
aaa
sbb
sbb
sahf
cmp
adcl
sub
pop
fwait
xchg
jns
addl
pop
test
aas
dec
mov
push
sbb
push
mov
push
and
dec
inc
aaa
dec
popf
push
scas
movsl
insl
insl
jg
cli
movsl
xchg
inc
mov
stos
inc
or
push
ja
and
cmpsl
jmp
rcr
jle
pop
inc
fwait
cmp
and
leave
inc
pop
bswap
xor
cmp
rcrb
inc
or
arpl
lods
and
icebp
push
pop
popf
mov
xchg
movsb
pop
sbb
ds
scas
jle
lods
cli
xor
cld
inc
movsl
bound
cltd
sub
mov
push
inc
jg
out
mov
in
rclb
mov
and
adc
aas
jno
or
leave
xor
pop
shl
xchg
jae
dec
mov
inc
pop
adc
mov
in
rcrb
js
pop
pop
fildl
lcall
clc
push
stos
loope
and
cli
mov
testl
lret
enter
sub
push
cltd
mov
lahf
and
loope
imul
cli
sub
fistl
sub
cmp
cs
jle
cmp
loopne
lret
cs
fwait
pop
rorl
fwait
out
inc
and
lods
mov
fidivrs
cld
outsb
xchg
add
sub
loopne
arpl
mov
filds
sub
sahf
add
addr16
jge
cmp
xchg
repz
andl
sub
aas
mov
ljmp
movsl
out
cmp
movsb
and
jge
into
mov
push
insl
insb
test
xchg
subb
mov
sbb
push
lock
mov
mov
in
bound
and
aaa
adc
out
xor
xchg
jns
jecxz
dec
sub
and
mov
rclb
and
xorb
call
notl
jnp
add
mov
mov
out
add
outsb
xchg
mov
pop
scas
movsb
xchg
lcall
pop
insl
and
pusha
movsb
mov
roll
cwtl
or
push
and
and
std
push
ret
std
cmp
lea
test
or
and
loop
or
jbe
rclb
cmpsl
cld
nop
fisttpl
cmc
adc
js
or
sub
jle
outsl
fistpl
jne
add
in
add
test
rcr
shl
enter
cltd
pop
into
cmp
loop
hlt
mov
jmp
push
dec
xlat
cld
mov
stc
adc
xor
sub
mov
addr16
ret
pop
pop
mov
negl
mov
fwait
add
sbbl
sbb
fdivrs
jle
adc
mov
repnz
repnz
fsubs
into
adc
fdivrp
dec
xor
ja
pop
cmpb
repz
imul
lods
imul
jmp
lods
out
jl
jge
push
push
cli
xchg
js
jecxz
mov
lret
lcall
inc
pop
fistl
add
inc
stc
pop
pop
sahf
mov
hlt
ss
add
data16
pop
pushf
inc
dec
cmc
cmc
popa
sbbl
lcall
scas
das
addr16
aad
xchg
sarl
fcomi
sub
xchg
fstpt
mov
scas
arpl
mov
andl
or
pop
adc
test
xlat
lods
dec
clc
xchg
mov
mov
pop
pop
ljmp
in
sbb
jnp
shrl
cli
cmp
aam
mov
dec
fstpt
push
mov
popf
das
fld
inc
pop
mov
rol
sbb
pop
xor
nop
iret
add
gs
test
or
pop
or
or
sub
shrl
pusha
in
fwait
cmp
and
lods
dec
add
cmp
cmp
mov
fcmovb
gs
sbbl
mulb
in
sub
jecxz
ds
mov
add
xchg
ljmp
cs
test
call
call
pop
subl
cmp
cld
notl
adc
jnp
addr16
icebp
in
inc
out
mov
adc
mov
scas
cltd
pop
add
jl
mov
add
icebp
bnd
and
push
std
sbb
repz
ret
cmp
push
dec
push
sub
mov
sti
xchg
push
mov
adc
insl
cmc
inc
ror
mov
dec
adc
dec
cmp
sub
jo
push
aam
dec
inc
pusha
pushf
out
mov
xor
test
jle
hlt
and
in
push
mov
jne
outsl
push
jnp
shl
mov
fdiv
mov
in
mov
rcrb
leave
jns
push
es
mov
jbe
push
addr16
push
mov
imul
movsl
int
mov
push
jns
inc
and
addr16
or
mov
dec
fidivrl
mov
xor
adcl
in
clc
jne
imul
add
shlb
sbb
cmp
mov
push
or
xchg
arpl
pop
dec
cld
clc
jo
test
mov
xor
jne
cmp
sub
adc
mov
fldl
sbb
sbb
xlat
cmp
mov
in
cs
cmp
mov
in
jae
out
ljmp
loope
adc
jno
leave
fsub
testl
jo
iret
jecxz
dec
sbb
xchg
lret
jg
sub
sahf
rol
pop
jle
mov
orb
push
repnz
push
pop
jne
into
lahf
jbe
std
push
jmp
ds
jle
lret
xchg
pop
push
ds
imul
jmp
fsts
test
adc
pop
fnstsw
sub
cmp
adc
and
sub
dec
repnz
popf
clc
ljmp
shl
jp
inc
jo
mov
ljmp
mov
lahf
adc
outsb
in
pushf
pop
mov
fisubs
xor
aad
cmp
fcmovb
sbb
and
mov
jb
sbb
mov
pushf
hlt
stc
add
xchg
cltd
xchg
aaa
das
orps
lret
adc
cmpsb
movsl
clc
push
outsl
pop
sbb
popa
data16
xchg
cli
cmpsl
jb
and
xor
stc
cmpsb
hlt
roll
mov
mov
psllw
push
pop
mov
jo
movsb
xchg
cmc
sub
xchg
movb
xor
pop
mov
adc
ficoms
xchg
push
cmp
inc
in
fs
mov
pop
pop
lea
scas
sbb
testl
push
cmp
sti
mov
mov
mov
inc
roll
in
jge
dec
dec
inc
fs
pop
pop
add
inc
mov
fldcw
fs
hlt
pushf
mov
ret
mov
mov
movsl
lds
pop
mov
dec
outsl
jmp
cwtl
mov
jnp
test
pop
pushf
test
jnp
loopne
stos
dec
aad
sbb
mov
sbb
jle
jmp
test
inc
add
jns
mov
clc
xor
and
sbb
and
adc
hlt
jmp
mov
push
xchg
loopne
ret
hlt
inc
cmp
pushf
mov
insl
loop
inc
push
cmp
repz
test
jne
xlat
test
inc
mov
dec
outsb
mov
orl
xchg
add
pop
hlt
addr16
cmp
mov
push
aaa
test
jne
out
sbb
loope
cmp
popa
mov
mov
stos
call
movsb
aad
clc
dec
mov
mov
outsb
sahf
bound
outsl
clc
movsb
sub
mov
sbb
pop
je
push
xchg
dec
ja
mov
sub
sahf
lods
jg
sbb
cmp
aas
dec
aam
and
pop
mov
or
dec
inc
add
push
cltd
inc
test
imul
or
pop
add
mov
testl
mov
mov
nop
iret
sub
lcall
sub
push
adc
push
fimuls
pop
call
outsl
cmp
or
cltd
leave
icebp
lods
pop
and
in
dec
adc
push
mov
scas
inc
shl
inc
xchg
out
jns
cmp
ret
add
lcall
xor
dec
cmpsl
in
movsb
icebp
sub
sub
xlat
fistpll
xor
cmpsb
fwait
sub
xchg
sub
sbb
mov
dec
xchg
mov
mulb
mov
outsl
cltd
add
clc
std
insl
jp
jl
shlb
cmp
xchg
imul
into
xchg
mov
push
sbb
popa
and
les
sahf
cwtl
imul
jg
int3
xchg
repz
inc
stos
sub
jge
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
jmp
push
into
cmc
pop
in
xchg
mov
movsb
sub
scas
addl
push
addb
lock
shll
popf
sub
pop
push
roll
pop
mov
inc
add
jecxz
jne
mov
xchg
pop
fiadds
gs
xor
rcrl
jne
popf
push
mov
and
fisubrl
mov
je
mov
cltd
mov
sub
cwtl
dec
ja
andb
mov
add
int3
inc
insb
cmp
lea
das
cmp
ret
push
mov
adc
dec
and
addr16
lcall
sti
cmp
jmp
std
jbe
lea
insb
push
adc
cmp
jge
bnd
push
lds
cli
and
aam
inc
xchg
pop
lret
dec
cmpsb
inc
jae
js
jnp
sbb
jge
xchg
and
push
fadds
std
pushf
mov
ljmp
pop
dec
sub
gs
testl
test
scas
icebp
push
pop
ss
mov
iret
mov
or
lds
fdivrs
push
pop
cmp
sbb
bound
mov
push
out
add
mov
sarl
cli
js
in
adc
xchg
cwtl
pop
cld
fwait
lcall
imul
xor
adc
xor
sbb
mov
add
adc
pop
add
ss
dec
push
dec
lea
mov
idivl
jge
mov
cli
ss
js
into
sahf
sbb
jmp
mov
cmp
shll
mov
in
aad
xor
xor
popf
ret
mov
jno
jecxz
out
mov
bound
mov
pminsw
jecxz
mov
scas
cld
lods
in
es
mov
push
lock
sbb
js
or
cs
mov
mov
mov
movsl
cmp
dec
in
or
fisttps
or
pop
inc
lcall
push
outsl
into
jp
jbe
adc
sub
out
sbb
aad
lods
in
lahf
and
sub
insb
sti
xchg
and
jmp
in
mov
add
jo
adc
jmp
add
mov
inc
push
pop
pop
mov
dec
lret
mov
aam
out
bound
jo
fldl
inc
mov
push
pusha
out
iret
fsubp
cmp
js
loope
adc
ret
sbb
jo
jg
mov
pop
sub
jno
mov
andl
loope
dec
jg
dec
into
push
cmpsb
xchg
in
call
nop
mov
sarl
imul
jge
mov
sub
ja
xorb
mov
add
in
xor
ja
mov
jle
popw
inc
jmp
into
out
or
cwtl
cmpsl
push
mov
and
inc
pop
imul
mov
sbb
and
adc
imul
jno
idiv
rorb
sti
mov
add
js
push
cmp
sub
sbb
fstpt
lahf
rol
adc
test
repz
mov
sub
repz
cmpsl
cli
bound
popf
orl
xor
sub
lahf
stos
adc
mov
sbb
roll
test
hlt
inc
and
xlat
pop
dec
push
jb
xlat
cmp
in
inc
mov
js
pop
pop
inc
push
add
mov
push
mov
dec
out
aas
lcall
push
mov
mov
rol
cmp
push
mov
movsl
fwait
icebp
pop
or
cmp
stos
mov
jecxz
pushf
scas
mov
inc
mov
jns,pn
clc
ljmp
scas
fnstsw
lret
into
sub
pop
mov
adc
insl
test
out
xor
insl
xchg
out
mov
mov
mov
xor
repz
in
adc
push
adc
popf
sahf
adc
fsubl
ficompl
fbstp
jl
hlt
sbb
hlt
xor
jge
push
adc
pop
les
pop
cmp
jg
scas
aam
shrl
cmc
sub
data16
xchg
and
bound
push
sti
in
mov
adc
in
lods
lods
or
sub
adc
inc
mov
lds
bound
gs
aad
xchg
lret
mov
test
imul
xor
cmp
lret
mov
cmp
xor
imul
sti
push
hlt
cmp
ljmp
mov
push
bound
mov
faddl
adc
popf
dec
jo
sbb
xchg
push
cltd
lods
jmp
push
idivl
mov
jecxz
inc
sub
and
sub
pop
pop
push
jg
aam
mov
imul
popf
lcall
call
jp
inc
adc
orl
pop
xchg
jmp
sbb
sbb
cmp
and
pop
and
add
test
cmpsb
or
cmpb
or
pop
sti
lods
mov
mov
jl
sti
mov
mov
popf
add
insl
inc
es
scas
repz
mov
lea
xchg
jae,pt
mov
mov
popf
mov
int
sbb
jnp
mov
cmpsb
xchg
sbb
sub
int3
aam
pop
repnz
mov
inc
pop
xor
rol
push
and
mov
jne
push
ret
xchg
cmp
imul
mov
outsl
int3
sbb
or
pop
push
mov
sbb
cmp
push
dec
jns
and
scas
xor
add
xor
arpl
mov
sbb
pop
mov
xchg
pop
xor
notl
jg
aaa
mov
xor
cmp
dec
ljmp
loopne
dec
xchg
add
and
test
outsb
sbb
shl
or
pop
leave
mov
mov
shlb
sub
testb
repz
cli
pop
push
pop
call
push
in
out
jno
fstps
sbb
pushf
push
arpl
pop
push
frstor
ret
loopne
mov
mov
sub
inc
inc
lret
mov
jecxz
lods
cmpsb
xchg
sub
jae
jge
mov
sbb
out
das
mov
adc
jp
sti
mov
dec
jmp
and
mov
and
cld
sbb
jecxz
test
clc
pop
popa
in
enter
adc
mov
or
int3
sub
and
xchg
sub
lret
mov
mov
adc
cwtl
xor
cmpsl
jmp
mov
inc
push
idivb
xor
add
out
leave
out
repnz
jecxz
mov
sub
std
dec
dec
or
xor
insb
jo
lret
stos
mov
daa
push
call
cmp
sarb
shl
inc
inc
lret
pop
cmp
cwtl
mov
pop
fcompl
xlat
pop
cmp
movsl
jnp
fmul
ficomps
inc
arpl
pop
or
and
mov
or
dec
sbb
jge
ret
sub
stc
adc
push
push
dec
mov
jnp
dec
add
aad
xchg
enter
repnz
push
data16
rcr
aas
or
orl
mov
adc
push
or
in
das
add
dec
push
push
fbld
addr16
mov
and
xor
mov
roll
inc
ret
shll
faddp
inc
test
pop
pop
push
ja
push
mov
dec
dec
in
rolb
jge
adc
jne
lret
int3
jmp
mov
pop
and
repz
mov
add
jns
js
mov
cmp
push
fidivrl
pop
pop
rorb
and
je
jge
lods
mov
cvtps2pd
push
xor
in
push
test
add
je
jmp
add
out
scas
aad
fs
stc
fnstsw
cmpsb
cld
test
mov
sub
sbb
sti
dec
cmp
pop
fwait
mov
hlt
push
and
cltd
mov
xor
or
add
jmp
mov
insb
cmp
imul
dec
ja
mov
add
cmp
popa
repz
test
jnp
jo
add
cmpxchg
dec
repnz
test
pop
sbb
mov
push
add
daa
mov
sub
dec
cmpl
jge
jg
xor
cmp
sub
xor
fs
aam
xchg
int3
vcmpsd
std
jbe
or
repnz
inc
add
divb
das
fsincos
frstor
pop
sbb
sub
outsl
ds
jp
mov
rorb
mov
mov
jo
xchg
nop
inc
adc
stc
in
cwtl
lea
stc
stc
mov
and
mov
push
ja
lcall
add
fdiv
in
xchg
pop
and
inc
dec
xor
test
push
xor
pop
mov
mov
sbb
inc
jl
inc
inc
mov
cli
sarl
and
cltd
repnz
fbstp
sub
aad
mov
cltd
push
adc
push
cmp
cmp
pop
loopne
shll
iret
xlat
and
xchg
lds
negl
mov
adc
mov
jne
inc
mov
lods
add
outsb
jmp
lds
imul
test
js
arpl
test
mov
xlat
sub
mov
scas
lret
out
add
cmp
jmp
jecxz
mov
jo
mov
mov
push
ret
je
fucompp
mov
mov
inc
jnp
xor
mov
add
test
and
inc
mov
mov
xchg
sti
pop
sub
cmp
inc
nop
clc
jge
inc
pushf
or
xchg
out
sbb
sahf
das
sahf
cmp
mov
adcb
sbb
and
test
add
sbb
or
push
xor
imul
inc
add
mov
in
mov
rol
ret
add
mov
sub
and
cmp
fs
or
rcrl
add
jb
les
jge
movsb
dec
call
lock
xchg
sti
push
sbb
mov
mov
out
ljmp
mov
ljmp
lods
inc
xor
cmpsb
ds
cli
mov
imulb
rorl
dec
push
mov
in
dec
mov
add
hlt
sub
sahf
cmc
xchg
lods
add
pop
loope
sahf
xor
cmp
call
call
push
pop
movsl
insl
testl
pop
jo,pn
mov
loope
js
addl
xchg
or
imul
adc
std
mulb
push
stc
and
push
fneni(8087
pop
and
es
mov
xchg
aas
jns
loop
daa
and
push
add
sbb
sbb
mov
adc
nop
mov
dec
pop
js
cmc
cmp
mov
ss
es
xchg
stos
mov
push
jp
adc
fcompl
or
xchg
xchg
jae
in
cmp
sahf
sub
imul
leave
cmp
push
cmp
dec
adc
inc
and
xor
lret
lret
pop
sbb
lea
mov
aam
xchg
pop
push
outsb
fxtract
pop
outsl
test
or
ja
mov
ret
loop
out
jbe
cs
jl
cmp
mov
out
push
dec
lret
shrl
call
or
popf
rol
adc
pop
pop
xchg
int
push
inc
fcomps
and
cmc
dec
cmp
jne
mov
pop
mov
adc
jo
sarb
sub
into
add
in
lahf
insl
mov
ret
jno
or
xor
jg
inc
movsl
rol
ljmp
xorl
test
popf
xchg
xor
stos
movnti
sbb
cld
jno,pt
sarb
sbb
dec
mov
subl
inc
push
ss
xchg
push
cwtl
xchg
nop
fimull
adc
dec
xor
mov
mov
adc
jg
loopne
cmpsb
pop
cmp
pusha
xor
xchg
test
iret
push
and
sub
push
mov
mov
repz
ret
xchg
adc
sbb
push
cs
mov
xchg
or
sub
das
sti
icebp
fcomi
push
jne
or
mov
outsb
outsb
push
push
ret
dec
mov
sti
xchg
cmp
and
imul
pop
call
cs
sbb
xchg
aas
mov
aam
or
xor
and
cmp
or
inc
mov
call
mov
sub
xor
stos
subl
lods
adc
outsb
add
lods
fcmovnu
fmul
adc
aaa
ds
into
cmp
cld
test
mov
cmp
aaa
jbe
push
mov
mov
in
mov
ss
inc
mov
or
in
mov
push
push
mov
jge
insl
int3
cltd
dec
and
dec
sbb
fstps
aas
xor
hlt
out
outsl
xlat
sbb
jbe
data16
ja
sub
sti
sub
xor
stos
mov
xchg
lahf
hlt
pop
push
or
add
js
xor
xor
fs
xchg
and
shll
test
or
xor
outsb
pop
mov
out
les
dec
push
outsb
scas
dec
mov
mov
test
out
in
bound
and
pop
inc
lds
fstpl
cmc
hlt
push
cli
push
xor
push
clc
test
add
dec
enter
adc
inc
cmpl
pop
mov
or
clc
addb
sub
scas
je
mov
mov
movb
cli
cmp
xchg
xchg
sbbb
jl
inc
pop
popa
jmp
icebp
push
add
addb
and
push
mov
adc
push
cmpsb
jle
mov
stos
sbb
pop
lods
inc
pop
jecxz
loopne
sar
gs
and
shll
mov
sti
imul
add
dec
pop
stc
cs
mov
or
push
scas
out
lret
aam
or
out
fnstcw
test
or
lahf
push
adc
and
in
or
jecxz
sub
push
stc
loop
lret
mov
push
or
sub
push
mov
ss
je
fs
cmpsb
add
push
or
mov
xor
clc
pop
clc
add
jns
mov
xchg
out
sub
dec
into
and
sbb
fdivl
mov
and
sti
xor
addr16
pop
out
adc
gs
mov
lret
jb
xchg
add
rcr
dec
sub
in
aas
push
lcall
call
sbb
xor
decb
in
out
sub
mov
add
shll
jmp
xchg
fwait
decb
fsubrl
adc
jge
icebp
mov
mov
push
inc
bound
jnp
or
jg
jmp
vandnps
in
es
in
fildll
fiadds
inc
adc
pop
lahf
push
out
mov
cmp
scas
inc
sub
mov
jno
cmp
jno
int3
mov
out
hlt
fidivrs
lcall
sbb
jl
xchg
mov
lea
xchg
mov
mov
sub
sub
add
je
iret
imul
pop
ja
scas
push
ja
inc
scas
fdivl
pop
pop
push
lock
push
lods
push
loopne
xchg
cmpsb
ljmp
andl
mov
scas
nop
xchg
jnp
out
sbb
xchg
and
in
aaa
jbe
cmp
mov
mov
rcrb
int
fisttpll
fisttpll
subb
mov
adcl
roll
insb
cltd
lahf
pushf
mov
aam
fsubrp
movsb
add
cmp
mov
cwtl
daa
rcrl
fimull
push
jmp
adc
ja
cmpsl
bound
xchg
mov
jns
stc
or
adc
mov
mov
xor
jae
or
xchg
lods
xor
cli
lcall
sub
dec
mov
jo
shrb
mov
push
and
jle
into
clc
int
dec
jg
xchg
sar
out
dec
sbb
sub
push
mov
inc
pop
jnp
dec
insb
and
scas
dec
dec
nop
push
imul
movb
dec
mov
jp,pt
leave
ret
andb
daa
orl
mov
in
fidivrs
add
addr16
inc
and
stos
ror
adc
xlat
mov
adc
icebp
mov
enter
lods
fldcw
xchg
mov
add
jae
push
iret
jg
cmp
out
mov
notl
mov
shr
fdivrs
fisttpll
outsl
pusha
ficoms
out
stc
inc
cmp
add
shrl
pop
or
sub
and
loop
sbb
jl
rolb
push
sub
lods
inc
nop
add
xor
sbb
pop
fidivrl
inc
pop
cmp
pop
push
scas
sbb
cmc
or
sbb
cmp
sahf
sub
xchg
sarl
fildll
fildl
sub
add
jbe
push
ret
xchg
test
mov
aam
subb
xchg
test
push
jbe
rorb
daa
decl
lds
or
fwait
jae
leave
push
insl
out
dec
sub
mov
loope
insl
int
inc
shll
adc
adc
fmuls
mov
lods
push
ficoml
cli
push
cmpb
push
outsl
xchg
cmp
xor
fdivrl
aaa
insb
leave
cld
cmp
jle
mov
outsl
fdiv
cmp
lret
xorb
mov
add
cltd
fwait
push
mov
fimuls
adc
aas
jmp
pop
les
cli
xorl
push
sbb
jle
push
dec
inc
or
daa
cld
xchg
dec
pop
mov
jge
inc
and
fwait
sbb
dec
loop
aas
repz
ja
mov
mov
mov
dec
lret
jb
mov
or
test
adc
loopne
push
sbb
xor
pop
lods
icebp
mov
dec
gs
les
fsubl
mov
fdivrl
fidivs
pop
push
sub
cmp
mov
xchg
push
ret
test
daa
jnp
pop
aam
test
mov
mov
cmp
xor
adc
mov
adc
loopne
mov
aaa
xchg
xor
movsb
ss
jne
push
pcmpgtd
ljmp
add
or
jecxz
sub
cmc
cmpsl
out
test
ljmp
cmpsb
jecxz
sbb
fdivr
lahf
mov
jno
lahf
dec
xlat
scas
lret
mov
cli
mov
mov
in
lcall
lock
cwtl
or
sti
add
mov
xchg
push
xchg
sub
ss
jne
sbb
sub
scas
inc
mov
scas
mov
add
xor
mov
inc
jecxz
push
mov
leave
stos
aaa
insl
mov
pop
fs
repz
mov
mov
lods
push
aaa
xchg
sub
push
popa
mov
add
popf
les
mov
std
ja
mov
lret
cltd
pop
loopne
pop
push
dec
inc
clc
sar
cs
mov
jl
add
test
pop
add
mov
mov
pushf
dec
jmp
mov
mov
dec
mov
pushf
cmp
pop
xchg
mov
jnp
xchg
in
cld
jecxz
cmpsl
out
or
lods
mov
adc
call
jmp
adc
lds
mov
xchg
cmpsb
sbb
dec
stos
movb
cmp
inc
into
daa
mov
jnp
daa
cmp
sbb
inc
xchg
leave
push
movsb
imul
sbb
and
lds
jg
cmc
adc
jbe
inc
push
cmc
stos
arpl
cmc
fdiv
pop
dec
test
mov
cmp
mov
cmp
cs
sbb
ja
xchg
imul
enter
jecxz
or
sub
and
inc
mov
sahf
dec
sbb
ds
push
jne
in
js
jb
sti
repz
ss
push
sub
pop
test
cmpb
shrb
jp
cmp
cmp
mov
inc
lods
cmp
mov
inc
mov
popa
pusha
clc
data16
mov
or
cltd
mov
pop
xor
cmp
pop
fidivrs
pop
pop
push
adc
mov
enter
cs
ret
xor
jo
int
pop
mov
lahf
jo
adc
lods
inc
sub
ja
outsl
jno
push
xor
push
int3
out
or
jbe
push
adcb
jns
push
repnz
xor
xlat
das
dec
jmp
je
cmp
add
mov
das
inc
push
outsl
sbb
js
xchg
pop
gs
inc
faddl
pop
loopne
dec
das
mov
jl
xor
lds
push
and
ja
rcrl
mov
icebp
cmp
mov
sbb
and
adc
sarb
fcomps
xor
fmull
xchg
xor
sbb
mov
xchg
jb
or
std
dec
and
sbb
xchg
jno
call
lock
xchg
hlt
xlat
loop
ljmp
xor
aam
mov
xchg
pop
pop
in
xchg
sbb
push
cmp
xor
jmp
cs
pusha
mov
and
aaa
in
jae
dec
pushf
fwait
or
ds
xchg
or
insl
inc
ret
and
int
inc
push
jge
lahf
xchg
mov
rcrl
jne
push
js
pop
jle
mov
mov
fists
gs
jmp
ja
xchg
adc
mov
rolb
shlb
pop
sbb
int3
shll
mov
dec
jns
lock
and
lods
rolb
jne
or
scas
mov
shl
sar
and
scas
clc
scas
push
outsb
push
out
insl
aad
clc
jo
movsb
vcvtsi2sdl
clc
leave
sbb
sub
xchg
mov
rcrl
mov
push
ret
stc
xor
adc
cs
jmp
push
testl
pop
push
in
push
insl
mov
cmp
outsl
in
mov
and
rorl
jbe
adc
test
sbb
inc
xchg
add
xor
shl
sbb
jg
jo
dec
shlb
sub
mov
adc
mov
sbb
sahf
jb
in
pusha
in
mov
add
test
insl
push
fwait
cs
loope
aad
dec
not
sarl
into
mov
pop
sub
das
mov
mov
add
icebp
or
cs
mov
pop
push
push
and
call
jo
mov
mov
cmp
sub
xchg
outsb
or
cmpsl
addb
mov
push
dec
add
fs
pop
sbb
andl
adc
lret
dec
mov
xor
pop
add
cmp
fcoms
mov
adc
mulb
inc
xchg
push
lods
and
cltd
adc
rorl
movsl
cmpsb
inc
or
add
jmp
pop
or
imul
adc
fcoms
mov
sbb
pop
mov
push
jne
inc
dec
and
jg
jge
xor
inc
fldcw
bound
mov
jle
xor
into
fbstp
lcall
xor
jecxz
or
cmc
and
inc
insb
mov
cmpsb
fnstsw
cmp
add
pop
es
sub
repz
stos
cmc
sub
test
out
es
cmp
cmpsb
sub
ds
mov
dec
pop
mov
sub
bound
pusha
adc
in
xchg
jle
jnp
loopne
clc
fnstsw
in
repnz
daa
jno
pop
insl
adcl
or
rcrl
sbb
ret
fstl
cmp
mov
movsb
jecxz
add
das
lods
outsb
hlt
jno
sub
sbb
sub
cmp
fstps
push
mov
cltd
and
test
and
call
lods
mov
mov
addr16
pop
jb
imul
mov
fwait
mov
faddl
mov
sbb
mov
jle
push
lods
subb
inc
cmp
push
int
xlat
push
dec
rclb
push
shrl
shlb
movsl
cli
jge
mov
mov
push
pusha
xchg
pop
adc
lea
dec
iret
popf
cmp
cmpsl
fdivr
xor
xor
ss
stos
xchg
clc
and
clc
or
clc
mov
cmpsl
cmp
or
mov
shl
and
lea
ficoms
jecxz
fiadds
clc
shlb
mov
lods
jecxz
jp
cmp
add
imul
mov
cmp
sub
mov
mov
xorl
and
mov
fs
rcr
sub
sarb
bound
inc
adc
repz
fldcw
add
imul
scas
std
fs
cmp
and
cmp
ljmp
inc
adc
out
stos
sub
cmp
lock
movsb
testl
sub
dec
popf
jb
sbb
mov
cmp
dec
jno
clc
mov
xchg
sub
add
jg
mov
std
maskmovq
testl
fstl
pop
cmpsb
fistpl
iret
into
or
in
dec
push
popa
das
stos
das
mov
inc
add
out
inc
icebp
fwait
xchg
jmp
aaa
xlat
call
xor
push
push
mov
in
xchg
loope
jle
or
ret
mov
jmp
mov
mov
mov
ljmp
pop
xchg
int3
dec
neg
xor
insl
dec
pop
xchg
mov
leave
mov
mov
xchg
imul
mov
loop
aaa
bound
call
dec
jno
pop
ficoms
mov
or
rolb
xchg
orb
lds
ret
add
sbb
pop
jnp
sbb
gs
mov
into
lock
repnz
shlb
in
out
cmp
xorb
into
adc
cmpb
popa
cmpsl
bound
and
shll
xlat
mull
fistl
and
lock
das
or
sub
and
adc
mov
cmp
cmp
and
pop
shrl
in
jg
add
mov
push
mov
fadds
out
adc
cwtl
mov
fldt
mov
or
jmp
pop
mov
inc
sbb
cmp
lds
imul
ret
pop
sahf
inc
adc
ret
pop
call
or
shll
into
xchg
cmp
mov
std
add
in
iret
ret
inc
mov
adc
movsb
push
pop
in
addr16
repz
dec
sub
icebp
shrl
sbb
cmp
addb
and
lds
shr
xor
aas
jnp
out
mov
fs
lret
dec
cmp
xorl
inc
add
pop
es
and
xchg
rclb
mov
mov
je
test
cwtl
imul
sbb
fsubs
aas
ljmp
pop
mov
mov
test
testl
inc
add
popa
sub
sti
ss
call
mov
adc
ret
sarl
cmp
push
das
in
mov
out
idiv
subb
cmp
xorb
fmulp
movsb
and
cmp
loope
fildl
jp
stos
push
loope
es
inc
or
aad
dec
add
xor
dec
hlt
mov
mov
inc
fnstsw
popf
ljmp
pop
sarb
neg
sub
inc
test
push
enter
fwait
cmp
pop
mov
jg
fistpll
cmp
insl
popa
in
mov
pop
xchg
cmp
mov
and
lcall
shr
ds
ss
pop
rorb
dec
cmp
adc
jae
push
jecxz
dec
lock
lea
jne
orl
idivl
adc
lcall
movsl
or
and
aas
mov
sbb
sbb
xchg
lock
lahf
enter
scas
test
aaa
xlat
push
mov
push
jo
shrb
pop
cmp
mov
xchg
pop
pop
sti
cmp
rcrb
out
fisubl
addl
enter
and
jge
jp
fnstsw
cltd
pushf
adc
mov
pop
mov
pop
loopne
cmp
mov
pop
sbb
pop
or
push
daa
mov
lret
test
inc
sbb
lahf
add
mov
mov
xor
push
dec
sbb
subl
jge
pop
jb
arpl
ss
scas
and
or
iret
gs
xchg
adcb
mov
dec
int3
in
repnz
out
outsb
fwait
inc
fidivrs
cmp
ss
jmp
add
xchg
movsl
mov
mov
cltd
add
fs
xor
xchg
lods
movsb
push
push
inc
and
pop
sti
mov
imull
sbb
adcb
imull
inc
cmpb
stos
mov
pushf
sbb
call
sbb
pusha
insl
popf
mov
faddl
jmp
ss
js
mov
outsl
mov
jne
ljmp
loop
dec
shlb
lea
adc
xchg
or
pop
in
in
mov
dec
mov
in
jge
imul
mov
loopne
repz
stc
sarb
adc
insb
loopne
xchg
mov
or
andl
inc
enter
xchg
xchg
rcll
push
push
test
mov
cmpsl
dec
andb
daa
aam
cmc
xchg
enter
gs
cmp
test
xchg
sbb
inc
sbb
sub
lock
cmp
xor
jl
cld
dec
rorl
jle
push
scas
jecxz
mov
int3
xor
addl
jl
dec
andb
mov
sbb
jnp
or
jmp
mov
sti
call
ror
ja
add
jmp
push
jg
dec
incb
xor
sbb
out
imul
sbb
leave
mov
pop
les
fildll
jge
out
cmpsl
jle
push
lcall
jg
add
flds
popl
xchg
das
daa
cmp
vaddss
push
scas
lret
xor
stos
jmp
sbb
pop
stos
xchg
data16
mov
aam
cmpsb
ljmp
shll
jbe
adc
push
cld
mov
aad
call
test
iret
js
jnp
pop
or
jle,pt
cmpb
sti
sbb
imul
insl
jp
roll
jl
ja
inc
mov
jb
enter
mov
ffree
jnp
sti
test
repz
xor
sahf
in
lock
mov
fstp
les
outsl
cli
push
xchg
jno
cmp
and
dec
mov
iret
fbstp
daa
fisttps
ja
mov
or
push
sbb
or
xor
lret
jae
sbbb
pop
lods
data16
popa
mov
dec
ds
xchg
mov
jp
push
ja
mov
sub
push
mov
xor
stos
push
adc
aas
cwtl
shrb
pop
push
jge
add
pop
cli
fnstcw
shl
jg
iret
insl
cmp
std
lahf
sub
fwait
and
inc
int
lcall
cs
int
or
in
push
or
xor
enter
pop
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
mov
sbb
mov
mov
sbbl
xor
orl
add
andl
mov
mov
xor
orl
push
mov
mov
sbb
mov
xorl
add
orl
mov
mov
movzwl
sub
mov
adcl
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
sbb
mov
mov
xor
mov
adc
mov
subl
add
movzwl
movl
cmpl
je
cmpl
ja
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movb
lea
orl
mov
xor
mov
mov
sbbl
xor
sbbl
add
adcl
mov
and
movl
push
mov
add
movl
not
mov
movl
cmpl
je
cmpl
jg
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
jmp
cmpsl
test
cltd
mov
pcmpgtw
xor
addl
cld
bound
fidivl
push
call
inc
inc
and
fwait
leave
clc
test
mov
adc
mov
call
popf
xorl
sbb
cmp
inc
stos
xchg
sub
ss
leave
jo
jl
aaa
mov
mov
imul
mov
adc
aam
pop
addl
xchg
setbe
aaa
sub
mov
movsb
test
add
push
repnz
cmp
cmp
fsubrl
mov
leave
mov
add
xor
pop
push
lahf
pop
add
pop
or
scas
or
xchg
jb
xor
xchg
fs
popf
jle
mov
push
jle
js
mov
shr
mov
fwait
push
push
cmp
or
xchg
push
mov
pop
cmp
xchg
xor
mov
fstpl
dec
jns
lret
sbb
rol
mov
xchg
jbe
fcoms
rolb
dec
add
push
repnz
sub
mov
cltd
out
mov
adc
scas
dec
mov
ret
jg
mov
pop
inc
mov
repnz
in
cmp
pop
ja
je
or
iret
push
push
cmp
into
or
or
jge
sub
inc
ret
and
add
ljmp
into
xor
dec
adc
aas
sub
xlat
movsl
jnp
mov
mov
mov
xchg
add
sbb
mov
jmp
adc
push
mov
add
cmp
push
jecxz
js
add
lods
aam
jbe
adc
add
xchg
pushf
pop
popl
jns
in
mov
xchg
dec
push
mov
cld
enter
or
inc
jno
ljmp
mov
arpl
fwait
xchg
outsb
inc
pop
les
and
jecxz
dec
jg
mov
push
dec
push
rorl
pop
test
fildl
mov
loop
push
js
mov
jmp
in
aaa
ret
lahf
stos
push
cs
jne
mov
jmp
int3
clc
in
stc
mov
xchg
push
call
les
adc
sub
lods
and
test
push
mov
and
btc
test
pop
fstl
out
in
jae
xchg
scas
mov
out
lcall
lea
fisttpl
pop
outsl
push
mov
leave
push
push
aad
test
cmp
test
adc
push
jbe
and
mov
andb
fs
outsl
fsubr
pop
xchg
mov
cmp
test
cmp
jmp
call
sub
sahf
push
xchg
fcompl
addr16
loop
leave
out
int
xchg
lods
sub
scas
pop
cmpsl
das
lock
test
loop
cwtl
ds
std
leave
push
in
iret
cld
pusha
sbb
cmp
jge
xchg
outsb
or
mov
sbb
pusha
push
push
cmp
mov
pop
fwait
mulb
sub
add
out
and
xor
ret
and
sti
push
in
aam
xchg
stos
test
jmp
dec
jb
or
ss
movsl
pushw
inc
inc
add
pop
mov
fisttpll
xchg
cld
das
mov
sbb
lret
das
sti
adc
jo
jae
ss
xor
or
rorb
pop
push
cltd
push
cmp
xor
sti
or
in
pop
leave
aas
pop
mov
adc
mov
shll
in
mov
in
push
out
in
push
ja
data16
inc
in
loop
cli
negl
sub
add
sbb
mov
lods
jb
jg
jbe
push
sub
jmp
scas
pushf
faddl
or
mov
jno
lret
lock
jae,pt
push
inc
pop
dec
inc
shlb
xchg
jns
push
adc
xchg
es
inc
sub
push
xchg
stc
pop
les
lea
imul
adc
shrl
push
cmp
xchg
xor
repnz
sub
movsb
lods
int
mov
mov
adc
jmp
flds
cmp
fisubs
jl
in
mov
addr16
push
inc
lcall
fwait
js
or
cmpsb
test
jmp
sbbl
mov
sub
push
sti
pushf
ss
scas
fisubs
out
lea
pop
xlat
fdivs
pop
fldl
or
xchg
lods
sbb
dec
sarb
mov
ss
adc
nop
scas
pop
xlat
lods
mov
jecxz
adc
jne
popa
adc
popa
pop
sub
out
sub
mov
fcmovb
scas
ror
rcll
jp
jmp
jb
xor
push
ja
inc
or
imul
out
xlat
in
add
loopne
daa
mov
stos
loope
mov
test
in
pop
add
and
cmp
mov
pop
mov
into
jecxz
leave
loop
mov
popa
cmp
aam
pop
sbb
mov
sub
sub
nop
aad
mov
push
mov
in
sti
and
cwtl
mov
scas
cli
pusha
sbb
mov
adc
mov
or
mov
aad
add
loope
pop
cmp
leave
ljmp
js
pop
xchg
cmp
jmp
pop
ret
push
xor
lods
pop
push
sub
sub
jne
or
in
ss
fimull
xchg
mov
sahf
mov
out
loope
outsb
movsl
pop
adc
push
add
mov
mov
jp
fimull
adc
mov
sub
push
test
mov
fistpl
mov
cmpsb
lret
mov
push
ret
mov
or
cmp
out
mov
xchg
mov
mov
daa
insl
inc
fcmovbe
stos
add
pop
sbb
cltd
lahf
cmp
push
xor
movsb
adc
inc
out
jp
mov
popf
sub
push
cli
testb
dec
dec
fimuls
int
cwtl
push
mulb
sub
jp
jo
ds
pop
cmpsb
mov
fisttpl
imul
add
xchg
xchg
fldl
adc
sbb
push
pop
xchg
adc
xor
inc
adc
jle
cld
testl
rcll
sti
in
popa
js
add
cltd
mov
cmp
imul
bound
push
push
pop
sar
call
fdiv
nop
push
popf
ret
ljmp
cld
and
int
and
cli
or
adc
and
dec
leave
ret
mov
inc
lods
in
cmc
mov
outsb
or
dec
ret
mov
push
sti
jo
stos
or
nop
imul
push
addr16
dec
lcall
jmp
xor
mov
inc
push
iret
lods
push
mov
fldt
xchg
data16
pop
push
inc
push
jno
test
push
sbb
cmp
fsts
xchg
dec
push
lcall
repz
sub
push
jge
xor
dec
mov
jo
in
scas
inc
cmpsb
sub
sbb
xchg
inc
aas
sbb
rcrl
and
dec
jne
repz
test
push
jg
mov
fnsave
dec
xchg
dec
dec
push
in
inc
test
fldenv
rclb
pop
pop
cmc
xchg
outsb
outsb
test
mov
push
cmp
and
adc
sub
add
fisttpl
divl
sub
xchg
cmp
mov
xchg
sub
in
inc
sub
push
pop
mov
pop
int3
jne
xchg
les
aaa
scas
xor
cli
popf
aam
push
fists
mov
inc
in
movsb
xor
pop
pop
inc
add
mov
dec
push
cltd
mov
cmp
jmp
lods
add
lahf
xchg
call
popf
rcll
sbb
pop
jne
and
aam
testb
add
dec
roll
mov
popf
int
jle
test
push
js
cwtl
push
xor
lods
pop
pop
sbb
cmp
jg
imul
sarb
out
pop
xor
pop
push
popf
aas
dec
int
xor
add
lock
lret
mov
jecxz
xchg
xor
jnp
inc
and
push
ret
sarl
push
pushf
xor
loope
push
push
sbbb
jp
ficoms
stos
mov
dec
dec
xor
movsb
jne
cmpsb
sbb
push
test
pushf
or
filds
out
dec
ds
cltd
cs
dec
push
out
pop
adc
dec
xchg
inc
xor
faddl
mov
dec
push
lahf
sub
adcb
mov
stos
add
jno
adc
push
dec
xchg
push
cmp
aad
sbb
xor
cmova
test
adc
mov
cmp
lods
mov
stos
mov
fwait
sbb
in
adc
insl
pop
insb
dec
sub
lds
std
lret
fldt
dec
aad
int
or
clc
pop
daa
inc
aaa
mov
mov
arpl
inc
scas
mov
mov
mov
fldl
sahf
push
mov
shlb
in
push
pushf
mov
scas
mov
pop
sub
js
out
addl
push
push
adc
jo
stc
cmp
roll
outsb
cmpl
jns
stos
xor
ret
int3
insb
pop
icebp
imul
xchg
adcb
cwtl
push
and
test
dec
fsubrl
xchg
pusha
data16
fcompl
or
in
inc
addb
push
cli
dec
add
mov
dec
sub
mov
pop
in
ljmp
outsb
in
in
push
lcall
jnp
addr16
adc
data16
sbb
sub
xor
mov
gs
out
std
adcb
out
xchg
or
mov
es
gs
xchg
sbb
in
push
ss
fcmovnbe
std
repz
in
mov
adc
lret
and
sub
pop
push
pop
mov
neg
pop
dec
cmc
cwtl
in
jne
add
push
adc
insb
sub
fs
scas
inc
test
jg
cmpsl
inc
movsl
add
add
rclb
icebp
lods
loopne
in
jne
out
adcl
inc
pop
cwtl
inc
imul
mov
jbe
ficoms
leave
hlt
dec
xchg
and
lods
dec
je
push
sti
fimuls
fstpl
jne
loopne
cwtl
sub
cmp
ja
lret
and
out
lret
mov
dec
push
test
pushf
sbb
mov
mov
filds
testb
xchg
mov
gs
pop
cltd
fsubrp
push
inc
cmpsl
sti
jg
std
and
mov
cs
adc
push
bound
sahf
cltd
psubb
mov
jmp
jmp
cmpb
push
push
lcall
xchg
test
push
js
xchg
sbb
mov
xchg
or
shr
mul
adcb
aam
push
and
jbe
les
jp
outsl
mov
ja
mov
lahf
clc
or
stos
mov
das
xchg
int3
and
push
pushf
in
movsl
call
cmp
push
fisubs
dec
insb
jae
test
xchg
out
adc
or
xchg
in
and
imul
pop
mov
jbe
lods
pop
and
xchg
jmp
pop
inc
cmp
dec
imul
stos
add
mov
je
mov
xchg
xchg
mov
faddl
mov
outsl
pop
imulb
or
jg
mov
aam
pop
dec
cmp
lcall
inc
add
ss
mul
jb,pt
test
xor
lahf
add
sbb
fbstp
or
sub
mov
insl
mov
inc
mov
out
add
lea
jg
pushf
ret
outsl
mov
xchg
inc
movsl
lock
adc
int
mov
or
loop
adc
fcmovbe
jae
inc
das
mov
bnd
sub
sbbb
inc
movsl
icebp
sahf
push
lods
insb
pushf
stc
fwait
leave
mov
pop
aaa
dec
lret
push
inc
fwait
jae
enter
and
jle
enter
faddl
cs
cmp
dec
dec
or
xor
cmp
jns
repz
sub
rcrl
xchg
and
dec
aam
or
jb
inc
sbb
cmp
pop
loopne
test
aas
sahf
pop
inc
stos
repnz
nop
aad
shlb
addr16
push
dec
rcll
sahf
jecxz
frstpm(287
mov
int
popa
lcall
xor
nop
add
cld
lock
xchg
std
mov
adcb
cmc
cs
insb
adc
jae
xchg
divb
cmp
pop
ss
loope
call
inc
clc
pop
rcll
aas
add
sub
adc
popf
or
mov
jle
clc
sub
icebp
fiadds
ss
xor
and
jmp
xor
test
xchg
pop
jo
int3
out
adc
and
add
sub
enter
adcl
rcll
push
leave
and
sbb
loope
jg
jno
repz
jb
xlat
mov
icebp
mov
inc
call
sub
mov
icebp
pop
stc
dec
pop
sar
fwait
iret
cmpsl
into
cmp
cs
icebp
imulb
pop
xchg
in
mov
dec
pmuludq
mov
lock
xlat
dec
or
pop
sarl
fcompl
jmp
push
cmp
stc
sarl
mov
cli
cltd
arpl
lea
lods
dec
stos
in
mov
xchg
iret
imul
push
into
sub
mov
pop
sub
xor
cmp
sub
inc
inc
rcll
xor
ret
push
sub
mov
push
jae
xor
sbb
stos
orl
add
jbe
lret
sub
xor
scas
add
mov
popf
pop
fisubs
jl
push
or
xor
jno
cmp
leave
rcll
inc
add
into
xor
push
cltd
mov
jnp
adc
add
or
mov
push
ljmp
push
dec
mov
fmul
mov
adc
into
cmp
push
mov
push
arpl
xor
mov
mov
outsb
aad
jnp
icebp
test
fs
int
ja
popl
jo
and
daa
or
into
std
push
imul
sub
fs
push
dec
ss
push
xchg
cmp
lea
jns
jne
ret
jbe
jns
add
lahf
insl
pop
subb
fstpt
cli
repnz
lods
aad
push
adc
mov
ficoml
loope
jo
inc
dec
jb
lock
fsubrl
dec
test
aas
xor
mov
jno
mov
stos
or
mov
push
fs
xor
fs
pop
and
aad
add
out
xor
cli
adc
out
pop
fld1
push
cmpsb
pushf
cmp
jge
enter
cmp
jmp
dec
dec
rcll
push
dec
movsl
mov
pop
insb
movsbl
pop
mov
ror
gs
add
mov
ror
mov
test
push
psllw
daa
movsl
inc
jb
std
adc
mov
mov
add
mov
cmpsl
or
adc
adc
lret
adc
fcmove
mov
adc
or
inc
inc
test
stos
popf
ss
xchg
cmp
jbe
jnp
cmpsb
adc
jne
adc
xchg
inc
dec
mov
test
insb
jbe
ds
sub
lock
in
aas
mov
lods
in
xchg
adc
xor
add
jmp
jmp
add
cmp
or
add
lds
fnstcw
scas
dec
jp
mov
and
jmp
adc
jbe
mov
es
pop
not
adc
inc
jmp
mov
jo
sub
dec
fnclex
jp
ljmp
pop
adc
lret
xor
mov
push
dec
inc
call
mov
lret
lock
xor
leave
cmp
out
outsl
insl
test
loopne
push
push
lods
test
sbbl
push
xor
mov
addr16
outsb
scas
aad
sbb
push
cmpb
aad
mov
ficoml
sub
mov
sbb
shl
out
mov
mov
mov
lods
adc
sbb
and
nop
outsl
movb
pop
in
pop
test
into
leave
fidivs
lods
cmp
push
rorb
and
pop
pusha
fisubl
dec
xchg
pop
adc
pop
sub
clc
cli
cmp
jne
enter
movsl
in
out
cli
xlat
pop
insb
outsl
loope
or
outsl
gs
jle
sub
jns
pop
insl
fisubrs
xor
mov
push
cmc
test
xchg
dec
cmp
std
out
loopne
stos
cmp
aam
sbb
lock
inc
fcoml
int
out
lods
push
fisttps
add
in
faddl
xchg
js
aad
cmpsb
add
sub
mov
cmpsl
jge
jo
repz
outsl
mov
lds
loopne
inc
int
xchg
scas
sbb
fildll
push
jnp
pop
add
nop
aas
jg
ror
clc
mov
sub
loope
ja
aaa
enter
sub
roll
shll
xor
dec
adc
lret
push
and
fisttpl
sbb
cld
xor
das
jl
aam
push
loop
adc
mov
icebp
xor
loop
fnstsw
testl
and
jae
adc
repz
jmp
inc
pop
add
movsl
enter
fildll
outsl
sub
or
jmp
xchg
aam
scas
push
sub
xchg
addl
mov
mov
lods
mov
addl
xorb
stos
int
in
mov
mov
pushf
sub
sbb
je
test
inc
sub
push
inc
mov
mov
out
rcrl
repnz
scas
cmpl
test
pop
popf
cld
jnp
jl
movsb
adc
xor
inc
stos
jne
mov
lahf
xchg
pop
lcall
je
in
inc
mov
out
scas
inc
aad
ljmp
and
mov
sub
pop
fwait
aaa
imul
aas
aaa
test
lea
cwtl
jne
rorb
inc
roll
pop
adc
sti
roll
stos
cs
add
movsl
sub
mov
call
sub
fidivrs
lea
decb
add
ds
inc
jecxz
imul
jle
cmp
lret
stc
xchg
in
push
sub
int
xor
cmp
inc
xchg
mov
imul
mov
into
andl
sbb
jnp
lock
inc
fimull
jl
adc
ljmp
and
push
xor
stc
jmp
leave
sub
inc
push
inc
and
jle
ret
and
fs
daa
push
inc
lahf
mov
inc
icebp
das
jno
stos
mov
sbb
sub
hlt
sub
ljmp
or
insl
int3
inc
ret
repnz
sub
repnz
cmpsb
clc
pop
xor
popf
pop
jo
jne
imul
fdivrs
or
add
int3
insl
dec
pop
push
mov
mov
jmp
rcrl
into
clc
gs
testb
sbbb
add
dec
inc
addr16
push
jno
mov
or
into
icebp
adc
aaa
xorb
in
xchg
push
repnz
insb
xor
add
sti
outsl
pop
faddl
pop
mov
insl
jmp
icebp
or
sub
xlat
shll
xlat
add
push
sub
lods
adc
adc
out
orl
push
mov
mov
or
push
push
es
add
lods
push
adc
lock
push
jnp
lea
pop
test
inc
pop
xchg
xchg
icebp
sarb
push
cmovnp
push
std
or
loopne
mov
gs
push
lret
pop
jmp
sub
lds
fnstenv
jmp
sub
sub
xchg
in
mov
push
mov
jp
push
mov
and
push
jp
cmp
fnsave
arpl
inc
xorl
mov
cwtl
push
ja
pop
jge
lea
rcrb
sbb
push
pop
shll
lods
in
call
and
mov
mov
mov
outsl
sbb
test
jae
push
ljmp
or
out
xor
sbb
stc
xor
sbb
rcrb
jmp
out
xchg
dec
mov
lock
inc
sbb
in
int
sahf
int
in
cmp
fisubs
push
fsubrl
sbb
and
shlb
sahf
or
sub
inc
aad
fnstenv
add
mov
fildl
and
mov
xchg
xor
push
std
popa
jmp
and
lea
mov
mov
pop
repnz
pop
in
or
shrl
add
pop
in
pusha
adcl
jne
loopne
daa
lods
xchg
js
addr16
cs
sbb
mov
xorl
cmp
ljmp
xor
dec
mov
mov
addr16
and
push
mov
xor
pop
jne
dec
push
jp
mov
fmull
enter
and
movsl
cmp
adc
add
ljmp
fbld
push
inc
push
cs
cmp
in
jo
test
and
mov
sub
scas
std
dec
je
jo
inc
mov
sti
sbb
push
in
cmp
mov
in
repz
pop
xor
cld
enter
jns
test
std
push
in
sti
enter
xor
sbb
sbb
into
adc
in
mov
lea
and
not
add
dec
push
xor
jg
sub
sub
mov
inc
sub
add
add
and
jnp
add
jge
sahf
jp
mov
iret
sbb
jb
imul
fbstp
into
jne
sbb
mov
jns
cmp
or
adc
dec
sti
fdivr
test
repz
je
mov
popa
cmp
std
cld
iret
mov
fs
movsl
icebp
push
fistps
arpl
out
rolb
nop
and
xlat
push
mov
dec
sub
adc
jae
sub
in
jmp
xor
stos
jl
orl
add
idivb
adc
cli
xchg
rcl
adc
mov
cmp
aam
into
das
jle
add
fnstenv
push
loop
js
dec
pop
lret
int
jb
outsl
sub
pop
ret
pop
inc
push
mov
stos
hlt
adc
mov
test
out
iret
add
cmc
sbb
js
imul
mov
mov
rcr
cmpsl
outsb
sbb
sbb
adc
jne
cs
inc
push
in
psrlw
or
test
jbe
fs
mov
and
push
popf
sbb
or
shll
in
inc
mov
fwait
hlt
dec
shrl
push
mov
ds
sub
cmpsl
cmp
mov
out
or
cmpsl
pop
cli
xor
into
inc
push
test
pop
xor
xor
push
mov
iret
adc
clc
int3
jg
loope
in
add
imul
and
pusha
or
push
jg
sub
popa
fidivrl
ret
or
ljmp
cs
ret
jns
xchg
xor
cli
mov
cmp
inc
or
sbb
out
cmp
cs
fwait
test
xor
xchg
mov
ret
inc
repz
push
in
xor
rclb
lock
cld
call
cltd
outsb
fcmovu
fildll
cmp
xor
rcll
sarl
mov
xchg
jl
in
add
mov
cmp
cmpsl
xlat
fstpl
mov
sti
mov
cld
ficoml
sarb
jmp
in
rclb
mov
ljmp
dec
mov
jl
sub
ja
out
out
jmp
push
cmpsl
dec
nop
jo
std
stc
sub
test
dec
jmp
in
test
mov
xor
loop
scas
pusha
push
xchg
and
stos
and
and
adc
jg
imul
pop
aad
push
aas
pop
xchg
push
and
dec
jns
shll
xchg
mov
insl
mov
mov
pusha
les
adc
xor
and
inc
in
adc
rolb
enter
fwait
decl
ret
aad
adc
xchg
into
out
jecxz
inc
push
cmp
lret
pop
movsb
mov
fistpll
inc
xor
dec
outsl
adcb
cmp
stos
lods
push
sub
cmp
aam
test
pop
xor
lock
imul
sarb
nop
dec
addb
xchg
sbb
in
fcomi
shr
sub
data16
jmp
push
aas
sub
sub
cmc
pop
ret
int
mov
leave
out
lods
out
xchg
mov
and
int3
cmc
rcrl
lret
cmp
movsl
stos
in
scas
mov
imul
decb
jns
pushf
xor
mov
jbe
and
mov
arpl
lea
inc
sar
aas
mov
and
mov
sub
imulb
ljmp
loop
dec
xor
cmp
sbb
and
dec
fidivrl
and
sub
jne
sub
int3
push
cmp
in
mov
xlat
or
xchg
inc
test
inc
cltd
in
cs
jno
cltd
push
lret
push
dec
jecxz
ljmp
ret
cli
lock
lret
jno
andl
imul
add
adc
jg
or
inc
mov
xor
xchg
ficoml
out
jg
mov
out
mov
movsl
hlt
and
aaa
or
aaa
lds
stos
fstl
xor
push
out
mov
aaa
insb
std
push
jo
in
std
xchg
push
push
lods
mov
xor
into
add
xor
or
lods
ja
gs
mov
mov
mov
sarb
mov
adc
jo
jae
jp
push
cmp
shll
sbb
jae
daa
fwait
outsl
adc
xchg
shlb
shr
lea
mov
jne
loopne
pop
mov
mov
or
dec
cmp
scas
in
jb
sbb
enter
sbb
push
outsb
add
sbb
sub
pop
nop
cld
dec
out
sbb
fs
xor
and
andl
adcb
push
sub
sbb
lcall
fcoms
inc
sarl
and
test
rolb
mov
imul
int3
and
fstl
cmp
jle
sbb
mov
aas
mov
xchg
mov
jnp
or
push
popa
ljmp
inc
mov
sahf
add
out
mov
popa
push
xchg
iret
das
inc
scas
jmp
jp
sub
fildll
rcrb
jnp
sar
cmp
mov
cwtl
jno
mov
popa
or
fcmovb
out
jg
gs
lods
jl
movsb
scas
add
jo
or
popa
add
cld
inc
mov
rcrb
sahf
push
mov
add
mov
dec
and
mov
push
gs
arpl
adc
outsb
add
push
addr16
pop
pusha
popf
pop
cmc
orl
push
pushf
leave
cmpsb
fistpll
xchg
ds
adc
fwait
or
rorl
fsubs
mov
pop
inc
rclb
repz
bound
inc
mov
das
jecxz
clc
into
aad
cmp
adcb
cli
je
stos
mov
or
out
movsl
arpl
push
push
dec
push
shll
popf
pop
cmp
into
xrelease
cmp
lret
xchg
xchg
addl
imul
sbb
into
int
pop
movsb
add
fnstcw
xchg
sbb
adc
ja
xlat
push
sbb
add
imull
push
jp
fdivs
jp
mov
test
stos
imul
ffree
icebp
mov
add
daa
ret
sbb
or
adc
pop
pop
sub
xor
test
cwtl
pop
dec
lahf
imul
jp
jae
mov
add
xlat
ljmp
dec
cmpsl
daa
int3
inc
fcoms
repnz
jmp
roll
adc
jp
or
test
push
mov
xlat
aad
adc
sbb
xchg
stos
mov
mov
nop
mov
xchg
lods
fisubs
sbb
rclb
mov
ret
jl
rcll
test
cmp
or
pop
mov
cli
or
out
unpckhps
cmc
repnz
je
fimuls
sbb
test
pop
repnz
or
lods
std
orb
pop
inc
fwait
aad
lds
outsl
insl
rclb
mov
inc
sbb
lods
insb
inc
sarl
sub
xchg
imul
fdivl
xchg
cmp
popa
inc
jbe
in
adc
mov
scas
in
scas
mov
fsubr
mov
xchg
bnd
leave
in
int3
push
test
and
imull
adc
dec
jne
test
jb
push
ss
test
and
mov
rol
jne
push
and
ret
mov
rcll
cs
push
mov
aas
arpl
dec
into
out
arpl
xchg
fists
das
popf
wrmsr
ljmp
mov
addr16
into
pop
push
in
push
xchg
int3
test
inc
jns
call
icebp
and
testl
pop
loopne
and
adc
and
inc
xchg
xchg
pop
int
movsl
cmpsb
mov
xchg
decl
dec
push
pushf
mov
movsl
and
loop
or
push
fwait
sbb
xor
les
in
lea
sbb
jae
mov
jg
sti
in
in
push
movsl
dec
mov
mov
sub
gs
repnz
mov
es
test
and
mov
cmpl
pop
and
lea
repz
sub
mov
add
pop
jno
push
xor
and
insb
mov
pop
aad
sbb
mov
call
ljmp
cli
jae
addr16
mov
cmc
adc
jmp
roll
out
imul
xchg
fildl
cmp
popf
lea
adc
push
in
dec
cwtl
dec
add
or
std
sbb
xchg
xchg
loopne
pop
push
inc
mov
inc
mov
fistl
insb
mov
jo
adc
mov
inc
enter
ss
mov
out
sub
pop
push
shrd
add
imul
dec
iret
mov
push
and
cld
mov
aas
mov
fimull
adcb
roll
jnp
scas
or
mov
lds
mov
xchg
mov
mov
movsb
call
pop
cld
mov
cmp
shrl
or
mov
mov
enter
mov
fnstsw
lds
pop
mov
fnsave
pop
dec
sbb
or
in
pop
ret
xor
xor
cld
test
clc
add
lods
daa
test
mov
leave
popf
imul
insl
sbb
aam
lret
pop
inc
std
cmpsl
insb
xor
mov
sub
cmp
arpl
lods
pop
insb
or
add
sub
push
daa
mov
loopne
mov
and
xor
mov
adcl
push
add
jmp
movl
mov
mov
movl
inc
cmp
jb
mov
andl
xor
add
movl
jmp
and
mov
neg
mov
andl
xor
movl
mov
andl
add
movzwl
xorl
mov
mov
jmp
lea
sub
stos
test
fwait
shll
addb
push
ja
push
mov
gs
mov
fimuls
rolb
fmuls
sbb
enter
xchg
dec
and
sub
mov
adc
aad
xor
test
inc
cwtl
pop
rolb
pop
lahf
jno
jg
jg
push
inc
mov
shrb
mov
inc
ret
push
sarb
les
add
inc
rorb
adc
mov
adc
imul
push
aaa
dec
je
push
and
and
pop
loope
stos
aad
xor
dec
aaa
lret
sbb
mov
test
daa
stos
std
pop
mov
ror
sbb
xor
inc
cwtl
repz
xor
test
shrb
cmp
jae
lea
and
or
xor
cmp
movsl
dec
mov
xor
xchg
test
add
dec
pop
pusha
dec
xchg
fsts
xorb
dec
mov
cli
lea
cmp
adc
icebp
mov
lret
popf
mov
sbb
movntq
xchg
divl
jb
push
push
mov
xchg
dec
hlt
movsl
jg
fldt
jp
mov
jmp
flds
test
jg
and
dec
sbb
mov
outsb
jbe
sbb
cltd
add
rcrb
das
inc
test
fisubl
sbb
icebp
or
mov
test
into
clc
push
sub
in
sbb
out
arpl
into
jo
je
stc
xchg
push
jmp
fs
adc
hlt
fadds
fldenv
jp
lret
pusha
fcoml
data16
stos
enter
add
xchg
stc
mov
xchg
pop
das
pusha
int3
mov
enter
fiadds
ds
ljmp
je
xor
jo
mov
jb
inc
flds
ljmp
dec
sbb
insb
push
js
es
cmp
es
sbb
popf
addr16
stos
adc
loop
out
inc
xchg
daa
arpl
push
cs
sahf
fisubrl
ja
dec
pop
cmp
les
pop
addr16
mov
pop
daa
insb
je
ljmp
mov
or
ror
inc
jne
lcall
xor
dec
sbb
xor
fldl
cwtl
pop
lods
into
and
dec
dec
dec
pusha
jg
pop
xchg
das
daa
das
iret
cmp
dec
imul
aaa
repz
xchg
sbbb
mov
js
pop
addr16
enter
cli
fcomip
xor
frstor
test
lds
jg
push
pop
push
mov
incl
loopne
adc
pop
in
pop
and
int
cmp
cmp
mov
ja
or
and
push
sbb
loope,pt
cmp
jnp
dec
add
fucomp
push
fiadds
mov
sub
pop
xor
adc
stos
adc
push
out
es
push
cmp
imul
adc
jl
pop
cmp
pop
xor
mov
fs
and
sbb
dec
cmpsb
test
dec
mov
lahf
sahf
xchg
fsubrs
movsl
xchg
mov
stos
fldenv
and
mov
orl
pop
mov
adc
push
mov
imul
lods
jne
loop
lds
and
inc
jns
mov
add
divb
mov
rcll
add
fidivrs
sbb
inc
dec
mov
std
pop
jl
insb
aas
pop
or
jmp
cmpsb
popl
inc
push
add
nop
popa
or
inc
shl
scas
push
xchg
fwait
test
adc
imul
and
inc
mov
ja
stos
aas
add
adc
or
idivl
xchg
sbb
mov
hlt
cld
add
inc
notb
movsb
aad
jo
test
and
imul
add
aam
xor
dec
mov
arpl
push
xor
pop
push
insl
cmpsl
movb
aam
push
push
mov
fisubrl
mov
ja
push
daa
sarb
inc
add
test
xor
in
cli
arpl
out
in
push
add
cmp
push
lea
and
ss
arpl
inc
fnsave
fildll
cmp
xor
dec
add
stos
dec
xchg
mov
inc
xchg
call
popa
and
mov
int
ret
inc
mov
sub
iret
xchg
pop
sub
dec
insb
mov
fldl
js
mov
pop
aad
out
scas
gs
lods
mov
xlat
fisubs
push
loope
insb
mov
push
lcall
dec
icebp
or
nop
push
mov
or
mov
cwtl
push
sbb
test
jge
push
hlt
mov
in
dec
xchg
cwtl
fistpll
lods
test
and
xor
jns
std
jbe
or
jo
or
stos
lahf
cs
je
pop
dec
gs
mov
test
cmc
jns
and
or
ret
iret
xor
dec
push
mov
cmp
lret
daa
fstl
and
jl
loop
cmp
mov
ds
sbb
test
dec
ret
sbb
daa
inc
lds
mov
stos
jp
test
int3
aad
mov
sarl
arpl
and
push
pusha
daa
fldl
inc
push
dec
imul
jp
mov
mov
scas
nop
insl
mov
sbb
jno
loopne
inc
mov
popa
es
sbb
ficoml
ret
lret
jg
subb
rcrb
xor
sbb
ds
js
gs
loopne
loope
repz
cmp
andnps
les
jmp
inc
adc
jp
and
cmp
pop
pop
pop
insb
inc
test
ljmp
dec
stc
adc
inc
jae
cmp
and
sbb
lds
icebp
cs
fwait
inc
pop
mov
cmp
mov
inc
std
lahf
dec
or
push
ja
repz
adc
out
xor
clc
pop
sbb
cld
inc
jp
xchg
mov
out
mov
push
std
fwait
dec
lods
dec
jnp
aam
and
mov
lret
xor
stos
mov
mov
shl
xor
inc
hlt
sbbb
aaa
inc
mov
mov
mov
ss
lods
ffreep
sub
or
xchg
es
shll
repnz
pop
loop
pop
stos
cmove
adc
loope
and
pop
rclb
out
movsl
sub
adc
cmp
sahf
push
jns
pop
fwait
push
mov
cmp
and
pop
jl
popa
dec
shl
jb
xor
or
mov
rcrl
adc
jl
xor
or
push
orl
dec
dec
inc
mov
movsl
shll
and
or
mov
and
scas
inc
rol
inc
and
jl
fnstenv
ss
fxch
adc
jbe
inc
fnsave
jp
mov
addl
and
pushf
aad
and
inc
js
push
push
mov
cmp
imul
jno
lahf
je
fsubl
push
int
cmc
inc
aad
xor
into
mov
out
es
out
sub
cmp
and
pop
sub
push
orb
mov
add
push
dec
into
sbb
xorb
or
mov
jo
dec
push
cld
and
cmpsl
cmpsb
cmp
mov
call
or
add
sbbb
cmpsl
outsl
adc
and
lret
cmpb
mov
fisttpl
or
aam
push
cmp
cltd
es
dec
nop
mov
sub
in
mov
in
cmpsl
xchg
loopne
cmp
insb
or
pop
int
pop
jge
sub
mov
inc
xchg
in
nop
or
mov
out
cmp
jg
or
lds
push
int
rorl
in
fdivrs
sbb
xorb
fwait
jp
pop
sbb
mov
jns
sti
push
repz
test
repz
out
jne
lret
gs
add
and
xchg
mov
std
fdivr
stos
cld
and
rcl
add
adc
into
mov
and
dec
fcmove
imul
shll
inc
lods
push
push
xchg
or
mov
fsubs
push
or
or
xchg
iret
mov
jecxz
and
lahf
mov
out
push
out
mov
xor
dec
mov
orl
sti
je
cltd
dec
fsub
mov
and
rorl
ljmp
fisttps
push
cld
xor
popf
jmp
xchg
adc
xor
cmp
out
add
pushf
popf
mov
dec
lods
jbe
outsl
nop
dec
cmp
dec
push
xor
insb
adc
inc
ret
inc
test
bound
sbb
mov
jno
cmp
inc
data16
or
sti
test
ja
add
movsl
les
inc
fists
andb
ds
outsb
xchg
ret
mov
test
test
outsl
stc
add
movb
lret
jp
imul
ret
add
xchg
mov
sub
xchg
bound
dec
fisttpll
xchg
mov
mov
push
push
xlat
daa
popf
mov
sbb
push
nop
xchg
mov
pop
wrmsr
addr16
adc
sbb
inc
xchg
add
aaa
repnz
mov
xchg
aas
inc
fwait
push
sub
jl
scas
enter
mov
nop
dec
jnp
mov
ret
jae
push
sbb
mov
sub
aad
mov
jle
addps
mov
xor
push
dec
sub
cmp
pop
jbe
xor
pop
int
gs
mov
aam
push
mov
iret
iret
lea
mov
mov
jl
mov
inc
jl
jge
shll
divb
xorb
lods
xchg
iret
je
xchg
pop
sbb
dec
pushf
nop
lock
inc
dec
mov
mov
adc
sub
aad
xchg
ds
mov
cmp
or
pop
int
cs
push
or
push
pusha
pop
cmpb
std
push
insb
inc
scas
xor
scas
dec
or
cmpb
and
sub
sbb
or
cld
scas
lahf
in
jg
xchg
cmc
hlt
adc
sbb
xor
and
inc
scas
aaa
test
jnp
rcl
mov
mov
aaa
lret
jge
lods
push
xor
hlt
cltd
jg
test
cmpsl
ss
out
xlat
mov
frstor
rdmsr
xchg
jne
mov
pop
mov
jl
xchg
or
and
push
inc
xor
leave
shl
adc
loop
jecxz
lods
jbe
inc
in
lcall
aam
into
jg
ret
cld
and
jmp
lcall
and
in
int3
xchg
outsl
cmp
jae
mov
in
loope
mov
pop
lods
mov
fcomi
out
cmp
clc
call
pop
jle
sub
mov
icebp
iret
jbe
popf
push
jp
js
jo
ja
lea
xchg
movsl
ret
pop
jmp
mov
cs
je
inc
mov
fwait
jb
in
vpmacsww
das
jg
sub
cli
pushf
ss
inc
cmpsl
sbb
mov
pop
rol
or
jae
loopne
cmc
mov
movsb
jl
push
test
pop
or
and
adc
pop
ret
std
cli
jmp
cmp
into
jle
push
push
insb
call
dec
pop
imul
mov
leave
add
fadds
rcrl
dec
mov
notl
aaa
cmp
jne
mov
mov
mov
lcall
mov
fimuls
shlb
bound
fistps
pop
mov
add
jl
inc
mov
push
jbe
shll
ds
pop
insb
xor
mov
and
add
xrelease
mov
or
insb
or
mov
sub
icebp
xor
jle
pop
push
or
add
mov
aaa
mov
pop
cmc
mov
jo
cltd
cmp
xlat
adc
or
add
ss
jg
aaa
sbbl
ljmp
jae
xchg
jle
loopne
pop
xchg
int3
xchg
inc
fadd
movsb
inc
call
sbb
sbb
sahf
loope
lds
mulb
cmp
xchg
out
out
dec
xor
sbb
jbe
xchg
pusha
mov
shrl
push
rcl
sbb
aaa
cmpsb
lods
jmp
stc
push
je
sub
pop
cli
ss
int
mov
cmp
mov
cmp
xchg
test
cmpl
pop
inc
jbe
fisubs
cwtl
inc
je
push
xchg
mov
xor
loopne
lret
mov
jbe
je
out
pop
mov
push
add
out
mov
scas
cltd
sarb
cmp
push
xlat
add
sarb
jle
inc
jb
lods
mov
enter
icebp
dec
sub
insl
ja
inc
mov
cmp
icebp
xlat
std
insl
xor
add
xor
je
std
xchg
jnp
or
xchg
adc
les
pop
loope
aaa
cmp
decl
mov
jmp
in
insb
jnp
dec
dec
insl
ja
jmp
stc
lods
daa
or
addr16
push
sti
out
or
ss
cwtl
out
xchg
and
xchg
mov
jnp
leave
nop
inc
je
out
aas
icebp
or
leave
clc
sbb
mov
push
cmp
pop
xor
sub
mov
inc
or
jle
mov
xor
mov
xchg
or
test
fistl
mov
adc
push
out
or
push
pop
jne
mov
ss
and
addr16
cmp
jle
clc
dec
cmp
scas
jb
and
popf
shrb
sbb
flds
rorl
lds
imul
popf
add
js
mov
sub
lock
mov
inc
push
js
comiss
addb
pop
int3
cli
push
dec
cld
push
mov
mov
mov
int3
outsb
inc
daa
and
push
sbb
imul
or
mov
add
int3
cmp
adc
xlat
ljmp
mov
outsb
pop
cmpsb
arpl
in
test
adc
push
mov
xchg
movsl
jno
lcall
ljmp
cmpsl
lret
pop
mov
test
jg
dec
mov
inc
stos
jno
xor
cli
test
iret
addr16
jg
adc
ret
adc
cmpsb
xor
ds
fs
lret
pop
es
scas
lcall
jne
sub
and
loop
mov
in
add
push
sbb
hlt
dec
ret
xchg
pop
insl
sub
xor
test
repz
and
jp
int3
test
idiv
inc
scas
pushf
mov
repz
jns
aad
pop
sub
adc
dec
fisttpl
inc
and
out
data16
lods
pop
sbb
movsb
adc
cmp
lcall
mov
ds
mov
fs
sbb
jb
sahf
pusha
lods
push
out
loopne
enter
pop
cmp
xchg
cmp
mov
in
testb
mov
aas
ljmp
lcall
adc
xlat
lahf
fxch
iret
adc
fbld
aam
dec
icebp
jne
repnz
push
or
fstp
nop
bound
mov
sbb
jle
pop
jnp
dec
sarl
fmull
std
cmp
adc
ret
aam
push
pusha
mov
stos
push
sub
repz
mov
push
stc
cld
inc
popf
arpl
pop
jge
pop
addr16
cli
cmp
pop
insb
jb
out
divl
out
inc
nop
xchg
adc
andb
pop
int3
sbb
inc
push
dec
pusha
add
jo
mov
pop
mov
jne
cs
daa
mov
or
xchg
add
and
jge
loopne
mov
call
push
pop
xlat
mov
add
dec
sbb
roll
ret
add
push
into
out
daa
js
sbb
test
loopne
cwtl
shrl
cmp
push
mov
xlat
es
int
adc
loop
jle
and
test
mov
push
inc
and
adc
inc
and
loopne
ret
sub
popa
aas
insl
xchg
fwait
rcrb
mov
xchg
cs
cmpsb
lds
lret
dec
mov
pusha
xchg
jmp
out
mov
aad
scas
scas
pop
add
fcompl
ljmp
movsl
mov
cli
sub
inc
fnstcw
cli
pop
fwait
int
or
imul
inc
sub
adcl
data16
jne
sub
test
mov
cmp
das
xchg
xchg
insb
cld
ja
adc
inc
nop
js
in
adc
adc
cld
test
mov
fmull
cli
lret
xor
sub
xor
cli
push
xchg
adc
sub
mov
pop
sbb
sbb
inc
jb
xorl
mov
or
outsb
aaa
mov
pop
icebp
es
cmpsl
inc
and
add
repz
aam
sub
mov
jno
fcomps
add
cld
sbb
fadd
xchg
pop
xchg
into
add
mov
adcl
pop
add
inc
jae
jmp
mov
push
xchg
mov
jne
or
call
push
cld
sub
pushf
clc
mov
fs
fidivrs
loopne
xor
push
add
add
sbb
mov
popf
adc
shll
xchg
xor
adc
cmp
mov
js
pop
pop
sbb
add
pop
pop
pop
cmp
and
out
outsl
insb
fldt
ljmp
pusha
loope
or
pop
stc
xor
test
stos
sub
sbbb
xorb
xchg
jo
jmp
push
sbb
faddp
lea
lock
dec
sub
pop
out
sbb
mov
jecxz
pop
fidivl
iret
mov
and
mov
xchg
add
pop
fadd
subl
xor
aaa
test
pop
repnz
scas
jo
mov
push
push
aam
roll
cmp
sbb
push
jne
fldcw
cmp
andb
arpl
ljmp
loopne
push
jge
icebp
sarl
push
stos
xchg
movsl
jmp
sbbl
adc
or
or
mov
fnstcw
xchg
xchg
push
rcrb
shll
js
cmp
mov
adc
push
sbb
lcall
aad
fstpt
insb
dec
mov
gs
pop
jmp
repnz
inc
enter
das
mov
push
adc
sbb
inc
xor
push
add
out
call
and
inc
inc
sqrtps
fstps
mov
xchg
dec
popa
jb
ds
andl
add
cmp
cmp
cwtl
pop
arpl
mov
mov
mov
jne
jae
js
aas
mov
nop
aad
mov
popf
sbb
push
ret
and
push
arpl
mov
test
xor
loop
rclb
mov
js
repz
shrl
jno
push
lret
jmp
mov
cld
fiaddl
mov
pop
dec
jb
xchg
cmp
les
mov
or
aaa
xor
outsl
cltd
mov
adc
clc
mov
fwait
lcall
add
loop
cli
pop
cli
loope
sbb
addb
xor
mov
enter
stc
jns
loop
and
jecxz
push
inc
ss
or
ss
inc
xor
insb
adc
jb
pop
push
icebp
stos
repz
mov
jnp
pop
add
adc
and
push
ss
add
aad
out
fisttpl
gs
mov
push
add
xchg
ljmp
and
cwtl
inc
dec
or
aam
testb
push
scas
sbb
out
cld
mov
fisttps
inc
push
sbb
sbb
fwait
push
pop
movsb
call
adc
push
fucomi
or
dec
jge
mov
roll
cmp
sti
adcb
jge
enter
mov
inc
adc
dec
or
lcall
or
cmp
push
jns
fisubs
movsl
or
repnz
idiv
out
xchg
arpl
das
xchg
add
jle
aad
mov
aad
pop
xchg
lods
test
dec
sub
and
xchg
push
lret
mov
aaa
xor
cmp
jns
addl
fwait
or
hlt
dec
push
pop
mov
sarb
pop
jmp
lcall
jno
and
xor
cvtps2pd
add
jecxz
push
push
in
les
mov
gs
in
cwtl
subb
inc
orl
inc
and
test
lret
mov
aam
inc
leave
cs
mov
xchg
jbe
movsb
inc
clc
jg
adc
in
inc
push
or
cmp
dec
cmc
addr16
lea
xchg
add
dec
mov
pop
mov
jp
sub
push
push
into
pop
mov
imul
adc
push
mov
sub
loopne
cmc
push
filds
mov
dec
dec
pop
cld
bound
fsubs
jnp
rolb
fs
push
inc
push
mov
pop
ja
push
cwtl
adc
push
lahf
sub
cmp
sbb
push
dec
aas
into
push
popa
outsl
test
fwait
push
test
shl
and
es
faddl
inc
lahf
inc
and
lret
loopne
fdivl
lcall
pop
les
dec
inc
mov
jmp
pop
pop
cmp
shr
mov
popa
inc
xor
sub
arpl
sbb
push
sub
jecxz
lods
lea
cltd
mov
popf
cmpsl
xlat
jnp
std
xchg
add
addr16
int
icebp
push
aam
divb
sub
leave
push
or
inc
sub
mov
cmp
dec
movsl
es
add
es
ja
es
cmp
pop
sub
ret
imul
aad
and
repz
push
dec
fnstcw
adc
xchg
sub
adc
jmp
pop
repz
hlt
jge
dec
iret
imul
push
int
or
adc
add
dec
ja
or
adc
jno
nop
dec
repnz
mov
out
mov
pop
es
sub
inc
bound
shrl
sbb
pop
dec
arpl
je
jp
filds
xchg
out
lods
into
dec
test
fidivl
push
fsubs
test
mov
xor
pop
sbb
push
mov
roll
shrb
inc
rclb
dec
jmp
hlt
xchg
inc
mov
fwait
clc
dec
shrl
gs
lods
jmp
push
addr16
pop
leave
loopne
cld
xor
xchg
push
xor
adc
mov
jns
scas
hlt
or
inc
fs
ja
xor
es
pop
sub
js
push
std
sbb
outsl
aad
mov
outsb
add
pop
icebp
into
pop
test
scas
clc
in
add
clc
or
mov
and
sub
cmc
invd
xor
sahf
xlat
cs
lods
test
push
ja
lods
and
mov
jns
imul
nop
jmp
xchg
mov
js
mov
mov
push
std
imul
cmc
adc
add
mov
sti
pushf
dec
mov
jge
ss
adc
aam
popl
jne
pop
dec
mov
stc
lahf
inc
mov
cwtl
outsb
fsubp
arpl
sbb
push
loop
pop
insb
and
ds
push
aaa
ret
out
fsubs
mov
ja
dec
lods
adc
inc
mov
sti
adc
inc
cmpsb
mov
filds
and
hlt
or
into
dec
test
lods
sbb
cmp
jge
fwait
ss
xorb
push
lea
xlat
rol
les
shl
fsub
inc
mov
ret
mov
insl
pop
cmp
test
and
push
add
scas
add
push
mov
fimuls
dec
cmc
pop
mov
jp
mov
enter
cmpsb
sub
popf
xchg
jge
adc
iret
add
rcrb
adc
adc
addr16
addr16
movb
push
popf
out
dec
int
mov
jns
fscale
movsb
out
xchg
clc
aas
subb
jnp
xchg
add
and
scas
mov
dec
sbb
mov
mov
sahf
mov
or
mov
fimull
xchg
into
or
outsl
sub
pop
xchg
mov
arpl
mov
dec
cmpl
dec
xchg
jmp
ljmp
jp
pop
cmp
nop
or
mov
mov
cmpsl
mov
push
pushf
outsl
outsl
sub
cmp
or
enter
push
int3
xchg
xor
lret
pop
test
clc
xchg
dec
movsl
call
inc
push
xchg
fwait
sub
dec
mov
repnz
cmpsb
inc
lods
stc
in
cmpsl
inc
pop
add
out
in
or
lret
or
adc
lahf
push
sub
test
xor
adc
ja,pn
push
xor
rcll
sub
es
ljmp
mov
cmc
in
mov
push
arpl
lea
ror
incl
or
adc
push
cltd
das
test
xchg
stc
dec
test
icebp
cmpsb
adc
enter
fdivs
pop
fs
rcrl
dec
dec
mov
aaa
xchg
and
xor
cmpl
push
adc
in
sub
scas
rcll
dec
add
pop
je
ret
or
dec
sbb
rcll
sbb
dec
sub
push
loopne
lahf
cmpsl
push
lods
js
or
out
jle
repnz
stos
xor
shll
sbb
inc
rcrl
repnz
inc
gs
inc
and
dec
aaa
pop
lods
pop
aam
out
sub
scas
sbbl
loop
dec
mov
outsl
test
xchg
je
mov
mov
adc
orb
mov
mov
shll
inc
add
jo
mov
lds
nop
rclb
cmpsl
mov
div
mov
leave
pop
pop
enter
je
aas
xor
jp
or
nop
daa
negl
ret
add
loop
sahf
mov
addb
xchg
or
icebp
cmp
int
int
leave
or
xchg
add
sbb
lods
push
fs
xor
movsl
icebp
mov
inc
cmpsb
push
mov
ja
aas
xchg
iret
outsl
mov
inc
fwait
mov
testl
popf
mov
jg
test
jecxz
mov
xchg
or
jne
xorl
pop
jmp
inc
and
and
test
mov
xchg
push
loopne,pt
adc
ss
or
jno
pop
and
in
ljmp
mov
sbbb
add
call
rorl
add
les
inc
mov
in
xchg
loop
push
inc
jne
or
clc
int
push
xor
lfs
ror
push
or
or
sub
inc
sbb
jne
and
loop
push
inc
outsl
sbb
sbb
sahf
xor
jmp
mov
jb
dec
jmp
mov
repnz
lock
add
xor
bound
cmp
out
xor
cltd
sub
shll
inc
mov
es
enter
popa
fsubrl
rorl
pop
mov
arpl
inc
fld
sarl
add
iret
push
cmp
mov
xchg
cmpsl
in
ret
sbb
sbb
cli
or
cwtl
add
popa
push
mov
fdivrl
hlt
adc
jns
dec
mov
cmp
sub
pop
sub
add
jl
sub
mov
pop
popf
jp
sub
adc
xor
push
mov
xor
addb
push
scas
xor
mov
jo
cmc
adc
stos
jnp
stc
out
jmp
cmp
lods
dec
xchg
nop
call
loop
test
adc
fcmovne
or
out
stc
cmp
cmpsl
push
popa
flds
daa
inc
repnz
or
aad
hlt
xchg
cmp
sahf
ds
or
push
mov
xchg
pop
or
mulb
xor
leave
leave
subl
mov
pop
outsl
jl
sbb
xchg
fsubs
movsb
das
js
lahf
sbbb
adc
sub
sarl
lods
lahf
cmpl
push
sub
mov
mov
loop
fs
cmp
cmp
sub
mov
loope
sbb
jne
xchg
add
test
popf
xor
arpl
cltd
ret
dec
testb
mov
enter
inc
dec
sub
ret
mov
sti
mov
mov
inc
fnstenv
dec
mov
lcall
hlt
fiaddl
ss
mov
cmp
cs
push
adc
sahf
test
roll
lods
mov
sbb
je
loope
lahf
das
mov
mov
add
adc
call
outsl
lret
stos
lods
and
jmp
xchg
insl
dec
jp
and
and
push
cs
jnp
and
mov
mov
pop
fs
in
push
in
lahf
repz
test
inc
sbb
loope
mov
xor
int
cmc
popf
lret
mov
xor
mov
lods
std
mov
cmpsb
cmp
mov
in
push
lret
push
fcomps
ret
cmp
insb
cltd
rclb
cwtl
mov
sub
jg
push
dec
test
outsb
popa
and
fsubs
jge
pavgb
and
mov
sub
daa
cmpb
jb
xchg
or
loop
push
pop
mov
mov
movsl
mov
push
inc
aaa
ss
push
adc
dec
mov
lds
fldt
xor
adc
dec
adc
into
mov
mov
adc
push
cmp
sub
loop
xchg
mov
xor
cmc
outsl
je
jns
loope
in
test
cmp
or
add
add
lret
jo
push
mov
jae
mov
mov
cmc
xchg
cwtl
xchg
push
push
jge
out
aad
pop
sub
mov
sbbl
sbb
jbe
mov
mov
ss
mov
testl
sub
addr16
into
cltd
pushf
in
int
pop
xchg
sub
fldt
or
hlt
popa
mov
in
cli
or
xchg
int3
pop
call
jbe
add
jno
pusha
mov
pop
fmull
push
push
int
js
inc
int
lods
xor
jo
mov
xlat
xchg
shll
and
leave
jno
sub
or
loop
pop
imul
ret
mov
or
fsubl
cmp
pushf
repnz
orb
jge
fcoms
lahf
pusha
movzwl
xorl
xor
movl
add
mov
movl
mov
inc
mov
movl
cmp
movl
jne
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
push
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jb
xor
add
add
xor
mov
sbb
mov
xor
xor
add
movl
cmpl
je
cmpl
jbe
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
movl
movl
sbb
movl
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
mov
dec
mov
jmp
mov
add
mov
sub
mov
xor
xor
mov
adc
add
mov
mov
mov
movl
je
mov
mov
negl
xor
xor
sub
xor
sub
addl
xor
orl
mov
andl
mov
inc
mov
cmpl
jl
jmp
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
mov
adcl
add
imul
mov
or
mov
mov
mov
sub
xor
mov
mov
xorl
add
andl
or
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
subl
add
xor
xorl
mov
sbbl
mov
adc
mov
sbbl
add
addl
and
movzwl
xor
mov
add
mov
or
mov
lea
xorl
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
sub
add
mov
mov
xor
mov
mov
xor
add
jne
movl
jmp
mov
xor
or
xor
mov
sub
xor
sbb
mov
jmp
out
dec
mov
stos
xchg
loop
je
stc
inc
addb
ljmp
mov
adc
cld
daa
mov
or
adc
mov
and
pusha
mov
xor
aad
mov
in
outsb
dec
pop
jmp
in
daa
jbe
sbb
cmp
outsl
ljmp
sbb
mov
rolb
fistps
pop
dec
dec
push
mov
sbb
cmpsl
shlb
outsl
ja
sbb
or
orl
push
int3
xchg
jle
stos
adc
sub
enter
cs
arpl
iret
iret
jmp
xchg
out
mov
mov
je
es
lea
addb
mov
xchg
out
je
cs
push
movsl
in
mov
xchg
and
jno
pop
or
pop
movsl
movl
cmp
adc
fs
mov
adc
inc
ret
arpl
lds
mov
or
xchg
in
push
jo
mull
xchg
mov
fnstenv
cmp
mov
scas
cvttps2pi
pop
and
aaa
mov
hlt
xor
aas
fisubrs
in
jne
lods
push
movl
nop
ret
push
test
pop
lret
ds
push
or
pop
push
fdivs
pop
push
mov
jmp
sbb
or
dec
lea
je
adcl
sub
jmp
inc
mov
cwtl
mov
icebp
pusha
es
jb
pusha
push
outsl
aam
push
sti
xchg
pop
popl
push
push
enter
jmp
jp
imul
pop
cmpsb
in
ss
pop
xchg
pushf
add
add
jns
xor
inc
int
xor
negb
iret
push
mov
mov
enter
outsl
push
scas
add
loope
jp
fdivrs
and
and
xchg
cmp
xchg
aad
mov
cltd
test
stc
lods
mov
movl
mov
cld
jno
xadd
or
mov
jns
dec
js
pop
pop
mov
jne
cmpsb
pop
scas
das
cmc
mov
in
fldenv
icebp
stos
jmp
mov
mov
mov
and
sahf
sti
or
sub
mov
clc
mov
dec
mov
push
or
scas
or
sbb
fcomi
jns
push
mov
imul
inc
cmp
sarl
dec
pushf
seto
in
mov
xchg
inc
cwtl
pop
scas
adc
inc
out
xor
mov
push
push
call
insb
insl
ljmp
jmp
jge
lcall
dec
and
stos
bound
ror
test
push
std
out
fidivrl
xor
xor
fdivrs
dec
cmp
xchg
push
jae
xlat
cmp
and
rcr
mov
fsts
mov
cmp
icebp
faddl
stos
inc
repz
mov
testb
gs
imul
sbb
pop
xchg
sbb
xchg
pop
jmp
cmc
das
xor
xor
andb
jp
xchg
inc
adc
xor
lahf
inc
sbb
mov
pushf
cmp
inc
mov
rcr
or
fcomip
add
xchg
es
lcall
sbb
ret
pop
lock
movsb
lds
jge
xor
mov
sub
adc
sub
mov
mov
or
subb
push
out
cmp
insb
lret
sub
xchg
ja
inc
iret
or
pop
aaa
insl
jp
xor
aas
imul
mov
sbb
push
fwait
lret
xchg
fcmovb
jo
ret
lret
mov
rolb
mov
mov
notl
dec
dec
gs
ds
inc
cmp
pop
sbb
cltd
jg
dec
dec
mov
dec
call
pop
xchg
stos
in
fwait
dec
push
adc
clc
outsb
and
test
fildll
stos
and
ret
sarl
push
push
stos
cmovae
mov
sub
adc
add
cld
mov
xchg
pushf
sub
adc
test
push
pop
imul
mov
lret
push
int
jbe
sahf
popf
and
ljmp
test
push
fisubrs
and
shll
inc
stos
adc
fdivl
push
xchg
sub
outsb
inc
mov
push
test
call
pop
dec
scas
lahf
mov
out
fdivs
js
imulb
das
push
sub
ror
xor
bt
dec
adc
loope
and
or
lret
hlt
imul
rclb
insb
popa
or
adc
or
adc
xchg
pop
mov
repnz
pop
inc
xchg
sub
jne
or
mov
popf
lds
je
push
cmpsl
xchg
dec
mov
xchg
imul
and
push
mov
jbe
and
aam
mov
jno
ret
mov
mov
fucomip
stos
add
cmc
addr16
mov
jno
push
jo
jmp
popf
mov
rclb
mov
fisubs
mov
xchg
sub
ss
mov
scas
rorl
cmpsl
sbb
and
mov
movups
pop
or
mov
fnsave
cmp
fldenv
es
mov
mov
push
dec
pop
xchg
sub
push
sahf
jae
sub
and
in
rorb
add
in
lret
das
lahf
jg
int3
mov
lods
or
cmp
cmp
xor
rolb
add
dec
cmpsl
invd
or
out
push
mov
push
pop
xchg
cld
mov
fdivrs
dec
inc
insb
push
dec
cltd
mov
mov
lret
addr16
stos
mov
mov
pop
sub
shrl
and
insb
out
maskmovq
xor
loopne
push
pop
rolb
pop
dec
jge
add
jge
movsl
adc
icebp
rclb
nop
jae
xchg
les
add
aas
daa
lock
sti
inc
into
scas
jg
les
mov
pop
mov
pop
daa
or
movsb
dec
nop
sbb
mov
xchg
add
push
mov
cltd
push
sbb
leave
loop
inc
dec
or
addr16
push
insl
inc
cmp
dec
clc
dec
mov
dec
jns
fmuls
jbe
cwtl
xor
popf
jbe
push
push
fs
pop
xchg
cmpsb
adc
jbe
inc
lods
and
push
fst
fmull
loope
mov
cmp
mov
lods
push
xchg
aaa
push
lret
add
das
ljmp
sbb
lret
incl
fstpl
xchg
rcr
jo
push
shr
jg
inc
cmp
push
mov
repz
mov
add
mov
xchg
pop
add
pop
arpl
inc
adc
xchg
pop
lret
mov
in
int3
clc
shr
movsb
shll
call
adcl
adc
in
je
adcb
js
lock
xor
mov
stos
pop
in
mov
sbb
aam
jo
lock
push
mov
fbld
aam
test
mov
nop
jl
mov
out
adc
cmp
cli
aas
mov
sub
pop
xchg
xchg
add
push
mov
xchg
movsl
cmp
xchg
cmp
dec
and
push
mov
in
sbb
ljmp
mov
lods
push
sti
inc
das
or
mov
stos
cmp
ljmp
xchg
mov
gs
in
and
sbb
stos
fbstp
clc
mov
scas
ja
sub
in
sbb
fadd
aas
mov
lods
in
cmp
loope
mov
push
push
stos
adc
push
mov
ficompl
inc
movlps
adc
jne
out
inc
popf
cmp
aam
fcoms
call
jo
popf
mov
xor
aas
in
xor
les
jmp
adc
mov
fnsave
jae
test
sbb
sti
leave
sub
xchg
xchg
push
mov
leave
bound
outsb
out
rcrl
mov
pushf
decl
outsl
scas
test
push
insb
push
xchg
ret
in
mov
fmuls
and
jb
jne
mov
cmp
adc
loop
out
add
add
xor
mov
or
pop
lret
daa
sbb
ss
pop
dec
stos
sub
rcrb
add
xchg
jo
sahf
pop
rolb
cmp
mov
and
mov
fstps
fstps
lret
pushf
roll
in
rorl
shll
adc
test
push
push
push
mov
pop
adc
bound
mov
outsb
inc
gs
stc
xchg
daa
pushf
cmp
and
mov
insb
shlb
sti
lret
popa
cmpsb
out
xchg
ret
ss
or
mov
jge
loopne
adc
into
aaa
cmp
add
mov
lret
sub
and
adc
test
or
dec
xlat
int
sub
xchg
in
arpl
aaa
mov
pop
ret
enter
outsl
fbstp
fidivrl
mov
pop
jle
pop
adc
mov
or
iret
push
push
loopne
and
mov
stos
add
cmp
les
inc
das
xor
jb
test
dec
jp
lock
nop
fs
dec
lds
mov
jl
dec
cwtl
mov
ret
jnp
push
mov
in
add
mov
fwait
jmp
stos
movsb
dec
xchg
mov
pop
out
xor
pop
mov
xorb
aad
mov
xor
push
add
push
and
adc
iret
cmp
shlb
mov
xchg
pop
bound
cwtl
xor
dec
push
add
cmpsl
rcr
gs
and
jmp
test
mull
scas
fadd
jb
lahf
mov
push
mov
mov
pop
mov
sbb
out
popf
pop
test
sub
jl
dec
ljmp
mov
imul
sbbl
mov
cmp
movsl
jnp
push
push
stc
jbe
inc
js
xor
fdivrl
pop
je
repnz
imul
leave
dec
xor
inc
push
jmp
daa
inc
js
fildl
dec
sbb
xor
pop
xchg
sahf
add
cmp
fsts
xchg
pop
push
xchg
mov
pop
mov
cmp
jmp
xor
add
jbe
inc
mov
loope
jmp
notb
out
add
outsl
imul
movsb
mov
and
in
addb
or
out
fisttpl
in
sub
adcb
push
shl
sub
sub
loopne
push
ficompl
out
ja
int
lods
pxor
jmp
repz
adc
inc
add
mov
push
not
movsb
repz
sub
int
dec
push
test
movsb
div
pop
daa
popf
and
pop
sub
addr16
sbb
or
mov
leave
aas
fidivrl
shll
in
lods
xchg
test
cmp
clc
ss
push
ljmp
cltd
add
or
xchg
cmpb
mov
mov
mov
enter
and
xor
mov
lds
mov
ds
mov
dec
add
addr16
xchg
xchg
shlb
xor
cmc
xor
sub
push
shlb
sbb
dec
xor
dec
out
jno
mov
xchg
add
mov
adc
dec
ret
ret
xor
flds
xchg
xchg
cmpsl
test
not
jns
negl
dec
dec
xor
test
xorb
in
clc
imul
sub
mov
mov
inc
push
xor
fistps
sti
out
lock
pop
mov
sbb
jl
add
das
push
out
shlb
mov
xchg
sbb
jge
sbb
xchg
adc
out
jg
in
pop
or
pop
inc
aaa
sub
int3
push
mov
inc
scas
cltd
ret
test
mov
ret
pop
xor
lods
es
push
leave
aad
xchg
add
xchg
pop
icebp
xchg
cmp
sbb
adc
mov
ljmp
mov
xchg
stc
xchg
push
ret
mov
loop
fidivrs
iret
jecxz
inc
out
mov
outsb
insl
lcall
sbb
sbb
xor
sub
jmp
xchg
in
xchg
clc
push
jae
adc
scas
xchg
mov
lds
stc
in
ret
pop
pop
loopne
movsl
aas
subb
negl
cli
cld
aas
arpl
or
jno
enter
push
sub
bound
sbb
xor
into
aad
call
leave
ja
or
outsl
xchg
jmp
jns
xchg
mov
add
lret
dec
sbb
or
inc
dec
mov
pop
jecxz
das
mov
lahf
jmp
sub
inc
sbb
decl
jb
push
jae
mov
fistpl
idivl
in
jae
sti
sbb
loope
addr16
das
xchg
lahf
jbe
es
adc
jge
cli
aaa
test
add
ds
icebp
add
adc
rclb
push
xchg
and
inc
mov
sarl
cmp
lea
mov
ds
and
and
push
or
add
mov
insl
leave
les
repnz
outsl
cmp
xchg
loop
and
mov
mov
hlt
test
jns
movsl
xchg
xchg
fwait
das
and
mov
adc
popa
adc
or
imul
inc
aad
insb
cmp
dec
push
sbb
sbb
jne
add
int
aam
popa
jnp
fadd
std
adc
pop
dec
add
jns
pop
setl
rorb
and
and
divl
jecxz
ja
xchg
mov
sub
push
pushl
add
pop
jg
and
int3
rcrl
mov
cmpsb
sbb
jae
xlat
push
push
jns
mov
rol
popf
inc
xor
push
mov
pop
dec
clc
sub
or
dec
mov
lea
test
insl
shlb
lock
shlb
pop
mov
pop
jp
jl
les
inc
xchg
sbb
imul
ffree
pushf
mov
sbb
mov
mov
xor
dec
in
scas
mov
xor
or
mov
pop
ficoms
and
sti
inc
jno
stos
dec
and
xchg
lret
fidivl
lcall
and
or
add
fimuls
jbe
nop
inc
xchg
arpl
cltd
clc
mov
dec
cmp
dec
ds
popa
sub
ja
inc
addl
sub
movsl
xchg
in
into
jge
aaa
or
adc
jnp
lds
push
out
out
fwait
mov
pop
mov
sbb
xchg
sbb
mov
ljmp
push
inc
enter
int3
out
js
xchg
cld
movsl
and
inc
test
cmpsl
cltd
pop
std
pop
dec
out
test
add
push
jbe
iret
popa
cmp
adc
in
mov
test
cmpsl
movsl
shl
mov
cmp
pusha
faddl
adc
mov
adc
icebp
cmp
dec
mov
pop
add
adc
dec
xchg
loop
adc
pop
mov
shll
outsl
xor
ss
xchg
ret
mov
jnp
pop
push
movaps
orl
cmp
pop
pop
daa
pop
rolb
or
jecxz
xor
dec
popa
fwait
arpl
fisubs
inc
sti
data16
xor
into
xor
stc
ret
push
dec
mov
or
push
aam
jp
loope
pop
rep
or
outsl
cmpsb
dec
mov
add
mov
push
lods
mov
js
test
mov
xchg
mov
shrb
mov
cmp
jne
xor
cmpsl
rorb
pop
fiadds
mov
sub
adc
xchg
bswap
fstps
or
push
push
mov
es
and
lock
mov
enter
in
sub
jae
in
dec
outsb
mov
adc
mov
fldt
push
mov
inc
jo
pop
add
xchg
pop
xor
data16
push
xchg
pop
fdivl
jb
mov
arpl
inc
out
js
pop
cs
or
push
aad
sub
and
dec
xorb
out
lcall
and
push
dec
js
xlat
sbb
add
clc
sbb
fwait
xchg
dec
and
mov
mov
mov
fistpl
dec
nop
cmc
cmc
pop
sub
dec
and
jb
mov
inc
adcb
mov
fwait
cli
sbb
and
xlat
jne
cmp
cli
aad
adc
ror
dec
mov
sub
inc
lods
rorb
fnstenv
dec
sbb
lcall
fildl
mov
push
push
test
aaa
into
in
bound
scas
imul
in
xchg
adc
icebp
inc
rol
add
pusha
mov
mov
imul
aam
es
sbb
cmpsb
xchg
andl
xor
jge
xchg
push
mov
test
ret
mov
pusha
lods
add
jg
pop
and
sti
test
int3
pop
xor
lret
fists
mov
cs
mov
push
cs
rolb
or
and
mov
ja
push
add
mov
mov
jne
inc
sub
das
pop
test
or
or
or
out
sarl
sbb
pop
mov
outsl
out
and
cltd
shll
std
xchg
aaa
or
fnstsw
inc
and
dec
push
lea
xchg
jns
mov
adc
jl
mov
fwait
mov
lock
shr
sbb
jmp
divl
hlt
cs
out
mov
sbb
inc
enter
cmp
or
or
iret
mov
cld
inc
ffree
mov
and
inc
cmp
pop
pop
popa
mov
xchg
in
jge
std
xlat
or
ror
filds
nop
xchg
inc
adc
mov
jae
pop
outsb
push
sbb
sbb
popa
and
shll
lahf
pop
push
sub
jg
icebp
in
icebp
outsb
lock
jb
ljmp
pop
lahf
mov
popl
jb
sti
mov
mov
adc
test
mov
pop
repnz
add
iret
enter
mov
aas
fwait
lahf
add
mov
pop
lods
int3
imul
adc
repz
testb
sti
mov
add
aas
push
leave
stos
js
jne
adc
popa
mov
loop
lret
or
sbb
xlat
outsb
pusha
cmc
dec
sub
mov
stos
lock
mov
mov
daa
icebp
cmp
das
fs
cmpsl
add
out
adc
mov
xor
arpl
or
dec
add
mov
xlat
outsl
shll
pop
cs
mov
jns
inc
fldt
mov
push
mov
inc
xor
xchg
movsb
clc
mov
or
pop
lds
xor
fs
adc
pop
sbb
fldcw
shlb
hlt
addr16
repnz
jp
ljmp
add
inc
cli
or
jnp
xchg
sub
jg
rol
xor
ror
bound
push
jne
pop
es
imul
movsb
stc
jb
vpunpcklbw
test
hlt
pop
mov
dec
test
movsb
ljmp
jb
and
xor
clc
nop
mov
sub
pop
push
push
cwtl
iret
sbb
jae
push
lea
test
loopne
test
outsb
cmp
les
dec
fstpt
mov
mov
dec
in
dec
push
xor
data16
sub
sub
jb
xchg
lret
decb
in
into
jecxz
sbb
xchg
rcrb
test
inc
jmp
xor
and
int
insl
xchg
adc
jnp
or
nop
cwtl
clc
imul
push
jl
cmp
sbb
lret
aas
mov
sub
js
or
xchg
cmp
mov
mov
ljmp
add
in
and
or
xchg
or
jne
jo
pop
mov
jge
sbb
aas
sub
push
lock
loop
pop
pop
fs
add
mov
xchg
mov
jno
repz
aad
mov
pop
testl
pop
clc
xchg
out
or
int
ss
imul
std
push
enter
mov
xchg
lea
dec
xchg
and
popf
sbb
inc
xor
and
inc
pop
stc
rclb
fwait
mov
cmpsb
dec
int3
pop
addr16
xor
in
out
sub
sbb
test
sbb
loope
inc
sub
sub
lock
or
lcall
shlb
and
pop
push
test
xchg
ret
test
or
inc
cmp
and
lret
push
clc
or
push
and
cmp
in
jp
mov
fsubs
dec
ret
xchg
insl
jns
lods
cmp
cmp
in
cmp
out
cld
shrl
js
pop
sbb
and
dec
push
push
stos
adc
je
xchg
cmp
or
fcoms
imul
xor
or
lahf
out
movsb
inc
cltd
and
cmp
scas
frstor
and
negb
aam
xor
hlt
inc
fwait
cmpsb
loop
push
xchg
aas
shr
jae
add
xchg
pop
add
mov
and
shlb
fcomps
rcrb
movsl
mov
sub
jbe
lret
loop
pop
and
push
push
dec
movsl
mov
sti
push
push
cmp
fwait
adc
sub
or
push
les
lock
outsb
frstor
mov
das
movsb
addb
or
lahf
out
arpl
xor
bswap
mov
iret
add
aam
iret
and
cmp
popf
mov
push
and
add
and
add
and
jl
fwait
jp
jnp
fidivl
or
lock
in
pop
fldenv
shrb
mov
or
dec
ficoms
int3
mov
push
enter
fidivl
xchg
fldl
fs
lds
pop
test
enter
pop
pushf
or
xchg
jle
cld
dec
sub
ret
push
int
lea
dec
in
imulb
mov
and
xor
jge
lret
or
xchg
fldenv
enter
inc
dec
jo
jns
and
shrb
lret
stc
and
aad
repz
daa
pop
add
scas
dec
xor
push
mov
adc
mov
sbb
mov
out
orl
inc
jmp
aam
scas
in
cmp
pushf
adc
sub
scas
shl
dec
push
jg
imul
dec
daa
aaa
pusha
pop
push
test
into
jnp
mov
push
dec
mov
fisttpl
cmp
scas
gs
in
mov
mov
fiaddl
bound
adc
jp
push
sub
aaa
rorb
enter
sub
mov
mov
xor
cmp
int
add
jmp
mov
faddl
loope
rcrb
xchg
sbbl
imul
push
sub
shrl
mov
push
loop
push
ljmp
ja
out
inc
push
adc
sub
inc
dec
rcll
std
dec
mov
rol
repz
decl
pop
sub
jmp
repz
adc
xchg
stc
flds
cmp
fidivrs
pop
jmp
stc
dec
test
xor
xlat
inc
xchg
sub
xor
adc
or
aas
xchg
les
mov
sbb
push
scas
mov
add
lods
add
bound
adc
movsb
lahf
xchg
aad
jbe
cltd
bound
jp
es
inc
push
sbb
pop
cmpsb
jl
int
cld
inc
inc
dec
xlat
mov
cmpsb
sar
xchg
inc
pop
mov
cmp
sahf
lods
pusha
pop
or
push
gs
mov
mov
lods
insb
movsl
imul
fadd
lret
aam
movsb
jmp
lods
mov
hlt
xor
fnsave
dec
xchg
imul
test
loopne
les
mov
jnp
int3
xchg
sbb
iret
mov
xchg
out
decb
mov
add
cmp
mov
out
xchg
inc
xor
and
xchg
sahf
test
int
lcall
adc
rcll
mov
mov
out
or
fidivrs
inc
jg
or
push
jo
sbb
ret
fucomp
std
stos
xchg
scas
pop
jno
mov
stos
lcall
mov
les
mov
jmp
lods
fidivl
add
adc
xor
or
and
jns
push
shll
pop
jecxz
and
inc
xorl
jge
jmp
add
lds
sub
jp
sbb
lock
jb
leave
sahf
mov
push
xchg
or
arpl
push
fucom
ret
stos
sbbl
aaa
cmp
pop
scas
bound
cmpsb
repnz
xor
ds
xchg
orl
jle
pop
faddl
orb
sbb
and
cmpsb
jecxz
jg
pop
dec
je
inc
mov
mov
rolb
inc
mov
mov
mov
jl
xor
adc
mov
sub
inc
aam
add
movsl
aas
lret
cmpsl
mov
cwtl
xor
fcompl
jmp
je
es
loope
push
imul
sahf
scas
repnz
or
ret
or
lds
jno
data16
push
mov
pop
or
lods
mov
test
inc
mov
xchg
pop
adc
and
cwtl
inc
addr16
mov
aaa
inc
sbb
push
les
fimull
hlt
adc
mov
fadd
mov
adc
icebp
mov
sbb
lret
in
jmp
int3
jo
test
jo
pop
cmp
das
jno
mov
xchg
pop
clc
aaa
inc
pop
push
sbb
out
adc
jns
fisubl
cld
outsb
int
inc
or
sbbl
xchg
xchg
incb
in
xor
std
pushf
popf
push
add
fidivrs
adc
inc
pusha
shlb
jle
stc
jp
sbb
in
mov
mov
sub
push
mov
lea
jae
insb
fdivs
mov
inc
stos
mov
sbb
xor
xor
aad
pop
or
call
lahf
or
sbb
sub
rorl
pop
lods
xchg
or
lea
push
xor
pop
add
stos
adc
jo
cmpsl
in
popa
loope
int3
inc
jb
aad
cmpb
pop
les
xchg
ret
mov
push
ljmp
lods
mov
imul
rorl
sbb
int3
fmulp
mov
lcall
movsl
sbb
sub
pop
sbb
cmc
cmp
movsl
fbstp
inc
and
sbb
outsb
jne
movsb
sub
pop
in
ds
cs
dec
cmpb
inc
fstpl
mov
pop
fiaddl
pop
add
fldt
fs
aaa
sbb
in
mov
lods
test
lret
sarl
aaa
pop
jecxz
cmp
jmp
mov
test
mov
arpl
pop
mov
dec
sbb
dec
pop
imul
mov
ficoml
xchg
pushf
cmpsb
push
add
jnp
pop
ljmp
sub
pop
xchg
inc
pop
add
shrl
dec
jge
pop
mov
mov
in
jb
sbb
jbe
in
sub
test
popf
lea
ss
pop
adc
rcrl
push
outsl
shl
add
mov
cltd
push
ffree
lods
push
fldt
mov
lods
mov
sahf
sub
mov
in
je
sbb
push
mov
fmull
pop
out
cwtl
push
pusha
lods
or
outsl
mov
xchg
dec
xor
inc
mov
jns
push
subl
or
xlat
sbb
ss
xchg
int
xchg
sbb
inc
pop
xchg
cmp
in
jecxz
mov
arpl
pop
push
lret
cmp
nop
mov
in
cmp
dec
and
add
inc
sbb
sbb
xchg
out
adc
sbbl
xor
in
mov
ret
mov
aas
push
rorb
mov
rcr
stos
dec
loopne
xlat
cmp
xlat
xchg
mov
mov
cmc
fcmovb
inc
sbb
jle
inc
add
mov
mov
ret
mov
incb
lock
loope
xchg
fnstenv
or
test
enter
outsl
mov
add
repnz
aaa
mov
ljmp
aaa
pop
mov
scas
fisubrl
or
hlt
lock
sub
xchg
push
jecxz
add
dec
iret
or
pop
xor
adc
mov
adc
idiv
jae
cmp
aas
shrb
ljmp
out
mov
in
cmp
aaa
and
je
jo
int3
cmpsb
jbe
rolb
lds
dec
sti
mov
xchg
dec
mov
leave
mov
jne
add
scas
sub
and
sbb
xchg
imul
pop
outsl
inc
leave
or
sub
ret
xor
push
xor
insb
ja
fbld
ret
xchg
add
nop
out
lahf
adc
inc
dec
adc
mov
adc
ret
push
push
fxch
add
ret
push
arpl
aad
fsubr
xchg
push
dec
shrb
mov
pop
fdiv
pop
adc
aad
jg
xor
pop
sti
sbbl
sbb
ret
aam
pop
pop
in
sub
mov
cmpsl
les
mov
pop
mov
push
in
add
sub
jno
in
push
mov
adc
jne
aas
loopne
cwtl
jecxz
xor
in
ret
mov
repz
repnz
mov
xchg
in
cwtl
mov
clc
in
pop
xor
stos
lahf
adc
mov
popf
ljmp
or
push
lock
mov
outsl
loop
xor
add
or
push
jnp
insb
icebp
repnz
xor
mov
clc
xchg
sub
inc
mov
in
lcall
jge
sub
jbe
call
sub
mov
cmp
xchg
pop
data16
dec
or
movsl
or
xlat
xor
inc
jle
lahf
fwait
out
fisubl
cmp
jne
jnp
popa
pop
add
test
xchg
int3
sbb
sar
test
sub
scas
out
push
mov
rclb
lea
cmp
pop
sahf
movsb
out
test
xchg
adc
cmc
cmp
push
xlat
mov
cmp
orl
cmpsl
xchg
jle
or
test
pop
les
lods
jmp
mov
mov
sar
push
and
push
dec
dec
or
out
test
xchg
es
movsl
add
xor
lret
cmpsl
cmp
mov
scas
lock
shll
aam
das
pusha
std
mov
cmc
test
test
jo
loope
ja
or
cmpsb
cli
push
cwtl
mov
pop
and
xchg
aaa
dec
mov
inc
imul
mov
daa
imul
les
shrb
jge
dec
js
std
jne
pop
mov
xor
push
jnp
outsb
sub
popa
mov
dec
lock
push
std
xor
dec
or
inc
mov
orl
mov
adcl
xor
orl
xor
sub
sub
sbbl
xor
mov
mov
mov
mov
movl
jmp
xorl
mov
mov
adcl
xor
xor
sub
or
sub
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
mov
mov
subl
add
andl
imul
dec
mov
adc
mov
mov
add
or
and
mov
mov
mov
sub
xor
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
push
push
or
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
mov
mov
movl
sub
movl
mov
mov
sub
mov
and
xorl
adc
mov
mov
xor
sub
mov
sbb
orl
or
mov
adc
mov
sub
add
mov
and
orl
add
mov
mov
sub
add
mov
orl
orl
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
subl
sub
mov
neg
mov
mov
mov
xor
addl
mov
orl
add
or
movl
mov
add
mov
jmp
imul
or
dec
xchg
in
pop
adc
pop
pop
and
sbbl
inc
in
xchg
pusha
sub
addr16
xor
push
mov
dec
mov
mov
std
inc
inc
or
lea
in
adc
fidivrs
fstp
inc
cs
mov
dec
pop
outsl
outsl
aas
or
or
xchg
mov
pop
and
clc
ds
ds
add
loop
scas
cmpsl
or
stos
xor
out
mov
jmp
and
data16
lods
cmp
xchg
cmc
and
call
inc
dec
mov
mov
or
push
mov
add
jnp
mov
sub
sub
fstps
inc
pop
hlt
cmc
push
es
loope
test
dec
sub
outsl
xchg
imul
pop
mov
mov
xor
sarl
ret
inc
fnsave
xchg
sub
popf
sub
roll
data16
cmp
ja
adc
or
lret
jmp
cmp
xor
arpl
test
and
mov
adcb
push
fstp
dec
mov
adc
stos
sub
push
dec
pop
cld
jp
sbb
test
les
js
bound
or
flds
xor
test
mov
xchg
aam
adc
mov
inc
adc
lea
leave
mov
leave
xchg
jl
cmp
inc
into
in
insl
loopne
xor
fistps
push
xor
pop
adc
nop
mull
sti
pop
ret
xchg
push
push
daa
or
mov
cmpsb
xchg
scas
mov
fdivr
jg
gs
movsl
jns
in
imul
test
push
push
add
adcl
shrl
add
movsb
sub
in
inc
mov
rcrl
add
popa
xchg
subl
sbbl
mov
push
ss
je
push
imul
sub
and
pop
dec
call
les
out
daa
sbb
ds
pop
cli
cmp
mov
or
jp
fdivrl
adcl
int
outsb
mov
dec
pop
int
int
mov
les
cld
sub
mov
xchg
xor
lcall
mov
or
push
test
rcrl
cmpsb
xor
inc
fisubrs
fistpll
mov
inc
andb
mov
pop
push
xlat
call
cmp
jne
inc
sbb
sub
push
sub
sbb
push
pop
sub
sahf
mov
push
mov
mov
inc
adc
fldt
je
jl
jb
call
xlat
orb
ja
imul
out
xor
fcompl
mov
outsb
fwait
movsl
test
imull
loopne
lock
push
xchg
xchg
scas
lea
ljmp
imul
dec
es
or
pusha
mov
popa
outsl
mov
fcmovbe
cmpsl
movsb
pop
idivb
inc
mov
mov
test
cwtl
mov
mov
push
or
adc
stos
popf
cmp
inc
leave
and
cmp
outsb
adc
jnp
cli
sub
stc
in
xchg
out
das
imul
orl
mov
xchg
jmp
mov
loop
pop
ret
sbb
pop
out
loopne
loop
ljmp
leave
insl
xor
xchg
lea
stos
nop
adc
fnstenv
jbe
pop
subl
sbb
movsl
mov
into
xchg
in
fyl2xp1
cmp
push
imul
xor
pop
fdivr
fdiv
and
pusha
stc
scas
jne
orl
cmpsb
es
cli
cmp
test
jle
adc
pushf
shlb
and
scas
repz
mov
mov
cmp
push
fwait
popa
and
mov
sbb
icebp
or
pop
rcrl
clc
cs
aam
lods
xchg
dec
inc
adc
iret
xchg
push
pop
aam
nopl
divl
aaa
jmp
mov
clc
mov
ret
andb
xor
add
and
lret
push
adc
mov
enter
cmpb
jmp
call
jnp
rorl
inc
lea
xchg
jnp
in
insl
xchg
ret
sub
and
jl
push
adc
scas
xor
mov
and
iret
push
dec
cld
push
popa
mov
data16
push
outsl
cmpsl
insb
mov
xchg
mov
xchg
test
add
xchg
dec
ljmp
mov
jle
ljmp
hlt
and
mov
mov
lcall
mov
aad
aas
push
adc
jno
pop
stos
xchg
js
out
xchg
sbb
or
add
sub
arpl
jo
xchg
cmp
pop
leave
jle
movsl
mov
add
fs
aam
jo
or
xchg
lahf
loop
xchg
mov
ret
notb
add
jecxz
out
scas
xor
es
xchg
mov
dec
and
add
lods
outsl
push
sbb
das
aas
sbb
ds
pop
sbb
xchg
xor
mov
inc
or
mov
dec
fdivl
inc
es
mov
inc
sbb
inc
or
or
and
dec
xchg
gs
and
loope
incl
cmc
adc
in
xor
pop
clc
lahf
fstcw
fnstcw
bound
xor
jno
dec
das
push
call
popa
ss
pop
inc
in
enter
pushf
mov
xchg
aas
outsl
jle
xlat
sub
fidivrl
bswap
loope
mov
cmc
push
dec
cmp
je
fnstenv
mov
dec
inc
pop
std
sarl
inc
sub
filds
pop
in
hlt
pop
fsts
dec
xor
ja
sbb
pop
jb
jne,pn
pop
and
and
jo
sarl
fdivs
sbb
jne
sub
outsb
push
inc
fwait
or
xor
insl
ljmp
out
sub
xchg
xchg
scas
mov
ret
xor
push
push
push
push
enter
mov
or
xchg
iret
call
pop
cltd
mov
xlat
adc
sub
cmp
mov
and
inc
add
icebp
clc
xlat
xchg
push
and
push
sbb
dec
jb
stos
push
repz
or
mov
push
subl
sbb
sub
jno
iret
cli
pop
scas
pop
push
je
icebp
aaa
jge
or
sub
cmp
xchg
xor
sti
dec
addb
inc
cmpsl
aas
pop
outsb
jb
push
mov
add
sbb
mov
call
rcll
cmc
iret
inc
add
testb
mov
dec
adc
shlb
sbb
outsl
jl
insl
and
ja
int3
movsl
ds
daa
cmp
iret
dec
ret
sbb
inc
stc
imul
insb
or
int
jns
out
out
jle
push
sbb
icebp
sbb
ljmp
jne
lahf
jnp
dec
xchg
mov
jmp
mov
hlt
jl
add
icebp
cmp
adc
sub
hlt
arpl
mov
out
mov
mov
jmp
rol
pop
sub
in
jbe
clc
out
ret
dec
orl
inc
or
adcl
filds
jo
jnp
data16
push
bound
jecxz
orb
sbb
ret
je
aam
jae
dec
jbe
cmpsl
pusha
mov
enter
scas
adc
dec
cmc
shlb
inc
ss
pop
sub
and
mov
xchg
cltd
cmp
mov
jp
xchg
cmp
and
outsb
test
jae
cmc
push
in
call
rclb
jno
mov
sub
ret
push
aaa
rcr
inc
dec
or
sti
dec
in
push
or
push
xchg
lods
jmp
xor
pushl
mov
lea
push
imul
sbb
jbe
data16
scas
repnz
fcompl
or
fdivrs
inc
jp
daa
pusha
pop
mov
stc
adc
inc
xchg
mov
movsb
and
cmp
jbe
fdivs
insb
cmp
clc
iret
jne
rclb
push
data16
out
adc
dec
addr16
imul
movsl
jb
in
sub
cld
stos
xor
rol
outsb
jl
sbb
and
sub
das
add
push
loope
and
inc
ficomps
sahf
sub
mov
add
sub
pop
ret
ljmp
idiv
mov
aas
sbb
jmp
pushf
push
nop
in
adc
bound
push
inc
ficompl
or
bound
addl
or
mov
lcall
xor
cmpsl
jge
insb
mov
in
pop
test
jp
popa
adc
imul
je
imul
cmp
loop
loopne
out
push
fcmovne
push
pop
sti
push
lahf
mov
dec
inc
out
inc
mov
mov
add
mov
dec
sbb
cmp
clc
adc
jnp
je
cmovne
inc
imul
pop
push
adc
mov
lea
call
repz
or
push
cwtl
out
leave
cmpsb
jne
stc
cld
mov
fiadds
out
xor
jno
pushf
pop
mov
lahf
dec
push
imul
or
in
xor
jecxz
cltd
testl
iret
sti
push
jecxz
jle
out
xor
jmp
sub
jb
lret
movsl
shl
jl
adc
es
or
fwait
adc
js
mov
sub
int3
lcall
addr16
dec
out
mov
das
js
adc
ja
cmp
mov
add
mov
push
inc
mov
scas
rcll
daa
cs
add
orl
add
sbb
inc
cmpb
pop
add
adc
mov
call
in
dec
jno
mov
fs
push
sub
mov
sbb
xchg
xchg
lcall
pop
stos
inc
dec
push
ljmp
xchg
push
inc
add
inc
or
xor
cmp
inc
out
cmp
push
int
inc
outsl
or
subl
push
in
sbb
pop
mov
xchg
out
fwait
mov
mov
jecxz
dec
test
mov
in
or
imul
adc
subl
subb
jg
add
jbe
push
push
outsl
aam
imul
out
es
mov
daa
popa
mov
aaa
aaa
in
aaa
gs
mov
sbb
jne
aaa
and
pop
fidivrs
mov
pop
inc
mov
insl
int
movsb
mov
jnp
in
rcrb
pop
arpl
mov
ja
and
cmp
mov
jb
sbb
int
popa
pop
cmp
mov
test
jno
xor
daa
fldl
adc
pop
sub
loopne
push
push
xchg
pop
outsl
dec
jnp
push
fildll
pop
in
push
sbbb
push
faddl
pop
daa
or
clc
lahf
mov
insl
sbb
push
lcall
fcoml
popf
mov
repz
mov
repz
insl
xchg
sub
jle
fisubrl
jg
movsl
xor
fldl
out
adc
dec
fsubr
xor
shlb
out
xlat
ja
inc
and
mov
mov
test
xchg
push
mov
decl
negb
cwtl
repnz
lret
xor
mov
ljmp
cmp
fwait
jb
adc
or
adc
loope
outsb
arpl
sti
push
mov
or
push
push
roll
sbb
mov
shll
addr16
mov
fnsave
inc
outsl
inc
push
pop
inc
adc
scas
pusha
and
loope
pop
bound
mov
cmpl
pop
push
jo
lret
stc
cwtl
lods
mov
jl
mov
add
pop
loop
movsb
iret
or
std
cld
push
lcall
loop
add
xor
jl
aaa
push
push
scas
push
add
lock
dec
into
sub
push
or
lods
fcmovnb
inc
aaa
jae
push
mov
subl
lcall
and
cwtl
xor
mov
adc
inc
mov
stc
xchg
or
fisttps
dec
or
ds
mov
jle
pop
mov
imul
mov
dec
test
shl
int
mov
lds
jbe
dec
mov
fbstp
xlat
fisubrs
adc
mov
ss
idivb
mov
push
lret
lahf
inc
pop
lcall
xchg
jge
adc
jnp
jae,pn
and
add
cltd
mov
ja
andb
out
mov
add
fsts
lcall
das
push
inc
dec
test
fsubr
cmp
jno
push
fldcw
outsb
aad
pusha
cmp
mov
paddw
adc
dec
cwtl
mov
cmovns
test
enter
iret
das
jbe
xor
and
adc
mov
mov
lds
bound
call
addl
fdivr
sub
add
xchg
imulb
xchg
cmp
xchg
mov
cmp
cmp
xchg
fstl
jae
in
cli
scas
iret
lds
inc
inc
sbb
inc
arpl
outsb
and
push
mov
xchg
push
jne
jg
mov
lock
movsl
sbb
pop
add
jecxz
aaa
dec
pop
push
inc
fstpl
pushf
inc
inc
cmpsb
pop
mov
stc
and
jge
sbb
mov
rclb
out
outsb
lcall
cmp
cmc
cltd
repnz
lock
add
scas
imul
inc
psllq
xchg
and
daa
shl
pop
jl
cld
xchg
mov
into
pop
dec
push
jne
mov
fadds
mov
les
xor
inc
faddp
mov
out
xchg
mov
or
mov
sbb
xor
rorl
ds
mov
lds
mov
test
lock
cmp
andl
or
enter
into
add
pop
jnp
iret
je
mov
fs
pusha
jmp
movsb
adc
arpl
das
outsl
aad
mov
sahf
mov
arpl
lret
addr16
mov
sbb
mov
pop
push
mov
mov
test
inc
std
pop
fildl
inc
pop
dec
insl
inc
loope
clc
xchg
or
push
xchg
xor
ja
push
fwait
daa
xchg
loopne
push
ret
cld
inc
cmp
lahf
xchg
loope
pop
jp
roll
decb
pop
push
in
lahf
xchg
push
fwait
adc
insl
ds
mov
std
xchg
dec
popf
mov
orb
jno
ds
push
dec
mov
jp
pop
frstor
or
aaa
jmp
insb
mov
scas
mov
lods
shr
mov
shl
mov
xchg
inc
or
fistpl
daa
fsubrp
xor
lock
test
test
lods
out
mov
test
mov
cli
movsb
loop
xchg
outsl
ror
hlt
aas
fcoml
std
jbe
ffree
out
pusha
arpl
pop
mov
icebp
imul
ja
or
mov
mov
mov
xchg
imul
lea
lret
xchg
fidivrl
sub
outsb
stos
mov
in
pop
repnz
sub
loop
lret
scas
stos
push
or
sub
push
fisubrs
mov
and
push
notl
je
inc
mov
mov
pop
or
test
fidivs
push
stos
mov
add
les
arpl
js
push
jge
sbbl
aad
pop
adc
xchg
xorl
ljmp
xchg
adc
inc
repz
mov
cmpb
mov
pop
gs
or
dec
push
cmp
stos
pop
shll
inc
mov
int
inc
repnz
adc
add
addr16
or
hlt
jecxz
xor
pop
out
dec
stc
dec
int3
pop
inc
lds
add
jns
shrb
loop
adcb
stos
outsl
pop
mov
lock
adc
sbbl
xchg
mov
cmp
cli
scas
cmp
jle
lds
data16
inc
bound
outsb
mov
data16
dec
cmpsl
dec
push
and
mov
mov
and
xchg
mov
push
add
mov
cmc
or
in
cld
jno
fildl
shrb
lahf
jmp
sbb
cmp
mov
dec
sbb
inc
xor
cs
std
add
xchg
jnp
insl
jns
ss
cmpsb
arpl
roll
insl
cmp
jp
sti
cmp
push
xchg
add
imul
jmp
xchg
xchg
roll
dec
std
movsb
mov
xor
adc
dec
aas
test
lcall
je
cmp
les
loop
les
mov
movsb
aaa
adc
and
mov
sub
push
jae
jecxz
mov
xlat
test
xchg
pop
stos
mov
jne
xor
fcmovu
inc
mov
mov
movntps
push
popa
cmp
xor
xor
andl
loop
aad
sub
pushf
into
jb
mov
repz
and
inc
sub
outsl
aaa
jbe
test
sbb
adc
push
mov
mov
cmp
adc
dec
xor
nop
loope
fwait
jle
xorb
jae
dec
fistpll
inc
adcl
and
adc
xor
lahf
mov
mov
into
jg
jae
adc
xor
cli
jmp
inc
xchg
sub
push
mov
addl
mov
stos
jae
dec
scas
in
xchg
testl
idivb
adc
xchg
sbb
scas
leave
insl
gs
movsb
or
mov
cmpsb
mov
cltd
jns
insl
mov
into
push
andb
in
add
or
jmp
outsb
cmpsb
lock
lods
pop
dec
jg
fdivp
pop
adc
leave
fiaddl
test
in
pop
call
mov
mov
sbb
push
xchg
jmp
sbb
mov
cmp
sub
movsb
insl
mov
orb
ds
arpl
pop
mov
push
xor
rcrl
xchg
mov
lods
cli
and
add
sbb
lock
loopne
xchg
mov
push
jnp
dec
mov
into
sbbb
addb
sbb
ljmp
mov
adc
xchg
ret
repnz
cmp
and
adc
dec
sub
push
adc
cmc
mov
fdivrs
ss
sti
loop
xor
mov
and
scas
addb
mov
inc
fistpll
std
leave
cmc
scas
mov
into
push
dec
ja
mov
add
fldl2t
push
cmp
stos
mull
call
or
decl
or
mov
xchg
sbb
scas
jbe
xor
inc
dec
test
leave
and
pop
inc
lods
mov
cli
and
dec
lahf
adc
sbb
jne
sub
out
ds
push
scas
mov
iret
cltd
pop
loopne
stos
neg
add
xchg
mov
loope
daa
fwait
fwait
inc
lahf
jp
add
daa
gs
test
fcmovnbe
movsb
aaa
mov
add
and
mov
pop
push
xchg
xor
fidivrl
ror
lcall
leave
cld
xchg
sbb
stos
fisttpll
and
bound
fnsave
in
out
pop
mov
add
jb,pt
sbb
cmp
inc
fstpt
pop
aaa
test
and
mov
jg
inc
popf
gs
add
test
pop
clc
dec
fdivrs
pop
adc
push
cwtl
sbb
into
out
aad
xor
ror
mov
cmpl
xchg
icebp
hlt
lahf
jbe
inc
dec
pop
jns
adc
cmp
pop
bound
add
bound
cmp
shll
pusha
lods
jecxz
popa
fsubrs
push
mov
jmp
incl
pop
test
jbe
sbbb
pop
sahf
mov
lahf
cmp
xchg
and
scas
inc
insl
or
fadds
je
lods
push
lods
xor
rorb
mov
out
inc
push
roll
add
push
popa
inc
mov
js
mov
push
or
sub
cmp
std
adc
shlb
icebp
aad
mov
pop
stc
dec
mov
jl
jge
pop
mov
xchg
or
aas
out
jb
push
cmp
pop
orl
push
test
cld
fs
pushf
pop
std
fnstenv
das
inc
lea
stc
push
push
mov
xchg
mov
push
push
nop
inc
das
mov
dec
pop
int3
es
movsl
iret
jp
idiv
sbb
mov
loop
addb
adc
sbb
adc
out
and
push
or
jns
or
mov
pop
mov
mov
cmp
jmp
outsl
and
and
sbb
out
mov
push
pusha
xchg
mov
add
push
jb
stc
addb
xchg
pop
xchg
mov
imul
pop
fcom
mov
mov
add
and
es
xchg
cmpsb
gs
leave
dec
jp
call
inc
ja
loopne
ss
dec
dec
pop
popf
fcmovbe
add
das
add
and
cs
test
push
sbb
shl
jo
out
popa
or
mov
mov
pop
inc
pop
bswap
inc
xchg
sbb
into
and
and
in
mov
or
enter
lcall
add
iret
aam
in
mov
popf
dec
pusha
sub
and
insl
lock
push
inc
test
aaa
mov
cmpxchg
jbe
sub
mov
xorb
and
stos
add
cwtl
xchg
xchg
add
popf
test
pushf
mov
mov
jl
inc
sub
in
test
es
jle
mov
dec
mov
test
lret
mov
push
inc
lahf
lea
xor
sub
loopne
jmp
fildll
jae
loopne
rcrb
jbe
xchg
add
test
jmp
lret
loopne
mov
push
sbb
fbld
pop
inc
orb
add
lcall
jg
lret
jno
xchg
jmp
arpl
in
add
inc
push
dec
insb
xor
jl
and
xor
mov
cld
push
adc
loopne
mov
out
push
inc
add
inc
xchg
jnp
mov
jns
dec
sub
test
in
jmp
jbe
add
add
and
or
sbb
or
loope
rcrl
pop
scas
nopl
xor
cmpsl
or
mov
sub
sub
jecxz
std
enter
inc
enter
push
cmpb
or
imull
cs
in
mov
dec
loope
daa
or
mov
out
ljmp
xor
jl
mov
and
mov
into
int3
pop
pop
ret
mov
mov
push
sbb
stos
xchg
imul
sub
push
or
mov
jb
push
mov
ljmp
xchg
push
adc
adc
int3
pop
sbb
pushf
mov
inc
loope
xor
out
rorb
inc
xchg
out
sub
jl
xchg
cld
aaa
xchg
lods
lea
and
out
or
mov
add
mov
rcrl
inc
cld
push
cmp
cmp
adc
and
or
imul
add
lcall
xchg
out
mov
dec
lods
sbb
stos
or
xchg
jmp
inc
and
jo
test
pop
lds
imul
pop
aaa
xor
icebp
push
rcrl
lcall
cmp
jae
imul
sahf
adc
rdmsr
jl
mov
mov
and
aaa
rcrb
adc
fwait
xlat
jnp
jecxz
aaa
adc
lcall
pop
push
cmp
pop
xchg
clc
je
in
adc
jecxz
adc
lcall
push
jp
movsb
pop
jge
rcrl
or
hlt
jns
js
loop
rcl
pusha
jb
arpl
dec
notl
cmp
mov
inc
test
mov
in
mov
xchg
jmp
push
mov
sub
sub
pop
pop
push
pop
xor
mov
jae
mov
dec
jne
xchg
inc
dec
leave
icebp
and
inc
xchg
xchg
xchg
xchg
fldt
rorl
icebp
mov
cmp
cmpsb
mov
push
mov
imul
leave
aas
rcll
scas
dec
daa
inc
jb
stos
loop
or
or
xor
imul
add
iret
into
xchg
shlb
in
push
and
dec
mov
out
sub
xor
scas
mov
out
stos
or
mov
clc
xchg
jle
cltd
jnp
scas
rcll
out
ffree
orl
outsl
and
mov
inc
and
icebp
adc
loopne
ret
mov
sbb
dec
mov
adc
out
mov
jno
and
inc
jl
inc
fisttpll
cmpb
es
in
shll
xchg
inc
inc
outsl
sbb
fcmovbe
sub
enter
fsubrl
jl
ss
test
xor
jmp
mov
mov
lret
pop
test
inc
cmp
or
loop,pn
xchg
insl
xor
jg
adc
or
das
cld
inc
add
sub
orb
sub
xchg
pop
cmpsl
shlb
cmpsl
pop
icebp
pop
shll
push
arpl
jl
push
jle
adc
mov
ljmp
jg
mov
out
ss
insl
leave
jle
dec
fwait
dec
xchg
fcom
mov
mov
jg
pop
pop
dec
cwtd
dec
enter
cwtl
adc
push
xor
test
dec
rcr
loope
pop
sbb
rorb
cmp
shlb
insl
cmpsb
pop
pop
popa
pop
cmp
jmp
mov
das
xor
fisubrl
fdivs
push
and
ja
das
lods
lods
mov
sbb
or
xlat
pop
ljmp
in
jno
loope
xchg
hlt
push
pop
stos
notl
loopne
lahf
in
mov
ret
jo
cmpsb
adc
pop
cld
lods
lret
cmp
adc
push
ja
sbb
lock
out
or
icebp
cmp
dec
and
lret
fcom
js
mov
push
adc
cwtl
pushf
shlb
push
in
cli
xor
lds
rorb
jnp
clc
cmpsb
fwait
and
sbb
pop
arpl
arpl
test
cmp
lret
loopne
sbb
mov
pop
mov
imul
sbb
fsubr
out
loope
and
decb
lahf
add
fdivrs
cmpsb
sbbl
push
lds
pop
push
cltd
jecxz
cmpb
xor
imul
mov
push
popf
out
sub
mov
pusha
jecxz
sbb
in
out
dec
std
popa
loop
jge
sbb
mov
test
mov
dec
in
push
pop
xchg
cmp
cmpsl
pop
adc
ds
negl
cmp
dec
ja
and
flds
dec
mov
mov
loop
out
les
jp
nop
jno
clc
std
adc
push
call
fadds
jg
xor
stos
xchg
add
shll
in
sub
nop
dec
pandn
lcall
cmp
lds
adc
mov
xchg
mov
movsb
in
add
je
add
mov
push
jae
pop
call
ficoml
inc
xchg
pop
xchg
arpl
jge
jecxz
popl
fbld
mov
test
movsl
or
mov
lods
stos
mov
mov
push
pop
cmp
idivl
out
repnz
adc
test
lret
syscall
jmp
push
push
sbb
mov
mov
inc
addr16
jmp
jns
inc
arpl
repz
and
adc
sbb
shl
int3
fsubr
fists
lods
jb
mov
inc
xchg
lret
xor
popa
mov
cmp
xor
cmpsl
mov
in
insl
lds
ret
mov
int3
lcall
adcb
xor
leave
cmp
adcb
aaa
or
in
or
mov
and
movsl
test
xchg
lret
xchg
xchg
fsubrs
cmp
lods
imul
jmp
sarb
mov
imul
xchg
ret
in
stos
adc
test
or
aas
sbb
add
in
mov
aaa
arpl
mov
jp
adcl
push
dec
outsb
ja
sub
mov
jl
xchg
mov
mov
dec
jp
sbb
jb
aaa
adc
push
sub
in
pop
popa
loopne
or
inc
sub
inc
cli
push
xor
rcrl
stos
push
sbb
imul
xor
xchg
mulb
mov
hlt
fwait
adc
push
add
jbe
dec
add
daa
cmpsb
test
sbb
or
add
ljmp
les
and
cltd
push
loopne
test
jo
out
jp
dec
imul
and
cld
mov
pop
jle
cmc
dec
pop
push
mov
mov
mov
inc
push
mov
sbb
out
jle
push
cmp
mov
push
insb
test
inc
out
xchg
pushf
test
mov
fildll
hlt
push
mov
mov
scas
jmp
push
mov
cli
test
xchg
fistpl
std
cmpsl
mov
jo
icebp
inc
adc
cmpsl
adc
sub
hlt
pushf
mov
hlt
aad
mov
loop
imul
inc
xchg
hlt
pop
sbb
cmc
sahf
xchg
push
mov
inc
xchg
popa
gs
call
jp
cmp
icebp
adc
jns
sbb
lds
in
fbld
cmp
pop
int3
adc
adc
aad
test
and
adc
sub
sbb
in
scas
mov
dec
sbb
jo
adc
and
out
mov
push
inc
jecxz
jbe
mov
jno
fldt
or
scas
mov
mov
mov
testb
jne
push
and
ret
mov
dec
aam
shr
push
lods
cwtl
out
dec
pop
ret
es
dec
fwait
jne
or
in
mov
divb
and
js
stc
icebp
dec
in
scas
cmpsl
lahf
roll
ds
pusha
leave
ja
jnp
mov
and
into
in
mov
fistl
repz
movb
idivl
pop
clc
jno
sub
and
pop
and
sahf
or
dec
xor
xor
aam
lea
inc
xchg
pop
pushf
sub
movsb
test
push
cmpsl
movsl
xor
ljmp
hlt
pop
cld
fldcw
pop
shl
inc
push
sub
sbb
jmp
cltd
imul
outsb
movsb
sub
sub
dec
sub
push
lds
mov
mov
hlt
xor
pusha
popf
dec
push
push
cmp
mov
xor
adc
stos
inc
add
icebp
sub
fisubrl
mov
mov
andl
sub
mov
addl
orl
xor
mov
decl
xor
orl
add
push
mov
xor
addl
add
andl
push
mov
orl
xor
xorl
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
movl
movl
mov
mov
pushl
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
push
dec
push
push
xor
xor
mov
sub
sub
movl
lea
andl
mov
inc
mov
cmpl
jg
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbb
movl
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
call
mov
dec
mov
jmp
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
call
jmp
mov
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
add
xor
subl
add
mov
sbb
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
mov
dec
mov
jmp
add
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
xor
mov
add
movl
cmp
movl
je
movl
mov
movl
jmp
or
mov
mov
adc
mov
mov
addl
or
jmp
scas
fwait
or
mov
addr16
add
std
addb
scas
jnp
test
insb
sub
bound
jne
inc
pop
jae
inc
inc
aad
mov
push
sbb
cmp
cmp
aaa
shr
loopne
push
mov
sbb
mov
popa
xor
cmp
jp
mov
sub
iret
lcall
in
fdivrl
sub
outsl
jb
or
lahf
outsl
adc
jmp
hlt
cmp
xchg
filds
adc
dec
shlb
pop
lahf
add
je
mov
fdivl
or
mov
dec
call
xor
and
lods
xchg
popa
loopne
addb
stos
cmp
or
cmp
cmpsb
and
jmp
lock
and
push
jne
dec
sahf
mov
push
inc
jmp
pusha
int3
das
pushf
test
cmpsl
mov
pop
mov
int
cmp
lmsw
inc
mov
inc
dec
int
push
push
popf
sub
lods
xchg
mov
in
mov
lcall
enter
and
sbb
iret
mov
mov
push
test
sbbl
sub
shrl
mov
mov
cwtl
fimull
loope
xchg
sub
fwait
sub
cmpsl
filds
es
or
or
cmpsl
notl
movsl
jmp
inc
or
dec
adc
xlat
inc
add
xor
sub
insl
ret
clc
lock
movsb
sub
fistps
dec
xor
jo
lcall
popf
out
mov
xchg
push
mov
int3
xchg
xchg
push
sub
iret
popa
out
mov
cld
outsb
clc
pusha
push
aas
dec
push
out
sbb
dec
mov
es
ds
mov
stos
lret
jae
enter
dec
inc
mov
cmpsl
fldcw
int
and
add
jecxz
aam
push
inc
push
ficomps
pop
aaa
inc
pop
jne
cmp
jns
pop
loope
push
and
aaa
scas
jp
add
insl
ljmp
ja
dec
jnp
es
lcall
adc
fisubrs
es
mov
mov
loope
xor
push
clc
push
insl
cmp
test
leave
jnp
mov
mov
mov
mov
push
shrb
lcall
inc
lcall
jne
dec
ja
shlb
pop
push
sub
mov
dec
lods
add
std
xchg
jge
dec
pop
movsl
ljmp
icebp
mov
fsubs
inc
jae
idiv
gs
int3
arpl
subl
jnp,pt
movsb
inc
sub
mov
repnz
lds
jo
xchg
out
repz
subl
pop
xor
inc
mov
pop
jge
sub
insl
aad
xchg
scas
jg
ret
xlat
andl
cld
call
jecxz
fldenv
jg
cmp
movzbl
xor
adc
mov
jecxz
setg
push
and
sarl
mov
ljmp
repz
inc
add
lret
or
in
call
cwtl
adc
xchg
xchg
mov
mov
lds
je
ss
loopne
mov
pop
dec
sub
dec
jns
xor
loopne
xchg
andb
aaa
and
mov
outsb
sbb
xchg
jo
cld
sub
xor
hlt
mov
mov
dec
ret
adcb
cli
jno
xchg
ljmp
cmp
pop
test
jl
mov
aad
push
ret
and
aad
sub
cvtpi2ps
adc
xchg
mov
mov
sub
and
sub
test
je
add
jp
movsl
jmp
xchg
add
in
mov
mov
pusha
add
test
xor
cmp
shrl
push
sub
mov
imul
cmp
and
int3
rolb
cltd
sti
pop
mov
xchg
add
or
mov
push
call
mov
ficoms
inc
lret
inc
and
sbb
out
lods
je
movsb
sub
jae
add
fmuls
cwtl
mov
push
xlat
push
or
mov
xlat
int
jmp
mov
rcrb
cltd
xchg
lds
aas
aas
outsb
cmpsl
sahf
pop
xchg
xchg
xchg
scas
dec
lret
adc
adc
scas
push
push
lods
cmc
cmc
pop
sub
adc
sbbl
adc
sub
mov
scas
lea
shlb
cmc
pop
dec
pop
test
or
pop
insl
dec
fidivl
mov
xchg
notb
jnp
mov
mov
pop
add
xor
add
shl
out
outsl
push
push
outsb
xchg
mov
mov
cwtl
fucomip
fcompp
or
mov
jb
out
xchg
add
dec
dec
push
push
and
pop
das
mov
addb
outsb
cltd
out
pushf
jg
sarb
push
adc
enter
mov
sbb
xchg
lret
rorl
fwait
mov
lods
or
xor
xor
dec
mov
icebp
or
and
mov
sbbb
and
and
jns
mov
cs
shr
daa
mov
call
sub
aam
xchg
mov
orb
xor
mov
mov
fs
push
cld
fidivs
xchg
mov
mov
jno
mov
sbb
push
test
add
hlt
pop
lock
mov
adc
push
cmpsb
mov
lea
pop
sbb
ret
or
xor
jb
icebp
dec
and
push
sti
pop
loopne
loope
out
push
js
sub
bound
repz
aaa
shr
fwait
add
jg
mov
lds
or
push
xchg
in
in
add
cmpsl
push
inc
dec
mov
add
pop
cmpsl
cmp
fstpt
pop
imul
lret
repnz
jo
push
mov
sub
lret
insb
inc
std
mov
add
scas
cli
adc
inc
push
xor
pop
dec
sahf
cmp
in
stos
dec
push
stc
adc
aam
cmp
mov
xor
jne
inc
push
and
out
mov
out
push
mov
flds
inc
enter
mov
es
dec
mov
xlat
xchg
add
jg
out
pop
sbb
add
dec
addr16
xorb
mov
lods
iret
mov
cmpsl
jecxz
xor
mov
push
and
and
jg
int
data16
jno
sub
and
jl
mov
pop
or
sub
scas
daa
jno
cmp
inc
dec
jmp
mov
aaa
jmp
dec
fisubl
js
pop
or
xchg
rep
xor
pop
dec
sbb
sub
inc
mov
stos
dec
adc
pop
inc
cmpsl
pop
rorb
popf
test
aad
sarl
adc
sub
or
adc
sub
xchg
push
cs
lods
jmp
outsl
es
lcall
das
sbb
dec
adc
and
and
jmp
call
scas
jg
out
lret
add
cmp
std
mov
jbe
je
mov
adc
mov
fcoml
pop
sub
in
vmovupd
fwait
cmp
sub
inc
aas
imul
and
or
daa
add
add
imul
popa
lahf
and
rorb
mov
mov
and
jno
push
stos
rcrb
ja
pop
bound
nop
push
cli
push
lods
out
idivl
xchg
pop
push
and
pop
bound
dec
push
add
test
mov
inc
adc
out
ljmp
mov
repz
ljmp
loope
lcall
rolb
mov
and
add
jns
rcrl
in
sbb
add
mov
js
cld
int3
xchg
pop
aas
adc
mov
int3
imul
es
jnp
fs
fisttpll
test
push
dec
lret
lret
xor
fisttpll
repz
sub
arpl
dec
push
pop
pop
shlb
adc
fdivr
jo
dec
aas
rcll
lods
cmpb
xchg
and
push
sub
pusha
xchg
pusha
sarb
mov
mov
and
lret
xor
iret
pusha
ljmp
js
pop
test
sbb
insb
pop
push
jmp
adc
movsb
push
data16
rcll
pop
cmp
daa
imul
jo
sub
fs
cmp
rcl
xchg
ror
cmc
insb
jl
outsl
lret
outsb
or
push
inc
sub
neg
add
outsl
dec
subb
jne
fidivs
mov
sbb
push
xchg
add
in
daa
xchg
jg
xchg
add
sbb
jmp
add
outsb
xchg
nop
fucomp
cli
enter
ljmp
in
mov
adc
dec
neg
jo
leave
ret
faddl
out
arpl
add
mov
pusha
scas
sub
mov
lods
jg
movsb
add
sbb
and
jno
repnz
popf
mov
and
scas
dec
mov
lock
push
mov
enter
sbb
dec
mov
hlt
inc
aam
cmp
mov
movsb
loopne
push
or
sarl
mov
push
pop
lds
sbb
pop
cmp
shl
push
outsb
mov
pop
test
test
ljmp
mov
sbb
enter
notl
or
mov
das
outsb
outsl
je
gs
mov
sbb
fnsave
lock
pop
scas
ljmp
ret
divb
arpl
jl
lahf
dec
mov
add
int
cmp
test
pop
cmpsb
out
aaa
out
sub
sub
sub
lcall
popf
dec
inc
aam
daa
std
pop
dec
xchg
ljmp
lods
outsb
add
cmpsl
fdivrl
mov
roll
sub
jmp
aas
push
sti
js
test
push
dec
rcrl
testb
sbb
movsl
add
pop
adc
dec
add
pop
jnp
popf
and
add
cmp
adc
jmp
sub
stos
jnp
lea
mov
in
jp
xchg
and
insl
sbb
dec
xlat
xchg
push
xor
mov
mov
fsubs
fistl
imul
xchg
mov
dec
mov
and
cmpsl
push
xor
xchg
sar
add
mov
dec
mov
sbb
insb
xlat
lods
mov
rol
cmovbe
pop
ja
fcom
inc
mov
xchg
outsl
push
sub
jl
add
call
hlt
hlt
adc
ret
mov
stos
call
aam
sar
addr16
fmull
mov
sbb
cmp
pop
jl
adc
push
outsb
mov
fildll
pusha
test
sahf
sub
push
cli
out
jns
mov
pop
jae
xchg
stos
sbb
cmpsb
aaa
push
xchg
adc
test
push
test
imul
mov
int
add
pop
jb
sub
sub
ficomps
out
icebp
inc
ret
lock
lods
lret
sub
data16
push
pop
loope
movsl
loope
jg
hlt
add
xchg
mov
mov
fldpi
adc
sub
add
ljmp
jno
sub
les
dec
dec
dec
xor
cmp
out
or
bound
mov
loopne
sarl
test
test
scas
dec
jg
add
idivb
jmp
inc
lahf
adc
sub
lods
mov
and
pop
and
jmp
icebp
or
inc
data16
aas
adc
jno
pop
das
sahf
test
mov
mov
xchg
aad
mov
or
testb
jmp
pop
inc
popf
loopne
jecxz
fidivl
cmpsb
mov
mov
dec
fstl
push
mov
repz
popf
shlb
loopne
sbb
mov
fimuls
roll
mov
sbb
xadd
sbb
xor
sub
lock
in
lret
xor
inc
push
push
icebp
sbb
shlb
daa
es
jl
mov
mov
aas
hlt
lock
inc
out
cmp
push
jecxz
cwtl
pop
fcmovb
jl
mov
cmp
dec
cli
pop
jo
jne
cmp
lock
test
mov
xor
pop
movsl
outsb
frstor
pushf
pop
aaa
push
lret
mov
inc
jne
call
scas
pop
sub
xchg
fs
push
cmpsl
mov
inc
cmc
inc
and
push
test
and
add
jmp
pop
mov
insl
aam
test
lcall
dec
push
push
dec
push
jmp
push
xchg
in
push
and
mov
push
or
mov
xchg
add
jnp
or
adc
mov
xor
xchg
push
loope
pop
repz
mov
inc
jmp
inc
fwait
dec
addr16
loopne
sub
push
sti
jbe
dec
shrb
cmp
cmp
loopne
cmc
das
jle
test
pop
pushl
adc
and
ss
lods
enter
sarl
fildll
mov
push
ds
lret
ficoml
rcl
pop
incb
shlb
aam
dec
out
cmp
addl
idivb
movsb
pop
fs
mov
push
cwtl
dec
cltd
je
shlb
pop
daa
jae
xchg
repnz
aam
mov
jg
iret
sbb
call
sahf
pushl
stos
cld
mov
jo
mov
js
xchg
sbb
mov
push
cmp
sbb
xor
mov
or
push
sbb
mulb
bound
push
push
adc
orb
pop
dec
push
push
stos
adc
cmc
jns
lds
pusha
mov
ds
inc
and
adc
mov
out
jle
xor
or
or
imul
xor
popa
sub
inc
xchg
cmp
out
inc
jbe
add
incl
clc
les
push
pop
testb
std
sar
inc
je
sbb
mov
mov
mov
addr16
xchg
leave
imul
popa
xor
loop
fs
aam
lds
aam
jge
mov
mov
jecxz
dec
mov
push
push
incl
pop
or
sub
mov
ja
filds
add
pop
jo
aam
nop
loopne
pop
in
repz
ljmp
jmp
std
add
cwtl
dec
push
xor
mov
outsl
in
dec
dec
insb
pop
pop
jp
mov
or
mov
pusha
mov
inc
sbb
mov
in
xor
mov
in
cmp
fbld
iret
or
arpl
jp
mov
mov
out
xchg
xchg
push
dec
push
scas
ficomps
fisttpl
add
cmp
aad
mov
out
lea
cmpsl
mov
push
fisttps
adc
push
popf
add
mov
and
jne
mov
and
sub
cwtl
inc
movsb
fwait
and
out
mov
jle
cmp
xor
into
cmpb
mov
pop
vmread
add
sub
mov
push
shr
aam
dec
lods
push
sub
add
push
push
mov
sbb
push
mov
pop
mov
lods
roll
dec
dec
addb
js
addb
shrb
sbb
mov
xchg
xchg
sub
mov
inc
loope
nop
fidivrl
mov
adc
jmp
xchg
lea
jo
lret
cld
sbb
add
sbb
test
jmp
test
or
push
mov
sub
adc
jns
psraw
sbb
push
xchg
shrb
push
and
pop
rcr
xchg
pop
jbe
outsb
push
arpl
iret
mov
cli
add
insl
mov
xor
scas
pop
dec
push
lods
shll
push
andb
mov
or
jecxz
loopne
xchg
pusha
clc
inc
ret
mov
push
pop
pop
add
xor
cmpsl
jmp
clc
test
daa
add
rorl
cld
xchg
xchg
je
sbb
ljmp
push
add
dec
movsb
mov
cld
pop
out
ds
fistpll
pop
cmpsb
dec
xor
push
movsb
mov
cmpsb
mov
fidivl
pop
test
jle
adc
fimuls
cmp
mov
imulb
lret
sbb
sub
das
or
inc
cmpsl
popf
mov
lock
sub
jmp
jns
and
push
les
push
imul
push
repnz
ljmp
push
cmp
enter
shlb
fwait
js
fadds
movsl
jnp
xchg
lahf
call
popf
mov
mov
sbb
mov
inc
ljmp
or
dec
in
jae
adcl
sbb
dec
mov
sahf
ret
or
jl
cmp
jne
mov
lret
xchg
cmpsl
cmp
iret
sub
pushf
or
mov
pop
push
jmp
mov
sahf
stos
xor
cmc
es
jne
and
sahf
and
add
sub
cwtl
dec
mov
outsl
xor
xchg
arpl
leave
test
lret
jg
sbb
mov
inc
mov
out
rcll
enter
dec
ficoms
scas
mov
stc
popf
lds
fcoml
jbe
hlt
mov
into
push
xlat
stc
mov
pusha
adc
inc
shll
aaa
pop
dec
arpl
dec
sub
fldl
insb
in
insl
or
loope
dec
jle
and
test
loop
sbb
add
bound
inc
call
lcall
in
fs
fdivl
roll
mov
adcb
clc
adc
or
dec
mov
push
pop
incl
add
movsb
jo
sbb
lcall
push
pop
stc
fs
push
push
das
cltd
and
or
mov
add
loope
lret
dec
cmp
xchg
inc
jecxz
or
sbb
movsl
cmpsb
mov
xchg
dec
xchg
aad
ret
addb
adc
negb
jbe
mov
push
xorl
cli
addr16
mov
xchg
pop
lahf
loope
jae
data16
test
add
xchg
add
cmp
sub
lock
scas
lea
rcrb
ret
cmp
or
pop
mov
loop
cmp
push
or
cltd
cmp
test
mov
sub
rcr
lds
cmpps
mov
jl
inc
mov
xlat
xchg
or
or
mov
repnz
add
push
pop
fimull
or
sbb
dec
enter
xchg
ffree
stc
pop
jno
popf
sbb
push
ret
lcall
add
push
pop
add
in
and
fldcw
jecxz
dec
mov
dec
loop
test
je
dec
mov
roll
cmpsl
andb
mov
inc
loopne
and
or
inc
xchg
push
in
dec
repz
xor
push
mov
outsl
and
fcomps
dec
xchg
imul
dec
clc
je
pusha
push
pop
dec
or
or
mov
fiadds
adc
push
jo
push
push
and
leave
and
mov
push
aam
loopne
out
push
adc
loopne
or
jae
push
mov
dec
cltd
in
push
sbb
mov
jo
xor
icebp
idivb
insl
ja
xchg
mov
jbe
dec
adc
jb
loop
and
add
mov
cwtl
insl
inc
pop
outsl
popf
or
pop
les
dec
push
jge
cmc
divb
add
sti
cmc
mov
pushf
decl
test
xchg
push
mov
sbb
pop
pop
int
cld
cmc
xor
push
or
xor
pop
cli
clc
into
sarb
data16
and
in
add
js
mov
xor
ljmp
jmp
hlt
cmpsb
pop
mov
lea
inc
idivb
scas
or
sbb
dec
push
icebp
mov
inc
mov
lret
insl
mov
mov
jmp
dec
sti
fnsetpm(287
enter
xchg
nop
setp
pop
aad
xchg
imul
ret
or
nop
mov
mov
jns
jg
lcall
test
fwait
pusha
mov
rcrl
xchg
mov
mov
dec
xchg
mov
xor
jo
dec
enter
data16
jns
push
movsl
or
jnp
fstpt
dec
cld
add
adc
lea
js
icebp
inc
stos
mov
jle
das
outsb
add
jae
mov
lcall
subb
push
ss
sar
inc
scas
add
sbb
xchg
lea
jle
cwtl
repnz
jle
or
or
mov
in
and
jl
pusha
shr
xchg
sti
pop
sub
lock
out
cmp
cmc
rcrl
ret
xchg
mov
jl
xchg
or
std
fldl
mov
xchg
std
add
outsl
xor
mov
dec
mov
test
rorl
or
sub
out
in
add
mov
cld
cmp
xchg
sub
aad
outsl
leave
add
cli
sub
xchg
push
cmc
enter
lret
repnz
hlt
xchg
imul
push
sahf
adc
jle
outsl
xchg
loopne
mov
jnp
adc
ljmp
cmp
aaa
or
cld
dec
lcall
mov
arpl
mov
xchg
mov
cmp
inc
xchg
sbb
push
mov
or
pop
out
insb
sahf
ljmp
pushf
jp
les
popf
lods
mov
lea
inc
stc
mov
mov
iret
rsqrtps
rol
or
sub
cmp
sub
mov
and
adc
popf
dec
or
pop
xchg
dec
es
jmp
mov
cmpsb
ficomps
or
cmpsl
xchg
mov
sub
mov
clc
gs
cld
cmpsl
xor
jmp
shll
rolb
fistpl
sarl
xchg
dec
repz
sarb
cs
xlat
mov
out
sarb
sbb
inc
dec
ret
mov
add
inc
scas
lods
adc
loop
pushf
mov
jns
in
push
mov
pop
std
or
js
ret
dec
pop
mov
insl
push
jecxz
test
adc
xchg
add
dec
pop
mov
xchg
mov
sub
mov
into
mov
mov
push
aam
mov
ret
mov
and
mov
cmc
cmp
or
sti
xchg
add
jge
adc
pop
in
add
call
push
movsb
jns
cli
jns
pusha
jbe
std
ja
rep
mov
jbe
add
or
sti
inc
arpl
sub
lret
push
xlat
lcall
ficoml
mov
inc
sbb
rclb
dec
sahf
das
jb
flds
sbb
data16
jge
out
popa
add
mov
int3
mov
dec
sahf
jge
inc
mov
or
stos
jo
lret
sahf
xlat
or
pushf
nop
aas
mov
adc
dec
decb
popf
push
mov
lret
push
mov
outsl
loop
mov
arpl
arpl
js
mov
jne
lods
ret
mov
push
mov
test
int3
jo
js
cmc
add
inc
cmc
jge
repnz
sbb
test
pop
jl
aas
ret
pop
fnstsw
jne
mov
scas
stos
mov
jge
pop
std
push
mov
test
jne
xor
pop
out
mov
cs
aad
mov
cmpsb
lods
xchg
xchg
pop
in
mov
jno
call
shll
sbb
add
ret
sbb
das
sbb
add
jle
inc
orb
lahf
shl
outsl
in
shlb
aad
sbb
jmp
pushf
push
or
mov
pop
add
push
inc
mov
sub
lret
rcrl
and
push
idivl
loop
orb
popf
sbb
xchg
push
shrl
mov
loop
testl
push
xchg
sub
inc
nop
jmp
add
jl
imul
add
pop
push
arpl
push
pop
inc
sub
or
xor
jae
sbb
stos
mov
jg
mov
cmp
leave
in
cli
mov
cmp
add
adc
mov
jno
js
pop
mov
out
mov
les
and
aaa
mov
jbe
pop
rcl
int3
int3
inc
cs
cld
stos
cwtl
into
cmpsb
adc
mov
or
mov
xchg
dec
xlat
lret
jne
pop
js
imul
test
xchg
inc
mov
out
es
jno
loopne
and
push
ret
scas
pop
nop
rclb
fists
jae
mov
fstpt
dec
repz
pop
cmp
test
sahf
or
jmp
mov
in
or
lds
sub
in
sahf
adc
mov
dec
fisubl
mov
popf
movsl
push
sarl
push
adc
in
mov
or
addr16
push
or
or
clc
adc
sub
stos
push
inc
out
xor
loope
mov
sahf
jle
or
popa
adc
cld
inc
xor
jbe
bnd
shl
mov
push
mov
sbb
daa
mov
ret
xchg
hlt
adc
clc
adc
dec
shlb
sub
inc
mov
and
or
mov
in
adc
mov
nop
loop
loop
xor
fmuls
push
cltd
cmp
add
loope
and
jo
adc
and
addr16
pop
pop
adc
das
into
adc
push
xchg
xchg
int3
mov
xchg
test
dec
cs
dec
aam
xchg
add
loop
inc
movsb
jo
xlat
mov
lea
pop
jle
add
rorb
in
into
push
and
fcomip
push
in
leave
loope
dec
and
lock
in
in
cltd
mov
xchg
fimull
xor
fmulp
jno
cmp
aaa
jns
cmc
cltd
cltd
jg
movsb
rclb
and
jo
in
or
mov
sub
movsl
cmp
mov
test
mov
das
repnz
adc
push
adc
insl
add
lds
mov
sbb
sub
add
dec
dec
pop
pop
lahf
xchg
jno
inc
ret
xor
pop
xchg
in
dec
xchg
lahf
fldcw
mov
mov
push
sbbb
inc
cltd
push
sub
pop
and
out
xor
std
xchg
mov
adc
out
in
pop
ret
xchg
and
hlt
mov
test
push
jae
in
gs
mov
fidivs
lcall
int
in
dec
mov
fs
sahf
fsub
orl
shlb
mov
adc
repz
pop
mov
cmp
jnp
dec
lods
push
inc
and
mov
mov
int
mov
sub
lahf
xchg
dec
or
jne
mov
fidivs
rolb
push
lods
insb
push
adc
cmpsl
ds
pop
fnstenv
popa
jecxz
xor
outsl
mov
loope
add
mov
and
test
fiaddl
lods
popf
loop
mov
stos
or
jmp
loopne
cli
mov
in
sbb
push
mov
fwait
and
sub
push
mov
cltd
and
xorb
test
cmp
stc
dec
insb
dec
into
pop
rclb
stos
jne
into
je
in
lret
movsb
jmp
in
xchg
lods
lahf
shrl
call
loopne
ficomps
test
pop
cltd
mov
sbb
inc
jnp
je
rorl
lods
enter
loope
fists
lods
or
or
push
pop
into
xchg
cmp
sbb
or
lcall
push
cmp
xor
adc
mov
and
dec
call
adc
push
in
dec
cld
jnp
fsubr
js
mov
scas
or
xor
mov
push
push
popa
push
inc
push
adc
mov
js
cld
inc
shlb
stos
sbb
out
frstor
call
mov
pop
shl
xor
mov
jno
test
inc
aas
sub
add
pop
or
test
mov
into
push
test
xlat
mov
lock
push
xchg
ret
cmc
sbb
xor
out
dec
xor
imul
shl
xor
and
popf
lods
jmp
popa
mov
ret
mov
mov
arpl
sub
les
xchg
mov
add
pop
mov
addr16
sbb
lahf
jb
out
cmpsb
xchg
sahf
adc
or
dec
dec
mov
dec
lret
call
fnstenv
cmpsl
lahf
jmp
into
cmp
jbe
sar
push
dec
mov
cmp
xor
rclb
rcll
dec
mov
or
xor
mov
icebp
or
and
pop
lcall
fildl
gs
jg
das
inc
jae
or
sbbl
fucom
popa
and
cltd
ror
or
sbb
bound
ficoml
test
ljmp
mov
cmp
out
insl
add
xchg
mov
or
xorl
sbb
xlat
add
incl
movsl
or
dec
aad
sbb
int
pop
and
and
or
adc
mov
popa
cs
inc
ret
mov
ds
mov
jo
fldcw
mov
scas
aas
and
push
std
mov
cli
insl
mov
dec
and
sbb
xor
out
cmc
push
sbb
daa
adc
addl
aaa
mov
jb
push
mov
adc
mov
bound
pushf
push
movsb
faddp
fildll
sti
mov
leave
cmp
negb
xor
adc
into
arpl
mov
push
or
cmc
mov
icebp
xchg
or
sbb
js
sbb
dec
mov
sub
test
ret
mov
dec
into
arpl
pop
lea
mov
pop
xor
insl
inc
pop
dec
jae
push
xchg
test
lret
mov
sbb
repnz
jle
mov
cmpb
nop
pop
pop
mov
mov
adc
lods
lock
mov
pop
add
jmp
mov
mov
dec
adc
js
std
push
out
movsl
cltd
inc
add
sub
mov
cwtl
or
push
push
mov
popf
outsb
sub
ds
lcall
rol
sub
js
aad
jl
cmp
xchg
shlb
ret
in
scas
imul
in
xor
repnz
pop
call
pop
pushf
sbb
test
mov
cmp
mov
mov
js
jno
sub
jle
or
lods
jb
pop
lods
sti
out
adc
out
cmc
pslld
push
dec
addr16
and
sbb
or
scas
cld
in
int3
jno
or
in
outsl
insb
adc
arpl
or
jmp
bound
lret
mov
in
pop
add
clc
xor
arpl
and
pop
cli
jl
aam
mov
cmc
push
fistpl
or
mov
imul
inc
inc
xor
jg
rcrb
mov
push
cmpsb
insl
loop
mov
outsb
mov
rcrl
addps
pop
pop
mov
mov
rep
stos
in
jl
je
clc
pop
mov
aas
mov
xchg
pop
xchg
jo
add
push
adc
add
test
add
add
xrelease
jne
push
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
cmp
movl
jne
push
movl
push
jmp
movl
mov
mov
movl
cmp
jne
movl
cmp
jne
push
movl
push
movl
jmp
mov
mov
mov
movl
cmp
movl
jne
movl
cmp
movl
jne
movl
push
push
movl
jmp
mov
not
mov
mov
cmp
jne
cmp
jne
mov
xor
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
mov
mov
and
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
mov
mov
lea
mov
mov
mov
xor
add
jmp
push
inc
dec
test
repnz
ror
fiaddl
andl
ljmp
in
or
xchg
fisttpll
mov
negl
gs
in
jmp
or
jg
inc
fldt
cmp
add
pop
fcoms
sub
fmulp
pop
jo
rorb
cmpsl
cmp
sbb
lock
dec
xchg
nop
sti
scas
jns
cs
push
lret
and
es
pushf
inc
pushl
lret
fidivrs
push
leave
xor
add
mov
test
sbb
jmp
inc
add
adc
shlb
cmp
adc
loop
push
mov
add
xchg
cld
jecxz
push
cs
insb
rclb
mov
xor
in
lret
mov
in
orl
or
nop
loope
aad
sti
lods
fldl2t
inc
cmp
dec
insb
push
push
sub
add
jbe
mov
test
inc
xchg
ljmp
mov
mov
int
int
adc
lea
adc
sub
sub
jg
cmpsl
jge
add
stos
stc
int
xor
pop
pop
jmp
dec
sub
cmp
jo
bound
out
js
stc
sub
stos
cmp
sbbl
shrl
sub
sbb
aam
bound
hlt
push
and
les
mov
mov
fcmove
push
pushf
cmp
sarl
push
insb
mov
sub
jmp
push
dec
inc
bound
subl
ret
inc
bound
sbb
mov
lret
add
mov
and
test
movsl
test
js
fs
xchg
call
push
pop
inc
fisttpl
loope
pop
ss
adc
ds
mov
pop
or
gs
sti
lods
jl
mov
xor
jbe
mov
xlat
frstor
jecxz
fucomi
pop
js
arpl
push
xchg
cmpsl
popa
arpl
mov
jne
pop
jbe
pop
cmp
ficoml
cmp
pop
pop
push
dec
aad
mov
jmp
addr16
jnp
or
pop
adc
aaa
dec
ficoml
in
andl
add
jno
push
pop
sub
and
jbe
popf
fsubrp
jnp
fdiv
sbb
sbb
dec
pusha
fstpt
negb
push
dec
xchg
xor
fbld
xchg
xor
scas
sti
test
or
mov
xor
mov
pop
mov
push
test
lahf
daa
pop
in
dec
dec
mov
pushf
xchg
daa
popa
test
sbb
insb
xor
mov
xchg
add
in
mov
cmpsl
pushf
push
and
cld
movsl
adc
adc
sbb
xchg
into
icebp
fidivs
xchg
fbstp
push
add
mov
ljmp
cli
fildl
cmp
repnz
push
push
jae
mov
mov
stos
mov
and
test
xlat
cmp
sbb
ljmp
mov
les
pop
inc
mov
out
shrb
rclb
cltd
inc
jg
sbb
repnz
fstpl
lds
out
sahf
mov
adc
ud2
or
or
inc
aam
scas
adc
fldenv
popf
mov
leave
cmpsb
adc
daa
divl
adc
into
std
aas
mov
ljmp
xor
nop
xor
pop
cli
mov
mov
sarb
mov
rcrl
or
cmp
bound
adc
call
adc
cltd
and
jbe
and
or
xchg
mov
into
adc
push
insl
pushf
mov
cmpsl
xor
jle
outsb
aaa
daa
pop
jge
test
sub
cmpsl
push
pop
lea
and
and
ficoml
mov
dec
jmp
xchg
xchg
pop
inc
and
sbbb
fisubs
stos
ja
nop
mov
add
outsb
sbb
xchg
dec
sbb
mov
shrl
cwtl
aas
scas
sbb
add
jns
lds
stos
and
mov
mov
inc
iret
mov
orl
and
sbb
mov
shlb
pop
movsl
pusha
das
mov
mov
cmp
jmp
sbb
inc
pop
xchg
flds
dec
jecxz
mov
mull
icebp
mov
leave
adc
mov
mov
push
scas
movsb
pop
cwtl
mov
int3
sub
lea
sbb
jecxz
bound
jmp
mov
ds
repz
das
nop
mov
clc
push
hlt
in
out
and
repnz
fnstcw
ret
pop
dec
xchg
je
cwtl
daa
out
inc
loope
sbb
loopne
test
ja
pop
pop
fists
or
and
stos
bound
int
aas
jecxz
push
ss
cld
les
cltd
js
add
mov
daa
pop
fsubl
lds
sbb
pushf
mov
fcoms
push
insl
clc
dec
jmp
ss
stos
test
sti
lahf
hlt
mov
out
jge
xlat
mov
into
mov
or
sbb
loopne
lods
rolw
stc
and
add
add
shlb
mov
popf
mov
cli
outsb
xor
mov
jb
mov
sbb
ss
lret
aam
and
mov
xor
inc
sbb
in
insl
out
dec
icebp
bound
push
adc
fisttpl
jl
sbbb
popa
dec
or
test
cmp
pop
lcall
mov
inc
push
lahf
push
lcall
push
lods
pop
sahf
rcrl
aas
subl
pop
shll
test
mov
dec
dec
ret
xchg
adc
xchg
aad
cmc
ja
imul
adc
cltd
imulb
dec
addr16
jg
cmpsb
outsl
push
xlat
sub
frstor
shlb
xchg
es
call
mov
inc
ss
filds
xchg
xor
push
stos
jmp
pop
jmp
mov
in
cli
push
push
mov
jmp
jb
push
ficoms
shlb
test
mov
int3
ljmp
rorb
dec
insl
mov
jmp
je
popf
cmp
sub
sub
dec
idiv
dec
or
xchg
sub
jbe
fs
sbb
pop
faddl
out
sbb
rcl
test
in
pop
inc
mov
std
lods
bound
mov
cmp
loopne
dec
sbbb
in
daa
xor
sarb
iret
cmp
pop
jbe
std
in
iret
jnp
push
out
hlt
xchg
xchg
xchg
shrl
shll
fcomps
jmp
adc
outsb
mov
clc
aam
mov
jmp
aam
mov
pop
push
mov
xchg
mov
mov
cmp
movsl
sub
lock
xlat
cs
mov
jae
ds
fnstenv
mov
sbb
aam
cwtl
push
cs
push
lds
mov
xlat
aas
test
vpaddsb
fwait
pop
js
jns
pop
fdivrl
sbb
ds
add
inc
js
shlb
xlat
mov
adc
xor
ds
inc
ror
and
ret
bound
inc
mov
sub
fwait
insl
xchg
cmc
xor
and
ljmp
insb
push
popf
aad
or
repz
or
fists
dec
lcall
pop
or
das
mov
scas
shll
loope
push
aaa
push
cwtl
push
sahf
xor
dec
sarl
jne
out
and
subl
adc
fdivs
cld
addl
std
imul
or
popf
pop
mov
sbb
repz
sub
popa
fcoms
or
or
lock
mov
pop
aaa
daa
arpl
loopne
test
jp
jg
adc
clc
adcl
stos
cmc
jbe
jb
nop
xchg
std
jb
xchg
movsb
imul
jns
mov
call
lods
adc
jnp
ret
arpl
jae
or
ds
mov
jae
movb
push
test
jle
push
xchg
aad
xchg
fbld
mov
ret
in
jno
add
mov
cwtl
sub
mov
sub
add
push
pop
xchg
nop
addl
fsts
insl
pop
pop
rcrl
pop
sub
cmp
fs
gs
bound
xchg
xlat
pushf
call
das
shrb
xchg
mov
sbb
int
inc
adc
xchg
cmp
stos
das
out
and
xor
cmp
lock
xchg
imul
dec
lea
nop
push
insl
out
mov
enter
gs
inc
es
pusha
and
pop
dec
das
and
cmpsb
in
mov
sub
das
les
stos
sbb
scas
loopne
pop
orb
cmp
mov
arpl
ja
ffreep
jnp
aaa
and
pop
movsl
cwtl
iret
jne
iret
mov
enter
pushl
lods
sbb
mov
pop
adc
dec
ret
dec
repnz
test
inc
jmp
fsubs
cs
dec
ret
pusha
sbb
rcl
lods
push
push
push
inc
nop
cmp
out
aam
mov
cmp
cmovle
mov
js
add
push
rol
push
add
pop
add
idivb
cmp
fstpl
fsts
adc
incl
test
subl
push
mov
mov
ret
flds
clc
pop
pop
insl
cltd
test
psllw
cmp
sbb
and
and
mov
aad
lcall
lds
frstor
test
call
shl
je
adc
cmp
cmp
cmp
mov
fisttpl
xlat
and
outsl
dec
or
xchg
and
pop
jmp
movl
pop
lock
add
sub
stos
enter
lds
and
and
and
leave
and
movsl
mov
xor
pop
xor
stc
xor
fldcw
popa
stos
arpl
shll
pop
insl
inc
push
mov
push
loope
in
adc
lahf
push
jbe
pop
sbb
pushf
ljmp
mov
and
mov
mov
rolb
lret
push
jecxz
inc
and
addb
lea
adcl
test
lret
push
xorl
rcll
adc
push
dec
lods
dec
sbb
movsb
fbld
pop
cmp
push
cmpsl
add
dec
das
mov
xor
push
mov
arpl
mov
lahf
das
add
scas
mov
iret
fnstcw
stos
movsl
pop
loope
loope
insl
lret
mov
scas
jmp
adc
aam
data16
jg
mov
jecxz
pop
test
imul
mov
cld
in
adc
test
std
mov
sbb
sarb
add
add
out
mov
incb
iret
push
sbb
xor
fs
aas
mov
ljmp
dec
call
inc
stos
les
sbb
aad
loope
jl
hlt
call
cmp
ret
scas
adc
jl
or
ds
sub
lock
mov
data16
addl
adc
dec
inc
clc
fnstcw
sub
pushf
outsl
push
sub
mov
push
adc
ja
pushf
dec
or
jge
mov
cld
adc
mov
fsubrl
jae
cmp
sti
and
ret
je
sbb
sub
inc
outsl
and
and
lods
mov
mov
and
or
xchg
inc
lods
gs
cmp
lods
inc
lods
out
sbb
divb
aam
rcrb
scas
inc
fsubs
sub
lods
mov
mov
pop
popa
pop
lret
shll
mov
pop
in
and
in
cld
faddl
pop
aaa
mov
cltd
loope
cmp
imul
dec
or
daa
adc
aaa
jl
neg
test
add
adc
loopne
jecxz
adc
lds
clc
cmp
fsubl
add
das
cmp
dec
sub
fdiv
cmp
or
cmpl
lods
xlat
das
jae
dec
push
xor
je
pop
mov
cmp
sahf
lret
mov
out
in
and
dec
lahf
jns
xor
outsb
dec
jg
lret
es
jl
jl
dec
arpl
repnz
jns
mov
dec
lcall
cli
cmp
aaa
sub
push
adc
in
sbb
cmp
aas
lahf
into
cmpsl
jmp
lock
cmp
push
mov
shlb
inc
push
outsl
xchg
sbbb
xchg
sbb
in
pop
push
and
cmpl
cmp
cld
xor
sbb
mov
nop
inc
and
jl
dec
loopne
filds
sub
cmp
jbe
push
imul
hlt
arpl
pop
nop
fsubl
ja
pop
psllw
ljmp
mov
outsb
mov
add
loop
or
pushf
xchg
xor
sbb
xchg
roll
pop
lret
test
rcrl
mov
dec
out
xchg
jge
aad
lock
in
cs
or
arpl
and
add
lcall
adc
mov
sbb
add
scas
mul
negb
ds
iret
push
cmp
in
dec
ljmp
jle
test
rolb
pop
inc
xor
insb
lcall
adc
push
pop
mov
cmp
lret
jecxz
pushf
jno
sub
popf
adc
fldt
std
or
pushf
cmp
inc
out
fwait
add
mov
cld
out
rcll
loop
ret
fbld
xor
xor
insb
cltd
sub
faddl
pop
daa
lods
fcompl
jno
push
mov
repnz
xor
sub
in
push
rcrl
repnz
daa
jae
je,pt
and
xlat
dec
inc
lods
cmp
inc
inc
jbe
mov
stos
les
clc
in
lahf
movb
jae
insl
adc
push
mov
or
ret
mov
lods
lods
cmpsl
dec
mov
and
fucomp
fmuls
cltd
lcall
stos
jmp
adc
and
pusha
cmp
dec
sub
sahf
shll
push
and
test
or
aam
int
adc
test
pop
cld
xchg
dec
mov
bound
jg
std
pushf
leave
mov
and
decb
stos
add
or
lret
cmp
dec
imul
in
sub
es
mov
sub
bound
insb
mov
pushf
insb
sub
pushf
mov
inc
mov
adc
push
lcall
movsb
jecxz
mov
jle
lret
mov
mov
jns
mov
movsl
xor
xor
lock
fwait
mov
mov
out
test
psubw
addr16
jg
xor
mov
adc
cmc
call
lret
roll
push
scas
push
mov
data16
inc
ds
pop
push
cltd
int
cmpsl
into
loopne
test
shll
sub
iret
push
insb
push
mov
pop
adcb
lahf
out
mov
repz
fwait
cld
loopne
popa
adc
insb
das
sub
jbe
mov
clc
xchg
add
lds
or
loop
loope
cmp
inc
test
sbb
pop
popa
fisubrs
popa
or
sbb
jmp
add
and
cmp
jecxz
dec
pop
xor
xor
push
mov
jecxz
mov
xchg
jbe
sub
movsl
es
mov
sbb
iret
sub
test
add
fucomp
and
sbb
dec
ja
movb
out
dec
mov
push
and
pop
or
cmp
sbb
sbb
inc
and
sub
pop
adc
test
scas
adc
and
add
test
lods
cld
pusha
xchg
or
nop
test
xor
pop
in
orb
xchg
test
push
jg
in
je
pop
shrb
mov
test
out
fstpl
fisttps
int3
scas
mov
pop
les
js
scas
jo
cltd
xchg
mov
dec
insl
and
sub
lret
dec
cli
or
cmp
lock
mov
jne
mov
sbb
ret
cmp
mov
mov
rcl
mov
xchg
call
push
dec
fldt
cmp
cmc
mov
scas
popf
or
fimull
sub
jno
test
and
scas
mov
fisttpl
popf
xchg
xchg
repnz
subb
and
popf
popa
filds
leave
aam
insl
adc
mov
inc
popa
or
ss
out
and
fsubrl
inc
jbe
out
arpl
subl
pushf
sbb
and
mov
mov
and
sub
dec
insb
cmpsb
aaa
rorb
sbb
and
outsl
in
outsb
xor
jb
lcall
xchg
sbb
push
repnz
scas
push
pop
pop
dec
jmp
jo
pop
cmp
ja
mov
mov
ja
xor
mov
xchg
add
jmp
cltd
pop
cmp
pop
rcll
rcrb
out
dec
gs
loop
inc
jle
jno
add
push
dec
in
sub
push
ret
inc
into
inc
inc
or
mov
cmp
jns
pop
xchg
fiadds
repz
sub
ud2
mov
cmp
ret
sti
div
lock
sarb
mov
xor
or
clc
cmovb
js
push
push
push
imul
cmpsl
inc
test
int
cmpsl
jmp
insb
int3
sub
or
mov
pop
leave
testl
addr16
mov
mov
cmp
cmp
stos
in
pop
xchg
add
sbbl
dec
adc
adc
ljmp
adc
mov
lock
test
outsb
xchg
add
pop
pop
sbb
mov
lcall
mov
adc
push
mov
sbb
jno
add
mov
dec
mov
lcall
dec
lods
add
sub
out
movsb
jl
pop
mov
pusha
or
inc
mov
ja
lea
adc
inc
je
lret
adc
jg
fwait
cs
dec
stos
dec
fmul
dec
xor
movsb
call
pushl
xor
jle
test
mov
popf
outsb
mov
das
xchg
and
mov
out
xor
mov
or
aas
loopne
push
jne
mov
sbb
dec
xchg
lods
dec
xor
jae
repz
lahf
cmp
icebp
adc
shll
or
sbb
push
adc
add
sbb
pop
loop
loop
nopl
jmp
inc
xlat
mov
push
mov
mov
rolb
dec
inc
push
inc
aas
punpckhbw
ret
mov
aas
ficompl
mov
lods
dec
xchg
and
ljmp
lods
subl
xor
mov
enter
mov
jnp
fstpl
movsb
imul
xor
lahf
add
js
data16
xchg
dec
icebp
imul
insl
test
lcall
cld
dec
xchg
je
stos
mov
aam
xor
rol
pop
cmp
ds
add
push
call
repnz
subl
sub
ss
cmp
sub
jle
or
dec
adc
lods
cmp
out
mov
xchg
adc
sbb
loop
loopne
adc
dec
jmp
shlb
nop
jns
mov
mov
call
jmp
mov
or
jne
aaa
mov
mov
dec
sbb
out
lea
pushf
bound
ret
mov
xchg
out
add
jg
nop
pop
add
push
fidivl
arpl
fnstenv
mov
flds
and
stos
push
setge
adc
and
add
and
jns
jl
xchg
mov
push
sbb
dec
int
push
xchg
jmp
and
imul
fsubrp
lret
addb
add
pop
pop
jp
dec
ret
in
and
push
dec
adc
nop
outsb
cmp
sub
cmp
add
pop
shrl
push
gs
pop
add
adc
sbb
push
leave
test
dec
mov
xchg
dec
or
stos
xchg
sahf
lcall
mov
push
and
popf
mov
mov
aad
sbb
adc
arpl
ds
fnsave
cmp
xor
int
aaa
sbb
mov
xor
clc
cmpsb
loope
sahf
xor
pop
fcomip
xchg
mov
mov
js
imul
cmp
jle
dec
jo
add
xor
imul
pop
inc
ret
repz
jecxz
and
cmp
fs
xor
xchg
and
nop
ss
dec
jg
xchg
add
inc
call
sub
dec
movsl
push
pop
add
adc
sub
pushf
push
pop
xlat
sbbb
mov
dec
add
das
mov
sti
rorb
adc
inc
jns
pop
in
fcoms
fcoml
or
test
push
cmp
in
addr16
pop
sbb
xorb
xorl
stos
out
roll
rorb
xchg
and
out
fs
xchg
jae
sbb
push
xlat
jnp
jns
mov
cmp
ja
test
rcrb
call
xchg
or
fwait
pop
fwait
pop
fs
mov
mov
jo
xchg
cwtl
jne
mov
dec
inc
push
and
jmp
loopne
mov
nop
push
cmp
cld
sbb
insl
sub
sbb
jbe
xchg
lahf
or
sub
and
and
fs
aad
adc
xlat
sub
adc
pop
pop
pop
inc
push
add
cmp
cld
ljmp
fnstcw
shrl
push
cmp
pushf
incb
in
or
jl
mov
fstl
je
jns
cmp
xor
dec
push
mov
ret
into
and
in
sarb
or
shrl
or
shll
rcl
xchg
cmc
test
shrb
mov
andb
inc
adc
or
adc
mov
pusha
mov
in
mov
pushf
dec
into
mov
pop
push
dec
mov
in
xchg
insl
jmp
xchg
xor
pop
lret
outsl
adc
or
cli
jg
pop
and
xchg
into
push
mov
or
aam
cmp
add
nop
andb
fsubl
aas
enter
pop
rclb
icebp
xchg
orl
mov
aaa
das
hlt
outsb
lds
testb
mov
push
data16
mov
testb
push
fs
push
dec
sbb
sahf
pop
cltd
lds
push
ret
mov
sbb
sbb
xor
call
lret
and
add
fistpl
ret
stos
mov
scas
test
sbb
mov
idiv
push
push
pop
fucomi
addr16
mov
repz
mov
pop
inc
sbb
jg
test
fcmovnu
call
outsl
shll
loopne
enter
sbb
cmpsb
mov
icebp
push
pusha
loope
arpl
bound
jb
xchg
jge
push
int
arpl
xlat
fcmovne
stc
sbb
sub
jmp
adcl
cli
mov
sbb
shlb
mov
fimull
pushf
sahf
pop
testl
movsl
fcmove
int
dec
mov
fs
jmp
dec
jmp
dec
sbb
nop
in
ret
aad
aaa
cmp
in
shll
dec
scas
jg
pop
mov
ss
jmp
inc
int
jo
frstor
lods
out
cmpsb
adc
sbb
and
ficoms
je
add
cmp
add
inc
mov
in
addr16
insb
and
test
ret
loop
push
jmp
pop
sub
inc
fcomps
repz
roll
popf
lret
sbb
adc
rorb
push
xor
dec
lcall
shlb
aam
lods
fmulp
daa
sub
add
cld
roll
fsubr
stc
or
push
xchg
pop
xchg
jmp
mov
loope
xchg
mov
mov
dec
cwtl
ds
mov
ss
jb
adc
jae
and
and
xchg
fisttpl
int
ret
aam
jmp
jae
test
repz
pop
xor
stc
cs
mov
inc
jl
fimuls
pop
icebp
push
and
outsl
int
lret
jmp
inc
out
out
icebp
pop
pop
push
stos
jp
outsb
mov
stc
ret
and
rcrb
test
inc
loop
pop
loopne
jmp
aas
sbbl
aad
xchg
jno
stos
int
mov
stos
add
imul
pop
enter
ja
pop
jecxz
mov
sti
xor
cs
dec
cmpsb
fimuls
pop
loope
xor
and
jnp
and
or
or
xorl
loopne
jg
inc
jge
or
inc
lret
roll
pop
pushf
adc
add
jbe
cmc
mov
push
out
fadds
dec
mov
fdivrl
pusha
inc
fldcw
nop
or
mov
pop
cld
sahf
cwtl
idivl
ror
jmp
nop
scas
pop
mov
xchg
shll
xchg
mov
xorb
xor
or
pop
inc
inc
pop
jl
lock
imul
ss
testl
pushf
pop
addb
hlt
aad
cmp
sbb
pop
scas
or
adc
mov
lret
jl
les
and
je
leave
inc
push
ss
inc
and
or
clc
pushf
or
push
or
cmp
aas
rorl
scas
and
cld
or
insl
jecxz
xchg
adcl
fldenv
cmp
es
fstl
stos
rorb
iret
mov
inc
push
sub
cmp
sti
pushf
divl
movsl
pop
mov
lret
out
xor
mov
aad
sub
jge
inc
lods
es
les
orl
int3
xor
dec
xor
aas
dec
mov
repnz
add
ja
les
repnz
mov
sbb
xchg
add
imul
or
adc
cld
pop
ss
mov
pop
pop
lcall
jae
mov
adc
adc
xor
aas
jbe
pop
mov
adc
cmp
cmpsl
sub
scas
sarl
repz
mov
mov
out
arpl
movl
mov
repz
lock
lret
add
pop
mov
fsubrl
call
test
mov
xchg
dec
and
ror
push
mov
inc
sub
and
jp
rcr
cmp
mov
xchg
and
fidivs
adc
cmp
pop
and
daa
cs
mov
subb
call
je
lods
bound
stc
divl
fs
ds
mov
pop
and
and
mov
pop
lcall
add
and
xchg
cwtl
std
xor
mov
jo
pusha
icebp
cmp
xchg
outsb
xor
mov
test
in
jno
inc
pop
mov
cmpsl
dec
pop
push
pop
and
push
mov
icebp
cmovno
mov
inc
repz
sahf
sbb
sub
push
sub
or
cmpsb
dec
xor
mov
cmpsb
enter
mov
add
jno
cmpsb
mov
ret
sbb
sbbl
in
aaa
jl
out
mov
bswap
out
mov
repnz
cmp
push
decl
xchg
sbb
sbbl
fsubrl
pushf
ficomps
js
cmpl
sub
sbb
and
mov
imul
insl
imul
or
jne
mov
mov
scas
lahf
jbe
addr16
leave
loopne
loope
icebp
lods
pushf
stos
mov
les
insl
jp
push
sbb
fisubrs
pushf
or
and
sub
xor
sbb
outsb
or
or
pushf
xor
jne
xchg
je
sahf
outsb
mov
push
es
fldenv
or
add
mov
pop
mov
dec
push
insb
or
adc
mov
mov
jnp
cmc
je
stos
cmp
cmpsb
jl
or
mov
lret
push
fwait
outsl
dec
out
mov
push
popa
jmp
ja
imul
pop
jl
aam
mov
mov
scas
pop
push
fnstenv
ljmp
iret
jmp
push
jb
xchg
jmp
xor
or
lods
add
insb
cmp
fistpll
mov
mov
adc
pop
cwtl
clc
dec
mov
lea
loop
fnsave
out
pop
pop
inc
cld
shrb
cmp
cmp
daa
sub
cwtl
lods
orl
jo
push
mov
mov
int
mov
mov
out
sub
in
cltd
jns
rclb
add
enter
loopne
mov
or
push
enter
jmp
pop
pop
mov
mov
jle
int
rcrl
test
sbb
xchg
test
inc
jg
nop
arpl
lds
loopne
dec
mov
or
and
cs
push
ret
test
xchg
pop
push
roll
add
test
ss
popa
inc
add
pop
and
mov
and
movsb
inc
addr16
lock
push
cmp
xchg
add
pop
icebp
enter
dec
movsb
pop
inc
xchg
or
fwait
xor
sbb
inc
mov
and
dec
mov
rcl
loopne
paddw
mov
test
or
sbb
sbb
xchg
ds
sbb
jae
xchg
push
jb
je
mov
cmp
mov
xchg
cmp
cmp
pop
adc
sub
addr16
xchg
in
xlat
mov
sub
cld
xor
jbe
shr
addr16
fnstcw
mov
ss
sbb
sub
jo
adc
jl
push
cmp
cmovge
les
daa
test
ja
pop
add
ljmp
push
in
xor
popf
cwtl
fimuls
xor
xor
scas
jns
jns
mov
dec
cmp
orb
insl
push
inc
add
or
clc
sub
mov
test
sbb
insb
xor
pop
inc
jle
fbld
mov
ja
push
in
mov
add
sbb
sub
fs
add
lret
mov
incb
out
outsb
inc
sub
fwait
sbb
xchg
mov
pop
lret
shlb
inc
push
sub
cmpb
test
movsb
sbb
sbb
loop
pop
sbb
aam
adcl
aas
jno
fisubrs
push
xchg
or
add
sub
in
and
out
scas
outsb
fcoms
aad
hlt
add
or
scas
movsb
aas
rolb
mov
pop
jp
loope
jp
sbb
stos
sub
mov
lcall
iret
and
arpl
add
or
stc
mov
add
cmp
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
adcl
sub
push
push
adcl
push
lea
push
movb
andl
call
movl
mov
cmp
movl
je
push
xorl
call
jmp
movl
mov
movl
cmp
movl
je
xor
jmp
mov
adcl
push
push
call
adcl
test
je
and
movl
adc
mov
mov
mov
add
movl
lea
mov
lea
mov
mov
mov
mov
sub
or
mov
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
mov
subl
mov
andl
xor
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
movl
mov
mov
movl
cmp
movl
jne
or
mov
mov
movl
mov
xor
incl
add
mov
mov
xorl
xor
add
adcl
mov
and
mov
adcl
xor
add
incl
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
mov
adcl
mov
mov
mov
mov
addl
mov
subl
mov
andl
mov
subl
mov
addl
mov
adcl
movl
add
mov
sbbl
xor
orl
add
movl
jmp
movl
mov
movl
cmp
jne
movl
mov
movl
cmp
jne
orl
push
orl
push
subl
call
xorl
test
je
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
jne
adcl
push
addl
push
call
andl
test
je
sub
mov
mov
addl
xor
lea
andl
push
or
mov
xor
orl
lea
adcl
push
mov
pushl
sbbl
call
mov
mov
or
mov
mov
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
lea
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
xor
xor
add
andl
mov
inc
mov
cmpl
jg
jmp
push
push
call
cmpl
jb
mov
movl
xor
lea
movl
mov
movl
cmp
movl
jbe
not
mov
and
mov
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
adc
mov
mov
sub
xor
movl
mov
movl
lea
mov
movl
lea
mov
movl
mov
cmp
movl
jne
mov
cmp
movl
jne
movl
push
sbbl
push
call
test
movl
je
mov
movl
cmp
jne
movl
mov
movl
cmp
jne
push
addl
push
call
test
je
movl
mov
cmp
jne
movl
mov
movl
cmp
movl
jne
xorl
push
xorl
push
adcl
call
test
je
movl
mov
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
push
xorl
push
call
test
movl
je
movl
mov
movl
cmp
jne
mov
movl
cmp
movl
jne
push
xorl
push
call
addl
test
movl
je
mov
movl
cmp
jne
mov
cmp
jne
adcl
push
xorl
push
call
xorl
test
movl
je
movl
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
push
sbbl
push
call
adcl
test
movl
je
notl
mov
cmp
jne
mov
movl
cmp
movl
jne
orl
push
adcl
push
adcl
call
subl
test
je
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
sbbl
push
xorl
push
orl
call
test
movl
je
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
push
orl
push
adcl
call
andl
test
je
mov
cmp
movl
jne
movl
mov
cmp
jne
push
push
call
test
movl
je
mov
cmp
movl
jne
movl
mov
cmp
movl
jne
push
adcl
push
sbbl
call
subl
test
movl
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
movl
xor
mov
sbb
push
or
mov
adcl
xor
sbb
mov
push
incl
mov
adcl
add
cmp
movl
je
mov
or
mov
mov
xor
xor
subl
add
xorl
add
movl
adc
adcl
xor
mov
push
mov
add
mov
xor
adcl
xor
adc
mov
xorl
add
movl
adc
xor
andl
xor
movl
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
dec
movl
mov
sub
jmp
loope
jg
cmpsb
add
test
adc
outsl
mov
sbbl
cmpl
mov
mov
in
inc
fists
mov
out
xchg
testb
add
bt
sbb
xor
mov
inc
insb
std
push
mov
adc
test
shrb
js
lds
aad
fisttps
clc
ds
push
hlt
jmp
loope
fwait
push
movb
mov
pop
push
stos
jp
dec
add
push
and
ja
fiadds
dec
fimuls
fwait
mov
bound
stos
stc
rol
ss
shl
adc
add
push
jb
push
add
push
aam
adc
push
mov
dec
lea
fnstsw
movntps
cwtl
or
adc
dec
xchg
addr16
jl
mov
jae
inc
sub
xchg
nop
inc
mov
insl
cs
aas
push
sbb
push
cwtl
xor
inc
push
mov
mov
xorl
movsb
mov
mov
iret
fldt
leave
enter
mov
in
stos
imul
add
lea
repz
cmpsl
leave
mov
xor
push
repnz
xor
shlb
fcompl
jmp
jg
std
fsubl
inc
mov
mov
pop
jp
mov
subb
mov
push
jg
xor
mov
test
sbb
mov
add
mov
push
or
or
loope
fcomps
movsl
int
jnp
fwait
clc
inc
fisttpll
test
mov
mov
mov
jecxz
sarb
pop
sbb
and
js
mov
out
add
mov
in
jb
jo
int
insb
mov
outsb
rcrl
inc
mov
mov
sbb
jne
xlat
enter
test
and
loop
cmpsl
add
mov
js
outsb
adc
lods
inc
pop
mov
mov
lock
retw
pop
stos
mov
call
pop
repnz
into
xchg
mov
cmp
adc
fimull
int
inc
repnz
cltd
mov
clc
shrb
sbb
insb
sti
add
sahf
pop
mov
push
outsl
addb
push
insl
adc
ret
mov
push
push
rcl
in
xor
sbb
rclb
push
mov
outsb
push
dec
subb
push
lcall
mov
mov
xlat
sub
pop
fsubs
pop
outsb
xor
xchg
pop
fwait
xchg
adc
ret
xrelease
xor
loopne
xchg
jne
enter
ja
cmp
leave
incb
xchg
in
cmpl
nop
lods
hlt
mov
imulb
lahf
clc
pop
push
xchg
andl
mov
push
or
mov
sbb
sub
stos
jecxz
sbb
in
inc
std
cwtl
into
mov
jecxz
shlb
sahf
les
popa
iret
les
mov
cltd
mov
out
mov
ljmp
in
push
lahf
iret
js
adcb
leave
pop
pushl
add
cmp
xchg
movsb
ficoms
data16
in
aad
mov
repnz
int3
ljmp
push
cld
xor
push
lea
sbb
ljmp
bound
sub
xor
mov
mov
mov
lahf
adc
or
stc
pop
out
sub
popa
jmp
xor
jecxz
pop
xchg
aaa
scas
lock
mov
jge
push
push
inc
mov
push
pop
shrl
imul
fistpl
mov
mov
push
push
mov
adc
stc
push
mov
rcr
rcr
es
add
pop
mov
inc
jb
ret
roll
xor
xlat
mov
jb
mov
mov
xor
dec
xchg
sub
daa
fildl
push
push
adc
out
aas
pop
or
lock
mov
push
xchg
cmp
jne
fcmovnb
pop
icebp
push
sbb
outsl
add
jns
lret
adc
loopne
and
cwtl
cmpsl
icebp
aad
lods
call
mov
push
inc
repnz
mov
jbe
dec
push
pop
ds
cmp
push
xchg
add
mov
rcrb
js
pop
xor
mov
dec
push
imulb
cmp
mov
lea
jbe
push
mov
mov
xor
in
in
iret
daa
repz
fsubl
inc
enter
insb
inc
mov
daa
add
mov
sub
inc
sbb
push
sbb
test
insb
push
mov
cs
xchg
inc
ret
jge
test
or
lods
fstl
imul
jp
cld
cmp
push
dec
sbb
pusha
cmp
mov
mov
iret
in
jb
cltd
in
sbb
ret
gs
adc
and
movsb
mov
mov
xor
sub
cmc
mov
sbb
lahf
sarl
out
xchg
mov
or
xchg
test
int
jno
pop
pop
mov
push
jno
or
mov
and
jp
lds
ror
divb
cmp
enter
insb
cmpsb
sahf
add
push
scas
mov
mov
sti
nop
xchg
xor
pop
or
mov
jle
sub
movsb
push
jnp
mov
scas
jecxz
rclb
and
push
cmp
adc
scas
dec
xor
or
mov
cmp
push
xor
jle
in
mov
enter
scas
pop
xchg
inc
pop
mov
int
mov
test
sub
xor
sbb
daa
sbb
clc
mov
gs
js
xor
lret
hlt
push
and
ljmp
mov
pop
lret
xchg
outsb
je
sbb
cmc
loope
inc
mov
faddl
add
call
mov
cltd
sub
cld
sbb
cmp
cmp
jns
and
mov
lret
out
add
sahf
or
lea
cmp
dec
addr16
and
inc
out
adc
test
loope
cmp
mov
popf
test
mov
inc
bound
sub
sti
movl
dec
add
shl
pop
dec
inc
cmc
lods
clc
rcll
shl
scas
pop
jbe
sahf
out
mov
mov
fnstcw
lret
out
int
pop
push
lock
pop
mov
mov
fmuls
jg
jmp
std
add
shrb
pop
jge
addr16
les
adc
fdivr
out
call
ja
loope
sub
jo
dec
fldenv
sub
repz
push
icebp
cmpsb
mov
sub
sbb
add
testl
cwtl
aad
stos
sarl
push
sbb
cmp
mov
iret
xchg
repnz
jp
cmp
out
mov
push
push
or
loopne
into
sbb
push
push
push
pop
and
ds
add
and
jmp
jge
dec
mov
mov
cwtl
push
adc
mov
pop
add
mov
lock
xlat
imul
push
xchg
jo
nop
dec
loop
mov
fisubrs
lods
dec
test
fs
mov
xor
xor
mov
clc
push
or
jle
sub
dec
enter
xchg
test
in
dec
mov
fdiv
dec
pop
aad
inc
rol
fmuls
mov
jnp
xor
scas
xchg
loope
dec
mov
or
rcll
loope
out
mov
or
clc
adcl
cmp
push
sti
push
dec
xchg
add
into
cmp
in
loopne
xor
movsb
rclb
jnp
jp
fistpl
stos
es
leave
repnz
jb
add
jle
repz
pop
je
fildll
and
cwtl
inc
movsb
ret
mov
jo
cwtl
ja
jb
cwtl
out
jo
scas
push
icebp
xlat
sbb
mov
xchg
inc
loopne
and
xchg
repnz
or
add
xchg
clc
push
fs
xchg
lret
xchg
mov
rcr
or
mov
sbb
sub
inc
mov
ljmp
out
cmp
dec
das
add
mov
movsl
js
out
loop
movsl
jmp
xchg
mov
jmp
lcall
jne
add
out
test
jecxz
rol
xchg
test
pop
mov
or
inc
lahf
faddp
jne
jcxz
mov
andl
xchg
mov
test
mov
outsl
xor
notb
sahf
mov
mov
icebp
dec
lock
pop
inc
inc
mov
js
push
sbb
popf
hlt
sahf
jne
jge
mov
xlat
add
sub
add
or
icebp
jmp
idiv
add
test
lcall
inc
cmp
lds
xor
sub
mov
jns
fstpt
and
add
mov
xchg
in
mov
xchg
bound
cmp
add
or
mov
adc
add
lcall
mov
mulb
cwtl
in
call
mov
add
out
imul
xor
xchg
pop
adc
jp
dec
xchg
dec
add
cmp
outsl
shlb
xchg
push
dec
dec
or
add
jbe
add
imul
lods
pop
adc
sub
add
cmp
stos
scas
mov
mov
stos
xchg
add
cmp
pop
mov
add
in
in
movsl
gs
push
imul
mov
xchg
fisubrl
test
mov
scas
mov
pushf
jl
or
ja
ret
jp
ret
mov
cmp
lcall
xor
jnp
add
icebp
pop
pop
ja
cmp
int3
cmp
rcrl
bound
xchg
cs
sub
test
ja
inc
and
shlb
inc
push
mov
jae
mov
es
and
pop
inc
and
or
or
xor
push
push
lods
jp
and
pop
lcall
inc
lods
push
sub
mov
and
or
enter
push
gs
xchg
movsl
push
repnz
stos
fidivl
stc
mov
data16
lods
cmpb
ja
xor
push
jle
lcall
sub
dec
push
xlat
pop
insb
push
js
cmp
movsl
stos
mov
aam
mov
xor
dec
bound
jmp
mov
sti
cmc
adc
push
out
shll
movb
sbb
xchg
rcrb
jne
adc
mov
fcmove
aad
divb
imul
add
mov
scas
scas
in
cmp
add
or
sbb
pop
jp
cmp
jl
push
push
dec
pop
jnp
lahf
notl
movsb
lds
xor
xor
dec
jns
mov
fisubrl
cwtl
lcall
mov
pop
out
js
ret
roll
hlt
pop
nop
addb
pop
scas
push
xchg
aas
aaa
mov
and
not
loop
outsl
adc
xchg
inc
outsl
mov
les
shl
mov
adc
iret
jmp
inc
mov
imul
xlat
sbb
int3
mov
and
loope
repnz
mov
ss
cmp
adc
or
pushf
adc
in
out
out
jmp
sbb
lds
cld
mov
pop
pusha
jnp
add
sub
in
or
cmp
mov
popf
pop
arpl
jge
insb
shrb
sbb
cli
adc
pop
xor
pop
pop
jb
movsb
cmpsb
dec
es
loope
aam
stos
loop
jno
clc
das
xchg
mov
stos
mov
icebp
adc
jmp
mov
or
sbb
push
mov
loop
popa
rcr
jo
sbb
xchg
inc
jnp
movsl
rclb
mov
or
fcmovnbe
adc
ficomps
icebp
xchg
test
hlt
ror
lods
frstor
push
sub
sti
into
hlt
mov
or
inc
js
call
push
rcr
add
cmp
dec
pop
add
scas
mov
ljmp
or
sbb
daa
roll
lret
pop
fidivl
cmp
imul
mov
out
add
cs
jmp
mov
idivl
std
mov
enter
xor
jg
fwait
jbe
in
inc
testl
cmp
cli
jecxz
lods
xchg
aaa
loope
or
jo
nop
jmp
and
adc
adc
xchg
loope
mov
notl
lods
int3
in
fists
scas
dec
iret
xor
repz
std
inc
push
popf
lahf
mov
fmul
cltd
inc
adc
mov
in
mov
mov
xchg
cmovne
xor
push
int3
fists
jno
lret
mov
add
mov
scas
and
aad
and
dec
lret
xorb
clc
rolb
xchg
pop
insl
int3
jle
xor
flds
jnp
lcall
mov
push
mov
movsb
cmp
jnp
gs
int
cmpsl
outsb
inc
ds
adc
sub
push
adc
mov
mov
lahf
notb
xor
or
rol
daa
lcall
ljmp
xor
fsubrs
or
sub
outsl
outsl
ja
sbb
add
sbb
mov
out
rolb
mov
stos
or
add
decl
mov
cmc
js
movsl
negb
insb
mov
lods
fmul
inc
test
or
insl
dec
pop
lret
adc
pop
sub
fistl
add
pushf
pusha
sbb
xchg
loope
add
into
inc
lahf
mov
mov
cmp
or
cltd
jnp
dec
movsb
pop
fs
pop
je
lret
xchg
out
push
sub
inc
mov
mov
fbstp
ret
inc
shll
shlb
sbb
sahf
outsl
mov
data16
popw
je
lods
mov
or
pop
fsts
out
mov
aaa
lcall
in
adcb
leave
sbb
aam
and
sub
jg
cmp
xchg
lahf
mov
sbb
aas
hlt
add
xor
pop
lcall
out
xor
jmp
bound
adc
or
dec
das
jns
fs
push
lds
jecxz
je
loop
test
xchg
dec
and
ret
inc
xorl
mov
push
xchg
cld
stc
decl
lds
cmp
xchg
push
mov
mov
ret
xchg
and
push
xchg
into
and
and
loope
mov
inc
lock
mov
jno
rcrl
movsb
add
jge
iret
out
into
dec
mov
sahf
dec
mov
into
out
test
call
fcompl
push
mov
shl
or
dec
dec
movsl
mov
rolb
fisubl
push
lds
mulb
xchg
jle
cltd
sub
icebp
jmp
rclb
scas
xchg
shll
lods
mov
mov
rorb
ljmp
mov
xor
xchg
jl
jns
pop
daa
fisttps
pop
inc
jnp
jae
clc
roll
sbb
jle
xchg
dec
cmp
mov
repnz
mov
inc
rorb
ret
out
addl
sbb
mov
lret
mov
pop
lods
xchg
push
adc
in
insl
add
jnp
bound
out
fs
mov
subb
cwtl
ret
sti
xchg
push
and
into
mov
adc
in
test
daa
test
jno
mov
dec
mov
mov
pushf
mov
dec
mov
or
sbb
mov
loop
in
cmp
sub
mov
jb
or
push
jmp
mov
dec
pushl
jb
out
dec
rcr
and
aas
sub
fisubs
mov
jle
aad
xor
mov
in
mov
pop
xlat
fiaddl
push
mov
ffreep
or
les
jae
mov
xchg
jg
test
inc
aaa
and
xor
les
cmpsl
insl
sub
and
lahf
jmp
fstl
pop
shll
testb
cwtl
lret
xchg
pop
fcomps
cmp
dec
push
mov
ds
cmp
sbb
in
inc
mov
lahf
cvtps2pi
out
add
jae
xorl
test
mov
push
xor
insb
icebp
mov
dec
mov
jae
in
add
add
nop
sahf
pop
outsb
aad
addl
dec
jne
cld
inc
stos
cmp
daa
pop
loop
idiv
mov
pop
out
sub
cli
and
popf
add
dec
test
mov
daa
lret
imul
ret
std
nop
sahf
sti
sub
loopne
xchg
dec
push
xchg
sub
into
cmp
jns
loopne
sub
ljmp
test
jle
and
xchg
sub
mov
les
stos
sbb
or
aas
imul
pop
gs
xor
sbb
inc
adc
pop
cld
cmp
xchg
jg
mov
repz
and
push
pop
enter
dec
add
mov
xchg
jno
mov
ds
js
lret
aam
jbe
pop
jbe
adc
or
lcall
mov
jno
xorl
es
call
dec
nop
pop
jne
mov
imul
inc
icebp
add
cmpl
in
loopne
mov
lods
sub
data16
dec
lods
lods
dec
lret
adc
push
jle
ret
mov
fs
and
mul
pushf
idivb
fsincos
push
jae
repnz
jecxz
pop
lods
mov
add
dec
dec
sahf
loope
ficoml
dec
aaa
adc
inc
das
and
add
scas
cmpsl
push
and
mov
jl
xchg
pop
inc
sbb
xchg
xchg
cmp
int
clc
pop
push
cmp
ret
xchg
cli
insb
lock
out
jb
rclb
in
dec
je
xlat
jnp
out
jno
das
xor
xor
inc
mov
imul
cmp
pop
andl
push
push
lods
popf
mov
movl
les
push
jge
addr16
outsl
imul
pop
scas
nop
inc
ljmp
in
pop
call
popa
daa
out
mov
mov
movsl
popf
clc
repz
jp
dec
ja
sbb
aad
mov
sub
jl
xchg
adc
mov
inc
mov
ret
xchg
jno
mov
or
js
mov
jge
sbb
lods
push
sbb
sbb
or
outsl
ret
push
mov
outsb
adc
pushl
jno
test
sub
push
or
pushf
stos
fisubl
loopne
cmpsl
push
outsb
idivb
mov
pop
pmullw
xor
or
push
repnz
int
xor
stc
pop
mov
int
in
fisttpl
ja
mov
pop
jge
push
cmpsl
fsts
push
adc
loopne
mov
loop
clc
sub
pop
inc
cltd
pop
xchg
jns
xchg
sub
push
push
cltd
mov
je
or
repz
enter
imul
in
sub
sub
daa
xor
or
enter
test
sbb
pop
shlb
inc
js
in
dec
push
push
pop
inc
out
mov
adc
addr16
hlt
xchg
sub
push
jecxz
and
inc
mov
jb
mov
pushf
add
cmp
xchg
adc
sbb
enter
xor
fcmovnu
add
dec
jp
push
cmpsl
lcall
fadd
add
add
jp
mov
scas
pusha
ret
mov
jns
and
in
fildl
aam
inc
adc
cmp
cmpsl
repz
sti
jae
lret
add
mov
push
mov
cmovl
repz
cmpb
sbb
stos
ja
fcoms
pushf
sbb
and
lds
scas
sbb
lds
adc
adcl
in
pop
sbb
dec
cmp
sbb
in
dec
sti
push
push
out
mov
js
insl
hlt
and
ljmp
add
cmp
dec
inc
iret
xchg
cmpsl
loope
outsb
jb
mov
push
mov
pop
insl
rorb
aad
jo
jne
fcoms
test
cs
pop
add
dec
outsb
dec
mov
jnp
jle
rcr
les
mov
sub
jge
mov
insb
paddsw
and
dec
clc
sbb
dec
enter
pushf
cmpsl
fwait
lret
pop
mov
outsb
popf
adc
xchg
lret
loope
out
inc
movsl
xchg
xor
fs
jo
enter
push
dec
insb
add
dec
clc
sub
push
xchg
xor
aaa
sub
loopne
aad
je
push
mov
insb
and
stos
add
cld
out
aam
hlt
xchg
and
dec
push
push
push
icebp
cmp
lahf
xor
mov
jmp
fistpl
hlt
ljmp
aaa
mov
xchg
int3
xor
push
ret
xlat
cwtl
dec
leave
pop
mov
bound
or
movsb
mov
icebp
jmp
aam
ficoml
jmp
push
out
inc
lret
jae
add
outsb
in
jae
jb
hlt
stos
nop
inc
add
pop
sbb
xchg
jp
or
dec
dec
out
mov
cmc
inc
pop
and
ret
daa
sbb
popa
mov
repz
or
sub
add
mov
inc
xchg
xor
out
xor
bound
in
mov
out
mov
or
cli
push
roll
addr16
gs
cli
fisubrl
andl
movsl
jo
pop
stos
daa
loop
outsl
pextrw
xchg
sub
nop
sbbl
pop
pop
or
ficomps
and
cmpsl
lahf
popf
fimull
push
repnz
in
movsl
testb
mov
das
into
mov
and
and
sub
push
not
push
in
sbb
aas
jae
dec
adc
inc
out
push
iret
cs
sbb
and
xor
dec
int3
xor
mov
add
mov
jae
psubb
mov
adc
and
rol
test
adc
inc
fnsave
out
or
popa
inc
stc
cmp
mov
pop
jmp
sub
repnz
es
jo
into
hlt
into
inc
lods
daa
rolb
sti
cmc
or
sub
add
rcrb
push
inc
sbb
loop
lret
push
sbb
inc
cli
pop
repz
inc
add
and
push
andl
sbb
out
push
subl
mov
add
dec
xchg
fistpll
pop
cmp
cli
mov
cmpb
or
push
cmp
test
adc
and
dec
inc
inc
cmp
ds
xchg
inc
fildl
jnp
imul
fisubrl
push
jns
leave
mov
adc
add
mov
fsubl
in
push
cmpsb
xchg
cmp
jge
jmp
fs
cmc
enter
addr16
mov
inc
jbe
mov
xor
push
das
sub
les
adc
aaa
mov
fsin
lods
and
xchg
iret
addr16
dec
jl
jle
dec
inc
adc
popa
push
stos
cmp
fucomip
pop
std
dec
sarb
mov
cmpsl
pop
mov
movsl
push
stos
xchg
pop
xor
aas
adc
push
fnstcw
adc
jbe
adc
popf
lock
call
xchg
gs
push
mov
movsb
jp
test
mov
ss
cli
push
mov
dec
mov
repz
pop
xchg
mov
mov
lds
dec
daa
fiadds
mov
mov
fisubl
gs
sbb
inc
inc
sti
and
dec
arpl
adc
jno
and
mov
aas
inc
outsl
loope
cld
ljmp
mov
sbb
cmp
jo
aas
mov
dec
cmpl
cmp
out
lea
jbe
sub
mov
fdivr
adc
mov
repz
mov
cmp
cmp
idiv
stc
push
lret
enter
jo
sub
jb
mov
into
push
dec
int3
mov
or
jns
xorb
mov
stc
add
or
mov
mov
in
xchg
or
inc
xchg
sbb
cmp
push
cs
adc
push
bound
fisubl
outsl
mov
inc
jle
rcll
mov
int
je
idivl
ret
out
jo
loopne
pop
dec
shrl
xlat
leave
cli
popf
inc
mov
sub
out
mov
cmp
xlat
ficompl
mov
lea
sub
insb
subl
dec
mov
dec
xchg
adc
xor
out
push
push
pop
push
jno
push
loope
sbb
dec
les
fidivrl
jl
xor
imul
pop
inc
mov
pop
jb
lea
scas
testb
or
jmp
fs
sub
or
xlat
and
inc
popf
inc
je
adc
jbe
in
insl
lock
xor
je
mov
xor
sarl
pop
fisttpl
cltd
scas
cmpsb
or
inc
mov
lods
push
pop
pop
xlat
or
pop
adc
add
insb
sub
pop
shrb
leave
nop
or
cmp
adc
out
and
divb
fistl
xchg
movsb
mov
es
vmovntps
out
jbe
ds
adc
cmp
inc
sarl
enter
daa
sub
pop
sahf
push
stc
pop
add
jbe
mov
pop
in
push
movsl
push
xor
xlat
xor
insb
or
xor
mov
mov
mov
out
pop
inc
sub
or
pop
test
cmp
sbb
lock
push
leave
pushf
lret
xlat
paddb
mov
aas
adc
fidivl
add
sti
addb
or
xor
insb
inc
sub
inc
out
mov
fsubs
aad
inc
clc
ret
aas
fisttpll
xchg
movsl
out
add
push
inc
mov
bswap
cmp
xchg
dec
add
inc
cmp
inc
sub
das
in
adc
inc
pop
cwtl
cmp
push
dec
cmp
jp
push
xchg
nopl
lss
ja
ret
jmp
xchg
cli
ret
enter
clts
add
sub
int3
or
adc
dec
mov
mov
nop
lea
mov
daa
sahf
jns
fdivrl
cmp
sub
repnz
cmp
bound
lods
push
or
pop
repz
out
rol
inc
xchg
clc
iret
data16
pop
jg
cltd
mov
into
pop
mov
loope,pt
push
data16
mov
stos
xor
xor
push
inc
call
shr
lock
enter
notb
xor
clc
call
xchg
dec
cmc
adc
addr16
rcrb
sbb
and
xchg
dec
mov
xor
mov
mov
ljmp
test
ss
and
xor
sbb
jle
mov
ret
outsb
aad
adc
int
fisubs
mov
cmp
and
int
jg
mov
inc
fsub
dec
adc
or
xchg
adc
lahf
inc
call
add
es
add
inc
push
or
sbb
stos
adc
in
movb
ja
sbbb
addr16
inc
pop
andb
into
dec
es
jne
les
adc
test
cmpsl
dec
mov
sub
out
testl
or
fnsave
lret
xor
sarl
push
pop
js
insb
pop
sbb
jns
ss
into
push
adcb
sub
test
rorb
sub
mov
pop
stos
and
ja
push
or
test
inc
cs
cmp
mov
push
pushf
pushf
cmp
mov
jle
mov
jbe
roll
repz
mov
dec
mov
incl
out
push
dec
cmp
sti
xchg
ret
ret
inc
inc
mov
mov
xor
xor
testl
dec
je
dec
ret
lcall
and
cmpl
sbb
xor
mov
push
ljmp
lsl
int
mov
mov
adc
stos
jge
cli
int3
testb
icebp
jne
mov
mov
xor
sbb
jbe
fs
movsb
lods
lcall
mov
sub
dec
cmp
push
lahf
mov
or
push
and
xchg
cmc
insl
iret
shrl
fucomip
sbb
cwtl
fdivrl
sbbb
push
cmp
cmp
movsl
or
ljmp
push
inc
jno
mov
outsb
mov
xor
das
mov
stc
adc
sbb
mov
sub
mov
ret
or
aas
mov
xchg
jmp
iret
add
jge
cmp
inc
push
mov
mov
inc
cs
and
bnd
vmread
mov
sbb
dec
dec
call
sbbl
pop
data16
push
dec
mov
repz
pop
xchg
mov
incb
int
fcompl
stc
inc
pop
popl
sbb
xchg
push
imul
insl
inc
or
and
movsl
aam
xor
filds
mov
into
mov
cld
shrb
pop
test
bound
movsb
ds
stc
popa
push
arpl
mov
mov
pop
cmp
and
movsl
and
mov
js
sahf
mov
sub
dec
jg
mov
pop
divb
add
add
js
and
cmp
cmpsl
cltd
int
mov
aad
sti
out
push
sbb
fsubs
dec
fstl
outsb
adc
in
dec
lret
sbb
sub
mov
nop
xor
cmp
or
or
pop
shrb
rcll
jp
js
cltd
cld
fdivrs
outsl
inc
pop
fisttps
adc
gs
loop
sub
insl
ret
aaa
sbb
loop
sbb
lret
push
inc
les
out
cmp
jnp
test
cmc
and
adc
sbb
pop
mov
sub
lahf
gs
and
call
sbb
mov
or
xor
push
or
ret
pusha
push
jae
ret
mov
dec
adc
cmp
dec
or
mov
xchg
mov
sbb
bound
out
push
mov
cld
cmp
pop
inc
bound
pop
add
push
stos
movsb
insb
inc
rorb
pop
pop
mov
jbe
xor
cmp
inc
add
pop
sbb
inc
add
xchg
mov
and
mov
jle
sbbl
dec
test
xchg
push
jb
pop
es
jns
jp
repnz
into
pop
mov
popa
pop
cli
ret
xor
arpl
jns
mov
pop
cmpsl
shlb
pusha
fwait
ror
imull
je
jae
cmp
pop
lcall
outsb
fldenv
or
adc
mov
pop
push
push
imulb
scas
arpl
mov
lret
push
cmpl
adc
mov
insb
mov
cmp
dec
insl
insl
divb
adc
or
movsl
xor
arpl
clc
lock
movsb
negb
shrl
cli
pop
push
adc
mov
pop
sub
xchg
sub
aam
jbe
outsb
sub
mov
ds
inc
fsubr
mov
movsbl
mov
sub
mov
xor
cmp
movl
jne
mov
push
or
mov
add
sbbl
mov
sbbl
mov
mov
adc
mov
mov
adcl
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
push
adcl
mov
mov
movzbl
add
mov
mov
mov
sub
mov
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
mov
add
add
add
add
pusha
inc
add
pusha
xor
add
add
add
inc
push
mov
inc
int3
dec
xchg
dec
push
xchg
inc
cmp
inc
cmp
insb
fs
outsl
data16
jb
imul
push
arpl
jb
push
arpl
jae
add
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
push
mov
mov
mov
push
lea
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
xor
add
push
lea
push
mov
mov
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
mov
mov
movb
mov
movb
mov
movb
mov
movb
mov
mov
movb
push
movb
mov
movb
movl
lea
pop
movzbl
xor
add
mov
inc
dec
jne
movl
lea
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
mov
xor
add
xor
mov
mov
xor
movzwl
add
xor
xor
mov
mov
mov
mov
lea
lea
movl
mov
call
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
lea
push
mov
push
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
scas
sahf
or
pop
insb
add
arpl
sub
nop
cmp
sahf
pushf
mov
lods
mov
mov
js
mov
mov
sbb
test
push
sti
mov
mov
test
mov
lds
mov
mov
mov
mov
outsl
mov
nop
xor
xchg
mov
nop
xor
sub
fldenv
push
add
rolb
inc
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
add
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
