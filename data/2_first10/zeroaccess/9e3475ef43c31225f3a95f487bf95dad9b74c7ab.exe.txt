push
mov
sub
mov
adc
mov
mov
or
mov
sub
push
movl
mov
mov
mov
sbb
mov
and
mov
orl
mov
mov
add
orl
mov
add
mov
jmp
iret
inc
loopne
push
adc
fmuls
jne
dec
pfcmpge
push
pop
xchg
mov
jmp
xlat
sahf
aam
in
mov
adc
ss
data16
mov
dec
inc
movsl
mov
pop
inc
xchg
mov
fdiv
ret
orl
adc
movsb
jge
dec
mov
and
cwtl
clc
pusha
lds
popf
mov
inc
push
mov
cli
imul
loop
push
stos
xor
notb
out
mov
cmp
xor
sub
jae
jp
call
jle
push
push
jl
adc
or
cmp
lret
xor
mov
aam
jne
push
ret
pop
sbb
pop
mov
mov
and
xchg
mov
pop
pop
push
cmp
aad
imul
mov
sub
jecxz
xor
cmp
sbb
rcr
jl
lcall
push
inc
push
lods
sbb
bound
pusha
rcrb
inc
xchg
sbb
or
pop
and
movsb
call
adc
in
ja
lret
sub
push
ret
imul
popw
mov
leave
mov
lods
xor
mov
sub
sub
push
jae
or
addl
and
fs
out
sbb
jmp
mov
orb
jno
es
out
xor
fcmovu
xchg
adcl
imul
pop
enter
lods
jne
jnp
xorl
jbe
push
stos
loopne
mov
lea
inc
jno
sbb
inc
xor
pop
lahf
cli
out
and
out
outsl
loop
cmp
sbb
in
psubusw
or
xchg
or
lret
mov
pushf
mov
cwtl
sbb
nop
shlb
aam
repz
push
push
iret
xchg
out
push
and
or
fisubs
mov
out
sbb
mov
mov
repnz
arpl
xchg
cmp
iret
or
aas
mov
daa
sub
bound
scas
sbb
movsb
arpl
pop
pop
jnp
shrb
lock
cmp
adc
mov
jg
jbe
lret
lahf
das
push
dec
ret
dec
inc
sbb
stos
imul
mov
mov
inc
push
or
leave
inc
mov
mov
sarl
dec
jmp
jno
cmp
jl
addr16
pop
loope
push
dec
mov
addb
popf
iret
dec
or
out
jmp
sbb
dec
mov
aad
das
decb
adc
jbe
pop
pop
cltd
bound
adc
xlat
push
lret
loop
mov
mov
pushf
jp
mov
add
outsl
and
or
jae
or
xchg
fsubs
mov
stos
add
clc
sbb
pop
ss
mov
sub
sbb
lahf
scas
xor
adc
imul
popa
push
leave
lcall
rcrl
divb
push
xlat
pop
fcoms
push
jns
mov
aaa
test
mov
lock
and
adc
mov
shll
mov
imul
sbb
sub
test
enter
lahf
out
test
push
inc
add
cli
sub
sbb
mov
in
shrl
sti
push
enter
fildll
dec
nop
mov
pop
imul
push
dec
in
mov
loope
nop
or
mov
jmp
xlat
lahf
xchg
mov
push
xchg
pop
mov
popf
divl
adc
out
sti
jg
and
test
inc
push
cs
xor
mov
mov
out
jne
pop
test
in
adc
xchg
repnz
cli
add
mov
ss
pop
and
lret
jae
xor
xchg
dec
cmp
fadds
jno
out
fbld
in
jmp
bound
scas
lods
mov
test
and
xor
inc
cmp
dec
add
daa
jnp
imul
and
test
mov
shlb
stc
sbb
mov
mov
mov
adc
add
repnz
je
dec
outsb
repnz
mov
push
ret
push
adc
inc
push
dec
mov
ds
mul
xor
leave
push
shlb
cmp
and
ljmp
cmp
pop
mov
lods
ucomiss
or
pop
pop
sub
inc
jae
mov
es
or
pop
cmp
mov
sarl
jg
ret
xchg
mov
test
sub
fsub
not
sbb
popa
jl
cmp
sti
test
mov
inc
aaa
xor
in
and
mov
xor
pushf
jae
add
fnstenv
mov
subl
rcl
xchg
lahf
fnstcw
aas
mov
sbb
mov
imul
mov
push
mov
into
clc
mov
cwtl
or
cmpl
adc
cmp
lods
mov
inc
and
negl
cmpsb
mov
lret
lret
add
pop
je
pop
dec
enter
nop
mov
je
repnz
dec
fwait
scas
push
aas
mov
rcl
movb
and
cmovle
push
dec
adc
pop
out
mov
in
jne
mov
enter
ficompl
and
cli
int3
xchg
sbb
xor
or
sub
aam
inc
adc
sub
nop
fcomip
lds
xor
mov
mov
imul
leave
push
imul
in
nop
jno
lea
test
cmp
or
daa
std
imul
pushf
shl
dec
sub
dec
cmp
pop
sarb
repz
icebp
std
dec
xchg
push
popl
adc
roll
xlat
sbb
movsl
or
leave
inc
adcb
lods
cwtl
das
or
ljmp
mov
mov
bound
lods
push
mov
or
subl
add
fisubs
push
mov
pop
mov
adc
or
mov
repz
mov
hlt
cmc
jmp
enter
inc
inc
fnsave
mov
or
pushw
test
ret
mov
shrl
pop
dec
jo
mov
xchg
sub
ret
scas
jbe
mov
insl
push
add
xor
mov
and
bound
pop
mov
shlb
mov
outsl
sub
stc
cltd
xchg
jns
lods
int3
and
push
ficomps
movsl
jb
add
ljmp
mull
mov
or
lret
ss
lock
lcall
and
push
popa
inc
add
and
loopne
pop
popf
fsubs
cld
and
in
call
pushf
xchg
ret
arpl
pop
sub
pop
loopne
jecxz
mov
xchg
in
mov
push
push
push
pop
xchg
sbb
mov
shr
and
sbb
sub
andb
inc
test
mov
mov
mov
addl
sub
notl
mov
movl
sbb
add
mov
not
orl
orl
cmpl
movl
mov
jmp
mov
jg
pushl
pushl
call
sbb
sbb
sub
or
orl
lea
adc
mov
or
mov
and
mov
xorl
mov
adc
add
mov
dec
mov
mov
adc
jmp
mov
xor
js
dec
mov
ja
add
enter
aaa
add
push
rclb
lret
push
xchg
lock
and
adc
fwait
outsb
or
push
push
mov
mov
mov
xor
sub
inc
push
cmpsl
cmp
mov
sub
pop
cltd
push
sub
push
and
arpl
mov
push
mov
add
rcl
pop
ljmp
inc
in
and
adc
add
push
and
mov
mov
xor
dec
mov
adc
in
inc
mov
push
loope
add
mov
outsb
sbb
jmp
leave
xchg
jb
xor
xor
pop
out
xor
push
movsb
out
fidivl
pop
in
lds
dec
push
push
jnp
insl
mov
f2xm1
push
aad
pushf
mov
sbb
mov
cmpsl
fisubl
or
mov
xor
jnp
in
pop
xchg
call
data16
daa
mov
cmc
aaa
pop
cmp
nop
jle
xchg
xor
push
adc
inc
fnstsw
addb
test
mov
xchg
mov
sbb
mov
iret
stos
jl
das
jo
inc
jge,pn
push
stos
sbbl
repz
and
out
in
cli
pop
pop
jne
insb
mov
sti
cli
repnz
cmp
repz
gs
sarb
inc
pop
push
push
lret
sbb
mov
xor
xchg
mov
pushw
out
xlat
adc
sbb
out
lret
hlt
add
xchg
and
jbe
push
test
and
cwtl
inc
pop
testl
shl
jecxz
repz
lods
fistl
dec
inc
xor
arpl
sbb
and
lahf
test
sub
push
dec
outsb
loopne
pop
ret
xchg
mov
repz
or
fstl
cwtl
dec
out
aaa
jo
in
jle
in
adc
andl
mov
ffree
setno
lahf
jp
cmp
aas
mov
ljmp
clc
subb
inc
scas
sti
sub
or
popf
mov
dec
int3
fidivs
lods
cmpsl
inc
add
xchg
cmc
xchg
jo
nop
loope
scas
mov
popf
call
inc
jae
icebp
cli
call
enter
aas
aad
push
out
sub
sahf
jnp
inc
std
or
sbb
scas
push
inc
outsl
mov
pop
fimull
mov
lret
mov
inc
out
lcall
enter
lea
loopne
push
adc
lods
lahf
ret
inc
test
lock
sahf
in
adc
dec
aad
and
loop
cltd
ja
cld
insl
lahf
fistps
or
or
cmc
jmp
add
pop
cmp
xorl
sbb
or
and
mov
fsubs
out
jge
and
test
insb
hlt
pop
and
shrb
in
aas
leave
pop
pusha
test
inc
and
ror
push
jne
adc
adc
ja
pop
xorb
dec
imul
mov
mov
aas
add
in
sbb
mov
push
dec
xor
imul
jnp
mov
jb
sbb
in
das
xor
sub
in
sahf
and
or
in
inc
jae
add
jmp
imul
jl
mov
mov
jae
and
fsubrl
cmpsb
repz
mov
xor
lahf
lahf
repnz
es
adc
mov
jg
popf
sub
lea
push
into
fimull
sub
xor
or
or
xchg
xchg
push
arpl
mov
and
aas
imul
movsl
int
dec
or
pop
push
enter
mov
cmp
inc
xor
and
das
pop
insb
xorb
sub
jmp
mov
cli
ljmp
jno
insb
outsl
mov
popf
fnsetpm(287
mov
out
ret
mov
mov
aaa
mov
and
mov
add
in
bound
and
lahf
fbld
sbbl
sub
mov
dec
jno
repz
cwtl
loopne
mov
repz
cmp
mov
mov
rclb
adc
fs
pop
xor
cmp
lock
sub
sbb
and
lcall
fwait
mov
adc
movq
fucomi
dec
je
mov
lods
scas
iret
scas
inc
sbb
int
test
mov
out
pop
dec
inc
mov
mull
mov
push
stos
inc
xchg
jmp
or
pop
movl
into
inc
fists
cmpsb
std
nop
push
jnp
stc
imul
imul
lods
addb
popf
shl
jbe
decl
loopne
cli
jns
or
in
sbb
repnz
andl
push
mov
xor
pop
insl
inc
ss
rorl
inc
out
daa
loopne
xchg
cmovge
dec
mov
xor
lahf
loopne
sub
enter
scas
sub
pushf
xchg
in
rcll
jg
aaa
mov
test
mov
jp
xor
push
adc
sbb
push
ds
shll
stos
mov
dec
stos
fwait
xchg
inc
ljmp
stos
cmp
outsb
dec
xor
add
add
jg
test
movsb
loopne
pmaxub
pop
xchg
cltd
xor
mov
cmpsb
add
out
movsl
arpl
jp
pop
inc
xchg
jle
sub
add
hlt
outsb
in
push
repz
push
popa
lods
or
mov
ret
cmp
pop
addl
sbb
jg
add
mov
jno
push
out
push
mov
jnp
xchg
pop
mov
cmp
sbb
sar
shll
mov
mov
aam
push
jmp
pop
xchg
fsubs
adc
mov
int3
test
sub
xchg
sarl
cld
sub
mov
adc
or
push
fs
shl
lret
push
enterw
xchg
jl
and
imul
ret
inc
ds
pop
mov
cmp
ja
fidivs
pop
xor
cmp
sub
jle
outsl
mov
arpl
mov
in
enter
repz
sub
or
inc
and
inc
dec
pop
xlat
jns
push
sarl
sub
pop
bound
mov
sbb
xchg
in
sahf
jb
add
cmp
dec
test
stos
test
mov
pop
rolb
mov
daa
nop
or
jb
adc
inc
mov
jecxz
push
xlat
push
sub
jno
jg
data16
int3
sbb
or
inc
mov
std
xor
xchg
daa
leave
or
and
mov
hlt
sti
pop
mov
imul
mov
in
xchg
or
es
add
sbbb
add
lods
enter
hlt
adc
add
jmp
jmp
mov
lock
popf
mov
sub
ja
jge
mov
and
push
mov
push
cmp
xorb
aas
daa
cmc
clc
inc
xchg
in
js
add
push
ret
aad
jge
and
js
in
das
fcomi
add
cmp
sbb
hlt
sub
mov
jae
mov
jbe
loope
sub
icebp
scas
xor
push
xchg
xlat
inc
ljmp
pop
adc
int
dec
js
push
mov
cld
adc
imul
pop
add
test
subl
mov
jmp
rcrb
fisttpll
mov
sbb
jo
std
mov
xlat
jb
popf
xor
bound
sub
inc
mov
out
inc
es
mov
xchg
jp
and
xchg
mov
movl
int3
add
xor
jle
or
in
xlat
lods
or
fisubrl
xor
cmpsb
ret
pop
mov
and
sub
mov
fs
aaa
into
aaa
xchg
dec
fildl
xor
es
sub
xchg
std
and
xchg
pop
sbb
pusha
sbb
cmp
sub
inc
jae
jnp
aaa
add
sahf
xchg
sahf
std
or
or
xchg
test
xchg
xchg
push
push
sbb
jg
out
out
xlat
pushf
xor
data16
jo
push
pop
aas
das
jbe
lods
loope
loope
sbb
push
pop
xchg
test
inc
sub
xchg
repz
fisttpl
in
cmpsb
mov
sahf
or
or
dec
insl
push
sbb
insl
jns
rcl
popf
jno
clc
ret
js
enter
mov
clc
movsb
inc
xchg
shll
sbb
aaa
mov
mov
fxch
rclb
cmpl
stc
call
xchg
sarb
xchg
mov
or
push
scas
cmp
xchg
push
dec
pop
inc
and
cmp
js
mov
nop
fstpl
mov
fcoms
pop
dec
fstpl
imul
sbb
mov
into
mov
adc
adc
cmp
add
sbb
mov
jb
push
subb
inc
xor
stc
cmc
call
mov
lahf
ds
lock
clc
dec
add
shl
ja
daa
jae
or
scas
hlt
xor
jne
out
inc
adc
lock
jle
sarl
add
mov
lea
jo
push
jo
cltd
clc
andl
and
out
shlb
ljmp
sbb
sub
jge
jae
or
push
andl
insl
test
rclb
rcll
sbbl
movsl
push
ret
lahf
dec
jnp
push
cmp
sbb
movsl
mov
adc
insl
adc
pop
adc
mov
and
sarb
pop
cmp
sbb
cmp
rdtsc
std
dec
adc
fcompl
mov
bound
push
outsl
lods
lcall
dec
push
inc
add
xchg
ret
scas
mov
mov
cs
xlat
rol
mov
scas
add
mov
stos
in
xchg
icebp
mov
push
testl
mov
out
das
and
das
adcl
addl
pop
lods
add
subb
int3
adc
xchg
arpl
loop
icebp
out
call
pop
xor
sbb
pop
outsl
xchg
and
pop
or
fwait
and
in
push
test
lahf
fiadds
and
jp
or
jb
add
or
mov
jne
pop
data16
dec
jecxz
cmc
jmp
mov
inc
adc
mov
jmp
sbb
sub
add
and
rolb
scas
shrb
mov
pop
dec
dec
mov
cmpsb
repz
rorl
mov
jge
imulb
xor
in
ss
mov
mov
out
sub
mov
aad
or
add
mov
les
push
test
jns
loopne
fstpt
std
pusha
inc
jae
or
adc
pop
jp
out
adcb
outsb
popw
and
popa
or
adc
mov
hlt
sub
xor
cmp
out
sbb
sub
addb
nop
mov
or
jg
lods
rol
push
test
xchg
sbb
fwait
out
jnp
cmp
xor
pusha
in
sub
je
cwtl
incb
lcall
mov
std
out
aam
pop
xchg
push
cmpsb
mov
xchg
testb
lods
pop
ja
cmp
loopne
jne
mov
inc
mov
push
ljmp
jecxz
inc
mov
pushf
dec
mov
arpl
rcrl
cs
leave
ret
icebp
mov
pop
adc
test
add
dec
cltd
mov
test
andb
pop
fnstsw
shll
int3
mov
popa
sbbb
or
and
jle
pusha
mov
cmp
cmp
jnp
sti
aam
inc
jne
or
sti
and
in
jbe
pop
jecxz
les
leave
dec
ret
jmp
or
cmp
out
dec
aas
pop
rorb
dec
popf
or
enter
loopne
cmp
mov
repz
andb
push
adc
pop
mov
lds
mov
xchg
cmp
and
stc
ljmp
jbe
and
pop
iret
xchg
cmp
push
or
cmp
and
enter
aas
xchg
inc
iret
sub
push
fstl
xlat
fdivrs
push
movsl
pusha
int3
gs
mov
pop
shll
mov
ret
cmp
add
test
push
pop
movsb
mov
and
into
andl
ljmp
add
xlat
mov
and
daa
xor
cli
pop
cltd
clc
xor
test
leave
jmp
mov
inc
flds
xor
push
fisubl
mov
cld
inc
xchg
inc
loopne
jno
mov
jg
rclb
insl
fs
xlat
mov
fs
push
xor
shr
fs
inc
popf
insl
scas
lods
jl
les
or
roll
push
xorl
or
test
dec
dec
outsl
xor
dec
stos
popf
filds
and
cmc
inc
sbb
leave
sbb
sbb
jne
xlat
ja
shr
xorb
pushf
sbb
lea
sub
xor
sbb
lods
ret
out
mov
mov
test
mov
packuswb
adc
add
add
mov
cmp
mov
dec
xor
sbb
xchg
mov
push
lock
dec
push
scas
ljmp
sbb
ljmp
out
pop
loopne
push
push
frstor
cmc
jmp
inc
call
rolb
test
xlat
pop
insl
or
add
cmpsl
lods
imul
jo
fs
cmp
mov
andl
xor
adcl
xor
or
cmpl
movl
movl
movl
jmp
movl
not
jg
pushl
push
push
push
pushl
push
pushl
call
sub
xorl
andl
andl
addl
addl
adcl
movzbl
adc
jmp
sti
loopne
stos
dec
or
xor
mov
out
ja
out
push
xchg
cli
add
xchg
cmp
push
cmp
xchg
stc
je
cmpsb
jmp
mov
mov
jbe
inc
test
scas
faddp
add
push
adc
jno
pop
mov
mov
into
insl
adc
lods
divl
cmpsl
jp
loopne
xor
mov
jns
loopne
inc
add
jp
inc
pusha
or
sahf
sbb
dec
sbb
sti
jno
jo
fsts
push
sub
mov
mov
out
add
inc
ret
nop
clts
test
addl
mov
loopne
out
mov
pmaxsw
add
ficoms
mov
stos
xor
mov
jb
cmpsb
pop
jae
and
inc
mov
mov
dec
bnd
dec
add
hlt
and
lahf
std
and
push
push
in
push
jp
test
ja
inc
mov
xchg
push
ss
pushf
mov
and
mov
pusha
in
cli
lcall
cmc
sti
ds
movsb
loop
pop
fcompl
mov
test
arpl
mov
in
out
xchg
fwait
outsl
aas
add
in
insb
jmp
dec
jge
sbb
loopne
icebp
mov
insl
xchg
and
repz
or
cwtl
fisubrl
jmp
jne
mov
push
clc
xor
pop
ficompl
mov
pushf
lret
fldt
fstl
inc
lods
test
mov
hlt
ret
inc
mov
pop
jns
push
cmp
mov
repz
inc
test
push
dec
mov
imul
mov
and
leave
popa
ljmp
clc
push
gs
and
cs
in
dec
xchg
xchg
in
inc
stc
pop
xor
push
or
inc
sbb
movsb
dec
out
in
dec
mov
sarl
aad
mov
stos
test
add
pop
add
dec
js
xor
mov
adc
movsl
iret
or
mov
icebp
leave
dec
test
insb
sahf
nop
jecxz
cmp
lods
jb
dec
cmpsb
lds
push
jnp
sbb
cmpsb
pop
jno
xchg
addr16
repnz
pop
pop
into
xlat
pop
xchg
push
cmc
test
sub
mov
mov
lds
mov
call
mov
inc
xchg
mov
push
es
aas
aam
mov
outsl
pop
dec
pop
push
adc
sub
xchg
rcr
adc
xchg
jb
jecxz
jbe
push
test
pop
andl
mov
lcall
jns
mov
jns
std
popa
ss
out
int3
dec
adcb
shr
std
add
adc
sbb
pushf
xor
lods
je
aas
repz
jl
and
lods
imul
rorl
imul
adc
push
add
fs
pop
lret
enter
add
pop
sub
adc
rcll
adc
cmp
mov
nop
aad
test
fsubrs
outsl
push
out
mov
push
scas
add
lea
shll
adc
shlb
testb
mov
rcl
sar
lods
cmpsl
dec
imull
push
fistpl
or
pusha
addb
gs
mov
push
imul
jbe
and
mov
pop
mov
js
adc
andb
xor
repnz
fwait
inc
push
pop
and
jge
popf
mov
into
stos
adc
cmpl
push
mov
cmp
xor
jl
and
or
push
push
aam
jo
inc
xchg
push
or
and
pop
sbb
mov
in
or
sbbl
insl
xchg
jl
ret
incb
or
push
jg
cmpsb
inc
push
xchg
xchg
sbb
or
add
mov
fwait
into
mov
and
mov
dec
cmpsl
cmp
dec
mov
pop
sbb
jb
sub
mov
and
ret
and
sub
or
cltd
enter
rol
cmp
rol
inc
imul
in
sbb
cmp
cltd
sub
mov
push
decl
inc
das
cli
xor
enter
mov
pop
jo
pushf
aas
and
arpl
dec
sub
sbb
lods
xchg
jmp
loopne
ds
pusha
pop
pop
and
pusha
loopne
jae
mov
arpl
insb
addb
jne
aas
jmp
mov
and
add
cmpsl
cmp
cmpb
and
adc
pop
in
push
loop
loope
or
cmp
stc
or
cmp
bound
cmpb
xor
loop
push
popa
pop
jne
add
dec
je
jg
mov
into
shl
imul
jge
popf
push
push
xchg
cmp
out
mov
loop
adc
mov
cmp
xorb
ficomps
pop
push
pushf
add
or
push
aas
data16
and
cmpsb
jnp
loopne
push
rolb
xchg
pop
shll
insb
cmp
cld
out
into
incl
push
cmp
push
push
popf
lods
inc
mov
insl
cmpsb
xchg
inc
xor
adc
and
jbe
cltd
sbb
ss
adc
sbb
imul
fisubrl
shlb
lcall
ss
ror
jae
mov
xchg
mov
ds
mov
dec
sahf
movsl
movsb
xor
repnz
pop
mov
cmc
jge
mov
out
lods
fisttpll
cmp
lahf
add
call
mov
popa
or
push
dec
lret
fsubrl
or
mov
test
sbb
push
xchg
insl
or
push
aas
jl
inc
sub
mov
or
scas
mov
stos
daa
popa
rcr
lods
mov
jbe
cmp
pop
cmp
or
push
cli
push
or
add
mov
fnstsw
movsl
mov
lret
sub
js
loopne
pop
inc
sub
sbb
ja
enter
cmp
push
mov
mov
repz
cwtl
or
fisttpl
adc
lcall
daa
aam
sub
mov
or
cmc
mov
push
dec
cltd
mov
xchg
jl
das
sbb
pop
xorb
cmp
pop
out
lock
call
jae
loop
mov
iret
ret
int3
ljmp
xor
add
jge
ficoms
jge
sahf
cmp
and
dec
pop
push
add
pusha
jnp
into
xcrypt-ofb
cmpsl
insl
pop
adc
dec
fadd
fisubrl
scas
je
aas
sub
jo
stos
push
add
cmp
es
in
test
sbb
repnz
and
test
hlt
xor
fiadds
push
les
adc
movl
movl
sub
movl
movl
and
movl
movl
movl
xor
or
adc
movl
cmpl
movl
mov
jmp
not
jl
push
pushl
pushl
push
call
add
sbbl
add
sbbl
xorl
sbbl
notl
or
movl
addl
movl
movl
movl
mov
or
mov
movl
dec
movl
movl
cmpl
movl
movl
movl
movl
jmp
mov
jge
push
call
movl
orl
orl
add
xorl
xorl
xorl
and
movl
cmpl
movl
mov
jmp
mov
mov
jb
push
pushl
push
push
pushl
push
pushl
push
push
pushl
pushl
call
orl
sbbl
adc
addl
movl
sbbl
movl
add
movl
jmp
and
jnp
sub
mov
ja
push
push
mov
pop
test
push
pop
mov
add
mov
rorb
negb
cmc
cmc
ficomps
dec
cmp
in
sbb
pop
mov
in
aam
adc
popa
daa
aam
jnp
pop
fcomip
les
inc
sti
inc
inc
cli
sarl
iret
scas
fs
movl
mov
pop
ss
std
mov
jo
and
dec
push
les
repnz
loopne
pop
lret
fdivs
clc
xor
add
mov
jl
xchg
cmp
call
inc
mov
mov
pop
fstpt
inc
push
addl
jb
ret
jge
fisubrs
dec
mov
xor
dec
add
jo
cmpsb
dec
fcmovne
gs
adc
rol
mov
jbe
pop
loopne
ret
into
stos
xor
clc
leave
stc
xchg
roll
sbb
clc
xchg
fs
jge
icebp
mov
or
lds
out
adc
pop
pop
jge
cmp
nop
mov
push
jecxz
xor
daa
cmp
cwtl
sbb
push
or
aam
das
xchg
stc
ret
lret
sti
adc
mov
mov
in
mov
inc
sbb
sbbl
xorb
ds
shl
xchg
mov
and
iret
cmp
ret
dec
inc
lods
xlat
cmp
test
cltd
sub
ds
cmp
jno
xchg
rcl
popa
xchg
jnp
dec
cmp
xchg
xchg
mov
and
imul
sub
cwtl
sub
pop
scas
mov
jns
push
xor
push
rcrl
fsubr
roll
mov
shlb
fwait
cmp
pop
add
dec
xchg
cmc
in
fnstenv
add
xor
xchg
sbb
lea
aam
popf
dec
push
mov
sbb
lret
add
cwtl
jne
inc
loope
cld
sub
out
xchg
ret
mov
ror
xor
jmp
iret
pop
lahf
push
dec
adc
lea
out
pop
mov
cld
mov
mov
test
or
insl
or
into
in
ret
mov
jbe
daa
mov
lock
and
inc
add
negb
mov
shll
sub
adc
loope
rolb
pushf
cs
adc
adc
adc
and
push
xchg
xchg
push
jo
push
rorb
fldcw
fcmovnu
pop
je
repnz
xor
mov
mov
xchg
push
push
dec
popa
fbstp
adc
sahf
push
and
sub
pushf
add
jo
push
lahf
stos
jg
es
push
out
scas
jb,pt
mov
aaa
jno
jnp
sbb
pop
jns
into
xor
outsb
ja
or
int3
xchg
dec
jne
ss
and
or
in
mov
int
imul
mov
adcb
stos
aas
pushf
sbb
push
bound
cwtl
inc
push
and
dec
arpl
push
fdiv
jmp
insb
scas
mov
loope
andps
popf
das
cs
outsb
dec
repz
stos
jecxz
adc
push
ficoms
and
imul
add
arpl
or
stc
sub
negl
std
adcb
mov
and
jno
lahf
das
xor
push
push
jle
clc
xchg
xchg
xor
and
fmull
cmp
mov
pusha
push
daa
ds
ret
ret
mov
movsl
sbb
cli
pop
mov
fdivrp
rcrb
fimuls
mov
js
fstps
xchg
ret
sbb
xchg
dec
push
out
dec
mov
loop
addl
and
stos
std
insb
mov
imul
xchg
push
cld
xor
mov
jbe
add
test
add
adc
or
sub
inc
cmc
lods
ss
pop
loope
aam
add
inc
mov
fwait
adc
pop
sbb
mov
pop
mov
add
sahf
pop
ret
dec
mov
jne
xchg
mov
jge
dec
push
aaa
xchg
or
inc
pop
pop
shll
in
stc
add
scas
fnstsw
push
inc
mov
inc
jnp
incb
dec
lcall
leave
aas
sub
xlat
es
dec
lret
outsb
outsl
mov
or
cmpsl
adc
cmp
test
icebp
out
mov
cltd
shl
mov
mov
or
jg
bound
loop
nop
in
mov
shr
negb
cmpsl
in
into
push
pop
pushf
cli
sub
call
sub
das
adc
stc
das
aam
stos
sub
mov
ret
mov
in
nop
imul
xor
scas
sbb
shrb
cwtl
mull
xchg
in
add
jecxz
push
cmp
ret
mov
fadds
mov
scas
call
and
xor
jne
mov
lret
fnstenv
adcb
dec
dec
sarb
mov
xchg
aad
dec
aas
jno
cmc
fs
dec
pop
into
cmpsb
mov
jmp
loop
cmp
and
inc
loope
push
pop
gs
adc
fdiv
pop
ljmp
out
dec
cli
cs
mov
mov
dec
adc
aam
lods
mov
xchg
lcall
sahf
aaa
cmp
sub
pop
lods
push
pop
insb
xchg
ljmp
repz
mov
push
mov
int3
xor
cli
add
mov
jp
xor
dec
lods
and
xor
or
add
ret
hlt
jae
mov
xor
ja
popa
sbb
dec
aaa
xor
push
cmp
test
and
mov
inc
xor
mov
icebp
adc
loope
movsb
sub
stos
nop
jae
dec
lods
push
int3
mov
jnp
and
es
xor
push
and
jns
pop
add
add
lret
imull
xchg
popf
xor
adc
mov
aaa
jbe
sbb
arpl
xchg
dec
push
cltd
adc
aam
jle
xlat
xor
push
test
pop
or
mov
cmp
xor
sub
add
mov
incl
xchg
fwait
testl
adc
lahf
shlb
inc
out
pop
add
adc
xor
jge
gs
scas
and
push
lock
adc
jo
adc
inc
push
mov
adc
mov
mov
lret
fcomps
cmp
test
insl
ljmp
inc
lock
xor
inc
sbb
adc
push
cmpsb
dec
test
cmpsl
jmp
mov
push
fbld
jmp
or
cmc
popaw
fwait
adc
sbb
out
mov
or
rcrl
es
push
and
adc
mov
mov
lcall
imul
sbb
pop
sbb
or
add
int3
enter
idivb
leave
ffree
inc
aam
push
add
inc
movl
xorl
movl
mov
xor
movl
not
movl
mov
addl
jmp
in
outsl
dec
gs
notb
inc
test
cmpsl
les
ja
shl
sub
inc
sub
and
xor
add
mov
jae
out
sarb
roll
es
push
mov
and
xchg
pop
arpl
jle
jbe
out
mov
xchg
adc
or
nop
aad
mov
sbb
cmpsl
jae
test
and
sub
or
repnz
ret
mov
sbb
push
cmp
adc
mov
xchg
mov
dec
and
pop
push
les
sbb
jmp
mov
mov
pop
fdiv
aad
nop
outsb
mov
inc
out
mov
sub
cmp
ds
repz
xor
add
add
sbb
xor
test
subb
fmuls
add
or
xchg
mov
mov
fwait
les
fldenv
push
lahf
or
mov
stc
push
mov
push
fidivs
das
negb
int3
push
xchg
aam
adc
scas
pop
test
movsb
out
sahf
mov
enter
push
xlat
dec
push
mov
mov
ret
xchg
inc
and
mov
pop
add
fiaddl
dec
or
bound
daa
xchg
mov
adc
je
mov
mov
push
dec
stos
dec
jle
nop
xchg
fisubrs
movsb
stc
xor
sahf
cmp
cmp
pop
cmp
mulb
mov
push
push
push
lock
inc
mov
cmp
ss
sarb
jbe
mov
jbe
ss
aaa
mov
and
roll
push
scas
push
push
pop
push
xchg
mov
imul
add
ljmp
sub
hlt
sub
push
xor
mov
cli
jo
or
in
xlat
mov
movsl
scas
imul
mov
inc
sbb
into
jno
imul
rclb
mov
mov
inc
xorb
movsb
mov
mov
cmp
shlb
leave
mov
jp
sbb
pop
cwtl
ficoms
jge
mov
and
push
pop
rorl
cmp
pop
xlat
mov
or
inc
lods
insl
or
adc
cltd
std
jns,pt
push
cmp
mov
sbbl
or
push
dec
and
mov
mov
push
les
es
cmc
adc
mov
out
cmp
mov
mov
mov
dec
or
out
stos
lret
add
sbb
jmp
xchg
or
in
shll
lcall
mov
lods
mov
or
stos
xor
cli
xor
movsl
push
jp
mov
paddsw
jl
lret
xor
aas
ja
sub
or
cld
sti
cs
lods
pop
jo
sub
inc
inc
jnp
inc
push
mov
sub
fidivrl
push
sbb
in
mov
daa
mov
bound
cmp
pop
push
insl
adc
jbe
adc
sub
test
call
stc
dec
es
adc
fldt
ret
cmp
lcall
mov
fs
cwtl
push
cmpsb
rclb
mov
push
jbe
jecxz
push
outsl
mov
mov
inc
add
pop
faddl
mov
dec
mov
movsb
jbe
arpl
cmpsl
lcall
pusha
mov
sub
test
in
adc
nop
rorb
pushf
xchg
movsl
scas
mov
sbb
push
sub
jae
sbb
jo
dec
je
xchg
xor
in
stc
pop
cmpsb
mov
fldl
cltd
stc
push
out
shl
xchg
add
fmuls
sti
fstpt
daa
out
jo
repnz
inc
lock
hlt
xchg
add
push
mov
loopne
mov
dec
sbb
sti
bound
cli
out
sahf
rcrl
cmp
xchg
mov
or
movsb
fbstp
sahf
and
int
xchg
cmp
mov
or
notb
rcrb
mov
clc
xor
data16
jp
xchg
aad
mov
fs
loope
aaa
aas
lds
nop
push
cmp
repnz
stos
sahf
push
jmp
mov
push
insb
pop
mov
test
sahf
cld
jmp
popf
mov
cmp
insb
in
or
ficoml
orb
add
sbb
cli
xchg
movsl
mov
jecxz
loope
popa
mov
popa
pop
xor
divb
pop
sbb
push
fsubrl
dec
aaa
jns
incl
scas
push
outsl
fists
and
dec
cmpl
stc
mov
xchg
xor
jecxz
jmp
je
push
fildl
or
and
jnp
orb
mov
inc
add
push
sbb
fs
cmp
rcrb
xchg
insl
push
aaa
icebp
sahf
int3
inc
lods
or
xor
xor
lock
cltd
into
jo
in
pop
std
mov
xor
cmc
inc
pop
pop
jnp
pop
ljmp
cmpsb
sar
in
loope
pop
in
in
pusha
fwait
push
mov
cli
jmp
fmull
sub
adc
repnz
or
jecxz
adc
sbb
jnp
jecxz
jp
jmp
fisubrl
push
aad
adcl
in
adc
push
cmp
jbe
lods
add
cmp
sub
cmpl
les
stc
lret
inc
lret
cmp
dec
xor
adc
ret
xchg
push
inc
cmpsb
cmp
neg
push
shll
mov
lret
scas
push
addr16
les
orb
xor
jg
push
or
jl
lods
cltd
dec
or
mov
shll
mov
xor
outsb
jno
in
lds
in
lds
and
js
mov
js
cli
call
and
sbb
inc
imul
add
push
hlt
xchg
inc
pushf
adc
xchg
xchg
cmpsb
inc
inc
push
sub
pop
pop
mov
out
push
mov
cmp
cld
push
push
push
pop
out
out
push
and
dec
sarb
or
cld
xor
testl
mov
dec
xchg
sarl
jmp
adc
add
and
gs
cmp
jl
mov
inc
jmp
imul
movsb
xchg
xor
icebp
icebp
xchg
pushf
pop
cmpl
je
ret
xchg
push
out
cmc
jl
mov
ret
cmp
test
mov
dec
add
subl
sbb
add
jbe
negb
pop
or
jle
inc
jmp
push
mov
lods
add
sub
insb
adc
sub
fcomps
cmp
push
pop
pop
xor
and
in
jae
push
jl
lods
push
add
jns
clc
wrmsr
add
push
movsb
mov
out
cmc
jns
adc
pop
cmp
clc
push
pop
mov
fcomi
cs
mov
orl
push
adcl
push
andl
push
push
adcl
call
adc
mov
subl
mov
xor
mov
sub
mov
movl
jmp
mov
daa
xchg
gs
or
mov
je
js
mov
ja
js
mov
jno
push
fwait
leave
mov
lret
adc
lea
sahf
sbb
popf
cmp
mov
ja
enter
jmp
dec
jle
dec
jns
rclb
mov
fsubs
popa
repz
mov
jae
jmp
and
mov
cmc
xchg
cmp
and
sub
pop
mov
loopne
dec
repz
sub
movsb
push
lret
inc
jnp
cs
adc
imul
hlt
dec
xchg
addr16
fstpl
dec
xchg
scas
dec
fnstsw
sbb
sahf
das
add
mov
mov
inc
clc
mov
in
in
out
mov
cmp
pop
sbb
mov
fsts
sub
lods
fs
stc
push
sub
push
push
aad
mov
lds
arpl
mov
jmp
hlt
and
cmpsl
decl
cmpb
jae
add
gs
jne
xorl
in
push
push
ficoml
ret
es
cmpsb
jge
xor
sbb
push
ret
scas
push
xchg
sub
jnp
int3
das
leave
mov
cmpsb
loopne
push
in
movsb
dec
cmpsl
pop
mov
pop
cltd
inc
sub
cmp
mov
xchg
leave
lods
int
add
adc
sahf
lret
filds
nop
pop
aad
loop
out
sar
scas
movsl
in
cwtl
movsl
stos
push
mov
fistps
or
push
nop
das
and
mov
mov
icebp
fnstcw
pop
stos
jmp
das
pushf
mov
gs
inc
adc
inc
push
adc
lods
mov
add
and
jecxz
or
lods
sbb
stc
adc
int
ja
mov
push
in
push
call
push
addl
addl
sbb
push
sub
repnz
xor
fs
mov
lods
cmpsl
addl
xchg
pop
ret
ss
jle
mov
xor
adcb
xchg
jae
bound
xor
add
mov
leave
loope
rcrb
cli
pop
sbb
mov
sub
ds
mov
jae
sbb
and
jge
cmpsb
lock
fwait
popa
mov
inc
out
ja
adc
loope
jne
jmp
outsl
or
xchg
fwait
insl
mov
aaa
or
pusha
xor
fstps
jbe
cld
ja
jns
sub
pop
and
xor
add
or
and
sbb
mov
inc
or
daa
pop
sbb
push
cwtl
add
in
xor
mov
outsl
xor
xor
xor
xchg
stos
xchg
sub
push
mov
bound
ret
test
lods
pop
sahf
xchg
jne
push
outsb
repz
jae
add
inc
and
and
inc
out
outsb
dec
push
push
dec
insl
or
and
movsb
xor
mov
inc
sbbb
inc
call
repz
inc
sarl
insb
aad
inc
divb
xor
out
pop
inc
shl
mov
lret
out
lds
sbb
ljmp
aaa
push
or
fdivrl
jns
fs
imul
loope
test
pushf
jmp
cld
mov
fcmovne
fisubrl
scas
pusha
xor
out
outsb
mov
lret
adc
push
popa
adc
fldt
lret
sbb
xchg
and
or
addr16
cmc
arpl
dec
mov
pop
lods
rcll
bound
add
movsb
mov
cmp
call
inc
xlat
push
xchg
cmp
lds
scas
or
and
cltd
and
inc
or
mov
mov
xchg
gs
das
mov
pop
dec
sub
vaddpd
cmp
sbb
aas
mov
clc
shl
cmp
mov
adc
ret
xorl
adc
cmp
idivl
leave
mov
adc
lods
or
jno
xor
jne
outsl
imul
jge
xor
andb
test
push
push
sahf
cwtl
jns
pop
outsb
mov
pusha
jne
adc
lods
push
inc
aam
imul
push
out
stos
or
xchg
inc
push
push
mov
mov
rcll
stos
push
pop
outsl
sahf
fsubl
bound
sub
popf
sbb
fadd
ret
lods
mov
cmovl
popa
and
add
jne
push
outsl
stos
cmpsb
inc
pop
jbe
pop
pop
push
push
cmc
mulb
adcb
shll
inc
les
setb
shrl
les
negb
jge
dec
sarb
lahf
ds
fcomip
enter
push
cli
fcoms
inc
push
sti
imul
daa
rcr
dec
mov
enter
and
movsb
lea
xor
lock
dec
add
je
shl
mov
xor
xor
mov
rcrl
jle
mov
lcall
mov
sbb
xchg
into
inc
dec
hlt
lret
out
sbb
sbb
loop
push
and
ret
outsb
push
mov
add
cltd
inc
dec
icebp
cmp
clc
adc
xchg
in
push
scas
push
int3
add
lds
or
arpl
or
pop
dec
mov
add
and
mov
out
icebp
and
popa
scas
sub
add
inc
mov
sub
sbb
jle
pop
lret
int
out
outsl
fstpl
mov
xchg
shlb
pop
out
dec
in
xchg
out
loope
mov
es
mov
xchg
adc
xor
dec
add
adc
stos
xor
push
or
xchg
shll
mov
or
jecxz
add
das
xchg
jmp
adc
cli
stc
mov
aaa
sti
push
push
add
mov
mov
xchg
ret
out
arpl
das
push
in
test
jmp
adc
testb
outsb
stos
in
cmpb
stc
adc
out
cltd
ja
push
cmp
cwtl
inc
rolb
ficompl
shlb
scas
test
stc
cmp
aaa
xchg
xor
sub
push
fildl
or
push
and
pop
push
mov
or
mov
adc
sbb
test
test
mov
lock
pop
pop
btc
mov
push
push
inc
push
sahf
mov
sub
arpl
leave
jp
jl
push
arpl
popf
out
or
xchg
out
into
popa
lea
hlt
and
xchg
add
ds
sbb
cli
popf
shll
cmp
xor
out
mov
ss
leavew
mull
fists
outsl
test
cwtl
dec
or
fs
test
into
ret
inc
outsb
adc
bound
mov
cmp
and
jle
shll
jb
and
dec
jmp
hlt
pop
adc
xorl
cli
pop
inc
rcll
jo
mov
test
pop
cld
ja
sub
imul
mov
imulb
stos
push
cld
pop
in
xor
repnz
ret
ret
cwtl
xchg
subl
sub
mov
adcl
lea
mov
mov
or
subl
and
mov
or
adcl
xor
movl
cmp
movl
jne
mov
and
mov
shrd
adcl
shr
adc
mov
mov
orl
shl
xor
andl
jmp
sub
sub
sub
adc
xchg
stc
enter
movsb
ja
repz
stc
ret
out
jp
push
jge
add
xchg
mov
mov
aam
repz
decb
das
mov
lds
cmp
mov
pop
loope
pop
jmp
aad
or
aas
sbb
mov
push
jo
std
daa
imul
push
or
or
cmc
xor
out
fbstp
stos
xor
orb
shrl
push
out
cmp
mov
daa
dec
push
jns
or
fisubl
jl
mov
loop
sar
push
mov
sarb
xchg
flds
cmp
inc
adc
push
incl
push
sub
lock
xchg
sbb
sbb
mov
call
mov
ja
push
mov
xor
addr16
js
dec
aad
cltd
sub
adc
inc
pop
push
hlt
cmp
cli
adc
push
pop
rcr
pusha
cmp
in
jb,pn
and
inc
or
cmc
pop
push
or
xchg
xchg
inc
fwait
cmp
cmp
ficomps
subb
repz
movsb
in
ljmp
dec
aam
and
mov
sti
or
je
xchg
dec
fidivrl
int
ja
les
mov
sub
jl
cld
lcall
repz
push
dec
iret
sub
sub
rcrl
jecxz
addr16
int3
mov
ds
stos
adc
pop
mov
and
fst
imul
shll
jmp
test
mov
mov
push
mov
addl
jmp
repnz
scas
shrl
lods
cmp
push
cli
adc
add
push
push
dec
mov
or
test
ss
mov
mulb
mov
push
sar
sub
pop
inc
fwait
xchg
mov
das
sub
lock
push
cmc
lret
sub
fsubl
pop
pop
pop
sbb
xchg
xor
ret
xor
decb
inc
pop
mov
sti
xor
mov
ret
scas
dec
mov
prefetch
inc
lds
add
aad
aas
fwait
pushf
xor
sub
mov
stc
push
dec
in
ja
cmpsl
pop
cmp
mov
xchg
insb
xchg
pop
pop
lcall
lock
jle
jbe
add
dec
push
mov
xchg
iret
pop
sub
or
lahf
xchg
mov
cmp
jmp
push
addr16
out
ret
inc
mov
pop
cmp
and
dec
lcall
loop
jns
data16
fisubrl
push
mov
loope,pt
je
dec
push
mov
aad
and
int3
inc
or
fs
loope
mov
mov
insl
out
adcl
ds
aaa
stos
jl
lahf
mov
xor
ficomps
cmp
mov
dec
push
pop
cli
mov
loopne
inc
cld
cltd
insl
xor
add
jge
data16
lret
or
orb
sbb
sub
bnd
sahf
in
dec
rol
sbb
enter
subl
push
daa
out
sub
jno
push
jnp
cmp
add
notl
xchg
sbb
adc
mov
test
pop
or
repz
mov
repz
loop
jne
loope
mov
jns
cld
andb
lods
mov
icebp
scas
pop
shlb
sti
mov
es
xchg
out
fists
arpl
pop
cmp
out
jle
mov
sub
jmp
mov
inc
add
loopne
push
dec
push
or
shl
cli
push
dec
pop
cwtl
test
or
sub
pop
mov
out
inc
xlat
pop
imulb
adc
fs
fsubrl
cmpsl
and
movsl
ss
ds
or
dec
adc
fs
add
mov
xchg
in
hlt
xchg
dec
and
pop
mov
mov
pop
movsl
fdivl
dec
sbb
nop
in
test
mov
fimuls
or
js
mov
cmp
sub
sahf
mov
xlat
ss
dec
fwait
jmp
neg
cli
lds
sti
and
mov
mov
add
xor
test
js
ja
xchg
js
xchg
mov
pusha
mov
fldcw
add
lea
mov
addr16
lock
fwait
cmc
mov
jo
mov
test
jnp
mov
daa
pop
mov
dec
hlt
jae
roll
xchg
in
test
or
dec
mov
int
add
and
js
cmp
daa
icebp
sbbl
int
push
push
mov
pop
fmul
or
cs
jp
jmp
scas
cmp
hlt
add
mov
psubsb
pusha
xchg
jb
hlt
js
dec
mov
jno
adc
adc
push
jl
xor
lock
sub
loope
pop
sarl
add
scas
lods
mov
pop
xor
loopne
adcb
lods
pop
or
push
mov
clc
pop
lock
daa
jp
je
cltd
push
push
dec
addb
adc
sar
adc
mov
call
leave
ds
xchg
in
icebp
and
mov
sbb
sub
jge
sahf
push
xor
jmp
xor
lcall
push
mov
fstl
push
jecxz
out
mov
add
mov
push
mov
loop
cmpsb
daa
lods
gs
insl
cmp
inc
inc
iret
pop
ret
dec
les
dec
loope
jbe
scas
ss
aam
xchg
add
mov
cmc
pop
test
fwait
insb
xchg
in
push
in
fnstenv
pop
xchg
xchg
mov
xor
push
fsubrl
and
sahf
xor
scas
adc
and
xor
filds
mov
and
add
ds
pop
movb
add
adc
stos
adc
sbb
xchg
and
inc
shll
pop
mov
mov
xor
ljmp
push
ret
jle
jecxz
cmp
dec
xchg
imul
mov
and
dec
movsl
int3
clc
xlat
push
mov
push
subl
es
lods
dec
cmp
mov
out
push
add
push
lods
lret
ja
push
xor
add
cmp
sbb
scas
and
jno
in
and
jl
int
sub
inc
mov
xchg
mov
fs
sbb
or
scas
dec
int
pushf
adc
dec
out
jne
stc
shlb
xchg
shr
cmc
adc
out
lods
lea
stc
and
xor
pop
add
dec
sub
mov
call
dec
test
jp
or
and
adc
mov
xlat
jge
mov
ret
sbb
shrl
push
loop
sbb
sbb
imul
jne
rorb
mov
movl
cmp
jne
notl
mov
mov
xor
cmpl
mov
movl
mov
jmp
mov
movl
jl
push
call
xor
or
movl
movzbl
xor
and
mov
xor
mov
xorl
mov
jmp
daa
mov
or
adc
lcall
add
std
mov
sbb
xor
inc
test
test
adc
stos
pop
lock
lods
out
and
add
roll
mov
adc
popa
mov
imul
dec
into
ja
aam
and
scas
out
cmp
outsb
imul
push
dec
cli
jp
sub
jnp
mov
mov
mov
mov
pop
fistl
fucomip
popf
into
std
pop
sub
dec
sbb
fsubl
sbb
push
add
sbb
mov
and
xchg
add
jl
dec
and
mov
iret
shl
push
mov
sbb
cmp
lods
jmp
repnz
mov
fmull
daa
mov
and
mov
repnz
es
cmp
add
and
repnz
sti
pop
sahf
add
cwtl
sbb
fsub
and
addr16
aaa
jnp
cmc
inc
push
dec
mov
inc
rcll
lret
sarb
inc
adc
cmp
js
xchg
sarl
xor
xchg
mov
mov
insb
add
push
lock
sub
and
enter
test
int3
dec
out
jp
push
xor
jno
pop
xor
outsl
push
adc
mov
pop
stc
sahf
pop
enter
or
jg
cmp
lret
test
scas
or
jle
inc
mov
pushf
fldcw
cmpsl
adc
lods
sahf
cltd
sub
jge
fs
inc
push
mov
je
adc
repnz
pop
mov
nop
or
ds
mov
mov
rep
or
movsb
dec
inc
inc
adc
enter
dec
xchg
xorl
pop
test
dec
or
jnp
mov
sbb
adc
and
sub
cwtl
or
in
mov
jl
mov
mov
pushf
adc
jl
xor
fidivrl
push
es
cmp
jno
push
push
adc
push
repnz
sti
inc
xor
and
out
cmp
jp
movsb
inc
and
mov
mov
mov
int
lret
cmp
adc
and
test
add
mov
cli
inc
push
dec
add
pop
dec
xchg
lcall
cmpsb
stos
adc
sub
insl
cmp
push
jb
nop
pop
pop
data16
out
and
std
les
test
inc
lcall
xchg
or
lods
mov
add
dec
aad
xchg
jg
das
ja
dec
in
outsl
inc
jno
daa
xchg
sti
push
mov
rcr
dec
test
xchg
pop
add
jbe
faddp
and
adc
addr16
mov
sbb
pop
or
add
rcll
cmp
daa
cmp
xchg
test
xchg
test
popf
je
or
imulb
in
ss
cmp
stos
fildl
jne
xor
mov
test
pop
xor
jl
popf
test
lcall
mov
cli
loop
sub
popl
dec
cmp
test
xchg
mov
mov
dec
addr16
add
pop
pop
out
test
sbb
dec
bound
dec
mov
pop
lret
call
popf
loope
lods
jbe
addr16
sbb
inc
lds
add
repnz
lods
mov
insb
mov
loope
dec
xorb
dec
sahf
jle
mov
sarb
cli
inc
je
mov
mov
shlb
outsb
unpckhps
pusha
mov
daa
cmp
jmp
mov
xor
dec
pop
sbb
loop
nop
insl
sbb
xchg
jae
jl
in
adc
cmp
ds
lods
imul
mov
jo
loopne
test
sub
add
dec
aad
sar
sub
lret
cvtdq2ps
rcrl
sub
cli
divb
je
popf
dec
sbb
lods
xor
push
sahf
mov
push
cmp
leave
xchg
out
loope
xchg
bound
inc
and
dec
push
xlat
mov
testl
cmp
int
xlat
and
mov
xchg
pop
aas
gs
xor
sbb
jge
enter
out
icebp
addr16
cmp
push
xor
dec
outsb
rcr
pop
push
out
or
jne
ret
inc
fnstenv
jnp
mov
mov
jne
adc
out
xchg
mov
xchg
dec
mul
addl
popf
push
dec
or
mov
jp
inc
jecxz
or
cmpsl
xchg
addr16
aas
popf
fnstenv
fidivs
ret
inc
inc
les
mov
cmp
aad
jecxz
daa
test
inc
stos
dec
mov
insl
push
pop
cmp
push
push
xchg
frstor
call
dec
lods
shrl
inc
outsb
xchg
js
add
out
pop
xor
xor
pop
xor
cld
adc
lods
hlt
mov
sbb
mov
rcrb
nop
xor
and
adc
jl,pt
mov
cmp
gs
ljmp
leave
aad
data16
fwait
jge
add
stos
adc
insb
jae
cmpsb
scas
sbb
xchg
int3
or
jae
int3
fs
cli
insl
fcoms
jl
in
sbb
div
cmp
add
stos
mov
jno
fisubl
and
pop
bound
mov
jecxz
sbb
repnz
gs
psraw
mov
xor
push
out
mov
push
rcrb
mov
or
leave
sti
aad
lds
jns
std
push
jae
sbb
data16
adc
push
repnz
test
mov
dec
or
push
orl
popf
jb
add
mov
loop
imul
cmp
jge
stos
outsb
fwait
jmp
push
aaa
sbb
inc
out
cmp
mov
fiadds
xor
mov
clc
dec
or
jmp
push
out
mov
cmp
movsb
push
xchg
adc
dec
insl
shrl
aaa
dec
popf
loope
outsb
mov
addr16
lea
icebp
push
loope
push
aad
jno
xchg
adc
push
sbb
std
and
stos
jbe
inc
sbb
int
insb
sub
movsl
sbb
in
lret
shll
pop
jecxz
push
xlat
xlat
or
pop
cmpsl
push
inc
call
pop
loope
stos
loope
mov
adc
stos
cwtl
cmc
dec
dec
loopne
pop
sbb
cltd
dec
mulb
sahf
loope
xchg
inc
adc
xlat
shrl
sbb
pop
mov
push
push
pop
adc
jbe
cmp
or
push
sbb
mov
dec
mov
imul
std
outsl
lea
sub
sahf
enter
xor
aad
mov
jecxz
mov
call
fdivs
movsl
mov
adc
ljmp
pushf
mov
dec
jmp
fwait
xchg
mov
repnz
pushf
sbb
pusha
cmp
fs
aas
jl
xchg
push
int3
lods
and
or
fcmove
sub
ljmp
push
cmp
fistpl
cmc
mov
cli
inc
faddl
mov
lods
bound
ror
lods
shrd
andl
mov
cmpl
movl
mov
jmp
movl
movl
jne
push
push
push
push
push
pushl
push
push
call
orl
or
xor
xor
xor
add
adc
adc
sub
add
mov
xor
xorl
shr
xorl
mov
orl
xor
or
movl
shl
cmpl
movzwl
movl
jmp
movl
movl
jle
push
call
not
or
sub
sub
sbb
sub
mov
mov
sub
imul
mov
cmpl
not
movl
jmp
mov
jne
push
pushl
pushl
push
push
call
sbb
adc
neg
subl
adc
mov
mov
not
add
mov
mov
mov
shrd
shr
adcl
mov
mov
xor
add
shl
incl
xor
jmp
jle
jl
dec
mov
push
pop
mov
xchg
jp
ja
fldenv
fwait
push
inc
mov
xor
jne
out
add
or
xor
mov
pushf
mov
lock
dec
mov
add
call
loop
cmp
mov
pop
jo
jle
xchg
sub
jp
ss
push
cmpsl
sbb
xor
mov
sbb
sbb
xor
clc
xchg
ss
sub
outsl
mov
bound
mov
mov
fimuls
cld
int3
inc
lcall
nop
cvtps2pi
js
pushf
mov
mov
add
in
dec
mov
shrl
sarb
lret
cmp
mov
fistpl
mov
stos
scas
pop
and
dec
out
cmc
test
add
push
pop
xchg
cmpsb
cmp
daa
pop
js
faddp
dec
lret
bound
ficoms
test
jp
xchg
cmpsl
lcall
cmp
and
cwtl
notl
test
ret
xchg
push
sbb
sti
xchg
xor
mov
inc
shlb
xor
lods
out
clc
mov
mov
hlt
test
jb
pop
or
popf
test
xor
add
add
jge
sbb
aas
mov
mov
sti
test
adc
xor
mov
xchg
lcall
lret
jp
or
mov
mov
jmp
rorb
xchg
ja
outsb
xchg
mov
rclb
shll
fs
rep
pop
fs
adc
push
in
dec
cmp
ret
mov
sub
xlat
mov
aas
loopne
lcall
dec
aas
and
test
loope
push
ret
testb
lahf
and
in
cmp
or
xchg
push
mov
rolb
and
push
negb
ror
je
xchg
loopne
jb
scas
addr16
jno
dec
inc
jb
dec
out
or
and
mov
pop
inc
ret
xchg
aas
jmp
sbb
mov
nop
jle
jmp
fldl
jge
repnz
sti
ret
pusha
pop
and
std
xor
inc
inc
insb
add
cltd
ret
xchg
int
mov
adc
and
sub
xchg
je
and
push
sub
cmp
sbb
jge
imul
test
nop
jmp
mov
shlb
mov
push
jb
sub
pop
push
pop
pop
dec
test
mov
or
xor
or
hlt
or
mov
jb
fsubrp
xchg
add
out
dec
push
xor
adc
mov
dec
push
pop
adc
call
xlat
outsl
aam
dec
add
push
faddl
loopne
jo
xor
push
cs
das
out
sub
sbbb
cs
cmp
inc
pushf
jge
cmp
xor
pop
je
cmp
cmpsl
leave
xchg
repnz
pop
cmp
ds
jae
adc
inc
fistpl
push
pop
repz
pop
andl
push
fistpll
in
and
int3
fimull
mov
repz
movsl
popf
push
mov
mov
mov
int
ret
push
rolb
adc
and
dec
shll
addl
cmp
call
inc
aad
sti
cmp
pop
sub
sub
outsb
hlt
add
dec
outsl
inc
jne
add
test
push
out
les
repnz
test
leave
lds
stos
xchg
inc
jae
pop
adc
sub
sub
xchg
into
jp
jno
push
and
jne
mov
or
arpl
divb
test
loope
cmpsl
test
roll
xchg
lcall
mov
pop
lahf
in
shl
incl
pop
jne
xchg
jnp
xor
xor
in
in
mov
les
jmp
adc
ja
stc
inc
adc
nop
xor
loope
ljmp
or
xchg
pop
fiadds
js
mov
cmp
pop
jle
ja
cmp
cld
pop
mov
call
pusha
and
in
xor
dec
sub
gs
or
fstps
sub
cs
xchg
adc
jge
sub
lret
cs
jecxz
lea
lcall
fwait
or
cmpsl
je
xlat
push
pushf
pop
test
imulb
inc
data16
inc
ljmp
xchg
and
sbb
push
aaa
mov
cmpsb
shrb
mov
mov
jge
and
scas
sub
clc
rcrb
push
pop
hlt
mov
hlt
mov
xor
cmp
das
pusha
sub
lds
add
leave
fadd
pop
or
inc
or
fistpll
test
cld
pop
das
outsb
scas
fs
cmp
mov
pusha
dec
sahf
push
pop
add
scas
ret
pop
ret
mov
movsb
nop
xchg
pop
xor
jnp
jmp
aaa
lea
push
andb
das
les
mov
pop
stc
aam
popf
and
add
fwait
outsb
pop
sbb
cmpsb
mov
jo
arpl
int
add
lods
or
push
mulb
frstor
popf
lcall
dec
xchg
lock
jp
out
mov
in
and
les
fwait
jns
pop
mov
push
pop
push
mov
enter
push
iret
mov
jle
cmpsb
leave
fnstcw
add
fstp
and
sbb
ret
xchg
sub
adc
lea
das
jo
and
xchg
sahf
cmpsl
lock
jle
ret
ret
mov
pop
xchg
dec
lock
jne
mov
out
in
mov
sbb
add
pop
les
ret
dec
ds
xchg
je
test
pop
scas
cmpsl
push
xor
fmulp
xor
dec
cmp
shll
enter
sbb
iret
and
cmp
je
and
cs
and
outsb
sub
jmp
or
dec
lock
fbstp
sarl
orb
xchg
xchg
cld
mov
push
add
js
mov
daa
jnp
and
mov
xor
test
daa
pop
int3
loope
lds
jmp
hlt
jp
or
lcall
sbbb
hlt
test
inc
movsl
sbb
push
cli
popa
pop
inc
data16
pop
aam
and
sub
mov
xchg
push
xchg
or
shlb
jmp
mov
arpl
pop
and
pushf
inc
xchg
scas
cmp
int
mov
mov
jae
mov
packuswb
cmp
mov
sub
lock
mov
jmp
xchg
popa
pop
dec
and
leave
jecxz
and
push
in
fnstsw
mov
xor
aaa
sub
pop
sbbb
inc
push
adc
data16
gs
pop
out
add
sbb
stc
add
hlt
js,pn
adc
daa
mov
cwtl
dec
in
mov
rolb
and
cmpl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
xor
or
mov
sub
sub
mov
xor
or
sub
xor
and
xor
or
sbb
mov
mov
add
mov
mov
sbb
mov
mov
incl
shrd
subl
shr
adcl
mov
add
mov
cmpl
not
mov
jmp
not
jne
push
push
push
call
mov
sbb
and
andl
and
orl
sub
or
sbb
jmp
pop
and
push
adc
ficoms
ja
sahf
pop
pop
mov
push
ljmp
add
add
dec
mul
cmp
jmp
or
out
push
ljmp
movapd
mov
mov
fidivl
repz
inc
cmp
in
or
iret
and
and
pop
js
add
out
dec
das
pop
sbb
adcl
lret
aaa
push
cmpb
pop
outsb
ficompl
rorb
lret
int3
mov
xchg
dec
pop
cmc
pop
lock
clc
js
add
ds
cltd
cmpsl
insl
leave
jns
and
push
test
imul
jnp
push
cmpsb
or
dec
add
lahf
inc
test
mov
inc
xchg
jle
lods
pavgw
adc
add
mov
jmp
cmpl
test
add
xchg
xor
adcl
dec
jns
mov
jae
cmp
lahf
mov
sub
push
icebp
in
push
fsubr
lea
add
adc
pop
push
add
lret
push
xor
mov
movsl
push
stc
mov
cld
ret
cwtl
push
cmc
inc
shl
xchg
or
enter
sbb
jae
fstps
or
xor
jbe
std
mov
enter
or
sbb
dec
les
ljmp
mov
dec
mov
add
mov
pop
lahf
enter
xchg
in
aam
loop
pop
push
push
test
and
inc
ljmp
dec
dec
xchg
call
add
lods
mov
mov
pop
daa
movmskps
and
pop
xorb
pop
inc
dec
decl
adc
adc
jmp
out
jae
lcall
cmp
mov
fs
das
xorl
in
sub
push
or
lret
or
mov
xchg
jl
stc
enter
sub
and
lret
hlt
outsl
mov
rcl
int3
dec
xchg
push
pop
loop
dec
mov
out
inc
enter
cmp
inc
insb
enter
dec
das
mov
out
adc
daa
xchg
lahf
sub
jle
daa
mov
mov
sbb
mov
cs
movsb
lock
dec
addr16
pop
lcall
adc
mov
test
cmp
hlt
add
iret
fsts
adcb
test
mov
psrad
and
es
jo
push
fucomi
dec
and
popa
lea
pop
cmpsl
pop
mov
loope
xchg
in
loope
incl
shlb
xlat
lea
push
add
loop,pt
cmp
or
insl
lret
pop
fs
jae
fidivrl
push
scas
cmp
mov
enter
fnsave
cmpsb
cmp
or
pushf
into
jmp
andl
fcoml
gs
les
sti
push
or
pusha
xchg
fisttps
dec
xchg
and
ja
mov
and
adc
test
iret
es
sub
add
rcr
std
push
stc
jb
or
mov
repnz
jno
lods
fiaddl
cmp
clc
ss
jg
jno
or
aas
and
and
mov
xor
data16
push
add
inc
cmp
pop
pop
aad
loope
fs
inc
fsubs
je
call
popf
arpl
arpl
out
pop
mov
dec
dec
fimuls
or
out
pop
lret
div
test
xchg
stos
dec
mov
or
shrd
cmp
push
iretw
pop
and
lds
mov
adc
into
mov
and
divl
mov
sub
jmp
dec
movsb
sahf
inc
jmp
jp
add
test
pop
jp
roll
cmpsb
xor
inc
pop
jecxz
sub
fwait
daa
les
inc
ja
adc
js
lock
adc
or
dec
int3
push
int3
pop
xchg
mov
imulb
cmp
jmp
adc
mov
pop
jl
movsb
rolb
pop
test
cmp
xor
out
aas
out
pushf
rol
cs
rolb
shlb
fwait
js
jge
lock
lods
adc
pop
mov
aad
scas
in
mov
add
sbb
jb
mov
add
inc
or
xchg
movsb
fdiv
ficompl
fisttpl
cmp
and
nop
sahf
mov
lds
jo
shr
divl
cmp
mov
inc
mov
xchg
pop
ret
dec
fadd
pop
xlat
fdivp
pop
sub
push
xchg
jl
and
enter
pop
cmp
sub
fdivrl
adc
in
xlat
xlat
lea
jge
push
jbe
push
pop
and
cmp
push
xchg
outsl
les
dec
addr16
les
shrb
xchg
scas
ja
les
addr16
inc
dec
mov
xchg
adc
jno
test
cltd
mov
jle
mov
xchg
and
or
xor
aad
test
dec
ret
test
gs
dec
aaa
cmp
pop
nop
lret
inc
mov
xchg
mov
lock
inc
and
xor
xchg
ffreep
sbb
cmpl
xchg
leave
fcomip
int
mov
and
sbb
sub
lods
pop
cmpsl
adc
cli
xchg
loopne
jl
xor
mov
jae
add
push
data16
inc
dec
xchg
xchg
xchg
adc
add
mov
cmpb
push
and
cmpsl
cs
jae
out
fsubrl
cmp
fs
outsl
mov
movsb
or
stos
int3
xor
jmp
push
jne
es
xchg
dec
lahf
xchg
scas
pop
xchg
out
xchg
ja
cmp
add
nop
or
pop
jmp
or
sbb
call
daa
cmpsb
scas
add
pop
test
sahf
out
xchg
sub
fwait
mov
jmp
jmp
push
mov
and
fsubrp
xor
and
je
jmp
lock
xor
movb
lods
inc
iret
shlb
cmp
pushf
imul
or
push
jecxz
jge
adc
shlb
andl
mov
and
and
repnz
pushf
pop
es
add
xor
gs
dec
roll
in
mov
cld
ja
mov
andl
inc
mov
dec
stos
mov
mov
mov
or
gs
aas
pop
sbb
and
jno
jge
sbbl
mov
xchg
sbb
add
pop
icebp
xchg
xor
mov
sbb
and
cmp
jg
clc
jnp
pop
add
stos
mov
out
adc
pusha
test
addr16
xor
sbb
jmp
adcl
fsubr
daa
jbe
sub
sub
push
or
add
in
daa
and
push
pop
js
int
mov
xor
mov
xor
xor
subl
or
andl
shl
sbbl
lea
sub
mov
cmpl
mov
mov
mov
mov
jmp
movl
jg
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
pushl
push
call
xorl
movzbl
adc
movzbl
add
or
add
movzwl
sub
mov
shrd
shr
cmpl
mov
mov
mov
jmp
mov
jbe
push
call
andl
mov
adc
sbb
movl
mov
mov
or
not
mov
mov
sub
mov
add
jmp
rcrl
cmp
and
and
scas
dec
or
fcomps
ja
stos
add
cmp
push
push
cmpsl
inc
mov
fidivs
out
sub
dec
ss
ss
test
scas
loop
xchg
xchg
sub
mov
loop
es
stc
loopne
call
in
jno
iret
aas
data16
inc
pop
ss
adc
xchg
test
cmp
popf
stc
jnp
dec
insb
mov
jecxz
push
lcall
out
and
iret
pop
pop
pop
rcll
mov
mov
jl
mov
adc
inc
jle
sub
adc
pop
movsb
outsl
xchg
fwait
je
fldcw
jnp
and
xchg
cwtl
ja
test
out
dec
pop
std
cmp
loopne
jl,pt
adc
call
jle
adc
out
stos
sbb
and
and
sbb
hlt
ss
xor
cmpsl
enter
push
stos
das
or
call
stos
cmp
mov
mov
mov
sbb
mov
xor
xor
mov
inc
clc
out
xchg
int
cmp
pop
pop
sub
cmp
adcb
jmp
jp
lcall
mov
xor
sub
lret
jl
mov
test
lcall
push
push
xchg
xlat
test
in
inc
push
or
imul
add
xchg
dec
aam
int3
es
cltd
inc
dec
je
sub
dec
call
outsl
jg
jne
lahf
sub
mov
mov
push
fcmovnb
std
popa
into
lods
pushf
pop
movsl
sbb
cld
popf
fidivl
popa
repz
in
mov
fnstsw
call
push
call
and
jmp
mov
gs
cmp
fwait
push
testl
in
xlat
fcoml
inc
xchg
mov
cwtl
in
jmp
scas
and
adc
inc
mov
mov
and
lcall
mov
jecxz
cld
movsl
fstpt
jno
lcall
push
dec
adc
jg
shrl
sbb
mov
pop
imul
dec
mov
rorl
mov
fstps
xchg
push
pop
add
sti
push
andb
pop
xchg
nop
adc
xchg
das
jg
mov
stos
or
mov
in
flds
sbb
add
xor
pop
std
xor
fsubl
in
jg
subl
and
sub
sub
mov
mov
push
mov
xchg
push
nop
js
popf
xchg
aaa
test
xor
mov
icebp
mov
aad
fisubl
xor
mov
popf
and
iret
pushf
dec
cmp
insl
cmp
lcall
sbb
jo
xchg
adc
jno
xchg
jb
mov
pop
mov
cmp
sub
adc
cmp
push
movsl
cld
loope
cmc
jecxz
out
push
and
pushf
jp
inc
in
andb
cmc
push
hlt
cmp
addl
mov
shll
push
add
pop
rcr
sub
repz
daa
int3
sbb
sub
mov
mov
lcall
repz
jae
mov
fistl
and
inc
push
add
out
xchg
push
or
dec
pop
cmpsb
sub
xor
ror
daa
add
and
lds
mov
dec
in
mov
popf
mov
ficoml
lahf
js
iret
xchg
push
in
fdiv
iret
cmp
in
jg
dec
jmp
ror
aam
mov
daa
subb
aad
mov
xlat
daa
pushf
mov
pop
in
xor
xchg
stos
xchg
jle
fsubrl
jbe
mov
and
xchg
gs
mov
ret
pop
jno
sub
mov
xorl
aas
and
fcmovne
mov
xchg
gs
bound
mov
xchg
jmp
sub
jmp
ret
les
sub
cltd
mov
mov
jno
enter
pop
outsb
icebp
imul
dec
jne
sbb
xor
lcall
mov
mov
nop
xchg
push
nop
xor
cld
jnp
ret
insb
ret
test
jbe
movsl
div
fs
std
rclb
jb
push
jmp
mov
mov
mov
aam
cmpsb
call
xchg
outsl
ret
or
xchg
jns
rolb
les
jg
and
test
mov
in
push
cs
and
push
lods
fadds
pop
lret
int
hlt
sbb
add
or
inc
cmp
lds
dec
or
push
addr16
cs
out
mov
sub
xchg
stos
outsb
mov
lock
cmp
push
popf
imul
mov
in
repnz
mov
sbb
std
bswap
jl
inc
insb
sahf
jl
xchg
dec
lea
jnp
dec
mov
xchg
into
xlat
mov
arpl
sbb
xor
mov
mov
push
inc
scas
pop
and
mov
fistpl
jns
jge
and
sub
ljmp
sub
je
xchg
sub
lods
sub
add
xor
sbb
sub
mov
in
pusha
adc
mov
dec
inc
add
mov
data16
sub
cs
mov
repz
xor
fmull
iret
pop
xchg
pop
mov
add
movsb
jnp
push
fdivs
es
sti
outsl
clc
into
movsb
bound
in
pop
sub
lods
xchg
mov
jmp
cmp
nop
adc
mov
in
daa
sbb
and
mov
rcrl
repz
xchg
mov
popa
aad
sub
pop
dec
mov
cmp
shrl
xchg
mov
lea
int
insb
mov
in
dec
bound
add
pushf
jle
pop
int
sbb
imul
xchg
enter
aaa
fs
mov
ret
inc
lahf
ret
mov
sbb
bound
insl
inc
mov
addb
loope
pop
push
notl
out
sub
xchg
push
nop
adc
jae
aas
ss
mov
cmpsb
mov
ret
rorl
inc
stos
nop
sbb
rolb
push
pop
aam
mov
pop
push
xchg
push
xchg
xchg
xor
sub
dec
pop
jno
rcrl
jb
add
dec
nop
ds
xor
fdiv
pop
mov
mov
and
cmp
adc
stos
imul
xchg
mov
mov
clc
pop
out
cmp
sbbl
cs
dec
lret
popf
imulb
mov
arpl
xorl
dec
pop
xchg
mov
mov
xor
je
xchg
sbb
mov
aas
aaa
call
test
and
imul
adc
imul
pop
dec
cmp
movsb
lods
pop
pusha
dec
mov
addl
push
mov
lret
cmp
and
loopne
fcmovb
repz
cmp
lret
mov
loope
mov
adc
ja
mov
push
dec
mov
popa
push
ljmp
mov
sbb
lods
mov
xor
mov
xor
adcl
or
shl
movzbl
or
imul
mov
mov
xorl
shrd
xorl
mov
mov
xor
shr
mov
and
mov
sbbl
xor
orl
or
sbbl
shl
adcl
sub
mov
mov
cmp
mov
mov
jg
xor
add
mov
sub
and
mov
cmpl
movl
movl
jmp
mov
mov
jb
push
push
call
xor
mov
sub
sbb
movzbl
and
mov
jmp
les
cmp
push
mov
mov
movsb
js
rorb
outsl
dec
ja
push
les
or
cwtl
mov
adc
data16
adc
pop
loop
scas
push
xchg
xchg
stos
xchg
jmp
xlat
push
cmp
mov
cmp
mov
leave
mov
pop
icebp
cmp
outsl
mov
mov
lcall
in
sti
dec
sub
ficoml
incb
pop
cmp
test
ficompl
sbb
int3
sbb
or
inc
leave
rclb
mov
test
and
push
into
mul
and
std
shlb
mov
leave
sub
sub
cmpsl
jl
mov
push
pop
sbb
ret
and
test
ljmp
or
in
cmp
cmp
orl
cmpsl
test
out
jl
lea
mov
gs
repz
movsl
push
add
fbstp
daa
or
jle
or
aas
loop
test
or
in
out
cmp
cmp
jle
add
shl
xlat
into
push
dec
mov
hlt
in
sub
push
add
ja
and
jle
jne
flds
lea
dec
in
pop
jmp
cmp
adc
decl
mov
adc
push
out
in
rcl
push
int3
lahf
movsl
out
movsb
nop
push
fisubs
stc
jae
sbb
cld
cld
fdivs
cmpsb
sbb
int
icebp
mov
bound
in
repz
xchg
inc
stos
bound
jno
sub
dec
sub
jp
sbb
inc
jbe
int
andb
jae
insl
push
or
cmp
scas
dec
das
push
lds
in
pop
icebp
fstpt
or
push
xchg
roll
dec
movsl
repz
cld
ret
mov
aas
cmpsl
and
push
push
mov
jne
jge
arpl
jmp
jae
jl
gs
jecxz
mov
sbb
fwait
loop
mov
adc
jb
push
sub
mov
cs
rcrb
push
lods
jno
pop
mov
mov
pop
dec
fidivl
aam
jnp
out
repz
jl
add
jae
xlat
cltd
sub
pop
jae
loopne
push
fisubs
ror
mov
cwtl
into
mov
pop
int
lret
dec
jmp
or
aad
cwtl
iret
pop
cld
mov
mov
mov
xchg
imul
pop
lea
arpl
or
jecxz
popa
int3
mov
call
mov
sti
rcrl
loope
jge
dec
push
jge
push
xchg
fiaddl
addb
push
and
fsub
and
jmp
jnp
xlat
imul
test
mov
out
cmp
jne
push
repz
add
ficompl
mov
dec
lea
sub
je
fcomps
js
add
pop
mov
sub
dec
cmp
mov
xchg
btr
adc
inc
scas
aas
jno
jg
sahf
mov
xlat
xor
mov
ror
test
mov
js
mov
jae
insb
mov
repz
sarl
dec
ret
lret
stos
cmp
aas
and
rclb
icebp
xchg
sbb
xchg
dec
pop
inc
inc
jbe
shl
pop
cmp
popa
clc
sahf
outsb
imul
adc
rcll
adc
mov
cmp
mov
sub
pop
and
xorb
xorb
out
rorl
bnd
leave
inc
mov
lret
mov
and
push
xchg
sahf
mov
nop
xor
lock
int
push
daa
add
push
incb
jle
xlat
pop
adc
pop
adc
in
add
jmp
out
cltd
pop
out
inc
out
mov
scas
imul
shlb
jb
scas
es
xchg
mov
fdivrl
out
push
pop
jno
fimuls
xchg
adc
push
pop
aad
mov
int
jns
cmpb
mov
xor
cmp
sub
push
pop
aam
aas
scas
cmc
repnz
xor
jne
mov
mov
mov
mov
mov
es
int
dec
sbb
xchg
adc
jle
sbb
sbb
mov
pop
add
add
test
and
mov
sbb
nop
movsb
jp
jp
cld
jb
std
mov
sub
aaa
add
mov
mov
scas
aad
rol
mov
std
cmp
xchg
ljmp
movsb
out
call
inc
or
jns
dec
jmp
repz
fnsave
cmp
loope
and
mov
pop
loop
mov
vrcpss
lea
xchg
orb
pop
mov
outsb
and
xor
mov
sahf
test
dec
push
sbb
into
mov
fidivs
stc
fdivp
loopne
jns
loop
jnp
or
lods
fnstcw
push
je
fdivl
sbb
popa
imul
jp
rclb
pop
ja
inc
dec
aam
in
dec
fisttpl
cli
lret
in
imul
movb
xchg
jbe
mov
dec
jle
pop
lahf
lret
lods
cmpsb
out
sub
or
sub
jecxz
fwait
imul
imulb
pop
mov
add
sbbl
cld
movsl
test
xchg
test
mov
pop
into
fsub
sub
xchg
ret
xchg
cmp
jecxz
sbb
jmp
andb
push
imul
dec
xchg
repnz
popa
dec
mov
or
mov
in
mov
icebp
mov
push
ret
out
insb
inc
ljmp
sub
sbb
cmp
gs
add
dec
movsb
pushf
into
jl
das
push
sbbl
xchg
gs
or
sub
sahf
mov
mov
lds
push
add
inc
fsubr
push
in
std
cmpsl
cld
xchg
fmulp
bound
fsts
adc
and
aad
inc
lahf
or
push
sub
mov
sarl
jo
ret
and
xor
push
mov
ja
and
cltd
clc
iret
addr16
lds
cmp
and
gs
mov
call
pop
push
xchg
test
gs
sub
pusha
loop
ljmp
xor
out
fcomp
and
and
cmp
xchg
rcrl
rorb
jle
push
xchg
inc
aaa
aaa
jp
mov
mov
incl
lret
pop
ja
roll
pand
lcall
push
mov
lds
in
xor
pop
lret
je
and
jle
pop
inc
je
add
movsl
insl
stos
jae
loop
pushf
and
shl
mov
adcl
sarb
movsb
jo
ja
frstor
cmc
jg
mov
dec
and
sbb
lods
stos
xor
shr
mov
xor
mov
lcall
inc
cld
lcall
mov
sub
mov
lsl
mov
mov
dec
dec
push
jbe
push
push
lret
add
fwait
and
inc
sub
aad
pop
inc
sub
push
adc
mov
stc
lahf
repz
test
adc
or
mov
andl
shrd
mov
movzwl
or
mov
adcl
xor
andl
shl
orl
xor
adcl
or
sbbl
shr
and
mov
jmp
mov
mov
cld
iret
adcb
psubb
pop
pusha
pop
leave
popa
lock
shlb
push
push
subl
pop
jg
jmp
cwtl
sbb
jbe
push
push
and
xorl
rol
cwtl
sti
in
push
push
jp
fbstp
inc
cmpsl
xchg
fisttpll
push
rcr
sub
jbe
push
addb
jb
mov
push
in
sahf
out
or
out
loop
fs
ret
push
andl
sub
xor
jno
and
jnp
or
xor
pop
cld
add
sbb
or
testb
jle
sbb
push
jbe
sbb
mov
sub
inc
sahf
dec
mov
and
jp
pop
pop
sti
popf
pop
scas
push
adc
push
mov
aad
xchg
jp
lret
dec
and
lock
mov
pop
mov
das
xor
adc
shrl
inc
out
bound
sbbl
mov
out
or
cmc
int
mov
sbb
mov
jne
pop
or
inc
ret
and
mov
fwait
cmp
loope
ds
jo
call
jle
cmp
pop
add
xor
das
mov
mov
jns
mov
and
fidivrl
xorb
aam
lcall
aad
cmp
cwtl
mov
gs
das
cltd
lcall
and
or
rclb
xchg
sti
imul
imul
mov
sbb
jo
imul
jg
mov
xor
sub
xchg
mov
bnd
in
ljmp
or
insb
jg
jae
xlat
sahf
jg
mov
clc
jecxz
or
mulb
daa
cmp
and
vpsllw
das
mov
lods
mov
jb
mov
call
insl
mov
out
mov
test
leave
sub
loopne
movsl
xor
jns
test
fists
lods
pop
mov
repnz
xchg
mov
mov
jecxz
mov
pop
mulb
cltd
es
dec
and
cmp
sbb
sti
mov
leave
sub
pcmpgtb
push
hlt
or
loope
loopne
mov
subb
xchg
mov
mov
lods
xchg
rorb
insb
std
mov
add
dec
cmpsl
shlb
das
dec
cltd
adc
iret
shll
aas
or
pop
daa
mov
mov
sbb
and
insl
sub
rolb
rol
bound
fcmovb
loope
cmp
jecxz
pop
add
mov
dec
jg
jb
testl
and
pop
test
push
movsl
jecxz
lds
cmc
xor
inc
inc
adc
xchg
xor
repz
insl
pop
into
daa
sub
mov
orb
or
inc
ficoml
inc
jno
out
push
push
mov
and
in
mov
xchg
pusha
add
shlb
jae
pop
push
mov
movsb
arpl
nop
and
dec
xchg
test
sti
dec
xor
ficoml
dec
jp
aad
jl
shrb
mov
adc
push
push
arpl
je
pop
dec
xchg
lods
or
xor
hlt
push
mov
aas
fs
popa
add
hlt
aad
out
imul
xor
cwtl
aam
cmp
sub
push
ds
jecxz
pop
in
loope
fcom
sbb
cmpsb
push
sub
popf
test
out
jmp
jl
aas
iret
jo
xchg
push
clc
shlb
clc
xor
adc
pop
cmp
add
and
cmp
and
or
add
xchg
stos
lret
leave
fnsave
rol
xor
int3
jg
jb
fwait
testl
aas
push
pushf
add
fidivrs
inc
dec
ss
fdivl
push
mov
cwtl
ja
adc
sarl
jo
sbb
mov
xchg
sub
outsl
jge
scas
push
mov
xor
mov
pop
cltd
jp
repnz
je
and
mov
jp
ret
stc
imul
inc
je
jns
xchg
imul
mov
mov
add
add
daa
test
shlb
mov
adc
push
dec
addb
push
cmpsb
ss
insb
dec
xchg
lds
cltd
sbb
push
adc
sbb
adc
ljmp
leave
xor
sbb
push
je
aaa
sti
cmp
mov
cmp
mov
outsb
adc
cmp
fcom
pusha
jno
adc
xchg
mov
das
mov
data16
jg
out
xchg
movsb
hlt
gs
cwtl
ret
popf
lock
les
cmpsl
xor
jle
add
xchg
xor
sahf
pop
adc
xchg
push
mov
pop
xchg
addl
out
jne
xor
daa
sbb
push
push
dec
dec
pop
fdiv
or
stc
jl
dec
sbb
sbb
push
or
fmulp
cltd
cltd
mov
and
gs
cmp
les
imul
insl
add
jo
out
xchg
push
dec
mov
jle
or
mov
mov
rclb
push
adc
inc
adc
sub
cltd
aas
add
cmpsl
xor
xlat
mov
cmp
test
mov
and
mov
in
cmpsb
insb
aas
xchg
imul
sbb
in
popa
fisttpll
clc
xchg
xchg
insb
xor
dec
xchg
adc
dec
rcrb
xchg
and
sbb
adc
xlat
adcl
mov
add
push
insl
fists
xor
sub
sbb
sbb
in
ret
in
and
pop
rolb
in
mov
inc
movsb
mov
mov
push
decb
lcall
fs
adc
aam
xchg
ja
cwtl
lret
in
mov
mov
cmp
lret
outsb
addr16
aam
xor
je
shll
mov
jmp
cmp
cmp
insb
in
out
pop
cmc
frstor
shl
xchg
mov
jo
in
xor
dec
mov
sti
jne
adc
pop
cmpsl
lret
jo
add
scas
push
and
or
mov
push
lret
pop
mov
xor
icebp
pusha
cli
xchg
mov
cmp
repnz
cld
push
or
add
xchg
dec
add
cli
cmp
cltd
leave
push
push
pushf
sub
cli
int3
and
ljmp
push
lods
ds
mov
shrl
inc
dec
out
pop
xor
pop
les
push
or
adc
int
inc
add
fnstenv
sub
xchg
dec
jae
dec
push
mov
xor
pop
sub
mov
in
fdivp
sub
jg
pop
daa
push
inc
sbbl
mov
ret
out
cmc
push
int
dec
add
dec
inc
dec
insl
cmp
mov
fcoms
gs
lock
cld
mov
incl
shlb
insl
mov
mov
daa
mov
bound
cltd
sbb
das
mov
or
xchg
js
pop
cmp
mov
mov
or
mov
mov
mov
add
mov
andl
shrd
sbbl
shr
mov
mov
inc
jmp
shll
adc
push
scas
xchg
push
and
subb
ja
bound
pop
fcmove
xchg
pop
test
xchg
call
jle
pop
pop
adc
cmpl
rolb
test
push
push
mov
pshufw
sub
test
fiadds
jge
xchg
pop
cwtl
out
cmp
fisubs
orb
mov
and
add
insl
scas
xchg
pushf
sub
cmpsl
cs
pop
mov
scas
nop/reserved
shl
js
cmp
fsubl
inc
xchg
mov
mov
stc
aaa
movsb
push
jo
aad
pop
dec
push
jp
imul
test
loope
shrl
sahf
sbb
lcall
inc
inc
aaa
je
outsl
sti
jo
call
popa
push
push
inc
jns
fstps
mov
inc
lea
xor
out
aas
loopne
repnz
rcr
jg
lods
jmp
cmp
mov
and
mov
inc
mov
or
in
outsl
in
jg
test
mov
sbb
imul
pusha
cli
mov
ds
sub
cmp
cmp
je
or
push
shlb
imull
or
js
sbb
push
test
mov
push
dec
mul
cmp
sub
mov
cmp
jae
rorl
adc
pop
lea
mov
imul
cs
in
arpl
mov
jns
jnp
adc
repnz
cmpsl
dec
dec
inc
inc
stc
ret
or
dec
push
je
pusha
sub
xchg
inc
fidivrs
pop
dec
in
mov
dec
stos
push
jle
scas
lret
scas
pop
jnp
icebp
jb
or
orb
xchg
out
mov
lods
fisubs
test
jmp
jo
test
add
fnstenv
xchg
rcl
gs
xor
mov
pop
out
je
dec
popl
mov
jecxz
lds
mov
lret
push
lock
neg
mov
mov
test
xchg
push
xchg
mov
out
add
mov
xor
mov
in
xchg
fwait
dec
cmpsl
cmpsb
and
ja
fstpt
mov
add
mov
mov
pop
and
imul
arpl
cmp
inc
pop
cwtl
inc
sub
pop
or
fistpl
dec
popa
popf
pop
dec
dec
adc
sub
push
je
andl
ljmp
lods
cmp
pop
mov
xchg
mov
sbb
fcoms
mov
jns
ljmp
push
shlb
mov
insb
cmpsl
test
fadds
loope
repz
orl
shll
push
inc
fwait
les
loopne
add
xchg
mov
test
xchg
sub
and
icebp
push
ret
push
mov
push
idivl
scas
push
fisttps
jae
jo
lods
bound
dec
push
popa
dec
mov
mov
pop
mov
pop
mov
cwtl
inc
sub
mov
pop
push
adc
push
mov
cmp
stc
or
sub
daa
push
push
jl
icebp
and
lea
cltd
dec
orb
je
test
fidivl
divb
test
dec
lds
inc
cmp
stos
lods
xor
adc
rcll
aas
mov
jb
ds
xor
jl
fsubs
outsb
cmp
fucom
and
testb
or
imul
xor
xchg
stos
out
sti
xlat
and
adc
jmp
pop
fcomp
xchg
jne
icebp
out
aas
cmp
aad
pop
jmp
test
add
adc
es
xor
jb
jecxz
jbe
xor
out
je
rep
insb
cs
mov
push
mov
std
sahf
std
xchg
jno
sbb
xchg
mov
pop
fmull
push
push
or
int3
add
dec
jmp
mov
jecxz
xlat
rcl
cltd
sbb
add
ds
int3
outsl
sbb
push
push
mov
xchg
dec
xchg
mov
cs
imul
sbb
cmpsb
cltd
pop
loopne
or
push
inc
push
roll
arpl
test
movsl
pop
sub
nop
xor
dec
pushf
sub
dec
sub
add
lea
or
or
sub
mov
dec
loope
xchg
stos
aam
inc
in
lret
nop
lcall
clc
jl
adc
inc
push
in
shll
mov
or
mov
adc
jns
mov
sub
sub
outsl
sub
movsb
into
repz
add
or
mov
push
test
or
or
pop
push
xchg
xorl
sub
or
repnz
mov
jle
mov
aas
or
test
das
push
xor
mov
dec
dec
mov
repz
daa
xchg
subl
inc
in
mov
pushf
push
in
bound
in
scas
push
xchg
adc
repnz
xlat
sub
insb
cmp
or
sarb
hlt
push
test
iret
arpl
scas
xlat
shrl
adc
xchg
mov
pusha
ds
jnp
push
mov
ja
movsb
call
inc
mov
popa
outsl
fwait
sub
mov
xchg
test
xchg
and
inc
enter
jmp
lret
sub
jns
dec
lds
jg
insb
cmovl
scas
sub
push
subb
lret
jp
mov
popf
push
jae
in
mov
mov
mov
testb
test
leave
push
fnstenv
sbbb
cld
dec
jecxz
xchg
push
testl
test
lret
pop
pop
dec
pop
or
or
scas
stos
int
loopnew
jno
mov
mov
xor
popl
xchg
shl
testl
test
and
ljmp
mov
and
jecxz
scas
ja
in
mov
mov
mov
adc
jle
and
aad
push
rclb
aad
or
lahf
repz
dec
lods
les
outsb
mov
bnd
shld
test
movl
outsl
xchg
mov
repz
xor
shrb
adc
test
lahf
ficomps
mov
into
cmpl
jp
xchg
jb
jg
mov
jno
int
out
insl
jmp
cwtl
scas
ret
filds
mov
fwait
cli
jno
inc
lcall
test
dec
mov
popf
mov
in
dec
adc
dec
xchg
in
sbb
aaa
ret
mov
ja
pop
popa
adc
sahf
jo
add
sub
and
add
notb
jle
mov
fsubp
dec
icebp
iret
decb
popa
hlt
push
pop
jo
int3
stc
cwtl
icebp
loope
push
xor
cmp
add
jge
subl
jmp
scas
popa
inc
jge
sbb
cs
es
mov
xchg
lods
mov
cmp
pop
inc
mov
mov
aaa
js
ret
push
fldenv
aam
jecxz
addr16
into
push
adc
or
fucom
cwtl
bound
inc
push
sbb
pushf
pop
xchg
fimull
mov
clc
insl
jge
aam
add
sub
xchg
and
scas
fiadds
mov
pushf
sahf
fadd
push
dec
xchg
jmp
rolb
mov
orb
xchg
out
test
inc
rcr
pop
jo
mov
incb
aas
xor
push
shrl
ja
xchg
aaa
xchg
mov
mov
aas
gs
sbb
or
xor
pop
jecxz
lret
js
pop
addr16
lea
sub
push
out
pop
fnsave
inc
leave
push
xchg
or
out
dec
push
push
xchg
ja
add
jge
pop
in
dec
pop
pushf
xor
aad
outsl
sbb
mov
xchg
jle
movsl
mov
pop
mov
in
inc
sbb
add
or
daa
daa
adc
cwtl
jge
sub
in
outsl
mov
out
mov
push
hlt
sahf
add
and
mov
adc
jbe
insb
cmp
pop
in
gs
or
mov
jno
and
add
movsl
add
sbb
out
xor
dec
out
xchg
or
inc
and
in
push
leave
dec
or
sbb
mov
sub
mov
push
int3
pop
lods
inc
push
and
mov
lock
push
lock
inc
or
repnz
ljmp
or
dec
cs
push
lods
es
decl
push
stc
clc
fwait
out
out
cmp
sub
outsb
pop
adc
enter
add
mov
lock
leave
jo
roll
into
insb
movsb
and
inc
movsb
cltd
pop
jno
adc
pop
or
fdivs
dec
add
insb
arpl
je
sub
xor
jmp
xchg
mov
repnz
dec
pushf
mul
pusha
sbb
aas
lret
add
and
in
jl
fnsave
cmp
js
jnp
out
and
cwtl
pop
imul
push
add
jge
jmp
leave
rcll
xor
cltd
out
test
dec
addr16
inc
pop
push
push
pop
mov
loop
aam
sub
sbb
add
sub
mov
popa
pushf
lea
jb
mov
adc
pop
add
in
or
lea
punpcklbw
jne
mov
or
add
adc
xor
out
sub
mov
data16
add
repz
daa
test
dec
lods
dec
mov
call
mov
jbe
lock
or
scas
mov
stc
xchg
outsl
xchg
inc
adc
xor
cmpsl
aas
into
xchg
pop
pop
daa
popa
sbb
and
dec
repz
int
fcoml
push
dec
inc
mov
jle
pop
jo
sti
fcmovnu
scas
pop
fstpl
je
xor
dec
cmpsl
xor
adc
inc
pop
sub
mov
sub
inc
cmp
xchg
movb
lods
lahf
je
push
out
in
popa
jb
dec
mov
cltd
test
ds
insb
rep
push
pop
jmp
inc
out
imul
std
cmpsl
fdivrp
rcll
stos
or
mov
and
dec
dec
cmpsb
sbb
in
and
in
stos
bound
sti
icebp
push
xor
mov
add
sahf
cld
mov
and
inc
sbb
push
push
rol
mov
cmp
inc
adc
lret
mov
adc
dec
jg
lret
lcall
pushf
mov
test
jo
loop
sti
add
jae
mov
add
sub
dec
and
fcmove
xor
das
fucom
xadd
lea
push
xchg
fbstp
daa
ljmp
mov
sbb
or
dec
movsb
dec
jmp
hlt
jns
aad
push
pop
loope
inc
aam
xchg
jae
add
xor
xchg
shl
adc
mov
das
scas
mov
in
pop
and
imul
adc
pop
int3
xchg
in
in
cld
pop
cmpsl
jne
lret
fstpl
add
out
loopne
pop
dec
mov
js
jbe
cmp
hlt
cmpsb
fs
xchg
lret
loopne
nop
fwait
jmp
cld
movsb
push
movsb
push
insl
xchg
and
push
aaa
jnp
test
cmpsl
inc
clc
jecxz
xchg
in
das
push
mov
push
pop
fsubs
aad
mov
add
xor
xor
jbe
fmull
pop
xor
lods
stos
push
sbb
bound
out
out
and
or
jo
sbb
out
lods
xchg
pop
bound
lcall
sarb
push
bnd
jmp
pop
pop
cmpsl
mov
pop
fnstenv
out
sarb
sbb
insl
outsl
mov
mov
mov
out
push
insl
jg
push
cltd
movsb
or
sbb
or
sahf
inc
and
xchg
es
sbb
not
sub
aad
push
push
add
cmp
push
jb
loopne
sbb
ds
xor
movsl
or
and
mov
pop
add
xchg
enter
sbb
or
cmp
fcoml
shrl
aaa
xlat
and
shrl
sub
loope
and
pop
mov
or
adc
insb
hlt
xor
aaa
add
stos
imul
mov
add
cld
jns
test
lock
dec
pusha
mov
add
add
scas
test
mov
pop
shll
dec
and
cmp
pusha
pop
iret
mov
cmp
mov
movsb
sbb
push
loope
cmp
fstl
mov
jl
pop
mov
and
les
pop
inc
icebp
cmp
loop
xchg
mov
out
xchg
cmp
scas
xchg
jno
dec
addr16
and
mov
and
mov
popa
dec
xchg
dec
mov
in
xor
je
iret
in
les
lret
sub
test
or
add
cmpsl
sbb
es
jp
xchg
test
rorb
in
aaa
push
in
fisubl
pop
ljmp
mov
loop
adc
subb
mov
test
adc
clc
or
insl
add
and
in
lds
mov
pop
imul
bound
int
sbb
push
into
std
mov
cs
push
push
cmp
out
enter
cmp
data16
lock
xchg
cmp
lret
push
out
mov
xchg
push
movsb
jle
mov
mov
fistpll
jb
sbb
xor
lock
push
sbb
dec
outsb
inc
inc
lds
arpl
pop
add
xor
and
jbe
ror
inc
pop
fisttps
lret
mov
out
test
popa
pop
gs
cltd
scas
nop
push
in
ds
imul
sbb
pushf
xlat
xor
and
push
in
add
sub
inc
add
loope
imul
jmp
add
or
or
adc
push
ja
xchg
ffreep
lret
push
mov
scas
pop
adc
fcoms
lods
out
fbstp
lea
frstor
loopne
push
fsubl
mov
jl
out
push
sbb
daa
cmpsl
xlat
pop
jle
add
cmp
lea
push
push
add
repz
push
les
sti
mov
cmp
add
push
mov
out
cmc
sarb
cmp
bnd
int
inc
sub
xor
jge
scas
jl
inc
aam
scas
cmp
hlt
test
jnp
cld
mov
enter
mov
out
push
js
loopne
rep
mov
pop
push
cmp
push
sub
ret
scas
sti
xchg
xchg
mov
cwtl
cmp
xor
push
pop
cmp
inc
test
xchg
jnp
cmp
or
mov
push
add
sbb
jp
push
push
repz
jo
iret
jns
sub
popa
or
sbb
mov
jb
mov
ljmp
mov
push
aaa
daa
jae
adc
mov
loop
dec
pop
lahf
int
xchg
and
xchg
es
sbb
arpl
roll
push
dec
jb
je
or
jp
sub
rorl
jge
lret
jb
data16
mov
xor
mov
fisubrs
addr16
fwait
adc
fwait
popf
cmpl
and
insb
xchg
out
pop
push
out
push
movsb
sbb
loope
mov
ret
dec
cmc
stc
push
jne
sub
std
pop
mov
sahf
mov
xor
pushf
loopne
std
rorl
jmp
xchg
leave
mov
fs
push
xor
inc
popf
das
inc
jg
mov
cwtl
movsl
mov
aam
sbb
jmp
push
cmp
pop
insb
push
cltd
pusha
push
sub
call
rorb
and
mov
dec
loopne
cmp
fisttpl
or
in
sub
and
inc
pop
cltd
cmpsl
cs
ljmp
das
daa
call
mov
jmp
push
call
loop
push
xor
aam
or
scas
mull
in
cmp
sub
mov
test
shr
popf
xchg
icebp
mov
scas
repz
xchg
lds
dec
adc
adc
push
cmpsl
dec
pop
dec
jae
jg
dec
sub
dec
lock
lcall
sar
inc
lcall
sbbb
push
cmpsb
mov
dec
int3
xchg
or
sub
cmp
jns
pop
adc
adc
mov
iret
mov
ljmp
pop
inc
nop
cltd
adc
or
adc
jecxz
jle
xor
pop
stc
icebp
into
mov
and
cmp
adc
outsb
enter
push
cmc
jo
push
inc
pop
mov
adc
ret
hlt
rcl
push
push
mov
repz
jle
popa
mov
and
jne
push
cmp
add
and
xlat
mov
in
insl
mov
sahf
outsl
pop
and
sub
js
pop
sbb
loopne
repnz
insb
sbb
ss
xchg
mov
xor
aas
pop
aad
inc
xchg
adc
xchg
jae
addr16
or
push
sti
arpl
daa
adc
mov
jb
fwait
stc
mov
rcr
idivb
push
cmp
jns
sub
cmp
pusha
out
adc
adc
xchg
fwait
sbbb
fidivl
mov
mulb
test
xor
stos
xchg
mov
jmp
mov
vcvtpd2psy
lret
mov
push
add
cmp
out
mov
push
sbb
lea
clc
xchg
shrl
jne
mov
xchg
mov
mov
imul
dec
fisttpl
test
ss
xor
lcall
cmp
mov
xor
push
mov
roll
int3
jbe
xchg
es
fmulp
je
sti
push
jecxz
cmc
nop
and
vpshuflw
inc
outsb
jg
push
bound
pop
jns
dec
enter
pop
cmpsl
scas
jp
addr16
jnp
fnstsw
cmp
mov
jnp
xor
shll
sub
sub
xor
aam
js
xchg
mov
dec
stos
jge
out
push
sbb
aad
stos
mov
dec
dec
dec
mov
mov
sub
inc
lods
cmpl
lea
mov
negb
inc
outsb
sub
mov
sbb
ljmp
mov
cwtl
mov
xchg
sti
add
dec
lcall
dec
sbb
inc
jmp
sbb
in
push
out
xor
cltd
mov
xor
test
shlb
loope
aam
xchg
or
mov
sbb
fldl
out
cmp
stos
loop
add
or
int
xorl
movsb
add
pop
arpl
repnz
sbb
pop
out
pop
int3
into
iret
iret
mov
pop
pop
out
inc
add
and
mov
dec
xchg
lock
and
adc
test
or
push
sub
pop
inc
stc
adc
and
xor
mov
mov
enter
mov
imul
xchg
dec
cld
push
rcrb
hlt
and
inc
arpl
lods
es
xor
inc
pop
mov
push
fisubrl
fwait
aam
fildl
sbb
pop
aas
xchg
repnz
mov
int
mov
mov
rcrb
mov
xchg
xor
and
je
inc
aas
push
cwtl
in
clc
and
push
xor
adc
pop
lds
adc
inc
cmp
inc
popf
dec
mov
mov
xlat
inc
es
dec
dec
iret
fwait
pop
fdivp
pop
push
sbb
add
cmp
jns
test
pop
pop
shlb
inc
pop
mov
int
out
adc
sub
bound
roll
push
push
lcall
ljmp
push
pop
aaa
les
add
repz
add
and
inc
je
adc
xchg
mov
fidivrs
cmpb
rcrb
mov
andl
mov
rcr
call
xchg
xor
aam
in
sub
sbb
cmc
xchg
xor
mov
mov
repz
pop
xchg
pop
dec
dec
push
xchg
and
out
and
inc
sahf
ja
add
xor
ljmp
xchg
aad
jecxz
jg
dec
add
es
cmp
cmp
dec
sbb
xor
or
stos
test
pop
pop
repnz
inc
adc
jne
pop
xor
ret
dec
sub
rcrb
xor
in
stc
cmp
lret
jge
xchg
mov
inc
xlat
outsl
add
loope
mov
sbb
lods
dec
inc
mov
subb
iret
mov
push
rolb
cmpsl
cli
fwait
xchg
push
push
scas
std
in
mov
aad
pop
sbb
or
leave
sbb
mov
sub
mov
mov
push
insl
lcall
addr16
adc
add
subl
or
add
add
mov
movl
movl
mov
jmp
movl
jle
push
pushl
call
andl
adc
xor
xor
mov
sub
and
not
and
movzwl
adc
cmpl
mov
movl
movzbl
mov
jmp
movl
movl
jbe
push
push
push
pushl
call
add
sbb
sbb
xor
add
mov
mov
shrd
adcl
mov
or
mov
addl
jmp
inc
or
add
cltd
or
lahf
xlat
testl
sub
jb
addr16
in
call
lahf
xchg
call
movsl
out
outsl
loope
stos
xchg
cmpsb
mov
push
jne
xlat
jns
out
mov
fs
xchg
mov
pop
pop
cmp
pop
fiaddl
mov
rorl
in
jb
scas
push
outsl
lds
add
iret
push
les
je
jecxz
and
pop
push
cltd
loop
cmp
or
xchg
movsl
test
out
push
frndint
test
fmul
xor
imul
das
test
filds
loope
cmpsb
loopne
lret
jbe
mov
outsb
xchg
in
inc
mov
inc
out
js
mov
fdivrl
mov
pop
mov
mov
ss
adc
or
lea
lret
ljmp
push
add
or
sbb
in
js
and
xor
mov
and
sbb
mov
cmc
ja
adc
lahf
dec
and
xor
xlat
enter
fdiv
movsl
les
pop
aas
popa
bound
pop
out
cmp
mov
cwtl
push
mov
adc
dec
adc
sbb
stos
movsl
adc
insl
adc
lods
xlat
cld
xlat
inc
adc
and
call
stos
xor
add
imul
and
fisubrl
and
pop
push
sbb
push
mov
movsl
mov
aaa
ds
hlt
add
je
sub
subl
cmp
aaa
adc
pop
lret
xchg
pop
dec
ret
cmp
es
cld
adc
movsl
add
sub
adc
divl
ret
shll
icebp
push
mov
mov
sub
add
and
mov
jge
pop
pushf
outsl
popf
inc
cld
add
movl
and
and
leave
pop
xor
inc
jae
ja
xor
rcl
and
cmc
dec
or
dec
stos
xlat
ljmp
sub
jns
add
mov
push
dec
cmc
movsl
scas
cwtl
lock
sub
jg
sub
xchg
bound
scas
mov
in
xchg
jmp
push
sarb
sbb
hlt
cmp
adc
jbe
xchg
sarl
pop
jno
shll
outsl
xchg
push
cmpsl
arpl
scas
cmp
jp
out
dec
fs
mov
add
out
ror
dec
fisttpl
xor
pop
jo
lea
sub
push
ret
mov
mov
cwtl
pop
insl
xlat
jecxz
sbb
cmp
add
rcrb
insb
push
scas
adc
clc
push
xchg
out
in
inc
aaa
jae
cmpsl
cmp
mov
sbb
add
aaa
aaa
push
mov
js
pop
or
inc
xchg
push
mov
sub
mov
lret
jecxz
jns
data16
adc
cmp
ljmp
lock
xchg
in
xchg
ret
or
xor
pusha
cmp
lods
in
inc
push
int3
jno
in
adc
pop
cmp
or
mov
adc
enter
cltd
mov
fsubp
or
pop
test
cwtl
mov
add
ret
sbb
xchg
mov
idivb
ret
icebp
push
lea
add
ljmp
stos
jns
xchg
or
push
out
cmpsb
or
xchg
or
cmp
std
inc
imul
fwait
or
jle
pop
loop
cwtl
jmp
sub
fisubrl
pop
test
push
ja
sbb
push
add
add
mov
repnz
shll
sub
and
xchg
sbb
fsubrs
aas
jg
popa
jecxz
gs
ret
and
cmp
loope
inc
sub
das
jns
xor
push
rcll
or
iret
pop
xlat
pusha
into
sbbl
out
xchg
mov
pop
rolb
test
add
mov
pop
jle
inc
lock
xchg
push
test
add
jmp
mov
inc
idivb
mov
rorb
lret
lcall
int
adc
xlat
and
out
sub
mov
dec
pushf
in
adc
pop
jecxz
inc
push
test
cli
dec
jle
lds
sub
and
popa
negb
shrl
cli
test
mov
add
cli
or
cmp
lds
mov
leave
ss
sbb
push
xchg
mov
test
out
ljmp
in
push
xor
xor
outsl
xor
and
add
xor
mov
dec
sub
jo
and
xchg
int
pop
ljmp
int
subl
xchg
cmp
testl
xchg
fcmovnb
pusha
add
push
xor
jb
addr16
and
insb
xor
xchg
mov
sbb
repz
xchg
clc
cld
adcb
arpl
jp
sbb
js
lds
mov
sub
sti
push
stos
filds
cmp
xchg
ds
orl
sti
sbb
push
xchg
lds
js
lods
iret
jge
hlt
xchg
loopne
add
out
dec
xor
jg
xchg
pop
rcrb
add
lret
lcall
jb,pn
sub
fst
mov
or
push
outsl
das
cmpsl
jg
push
mov
mov
movsl
jne
stos
push
cmp
dec
lods
cmpl
das
xchg
mov
lahf
out
rcrl
adc
push
pop
sarl
lea
jmp
jl
mov
ljmp
stos
add
xchg
xor
add
aad
leave
pop
pop
or
pop
loope
fldcw
dec
jle
psrlq
sub
pop
aam
dec
inc
add
subb
add
ficoms
clc
xor
out
push
jecxz
sub
push
stos
out
cmc
test
mov
push
movsl
aam
cltd
iret
mov
inc
dec
and
insl
xor
ret
stos
pop
sbb
add
popf
xchg
sbb
mov
jecxz
popa
leave
lods
ret
lcall
imul
mov
pop
xor
xchg
js
jecxz
cmp
or
jg
pop
mov
mov
adc
xchg
cli
out
push
in
loop
icebp
adc
cwtl
sub
fsubp
pop
outsb
outsl
xlat
adc
inc
cmp
enter
push
add
cmc
popa
movsb
push
jo
test
loope
sub
adc
pop
pop
mov
and
dec
iret
enter
mov
daa
aad
cmp
in
popa
xor
stos
enter
iret
jecxz
icebp
adc
pop
ss
scas
mov
notl
sub
lcall
push
sub
pushf
xchg
jbe
sub
xchg
fcomps
out
ret
int3
bound
mulb
inc
mov
pop
cmp
repnz
lock
aam
std
ret
push
cmpsl
and
lret
aaa
push
sbb
outsb
hlt
adc
mov
imul
mov
into
mov
cltd
scas
mov
and
outsb
movsb
jg
pop
sbb
mov
loope
xor
movl
or
shr
mov
subl
mov
mov
addl
mov
adcl
shrd
shr
mov
cmpl
not
mov
movl
mov
jmp
mov
mov
jb
pushl
pushl
pushl
pushl
push
pushl
call
or
adcl
movl
sub
and
subl
subl
mov
mov
xor
xor
adcl
or
adcl
shl
add
add
add
mov
mov
adc
mov
and
shrd
cmpl
movl
not
mov
mov
jmp
movl
movl
jge
pushl
pushl
push
pushl
push
push
call
sbb
add
or
or
xor
or
add
mov
movl
cmpl
mov
movl
mov
jmp
movl
movl
jg
push
push
pushl
call
add
sbbl
mov
adc
mov
xor
mov
addl
sub
shr
movl
mov
or
mov
addl
xor
shl
cmpl
movl
mov
not
jmp
movl
ja
pushl
push
push
push
call
xorl
xor
incl
xorl
subl
sub
xor
mov
sub
or
cmpl
mov
mov
movl
jmp
mov
jl
push
call
addl
adc
xor
neg
mov
mov
add
sbb
and
mov
movl
mov
and
mov
movl
mov
add
movl
mov
mov
adc
jmp
ret
mov
dec
rcrl
push
mov
add
jno
push
mov
jecxz
sub
icebp
loop
mov
inc
inc
enter
fwait
sub
cmpsl
data16
jbe
stos
aas
scas
pop
call
cmp
in
pop
cltd
movsb
sub
fbstp
stc
xchg
cmp
push
repz
out
test
pop
or
adc
pop
sbb
mov
mov
stc
rcr
imul
mov
outsb
add
dec
or
clc
lds
lcall
popa
mov
bound
jnp
lea
or
in
in
mov
lret
nop
cmp
mov
pop
pop
cmpb
dec
pop
cmp
push
push
dec
call
and
outsl
xor
stos
mov
ss
push
ja
in
and
dec
repnz
cmp
fildl
jmp
mov
sub
nop
je
outsb
sbb
incb
sbb
jno
xchg
test
sbb
inc
inc
out
test
inc
inc
imul
les
cmc
mov
cmp
xor
and
jecxz
imul
hlt
cmp
cmp
imul
aas
popf
jnp
sbb
pop
jbe
push
cwtl
sub
mov
int
fcomps
mov
inc
pop
addl
mov
leave
xchg
fcoms
mov
mov
cmpsl
xchg
xor
push
mov
push
inc
mov
mov
je
mov
fisubl
cmp
ljmp
mov
andl
lcall
aas
sarb
imul
and
dec
cmp
int3
repz
stc
scas
and
xchg
movsb
arpl
mov
ljmp
dec
xchg
xchg
test
adc
xlat
lods
mov
pop
pushf
xor
pop
out
lds
jnp
or
notb
rcrl
leave
jbe
pushf
cmpsb
add
inc
adc
out
sbb
hlt
push
mov
dec
xchg
in
xlat
in
sbb
in
ss
aad
pop
and
aas
test
xchg
stos
xor
push
call
jae
das
sbb
lret
cmp
test
mov
or
fcompl
push
inc
roll
adc
xchg
stos
les
stc
mov
push
je
mov
add
xor
xchg
fbstp
pop
push
or
std
fucom
in
mov
push
imul
iret
iret
and
mov
sbb
adc
or
jb
addb
divps
test
mov
xor
aad
xchg
or
sbb
pop
test
xchg
int3
js
nop
and
movsb
jmp
test
or
jns
pop
sahf
outsb
stos
lds
jno
out
sarb
cmp
movsb
pop
pop
cmp
xorl
jge
in
pop
cli
mov
in
js
loope
stos
in
into
insb
sub
mov
mov
jnp
inc
adc
cmp
loopne
sub
xor
xchg
shlb
sbb
stc
aas
cmpsb
aaa
cmp
lahf
xchg
inc
xchg
nop
stc
in
ret
es
sub
mov
cltd
jmp
adc
ds
scas
inc
xor
cwtl
sub
add
sub
dec
cltd
mov
mov
add
cmc
xchg
data16
pop
mov
popa
imul
es
push
jno
sbb
call
out
js
loope
mov
sub
fldt
push
mov
sub
rclb
add
pop
adc
adc
mov
xchg
fcoms
and
push
adc
pop
inc
jmp
fcompp
fwait
push
cmp
ljmp
scas
addr16
mov
daa
ja
jno
xor
fsubl
shr
xchg
xchg
xor
call
mov
rcr
cmp
gs
push
mov
sub
enter
pop
aad
stc
movsb
push
aas
aam
loope
push
push
sarl
sub
pop
outsl
xchg
adc
popf
ror
lcall
xor
pop
arpl
xlat
adc
int
cmp
mov
cmp
lock
loop
push
jns
std
std
icebp
lock
mov
lods
adc
sbb
das
add
lea
sahf
jne
sahf
cmp
ret
sbb
nop
xor
shrl
popf
imul
cmp
fnsave
mov
cs
mov
and
jecxz
push
and
jl
pop
cmp
xor
mov
jmp
popa
mov
adc
mov
push
out
stos
inc
call
outsl
es
stos
rorb
lock
cld
xor
xchg
push
mov
or
dec
jl
loopne
pop
adc
jp
pop
iret
jb
jecxz
sbb
sbb
iret
adc
outsb
mov
roll
mov
test
pop
xchg
jbe
or
pop
lcall
sarb
neg
lret
mov
mov
divl
mull
mov
je
iret
dec
pop
adc
push
dec
ret
out
aas
push
mov
and
push
arpl
repz
mov
into
add
fidivrl
notl
daa
sub
test
cs
ds
outsb
jnp
gs
loope
andb
add
jmp
ret
hlt
popf
insl
pop
mov
mov
pop
add
or
mov
push
call
xchg
jge
jbe
jg
aad
pop
movsl
inc
sahf
and
lods
push
mov
and
jle
mov
sbbb
movsb
jp
lock
sbb
pop
sub
jl
sub
jmp
negb
out
jl
push
pop
sti
sub
or
push
mov
lahf
leave
dec
sti
mov
adc
and
add
jnp
jae
add
dec
dec
aaa
xlat
xor
insl
jmp
lods
push
mov
xchg
mov
xor
cmp
mov
push
mov
call
imul
movsb
pusha
or
cmp
scas
ja
mov
add
or
mov
fsts
in
ret
mov
in
xchg
push
xor
push
outsb
add
test
xchg
jecxz
data16
adc
scas
inc
xor
test
push
fdivl
cmc
mov
dec
xchg
mov
shlb
ja
add
popa
inc
enter
sbb
into
or
loope
mov
or
lahf
clc
jle
gs
fcmovu
roll
cmp
inc
cli
clc
fwait
jg
out
out
dec
sarb
fstpt
nop
test
sarl
lret
sbb
test
adc
lret
push
test
popf
bound
jmp
xor
hlt
pop
movsl
outsl
leave
shlb
mov
add
and
sti
int3
ss
mov
call
movsb
sbb
test
mov
movl
jmp
lods
jp
scas
adc
xchg
mov
pop
fisttpl
ja
rcll
lret
scas
xor
or
mov
imul
and
push
popa
leave
dec
xchg
xorb
push
ficoms
jno
pop
jnp
jmp
mov
clc
out
jae
enter
test
sub
xchg
dec
lds
jp
push
add
test
push
and
out
lods
into
std
out
call
data16
mov
addb
xchg
into
mov
repnz
leave
push
xchg
cmp
xchg
pusha
or
inc
mov
and
dec
jnp
lea
pusha
pop
jbe
int
dec
or
lds
jnp
or
ljmp
jns
enter
rcl
orb
xchg
add
addr16
or
pushf
push
scas
jmp
ss
jle
out
sbb
sub
mov
loope
aam
cld
out
xchg
lea
push
sbb
mov
pop
fsub
movl
fwait
mov
into
mov
sbb
test
xchg
xchg
sub
addr16
std
data16
push
int3
mov
jp
bound
pxor
add
cmpsl
pop
jns
push
adc
lds
push
and
in
test
insl
in
std
mov
sysexit
std
adc
je
and
xchg
and
mov
sbb
and
dec
loop
add
inc
xor
fs
adc
fsubrs
dec
cwtl
rep
inc
push
cltd
or
sbb
inc
orl
push
jno
xchg
aam
sbb
mov
lahf
out
dec
cmp
scas
test
dec
push
fwait
int3
sbb
scas
sub
sbb
mov
xchg
pop
arpl
inc
xchg
ret
dec
mov
push
inc
addr16
cs
addr16
je
pop
icebp
inc
test
jl
adc
in
loope
test
fstpl
jmp
pop
push
mov
ja
mov
cmpsb
pop
xor
add
fsubrs
insb
add
xor
push
test
incl
or
sub
xchg
mov
mov
dec
and
lret
int3
xchg
pop
bound
sub
push
sbb
or
adc
push
js
mov
icebp
inc
xor
ffreep
cli
pop
cmp
dec
add
pop
test
push
cmp
sbb
outsb
or
into
cmp
popa
ja
lcall
stos
test
fdiv
xlat
cmp
sbb
cmp
aaa
mov
mov
aam
mov
xchg
lret
jo
or
pop
scas
out
xchg
cld
add
sbb
jge
jnp
xor
pop
mov
xor
pop
shlb
push
mov
xchg
add
loop
cmp
mov
mov
push
sbb
dec
dec
in
inc
xor
movups
std
xor
inc
xor
dec
pop
sbb
xchg
dec
dec
ljmp
movsl
and
xchg
in
add
ljmp
aam
iret
test
and
mov
orb
xor
adc
cwtl
sbb
out
mov
pop
mov
aas
jp
outsl
xor
aad
xor
cmp
xlat
xor
sbb
adc
and
mov
push
sub
push
and
pop
adcl
icebp
mov
jg
ja
pushl
adc
shrl
and
cmpl
lods
ret
mov
xchg
dec
lahf
push
sahf
fwait
daa
clc
pushf
rolb
andl
or
loopne
imul
popf
jg
push
outsb
fs
lea
adc
mov
jmp
push
aaa
popf
and
ja
adc
stc
loop
mov
mov
cmpsb
aad
out
outsb
jge
mov
int3
sarb
out
cmp
xchg
aam
out
mov
movsb
test
mov
pop
push
push
das
pushl
sahf
movsb
push
and
fdivrs
xchg
jnp
loope
or
pop
xor
lahf
pop
scas
rcrl
mov
cmp
ja
popf
inc
mov
cmp
hlt
jbe
pop
mov
push
push
push
es
mov
mov
test
aad
sti
in
or
addl
cld
popf
idivb
daa
out
movsb
and
ret
jbe
mov
js
ljmp
xor
add
or
lcall
jle
inc
fmul
test
xchg
mov
loope
fiadds
xor
sub
sbb
lret
dec
out
cwtl
lods
push
adc
and
mov
je
xchg
xor
or
lcall
dec
inc
push
sbb
outsl
sti
sbb
push
mov
ss
push
xor
and
pop
cmp
xchg
movsb
fwait
lods
js
sti
lods
mov
mov
mov
mov
lods
xor
or
inc
jg
push
aam
aaa
cbtw
rolb
or
int
imul
xchg
sub
out
push
call
fstpt
sub
dec
cmove
jle
mov
xor
pop
in
das
out
push
xchg
push
xchg
mov
nop
inc
adc
repnz
sub
icebp
ljmp
test
jne
dec
sub
iret
aas
add
cmc
addr16
in
cs
xor
rcr
mov
push
adc
push
into
and
push
stc
sbb
jmp
sub
inc
roll
sub
cmp
in
jecxz
mov
stc
cli
push
loop
stos
dec
bound
fst
cmp
sbb
imul
ss
into
sub
pop
jp
lahf
xchg
jb
imul
stos
mov
roll
test
push
cltd
aad
mov
test
pop
pop
mov
lods
pop
into
and
mov
testl
push
sbb
xchg
jns,pn
repnz
xchg
add
add
dec
or
push
fsub
out
mov
push
jmp
and
cmpsl
mov
arpl
sar
loop
scas
sbb
out
adc
dec
stos
scas
mov
dec
fdivrl
xchg
scas
sbb
push
push
mov
xchg
dec
popa
fisttpl
negl
pop
cmp
imul
mov
and
hlt
in
xchg
sbb
mov
add
mov
das
pop
mov
and
icebp
int3
inc
cmp
xor
jo
mov
jae
stc
sbb
xor
sbb
sbb
sub
mov
jb
jae
xchg
icebp
jecxz
or
push
aam
cmp
bound
imul
insl
dec
and
jo
cmpl
cmpsl
pop
push
push
jle
incb
add
mov
cltd
adc
pop
dec
push
fs
cli
push
push
cli
lcall
dec
xorb
mov
push
mov
jo
cmpsb
call
push
test
jecxz
pop
mov
cmp
shrl
mov
mov
inc
rorb
enter
pop
add
add
dec
push
adc
call
int
xchg
add
lahf
mov
push
ficoml
xchg
cmpsl
pop
cltd
sub
pop
and
cs
mov
and
jl
cmp
mov
movsb
inc
dec
xchg
xchg
mov
push
out
fwait
gs
sti
push
leave
movsb
and
mov
ret
inc
lock
add
sbb
mov
xchg
push
out
or
mov
lret
cmp
mov
movsl
clc
daa
push
cltd
iret
shlb
jp
add
pop
mov
xchg
jns
mov
xor
stos
loopne
daa
lds
sub
xchg
hlt
ss
loop,pn
decb
push
std
inc
dec
js
movsb
pop
test
xor
cmc
jl
push
mov
ss
cmp
cli
mov
mov
mov
xor
push
push
xchg
pop
xchg
or
xor
sbb
add
lret
rcl
pop
into
inc
mov
enter
jg
pop
lcall
xchg
xor
push
cltd
je
xor
jle
lds
adc
jecxz
mov
jne
pusha
sub
and
shll
movsl
xchg
fists
jbe
in
pop
jbe
jg
adc
push
xchg
cmovnp
roll
add
sub
ja
mov
mov
mov
mov
push
in
divl
outsb
les
arpl
mov
xor
popa
xchg
es
jl,pn
outsl
push
xchg
repnz
pop
mov
pop
icebp
into
or
add
adc
mov
add
dec
jne
mov
xchg
out
push
inc
and
cmp
ret
mov
lds
push
pop
mov
pop
cmp
mov
pop
sbb
dec
pop
mov
inc
push
push
insb
push
lock
add
jne
insb
ljmp
sub
repnz
mov
xlat
push
scas
fbstp
xor
orb
jmp
adc
pop
addr16
ja
adc
outsb
insl
sarb
dec
mov
iret
out
xchg
adc
mov
pop
inc
push
push
ljmp
inc
stc
jbe
in
sub
cmp
push
xchg
mov
fwait
mulb
push
lods
push
mov
mov
or
aas
test
addr16
loope
int
and
xor
lret
jg
dec
jbe
mov
sbb
movsb
popa
faddl
in
popf
xchg
lahf
xchg
fldl
lds
cmp
mov
xor
dec
subl
test
cs
mov
test
xor
in
jmp
test
mov
rolb
adc
pop
dec
xchg
insl
loope
pushf
out
jg
rclb
sbbl
inc
pop
pop
mov
ja
ja
mov
leave
xchg
cmovbe
jb
xor
cltd
lahf
mov
jo
cmpsb
mov
dec
sub
jb
xor
les
faddl
mov
xor
cmp
dec
push
pop
enter
inc
push
jns
jnp
dec
cmp
aad
dec
out
xchg
jo
jne
test
lock
inc
push
push
jl
sbb
add
inc
movsl
fdivrl
xchg
adc
sub
fidivs
or
pop
data16
popa
insb
data16
in
add
jno
mov
xlat
fnsave
mov
mov
push
ss
pop
jns
es
sbb
inc
jb
pop
lcall
dec
out
xor
xor
repnz
inc
adc
xor
jbe
mov
cmp
xchg
or
xor
mov
das
push
or
mov
repz
shll
and
xchg
mov
lret
inc
dec
insb
adcl
pop
jne
arpl
push
stos
popf
in
testb
movsb
ljmp
push
es
dec
jge
aam
es
fists
fdivrs
xchg
call
add
decl
ud0
insb
mov
mov
shll
outsl
dec
cmpsl
sbb
dec
repz
sub
aas
jge
push
adcl
dec
mov
xor
stos
cltd
leave
or
dec
ljmp
ret
pavgb
jle
int
cmp
cld
ds
jnp
pop
jnp
xor
out
outsl
jle
or
mov
es
cmp
sbb
rclb
mov
fwait
mov
push
into
jnp
and
xchg
aaa
jne
mov
push
repz
add
adc
xchg
inc
sub
jne
sti
bound
andb
rsm
lcall
and
jnp
dec
pop
push
shlb
cltd
out
push
or
nop
std
imul
and
sub
hlt
inc
xor
ret
pop
cli
pop
inc
mov
out
insb
and
int3
movsl
out
outsl
sbb
fs
lds
loop
sti
mov
jl
daa
cmc
aaa
mov
xchg
jo
sbb
sub
mov
insb
scas
fwait
addr16
stc
adc
push
data16
mov
add
dec
sub
ljmp
subl
stos
or
mov
jb
adc
mov
ss
pop
pop
cmc
jno
xor
rcr
dec
shlb
lret
sbb
push
mov
gs
or
enter
mov
int
or
add
cwtl
xchg
hlt
sbb
leave
rorb
adc
sbb
jecxz
ja
cmpsb
push
cltd
stos
or
fstpl
push
movsl
inc
mov
imull
loop
xchg
push
insb
pop
dec
scas
jnp
in
jecxz
jecxz
or
pop
ds
mov
loop
sbb
inc
push
and
mov
arpl
cmp
mov
mov
popl
mov
cmp
cld
fstps
nop
cmpsb
cli
dec
pop
test
xchg
push
aam
sbb
imul
add
ja
adc
in
push
jp
push
sub
cmp
cmc
mov
aam
loop
inc
and
div
testl
jle
jp
jae
push
movsl
xor
daa
sarb
sbb
pop
iret
shlb
cmp
mov
imul
sub
test
out
or
into
in
xor
repz
stos
push
dec
add
jp
sbb
nop
les
mov
test
das
aas
sub
pop
xchg
leave
push
in
mov
sahf
lock
subl
inc
arpl
stos
cs
stos
cmp
mov
sub
and
test
jne
fs
push
shrl
cmpb
das
or
cmp
in
andb
inc
add
cmp
adc
pusha
in
pop
out
adc
push
sahf
scas
mov
jmp
mov
mov
add
ret
sub
adc
ljmp
jecxz
movsb
pop
cmp
sub
dec
aas
mov
add
sbb
or
or
enter
xlat
fsubrl
mov
sar
sbb
push
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
jmp
in
in
data16
push
sbb
xor
ja
jnp
pop
aad
imul
imul
or
popa
or
jns
shlb
ja
mov
sbb
je
cwtl
or
lret
dec
cld
sahf
push
mov
adc
sub
repz
dec
insl
add
xchg
sub
xchg
sbbb
mov
jb
lods
cwtl
xor
popf
mov
nop
gs
xchg
movhps
cmc
xor
gs
dec
adc
rcrb
push
inc
ss
jno
inc
add
sub
sbb
lea
dec
ret
pop
sub
jmp
cld
nop
lret
pop
ficoms
and
jns
add
jno
sub
xchg
cli
adc
in
icebp
es
ljmp
pop
cmp
loopne
mov
inc
or
inc
shll
les
test
jne
lods
mov
add
cld
cmc
sbb
int
cmc
ret
xchg
sti
cwtl
jo
mov
das
mov
xchg
leave
jne
ds
pop
jae
or
and
dec
bound
mov
xlat
pop
mov
ljmp
jo
leave
inc
inc
std
mov
clc
mov
jle
mov
mov
ss
or
mov
dec
pop
adc
sbb
fistps
jg
add
adc
loop
rorl
jbe
jno
mov
cwtl
popa
or
sbb
mov
popa
cmp
jnp
xchg
push
ret
jge
clc
inc
xchg
jo
shrl
or
mov
jne
mov
mov
jg
notl
sbb
out
pop
icebp
mov
fadd
and
fldl
inc
arpl
in
sbb
aaa
mov
cmc
jns
mov
jno
faddl
push
test
adc
xchg
or
repnz
out
notb
icebp
mov
add
xorb
das
shlb
fsts
sbb
ds
xor
addl
bound
scas
insl
pushf
sbb
sti
push
mov
xor
arpl
inc
dec
data16
xor
fistl
xor
xor
jg
sbb
in
jmp
aaa
in
fsubrs
push
mov
fistps
loopne
jb
xor
fs
jno
inc
test
imul
mov
inc
shlb
shrl
add
or
nopl
dec
sbb
repz
es
fsubs
fistpll
loopne
inc
mov
sub
jle
jecxz
hlt
sbb
hlt
xor
pop
in
das
add
rcr
jp
or
imul
aam
fsubr
shll
xor
sub
push
pop
je
and
bound
fcompl
lds
stos
hlt
pop
cmpsb
and
lods
push
inc
out
lock
mov
jg
add
jae
leave
mov
fadd
enter
jbe
lret
int
pop
outsl
ret
scas
push
xchg
popf
lahf
adc
mov
jb
mov
sub
mov
push
pop
xor
data16
out
mov
and
pop
inc
lods
dec
mov
lret
out
and
cltd
popa
sub
dec
shl
sbbb
ret
je
in
xor
cmpsl
jns
ficompl
flds
dec
mov
jecxz
adc
in
add
dec
xor
jno
popf
sub
js
ja
cmp
xorb
ds
clc
dec
fwait
sub
daa
in
jno
push
loop
cld
mov
push
fs
jg
fildl
rorb
sub
sub
rorl
or
outsb
dec
stc
cmpsb
sub
fs
or
ficompl
stos
call
out
out
sbb
jle
out
jl
icebp
les
rol
ret
repnz
lret
movsb
aad
push
ds
clc
mov
aaa
pop
push
pop
mov
mov
add
js
inc
mov
cld
jg
mov
hlt
rolb
dec
push
mov
pop
jmp
mov
dec
xchg
das
add
sti
inc
pop
das
inc
out
mov
inc
sbb
in
addl
sub
mov
xor
pop
push
push
sub
jg
lods
ljmp
jns
aam
xchg
fisttps
xchg
repz
dec
xor
add
stos
fldl2t
push
in
shlb
xchg
out
ret
cmp
cli
xchg
cwtl
push
jle
mov
adc
push
push
pop
cli
sbbl
movsb
imulb
inc
loope
dec
and
xor
jbe
jmp
fdivr
arpl
adc
ss
fisttpl
enter
adcl
pop
adc
dec
jmp
fs
mov
adc
test
bound
cmp
mov
fists
ficoml
pop
push
out
test
mov
mov
das
shlb
mov
fcomps
sbb
ljmp
mov
mov
xchg
lahf
mov
mov
in
dec
sub
daa
outsb
orb
sub
js
loopne
into
pusha
pop
cmpsb
mov
xchg
cmpsb
mov
or
fcomp
loop
sbb
loop
divl
inc
lret
frstor
xchg
mov
call
xor
das
icebp
cmpsb
out
mov
dec
push
jbe
leave
dec
out
xor
cmp
or
adc
leave
outsb
cmpsb
xchg
pusha
bound
dec
lret
mov
xchg
mov
shlb
mov
cmp
or
repz
dec
sbb
in
sbb
sarb
mov
mov
xor
mov
dec
cmc
dec
lods
cli
subl
xor
outsl
sbb
adc
xchg
int
cs
test
jg
dec
xchg
clc
andps
or
sbb
xor
hlt
pop
xchg
add
add
cmp
dec
test
insl
repz
push
mov
sbb
nop
sbb
xchg
sub
dec
fistps
mov
in
data16
xchg
mov
mov
filds
movsl
xor
test
in
and
xor
mov
pop
pop
jl
jmp
insl
jb
mov
add
push
sbb
call
mov
push
iret
mov
sub
es
in
push
rclb
daa
dec
mov
cmpl
inc
inc
andl
adcb
jle
add
in
adc
mov
xchg
testl
xchg
aaa
mov
popa
and
cmp
adc
jo
in
cmp
pop
dec
sub
rcl
and
xchg
sahf
fstpt
mov
sbb
iret
inc
mov
movsl
jp
and
hlt
fcmovnu
cmp
add
xor
adc
xchg
ja
out
cmp
cmpsl
in
aaa
test
lock
loope
jmp
xor
inc
cmpsb
cmp
and
dec
rorb
push
mov
xor
xor
or
mov
mov
xor
jmp
outsb
hlt
xorl
push
mov
ja
add
fs
mov
mov
dec
insb
testb
sub
aad
pop
xchg
out
repnz
push
cwtl
ss
gs
rorb
xchg
loopne
xor
cli
ret
mov
mov
ret
add
xlat
pop
jl
lret
push
push
and
cld
adc
pushf
andb
sbb
jle
vmovapd
add
insl
pop
out
leave
cmp
adc
or
xchg
inc
cwtl
or
push
xchg
ljmp
sbb
shll
dec
inc
ljmp
adc
mov
cmc
bound
adc
insl
das
int3
pop
mov
lds
std
add
inc
xor
fistpl
enter
adc
pusha
std
xor
sub
dec
sbb
mov
shlb
sub
lret
fildl
cmc
push
push
xor
test
fldl
sub
xchg
push
jne
push
call
jp
iret
xor
in
rcrb
inc
jb
les
mov
enter
mov
test
lea
sub
pop
sub
mov
shr
insb
mov
xor
add
cmpb
and
gs
xor
int
and
add
sbb
add
push
cli
sbbl
loop
clc
and
xchg
bound
pop
sbb
or
or
push
jno
ja
fidivl
test
test
mov
xchg
mov
ror
fdivs
cmc
arpl
dec
into
jp
pop
mov
iret
jbe
sub
out
fsubrl
imul
push
mov
and
sbb
xor
xor
in
mov
xchg
cmp
ret
xchg
xor
loopne
pop
das
scas
out
cs
scas
or
sti
addb
lret
xor
mov
fucom
push
sbb
dec
rcr
mov
mov
pop
rcrb
xchg
add
mov
cmp
mov
pop
aam
aas
movsl
xchg
scas
aas
mov
imul
hlt
dec
jne
arpl
sub
adc
imul
in
lods
imul
inc
or
xchg
aaa
stc
cmpsl
loop
cld
push
sarb
and
xor
int
repnz
jno
in
ja
cmp
movsb
sbb
call
ja
std
jg
in
aam
cli
dec
adc
test
push
pop
mov
out
inc
pop
das
push
jle
es
mov
scas
in
int3
lods
arpl
fstps
adc
je
dec
cmc
rcrb
xchg
mov
mov
and
or
cmc
fdiv
int3
ret
cmpsb
outsb
lea
outsb
push
sti
in
mov
mov
enter
sub
mov
dec
es
cmp
cmp
push
jae
loopne
lret
outsb
pop
into
mov
mov
push
stc
xor
xor
jbe
jbe
arpl
lods
in
jge
sbbb
xor
or
into
insb
dec
jmp
adc
iret
insl
in
adc
shrl
pop
jecxz
xor
js
inc
sub
inc
imull
push
adcl
pop
ds
ret
jne
dec
data16
js,pt
enter
mov
mov
xchg
mov
pop
cmc
popa
lahf
int
cmp
add
push
xchg
inc
jle
leave
jge
cmp
popa
popa
mov
loopne
cmp
push
das
cmpsl
lret
xor
cli
cmp
jne
test
lcall
sub
enter
mov
jnp
mov
jmp
test
stos
lahf
xor
dec
xchg
or
mov
xor
arpl
inc
fsubp
push
aaa
ss
lods
lahf
cs
cmc
int3
movsb
xor
and
cld
test
test
outsl
dec
movsb
fs
sub
int
arpl
pusha
aas
sub
fdiv
stos
lret
sahf
jnp
sbb
xchg
inc
rcl
fisubs
jg
and
or
sbb
sahf
clc
push
jno
insl
inc
lret
cmpsl
addl
lahf
aas
or
call
pop
push
pop
nop
mov
cmpsl
or
out
sbb
int
sub
popa
and
add
push
or
xchg
mov
sbb
xlat
gs
scas
rcr
cs
lods
lahf
jg
cmc
in
push
outsl
outsb
mov
jb
int3
inc
push
cmp
ret
mov
xchg
aad
inc
adc
cs
dec
lret
es
pop
add
sub
iret
xor
dec
ret
mov
and
bsf
xlat
std
pop
arpl
ror
sub
aam
jle
shll
out
mov
mov
adc
cwtl
loopne
push
mov
sub
ss
add
mov
scas
dec
xlat
fwait
loope
aad
dec
xor
or
loop
or
xchg
push
add
std
ficoml
jl
push
push
xchg
pop
aaa
dec
jg
adc
and
dec
push
xor
cmpsl
adc
mov
add
add
jb
mov
or
lret
push
ret
jo
sahf
outsb
aas
mov
insl
insl
test
iret
mov
shlb
mov
loop
pop
adc
out
dec
pop
pusha
sahf
add
out
out
inc
ds
daa
pop
mov
in
pop
test
or
dec
pop
push
mov
xor
shll
inc
jl
push
cmp
ficomps
mov
xchg
mov
mov
enter
adc
dec
push
fsubrl
mov
push
jmp
js
icebp
push
cltd
adc
dec
out
dec
leave
sti
int3
cmp
cltd
push
adc
adc
repnz
add
cmp
std
addr16
mov
ss
arpl
cmp
test
stc
negl
lods
les
into
xchg
jnp
lcall
andl
jmp
add
jne
fs
daa
loop
je
adc
sbb
mov
sbb
cvtpi2ps
mov
sbb
test
jp
aas
pop
add
rolb
leave
cmp
push
inc
dec
pop
adc
add
out
push
adc
ds
or
inc
adc
mov
popa
cmp
xor
xchg
shlb
cmp
popf
cs
cs
aad
scas
mov
leavew
mov
mov
mov
fld
cmp
insl
ljmp
xchg
leave
add
nop
dec
adc
cmp
daa
sbb
dec
jb
lods
das
test
leave
sti
push
imul
jp
sub
cmp
add
jns
jg
scas
dec
popa
inc
ss
les
test
push
xor
ljmp
dec
in
xchg
adc
or
fsts
or
jb
stos
jno
lods
push
or
jnp
or
lea
sbb
test
call
je
scas
loope
insb
sub
push
mov
jnp,pt
add
in
insl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
jmp
add
mov
inc
push
cmp
aaa
mov
ja
sub
aaa
cmp
daa
lock
xlat
mov
add
jno
aam
int
dec
cmp
ret
call
push
push
cld
scas
rcll
inc
add
pop
push
cli
mov
inc
aaa
mov
outsl
sahf
mov
pop
outsl
push
pushf
pop
fisubrs
and
mov
repnz
psraw
pop
out
inc
pop
pop
push
adc
mov
cmp
jg
je
inc
insl
dec
adc
nop
gs
mov
leave
cltd
inc
cwtl
dec
xchg
mov
inc
pop
ret
in
mov
enter
mov
mov
inc
or
rorl
xchg
daa
inc
out
jo
adc
mov
or
fcoms
inc
das
in
ja
jle
mov
mov
int3
out
popf
fsubp
sbb
and
shrb
mov
out
faddl
stos
dec
pop
and
cs
ljmp
push
add
loopne,pt
inc
or
adc
pop
mov
xchg
idivb
lcall
ret
stos
rcr
movd
mov
loope
in
int3
popf
bound
cmpsb
pop
or
pop
iret
ds
xor
mov
jno
mov
lock
loopne
mov
push
push
dec
jl
mov
rep
fnstsw
ja
or
xchg
pop
movsl
mov
pop
out
adc
clc
test
shr
mov
fcmovnb
add
jb
repnz
lcall
in
and
sbb
les
push
ja
dec
pop
lea
jle
mov
iret
mov
lds
daa
jne
mulb
cmp
sbb
movsl
cltd
cmp
xorl
sar
outsb
test
fmuls
mov
mov
popf
outsb
mov
fadds
and
mov
mov
mov
fucomp
arpl
inc
or
mov
ljmp
inc
mov
sub
loopne
call
and
pop
jle
stos
jle
mov
or
sbb
adc
jge
jne
call
loop
mov
sbb
imul
inc
sbb
pusha
aaa
and
subl
xchg
lret
lods
pop
adc
iret
xchg
lret
scas
bound
xchg
lret
sbb
aas
insl
aas
lret
pop
addr16
add
call
xor
rcl
jp
std
stc
mov
sub
or
fnstsw
mov
lods
lea
orb
inc
adc
jbe
pusha
leave
les
push
lds
insl
test
mov
mov
sarb
xchg
jp
pop
inc
out
inc
out
xchg
lods
or
xchg
jno
sbb
sbb
lahf
idivl
test
mov
pushl
and
fstl
or
pop
popf
mov
push
gs
stos
loop
mov
pop
xchg
mov
push
rcrb
dec
sub
mov
iret
sbb
pusha
push
test
roll
push
jp
bnd
add
stc
cmp
xchg
stc
pop
and
cmpsl
test
gs
add
repnz
mull
ljmp
push
dec
or
les
dec
js
ficompl
mov
adc
or
pop
cmpsb
lods
mov
lea
ds
pop
dec
fcom
mov
nop
cmp
cmpsl
fdivrl
fstl
setp
adc
fmuls
cwtl
jbe
rcrl
insl
sbb
ljmp
jne
add
sub
pop
jo
mov
int
or
dec
push
gs
add
rcrb
es
xor
and
inc
xchg
adc
scas
bnd
ret
or
mov
in
pop
jnp
sub
push
xchg
cmp
mov
jo
aaa
mov
xchg
imul
stos
jo
out
sbb
jb
mov
add
jmp
int
loope
rcl
xchg
jnp
add
xorl
pop
fs
sub
push
mov
bts
scas
test
add
add
mov
icebp
and
test
xchg
mov
ljmp
fmul
loope
pop
and
ret
push
sarl
subl
lds
push
cltd
cmpsb
leave
gs
enter
lcall
fiadds
data16
pop
jb
rolb
and
inc
dec
ja
adc
sahf
imul
pop
cwtl
addr16
sub
pop
mov
cmpsb
jnp
cmpsb
popf
test
test
cmc
xor
jecxz
jecxz
sub
mov
inc
push
in
cmp
lcall
xor
mov
scas
scas
addr16
enter
std
mov
mov
mov
mov
ja
pushf
xchg
jno
mov
cltd
arpl
es
pushf
pop
xchg
dec
jp
inc
pop
sbb
cmp
rcl
xor
or
mov
or
sbb
stos
jg
rclb
je
ret
add
cld
rol
cmpsb
adc
ffreep
cmp
stos
mov
pop
xchg
pop
mov
pusha
js
insl
fildl
ss
in
imull
jnp
movsl
dec
int3
sub
push
pop
scas
pop
cmp
cltd
xchg
pop
pushf
loopne
je
dec
int
stc
mov
out
mov
iret
pop
mov
in
iret
mov
dec
outsl
add
push
repz
je
in
push
lods
mov
jnp
mov
sbb
dec
dec
mov
mov
cli
imul
xchg
sub
js
add
outsb
or
and
jle
mov
mov
ficoml
mov
incb
mov
out
jg
pop
mov
sub
cld
insl
cwtl
mov
mov
mov
sub
arpl
mov
dec
fwait
inc
jecxz
call
xchg
ret
fs
ljmp
push
js
mov
mov
cltd
lea
adc
je
jecxz
out
and
hlt
xchg
mov
scas
pushf
clc
inc
fidivrl
dec
lret
lea
push
test
popa
dec
sarl
nop
push
or
or
inc
dec
jge
repz
iret
repnz
es
xchg
dec
sbb
sub
ret
or
cmp
and
cli
das
loop
jg
jl
push
mov
sbb
adc
icebp
popf
xor
daa
jmp
icebp
inc
into
push
test
scas
mov
sbb
add
icebp
loope
xchg
mov
pop
std
loopne
lahf
push
jecxz
call
dec
xchg
movsl
rcrl
mov
cmp
je
sbb
bound
xor
in
lods
jp
imull
cmp
or
frstor
jp
dec
test
in
cmp
daa
xchg
insl
sbbb
pop
adc
fwait
xor
cmp
xchg
or
pop
insb
fld
jp
or
push
popl
xchg
pop
rcrl
addb
xor
test
fstpt
in
lahf
flds
jle
movntq
out
dec
mov
mov
setle
test
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
jmp
orl
push
cmpb
cmp
ss
iret
mov
psubw
mov
dec
daa
ja
fcoms
sbb
outsl
push
pop
push
sti
fwait
adc
push
xchg
mov
add
xchg
sub
sbb
push
mov
pop
sbb
sbb
jne
xchg
mov
ss
fs
xchg
fimuls
mov
inc
mov
and
sub
cld
mov
daa
add
mov
cld
mov
loope
js
pop
inc
sub
fidivs
or
aaa
mov
out
daa
outsl
ja
aas
sbb
mov
push
or
daa
sub
stos
lahf
imull
xchg
cmp
pop
inc
xor
xlat
sub
and
aaa
das
mov
dec
das
aam
sbb
fidivrl
push
sti
ret
mov
outsb
adc
or
and
pop
jo
imul
xor
stos
jns
cmp
pushf
mov
enter
into
lahf
mov
cmp
jg
jae
mov
ds
xorl
dec
out
lret
push
out
push
jae
xor
pop
rorl
ljmp
mov
cltd
or
mul
test
mov
push
mov
pop
out
xchg
loopne
dec
std
movl
decl
mov
mov
lods
addb
clc
outsb
xchg
push
cs
out
mov
sub
inc
xchg
mov
cmp
js
sub
enter
xlat
sbb
not
cmpsb
fwait
xchg
cmp
or
mov
adc
jno
test
mov
push
adc
xchg
push
mov
mov
inc
dec
repnz
mov
rcrb
int3
dec
nop
call
xchg
fstpt
cltd
lcall
inc
xlat
cltd
pop
or
push
and
mov
rcrl
xor
add
xor
cli
out
pushf
int
sbb
mov
push
imul
insl
xchg
sahf
jp
mov
pusha
mov
sub
sbb
jns
sbb
fidivrs
cld
xchg
mull
push
mov
sub
fs
xchg
push
sub
int3
hlt
lods
mov
inc
cmp
test
scas
in
xor
mov
ficomps
jg
mov
orl
addr16
sub
aas
push
dec
xlat
or
std
fcomps
mov
dec
adc
je
fidivs
inc
enter
sub
sbb
add
fnsave
xor
ja
sub
add
mov
fdivrs
fcmovnu
in
dec
lret
incb
aaa
dec
fimull
insb
clc
clc
je
popa
cmp
xor
inc
sbb
call
pop
lret
xor
sarl
jmp
mov
push
pushf
push
hlt
mov
test
shl
jp
shll
and
jns
cmp
dec
pop
push
in
in
rcrl
sti
aas
xor
add
je
ficompl
xchg
xchg
popa
jnp
bound
sub
mov
in
rolb
js
jg
or
push
nop
insb
int
push
cmpb
aaa
mov
enter
jl
sbb
popf
xchg
push
dec
cmp
cmp
cmc
xchg
pop
sbb
cmp
in
push
push
mov
clc
ret
out
mov
out
bswap
popf
movsb
pop
mov
jnp
in
add
jg
jnp
pop
dec
dec
lahf
jae
or
mov
push
scas
jne
addr16
dec
jg
xor
mov
sahf
in
mov
fwait
inc
fmuls
decb
adc
xchg
inc
mov
and
push
dec
sahf
xchg
stc
nop
mov
movl
int3
jbe
sbb
fldlg2
inc
sub
loope
mov
or
mov
popf
inc
xchg
enter
mov
decl
lret
lea
pop
scas
sbb
and
shlb
add
ss
pop
pop
stos
xor
fwait
out
fisttps
sub
xchg
add
and
add
mov
mov
push
cli
outsb
test
jae
push
leave
push
or
movsb
inc
popa
push
push
scas
pop
imul
sarl
or
sahf
jns
xor
push
pusha
sarb
and
adcb
cmp
mov
xor
mov
xor
xor
idivb
cwtl
popa
arpl
lret
mov
ror
insb
xchg
aas
sti
mov
leave
add
inc
xchg
fldenv
ja
pop
lcall
push
jp
aam
mov
dec
std
mov
ret
fildll
mov
cmp
pop
cmp
adc
pushf
add
mov
adc
add
in
insb
pop
adc
fimuls
add
stos
push
lret
add
mov
sub
js
and
dec
sub
adcb
jno
and
push
adc
in
int
or
les
bnd
mov
cltd
jecxz
rcl
mov
inc
lahf
add
xchg
popa
mov
mov
es
push
adc
mov
test
jp
mov
sbb
dec
dec
in
push
pusha
push
clc
les
shll
nop
add
mov
inc
lds
and
adc
shl
mov
lahf
movsl
dec
mul
pushf
aam
pop
and
popa
inc
xchg
mov
push
leave
push
or
out
push
cltd
movsl
xor
int3
jnp
lods
jne
xor
xchg
sbb
pop
adc
push
sub
add
sbb
test
les
push
ret
movsl
cmp
sarl
push
xor
mov
loopne
pushl
call
andb
lock
xchg
cmpsl
aam
cltd
adc
or
sti
cwtl
bound
pop
mov
xchg
bound
xor
dec
cld
push
movsl
cmpsb
lods
cmp
arpl
pop
stc
push
lahf
sbb
sub
cmp
xchg
and
filds
pushf
outsl
pusha
bound
stc
push
lea
mov
sbb
pushf
xchg
int
mov
and
jle
xor
cmp
adc
stc
pop
subb
ljmp
cmp
shlb
push
sub
sbb
mov
fwait
in
pop
pop
dec
js
imul
stos
out
lods
cmp
dec
repnz
mov
inc
call
rcr
jmp
and
pop
popa
jmp
loope
test
daa
lods
cmc
mov
mov
xchg
xchg
fdivl
rolb
out
push
ljmp
jno
inc
aam
imulb
ficoms
out
into
in
or
lret
nop
and
outsb
scas
lcall
push
inc
xor
sbb
push
and
iret
lahf
dec
shlb
push
rcr
xor
iret
pop
cli
xchg
jne
out
xor
add
mov
mov
dec
stc
xor
jge
xchg
push
dec
in
or
call
pop
jne
insb
popa
loop
popa
sbb
fbld
pop
jo
cmp
sub
pop
mov
xlat
jns
pop
pop
test
push
mov
in
fidivs
adc
xlat
lods
lock
and
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
jmp
mov
and
setns
dec
fdivr
xchg
pfrcpit1
push
mov
sbb
insl
pop
nop
xlat
movd
sub
rclb
shufps
mov
lea
out
vmovdqu
push
aaa
push
jns
jg
mov
jnp
pop
leave
pop
mov
push
jae
jl
or
into
jg
pop
in
pop
imul
cmp
sub
nop
pop
sbb
pop
mov
mov
addr16
xchg
sti
enter
lods
lock
popf
adc
inc
mov
pop
fsubs
sbb
loopne
shrl
out
inc
adc
mov
movsb
adc
jp
xor
mov
pop
mov
pop
add
jge
adc
sbb
xor
inc
jg
dec
sub
test
imul
mov
xchg
adc
inc
sti
shlb
xchg
andb
fwait
test
sbb
shll
push
popf
subl
daa
mov
ljmp
adc
adc
les
lret
outsb
stc
in
stos
sbb
ret
jbe
pop
arpl
push
int
jp
movb
push
loope
mov
sti
out
movsl
mov
in
dec
xor
mov
add
lahf
mov
pop
adc
inc
rol
mov
sub
dec
lods
dec
mov
out
lods
cmp
xchg
push
sub
jns
sbb
fldenv
fidivs
imul
sbb
addl
add
test
dec
inc
mov
mov
pop
xchg
jl
add
or
std
jnp
pop
out
es
shl
xchg
mov
mov
sub
fsts
mov
jno
xor
sti
xor
inc
mov
jge,pn
sarb
mov
and
xor
mov
or
test
outsl
cwtl
inc
test
xchg
inc
xchg
lods
push
jmp
shll
xchg
xor
inc
iret
mov
inc
iret
outsl
and
mov
xchg
shll
imul
pop
dec
lret
lret
pop
cli
sarl
dec
lret
xchg
cli
insl
mov
push
insl
or
pop
jge
inc
cmp
int3
dec
jle
xor
cmpb
imul
mov
push
aam
mov
fisttpll
inc
outsl
shlb
jecxz
insb
dec
ljmp
xor
sbb
mov
bound
hlt
imul
fwait
jno
aam
add
imul
or
xor
add
incl
fiadds
pop
cmp
inc
outsb
pop
into
in
sar
sbb
jb
jne
imul
mov
pop
pop
ror
inc
nop
shl
out
cmp
jg
xchg
cli
fwait
adc
insl
push
or
add
pop
mov
loopne
inc
out
adc
lret
lret
out
repnz
filds
add
adc
into
fwait
push
outsl
loope
jp
sub
mull
mov
mov
ljmp
push
inc
lods
movsl
cmp
outsl
pop
mov
push
jl
push
test
push
xor
test
std
mov
or
pop
or
ret
inc
xchg
add
mov
cmpsb
dec
xchg
pop
mov
ds
stos
aad
mov
jmp
jp
arpl
out
dec
and
mov
out
mov
divb
or
jge
pop
lret
push
mov
cmpsl
cmp
sub
pusha
mov
clc
jnp
dec
sbb
shll
aad
dec
push
mov
jge
pop
mov
cli
jmp
rcl
jne
ds
icebp
stos
cmpsl
inc
dec
mov
daa
lcall
iret
dec
inc
or
xchg
jmp
pop
push
add
cmp
rcl
dec
pop
into
push
lcall
mov
sarl
jp
lea
mov
rorl
xchg
enter
imul
cmc
frstor
out
aam
lods
cmp
gs
jno
adc
movsb
dec
pop
adc
lods
push
push
add
arpl
mov
test
int
push
out
mov
jnp
fsts
mov
fsubs
or
inc
cwtl
call
in
out
fisttpl
stos
das
loopne
sti
addl
push
icebp
add
shlb
jecxz
mov
std
addl
xlat
cwtl
inc
and
mov
es
push
jo
dec
in
data16
shlb
out
testl
and
mov
pop
mov
sbb
pop
adc
mov
out
xorl
lea
shl
push
sub
dec
aad
mov
mov
mov
xchg
repnz
adc
test
xchg
xorl
int3
out
or
sbb
outsb
fcompl
divb
mov
and
cmp
pop
js
sbb
cltd
lea
stos
sti
shlb
dec
mov
clc
dec
ja
test
jmp
xchg
aam
pop
inc
fwait
and
fsub
dec
jmp
jb
outsb
adc
mov
dec
lret
ret
orb
lea
xchg
mov
jmp
mov
or
push
xor
test
iret
push
jne
je
orb
addr16
fwait
sbb
movsl
sbb
jg
fidivl
lea
mov
loop
aas
jg
loope
jp
cmpsl
sbb
ret
mov
push
xor
cmpsl
mov
stos
push
mov
test
je
xchg
stos
xor
fwait
adc
pop
dec
aaa
imul
gs
lahf
iret
add
addl
int
scas
fs
out
das
push
into
dec
lret
push
jb
ds
arpl
outsl
add
inc
fbstp
xor
out
jae
dec
mov
sbb
mov
imul
mov
cmp
pushf
or
mov
inc
pop
xor
imul
sahf
sbb
stc
mov
jg
in
in
mov
outsb
pop
out
cli
loopne
sub
nop
mov
in
push
push
cmp
mov
outsb
loopne
push
mov
pop
shll
adcb
lret
pop
mov
mov
in
dec
inc
insb
mulb
cwtl
and
xchg
fdivs
pop
dec
arpl
mov
sbb
test
push
in
push
and
and
jmp
jns
frstor
mov
daa
movsb
xchg
in
add
mov
scas
into
push
lea
mov
mov
in
loopne
pop
push
je
cmp
dec
stc
les
fcoml
ljmp
push
xor
dec
cmpsb
vmovss
loope
push
hlt
scas
sarb
push
stos
push
or
xor
test
cld
pop
jl
shl
out
cmp
out
popa
push
dec
mov
sub
xchg
dec
imul
mov
xor
jmp
jns
leave
mov
aam
jns
jge
popa
dec
stos
add
mov
add
imul
xchg
add
shl
outsl
pop
push
sbb
or
xchg
xchg
push
movsb
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
jmp
ret
fwait
mov
and
and
js
orl
pop
movb
sub
add
loope
and
cwtl
mov
movsl
stc
lods
aam
or
dec
mov
mov
jge
or
roll
push
mov
cmpsb
inc
mov
icebp
mov
mov
je,pn
lock
dec
pop
orb
jle
aam
cwtl
adc
mov
aam
xchg
pop
ss
dec
lret
movsb
mov
jecxz
cmp
mov
cmpsb
jnp
jmp
js
add
arpl
orl
sti
pop
xor
lret
sbb
orb
and
imull
movsb
inc
jne
adc
lods
push
cld
sti
bound
mov
inc
cmp
inc
add
test
sub
fidivl
inc
movsb
adc
jns
mov
add
ljmp
and
xor
arpl
outsb
inc
insl
push
pusha
dec
out
daa
sub
call
mov
xchg
popa
cs
mov
pop
jp
sub
ds
insb
cs
sub
inc
mov
inc
out
fisubl
daa
lcall
or
std
jecxz
push
out
jge
loop
adc
mov
adc
ffree
xor
xchg
xchg
cmp
ljmp
jnp
js
fdivs
dec
sub
test
pop
pop
test
pop
add
xor
pop
enter
add
and
in
lods
jp
or
xchg
rorb
lret
pop
lahf
pop
js
xor
hlt
mull
jae
movsl
rolb
mov
mov
mov
dec
mov
adcb
mov
aaa
nop
xlat
add
insl
xlat
test
push
dec
xchg
fistps
or
xlat
sub
out
xchg
rolb
sub
pop
inc
dec
cmp
cmp
hlt
flds
inc
pop
jae
sub
clc
xchg
scas
pop
stos
inc
bound
outsb
and
jle
shlb
pop
mov
movsl
movsb
sti
add
pop
out
adc
xchg
ret
cmpsb
sub
ljmp
ja
inc
jmp
jns
push
pop
xor
sbbl
push
pushf
jle
stc
xor
adc
xchg
dec
xor
out
fdiv
mov
inc
stos
adc
sbb
outsl
adc
push
lea
pop
push
outsb
bound
sub
pop
mov
sbb
add
divb
imul
lahf
dec
out
pop
leave
jo
mov
aad
call
cmpsb
xchg
pusha
mov
es
cmpsl
xor
test
push
pusha
dec
aaa
jmp
data16
push
or
aam
jns
pop
pop
jbe
in
inc
bound
lret
dec
faddp
xchg
cltd
fmuls
cld
xor
add
push
lods
and
jae
jecxz
scas
fs
lods
sub
out
and
push
ror
push
rorb
lcall
das
ret
pop
and
call
aas
fsubs
pop
sbb
ja
call
addr16
cmp
stos
outsl
aam
mov
push
enter
fildll
pushf
test
mov
lock
xor
pop
push
xchg
aaa
incl
iret
mov
jge
imul
sub
fldt
or
jecxz
icebp
cmc
lods
cs
mov
ret
mov
xchg
lods
mov
scas
adc
jge
xor
test
leave
lret
inc
daa
mov
jne
call
pop
xor
sbb
out
or
push
or
adc
push
pop
mov
jno
in
and
bound
pop
mov
imul
pop
mov
int
cwtl
sub
or
push
cmp
lds
xlat
xor
jmp
icebp
scas
jns
clc
adc
cltd
inc
sub
test
xor
or
movsl
xor
sbb
out
pusha
in
dec
add
inc
js
into
cmp
jp
fwait
cmp
lea
and
cmp
je
out
int
xor
js
pop
mov
mov
dec
xchg
insl
rorl
mov
jp
mov
add
fwait
push
inc
or
mov
sbb
ret
fs
xlat
jl
pop
stos
sbb
icebp
iret
scas
pop
push
imul
iret
sti
jbe
jmp
jo
dec
mov
cmp
incb
scas
imul
pop
sbb
popa
js
sbb
jecxz
inc
inc
pop
nop
lret
or
repz
adc
fmuls
pop
cmp
xchg
jmp
cmp
lods
fidivs
fld
out
ret
sbb
popf
sub
cmp
and
pop
or
pop
jae
fdivrl
sub
sti
push
rclb
fidivrs
iret
inc
cmpsb
dec
xor
loope
scas
xor
ss
xchg
xchg
pop
daa
fistpl
movsb
aaa
inc
sub
je
cmc
push
test
cmc
jge
ss
clc
rcrb
scas
hlt
pop
or
sbb
push
in
inc
std
icebp
sbb
push
in
test
aad
addl
data16
push
nop
mov
push
sahf
inc
mov
jp
outsl
loop
or
dec
pop
out
pop
push
es
push
mov
inc
mov
ds
cmp
add
pop
cmp
mov
cmp
outsl
mov
in
daa
jl
mov
xor
jecxz
cmp
jge
mov
out
xchg
mov
call
push
sbb
imul
xor
or
lcall
mov
rcrb
or
addr16
mov
mov
scas
dec
ret
test
xchg
mov
popl
pop
lods
cmp
mov
int3
mov
or
jle
leave
push
lea
xorl
or
xorl
mov
mov
xchg
add
push
stc
pop
mov
dec
and
dec
lock
das
aam
jl
in
adc
cmp
xchg
into
xchg
aaa
jmp
jmp
xchg
or
imul
push
lahf
dec
jp
repz
pop
imul
jl
mov
xor
popa
popa
push
mov
xchg
in
mov
fistpll
xorb
fiadds
lahf
add
leave
sbb
fdivrs
push
cli
loop
or
setge
ret
mov
mov
pop
sbb
inc
into
stos
and
jp
mov
fnsave
adc
movl
cmp
mov
mov
outsl
cmp
xor
xlat
push
push
pop
push
fwait
or
or
and
cmp
mov
lds
repnz
insb
scas
test
ljmp
inc
subl
addr16
popl
call
iret
imul
mov
xor
jbe
xor
sti
sub
sbb
pushf
or
es
in
or
out
je
xchg
xchg
xchg
push
iret
cs
lahf
xchg
out
mov
xchg
xchg
fcoms
pop
jl
sarl
pop
fcmovnb
div
inc
fucomip
sbb
lret
xchg
popf
mov
cld
sarb
lret
adc
or
mov
jmp
aam
inc
test
addr16
add
pop
xchg
mov
ja
ljmp
pop
pop
clc
mov
and
test
adc
push
outsb
lods
in
into
icebp
cmc
add
sarb
insb
inc
sbb
mov
xchg
repz
mov
cmpsl
nop
and
lret
jle
pop
lret
mov
sahf
push
dec
insb
xorb
je
fisttps
adc
sub
dec
inc
sub
mov
sbb
pop
mov
push
inc
jp
in
pop
sbb
mov
pop
fsts
dec
aaa
dec
mov
rcrl
add
push
sbb
mov
cmp
sbb
idivl
cltd
pop
push
loop
aas
in
pop
inc
hlt
or
iret
repnz
fwait
mov
mov
call
fsts
jecxz
inc
mov
adc
xor
lcall
sub
fstp
xor
into
insb
jo
or
lahf
in
test
mov
aam
sub
stos
cld
dec
arpl
mov
bound
into
xlat
dec
inc
inc
fwait
test
outsb
and
test
insl
jl
insb
dec
sub
and
clc
xor
dec
cltd
ret
mov
pop
addl
adc
dec
fs
pop
lahf
jne
leave
xor
les
lods
lahf
or
inc
aam
xchg
xchg
mov
xchg
sub
mov
jb
cmpsb
das
test
mov
dec
jnp
or
test
cwtl
jno
lcall
and
pushf
cmp
or
inc
lahf
rclb
clc
mov
out
insl
out
fwait
cmp
in
push
daa
and
imul
dec
pop
adc
cmpsb
pushf
fstpl
dec
sub
mov
repz
or
stos
mov
dec
inc
addr16
pop
or
stc
fistl
sbb
stos
jmp
cmp
push
arpl
js
inc
dec
or
imul
adc
jmp
aad
pop
pushf
xchg
arpl
in
mov
or
adc
shrl
movsb
add
cmpsl
and
daa
int3
xor
out
stos
ror
xchg
or
stos
add
or
mov
pop
inc
loope
inc
in
ror
iret
adc
sub
dec
push
bound
pop
cmp
cmp
adc
jmp
adc
dec
mov
cmp
sub
mov
stc
sbb
cld
imul
xchg
arpl
in
lods
and
and
je
cmc
adc
xor
fmull
push
leave
jne
in
mov
add
push
sbb
fmul
inc
add
addr16
aas
dec
js
inc
xor
xor
xor
xor
xchg
add
mov
mov
lods
pusha
divb
push
test
mov
sub
out
lret
insl
jecxz
lea
lods
add
sub
xchg
loopne
jae
jne
test
xchg
std
pop
setge
test
push
sub
mov
cmpsl
jo
push
push
testl
int
mov
mov
int
cmp
dec
incb
adc
nop
dec
aas
bound
mov
in
in
out
fldt
dec
dec
gs
mov
cmc
popa
or
inc
sub
repnz
iret
mov
xchg
ss
adc
popf
cmp
loop
pop
sti
cmpsl
enter
and
sbb
mov
jl
jmp
cmp
mov
mov
xor
int3
xor
bound
dec
push
aas
mov
or
aaa
sbb
fmuls
or
fstpt
push
ljmp
pop
cwtl
sahf
pop
mov
adcl
mov
outsb
sub
ret
outsl
cmp
xor
scas
jb
insl
push
negb
mov
xor
std
fs
loop
adc
xchg
push
cmp
pop
scas
test
inc
fs
sbb
mov
jae
xor
inc
fmull
inc
out
sub
mov
mov
int3
sbb
inc
stos
pop
dec
cmp
sub
push
push
push
xchg
test
dec
xor
in
xor
aam
jo
mov
dec
ret
sti
inc
icebp
mov
xchg
mov
lea
int
cmpsb
fcmovb
ss
sub
sbb
push
mov
out
pop
neg
xchg
cmp
cmp
mov
lahf
sbb
or
leave
std
push
flds
rcr
mov
push
hlt
cltd
inc
mov
add
and
scas
cmp
and
test
bound
sti
lret
jmp
jmp
je
mov
ret
sub
sub
addr16
or
ret
inc
cld
dec
mov
push
mov
js
push
push
pop
ret
dec
icebp
into
cmp
lods
add
jg
push
scas
add
add
inc
in
ljmp
rep
pop
bound
jmp
dec
js
ret
mov
nop
adc
test
in
pop
gs
stos
sbb
cmpl
xor
filds
xchg
movb
loopne
mov
lret
jp
fwait
inc
xor
jae
or
sti
icebp
sbb
mov
jns
test
leave
int
add
test
pop
cltd
xchg
add
dec
mov
cs
stc
call
fs
lcall
jmp
jg
xor
mov
pop
sub
push
fisttpl
iret
adc
daa
push
rol
dec
shrb
cmp
adc
imul
mov
inc
push
std
cmc
sub
mov
inc
bound
inc
sbb
mov
inc
pushf
mov
pusha
lret
add
sbb
dec
xchg
test
cltd
push
cltd
dec
inc
mov
mov
scas
jno
jno
out
popa
add
rcl
inc
add
inc
xchg
sub
or
mov
jecxz
fdivrl
test
sub
notb
popf
loopne
lods
adc
jno
adc
sbb
shrl
ja
std
mov
out
fistps
test
push
fisttps
loop
fsub
scas
sbb
or
fnstenv
pop
pusha
push
hlt
jg
negl
mov
xor
scas
daa
mov
or
int3
andl
xor
mov
jns
xor
ljmp
inc
mov
pop
shlb
mov
setg
push
arpl
jle
push
push
in
minps
pushf
xchg
and
aaa
push
lahf
test
adc
dec
and
dec
neg
jo
ljmp
push
mov
outsl
xor
ds
and
sarl
sub
jae
and
mov
cltd
mov
ds
cmp
sbb
mov
inc
in
aad
lcall
fstl
xor
je
loop
movsl
jle
xchg
mov
mov
cmp
aas
dec
pop
pushf
in
sbb
insb
xor
cmp
dec
jbe
nop
xor
lea
adc
mov
adc
loopne
stos
pop
xor
fsubrs
mov
and
mov
and
or
rcl
mov
mov
cmp
fcmovu
fsubl
mov
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
jmp
adc
cmp
ret
aam
mov
out
dec
lock
ja
je
push
cmp
jl
cmp
jl
push
dec
push
inc
aaa
imul
push
lret
inc
mov
pushl
push
pop
int3
push
rorl
ja
jns
mov
add
stc
inc
loop
adc
fiadds
sub
push
sub
shll
ljmp
mov
enter
mov
lret
and
es
ljmp
loopne
loop
push
notb
pop
cmp
xchg
pop
aaa
mov
cmp
add
cmp
push
es
mov
and
sbb
leave
imul
and
jge
push
jmp
sbb
mov
inc
in
insl
or
sarb
fidivrs
sub
push
and
xor
cld
leave
icebp
push
rcr
jecxz
xchg
mov
inc
repnz
fnstcw
adc
jnp
add
ret
mov
adc
adc
int
sbb
jmp
fistpl
jae
hlt
lea
sahf
pushl
inc
in
insl
test
sbb
or
fsubl
xchg
adc
xchg
lock
sbb
xchg
push
out
add
gs
test
je
sti
mov
sbb
xor
outsb
out
cmpsl
cs
mov
mov
mov
sub
int
andb
mov
es
repnz
push
dec
fildll
shll
jns
jo
cs
and
and
or
cwtl
xor
sbb
push
dec
out
pop
enter
sahf
ja
outsb
std
jo
xorl
adc
xchg
test
cld
pop
jmp
outsb
popf
mov
test
mov
cli
dec
jg
cwtl
or
int
arpl
stos
mov
xchg
data16
pop
icebp
fsubrs
xor
sub
pop
insl
aad
dec
ljmp
or
lods
in
mov
xor
push
mov
push
mov
sbb
in
negl
fcom
std
stos
xor
int
xchg
dec
and
pop
sbb
test
out
xchg
xlat
loop
sub
mov
sar
jbe
fdivs
filds
mov
jg
stos
fcompl
in
jg
lret
cmp
or
and
jno
or
add
lock
xchg
ror
cmovb
xchg
pop
dec
stc
inc
rclb
mov
shlb
in
cltd
orl
xor
scas
sbb
jmp
ret
add
cmpsb
lods
push
xlat
push
or
inc
flds
push
stos
pop
inc
xchg
mov
mov
jmp
add
rcrb
outsb
add
push
es
xchg
popf
adc
cmpsb
xchg
jae
ss
cmpsl
and
int
sub
jbe
dec
xorl
test
mov
inc
mov
mov
out
aaa
push
cltd
aad
xlat
cli
xlat
das
cmp
rcl
mov
popa
lcall
mov
sub
xchg
das
xor
lods
rolb
ljmp
fcoms
ss
lcall
test
xchg
fstl
mov
out
sub
and
aas
cmp
addr16
out
jmp
mov
inc
enter
push
aas
sub
sub
iret
push
mov
jp
inc
pop
in
dec
inc
sub
pop
xor
fsub
xor
cmp
dec
mov
inc
pop
in
dec
dec
cmp
fdivl
xchg
loopne
js
cmpsb
mov
xchg
dec
push
je
sub
mov
out
pop
inc
mov
test
xor
or
out
adc
sub
push
xchg
xlat
pop
xchg
pop
iret
ljmp
mov
adc
loope
push
aad
icebp
loope
ds
adc
jbe
fstpt
pop
and
xor
in
inc
jmp
xorb
mov
xor
sbb
scas
xchg
jno
mov
hlt
add
push
daa
adc
scas
mov
push
rcl
dec
iret
mov
or
add
adc
lods
imul
ja
ss
pop
pop
cmpsb
addb
xchg
loop
pop
xlat
aad
cmp
xchg
lret
pop
pushl
fildll
fisubl
daa
in
gs
sbb
add
popf
mov
pop
push
sbb
inc
mov
dec
push
dec
rorb
xor
mov
adc
lea
push
xchg
pop
aaa
cmp
int3
sbb
cmp
xor
ret
pop
xchg
inc
pushf
xchg
stc
inc
stos
je
faddp
jl
addr16
dec
addr16
xchg
jl
pop
imul
add
jno
insb
roll
dec
imul
insb
and
les
mov
and
mov
sar
xchg
inc
cmpl
cltd
ljmp
fdivl
add
push
mov
pushf
pop
pop
es
and
xor
pop
fs
test
and
inc
xchg
inc
xchg
adc
mov
loope
or
repz
stc
shlb
xlat
cltd
loope
fcmovnb
push
subl
mov
mull
aam
aas
hlt
mov
jne
out
imul
push
add
push
sbb
movsb
dec
cmpsl
fwait
inc
rcr
bnd
arpl
popf
xor
cltd
sub
xor
xchg
jle
insl
ss
enter
shlb
mov
xchg
lret
jo
cmpsl
test
stos
pop
fwait
xchg
cmp
inc
xchg
std
push
aas
jge
cwtl
fwait
in
pop
sbb
dec
hlt
push
jnp
sbb
mov
jno
ljmp
sbb
lret
xchg
cld
lret
and
cmc
push
and
mov
lods
negl
subl
xlat
pop
cmp
ret
sbb
mov
mov
shr
jecxz
dec
test
push
ficoms
jge
xor
aam
movsb
jge
mov
imul
inc
pop
mov
out
jg
cmp
cmp
adc
aam
jecxz
imul
cs
inc
cld
mov
icebp
push
inc
push
int3
sub
gs
xchg
mov
outsb
xchg
lret
mov
mov
movsl
test
cmp
jo
lds
ss
and
subb
lahf
pusha
or
sti
mov
sub
outsl
cld
arpl
pop
lds
gs
es
rcll
adc
cmpsb
inc
and
add
push
cmp
dec
add
sub
ds
or
roll
pop
xchg
scas
or
lret
jne
and
mov
outsl
adc
lcall
lock
and
or
jnp
jp
xor
jnp
mov
xchg
data16
xchg
lea
add
mov
cmc
or
mov
out
lock
andb
mov
loope
add
repz
icebp
mov
imul
mov
xchg
push
lods
add
ss
out
rcrl
cmc
pop
pop
mov
loop
add
jl
cmp
xchg
dec
mov
pop
lcall
out
out
inc
iret
sbbb
scas
iret
int3
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
jmp
sbb
and
add
xchg
mov
xchg
stos
mov
add
jle
sbb
jns
inc
std
movsb
int3
call
das
fwait
jo
nop
mov
xor
fnsave
adc
mov
iret
adc
cmpb
gs
mov
ret
outsl
lock
jne
dec
aad
iret
fdivr
cltd
cli
xchg
popf
xor
xor
push
push
and
call
jle
pop
rcrl
xor
ret
rolb
sahf
add
int
dec
pop
cmp
frstor
jno
test
adc
out
or
std
pop
xchg
insb
arpl
mov
inc
xchg
cmp
jae
cmpsl
jecxz
scas
dec
pop
jecxz
inc
enter
jecxz
mov
add
addr16
in
fs
popa
movsl
inc
push
dec
pop
mov
mov
jp
insb
jae
jb
sub
jmp
cmp
out
push
push
sub
cmpsl
cmpsb
sub
or
pop
lcall
sbb
fdivr
mov
repnz
popa
fdivrs
xor
faddp
movsb
sub
pop
xchg
sti
push
push
pop
mov
dec
push
pop
pop
dec
std
or
mov
in
iret
sarl
dec
add
aas
fwait
inc
dec
jg
xlat
in
sbb
movsl
push
repz
xor
pushf
sub
andb
cs
jl
adc
jne
cltd
rcrb
inc
xor
rorl
jg
lret
in
add
sahf
icebp
sbb
sarl
cmp
xchg
lret
loope
dec
or
push
xchg
pop
push
push
cmp
adc
xor
or
and
cmp
insb
hlt
pop
scas
inc
push
movl
xchg
jbe
mov
call
inc
add
scas
negl
fbstp
fisubs
inc
test
mov
xor
repnz
ja
arpl
insl
popf
mov
push
repnz
mov
cs
or
xor
cmp
imul
sti
nop
addr16
shrb
lock
mov
pop
sbb
cmpb
insb
pop
out
adc
popa
sub
push
jg
pop
int
lret
jle
cli
push
mov
arpl
ret
aam
jb
push
xchg
mov
leave
inc
sub
jae
std
mov
dec
sbb
push
dec
fisttpl
xorb
inc
hlt
mov
je
sbb
mov
cmc
pop
sbb
jnp
jge
clc
or
sbb
xchg
inc
inc
sub
sub
cs
xor
flds
or
sub
inc
jno
fistps
push
ljmp
pusha
cmp
out
jne,pt
icebp
inc
das
or
mov
mov
mov
sub
movsl
xlat
jp
mov
out
hlt
jge
jecxz
xchg
cmp
icebp
sbb
jecxz
ss
mov
cmpb
and
xor
mov
std
mov
and
and
mov
adcl
testl
ficompl
sbb
or
mov
ret
sbb
push
lds
xor
scas
add
cmpsb
cmp
sub
sbb
in
jecxz
out
push
into
mov
mov
sub
aam
cmp
mov
xor
fcoms
cld
mov
push
scas
fstpl
aam
cs
mov
fstcw
shll
frstor
push
xor
pop
mov
rorl
push
imul
loope
sbbb
std
fcomps
test
aas
out
push
mov
ret
jb
icebp
jmp
cmp
pop
leave
and
mov
sti
dec
outsl
xor
inc
stc
and
mov
test
xchg
xor
pusha
test
mov
xor
in
addb
mov
cld
sbb
daa
inc
cmp
cmp
insl
dec
pop
ret
lods
std
adc
lods
add
mov
iret
shrl
fcoms
cmp
inc
push
sub
mov
jge
int3
aad
xorl
jb
vmovaps
dec
xchg
pop
in
outsl
sbb
mov
adc
je
es
sub
test
cltd
cmc
out
or
mov
jne
insl
push
outsl
pushf
mov
adc
les
dec
mov
jmp
and
fcmove
insl
repnz
xor
mov
out
aas
inc
xchg
mov
nop
fs
jns
shrb
mulb
inc
jmp
jb
jne
loop
lds
into
cmp
inc
scas
dec
mov
xor
lret
mov
pop
mov
dec
std
in
add
cmp
xor
sahf
xlat
mov
push
or
inc
or
fcoms
rorl
sub
repz
scas
jnp
or
sbb
inc
mov
inc
push
mov
mov
in
ds
pop
sub
cmc
decl
xor
dec
fwait
mov
push
test
andb
or
cs
movsb
jl
jmp
xchg
mov
test
jle
xor
cmc
adc
bound
sbb
pusha
hlt
inc
pusha
jecxz
rcll
test
das
inc
xchg
inc
fs
sahf
std
mov
xchg
sbb
cmp
jb
cmp
das
sub
add
jmp
ja
rorb
sub
mov
xor
xchg
cmpsb
fdivrs
mov
mov
push
jl
lahf
jmp
mov
jp
sub
lahf
mov
ret
pop
add
mov
mov
jbe
xchg
cmc
aam
mov
out
adc
push
inc
and
mov
ja
ljmp
jmp
out
out
inc
push
push
jns
xchg
mov
cmpsl
orl
xchg
orl
push
icebp
pop
pop
xchg
push
imul
and
cmpsb
je
scas
lods
push
sbb
pop
mov
loop
idivb
inc
inc
pop
aas
sbbl
test
xchg
pop
inc
mov
test
pusha
or
mov
sbb
sub
push
pop
sahf
lahf
add
push
movb
push
sbb
das
ds
jecxz
fs
and
flds
call
loope
arpl
dec
jbe
and
jnp
xchg
test
jbe
jbe
xchg
dec
es
call
cmpl
or
icebp
mov
popf
and
ljmp
push
cmp
fildll
popf
shr
xchg
mov
pop
and
lcall
dec
ret
pop
dec
sets
mov
adc
mov
jo
mov
sbb
cmp
inc
pop
idivb
dec
aad
call
xor
dec
dec
cmp
in
dec
jae
clc
sub
adc
cmp
outsl
in
lcall
shll
cmp
xchg
cltd
inc
push
mov
xor
pop
mov
jg
sbb
cwtl
aaa
mov
push
and
lcall
xor
adc
mov
fldt
sbb
pop
inc
dec
stc
or
es
pop
hlt
stos
xchg
in
nop
rcrl
ret
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
jmp
sti
test
sbbl
sbb
stos
js
aas
ja
pop
push
mov
dec
test
and
push
mov
jg
js
lcall
bound
sub
lods
adc
data16
sbb
add
cli
outsl
push
addr16
in
sub
arpl
loop
push
cmpsb
push
ljmp
cmp
jbe
dec
inc
push
sbb
sbb
jmp
in
cmp
sbb
push
shlb
out
stc
iret
gs
daa
aaa
dec
sub
add
push
dec
mov
rcl
push
roll
add
inc
jae
adc
rcrb
xchg
add
lret
mov
pushf
add
fcmovnu
je
out
cmc
inc
call
bnd
push
lcall
adc
and
sahf
js
lea
add
pushf
cmp
mov
sbb
test
pop
bound
pop
mov
mov
aam
mov
aas
push
repz
adc
jb
das
push
xor
push
aaa
aas
xchg
sbb
push
ljmp
fldt
dec
sbb
decb
push
es
add
shlb
pop
sbb
or
fs
cs
das
mov
mov
sbb
add
ss
stc
leave
push
mull
sub
shlb
and
sub
inc
dec
push
xor
je
andb
test
mov
mov
cmp
loopne
mov
in
aad
pop
mov
js
push
dec
mov
imul
mov
int3
jge
xchg
jo
cmp
cltd
fiadds
lahf
ljmp
inc
roll
in
push
push
jb
mov
movsl
decl
mov
jecxz
repz
or
xchg
mov
cmpl
mov
lcall
fcompl
les
sbb
or
test
lea
call
dec
push
or
fs
mov
dec
ljmp
bnd
push
jb
lea
repnz
lahf
aam
adc
push
inc
add
mov
pop
imul
in
pop
sbb
mov
popa
sbb
hlt
add
sub
add
jno
test
or
cmp
jl
nop
mov
push
and
inc
scas
inc
aad
mov
arpl
sub
mov
mov
int
jmp
mov
call
movsb
cwtl
scas
vcomiss
out
and
jo
into
hlt
xchg
cmpsl
and
lret
je
out
mov
add
dec
pop
sub
mov
sbb
lock
movsl
jecxz
jle
das
inc
inc
fs
dec
pop
push
pop
stos
lock
sahf
bound
cmc
daa
mov
gs
fisubrs
insl
pop
jne
insb
pop
nop
pop
cmpsb
outsb
lods
sbb
mov
in
pusha
sarl
jne
lds
in
xchg
sbb
dec
insb
jbe
xchg
stc
mov
push
add
out
addr16
mov
pop
jge
jecxz
sub
jg
fmuls
mov
mov
sub
js
int3
ljmp
call
dec
mov
dec
mov
fildl
lahf
push
inc
pop
jg
jge
pop
or
daa
cltd
jmp
cmc
adc
xlat
dec
push
scas
push
inc
sbb
insl
and
mov
pop
out
testb
cmp
adc
lcall
pushl
sub
bound
and
lods
mov
ret
loop
gs
or
mov
dec
sub
xor
testl
jae
fmul
or
push
xchg
push
cs
inc
jle
cmpb
jns
inc
rolb
jmp
xchg
cs
pop
and
pushf
clc
loope
push
lods
movsl
push
dec
xorb
xchg
aam
xor
push
outsb
and
aaa
sbb
mov
popa
movsb
js
movsl
mov
std
sub
mov
inc
sub
xor
aas
and
addr16
mov
mov
or
repnz
aaa
fistpll
jns
push
xor
psrld
jb
xchg
jb
loop
jp
out
cmp
stc
push
push
shll
pop
cltd
and
repz
pop
xor
les
enter
add
cmp
sbb
rcll
lds
and
sbb
out
dec
test
mov
je
sahf
cmp
roll
fwait
out
mov
mov
sub
subl
mov
push
pop
cld
jne
imul
mov
push
imul
xchg
mov
or
pop
leave
push
pushl
lea
push
cwtl
adc
mov
and
lock
cwtl
and
sbb
sbb
fadds
jg
xor
das
pop
decb
sbb
pop
addr16
mov
xor
inc
lret
mov
outsb
sbb
stc
andl
sahf
jns
sbb
jns
xor
adc
jge
and
add
repz
xchg
ret
dec
mov
stos
lds
stc
inc
or
aam
cmpsl
fs
out
idivb
push
dec
sbb
adc
lea
push
and
mov
in
cmp
mov
pop
sbb
or
sahf
inc
or
mov
dec
mov
ss
das
xchg
push
xor
lcall
inc
mov
xchg
xor
leave
rep
cmpsb
inc
jg
mov
negb
lcall
xor
iret
or
pop
lahf
adc
sub
mov
hlt
fdivs
push
push
mov
notb
jnp
aam
push
inc
gs
push
outsl
test
push
cmpb
jo
cmpsb
and
or
cmp
gs
or
xchg
mov
repz
mov
jl
jae
push
outsl
mov
xor
shrl
and
mov
addr16
or
scas
jo
or
loope
mov
xchg
insl
inc
push
sub
jp
mov
aas
addr16
lahf
aad
mov
lret
and
out
dec
and
sbb
push
add
or
jp
dec
ja
pop
repz
iret
add
ret
test
xchg
inc
in
das
in
fcomps
ja
stos
jmp
jle
mov
xchg
fildll
inc
test
test
daa
sbb
int3
into
and
mov
jbe
ficomps
cld
inc
lcall
filds
sbb
mov
clc
orb
stc
ficoms
mov
das
scas
sub
outsb
test
mov
mov
adc
push
pop
xchg
shll
gs
or
int
cmp
push
dec
out
movsb
jo
or
scas
jmp
pop
in
pop
xchg
sti
push
fidivl
pusha
mov
mov
inc
mov
xchg
pop
pop
sub
push
push
inc
pop
in
pop
mov
insl
fs
jle
xlat
pop
bswap
inc
sbb
and
or
inc
push
jo
mov
inc
mov
push
add
arpl
test
ljmp
inc
nop
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
jmp
nop
loope
pop
dec
gs
int
xlat
sub
lock
xchg
ja
pfmin
or
xor
push
mov
imul
add
jbe
cmp
stos
int
stos
addr16
or
inc
mov
iret
je
js
jp
jo
mov
mov
andb
movsl
test
sti
jle
ja
or
aaa
jge
sub
push
cmp
aad
push
fs
mov
arpl
rcll
push
lahf
lock
mov
adc
cwtl
dec
stos
inc
xchg
inc
lods
push
pop
mov
clc
sti
aaa
xchg
addr16
imul
lods
dec
xchg
jg
dec
xorb
lahf
outsl
les
mov
mov
jno
mov
or
cmp
aas
and
sub
in
sbb
add
stos
mov
inc
mov
mov
sub
int3
out
xor
in
lret
addl
pop
add
and
add
push
fisubrl
pop
mov
hlt
push
and
test
ds
cmp
mov
sti
dec
lods
jmp
fnsave
push
cmp
xchg
pop
jge
add
insb
jne
ja
addr16
mov
ds
je
std
xchg
insl
gs
arpl
popf
push
push
repz
mov
xchg
shrl
mov
test
sbb
inc
pop
fs
xor
mov
stos
sbb
mov
aaa
movaps
jecxz
insb
push
icebp
stos
dec
mov
or
popf
std
mov
or
fsts
push
idivb
movsb
pop
negb
inc
inc
mov
ret
aam
push
daa
xor
imul
and
fistl
adc
cmp
sub
pop
xor
cld
mov
outsb
push
jb
rol
sarb
lahf
mov
xlat
jecxz
fiaddl
sub
popa
add
push
sbb
int
pusha
fisubrs
mov
jno
push
inc
pop
mov
adc
xlat
sub
xchg
enter
out
mov
or
xchg
pop
mov
xor
mov
pause
arpl
jge
sub
lret
sub
rclb
cmc
jns
aam
sbb
xor
addl
int
sub
sub
sbb
rclb
inc
and
push
js
jecxz
cmpsl
fs
stc
add
or
data16
or
inc
std
fidivrs
mov
cmpsl
xchg
insl
jnp
pop
test
inc
push
mov
cmp
sbbb
push
in
jno
mov
arpl
mov
jp
inc
add
jge
mov
lcall
xor
lahf
inc
xor
pop
int3
roll
jo
xor
out
aad
popf
push
push
out
mov
out
mov
in
sti
ds
cmp
jo
adc
xor
loopne
sarl
adc
lods
sbb
imul
sub
cmp
pop
sbb
jmp
xchg
dec
dec
cmc
push
insl
leave
mov
loopne
test
jge
add
loope
mov
mov
les
mov
cmc
fucomp
data16
lods
sbb
and
sub
and
mov
xchg
out
sub
mov
xor
orb
div
mov
fcoml
jg
xor
stc
cs
pop
cmp
fdivp
mov
mov
mov
pop
mov
out
lahf
sbb
pop
shrb
inc
fidivl
cmp
arpl
repz
shrl
push
cli
sub
loop
aad
mov
adc
push
mov
jl
outsl
mov
xor
jbe
mov
mov
mov
notl
adc
dec
or
je
popf
fisubl
sub
push
movsb
mov
xchg
addr16
mov
or
das
test
stos
aas
movsb
dec
shr
mov
aam
repz
and
int
mov
loop
add
add
adc
xchg
mov
cltd
sahf
jb,pn
jge
inc
call
sbb
xchg
sti
xor
insl
pop
lret
fstpt
mov
cmc
inc
jle
cmp
out
in
sbb
cmp
rorb
pop
mov
cmpsl
addr16
idivl
sub
ror
mov
xchg
mov
test
jmp
cmp
nop
adc
and
js
jnp
mov
push
push
push
sub
add
mov
mov
and
push
mov
sub
outsb
xor
sub
test
enter
mov
mov
inc
lds
mov
sub
aam
jnp
mov
imul
std
mov
in
mul
dec
or
push
in
jb
mov
insl
imul
ss
inc
test
cltd
inc
jae
mov
xchg
out
jnp
xchg
adc
and
mov
jmp
xchg
icebp
ss
mov
xor
test
cmp
or
insl
call
imul
jle
in
pop
xor
decl
out
loopne
jl
cltd
xchg
adc
clc
int3
fbstp
test
test
mov
xchg
jno
in
test
lock
pop
push
cli
dec
jecxz
add
fs
xlat
or
in
test
addr16
in
pop
inc
clc
or
cmp
or
dec
das
sbb
pop
outsl
sub
mov
pop
outsb
pop
dec
xchg
sarl
push
in
sbb
mov
in
lea
in
daa
push
aam
inc
push
repz
aad
test
mov
ss
mov
push
lods
es
loope
js,pn
mov
test
cmp
xor
bound
aas
push
mov
jae
loopne
dec
push
xor
mov
mov
dec
xchg
stc
ret
or
lret
mov
roll
pusha
sbb
mov
mov
pop
sbb
idivb
mov
pop
add
popa
cmp
imul
fsub
pop
pushf
int
xor
orb
sbb
jg
add
das
xor
mov
add
repz
or
dec
pop
in
decb
push
jecxz
pop
inc
inc
xchg
les
lods
xor
mov
xchg
sub
adc
mov
pusha
jbe
gs
and
ljmp
add
mov
mov
fwait
sbb
xor
mov
sub
pop
fwait
loope
sub
mov
or
or
out
cmp
mov
je
jns
in
sbb
ret
dec
stos
xlat
cltd
mov
add
pop
loope
jmp
sahf
or
ss
out
mov
ja
jg
jbe
jl
push
ret
cltd
sbb
cmp
ljmp
mov
adcb
mov
popf
mov
and
mov
and
mov
aas
push
hlt
add
lcall
add
sbb
xchg
icebp
push
sub
xchg
lods
lahf
mov
cmp
cltd
xor
xlat
in
pop
or
dec
out
dec
adc
test
ljmp
add
inc
adc
ljmp
or
mov
mov
mov
jmp
dec
loope
lret
sbb
or
mov
adc
nop
mov
fcoml
js
in
outsl
cmpsb
mov
cmp
pop
es
mov
mov
cmpsb
int3
dec
in
lcall
jbe
mov
pushf
fcomps
mov
jg
icebp
mov
mov
into
stc
jmp
add
cmpsl
jns
jge
mov
adc
sbb
popa
push
dec
jae
imul
inc
stos
mov
hlt
or
dec
push
inc
aad
xchg
adc
dec
adc
into
rorb
mov
in
sbb
orb
repz
sarl
enter
lock
or
push
movsb
jl
push
out
nop
push
cmpsb
jnp
movsl
sbb
lret
repz
dec
adc
xchg
push
rclb
inc
mov
lods
sub
and
jge
lods
addr16
clc
mov
adc
jecxz
jl
mov
repnz
pop
int3
lret
inc
mov
or
mov
out
sarb
or
adc
in
add
gs
xor
adc
mov
xchg
fcompl
push
fiadds
negl
pop
cmp
jecxz
mov
mov
cs
outsb
xchg
and
sbb
test
loope
adc
negb
fmuls
cmp
mov
shl
ror
js
cmp
fisubs
mov
ljmp
aaa
mov
sub
pop
out
sub
jae
dec
lods
out
pusha
push
add
repz
aam
aad
inc
add
hlt
xor
movsl
xor
sbb
ftst
js
stc
xor
addb
out
jns
sub
push
xor
int
insb
jmp
jg
sub
or
jne
gs
call
add
cmp
pusha
jae
jmp
idiv
imul
dec
lods
or
lea
sub
jbe
popa
andl
scas
fsubrs
in
out
mov
out
ret
mov
loop
sbb
cli
mov
push
and
push
or
xchg
mov
insl
out
xchg
xchg
add
ljmp
jns
push
xor
mov
das
and
cmpsl
ja
std
fsts
xchg
mov
stc
mov
outsl
popf
out
dec
scas
addb
add
push
cmp
cs
aas
mov
ds
push
cmp
mov
std
imul
sub
inc
sbb
rcll
fisttpl
dec
outsb
mov
and
jg
ds
mov
iret
les
scas
sub
pushf
clc
out
push
outsl
arpl
sub
xchg
in
and
push
xor
xchg
outsb
mov
test
mov
pusha
movsb
pop
sti
daa
xchg
aas
mov
xor
aad
dec
sti
incb
movsl
mov
xor
dec
inc
sbb
loope
ret
fs
das
mov
ds
xchg
xchg
sub
push
mov
mov
pop
xor
stc
fiaddl
dec
jle
ljmp
sahf
inc
sbb
loope
std
test
pusha
int
test
sub
lahf
in
xchg
xor
jne
cmp
sub
hlt
dec
add
fisubrl
les
into
sub
cmpsl
aaa
popf
mov
mov
mov
cwtl
and
jmp
addb
or
pop
stos
add
lea
xor
jae
xor
rolb
test
loopne
in
push
and
add
xor
test
fcmovnu
adc
push
sbb
stos
ljmp
add
andl
and
jg
pop
ret
sub
aaa
popa
ret
xor
cmpsl
cmp
js
int3
lret
mov
fidivl
in
xchg
insb
xchg
popf
push
push
sbb
or
cmp
pop
cwtl
ret
cli
rclb
gs
pop
iret
xor
mov
insb
clc
jmp
pop
and
lock
adc
add
mov
sub
outsl
push
inc
sarb
jnp
sub
mov
jnp
in
cwtl
adc
data16
push
push
and
dec
push
jne
loopne
pop
pop
call
fmuls
dec
cmovl
push
push
scas
pop
push
or
sbb
out
dec
push
in
and
push
stos
mov
mov
repnz
mov
adc
pop
es
jge
std
sub
iret
enter
scas
sub
aas
xor
pop
push
pushf
dec
pop
push
mov
cmp
xor
daa
movl
mov
push
stc
xor
add
out
jecxz
mov
mov
mov
sbb
cmp
inc
fidivl
movsb
or
sub
cmp
xchg
loop
enter
cmp
xchg
cmp
xchg
add
lds
int
call
stos
cmp
cli
lea
imulb
lods
cmc
and
mov
je
dec
lcall
mov
xchg
test
jl
sub
adc
loope
movsb
pop
push
push
shlb
fimuls
dec
fdivl
fldl
lods
test
fucomip
mov
fidivl
mov
into
fistpl
inc
pop
mov
mov
xor
rcl
jbe
mov
pop
popa
cmpsb
sub
stos
jae
xor
xchg
hlt
push
lods
enter
inc
hlt
jmp
stos
sbb
cmp
std
mov
jmp
mov
loopne
insb
popf
pop
int
rcrb
mov
mov
lret
push
in
or
movsb
xchg
daa
mov
scas
pop
jmp
mov
jecxz
pop
mov
pop
shlb
ret
dec
lods
test
sbb
mov
mov
pop
in
iret
int
sbb
pop
and
test
andps
push
push
xor
imul
icebp
insl
stos
and
fsts
sub
sbb
sbb
rcrl
sbb
movb
test
push
or
fiadds
in
xchg
mov
adc
add
adc
inc
pop
push
sub
push
in
mov
sub
shrb
mov
loop
cli
fcmovbe
mov
pop
pop
clc
jl,pn
loopne
aad
out
add
sub
std
outsl
aaa
push
jecxz
inc
ljmp
or
fnstsw
leave
and
mov
inc
jge
mov
mov
popa
std
lcall
push
movl
out
das
or
or
push
mov
or
or
mov
sahf
and
pop
pop
gs
jl
mov
lret
je
out
xchg
scas
sbb
jno
sti
inc
sbb
mov
add
pop
aas
ljmp
pop
jp
iret
and
loop
xor
cld
inc
cmp
dec
mov
loopne
xor
imul
pusha
cmc
loope
mov
rclb
lods
mov
cmp
xchg
mov
xchg
inc
mov
pushf
ljmp
sbb
int3
cmp
dec
push
or
lcall
push
addr16
aas
pop
ja
xchg
sahf
dec
shlb
lea
and
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
jmp
cltd
push
in
sub
jno
xchg
push
ja
push
ficompl
pop
cmc
adc
adc
mov
xor
mov
fidivs
sub
cmp
mov
push
cld
mov
mov
sti
adc
push
into
jmp
cld
xchg
gs
sbb
test
cmp
enter
pop
push
out
jb
sub
xor
adc
cmp
movsb
lahf
sub
test
data16
add
sbb
mov
jecxz
stos
scas
pushl
mov
mov
mov
pop
xchg
push
cmp
add
jg
imul
sbb
arpl
testl
fisttpl
push
sub
mov
push
pop
pop
dec
ret
pop
mov
sub
ja
sub
loope
push
inc
or
xchg
dec
mov
and
ret
lock
icebp
mov
out
inc
scas
or
pop
pop
xchg
and
push
inc
sub
dec
fadds
imul
test
xor
outsb
xor
inc
or
in
jb
and
adc
popf
sub
inc
test
inc
sbb
and
cmp
jmp
sbb
in
cmc
xchg
out
mov
mov
sbb
or
or
push
sub
fcoml
add
and
daa
test
pop
xchg
push
adc
jge
jne
or
mul
mov
cli
mov
and
icebp
and
sub
mov
add
dec
pusha
loop
ss
pop
inc
js
mov
cmp
sbb
mov
push
nop
ss
shrb
or
adc
arpl
and
mov
jnp
mov
mov
inc
xchg
addr16
repnz
or
repz
repz
mov
pop
stos
aad
imul
test
pop
mov
cmp
aas
sahf
subb
les
stos
jb
adc
add
icebp
sbb
int3
add
mov
loopne
insb
in
xor
cld
clc
sub
and
adc
mov
mov
movsb
cs
push
inc
sub
mov
pop
xorl
in
xorb
mov
loopne
dec
scas
movsb
adc
lret
push
and
iret
add
cmpl
nop
mov
mov
insb
push
repnz
push
lods
sbbb
imul
dec
inc
dec
test
pop
xor
leave
loope
outsl
or
add
pop
mov
adc
lcall
sbb
repz
push
mov
mov
push
js
push
in
pop
lods
and
push
ret
push
inc
loopne
jno
push
cwtl
fsubr
lock
dec
ds
into
pop
dec
add
push
inc
lret
aad
dec
scas
xchg
push
pop
jae
sbb
mov
je
pop
pop
imul
movsb
fsubs
and
fadds
push
sti
scas
lock
clc
hlt
das
lret
pop
out
jbe
insl
mov
mov
or
ret
scas
cwtl
mov
shlb
and
adc
cmc
daa
inc
sbb
or
sahf
loop
xchg
inc
xchg
ljmp
add
dec
jg
aad
test
out
xchg
jle
daa
adc
mov
pop
daa
mov
pushf
rclb
lods
daa
push
sub
lret
repz
xchg
lret
push
sbb
hlt
ss
cli
push
imul
pop
cmpsb
rcr
cmc
dec
jmp
rep
fisttps
in
in
mov
lcall
gs
jl
cmp
es
mov
add
push
aam
pop
pop
sub
fistl
cltd
test
pop
mov
xor
xchg
sub
mov
lea
das
into
xor
iret
mov
mov
stos
jo
jg
fildll
inc
sbb
mov
lret
push
popa
test
mov
push
push
adc
pop
subb
mov
repnz
shll
and
daa
stos
and
or
cmp
inc
pop
jno
icebp
cmp
out
push
sub
cwtl
das
mov
fstpl
cwtl
push
cmp
xor
jmp
xchg
push
add
fstpt
lea
cld
inc
fsub
clc
sub
je
push
pop
push
pop
cmp
mov
fbstp
mov
js
pop
inc
test
popa
test
mov
std
jns
dec
imul
aam
mov
in
int
lea
ljmp
xor
adc
out
imul
mov
or
adc
fbstp
cmp
xchg
iret
fnsave
stos
test
add
call
enter
ret
in
call
and
inc
cmp
data16
sub
xor
dec
movsl
mov
cmp
xorb
inc
pop
xlat
mov
mov
loopne
pcmpeqd
sahf
stc
fucom
fistpl
mov
repz
pushf
in
mov
jmp
cmpsl
js
jae
sub
scas
push
push
cmp
pop
loop
jns
jle
les
mov
das
mov
inc
dec
mov
sub
imul
jp
aas
nop
cmp
popa
dec
dec
test
jo
adc
cmp
pop
inc
and
mov
mov
dec
xlat
in
loopne
push
clc
imul
js
dec
ds
add
imul
or
xchg
or
xchg
mov
cmp
fidivrs
push
mov
adc
aaa
scas
ret
mov
jne
xor
adcb
mov
fcomps
push
data16
mov
mov
add
or
jns
jb
xchg
data16
push
sub
xor
filds
inc
xor
mov
add
push
clc
sahf
cli
dec
push
inc
in
jp
test
cltd
fadd
mulb
xchg
jle
cltd
sti
mov
mov
inc
xor
pop
gs
jno
ret
adc
adc
js
sub
inc
adc
or
fdivl
subb
cmc
aam
je
ss
jns
out
ficoms
mov
pop
pushf
das
int
jp
int3
lods
cli
cltd
insl
jp
in
dec
xchg
imul
fcoms
pop
and
ds
fs
lods
jb
sti
inc
not
in
js
negl
scas
rclb
sbb
xchg
icebp
adc
jmp
cmp
xchg
enter
jno
leave
mov
lods
lock
sbb
cmpl
subl
rcll
lret
jge
mov
imul
xor
jne,pn
push
adc
mov
mov
mov
shr
push
push
ljmp
push
sub
outsl
inc
pop
sub
loope
jbe
into
and
push
dec
popf
fisubrl
and
sbb
mov
fisubrs
fisubs
mov
imul
add
add
popa
xchg
mov
adc
inc
adc
test
ret
or
test
push
mov
mov
mov
jmp
push
mov
adc
xchg
pop
xchg
pop
add
ja
push
aad
mov
xor
inc
mov
test
testb
or
add
test
int3
dec
push
pop
clc
mov
and
push
incl
mov
sub
mov
popa
and
xchg
adc
icebp
fistpl
cmp
stos
mov
dec
into
mov
lock
xlat
pop
dec
pop
repnz
outsl
fmul
xor
mov
lea
xor
push
sbb
lret
icebp
std
popf
cmc
cmp
jb,pt
xor
mov
pop
bound
inc
sub
stos
rcl
cmpsb
push
sbbb
cli
cld
lret
rolb
dec
inc
pusha
lds
mov
popf
dec
cmp
push
fdivr
lods
negl
mov
cli
js
lock
test
sbb
addl
inc
mov
jb
xchg
xchg
add
das
dec
sahf
sbb
ja
push
xor
insb
aaa
xor
outsb
sub
mov
aas
push
jl
cld
fimull
std
jl
test
lret
cmpb
nop
mov
inc
mov
int3
leave
pop
shll
stos
fcmovbe
jmp
jl
cltd
mov
jne
fstpl
fstpl
xchg
sbb
stos
pop
pop
pop
xor
pusha
xor
xchg
gs
stos
mov
inc
mov
pop
jns
dec
push
mov
jge
das
cmp
push
fyl2xp1
das
in
add
cmp
xchg
fs
imul
imul
sbb
sbb
pusha
push
negl
cmp
scas
fcomps
mov
pop
or
dec
add
sub
xchg
sbb
call
adc
fildl
mov
inc
cmpsb
jp
jg
xchg
mov
mov
pop
out
xchg
fwait
aam
jns
mov
jl
fbstp
lret
stc
mov
jle
dec
loope
loope
loopne
cs
gs
mov
popf
cmc
lods
cmc
push
mov
jo
test
sbbb
push
lret
inc
sti
call
hlt
scas
and
pinsrw
fldl
int
lcall
sub
push
fisttpl
fwait
jmp
ss
cmp
js
test
rcrl
sub
and
in
pop
or
je
lret
jnp
inc
cmp
adc
mov
movsl
xor
add
push
icebp
inc
mov
adc
aaa
dec
cwtl
fs
daa
fwait
xchg
or
pop
mov
mov
adc
adc
movb
ret
and
cmp
dec
je
sub
mov
std
jp
dec
pop
into
jg
insb
inc
mov
cld
add
lods
sub
jle
xchg
pop
or
jne
dec
sbb
hlt
lock
sbb
aas
cli
inc
sbb
out
test
inc
stos
mov
test
cmp
and
roll
daa
pushl
xchg
outsl
ljmp
ret
stos
xor
lret
mov
out
sbb
insb
jae
cmp
push
push
xchg
inc
mov
in
cltd
scas
xchg
dec
fcoms
adc
dec
imul
addr16
bnd
add
sub
aaa
aam
pop
call
addr16
lds
mov
clc
repnz
cmp
cmp
and
add
push
popa
rcrb
adc
out
inc
mov
dec
dec
and
sbb
adc
add
sti
jne
cwtl
rcrl
cmp
rcr
push
xchg
lods
inc
mov
push
inc
xchg
gs
jl
movsb
sbb
test
fadd
adc
subb
in
lret
cmp
fstpt
mov
sub
test
dec
add
mov
popa
and
jns
or
cld
in
not
jmp
daa
mov
adc
push
arpl
xor
jo
out
test
insl
sarl
pop
iret
and
repz
iret
or
xorl
rol
sub
xchg
jo
xor
shlb
xor
dec
shrb
dec
rcrl
test
or
cwtl
std
or
mov
into
or
mov
inc
scas
adc
mov
shlb
es
in
mov
lds
ds
xchg
insb
xchg
add
mov
lock
mov
fwait
pop
and
push
sub
adc
push
clc
mov
leave
mov
xchg
sbb
lea
sahf
sub
jg
sahf
dec
mov
fldenv
xor
lea
mov
sbb
cmc
pop
cwtl
inc
xchg
ficoml
sub
out
or
gs
les
das
out
cmpsl
dec
cmpb
fsubr
mov
into
adc
in
aam
nop
inc
xchg
cmp
and
aas
jl
out
inc
cmp
push
cltd
stos
xchg
ror
test
jl
lds
aad
sbb
mov
sub
loope
loope
inc
or
cmp
fildl
cmp
lds
add
fwait
scas
inc
xchg
test
or
imul
sub
pushf
lea
div
shll
sti
jp
pop
data16
mov
loopne
out
lods
leave
cld
cmpsb
addr16
pushf
sbb
lcall
outsb
dec
btr
cwtl
add
and
sbb
int
in
lcall
outsl
inc
dec
push
mov
cltd
and
xor
fwait
mov
add
mov
dec
enter
cli
leave
loope
mov
inc
lret
gs
xor
les
mov
aaa
or
adc
sub
mov
mov
test
lret
sbb
cmpsb
dec
or
and
pop
movsb
mov
stos
rcll
sbbl
stos
adc
push
adc
xlat
lods
mov
inc
jp
xor
pop
mov
sahf
stos
fwait
sbbl
jbe
and
add
mov
dec
pop
and
lahf
mov
push
jb
ja
pop
addl
insl
dec
ljmp
lea
inc
jl
lret
adc
es
cmp
imul
stos
mov
jecxz
movzbl
scas
fwait
repz
nop
dec
sub
movl
inc
aam
jp
popa
iret
add
ljmp
adc
pop
jge
movsb
xchg
fsts
dec
sbb
stc
fadd
popf
mov
out
jb
movb
insl
je
jbe
les
xor
lock
and
addr16
xchg
loopne
out
or
and
cs
mov
mov
xor
fbstp
mov
in
mov
jecxz
sub
imul
dec
dec
cmp
xlat
loope
out
leave
mov
push
test
lret
dec
cmpsb
stos
fs
in
mov
dec
arpl
sbb
test
inc
xor
test
push
and
negl
ljmp
and
inc
out
dec
jecxz
ror
pop
cmp
ss
jno
test
movsl
sub
lret
push
xchg
fstl
pop
mov
shrb
xchg
outsb
sbb
imul
fisubrl
out
jo
mov
xor
jmp
cmp
adc
mov
test
xchg
repz
xchg
mov
imul
sbb
mov
sub
and
push
rclb
out
dec
inc
inc
sbb
addr16
outsb
sahf
mov
dec
sahf
mov
rorl
pop
cmp
mov
add
xchg
jg
jmp
addl
xor
push
inc
mov
mov
out
lods
mov
test
hlt
inc
inc
jbe
inc
push
movb
test
call
les
pop
aad
pop
dec
pop
pushf
lret
push
testb
xchg
inc
mov
mov
mov
jle
inc
mov
inc
movsl
jecxz
jb
out
xor
xchg
sub
mov
ror
xchg
popa
and
fwait
jmp
jmp
cmc
pop
sub
mov
push
rolb
mov
mov
andl
push
stc
push
push
inc
popa
push
gs
adc
mov
dec
cmp
inc
or
inc
mov
testl
repnz
nop
xchg
imul
outsb
incb
incl
mov
shl
mov
loope
imul
jl
leave
dec
scas
incl
fcmovu
cli
sbb
cmp
xor
mov
loop
jle
nop
test
pushf
sarb
xchg
andps
sbb
cmp
ds
mov
mov
out
pop
fiadds
inc
or
and
push
pop
mov
mov
jnp
lcall
xchg
and
jne
scas
inc
rcrb
fwait
inc
push
je
scas
jmp
int3
fsubs
and
inc
pusha
adcb
and
fildll
mov
mov
fdivrp
mov
cld
iret
insl
out
cmp
fbld
sbb
shl
sbb
lret
inc
mov
mov
or
icebp
cmp
xchg
sarl
sub
enter
mov
ret
or
fwait
sbb
test
cmp
push
movsb
fisttpll
push
sahf
cmp
cmp
lahf
mov
adc
je
bound
lcall
es
int
mov
pop
scas
jg
aaa
cmc
pop
and
jg
pcmpeqw
test
or
add
and
jb
or
push
and
dec
pop
cmp
inc
or
fsubl
fildl
add
inc
jecxz
icebp
sub
jns
adc
movsl
mov
shlb
daa
data16
loop
sti
xor
inc
cltd
aam
cmpsb
popl
popf
testl
lahf
fstpl
call
sub
fwait
add
mov
test
fcomps
ret
push
add
shll
int3
and
scas
and
out
hlt
rcrl
pop
sbb
and
push
movsl
mov
imul
gs
push
subb
jp
loop
pop
pop
sti
pop
xchg
jmp
push
dec
test
fwait
cmp
in
xor
enter
jp
jp
scas
sbb
inc
mov
or
inc
push
fcoms
sub
push
rep
pop
sbb
sub
jbe
inc
push
ret
jo
mov
mov
movsb
aaa
xlat
lds
xchg
rolb
mov
xlat
xchg
repz
scas
xchg
sub
and
fwait
mov
push
popl
add
dec
mov
hlt
mov
popf
int
or
mov
mov
fwait
pop
add
nop
cmp
and
push
pop
aam
outsl
scas
mov
push
mov
pop
repz
pop
mov
popf
dec
cwtl
fimull
stos
mov
hlt
push
and
add
out
mov
jl
ds
fs
test
loop
inc
xor
lds
shlb
push
idivb
fcmovbe
adc
cmp
in
js
pop
sub
das
ss
outsb
fs
push
dec
xchg
cli
aaa
and
cwtl
mov
lea
cmpsl
mov
or
call
push
mov
jnp
loop
lcall
loope
iret
cmp
lret
outsb
aad
mov
jp
xchg
mov
inc
xor
jne
movsl
mov
lods
sahf
xchg
mov
and
lret
stc
mov
pop
cmp
cmp
insl
mov
icebp
and
push
sbbb
nop
mov
lcall
pop
addr16
xor
adc
jle
xchg
jge
mov
addr16
daa
pushf
jmp
fdivrl
dec
add
in
or
es
mov
mov
scas
sub
into
sahf
cmpsb
gs
jo
xor
enter
lret
mov
nop
sbb
jbe
mov
out
inc
sub
lock
aad
pop
in
cli
jbe
cltd
mov
sub
into
pop
pop
mov
adc
insl
push
push
clc
jno
mov
add
mov
int3
faddl
mov
in
cmc
in
sbb
mov
add
dec
popf
or
je
mov
int
cwtl
ljmp
dec
pop
or
jae
scas
xor
inc
or
add
test
lcall
iret
movsl
fwait
mov
repz
push
les
dec
repnz
xchg
inc
mov
inc
mov
xor
xor
xchg
scas
pop
fidivs
rorl
mov
xor
or
inc
xor
push
fisubs
add
cltd
add
cmp
push
je
int
fiaddl
jmp
test
mov
sub
lret
pop
jl
enter
in
push
std
xor
cmpsb
mov
add
dec
mov
les
sub
ret
xchg
movsb
jbe
push
popl
movsl
scas
sbb
mov
dec
dec
cmp
and
jmp
stos
add
cmpl
lret
fsubrp
clc
faddl
dec
mov
pop
pop
mov
push
les
add
shl
xchg
mov
int3
mov
inc
pop
pushf
dec
repz
popw
loop
pop
iret
jmp
aaa
or
jae
lods
push
adc
push
in
push
sub
pop
jno
add
fstpt
adc
int
out
push
jne
push
cmp
jg
xlat
mov
adc
sbb
mov
aaa
je
push
mov
sub
jle
add
imulb
loopne
and
stc
ficoml
stc
mov
movsl
in
clc
js
mov
jp
cmc
lock
add
lods
pushf
lret
jnp
repz
jge
push
mov
repnz
jmp
xor
out
jp
push
loop
xor
jp
fdivrs
addr16
sbb
cmpsl
enter
pop
stos
fists
jge
fistpl
sahf
cmp
mov
shlb
mov
fldcw
jmp
enter
jl
push
scas
pop
mov
add
in
fdivr
pop
cmp
xchg
pushf
jle
outsl
mov
mov
or
add
xchg
pop
or
inc
cmp
fwait
lahf
mov
jmp
inc
jge
dec
cmpl
mov
test
push
imul
sti
int
mov
mov
ret
out
movsl
fisubrl
mov
ljmp
push
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
jmp
cmpsl
icebp
cmp
pop
dec
arpl
xor
adc
xchg
lahf
mov
arpl
mov
mov
cli
mov
out
aam
adc
rcll
cs
mov
mov
das
push
enter
xor
jbe
mov
ficoms
ds
dec
fidivl
clc
popf
push
dec
jae
inc
cmp
xchg
ret
xchg
mov
push
pusha
out
pop
sbb
jl
dec
scas
or
xchg
movsb
adc
adc
and
and
js
dec
pop
mov
xor
dec
unpckhps
rcr
xchg
push
js
sub
or
jbe
in
dec
push
push
push
jno
xchg
dec
push
sub
push
lret
arpl
pusha
jb
dec
ss
popa
movsl
xchg
fs
cli
sbb
jl
mov
adc
rcll
jo
mov
add
mov
push
and
mov
cmpps
inc
push
jb
push
addr16
add
push
mov
shrb
mov
push
sbb
repnz
cmp
mov
xlat
fsts
mov
cmp
and
add
icebp
test
pop
inc
addb
scas
xchg
and
daa
pop
popf
ret
jb
dec
into
inc
xchg
xchg
sbb
test
jge
lea
and
mov
xor
sbb
sarl
inc
push
flds
xstore-rng
cmpsl
pop
fisttpl
jb
sub
mov
lods
sbb
cs
dec
jne
bound
jb
cld
cli
jns
jns
inc
filds
out
adc
cmp
cmp
push
pushf
je
inc
insl
push
rolb
xchg
outsl
test
fisttpl
cld
push
ret
mov
push
pop
and
mov
adc
or
ljmp
data16
ret
sti
push
addr16
mov
xor
jno
ds
pop
and
xchg
adc
and
insb
add
mov
or
hlt
sub
or
pop
mov
movsb
inc
sbb
lds
mov
mov
sarl
std
stos
lds
xchg
jp
and
sahf
mov
arpl
xchg
repnz
daa
pusha
dec
xor
mov
dec
add
adc
aam
jae
fidivrs
xchg
addr16
pop
cs
scas
add
das
arpl
pop
aad
or
jno
pushf
scas
das
lcall
stos
mov
mov
jmp
lahf
dec
mov
mov
push
xchg
dec
roll
ficoms
push
mov
pop
out
xchg
or
fnstenv
ds
adc
cld
test
sub
daa
adc
xchg
jmp
into
lea
fdivl
sub
sub
sbb
shrl
push
test
cmp
nop
sarl
imul
ret
cmp
lret
stc
jae
mov
inc
inc
and
mov
insl
lods
pop
clc
sub
jecxz
or
jge
xchg
xor
xchg
xchg
jne
stos
mov
sarl
aad
xchg
imul
fsub
mov
cmp
jb
shrb
rorb
ficoml
ljmpw
mov
addr16
das
sti
mov
cmp
or
sbb
pop
cmp
or
sbb
pop
inc
icebp
and
inc
cmpsb
sbb
add
push
adc
jmp
sub
fwait
cmc
popa
dec
in
sahf
mov
and
inc
mov
push
lock
fwait
jecxz
xlat
cld
out
and
test
je
add
ja
clc
out
fwait
or
lea
lret
pop
punpckhwd
xchg
in
mov
lret
pop
mov
mov
icebp
mov
xor
xor
adc
xchg
cld
sub
xor
loope
into
xor
ret
test
imul
fcoml
jae
adc
ds
rcr
or
mov
or
adc
es
adc
and
or
inc
lret
sub
cltd
in
mov
aad
nop
call
jg
cmc
xchg
push
mov
add
popa
mov
xchg
pop
test
mov
das
ss
icebp
inc
or
mov
rep
mov
test
cmpsl
out
insl
dec
pop
ret
out
in
jecxz
cmp
sarl
dec
cwtl
push
cwtl
ret
ss
and
popa
add
or
lea
stos
push
clc
mov
push
jne
or
dec
xchg
push
enter
add
mov
cli
jg
push
ds
bound
xor
rorb
xchg
add
test
sbb
jmp
sub
inc
and
fwait
sbb
cmpsl
xchg
sub
call
xlat
lods
shrb
fmull
hlt
dec
inc
cwtl
mov
popf
sub
inc
push
jb
jcxz
das
push
pcmpgtd
ret
jae
jp
xor
shrb
pop
in
push
ds
aas
jge
adc
sahf
push
cmp
in
and
mov
mov
xchg
ss
mov
xchg
and
xchg
fldl
cmp
stos
push
push
sbb
lcall
popa
lock
add
lea
les
cld
xchg
not
cld
adc
lods
inc
xchg
dec
sbb
loopne
adc
lods
jne
not
ss
lock
mov
lea
mov
xlat
sbb
jno
shlb
cmpsb
xor
pusha
dec
push
and
mov
addl
loope
addr16
sub
aad
lret
data16
loopne
xchg
or
mov
insl
rorl
mov
dec
inc
sbb
dec
adc
sbb
add
add
stos
mov
sbb
push
mov
les
cs
out
push
js
rolb
cwtl
out
insl
xchg
dec
lds
push
mov
mov
add
aaa
outsb
movsb
lret
adc
cltd
and
adc
fnstcw
and
mov
cmp
in
adc
call
ret
roll
insl
dec
dec
push
int3
aad
shrb
pop
mov
sbb
push
jae
jno
push
jle
cmpsl
xlat
shl
fisubrs
cmpsl
push
lret
out
cmp
rol
lods
mov
fidivrs
push
jge
xchg
out
fidivl
adc
fs
push
dec
popa
les
xchg
cltd
mov
push
ja
push
inc
inc
inc
lahf
pop
hlt
ljmp
sbb
repnz
cs
gs
add
dec
bound
pop
rcrl
outsl
clc
add
in
mov
aam
aad
test
and
jge
pop
fildl
dec
imul
in
call
out
mov
aad
add
pop
mov
or
jb
sbb
ljmp
lcall
dec
push
std
xor
movsl
dec
out
mov
repz
cs
cmpsb
inc
or
push
sbb
mov
sbb
fisubrs
add
pop
fnstenv
movd
into
test
std
xor
addr16
imul
or
pop
add
ljmp
sub
add
adc
xchg
cmc
mov
sub
nop
dec
cmc
xchg
mov
enter
mov
out
dec
dec
lea
in
mov
in
push
jp
fiadds
sahf
fists
dec
dec
ret
stos
fwait
mov
mov
fucomp
test
jge
jg
mov
nop
loope
xlat
iret
ds
push
cmpl
aaa
mov
mov
add
jb
add
sbb
mov
stc
pop
add
sub
lret
pop
mov
inc
leave
clc
or
pop
mov
shll
or
sbb
mov
jmp
pushf
dec
pop
and
mov
out
add
dec
sbb
bound
cltd
pmullw
adc
and
and
jne
inc
mov
in
jo
push
shrl
pushf
gs
movsb
pop
repnz
sbb
push
mov
test
pop
sarb
xorl
mov
mov
roll
das
nop
sbb
jne
incl
lods
xchg
and
je
dec
sbb
hlt
mov
jnp
cmp
cmp
ss
shl
inc
sbbl
push
loop
scas
lods
inc
dec
loopne
lock
arpl
mov
mov
jecxz
sbb
outsb
adc
scas
sub
mov
push
out
cmp
jle
fadds
mov
jb
in
leave
das
xlat
pop
in
aaa
ret
mov
mov
xchg
dec
or
add
cmp
js
push
stos
lds
movsl
cld
jo
mov
test
add
jb
pop
nop
xchg
jnp
xchg
hlt
into
and
jbe
xchg
fs
add
inc
xor
loopne
cld
mov
sub
mov
add
lcall
adc
dec
jo
mov
jbe
or
je
dec
jmp
jne
inc
xor
mov
inc
xchg
sbb
mov
sub
out
pop
sub
mov
xor
jecxz
fdivrl
fdivs
jnp
mov
push
dec
lret
out
ret
push
out
mov
dec
add
or
jno
lahf
adc
push
decb
cmp
sbb
pusha
inc
ror
lods
gs
jne
ret
les
mov
and
daa
shr
jo
and
mov
cmp
fidivrs
push
xchg
mov
fwait
ja
fcmovbe
push
mov
add
pop
mov
loop
outsl
rcll
and
cmp
les
adc
movsb
sti
bt
mov
jg
pop
push
hlt
add
jae
and
les
pop
testb
sub
inc
jbe
pop
adc
mov
adcb
mov
mov
pop
aad
push
dec
sub
mov
push
pushf
pop
stos
mov
pop
test
das
pop
pop
iret
push
inc
xor
pop
imul
sub
xor
sarb
pop
clc
and
adc
icebp
jge
mov
adc
cmp
pusha
stos
mov
pop
pop
mov
aad
sbb
sub
add
scas
fisttpll
cwtl
dec
inc
add
clc
xor
ss
jp
inc
or
mov
scas
test
or
in
popa
mov
fistl
mov
xchg
pop
mov
jnp
and
sarb
faddl
jl
add
mov
mov
mov
sbb
push
ljmp
or
fs
insb
jp
jno
jg
cwtl
addr16
aad
shll
int
sbb
mov
push
xor
xchg
and
aas
mov
xor
out
popf
scas
pop
dec
adc
stos
bound
roll
clc
jmp
and
and
jne
pop
push
dec
jne
sbb
frstor
stos
testb
xchg
lret
cmp
mov
mov
call
je
arpl
jbe
incl
mov
push
js
stc
pusha
inc
jge
flds
xrelease
ret
jge
fstl
ss
nop
jg
add
insb
cmp
movl
mov
jbe
loope
xchg
inc
dec
mov
push
pop
push
dec
and
aam
inc
fcomps
cmpsb
ljmp
dec
push
pop
ret
pop
and
sbb
cmp
mov
mov
xchg
js
test
cmpsb
les
aad
lds
loop
inc
dec
cmpsb
xor
inc
repz
das
fwait
inc
leave
psubd
aaa
mov
test
pop
out
push
add
das
cmc
or
adc
lds
sub
in
fwait
add
jne
ljmp
call
jge
add
cli
pop
int3
jne
addr16
ret
aam
or
sahf
pop
jb
jp
rol
lock
fdivrs
mov
or
inc
ja
mov
adc
test
add
fstl
mov
mov
jl
inc
shlb
sub
xor
pop
cmp
clc
movsb
inc
in
das
mov
inc
mov
pop
jae
xchg
jo
mov
mov
dec
mov
addps
jecxz
xchg
adc
js
cli
xor
adc
mov
js
pushf
mov
sub
and
xor
out
int
pushf
xor
pop
aad
mov
mov
cmp
subb
pop
mov
in
addr16
and
mov
pop
mov
test
sub
aas
dec
leave
in
std
mov
sti
push
push
dec
pop
js
clc
push
mov
mov
das
rcrb
bound
cmpl
push
cs
sbb
xchg
fwait
cmp
add
inc
xchg
and
maskmovq
scas
test
push
xor
inc
push
int3
mov
sbb
mov
or
xor
cwtl
clc
int
sbb
imul
aad
pop
mov
adc
ljmp
mov
outsl
outsb
rorl
lods
cmp
mov
or
dec
dec
jae
int
jmp
mov
xchg
notrack
nop
js
ss
outsl
iret
xor
lcall
mov
push
and
mov
mov
ret
cmp
xor
test
adc
and
dec
imul
ss
xchg
push
call
in
mov
xor
cli
jmp
push
dec
icebp
dec
aas
sub
dec
pop
mov
and
mov
mov
mov
outsb
ret
ja
stc
or
lock
xor
lret
xchg
cltd
loop
sub
test
and
fisttpl
xchg
cmp
or
fs
cmc
arpl
dec
mov
loopne,pn
and
repnz
daa
push
pushl
push
push
call
mov
jmp
push
rcrb
and
inc
outsb
xchg
push
push
mov
ja
or
pop
jb
fdivr
push
jp
stos
aam
push
jae
or
xor
sbb
inc
repnz
mov
lahf
scas
sbbl
sub
jb
mov
aaa
fsubrl
fcmovb
lea
mov
and
pop
icebp
push
mov
dec
mov
test
push
sub
mov
dec
negb
ficoml
xchg
ja
pop
xchg
aaa
jecxz
out
mov
cmpl
orl
sbb
jns
fistpll
arpl
daa
in
pop
rolb
dec
out
iret
js
dec
mov
and
and
push
mov
push
mov
mov
out
lret
out
push
pop
mov
dec
aaa
js
loop
shll
mov
mov
xchg
arpl
xor
inc
repnz
push
leave
je
xor
dec
gs
and
sbb
shll
ss
test
lret
insb
xchg
test
and
add
vmovlps
mov
rcr
insb
mov
jnp
inc
repnz
fisubl
jnp
daa
scas
shr
dec
pop
insb
dec
dec
mov
or
addr16
popa
daa
adc
inc
xor
popl
push
neg
mov
and
repz
xchg
mov
ret
adc
jbe
out
cs
jg
inc
sbb
dec
cmpsl
cmp
or
and
mov
cld
adc
insl
dec
movsl
pop
pop
push
nop
cmp
dec
aad
in
mov
and
mov
enter
insl
fiadds
fsts
out
adc
and
es
and
fadds
adc
aaa
inc
pop
add
jo
pop
shr
mov
adc
mov
mov
int
xchg
jg
ja
arpl
ficoms
loope
mov
cs
push
shl
mov
mov
sbb
or
fisubl
cmp
inc
gs
dec
rorl
mov
nop
push
mov
pusha
mov
cmp
add
mov
sub
jp
sub
push
and
sbb
aam
or
cmp
add
in
dec
mov
jbe
loopne
xor
xor
fists
aas
movsl
xor
rolb
inc
stos
add
jb
loope
dec
jge
fiadds
ja
adc
adc
in
sbb
jno
mov
and
ret
lahf
iret
and
cltd
aad
hlt
in
jle
fs
imul
mov
mov
mov
scas
inc
mov
ret
nop
xor
bound
xchg
push
add
pop
mul
clc
ror
adc
xchg
lret
insl
cwtl
int
mov
mov
jnp
ret
nop
pop
popa
xor
cli
dec
int3
inc
addl
inc
ja
sbb
push
js
lea
xchg
stos
xor
jp
fnsave
out
test
inc
mov
lock
into
cmc
cld
mov
inc
add
int
mov
leave
ljmp
inc
xchg
clc
daa
clc
shrb
mov
xchg
or
and
shlb
aad
or
loope
jg
adc
jmp
pusha
mov
sarl
arpl
mov
add
push
fists
int
cmpsl
add
cmpsl
cmp
pop
push
jle
mov
ja
hlt
sub
mov
fucomp
out
jp
push
xchg
clc
jge
add
mov
lea
xchg
xor
cld
outsl
imul
cli
xchg
or
lods
lret
cwtl
out
fcomi
int3
mov
stos
mov
mov
xor
scas
mov
mov
push
push
sbb
push
shrl
xor
jb
mov
das
cmp
mov
icebp
scas
ja
lods
int3
aam
push
in
inc
int3
jne
inc
dec
imul
dec
inc
iret
sti
mov
adc
sti
ficoml
fidivrl
cmpsl
in
add
xchg
xor
test
xchg
iret
adc
sub
push
push
pop
or
xor
dec
or
mov
xchg
addb
push
cmpsl
mov
pop
mov
add
pushf
sti
nop
xchg
repnz
xor
mov
into
sbb
mov
push
dec
or
adcb
or
add
push
addr16
test
sub
imul
loope
dec
dec
inc
xorb
int
cli
mov
mov
es
mov
inc
and
and
add
test
lock
push
cmc
dec
out
mov
lods
mov
int3
inc
int3
mov
das
jecxz
loop
push
pop
inc
jbe
push
notl
lods
leave
mov
sub
or
adc
push
xchg
stc
int3
add
shlb
and
test
insl
or
add
push
inc
loopne
xchg
ficompl
push
xchg
mov
fcmovu
jg
fldenv
inc
mov
ljmp
test
xor
dec
fcomp
pop
push
lods
aaa
cmpsb
cs
adc
and
stc
cltd
pcmpeqb
rcrb
ret
aad
dec
xchg
xor
or
dec
cwtl
cmc
cmc
out
in
sub
imul
xor
addr16
sahf
jge
xchg
sbb
push
inc
call
jle
loop
push
fwait
mov
xchg
test
daa
mov
push
cmp
mov
rorl
inc
push
sbb
sub
fcmovb
out
and
ljmp
jecxz
sbb
and
int3
dec
push
adcb
mov
cli
add
pop
ja
hlt
mov
dec
mov
rcr
pop
outsb
subb
jmp
or
mov
and
je
jbe
cmpl
sub
jns
fdivrs
int
cmp
or
inc
sub
fsubl
lahf
ljmp
dec
daa
and
xchg
sbb
pop
dec
xchg
xor
jecxz
imul
xchg
push
cmp
shrb
orl
cmp
jb
xor
std
cmp
fsubr
xorl
add
push
pop
jne
cmp
insb
lods
xchg
add
sbb
cmc
dec
je
dec
fcmovbe
in
popf
pop
repnz
scas
js
adc
or
scas
out
popa
mov
dec
mov
sbb
dec
dec
insl
test
jnp
lods
push
dec
jmp
aaa
push
push
xchg
lods
mov
arpl
sub
jg
or
jle
or
iret
pop
jp
aam
stc
fiadds
dec
ret
xor
or
xchg
popf
cmpb
or
cmp
idivl
push
mov
inc
inc
xchg
hlt
into
mov
lods
sbb
mov
cmpsb
or
fdivl
pop
jnp
pop
mov
cmpsb
popa
lahf
dec
and
orl
lcall
jae
daa
sarb
xchg
fdivl
lods
fucomp
fbstp
aam
popf
cmp
pop
fcmovbe
daa
add
mov
lods
mov
pop
add
insb
popf
dec
call
fcomps
cmp
dec
add
lods
enter
add
ljmp
imul
scas
sbb
xor
inc
nop
les
xchg
jbe
dec
inc
sar
mov
mov
fistl
jg
dec
or
outsl
andb
mov
sbb
push
mov
push
mov
rcrb
clc
inc
rcll
fldt
inc
sub
into
sub
fildl
ret
add
popa
fiaddl
imul
cmp
xchg
mov
fstpt
jbe
adc
pop
xor
cmp
or
outsb
xor
pavgb
sub
dec
xchg
or
outsb
adcb
lock
jmp
jg
add
mov
sbb
inc
sub
sbb
sti
xor
jecxz
cmpsb
dec
dec
dec
test
loop
mov
insb
ja
cwtl
aas
pop
mov
jns
cld
cmp
lcall
arpl
mov
mov
fildl
sarb
fnstcw
lahf
cltd
dec
int3
cmpsb
xor
out
sti
push
clc
rorl
push
inc
mov
sbb
pushf
inc
mov
push
add
repz
or
mov
sbb
sub
dec
ja
je
lret
jmp
push
and
fisubs
fwait
popa
orb
sub
int3
adc
aad
push
repnz
insb
ret
pop
mov
test
aam
mov
in
packsswb
cli
jl
ret
jnp
mov
fld
in
jg
sbb
xor
aaa
mov
pop
jnp
ss
cmp
or
data16
cmc
jg
jbe
out
fisttpl
test
lcall
sub
movsl
sbbl
xor
in
stos
inc
out
nop
js
push
and
and
dec
and
shr
fwait
ret
out
mov
push
pop
into
cwtl
lock
and
mov
mov
aas
inc
mov
in
mov
sbb
out
nop
xor
movsl
xor
movsb
loope
popa
cmpsb
rol
sahf
mov
pop
and
scas
fcomps
push
hlt
cmp
adc
mov
sbb
xor
mov
cli
sub
stos
cmp
fcmovu
imul
inc
jae
adc
cmp
adc
push
in
in
lret
test
fnsave
and
mov
ret
add
ds
inc
xor
ficoml
adc
push
in
add
ja
xlat
gs
notb
mov
lock
xchg
movsl
mov
loop
stos
cmpsl
jle
mov
mov
xor
or
andb
jecxz
js
lahf
scas
pop
mov
cltd
loop
inc
fstps
in
push
or
pop
gs
pop
add
lea
and
pop
cmc
cmp
les
test
xor
adc
adc
pop
inc
mov
std
orl
cmp
push
test
push
insl
test
test
stos
out
stc
cmc
xchg
push
xchg
add
outsb
clc
je
dec
sti
sbb
mov
stos
or
scas
push
je
mul
sub
cltd
cmp
ja
shrb
dec
mov
push
or
repnz
pop
pop
or
std
push
loop
cmovp
ss
sbb
mov
cltd
inc
addr16
mov
mov
das
decb
ja
pop
addr16
jmp
xor
mov
jo
test
adc
pop
lret
stc
lahf
push
cmc
xlat
or
ds
push
mov
loop
sub
xlat
and
ret
cwtl
lea
pop
mov
jmp
push
adc
dec
cmp
push
jno
lss
rcl
fidivrs
jl
mov
xchg
int
mov
mov
dec
movsb
pop
lods
loop
cmp
adc
rclb
mov
pop
rol
pop
ds
xchg
inc
out
sub
popf
cs
sarl
aad
mov
xor
jge
ss
xchg
sti
jnp
dec
fimull
adc
cmp
add
out
pop
lret
dec
push
mov
inc
push
adc
or
incl
inc
cmpsb
in
mov
scas
inc
addb
or
lods
fiadds
jbe
push
addr16
dec
rcrb
arpl
xor
fwait
add
pushf
mov
arpl
ret
inc
fnstenv
and
cmp
xor
mov
mov
xchg
lahf
jb
and
ds
lret
pushl
cmp
neg
in
scas
repz
push
out
xchg
test
mov
xchg
es
test
daa
sub
cmp
icebp
xchg
jbe
nop
lret
or
cld
lods
aaa
lret
dec
fildl
and
push
lret
sarl
pop
leave
or
repnz
fldcw
pop
fstpt
sbb
jns
mov
mov
inc
fistl
cmpsb
or
jnp
cltd
xchg
cmp
xchg
dec
stos
jle
lret
jnp
cmc
gs
inc
loopne
push
lret
ja
push
sbb
sbb
cld
movsb
push
jp
add
iret
pop
xor
and
pop
sti
ds
cmp
mov
lea
push
fwait
fs
ja
sbb
sbb
inc
pop
stos
cli
adc
in
inc
mov
shlb
push
out
xchg
inc
mov
and
push
out
pop
cli
mov
idiv
leave
mov
ds
test
pop
notl
nop
call
sbb
in
inc
imul
push
fs
test
jp
pop
xchg
fstps
mov
popa
rorl
data16
pusha
cmp
xchg
fwait
movsl
into
call
sbb
std
jnp
or
shlb
mov
insb
add
xor
arpl
cmpsb
or
xchg
pusha
jg
adc
fdivl
push
dec
lret
rorb
push
xchg
arpl
pop
out
and
push
xor
mull
int
push
sbbl
lret
or
sub
ds
mov
xchg
scas
out
add
stos
inc
js
inc
data16
push
dec
mov
das
mov
es
adc
inc
xlat
fwait
xchg
sbb
or
orb
les
jae
loopne
int
adc
mov
icebp
cld
mov
push
shll
jb
mov
jne
cmp
lret
test
mov
out
mov
lock
gs
insl
jp,pt
in
sbb
cmc
push
pop
movsl
or
pushf
lds
add
add
dec
and
into
ljmp
movsb
xchg
push
cmpsb
push
xor
mov
cmp
sahf
jnp
pop
stc
aam
in
stos
cmp
cmpl
es
dec
jbe
stos
aaa
jmp
iret
add
insb
pop
lock
mov
sbb
pop
jle
adc
adc
mov
dec
jno
lds
pop
test
addl
in
dec
sbbl
adc
jle
adc
fwait
and
into
sahf
test
sbb
shll
std
mov
ss
lds
mov
call
dec
jo
ret
loop
adc
out
xor
mov
mov
mov
push
push
jmp
push
xchg
stos
les
ret
out
adcb
pf2id
pusha
jl
stc
and
mov
movsb
hlt
sbb
push
cmp
mov
or
push
sub
stos
mov
js
jg
cmp
bound
std
xor
jo
push
xchg
fs
xchg
and
into
inc
enter
add
push
xorb
cmp
cmp
addl
ror
cmp
push
test
xchg
fsubrp
repnz
jl
sbb
aad
and
push
jmp
ss
add
or
push
jg
lcall
fwait
repnz
inc
inc
adc
push
mov
cltd
adc
adc
shll
dec
movsl
mov
sarl
sub
roll
mov
aaa
aad
pop
jnp
inc
cmpsl
pop
insb
mov
ja
stc
xchg
push
call
push
mov
pop
stos
sti
ja
mov
or
out
sub
stos
or
inc
xchg
jge
test
adc
cmp
test
jno
or
xor
fs
stos
lahf
iret
push
fwait
sbbl
insl
stos
sti
fnstcw
or
xchg
adc
push
or
inc
xor
push
loopne
adc
ljmp
stos
cltd
mov
sub
mov
lods
xchg
inc
icebp
xor
or
or
jno
mov
sbb
push
mov
inc
cli
mov
test
ljmp
mov
add
adc
out
inc
cmp
sbb
and
inc
fstpt
jae
outsl
push
je
add
fnstsw
test
pusha
dec
dec
lret
and
xchg
push
mov
mov
dec
mov
mov
lods
or
inc
jbe
mov
das
inc
mov
push
aad
cmp
cmp
mov
sub
push
inc
outsb
loop
scas
dec
les
dec
movsb
shlb
addb
add
outsl
cmpsl
mov
and
jl
pusha
xchg
mov
jns
push
dec
insb
int
aas
pop
sub
fdiv
int
inc
jge
insl
cmp
jecxz
in
jnp
inc
sti
sbb
das
cmpsl
mov
stos
xor
sbb
rcrb
sbb
push
mov
sarb
mov
jae
leave
pop
popa
loop
adc
mov
cmpsb
pop
repnz
fcoms
xor
xchg
sub
adc
sarb
sbb
out
add
mov
sub
js
and
popa
fisttps
jg
aam
loop
push
adc
arpl
je
mov
or
mov
and
bound
mov
lret
test
mov
into
data16
ret
cli
test
jge
pop
lcall
pop
fucomi
mov
cmp
movsb
and
xchg
sarl
xor
test
pop
sub
sbb
add
andb
push
cwtl
stos
pop
push
and
nop
bound
dec
mov
xchg
adc
test
and
adc
in
hlt
in
cli
cmp
neg
je
inc
xor
decl
fwait
in
inc
xlat
jno
jo
pop
sbb
rcll
aaa
fbld
jge
sbb
mov
dec
lcall
dec
scas
inc
mov
rorl
pop
jmp
aas
out
gs
pop
or
cwtl
shlb
data16
lret
pop
mov
mov
in
mov
push
mov
push
mov
cmp
mov
jge
mov
cld
mov
pop
xor
cmpsb
cltd
mov
sbb
xor
popa
inc
std
jno
mov
jbe
adc
lret
stc
lcall
fdivs
push
add
jl
std
pop
pop
pop
fsts
inc
movsb
insw
ret
dec
pop
xor
addb
mov
into
sbb
cs
dec
rcrb
xor
xor
lret
fmull
mov
sti
dec
inc
xchg
add
push
rol
rorb
sbb
add
sbb
fcmovu
xchg
cld
negl
jmp
ret
sub
rolb
inc
sub
iret
mov
pop
jae
int
jl
stos
insl
push
call
pop
insl
icebp
push
out
scas
xchg
testb
jecxz
mov
push
call
push
popf
mov
notb
mov
in
sar
push
jae
pop
out
mov
mov
movsl
mov
dec
call
or
push
jb
out
push
mov
sbb
into
imul
push
add
lcall
loop
lahf
mov
popa
and
or
pop
cmp
mov
in
push
loope
jb
push
hlt
sbb
sub
int3
aam
and
xchg
pminub
push
xchg
movsb
nop
cmp
loop
sub
mov
ret
inc
addb
test
in
push
loopne
inc
sub
pop
xchg
repz
push
ja
jge
dec
in
xchg
push
int3
or
pop
imul
cmp
aaa
sub
ljmp
fldt
push
lahf
jne
xor
dec
adc
cmpb
les
xlat
lret
add
stc
sbb
xor
push
dec
sbb
sub
mov
add
inc
cmp
jle
or
test
lock
mov
cmp
mov
jae
add
int3
inc
inc
out
sbb
nop
popa
test
or
and
adc
xchg
mov
mov
jp
jg
sti
decb
repz
lock
pop
popa
scas
std
inc
or
sub
or
cmp
out
popa
inc
pusha
xor
xchg
rcll
sbb
mov
pop
int3
mov
lds
xor
add
xor
clc
sti
or
dec
xchg
lcall
xchg
cwtl
jp
xor
dec
insb
mov
test
xchg
add
frstor
xor
sub
cld
pop
sub
outsl
pop
scas
int3
lcall
ret
into
repnz
cmp
ljmp
or
das
mov
addb
addr16
fs
repz
lock
stos
add
add
daa
pop
dec
fs
sbb
pusha
arpl
jmp
insb
cmp
dec
ffreep
cmpsb
cmp
outsb
popw
xchg
dec
or
lea
sub
rcr
addl
ja
lcall
les
mov
inc
in
addr16
dec
adc
testl
lea
scas
push
ret
idivl
ds
jp
lcall
xchg
or
jb
das
xor
mov
jb
icebp
mov
cmp
ret
test
lock
push
sbb
and
sbb
shl
dec
mov
sbb
mov
cmp
frstor
xchg
dec
mov
mov
cmp
add
pushf
cmc
jge
add
std
and
mov
out
popf
pushf
xor
xchg
push
or
in
lret
movsl
fisttps
push
pop
jnp
sub
xor
xor
fs
push
nop
sbb
test
fiadds
fidivs
outsb
fstpt
pushf
jg
or
hlt
repz
movsb
cwtl
pop
mov
nop
out
xor
pusha
js
add
movsb
ret
lret
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
jmp
pop
jge
lds
hlt
inc
cmp
lret
mov
ja
mov
sbb
test
aaa
push
sub
js
lods
addb
pop
mov
in
dec
and
and
mov
xlat
aad
cli
ds
jg
mov
add
movsb
nop
xchg
and
mov
pminub
xchg
jge
bound
pop
inc
jl
sub
jb
mov
add
ficoms
mov
popa
jns
adc
nop
insb
mov
mov
outsl
jge
das
xchg
sub
push
push
loope
adc
jp
popf
cmp
inc
fdivp
lds
fsubrp
subl
aad
ds
in
fdiv
cmp
jae
jno
sti
rorl
in
test
and
xchg
aas
xchg
jne
pop
push
pop
test
sarl
or
mov
ret
in
sub
hlt
pop
aam
sub
repnz
ret
pop
insl
test
inc
scas
xchg
xor
out
clc
ret
cs
jecxz
mov
push
sub
imul
scas
lea
xchg
or
cmp
push
int
out
pop
adc
xchg
orb
aad
mov
idivl
fisubs
scas
mov
pop
sbb
mov
mov
jnp
fwait
push
add
icebp
fisttps
sub
add
cmpsb
add
adc
dec
sbb
pop
out
lods
jmp
nop
jp
cli
jns
stos
movsl
or
addl
lock
sarb
aaa
data16
in
push
movsb
fisubl
push
mov
dec
lahf
mov
fisttpll
call
imul
cmp
dec
test
je
fnstcw
xchg
add
popf
shl
aad
aad
add
stc
les
ljmp
scas
repnz
lea
repz
mov
jecxz
jecxz
mov
sti
loopne
inc
xor
jg
into
push
xchg
sub
mov
out
or
adcl
icebp
adc
mov
mov
pop
icebp
adc
jno
mov
jle
cli
cmp
jecxz
call
je
push
and
jnp
inc
aad
lahf
push
add
mov
mov
in
or
cld
add
out
jg
or
pushf
popf
insb
push
adc
xor
dec
jnp
xchg
xor
and
pusha
and
add
shlb
push
movsb
dec
movsl
or
test
adc
inc
scas
pop
mov
leave
fists
addl
out
jmp
inc
xchg
int3
mov
adc
insb
cmp
mov
lods
push
mov
popf
lea
lret
daa
cwtl
xor
cmc
leave
inc
or
in
inc
push
push
mov
and
dec
std
ljmp
pushf
sbb
rorl
add
popa
mov
mov
cli
xchg
shll
leave
lret
sti
shll
pop
xchg
sbb
jl
xbegin
pushf
cwtl
sbb
jecxz
imul
jno
mov
or
mov
push
add
rolb
aam
dec
push
jno
sub
xlat
je
inc
cmp
dec
xor
and
into
lcall
test
test
push
mov
std
adc
dec
xchg
add
repz
ljmp
por
mov
jbe
mov
mov
loope
mov
pop
xor
stc
repnz
lock
in
ss
daa
pop
in
mov
or
lods
out
lock
mov
divl
test
xor
or
xchg
js
adc
out
mov
stos
cmp
out
aam
add
xor
ljmp
popf
in
and
or
mov
xchg
or
push
call
add
mov
mov
in
stc
mov
hlt
clc
jae
inc
sbb
dec
lock
lods
dec
fisubrs
push
push
jae
mov
addr16
inc
cmpsb
call
mov
sbb
pop
lods
out
push
lret
inc
inc
int3
imul
dec
pop
cmpsl
lock
out
test
fwait
movl
loop
sahf
mov
push
les
mov
mov
cmp
xchg
sub
test
ds
sub
iret
jbe
frstor
jecxz
shr
mov
icebp
sbb
xchg
jne
ljmp
les
movl
mov
leave
les
fcmovbe
cmp
push
cmpb
push
out
xchg
cmp
lock
pop
mov
out
mov
test
insb
jmp
imul
mov
inc
pop
mov
jle
in
jnp
add
ficoml
xlat
stc
sub
jge
stos
inc
xchg
xchg
cli
clc
push
inc
aam
inc
fwait
inc
fidivs
ret
dec
cmp
loop
insb
mov
mov
sbb
jns
aad
xlat
push
addb
lea
fwait
sbbl
lods
jo
adc
sbb
or
jo
adc
cmc
mov
mov
popa
ja
sub
or
shrb
mov
lods
push
loopne
stos
jno
pop
inc
fimull
jle
add
pop
xchg
adc
out
lret
jbe
addr16
outsl
je
fwait
push
hlt
fiadds
and
push
mov
std
mov
xor
divl
adc
jb
mov
mov
push
lds
cmpsb
shrl
jbe
bound
xchg
cwtl
repz
add
jl
shr
or
sbbl
fistpll
jo
adc
mov
jae
push
loope
out
cmpsl
sbb
imul
push
dec
outsl
shlb
mull
pop
stos
fisttps
sbb
push
pop
push
jae
inc
adc
inc
xrelease
add
pusha
jmp
stc
dec
inc
push
hlt
add
and
jno
xor
jg
add
data16
aaa
xlat
sub
pcmpgtb
pushl
pop
les
mov
shl
add
psubusb
and
jmp
xchg
outsl
sbb
sbbl
aas
pusha
xchg
imul
cmp
out
data16
push
cwtl
hlt
outsb
or
mov
inc
in
inc
movl
mov
into
icebp
or
jae
push
loopne
mov
fidivl
or
rcrb
ljmp
inc
aas
cmc
lods
xor
into
mov
stc
rol
ds
icebp
pop
xor
mov
jp
mov
xor
es
pand
mov
out
pop
mov
cmp
xchg
stos
fs
inc
jecxz
jnp
icebp
mov
adc
aam
enter
pop
ficoms
or
sarb
push
and
imul
enter
loope
cmp
outsb
sbb
or
adc
mov
lods
enter
add
fadds
add
and
add
loop
es
pop
js
sbb
adc
xchg
push
pop
mov
or
push
push
sbb
xor
pop
pop
and
fidivl
mov
ss
inc
testl
loope
mov
loopne
test
mov
es
pop
dec
xor
push
push
cwtl
sub
jle
xlat
shl
pusha
divl
or
cmp
imul
into
sbb
loope
inc
pop
or
xchg
sub
aam
dec
cmc
sbb
int
ds
aaa
mov
push
fs
xor
idiv
xor
enter
fs
shll
jbe
test
inc
sarl
xor
out
movsb
ret
lods
bound
or
mov
mov
nop
jae
push
xchg
adc
fsubs
prefetchnta
sbb
loope
pop
stc
cmp
push
inc
pop
mov
jne
repz
xor
dec
rolb
pop
shrb
mov
inc
inc
mov
jns
scas
out
std
fs
pop
mov
loop
jno
fdivl
jno
imul
dec
popa
mov
jle
pushf
fsubrl
sbb
or
inc
out
jb
inc
push
pop
mov
pop
test
je
cmp
into
inc
lret
scas
jmp
or
xchg
stos
clc
loopne
push
into
es
jle
sarb
int3
pop
out
stos
push
mov
cmp
jge
gs
xor
mov
or
and
push
ja
push
js
xchg
mov
mov
push
adc
or
xrelease
outsb
cli
stos
xlat
insb
imul
add
les
cmp
pop
inc
cmp
sub
into
dec
sbb
das
and
push
ds
fisubs
inc
push
js
adc
or
mov
mov
ret
test
and
mov
adc
mov
mov
arpl
push
popf
jns
stos
pushf
sbb
pop
sbb
in
dec
adc
stos
dec
cmp
mov
jno
daa
xchg
xchg
mov
sub
lods
push
clc
pop
cmp
or
iret
test
mov
mov
call
test
jb
testl
fs
jnp
stos
jl
mov
jecxz
jne
sbb
inc
lcall
fs
out
sub
in
mov
mov
sbb
add
sub
push
out
sbbl
mov
add
mov
or
imul
lcall
pop
xchg
or
mov
je
and
add
in
or
add
orl
pusha
mov
cmpsl
lahf
dec
sar
in
add
fcomps
test
pop
adc
inc
and
mov
jmp
add
call
sbb
push
movsl
lret
mov
nop
lock
aad
es
js,pn
das
pop
stos
add
pop
xor
dec
adc
sbb
mov
fiaddl
jb
cmc
cmpsl
popf
cs
mov
daa
outsl
mov
aas
notb
pop
or
insb
bound
aas
jle
pop
pusha
bound
js
inc
bound
sbb
mov
insl
stos
into
ds
jg
pop
pushf
inc
and
lods
call
daa
scas
add
sub
push
and
ret
cmp
add
cmp
or
push
imul
inc
fildl
jb
push
icebp
sbb
mov
fsubs
sbb
inc
std
cmp
in
xor
pop
cmp
add
fsubrp
sarl
dec
push
test
xchg
test
lds
das
adc
xor
sub
cmp
mov
jne
in
lret
stos
jp
negl
imul
pushf
cltd
and
cmp
sub
pop
dec
mov
cmp
fcomps
or
dec
out
push
outsl
mov
and
jno
test
xlat
mov
xchg
mov
loope
testb
fcoms
and
mull
adc
xor
not
imul
scas
mov
jbe
fmuls
jge
out
add
jae
push
mov
daa
shl
imul
leave
aad
mov
fadd
outsl
je
dec
orl
ljmp
out
cmpsb
lds
es
popa
push
jmp
dec
inc
iret
in
jg
push
dec
jb
ret
and
pop
jp
and
pop
cli
out
add
adc
lcall
xchg
mov
and
popf
push
pop
or
fistpll
mov
lahf
or
and
hlt
push
aaa
inc
stc
push
xchg
decb
mov
lds
pusha
out
push
es
icebp
sub
mov
mov
jne
pop
lods
pop
adc
mov
inc
mov
fdivrs
xchg
push
pop
inc
adc
xchg
test
cmpsb
jnp
mov
scas
test
scas
and
iret
sti
in
cli
repnz
jnp
or
lods
inc
pop
pushl
fcomi
jo
fwait
rclb
dec
fnstsw
mov
push
adc
in
xchg
sti
xor
dec
push
loope
pop
cs
xchg
dec
dec
add
hlt
sub
aas
mov
pop
or
or
push
sub
sbb
lahf
mov
dec
mov
xor
inc
cmp
push
pop
sbb
cwtl
adc
and
jg
push
and
idiv
clc
insb
nop
jmp
pop
outsl
shrl
in
xor
and
dec
fwait
xlat
movsb
pop
jo
pushf
mov
dec
push
lds
mov
cmpb
dec
dec
daa
cmpb
cltd
sbb
adc
scas
mov
cwtl
fcoms
cmp
jg
inc
add
insl
sbb
mov
stos
sti
xchg
sub
dec
adc
fbstp
sub
test
push
xchg
pop
mov
cmpsl
cmpsb
add
pop
cmpsb
insb
in
jp
or
test
sub
fwait
dec
adc
xchg
push
iret
nop/reserved
daa
and
int
push
addr16
adc
fdecstp
push
or
int3
jo
adc
and
fwait
push
or
aaa
inc
sarl
insb
cmp
iret
xor
push
in
mov
movsl
test
lock
push
lahf
lcall
or
and
jg,pt
sub
push
lret
xor
cmp
lea
out
mov
inc
jecxz
daa
cmp
push
sub
test
xchg
fnsave
sbb
xchg
mov
in
or
sub
stc
in
retw
test
cltd
mov
lahf
xchg
xor
sti
outsb
add
jns
das
call
int3
rorl
cld
sub
xchg
es
insb
repz
les
xor
ror
aam
push
pop
push
mov
mov
push
mov
xor
ljmp
test
stos
sub
mov
push
cld
icebp
ljmp
mov
mov
xor
shl
xor
or
jmp
aam
mov
xor
push
aaa
xchg
sti
xchg
push
bswap
and
lcall
cmpsb
mov
mov
popa
mov
aad
fs
stos
fsts
out
gs
cld
js
add
les
cmpsb
dec
xor
cltd
push
mov
jecxz
jecxz
shrl
insl
out
xor
push
fistpll
cmp
ror
repnz
clc
bound
push
loope
lcall
inc
sbb
out
out
ja
jmp
pop
lods
mov
es
test
dec
pop
inc
mov
or
and
sub
mov
inc
mov
nop
xchg
rolb
sahf
mov
frstor
push
fisttpl
dec
gs
sbb
jge
pop
dec
in
add
fldt
lret
xchg
jge
pop
cmp
test
fists
mov
jnp
sbbb
xchg
xchg
add
or
ljmp
test
mov
not
add
fcmovbe
adc
std
imul
mov
mov
or
call
cmp
pop
adc
xor
xor
nop
repz
ja
fcompl
shrb
jno
es
xor
xor
xchg
adcl
add
ret
dec
jmp
sub
iret
movb
ret
call
cmp
out
mov
mov
cs
stos
daa
push
mov
pop
push
mov
das
mov
push
or
int
fisubl
adc
xchg
mov
jg
int3
les
dec
loope
das
xchg
adcl
ja
shlb
in
fstl
test
rcll
mov
push
or
sub
dec
bound
or
mov
cwtl
pop
mov
xchg
outsb
test
add
push
adc
sub
push
or
es
into
push
jp
into
xchg
and
jecxz
sbb
test
nop
in
movsb
mov
mov
pop
fwait
inc
or
ljmp
dec
je
mov
adc
inc
mov
lret
mov
xchg
push
inc
out
xor
inc
out
stos
jae
cmpsl
mov
push
push
add
or
adc
jl
xor
nop
sarb
mov
mov
mov
sbb
mov
push
pop
out
dec
icebp
mov
push
aas
push
xor
or
mov
or
xor
cmp
roll
stc
cmp
and
and
in
es
movsl
pop
js
sbb
popl
xchg
mov
imul
insl
add
loope
and
inc
data16
pop
sub
mov
sub
insl
pop
mov
loopne
jb
sbb
fstpl
xchg
inc
add
scas
mov
movsl
aas
mov
or
or
fsubrp
sbb
jmp
nop
push
sub
inc
sub
gs
mov
cmp
in
or
or
vandps
addr16
dec
jnp
outsl
sub
inc
push
xor
divl
sbb
jno,pt
icebp
inc
jne
xchg
push
popf
xchg
jae
aam
mov
cmp
lds
out
das
fstpl
or
call
lret
xor
cwtl
or
pop
lock
adc
fwait
pop
movsb
rorb
cs
cmp
xchg
into
pusha
jmp
mov
xor
pushf
add
xchg
sbb
cmc
pusha
setle
in
dec
lea
dec
dec
sub
push
dec
lret
xchg
adc
rcr
and
loope
xor
mov
orb
jl
and
int
ja
xchg
icebp
adc
adc
or
out
lcall
sub
sub
mov
inc
sub
xor
icebp
add
insl
pop
adc
call
sti
shlb
int3
sbb
std
lahf
iret
lret
loope
imul
or
and
add
add
stos
cmpsl
addr16
dec
outsb
pop
sub
movsb
mov
pop
das
cmpsl
loope
jmp
cmp
leave
lahf
jbe
sub
leave
push
xchg
jmp
retw
fcmove
jle
xor
pop
xor
pushf
push
add
xchg
nop
pop
add
push
and
hlt
dec
insb
enter
jb
rol
mov
movb
inc
xchg
fwait
out
mov
or
cmp
fdivrp
incb
push
pop
imul
scas
or
sub
lahf
xor
sub
adc
adc
jg
dec
pop
out
mov
hlt
bound
adc
mov
xor
gs
xchg
pop
adc
or
ret
out
sub
outsb
loope
sbb
cltd
mov
mov
sub
jnp
jmp
pop
mov
pop
inc
sub
rclb
loop
inc
cmp
test
mov
loopne
pop
inc
mov
xchg
cmp
jl
jg
mov
cwtl
cwtl
fs
fsubs
test
leave
cmp
add
stos
xchg
xchg
mov
push
mov
imul
pop
orb
adc
fisttpll
cltd
inc
inc
pop
jnp
in
xchg
std
cmc
push
push
xchg
mov
xor
mov
scas
push
into
xchg
push
stc
jae
add
movsl
jo
mov
mov
lahf
mov
mov
xchg
pop
dec
mov
sub
lock
add
cmpsl
xchg
lea
test
test
mov
aam
pop
cmp
or
mov
jle
push
cmp
es
xor
in
push
ss
movsb
call
addb
pushf
adc
dec
ljmp
call
ja
neg
stos
stc
inc
sbbl
mov
sti
test
es
in
test
pop
mov
jno
dec
dec
mov
inc
lock
mov
aad
adc
addr16
push
push
push
mov
jne
rolb
subb
inc
mov
jg
fidivrl
inc
jmp
inc
aad
inc
jp
mov
push
jae
imul
mov
sbb
sub
cmp
test
adc
push
fistl
jge
xor
hlt
sub
into
movsl
add
sbb
icebp
jp
cld
jmp
in
add
mov
scas
sub
rcrb
mov
mov
cmp
cmp
xchg
int3
int
in
jne
xor
push
aam
cmpsb
dec
jns
in
pushf
adc
ret
xchg
mov
and
adc
sbb
flds
out
xchg
pusha
sbb
enter
jae
pop
mov
push
enter
cmc
mov
ds
aam
repz
rcrb
mov
lock
dec
lret
xchg
movsl
rcll
repnz
imul
mov
test
je,pt
fwait
xor
xchg
jo
movsb
jne
int3
mov
jmp
or
pop
inc
or
and
jo
adc
xchg
and
mov
pop
test
test
sbb
ljmp
xchg
push
sbb
repz
and
arpl
fmull
repz
popa
mov
aam
pop
outsl
mov
push
xchg
es
jecxz
repz
mov
call
aaa
js
addl
arpl
cmpsl
cltd
ficoms
aaa
dec
stos
pop
stos
add
clc
stos
neg
adc
push
iret
dec
pop
test
mov
mov
inc
xchg
les
push
dec
push
lcall
inc
mov
ffreep
enter
stc
inc
xor
sbb
mov
daa
shll
xor
addr16
adc
mulb
sbbb
dec
or
ficomps
and
sub
outsb
jno
fistpl
lods
push
incl
sub
jnp
dec
xor
lods
fucomi
scas
stc
repnz
loope
mov
xor
pop
stos
incl
push
call
out
mov
xchg
gs
das
cmp
ret
pop
arpl
mov
lods
mov
sbb
and
test
inc
fimull
dec
mov
aaa
aaa
xor
xchg
push
adc
jmp
add
fisubs
test
lds
loopne
lods
fistpl
in
mov
jecxz
xor
out
call
es
or
cltd
mov
mov
pusha
pop
xor
push
arpl
mov
push
inc
and
sub
mov
iret
testb
fisubrl
dec
jl
fdivrl
cli
sbb
std
sahf
rcrb
cmp
xor
jl
mov
sub
xchg
mov
lods
mov
xor
inc
daa
cli
cmc
sbb
out
lahf
add
adc
fdivrl
inc
scas
dec
movsl
pop
mov
and
xor
jp
cmpsb
ljmp
mov
out
lret
sub
cld
aaa
rorl
jg
dec
add
sti
xchg
jge
fistl
stos
lds
xchg
test
js
lock
jp
mov
inc
ds
add
cmpb
mov
dec
cmp
test
out
cmpsb
mov
test
xor
mov
mov
dec
fs
jmp
and
inc
popf
jo
lea
or
mov
test
adc
pop
lahf
xchg
mov
sbb
shl
fcmovnu
test
outsb
sti
adc
xchg
sti
xchg
add
lock
or
mov
pop
popf
push
add
imul
cwtl
cmpsl
xor
jnp
test
iret
push
iret
xor
ret
add
das
fldcw
push
rcrl
cmpsw
aam
mov
xor
je
fs
or
js
lods
stos
jno
dec
xchg
push
fwait
movsl
add
xor
loop
mov
pop
mov
das
scas
mov
mov
sbb
popa
leave
in
test
push
es
push
pushl
jle
xchg
dec
inc
rcrl
mov
call
push
test
mov
add
rcrb
pop
out
push
sub
notl
push
adc
outsl
jecxz
sbb
sub
into
inc
or
call
mov
mov
or
inc
jmp
call
push
pop
jmp
mov
jge
mov
enter
fwait
ret
mov
call
or
adcb
and
out
add
ja
ljmp
pop
push
push
shlb
shl
mov
inc
cmp
movsl
and
pop
bound
mov
negl
pop
gs
out
or
int3
xchg
scas
fdivl
adc
or
insb
int
nop
cmpsl
pop
mov
insb
les
addr16
shld
loope
nop
test
call
mov
sbb
imul
scas
push
pop
in
and
aaa
push
cmpsb
in
dec
in
and
push
mov
sub
mov
dec
cmc
inc
fcoms
dec
in
shll
jo
in
push
xchg
push
ljmp
fsubl
cmp
in
roll
pop
loopne
movsb
in
lock
sbb
lahf
push
xchg
loop
or
jns
cmp
mov
mov
adc
ficoms
jge
in
popf
pop
arpl
sti
sbb
sub
stos
fadd
ja
mov
mov
jbe
nop
sbb
fisttps
and
js
ljmp
dec
test
mov
jl
lret
int
jg
iret
int
push
jmp
insb
scas
or
adc
in
jmp
sub
pop
out
inc
out
cwtl
add
push
inc
mov
sti
rcr
js
mov
pusha
out
fcoms
sbb
xchg
sbb
xor
popl
test
fisubl
dec
cmpsl
in
sbb
je
shrb
addb
mov
out
daa
in
aam
andb
cmp
pusha
sbb
bound
je
ja
in
popa
lret
in
mov
insb
xor
xor
pop
aam
mov
mov
lret
sbb
rorb
mov
mov
mov
int3
movsb
popf
rolb
enter
lret
ret
loopne
pop
xchg
adc
cmp
and
jge
leave
add
push
es
push
xchg
cltd
lcall
lret
test
jne
lods
jnp
test
scas
sbb
or
repz
loope
pop
ja
movsb
or
sub
adc
fucom
jb
orb
mov
adcb
lret
jo
incl
sub
test
inc
pushf
hlt
dec
int
ror
movsl
mov
sub
pop
daa
fadds
or
adc
dec
sbb
sub
or
xor
jne
pop
dec
mov
or
pop
jne
sbb
cld
mov
mov
push
jmp
fnstcw
or
jno
cmpsb
or
outsb
xor
sub
das
aaa
cmp
and
daa
test
inc
dec
sub
jno
dec
jne
fidivrl
jae
into
fcomps
jg
pushf
mov
pushf
inc
pop
bound
int
sub
mov
cmp
add
push
add
aad
dec
fnsave
mov
scas
pop
or
pop
push
sbb
sbb
in
xchg
aas
push
addr16
out
out
stc
rcrb
mov
push
add
inc
out
out
fadds
rcrb
pop
dec
icebp
ss
push
js
add
push
and
sbb
daa
in
cmp
xor
nop
jge
mov
out
jbe
bound
sub
xor
lock
movmskps
shll
cmp
cmp
ljmp
jns
inc
inc
aad
pushf
lcall
push
sbb
jae
jns
and
insl
dec
sbbl
adc
lret
cmp
rcl
mov
ret
xchg
add
jmp
std
sti
sbb
sbb
mov
out
adc
xchg
fsubl
es
xchg
adc
les
adc
sbb
sbb
je
iret
pop
xor
test
xlat
pushf
aas
or
enter
push
ja
push
pop
imull
idivl
rolb
push
cmp
ds
aam
sti
sub
popf
clc
ficoms
push
adcb
and
and
adc
sbb
pusha
rorl
mov
cmp
adc
mov
add
out
dec
adc
hlt
and
jnp
fucomip
mov
insb
jnp
daa
jae
dec
xchg
xchg
rcll
std
cmpsb
jbe
stc
enter
mov
push
scas
test
lahf
inc
dec
dec
vmptrld
fiaddl
fsubrs
pop
sbb
push
pusha
das
or
cli
pop
pop
adc
xor
sbb
push
iret
in
daa
fmuls
scas
cmpsb
xor
mov
adc
and
push
mov
imul
push
xchg
cmpsl
imul
std
mov
xchg
mov
notl
mov
inc
sub
adc
jg
outsl
hlt
push
fwait
mov
out
mov
aam
and
daa
imul
nop
mov
addr16
push
cmp
std
sbb
xchg
adc
movb
jo
cmpsl
aas
divb
mov
aas
into
cmp
mov
pop
mov
dec
sub
jbe
inc
dec
lods
mov
js
in
sbbb
scas
sub
lahf
out
sub
in
jb
jg
cmpb
sub
jp
cmc
das
and
jmp
xchg
das
dec
dec
jge
bound
pop
inc
and
stos
scas
dec
jp
inc
pop
leave
push
in
inc
icebp
lods
mov
push
push
fs
push
xchg
pop
data16
cmp
mov
sub
jge
aas
outsb
inc
jae
fdivrl
stos
frndint
cwtl
mov
data16
roll
jg
sti
fsubl
icebp
inc
out
pop
push
int3
cli
add
fadd
testl
xor
sbb
mov
add
gs
push
cmpsb
mov
fiaddl
xchg
insl
out
xchg
imul
push
adc
cmp
mov
lds
sbb
mov
push
sub
add
or
xor
xor
xor
cmpsl
das
push
leave
mov
ss
sbb
lahf
cmpsl
mov
jo
aam
jmp
cmp
mov
movsl
nop
movsb
cmc
mov
and
dec
imul
push
sub
sti
pop
popf
and
mov
jmp
mov
lcall
cmp
pushf
insl
mov
or
movsl
and
int3
daa
arpl
adc
mov
and
and
sub
dec
insl
insl
push
mov
std
jge
mov
dec
test
add
ss
rclb
fdivrl
and
cmp
or
mov
cmp
fildll
jp
adc
loopne
pop
xlat
mov
ljmp
push
add
sahf
pop
mov
rcl
imul
mov
push
jno
mov
cwtl
std
inc
aam
or
jo
sti
push
or
repnz
push
clc
cwtl
in
xor
inc
test
lods
loop
sub
add
mov
stos
or
inc
cltd
jmp
das
mov
jb
sub
jae
and
mov
sarl
cmp
mov
add
pop
cmp
mov
sti
ret
jg
mov
cmp
cli
mov
not
sub
cmp
and
lcall
inc
out
cmp
adc
jle
inc
outsl
pop
push
lret
push
pushf
jmp
popf
out
je
test
xor
cmp
xchg
testl
iret
repz
inc
pop
repnz
push
ljmp
fistpl
fldt
add
xchg
stos
pop
enter
dec
cmpsb
les
cwtl
jns
mov
push
insb
jmp
clc
sti
mov
cwtl
jmp
add
sub
adc
cmp
stos
mov
mov
loope
fwait
dec
insl
jne
pop
pop
outsb
sbb
mov
xchg
pop
repz
jo
repnz
cmp
xchg
sahf
into
sub
fs
xchg
jb
jbe
xchg
add
add
popf
pop
outsb
mov
shrb
aad
jge
add
out
cmp
pop
call
cmc
jmp
imul
and
imul
jno
cli
shll
jns
lret
jnp
shrb
xchg
mov
push
or
rorb
xchg
ret
push
test
jge
insb
add
and
je
daa
xor
mov
mov
pop
mov
xor
imul
out
mov
cmp
jge
adcb
pop
scas
mov
mov
push
add
push
mov
dec
js
enter
popa
sub
or
lock
xor
js
and
push
sbb
pop
mov
icebp
inc
push
loop
mov
cli
add
add
adc
lods
jge
aad
inc
sub
or
frstor
aam
xchg
loopne
leave
inc
cs
and
mov
rcrb
imul
sbb
movsb
fnstenv
into
mov
aam
sti
dec
insb
jg,pt
mov
adc
jp
in
ret
xchg
gs
pop
sub
jmp
test
jmp
divb
pop
adc
xchg
and
cmc
cmp
sbbl
pop
fnstsw
adc
push
jb
xchg
sbb
mov
adc
ja
jle
inc
cmc
push
mov
pop
in
pop
and
mov
pop
sbb
mov
ret
fstl
or
cmpsb
pop
arpl
push
or
dec
pop
inc
push
addl
xchg
inc
and
cmc
clc
loope
inc
inc
and
jge
aas
in
xchg
lea
out
pop
add
stos
dec
pop
cld
pushf
jmp
and
inc
repnz
jl
ficomps
call
push
cmpsb
push
push
inc
scas
lods
push
std
cmp
xchg
sti
sub
push
idivb
loopne
xchg
pop
cltd
fnstenv
or
in
testl
fwait
or
sbb
mov
adcl
xchg
test
jne
popf
jae
mov
push
lahf
push
mov
dec
push
testb
mov
iret
lds
cltd
add
es
lock
mov
int
add
cld
js
das
aaa
sub
jp
outsl
mov
jne
lods
cmpl
and
lods
xchg
test
idivb
clc
lods
mov
mov
sub
push
rorb
fldenv
mov
and
clc
nop
ficoms
mov
and
imul
ja
sbb
pushf
push
pop
xchg
scas
sbb
scas
push
and
xchg
stc
stc
rcrb
les
xor
xlat
or
notb
fs
xchg
adcb
cmp
ror
add
std
aam
test
jge
sbb
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
xlat
mov
iret
or
push
mov
jns
inc
jg
adc
xchg
and
pop
sub
aad
push
or
lock
fdivrl
inc
vmread
nop
push
ret
js
addr16
lea
xchg
aad
xchg
fisubrs
mov
pop
jle
cmpsb
addl
sbb
dec
jg
pushf
notb
mov
scas
push
in
pop
or
sub
jnp
xchg
adcb
sub
fs
mov
pop
iret
add
push
sub
mov
mov
xor
fistl
lret
mov
pop
xchg
inc
bswap
notl
sub
dec
sub
mov
das
cmp
insb
mov
cmp
in
sbb
xchg
lret
sbb
xorl
and
mov
pop
cmp
fimuls
add
sbb
jns
cvtpi2ps
sar
fldt
outsb
push
enter
mov
xor
or
pop
jae
and
popf
out
push
mov
cs
clc
mov
or
insb
popf
out
mov
adc
and
ret
ss
pop
xor
xchg
inc
adcl
lahf
inc
adcl
sbb
ss
or
call
jnp
dec
jle
mov
mov
jp
std
jae
enter
cli
cs
test
pop
es
cld
movsl
jle
lret
call
fwait
in
stc
pop
orb
pusha
stos
rclb
xor
lret
ljmp
scas
and
xor
jl
int
sbb
pushf
aaa
addb
mov
data16
cwtl
adc
cld
sub
loope
dec
and
lods
or
cmc
jmp
daa
sub
mov
data16
mov
cmp
add
jle
push
ljmp
popf
jle
pusha
and
sbb
push
xchg
xor
adc
scas
jge
xor
sti
cmpsb
bound
cmp
xchg
cbtw
sub
ds
into
push
inc
stc
notb
adc
aas
cmc
sbb
dec
lret
pop
out
test
mull
cmpsb
gs
or
mov
sbb
xor
lds
enter
hlt
cmp
mov
dec
bound
test
or
test
imul
xchg
mov
mov
xor
push
add
jmp
mov
mov
jge
scas
lret
mov
insb
sbb
add
cld
loopne
jl
push
xchg
adc
pop
dec
adc
jl
xchg
or
mov
cmpsb
push
pop
nop
sub
or
pop
jnp
clc
jbe
ret
call
mov
add
div
nop
scas
aad
pop
movsl
gs
cld
jle
and
jmp
jmp
aam
sbb
cmc
cmc
in
nop
push
repnz
pop
incl
in
cmpsb
mov
adc
or
jo
lcall
into
cli
adc
out
out
in
lock
sbb
lds
mov
nop
out
inc
mov
lock
popf
dec
push
xlat
xor
pop
xor
lds
push
mov
lea
cs
rol
push
mov
xchg
in
cmpsb
xor
push
outsb
icebp
xchg
test
mov
cmpsb
icebp
pop
inc
mov
sbb
int
popf
fwait
scas
stc
mov
ret
popf
cmp
loopne
jb
insl
rcrl
loope
daa
psubsw
movsl
je
pop
outsb
out
mov
fcomps
mov
js
jecxz
mov
mov
sarb
lods
sub
pusha
fisttps
adc
sub
fldcw
jl
mov
dec
sti
fnstcw
push
pushf
aam
fisubrs
mov
sahf
sbb
pop
push
fdivl
adcl
mov
push
cmp
movsb
faddl
mov
insl
cmp
dec
xchg
lret
adc
stos
xchg
inc
scas
in
xor
inc
lods
insl
sub
insb
add
jl
sbb
lds
dec
leave
add
in
mov
mov
add
test
cli
fcoms
aaa
jne
pop
ss
stc
sbb
lcall
shlb
popa
and
sub
filds
cwtl
add
and
xchg
shrb
push
imul
cmp
adc
fs
mov
jo
rorl
test
sub
jmp
cmp
hlt
push
ja
lods
xchg
jp
mov
stos
xor
stc
adc
iret
rorl
loope
fwait
loop
ret
adc
fimuls
or
out
sahf
repnz
pop
push
fmuls
mov
aam
jp
cwtl
adc
push
jbe
lods
mov
ds
add
fsts
jmp
dec
jnp
ror
add
push
jmp
stos
push
orl
rcrb
mov
xchg
gs
mov
ja
add
cltd
xchg
jle
call
out
add
cltd
mov
xchg
movsb
mov
bound
jno
xor
or
jmp
mov
es
pop
pop
faddl
int
movsl
mov
xchg
and
ds
mov
shll
mov
push
or
jns
sbb
sub
xor
xchg
fimuls
popa
cmp
js
xor
and
pop
test
dec
leave
clc
sub
sahf
mov
cld
xchg
add
sbb
xchg
xchg
mov
mov
pop
xorb
sti
jecxz
loop
in
mov
jge
lea
ja
jns
out
jbe
sub
or
pop
imul
call
push
das
out
or
cmc
sbb
xor
mov
rcl
fstpt
mov
shl
jle
pusha
test
pop
out
lahf
lret
pcmpeqd
shr
xor
das
pop
lods
lahf
lock
sub
pop
or
je
pop
pop
pusha
xor
jo
aas
nop
sub
enter
mov
mov
mov
push
inc
sub
cmp
fiaddl
mov
push
inc
enter
push
adc
and
xchg
add
adc
outsb
add
gs
dec
push
push
cmp
push
mov
jp
mov
mov
shll
or
add
mov
sbb
or
cli
fnstsw
push
xchg
sbb
cmpsl
mov
sbb
sub
xor
push
inc
xchg
cli
cmp
cmpsl
adc
hlt
stos
movsl
push
out
and
ds
or
jns
jl
out
int
icebp
test
jae
cmc
int3
and
out
repz
or
loope
sarl
insb
mov
nop
nop
pop
xor
and
cmpl
fwait
pop
mov
negb
push
fsub
push
pop
xor
shlb
lock
movsb
out
cs
jl
inc
sbb
jb
push
or
les
lahf
aas
cmp
xor
popf
sbb
cmpsb
push
pop
in
mov
rclb
pop
loop
add
pop
xchg
sub
push
nop
out
cmp
push
add
push
adc
sbb
sub
rorl
out
mov
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
mov
outsb
arpl
xchg
and
xchg
inc
mov
adc
xchg
or
mov
lret
adc
pop
pop
mov
mov
out
inc
and
bound
push
mov
rol
in
jno
dec
xor
cld
into
lahf
mov
rclb
inc
movsl
daa
test
xchg
xchg
push
xchg
aas
jg
sbb
addl
lds
out
std
mov
xor
sbb
fsubrs
aaa
jne
icebp
rcr
push
bound
in
dec
pushf
sub
push
jmp
sub
xor
xchg
pop
repnz
movsl
jne
scas
push
xor
jle
es
xlat
imul
xor
mov
and
dec
mov
xor
xchg
push
pop
lea
pushf
in
mov
call
jno
fnsave
out
int3
pop
mov
ljmp
or
jle
dec
mov
or
mov
insl
inc
cmp
pop
push
out
add
test
xor
or
dec
sub
xor
insl
js
mov
xorb
mov
sbb
ss
xchg
lea
movsl
mov
and
pop
leave
imul
xor
stos
inc
push
rclb
push
out
jmp
jl
mov
adc
mov
pop
mov
bound
mov
pop
jae
adc
repz
insl
addr16
cli
divb
xchg
aas
movsb
lods
xor
fsubl
mov
add
cmpl
jno
insl
mov
dec
insb
loopne
or
filds
add
es
or
xchg
jp
subl
lcall
icebp
mov
test
push
add
mov
jo
in
mov
aas
adc
or
in
pop
mov
mov
sub
imul
add
xor
xor
aad
pop
scas
pop
js
mov
dec
test
stos
or
mov
fbld
pop
daa
sub
test
inc
adc
push
movsb
out
cmp
pop
dec
rcll
lret
dec
and
xor
lret
or
xchg
orb
notl
jecxz
jb
aam
xchg
call
sarb
ds
cmpsb
inc
jp
sahf
mov
adc
inc
sub
xor
pop
push
cwtl
add
mov
out
lods
daa
push
sbb
sahf
inc
into
fnstsw
push
mov
arpl
mov
pop
xor
ja
mov
and
pop
lods
jbe
push
pop
adc
and
add
fisubs
dec
add
mov
cmp
mov
adc
sbb
push
mov
pop
sub
ret
push
inc
insb
sahf
ds
cmp
cmp
cmp
popa
mov
jbe
hlt
and
ss
pop
dec
push
fcmovb
mov
stos
sub
jb
loope
idiv
cmp
mov
xor
push
sarl
lcall
fmull
jae
pop
xor
jae
mov
pop
or
pop
mov
mov
jle
lahf
xorl
dec
xchg
dec
add
je
mov
sahf
nop
add
sbb
dec
into
sti
kmovd
movsl
in
pusha
lret
fcompl
fcomps
mov
outsl
pop
xor
sti
fsubs
in
push
adc
orb
cmc
sub
sub
xor
jne
xchg
xor
divps
idivl
and
cmc
dec
mov
xchg
mov
cwtl
or
fwait
xchg
adc
lea
add
stc
cmp
test
jle
pushf
outsb
xor
mov
jmp
dec
sbb
or
pop
adc
and
pop
mov
cmpsl
sbb
xor
loop
nop
insb
jo
daa
psubusw
repz
loope
push
xor
stc
sub
cli
repnz
loopne
push
sbb
xchg
mov
test
mov
daa
and
fisubrs
dec
mov
ret
fstpt
outsb
sbb
enter
in
data16
fdivrl
mov
mov
in
push
ljmp
insb
lea
sarl
xlat
cli
roll
mov
mov
stc
icebp
ja
pop
xchg
fs
dec
std
xchg
or
ss
aad
mov
sbb
in
jno
into
sub
cs
pop
and
pop
ret
push
lahf
mov
adc
add
mov
push
add
negl
sbb
sti
push
loop
add
jb
std
ljmp
jb
adc
daa
addl
addr16
inc
mov
pop
jae
stc
or
sub
push
jnp
std
addr16
lock
or
cli
fcoml
jbe
dec
ljmp
push
ds
pop
ret
pop
jnp
cwtl
std
add
insb
mov
aas
stc
sub
add
shlb
mov
xchg
cmp
xchg
subb
inc
bound
xchg
jge
repnz
cltd
add
loope
xor
xchg
movsl
push
cmp
push
or
std
ret
inc
jmp
out
movsl
test
pop
adc
hlt
push
push
xchg
add
ljmp
test
xor
inc
mov
aad
mov
or
into
xorb
or
push
push
jecxz
cmp
or
in
insl
push
cmp
stos
add
mov
orb
shlb
mov
mov
ret
test
mov
movsl
negl
xor
xchg
push
sbb
out
pushf
adc
ljmp
inc
mov
iret
cmc
lods
and
in
dec
sti
lea
pusha
fsubl
shrb
rol
pop
adc
shrb
xchg
andb
std
sbb
sbb
orb
sarb
sub
mov
jge
mov
push
cmp
cmp
add
int
enter
xor
and
pop
jg
inc
bound
in
repnz
stos
mov
sbb
stos
adc
gs
and
xchg
es
ljmp
jo
lret
mov
and
jle
jo
pop
inc
jl
bound
fdivp
adc
lea
scas
mov
mov
mov
inc
fs
out
or
fadds
mov
test
sub
xor
xchg
cwtl
mov
dec
mov
pop
cmpsl
push
dec
jge
es
add
imul
mov
insl
mov
divl
cli
imul
add
inc
dec
lcall
mov
test
sbb
fisubs
jle
cmp
cmpl
push
scas
and
pusha
mov
cmc
push
je
sbbb
cmp
scas
imul
loope
xchg
pop
out
or
test
pop
mov
sti
aaa
add
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
jmp
fnsave
push
adc
adcb
adc
xchg
xchg
popa
push
fwait
and
push
pop
loopne
sbb
sub
fbstp
leave
push
pop
inc
jb
mov
mov
daa
vmptrst
mov
jl
ljmp
aad
inc
stos
sub
sub
outsb
aaa
int3
xor
sahf
shlb
das
pop
or
push
push
clc
jbe
orl
push
or
cmp
ja
inc
jmp
test
pop
push
sbb
lret
lock
pusha
and
mov
push
add
xor
xchg
mov
jmp
mov
inc
jo
push
loopne
mov
pusha
les
cmp
adc
xor
push
lea
ret
imul
push
xor
ficompl
das
das
shll
inc
outsl
mov
addr16
mov
jno
mov
inc
lods
push
pusha
jo
jo
push
add
push
insb
mov
adc
cld
jg
mov
outsl
mov
dec
xchg
test
sarb
ret
pop
xchg
sub
lods
fistpll
stc
loope
push
dec
inc
xchg
pop
pushf
repnz
insl
pop
xchg
imul
filds
in
imul
loope
fistps
cmp
and
daa
and
ds
push
jmp
test
xor
add
pusha
jno
adc
jmp
aaa
dec
mov
pop
mov
scas
mov
enter
fwait
fwait
sub
mov
lods
pop
push
int
arpl
sbb
cmp
orl
mov
in
inc
lock
mov
pop
inc
mov
lods
rcl
stc
out
cmpsl
dec
stos
mov
addb
mov
lahf
pop
mov
fbstp
jo
jns
fs
ja
lahf
mov
jns
lock
lcall
sbb
popa
mov
insb
int
push
jo
inc
das
ja
sub
adc
cmp
pop
cmp
push
or
pop
ficoms
sbb
push
out
sub
addr16
pop
cmp
pop
sub
mov
push
cmpsl
das
cmp
pop
stos
shlb
add
jbe
xor
cmpl
dec
fnsave
xor
inc
rclb
dec
cwtl
and
sub
shll
and
movsl
divb
xor
sbb
mov
rolb
mov
loop
inc
enter
sti
pop
out
xor
rorl
shrl
sub
in
mov
cmp
add
jle
stos
mov
hlt
fdivrp
int
cli
test
or
stos
ds
and
inc
sbb
jg
xchg
data16
sbbb
std
mov
imul
jne
pop
shlb
mov
pop
sub
mov
rorl
lcall
subl
push
jns
sbb
fisttpl
mov
mov
int3
pop
aaa
mov
sti
inc
lret
sysexit
dec
bound
or
push
psraw
das
sahf
loopne
xchg
inc
adc
fistps
inc
stos
push
insl
ss
add
and
add
scas
imul
dec
pop
jno
xchg
rclb
mov
or
cmp
lcall
es
outsb
clc
test
adc
mov
iret
lds
int3
pop
mov
aaa
cmpl
scas
adc
add
add
or
lods
movsl
sub
cwtl
jmp
outsb
sbb
inc
push
mov
mov
jno
or
mov
mov
std
push
inc
or
mov
jg
ss
scas
and
insl
lea
xchg
sar
fistpll
dec
sbb
iret
rcrl
pop
push
push
mov
push
cltd
push
hlt
insb
mov
movl
insb
push
out
pop
pop
push
xchg
dec
lret
pop
imull
shrl
dec
sub
jmp
out
jp
push
jne
pop
in
daa
pop
stos
in
pop
outsb
rorl
cmp
loop
cmc
mov
cld
out
push
fldt
xor
and
and
add
mov
fidivrl
sub
and
nop
pop
shrb
jb
pop
scas
jle
or
shrb
jp
in
and
sub
pusha
insl
pop
sub
xchg
dec
cli
mov
dec
adc
hlt
add
xor
add
aaa
sbb
xor
push
mov
add
stos
sbb
add
call
lret
add
addl
mov
mov
inc
adc
sub
xor
scas
roll
cmc
mov
pop
pop
sub
sbb
mov
inc
dec
jbe
mov
add
xchg
scas
xor
addr16
inc
dec
out
cli
push
enter
jb,pn
cli
rcrl
xor
iret
cmp
fwait
stos
scas
pushf
sar
clc
add
arpl
mov
nop
inc
mov
cltd
clc
addr16
push
sub
or
mov
mov
push
jmp
mov
loopne
fs
std
test
dec
add
fisubrs
or
cmp
mov
int3
push
pop
stc
sbb
xchg
sub
dec
pop
cmpsb
cltd
hlt
daa
xchg
aas
adc
rcr
test
jp
and
cmpsl
enter
mov
jl
cld
in
jp
sahf
daa
sbb
in
inc
dec
mov
test
inc
and
loope
jge
add
lds
lea
addr16
sub
mov
pop
jnp
jge
in
xor
bound
xchg
inc
mov
js
mov
out
scas
mov
mov
inc
ds
xor
sub
push
out
inc
cld
sub
test
fidivs
aad
xorl
lcall
mov
fcoml
dec
test
mov
sbb
idivl
cmpsb
push
add
test
loope
subb
lret
cmp
es
mov
stc
out
imul
jo
arpl
std
pop
xchg
aam
ret
sub
pop
add
pop
add
loopne
lods
dec
add
cmp
mov
popf
jae
xor
ljmp
stc
dec
lea
mov
inc
enter
jnp
pop
mov
inc
popl
xchg
inc
xchg
ljmp
mov
or
scas
add
movsl
mov
pop
scas
cmp
fildl
pop
outsl
push
push
and
and
jne
mov
add
pmullw
aaa
js
fstl
mov
cmp
mov
or
ja
or
pop
aaa
xor
dec
std
xchg
mov
call
pop
orl
cld
subl
push
pop
das
dec
leave
dec
add
stos
adc
ljmp
sub
lret
fs
repnz
loope
pushf
fildll
pop
xchg
inc
insb
sbb
shll
sbb
in
in
xchg
out
jg
jbe
mov
fnstenv
sahf
and
or
mov
fwait
lret
aas
outsb
cli
jne
jns
in
inc
or
mov
mov
shl
shl
mov
mov
jmp
test
fcoms
fcmovbe
in
pop
or
ja
mov
pop
cmp
cmpsl
pop
daa
imul
cli
out
call
test
push
lods
mov
adc
push
sbb
mov
jmp
iret
stc
mov
or
or
loopne
aas
adc
sahf
sub
mov
hlt
cmp
rolb
aaa
loope
decl
mov
cmp
cs
cmp
shrb
movsb
fwait
out
jnp
mov
mov
je
cmpsl
fldl
and
fisttpl
mov
sbb
xchg
inc
xor
in
outsl
dec
pop
xchg
nop
jecxz
mov
xchg
sub
stc
xchg
jb
test
push
mov
movsl
mov
dec
lock
aad
xor
jno
pop
adc
std
jae
insl
cmp
mov
outsb
or
mov
pop
shlb
jmp
dec
rorb
repz
loop
push
mov
mov
jno
jp
push
mov
adc
push
push
lcall
aas
mov
lcall
cmp
pushf
setno
sub
mov
adc
leave
push
inc
fildll
sbb
dec
add
push
xchg
lds
cmp
jo
dec
cmp
popf
stos
sub
cs
icebp
bound
cmpsb
mov
cmp
jae
add
push
aad
push
cs
enter
push
xor
add
adc
loop
sub
movsl
inc
sbb
orl
mov
ljmp
out
nop
xchg
inc
xchg
insl
dec
dec
bound
dec
cld
jg
pop
sub
add
fldcw
int
push
stos
or
or
sbb
sbb
aas
xchg
das
in
mov
push
movsl
in
sahf
lret
add
cmp
fists
loop
push
bound
gs
out
cmp
xlat
call
ljmp
pop
mov
add
sbb
sub
addr16
mov
stos
bound
stos
mov
mov
pushf
sub
mov
das
jl
pop
mov
insb
gs
mov
lods
daa
pop
mov
insb
scas
jne
das
adc
out
std
frstor
jns
or
mov
jne
lret
sti
sbb
mov
ds
add
mov
cmp
push
das
data16
mov
mov
addb
dec
insl
sbb
and
adc
rol
mov
movsl
popf
aas
add
leave
sbb
hlt
jge
xchg
outsl
mov
pop
fildl
je
xor
mov
xchg
mov
dec
bound
sti
xor
adc
ja
pop
sub
mov
shr
std
repnz
mov
cmp
pop
pusha
les
or
or
xchg
cld
jae
push
sbb
mov
add
jmp
insl
test
push
mov
jne
jmp
inc
aad
cmpsb
loopne
pop
mov
xchg
scas
jg
and
push
dec
ds
test
int3
stos
into
pop
pop
cltd
xchg
dec
cli
or
mov
push
cmp
cmp
insb
outsb
mov
cmpsb
lock
jg
gs
leave
std
into
sbb
scas
in
sub
mov
pop
dec
fsubrp
cmp
sbb
in
fiadds
xchg
adc
sbb
fcmovu
pop
jo
adcb
sti
out
ss
xchg
or
aaa
mov
icebp
sub
cmp
push
pop
inc
aam
inc
dec
adc
ret
xor
lods
pop
or
mov
dec
adc
insl
loop
leave
inc
or
out
icebp
in
adc
into
aaa
add
shlb
cmp
gs
adc
aas
test
adc
inc
ret
std
and
jmp
xor
test
dec
jg
shrl
jo
sbb
push
push
xlat
jmp
inc
shrb
stos
push
inc
imul
xchg
sub
jle
loope
pop
cmc
adc
gs
pop
das
or
xlat
dec
imul
popf
lret
lret
loope
jne
loopne
cltd
pop
dec
ljmp
out
cmc
add
cld
cmpsl
mov
xchg
insl
jae
out
into
cmp
ret
jecxz
mov
mov
mov
jnp
pop
xlat
mov
fisubrs
testb
dec
test
enter
and
xor
sub
leave
add
cmp
out
xchg
mov
add
push
sahf
inc
leave
fimuls
pop
jle
adc
lds
mov
fistps
add
popa
in
cmpsl
sbb
out
dec
loop
push
mov
gs
scas
fistps
shll
mov
leave
jl
pop
scas
repnz
jecxz
cmp
inc
mov
mov
cmp
mov
hlt
or
jecxz
rcrb
add
lahf
sti
mov
mov
in
mov
xchg
jl
push
xchg
push
cmp
cltd
lea
push
push
inc
out
mov
lret
dec
cli
add
mov
xchg
mov
nop
aam
rcrl
adc
mov
in
cmp
and
adc
jns
add
mov
sub
push
add
lods
dec
push
std
xor
incl
dec
push
cmp
mov
or
sbb
enter
pop
sbb
fcoml
gs
jno
sahf
leave
jp
add
insb
adc
lea
stos
lock
push
lahf
cmc
test
test
mov
ficoms
jo
mov
lods
xor
add
les
mov
loope
sti
mov
stos
xor
dec
xor
mov
cwtl
and
sbb
data16
lods
cmc
lds
daa
pushf
xor
cmp
arpl
inc
dec
cmp
jmp
and
xorl
bound
pop
xor
stos
add
adc
mov
inc
xchg
repnz
push
sub
push
stos
leave
mov
addr16
pop
sti
jmp
xor
movsb
imul
das
sbb
sti
test
in
sbb
shrb
or
sti
inc
out
cld
cli
loope
aaa
idivl
adc
lret
dec
fcmovnbe
mov
jg
fnstenv
mov
stos
outsl
pop
xchg
les
sub
rcrl
jb
ds
dec
push
xchg
mov
lock
das
mov
aam
sarb
push
lds
mov
ljmp
cltd
mov
fwait
gs
lods
insl
adc
pop
cmp
push
int3
in
inc
hlt
aad
je
mov
rorb
push
and
popa
sbb
pop
popa
aad
stc
sub
bound
in
push
ret
push
cmc
inc
cltd
test
adc
jecxz
mov
lods
mov
mov
mov
mov
xchg
sbb
mov
xchg
cli
arpl
jecxz
add
push
dec
sbb
sub
mov
and
push
insl
cmp
rcr
pop
jecxz
ficompl
jb
cmp
insl
xchg
int
fcmove
iret
xor
es
or
jae
fimuls
lret
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
jmp
sti
icebp
lods
mov
outsb
fs
adc
testl
pusha
xor
push
inc
jno
push
movsl
fstp
mov
imul
adc
adc
lock
adc
xchg
mov
rcl
pop
lock
sbbl
sub
mov
imul
xchg
or
test
mov
aam
mov
insl
add
sub
mov
into
cmp
mov
xchg
mov
adcl
imul
pop
std
int
movsl
mov
stos
and
mov
xchg
mov
pop
mov
or
das
sbb
cmp
outsb
push
mov
or
call
xor
push
push
mov
movsl
mov
sub
push
mov
and
mov
mov
push
idiv
xchg
xor
xor
test
popa
and
or
adc
inc
and
or
test
push
cmp
addl
or
stos
xchg
xchg
sub
xor
sub
inc
imul
jp
lcall
add
lret
call
aas
push
or
and
pop
xchg
jmp
and
int
jp
or
or
xchg
mov
clc
add
test
mov
cmc
xor
xchg
pop
inc
mov
adc
mov
xchg
pop
daa
jg
stos
inc
cmp
sub
mov
adc
sub
std
loope
test
dec
je
pop
jl
add
fsubrp
jns
in
int
push
mov
mov
mov
mov
fnstsw
cmp
push
xlat
adc
mov
pop
outsl
test
pop
mov
loop
outsl
mov
mov
and
adc
hlt
jb
dec
aaa
sbb
adc
pop
push
pop
sti
dec
movsb
push
jae
jp
and
cmp
ljmp
sbb
outsl
rorl
out
sbb
aaa
fs
aaa
mov
in
xlat
pusha
xor
pop
es
mov
fldcw
push
sub
and
cmpsl
cmp
cltd
aaa
jle
or
imul
xor
xor
fxch
sub
adc
repnz
push
push
in
mov
add
jmp
pop
ss
sbbb
sti
push
push
test
pop
test
inc
enter
insb
inc
push
mov
ficomps
fnstsw
xor
lahf
shlb
insb
pop
popl
mov
dec
xchg
imul
add
sbb
inc
ja
and
mov
out
pop
das
lahf
and
and
enter
push
dec
xor
das
leave
lcall
pop
push
lahf
push
stc
sub
int
stc
inc
push
jmp
rcrl
popa
imul
mov
lods
sub
cs
add
roll
adc
lods
cmp
mov
js
out
sub
test
stos
mov
sub
cld
repz
lds
iret
adc
push
mov
jnp
jle
pop
adc
into
push
sub
cld
dec
lahf
sbb
pop
lret
test
cmc
xor
sub
sbbb
sti
and
enter
inc
sbb
lret
es
fmull
push
xchg
pusha
ljmp
icebp
xor
cltd
je
inc
std
mov
lods
pop
les
push
cwtl
cmp
jae
ljmp
fsubl
insb
jbe
fidivrs
sbb
aam
cmpb
pop
imul
aam
shlb
sbb
jns
cmpsl
xchg
mov
pop
fimull
scas
hlt
aas
fsubl
adc
lods
adc
xor
insl
lods
push
sbb
lds
repz
adc
cmp
pop
xorl
push
iret
and
imul
mov
dec
mov
mov
in
std
neg
dec
aaa
outsb
or
lods
xchg
mov
jmp
mov
jae
mov
push
and
das
xor
into
cmp
mov
or
adc
cmp
and
cmp
adc
cs
lea
push
es
ja
cmp
jp
add
dec
mov
ret
xchg
and
push
fs
movsb
cld
jp
xor
or
fdivrp
lds
xor
jmp
dec
jg,pt
rcrb
mov
cs
outsl
stos
int3
dec
mov
pop
popf
jp
in
or
in
repz
mov
into
cmpsb
xor
loope
push
gs
repnz
add
push
adc
push
add
arpl
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
cmp
jae
xorl
shrd
movl
shr
ret
adcl
mov
xorl
xor
sbbl
and
shr
ret
xor
xor
ret
push
mov
sub
cmpl
movl
movl
jmp
movl
notl
jle
push
pushl
call
notl
andl
andl
sbbl
adcl
movl
mov
incl
mov
adcl
movl
mov
movb
sbbl
movb
and
movb
adc
movzbl
andl
mov
sbbl
sub
addl
imul
movzbl
andl
push
and
andl
mov
addl
movb
movb
andl
movb
movb
negl
mov
mov
negl
add
adcl
imul
sbbl
mov
subl
or
mov
sbbl
and
mov
movl
cmp
ja
mov
mov
mov
or
mov
mov
cmpl
not
mov
movl
jmp
movl
jb
push
push
call
dec
xor
add
mov
add
adc
xorl
xor
adc
mov
movzwl
addl
movzwl
sbbl
shr
notl
or
sub
mov
subl
movb
notl
movb
mov
orl
mov
xor
xorl
add
mov
or
mov
movzbl
and
cltd
sub
push
cmpl
not
mov
mov
jmp
mov
je
push
push
call
mov
adc
xor
neg
adcl
or
adc
pop
adcl
idiv
mov
addl
movb
addl
movb
xorl
mov
mov
negl
add
movzbl
movzbl
xorl
cltd
idiv
mov
movl
cmp
jae
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
idiv
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
sub
mov
and
xor
imul
mov
push
sub
push
movl
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
or
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
and
add
cmp
jb
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
lea
add
movl
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
xor
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
add
imul
xor
mov
div
mov
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
xor
and
mov
add
mov
add
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
push
push
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
push
mov
mov
mov
push
push
push
call
push
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
push
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
or
xor
mov
xor
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
and
push
cmpl
not
mov
not
not
jmp
movl
movzbl
je
push
pushl
pushl
push
pushl
call
sbb
adc
adc
subl
add
push
adc
mov
cmpl
mov
mov
mov
jmp
mov
movl
ja
pushl
push
pushl
push
push
call
sbb
adc
xor
mov
mov
sub
sub
xor
add
xor
or
sub
and
addl
addl
sbb
mov
shrd
shr
cmpl
movl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
push
pushl
call
addl
orl
mov
add
mov
add
mov
sub
mov
mov
mov
sub
sub
xor
movzwl
sbb
mov
neg
xor
sub
or
mov
mov
cmpl
mov
mov
jmp
movl
mov
jne
call
dec
addl
xor
sub
inc
andl
mov
mov
adc
shl
cmpl
mov
movl
movl
jmp
mov
movzbl
jle
push
push
call
mov
adc
mov
adc
xor
inc
xor
or
or
notl
add
movl
mov
cmpl
mov
mov
jmp
mov
jge
pushl
push
pushl
pushl
call
andl
or
add
xor
or
shrd
xor
orl
shr
xorl
mov
and
mov
xor
or
or
cmpl
not
mov
mov
movzwl
jmp
mov
mov
jge
push
pushl
call
movzwl
xor
movzwl
add
mov
or
mov
sub
or
addl
xor
mov
mov
and
mov
mov
mov
mov
inc
mov
xor
mov
mov
mov
mov
cmpl
mov
movl
jmp
movl
movl
jle
pushl
push
pushl
pushl
call
not
andl
adc
sub
xor
shl
orl
xor
and
shld
sub
shl
inc
mov
orl
xor
addl
xor
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
cmpl
movl
movl
not
jmp
mov
movzwl
jle
push
push
push
call
sub
adc
or
sbb
adcl
sbbl
xor
adc
mov
mov
mov
and
mov
xor
shld
sbbl
shl
xor
xor
cmp
jne
movl
cmp
movl
je
cmpl
mov
movl
jmp
mov
not
jbe
push
pushl
push
pushl
call
xor
mov
add
adc
and
adc
not
mov
subl
mov
cmpl
mov
movl
mov
jmp
movl
mov
jg
pushl
pushl
pushl
call
subl
mov
add
add
add
xor
shl
mov
xorl
xor
shr
adcl
or
mov
mov
movzwl
or
mov
mov
and
mov
mov
cmpl
movl
movl
movl
jmp
movl
ja
pushl
push
call
and
orl
subl
subl
sbbl
orl
and
cmpl
movl
movl
movl
movl
jmp
movl
je
push
call
sbbl
movl
orl
andl
adcl
sbbl
xor
subl
cmpl
movl
movl
movl
jmp
movl
not
jb
pushl
pushl
call
xorl
sbb
add
addl
subl
movl
and
push
pop
sbbl
sub
mov
add
mov
lea
mov
mov
mov
sub
and
mov
xor
or
xor
mov
xorl
xor
xorl
shr
subl
shl
or
add
mov
cmpl
movl
mov
jmp
mov
mov
jae
push
call
add
sbb
or
movl
and
movl
add
mov
mov
andl
xor
movl
shr
shl
adcl
or
push
orl
lea
adcl
push
adcl
lea
push
call
cmpl
mov
movl
jmp
movzbl
jbe
push
push
pushl
pushl
pushl
pushl
call
orl
addl
movzwl
sub
mov
movzwl
sub
mov
sub
movl
sub
mov
mov
subl
xor
subl
shr
mov
xor
shl
or
cmpl
mov
mov
mov
jmp
movl
mov
jne
call
add
sub
add
adcl
mov
or
movzwl
or
push
lea
sub
push
or
mov
mov
sbb
shrd
sbb
shr
xor
add
xor
or
sub
imul
mov
notl
mov
xor
addl
xor
or
xorl
lea
adcl
push
adcl
shl
subl
call
mov
mov
xor
shl
cmpl
mov
movl
mov
jmp
movl
jne
push
push
call
xorl
xorl
add
orl
and
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
push
call
mov
mov
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
mov
rol
mov
xor
mov
cmp
je
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
sub
mov
adcl
or
movl
mov
jne
sub
mov
adcl
mul
ret
push
mul
cmpl
movzbl
movl
push
pop
jmp
mov
mov
je
push
push
pushl
push
push
push
pushl
call
mov
sbb
mov
not
movzwl
adc
mov
mov
add
mov
xorl
sbb
mov
adc
mov
xorl
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
push
mov
and
sub
push
push
push
mov
pushl
call
test
jg
movl
movl
movl
push
dec
movl
mov
xor
mov
andl
push
notl
push
orl
push
call
sbbl
push
andl
push
and
and
push
subl
push
andl
call
cmpl
mov
movzwl
notl
movl
jmp
movl
jbe
push
push
pushl
call
neg
subl
dec
sbb
subl
xor
or
mov
sub
or
mov
mov
xor
or
cmpl
movl
not
jmp
mov
jg
push
push
push
push
call
sbbl
xor
movzwl
and
orl
xor
mov
xor
or
mov
movl
movl
or
movl
sbb
movl
mov
xor
or
sub
add
movl
cmpl
mov
mov
jmp
mov
movl
jg
push
push
pushl
call
dec
xor
inc
adc
movl
xor
add
xor
mov
adcl
movl
cmpl
mov
movl
jmp
mov
mov
jg
push
push
call
addl
mov
sbb
sbbl
mov
mov
sub
xor
xor
or
xor
movl
or
sub
sbb
mov
cmpl
mov
movl
notl
jmp
mov
movzbl
jg
pushl
call
xor
movzbl
sub
mov
mov
sub
add
adc
xor
mov
mov
mov
andl
or
or
mov
or
mov
sub
mov
mov
sbb
or
mov
xor
subl
xor
addl
and
adcl
and
cmp
movl
jne
cmp
jne
movl
decl
movl
xor
movl
adc
movl
xor
or
mov
sub
xor
movl
mov
and
mov
sub
adc
mov
orl
imul
subl
and
notl
imul
mov
xorl
pushl
or
imul
adc
xor
mov
movl
div
mov
xor
cmpl
movl
notl
mov
jmp
movl
je
pushl
pushl
push
pushl
push
call
sbb
adcl
or
mov
sbb
mov
add
cmpl
mov
mov
not
jmp
mov
jb
pushl
push
call
neg
mov
mov
xor
sbb
sub
sbb
cmpl
movzwl
mov
movl
jmp
movl
jl
pushl
call
sbb
or
addl
and
sub
xor
add
mov
sub
dec
mov
sbbl
sub
addl
or
xor
adcl
pushl
pushl
addl
call
addl
pushl
call
movl
cmpl
mov
movl
not
jmp
mov
mov
jge
pushl
call
and
add
adc
xor
movl
adc
movl
xorl
movl
movl
movl
mov
mov
xor
mov
mov
subl
add
movzwl
mov
adc
add
mov
add
adc
and
xorl
mov
orl
and
mov
movl
movl
subl
movl
orl
movl
dec
cmp
jne
and
movl
mov
xorl
mov
subl
movl
mov
subl
call
andl
lea
mov
cmpl
movl
movzbl
jmp
movl
jb
push
call
adc
sub
and
andl
mov
xor
add
sub
imul
xor
sub
lea
mov
sub
mov
sbb
mov
add
mov
mov
decl
xor
shl
and
shr
movl
or
mov
or
mov
mov
cmpl
movl
mov
movl
jmp
mov
movl
ja
pushl
push
push
pushl
call
and
xorl
add
sub
addl
addl
cmpl
not
mov
jmp
not
jae
push
call
adc
subl
and
xor
add
adc
and
mov
cmpl
not
mov
jmp
movl
movl
jbe
push
pushl
call
or
andl
and
sub
adc
mov
and
mov
mov
mov
shrd
shr
and
mov
not
mov
movl
xor
xor
andl
or
mov
sbb
mov
mov
orl
push
addl
pushl
subl
lea
andl
push
adcl
shl
orl
call
addl
lea
addl
push
mov
mov
sbbl
lea
orl
push
mov
orl
lea
adcl
mov
adcl
mov
mov
push
call
subl
push
andl
push
pushl
xorl
call
andl
mov
or
mov
and
mov
cmpl
mov
movl
mov
jmp
mov
jg
push
pushl
push
push
push
call
sbb
xor
or
mov
adc
xor
adc
mov
shr
not
shl
or
sub
mov
or
xor
mov
notl
lea
xor
mov
lea
movzbl
or
mov
cmpl
mov
movl
movl
mov
jmp
movl
movl
je
push
call
or
add
mov
or
mov
xor
inc
add
not
mov
mov
and
mov
cmpl
mov
mov
mov
jmp
movl
mov
jne
push
call
or
sbb
addl
add
orl
mov
mov
sub
sub
movzwl
sbb
mov
and
sub
cmpl
movzbl
mov
movl
jmp
movl
jae
pushl
call
add
add
movzbl
add
add
movl
add
lea
andl
xor
cmpl
mov
mov
movl
jmp
mov
jg
push
pushl
pushl
push
push
call
or
adc
xor
mov
adc
mov
movl
movl
movl
cmpl
movl
not
jmp
movl
not
jle
push
call
subl
not
orl
and
and
mov
or
mov
movl
mov
mov
add
mov
not
mov
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
shr
or
or
mov
mov
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
cmpl
movl
mov
movl
jmp
movl
jbe
push
pushl
push
pushl
push
call
adcl
sbb
sub
adc
mov
xor
mov
mov
mov
sub
xor
movl
cmpl
mov
movl
movl
jmp
mov
mov
jle
push
push
pushl
pushl
call
adcl
notl
dec
add
subl
sbb
not
sub
movl
mov
subl
mov
xor
xor
mov
xor
and
adc
mov
sub
xor
or
and
cmpl
mov
mov
not
jmp
mov
jl
push
push
call
inc
xorl
and
sub
sub
add
mov
add
xor
mov
or
movl
movl
mov
sbb
mov
add
xor
sub
adcl
mov
or
imul
adc
xor
mov
or
div
subl
sub
and
mov
movl
sub
movl
movl
mov
mov
adc
movl
cmpl
movl
mov
movzbl
jmp
mov
movzbl
jg
pushl
push
push
push
call
or
xor
or
or
mov
sub
add
inc
movl
mov
sbb
mov
movl
movl
mov
xor
mov
imul
adc
add
xorl
and
adc
sub
cmpl
mov
movl
mov
mov
jmp
mov
je
pushl
push
push
call
add
adc
neg
and
not
mov
sub
or
mov
mov
cmpl
mov
movl
mov
movl
jmp
movl
jne
push
pushl
push
call
inc
or
dec
sub
adc
adc
or
add
sub
add
mov
xor
adcl
div
not
mov
sub
and
mov
add
addl
mov
cmpl
mov
mov
mov
jmp
mov
mov
jle
push
push
call
add
add
sbbl
subl
xorl
movl
movl
dec
movl
cmpl
movzbl
mov
jmp
mov
jne
pushl
pushl
pushl
push
call
sbb
orl
movzwl
adc
add
mov
mov
add
mov
xor
add
mov
andl
xor
movl
div
add
and
mov
or
cmpl
movl
mov
jmp
movl
movl
jg
push
push
push
call
mov
sbb
mov
add
mov
movzbl
sub
subl
decl
adc
cmpl
not
mov
jmp
mov
movl
jae
push
push
push
push
call
xor
sbbl
mov
sbb
mov
inc
mov
mov
sub
sbbl
cmpl
mov
movl
mov
jmp
mov
movl
jg
pushl
call
mov
adc
mov
mov
adc
mov
mov
xor
xor
or
mov
sub
sub
adcl
mov
and
movl
movl
movl
and
movl
mov
sub
mov
orl
xor
sbb
xor
push
xor
pop
orl
div
mov
andl
xor
div
mov
or
sub
xor
mov
xor
movl
inc
mov
movzwl
sbb
mov
xor
div
imul
adcl
xor
xor
sub
imul
xor
dec
mov
adc
movl
cmpl
movzwl
movl
mov
jmp
movl
mov
jg
pushl
push
pushl
pushl
pushl
pushl
push
push
pushl
push
push
call
adc
xor
mov
adc
mov
mov
xor
mov
xor
or
xor
mov
movzwl
sub
or
or
movl
movl
cmpl
mov
movl
movzwl
jmp
mov
movl
ja
pushl
call
xor
dec
adc
movzbl
sbb
xorl
mov
and
mov
xor
subl
div
mov
sub
mov
orl
imul
xor
add
mov
or
add
xor
sbb
mov
sub
movzbl
or
mov
mov
movl
cmpl
notl
mov
mov
mov
jmp
notl
mov
jg
pushl
call
notl
adc
adc
sbb
movl
mov
or
and
notl
and
or
xor
cmpl
mov
mov
movl
jmp
movzwl
mov
jg
pushl
push
pushl
call
movzbl
sbb
add
negl
sub
dec
mov
movl
movl
movl
cmpl
movl
movl
movl
mov
jmp
mov
jb
pushl
push
push
call
mov
and
mov
neg
xor
andl
and
movl
mov
xor
and
add
xor
add
or
or
cmpl
notl
movl
mov
movl
jmp
movl
jle
push
pushl
push
push
pushl
pushl
pushl
push
call
adc
mov
add
or
sub
neg
sbb
sub
mov
inc
movl
cmpl
mov
movl
mov
jmp
mov
mov
jne
push
pushl
call
decl
decl
sbbl
and
movl
movl
movl
xor
mov
shr
xorl
sub
cmpl
movl
mov
mov
mov
jmp
mov
movl
jbe
pushl
pushl
call
add
xorl
mov
sbb
and
adc
or
xor
mov
lea
sbbl
push
adcl
call
addl
mov
adc
or
cmpl
mov
mov
jmp
movl
movl
jbe
push
pushl
call
sub
mov
xor
or
sub
imul
negl
sbbl
and
mov
orl
or
xor
and
lea
adc
mov
movl
movzwl
xor
movl
movl
xor
xor
or
movl
movl
and
movl
cmpl
mov
not
movl
movl
jmp
mov
notl
jg
push
call
sbb
orl
xorl
add
xor
xorl
xor
xor
xor
mov
sub
or
movl
sbbl
movl
mov
mov
mov
sub
xor
mov
sub
and
cmpl
movzbl
movl
jmp
movl
movl
je
push
push
push
push
push
call
sub
or
notl
sub
xor
add
add
mov
sbb
sub
and
sub
or
mov
sbb
lea
mov
mov
add
mov
add
mov
mov
imul
sbbl
and
cmpl
mov
mov
mov
movzbl
jmp
notl
mov
jbe
pushl
pushl
pushl
push
pushl
pushl
call
xorl
add
movzbl
adc
not
or
imul
mov
lea
mov
addl
movl
movl
movl
movl
mov
sbb
mov
or
mov
movl
xor
andl
xor
sbbl
mov
call
cmpl
movl
movl
movzbl
movzwl
jmp
movl
movl
jb
call
sub
and
and
add
adc
subl
sub
sbbl
mov
mov
sub
mov
mov
adcl
xor
xor
mov
call
xorl
or
or
sub
mov
or
mov
andl
xor
xorl
xor
mov
call
mov
cmpl
movl
mov
movl
jmp
movl
jbe
call
or
xor
inc
or
andl
cmpl
notl
mov
jmp
mov
movl
je
push
pushl
call
mov
mov
and
sbb
not
mov
sub
sbb
or
and
mov
movl
mov
mov
xor
xorl
xor
addl
mov
mov
xor
mov
xor
or
mov
sub
mov
movl
mov
mov
movl
call
cmpl
mov
movl
mov
jmp
movl
movl
ja
push
push
call
and
addl
adcl
movzbl
xor
or
mov
adcl
or
mov
or
subl
push
push
subl
push
andl
push
orl
call
movzbl
mov
cmp
movl
jne
mov
sub
mov
mov
xorl
mov
subl
xor
xorl
xor
mov
call
adc
mov
add
mov
xor
mov
mov
incl
xor
addl
xor
xorl
mov
xorl
call
or
and
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
mov
sub
mov
xor
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
sub
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
or
mov
xor
mov
sub
mov
mov
sub
mov
xor
mov
div
mov
xor
div
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
notl
jmp
movl
mov
jle
pushl
push
push
pushl
call
negl
addl
orl
adc
sbbl
sbbl
not
push
push
not
mov
or
movl
jne
cmpl
movl
mov
mov
jmp
mov
jl
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
sbb
and
or
xor
xor
mov
sub
add
add
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
je
add
mov
mov
pop
pop
movl
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
shld
shl
ret
xor
mov
addl
xor
and
shl
ret
xor
xor
ret
