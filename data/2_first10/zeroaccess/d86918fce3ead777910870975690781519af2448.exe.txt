push
mov
sub
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
subl
push
mov
mov
sub
add
push
mov
xor
xor
mov
sbbl
add
andl
mov
mov
sbb
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
sbb
mov
mov
mov
sub
add
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
mov
movl
sbb
mov
and
xor
add
adcl
mov
mov
mov
mov
mov
and
mov
adcl
mov
and
mov
xor
push
neg
pop
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
movl
mov
and
movl
mov
xorl
mov
mov
orl
mov
and
mov
xor
movl
add
mov
adcl
lea
sbbl
mov
mov
or
mov
adcl
xor
add
mov
lea
andl
push
mov
movl
xor
add
andl
push
subl
mov
xorl
push
subl
pushl
xorl
call
andl
mov
inc
mov
cmpl
jb
jmp
push
pushl
pushl
call
cmpl
jb
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
movl
mov
incl
mov
lea
incl
mov
movzbl
or
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
push
call
jmp
mov
sbb
xor
sub
mov
sub
mov
mov
movzwl
movl
mov
mov
cmp
movl
je
add
mov
mov
sbbl
xor
xor
lea
mov
orl
xor
div
mov
xor
mov
xor
orl
xor
orl
sub
cmp
jne
mov
mov
add
mov
mov
subl
xor
addl
xor
add
add
movl
mov
movl
cmp
movl
jae
and
lea
not
mov
mov
xor
xorl
add
lea
mov
mov
mov
cmp
jbe
addl
addl
movl
jmp
addl
addl
sub
mov
xorl
xor
decl
inc
sbbl
incl
addl
add
cmp
movl
jb
notl
mov
xor
mov
movl
xor
xorl
mov
sub
add
mov
adcl
xor
sub
andl
ror
movzwl
sbb
xor
mov
mov
mov
adc
mov
orl
jmp
pop
mov
pop
mov
add
cwtl
stc
addl
subl
and
cmp
sub
cmp
jae
jb
fcmovu
imul
jb
int3
bound
lea
xchg
xchg
inc
mov
sub
push
rol
repnz
sub
nop
ss
mov
aad
jb
adc
and
aaa
jo
lods
sub
mov
notb
test
pusha
push
and
cmpl
fwait
dec
or
jecxz
imul
xchg
ss
leave
int
outsb
cmc
pop
imul
or
mov
shll
imul
jno
add
hlt
imul
xchg
sbb
push
adc
or
jnp
lcallw
shrl
mov
dec
shl
popa
ret
nop
fisubrs
xor
rcr
cmovae
aaa
pop
adc
sbb
jae
mov
ds
inc
int
aad
ljmp
stos
lahf
adc
push
outsb
or
mov
cmp
pop
xchg
adc
sarb
pop
loop
ret
pop
inc
stos
in
push
pop
add
jp
dec
adc
pusha
pop
xchg
nop
stos
test
jl
mov
xchg
add
lahf
es
sub
into
xor
int
out
jbe
mov
in
xchg
iret
aam
pop
xor
jne
hlt
push
xchg
sbb
repz
ljmp
mov
add
xchg
jge
xchg
dec
mov
sbb
out
push
lds
arpl
dec
lds
and
lcall
les
out
jbe
jl
mov
xor
fnsave
lcall
xchg
cmc
sbb
int
in
mov
pop
cs
cmp
fs
cwtl
xchg
push
int
leave
add
push
aas
push
mov
cmp
pop
in
inc
add
shll
out
lods
test
xchg
insl
int
lea
orl
je
inc
fnstenv
call
jmp
lahf
sbb
shlb
xor
jge
push
stos
sbb
scas
mov
jns
outsb
jae
and
add
xchg
frndint
fildll
loope
dec
pop
jl
and
mov
jge
jo
jne
lret
sbb
push
xor
inc
sbb
icebp
minps
pop
xchg
pop
repz
push
repnz
push
mov
cmp
int
mov
insb
sub
mov
xlat
lock
jl
inc
xor
std
in
leave
cmp
out
or
ljmp
push
pop
mov
leave
es
repz
xchg
and
std
cwtl
xlat
add
jo
test
pop
into
movsl
mov
sbb
mov
mov
push
jne
adc
pop
lds
mov
cli
stos
lock
aad
or
insl
cmp
bound
clc
xchg
je
sbb
cltd
lcall
pop
adc
movb
xorb
je
or
jge
or
mov
test
and
xor
inc
idiv
jg
push
lret
xor
cmp
and
imul
es
je
int3
into
test
add
jns
in
insl
pushl
ljmp
lods
jns
cmp
adc
push
test
mov
leave
and
leave
mov
mov
ret
aad
adc
push
pop
dec
jl
and
fs
jmp
and
das
cli
mov
mov
ret
scas
jne
mov
std
cmp
dec
and
push
mov
lea
and
loopne
pop
adcb
sub
pop
das
xchg
pushf
sahf
movsl
test
fistl
inc
pop
xor
repnz
dec
testb
or
pop
jnp
mov
jp
je
ljmp
js
fwait
mov
sub
filds
xchg
adc
ret
js
jg
xchg
mov
into
aad
xchg
rclb
dec
cmp
sub
dec
dec
fmul
xchg
bound
dec
outsb
test
sbb
push
add
sbb
pop
inc
fcomip
int
imul
inc
adc
jmp
add
inc
push
repz
pop
loopne
lds
jge
mov
add
clc
int3
subl
xor
shrl
les
cmp
daa
ret
mov
or
mov
das
ret
mov
ljmp
dec
pop
jmp
test
xchg
lahf
jle
call
enter
sbb
and
in
cwtl
lds
lcall
xchg
in
out
xor
sbbl
mov
mov
out
outsb
dec
out
in
mov
cmpl
ja
std
sbb
jno
jnp
inc
aad
pusha
shll
gs
out
cltd
fisttps
cmc
sub
scas
popf
mov
mov
jae
pop
fdiv
jns
push
aas
subl
out
pusha
je
test
scas
inc
stc
mov
call
ljmp
and
dec
pushw
mov
les
out
fwait
and
out
add
ljmp
dec
and
adc
xchg
shlb
nop
add
add
ficoms
adc
push
xchg
test
sub
pushf
xor
std
jle
adc
xchg
pop
adc
insb
inc
cmc
mov
ss
jns
mull
fsubrl
jg
jp
mov
jmp
sub
lret
iret
punpcklbw
les
xor
adc
test
xor
xor
pop
inc
dec
mov
add
mov
cmp
mov
addl
fadds
pop
or
jp
repz
jae
push
adc
fwait
mov
ljmp
push
test
data16
sbb
out
inc
data16
fisubrl
pop
jl
sub
sti
clc
call
push
push
fnsetpm(287
arpl
mov
cmp
nop
xchg
xchg
cmp
adc
lret
push
mov
pop
and
icebp
ds
stc
and
stos
adc
fldt
ret
pop
mov
sbb
ja
jno
inc
sbb
rcrb
packssdw
or
cmp
aas
clc
mov
xor
mov
cmpsl
aad
js
aam
jle
insb
cli
cltd
lock
cmp
aaa
jp
enter
nop
jns
pop
mov
sbb
mov
cmp
mov
int
std
jnp
cmp
cltd
mov
sub
jo
mov
mov
cmp
mov
test
cltd
in
pop
mov
pop
xchg
popa
add
stos
xor
int
push
pop
or
cmp
pop
inc
std
mov
or
aas
inc
divl
not
sbb
sbb
fildl
pop
std
dec
mov
sbb
jo,pn
aam
add
cli
scas
cmc
push
push
and
into
push
addl
cmp
pusha
dec
push
sub
lahf
add
sahf
test
dec
mov
hlt
rcrl
xor
or
outsl
mov
pop
push
int3
pop
or
jp
mov
or
add
pop
ja
push
outsb
jb
ficoms
out
aam
pop
xchg
popf
xor
ret
add
sub
jo
jl
jbe
add
ljmp
lret
mov
xor
movsl
pushf
sbbl
mov
dec
fnstenv
in
or
xor
xor
mov
dec
movsl
cs
pop
pop
jae
mov
cld
outsl
add
mov
sub
je
mov
in
test
inc
cli
push
ret
addr16
mov
lods
daa
insl
enter
leave
pop
mov
and
out
pcmpgtd
sub
jecxz
enter
pop
adc
stos
test
gs
lds
xchg
aam
xor
inc
popa
cmc
idiv
xchg
mov
stos
sub
xchg
jnp
out
into
or
dec
cmp
mov
mov
pop
mov
int3
and
cmpsl
leave
sub
and
fucomp
xor
dec
repz
jl
xchg
in
sbb
sahf
popa
popa
ret
sbb
inc
sub
jge
or
lcall
jp
loope
inc
add
dec
hlt
cmpsl
testb
and
sbb
mov
jo
and
mov
jle
inc
out
and
scas
lahf
aad
push
out
iret
push
or
mov
cltd
fdivrs
xchg
sahf
mov
cs
mov
das
cli
cmp
mov
jb
rolb
out
jp
inc
int
xchg
loop
add
inc
mov
jp
or
fisubrl
xlat
pop
sub
cvtdq2ps
rcrl
jp
or
lea
imul
push
popf
movsl
clc
push
xchg
in
data16
pop
sbb
mov
movsl
or
sbb
adc
mov
add
imul
jnp
je
mov
xchg
dec
jecxz
stc
sbb
dec
dec
add
mov
subb
popa
not
cmpsl
std
push
jp
test
stos
clc
sub
ds
cld
les
cli
cld
pop
test
lock
or
in
insb
fadds
mov
inc
jae
movsl
scas
push
insl
std
xor
xor
mov
mov
xor
mov
push
nop
lahf
repnz
aaa
sbb
and
or
daa
cld
sarb
clc
fistpll
daa
andl
push
fwait
lock
stos
sub
mov
push
mov
dec
iret
or
cmp
push
ja
add
mov
imul
mov
addr16
sbb
adc
add
lock
lret
dec
jle
decb
adc
mov
mov
pop
sub
push
jae
inc
inc
xchg
mov
or
out
icebp
ss
adc
adc
xor
push
mov
push
fwait
cmp
mov
sub
jg
cld
push
mov
mov
outsl
fwait
popf
in
test
or
fisttpl
pop
jg
xchg
mov
ds
mov
sbb
sbb
mov
dec
xor
mov
mov
cmp
add
inc
pushf
adc
aad
adc
xchg
push
jle
jp
push
dec
and
std
jl
popf
dec
outsb
fcmovnbe
push
movsb
mov
jecxz
push
or
mov
rep
cs
repnz
xor
inc
mov
adc
dec
dec
dec
sbb
mov
lods
test
out
das
inc
xchg
mov
mov
shrl
pop
testl
pop
in
dec
das
iret
leave
or
mov
in
pushf
xchg
mov
ljmp
call
cltd
adc
mov
insb
int
add
jb
mov
fistpl
imulb
adc
mov
mov
shll
sub
fdivl
aam
cmp
out
ljmp
popa
cld
mov
push
dec
or
adcb
mov
jge
pop
xchg
sahf
loop
das
xor
or
or
push
jb
adc
add
push
add
lock
mov
and
adc
btr
pushf
adc
out
xor
jmp
rclb
fs
sbb
xchg
jge
inc
inc
es
mov
dec
pop
bnd
add
lea
pop
pop
mov
imul
mov
dec
test
in
pop
push
test
xchg
adcl
pop
mov
fwait
or
hlt
vrcpss
and
push
pushf
push
push
arpl
aad
ret
mov
mov
divl
jmp
xor
sbb
mov
jns
mov
int
cmp
aad
faddl
nop
idivb
into
pop
std
inc
les
sahf
insl
jmp
popf
inc
cld
dec
movsl
mov
adc
dec
fwait
out
xor
xchg
xchg
mov
lods
inc
push
lea
push
pop
add
xor
push
push
xchg
add
call
cmpsb
sahf
and
inc
xlat
push
jle
popf
mov
cmp
adc
sbb
push
mov
movsb
jae
mov
bnd
cmp
sbb
es
movsb
xor
faddl
sbb
mov
insb
inc
test
out
jl
into
mov
mov
xchg
std
pop
jp
xchg
out
negl
push
mov
daa
inc
lea
fstl
sbb
cmp
mov
arpl
lods
lods
in
nop
repnz
mov
mov
mov
cmp
insl
add
stos
mov
outsb
mov
or
ljmp
jne
ss
in
sbb
outsl
adc
out
sub
out
dec
sbb
subl
pop
ljmp
jmp
inc
inc
jg
test
jnp
and
stos
or
fidivl
dec
shl
add
xor
rcr
out
clc
inc
adc
push
int3
pop
jne
js
push
shlb
fnstenv
pop
test
or
jae
mov
mov
jne
add
test
inc
ja
xchg
or
or
movsb
clc
dec
aad
shrl
xchg
sar
or
lods
cmp
sub
out
vmrun
cmp
icebp
jge
jg
lret
jbe
and
add
pushf
test
scas
jl
pop
pushf
adc
ljmp
add
orl
enter
sub
dec
jbe
or
outsl
cmp
jne
leave
pop
jecxz
adc
pop
push
lret
arpl
push
sub
mov
xor
adc
xor
sbb
lcall
push
cwtd
pop
jnp
xchg
rorl
lods
loopne
jge
add
fisubs
in
mov
dec
add
sub
iret
fwait
clc
stos
pusha
xor
loopne
dec
fisttpl
jg
xchg
cmc
lock
adc
rorl
jb
add
sub
insb
push
inc
mov
mov
mov
cmp
out
or
pop
int3
mov
insb
mov
inc
sti
dec
scas
push
inc
pop
push
scas
adc
jl
push
sub
push
mov
cmpsl
les
jo
adcb
cmp
loope
sahf
push
ljmp
aaa
loopne
push
or
add
test
scas
popf
imul
fsub
rep
popa
adc
jp
mov
aam
mulb
add
or
std
rcrb
xchg
int
push
dec
mov
les
inc
pop
adc
inc
test
push
xchg
das
fwait
push
aas
sub
pop
lret
push
add
and
mov
xchg
nop
dec
xor
insb
pop
mov
and
shll
cltd
jo
aam
and
mov
mov
test
push
cli
pop
jns
add
sub
sbb
bound
add
sub
mov
bound
inc
adc
add
jge
lds
sub
push
cmpsb
cmpsl
xchg
mov
xchg
add
out
pop
fstpt
jmp
jns
push
dec
add
xor
mull
inc
or
and
sbb
add
jmp
xchg
jno
add
call
addr16
cmp
or
ja
mov
popl
or
jno
push
sub
xlat
mov
ss
das
lods
pushf
shrl
lods
cmp
mov
push
loopne
cmpsb
cmpsb
lds
out
mov
push
pop
xor
inc
mov
int
mov
in
mov
jno
add
aam
mov
sbb
in
mov
addr16
ret
or
pusha
cwtl
xlat
out
mov
jg
int3
mov
xor
inc
popa
pop
mov
out
cltd
es
push
pop
inc
imull
pop
pop
and
inc
lret
pusha
jmp
mov
pop
cmpsl
push
ficompl
aas
fcoml
lds
mov
jp
sahf
xlat
ret
imul
push
mov
dec
push
cmp
cmp
cs
or
inc
jnp
sti
pop
repnz
mov
movsb
movsl
lods
test
testl
fstpl
cmp
lock
les
cwtl
xchg
test
arpl
sti
mov
cmp
xchg
ret
scas
jle
das
inc
mov
sarl
and
neg
pop
xchg
int3
fs
loope
mov
test
aam
mov
mov
xchg
in
leave
outsl
xor
sub
popf
dec
xchg
or
adc
out
ds
pop
popf
push
push
arpl
xchg
sbb
adc
dec
mov
push
dec
mov
add
lods
out
or
outsl
add
sub
jp
dec
mov
push
daa
jnp
clc
fdiv
aam
lock
ret
sbb
sbb
mov
pop
add
lea
test
mov
test
js
repz
pop
mov
out
mov
addl
lods
ret
pushf
das
pop
pop
jbe
aad
push
mov
dec
ror
mov
sbb
pop
std
push
fs
push
inc
sub
cmpb
into
cmp
jo
xchg
lcall
inc
rolb
and
mov
mov
push
add
pop
into
lahf
mov
ret
imul
jns
mov
jae
jmp
jmp
lret
dec
fwait
add
push
fcmovnbe
shrb
xor
dec
ficoms
fcmove
mov
scas
mov
jbe
add
es
nop
mov
js
jne
and
push
jp
sahf
xor
sbb
push
addr16
jnp
dec
shlb
mov
and
ds
inc
cli
mov
xchg
add
mov
sub
hlt
dec
cmpsl
cmpsb
sub
dec
aad
outsb
mov
insb
jge
int
scas
sti
lret
sub
leave
rcl
mov
daa
js
push
cmpsb
xlat
sbb
dec
mov
cld
mov
pop
xor
ljmp
jle
daa
push
mov
sbb
js
pop
sbb
cwtl
mov
cmp
or
lret
xchg
movzwl
mov
mov
and
jmp
frstor
jo
cmp
jbe
cmpsb
fistpll
mov
outsb
bnd
iret
xchg
aam
pop
dec
fs
pop
sarl
push
cmp
push
or
pop
mov
jle
add
arpl
orl
movsl
xor
pop
mov
adc
push
cld
ret
xchg
mov
pop
adc
jnp
jmp
outsb
pushf
cs
dec
mov
out
pop
or
add
outsl
mov
or
mov
int
rcr
addr16
sti
sub
inc
mov
inc
mov
int
add
test
int
xchg
fstps
ret
sub
mov
fsubrl
iret
or
clc
pop
jg
mov
pop
mov
mov
pop
jle
jo
pop
inc
out
cld
bound
test
xchg
cltd
pusha
sub
sahf
xchg
fstl
adc
imul
fldcw
xchg
mov
test
aaa
imul
aaa
and
inc
dec
int
push
dec
adc
dec
stc
rclb
pop
cmp
jne
jl
mov
cmp
das
sbb
addl
dec
inc
out
xor
cmpsl
dec
push
stc
mov
dec
mov
add
not
sbb
push
push
pop
mov
pop
lret
adc
pop
sbb
mov
imul
push
cmpsb
inc
rol
cld
mov
cmp
push
das
inc
push
sub
mov
dec
outsb
test
dec
out
sub
inc
mov
call
pop
push
fidivl
or
sbb
xlat
scas
push
cli
sub
shlb
mov
cmp
mov
jne
cmpb
xor
sub
sbb
sub
xchg
mov
cmp
popa
das
stos
jle
sahf
sub
cmpsl
test
les
or
adc
and
fisttps
clc
mov
pop
daa
jne
and
lret
fiaddl
frstor
push
sub
jb
insl
gs
mov
push
ljmp
clc
push
movsb
sbb
fs
dec
xor
mov
mov
dec
jnp,pt
and
iret
dec
mov
pop
dec
sbb
leave
mov
into
rorb
mov
in
out
inc
pop
sbb
imulb
and
andb
in
lock
sets
sbb
lods
je
sub
out
adc
stos
test
outsb
inc
adc
mov
adc
lahf
lret
inc
xor
cmp
push
ljmp
sarl
push
pop
mov
mov
pop
repz
or
sar
lahf
ds
xlat
enter
outsl
lea
call
push
les
and
sub
cmp
mov
push
loopne
and
add
push
leave
loope
addl
out
hlt
ret
mov
dec
push
ret
dec
or
repz
push
xchg
xchg
test
fdiv
mov
sub
lods
in
mov
jg
xchg
mov
addl
adc
idiv
xchg
jo
adc
call
adc
mov
mov
imul
mov
sub
test
add
in
jnp
negl
push
mov
cmp
sbb
inc
fiadds
mov
in
loope
mov
push
inc
sub
adc
test
and
push
jnp
mov
and
scas
scas
xor
shrd
sbb
out
fldcw
dec
pop
xor
pop
pushf
fucomi
mov
stos
test
pop
lahf
shrl
je
test
adc
filds
or
ds
imul
mov
sarl
into
das
pop
cwtl
sub
mov
cmc
jno
add
push
sub
roll
pop
sub
cmp
jle
inc
test
mov
sti
aaa
fmuls
int
jp
leave
xchg
mov
xchg
mov
das
aaa
cmp
cli
sbb
js
rolb
inc
insb
sbbl
dec
sbb
ljmp
scas
mov
pusha
mov
lods
repnz
std
sub
lock
cld
pushf
pop
dec
cmp
add
mov
into
testl
sbb
mov
dec
loope
cmpsl
xchg
aad
pop
sub
mov
js
ljmp
sub
xchg
sub
cmc
in
pop
lret
xchg
xchg
push
inc
pop
test
out
xor
mov
insl
xchg
fstpl
or
jle
cld
in
insb
sahf
addr16
int3
xchg
push
in
xchg
xlat
xor
imul
lcall
mov
nop
push
push
enter
cld
and
xchg
movsb
dec
mov
ret
scas
mov
int
sub
imul
jp
popf
mov
push
sti
sbb
jbe
je
cmp
test
or
mov
out
push
jp
mov
push
fisubrs
mov
lcall
adc
leave
scas
mov
fildl
push
shlb
ljmp
lret
and
dec
cmp
sbb
gs
lods
int
pop
arpl
push
jl
sarl
mov
jns
jmp
xchg
jb
sarb
out
rolb
mov
repnz
fnsave
aad
call
and
daa
cmp
jmp
dec
pop
dec
sub
movsl
jecxz
test
aad
cmp
int3
xchg
sbb
aaa
inc
rclb
and
mov
jge
or
aas
xor
mov
pushf
adc
scas
or
sbb
sbb
lcall
daa
push
pop
and
add
inc
xor
jne
jmp
sub
out
xchg
repnz
sub
lret
mov
sbb
dec
fstl
xorb
xchg
out
add
test
mov
xor
sbb
rcr
lcall
push
test
xor
out
sbb
ljmp
push
aaa
cs
je
sbb
inc
and
testl
jae
inc
xchg
inc
jl
xchg
insl
jp
inc
push
fs
cmp
inc
test
cli
mov
mov
xchg
lods
ds
int3
xor
jns
incb
xchg
fadd
iret
sbb
into
repnz
cmc
mov
adc
mov
mov
pop
adcb
lret
cmp
mov
pusha
push
jae
add
mov
inc
decl
js
lret
mov
pusha
enter
sahf
pop
sarl
pop
push
outsl
bnd
pop
xchg
ret
popf
addb
aas
jns
sbb
xchg
idivb
data16
scas
clc
mov
cmp
inc
cmp
test
jno
fwait
jbe
stos
pop
sbb
subl
and
je
dec
push
xchg
jg
sbb
jbe
inc
dec
push
aam
mov
fnsave
or
fdivrl
mov
movsl
into
or
je
xchg
ret
lret
fcmovnb
and
xor
arpl
stc
jns
jns
or
mov
xor
shlb
pop
repz
cmp
push
ljmp
leave
or
es
xchg
sub
mov
cmpsb
lods
inc
xchg
or
adc
add
or
cmp
sbb
aaa
pop
leave
adc
jge
xor
jo
xchg
negl
fldl
rcr
mulb
xchg
xor
dec
rol
testl
stos
push
test
test
loope
xor
jno
outsl
out
cld
enter
mov
addb
jp
sar
cmc
nop
or
adc
xchg
mov
js
sti
sbb
popf
cmp
sbb
fs
xor
mov
test
lahf
inc
insl
loopne
into
imulb
int3
andl
add
jae
push
and
pushf
pop
aaa
pop
sbb
add
push
jg
les
and
xor
cmp
mov
or
shlb
jnp
or
lret
mov
mov
repz
mov
cltd
pushf
or
jno
nop
push
ficompl
int
scas
and
pop
insl
sar
xchg
or
iret
pop
inc
adc
xor
fs
test
xorb
sbb
sti
pop
mov
stc
enter
inc
out
sub
cmp
mov
movsl
ds
mov
cmp
inc
mov
push
lret
inc
inc
mov
mov
pop
xchg
orl
dec
scas
xlat
jne
jmp
xor
push
arpl
push
mov
in
jb
mov
test
ret
pop
and
xor
ljmp
in
lods
in
arpl
pusha
aas
std
mov
and
jecxz
sbb
sub
arpl
sar
xchg
sbb
mov
jo,pn
mov
sbb
test
addl
out
push
lods
mov
jl
sub
ljmp
sub
fcmovu
add
push
add
mov
jg
repz
fisubrs
fsubrs
shll
push
fistps
jmp
mov
pop
or
fadd
adc
cmpsl
xor
add
dec
fsubrs
and
mov
repz
repnz
sub
ret
inc
aam
xor
pop
pop
or
xor
push
iret
mov
cmpsl
loopne
cmp
sub
sti
push
xchg
or
mov
sbb
sbb
addr16
rcr
push
and
push
shlb
js
adcb
mov
xchg
ds
inc
inc
push
addl
pushf
inc
dec
int3
jp
mov
xor
mov
cmc
dec
daa
lock
sub
mov
add
and
out
xchg
pushf
jecxz
sbb
movsb
pop
xchg
andl
inc
ret
push
mov
lock
ss
mov
imul
movsl
add
dec
pop
imul
jg
inc
fstps
rolb
cmp
loopne
lahf
mov
call
add
out
stos
jmp
push
gs
lret
sub
cmp
pushf
int
lahf
dec
data16
mov
inc
push
sbb
pop
xchg
mov
xchg
rcrl
repz
or
xchg
movsl
cmp
leave
jl
iret
dec
push
jb
jmp
cmp
movsl
repz
mov
sub
insl
bound
pop
into
cmp
mov
mov
mov
inc
sbb
imul
imul
cs
scas
call
mov
adc
insl
int3
adc
push
call
mov
adc
or
adc
ja
dec
adc
adc
insl
bound
ret
test
mov
fsts
in
clc
int
xlat
ficompl
in
daa
jl
push
cmp
jmp
lahf
pop
pushf
xchg
mull
out
push
lret
sub
sub
dec
rclb
mov
or
pop
mov
pusha
cltd
scas
jns
xchg
xor
xchg
std
inc
mov
out
xchg
and
stos
call
sub
ficomps
ds
leave
pop
test
cmp
stos
cld
imul
repnz
fisttps
ds
jae
insb
bound
aam
clc
inc
jg
xchg
xor
ss
subl
mov
cld
mov
mov
mov
arpl
outsl
mov
dec
mov
mov
sbb
sarb
lahf
fnstsw
push
and
dec
andb
cmovbe
pushf
add
mov
mov
mov
lahf
sbb
xchg
aad
inc
dec
mov
sbb
flds
outsl
ficomps
icebp
in
lret
xor
enter
xor
mov
test
xchg
cmc
es
jg,pt
mov
xor
mov
aaa
adc
stc
rcrb
push
cld
jp
fdivs
or
lahf
js
je
sub
add
add
add
adc
stos
and
pop
adc
pop
in
jl
pushf
jo
or
fistpl
mov
push
ja
mov
mov
cmp
cmpsl
roll
pusha
mov
cs
fmuls
xor
or
cli
hlt
outsb
das
sub
pop
popf
add
sub
dec
in
out
sub
cmpsb
je
push
mov
xchg
cmp
out
hlt
cmp
mov
std
xchg
push
fmull
cmp
stos
psraw
ret
and
mov
scas
lods
xchg
inc
outsb
push
in
push
out
xchg
jmp
sub
xchg
fildll
ja
addr16
lcall
jne
lods
xor
push
in
sub
call
jl
push
or
and
mov
pop
xor
adc
inc
pushf
in
clc
xchg
pop
jnp
pushf
jne
rcl
jno
push
cmp
lods
dec
mov
fdivl
sub
xchg
pop
icebp
pop
sbb
adc
and
mov
pop
xlat
mov
cmp
inc
rorb
cli
lret
mov
rorl
jge
push
arpl
add
sbb
cwtl
ficompl
es
shrb
dec
adc
imul
fcomi
sub
pop
add
int3
jae
ljmp
repnz
leave
fnsave
orb
mov
repnz
ret
lods
ficoml
mov
xor
mov
inc
out
inc
and
lock
std
je
stc
jb
in
cwtl
jns
andb
mov
xor
cmp
jne
or
mov
andl
mov
adcl
xor
xorl
xor
sub
sub
mov
mov
xor
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
jmp
mov
and
out
mov
addl
hlt
cltd
cmpsb
mov
ja
push
sub
xchg
daa
outsl
push
xchg
or
xor
shrl
mov
pop
or
pop
rclb
jmp
add
aam
push
hlt
dec
push
dec
popa
enter
push
fcmovu
or
dec
ja
pop
push
and
fwait
rep
iret
cltd
sbb
cmp
cmpps
rol
inc
sti
popa
popf
testb
test
dec
sub
arpl
sbb
xchg
xor
jo
or
sti
adc
fldenv
or
mov
hlt
mov
insb
cmp
and
hlt
adc
xor
and
xor
sbb
push
cli
cli
ret
sbb
imul
and
adc
stos
xlat
sub
inc
shlb
and
dec
xchg
mov
lea
aad
adc
lahf
ja
mov
js
cld
hlt
into
scas
aam
or
cwtl
xor
aas
in
scas
in
cmp
sub
sahf
pop
les
add
add
stos
inc
stos
gs
std
cmp
mov
repnz
rcrb
pop
pop
inc
xchg
mov
pop
in
xor
sub
mov
filds
inc
mov
mov
icebp
pop
aaa
jg
pusha
push
sub
and
inc
pop
inc
pop
jl
xchg
adc
adc
adc
lock
arpl
push
pushf
lea
cs
inc
fs
or
cmp
jecxz
jae
jmp
insl
or
loopne
shrb
pop
loope
or
push
scas
out
mov
shl
cmpsl
dec
aad
xchg
mov
inc
pop
sbb
cmc
or
sbb
jbe
cmpl
call
lods
pushf
jg
bnd
sti
sub
mov
dec
pushf
pop
fbld
stos
popa
daa
int3
push
outsb
stos
inc
repz
ljmp
jne
mov
andb
mov
or
sbb
popf
jns
dec
stos
pop
int
into
mov
pop
pusha
add
add
fs
rcrl
cmp
sub
cmc
push
inc
cli
cmp
sahf
inc
sub
aas
call
jbe
pop
imul
arpl
std
and
stos
ja
mov
shl
cmp
in
outsl
decl
push
sti
aam
jp
cmpsb
xorl
or
repz
inc
cli
ljmp
aad
xor
mov
iret
repnz
sbb
or
lods
xchg
add
rcll
mov
sub
push
subl
insb
cld
dec
repnz
ja
dec
fbstp
sbb
xchg
dec
cli
cmp
mov
mov
lds
repz
add
or
mov
sahf
es
xor
sub
push
dec
mov
bound
cmp
mov
jnp
push
cwtl
adc
lret
and
dec
jb
sti
adc
push
fstpl
les
enter
test
pop
push
mov
fmull
push
jge
inc
shlb
add
add
dec
jb
pop
push
dec
adc
sub
mov
mov
shlb
ret
mov
mov
pop
mov
dec
imul
in
mov
stc
push
sbb
dec
aas
cmp
ss
xchg
inc
and
or
add
dec
loope
je
pop
pop
sarb
fisubrs
xor
ljmp
iret
test
push
jg
adc
mov
fnsave
ss
ljmp
dec
addb
push
push
xor
xchg
leave
lahf
dec
pusha
imul
and
jb
mov
stc
lret
inc
add
enter
shlb
mov
ret
inc
jg
test
test
lahf
xchg
gs
dec
insl
xchg
mov
dec
into
gs
movsb
inc
mov
mov
add
repnz
fisttps
xchg
lods
mov
and
jae
and
mov
fiaddl
movsl
dec
cmpsl
std
mov
das
xor
mov
sbb
dec
xlat
stos
jmp
and
pop
cmc
pop
or
xor
arpl
in
push
add
xor
pop
cmp
int
pop
mov
je
dec
dec
sbb
call
adc
inc
xor
jp
xchg
ret
mov
cmp
sbb
les
xor
cli
fiadds
mov
ficoms
mov
divb
push
add
inc
pop
adc
sbb
push
shrb
in
push
jb
jl
pop
xchg
pop
test
mov
lods
pop
or
ret
divps
pop
push
fwait
int3
pop
mov
loop
inc
xchg
pop
pop
push
pop
stc
lcall
jne
mov
loope
popf
shrl
es
jb
or
cmp
inc
jl
daa
xorb
mov
addr16
ljmp
push
mov
xchg
push
cmpsb
xchg
notl
inc
je
pop
test
rcrl
or
lods
mov
pop
mov
xchg
cmp
inc
cltd
pop
xchg
addr16
imul
mov
stos
movsb
popf
push
nop
mov
jno
add
hlt
xchg
lods
push
rcrl
push
pop
xor
xchg
xchg
inc
push
int3
movsb
fnstenv
pop
dec
pop
pop
xor
mov
bnd
pop
cmp
mov
pop
inc
mov
hlt
scas
mov
stos
cmp
shrb
in
push
outsb
inc
adc
cltd
in
fimull
push
add
push
and
add
xchg
inc
dec
jmp
inc
cmp
daa
in
xchg
cmp
cmpsb
leave
stc
sbb
pushf
jl
data16
ss
jecxz
lcall
dec
imul
sbb
mov
xor
xor
roll
lahf
mov
mov
cs
add
push
loop
les
pop
pop
call
mov
bound
xchg
xchg
push
xor
outsl
mov
outsb
xchg
xchg
inc
sahf
mov
imul
loope
or
push
testl
rorl
fmul
xor
lcall
ret
subb
xor
push
add
push
rcrb
imul
mov
dec
fisubs
pop
iret
mov
out
xor
mov
test
aas
sbbb
rcll
jne
mov
gs
scas
xchg
jae
sub
in
and
bswap
cld
adc
mov
add
cmp
mov
fsubl
lock
mov
cmp
xor
jp
mov
in
subb
mov
push
mov
lret
xor
adc
dec
dec
aam
cmp
pusha
jle
push
test
sub
mov
mov
mov
mov
pusha
inc
fldcw
imul
mov
ja
push
aas
loop
je
cmpl
mov
xor
or
orl
loopne
cld
lods
incl
into
cmp
mov
push
mov
xchg
mov
repz
stos
mov
and
in
cmp
cmp
mov
insb
mov
push
adc
gs
cmp
add
sbb
xchg
push
fsub
jnp
fsubrl
dec
fstl
sub
sub
fwait
push
imul
in
rclb
cmp
xchg
test
xor
adc
lret
inc
jbe
bound
jo
outsl
xchg
sbb
jo
outsl
mov
add
sub
fnstsw
dec
mov
mov
lods
ror
dec
push
jp
mov
call
ret
in
popl
mov
lods
jae
aam
push
dec
adc
mov
imul
sbb
shrb
jl
and
push
cmp
sbb
cmp
popf
xchg
xchg
push
aad
push
xabort
ret
xchg
mov
lcall
sbb
call
add
scas
mov
jo
and
dec
idivb
fbstp
jge
jl
add
jbe
inc
repz
cmp
xchg
cmp
push
and
xchg
cmp
cmpsb
cmp
mov
dec
incb
or
mov
shlb
inc
adc
aas
jo
out
add
lret
stos
push
ljmp
aam
pop
in
mov
lea
push
arpl
ja
ljmp
loop
mov
daa
scas
add
push
pop
xchg
sbb
xor
dec
in
xchg
add
sbb
mov
int
xorb
adc
pop
jae
daa
pop
test
rep
sbb
add
daa
out
scas
add
ret
test
xchg
add
xchg
sarb
sti
popf
pop
jne
cltd
jl
push
inc
or
dec
mov
sub
mov
adc
sub
sbb
adc
andl
xor
xor
push
div
popl
jb
aad
jnp
cmp
pop
call
and
fistpll
pop
call
push
mov
ret
jmp
lock
cmp
jl
mov
fs
stos
xlat
outsb
into
outsb
mov
mov
cltd
push
mov
into
cmp
jb
stos
push
hlt
test
out
int3
lret
push
xor
mov
pop
cmp
pushf
jmp
inc
add
pop
repz
xor
sbb
inc
cmc
movsl
out
setb
lcall
ret
jns
push
movsb
xchg
mov
rorl
xor
pop
jo
add
jo
jno
ret
js
pop
inc
mov
out
xor
aas
xchg
enter
add
cmp
test
std
lcall
je
mull
push
push
cmp
test
push
loop
adc
add
jmp
shl
icebp
cmp
ds
and
dec
fisubrs
xchg
js
add
adc
lea
mov
jnp
cmp
sub
lock
cmp
in
push
fmul
push
add
int3
lret
sti
push
in
lds
pop
insl
cmp
outsl
push
lret
decl
push
and
cmp
stos
cs
jmp
addr16
mov
ficoml
push
lods
jbe
xchg
loop
push
inc
gs
mov
and
inc
rcr
inc
cmp
adcb
mov
adc
adc
shrl
leave
testb
sub
stos
sbb
push
sbb
repz
mov
jmp
fisubl
in
pop
outsl
mov
fs
psrad
pusha
cmpsb
mov
daa
iret
pop
inc
scas
mov
sbb
pushf
sar
mov
xor
aam
jecxz
xchg
pop
mov
fsubrl
xchg
out
mov
pushl
adc
ss
adc
dec
sub
orl
cmp
xor
cs
les
cmp
sbb
dec
dec
leave
xchg
out
popf
cwtl
lahf
mov
lods
add
xchg
lahf
sub
add
mov
mov
mov
cmp
nop
pusha
shll
test
xchg
sbbb
dec
sub
fldl
pop
adc
mull
test
adc
and
mov
mov
not
ljmp
lea
les
mov
arpl
ljmp
fcmovne
je
mov
insb
xchg
movsb
xchg
jle
pop
dec
aaa
or
sub
lods
subb
lret
mov
bound
popf
in
push
pop
mov
nop
push
dec
mov
jle
test
pop
sbb
lock
mov
lock
pop
movsb
and
xor
cli
or
test
push
and
add
cmp
int
xchg
adc
xchg
ss
movsl
sub
jp
test
push
hlt
mov
movl
cmp
scas
xlat
aas
in
aaa
mov
aas
aaa
xor
jp
sub
lods
jmp
shrb
stc
add
cmp
and
ficoml
ljmp
cmc
sbbl
jp
loop
or
pushf
pop
adc
dec
xchg
and
inc
lcall
ds
and
loope
push
jb
pusha
jecxz
xor
in
aas
stos
sub
or
jmp
pop
mov
cli
xchg
les
xchg
fstps
cmp
inc
int3
dec
cmp
dec
sub
pop
sbb
sub
hlt
mov
pop
loope
outsb
inc
jnp
xor
fimuls
xchg
pop
out
sbb
mov
mov
out
mov
enter
ljmp
test
sub
daa
adc
lods
mov
gs
fstpl
andl
clc
cmc
push
stos
loopne
xor
pop
rolb
pusha
pop
cmp
test
inc
cmp
ret
out
mov
cltd
jne
xor
stos
xchg
std
inc
int
filds
fimuls
xchg
sub
lds
rep
xchg
xchg
test
mov
mov
imul
mov
lods
fwait
push
xchg
push
ret
aam
pusha
mov
fsubr
jmp
es
loopne
ja
push
mov
cmpsl
leave
xchg
movzwl
aaa
sub
lret
or
pusha
xor
es
loope
mov
sub
jns
push
dec
dec
int3
sbb
in
and
add
push
sbb
out
enter
rorb
jno
les
call
dec
jmp
repz
sahf
sbb
mov
xchg
sub
loopne
dec
call
cmp
fidivs
push
ljmp
xchg
dec
inc
aam
xor
jne
outsl
out
insb
test
add
xchg
lock
inc
stc
inc
lahf
cltd
repz
arpl
cwtl
mov
inc
mov
xchg
bound
call
repnz
pop
push
divl
xor
inc
sbb
jle
mov
movsb
add
dec
ficoms
test
fiadds
sarl
xchg
ret
in
arpl
loopne
test
jnp
inc
sub
pop
loope
or
ret
nop
mov
or
movsl
and
imul
cmp
pop
mov
lret
inc
out
ss
stc
xchg
ljmp
sub
es
ss
or
mov
gs
repnz
pop
inc
push
adc
cmp
and
add
pop
pop
sbb
pusha
ljmp
push
xor
int3
icebp
fildll
test
call
test
sbb
scas
sbb
sub
bound
enter
or
lock
sub
jb
ffreep
popf
movsl
xchg
xchg
test
movsl
xchg
xchg
or
dec
xor
in
mov
jp
fldcw
push
cwtl
shr
adc
jno
test
ror
nop
roll
adc
push
pop
sbb
les
arpl
cmp
nop
and
adc
sub
nop
sub
dec
jp
fdivs
push
jo
mov
jmp
pop
mov
push
je
ja
jo
stos
and
xchg
add
mov
rorb
jne
outsb
and
or
ret
push
or
aad
mov
and
xor
push
sub
pop
adc
andl
push
jns
push
fstpl
movsb
jl
cmp
aad
mov
popf
cmp
mov
fcoml
xlat
in
pop
shll
lea
sahf
sub
fdivl
and
lea
lods
dec
mov
nop
dec
adc
mov
jle
push
pop
es
sub
fcmove
aad
xchg
int3
pushf
aaa
cli
sar
gs
fisttps
and
cmpsl
lcall
pop
cmpsb
shlb
xor
out
push
lods
insb
in
outsb
sbb
cmp
xlat
scas
in
xchg
fsubl
add
fwait
das
jg,pt
jne
mov
or
inc
popf
loope
mov
and
mov
lret
cwtl
out
add
mov
loopne
push
pop
dec
sbb
jmp
lods
push
das
test
dec
mov
lret
pop
aaa
fisubs
insb
jae
cmpsb
inc
roll
or
popl
lret
mov
pop
ret
pushf
xchg
pop
mov
fsubrs
arpl
cmp
fs
xchg
inc
int3
xor
inc
or
ret
pushf
cli
dec
mov
insl
les
add
repnz
mov
inc
push
les
movsb
popa
jl
mov
xor
subl
pushf
mov
pextrw
lcall
mov
je
repnz
and
cs
pusha
sbb
repnz
dec
mov
loop
movsl
into
sbb
and
adc
xor
cmp
jp
adc
ljmp
mov
push
mov
lahf
rcrb
cmove
lods
mov
push
sbb
pop
pop
test
push
pop
outsb
and
out
lret
ret
dec
dec
or
cmpsb
js
out
shll
cmp
sar
call
pop
movsl
pop
cmp
mov
sti
mov
sbb
aas
js
ret
xchg
fdivs
mov
out
mov
sub
call
out
rcll
adc
das
mov
dec
sub
xchg
stos
aaa
adc
addr16
test
jo
loopne
adc
cld
mov
or
jnp
xor
pop
xchg
jg
scas
xor
xchg
loop
jne
push
ret
inc
into
jp
fildl
mov
push
jl
and
mov
repz
lock
in
test
adc
outsb
movsb
sbb
test
int3
sbb
cld
sarb
repnz
or
mov
loopne
inc
cmp
push
push
dec
jl
dec
sbb
movsl
ret
cltd
lcall
shlb
int
inc
push
cwtl
xor
add
mov
inc
lret
fcoml
jmp
lret
inc
and
mov
sub
shlb
nop
mov
sbb
fsubl
sub
data16
dec
jge
push
adc
add
or
fs
jns
xchg
sbbl
lret
inc
mov
mov
xchg
aam
fcoml
outsb
adc
incb
pop
fisubrs
rolb
pusha
outsl
sub
jmp
into
nop
loope
jbe
mov
cmp
mov
loop
test
push
xor
scas
ja
dec
call
out
ret
iret
cltd
ss
jbe
cs
insl
push
daa
nop
clc
hlt
push
jae
jl
mov
pop
inc
jmp
mov
ret
ret
ret
jg
dec
divb
sbb
gs
inc
pusha
negb
data16
je
push
xlat
sub
mov
cmp
sub
and
sbb
mov
push
pop
push
rcll
sbb
aad
lcall
daa
sbb
jbe
js
fdivrs
scas
mov
inc
arpl
adc
outsb
test
pusha
fstpt
cmp
popa
push
push
add
mov
mov
inc
loop
int
mov
adc
aam
insl
jae
xor
out
repnz
add
jecxz
imul
add
fadds
xchg
sub
jmp
sub
in
pushf
xchg
and
mov
mov
stos
mov
movsl
mov
test
test
std
xor
or
and
mov
in
pop
je
sub
and
int
sbbl
jle
adc
pop
inc
loope
pop
ror
and
into
mov
pop
lods
push
icebp
stc
mov
int3
repz
and
mov
add
xchg
repz
inc
inc
aas
cmp
sub
leave
add
dec
or
ds
ss
mov
cmp
xchg
inc
ret
mov
mov
cmp
jle
jno
fs
ss
cmpsb
inc
inc
jmp
lcall
add
pop
xor
jle
lods
sbb
in
push
cwtl
cmpb
stc
pop
loope
aaa
jne
hlt
sarl
imul
jmp
pop
adc
jmp
xlat
aad
inc
icebp
pop
jecxz
insl
dec
dec
ret
ja
arpl
clc
lock
mov
aam
sbb
arpl
jno
or
pop
incl
ficoml
adc
arpl
mov
fmull
outsl
dec
xlat
stos
out
jbe
repz
cmpsb
sbb
daa
dec
add
sti
mov
mov
out
xchg
push
mov
ja
adc
call
or
into
leave
mov
outsl
iret
ret
dec
test
repnz
insl
mov
lods
mov
pop
adc
mov
pop
stos
pop
test
adc
repnz
inc
popf
xchg
dec
js
xchg
jl
xor
xor
mov
cmp
jp
test
adcl
int
mov
mov
js
sbb
xchg
dec
add
jle
aam
fdivl
or
or
and
pop
cmp
lret
fimuls
push
jbe
mov
lret
adc
jo
pop
mov
outsl
push
mov
xchg
ret
jae
lds
dec
sub
fmull
and
adc
cmp
dec
push
fsubrp
mov
pop
pop
das
lret
mov
pop
pop
sbb
cld
popf
dec
adcb
popa
lock
je
cmpsl
aam
push
movl
pop
mov
sbb
cmp
daa
push
jg
int3
fistpl
jb
or
ds
jl
cmp
adcb
in
sub
pop
ficomps
dec
mov
sbb
jno
out
ljmp
dec
push
loopne
aaa
gs
inc
rcll
enter
dec
mov
clc
in
cltd
pop
or
mov
lret
jno
and
inc
je
and
mov
movsl
mov
mov
insl
push
mov
adc
aad
pop
push
xorb
cmp
popa
scas
ret
jl
sbb
stos
in
xor
mov
mov
mov
pop
jnp
sarl
popl
pop
xlat
je
negb
inc
test
stos
imul
add
xchg
jmp
pop
dec
in
mov
pop
jmp
imul
gs
mov
imul
orl
das
stos
out
add
push
fildl
dec
sub
jnp
jo
popa
add
fldcw
dec
andl
hlt
in
out
sti
adcb
mov
fimull
inc
fadds
rcll
pushf
jbe
popl
es
or
add
mov
cmp
cs
bound
cwtl
cmc
cmp
inc
fwait
inc
aaa
mov
daa
nop
pop
testl
jne
insb
jae
outsl
adc
push
dec
in
mov
mov
mov
insl
or
mov
mov
xchg
sub
and
sub
adc
sub
inc
adc
stos
loopne
or
mov
add
repnz
imul
add
mov
sbb
jecxz
add
pop
jle
addb
sbb
xor
jl
mov
cmpxchg
enter
call
sar
push
icebp
push
test
jnp
xchg
dec
shrb
stos
mov
push
stc
hlt
sub
into
cltd
iret
inc
fstpl
pop
js
imul
cmpsl
pusha
fadds
ja
push
jbe
jno
push
sub
lds
add
sbb
das
push
nop
mov
out
test
cmp
inc
inc
std
nop
xchg
int
arpl
mov
cli
shlb
jecxz
into
imul
mov
and
arpl
aas
mov
mov
repnz
sub
inc
stos
cmpsl
les
lcall
mov
xchg
hlt
sbbl
cwtl
sbb
ss
or
stc
sbb
repz
testb
outsb
ror
in
push
jae
jae
sub
gs
mov
outsl
jmp
pop
mov
nop
mov
push
imul
inc
sbb
cwtl
mov
push
jmp
imul
pop
out
mov
loope
pop
ret
bound
adc
test
mov
xor
pop
pop
jp
pop
push
xchg
ljmp
in
jp
rcrl
popa
leave
arpl
pusha
jg
adc
in
inc
inc
jmp
rorl
jnp
mov
dec
popf
repnz
std
add
push
push
mov
enter
xchg
lods
icebp
push
push
jecxz
cmp
bnd
jno
mov
out
mov
scas
mov
dec
cmp
mov
scas
pop
dec
mov
leave
sub
xlat
xor
lcall
and
push
mov
mov
or
pop
mov
sbb
aaa
lods
or
pop
test
push
test
mov
mov
aam
fdiv
loope
jle
xor
sub
push
fisubl
pop
aaa
dec
notl
movsb
jmp
jmp
pop
inc
pop
jecxz
jecxz
jo
ret
sbb
add
testb
or
ja
xchg
dec
add
out
pop
cwtl
into
pop
aad
mov
mov
stos
dec
inc
out
jb
xor
add
or
stos
xchg
insb
mov
adc
cmpb
ds
cmpsl
dec
jle
dec
addr16
loope
int
jb
iret
test
jle
clc
mov
mov
dec
std
xchg
add
into
add
fs
sub
or
cmp
fadds
sbb
and
repz
adc
dec
into
xchg
in
and
jecxz
fiadds
mov
or
fsubr
shlb
and
adc
dec
popf
dec
scas
test
cmp
xchg
idiv
mov
jae
dec
outsl
into
and
mov
loopne
lret
std
mov
adc
xchg
in
test
mov
int3
nop
scas
jae
enter
in
mov
hlt
jb
xchg
test
rorb
lret
push
jb
es
mov
inc
int3
ss
out
sahf
mov
mov
jmp
lds
lds
inc
lcall
sbb
loope
xor
adc
scas
cwtl
pop
aas
loope
arpl
mov
dec
adc
les
mov
jb
sbb
rclb
repz
idivb
sti
or
sar
cmp
dec
sarb
push
mov
pop
mov
dec
adc
sbb
jmp
xchg
hlt
insl
cmpb
movsb
cmc
mov
sbb
cmp
ja
cmp
test
cmp
or
xchg
mov
inc
aad
fistps
out
test
ret
cld
dec
imul
adc
pop
mov
or
xchg
pop
aas
imul
sbb
loop
in
inc
jge
inc
call
pushf
or
out
lret
sub
fdivrl
enter
dec
adc
dec
sahf
fldenv
or
add
ljmp
bnd
xchg
jo
dec
pop
inc
mov
inc
lcall
sbb
fadds
jp
imul
add
mov
dec
sub
jmp
xchg
jo
push
out
pop
bound
inc
mov
and
rcrb
push
lock
xor
pusha
lcall
mov
ds
add
mov
loope
in
jo
sbb
jge
int3
pushf
push
mov
sub
movsl
cmp
cmp
lret
fdivl
sbb
insb
test
mov
inc
sub
scas
xchg
fwait
mov
dec
mov
jecxz
jl
andl
mov
int
ret
std
xchg
outsl
mov
repnz
gs
sub
push
jb
push
jne
dec
or
or
push
pop
enter
es
jns
sub
idivl
cmc
fnsave
outsl
cmp
aad
or
and
cmpsl
movl
xor
loopne
out
notb
cmp
mov
pop
test
mov
xchg
mov
lods
cwtl
ljmp
jnp
jl
xor
add
mov
sbb
dec
jmp
jo
inc
imul
cmp
gs
jne
dec
sbb
ret
lds
and
jnp
pop
sbb
push
mov
pop
hlt
dec
or
std
and
lock
xchg
aam
push
adc
les
pop
hlt
and
enter
sbb
aaa
orb
xchg
mov
jbe
les
aad
jg,pn
sbb
mov
ljmp
outsb
mov
push
insl
sub
mov
mov
and
sub
mov
js
dec
divb
repnz
jne
add
push
icebp
out
lods
test
lea
loopne
mov
inc
test
jp
fldt
enter
mov
mov
shlb
or
pop
pop
subb
rcl
xchg
cs
in
push
lods
xor
loopne
shlb
loopne
test
add
dec
mov
dec
sub
push
inc
out
hlt
jle
aaa
shrl
les
ret
pop
pop
movsb
loopne
lret
popa
cmpsl
cmp
mov
les
imul
xor
stos
aas
adc
ds
rolb
popf
lahf
js
and
jp
or
fimuls
mov
mov
stos
mov
movb
dec
in
sub
imul
movsb
xor
subb
stos
push
xchg
mov
test
hlt
stc
sub
and
lock
inc
jbe
add
inc
jl
fucomp
or
stos
bound
rclb
stos
imul
popa
mov
in
in
les
data16
xor
repz
xor
cmp
dec
sub
mov
fsincos
push
jb
ds
xchg
cmp
cwtl
decb
xchg
stos
push
ss
into
iret
inc
icebp
fsubrs
or
dec
fcoml
dec
fisttps
repz
insb
aas
add
nop
dec
mov
jp
in
mov
ret
arpl
aaa
add
jp
ja
in
adc
pop
mov
lds
jl
dec
cmp
pop
loope
fstps
jae
xchg
lret
push
pop
jb
in
out
fstpl
icebp
jle
shll
inc
xchg
sub
or
fucomp
jne
add
inc
cmp
cmpsl
xor
and
into
imul
mov
dec
cwtl
jne
sub
fmul
inc
and
inc
and
fistpl
test
xchg
idivl
jbe
lods
or
pop
dec
daa
int3
push
mov
fcompl
dec
inc
iret
xchg
adc
jg
jno,pt
xchg
push
sbb
push
bound
lds
in
push
jno
stc
movsb
int3
fisubs
sub
fisubl
sar
sbb
pop
mov
scas
sbb
popa
je
and
add
jo
adc
pop
xor
push
insb
push
push
jno
inc
test
mov
xor
rcrb
jecxz
push
lahf
and
jns
jp
scas
cmp
push
or
loopne
inc
sbb
xor
ljmp
dec
pusha
lods
sbb
mov
mov
cmpsb
sbb
iret
and
std
xor
loope
in
pop
adc
mov
flds
insl
daa
dec
mov
jae
imul
int3
mov
fbstp
add
mov
rcrb
jmp
jnp
dec
inc
sub
push
in
mov
xchg
pop
mov
stc
rorb
pushf
add
add
jnp
cmp
fisttps
and
dec
push
insb
test
mov
scas
inc
add
nop
jne
mov
ljmp
pop
xchg
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
jmp
movsl
mov
sbb
scas
mov
nop
mov
lahf
scas
pop
cmp
subl
lea
inc
pop
jle
test
jp
bound
aad
push
insb
push
sbb
adc
adc
pop
adc
lds
push
outsb
and
jno
jne
mov
les
clc
lret
lea
scas
insl
loop
and
mov
je
pop
pop
stos
push
incb
or
cmp
mov
push
adc
cmp
inc
cmp
cmpsb
int3
mov
sbb
cld
adc
lds
popf
aam
push
cld
push
cmp
jae
inc
pushf
lcall
and
ss
scas
leave
xor
xchg
outsb
mov
mov
lcall
ret
pop
dec
pop
mov
cwtl
lret
jmp
or
js
mov
adc
enter
imul
rcll
outsl
nop
mov
mov
or
jne
es
add
cmc
int
push
sub
mov
mov
xchg
adc
mov
add
iret
iret
testb
aaa
imul
and
dec
jno
pushf
add
dec
cltd
push
movsl
orb
add
adc
add
mov
js
dec
enter
push
loop
cmp
shr
adc
xchg
movb
cmp
rep
out
jg
mov
dec
or
and
xchg
in
std
cwtl
mov
jle
js
fstpl
repz
mov
imul
loope
gs
sbb
sub
std
fcmovnb
pop
je
xchg
jge
jge
inc
and
push
inc
sub
lods
outsb
mov
mov
daa
nop
xchg
test
cld
mov
bound
or
nop
sub
add
jl
cmp
scas
add
push
adc
mov
idivb
mov
inc
test
jl
add
xchg
aas
xchg
jno
outsl
push
lret
inc
lea
xorb
mov
in
insl
adc
add
mov
push
fisubl
lret
push
xor
into
jbe
add
sarb
dec
fs
mov
cmp
leave
sub
rcrl
inc
imul
sbb
fisubs
xor
pop
cmpl
pop
fwait
bound
rol
lods
frstor
pop
shr
dec
stos
push
sbb
or
or
popf
and
mov
je
jnp
xorl
sub
into
pop
js
lock
dec
sbb
ds
scas
xchg
dec
sti
jmp
rcrl
scas
sbb
out
clc
imul
pop
adc
pop
out
mov
xchg
scas
es
push
aam
iret
sarb
popa
lret
enter
mov
imul
mov
mov
in
cld
clc
lret
outsl
xchg
push
mov
xor
mov
or
pop
or
sbb
jmp
dec
cli
push
lret
std
fisubl
xchg
sbb
and
inc
jno
test
mov
in
call
push
int
xchg
adc
xchg
fiadds
divb
push
imul
popf
aaa
fcompp
fdivrp
inc
repnz
divl
lods
xchg
test
and
pop
arpl
cwtl
mov
nop
adc
cmpsl
or
jbe
imul
mov
ja
cld
sbb
cmp
sub
push
sub
jle
sti
cmp
les
or
mov
xchg
or
mov
xlat
push
jo
lods
addb
lea
jbe
xchg
rcrb
jbe
bound
arpl
add
out
hlt
pushf
and
mov
dec
sbb
in
cmp
adc
mov
mov
fwait
insl
lcall
jbe
push
adc
adc
lea
mov
ret
push
call
dec
outsb
jle
stos
inc
cmpsl
aam
mov
addr16
loop
cmp
mov
pop
outsl
pushf
dec
xchg
fsubs
xor
icebp
int
outsl
dec
and
add
mov
push
repz
pop
sbb
push
sbb
test
cmp
and
stos
test
cmc
mov
pop
xor
pop
lds
add
dec
ret
add
jmp
lahf
xchg
outsb
cmpsl
push
push
pushl
sti
jb
xchg
or
cmp
dec
pop
mov
sti
pop
sub
arpl
xchg
leave
xchg
inc
sub
mov
stos
push
rcl
pop
cmpsl
mov
pop
data16
sbb
mov
adc
cwtl
gs
or
mov
xchg
fldl
mov
xchg
scas
push
inc
inc
jb
jae
and
wbinvd
aaa
push
insl
mov
jno
sub
aam
bound
mov
stos
decb
in
js
ret
dec
insb
les
pop
sahf
sub
sti
sub
popa
rcll
cmp
mov
jo
pop
orl
lock
ja
sbb
adc
mov
repz
mov
cwtl
mov
mov
add
aam
mov
dec
push
xchg
mov
jo
and
cmp
repz
mov
loopne
stos
pop
es
or
in
aam
bound
les
mov
cld
xor
mov
inc
mov
stos
push
sti
and
cmp
jg
inc
inc
dec
cmp
shrl
mov
add
xchg
stos
jbe
stos
sbb
insl
fstl
cmpsb
pop
cltd
push
insl
cs
push
jge
sub
das
mov
nop
test
adc
jno
pusha
not
sbb
jnp
call
mov
xchg
jp
inc
jle
push
adc
aas
xor
jmp
push
mov
xor
out
cltd
mov
dec
inc
dec
pop
outsl
adc
data16
sti
cmpsl
and
imul
fsubrs
enter
inc
dec
jl
lods
out
cwtl
and
inc
push
add
inc
repnz
pop
cld
scas
push
lods
cmc
sbb
ljmp
lea
dec
data16
lods
xchg
mov
add
ret
ret
mov
daa
inc
jmp
mov
xor
cmp
jle
sub
scas
push
xor
add
push
loope
arpl
push
mov
sub
das
mov
fsubp
shlb
push
and
fidivrs
lahf
dec
arpl
and
mov
jg
dec
push
push
jle
inc
imul
xor
cmp
jne
sub
sti
out
cld
mov
aam
cltd
sbb
cmp
inc
pop
fnsave
stc
push
xchg
ret
test
std
mov
int3
push
jecxz
mov
mov
dec
or
in
and
sbb
imul
int3
lret
outsb
jle
xchg
stc
aas
adc
mul
cmpsl
fistl
fdivs
pop
adc
xchg
sub
popf
sbbl
sub
dec
jmp
mov
jmp
fcoms
test
xor
in
clc
test
inc
dec
aam
mov
out
mov
aam
arpl
in
push
lods
xor
dec
dec
xchg
out
aaa
jnp
inc
pop
cltd
outsl
push
xchg
sub
sbb
add
pop
cmc
adc
inc
mov
das
enter
ljmp
loopne
pop
and
cmp
fistps
sub
pavgb
into
inc
in
mov
and
sub
xlat
xlat
fwait
pusha
dec
popf
loopne
dec
push
xor
std
dec
cld
push
movsb
mov
int
scas
pop
dec
dec
or
mov
xchg
test
dec
dec
add
repnz
cmp
mov
and
mov
sarb
inc
out
call
fstp
fisttpll
int3
std
inc
mov
aad
push
jl
push
push
add
cld
pop
jns
addr16
cmp
adc
inc
shll
xlat
jp
outsl
popf
cmp
xchg
sarl
clc
mov
pop
test
fiadds
mov
and
or
add
or
inc
test
add
sbb
hlt
cmc
mov
cmc
neg
mov
lds
mov
sub
sar
iret
test
cs
cmpb
addr16
popf
int3
arpl
dec
pusha
fiadds
push
mov
pop
jge
ss
xchg
popf
rcl
sub
inc
and
test
dec
js
and
pop
and
pop
loope
movsl
mov
daa
popf
pop
xchg
scas
ret
testb
aad
loope
mov
lods
in
cltd
js
sarb
and
std
bound
push
jb
add
jae
xchg
mov
adc
jnp
lret
test
out
jp
xchg
fadd
or
pop
push
add
ss
adc
loop
outsl
jno
out
in
mov
mov
stc
iret
cltd
aad
mov
add
ret
and
insl
test
adc
int
fsubrl
test
push
vminsd
or
imul
push
xor
add
xorb
loopne
cmp
jnp
inc
sahf
sub
fwait
adc
hlt
mov
fmuls
mov
push
in
js
fnsave
pop
push
cmc
pop
lcall
inc
sti
push
mov
and
cs
test
inc
jg
cmp
ret
pusha
mov
aas
push
add
daa
and
dec
inc
sar
outsl
repnz
movsl
inc
xchg
add
xor
dec
inc
and
adc
shlb
cwtl
mov
icebp
xchg
fstl
xchg
lret
sahf
and
xor
incb
lret
xchg
jmp
inc
mov
cmp
popf
pop
insb
pop
rol
xlat
mov
sbb
inc
jo
loopne
insb
adc
divl
and
xchg
push
icebp
sti
sub
hlt
adc
push
xchg
xchg
cwtl
cmc
sub
mov
add
add
aam
jne
inc
sub
fidivl
lret
clc
leave
aad
popa
cltd
repz
jmp
mov
aam
adc
insb
jno
push
or
or
push
and
into
sbb
jg
adc
and
fcomps
xchg
fbstp
inc
mov
mov
fidivs
cltd
inc
pop
mov
loop
pop
imul
nop/reserved
call
dec
mov
pop
dec
popf
scas
sub
pop
jge
idivb
mov
mov
dec
mov
sub
or
sti
jo
ficompl
inc
or
test
test
test
sub
sub
mov
add
rcl
cltd
in
push
lods
mov
out
insb
xorb
mov
mov
inc
push
jns
cld
jns
insl
lods
adc
fstpl
insb
or
dec
pushf
jno
pop
call
xlat
sbb
mov
ficompl
gs
out
jp
adc
fisttpll
mov
xchg
dec
jno
mov
adc
jae
mov
inc
mov
mov
inc
cwtl
xchg
fcoml
icebp
mov
cld
push
popf
mov
hlt
jb
jbe
aam
jns
cmpsb
sub
adc
add
adc
cmp
dec
mov
mov
int3
mul
sahf
mov
inc
pop
leave
out
jne
int3
pop
mov
jp
cmp
or
sarb
cmpsl
jmp
or
movsl
xchg
ds
mov
add
push
add
lds
ds
and
xchg
fadd
fwait
bound
dec
inc
mov
repz
mov
jecxz
dec
nop
and
hlt
loop
mov
daa
add
sbb
add
jbe
pop
mov
sti
mov
data16
insl
stc
mov
xor
popa
fcomps
lock
fsubrs
mov
sub
out
ficompl
scas
clc
pop
arpl
inc
or
adc
ret
jb
jmp
xor
sbb
mov
pusha
fbld
or
push
daa
push
fs
push
and
mov
stos
jo
outsb
test
test
mov
or
rep
or
les
adc
test
in
xor
clc
int3
inc
jo
cmp
popa
int
lods
jmp
inc
push
add
jbe
push
sub
or
push
in
jecxz
push
adc
add
add
and
jecxz
add
pusha
mov
arpl
dec
push
scas
popf
mov
mov
inc
jno
jle
or
das
cmp
jl
fisttpl
mov
incl
and
in
xchg
test
lock
sbb
sub
adc
xlat
lock
cwtl
aas
cmp
movsl
or
inc
adcb
push
adc
test
inc
stc
fwait
daa
push
jmp
out
lret
add
test
cwtl
shlb
jnp
sbb
jl
mov
sub
mov
push
lods
push
xchg
ja
xchg
cmp
sbb
push
std
xchg
xchg
cli
stos
push
rorl
std
leave
sarb
dec
or
pop
mov
mov
mov
jmp
lcall
pop
scas
inc
in
dec
loop
adc
ret
push
clc
enter
outsl
xchg
xlat
push
sub
xor
inc
pushf
cmp
cmp
imul
faddl
imul
loope
xchg
cmp
jmp
sub
push
sbb
aaa
push
stos
dec
ja
adc
outsl
mov
mov
mov
repnz
test
push
ja
sbb
sub
cs
pop
jb
into
icebp
xor
pop
sub
push
movsb
mov
jno
clc
inc
test
sarl
jmp
outsl
mov
mov
stc
inc
pop
xor
jg
sub
outsb
iret
es
mov
imul
daa
popf
pop
sbb
jne
jnp
loope
cmp
push
flds
push
xchg
xor
dec
stos
push
mov
mov
lods
sahf
je
push
or
pop
push
or
mov
outsb
movsl
and
add
or
mov
push
mov
xchg
jp
jmp
mov
lret
dec
dec
and
into
gs
jg
es
push
push
fwait
rcrl
daa
test
pusha
adc
mov
xor
xchg
es
lea
mov
add
and
jl
sub
lret
inc
add
bound
push
push
imul
shlb
out
mov
sub
pop
aam
mov
cmp
adc
test
sub
add
adc
dec
popf
fwait
cld
sbb
ret
dec
out
dec
mov
pop
fwait
outsb
sahf
mov
xor
popf
in
movsl
adc
jno
stc
ja
dec
imul
xchg
xlat
push
xchg
pop
adc
out
fidivrs
leave
and
push
sahf
aad
sbb
test
xchg
iret
adc
std
xor
clc
into
sbb
mov
or
test
ds
mov
fadds
aad
sbb
notl
xor
mov
push
mov
inc
push
inc
repz
notl
aas
mov
inc
popf
hlt
xlat
mov
xchg
sub
lea
fidivrs
sar
mov
mov
cmpsl
mov
pop
mov
dec
jns
lock
xchg
cmpsb
outsb
lds
inc
cmp
inc
xchg
int3
push
cld
test
inc
enter
enter
xchg
push
ret
notl
and
fwait
int
int
sbb
mov
stc
mov
jmp
loopne
sub
ret
repz
xor
imul
xchg
sbb
mov
mov
fnstsw
lret
xor
lods
xor
dec
mov
das
rcll
iret
testb
xchg
es
xchg
push
ljmp
scas
mov
imull
cli
shll
xchg
and
xchg
dec
and
scas
sbb
in
mov
out
in
repz
pusha
negb
add
out
sub
sbb
dec
test
in
add
cmp
and
fwait
jne
cld
jnp
push
repz
insl
lahf
jo
arpl
insb
rcll
cmp
enter
enter
mov
pop
jnp
stc
mov
popf
fcompl
sub
push
fldt
loop
fs
mov
outsl
sbb
jl
push
pop
stos
ror
sbb
enter
xchg
xor
jo
stos
ja
sbb
adc
mov
scas
pushf
and
jle
push
cmp
test
clc
mov
idivl
mov
in
cmpsl
dec
jo
cmp
jmp
mov
cltd
cmp
xchg
and
dec
xor
cmp
cwtl
jp
push
or
push
pop
jmp
cmp
pop
cwtl
bound
pop
cmc
lods
ljmp
std
cmp
jne
je
push
sub
xchg
xchg
mov
and
sarl
xor
jnp
test
xchg
cmpsl
stos
shlb
out
clc
sub
mov
movsl
mov
cltd
inc
xor
jmp
jbe
jle
mov
fimull
push
mov
pop
push
xor
mov
decb
sub
cmp
or
sub
dec
in
in
cs
addr16
push
dec
fs
pop
or
jle
negl
dec
pop
or
loopne
fadds
pop
pop
mov
xor
aam
in
icebp
adc
movl
iret
ret
push
fnstcw
pcmpeqw
stos
inc
xchg
fistpl
cli
and
and
pushf
repnz
imul
jecxz
jp
lret
fcoms
sub
xor
cmp
dec
movb
mov
mov
inc
mov
ret
or
push
ss
push
xor
inc
inc
pop
imul
aam
sbb
add
inc
adc
addb
push
jle
cmp
xchg
inc
aaa
rcrb
popf
orb
lret
lcall
adc
mov
push
add
sub
mov
mov
in
mov
sub
mov
xchg
mov
divl
add
adc
sbb
stos
xor
sbb
push
and
vmulsd
adc
sahf
sub
pop
and
jo
dec
fiaddl
stc
lock
or
cmp
mov
ret
add
imul
into
pop
pushf
shr
mov
dec
mov
add
mov
loop
push
pop
mov
add
movsb
mov
stos
lret
pop
iret
fnstsw
ss
std
sub
dec
andl
xor
xchg
in
mov
rolb
popf
gs
ror
mov
mulb
push
es
pop
jl
scas
mov
movsl
movb
repz
pop
sbb
scas
push
js
stos
lds
push
les
fwait
push
lock
adcb
in
xchg
pushf
mov
push
add
pop
js
aad
pop
int3
jno
xor
movsl
rcrb
int3
push
sbb
out
and
rcrl
jmp
mov
paddusw
mov
popa
mov
mov
pushf
push
inc
test
outsb
mov
mov
sub
push
mov
jne
cwtl
gs
jo
jecxz
sub
dec
leave
cmp
hlt
mov
pop
ficoml
push
push
dec
mov
push
or
into
pop
mov
lods
or
pop
adc
xor
insl
and
jecxz
mov
frstor
sahf
shl
sti
pop
test
jl
mov
adc
jecxz
sub
mov
dec
aas
les
mov
or
add
lock
shll
imul
pop
cmp
mov
repnz
pushl
cmpsw
adc
cmc
pop
sub
sarb
js
in
sub
fucomip
stos
pop
xchg
push
rcll
movsb
push
sub
sub
dec
loope
dec
shrl
xor
imul
pop
sub
or
rcrb
or
jnp
cltd
xor
cltd
scas
mov
and
adc
inc
jnp
mov
iret
shlb
fcomp
cmpsl
adc
idivb
fstpt
cmp
lahf
rcll
add
ja
pop
shlb
cmpb
bound
sub
sbb
pop
mov
movsb
inc
push
push
inc
lock
in
repnz
ret
xchg
sti
inc
ret
subl
sti
sbb
es
les
pop
lret
insl
jo
add
mov
pop
fisttpll
jae
xor
mov
or
loopne
stos
mov
ficomps
nop
test
sub
fldcw
mov
cli
stos
or
xor
shlb
push
push
jmp
gs
in
out
adc
repnz
add
cmpsb
out
jns
or
xor
iret
test
xchg
fldl
cmpsb
adc
xchg
xor
xor
cltd
add
jp
xor
call
or
repz
call
icebp
lods
fnsave
mov
nop
mov
cmp
mov
xchg
xchg
add
push
out
std
sar
sbb
xchg
mov
inc
push
out
ret
mov
and
hlt
jge
fisubl
lahf
push
cwtl
push
fwait
xchg
in
or
dec
and
scas
imul
sub
jns
icebp
fildll
cltd
les
pop
lods
icebp
imull
push
ss
ret
cld
sbb
jmp
sub
mov
bound
sbb
add
xor
adc
adc
xor
das
push
clc
fcoms
cld
fiaddl
adc
push
and
mov
loope
push
sub
imul
mov
in
push
sbb
rcr
into
pop
pop
ds
jo
xor
lods
or
cld
mov
adc
jnp
mov
outsb
int3
inc
test
xlat
jecxz
pop
push
repnz
push
in
xor
sub
std
aaa
adc
out
lcall
test
popa
adc
xor
add
iret
xchg
test
sbb
mov
dec
cmp
lds
sti
adc
jl
inc
push
jecxz
jne
pop
add
pop
fs
xchg
fdivs
adc
mov
xorb
jns
outsb
jne
das
outsl
nop
pop
pop
mov
cwtl
or
setge
es
sbb
les
pop
loop
movsl
mov
dec
lcall
andl
dec
pop
mov
les
or
xchg
shll
cmpsl
fdivl
lcall
jp
es
inc
fiaddl
mov
push
sbb
in
or
mov
lret
sahf
jecxz
or
dec
insl
scas
xchg
pop
cs
bound
fstp
fmulp
jno
mov
pop
and
jnp
cmpb
cmp
bound
in
jo
sarl
loopne
cmp
dec
scas
xchg
mov
add
cli
pop
testl
pop
sbb
inc
mov
sub
and
push
mov
imul
push
add
shlb
cmp
pop
adc
outsl
or
stos
flds
pop
in
lret
pushf
add
pop
inc
psrld
shll
rcrl
mov
rcll
aam
testb
stc
rcrb
cld
aam
sub
or
lcall
mov
xor
mov
cmp
jae
or
xor
adc
xchg
jbe
faddp
outsb
push
inc
movsb
out
sub
fwait
outsb
mov
xchg
bnd
lods
mov
repz
fsts
lock
aaa
outsl
mov
xor
vmptrld
sbb
push
das
inc
fcoml
cmp
ret
aas
push
bound
mov
ds
push
xlat
push
movsb
mov
or
cmp
imul
lods
jge
inc
push
xchg
outsl
push
or
cs
push
xchg
xor
sahf
je
mov
out
add
push
mov
stc
mov
les
in
mov
leave
add
dec
adc
ret
in
out
imull
clc
dec
cmp
int
push
xchg
stos
push
mov
push
push
test
jmp
mov
xchg
rorl
cmpsl
outsl
inc
jecxz
jp
out
divb
mov
inc
gs
mov
and
adc
mov
cmp
xlat
gs
rolb
hlt
mov
xor
xchg
es
into
out
jge
cmp
or
xor
cmp
lods
jle
mov
imul
sub
jl
stc
sbb
movsl
mov
mov
fmull
call
cmpl
fdivp
mov
pop
fninit
lret
sub
add
inc
test
cmpsl
icebp
add
push
sbb
rcrb
adc
pop
push
add
ljmp
xor
and
and
out
pop
jmp
add
imul
xorl
mov
push
or
add
inc
jb
mov
fadd
adc
outsb
neg
orl
jo
jno
xor
sbb
or
lods
xor
xor
mov
push
xchg
push
xor
jle
jne
sub
into
insl
xchg
stos
xlat
cmpsl
sub
fdivl
and
adc
paddw
xor
imul
pop
ffree
inc
repz
test
mulb
lds
incl
push
addr16
adc
jmp
movsb
pop
cmpl
xchg
push
push
jbe
fbstp
sahf
lds
push
jge
enter
pusha
jne
or
dec
mov
call
js
outsb
adc
jle
mov
jecxz
xchg
jnp
jnp
pop
lret
and
in
lds
add
pop
xchg
xchg
adc
mov
in
lods
adc
out
in
popa
xchg
inc
xchg
int
cmp
cwtl
je
adc
inc
test
popa
jp
movsl
nop
and
stc
rolb
cwtl
popa
push
xchg
sub
or
xchg
and
xchg
pop
xchg
sbb
std
test
les
jge
arpl
sub
sub
push
fwait
xchg
int
ret
xchg
repz
nop
stc
sar
jbe
or
fs
push
add
inc
icebp
test
lds
or
jg
loop
lea
and
pop
dec
inc
mov
ret
je
test
cmp
or
mov
xor
push
icebp
sbb
sbb
imul
jmp
adc
xor
sbb
xor
addr16
pop
in
add
inc
in
mov
das
sbb
mov
cmp
or
shrb
jns
fst
fucom
push
mov
push
cmpb
push
mov
pop
lds
mov
pop
mov
test
sbb
push
in
inc
rdpmc
adc
lock
mov
cld
dec
test
mov
inc
mov
test
ja
xlat
or
mov
mov
jns
mov
add
je
add
addr16
jnp
mov
cmpsb
pop
sbb
stc
rcrl
inc
in
daa
and
aam
negb
xchg
cmpsl
les
add
push
pop
cltd
mov
cli
popf
lock
xlat
mov
addr16
jb
ds
sahf
in
out
clc
pop
stos
dec
lahf
out
out
repz
xor
jbe
inc
xchg
sub
mov
aas
sbb
shrb
ja
push
cmp
aad
add
push
aad
cld
outsl
mov
std
cld
xchg
mov
stc
sbbl
jmp
xor
jno
aas
dec
push
add
cmc
loopne
je
in
mov
mov
lock
fiaddl
dec
pavgb
push
fwait
ss
repz
aad
sbb
fs
jnp
xchg
xchg
inc
gs
dec
pushf
sub
dec
daa
push
jle
hlt
in
mov
testb
cmpsl
cmpsb
fcoms
and
mov
popa
push
adc
movsl
daa
aam
jg
sub
mov
inc
scas
adc
inc
inc
mov
clc
ss
les
add
xchg
xchg
mov
jns
inc
mov
or
fwait
and
pavgw
pop
jb
and
lods
mov
pop
sub
pushl
sbb
outsb
ss
or
push
call
mov
in
xlat
jnp
in
push
fdivrl
or
rcrl
movb
dec
aas
das
push
aaa
gs
adc
add
sbb
or
hlt
cmp
js
cmp
add
cmp
int3
movsl
push
imul
aas
xchg
bound
dec
sub
call
test
cld
xchg
dec
sub
addr16
pushf
push
cltd
jae
inc
pop
add
xor
test
aas
test
fimull
addl
clc
daa
call
push
dec
inc
mov
outsl
sub
out
add
lret
in
imulb
ss
rcrl
std
sbb
push
sbb
shll
sbb
cmpsb
insl
adc
lret
inc
mov
adc
inc
outsl
fdivrs
or
pusha
jae
inc
mov
lods
mull
pop
les
in
xchg
push
std
jb
xchg
icebp
scas
or
fldenv
sbb
fwait
mov
mov
les
push
fstpt
movsb
xor
iret
or
jl
aas
scas
insb
or
cwtl
int
inc
adc
inc
movsl
cltd
inc
call
add
loop
xchg
test
mov
mov
push
pop
sbb
add
add
sub
lret
inc
inc
jno
shrb
mulb
adc
push
arpl
daa
imul
adc
sub
mov
sub
dec
cmp
jg
aam
adc
ss
push
xchg
outsl
mov
fdivrp
push
clc
dec
aas
push
jmp
adc
repnz
shll
lcall
sbb
orb
mov
xor
sub
pop
mov
adc
in
sub
mov
mov
adc
andb
or
xchg
add
sbb
rorl
pop
push
enter
cmp
add
and
addb
sub
stos
or
adc
sub
mov
leave
jmp
adc
cltd
dec
movsl
idivb
imul
cwtl
push
pop
shlb
jecxz
int3
or
jl
js
push
cwtl
repnz
xor
push
xchg
insl
rcl
stc
mov
lret
xor
loope
xor
sub
daa
in
dec
out
xchg
ds
adc
in
cmp
jmp
hlt
shrb
push
inc
int
scas
inc
movsl
inc
and
lods
in
lcall
icebp
sub
push
push
in
adcl
rcrb
push
dec
gs
aam
xchg
jns
mov
call
add
adc
dec
mov
mov
lahf
push
lock
adc
das
pop
adc
push
pusha
cmp
cmp
xchg
mov
jne
jge
leave
inc
dec
mov
sub
loop
add
inc
fincstp
popa
and
mov
push
mov
js
shl
xlat
inc
mov
pop
jns
bound
xor
sbb
stos
fcmovb
out
rolb
push
scas
inc
je
and
xchg
fistpll
lahf
push
inc
jl
fisubl
std
jle
idivb
add
clc
addb
test
ret
xor
push
push
in
daa
mov
test
lds
adc
fucomi
out
xchg
fidivrs
aas
in
mov
fwait
or
jg
aad
jle
jmp
cmp
gs
into
dec
mov
push
addb
frstor
jo
loop
aam
ret
ds
pop
lret
push
call
popa
xchg
adc
test
push
mov
daa
sbb
mov
cmp
sub
mov
mov
dec
sbb
xor
test
push
cmp
xchg
push
cld
cwtl
pop
sub
mov
and
jecxz
inc
cmp
data16
shl
or
iret
add
and
push
cmp
and
fists
adc
sbb
push
jbe
sub
ja
movsl
pushf
in
ss
dec
fwait
ror
mov
sub
add
rorb
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jle
jmp
call
cmpl
jb
movl
push
adc
movl
subl
mov
push
mov
adcl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
orl
add
andl
mov
mov
addl
test
movl
je
movl
cmpl
je
cmpl
jle
jmp
push
call
mov
dec
mov
jmp
mov
sbb
mov
addl
mov
mov
xor
xor
add
and
mov
mov
and
xor
mov
and
mov
add
sbb
mov
mov
xor
mov
or
mov
add
or
mov
orl
mov
xor
mov
xor
mov
add
mov
sub
sbbl
lea
xor
xorl
xor
movl
cmp
movl
je
xorl
mov
subl
xor
adcl
add
cmp
movl
jne
pushl
call
mov
not
mov
adcl
mov
addl
xor
add
movl
cmp
movl
je
pushl
sbbl
pushl
call
mov
xor
mov
xor
mov
xor
add
movl
cmp
movl
je
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
jmp
mov
add
sbbl
mov
mov
mov
sbbl
add
orl
mov
jmp
push
mov
andb
test
test
adc
addl
inc
scas
testl
and
ret
sbb
mov
test
xor
repnz
cmp
inc
and
sbb
inc
sub
decl
les
mov
pmaxub
nop
add
pop
xor
lea
adc
pop
fmuls
aaa
pop
adc
out
xor
adc
rcl
icebp
cmp
mov
jl
push
les
mov
xchg
cmpl
inc
dec
jno
roll
movsb
popa
fidivrs
xor
fdivr
daa
je
pop
pop
mov
and
in
mov
out
adc
dec
mov
xchg
dec
gs
pop
mov
sub
sub
pop
out
bound
sub
add
pop
pop
sub
push
add
inc
ret
jnp
sub
nop
cmpsl
out
arpl
and
pop
fs
ret
xchg
lahf
or
enter
jg
push
mov
aad
aaa
fidivs
fiadds
add
jp
in
pushf
lock
or
or
sbb
mov
scas
shll
pop
sub
sbb
xchg
in
das
into
inc
test
jmp
outsb
or
adc
and
or
mov
mov
dec
inc
cmp
pop
int3
push
stc
xchg
push
scas
stos
lds
mov
mov
or
movsb
inc
sub
inc
mov
orb
ss
or
push
test
push
popf
repnz
mov
lret
test
xor
sub
sbb
inc
lcall
enter
addr16
push
fstpl
addr16
out
mov
movsb
clc
fs
fdivrl
or
test
out
jmp
cli
and
adc
mov
pushf
loop
inc
mov
movups
jge
mov
pop
push
js
xor
cli
push
xor
cmp
mov
adc
jle
or
mov
sbb
sbb
into
arpl
jae
sub
movsl
sub
push
loopne
hlt
mov
stos
mov
fwait
mov
andb
xor
sahf
ret
in
test
pop
mov
lret
sbb
setge
imul
in
cmp
jl
cmpsl
or
popf
dec
and
ljmp
mov
xor
jmp
mov
inc
mov
xchg
dec
nop
adc
cld
outsb
mov
inc
sbb
notb
repnz
mov
dec
or
repnz
pop
jecxz
sbb
mov
mov
and
cmp
fisubrl
movsl
pop
xor
andb
testb
mov
mov
inc
popa
lds
pop
ret
or
sub
aaa
sub
push
cmp
sbb
aaa
or
inc
nop
js
enter
push
mov
sub
xchg
adc
fsubrs
dec
sub
mov
clc
cmpsl
je
outsb
push
cmp
and
jg
jecxz
mov
idivb
xchg
ffreep
xchg
andb
or
inc
sbb
jl
jnp
cli
scas
addr16
les
mov
push
add
cs
pop
js
test
xor
jne
daa
jmp
dec
leave
pop
mov
pushf
mov
jne
mov
mov
sqrtps
lret
xor
popa
in
repnz
dec
xor
xorl
push
xchg
cli
dec
std
into
xor
dec
aam
sub
mov
cmp
and
icebp
movsb
stc
xchg
sbb
iret
popf
mov
adcb
xor
or
xor
das
fidivl
sub
into
dec
lret
push
in
xorb
cmp
push
sahf
fidivrs
xor
lock
mov
data16
lock
pop
jns
or
fbld
adc
movsb
lea
sbb
movsl
icebp
divl
or
push
shlb
shrl
dec
and
fadds
xlat
sub
mov
rcrb
mov
lods
mov
loopne
gs
or
xchg
add
insb
mov
mov
sbb
lret
notb
inc
adc
dec
sbb
fcmovnbe
mov
dec
dec
inc
jl
sbb
in
js
sbb
push
sub
pop
jno
test
vphadduwd
xchg
xchg
or
fwait
mov
push
sbb
movsl
ds
pushf
pop
outsb
xchg
in
popa
bndstx
sbbb
pop
mov
movsb
movsb
xor
test
cmp
jl
mov
add
and
int3
adc
dec
call
shlb
arpl
jmp
xchg
sbbl
int
dec
insb
mov
or
and
fsts
aas
inc
fs
mov
fwait
xlat
lods
xchg
mov
inc
fs
lea
xchg
pusha
cwtl
or
adc
icebp
jle
icebp
mov
jbe
mov
lret
outsb
and
mov
movsb
ror
pop
xor
inc
je
cmp
sub
int3
lock
dec
adc
xchg
out
rol
out
dec
or
push
inc
sub
xchg
lods
adc
fmuls
mov
shl
mov
das
data16
outsl
and
add
dec
adc
pop
cmp
test
in
xor
in
lds
push
inc
jbe
mov
ret
mov
mov
scas
sbb
lret
lret
fmull
adc
adc
daa
shlb
push
ret
xor
nop
mov
mov
push
movsb
scas
sbb
insl
lds
mov
mov
das
mov
mov
push
insb
push
and
arpl
sbbb
dec
andb
pop
leave
or
repz
push
daa
inc
repnz
sub
aaa
popf
add
fldt
and
addr16
or
enter
sti
lcall
lret
es
rcll
sbb
jl
pop
push
sub
jae
mov
sti
inc
les
xchg
jecxz
sbb
push
fucomi
insl
add
mov
shrl
arpl
push
and
test
into
jl
inc
cmp
add
lret
pop
pop
mov
adc
fcmovne
push
inc
cmp
outsl
movsb
adc
pusha
xchg
in
or
leave
je
outsb
scas
leave
fisubl
push
xchg
mov
data16
cmpsb
ljmp
cmp
clc
push
dec
pop
pushf
or
lret
add
ss
in
les
mov
dec
push
lods
repnz
adc
inc
fisttps
pop
xchg
inc
es
jl
sub
imull
xor
cmp
int3
xor
lock
cmpsl
popa
ret
adc
xchg
push
xlat
outsl
or
mov
std
adc
fadds
add
in
bound
jle
sti
mov
and
hlt
les
jns
xchg
rcr
gs
daa
jae
sbb
inc
out
lods
aas
adc
and
mov
gs
fstpl
lds
sti
mov
es
add
inc
ds
bound
cli
adc
cmp
inc
inc
dec
pop
jno
mov
mov
adc
pop
scas
scas
loopne
sbb
mov
push
mov
jge
jae
and
enter
sahf
push
clc
sarb
and
movsl
sbb
and
mov
inc
pop
mov
jle
das
cmp
adc
dec
lcall
insb
mov
sbb
mov
test
jp
adc
cmp
pop
mov
movsb
fidivrl
les
mov
sar
ja
inc
test
push
mov
cs
or
int3
dec
xor
inc
and
sarl
jecxz
sahf
adc
dec
imul
adc
jecxz
stc
sti
scas
push
ret
aaa
xor
xor
leave
hlt
push
xlat
fisubrl
and
mov
pop
adc
fs
stos
pop
aad
movsb
sbb
dec
jno
popa
xchg
int3
lea
mov
cmp
pop
int
test
orb
push
dec
fildl
pusha
icebp
push
push
or
mov
loop
lods
and
jecxz
push
arpl
cmp
and
mov
inc
adc
clc
icebp
stos
and
add
cmp
scas
push
adc
adc
mov
add
xchg
cmp
cmc
mov
push
pop
add
lods
clc
jecxz
push
popf
les
or
inc
jp
scas
inc
loopne
stos
repnz
mov
nop
pop
es
push
imul
adc
push
in
ficoml
sbb
inc
and
in
push
rcrb
add
mov
das
lret
xor
or
dec
sarb
arpl
in
mov
and
xchg
sarl
push
enter
mull
cmp
mov
cltd
sub
mov
in
imull
in
orb
std
fistps
pop
ljmp
jo
xchg
mov
sub
stc
add
pop
mov
sub
adc
cmc
pushf
xor
out
call
jp
ret
ljmp
repz
sbb
sub
mov
pop
dec
aad
addr16
in
mov
lock
pusha
mov
sub
jo
sti
cld
cltd
or
aas
scas
int3
and
shrb
inc
aam
es
sub
inc
cmp
mov
bound
idivl
mov
push
push
add
fs
in
inc
sub
je
mul
inc
xchg
ret
mov
add
or
or
xchg
sarl
test
lods
inc
push
or
js
int
fisubrl
add
mov
outsb
scas
xchg
dec
mov
jp
data16
inc
fisubrl
inc
jg
orl
in
jmp
mov
push
mov
lock
xchg
fwait
inc
mov
stos
or
cwtl
insl
movsb
roll
dec
int3
pop
inc
insb
cli
lods
data16
mov
xchg
rcll
push
cltd
insl
xlat
jge
fidivs
or
das
out
pop
imul
adc
xor
mov
clc
fisubrs
jo
push
adc
loop
sbb
filds
dec
aaa
repz
adc
cld
sbb
sar
lds
outsb
mov
jo
inc
stc
adc
aaa
cwtl
xchg
lods
mov
movsb
dec
mov
xor
cld
pop
jno
aad
mull
add
fwait
test
rcr
rcll
dec
and
jge
xchg
lcall
mov
sbb
mov
or
mov
add
inc
enter
in
aad
lds
or
cmp
sub
repz
or
sub
cmp
fstl
loop
pop
popa
or
lock
fldt
ret
xor
dec
or
call
movsl
pop
mov
ficompl
add
orl
xchg
fmul
movsb
jae
cwtl
ss
jbe
xor
mov
pop
sbb
js
mov
imul
test
outsl
jnp
lock
push
add
cmc
xor
adc
mov
fists
sub
add
mov
inc
aam
cwtl
sub
inc
cmp
add
xor
fstl
lahf
add
fwait
out
adc
stos
mov
fbld
jns
jbe
or
push
xchg
jo
imul
sub
push
dec
adc
lret
cs
jnp
xchg
and
push
dec
sahf
and
mov
adc
lods
enter
add
add
adc
xor
dec
rcl
xor
jg
pop
pop
data16
ret
and
adcl
std
xlat
mov
xor
mov
mov
jle
pop
sbb
mov
and
push
inc
stc
or
mov
mov
xchg
shll
inc
inc
pop
inc
ffreep
inc
call
add
sbb
pop
jnp
fisttps
xor
push
push
cli
cmp
sub
xchg
push
shr
addb
push
jnp
pop
mov
outsl
inc
push
mov
add
sbb
jmp
cmp
jl
rorl
cld
pop
data16
push
adc
inc
xchg
stc
in
mov
or
dec
push
cmp
push
aam
jne
and
rcrb
je
jecxz
cmp
dec
cmp
lcall
mov
gs
clc
int3
frstor
push
test
subb
or
pop
or
iret
push
push
fsubs
cmp
lahf
jno
lds
dec
cltd
add
icebp
in
pop
xchg
cmp
jmp
sub
inc
adc
repnz
popf
pop
sbb
add
hlt
lods
push
imul
xor
jl
sbb
sbb
ljmp
pop
fbstp
add
push
xchg
cmp
jae
aam
or
popf
jno
insb
ror
xor
jb
mov
inc
mov
mov
arpl
jae
sub
push
pop
sbb
lods
mov
arpl
dec
inc
test
and
dec
imulb
mov
rorb
push
ficomps
dec
jle
loop
leave
pop
and
icebp
mov
cli
lea
mov
mov
or
ja
dec
pop
cmp
sub
cmpsl
cld
cltd
push
stos
sbb
xor
push
adc
test
inc
in
repz
flds
pop
adc
jbe
push
aad
test
sub
sub
pop
xchg
fidivrs
clc
popa
mov
push
inc
dec
shll
xor
out
call
outsb
mov
xchg
pop
jg
xchg
and
in
mov
xchg
popf
out
jnp
mov
aad
inc
xchg
fimull
shrl
data16
mov
push
cmp
add
mov
imull
pop
add
jnp
xor
fstpl
hlt
cmpsb
adc
mov
ja
js
psrad
xchg
stc
xchg
jns
xor
rcr
xchg
jmp
lahf
paddb
jo
cwtl
scas
inc
mov
fidivl
mov
push
mov
nop
sbb
lock
addb
cmp
jle
or
fs
cli
sti
push
subb
arpl
adcl
and
or
xor
xchg
pop
ja
js
loop
fs
ror
dec
movsl
test
mov
xchg
xchg
push
and
or
pop
lea
and
mov
mov
lcall
loope
lret
push
mov
cmc
sub
xchg
push
rorb
push
and
xchg
js
mov
stc
in
mov
or
lcall
pop
rcr
outsb
mov
or
xchg
gs
cmp
mov
add
inc
xchg
pop
call
cltd
orb
pushf
mov
jno
pusha
or
adc
sub
mov
dec
mov
addr16
adc
xchg
das
inc
mov
push
mov
mov
das
sub
adc
inc
sub
roll
je
inc
les
js
inc
rcrb
cmp
pop
xor
jne
cmp
rcrb
mov
scas
sarb
xor
inc
mov
adc
mov
mov
or
inc
adc
aaa
sbb
loop
fnstsw
test
shll
push
pusha
icebp
pop
out
scas
addr16
jno
jb
push
mov
iret
inc
test
xor
or
pop
pop
push
daa
rcl
repz
xlat
out
push
lock
out
push
lods
data16
lahf
adc
imul
insb
xlat
adc
inc
push
pop
lcall
wrmsr
cwtl
jmp
xchg
push
sub
es
scas
lcall
or
inc
inc
int3
es
adc
sbb
insb
sbb
inc
test
test
jns
lret
mov
fstpl
push
cmp
into
fadds
int
sbb
je
out
add
imul
cmp
dec
sbb
pop
mov
fdivrs
cltd
inc
jb
add
xchg
dec
add
xor
pushf
push
cmp
sub
dec
xor
push
and
push
push
test
in
sahf
sahf
mov
rcrb
pop
rorl
mov
jns
out
into
bound
imul
inc
ljmp
jbe
popf
mov
push
lahf
ss
ret
enter
or
xor
shr
es
cmc
hlt
or
push
sub
in
cmpsl
cli
mov
fisubl
jle
pop
mov
mov
cmp
fisttpl
push
pop
xchg
pop
fsubrl
jle
add
fbstp
clc
insl
js
sbb
das
xchg
inc
xor
dec
insl
pusha
je
xchg
dec
mov
adc
insl
imul
adc
mov
arpl
xchg
pusha
insb
out
dec
stc
xor
xchg
notb
xor
mov
decl
dec
out
out
add
and
movsb
inc
int
or
ljmp
mov
and
push
jo
mov
push
sbb
add
sti
fcoml
in
mov
icebp
push
int
into
outsb
mov
outsb
adc
mov
mov
mov
add
xor
cltd
rcrl
jo
cmp
imul
cmp
jo
lock
sub
mov
mov
xor
jp
inc
repnz
scas
inc
cmp
and
aad
stos
xlat
add
mov
cmpsb
inc
add
negl
das
inc
cmp
cltd
jo
hlt
xor
jae
es
es
aaa
mov
pop
xor
test
push
lret
fldcw
xchg
mov
dec
stos
js
js
fsubl
add
out
rorb
addr16
lods
push
popf
jnp
pop
in
push
xchg
bound
mov
or
mov
cli
xor
lods
mov
jg
or
xor
fldt
push
mov
jno
cs
add
inc
fstps
cmp
out
stc
pop
lcall
or
fmul
pop
int3
add
sti
dec
cmp
adc
sbb
push
movsl
js
aaa
cltd
in
or
lcallw
pop
mov
cwtl
sub
imul
cmp
xorb
scas
enter
ret
dec
pop
rcrl
mov
push
jmp
lahf
adc
out
pop
jo
aaa
iret
adc
arpl
outsl
xchg
adc
cwtl
pop
repz
jo
jp
fs
test
rorb
adc
rol
fistpl
out
mov
or
push
decl
mov
jns
daa
scas
xchg
test
les
cltd
xchg
test
call
out
ret
push
xchg
jns
imul
xchg
mov
sbb
xchg
sahf
push
shl
xor
or
pop
cmc
sub
lods
cmp
mov
sub
in
add
sub
stos
out
mov
cmpsl
xor
pop
push
popf
adc
movl
sarl
movsb
mov
or
sbb
push
js,pn
mov
sub
cmp
jg
inc
fsts
pop
cli
insb
movsl
xor
dec
sbb
sar
mov
sbb
insb
sbb
dec
repnz
ret
pop
in
out
fistpl
movsl
inc
insb
xchg
sub
out
jno
jne
out
ret
or
nop
ja
pop
jl
cmp
sbb
rcll
cmp
mov
repnz
shlb
pop
pop
jbe
jnp
inc
popa
out
push
mov
jg
in
sti
movsl
sub
mov
inc
or
push
and
stc
outsl
adc
xchg
cli
je
xor
inc
out
fmul
mov
mov
xor
push
not
lds
and
arpl
pop
jg
pop
es
insb
sti
lea
fimull
pop
mov
cmp
sahf
push
iret
daa
jne
pop
and
icebp
xor
mov
push
or
mov
imul
cmp
test
push
shlb
push
sar
mov
enter
sbb
stos
int
test
lcall
test
sbb
movsb
mul
lock
jnp
sub
add
jmp
mov
cmp
addb
sub
int
fiadds
xchg
pop
in
movq
inc
cmp
pop
out
dec
data16
arpl
or
cltd
mov
fiadds
or
add
xchg
jge
ficompl
lea
cmp
sub
popa
ficoml
arpl
mov
jg
inc
js
or
xchg
push
out
cmp
dec
xor
faddp
adc
lock
xor
jnp
push
imul
aam
out
sub
arpl
mov
sub
pop
iret
jo
test
jnp
aaa
or
fucom
dec
jbe
lret
fldenv
push
scas
sub
mov
mov
pop
dec
push
inc
lods
dec
lds
pop
fisubl
cmp
dec
cmpsb
gs
pop
aad
fs
nop
adc
fisubrs
in
flds
scas
daa
jge
mov
je
lods
jg
fwait
insl
fmull
in
adc
add
xorb
cmp
enter
div
outsb
rcl
aas
test
mov
repnz
movsb
pop
xchg
jle
adc
leave
mov
sub
scas
and
inc
test
cmpsb
jns
subl
imul
mov
sbb
mov
fcoms
jne
incb
add
hlt
xchg
out
cwtl
mov
sbb
fistpl
mov
test
lea
jge
pushf
xchg
sbb
adc
mov
scas
jecxz
shll
mov
cmp
movsb
inc
sti
fdivrs
stc
dec
xor
adc
ljmp
mov
add
int
mov
xor
cli
mov
push
inc
jnp
scas
xchg
lcall
or
push
mov
leave
sub
call
pushf
sub
cmp
out
das
pushf
in
jo
mov
push
inc
lea
mov
or
push
popa
push
ret
jno
jmp
loope
mov
sbb
lods
inc
add
push
aad
push
push
inc
mov
aaa
hlt
jo
lahf
test
out
je
inc
test
js
clc
mov
or
inc
dec
cmp
clc
sub
out
mov
inc
fstl
inc
fimuls
mulb
sbb
sti
inc
jbe
pop
repz
xchg
and
out
outsl
push
push
out
xorl
xchg
lret
mov
out
add
sahf
insl
jnp
sahf
cmp
stos
push
imul
mov
sbb
rolb
sbb
jns
lret
in
and
mov
mov
adc
lret
xchg
inc
aaa
jae
jnp
insl
mov
mov
dec
shl
inc
ljmp
cwtl
sbb
stos
gs
adc
adc
push
pop
incl
cmpsb
sub
leave
push
cmp
sub
es
mov
or
arpl
aas
sarl
mov
in
xor
dec
cwtl
and
add
inc
mov
jne
fmul
sbb
outsb
mov
push
adc
xchg
inc
mov
cli
in
cld
call
scas
dec
scas
movsb
ret
mov
loop
dec
mov
and
xor
pop
fldl
sub
push
js
test
movl
dec
repnz
sub
pop
jge
push
test
fcmovnb
push
loope
inc
cmp
imul
mov
mov
jns
enter
mov
out
jne
pop
aam
mov
dec
mov
push
nop
mov
jecxz
or
shlb
cmp
and
mov
jb
jb
rcll
xchg
mov
mov
bound
out
mov
mov
out
push
mov
mov
jae
in
fwait
fdivrp
out
popa
push
mov
add
es
cmc
dec
jmp
aaa
imul
dec
cmp
mov
pop
xchg
add
dec
stos
in
xor
pop
popf
dec
mov
rcr
mov
xchg
mov
int
aam
push
jle
dec
dec
lcall
lcall
repz
xchg
jo
or
sbb
es
test
aad
cltd
jle
fnstcw
xchg
push
test
xchg
pop
sbb
cmpsl
dec
loope
pop
mov
add
popf
and
jl
addr16
inc
add
mov
jmp
pop
sub
mov
xor
mov
lea
adc
dec
pop
push
std
xchg
cmp
dec
xchg
cmp
popa
or
popa
data16
lcall
gs
mov
pushf
fwait
push
sub
in
jl
sbb
dec
add
mov
ljmp
sbb
ret
decb
loopne
aam
mov
rcll
aad
call
push
lret
iret
sbb
stos
into
repz
adc
jmp
notb
and
int
fistpl
dec
push
dec
jmp
push
insb
mov
xchg
test
repz
xchg
or
rcrl
sub
add
fistpll
sbb
leave
or
mull
push
dec
or
mov
jmp
mov
mov
testb
lret
xchg
popw
cli
loop
push
test
out
cmp
cld
xor
subb
ds
cmpsl
mov
mov
test
shrl
xchg
aam
ss
push
jmp
xchg
out
les
inc
cmp
sbb
mov
in
gs
inc
lock
inc
xchg
push
mov
mov
subl
jb
jg
nop
sbb
ds
aad
jns
cmp
divb
add
sub
dec
adc
or
adc
ret
sub
adc
stos
loopne
or
add
scas
cli
neg
and
loope
mov
or
lea
pop
dec
xchg
mov
cmp
jae
and
push
fs
xchg
jns
jo
je
mov
fwait
xor
pop
pop
lret
and
ret
or
movsl
test
sub
dec
cmp
int
leave
orb
mov
movsl
xchg
dec
mov
dec
or
dec
lds
jb
loop
or
mov
fstps
scas
clc
lret
imul
push
cmp
negl
pop
popa
pop
sbb
les
xchg
lods
pop
add
testl
mov
and
mov
rorl
pop
popa
xchg
xchg
inc
sbb
sti
dec
testl
std
mov
mov
dec
in
push
and
cs
scas
inc
ret
dec
push
out
jle
jnp
dec
or
sub
pop
or
das
dec
mov
les
mov
nop
orl
push
mov
mov
lret
popf
ror
testl
insl
mov
cmp
inc
mov
lret
gs
pop
les
adc
fnstcw
xor
clc
cs
rol
jle
mov
repz
dec
popa
shlb
xchg
mov
jns
and
mov
mov
ja
sub
push
xchg
addl
popf
out
sbb
gs
xchg
push
xchg
mov
pop
or
inc
fidivrs
cwtl
mov
mov
enter
pop
lahf
decb
xchg
iret
rcr
cmpb
iret
js
dec
inc
out
cwtl
jo
xor
jl
xor
test
lret
add
inc
or
sar
xrelease
xchg
outsl
cmp
js
pusha
fdivl
mov
test
cmp
insl
or
notb
or
push
cli
or
push
jp
sbb
lock
xchg
jp
xchg
sbbl
xchg
jns
cmpsb
shr
sub
fdivl
out
cmp
jno
test
shlb
es
cmp
lods
shr
xor
or
or
xor
adc
dec
scas
fsubrl
adc
lds
mov
and
dec
xor
lods
aam
insb
rorb
iret
xor
fildll
nop
xchg
add
dec
or
jae
mov
cmp
pop
and
fnstsw
xor
pusha
mov
popl
fs
mov
nop
inc
mov
pop
or
inc
mov
test
shl
mov
jo
cmp
scas
xchg
in
pushf
mov
xchg
ret
inc
mov
xchg
sub
xlat
movsb
jge
add
adc
orl
mov
mov
mov
packssdw
das
clc
xchg
push
sbb
pop
pop
mov
dec
jmp
insl
lods
dec
lods
xor
jae
adc
mov
and
mov
cld
jo
aas
cmp
cmp
and
aas
pop
mov
sub
int3
pop
mov
sub
adc
out
mov
in
pop
push
mov
inc
insl
mov
push
push
jmp
or
jle
add
insl
out
pop
insb
aam
mov
mov
xor
jle
dec
xchg
and
cs
in
sbb
gs
mov
fwait
lret
push
out
call
addr16
inc
lock
addr16
jo
sub
out
fists
fstpt
arpl
cmp
xor
dec
sub
shrb
inc
mov
jle
std
andb
icebp
rclb
and
loop
fstl
mov
push
ret
rorl
or
sub
jbe
jno
mov
pushf
aam
leave
dec
dec
jns
pop
dec
and
popf
sub
add
test
repz
jg
xorl
and
fcmovnbe
repz
mov
rcrb
std
gs
push
and
ret
lcall
jl
cmp
loop
pop
add
pop
stc
dec
imul
rcr
popf
fs
jns
test
fs
cmp
mov
sti
mov
rorb
jne
dec
xor
lahf
enter
pop
neg
mov
sbb
out
les
movsl
mov
push
and
ret
outsl
gs
pusha
inc
fisttpl
in
iret
cmp
dec
and
xlat
les
aam
loope
dec
int
negb
and
dec
adc
imul
testb
dec
mov
imul
sbb
pusha
cmp
xchg
outsl
lahf
lret
shlb
lcall
pop
pop
and
sti
push
sbb
lahf
out
add
out
cmp
xchg
push
and
adc
test
fimull
into
negb
ds
call
movsl
cwtl
out
fs
aas
data16
orb
stos
popa
mov
xchg
cmp
push
jl
mov
jge
push
mov
dec
cmp
mov
popf
pop
inc
pop
ja
push
inc
mov
lahf
cltd
notb
push
or
andl
fnsave
jl
addr16
popf
les
ffree
stos
fisubrs
push
or
push
jecxz
pop
js
mov
add
pop
int3
test
loopne
push
lret
cmp
gs
xchg
mov
xor
dec
nop
in
popa
popa
or
test
xor
rorb
jl
mov
popa
gs
incb
frstor
mov
xor
mov
cli
push
or
xchg
mov
mov
pop
fldcw
andb
test
xchg
mov
dec
scas
sub
pop
add
xlat
sub
adc
pusha
lods
pop
pop
paddw
arpl
cs
or
dec
push
xchg
inc
jl
lahf
xor
int
mov
std
and
dec
mov
mov
lcall
repz
xor
lahf
inc
inc
imul
adc
pop
and
sbb
les
das
sbb
and
arpl
fstps
inc
xchg
scas
pop
mov
pop
pop
cltd
inc
mov
ss
mov
rolb
outsl
or
pop
insb
inc
arpl
mov
movzwl
or
mov
add
mov
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
xor
mov
xor
jmp
add
cld
sbb
nop
andb
push
sub
addl
inc
je
les
sahf
sbb
cmc
arpl
inc
pop
imul
xchg
mov
inc
mov
insl
xchg
or
mov
push
imul
movsl
aas
jb
flds
add
lock
inc
sub
in
divb
add
cwtl
lock
jns
in
push
or
sub
in
mov
xchg
or
push
or
sub
bound
add
dec
mov
outsb
popf
jg
into
inc
cmp
and
int
inc
xchg
sub
shrl
push
imul
adc
sbb
sub
xor
stos
push
popl
adc
call
inc
test
shlb
lahf
push
out
pop
cwtl
push
mov
and
mov
pushf
test
and
mov
out
test
lods
sbb
movsb
sbb
or
es
lods
iret
dec
xchg
divl
inc
xor
jp
dec
add
adc
mov
sahf
inc
inc
jp
push
sahf
pop
push
push
cmpsb
adc
xor
xchg
dec
lcall
lcall
jb
dec
inc
popfw
scas
movsb
mov
lahf
je
ret
cld
mov
shrl
leave
add
sub
xor
add
push
fidivrl
lret
jl
or
and
mov
scas
sub
std
inc
sub
mov
mov
xor
aaa
popa
cmpsl
ja
dec
cld
pop
adc
pop
xchg
cld
ds
mov
add
cmpsb
cmp
xlat
xchg
popa
jg
sbb
adc
fdivrs
mov
and
cs
sbb
inc
enter
cld
pop
out
xchg
cmp
and
in
es
orl
lds
popa
push
jl
stc
jle
lcall
test
add
fisttpl
or
pop
pop
lods
aas
inc
stos
pop
ror
loop
fisubl
cmp
dec
fsubs
mov
and
popa
add
cmp
decb
push
jno
pop
pop
fisttps
xor
add
ds
sub
mov
sbb
sahf
mov
aaa
shll
jp
je
in
cmp
push
push
mov
cld
pop
jmp
jne
pop
mov
sub
pop
mov
sti
in
fwait
pop
or
sbb
push
loop
stc
push
clc
out
cwtl
mov
sbb
insb
stc
sub
out
pop
icebp
ret
sahf
sti
pop
nop
xlat
bound
rcrb
mov
or
push
xchg
shl
out
mov
inc
mov
mov
xchg
sbb
cmp
insb
cmp
pop
nop
fbstp
inc
cmpsl
scas
cmp
bound
mov
imul
fstpt
call
or
add
in
xor
cld
out
lret
mov
fs
lea
pop
divl
sbb
mov
xorb
lds
dec
call
rcr
add
int3
mov
repz
xor
adc
inc
and
mov
cmp
cmp
xchg
xchg
rcll
jle
outsl
pop
mov
or
push
shll
sbb
aad
stos
dec
or
aad
cmp
movl
ds
imul
ret
xchg
das
mov
adc
jle
jnp
inc
lea
testl
cmc
mov
xor
push
sbb
dec
lcall
lds
inc
sbb
cmp
xchg
inc
sub
sbb
pop
andl
lods
xor
fcmovnb
push
mov
scas
rorb
add
jg
push
sub
mov
inc
fs
faddl
pop
mov
test
scas
mov
imul
pop
hlt
xchg
aas
lret
mov
lret
ljmp
add
lret
cmp
mov
jb
pop
mov
loopne
inc
cmp
xor
lods
imul
jle
les
stc
push
inc
shrl
push
jne
pop
cmpsb
add
ja
scas
ljmp
lcall
bound
scas
dec
into
outsb
rep
add
ss
jo
pushf
es
shlb
jbe
xor
or
icebp
gs
sub
mov
popf
or
cmp
pop
pop
js
push
es
xchg
sti
pop
jp
cltd
cvtps2pd
cmp
repnz
cs
movsb
dec
aad
subl
push
add
out
mov
push
shrb
pop
jnp
mov
ds
dec
fdivs
mov
xchg
filds
adc
inc
subl
mov
stos
jl
dec
push
lods
mov
imul
jnp
mov
add
xchg
pusha
stos
adc
pop
xor
clc
shlb
adc
add
xchg
rolb
in
lods
clc
push
std
push
and
mov
cmc
xchg
scas
add
loopne
sti
dec
loopne
rcll
push
daa
imul
push
and
or
push
aam
ret
shl
push
shll
mov
iret
lock
pop
xchg
jno
xchg
adc
movb
fisttpll
inc
js
pop
lcall
mov
out
repz
xchg
fimuls
mov
push
adc
and
rcll
mov
jnp
cmpsl
add
mov
or
xchg
mov
add
rcl
mov
pop
xchg
call
mov
cmp
add
jl
test
xchg
imul
jb
dec
mov
and
mov
cmp
js
inc
rolb
or
xchg
ret
stc
push
dec
mov
sub
cltd
cs
das
pop
mov
out
lea
outsb
mov
adc
into
mov
push
dec
inc
adc
cld
or
pop
dec
mov
mov
stos
lds
inc
or
push
push
cwtl
push
loopne
jg
push
out
mov
push
mov
dec
or
mov
pop
adc
inc
fstpl
es
cmc
aam
jbe
push
xchg
add
sbb
push
test
adc
and
outsl
arpl
push
enter
filds
pop
leave
mov
xor
je
push
shll
rclb
cwtl
or
dec
negl
jae
lret
outsl
cs
mov
adc
mov
inc
and
imul
sarb
mov
dec
pop
ficompl
mov
and
push
test
xor
sub
mov
insl
xor
je
std
dec
cwtl
das
andl
outsl
lock
leavew
ret
pusha
shr
adc
cmp
call
cmpb
lret
test
mov
inc
mov
out
xor
rcrl
clc
lods
mov
loop
repnz
loope
ljmp
dec
roll
aas
add
cmp
imul
call
lret
test
and
test
push
push
ja
dec
mov
mov
pop
lds
nop
cltd
mov
rcll
and
push
add
aad
pop
pushf
mov
sti
movl
and
hlt
pop
lahf
icebp
xchg
into
out
push
es
hlt
adc
cmp
es
dec
cwtl
jge
stos
cltd
pushf
push
mov
loope
btr
stos
fcmove
out
clc
jo
dec
cmp
xchg
fld
mov
lods
jb
sahf
iret
cmpsb
adc
int3
add
adc
fnstcw
sbb
xchg
xchg
xlat
cmp
addr16
cs
ret
push
mov
sub
inc
dec
repz
fisubl
or
adc
jmp
and
das
jbe
add
and
aaa
mov
mov
out
xchg
mov
imul
loope
xchg
insb
pause
cmp
or
in
add
adc
scas
sub
lock
dec
rorl
cmp
imul
shl
push
inc
cwtl
test
insb
stos
jp
mov
fs
dec
xchg
je
scas
pop
push
rorl
aad
rorb
frstor
cmp
inc
and
mov
idivl
add
xchg
pop
dec
jnp
mov
notl
test
aad
xor
mov
orl
xor
xor
fdiv
lods
dec
jl
mov
lods
adc
sub
movsb
xchg
adc
out
cmp
xchg
lea
xchg
mov
ret
dec
popl
ds
bound
cld
dec
iret
repnz
xchg
or
push
rorl
out
cmpsb
sub
sarb
xchg
aam
xchg
fisttps
or
xor
xchg
dec
idiv
aam
pop
mov
leave
fsts
sbb
add
scas
push
out
push
rclb
and
dec
mov
loope
inc
add
ret
pop
inc
daa
nop
shrl
or
or
push
insb
pop
out
pop
jp
popl
mov
push
and
paddusb
pop
xchg
stc
fists
mov
lahf
or
adc
mov
fdivrl
add
leave
in
loop
xor
xor
add
je
jecxz
jle
clc
js
mov
rorb
aaa
push
pmulhuw
jo
gs
fbld
mov
sarb
scas
neg
xor
call
fdivs
mov
leave
xor
in
dec
pop
xchg
les
pop
adc
pop
adc
sbb
ljmp
mov
fnstenv
and
hlt
out
pop
jg
mov
push
or
pop
mov
adc
sbb
repnz
lds
faddl
mov
stos
push
scas
dec
jecxz
push
insb
adc
add
dec
add
loope
add
dec
pushf
xchg
in
jae
loop
pop
and
loope
push
add
test
jmp
movsb
sbb
jl
lock
ret
mov
int3
loopne
shl
test
pop
ret
dec
mov
xchg
mov
push
outsl
adc
sbb
push
outsb
hlt
lods
int3
cltd
push
je
iret
sub
and
imul
sti
dec
jmp
enter
mov
daa
bound
sub
mov
mov
out
pop
inc
pusha
imulb
jae
xchg
arpl
ret
jecxz
outsb
sbb
or
int3
cmp
mov
ds
push
rdtsc
stos
and
pushf
mov
loopne
mov
mov
or
pop
cmp
sahf
out
test
cmp
loope
mov
inc
or
inc
movsl
in
hlt
je
cmp
inc
outsb
mov
ret
repnz
cmp
xor
jp
adc
ret
enter
or
and
push
or
cmc
push
mov
scas
rorl
jns
inc
fs
aad
adc
sbb
insb
aaa
mov
aad
hlt
dec
stos
outsl
mov
adc
jne
clc
rol
cli
repz
aad
adcb
inc
jmp
shrb
iret
repnz
lret
aam
movsl
xchg
movsl
call
dec
pop
sarb
cmp
jns
out
cmp
rcrl
pusha
mov
dec
sub
jmp
push
pop
testl
movsl
jl,pt
or
loopne
imul
cmc
jl
fwait
out
push
or
orb
cmpsl
pop
stc
or
dec
add
push
pop
fs
xchg
pop
scas
pop
dec
out
bound
popf
fldt
cmp
gs
fbstp
pop
xor
negl
lcall
mov
roll
push
jmp
jo
dec
mov
add
hlt
sahf
idivl
loope
subb
xchg
pop
stc
cmpsl
mov
adc
lods
sbb
xchg
cmpl
or
fstl
adc
cmp
sbb
cmp
add
push
hlt
lret
sbb
push
ficoml
fs
cmpsl
in
mov
lahf
push
lahf
ss
leave
adc
xchg
mov
in
in
add
jns
in
mov
mov
lret
shlb
dec
scas
xchg
xchg
xchg
and
in
and
clc
xlat
jo
push
stos
inc
pop
loope
in
rcl
test
xor
fcoml
popf
pop
pop
pop
xchg
push
shrl
cli
xor
cmp
outsb
jbe
push
inc
cmp
pop
push
xchg
cmp
mov
push
xor
mov
and
daa
std
pop
fistps
cmp
xchg
xor
fistps
orl
les
pushf
cmp
inc
xor
in
mov
sbb
cmp
inc
insb
jle
rorl
addb
sti
imul
adc
filds
cmc
sbb
icebp
mov
hlt
sbb
add
push
lods
jg
loopne
sub
dec
sbb
xchg
mov
inc
pop
xchg
lods
ret
jns
lods
int3
int
dec
pushf
sti
cli
ror
in
fldcw
mov
movsb
shlb
std
xchg
sub
sbb
aam
mov
dec
sbb
fwait
out
xor
ja
ljmp
mov
dec
stos
jnp
push
scas
insl
in
push
xor
test
mov
pop
and
jns
lcall
mov
sub
mov
lods
jae
loopne
out
mov
call
jl
cli
xor
out
outsb
cwtl
je
stos
aad
and
nop
fdivrl
gs
xor
addl
jg
cmc
pop
cmp
fs
loopne
fiaddl
fidivrs
xchg
jg
jl
stos
dec
jmp
in
lahf
mov
cli
std
js
imul
jb
mov
mov
lcall
clc
adcl
xchg
repz
mov
out
xchg
xorb
fucomip
cmpsl
rorl
out
pop
notb
mov
or
cmp
mov
fnsave
cld
clc
push
jle
loop
punpcklbw
shrb
test
bt
add
outsl
daa
and
and
dec
ss
mov
scas
push
xorb
cmpsb
add
out
pop
inc
mov
mov
int
mov
adc
mov
out
and
lahf
fistpl
xchg
mov
mov
cmc
roll
lahf
lds
mov
jbe
stc
sti
aaa
sub
add
mov
push
xlat
dec
sub
push
lret
vmread
jge
push
inc
dec
repz
paddusw
jbe
jl
sti
lcall
leave
push
and
lods
dec
loope
add
fisubrs
inc
xor
sbb
pop
dec
out
pop
sahf
lcall
inc
push
inc
in
lcall
pop
test
and
cmpsl
cmp
inc
cwtl
jmp
cmp
es
or
dec
call
add
std
push
xchg
fildll
cs
fmull
mov
and
adc
out
inc
sub
mov
mov
jp
subl
push
jp
shll
ret
xchg
push
add
pop
or
push
out
inc
arpl
xchg
out
ja
and
pop
mov
xor
sti
add
test
dec
std
pop
shr
out
push
xchg
adc
addr16
inc
inc
and
dec
mov
mov
mov
mov
sub
mov
das
fimull
in
xchg
rclb
xor
lahf
fs
fwait
loope
stos
pop
subb
adc
fisttpl
aas
and
jbe
roll
adc
xor
icebp
ja
iret
jge
stos
arpl
adc
inc
pop
out
sub
les
int
in
dec
daa
pushw
int3
adc
push
adc
pop
push
sub
sahf
fnstsw
pop
and
push
je
cmpsb
hlt
sbbl
pop
mov
leave
repnz
call
ficoms
arpl
test
das
and
sub
out
xchg
sub
xor
mov
add
cmpsb
mov
stos
mov
outsl
inc
push
outsl
js
jnp
push
cmc
mov
pop
insb
inc
lods
sahf
dec
ljmp
shl
or
jge
popl
add
mov
jo
gs
imul
mov
add
stc
jecxz
add
mov
add
scas
ja
cmpsb
fistpl
insl
xchg
jp
mov
in
lea
call
push
lock
mov
push
sub
sub
xchg
rol
adc
loopne
adc
push
mov
adc
adc
mov
pop
pop
jns
aam
push
movsl
push
into
inc
test
aaa
jnp
or
sbb
mov
inc
aas
movsl
adc
icebp
sub
mov
imul
clc
imul
aam
nop
lea
ss
aaa
shll
enter
and
insl
dec
push
inc
pop
fldl
fwait
out
std
fsubrs
mov
pop
shl
sbb
scas
loop
and
lret
add
in
insl
inc
inc
inc
push
dec
nop
ja
ljmp
and
add
test
dec
movl
xorl
sbb
subb
stos
std
shll
shrb
add
cmp
sbb
and
lahf
xchg
mov
dec
adc
stos
rcrb
cmp
fs
shr
lds
dec
inc
push
and
inc
cmpsb
fs
pop
cmp
aas
scas
ljmp
sahf
aaa
or
sub
out
mov
cwtl
ret
push
aas
push
push
xchg
push
inc
rorb
fbstp
jl
push
xor
fwait
add
xchg
add
jl
or
fistl
lods
mov
cmp
popa
push
xchg
cs
loope
cmc
dec
lods
inc
sbb
pop
pusha
in
mov
adc
mov
int3
aas
loop
jle
jbe
ja
dec
or
adc
fcoms
cmp
pop
out
dec
inc
mov
jmp
mov
xchg
jae
inc
repz
popa
and
jbe
fnstcw
out
mov
push
or
jle
sub
mov
push
mov
scas
inc
mov
mov
and
out
ret
xchg
or
and
xadd
or
shl
xchg
movq
fldl
sbb
repz
jle
push
sahf
aam
pop
scas
jge
addl
sarl
cmp
adc
sub
cmp
xchg
adc
xlat
add
in
nop
or
es
xor
sbb
clc
mov
jmp
ret
cmp
xchg
jp
mov
bound
sub
lret
xchg
dec
fstl
shll
cs
shrb
aas
cmpsl
rcrl
mov
outsb
adc
pop
sbb
nop
cmp
loopne
and
daa
xchg
jecxz
pop
orl
sbb
xchg
gs
sub
cmp
mov
sub
and
inc
xor
fwait
sub
arpl
bound
mov
in
sub
push
or
sahf
scas
or
jle
jae
nop
push
sub
adc
sub
push
loopne
rcr
dec
xchg
push
jbe
mov
push
mov
fbld
lahf
shl
addr16
mov
fmuls
jmp
ja
int3
cmp
cli
push
data16
push
fsubl
jb
fcomp
fldl
stos
add
test
sbb
in
hlt
rorl
aam
lods
adc
subl
fsubl
gs
cmp
inc
inc
lea
jb
lock
lock
mov
cli
pop
push
and
cld
cmp
ds
lock
es
or
inc
xor
pop
and
daa
cmp
arpl
imul
out
roll
push
pop
out
imul
lret
lahf
add
imul
or
cld
bound
or
push
sub
jp
nop
and
sahf
push
ja
rol
mov
je
push
mov
insl
lods
in
decb
inc
arpl
mov
jae
or
jmp
jbe
popa
fwait
cmp
in
sub
sti
and
push
cmpsl
mov
outsb
and
jo
adc
test
aaa
adc
jne,pn
xlat
sbb
movsb
add
mov
std
test
xor
in
lcall
testl
jno
out
lcall
xchg
arpl
xchg
pop
loopne
xchg
push
inc
inc
dec
es
nop
fstl
imulb
or
pop
aas
push
xor
xor
fwait
lods
mov
push
in
fidivrl
mov
int3
cmp
pop
rcll
jns
add
jb
loop
push
sub
std
out
sbb
push
jb
and
pop
xchg
pusha
inc
xor
mov
sbb
lea
stos
repnz
and
add
lds
mov
movsb
jg
in
cs
or
jo
out
and
hlt
pop
filds
cli
stc
push
in
and
add
jns
imul
dec
dec
and
jnp
mov
lret
ja
pop
out
adc
push
sbb
pop
mov
jp
fmull
aaa
xor
inc
push
cmc
jge
push
jno
mov
aas
cmc
lcall
and
mov
data16
xor
xchg
pop
dec
out
adc
cmpsl
int3
sub
xor
lahf
mov
enter
push
ud2
out
and
popf
or
push
clc
sti
jmp
and
std
sahf
sbb
bound
pop
and
xor
jae
in
or
mov
repz
sbb
jl
ret
jb
es
daa
mov
xchg
or
or
int3
and
imul
outsl
jmp
dec
mov
arpl
in
test
test
ljmp
xlat
repz
popa
push
mov
aas
scas
mov
push
add
jge
adc
lret
js
mov
sub
leave
dec
and
ds
cmp
inc
mov
push
or
fmuls
sbb
or
push
cld
xchg
bound
insb
xchg
mov
add
fcomp
cmp
push
ljmp
adc
int3
lock
fildll
ret
inc
bound
jecxz
mov
iret
outsb
xchg
icebp
jae
and
sti
cmpsl
inc
cmp
xchg
sqrtps
fbstp
xorb
inc
std
pop
or
pusha
fisubl
ds
mov
adc
imul
push
push
mov
sbb
std
stc
xchg
mov
popa
xchg
stos
mov
arpl
jmp
cli
sub
lea
test
mov
mov
scas
out
xchg
aad
call
jge
xor
out
mov
test
lahf
jnp
pop
in
jae
lahf
pop
sbb
or
pop
and
dec
inc
int3
jp
dec
outsl
std
jmp
push
inc
inc
mov
xor
push
inc
sub
into
repnz
or
lods
mov
ficompl
and
test
int3
lcall
xchg
mov
ds
mov
mov
mov
fidivrs
or
mov
sti
mov
js
int3
call
xchg
fisubl
dec
sarl
inc
cmpb
add
mov
mov
mov
popa
cmpsb
aaa
cmp
jne
add
cs
es
push
cmp
lret
jae
lret
cmp
fwait
mov
xlat
sbb
adc
push
lahf
jmp
pop
lods
ss
je
mov
sti
cmp
jo
mov
xchg
adc
cltd
and
sub
fimull
lock
mov
je
repnz
xchg
daa
jmp
shl
outsb
mov
movsb
in
mov
adc
pop
fisubl
test
sbb
ret
and
inc
push
lods
mov
cwtl
sti
pop
cli
sbb
push
jae
xor
outsb
dec
and
iret
lock
mov
xchg
stc
mov
bound
rolb
jp
push
sahf
xchg
lds
push
in
lods
cwtl
mov
jns
xor
ljmp
push
add
cmp
and
lret
xor
cmp
fdivl
out
jg
jns
enter
dec
cli
sbb
movntps
pop
xor
enter
xor
adc
and
shrb
dec
add
sub
sub
gs
enter
mov
inc
test
data16
pop
sbbb
iret
and
popf
pop
sub
lahf
test
popf
pop
pop
mov
clc
sbb
xor
mov
ds
add
movsb
aam
fucomp
push
sub
test
cmp
test
inc
jbe
sbb
jl
mov
jns
mov
jb
adc
popf
dec
in
add
mov
or
jnp,pt
lret
ljmp
in
cwtl
jg
pop
lock
into
ror
cmp
lock
inc
adc
gs
les
cmpsb
jo
popa
push
fs
sti
data16
pusha
dec
fwait
inc
arpl
aad
push
shlb
sbb
push
mov
mov
icebp
ss
jge
jbe
mov
pop
out
push
nop
fildl
insl
pop
xchg
sub
mov
loop
imulb
pop
decb
jmp
push
dec
stc
push
mov
xchg
sub
in
and
sub
scas
sbb
jo
inc
xchg
mov
mul
nop
xor
dec
dec
shrl
je
cmp
pop
push
push
lahf
mov
and
stos
testl
rorb
jp
imulb
add
cltd
push
in
int3
xchg
dec
and
jl
jbe
cmp
fwait
test
adc
mov
push
sbbl
push
sahf
cmpsl
rcrl
and
movsb
insl
mov
sti
sbb
push
sub
mov
lock
mov
jmp
stos
test
loope
push
and
and
insb
cltd
rcrb
int3
jg
fwait
cwtl
roll
add
daa
fstp
cmp
xchg
mov
or
sar
mov
inc
outsb
pop
ret
out
fld
mov
movsl
lods
dec
cmp
inc
jae
fildll
daa
cmp
shrb
or
cmc
lcall
jecxz
jbe
insb
stos
ds
add
ljmp
sbb
push
imul
rcl
clc
cmp
out
mov
or
imulb
or
pop
cs
scas
aad
ss
mov
jb
divl
push
cmp
push
push
inc
push
jo
fistpll
rorb
sbb
out
push
subl
mov
out
jb
or
pop
add
mov
cltd
xor
rcl
sub
pushf
ficoms
add
in
mov
int3
cmc
inc
icebp
inc
lds
or
fwait
in
lods
jb
xor
in
xor
iret
and
ljmp
and
push
mov
sub
loop
lcall
pop
aam
into
ljmp
arpl
int
add
outsb
std
cmp
arpl
shr
mov
mov
add
clc
rclb
mov
iret
ss
jbe
loopne
inc
fmuls
mov
mov
add
out
fdivs
fnsave
and
add
lret
pop
in
lgs
aaa
ret
xchg
pop
xchg
jo
test
roll
sti
adcb
pop
and
and
mov
cmc
ficoms
or
fwait
jne
mov
xchg
xor
and
imul
sbb
mov
pop
mov
fnsave
outsl
add
popa
push
lcall
or
and
add
shll
shlb
and
pop
sti
je
mov
push
mov
fiaddl
gs
cs
ss
inc
jae
fdivrs
int
inc
cmp
add
cmp
lds
stc
mov
aad
jle
mov
lcall
add
fadds
sub
shll
scas
cld
add
lock
std
or
les
aas
fadds
add
mov
mov
or
bound
icebp
out
mov
sub
sarb
mov
adc
js
fcom
inc
sbb
mov
shll
xor
rcrb
add
pusha
mov
stc
cmpsb
sarl
sub
jecxz
or
push
cmc
ja
stos
dec
or
sbb
dec
mov
xor
cli
clc
cwtl
sbb
jge
insl
xlat
js
testb
ja
popa
push
fiadds
jne
jae
inc
popf
adc
xchg
lcall
call
aad
aad
sub
int
pop
push
cld
adc
push
sub
cli
into
cmp
inc
cld
dec
mov
cmpsl
push
jl
and
mov
test
cmpsb
pusha
fstl
inc
inc
lcall
cmpsb
push
add
push
push
iret
addr16
dec
out
and
xchg
dec
insl
dec
lahf
pop
insb
sbb
mov
lock
rcrb
push
inc
add
mov
inc
jbe
lods
gs
movsb
or
pop
xchg
xor
jmp
xchg
cmpsl
cld
enter
or
in
fcomp
push
loop
xor
popl
popf
aaa
xor
imul
pop
movsb
aas
sub
gs
adc
fwait
xchg
movsl
jnp
test
add
sbb
out
pop
es
dec
adc
stos
sti
xchg
pop
jmp
test
push
dec
movsl
ret
cmp
mov
cmp
lds
jnp
push
scas
aad
mov
xorl
or
popf
pop
jae
outsl
frstor
addl
cmp
jle
jl
ss
and
adc
imul
repz
pmulhuw
nop
test
jno
sbb
dec
jmp
xchg
mov
je
loop
sbb
lods
jb
cmp
sub
sbb
aas
cmpsl
or
lods
xor
iret
pop
pop
dec
mov
fnstsw
jbe
scas
mov
rcr
xchg
xlat
enter
loop
jp
sub
add
mov
jne
mov
rcr
lretw
sbb
push
test
mov
testb
pop
scas
icebp
loop
mov
xchg
mov
jge
sbb
add
rol
ss
and
jg
push
in
cmp
rolb
mov
push
xchg
push
into
lcall
dec
arpl
fidivs
xchg
jg
xchg
pop
movsl
fwait
cwtl
sbb
pushf
jge
in
imul
fldenv
pushf
add
jo
sbb
out
ss
push
cmpsl
jns
push
jp
into
mov
mov
adc
fldl
inc
sbb
inc
mov
pop
fdivr
pop
sub
aam
and
and
addr16
push
out
jg
cli
sub
mov
jo
and
in
or
pop
xchg
cli
loope
std
sbb
jbe
in
inc
imul
insl
std
mov
mov
mov
repz
xchg
add
mov
sbb
mov
daa
add
mov
dec
cmpsl
test
popf
sub
fwait
aaa
mov
out
aas
xor
frstor
scas
int3
or
test
push
jle
sbb
add
mov
add
dec
push
repz
push
and
mov
cld
xor
inc
and
xchg
std
insl
or
push
aad
adc
je
mov
mov
and
pop
dec
mov
fiaddl
fwait
loopne
fimuls
fistl
jmp
gs
mov
inc
call
arpl
push
cld
add
mov
daa
xchg
out
push
ficoml
negb
xor
jl
fnstcw
int3
orl
test
add
add
and
add
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
jmp
add
mov
hlt
aas
push
xor
addl
xchg
out
mov
mov
push
mov
adc
push
mov
xor
cs
test
lock
out
adc
xlat
popf
stos
int3
test
cmpsb
pop
sbbl
inc
jnp
sub
sbb
adc
loopne
push
or
aaa
or
outsb
inc
imul
dec
andb
arpl
xlat
adc
push
pop
ljmp
xor
dec
pushf
pop
scas
mov
jmp
jmp
les
call
inc
js
push
shr
mov
or
movntq
hlt
scas
or
std
dec
mov
mov
int
or
ljmp
pop
pop
mov
fs
out
aaa
xchg
and
push
daa
outsb
xchg
insb
pusha
cmp
loope
fsqrt
jae
cmc
push
mov
das
cmc
imul
or
int3
pop
mov
bound
mov
iret
sub
into
repz
data16
pushf
sahf
push
lods
push
adc
cmp
jg
in
jnp
cmp
sub
jg
ret
sti
sub
test
into
adc
pop
arpl
inc
test
mov
jle
xchg
imul
les
add
sbb
aad
adc
xchg
and
popf
addl
in
lahf
fldcw
mov
or
cmp
pop
sbb
mov
ljmp
imull
decb
movsb
ret
rcll
lods
mov
mov
lods
and
daa
xchg
jb
cmpsl
and
dec
insl
ds
lds
icebp
adc
les
mov
dec
and
mov
test
and
dec
xor
je
sub
pop
mov
addb
xchg
mov
ret
mov
pop
repz
mov
cmpsl
out
xchg
imul
cmp
inc
cmpsb
pandn
cs
cmp
out
jg
rcl
adc
and
jge
xor
pop
mov
lret
xor
dec
xchg
repnz
pop
lods
stc
push
dec
es
in
popa
mov
insl
roll
push
xor
mov
out
int
rorl
std
lods
test
adc
pop
sbb
fisttpl
dec
pop
mov
mov
mov
jbe
roll
out
lods
xlat
and
iret
jle
mov
repz
inc
shlb
jo
cmp
in
aad
mov
pop
or
add
sarb
jmp
das
dec
xchg
cld
cmpsb
movsl
insl
int
gs
add
jp
in
cmp
cmp
addr16
ret
inc
jmp
fistpll
xor
jne
int3
jo
lea
loop
jae
inc
lea
push
sub
les
sub
mov
inc
rcrb
mov
into
rorb
cmpsl
xchg
add
adc
jle
mov
ss
jg
jns
ds
fidivl
push
clc
fdivr
or
inc
cmc
pop
mov
test
xchg
push
ret
jnp
jl
repz
or
popa
push
stos
into
jbe
scas
dec
pop
mov
xchg
int3
arpl
mov
shl
xchg
cwtl
mov
adc
sub
mov
daa
push
mov
ljmp
jle
add
cmpsl
xchg
divb
jle
fldenv
cmp
loope
mov
sbb
hlt
lock
cli
ret
jge
scas
sub
pop
stos
jl
sbbl
mov
pop
sub
test
add
std
jmp
int
jmp
cmp
pop
cmp
mov
sbb
add
repz
pop
hlt
mov
mov
and
sbb
btc
cmp
into
inc
dec
mov
out
lahf
popf
adc
das
pop
test
aas
repnz
adc
pop
dec
test
cmp
dec
call
add
add
in
shrl
mov
les
fdivp
mov
inc
incb
jns
scas
dec
xchg
aaa
pop
mov
dec
clc
test
stos
xchg
imul
mov
popa
adc
push
test
fidivrl
je
insl
stos
xchg
push
and
test
sbb
pop
jno
sub
xchg
flds
pop
pop
pop
repnz
push
jmp
in
sbb
mov
sub
je
ja
jns
movsl
jle
xor
ror
sub
and
adc
fidivrl
xchg
js,pn
mov
notl
push
cld
arpl
daa
jnp
jae
rclb
adcl
push
add
jg
lcall
push
sub
sar
inc
lcall
adc
push
inc
xchg
cs
sahf
lods
jb
jae
inc
sub
aaa
inc
enter
fninit
mov
xlat
lret
dec
fcmovnbe
xor
cmp
push
jge
loop
lret
imul
inc
ja
xor
adc
test
jbe
popa
movsl
cmp
cwtl
jne
lock
loop
dec
jne
pop
sarl
jne
push
es
fisttps
push
pop
push
filds
test
jno
adc
fidivs
outsb
pusha
repz
das
cs
pop
leave
fwait
ds
stos
addl
adc
pop
jmp
inc
jmp
mov
stos
push
addr16
pop
fnstcw
aas
mov
imulb
shl
mov
pushf
jae
push
aad
mov
rcll
push
daa
cmp
insl
push
ret
jne
push
and
aas
aad
shr
int3
pop
hlt
lret
cmp
std
mov
xchg
adc
cmp
xchg
lcall
sbb
sub
repnz
jne
push
mov
jo
mov
fstl
jo
jno
jp
mov
mov
dec
xor
sub
mov
inc
int3
loope
into
cmp
xor
rclb
mov
iret
data16
cmp
pop
sub
and
or
leave
push
xchg
and
mov
shlb
sub
lds
iret
shll
hlt
sub
loope
inc
aam
movsb
mov
and
push
into
mov
les
add
fwait
ljmp
shlb
cmp
out
or
cwtl
inc
popa
loop
stos
adc
fucomp
adc
mov
scas
mov
enter
enter
pop
mov
sbb
out
pop
mov
jecxz
cmp
ret
jle
xchg
out
mov
sub
sahf
out
sbb
rolb
mulb
nop
shll
jle
addr16
jnp
loop,pt
and
add
jo
adc
cmp
xchg
pop
loopne
pop
int
call
xorl
push
jle
sub
orb
aam
bound
lret
mov
sbb
out
pop
rolb
out
pushl
mov
xor
fisubrs
insl
inc
push
cwtl
pop
inc
push
jno
sub
or
push
mov
xor
lods
jnp
rorb
mov
das
cmp
dec
js
rcrb
and
std
test
shr
cmp
sbb
rcrl
cmp
inc
sbb
adc
mov
sub
arpl
xchg
pop
xor
in
shl
mov
xor
sbb
inc
add
ret
push
dec
or
loopne
jbe
push
inc
jne
xor
mov
aam
and
popf
jo
mov
lock
mov
mov
inc
insl
mov
cmpsl
add
jne
inc
jmp
shrb
and
or
xchg
pusha
inc
mov
push
mov
mov
cmp
push
ja
mov
jmp
arpl
lds
lcall
test
and
mov
icebp
inc
fstl
cmp
aas
scas
insl
ret
push
fisubrs
ja
mov
dec
mov
das
dec
test
fs
adc
inc
ret
and
mov
lods
imul
shlb
inc
pop
pushf
mov
sub
pushf
xchg
stos
xchg
sbb
loopne
int
sub
jo
or
int3
mov
sub
cmp
lods
out
lds
xchg
mov
faddl
movsb
sub
push
popa
xchg
mov
jb
ljmp
mov
and
test
inc
or
call
cs
jge
ljmp
cltd
fstpl
cmp
lods
add
adc
jle
fs
jo
fsubrp
cltd
dec
adc
negl
cwtl
mov
repz
enter
jo
andb
jg
mov
loop
fcoml
cmp
cmp
mov
adc
mov
pop
cmp
testb
into
mov
push
cmp
push
sarl
mov
popa
sahf
mov
out
ljmp
mov
insl
pop
add
int
repnz
and
push
or
cmp
in
cltd
testl
sbb
dec
bound
push
pushf
mov
cs
enter
mov
leave
add
aad
pop
xorl
xchg
lods
ret
and
pop
and
loop
adc
push
pop
nop
jl
jb
imul
out
xchg
xor
xor
push
andl
mov
dec
mov
movsb
cli
xchg
sbb
cmpsl
push
sbb
aad
test
dec
or
cmc
push
inc
mov
shr
sahf
jp
jp
insb
cltd
push
push
outsb
mov
pop
dec
shll
nop
aad
pusha
stos
pop
frstor
pop
aas
add
sbb
xchg
inc
into
push
cmp
mov
das
cli
mov
cltd
in
push
loope
cmpsb
cltd
sub
sti
decl
ja
shrl
cmc
daa
cli
xor
mov
mov
xchg
or
push
aam
sub
dec
insl
cmpb
xor
xchg
and
popf
lea
jb
and
clc
or
or
dec
movsl
push
into
shlb
test
inc
push
lods
jnp
lahf
mulb
mov
dec
mov
push
pop
adc
jge
jne
lock
sub
and
push
push
xchg
push
arpl
and
outsb
lret
pop
inc
inc
jb
rorb
xchg
sbb
cmp
jb
cmp
popf
scas
jle
push
data16
and
inc
pop
cltd
lods
outsb
addl
mov
leave
nop
mov
daa
in
jb
dec
lret
inc
add
xchg
or
jns
jecxz
push
mov
fimull
cwtl
and
js
adc
sbbb
mov
mov
xor
test
xchg
xor
adc
movsl
andb
jae
sub
push
xor
mov
mov
clc
mov
fstpl
mov
jg
in
outsl
data16
repz
mov
add
das
int3
or
aas
setp
push
out
sub
cltd
push
and
into
jp
add
pushf
js
mov
cmpsl
ficoml
mov
pop
les
js
adc
lds
sub
js
lds
cmpsb
and
cltd
lods
lret
xor
iret
out
rclb
xchg
leave
cld
dec
mov
push
movsb
pop
aad
mov
inc
mov
sarl
xchg
adc
xchg
xchg
divl
out
sub
push
cmc
pop
sbb
repz
xrelease
je
insl
loop
add
jmp
pop
xorb
xlat
jo
aad
mov
pop
adc
shll
xchg
frstor
push
arpl
push
mov
scas
sahf
sti
pop
add
xchg
pusha
call
ds
cld
pushf
cmp
sbb
xchg
cmc
imul
orb
cmpsb
jp
les
daa
xlat
xor
aad
mov
fwait
cmp
movsl
add
test
mov
mov
xchg
pop
ja
jle
out
mov
push
xor
test
pusha
imul
add
jecxz
push
mov
cmc
xlat
jp
fdivl
cs
push
xor
data16
pop
sbb
add
cmp
mov
xor
inc
fstpt
test
or
jns
mov
mov
cmc
lods
stc
adc
pop
pop
test
push
xchg
or
xchg
add
ds
int
and
fstpt
mov
cmpsb
popa
mov
and
je
xchg
mov
ret
stc
pop
jo
clc
adc
inc
xchg
cwtl
stos
out
xor
aam
lods
scas
lcall
pop
stos
mov
cmp
mov
mov
in
adc
and
push
adc
fcomps
push
filds
pop
cli
dec
inc
jbe
xchg
jbe
and
or
sbb
xor
xchg
adc
stc
subl
cli
loope
mov
cwtl
adc
bnd
stos
adc
sub
in
push
fsts
nop
rcrl
push
inc
or
cli
add
arpl
insl
sub
mov
je,pt
cmpsb
or
sbbl
imul
popf
inc
push
aad
ljmp
sahf
out
mov
lahf
idivl
push
in
cltd
cmpsb
jb
out
jg
jbe
clc
xchg
cmpsb
dec
mov
xor
add
out
addl
push
inc
lret
add
inc
test
stos
cmp
rcl
mov
mov
push
jbe
and
xchg
mov
sbb
jb
mov
xchg
push
adc
int
inc
pop
dec
sbb
jnp
lods
jle
loopne
mov
xchg
pop
mov
out
and
orl
js
push
push
mov
cmpsb
mov
lcall
mov
pushf
or
cmc
jnp
sub
dec
mov
mov
xchg
sub
push
pop
sbb
rcrb
mov
mov
shr
loope
mov
clc
and
cmpsb
ljmp
shlb
push
dec
mov
in
or
pop
repz
jnp
jo
data16
jp
xchg
cmp
mov
pop
adc
cltd
cmp
in
cmp
sbb
add
jge
push
fisttps
loop
mov
sbb
shlb
cltd
aas
jp
push
fcoml
addr16
ret
fsub
push
in
pop
les
sub
movsl
scas
ret
jp
cmp
adc
jl
push
mov
mov
inc
mov
ss
inc
cmp
add
jg
int3
push
push
mull
push
insb
lret
lock
xlat
into
sub
testl
push
inc
fsubrl
test
aad
push
out
and
sub
inc
cmovbe
jnp
nop
jl
test
shl
mov
dec
adc
call
xlat
loope
test
lea
cmpsl
les
fxch
push
je
sbb
or
mov
inc
add
divb
out
pop
xlat
ret
mov
xchg
adc
aam
cmp
fwait
test
push
lahf
mov
fisubs
ret
push
hlt
movsb
mov
in
js
adc
push
int3
dec
insb
cltd
sub
pop
push
fdivr
xor
jae
inc
pop
sub
or
xchg
jnp
adc
adc
and
adc
xchg
aam
addr16
es
lock
xor
loope
push
mov
mov
mov
push
gs
fcomps
insb
jecxz
mov
testl
call
adc
or
xor
jp
pop
cmpsb
lods
add
repnz
or
jne
inc
jo
pop
xor
push
aad
lea
mov
imul
pop
push
imulb
jp
test
xchg
dec
test
mov
cmp
sbb
cwtl
sub
in
lret
pop
push
sbb
movsb
jle
les
test
ret
outsb
mov
mov
mov
adc
fcoml
lcall
xlat
aas
mov
sarb
popl
mov
call
sbb
push
les
xlat
clc
scas
aam
cmp
push
in
mov
mov
test
or
add
pop
mov
jmp
xchg
call
imul
cmpsl
or
or
bound
dec
inc
and
jg
xchg
outsb
leave
mov
mov
push
test
scas
mov
dec
repnz
jae
push
mov
xchg
mov
dec
xchg
push
pop
pmulhuw
mov
and
push
ret
push
pop
ja
pop
mov
aas
aas
pusha
dec
adc
frstor
mov
enter
mov
cs
mov
pop
sbb
data16
rcrl
adc
rorl
dec
add
sub
rorb
stos
or
leave
rol
add
or
sub
int3
in
mov
out
popa
mov
pop
mov
sbb
xor
pop
mov
iret
psubsb
pop
xor
vphadduwq
cmp
mov
dec
mov
lock
sub
in
mov
sbb
inc
xchg
adcb
test
aas
dec
sub
dec
rorl
push
inc
rclb
mov
pop
fcomp
loop
lahf
xchg
adc
add
es
test
push
rcrl
out
ljmp
mov
ret
aam
or
mov
scas
cmpsb
test
fsubl
outsb
dec
xchg
test
xchg
int
and
icebp
inc
outsb
xchg
pop
les
dec
or
je
mov
lret
ret
and
mov
push
imul
mov
out
rcrl
in
jp
loope
add
push
mov
call
sti
scas
pop
adc
es
push
mov
cs
stos
scas
jb
inc
push
push
cmp
fcoms
or
inc
xor
dec
push
fmuls
fnstenv
inc
icebp
xorb
cmc
mov
mov
jns
loope
jl
sbb
insl
in
fistps
cmp
xor
xchg
xor
adc
sbb
imul
sahf
aas
fistps
popa
fidivs
nop
std
insb
sbb
adcl
je
in
iret
jns
dec
imul
stos
pop
cli
or
in
jge
out
dec
stos
pop
inc
and
pop
add
adc
inc
xor
addr16
mov
cmpsb
fdivrl
pop
outsl
push
notl
jns
jg
xchg
sti
sbbl
cmp
adc
pop
jae
sahf
jecxz
or
xchg
mull
loop
mov
lret
xchg
ret
aaa
test
and
or
and
ss
push
xchg
adc
inc
mov
dec
arpl
iret
js
out
mov
fstpl
mov
int
add
jns
or
shrb
rcr
test
push
pop
sub
fs
push
lea
rcrl
mov
in
cmp
aad
stc
jmp
pop
inc
adc
faddl
xchg
jae
pop
and
pop
bswap
mov
je
decb
out
fsubl
jmp
inc
xorb
sub
sahf
fstpt
jnp
imul
mov
mov
icebp
adc
js
cs
ja
mov
dec
jp
stc
filds
lods
or
or
ret
imul
jnp
mov
std
mov
push
sub
jecxz
enter
dec
jmp
and
in
testl
add
sub
mov
cmp
push
inc
xchg
leave
lock
sbb
shl
xchg
std
push
jp
out
pop
mov
push
xchg
inc
aas
push
sub
xchg
cld
lcall
into
insb
sub
enter
xor
out
ja
or
jmp
mov
dec
cmpsl
push
in
sbb
pop
add
bound
jge
cmp
lods
xchg
sbb
popf
movl
shlb
xchg
in
ss
xlat
cmp
popa
mov
cmp
mov
mov
and
cltd
out
xlat
leave
push
hlt
or
push
push
call
push
mov
or
jle
push
pop
cmp
jge
inc
mov
rclb
test
and
dec
sub
mov
out
add
push
es
and
pop
test
out
stc
loop
push
add
mov
into
int
jno
dec
ret
ret
jp
push
pop
adc
sahf
out
or
pop
pop
cmpb
bound
nop
cmp
mov
cmp
cmp
jp
bound
bound
ja
lahf
inc
push
stos
aas
jno
cwtl
mulb
sti
iret
addr16
xor
test
filds
cmp
fisubl
xchg
rolb
push
sahf
mov
rol
add
xor
sub
mov
scas
iret
inc
push
cmp
sub
xchg
cld
mov
sub
or
sahf
fcomps
push
pop
repnz
mov
push
imul
dec
outsl
mov
adc
test
push
iret
sahf
push
inc
out
icebp
adc
mov
mov
pusha
jne
ficoms
enter
push
test
xchg
mov
or
loopne
clc
test
loopne
stos
out
enter
out
xchg
in
inc
test
mov
sti
dec
mov
mov
dec
xor
jae
or
sbb
xchg
out
ljmp
pop
out
jo
stc
rcrl
out
jecxz
xchg
loop
and
cmp
jo
lods
repnz
xchg
jl
negl
and
shl
mov
out
fwait
push
or
test
test
test
lea
daa
jg
imul
aas
idivl
jmp
movsl
add
dec
pop
imul
out
push
cmpsb
std
rcrl
pop
dec
jp
dec
xlat
cld
add
sahf
xchg
sbb
push
mov
mov
pop
rep
bound
call
out
ret
lock
mov
push
xchg
es
mov
push
jecxz
movsl
into
lock
lock
push
jnp
loope
inc
mov
addl
incl
loopne
int
or
pop
adc
imul
mov
stos
aaa
aaa
pusha
lods
sub
aas
sbb
add
jle
sahf
push
out
cmp
pop
inc
cmp
lods
mov
leave
les
lods
cmpsl
mov
and
jp
movsb
push
cmp
cmp
add
dec
mov
fadds
xor
pushf
mov
mov
sbb
xchg
cmc
inc
hlt
mov
sub
test
inc
lcall
ja
cli
xchg
add
loopne
aaa
cmp
push
aad
jnp
int3
mov
sub
xchg
mov
sbb
pop
and
inc
or
stc
loopne
dec
ljmp
mov
cmc
xchg
xchg
scas
push
jo
jg
push
mov
mov
jns
mov
push
sub
pusha
lods
shlb
xor
int
repnz
dec
ja
and
mov
outsb
out
xchg
add
js
pop
fcoms
std
imull
popa
icebp
cmpsl
pushf
adc
and
sub
push
dec
cmpsl
and
sub
ret
cmp
xchg
and
sub
cmp
arpl
push
push
adc
and
repz
data16
out
pop
out
add
mov
push
mov
fidivs
test
pop
leave
divl
jg
dec
aam
rorl
dec
ret
sub
in
pop
jb
adc
inc
push
data16
and
push
jl
fiaddl
pop
push
xchg
and
iret
idivl
xchg
rol
into
mov
cmp
and
mov
adc
les
jb
adc
in
dec
inc
pop
inc
mov
pop
xor
lods
mov
sbb
int
mov
out
fsubr
test
mov
mov
ljmp
push
jae
lods
insb
jae
sbb
xrelease
pop
lcall
inc
ss
xor
in
cmp
push
add
das
jmp
pop
mov
test
push
mull
popf
cltd
mov
inc
sbb
in
frstor
cmpsl
test
std
clc
or
xchg
cmp
je
mov
dec
mov
and
int
dec
lods
adc
or
jbe
test
cmp
popa
loopne
iret
rol
in
stc
insb
jnp
and
mov
mov
cltd
and
xorl
mov
imul
test
pop
push
push
jb
and
test
inc
pop
lock
shl
ret
sub
divl
xchg
push
cmp
xchg
jmp
pop
lods
test
fs
fsubrl
xchg
sahf
icebp
xchg
or
fmul
in
in
xchg
push
stos
lea
sub
lahf
js
cmpb
sub
sbb
xchg
mov
call
dec
xchg
rep
adc
repz
cmpsl
mov
sub
ljmp
fwait
fs
push
stos
aam
outsl
cltd
xor
lahf
xchg
xor
or
sub
sub
les
xlat
xor
call
cmovne
punpckhwd
add
out
repz
mov
jmp
js
call
ret
insl
repz
imul
push
mov
add
jnp
cmp
adc
scas
into
icebp
bound
leave
sbb
mov
outsl
fisubrs
nop
mov
orl
nop
jg
jp
mov
rorl
or
movhps
dec
mov
mov
mov
lds
push
push
imul
inc
mov
xchg
call
mov
sbb
dec
fsubs
shlb
cld
xor
repz
cmc
cltd
ljmp
out
sub
pushw
cmc
int
gs
fs
pop
into
jno
popa
imull
adc
sbb
inc
dec
push
pushf
enter
mov
bnd
xchg
fisubrl
pop
or
lcall
push
jnp
ds
pop
or
or
rolb
or
pop
lds
shll
pop
xchg
push
push
sub
lret
aaa
movsb
push
rolb
mov
gs
popf
scas
pop
ficompl
insb
shr
movups
push
dec
and
and
inc
imul
jmp
jne
xor
test
mov
lock
outsb
jns
fwait
mov
mov
mov
mov
and
in
cli
int3
xor
xor
mov
aam
out
call
sbb
fdivr
pop
dec
shll
in
mov
lret
mov
rolb
mov
sub
cltd
dec
roll
add
mull
push
or
and
scas
pop
add
jo
xlat
negb
mov
lret
enter
test
loopne
cmp
adc
test
pop
push
cltd
adc
int3
inc
into
call
enter
mov
push
mov
jecxz
or
scas
lock
out
lea
pusha
jbe
out
lcall
insb
xchg
ss
push
jns
sbb
fs
or
stos
jno
inc
das
std
nop
enter
cmp
dec
pop
cmp
add
nop
xchg
pop
popa
xor
cmpsl
cmp
sub
sbb
addr16
arpl
adc
out
sub
outsl
popf
inc
inc
cmpsl
mov
jp
hlt
push
out
and
shlb
gs
dec
cs
pushf
push
jl
mov
xor
mov
xchg
insl
jae
add
aad
sbb
movsl
imull
fstl
cltd
cmp
sub
sbb
jmp
xchg
dec
sub
std
sbb
sub
aaa
popf
mov
jle
pop
dec
xchg
mov
in
dec
adc
fs
or
cmp
fwait
mov
push
lcall
mov
sbb
mov
pop
fmul
dec
sbb
shlb
xorb
or
mov
cmp
aad
inc
shl
inc
fldcw
push
lret
or
testl
mull
cmp
jecxz
fisttps
dec
fisubrs
ds
inc
mov
ja
int
stc
incl
dec
mov
shl
push
xor
sbb
sbb
rolb
in
aam
call
fdivr
fwait
cmp
jl
inc
jp
imul
xor
mov
mov
cmpsl
sbb
ljmp
push
movsl
xlat
les
pop
sbb
je
xchg
cld
subl
ret
repnz
add
aas
and
test
xchg
inc
cmpsl
pop
rcll
sarl
adc
mov
or
nop
lret
xchg
addr16
add
fildll
xor
lcall
loope
push
stos
movups
in
cmp
daa
ljmp
add
sbb
push
inc
inc
adc
cmp
xor
and
push
test
mov
push
jg
std
pop
mov
pop
xor
cvtps2pd
xor
mov
insb
or
ret
jge
lcall
sub
ficompl
mov
rclb
adc
cmp
adc
lods
jnp
inc
dec
xor
inc
rcl
dec
imul
movsl
push
xor
ja
sub
add
mov
push
dec
xchg
xorb
mov
adc
clc
cld
add
flds
addr16
add
sbb
pop
data16
in
lea
js
lret
mov
mov
popf
xchg
mov
jmp
dec
jb
popf
aam
mov
pop
jnp
rep
mov
ret
ljmp
lds
or
xchg
jnp
sbb
adc
fildll
xlat
daa
mov
mov
lds
cltd
adc
jnp
test
insb
les
mov
mov
and
jl
inc
jp
iret
xor
inc
pop
pop
ss
outsl
enter
xchg
ljmp
xchg
ja
inc
jecxz
add
push
push
mov
addr16
sbb
pop
push
jne
pop
es
lcall
outsb
cs
pop
jo
add
mul
push
and
outsl
pop
bound
aaa
pop
fidivrl
pushf
add
cs
pusha
fwait
sbb
lcall
push
and
fistps
and
push
cmp
or
sbb
mov
or
jl
xchg
in
insl
ljmp
xor
mov
xchg
dec
test
mulb
addb
and
xor
js
mov
inc
mov
mov
mov
mov
shll
lret
repz
outsl
xchg
mov
lahf
and
js
in
fbstp
fdiv
imul
rorl
xlat
pop
dec
xchg
insl
push
push
cwtl
add
lcall
or
repz
std
cmpsb
pop
jo
or
add
nop
cs
xchg
pop
adc
in
push
mov
aas
nop
push
gs
pushf
shl
ret
and
and
mov
mov
xchg
xchg
pop
movsb
gs
enter
cmp
cmc
cmp
mov
pop
xor
bound
jno
bswap
mov
or
mov
lahf
pop
push
idiv
gs
mov
mov
lret
sbb
js
adc
sbb
lods
pushf
loop
cmp
out
bound
pop
sbb
test
ds
dec
xor
hlt
daa
rcrl
xor
add
cmpsl
mov
dec
jns
out
insb
dec
mov
sahf
out
shrb
pop
add
or
sbb
adcl
inc
rorb
push
pop
lahf
mov
mov
xchg
and
cmp
test
xchg
scas
int3
or
xchg
je
ret
sbb
fsts
mov
fildll
xchg
sub
and
add
dec
add
cmp
jge
sbb
fisttpl
stc
les
jns
sti
sub
lcall
and
add
or
in
rorb
dec
and
add
inc
loopne
add
add
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
jmp
outsb
lods
or
mov
cmpsb
or
push
sub
scas
addl
cwtl
mov
xor
sti
dec
sub
and
std
xor
xchg
cmpsl
xchg
outsl
popa
xchg
jb
icebp
out
fprem1
push
adc
icebp
add
stos
cmc
jno
int3
xchg
xor
inc
das
js
imul
dec
sbb
jg
mov
rcr
adc
xor
pop
loopne
scas
gs
shll
push
rolb
cmp
pusha
pmulhw
movsl
adc
mov
sub
jns
lcall
in
movsl
jecxz
sub
xchg
lahf
adc
xlat
inc
inc
mov
stc
pop
and
out
fsubrs
fiadds
mov
lcall
lock
xchg
dec
data16
xor
lods
pop
mov
pop
and
aaa
popa
movsb
sti
test
lea
add
or
push
jl
out
loope
andl
dec
or
pop
sub
jge
add
inc
out
in
pop
rcrl
call
mov
xchg
sbb
or
cld
jnp
mov
out
icebp
mov
xor
push
popa
pushf
push
xor
icebp
scas
or
mov
mov
negb
inc
jno
cmp
sub
jle
and
mov
push
test
out
gs
fstps
jge
mov
xchg
sbb
popf
push
ja
push
outsl
and
insl
jle
call
push
jmp
cmp
das
test
rep
push
and
int3
sbb
sahf
mov
xchg
in
jmp
stc
leave
fistpll
in
sbb
inc
jbe
orb
xchg
mov
add
aad
xor
sahf
mov
clc
gs
orl
aas
push
push
jge
faddp
cld
jne
dec
push
mov
in
dec
pop
leave
mov
loopne
icebp
in
or
pop
scas
and
mov
inc
xor
inc
push
mov
sub
je
addl
clc
inc
cmp
add
sub
push
pop
jmp
push
mov
js
je
shrb
das
add
push
adc
imul
and
out
inc
push
iret
dec
mulb
mov
in
mov
xchg
jb
cli
or
fdivl
arpl
mov
mov
sti
fs
sub
mov
das
jecxz
jne
std
cwtl
ljmp
fdivrs
bound
push
leave
push
outsl
pop
mov
ret
dec
sar
fmuls
pop
lds
insb
aam
mov
mov
gs
xchg
push
dec
in
mov
inc
out
stc
sbb
cmpsb
jg
shlb
mov
or
hlt
jp
sahf
cwtl
cmp
sbb
cmc
mov
xchg
push
nop
push
cmp
mov
stos
dec
xor
jbe
mov
sti
and
push
inc
lods
dec
stos
int
sbb
dec
jg
fstl
pop
gs
xor
mov
push
jae
dec
movsl
imul
jno
sbb
movsb
pop
jb
xor
mov
jb
and
fucomip
sbb
cmp
xchg
dec
or
inc
aam
push
cmp
pcmpeqb
icebp
adc
pop
add
shrb
mov
insb
or
arpl
lds
jge
in
gs
xor
inc
insl
pop
testb
insb
inc
hlt
in
sub
jbe
jno
incb
or
xor
sbb
sbb
idivb
flds
push
or
out
dec
jmp
adc
adc
mov
pop
mov
and
into
repnz
addb
jbe
inc
stos
je
push
es
sub
mov
cwtl
cmp
inc
lret
sub
jb
mov
stc
fcompl
mov
dec
js
lods
jnp
std
sub
mov
inc
ds
xlat
test
pop
out
jno
adc
pop
or
mov
mov
pop
jae
mov
pop
cmp
fcom
sbb
int
jmp
decb
out
xchg
sbb
je
cld
aam
sbb
inc
aad
sub
je
lods
push
dec
dec
xchg
and
mov
mov
inc
ja
shrl
inc
imul
rolb
or
lock
push
aam
shll
and
inc
jnp
or
leave
push
push
rorb
add
icebp
push
fwait
jb
sti
dec
loope
mov
sbb
jge
pop
xchg
movsl
cli
sarb
imul
xchg
jl
out
mov
ss
jmp
cli
movsb
lods
push
jbe
mov
or
sbb
inc
push
mov
and
invd
jg
mov
push
fsubrs
xor
cmp
inc
divb
and
sub
dec
sub
mov
cmpsb
dec
nop
push
mov
sbb
inc
mov
push
pushf
fldl2t
push
nop
jo
jns
dec
add
mov
out
mov
add
out
xchg
push
movsl
sbb
insl
stc
or
fs
push
mov
std
stc
cltd
xchg
cmp
push
sbb
or
inc
mov
xchg
or
fs
testb
dec
jmp
add
inc
enter
pop
cli
lret
mull
pop
xor
mov
or
data16
or
xchg
jmp
push
add
mov
aas
and
push
push
and
cmp
jns
mov
jcxz
and
in
xchg
rcrb
and
mov
scas
cmp
xor
fidivs
out
lret
mov
icebp
inc
and
cltd
or
dec
mov
push
push
cltd
arpl
inc
dec
jg
adcb
lret
outsl
ret
jo
int
out
neg
sub
and
test
test
int
jns
test
pop
in
mov
and
out
pop
adc
ret
push
imul
inc
xchg
rorl
ss
sub
xchg
daa
icebp
xchg
adc
add
or
lds
pop
lock
lea
sub
or
add
fists
in
push
or
sub
xchg
jg
mov
mov
push
cwtl
dec
xor
cmpsb
mov
mov
loope
ret
ror
sahf
outsb
add
inc
cmp
cltd
loope
call
loop
add
sub
push
sbbb
jmp
out
adc
sub
jae
das
iret
pop
subb
pop
dec
mov
xor
or
pop
out
push
loop
mov
dec
sub
sbb
movsl
jne
or
or
test
aaa
jmp
jb
sti
push
pop
fbld
or
jbe
mov
add
mov
cmp
pavgw
inc
sti
pop
cmp
add
adc
xor
mov
lahf
call
aad
jo
inc
xchg
jnp
loope
cmp
nopl
mov
pop
push
test
int
cmpsb
xchg
xor
pop
test
mov
ljmp
std
sarb
mov
sbb
push
cmp
hlt
mov
and
cmp
mov
cmp
addr16
aam
test
mov
sahf
icebp
int3
jbe
outsl
pop
jl
xor
mov
xchg
pop
mov
dec
lret
cmp
outsl
push
mov
imul
ret
sahf
jno
cmc
in
mov
cmp
sbb
pop
jo
or
movb
pop
push
cltd
xor
jnp
fnstenv
aaa
adc
movsb
shl
in
mov
xchg
push
adc
daa
lds
xchg
mov
push
scas
push
mov
mov
in
xchg
sub
out
daa
loope
mov
insl
idiv
shrl
and
dec
mov
cmpsb
jns
pop
mov
mov
mov
jg
pop
sbb
insl
xchg
test
jmp
stos
jns
xor
push
shrb
cmc
popa
mov
addr16
das
xchg
dec
adc
inc
dec
push
inc
fidivrl
jmp
sub
pop
lahf
insb
add
push
ja
cmpsb
lods
call
cmp
out
pop
and
in
and
es
or
inc
xlat
mov
fildl
sahf
add
xor
test
xchg
pusha
cld
sbb
call
out
and
loopne
push
sbb
pop
ror
fs
into
cmp
mov
stos
xor
and
dec
dec
fstpt
mov
xor
adc
addl
scas
mov
sub
xchg
bound
push
arpl
adc
mov
imul
fcomip
cmp
jp
loop
mul
xchg
add
jnp
push
cmpsl
jp
or
push
mov
js
push
std
aaa
push
dec
pop
dec
dec
mov
nop
lret
fsubr
scas
stc
rorb
dec
lret
push
and
ficomps
cld
mov
sub
imul
addr16
fcompl
notl
xchg
into
aad
data16
sub
scas
mov
fcmovu
testb
add
pop
scas
jmp
test
test
out
hlt
pop
fildl
mov
test
imul
and
imul
dec
mov
push
out
mov
add
pop
sub
enter
or
cmp
lock
sub
aam
jns
cmp
inc
sti
iret
push
cli
and
dec
adc
popf
mov
js
dec
pop
mov
inc
ret
testl
in
sub
std
mov
repnz
inc
fdivp
and
add
xor
jbe
rorb
add
mov
push
test
andb
fdivrs
ds
lods
pop
popa
and
leave
jl
stos
pop
lods
push
push
dec
insb
jnp
aas
mov
adc
pop
pushl
ret
in
jg
xlat
mov
sahf
bnd
cmp
sub
cmp
xchg
mov
mov
or
fstps
sbb
test
aad
adc
mov
addb
mov
mov
mov
addr16
scas
bound
inc
pushf
sbb
pop
jmp
andb
pop
xor
xorl
int
mov
daa
fistl
les
leave
and
pop
movsl
sahf
xchg
adc
in
add
aaa
loop
or
ss
sub
inc
fsubp
stos
lahf
cmp
pusha
dec
lds
inc
fadd
cli
pop
mov
sub
addr16
adc
sbb
cmp
dec
in
movsb
fldcw
mov
sub
push
daa
loop
cmovle
sbb
lds
cmc
sbb
cmp
adc
inc
lock
dec
daa
ljmp
sub
cmc
add
jb
fisubl
aam
mov
pop
test
enter
std
scas
pop
scas
fbstp
fwait
out
xchg
mov
push
clc
outsl
cmp
add
cmp
fisttpl
pop
in
lcall
fs
mov
sub
rcrb
std
add
fisttps
mov
mov
pop
xchg
dec
inc
je
sbb
push
and
fidivrs
inc
cmp
mov
or
ret
loop
push
xchg
loope
pop
adc
cmp
outsb
test
sub
int3
push
popf
nop
sbb
or
adc
rolb
incb
add
arpl
sub
stos
push
adc
inc
cmp
or
mov
sub
sbb
js
iret
add
jbe
movl
lods
cmp
testl
xor
inc
lea
clc
push
sub
repnz
sbb
sub
insl
ret
mov
fwait
aaa
mov
push
jecxz
push
in
inc
bound
mov
or
mov
es
cmpsl
addr16
push
cld
or
xchg
hlt
inc
or
gs
mov
not
and
jge
scas
shlb
cmp
fistl
add
jno
popf
cmp
and
mov
inc
lcall
pop
imul
imul
fimull
mov
push
ljmp
dec
fbld
xor
clc
cli
xor
xchg
test
ja
fldl
sbb
xchg
arpl
les
fstpt
pop
xor
mov
cwtl
ds
hlt
dec
lret
jno
scas
and
pop
addr16
mov
pusha
sbb
mov
fisttps
into
test
add
cmpsl
push
test
leave
rcrb
test
xchg
push
call
sbb
push
inc
adc
mov
in
mov
or
add
jbe
imulb
lds
pop
inc
pop
pushf
mov
cs
push
add
jmp
orl
rol
insl
aas
cltd
jge
sub
rcrb
js
imul
pop
sbb
pop
jmp
xor
es
or
xchg
mov
pushf
xor
icebp
cmp
xchg
and
std
cmpsl
dec
out
push
push
fs
xor
pop
dec
into
and
adc
cmpl
sub
mov
scas
xchg
fisubrs
jg
cmp
stos
cmpsb
mov
mov
add
sbb
fwait
popl
mov
gs
imul
jg
fistps
repz
or
mov
fbstp
and
cwtl
in
xchg
mov
sbb
scas
xchg
mov
pop
mov
xchg
insb
mov
lcall
fcompl
enter
lock
and
or
mov
cmp
cmp
js
ljmp
sub
aaa
cmp
hlt
push
xchg
inc
mov
dec
pop
lods
jl
mov
mov
clc
bound
push
into
movsb
push
dec
mov
and
jbe,pn
xor
cwtl
jp
jo,pt
rcll
ror
push
mov
add
add
lods
pop
pop
mov
xchg
shll
clc
enter
or
mov
mov
xlat
test
test
sbb
inc
std
ds
jae
hlt
out
loopne
mov
andl
outsb
pop
stos
xor
mov
inc
xchg
jnp
popf
insl
mov
push
jbe
mov
jecxz
addr16
gs
mov
loop
or
jp
pop
and
scas
sub
xlat
xor
movsb
mov
gs
push
rcrb
mov
sbb
outsl
jno
or
lods
mov
fisubl
mov
dec
js
push
jae
add
ljmp
mov
lods
outsl
cs
in
push
shr
push
stos
lds
gs
add
xchg
push
and
sub
scas
jae
and
dec
or
add
shll
pop
lcallw
pop
enter
and
mov
xchg
jle
and
pop
xchg
dec
sbb
adc
andl
mov
pop
pop
pop
jno
in
icebp
push
xor
or
mov
xchg
mov
sbb
sub
fdivr
or
inc
add
aaa
pop
mov
repz
mov
fiadds
movsl
inc
xchg
jmp
cld
adc
dec
pop
inc
adc
fsubrs
mov
xchg
jns
jo
lret
insb
ret
jl
repnz
mov
jg
push
and
mov
addr16
je
into
std
sub
test
pushf
mov
inc
divb
dec
sub
push
adc
xorb
pop
pop
ljmp
fnstsw
cmp
mov
add
and
and
test
xchg
inc
jbe
jg
dec
mov
fs
sub
jp
popa
and
shll
mov
jmp
aas
into
iret
faddp
sub
scas
nopl
in
cmp
scas
es
or
cmp
pop
fisubl
jl
negl
ret
fwait
cld
push
fcoml
jl
mov
sbb
repnz
lahf
xor
loopne
pop
push
mov
mov
pop
loope
push
jno
sub
loope
ret
xor
sub
popa
out
lret
inc
sbb
mov
push
into
jb
jge
rol
sti
test
sar
repnz
loopne
push
pushf
sub
add
das
jns
xchg
pop
shl
push
jno
jne
rolb
cli
cmc
fwait
out
enter
mov
sbb
dec
mov
xchg
ret
repnz
push
jnp
mov
inc
inc
jns
mov
sbb
push
add
and
in
pop
mov
into
int3
inc
mov
mov
enter
rcrl
mov
ds
shll
adc
add
jecxz
jl
mov
rcrb
sbb
pop
shrd
lret
ljmp
mov
push
jb
jl
pop
jp
and
js
adc
dec
cltd
shl
in
jg
inc
xchg
pop
dec
mov
xchg
xchg
dec
or
ljmp
fwait
in
pop
out
out
cmpl
or
mov
ret
popa
xchg
mov
insl
out
das
es
stos
cmpsb
mov
xlat
mov
ss
mov
out
mov
inc
std
mov
cmp
mov
xchg
sarb
cmc
jmp
mov
icebp
fildll
push
cmpsl
arpl
lock
jns
roll
test
push
pop
bound
ds
mov
and
adc
dec
addb
mov
push
sti
xlat
stc
test
mov
les
mov
pop
aas
sti
in
pop
mov
iret
adc
or
lahf
roll
andl
cmc
jl
jp
jg
inc
inc
andl
push
sbb
sbb
addr16
and
jnp
data16
pop
sub
in
je
push
push
cmpsb
enter
fidivs
xor
ret
or
ficoms
mov
mov
fistpl
or
jb
xor
adcl
inc
ffree
or
fldenv
scas
pop
je
jp
lock
cmp
mov
je
movsl
jecxz
xchg
xchg
adc
sub
fstpt
lods
add
pop
stc
loop
ljmp
cmp
fildl
cmc
jecxz
jle
jb
sub
movsl
clc
add
inc
mov
mov
scas
movsl
or
iret
adc
sbb
pushf
xchg
ljmp
shrb
sbb
movsb
pop
mov
mov
fwait
sbb
stc
aad
out
sbb
dec
bound
es
mov
inc
scas
push
lock
lods
sbbb
sub
sti
popf
and
mov
lock
push
mov
loop
inc
ret
mov
bound
iret
sbb
js
adc
verw
repnz
in
cmc
cmp
inc
imul
push
lret
cmc
inc
les
insb
sbb
dec
jp
jns
arpl
xor
dec
bnd
loopne
clc
cmc
cmp
dec
sbb
ret
mov
fildll
add
lcall
test
mov
lret
cli
sub
add
push
rcrb
mov
and
jae
mov
adc
sbb
jne
xchg
xchg
jno
aad
cmp
xchg
jns
cmp
xchg
inc
fcompl
jnp
or
push
test
push
sahf
jb
into
insl
cmp
add
cmp
dec
fdivrl
or
mov
enter
push
popa
inc
push
movsl
gs
mov
arpl
inc
ja
lahf
add
add
mov
stos
mov
cli
test
in
imul
pop
cmpl
pop
add
xchg
xor
push
xor
inc
std
cmp
mov
push
xchg
mov
lret
add
pop
movl
ds
add
cmp
jp
and
mov
out
addl
adc
lds
sahf
aam
mov
cmp
push
and
mov
test
jbe
mov
cmp
pop
xor
mov
fsubs
mov
cmpsl
inc
push
mov
mov
xor
icebp
push
push
shlb
xchg
mov
mov
loop
xor
push
dec
test
cmp
cltd
pushf
cld
insb
hlt
movsl
sbb
int
mov
scas
mov
aad
push
lea
fsubp
and
xchg
lret
cli
push
pop
rclb
sub
push
jae
nop
enter
fcmovbe
sbb
jle
sbb
lret
xchg
rcrl
mov
idivl
out
addr16
outsl
xchg
xor
cmp
adc
xor
nop
cs
idivl
adc
out
pusha
xchg
xor
addr16
daa
inc
loopne
add
cmc
pop
nop
es
inc
lods
cltd
push
cmpsb
mov
or
jmp
cld
mov
jnp
sub
into
mov
out
or
ret
shll
hlt
outsb
sti
sub
mov
lahf
loope
cli
push
push
mov
sbb
sti
dec
mov
cs
nop
pop
add
cmp
andl
aaa
xor
fdiv
lcall
arpl
int
les
test
sub
icebp
test
and
in
inc
arpl
sbb
dec
or
push
adc
sbb
loopne
xabort
cwtl
xchg
mov
int
or
pop
enter
fcmove
xchg
rcl
loop
int3
mov
stos
and
jg
repnz
and
data16
pop
cmpsl
cltd
adc
sti
xor
add
or
pop
mov
mov
imul
test
test
mov
dec
xchg
enter
push
xchg
and
cli
mov
shl
mov
ret
nop
mov
adcl
clc
lods
or
mov
ficompl
rorb
ja
inc
xor
xchg
mov
xlat
enter
je
lock
popf
jge
and
out
rcll
jl
in
and
pop
rcrl
scas
adc
fcoml
outsb
or
loop
int
inc
jmp
inc
pusha
and
dec
arpl
mov
out
push
std
adc
fsubp
aam
jns
out
repnz
push
lret
stos
sub
outsb
pop
cmpsb
ljmp
aam
jne
test
test
adc
xchg
stc
xchg
scas
mov
ficompl
mov
in
fildl
aas
pop
push
test
adc
and
test
in
mov
cli
dec
out
xchg
or
leave
push
imul
sbb
clc
lods
cs
mov
cld
jb
inc
addr16
and
pop
and
aaa
fsts
insb
inc
push
addps
jbe
xor
lahf
lock
mov
sarl
jmp
xlat
xchg
xchg
fistpl
rclb
lods
mov
mov
inc
cmc
ret
pop
in
jns
dec
xchg
loop
push
fwait
cmp
es
icebp
push
lods
mov
inc
add
repnz
fdivrp
out
out
mov
clc
sbb
or
mov
iret
cmp
insl
dec
mov
ficoms
jo
mov
in
push
aas
xor
ret
jmp
icebp
mov
xchg
mov
jl
call
jno
push
sub
flds
sub
jns
and
leave
mov
jo
pop
imul
sub
jmp
insb
push
nop
mov
and
xor
push
in
push
mov
scas
pop
aad
aaa
mov
clc
jl
int
push
add
mov
int
ret
push
data16
jge
mov
sbb
shll
mov
call
jl
push
call
inc
xor
mov
pop
mov
and
ret
sbb
cwtl
sti
fmuls
push
cmpsb
lock
xchg
fmull
sub
ljmp
cmp
mov
lcall
shlb
cwtl
repnz
jo
sbb
rorb
or
xlat
and
mov
aam
xchg
sahf
xchg
insl
xor
icebp
or
sbbl
shrl
jne
popa
mov
jl
push
inc
mov
mov
movsb
jo
fdivr
test
in
xor
dec
adc
gs
jp
shlb
jne
inc
inc
and
pop
in
mov
pop
fistpl
loope
xchg
jno
mov
lret
mov
mov
jae
iret
jno
mov
xchg
xchg
test
dec
cmp
loope
xchg
jnp
std
mov
pop
loop
clc
ret
inc
mov
mov
jnp
repz
cltd
movsl
lock
jp
sub
push
inc
aad
sub
sbb
in
jne
mov
inc
pop
lret
mov
daa
cmp
loop
jp
jmp
dec
sbb
and
test
subb
je
pop
inc
sbb
popa
cmp
ja
dec
loope
lods
or
cwtl
mov
jg
jmp
jle
sub
ljmp
addl
cmp
jge
std
inc
fstpt
xor
fidivs
inc
out
push
add
sub
xlat
in
mov
pop
aas
ret
add
pop
popa
mov
add
roll
adc
and
popf
in
movsb
mov
ja
dec
xor
in
test
lock
ljmp
or
inc
or
test
fstl
cmp
ss
jecxz
aad
ss
and
addr16
pop
dec
jno
xor
popa
or
mov
cld
shrl
and
rolb
mov
pushf
xchg
es
mov
in
and
mov
stos
lcall
fsubs
sbb
inc
fwait
jmp
icebp
mov
in
mov
ret
cmpsl
or
and
or
out
sar
xchg
repnz
xor
jns
xchg
je
adc
mov
out
icebp
into
xchg
in
add
daa
dec
ret
outsl
and
or
mov
push
jo
clc
xor
xor
fs
xor
pop
inc
pop
sbb
mov
ficomps
iret
xor
dec
mov
mov
fistpll
adc
shlb
jg
adc
sbb
in
xchg
inc
lcall
out
sub
and
cli
scas
sahf
mov
add
push
sub
sar
nop
sub
test
out
testl
push
pusha
pushf
lock
inc
adc
xchg
outsl
mov
inc
jg
add
dec
mov
loope
xorb
sbbb
in
xchg
jb
sbb
dec
xor
cmp
rcrb
mov
dec
test
test
ds
stos
dec
xor
mov
mov
mov
pop
fsubrl
shl
dec
sbb
in
test
push
xor
fldcw
mov
sbb
in
push
repz
daa
pop
fldenv
ret
jl
loopne
pop
pop
gs
fcoms
gs
add
sbb
mov
pop
cld
jnp
jae
cmp
add
or
sbb
in
pushf
das
sahf
or
pop
and
mov
add
push
imul
ljmp
lods
mov
mov
fmull
scas
shll
dec
pop
jmp
add
insb
xchg
inc
mov
lcall
push
jg
dec
test
mov
inc
push
aam
sbb
mov
clc
inc
sbb
xchg
fs
pop
stos
or
cwtl
cmc
push
mov
xchg
mov
icebp
arpl
push
call
or
fidivrs
mov
fildll
mov
and
jg
bsf
cmp
pop
movsl
adc
xchg
mov
imul
ret
and
mov
cmpb
loope
je
sahf
push
jecxz
or
test
mov
or
pop
shll
jo
subb
jb
add
pop
pop
loope
sbb
inc
xchg
pop
push
gs
inc
leave
loop
sub
clc
push
jle
mov
ret
out
into
subl
jp
aam
js
sbb
mov
jb
adc
fs
repz
mov
dec
add
jmp
dec
add
mov
fnstcw
cltd
rorl
fsts
pusha
ja
in
in
movsb
jecxz
and
in
es
adc
cmpsb
cs
xor
aam
sub
lahf
mov
out
popf
sbb
ret
loope
ret
mov
mov
add
cmpsl
hlt
mov
jo
fwait
push
inc
mov
popa
xor
fistpll
pop
push
mov
cmp
xlat
jne
stos
test
shl
inc
and
ja
lea
movsl
ret
arpl
or
inc
inc
and
mov
orl
test
aam
inc
movsl
imul
negb
fidivrs
jae
shrb
sbb
clc
test
jecxz
inc
popa
outsl
cs
lcall
adcb
je
clc
lcall
mov
and
repnz
insl
loop
jl
faddl
mov
mov
jl
fnstenv
fldl
adc
sahf
push
addr16
cmp
sub
addl
fimull
pop
ljmp
dec
pushf
dec
mov
sbb
lods
ja
rcr
cs
jmp
cmp
iret
push
xchg
data16
push
data16
push
test
mov
sahf
mov
cli
push
inc
push
test
out
jmp
shrb
sub
sbb
leave
add
xorl
xchg
aad
add
mov
in
pusha
push
negb
jae
orl
cmp
inc
nop
push
repz
mov
lret
dec
lahf
xor
std
out
jnp
inc
jecxz
inc
xor
ret
or
push
loope
dec
add
push
arpl
mull
in
les
pop
jne
movsl
lret
popf
mov
cli
xchg
movsl
jno
imull
mov
outsl
cmc
daa
rorl
push
xchg
or
pop
lret
pop
mov
mov
cs
imul
jmp
inc
fimuls
aaa
addb
sub
mov
sbb
rorl
cltd
jno
insl
in
outsl
mov
cmp
inc
dec
mov
xor
out
mov
cmp
dec
jge
test
inc
pop
rclb
jecxz
inc
test
ficompl
stos
stc
ljmpw
jmp
movsb
xor
cmpl
mov
bound
cmp
ja
push
mov
outsl
mov
movsl
lods
incb
mov
hlt
pop
pop
je
pop
xor
dec
mov
popf
xlat
divl
dec
xor
idiv
mov
xchg
insb
and
ja
jbe
fisubl
mov
pop
inc
push
test
loopne
mov
mov
dec
or
repnz
scas
cmp
pusha
notl
adc
repz
adc
test
and
cmp
dec
test
aaa
je
std
lock
sub
mov
rcrl
pop
add
dec
std
ret
popa
jecxz
aad
push
dec
inc
cmp
scas
ret
jmp
or
pop
outsb
push
jle
and
or
mov
outsb
fnstsw
in
add
xor
xor
mov
or
movsb
cwtl
fwait
in
lcall
std
mov
cmc
pop
xchg
or
nop
cld
iret
dec
xor
rol
dec
adc
sub
lods
dec
sti
dec
pop
push
jns
in
addr16
inc
stos
pop
ljmp
mov
je
or
shrb
push
enter
daa
popa
aad
testl
mov
imul
lea
popf
outsb
repnz
bound
mov
mov
lods
sahf
inc
test
pop
mov
cltd
mov
add
filds
cld
lret
inc
test
sub
icebp
mov
dec
push
sub
out
dec
dec
aad
and
jecxz
dec
cmpsb
add
aaa
adc
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
mov
xorl
mov
mov
sbbl
xor
xorl
add
mov
and
mov
and
xor
xorl
push
xor
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
movzbl
or
mov
mov
subl
xor
mov
add
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
mov
movb
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
pushl
call
jmp
lea
incl
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
xor
movl
add
andl
mov
sbbl
movl
push
movl
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
mov
dec
mov
jmp
mov
or
push
mov
xor
xor
or
xor
mov
sbb
mov
mov
push
add
jmp
incl
mov
mov
inc
movl
cmp
jb
not
mov
xor
movl
add
jmp
movzwl
or
mov
adc
mov
adcl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
add
addl
movzwl
sbbl
mov
movzwl
and
mov
sbbl
movzwl
xor
add
mov
movl
mov
mov
inc
not
mov
movl
cmp
jne
and
mov
sub
mov
xorl
xor
and
add
mov
mov
sbbl
xor
add
adc
mov
addl
movl
movl
movl
movl
mov
movl
cmpl
je
cmpl
jb
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
xor
add
movzwl
mov
mov
je
mov
subl
mov
xor
xor
notl
sub
notl
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
mov
movl
add
andl
imul
mov
xor
mov
mov
add
mov
add
incl
or
mov
mov
mov
sbbl
add
xor
mov
dec
mov
add
mov
add
and
and
mov
xor
mov
subl
mov
lea
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
or
mov
sub
movzwl
and
add
mov
andl
mov
xor
adcl
add
movl
jne
movl
jmp
xorl
mov
subl
sub
xor
movl
cmpl
je
cmpl
jbe
jmp
push
call
xor
or
dec
mov
jmp
mov
subl
mov
mov
xor
decl
xor
adcl
sub
sub
xor
mov
mov
mov
jmp
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
addl
imul
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
addl
add
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
mov
mov
andl
add
movl
xor
mov
subl
mov
mov
xorl
add
xorl
and
or
mov
mov
sbb
mov
xorl
mov
lea
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
jmp
rcr
sbb
mov
nop
cs
or
pop
iret
xchg
imul
or
and
jno
in
jo
push
push
outsl
push
adcb
out
inc
ljmp
push
mov
pop
dec
dec
and
cmp
pop
push
xor
js
in
push
add
jb
fs
jmp
jnp
add
add
sub
fimuls
fisubrs
fiaddl
pop
pop
pop
xchg
dec
jecxz
xchg
sbb
daa
imul
cmp
je
mov
mov
scas
pushf
xchg
jp
inc
adc
dec
rcll
jns
and
repz
xor
out
jmp
pusha
xchg
or
push
mov
clc
filds
shlb
adc
dec
aam
mov
fisubrl
inc
in
lahf
cmp
mov
xchg
sbb
shlb
jl
cmp
jmp
lcall
adc
and
je
sbb
jmp
or
fwait
mov
sarl
out
mov
rorb
fbstp
and
imul
loop
push
xchg
loop
je
test
rcll
sub
stc
mov
je
or
mov
mov
lret
dec
insl
ja
mov
insl
adc
dec
cmpsb
pop
adc
stos
fstpt
stos
push
xor
cmp
inc
aam
sbb
sub
push
ds
or
sahf
dec
fistpll
xchg
sbb
fidivl
add
push
jecxz
loope
mov
ret
int3
mov
test
push
mov
fwait
lahf
in
rolb
or
inc
cmp
rcrl
sub
aaa
or
cmp
push
push
mov
add
dec
jae
xor
js
ss
sahf
cli
pop
ficompl
scas
xorl
add
cmpsl
xor
movsb
stc
in
movaps
push
jge
insb
inc
ljmp
push
in
roll
shrb
sub
pop
mov
mov
mov
jno
sbb
aad
icebp
jb
in
cld
test
mov
jge
jmp
data16
jg
xor
pop
jg
out
xor
add
mov
mov
lea
daa
push
stos
outsl
adc
mov
ficoms
scas
dec
scas
cmp
fwait
add
fildl
aam
out
push
and
mov
add
imulb
cmp
movsl
shrb
push
andb
lods
pop
mov
shrl
or
test
add
adc
cld
pop
int3
ds
iret
nop
dec
mov
in
aad
mov
inc
mov
enter
push
cmp
jo
add
hlt
ds
stos
jne
iret
addb
push
cmp
repz
cmp
mov
push
ret
test
lods
rcl
push
mov
aaa
pop
call
call
pop
imull
mov
pop
movsl
inc
mov
inc
xor
cmp
in
jl
mov
and
js
cli
cmc
in
sbb
cltd
mov
push
loope
out
cmp
enter
mov
lock
xchg
repz
jbe
mov
mov
notl
dec
cld
movsl
jb
xor
cmp
push
fcmovb
ljmp
repnz
jns
lock
movsb
loope
xchg
adc
mov
mov
pop
les
sbb
pusha
iret
xchg
sbb
mov
popf
ret
add
lahf
push
iret
inc
in
jg
test
out
das
jge
jae
iret
push
call
lock
lcall
adc
into
jae
pop
jbe
ret
leave
movsl
add
bound
jns
add
cltd
inc
or
xchg
imull
les
push
int
mov
push
sub
mov
popa
out
adc
inc
sbb
adc
fldcw
aad
dec
dec
addr16
sbb
cmp
cmp
jge
aad
add
push
fstpl
lds
imul
call
stos
push
xor
lods
xchg
ss
fstl
loope
mov
push
lret
inc
mov
sub
pop
ficomps
adc
and
stos
jb
addl
cwtl
fcoms
add
inc
jns
test
dec
sti
sbb
pop
data16
popa
xchg
sbb
in
mov
dec
aam
sti
push
mov
jmp
cmp
je
inc
adc
pop
push
mov
pusha
add
and
les
inc
pop
lahf
add
inc
xchg
mov
dec
fisubrs
or
es
call
lea
xchg
fidivs
adc
ss
xchg
sbb
insl
fcompl
test
xchg
imul
push
mov
push
lahf
mov
adc
xor
dec
or
ret
sbbl
jbe
sahf
dec
cli
cld
dec
jno
mov
out
cld
sub
imul
lea
mov
and
pop
ja
fxtract
sbb
lock
mov
repnz
leave
cld
in
push
or
sbb
fidivrl
into
stos
push
std
sahf
adc
push
scas
or
mov
xchg
in
daa
pop
inc
jo
jne
jg
sbb
dec
setl
int3
or
sti
mov
jecxz
xchg
stc
push
and
jmp
and
stos
adc
cli
mov
ds
dec
fimull
xchg
xchg
sub
adcb
mov
roll
and
adc
inc
push
stos
movsl
clc
xor
stos
mov
loop
mov
xchg
inc
mov
mov
cmp
test
mov
andb
std
xchg
outsl
cmpsb
mov
cs
cmpsb
xchg
or
addb
sbb
mov
cmp
xlat
insl
push
push
ss
rcll
pop
call
shrl
test
cwtl
push
dec
xor
jnp
ficoms
iret
xor
daa
xchg
xchg
xchg
movsb
mov
pop
xlat
and
popa
mov
in
xlat
sbb
sbb
pop
jae
and
or
pop
inc
aad
dec
mov
or
fmull
dec
push
add
lcall
and
xor
push
sti
xor
xor
in
or
sub
rcrb
flds
call
xchg
scas
fcomp
adcb
or
hlt
mov
or
inc
dec
pop
xchg
sbb
lods
push
mov
and
jge
or
add
daa
jg
lea
dec
jb
mov
lods
test
mov
stos
outsl
shll
cmp
loop
pop
lret
pop
inc
imul
push
nop
sbb
call
inc
ss
xchg
pop
push
mov
sbb
clc
mov
lock
xor
cmpsb
call
addr16
mov
fs
cmp
pop
mov
lcall
fs
int
loop
test
and
push
fldcw
mov
mov
jle
push
jbe
fisubrl
pushf
scas
dec
addr16
dec
pop
sbb
mov
inc
fistpl
sub
sbb
hlt
daa
push
xor
pop
inc
andl
loope
popa
jno
inc
push
fcoms
imul
mov
pop
out
jmp
imul
icebp
lret
fistpl
bound
fildll
mov
popf
xchg
cmpsb
jge
popf
stc
hlt
pop
adc
test
mov
out
lods
pop
cmp
sbb
xor
outsb
push
mov
loopne
and
mov
psrld
scas
shlb
adc
sub
sbb
sub
mov
imul
adc
das
jae
nop
sbb
stc
add
out
mov
cmpsb
enter
xchg
xchg
dec
xor
inc
pop
ret
movl
test
inc
or
fdivs
js
sbb
push
lret
add
faddl
pop
pop
cmc
lret
roll
mull
jl
lahf
inc
ljmp
cltd
mov
xor
iret
mov
fs
ret
sbb
or
mov
insl
push
iret
out
or
mov
or
pop
xchg
and
jg
and
out
xchg
test
jg
in
imul
xchg
decb
lcall
outsl
sub
mov
into
sub
pusha
icebp
sub
jmp
int
push
lds
mov
jns
test
repnz
push
ret
aad
loopne
xlat
aas
and
push
call
cld
xchg
scas
insl
into
scas
js
loope
sub
shll
inc
xchg
icebp
rep
rcrl
popa
add
inc
fs
sbb
imul
data16
jmp
adc
std
pop
sbb
ljmp
aas
and
rol
sub
outsb
sub
test
scas
fld
pop
jl
add
lret
lock
nop
fwait
out
cmp
cmp
adc
loope
ss
imul
mov
insl
ret
mov
aaa
xor
not
or
call
int3
aam
cmpb
dec
xchg
dec
jns
clc
pop
adc
add
sub
xchg
cs
enter
loope
or
jns
pop
movsb
xor
in
push
sub
imul
out
push
insb
fwait
and
rcrb
add
push
je
jecxz
add
mov
cmp
jge
lahf
int
and
xchg
mul
outsl
push
movsl
call
xchg
jae
mov
add
out
or
aad
lret
xchg
pusha
jmp
jne
and
popa
enter
or
mov
xor
cltd
lds
push
data16
xchg
fcmovne
popf
fcmovnb
xor
test
pop
inc
pop
inc
pop
sub
shll
out
sbb
into
arpl
dec
xchg
jmp
and
adc
in
pop
loop
and
dec
stc
mov
xchg
sub
and
scas
lods
adc
cmp
or
jb
popa
pop
lahf
push
and
mov
or
ja
add
cmp
adcl
cmp
push
jecxz
jmp
pop
sub
jge
sbb
cmp
rcr
push
int
ret
jb
ss
mov
sbb
xchg
jmp
push
mov
outsl
out
fildll
xor
inc
inc
sbb
int
ret
int3
fs
pop
xchg
mov
popa
std
xchg
test
and
les
xorb
in
xchg
add
and
dec
out
cmpl
push
xchg
cs
orl
xchg
cmp
adc
xchg
dec
mov
pop
aas
dec
inc
mov
pop
or
dec
out
push
aam
xchg
pop
xor
js
mov
push
out
push
pop
popl
das
mov
int
mov
xlat
out
aad
add
jbe
or
adc
mov
inc
pop
jge
pop
jae
bound
push
sub
xchg
xchg
mov
add
popa
insb
dec
dec
xchg
rorb
out
in
ja
jns
xchg
mull
mov
out
mov
cli
sbb
mov
mov
stc
inc
lds
sub
les
mov
je
enter
pop
xchg
adc
push
or
sub
cmpb
cwtl
mov
std
xor
and
pop
cmpsl
dec
loop
cwtl
stos
and
out
cmp
sub
pop
sbb
pop
or
repz
jge
sub
jmp
rorl
loopne
push
xor
push
jns
hlt
mov
pushf
sbb
dec
fcmovnb
cli
xchg
dec
or
xor
in
mov
je
adc
pop
mov
out
out
lods
sub
test
jbe
sti
xchg
sbb
adc
cltd
xor
sbb
fwait
lcall
out
cmp
loop
inc
mov
jne
scas
ficoml
sub
stos
xchg
xchg
push
fmuls
insb
push
dec
jae
jmp
jge
ds
stos
call
sbb
jae
jl
jp
out
cld
and
pop
sub
sbb
or
mov
push
xchg
pushf
es
push
or
or
aaa
std
adc
adc
push
jmp
xchg
sbb
aad
pop
in
or
and
inc
fld
inc
xlat
jo
jmp
jp
dec
mov
dec
mov
sub
std
sub
movsl
inc
sub
mov
xor
xorl
xor
mov
sub
mull
jo
sbb
loop
xlat
lcall
imul
mov
test
and
lods
and
divl
fisttps
mov
or
aad
xchg
cmp
iret
movsb
inc
dec
loopne
adc
adc
repnz
xor
cmpsl
cmpsb
inc
add
dec
inc
adc
dec
cmc
xchg
stc
and
shl
loopne
add
rolb
stc
sub
mov
in
ret
fwait
bound
call
lret
enter
mov
xor
adc
sar
mov
or
push
push
movsb
jo
dec
jae
scas
call
arpl
or
jp
divb
push
inc
fsubp
mov
ss
inc
addr16
data16
mov
fs
and
idivl
loop
outsb
out
cmp
stos
into
jle
lea
shlb
or
je
or
dec
jg
jo
ja
mov
jp
fildll
test
mov
outsl
dec
fwait
fwait
cmpsb
sub
jg
push
or
rolb
loop
pop
mov
xor
jae
push
pop
pop
in
mov
fsubrs
push
lds
inc
rcr
fldl
jb
pop
push
lods
gs
ljmp
push
jnp
mov
pop
push
xchg
cld
orb
add
divb
push
sub
divb
test
mov
mov
mov
sbb
add
cmp
icebp
cmp
ret
cmp
or
xchg
adc
jmp
xchg
popa
sbb
cmovl
xor
sahf
jns
jmp
mov
adc
inc
pop
loope
adc
test
pop
scas
or
andb
sbb
add
sub
sbb
enter
mov
lods
out
clc
mov
sahf
mov
sub
inc
push
repz
jne
mov
xor
pop
xor
sbb
sub
cmpsb
adc
and
imul
push
mov
dec
daa
sbb
jno
mov
xlat
xlat
xchg
popf
push
les
mov
stos
cmp
sbb
std
push
cmpsl
jae
or
mov
call
mov
jl
out
js
ret
imul
jle
mov
or
jb
nop
xlat
rcr
test
insb
addr16
push
xorb
add
mov
xchg
sbb
sbb
mov
scas
ficompl
adc
or
inc
pushf
les
mov
xlat
inc
jmp
jnp
aaa
cmp
sahf
jg
adc
xchg
mov
inc
aas
mov
repnz
push
scas
cmp
xor
xchg
lea
sahf
or
in
and
dec
ds
push
or
stos
or
xlat
daa
inc
insb
fsubrp
out
aad
mov
cmp
fcom
out
test
clc
inc
and
xchg
movsl
inc
jns
in
cvttps2pi
pop
jmp
js
jnp
and
sbb
sub
js
cmc
pop
cltd
test
movsb
inc
test
repnz
and
cmc
lods
test
sbb
cmp
shrb
shld
xchg
xchg
ficomps
or
std
ja
add
aas
xchg
dec
lahf
fdivrs
in
xchg
pop
inc
jp
or
out
ljmp
insl
add
mov
pop
out
rcl
jecxz
mov
out
push
pop
sarb
lahf
shll
adc
xchg
out
aad
sbb
lcall
jle
mov
mov
jp
rolb
shll
mov
xor
lods
jo
mov
and
icebp
xchg
or
fcmovnb
xor
xchg
insb
dec
jmp
sub
lea
push
mov
sub
dec
mov
pop
jae
add
test
inc
mov
cmc
rclb
into
fwait
push
add
sbb
push
cltd
cltd
mov
fwait
sbb
pop
icebp
out
xchg
loopne
mov
push
dec
adc
jae
push
movsb
lret
mov
mov
sub
jb
int
dec
dec
pop
loopne
shrd
mov
insb
push
js
add
sarb
mov
xor
xchg
pop
lock
push
aaa
push
pop
test
cmc
fimuls
outsb
add
stos
fnstenv
pop
nop
fsubl
sub
lods
sub
sub
pop
imul
xlat
lahf
mov
ljmp
ljmp
stos
imul
jl
test
and
inc
jnp
jno
test
xchg
and
mov
mov
dec
dec
xchg
ret
mov
dec
sub
jge
ret
adc
and
sbb
inc
jp
dec
out
and
cmp
xchg
xor
lahf
mov
icebp
iret
or
push
inc
test
xchg
ja
inc
gs
mov
lds
jae
xchg
mov
xor
int
test
mov
jmp
iret
ret
inc
notl
mov
out
lret
adc
pop
rolb
or
pusha
insb
out
dec
sub
out
test
bound
sbb
aaa
js
mov
cld
ret
xor
js
cmp
jo
insb
mov
push
inc
xchg
adc
movsl
sbb
and
call
or
dec
loop
dec
je
mov
mov
into
cwtl
xchg
int3
stc
fstps
inc
fdivr
inc
cltd
jecxz
mov
mov
adc
clc
mul
inc
xor
or
loopne
and
mov
or
jnp
mov
pusha
mov
jecxz
inc
mov
repz
sub
or
iret
push
pop
pop
daa
mov
popa
xor
out
mov
add
xchg
sbbb
push
in
call
sbb
mov
sbbb
fsubl
xchg
dec
xchg
cmp
js
mov
and
inc
hlt
mov
pause
pusha
scas
xchg
jp
test
fsubl
shrl
xlat
mov
popa
sbb
je
dec
pop
xchg
into
mov
push
repnz
popf
in
pop
lods
leave
repz
sahf
pop
jge
sub
mov
sub
jb
mov
bound
addr16
cmp
mov
cltd
sbb
cmp
movsb
out
mov
sub
push
leave
push
in
lret
popf
add
jge
cmp
mov
push
cmp
adc
add
gs
rcrl
push
mov
repnz
jl
push
adc
mov
dec
sti
cltd
lods
mov
lret
or
ficompl
aas
dec
push
adcb
mov
pushl
fwait
mov
outsb
out
dec
cmpsl
les
arpl
test
adc
cmp
daa
js
mov
adc
mov
dec
ret
push
int3
and
mov
iret
loopne
mov
push
repz
pushf
lret
sub
iret
sub
adc
lock
cmp
mov
lcall
mov
lret
mov
mov
shll
fists
or
ljmp
jge
rcrb
int
ljmp
mov
push
stos
jae
sar
cmp
enter
lcall
add
jmp
fstpt
iret
jecxz
jbe
mov
arpl
adc
jbe
out
int
aas
push
aam
repnz
sbb
jbe
cmp
jns
jbe
rolb
sbb
dec
int
jg
push
push
sub
dec
or
andl
or
test
js
or
inc
xor
ficoml
loope
mov
dec
scas
pop
dec
out
std
sbb
pop
sbb
pop
pop
jge
aaa
outsl
xchg
enter
cmpsl
dec
mov
sub
jmp
push
cltd
mov
cltd
cmp
shrl
js
pop
imul
jle
jno
punpcklwd
insl
jo
mov
dec
xchg
and
mov
or
mov
clc
jmp
add
loope
sub
minps
shll
loop
std
into
enter
cmpsb
jno
inc
out
sbb
cmp
sub
jo
fs
mov
and
cwtl
sbb
vpunpcklbw
inc
stc
les
sub
dec
and
mov
jno
mov
inc
divl
inc
sbb
test
in
and
xor
sub
icebp
lret
insl
test
popa
and
enter
adc
pop
adc
out
jo
fwait
cmpl
pop
push
repz
sub
sub
int
inc
movsl
out
xlat
mov
pop
into
fwait
adc
fdivrp
xorl
popf
std
mov
inc
mov
mov
xor
aas
repnz
rcr
jle
sub
fldcw
add
cmp
fmuls
xchg
movl
psubsw
je
fdiv
push
ficoms
mov
ficompl
dec
xchg
xchg
dec
pop
std
dec
test
inc
add
mov
mov
leave
and
sbb
jnp
imul
or
jp
xor
jp
xchg
out
cmp
popa
cld
outsb
or
cld
inc
pop
adc
fistpll
dec
stos
daa
sti
jno
xor
aaa
in
mov
adc
rorl
mov
js
arpl
pushf
test
dec
and
mov
mov
insl
lcall
xchg
fbstp
loope
sub
mov
cmc
adc
jbe
lock
jns
mov
popf
jo
xchg
push
inc
push
inc
test
adc
and
aam
jmp
aad
cwtl
lods
adc
rcll
sbb
sub
pop
sub
mov
aaa
jg
cmp
dec
add
je
pop
loop
sbb
inc
test
jno
popa
mov
mov
xor
insb
sub
cmpsb
pop
js
mov
pop
cmp
sbb
inc
and
cltd
dec
pop
jge
mov
std
out
sti
cmc
add
test
pop
orl
cmp
lock
jnp
lods
jl
sti
mov
out
push
jo
sahf
mov
shlb
bound
inc
dec
pushf
pop
fadd
add
and
or
stos
xchg
xchg
pop
push
or
mov
jbe
gs
in
adc
jb
push
jnp
icebp
icebp
gs
loop
cli
gs
fnstcw
push
scas
push
xchg
mov
sbb
dec
and
les
adc
cld
rcl
sub
sti
fmuls
repz
shrb
sub
lahf
xchg
mov
or
popf
sbb
bound
pop
mov
loope
shlb
xchg
jl
xchg
test
pop
pop
mov
lahf
mov
mov
inc
adcl
and
push
pop
sbb
fisttpll
cwtl
mulb
out
std
hlt
jo
jno
inc
and
xlat
sub
inc
mov
pop
nop
cmc
push
loope
cmp
sub
sbb
cld
scas
cmp
push
loopne
push
and
xor
fistpll
int
xor
inc
mov
test
repz
mov
sub
test
jb
ss
call
pop
cmc
das
int
add
adc
scas
xor
cmp
js
or
cmp
push
pop
decl
mov
add
push
movb
mov
jbe
xor
subb
xlat
std
pusha
je
lcall
pop
mov
fsubp
repz
inc
and
lea
mov
pop
icebp
dec
jns
adc
outsb
popf
mov
cmpsl
jecxz
xor
test
push
cmp
ja
cltd
ljmp
js
filds
inc
mov
ret
xor
adc
and
ret
xchg
movsb
in
mov
jnp
in
mov
in
sub
lea
jle
adc
rcrl
dec
push
inc
imul
mov
lds
lods
mov
mov
cs
arpl
out
cmp
cmc
push
adc
cwtl
adc
xchg
in
sbbb
add
sub
sbb
fcomip
inc
add
pop
mov
stc
in
cmp
jl
sub
mov
adc
dec
push
cltd
je
lret
popf
jb
cli
test
pop
aam
dec
adc
push
addr16
mov
test
pop
clc
test
inc
cwtl
iret
in
and
mov
sbb
sub
aam
mov
dec
mov
bound
sbb
das
aad
xor
push
add
mov
adc
pop
pop
inc
jnp
dec
sub
adc
leave
sbb
test
cli
stos
and
into
inc
je
cmp
lds
addb
fwait
scas
in
adc
hlt
xlat
and
lcall
loope
lahf
out
jnp
push
xchg
cmp
js
jle
in
xor
push
inc
test
add
xchg
pop
push
popa
cmp
jecxz
xchg
adc
fstps
rol
ficoms
iret
xchg
addr16
js
inc
repnz
inc
mov
popa
aad
sub
mov
cmp
sbb
cld
xor
add
jle
xchg
mov
mov
and
out
sti
pop
dec
cmpl
mov
adc
jbe
cld
xor
adc
outsl
push
mov
repz
jo
pushf
pop
inc
mov
mov
xor
cmp
jmp
mov
lds
push
adc
pop
sbb
loopne
pop
sbb
js
jb
mov
and
cmp
jbe
jne
push
shlb
jge
into
outsl
testb
add
xor
mov
movsb
push
in
mov
xor
in
xchg
cli
fidivs
lock
in
sbb
xlat
pop
lds
mov
or
and
mov
fsubrl
leave
push
cmp
mov
cwtl
mov
add
outsl
aam
cmpb
lcall
xor
in
push
loop
pusha
jo
stos
fnstcw
and
mov
add
mov
sbb
nop
addl
subl
cmp
stc
fistpll
decl
cmpsb
push
test
cs
lock
pop
clc
insb
pop
out
xchg
xchg
xchg
repz
inc
adc
xor
adc
sub
std
dec
pop
mov
and
mov
jmp
ret
jmp
mov
shl
inc
sahf
cs
sub
jne
add
pop
dec
xor
out
pop
mov
lds
jnp
mov
pop
or
xchg
pop
mov
cli
inc
push
rcrl
popf
popl
rcl
pop
mov
or
inc
and
mov
or
mov
mov
pop
mov
iret
jno
xchg
add
jno
cmp
cmp
sahf
leave
cltd
sbb
shrl
enter
push
and
ljmp
mov
lret
inc
jmp
popf
hlt
mov
faddp
push
and
cmp
rcl
pop
dec
ds
dec
lret
push
lahf
std
dec
jl
and
add
xchg
imull
jnp
es
leave
and
jno
mov
mov
notb
iret
ds
pop
into
pop
or
xchg
mov
pop
jecxz
fcmovnbe
rcrl
in
inc
js
xchg
jo
jmp
mov
jb
jecxz
dec
add
cmp
jae
cmp
fildl
xchg
notb
mov
scas
incb
je
jle
mov
ljmp
fldl2e
out
stos
test
jno
mov
mov
inc
cli
ror
lods
adc
clc
cmp
sbb
roll
addr16
adc
inc
js
sahf
imul
sub
imul
mov
aaa
iret
mov
pushl
and
lret
icebp
push
in
jg
scas
rcl
xor
jecxz
fcmovnbe
ret
sbb
stos
jg
call
jno
data16
data16
popf
and
inc
lea
cmc
imul
rol
orb
jno
jno
cmp
lret
testl
jge
xor
and
push
lret
pusha
mov
mov
jge
int3
outsl
jle
ret
popf
mov
sub
xlat
int3
pop
push
mov
mov
lahf
enter
add
xchg
pop
or
xlat
in
pop
in
out
mov
ficoml
inc
mov
push
aad
push
pop
pop
shll
lods
lods
popa
inc
push
push
test
out
cmc
in
xor
or
imul
lcall
and
mov
aad
les
adc
pop
lret
mov
mov
and
xorb
cltd
sub
jmp
inc
pop
sub
push
fnstenv
add
push
popa
mov
or
imul
or
push
outsl
lods
mov
imul
cmp
shll
add
loop
or
pop
sub
outsb
and
cmpsb
sub
insb
sub
in
cwtl
clc
cmp
inc
jmp
cmp
stc
ficoms
movsl
mov
mov
aad
fldenv
mov
cmc
cmpsl
inc
push
push
adc
in
hlt
xor
cmp
mov
ret
into
test
sub
fwait
iret
in
gs
stos
sub
pop
cs
ret
sub
iret
sbb
jnp
insb
sub
add
mov
push
mov
dec
cld
outsb
sbb
sbb
movsl
jl
mov
sbb
clc
pop
adc
add
das
cmp
leave
mov
stos
cs
int
inc
fstpt
push
loop
jl
cmp
pop
ret
jmp
adc
xor
into
adc
ficomps
sbb
cmp
insl
dec
es
sub
mov
mov
pusha
adc
xchg
lods
sar
cmpsl
and
xchg
xchg
lret
xchg
out
subb
out
or
gs
mov
arpl
dec
std
fisubrs
ret
shl
add
sahf
mov
xor
js
mov
sbb
jae
fadd
pushf
in
ljmp
scas
inc
fisubl
dec
mov
lea
mov
pop
test
ret
push
jns
jnp
bound
aaa
mov
imul
mov
fcomip
or
ds
pop
test
xchg
push
mov
sarl
mov
push
subb
push
cmp
xor
xchg
xchg
xchg
xchg
jb
jle
xorb
in
dec
mov
jmp
push
adc
daa
cmp
sbb
lods
sbb
outsl
dec
sub
sbb
fildl
aas
bnd
stc
inc
mov
out
pop
pop
mov
or
xorb
add
or
mov
mov
cwtl
fnstcw
mov
mov
mov
mov
add
jbe
add
call
dec
cmp
cli
rcrl
out
in
sbb
sub
cld
inc
insb
inc
lds
ljmp
loope
inc
or
jb
jg
addr16
mov
js
enter
inc
adc
pop
clc
push
mov
rolb
add
int3
adc
into
popa
inc
lret
mov
dec
stos
mov
pop
bound
sub
lret
cmpsl
push
xchg
mov
jl
jecxz
xor
fwait
movsb
shr
adc
jbe
clc
cmpb
lock
or
xlat
and
or
and
cmp
test
sbb
add
add
das
push
adc
or
inc
cli
aam
pop
mov
jns
arpl
mov
cld
inc
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
jmp
repnz
repz
je
or
addb
cmpl
cmp
dec
mov
dec
lahf
shlb
mov
xor
sbb
xor
clc
lea
and
jmp
lret
movsl
mov
les
mov
repnz
sbb
test
fisttps
mov
sub
cli
fldl
lds
decb
mov
les
lret
push
popa
jecxz
pop
cmp
leave
leave
pop
mov
rcrl
test
aam
out
push
push
add
dec
sbb
xchg
mov
ljmp
jbe
push
xchg
inc
xor
hlt
mov
push
sar
cmp
in
jl
lods
cmpsb
or
iret
xchg
into
dec
clc
mov
pop
fiadds
repnz
daa
mov
sub
mov
out
loop
stos
hlt
out
shrl
xor
jb
jmp
cli
dec
cmp
cltd
popf
dec
push
int3
mov
loope,pt
out
mov
cmp
jns
imul
or
lret
xor
pop
add
ret
hlt
ret
and
idiv
pop
mov
jno
cmpsb
cmp
imul
sbb
jp
pop
xchg
imul
data16
mov
pextrw
pop
push
stc
ret
pop
sahf
pop
mov
inc
test
sahf
aas
and
inc
rsm
dec
iret
jnp
stos
mov
test
cs
sahf
xchg
int
ss
push
ret
movsl
xor
ret
xlat
das
jb
pop
lods
sbb
xor
ja
inc
ret
imul
ret
xchg
lods
xchg
mov
std
loope
dec
mov
lahf
jae
lea
inc
lea
lods
jp
daa
mov
fmuls
arpl
inc
jae
inc
push
push
mov
icebp
or
mov
mov
lods
ret
out
clc
fimuls
lcall
pop
mov
add
cmp
hlt
ds
mov
push
pop
add
mov
iret
lock
scas
fidivs
in
push
jmp
jae
xlat
iret
pop
or
aas
pop
xor
fildll
sbbl
push
stc
xor
mov
test
adc
mov
sub
mov
jne
jns
imul
cmpsl
sub
add
mov
addr16
push
xor
jmp
mov
push
mov
dec
test
pop
mov
push
push
movsb
xchg
adc
push
arpl
stc
out
test
stos
mov
outsb
mov
scas
dec
int3
push
jl
and
das
lahf
inc
sbb
clc
sub
icebp
dec
mov
jle
dec
sbb
jbe
dec
out
ljmp
pop
jno
xor
add
scas
mov
cs
mov
mov
pminsw
clc
lret
jmp
daa
jle
je
divl
je
dec
ds
rcll
call
es
dec
push
bound
movsl
fmull
pop
iret
ja
repz
mov
ja
sub
lds
inc
xchg
add
push
or
imulb
cli
idivl
and
sbb
push
cltd
pusha
cs
add
xchg
cld
dec
cmp
bound
adc
in
mov
jae
scas
hlt
adc
int3
push
out
mov
enter
in
cmp
mov
push
movsl
fsubrs
loope
sub
jno
stc
enter
and
push
jnp
test
cmp
add
mov
adc
mov
sbb
adc
add
xor
mov
mov
mov
std
hlt
push
or
or
fdivp
mov
in
jecxz
jae
mov
fdivrs
cmpsl
lods
pop
or
or
scas
imul
bound
incl
adc
mov
inc
push
inc
push
stos
adcb
dec
data16
cmp
push
ja
dec
lods
pop
or
out
jp
mov
or
adc
lods
out
fisubrs
js
mov
xchg
repnz
cwtl
stos
ss
gs
jl
mov
popf
push
subb
inc
xor
xchg
cmp
mov
mov
test
mov
call
cli
gs
sbb
or
bound
adc
cld
out
mov
sbb
sbb
loop
sti
push
int
mov
and
pop
mov
cmp
cmp
popf
mov
push
ret
addl
jno
jmp
jge
test
ret
sahf
in
push
out
dec
add
add
lahf
or
jno
jg
aad
fdivs
pop
rorb
pop
nop
xor
dec
ja
mov
in
lea
adc
lcall
mov
aam
cmp
in
rorl
ret
es
data16
mov
xchg
hlt
or
popf
outsl
mov
mov
imul
mov
or
in
sub
pop
loopne
inc
and
popl
pop
hlt
jbe
call
jle
jno
loopne
push
adc
inc
fisubs
sub
mov
pop
jl
ja
pushf
or
cmp
mov
loop
sub
imul
fidivrs
cmp
mov
jbe
lret
enter
push
lret
lret
frstor
adc
ficompl
xor
js
xchg
test
add
mov
leave
push
jnp
shlb
adc
mov
jns
movsb
popf
sub
adc
jb
xchg
inc
xor
fs
in
or
inc
ds
cmpsl
pop
shrb
jb
ss
push
cmc
daa
not
sbb
fistpll
or
mov
mov
mov
stos
adc
shlb
sbb
pusha
sub
and
outsb
mov
mov
fistpll
ss
push
aaa
jnp
or
es
xchg
insb
xchg
arpl
push
dec
mov
mov
test
iret
cmp
pop
jo
outsl
mov
ds
add
inc
adc
jp
call
movsl
repnz
mov
jp
in
sahf
idivb
jne
out
addr16
fisttpl
mov
icebp
push
jge
lcall
xor
stos
cmp
push
cmpsl
sbb
xor
adc
leave
mov
lods
adc
pop
xchg
cmp
stc
jl
jge
push
dec
cld
cmpsb
adcl
nop
push
jecxz
add
in
adc
nop
jnp
add
fistpl
in
mov
push
outsb
push
xchg
fldl
out
jbe
das
fnstcw
and
mov
push
decl
testb
ljmp
divb
icebp
add
cli
iret
mov
push
das
dec
jnp
mov
push
lret
imul
add
mov
jb
repnz
mov
sbb
mov
ja
or
xchg
mov
lds
and
sbb
mov
lock
mov
aas
xchg
movsb
scas
jmp
test
clc
dec
cmp
mov
das
rcrb
mov
out
lea
xor
bswap
ljmp
stc
in
cmp
pushf
repnz
and
sti
mov
loope
mov
push
xchg
test
loopne
sub
adc
cmp
xor
mov
xchg
mov
add
call
data16
fst
add
mov
xor
and
xchg
xchg
and
and
ds
cmp
mov
js
js
cli
dec
cmp
dec
xchg
scas
xchg
mov
push
shlb
mov
les
inc
mov
movsb
cmpsb
dec
jns
sub
jl
ss
shl
inc
inc
push
sub
punpcklbw
aaa
in
call
jo
sahf
inc
cmp
enter
add
pop
test
sti
dec
add
cmp
mov
sub
jbe
pusha
jmp
jns
inc
adc
push
add
lds
nop
xlat
dec
call
sub
data16
testl
sbb
jmp
ret
push
popa
sub
insl
repz
cmp
into
das
repz
mov
jge
js
ret
xchg
repz
int3
cmp
outsl
xor
fistps
jmp
setp
fcoms
push
ret
rcrb
sub
adc
mov
or
repz
pushf
inc
inc
decb
ljmp
popf
sub
jl
lods
in
add
imul
inc
dec
addr16
test
sbb
lods
inc
mov
pop
repnz
mov
in
inc
popa
inc
push
sbb
scas
mov
inc
scas
out
push
add
lret
xchg
add
mov
cmpsb
jnp
pop
rcrb
sub
lret
insb
stc
loope
test
dec
int
or
sbb
bound
or
xchg
xor
mov
cmp
cmp
leave
gs
sub
dec
insl
lret
mov
mov
and
mov
mov
lcall
rorl
cmp
sub
and
lret
out
mov
movsb
scas
clc
adc
subl
fucomi
dec
in
xchg
rcll
jns
mov
xlat
sbb
test
sbb
repz
dec
adc
mov
inc
lahf
pop
lret
insl
into
ror
jle
mov
mov
addl
cld
xchg
in
rol
lahf
outsb
xchg
dec
inc
sahf
nop
mov
jmp
leave
mov
fsts
add
notl
xchg
cmp
jo
out
negl
ficoms
fdivrl
fdivrl
mov
in
aas
loopne
lea
lods
mov
ficompl
pop
push
out
jmp
fcmove
ret
lods
push
fadds
stos
stc
stos
cmp
stc
xor
cs
fistps
pop
dec
mov
push
add
test
cmp
or
cwtl
or
xchg
pop
loope
or
or
into
aad
imul
pushf
stos
scas
mov
cmc
push
pop
test
push
aad
adc
adc
jae
sub
dec
push
mov
jmp
cmpsb
xchg
xchg
xchg
std
shll
orb
mov
jp
sbb
push
stos
test
cmp
out
mov
adcl
inc
xchg
adc
ret
stos
xlat
or
jnp
in
and
jmp
aad
loop
cmp
xchg
dec
mov
or
lahf
or
dec
mov
lods
lock
rcll
dec
lods
lods
cmp
jg
test
stc
dec
popa
fdivrs
push
adc
dec
add
xor
call
imul
es
mov
pop
daa
mov
outsl
sbb
jo
sub
xchg
push
fwait
pop
insb
adc
lcall
das
pop
push
cli
and
iret
mov
sub
and
mov
mov
sub
add
mov
and
inc
inc
ds
xchg
push
lock
mov
or
imul
jecxz
cs
shlb
gs
loopne
jp
fisubrl
ja
pop
in
pop
outsb
in
add
inc
movsl
mov
and
mov
out
dec
jg
jns
mov
jns
outsb
sahf
dec
cltd
jg
loopne
test
insl
repnz
jb
outsb
outsb
xchg
sbb
pusha
fidivrs
stos
icebp
icebp
add
push
cmp
ljmp
sub
jp
insl
cld
dec
fstl
mov
mov
xor
ficomps
hlt
sub
xchg
pop
stc
aaa
jnp
pop
sbb
inc
rolb
sub
dec
insl
jbe
sub
pop
sub
inc
cmp
imul
fisubl
xchg
jb,pt
mov
push
jg
shrb
xchg
ret
dec
adc
push
or
mov
dec
and
sub
cmp
or
mov
fnstcw
out
sahf
xlat
xor
sbb
cwtl
push
in
jge
pop
push
mov
iret
or
mov
ljmp
or
mov
xor
adc
out
cmpsl
add
inc
clc
xlat
stc
mov
addr16
out
pushf
mov
and
mov
imul
sub
mov
mov
sub
jl
xor
pop
fsubrs
mov
idivl
sbb
rcll
push
outsl
push
pop
jp
push
subl
and
inc
pop
pushf
leave
or
dec
jns
push
mov
cli
outsb
jl
fbstp
into
mov
bound
adc
xchg
into
sub
bound
cltd
jle
lret
imull
aad
enter
cmp
loop
loope
add
je
mov
movsb
mov
sahf
jecxz
fcoms
bnd
fidivrs
add
leave
std
add
mov
mov
xchg
testl
in
fstps
pop
xchg
ja
stc
mov
xor
pop
jne
adc
xchg
fadd
hlt
mov
dec
pop
bound
fnstsw
out
sub
xchg
pushf
adc
rep
inc
outsb
pop
lods
xchg
pop
pop
mov
fisubrl
sbb
jnp
jbe
push
jne
in
push
adc
pop
sub
test
jbe
hlt
dec
hlt
lret
cmp
mov
mov
and
sub
xor
mov
ret
cmp
push
cmp
push
jge
cmp
nop
cltd
and
test
frstor
cltd
out
cwtl
adc
testl
pusha
mov
push
adc
mov
xor
popa
das
and
sbb
push
sti
jnp
pop
jb
call
mov
adc
mov
stos
divb
fcmovne
and
mov
outsb
cmpsb
test
fidivl
loopne
xchg
add
push
mov
movsl
xchg
mov
mov
into
dec
dec
mov
push
ret
out
mov
vunpckhps
decl
mov
inc
cmp
mov
cmc
jb
sahf
wbinvd
insl
sub
sahf
ja
pop
xor
ret
jae
xchg
ja
sarl
xchg
cs
cwtl
call
js
rcll
jecxz
push
mov
stos
mov
push
mov
cmp
mov
lret
decl
popa
cmc
dec
aaa
fiadds
push
mov
push
pop
inc
stos
adc
es
lahf
xchg
and
pop
push
dec
aad
cli
mov
dec
or
xchg
imul
in
ljmp
ja
mov
andl
push
adc
cmp
in
pop
push
incl
sub
mov
mov
fisubl
jnp
fnstenv
xchg
jno
cmp
in
inc
mov
sub
jg
xlat
aam
sbb
pusha
mov
add
push
pop
add
push
cli
std
adc
scas
enter
xor
fs
dec
test
sub
fisttps
xchg
test
xchg
add
xchg
filds
gs
jne
mov
iret
sbb
inc
js
xchg
dec
sub
pop
ds
imul
xchg
aas
dec
push
adc
cwtl
inc
outsb
sbb
hlt
mov
cmp
push
pop
mov
push
cs
adcb
inc
cmp
push
push
push
nop
sbb
mov
sbb
lcall
dec
test
daa
dec
ja
sub
mov
mul
cmpsb
insl
pop
test
jo
sub
ljmp
stc
mov
cmp
inc
pop
cmp
ror
dec
ret
lret
xorb
sbb
add
cmp
roll
repz
mov
cmp
jno
jmp
and
aaa
sahf
imul
and
jecxz
add
repnz
sub
add
aaa
fs
xor
mov
std
sub
xchg
xchg
lcall
in
jmp
pop
loope
loope
xor
cld
insb
inc
sahf
mov
cmp
jnp
adcl
mov
xor
xchg
aam
fidivrl
and
inc
scas
adc
add
out
cmc
icebp
imul
das
pop
cmp
dec
pop
inc
mov
pushf
push
movd
or
adcl
xchg
jg
ret
loope
adcb
jle
inc
stc
out
lcall
fcomps
adc
push
fildll
insb
das
in
fs
arpl
xor
into
lds
xchg
dec
test
jmp
xor
fcomip
pop
pop
loop
dec
inc
sahf
add
mov
out
daa
nop
xor
pop
mov
inc
or
nop
popf
nop
add
pop
jmp
cmpsb
inc
xor
mov
lret
ss
sbb
or
mov
push
or
clc
fidivl
mov
pop
lea
pop
sbb
js
push
lock
mov
outsl
aad
add
in
mov
mov
jne
lcall
dec
dec
pop
mov
dec
bound
mov
fimuls
xor
push
jae
rorb
dec
rcr
stos
jno
lds
lahf
lods
cmp
mov
in
pusha
xchg
sarb
mov
or
mov
mov
fisubl
mov
pop
movsl
dec
mov
inc
mov
movsb
out
push
cmpb
adc
cltd
adc
imul
imul
adc
inc
popf
popa
divl
repnz
dec
mov
lcall
sti
pop
icebp
cltd
xor
pop
scas
lahf
jp
jno
xor
lea
jecxz
cmc
faddl
outsl
dec
sub
xchg
jge
mov
sub
pop
sub
in
out
lret
test
mov
mov
cmpsl
xor
in
xchg
or
movsl
xchg
dec
lds
popa
aaa
cmp
fistpl
aam
lcall
add
sarb
ss
rcrb
push
mov
sti
jnp
push
cmp
and
aad
fcmovnb
xchg
sahf
les
jo
xor
movsb
push
pop
jbe
xor
pop
outsb
pop
sbb
in
stos
and
and
add
test
xchg
xchg
in
sarb
ficoml
sbb
and
pop
mov
add
cmc
les
cmc
cmp
cmp
pop
imul
xchg
pop
xor
xor
mov
nop
mov
adc
lock
pop
pop
push
test
or
or
sub
popf
xor
fstp
mov
pop
fwait
lcall
dec
jl
repz
stos
movsl
xlat
mov
inc
sahf
sarb
pop
lahf
test
xchg
lods
aam
mov
adcb
add
xchg
push
int3
in
pop
cmp
ret
lcall
popa
insb
rolb
std
rolb
adcl
mov
and
stc
dec
into
and
icebp
adc
mov
js
repz
les
pop
arpl
pop
mov
dec
sbb
mov
gs
mov
cltd
mov
les
in
cmpsb
stos
dec
loope
jle
pop
push
ds
dec
inc
daa
inc
inc
pusha
cmpsl
lds
mov
ret
adc
stos
fisttps
in
mov
lcall
mov
inc
jmp
rep
xchg
pop
mov
test
aas
inc
adc
roll
push
jmp
shlb
je
pop
and
sti
inc
dec
shl
xor
loope
iret
sub
sub
inc
mov
jbe
cld
loope
aas
ret
leave
test
fldenv
shl
aaa
sbb
push
dec
inc
xor
rcrl
aaa
ljmp
xchg
orl
std
packssdw
lret
and
repnz
mov
aad
jp
addr16
fistl
enter
mov
cs
in
les
jo
faddl
push
divl
imul
cmp
adc
or
or
out
mov
daa
mov
adc
pop
lret
jmp
daa
movsb
ror
repnz
cmp
push
outsl
mov
ficomps
sarl
cli
mov
xchg
test
scas
lahf
out
lock
repz
loop
rorb
dec
mov
cltd
inc
push
int3
mov
loopne
inc
ds
int3
push
les
mov
jmp
xchg
dec
sbb
adc
stos
sti
add
mov
cmc
movsl
mov
aaa
and
cmp
jne
inc
loopne
mov
dec
mov
mov
mov
jb
in
xchg
inc
mov
scas
pushf
je
hlt
lea
push
sbb
push
cli
inc
xor
jge
movsb
mov
fs
lock
fcmovne
fwait
adc
cmp
jecxz
pop
mov
nop
mov
in
and
pop
sbbl
mov
add
mov
or
shrl
sub
std
pop
mov
xor
rorl
in
add
mov
js
lahf
clc
mov
pop
jno
int3
or
fnstsw
mov
mov
push
xchg
test
mov
mov
into
sub
lock
add
push
bsr
push
xlat
leave
fdivs
inc
push
out
push
and
dec
mov
add
push
inc
jl
jo
xlat
in
add
test
arpl
push
add
cmp
out
into
fwait
addr16
fistpll
shlb
mov
cmp
stc
cmc
out
lcall
jb
and
and
pop
xlat
sarb
cmpsl
pop
ret
popa
out
pop
add
notl
icebp
popf
les
lret
pop
sahf
clc
cmp
les
inc
sti
stos
and
pop
es
push
movsl
sub
loopne
add
ja
addr16
rcrl
sub
in
and
sub
mov
add
dec
or
fildl
lahf
jge
dec
dec
push
dec
je
das
mov
std
sub
fcmovu
inc
sub
arpl
xchg
pop
jg
cmpsl
bound
or
ljmp
inc
pop
mov
push
add
inc
sbb
push
add
mov
repnz
test
sub
and
or
inc
sbb
jl
adc
lahf
pop
test
push
rolb
icebp
pop
lret
adc
mov
mov
xchg
inc
mov
pop
sti
std
or
and
xlat
repnz
push
test
xor
jns
push
dec
dec
inc
cli
pop
cmpsb
push
addr16
test
mov
cmp
adc
outsb
loop
sub
daa
dec
cmp
push
cmp
pop
dec
sub
adc
or
dec
mov
mov
cwtl
push
inc
cmp
pop
and
xchg
mov
dec
faddl
xor
fsubr
sub
sub
mov
dec
mov
dec
outsb
test
movsl
push
subl
das
or
fisttpl
mov
aam
xchg
mov
mov
in
jbe
inc
add
orps
xchg
stos
dec
add
mov
iret
pop
out
les
lds
mov
sub
sub
mov
divl
pop
inc
pop
inc
data16
and
cld
cmovns
lods
push
jmp
jmp
cmc
lea
cltd
sub
pushf
test
shlb
xor
pushf
je
insl
mov
sbb
pusha
ja
xchg
icebp
pop
jns
and
adc
ss
adc
stc
push
loopne
in
inc
mov
mov
pop
sbb
mov
adc
dec
gs
cmp
jmp
push
mov
cltd
enter
daa
and
xchg
std
jge
test
loopne
push
pop
dec
fistl
sbb
pop
xor
fimuls
mov
mov
shll
test
or
cmp
pshufw
mov
inc
js
jb
push
out
xchg
mov
add
sub
xchg
xchg
ja
mov
ja,pt
fs
fwait
jg
les
and
pop
repz
das
jp
cmp
sbb
mov
pushf
or
popf
lods
pop
shrb
iret
pop
lcall
sbb
stc
shll
mov
or
xlat
popa
cmp
shrb
andb
ja
and
mov
sbbb
lret
es
repz
ret
ficoml
inc
mov
lock
dec
iret
dec
ljmp
nop
dec
pop
sub
loope
xchg
adc
dec
fsub
or
sbb
mov
repnz
jmp
cs
pushf
out
aas
cmpsb
inc
push
xchg
rcrb
xchg
sub
cmp
xor
xor
or
adc
mov
test
xorl
adc
lock
shlb
test
mov
push
jmp
adc
push
cmp
inc
jae
loop
dec
ss
jae
and
xor
lret
jle
lea
out
leave
adc
xchg
pop
push
loope
mov
ss
fs
pop
and
repz
inc
lods
rclb
mov
inc
arpl
dec
sbb
adc
xchg
mov
shr
aas
jle
pop
push
movsl
pop
sbbb
push
es
aas
cmc
mov
pushf
mov
les
ret
and
lret
jle
xor
push
mov
jns
lock
test
pusha
bound
or
xchg
pop
adc
shlb
cmp
sbb
es
cmp
sub
lods
inc
rcrl
mov
jno
inc
lret
pusha
add
test
mov
enter
pusha
mov
cmp
ret
lock
xchg
clc
loopne
jl
push
cli
divb
cwtl
test
xchg
sub
and
movsl
cltd
xchg
cmp
pop
test
pop
xor
dec
or
sbb
fcmovu
in
xor
mov
into
je
mov
xchg
fisttps
mov
gs
loop
in
daa
dec
cmp
add
inc
ret
in
inc
jg
mov
mov
adc
adc
lea
add
push
pop
adc
clc
imul
testb
shrl
xchg
fwait
mov
xchg
arpl
out
pop
sbbb
gs
repnz
inc
xor
pop
inc
jl
mov
rcrb
mov
mov
pop
inc
pop
xchg
daa
jne
das
jge
jno
popa
ljmp
mov
dec
cmp
inc
mov
insb
inc
xchg
cli
inc
lret
mov
mov
lds
mov
stos
push
imul
movsb
out
cs
inc
ljmp
xor
or
lock
and
xorb
cli
xchg
cli
loop
cmpsb
clc
dec
mov
dec
inc
mov
mov
add
jl
fwait
mov
cwtl
nop
mov
or
pop
lock
fldt
fisubrl
push
dec
inc
mov
pop
ret
adc
and
adc
inc
sbb
push
or
int3
cmp
in
jnp
and
push
sub
fidivs
pop
and
ljmp
sbb
cmp
jo
dec
cmp
xchg
cmp
cs
jb
lcall
and
add
popa
out
dec
stos
push
cmp
cltd
adc
out
inc
jecxz
push
pop
insb
sbb
callw
jmp
mov
sbb
loope
fisubl
mov
cli
iret
xabort
sub
sub
loop
xchg
daa
lcall
movsl
sbb
lock
xor
fs
pop
xchg
jbe
adcb
jl
xchg
push
cwtl
xor
inc
adc
pop
test
mov
push
add
shr
jmp
pop
ror
les
sbb
test
iret
lahf
mov
mov
push
cmp
mov
jp
aaa
pextrw
ja
mov
pop
xlat
aad
jo
mov
popa
add
sbb
fimull
push
cmp
jnp
inc
shll
lar
dec
fisubl
shll
pop
out
shll
lret
sbb
lods
mov
sbb
test
mov
js
xlat
xor
stos
pop
roll
or
push
xchg
xor
xchg
icebp
pop
rcll
pop
mov
cmp
and
imul
pop
aad
xchg
test
adc
jbe
mov
mov
fisubrs
jnp
mov
xchg
mov
mov
adc
mov
dec
or
das
cmp
mov
or
in
imul
sti
outsb
fwait
bound
adc
jo
mov
cmpl
aam
mov
jecxz
data16
xchg
xchg
sbb
jns
mov
pop
adc
jb
mov
inc
jo
mov
pop
sub
in
jecxz
push
out
add
enter
das
mov
xchg
nop
lahf
mov
mov
mov
clc
fwait
rorl
mov
outsl
mov
push
pop
lahf
push
dec
sbb
sbb
push
sbb
sahf
enter
cwtl
inc
or
sub
dec
inc
xor
pop
dec
ret
adc
dec
pop
sbb
stos
loop
mov
cmp
inc
clc
jns
mov
int
in
mov
in
and
fistpl
or
or
mov
nop
adc
in
fists
xor
std
sysret
pop
fwait
les
pop
cli
cs
mov
std
stos
xlat
and
fidivl
add
xchg
jo
scas
inc
lods
stc
popf
jae
jecxz
ljmp
add
adc
stos
cmp
jmp
mov
repz
adc
lea
mov
cli
mov
jmp
mov
jnp
lock
push
lahf
xchg
daa
test
ss
outsl
stos
pusha
scas
or
mov
mov
sub
mov
jg
mov
das
inc
test
xchg
jg
and
lods
add
sarb
add
push
nop
lret
sub
bnd
push
data16
mov
sub
popf
push
xchg
out
repz
jle
cmp
in
sbb
mov
mov
adc
inc
jge
enter
pop
pop
subl
bound
mov
xorb
mov
decb
jg
fbld
mov
rorl
and
push
mov
lock
subb
mov
inc
and
arpl
cld
dec
in
push
test
or
movsl
jo
pop
addr16
orl
lahf
cmp
leave
dec
cmpsl
sahf
dec
cmp
push
fisttpll
out
jae,pt
and
cmp
xchg
pop
xchg
loopew
lret
add
jecxz
incb
out
jg
pop
cmp
or
sbb
pop
sbb
adc
inc
mov
insl
test
mov
cmp
sub
inc
adcl
sar
mov
ret
leave
sbb
arpl
xor
out
clc
jle
out
mov
stc
inc
sbb
mov
push
in
loope
jge
or
jb
xor
xchg
xchg
mov
mov
jbe
mov
push
xchg
xor
dec
inc
pop
adc
add
sub
mov
movsl
xchg
sub
fldl
xlat
insl
in
mov
cld
psrlq
inc
push
ffreep
cli
sub
lods
or
xor
mov
mov
aam
imul
mov
popa
dec
jmp
jne
pop
int3
loope
pop
xchg
les
bnd
dec
fstpt
pop
aam
fwait
xchg
xchg
mov
mov
or
pop
es
xor
shll
adc
and
test
loopne
mov
mov
xchg
imul
pop
adc
dec
pop
mov
fdivl
pause
sbb
ss
mov
push
movsb
popa
lahf
ds
lods
pushf
push
cmp
out
stos
popa
mov
out
lock
push
xchg
jg
out
clc
arpl
aam
in
mov
cwtl
sub
pop
mov
jo
jecxz
in
xlat
leave
sti
imul
aas
adc
in
xchg
cmp
mov
outsl
insb
sub
out
test
xor
fcmovne
xor
movsb
xchg
jne
lret
inc
and
xor
sub
sub
jmp
adc
test
cmp
xchg
inc
addb
cld
xchg
lret
dec
fcoml
call
movb
push
cmp
aas
nop
clc
add
dec
icebp
mov
mov
sarl
fwait
add
push
mov
hlt
xchg
enter
xchg
into
pop
sbb
data16
xchg
mov
pop
pop
sub
cmp
nop
loopne
inc
fmuls
loope
mov
pop
cmp
out
mov
cmp
adc
xchg
cmp
pop
std
cmp
adc
lahf
lahf
sarb
inc
push
push
jb
push
test
inc
scas
and
stc
int
push
sub
lods
sub
sbb
adcb
in
mov
fsubrl
xchg
lcall
push
imul
xchg
cmp
dec
in
cmp
jbe
arpl
cmp
in
cmp
push
sub
jb
enter
dec
in
xchg
into
pop
pop
jecxz
hlt
mov
pop
dec
jno
xchg
or
jo
mov
test
add
scas
out
ja
push
cli
or
ret
aam
pop
repnz
jecxz
stos
cltd
sbb
lock
xchg
mov
add
fwait
lahf
sub
outsl
loope
cmc
mov
push
icebp
mov
lds
inc
sti
outsl
bound
jno
mov
movsb
dec
push
aad
sarl
arpl
push
stc
and
inc
mov
push
test
aaa
jae
icebp
xor
inc
add
and
push
add
sub
insb
fsubs
dec
je
push
jle
xchg
je
adc
xchg
xchg
add
mov
xchg
or
aad
clc
inc
xor
fcmovnu
rol
push
pusha
cmp
call
jns
xor
and
mov
push
clc
inc
pop
mov
mov
out
sub
scas
ror
sbb
pop
pop
mov
insl
add
and
stos
sbb
aam
mov
subb
out
sahf
xchg
sbb
mov
cmp
inc
stc
dec
push
or
je
sub
push
mov
lcall
sti
rol
push
push
sbb
test
xchg
stos
ss
enter
push
mov
lahf
mov
or
cmp
cmp
adc
mov
adc
movsb
int
jecxz
popf
fdivl
inc
enter
sub
pop
out
cld
pop
push
insb
mov
sbb
mov
pop
popa
dec
add
dec
repnz
jg
gs
xor
pop
cmp
shlb
sti
arpl
loop
fbld
mov
dec
scas
jge
dec
and
mov
push
sub
and
iret
sbb
test
in
cmp
push
or
sub
fisubrs
mov
fs
insl
inc
mov
lea
mov
pop
out
icebp
jl
dec
std
rcrb
dec
mul
cmp
add
mov
clc
or
dec
repnz
mov
aas
in
ds
out
outsl
pop
mov
push
push
sbb
arpl
scas
push
fimull
in
ror
and
dec
in
sub
fwait
push
adc
jb
cmovne
test
jge
je
insb
repnz
jmp
lcall
push
outsl
pop
pmulhw
cmp
pusha
ss
pop
enter
movsl
jno
test
cmp
test
outsl
push
mov
pop
mov
jbe
xor
test
or
into
fs
cmp
inc
fnstsw
push
les
daa
ja
loop
jo
push
loope
push
xchg
icebp
outsb
int3
push
jns
xchg
jle
cmc
out
push
pop
mov
out
mov
mov
lret
and
mov
or
negb
fdivp
into
rcrl
mov
rcrl
lcall
push
push
roll
sbb
insl
mov
imul
and
bound
shll
sahf
mov
jge
sbb
insb
insb
xor
xchg
rclb
add
and
adc
nop
fldenv
cwtl
mov
movsb
cs
negb
inc
out
aad
mov
xchg
lahf
mov
iret
pop
inc
mov
fwait
outsb
cs
out
xchg
shll
push
lods
xor
mov
xor
lods
pushf
movnti
pop
lods
jmp
shrb
mov
mov
adc
ret
daa
jne
sub
push
lods
into
clc
dec
insl
adc
lods
fwait
ror
mov
call
xchg
add
pop
mov
enter
inc
lahf
inc
mov
pop
push
pop
adc
jge
roll
push
jp
or
clc
aas
ret
fstps
cwtl
sahf
pop
ficompl
or
ret
jne
out
xchg
loop
test
sub
ret
scas
repnz
xchg
lea
mov
xchg
inc
shlb
fsubr
in
fidivs
fwait
sbb
fiaddl
sub
dec
popf
sbb
aam
test
pop
test
int
imul
and
arpl
rcll
mov
loop
cmpsl
test
stos
sahf
sbb
adc
lcall
fdivs
lcall
push
je
or
add
push
iret
popa
stos
mov
pop
daa
pop
flds
lods
push
jbe
gs
sub
pop
pop
sub
dec
cmp
adc
inc
ret
les
fwait
mov
dec
fdivl
cli
aaa
add
or
out
fidivl
adc
jg
lret
sbb
push
and
ret
out
shll
pf2id
rcll
sub
in
xchg
daa
mov
and
add
mov
add
enter
inc
test
xor
sar
mov
or
in
pushf
jno
lods
outsb
lcall
dec
call
push
out
or
or
mov
or
mov
fdivrs
adc
or
dec
out
pop
sub
or
scas
or
push
push
lret
insl
inc
push
sbbl
test
xchg
lahf
mov
sahf
lret
or
lahf
insl
clc
mov
xor
int
movsb
dec
add
xchg
out
push
sahf
out
inc
sub
dec
add
rcrb
cmp
mov
and
jno
dec
dec
push
test
jle
mov
push
dec
rolb
xchg
push
cmpsb
adc
ljmp
in
mov
scas
in
adc
mov
inc
sub
fistps
pop
iret
sbb
ror
push
add
in
xchg
push
inc
adc
lock
in
pop
lea
inc
popa
mov
dec
imul
sbb
add
mov
popf
mov
loope
adc
cmp
push
cmp
fwait
ret
adc
movsl
fiaddl
push
sub
insl
sub
pusha
jl
in
rcr
lret
sbb
mov
dec
mov
xchg
jmp
xchg
addr16
fists
enter
cld
mov
adc
mov
add
sbb
pop
aad
cmc
lock
loopne
mov
js
jge
mov
sbb
cmc
jb
ret
outsb
jb
jae
cwtl
ret
sbb
les
movsb
and
aad
test
out
xor
mov
aaa
arpl
imul
mov
and
pop
insl
not
fsubs
call
pop
xchg
dec
sbb
jp
mov
inc
mov
push
xor
pop
mov
dec
adc
sub
or
jo
mov
and
push
xchg
jns
jge
cli
jg
pop
cld
adcb
std
jbe
pop
push
inc
xchg
xchg
in
xchg
call
cmp
fadds
stc
dec
pusha
ja
push
fisubl
outsl
push
imul
sbb
popa
repz
xchg
pop
ss
lcall
test
mov
sbb
std
or
xor
fistl
sahf
out
pop
dec
push
mov
inc
add
out
sarb
outsl
pushl
call
repnz
pop
pop
cwtl
push
jmp
mov
xlat
sbb
aaa
imul
cmc
js
das
and
lret
mov
call
mov
add
test
mov
cmp
movsl
std
mov
jge
lods
pop
icebp
addr16
adc
lock
sbb
cmp
pop
push
jmp
ret
pop
in
dec
in
addb
push
cwtl
pop
ljmp
xchg
inc
xor
das
mov
sbb
sub
or
cld
mov
in
mov
adc
mov
sbb
or
lret
jl
jnp
adc
stc
sub
cli
inc
pop
adc
xchg
fisttps
mov
gs
cmp
shl
add
orl
lock
push
data16
sub
push
pop
shrb
leave
or
jo
dec
testl
leave
dec
loope
jmp
inc
mov
out
jle
cmp
dec
cltd
lds
js
cs
shlb
and
cmp
lret
dec
mov
dec
sbb
gs
scas
mov
cmp
jnp
cwtl
push
dec
test
dec
dec
xlat
sbb
or
xchg
enter
or
push
pop
adc
mov
sarl
cmp
outsl
imul
xchg
hlt
int3
sarl
or
jecxz
add
nop
hlt
dec
outsb
stc
out
dec
xlat
mov
cmp
loope
sub
pop
pusha
aad
imul
xlat
adc
fldenv
pop
sbb
or
xchg
or
addb
push
in
movl
lds
pop
mov
pop
pop
icebp
or
lcall
fiaddl
mov
sub
or
sahf
xlat
je
jl
dec
dec
mov
mov
push
mov
test
popa
ss
es
std
fcmove
dec
sub
add
out
cmp
push
les
xor
into
das
push
mov
and
cmpb
mov
repnz
clc
jae
jecxz
xor
cltd
aaa
push
jmp
movl
out
pop
xor
rcrl
jle
mov
xlat
jne
xlat
mov
jge
cltd
mov
lds
xlat
cs
scas
dec
xorl
leave
lcall
xlat
add
daa
ret
aaa
mov
sbb
rolb
adc
fidivl
push
inc
and
xor
repnz
int3
rclb
mov
in
mov
addr16
rcrl
push
sbb
dec
mov
insl
stc
push
int
or
insl
mov
dec
xchg
and
sahf
add
fsubs
xlat
fwait
sub
mov
stc
push
inc
clc
or
ja
int
out
sub
push
repnz
std
pop
or
pop
scas
adc
and
outsl
lods
call
jmp
pushf
xchg
mov
jg
mov
adcb
mov
lret
mov
add
xorl
cmp
aad
adc
inc
shrl
nop
push
dec
or
imul
push
sbb
inc
int3
inc
cltd
inc
jp
and
and
rcll
mov
push
jecxz
push
insl
test
push
outsb
rclb
mov
aam
push
mul
jmp
test
sarb
sub
aad
mov
imul
mov
inc
lret
into
aas
push
popa
outsb
int3
nop
xor
pusha
adc
hlt
stos
xlat
mov
out
movsb
dec
jg
mov
or
lock
fistpl
out
mov
inc
mov
jge
mov
push
movsl
fwait
loope
mov
sub
pop
sub
das
out
imul
lret
test
cwtl
imull
movsl
inc
push
test
scas
shll
lock
leave
js
das
out
push
fstps
adc
sub
jle
mov
xor
cli
or
fstl
mov
cld
addr16
pop
outsb
sub
push
sub
jmp
sbb
cmpl
or
dec
mov
jmp
add
xor
inc
cli
inc
mov
mov
jecxz
rclb
lahf
add
imul
mov
pop
or
movsl
leave
js
paddsb
push
jae
cmp
or
cmpsb
sbb
clc
sub
fbstp
or
cmp
fldenv
jo
push
cld
push
inc
loopne
cmp
mov
pop
push
adc
fisttpl
lret
out
test
add
int
and
lcall
pop
cli
adc
movsb
adc
aad
jecxz
inc
outsb
jae
dec
fdivrs
mov
sbb
dec
jl
inc
xlat
ss
add
ljmp
jp
or
shlb
aad
or
orl
push
push
cld
adc
pop
xchg
cmp
dec
push
enter
pusha
mov
mov
xchg
sti
enter
subl
push
mov
cmp
cmpsb
or
lods
cmp
aas
inc
test
push
ret
into
xchg
xlat
out
ret
mov
mov
stc
in
mov
lahf
mov
lahf
and
xchg
ret
push
mov
xor
mov
cltd
rcl
jecxz
rcrb
je
clc
jmp
cs
rcll
dec
cmp
jne
iret
mov
mov
inc
dec
mov
pushfw
dec
scas
andb
push
in
inc
ret
out
pop
mov
mov
cmp
aam
cli
cs
sbb
dec
pop
js
fwait
add
dec
sub
inc
movsl
test
cli
jb
fs
punpckhbw
popa
xchg
mov
inc
add
dec
outsl
icebp
enter
imulb
push
add
mov
cmpsl
mov
xchg
sti
pushf
xor
inc
es
jecxz
stos
jnp
adc
scas
inc
stc
xchg
push
mov
fists
or
mov
test
push
hlt
into
xchg
dec
mov
dec
lahf
stos
xor
add
jecxz
mov
mov
into
pop
xchg
xchg
fmuls
xchg
int
subb
jno
xor
or
adc
xchg
ret
mov
sub
addr16
xchg
xor
cwtl
adc
int
sahf
arpl
lods
test
insb
adc
fmulp
int3
mov
inc
xchg
mov
jae
cmpsl
cltd
push
mov
gs
sahf
jb
jl
sbb
lds
test
inc
aaa
mov
loope
adc
rorb
push
and
andl
in
stos
mov
ret
add
cmp
xchg
dec
push
inc
inc
push
mov
pop
rorl
mov
inc
fdivs
and
stc
mov
or
push
or
mov
sub
notb
lds
dec
jns
mov
push
add
bound
aad
jmp
add
in
jne
decl
aad
lahf
and
sbb
js
cmp
mov
mov
jp
hlt
jo
xchg
icebp
jp
ja
es
into
fcom
subb
xchg
pop
sub
mov
inc
bound
or
test
sub
add
outsb
std
es
push
mov
ficoms
sub
dec
xor
in
jge
es
fldenv
bound
pop
testl
push
imul
jbe
jg
imul
in
cmpsl
pop
cmp
mov
cmp
insl
or
sarl
inc
mov
ret
cmp
inc
cmp
cld
mov
lock
lods
ja
jp
xchg
jnp
aaa
lret
adc
mov
dec
in
leave
ja
cmpsl
mov
inc
pop
xorb
mov
xor
jecxz
outsl
js
es
cmp
sub
andl
out
jle
pop
sub
xlat
in
es
or
sbb
jle
xchg
in
adc
scas
push
or
jle
fdivl
je
dec
lea
sbb
cmc
in
sub
adc
rcl
sub
mov
push
nop
cld
xchg
or
popf
sub
mov
adc
loop
dec
jg
mov
dec
mov
dec
scas
es
imul
stc
mov
les
inc
mov
stos
lcall
mov
or
aaa
jne
rclb
ficoms
les
roll
ret
adc
sahf
addl
adc
cmpsl
or
aad
sbb
fcoml
fwait
loopne
inc
iret
or
jb
das
and
pop
pop
mov
es
es
mov
out
xchg
cs
test
jmp
mov
stos
push
mov
mov
add
mov
in
out
sub
sub
sub
xchg
mov
fidivrl
cmpsb
inc
or
test
dec
cmc
cld
popf
out
mov
xchg
adc
push
js
jp
xchg
mov
adc
loop
mov
mov
outsb
and
bound
outsb
rcrl
subb
mov
inc
sarb
icebp
push
jl
cltd
push
cwtl
into
xor
dec
jb
int3
jl
cs
fs
lea
out
jge
sub
and
rcl
sti
je
jno
pop
sbb
mov
stos
mov
outsl
movsl
jecxz
xchg
test
mov
dec
outsl
adc
inc
test
lret
sbb
iret
mov
fldenv
decb
test
dec
movsb
and
lods
movsb
pop
out
int
jle
jmp
aam
cmpsb
ljmp
adc
cmp
daa
int3
arpl
lahf
xchg
and
adc
push
mov
nop
leave
sahf
pop
add
sbbb
jnp
push
clc
insb
add
out
loope
pop
dec
pop
hlt
jne
leave
clc
imul
je
xchg
in
iret
hlt
add
jb
mov
shlb
xor
mov
daa
out
adc
mov
cmp
mov
icebp
sbbb
les
lcall
sbb
pop
or
jmp
push
std
sub
cwtl
mov
pop
rolb
dec
xchg
jmp
pop
push
sub
sub
sub
shlb
lock
fimull
pop
jmp
enter
outsl
adc
imul
jns
mov
test
sbb
shll
fidivl
shll
pop
add
in
mov
pop
jbe
mov
pusha
imul
xchg
xchg
call
loop
mov
xchg
lods
jmp
pop
cmpsb
sti
shlb
add
in
mov
inc
rorb
sti
xchg
ds
int
dec
add
push
mov
das
call
adc
push
sarl
ret
adc
in
jecxz
cmpsb
andl
jb
jo
mov
movsb
jbe
mov
int3
pop
xchg
ljmp
sub
addl
cmpb
loop
xlat
fmuls
call
cmp
icebp
dec
test
clc
ret
and
mov
push
cmpsl
mov
subl
cmp
adc
xor
addb
hlt
jb
in
jmp
add
nop
push
fdivr
scas
pop
xchg
cmp
out
adc
lret
pushw
out
sbb
jle
iret
cli
dec
icebp
and
movsb
xor
jnp
andb
sub
adc
cld
lahf
fwait
jecxz
pop
sbb
mov
push
xchg
scas
xchg
push
jmp
lcall
notl
sub
dec
jg
mov
ret
ja
jg
xchg
subl
mov
leave
and
iret
dec
mov
outsb
jns
pop
pop
sub
jnp
jno
push
push
shrl
add
sbb
jmp
push
add
aas
add
push
mov
xchg
pop
jns
aad
testb
push
int
jl
xchg
mov
js
sbb
jmp
repnz
fstps
mov
xchg
mov
jbe
loopne
les
dec
ds
xchg
iret
pop
or
dec
test
iret
xor
stos
out
add
jecxz
shrb
fdivs
loope
pop
scas
add
push
es
pop
sbb
mov
stc
loope
inc
out
pop
push
sbb
iret
out
mov
cld
or
pushf
js
or
sbb
inc
pushf
pop
mov
or
sbb
sti
jmp
leave
je
mov
cmc
stc
jae
xchg
fmull
ss
sahf
in
mov
cmp
pushf
xor
movb
pop
push
je
adc
test
xlat
sbb
adc
cmp
push
icebp
insl
fsubr
sub
out
mov
ficomps
sti
xchg
sbb
and
lret
hlt
inc
mov
mov
test
std
stos
pop
lret
sbb
hlt
push
in
push
cwtl
and
push
mov
roll
adc
std
lock
adc
inc
or
rolb
ljmp
icebp
daa
add
iret
cmp
jmp
ja
mov
ret
push
mov
imul
cmp
jb
or
dec
leave
fs
ret
sarl
jecxz
stos
jecxz
adc
addr16
int
adc
enter
push
bound
xor
shrb
out
jno
aam
gs
ja
dec
pop
lock
push
aad
jl
mov
xchg
mov
pop
add
lea
xchg
loop
pushf
xchg
mov
imul
or
dec
dec
fdivp
xchg
ret
iret
push
adc
cltd
adc
push
mov
mov
dec
in
les
jp
add
iret
outsb
push
gs
into
lcall
lods
dec
lcall
cltd
sbb
xchg
pop
ffreep
int3
call
cmpsl
xor
mov
dec
xchg
pop
mov
pop
aaa
test
sbb
dec
and
scas
cmp
clc
mov
scas
add
js
dec
shll
aam
mov
fidivl
xor
aas
bound
push
xor
imul
sbb
cli
dec
test
sbb
or
push
repnz
je
or
std
adc
adc
push
into
cs
cs
push
call
xchg
mov
repnz
xchg
inc
or
or
imul
test
mov
or
mov
movsl
pop
xchg
fisttpll
repz
and
jo
inc
mov
mov
inc
aam
imul
push
sbb
xchg
xlat
and
test
sahf
dec
add
cld
xor
push
xor
orl
test
and
xor
inc
leave
xchg
xchg
outsl
mov
repz
xchg
adc
addb
or
fwait
push
jns
adc
outsl
lds
stos
test
inc
in
scas
data16
fwait
cs
sbbb
push
sub
dec
cmpsb
sahf
fdivs
jmp
cmpl
pop
ja
in
test
push
in
ret
jbe
out
das
in
adc
mov
gs
dec
and
mulb
lcall
mov
sar
insb
pop
inc
pop
jo
push
or
xor
leave
jns
pop
xchg
and
inc
mov
in
test
adcb
dec
rcl
cmpsb
adc
pushw
cmpb
ljmp
fistpll
xlat
xchg
int
mov
das
in
stc
and
mov
nop
inc
mov
std
std
das
inc
scas
sub
jnp
dec
xor
jge
inc
add
aad
negl
cld
inc
imulb
push
es
dec
xchg
test
in
pop
jbe
cmp
xor
addr16
inc
cmpsl
pop
pop
xlat
mov
jae
inc
lock
out
jle
arpl
out
sub
xor
mov
cmpb
push
xchg
and
pop
sub
and
cmp
cmpsl
push
sbb
cmp
sub
xchg
loope
ljmp
mov
in
popa
test
scas
enter
out
mov
or
mov
jns
clc
das
push
ret
aad
add
xor
sbb
add
fstps
insl
jmp
clc
mov
xor
push
pop
stos
iret
lret
inc
jns
ficoml
pop
es
shlb
std
inc
inc
test
fscale
or
out
jecxz
fwait
inc
mov
les
xchg
pop
xchg
dec
ret
or
mov
aam
mov
stc
sbb
adc
movsl
andl
pop
push
sub
mov
ds
and
cmp
xor
pop
dec
pop
adc
mov
ljmp
faddp
push
imul
inc
addr16
lret
icebp
inc
xlat
cmp
out
jnp
dec
xchg
adc
in
xchg
in
pop
stos
mov
cmc
les
aam
push
cmp
ljmp
xor
adc
fs
sbb
add
push
es
sahf
xchg
or
adc
aad
mov
je
aaa
lods
xor
mov
push
fs
or
adc
dec
mov
push
jmp
nop
je
mov
loope
jb
ljmp
adcl
lea
and
rcll
push
icebp
and
iret
push
and
or
xchg
add
push
push
and
scas
mov
dec
std
sbb
dec
sbb
cmp
adcl
adc
pop
sub
mov
xor
fmulp
pop
jle
sub
add
shll
shll
call
cmpsl
xor
out
lds
popa
or
push
xchg
lret
stc
inc
sbb
test
mov
add
dec
outsb
inc
mov
mov
ljmp
fimull
adc
push
inc
out
pop
add
cmp
js
repnz
cmp
push
jb
insb
ss
movsl
mov
push
stc
or
xchg
add
je
fcom
jl
jnp
popf
inc
add
popf
xchg
sbb
cwtl
sbb
test
sbb
mov
and
cmp
dec
push
inc
loope
les
test
and
lcall
data16
out
and
and
and
lret
inc
fcomps
movsl
cwtl
pop
mov
inc
jmp
nop
test
imul
aad
popa
jo
sbb
mov
xor
into
push
test
sbb
in
add
stos
outsl
fldenv
pop
sbb
loopne
rclb
int
lock
sub
inc
xor
cltd
inc
push
out
inc
sbb
fldl
dec
addr16
push
sub
mov
pop
dec
mov
mov
mov
fdivrs
dec
jb
mov
out
mov
mov
pusha
lock
mov
adc
and
push
mov
inc
div
add
addr16
sub
int
int3
cvtdq2ps
pop
inc
and
add
add
or
or
sub
aad
shll
bswap
pop
and
loop
pop
sub
xlat
xchg
jmp
inc
ljmp
repnz
std
insl
test
mov
and
jge
jno
arpl
cli
push
sub
jp
mov
test
rcll
lret
jne
out
inc
sbb
mov
push
cmp
dec
js
mov
int
push
or
adc
and
in
push
pop
ds
or
or
push
and
test
lods
sbb
cmpsb
push
mov
stos
mov
sahf
and
pop
mov
xchg
mov
and
test
data16
sub
and
aad
lret
dec
jmp
test
lds
jl
and
sbb
fcmovnu
adc
add
xor
daa
mov
sbb
inc
mov
es
xchg
mov
cmpsl
add
xor
cmp
sbb
aad
test
into
push
mov
inc
pop
cmc
enter
push
outsl
lock
cli
push
filds
mov
pop
dec
cwtl
adc
mov
inc
sbb
xorl
test
sbb
fbstp
aad
inc
cmp
enter
ret
mov
imul
popa
and
add
pop
inc
sbb
sbb
repnz
cmp
pop
xchg
jne
insb
cmp
pop
das
andl
popa
xchg
or
push
sbb
adc
jnp
jl
mov
and
into
inc
adc
sub
inc
sbb
pop
sub
and
lret
adc
loopne
or
in
nop
lods
mov
popa
aad
mov
sbb
mov
jmp
fsubs
ret
movsl
inc
dec
dec
fists
dec
and
rolb
adcl
mov
cmp
sub
mov
into
cld
clc
lods
fs
rcrl
fs
cmp
xor
jnp
dec
sub
repz
lcall
enter
aam
pop
daa
dec
inc
dec
xor
adc
mov
pop
add
adc
xor
dec
cld
iret
daa
stos
rcll
or
in
push
xor
in
cwtl
push
std
lods
lds
popf
sub
rcrb
flds
lcall
stc
inc
fstp
flds
mov
jbe
int3
sbb
lahf
add
pop
or
ss
bnd
js
fwait
add
pop
inc
sbb
test
out
mov
test
hlt
and
sub
lea
dec
pop
or
push
orl
loope
rol
aam
cmp
leave
ret
xchg
fisubrl
inc
gs
push
std
rcll
stos
pop
mov
cmpsb
xchg
cmp
cmp
and
or
incb
sbb
jne
mov
adc
fildl
sbb
imul
jmp
mov
inc
sbb
out
or
jnp
je
addr16
jle
xchg
pop
sbb
neg
mov
loope
xchg
and
movsb
neg
sahf
xor
cs
test
int
das
cld
inc
lret
fwait
xchg
xchg
fwait
xor
add
shrl
std
adc
std
hlt
out
insl
out
mov
adc
pop
dec
mov
adc
sbb
xchg
fstps
inc
push
push
xchg
fs
cmpsb
call
lods
in
cmc
and
lret
repz
push
xor
jbe
mov
cmp
sahf
xchg
dec
xor
xchg
push
mov
movsb
xchg
sbb
inc
jb
xchg
sbb
or
add
inc
add
fsubs
lock
jecxz
rcr
inc
test
aas
sbb
mov
bound
insb
fdivs
out
push
ret
or
cmpsb
dec
mov
xchg
cwtl
sbb
adc
sbb
cld
cmp
cld
fisubs
les
lcall
mov
fwait
add
xchg
jno
rcrl
cmp
push
clc
push
ss
iret
pop
lahf
fstpt
mov
pcmpgtd
adc
xor
inc
lods
ficomps
jb
mov
sahf
dec
cmp
sbb
in
cwtl
xor
push
adcb
imul
pop
and
out
push
jbe
pop
clc
jge
test
push
loop
xchg
clc
inc
in
lret
add
sarl
lea
push
lock
loop
add
sub
cwtl
gs
shlb
push
nop
hlt
xor
dec
push
xor
fnstcw
fisttps
rcll
sbb
mov
push
aad
movl
test
hlt
or
nop
stos
fildll
rcl
pop
imul
xor
pop
or
push
pop
data16
dec
fsub
scas
scas
inc
xchg
mov
dec
add
mov
rorl
mov
xor
js
jmp
sub
and
jbe
inc
gs
and
in
lock
dec
data16
lods
add
imul
clc
xchg
inc
clc
cli
shrb
add
pusha
or
in
lock
aas
scas
or
push
sbb
scas
setne
jae
xchg
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
jmp
aad
mov
mov
rorb
scas
xchg
mov
sbb
adcl
addl
or
lock
push
adc
fistps
cmp
or
rorb
dec
xchg
scas
mov
rorl
test
stc
test
cmp
pop
mov
cwtl
leave
push
inc
adc
fmull
cmc
pop
adc
jo
lock
cli
and
or
push
and
pop
dec
sub
and
push
scas
std
flds
xor
mov
jge
mov
inc
sbb
mov
movd
scas
add
repnz
subl
lret
addb
and
add
jmp
out
lret
pop
pop
dec
repz
xchg
out
jne
add
loope
push
cs
add
andb
push
lea
cmp
jno
mov
sbb
mov
jecxz
mov
call
movsl
stos
mov
push
pop
inc
addr16
mov
fisubrs
dec
fwait
leave
mov
and
xor
push
mov
ja
mov
fisubl
xchg
cld
mov
mov
cmp
jne
jno
lahf
iret
daa
cwtl
sbb
test
pop
jle
int
mov
pop
imulb
cmpsb
loopne
sub
pusha
in
jmp
insb
cwtl
in
cs
sbb
mov
mov
clc
pop
movsl
popa
movsl
dec
sti
sbb
mov
ret
aad
sbb
scas
insl
stos
pop
in
push
rol
xchg
cld
mov
add
leave
jae,pt
jo
lcall
fstl
sub
popa
xchg
xor
xor
inc
aad
inc
daa
xor
aaa
f2xm1
mov
mov
sub
push
mov
jno
out
ficoms
scas
nop
aas
sahf
sarb
ror
mov
jmp
fidivrs
push
gs
fwait
les
push
adc
pop
bound
xor
xor
lcall
sbb
mov
loop
jae
sub
pop
out
or
or
inc
add
jbe
mov
imul
rol
out
and
cmp
mov
add
ret
popa
enter
fwait
jmp
or
outsb
stos
cmc
jbe
data16
lret
jge
adc
jp
dec
ror
test
cmc
xor
sub
pop
ret
cmc
jle
test
or
sti
pop
adc
or
jecxz
in
stos
nop
add
add
gs
or
lahf
popa
in
push
fmul
sbb
je
je
jle
hlt
ljmp
pop
stc
adc
xchg
ret
fiaddl
and
ror
fdivl
mov
xchg
cmpsb
jmp
push
add
mov
out
cmp
pop
cmp
addl
out
and
or
sub
insb
pop
inc
cs
cmp
repz
cmp
ljmp
pop
sub
int
loopne
sub
cmp
call
mov
cmp
inc
inc
jge
arpl
sbbl
sbb
or
repz
hlt
lret
call
sahf
insl
pop
imul
pop
iret
outsb
ja
movsl
sbb
jmp
in
dec
dec
adc
shl
xor
fistpl
imulb
add
push
test
dec
stc
int3
pusha
inc
test
jae
out
inc
aaa
add
pop
out
hlt
pop
xor
popf
sub
xchg
mov
jecxz,pt
xor
cmp
lods
and
in
out
fwait
jb
push
push
mov
and
sub
imull
pop
imul
daa
xor
sbb
pusha
imul
into
decl
push
stos
jle
sbb
dec
mov
mov
xlat
inc
lret
in
mov
pop
inc
int
jo
push
shl
mov
pusha
inc
and
mov
add
cmp
mov
fisubs
loopne
imul
bound
int3
lods
pop
fsubr
ds
or
aas
mov
mov
push
inc
stos
rorb
dec
fs
jo
jb
and
sub
lock
or
test
fidivrl
std
add
sub
mov
mov
add
lods
mov
dec
add
cmp
jbe
sub
dec
outsl
fldcw
fstpl
sub
out
or
nop
xor
push
mov
dec
jnp
pusha
cli
push
iret
dec
mov
jbe
shlb
fnstsw
cwtl
sbb
addr16
jae
pop
adc
repnz
xor
shlb
inc
adc
push
in
cmp
mov
push
xor
xor
les
push
xchg
sbb
or
adc
loope
jbe
mov
ret
out
pop
or
dec
test
sbb
mov
adc
mov
add
in
shrb
inc
or
mov
adc
daa
hlt
faddl
adc
lds
and
sub
shrl
inc
int
mov
cli
add
movsb
mov
jnp
scas
xchg
and
push
stos
rorb
hlt
mov
push
xchg
loope
jge
push
aad
or
mov
mov
out
enter
or
mov
mov
cwtl
sbb
sub
xchg
push
mov
xor
inc
punpcklwd
pop
push
mov
push
sbb
nop
pop
inc
mov
xor
mov
cld
jno
xor
bound
rolb
xor
leave
inc
pop
sub
xchg
stc
mov
push
pop
mov
mov
jne
cmpsb
dec
or
xchg
push
je
push
xor
nop
adc
sbb
rcr
in
jmp
jl
sti
loope
movsb
gs
stos
push
dec
cmp
push
xchg
push
cmc
dec
cld
pop
push
mov
or
xchg
lahf
xchg
cmp
and
div
and
lods
xor
loope,pn
push
fiadds
mov
sbb
gs
cwtl
shl
adc
xchg
xchg
inc
ljmp
insl
pop
inc
fisubrs
pop
adc
std
mov
nop
fidivl
dec
jns
add
pop
pop
xchg
imul
mov
hlt
rcr
cld
cld
cli
pop
aas
lds
jnp
jne
out
pop
pop
pop
add
fwait
mov
cmp
or
test
les
hlt
xchg
and
mov
and
jbe
push
add
out
pusha
jb
lret
popl
fstl
les
lock
sbbb
dec
leave
xchg
shlb
int3
push
and
or
mov
and
sbb
cmpsb
in
les
mov
movsl
pop
lea
jno
jge
cli
daa
inc
jo
cli
mov
inc
mov
xor
inc
ror
loopne
test
into
lods
mov
mov
fwait
dec
stc
mov
mov
arpl
xlat
mov
js
les
inc
ds
dec
scas
fisubrl
sub
cwtl
or
ljmp
jns
fiadds
and
not
jnp
xor
js
jns
adc
xor
and
jl
lods
cwtl
or
out
in
incb
inc
ss
loopne
push
clc
std
push
cmpsl
repz
push
pop
sub
lea
xlat
insb
pop
jnp
sub
cmpsl
mov
adc
enter
sti
pop
mov
or
rorb
and
rcrl
mov
arpl
rcrl
dec
mov
push
and
xchg
js
mov
imul
lods
mov
pushl
ficompl
jg
call
jg
jge
dec
cmp
xchg
lods
lret
mov
and
insb
es
sub
enter
inc
stos
fwait
push
out
xchg
push
xchg
outsb
jb
mov
sbb
pop
jns
or
ret
int3
and
daa
cmpsl
add
mov
jp
xor
lds
call
jg
sub
lods
shlb
cs
and
fistps
pop
pop
and
mov
std
inc
sbb
ljmp
push
insb
mov
xchg
adc
jl
pop
dec
push
popa
dec
stos
testl
mov
outsl
in
mov
neg
jns
xchg
movsl
push
sbb
xor
inc
aam
aas
cmp
inc
testl
test
xor
sahf
pop
adc
sbb
lods
mov
add
pop
scas
sahf
pop
xor
les
push
mov
dec
push
leave
inc
int
pop
mov
imul
repz
xor
push
pop
sbb
xchg
les
fcoml
cli
loopne
mov
je
or
add
mov
aad
std
pop
stos
jne
adc
or
pop
pop
cltd
pushf
and
loope
xor
adc
pop
sub
nop
pop
fstpl
xchg
lock
loope
pop
loop
in
pop
cmpsb
xor
and
ja
in
loope
popa
jl
and
jecxz
or
fsubl
out
push
mov
pop
stc
jns
dec
pop
test
gs
cmc
mov
fnstenv
pop
add
rorl
xchg
jns
and
mov
stc
jp
ljmp
adc
pop
xor
dec
in
insb
sbb
mov
mov
addr16
and
jbe
in
std
adc
jge
push
push
stc
int
sub
ret
mov
js
aas
shr
push
sbb
adc
jbe
ficomps
mov
mov
sub
jno
xchg
or
mov
adc
dec
mov
push
ret
pop
test
mov
stos
in
adc
insb
xchg
push
imul
pushf
ficomps
test
sub
mov
xchg
xchg
xor
sbbb
xchg
add
xor
arpl
xchg
push
sub
repnz
movsl
dec
mov
mov
orl
push
push
lret
sahf
dec
adc
cmp
leave
ljmp
sbb
lock
sub
adc
jnp
ja
sar
jno
inc
push
pop
daa
dec
cmp
dec
std
fwait
cmc
push
repnz
into
and
pop
movsl
outsl
jno
popa
jo
inc
push
sahf
xchg
and
dec
xchg
movsl
mov
cmpsl
out
push
lcall
gs
jbe
xchg
fs
pop
fdivr
and
sbb
dec
loope
imul
sub
xchg
lea
cmpsl
addl
jecxz
and
add
xchg
and
dec
idivl
jl
movsl
add
aas
add
push
pop
push
js
mov
xor
jp
pushf
in
add
xchg
loop
loopne
outsl
testb
cltd
pop
sub
data16
jecxz
les
and
mov
test
btc
xor
inc
stos
pop
mov
xor
xor
push
adc
das
sub
loop
xor
xor
sbb
insb
mull
push
or
fbstp
dec
xor
fwait
rcrb
cmpsl
xor
pusha
mov
push
add
mov
mov
or
xchg
jge
lahf
ja
test
push
popf
push
add
jle
fbld
push
aad
xor
bound
aam
cmp
push
subb
cmp
pop
lods
pop
inc
pop
mov
mov
xchg
mov
cmpsl
mov
and
je
popf
add
addb
in
xchg
jae
add
mov
shl
adc
inc
fidivs
mov
pop
pop
out
cmp
or
mov
add
imul
mov
push
push
push
pop
shl
cmp
fdiv
arpl
cmpsb
inc
rcrb
std
jne
mov
int
lahf
pop
adc
aam
mov
cld
test
sbb
mov
or
fcoms
jecxz
jne
xor
sub
mov
add
pop
push
aam
dec
xchg
mov
push
inc
les
insb
popf
lret
pop
cmp
repz
pop
test
inc
cmp
sbb
cmc
mov
cwtl
xchg
and
movl
push
xchg
jecxz
fwait
mov
xchg
sbb
nop
aas
xor
imul
aad
into
jg
popf
fisttps
and
pushl
sub
fs
inc
and
rol
jp
mov
mov
ss
popf
mov
inc
daa
push
xchg
pop
adc
or
js
sub
sub
xor
dec
xchg
inc
add
xor
inc
mov
flds
mov
pavgb
mov
sub
pushfw
sub
cmpsb
or
push
loop
sub
push
stos
push
jmp
mov
jnp
stc
add
add
xchg
clc
inc
add
jo
adc
iret
loop
push
mov
xchg
add
rcll
mov
push
mov
and
or
inc
outsl
lret
add
or
pop
push
roll
or
test
lret
fdivl
inc
inc
mov
mov
xchg
push
movsb
mov
push
jae
jp
and
xlat
push
inc
hlt
jae
arpl
fs
insl
mov
mov
cmpl
cmp
xor
int3
in
cmp
data16
pop
mov
sub
cmp
arpl
adc
out
sbb
call
fs
into
out
add
ds
ss
add
mov
sbb
enter
lcall
and
mov
out
or
jecxz
cli
jb
inc
lret
inc
lods
jmp
xchg
repz
mov
outsb
rclb
sbb
xchg
jp
mov
jle
push
fstps
push
je
inc
imulb
lds
pop
cmpsl
xchg
or
mov
dec
xchg
jo
movsw
roll
scas
or
scas
xor
jmp
aam
mov
hlt
sbb
lahf
xlat
pop
and
jmp
lock
mov
mov
adc
xchg
cmp
testl
push
adc
xorb
es
ss
cmpsl
xchg
js
dec
cmp
mov
pop
push
adc
leave
mov
or
fildl
sarb
hlt
cmc
cmp
push
mov
push
ss
and
addr16
mov
or
sub
addr16
out
push
xchg
xchg
lcall
gs
dec
jecxz
bound
jae
mov
fnstsw
sahf
shrl
jg
es
pop
stos
inc
sub
sbb
mov
inc
cmp
les
mov
lcall
jle
jmp
into
or
inc
xlat
scas
xchg
xchg
and
bound
xchg
call
jns
movsl
cli
jl
push
ds
jmp
rclb
sarl
pop
inc
fcmovb
xor
cmp
ret
movl
xor
fiaddl
xchg
or
into
loope
sbbb
push
sub
pop
push
fcmovne
cli
lcall
cmp
lcall
outsl
xor
imul
or
push
cmp
imul
and
shll
mov
icebp
scas
push
mov
xor
mov
dec
mov
sti
xchg
xchg
or
or
jb
xchg
push
add
test
push
dec
sub
imul
popa
pop
out
jp
divl
xchg
div
mov
add
ret
jae
sbb
xor
jmp
leave
call
in
data16
add
lahf
rol
mov
and
mov
mov
jmp
icebp
add
movsb
in
jne
adc
jle
jb
cld
out
enter
or
rclb
movlps
cmp
fsts
jle
push
scas
aam
fs
cmp
jl
lcall
sub
fstpt
fstpl
stc
xor
push
pop
dec
jnp
xor
mov
xchg
ds
call
dec
fsubl
stos
inc
mov
xchg
sbb
push
sahf
sbb
mov
cltd
mov
jmp
aad
movsl
cmovbe
jne
imul
je
sub
insl
push
xchg
loope
dec
jne
pop
dec
pop
xchg
jno
pop
popa
xchg
lock
xor
inc
cmp
xchg
sub
ret
xchg
and
inc
mov
adc
xchg
adc
push
jge
sub
xchg
add
pop
test
xchg
fistpll
scas
repnz
pop
xchg
jge
std
idivb
testb
ss
icebp
push
les
inc
test
les
jp
sub
cmp
test
sub
fldenv
inc
jle
out
pop
xor
mov
mov
xor
xlat
arpl
push
sbb
rcr
ljmp
dec
xlat
fdivrp
adc
insl
imul
sbb
cmpl
mov
cmp
push
xchg
xorb
rcll
push
inc
cmp
test
ljmp
push
imul
sbb
cmp
inc
adc
cmp
push
and
hlt
pop
xor
pop
sbb
mov
adc
inc
repnz
imul
in
or
cmpsl
cli
daa
xor
sbb
sbb
lcall
xchg
fwait
mov
jnp
cmp
dec
aam
or
aaa
mov
scas
bound
xchg
addl
xlat
xor
sbb
out
inc
dec
jbe
adc
push
xchg
cmp
test
or
dec
cmp
dec
pop
cmc
aaa
dec
pop
loopne
dec
mov
mov
jle
shlb
ja
call
mov
cli
adc
scas
push
iret
aam
aas
mov
call
jp
int
arpl
add
add
mov
inc
mov
add
and
shlb
dec
push
xchg
sbb
enter
sahf
adc
daa
sbb
mov
adc
cmp
fbld
xchg
ljmp
notl
pop
add
lahf
orb
adc
xchg
fldenv
cmpsl
dec
gs
sub
push
rorb
cmc
mov
xchg
xor
pop
xlat
cs
cmp
xchg
nop
shlb
xlat
inc
inc
cmp
adc
sub
insb
ret
movsb
adc
test
xchg
popa
jne
inc
ja
dec
mov
stos
dec
dec
mov
pusha
ss
mov
mov
xor
pop
pop
loop
sbb
add
cmpsb
mov
testl
xchg
stos
push
push
fistl
xlat
pop
inc
movsl
mov
les
jbe
mov
in
fsubrs
mov
es
push
push
adc
into
add
push
sub
clc
mov
xor
jle
lret
std
push
dec
push
xor
in
rclb
jg
lea
loopne
lahf
pusha
sbbl
inc
sbb
sbb
xchg
into
fisubrl
popf
in
das
inc
xor
aad
pushf
add
and
jp
mov
stos
mov
cmp
das
mov
inc
test
xor
mov
rcll
nop
adc
jp
pop
pop
cmp
sub
in
nop
lds
imul
jae
or
xor
xchg
imul
pop
cli
ret
addb
inc
fsubrs
insb
mov
scas
fdivrs
cmp
fs
std
call
leave
js
inc
pop
mov
addr16
xchg
lahf
push
aad
sar
mov
nop
mov
out
inc
outsl
clc
rcl
inc
sub
xor
push
ret
push
cmp
ret
jp
test
push
fmul
mov
sbb
mov
lods
mov
jae
test
dec
pop
ror
xchg
daa
or
rorl
data16
inc
add
mov
inc
and
out
add
push
add
add
cmp
stc
adc
in
scas
xchg
movsl
pop
dec
push
push
cmp
das
repnz
mov
mov
testl
fsts
fstl
mov
cld
adc
mov
in
or
stc
fs
mov
push
fisubrl
pop
pop
xor
mov
dec
addr16
inc
xchg
ds
pusha
and
xor
cmp
negl
mov
dec
test
mov
aam
jl
int3
or
aaa
out
xchg
or
dec
scas
cmp
pop
gs
popf
fninit
in
das
movsl
ret
sub
std
icebp
adc
add
pusha
lock
mov
cs
inc
imul
subb
dec
orb
cmp
or
mov
xchg
stos
scas
mov
dec
pop
add
insb
pop
sub
cmpsb
popf
clc
clc
mov
adc
add
loopne
test
das
daa
mov
ficoml
xor
cmpsb
icebp
scas
stos
dec
or
out
pushf
test
fcoms
pop
inc
gs
sbb
dec
mov
aas
jle
repz
xchg
mov
jge
pushf
mov
mov
lea
rorl
or
mov
stc
cltd
pop
dec
mov
out
mov
adc
mov
in
dec
add
sbbb
xchg
dec
xchg
xor
push
xchg
add
mov
mov
adc
call
jg
cmp
inc
cmp
ficomps
mov
shrl
nop
test
in
and
cmp
dec
jb
das
lock
mov
adc
cmp
shlb
insl
test
push
aad
inc
push
ss
es
pushf
xchg
int3
pop
mov
pop
out
or
jmp
inc
sbb
jp
rorb
ss
dec
jle
dec
pop
mov
pop
in
lret
add
jge
cmp
pop
cmpsb
xor
jb
push
mov
ljmp
sbb
rolb
jae
cwtl
inc
jmp
or
enter
mov
dec
sub
or
pop
in
imul
popf
mov
fdivrl
outsl
out
sbb
rolb
push
stos
lahf
aas
clc
das
sarb
mov
xchg
les
test
dec
rclb
or
fmull
mov
or
out
adc
pop
cmovo
cmp
cmp
or
insl
or
jl
int
jle
jne
jnp
lds
adc
xchg
push
cmp
add
iret
lret
out
leave
out
xchg
mov
scas
iret
xor
or
add
adc
mov
out
sub
es
xchg
jl
and
sahf
mov
das
xchg
lret
in
and
push
insl
jle
sbb
add
mov
mov
mov
jb
jb
lods
fimuls
adc
cld
push
add
cld
idivl
fwait
jae
fsubrp
gs
and
shrl
pop
sbb
add
mov
dec
imul
xchg
xor
in
lret
call
and
jle
into
shl
mov
sbb
sti
mov
cwtl
push
sub
test
inc
stos
sbb
and
jo
inc
cmp
sbb
leave
nop
das
xor
sbb
fidivrs
in
sub
mov
mov
bnd
sub
outsl
and
push
push
roll
inc
add
cltd
js
inc
xchg
push
add
dec
fs
leave
popf
mov
jmp
shrl
andb
sahf
mov
pop
ds
inc
fwait
out
and
int3
in
dec
sbb
add
hlt
adc
inc
test
fs
and
inc
addr16
pusha
or
test
fs
cmpsb
stc
cmp
out
pusha
pop
repz
fs
loope
and
pushf
xchg
lods
pusha
inc
jb
lods
cmc
pusha
sub
lock
insl
xchg
in
les
pop
lods
push
adc
sub
xchg
mov
cmc
shlb
lret
ret
packuswb
ljmp
cmp
call
fsubrl
fcmovu
or
stc
call
or
movl
mov
or
sahf
cmp
ret
clc
cwtl
sbb
outsb
jno
push
orl
jg
mov
or
inc
inc
es
pusha
mov
mov
scas
cmc
in
mov
imull
ficompl
pop
mov
and
mov
pop
adc
xchg
out
iret
push
in
xchg
xor
adc
or
lret
xchg
sub
out
xor
sub
xor
popa
adc
xor
das
nop
push
add
or
hlt
ljmp
cltd
loope
and
mov
sarb
out
push
or
dec
dec
into
mov
sbb
jmp
out
mov
lock
std
insb
jae
notl
and
mov
jne
ret
or
out
das
scas
fiaddl
aam
aas
pop
mov
mov
dec
loopne
sub
fcomps
test
mov
mov
and
adc
gs
pop
add
jmp
jb
leave
add
hlt
addl
in
pop
mov
stc
je
cmpsl
xchg
xor
and
mov
mov
sub
fwait
add
pop
mov
mov
jbe
or
fucomp
mov
xchg
pushf
out
leave
aas
mov
pop
int3
int
std
fmul
cmp
add
pop
inc
and
mov
stos
push
insb
mov
rcrl
sub
outsb
mov
aaa
out
imul
stos
pop
dec
ret
cs
mov
scas
ja
cmpsb
and
xor
push
cltd
in
lcall
inc
aaa
sbb
cmp
cmpsl
mov
or
popf
and
int
movsl
add
stos
sbb
xorb
inc
dec
aas
movsl
lahf
mov
push
and
push
inc
cmp
jnp
jb
mov
jo
push
imul
mov
subb
testl
sbb
xor
out
add
fldenv
dec
bound
pop
cmp
mov
movsl
fidivrs
outsl
jecxz
sub
pop
std
cmp
and
mov
pcmpeqb
add
gs
or
sti
popf
ss
pop
add
mov
mov
mov
je
push
cwtl
xchg
jnp
fnstenv
push
add
mov
add
fwait
add
cmp
loope
call
cmp
mov
jno
push
loopne
dec
cltd
aaa
push
aam
push
ss
xchg
xor
aad
les
xorl
es
xlat
cmpsl
les
nop
lock
stos
mov
psrlq
fimuls
ret
inc
fsts
into
fists
inc
mul
lret
stos
subb
xor
xor
out
inc
and
pop
outsb
adc
pop
xor
neg
and
int3
cmpsb
rol
sbb
xchg
lret
adc
adc
jae
fwait
cmp
cmpl
insl
fcompl
out
fs
loope
outsb
pop
nop
imul
out
ja
flds
in
lods
imul
sbb
sub
add
xlat
xor
mov
in
incb
xchg
pop
fistps
shlb
sub
mov
popa
pop
mov
pop
je
ljmp
mov
push
push
add
sbb
cmp
cld
pop
xchg
cwtl
lods
jns
repnz
xor
cmp
xchg
std
pop
mov
addr16
loope
faddl
sub
inc
and
mov
gs
adc
jne
push
in
icebp
fnstcw
xor
gs
dec
lahf
add
sub
in
xchg
aam
stc
dec
fisubl
mov
push
jle
in
mov
inc
pop
cltd
adc
in
das
leave
pop
mov
push
or
in
call
jns
sbb
jno
xor
jbe
sti
jge
lahf
push
adc
and
push
inc
xor
pop
arpl
mov
adc
xor
sub
dec
sub
test
enter
push
jg
push
inc
mov
xchg
insb
aad
push
or
int3
lock
mov
or
dec
es
pop
cmp
rorl
fcompl
lcall
lea
cmp
into
popf
push
push
addb
push
and
imul
push
ja
push
pop
pop
dec
dec
push
dec
mov
clc
sub
inc
mulb
orw
jmp
cmp
cmc
mov
adc
mov
mov
jp
mov
negl
fidivrs
mov
into
xchg
ljmp
call
pop
xchg
inc
shr
rcl
sub
jb
or
loopne
aad
push
cmpsl
popa
xor
mov
xor
mov
ret
and
enter
stos
pusha
repnz
dec
sti
mov
sub
and
in
mov
ret
mov
cld
sub
jle
dec
push
sub
lcall
ja
inc
fstpl
add
adc
test
xchg
push
lods
adc
lock
call
pop
sbb
aad
push
pop
gs
push
pop
adc
xchg
pop
cli
push
cld
test
adc
je
inc
xor
mov
sbb
mov
cltd
jmp
testl
repnz
push
repz
sbbb
mov
ficomps
ficoms
shrb
outsl
push
in
pusha
mov
mov
jnp
xlat
rcll
gs
jo
xor
scas
mov
mov
out
js
lret
fs
notl
idivl
cmp
ret
xor
mov
in
les
pop
add
dec
fwait
and
jno
inc
mov
mov
sub
rcr
mov
movsl
je
push
adc
outsl
xchg
adc
adc
xor
hlt
xchg
or
jno
lock
xorb
rcll
mov
cltd
mov
loop
jo
pop
lods
in
and
xlat
mov
cmpsb
push
push
push
xchg
fisubl
rclb
pusha
cmp
push
mov
imull
out
inc
movsl
fisubl
fistps
dec
xchg
pushf
je
cmc
jg
ljmp
gs
sbb
scas
dec
jp
mov
ss
jecxz
jne
or
cmc
and
inc
mov
loope
pop
rcrl
xor
push
push
divb
sub
pushf
cmpsb
out
push
add
adc
loopne
aad
out
scas
and
stc
adc
loopne
add
jmp
mov
push
cmp
pop
mov
mov
push
mov
add
stc
xchg
lret
push
ja
repnz
lret
icebp
mov
sub
dec
test
mov
sub
lea
in
adc
cmp
mov
xor
aas
mov
push
dec
adc
or
or
adc
jp
and
loop
jno
pop
stos
add
push
stos
inc
push
test
sub
jno
sbb
je
pop
cs
cmp
in
in
shlb
and
xor
stos
adc
rorl
sub
jle
mov
mov
inc
test
push
adcl
pop
push
cmp
cmc
call
xor
xchg
dec
fcmovnbe
lds
aad
ficompl
hlt
mov
mov
inc
jmp
int
test
stos
test
popf
jns
xchg
cmp
xlat
cmp
mov
push
pop
or
add
enter
ret
inc
stc
cmpsl
pop
mov
loop
mov
cvttps2pi
ss
xchg
sbb
dec
outsb
fwait
cmp
cs
out
fiadds
jo
push
ret
jns
hlt
lods
icebp
inc
or
scas
lock
jne
andb
movsb
std
and
into
repnz
addr16
pop
cwtl
aam
aas
pusha
mov
les
cmpsb
bound
scas
aam
cmp
adc
stc
into
jmp
push
mov
add
std
cli
inc
sub
fcompl
jo
inc
xor
andb
add
xchg
or
push
sbb
bound
int
inc
add
lret
mov
dec
or
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
notl
push
sub
push
sub
mov
mov
mov
inc
mov
or
movl
movzbl
adc
movl
adc
mov
add
mov
adcl
sub
adc
mov
xorl
xorl
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
pushl
pushl
call
cmpl
jb
mov
sub
mov
orl
mov
andl
mov
sub
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jb
mov
xorl
orl
mov
andl
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
movl
cmpl
je
cmpl
jbe
jmp
call
mov
dec
mov
jmp
mov
orl
add
mov
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
jmp
mov
mov
mov
neg
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
adcl
movl
subl
lea
movzbl
sbb
mov
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
call
jmp
lea
add
mov
xor
mov
mov
mov
sub
xor
mov
adc
mov
adcl
xor
orl
add
xorl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
mov
mov
add
movl
cmpl
je
cmpl
ja
jmp
push
call
xor
or
dec
mov
jmp
push
sub
mov
mov
mov
mov
mov
adc
mov
xor
and
mov
add
movl
cmp
movl
je
notl
mov
jmp
mov
xorl
xor
push
add
xor
xor
sub
mov
add
movl
push
adc
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
push
push
pushl
call
jmp
mov
xor
subl
xor
movl
cmp
movl
jne
movl
cmp
jne
push
movl
jmp
mov
xor
adcl
add
subl
xor
add
movl
adc
subl
xor
orl
xor
movl
cmp
movl
jne
cmp
movl
jne
addl
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
xor
xor
dec
mov
jmp
xor
add
mov
subl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
jmp
mov
movl
xor
add
adcl
imul
mov
orl
xor
add
movl
cmp
mov
je
movl
cmpl
je
cmpl
ja
jmp
push
push
call
mov
dec
mov
jmp
mov
orl
add
and
mov
mov
xor
add
imul
sbbl
mov
mov
mov
mov
xor
mov
sub
mov
jmp
mov
xor
mov
mov
mov
xor
mov
sub
mov
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
jg
mov
mov
xor
mov
sub
mov
jmp
mov
xor
add
add
mov
mov
mov
xor
add
not
and
mov
movsbl
cltd
add
adc
jmp
pop
push
xchg
dec
add
shll
test
mov
pop
addl
mov
push
mov
mov
js
push
hlt
mov
jno
xchg
mov
adc
push
rcrb
outsb
inc
fsts
inc
mov
xor
push
adc
pop
mov
scas
test
dec
arpl
pop
outsb
in
xchg
sar
dec
sbb
dec
mov
test
sbb
aad
mov
mov
sub
gs
jle
sbb
inc
cltd
dec
pop
das
das
sub
sub
test
fwait
or
xor
push
mov
adcl
lea
sahf
fstps
jecxz
inc
cmp
outsl
jne
sbb
std
fwait
ds
xchg
lock
lds
jnp
jge
inc
push
std
lea
sti
sub
pop
insl
popa
mov
jne
insl
add
iret
or
jle
arpl
xlat
repz
pop
sub
out
mov
cmpsl
push
dec
dec
mov
sbb
dec
aam
xchg
clc
cld
inc
lds
rcll
mov
mov
jmp
and
mov
mov
cmpsl
fcoml
fdivrp
repnz
xchg
jne
jb
pushf
hlt
dec
xchg
xor
cli
fldcw
sar
rclb
pop
das
inc
mov
mov
pmulhuw
xchg
xor
jecxz
push
jge
dec
icebp
sbbl
repz
loopne
lret
push
addr16
fnstenv
mov
push
cs
jno
nop
cld
clc
xorl
jge
in
bound
insb
std
sub
jno
popa
pop
jge
inc
add
cmp
and
push
arpl
lock
cmc
or
popf
nop
lds
int
arpl
inc
in
and
xchg
mov
add
insl
leave
mov
or
mov
sub
lds
sbb
and
es
pop
das
pop
rcrb
jp
xchg
jbe
aad
mov
std
xchg
arpl
dec
xchg
pop
inc
pop
dec
mov
xchg
adc
int
std
shll
push
xchg
fnsave
ja
mov
imul
outsl
or
or
xchg
mov
sub
sbb
movsl
test
mov
jge
push
pop
test
jno
test
mov
mov
adc
push
mov
call
cmp
push
adc
xchg
sbb
idivl
mov
rclb
ficoms
insb
pop
or
in
fstps
insb
std
cmp
sbb
divl
sbb
or
addr16
cmp
rclb
sbb
xchg
sub
lahf
in
mov
mov
mov
inc
jo
movsb
sbb
jle
insl
mov
fmull
negl
fadds
xchg
cmp
imull
mov
dec
sub
mov
pop
je
lret
pusha
sbb
ret
out
and
test
xchg
sub
cmpsl
call
push
leave
lods
jl
icebp
int3
jge
aam
movsl
data16
jle
push
jg
mov
push
pushf
leave
pop
pop
div
pop
adc
xor
enter
xchg
mov
push
pushw
lcall
or
in
lods
dec
arpl
je
andl
add
xchg
ljmp
xchg
test
imul
mov
sub
mov
dec
mov
sbb
mov
cwtl
xchg
mov
push
inc
fcomps
cwtl
imul
adc
mov
iret
adc
sti
loop
inc
rcll
sbb
jp
add
dec
test
adc
jo
mov
adc
xchg
fwait
repnz
jne
mov
js
inc
ljmp
das
fdivs
and
into
lods
repnz
adc
clc
enter
in
xchg
xor
cmp
mov
pop
or
jp
mov
jg
leave
mov
xchg
mov
sti
push
cld
pop
mov
mov
lock
stc
xor
out
loop
pop
int3
mov
popa
cld
loop
jp
scas
sub
xchg
imul
stos
popf
bound
pop
decb
mov
jae
fistpll
les
insl
adc
xchg
movsb
mov
dec
js
xchg
jle
or
out
xchg
adc
sbb
loope
xor
sbb
shll
mov
ja
loope
lea
pop
jmp
jno
std
inc
xchg
sub
test
loop
es
mov
data16
into
xor
mov
push
pop
xchg
imulb
sti
cmp
popf
jne
in
push
cmpsb
and
lods
jle
sbb
and
inc
pop
fdivs
xor
mov
clc
xchg
or
sahf
xchg
fldl
scas
sbbb
push
in
adc
jne
mov
ret
scas
push
push
lods
sbb
aaa
out
pop
jge
sbb
cmp
rorb
or
daa
call
imul
add
xor
xchg
xchg
push
xchg
mov
xlat
mov
rcll
xchg
pop
cmpsl
push
jbe
mov
mov
popf
xchg
xor
cmp
jmp
clc
outsl
push
inc
arpl
cmp
adc
fwait
cmp
push
call
push
fimull
cmp
and
xor
jo
mov
pop
testb
aad
pop
sbb
jne
inc
xrelease
cld
sbb
mov
js
cmp
and
cmp
sbb
xor
popa
inc
jp
sti
cmp
lret
pop
inc
lret
repz
sbb
mov
push
shlb
push
push
mov
mov
mov
sub
test
or
out
sbb
out
dec
sbb
push
lea
jb
xlat
fcoml
popa
mov
scas
sub
push
jne
ror
cmpsl
adc
lahf
fs
jae
jb
movsl
push
xor
fldcw
pop
nop
inc
sbb
cmp
movsl
mov
repz
mov
inc
sbb
mov
push
push
jg
dec
repz
notl
jne
cmp
aam
xor
mov
add
ficompl
mov
mov
insl
lock
pop
stc
push
xchg
mov
in
add
into
pop
inc
inc
and
xor
ficompl
jge
ja
movsl
call
iret
pop
lock
notb
add
mov
mov
jecxz
int
in
ljmp
outsb
outsb
not
pushf
pop
cmp
mov
pop
and
arpl
dec
jnp
gs
mov
sbb
add
shrl
pop
sahf
pop
inc
cmp
cmp
idivl
push
push
rcl
ljmp
mov
pop
add
push
mov
lock
push
shll
cmc
jb
mov
dec
shrb
push
data16
cmp
sarl
cltd
outsb
mov
add
xor
add
aam
adc
aad
jp
jo
push
dec
sbb
or
shr
out
sarl
roll
fsub
inc
pop
cli
test
and
and
scas
or
inc
and
sahf
pop
mov
gs
push
in
fsubrs
rol
jmp
dec
rcrl
jbe
sbb
cli
testl
movsb
mov
or
aam
mov
jnp
adc
cltd
xor
cmpsl
lret
dec
pop
pop
sub
and
add
movsb
dec
aam
stos
inc
and
add
icebp
sub
sub
data16
push
iret
and
mov
pop
add
gs
mov
lods
leave
movsb
xor
mov
sbb
pop
xor
std
xchg
ficompl
pop
adc
add
jns
push
aas
mul
lret
leave
stos
bound
clc
mov
mov
jns
push
mov
sahf
cmp
clc
xor
mov
adc
sub
jge
inc
xor
mov
out
repnz
mov
dec
fdivl
lret
out
stos
shrb
cli
pop
loopne
popa
xchg
pusha
rcrl
lret
mov
cli
mov
and
xor
test
pop
and
xor
aaa
sub
mov
test
inc
cmp
inc
and
mov
or
xor
inc
mov
mov
pop
popa
sub
push
ljmp
adc
push
shrl
imul
movsl
sbb
mov
aad
fidivrl
or
mov
adc
out
xchg
pop
push
xor
repz
test
push
aad
and
add
dec
pop
fstpl
pushf
inc
ss
add
adc
pop
mov
stos
je
fsubl
outsl
fwait
xor
js
sbb
inc
mov
gs
repnz
jo
cmpsb
xlat
insl
jecxz
stc
push
push
jne
xchg
inc
repnz
scas
inc
cmp
xchg
inc
adc
pop
popf
jne
divb
mov
lret
fwait
loope
leave
jg
out
xor
loopne
pop
add
adc
lods
jecxz
or
mov
mov
xor
jl
outsb
mov
fisttpl
mov
movsb
mov
add
or
mov
mov
mov
mov
inc
js
push
aad
out
cli
adc
repz
fsubr
out
dec
int3
mov
add
push
pop
fdivr
mov
fcompl
mov
rcl
sbb
adc
pop
fisttps
fcmovnb
sbb
call
sub
xlat
or
lock
sub
mov
pop
cmp
pop
jb
adc
js
or
pop
or
jge
sahf
pusha
iret
out
popf
adc
je
sbb
mov
outsb
andl
js
and
jmp
and
mov
sbb
and
and
or
test
divb
xlat
and
jmp
push
pusha
xchg
bts
mov
adc
xor
add
xchg
stos
dec
sbb
test
mov
cwtl
mov
in
call
cmp
lahf
adc
dec
mov
push
inc
ret
into
lret
popf
cld
jae
orb
inc
lods
cmp
jg
inc
push
mov
and
dec
js
stos
adcb
push
orb
fstps
aad
mov
cli
fistpl
lea
arpl
mov
das
add
mov
out
sti
xor
mov
popa
xlat
jle
sub
xchg
add
cld
mov
mov
sub
shll
in
mov
cmpsl
add
in
xor
or
std
shl
jl
jg
lods
and
sbb
daa
inc
sbb
push
es
fs
insl
push
or
add
mov
adc
mov
stos
jmp
test
add
lds
ds
mov
imul
pop
aaa
loop
add
xchg
pop
add
sub
xchg
test
cli
xorl
daa
mov
or
in
push
repz
movsl
jae
daa
fmull
jecxz
cmp
cs
mov
loop
add
lahf
inc
jns
sbb
jbe
jp
mov
push
push
push
inc
data16
movsl
lret
push
hlt
push
aaa
pusha
sub
pop
repnz
inc
ds
xor
ss
stos
faddl
addb
hlt
lods
dec
add
stc
inc
nop
pop
push
mov
fldt
fcompl
sub
repnz
push
xor
ror
int3
in
add
imul
mov
aad
add
test
cmpb
mov
fs
xor
jle
xor
fs
test
pop
pop
pop
adc
inc
inc
dec
cmp
add
rol
push
pop
and
cmp
push
jbe
adc
xlat
cld
mov
mov
or
int
mov
jl
and
out
fbld
or
ret
pop
mov
leave
mov
xor
fxch
ljmp
sahf
mov
cwtl
les
sbb
sti
sbb
sub
push
sahf
fwait
lret
mov
pop
mov
add
fcmovnu
adc
sub
cmpsl
inc
ljmp
test
sbb
popf
cmc
cmp
dec
std
mov
and
sub
ds
push
bound
mov
inc
lds
dec
sub
lahf
shlb
inc
fs
aam
aam
adcl
stos
jns
loopne
dec
add
mov
lret
in
fildl
paddusb
ss
movsl
jle
lods
ljmp
pop
movb
dec
sub
mov
lahf
idivl
fldcw
xor
cmpsl
sbb
mov
icebp
fcoms
das
mov
jb
or
into
movsb
ret
cld
and
jo
addr16
xor
inc
ljmp
loope
gs
add
sub
xchg
cwtl
mov
arpl
test
push
pushf
mov
push
sahf
test
xor
addr16
or
mov
je
mov
push
loope
shl
sahf
sti
out
enter
xchg
mov
cmc
shrl
out
adc
pusha
aam
push
test
aaa
mov
cwtl
arpl
sbb
pushf
sub
mov
push
stos
insb
and
in
and
das
mov
rclb
int
sub
mov
aad
cli
sub
mov
ljmp
jae
jo
in
imul
ds
jb
dec
lret
adc
inc
pushf
sbb
or
shrl
sbb
mov
shl
lret
push
scas
mov
inc
das
or
jnp
pop
and
inc
or
jns
push
cmpsb
mov
fwait
cmp
icebp
xchg
leave
adc
ret
fcmovu
fldenv
dec
push
test
clc
add
ret
in
or
push
inc
std
dec
dec
mov
jne
push
stc
pop
adc
lret
add
and
les
and
ret
je
ret
test
fildl
add
pop
pop
int
mov
icebp
mov
ljmp
pop
and
jno
pop
imul
fcmovbe
and
std
popa
adcl
cmpsb
add
sbb
rcl
imul
xor
lods
push
mov
and
adc
push
sarl
mov
inc
push
adc
lret
lret
movsb
dec
pop
xor
xchg
xor
xchg
add
xlat
push
xor
xor
insb
cmp
push
push
jne
pop
or
arpl
pop
xchg
mov
test
cmpb
push
out
mov
testl
add
mov
pop
std
sbb
arpl
lret
push
or
xchg
test
cmp
divb
hlt
mov
jb
rcl
cmp
add
lcall
jge
sub
fldl
pop
jno
and
aaa
xor
jne
jp
pop
cmpsl
test
rcr
pop
idivb
push
fstpt
cmp
and
je
js
or
sarl
pusha
push
nop
aaa
xor
mov
cmp
into
xor
cmp
jge
xchg
pop
mov
sub
mov
out
data16
and
pushf
insl
dec
popa
sbb
icebp
mov
repnz
repnz
jb
aaa
inc
pop
mov
loop
mov
in
insb
outsl
xor
lahf
arpl
jp
aam
ret
in
push
jle
xchg
mov
shrl
and
mov
fnstcw
stc
push
mov
lahf
in
pop
lock
sbb
in
cld
pop
cmpsb
outsl
adc
inc
jns
and
lods
cwtl
sbb
in
add
notb
sahf
cmp
sbb
insl
and
fdivrp
outsb
fnstsw
xchg
fstpt
jb
mov
adc
insb
mov
adc
cmp
dec
pop
nop
je
rcl
adc
adc
in
xorb
dec
pop
mov
mov
notl
and
das
leave
add
or
or
push
xor
sbbb
xor
ljmp
xor
cmp
mov
sub
lock
aad
push
cli
sub
pop
or
sub
sub
cld
repz
jge
mov
shrb
popa
xchg
jmp
mov
sbb
dec
dec
cmp
and
sahf
push
mov
lods
pop
push
popf
jl
lods
sahf
jg
push
inc
mov
clc
negb
clc
xchg
and
in
lcall
outsb
add
stos
popa
aam
sub
pop
mull
loop
sahf
mov
mov
leave
fsubrl
xor
adc
xchg
xchg
dec
jecxz
or
add
cmp
ljmp
jmp
pop
dec
pop
bound
dec
xchg
das
ljmp
in
add
movsl
fwait
pop
mov
jp
js
in
cltd
lret
lods
push
negb
je
addl
push
jb
stos
mov
mov
lcall
in
inc
test
sbb
cmp
fiaddl
popa
lock
imul
fidivl
mov
mov
arpl
add
and
xor
dec
aam
in
dec
xchg
gs
sti
call
hlt
sarb
cmp
out
xor
mov
pop
dec
xchg
add
push
pop
dec
inc
stc
or
mov
mov
bound
insl
fs
lret
icebp
inc
add
out
push
stos
push
fldt
insl
rcll
mov
add
fldl
cmp
xchg
dec
pop
int
pop
add
iret
or
cmp
or
push
xor
lods
bound
jle
pop
or
rcll
clc
out
jmp
inc
test
in
mov
jmp
mov
in
add
xchg
xor
pop
movsb
pmaxub
sub
ficoms
loopne
fninit
daa
xchg
sti
bound
and
push
into
shlb
inc
pusha
fistps
sarl
cltd
push
pop
addr16
rcrb
and
or
dec
mov
in
and
mov
fwait
lods
cmp
xchg
imul
jbe
js
mov
jns
mov
in
filds
psubw
outsl
or
nop
jp
pminub
outsl
mov
sarb
movb
pop
in
scas
das
adc
imul
jno
xor
cmpsl
out
js
daa
sbb
sub
bound
lret
test
mov
push
int
in
or
adc
or
and
scas
push
gs
xchg
ret
cmpsb
sbb
sbb
cmpsl
mov
jle
xchg
xor
jbe
imul
aas
outsb
inc
mov
sub
xlat
gs
das
fs
mov
sub
fsubrs
xchg
add
cld
addr16
rcrl
sti
xor
or
dec
mov
xor
imul
add
jb
mov
subl
out
xchg
push
or
fdivl
xor
int3
mov
lahf
lods
fsub
xchg
dec
mov
mov
in
insb
xlat
pop
jl
or
inc
aam
pop
cmp
movsl
icebp
xor
mov
and
cmp
std
testl
cmpsl
jb
out
adc
jecxz
jp
mov
xchg
sbb
inc
or
adc
rcrl
imul
push
sub
jecxz
xchg
jbe
jbe
cmpsb
sti
cmp
mov
ret
mov
nopl
pop
sti
mov
sub
and
cmp
xchg
pushf
daa
ds
or
mov
adc
mov
cmp
mov
xchg
push
xor
fbstp
and
addr16
add
ds
fidivs
push
sbb
lea
jg
cmp
shll
inc
rcrb
inc
pop
mov
repnz
loop
je
sbb
and
out
pusha
mov
fwait
sbb
out
rcrb
dec
and
out
lds
ja
sbb
xchg
mov
pop
sbb
pushf
aad
popf
sub
xor
movsb
jnp
out
jmp
jns
lcall
ljmp
push
or
mov
xchg
xor
stc
loope
lcall
mov
in
std
pop
pop
iret
jns
lods
inc
outsb
andb
das
fucomi
push
pop
xchg
adc
mov
inc
inc
movsb
sbb
or
xor
das
mov
add
mov
es
js
push
loop
imul
std
sbb
or
add
ljmp
cmpsl
push
or
mov
ror
inc
push
mov
notb
xchg
inc
cld
and
loope
aaa
sbb
pop
aad
popf
ss
lds
jge
mov
mov
jmp
arpl
movsb
pop
jmp
sbb
dec
test
dec
inc
aad
pop
mov
jo
cwtl
jne
sub
push
jns
mov
and
aas
pop
imul
aas
and
fadds
fidivs
cmpsb
lret
sub
outsl
and
nop
push
div
push
add
aas
add
mov
cs
pop
add
nop
shll
or
fbstp
dec
fs
sub
cmc
outsl
pop
xlat
mov
adc
daa
inc
gs
mov
cmp
fisttpll
sub
stos
cmc
stos
push
push
jno
fwait
jg
jmp
jno
mov
aaa
movhps
xchg
nop
sbb
sub
fstpt
insl
mov
fmuls
loope
adc
mov
mov
xchg
repz
adc
xor
out
lret
aad
ficomps
cmp
in
mov
loop
cmp
pop
inc
xor
sub
add
stos
test
push
inc
movl
or
shrb
inc
sub
pop
outsb
je
lret
sbb
xor
fisttps
ljmp
add
push
cmpl
cmp
stos
out
dec
xchg
jne
sub
inc
mov
mov
push
xchg
dec
lahf
loopne
mov
leave
mov
jp
xlat
add
mov
dec
xchg
nop
push
sahf
adc
loope
enter
mov
push
es
scas
pusha
adc
push
mul
jmp
pop
xchg
or
pushf
adc
negl
adcb
adc
dec
and
in
push
push
xor
out
jge
xchg
repz
mov
and
xchg
jle
or
jae
push
mov
gs
cmp
adc
push
mov
arpl
and
in
aaa
cmc
add
addr16
push
dec
jp
pushf
popa
adc
shr
mov
pop
adc
and
movnti
repz
cld
ljmp
cli
jmp
test
fwait
push
xchg
aam
and
mov
dec
lahf
mov
sbb
rolb
sub
insb
pop
dec
cmp
dec
cmp
xor
mov
inc
dec
fiadds
lods
jmp
into
inc
test
jmp
add
push
mov
push
mov
imull
mov
xchg
sti
test
add
or
cmp
leave
inc
imull
popf
cmpsl
iret
hlt
incb
mov
je
xchg
push
test
arpl
or
lods
dec
inc
sahf
xchg
mov
mov
push
or
in
pop
pop
test
fildll
mov
les
xor
js
test
aaa
mov
lods
jne
inc
into
and
loop
push
jnp
xor
mov
add
jl
in
mov
cmp
insl
mov
and
pop
jl
lret
shl
lcall
xchg
mov
icebp
push
dec
fsubs
imul
push
gs
leave
sbb
repnz
lcall
jp
pushf
in
mov
enter
or
sub
sbb
xlat
mov
or
pop
aad
jmp
rcrl
addr16
sbb
xchg
push
mov
mov
xchg
sti
shlb
andb
pusha
cmp
jbe
aam
cmc
mov
cmpsb
push
pop
notl
mov
cli
xchg
adc
test
inc
sub
xchg
sbb
mov
arpl
bound
ljmp
dec
addb
mov
mov
arpl
fdivp
pushf
xor
push
fidivrl
mov
lods
in
xchg
cmp
sbb
cmc
cs
xlat
popf
loop
cwtl
pop
add
lcall
call
sub
vunpckhps
sub
adc
pop
cmp
xchg
adc
ret
push
jno
push
sub
mov
pop
aas
sub
adc
cmp
jmp
js
inc
lea
xchg
or
lds
cmpsb
or
int
mov
push
hlt
decl
stos
sub
iret
subl
mov
sahf
jns
sahf
sbb
lock
out
dec
mov
in
or
or
pop
jae
stos
adc
in
jnp
ljmp
xchg
or
mov
popa
int
and
rolb
add
lret
mov
jl
inc
or
sbb
jnp
es
pop
jns
push
and
jl
inc
sub
cmpsl
lret
ja
push
xchg
mov
call
mov
sub
call
push
cmp
add
mov
fmul
pusha
movsb
sti
mov
stos
lods
sub
popf
inc
and
sub
sbb
cmp
mov
es
adc
sbb
pushl
imul
lock
push
or
in
cmpb
or
imul
cmp
mov
aaa
dec
ffreep
jmp
hlt
add
and
or
add
xchg
dec
int
adc
cs
xchg
fcos
jo
aas
lret
xchg
dec
mov
xor
push
cs
push
jecxz
pop
iret
out
or
movb
or
xchg
sti
fstps
fcompl
pop
out
into
orl
xor
in
push
adc
jge
fsubrs
aas
cmp
stos
fwait
loop
adc
cmp
push
mov
cmp
mov
sahf
imul
rorl
jae
cs
or
adc
xchg
and
sbb
mov
hlt
call
push
inc
insl
mov
and
loope
inc
sbb
mov
mov
push
push
mov
xor
push
adc
in
pop
mov
insb
rorl
xchg
mov
and
dec
cmp
dec
mov
dec
aas
or
adc
jmp
or
push
lods
dec
jg
sbb
loopne
push
and
insb
nop
inc
pop
or
add
out
test
sbb
cmp
push
mov
cmp
cmp
pop
fildll
or
push
daa
jge
ja
or
add
xchg
lea
or
rcrl
fimuls
fbstp
je
dec
sub
ss
roll
lcall
out
jl
xchg
cmp
ret
sub
mov
sbb
lods
xor
or
adcl
add
mov
add
jp
ficomps
mov
cmp
lret
lods
cmc
std
sub
xlat
push
aam
jo
xchg
js
aas
fdivrs
add
add
mov
mov
adc
sub
mov
lea
arpl
ja
das
inc
pop
fisttpl
dec
push
cmpsb
cs
fwait
arpl
test
loopne
fucomip
pop
rolb
stc
xchg
es
cmp
inc
sub
and
sahf
xor
cmpsb
mov
aaa
push
adc
mov
push
add
xor
dec
lretw
xor
mov
push
dec
add
jnp
add
loope
andl
push
movsl
clc
ret
and
ss
sbb
adcb
test
or
fcmove
add
in
pop
loop
jae
jecxz
pop
push
inc
jecxz
call
out
add
sub
out
pop
xchg
mov
stc
or
mov
rorb
push
mov
inc
out
jns
ror
mov
or
jg
add
lret
jecxz
cs
pushf
inc
pusha
add
imul
mov
scas
pop
sbb
sbb
pop
mov
mov
sbb
push
mov
add
lods
mov
mov
outsb
adc
push
dec
jecxz
mov
into
pop
das
fadd
test
shlb
insb
and
push
rorb
loopne
lock
jb
not
stc
and
or
mov
ss
xchg
and
pop
mov
cs
cwtl
mov
popl
cmp
movsl
mov
cmpsb
pop
out
lcall
loope
data16
in
inc
sbb
pop
faddl
call
push
cwtl
imull
push
iret
rcrl
jmp
dec
repz
mov
push
or
cmp
dec
movsl
js
sub
xchg
clc
mov
jo
leave
in
js
int3
ds
cmp
xchg
test
add
pop
rolb
mov
stc
shll
ret
xor
lds
mov
fwait
fldcw
inc
cmp
push
jge
out
inc
cmpsb
outsb
outsl
inc
mov
fisttpl
int3
lods
ljmp
out
sbb
xchg
or
clc
mov
mov
das
sub
add
sbb
cli
mov
pop
add
sbb
mov
in
stos
imul
jmp
jmp
jne
sub
push
inc
cmpsb
jae
jmp
pop
push
dec
into
bound
insb
inc
adc
jae
adc
inc
add
mov
or
jecxz
aam
lea
dec
icebp
out
mov
test
out
fidivrl
cmp
mov
stos
inc
scas
jne
mov
flds
mov
pop
rolb
jmp
idiv
mov
jg
pushf
loop
mov
xor
xor
adcl
subl
lds
cmpsl
fs
aas
sub
gs
sbb
sbb
fcom
clc
xchg
push
inc
sti
hlt
push
jle
and
int3
lods
rorl
or
sub
xor
nop
inc
xor
jmp
in
inc
lods
and
test
cwtl
jge
lcall
add
pop
cs
xchg
mov
push
rclb
loop
or
arpl
xlat
loope
ret
imul
sub
enter
cmp
rcrb
xor
push
cmc
and
push
dec
imul
jno
into
mov
aam
imul
insb
shrl
test
test
out
in
lcall
push
shl
and
aam
mov
es
cmp
addr16
lods
cltd
fld
push
dec
jb
jne
in
pop
dec
outsb
mov
es
cltd
sarl
ss
push
arpl
xor
loop
fldl
lods
jnp
es
push
std
adc
jb
mov
mov
pushf
bound
pop
imul
aad
mov
cld
xor
pop
and
out
jle
cmpsl
add
xor
mov
pop
js
mov
aaa
gs
or
add
iret
add
push
pop
movsb
int3
daa
inc
push
test
mov
xchg
lods
js
out
mov
push
sti
insb
jns
shlb
mov
cmpsl
sti
clc
jo
cmp
ja
into
push
inc
leave
sti
cmp
ret
sbbl
and
sbb
sub
jb
mov
xchg
inc
push
in
add
inc
iret
xchg
add
repz
cmc
add
sbb
xchg
xchg
inc
enter
adc
in
mov
xchg
mov
hlt
cmp
jae
xchg
lret
xor
fadds
xchg
shlb
clc
add
jp
scas
push
add
enterw
in
add
popl
push
jae
mov
insl
stc
push
jne
test
lea
lods
js
add
lahf
mov
jmp
imul
jno
enter
popf
dec
pusha
fisubrs
jge
les
xchg
mov
sahf
inc
and
pop
pop
jo
sahf
xor
dec
xor
xor
cmp
jne
cmp
jne
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
je
mov
xor
mov
sub
add
mov
jmp
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
mov
jmp
test
lock
orb
enter
addr16
dec
adc
addb
adc
imul
jmp
xor
cmp
inc
mov
cld
ja
adc
xlat
cmp
xor
jp
pop
enter
mov
out
ja
sahf
mov
test
ljmp
data16
cmp
sub
stc
scas
aad
cmp
pop
stmxcsr
je
fcmovnu
lret
mov
ja
add
negb
or
push
movsb
pop
fists
or
fdivrs
sub
std
paddb
push
mov
cmp
enter
pushf
xchg
push
repz
mov
pushf
push
adc
sub
jg
mov
imul
sub
xchg
or
and
xor
jns
shlb
or
das
int3
push
inc
addr16
std
out
fmuls
mov
mov
jne
cmp
inc
sub
mov
and
inc
addr16
das
cmp
aaa
add
mov
add
xor
sahf
repz
in
mov
clc
xchg
cli
sbbl
sbb
add
and
popf
and
pop
mov
dec
xchg
sbb
jbe
mov
pop
das
mov
cmpsl
pop
mov
mov
push
sti
add
mov
xor
mov
les
fs
gs
cmp
xor
push
push
pop
push
inc
es
jnp
rcl
ljmp
adc
mov
les
stos
stc
scas
in
pop
int
movnti
or
jecxz
lock
stos
push
and
mov
sbbb
and
and
outsb
mov
fnstsw
jl
sbbb
mov
cmp
lods
pop
and
xchg
or
out
cmpb
jno
push
or
pop
and
movb
and
lahf
sub
popa
xchg
call
and
or
jmp
jg
ret
push
pop
or
test
repz
or
call
movsl
inc
adc
sbb
inc
mov
jmp
pop
imul
lea
ds
insl
test
xchg
xchg
lret
jns
imul
js
xchg
cmpsb
scas
repnz
jl
inc
ss
or
jecxz
sbb
sarb
mov
xor
xor
outsl
mov
dec
push
xchg
jmp
shl
stc
cmp
jb
aas
and
out
roll
mov
es
ljmp
or
pop
clc
xorl
push
inc
iret
sarb
inc
xor
mov
jp
sbb
mov
mov
add
and
fistl
out
cli
inc
push
sar
mov
pushw
stc
add
pop
dec
push
scas
arpl
or
stos
sub
xor
pusha
sar
mov
mov
xor
xchg
or
stos
xchg
mov
push
xor
xor
xchg
lods
test
loop
mov
outsb
nopl
mov
add
imul
push
pop
xchg
sub
xchg
sti
push
jns
ljmp
adc
sahf
xor
test
jno
mov
jno
or
cmp
ds
das
sbb
add
jl
jmp
push
dec
ror
jge
mov
movsb
mov
cmpsl
pop
or
fisttpll
cli
push
lds
or
das
push
data16
outsl
xchg
xor
arpl
xchg
jne
add
inc
imul
outsl
xor
sub
add
fwait
stc
and
repz
xchg
mov
mov
sbb
fcomps
ret
lret
iret
sub
setp
mov
cmp
out
jo
insb
nop
in
sub
jbe
jp
xor
sbb
xchg
cmpsb
sub
sbb
or
add
adc
push
mov
mov
ficoms
and
sahf
fiadds
in
mov
mov
or
mov
jb
sub
ret
push
movsb
fldcw
sub
sahf
rcll
mov
in
push
add
mov
sbb
das
jp
push
dec
in
js
fsub
push
lahf
scas
mov
sahf
inc
mov
xchg
insb
mov
iret
xor
pop
inc
das
push
lea
popa
es
cmp
int
insb
lcall
pop
xchg
sarl
fxch
sbb
shll
into
in
repz
pop
out
cmp
push
mov
add
push
push
inc
sub
orb
push
test
bound
in
aas
push
inc
cmp
push
lds
mov
loop
xor
inc
and
push
cmpsb
arpl
inc
out
test
sbb
fucomi
sahf
mov
cmp
into
push
xchg
and
fcomps
adc
add
xor
xchg
les
jnp
xorb
or
lods
pop
pop
call
shrb
xchg
lea
xor
lods
mov
fstpt
xchg
daa
push
xlat
xchg
pop
pop
sbb
cmpl
outsb
daa
in
fcoml
fstpt
lret
stc
insl
and
mov
ret
jl
jbe
lds
pop
mov
jo
inc
test
test
add
cmp
test
pusha
aam
inc
or
push
push
outsl
lret
aaa
loopne
fcmove
repz
and
mov
jecxz
fnstenv
int
or
cmp
or
icebp
ljmp
jp
subb
icebp
lds
ss
pop
dec
pop
mov
lret
mov
bound
sbb
arpl
cmpsl
sub
mov
mov
sbb
unpckhps
inc
mov
cmp
push
lock
into
inc
cmc
jns
xchg
pop
rcll
sbbl
or
movsl
inc
les
mov
dec
mov
je
xor
stos
or
lcall
hlt
out
push
insb
mov
lcall
push
lds
push
sbb
xor
dec
inc
inc
jecxz
adc
ja
cmp
sahf
cmpsb
addr16
or
lock
inc
shlb
aam
add
inc
adc
push
cld
sbb
testl
push
test
fistpll
in
lea
push
test
dec
or
dec
and
push
mov
pop
jns
sub
testl
push
lret
or
adc
aas
rcll
mov
in
scas
fnsave
bound
cmp
dec
cmp
pop
inc
xchg
ss
gs
imul
stos
outsb
movsb
lds
out
lahf
mov
sub
mov
adc
dec
pop
jmp
xor
add
out
mov
xor
mov
je
pop
cmp
rcll
fcoms
jg
pop
int3
daa
nop
rcrl
adc
repz
dec
stc
loope
scas
sub
test
das
push
stc
sub
hlt
and
fstps
enter
jmp
bnd
fistps
lods
add
nop
xor
in
mov
ss
mov
lods
cmp
pop
leave
and
cmp
adc
aam
jne
rolb
mov
add
test
and
mov
movsb
xchg
subl
sub
hlt
jge
daa
sub
adc
push
sub
test
and
je
mov
xchg
jmp
movsl
test
mov
outsl
dec
or
push
pop
adc
mov
sahf
mov
sahf
ret
icebp
mov
aaa
dec
push
jmp
das
mov
pop
ljmp
repz
aad
push
push
push
jnp
cmc
mov
and
dec
inc
aad
test
lock
aad
dec
inc
mov
pop
add
mov
push
push
sub
adc
movsb
orl
fildl
cmp
andb
stos
les
jecxz
xchg
in
lods
jmp
push
stc
push
es
dec
aaa
adc
dec
test
push
and
add
cld
xlat
cltd
or
mov
mov
sbb
fwait
push
dec
pop
jg
xchg
repnz
cld
imul
push
mov
ss
pop
mov
pop
sarl
xchg
js
movsl
xlat
mov
loop
movsl
setg
sbb
shll
dec
jns
mov
icebp
sahf
jmp
jnp
mov
or
add
add
jmp
adc
pop
dec
push
and
pop
jbe
cltd
jno
jle
gs
shrl
into
loop
mov
out
sbb
fnsave
call
mov
or
mov
subb
xor
rdtsc
mov
test
es
push
test
out
daa
jp
shlb
and
xor
shlb
lock
pop
adc
pop
in
add
inc
jmp
cli
or
rorb
nop
fs
bound
jp
int
movb
popf
leave
and
push
imul
je
orb
ficomps
scas
pushf
mov
adc
xchg
dec
xchg
dec
xchg
inc
add
inc
push
les
push
cs
mov
mov
add
mov
call
or
clc
cwtl
cltd
mov
sbb
inc
sub
fdivr
mov
dec
inc
lods
mov
jp
popa
pop
das
mov
inc
adcl
mov
mov
in
es
insl
adc
push
stos
lods
mov
mov
sub
outsb
sbb
inc
movsb
inc
andb
mov
ret
jnp
fwait
cmp
xchg
fs
cmp
imul
testb
mov
mov
loop
aas
cmp
pop
lret
push
pop
xor
sti
xchg
sub
and
ss
xor
xor
jp
mov
pusha
sbb
xchg
imul
xor
pop
out
rcr
dec
in
andb
cmp
pop
addr16
push
push
inc
jmp
jecxz
inc
push
pop
inc
jmp
jge
dec
pop
imull
icebp
cld
fimull
xchg
push
out
lock
xchg
imul
leave
int3
cmp
mov
inc
pop
in
repz
pop
jbe
lock
adc
jns
adc
push
pop
jmp
dec
lds
jbe
jnp
dec
xchg
or
popa
xchg
mov
jns
fidivs
or
aad
aad
repnz
lret
pop
push
jle
lret
adc
sbb
mov
xchg
dec
pop
push
daa
and
xor
addr16
je
xor
pop
int3
je
sbb
sbb
ret
in
sti
nop
outsb
shl
cmpl
jecxz
jmp
add
popa
faddl
pop
sub
daa
pop
or
out
push
pop
out
push
xlat
jne
out
jl
outsl
xchg
sbb
cmpb
jo
jle
pop
xchg
pop
mov
sbb
push
daa
cmpsl
jae
js
dec
xor
fcoml
pusha
lret
mov
nop
aam
leave
shrl
shrb
push
std
add
sub
dec
push
cmp
mov
fimull
dec
inc
cld
inc
stc
insb
xor
subb
fstpt
mov
and
and
lock
in
mov
das
notb
icebp
pop
mov
test
fisttps
or
jmp
pop
test
jne
hlt
lret
add
mov
xsavec
sti
sub
sub
inc
jo
inc
test
movsl
ds
fs
mov
xor
imul
add
outsl
sub
test
xor
adc
pop
and
clc
repnz
cmp
loop
dec
xchg
out
pushf
fdivp
push
pop
pop
sub
imul
test
fidivrl
out
js
pop
data16
mov
rcll
fwait
cltd
inc
addb
sbb
push
pop
fwait
cmp
les
shlb
mov
add
es
mov
and
mull
dec
rolb
in
pop
outsl
push
mov
repnz
mov
sub
out
gs
sub
scas
add
lahf
sbbb
lgs
jb
jge
mov
push
xor
int
test
push
or
inc
rcrl
dec
outsb
sbb
cld
or
jecxz
mov
cmc
clc
cmp
mov
pop
add
dec
out
mov
push
aad
imul
addr16
inc
lock
xchg
fs
or
sub
sbb
push
fwait
in
ljmp
loop
sbb
test
sbb
inc
mov
lods
jnp
jp
xlat
push
cmpsl
into
adc
clc
arpl
jp
out
xor
movb
mov
mov
inc
and
or
ret
aas
mov
inc
fs
inc
jbe
add
sbb
aaa
movd
adc
lods
jp
mov
cmp
and
pushf
mov
add
outsb
dec
and
xor
mov
cmp
hlt
xor
sbb
mov
shr
inc
int
and
jmp
mov
xchg
in
inc
push
arpl
lods
cmc
imul
or
aad
mov
outsl
cwtl
je
cmp
xor
mul
pusha
cli
mov
mov
jae
xor
popf
aaa
jp
push
mov
inc
push
pop
add
mov
mov
and
cmp
add
inc
sub
jecxz
xor
jmp
addb
pop
jp
sub
iret
jae
inc
insb
mov
gs
cli
inc
jle
outsb
aad
mov
or
jae
mov
xchg
loop
mov
inc
mov
lds
stc
push
mov
repz
fyl2x
push
aad
lea
divb
ret
ret
and
adc
sub
jae
in
cmp
repnz
mov
pop
sub
pop
nop
in
call
adc
cli
in
dec
xor
cmpsl
ds
loope
loop
xchg
std
sbbb
out
push
shrb
mov
push
and
dec
aas
outsl
mov
inc
xlat
mov
ss
popf
cli
clc
nop
cmpsb
cltd
mov
lret
jnp
test
cmpsb
push
inc
aam
rcrl
divl
call
lods
movsl
lods
dec
test
mov
pop
xor
inc
push
and
rol
mov
jnp
ss
push
or
ds
mov
test
jp
daa
lcall
jo
aam
mov
inc
iret
cli
data16
outsb
jne
cmp
xchg
fwait
lret
push
jne
or
cmc
or
outsb
pop
fmull
int3
js
jae
pushf
andb
dec
sbb
fistl
push
cwtl
das
pop
aam
pop
sub
push
mov
sarl
loope
adc
cld
in
pop
mov
decb
mov
pop
insb
or
fisubl
jae
shl
sub
push
std
into
test
bound
outsl
jns
pop
dec
mov
loop
cli
sbb
sbb
stos
cmp
pushl
pop
mov
jl
mov
pop
jmp
xchg
mov
mov
jg
jp
pop
sub
ja
mov
jae
sbb
mov
cltd
dec
mov
pop
inc
add
pop
lret
cmp
mov
pusha
jne
lods
ja
fwait
push
sbbl
cmpsl
mov
sub
ja,pt
xchg
leave
adc
dec
cmpsl
lret
cmpsl
jbe
pop
or
push
cmpsl
daa
xchg
ret
lock
movsl
cld
rorl
mov
xlat
add
add
push
sbb
sub
shlb
pop
add
fisttps
idiv
mov
jbe
sbb
mov
movsl
fs
add
adc
pop
fildll
sbb
test
jns
ja
int3
xchg
xor
add
arpl
test
data16
pop
fnsave
loop
mov
sub
inc
mov
test
das
loope
push
ffree
mov
scas
fisubrs
test
xlat
mov
imul
push
std
addr16
push
push
dec
cmpsl
and
insb
in
jo
arpl
pusha
cli
push
lahf
fidivl
popa
pop
pushf
jge
jns
sub
movsl
inc
jge
repz
push
push
sub
mov
push
movsl
push
out
popf
fsub
je
gs
cmp
sub
pop
into
cmp
arpl
mov
push
inc
sub
lock
jae
popa
cltd
jae
aaa
dec
fbld
icebp
sbb
in
sahf
out
jl
mov
inc
or
pop
sahf
jp
icebp
or
or
loopne
arpl
jo
mov
or
dec
iret
push
mov
nop
sbb
xchg
sbb
neg
ret
cmp
rcll
dec
or
fsubrp
xchg
lret
pop
in
ss
sarb
ret
xchg
adcb
jmp
fdivl
out
fnstsw
clc
sbb
pop
enter
mov
inc
fidivl
mov
insb
cmp
shrl
cmp
insl
jge
xor
mov
push
ss
repz
push
dec
inc
push
add
mov
mov
les
xor
movsb
inc
rorb
jecxz
xchg
dec
pop
push
das
mov
jecxz
push
xchg
mov
add
fmuls
int3
adcl
jne
mov
outsl
sarl
sbb
add
int
sub
or
dec
in
mov
push
out
mov
push
xchg
adc
cltd
jg
and
scas
push
push
jb
negb
or
aad
out
scas
ja
add
push
addr16
std
loope
iret
or
mov
outsb
cmp
jp
imul
movsb
add
xchg
jle
pop
adcl
stos
inc
jns
pinsrw
fs
or
mov
std
stos
jl
insb
mulb
xchg
adc
mov
xor
inc
aas
dec
inc
xor
fs
and
movl
adc
xor
xchg
in
sub
into
nop
aas
insl
sub
jns
inc
aam
je
inc
mov
sub
mov
jo
cmp
scas
mov
insb
push
and
stos
sub
and
xchg
ret
and
add
xor
add
rorb
add
lods
lahf
stos
dec
cmp
jg
bound
or
jnp
arpl
sub
mov
test
add
mov
imul
or
jne
test
mov
mov
mov
and
push
push
inc
xor
add
cmp
dec
aas
mov
or
add
aad
loopne
cld
insl
popf
ret
adc
leave
adc
mov
js
and
mov
scas
adc
call
jns
repz
scas
xchg
ret
divl
out
jb
push
add
lock
mov
mov
std
es
mov
cld
cmp
jp
or
into
pop
sub
inc
inc
repz
dec
push
adc
aaa
sub
sub
pop
ficompl
arpl
cld
aam
push
dec
lock
bound
or
call
inc
dec
mov
fsubrl
and
adc
xor
mov
dec
shl
ret
dec
push
sti
jae
fwait
out
inc
fnsave
jp
aaa
or
jmp
or
test
pop
insb
in
pop
lcall
cmc
mov
add
lods
adc
jle
mov
orb
inc
out
mov
jb
pop
inc
into
or
adc
and
scas
sub
sub
out
sub
ret
hlt
push
cmp
dec
jbe
or
adc
push
adc
sbb
mov
jne
les
rcll
pop
out
jge
outsl
ror
mov
in
jns
mov
or
adcl
add
sbb
aad
dec
mov
mov
mov
xchg
sub
data16
jb
sub
sarl
rorb
gs
lock
mov
into
xor
out
aas
outsb
pop
push
rcrl
icebp
and
mov
popf
jne
or
in
push
fadd
fbstp
test
push
jbe
push
jg
gs
fs
cmp
adc
sbb
imul
xchg
pop
fists
inc
cmp
repz
andl
in
nop
cld
cs
gs
jl
sub
sbb
adc
xorb
dec
xlat
push
mov
cmpsl
cmp
movsb
test
cmpsb
jbe
xor
xor
orl
cmp
adc
pushf
inc
push
inc
test
adcl
pop
cmp
std
push
fdivp
push
mov
push
shrb
add
scas
repz
jmp
lock
out
mov
fbstp
sbb
xchg
sti
jle
test
shl
inc
sbb
insl
loop
sub
scas
add
cmc
push
psllq
or
fistl
mov
xchg
test
cmpsl
cmp
xor
pushf
fadds
leave
in
push
xchg
xorl
cmp
sub
jb
mov
fnstsw
and
cmpsb
sub
cmp
push
mov
lods
mov
loop
popa
pushf
inc
sbb
leave
push
xchg
pop
and
rorb
or
sub
mov
mov
repz
or
imul
mov
jb
sahf
sahf
aas
inc
int
pop
stc
xchg
aam
test
xchg
mov
fmuls
test
hlt
sub
mov
popa
adc
jecxz
push
mov
dec
cmp
adc
inc
das
jo
in
and
data16
repz
pop
push
sub
les
roll
push
sub
push
adc
xorl
loop
jne
cmp
bound
notb
aaa
dec
mov
mov
jmp
xadd
xor
lret
test
pop
add
ret
mov
or
les
or
push
push
jp
cmpsl
cltd
rclb
push
jbe
jg
sub
inc
sub
xchg
test
pusha
out
lock
jns
sti
xor
xchg
sti
dec
outsb
fs
push
jp
je
js
sbb
cmp
call
stos
pop
stos
and
push
lods
daa
or
or
iret
xor
dec
push
push
jg
ret
pop
in
push
or
mov
jge
rclb
pushf
adc
movb
mov
mov
inc
mov
and
dec
add
sti
and
inc
mov
push
out
jmp
jge
notl
push
std
fldl
xchg
mov
movaps
lods
iret
mov
jbe
mov
stos
lret
rcll
xor
jp
or
inc
sbb
cwtl
or
push
sbb
stc
inc
rclb
mov
xor
test
mov
mov
mov
cmc
lock
dec
loope
sbbb
stos
xchg
fwait
jno
arpl
adc
mov
rcrl
xor
shrb
rorb
jns
sub
shll
pop
shlb
add
cmp
or
mov
adcl
add
mov
fucomi
sub
inc
or
adc
movsb
xchg
inc
jno
js
iret
aam
xchg
je
push
push
fdivrs
xchg
cli
cmp
jno
jb
adc
shl
push
sub
jne
shl
mov
mov
mov
sbb
mov
xchg
xchg
movsb
push
or
ret
sub
aas
add
inc
push
sbb
or
lock
cs
rclb
xchg
jnp
sahf
fbstp
hlt
mov
leave
xchg
stc
jle
pop
xchg
sub
cwtl
sti
or
adc
cli
imul
scas
add
sub
dec
add
and
sub
clc
pop
cmc
test
pop
ret
push
fidivrs
cmp
dec
push
pop
mov
sbb
pop
enter
lret
rolb
andl
lcall
adc
push
or
nop
mov
mov
repnz
lcall
ss
mov
imul
push
insb
loope
jmp
mov
stos
pop
jns
jae
cli
out
shll
test
or
popa
test
daa
or
mov
push
stc
test
movsl
add
test
inc
cmp
push
pop
mov
sahf
js
jle
int
aad
leave
imul
pop
adc
xchg
inc
das
scas
addr16
adc
push
lods
in
sub
mov
jns
adcb
das
lret
ljmp
dec
insl
mov
fstl
mov
and
jno
aam
push
add
jne
push
mov
xchg
out
fwait
mov
sub
or
mov
adc
and
jle
xchg
int
or
cmovb
adc
add
jmp
or
jmp
nop
inc
mov
sub
cld
out
jne
fldl
in
aam
cli
pushf
out
decb
popf
icebp
sbb
mov
pop
jp
pushf
push
and
jae
cmp
ret
mov
or
jg
jmp
dec
push
jmp
loop
dec
cs
out
mov
pop
mov
outsl
js
sahf
in
mov
and
xor
xchg
add
push
inc
jecxz
cmpsl
adcb
cmp
or
subl
in
jle
cli
sub
xchg
js
jg
xchg
movsl
scas
ret
xchg
in
cmc
mov
mov
pop
test
mov
es
jl
jno
sbb
js
out
cmpsl
es
les
jle
in
sub
mov
dec
push
inc
inc
mov
ljmp
dec
test
mov
gs
jl,pn
aaa
loop
pop
mov
incl
inc
nop
iret
xchg
rolb
daa
jns
adc
sub
adc
dec
push
add
xchg
sub
iret
jle
scas
movsl
mov
xchg
jbe
dec
dec
inc
fisubrl
xor
jg
add
icebp
int
fs
cmp
or
scas
mov
ss
xchg
xlat
sar
ljmp
mov
js
jle
aas
cld
cmpsl
orl
cmp
sti
pop
ljmp
mov
jle
or
mov
test
sti
push
adc
mov
loope
mov
int3
int
push
sub
push
fbld
aas
inc
and
sub
insl
mov
xchg
sarb
mov
sbb
pusha
adcb
xor
movsl
loopne
es
mov
fwait
or
loop
mov
ljmp
outsl
pusha
inc
cmpsl
adc
xchg
xchg
jmp
iret
imul
pop
or
sub
jb
lcall
and
cmp
add
lock
xchg
push
test
jnp
stc
jno
stc
inc
dec
sub
ret
inc
mov
mov
lcall
push
imul
jecxz
sbb
and
fwait
aad
xchg
mov
jmp
loop
scas
hlt
cmpsl
lea
popf
mov
and
and
ret
mov
lcall
punpckldq
inc
insb
xchg
inc
dec
xor
dec
lods
gs
mov
adc
stos
or
push
jecxz
mov
icebp
fldcw
pop
int3
test
test
xchg
xchg
adc
xchg
popa
dec
nop
dec
loope
fwait
pop
sti
xchg
fists
adc
cli
insl
push
ja
cltd
cmp
push
insl
lea
mov
cld
sub
dec
in
cmpsb
xchg
mov
pop
repnz
xor
cltd
xchg
aas
sub
push
xchg
je
cld
scas
jo
in
adc
sub
jge
sub
sbb
adc
sub
loopne
jb
ljmp
in
xchg
dec
cwtl
pop
movsb
adc
orl
call
ret
mov
sub
test
or
jle
aad
subl
jns
pop
mov
and
cltd
je
mov
loope
sub
push
addr16
cmpsb
sub
xchg
jb
jp
int3
push
cltd
rcrl
popf
and
loopne
cld
fildll
mov
xor
je
mov
jae
hlt
ljmp
lahf
mov
pop
jae
lods
mov
sub
outsl
lret
add
xor
fisttpll
std
fwait
pop
or
je
ds
pop
aaa
jnp
sub
dec
lret
mull
lret
das
fadd
insl
push
out
mov
inc
sub
inc
jg
sarl
loope
inc
dec
jbe
cmpb
ja
js
adc
aaa
hlt
lcall
nop
dec
incb
sub
fildl
or
mov
scas
dec
cmp
inc
stos
insb
fwait
popf
in
fmull
pop
hlt
lods
push
jle
pop
ror
arpl
pushf
gs
movsb
bound
inc
adc
in
cmp
shll
mov
push
xchg
pop
cs
adc
loop
imul
sub
cltd
mov
push
icebp
add
push
jae
in
int
aas
movsb
aaa
xchg
push
mov
in
rcrl
les
movsb
or
xchg
xor
jp,pt
adc
aad
cmpsb
aad
or
inc
ret
lcall
fsubs
adc
cmp
adc
add
mov
pusha
inc
lcall
mov
enter
sahf
out
out
movzbl
leave
dec
jbe
push
lds
xchg
jle
lcall
and
sub
rcll
mov
dec
xorb
inc
cwtl
jo
pop
inc
jmp
loope
in
lods
mov
bound
jmp
out
inc
icebp
push
shlb
xor
test
mov
pop
out
sub
inc
add
push
hlt
das
jne
pop
and
xor
and
lods
jp
cwtl
pop
mov
pop
xchg
inc
imul
sti
adc
shlb
jb
jnp
pop
clc
popf
test
inc
push
fists
pop
cmp
fs
push
out
mov
insb
fists
sub
mov
int3
sarl
sbb
mov
bound
psubusw
dec
lock
lahf
mov
push
mov
add
xchg
sti
cmp
sahf
cmpl
je
push
pop
inc
adc
add
or
loope
xor
xchg
mov
jp
mov
pop
stos
push
add
mov
int3
daa
jo
into
dec
jb
ja
in
sbb
cmp
out
xor
fisubl
lret
lahf
cmc
mov
mov
pusha
ds
ja
imul
pop
xchg
dec
sub
pop
enter
push
dec
mov
js
outsl
cmp
xor
dec
add
mov
dec
icebp
jle
sahf
jg
mov
aad
and
xor
push
pop
pop
xor
pop
pop
xor
rclb
jmp
std
outsl
test
cmpsb
pop
enter
stc
icebp
repz
aaa
iret
mov
or
xchg
fsubrl
push
or
aaa
mov
test
xchg
pusha
sbb
loopne
mov
pop
xchg
cmc
sbb
mov
jae
push
pop
mov
or
dec
pusha
jnp
in
push
cmp
mov
push
std
cmovae
xchg
push
inc
insl
fcmovu
push
jmp
test
cs
sti
and
mov
fisubrl
int3
pop
pop
cmp
xchg
jnp
and
adc
jl
mov
mov
ret
roll
dec
lcall
sti
sbb
inc
inc
lret
loope
nop
ljmp
fwait
stos
cli
push
cmp
or
or
mov
or
fisttpl
pop
add
mov
sub
jae
cmpl
cs
ljmp
aad
fldt
fmulp
xchg
adc
lret
add
mov
mov
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
orl
sub
sbbl
push
push
push
andl
push
orl
push
orl
call
subl
mov
lea
push
subl
push
movl
call
cmp
je
xorl
xor
jmp
mov
xorl
push
lea
push
push
push
subl
push
adcl
call
imul
cmp
movl
jne
orl
lea
andl
push
addl
push
andl
call
cmp
jne
addl
movl
or
mov
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
addl
movl
mov
or
lea
mov
xor
lea
sbb
mov
or
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
xor
add
dec
mov
jmp
mov
mov
mov
mov
mov
sbb
xor
adcl
mov
addl
add
notl
mov
movl
mov
cmp
movl
jne
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
adcl
xor
subl
add
addl
mov
mov
xor
notl
add
sbbl
mov
mov
sbbl
xor
subl
add
mov
andl
xor
xor
inc
mov
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
mov
addl
mov
mov
mov
mov
addl
mov
orl
mov
mov
decl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
sbb
mov
xor
xorl
add
jmp
lea
subl
push
addl
push
addl
call
movl
cmp
jne
push
lea
addl
push
adcl
push
push
orl
push
call
imul
movl
cmp
movl
jne
sbbl
lea
push
push
sbbl
call
movl
cmp
jne
mov
xor
mov
sbbl
xor
sbbl
lea
incl
push
add
mov
xor
lea
xorl
push
movl
mov
xorl
pushl
adcl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
adc
xor
and
lea
mov
neg
mov
orl
xor
orl
xor
xorl
add
mov
addl
xor
movl
lea
movl
mov
cmp
jbe
xor
or
or
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
push
call
cmpl
jb
mov
mov
mov
movl
cmpl
je
cmpl
ja
jmp
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
movzbl
adc
mov
subl
sub
andl
xor
mov
lea
mov
xorl
lea
subl
mov
lea
subl
push
addl
push
call
movl
cmp
movl
jne
push
lea
xorl
push
push
adcl
push
push
call
imul
cmp
jne
lea
push
push
subl
call
movl
cmp
movl
jne
lea
addl
push
negl
push
addl
call
movl
cmp
movl
jne
xorl
push
orl
lea
andl
push
subl
push
adcl
push
xorl
push
orl
call
imul
movl
cmp
jne
orl
lea
push
subl
push
notl
call
movl
cmp
movl
jne
lea
push
subl
push
subl
call
movl
cmp
jne
addl
push
lea
push
sbbl
push
push
push
call
subl
imul
movl
cmp
jne
addl
lea
orl
push
push
andl
call
movl
cmp
movl
jne
andl
lea
adcl
push
orl
push
sbbl
call
movl
cmp
movl
jne
xorl
push
lea
orl
push
push
push
subl
push
call
imul
movl
cmp
movl
jne
addl
lea
orl
push
andl
push
andl
call
cmp
jne
orl
lea
subl
push
xorl
push
addl
call
movl
cmp
movl
jne
adcl
push
xorl
lea
xorl
push
adcl
push
push
sbbl
push
adcl
call
imul
cmp
jne
movl
lea
addl
push
notl
push
call
movl
cmp
jne
lea
xorl
push
push
addl
call
movl
cmp
movl
jne
push
lea
adcl
push
xorl
push
adcl
push
xorl
push
call
adcl
imul
movl
cmp
jne
lea
xorl
push
push
orl
call
movl
cmp
jne
addl
lea
movl
push
push
adcl
call
movl
cmp
jne
andl
push
lea
push
push
subl
push
sbbl
push
call
xorl
imul
movl
cmp
movl
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
sub
mov
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
or
mov
push
movl
cmpl
je
cmpl
ja
jmp
push
pushl
call
mov
dec
mov
jmp
mov
xor
mov
push
mov
add
cmp
movl
je
movzwl
adc
mov
mov
incl
xor
andl
xor
add
addl
add
movl
adc
orl
xor
adcl
mov
movl
cmpl
je
cmpl
jge
jmp
push
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
jmp
sbb
cmp
xchg
xchg
dec
push
fbld
addb
outsb
cmpsl
andb
mov
inc
leave
or
fildll
test
fs
mov
cmp
cmpsb
push
mov
leave
lret
mov
stc
mov
jle
repz
mov
lret
ja
out
es
aad
push
mov
mov
outsl
xchg
push
icebp
fimull
mov
mov
mov
inc
cmp
out
inc
jo
movsb
mov
loopne
pop
fldenv
or
mov
add
lods
push
test
fsts
lahf
pop
fst
in
in
jge
pop
js
add
mov
cmc
fcoms
jno
sbb
out
mov
out
shll
push
cwtl
xchg
cmp
lock
lods
seto
int
leave
sbb
inc
popf
cltd
push
push
add
xchg
cmpsb
pushl
orb
cmp
mov
sub
adc
sbb
lret
adc
dec
sub
sbb
sbb
jb
call
cmp
inc
mov
xlat
xor
mov
add
push
dec
xchg
sahf
pop
jmp
and
mov
push
cmp
dec
fdivrl
mov
inc
fbld
push
xchg
je
andl
arpl
in
mov
insl
int
mov
xchg
cli
nop
in
and
mov
std
scas
cmp
pop
add
lret
fisttpll
inc
sbb
shr
xor
mov
cs
enter
nop
sarb
or
fwait
test
inc
mov
xchg
dec
cmc
mov
or
push
lods
cmp
rcll
inc
mov
lcall
insl
push
js
mov
pop
pop
mov
ss
dec
mov
push
pop
int
scas
mov
fsubr
mov
dec
push
cmpsb
pop
adc
pxor
lock
into
in
popa
lcall
out
xor
mov
cltd
inc
add
jp
scas
mov
dec
push
jl
fnsave
mov
inc
call
mov
subl
test
mov
jo
inc
inc
and
out
js
cmpsb
cmp
popf
loop
repz
enter
rclb
xor
cli
push
les
call
sbb
mov
mov
filds
insl
push
repz
test
sub
dec
stc
pusha
sub
cmpsl
je
pusha
es
xchg
xchg
aam
shl
adc
add
loopne
push
push
add
add
orl
mov
ljmp
cmp
mov
sti
out
mov
ret
scas
fstl
hlt
fcmovbe
lret
push
jmp
or
subb
or
add
ss
pop
pushf
dec
dec
push
inc
push
inc
call
into
std
cmp
jmp
jp
jno
test
add
inc
inc
cld
fcomi
xchg
mov
mov
push
in
iret
mov
cld
xor
cmp
loop
ja
xchg
sub
aad
lea
lahf
mov
inc
mov
adc
imul
mov
jl
dec
pop
ret
jo
mov
jae
cwtl
jo
imul
adc
sub
push
lret
xlat
lahf
or
inc
inc
cmp
les
in
cli
or
lea
popf
mov
jne
in
sti
lods
or
lods
rorl
or
jo
iret
icebp
lds
dec
pusha
iret
js
or
mov
push
flds
stos
call
and
push
jecxz
jbe
in
sub
push
adc
fmull
push
jno
push
and
mov
lret
xchg
daa
out
dec
stc
push
fisubs
sahf
sub
mov
xor
sti
aaa
stos
leave
popa
inc
mov
push
jecxz
pop
imul
and
sbb
jnp
or
sub
inc
xor
pop
test
xchg
pop
fisubrl
jae
xchg
addr16
popf
sub
nop
push
push
push
jp
jecxz
iret
jo
fistpl
into
cmp
fnsave
pop
adc
push
stc
lock
add
orb
ljmp
mov
cmp
insl
mov
int
sbbb
dec
jb
mov
dec
ret
lock
mov
dec
add
sbb
nop
cmp
test
push
pop
dec
pop
push
add
sub
mov
leave
aad
mov
jae
sub
nop
les
pop
es
inc
push
sub
inc
sub
mov
dec
ds
jmp
out
jae
mov
push
pop
ljmp
mov
mov
cmp
gs
sub
cmpsl
or
mov
popa
aam
inc
jae
and
loop
sbb
insl
fsubr
push
mov
xor
jb
sbb
or
test
sub
iret
lcall
inc
and
dec
dec
shlb
enter
push
dec
mov
out
test
and
and
nop
aam
and
incl
fildll
jecxz
mov
ret
jbe
and
sahf
mov
ljmp
xchg
adc
inc
push
and
popf
push
pop
ljmp
shrl
jne
lods
daa
inc
xchg
sbb
sub
sahf
out
lock
mov
fcoml
js
and
ret
in
xchg
repnz
cmpsl
cmpsb
std
test
std
push
insb
data16
dec
xor
push
shr
pop
and
ficoms
push
scas
push
mov
cs
data16
ljmp
mov
addr16
jmp
push
jb
ficompl
call
jmp
ja
push
jmp
pop
repz
push
jae
mov
fsubs
mov
faddl
cmp
sub
or
pop
ret
fisubs
inc
cmp
gs
lods
fdivl
fdivrp
add
add
imul
orl
push
sub
sub
hlt
out
test
int
lock
rol
push
xor
and
int3
sbb
leave
mov
movsl
add
cmpsb
jmp
std
test
push
push
cli
lcall
popa
in
aas
adc
add
cmp
fdivs
dec
adc
ds
imul
scas
jg
leave
sbb
jl
jnp
or
jg
jecxz
sti
clc
lods
shrb
fists
shll
outsb
fwait
es
mov
fisttpl
mov
paddq
add
into
mov
xor
dec
shll
sbb
push
in
aad
sub
addb
xchg
jbe
mov
adc
aam
stc
icebp
and
insb
push
mov
ja
mov
loopne
add
test
mov
scas
loopne
icebp
ljmp
xchg
dec
in
mov
jecxz
scas
inc
mov
insb
cmp
aad
jle
sbbl
lret
rorb
ds
repnz
lods
fsubrp
mov
mov
pop
popa
jl
scas
inc
icebp
movsl
cmpb
jg
xor
int
icebp
dec
inc
imul
pop
stos
cmp
jle
test
push
cwtl
or
fs
insb
lods
popf
andl
xchg
adc
inc
in
mov
adc
mov
dec
sub
push
js
insl
mov
scas
mov
inc
daa
pop
adc
cmp
shrl
test
jl
adc
sub
cmp
ljmp
mov
adcl
xchg
lods
pop
push
inc
call
fimuls
xchg
out
test
out
insb
sbb
mov
cmpsb
testb
aad
popa
fs
inc
clc
loopne
sbb
cmp
push
int3
pop
notl
lea
mov
out
mov
cmp
stc
pushf
add
xor
imul
aad
dec
movsl
mov
xor
dec
cli
lret
scas
rcrb
icebp
aaa
mov
pushf
hlt
insl
xor
jecxz
or
mov
bnd
fbstp
mov
imul
imul
int
jne
pop
ror
xorb
push
sbb
mov
stc
fimull
or
call
jno
mov
mov
aaa
mov
cmp
fnstsw
cmpsl
lcall
adc
lds
xchg
and
xchg
mov
test
mov
sub
adc
push
push
sbb
add
jne
push
pop
inc
mov
js
mov
stos
jecxz
out
jmp
pop
lods
cmpsl
aad
push
and
test
stos
inc
notb
popa
and
dec
push
xchg
mov
pminub
pop
es
iret
dec
repnz
jno
sbb
pop
js
xlat
dec
mov
push
pop
jbe
jo
cmpsl
mov
aaa
stos
mov
movsb
mov
cld
popf
pop
cmp
into
das
lods
jne
loop
pop
mov
stos
jae
aaa
fcmovne
pushf
jns
jg
fisttpl
mov
xchg
sub
adc
mov
enter
cmpsb
rcrl
mov
mov
cmp
repnz
mov
sub
out
pushf
jns
rcll
rep
shrl
movsb
or
mov
xor
dec
lods
mov
or
jno
cmovae
outsl
xchg
loop
pop
jmp
jl
pop
fwait
out
adcb
mov
popa
mov
or
icebp
mov
cmp
stos
movhlps
xchg
mov
xchg
leave
jl
push
or
in
movsb
sbbb
and
dec
cmpl
adc
es
fucomp
insb
call
add
sahf
loopne
pop
sbb
test
add
sbb
push
sub
inc
adc
dec
ljmp
into
inc
fbld
call
push
jns
shlb
test
scas
out
add
dec
sbb
in
pop
jb
mov
scas
xor
movsl
mov
xchg
rorb
xchg
into
rcll
bound
jecxz
mov
pop
sbb
push
mov
mov
nop
cmpsl
popa
dec
pop
cmp
in
jmp
js
test
pop
test
jae
sub
imul
push
pop
mov
fiadds
or
xchg
pop
xor
or
sub
jl
in
lds
pop
and
outsl
jnp
cmpsl
jecxz
test
push
xor
ss
in
sub
push
pop
push
cmp
sbb
aam
je
mov
mov
pop
sbb
mov
out
es
shll
aam
push
lea
nop
add
stos
std
fdivrl
mov
cltd
jecxz
add
dec
hlt
sub
adc
lds
jne
sub
fidivs
ja
push
jmp
push
sbb
or
pop
xchg
insb
enter
adc
adc
xchg
jnp
sub
insb
and
inc
and
repnz
lret
push
hlt
adc
imul
inc
xchg
cmp
xchg
test
ljmp
xchg
sbb
mov
xor
pop
into
fistpl
cmpsb
pop
inc
fs
mov
cmp
xchg
adc
adc
mov
fdivl
imul
fwait
and
ja
and
add
repz
pop
mov
jo
mov
inc
fwait
sbb
xchg
or
test
aaa
int
xor
mov
fisubl
stos
xchg
xchg
cwtl
dec
ljmp
das
fnstcw
mov
out
xchg
push
cmpsb
les
dec
jbe
sti
addb
int3
rorb
mov
mov
mov
iret
stc
sbb
inc
sub
popl
mov
jns
sub
xlat
sahf
mov
cmp
mov
aad
mov
loope
insb
inc
adc
das
push
adc
sbb
std
gs
fldt
and
out
dec
scas
dec
add
lret
daa
in
lds
add
ja
icebp
out
mov
xchg
cld
hlt
cmpl
and
mov
test
cs
arpl
stc
jb
mov
xor
pushf
cmp
dec
pop
fistps
cld
in
dec
stos
push
das
mov
jne
pop
cmp
inc
jecxz
mov
pop
sub
xchg
pop
mov
imul
sti
arpl
mov
adc
xor
sbb
fisttpl
xchg
idivb
add
aam
jns
mov
stc
inc
pop
jne
notb
data16
fistpl
xchg
scas
stc
pop
push
xor
sub
daa
jl
mul
adc
lret
and
and
mov
scas
into
mov
xchg
sahf
mov
rclb
cld
push
insb
push
lea
adc
cmp
mov
push
cmpsb
pusha
xchg
xor
inc
pop
lahf
rcll
push
out
hlt
iret
int
fstpt
push
sub
add
int
data16
pushf
loopne
jp
mov
stos
adc
push
lds
add
xchg
pop
mov
mov
fisubrl
adc
ja
mov
lds
pop
fsubl
sbb
inc
cli
lret
repz
cmp
pop
fsubp
push
daa
push
lock
ss
lret
icebp
fldenv
movsb
out
sbb
les
lret
js
add
inc
inc
push
addl
add
dec
and
adc
stos
xor
ss
imul
popa
add
test
inc
cmp
dec
sahf
loope
test
into
pop
cmp
push
ja
pop
cmp
sub
push
jg
je
pop
or
adc
push
dec
xchg
call
into
sbbb
pop
mov
xchg
push
ds
and
inc
ret
and
sbb
shrl
pop
cmp
shrb
xor
mov
dec
adc
lods
nop
lods
jmp
loope
data16
add
jmp
mov
mov
pushf
ret
pop
lods
inc
fimuls
fs
out
mov
sub
int3
enter
pop
shlb
push
pushf
jno
lahf
insl
push
and
sbb
enter
addr16
negl
out
arpl
or
xor
lea
sbb
lea
lea
pop
inc
jg
into
fidivl
fmuls
lods
js
pop
and
or
fyl2xp1
orl
inc
add
out
mov
push
icebp
xchg
int
jle
std
dec
adc
outsl
ljmp
push
mov
dec
sub
mov
js
cmp
mov
pop
insb
inc
adc
lods
cmp
pop
jnp
lods
int3
xlat
xchg
mov
inc
push
mov
inc
idiv
pop
lret
fsubrl
ret
xchg
in
cmpl
lahf
pop
jnp
xor
xor
adc
cmp
mov
cmp
jle
arpl
in
test
xchg
cmp
js
or
rcrl
hlt
jns
adc
addb
pop
stos
push
enter
adc
pushf
inc
sbb
nop
lds
shr
fisubs
lret
out
jge
xor
int
clc
lds
adc
adc
xor
mov
mov
and
fwait
inc
int
mov
popf
xchg
push
lret
inc
gs
or
add
and
out
mov
add
pop
sbb
cltd
ret
adcl
mov
bnd
lods
rolb
addb
jl
aad
or
mov
jo
je
rorb
imull
lret
mov
pop
xchg
loope
ret
or
jmp
and
push
imul
repz
movsl
mov
mov
int
clc
and
and
fldl
jle
inc
addr16
ds
xchg
add
faddl
xchg
pop
pop
sbb
mov
lds
jns
push
in
outsb
inc
call
js
mov
push
fmulp
sub
cmp
sub
popa
imul
mov
je
fadds
xchg
mov
xor
stos
lea
stos
jmp
jb
shl
xchg
int3
insl
pop
rcll
jle
shll
cmc
cld
outsl
mov
clc
or
mov
and
cli
cwtl
or
outsb
adc
repz
pusha
repnz
insb
mov
aam
mov
mov
mov
mov
add
pop
xchg
icebp
shll
ficomps
jb
jp
sub
add
std
inc
rcrb
mov
add
mov
mov
cmp
mov
pop
das
sbbl
mov
mov
add
mov
xor
lods
std
dec
push
clc
fs
rclb
mov
das
repnz
lret
jge
pop
add
push
cli
in
js
stc
std
addr16
mov
outsl
lds
popf
in
fidivrl
sub
std
fs
push
iret
xchg
dec
xor
mov
orb
cmp
leave
mov
bswap
dec
sbb
mov
xor
aam
adc
add
in
mov
jo
loopne
sub
mov
inc
enter
sbb
fisttpl
movsb
mov
mov
pop
ljmp
cmpsl
add
dec
push
inc
repz
mov
inc
xchg
push
test
fdivrs
add
ret
ret
movsl
adc
sbb
pop
ja
lock
or
xor
sub
sbb
sub
ss
mov
dec
mov
aam
inc
test
call
xor
lods
lds
cltd
imul
mov
jge
sarl
mov
xor
stos
call
ror
jmp
sbb
mov
cmp
andb
adc
push
repz
popf
push
stos
hlt
cli
xchg
sbb
xchg
rclb
xchg
or
lea
jbe
scas
cwtl
dec
ljmp
jmp
inc
jmp
inc
xor
enter
mov
arpl
adc
movsb
mov
or
mov
pop
neg
popa
jmp
mov
xor
cmp
lret
jmp
inc
mov
dec
lds
sbb
ror
push
pop
divb
test
inc
cmp
popf
xchg
fdivl
and
pop
inc
push
inc
inc
mov
dec
es
and
inc
mov
jb
xor
popaw
lahf
add
sbb
scas
mov
ljmp
fmull
and
cmc
std
scas
jg
sub
push
push
enter
push
mov
test
xchg
or
addr16
pop
pop
xchg
or
cmp
mov
imul
mov
xchg
push
cmpsb
shrl
loopne
test
in
les
sub
or
adc
and
mov
dec
adc
inc
pop
cmc
cltd
inc
sbb
addr16
xchg
imul
bound
aam
push
push
or
fdivs
fcmovbe
lds
loop
int3
xchg
sarl
movsl
sbb
pop
mov
js
cmp
in
fmul
xchg
pushf
cmp
and
mov
test
fisttps
repz
mov
iret
mov
in
cs
pop
int3
mov
pop
xchg
inc
sub
dec
orb
movl
add
test
pop
test
cmpsb
or
std
inc
mov
mov
cmpsb
out
pop
cmpsb
fstl
mov
xchg
call
inc
add
inc
dec
fwait
push
je
sub
nop
sbb
pop
xchg
test
mov
push
out
mov
jo
test
outsl
push
sub
adc
push
cmp
lret
gs
xchg
std
mov
clc
sub
mov
pop
xchg
xchg
dec
push
pop
negb
and
jge
mov
push
pop
inc
frstor
sub
daa
fadds
push
inc
lret
inc
mov
sub
adc
movsl
adc
aad
cmpsl
xchg
push
jbe
adc
sbb
fs
sbb
xlat
lret
pop
icebp
dec
push
lret
push
adc
push
xor
divb
in
dec
shlb
out
movaps
inc
and
outsl
xor
sub
add
cmc
push
or
scas
in
scas
xor
cltd
stc
lcall
in
xchg
fstps
xchg
ret
mov
xor
in
jp
push
ficompl
bound
sbb
dec
and
mov
out
sar
inc
inc
outsl
std
aaa
scas
arpl
or
xor
data16
std
lods
aaa
adc
daa
fucomp
sti
pop
jb
loope
jne
mov
dec
call
jne
xchg
arpl
in
popa
sub
sbb
sub
jae
jg
jb
jae
cmpl
aad
xor
pusha
shrb
scas
mov
sub
xchg
and
push
or
dec
nop
mov
inc
xchg
aam
dec
xor
xchg
or
sub
and
inc
or
out
dec
idivb
pop
jg
jl
jecxz
iret
inc
fiadds
jp
into
aam
leave
loope
pushl
dec
sbb
pop
rcrb
mov
ja
outsl
mov
jne
mov
add
fwait
dec
fisttpll
mov
sub
divl
adc
test
stc
in
mov
or
out
scas
bnd
push
outsl
mov
repnz
mov
cmpb
fidivrs
into
xchg
fstpt
mov
subl
cmpl
jae
xchg
pop
xor
rcr
fildl
popl
das
fiaddl
sbb
sub
cs
jae
js
mov
mov
pop
adc
dec
or
outsl
cmp
gs
clc
sub
mov
or
loope
pop
mov
or
fwait
mov
stos
lcall
sub
lods
adc
repz
adc
stos
ss
pop
mov
mov
ret
mov
push
cmp
cmc
jl
xor
or
sar
adc
jl
mov
cmovo
aam
or
xchg
mov
ss
scas
rorb
sub
sub
fistl
mov
out
incl
ja
bound
jl
dec
loopne
add
hlt
push
mov
mov
dec
stos
xchg
popf
lock
icebp
fcmovnb
xlat
stos
mov
cmc
adc
leave
outsl
jns
adc
push
or
sub
notb
mov
inc
sbb
push
jnp
cmpsl
in
xchg
mov
push
and
mov
cmp
mov
inc
cmp
pop
jno
mov
repnz
push
leave
stos
cmpsl
popf
mov
mov
and
cmpsl
imulb
adcb
sbb
loope
cltd
or
out
mov
cmp
add
fldcw
aas
scas
inc
inc
cmpsb
daa
and
fs
sub
jno
in
imul
dec
mov
inc
dec
cwtl
cmpl
sub
and
inc
and
int
imul
shrl
icebp
mov
imul
les
vmread
add
insb
mov
dec
roll
sub
mov
inc
jbe
test
jp
dec
das
xor
insl
ja
shlb
fcmovnu
sbbb
sub
bound
mov
fs
jg
daa
mov
xor
or
or
mov
sbb
daa
nop
cld
push
js
bound
mov
mov
cli
imul
mov
in
mov
inc
jnp
push
ss
and
jae
rcll
add
mov
jbe
push
insb
push
lahf
push
addr16
xchg
push
pop
cmp
dec
into
sbb
aaa
pusha
jmp
je
pop
mov
imul
mov
mov
jecxz
dec
mov
xorb
pop
mov
pop
mov
test
addr16
into
lcall
shr
adc
jle
sub
clc
dec
sbb
roll
ds
sarb
xor
inc
sbb
add
int
in
in
pushf
pusha
cmp
or
mov
push
inc
xchg
push
cmp
mov
nop
iret
clts
cmp
jne
ljmp
jno
stos
xchg
cld
lods
cmp
into
lock
pop
out
in
or
push
lret
daa
xchg
sbb
lahf
ret
sbb
xor
dec
push
push
ret
xor
lret
add
inc
xor
leave
pop
mov
adc
hlt
outsl
fwait
dec
mov
dec
cmc
xchg
lods
adcb
jnp
mov
jecxz
mov
push
mov
cs
imul
mov
ss
sub
xchg
mov
scas
sahf
cli
pop
scas
inc
adc
cmp
lcall
loop
hlt
mov
sbb
out
sti
mov
and
dec
inc
xor
sarb
pop
pop
cwtl
mov
je
stc
mov
adc
push
mov
clc
cmpsb
pushf
pusha
add
pusha
mov
mov
jb
push
repz
dec
mov
adc
and
sbb
or
ret
gs
jae
js
test
jo
dec
xchg
sub
push
mov
cld
les
lods
pop
divb
lea
gs
jae
test
cmp
int
push
pop
dec
or
ret
testl
divl
hlt
sbb
xchg
jp
or
push
mov
inc
rcll
bound
cmp
pop
jb
insb
add
mov
fcompl
rcll
fcmovne
imul
jo
mov
xor
cmpsb
xor
out
jo
xor
xchg
sub
mov
sbb
inc
adc
pop
pop
jl
push
cmp
adc
push
out
dec
push
sarb
jp,pt
scas
lret
adc
inc
inc
mov
cmp
aad
mov
movsb
sub
dec
lock
xchg
inc
pop
add
sub
movsb
and
lock
cmc
addr16
movsl
fs
add
stos
adc
fcmovbe
lods
fildl
push
sbb
xor
cmpsl
add
cmp
lret
lcall
out
mov
mov
inc
cmpsb
jo
xchg
out
enter
mov
inc
cld
and
push
fdivrp
imull
xor
popf
mov
lahf
add
fwait
test
jl
js
cmp
sar
ret
ljmp
int3
aad
stos
jp
loopne
pop
int3
sbb
insl
stc
cwtl
scas
sbb
addr16
mov
enter
aam
movsl
add
cltd
cmpsb
pop
enter
outsb
movsb
loope
push
mov
les
jmp
and
scas
in
fxch
sub
mov
mov
aaa
jg
cmp
sbb
push
jnp
icebp
dec
fadds
cmpsb
and
pop
jbe
dec
mov
int
cmp
or
xchg
dec
ljmp
inc
xor
in
lret
nop
mov
cmpsl
fstp
lds
jp
mov
test
sub
mov
sub
pop
sub
xor
xchg
xchg
dec
jg
rolb
and
ret
je
inc
dec
add
dec
out
inc
rol
leave
lock
aas
andl
sbb
cmpsl
add
cmp
imul
scas
jl
repnz
adc
enter
movsb
test
hlt
push
push
mov
jle
jae
add
or
adc
fisttpll
jmp
cmp
jns
add
xor
xor
push
push
fs
pop
fsubrl
add
iret
ja
mov
jmp
mov
mov
mov
add
mov
imul
jecxz
lahf
jne
ret
mov
dec
movsb
mov
push
adc
mov
repnz
cmp
dec
push
and
cmp
lock
fs
cmp
mov
xchg
lret
push
dec
bound
xor
pop
cmc
fiadds
pop
es
sahf
push
push
jge
and
outsb
stc
sahf
les
pop
stos
test
in
lcall
pop
xor
repz
out
fcoms
push
sbb
cmp
nop
aaa
lahf
das
leave
xchg
test
and
sarb
std
inc
icebp
test
mov
jl
std
addr16
sarb
in
lods
movsl
fcomip
aam
ljmp
repz
adc
xchg
stos
dec
cld
icebp
subb
test
fucomip
pop
iret
enter
outsl
pop
loop
in
add
push
push
lock
adc
mov
xchg
test
mov
fisttpl
movsb
sbb
pushf
jnp
pop
cli
inc
jb
and
test
js
or
dec
sbb
adc
push
shl
rorl
test
inc
lahf
pop
fs
pop
push
mov
xlat
jle
xchg
sub
mov
outsl
lcall
mov
xchg
mov
lock
jmp
into
push
jmp
lods
fisubrl
pop
cmp
pop
push
sti
clc
jbe
and
fistpl
adc
sbb
mov
jl
mov
scas
ret
mov
pop
dec
fsub
dec
bound
push
push
mov
push
mov
sub
jl
xchg
cmpsl
repz
mov
out
jp
bound
daa
inc
hlt
sbb
sbb
xor
mov
inc
mov
iret
fs
cld
xchg
cmp
outsl
cmp
cltd
fmull
stos
mov
ds
test
inc
adc
ja
fisttpll
cwtl
gs
es
mov
mov
mov
dec
xchg
das
bound
push
and
dec
xlat
imul
cld
or
pop
aas
stos
movsb
push
sub
fisttpll
cs
mov
fsubr
cmpsl
mov
lock
cs
push
cltd
loopne
fwait
addr16
fdivr
out
sahf
repnz
mov
add
jo
mov
sbb
jbe
lods
xchg
sub
or
sub
cltd
dec
mov
and
cmc
nop
orb
sub
sbb
mov
pop
mov
dec
imul
push
nop
sub
pop
xchg
pop
dec
outsb
xor
inc
cmp
enter
fwait
add
je
movsl
xor
les
fstp
adc
xchg
scas
pop
cwtl
mov
mov
icebp
or
inc
loope
cld
pop
cmc
inc
outsb
repnz
push
mov
push
sub
je
mov
mov
pop
jne
movsb
xchg
stos
test
lods
cwtl
adc
sti
loop
lods
xchg
cmp
imul
inc
insl
int
mov
or
cli
arpl
dec
lret
cmc
mov
xor
imul
in
pop
adc
stos
sahf
jae
int3
mov
pop
sub
xor
push
popf
movsl
in
pop
cmp
cli
aam
jmp
adc
int3
in
push
fsts
or
jns
js
fcomp
sbb
sbb
in
lcall
sbb
sub
jg
mov
dec
fiaddl
pop
mov
jbe
int
lcall
inc
jnp
add
sbb
fs
xchg
outsb
and
mov
dec
mov
pop
jmp
or
orl
cmp
addr16
and
mov
xchg
in
xor
jge
xchg
mov
std
lods
leave
sub
dec
cmp
add
push
loop
test
gs
cmc
jo
pop
test
mov
out
mov
pusha
pop
aad
mov
or
subb
xor
mov
push
aas
int3
dec
add
outsb
orb
ds
sbb
jo
out
enter
fwait
inc
mov
and
mov
fldz
jne
jne
xor
xor
inc
push
jle
sub
sub
sub
pop
out
xor
sbb
mov
flds
push
sbb
adcb
rcll
mov
out
sub
loopne
and
cmp
pop
jo
xor
imul
into
or
int
movsl
mov
xor
sbb
mov
fwait
cmp
icebp
mov
fistps
adc
inc
dec
or
fnop
std
sub
mov
sti
cs
xchg
je
lea
sbb
pop
pop
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jb
jmp
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
movsbl
or
mov
addl
sub
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jb
push
mov
mov
mov
sub
sub
mov
andl
movl
sub
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
call
jmp
mov
andl
mov
addl
mov
adc
mov
mov
and
xor
addl
xor
mov
mov
adc
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
push
test
add
add
add
add
add
add
add
push
cmp
add
add
add
inc
push
inc
jns
and
ja
mov
dec
scas
out
add
add
inc
cmp
outsb
outsl
ja
and
pop
inc
imul
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
add
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
inc
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
jl
lods
outsl
scas
hlt
add
testl
jbe
xchg
mov
cmpsl
loopne
pop
push
pop
notl
pushf
or
pushf
or
mov
lcall
xchg
pushf
sub
popa
mov
stos
mov
mov
jbe
xchg
mov
pop
pop
cmpsl
jae
pop
clc
push
stc
mov
xchg
cmpsl
test
lret
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
add
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
