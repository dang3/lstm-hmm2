push
mov
sub
push
lea
push
addl
push
subl
call
xorl
push
incl
xor
inc
movl
push
decl
push
andl
call
xorl
test
movl
je
xor
movl
jmp
push
xor
mov
incl
push
addl
push
call
andl
test
je
sbbl
lea
push
orl
call
jmp
push
inc
mov
push
adcl
push
push
orl
call
andl
test
movl
jne
mov
orl
push
sbbl
push
adcl
call
test
movl
je
orl
push
xorl
push
push
subl
call
adcl
test
jne
push
push
call
xorl
test
movl
jne
addl
push
orl
push
push
call
xorl
test
jne
andl
push
push
sbbl
call
movl
jmp
movl
add
mov
mov
movl
addl
movl
lea
mov
mov
sub
sub
mov
xor
lea
mov
xor
add
xor
mov
mov
movzbl
or
mov
mov
mov
mov
addl
xor
xor
mov
andl
add
mov
mov
cmp
jne
sbbl
mov
mov
inc
mov
xor
addl
add
mov
negl
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
add
mov
mov
add
mov
mov
mov
mov
and
mov
mov
mov
sub
sub
mov
mov
sbb
mov
adc
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
call
mov
dec
mov
jmp
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
mov
adc
movl
movzwl
xor
mov
mov
xor
orl
add
movl
jmp
adc
mov
addl
xor
subl
lea
orl
push
negl
mov
xor
adcl
lea
orl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
pushl
adcl
call
movzbl
sbb
mov
adc
xor
sbb
lea
mov
add
mov
mov
adcl
xor
xorl
xor
add
xor
mov
sbbl
xor
lea
movl
cmp
jbe
mov
and
mov
mov
movl
mov
sbb
mov
neg
mov
sub
xor
movl
mov
mov
mov
movl
cmp
movl
jne
orl
push
xor
movl
inc
andl
push
push
adcl
call
orl
test
jne
xorl
push
push
xorl
call
test
jne
adcl
push
push
push
call
test
movl
jne
addl
push
negl
push
andl
call
orl
test
jne
sbbl
lea
subl
mov
lea
orl
mov
xor
mov
andl
test
je
xor
mov
mov
xorl
mov
andl
xor
add
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
movl
cmpl
je
cmpl
ja
jmp
push
pushl
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
mov
mov
movl
cmpl
je
cmpl
jbe
jmp
push
pushl
pushl
pushl
call
xor
xor
dec
mov
jmp
cltd
mov
movl
cmpl
je
cmpl
ja
jmp
call
xor
add
dec
mov
jmp
mov
add
mov
adc
and
andl
xor
mov
mov
mov
and
mov
andl
xor
add
mov
movl
adcl
adcl
xor
subl
mov
mov
xor
mov
movl
cmp
movl
jne
mov
mov
cmp
movl
je
movl
cmpl
je
cmpl
jbe
jmp
pushl
call
mov
dec
mov
jmp
mov
orl
mov
addl
mov
xor
add
adc
xor
xor
cmp
movl
jne
cmp
movl
jne
mov
orl
mov
sbbl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
call
jmp
mov
mov
mov
add
notl
mov
jmp
mov
movl
cmp
movl
je
xor
xor
adc
mov
mov
mov
xor
add
movl
cmp
movl
je
xorl
push
xor
inc
sbbl
push
subl
push
adcl
call
orl
test
movl
jne
movl
push
addl
push
call
test
jne
andl
push
push
push
sbbl
call
orl
test
movl
jne
push
addl
push
call
addl
test
jne
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
or
mov
mov
mov
pushl
movl
mov
pushl
movl
add
mov
orl
mov
movl
pushl
sbbl
call
mov
mov
movl
mov
jmp
adcl
push
adcl
xor
sbbl
inc
notl
push
push
call
orl
test
movl
jne
orl
push
addl
push
addl
call
addl
test
movl
jne
xorl
push
push
push
call
test
movl
jne
subl
push
push
call
test
movl
jne
andl
push
push
push
call
test
movl
jne
adcl
push
subl
push
call
notl
test
movl
jne
sbbl
push
push
subl
push
call
test
movl
jne
subl
push
adcl
push
sbbl
call
test
movl
jne
mov
andl
mov
inc
mov
cmpl
ja
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
decl
add
movl
cmp
jne
sbbl
mov
mov
andl
mov
xor
subl
add
cmp
jne
movzwl
and
mov
adcl
push
xor
add
adcl
push
decl
push
sbbl
pushl
andl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
xor
mov
inc
lea
mov
lea
mov
mov
test
je
push
push
push
call
test
jne
push
push
call
test
jne
push
push
push
call
test
je
lea
push
call
jmp
push
push
call
test
je
xor
jmp
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
inc
ret
push
mov
sub
mov
sbb
mov
mov
addl
mov
movl
movzwl
sub
mov
dec
jmp
sub
jae
xchg
xchg
pop
int3
xor
mov
jl
jl
rcrl
jl
cs
cmp
and
popa
pusha
cmpsb
jp
insb
insl
xor
fdivrp
push
arpl
stos
jp
push
iret
pop
dec
cmp
dec
jg
mov
jmp
cld
imul
xor
mov
andl
push
mov
fldl
or
and
inc
push
and
mov
sub
mov
jbe
ret
sbb
jb
jnp
xchg
pop
cmpl
cwtl
je,pt
add
sub
push
sti
iret
mov
or
out
push
dec
push
cmp
xor
lods
inc
int3
cmpsl
dec
fiaddl
push
std
push
push
movsl
icebp
bound
imul
jnp
jne
ss
rcrb
mov
jb
sahf
arpl
sbb
fsts
mov
cld
lea
popa
fxch
sbb
xchg
pop
repz
sbb
push
lods
cli
pop
insl
sbb
push
test
pop
sbb
mov
pop
aam
xchg
adcb
loop
inc
mov
lahf
pop
mov
mov
sub
cmp
js
fmull
iret
fstp
test
or
popf
mov
dec
lods
clc
push
mov
insb
pop
cmpsl
mov
lahf
xchg
fsts
loope
mov
in
add
xchg
testl
jge
sar
sbb
push
adc
fistps
ss
adc
cmp
adc
bound
mov
cmp
dec
or
rol
add
push
subl
xlat
mov
sti
xor
push
dec
sti
inc
sub
mov
pop
push
adc
xchg
in
fidivrl
mov
ret
dec
stos
das
icebp
push
sti
cmp
or
lahf
scas
cli
push
jg
mov
pusha
mov
xlat
push
jnp
pop
imul
lcall
xor
adc
add
cmpb
sub
dec
int3
in
mov
lods
bound
lcall
jge
ljmp
loopne
mov
jl
in
lods
sbb
stos
sub
data16
sbb
out
cwtl
xlat
xchg
jmp
loop
sub
dec
push
xor
or
mov
ret
popa
scas
enter
sub
pop
notl
xchg
inc
aaa
xlat
imul
jecxz
sub
pop
xchg
inc
dec
out
jbe
mov
xchg
mov
imul
sub
mov
push
popf
les
and
daa
imul
mov
cmp
insb
xchg
sub
jo
data16
xchg
push
inc
out
aad
repz
pushf
aaa
pop
enter
and
mov
adc
push
push
push
lock
dec
mov
hlt
xor
sub
sbb
hlt
bound
xchg
sbb
ret
mov
addr16
inc
fidivrl
lods
adc
cmpb
test
pop
or
repnz
mov
cmp
dec
xchg
add
aas
std
jl
adc
out
push
xchg
daa
addr16
mov
mov
adc
sti
add
in
sahf
lret
in
sub
add
repz
mov
add
jae
mov
xor
lcall
dec
lods
gs
test
jo
stc
adc
call
nop
push
outsb
loope
scas
push
cld
mov
dec
in
test
mov
mov
outsb
sub
and
test
cli
pop
xchg
shlb
push
jle
cmp
and
popa
push
pop
cmp
pop
mov
int
scas
jg
fcomps
cmp
jg
cmp
fdivs
jg
dec
mov
or
push
aad
inc
mov
aaa
fldcw
pop
cmp
in
cmp
adcb
or
cld
push
seta
lret
dec
adc
mov
rolb
cmp
push
cmp
sbb
aam
pop
dec
sar
pop
sbb
push
push
aas
lea
ret
fdiv
xchg
xchg
inc
pop
lea
das
loopne
aam
rcll
inc
out
dec
sub
push
mov
sti
lcall
inc
cs
data16
mov
xchg
jno
add
xchg
cwtl
lods
fildll
cmc
cmp
pop
outsb
pop
or
add
pop
inc
in
ljmp
jp
sub
shlb
and
sub
repnz
bound
jle
pop
out
sbb
xor
dec
and
cs
lcall
add
int3
fcoms
movsb
shll
cmp
leave
push
xchg
jae
xchg
idivb
lret
jns
dec
cmp
ljmp
dec
cmp
stos
sbb
jg
data16
mov
xor
cmpsb
mov
lret
out
and
std
call
sbb
inc
nop
sub
popa
dec
push
lcall
fsubp
jge
repz
mov
lock
jg
aad
es
mov
or
xchg
lret
popa
jmp
jmp
outsb
out
add
rcrb
mov
iret
adc
shrl
out
dec
jecxz
cmp
in
fldenv
add
mov
add
cmp
cld
mov
repnz
add
mov
sbb
push
cmp
push
dec
stc
xchg
mov
or
push
xchg
mov
popa
jns
in
loopne
jmp
cld
les
stc
jl
lret
movsl
jno
xchg
jl
scas
mov
out
pop
xchg
fwait
in
testl
and
pop
ljmp
mov
sahf
cmp
mov
cs
outsl
subl
mov
insl
mov
cmp
pop
std
test
push
mov
sub
push
sbb
cmp
pop
movsb
push
movsl
je
or
jl
xor
scas
adc
dec
mov
xchg
lds
sub
jo
and
fcomps
scas
inc
push
cmp
mov
outsl
mov
pop
leave
addl
add
rdpmc
or
push
adc
cli
dec
inc
fdivrl
hlt
adc
test
push
nop
pop
inc
sahf
sub
in
xor
jge
cmp
jns
out
outsl
jg
dec
inc
daa
adc
daa
aad
jg
push
mov
ds
in
cmpsl
sbb
sub
push
cs
daa
and
and
iret
mov
sbb
in
pop
or
inc
inc
jmp
jl
and
daa
xor
test
in
nop
int
pop
cmc
out
mov
xchg
mov
adc
jle
adc
inc
mov
mov
jno
sbb
and
outsl
push
jmp
cltd
pop
or
arpl
movsl
or
xlat
cmp
xchg
sbb
dec
push
push
jo
pop
sub
jno
pop
dec
push
fstpt
test
in
mov
inc
fistl
in
and
jae
mov
sbb
roll
vmaxsd
fsts
lock
sbb
gs
mov
insb
les
push
stc
into
push
popf
mov
cmp
lea
gs
push
cmpsl
jecxz
adc
pop
mov
push
sbb
scas
ss
call
push
mov
xchg
push
fcompl
mov
cmpl
cli
cmp
xchg
stos
cli
nop
inc
cld
mov
xor
mov
fsts
jns
cmp
push
or
mov
lods
mov
xor
andl
repnz
test
sub
cmp
jecxz
out
arpl
ljmp
out
xor
pop
and
pop
repz
inc
dec
clc
hlt
sbb
jg
mov
or
jmp
ds
loope
jae
jnp
lcall
sbb
stos
mov
pop
jle
xor
imul
push
in
mov
loope
pop
cltd
adc
sbb
fdivs
pop
loop
xchg
xchg
sbb
sahf
loop
cmp
lods
je
cmp
sbb
and
out
xchg
push
jb
mov
outsb
mov
mov
and
mov
scas
div
repz
xchg
out
adc
jno
scas
mov
das
sub
or
out
fadds
pop
loopne
mov
sub
sbbl
ret
xlat
shrl
insl
sub
push
dec
or
test
xlat
jge
or
mov
aad
sbb
fisttpll
mov
and
add
pop
mov
mov
sbb
rep
xchg
mov
cmp
xchg
cmp
mov
jmp
add
out
sbb
push
xor
je
push
xor
mov
test
xor
call
les
lds
loopne
pop
and
xchg
mull
insb
cmpsl
les
fcoms
addr16
cltd
push
int
push
movsl
add
fsts
jae
mov
rcl
sbb
push
jge
inc
sbb
pop
cmp
adc
outsl
scas
aaa
inc
fildl
mov
xchg
inc
sub
ret
mov
dec
jbe
andl
and
scas
pop
add
ret
xlat
std
data16
push
fs
jne
lea
mov
call
mov
repz
pop
mov
mov
push
sub
jb
sti
push
dec
ja
lret
cmpsl
out
enter
cmp
xor
mov
or
and
xchg
pop
test
daa
xor
cmp
mov
dec
push
cmp
test
jmp
xchg
inc
dec
sbb
in
jl
xchg
cmp
lods
adc
push
enter
push
inc
xchg
frstor
aaa
cmp
arpl
jne
movb
hlt
lret
xchg
fidivrl
imul
stos
xchg
aam
ja
sti
cmp
stos
arpl
shll
loope
stos
mov
mov
cmc
push
xchg
pop
aad
call
push
xor
cmp
xor
inc
dec
adc
jle
sahf
mov
out
imul
test
ret
push
fcomps
dec
xchg
add
call
inc
and
sbb
push
je
xor
sti
and
sbb
loopne
mov
push
sub
out
shll
cmp
xchg
rcrb
cwtl
mov
pop
sub
stos
in
pop
scas
jno
lret
icebp
adc
fiaddl
push
in
cmpsl
and
push
in
ret
pop
sahf
pop
xchg
lahf
or
mov
add
sbb
and
mov
and
lcall
cwtl
dec
xor
aad
xor
out
cmpsb
mov
push
loope
push
jae
and
data16
jnp
xor
mov
sbb
adc
push
test
test
imul
mov
cmp
xchg
push
sahf
push
outsl
sbbb
je
test
sbb
push
lods
inc
movntps
sub
daa
or
add
push
out
pop
test
push
or
jl
fldcw
out
rolb
push
push
add
fiaddl
in
mov
movsl
sbb
jo
out
stos
shll
inc
cwtl
mov
push
shlb
mov
sub
dec
mov
dec
mov
daa
and
out
inc
jle
jl
scas
mov
jnp
xor
push
jmp
enter
or
jmp
sub
or
test
and
jnp
cmp
xorb
pop
pcmpeqw
lahf
rclb
mov
mov
adc
or
inc
mov
cmp
push
and
pop
xchg
js
sahf
and
add
mov
jbe
mov
lea
jg
cs
cmp
out
adc
or
push
mov
sub
xor
pop
jns
cmp
call
pusha
cmp
push
repz
cmp
or
dec
dec
sbb
push
jns
jbe
mov
mov
int3
push
fisubrl
push
or
push
mov
sub
mov
pop
dec
and
cmpsb
mov
test
ret
data16
xor
add
scas
cmp
or
fidivs
mov
dec
fstp
add
sahf
push
jmp
in
les
adc
loopne
test
fstl
mov
push
rcll
cmp
insl
mov
mov
subb
aam
dec
pop
adc
lock
mov
movsl
or
lods
xor
xchg
das
mov
push
pop
stos
test
cmc
mov
das
dec
sahf
call
add
add
push
cmp
cs
adc
lds
push
mov
or
xchg
insl
cli
scas
mov
inc
shlb
jge
fwait
clc
push
popf
push
pusha
testb
and
mull
ret
inc
xchg
fidivrl
bound
dec
orb
inc
dec
repnz
loop
aam
mov
mov
incb
mov
xor
bound
stos
dec
mov
data16
loope
pop
push
sti
aaa
xchg
ja
mov
lret
mov
aad
sub
cmpsl
mov
icebp
adc
jb
or
popf
or
jb
push
xchg
loop
shl
sbb
cmp
adc
add
jle
or
inc
sbb
push
or
ret
rol
xor
push
mov
dec
lds
out
hlt
imul
push
adc
loop
push
xchg
xor
out
pop
rolb
in
ds
sarb
hlt
or
adc
ror
icebp
inc
ljmp
mov
and
lahf
popa
push
inc
lods
ret
insl
rcrl
cli
dec
xchg
fldt
jge
pushf
fidivrl
sbb
cmp
sbb
mov
fiaddl
nop
sub
fcmovnu
rclb
fwait
sub
in
leave
cmp
cli
push
mov
ja
ss
mov
jge
sub
loope
cmp
add
pop
add
and
fisubrl
ss
sub
cltd
push
lods
leave
mov
lock
pop
es
mov
out
mov
popf
fildl
jb
pop
jae
popa
mov
mov
mov
mov
push
adc
mov
ja
imul
icebp
adc
or
addl
pop
sbb
rcr
daa
add
popa
test
mov
cwtl
pop
lcall
or
pop
jns
xor
je
enter
or
js
or
dec
xchg
pop
pinsrw
push
and
dec
mov
jb
rorb
les
mov
jecxz
insb
dec
sub
cmp
jne
xchg
push
mov
sbb
int
sub
jp
lahf
mov
les
push
pop
lea
shrb
fs
push
bound
rol
pop
xchg
sahf
aaa
lods
dec
in
ret
dec
in
cmpsl
xchg
je
dec
sub
popf
add
lret
cwtl
add
pusha
scas
jmp
or
lcall
test
push
leave
movsb
fstpt
std
pop
cmp
ret
xchg
sub
aaa
dec
test
xchg
adc
imul
leave
test
sub
mov
sarl
pop
jb
cmp
xor
mov
push
pop
out
dec
cmp
imul
and
sbb
and
push
cmpsb
scas
and
arpl
jmp
inc
test
mov
je
inc
loope
jne
pop
in
enter
xor
jnp
xor
es
dec
imul
aam
andl
pop
jge
cmp
popf
jae
dec
xchg
push
sahf
sahf
sub
rorl
inc
sbb
jne
jl
bound
cmp
mov
aad
sbb
loope
or
mov
fsubr
popf
xchg
xchg
xchg
inc
xchg
and
lds
xor
ss
jle
xchg
push
sarb
xchg
sbb
rcl
std
mov
fwait
jg
sbb
mov
movsb
das
dec
fisttps
test
mov
or
cmp
lret
mov
pushf
pop
mov
add
mov
ss
nop
xor
mov
stos
pop
sbb
scas
xor
xchg
sub
cmp
push
dec
push
mov
dec
xor
xchg
imul
mov
adc
scas
lea
jl
sub
jecxz
xchg
icebp
cwtl
xor
push
je
outsl
in
insb
adc
adc
xchg
cwtl
pop
cmpsb
mov
sbbl
call
ret
push
inc
xchg
push
mov
gs
pop
cmp
outsb
in
or
inc
or
or
mov
add
subb
das
fcompl
fstl
rol
mov
or
xchg
inc
adc
loop
fsubrs
ffree
xor
dec
call
dec
adc
jne
cmp
mov
insl
pop
add
add
cmp
xchg
sbb
push
cmp
icebp
outsb
inc
out
xor
in
jge
or
cmp
pop
dec
lret
divb
cmp
push
loope
jge
ss
cmp
xchg
and
je
daa
fwait
outsl
add
or
adc
loopne
test
aas
sbbb
mov
shr
fcmovu
mov
andb
or
scas
mov
nop
sarb
xor
pop
xorb
popf
xchg
cmpsb
fisubrs
popf
je
loopne
pop
add
sbb
je
clc
fld1
aad
lods
mov
push
sub
mov
pop
pop
test
scas
lods
dec
mov
aas
sbb
jmp
xor
mov
pop
mov
and
out
outsl
clc
mov
push
pop
cld
dec
fcomps
mov
adc
loop
adc
sub
mov
sbb
decb
push
add
or
stc
and
mov
ja
push
cltd
add
lds
mov
lret
ss
mov
xor
adc
into
repz
sbb
pop
mov
jg
mov
cwtl
pop
push
addl
adc
sub
and
stc
das
fistpl
xchg
pop
mov
icebp
aaa
add
xchg
push
movsl
pop
adc
mov
xchg
jmp
iret
fs
cs
test
pop
cmp
ja
sti
pop
sub
lret
lods
xchg
add
mov
pop
das
data16
out
sbb
int
mov
repz
add
dec
pop
jmp
int3
iret
pop
sbb
mov
ficoms
jp
mov
movsl
mov
jmp
repz
xchg
mov
ljmp
insl
push
nop
cmpb
bound
mov
xchg
jp
sub
orl
cmp
fisttpl
xlat
cs
in
jbe
xchg
mov
into
sbb
cmp
and
mov
jbe
xlat
jnp
or
movsb
xchg
adc
lods
mov
arpl
bound
or
push
nop
out
adc
xor
sub
ret
jns
sub
or
add
mov
ljmp
adc
frstor
fcomip
dec
scas
aad
loopne
dec
dec
jo
ljmp
mov
mov
inc
push
lahf
repnz
sbb
cmp
nop
or
pop
dec
mov
icebp
stos
aaa
dec
data16
es
aas
adc
leave
pop
push
dec
nop
jnp
push
xor
lods
xchg
arpl
sbb
or
mov
int3
sarb
filds
pop
mov
mov
popf
push
xchg
es
cmp
pop
pop
fwait
mov
and
mov
scas
pop
sti
jnp
pop
adc
lret
xor
nop
jbe
fidivs
adc
pop
lods
push
stos
movsb
mov
shrb
push
aam
mov
stos
add
and
push
mov
test
pushf
enter
jp
sahf
cltd
test
lds
cld
scas
dec
stc
jg
jmp
aas
bound
push
xchg
ja
rorl
dec
xor
addr16
sub
pushf
decb
cmc
lea
pop
out
xor
xor
jno
xor
jmp
xchg
pop
outsb
jl
jns
or
jle
stos
std
ret
gs
jne
cmp
inc
test
xchg
loope
fstl
das
push
jo
sub
sbb
pop
scas
push
and
iret
add
push
and
enter
push
es
fidivs
cmp
pop
mov
pop
data16
mov
ret
mov
and
xlat
iret
mov
cli
jno
cmp
add
into
or
cli
add
push
sub
dec
sub
insb
xchg
imul
mov
sbb
mov
hlt
mov
fadds
in
cmp
mov
jle
sahf
or
or
adc
sub
dec
lahf
dec
imul
in
bound
sahf
loopne
stos
popl
movsb
fsubrs
add
mov
xchg
hlt
test
clc
call
push
int3
mov
push
jne
xor
rcrb
inc
inc
loopne
cmp
or
sub
aam
popf
out
inc
bound
xchg
mov
dec
clc
add
mov
push
test
js
cmpsl
bound
push
push
jbe
dec
movsb
sub
mov
ret
or
dec
inc
add
xlat
lahf
mov
call
lret
push
inc
fsubl
dec
mov
insl
and
or
and
andnps
loope
push
pop
add
cmpsl
std
or
mov
sub
imul
ja
les
mov
fisttpll
out
lock
fildll
dec
fisttpl
ds
or
testl
inc
cmpsb
mov
mov
outsl
jecxz
add
sti
fcomp
icebp
pop
push
add
add
mov
push
xor
or
pop
nop
mov
test
dec
sub
sub
andl
xchg
jecxz
and
adc
add
inc
pop
dec
sbb
loop
mov
mov
sub
jge
jg
mov
in
mov
imul
cld
test
cmpb
lds
push
addb
cltd
sub
sub
sbb
xor
negl
fmuls
test
rorl
lcall
inc
sub
xor
imul
int3
in
inc
mov
std
xchg
sbb
pop
ljmp
push
push
scas
aas
jb
movsb
adc
xor
pop
and
mov
cs
loop
fiaddl
mov
sbb
lahf
pop
xorl
xchg
mov
enter
cwtl
out
aas
insb
cwtl
vpgatherdd
xchg
inc
sbb
pusha
pop
loope
cmpsl
iret
mov
mov
daa
ret
pop
jecxz
aam
insb
xor
aas
nop
outsl
addr16
mov
pop
in
xor
mov
sbb
aad
adc
mov
sti
fwait
movsl
inc
or
xor
addr16
iret
cmpb
mov
mov
push
out
push
pop
sub
divl
mov
mov
xchg
and
lahf
push
in
mov
sbb
push
pushf
xor
ss
mov
icebp
out
and
insl
add
mov
push
cwtl
je
ret
lss
mov
scas
aas
push
test
pop
js
cld
fiaddl
mov
out
bnd
es
fwait
mov
xor
hlt
dec
pop
in
lcall
and
dec
pop
movsl
icebp
stc
sbb
addl
sub
jo
mov
add
mov
test
sbb
and
push
daa
and
inc
fnstcw
jns
mov
insl
xchg
push
push
sub
push
lret
sbb
das
in
sbb
leave
imul
leave
aad
adc
out
cmp
sub
shlb
ja
or
rcrl
jg
xlat
insb
lods
rclb
xchg
push
leave
lret
jmp
and
or
xlat
aad
adc
cli
out
mov
or
inc
and
lret
iret
mov
pop
out
ja
jb
cli
pop
sub
jmp
stc
lahf
loop
jg
add
mov
arpl
and
dec
dec
pop
gs
inc
imul
out
xor
out
or
sbb
out
loop
inc
dec
lock
jp
decl
adc
pop
in
in
cmp
iret
cmovg
leave
and
test
mov
mov
aad
nopl
push
fisttpll
in
bound
iret
out
enter
aad
inc
mov
mov
nop
lock
and
lcall
in
mov
push
repz
xchg
pop
mov
mov
jnp
addl
sub
fistpll
jae
sbb
xlat
aam
test
out
pop
jmp
clc
aam
mov
mov
or
jg
xchg
push
shrl
jne
addr16
add
les
sub
dec
testl
or
push
adc
addl
mov
ljmp
or
dec
jb
roll
xchg
jecxz
les
mov
addr16
add
mov
xor
cmp
loope
sbb
mov
in
iret
fstps
loope
ret
int3
sbb
add
pusha
pop
ss
movsb
cmpsl
mov
loope
std
fdivrs
xchg
cli
mov
xchg
roll
mov
lcall
in
lret
jbe,pt
pushf
jnp
lret
adc
int3
cwtl
adc
pop
test
mov
inc
jns
xor
cmc
xor
push
repz
out
inc
xchg
sbb
xchg
fcomp
out
push
sti
or
outsb
bound
adc
xchg
div
cmc
mov
inc
rcll
test
xor
subb
push
lods
mov
xor
lods
pop
rclb
mov
sub
sti
lret
dec
dec
out
dec
mov
xor
ficoml
ljmp
ds
xor
fucom
pop
in
dec
ret
xor
pushf
into
push
jl
cmpsl
xchg
addr16
jno,pt
rcll
movsb
and
stc
sti
mov
mov
mov
and
rep
hlt
in
cs
lds
out
cli
pop
ja
mov
mov
pop
push
mov
sub
adcb
adc
pushf
fwait
loope
mov
push
fisttps
cld
cmp
lods
in
sbb
jno
inc
pop
cmp
push
nop
and
sub
rclb
sar
or
xor
scas
sbb
mov
je
mov
scas
inc
lds
mov
jl
lret
mov
mov
and
cmpsb
inc
add
push
sti
addl
arpl
pop
inc
std
add
xor
arpl
mov
fwait
stc
sbb
fwait
data16
sub
dec
mov
movsb
mov
sbb
je
dec
pushf
mov
adc
outsb
lret
addl
push
pop
add
sub
mov
cmp
out
mov
mov
pop
sbb
adc
pop
dec
jle
and
imul
xchg
jo
call
sub
push
dec
jl
cld
aad
ljmp
dec
jnp
addr16
mov
adc
mov
xor
adc
ljmp
jo
pop
mov
movsb
std
mov
rcll
pop
xor
add
arpl
jae
dec
push
dec
add
cmp
cld
add
test
ret
mov
mov
int3
inc
inc
subl
scas
mov
notb
ret
adc
mov
xchg
ret
sub
les
sbb
push
imul
and
test
inc
test
lock
sti
or
lods
jae
lcall
jb
lods
push
nop
lds
aas
cmp
dec
pop
pop
dec
test
push
and
int3
aad
mov
adc
fldcw
mov
jne
sub
iret
adc
add
ret
and
or
sbb
and
and
push
adc
inc
out
xor
jnp
outsb
adc
bound
es
mov
lods
and
push
inc
xor
xchg
pop
pop
pop
cld
xchg
dec
ds
movsl
jns
and
arpl
and
mov
in
cmp
dec
or
imul
rcl
ret
fdivs
sub
mov
lahf
and
sbb
push
inc
xor
jl
inc
stos
sbb
adc
int
xor
mov
cmpsl
jbe
aaa
fs
mov
push
and
dec
xor
dec
testl
subl
add
in
push
sbb
fadds
loopne
pop
inc
in
jg
cltd
test
in
shrl
fistpll
sbb
scas
leave
push
pop
jns
mov
jp
fcoml
mov
fistps
adcb
daa
in
imul
jle
mov
xchg
xchg
test
adc
std
pushf
adc
add
rep
faddl
sti
imul
repz
scas
cmc
lods
jae
andl
stc
mulb
inc
lods
js
sahf
daa
xor
push
fidivrl
rolb
mov
mov
outsl
data16
sbb
sbb
or
and
test
ret
push
mov
sub
mov
mov
nop
sti
and
popa
outsl
xor
test
out
aam
sub
stos
add
mov
aam
imul
jbe
adc
rcrl
std
push
fmuls
adc
adc
out
mov
push
xor
stc
inc
push
leave
xor
call
notb
popa
cmp
pop
cld
adc
inc
imul
testl
add
enter
loope
repnz
in
dec
stos
jmp
mul
nop
mov
mov
or
loopne
aad
jb
mov
cltd
push
notl
xorb
fs
or
popf
jl
jb
std
push
cmpb
mov
cmp
xor
ja
stc
push
out
test
ljmp
xor
andl
push
mov
push
xchg
adc
sahf
and
push
ret
popf
jg
ja
sahf
jns
dec
cli
cmp
inc
dec
out
repnz
and
cmpsl
rorl
cmp
push
ljmp
or
inc
decb
mov
cli
xor
pusha
xor
mov
xor
aam
rorb
loope
sbb
rclb
sbb
orl
lret
and
push
fsubr
jecxz
cs
adc
lea
xor
xor
aaa
jo
add
movsb
xchg
adc
jl
mov
add
mov
xchg
adc
pop
push
adc
stos
mov
lret
and
jge
jg
leave
cld
and
jne
add
leave
lahf
faddl
adc
mov
mov
and
inc
push
and
or
jo
add
add
push
sub
int3
sti
sbb
cmp
jle
cmpsl
fstpt
xchg
lods
inc
hlt
sbb
or
aas
mov
imul
mov
ljmp
cwtl
xor
icebp
jb
dec
cwtl
fs
sbb
mov
xchg
lahf
enter
sahf
mov
fdivr
xchg
outsl
dec
shl
mov
sbb
or
dec
pushf
jmp
xchg
pusha
jge
xchg
jne
xchg
mov
mov
mov
movsl
xchg
out
aaa
sbb
ja
xor
adc
insb
imul
mov
into
fbstp
cmp
pushf
repnz
out
loope
mov
sbb
stos
not
add
adc
pop
mov
rcr
clc
daa
dec
xchg
pop
dec
xchg
mov
sub
sbb
popa
outsl
orl
or
xchg
sarb
sub
add
mov
and
dec
pop
dec
repnz
cmp
mov
movsb
push
jno
out
nop
mov
xchg
insb
cmpb
addr16
jbe
aas
nopl
daa
pop
scas
mov
push
pop
adc
shrb
test
int3
mov
subb
pusha
js
fcomp
jle
insl
xlat
jmp
loopne
inc
jo
sar
add
mov
addr16
push
and
cmp
inc
cmp
add
mov
addl
xor
andl
xor
or
inc
mov
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
orl
push
add
mov
add
movl
cmp
movl
je
mov
sbb
mov
xor
xorl
xor
add
movl
add
adc
incl
xor
orl
mov
push
xor
adcl
xor
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
addl
movl
mov
movsbl
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
neg
sub
mov
xor
movl
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
orl
movl
mov
or
push
movl
adc
mov
xorl
push
xorl
mov
andl
xor
notl
push
mov
add
xorl
mov
andl
mov
inc
mov
cmpl
jb
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
test
je
and
mov
andl
xor
add
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jb
mov
or
mov
orl
mov
adc
xor
xor
or
xor
add
mov
addl
mov
xor
add
and
xor
andl
xor
add
inc
mov
cmpl
jg
jmp
push
pushl
push
pushl
call
cmpl
jb
add
movzwl
sbb
mov
mov
mov
and
xor
add
addl
mov
sub
mov
subl
xor
sub
add
adcl
mov
xorl
sub
lea
xor
adcl
xor
movl
cmp
movl
je
andl
xor
or
inc
mov
cmpl
ja
jmp
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
subl
add
cmp
jne
adcl
pushl
adcl
call
mov
sub
mov
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
orl
xor
add
cmp
je
pushl
andl
pushl
xorl
call
sbbl
mov
or
mov
mov
or
mov
subl
xor
add
movl
cmp
je
movl
cmpl
je
cmpl
jb
jmp
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
sub
mov
adc
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
call
mov
dec
mov
jmp
mov
or
mov
xorl
add
sbbl
mov
mov
mov
xor
mov
add
xor
add
xor
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
or
push
add
push
xor
mov
mov
orl
mov
or
mov
andl
add
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
mov
mov
sub
sub
mov
mov
mov
sub
xor
mov
sub
movzwl
and
mov
mov
xorl
sbbl
mov
movl
cmpl
je
cmpl
jge
jmp
call
xor
xor
dec
mov
jmp
mov
movzbl
xor
sub
mov
sub
orl
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
sub
or
mov
orl
sbb
mov
addl
mov
or
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
jmp
push
out
push
jae
jae
das
push
sbb
js
pop
jl
dec
pop
jl
or
cmpsb
ret
mov
insb
cli
cmp
cmp
inc
lock
repz
jb
repz
lcall
adc
push
and
fdivrl
dec
inc
jns
lds
mov
mov
jae
inc
aas
xor
xor
xor
pusha
sub
adc
mov
pusha
fiaddl
add
push
fdivrp
repz
mov
out
jge
insb
dec
pop
jo
lea
pop
stos
sarb
popf
or
repz
mov
fstps
cs
andb
popf
dec
lea
cld
inc
cmpsl
icebp
push
pop
xor
mov
sub
shlb
and
ja
in
movsb
lock
stos
dec
jns
push
sahf
std
add
and
push
xor
pop
int3
out
stc
mov
add
movsl
cmpsl
mov
mov
adc
add
jp
bound
dec
imul
data16
sahf
movsl
ljmp
cli
push
pop
sub
dec
int3
shrb
push
jl
sbb
rorl
dec
mov
sub
push
bound
push
ss
jmp
outsl
popf
adc
or
mov
mov
cltd
inc
mov
lret
add
loope
push
sti
dec
es
shrl
or
sbb
test
ficompl
scas
cmpl
sbb
and
sub
inc
mov
push
add
ljmp
pop
pop
fistl
pop
jecxz
xchg
lds
push
out
dec
pop
cmovb
out
mov
shll
fdivl
hlt
xlat
bound
mov
add
lods
xor
sub
pop
pop
or
sub
ret
sbb
aam
mov
inc
mov
rorb
add
inc
sarl
sub
int3
popf
lods
sub
or
xlat
bound
sbb
pop
bound
sub
pusha
sbb
and
jg
sub
cmp
add
pop
inc
sub
clc
xchg
mov
pop
in
cmp
or
jmp
jnp
ret
mov
pop
sti
outsl
outsl
mov
cmp
neg
sub
jmp
sub
inc
cs
arpl
cli
push
lods
jle
hlt
add
xchg
daa
pop
mov
jns
jmp
adc
pop
pop
push
cmpsb
cmp
in
cltd
add
int3
jle
shrl
imul
in
mov
test
mov
cmp
rorb
sar
sar
ret
jb
mov
xchg
adc
mov
cmp
fldl
popa
xor
jge
sub
nop
movsb
hlt
icebp
cmp
push
ljmp
sub
xchg
in
cmp
mov
ret
xor
xor
or
cli
addr16
nop
aam
pop
scas
adc
cltd
adc
cmp
pop
or
jnp
gs
pop
out
enter
add
mov
pop
cmp
frstor
jae
push
lods
test
cmp
inc
dec
scas
loopne
push
cs
add
cmpsl
add
pop
addr16
and
leave
les
mov
dec
adc
xchg
mov
stos
sub
jne
shrb
jae
lea
or
rclb
shrb
pop
ret
push
popa
in
lods
adcl
shll
dec
lcall
mov
mov
pop
push
sbb
sbb
stos
fwait
mov
das
stc
scas
pop
xchg
cmovg
pop
int3
push
cmp
ja
adc
in
dec
inc
hlt
dec
ljmp
sbb
aad
ror
aaa
mov
int
iret
cmp
rcll
shrb
mov
and
lods
mov
out
scas
imull
add
stos
or
out
test
and
jae
pop
mov
imul
lock
daa
sub
and
stos
and
dec
dec
movsb
hlt
pop
push
pushf
sub
fwait
xor
mov
inc
lods
ror
mov
je
movl
xchg
ret
mov
aad
inc
push
or
fsubs
fs
in
push
xor
cmpsl
mov
sbb
out
jbe
ret
hlt
repnz
jb
sbb
insb
xor
subb
pop
int3
bswap
out
dec
cltd
cltd
push
imul
push
jb
cmp
and
mov
cmp
insl
and
dec
push
ljmp
jb
js
adc
mov
icebp
inc
sbb
mov
movsw
mov
mov
and
pop
mov
and
cmc
rcrb
xchg
sub
push
lods
fldcw
andl
jbe
mov
mov
scas
mov
pop
leave
fnsave
loop
in
clc
negl
lock
es
das
cmpsb
rolb
dec
test
push
jnp
pop
mov
outsb
sbb
fidivrs
sub
mov
dec
xchg
pop
int
divb
jecxz
stc
mov
xor
daa
in
pop
repnz
push
add
stos
mov
sbb
pusha
test
fwait
mov
jo
push
sub
adc
push
add
mov
mov
jmp
lret
mov
fildll
xchg
pop
jge
jb
inc
dec
push
mov
mov
bound
push
ret
test
xchg
leave
cld
jmp
repz
dec
xchg
mov
repz
sub
fwait
push
adc
je
aad
hlt
adc
jae
cmp
add
mov
add
xchg
xchg
xor
std
sbb
mov
test
jne
mov
add
mov
shrb
ja
std
push
mov
xchg
test
mov
iret
add
in
xorl
xchg
les
and
inc
pop
jns
xor
adc
dec
sub
rcrb
inc
jae
int3
mov
mov
mov
inc
jp
lcall
cltd
dec
loope
shll
xchg
out
mov
mov
cmp
push
enter
sub
aas
shlb
jl
jnp
fildll
adc
js
mov
fs
or
sub
push
call
pop
mov
pop
pop
fisubl
out
stos
repz
mov
cmc
jnp
pop
stos
bound
cmp
pop
int3
and
scas
sahf
mov
jae
and
in
fwait
popf
cmp
ljmp
adc
jg
out
loope
sub
xchg
xor
xor
sbb
sbb
push
sub
or
loope
ficoms
sbb
push
cld
jl
mov
sub
sarl
mov
in
mov
ljmp
adc
or
pop
aaa
in
inc
xchg
outsl
or
pop
lds
not
xor
xor
dec
jno
mov
repnz
jbe
mov
movzbl
fwait
test
sbb
sub
test
out
bound
or
sub
push
mov
ret
xchg
xchg
fwait
aas
push
pushf
mov
mov
aaa
inc
and
rcrb
mov
xchg
or
call
call
xor
xchg
inc
test
mov
enter
pop
ds
int
push
adc
in
and
push
mov
test
icebp
cmp
mov
mov
pop
fcomps
add
cwtl
mov
movsl
int
jae
cmp
int3
push
sub
xlat
jmp
aam
iret
testb
clc
pop
insl
adc
mov
xlat
and
cmp
cmp
xor
das
mov
xorl
mov
in
sbb
xor
jl
cltd
jo
int
pop
mov
mov
out
lods
push
dec
test
aaa
mov
imul
push
push
sbb
jne
fdiv
outsb
add
cmpsl
lea
pop
imul
cmp
insl
insb
xor
test
inc
xor
shl
fdivr
inc
into
pop
xchg
aas
xchg
xchg
out
push
bound
xchg
das
cltd
ret
dec
mov
push
pop
imull
sub
int
and
mov
mov
jg
orl
add
leave
push
jmp
cmp
cmpb
push
cmp
les
outsb
loope
rclb
sbb
or
mov
shlb
lds
dec
ljmp
jge
les
in
outsl
push
push
stos
pop
inc
pop
xor
dec
xchg
or
mov
repnz
in
cltd
and
das
jne
jle
inc
rorl
fs
stos
insb
ja
shll
inc
out
add
popf
xchg
mov
js
push
xor
mov
test
aam
loop
mov
push
lods
iret
or
out
es
xchg
inc
cltd
or
jl
es
jbe
push
push
pop
or
mov
push
dec
negb
and
push
or
inc
icebp
loop
fstps
int
popf
in
fdivrl
jb
mov
pop
push
cld
outsb
inc
jp
clc
sub
rorl
cmc
sub
mov
fidivrs
cmc
shlb
cmpsl
push
nop
sub
pop
pushf
push
mov
popa
mov
or
mov
cltd
mov
int
mov
dec
stos
xor
subb
or
mov
sub
out
and
jbe
mov
ljmp
inc
insl
and
jne,pn
and
add
stc
dec
dec
jnp
adc
ds
sub
mov
jle
fstl
cli
stc
inc
cs
call
lret
push
out
pop
jp
ret
xor
inc
fistps
test
testb
jmp
insb
inc
and
xor
adc
fxch
into
cmpsb
rclb
mov
cmp
push
jmp
ror
sbbl
mov
xor
mov
shlb
push
xchg
mov
repz
mov
outsb
rorl
xchg
cmp
fwait
mov
sbb
xchg
testb
pop
xchg
xchg
cmp
sbb
cmc
fistpll
js
pop
cli
add
pop
push
insl
add
inc
mov
in
cli
mov
sti
inc
jae
cmp
adc
xor
adc
test
mov
repnz
scas
pop
xchg
int3
sub
cmpl
cmpsb
pop
jge
insb
jne
insb
call
popf
cld
test
jg
add
push
cli
inc
enter
and
sbb
cmp
jb
iret
lcall
lret
xchg
stc
cmp
mov
loop
ret
imul
jae
push
fisttpl
in
sbb
or
dec
aad
fdivrs
and
jmp
or
add
test
lret
sub
xor
mov
clc
les
dec
clc
hlt
dec
sbb
adc
inc
sub
sbb
nop
outsb
fisttpl
and
pushf
les
sub
cwtl
je
pop
xor
es
cwtl
das
inc
test
jb
push
mov
push
fnsave
rcrl
inc
out
inc
mov
mov
adc
out
mov
call
push
mov
xchg
add
jecxz
movl
sbb
vmwrite
mov
adc
in
sbb
cmp
mov
mov
test
adc
xchg
or
into
pop
push
loopne
int3
cmc
mov
das
stos
sahf
dec
scas
jecxz
sub
stos
cmp
stos
shll
jb
inc
mov
xlat
sbb
cld
xchg
outsb
adc
xor
rclb
and
xor
adc
lods
push
add
mov
xorb
js
cltd
xchg
push
jmp
imul
pop
push
aaa
je
cmp
lahf
and
enter
mov
out
sti
nop
jl
shr
mov
mov
nop
daa
addr16
imul
pop
sahf
and
das
push
mov
lods
and
add
adc
add
sbb
bound
push
xor
cli
adc
shr
xchg
cwtl
fstl
fisubrl
jnp
dec
jecxz
icebp
xchg
call
sub
imul
leave
out
xchg
movsl
pop
xorb
sub
pop
push
bound
or
loopne
lret
sub
pop
mov
aad
sarb
sub
shlb
popf
loopne
fisttps
push
cmp
clc
in
ds
cmpb
bound
adc
push
xchg
mov
out
push
ljmp
aaa
aas
scas
mov
jl
sbb
test
inc
adc
cmc
stos
xchg
testb
push
or
fcmove
pop
filds
je
mov
add
icebp
or
imulb
insl
fwait
pop
cmp
ficoml
idivb
sub
inc
test
ret
popa
push
ficompl
cmp
adc
jge
xor
pop
ss
mov
ss
jne
push
cltd
inc
sbb
xchg
sub
mov
stc
push
dec
push
adc
mov
jge
cmc
sub
jg
lods
jle
ds
push
pop
lret
js
shlb
fnstsw
jne
or
flds
test
jecxz
add
lods
std
sbb
xor
aam
rorl
push
sbb
mov
xlat
cmp
mov
insl
lock
hlt
mov
shll
pop
shll
mov
pop
jecxz
mov
mov
pop
imul
popa
pop
lahf
addr16
sub
es
das
movsb
xchg
jno
mov
push
filds
enter
sub
pop
adc
popf
add
add
or
mov
mov
fistpl
leave
clc
push
fwait
cmpsl
lods
cli
dec
fcoms
andb
bound
orb
icebp
cs
adc
stos
mov
mov
roll
cmp
mov
xor
or
add
bound
xchg
jp
ljmp
dec
dec
lahf
sbb
daa
push
pop
lock
fs
or
jnp
insb
xchg
xchg
or
jnp
and
cmp
mov
in
pop
stos
push
sbb
cmp
add
or
cmpsb
hlt
fsubp
cwtl
jnp
push
std
ss
into
arpl
vminpd
xchg
lods
leave
cmp
stc
inc
dec
mulb
loopne
sbb
repz
xchg
adc
imul
pop
lret
fs
fmuls
push
inc
dec
jmp
push
fmuls
loop
cli
jne
loop
insl
pop
enter
sarb
push
pop
das
rcl
imull
aaa
addr16
out
cmpsb
add
inc
jae
stos
pop
inc
push
lods
mov
xchg
pop
xor
negb
mov
dec
dec
repnz
xchg
scas
xor
call
xchg
dec
fildll
mov
psubw
daa
repnz
lods
jle
jns
sbb
shr
or
cmp
clc
push
shll
dec
repz
or
push
fucomp
movsb
hlt
inc
and
sbb
inc
fildll
sub
inc
cmpb
sti
movsl
pop
sbb
sub
std
or
aam
insl
add
xchg
adcl
cs
push
flds
xor
xchg
clc
xchg
mov
fdivrs
jge
filds
int
mov
ja
shrl
mov
lods
int
dec
push
xchg
lds
imul
cmpsb
fstps
xchg
push
loop
es
sub
dec
add
adc
xsaves
xchg
andb
aam
lahf
push
ja
jp
mov
je
mov
cmp
imul
call
ss
adc
xor
pop
sbb
dec
test
add
js
mov
adc
or
pop
sub
add
imull
or
push
xchg
roll
test
lcall
sub
sarl
add
sbb
dec
inc
dec
mov
loopne
movsl
dec
scas
jg
push
add
xchg
in
ss
or
sub
ss
xchg
jp
jle
dec
mov
cmp
pop
push
adc
or
mov
or
dec
sahf
das
or
mov
xor
cmp
cmp
ret
adc
mov
data16
loop
leave
ret
or
leave
mov
mov
mov
lods
insl
sub
lock
jo
mov
cld
mov
faddl
daa
idivl
pop
jmp
addr16
sbb
xor
movsb
arpl
inc
xor
and
adc
inc
cmpsb
nop
jg
fildll
cmpsb
fdivrs
xor
fistps
rcll
gs
sbb
dec
push
mov
jp
addb
pop
xchg
push
enter
xchg
xchg
jmp
loope
mov
dec
in
icebp
add
hlt
sub
jmp
mov
inc
sbb
mov
repz
xchg
fwait
sbbb
sbb
dec
jo
movsl
pop
aaa
fcomps
mov
ret
cmp
inc
jo
pop
std
nop
test
mov
add
pop
or
imul
mov
movsl
leave
mov
sbb
andb
mov
ss
test
faddp
adc
push
push
sbbl
mov
jae
dec
lds
dec
jmp
stos
test
xor
mov
adc
sub
mov
out
clc
inc
out
cmp
sub
pop
xor
and
icebp
cmp
cmpsl
push
ds
icebp
or
arpl
incl
data16
out
les
popf
inc
test
imul
xor
das
sbb
xor
and
sbb
bound
pusha
jg
out
out
sbb
test
es
js
ret
xor
mov
hlt
das
pop
arpl
shlb
mov
mov
xchg
inc
test
stos
cmp
shrb
addr16
or
mov
and
mov
pop
mov
xorl
add
ljmp
pushf
ljmp
repz
sbb
lods
mov
sub
in
and
lahf
pop
loopne
inc
ja
das
xchg
pop
cmp
mov
mov
insb
pop
cmpxchg
xchg
jno
pop
fidivrs
inc
xchg
sub
mov
sbb
dec
leave
movsl
jecxz
sahf
cmpsl
xor
and
pusha
in
in
sub
fistpl
xchg
lods
cmpsl
cli
adc
lahf
clc
dec
xor
pop
fisubs
mov
inc
mov
push
jnp
push
icebp
lods
pusha
cmp
fwait
ss
outsb
dec
dec
aas
pop
in
sub
movsb
add
inc
dec
jae
loop
daa
into
sub
jg
adc
and
es
xor
out
mov
adc
fwait
mov
shrl
pop
sti
lret
xchg
mov
fwait
movsb
js
dec
repz
jmp
mov
cmpsb
adc
dec
mov
jnp
sbbl
sbbl
cltd
pop
xlat
fucomip
push
push
pop
sub
xchg
mov
nop
jno
adc
cmpsl
enter
fldt
pop
fildl
xor
push
fcompl
cli
jbe
mov
sahf
test
scas
fistpll
pop
les
pop
sbb
and
pop
mov
sub
xchg
andb
xor
ljmp
js
push
mov
ret
aam
adc
sbb
cmp
cli
sbb
stc
sbb
dec
and
les
ja
addr16
in
jb
jno
or
fadds
movsb
fwait
xor
mov
rorb
bound
push
movsl
push
pop
xor
dec
scas
cld
xlat
out
mov
fs
test
cwtl
fistps
sub
out
xor
test
lret
pop
or
orb
inc
aad
loopne
subl
push
movsb
mov
pop
ljmp
dec
cmp
lret
sub
cmp
iret
aam
call
popa
and
push
xchg
xchg
push
out
add
cld
jg
aam
mov
das
sbb
imul
or
xor
incb
push
incb
insl
adc
adc
sub
sub
push
sub
adc
jle
jecxz
icebp
pop
daa
jae
mov
and
popa
add
ljmp
or
pop
stos
cmpsl
iret
inc
pop
ja
add
xor
call
xchg
lcall
dec
add
pushf
fcmovnb
adc
sti
inc
repnz
and
dec
cli
mov
add
cld
push
push
adc
dec
dec
fisubl
jp
lcall
add
add
std
lds
push
cmpw
rol
mov
les
in
iret
imul
stos
aaa
lret
out
xlat
mov
test
dec
fcomps
cmpb
lcall
pop
lods
daa
lcall
cwtl
mov
jp
stos
popa
mov
pusha
in
cmp
pusha
and
jl
jns
mov
inc
cmp
mov
mov
pop
jo
das
mov
fcoms
mov
mov
or
lods
insl
rorb
lds
pop
dec
dec
jp
adc
fiaddl
xchg
sbb
adc
xor
xchg
cmp
clc
insl
adc
rcrl
and
or
xchg
fsubrl
dec
fildl
lret
mov
xlat
push
jle
sti
pop
pop
fwait
adc
aaa
mov
cli
and
add
and
dec
lahf
pop
sub
adc
xor
sbb
adc
lret
loope
popa
stos
dec
mov
mov
loop
bound
ror
dec
outsb
adc
adcl
xorl
lds
pushf
dec
out
mov
clc
dec
test
pop
mul
rclb
and
sbb
add
lahf
shrl
lods
es
ja
test
outsb
mov
lcall
jl
lahf
dec
xchg
negl
or
leave
mov
pop
std
cmp
outsl
push
jmp
inc
out
stos
sub
loope
pop
in
lahf
fisubrs
mov
dec
jecxz
mov
stc
push
ja
or
ret
mov
jge
push
ret
push
cmc
add
sbb
mov
insl
and
out
lds
adc
andl
out
in
clc
sub
rclb
insl
sbb
lret
jno
rclb
add
mov
jno
cmp
fnstcw
popa
mov
lahf
push
into
jg
addr16
movsb
inc
loop
in
or
push
sub
adc
psllw
mov
jnp
dec
scas
mov
int
movsb
jge
xchg
dec
icebp
out
jg
jnp
mov
out
xor
or
pop
outsb
orl
sahf
xchg
mov
jno
or
mov
jg
loop
jbe,pt
dec
cltd
cwtl
lock
mov
dec
loop
dec
movsb
data16
sub
cmpsl
cmp
aam
adc
jae
fnsave
or
iret
inc
jg
stc
aas
icebp
push
shll
mov
lods
adc
rcr
push
mulb
mov
arpl
cmp
mov
out
mov
pop
sub
adc
or
mov
mov
cmp
xchg
inc
in
clc
add
push
shrb
xlat
pusha
push
lahf
aas
stos
int
and
insl
jno
into
fsub
inc
repnz
hlt
mov
jle
js
dec
inc
adc
mov
imul
xor
mov
subl
jo
jmp
mov
mov
aad
push
xor
dec
jg
incb
or
jle
push
inc
mulb
loop
cmp
adc
test
sub
lahf
push
pop
pop
xor
push
or
pop
push
adc
xchg
adc
repz
sbbb
idivl
or
in
or
es
mov
xor
clc
in
mov
into
lret
jp
dec
lods
pop
sbb
jne
mov
mov
xchg
lock
sahf
pop
ret
jmp
mov
subb
jns
sarl
pop
add
push
jo
push
lds
pop
and
cmpsb
sti
xchg
xor
cmovbe
xchg
jne
sbb
fcmovne
pusha
pop
in
iret
xlat
add
dec
std
mov
arpl
xchg
outsl
scas
out
dec
andb
data16
pop
jno
imul
subb
adc
pop
add
mov
xchg
sti
icebp
xchg
push
inc
add
adc
lret
mov
inc
clc
sahf
out
jg
jg
pushf
fisubrs
mov
mov
addr16
cmp
ljmp
testb
movsl
stos
mov
or
cmc
and
imul
mov
cmpsb
out
or
cmp
mov
xor
fsubrp
dec
adc
or
cmp
cli
adc
mov
mov
imul
push
sarl
daa
notb
add
mov
jl
add
ret
mov
cmp
mov
lods
or
loope
fisubrs
sub
ss
mov
in
divb
aam
stos
outsl
das
sub
repz
mov
stos
mov
cmp
dec
xchg
mov
adc
adc
adc
push
add
fnstsw
mov
add
jp
inc
or
push
sub
out
scas
repz
addl
jp
inc
mov
shll
fisubrs
out
popf
inc
pusha
into
adc
movsb
inc
jbe
cmpb
pop
inc
fists
and
mov
push
sub
jne
mov
push
jbe
cmp
stos
cltd
mov
popa
push
xlat
sub
pop
leave
lret
pop
sbb
mov
jge
mov
sti
inc
lock
xchg
pop
addb
xor
pop
fistpll
adc
lcall
cmp
cwtl
jns
cmp
int3
dec
mov
xor
add
mov
xlat
or
stc
or
lds
scas
aas
cmp
cmp
or
sbb
lea
repz
xchg
hlt
sub
and
cmovbe
jle
mov
bswap
test
dec
mov
repz
sti
sarl
cmp
mov
negb
pop
int
push
inc
stos
dec
adc
mov
les
cmpsb
roll
add
dec
scas
inc
movsb
outsb
daa
andb
ret
dec
mov
stos
mov
pushf
dec
stc
dec
inc
inc
cmc
out
mov
lods
aad
inc
pop
movb
icebp
add
int
push
xor
push
daa
lds
out
ss
push
dec
push
pop
dec
and
lock
ss
fucomi
and
aam
lds
negb
push
push
cmp
jmp
inc
dec
shll
push
push
xor
fsubs
lret
mov
sti
repz
pop
out
sub
lods
push
dec
jae
decb
mov
loopne
lods
inc
ja
mov
repnz
or
pushf
adc
inc
clc
pop
and
fcompl
orl
and
sbbl
jg
push
mov
divl
inc
mov
popa
movsb
and
mov
fsubrs
fwait
icebp
sub
or
popf
cmpsl
sbb
xchg
fadd
lods
xor
into
jle
les
sub
addr16
movsb
jne
jecxz
jbe
rorl
mov
sahf
cli
push
aas
inc
mov
mov
cmpsb
shl
movl
jo
jmp
xchg
mov
or
sub
pop
cltd
enter
mov
mov
and
dec
cs
jae
arpl
loope
cmp
adc
jns
int3
cs
rcrb
mov
enter
gs
fcmovne
inc
or
dec
cmp
sbbb
sbb
add
or
int3
xchg
sysenter
gs
in
pushfw
push
inc
lods
mov
add
movsl
pop
jns
ret
cld
outsb
popf
cmc
aaa
dec
test
dec
xlat
imul
aas
mov
and
insb
jge
cmp
lcall
inc
je
jo,pt
add
lods
jb
xchg
repz
out
xlat
orb
sarb
pop
notl
imul
sub
fimuls
ja
pusha
xor
mov
fsubrp
push
cmp
int3
inc
push
dec
clc
jl
inc
cld
pushf
iret
repz
push
inc
pop
sahf
pop
mov
in
push
scas
pop
xor
add
mov
adc
add
aam
mov
and
adc
cmpb
call
decl
sarl
dec
mov
and
sbb
push
imul
and
jnp
push
test
idivb
pop
cmpsb
mov
fiadds
cltd
cmc
pop
cmp
jge
xor
sub
adc
cwtl
mov
aas
cltd
imul
imul
jl
pusha
pop
lea
test
movsl
xorb
sti
pop
xor
inc
pop
xor
xor
mov
das
sub
or
ror
mov
sbb
ret
dec
and
push
jo
cmpsl
xchg
ss
xor
inc
sub
xchg
es
jge
mov
xchg
lret
mov
dec
out
das
outsb
jb
scas
and
adc
mov
cmp
cmpsl
decl
shrb
pop
ret
out
jae
xchg
jnp
inc
push
adc
pop
jle
mov
repnz
popa
stos
and
flds
xchg
les
cmp
push
lahf
sahf
jno
cmp
dec
stos
xchg
dec
cmp
jp
dec
inc
add
nop
mov
outsb
sbb
loopne
inc
addr16
shl
sbb
pop
mov
roll
popf
and
gs
mov
xor
inc
ds
scas
inc
retw
inc
cmpsl
dec
rdmsr
out
inc
mov
fs
pop
leave
pop
pushf
popa
cmp
mov
mov
stos
pushf
call
das
loope
sbb
aas
shlb
sub
adc
and
mov
lods
pop
sbb
xlat
ss
ficomps
add
mov
push
adc
pop
popa
jle
cs
in
aas
sub
push
movsb
and
cmp
call
lods
in
pop
sbb
es
movsl
cmpsl
mov
dec
xchg
jo
int3
mov
fnsave
fcompl
test
aad
bound
jmp
scas
or
fs
outsl
xchg
dec
or
or
dec
sbb
cmpsb
xchg
add
xchg
lods
jb
mov
jae
pop
pop
xor
jmp
mov
jp
adc
pusha
jl
stc
cmpsb
cmpsl
add
sarl
or
sbb
sub
shll
in
add
lock
mov
mov
lret
sub
insl
add
adc
cmp
adc
int
sbb
daa
add
nop
mov
aad
sub
mov
test
fbld
mov
js
xor
push
fsub
jmp
or
into
xchg
push
cmp
sub
insl
adc
and
call
dec
pop
jl
lcall
mov
xorl
jmp
dec
inc
and
scas
add
pop
and
and
pop
fcomip
mov
xchg
in
leave
out
negl
pop
pushl
lods
jle
sbb
insb
sub
xchg
int3
sahf
je
pop
sub
getsec
ficoml
jle
rcll
movnti
cld
mov
bound
xchg
rorb
xchg
rcrl
rorb
dec
fisubrs
daa
jge
decb
mov
nop
inc
std
jge
mov
repz
adc
lock
cmpsl
cmc
inc
push
sub
push
je
mov
out
fcmovnu
jno
mov
imul
fmulp
adc
mov
insb
notl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
adc
mov
adc
push
xor
mov
xor
mov
lea
adc
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
xor
add
adcl
mov
subl
mov
sbb
mov
orl
mov
addl
add
push
mov
mov
andl
xor
xor
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
mov
mov
adcl
xor
mov
add
movl
cmp
movl
je
movl
mov
movl
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
cmp
jne
sub
mov
xor
movl
cmpl
je
cmpl
jl
jmp
pushl
call
mov
dec
mov
jmp
add
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
and
mov
mov
or
mov
adcl
xor
adcl
add
xorl
imul
mov
andl
xor
sbbl
add
movl
cmp
mov
movl
push
movl
je
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
xor
mov
mov
andl
xor
addl
add
xorl
imul
movl
mov
jmp
movl
cmpl
je
cmpl
ja
jmp
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
jmp
lahf
xchg
jle
emms
xchg
ljmp
test
pop
jl
stc
icebp
add
cmpb
or
and
jp
outsb
cmp
mov
xor
dec
lahf
stos
and
xchg
jno
fimuls
push
addb
mov
cmpsb
fs
fs
inc
sbb
xchg
sahf
in
lds
dec
in
or
xor
arpl
data16
adc
xor
mov
ret
pop
in
push
sub
test
js
daa
jg
or
fisubl
data16
cmp
test
mov
pop
cmp
aaa
in
lock
or
cmp
adc
dec
dec
push
fdivrs
lahf
push
iret
sbb
xchg
cli
cmp
push
lock
out
hlt
aad
add
add
add
cmp
aas
push
push
mov
lods
add
push
jge
xchg
nop
sub
sti
test
dec
xchg
mov
es
or
sub
icebp
ljmp
add
and
mov
push
cmp
outsb
or
insb
loopne
mov
add
xor
jo
std
out
pop
dec
or
mov
pop
inc
sub
mov
cmp
popl
hlt
imul
xor
jmp
loope
cmpps
lret
out
inc
jg
pushf
sub
dec
ljmp
pop
fcoml
mov
data16
mov
ret
cmp
cltd
std
repnz
mov
dec
cmp
push
call
dec
fimuls
adc
enter
adc
jno
push
pop
lcall
aad
imul
mov
sbb
shrb
daa
outsl
enter
sbb
lods
cmp
rorb
xchg
popf
adc
jge
mov
push
cmp
adc
aas
fmuls
lds
in
sub
jns
cmp
fwait
mov
ret
pop
cltd
cwtl
mov
xchg
pop
xchg
in
sbb
and
bound
std
cli
cmp
sub
inc
cwtl
aam
jbe
in
pop
std
mov
fwait
sbb
cld
push
xchg
popf
mov
sub
inc
rcrb
stos
push
fs
daa
in
insl
insl
data16
mov
insb
mov
arpl
jecxz
sub
es
sbb
mov
or
jecxz
rclb
js
push
mov
adc
fdivl
loop
and
fwait
mov
dec
pusha
sub
pop
shlb
inc
mul
ret
fwait
and
push
sbb
pusha
out
or
pop
lea
mov
in
xchg
and
add
push
jge
pop
dec
xor
dec
and
sub
subl
adc
into
js
lret
adc
cmpl
sub
ja
loopne
repz
sub
lods
sahf
fists
xchg
repz
jnp
sbb
fisubs
or
sbb
jae
arpl
push
lret
jg
notl
add
pop
outsl
or
in
xchg
jno
jmp
adc
shll
mov
inc
dec
and
ljmp
je
and
int3
sub
xchg
mov
mov
xorb
sahf
sub
sub
fdivrs
out
mov
or
pop
in
mov
jb
xchg
pusha
shr
cmpsb
enter
repz
pop
stc
ja
mov
pusha
aas
inc
cmp
popf
lea
pop
call
shlb
add
xor
test
movsl
out
push
mov
or
push
pop
cmp
popa
hlt
cli
in
cmp
enter
xlat
push
fists
and
outsb
lcall
pop
xor
xor
inc
lret
jmp
push
outsl
popf
add
lret
jbe
sub
icebp
sahf
in
insl
int
jge
inc
xor
cli
lods
pop
dec
stos
xchg
add
test
cld
test
cmpl
and
in
fs
and
adc
jne
inc
pop
stos
add
mov
mov
ret
movsb
in
sbb
fmull
lods
mov
dec
mov
fcomp
xorb
imul
or
add
mov
cmpsl
movsb
sbb
xorb
fisttps
test
adc
add
out
sahf
push
inc
ss
or
and
lds
rcrl
or
xor
cmp
fldcw
dec
ss
mov
lcall
adc
test
sbb
orb
loop
roll
mov
out
popf
aad
ret
sar
cmp
jae
test
add
inc
and
ja
mov
pop
mov
cmp
cmpsb
sbb
inc
lea
repnz
mov
jnp
adc
test
lock
les
jae
adc
xchg
fwait
pop
scas
cmp
aas
cli
cmpsb
gs
adc
sti
addr16
sub
fadd
sub
ficoml
pop
scas
mov
inc
loop
mov
dec
sar
dec
outsb
in
and
push
sar
mov
jmp
test
cs
cmp
jmp
xor
rcrl
out
push
xchg
lcall
sub
test
js
arpl
mov
adc
add
outsb
fistps
mov
dec
push
mov
and
mov
divl
xchg
jmp
jns
jno
and
xlat
push
and
das
fwait
roll
cmp
xchg
mov
sbb
sarb
jnp
out
pop
push
push
fimull
mov
inc
daa
imul
scas
push
or
mov
sarl
push
add
insb
mov
jmp
mov
inc
subb
dec
popa
bound
iret
hlt
push
dec
popa
int3
jne
cmp
cmp
sub
subb
push
inc
sub
inc
and
in
mov
jl
mov
pop
jne
push
push
movl
lcall
and
loop
rcrl
xchg
push
inc
sub
mov
test
hlt
subl
test
xlat
fmull
test
jb
jb
push
sbb
sub
insl
adc
int3
add
mov
push
pop
adc
sub
mov
sbb
cmp
sbb
mulb
sub
push
ds
in
js
xchg
pop
pushf
cmp
push
adc
shl
ficompl
hlt
sbb
push
pop
xchg
movsb
lods
jo
out
xorb
inc
ret
test
pop
jns
or
pop
jno
lret
sub
cmp
dec
test
mov
in
xlat
nop
and
and
pop
fs
fmuls
jbe
xor
int3
push
xorl
hlt
dec
push
adc
mov
mov
aad
xor
repnz
mov
cmp
mov
pop
jp
cmp
outsb
into
cltd
in
in
mov
jb
out
repnz
sbb
mov
je
out
pop
imul
popa
sbb
dec
jb
xor
or
push
sub
mov
or
mov
sbb
or
sbb
subb
push
adc
pop
mov
mov
test
outsb
dec
out
cld
ljmp
fldl
fstps
ret
adc
imul
jge
rol
rorl
ljmp
adc
out
cs
lods
dec
int3
inc
inc
subb
mov
or
push
mov
or
lods
xchg
rcrl
insb
adc
test
or
sar
daa
cmp
fadds
pop
sbb
cmpsl
xchg
sub
xor
sub
das
rclb
xlat
pop
push
inc
repnz
aam
mov
popa
sarl
adc
adc
fcomps
test
movsl
addb
fnop
inc
int
scas
test
or
das
cld
and
loope
pop
fwait
call
rcl
movsb
jecxz
push
jp
mov
cs
roll
rcrl
stos
jbe
rcrb
push
fimuls
in
ljmp
cs
into
mov
jno
push
inc
adc
mov
jl
xlat
inc
push
sbbb
fs
cmp
add
mov
movsl
out
repz
jmp
xor
xchg
xor
cmp
ds
xchg
cltd
loop
xor
fidivl
fs
or
pop
fstp
mov
gs
enter
xchg
push
out
pop
mov
imul
ficomps
aam
jl
mov
rol
push
cltd
sbb
mov
push
in
add
pop
mov
cmpsb
add
rorl
mov
fstpl
mov
lcall
aaa
loope
sub
adc
pop
shl
add
jmp
pop
xchg
pop
add
addr16
jle
sub
sahf
movl
add
push
cmc
xor
and
sahf
cmpsb
fwait
add
xchg
shlb
test
inc
dec
fstpl
ljmp
pop
cmp
outsb
gs
mov
bound
enter
add
lods
out
stos
movsl
ror
pop
bound
nop
in
call
rcr
jg
std
push
mov
in
adc
dec
sub
push
adcl
cmp
mov
jb
add
cmpsl
out
int3
enter
mov
aas
fisubl
push
mov
in
leave
and
js
ds
sbb
jecxz
sub
or
es
into
fs
sub
sar
xchg
js
loopne
sub
rorb
push
call
xorl
mov
lcall
rcrl
popa
sub
adc
out
xor
lods
xchg
mulb
push
xchg
dec
sub
scas
push
cmp
lret
je
lds
xchg
inc
inc
mov
xor
xchg
loop
push
pop
into
push
xchg
push
test
push
sbbb
pop
insl
lock
das
out
inc
add
cwtl
push
sarb
loopne
sti
not
in
push
fcoms
dec
pop
jbe
dec
and
outsl
sbb
loop
push
lods
cwtl
andl
inc
inc
jno
jbe
in
into
mov
xchg
hlt
jmp
pop
sbb
out
jmp
xchg
adc
adc
loop
mov
jnp
int
xchg
das
inc
or
push
sbb
lods
push
jne
dec
jo
mov
xorb
jmp
popf
fs
push
daa
lcall
jp
sub
dec
xlat
cmp
in
cltd
in
xchg
cmc
jecxz
not
fwait
lcall
loope
or
sub
or
jp
mov
pop
out
in
xchg
cmp
repnz
cmove
scas
or
bound
ret
and
adc
dec
out
add
cmp
es
out
pop
fcompl
insl
sarl
jo
xor
xchg
es
jl
cli
shr
push
xor
adc
pop
les
or
cmpsl
fs
cmp
push
and
pusha
mov
jne
popl
jmp
sahf
xchg
les
cmpsl
pop
in
xorl
inc
xchg
and
cmp
xchg
repz
inc
rcrb
decl
call
scas
mov
sahf
pop
lea
sub
dec
js
insb
push
movsb
jbe
test
push
pop
push
push
push
pop
jb
daa
adc
push
dec
daa
cmpsl
std
sahf
outsb
mov
cmc
out
pop
int
sbb
jle
mov
adcl
fists
fists
sub
adc
sbb
sub
test
push
lods
mov
cmp
imul
xor
fsubrl
fidivl
shll
mov
cmpsb
bound
dec
xchg
mov
outsl
cmp
sbb
cld
mov
xor
cmp
pop
div
jo
add
sbb
sub
in
lcall
push
arpl
iret
mov
dec
sub
xchg
fnstcw
fdivp
adc
sbb
push
ljmp
inc
sub
imul
mov
dec
imul
movsb
or
push
out
stc
mov
test
enter
test
mov
pop
push
sahf
aam
cmp
xchg
sbb
sbb
fdivl
mov
mov
jae
push
dec
jg
fnstsw
mov
out
repz
jg
into
jns
xor
movsl
jmp
dec
es
nop
pop
or
fistl
add
fimuls
cmp
mov
ret
mov
cmp
roll
pop
in
jge
ljmp
nop
imul
or
or
icebp
add
das
and
test
jnp
mov
movsb
xlat
jle
jecxz
stos
pop
flds
cmp
mov
jecxz
movsl
mov
dec
pop
xor
push
ret
xchg
popa
movsb
mov
adc
cmpsl
ss
or
mov
add
push
xlat
add
int
push
stc
adc
jecxz
dec
scas
stc
xchg
lahf
test
mov
data16
ret
xchg
jle
andl
cs
jns,pn
ficoml
lahf
leave
jnp
and
jge
shll
aaa
or
lods
add
adc
dec
cs
test
mov
iret
xchg
jnp
cwtl
inc
lahf
fbstp
pop
sub
or
nop
arpl
ret
mov
daa
xor
xchg
inc
pop
aad
repz
in
lods
lahf
mov
or
dec
push
out
or
lock
dec
dec
push
inc
mov
pop
jno
mov
sbb
pop
mov
imul
sub
push
xchg
aam
enter
sbb
mov
cwtl
je
pop
aaa
add
imul
loopne
imul
pop
fimull
cmp
pusha
sub
shlb
jnp
or
das
pop
xchg
and
aad
lock
mov
mov
push
fwait
jecxz
xchg
out
test
mov
in
aaa
in
lods
insb
mov
gs
cmp
jg
mov
lahf
mov
pop
stos
cwtl
pop
push
add
or
pop
mov
popf
cmp
out
addr16
stos
xor
pusha
pop
and
gs
xor
daa
jge
ret
sahf
js
outsl
psllw
jmp
mov
icebp
push
daa
clc
cmp
ljmp
mov
cwtl
iret
pop
sbb
sbb
outsl
cmp
leave
mov
add
jmp
loopne
cmpsl
or
aas
mov
add
mov
jl
je
mov
addr16
in
divb
lret
mov
add
inc
nop
and
rolb
out
and
xchg
pop
or
inc
fldenv
adc
add
insb
add
ds
xchg
aam
sub
inc
add
into
hlt
ret
mov
imul
mov
imul
inc
sbb
or
inc
or
cs
loope
sbb
aad
push
daa
pop
jge
dec
sub
leave
sub
popf
adcb
scas
into
movsb
fwait
int3
sub
jns
add
outsl
je
push
loope
pop
inc
fldt
jnp
stos
aas
into
or
out
inc
shlb
adc
test
push
cmp
cmpsl
jl
mov
int3
jmp
mov
arpl
imul
repz
shlb
lret
lahf
or
call
xchg
shrl
push
sbb
xor
pop
fsubr
inc
scas
loope
test
add
jb
sti
mov
dec
xor
fsts
rorl
out
fcomp
sub
push
dec
sub
cmp
add
sti
fwait
jmp
pop
rep
mov
push
pop
mull
add
adc
loope
pop
dec
push
outsl
sahf
addr16
shl
je
out
jecxz
pop
fdiv
and
loope
jp
ljmp
or
dec
xchg
aad
js
add
and
inc
dec
jecxz
idivb
loopne
cmp
sti
movsb
inc
cmpsl
adc
inc
cwtl
push
arpl
ret
xlat
dec
cmp
adc
dec
mov
jecxz
aad
cmp
pop
push
pushf
mov
stos
cmp
jl
mov
mov
inc
aas
insb
xor
fld
push
scas
jnp
cltd
jae
xor
stos
fucomp
fnstcw
lods
pusha
icebp
mov
dec
jne
lods
mov
popa
movsl
sahf
adc
insb
cld
bound
cmp
jp
fildl
call
inc
pop
pusha
mov
adc
push
mov
cmc
data16
mov
dec
xchg
stos
cli
sub
cmp
mov
fstpt
dec
lret
pop
sub
mov
divb
mov
sub
loope
enter
jns
add
imul
mov
fwait
sub
pushf
dec
xor
mov
mov
sub
mov
lcall
mov
insb
dec
dec
xchg
fstpt
or
stc
jne
xchg
ds
enter
mov
cmc
xorb
xchg
add
adc
ret
pop
outsb
call
sbb
or
sub
fucomp
sub
mov
outsb
xchg
dec
jb
js
sub
cwtl
jne
xor
jo
jp
jle
sbb
cmpsl
push
into
cld
xchg
jge
mov
mov
inc
add
add
cmpsb
into
cmp
mov
insl
cmp
xor
mov
shlb
out
push
fimull
xchg
pop
sbb
or
push
outsl
jnp
dec
inc
js
mov
lods
xchg
xlat
mov
jne
mov
xchg
lods
lret
lock
test
lea
mov
out
mov
mov
or
xor
rcll
mov
in
insl
flds
loope
test
xchg
dec
cltd
xchg
out
inc
imul
pop
je
jbe
stos
pop
push
inc
push
test
loopne
jmp
dec
fmul
inc
dec
cld
out
in
push
mov
popf
stos
push
leave
out
aad
or
mov
inc
jp
insl
mov
sahf
das
mov
pop
jns
mov
shrl
push
sbb
out
popl
cmc
mov
cmpsb
lds
es
mov
fs
add
pop
outsl
je
push
ret
mov
std
loope
and
mov
xor
and
xchg
lret
enter
and
mov
inc
fwait
outsb
xor
std
hlt
adc
jno
mov
fnsave
cs
mov
das
es
push
pop
mov
les
mov
jmp
in
xchg
lahf
cmp
scas
daa
sbb
iret
add
xchg
dec
and
xchg
sub
lahf
loopne
sbb
test
sbb
pop
repnz
push
cwtl
ljmp
and
sub
sahf
xchg
rolb
ja
push
xchg
mov
jecxz
mov
pop
adc
daa
sbb
inc
ret
inc
xor
mov
insl
jg
ljmp
cmp
sub
push
pop
dec
mov
mov
or
shld
push
das
or
pop
rcrl
or
lea
jg
and
inc
push
cmp
leave
xlat
or
jmp
pop
cld
cmpsb
lods
pop
rcll
xor
icebp
aas
add
lock
adc
pop
aam
rcll
mov
dec
mov
cld
imul
xor
mov
std
popf
fwait
pop
fst
mov
fsts
adc
jne
inc
les
mov
adc
inc
pop
xchg
sbb
bound
mov
and
dec
mov
lods
adc
lock
imul
or
dec
jnp
cmc
add
sbb
jno
jno
sahf
and
into
test
shr
lods
jg
mov
jg
pop
pop
and
mov
mov
into
mov
imul
and
dec
inc
xchg
outsl
outsb
mov
movsl
iret
pop
test
cmpsb
xchg
jg,pt
andl
adc
mull
cmp
push
rcll
mulb
pop
push
push
lcall
sbb
fsts
movsb
mov
iret
das
test
mov
test
imul
pop
gs
stos
push
push
pop
pop
xchg
cmp
inc
idivb
cmpsl
mov
push
xchg
clc
xor
sub
xchg
xchg
test
aad
popa
or
xor
push
decb
dec
push
clc
pop
in
lcall
subl
out
arpl
xor
aad
push
inc
ret
push
sbb
cmpl
inc
movsl
or
adc
lcall
xchg
and
mov
inc
jge
xchg
jecxz
fadd
dec
jg
test
das
scas
test
in
std
ds
xchg
mov
das
pusha
add
int3
sub
call
push
or
fidivs
fwait
ss
ds
cmp
pop
xorl
addl
es
and
outsl
adc
jne
cwtl
adcl
pop
loop
orl
scas
outsl
cmpsl
adc
loope
aaa
push
stc
fmull
cmp
cmp
adc
mov
cmp
and
push
test
out
mov
cmpsb
ja
ljmp
icebp
push
ljmp
or
jne
xor
or
mov
and
xlat
sti
data16
mov
bnd
inc
mov
inc
ljmp
push
and
int3
xchg
push
insl
push
fdivl
loop
mov
fucom
or
negl
iret
imul
dec
add
jl
mov
mov
add
test
mov
rcll
pop
fldenv
or
outsl
cmpsb
push
pop
xor
roll
inc
in
mov
idivl
push
sarb
xchg
and
xor
or
out
fstps
pop
aas
mov
push
ftst
jne
dec
leave
aas
mov
mov
fcoml
aaa
jl
imul
sbb
cs
js
mov
sbb
jmp
rcrb
xchg
cltd
std
push
or
loop
fcomps
dec
lret
xchg
ljmp
fadds
cmp
movsb
xlat
sbb
push
mov
ljmp
subb
jl
insl
add
fiaddl
out
jl
mov
jmp
adc
xor
mov
cmc
mov
shl
out
sub
sbb
mov
popf
sbb
stos
sub
or
fcoml
ret
ret
ror
cmp
xor
or
xchg
jo
aas
mov
repz
gs
cmp
icebp
neg
insl
cs
lahf
add
sub
jne
jno
mov
cmp
loopne
ja
aaa
mov
les
pop
sub
sbbb
enter
sub
or
sub
cs
jae
or
push
pop
fisubrs
insb
or
test
cs
fs
lds
loope
js
xchg
sbb
das
sub
cmpsl
ds
test
add
cmpsl
push
inc
out
adc
das
cmpps
stos
mov
or
nop
pop
mov
dec
or
sub
repz
in
hlt
add
pop
lret
pop
int
adc
mov
or
sub
and
push
adc
mov
into
push
addr16
call
loope
mov
mov
or
pusha
sub
inc
inc
in
dec
lods
xlat
fwait
inc
test
and
cmc
mov
aas
shl
adc
mov
adc
in
in
repnz
enter
mov
cmpxchg
push
notb
test
push
or
jno
dec
andl
jge
gs
push
cmpsb
dec
lock
add
add
testb
lret
je
addb
out
int
cmp
and
jbe
ret
inc
mov
outsb
adc
push
mov
mov
cmpsb
jno
xor
in
popf
loopne
loope
sub
xlat
or
sbb
or
jge
and
fs
jecxz
xlat
mov
mov
movsl
clc
shlb
mov
adc
jmp
loopne
mov
dec
xor
jno
mov
jl
cmp
cmc
sub
mov
pavgb
sub
out
push
inc
sbb
push
mov
mov
dec
mov
sub
cmpsl
movsl
push
adc
pop
sbb
frstor
in
inc
insb
fs
lods
ds
lcall
adc
lods
add
xchg
adc
cltd
dec
jge
popl
and
lock
lods
inc
dec
insl
pop
pop
call
pushf
mov
in
jnp
cmpsb
call
add
xchg
stos
adc
shrl
jnp
push
daa
push
int3
scas
jp
push
inc
test
and
pop
dec
and
dec
push
scas
cmp
push
xor
fstps
mov
jb
push
sbb
fwait
dec
std
leave
fsubr
ljmp
cmp
and
mov
xchg
pop
inc
cmp
rcrb
xchg
pop
push
mov
sbb
or
mov
pop
bound
nop
pop
xor
fsubs
js
mov
cmp
stos
pushf
shlb
rorb
inc
and
pop
cmpsl
gs
pop
dec
cmpsb
dec
mov
and
lahf
push
cmp
adc
dec
dec
adc
lret
or
push
pop
push
roll
dec
xor
fsubrl
test
dec
cltd
mov
andb
popf
lds
xor
inc
in
repz
add
inc
cmp
dec
push
jb
sub
je
dec
mov
xor
sahf
in
movsl
fwait
sarb
out
sbb
aad
push
sarb
xchg
movsb
lock
ljmp
inc
pop
inc
enter
icebp
ljmp
jnp
inc
push
fwait
syscall
cmp
mov
cmpl
in
insl
add
pushf
data16
sti
popa
mulb
inc
lcall
jbe
aad
xchg
jne
xchg
lock
aam
outsb
cli
loop
mov
call
cltd
xlat
enter
sub
adcl
xor
in
mov
and
mov
movsl
into
into
jp
and
mov
int
jl
std
dec
ljmp
pushf
sbb
subl
and
outsl
fistpl
rcll
xchg
push
bound
out
and
jle
mov
cltd
jo
pop
and
pop
leave
aad
push
sub
xchg
add
xor
pop
loope
aad
pop
movsb
xchg
das
sub
aas
push
nop
insl
push
testb
jne
test
test
rcrb
mov
ret
outsl
mov
aaa
push
mov
push
jmp
lahf
cmp
adc
jno
xchg
stos
xor
or
and
rorb
mov
or
jl
jle
cmp
mov
call
fldt
pop
mov
lcall
enter
lds
ret
in
movsb
mov
jl
mov
out
popa
jle
xchg
xor
daa
test
adc
cwtl
inc
or
insl
cmp
popa
mov
iret
cmpsb
sbb
adc
push
test
push
loope
mov
test
std
mov
mov
dec
cmp
aas
lret
fiadds
mov
push
lret
xor
fimuls
push
outsl
lret
fcompl
in
pop
stos
test
hlt
sbb
stos
jle
pop
mov
push
hlt
sbb
xchg
scas
imul
cs
lcall
out
and
push
add
mov
call
add
sbb
icebp
or
scas
or
push
fcoml
cli
cmpsl
fsqrt
mov
sub
jmp
sub
dec
push
inc
adc
pop
rcr
rclb
or
frndint
and
push
repnz
push
pop
push
fiaddl
dec
xchg
movsb
out
xchg
fmuls
loopne
fwait
dec
push
pop
in
cmc
mov
xchg
std
loop
hlt
adc
fstpl
dec
lahf
adcl
push
lds
mov
rorl
jmp
push
jle
in
push
inc
dec
sub
inc
adc
mov
and
jl
lock
fsubl
ret
xchg
inc
stc
pop
xchg
xchg
xchg
aad
lea
inc
fs
sbb
fistl
cmc
dec
loopne
leave
mov
inc
outsb
in
repz
and
xchg
insl
jo
push
arpl
daa
sbb
inc
fisubrl
xchg
into
cmpsb
sub
cmp
push
into
sbb
aad
and
mov
in
lret
lds
or
fs
jae
sbb
adc
mov
push
ret
add
je
jne
mov
in
fldcw
add
jnp
sti
jns
jle
cmp
xchg
out
jbe
insb
push
xchg
lea
xchg
mov
mov
mov
xchg
xchg
push
push
mov
imul
and
and
es
out
xor
inc
movb
inc
into
popl
pop
ss
rcrl
mov
or
mov
sti
cmp
cld
pop
cmp
xlat
stc
and
call
cltd
mov
jb
xchg
pop
mov
ljmp
das
pop
loop
ret
push
push
std
outsl
insl
adc
lock
push
test
or
mov
xchg
loopne
sub
dec
jle
or
mov
add
mov
pop
sbb
push
ljmp
add
dec
sahf
mov
mov
stos
outsb
leave
jg
sub
xchg
or
sbb
adc
aam
pop
je
orl
push
lds
and
adc
push
decb
mov
fidivl
mov
lods
sbb
pop
test
or
insb
test
mov
les
idivl
flds
gs
sbb
jns
adc
mov
push
test
movsb
mulb
jge
out
ja
or
ror
pop
pop
adc
lock
pusha
dec
jge
scas
sbb
push
rol
loope
push
sub
inc
frstor
in
ret
mov
xor
out
fwait
rcrb
test
adc
or
stos
sub
xor
insl
fldcw
sbb
xchg
mov
adc
jb
pop
push
imul
adc
lahf
adc
loop
sub
cli
lea
add
popa
push
scas
pop
mov
push
mov
jae
lock
and
mov
cmpsl
mov
arpl
dec
sti
sbb
ja
inc
and
jge
lahf
add
mov
dec
lds
in
and
lahf
out
mov
xor
xchg
das
shrb
ss
mov
cmpb
jnp
mov
xor
xor
push
pop
test
push
and
lret
jl
sbbl
mov
add
jge
inc
push
bound
ja
sub
jb
mov
cli
shr
adc
jecxz
push
in
ljmp
sti
jge
bnd
daa
jecxz
std
shll
xchg
jl
call
or
pusha
sub
aad
push
adc
loope
lret
cmp
fbstp
test
xor
pop
inc
orl
cli
sar
inc
insl
shll
sbb
lock
sub
loop
fnstcw
xchg
das
ficompl
inc
out
ret
xchg
and
pop
test
mov
in
jb
xchg
lods
in
add
popw
dec
push
cli
fmull
and
paddusw
jns
loopne
popa
repnz
insl
add
sahf
daa
pop
pop
dec
lahf
shrb
sbb
cmpsl
and
js
cld
push
lock
pop
and
sbb
jge
mov
sub
cmp
push
jl
jns
jge
xor
imul
mov
test
in
add
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
sbbl
push
movl
cmpl
je
cmpl
ja
jmp
call
mov
dec
mov
jmp
mov
notl
mov
movl
push
mov
mov
mov
sub
imul
mov
mov
mov
movzwl
or
xor
adc
xor
and
mov
addl
add
subl
add
imul
mov
mov
cmp
je
and
mov
mov
mov
sub
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xor
add
mov
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
mov
dec
mov
jmp
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
movzbl
xor
mov
mov
xor
mov
add
mov
add
movzwl
mov
movb
sub
lea
mov
sub
mov
add
mov
andl
xor
andl
sub
orl
mov
movl
andl
mov
inc
mov
cmpl
jl
jmp
call
cmpl
jb
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
movl
movl
cmpl
je
cmpl
jbe
jmp
push
call
xor
xor
dec
mov
jmp
mov
push
and
mov
xor
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
subl
push
andl
add
movl
jmp
mov
movl
mov
movl
inc
cmp
movl
jb
andl
xor
xor
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
xor
adcl
add
jmp
adc
mov
mov
sbb
mov
orl
xor
mov
add
movzwl
mov
andl
mov
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
movzwl
incl
xor
orl
add
mov
mov
movl
mov
movl
inc
mov
movl
cmp
jne
inc
mov
movl
cmpl
je
cmpl
ja
jmp
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
dec
add
add
mov
xor
or
mov
sub
or
mov
sub
xor
add
add
orl
mov
movl
and
movl
orl
movl
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
pushl
push
push
push
call
cmpl
jb
mov
mov
mov
xor
mov
orl
mov
xor
add
mov
mov
mov
je
mov
mov
xor
orl
xor
sbbl
sub
andl
sub
neg
xor
or
mov
decl
mov
mov
add
imul
mov
mov
mov
subl
add
or
or
mov
mov
mov
jmp
mov
xchg
mov
mov
jl
jmp
jl
cmpsl
pop
push
js
das
imul
mov
mov
into
mov
add
icebp
cs
adc
push
clc
insl
pop
or
out
sbb
in
cmpsb
aaa
das
xor
cwtl
sbb
cmp
mov
mov
cltd
icebp
adc
jb
pop
cmp
cmp
inc
and
cmp
mov
fldlg2
int
push
cli
push
imul
mov
push
or
arpl
mov
testl
pushf
scas
lock
and
scas
dec
mov
jmp
adc
mov
lahf
ds
sub
and
rcll
add
je
scas
ljmp
or
into
jmp
or
test
cmpsb
imull
negl
ror
sub
aas
out
jmp
les
adc
imul
popf
cmpl
into
gs
daa
or
loopne
mov
je
mov
shl
fs
jno
cmp
out
dec
jl
ja
mov
xchg
push
aas
push
jmp
cmpl
pop
test
dec
mov
insl
std
fildl
push
xor
negl
push
imul
mov
loopne
push
insb
lods
fldcw
add
cwtl
push
fbstp
push
das
ss
sti
jg
add
orb
rol
je
pop
movsb
rorb
jmp
mov
sub
mov
cmpsl
xlat
mov
adc
push
inc
ret
data16
cmp
xlat
xchg
cs
fnstsw
push
push
aaa
leave
in
aam
inc
add
out
cmp
adc
daa
jle
mov
lcall
in
adc
mov
aam
mov
push
jne
mov
jecxz
popa
scas
int3
sub
mov
and
pop
adc
jno
leave
or
mov
push
cmp
rdmsr
pusha
jno
inc
popf
addr16
xchg
out
xor
cmpsl
sub
pop
movsb
adc
pop
fsubl
pcmpgtw
mov
push
arpl
imul
rcrb
or
jecxz
mov
jecxz
pop
push
sarb
dec
dec
mov
rcll
lds
imul
enter
mov
lcall
add
daa
mov
jmp
xchg
dec
rol
ljmp
ret
cld
sbb
push
rcrb
loope
fsubl
or
rorl
addl
adc
mov
in
xor
out
test
out
pushf
inc
addl
lret
mov
mov
sarb
std
sbb
add
fsubrl
dec
notl
dec
pop
rorb
inc
lods
or
jmp
leave
xor
mov
stos
pushf
lods
addr16
bound
mov
dec
push
mov
dec
xchg
push
sub
dec
idivl
mov
sar
ja
jns
je
add
dec
sbb
cmpsb
packsswb
add
in
mov
xchg
xchg
scas
lods
adc
inc
cmp
pop
mov
cs
nop
pop
xor
sahf
pop
lods
test
aas
or
and
mov
mov
mov
jnp
loopne
lahf
hlt
xor
mov
rolb
jp
mulb
or
repz
mov
or
movsb
cmc
inc
nop
ja
enter
xor
addl
lods
lds
push
xor
popa
aad
sub
sbb
rclb
aaa
jns
fnstcw
test
or
mov
xchg
sbb
and
xchg
sub
out
out
mov
rcl
popf
mov
sahf
dec
push
stc
outsl
jmp
shll
cmp
in
outsb
pushf
mov
ljmp
test
dec
mov
dec
pop
int3
sbb
sub
mov
mov
ja
mov
inc
push
scas
mov
dec
and
and
push
fcmovnu
jb
xor
sub
or
cli
push
outsb
stc
call
xor
or
stos
add
xchg
sti
je
add
sahf
push
push
mov
lahf
pop
ret
or
sahf
or
and
sbb
or
xlat
dec
lea
and
fs
orb
mov
roll
cmpb
int3
lods
or
fdivrs
enter
ljmp
xor
xchg
out
ja
fldl
ficoml
pop
rdmsr
lea
sub
dec
ret
pop
shll
ret
dec
mov
jnp
and
hlt
dec
out
mov
inc
pop
mov
movsb
xor
cmpsl
mov
testl
mov
iret
xor
mov
dec
out
sbb
add
jbe
sbb
leave
dec
push
mov
pop
ds
pop
js
js
dec
or
das
sbb
aaa
dec
bound
leave
cli
jge
data16
pop
inc
xor
mov
mov
jmp
int3
pop
mov
push
lds
mov
xor
aam
daa
out
add
sub
leave
push
insb
push
sbb
pusha
jp
lock
pop
dec
enter
mov
inc
sub
cmp
sbb
popa
subl
add
hlt
mov
sub
sub
push
and
lock
std
cmpsb
in
add
sbb
shrb
push
cwtl
aam
repz
cmpsb
jmp
inc
cmp
fildll
add
jae
cmp
mov
ja
das
add
jo
aaa
mov
inc
gs
and
pop
adc
fwait
cmp
iret
or
and
idiv
dec
pop
aad
pop
mov
mov
rolb
pusha
xchg
lds
xor
test
scas
in
mov
mulb
leave
jmp
shrb
dec
out
dec
repnz
adc
lock
pushf
and
rcrb
and
shlb
jb
xchg
je
jg
sub
add
cli
sub
push
dec
fwait
cwtl
shrb
sarl
das
xlat
add
inc
ret
mov
push
repnz
mov
das
cmpsl
stos
inc
out
pop
fstps
enter
fadd
shll
lahf
cltd
les
push
in
and
roll
int3
dec
dec
mov
hlt
ds
enter
test
cmp
shrb
ja
nop
arpl
adcb
inc
add
aam
and
dec
dec
sar
pop
sub
push
fdivr
aaa
aam
nop
dec
fwait
xorb
cs
cmc
jae
add
mov
jbe
lcall
and
cmp
cld
lcall
cmp
jo
push
arpl
inc
cmpsb
inc
dec
test
enter
push
cmc
adcl
mov
add
addr16
fsub
das
scas
std
adc
imul
adc
loope
cmp
movsl
inc
push
and
test
xchg
in
and
das
leave
out
ret
mov
cmp
dec
push
nopl
push
pop
mov
stos
cmp
jle
dec
mov
lret
xchg
leave
inc
inc
mov
cmpsb
out
ret
repz
lret
or
test
out
cmp
sahf
cld
scas
push
lea
lods
add
test
push
push
out
ret
dec
cmc
add
jo
pop
cmc
jg
sub
imul
add
out
push
ja
mov
sbb
sbb
jno
call
mov
imul
rcl
adc
add
scas
mov
icebp
ds
jb
pop
mov
cs
sti
adc
push
popf
orb
cmc
xchg
mov
lret
ret
and
out
sub
call
or
fimull
xchg
xchg
push
xchg
push
cmp
stc
push
fildl
int3
mov
outsb
inc
in
cmp
xchg
inc
mov
fildl
pop
shlb
jle
push
ret
cmc
mov
inc
xchg
sub
movsl
jg
lahf
enter
mov
lods
push
push
das
cmp
dec
inc
adc
in
dec
mov
loopw
fbstp
fldz
pop
dec
int
aam
xor
test
int
cld
dec
cmp
and
sti
cld
sbb
mov
mov
jle
sub
shl
aas
sbbb
aaa
repnz
sbb
out
mov
aas
in
inc
inc
fnstsw
add
mov
cmpsb
movsl
jge
push
je
push
test
cs
fistpl
cmp
xchg
mov
lcall
inc
shl
ret
sbb
dec
aas
lcall
in
es
dec
outsb
sbbl
fisttpl
xor
jae,pn
repz
iret
jp
push
add
xor
dec
insb
sub
bound
mov
subb
or
mov
sub
mov
test
mov
imul
or
daa
dec
mov
fmuls
mov
lds
cmp
icebp
fdivr
and
repz
cmpsb
test
lret
or
int3
popa
fmul
cmpb
push
outsl
mov
ljmp
xchg
sbb
dec
iret
lock
iret
daa
and
mov
int3
std
loopne
inc
push
adc
test
jle
push
cltd
ret
leave
push
mov
ficomps
mov
mov
and
pusha
adc
push
inc
test
in
mov
adc
dec
cmpsl
sbb
shl
add
lods
pop
xlat
adc
movsb
or
jecxz
sbb
jmp
mov
add
dec
popa
ss
clc
into
jbe
sahf
mov
lret
leave
xor
arpl
xchg
movsl
lods
test
xchg
andb
inc
mov
mov
cld
data16
dec
inc
fs
adc
push
or
pop
aam
addb
add
cltd
in
and
jae
inc
aas
pop
sub
or
pop
inc
pop
and
add
icebp
pop
adc
or
sahf
sub
lret
nop
test
lods
mov
or
lea
xchg
xchg
das
hlt
jge
lret
mov
cwtl
xor
movsl
in
clc
pop
pusha
je
sbb
and
pop
mov
pop
decb
movsb
std
and
std
mov
int
out
jae
pop
ret
xchg
test
push
ret
ljmp
gs
jecxz
inc
inc
inc
pop
dec
rcrl
dec
inc
mov
aaa
pop
call
xor
aad
push
adc
pop
shr
imul
lock
data16
push
cli
pop
es
sbb
pop
imul
popa
mov
xchg
mov
sub
fimull
lcall
fdivl
rcl
xchg
mov
xor
add
aad
movsb
nop
or
xor
lods
popf
or
adcl
xchg
xlat
adcb
xchg
mov
jle
cmp
lret
ljmp
fildll
push
xchg
dec
inc
sbb
mulb
xor
xor
pop
bnd
sub
and
outsb
out
lea
test
rcll
cltd
mov
push
pop
aad
icebp
aad
inc
sahf
adc
movsl
mov
icebp
aas
incb
adc
stc
pop
bound
ret
iret
dec
mov
mov
push
push
dec
cmp
pop
mov
mov
je
push
add
shrb
ds
leave
outsb
lcallw
jmp
push
adc
mov
push
fs
in
jne
gs
and
and
adc
jl
xchg
std
mov
in
loopne
sbb
sbb
jns
ss
out
movsl
sub
insb
pop
int3
sbb
scas
scas
jle
ds
popa
call
arpl
fistpl
aas
ffreep
mov
mov
sarb
cmp
sub
cli
pop
sbb
mov
in
lock
data16
sbb
pop
enter
rorl
scas
sbb
es
dec
or
mov
push
sbb
lea
inc
add
push
mov
mov
xchg
fs
movlps
cwtl
mov
jo
pop
cmpsl
and
cmpl
shrb
fisttpl
loope
push
cld
ljmp
enter
jo
sub
add
in
inc
push
or
pop
inc
scas
push
fucomi
int
jns
hlt
adc
sub
movsb
and
xor
shr
sti
popa
pop
inc
in
test
dec
aas
out
push
inc
sahf
pop
jl
jg
movsl
sbb
outsb
mov
mov
mov
pop
inc
clc
sub
pop
jg
sub
adc
push
dec
pop
lods
sbb
mov
inc
mov
pop
push
sub
outsl
inc
sub
ret
and
neg
stos
push
test
fsubr
xchg
fwait
pop
lcall
incl
cmc
roll
jb
flds
mov
cmc
fisubrl
dec
mov
lods
rcrb
mov
imul
mov
jl
in
lea
cmp
pop
fildll
mov
mov
xchg
mov
mov
mov
cli
jmp
pop
clc
mov
jns
ds
hlt
out
or
loop
sub
xchg
pushf
cmp
mov
not
rorb
sahf
mov
fwait
xchg
xchg
xchg
sub
pop
out
fsubr
stos
pop
jmp
bound
rcll
sbb
xor
sbb
sub
adc
dec
mov
in
imull
and
inc
mov
outsb
cmc
pop
nop
test
jnp
add
jne
cmc
lock
sub
and
inc
subps
nop
cmc
jo
stc
cmp
dec
lock
or
int
push
adc
inc
sbb
test
cs
mov
add
jo
in
push
xchg
push
outsl
pop
dec
test
dec
cmpsb
sbb
loope
inc
mov
pusha
mov
in
or
mov
mov
cmc
xchg
cmp
inc
int
xchg
mov
xor
adc
jg
stos
mov
idivb
shlb
inc
fs
outsl
dec
lcall
mov
pop
xchg
push
movsb
sahf
sbb
out
sbb
push
adc
lods
mov
adc
lret
daa
sbb
inc
or
daa
fwait
sbb
aam
xchg
and
cmp
jnp
int3
fistl
xchg
dec
test
lods
mov
and
xchg
stos
movsl
jecxz
sub
mov
ss
cmp
xchg
mov
popf
adcl
aam
or
ret
lret
cmc
lret
sbb
loopne
adc
std
mov
push
fldt
subb
or
add
mov
pushf
sub
test
out
mov
repz
in
jne
sub
in
mov
mov
add
cmp
mov
shlb
pop
adc
xchg
sub
jno
dec
leave
sub
scas
inc
fimull
mov
xchg
cmp
or
pop
sub
outsl
push
sbb
int
adc
nop
push
iret
cld
sahf
adc
pusha
lea
test
movsb
pop
mov
cmp
xor
and
icebp
stos
sti
pop
adc
imul
seta
pop
sub
ljmp
leave
inc
rcrl
add
add
stc
mov
pop
and
xchg
xchg
andb
mov
cmpsl
mov
fs
push
in
mov
xchg
cmp
jo
pushf
out
fsts
mov
repnz
sbb
aas
nop
sti
mov
popf
mov
sarl
mov
lret
mov
or
cmpsl
pop
cmp
push
inc
mov
and
mov
jg
sbb
mov
lea
xor
frstor
gs
pusha
fadds
mov
fs
leave
mov
xor
jp
or
cmp
test
xchg
lock
mov
adc
push
cmc
sub
cs
xchg
adc
imul
repnz
dec
movsl
push
dec
das
ret
ret
jp
cmpsb
inc
and
sub
out
cmpsb
sbb
js
mov
addb
mov
pop
sbb
adc
and
arpl
es
iret
stc
lcall
repz
dec
fdivp
pushf
mov
adc
cmp
xor
mov
cld
and
pop
fs
popf
mov
dec
fdiv
shl
addr16
inc
jo
cmp
push
cmpsb
adc
bound
adc
dec
cli
ss
dec
add
sub
cltd
lea
lret
add
dec
push
push
cltd
push
fabs
jnp
lods
mov
cmp
pop
xchg
jl
stos
sarb
mov
sub
test
mov
sbbb
push
pop
or
or
push
pop
pop
nop
cltd
shrb
fmuls
fisttpll
and
cltd
cmpsl
adc
or
dec
sub
test
test
data16
cmpsl
jo
inc
test
or
adc
adc
test
jecxz
push
ror
jnp
adc
out
push
je
mov
cmovns
mov
adc
inc
mov
pop
xor
icebp
push
imull
push
add
test
idivb
icebp
jne
leave
rclb
sub
je
popf
xor
fbstp
dec
inc
ret
sti
bound
loop
test
stos
adc
adc
loop
fs
test
in
cmp
mov
xor
xchg
mov
lcall
mov
mov
adc
push
mov
leave
sbb
loopne
das
movsb
push
stos
sub
jmp
mov
test
push
push
jb
rol
push
mov
jo
popl
aam
fs
mov
shll
xchg
cmc
pshufw
loop
lret
dec
mov
jp
ror
ja
test
rcrl
sub
or
lods
faddl
arpl
cmp
into
xor
ja
pop
jle
mov
in
and
add
pop
push
cmpsb
mov
sbb
fs
adc
daa
cmp
hlt
xchg
js
es
cmp
shrb
mov
mov
pusha
mov
sbb
dec
pop
xchg
rcll
mov
icebp
push
or
stos
fsubl
fdivrl
mov
adc
arpl
push
push
inc
test
xor
or
xorb
cmp
xor
jle
xchg
lods
shll
fidivrl
lcall
and
mov
nop
sbb
inc
mov
dec
inc
in
loop
sub
enter
mov
mov
shrd
sub
mov
out
and
mov
into
adc
fwait
pushf
pushf
inc
loopne
pop
ror
xchg
mov
jmp
daa
lcall
mov
pop
and
inc
xchg
xor
das
rolb
rcrb
jmp
jge
fldenv
stos
jle
sti
sbb
mov
jo
hlt
loope
add
xchg
cld
nop
jns
rorl
negb
sub
iret
mov
xchg
push
in
xor
or
cltd
cmp
mov
push
lods
lret
outsb
adc
ja
mov
mov
movsl
jp
xchg
jb
adc
push
test
ret
and
cmp
add
push
xor
cmp
sub
popa
out
mov
inc
in
push
jmp
fwait
inc
adc
add
fmuls
insb
add
jns
adc
test
sarb
filds
mov
adc
nop
les
repnz
sbb
scas
inc
arpl
out
xlat
sbb
int3
cmp
pop
leave
xor
inc
jb
rcrb
pop
jnp
cli
mov
xchg
leave
dec
cmp
cld
adc
es
stc
xor
push
ret
jb
stos
adcb
mov
dec
or
push
cmpsl
enter
les
adc
lcall
icebp
movsl
daa
cs
push
cltd
shlb
ret
add
or
daa
hlt
adc
or
popa
xor
push
or
xlat
scas
cltd
cltd
faddl
inc
nop
jecxz
fimull
pop
inc
xor
mov
int
xor
faddl
fs
mov
dec
xchg
ja
mov
xchg
mov
push
mov
mov
push
push
das
mov
jg
xor
push
fisttps
lahf
jno
pop
iret
pop
popf
data16
insb
sub
sub
sarl
jne
out
cltd
test
jp
loop
cld
cmp
xor
iret
mov
roll
xor
shrb
sub
lods
jecxz
ror
adc
push
ja
xchg
popf
xor
adc
and
leave
add
pop
fdivs
jp
add
cmp
mov
push
sub
add
cmp
and
jp
push
clc
loopne
fidivl
cmc
push
xchg
mov
xlat
jbe
xchg
fst
ret
sbb
pop
test
mov
and
jnp
xchg
daa
popf
push
sbb
movsl
push
daa
or
popa
gs
in
xor
and
xchg
sub
scas
and
xor
gs
sti
xor
push
or
gs
mov
sbb
cmp
aad
shll
mov
inc
dec
and
xchg
pop
xor
xchg
negb
sbb
fbstp
lcall
add
jecxz
test
ficomps
xor
es
mov
mov
dec
shll
dec
out
xor
inc
insl
mov
cmp
pushf
repz
xchg
fdivl
in
dec
mov
aas
popf
hlt
jae
aas
fs
int3
mov
pop
or
sbb
pop
mov
lret
test
sbb
mov
out
es
addr16
movb
xchg
repnz
in
cli
mov
outsb
sbb
pop
push
adc
push
cmpsl
icebp
lret
pop
ret
xchg
add
sbb
pop
inc
gs
mov
cltd
imul
ljmp
mov
inc
loopne
dec
or
fsubs
xchg
cmp
loop
in
cmp
pop
mov
imul
mov
and
orl
sub
insl
xchg
xchg
cmp
insb
stos
test
loopne
insl
and
xlat
lock
test
push
cld
add
mov
and
mov
push
imul
mov
in
scas
xchg
jp
clc
inc
xor
es
pop
or
scas
into
shlb
sti
insl
cmp
push
in
sarl
jb
adc
lcall
mov
pop
loop
mov
imul
daa
das
das
mov
and
mov
divl
sub
push
ret
out
jecxz
insb
push
xor
inc
xor
cmpsl
xor
imull
ljmp
adc
mov
nop
mov
xchg
cmc
ss
push
sub
xor
or
xchg
inc
stos
lret
insb
sub
and
add
xor
cld
enter
mov
popl
pop
stos
dec
and
loopne
jle
sub
sub
movsb
push
sbb
push
mov
adc
flds
or
push
in
dec
pop
aas
inc
xchg
dec
xlat
xor
add
cmp
mov
cs
mov
sarl
cmc
fwait
bound
out
pop
push
frndint
jo
fwait
std
pushf
inc
cld
pop
push
pop
or
sbb
arpl
push
stos
ror
cmp
xchg
sbb
push
gs
and
pop
fs
arpl
stos
imul
leave
bound
xlat
pop
pop
mov
clc
inc
add
pop
and
rol
jnp
scas
imul
out
in
pop
push
xchg
xchg
andl
sbb
dec
push
xchg
imul
pop
lret
test
ret
in
pop
out
mov
dec
in
in
jb
mov
lock
push
adc
add
loopne
out
push
out
out
je
aad
sub
dec
inc
or
fisubrs
xlat
mov
xchg
jns
scas
lea
sub
movsb
scas
sbb
inc
mov
xor
sub
xchg
mov
push
sahf
pop
and
and
pop
imul
and
insl
add
mov
lahf
mov
or
pop
cmp
sub
iret
jns
out
cld
add
in
push
jp
das
sub
xchg
sub
ja
movsb
adc
xchg
pop
push
sub
inc
jo
xchg
ret
shl
push
loop
jecxz
mov
mov
fisubrl
jno
push
push
pop
pop
mov
mulb
xchg
xor
xor
outsl
xor
negb
mov
add
mov
inc
daa
jae
pop
mov
stos
test
sbb
insl
jge
dec
out
notb
lds
insl
cmpsl
jbe
dec
push
add
outsl
or
repz
cltd
cmovne
xor
push
and
inc
shr
jge
cmpsl
pop
scas
jnp
xchg
fimull
add
add
cmc
scas
je
xchg
stos
cmp
and
sarb
jmp
xchg
andb
jae
cmc
aad
pop
into
fimull
mov
add
jecxz
loop
jmp
push
xchg
inc
inc
adcb
mov
insb
out
jp
push
dec
outsl
adc
xchg
xor
mov
ror
fcmovnbe
imul
addb
fidivrl
mov
mov
push
stc
aaa
cld
test
sub
sub
test
xor
jae
insl
inc
data16
mov
xchg
aaa
scas
scas
stc
shll
xor
sarb
jmp
mov
mov
fsts
push
stc
pop
jb
pop
loop
in
jbe
rorl
mov
push
push
test
cmp
lods
inc
xchg
mov
stos
adc
jle
push
test
pop
daa
push
adc
xor
xor
loop
cmp
xor
test
push
jg
and
dec
repz
mov
or
mov
ljmp
or
loopne
pop
ds
xchg
add
xlat
xorl
test
clc
hlt
arpl
lods
pop
enter
iret
or
xchg
mov
push
fcmovu
fwait
test
shll
push
addb
and
sub
lcall
cmp
scas
fdivrs
loopne
add
cmp
mov
dec
imul
mov
mov
scas
pushf
dec
push
and
xchg
aam
pop
fstl
cmp
or
decl
jle
inc
and
rcll
ficoml
iret
add
shll
xchg
dec
add
adcl
sub
outsb
pop
in
add
push
cmpsb
lock
lods
repnz
into
xchg
mov
fucomip
mov
js
sbb
mov
or
ret
pop
outsl
push
push
int
push
arpl
icebp
rcll
sbb
jae
popa
add
jo
jnp
mov
mov
in
fcompl
cmc
mov
push
and
icebp
xor
mov
std
dec
cltd
daa
leave
clc
movsl
mov
push
cmp
loope
or
and
inc
xor
pop
and
std
adc
mov
pop
imul
ret
push
insb
out
fcmovne
push
or
push
scas
ja
sub
pop
dec
je
xchg
jbe
inc
jb
fistpll
stc
mov
cmp
or
or
imul
call
inc
pop
push
mov
movsl
mov
test
push
jae
popf
int
inc
enter
iret
iret
int
or
cmp
xor
push
sub
sub
insb
push
aas
in
fidivrs
mov
clc
movsb
ljmp
pop
sbb
sbb
cmp
add
daa
in
sub
xor
aaa
es
push
mov
arpl
mov
pop
mov
pop
scas
xorb
aam
mov
jl
lock
lahf
xor
repz
push
xchg
mov
mov
mov
pop
mov
and
pop
mov
div
sbb
cld
mov
bound
dec
es
sub
and
xor
push
mov
call
faddl
in
xacquire
aas
lcall
in
fnstenv
stc
and
rcll
jae
push
out
xor
pop
xor
pop
jge
cmp
repnz
xchg
movsl
test
les
pop
test
sti
cmp
xchg
pop
add
js
and
es
das
repnz
int
xor
jmp
push
xchg
sbb
xor
int3
insl
popf
sub
orl
cwtl
out
jmp
in
shlb
jle
mov
divl
call
lods
sbbb
lods
sub
int3
inc
inc
das
sarb
jmp
loopne
jl
mov
and
sti
mov
jle
push
adc
mov
loop
loopne
fdivs
push
mov
les
or
rolb
or
mov
add
jmp
xchg
les
insl
outsb
inc
push
ret
mov
jae
cmp
mov
clc
pop
xchg
xchg
bound
jbe
test
aad
ret
pop
cmp
dec
fistpl
pop
mov
add
repz
ljmp
sahf
or
rcrb
jp
sbb
shl
mov
jl
es
mov
sub
aaa
dec
clc
push
je
mov
mov
cmpsb
mov
cmp
jecxz
test
pop
cld
loope
pop
fldt
cmp
pop
sub
bswap
adc
push
sbb
adc
and
dec
mov
xchg
loopne
pop
cmp
jp
js
or
push
sub
pop
stos
int
xchg
jmp
adc
cwtl
scas
or
dec
mov
or
pop
mov
push
lock
xchg
xchg
repz
mov
lods
jbe
stc
notl
jb
adc
cmp
push
std
add
repz
sbb
push
jno
add
mov
pop
sub
push
in
push
or
xor
mov
jnp
insb
lods
fldt
sahf
das
clc
sti
and
jge
push
clc
outsb
lcall
ds
pop
int3
push
pop
rcr
pop
jbe
adc
xchg
sbb
push
sbb
cltd
xchg
xchg
mov
jl
aad
jo
cmpb
jecxz
xchg
dec
and
in
mov
fs
int3
negl
lahf
lcall
aas
and
outsb
dec
pop
mov
xchg
xor
orb
rcll
add
pop
inc
mov
mov
out
les
test
xchg
jno
or
scas
pop
jle
inc
jae
fisubrl
mov
insl
jl
xor
xchg
mov
xor
mov
mov
lahf
rcl
push
xchg
addl
mov
dec
push
popa
jb
cmp
mov
movsl
jbe
pop
xlat
xchg
imul
or
cmpsb
popa
in
roll
inc
cmp
rcr
fisubrl
xor
add
jnp
or
popf
shll
sahf
adc
xor
pusha
jns
test
push
cmp
sbb
push
xchg
push
addr16
inc
jne
push
mov
sub
jb
in
aad
imul
shr
movsl
fmull
push
lea
inc
and
jb
xor
mov
push
jae
push
dec
add
mov
aam
xchg
js
dec
push
mov
pop
jp
call
add
cmp
push
mov
popa
jae
inc
iret
or
les
stos
push
call
in
jne
ret
xor
sahf
std
pop
inc
xchg
jae
or
sbb
pop
aaa
leave
std
xor
and
popa
add
popa
sub
jecxz
shlb
pop
insl
push
mov
fwait
push
scas
mov
aam
push
dec
gs
sbbl
fists
or
xor
xor
outsl
mov
sub
inc
xchg
sbb
cld
jo
jle
add
fisttpl
dec
imul
xorb
sub
lcall
cmp
add
xor
mov
or
mov
mov
mov
sbb
mov
jmp
movl
ret
xchg
cs
mov
bound
loop
jl
pop
jl
stos
dec
xor
add
rolb
mov
fidivl
mov
inc
push
stos
sbb
xchg
sub
std
adc
and
loopne
mov
cmp
cli
ss
mov
daa
xor
fsubl
and
push
shlb
dec
lea
lods
dec
add
lods
imul
sti
je
mov
lods
add
shlb
push
mov
mov
cmpsl
repnz
sub
add
push
cmpsb
rorb
lret
int3
xchg
pop
aad
pop
cs
cmp
or
popf
es
sbb
fistl
loopne
or
int3
aaa
fs
xchg
cli
sub
sbb
mov
or
mov
sbbb
mov
add
call
add
ljmp
cmp
call
sub
wrmsr
pushf
into
xorb
push
scas
sub
inc
adc
rolb
or
enter
mov
cmp
jle
pushf
push
xchg
push
aaa
mulb
test
ret
push
daa
mov
jmp
bound
push
ret
out
cmp
aad
cmc
xorl
xchg
jecxz
ljmp
shll
push
fildl
pop
cmp
jb
pop
cmpb
test
jae
jmp
cmp
mov
adc
aam
mov
imul
jnp
ja
sub
jne
daa
andb
das
push
cmp
cld
xor
decl
bound
mov
mov
int
mov
and
pop
bsf
inc
ljmp
and
out
loopne
or
das
pop
data16
sub
stos
leave
hlt
aas
fs
lahf
aad
push
lahf
jl
bound
cld
mov
mov
in
mov
dec
or
inc
xchg
lret
or
cmc
dec
cmp
xchg
outsb
cmp
jmp
jb
arpl
movsl
movsl
jge
hlt
cmpsl
mov
into
ja
adc
mov
xchg
dec
vminps
movsl
xor
adc
xor
aad
dec
insb
and
and
jl
add
divl
jp
daa
jecxz
and
dec
mov
jg
mov
ss
fs
cmp
add
mov
nop
negl
divb
sbb
jo
dec
sahf
xor
inc
sbb
push
cmp
mov
adc
out
lea
mov
movb
jne
sbb
ficomps
add
repnz
and
cwtl
idivb
inc
pop
xchg
sbbl
imul
add
push
cmp
push
test
in
fistpl
daa
mov
out
xlat
movsb
imull
repnz
sub
xchg
pop
xchg
out
cli
shrl
push
adc
xchg
xlat
adc
loopne
rcrb
sti
add
in
shrl
mov
das
stos
mov
mov
pushf
jae
pop
js
dec
mov
push
addb
xchg
sbb
loope
or
cmp
jae
pop
das
jae
dec
test
addl
jp
aad
pop
mov
sub
dec
push
leave
stc
cmp
je
sbb
mov
add
push
dec
aam
pop
ds
sbb
adc
arpl
xor
aaa
and
pop
mov
mov
loope
js
shlb
mov
ret
pop
jbe
test
mov
inc
mov
cmp
bound
adcb
scas
jnp
bnd
iret
push
jne
mov
jg
std
popf
cwtl
test
xchg
shlb
mov
wrmsr
jnp
mov
repz
mov
push
lea
mov
and
sbb
inc
shlb
sub
xchg
addr16
dec
sbb
aaa
test
sahf
sub
pop
mov
xchg
outsl
lods
leave
cmc
add
add
mov
fwait
scas
push
call
in
adc
xchg
ljmp
shlb
push
add
and
jno
cmpsb
aaa
addr16
lahf
sbb
je
adc
jns
jnp
jb
clc
in
pushf
jno
or
cwtl
mov
jmp
pop
sub
orl
and
xchg
imul
outsl
push
ljmp
inc
ja
jge
sub
int
add
adc
clc
movsb
xchg
push
add
sub
dec
cmpsb
sarb
dec
imul
push
shrl
test
imul
scas
xor
into
adc
jle
sbb
sbb
push
popf
out
jg
fcmovbe
sahf
cmp
xor
sbb
les
inc
dec
sbb
movsb
push
dec
adc
es
or
jl
fs
inc
lret
clc
sbb
fdivrl
inc
sub
add
add
push
inc
jno
and
ret
inc
xor
push
nop
fisttpll
dec
or
lds
je
adc
inc
ret
mov
mov
out
mov
push
pop
sti
repz
mov
gs
xor
sub
std
mov
fnstsw
mov
nop
inc
mov
fildl
lds
dec
cmp
cmc
cmp
xor
insb
test
jns
pop
sbb
push
dec
fwait
adc
inc
mov
pop
pop
test
fmul
xchg
fwait
xchg
pop
push
clc
push
imul
add
adc
dec
pop
scas
test
pop
gs
jb
int
fnstsw
jg
out
out
in
out
iret
adcb
or
sar
lds
adc
bound
xor
cs
mov
xchg
mov
or
xor
dec
cs
in
push
lcall
imul
sbb
push
movsl
mov
and
mov
inc
xor
nop
and
stos
negl
sub
dec
sub
lcall
push
pop
pop
jb
lcall
ret
sar
nop
pop
cltd
lock
arpl
repnz
lods
rorb
ret
xchg
in
jbe
mov
inc
mov
add
lods
inc
push
div
repz
pop
in
mov
daa
xor
fimull
cwtl
fwait
lods
scas
aaa
addr16
sbb
push
out
das
mov
fwait
loop
sbbb
lea
enter
hlt
int
mov
mov
frstor
inc
lret
jnp
sbb
rol
jb
in
aam
sub
nop
jns
jb
lahf
fsubrs
out
mov
xchg
mov
mov
rolb
inc
test
jecxz
pop
mov
mov
movsl
fidivrs
das
add
push
fwait
pop
sub
push
lret
stc
leave
inc
test
test
pop
into
pushf
mov
mov
gs
sar
cmp
jae
mov
cs
xchg
pop
outsl
jge
jmp
dec
adc
jo
mov
popf
xlat
jge
test
mov
push
orl
cmpl
lcall
jb
jmp
addr16
sbb
cli
lods
push
jmp
movsl
xchg
cmp
daa
jge
andl
ficomps
int
les
cmpsb
icebp
sbb
fs
or
mov
push
mov
add
div
xorl
sbb
int3
mov
or
pop
push
mov
add
pop
ljmp
push
ret
lds
push
icebp
adc
xchg
fxam
push
adc
pusha
push
sahf
jg
cmp
and
push
les
lret
cwtl
fs
inc
ret
and
jge
mov
dec
test
ret
mov
dec
adc
in
sahf
test
test
mov
mov
or
lds
int3
stos
sbb
push
loop
shll
out
ss
dec
ds
icebp
inc
pop
sahf
push
mov
jae
leave
arpl
lock
push
push
adcl
lret
push
ficoms
loope
add
sub
rol
adc
pop
arpl
or
leave
ret
cmp
pop
dec
scas
sbb
mov
jbe
xor
bound
loop
sbb
cmp
rolb
lret
stos
lds
cmp
push
add
bound
vcvttpd2dq
addr16
inc
push
sbb
push
ffree
test
es
push
test
sbb
inc
lds
adc
in
pushf
or
test
out
adc
aaa
mov
add
xor
mov
push
cmp
push
andb
fdivs
pop
test
es
ja
out
mov
sbb
mov
stc
fmul
xor
push
sti
mov
andb
jbe
int
pop
and
jg
xor
xchg
adc
xor
cmp
add
stc
andw
adc
push
dec
stos
pop
or
adc
pop
mov
mov
stc
ljmp
mov
jmp
test
xor
imul
push
xchg
lds
push
movsb
hlt
js
adcb
rcr
mov
cwtl
int3
push
test
inc
xchg
shl
andl
cs
sub
insl
push
ds
cmp
and
cmpsl
and
out
rclb
mov
fucomi
ss
jns
std
es
sub
std
js
push
sub
push
pusha
jg
cmp
jns
test
movsl
popa
and
sbb
sti
nop
mov
ss
jo
inc
xchg
pusha
js
xor
shl
xchg
popa
gs
mov
cli
out
out
pop
dec
ret
pop
mov
test
ret
shrl
aas
cld
cwtl
insl
push
shlb
jle
pop
ja
insl
xor
and
jp
fwait
cmc
jns
or
jns
neg
push
adc
add
fs
or
nop
adc
sbb
cmp
imul
mov
or
mov
or
in
xor
push
leave
cmp
xor
mov
xchg
sbb
call
push
mov
loop
sub
mov
imul
inc
jno
xor
js
sub
sub
shlb
and
lock
rorl
into
xor
xor
subl
add
inc
and
pop
adc
pop
pop
jl
add
insl
push
jmp
sbb
loop
dec
push
mov
pop
mov
mov
int
imul
les
cwtl
push
fists
pushf
mov
push
aam
insl
or
jp
idiv
fcoml
js
rcrb
mov
outsb
lcall
sub
loopne
sub
jge
fistpll
shl
lcall
push
lea
sarl
scas
add
sbb
enter
jo
subl
sbb
jbe
xor
je
sbb
sarl
pop
ljmp
data16
sub
out
pop
mov
cmpsb
sarb
pushf
push
lcall
ror
mov
stc
ja
adc
shlb
xor
fwait
icebp
addr16
xchg
mov
pop
push
icebp
or
addr16
frstor
lods
stos
sbb
cmp
subl
xor
in
sub
mov
sub
xlat
data16
and
inc
cvtps2pd
inc
xor
fistpl
setp
or
ret
xor
or
shlb
sahf
jl
iret
lea
mov
cltd
test
mov
cmp
add
add
fldcw
xchg
les
push
adc
les
pop
jge
sbb
loopne
or
push
pop
push
leave
mov
xor
into
repnz
cmp
push
adc
sub
xchg
mov
aas
fsubs
cmpl
nop
pusha
push
pusha
in
in
or
inc
lea
iret
jmp
in
mov
ret
mov
fsubl
add
mov
je
les
mov
hlt
or
inc
mov
pop
cmpsl
rorl
pop
add
or
jo
aam
fwait
pop
nop
push
cmpb
in
jns
ficompl
and
aad
je
in
or
ljmp
inc
xor
push
cs
xor
cmc
push
loop
push
stos
adc
mov
fcom
icebp
arpl
fcmovu
mov
lea
ret
xor
negb
loope
adc
ljmp
clc
adc
jl
jo
push
mov
xchg
in
pushf
sub
cmp
push
sbb
pop
xchg
popf
cmp
int
cmc
std
pop
mov
daa
leave
out
je
lcall
fcom
add
xor
ret
jnp
sbb
jl
cli
mov
jle
je
dec
cmp
mov
lds
adc
pop
jo
iret
lcall
pop
fidivs
das
dec
xchg
int
mov
in
mov
iret
lahf
ficompl
addb
sbb
repz
aaa
insb
mov
popa
ja
jae
mov
fildl
sahf
xchg
xchg
xchg
mov
jns
jbe
cli
jge
pop
js
jmp
jle
ret
jnp
cmpsl
sbb
arpl
mov
bnd
adc
imul
sub
addl
dec
stc
cmpsb
test
rorb
out
mov
fistps
inc
fchs
dec
pop
cmp
sbb
cmpsl
push
inc
ret
add
sti
inc
sbb
mov
les
ret
pop
jge
jge
pop
sbb
jp
daa
popl
jecxz
mov
sub
int3
pop
pop
mov
and
xor
jo
popf
cmpsb
pushf
push
sub
sub
rcll
xor
lret
mov
mov
jmp
xchg
jg
mov
ljmp
mov
sbb
jle
iret
sbb
jo
out
sub
arpl
mov
sbb
out
out
stos
jae
adc
sub
inc
cmp
ficompl
sarl
test
lock
movsl
lea
mov
push
outsl
loope
pushf
nop
negb
popf
dec
cld
pop
fsts
sub
mov
mov
sub
push
in
cmp
inc
mov
arpl
and
cmc
cmpsb
movsl
movsb
push
push
push
nop
movsl
rclb
pop
daa
imul
loopne
pop
sub
in
rcrb
test
lret
xchg
cmc
loopne
mov
adc
and
and
push
xor
dec
shlb
decb
add
jmp
sub
jae
jge
xor
xchg
cmpsb
sub
push
mov
enter
push
sub
pop
hlt
arpl
jg
pushf
bound
sub
bound
sbb
dec
mov
push
fstpl
mov
mov
push
add
cld
cs
xchg
jbe
fistpl
loope
imul
hlt
stc
jnp
gs
mov
aas
leavew
pop
loopne
cld
sahf
pop
stc
out
dec
fidivl
jmp
shrl
xchg
cs
add
mov
mov
incb
cmp
js
pop
adc
in
cli
dec
cli
and
or
add
push
mov
xchg
cmp
jg
sti
add
out
aam
shrb
push
mov
das
pop
cwtl
int
inc
mov
dec
push
mov
cmc
test
adc
imul
into
fnsave
std
xchg
sub
fidivl
bound
jmp
mov
add
inc
in
push
push
inc
repz
mov
std
movsb
pop
pop
dec
xchg
sbb
jl
aas
lahf
int3
mov
and
out
in
test
push
cmc
insb
and
movsl
mov
std
dec
neg
mov
shll
pause
adc
in
test
cmp
arpl
sub
xorl
pop
push
out
jno
and
fisttps
and
and
sub
mov
sarb
mov
inc
andl
xorb
mov
out
sbb
in
arpl
fs
mov
cltd
mov
add
mov
sub
push
xchg
pop
leave
adc
and
and
out
ljmp
jmp
xchg
in
cld
fwait
dec
sub
lods
jmp
mov
sti
nop
cs
cmpsb
mov
inc
stos
mov
inc
sahf
cli
stos
movsl
aas
adc
repnz
pop
inc
mov
lcall
jnp
xor
loope
call
mov
jg
and
push
adc
or
incl
fdivs
adc
sub
ja
sub
fstps
cmp
dec
and
dec
or
pop
insl
push
bound
inc
inc
jp
push
mov
js
iret
rorb
iret
mov
dec
and
mov
and
jl
sub
mov
ror
pop
das
xchg
pop
mov
ds
das
fwait
adc
xor
xor
sbb
adc
jno
jno
ljmp
and
popa
rorl
xchg
mov
jnp
and
inc
movsb
outsl
mov
dec
daa
rclb
jecxz
mov
mov
cmc
lcall
test
in
jnp
mov
dec
add
adc
ja
mov
rorb
shrb
outsl
repz
scas
in
xchg
andb
fwait
jne
out
icebp
pusha
clc
jle
adc
clc
cmpsb
xchg
scas
push
push
int
lcall
jge
xor
pop
lds
ret
ret
and
mov
xchg
add
xchg
lods
popa
pop
inc
pop
shrl
fsubp
sarl
scas
pop
scas
notb
xor
inc
mov
lahf
cmp
loop
lea
cli
inc
sarl
push
sbb
nop
jmp
outsl
push
jo
and
xchg
push
push
test
enter
pop
shlb
lea
mov
sar
insb
scas
mov
data16
shlb
ljmp
push
dec
rcll
pop
loope
xchg
mov
lahf
cmp
mov
in
insb
movsb
rorl
push
cmpsb
jge
lcall
fdivp
rcr
add
addb
adc
daa
dec
ljmp
mov
xchg
movsb
ds
xchg
je,pt
sub
pop
dec
mov
add
mov
add
pop
pop
insl
and
lds
mov
jp
mov
pop
mov
cmp
iret
rorb
fstpl
dec
call
idivb
icebp
idivb
cmc
dec
or
pop
mov
aaa
inc
jbe
gs
cli
test
or
mov
popf
dec
inc
xor
pop
gs
testl
jp
arpl
push
sbb
stos
mov
rorb
ret
aas
pop
jbe
arpl
cmp
leave
mov
mov
mov
jne
cmp
fbld
clc
xchg
fptan
push
mov
les
hlt
test
xor
sbb
inc
cmp
jo
mov
mov
into
add
mov
jae
inc
jbe
cmp
and
xor
and
cmp
pop
or
inc
xchg
shl
xchg
negb
aam
cltd
data16
sub
orl
or
pop
push
inc
mov
add
roll
pop
test
std
les
inc
loope
xchg
testb
cmp
pop
sti
xlat
shl
mov
icebp
pop
inc
mov
repnz
xorl
push
test
sub
push
mov
shlb
sub
xchg
pusha
lret
xacquire
mov
pcmpgtd
mov
ljmp
das
sub
loope
mov
mov
loopne
test
out
adc
push
jle
xchg
mov
lahf
xor
fdivrl
lea
sbb
inc
jg
mov
pop
scas
pop
mov
leave
mov
pop
xchg
mov
cmpb
and
and
and
repz
cmp
test
ret
ja
mov
pop
push
mov
add
ss
sbbb
add
into
loop
arpl
push
cmc
je
adc
mov
push
mov
cs
outsb
out
sbb
int3
xchg
push
xchg
rorb
je
cmc
mov
lret
sub
mov
adc
mov
rcr
xchg
into
jae,pt
dec
ss
dec
imul
lahf
push
dec
popa
leave
pop
test
mov
sub
cmp
ret
sahf
push
pop
lret
cmp
jg
aas
rorl
jnp
sub
cs
xchg
mov
decl
cmpsb
inc
fsubr
adc
das
xchg
mov
inc
or
dec
ds
fildll
ss
sub
jne
or
out
mov
push
imul
into
and
ret
lahf
insb
test
data16
pop
xchg
notb
pop
jle
jne
cmc
addr16
sarl
push
imul
out
pop
cs
stos
jae
lret
test
jl
dec
mov
daa
fwait
pop
sub
adc
aaa
or
mov
or
out
mov
xchg
pop
popa
outsb
lcall
test
test
mov
add
outsb
sbb
aas
mov
lahf
jmp
add
iret
xlat
push
test
push
sbbb
xor
push
js
and
sbb
cltd
sarb
test
and
or
ss
sbb
cmp
ds
cmp
mov
lock
lock
and
fdivr
out
jp
jl
jl
lret
or
mov
rcrl
vshufps
add
and
leave
xchg
pop
lcall
pop
ja
arpl
sub
nop
lods
fsts
cs
leave
movsl
lock
adc
enter
out
push
mov
out
cli
scas
fs
xor
sbb
mov
and
shlb
lcall
jae
pop
incb
movsb
lahf
and
sbb
imul
sub
out
out
cmc
dec
add
mov
sub
jno
sti
fisubs
xlat
js
shrb
stos
push
mov
ja
sub
xchg
dec
sub
pop
mov
pushf
out
imul
push
xchg
dec
arpl
insb
iret
mov
lret
es
cmp
test
leave
inc
repz
jl
loopne
stos
xchg
das
sahf
sub
out
adc
mov
xor
mov
push
jae
out
cmpsl
add
add
rclb
xchg
mov
into
push
push
dec
lret
push
lahf
inc
cmp
movsl
push
dec
jno
loop
sbb
std
insb
jnp
int
ljmp
insb
test
jmp
lock
cmpl
mov
add
inc
xor
add
scas
push
inc
xchg
sub
ja
pop
and
mov
andb
lret
gs
mulb
adc
lods
shl
mov
cwtl
jge
xor
in
std
lcall
in
fs
mov
add
push
pop
and
cmpsb
and
sbb
jne
ret
loope
bound
cmp
mov
cmp
outsl
mov
setle
sbb
mov
sbb
sub
mov
push
arpl
fistpl
dec
test
fwait
sub
scas
jmp
int3
lret
sbb
cltd
sub
jo
dec
lea
imul
jle
push
and
lock
and
pop
cmpl
sahf
pop
mov
xor
and
mov
mov
jbe
sub
pop
add
sub
rolb
ret
or
and
int
sbb
pop
movsb
pop
jb
jge
pop
xor
mov
ds
dec
inc
xlat
and
adc
push
pop
pusha
movsl
aam
shlb
jno
sbb
mov
mov
and
cld
push
mov
lret
sbb
insb
mov
cld
aam
sub
je
inc
clc
xchg
ret
sbb
push
loopne
xor
xor
dec
sbb
sbb
into
in
int
dec
test
cmp
mov
cmp
test
mov
pop
add
sbb
pushf
inc
jge
jp
enter
cmp
imul
add
sar
sarl
out
ja
mov
adc
jecxz
push
movb
lcall
push
mov
xchg
jmp
cmp
mov
cmp
push
mov
cltd
std
sbb
dec
fidivrl
cmp
cmp
add
xor
test
mov
push
cmpsb
xchg
mov
insb
xor
pushf
jge
xlat
and
mov
test
inc
and
ret
sbb
shll
hlt
push
or
orb
repz
or
ds
mov
inc
out
jnp
xor
jnp
imul
pop
popf
xchg
xor
imulb
loopne
outsl
sub
scas
shll
movsl
or
pop
movsb
dec
mov
xor
fdivs
negl
mov
xor
push
leave
jge
xchg
div
and
arpl
mov
push
cld
enter
mov
push
imul
cmp
les
pavgw
call
pop
pop
js
mov
inc
xor
test
movsl
nop
xor
imul
clc
push
adc
imul
jae
adc
mov
push
sbb
or
mov
push
cmp
sbb
mov
inc
icebp
stos
inc
xchg
dec
push
lret
shr
pop
push
push
fistpl
scas
loop
test
out
test
test
fidivrl
pop
movsb
testl
dec
adc
jmp
rorl
shlb
adc
jo
pushf
rorl
pushf
ss
mov
das
dec
jg
sub
arpl
mov
mov
inc
out
cmp
inc
mov
pop
aad
shlb
push
shrb
int
push
pusha
adc
idivl
inc
popa
add
lcall
lret
mov
xorl
mov
push
xchg
into
xchg
scas
repz
push
mov
shr
mov
inc
movsl
test
mov
stos
or
addr16
mov
sbb
in
push
mov
fsubrl
xchg
lcall
cli
sahf
mov
pop
pop
out
jp
cs
mov
lret
dec
mov
jmp
shl
in
and
add
icebp
and
mov
sahf
adc
mov
lret
repnz
into
jb
ret
imul
test
rcrb
jmp
mov
hlt
pop
std
stc
sbb
mov
mov
mov
sbb
bound
popf
push
loope
fs
daa
xor
popa
xchg
sbb
rclb
or
sub
rcl
xor
enter
fbld
popf
cmpb
push
pop
fcompl
int
xor
push
mov
mov
adc
adc
mov
jne
mov
xchg
sti
xchg
pusha
xor
pop
push
arpl
mov
iret
push
subb
iret
clc
test
icebp
lret
add
mov
sti
repnz
cwtl
and
dec
ljmp
dec
cli
cmp
fnstcw
mov
test
cmp
sbb
call
leave
xchg
stos
xor
jo
and
lret
sbb
insb
xor
outsb
jmp
and
fmul
mov
in
stc
data16
ja
iret
stc
ret
fwait
cld
cmp
xchg
adc
movsb
xchg
insl
and
jp
or
mov
jge
das
sti
ret
addr16
ja
pop
pop
movsb
mov
scas
mov
out
mov
loop
loop
jmp
pop
les
cmc
stc
jbe
xchg
fdivr
inc
scas
aas
pop
out
and
mov
leave
out
jno
aaa
jns
mov
loope
mov
leave
mov
and
xchg
push
ds
das
in
and
pop
push
jge
jmp
pop
dec
pop
test
pop
sub
subb
dec
repz
cmp
xchg
lds
push
xor
out
out
icebp
clc
scas
jl
inc
nop
fldl
cmpsl
jbe
sbb
cmpsl
cli
xor
sarl
loop
nop
xor
shrb
pop
adc
push
pminsw
jmp
jmp
pusha
dec
mov
shlb
xchg
gs
arpl
data16
xor
lods
jp
mov
or
loope
pop
mov
aam
jp
xchg
pop
mov
or
adc
jmp
test
add
pusha
bound
sub
dec
push
sbb
les
dec
test
int
pop
push
inc
sbb
cmpsb
jmp
xor
mov
pop
in
scas
rcpps
mov
dec
push
dec
ret
aas
adc
mov
cmpl
add
aam
push
sbbl
in
adc
sti
divb
inc
out
iret
daa
dec
mov
cmc
cwtl
and
test
dec
jmp
mov
out
es
cli
push
pop
push
push
insl
and
fisubrl
test
jno
test
and
xor
jg
subb
mov
in
push
icebp
xchg
push
xchg
adc
movsl
mov
filds
adc
insl
dec
popa
mov
or
xor
mov
pop
add
jecxz
iret
roll
adc
jecxz
pop
dec
push
push
sbbb
or
and
popf
jne
add
push
mov
xor
js
fistpll
or
and
and
add
sub
xchg
pop
sbb
mov
cs
mov
cmp
outsl
sbb
in
pop
ds
in
in
inc
mov
lea
jae
mov
jno
jne
mov
lcall
cmpsl
inc
add
inc
mov
mov
mov
and
xor
jle
lods
or
into
test
dec
mov
inc
push
sbb
ds
enter
cmp
orl
not
data16
mov
xchg
xor
insb
icebp
outsl
outsb
jns
insl
pop
inc
loopne
adc
or
xchg
mov
aaa
dec
push
dec
inc
cmp
in
or
mov
add
push
loopne
push
xchg
adc
cmp
dec
push
cmc
ficomps
enter
mov
mov
stc
push
dec
push
popf
mov
repz
lcall
stos
push
push
insb
add
inc
or
lahf
xchg
stos
cmp
push
inc
ljmp
testb
dec
cmc
inc
outsl
xor
xchg
loope
mov
xor
in
sahf
subl
mov
scas
scas
push
fsubs
cmp
les
jl
inc
aam
xchg
jb
jnp
mov
sub
and
mov
mov
pop
mov
mov
mov
ror
jae
or
imull
xor
insl
cld
sub
pop
add
and
cmc
hlt
adc
notb
ret
cmp
sbb
clc
xchg
ss
pop
add
cmc
fs
fcmovnbe
pusha
mov
imul
inc
enter
cmp
jo
push
cltd
cmp
inc
and
adc
and
lods
test
dec
int3
and
mov
lcall
leave
je
dec
lods
mov
popf
sbb
es
or
pop
mov
repz
loope
aaa
cli
mov
pop
cmpsl
test
jb
or
mov
jno
cs
int3
in
int
out
lds
add
scas
inc
sub
adc
js
inc
lods
scas
push
or
jmp
sub
mov
in
jg
fistpll
cltd
adc
or
jnp
fistpl
push
push
pusha
pop
mov
cmpsl
xor
cwtl
cmp
mov
fdivp
in
sbb
mov
xor
add
aad
jae
mov
hlt
jnp
add
cmpsl
push
rcl
and
jp
xchg
push
cmc
push
sbb
sub
arpl
sub
fwait
xlat
sub
xlat
orl
and
mov
sbb
mov
and
mov
andl
lea
movzbl
and
mov
and
mov
mov
sub
orl
add
mov
mov
xor
orl
add
movl
jne
jmp
movl
cmpl
je
cmpl
jl
jmp
pushl
push
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
negl
sub
xor
mov
mov
mov
orl
xor
xor
adcl
sub
andl
sub
xor
mov
movl
mov
movl
mov
jmp
movl
cmpl
je
cmpl
jb
jmp
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
mov
adcl
xor
subl
xor
sub
sub
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
movzwl
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
call
jmp
mov
sbb
mov
add
adcl
imul
mov
adc
mov
mov
xor
mov
adcl
add
or
mov
mov
adc
mov
add
adcl
xor
adcl
mov
adcl
mov
mov
andl
add
addl
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
jmp
ficomps
xchg
mov
pop
sbb
jl
jmp
jl
das
jo
cs
sub
mov
mov
push
and
push
jnp
ja
adc
fildl
push
xor
pop
sbb
lods
test
jb
xlat
fwait
andl
shlb
mulb
cmpl
mov
in
imulb
fwait
jne
aam
inc
outsb
push
inc
loopne
imul
dec
and
jo
jne
out
jg
in
pop
js
jmp
xchg
in
repz
test
cmc
dec
rcll
ffreep
add
rcrl
inc
jle
or
push
jecxz
push
jb
cmc
lods
mov
stc
pusha
iret
mov
inc
movsb
cltd
jmp
in
sbb
or
mov
loopne
scas
mov
cmpsb
or
add
xchg
fwait
mov
xchg
test
fstenv
aam
pop
popf
jp
sarb
shl
mov
jbe
mov
and
jb
mov
xchg
dec
mov
xlat
jle
ss
mov
ret
mov
jb
mov
clc
lods
add
xor
mov
xor
in
adc
mov
xor
sahf
push
xchg
iret
cmp
dec
clc
notb
add
or
cmp
xor
pop
mov
and
adc
arpl
jmp
cmp
and
sbb
repz
movsb
dec
jecxz
adc
cmc
inc
aam
pop
fisubs
xchg
push
out
aas
xchg
bound
bndcn
jmp
lret
stos
adc
push
xor
xchg
pop
pop
inc
pusha
sub
push
sbb
add
cmp
push
movsl
lret
mov
sub
fsts
and
out
inc
jge
aas
mov
cmpsb
mov
lcall
mov
xor
popf
enter
cltd
mov
cwtl
inc
push
dec
ja
fwait
popf
mov
movsl
pop
je
in
xchg
je
or
or
lods
pop
jmp
enter
or
dec
test
cwtl
sarl
xor
xlat
mov
sbb
mov
jnp
out
aam
aaa
aaa
or
pop
sbb
cmp
int
lcall
in
sbbb
ret
push
dec
test
mov
bound
push
and
stos
xor
lcall
push
jge
mov
or
aas
mov
hlt
pop
aaa
aam
repnz
cmp
shrb
mov
xchg
sub
jne
mov
xchg
lock
stc
jnp
test
cmpsb
mov
pop
inc
jns
add
mov
leave
adc
add
mov
inc
and
xor
adc
jb
mov
xor
pop
sub
les
test
imul
or
push
jecxz
xchg
cmp
inc
push
stos
notb
sarb
and
decb
ret
or
dec
jmp
push
sub
jae
mov
dec
add
push
and
shr
hlt
rorb
mov
sub
pop
dec
mov
xor
jns
int
outsl
test
aas
push
loop
jne
cmp
fsubl
leave
mov
xchg
ds
mov
cmpsl
mov
jne
fsubrl
std
push
leave
ljmp
and
mov
sub
inc
jb
cli
push
sahf
inc
cld
iret
cmp
rcrb
lods
negb
xor
dec
std
orb
bound
cmp
loop
mov
adc
jge
shrb
cld
test
enter
les
popa
xchg
mov
cli
jb
dec
iret
mov
and
push
in
les
or
iret
jae
shl
mov
inc
lock
mov
mov
addl
pusha
insb
lods
pop
cmpsl
mov
ss
jecxz
cmp
jbe
or
cmp
jo
call
push
pop
sbb
popa
or
mov
mov
or
lods
inc
add
mov
mov
jl
xchg
push
mov
jnp
es
pop
and
orb
adc
rcll
cmp
xchg
lcall
pop
pop
aaa
in
imul
xchg
sub
mov
std
hlt
aad
jp
xor
push
pusha
dec
or
insl
adc
xor
xchg
hlt
mov
sub
adc
inc
outsb
mov
mov
das
stc
leave
pop
lods
gs
addb
sbb
mov
mov
adc
idivb
mov
push
test
pop
dec
les
push
or
cltd
imul
loop
enter
add
and
add
dec
pop
xor
ret
dec
sub
sub
sarl
pop
and
add
dec
and
inc
lds
sub
in
pop
test
dec
pop
cld
xchg
push
cmp
jnp
enter
xchg
mov
mov
mov
mov
xchg
cmp
insl
movsb
cmp
ljmpw
int
pop
movsl
xchg
fwait
jg
int3
test
xlat
aas
testl
xor
xor
sub
adc
add
outsb
dec
add
jns
outsb
pop
sbb
andl
fcompl
loope
aam
mov
cmp
xchg
mov
pop
push
mov
xchg
push
adc
dec
jecxz
mov
test
repz
jb
pop
or
sahf
dec
loope
add
push
cli
xlat
fiadds
std
loop
cmovae
shrb
outsb
xor
out
cmp
in
and
gs
mov
sti
xlat
and
dec
dec
push
dec
sub
roll
insb
mov
lds
sahf
sti
or
cmc
and
add
fs
mov
jns
pop
popf
or
jl
add
mov
jns
cs
push
movsl
repnz
rcll
test
mov
mov
int
and
lahf
xor
lret
push
sbb
jmp
lahf
dec
xchg
int3
rclb
cli
jle
push
out
jl
or
push
fwait
push
into
jmp
mov
dec
mov
mov
adc
jbe
sbb
or
jns
mov
add
xor
mov
jg
pop
aam
inc
jl
sub
std
inc
test
xor
xor
inc
cwtl
clc
rclb
or
jae
aas
xchg
cmp
xlat
loopne
xorb
xchg
and
shl
ja
inc
mov
repz
or
out
lock
mov
jo
dec
push
das
cmp
popl
int
jbe
mov
push
cmp
mov
lret
or
imul
jae
or
loope
enter
adc
pop
inc
dec
mov
das
lcall
aaa
dec
jl
jg
icebp
push
fstp
repnz
xor
test
fadds
fistpl
imul
dec
fimull
sub
repnz
cmp
jb
loopne
and
cwtl
mov
and
push
test
push
out
in
jle
jb
faddl
repz
js
push
push
out
mov
jno
add
lods
in
bound
sbbb
repnz
mov
jno
in
xor
loopne
aas
push
test
xchg
mov
pop
xchg
and
daa
inc
mov
xor
jns
mov
sub
sti
add
adc
sarb
add
pop
lahf
sti
jecxz
or
mov
and
in
pop
sub
loopne
sub
sub
jmp
sbb
mov
inc
adc
call
lcall
test
mov
ljmp
movsl
stos
xchg
sub
decb
sub
cmpsb
xchg
out
addr16
xchg
adc
mov
push
or
xchg
ja
inc
rcll
mov
ret
pop
rcl
xor
pop
call
push
scas
aaa
xor
sub
fwait
pop
xorl
adc
mov
daa
mov
mov
imul
imul
sti
dec
fisubrs
fidivrs
sbb
in
mov
dec
cmp
jbe
das
bnd
lret
iret
cltd
andb
mov
jmp
shr
in
aas
adc
arpl
pop
fcompl
xor
xor
xor
loop
into
adc
nop
xchg
les
stos
add
dec
inc
daa
mov
add
xchg
jge
jg
sbb
les
scas
dec
cmp
xchg
sbb
add
fstp
out
cmp
shlb
cs
js
clc
cwtl
cmp
pop
pop
sub
mov
ds
mov
sub
push
loop
sbb
out
xor
or
mov
mov
divb
jmp
jl
xchg
insb
add
std
inc
add
in
cmpl
mov
sub
push
push
int
adc
and
imul
or
dec
xor
dec
push
sbb
xchg
daa
test
movsl
xchg
pop
ja
hlt
sti
push
pop
and
rcl
adc
jl
call
movsb
mov
jns
out
lods
dec
sarb
xor
imul
adc
fucomip
icebp
cmpl
stc
faddl
mov
fcompl
iret
out
dec
popf
pop
xor
loope
into
rol
dec
stos
sbb
movsb
leave
orl
les
dec
dec
repz
xchg
rorb
push
mov
push
sbb
aas
je
and
add
xor
hlt
jbe
lret
jle
adc
xor
int
sbb
xor
push
cmp
fistps
int
icebp
nop
sub
or
xor
call
cltd
mov
add
sahf
mov
stc
icebp
notb
mov
movsb
dec
cwtl
pop
mov
dec
or
movl
mov
jns
int
out
andb
dec
sahf
leave
ret
mov
mov
add
jns
xchg
adc
pop
add
push
xor
stos
arpl
xor
loop
add
aaa
es
lret
ja
gs
mov
sbb
ss
and
xchg
xor
mov
jl
int3
dec
shr
add
imul
push
aad
xchg
add
loopne
mov
fsubp
push
test
pop
nop
jns
dec
xor
and
hlt
xor
popa
stc
rol
shlb
xchg
pop
sbb
mov
dec
wrmsr
sbb
insb
xlat
cmp
test
addb
call
xor
sarb
push
into
push
cmp
repz
or
fincstp
xchg
add
xor
loope
dec
jl
ret
fsubrl
cmp
inc
mov
int
sub
jb
ret
clc
fcom
push
daa
push
movsl
fmull
bound
loopne
test
cmp
daa
inc
lods
sbb
or
jg
scas
jle
test
stc
xor
arpl
je
mov
subb
popf
into
out
dec
dec
dec
and
mov
ret
cld
out
idivb
mov
mov
sub
cmc
ret
les
popa
test
sahf
mov
pop
out
mov
out
cwtl
pop
sub
xchg
aad
cmp
mov
pop
jp
shll
data16
jnp
jae
push
and
inc
or
pop
xchg
push
ljmp
add
jge
jae
rorb
lcall
std
or
xchg
in
aaa
xchg
cmp
xchg
ja
cmc
mov
sarl
nop
dec
fcom
in
mov
test
loop
xor
pop
cmpl
mov
movsl
add
filds
pop
out
xchg
inc
or
inc
aam
iret
mov
imul
and
jle
xor
lods
sahf
lods
call
mov
xchg
aad
lods
xchg
mov
lret
insb
pop
lods
sahf
cmp
adc
out
out
xor
pop
scas
loop
sub
mov
out
push
es
mov
cmpl
bound
add
lock
push
jns
inc
shll
pop
shll
ss
roll
movsl
stc
cmp
out
pop
jo
push
mov
mov
mov
repz
xchg
fldt
clc
insb
jl
leave
adc
pop
insl
or
out
loop
es
cmp
test
mov
or
sbb
pop
add
mov
aaa
adc
out
in
sbb
jle
add
jge
xchg
pushf
in
pusha
fcmove
dec
jmp
adc
fisubrs
into
sbb
fdivr
in
add
xchg
lret
sbbl
and
xlat
or
xchg
stos
cmpsl
lahf
or
lea
mov
ret
xor
xchg
push
mov
cmc
push
rcll
shll
mov
xor
sarb
mov
shlb
dec
rclb
adc
lcall
lods
xor
dec
xchg
sbb
popa
insl
mov
pop
xchg
xchg
scas
sbb
xchg
lods
cmp
out
jno
lock
ljmp
int
fildll
pop
rorl
shr
cmpsb
pop
xchg
xchg
in
pushf
data16
cld
jmp
xchg
inc
pop
sbb
daa
aas
sub
and
mov
jb
in
outsl
cs
dec
or
push
mov
push
xor
pop
add
jno
add
jno
imul
mov
cmp
out
std
imul
push
or
inc
adc
xchg
ret
dec
je
pop
insl
ss
xor
in
fldl
test
out
repnz
dec
es
xor
xchg
in
pop
sar
push
aam
pushf
sbbl
outsl
fwait
push
xchg
xor
in
or
or
movsl
mov
pop
ret
xor
aad
cli
inc
dec
sub
aam
mov
leave
shr
aaa
fisttpll
push
lahf
arpl
shll
mov
incl
rcrb
pop
jns
in
cltd
push
cmc
mov
xlat
cmp
imul
jp
push
les
push
imull
adc
push
imul
lahf
mov
es
in
cmc
in
cld
mov
push
mov
xor
mov
pushf
mov
fildl
nop
je
adc
aaa
mov
stc
dec
add
pop
lods
sbb
es
lds
jo
mov
dec
mov
mov
push
xor
cli
push
sbb
jno
shrb
imul
stos
int3
ffreep
les
fwait
push
dec
pop
fstpl
aam
push
and
add
jg
cmp
cmp
arpl
mov
jl
add
xlat
ljmp
daa
js
pop
xor
jge
mov
pop
sbb
mov
add
out
in
push
adc
sub
pop
add
xor
sti
cld
xchg
xchg
jle
rol
jle
mov
cmp
adc
scas
inc
mov
aad
les
popa
and
mov
repnz
pop
mov
pop
dec
and
ljmp
fs
mov
out
cs
or
lods
mov
xor
aas
jge
add
adc
push
iret
mov
pop
notl
leave
fisubrl
adc
call
xor
out
mov
ret
sahf
pop
cmpsb
fidivrl
jbe
xchg
fs
adc
jmp
push
fwait
cmp
in
mov
fists
mov
mov
fs
mov
mov
mov
mov
and
int3
add
rcll
incb
setg
xlat
mov
imul
mov
xor
sub
inc
sub
pop
mov
lods
in
adc
jg
xorl
divl
jnp
lds
inc
mov
xor
sbb
lret
hlt
out
xchg
mov
xchg
push
sbb
dec
pop
iret
push
push
test
push
imul
pusha
int
sub
mov
cmp
popa
shlb
clc
and
pushf
sbb
in
lret
out
and
in
sbb
jecxz
loope
leave
push
pushf
out
pop
cmp
adc
jne
pop
fisubs
dec
jb
iret
add
adc
jb
mov
push
ljmp
rcr
andl
sub
and
dec
aam
test
jmp
push
mov
gs
fstl
movsl
stos
pop
and
xchg
and
mov
add
jl
add
jbe
fwait
mov
roll
aad
ds
out
lcall
adc
xchg
xchg
lock
lahf
and
mov
jbe
push
loop
ljmp
int3
mov
daa
cmc
sub
cmp
sbb
lods
sbb
mov
push
mov
pop
mov
or
lock
rol
or
repnz
outsl
shl
das
cld
popa
push
add
scas
outsb
jmp
aaa
xchg
jecxz
xchg
mov
sbbb
cmpsl
xor
call
push
ja
out
aad
call
adc
leavew
mov
push
mov
in
ret
scas
leave
imul
xchg
pusha
mov
mov
test
lcall
lea
hlt
lods
loop
mov
hlt
pop
pop
mov
fdiv
or
fisttpl
pop
xchg
cli
daa
clc
cwtl
call
fnstcw
and
jne
dec
jb
mov
mov
jmp
ffree
jo
mov
pop
in
mov
outsb
std
bound
out
push
inc
aad
add
lods
fisttps
cli
cltd
and
inc
sahf
jle
adc
addb
je
cmp
lahf
xchg
pushf
negl
mov
xchg
jl
push
pop
sbb
pop
loop
fmuls
popa
ds
shll
popf
cs
push
or
inc
pop
fs
adc
cmp
push
imull
push
std
dec
mov
xchg
dec
js
push
out
mov
dec
xor
mov
sub
test
scas
lcall
arpl
jp
rorl
sbb
adc
sub
mull
xor
push
scas
out
leave
xchg
mov
nop
xor
bound
and
les
mov
push
push
stos
ss
jecxz
out
push
push
push
dec
push
scas
repz
push
mov
sub
lret
sub
ds
jg
jbe
sbb
xchg
addb
in
incl
jns
inc
mov
aas
push
cltd
aaa
incb
push
xchg
out
mov
addl
pushf
call
mov
gs
adc
pop
lods
pop
lds
sarb
jg
and
adc
mov
mov
jns
iret
push
out
loopne
into
or
dec
and
inc
adc
loopne
iret
addr16
xor
test
pusha
cmp
pop
pop
inc
add
insb
ljmp
testl
stos
out
mov
cltd
jl
daa
arpl
movsb
inc
insb
inc
lret
sub
adc
leave
rcr
in
push
cmpsl
mov
adc
ret
mov
out
or
outsl
adc
in
fs
and
sbb
iret
int
es
jne
and
jne
sub
mov
test
mov
sbb
pop
mov
inc
pushf
mov
jge
push
inc
mov
cs
clc
mov
jnp
adc
scas
aas
sbb
sub
outsl
les
int3
stc
cmp
xchg
ret
inc
pop
subb
in
dec
data16
leave
lret
sub
pop
std
dec
pop
pop
mov
xlat
add
out
movsl
insl
popf
repz
dec
push
ja
or
and
add
and
adc
cmp
sti
loop
ret
les
ss
inc
sub
jmp
test
xor
cs
movsb
fcom
imul
sub
scas
xor
jp
add
cmc
and
and
mov
xor
out
and
sbb
cmpsb
xchg
inc
aaa
mov
mov
xchg
jmp
mov
paddw
sub
add
lahf
xchg
adc
ss
sub
or
sub
jmp
jl
or
xor
fnstenv
push
je
je
shrl
js
cmp
por
jmp
jecxz
into
mov
enter
pop
xor
js
jb
jne
jnp
push
das
sub
fs
shll
jne
shl
sbb
xor
push
inc
jl
jp
xor
fmull
rorl
mov
sbb
mov
or
outsl
in
imull
sbb
test
fwait
mov
popf
test
or
sub
ja
add
fbstp
hlt
mov
or
jno
mov
pop
push
ss
data16
jl
out
xchg
stc
cwtl
enter
inc
ljmp
faddl
cli
inc
negl
lret
xchg
fsub
sbb
addb
adc
jbe
xor
xor
add
call
lds
push
and
xchg
sbb
jnp
je
inc
outsb
xor
mov
lcall
scas
jecxz
jmp
cltd
xchg
js
jle
dec
push
mov
inc
jns
adc
dec
lret
imul
xor
stos
lock
divl
sub
jno
add
ja
sub
icebp
imul
cmp
sbb
push
xchg
mov
mov
hlt
daa
shl
sub
mov
mov
mov
and
mov
inc
test
mov
mov
xor
mov
inc
mov
push
sub
jb
or
add
push
and
in
adc
xchg
aad
int
push
add
inc
sbbb
loopne
and
lods
jl
out
mov
daa
add
pop
ss
xor
pop
or
mov
jecxz
mov
pop
or
aad
mov
push
add
or
cmp
cmp
stos
loope
pop
pop
shlb
mov
or
inc
jb
test
movhps
mov
dec
lahf
add
rcl
mov
inc
xor
mov
inc
out
mov
pop
dec
cld
inc
mov
out
pop
mov
fdivrs
pop
dec
sahf
insb
adc
loopne
push
and
or
jno
addl
mov
std
das
cmp
je
add
and
ss
add
sub
or
out
lcall
das
orl
pop
mov
fs
inc
jle
sbb
add
mov
pop
sub
outsl
pop
cli
scas
mov
imul
cmc
xor
mov
adc
loope
cmp
sbb
jae
pop
xchg
stos
movsb
push
push
mov
aas
push
stos
insl
ret
out
lods
xchg
addr16
cmpsb
repz
jmp
mov
loope
xor
imul
fs
mov
popa
xlat
fldenv
mov
xor
xchg
and
int
jl
xchg
aad
mov
nop
and
repz
or
mov
je
ret
mov
mov
es
js
push
xchg
add
mov
test
enter
fisubrs
add
insl
sub
cmc
cmpsl
add
sub
mov
mov
stos
call
dec
adcb
or
popf
loop
fwait
xchg
cmp
ljmp
push
dec
cmpsb
cmpsl
jne
out
pop
inc
dec
pusha
sub
mov
sbb
sub
or
sti
xchg
xor
mov
mov
ret
mov
add
je
movsl
test
inc
pop
std
sbb
fimull
xacquire
push
push
sbb
jge
popf
sbb
jnp
and
das
popf
jnp
out
push
add
push
ret
jecxz
pop
xor
add
sub
or
leave
xor
dec
stos
js
dec
aad
xchg
and
iret
add
adc
and
jo
shrb
pop
pop
jo
xchg
mov
aam
lock
fwait
jno
movsl
mov
lds
cltd
shll
loope
pop
lcall
in
add
inc
out
or
cwtl
push
sbb
hlt
and
fcoml
scas
xchg
stos
out
test
jp
lcall
movsb
fisubl
test
xchg
mov
arpl
shl
mov
nop
mov
pop
inc
fwait
into
fidivrl
or
dec
roll
mov
in
cmpl
test
xor
addr16
data16
jp
fs
fsts
aad
cmpsl
push
dec
sbb
test
or
push
pop
aas
mov
pop
in
push
test
and
sbb
push
in
lods
aam
fbstp
xor
xchg
movsl
sub
cli
pop
sbb
imul
shlb
push
mov
add
js
sub
jnp
repnz
or
addl
jecxz
xchg
insb
test
out
inc
test
mov
mov
nop
adc
jo
xchg
popf
out
xchg
add
mov
scas
nop
cmc
ljmp
dec
add
lcall
popa
dec
cmp
mov
mov
shlb
cmpsl
push
sub
mov
cs
pop
mov
xchg
pushf
popf
imul
inc
sub
jmp
or
stos
test
add
or
cmc
lret
push
arpl
and
jbe
addr16
pop
mov
inc
and
inc
jmp
nop
push
xchg
ds
xlat
mov
addr16
test
xchg
mov
inc
cwtl
inc
or
sarb
inc
aad
mov
push
mov
negb
neg
ss
int
cmp
out
out
adc
sbb
testl
subl
ucomiss
lods
shrb
pop
sbb
jl
push
test
fcmovne
push
pushf
arpl
mov
in
movb
dec
cmp
enter
aad
daa
cmp
jmp
pop
loope
leave
cmc
xor
fadds
insb
ds
mov
insb
es
push
dec
pusha
inc
outsb
xchg
gs
adc
push
jecxz
mov
or
dec
fidivl
push
sahf
loope
sbb
popa
jne
jle
sahf
xchg
clc
ss
push
cmpb
push
movsl
pusha
cmpsl
xor
in
jmp
xchg
jl
cmpsb
subl
push
mov
rorb
cmpsb
loop
add
stos
movsl
pop
int3
push
pop
scas
add
es
fsub
fnstenv
sahf
xlat
cwtl
in
push
xor
push
jecxz
cld
mov
mov
out
lods
lds
adc
and
push
call
lret
aas
sub
pop
mov
inc
add
push
xchg
out
push
jne
pop
push
cld
pop
sbb
and
xchg
dec
out
mov
cltd
std
sti
xor
divb
cmp
jge
test
and
adc
movsb
cmpsl
ficoms
xor
lea
clc
jns
cmp
pop
sarl
out
pop
cmc
call
jecxz
pop
and
test
mov
mov
cli
cltd
pop
jbe
shlb
pop
pop
sub
cmp
mov
sbb
or
push
xchg
lcall
sub
and
pop
mov
push
jns
imul
es
pop
xchg
push
xchg
aas
les
inc
or
addl
les
js
or
inc
cmp
inc
sub
inc
jae
aaa
dec
pop
xchg
ret
or
mov
test
test
sbb
mov
mov
xor
popa
inc
insb
dec
xor
cmp
outsl
mov
push
lret
lahf
add
test
rcrb
push
call
dec
lret
jb
mov
scas
pop
arpl
jmp
jp
scas
cmp
lahf
stos
mov
popa
ret
movsb
dec
cmp
sub
ja
pop
rolb
int
shll
scas
int3
xchg
pop
data16
mov
fisubrl
orl
sub
icebp
jle
jmp
inc
dec
inc
push
dec
mov
loopne
cmp
or
xchg
cmpsb
loop
push
or
xchg
leave
cmp
mov
lahf
xchg
ss
sbb
push
push
test
and
cltd
and
adc
rcr
addr16
pop
cmp
icebp
scas
out
and
mov
test
mov
push
cmp
pop
and
sbb
jo
mov
lods
fnstsw
push
imul
iret
icebp
inc
out
cmp
lret
scas
nop
ljmp
adcb
inc
sub
insb
stc
call
lea
jecxz
jge
add
xchg
xor
js,pt
jl
pop
jb
mov
es
or
inc
dec
sbb
jl
xor
pop
sbb
adc
andb
pop
cwtl
add
sbb
and
ret
ljmp
rcrb
mov
push
adc
mov
imul
sub
lea
cmpl
lods
jo
push
inc
mov
fcomps
addb
ja
stos
int3
mov
add
jmp
call
lret
mov
or
jo
mov
adc
lret
and
rorb
jbe
stos
adc
inc
dec
popf
ret
and
and
xchg
lods
jns
pushf
mov
fcomi
into
inc
xchg
jecxz
dec
popf
cld
mov
jnp
inc
les
test
fistps
mov
ret
test
jno
inc
ds
jecxz
adcl
fs
cmp
ja
fucomip
mov
imul
lods
jne
sub
mov
sub
pop
in
inc
mov
in
test
shrl
stos
mov
arpl
or
jbe
stos
sbb
sbb
mov
insl
push
aam
lcall
idivl
add
xorl
xor
adc
push
pop
pop
push
adc
sbb
in
data16
pop
test
sbb
shll
pop
push
cmc
pop
lretw
mov
aad
push
negl
loope
hlt
mov
or
dec
inc
aam
push
lock
popf
outsb
xor
andl
push
sub
pop
clc
scas
popf
mov
mov
and
lcall
xchg
dec
or
daa
inc
in
fsts
adc
fcomip
cmp
cmp
pop
inc
inc
movsl
js
and
xor
cmp
pusha
mov
add
fsubp
pop
push
and
inc
sahf
xor
or
pop
test
push
bound
loopne
aad
and
and
mov
cmpsb
into
jnp
xlat
mov
jecxz
fdivrs
push
xlat
xor
mov
out
push
pop
sub
xchg
push
xchg
out
repz
fwait
adc
mov
push
aad
xchg
xchg
arpl
xchg
ja
repz
hlt
inc
xor
mov
xchg
mov
cwtl
xchg
jp
fsts
jge
mov
fnclex
jno
jne
pop
outsl
cmp
cmpl
inc
xlat
pop
aaa
xchg
cmpl
aas
jge
imul
sub
popa
cmp
fistpl
shr
outsl
lods
imul
and
cmp
ror
jp
repz
mov
imul
mov
cmp
cwtl
enter
xor
jbe
or
xor
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
jmp
rcrb
and
rorl
xchg
jno
in
test
jl
test
add
mov
js
fldenv
and
xor
cmp
jecxz
xor
mov
mov
add
popa
dec
into
inc
repnz
leave
mov
cmp
in
test
into
rcll
xchg
sbb
out
inc
inc
imul
add
ljmp
int3
mov
and
push
out
movsb
xor
fdivr
add
cmpsb
data16
xor
jp
sub
jns
xor
js
int3
clc
mov
ret
cmovae
imul
loopne
jbe
xor
and
lcall
inc
adc
repz
shrl
push
addl
jbe
sub
cmp
and
inc
mov
mov
mov
jbe
add
mov
sbb
in
ja
mov
sarb
lret
lret
ss
or
and
push
jl
addl
push
stos
or
and
xlat
dec
sbb
add
fmuls
dec
lds
inc
std
push
mov
iret
jo
pop
fcomps
ja
inc
cmp
popa
sbb
mov
js
sbb
xchg
orb
das
xchg
add
fdivrl
test
and
pop
pop
nop
xchg
cmpsb
and
jb
arpl
adc
mov
or
inc
xchg
push
mov
popa
andl
jne
sti
aas
and
mov
cmp
jle
sarl
pop
pop
bound
iret
test
inc
jb
negb
pop
pushl
and
adc
enter
push
loop
fdivrl
cmp
cwtl
lcall
sti
dec
add
ds
add
dec
fdivs
in
pop
add
sub
xor
mov
les
aas
add
sbb
xor
pop
mov
xlat
jle
sub
pusha
cmpsl
rorl
add
push
mov
pop
jo
jbe
dec
sbb
sbb
inc
push
sbb
shrb
imul
cmpsl
lds
adc
icebp
mov
sbb
push
xor
out
sub
pop
pop
sbb
or
cmp
fbstp
loop,pt
inc
repnz
dec
sub
pop
mov
pop
aas
mov
cli
adc
cmc
pop
inc
xor
daa
sub
xor
aam
xchg
out
add
leave
mov
out
ljmp
xchg
jmp
scas
add
sti
lret
ljmp
arpl
sbb
divb
jge
popl
jg
pop
and
xchg
ljmp
bound
out
inc
adc
fnstenv
test
or
loop
repz
mov
iret
cmp
das
add
jo
jne
pop
out
xor
stos
lcall
xor
inc
insb
cli
lahf
dec
push
bound
insl
push
adc
pop
fcmovnb
nop
pop
jo
cmp
lcall
mov
or
jne
cmp
xchg
call
jl
cmp
or
add
sahf
dec
mov
jae
inc
add
sub
sub
or
enter
lds
lods
ljmp
or
ja
out
outsb
add
pop
cmp
iret
fildll
mov
dec
xchg
dec
pop
mov
jae
divl
jmp
das
xchg
mov
les
xchg
adc
aaa
cld
mov
popa
int3
pushf
nop
push
pop
mov
stos
fs
xchg
push
xor
leave
data16
mov
sbb
xchg
xchg
in
dec
jo
mov
and
jp
pop
add
mov
shl
cwtl
jae
decb
sub
sub
xchg
stos
xchg
mov
adc
jp
push
in
dec
cmp
or
push
mov
cmpsb
cmp
in
inc
add
xchg
fdivs
pushf
bound
jp
sbb
aas
xor
jo
fstpl
inc
imul
inc
cltd
adc
test
or
jnp
lods
sbb
sarl
push
dec
pop
popa
aad
lret
mov
lahf
arpl
dec
xor
out
rorb
jecxz
cld
fs
ret
inc
fbld
add
test
pop
jb
test
and
aaa
jmp
mull
dec
enter
jnp
pop
jb
cmp
nop
stos
aam
mov
adc
adc
jg
jbe
data16
mov
lds
aaa
shlb
push
popa
lods
xor
hlt
testb
dec
dec
sub
ss
xor
outsb
jp
sbb
test
dec
shll
pop
popa
iret
pushf
mov
xor
jecxz
push
jnp
out
and
rclb
movsl
mov
xchg
dec
add
in
add
out
sub
aaa
jo
sub
pop
cltd
xchg
inc
mov
pop
fcmovnb
sub
inc
jmp
cs
dec
jo
dec
add
popa
das
psraw
xchg
xchg
pop
mov
lcall
shll
jb
rorb
xchg
je
and
std
fbstp
cli
das
mov
stos
xchg
scas
ret
and
pop
xor
pop
inc
fimuls
mov
mov
dec
lret
pop
xchg
cltd
cmp
xor
fcmovnbe
loop
pop
mov
gs
iret
mov
leave
cli
jl
insl
sti
dec
cli
mov
xchg
scas
adc
or
adc
in
mov
pop
test
or
add
dec
mov
lea
or
mov
push
int3
xchg
or
fstpl
and
or
push
in
aam
sbb
in
xchg
sub
xchg
pop
stos
xchg
adcb
sbb
and
adc
jg
pop
in
aaa
push
and
xrelease
mov
movsl
fs
dec
lret
shlb
cmp
dec
xchg
jg
nop
cli
test
daa
mov
sbb
repz
mov
jmp
lock
xchg
mov
cmpsl
dec
adc
jecxz
mov
into
sbb
sbb
out
mov
cmp
inc
xchg
xchg
sub
mov
jl
pop
popf
lcall
jp
mov
decb
out
inc
cmp
sbb
mov
icebp
lahf
sbb
or
push
mov
lcall
arpl
mov
push
inc
mov
jno
add
xchg
repnz
mov
imul
iret
call
test
mov
inc
xchg
sbb
push
fs
push
lret
jl
inc
cmp
add
ss
or
inc
sbb
out
test
iret
pop
xchg
pop
cmpsb
iret
dec
mov
ja
daa
mov
int3
cmpsl
subb
call
dec
scas
lods
rolb
sub
jp
ds
fnstsw
and
pop
dec
mov
xor
loope
loop
popa
or
clc
add
cli
ret
pop
mov
mov
pop
ja
test
inc
adc
or
call
mov
repnz
pop
push
es
ljmp
mov
mov
add
jbe
mov
sbb
sub
xor
cmp
sub
orl
cmp
mov
cmpsl
pushf
in
inc
popf
adc
lret
pusha
or
xchg
push
pop
call
pop
jge
fs
int3
arpl
xor
xchg
xor
aaa
or
fldcw
jo
in
sub
inc
pop
add
loope
mov
je
mov
pop
call
movsb
nop
lods
pop
jge
nop
or
jp
aaa
movsl
js
adc
fisttpl
push
sahf
inc
sub
and
scas
cmpsb
idivb
outsb
jo
cmpsl
in
jge
mov
mov
repz
dec
pop
nop
jl
jecxz
jae
cmp
mov
fcompl
add
mov
cmp
mov
jmp
push
push
imul
inc
mov
rcl
ja
testl
loop
jne
and
or
mov
imul
outsl
subb
and
mov
ss
ja
jl
mov
jns
mov
xchg
cmp
lcall
mov
pop
mov
lods
mov
idiv
or
out
nop
pop
std
incb
adc
or
jb
xchg
pop
xor
jo
push
test
mov
lahf
adcb
xchg
fs
icebp
xlat
mov
xor
pop
mov
mov
sbb
nop
xchg
mov
aam
arpl
rorb
ficoms
jl
or
ret
and
imul
push
stc
test
pop
iret
lret
pop
das
nop
ret
dec
and
sub
mov
jbe
mov
test
adc
test
push
sub
mov
pop
out
std
popa
fwait
inc
sbb
inc
push
mov
cmp
in
sbb
outsl
adc
dec
nop
in
pop
jp
repz
mov
add
or
push
ds
sbbl
ds
jmp
dec
ret
sub
mov
xchg
dec
aas
lds
or
ret
int3
cli
cmp
xor
sahf
add
push
push
sbb
adc
sub
mov
aas
lcall
adc
nop
daa
sub
out
jo
cmp
divl
in
test
push
push
pop
orb
xor
movsl
jne
pop
sub
xor
scas
cmc
int3
lea
rcll
testb
or
push
arpl
cld
jnp
and
dec
cmp
pop
or
add
pop
sbb
jb
add
sbb
sub
imul
insl
je
mov
stos
negb
pop
stos
movsl
pop
es
xor
lahf
jbe
sbb
inc
mov
dec
hlt
orb
xchg
xchg
push
lods
mov
xchg
mov
mov
xchg
jecxz
imul
mov
jecxz
and
inc
out
out
daa
mov
out
adc
int
mov
pop
sub
cwtl
cmp
data16
jmp
pop
add
lds
fldl
fistpl
ds
int
jae
aam
stos
test
mov
fs
frstor
into
lret
xchg
dec
mov
sub
add
mov
pop
or
xor
fs
mov
xlat
pop
jge
cmpsb
andl
mov
insb
lahf
outsl
pop
jmp
xchg
pop
aad
mov
outsb
mov
fnstcw
cmp
jl
mov
adc
xlat
rcrb
xor
cmpsb
hlt
adc
loop
imul
shlb
jns
aam
push
scas
mov
fisubrl
rolb
in
or
scas
sti
sbb
xor
cmp
inc
and
sarb
xchg
insb
push
sbb
inc
bound
imul
push
cltd
adc
fsts
in
ja
or
push
fildl
mov
aam
mov
or
out
mov
js
and
adcb
jle
xor
stc
sbb
push
pop
add
lcall
cli
stos
insb
lds
pop
cmp
fidivrs
adc
jg
mov
jp
mov
mov
sub
mov
lea
test
dec
mov
scas
fimull
xchg
fwait
jmp
cmp
push
call
fisttpll
mov
outsb
add
and
idiv
inc
lods
call
popf
jmp
notb
jbe
adc
jecxz
aad
repz
js
dec
lods
and
rcll
ss
out
or
push
mov
fs
pop
jns
jbe
push
mov
sub
stos
mov
mov
adc
sbbb
fwait
in
popa
aaa
mov
jbe
jnp
push
and
movsl
dec
dec
or
cmp
divb
xor
add
shlb
push
ficompl
push
mov
ljmp
orb
dec
adc
and
into
mov
movsl
pop
sti
mov
mov
call
pop
call
orl
int3
in
imul
stos
sub
mov
mov
out
adc
adc
inc
dec
mov
and
cmp
insl
cli
imul
test
sahf
pop
scas
mov
cmc
loope
out
mov
jbe
test
cs
dec
cs
cmp
lcall
loopne
dec
or
inc
push
sahf
int
add
mov
insb
es
imul
jbe
ja
sub
jmp
aad
mov
inc
movsl
pop
xchg
fistps
ror
lods
outsb
push
pop
in
test
pminub
sahf
shl
es
xor
ret
adcl
leave
cwtl
inc
loop
dec
test
cld
jl
cwtl
jmp
mov
sar
adc
loop
cmpsl
and
jg
push
loope
imul
dec
push
cwtl
push
inc
pop
sub
es
push
dec
mov
push
and
bound
outsb
aas
jo
sti
into
fldcw
in
mov
movsb
xchg
shrl
push
dec
std
add
xor
dec
in
out
jmp
mov
sbb
mov
repnz
cli
pop
push
mov
jbe
loop
dec
mov
test
mov
inc
gs
push
mov
aam
mov
adc
pop
jno
ja
xor
pop
or
movsl
cmp
lods
mov
imul
lds
jge
outsl
dec
imul
shrb
mov
mov
out
pop
cmp
push
cmpb
dec
aam
fnstcw
cmp
pop
lock
or
test
pop
and
mov
mov
add
push
sub
xchg
loope
mov
int3
pop
dec
cmp
adc
push
jno
test
arpl
mov
jno
sbb
lds
aaa
dec
jae
fs
adc
sub
pop
lods
mov
jns
jle
shl
cmp
pop
or
dec
sbb
cmp
filds
xor
inc
repnz
cmp
fidivs
seto
inc
stos
jnp
sub
or
aam
lods
fs
xchg
rolb
add
insl
pop
mov
lret
inc
imull
lret
ja
in
xchg
cld
inc
push
mov
shrb
xor
cmp
and
jb
mov
cltd
adc
add
mov
inc
std
movsb
mov
or
cmp
lret
mov
mov
int
inc
lret
jle
lret
sbb
cmp
jge
and
sbb
sub
fidivs
ret
fwait
movsl
fcoms
and
cmovne
jg
stos
xchg
sbb
sbb
mov
and
hlt
dec
xchg
xchg
push
fisubrl
lock
hlt
mov
cmp
iret
mov
out
mov
and
aas
pop
lret
xchg
jb
into
imul
xchg
fs
xchg
data16
push
mov
into
aad
addr16
repz
je
es
outsb
arpl
sbb
pop
xchg
mov
or
loop
jno
aaa
sub
dec
xchg
push
adc
shlb
push
inc
addr16
std
push
xchg
push
lahf
cmpsb
dec
cwtl
adc
movsb
inc
dec
dec
or
scas
cmp
xchg
pop
bound
outsb
pop
clc
cmpsb
ljmp
test
dec
hlt
sti
sbb
mov
jne
xchg
xor
in
aam
popf
jle
insl
aaa
dec
inc
outsl
push
mov
jae
inc
sub
ds
mov
jno
pusha
fdivrl
stos
push
addb
fmull
pop
sahf
das
and
xchg
or
lret
xchg
push
adc
ja
add
scas
sub
out
por
xchg
or
xor
ficoml
lods
pop
scas
or
push
hlt
jo
mov
stc
push
pop
jp
pop
cmp
imul
adc
addb
lock
add
clc
aad
cmpl
ret
mov
mov
int3
orb
cwtl
rol
add
cmc
sahf
adc
cmp
xor
xor
cmp
sbb
sbb
repnz
ljmp
inc
in
mov
mov
push
jbe
pushf
push
jns
mov
cltd
xor
lds
or
pop
pop
lock
out
add
or
call
and
insl
rcr
scas
inc
ljmp
jns
cmpb
int3
imul
ret
cmc
in
push
jmp
jecxz
mov
lock
aad
es
adc
inc
add
pop
stos
fsubrl
xchg
mov
mov
or
out
fcomi
sub
xor
jmp
sub
sbb
dec
mov
addr16
ljmp
imul
cmp
sub
fildll
cmpsb
and
gs
xchg
sbb
mov
and
mov
push
test
popf
ja
sbb
fcom
pushf
xchg
mov
sub
pop
inc
lahf
mov
repnz
xchg
ret
dec
lret
cld
or
mov
out
mov
cmp
lods
lods
mov
sub
aaa
jbe
mov
xchg
je
cmp
xchg
or
sbb
aas
pop
test
dec
push
and
test
mov
and
inc
hlt
stc
imul
mov
out
sbb
mov
jbe
lods
fwait
dec
inc
and
jle
pusha
xor
inc
jo
fwait
out
call
adc
push
imul
push
repnz
popa
mov
stos
mov
or
cmp
cwtl
add
aas
inc
xchg
popa
nop
std
sub
dec
andb
mov
mov
cmp
stos
xchg
pop
rolb
pop
inc
icebp
rolb
outsl
aas
adc
mov
inc
mov
test
out
push
sub
sub
ds
sub
xor
push
inc
loope
and
pop
add
pop
xchg
lcall
mov
rcrb
mov
std
xchg
jb
adc
aas
loop
mov
add
cmp
insl
fbld
adc
adc
scas
xchg
push
xor
test
jns
enter
lea
sub
add
xlat
test
mov
mov
sbb
inc
pop
mov
loopne
inc
mov
mov
movsb
jp
and
clc
std
mov
roll
sbb
xor
xor
push
push
push
lcall
int3
dec
push
inc
fistl
mov
icebp
ficoml
add
int
outsb
xchg
mov
ja
mov
fisubl
cli
cmp
push
cmc
lods
dec
sbb
adc
in
test
insl
adc
js
sbb
push
dec
test
ret
cmp
mov
pop
cmc
and
sbb
popf
pop
fsubrp
dec
cmp
push
je
and
add
add
enter
imulb
int3
loope
icebp
push
test
enter
aad
repz
ljmp
mov
push
lcall
std
orb
jecxz
mov
fidivrl
cmp
cld
hlt
cmc
loop
mov
dec
test
out
ret
sbb
lock
xchg
push
int
out
adc
andl
les
fucomi
jle
jmp
xor
imul
mov
jbe
out
cmp
xchg
int3
out
cmpsb
and
inc
xchg
mov
or
lret
mov
pop
add
xchg
xor
in
imulb
ror
cmpsb
adc
jo
inc
cld
pop
jle
xor
insl
subl
pop
mov
lret
cmp
sbb
enter
lock
sahf
sbb
mov
mov
stc
popa
popf
loop
subb
jo
dec
popa
xchg
pop
add
fnstenv
xchg
xchg
xchg
xchg
pop
sub
or
or
or
xor
rclb
iret
mov
cmc
push
sub
xchg
aam
mov
cmpsb
inc
adc
mov
movsb
adc
cmp
movsl
das
push
xchg
dec
pop
lret
iret
mov
popa
jns
add
or
mov
lods
pop
pop
push
divl
hlt
scas
jo
stos
fsubs
sub
lahf
es
fidivs
not
xchg
adc
call
out
cmp
pop
xchg
js
pop
data16
jns
jmp
and
xor
bound
inc
dec
xchg
adcl
es
je
and
mov
shrb
cmpsb
jle
sub
pop
add
add
scas
add
dec
cmc
out
push
mov
fdivrp
fcomps
out
movsb
dec
addb
scas
in
and
inc
inc
addr16
cwtl
adc
jae
mov
std
lods
negl
std
mov
jns
fildl
mov
aad
add
adc
nop
jmp
inc
aam
mov
fld
xor
sub
push
mov
pop
fsubl
es
cwtl
ds
jbe
sub
pop
bound
cmpsl
mov
stc
out
jo
xor
push
lods
xor
loope
push
jne,pn
in
mov
popf
fnsetpm(287
rolb
js
mov
xchg
cmp
das
pop
out
mov
and
es
push
mov
int
dec
and
and
vunpckhps
or
xchg
das
mov
movsb
pusha
call
pop
pop
push
les
mov
add
sahf
imul
nop
lods
inc
rcr
inc
test
ret
mov
sub
mov
mov
es
ror
lods
jle
dec
sarb
xor
lret
cmpsb
xchg
fcom
call
ljmp
add
arpl
pop
popf
fwait
inc
cmp
jae
imul
icebp
int3
xorb
mov
pop
pop
xchg
or
sbb
pop
add
shlb
aaa
imul
push
xchg
ret
mov
andl
in
test
in
or
fiadds
ljmp
repz
pop
aaa
push
std
sbb
out
clc
sbb
xor
ja
sbb
fidivrl
push
inc
add
jns
jnp
inc
nop
aaa
aam
adc
pop
pop
and
sub
outsb
xor
cmpb
sar
test
sub
popf
push
mov
push
cmp
inc
divb
mov
push
mov
push
insb
pop
pop
add
sarl
sahf
mov
xchg
mov
pop
xlat
mov
push
dec
sti
decl
cmc
cmp
lock
push
std
inc
mov
xchg
sbb
je
stos
js
daa
inc
jg
pop
fistpl
sbb
jns
stos
pop
mov
push
push
or
mov
xchg
push
data16
jle
xor
add
pcmpgtb
out
push
lcall
inc
xchg
jp
cmp
push
inc
ficoml
adc
gs
adcb
ljmp
nop
clc
or
adc
jecxz
jge
incl
repnz
cmpsl
fistps
cmpb
mov
xchg
mov
ljmp
or
sub
mov
pop
mov
fistpll
hlt
in
outsl
jmp
es
cmp
push
test
subl
cmp
or
inc
loope
fidivrl
fcompl
je
pop
pop
push
mov
in
mov
xchg
lcall
je
sbb
out
lds
movb
call
into
xchg
and
out
dec
add
out
inc
int3
mov
pop
and
mov
push
push
lods
nop
sarl
sqrtps
iret
mov
fnsave
bnd
lahf
cmp
lcall
pushf
cmp
arpl
pop
mov
or
in
sbb
out
mov
mov
ret
and
dec
mov
lretw
jnp
inc
push
jbe
mov
pop
std
cmpsb
xchg
mov
inc
cld
bound
push
push
dec
out
sub
out
cli
out
daa
mov
arpl
cmpb
xor
inc
push
adc
aam
mov
int3
push
xor
fdivr
and
mov
fmul
jae
jnp
cmpb
hlt
test
decl
or
fsubrl
fbld
outsl
add
lods
repz
bound
stos
shrb
rolb
dec
les
mov
mov
test
idivl
mov
xor
mov
aaa
mov
mov
jbe
fists
cmp
sti
lods
mov
data16
les
pop
mov
sti
stos
dec
or
lods
out
push
cmp
xlat
lcall
pop
jnp
lea
push
sbb
mov
push
out
icebp
sub
add
cmpsb
sub
jo
add
mov
jb
mov
outsb
push
lock
pop
sbb
xchg
fldcw
push
xor
lret
push
and
in
xchg
js
js
jb
adc
imulb
daa
pop
outsl
push
push
xor
mov
lods
daa
rorl
out
adc
aas
shll
jne
inc
xchg
rcr
adc
mov
and
xor
or
outsl
fbld
sub
in
call
pushf
stos
in
or
cmp
add
pop
jb
stc
xor
movsb
rcll
jbe
adc
sahf
ret
add
incb
shlb
mov
jnp
push
mov
popa
cmc
loope
fcoms
int
test
cli
les
rcr
dec
sub
mov
test
test
and
lock
insb
into
lret
lods
sbb
xchg
push
dec
in
mov
into
add
fs
or
push
sbb
int
repz
imul
cli
cmc
insl
in
loop
std
pop
pcmpeqd
and
addl
or
mov
shll
ret
loop
xchg
jb
int3
into
testb
sahf
dec
ljmp
jmp
loop
pop
test
das
cld
and
jno
fxch
ss
fistpll
lods
out
xchg
sbb
lret
pop
jno
jmp
add
les
or
arpl
xchg
jnp
inc
cmp
mov
jns
mov
inc
xor
push
xchg
sbb
shll
mov
xchg
sbb
aaa
mov
and
cmp
inc
push
adc
lds
addr16
loopne
pop
rclb
adc
xchg
inc
aad
ficoms
jo
dec
bound
pop
popa
cmpsl
gs
mov
cmp
inc
orps
loopne
popf
enter
hlt
pop
jmp
test
fildll
fdivrl
or
outsb
cmp
mov
mov
xchg
cmp
hlt
nop
sbb
shll
enter
or
es
cmpsl
lods
and
idiv
shl
dec
scas
jne
shlb
xor
fs
stos
sub
or
pop
scas
in
scas
repz
fcompl
push
mov
jge
dec
add
and
std
mov
cld
lock
sub
sbb
les
pop
into
repz
mov
in
jae
jmp
sbb
sti
ret
push
add
push
sub
les
inc
mov
fstpt
mov
cmp
in
call
pop
mov
and
pop
cmpl
ljmp
das
shll
sub
cmpsl
cmp
out
push
push
push
in
lret
add
lfs
andnps
inc
cld
hlt
sbb
imul
int3
xlat
pushf
int
push
out
pusha
jmp
stos
shll
dec
lahf
pop
cmp
sub
jns
pop
xorb
das
jb
popf
cmpsl
sub
pop
mov
adc
mov
dec
sub
dec
push
stc
mov
stos
xchg
clc
test
mov
inc
and
sbb
sahf
fsubs
push
add
adc
cmp
sahf
je
bound
xchg
push
push
imul
lea
xor
jmp
adc
sbb
mov
inc
xor
cmp
ljmp
mov
inc
add
repz
dec
xor
adc
mov
jns
fisubrl
push
xor
std
popf
sub
adc
cld
lret
mov
cmp
jecxz
std
sub
push
fldcw
inc
xor
mov
data16
mov
adc
mov
dec
rep
xlat
clc
mov
in
jbe
out
mov
cwtl
popa
add
nop
and
mov
cltd
xchg
out
ret
pop
ss
inc
lds
outsb
scas
push
inc
mov
mov
fistpl
nop
das
in
stc
aaa
xchg
rcll
adc
dec
pop
xor
jge
and
mov
push
test
fs
mov
mov
and
sub
add
hlt
xchg
sub
dec
addr16
nop
pushf
mov
jmp
ror
xchg
pop
data16
xor
jl
mov
sub
repnz
data16
adc
sbb
mov
lret
orb
dec
push
mov
mov
test
pop
lret
fs
je
mov
xchg
movsb
dec
inc
adc
pop
pusha
fisttpll
outsb
sub
int3
pop
cmpsb
sbb
repz
cwtl
fbld
out
or
pop
mov
cld
mov
sub
sbb
test
test
xchg
inc
and
mov
cltd
fbstp
push
aam
jl
repnz
mov
addr16
cld
jbe
mov
fisubs
data16
push
stos
loope
sub
cmpsb
push
es
mov
xchg
enterw
and
test
add
sbb
push
xor
ror
fs
dec
and
lret
repz
in
add
xorl
mov
std
pop
test
in
test
xor
es
xlat
fidivl
inc
lods
sub
and
jae
sbbl
je
adc
cmc
mov
ja
sbb
xchg
out
gs
cmp
dec
pop
lcall
arpl
outsl
shlb
js
shlb
xchg
imul
lret
push
stc
pop
or
lock
mov
popf
mov
inc
idiv
xchg
mov
je
add
sub
imull
icebp
mov
das
sub
ss
dec
cmpsl
mov
lret
sbb
stos
cmpsl
imul
sbb
sub
lock
adc
add
test
adc
mov
and
push
lods
pushf
not
lret
push
mov
pop
test
or
mov
add
aaa
js
add
xchg
and
push
xor
data16
push
icebp
lcall
mov
scas
inc
push
lods
and
pop
ds
sti
push
mov
mov
js
dec
sub
add
push
sub
inc
mov
cmp
test
divl
shll
pop
cmpsl
xchg
cltd
mov
out
les
mov
jns
cli
jb
fildll
sub
movsb
mov
lock
loope
adc
mov
mov
popa
scas
push
js
mov
mov
push
cmp
cltd
and
add
aaa
mull
mov
add
or
filds
jle
xlat
getsec
sbb
cmc
inc
mov
mov
es
cmpsl
push
sbb
cltd
out
add
cmp
pop
dec
push
jns
fs
popa
mov
das
divl
ror
sti
add
lahf
leave
in
clc
fwait
pop
loop
test
leave
loope
sarb
pop
push
add
jg
mov
rclb
in
les
jge
cs
mov
pusha
sbb
sbb
xor
enter
or
pop
out
rcl
xor
mov
cmp
inc
iret
xor
add
mov
dec
mov
cwtl
fwait
lea
sub
repz
push
fs
out
mov
daa
popf
icebp
fwait
cmp
jmp
dec
or
mov
aas
nop
aad
dec
mov
jg
mov
sub
jp
jae
in
cmp
cmpsb
fwait
or
cltd
aad
iret
rorb
cmpsl
and
lds
jbe
jo
xchg
xor
insb
es
imul
in
pusha
sub
inc
jns
addb
enter
pop
sbb
xchg
cmp
cwtl
imul
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
jmp
scas
shlb
jno
scas
mov
xor
mov
je
jl
pop
jl
pop
inc
fsubp
repz
sbbb
shrl
cmc
sbb
jb
mov
and
pop
mov
data16
mov
xchg
cwtl
mov
daa
jne
sbb
and
orb
jle
mov
lcall
cmpsb
les
xor
lea
pop
add
pop
out
adc
fsts
cmp
aaa
or
cmp
sub
mov
hlt
pop
out
test
subl
and
xor
hlt
lods
mov
xor
setnp
push
pop
jmp
push
lods
xchg
push
int
in
divl
adc
cmc
jp
stos
or
xchg
int3
dec
lds
pop
mul
insl
dec
sub
mov
call
je
sub
incl
push
push
pop
ja
mov
sub
stos
bsf
orl
aaa
outsl
loope
dec
sbb
mov
movsl
push
cmp
jl
cli
push
fldcw
cld
popf
sbb
rorl
testl
je
orb
ss
inc
adc
mov
cmpsb
push
and
or
fisubrl
imul
sub
mov
aaa
jae
pop
sub
imul
fcmovne
push
jmp
test
pushf
mov
pushf
addr16
leave
sub
jp
shrb
add
cmp
sub
add
push
jnp
cmp
pop
sub
lcall
inc
and
push
lea
repz
push
out
jbe
insb
test
sub
push
enterw
pop
in
loop
xchg
dec
inc
and
test
inc
sub
test
mov
push
bound
je
adc
push
std
add
xor
lret
fnsave
jp
pop
testl
loope
mov
sar
xor
mov
pop
in
jo
pop
sbb
ss
lret
outsb
out
pop
cld
imul
mov
imul
inc
cwtl
sub
mov
pop
fcmovbe
ret
cmpsl
pop
clc
pop
ret
pop
and
sub
subb
scas
stos
adc
gs
pop
cwtl
sbb
cmp
inc
movsb
std
inc
inc
ret
sbb
ret
adc
sbb
cli
lea
mov
xchg
shlb
adc
adcl
cmpsb
aas
mov
sbb
sub
cmpsb
or
mov
ja
cwtl
push
pop
xchg
xchg
test
addr16
mov
cltd
pop
cmp
sub
adc
fldcw
dec
daa
fimuls
pop
dec
jb
mov
lcall
inc
push
push
loopew
pop
push
sbb
sub
ss
xlat
inc
inc
cmc
xor
bound
orb
scas
outsb
inc
in
insb
adcl
push
into
inc
mov
or
ficompl
xchg
ret
sahf
rcrl
dec
and
jmp
and
out
pminsw
pop
jl
cmp
gs
cmp
push
popa
dec
push
rolb
rorb
xor
or
movsl
push
jmp
pop
jmp
pop
mov
rclb
in
and
jmp
push
sub
aad
pop
loop
xchg
jae
out
loop
lcall
cmp
cltd
cmp
cmpsb
popa
int
out
loopne
repnz
fsts
ss
pop
nop
mov
fs
jp
cmp
enter
aaa
repz
or
stc
mov
test
push
cmp
out
mov
cltd
mov
mov
sbb
push
rorb
test
push
pop
push
sar
add
or
push
mov
mov
mov
lcall
mov
add
fldl
lret
mov
mov
cltd
mov
jnp
inc
mov
inc
arpl
and
cmpsb
movsl
adc
or
mov
les
addr16
push
es
jo
or
xchg
addb
sbb
jmp
xor
lcall
mov
test
or
fnstsw
shlb
push
sub
mov
icebp
jl
in
mov
sarl
xchg
out
push
jo
fistpl
inc
pushf
push
xchg
cltd
jns
aas
gs
in
lret
test
xor
sbb
loop
out
pop
repz
sahf
or
test
mov
mov
repnz
push
inc
inc
mov
adc
sbb
outsl
add
push
adc
mov
ja
xchg
cs
mov
popa
inc
mov
inc
and
pop
aam
and
pop
xor
lret
dec
xchg
cwtl
sub
rclb
cmp
icebp
mov
inc
push
adc
outsl
adc
cltd
stc
call
cmp
xor
cmpl
or
push
shrl
les
test
mov
xchg
pop
push
xchg
dec
cmp
pop
loopne
cmp
fld
pop
sar
cltd
sti
mov
add
fdivrp
dec
xlat
aad
xchg
xor
pop
push
sub
in
cwtl
sarl
addr16
sarl
test
jecxz
dec
into
lds
jp
mov
aas
pushf
loopne
add
scas
jo
scas
movsb
mov
js
pushf
or
fidivrs
fmul
loop
lcall
jnp
fs
int
out
cmpsl
fstl
cmc
mov
fmuls
out
aaa
inc
sbb
push
mov
xchg
cltd
push
cmpb
push
jmp
mov
mov
test
inc
inc
mov
ficomps
dec
aaa
sub
cs
push
inc
int3
mov
mov
inc
xor
sahf
sbb
xlat
sbb
xchg
cmp
cmpsb
mov
mov
sub
jae
in
adc
pop
or
cmp
pop
add
dec
dec
sar
sbb
jns
xor
outsb
dec
pop
aad
mov
inc
lock
xor
pop
adc
imul
dec
add
je
push
push
xor
std
adc
mov
sub
jg
mov
sub
sbb
lock
loop
mov
aas
and
scas
xchg
xor
jle
push
test
jo
test
inc
pop
cli
cmp
in
inc
pop
xor
dec
jecxz
popf
add
pop
out
mov
mov
pop
xor
ljmp
aad
push
mov
lret
dec
push
sbb
sbb
sub
adc
loop
or
xchg
int
adc
xor
fdivr
loop
mov
lcall
mov
cmp
lea
mov
mov
imul
dec
pop
mov
sbb
mov
add
jmp
sbb
mov
call
ss
movsl
leave
jns
lea
adc
sub
mov
jae
js
mov
mov
xor
aam
and
xchg
inc
sbb
test
cltd
pushf
xchg
sbb
sbb
cmp
dec
inc
inc
or
fbld
rcr
stc
mov
or
movsl
adc
fsubl
pop
flds
sbb
int
push
outsl
aas
inc
es
fwait
arpl
leave
adc
fdivs
inc
xor
sbb
js
mov
fxch
dec
daa
add
and
inc
sbb
pop
dec
sub
movsb
jp
push
andb
dec
xor
sbb
jno
mov
sbb
test
adc
in
outsl
nop
fistps
xor
adc
and
inc
adcb
jae
and
jmp
imul
sbb
mov
shl
cmp
cld
mov
xor
outsb
insl
sbb
jg
test
add
inc
ret
inc
mov
outsl
repnz
faddl
sub
cmp
xchg
divl
pop
dec
add
mov
add
stc
outsb
push
fwait
sbb
jno
clc
xchg
xchg
int3
lahf
decb
cld
xor
push
inc
push
mov
inc
cmp
pop
fbld
lret
and
rorb
lock
sub
lahf
stos
or
sbb
xchg
fs
pop
and
jp
inc
shrl
dec
loopne
aam
cmp
sbbb
gs
loopne
or
pop
push
jae
popf
jl
call
xor
push
data16
testb
sbb
ds
lds
sti
sbb
push
pop
or
push
dec
insb
inc
imul
jge
orl
sbb
mov
fwait
push
lret
js
decb
stc
inc
loope
call
ja
xchg
mov
mov
imul
push
or
push
or
and
mov
ficompl
stos
int
lock
lea
das
cmp
repz
je
mov
sbb
movsl
cli
jbe
jle
xchg
mov
jge
out
testl
inc
mov
out
or
cmp
sub
mov
mov
xchg
call
pop
cmp
mov
cmp
cs
lea
cmp
jg
mov
xor
mov
or
shll
test
imul
mov
outsl
mov
cmp
hlt
xor
mov
addr16
outsb
shrl
cmp
fsts
dec
in
gs
sub
inc
loop
jge
insl
mov
push
mov
addr16
dec
shr
int
jge
push
jmp
pop
int3
imul
insl
shll
push
repz
sahf
fsubrl
xor
aaa
adc
aas
shll
outsb
stos
std
sahf
hlt
push
fmul
mov
cmc
xor
mov
es
lds
out
das
dec
mov
divb
push
pop
push
cmpsb
fmull
and
dec
mov
mov
cmp
adc
cmp
sbb
add
out
sub
scas
je
add
ds
cli
lea
mov
std
mov
test
loopne
cmp
arpl
jmp
inc
stos
mov
xor
stos
je
push
xchg
and
stos
in
lcall
sbb
xor
push
xlat
or
test
subl
sbb
out
fidivs
xor
ret
jmp
fidivrl
mov
or
xchg
pushf
leave
cmp
loop
sarb
mov
adc
adc
popa
gs
ljmp
out
add
data16
outsl
test
cmp
mov
xchg
xchg
and
sbb
inc
dec
aas
or
xor
popa
fsubl
adc
mov
xchg
subl
inc
pop
xor
stos
jns
sub
sarb
rolb
mov
mov
pop
andl
icebp
out
idivl
inc
lahf
jbe
ret
sub
outsl
icebp
dec
jb
push
daa
fcmovbe
mov
xor
test
into
mov
dec
push
ja
jmp
pop
fidivrl
sbbb
xchg
movsl
sbb
into
loope
sbb
cltd
push
xchg
adc
dec
addb
ja
ja
and
mov
mov
ficoms
call
inc
cli
dec
mov
inc
lea
bound
nop
mov
sbb
fiaddl
xchg
stc
cmp
or
adc
bound
out
push
or
or
iret
cld
mov
fstpt
outsl
pop
fsubp
roll
jle
pop
jo
mov
enter
cltd
call
in
add
mov
dec
js
jmp
cli
push
mov
ret
hlt
fisttpl
sbb
std
repnz
aaa
insb
aad
rolb
test
cwtl
out
jns
cmc
xchg
mov
mov
sub
or
xor
fwait
popa
mov
outsb
pop
cwtl
neg
pusha
pop
cmp
mov
daa
push
lock
insb
push
pop
movsl
imul
rcrl
test
sti
lds
out
jnp
or
push
jb
lods
push
testl
adc
rcll
iret
clc
pause
push
xchg
shlb
mov
push
jle
cmp
pop
loope
and
sbb
and
ja
fwait
leave
xor
into
iret
cwtl
sub
lea
scas
iret
mov
out
jnp
inc
jge
pop
fildll
shlb
lret
movsl
aam
xchg
adc
jns
jno
xchg
or
xchg
or
cli
dec
mov
mov
testl
enter
dec
test
inc
sbb
cli
loopne
inc
sbb
xor
les
lcall
dec
js
call
jp
das
fwait
mov
mov
arpl
dec
aaa
fmul
mov
leave
adc
sbb
or
outsl
mov
aam
outsl
cs
bnd
add
cwtl
and
and
jecxz
popf
sub
sbb
lret
or
mov
dec
daa
xor
pop
add
jne
andl
fisttpl
sub
test
mov
lret
push
jo
mov
mov
inc
fs
scas
cli
adc
add
sbb
jmp
sbb
and
mov
iret
cmp
gs
iret
mov
test
mov
scas
add
shlb
mov
push
mov
sti
push
ja
cmp
inc
or
xchg
aam
fidivl
xchg
sub
in
add
cmpb
or
je
mov
xlat
mov
addr16
data16
add
and
and
lods
pop
push
aam
jo
mov
inc
jmp
insb
xchg
sahf
jb
mov
and
or
out
andb
or
leave
mov
adc
dec
sub
mov
cmp
adc
loope
pop
je
lock
cs
sahf
out
push
call
ja
mov
cltd
insb
pop
dec
push
daa
dec
adc
add
out
xchg
and
mov
mov
dec
dec
cs
sahf
xor
shl
adc
xchg
andb
or
inc
inc
and
ds
mov
jne
mov
sbb
adc
insb
or
sahf
fistps
notb
pop
xchg
mov
mov
stos
pop
int
sbb
xchg
imul
xchg
fbld
push
enter
jmp
inc
inc
inc
sbb
test
sub
imul
adc
int3
out
test
fidivrl
test
lret
sbb
and
fstl
mov
std
push
and
ja
push
xchg
loope
je
and
jno
inc
xor
dec
pusha
lds
jno
and
decb
out
mov
mov
mov
push
xorb
push
aas
scas
es
xchg
stc
pop
or
pop
movsl
pop
dec
cmc
ljmp
int3
mov
push
mov
pop
jl
pop
dec
xchg
mov
cmp
jnp
cmp
loope
mov
loopne
fs
xchg
test
pushl
mov
cld
in
icebp
aas
and
inc
int
and
xchg
lods
and
jnp
xor
test
mov
cmp
iret
sbb
xchg
mov
lea
jbe
or
sub
lds
cmp
dec
enter
dec
or
stc
scas
andb
mov
ja
cltd
add
adc
rol
adc
xchg
daa
xor
add
cwtl
call
fcoms
pop
jecxz
pop
leave
and
int3
scas
and
xor
mov
ficoml
xchg
addr16
icebp
popf
ret
mov
call
lods
mov
mov
xchg
in
jb
dec
jl
jmp
jnp
adc
fcoml
mov
scas
lods
xor
ss
inc
ds
and
cmc
in
xchg
or
orb
adc
xor
push
or
jge
roll
cs
fld
daa
loopne
les
adc
sbb
insb
lret
data16
pop
loopne
jle
sar
cwtl
pop
mov
rcll
mov
sbb
xchg
imul
mov
sub
sarb
aam
les
into
pushf
mov
cmp
and
cmp
adc
sub
sbb
jns
outsl
fldcw
scas
shrl
idivl
data16
push
jns
sub
fadds
and
icebp
test
es
jb
adc
repz
mov
jecxz
push
repnz
xchg
and
and
add
daa
or
cld
aas
das
and
ja
scas
pop
mov
cmpsb
or
lods
dec
push
ja
rcrb
or
fidivrs
sub
adc
les
in
sar
jge
pusha
nopl
or
stos
xor
lcall
sub
hlt
mov
cmp
pop
mov
lock
cld
test
fdiv
inc
pop
imul
xchg
lock
enter
push
push
test
mov
lea
mov
ret
mov
roll
sti
inc
push
mov
or
in
pop
fisubrl
add
ljmp
loope
outsl
mov
add
sti
inc
shll
sbb
mov
pop
or
cli
lret
outsb
pop
je
out
adc
out
push
sub
xchg
mov
pop
mov
andl
in
xchg
jae
outsb
rolb
lds
and
repnz
add
enter
inc
pop
jp
or
dec
xor
rcr
xor
sub
les
mov
mov
je
mov
aam
out
out
mov
adc
shll
jge
jp
push
push
sbb
stc
test
push
pushf
dec
sub
and
aaa
and
cwtl
loopne
adc
repnz
ret
mov
mov
fistps
or
std
mov
cld
popf
out
cmp
push
pop
lods
or
mov
lahf
data16
pop
pop
adc
and
mov
ret
loopne
insl
clc
pop
push
xor
mov
or
fisttpl
insl
pop
in
push
lods
jne
rolb
jno
xor
mov
fmulp
addr16
xor
push
push
repnz
mov
jp
cmpsl
loope
inc
sbb
mov
outsl
sti
adc
xor
sub
scas
test
add
mov
cmpb
ret
notl
clc
push
into
cmp
imul
push
add
or
out
lahf
sbb
or
jo
inc
mov
jnp
mov
outsb
leave
xor
jo
push
cs
mov
adc
xchg
lea
rolb
sahf
mov
es
loopne
pop
jbe
loope
ja
rclb
xchg
pop
cmpsl
sbb
mov
fistps
ss
cltd
jg
or
jns
arpl
inc
adc
daa
and
push
sbb
out
dec
and
xchg
mov
xchg
push
adc
setae
jmp
test
pushf
dec
pushf
out
mov
sub
cmpsl
xchg
sbb
cmpsb
pop
mov
mov
cmp
jge
xor
mov
fiadds
adc
rcrb
fisubs
and
pop
sarl
dec
dec
cwtl
mov
out
push
fsubrs
stos
jb
add
lret
aas
scas
pop
iret
mov
test
mov
jle
jmp
mov
stos
pop
pop
or
adc
sub
jle
movsl
dec
mov
cmpsb
call
out
push
pushf
cmp
push
adc
sbbl
cwtl
jecxz
mov
mov
or
mov
in
bound
in
adc
add
jmp
clc
addr16
bound
mov
mov
mov
test
fnsave
adc
ret
sbb
mov
dec
inc
lea
sbb
add
sbb
pop
cmp
mov
jle
cmc
inc
test
and
popa
out
leave
cmp
idiv
fcmovu
or
rorl
cmp
orl
rorb
ret
inc
adc
mov
rcl
sahf
pop
inc
jae
rorb
and
adc
and
movsl
enter
push
bound
jnp
xchg
andb
enter
jnp
sub
mov
push
fsub
roll
adc
nop
leave
inc
add
aam
je
movsl
push
push
inc
nop
mov
scas
fists
xor
outsl
insb
int
ret
ja
jns
xor
call
and
sbbb
dec
jbe
fdivrs
push
add
push
and
leave
addr16
leave
in
movsl
lret
test
in
sub
stos
dec
xchg
int
or
out
orl
rorb
and
popa
stos
pop
pop
arpl
dec
into
int3
adc
call
fmuls
cmp
fs
sti
clc
push
out
ja
xchg
sti
hlt
in
mov
lret
lret
scas
repnz
jbe,pt
in
push
pushf
or
and
add
xor
testl
jge
add
mov
in
icebp
inc
loopne
inc
mull
stos
xor
cs
jns
mov
push
in
shll
or
arpl
pop
fisttpll
xorb
inc
rcrb
push
or
ds
loopne
mov
inc
sbb
inc
in
stc
inc
xchg
fbld
rolb
adc
add
xchg
cmp
mov
loop
mov
ret
jge
cmp
cwtl
and
into
cmpsl
sub
jnp
dec
mov
jp
ja
nop
mov
dec
pusha
inc
mov
mov
into
loopne
add
fsubs
inc
scas
mov
punpckhwd
pop
mov
aas
dec
jnp
add
jno
rolb
sub
popf
out
mov
test
in
insl
or
inc
xchg
stc
fisttpll
inc
fucomp
mov
imul
lret
mov
jb
lahf
mov
sbb
mov
push
cmpsb
cmp
jbe
dec
fidivl
mov
adc
jo
jmp
bound
out
rcl
lret
push
xor
inc
aad
sub
jp
sbb
dec
out
xlat
mov
stos
mov
ret
cmc
pop
add
fidivrs
sbb
test
or
iret
pushw
xor
and
jg
pop
std
xor
sub
and
inc
xchg
imul
dec
cs
xchg
out
ret
negb
lahf
xor
mov
lods
into
out
jp
test
jg
loope
pop
cwtl
sarl
and
dec
pop
pcmpeqw
dec
popa
or
mov
movsb
and
jns
xlat
xchg
dec
sbb
test
imul
or
idiv
rcrl
loope
insb
xchg
inc
imul
xor
mov
jae
ja
lcall
rcr
daa
pop
into
mov
inc
je
jge,pn
pop
pop
mov
daa
inc
jmp
xor
in
xor
out
ds
sbb
iret
and
fstpt
mov
adc
add
in
and
jl
adc
pop
sub
cltd
outsl
sub
fsubr
push
or
lret
scas
jno
js
sub
scas
mov
jne
call
inc
in
ficompl
je
scas
movsl
jno
in
mov
xor
fmull
stc
setae
xor
ret
mov
lret
push
cli
mov
adc
lea
mov
or
arpl
jae
jbe
push
xchg
test
jge
push
sub
test
mov
int3
mov
and
pop
pushf
xchg
shl
aam
jg
or
ja
mov
xlat
testl
clc
test
cld
or
addr16
push
imul
push
mov
movsb
pop
aam
fistpll
inc
mov
jp
insl
pop
xor
add
shlb
adcb
xor
dec
fwait
in
push
jecxz
loope
in
adc
and
or
enter
sbb
fwait
xor
adc
inc
call
out
stos
mov
dec
push
test
repnz
adc
dec
and
mov
shll
jmp
inc
push
fnstcw
mov
pop
inc
xchg
lahf
cli
mov
cltd
xor
jl
fbstp
xchg
push
pop
jmp
and
and
inc
mov
lahf
jmp
int
or
mov
cli
notb
dec
filds
fistpl
fmul
dec
icebp
aas
lcall
xchg
add
sub
popf
push
repnz
add
pop
add
iret
cmp
cmc
push
movsb
jg
fdivp
sbb
out
fldl
adc
scas
int
mov
shlb
cmp
call
dec
lods
ret
or
xor
sub
sbb
mov
cmp
data16
mov
push
and
test
xlat
test
mov
jmp
imull
mov
dec
or
test
inc
jae
cmp
fsub
leave
mov
mov
sahf
and
xchg
dec
ss
jbe
and
inc
sbb
popf
pop
lahf
out
hlt
shrl
fadd
popa
adc
outsl
sbb
cs
nop
into
pop
add
out
or
pop
aam
cmpsb
adc
sbb
or
popa
cmp
dec
inc
xchg
mov
ret
dec
push
dec
mov
loopne
mov
out
push
inc
aas
ret
stos
lds
fwait
cmp
mov
mov
les
insl
out
xor
jle
adc
jg
ljmp
fcmovu
xor
insl
xor
loop
ljmp
ret
xor
jl
sbb
pop
sbb
push
add
sbb
cmpb
pop
imul
mov
inc
mov
fldcw
adc
xchg
stos
in
orb
in
ljmp
jb
xor
sarl
add
sahf
push
pop
fwait
or
push
pop
mov
mov
testb
es
ret
hlt
lahf
sub
scas
clc
aam
cltd
fdivp
xchg
inc
and
pusha
jl
inc
jns
cs
insb
into
sbb
push
pop
int3
testl
jbe
xchg
call
adc
cltd
ret
adc
jb
clc
test
stos
mov
jne
mov
pop
insl
sbbl
test
sahf
pop
repz
pop
jle
jecxz
lret
dec
push
sbbb
xchg
es
das
cmp
adc
iret
sbb
push
push
out
inc
mov
adc
xorb
add
iret
push
nopl
nop
stc
jo
iret
push
test
jo
fst
sti
pop
js
das
sbb
push
js
and
test
in
ret
outsl
jnp
jno
lds
dec
movzbl
xor
pop
mov
scas
pop
jno
sarb
mov
sbbb
out
arpl
dec
mov
dec
lahf
pop
mov
aaa
sbb
pop
adc
mov
shr
push
dec
xor
push
call
xor
nop
mov
fwait
xor
mov
xchg
ja
in
fiaddl
jo
imul
jge
mov
dec
dec
and
jl
jns
jns
loop
insb
cs
push
loopne
inc
jo
cli
add
les
xor
sbb
adc
or
dec
out
sbb
pop
inc
cmc
movb
jo
inc
xchg
sbb
add
sbb
popf
pop
or
sub
out
lret
xchg
jp
shlb
cwtl
xor
and
inc
pop
sub
imull
pop
fs
cwtl
cs
test
jb
xor
mov
xchg
push
xor
sbb
pop
or
rorb
mov
test
out
push
cmpsb
movsb
xchg
fidivrl
pop
pusha
jle
loop
aaa
rorl
fwait
repz
jp
dec
test
adc
icebp
loop
lea
xor
outsb
jp
daa
push
xor
leave
or
lea
lret
sbb
xchg
push
in
sub
cmc
cmp
push
adc
in
fstps
daa
sbb
mov
mov
imul
inc
notb
mov
inc
mov
mov
dec
dec
mov
lret
xchg
out
xchg
or
stos
repz
jo
mov
inc
sub
dec
clc
pop
test
movsb
sahf
decb
mov
cmp
jle
pop
pop
pushl
xchg
aam
dec
outsb
sbb
adc
push
sbb
push
aam
mov
jge
stc
pop
mov
into
cmpsl
call
jmp
test
or
pop
stos
out
pop
int
xchg
xchg
cli
daa
jno
lea
fcoml
psubd
pop
sbb
aad
or
sub
pop
subb
lock
xchg
and
mov
fcomps
ja
add
adc
pop
fdivrs
out
jb
in
int
fidivrl
sub
sub
jle
push
lcall
push
lahf
or
aas
rclb
enter
push
add
xchg
jmp
push
mov
cmp
jo
mov
clc
dec
cs
imul
cltd
cmpsb
cmp
imul
jnp
repnz
outsb
or
inc
mov
out
mov
adc
pushf
imul
sub
in
sub
int3
push
mov
push
popf
dec
push
adc
dec
arpl
mov
sub
repnz
cmp
std
lods
xchg
mov
nop
shl
loope
rcll
outsb
and
ret
jo
icebp
inc
sub
jge
ljmp
es
sub
dec
imul
jl
add
out
fnstsw
push
rcrb
out
lods
int
movsl
inc
cs
adc
loopne
iret
arpl
xchg
sub
stos
adc
mov
and
xor
aad
inc
daa
inc
mov
dec
xor
scas
pop
xor
mov
pop
jnp
je
aad
mov
movsb
jo
cmp
jno
nop
arpl
mov
stos
lret
pop
inc
pusha
jns
cmp
aam
cmp
fwait
xchg
js
push
xchg
into
ds
push
xchg
cwtl
and
and
mov
sahf
xchg
push
imul
inc
and
popf
jo
out
in
je
inc
inc
mov
ror
adc
push
mov
jae
cmpsb
gs
jp
mov
sub
pop
psrad
mov
xchg
inc
sbb
idivl
mov
sar
lods
lods
mov
ja
aam
aam
add
jns
jns
filds
xchg
pushf
lock
lret
xor
mov
stos
std
mov
mov
sbb
les
inc
test
mov
xchg
mov
pop
and
out
fldl
stos
inc
add
fsubrl
sahf
inc
popf
cs
mov
lods
and
or
stos
add
pop
popf
lahf
ret
stos
mov
fwait
and
adc
cwtl
xor
cmpsb
lahf
xchg
mov
int3
cmp
pop
sub
fs
ja
sbb
xchg
fnstenv
mov
arpl
add
adc
lock
shlb
adc
push
push
push
push
aas
lea
pop
inc
shlb
sbb
stos
inc
scas
dec
flds
inc
nop
adc
dec
jge
shr
add
fimull
push
push
xchg
loop
aaa
xchg
xlat
push
sub
mov
stos
push
xor
in
sub
cwtl
adc
add
subl
push
iret
pop
aas
xlat
in
ds
movsl
add
mov
add
inc
into
insl
or
int3
lret
stc
cmc
mov
iret
stos
and
add
leave
inc
lds
imulb
dec
push
int3
fildll
sub
test
sub
js
push
jle
lods
xchg
sbb
and
adc
addb
repnz
add
icebp
imul
lahf
mov
cmp
jnp
push
pop
imul
movsl
mov
mov
jge
sub
fmuls
int
pop
int
or
sub
ret
mov
std
xchg
lods
scas
and
shrb
cmp
in
and
enter
in
nop
xchg
cmpsl
lods
mov
mov
divb
xchg
cli
and
pop
push
lods
iret
scas
pushf
mov
push
loopne
cmp
sub
rorb
iret
mov
fst
cmp
sub
add
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
add
add
into
xor
add
add
add
add
add
rcrb
add
add
inc
add
jo
add
inc
add
jo
add
inc
add
jo
add
inc
add
add
add
inc
push
mov
mov
dec
mov
add
iret
cmp
add
add
pop
inc
jne
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
sub
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
andl
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
dec
inc
mov
pop
xchg
andl
gs
add
test
cld
xor
das
in
lock
inc
inc
ret
pushf
cmpsl
cmp
test
sub
out
popa
les
ret
movb
mov
outsl
or
imul
out
adc
scas
add
pushf
cmp
pop
adcb
ds
dec
push
ds
cmp
inc
negw
push
mov
pop
pushf
inc
test
insb
popf
mov
fiaddl
aas
jle
pop
mov
sub
cld
xchg
jmp
add
ja
in
imul
cli
mov
loop
loopne
data16
add
push
inc
dec
add
ds
scas
dec
pop
popf
jp
shll
pop
mov
ljmp
xor
adc
lret
repz
test
test
sub
push
mov
mov
adc
stc
loopne
adc
lods
cmp
inc
and
jecxz
addr16
mov
jge
rcll
mov
push
dec
pop
xor
scas
in
hlt
cmpsb
cmp
and
popa
add
loope
gs
jge
aam
pop
and
das
cmp
mov
popa
sbb
jge
pop
pop
push
inc
jb
lds
jo
out
out
inc
lret
xchg
pop
pop
lret
out
jl
dec
insb
lret
mov
mov
ss
pop
int
cltd
mov
and
out
adc
jne
jecxz
inc
fiaddl
jmp
cmpsl
scas
add
fldl
cld
push
gs
nop
jns
sbb
in
mov
jnp
adc
cmpsl
cmpsb
and
pop
jl
mov
dec
flds
jge
pop
pushf
mov
jbe
sbb
fwait
push
stc
or
mov
test
inc
incl
xchg
cmp
popf
inc
add
cmp
cmc
sbb
sub
jae
mov
int3
loope
mov
mov
fs
int3
enter
loope
into
inc
in
jecxz
cmc
test
stos
pmulhw
popf
cmp
xor
js
iret
aam
push
cmp
lret
cmpsl
fldt
data16
jb
in
test
push
aaa
jns
sub
add
and
adc
push
sbb
les
xchg
jb
mov
movsl
push
mov
push
stos
cmpsl
jno
cwtl
push
loop
out
icebp
mov
mov
hlt
mov
out
cmp
jns
shll
and
loope
push
inc
cmc
mov
addb
cld
jne
sbb
sub
pop
ret
iret
sub
sub
mov
mov
shrl
mov
repnz
stos
mov
add
inc
mov
mov
shl
adc
jmp
fs
js
addr16
xor
push
jl
pop
sub
int
mov
lahf
nop
sub
in
lret
lds
push
ds
sbb
adc
sub
sub
push
pop
mov
jg
and
in
jl
imul
mov
jp
gs
push
mov
testb
dec
sub
loopne
dec
js
shll
push
repnz
cltd
mov
test
jg
lcall
mov
mov
pop
lahf
add
cs
sbb
pop
ja
dec
pop
mov
mov
popa
inc
mov
mov
push
pop
adcl
xchg
mov
jg
movsl
scas
add
mov
mov
insb
adc
dec
jae
adc
add
lods
add
add
jl
inc
inc
clc
rolb
xchg
pop
adc
xor
mov
cltd
pop
out
das
imul
cmpsl
sub
xchg
inc
dec
mov
aad
mov
mov
mov
push
fwait
fs
outsb
fldcw
movsb
aam
jg
mov
aad
xchg
and
jae
in
sbb
cmp
pop
xchg
jmp
and
push
mov
and
xor
push
enter
mov
icebp
or
cmp
dec
pop
jp
jbe
and
mov
xchg
ret
int
cmp
lods
fsubrp
adc
adc
or
cwtl
jno
and
scas
ljmp
add
dec
out
dec
dec
int
int
jg
lods
pushf
push
int
shl
cmp
enter
sub
pop
filds
xchg
jbe
mov
mov
sbb
addr16
dec
aas
jg
lock
lahf
lock
je
add
adc
adc
pop
dec
dec
andl
aam
int3
rol
jns
xor
loopne
out
fnstsw
lds
and
fs
js
loope
into
dec
je
add
pop
inc
dec
out
add
xchg
sahf
or
stos
push
test
int
xchg
icebp
int3
sub
rorb
xor
rcll
xor
aad
sub
cmp
pop
hlt
mov
fsubrs
std
mov
iret
cmpsl
push
sub
mov
outsl
inc
push
dec
test
aaa
orb
dec
jge
xor
mov
inc
inc
pop
xchg
es
out
scas
cltd
push
call
aam
sbb
mov
lahf
sbb
ds
pop
insb
dec
xchg
jne
sarb
cs
inc
cmp
cmp
cmp
hlt
xchg
fs
in
sbb
leave
dec
push
sub
lret
pushf
inc
dec
add
sbb
sbb
jb
stc
je
push
xchg
test
leave
imul
not
aas
cld
mov
or
xchg
imul
mov
push
bound
jae
dec
mov
es
in
cwtl
ja
stos
fdivrl
lods
cmp
cwtl
xlat
inc
fwait
cmp
lods
sbb
mov
adc
out
arpl
fcompl
or
push
or
mov
lock
lret
xor
mov
inc
inc
xor
and
lea
adc
lret
push
cmc
hlt
dec
jb
inc
shrb
jns
dec
mov
mov
push
cmp
push
clc
fwait
das
aam
insl
dec
mov
sub
mov
fistpll
fnstsw
lcall
add
add
xchg
sub
out
rcrl
ljmp
lea
test
cmp
or
mov
and
enter
lcall
movl
mov
ja
ret
mov
je
and
adc
shr
leave
sub
stc
insl
jne
xchg
ret
mov
xlat
xchg
inc
sbb
xchg
cli
mov
in
fwait
sarl
sbb
xchg
loopne
aaa
cwtl
cmp
imul
test
adcb
xlat
push
imul
sbb
inc
fisttpll
pop
mov
mov
imul
insb
jle
rorb
add
add
mov
or
lcall
and
add
adc
fildl
in
pop
cmp
out
in
sub
adc
mov
push
incl
and
xchg
mov
gs
lret
pop
jg
inc
aam
xlat
jbe
arpl
ja
lds
rclb
add
sbb
loop
sub
push
aas
jns
jo
movsl
repnz
push
lcall
into
xor
mov
xchg
cwtl
ja
push
frstor
loop
leave
es
stc
fdivp
xorl
sub
mov
js
mov
repnz
sub
das
call
or
xor
cli
add
sti
jb
std
insl
pop
push
scas
popf
jb
mov
xchg
mov
mov
mov
push
dec
inc
sti
dec
std
clc
xchg
aas
test
repz
inc
insl
add
pop
test
mov
rcrl
and
mov
jbe
adc
inc
dec
add
xchg
lds
pop
inc
pop
ja
adc
lds
and
lret
push
iret
jmp
out
out
sbb
fsubrl
jg
and
or
rorl
inc
dec
jle
push
adc
movsb
mov
jae
addr16
shll
mov
mov
xchg
xchg
inc
lea
mov
mov
imul
popa
jmp
loop
cmc
adc
jp
inc
imulb
inc
jb
mov
xchg
push
inc
fisttps
push
adc
add
inc
rorl
jge
dec
sbb
mov
dec
inc
or
je
dec
into
mov
mov
into
lods
mov
pop
and
ficomps
icebp
cmpl
or
mov
jns
mov
add
lock
loop
int
xchg
jne
fidivrl
aas
aas
xchg
fimull
insb
cli
stos
call
jbe
ss
stos
fists
jmp
leave
jb
jns
xchg
push
push
pop
mov
stos
mov
sbb
notl
and
pushf
push
je
notl
adc
jnp
add
push
mov
cmp
mov
add
aad
mov
fsubs
outsl
int
mov
or
popf
loop
mov
loope
sub
cli
lret
ds
ret
push
aad
cmp
dec
out
test
in
xor
jl
es
dec
lods
sbb
push
call
sub
add
mov
mov
push
cmp
lds
ss
jo
cli
testl
sub
insl
pusha
and
fcompl
push
pop
dec
pop
mov
sbb
in
test
lock
pop
bnd
jl
addr16
fidivl
sub
dec
mov
jl
push
jg
movsb
sbb
nop
call
out
xchg
push
lret
cmp
data16
jge
cwtl
out
pushf
push
push
inc
fstps
add
inc
mov
xor
int3
cmpsl
mov
pop
aam
sub
ldmxcsr
fcoms
int3
mov
aad
jmp
dec
sbb
sbb
mov
les
cmp
insl
cmp
cmpsl
mov
scas
xchg
loopne
jbe
add
out
daa
push
pop
fst
daa
hlt
jae
or
out
andl
sarl
aaa
push
add
cmc
cmp
pop
sbb
inc
clc
gs
popf
jg
mov
dec
sahf
xchg
loope
pop
imul
add
cltd
jb
mov
add
sub
ret
mov
lds
sbb
pop
loop
dec
xor
mov
pushf
loope
sbb
adc
sbb
aaa
mov
imul
insl
cmc
dec
iret
cmc
mov
ficoml
and
fdivs
ffreep
xor
sbb
test
adc
in
movsb
ret
lret
hlt
push
ds
cld
pop
mov
jae
scas
inc
fidivs
mov
cwtl
jne
xchg
pop
jae
test
insb
inc
iret
ss
bound
movsb
inc
sahf
inc
insb
lock
push
cli
push
insl
filds
or
add
adc
or
push
test
xchg
xlat
dec
int3
xor
subl
test
cli
cwtl
push
test
push
xchg
and
sahf
sbb
mov
sub
cmp
sbbb
icebp
movsl
lods
into
dec
sub
add
aas
mov
mov
adcl
stos
mov
or
or
std
shll
xor
dec
mov
fiadds
dec
inc
dec
icebp
push
cmpb
or
pop
sub
mov
test
lcall
in
add
pop
repnz
stos
dec
lods
testb
cmp
cwtl
out
fildll
push
pop
ret
push
clc
jg
mov
vphadddq
inc
adc
sbb
rclb
mov
test
fs
pusha
sub
enter
mov
sub
iret
fisttpl
mov
insb
mov
test
mov
sahf
mov
sbb
jns
jmp
or
pop
sub
jae
call
jmp
xor
movsb
cmp
sub
addr16
iret
movb
das
mov
jecxz
outsb
and
dec
sti
out
and
jno
and
das
dec
shrl
lret
scas
out
js
inc
popa
inc
enter
aaa
icebp
cltd
test
out
mov
mov
xor
aad
mov
loopne
cwtl
push
clc
inc
sub
cmc
movsb
dec
xlat
stos
clc
jle
sbb
xchg
adc
sub
and
mov
inc
pop
jo
add
leave
cmp
ficoml
leave
dec
loope
mov
in
js
and
in
out
sbb
fisubs
jbe
inc
aad
mov
dec
lret
inc
cmp
enter
scas
pop
pop
leave
sbb
mov
mov
sub
mov
loop
cmp
xchg
cs
aaa
movsl
push
jge
dec
mov
outsl
cmp
addl
or
mov
fucomi
push
jmp
xchg
mov
ja
jae
dec
or
je
mov
add
sbb
mov
sti
nop
and
imul
inc
xor
nop
je
adc
mov
adc
xlat
add
push
out
jo
xor
sbb
inc
iret
test
dec
popf
mov
aam
pop
mov
mov
and
and
int3
jo
jb
and
sbb
xchg
jecxz
jmp
das
fldl2e
pop
or
dec
dec
stos
push
pop
sbbb
dec
imul
sub
add
lods
scas
dec
xlat
jmp
dec
fmul
mov
xchg
xor
rolb
mov
movsl
scas
xchg
or
repz
test
test
dec
pop
sbb
aas
arpl
mov
fnstenv
in
lahf
mov
jle
lds
pop
lock
arpl
dec
adc
dec
add
out
mov
inc
ds
stc
mov
sbb
sbb
sbb
ds
xchg
outsb
xor
xchg
stc
xor
stc
jecxz
push
ja
mov
loope
mov
gs
dec
or
aad
fldenv
ljmp
mov
in
sbb
lret
mov
and
and
push
aaa
cmpb
cmpsb
jg
or
scas
cmpb
pop
pop
pop
or
dec
stc
xor
xchg
stos
dec
in
cvtpi2ps
cmp
sbb
sub
rorl
xorb
mov
addr16
jae
cmp
adcl
cmp
and
push
fstp
in
lret
xor
xchg
xchg
les
inc
fnstenv
mov
pop
and
sbb
fstps
dec
push
fstl
sbb
test
push
inc
xor
addr16
leave
xchg
shlb
fwait
ljmp
jg
mov
and
cmp
nop
leave
ja
xor
stos
imul
mov
ret
jg
mov
mov
mov
ja
xor
mov
lea
in
sub
stc
xlat
mov
jbe
ljmp
mov
dec
cltd
jmp
nop
iret
push
jno
repz
push
add
into
mov
insw
insl
xchg
enter
icebp
subb
rorb
loope
push
es
aas
es
out
inc
pusha
sbbb
or
ljmp
lcall
fisubrs
sub
cmpsl
sbb
mov
xor
and
pusha
inc
add
mov
ftst
lcall
push
adc
dec
pop
orl
xor
mov
mov
add
pop
outsl
push
jno
and
and
out
jne
xchg
pop
cmp
cmpsl
xor
mul
dec
leave
cwtl
lea
mov
in
repz
cmp
sbb
push
push
jno
push
lds
scas
dec
mov
fcomp
imul
lods
dec
pushl
fnstcw
xchg
es
jg
xor
shrl
test
and
pop
idivb
mov
mov
dec
xor
adc
push
mov
outsl
arpl
push
dec
clc
jecxz
rorl
and
aad
mov
inc
mov
cmp
popa
idivl
cmp
add
push
mov
jmp
add
aaa
pusha
loope
ja
movsl
insl
pop
shll
jmp
cwtl
mov
scas
mov
dec
rolb
mov
sbb
aas
cmp
jo
sub
pop
sub
daa
fwait
roll
sub
popa
add
adc
lret
xchg
aam
aaa
dec
pop
call
nop
leave
mov
dec
cmp
sbb
adc
frstor
or
xchg
jmp
add
jecxz
nop
rcrb
dec
shr
incl
shrl
add
lcall
gs
mov
mov
int
and
lcall
jae
xchg
mov
inc
dec
pop
sub
cmpsb
sub
scas
mov
and
or
xor
push
out
in
and
es
es
in
mull
movsl
fsubrs
pushf
ret
inc
mov
sub
das
stc
lahf
in
mov
lahf
sahf
es
enter
sub
adc
pop
fldenv
lock
cmp
dec
lock
lahf
xor
cmp
push
inc
adc
in
pop
jmp
or
rorb
aaa
repnz
add
sbb
xchg
popa
push
xchg
aam
in
mov
mov
add
mov
sub
mov
fisubs
push
jbe
fdivp
pop
adc
testb
fistpll
pop
pop
pop
add
leave
fadds
pop
aaa
pop
pop
aaa
mov
inc
pop
jb
jl
pop
add
frstor
or
insb
jl
lea
sub
lcall
pop
pop
out
lods
arpl
aas
push
call
sbb
xor
es
jns
and
scas
cmp
out
jbe
jecxz
jae
jno
ss
pushf
cmpsb
sbb
test
sti
pop
scas
mov
fstpl
push
and
in
shlb
mov
es
outsl
jo
and
in
lock
gs
es
sub
roll
push
add
cwtl
mov
int3
sub
xchg
clc
nop
aam
inc
sub
enter
dec
hlt
and
rcll
or
lret
call
imul
jnp
shrb
jge
xor
stos
in
cmpsl
loope
pushf
xchg
shll
sub
imul
fbld
adc
in
sbb
lcall
add
push
hlt
test
push
mov
pop
out
sarb
adc
clc
ror
pushf
xchg
ss
flds
pop
ficomps
ljmp
test
cmpsl
pop
ss
jno
inc
lods
push
lods
fbstp
mov
pop
aam
inc
imul
mov
in
and
jp
jge,pn
pop
mov
dec
cmp
mov
cmp
ficomps
xor
jmp
cs
in
fstp
dec
leave
imul
cmp
es
enter
or
or
lods
ss
or
data16
adc
pop
decl
inc
pop
fsubl
xchg
or
clc
ja
fstpl
jp
xor
inc
xchg
ds
cltd
fs
daa
hlt
es
repnz
sub
mov
jl
es
arpl
jp
add
mov
cmc
sldt
and
aas
mov
sbb
jb
or
mov
or
add
inc
aas
push
fisttpl
mov
bound
gs
adc
iret
aad
cmp
mov
aaa
aas
mov
lea
ljmp
mov
jbe
adc
xchg
xlat
push
or
ss
mov
mov
adc
sub
cli
push
aas
nop
dec
notl
subl
sbb
pop
in
mov
xchg
rcr
inc
xchg
sbb
jnp
sub
cmp
add
stc
lcall
add
add
add
out
data16
lods
cld
mov
hlt
xor
insl
xor
add
mov
andb
dec
push
sub
dec
jg
into
enter
mov
aas
mov
cmp
add
outsb
lcall
pop
and
cmpb
xor
mov
cmp
mov
add
test
mov
lahf
movsb
std
sub
negb
cmpsl
sub
mov
fisttpll
xor
scas
scas
dec
aad
mov
popa
pop
pushf
xchg
loope
xchg
cmp
push
xchg
ret
push
mov
pop
xor
push
bound
cmp
pushf
adc
push
adc
push
jne
xorl
xchg
jb
push
call
cmp
lea
fisttps
lods
data16
rcrl
scas
pop
inc
les
loope
movsl
dec
es
jle
shlb
mov
xchg
out
adc
stos
adc
sub
xchg
mov
push
out
dec
in
or
inc
js
push
lahf
mov
imul
cwtl
lahf
mov
or
sub
pop
rcl
jge
lods
push
stos
outsl
inc
jns
shl
cmc
and
add
pusha
std
lods
idivl
ret
mov
test
mov
adc
dec
fldenv
clc
pop
or
or
repz
neg
imul
jl
sahf
sbb
enter
lret
jle
push
mov
sub
dec
pop
movsl
xchg
lahf
and
int3
cmp
xchg
adc
mov
outsl
push
jp
lods
add
mov
mov
push
jbe
and
inc
jnp
sti
stos
jb
push
mov
sub
pop
xor
cmp
nop
fimull
adc
enter
dec
daa
dec
cld
and
push
leave
movsb
out
xchg
imul
fucomip
imul
pop
xchg
xchg
enter
or
lods
into
pop
stos
sub
negl
lret
clc
xorb
ret
in
neg
adc
mov
adc
add
inc
dec
ret
sahf
leave
sbb
jne
mov
test
xchg
and
nop
inc
fistl
pop
xchg
push
pop
sub
je
rcl
mov
inc
ficomps
push
sub
icebp
mov
cwtl
sub
test
adc
int
cmp
aam
mov
or
cmpsb
or
adcl
ret
adc
add
push
mov
xlat
pop
movsl
jecxz
out
outsl
xchg
or
adc
adc
jae
xchg
out
pop
inc
mov
jp
mov
test
push
jmp
push
popa
xor
inc
pushf
nop
fcomi
mov
std
insl
shrl
fldt
data16
enter
push
push
mull
mov
dec
cmp
xor
adc
popa
int
dec
aaa
mov
xor
push
dec
stos
or
cmp
xor
pop
clc
mov
repz
icebp
arpl
dec
lods
daa
js
mov
fildl
fstpl
insl
sub
lcall
data16
inc
lahf
mov
jnp
mov
leave
and
ja
or
sub
mov
lods
pop
test
add
mov
popf
addr16
fs
repz
in
mov
xchg
and
push
jnp
sbb
mov
jmp
roll
add
in
je
lods
hlt
into
mov
outsb
inc
addl
imul
ja
fwait
jl
je
add
out
adc
add
add
neg
jmp
cli
and
push
es
sbb
add
lods
add
add
sub
cli
out
xor
gs
mov
xorb
scas
idivl
or
mov
rcrl
mov
scas
xchg
pop
cmp
mov
imul
adc
neg
andb
popf
mov
add
clc
lds
xor
mov
sbb
and
mov
jge
jno
lea
xchg
hlt
pop
test
or
jl
je
adc
pop
cwtl
fcoms
xorl
scas
inc
jge
fcompl
mov
push
jmp
cmp
imul
xchg
insl
mov
shlb
pop
jbe
pop
sbb
pop
fistpl
mov
std
shll
mov
add
mov
cmp
out
in
push
sbb
dec
mov
popf
hlt
cmpsb
in
mov
fimuls
pop
lahf
jle
in
fst
and
loopne
cmpsl
lods
push
dec
ds
push
cmp
sbb
sbb
shr
push
rol
out
xor
mov
aad
xchg
push
push
hlt
icebp
mov
insl
mov
shl
xor
adc
ret
or
stos
aam
push
js
push
je
push
push
jae
lret
lods
jns
mov
lret
adc
call
rorl
arpl
pop
jno
test
cmp
mov
cltd
out
cmp
fsubl
insl
add
lds
ret
jnp
and
mov
or
fs
cmp
mov
sbb
in
adc
mov
jmp
mov
push
jno
sti
pop
inc
cltd
pusha
cmp
repz
andb
push
dec
jnp
xlat
lods
insb
das
jnp
insb
pop
sti
cld
pop
lret
in
lret
js
cmp
jle
aaa
add
out
lcall
addr16
ss
fldl
popl
je
outsl
imul
test
popa
xorl
gs
pop
and
pop
lret
lcall
int
sub
xlat
sahf
fld
in
sbb
call
fsubr
add
adc
and
jno
repnz
fs
xchg
pop
push
pop
jp
xor
mov
outsb
cli
cmp
fwait
push
gs
mov
jmp
popa
loop
xor
or
adc
les
jecxz
xchg
push
dec
pop
or
and
mov
test
stos
and
out
loop
add
cmp
adc
sarb
enter
das
repnz
pop
jl
pop
pop
cmp
dec
and
push
cwtl
ss
mov
addr16
cmp
mov
aad
inc
movsb
mov
sbb
push
popa
xchg
and
imul
fstpl
cmp
push
sub
dec
mov
clc
xor
push
sbb
test
mov
pop
mov
xchg
jmp
in
mov
mov
mov
lret
jp
nop
idivb
jl
hlt
xor
hlt
mov
add
xor
pop
ret
daa
mov
lds
lock
add
inc
add
jbe
push
dec
jo
sbb
push
mov
mov
fcmovbe
push
push
pop
lahf
sub
mov
dec
sbb
leave
adc
cld
mov
and
jmp
mov
sahf
cmp
cmp
add
xor
pop
lea
int3
ds
test
jnp
mov
insb
sub
xchg
mov
repnz
addr16
call
xchg
or
mov
or
cwtl
pop
add
cmc
xchg
insb
fucomp
mov
into
pop
xchg
jne
add
pop
imul
dec
popf
fidivs
pusha
push
sbb
mov
jae
pop
mov
pop
test
outsl
addr16
leave
shr
testb
adc
pusha
ret
outsb
stc
cmp
adc
cmc
fwait
push
cmp
adc
mov
mov
pushf
cmp
icebp
sbb
mov
push
mov
stc
repz
fstpt
or
cmpb
push
dec
cld
insl
repz
xchg
lods
leave
sub
pop
sbb
imul
int
ret
loop
mov
pop
push
mov
sbb
push
inc
or
xor
xchg
imul
push
incb
pushf
invd
jg
jg
rclb
jecxz
add
jge
pop
pop
out
outsb
scas
data16
inc
inc
mov
mov
outsb
gs
loope
mov
jmp
movsb
jl
test
xchg
inc
mov
addr16
mov
adc
mov
addr16
mov
push
cmpsl
lods
cmc
sbb
sub
pop
test
out
sub
push
ret
out
in
mov
insl
or
fdivr
addr16
test
lcall
loope
jnp
mov
dec
pop
mov
xchg
sbb
shrb
and
xchg
cld
scas
in
mov
gs
repz
mov
shlb
mov
ja
sbb
push
mov
pop
jge
leave
lock
and
int3
and
js
cmp
daa
inc
jbe
cmpsl
ljmp
loop
call
add
bound
add
sahf
sti
mov
aad
pop
das
pop
pusha
mov
adc
push
call
inc
sbb
xor
jle
add
sbb
xadd
or
sbb
movsb
cmc
push
dec
and
and
adc
jg
pop
leave
jp
inc
sub
adc
push
rcl
add
data16
scas
sbb
inc
push
jmp
test
pop
pop
pop
jp
adc
sbb
jl
lock
cld
lahf
pop
jne
or
fwait
sbb
gs
dec
mov
mov
pop
xchg
insb
pop
inc
xor
cltd
mov
scas
mov
and
push
je
xor
jbe
mov
cs
pop
adc
xchg
clc
pop
iret
les
mov
movsl
jnp
xchg
pop
ret
imulb
adc
dec
scas
ljmp
sub
enter
xchg
loope
fcomip
cmpb
jg
dec
inc
pop
pusha
xor
arpl
jb
push
bound
hlt
pop
adc
push
int
movsl
cmp
cmpsb
pop
jbe
mov
dec
aad
xor
inc
sarb
cltd
and
cmp
add
pop
cs
in
xchg
je
pop
movsb
mov
test
sub
cmp
jg
cmpsl
int
cmp
daa
addl
sub
xor
mov
popf
lods
dec
sarl
stc
lds
aas
cmp
jno
cli
jbe
rorb
leave
inc
mov
add
in
adc
lret
test
sbb
dec
fisubl
aas
jno
add
lods
add
add
mov
int3
pop
fildl
push
mov
js
shrb
lea
fldenv
sar
scas
aaa
or
and
in
cmp
movsl
jmp
sbb
pop
movsb
mov
aas
sbb
dec
in
aas
mov
push
adc
cs
pop
scas
ss
js
loopne
mov
pop
jo
mov
and
mov
movsb
addr16
out
out
adc
xchg
es
mov
pop
adc
inc
test
rorb
aam
mov
mov
xchg
jnp
push
push
mov
lock
sbb
push
into
clc
cltd
xor
fldcw
stos
xor
jp
adc
add
cmp
push
pusha
jns
xchg
icebp
sahf
push
mov
cmc
and
enter
jne
dec
xchg
mov
daa
repz
mov
ljmp
testb
sub
mov
sahf
iret
push
xor
into
lahf
cld
repnz
loop
dec
inc
lahf
xor
shrb
pop
mov
jae
int
jnp
sahf
imul
aaa
push
loop
loopne
mov
cwtl
adc
jecxz
loope
aam
xchg
and
sti
scas
cmpsl
std
out
insl
xor
insb
insb
in
daa
cwtl
jge
adc
sub
jg
pop
and
dec
inc
test
push
loop
aad
mov
jno
outsl
mov
push
inc
mov
xchg
test
fwait
mov
xchg
pop
loope
mov
add
xchg
into
filds
sbb
test
adc
test
jo
mov
mov
sub
pop
xor
push
pop
mov
jecxz
rcll
mov
rolb
int3
push
xchg
cmp
mov
jle
daa
data16
repz
lcall
pusha
dec
sub
and
lcall
stos
test
leave
xor
rcr
test
jno
xor
jnp
lahf
jp
sub
call
fiadds
out
dec
inc
lcall
pop
pop
mov
mov
into
sbb
in
lock
mov
loope
ljmp
pop
shlb
jb
mov
dec
fistl
aad
pop
pushl
pop
subps
and
sub
push
js
sub
data16
call
data16
rcr
mov
push
push
mov
jnp
jbe
bound
xor
xor
pop
jge
lods
jno
adc
pushf
sbb
hlt
and
lahf
lods
sbb
insb
lcall
dec
lret
cmp
popa
iret
ja
fstpt
sub
and
mov
adc
sub
push
test
xor
hlt
pop
push
std
stos
and
dec
rolb
mov
ret
sbb
mov
inc
aas
sub
lock
inc
cmp
lods
sbb
push
fiadds
sbb
nop
xchg
push
jg
xor
lds
pusha
adc
cmpsl
inc
iret
xor
sbb
aas
jle
pop
pop
stos
lea
jl
xchg
lea
js
data16
or
cmc
push
jne
lret
js
pop
dec
push
ret
add
jg
jge
lahf
sti
movsl
ja
cmp
push
out
jmp
add
sbbb
jno
cmc
pop
xchg
and
jbe
outsb
js
outsb
pop
mov
lcall
inc
jb
neg
cmpsl
push
sub
xor
les
les
imul
rclb
mov
fisubs
add
add
out
inc
dec
add
ret
add
lods
add
add
bound
rolb
movsl
sub
push
fsubs
imul
xchg
or
sub
inc
fisttpll
repz
pop
out
sub
nop
jo
ds
cmc
mov
sub
in
iret
int
lock
push
jne
xchg
daa
cmp
inc
repnz
jbe
sbb
inc
popf
cmc
cmp
sub
dec
cmp
dec
push
cmp
dec
loope
sub
sbb
mov
cs
xor
loopne
addl
sub
cmc
mov
sarl
add
pop
outsb
in
push
cmp
xchg
addr16
mov
jp
mov
push
xor
stos
cwtl
and
icebp
pop
cmp
xchg
dec
fs
mov
sbb
das
sub
adc
loope
pop
cmp
adc
divl
dec
nop
cmpsl
stc
or
fs
sahf
push
push
pop
scas
add
push
fsubl
push
push
add
push
cwtl
dec
mov
test
dec
dec
adc
and
out
ja
imul
and
rcrl
push
out
add
pop
bsf
in
out
push
shlb
lahf
movsb
loope
dec
add
sub
inc
mov
xchg
negb
addb
cmp
jne
jne
xor
push
loop
rorl
lods
fistpl
inc
cwtl
clc
cmp
cmc
out
ss
shlb
testb
daa
sarl
cli
scas
int
scas
cmp
jns
add
pop
fistps
pop
testl
mov
lahf
insb
mov
sub
jle
add
xlat
push
sub
sbb
cmp
pop
pop
cmc
lds
inc
lret
adcb
push
pop
repnz
sbb
jmp
sbb
fwait
pushf
int3
sub
xor
adc
cmp
add
or
fwait
mov
add
ds
cmp
in
int
sub
pop
xor
fidivl
mov
adc
lock
les
lret
les
mov
adc
jg
bnd
mov
inc
cmpsl
cmp
or
push
and
and
xchg
inc
fcmovnbe
cmpsb
fsubrl
clc
push
jp
movsl
mov
fisttps
mov
mov
stos
pop
push
in
idivb
or
sbb
sti
aam
or
mov
mov
rcrb
mov
inc
out
movsb
or
add
xchg
inc
rorl
or
clc
jl
ja
ss
jmp
xor
cld
xor
xchg
xchg
jecxz
add
dec
push
dec
adc
dec
sbb
cli
push
lcall
mov
mov
jp
cmpsl
leave
fmulp
dec
enter
lahf
scas
xor
xor
mov
js
mov
jge
adc
xchg
lret
pushf
fucom
loop
sbb
dec
scas
mov
xor
pop
cmpsl
mov
bnd
cs
adc
addr16
lret
dec
or
xchg
push
shl
cmp
or
ficompl
adcb
stos
fstl
mov
xor
shll
push
gs
mov
dec
ljmp
insl
cmp
inc
jae
mov
push
mov
sbb
movsb
mov
dec
in
rcrb
fs
inc
push
xor
lcall
pushf
cmp
test
push
jle
pop
cli
fadds
add
add
leave
or
add
or
lods
cmpsb
dec
leave
inc
add
lods
add
add
jge
adcb
inc
mov
pop
sbb
subl
jl
xor
filds
or
sub
mov
cld
mov
shrl
and
ds
out
lock
inc
and
aad
test
mov
push
fisttps
sub
pop
sbb
cs
pop
add
fwait
push
inc
jp
in
push
scas
mov
push
dec
das
aas
jne
adc
outsb
dec
push
pop
jns
test
or
imulb
inc
rcl
jnp
jne
movsb
ret
cmpsl
jmp
orb
leave
pop
rclb
test
jge
sub
dec
cli
fistl
call
inc
scas
loope
ja
xor
mov
xor
je
neg
push
mov
hlt
fsubrl
into
push
sub
mov
cmp
addb
sbb
dec
and
xchg
outsl
pop
pop
xchg
sub
test
data16
fnstenv
sti
cmpsl
js
sub
and
mov
add
push
mov
mov
cmp
mov
push
mov
add
dec
andb
outsb
lock
scas
lods
int
lods
push
push
out
pop
mov
in
dec
out
rcll
cwtl
out
cmpsb
xchg
js
fcmovnu
stc
daa
inc
dec
je
movsl
out
in
pusha
dec
sub
mov
pusha
aas
sub
pop
loopne
fs
xor
cmp
mov
adc
or
imul
je
lock
data16
lods
push
dec
mov
xor
imul
ret
or
out
push
out
mov
aaa
xchg
dec
inc
sbbl
sti
add
ficoms
xchg
stos
adcl
cmpsb
mov
and
in
into
fnsave
js
and
add
jno
dec
push
pop
jb
pushf
js
andb
shll
ds
fdivs
sbb
out
imul
fs
or
mov
xchg
out
and
pshufw
ljmp
addb
rcr
mov
movsl
jecxz
fucomi
xbegin
mov
je
data16
pushf
push
cld
in
into
shlb
push
pop
movsl
rclb
dec
popf
cwtl
pmulhuw
push
push
pop
mov
push
mov
outsl
movsl
jae
scas
add
mov
add
mov
cli
xchg
mov
sahf
mov
dec
in
iret
xchg
sbb
sbb
hlt
inc
out
xchg
xlat
push
idivb
sub
pushw
call
pop
xchg
fists
cmp
mov
mov
gs
sub
xorl
imul
sbb
add
inc
xchg
xchg
les
mov
sub
push
dec
gs
pop
cmp
inc
xchg
add
xor
bound
xchg
sub
cli
sub
outsb
pop
insb
fwait
insb
lret
inc
les
idivb
cmc
jge
outsb
mov
bound
xor
inc
fdivrl
pop
pop
jne
mov
mov
dec
cmp
jae
pop
mov
push
je
in
lock
push
sbb
dec
lea
testl
push
lret
jnp
je
add
cmp
push
stc
adc
stos
out
pop
inc
xchg
push
xchg
js
mov
sbb
in
repnz
fildl
add
add
cltd
ja
daa
xor
jne
add
lods
add
add
outsl
pop
jbe
cmpsb
jbe
mov
add
into
sarb
adc
cmpsb
decl
sbb
or
dec
xchg
jnp
mov
pop
stos
fld
xor
in
push
aas
cmpsl
les
pop
and
pop
aaa
iret
es
push
jae
xchg
push
into
inc
sarl
cmpsl
out
mov
out
in
inc
cs
adc
pop
bound
lea
into
ljmp
lea
mov
jle
das
imul
lret
js
jge
adc
cmp
and
jecxz
fldl
int3
inc
mov
pushf
aad
push
xchg
sbb
xchg
pop
xor
xor
add
push
loopne
mov
hlt
loope
xor
loope
pop
sub
pushf
sbb
or
mov
xor
addl
xor
dec
fcomps
imul
mov
repnz
pop
pusha
js
cmp
jnp
lock
xor
cmpl
pop
push
dec
lahf
arpl
mov
adc
sbb
or
inc
es
fisubrl
inc
enter
mov
push
add
es
daa
stos
xchg
inc
xor
inc
repnz
mov
setns
pop
mov
ja
jecxz
pop
adc
sub
imul
xchg
adc
pop
fists
stc
std
adc
fwait
pop
xor
loope
dec
fdivs
push
inc
mov
ja
outsb
adcl
scas
int3
in
mov
in
arpl
xor
mov
and
cmp
add
scas
dec
aaa
fcomps
fidivs
insb
dec
inc
mov
adc
fcom
pop
clc
loopne
ret
loopne
fsubrl
add
mov
lcall
lock
into
mov
cmp
dec
out
imul
dec
and
in
adcb
cwtl
subb
add
lods
and
das
orl
or
in
inc
imul
dec
cmc
xchg
aas
inc
adc
mov
imul
sub
push
mov
adc
pop
xchg
leave
sbb
jo
or
outsb
jno
add
xchg
gs
fucomip
aam
xchg
cltd
xchg
fdivs
dec
or
xchg
rcrb
lret
inc
nop
dec
and
cmc
jp
mov
and
push
das
int3
nop
xlat
clc
jge
lods
ror
into
jp
call
ffreep
sbb
push
les
xchg
scas
cli
add
mov
pop
mov
fs
movsb
and
mov
aad
in
test
jno
mov
adc
xchg
xchg
test
fbld
push
push
cltd
fmul
in
pop
pop
mov
dec
push
int
sub
push
insb
cmc
movsb
arpl
adc
jecxz
outsl
push
imul
mov
dec
fwait
adc
xchg
fs
push
into
outsb
and
mov
fs
fidivrl
mov
and
int3
xor
push
jl
mov
mov
and
fistps
mov
ja
push
ljmp
xchg
rcrl
es
lods
loope
lahf
aam
add
lds
fs
jg
jb
ljmp
add
sbb
xor
in
leave
pop
cmp
pusha
jmp
xor
loope
aas
call
cmpsb
pusha
fstl
lret
into
sbb
mov
lret
add
add
iret
lahf
push
loop
aad
jb
add
dec
add
lods
add
add
addb
fadds
mov
movsl
in
lds
lds
mov
lahf
xchg
inc
in
hlt
xchg
jge
sub
jle
rcrl
push
js
imul
xor
ret
std
cmp
xchg
cmp
dec
lods
mov
push
push
pusha
nop
pop
sub
lock
push
mov
mov
mov
scas
shll
das
pop
mov
jo
lret
adc
and
pop
xchg
jle
sbb
mov
adc
or
gs
imul
scas
jae
adc
jne
inc
or
lock
adc
xchg
in
mov
xor
dec
sub
cmp
fs
les
sbb
inc
adcb
cmp
adc
xor
adc
aam
roll
imul
sub
push
fadds
mov
dec
cmp
xor
addr16
jmp
xor
cli
hlt
popf
inc
pop
dec
pop
out
ds
and
push
or
add
pop
xchg
jae
xor
inc
cmpsl
es
lahf
pop
call
shll
mov
xor
pop
dec
test
enter
xor
mov
jecxz
insb
call
addl
jae
sub
pop
data16
cmp
sbb
inc
ficoms
pop
add
mov
mov
loope
push
sub
xor
outsb
repnz
adc
and
out
push
pop
jp
sub
dec
mov
fsts
xlat
stc
sbb
pop
les
loop
iret
notb
cld
lods
push
mov
mov
fbld
push
movsb
out
sbb
dec
arpl
sbb
clc
gs
mov
push
or
arpl
sub
fs
iret
and
xor
pop
and
orb
mov
jmp
enter
repnz
rorb
fwait
pop
and
js
cld
mov
mov
ret
gs
mov
pop
adc
scas
aaa
lds
movsl
fisttpl
fldenv
jecxz
cmp
pop
add
sbb
scas
les
pop
test
mul
jge
ja
movsb
cs
or
push
push
jo
push
fldlg2
fnstenv
jl
gs
sahf
pop
gs
push
lods
arpl
pop
xchg
lcall
jns
in
add
loope,pn
xor
cld
dec
sub
jge
mov
mov
mov
dec
sub
mov
leave
enter
fmull
adc
ja
mov
test
add
inc
and
pop
dec
fistl
push
add
xlat
test
iret
push
aad
or
jle
repnz
out
sub
in
addps
xchg
js
shll
lods
or
jge
sbb
repz
jmp
or
sub
mov
std
xor
inc
loopne
iret
and
sub
mov
pop
xchg
imul
xchg
sbb
ret
xor
lock
mov
and
dec
push
ljmp
addr16
scas
mov
or
psubd
dec
xchg
in
jle
scas
sbb
jmp
dec
jecxz
imul
scas
pop
sbb
les
add
bnd
sub
jbe
cmp
cmpsl
iret
jp
sbb
out
lcall
jg
push
jecxz
frstor
add
lods
add
add
test
insb
and
int3
das
or
pop
or
in
cmp
adc
test
inc
xchg
mov
mov
cld
jle
or
pusha
xor
popf
and
mov
sub
popa
push
adc
sub
sbb
into
push
sbb
mulb
nop
test
sub
mov
sbb
jmp
mov
fmull
push
addr16
jp
push
ja
cwtl
mov
cmpsl
inc
test
movsl
mov
inc
mov
jmp
xchg
xchg
mov
mov
sub
pusha
sub
sbb
mov
cmp
dec
push
inc
enter
cs
mov
xchg
and
cmp
xchg
xchg
mov
sub
mov
pop
mov
punpckhbw
jae
clc
addr16
dec
inc
pop
mov
loope
xor
xchg
out
mull
out
int3
shlb
cmp
sub
pop
mov
imul
pop
mov
add
shr
xor
and
cmpsb
stos
dec
xchg
cltd
mov
lret
mov
je
lret
pushf
lds
and
outsb
rcrb
adc
hlt
jl
adc
xlat
repnz
call
repnz
and
testl
lods
sahf
adc
int
dec
mov
xchg
shrl
int
mov
adc
cmp
ret
push
mov
add
les
inc
stos
push
cmp
shll
movsw
adc
test
addb
mov
mov
adc
lock
or
push
fdivrs
test
xor
or
pusha
mov
les
popa
adc
nop
xchg
inc
jb
fsubrl
pop
sarb
and
xchg
nop
pop
cmp
lahf
mov
aam
xor
add
sub
mov
or
sbb
jp
fdiv
xchg
into
sub
jmp
mov
les
stos
jb
icebp
add
mov
cmp
pop
jg
aad
sub
stos
lret
jecxz
outsb
dec
mov
clc
cmpl
aad
dec
push
aad
cmp
xchg
mov
inc
insb
int
jns
addr16
mov
icebp
xchg
das
loope
ja
jmp
or
insb
subb
data16
loope
test
pop
into
or
push
movsb
and
cmp
inc
adc
dec
jge
mov
mov
pop
xchg
sahf
inc
repz
pop
fistps
jno
xchg
dec
pop
loope
mov
cmp
hlt
call
and
xchg
addr16
xchg
push
outsl
iret
mov
inc
test
pop
aaa
loop
mov
shl
repz
xchg
sub
push
mov
leave
leave
cmc
inc
movsb
sub
cwtl
add
fs
sbb
xor
mov
ficoms
imul
cwtl
out
push
push
sbb
ret
pop
jmp
sbb
cmp
outsl
insb
aas
add
inc
stc
mov
fistpl
repz
xor
xor
ss
jg
ja
push
hlt
call
lahf
into
into
cmp
das
mov
jbe
xor
mov
sbb
mov
xor
mov
xor
test
nop
xchg
xor
jg
leave
cmp
jae,pn
sbb
add
jp
lock
addb
enter
mov
cmc
es
mov
cld
xlat
dec
call
adc
cli
push
jns
add
lods
add
add
test
into
mov
inc
push
dec
out
mov
pop
xchg
fcomi
sub
scas
jg
dec
jns
fstpl
cs
jmp
mov
cmc
adc
stos
jo
jo
nop
cmpsb
insl
pushf
jle
movsb
jbe
mov
js
cwtl
inc
scas
sbb
daa
es
push
pushf
cmp
xor
stos
leave
mov
nop
cmp
je
movsl
add
pop
outsb
sbb
xor
pushf
fst
adc
cwtl
push
xchg
mov
inc
sbb
test
scas
mov
pop
mov
mov
xchg
les
std
xlat
test
jle
sub
mov
push
cmp
icebp
xlat
and
add
jmp
or
or
pop
push
lret
lock
pop
mov
inc
shr
inc
daa
test
xchg
sbb
in
mov
pusha
lods
add
out
dec
dec
jg
lock
shlb
mov
aaa
scas
loopne
pop
imul
push
push
fwait
and
out
mov
xlat
and
out
or
loop
rcll
add
lods
dec
test
gs
fisubrl
fcomip
sahf
push
in
cmp
mov
push
pop
xchg
or
or
cld
loope
and
fbstp
push
or
stc
push
push
dec
lahf
pop
jl
fldl
push
pop
pushl
inc
cmp
stos
fisttpl
sbb
xor
adc
iret
scas
popf
cltd
xchg
mov
ds
mov
xchg
jge
aad
mov
sub
xor
leave
out
or
xchg
test
and
ret
push
cmc
mov
sbb
add
out
xor
jae
mov
in
pusha
fbld
xor
pop
sbb
ficoml
repnz
insl
fwait
sub
adc
or
test
cmp
sbb
stc
push
lcall
add
subb
movsb
cld
test
xchg
and
in
jne
inc
ljmp
adc
add
arpl
adc
cltd
and
dec
jle
out
xchg
sbb
mov
fidivrs
enter
xchg
push
jo
cmp
movsl
jns
pop
jl
mov
mov
dec
dec
pop
cld
dec
cmpsl
jp
lock
push
add
test
fs
adc
and
das
cmp
cmp
bound
lods
mov
les
lahf
pop
repz
fcomps
lods
into
mov
pop
dec
mov
sbb
xor
mov
lcall
and
sahf
pop
push
ljmp
xlat
leave
repz
dec
xchg
insl
sbb
or
enter
inc
inc
dec
cmc
xchg
add
cmp
ds
jne
jl
test
pop
inc
cs
mov
cld
dec
dec
add
cltd
loopne
fldcw
pusha
je
xor
aas
push
rep
cmp
jno
popa
jmp
out
daa
daa
xchg
mov
sbb
push
enter
fmull
gs
sub
leave
stos
jbe
mov
and
or
dec
sbb
sub
jbe
cwtl
enter
fsubl
int
mov
mov
push
sbb
lock
push
adc
outsb
imul
jbe
arpl
in
pop
inc
cmc
shlb
fisttpll
das
mov
add
inc
out
jnp
mov
cmp
and
add
add
aaa
iret
in
xlat
push
mov
fsub
dec
dec
nop
stos
pushf
pop
lds
scas
sub
mov
sbb
and
jl
cmp
pop
xor
repnz
mov
adc
rcl
or
cmp
mov
mov
inc
sbb
push
push
inc
js
add
cmp
adc
stc
shl
fstpl
xchg
out
lcall
gs
jp
mov
jg
mov
je
push
mov
inc
imul
lock
cmc
and
insb
subl
xchg
adc
pop
sbb
push
pusha
push
push
jge
mov
incl
adc
and
cvtdq2ps
out
push
les
inc
pop
push
sub
lahf
adc
push
push
cmp
inc
in
imul
fwait
ret
lret
clc
fdivl
ss
mov
cld
mov
push
enter
mov
pop
push
inc
jb
push
inc
lret
xor
inc
add
mov
fs
fs
loope
sahf
das
rorb
movsl
and
mov
cmp
movsl
add
or
ja
add
mov
scas
cmp
jecxz
add
jb
mov
mov
nop
add
fwait
push
add
mov
movl
lret
xor
out
in
jge
shll
dec
in
push
in
mov
sub
ljmp
daa
push
inc
cmpsb
cmp
cltd
lea
mov
fpatan
lods
xchg
sbb
into
ja
jg
stc
jecxz
sahf
xchg
inc
mov
fldt
pop
mov
pop
jmp
popf
data16
mov
add
mov
shrb
mov
sbb
mov
sub
sub
xchg
hlt
rorb
rcrw
cmp
mov
lcall
push
daa
andb
cmp
ljmp
icebp
dec
iret
cmp
cli
mov
mov
xchg
inc
enter
sar
add
dec
xchg
pop
scas
pop
divl
call
ss
leave
mov
cltd
push
pop
out
sbb
add
aas
dec
fisubrs
mov
pop
negl
fistl
sub
pop
mov
jo
outsb
adcl
jno
in
repz
cmp
pop
testl
adc
jne
and
xchg
xchg
cmp
mov
sbb
push
jbe
aaa
hlt
or
mul
sahf
ret
jne
insl
popa
stos
fmuls
mov
enter
gs
vminsd
nop
pop
popa
addb
cmpsb
sbb
mov
hlt
pop
mov
xchg
das
and
adc
inc
jo
adc
mov
adc
rcl
sahf
mov
pop
sub
push
orl
lret
xchg
adc
add
pop
or
xchg
cs
lods
inc
mov
lret
or
xchg
ja
iret
xor
mov
pusha
inc
andb
jge
jecxz
inc
fs
or
rolb
push
sub
and
push
pushf
sbb
mov
sub
inc
lahf
ljmp
jmp
pop
fldenv
pop
jmp
repz
stos
outsb
push
mov
fidivrl
push
cmp
icebp
int
mov
mov
popa
daa
into
push
sub
adc
add
add
jg
jns
pop
sbb
movsb
loopne
pop
add
lods
add
add
fs
movsl
jl
in
cmpsl
mov
ss
sahf
xchg
lds
in
aad
push
mov
call
xor
call
outsl
mov
orb
es
clc
test
pop
add
je
or
enter
mov
inc
xchg
outsl
js
notl
stc
mov
fadd
sub
add
pop
push
xchg
rcr
flds
hlt
ret
gs
andb
mov
ss
mov
or
outsb
xor
enter
mov
xchg
std
jb
fwait
ret
jge
fdivl
jl
fisubs
and
imul
out
jp
cli
mov
jns
imul
shll
repnz
cltd
cmp
add
add
pop
movsl
mov
sbb
repnz
sti
scas
cmpsb
arpl
pop
push
movl
dec
std
popf
jns
test
es
push
push
mov
adc
jns
jae
lret
cmp
out
cmp
cmpsl
out
pop
adc
push
xor
rol
dec
mull
mov
add
push
sub
inc
cmp
jg
cmp
mov
and
insb
movsb
sub
and
loop
scas
aas
cld
sub
aad
lcall
cli
sub
loope
mov
cmp
iret
and
xor
dec
sbb
push
mov
movsb
and
sbb
out
xchg
filds
add
mov
dec
bound
push
fs
mov
js
adcl
push
imul
enter
xor
outsb
jmp
icebp
bound
les
in
sbb
jbe
orb
jg
sub
lds
aaa
add
inc
cmp
jl
pop
pop
out
add
sar
sbb
or
push
cmp
leave
dec
dec
jg
cmpsb
pop
pop
jmp
lds
cmp
xchg
pop
push
xchg
icebp
lahf
out
ja
fcmovb
add
xchg
xchg
cmp
xchg
or
in
jge
cmp
stos
aas
push
sub
xor
popa
push
int3
out
jecxz
inc
ds
inc
repz
pop
pop
sbb
test
add
sti
mov
dec
sub
xchg
xchg
jae
dec
shlb
test
outsl
or
sub
add
dec
aad
fs
mov
add
pop
std
in
mov
shlb
sub
fcompl
push
mov
mov
mov
pop
mov
mov
sahf
mov
cli
mov
fimull
imull
jl
pop
shll
and
icebp
outsb
int
cmovns
lea
inc
add
movsb
jbe
xor
push
ja
cmpsb
lods
sbb
xlat
dec
frstor
cmp
daa
cmp
jne
mov
lret
roll
out
lds
sahf
push
and
or
push
inc
push
jmp
adc
in
addr16
test
jmp
mov
sub
cmpsl
mov
arpl
jno
jae
mov
jne
mov
adc
shrb
in
sub
fisttpl
out
addb
xlat
gs
lea
adc
cmp
gs
and
dec
jg
lods
jbe
add
add
mov
notl
pop
dec
jmp
loopne
pop
add
lods
add
add
inc
dec
jo
scas
xchg
xor
lret
dec
mov
xor
cmc
mov
insb
imul
lahf
cmpsl
loopne
test
or
jae
imul
pop
repnz
or
es
cmp
mov
mov
xchg
sub
sbb
adc
or
push
sbb
addl
aad
add
inc
xlat
fsts
lret
xchg
cmp
or
cmc
mov
fcomi
int3
repz
inc
sahf
adc
movsl
xchg
fs
dec
cli
loopne
outsb
dec
or
es
imulb
push
rclb
mov
les
in
push
ret
dec
fwait
inc
out
mov
fsubrl
fdivrs
call
cmpsb
fs
jne
mov
xchg
xor
lcall
outsl
jbe
inc
cmc
rcrb
add
xor
mov
addr16
lret
testb
pop
push
cmp
lock
xor
jb
pop
ret
scas
dec
cmp
fdivrs
dec
repnz
fwait
orl
ja
gs
xorb
add
pop
mov
add
sarb
adc
or
adc
into
push
jge
cli
mov
mov
rcll
pop
in
imul
shll
ljmp
push
mov
mov
sbb
cmpsb
cmp
adc
mov
pushf
lahf
out
adc
lods
ficomps
shlb
xor
xor
aam
pop
jmp
jo
xor
pop
push
mov
jnp
sbb
cld
js
jg
mov
mov
es
rcr
shll
xchg
pop
in
sub
pushf
divb
out
dec
daa
scas
ds
loope
xchg
xchg
xorb
fists
fsubr
loop
ss
std
fnstenv
insb
xor
xor
shrb
jle
push
jg
pop
mov
in
fmulp
inc
xor
ret
mov
mov
add
leave
or
sbb
iret
xor
fistl
stos
sub
pop
push
popa
in
shlb
hlt
or
std
jne
loop
jge
outsb
jg
push
xchg
add
xchg
or
repz
add
pop
inc
jle
mov
bound
outsb
insb
mov
ret
shll
add
or
bound
lret
faddl
lock
sahf
sti
mov
xchg
xchg
inc
jnp
enter
aas
push
xchg
outsl
xchg
cmp
gs
sbb
adc
cmp
scas
roll
rcrl
jecxz
push
jp
mov
outsl
cmp
lods
cmp
mov
lds
push
mov
out
les
dec
cld
outsb
sub
scas
add
mov
push
push
out
fcmovne
mov
pop
popf
fsubr
ja
or
addb
in
push
mov
sub
mov
pop
movsl
stos
gs
push
lods
stos
push
cmp
dec
fisubrs
cmp
std
sbb
push
and
add
adc
lahf
scas
ljmp
push
mov
popf
add
jns
xchg
mov
negl
or
inc
sti
ss
jg
jo
and
xchg
not
pop
cmpsl
cmc
cmp
insb
or
loopne
push
insb
cmp
mov
fucom
insl
adc
bnd
loopne
jno
in
push
push
adc
les
cltd
jns
int3
fdivl
jmp
rol
ret
and
mov
sub
cs
sub
sti
lods
or
jmp
sahf
sub
add
stos
mov
push
mov
scas
int
fwait
xchg
cwtl
mov
in
mov
push
adc
jl
data16
pop
inc
int3
sbb
iret
xchg
mov
inc
or
fwait
xchg
rcrb
out
cmpsl
pop
cmp
mov
mov
addl
mov
test
outsb
push
ds
outsl
pop
dec
lods
or
push
and
ds
lock
test
daa
int3
add
sub
mov
in
js
push
or
push
mov
push
sub
jecxz
pop
lret
ds
jo
xor
jle
pop
sub
sub
mov
jbe
xchg
sub
data16
jb
push
call
xor
iret
enter
mov
dec
cmp
popf
push
push
inc
out
fiaddl
decb
sub
rcr
aam
push
insb
pop
outsb
or
dec
add
mov
add
jns
stos
mov
xor
mov
xor
inc
loopne
xchg
cld
and
and
jmp
sbb
pop
fsubrs
int
ds
insb
ffreep
dec
int3
fwait
imull
sub
in
jge
into
imul
lcall
fs
call
mov
icebp
lods
outsb
and
dec
mov
arpl
sbb
push
mov
pop
lock
je
cs
push
mov
cmp
dec
mov
es
sub
mov
xor
sub
and
adc
call
repz
sbb
mov
insb
clc
jnp
mov
bound
into
lods
lea
scas
cmpsl
mov
aad
into
push
jmp
int3
jbe
and
fwait
xor
push
lcall
xor
adc
fnstenv
scas
push
cltd
inc
inc
ret
add
pushf
fs
ficoml
dec
push
mov
lcall
mov
inc
and
fstpl
lret
cli
dec
cmp
push
pop
aam
sub
out
ljmp
mov
call
movsl
lods
mov
lods
adc
dec
and
jle
in
outsb
fwait
mov
je
add
bound
mov
imul
mov
insl
cmpsb
push
adc
xchg
outsb
sbb
sbb
jle
adc
out
jp
xorb
cmp
rcll
pop
mov
dec
mov
mov
cltd
lahf
push
ljmp
mov
jg
mov
sbb
mov
js
jbe
insb
rolb
into
inc
or
repnz
jbe
inc
sarb
adc
adc
pusha
pop
icebp
dec
jns
xor
roll
inc
xchg
mov
lcall
cmp
xchg
inc
sub
push
and
push
push
pop
push
ret
jmp
cmpsl
sbb
pop
push
scas
mov
add
push
cmp
sbb
jp
fwait
mov
add
dec
lods
dec
jb
inc
es
cmpsl
test
add
pop
shlb
sbb
daa
movsb
inc
push
xor
into
lods
aam
iret
dec
cmp
aam
xor
inc
lods
daa
mov
mov
flds
fwait
adc
jle
in
push
cld
cs
repnz
add
xor
pop
pop
dec
aad
add
lods
add
add
or
inc
imul
mov
xor
jge
jnp
stc
test
xchg
jmp
test
data16
icebp
xchg
sub
nop
cld
ret
shll
inc
and
and
cmc
dec
lretw
xor
mov
imul
adc
fcmovb
xor
xchg
stos
xor
xorb
mov
jp
sti
jle
inc
push
cmpsl
cmp
loop
dec
xchg
adc
mov
idivl
cmpsb
dec
push
xor
push
dec
insl
inc
cld
lock
int3
sub
arpl
sbb
iret
jle
sub
movsl
mov
rorb
sub
enter
sbb
sub
push
sub
loop
stc
call
pop
lret
sbb
outsl
mov
inc
movsl
mov
sbb
mov
jns
cmc
mov
mov
pop
loop
push
scas
dec
mov
jmp
scas
xchg
adc
adc
stos
mov
add
jecxz
in
mull
xor
rclb
cwtl
pop
pushf
sarb
insb
inc
jne
addr16
loope
stos
mov
sub
cmp
add
outsl
dec
dec
sub
adc
sub
or
mov
adc
jae
dec
lods
les
xorb
cmp
mov
pop
add
das
lock
push
xor
inc
dec
or
push
movsl
mov
imul
add
jo
cmp
clc
arpl
ja
cmpl
mov
js
xor
or
repnz
popa
fidivrs
mov
cltd
mov
xchg
daa
dec
lods
les
jmp
mov
add
imull
mov
iret
in
sub
vcvtsd2ss
inc
or
jno
neg
add
es
imul
out
jno
insl
cld
scas
out
in
gs
jne
shll
or
pop
lret
imul
imul
jae
sub
sub
insb
push
movsb
jge
xor
and
arpl
pop
shr
imul
fnstcw
pop
mov
dec
push
xor
push
add
pop
xchg
stc
pop
mov
addb
xor
hlt
sahf
pop
in
arpl
shlb
cmp
das
push
es
mov
icebp
lds
into
popl
mov
cmp
out
mov
push
cmp
mov
jg
iret
jno
xchg
sub
fimuls
add
pushf
or
shrb
int
mov
jne
pusha
xlat
popf
pop
jb
aam
and
rorl
frstor
pop
loopne
push
js
push
add
pop
inc
sarb
mov
das
in
lea
push
cs
dec
fists
in
mov
outsb
mov
negb
dec
out
ljmp
sti
js
pop
and
je
out
push
xor
jo
xchg
pop
sub
and
fisttpll
movsl
test
imul
cmp
test
xchg
cpuid
sub
notb
insl
xor
dec
xchg
xor
dec
jmp
mov
ds
aaa
lret
mov
mov
out
roll
xor
push
stos
pop
mov
pop
cmp
mov
enterw
les
in
lret
push
test
pop
lods
lret
iret
jmp
imul
add
add
add
add
mov
inc
mov
subl
add
jne
xchg
bound
fimull
test
rcll
mov
pop
adc
mov
dec
sbb
cmp
xchg
in
mov
enter
fcmove
lods
in
dec
call
jp
rcrl
pop
mov
mov
cmp
out
mov
lods
lods
add
daa
mov
mov
xor
inc
mov
mov
movd
in
jnp
mov
xchg
mov
cld
inc
mulb
or
cmpsb
dec
xchg
mov
loopne
sahf
sub
sbb
enter
and
in
cmp
sub
stc
jg
inc
iret
lcall
pop
xchg
push
jne
lcall
orb
aam
hlt
scas
ud1
pop
in
mov
stos
rol
rclb
je
add
cwtl
jnp
cmp
dec
sbb
and
lahf
pop
fwait
sbb
pop
cli
lea
sti
shr
or
sbb
add
loop
xlat
lcall
pop
or
adc
inc
jnp
add
mov
outsl
bound
cmp
push
dec
sub
ficompl
lret
or
cmc
jmp
mov
jp
mov
mov
inc
adc
imul
sarl
fistpll
daa
fisttps
daa
adc
fs
jae
aaa
rcrb
and
out
fists
sbb
xorb
push
in
icebp
out
adc
cltd
test
int
inc
popa
push
shr
mov
lods
and
daa
dec
out
add
out
adc
dec
cmpsl
pop
cmp
xor
mov
push
dec
add
into
xor
cwtl
mov
xchg
addb
mov
or
push
xor
cmp
stos
int
mov
and
out
xor
mov
aam
inc
xchg
sub
out
out
stos
xchg
and
ret
les
bound
sarl
cmpsl
push
pushf
arpl
arpl
cmc
data16
cmc
dec
mov
jl,pn
pop
pop
push
shlb
push
jno
inc
inc
inc
roll
sub
push
jp
cmp
inc
mov
out
repnz
jmp
mov
sub
loop
pop
fwait
lods
dec
bnd
cld
mov
rclb
pop
xchg
mov
out
aas
push
sbb
mov
lds
rcrl
cmpsb
push
mov
sbb
mov
adc
inc
roll
push
test
shlb
jecxz
xchg
jne
cli
dec
adc
popf
push
push
mov
sub
jbe
pop
cmp
outsb
mov
pusha
adc
add
rolb
adc
scas
in
pusha
pop
js
xchg
das
or
and
jb
cmp
les
out
mov
nop
subb
xor
push
pop
cmp
aas
dec
mov
and
sbb
inc
pop
in
push
and
xlat
jbe
lahf
outsl
or
dec
jmp
dec
jmp
adc
mov
mov
fidivl
mov
dec
push
lcall
insb
outsl
adc
movsl
xchg
popf
push
lds
dec
data16
mov
xor
pop
mov
in
add
cld
enter
adc
loope
xchg
mov
bound
inc
repnz
aaa
mov
in
shll
ss
pop
movsl
inc
ret
rol
movsl
mov
sbb
xor
and
repz
fcmovnb
pop
sbb
scas
cmp
insl
add
lods
add
add
mov
mov
and
push
lahf
push
aam
aas
dec
stos
maxps
ja
arpl
js
add
adc
test
loop
mov
mov
imul
jbe
add
imulb
pop
xchg
jp
or
inc
in
jne
adc
jle
dec
add
adc
lds
jmp
dec
xchg
sub
dec
fdivrl
pusha
jecxz
or
fwait
push
push
mov
mov
movsb
inc
cmp
xchg
mov
mov
jo
cltd
and
lret
mov
imul
sti
test
mov
std
push
adc
mov
not
and
pop
sbb
ds
clc
das
pop
mov
sub
add
pop
mov
arpl
xor
xchg
fst
push
imul
pop
out
lock
or
sti
inc
cmp
fadds
out
mov
sub
cltd
or
xchg
xchg
ljmp
inc
sbb
inc
addr16
scas
insl
ds
pushf
fadd
mov
mov
outsl
dec
iret
and
cli
shlb
jb
dec
add
imul
push
loope
scas
add
sarb
icebp
pop
daa
xchg
dec
imul
mov
and
icebp
repz
xchg
sbb
lds
lret
adc
ret
xchg
push
xor
mov
mov
outsl
xor
sti
xor
jno
pop
and
stos
xchg
sub
push
icebp
push
repnz
mov
mov
lahf
mov
or
stc
mov
flds
bound
movl
lds
inc
sub
jae
aam
insl
inc
sub
mov
push
or
mov
lret
sub
push
jg
jecxz
stos
pusha
andl
stc
push
xor
stc
push
inc
xchg
pop
in
leave
outsb
sub
cmp
lret
xchg
lret
sub
std
push
jb
mulb
sbb
sub
rorl
popa
loope
xor
mov
dec
mov
insb
lret
loope
xor
mov
or
rolb
inc
inc
jae
out
mov
xchg
pop
sbb
xchg
fstpl
cmpsb
ljmp
and
ret
iret
pusha
loop
test
add
mov
mov
leave
xchg
scas
sub
div
cmp
sbb
data16
xor
mov
rorl
push
xchg
or
and
cmc
mov
daa
jne
xor
loope
out
jl
mov
loop
sti
mov
rcll
and
or
bound
or
add
pop
mov
lret
rclb
mov
or
pop
icebp
mov
adcb
adc
faddl
stc
sbb
cltd
xchg
pop
es
mov
cmc
cld
add
std
inc
in
xor
je
testl
hlt
test
js
mov
stos
imull
xor
aad
inc
scas
inc
cmc
aas
sbb
push
push
popf
mov
shlb
mov
pop
mov
pop
dec
sbb
jbe
or
cmpsl
mov
cmp
xlat
jge
dec
arpl
cmpsb
jp
and
xchg
outsl
inc
add
inc
daa
sti
mov
push
inc
cwtl
mov
lods
add
add
sbb
fdivrs
jg
jecxz
aas
in
jno
cwtl
icebp
jns
imul
and
popf
adc
jge
inc
sub
into
push
mov
cli
mov
inc
popl
add
pop
insl
sub
mov
das
mov
pop
scas
fdivp
insb
sbb
sub
lea
and
sbb
adc
lret
lea
xchg
lret
popf
push
xorl
dec
and
push
test
jp
lods
adc
inc
sbb
popf
or
lret
pop
ficoms
xor
ret
fcomip
mov
fnsave
sub
test
mov
outsl
je
mov
insl
arpl
sbb
lea
mov
sub
push
shrb
jbe
dec
xchg
inc
jo
dec
mov
pop
and
pop
out
test
add
xchg
aad
mov
ss
pop
imul
xor
jns
mov
call
int
sarl
xchg
push
jp
das
or
xor
push
adc
pop
push
push
mov
mov
cmp
stos
lds
pop
xor
imul
xchg
inc
popf
or
lea
adc
sub
jmp
pop
mov
or
or
dec
jo
push
jbe
stc
or
cmc
mov
and
ret
das
loop
jp
push
test
mov
push
or
cmc
rclb
mov
sbb
or
in
arpl
arpl
sub
aam
jle
push
pop
pop
test
jp,pn
cmp
js
jl
je
test
mov
adc
cmpsb
pop
pusha
mov
int
lds
xor
insl
aas
mov
sub
dec
sbb
mov
xor
xchg
int3
imul
push
jmp
js
or
out
testb
scas
test
in
pop
mov
insb
aad
loop
mov
add
jbe
scas
fistpl
out
mov
pop
adc
loop
pop
scas
push
dec
sbb
stc
pusha
jg
jo
pop
mov
mov
dec
aaa
sbb
xchg
sub
jg
rcll
or
ds
js
test
mov
movsl
xchg
jae
cmpsl
xchg
out
jle
loopne
xor
push
sub
jnp
dec
lret
jb
fidivrl
insl
adc
add
sbb
or
xor
xor
or
ja
mov
pop
cld
int3
imul
sub
push
les
add
dec
add
orb
and
js
pop
jmp
pop
roll
inc
push
dec
jns
call
lock
sti
sahf
das
repz
sub
xor
out
cmpsl
xchg
push
stos
vextractf32x4
inc
je
dec
cmp
push
call
pop
dec
sbbb
dec
aaa
add
into
pusha
insb
je
jno
dec
test
stos
push
pop
call
mov
cli
inc
jne
push
das
jae
sbb
cmpsb
movsb
mov
or
insb
mov
mov
sbb
popf
cltd
pop
xlat
scas
notb
add
mov
aas
sysexit
pop
push
inc
cmp
sbb
je
add
fwait
movsb
scas
in
cmc
loopne
inc
cltd
ret
adc
mov
fsubrs
mov
cs
inc
jo
clc
add
pusha
sar
sbb
rorl
mov
leave
mov
sbb
pop
inc
xchg
mov
int3
cmp
sub
sbb
ss
mov
dec
ds
fistpll
sar
inc
sub
rcl
push
jmp
out
test
scas
add
addr16
sub
jp
das
xchg
jb
aam
in
or
sub
jae
or
add
scas
rcll
pusha
cmpsb
jecxz
mov
mov
pop
sub
ret
xlat
dec
or
fldt
xchg
or
shrl
out
cmpsb
in
xchg
hlt
daa
stos
adc
out
cmp
mov
or
push
mov
addr16
adc
idivb
cltd
outsb
inc
stos
sbb
daa
jg
xlat
inc
popf
pop
xor
outsl
fsub
repz
mov
cmp
ret
dec
icebp
dec
mov
fwait
push
bound
inc
push
jns,pn
enter
cmp
xor
mov
and
push
or
scas
out
jl
jne
out
pop
xor
movsl
mov
imul
fs
and
xchg
jno
xlat
or
pusha
ss
sbb
fwait
mov
and
mov
xchg
xor
inc
loope
iret
ljmp
lock
aad
pushf
cmp
inc
fists
orl
stos
mov
dec
into
movsl
sbb
cmp
jne
mov
cmc
ret
and
or
dec
add
rcrl
push
icebp
sbb
lcall
clc
pusha
sub
lcall
inc
adc
cmp
push
call
es
rorl
adcb
push
outsl
icebp
mov
imul
adc
mov
fs
shlb
je
sbb
fsubrs
inc
into
adc
pop
sbb
jb
dec
mov
aas
call
ljmp
push
sub
mov
in
xchg
inc
std
dec
mov
sbb
shlb
into
mov
testb
xchg
inc
ljmp
fsubp
fisubl
out
push
cmc
aas
js
int
jbe
fldcw
les
mov
mov
jns
push
insl
out
aam
jecxz
pop
pop
cmp
pop
sub
adcl
adc
mov
xchg
pop
xor
jne
inc
push
stos
add
dec
es
pop
xor
scas
inc
les
ljmp
push
les
xor
loop
out
xchg
and
mov
xlat
sti
adc
push
pop
inc
pop
cmp
out
addr16
xor
sbb
dec
cld
xor
xchg
mov
sbb
lahf
stc
xor
outsb
dec
addl
test
mov
sub
outsb
repnz
jge
push
and
cmp
hlt
lock
lea
mov
mov
mov
pop
add
lahf
sub
sarl
roll
jl
neg
adc
ja
pop
and
adc
out
jl
pop
inc
ss
push
icebp
cmp
cmc
xchg
dec
jbe
lds
imul
lods
add
scas
xchg
repz
xchg
xor
pop
popf
cmp
add
mov
sbb
push
dec
enter
sbb
mov
pushf
sti
jnp
sarb
sub
add
add
repz
push
cmp
cmp
xor
xor
add
test
adc
pop
cmp
movsb
mov
pop
call
jle
xchg
jne
fstpt
mov
push
sub
pop
wbinvd
xchg
out
dec
cmpsb
mov
insl
shlb
sub
dec
jl
enter
pop
in
adc
pop
sbb
xor
push
cli
sub
pop
mov
dec
or
inc
inc
add
mov
adc
lret
lods
pop
mov
mov
sar
fdivl
and
es
gs
dec
adc
lcall
pop
sbb
cmp
loopne
in
sbb
sub
xor
in
inc
movsb
loop
xchg
addl
xchg
push
iret
ja
cmpsl
xor
mov
inc
mov
dec
in
gs
mov
pop
repz
mov
sahf
arpl
sahf
push
jmp
push
test
fdivrs
mov
sub
test
or
dec
xchg
xor
mov
jmp
add
dec
or
sti
aaa
pop
dec
iret
pop
in
das
daa
sbb
test
mov
jmp
out
cmp
leave
imul
add
repz
leave
jns
mov
push
mov
jmp
fadd
and
fdivr
test
jno
pushf
or
mov
test
unpckhps
dec
movsb
shlb
in
and
test
aam
in
sub
pop
shrb
inc
scas
xchg
jp
daa
movsl
shll
mov
mov
cwtl
xchg
cmc
int
jae
popa
jg
fldlg2
xor
jae
loop
cmp
xor
cmp
into
and
subl
dec
mov
iret
daa
in
push
pusha
test
push
out
dec
and
inc
adc
mov
aas
pop
lret
pop
or
sbb
sub
xor
dec
jnp
idiv
add
jb
outsl
aad
xchg
jp
aad
xchg
sub
jae
ljmp
outsl
imul
andl
clc
sbb
rcl
adc
pop
jno
cmp
push
mov
jno
and
mov
inc
adc
clc
es
ss
push
mov
lcall
xchg
and
insl
in
adc
aam
pop
inc
out
test
imul
test
or
jp
jg
mov
xchg
xor
ss
mov
or
dec
loope
push
int3
mov
jo
mov
cmp
cmp
fisubs
mov
push
lret
ss
repnz
movsb
ficomps
clc
lret
scas
and
mov
lea
jo
pop
aas
hlt
inc
mov
xor
mov
das
and
popf
into
inc
repz
dec
jns
push
lds
fiadds
and
mul
rorb
mov
dec
xor
fimull
rcl
mov
js
inc
int3
add
sbb
loop
mov
xor
stc
neg
je
mov
jo
stc
bound
mov
mov
nop
addr16
and
xchg
fisttps
mov
fwait
sub
sbb
xor
clc
sub
mov
sub
add
push
and
shl
jns
and
push
icebp
rcl
int
cs
shll
mov
scas
ret
shrb
addl
add
add
add
add
xchg
lcall
aaa
pop
fnstsw
add
fdivrl
decl
out
xchg
gs
push
subl
std
cltd
sub
ljmp
cmp
mov
xor
and
jge
shlb
jne
jp
xchg
jge
dec
pop
pop
mov
cmp
loope
andb
mov
cmp
stc
xchg
mov
outsl
inc
data16
icebp
add
add
inc
inc
xor
pop
insl
cmpsb
and
imul
les
sahf
dec
enter
fimull
scas
out
movsl
test
jecxz
mov
inc
and
or
pop
jg
and
inc
stc
mov
lahf
xlat
test
sahf
jl
or
mov
cmpsb
int
repnz
cmpsl
push
adc
jb
adc
cs
fucom
das
gs
pop
sub
push
xchg
sub
push
cmpl
or
js
xor
push
xor
in
aas
xor
in
mov
fsqrt
loopne
sarb
xchg
mov
mulb
add
or
shlb
push
xor
not
fists
andb
mov
ret
mov
push
hlt
ljmp
fsubrs
xchg
push
pop
std
aad
mov
mov
xor
addr16
push
lcall
sbb
mov
inc
cmp
adc
clc
in
arpl
ljmp
aas
in
or
jl
sbb
daa
and
mov
pusha
fstpt
and
mov
insb
jp
cmp
cmp
int3
cmp
das
xchg
lidtl
shrb
mov
incl
sbb
ljmp
das
daa
push
ljmp
mov
or
lds
lods
push
negb
push
aad
hlt
iret
push
addr16
push
adc
ss
mov
push
fwait
push
jb
push
arpl
outsb
xlat
imul
push
mov
popf
mov
xor
push
xchg
pop
pop
decl
out
xchg
sub
and
mov
in
dec
loop
lds
mov
xchg
fsubl
jp
mov
cmpsl
addl
push
and
loopne
mov
dec
lods
test
loopne
imul
dec
leave
inc
js
cmpsb
std
cmp
mov
cmpl
addb
aam
and
sti
push
mov
inc
xchg
mov
mov
xlat
in
mov
cmp
xchg
adc
testl
shrb
adc
loopne
leave
xchg
dec
fxch
lret
push
lahf
int
outsb
add
sbb
mov
shlb
aas
push
xchg
sahf
es
dec
sbb
cmp
sbb
sbb
divl
loope
push
jns
dec
mov
jecxz
xor
aaa
mov
ret
das
movsl
in
adc
xorl
xor
dec
iret
pushf
xlat
xor
mov
cmp
inc
das
loop
call
arpl
lea
dec
mov
fwait
imul
outsl
lcall
jmp
cmp
xor
sub
push
pop
outsl
test
out
xchg
or
inc
jnp
push
mov
cmpsl
push
mov
fstpl
es
sbb
mov
inc
dec
jne
rcll
adc
inc
popl
pop
rcll
int3
adc
jp
ljmp
mov
scas
adc
sahf
nop
mov
fildll
and
mov
cld
call
lods
add
add
adc
push
pusha
in
scas
pop
sbb
fnstenv
ret
mov
sub
ds
jnp
or
xchg
out
cwtl
leave
pop
and
xor
rcrl
sbb
sub
pushf
xchg
pop
vpmadcsswd
scas
xlat
mov
adc
divb
jge
sbb
int3
das
jnp
push
add
out
aas
mov
and
arpl
ss
jns
and
mov
and
mov
inc
popf
stos
push
or
repz
xchg
stos
cmc
out
scas
cltd
in
push
mov
xor
outsb
add
jmp
adcb
je
pop
cmpsl
cmpsb
pop
call
repnz
lahf
jb
adc
insb
rol
dec
fmuls
ljmp
adc
shrb
push
int3
fstpl
loopne
jae
pop
cmp
and
and
dec
lock
loopne
jmp
shlb
adc
rorl
outsl
or
and
fidivrl
mov
jle
or
pop
xor
jb
gs
mov
inc
daa
mov
cmp
idivl
adc
int3
sub
cli
daa
xor
lcall
and
jl
sbb
dec
push
inc
cli
pop
mov
cmpb
pop
iret
sbb
add
mov
add
pop
js
jg
in
mov
mov
les
pop
mov
out
fsub
sahf
or
jmp
lea
repnz
cmpsl
jmp
mov
cltd
mov
fstpl
or
push
mov
data16
out
sti
push
sbb
fcompl
sbb
add
out
add
std
inc
xchg
sbb
jae
push
lret
push
adc
dec
out
outsb
jg
push
xchg
mov
test
sti
test
stc
mov
jmp
cltd
mov
xchg
dec
cld
and
insl
jae
out
int
rcrb
inc
mov
ljmp
xorl
ss
fs
add
or
sarb
out
out
popf
movl
jae
sbbb
out
sub
push
mov
push
ljmp
and
movsl
scas
push
sbb
shlb
std
mov
jmp
out
pop
mov
sbbb
cmp
jmp
les
and
push
nop
dec
mov
mov
xchg
scas
lret
jge
push
jmp
cmp
sti
ss
aas
pop
jnp
cmp
into
test
pop
stos
dec
pop
add
divl
cmp
lcall
icebp
mov
imul
mov
stc
scas
sahf
sub
fwait
pop
fcmovb
popf
push
fcomps
push
arpl
fiaddl
adc
xor
movsb
xchg
js
xchg
jecxz
sub
sti
es
mov
outsl
push
xchg
das
adc
push
cmpb
pop
loop
mov
mov
in
push
or
cmp
add
push
hlt
dec
into
push
dec
mov
cmp
xor
pop
xlat
sarb
aam
clc
in
xchg
lret
xor
adc
pop
mov
cmpsl
xor
jmp
jmp
daa
dec
insl
xor
loope
popa
cmp
sbb
popf
jecxz
out
xor
mov
add
xlat
mov
and
add
add
cmp
pop
rcrb
addl
lods
add
add
sub
loop
lret
inc
jmp
aam
pushf
adc
sub
sbb
test
inc
je
insb
xchg
movsb
xor
xchg
push
sub
mov
push
movsb
xor
test
cmpsb
xchg
jg
ret
inc
jae
insl
fdivrs
pop
das
add
sbb
mov
and
pop
or
sbb
ret
test
insl
imulb
xchg
push
jae
data16
or
ja
xchg
aas
daa
xor
sarb
insb
push
add
into
popa
adc
push
shlb
jle
xchg
jbe
cmpsl
cmp
ja
shlb
mov
jns
hlt
or
sub
xchg
mov
jnp
sbb
push
add
test
cmp
pusha
mov
push
cmc
jg
adc
stos
lds
mov
int3
sub
mov
jne
mov
lea
and
adc
enter
mov
push
sub
lods
sbb
jo
xor
push
mov
inc
into
jo
imul
call
in
or
cmp
rorb
imul
out
push
insb
dec
pusha
inc
daa
xor
pusha
les
test
sbb
stc
mov
sub
loopne
cmpl
call
test
push
loopne
push
popa
xor
dec
push
les
jae
xchg
fildll
jnp
lret
gs
bound
push
imul
jno
add
inc
dec
mov
loope
adc
inc
rcl
ss
imul
pop
andl
sbb
movsl
pop
add
loop
dec
sbb
sbb
std
xchg
int3
jne
jecxz
in
dec
lods
add
leave
lods
push
out
cmp
jbe
inc
scas
lods
push
push
or
scas
stc
idivl
inc
ret
push
push
mov
fwait
ljmp
in
test
pop
pop
dec
fldenv
push
or
shll
out
mov
inc
jnp
leave
lahf
pop
push
mov
xorb
imul
hlt
bound
pop
pushf
addr16
xchg
test
scas
jg
add
ja
pop
fdivs
adc
out
shr
test
testl
cmpsb
xor
and
xchg
bound
das
xor
sub
fdivs
mov
psllw
rorb
incb
xchg
add
mov
and
sbb
and
sbb
sar
push
xor
lea
cld
mov
add
mov
in
push
jbe
and
dec
ljmp
outsb
imulb
mov
pop
addr16
inc
jge
mov
cmpsl
sbb
lahf
push
mov
jp
int3
mov
cmpsb
hlt
dec
sub
jns
jb
mov
sar
je
and
cmc
xor
inc
mov
xchg
addr16
sbb
int
jecxz
fcomps
inc
cmc
or
cmc
pop
sub
pusha
push
cmp
mov
cmp
sub
lahf
sbb
scas
aas
mov
jg
insb
dec
cmpsb
or
outsl
xchg
push
adc
inc
adc
jno
mov
jo
repz
push
push
cli
testl
jmp
pop
lahf
in
mov
fcoml
mov
or
pop
sti
cmp
dec
fistpl
mov
jmp
pushf
lret
inc
addr16
sub
mov
pop
jo
arpl
inc
cmp
jo
sbb
and
es
cmpsb
mov
scas
lods
mov
add
bound
inc
and
dec
fisttpl
fsts
xor
mov
ss
mov
orb
cmp
out
imul
std
push
aam
mov
hlt
or
je
or
shlb
jecxz
cmp
cmp
xor
outsb
add
shrb
loop
xor
lods
idivl
sub
gs
aad
sbb
xchg
cmp
or
js
cmp
xor
lock
mov
sbb
orb
jl
clc
jbe
sbb
aas
xor
push
jns
popa
pop
cs
cmpsb
pop
mov
fldenv
jg
jecxz
mov
jnp
stc
and
sub
or
int
sbb
jecxz
cmpl
push
sti
test
mov
lret
cmp
in
test
pop
in
adc
lret
jle
push
pop
push
or
and
pop
xchg
fisubl
or
mov
pop
mov
push
sti
sahf
push
xchg
in
das
or
in
mov
adc
mov
jbe
fcmovne
mov
inc
je
pop
add
lret
adcl
sub
in
push
jl
cmp
pusha
popa
in
mov
lcall
cmp
mov
xchg
mov
adc
xchg
jne
and
sbb
sub
dec
jle
mov
xchg
or
aad
xor
xchg
xchg
loop
pop
sub
pop
cmp
and
lods
das
bnd
fwait
pop
loope
jp
and
push
fisubs
in
adc
adc
adc
test
sbbl
inc
lahf
outsl
mov
ret
pop
imul
xor
mov
dec
repz
sub
ds
inc
clc
mov
inc
sbb
inc
push
int
out
dec
rolb
cltd
daa
or
cs
pop
xor
dec
dec
nopl
xor
adc
int
adc
xchg
std
pop
ja
in
mov
fs
daa
stos
mov
enter
jnp
and
test
notb
jmp
popf
je
int
inc
xchg
fs
push
popf
mov
adc
loop
or
fsts
shll
and
lcall
jbe
mov
idivl
or
es
sar
daa
and
inc
fs
arpl
mov
stos
in
cmp
mull
cmp
xchg
inc
or
jecxz
ja
xchg
pop
loop
mov
mov
push
ljmp
repz
ljmp
movsl
jl
dec
pop
jecxz
aam
pop
gs
loopne
mov
fnstenv
mov
mov
ror
push
push
push
xlat
shr
lret
leave
inc
mov
dec
or
mov
cwtl
adc
inc
dec
add
sub
sbb
mov
gs
dec
iret
in
mov
daa
cmp
add
fcomps
jae
mov
popf
clc
inc
loope
ret
mov
popa
int3
aad
sub
inc
fildll
popf
jmp
xor
out
mov
aad
mov
push
inc
or
jbe
mov
cmpsb
andps
mov
divl
xor
push
cmp
or
dec
aaa
mov
test
mov
jno
jle
jb
inc
fsubrl
jmp
int
pusha
pop
loopne
test
mov
dec
jo
jl
cld
out
jbe
outsl
cmp
sbb
add
lods
add
add
mov
es
test
mov
movsb
sbb
jbe
xchg
ss
pop
xor
jl
mov
insl
dec
and
sbb
lods
mov
jne
es
cmp
sti
inc
lods
cmpsl
cmp
mov
stos
leave
add
dec
in
jmp
mov
and
mov
ds
arpl
insb
stos
out
xchg
jl
and
fdivp
jbe
and
and
aad
out
or
movsl
jmp
inc
movsl
idiv
lahf
loop
repz
std
insl
mov
arpl
inc
jno
sub
clc
mov
add
repz
dec
ret
xlat
fcmovne
mov
xlat
clc
cmp
and
in
xchg
icebp
leave
xor
hlt
cmpsl
scas
sbb
adc
call
imul
jl
stos
add
and
js
fsubs
fdivl
pop
aam
cmpsl
xor
sub
mulb
push
cmp
out
cmc
ljmp
mov
mov
mov
pop
int
jge
inc
cli
test
jl
dec
jne
cmc
pop
mov
adc
xchg
int3
sbb
xor
imul
cmp
repz
loop
or
mov
and
fwait
cwtl
sbbl
stos
mov
stos
scas
xlat
or
or
sub
cmp
jp
push
imul
jecxz
sti
int
aam
or
popa
test
mov
cmp
mov
xchg
mov
xor
add
dec
mov
mov
jg
xchg
popf
test
xor
cmpsb
in
xchg
inc
mov
call
push
scas
xchg
in
or
push
out
jmp
test
cmc
inc
mov
popa
or
clc
test
fcoml
clc
mov
iret
sbbl
lods
xor
das
inc
jmp
mov
cli
jle
idiv
lcall
pop
pop
xor
test
cli
shlb
dec
nop
or
in
rcrl
repz
add
mov
fwait
cwtl
aas
pop
call
sbb
aad
sub
flds
inc
cmp
mov
scas
out
sbb
sbb
xchg
iret
jbe
into
mov
shll
dec
negb
sub
pop
lock
inc
pop
xor
das
js
add
lahf
mov
lahf
pop
aaa
leave
bound
cmp
mov
jb
mov
mov
rorb
dec
add
in
mov
mov
idivb
push
add
or
cmpsb
test
mov
mov
pop
mov
xlat
bound
jge
pop
push
dec
stos
movsl
sbb
ror
dec
xor
push
mov
mov
and
or
push
mov
repz
into
dec
sbb
push
and
add
fs
clc
sbb
dec
divl
sub
xor
mov
cli
lods
mov
dec
repz
hlt
aam
jne
push
xchg
push
or
ja
lahf
pop
sub
push
adc
adcl
loop
cld
xchg
xor
mov
push
imul
out
push
test
xchg
or
push
repnz
mov
dec
sbbb
adc
inc
push
in
cmp
pop
ljmp
les
sub
add
add
fimuls
daa
cltd
sub
inc
cmp
add
sbb
push
jne
xchg
xchg
push
pop
jmp
sbb
adc
mov
jns
jb
lcall
pusha
pushf
mov
int3
lods
stos
pushf
icebp
inc
mov
xor
sbb
xchg
push
mov
adc
inc
dec
mov
loop
negl
lret
dec
imul
stos
pushf
xchg
lret
imul
xchg
les
repnz
fwait
xlat
push
push
xchg
and
adc
mov
leave
add
mov
lret
lock
jg
jo
and
int3
ret
mov
rolb
mov
stos
pop
push
push
mov
mov
sbb
adc
js
data16
fistpl
in
adc
xchg
jns
jmp
lds
xlat
iret
dec
pop
sti
xchg
out
lods
jae
sub
jnp
cmp
push
dec
lock
pop
mov
sub
mov
dec
das
and
popa
ljmp
fnstenv
jg
mulb
sarl
sahf
es
sub
push
fidivrs
gs
std
loop
sbbb
jbe
notl
in
sbb
mov
cmp
ret
push
mov
jecxz
inc
insl
sti
ficoml
pop
pop
loop
fwait
jnp
cmpsb
jbe
and
pop
and
push
sbb
or
xlat
xorb
pop
stos
insl
int3
push
js
fidivs
and
cmpsl
mov
pop
xchg
add
and
or
lock
mov
sub
mov
inc
jns
js
mov
mov
iret
lcall
or
cmp
test
mov
sar
fscale
aaa
mov
pop
popa
loopne
cs
out
dec
divb
jbe
or
cld
or
adc
mov
pop
mov
negb
dec
pushf
rcll
fcomps
popf
mov
mov
mov
stos
and
pop
int
in
inc
popl
add
lcall
ss
int3
arpl
add
mov
jl
movsb
or
pop
fcoml
jmp
push
pop
fwait
push
daa
mov
loopne
mov
pop
in
popa
test
adc
aam
jnp
ret
fmul
inc
mov
xor
fwait
pusha
pop
mov
mov
ds
inc
cltd
xor
js
add
lock
sbb
test
mov
add
push
fwait
xchg
hlt
cltd
mov
mov
mov
popa
out
push
and
dec
xchg
sub
ljmp
js
loope
push
sarl
notb
jge
out
cmp
cbtw
xchg
rorl
mov
not
and
int3
das
add
pop
jbe
repnz
outsb
iret
add
xchg
sbb
scas
mov
cld
inc
int3
push
iret
les
shll
inc
les
inc
bound
jmp
lea
mov
xor
dec
lods
in
out
shlb
xchg
ss
inc
xchg
adc
xlat
ss
lret
mov
pop
cs
cwtl
mov
push
enter
jmp
imul
sbb
aam
out
mov
mov
int3
jg
xor
jns
mov
icebp
aaa
xchg
outsl
mov
xchg
push
idiv
inc
sub
aam
and
add
add
inc
dec
mov
popa
dec
push
sbb
add
add
shrl
mov
shr
arpl
xchg
inc
cmpsb
fisttpl
sub
mov
mov
push
call
je
inc
cmp
pop
xchg
mov
aad
aas
in
insl
sub
inc
rorl
lret
cmp
dec
jnp
push
push
push
ret
xor
mov
push
mov
inc
fnsave
lods
xor
mov
sti
fwait
nop
sbb
mov
xchg
bound
xor
clc
shll
mov
ret
sti
aaa
lds
dec
mov
xorb
cmp
lcall
lea
cmp
ret
aas
pop
test
hlt
mov
popf
xchg
out
pop
sub
pushf
sahf
dec
jle
xchg
setg
movsb
movsl
xor
data16
enter
rolb
push
xchg
sbb
movl
xlat
mov
push
mov
mov
mov
sar
icebp
sti
mov
push
cwtl
shlb
add
int
fdivr
les
mov
or
adc
sub
cmp
mov
into
jnp
adc
sti
mov
sub
insl
mov
insl
ss
mov
cmp
fsts
jg
xchg
cmp
dec
in
sar
sub
in
dec
pop
pop
adc
shrl
enter
push
sub
aam
test
das
adc
mov
loopne
lret
stos
push
mov
mov
or
inc
pop
pop
fstl
xchg
nop
adc
adc
push
imul
mov
inc
stos
rorb
adc
imul
inc
js
imul
mov
cli
aam
and
repnz
inc
adc
or
mov
xor
das
sbb
and
push
outsl
xchg
shlb
fstl
bound
loopne
aaa
dec
jge
and
popf
bound
and
add
jle
pop
push
mov
adc
or
adc
inc
call
lock
mov
daa
sbb
mov
mov
pop
fldt
add
xor
sub
jge
sbb
and
inc
stc
jno
pop
fnstcw
jnp
sub
arpl
pop
icebp
div
rol
stos
andl
sbb
orl
mov
cmp
and
mov
cmp
je
icebp
ljmp
xchg
push
pop
fidivrl
add
push
out
rcll
push
adc
and
lcall
mov
jmp
mov
divl
push
mov
xchg
mov
scas
mov
scas
xor
test
xchg
push
pop
cmp
mov
mov
dec
dec
movsl
clc
inc
scas
jmp
iret
jl
inc
in
dec
pop
cmp
pop
inc
dec
imul
rol
xor
mov
cltd
daa
jl
js
sub
mov
push
ljmp
iret
addl
xchg
rcrb
ljmp
gs
icebp
adc
inc
mov
enter
push
and
cld
addr16
icebp
jp
jl
cmc
xor
mov
or
in
push
cmp
mov
mov
insl
fists
inc
subl
dec
push
fldz
push
pop
mov
insl
xlat
inc
sahf
dec
push
stos
xorl
mov
out
pop
mov
je
test
sub
jb
ljmp
add
add
xlat
and
aaa
std
out
and
aad
lea
add
add
cmp
loope
mov
pop
push
and
lods
imul
jle
pop
arpl
jp
cltd
jmp
or
sbb
cmp
jmp
dec
add
and
mov
xchg
cli
in
xor
xchg
sbb
mov
push
sahf
add
or
and
lock
inc
and
mov
jo
adc
jnp
cld
adc
notl
mov
test
sub
movsl
mov
dec
pop
mov
mov
pop
jge
daa
imul
cmp
dec
pop
sub
test
popf
cmp
mov
int
rcrl
mov
popf
pop
inc
popa
push
add
lahf
pop
insb
lahf
jno
sub
fsub
rcrl
addl
dec
sub
insb
add
ja
xchg
dec
and
in
pusha
aaa
push
mov
cwtl
sti
mov
cmp
popf
pop
sub
jge
insl
push
cmc
scas
mov
pop
sub
repnz
cmp
jge
rcl
mov
xlat
adc
dec
adc
and
jno
test
cmp
inc
aad
mov
aad
mull
adc
lahf
insl
fwait
sahf
add
orb
in
lret
testl
out
sub
sub
push
sub
scas
lret
gs
rcrl
loopne
pop
cltd
add
push
lods
ss
adc
fwait
adc
and
lods
fiaddl
nop
enter
push
movsl
mulb
sti
int3
dec
mov
dec
xchg
sbb
mov
xor
movsb
aas
add
pop
xchg
arpl
mov
sbb
push
in
rcl
or
mov
cmp
jl
add
add
lods
mov
sbb
lods
add
jae
gs
lea
sbbb
and
sub
push
movsb
fbld
sub
inc
xchg
mov
sub
or
mov
xor
test
push
in
cltd
add
fadd
or
stc
mov
aas
subb
out
jbe
push
es
dec
repz
iret
or
push
lahf
sbb
test
or
lods
idivl
push
add
js
adc
shrl
pop
pop
cmc
scas
jno
cmp
xchg
cltd
sub
scas
push
jb
mov
adc
mov
aas
lret
cld
test
lods
mov
aam
sub
mov
and
pop
add
pop
pop
mov
jno
icebp
pop
movsl
daa
rcl
jg
divb
mov
mov
shll
fsts
fwait
mov
adc
dec
ret
adc
sarb
cmc
shl
hlt
js
icebp
cmc
or
fmuls
jecxz
jae
cmp
call
jo
and
xchg
sub
in
jae
push
lret
xor
into
xor
pop
aam
pop
push
loop
imul
mov
iret
or
inc
sub
outsl
ja
sub
push
iret
leave
sub
cmp
lods
ret
inc
repz
dec
cs
inc
jge
andb
xor
movsl
sbb
rcll
jne
movsb
repnz
dec
fisttpl
cmpsl
push
mov
sbb
mov
jp
or
adc
movsb
cmc
lods
and
mov
daa
sub
add
add
nop
int3
popf
fistps
lea
jmp
cmp
add
add
mov
cmp
and
cmp
cltd
scas
or
out
jl
inc
repnz
shrb
dec
stc
pop
jl
xchg
push
in
icebp
push
mov
cmp
xchg
test
ffree
inc
xor
leave
ja
repz
paddsb
fsts
sbb
in
sub
fmull
xor
mov
cmc
xchg
pop
insl
pop
insb
outsb
dec
in
shl
stc
sub
or
sbb
adc
pop
pop
push
arpl
or
adcb
lret
xchg
fs
inc
xorb
in
inc
jnp
xchg
gs
fadds
int
fwait
xchg
dec
jmp
ficompl
outsb
jb
push
cmp
leave
aaa
imul
in
xchg
call
pop
fsubs
aaa
rol
out
insl
pop
insb
sub
cli
mov
xor
jno
lea
mov
pushf
jp
bound
push
sbb
xor
jg
adc
add
or
mov
fisubl
or
leave
pop
dec
es
stos
xor
gs
pusha
pop
imulb
test
ret
insb
cwtl
lret
pop
or
sbb
inc
push
sbb
ljmp
aaa
fwait
mov
cmpsb
scas
jl
popf
mov
mov
sub
jp
imul
rolb
ljmp
lahf
cmp
xchg
xorl
sbb
jo
in
mov
into
mov
repz
sbb
mov
sbb
jno
daa
xor
cwtl
or
pop
inc
mov
je
sub
outsb
mov
stos
imul
aas
enter
vpaddusw
and
adc
repnz
pop
jmp
xor
aad
xor
dec
push
repz
push
loop
fs
cmpsl
negb
xchg
mov
pop
xor
notb
inc
push
out
shrl
inc
pop
xchg
jmp
push
jo
sub
adc
scas
lahf
mov
ja
cmpsl
lds
mov
inc
lods
push
cs
mov
data16
jmp
dec
mov
jl
mov
loop
push
jne
jmp
insl
sbb
imul
push
rorb
jno
fnstsw
pop
xchg
cli
cmpsb
test
fnop
push
fdivrl
sub
cwtl
sbb
lret
int
outsb
pop
jb
les
or
adc
cmc
mov
xchg
push
imul
cmpsl
sbb
mov
aam
and
loope
mov
call
jle
out
loop
push
xor
aad
jo
jmp
clc
fwait
rol
incb
je
insb
repnz
fwait
movb
ret
pop
inc
sbb
jmp
loopne
push
dec
jg
orl
stos
insb
nop
inc
sbb
dec
mov
loop
cmpsb
xor
push
cmp
cmc
out
or
mov
and
test
loope
adc
jl
mov
orl
mov
jl
sbb
and
shll
and
mov
pop
or
xchg
scas
mov
pop
dec
aad
push
sahf
rol
scas
jbe
or
ljmp
cltd
adc
push
and
test
push
xchg
in
outsl
or
repnz
inc
frstor
mov
insl
fbld
and
inc
xlat
sbb
into
insb
data16
mov
pop
mov
fwait
aad
pushf
add
lods
add
add
dec
inc
aad
mov
rcrl
xchg
inc
cmp
rcrb
dec
push
adc
mov
fistpl
mov
dec
call
movsb
fs
outsl
lahf
test
hlt
xchg
cmp
imull
leave
mov
pop
jnp
xor
pop
push
into
and
rorb
jp
mov
mov
push
pop
jl
cwtl
mov
inc
and
or
pop
outsb
xchg
jae
mov
pop
enter
inc
sub
pop
push
call
mov
or
cmp
pop
hlt
test
pop
fldl
mov
jae
incb
rorl
lret
data16
or
xchg
ss
mov
or
mov
pop
shrl
cmc
cli
mov
outsl
loopne
inc
pandn
fidivrl
es
xlat
popf
add
in
xor
int3
loop
or
pop
mov
loope
lds
push
mov
xchg
fisubrl
subl
xor
movsl
push
push
out
jecxz
cmc
loop
or
repz
cmp
dec
cmpsb
mov
and
or
mov
movsl
jmp
inc
jp
cmp
pop
cmpsb
mov
outsl
fbld
xor
inc
jge
xlat
xor
or
jg
sub
inc
sbb
xchg
mov
jecxz
pop
fdivrl
call
sub
mov
add
rol
arpl
sub
mov
dec
inc
out
ss
dec
adc
fld
or
andl
fistpl
adc
lret
pop
in
stc
arpl
adc
loopne
cmpb
or
int3
in
xor
js
clc
push
mov
inc
rclb
mov
jns
out
or
pop
push
dec
sub
cmp
add
sbb
push
rcll
nop
jle
cmp
hlt
mov
mov
pop
xor
rol
cmpl
xor
aad
xchg
mov
data16
sub
mov
roll
dec
into
dec
sti
jno
fcmovnu
and
sub
lock
mov
jns
xrelease
and
add
std
je
push
xchg
inc
sub
add
mov
mov
sub
add
rclb
hlt
jl
jge
in
mov
cmc
or
or
jno
lods
or
mov
lods
and
xchg
inc
lret
or
cmpb
pushf
sbb
pop
ds
inc
data16
loope
cmp
add
and
das
pop
ljmp
xorl
push
xor
mov
adc
loopne
xchg
lcall
andl
xchg
cmp
cmp
inc
daa
pop
and
xchg
lock
inc
pop
cmpb
push
mov
test
adc
mov
jmp
mov
mov
adc
nop
mov
out
js
lock
je
inc
jns
dec
loop
pop
adc
mov
jmp
adc
mov
jle
rcrl
shlb
sbb
shr
es
cwtl
mov
pop
divb
sti
rcl
les
movsl
js
xchg
ja
les
out
push
stos
cmp
stos
mov
mov
add
addr16
inc
fdivrp
out
ja
or
pop
cld
aad
sbb
add
add
mov
inc
mov
inc
jmp
and
jmp
jg
and
jecxz
stos
and
inc
out
sar
jecxz
js
test
into
scas
jle
nop
pop
push
cmp
xchg
jnp
pop
inc
lds
mov
movsl
aas
lds
ds
xchg
movsb
fdivrs
push
jbe
das
mov
mov
shrb
cmp
lods
cmp
movsb
jae
cmp
or
pushf
and
out
xor
cltd
out
inc
adc
fwait
scas
jnp
popf
or
sbb
into
lea
add
pop
out
inc
cmp
inc
jg
sub
outsb
mov
lea
sbbb
sbbl
ret
lret
add
xchg
jnp
je
filds
and
ret
out
out
mov
lods
popf
dec
loope
mov
hlt
inc
leave
test
divl
mov
push
inc
iret
imul
dec
cmp
xchg
sub
mov
pop
adc
popf
leave
mov
push
leave
fsub
cmc
lock
out
out
lds
hlt
xor
mov
jg
test
clc
cmpsl
idivb
icebp
xor
mov
lret
push
out
mov
inc
mov
cltd
or
push
inc
pusha
mov
jns
out
sbb
or
mov
mov
lock
or
in
iret
jno
iret
lahf
repnz
aam
pop
mov
leave
jo
cmp
mov
or
xor
adc
popa
pop
out
imul
aad
lods
push
stos
test
lret
cmp
xor
les
in
stos
or
fildll
jg
cs
push
test
adc
das
sub
mov
pop
stos
mov
mov
lret
push
fsub
movsl
push
fstps
rol
movsb
lods
jne
into
sub
dec
shlb
add
jb
add
cmovo
mov
call
int
lcall
xor
jp
lods
mov
pushf
fcompl
lret
lds
mov
lods
xlat
push
pop
arpl
sahf
into
mov
dec
stos
fs
iret
inc
into
repz
pop
pop
mov
cmp
or
fldcw
test
and
lret
jno
daa
xor
mov
pop
out
push
push
sbb
dec
or
sub
out
insb
sbb
sub
pmuludq
cmc
loope
aad
adc
cmp
push
xchg
repz
xchg
shrb
and
fwait
xor
and
cmc
pop
lods
xchg
rclb
jge
aaa
cmpsl
subb
das
sahf
fildll
cmpsl
mov
das
clc
test
mov
and
cs
xor
dec
pop
lcall
mov
out
push
inc
mov
and
lods
in
push
icebp
mov
dec
movsb
cmpsl
notb
push
xchg
jle
mov
xor
inc
jmp
pop
stos
and
outsb
xchg
imul
inc
outsb
dec
push
and
sbb
and
xor
aaa
push
push
xor
dec
cmp
stos
push
and
inc
ss
mov
ror
xchg
mov
mov
fcoml
cmp
push
pop
dec
out
dec
in
push
dec
out
inc
dec
lahf
sbb
pop
adc
cmpsl
scas
sti
nop
jp
and
jne
inc
imul
pop
cmpb
insl
loope
sahf
jmp
add
xchg
add
xchg
int
mov
roll
add
mov
cltd
mov
xor
movsb
add
lods
add
add
dec
or
pusha
pop
stos
arpl
shl
jp
mov
mov
jl
stc
push
pop
mov
in
out
push
pop
movsb
fildll
inc
push
sbb
mov
lahf
enter
pop
aas
int3
sahf
rcll
les
ja
mov
shlb
cmp
jns
jnp
add
and
je
into
add
xchg
sbbb
test
xrelease
adc
or
push
clc
sbb
inc
jne
aaa
jl
xlat
gs
ljmp
ljmp
sbb
inc
mov
mov
jmp
inc
dec
sbbb
addb
addr16
in
insb
int
cld
adc
xchg
ljmp
mov
mov
xchg
xchg
pushf
jns
pop
sub
mov
popf
stc
push
ret
test
mov
push
add
into
cmp
sub
iret
aaa
cmpb
or
inc
aas
ret
je
roll
cmpsl
push
ljmp
test
mov
push
push
cmp
pop
mov
or
and
cld
or
or
mov
or
pop
or
in
sti
jo
enter
mov
jno
jbe
daa
fwait
pop
push
xchg
movsl
jge
filds
bswap
enter
sbb
std
scas
xchg
jecxz
or
iret
test
loop
repnz
cmp
mov
cli
dec
bndldx
cmp
dec
mov
rcr
jnp
and
push
inc
pop
fcmovnb
loopne
inc
scas
jp
punpckldq
enter
jl
xor
dec
icebp
or
sti
movsb
jno
std
ret
mov
dec
xor
lahf
mov
xchg
mov
xchg
and
aad
xor
ret
sbb
adc
mov
mov
push
sbb
and
lcall
push
push
test
add
sbb
jo
loop
dec
imul
loop
and
mov
test
rcrb
jne
xor
add
or
repnz
or
sub
mov
stos
mov
lahf
idivb
ficompl
fdivp
jo
hlt
stc
mov
inc
sbbb
push
push
push
scas
cmp
cmp
jne
add
mov
cwtl
scas
ja
fcmovb
cmp
push
sub
xchg
xchg
pop
scas
data16
xchg
les
and
mov
sub
xor
cmp
push
outsb
sub
cs
icebp
push
roll
add
test
stos
repz
arpl
scas
and
adc
mov
pop
xor
cld
lahf
mov
sbb
xor
dec
ret
icebp
sub
mov
inc
call
cmp
iret
loop
and
push
jp
jae
add
mov
insb
or
loopne
ljmpw
ret
xor
jg
cmp
sbb
sbb
fwait
scas
and
lahf
arpl
enter
mov
rorl
dec
cmc
cmc
rorb
stc
cmp
ja
pop
in
sub
mov
es
push
mov
jbe
loope
fcompl
cld
and
fcoms
sbb
gs
stos
lcall
lret
sbb
adcl
out
xlat
ss
xchg
addb
mov
sbb
mov
add
add
mov
mov
fsubrp
mov
sbb
add
pop
push
and
sub
inc
fistpl
jnp
pusha
jl
jp
ret
negb
test
mov
push
xor
js
shlb
add
scas
pusha
jo
cwtl
mov
dec
pop
lcall
mov
in
andl
pop
or
dec
add
cltd
xor
test
fwait
loop
ret
arpl
mov
sarb
and
dec
in
sub
jb
or
call
iret
stos
xchg
add
mov
jecxz
cmp
mov
stc
mov
cmp
jecxz
and
add
adc
data16
arpl
xchg
or
cmpsl
sbb
push
movsl
adcl
add
mov
shrl
pop
cli
dec
jmp
jb
jmp
push
push
stos
push
rdpmc
shlb
and
and
mov
jg
cwtl
fisubrs
outsl
pop
stos
jmp
fstp
push
or
push
scas
int3
pop
xchg
sti
inc
push
jge
lahf
lcall
out
jl
xchg
ja
int3
pop
into
pushf
das
pop
or
jae
movsl
movsb
scas
aaa
rcrl
das
mov
stc
leave
push
stos
sub
push
cli
in
data16
and
pop
hlt
ja
cmp
mov
sub
nop
mov
jge
jae
inc
jle
jl
xor
and
push
and
adc
scas
dec
cmpsb
or
popa
or
sub
es
dec
iret
roll
pop
xor
and
pop
add
push
jmp
out
mov
cld
mov
cmp
xchg
ret
orb
mov
mov
enter
inc
pop
cmp
sbb
out
cmp
icebp
roll
dec
ljmp
push
and
mov
lock
imull
aas
mov
arpl
cmp
jo
sub
sti
push
or
and
adcb
stos
inc
fstl
das
push
sub
incb
int
push
das
push
and
and
dec
cmpsb
mov
clc
cmp
imul
pop
xchg
shrb
mov
pop
xor
mov
pop
sub
aaa
sar
or
lds
add
xchg
test
movsl
jo
jnp
cmp
cmp
add
xor
push
aaa
rcrb
xor
jp
dec
into
xlat
jnp
adc
dec
push
push
test
orl
fwait
mov
inc
mov
mov
add
fs
inc
cmc
arpl
icebp
adc
lcall
push
hlt
mov
pop
sti
xchg
in
adc
and
xlat
sbb
inc
inc
aaa
push
cmp
and
cmp
shr
add
inc
and
les
mov
and
mov
call
mov
jae
adc
lea
cmp
mov
push
xchg
call
fwait
decb
and
or
and
adc
and
inc
sub
and
outsb
lods
push
lret
enter
std
mov
jge
insb
sbb
cli
or
into
inc
call
pop
xchg
sub
dec
mov
stos
sub
jns
jle
mov
and
push
pushf
push
std
pop
jno
fstpt
mov
adc
inc
outsb
adc
mov
jmp
popf
cmp
je
insb
or
xchg
and
fdivr
cmpsl
int
iret
cli
dec
push
ret
mov
jge
cmp
in
or
pop
cltd
stos
add
lods
add
add
push
pop
pop
xchg
je
xor
inc
pop
xchg
xchg
xor
dec
mov
push
pop
sub
iret
fsubs
addb
push
cld
cmpl
or
lahf
sbb
or
repz
test
or
adcl
xchg
mov
pop
loop
cmp
jecxz
cld
lret
lahf
test
push
xchg
or
mov
pop
sbb
push
fidivs
or
jp
mov
xlat
int3
sub
inc
insb
jmp
daa
push
mov
clc
dec
pop
inc
addr16
es
mov
test
push
roll
jbe
repnz
test
xchg
pop
movsl
cs
mov
sub
fwait
lods
aad
daa
push
xchg
movsl
adc
insb
pusha
sbb
mov
xchg
push
js
std
and
popf
loope
pop
or
cmc
inc
popa
das
inc
les
xor
add
cwtl
mov
jp
sbb
and
outsl
jl
or
and
imul
cli
cld
and
sti
les
into
shrb
inc
insl
pop
jbe
adc
adc
fisttps
in
fsubs
sbb
insb
fwait
mov
es
outsb
push
mov
leave
jmp
mov
aas
andl
jl
icebp
push
inc
ret
pop
sub
fs
xsavec
imul
jmp
outsb
jmp
xadd
xchg
mov
cmp
mov
inc
xor
xor
dec
test
push
xchg
rolb
fistpl
adc
inc
enter
push
adc
in
adc
mov
inc
inc
stos
les
mov
insb
sub
sti
addr16
jle
adc
cmp
mov
dec
fcoml
add
cwtl
adc
mov
mov
ss
xchg
jecxz
jns
cwtl
mov
stos
pushf
lret
sub
cltd
cmc
loope
mov
adc
mov
adc
and
rclb
enter
sbb
mov
add
jns
jnp
xchg
sub
rcrb
out
movsl
outsl
mov
sub
pop
cmp
iretw
push
mov
and
mov
rcrl
dec
and
and
cmpsl
lock
add
ret
or
aas
mov
mov
in
cmp
sub
push
lahf
cwtl
mov
add
rolb
push
mov
adc
test
adc
bound
sub
out
or
repz
lods
fs
ds
cmpsl
mov
xchg
dec
clc
insl
xchg
xchg
shlb
xor
mov
or
movsb
pop
cmpsl
add
lret
adc
lods
clc
sbb
lcall
scas
xor
xchg
ror
cmp
cmc
jle
jg
push
sub
leave
lods
mov
aas
pop
pop
pop
lds
mov
sbb
pop
jno
shll
imul
adc
stc
sub
sub
jno
mov
and
stc
or
aas
jl
and
or
jecxz
sbbb
mov
inc
jo
aam
lea
pop
fsubs
repnz
das
icebp
pushl
cmc
movsl
sub
ret
xor
imul
and
and
lods
mov
push
outsb
aaa
sahf
fwait
add
inc
fbstp
ss
mov
test
outsb
pop
sbb
call
fucomip
fidivrl
sldt
add
sbb
in
jmp
lahf
jle
stos
xchg
inc
scas
add
lods
add
add
leave
mov
xor
mov
mov
inc
jle
inc
gs
mov
jp
lea
dec
aas
rcll
movsb
sbb
cmc
pop
inc
mov
insl
loopne
outsb
jmp
dec
imul
dec
scas
push
into
subl
into
pop
or
and
shl
xchg
xchg
mov
cmpsl
sahf
push
and
xchg
fstl
adc
push
jnp
in
lahf
xor
loope
rcrl
pop
xchg
jae
jno
out
xor
icebp
cmpsb
outsl
jb
xchg
push
inc
and
push
pop
push
sub
outsb
pop
scas
inc
cmpsl
jns
out
xchg
fldt
scas
sbb
xor
scas
mov
cmp
mov
pop
mov
jae
sbb
mov
xor
mov
clc
fcmovbe
std
nop
out
data16
mov
into
rolb
pop
in
cmp
inc
sbb
ja
stos
sbb
xlat
and
cwtl
sbb
lahf
xchg
aas
movl
ret
adc
push
dec
add
ss
hlt
ret
bound
sbb
or
jg
mov
ds
imul
jge
or
gs
int
mov
xor
mov
rcr
ljmp
push
rorb
into
pop
pushf
push
mov
js
stc
stos
dec
je
sti
and
and
add
loope
add
mov
mov
jbe
mov
fsubrl
jge
mov
fisubs
mov
stos
or
stos
pop
jb
mov
iret
repnz
lods
jmp
lcall
movsb
add
pop
ficoml
stc
out
loop
aam
lods
jecxz
out
jae
popa
ds
jno
rclb
popf
mov
rdpmc
sbb
jecxz
push
movsl
mov
test
test
xchg
lods
cltd
mov
sub
mov
cmp
sar
rcll
inc
pushl
scas
icebp
sub
std
lcall
lahf
push
cmp
pop
pushf
sar
clc
loop
or
and
mov
arpl
push
and
jle
cmp
ss
mov
ljmp
cmp
loope
divl
or
ficoms
mov
fldenv
jg
stc
add
sub
mov
mov
mov
int3
out
mov
or
inc
push
ret
sub
test
cmp
mov
adc
shll
lahf
test
xchg
mov
imul
and
clc
cmpsb
sbb
push
xchg
sbbl
pop
pushf
andl
imul
fmuls
dec
scas
iret
and
loopne
xchg
or
inc
push
push
hlt
cwtl
imul
mov
sbb
es
test
cmp
dec
loopne
xor
rorb
adc
cld
cmp
in
test
mov
jnp
repz
leave
test
xchg
aad
lods
loope
mov
std
mov
jp
sub
jecxz
repz
loop
mov
inc
mov
pushf
inc
adc
mov
cmp
cmp
lods
jbe
mov
icebp
lods
adc
loope
movsb
ficoms
jmp
mov
fisubrs
cltd
mov
sbb
pop
shr
push
push
mov
xchg
in
test
mov
sbb
das
insl
xor
or
daa
push
xchg
push
loop
add
add
mov
decl
mov
sti
mov
add
pop
xchg
cmp
adc
xor
aam
inc
int3
add
arpl
fisttps
mov
movsl
push
mov
push
dec
xchg
xor
scas
mov
fs
mov
jmp
repz
add
icebp
loop
dec
in
push
jns
sub
sahf
sbb
xor
fisubl
mov
test
push
mov
mov
adc
xor
imul
inc
aam
je
sti
push
loop
cmpsb
cmovle
and
add
call
sbbl
pop
int3
mov
loop
nop
mov
mov
xchg
loopne
add
cmc
sbb
in
leave
push
sub
aaa
out
push
or
test
divl
mov
ret
addr16
xlat
sbb
into
inc
jle
testb
in
arpl
xor
jae
jge
bsf
test
jg
das
pop
lods
cmp
aaa
pop
ret
cmp
adc
push
nop
test
xlat
xor
inc
or
das
sub
inc
or
sti
xchg
sbb
pop
aam
push
dec
imul
sub
adc
lret
test
sub
jmp
mov
inc
add
fs
lcall
mov
repz
push
mov
xchg
fsubrs
clc
fldl
cmc
jp
jge
xchg
sbb
test
xor
jnp
in
pop
xchg
push
out
add
mov
movb
fucom
add
xchg
cmovae
loope
daa
adc
inc
pop
mov
mov
aam
sbb
mov
rcll
fadds
fwait
int
jbe
pop
mov
loopne
loope
mov
outsl
int
jle
add
ds
enter
pop
bound
sub
addb
dec
pop
in
fnsave
push
or
add
hlt
mov
dec
in
lret
fwait
or
test
sub
push
push
mov
sub
mov
add
repz
and
sbb
add
dec
test
test
adc
mov
dec
imul
lret
sbb
jae
add
xchg
test
shlb
test
js
mov
loope
adc
mov
insl
inc
dec
std
mov
in
push
in
scas
movsl
inc
cmpsb
jg
adc
popf
inc
ret
push
sbb
repz
js
rcll
lods
add
add
sub
push
in
cltd
jnp
jmp
sbb
sahf
jns
and
xchg
xor
jne
cmp
cmp
cmp
mov
mov
inc
popf
jne
fdivr
jecxz
xor
ja
push
or
mov
sbb
or
sub
ss
popl
rorl
inc
shr
cmp
xor
push
mov
add
mov
and
lock
pop
add
rolb
mov
mov
adc
mov
xor
jnp
xchg
call
repnz
int3
out
mov
mov
xchg
shrb
xor
sahf
or
fdiv
adc
jge
sahf
mov
mov
xchg
jle
cmp
cs
push
xlat
movb
mov
clc
sbb
cmp
ss
shl
movsb
add
fxch
leave
xor
add
add
lret
xorb
icebp
lret
aam
imul
mov
add
lods
add
add
shrb
pop
pop
push
inc
arpl
jecxz
mov
cmpsb
daa
xchg
out
sbb
aas
in
sub
mov
push
sbb
pop
popa
jge
pop
cmp
cmp
pop
ror
mov
int3
xor
mov
fbstp
push
shll
and
mov
repnz
or
inc
cmpsb
test
mov
add
xorl
shr
pushf
inc
mov
mov
lahf
movsl
int
lock
mov
movsl
aam
sbb
xor
dec
add
push
mov
pop
addl
fidivrl
jecxz
sub
sahf
dec
sbbb
sub
push
push
ljmp
jl
push
in
clc
loopne
shrl
ljmp
pop
sbb
adc
subl
dec
out
jmp
je
pop
add
fldl
inc
addr16
jmp
pop
aas
mov
aam
or
and
adc
adc
inc
fcomps
push
xor
dec
stos
out
push
push
mov
mov
inc
clc
push
pop
mov
push
out
loopne
insl
mov
ds
mov
jecxz
pop
adcl
leave
hlt
out
jno
xchg
cmpsl
and
or
mov
std
xchg
sub
jo
inc
or
test
mov
xchg
stos
pushf
mov
jecxz
jp
dec
outsl
addb
outsl
jo
jbe
jle
jp
adc
ja
lods
cmpl
mov
mov
pusha
loope
jecxz
shr
lock
xchg
mov
pusha
sbb
inc
stos
dec
ja
and
lret
sub
out
lods
das
push
push
jl
stc
xor
mov
sub
xlat
sahf
add
stos
sub
mov
cmp
test
test
sbb
rolb
mov
sbb
or
shll
mov
in
inc
data16
adc
in
adc
pop
add
push
xchg
push
ficomps
in
in
mov
enter
loopne
mov
cmp
or
lods
dec
pop
mov
in
cmpsl
pop
sahf
cmp
lahf
and
pusha
sbb
shll
dec
mov
mov
sub
sahf
cmpsl
aaa
enter
mov
mul
cmp
and
xchg
push
gs
push
scas
mov
mov
test
jne
das
scas
outsb
stos
nop
mov
lock
int
aas
pop
rcr
jl
ret
scas
cltd
sub
sub
fcmovnu
pop
mov
jmp
outsl
mov
aam
es
outsl
hlt
iret
add
jnp
mov
inc
dec
adc
mov
in
adc
jp
neg
lock
fcompl
ret
fdivl
add
stc
icebp
mov
jb
mov
fcoml
aam
mov
mov
stos
les
stos
lods
scas
cltd
clc
pusha
outsb
movsl
addl
mov
pop
cmp
cmp
in
addr16
clc
in
mov
add
mov
or
xlat
jl
pop
inc
sub
cmpsl
mov
mov
sub
mov
inc
xchg
insl
add
sub
sub
xchg
shlb
pop
dec
mov
pop
inc
lds
mov
pushf
mov
aad
pop
or
mov
pop
mov
scas
fdivl
out
push
sub
add
add
in
jp
jp
in
sarl
bound
dec
mov
add
cltd
lock
in
cld
test
sti
lcall
imul
inc
sahf
popa
nop
mov
push
pop
loope
jnp
out
sahf
cwtl
mov
pop
mov
jecxz
inc
and
jb
sbb
pop
jecxz
outsl
ret
xor
mov
repz
adc
mov
xor
adc
in
push
pop
call
in
mov
mov
into
mov
or
ja
test
cmp
mov
ret
inc
jne
mov
imul
jecxz
push
and
out
rcr
push
adc
add
out
fcomps
aas
mov
int
xchg
sbb
out
mov
das
add
dec
jo
imul
pop
mov
enter
hlt
mov
sti
ss
xlat
out
cmpsl
call
mov
rcrl
xchg
repz
mov
ss
repnz
repnz
hlt
push
stos
in
dec
jge
cmp
mov
or
sbb
jo
orl
movsb
scas
pmaddwd
sub
mov
sbb
ror
cmp
in
cmp
inc
sub
leave
mov
addl
or
mov
mov
xor
sub
sbb
mov
hlt
or
shlb
pop
dec
in
ja
push
arpl
adc
sbbl
dec
cmp
push
movsb
sbb
adc
test
leave
pop
inc
xchg
movsl
cmp
fstl
rorb
jae
mov
push
fistl
aad
sub
rcrl
int3
into
inc
inc
add
pop
xchg
sbbl
fdivrs
pop
push
cli
jmp
push
cmp
xor
lds
sub
xchg
jg
pusha
enter
daa
je
push
int3
mov
and
sbb
sarb
xor
clc
out
mov
stos
fs
nop
sahf
das
dec
in
arpl
inc
pop
xor
aad
jbe
scas
scas
add
inc
fstpl
pop
repz
mov
dec
sti
lret
xchg
add
and
negb
stos
xchg
dec
xor
loopne
cmpsb
fisttpll
pop
mov
aas
pop
dec
xlat
inc
lahf
xchg
jmp
mov
les
int
mov
imul
flds
mov
iret
adc
pop
push
fidivs
add
push
pop
mov
out
lods
push
notl
mov
ficoms
mov
shlb
xor
and
xchg
bound
mov
outsb
push
and
jp
test
repnz
rorb
es
mov
leave
insl
xchg
xchg
mov
outsl
ret
mov
jae
je
cmc
and
cmp
call
push
xchg
into
fldt
mov
rcl
imul
inc
addr16
xchg
in
mov
mov
ds
mov
popf
ss
add
fwait
cmp
jno
inc
repz
fidivrl
and
mov
ret
or
mov
add
sbb
lcall
in
jns
pop
pop
popa
icebp
negb
inc
cmp
aam
mov
mov
mov
or
leave
fldcw
mov
or
out
movsb
sbb
add
insb
and
cmpsl
rorl
addr16
jmp
dec
cmc
out
fsub
dec
rcll
sbb
mov
pop
push
jae
adc
aaa
insl
loop
mov
fimuls
sub
xchg
jbe
fcmovnbe
mov
add
imul
lahf
push
jl
dec
mov
mov
cmc
mov
add
mov
shl
out
in
clc
push
lods
cmc
sbb
xor
lcall
dec
mov
filds
mov
dec
push
lahf
jecxz
roll
aaa
int3
mov
jg
push
test
pusha
jno
jl
inc
push
mov
out
sub
addr16
jmp
adc
scas
pusha
or
adc
stos
lods
jbe
in
jg
insl
xlat
mov
jmp
jp
jb
dec
inc
cmpsl
add
repz
mov
mov
clc
or
loop
dec
add
pushf
mov
nopl
xlat
in
xor
mov
xor
jno
fistl
push
dec
add
test
and
push
xor
or
cmpsl
icebp
orl
test
jns
push
enter
imul
lret
xchg
lods
push
out
leave
push
xchg
nop
push
insb
cmpsb
inc
mov
add
jg
popa
dec
xchg
and
or
inc
jne
xor
mov
stc
mov
hlt
mov
hlt
and
and
sbb
push
add
movsl
mov
adc
jp
mov
fwait
addb
lods
test
push
inc
stos
cld
push
sbb
push
or
push
sub
mov
sbb
in
pop
imul
fdivr
std
lods
out
dec
mov
push
mov
clc
cmp
fwait
imul
int3
inc
or
mov
sbb
jge
cwtl
sub
das
push
fidivrl
mov
cmp
roll
mov
shlb
sbb
dec
sub
jge
xchg
pop
out
stos
inc
daa
pushf
aad
icebp
out
jg
mov
mov
adc
sub
gs
pop
scas
and
in
aas
xor
push
adc
mov
push
fisubrl
adc
int3
je
sub
repz
dec
mov
outsl
inc
pop
mov
xor
movsb
aam
push
flds
inc
ds
mov
mov
daa
add
add
icebp
lahf
jns
jecxz
pushf
nop
mov
add
mov
jns
fldl
outsl
xchg
mov
lock
cmp
and
add
or
add
out
outsb
push
aas
aas
std
push
mov
ss
sbb
vcmppd
cmpsb
xchg
test
add
cmp
andl
cmp
jle
cwtl
xchg
cltd
dec
inc
lock
fwait
push
imul
sarb
or
divb
pop
test
xor
mov
mov
loope
bound
fiaddl
daa
dec
cmp
lahf
dec
out
imul
xor
pop
clc
sbb
or
cld
xorb
xchg
mov
add
xchg
dec
repz
mov
jmp
adc
cmp
test
fistpl
push
mov
sub
dec
inc
je
adc
mov
pushf
cmpl
mov
push
cwtl
inc
and
mov
addb
addr16
jge
sbb
in
imul
or
mov
cmp
lret
mov
faddl
jmp
dec
or
adc
lods
lcall
push
fiaddl
jbe
jno
fs
test
add
add
out
mov
cmp
pop
fst
or
lods
add
add
rclb
cmpsl
jno
xchg
mov
push
pop
aam
cmc
stos
xchg
mov
adc
mov
aaa
imul
mov
das
outsb
push
jge
mov
enter
add
and
in
add
xchg
and
sarb
jmp
ds
sti
jle
ljmp
mov
fcmovne
notl
test
and
icebp
insl
incb
stos
inc
in
pop
nop
sub
mov
adc
cwtl
sub
push
xor
mov
push
dec
push
ret
sbb
sub
add
repnz
mov
xlat
lahf
repnz
mov
out
mov
inc
push
pop
mov
in
push
push
fstps
or
shrb
and
pushl
mov
repnz
int3
idiv
push
das
jae
xchg
push
jb
lcall
pop
cs
lahf
ds
pop
lods
out
aam
das
cli
mov
adc
jno
sub
bound
imul
addb
sub
sbb
xchg
ja
cmp
in
or
xchg
and
inc
xchg
incl
add
dec
adc
or
dec
sti
cmp
jmp
adcl
dec
out
pop
jmp
jnp
sbb
pop
or
push
sub
sub
xlat
inc
popa
sub
inc
loope
js
test
mov
push
mov
lock
gs
and
lahf
rorl
mov
ss
inc
outsb
ds
xchg
inc
dec
add
sbb
push
mov
aas
mov
jb
jb
stos
push
fidivl
sbb
inc
mov
sbb
mov
mov
pop
xchg
bound
test
cmp
orb
gs
lahf
push
in
in
sub
adc
cs
dec
push
xchg
adc
ja
dec
out
jnp
fwait
sub
int
mov
dec
push
mov
loope
call
push
stos
pop
in
cmp
loop
cmp
dec
sub
push
movsb
stc
xchg
xchg
dec
xorb
bnd
out
adc
jle
int
pop
pusha
push
dec
sbb
mov
popa
enter
or
popl
fcomi
cmpsb
push
or
push
cmp
sahf
test
sub
int3
xor
pop
lret
and
in
mov
sub
call
cmp
mov
out
in
js
call
je
pop
cmp
inc
cmpl
clc
out
bound
iret
in
dec
and
mov
jl
mov
jo
pop
sub
iret
test
fcomi
xor
xor
dec
imul
test
lock
sti
xchg
lea
or
rol
xchg
lret
pop
movsl
add
incl
fidivrs
jecxz
in
pop
and
es
sbb
mov
push
rclb
gs
push
rolb
mov
jg
sub
jmp
sbb
imul
jns
pop
lea
test
xor
pop
out
dec
movl
inc
stc
and
icebp
cmp
cwtl
xchg
idiv
jle
popf
mov
dec
mov
xchg
lret
xchg
divps
xor
ret
dec
xchg
mov
ficompl
adc
je
push
in
js
push
ss
inc
or
jg
addr16
mov
add
add
mov
xor
inc
cmp
dec
lds
add
cmp
jmp
pushf
inc
sub
pop
cmp
sub
xchg
and
lret
daa
repnz
xchg
bound
dec
mov
push
push
les
dec
cltd
lods
sahf
push
jmp
mov
jmp
fsubrl
dec
popf
xchg
push
das
fsubl
rorb
mov
test
cmp
addb
jns
in
mov
movsl
mov
stos
xor
or
mov
clc
mov
dec
or
subl
cmp
sbb
inc
xor
xor
dec
lret
into
push
imul
sbb
and
mov
aaa
adc
add
pop
dec
dec
mov
jecxz
cli
fs
jg
fstpt
dec
adc
outsb
ja
shlb
daa
incb
insb
adc
mov
mov
dec
and
fisubrs
cltd
dec
pushf
jecxz
mov
popl
jecxz
mov
mov
lret
sbb
jecxz
ret
inc
lahf
mov
sub
and
mov
inc
lret
cmc
or
sbb
add
iret
sbb
cli
xchg
sub
or
and
movsl
rorl
repnz
cltd
movsl
cwtl
aas
in
rcr
mov
jns
inc
pcmpgtb
aad
aas
push
pop
and
in
mov
jecxz
sub
inc
mov
int3
movl
sbb
jb
rcll
arpl
lods
jl
imul
lds
push
pop
pop
sbb
mov
aaa
mov
leave
mov
xor
test
jle
gs
int
aas
cwtl
int3
sub
jg
imul
ds
repnz
sub
lret
rcrb
push
mov
jo
dec
es
inc
fadd
pop
mov
xor
xchg
mov
xchg
sbb
xor
xor
sub
dec
scas
jae
sub
rcll
outsb
inc
xor
and
sub
lock
ret
lret
push
xchg
cmpsl
fisttpll
aas
in
paddd
cwtl
inc
mov
rcrw
dec
cmp
sar
inc
jae
push
int3
dec
leave
mov
fwait
cmp
xchg
push
cwtl
pop
aad
sahf
push
dec
andl
and
jns
incl
jae
mov
lea
movsl
jno
ljmp
mov
into
nop
outsb
or
push
pushf
adc
xor
into
dec
adc
popa
or
add
pandn
das
jecxz
cmovne
xchg
mov
test
mov
and
xchg
inc
add
add
fldpi
das
nop
and
pop
jns
stos
mov
lahf
call
notl
decb
xlat
addr16
scas
dec
rorl
pop
dec
shlb
adc
shll
dec
ficomps
xor
aad
add
pop
xor
xchg
mov
insb
mov
lock
and
cmp
fwait
push
dec
xchg
and
add
add
cltd
scas
sbb
pop
jns
sar
mov
cmp
add
popf
or
inc
mov
negl
dec
jg
jl
xchg
and
adc
xor
jo
jp
rorb
dec
jp
jne
and
pop
movsl
ljmp
dec
lock
imul
dec
pop
xor
enter
add
add
je
out
mov
test
mov
fwait
ss
push
adc
mov
data16
xchg
int3
addr16
and
fidivrl
dec
xchg
lahf
stc
push
inc
dec
jmp
and
inc
loope
push
inc
int3
shlb
test
inc
push
mov
daa
mov
cmp
dec
pop
xchg
sar
xchg
mov
or
popa
cmpsl
iret
lods
mov
cmpb
mov
mov
pushl
lcall
dec
out
lret
lea
jo
fucomp
loopne
mov
mov
jp
xchg
fstpt
cmp
push
cmp
push
inc
iret
hlt
cmpsl
and
jge
hlt
mov
mov
addr16
or
sub
xor
sbb
shll
lahf
leave
mov
lret
cli
fwait
movsb
lahf
loope
adc
iret
xor
inc
pop
sti
lcall
add
ss
int
lea
xor
add
scas
adc
gs
repnz
adc
shrl
movsb
mov
fidivl
lcall
arpl
push
jge
flds
jle
add
push
test
loope
pop
imul
fwait
xchg
lret
and
cmp
and
pop
lahf
and
scas
rcrb
jns
aad
xchg
gs
mov
in
inc
sub
sub
and
les
subl
sub
ret
sub
insl
hlt
cmpsb
sub
push
and
pop
call
mov
into
outsb
dec
jae
or
movsb
outsl
divb
mov
sbb
test
bnd
ret
lahf
sbb
and
cmp
jle
jg
jp
test
in
xchg
popf
mov
push
and
xlat
push
aam
jne
xchg
bound
lea
movsb
add
mov
rep
adc
rolb
pop
ret
push
dec
inc
push
jbe
pop
int3
fwait
insl
mov
lahf
adc
lods
and
mov
mov
shrb
fdivr
sub
ret
mov
outsb
and
push
sub
in
push
push
insb
popf
stos
pushf
popa
cli
pop
mov
jae
mov
jb
pop
xchg
lret
mov
divl
pop
outsb
mov
out
xor
cs
aad
fwait
imul
loop
dec
jne
dec
mov
mov
sub
pop
mov
filds
xchg
sbb
pusha
outsl
xor
test
test
dec
daa
dec
or
xchg
hlt
jae
and
mov
push
sub
inc
daa
mov
dec
out
mov
pushf
sti
shlb
dec
pop
out
imul
mov
mov
outsl
push
mov
mov
loope
sub
popa
xor
jno
mov
inc
outsl
mov
lods
jns
xor
add
mov
rorb
nop
jg
pop
outsl
leave
xor
dec
jb
or
testl
aad
test
int
stos
jno
push
or
mov
mov
push
fldl
fwait
or
cs
xor
repnz
and
test
xor
add
leave
insl
fisubs
sub
call
sbbl
push
inc
cwtl
sti
cmp
xor
test
pop
jecxz
add
test
xlat
scas
shrl
cmpsl
in
jmp
or
scas
jmp
popa
mov
or
int3
add
lods
add
add
movsl
ret
nop
repz
mov
pop
xor
int
addr16
jns
les
pop
inc
stc
xlat
insb
add
sub
stos
jo
mov
cmp
in
xchg
mov
or
mov
mov
cmpb
or
cmp
aaa
aaa
pop
xchg
test
lret
lds
es
add
cltd
and
dec
xor
in
into
ds
sbb
test
loop
cmp
xchg
sbb
sbb
addl
es
cmpsb
xchg
rorl
cmpsb
bound
mov
in
xchg
fnsave
in
ljmp
stos
pop
lock
pusha
stos
popa
mov
pop
mov
clc
xor
mov
out
mov
jno
add
ret
cmpsb
repnz
pop
xor
push
xchg
mov
jb
pop
cmp
pusha
xchg
and
mov
push
jae
inc
insb
push
repz
sub
fiaddl
jbe
fadds
sti
push
cmp
aaa
cli
inc
arpl
andb
mov
mov
mov
repz
js
movsl
inc
into
xor
xorb
jge
jnp
and
sbb
jno
cmp
mov
stos
outsb
cltd
xor
aaa
mov
out
and
xchg
xchg
dec
dec
add
sbb
push
cmp
mov
icebp
mov
cmp
mov
push
add
pop
out
shlb
mov
mov
jno
lds
lods
mov
scas
push
or
pop
mov
mov
mov
out
std
pop
jecxz
mov
and
in
mov
hlt
pop
push
lods
sti
sbb
mov
dec
or
mov
xchg
inc
xor
movb
ds
dec
fs
cs
pop
dec
loop
jecxz
and
rorb
pop
push
mov
out
sub
and
in
inc
push
nop
mov
cmp
rcr
lock
dec
xchg
ss
arpl
jo
jbe
imul
orb
xor
xor
lock
xchg
loopne
aam
sbb
add
repnz
test
sub
cld
scas
sbb
add
mov
in
test
ror
mov
inc
lods
call
cmp
push
cltd
jp
adc
pop
test
scas
rolb
sub
mov
clc
pop
xchg
or
rolb
ljmp
leave
scas
ja
repnz
notl
testb
push
cmp
scas
mov
inc
std
dec
lock
rorb
out
mov
fnstsw
sbb
loopne
push
mov
jecxz
data16
fmul
cmp
inc
lret
push
add
xor
jns
mov
push
mov
mov
mov
fists
addr16
insb
cmp
outsb
in
add
cltd
xor
popl
jp
vpaddd
xchg
mov
imul
bnd
sbb
inc
xchg
jno
jge
mov
sub
or
and
jo
xor
sbb
xchg
vpackssdw
mov
loop
ds
dec
push
ds
cmc
in
aaa
jb
lret
cmp
push
das
cmp
shrd
and
test
push
mov
add
in
test
push
cld
mov
push
rolb
add
scas
adc
jb
stos
jl
and
fnstsw
fdivl
nop
xchg
stc
fs
in
xor
jb
fsubr
mov
mov
xor
out
aaa
pop
jmp
or
xchg
pop
test
mov
in
xor
div
test
cltd
jae
inc
xorl
scas
dec
mov
imul
bnd
or
lahf
ret
xchg
sti
dec
movsb
mov
xchg
sub
fninit
sub
filds
sbb
add
decb
pop
sbb
add
fcompl
jge
mov
xchg
outsb
and
sarl
sub
lahf
fdivs
lock
ja
pop
jp
mov
pop
int3
mov
push
sbb
in
pop
lahf
int3
sbb
sub
pop
sub
shlb
mov
and
xlat
outsb
and
out
out
xchg
stc
bound
add
sbb
fucom
jecxz
xor
in
mov
ja
pop
xor
fisttpl
or
mov
es
push
test
cld
jno
inc
sti
and
jge
mov
xor
mov
roll
loope
push
dec
mov
inc
sti
lock
adc
negb
adcl
out
scas
push
inc
lods
dec
mov
rolb
lret
dec
jge
jp
fwait
aad
jle
int3
jnp
dec
and
xchg
push
rclb
push
mov
add
jmp
fldt
bound
add
mov
lds
subb
xchg
cmp
scas
and
lods
lcall
test
out
pop
cmp
mov
xchg
aaa
mov
imul
scas
inc
addr16
ret
push
pop
cmpb
jle
add
jae
jle
adc
stos
addr16
lds
inc
cmp
or
push
jo
or
stos
xchg
inc
cmp
adc
scas
out
std
sarb
pushf
inc
xchg
inc
dec
cld
add
test
outsb
rcl
hlt
cmpsb
jne
mov
pushl
xor
lods
push
test
push
movsb
inc
mov
or
pusha
cmc
gs
mov
xchg
mov
xor
lds
scas
or
mov
je
lret
sub
bound
sahf
inc
das
mov
pop
test
inc
cmp
iret
jle
add
lcall
ds
dec
push
stc
cmp
mov
push
movsl
js
lret
push
jbe
daa
popa
push
or
outsb
sub
idivb
mov
jg
xchg
and
pusha
xchg
test
dec
call
xchg
test
xchg
or
add
hlt
ss
dec
inc
inc
sbb
mov
pop
clc
sub
pop
jp
xchg
fwait
xchg
test
push
sbb
loope
sub
aaa
insl
lcall
js
and
lcall
mov
jl
push
xor
enter
les
iret
mov
inc
scas
outsl
and
mov
idiv
div
aam
mov
je
nop
hlt
mov
cs
pop
icebp
adc
fmull
sbb
gs
push
mov
hlt
mov
mov
jnp
aad
pop
rol
lds
rol
sbb
shll
mov
int3
int
xchg
clc
mov
arpl
cmp
pop
push
leave
popf
lret
popf
pop
xlat
loope
fs
push
add
add
and
xor
ja
xchg
jp
popl
lcall
mov
data16
mov
pop
xchg
or
or
pop
add
lods
ss
jae
fnstcw
inc
mov
jb
add
mov
clc
jge
pop
xor
jne
adcb
or
js
sub
xchg
aam
add
cmp
cmpsl
imul
mov
cmpsl
test
mov
push
pop
loopne
in
jp
inc
les
inc
lods
iret
inc
cmpsl
shll
sahf
sub
and
loope
sarl
lcall
dec
inc
ret
push
cld
jp
fs
jmp
int
sar
push
jecxz
flds
leave
xchg
push
int3
push
xchg
fs
pusha
cwtl
mov
adc
xor
cmp
data16
xchg
int3
test
mov
and
sub
ljmp
leave
ljmp
mov
pushf
sar
lods
sahf
mov
mov
das
inc
and
mov
jbe
popa
mov
mov
ret
and
fcompl
ret
or
inc
jge
xchg
dec
cmc
addr16
fcomps
add
pmaxsw
stos
pop
les
and
fists
pop
jb
mov
test
outsb
push
shll
pop
in
jno
imul
add
add
pop
xchg
xchg
in
pop
cmp
or
inc
jge
sub
pop
jmp
jl
push
lods
fnstenv
mov
mov
inc
cld
rorb
popf
mov
push
mov
jno
dec
or
gs
xchg
cwtl
movsb
or
mov
inc
mov
int
ss
ror
dec
add
fsubs
mov
sub
mov
sub
dec
add
aam
pushf
mov
movsl
imulb
nop
mov
xchg
mov
inc
cmp
jmp
mov
hlt
cmc
fwait
jge
aam
sub
push
sar
and
aad
xchg
sahf
push
push
pop
enter
dec
ss
mov
adc
push
jle
push
pop
mov
mov
mov
sahf
daa
pop
mov
and
loope
clc
incl
mov
cli
jl
shlb
cld
cld
add
xorl
or
jmp
adc
cmpsb
sub
es
je
fisttps
or
jno
sarb
out
jb
xor
xchg
inc
insb
mov
push
popa
stos
ret
aad
sub
out
cmpsl
jns
pop
mov
jge
dec
dec
xor
ljmp
arpl
push
out
pop
testl
stos
xchg
pop
lds
movsb
push
int3
test
sub
sbb
andl
jle
push
into
scas
inc
fisttps
into
push
lods
cmp
or
dec
xchg
clc
xchg
or
xor
add
scas
lcall
js
dec
ds
loope
xor
imul
lret
arpl
mov
inc
stc
clc
cmc
sbb
mov
dec
mov
mov
mov
add
cmp
aam
mov
out
aad
push
outsb
jo
adc
xchg
cli
sub
mov
es
mov
mov
jge
scas
jmp
dec
gs
cwtl
or
dec
mov
sub
stos
xchg
outsb
jmp
cmp
sbb
mov
sti
lcall
dec
pop
popa
sub
xlat
add
lods
add
add
out
cmp
jg
fistl
pop
pusha
sbb
xchg
je
mov
xchg
sarb
mov
inc
popf
add
insl
test
mov
jp
adcl
jecxz
movsl
xchg
jg
scas
lahf
add
outsb
cmpsb
mov
shl
push
push
rcrb
jae
inc
mov
cmp
mov
add
orl
orl
push
mov
sub
fmuls
cmpl
test
add
inc
sub
inc
xchg
cmp
push
jb
push
lret
daa
sbb
cld
push
scas
insb
or
xor
xor
ror
cmp
mov
insb
fs
cmp
pushf
sub
fidivrs
jb
jge
sbb
xchg
sbb
lret
pop
push
adc
push
les
push
fs
mov
sbb
adc
sahf
out
add
cs
adc
or
or
xchg
aaa
xor
inc
inc
xchg
andl
add
pop
insl
pop
lahf
cwtl
shll
pop
hlt
iret
iret
lcall
ss
dec
les
shll
or
push
lods
sahf
pop
out
push
hlt
pop
loope
cmp
ljmp
in
fwait
push
adc
cmp
sahf
push
xchg
aas
arpl
addb
push
and
movsb
pop
fldt
movsb
xchg
in
aaa
fadds
fistps
jbe
mov
inc
jne
scas
lock
pop
xor
hlt
enter
lret
rclb
movsb
movsb
orb
dec
aam
mov
mov
push
dec
adc
out
int
fcompl
push
sbb
out
adc
add
or
out
sbb
dec
popa
inc
xchg
xor
add
mov
xchg
jbe
add
and
ja
sub
adc
inc
sub
jb
xchg
jg
lock
add
jbe
jae
jge
pushf
call
push
shl
xchg
pop
in
popl
lock
dec
inc
add
inc
push
sub
xchg
push
sub
in
or
aam
in
or
cmp
leave
into
pusha
je
aam
cmp
imul
lods
mov
sbbl
ds
insb
cli
lret
sub
adc
ss
ret
mov
cmp
push
cli
adc
add
aad
mov
es
shrl
jmp
inc
inc
sub
push
and
push
mov
test
test
mov
mov
iret
pop
push
dec
and
push
or
inc
cltd
jno
faddl
pop
outsb
rcll
and
jmp
mov
clc
adc
bound
stos
add
mov
cmp
shlb
fwait
add
stos
xor
pop
xor
mov
sub
and
add
mov
sub
ret
rcll
dec
cmp
pop
sbb
movsl
leave
int
add
and
sbb
insb
mov
pop
xchg
insb
jbe
add
shlb
pop
lods
call
aas
jns
mov
notb
mov
sub
xchg
push
sbb
ljmp
pop
lock
repz
sub
jmp
push
push
imul
test
imul
jb
daa
shrl
inc
jle
leave
ss
inc
mov
mov
into
jbe
sub
pop
sub
pop
and
andl
dec
aaa
addr16
loop
push
data16
decl
std
or
stc
cmc
ret
add
lods
add
add
leave
xor
cld
repz
shl
insb
pop
movsb
lods
push
xchg
shll
lret
test
xchg
xor
loopne
test
rcr
push
fldpi
xor
xlat
dec
xchg
mov
imul
mov
scas
cwtl
je
popa
movsb
nop
xchg
nop
pop
inc
push
add
pusha
out
cmp
hlt
push
loope
lahf
xor
mov
ja
lods
fimuls
in
or
test
mov
loopne
dec
add
pop
cmpsb
mov
je
mov
icebp
xchg
popf
mov
dec
push
shll
jnp
lock
cmpl
pop
mov
push
adc
cmp
cmc
in
pop
mov
xor
sub
sbb
pop
push
notl
mov
mov
or
xor
lods
cmpsl
das
sarb
mov
lret
ljmp
iret
aad
push
in
inc
cmp
out
and
dec
sti
aas
je
xchg
dec
add
push
sbb
ret
out
pop
ficoms
xchg
mov
lret
aam
pop
jmp
mov
cmc
add
mov
xor
ss
push
jno
movsb
imul
xlat
cmp
fstp
inc
outsl
pop
sub
fwait
mov
mov
in
adc
jbe
add
aam
fsub
mov
aam
call
mov
xchg
mov
xchg
inc
sub
sahf
rorb
xchg
insl
mov
mov
xchg
xchg
ljmp
clc
pop
cmp
aad
fdiv
adc
lock
push
jge
or
and
or
rorb
push
push
and
mov
rclb
jg
pop
and
rorb
shl
xor
adc
xor
push
jne
int
sbbb
mov
subb
xchg
outsb
int3
outsl
outsl
fwait
movsb
or
adc
xchg
arpl
mov
jno
int
mov
push
xchg
ror
andb
imull
inc
pop
aam
adc
push
xchg
xchg
mov
sti
pop
mov
jge
stos
pop
jmp
push
cs
outsl
daa
mov
jnp
fucomp
jl
mov
repz
add
inc
jne
xchg
pop
in
mov
sub
mov
add
subb
inc
dec
test
loop
imul
sti
jns
or
push
fsubl
in
and
cmp
fildll
xlat
sub
jne
jns
inc
xlat
jbe
adc
mov
mov
in
cli
xchg
ja
in
push
xchg
push
gs
sbb
test
mov
xchg
cmp
sbb
sbb
push
xchg
sbb
aam
rcll
inc
jbe
orl
xor
pushf
jl
add
push
cltd
bound
addr16
xor
dec
adc
cmp
std
or
aas
push
pop
mov
mov
das
aam
rcll
jno
push
shr
and
mov
mov
mov
push
or
pop
cmp
fwait
sar
rcrb
inc
sti
sahf
outsb
mov
jp
hlt
cwtl
iret
pop
clc
lods
and
dec
push
ljmp
add
nop
mov
pop
fwait
dec
sarl
imul
xchg
pushf
leave
jg
imul
add
in
idivb
xchg
inc
adc
push
cs
stc
adc
jno
mov
loopne
dec
out
pop
repz
jmp
add
xlat
mov
pop
lea
add
add
into
psrld
rcr
fistpll
push
push
add
add
lods
add
add
cltd
add
mov
xor
or
push
jno
push
cli
imul
mov
push
pop
cwtl
je
rorb
push
xchg
lret
lret
cmp
fisubrs
lret
mov
cltd
pop
and
lods
mov
adc
pop
out
mov
ret
sti
test
jb
rep
sbb
jbe
and
inc
mov
pop
push
pop
add
mov
pop
mov
out
pop
add
movsb
cmp
pop
push
jno
push
lock
out
dec
sbb
sub
scas
loope
add
lcall
push
push
repnz
mov
xchg
xlat
aad
xor
sarb
dec
push
pop
cmp
popf
movsb
jp
pushf
fisubrs
add
mov
lds
or
fwait
cwtl
nop
jg
outsb
pop
pop
leave
sub
call
les
pop
xchg
inc
insb
insb
ss
jns
xorb
jle
inc
pop
sahf
imul
pop
sarb
or
push
std
mov
daa
daa
push
daa
outsl
lods
push
enter
filds
push
inc
pusha
mov
adc
pop
loopne
xchg
mov
notb
cs
xchg
shlb
mov
pop
or
imul
add
je
xchg
icebp
aas
js
addr16
sar
dec
imul
std
clc
repnz
cmp
hlt
outsb
inc
ds
adc
mov
mov
add
stc
test
jnp
xchg
cmpsl
jb
imul
cs
mov
addr16
sbb
js
je
cs
les
add
cmp
and
js
push
mov
lret
xchg
scas
push
adc
mov
mov
mov
scas
jecxz
out
mov
sbb
seto
pop
mov
xor
stc
dec
cli
pop
cli
lods
sub
mov
push
jns
xchg
adc
sub
lock
popa
mov
adc
sahf
call
fadds
mov
mov
aad
cmp
jbe
outsb
mov
in
jne
xor
dec
cmc
push
push
mov
fidivrs
mov
sbb
xor
cmp
cmp
mov
test
cmp
lret
stos
mov
je
adc
addb
lret
xchg
idivl
mov
mov
cli
push
frndint
jnp
pop
fisttps
popa
xor
outsl
in
sub
out
aas
ror
inc
jno
sub
ret
mov
pop
mov
ret
xchg
dec
pop
sahf
push
cmpsl
cwtl
insb
loope
mov
jne
or
adc
in
das
dec
loope
mov
push
js
das
call
pop
mov
lea
hlt
out
gs
push
push
inc
jo
rcl
dec
sbb
sbb
add
jg
fildll
test
add
pop
int3
push
mov
mov
sarb
inc
mov
mov
test
scas
and
xchg
cmp
stos
inc
call
and
call
aaa
mov
sahf
mov
cmp
mov
push
sbb
sub
add
mov
xlat
xchg
jnp
cmp
aam
mov
popf
cmp
xchg
fdivp
pusha
jne
test
imul
cltd
dec
in
add
mov
dec
arpl
add
add
lock
pushf
pusha
pushf
cld
cld
push
dec
lock
add
lods
add
add
scas
or
mov
je
test
sub
les
fbld
outsl
inc
add
std
out
sub
cs
cmp
xchg
push
pop
movsl
cltd
outsl
subl
mov
pop
mov
dec
mov
lock
in
sub
in
xchg
lods
movsb
cmp
push
shll
clc
cmp
xchg
cli
in
inc
daa
pop
pop
call
or
sub
cmp
dec
in
lods
xor
mov
dec
xchg
int
inc
repnz
push
push
jbe
pop
jo
mov
adcl
adc
mov
andl
add
jl
inc
shlb
and
popl
jmp
adc
add
in
push
lock
insl
xchg
add
or
int
sahf
sbb
filds
cs
push
orb
mov
pop
mov
stc
xor
jmp
aad
gs
mov
inc
mov
inc
lds
lods
lods
adc
push
pusha
add
out
rol
insb
mov
sbb
fisttpl
or
fmul
shll
xor
pop
adc
xor
arpl
es
add
cli
sub
jo
inc
movsl
add
xchg
out
xchg
lret
or
arpl
cltd
popa
movsl
sbb
outsb
jbe
pop
je
mov
test
fisubs
mov
mov
add
insl
add
mov
loope
jo
repz
jno
push
pop
mov
or
les
mov
xchg
pusha
popf
adc
rclb
pop
int3
iret
or
or
lret
jmp
out
test
gs
inc
imull
sbb
push
pusha
std
rclb
int
scas
daa
mov
pop
enter
pushf
insb
mov
out
fidivrs
repnz
pop
icebp
pop
mov
test
push
shrb
scas
push
or
adc
les
pop
push
inc
dec
jne
or
xor
jle
push
std
xlat
xor
push
and
fcomp
mov
sub
mov
mov
shl
mov
or
push
fisubs
add
push
addr16
pop
adc
popa
lods
sub
cmc
fisttps
ficoms
inc
adc
cmp
mov
jl
les
in
pop
adc
enter
sub
push
pop
jecxz
lret
and
fwait
or
push
mov
mov
add
je
push
or
mull
sub
je
push
in
cltd
mov
cs
mov
add
mov
jo
out
test
outsl
adc
lods
fwait
add
lds
int
fxch
imul
fisubrl
pop
fwait
push
jge
push
enter
jbe
jmp
subl
dec
xchg
sub
loopne
and
push
repnz
insb
fwait
pop
shrl
pop
idivl
dec
decl
inc
loopne
push
scas
std
das
jg
mov
xchg
xchg
mov
imul
rcrb
lods
add
mov
dec
jnp
jecxz
das
pop
jge
inc
and
ss
or
add
pop
push
scas
push
or
insb
jb
cmpsb
lret
out
and
aas
lcall
movsl
xor
bound
cvtdq2ps
popl
sbb
repnz
scas
push
std
xor
shrl
enter
neg
sbb
in
add
push
sbbl
add
inc
gs
jg
mov
shrb
out
add
sbb
repz
fldcw
into
pusha
cmp
dec
add
mov
adc
jge
dec
xchg
or
rcrb
xor
push
pushf
dec
bound
dec
stos
add
fs
adc
jl
push
dec
test
jecxz
push
pop
repz
pop
xchg
xchg
add
push
xchg
mov
out
mov
xor
andb
dec
pushf
imul
lcall
movsl
scas
rcrl
adc
inc
xor
std
repz
mov
adc
jmp
push
or
repz
mov
insl
mov
lods
jns
xchg
cmc
dec
je
mov
sub
rcr
sub
xchg
rcrb
sub
repz
mov
cmp
and
mov
mov
push
mov
push
cli
jg
pop
out
icebp
fsts
cs
sbb
inc
adcb
xchg
jg
push
mov
add
into
cld
jns
inc
jl
xlat
rorb
and
mov
mov
jecxz
movsl
sbb
jp
out
and
mov
mov
ss
pushf
js
sbb
mov
call
sub
imul
cmc
adc
mov
iret
addl
test
jmp
jg
cwtl
out
std
mov
mov
xchg
cmp
sarl
pushf
dec
push
repnz
cmp
sbb
rcr
fildll
fs
ja
inc
test
inc
repnz
add
sub
dec
lret
xchg
adc
and
idivb
sub
sub
ror
das
rcr
mov
adc
dec
lods
hlt
adc
sbb
sbb
icebp
sub
jbe
push
add
lret
push
mov
rcll
fldenv
rorb
sbb
pop
xchg
xor
lret
mov
das
movsb
out
cltd
into
pop
mov
sti
push
in
outsl
jge,pt
insl
xor
ffree
divb
jl
push
mov
fimull
dec
cmp
sub
xor
adc
pushf
aas
repnz
movsl
mov
sbb
icebp
adc
decl
mov
repz
sub
inc
iret
jno
mov
subb
and
adc
xchg
daa
mov
mov
cmc
adc
stos
outsl
xorb
loop
hlt
and
xchg
adc
mov
and
ds
lds
inc
call
out
jmp
mov
or
fcoms
pop
dec
fucomi
inc
dec
jbe
in
les
into
rorl
dec
sub
outsb
mov
data16
in
xchg
jmp
outsl
repnz
jg
into
sbb
ss
jmp
pop
sub
xor
test
rolb
mov
sub
mov
sbb
xor
adc
test
sbb
or
pop
test
cmpsl
jmp
loope
mov
dec
faddp
pop
outsl
mov
clc
int
mov
pusha
outsl
add
push
jmp
int
add
or
out
outsl
iret
scas
lods
adc
xchg
arpl
dec
inc
adc
lock
lea
rolb
jno
cmpsb
out
mov
movsb
mov
repz
xchg
sbb
pusha
cli
adc
cmpsl
jns
aaa
adc
int
pop
pop
or
add
add
inc
xchg
dec
xchg
mov
scas
sbb
lods
add
add
call
sahf
xchg
dec
add
sub
repnz
mov
dec
cmc
inc
inc
mov
sti
push
int3
scas
gs
out
pop
pop
mov
stos
jne
mov
pop
xor
inc
pop
dec
pusha
and
lret
sub
pop
jae
xchg
repz
and
cmp
and
aas
push
dec
xor
bound
xchg
out
setae
fwait
and
jno
and
mov
xchg
mov
push
xchg
mov
stos
and
and
test
push
hlt
into
xchg
sbb
push
jp
inc
cmp
xchg
mov
aas
and
loop
inc
clc
fstps
gs
lahf
cs
adc
xchg
mov
pop
add
or
leave
es
jmp
mov
hlt
je
pop
aam
mov
cmpl
xchg
pusha
add
dec
nop
cmp
scas
push
or
jns
js
jmp
cs
sub
adc
and
fimull
cmp
mov
pop
xor
xor
cmp
stos
in
arpl
push
jecxz
cmp
dec
repz
lea
lods
hlt
out
sbb
les
lock
int
sub
lods
outsb
or
divl
cli
jno
andl
xor
add
push
jp
inc
pushf
ljmp
popf
dec
xor
stc
sbb
ret
push
mov
xchg
add
pop
mov
mov
int
mov
and
inc
mov
mov
pop
jle
pushf
jle
push
xchg
pop
mov
leave
iret
adc
pop
pusha
sar
mov
xchg
sub
push
or
mov
test
mov
sti
mov
rcl
rorb
mov
subl
push
mov
scas
jge
ret
cmp
dec
aad
lock
dec
in
pmaddwd
adc
insb
mov
mov
jns
add
pop
shl
cmp
outsl
cmc
add
clc
pop
lods
xor
das
cmp
fs
cmp
xor
or
int
sbb
rorl
jo
fmul
pop
xchg
mov
dec
xor
in
jb
call
in
pop
test
jl
in
rorl
in
xchg
mov
sbb
jg
sbb
lcall
mov
xchg
adc
cmp
add
cmp
add
push
xor
jg
inc
daa
jb
in
ja
lods
daa
or
or
adc
add
fwait
inc
pop
scas
leave
fnstsw
aas
and
inc
dec
jae
mov
ja
adcl
je
lea
xchg
aaa
xchg
inc
jge
into
push
push
and
adc
lret
xchg
jle
jnp
mov
frstor
adc
xor
mov
adc
popf
xor
push
das
cmp
adc
lock
mov
push
pop
ss
sti
push
sub
clc
xor
mov
xchg
cmp
andb
flds
mov
out
in
fimull
cmp
sar
aad
lds
jae
cmpsl
add
icebp
cli
ficompl
and
lea
cmp
and
xor
repnz
mov
push
or
xlat
dec
addl
and
mov
inc
jae
xchg
jno
mov
dec
add
mov
mov
adc
push
lret
cld
sarb
mov
sub
and
jg
push
adc
sbb
in
add
lods
add
add
out
pop
adc
xor
arpl
lahf
out
jmp
add
insb
or
testl
xchg
rorl
mov
jb
add
inc
or
arpl
fdivl
loope
sbb
loop
jno
cli
rorl
fisubrl
mov
sbb
shld
dec
mov
icebp
clc
shr
scas
test
mov
xor
or
dec
push
mov
inc
dec
adc
sub
mov
ja
lret
mov
mov
loopne
les
sub
mov
das
and
std
xchg
dec
lea
cwtl
andl
sbb
cmp
fyl2xp1
mov
inc
or
push
adc
lret
cmp
push
pop
mov
push
adc
ret
cwtl
xchg
stc
xchg
sub
jl
jmp
cltd
addb
movsl
hlt
shrb
mov
jge
jb
scas
sti
sti
inc
aad
imul
cwtl
add
jns
pop
mov
jbe
cmp
inc
or
les
nop
repz
dec
stos
cmpsb
xlat
int
mov
add
push
jbe
daa
cmpsb
or
mov
lcall
jg
sub
mov
movsl
pop
jae
and
pop
cli
inc
push
pop
pop
sbb
mov
xchg
add
mov
sbb
jne
dec
mov
xchg
lahf
je
xchg
lahf
lock
ret
fisubrl
xor
pop
lods
and
mov
lock
mov
sbb
and
sbb
mov
adc
pop
add
inc
xchg
fcmovnbe
fldenv
xor
mov
mov
sahf
inc
add
push
jmp
cmp
xorb
xlat
ror
imul
pop
mov
add
or
xor
xor
pushf
mov
loop
mov
mov
imul
outsb
push
mov
outsb
test
sub
arpl
push
lea
in
sbb
or
and
push
sub
hlt
in
gs
loope
sbb
mov
cmp
iret
repz
imul
sub
mov
int3
popf
pop
in
das
pushf
xchg
stos
sbbb
xchg
nop
push
mov
sbb
or
cli
sbb
es
pushf
pushf
rol
ret
std
sti
sub
and
jae
scas
cld
xchg
inc
push
subb
mov
call
daa
cmp
sbbl
inc
pushl
mov
cli
out
sahf
mov
test
rcll
lahf
hlt
add
out
add
xchg
push
fisubrl
lock
mov
loop
es
cmp
outsb
call
stc
inc
sti
bound
into
dec
lahf
and
mov
and
push
xchg
ds
sbbb
dec
add
movsb
mov
mov
repnz
inc
testb
sbb
mov
dec
test
sti
repz
out
dec
mov
and
xchg
iret
pusha
push
aas
push
stos
sub
push
loopne
mov
leave
jb
pop
and
decb
aaa
test
xor
icebp
jp
xor
dec
imul
push
cs
int3
call
lock
push
sub
enter
data16
sub
fwait
popa
sub
jnp
sti
mov
aaa
mov
icebp
add
lods
add
add
inc
xchg
inc
pop
add
push
int3
xchg
inc
push
adc
inc
jne
cld
cmp
mov
bound
imul
cmp
stos
cwtl
mov
add
sub
mov
jle
jl
ds
hlt
ror
shll
xchg
adc
sbb
pop
xchg
ja
sub
lds
fisttps
mov
out
lods
push
stos
xchg
fbstp
jne
enter
push
mov
aam
enter
in
mov
lock
cltd
dec
enter
fadds
faddl
out
xor
sbbb
push
sarl
and
movsl
push
fisttps
rclb
pop
pushf
cld
test
adc
es
adc
mov
cmpsl
repz
lahf
mov
inc
dec
in
adc
mov
cmpb
cli
std
jg
loope
loopne
div
sub
sbb
cmp
sbb
and
popf
mov
sarl
mov
inc
movsl
stos
mov
push
shlb
les
jne
and
fs
repnz
sarl
iret
sbb
jl
inc
mov
pop
xchg
shlb
add
dec
cmc
cmp
xchg
or
pop
leave
fdivs
clc
imulb
jge
outsl
inc
aaa
call
jb
or
mov
rclb
push
mov
aad
movsb
jg
pop
mov
ret
cmc
pop
add
cmpb
das
vcvttsd2si
inc
scas
and
mov
add
mov
mov
mov
inc
int3
aas
xor
add
loopne
cmpb
mov
into
and
adc
testb
int
pop
addr16
repz
jne
cltd
loop
inc
sbb
and
mov
dec
inc
mov
xor
pop
std
fidivl
or
scas
xchg
cld
lock
sbb
mov
pushf
data16
sbb
inc
cltd
and
inc
pop
jmp
cs
push
xlat
push
sub
mov
insl
out
fimuls
mov
push
lahf
inc
and
pop
mov
mov
xlat
cmpsb
jmp
add
adc
out
in
stos
cwtl
cmp
arpl
adc
xor
mulps
mov
nop
cld
shlb
daa
mov
jae
repnz
push
or
ficoml
in
lea
aas
ds
sub
loope
addl
cmp
mov
or
sbb
gs
aaa
jo
xchg
jo
cmp
ja
call
ja
fistpll
cmp
lock
pop
pop
fmul
push
insb
jle
xchg
mov
je
xor
idivl
push
addb
adc
sub
cmc
movl
adc
mov
dec
stos
sbb
ljmp
xor
jmp
leave
ret
cmc
mov
lahf
aad
xor
mov
hlt
xchg
popa
nop
sub
push
or
inc
and
jnp
push
inc
in
arpl
mov
or
inc
pop
adc
pop
repnz
pop
iret
jp
xchg
sti
pop
cli
inc
mov
icebp
push
mov
gs
nop
pop
bound
nop
imulb
mov
push
cmc
out
aam
inc
mov
add
mov
fbstp
mov
or
add
lods
add
add
popl
inc
scas
jae
cld
mov
sbb
cs
inc
add
pop
or
lods
sahf
stos
adc
add
testl
jp
pop
mov
fldt
xchg
repz
or
js
inc
mov
mov
in
ljmp
ret
xor
adc
add
daa
icebp
cmp
loopnew
out
sbb
pop
stos
sub
cld
and
jno
icebp
pushf
sbb
scas
jge
ret
add
mov
in
push
mov
sahf
scas
cmpb
pop
lea
jnp
push
inc
cmc
xchg
xchg
aad
jmp
adc
lds
ljmp
sub
cmp
aas
push
lcall
test
in
iret
test
rorb
imul
pop
or
mov
popa
mov
mov
data16
sbb
sbb
pop
sbb
data16
add
fcomps
xchg
cmp
stos
jg
lret
cmp
pushf
insl
mov
je
dec
cmp
xlat
dec
test
das
or
in
or
pop
mov
sub
jb
cli
shl
daa
xor
mov
ret
imul
rcr
outsl
xchg
jo
and
jp
adc
ret
mov
in
inc
mov
mov
out
outsb
lea
pop
add
imul
bound
fdivl
sti
lcall
test
pop
test
dec
mov
cmp
fwait
pop
push
out
cld
and
loope
xchg
inc
dec
push
xchg
mov
movsl
mov
mov
push
negb
add
jp
and
sbb
int
xchg
es
pop
cltd
push
adc
push
cmp
sub
push
pop
or
xor
or
xchg
or
aas
dec
idiv
insb
or
or
jp
mov
je
mov
push
aaa
inc
mov
mov
xor
outsl
sbb
fnstsw
mov
xlat
xchg
and
je
jne
push
add
sbb
ret
aas
aaa
add
dec
movsb
fisubrl
les
das
jl
pop
test
out
fidivl
jp
addr16
adc
cs
mov
sub
repnz
int3
sbb
dec
fadds
sbb
xchg
iret
inc
pop
das
sub
mov
mov
lods
add
cmp
add
mov
mov
les
mov
mov
push
fnstsw
in
jne
adc
and
jmp
jecxz
clc
pop
pop
fidivrl
push
lret
nop
loopne
cmpsl
mov
and
je
ret
loop
push
adc
xchg
push
das
rorb
and
pop
notb
cmp
pop
xchg
loope
mov
adc
cmp
mov
rcrb
js
arpl
and
cld
mov
ficoms
stos
pop
lret
mov
sbb
lret
xchg
add
movl
inc
ret
mov
and
test
repnz
inc
sub
imul
dec
sahf
mov
add
adc
inc
gs
fiadds
lret
xor
pop
popa
inc
push
lods
cmp
push
lcall
cmpl
jae
sbb
pushf
sahf
sbb
std
dec
les
and
inc
repz
ret
cltd
out
lahf
idivb
js
jg
pop
mov
add
add
add
addb
and
insl
mov
inc
roll
scas
fisttpl
