add
add
adc
cmp
add
add
adc
add
add
add
add
add
add
add
adc
add
add
xor
add
xor
add
add
jb
push
imul
aas
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
imul
add
add
add
mov
add
inc
and
or
mov
xorl
add
adc
movzwl
mov
mov
sub
mov
and
movb
sbb
lea
xor
xor
adc
mov
mov
mov
sub
mov
mov
xorl
xor
sub
adcl
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
movl
push
sub
movl
and
mov
push
mov
xor
or
mov
andl
push
subl
add
movl
jmp
movl
mov
movl
mov
movl
inc
movl
cmp
jb
sbbl
mov
addl
xor
subl
add
jmp
add
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
orl
mov
sbbl
xor
xor
mov
add
andl
movzwl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
neg
mov
movl
movzwl
xor
addl
add
movzbl
mov
mov
movl
inc
mov
mov
cmp
jne
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
mov
addl
xor
add
mov
xorl
mov
sbbl
xor
add
mov
movl
movl
movl
mov
movl
mov
movl
mov
jmp
xorl
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
adcl
mov
negl
xor
xorl
xor
orl
sub
movzbl
adc
sub
xorl
xor
not
mov
addl
mov
mov
orl
lea
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
pushl
push
push
call
jmp
mov
mov
subl
lea
neg
mov
adc
mov
addl
mov
addl
lea
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
mov
sbb
mov
xorl
mov
lea
xor
mov
mov
mov
adcl
lea
not
mov
mov
mov
lea
mov
dec
mov
xor
orl
add
movl
jne
movl
jmp
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
xor
xor
sub
mov
xor
xor
addl
sub
movl
sub
xor
movl
mov
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
jmp
add
xchg
dec
xchg
in
sbbl
adc
mov
bound
pop
bound
xor
cmp
jns
jne
cmp
sub
sar
push
jae
inc
mov
scas
inc
push
cmp
loop
inc
push
jg
insb
mov
mov
jbe
loop
jg
icebp
and
or
xchg
xor
fsub
jno
sbb
out
loop
add
adc
jae
movsl
or
mov
cmc
push
xor
aam
in
loop
mov
xchg
mov
jmp
and
adc
xor
sub
dec
sti
scas
xchg
xor
xchg
dec
clc
pop
dec
push
adc
jmp
sbb
fcompl
inc
loope
inc
mov
pop
sbb
pop
push
xchg
outsl
or
xor
popa
das
hlt
lods
pusha
cmp
and
repnz
cli
or
and
jne
dec
repnz
jnp
out
xor
pop
dec
aad
push
jmp
sahf
aas
and
enter
xchg
out
cmp
inc
in
mov
mov
and
mov
fwait
adcb
cli
or
mov
scas
add
into
outsl
aam
out
nop
xchg
jg
mov
dec
mov
jb
pop
hlt
cmc
push
sbb
push
and
mov
push
cmp
or
ret
out
movsl
push
test
shll
daa
sahf
dec
flds
fldz
sbb
call
mov
add
cmp
movsb
push
mov
jmp
cmp
std
ret
jae
or
cwtl
ds
cs
fcompl
mov
fwait
jp
jb
pop
xor
inc
imul
jo
push
fmuls
pop
lds
xchg
nop
leave
mov
xchg
mov
adc
js
rep
or
repnz
xor
test
mov
xchg
pop
pop
insb
lahf
lcall
mov
scas
and
cld
add
and
int3
out
mov
fs
jg
sub
adc
std
xchg
sub
jp
jnp
popf
lret
jae
mov
pop
jle
pop
cmp
xor
inc
aam
add
les
ss
call
lea
jmp
inc
xor
jl
jmp
add
jnp
adc
jns
notb
push
test
pop
mov
loope
les
cmpb
ja
arpl
mov
faddl
inc
push
mov
adc
inc
push
dec
pop
mov
insb
jbe
repnz
xor
push
call
repz
imul
jo
fadds
and
inc
movsl
jno
in
pop
sahf
popf
dec
or
jmp
mov
or
dec
ss
mov
pop
cmp
dec
mov
xchg
mov
push
lock
nop
orb
or
inc
mov
adcl
xor
mov
rcll
jnp
into
adc
mov
test
or
fwait
push
cmc
push
popa
pop
adc
xchg
pop
adc
imul
imulb
popa
movsl
outsb
sbb
roll
out
add
ret
push
fldcw
pop
pushf
inc
pop
sub
imul
mov
ret
iret
inc
dec
cltd
mov
cmp
jecxz
notb
inc
mov
stos
arpl
js
sub
or
mov
push
add
xchg
int
mov
leave
shr
aas
fisttpll
xor
mov
cmp
out
push
les
push
and
mov
adc
inc
cmpsl
or
and
lods
adcb
out
add
jne
out
mov
cmp
cmp
scas
and
adc
sub
mov
popl
lret
xchg
gs
lock
popf
ss
jge
lcall
fisttpl
test
flds
xor
fwait
and
pop
sbb
jp
cmpsl
mov
loop
decb
out
bound
jb
mov
push
mov
xor
popf
pop
fistpl
xchg
mov
mov
mov
push
ljmp
mov
stos
sub
int3
int
push
test
je
rcrb
hlt
stos
xchg
test
xchg
xchg
or
sarb
xchg
in
repnz
ret
shr
fsub
pop
fs
xor
mov
xor
mov
mov
cmp
pop
out
leave
stos
adc
jb
ds
mov
jbe
inc
pop
jl
mov
sbb
and
add
or
popa
ret
lea
and
icebp
loopne
pop
lcall
mov
inc
mov
mov
shrb
shl
aam
xchg
in
cmp
scas
js
mov
test
mov
loopne
add
xchg
out
call
xchg
ss
mov
aam
adc
dec
jnp
dec
and
sbb
mov
ss
push
loop
push
adc
xchg
fsubrl
aaa
add
or
lock
sub
dec
loop
pop
popa
outsl
aam
and
sarl
aaa
les
cwtl
add
push
popa
shlb
addr16
mov
test
sbb
test
rcrb
xchg
xor
pop
pop
je
push
xchg
popa
insb
adc
sub
xchg
dec
or
sub
sti
adc
pushf
mov
xchg
es
aaa
fdiv
ja
loopne
push
sbb
cs
lock
push
xchg
pop
pop
popf
xchg
or
add
mov
les
jge
jmp
jmp
mov
add
adc
mov
jp
nop
das
frstor
jecxz
daa
out
data16
in
sar
push
jge
add
lret
or
je
js
mov
push
inc
sub
or
mov
mov
xor
jnp
xchg
repz
dec
dec
pushf
cmp
gs
mov
popa
and
cmp
fwait
enter
rcrl
das
xor
and
lret
and
inc
push
sarb
sub
push
push
dec
jle
xchg
or
ret
sbb
pop
icebp
jb
and
out
or
xor
nop
inc
push
stos
aas
aad
pop
bound
fst
xchg
xchg
pushf
loope
insl
mov
push
icebp
cmp
push
outsl
push
ret
pop
orl
mov
cmp
cmc
scas
push
pop
fidivs
xchg
push
in
pop
js
jmp
lods
jl
pusha
mov
xchg
pop
mov
in
push
test
and
imull
mov
data16
sub
cmp
mov
mov
mov
cmpsl
int3
fstpt
lahf
rcll
jae
add
jecxz
mov
mov
xchg
mov
movsb
pop
mov
sbb
cmpsl
push
fsubrs
stos
inc
js
pusha
mov
dec
andl
add
sbb
addr16
xchg
frstor
arpl
insl
pop
push
pop
pusha
dec
adcl
lret
adc
lcall
std
fcmovu
lcall
push
mov
push
orb
push
fistpl
ret
add
push
xor
cmc
cmovg
scas
sub
cmp
mov
cmp
jmp
aam
popf
dec
sbb
mov
inc
ficoms
lock
in
add
sahf
jp
aas
cmp
mov
inc
gs
add
std
loope
xchg
pop
mov
fsubr
in
in
pop
or
and
fists
popf
mov
adc
rcll
jae
insl
int
into
push
xchg
xor
inc
arpl
inc
adc
lea
jmp
inc
cmp
fdivrl
leave
mov
xchg
outsb
mov
out
popa
mov
dec
fcompl
push
mov
add
push
lret
pusha
push
sub
and
jp
push
cmc
pop
loope
sbb
bound
aaa
lods
push
mov
adc
lock
pop
pop
pop
add
mov
popf
fwait
cmp
movsl
and
push
cmpsb
sbb
dec
xchg
and
cmpsl
mov
shlb
dec
jae
xchg
ljmp
mov
sub
xchg
outsl
inc
add
fidivs
jnp
nop
push
jno
add
push
mov
imul
pop
sbb
mov
dec
fcmovnb
rcll
dec
sbb
mov
xchg
jg
push
push
scas
fisttpl
mov
mov
pop
jbe
imulb
sti
out
cld
sahf
mov
stos
mov
sbb
add
inc
cltd
inc
shll
movsl
test
loop
sbb
test
cmp
cli
fsubl
js
repz
test
or
ret
inc
sbb
lcall
call
xchg
iret
and
shlb
and
in
mov
shlb
cltd
mov
nop
xchg
mov
push
fiaddl
cmp
cmp
cmp
mov
mov
scas
dec
or
mov
sub
jl
jp
rorl
xchg
dec
in
or
mov
vphadduwd
scas
outsb
fnstsw
mov
stos
sbb
xchg
out
sub
shlb
fcomps
stos
push
cwtl
imul
fstps
movsb
movsb
lahf
mov
sbb
insb
mov
push
mov
ret
jmp
leave
dec
aad
bsr
push
add
push
bound
outsl
in
dec
mov
sub
out
xor
cmc
mov
dec
mov
xor
jns
in
jle
adc
das
or
in
and
lcall
pop
in
pop
push
mov
mov
psubusb
loop
cwtl
int
popa
out
std
lahf
pusha
stos
inc
pushf
int3
sub
outsl
insl
repz
push
rclb
lods
loopne
test
cmpsb
je
cli
call
es
cmc
jmp
inc
aas
xor
clc
push
cmp
add
mov
mov
xor
pop
lds
sbb
add
sbb
sbb
ret
dec
or
mov
pop
push
call
dec
int
std
cwtl
imul
aaa
xchg
adc
or
rclb
jo
in
xchg
xlat
dec
pop
js
test
push
lods
pop
cmp
into
mov
rclb
cmc
int3
and
ss
jmp
lds
in
pop
xor
push
jo
and
dec
lock
mov
imul
mov
pusha
scas
dec
mov
out
pop
pop
add
add
xchg
adc
imul
imulb
lods
sbb
iret
mov
push
cwtl
or
jp
stos
adc
mov
sbb
jns
xchg
fimull
push
lods
sub
sar
inc
sub
push
mov
sbb
sti
cs
fwait
cmpb
inc
and
sub
scas
out
xchg
stos
push
push
pop
add
xchg
rcrl
lods
xorl
xchg
mov
and
in
rolb
aam
jae
xchg
push
dec
inc
sbb
inc
or
xchg
aaa
test
jg
mov
push
add
repnz
out
insl
mov
aas
add
ret
xor
push
mov
sbb
mov
fcmovnu
lcall
shrb
inc
ds
sarl
shll
jg
add
repnz
push
cmp
movb
inc
fwait
adcb
aad
jne
dec
cli
jne
inc
add
outsl
pushf
mov
fwait
jns
xor
sub
sarb
ficoml
fnstenv
inc
mov
and
fidivrs
push
imul
out
mov
arpl
push
xchg
inc
out
push
push
imul
adc
clc
data16
out
enter
add
pushf
cmp
lea
arpl
mov
dec
push
xchg
xor
adc
xor
pop
call
mov
fwait
mov
sahf
jne
jp
jo
fistpll
outsb
and
jb
mov
xchg
dec
jo
push
or
or
inc
dec
add
fs
outsl
subb
xor
and
or
enter
sub
sbb
incb
loopne
add
data16
movsl
loope
or
jl
add
aaa
aaa
hlt
mul
add
nop
outsl
pop
loopne
mov
sbb
inc
cmc
xlat
js
stos
adc
movsb
std
push
into
dec
scas
or
or
adc
xchg
stos
int
mov
mov
cmp
add
inc
cmp
lret
testb
mov
mov
in
xchg
xchg
xchg
mov
aaa
fwait
ret
or
in
mov
ret
popf
lret
jbe
sub
sub
push
mov
sub
gs
aam
cld
add
sahf
inc
pop
fs
imul
jecxz
xchg
leave
arpl
stos
insb
cli
js
mov
push
or
mov
xchg
push
mov
cmpsl
aas
xor
adc
imul
jp
movsl
insb
fldenv
inc
mov
lods
rcll
push
ror
out
incl
pop
js
cmp
mov
jecxz
js
jle
xchg
ret
and
in
jp
je
xchg
aam
adc
sarl
xor
push
in
push
out
or
outsl
ja
push
mov
jne
icebp
mov
inc
mov
outsl
test
test
xchg
popa
push
push
out
aam
jmp
lods
xchg
sbb
push
or
cmp
shrb
and
pop
stos
mov
neg
les
out
in
test
and
outsl
jo
incb
jge
leave
lods
add
imul
mov
outsb
in
bound
pop
mov
lods
in
push
and
mov
shrb
test
or
shrb
jbe
dec
popa
pop
adc
inc
ret
mov
cmpsl
daa
mov
imul
inc
clc
fisubrs
lcall
imull
xor
sbb
inc
mov
lret
js
and
and
xchg
sub
rcr
pop
clc
xchg
cmp
int3
pop
mov
lahf
jne
inc
data16
pusha
xor
pushl
push
je
test
adc
leave
sbb
inc
cmp
cwtl
and
xor
enter
mov
jmp
into
add
push
je
mov
fcoml
call
adc
mov
cs
daa
mov
xchg
dec
pop
into
mov
movsb
lret
pop
js
testl
sub
push
and
ss
lret
jp
aas
fs
mov
mov
mov
or
jae
jge
inc
mull
xlat
jmp
xor
enter
mov
push
pusha
jp
in
rorl
adc
jae
int
imul
cmp
stos
xor
imul
sbb
sbb
cltd
push
mov
mov
repnz
jle
shlb
fidivrs
mov
divb
outsb
pusha
pop
in
ret
popa
ds
outsb
pop
sub
mov
jmp
ftst
xchg
sbb
in
xchg
into
sahf
dec
mov
popa
push
fs
sar
jno
out
rorb
jp
pop
cmp
adc
xchg
xor
mov
out
in
rclb
dec
sahf
outsb
mov
push
rcrb
fwait
add
cs
pop
inc
pop
fldenv
or
mov
cmp
sbb
jecxz
pop
jmp
loopne
lret
in
push
sub
mov
mov
xchg
fisubs
pop
jno
and
xor
fs
cmp
loop
repz
shrb
inc
sub
cmp
ljmp
shr
lret
jmp
xchg
fidivrs
push
loope
hlt
xchg
popa
push
mov
mov
roll
mov
jno
bnd
cmp
imul
mov
mov
test
dec
sahf
and
cmp
lret
cmpb
add
dec
lods
ljmp
inc
bound
int3
das
jns
cmpsl
aaa
in
lods
adc
jecxz
and
mov
rcrl
xchg
scas
push
out
test
lahf
cmp
mov
ja
nop
aam
sbb
out
add
das
push
in
mov
arpl
xchg
lret
scas
es
test
addl
mov
dec
in
loopne
mov
or
add
js
lods
push
xlat
movsb
push
dec
inc
add
or
in
mov
ljmp
cwtl
imul
lea
xor
mov
bound
push
sti
add
cmpsb
dec
aas
xlat
lds
mov
mov
cmp
outsl
frstor
in
mov
push
ljmp
pop
loop
mov
mov
xor
mov
sub
adc
and
test
out
pushl
imul
sub
in
pop
or
pusha
xor
dec
jns
cli
dec
and
jp
adc
pop
leave
call
cmc
adc
movsl
ret
push
or
pop
ret
dec
movsl
rolb
sbb
bound
and
testb
mov
imul
push
xor
repnz
sub
cld
addr16
lcall
xorb
daa
xchg
sub
mov
pop
xchg
jle
jmp
cmc
jp
insl
mov
ret
sub
pop
test
push
ds
xor
jae
outsb
sub
inc
jecxz
xchg
fucom
pop
loop
int
test
add
sahf
dec
rcrl
add
jo
xchg
fistpl
in
mov
rcrl
xchg
pop
xlat
xchg
push
mov
in
lret
data16
and
xchg
ds
push
push
and
fsub
jae
imul
cmpsl
inc
jg
fistpll
mulb
sub
pop
jbe
ss
push
stc
sbb
ds
pop
movsl
cli
pop
stc
in
lahf
movsb
sbb
and
pop
fldcw
mov
push
mov
test
in
in
inc
mov
lcall
mov
in
scas
or
inc
dec
gs
test
dec
mov
or
stos
push
cmpsb
mov
int3
das
or
bound
mov
out
jbe
ds
fwait
sbbl
fmull
jmp
ficomps
adc
inc
je
jmp
jnp
test
xor
idivl
or
cwtl
push
arpl
in
orb
cmp
mov
jmp
mov
cltd
sbb
cmp
gs
mov
test
push
sub
shll
das
sbb
and
test
lods
jbe
jo
shl
jne
inc
xlat
inc
cmc
addr16
push
jmp
cli
out
push
iret
sub
testl
push
cmp
clc
inc
xor
push
sub
sub
and
adc
dec
dec
jns
je
testl
mov
push
adc
or
mov
sbb
xor
xor
cli
hlt
lods
lcall
push
push
pop
stos
ret
xchg
mov
and
bnd
cmp
add
jno
insb
push
push
mov
xor
addr16
xchg
xor
and
mov
loop
iret
subl
notl
push
stos
adc
add
cmp
insl
dec
stos
mov
lret
fucomi
inc
call
pop
mov
pop
fsubs
adc
xor
add
lock
andl
and
dec
test
and
rcll
rcrb
mov
jns
nop
pop
lock
jle
inc
jmp
clc
stos
je
xchg
int
je
icebp
mov
jnp
ret
rclb
fldenv
push
xor
enter
dec
dec
and
mov
dec
out
jbe
mov
ds
mov
xchg
xchg
test
lret
push
ds
je
imul
pop
pslld
cmp
clc
sahf
add
out
sbb
xchg
adcl
mov
pop
xchg
pop
jns
loope
mov
aad
or
dec
jmp
mov
pop
sbb
cmp
pusha
fsubl
lret
add
aad
les
sbb
comiss
adc
mov
pop
pop
int3
mov
push
sbb
data16
insl
jp
cmc
nop
adc
push
scas
mov
jg
jns
xor
sbb
jp
mov
xchg
outsl
xor
push
pop
sbb
es
jno
div
jl
fadds
lods
iret
hlt
rol
cmp
in
into
or
rorb
daa
out
dec
xor
sub
test
mov
imul
xchg
inc
xchg
dec
pop
cmp
or
inc
inc
out
rclb
imul
cmp
xchg
in
and
je
mov
jns
mov
lea
test
lea
push
pop
xor
mov
addr16
aas
add
xchg
dec
aad
cld
mov
sub
incl
mov
pop
inc
mov
dec
repz
inc
mov
xor
mov
xor
gs
test
jmp
mov
loopne
ficoms
adc
das
dec
mov
cmpsl
aaa
cmpsl
mov
or
cmc
sub
ja
in
in
adcb
sbb
sbb
inc
xor
xor
jle
push
lret
call
lea
add
sbb
dec
sub
scas
repz
mov
shl
shll
imul
out
aaa
push
adc
add
fcomps
arpl
cmp
dec
push
jbe
addr16
or
push
das
cltd
jo
enter
pop
jo
and
imul
out
int3
pop
neg
insb
test
int3
cmp
mov
xchg
inc
loope
movsb
arpl
cld
xchg
les
cmp
jb
aas
sub
movsl
or
sbbl
and
cwtl
mov
mov
and
adc
dec
xchg
push
sbb
inc
jl
insb
js
out
hlt
pop
test
cld
push
adc
or
loopne
das
or
xchg
outsl
ret
loop
sahf
aad
movsb
ljmp
aad
leave
fldcw
pop
xchg
pop
gs
sarl
movsl
out
lret
push
inc
mov
rcr
adc
push
fmull
je
pop
daa
psrad
sbb
int
cld
adc
xchg
clc
pop
les
lret
dec
ret
jge
lods
xlat
cltd
ret
xchg
inc
sub
push
dec
pop
stc
dec
aad
mov
test
xor
dec
insl
inc
push
in
cmc
rclb
dec
lret
out
rorl
lock
cmp
jbe
pop
imul
notb
pop
sbb
cltd
into
xchg
mov
pop
mov
jno
mov
xorl
in
dec
xchg
dec
mov
insb
inc
aas
test
adc
clc
cwtl
stos
jne
cli
cmc
push
xchg
inc
lahf
and
push
call
pop
or
lcall
iret
js
stos
mov
xor
ja
lods
pop
add
pop
mov
cltd
lea
sub
icebp
decl
mov
adcl
xor
lret
jl
out
adc
icebp
jg
inc
sub
imul
mov
sahf
push
enter
mov
xchg
out
loop
cmp
movsl
sub
scas
pop
xchg
stc
test
jnp
xchg
and
int3
or
add
push
jge
pop
cmp
adc
aam
pop
jge
or
rcr
push
insb
int3
or
idivl
loop
add
hlt
fadd
jmp
xor
pop
lea
jo
adc
ljmp
xchg
fists
in
div
andl
inc
lea
shr
dec
enter
bound
sbb
test
cli
xchg
aaa
push
push
hlt
jmp
pop
pop
mov
cs
jae
mov
sub
stc
sbb
fcompl
add
xchg
fadds
andb
aaa
dec
dec
clc
xchg
push
sbb
idivb
fwait
sub
dec
rcr
movsb
adc
add
out
inc
push
pop
xchg
inc
leave
pop
push
push
jb
aad
inc
jns
xorb
test
lret
xchg
xor
mov
cmp
ret
aas
cmp
sbb
insl
movlps
lret
mov
jbe
pop
mov
addr16
or
icebp
pop
fsubrl
pop
dec
jmp
daa
push
or
in
xchg
inc
sbb
mov
gs
pushf
pop
jns
inc
movb
xchg
mov
or
pop
jno
push
inc
push
sbb
pop
mov
mov
popa
add
movsb
adc
aaa
push
out
xchg
repnz
add
ret
and
push
outsb
cli
shll
sub
pop
or
mov
or
xorl
lock
and
lods
ret
lcall
push
mov
dec
or
in
jb
or
decb
sub
cld
cmp
sbb
dec
push
and
in
sbb
mov
ficompl
cli
or
cmp
pop
dec
xor
inc
rcrb
xor
fs
cli
test
lock
popf
dec
loope
fisttpll
mov
xchg
outsl
je
jge
mov
or
xor
adc
dec
ret
out
inc
xchg
in
shlb
and
ret
jnp
gs
jge
pop
stc
add
or
push
inc
jo
inc
push
clc
sub
loope
or
mov
fs
shlb
jl
mov
jp
adc
repnz
xor
mov
es
fbld
pop
add
cmc
pop
mov
sbb
add
lea
jne
adc
cmp
data16
mov
test
mov
js
dec
xchg
shlb
daa
push
inc
test
outsl
dec
push
punpckhdq
sbbl
in
push
xchg
mov
test
sbb
pop
insb
jg
sbb
insl
pop
fsts
cmp
pop
xchg
outsb
jg
inc
mov
mov
dec
inc
inc
mov
lret
jmp
into
andl
imul
and
dec
lods
mov
inc
ficoms
push
lcall
std
or
out
fmul
dec
sbb
scas
push
xchg
outsl
xlat
outsl
test
sti
mov
xor
dec
popf
pop
jae
ja
fwait
adcl
mov
movsl
pop
pop
lahf
pop
insb
jmp
xchg
pop
jmp
jp
cmp
mov
lret
add
push
icebp
push
leave
into
shr
loopne
fs
loopne
mov
xchg
lds
fcoml
cmc
ror
cmp
lret
out
cmp
es
push
jge
sub
js
movsb
shll
push
lret
and
jne
dec
xchg
dec
cmp
and
sbb
pop
pop
or
mov
enter
sub
lock
jp
and
dec
jmp
xchg
lret
jcxz
icebp
add
jae
sbb
sahf
int3
aad
adc
stos
and
jb
and
hlt
jae
dec
stos
mov
push
sbb
mov
pusha
fbstp
data16
add
lea
cmp
adcb
pop
dec
loop
or
int3
mov
adc
lahf
sub
negl
push
pop
call
rcrb
insl
inc
pop
push
rclb
rolb
sub
mov
arpl
jmp
xor
decl
je
mov
daa
test
sarb
loopne
outsb
jb
mov
pop
jns
xchg
rcrb
fs
loope
inc
cwtl
movsl
xchg
jnp
mov
enter
xor
dec
push
xor
jne
divl
pop
es
cli
mov
xchg
movd
cwtl
cmpsb
sub
cwtl
mov
data16
jbe
cmp
sbb
push
icebp
or
out
adc
pop
imul
add
jnp
out
push
ja
incb
sbb
aad
inc
ja
adc
and
das
out
outsl
jae
jno
lret
xor
mov
push
and
lret
pushf
sub
cwtl
ja
jb
enter
add
mov
daa
rcl
adc
sbb
test
add
mov
add
or
push
leave
shll
or
fildl
jl
jne
insb
mov
push
lret
adc
jle
jp
inc
cwtl
mov
mov
fsubrp
sbb
out
dec
mov
sub
insb
mov
fmulp
push
call
popa
sub
xchg
mov
out
aas
shll
and
outsb
test
data16
inc
imul
mov
jg
jbe
test
or
cmpsl
mov
add
stos
sbb
sahf
in
adc
mov
inc
arpl
int3
nop
insl
loop
push
pop
je
in
jecxz
scas
rcrb
xor
cli
and
mov
inc
lcall
bts
aam
mov
pop
xorb
loope
inc
das
dec
aaa
sub
adc
inc
dec
lea
and
stos
in
mov
or
pushf
je
sub
mov
sbb
scas
jl
js
push
cmpb
or
cmp
shr
add
push
jnp
jmp
fwait
sbb
testb
fucomip
leave
sub
aaa
push
out
fistl
dec
inc
mov
lods
inc
aaa
or
dec
stos
nop
sbb
sub
cmp
nop
fldl
ret
lcall
cmp
sbb
dec
scas
or
sub
xchg
popf
fmuls
mov
into
loop
decb
ret
add
push
mov
mov
or
stc
fwait
inc
testb
mov
adc
mov
sub
sub
dec
cmp
xor
inc
negl
mov
cmp
lea
sbb
jge
shlb
aam
adcl
mov
pop
mov
rolb
and
jne
iret
mov
loopne
mov
mov
mov
and
sbb
adc
jmp
sub
mov
inc
ret
ret
bound
and
cmc
cmp
mov
cmp
stos
push
cmp
push
jne
pop
hlt
pop
andl
add
lcall
sahf
or
mov
mov
movsl
add
mov
xchg
adc
dec
cwtl
sti
and
rcrb
jl
pop
push
jno
push
test
lret
aad
je
inc
ret
loope
mov
add
pop
fdivrl
sbb
test
loopne
mov
mov
sti
or
sbb
jg
addr16
loopne
xlat
dec
in
jb
mov
ficomps
ror
mov
add
dec
insb
scas
aam
adc
orl
icebp
mov
push
dec
xchg
scas
stos
mov
cmpsl
inc
sub
mov
jge
cld
cmc
cwtl
js
call
pop
mov
mov
push
and
mov
sbb
push
dec
push
insw
sub
sub
fcmovnb
lcall
or
cmp
jae
push
xor
push
xor
or
or
cmp
sub
es
repz
mov
enter
sbb
sub
clc
arpl
dec
mov
je
cmp
push
jbe
dec
lods
cmpsl
jbe
int3
cmpsl
inc
xor
loop
mov
mov
adc
in
sbb
sub
movsb
cli
inc
cmp
jmp
bound
sub
cmp
sti
in
push
loopne
and
or
xor
dec
fsts
dec
push
nop
mov
stos
fisttpll
and
mov
xchg
dec
jmp
inc
push
jl
and
mov
fsubs
sub
or
scas
jg
sub
fwait
jb
xchg
mov
pop
push
test
int
and
ret
fsubrp
jp
pop
in
pushw
pop
loope
jbe
sqrtps
adc
cmp
mov
fsubrs
cld
shlb
stos
adc
mov
or
sbbl
pop
push
xchg
je
std
or
aad
cmp
sbb
es
pop
es
mov
pop
adc
lcall
adc
mov
lahf
mov
decl
push
lret
add
call
mov
mov
cmp
aas
scas
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
jmp
pop
stos
sbb
gs
push
lds
lock
sbb
bound
pop
bound
cmpsl
pop
mov
fisttpl
sbb
inc
out
jbe
mov
in
shll
iret
hlt
stc
pop
mov
push
jmp
xor
jbe
xchg
cmp
and
icebp
ret
sti
xchg
fdivrl
popa
mov
cld
mov
cwtl
loope
push
jae
jle
jmp
data16
imul
dec
pop
mov
add
mov
jo
xor
addl
push
adc
xlat
mov
ds
test
jmp
xor
inc
add
sbb
pusha
outsb
mov
shr
pop
int
loopne
adc
dec
repz
outsb
push
rorb
xchg
mov
adc
mov
out
adc
sbb
and
aas
push
sahf
jns
add
int
insl
sub
lahf
push
mov
enter
mov
out
dec
xchg
jl
roll
xchg
or
ret
cmc
push
fs
repz
out
into
pop
aaa
fisubrl
stos
mov
adc
dec
lahf
mov
mov
dec
jmp
sar
fwait
insb
jg
mov
pop
fs
mov
rcll
mov
imul
leave
sub
mov
fwait
test
xchg
loop
shll
jns
inc
dec
cld
xchg
andl
hlt
cmc
mov
jle
aad
xchg
push
into
lods
fwait
mov
ret
jne
nop
ficomps
lea
test
add
adc
mov
cli
in
out
adc
sub
rorb
push
pop
dec
hlt
dec
test
mov
jecxz
xchg
scas
jl
lods
loopne
fiadds
enter
push
cltd
cmp
int
mov
cmc
popl
out
in
or
cmpsb
in
nop
shrl
sahf
insb
fcoms
xor
add
outsl
js
xchg
add
dec
test
cmp
push
or
add
ffree
jmp
sub
cmp
cmp
pusha
cmp
insl
sbb
mov
xchg
fsts
aas
sbb
test
xchg
out
cmp
std
shlb
pusha
inc
scas
sbb
push
mulb
push
loop
ja
pop
xchg
and
insb
mov
subb
cmp
jle
cmc
cmc
mov
shlb
xchg
or
mov
addr16
stos
popa
jl
dec
mov
cmpsl
xor
push
lea
pop
inc
dec
sbb
fldt
xchg
aas
lds
psraw
in
in
jnp
sbb
shll
cmp
dec
enter
adc
jno
jb
mov
mov
wrmsr
jmp
add
fwait
jmp
push
iret
sub
aad
xchg
loope
add
inc
je
sub
inc
sub
pop
pop
adc
mov
lds
nop
popf
sbb
xchg
mov
pop
inc
cli
mov
cmp
fsts
shll
mov
push
sub
daa
jecxz
jecxz
sbbl
cs
xor
push
cmp
xchg
fidivrs
inc
adc
ds
in
mov
adc
push
mov
xor
mov
fs
mov
mov
fs
out
push
shll
icebp
in
aaa
add
gs
shlb
mov
dec
sub
lock
ret
fisttps
test
sbb
xchg
push
sbb
xor
fcoml
xor
jmp
or
adc
sbb
mov
test
pop
mov
scas
add
pop
cmp
out
icebp
and
jns
adc
int3
xchg
or
sbb
hlt
mov
iret
insl
jb
jns
data16
lock
cltd
dec
and
nop
orl
push
jp
mov
rclb
mov
pop
jle
jecxz
pop
repz
add
sahf
jle
sbb
gs
mov
xchg
fidivs
aam
push
dec
out
push
stc
dec
or
push
std
addb
jbe
push
inc
repz
adc
shl
imul
mov
cmp
mov
add
sub
mov
adc
sar
scas
scas
sub
lahf
movsl
in
jns
adc
inc
xchg
mov
fdivrl
pop
push
lock
xchg
jecxz
mov
adc
movl
push
jno
fcmovb
pusha
mov
cmp
jg
cmpsl
je
mov
in
pop
xchg
je
xor
pop
push
add
xor
sbb
adc
inc
insl
xor
addr16
stc
insb
pop
test
xor
push
hlt
lods
lret
nop
or
mov
mov
hlt
cmp
dec
enter
jl
out
xchg
jl
push
fs
lret
lods
cld
roll
push
xor
pop
push
sub
jns
xchg
mov
imul
mov
inc
test
es
xlat
push
jg
xor
or
or
in
or
dec
add
sarb
inc
mov
imul
cmp
aad
jg
fmul
fsubs
mov
mov
sbb
out
xchg
cltd
mov
cs
addr16
movsl
rcll
mov
popf
xchg
push
insb
pop
dec
adc
fimull
mov
cs
stc
jo
ja
push
aad
jge
outsb
pusha
cmpsb
push
rolb
push
mov
lcall
and
arpl
inc
cli
or
mov
add
repz
cmpsl
lahf
aas
fmull
insb
sub
jecxz
xor
aam
test
mov
cmp
fcmovnb
inc
std
jnp
test
sbb
aam
cmp
sbb
enter
shlb
les
or
das
push
inc
bound
push
xchg
jb
test
xchg
add
popf
sbb
sarl
jae
fiadds
fcmovnu
dec
inc
mov
xlat
int3
or
fsubp
inc
mov
mov
or
shrl
mov
es
inc
cmp
fwait
sub
rorl
mov
xchg
jecxz
clc
dec
pop
and
xchg
or
sarl
int
mov
jp
push
mov
fiadds
or
xchg
in
mov
xchg
fisttps
mov
add
or
xchg
pop
jge
dec
and
jl
xor
ss
mov
xchg
jg
push
xchg
shl
or
cmp
aad
cmp
ficompl
cmp
cld
add
xchg
add
mov
pop
roll
aad
cld
sub
sbb
popf
push
inc
mov
das
inc
rcrb
rcrb
aaa
in
or
and
call
or
pop
mov
mov
sbb
aad
xchg
mov
popa
xchg
jp
mov
jl
lea
xchg
mov
push
popf
out
stos
cli
shl
loope
loop
data16
ficoms
aaa
mov
add
adc
aam
and
sbb
jno
inc
mov
jns
mov
xor
push
fmul
push
loop
test
xor
mov
jo
sbb
jge
in
subb
subb
out
mov
in
mov
xchg
lret
stos
and
and
in
fcoms
lea
or
leave
xorl
mov
stc
jnp
or
mov
xor
pop
cmp
sub
add
sbb
or
leave
movsl
out
sub
jp
aas
int3
xchg
movsb
movsb
and
test
xchg
aam
xchg
clc
xor
jbe
inc
mov
ss
icebp
rol
xchg
push
lea
lret
hlt
mov
rolb
mov
xchg
aam
xchg
pushf
clc
and
sbb
ds
adc
scas
lds
lret
mov
sarl
sbb
mov
sbb
insb
adc
mov
push
sub
cmp
sub
fldenv
inc
enter
icebp
out
mov
jno
repnz
xor
jge
and
lods
test
pop
lret
dec
cwtl
mov
mov
loope
and
mov
push
dec
pop
push
repz
mov
jno
cmp
inc
outsl
sbb
fxch
jmp
shll
setb
mov
sbb
inc
dec
mov
mov
lea
lcall
inc
movl
xlat
mov
fldcw
xchg
ds
dec
iret
shrb
mov
xchg
mov
lods
daa
mov
clc
sbb
imul
test
inc
push
jg
ret
inc
stos
mov
add
adc
aas
dec
mov
jns
adc
jmp
pmullw
push
add
mov
pop
cli
lea
pop
mov
cmp
xchg
mov
and
mov
pop
mov
fiaddl
shrl
imul
mov
dec
or
pop
and
and
lcall
sar
inc
pop
xchg
push
xor
jno
xchg
push
mov
out
cld
and
add
add
sbb
pop
sub
divps
lcall
rorb
clc
adc
iret
repz
test
push
pop
enter
aas
xor
iret
std
out
xlat
lods
fdivs
cmpsl
leave
mov
mov
mov
cmc
outsl
xchg
push
fimull
jne
outsl
fs
or
orl
xcrypt-ctr
cmpsl
pop
ds
inc
inc
cmp
rorb
fdivrl
nop
clc
jl
or
sbb
mov
cs
aas
subb
arpl
xor
sbb
push
clc
dec
outsl
js
loopne
sub
sbb
mov
cmc
lcall
cs
testb
push
aaa
push
adc
sbb
push
cmc
or
sub
insb
ljmp
mov
aas
dec
xlat
lods
shll
jp
xlat
fisubs
out
add
push
mov
add
adc
xchg
sub
xchg
insl
repnz
dec
leave
inc
add
addr16
sub
adc
cmp
lods
mov
xchg
sbb
loope
arpl
push
scas
adcl
jb
add
imul
xchg
outsb
loope
sub
inc
pusha
jle
pop
cmp
mov
mov
repnz
aas
outsb
cmp
out
push
jns
inc
mov
les
rorb
pushf
loope
sbb
lock
cmpsb
out
jmp
mov
mov
leave
jge
dec
pop
mov
jns
cmp
jb
test
in
incb
mov
adc
cmovae
into
pop
pop
test
xchg
xor
sahf
test
lods
mov
pop
popa
mov
aas
sti
fwait
xchg
mov
push
fldl
xchg
sbb
pusha
pop
stos
pop
mov
and
xor
stos
dec
and
bound
and
pop
cmc
out
mov
cmc
imul
cli
jae,pt
dec
xor
into
mov
cmpsb
push
cmp
xlat
cmp
xor
stos
cld
push
lret
jno
outsl
adc
jg
cltd
dec
out
mov
xor
xorb
dec
adc
mov
jae
leave
inc
imull
movsl
pop
xchg
adc
inc
mov
add
sbb
adc
sbb
ret
sbb
roll
test
dec
subb
sbb
mov
cmp
dec
mov
lds
xor
cli
in
mov
movsb
fs
into
in
ret
iret
mov
xor
jo
pop
dec
sarl
and
cmp
jl
jne
pop
adc
inc
sti
out
sub
mov
cmpsb
xchg
xchg
ror
mov
mov
repz
xor
test
xor
inc
pop
dec
xor
fadds
sub
sahf
loop
dec
xchg
leave
mov
dec
gs
cmc
cmp
cmp
push
mov
cmpsb
ljmp
jmp
adc
fdivl
pop
inc
pop
inc
scas
dec
add
addl
movsl
and
in
cmp
ss
dec
out
sub
cli
xchg
xor
cmp
push
negb
les
dec
ja
mov
adc
int3
movsl
iret
es
xchg
fs
fldt
push
mov
mov
lock
fs
dec
inc
xlat
arpl
dec
rcrl
mov
subb
mov
lds
sbb
dec
or
jl
andl
cld
bound
or
out
cltd
enter
arpl
mov
mov
jl
gs
pop
adc
insl
movsb
rcrl
das
cmp
pusha
cmp
xchg
inc
jnp
push
stc
add
imulb
fsubs
jnp
xor
jle
add
leave
or
adc
sti
popf
xchg
xor
xchg
mov
popa
ds
idivl
into
neg
push
dec
jl
sbbl
or
push
pusha
add
add
mov
pushl
add
xor
loope
mov
mov
pop
xchg
mov
sbb
cwtl
cmp
nop
scas
cli
jnp
popa
pop
cmc
jmp
in
jge
les
neg
shrl
adc
mov
or
lock
or
pop
cmpsl
sbb
cld
mov
mov
add
jle
aad
gs
jp
orl
ret
clc
mov
adc
out
dec
xchg
imul
jo
insl
loop
pop
mov
stc
aam
aam
mov
mov
orb
sbb
adc
cmp
in
inc
pop
jge
push
add
fs
jmp
pop
lods
lret
sub
stos
pusha
sbb
dec
sub
pushf
push
movsl
pop
mov
inc
movsl
ss
nop
andl
in
add
adc
rorl
xor
sahf
jno
dec
and
ds
movsb
faddl
pop
into
cmc
dec
fsts
xor
rcll
xchg
add
add
or
or
mov
or
addr16
mov
and
mulb
cmp
lahf
and
or
es
andl
xchg
fstpl
xchg
aas
xor
pop
cmpsl
lret
sub
sub
jle
cmp
in
popf
fcmovnu
adc
scas
and
lods
mov
fdivrp
mov
clc
sbb
test
and
sti
push
popa
adc
les
cmp
adc
dec
cmpb
mov
push
push
fdivrl
hlt
and
mov
les
adc
aaa
in
iret
gs
or
loop
cld
xchg
jl
sahf
or
cld
jnp
loope
sarb
dec
push
loop
or
fidivl
je
ret
inc
icebp
jnp
mov
pop
add
pop
pop
lcall
inc
adc
push
xor
je
add
sbb
in
sti
jb
call
dec
jge
sbb
push
jo
adc
inc
lret
out
and
cmp
arpl
sbb
sub
sub
test
lahf
jo
cmpsw
xor
pop
jb
mov
xor
call
sbb
cli
xlat
loopne
loop,pn
ja
in
push
cltd
es
or
daa
push
lock
sbb
roll
xchg
mov
mov
cs
inc
xchg
mov
dec
xchg
pushf
and
fsubr
sbbl
pop
std
sbb
popf
add
adc
cmp
add
stos
mov
sbb
push
jne
pop
fisttpll
inc
repz
fwait
xor
nop
jge
jo
nop
nop
pop
mov
push
inc
loopne
or
cmc
mov
add
insl
fldcw
jbe
fidivrs
fucom
or
aas
aam
lods
cmp
pop
cmpsb
es
enter
add
mov
inc
add
inc
add
mov
xor
loop
push
mov
push
jnp
ss
dec
subl
push
addr16
pushf
xchg
mov
lret
aad
xorb
mov
jg
lock
cltd
mov
fdiv
lods
mov
pop
sbb
push
push
test
push
sarb
aaa
push
pop
mov
lea
mov
cmp
lret
dec
insb
call
dec
mov
push
xchg
sub
test
xor
pop
lret
or
or
push
sarb
xchg
in
pmuludq
int
mov
pop
sbb
mov
cmp
ljmp
das
mov
push
jb
adc
cmp
mov
xchg
pop
cli
and
mov
xor
lret
in
push
loop
inc
or
lcall
pop
sbb
or
xor
pop
jecxz
data16
or
scas
push
mov
jns
adc
or
lods
fs
in
fistpll
pop
inc
int3
clc
add
jns
insb
je
cmp
lock
add
or
les
mov
lods
push
les
cmp
imul
xor
out
loope
dec
testl
stos
inc
divl
into
push
push
adc
test
jg
cmc
mov
and
int
push
jle
testl
push
mov
mov
iret
or
sbb
add
mov
mov
push
mulb
subl
rorl
in
shll
leave
push
je
lds
ja
sbb
out
scas
sarb
xor
pushf
cwtl
xchg
sub
push
sbb
outsl
mov
in
sti
aad
jge
test
fstpl
or
and
mov
fidivrs
pop
mov
cmpsl
sbb
add
pop
stos
sbb
stc
loopne
jg
dec
scas
xchg
dec
xor
enter
mov
movsl
sbb
call
ljmp
in
push
scas
dec
cmc
dec
into
or
ljmp
push
iret
mov
sbb
test
add
hlt
test
inc
ret
or
pusha
out
mov
scas
mov
dec
aad
std
dec
insb
sub
jns
loopne
lret
ja
push
cmp
dec
cmpsb
push
test
push
mov
adc
inc
push
add
mov
dec
mov
aad
cli
push
add
add
add
movsb
mov
in
stc
insb
mov
sub
dec
pushf
sbb
or
lds
adc
mov
fnstenv
dec
inc
fnsave
inc
xor
test
add
sarb
xlat
loopne
mov
jns
loopne
sub
jbe
cld
dec
repz
js
arpl
dec
dec
js
cmc
test
push
aam
xchg
lea
cmp
jae
rcrl
loopew
iret
insl
or
in
push
sub
jae
sub
sbb
mov
int3
mov
movsb
fnstsw
insb
xor
loopne
dec
test
xchg
pop
dec
xchg
aam
push
sbb
mov
or
mov
dec
repz
jo
in
mov
sbb
roll
jle
dec
test
pop
mov
mov
mov
sub
lret
xchg
test
adc
lods
xchg
push
fwait
push
cmp
std
insl
adc
dec
rorl
add
adc
pop
mov
icebp
push
jo
imull
add
shrb
ret
inc
jle
pop
and
into
daa
imul
lods
xchg
xor
push
mulb
stos
fidivl
lret
imul
bound
ljmp
incl
bound
int3
jecxz
mov
mov
scas
lock
jle
mov
fdivr
stos
xchg
clc
in
sub
mov
test
lret
popf
movsl
out
aad
cld
lock
int3
sbb
lds
mov
sbb
push
cli
stos
lods
dec
mov
mov
andb
iret
mov
loop
les
cld
rcrl
shrl
xchg
push
sbb
or
stos
pushf
test
pop
lock
sti
add
mov
out
test
cmp
and
sbb
btr
push
inc
dec
out
cmpsb
bound
jo
fiaddl
pop
mov
outsb
adc
jge
gs
dec
mov
or
inc
xlat
jbe
mov
xchg
and
test
insb
daa
shll
xor
dec
mov
mov
cs
xor
dec
push
pop
dec
shlb
imul
fcmove
xor
mov
jmp
mov
add
push
pop
push
mov
outsb
jmp
push
pop
dec
sub
mov
inc
stos
adc
sub
add
daa
cmp
jp
push
cmp
shlb
cmp
xor
xchg
or
push
jg
nop
or
out
xor
fisubrl
mov
lcall
lret
pop
xchg
int
loop
push
mov
insl
scas
dec
movsl
sbb
lret
add
test
jecxz
out
lds
test
cmpb
subl
pop
cmc
cmp
mov
mov
xchg
mov
mov
movsl
out
or
push
push
xchg
fistl
ret
xchg
ljmp
xchg
dec
and
in
add
shrb
mov
mov
leave
cmp
ja
ret
dec
jo
xchg
mov
hlt
or
pop
stos
or
add
in
mov
sub
jb
clc
mov
hlt
xlat
or
jb
inc
cmp
call
pushf
fisubrl
jle
jmp
sub
mov
mov
loopne
sub
rcrb
adc
mov
mov
xor
fstpl
mov
insl
stc
dec
out
fnstenv
popa
imul
orl
or
lock
pusha
push
adc
mov
ja
pop
mov
in
ja
enter
sbb
xor
sub
mov
lods
lock
jmp
shrl
cmp
loopne
cli
into
xchg
cmc
pop
daa
mov
popa
cltd
sarb
and
adc
nop
pop
xchg
dec
mov
cmp
dec
xchg
lea
cmp
cld
or
mov
test
and
xor
pop
and
int
or
push
ret
cmp
loope
push
in
imul
std
cmpl
sarb
sbb
rorl
pop
stos
jno
sahf
ja
test
pop
inc
jmp
in
in
inc
iret
sub
shll
test
test
das
test
test
or
pop
ds
insb
ss
aad
js
pop
push
jecxz
jb
mov
sub
mov
loopne
mov
dec
push
out
imul
stc
xchg
outsb
ja
imul
push
push
add
sarl
lret
popa
xchg
jg
lods
enter
data16
push
dec
mov
in
sarl
sub
mov
decl
pop
shrl
cli
adc
int
gs
jne
rorb
scas
les
test
jns
cmp
sub
cmp
ljmp
mov
dec
loopne
outsl
testb
mov
xor
rcrl
push
push
and
fidivrl
scas
inc
adc
aas
push
mov
mov
inc
je
jmp
movsl
cmpsl
mov
and
pop
mov
xor
rcr
scas
push
dec
outsl
lea
xchg
das
sbb
test
int3
das
fwait
or
jae
cmp
sub
xchg
std
adc
popf
in
xor
inc
sub
adc
mov
insb
enter
xchg
loop
dec
mov
pop
ss
cmc
in
push
call
pop
dec
jle
sbb
push
lock
cmp
in
movsl
pop
and
lock
lods
int
mov
inc
xor
push
mov
lods
and
push
pop
adc
lods
test
xorl
sbb
pop
sbb
pop
mov
fldt
addb
mov
lods
test
divl
pop
cmpsl
and
int3
popa
aam
or
xchg
out
inc
mov
or
adc
xor
mov
ficoms
cltd
test
out
fdivrp
or
aas
sub
push
or
xor
rcll
ficoms
jbe
push
adc
inc
xor
in
xchg
adc
das
imulb
mov
es
stos
imul
or
mov
jns
push
aas
movsb
cltd
xchg
pop
into
ret
mov
mov
jge
xchg
rol
pop
aam
dec
into
jmp
mov
popa
nop
inc
fadds
lahf
loopne
and
stos
sbb
cli
aaa
addb
mov
nop
add
push
das
stos
fcmovnu
sahf
jns
adcb
aaa
lods
or
std
push
shll
icebp
jl
sarl
das
aaa
div
jp
pop
lock
iret
jno
repnz
pop
cmpsb
icebp
aaa
popa
cmp
fs
not
push
stc
mov
sub
cld
popl
xchg
pushf
out
dec
ficoml
pop
xlat
jno,pn
leave
insb
scas
add
and
test
pop
jnp
mov
ds
int3
into
cwtl
scas
and
enter
mov
stc
mov
cmp
add
stos
lea
insl
inc
imul
out
scas
int3
push
repnz
arpl
xor
jns
into
int3
fidivrl
cwtl
leave
addr16
mov
dec
jecxz,pn
into
mov
add
daa
adc
call
mov
adc
loop
adc
fistpll
sbb
mov
add
fidivrs
aaa
pusha
in
outsl
jle
mov
mov
or
dec
jp
arpl
repnz
andb
out
movsb
in
adc
lds
mov
add
jge
movlps
fadds
pop
dec
dec
pushf
aaa
in
cmp
add
neg
cmpsl
dec
pop
push
cmpsb
cs
loopne
aas
movsb
cmc
xlat
xchg
xchg
cmp
movsb
je
lret
jmp
clc
adc
rcrb
sbb
inc
rcrb
mov
sahf
sbb
or
jno
mov
mov
insb
jmp
in
lods
mov
mov
push
test
sub
xchg
pop
sti
xor
cmp
mov
mov
call
inc
loop
xchg
inc
shll
adc
pop
jmp
lret
test
fpatan
adc
fstpl
xchg
lahf
sarb
pop
aas
fwait
aaa
divb
mov
push
and
sub
cmc
sbb
mov
imul
rcll
adc
call
ja
mov
imul
sbb
shl
aam
or
es
mov
addr16
xchg
imull
ret
shll
fisttps
dec
inc
test
push
loop
int
pop
cld
or
cli
mov
jb
push
cmp
loope
xor
push
and
push
std
lcall
inc
xor
stc
inc
mov
pop
lcall
stos
int
xchg
cmp
jg
sub
xchg
add
xchg
mov
fsubrs
dec
push
sbbl
test
in
mov
jl
das
xchg
mov
xor
push
push
dec
jbe
hlt
adc
cmp
sbb
lock
pop
std
data16
cli
mov
test
jp
cs
add
jge
arpl
push
jns
jo
jo
lret
ljmp
scas
adc
inc
scas
subb
scas
lock
cli
or
mov
cmp
lret
mov
inc
inc
pop
sbb
or
test
lods
fists
mov
data16
out
and
sbb
fistpll
test
xor
jl
sub
lret
fs
fidivrl
jnp
test
pusha
ja
adc
fistpl
sub
out
cmp
or
fsubl
fscale
adc
fs
jp
and
adc
and
aas
in
adc
or
add
sbb
je
bound
jns
lods
fs
jg
adc
int
imulb
mov
imul
jle
push
xchg
in
ja
ret
sbb
aaa
dec
mov
sbb
das
mov
xchg
sub
adc
inc
pop
push
mov
test
cmpsl
in
pop
mov
jbe
aam
xor
sti
add
jnp
sub
mov
add
push
xor
and
js
pusha
mov
xchg
jmp
or
lcall
ljmp
cmpsl
push
into
dec
sub
rcll
cmp
les
fs
push
cmpsl
sub
dec
adc
add
outsb
pop
fidivs
ret
cmp
xchg
mov
jae
sahf
loopne
mov
mov
cli
aam
sbb
xor
mov
push
mov
insb
pop
test
popf
jp
xor
call
out
push
into
je
arpl
or
mov
popa
adc
mov
xor
xchg
mov
xchg
inc
ja
pop
xchg
sarl
mov
and
push
iret
mov
or
mov
inc
fdiv
jl
jmp
jge
clc
add
jle
popa
mov
pop
dec
ss
mov
out
pop
mov
mov
ss
repnz
js
jb
movsl
xor
shlb
shr
aam
mov
sbb
ja
dec
faddp
push
sbb
dec
adc
jns
mov
mov
xchg
dec
adc
sbb
mov
ret
ja
add
mov
arpl
add
jp
lea
jge
jp
and
mov
lock
repnz
push
push
ss
fstpl
lahf
ss
daa
mov
ja
cwtl
in
pushf
mov
out
fcmovnb
xchg
scas
pushf
push
cmp
dec
aam
sub
ret
shl
lret
xchg
aad
nop
cmp
ja
iret
mov
cltd
lahf
stc
adc
loopne
cmp
inc
cmpsl
imul
mov
jns
mov
std
add
sub
cmp
lcall
or
leave
mov
fcoml
ret
repnz
ss
inc
ret
out
sahf
mov
bound
cltd
add
outsb
cmp
cli
shll
mov
cmc
aas
int
jmp
jge
std
push
dec
jg
movsb
insb
ret
add
pop
push
gs
cmp
cmp
cmpsb
xor
movsb
push
fstpl
loope
subl
inc
cmp
cmp
mov
pushf
mov
mov
loope
imul
push
xchg
pop
pop
xchg
inc
pop
jg
xchg
jl
cmc
jnp
adc
or
fdivr
pop
lods
aad
pop
xchg
mov
inc
int3
jnp
mov
lret
sub
pusha
imul
sbb
mov
cmp
xchg
insl
inc
rclb
test
pop
inc
push
lcall
mov
sbb
in
push
jno
and
rolb
or
popa
sub
aaa
dec
shr
pusha
iret
aad
int3
mov
mov
in
sbb
pop
inc
jp
jg
inc
xor
xchg
int3
mov
xlat
adc
movsl
sub
pushl
jo
lea
rcrl
add
fldenv
inc
js
xor
inc
cmp
inc
inc
sub
and
in
fsubrl
xor
jnp
lcall
dec
cmpsb
mov
stos
push
adc
xchg
loope
cmp
push
mov
clc
es
xchg
rclb
cmp
cmp
push
dec
mov
and
andl
adc
dec
cli
mov
jl
bound
imul
lds
stos
push
xchg
pop
xchg
pop
daa
stos
mov
mov
out
cld
mov
sarl
push
imul
int3
pop
in
adc
je
pusha
mov
push
into
test
repnz
cmp
adc
cli
mov
jp
outsl
xchg
mov
xchg
pusha
xchg
cltd
cmpsl
ret
imul
inc
call
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
jmp
inc
push
add
imul
aas
imul
bound
bound
std
jmp
insb
push
dec
pop
scas
scas
cmp
xor
addr16
lcall
pop
iret
test
push
fidivl
push
data16
fimuls
mov
push
data16
test
aam
cmp
scas
inc
pusha
es
push
int3
mov
or
aam
pop
jmp
cmp
ret
loope
or
jns
loop
push
orb
repnz
ret
hlt
mov
xor
paddb
leave
enter
out
sbbb
jecxz
xor
rcll
in
or
fsubrp
sahf
cli
hlt
pop
andb
add
add
test
mov
adc
xlat
fisttpll
xchg
dec
jle
gs
aaa
cmc
shlb
pop
test
shrb
out
add
add
dec
aam
test
jle
fnstcw
test
cli
add
or
pop
aad
pop
and
dec
jge
sbb
and
cltd
scas
jo
dec
xchg
lret
sub
inc
jl
push
lods
adc
enter
setbe
mov
ja
jg
aad
push
adc
test
aas
cmp
push
pop
cmc
mul
or
adc
out
int
mov
dec
mov
inc
in
cmc
mov
xchg
mov
jp
clc
loope
xchg
stos
cmpsl
push
push
out
jnp
mov
in
test
or
push
or
add
or
add
hlt
mov
outsb
or
sub
aas
pop
cmp
push
xchg
cmp
xchg
mov
mov
ss
lahf
punpckldq
pop
xor
mov
aad
ret
and
scas
jo
cltd
mov
in
xor
mov
fcmovnb
inc
xchg
outsl
mov
pop
sbb
fwait
sbb
addb
xlat
fiaddl
push
pop
mov
dec
aas
or
xor
jl
pop
xchg
mov
mov
rcrl
pusha
sub
add
lods
loopne
jae
stc
out
pop
je
sub
shlb
cltd
out
fcomi
and
std
rorl
loop
adc
dec
add
notb
daa
mov
shrl
mov
les
sub
and
mov
in
clc
aam
outsb
xor
jae
pop
js
lea
add
cli
xchg
cmpsb
icebp
xchg
mov
xchg
out
inc
push
out
pusha
push
mov
or
ss
daa
scas
iret
fs
sbbl
hlt
pop
cmc
fwait
mov
xchg
shl
and
in
rsqrtps
mov
dec
xchg
aas
adc
fstps
mov
fisttpl
popa
xchg
xor
sub
cld
fildl
pop
lret
inc
fisubs
imull
mov
jecxz
or
lods
mov
icebp
cmpsb
or
stc
pop
sahf
xor
shlb
inc
sbb
inc
repnz
stos
sbb
pusha
dec
jo
nop
pop
imulb
repz
popf
xchg
and
inc
adc
sbb
gs
jb
xchg
cli
pop
insl
sarb
adc
movsb
fcmove
push
mov
pop
loopne
bound
in
cmp
mov
leave
sub
testl
out
gs
jmp
mov
dec
dec
xor
dec
adc
xchg
fcompl
push
xchg
es
sar
cli
std
int3
insb
cmp
int3
xor
inc
arpl
cld
movsl
add
pop
jecxz
mov
jmp
dec
adc
or
inc
sub
lock
cmpsl
sbb
sub
jecxz
mov
cmpsl
pop
inc
mov
mov
cmpsl
pop
sbb
or
xor
and
orb
jmp
outsb
cmc
repz
sub
mov
mov
mov
jae
js
pop
std
aad
loop
lret
dec
lock
mov
bnd
mov
cli
mov
into
mov
fadd
mov
mov
inc
cmp
pop
cmp
adc
pop
mov
sahf
sahf
inc
push
push
inc
lods
push
daa
iret
jl
jno
notb
icebp
adc
aad
push
jnp
scas
mov
sbbb
pop
add
push
sbb
cmp
push
xor
pop
jl
mov
adcb
rclb
push
mov
push
adc
bndstx
pop
ffreep
cltd
out
arpl
icebp
insl
push
push
add
dec
add
rolb
incb
enter
int3
insl
fwait
adc
or
sbb
cmpsl
push
aaa
gs
pop
add
enter
daa
leave
loopne
jg
shlb
ja
pop
hlt
cld
push
lcall
mov
xor
lret
sbb
inc
nop
adc
push
and
adc
inc
or
cli
xchg
movsb
shl
push
lock
add
inc
dec
pusha
aaa
mov
aad
wrmsr
sbb
clc
sub
subb
pop
sbb
fcmove
or
xchg
jnp
dec
add
mov
ljmp
ret
adc
mov
sti
pop
shl
adc
fdivrs
outsb
movsl
fs
mov
rcl
sub
faddl
adc
hlt
cld
mov
and
ret
dec
mov
loop
fwait
xchg
inc
mov
test
jo
push
mov
dec
test
stos
and
insb
fistpl
fdiv
gs
mov
lret
xchg
repz
in
mov
jle
jge
xor
add
adc
fldl
repz
lods
push
add
ss
lret
mov
andb
mov
dec
pop
out
inc
ljmp
sbb
cwtl
call
cmp
rclb
sub
xchg
mov
mov
and
lea
cmp
cli
call
push
cli
aaa
pop
dec
addr16
jnp
push
and
test
repnz
xchg
dec
push
in
jno,pt
mov
pop
mov
jp
addr16
frstor
push
into
pop
in
mov
hlt
add
cli
rorb
test
inc
imul
pop
hlt
aas
jecxz
popf
outsb
cmpsb
or
leave
pusha
test
fstl
mov
jo
repnz
xchg
test
xor
cmp
movl
daa
in
pop
outsb
imul
jno
hlt
mov
pop
adc
movb
mov
dec
mov
and
das
and
outsb
cmp
mov
cs
icebp
add
sub
add
jnp
out
das
push
in
dec
push
andl
ljmp
movsl
jecxz
out
outsl
xchg
dec
pop
pop
frstpm(287
bound
rcll
sub
test
mov
fs
add
leave
jb
stos
sbb
jle
adc
sbb
sbb
mov
xchg
fiadds
fisttps
mov
mov
pop
scas
cmp
cmpsl
cmp
ss
arpl
jb
mov
fnstenv
clc
xor
push
hlt
int
mull
lahf
popf
mov
iret
or
dec
inc
mov
ror
mov
inc
scas
cmpsb
cmp
pop
pop
push
xor
pop
jae
dec
ljmp
fildll
push
sbb
repz
ficoms
fstpl
lret
por
je
loopne
sub
inc
sub
push
test
rcrb
movsb
aam
in
add
adc
cwtl
fnstcw
addl
lcall
cmpl
in
cmp
dec
jo
lea
add
sahf
in
test
mov
ja
shrl
mov
mov
add
testb
inc
xorl
add
jge
imul
mov
push
adc
notb
push
mov
mov
inc
mov
sahf
cmpsb
adc
push
inc
data16
sub
daa
popf
xorl
inc
enter
pop
mov
lods
inc
jae
sbb
int
clc
xchg
mov
push
push
jne
ja
hlt
js
jns
inc
lret
or
inc
and
mov
sti
mov
push
sub
cld
daa
pop
je
in
cli
adc
dec
push
sbb
arpl
cmp
pop
mov
movsl
or
sbb
or
out
fsubs
xor
outsl
fcomp
adc
fisubrs
jecxz
js
outsb
iret
mov
adc
inc
mov
sbb
inc
adc
fisttpll
in
xchg
mov
pop
dec
jnp
mov
sbb
bound
lahf
mov
xor
testl
push
fisttps
scas
dec
cmc
mov
dec
addl
inc
je
test
popf
push
cs
adc
ja
lret
mov
in
xor
xchg
addr16
sub
xchg
loop,pt
add
cmpb
mov
mov
mov
movd
insl
aaa
test
popa
dec
int
adc
xchg
stos
jnp
ja
pop
jl
ficomps
fdivl
xchg
jge
int3
and
ljmp
cmpsb
stc
outsl
out
inc
sbb
cmpsl
adc
mov
sbbl
cmp
lods
jle
daa
sti
push
mov
adc
mov
scas
lahf
pop
call
in
lds
icebp
lock
jbe
inc
dec
add
arpl
scas
sbb
sub
fcoml
xchg
cmp
ljmp
sub
inc
adc
loop
das
pand
jbe
cmp
cli
pop
mov
xor
sbb
push
push
dec
std
sbb
shl
and
cmp
pop
js
jae
and
dec
cmp
inc
sbb
mov
add
jl
shrl
mov
mov
adc
pop
push
inc
push
daa
push
cmpsl
dec
sbb
lea
mov
push
lods
adc
bswap
std
adc
xorl
fildll
add
clc
xor
inc
xor
pop
loope
xchg
mov
mov
ffree
test
test
or
cmpsb
ja
push
or
js
insl
mov
mov
pop
sti
ss
fwait
mov
mov
dec
cmc
int
inc
repnz
jnp
cmp
jae
jnp
pop
xor
cmp
adc
scas
ffree
dec
nop
aad
outsb
rol
jge
stos
sbb
icebp
faddp
cmc
ss
lods
xor
pop
push
mov
cmp
push
xchg
shrb
loopne
mov
mov
fmull
repnz
add
jns
mov
int3
imul
dec
fs
xchg
outsb
jle
scas
ret
xchg
push
iret
out
mov
leave
xchg
rolb
mov
lahf
push
sub
rcll
mov
sti
sbb
xor
xlat
inc
inc
mov
push
jmp
jne
repnz
popf
shll
fcomp
icebp
in
out
imul
or
xchg
das
pop
sbb
mov
add
test
addl
mov
mov
cs
aad
fcomps
pop
push
sarl
mov
js
jo
xor
mov
outsb
adc
xchg
pop
push
lds
adc
lahf
mov
ficomps
jl
jmp
sbb
sub
rorb
in
aaa
insl
mov
rcl
pop
in
jo
cmpsl
jmp
mov
jae
fsin
mov
sub
sahf
xchg
arpl
dec
or
jnp
pop
jge
popa
lods
push
fsubrl
push
sub
in
imul
arpl
lret
cmpl
jbe
sub
cltd
maxps
xchg
popf
push
xor
xor
or
sbb
push
mov
jmp
jg
pop
cltd
sub
cwtl
pop
pushf
outsl
push
mov
cmp
xchg
dec
dec
push
loope
ljmp
adc
mul
dec
stos
sbb
loop
clc
pop
iret
imul
xor
inc
iret
nop
xchg
push
enter
out
rorl
mov
and
push
push
adc
cmpsb
fimuls
inc
repnz
add
adc
mov
cli
jle,pn
test
fistps
jmp
fdivl
cmp
mov
jo
pop
shrb
testb
pop
push
bound
aas
dec
hlt
push
and
adc
cmc
fdiv
hlt
adc
loopne
out
repnz
inc
rep
fmuls
cmp
and
sub
mov
lods
sub
imul
enter
les
and
adc
mov
sub
mov
shl
cmp
sbb
and
int
or
test
push
test
daa
mov
pushf
lods
test
xchg
popf
jbe
aaa
mov
jg
popf
clc
pop
xchg
adc
scas
xor
inc
mov
jge
xor
cmpl
jl
sub
rorl
outsb
xchg
pop
adcl
push
movsb
das
push
sbb
sub
dec
inc
insb
sbb
in
cmpsl
add
push
loopne
fdivrs
adc
imul
add
dec
stos
aas
nop
sbb
mov
mov
mov
mov
repnz
cmp
in
fistpll
mov
pop
lcall
xor
sub
leave
push
xor
enter
mov
or
lahf
cwtl
mov
divb
and
sbb
andl
nop
add
jne
movb
lock
mov
xchg
jb
movsl
push
mov
fiadds
xor
loop
xchg
and
and
incb
repz
xor
shll
shll
inc
icebp
jge
fildl
sbb
mov
mov
aaa
push
fcoml
hlt
addr16
push
iret
fwait
pop
push
sti
arpl
pop
cmp
jle
shr
mov
cmpsb
sarl
stc
push
mov
push
mov
sbb
test
subb
leave
pop
push
movsl
add
test
mov
mov
enter
mov
inc
cmp
movsl
aaa
rorl
sahf
rol
pop
mov
xchg
push
xrelease
out
mov
mov
loop
cmp
daa
push
mov
lods
add
and
scas
rclb
pop
call
mov
push
test
inc
mov
pushf
out
cmpsb
ja
call
push
mov
inc
popa
adcl
pop
cmpsb
lods
lods
sub
sub
mov
fldenv
cmp
push
jae
push
inc
lahf
adc
ret
scas
addl
in
add
sub
ret
ja
leave
shll
cmove
std
xor
lods
neg
push
repnz
adc
cwtl
dec
iret
mov
mov
mov
stc
inc
sti
xchg
fiaddl
push
inc
jmp
mov
aaa
xor
ret
and
pop
aad
enter
test
cmp
hlt
movsl
lods
inc
cmp
daa
int
fdivl
ja
mov
movsl
dec
adc
xor
mov
aas
fldt
mov
pop
les
rcll
mov
push
lret
mov
fwait
sub
int3
fisubrl
lea
loope
add
jle
xor
add
loope
xchg
addr16
jmp
pop
pop
or
mov
and
lds
jl
in
dec
xor
and
js
push
adc
jmp
je
mov
add
pop
push
inc
jmp
or
or
lret
mov
cwtl
cmp
insl
sub
daa
lock
sbb
sbb
int3
xor
dec
std
mov
add
loope
fcompl
push
mov
out
shlb
pop
jmp
js
mov
out
in
push
mov
jge
xor
fsubrl
and
push
jle
and
repz
push
mov
mov
mov
adc
das
mov
inc
jle
popa
mov
push
sub
adc
arpl
push
add
divl
popf
add
and
push
push
pushf
inc
cmpsl
dec
dec
pop
push
and
sbb
fildl
out
xchg
mov
pop
repnz
sbb
lret
ret
out
scas
ja
popf
aad
dec
xor
ss
mov
addr16
sub
sahf
pop
shll
dec
mov
leavew
enter
or
cli
mov
jl
jnp
push
fld
or
sahf
mov
popa
je
push
fcoml
aas
sub
ss
or
pusha
into
ficomps
sti
sbb
rclb
mov
mov
ljmp
push
cmp
idivl
xlat
adc
sub
mov
gs
mov
push
push
cli
push
hlt
bound
sub
mov
loope
xor
and
sti
xchg
xchg
sub
sub
adc
pop
push
push
lea
mov
xchg
out
aad
jne
lahf
stos
call
pop
pop
mov
fcoms
xchg
imul
push
mov
cltd
insb
in
jns
mov
xchg
xchg
mov
aam
add
mov
cli
ret
daa
sbb
and
push
hlt
push
movsb
adc
or
mov
shrl
add
xchg
mov
push
mulb
mov
push
loopne
xchg
pushf
jmp
xchg
mov
cmp
imul
cmp
mov
jmp
jg
fwait
imul
cmc
jb
movhlps
cmp
cs
ds
dec
adc
xchg
in
xor
xchg
sbb
insb
cwtl
xor
cmp
jo
or
lock
lock
pop
dec
mov
test
negb
int
mov
jp
add
jecxz
enter
ficoml
loope
sbb
add
mov
lea
lahf
aaa
das
add
mov
popf
sub
cmc
cmp
or
or
inc
in
or
push
push
push
mov
xor
shr
mov
dec
mov
fsubl
cmpsb
and
push
sbb
stc
int
jae
push
loopne
xchg
in
sub
lock
add
mov
loopne
adc
cmp
inc
cmpsl
adc
cmpsl
jno
aam
cwtl
lret
test
mov
mov
in
loopne
xchg
jle
js
fldl
xchg
cmpsb
fcom
add
dec
test
out
out
or
mov
pop
fiaddl
xchg
stc
or
pop
fcomps
pop
repz
push
test
sbbb
jmp
pop
push
xchg
fwait
cmpsb
loope
inc
xor
gs
sub
jns
xor
jae
adc
mov
add
push
jb
insl
stos
jo
jno
out
pop
aam
cs
add
stc
arpl
dec
xor
fnstenv
out
ja
dec
mov
mov
movsb
lret
nop
xchg
aam
enter
xchg
ret
xlat
push
scas
xchg
iret
cmp
andl
out
sbb
pop
pop
loop
movsb
mov
pusha
cmc
adc
in
xorb
adc
pop
lock
shll
fs
cmp
jge
mov
in
es
xor
inc
mov
ret
cmp
fstpl
pop
lret
push
ss
mov
pop
cmp
or
add
pop
push
sbb
mov
dec
xchg
adc
xchg
bound
je
pop
add
sbb
into
in
jne
jo
push
rolb
sarl
fbld
call
std
or
cmc
sarl
fwait
dec
xchg
sub
xchg
test
lcall
pop
jp
bound
test
mov
enter
repnz
jno
and
out
sub
lods
testb
jae
in
xchg
rclb
sbb
bound
das
or
xlat
cwtl
cmpl
and
fs
jge
cmpsl
sbb
xor
dec
cmpsl
dec
outsl
sub
fs
add
pop
into
leave
mov
pop
std
in
mov
or
mov
mov
mov
or
in
adc
mov
inc
add
or
inc
mov
inc
test
sub
setl
movsb
xchg
and
adc
in
push
hlt
ss
fldcw
daa
inc
cmp
jge
jecxz
jno
fists
mov
jp
pop
push
inc
xchg
cmc
nop
mov
sti
imul
sbb
dec
notl
and
push
ja
lods
stos
repz
faddl
adc
mov
insl
xchg
sub
or
ljmp
sub
sbb
adc
mov
xchg
out
dec
jne
lods
mov
sti
cmpsb
mov
call
fnstcw
xlat
mov
jg
push
popf
aaa
scas
mov
adc
fwait
pop
outsl
in
insl
xchg
lods
pop
in
and
cmp
aas
rolb
cs
fildl
gs
outsl
roll
imul
adc
repz
stos
movsl
mov
mov
hlt
loop
inc
dec
inc
imul
out
xor
mov
inc
xchg
cmpsb
repnz
gs
pop
mov
arpl
add
out
fcoms
test
int
dec
aas
hlt
js
lock
xchg
into
fwait
lcall
jmp
mov
stc
sahf
aaa
dec
dec
ja
push
test
sbb
repz
jno
lahf
cmp
imul
xor
fsubs
ret
and
push
setb
and
in
cwtl
inc
imul
sbb
add
sti
pop
cs
cmc
add
mov
and
repnz
adc
mov
push
sbb
sahf
adc
push
loopne
mov
push
shll
ucomiss
clc
inc
add
arpl
lods
push
pop
add
data16
insb
and
or
mov
jo
sbb
jecxz
scas
lods
movsl
add
aas
mov
add
movsl
or
leave
fnstsw
std
into
mov
stos
mov
out
out
mov
xchg
shrl
out
dec
sarl
add
mov
repnz
inc
add
lods
into
adc
jmp
repnz
sub
xchg
dec
push
popa
push
ja
mov
fdivrp
stos
cld
xchg
sub
cmpsb
mov
sub
sbb
cmp
jmp
dec
jle
imul
test
ret
jmp
add
cmpsl
repz
lods
rcll
sbb
mov
mov
jb
lahf
mov
loopne
jbe
sarl
insl
and
cwtl
push
pop
sub
mov
mov
stc
shll
jg
in
sbb
dec
cwtl
ja
test
xchg
into
cmp
testl
mov
inc
jp
shl
fwait
sub
leave
test
stos
mov
mov
ja
aad
hlt
addb
sub
aaa
test
dec
sub
popf
fsubl
fcomps
adc
cli
nop
aad
mov
daa
aad
sub
pop
inc
es
inc
mov
mov
rolb
or
dec
mov
mov
pop
xor
adc
push
adcb
push
inc
dec
mov
packuswb
stos
mov
inc
dec
ret
mov
pop
sbb
insb
repnz
pop
test
out
lahf
aam
lcall
xchg
jne
movsl
cmp
repnz
cli
leave
aam
int3
dec
push
jmp
adc
inc
pop
nop
shl
cmp
rolb
lahf
xor
cmp
sub
or
mov
ficomps
cmp
mov
jmp
mov
push
repz
mov
js
cmc
and
or
mov
outsb
cld
leave
hlt
inc
rol
aam
sub
lret
pop
lods
test
adc
sarl
adc
sub
aad
repnz
sub
rcrb
mov
popa
bound
shrl
gs
sahf
adc
pop
aas
test
je
fucom
pop
test
sbb
loop
fsubr
mov
fsubs
or
insl
in
sarl
and
sbb
mov
out
pop
popf
imul
push
jp
mov
out
or
xor
mov
jno
cld
fs
adc
mov
xchg
or
push
test
aaa
test
fs
or
inc
rorb
movl
push
add
daa
sti
dec
xchg
push
xchg
iret
mov
scas
arpl
in
jbe
or
cmp
lret
neg
xor
xor
repnz
mov
xchg
pop
adc
adc
pop
mov
add
lock
lea
in
sbb
mov
dec
in
adc
addb
sbb
mov
jp
jb
xor
mov
sbb
mov
add
xchg
inc
out
icebp
cmpsb
gs
loop
add
sbb
push
repnz
lea
pop
pusha
ret
orl
xchg
jg
les
rorl
lahf
mov
icebp
daa
push
outsb
xor
test
loop
movl
js
jne
mov
icebp
mov
repz
or
outsl
sub
mov
cmc
pushf
pop
dec
aaa
dec
mov
clc
pushf
mov
fnstenv
ret
loope
xchg
stos
or
iret
jbe
and
leave
std
cmpsb
sub
mov
in
add
lea
and
cmpsb
in
stos
decb
imul
fst
mov
inc
jecxz
or
repnz
cmp
scas
stos
jge
int3
inc
stos
xchg
fcmovbe
mov
pop
mov
sbb
push
xor
cmp
fsubr
stc
mov
jo
sub
mov
add
jmp
pop
sbb
lods
pop
or
inc
mov
and
loopne
or
push
nop
ss
into
mov
inc
repnz
fs
iret
fsts
aad
sbb
loopne
cmp
je
rcrb
out
lds
out
mov
scas
into
cmpsb
sub
xor
arpl
insb
adc
dec
mov
cmp
jo
in
cwtl
jl
loope
nop
dec
pusha
push
jecxz
rcl
out
pusha
ds
lcall
nop
mov
adc
out
sbbb
jo
adc
lea
shrb
fs
pop
pop
xchg
dec
push
pop
sub
test
mulb
nop
loope
rolb
loop
or
cld
xorl
xchg
dec
data16
out
scas
out
rcll
lds
cmpsb
jo
imull
jns
xor
leave
out
test
lods
jecxz
add
cmpb
sub
pusha
jl
movsl
dec
mov
or
jp
jmp
dec
ret
ficoml
and
fstl
ret
cmp
inc
fnstenv
dec
into
daa
dec
xor
xor
fnstsw
push
int
cltd
cmpsb
cwtl
sub
pushf
imul
cld
fsubrs
cmpsl
add
cs
jle
jg
pop
xchg
out
inc
je
mov
sbb
out
add
add
dec
sbb
or
mov
mov
test
js
cmp
push
inc
or
lcall
jp
js
test
outsl
out
std
mov
mov
test
or
pop
xchg
fs
or
lcall
lcall
jne
cmpsl
push
add
mov
pushf
cld
or
out
test
popf
lock
cli
add
pop
repz
mov
xchg
fnstcw
sub
xor
jmp
data16
addr16
loope
adc
insb
loopne
outsb
rclb
shrb
out
cmp
clc
xchg
jns
dec
lea
lret
dec
add
ljmp
mov
push
cmpsl
xor
pop
or
push
or
mov
fbstp
cmpsl
ds
sbbb
test
adc
sbb
mull
mov
negl
ret
cs
in
or
into
cmpsb
xchg
js
jle
jp
mov
and
out
test
xchg
scas
add
ret
dec
in
mov
sbb
bound
test
dec
push
popa
dec
roll
sub
add
subl
mov
adc
sarl
repnz
mov
dec
cmp
dec
cltd
lahf
and
mov
sbbb
push
push
xor
enter
sub
dec
pop
filds
inc
dec
mov
add
rcrl
adc
iret
jle
xchg
popf
mov
pushl
cltd
bound
or
cwtl
test
ljmp
int3
dec
es
lcall
repz
or
push
sbb
pop
repz
push
xchg
jmp
popa
pop
fsubrs
clc
add
mov
adc
xchg
pusha
test
cmp
xchg
mov
dec
mov
lahf
cmp
xchg
and
sub
add
push
push
sahf
jo
xchg
mov
jge
jge
and
and
adc
popa
insl
mov
or
mov
pop
and
xor
pop
cs
jge
xchg
and
shlb
or
lds
dec
jbe
dec
stc
cmp
push
ret
or
cmp
jbe
adc
es
ds
adc
inc
testb
add
jae
adc
jnp
fidivrl
or
sbb
jo
dec
jp
mov
lea
aas
mov
mov
or
or
jns
sbb
rcrl
bound
fndisi(8087
mov
dec
iret
movlps
inc
or
push
imul
cmp
xor
jbe
cmpsb
lea
ljmp
subl
cld
adc
out
test
lret
adc
std
jp
mov
and
cmp
loop
popf
jns
lret
jo
cwtl
cwtl
in
mov
gs
dec
data16
xchg
clc
or
test
je
int
push
ret
mov
xchg
jecxz
adc
scas
repnz
push
lret
addb
out
mov
loope
lahf
repnz
imul
pop
data16
cmp
add
mov
roll
out
mov
hlt
idivl
dec
data16
in
pop
add
mov
popf
jo
xor
inc
test
imul
cmp
add
or
lea
xor
inc
xchg
add
gs
adc
mov
mov
sahf
js
xor
or
jge
cltd
mov
cmc
jecxz
rol
stos
cs
cmp
mov
xor
cmc
cmpsb
jg
jb
ret
dec
pop
dec
pop
call
mov
mov
jns
lret
lds
sahf
fstpl
shrl
repnz
or
ret
dec
xor
dec
int3
loopne
scas
pop
sar
cmp
inc
insl
xchg
adc
repnz
mov
and
insb
mov
jo
je
jo
mov
push
lods
enter
pop
imul
in
fs
or
es
int
push
ds
mov
push
add
inc
cmp
pop
fxam
movsl
loopne
mov
cmp
xchg
fbld
jge
sti
mov
lahf
in
adc
jns
dec
in
mov
or
jmp
mov
cmp
es
mov
inc
scas
cmc
int3
out
pop
adc
pushf
loopne
popf
ljmp
cmp
mov
les
inc
jno
stos
addr16
jle
mov
and
push
mov
sbb
mov
lcall
aam
mov
adc
addl
mov
fists
lret
ljmp
aam
insl
dec
ret
cltd
movsl
xchg
dec
aaa
sarl
mov
enter
xchg
filds
push
mov
jg
xor
nop
mov
adc
cltd
pop
sub
paddusb
xchg
pusha
into
jle
aam
or
or
cs
insb
loop
sbb
push
add
add
adc
inc
cli
push
imulb
push
addl
gs
push
fstps
rol
xchg
ficompl
int
xor
sub
test
dec
jno
xchg
loopne
bound
test
cmp
lahf
xlat
cmp
pop
pop
leave
ret
push
mov
movl
movl
pop
jmp
xor
orl
inc
ret
push
mov
sub
sbb
mov
mov
add
mov
dec
movl
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
mov
xor
push
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
andl
mov
movl
push
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
dec
mov
xorl
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
adcl
push
orl
push
sbbl
push
push
andl
lea
push
notl
push
xorl
jmp
movsb
xchg
sub
out
arpl
xor
bound
pop
bound
es
xor
jne
mov
iret
ret
lock
or
pop
adc
gs
lds
add
sahf
ss
clc
and
pop
out
pop
inc
addl
int3
mov
cmc
mov
inc
imul
and
mov
filds
sarb
inc
in
sub
ret
fwait
scas
arpl
das
inc
adc
push
rcl
sbb
call
inc
jp
mov
roll
call
cwtl
push
outsl
daa
pop
xchg
inc
aaa
and
mov
pop
push
imul
jnp
lock
insb
mov
test
mov
xchg
dec
pop
lock
pop
popf
ljmp
push
aam
dec
jno
pop
ret
xchg
stos
addl
add
loope
pop
or
sbb
shll
mov
bswap
push
out
jns
cmp
mov
dec
mov
mov
stos
push
repnz
pop
je
dec
stos
sbb
or
shlb
insl
pusha
ret
mov
es
xchg
mov
mov
iret
pushf
dec
cltd
test
jg
ss
xchg
cmp
out
and
or
sub
mov
jle
mov
push
xchg
xchg
jge
and
cwtl
push
fnstsw
lods
xor
out
or
in
fldt
nop
inc
je
or
adc
lret
lea
subb
sub
jg
lea
pop
test
sub
insl
push
dec
int
mov
jmp
popa
test
xchg
nop
out
push
sbbl
push
shr
outsl
sub
push
hlt
imul
idiv
sti
lahf
xor
sbb
adc
xor
lahf
pop
daa
aam
in
imul
aas
jmp
cmp
fsubrp
or
scas
bound
cmpl
fimuls
cld
xlat
and
xchg
mov
aaa
push
pop
cmp
ds
push
lods
mov
pop
ret
mov
xor
call
mov
movsb
out
dec
cmp
ret
mov
adc
inc
mov
cwtl
sbb
pop
lahf
cmpsl
roll
push
mov
mov
into
mov
jb
push
ficoms
push
sbb
jae
jg
xchg
mov
dec
pushf
shll
fsubl
int
sub
dec
pushf
aas
sbb
idivl
cmpsl
mov
sub
cmp
cmp
sub
xchg
mov
mov
data16
push
iret
cli
inc
cmp
lret
inc
pop
mov
sbb
insb
sub
jmp
pop
nop
xchg
sbb
and
inc
je
adc
mov
add
jl
cmp
push
and
mov
jmp
or
lahf
xor
insl
sti
out
mov
popa
sub
cmp
mov
push
je
xchg
lcall
sub
push
in
cmp
sahf
cltd
xlat
ja
sub
out
fstpl
inc
mov
fistpll
test
scas
pushl
test
or
inc
cmp
cmp
xchg
dec
rolb
push
jmp
and
rcrb
pop
pop
rcrl
dec
xor
xlat
sub
xlat
mov
loope
mov
mov
test
dec
les
and
sbb
incl
sub
xchg
hlt
test
xor
cmp
test
sbb
stos
or
xor
into
in
mov
push
xchg
and
cmp
fs
push
mov
cs
dec
lcall
jae
fsubr
or
flds
popa
cmpsl
int3
fiadds
jae
xchg
enter
into
xor
push
push
out
jae
into
mov
bound
pop
in
pusha
leave
fsubl
mov
cmp
pop
pop
xchg
dec
jne
xchg
stos
es
insb
push
ret
push
inc
mov
sub
ds
mov
xchg
out
popf
adc
hlt
xchg
dec
mov
add
pop
add
jmp
mov
jno
lods
jle,pn
jle
test
or
divb
pusha
xor
and
sbb
mov
insb
and
pop
popf
mov
and
push
pop
add
pop
dec
or
push
popf
int3
dec
mov
jge
jnp
scas
cmp
adc
lods
and
mov
cltd
cmp
bound
xor
bound
jg
and
test
push
in
aad
pop
das
loopne
in
sbbl
outsl
mov
dec
push
leave
movsb
outsl
or
cmp
mov
sub
sbb
push
repnz
lods
cs
outsl
cmpsl
jmp
fs
daa
mov
dec
icebp
cmp
push
arpl
or
iret
or
fldt
stos
add
pop
inc
sub
orb
sub
sbb
cltd
pop
pop
sub
xchg
pop
out
and
pop
loopne
imul
cmp
ja
sbb
fwait
das
repnz
inc
dec
cli
paddb
push
enter
jmp
mov
and
test
add
fnclex
lea
in
pop
fld
sub
xchg
dec
or
out
cmp
mov
mov
cmp
add
shrb
pop
rorl
adc
and
cld
ja
add
push
jecxz
add
lcall
inc
cmp
sarl
xlat
dec
popf
fcmove
int3
pop
loope
mov
xchg
jno
mov
xchg
insb
mov
push
push
pop
mov
pop
insb
mov
xchg
sub
pop
lea
mov
ret
fdivl
sbb
cmp
icebp
add
pop
jns
sbb
popa
je
cwtl
stc
sub
out
mov
popaw
les
pop
seto
in
ret
mov
imul
hlt
out
jne
mov
shrb
lret
adc
inc
and
sarl
sub
and
push
pop
jb
jb
dec
and
jb
movl
mov
and
push
nop
jg
cld
mov
pop
dec
mov
das
pop
pop
and
les
cmp
fidivrs
jl
enter
adc
or
shl
or
ss
push
repz
cli
hlt
hlt
mov
pushf
adcb
sub
jb
imul
push
clc
mov
aam
inc
lea
addr16
mov
sub
jnp
sbb
pop
jge
adc
jp
scas
push
lods
shrb
insl
jge
or
daa
fcomps
arpl
dec
dec
out
mov
push
add
pop
jnp
bound
shlb
adc
loopne
nop
or
or
cmp
dec
adc
mov
push
jecxz
outsb
jae
into
std
subl
call
adc
pop
stc
mov
aas
sbb
loop
movsl
imul
sahf
imul
in
inc
dec
jae
lret
inc
inc
and
sbb
test
cltd
int
inc
mov
sbb
jle
js
in
dec
aam
pusha
iret
mov
in
cmpsb
cld
pop
sub
mov
or
push
lcall
pusha
clc
mov
pop
pusha
movups
ret
dec
mov
ficoml
mov
gs
jl
cli
out
loop
xor
mull
jp
push
pop
sub
dec
mov
lahf
jl
pop
in
mov
and
aad
pop
clc
push
pop
sbb
enter
xor
ds
aaa
les
xor
jnp
inc
add
dec
stc
loop
fucomi
adc
shrb
fsubrp
stos
stos
es
loop
add
mov
jae
mov
std
cmp
mov
les
jo
les
pushf
and
cmp
mov
sahf
push
mov
mov
xchg
loopne
ja
dec
outsb
xor
insb
add
mov
or
dec
jns
in
fnstsw
fisubl
push
jns
push
jecxz
shl
bound
fcmovnbe
or
mulb
or
inc
fcmovnu
mov
cs
arpl
out
push
push
adcl
in
cwtl
lods
out
pop
sub
adc
out
sub
jge
mov
inc
ret
inc
movsb
jne
cltd
sbb
fimuls
jg
ret
add
push
jb
mov
dec
cmpsl
adc
pop
cmp
pop
es
mov
pop
ss
test
pop
inc
fwait
mov
fsubrp
push
lock
add
adc
cmp
sbb
push
cmp
sbb
nop
or
mov
pop
xor
loop
aad
sbb
fstpl
cmp
loop
sbb
sbb
cs
aas
fisttps
jmp
addr16
rclb
lods
cwtl
fiadds
xor
loop
pop
and
stos
mov
popf
or
sub
jns
out
arpl
mov
mov
fcompl
push
dec
sub
jbe
shr
push
mov
lcall
movsl
lret
sahf
add
adcl
push
xchg
jae
fstps
addr16
data16
push
lds
aam
inc
pop
test
push
scas
pushl
and
outsb
pushf
sub
mov
push
pop
in
mov
pusha
ret
sarl
jge
jnp
je
xor
clc
in
mov
mov
scas
push
lods
loope
jns
push
mov
imul
adc
pop
mov
adcb
fs
sub
enter
and
adcb
mov
mov
jae
lds
sbb
enter
and
xor
jns
cmpsl
jae
push
or
sti
or
pop
mov
dec
pop
mov
lcall
or
xchg
decl
xlat
dec
js
sub
rorb
xor
adc
outsl
or
jecxz
aaa
addr16
lea
mov
notb
cmp
lahf
mov
call
fstpt
cmp
cmpsb
jns
cs
stos
iret
cwtl
lret
aam
xchg
inc
pop
jl
testb
lds
rcl
jns
clc
nop
add
mov
push
loop
xlat
xlat
sbb
loop
push
adc
rclb
fiaddl
popf
or
push
lret
mov
add
or
mov
push
mov
xchg
out
cwtl
jle
pop
ss
lcall
gs
mov
pop
iret
xchg
push
js
nop
inc
xchg
test
cmpsl
cli
cmpsb
out
dec
aad
pusha
xor
popf
fstps
or
push
popa
cmp
dec
jp
cmpsl
cmp
jae
mov
call
aam
pop
in
popf
fbstp
pop
push
cmp
adc
or
pop
lods
xor
loope
pop
xchg
mov
in
jg
xor
jp
icebp
jb
movsl
sbb
popf
movsb
fwait
sub
pop
arpl
xchg
int
push
icebp
cs
push
imul
clc
jns
pop
mov
and
sbb
adc
mov
sbb
out
shl
mov
lds
jp
sarb
shll
lea
repnz
iret
cmpl
stos
mov
cmpl
add
mov
xor
negl
add
insl
jnp
andb
cmc
dec
jmp
inc
loope
mov
jno
xlat
js
push
cmc
pop
mov
fdivl
sub
jp
lods
movsl
push
lahf
add
lcall
cld
push
aas
in
add
adc
mov
dec
movl
sbb
movsl
lahf
cwtl
or
sbb
jmp
sbb
mov
popa
ja
cmpl
insl
or
xchg
and
adc
popa
dec
stos
add
outsb
fadd
mov
repz
and
jae
xlat
outsl
loope
adc
repnz
ret
add
flds
pop
jo
xchg
adc
mov
cmpl
sahf
mov
xchg
or
xor
mov
imul
push
dec
push
cmp
loopne
inc
inc
or
sahf
pop
add
sub
out
sbb
mov
addb
mov
mov
dec
mov
jle
mov
xchg
aas
adc
repnz
std
push
hlt
dec
ss
inc
imulb
jno
mov
cmpsb
ret
aam
dec
pop
stos
xchg
idivb
dec
jne
sbb
adc
sbb
xor
cmp
jo
inc
gs
popa
cmc
mov
sti
gs
outsl
in
shll
cmp
push
inc
xchg
mov
xor
movsl
or
das
shll
add
inc
inc
das
push
lret
pusha
mov
in
idivb
push
sti
test
testl
cmp
jno
push
lea
loope
cmp
test
test
add
cmp
xchg
aaa
cmp
xlat
stc
shlb
test
cwtl
mov
dec
shll
outsb
bnd
jmp
push
lcall
xchg
stc
xor
xchg
insl
and
pop
mov
sti
adc
cmp
ja
ja
jns
scas
insb
cmp
mov
movsb
cmpsb
nop
aam
mov
mov
ja
sbb
cmp
aam
gs
mov
stos
mov
cmp
sbb
out
outsb
aas
aas
loope
add
mov
inc
aam
mov
inc
jnp
repnz
cmc
std
icebp
dec
addr16
test
push
loope
jb
daa
fucompp
jne
hlt
add
test
sub
loope
fistps
lods
ret
scas
jae
xor
clc
sahf
ret
bound
xor
or
addr16
in
sub
sbb
jo
add
mov
xchg
std
cmpsb
pop
es
ja
sbb
xchg
pop
frstor
pop
dec
add
inc
popf
mov
mov
push
adc
or
inc
sub
les
inc
scas
push
inc
lods
insl
mov
adc
mov
add
fsubrs
pop
sub
add
sar
jle
fwait
add
outsl
mov
fdivrs
mov
pop
aad
cwtl
mov
lcall
pop
rolb
mov
cli
clc
addb
shlb
pop
aaa
aas
add
stos
sbb
inc
xlat
sub
aam
ret
add
or
insl
repz
push
fs
mov
cmp
or
xlat
adc
ja
xchg
pusha
inc
add
shll
mov
add
and
mov
and
in
cmpsb
sbb
out
mov
inc
mov
dec
dec
clc
push
cld
fidivrs
inc
dec
out
xor
test
jbe
leave
hlt
mov
imul
dec
subb
clc
cmc
test
mov
in
pop
jne
imul
jp
xchg
inc
jae
push
cld
jge
outsl
or
mov
lods
lret
ss
fnstenv
lcall
xor
shll
int3
mov
cmpsl
idivb
add
push
xor
push
fstl
loopne
push
mov
out
not
pop
push
mov
cmc
fstps
mov
mov
sbb
sub
adc
cld
xor
or
push
mov
jl
scas
sti
cmpl
ss
pop
add
xor
mov
push
sbb
or
xchg
pop
fnsave
mov
push
cmp
ret
xor
xor
inc
jo
lahf
jae
sarb
clc
mov
in
stos
push
cmp
mov
lods
sub
movsl
pop
push
ds
es
and
cmp
mov
iret
out
dec
cmpsb
pop
lret
mov
ds
push
and
inc
jg
insl
rcl
test
std
adc
cmp
mov
cltd
jae
shrb
cmc
fiaddl
push
push
adc
out
and
lea
xor
push
scas
cwtl
xchg
jb
in
in
push
icebp
xchg
out
fnsave
push
dec
adc
xor
test
popa
mov
test
or
dec
dec
add
out
mov
and
jnp
imul
aaa
data16
xchg
mov
or
push
xchg
lret
sbb
push
rcr
clc
dec
test
cmpsb
xchg
cmpsb
fwait
mov
mov
out
popa
push
or
and
xchg
icebp
mov
outsb
mov
sub
clc
fs
ljmp
cmp
xor
xor
push
hlt
jnp
mov
cmp
dec
cmp
add
stc
and
mov
out
sbb
jnp
inc
sbb
and
insl
lcall
clc
and
jno
dec
jecxz
pop
test
jo
and
or
xchg
push
pop
test
aad
cmpsb
ja,pt
into
dec
sub
lret
hlt
sar
sti
mov
add
cli
mov
inc
ret
or
sub
cs
push
in
xor
loopne
es
push
xchg
sub
stos
push
jg
adc
into
mov
sub
sti
sbb
sbb
out
ds
sbb
mov
test
adc
push
daa
xchg
cmp
shrb
xchg
lret
xor
mulps
push
xchg
les
mov
mov
dec
inc
stos
loop
push
jnp
fldcw
add
icebp
das
repnz
rorw
pop
add
adc
mov
add
mov
cmp
cmpsl
dec
icebp
xor
inc
test
pusha
sbb
cmpsb
sbb
mov
mov
or
cmp
inc
push
mov
popa
inc
mov
jbe
test
dec
jbe
loopne
adc
imul
sub
arpl
dec
pop
fcoml
sahf
or
fimull
cs
push
hlt
add
push
out
push
jns
dec
out
imul
pop
add
pop
mov
lods
fidivrs
xor
stos
andb
out
aam
lcall
mov
in
loope
push
mov
pop
in
push
mov
outsl
movswl
cmp
or
leave
sub
pop
inc
ss
sbb
je
cmpsb
into
push
das
rcl
shrb
xor
adc
out
sub
dec
add
out
hlt
mov
jns
je
les
xchg
nop
aas
add
or
jb
lea
inc
pop
dec
jno
or
sub
fs
mov
aad
jb
cmp
jle
inc
pop
push
fdivl
aaa
pop
adc
in
xchg
or
dec
mov
pop
add
cmpl
sub
ds
adc
daa
notb
xor
lret
in
push
cmpsl
jmp
xchg
test
movsl
push
mov
add
or
fbld
gs
into
mov
and
jl
call
notb
or
jl
addr16
adc
cmp
or
dec
ja
xchg
out
jae
out
xchg
lock
popa
fadds
inc
in
xchg
sti
jbe
test
push
dec
dec
and
rolb
out
mov
mov
vmread
insl
mov
adc
cmp
add
mov
out
mov
push
or
cld
loope
xchg
jae
ret
jp
adc
pop
in
int
sbb
movsb
adc
lret
pop
cmp
jne
jns
lahf
sbbl
and
popa
shlb
sti
xor
gs
adc
cmpsl
inc
out
push
ds
pop
movb
je
pushf
pop
xchg
ret
jmp
mov
inc
lea
inc
int
daa
mov
movsb
cwtl
inc
push
mov
leave
jnp
mov
in
pop
popf
out
hlt
imulb
iret
fiaddl
imul
dec
sbb
push
push
xor
pop
jns
mov
arpl
cltd
scas
push
push
sbb
stc
in
mov
cmp
adc
add
add
orb
fstpt
inc
sbbl
aad
push
mov
push
push
mov
cmp
or
call
mov
aaa
jle
lock
jb
movsl
xchg
sub
aaa
xor
bound
sbbb
pop
loope
sti
mov
push
pop
jecxz
add
pop
shlb
sbb
cmp
or
repz
cwtl
in
out
or
aas
mov
push
cmpl
push
rcr
xchg
adc
sbb
inc
cmp
inc
sub
sbb
and
pop
xchg
pop
add
enter
scas
push
sub
or
xor
pop
mov
push
pop
cmpsl
in
cmpl
adc
push
repz
cli
ret
xchg
leave
pop
pop
push
pushf
aaa
sbb
sbb
mov
jne
rcl
mov
popf
outsb
sar
push
call
sub
jno
cwtl
xor
mov
cmp
popa
and
sbb
test
push
in
movsl
xor
gs
sub
push
fwait
aad
push
mov
fcoms
mulb
sar
jl
add
dec
cs
fldl
dec
stos
aas
xchg
pop
and
ret
into
pushf
test
test
push
movsb
aad
dec
dec
dec
cmp
and
repz
fwait
les
es
xchg
jle
pop
data16
xchg
pop
fwait
xlat
cmpsl
int
mov
sarb
mov
dec
inc
loopne
xor
mov
cld
xor
int
push
xchg
push
pop
sbb
dec
cld
lfs
cmp
aam
ja
imul
aad
loop
ja
mov
shr
mov
push
jb
js
pop
mov
jmp
or
cmp
mov
js
ds
adc
aam
push
ret
in
pop
inc
xchg
sub
cmpsb
sbb
xchg
push
pop
add
jmp
das
inc
jg
xchg
daa
inc
das
lock
cld
test
add
add
inc
add
movsb
mov
movsb
xor
and
and
lock
ja
cs
dec
lret
mov
in
addb
ja
pop
xchg
jl
enter
daa
dec
dec
fwait
scas
ret
pushf
out
push
filds
push
mov
rol
repz
cmpsb
cli
lcall
loopne
int
mov
bound
ffreep
lret
cmpsb
mov
rcrb
cmc
jecxz
pop
mov
cwtl
sub
jecxz
jle
push
mov
in
sbb
pop
jnp
enter
mov
jp
mov
test
mov
adcl
adc
mov
dec
gs
out
or
xor
out
out
pop
ljmp
les
or
jecxz
mov
jmp
jl
fdivl
cmpsb
sub
dec
jnp
fwait
xchg
ljmp
mov
stos
mov
sbb
mov
sbb
lahf
fwait
cmpsl
pop
fmull
xchg
xor
mov
lret
xlat
mov
stos
xor
adc
lcall
popa
sahf
push
sahf
fwait
ljmp
push
push
cwtl
sbb
xlat
scas
adc
sub
push
out
mov
aam
mov
cmpsl
js
addl
push
jge
test
je
sbb
outsb
nop
xchg
pushf
push
js
rolb
xor
push
push
sbb
xchg
daa
in
out
lcall
jecxz
push
outsb
fdivrl
mov
lea
jp
loop
in
ds
sahf
add
fisttps
pushf
adc
rorb
stc
push
push
adc
out
or
adc
push
in
pop
divl
hlt
dec
pop
stos
xor
jo
sbb
mov
data16
push
in
adc
push
test
ud1
and
push
into
bswap
sub
lods
and
clc
lahf
adc
movsb
mov
adc
dec
inc
adc
lods
lcall
mov
fwait
bound
cli
and
fcmovbe
jae
insl
out
jecxz
imul
xlat
or
or
push
fisubrs
leave
shrl
push
sbb
cmp
idivb
les
fsubrs
movsb
test
lret
sbb
movsl
push
je
sti
xchg
enter
in
insb
add
aas
in
cmp
push
test
je
push
pushf
jmp
ds
push
fnstenv
pop
sbb
or
jp
push
call
ds
pop
cmp
mov
rcrl
jo
stc
test
xor
mulb
jbe
mov
or
xlat
xchg
push
std
aas
shlb
or
jle
fxch
icebp
lea
out
cmc
loop
push
rcr
fisubrs
inc
add
or
mov
inc
pop
inc
pop
jbe
sbbl
dec
aas
ds
testl
rcl
ret
nop
mov
xorb
cmp
fcmovbe
sub
jge
jge
mov
cmp
sub
in
mov
or
mov
ret
and
roll
arpl
jge
adc
sti
or
jb
jle
shr
subb
or
xchg
fstps
scas
adc
pop
mov
inc
out
pop
inc
xor
sub
call
stc
add
gs
sub
mov
lods
jno
mov
and
jle
and
inc
pop
movb
je
dec
mov
stos
add
cmpsb
or
jle
inc
sbb
push
mov
int3
or
pop
mov
add
fsubs
lock
gs
jge
out
push
sub
mov
pop
pop
jecxz
fbstp
mov
push
sbb
pushf
mov
jne
and
ret
jae
jp
push
sbb
subl
cmpl
imul
sub
loop
add
imul
mov
or
es
cmp
daa
xor
dec
xor
fs
outsl
dec
data16
in
or
shl
xor
nop
sarb
adc
int3
xlat
test
gs
cmp
fstcw
mov
push
push
dec
dec
inc
pop
add
adc
mov
insb
test
rclb
test
xor
sbb
repnz
xor
ds
jne
fs
fsubl
insb
fstpl
popa
adc
in
push
fadds
push
xchg
xor
mov
ret
mov
push
inc
aaa
pusha
inc
pop
inc
and
insl
xor
push
repz
daa
js
or
xorb
jg
sbb
es
and
in
dec
loope
and
add
jge
out
push
fs
xchg
mov
enter
xor
flds
std
mov
cmp
das
sahf
mov
out
out
add
xchg
mov
mov
cmp
adc
test
sbb
jge
dec
mov
inc
mov
insl
xor
inc
jo
inc
repz
inc
and
lcall
stc
das
dec
inc
push
nop
mov
in
lahf
mov
in
in
pop
mov
xchg
int
add
fadds
aad
xchg
int3
dec
and
push
in
in
mov
notb
out
loopne
shrl
xor
out
mov
std
cs
push
mov
mov
cli
and
ret
pop
repz
shlb
cmpsl
ret
mov
bound
push
shl
sbb
jmp
lahf
jbe
mov
jg
push
jo
fwait
sub
sti
loope
jb
sahf
and
inc
cmpb
inc
inc
jb
cmp
cld
mov
outsl
xchg
in
dec
pusha
daa
or
stos
cmpsl
xchg
mov
add
pushf
cmp
lods
das
test
pop
sbb
daa
inc
ret
fistl
enter
xchg
out
cmp
xor
jne
lahf
in
mov
enter
push
mov
mov
call
mov
jle
iret
fs
popf
inc
stos
push
sub
test
movsb
xchg
inc
js
dec
addr16
jmp
sub
fcoms
les
ret
imul
aaa
adc
push
inc
outsb
lds
lahf
dec
cmpsl
xchg
sub
xor
inc
xchg
mov
in
mov
int
jns
leave
arpl
ljmp
lds
movsl
arpl
or
dec
push
mov
stos
push
popf
adc
xchg
stc
jmp
jns
loopne
sarb
lock
push
cmpsl
pop
rcrl
out
and
int3
adc
jbe
cwtl
sub
push
lds
andb
les
lods
jnp
fldl
jge
add
neg
js
call
hlt
sbb
mov
cmc
popa
push
fisttpl
fldenv
mov
in
push
adc
outsl
adc
lcall
cmp
in
add
cltd
scas
call
sbb
rorb
mov
push
aam
inc
push
lcall
inc
sbb
out
mov
fidivrl
cmp
rcpps
pop
ss
leave
push
std
cld
popf
jp
sbb
jge
jns
add
mov
sbb
jb
cmp
mov
ss
repnz
mov
add
shr
mov
sbb
es
push
ja
aaa
mov
cmp
pop
mov
jbe
push
push
bnd
pop
xor
sti
mov
out
jb
sbb
repz
in
or
mov
pop
pop
fdivrs
ljmp
fnstcw
fbld
mov
loopne
or
fadd
mov
sub
jmp
lds
and
adc
bound
jne
add
lods
subl
jg
pop
mov
xor
subb
and
out
xchg
cmp
mov
dec
pop
jmp
push
mov
jne
bound
call
inc
jno
pop
mov
pop
lock
in
fistpll
inc
add
iret
xor
imul
outsl
cmp
test
add
out
jl
xchg
test
js
mov
mov
mov
pop
div
cmpsb
adc
xchg
pop
mov
xorl
int
popa
mov
fcoml
push
fs
loope
test
mull
in
daa
loopne
movsl
mov
fiadds
testb
or
pop
pop
mull
cli
test
nop
mov
xor
mov
inc
fnsave
mov
cmpsl
add
aam
insl
arpl
pop
repnz
data16
lds
arpl
or
dec
jno
xor
xor
push
cmc
push
cld
fwait
nop
subb
mov
test
mov
out
cs
jne
mov
sbb
mov
or
nop
jmp
cld
or
outsb
pop
cmp
cltd
push
lods
ljmp
cmp
add
mov
and
cmp
fildll
xchg
scas
jmp
ret
xor
push
leave
inc
xchg
lods
outsl
pop
or
jns
cld
fsubrs
mov
out
pop
popf
push
stos
jb
mov
lock
mov
jo
lcall
xor
movl
ljmp
std
inc
add
jb
call
mov
bound
subl
sbb
daa
cwtl
psrlq
cmpsb
push
dec
jno
mov
imul
ret
push
jl
fdiv
les
es
add
push
sbb
pcmpgtw
aaa
mov
movsb
cli
adc
push
mov
test
sub
and
rolb
aam
ror
sub
ljmp
leave
xchg
std
adcb
push
jle
outsb
push
sub
push
pop
rcll
pop
push
stc
pop
xchg
jbe
mov
icebp
or
inc
arpl
xor
inc
mov
ja
push
std
push
add
sahf
xor
lock
mov
lods
fptan
adc
xlat
je
cmp
orb
shrl
xchg
pop
out
es
jmp
lods
ljmp
lret
xor
dec
decl
aas
int3
dec
and
in
cltd
push
call
jp
das
mov
sbb
imul
mov
cmc
or
test
rolb
gs
xor
lahf
mov
mov
mov
jbe
cmpsl
fisttpll
jp
mov
inc
push
and
mov
add
cmp
test
push
outsb
xchg
rolb
fwait
hlt
push
mov
into
pop
sbb
das
lea
in
mov
mov
sub
loope
call
push
orl
call
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
xor
xor
movl
or
movl
mov
or
mov
xor
or
mov
or
xor
not
mov
orl
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
xor
xor
mov
sbb
mov
test
je
and
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
mov
adc
mov
imul
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
add
xchg
or
mov
movzbl
sbb
sub
mov
sbbl
xor
and
add
mov
movl
mov
add
xor
addl
add
mov
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
movzwl
adc
mov
xor
add
add
mov
or
mov
inc
xor
mov
mov
adc
add
mov
subl
sub
lea
xorl
xor
xor
movl
cmp
movl
je
sub
mov
andl
xor
addl
add
movl
cmp
movl
jne
pushl
call
mov
mov
xor
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
push
pushl
push
call
jmp
or
mov
add
movl
cmp
movl
je
subl
pushl
andl
pushl
decl
call
orl
mov
mov
sbbl
mov
xor
addl
add
movl
cmp
je
mov
mov
mov
xor
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
mov
add
sub
mov
mov
inc
mov
add
mov
xor
mov
or
mov
orl
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
fidivl
jb
xor
ss
add
lret
bound
pop
bound
or
push
push
jno
nop
dec
popa
scas
stos
daa
xchg
movsl
jl
icebp
pop
sarb
jmp
add
iret
sbb
rorl
mov
imul
sbb
add
ss
mov
xlat
add
xchg
jns
sub
pop
xlat
mov
jb
imul
cmp
xor
aaa
gs
inc
outsl
cmp
imul
mov
pop
sbb
jmp
dec
call
adc
leave
flds
or
popa
and
mov
mov
pop
push
aam
testl
add
stos
mov
push
gs
sub
test
ljmp
and
dec
mov
dec
fldz
jae
bound
fbld
xchg
pop
sbb
cmpsl
addr16
scas
pushf
pop
xor
daa
ds
fwait
xchg
inc
int3
ja
mov
aaa
aad
imul
cltd
xor
mov
lret
inc
loopne
subl
push
cmc
jne
ret
pushf
js
outsl
stos
pop
inc
sbb
jecxz
cmp
lods
or
lret
ror
sub
js
pop
lods
pop
mov
pop
dec
rolb
leave
loope
pop
jne
cmp
cmp
in
gs
add
push
out
jae
dec
xor
push
int3
push
or
popf
mov
dec
mov
outsl
pop
dec
cli
mov
inc
xchg
jg
sub
cmp
daa
aaa
mov
ds
mov
sarl
ss
dec
adc
fisubs
lods
sti
jg
sub
fnstsw
push
cmp
mov
nop
fcomip
xchg
cmpb
cmc
ja
scas
push
sti
nop
cltd
sbb
xlat
sub
fs
test
insl
sub
dec
cltd
orb
inc
aas
test
jnp
ficomps
push
add
mov
push
cmp
jns
adc
iret
mov
ret
popf
call
adcl
idivl
std
ljmp
push
test
mov
fadds
fildll
cmp
jno
out
and
cmp
xlat
mov
aad
cmp
pop
jmp
shll
dec
loope
xor
add
mov
loop
cld
loop
es
pusha
rolb
enter
mov
xor
or
push
and
fst
lds
adc
repz
ret
int3
mov
mov
inc
xor
sub
ficompl
rcrl
addr16
ror
fmuls
xchg
dec
loop
cld
jbe
hlt
out
std
pop
adc
mov
imulb
flds
ret
pop
in
pop
or
mov
loopne
jae
shl
pop
lea
cmp
bound
test
fsubl
push
flds
sarl
and
inc
aam
aam
sti
pop
test
mov
shrb
mov
jno
in
cmp
notb
clc
xor
jg
loop
adc
in
mov
push
inc
aas
push
sbb
lock
cwtl
scas
ljmp
mov
dec
xchg
xchg
push
mov
inc
mov
push
push
in
mov
popf
mov
mov
pop
ss
cmpsb
jle
cmp
pop
orl
and
cmpsb
add
dec
loopne
xorb
lret
out
aam
mov
out
ret
xor
mov
adc
mov
loopne
mov
push
mov
cmp
add
push
adc
pop
mov
jo
fstpt
loopne
enter
stc
fnstsw
movsl
dec
xlat
aam
das
xchg
fsubp
lahf
push
sub
popl
mov
mov
mov
pop
and
lock
test
add
addb
pusha
mov
adc
xchg
jbe
scas
lret
sub
xor
out
and
ss
jl
popf
jg
in
jg
popf
cmp
mov
stos
enter
or
mov
inc
sbb
hlt
enter
int3
arpl
in
pop
bound
movsl
pop
jb
loope
pop
outsb
js
shll
lret
icebp
stos
popa
loopne
or
call
lods
mov
jmp
inc
cwtl
xchg
inc
imul
addr16
movsb
scas
rcrl
loop
inc
mov
ret
xchg
stos
pop
push
in
movsl
inc
jecxz
or
jb
push
outsb
mov
inc
jne
ret
in
popf
jne
sub
pcmpgtb
aaa
imul
mov
jg
int
std
mov
xchg
xchg
dec
loopne
cmp
and
sbb
loop
xchg
sbb
fidivl
push
movsl
inc
mov
scas
mov
fs
mov
fstpl
mov
gs
fisubrl
add
aad
dec
scas
push
ss
add
and
mov
add
ret
or
stos
test
dec
dec
jbe
jge
push
stos
sub
js
loope
incl
mov
loop
dec
mov
orl
in
inc
sbb
push
cmp
mov
ja
nop
xchg
or
fdivs
cmpb
cld
sub
sti
cs
cmpsl
mov
enter
outsl
nop
xchg
test
dec
jecxz
sbb
fcmovnu
xor
imul
out
lcall
pop
mov
call
mov
jnp
int3
mov
loop
subb
test
mov
jo
popa
movb
cmp
roll
scas
pop
lret
inc
cltd
xchg
mov
out
inc
xor
lock
lahf
daa
push
pop
mov
fisttpl
push
mov
jge
xor
jp
hlt
jnp
in
mov
dec
sbb
mov
adc
mov
inc
cmp
mov
xchg
and
mov
push
fisubrs
lret
pusha
into
mov
popf
mov
mov
sbb
test
fildll
add
push
aas
loopne
cmpsb
ljmp
sbb
cli
adc
roll
test
dec
cmp
fnstcw
mov
jbe
in
inc
jecxz
sbb
push
mov
jmp
test
inc
andb
jns
flds
rcll
xor
xorb
bnd
shl
push
inc
movsl
out
or
icebp
jo
popa
loop
sbb
xchg
xor
adc
sahf
stos
fs
iret
adc
or
mov
daa
cli
inc
imul
ret
push
lds
sub
sub
xor
add
out
and
shr
imul
pop
das
testb
arpl
testl
cmp
out
por
adc
faddp
xor
sbb
add
test
lds
adc
in
mov
shlb
negl
popa
xchg
dec
push
lods
cltd
std
sti
rcr
aaa
das
push
push
popa
pop
mov
push
loopew
add
lahf
vandnps
pop
or
pop
cmpsb
pop
and
jl
pop
jns
jmp
sbb
daa
pushf
lcall
push
or
mov
scas
jp
xor
mov
inc
daa
popf
mov
in
xor
pop
jge
addr16
pop
jp
mov
adc
lret
imul
in
sar
and
dec
add
mov
mov
sub
jge
lea
jp
cmp
adc
sbb
cld
or
mov
adc
sub
cltd
mov
push
sbbb
sub
jg
xor
jns
out
jne
or
jl
mov
xlat
outsl
pop
jecxz
sarb
gs
mov
cmpsb
in
arpl
jb
sub
addb
dec
mov
pop
shlb
imul
cltd
fs
ja
stos
jns
mov
sahf
dec
in
inc
insl
arpl
fs
xor
cltd
int3
pushf
dec
push
test
mov
adc
fsubrs
pop
xorb
clc
pusha
dec
jnp
lcall
cmp
lcall
push
dec
cmp
xor
fsts
mov
inc
mov
sub
hlt
push
xchg
mov
les
mov
movsb
ret
sbb
xchg
cmpl
mov
or
jl
mov
ds
xchg
adc
lret
cli
add
mov
pop
arpl
adc
xchg
lock
or
sub
repz
cmp
leave
sbbl
dec
mov
push
inc
arpl
sbb
fcoml
adc
into
sub
rclb
insl
add
adc
inc
jle
xchg
cmp
out
imul
enter
fcomps
add
mov
je
cmp
aas
xor
ljmp
in
mov
xor
fnsave
fs
cmpxchg
add
sbb
sub
mov
xchg
inc
call
fcomps
mov
or
cs
or
sbb
xor
xchg
jno
mov
ret
and
imul
call
sbb
dec
push
enter
push
push
jg
scas
xor
faddl
test
sub
jns
sub
inc
fidivrl
int3
xchg
mov
in
out
mov
pop
mov
sub
sub
cld
sti
jb
lcall
pusha
cmc
icebp
adc
sbb
pop
mov
sbb
and
xchg
cld
or
sub
shlb
pop
out
movsl
aad
popf
pop
mov
lods
inc
lcall
mov
in
or
pop
dec
jge
es
orb
les
sbb
lahf
sub
notb
imul
and
pop
inc
scas
cld
dec
dec
or
mov
mov
andb
xor
les
loope
inc
sar
sbb
lret
pop
mov
jo
sbbl
mov
push
mov
fdivrl
jbe
test
insl
mov
ret
jmp
arpl
push
cmp
xchg
stc
cmpsl
ss
mov
or
cmpsl
pop
pop
pop
mov
jo
or
xchg
sub
jl
cmc
mov
lahf
test
loopne
and
sub
das
loope
mov
xor
jb
pop
cli
cmpsl
dec
inc
xchg
cld
xchg
inc
out
aaa
and
jl
popa
arpl
out
loopne
push
nop
das
sub
inc
push
and
cltd
mov
add
arpl
js
lret
test
cmp
mov
sahf
inc
cmp
jo
xchg
jp
push
mov
jo
push
cmp
decl
ljmp
mov
ds
and
jne
in
jle
mov
out
scas
ss
adc
push
xacquire
xchg
push
leave
xor
call
add
sub
jg
inc
cmc
bound
clc
jmp
xor
sti
mov
nop
movsl
fwait
mov
lret
hlt
int
int
sbb
dec
push
test
xchg
pop
into
out
or
scas
loope
xlat
jecxz
pop
insb
cli
mov
cmpsb
mov
mov
xchg
jns
ljmp
mov
xchg
adcl
mov
xor
icebp
mov
scas
popa
adc
push
sbb
lret
in
adc
push
cli
ret
jp
jne
and
arpl
xlat
mov
in
mov
das
add
add
popa
shlb
push
das
jp
loope
sub
push
lock
or
adc
int
and
out
lret
lods
imul
jno
in
aaa
incb
add
test
xchg
call
ss
push
out
mov
xchg
add
pop
sbb
aaa
sub
icebp
sahf
jno
mov
mov
jno
push
mov
pop
hlt
test
ds
lea
loopne
xor
dec
cmp
inc
push
stos
cmpl
popa
popf
out
mov
cmpl
push
adc
xchg
jns
jg
mov
jmp
cmp
pushf
stc
leave
bound
lret
xor
stos
iret
fcomi
call
out
jmp
or
hlt
notl
mov
mov
adc
mov
cmpsl
jo
dec
sbb
int
jnp
fidivs
dec
xchg
fisttpll
dec
and
lcall
adc
sbb
push
xor
pusha
adc
mov
mov
or
data16
stc
pop
arpl
sub
mov
mov
lret
sbb
addr16
mov
out
ret
bound
lcall
push
adc
push
cmp
inc
nopl
enter
aad
daa
mov
aad
dec
push
mov
push
or
xchg
mov
add
push
jae
clc
fcoml
cmc
stc
xchg
push
ficoml
push
jno
sti
pop
dec
push
shr
daa
sub
je
movsb
aaa
dec
mov
mov
lock
and
ret
sub
mov
fmul
sbb
test
iret
outsb
ret
movsl
or
pop
push
rclb
dec
hlt
inc
mov
dec
xchg
fs
popf
push
adcb
insl
jmp
mov
repz
ret
cmp
adc
out
dec
and
and
repz
xor
and
cmc
negl
aas
inc
add
push
xor
sbb
mov
shrb
subl
les
mov
fwait
pop
dec
pop
int3
lret
fldenv
push
lea
push
aad
movsl
fisubrs
push
lock
cmp
xor
add
insl
mov
mov
iret
lods
insb
test
dec
jge
push
cmp
jae
shll
stos
add
push
jp
mov
aaa
inc
xor
and
push
loopne
sbb
in
push
mov
pusha
ss
cld
call
cmp
nop
add
loop
lea
push
sub
scas
nop
sahf
fnstcw
sbb
cwtl
lcall
fs
in
xor
or
popf
dec
and
add
lods
imul
mov
mov
fmuls
or
js
fst
jmp
pop
dec
in
inc
scas
xchg
mov
or
rclb
mov
dec
or
hlt
add
inc
mov
leave
jno
mov
scas
stos
add
sub
loopne
insl
lret
mov
fists
mov
pushf
lret
jmp
and
popf
inc
rcrl
dec
fs
xchg
clc
pop
cmpsb
insb
ret
in
cmp
cmp
lds
cltd
xchg
stos
loopne
push
daa
inc
mov
std
enter
fistl
push
cmpsl
scas
cmc
loop
xor
iret
call
popf
xrelease
testl
ljmp
lock
clc
or
aas
scas
mov
mov
or
cli
stos
aam
pop
jno
enter
sarl
adc
popf
xchg
in
and
adc
jmp
mov
adc
and
cmp
mov
inc
movsb
dec
or
or
lock
cmp
in
cmp
stos
imul
push
cmp
out
js
jns,pt
icebp
dec
dec
or
jno
in
ds
mov
dec
xchg
push
outsb
push
or
fs
and
jb
movsb
fidivrs
sbb
lret
movsl
and
test
inc
je
jns
sbb
int
and
jl
pop
lods
mov
push
mov
gs
push
fisttps
jns
cmpb
enter
lret
sub
gs
pop
pusha
imul
bound
jmp
pop
sub
xor
decb
sbb
mov
cs
fsub
adc
push
subb
sub
lret
testl
pop
push
lea
aaa
xor
add
jl
jae
push
cmp
sub
out
mov
sub
cmp
inc
testl
inc
sub
sbb
test
sbb
push
ja
int3
sub
out
adc
shrb
cli
mov
bound
mov
sbb
mov
push
sti
dec
insl
and
orb
inc
mov
sub
or
mov
out
mov
inc
or
les
cwtl
mov
in
imul
int
loopne
or
adc
adc
loopne
pop
adc
cmp
je
dec
xchg
testl
push
ja
and
pop
lock
mov
and
daa
leave
dec
loope
test
mov
nop
mov
fcoms
ss
enter
addr16
shlb
push
notb
jne
push
push
add
mov
pop
aad
pop
loop
in
fs
lahf
push
cli
xor
mov
jle
xor
cmp
das
repnz
sbb
and
mov
out
lea
mov
enter
add
ljmp
sbb
push
gs
pop
add
xor
rcr
stos
lret
mov
adc
sbb
in
mov
push
movsb
lods
jmp
mov
cmp
shlb
imul
jecxz
cmp
je
lcall
push
lea
fwait
arpl
sbb
sbb
pop
jno
inc
cwtl
call
dec
inc
mov
sub
add
jb
jo
out
push
aas
mov
jae
mov
stos
imulb
mov
xor
negl
cld
addr16
sbb
out
arpl
ret
ss
adc
ret
call
sbb
dec
movsl
sbb
fimull
filds
lds
jns
and
andl
sbb
aad
ror
repz
in
jo
mov
and
pop
aaa
dec
lock
aas
das
fs
les
punpcklwd
out
or
jge
cld
dec
in
fcmovne
ret
xor
jns
aam
enter
xor
jb
sbb
add
cmp
orl
dec
stos
cltd
pop
mov
popf
fdivs
xchg
pushf
cs
ds
out
daa
dec
dec
jo
pusha
mov
and
lods
and
cltd
fs
xchg
xor
adc
sbb
pushf
push
push
inc
popa
jne
pop
and
cmp
mov
inc
ficoms
cmp
out
adc
or
data16
mov
fldl
or
cmpb
dec
gs
inc
cwtl
insb
fldlg2
jge
decb
mov
mov
jo
test
out
pop
fwait
int
test
je
sub
movsl
fwait
aaa
out
ja
in
push
and
cmpsb
add
sbb
jo
jecxz
testl
push
inc
stc
ja
aam
sbb
xchg
jns
lahf
or
add
and
mov
insl
sub
pop
sahf
lret
pusha
mov
pop
add
mov
int
push
imul
xor
mov
and
ret
rorb
clc
pop
enter
movsb
lods
lds
dec
popa
movsb
mov
dec
push
mov
jl
ret
jae
and
aad
pushf
cmp
imul
cmpsl
mov
testl
adc
xchg
or
mov
clc
pop
or
jmp
fdivs
pop
pushf
cli
xchg
cmp
xor
jl
aam
mov
adc
ja
aas
sub
mov
xchg
fwait
pop
movsb
pop
jnp
push
mov
adc
mov
ret
dec
stc
ret
scas
in
cmp
push
ficoml
hlt
mov
out
push
dec
stos
fs
pminsw
xchg
fnstenv
jnp
in
stos
pop
mov
clc
nop
mov
jg
rclb
xlat
mov
jecxz
xor
inc
lahf
xchg
mov
repz
jl
jp
and
movsl
add
mov
loop
push
shrl
xorb
mov
xchg
ja
or
enter
push
xorl
sub
sub
xor
and
sub
daa
clc
xor
sbb
xchg
dec
jmp
inc
inc
jmp
adcl
dec
lock
int
test
dec
adcl
dec
js
adc
mov
pushf
xchg
call
xchg
inc
pop
mov
mov
mov
xor
out
mov
cmpb
fadds
rorb
push
or
pop
or
push
jmp
inc
inc
cmc
dec
dec
mov
push
xor
jmp
cmp
pop
cltd
mov
in
loope
sub
pop
lock
das
push
xor
add
jmp
shr
lds
cmp
icebp
sbb
inc
push
gs
dec
notl
add
pop
add
imul
mov
mov
and
or
int
jbe
enter
xchg
scas
xchg
push
fs
mov
or
int3
outsl
jge
jmp
ds
clc
xchg
mov
leave
fiaddl
les
and
shll
mov
adc
fsubrl
sbb
cmc
cmp
jge
punpckhbw
xchg
int
dec
lahf
sbb
dec
add
xchg
pop
xor
sub
mov
cmp
inc
mov
pop
ret
imul
out
bound
je
das
sub
mov
lods
fisttps
dec
xchg
pusha
add
and
xor
adc
pop
scas
adc
jmp
lods
push
ret
mov
ret
add
jl
inc
mov
push
mov
sbb
clc
mov
dec
inc
test
xchg
inc
push
daa
pop
sbb
mov
jmp
cld
add
sti
or
divl
icebp
xchg
xchg
in
fistpl
pop
cmp
mov
jg
outsb
cmp
mov
jle
push
add
and
mov
xchg
mov
adc
stc
outsl
jo
push
js
inc
ret
stos
inc
xor
push
cmpsb
cmpsb
notl
ja
mov
cmp
insb
mov
or
inc
cmp
mov
lods
cmpsb
mov
inc
orl
paddusw
test
push
hlt
or
cmp
inc
arpl
lcall
jmp
inc
lahf
iret
ficoml
stc
jb
adc
pop
pop
outsb
xchg
shll
adc
in
xor
psrad
adc
test
insb
sub
cmpsb
cltd
xchg
xor
jbe
xor
sub
mov
xchg
pop
pop
push
jg
ret
fwait
dec
shll
mov
mov
insb
inc
inc
mov
fstps
pop
out
sub
xchg
fmulp
aaa
daa
mov
dec
int
xchg
aam
xor
imulb
icebp
mov
in
scas
lds
mov
sub
fdivrp
jae,pn
subb
lock
std
out
mull
arpl
xchg
mov
pop
repnz
mov
les
movsb
jl
in
mov
shll
push
aaa
pop
es
or
adc
push
pop
mov
dec
lods
and
negb
dec
ss
xchg
lods
cmpsb
mov
cmp
xchg
push
int3
or
mov
sarl
dec
popa
icebp
je
cs
popa
xorl
lods
dec
xchg
out
jl
ss
lret
xchg
dec
xchg
imul
roll
adc
xchg
add
sub
out
test
jge
lods
les
mov
in
imull
pcmpeqd
clc
push
aam
inc
xor
in
frstor
in
mov
pop
inc
ret
pop
cwtl
sbb
cwtl
fwait
icebp
daa
into
sbb
out
cmp
mov
sti
dec
xchg
outsb
mov
imul
out
in
jae
mov
pop
arpl
into
mov
or
jp
and
es
hlt
mov
sub
aas
movsb
jb
adc
xchg
cwtl
and
in
and
clc
popf
sti
lods
nop
mulb
adc
mov
lcall
ror
stc
ret
add
sbb
lock
fdivp
cmpsb
jno
mov
sub
insb
xor
lcall
push
enter
adc
sbb
push
sub
mov
mov
xor
pushf
mov
and
xor
jno
test
mov
test
and
lret
lods
pop
in
cli
sub
inc
or
jecxz
cld
cmp
push
jg
outsl
arpl
ja
lcall
push
aad
cmc
sbb
xorl
fdivrl
ret
clc
stos
adc
push
adc
push
dec
in
and
xor
dec
movsl
notl
movsb
cmpl
nop
loopne
ss
pop
and
xchg
mov
mov
push
or
and
mov
pop
mov
lret
jl
and
lea
push
or
or
cli
addb
xchg
test
aad
test
cmp
cwtl
enter
sahf
push
out
mov
jge
loope
imul
add
popf
xor
push
mov
mov
adc
mov
movb
sub
and
cmpsb
out
mov
rcrb
mov
mov
mov
test
out
push
or
or
jae
mov
or
or
mov
dec
loopne
xor
pop
lea
dec
test
xchg
loop
push
mov
outsl
int
cld
adcb
mov
stos
push
xchg
mov
aaa
jbe
je
push
jnp
cmc
cmp
test
addl
pusha
jnp
mov
mov
mov
jl
jbe
or
pop
mov
inc
or
and
cmpsb
pop
je
jb
xor
adc
fisttps
fcompl
xor
movl
sbb
frstor
jp
pop
lret
movsb
mov
push
jnp
rolb
js
and
pop
adc
in
jnp
mov
imul
mov
ret
mov
cmp
mov
dec
or
andl
push
push
jno
fldenv
jo
pusha
adc
sub
inc
xchg
mov
and
in
pusha
pop
lock
out
inc
xor
pop
xchg
pop
cmp
insb
ljmp
andl
pop
sbb
inc
les
mov
int3
cmpsb
ror
mov
sarb
lcall
inc
outsl
call
mov
aam
icebp
inc
out
sub
jne
mov
in
or
jne
aam
rorb
jge
xor
arpl
das
pop
insb
leave
in
outsb
fsubrs
ret
flds
push
xchg
push
mov
fld
push
cmp
sahf
imul
sbb
lahf
repz
push
jle
pushl
adc
inc
ret
dec
jne
jno
fisubl
sbb
sahf
ja
sub
pop
jle
or
mov
jne
jmp
fcomps
mov
or
xchg
fwait
and
rcl
sbb
pop
push
jne
lods
adc
push
mov
push
cmp
xor
pop
add
mov
sbb
jnp
mov
mov
fisubrl
arpl
mov
cmp
mov
push
nop/reserved
hlt
push
lcall
pop
dec
xor
int
repz
scas
imul
loopne
in
mov
pop
cmp
mov
imul
xchg
mov
fldcw
or
inc
test
loope
xor
mov
lea
push
mov
pop
repnz
xchg
pop
add
dec
scas
mov
cltd
in
ja
and
call
lea
fnop
adc
push
out
mov
test
mov
js
jg
and
aam
push
mov
xor
sub
jecxz
test
mov
sbbl
xor
ds
call
push
dec
aad
add
orl
push
xchg
sub
iret
mov
loope
mov
lock
mov
mov
or
fistpll
sar
lods
fsubrl
sbb
push
fptan
jg
pusha
and
xor
scas
xor
pushf
jno
test
ja
pop
movsb
iret
in
sub
mov
sub
xchg
xorb
mov
dec
mov
mov
xor
ja
into
scas
ja
arpl
mov
popa
ficompl
push
xor
lea
pop
sbb
add
sub
push
subb
mov
outsl
dec
jecxz
mov
jg
in
stos
pop
out
adc
mov
xchg
dec
dec
in
push
sub
xlat
or
fidivs
jmp
movsl
js
loope
xor
sub
xor
push
or
clc
xor
js
cmpsb
inc
sahf
jle
pop
adc
bound
pop
fmuls
adc
rolb
xor
adc
add
and
add
ror
push
lds
jmp
ss
cpuid
inc
lcall
fistpl
jl
add
push
mov
xchg
into
fdivrl
push
mov
shrl
xchg
inc
dec
jo
data16
orb
dec
test
clc
or
xchg
push
cmpsl
add
cmp
xor
xchg
jg
ja
add
scas
enter
push
dec
inc
rorb
cltd
pop
scas
add
out
sbb
mov
fwait
push
rsm
insb
ljmp
out
jns
jb
adc
xchg
fistpll
gs
inc
rcr
sbb
push
dec
stos
daa
inc
push
pop
push
les
aam
aaa
sarl
or
mov
mov
daa
enter
fs
jno
outsl
scas
jo
xchg
sahf
aad
add
fsubrl
mov
jo
icebp
and
out
aaa
clc
call
push
ds
inc
inc
out
out
xchg
ret
lds
cld
jno
idivl
mov
push
xor
adc
pusha
cmp
or
ret
xchg
cltd
in
loopne
lcall
xchg
sysret
or
lods
fcoml
xchg
xchg
cli
jp
mov
scas
jl
cmp
sbb
jge
mov
or
shrb
aad
ret
cmp
aam
fsub
mov
sti
int
sub
loopne
es
loope
dec
push
aas
jb
lret
inc
ret
subb
dec
mov
pop
xor
pop
out
jae
mov
mov
loop
mov
adc
push
xor
insb
and
sub
out
dec
clc
mov
push
cmp
jmp
mov
jbe
and
mov
outsb
and
sbbb
rolb
out
int3
or
mov
jns
out
sbb
in
sbb
jl
stos
jp
cltd
sub
roll
mov
jecxz
pushf
adc
iret
pop
subl
sbb
xchg
cltd
mov
cld
add
push
mov
cmp
xor
lcall
sub
jne
push
ret
daa
sub
sahf
pop
stos
pop
aam
and
jle
je
ljmp
sub
in
mov
arpl
test
insl
js
mov
and
sub
xor
mov
mov
ljmp
push
xor
add
jo
jbe
imul
out
push
ds
adc
mov
scas
xchg
imull
les
les
adc
adcb
sti
das
add
stos
jnp
dec
xor
pop
rclb
pop
push
cmpsb
cmpsb
and
aam
pop
aam
jne
jnp
je
lret
cs
out
cld
ror
cmp
add
mov
int3
xlat
xchg
push
mov
fldl
sub
cltd
enter
xchg
jp
lahf
dec
and
sbb
push
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
jmp
jl
pop
call
andb
out
mov
pop
bound
subb
cmpsl
sbb
dec
pop
jp
clc
es
test
push
call
aaa
dec
in
push
test
cmp
out
leave
ret
test
or
test
loope
xchg
lea
lods
xchg
adc
pop
negb
adc
ficompl
incl
mov
mov
pop
lret
mov
outsl
mov
xchg
cs
xchg
and
xchg
lea
ljmp
inc
lret
push
sbb
cs
inc
shll
inc
dec
inc
loop,pt
mov
add
mov
inc
jmp
int3
lea
call
adc
inc
iret
in
ret
adc
add
loope
or
inc
iret
nop
mov
cmp
jae
movsl
and
jb
jecxz
jg
daa
aam
mov
jle
cmp
push
dec
aas
loopne
adc
lods
pop
dec
hlt
aas
jle
pusha
push
adc
inc
mov
pushf
push
adc
jp
mov
xchg
add
rolb
lahf
out
clc
aas
xchg
testl
dec
lahf
push
nop
loope
divb
mov
lods
sahf
dec
cmc
scas
cmc
imul
out
fs
lahf
imulb
sbb
pop
add
inc
pop
pusha
xor
inc
pop
cmp
aas
lcall
mov
fdivr
sbb
mov
aaa
cld
pop
push
adc
sub
push
sbb
pop
mov
hlt
inc
dec
lods
and
cld
fisttpll
push
aad
inc
mov
sub
sbb
btr
dec
out
add
cmp
mov
fcomps
popa
and
dec
mov
push
in
js
fcoms
frstor
sub
adc
ret
fwait
ljmp
fcmovnu
xchg
jae
lds
mov
test
repz
aam
imul
mov
scas
push
fisttpll
add
lcall
mov
mov
cmp
xor
ljmp
xchg
sbb
mov
inc
rsqrtps
sub
xor
adc
inc
outsb
imul
loope
jb
ror
imul
and
add
aaa
es
mov
lods
add
and
mov
mov
push
sub
popl
outsl
jns
xchg
lods
and
data16
mov
aaa
mov
xor
inc
bound
out
sbb
pop
shrb
xchg
inc
cs
sub
sub
cmp
stos
ss
sbb
pop
and
hlt
pop
pop
push
rcrl
aad
popf
mov
sub
ljmp
ret
shrl
adc
mov
or
cs
ret
push
call
es
icebp
rorl
xor
add
int
mov
mov
or
xchg
es
in
addr16
insb
aas
jmp
cmp
aas
fists
cmp
nop
mov
sbb
mov
xlat
shrb
dec
fcomps
inc
lret
into
insb
and
xchg
and
push
movsl
sub
lock
fildl
lock
fidivs
xchg
cmp
test
out
pop
daa
cmpsb
lcall
push
pop
data16
out
or
fidivrs
mov
jmp
sub
int
loop
lods
xchg
push
cltd
insl
mov
inc
add
in
sbb
in
adc
jbe
shrl
add
js
cmpsl
add
sti
dec
dec
mov
aaa
dec
or
dec
mov
les
sub
mov
insl
xor
push
fstl
inc
and
lahf
stc
sbb
mov
and
mov
add
jle
or
push
hlt
add
mov
xchg
add
dec
pusha
loop
jmp
jecxz
sub
inc
xchg
pop
imul
outsl
adcb
cmp
xchg
xorl
mov
jne
lock
and
vphaddwq
sbb
adc
sub
adc
mov
mov
push
fnstsw
ljmp
enter
stos
push
sbb
cltd
push
in
test
push
cmp
aad
add
negb
jp
inc
push
dec
outsl
scas
sbb
add
or
cmp
mov
mov
fwait
jnp
lea
dec
mov
mov
xlat
jb
jb
ljmp
pop
les
movsb
loope
sbb
call
inc
sti
rol
test
jecxz
push
dec
xchg
mov
jnp
mov
testb
xchg
movsl
pushf
xor
shrl
pop
jl
icebp
pushf
dec
jnp
out
add
lret
cmp
mov
loop
push
cmp
xor
jl
pusha
outsl
jmp
roll
adc
rolb
ja
or
push
cmp
repnz
sub
jns
je
fwait
std
lds
pushf
push
test
fs
dec
jo
icebp
cld
nop
xlat
mov
fldt
jecxz
mov
mov
hlt
rolb
dec
lret
jmp
mov
pop
push
jnp
std
dec
or
iret
std
ret
fwait
out
mov
xchg
xlat
mov
nop
popa
or
dec
cmpsb
xor
dec
mov
dec
fwait
or
pop
fs
aad
lcall
icebp
std
lods
lods
sub
cs
pop
jge
push
add
into
addr16
fdivrp
and
outsl
cmc
mov
xchg
ret
mov
push
inc
out
xchg
dec
jbe
push
test
out
aam
inc
into
push
jle
int3
xchg
imul
jecxz
inc
cmp
stos
inc
bound
adc
cmp
pop
aas
adc
and
pusha
and
into
lret
outsl
enter
leave
int
sub
mov
xchg
into
jno
in
push
adc
or
mov
xchg
inc
push
mov
jno
xchg
lret
jo
push
cmp
and
or
adc
push
jns
add
sbb
xchg
or
leave
notb
fs
sbb
cli
mov
xchg
or
stos
out
dec
mov
add
mov
inc
insl
xor
adc
lods
mov
stc
sub
shl
cmp
fcomps
cltd
outsl
pop
jl
jmp
popf
mov
inc
sbb
icebp
lret
shlb
push
sahf
int3
push
or
lds
add
push
pop
inc
xor
aas
mov
pop
and
out
dec
pop
inc
jl
lods
inc
pop
in
sub
xchg
movsl
add
jl
aad
int
leave
pop
orl
outsl
add
xor
and
fdivrs
or
jg
jne
jg
push
js
fcom
hlt
or
aas
push
jl
cmp
lock
sahf
mov
iret
jg
and
inc
std
cmp
or
dec
aad
mov
and
dec
cmpsb
pusha
cmp
aas
jo
scas
xor
mov
scas
loope
pop
adc
mov
mov
inc
fdivrl
cmpxchg
xor
addl
aas
xor
mov
fwait
jo
sbb
scas
pop
sahf
push
cmpsb
mov
sbb
shll
roll
adc
add
aad
clc
test
push
push
mov
jge
xor
mov
mov
sbb
sub
mov
jg
mov
data16
mov
divl
or
cmp
pop
insb
test
mov
cmp
cmp
push
mov
loope
divl
fnstsw
lods
adc
mov
push
mov
cli
cli
jnp
out
inc
cld
ret
jnp
jbe
out
jmp
fs
out
mov
or
pop
mov
loopne
mov
test
cmp
mov
xchg
cmp
ljmp
xchg
stos
adcb
sub
cmp
xor
pop
push
pop
js
and
push
fdivl
push
addr16
add
mull
les
sub
outsl
and
orl
xchg
sbb
into
mov
addr16
add
inc
cmp
and
push
xchg
je
jbe
or
jbe
cmpsb
mov
jne
jae
mov
adc
sub
scas
push
sub
imul
cmpsl
pop
xchg
inc
std
scas
cmp
xchg
test
jecxz
pushl
roll
push
pop
push
mov
mov
test
popf
mov
fdivr
cmp
fbstp
mov
dec
push
fbld
das
adc
jae
pop
push
divw
pop
insb
je
cmp
and
stos
mov
xchg
sub
adc
or
sbb
inc
fimull
iret
jbe
mov
in
std
fwait
mov
jno
fs
xchg
outsb
dec
push
pop
jp
jmp
cld
jl
push
sbb
aas
cmp
push
lock
sbb
jns
out
outsl
jp
mov
outsl
jl
dec
data16
fdivl
and
push
dec
in
or
xchg
in
inc
cld
mov
jmp
fwait
in
jno
insl
ret
insb
incl
cmp
arpl
dec
xchg
inc
xchg
push
fwait
and
dec
loopne
push
rcrb
fidivl
sarb
or
inc
pushl
outsb
movsb
mov
push
test
js
xchg
inc
int3
cmp
mov
call
or
out
or
hlt
shlb
hlt
xchg
cmp
sub
insb
xchg
insb
jbe
in
mov
vpsubq
shlb
jecxz
mov
ret
ret
push
inc
xorb
dec
xchg
jns
jae
shrb
stos
lock
aas
daa
gs
fcompl
gs
jo
add
loop
inc
xor
jge
mov
lcall
fidivrs
int3
add
lock
das
add
jno
add
in
pop
mov
icebp
or
dec
and
cmc
jo
inc
gs
imul
imul
or
adc
rclb
out
gs
ljmp
push
adc
pop
xchg
ret
mov
xchg
into
outsb
mov
pop
test
mov
orl
mov
pop
pop
lea
mov
xor
insb
or
stos
add
mov
ss
scas
std
rsm
inc
inc
shl
lods
js
mov
or
in
test
mov
movsb
mov
jmp
scas
pop
ficompl
outsl
cmp
loop
xchg
fwait
push
xchg
inc
and
pushf
ret
scas
fstpl
mov
sub
pop
fwait
inc
addr16
lds
sbb
cmp
into
je
imull
inc
mov
xor
movsl
loopne
sbb
sub
adc
adc
out
xchg
or
lods
repz
sub
cmp
loop
dec
mov
jnp
inc
out
jp
sub
xor
dec
hlt
inc
repnz
pop
fiadds
xchg
stos
pop
jg
mov
dec
rep
divl
out
and
cwtl
xor
mov
jb
ffree
cmp
push
mov
pop
pop
mov
cmpsl
bound
ror
xchg
mov
loope
mov
jne
jnp
mov
push
xchg
cmp
and
mov
mov
insb
imul
loopne
pop
scas
int
push
add
xchg
es
fisttpl
lahf
cwtl
ljmp
pop
inc
enter
xchg
push
add
and
outsl
adcb
in
add
pop
in
outsl
mov
sbb
push
subl
add
xor
cwtl
insl
xor
dec
sub
jb
jl
pop
scas
loop
add
jne
dec
bound
jle
ljmp
clc
cld
dec
int
xor
push
repz
notb
pop
icebp
rorl
push
push
andb
pop
cltd
out
cmp
cmp
cld
sub
setle
sub
jl
sahf
push
arpl
dec
or
lahf
pop
and
push
movsl
lcall
aaa
cmp
and
mov
mov
outsb
imul
loope
lret
jle
adcb
adcl
jno
pop
xchg
push
scas
cs
dec
repnz
and
test
rorl
push
ficoms
loope
test
or
dec
outsl
jnp
jecxz
pop
ret
out
pop
cmp
enter
cmp
in
or
repz
out
dec
xor
pop
ja
cmp
jle
out
call
or
aas
xchg
mov
and
jns
les
dec
imul
cs
std
ja
dec
adc
mov
pop
in
out
jno
test
addr16
insb
jnp
imul
dec
xchg
fidivs
jp
dec
pop
xor
sub
sarb
cmpsb
sub
mov
pop
cltd
mov
lahf
push
cmp
pop
iret
int3
adc
in
xor
notl
fisttps
fwait
or
cmp
lods
mov
push
mov
pop
jg
sub
mov
mov
xchg
cmp
push
repnz
pop
inc
lods
add
jbe
push
inc
aaa
mov
mov
test
inc
xchg
idivb
cmpsb
pop
add
sbb
mov
fdivrs
mov
lds
cmp
repz
mov
test
mov
icebp
mov
mov
push
and
adc
cltd
fstpl
popa
dec
test
xchg
push
fistpll
bound
cmpsl
cmpsl
insl
xchg
lahf
jb
dec
sub
or
je
jb
popa
and
in
mov
scas
mov
sbb
mov
out
adc
jbe
movsl
lods
push
add
dec
xor
xor
test
mov
xor
daa
or
xchg
or
mov
sbb
cld
daa
mov
cltd
add
movsb
cmc
xchg
cmp
test
mov
testb
inc
fisubrl
inc
lods
mov
mov
push
sub
push
xor
daa
mov
mov
fisttps
push
cmp
leave
mov
arpl
push
sbb
xchg
out
loop
iret
mov
add
jg
xchg
in
into
dec
rcrl
adc
lcall
push
or
push
fsubrp
xchg
xchg
lcall
xchg
mov
or
lcall
mov
inc
aam
movsl
or
sarb
mov
gs
xlat
dec
push
jecxz
push
bound
dec
pop
inc
fwait
xlat
sbb
dec
pop
insb
int
mov
int3
dec
push
sbb
filds
test
sbb
stos
lcall
push
repnz
aaa
ret
mov
add
dec
fwait
mov
jle
out
mov
and
jl
clc
inc
orl
test
in
lret
cltd
dec
aam
loop
xchg
push
test
jmp
orb
dec
pusha
add
mov
loop
cmpsl
sub
inc
mov
xor
mov
dec
test
dec
in
repz
adcl
in
mov
flds
arpl
adc
mov
adc
pushf
pop
push
jo
mov
in
inc
xchg
lcall
mov
popf
jge
in
stos
gs
jo
insb
push
adc
jle
test
mov
gs
lcall
stos
nop
enter
mov
nop
mov
out
mov
mov
fcoms
adc
sahf
repnz
fcomip
adc
je
fildl
sbbl
push
mov
aam
jne
out
in
lcall
mov
or
fidivl
sbb
inc
js
adc
stos
cmp
push
push
arpl
shl
les
lret
dec
jecxz
insb
iret
dec
stos
stc
enter
mov
int
shll
lods
mov
in
call
xchg
push
popf
mov
xlat
sub
repnz
mov
push
push
shll
scas
std
nop
xor
adc
test
cmp
mov
jge
jae
lret
mov
inc
aam
mov
mov
addl
push
daa
push
sub
idiv
adc
outsl
cmpsl
push
pusha
jb
xor
mov
inc
sub
or
aaa
pop
sub
pop
pop
fists
xchg
inc
fadds
into
jb
les
jg
mov
or
daa
add
pop
and
je
int3
decl
inc
rclb
mov
in
or
xor
icebp
outsb
add
push
fcomps
iret
cmp
mov
pop
loop
cmc
mov
xchg
mov
out
push
dec
sub
mov
or
sahf
and
xor
pushf
pushf
pop
push
rcr
les
xor
cli
xchg
test
in
jmp
adc
pop
mov
cld
test
jno
xor
push
imul
and
cs
jmp
hlt
adc
cltd
inc
mov
push
dec
inc
adcl
and
mov
pop
sbb
repz
adc
addr16
sub
cmpsb
call
xorb
jne
inc
bound
rol
in
xor
inc
loop
lret
je
jbe
popf
lcall
sbb
cmc
sbb
lock
sbb
dec
ljmp
arpl
dec
xor
xchg
mov
jmp
mov
add
inc
push
arpl
orb
or
jns
ret
out
lret
call
cs
or
add
je
jecxz
mov
into
test
repnz
push
push
lret
popf
xchg
lods
mov
movsl
cwtl
push
and
fbld
xor
ss
nop
mov
sub
enter
repnz
xchg
rcrb
cld
loope
and
or
mov
mov
and
dec
in
dec
jl
movsl
aaa
mov
adc
and
and
enter
loopne
rolb
mov
popf
cld
cmpsb
leave
xchg
es
imul
sub
cmp
out
xor
dec
cmpsb
idivl
lcall
mov
jbe
pop
pop
insl
inc
and
mov
sbb
lods
arpl
mov
cmp
add
fcom
inc
push
int3
push
aad
sub
ss
and
notl
lahf
mov
sti
push
pushf
cwtl
xchg
jge
xchg
daa
dec
adc
je
and
mov
lds
cltd
shrl
and
cwtl
xchg
enter
cmovnp
inc
test
push
pop
loopne
enter
fidivs
pop
dec
int3
iret
inc
jp
add
jmp
mov
pop
movsl
cmp
xor
pop
scas
ds
mov
push
and
mov
ss
pop
push
decl
adc
xor
enter
scas
sahf
push
fildll
lods
push
inc
sbb
dec
bound
pop
fnstsw
push
inc
mov
ja
jmp
clc
cmp
pushf
mov
mov
aas
cmp
lahf
lods
into
gs
ja
and
insb
mov
add
mov
sahf
pop
hlt
mov
stos
add
aas
inc
aaa
aad
imul
mov
sbb
xor
fwait
jg
jnp
cmpsl
sbb
rorb
scas
pop
out
push
rolb
push
dec
adc
daa
cmp
xor
cmpsl
mov
mov
imulb
mov
repz
mov
fs
rolb
adc
jp
sar
or
dec
in
popa
and
mov
lds
das
pop
xchg
pop
stc
xchg
xchg
and
mov
push
push
pop
notl
mov
mov
cmp
arpl
ret
cld
adc
sbb
jno
or
mov
jmp
add
das
sub
jb
daa
cmc
inc
jbe
les
mov
xor
add
xchg
mov
mov
mov
jle
pop
sbb
fistps
repz
dec
adc
xchg
es
aaa
mov
jle
mov
add
jo
jb
inc
pushf
lcall
push
push
in
mov
xchg
test
sar
mov
add
sti
jmp
ret
mulb
mov
xor
cmc
mov
outsb
pop
jp
pop
mov
aaa
mov
push
test
lods
push
dec
scas
nop
jb
daa
pop
js
cmp
test
pusha
mov
ja
in
inc
and
cs
lahf
aam
daa
out
push
jle
adcb
movsb
mov
mov
js
cli
clc
and
inc
pop
mov
js
shll
sbb
sub
sahf
add
or
sbb
mov
out
pop
adc
sbb
dec
cwtl
arpl
stos
fiaddl
in
js
cmp
mov
sub
or
xor
aad
sbb
out
stos
mov
mov
inc
xchg
and
pop
inc
jns
in
fsts
mov
aam
ja
test
shl
rcrb
movsb
lds
mov
mov
xor
cld
in
ret
and
inc
fisttpll
ficoml
push
pop
jo
addr16
fwait
stc
cmpsl
addl
cwtl
fisttpl
cs
push
push
and
mov
dec
xor
dec
fimull
bound
jp
add
jmp
rcrb
popf
push
lret
mov
sti
sub
add
adc
push
add
xchg
out
loope
andl
pusha
and
push
inc
ret
xchg
sbb
push
iret
xor
xchg
add
jno
xor
shlb
sub
mov
jl
and
pop
loope
cli
jmp
inc
imul
ds
pop
mov
sub
test
ret
pop
mov
pop
shrl
pop
mov
mov
lahf
xchg
sub
and
and
ret
add
adc
pop
inc
xchg
jmp
cltd
stc
add
mov
stos
xchg
and
xchg
sbb
jp
dec
out
insb
xchg
pop
mov
xor
in
pushf
jl
fs
sub
ror
push
inc
sub
cmp
or
cltd
les
sbb
pop
fwait
je
cwtl
ret
nop
jae
jge
push
mov
shll
ret
sub
pop
mov
push
loope
push
push
out
popf
dec
cli
push
xor
fs
push
mov
cmp
clc
dec
inc
mov
ljmp
dec
insb
xchg
insl
nop
es
jl
movsl
outsl
mov
xor
push
cwtl
cmp
add
or
dec
imul
xor
in
sbb
xor
jnp
sahf
inc
test
cmp
push
popa
pop
pop
notl
xor
pop
in
mov
dec
push
mov
mov
leave
jb
ss
out
push
sarl
fs
mov
mov
dec
andl
ds
movsl
fwait
popa
and
xchg
fcoml
lcall
aad
sbb
sbb
rolb
jge
fdivrs
jg
lret
xor
or
clc
fstl
mov
lret
ret
mov
rclb
rcl
adc
or
mov
cmpsl
test
sub
lea
stc
or
sub
pop
push
mov
nop
xchg
cwtl
add
es
push
dec
fwait
fs
pop
aad
lcall
push
lods
or
mov
xor
mov
xor
pusha
mov
cmp
es
jne
adc
popf
mov
lret
popa
orb
stc
pop
inc
sti
gs
or
outsl
int
push
imul
popa
test
ss
into
jp
out
mov
je
mov
adc
jo
jb
rclw
fs
mov
fwait
dec
push
iret
xor
out
pop
add
cmp
cmp
push
mov
adc
aad
sub
mov
std
pop
xchg
mov
and
filds
cmpsl
iret
and
scas
rol
xchg
mov
mov
icebp
add
mov
test
idivb
and
or
outsb
inc
out
enter
test
jp
fidivrl
stos
mov
add
pop
add
mov
mov
fsub
mov
pop
stc
int3
je
mov
nop
xchg
pop
jge
cmp
repnz
insl
aaa
push
xor
mov
mov
and
lds
loope
sahf
pop
dec
xor
and
mov
lahf
or
cmp
and
stc
hlt
out
fwait
and
aaa
pop
pop
adc
outsl
push
in
cwtl
movsl
jmp
icebp
push
aad
test
push
int
jno
xor
addr16
mov
icebp
mov
movsb
enter
pop
push
mov
mov
jle
jl
or
popa
dec
int3
not
mul
shll
rcrb
dec
gs
popf
inc
or
xlat
test
cmp
jp
add
shr
popf
push
add
mov
stc
mov
or
sbb
jl
cmp
dec
cmp
mov
push
or
inc
into
inc
adc
sbb
xchg
adc
and
fidivrs
xchg
adcl
popf
fmuls
add
cmp
or
mov
loopne
pop
mov
loopne
jne,pn
mov
jp
push
imul
inc
xchg
adc
or
cmc
adc
sbb
arpl
sbb
push
cvtps2pd
arpl
adc
mov
ficoms
add
pop
mov
test
sub
inc
std
jmp
mov
inc
test
or
push
nop
add
cmp
mov
pop
adc
push
stos
shrl
shl
inc
mov
jns
dec
cmp
repz
aaa
inc
mov
sub
out
insl
xlat
lock
cli
xchg
xlat
out
enter
lret
sbb
mov
mov
mov
shr
mov
and
add
dec
mov
mov
xchg
cltd
inc
cmp
jle
rcrb
mov
dec
in
pusha
shrb
inc
inc
jl
mov
pop
xchg
mov
add
pop
lcall
mov
fcomp
aaa
loope
ret
data16
push
jl
fsubrs
mov
xchg
add
add
loope
mov
rcrl
lcall
mov
inc
dec
or
out
popa
test
sbb
rcll
sti
loopne
push
out
lods
inc
dec
shlb
insl
fmul
adc
sub
int3
aad
push
lret
or
fs
jbe
and
inc
stos
in
and
xor
ja
push
in
jb
push
mov
shlb
fs
filds
push
test
xchg
or
add
jae
xor
sbb
sub
pop
ja
mov
nop
cmp
xchg
mov
icebp
or
nop
and
pusha
mov
xchg
cmc
loope
pop
mov
lea
out
cmc
adc
and
fsubrs
xchg
push
xchg
out
dec
mov
push
xchg
jge
icebp
xor
popa
lret
stc
aam
daa
lock
pop
rolb
and
sarb
fwait
push
mov
ret
movsb
test
aad
or
dec
out
jnp
or
dec
hlt
sbb
mov
and
xor
mov
dec
push
insl
roll
dec
ss
xor
cmp
mov
add
movsl
add
fisubs
jge
inc
arpl
push
sub
cli
mov
enter
pushf
sahf
and
push
inc
aas
adc
or
imul
incb
sbb
imul
mov
inc
rclb
sahf
mov
mov
jo
cmp
add
push
sbb
mul
xchg
fisubrs
mov
xchg
in
insb
fdivs
pop
stc
jo
xchg
aas
sub
int3
xchg
dec
sbb
lret
dec
push
lock
add
gs
xchg
insb
push
addl
sbbl
inc
xchg
mov
pop
fmulp
loopne
push
push
sub
lds
cli
cld
arpl
icebp
push
in
stos
add
or
bound
sbb
push
xchg
sbb
mov
mov
movsl
adc
cmp
pushf
push
push
pop
dec
xor
sbb
aam
jge
add
pushf
mov
fnstcw
data16
scas
std
push
and
jg
je
sub
hlt
lcall
scas
js
int3
cs
fisubs
sarl
xor
sub
loopne
das
scas
adc
scas
pop
push
and
cmp
inc
std
fmuls
push
mov
mov
pop
push
push
push
in
xchg
or
mov
jo
cmpl
jb
cs
mov
lods
dec
lods
call
fdivrl
fbld
pop
iret
jecxz
mov
in
inc
dec
mov
sbb
andl
add
mov
repnz
jae
jmp
add
cwtl
sbb
xor
lcall
inc
jb
incl
call
jp
dec
mov
ja
jbe
cmp
lcall
inc
fsub
mov
push
pop
dec
cli
inc
sbb
rorl
ret
dec
mov
xchg
sub
dec
mov
mov
ret
les
push
adc
cmpsl
ljmp
cld
push
and
lea
sbb
idiv
std
jl
lcall
xchg
mov
imul
xor
shrb
imul
xor
xchg
xorl
dec
fdiv
push
mov
cmp
sub
sti
sbb
pop
dec
jb
push
mov
lds
sbb
xchg
rcrl
jae
jae
and
adc
sub
jns
sub
mov
adc
dec
roll
lea
xor
mov
clc
inc
inc
movsl
stc
repz
add
cmpsl
adc
stc
sbb
mov
shll
stos
jl
mov
xor
in
mov
xor
xchg
call
push
push
cwtl
jb
jno
gs
cmp
jb
iret
push
sub
pop
push
sub
pop
sub
jmp
popf
push
testl
js
dec
or
cwtl
dec
pop
sbb
decl
jp
or
mov
jb
fisttps
push
je
jp
fnstsw
xor
fs
insb
inc
mov
mov
dec
fistpll
sbb
push
jle
lret
dec
imul
xor
es
lret
push
rcll
push
cmp
xor
sub
pop
mov
mov
mov
insb
jne
xor
sbb
lods
jnp
jge
fiaddl
sub
fwait
dec
ss
or
insw
lret
jo
jbe
cwtl
aam
mov
mov
cwtl
inc
or
lcall
out
jp
xor
mov
dec
icebp
push
lret
std
or
lret
jae
sar
cmp
insl
mov
jp
cmp
loopne
fisubrs
sbb
pop
das
add
addr16
xor
icebp
jne
sub
add
iret
xor
dec
movsl
dec
rcr
movsl
shrl
bound
xor
pop
out
je
mov
pop
fistpll
js
dec
shlb
enter
mov
test
into
push
jno
mov
xor
mov
or
stc
sahf
push
lock
fsts
cmpsl
int
ret
xor
sub
xchg
scas
add
ja
xchg
lcall
mov
das
popa
and
stos
cmpsl
mov
mov
cmpl
push
mov
and
int3
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
addl
mov
or
mov
mov
xor
andl
add
orl
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
mov
mov
movzbl
and
cltd
push
addl
mov
add
movl
adc
or
push
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
adc
mov
mov
movl
mov
andl
mov
xor
orl
xor
orl
xor
andl
add
adc
xor
orl
jmp
mov
arpl
jno
sarb
mov
enter
jle
sti
sbb
push
aad
jecxz
mov
push
push
iret
fsubr
xor
xor
stc
mov
into
aas
and
lret
pop
iret
xor
cmp
scas
xor
pop
cmp
xchg
mov
data16
and
push
iret
dec
out
adc
push
ja
adc
mov
in
ret
add
lret
sbb
daa
ror
push
addr16
sbb
data16
insb
add
jno
sti
pop
icebp
mov
andb
addr16
pop
call
negl
xorl
dec
into
inc
jge
loope
dec
push
repz
cli
cmp
dec
mov
cmp
sub
pop
xchg
fimull
pop
mov
pop
int
ljmp
pop
loopne
stos
pushf
dec
cmp
adc
jae
aas
mov
test
sbb
out
div
js
inc
mov
xchg
push
and
icebp
sub
out
stc
in
or
aas
and
int3
mov
dec
lretw
lods
jmp
push
std
cmpsl
out
dec
mov
lock
xor
leave
or
std
cs
aad
insl
and
test
mov
adc
cltd
call
pop
out
adc
jmp
cmp
xchg
ret
ret
sub
push
ja
lods
mov
jge
loopne
nop
jb
or
pushl
paddq
imul
xor
out
or
mov
sub
mov
ja
xor
ss
xchg
or
inc
gs
push
les
push
clc
in
jb
sbb
test
dec
and
idivb
add
jmp
ret
aam
jmp
sar
and
ret
aad
std
sub
xor
clc
dec
xchg
inc
repz
sbb
or
orl
pop
pushf
fnsave
xorb
xchg
stos
loopne
push
lcall
fwait
dec
mov
cmp
pop
outsb
popa
fucom
stc
or
sub
scas
pushf
push
mov
adc
sti
orl
out
inc
push
inc
fucomp
shl
or
push
xchg
and
xor
dec
and
mov
leave
adc
andl
lahf
or
pop
add
loop
scas
in
xchg
pusha
shlb
incl
pop
mov
call
or
or
mov
jp
loopne
dec
mov
sbb
jo,pn
push
xchg
lods
adc
scas
loopne
dec
pop
andl
add
lcall
movsl
shrb
mov
xchg
add
daa
andb
fidivrs
addr16
stc
repz
popa
sbb
iret
cltd
int3
add
fsts
xchg
repz
and
cwtl
sub
push
outsb
shlb
addr16
push
mov
rorb
add
mov
inc
mov
mov
mov
or
jp
inc
insb
sti
push
push
sub
inc
push
mov
imul
jle
mov
insb
das
mov
jne
cmp
out
inc
cmpsb
sti
xchg
leave
mov
divb
pop
fadd
jae
fmull
pop
push
int3
and
sub
test
rcll
mov
fistpl
inc
sbb
hlt
outsl
pop
add
pop
icebp
mov
insl
js
mov
cmp
xor
jp
mov
sahf
adc
inc
push
lahf
daa
xchg
and
dec
or
rcrb
out
add
dec
sbb
cs
mov
mov
mov
lods
or
ret
xor
dec
les
mull
arpl
adc
push
mov
inc
add
xor
enter
mov
popa
adc
shr
idiv
mov
dec
add
pusha
enter
stos
loopne
push
sbb
nop
xor
xlat
xor
push
sahf
sub
adc
or
and
ja
sub
pop
clc
scas
mov
outsl
les
gs
mov
add
shlb
push
cmpsb
icebp
sub
test
sahf
rcl
arpl
es
fs
cmp
lret
faddp
dec
je
sbbl
mov
jbe
loop
add
jp
lock
movsl
inc
js
call
rclb
cmp
int3
sbb
or
lds
push
sarb
ret
fsubrs
ffree
mov
add
inc
mov
or
and
dec
sbb
ja
xor
pop
mov
es
jnp
test
lock
mov
mov
jmp
pop
cs
dec
fidivrs
cmp
aas
jnp
push
stos
push
das
hlt
in
sub
sub
sbb
adc
pop
adc
mov
movsl
pop
pop
fsubrp
add
pop
fld
add
push
testl
enter
cli
adc
rcl
pop
js
inc
inc
jns
imul
movsl
bound
outsb
stos
loopne
jg
jp
add
pop
sti
aaa
orb
lock
push
notl
xlat
xchg
stos
add
stos
ja
cmpsb
imul
mov
cltd
in
jae
rclb
inc
fwait
push
jo
stos
gs
inc
shlb
jbe
adc
push
and
and
pop
subl
dec
mov
jge
mov
mov
cmp
dec
pop
sub
aas
in
jmp
mov
xor
insb
xor
adc
ret
mov
rcrb
jb
popf
enter
pushf
shll
pop
outsb
mov
jp
out
push
lods
out
mov
rcll
out
jg
jbe
mov
mov
sub
lds
xchg
pop
je
jle
jo
enter
inc
pop
test
or
cs
in
scas
lret
and
dec
inc
adc
shlb
cld
fcompl
push
cltd
pop
jbe
pushf
repnz
xchg
xor
xchg
mov
ja
dec
sahf
xlat
inc
movsb
cmp
add
xchg
jecxz
push
add
std
xorb
dec
pop
sub
xor
adc
pop
jne
cltd
adc
ds
sub
xlat
xor
insb
and
lock
orl
mov
call
cs
jp
nop
inc
stos
pop
sub
or
mov
or
lret
movl
les
and
ret
mov
mov
js
sbb
push
shl
std
pop
rolb
inc
adc
ret
in
hlt
jne
jns
and
lret
popf
xchg
adc
mov
fdivr
pop
push
xchg
sub
mov
mov
inc
repnz
sahf
pop
lods
imul
mov
pop
pop
and
xchg
fldcw
stc
in
sub
out
or
ljmp
dec
or
sub
xchg
push
adc
fsub
dec
sbbl
das
push
sub
lods
push
dec
arpl
adc
fs
xchg
pop
xchg
fistps
adc
sub
mov
sub
dec
cmp
fdivp
inc
push
push
stos
cmp
mov
fldenv
rol
es
loop
xchg
outsl
mov
xchg
sbb
inc
imul
cmp
fdivs
sub
in
mov
gs
jle
jmp
out
sub
push
xor
cmp
lret
sahf
loop
xlat
enter
pop
pop
inc
cmp
imul
mov
add
xchg
clc
adc
sti
stc
and
lcall
scas
xchg
shll
mov
sahf
mov
lret
nop
pushf
xchg
add
sahf
sbb
xor
fwait
cmpsl
mov
xchg
push
mov
and
repnz
push
rorb
iret
jb
sub
repz
mov
pusha
push
adc
lea
int
xchg
push
mov
add
repz
mov
bound
movsb
xchg
cwtl
cli
loop
add
in
add
sbb
xchg
mov
push
pop
push
test
add
cmp
aas
sbb
out
push
or
test
jle
aaa
sahf
push
mov
xor
lret
incl
les
xor
dec
scas
imulb
out
jo
lods
pop
cltd
shll
xchg
icebp
out
fisttpl
jecxz
inc
xchg
cmpsb
shll
jne
rcrb
mov
mov
inc
mov
sti
movsb
test
pop
push
insl
ss
xor
sbb
shl
xor
aad
jb
cmp
inc
add
aas
imul
rol
pop
int3
movsb
outsl
mov
fwait
mov
sub
pusha
lods
push
loope
test
mov
and
jae
ds
or
fmul
fwait
orb
testb
and
xchg
push
aam
push
xlat
inc
jo
rcr
stos
pop
adc
cmp
repnz
add
xchg
pop
mov
or
dec
xor
shr
je
popa
out
push
xchg
nop
pop
mov
xchg
lods
xchg
sub
out
iret
out
fs
cmovp
xor
testl
push
out
mov
imul
or
sahf
and
or
xor
cmp
in
add
lret
test
ficoms
ds
imulb
dec
and
jae
mov
pop
out
adcl
push
hlt
mov
or
add
cmp
fisubs
cmpsb
ret
mov
es
pop
sub
jecxz
mov
inc
ljmp
jle
adc
xor
clc
inc
adcl
scas
xchg
push
mov
push
std
lea
adc
jno
aam
fdivrs
loop
mov
jb
or
cmp
stc
jmp
into
adc
dec
dec
cli
push
pop
dec
xor
push
ficompl
into
or
xchg
mov
out
and
in
in
subl
popa
ret
fwait
cs
jp
add
lahf
add
add
inc
mov
bound
xchg
orb
shrl
xchg
testl
xor
sub
xor
ljmp
jecxz
mov
movsb
jp
sti
gs
jecxz
fsubr
xchg
push
mov
sub
mov
mov
pmaddwd
mov
sub
jnp
sbb
mov
xchg
cltd
fisubl
lcall
push
sar
jl
add
movsb
mov
pop
repz
cmpb
cli
xlat
das
pop
out
jae
jne
hlt
push
in
js
xchg
ret
jno
dec
fwait
int3
pop
or
in
packsswb
fdivrs
lahf
dec
mov
scas
xor
in
sahf
shlb
movsb
stos
aad
xchg
inc
int
cmpsl
xchg
inc
stc
lret
lock
mov
cmp
bound
sbb
pop
std
int
cld
out
jecxz
jno
sbb
sahf
xor
enter
and
hlt
hlt
xor
cli
js
jns
mov
jecxz
mov
push
push
adc
sbb
js
jno
jae
movsb
cmovno
loopne
lret
fs
add
scas
vmovaps
push
popa
cmp
pop
cmp
inc
mov
push
das
and
jmp
movsb
mov
adc
sub
adc
dec
mov
sub
cmpsl
adc
iret
add
cmpl
stc
in
pop
push
sbb
or
cmp
jbe
testl
cmpsb
inc
xchg
xchg
addr16
fsubrl
mov
adc
divps
sub
cli
mov
gs
or
mov
push
test
imul
and
cmc
sbb
cmp
ret
les
mov
cmpsb
adc
xchg
out
xor
roll
gs
or
ds
mov
and
mov
je
cmp
out
pop
xor
or
mov
int3
and
push
and
stos
inc
rclb
incl
idivb
jbe
movsb
pop
push
test
fwait
icebp
inc
cmp
push
mov
or
push
pop
rol
xchg
out
je,pn
fdivr
xor
sub
cmp
pop
andl
jbe
pushl
sub
out
push
jl
dec
xor
dec
add
jo
jecxz
js
nop
xor
in
sbbb
popa
insl
lret
loope
mov
mov
loope
cmpb
cmp
push
loope
fdivl
loope
cwtl
sbb
sbb
dec
mov
les
loop
test
adc
incl
cmc
push
mov
addl
mov
mov
cmp
jge
mull
adc
or
cli
push
stc
std
stos
loope
mov
mov
clc
shll
gs
add
add
fwait
lods
inc
jbe
je
inc
cld
pop
inc
xchg
xchg
xchg
push
ss
push
xor
jg
push
shlb
push
push
or
push
adc
test
data16
ret
fiadds
sti
or
aad
loope
movlps
stos
aad
mov
pop
mov
in
bound
push
punpcklwd
aad
jbe
es
data16
loopne
loopne
or
xchg
inc
les
inc
inc
cmp
mov
cmpsb
imul
xchg
rcll
dec
or
mul
lock
pop
adc
testl
sbbl
mov
sbbl
mov
inc
inc
add
jmp
xchg
cmp
jbe
in
inc
jns
pop
jp
and
stc
xor
xchg
daa
les
jae
sub
movl
cltd
dec
jp
jmp
adc
mov
cmp
and
das
or
jno
mov
out
adc
lret
dec
jne
xchg
dec
fcomip
aad
push
shrb
and
xchg
inc
cmp
sarl
lahf
and
adc
adc
repz
xchg
clc
test
call
movb
push
cld
jle
lods
idivl
mov
ret
test
outsb
aaa
jae
sbb
cmpsb
mov
gs
sahf
adc
and
add
jnp
mov
lods
cmpb
mov
lahf
sbb
loop
xchg
pop
xchg
xchg
aaa
rcrb
loopne
xor
imul
dec
movsb
nop
pop
push
out
dec
cmpsl
inc
pop
sbb
inc
push
les
sub
adc
pop
call
popa
lahf
mov
and
inc
cmp
mov
push
mov
call
icebp
xchg
cmp
out
loop
bound
mov
loop
jae
pop
fwait
add
and
out
sub
dec
inc
cmp
xchg
jecxz
gs
ds
ja
xchg
or
cmp
popa
or
fimuls
outsl
leave
aam
push
in
in
push
ss
popl
jmp
inc
in
sbb
hlt
xlat
jge
scas
xchg
rol
xchg
fisttpll
jl
movl
cmp
call
pop
dec
lock
mov
das
push
sbb
mov
je
pop
es
int3
adc
sbb
int3
fwait
cmp
mov
mov
jecxz
jb
jae
lds
mov
outsb
popa
xor
lret
inc
inc
ret
jle
pop
push
jae
cmpsb
cmp
ffree
xchg
jg
cmpsl
lds
sub
popf
test
testl
or
fwait
inc
cltd
fildl
mov
or
mov
sbb
int3
pop
inc
xor
sub
xchg
sub
push
and
aas
xchg
mov
pop
dec
rcpps
mov
mov
jmp
scas
mov
daa
int3
jne
testl
popa
nop
loopne
xchg
sti
stc
push
dec
inc
stos
addr16
cmp
cltd
lock
push
movl
hlt
icebp
jl
dec
out
xor
xchg
rclb
fidivrl
xor
sub
dec
les
push
xchg
mov
mov
cmpb
and
jle
clc
outsl
pop
inc
adc
jl
cmc
sub
pushf
push
enter
inc
fistpll
pop
sti
pusha
push
sbb
mov
rolb
divl
push
push
dec
xchg
dec
leave
sti
jno
sbb
jecxz
int
jnp
lcall
pop
addb
push
loopne
adc
lods
movsb
dec
fisubrs
xor
sbb
imul
in
inc
test
mov
and
fs
mov
mov
jg
test
mov
jns
sbb
ficoms
roll
xor
add
inc
test
mov
cli
xor
cwtl
xchg
jae
inc
mov
inc
in
inc
xchg
cmp
ret
cld
das
sub
mov
nop
and
bound
sub
xchg
inc
jae
rol
daa
cmp
and
xorb
call
inc
jl
insb
leave
cltd
cmp
stos
loope
mov
jp
mov
add
lcall
in
fs
mov
adcb
loope
mov
push
test
adc
nop
nop
cmpsl
sbb
xor
cmp
outsl
pop
bound
popf
cmp
push
xchg
jle
sub
aad
inc
frstor
and
das
dec
fiaddl
in
pop
icebp
sbb
mov
push
push
mov
cmpsb
ror
lods
sub
sbb
addl
pushf
icebp
push
imul
push
stos
mov
mov
insb
cmp
adc
fsubs
cli
sub
hlt
cld
arpl
mov
dec
xchg
loop
mov
mov
xor
stc
popf
out
jb
daa
scas
movsl
cltd
hlt
clc
add
mov
nop
idivl
push
cmp
addr16
and
mov
cmp
enter
adc
adc
js
dec
movsl
cltd
xlat
ljmp
out
in
imulb
inc
mov
inc
mov
movsb
ret
inc
repnz
add
mov
sbb
stos
push
icebp
loope
cltd
pop
and
cli
lods
popf
fcomps
and
push
push
decb
das
mov
sbb
popa
lea
and
inc
stos
ds
or
in
aaa
or
cs
dec
jecxz
push
or
dec
xchg
inc
pop
imul
ja
sti
loopne
in
das
mov
xchg
imul
jle
pop
cmp
sti
xor
jnp
pop
pusha
dec
sbb
fimull
dec
sbb
cmp
adc
dec
push
lret
sbbb
push
aas
hlt
pop
shlb
movsl
cmp
cmc
jle
inc
mulb
jae
std
rsm
movsb
stc
jae
mov
lret
int3
pop
out
inc
inc
lods
jns
push
jnp
in
or
adc
sbb
cmp
mov
insl
fs
jo
and
scas
rcll
lods
dec
jns
mov
jl
jb
into
mov
cmp
bound
test
clc
pop
add
push
jge
sbb
dec
sbb
sbb
xor
fmuls
fadd
add
aaa
pop
loope
xor
rcrb
js
push
adc
pop
cmpl
xlat
flds
inc
mov
leave
inc
jge
into
mov
clc
push
mov
icebp
in
mov
aaa
loopne
sub
fcoms
pushf
push
adc
or
inc
aaa
outsl
add
inc
jge
jno
or
mov
dec
push
dec
fadd
mov
xlat
mov
leave
mov
icebp
jno
pop
sub
arpl
shlb
inc
xor
cmp
call
dec
imul
push
insl
mov
sbb
into
jo
xchg
or
jnp
jge
out
cmp
lea
pop
arpl
repz
or
int3
sbb
lret
movsl
pop
lea
movsl
add
xor
cmpsb
icebp
ja
mov
inc
and
imul
test
leave
inc
testl
and
loope
or
repz
pop
mov
adc
jo
inc
add
daa
out
test
jns
popa
mov
dec
std
mov
imul
pop
and
jmp
hlt
cmp
pop
pusha
xchg
ds
out
jecxz
in
addr16
or
xorl
mov
repz
adc
push
cld
sbb
mov
outsl
push
mov
dec
push
js
inc
or
mov
aaa
inc
pop
rclb
cltd
rorl
push
push
loop
and
sbb
cmp
mov
std
cmpl
sub
dec
jo
mov
dec
andb
mov
add
fwait
rcrl
adc
lret
or
cmp
lods
mov
test
xchg
pop
mov
or
cmpsl
insb
adc
mov
or
gs
in
lret
into
test
or
push
pop
repnz
mov
sbb
pop
inc
les
add
test
push
push
and
inc
leave
js
xchg
mov
in
sbb
mov
data16
jle
negb
jge
je
loope
sahf
and
frstor
lcall
jl
mov
lock
sbb
rcll
jmp
inc
adc
adc
pop
or
rorl
push
ljmp
jno
fdivs
push
add
xchg
push
cmc
dec
mov
jge
xchg
xchg
sub
loope
dec
pop
adc
xchg
push
rcrl
sbb
xorps
xor
imul
sub
jg
push
add
mov
jbe
aas
mov
or
aad
push
mov
int
ljmp
mov
pusha
cltd
jo
inc
in
inc
or
test
out
pop
clc
cmpl
dec
rorb
add
repz
lret
out
mov
inc
mov
orb
inc
mov
sub
or
popa
xor
js
jge
imulb
int3
loop
stos
adc
cs
out
jne
pop
and
imul
inc
ja
mov
std
hlt
sbb
into
in
je
rcll
negb
daa
mov
je
movsl
lret
testl
push
add
add
call
jb
out
and
jbe
xlat
jge
mov
xor
clc
dec
dec
add
pop
pop
push
lods
add
sbb
popf
inc
mov
push
or
lea
in
xchg
push
outsl
les
or
ss
sub
mov
les
popa
shlb
leave
sbb
out
xchg
shrl
arpl
xchg
xor
mov
stos
sti
out
mov
aas
cmpsl
pushf
mov
mov
add
sbb
jno
lcall
pop
xlat
add
rol
xchg
repz
int
arpl
lods
enter
cmp
push
xor
push
and
in
pop
mov
cmpb
aad
int
push
mov
jbe
inc
shrl
mov
lea
insl
xor
xor
push
lods
leave
stos
sbb
loope
outsl
imul
cmp
test
xor
jne
jnp
ds
inc
mov
pop
push
mov
dec
sub
stc
or
push
les
leave
fcompl
pop
xchg
add
lea
mov
dec
mov
ja
adc
insl
icebp
into
ret
jnp
ret
or
std
add
add
mov
in
push
sub
mov
insb
mov
xchg
mov
lods
mov
stc
das
push
pop
and
loope
cmp
xor
sti
mov
outsl
pop
sbb
adc
add
nop
lret
cmp
or
fstpl
dec
sub
push
lcall
xchg
cld
jmp
arpl
xchg
mov
dec
arpl
jle
mov
leave
popl
and
mov
pop
fiaddl
mov
pop
outsl
cmp
into
dec
ljmp
outsb
test
pop
dec
daa
mov
call
cmp
mov
mov
test
lock
aaa
sbb
stc
clc
sub
mov
jecxz
fists
add
or
inc
cmp
xlat
jnp
iret
sbb
lcall
inc
dec
mov
mov
dec
arpl
lods
insb
repz
pop
mov
into
jae
pop
into
cmp
dec
and
addr16
adc
sub
loope
xchg
jge
adc
repnz
aaa
pop
add
inc
dec
push
pop
in
xchg
fldl
sub
mov
sub
jmp
xchg
lock
dec
add
sbb
dec
inc
cli
adc
in
fisttpl
push
mov
jp,pt
push
aad
sub
ja
inc
ficoml
ret
fsubrs
fidivs
inc
mov
add
js
scas
rcll
cmp
mov
ret
and
xchg
mov
fwait
lds
insl
mov
mov
test
stos
push
jge
inc
addr16
jbe
out
add
lahf
or
xor
pusha
das
dec
jmp
hlt
inc
xor
inc
cmpsb
decl
xchg
call
testl
xor
xchg
sbb
je
inc
cwtl
xchg
out
and
movsl
fucomp
sbb
insb
in
jns
test
sbb
and
in
sub
sbb
rorb
mov
das
stc
cmp
fidivrl
mov
clc
mov
push
clc
mov
idiv
in
mov
aas
aam
lea
imul
jmp
inc
inc
insl
cmp
mov
jp
test
xlat
xor
sub
mov
xor
out
les
es
jne
repnz
push
inc
rorb
pop
cmp
push
sbb
inc
ret
mov
jns
gs
lock
pop
inc
scas
fs
dec
pop
test
fildll
fs
or
scas
out
xchg
cmp
faddp
jns
mov
xor
and
xchg
xor
shr
inc
mulb
aas
stos
ss
adc
mov
les
int3
inc
movhps
adc
imul
les
sbb
arpl
inc
cmp
cmpsb
out
xchg
add
lods
pop
loopne
pop
in
dec
stos
inc
xchg
push
into
ud1
push
push
xor
clc
jmp
imulb
sub
rsm
pop
lahf
imul
sub
cmpsb
push
jo
dec
pop
mov
sbb
cli
dec
adc
jle
dec
jo
stos
pop
aas
dec
daa
lds
lds
lock
daa
inc
cmc
loop
leave
ret
jo
mov
sub
push
shrb
shll
mov
ret
popf
inc
cmp
cwtl
shl
movsb
fwait
leave
fcoms
sahf
or
and
dec
rclb
push
xchg
test
ret
mov
fmuls
lods
loop
cmp
jl
ret
ret
repz
or
fs
adc
loopne
mov
or
mov
inc
shr
push
pushf
sub
or
sbb
mov
push
xor
loop
xchg
sar
cld
cmp
rclb
shll
adc
sub
adc
cmp
hlt
scas
dec
fildll
mov
popf
mov
push
jl
cmpb
aas
lods
out
cli
movsl
sahf
sub
push
fxch
fdivrs
out
addb
fisttpll
rcrb
pop
pop
sti
loop
inc
fcmovb
les
mov
dec
das
out
popa
movsl
cmp
push
ret
test
fidivl
aaa
pop
push
popa
fs
aad
or
aad
jno
xor
es
mov
jbe
jb
dec
inc
decl
xchg
flds
or
mov
addr16
mov
hlt
jnp
jg
sbb
add
pop
dec
inc
push
cmc
popf
test
mov
add
arpl
push
je
inc
xlat
clc
or
insb
sub
aaa
int
xchg
sub
stc
lock
push
ret
mov
test
int3
push
jns
xor
push
in
jp
fisubs
mov
jle
jae
daa
xor
lds
sub
or
push
sarb
lret
cld
xor
xchg
inc
repnz
mov
add
lods
pop
sub
pop
cmp
test
xchg
js
mov
pop
push
lahf
pop
inc
xor
mov
pop
in
cwtl
xchg
das
call
les
hlt
cs
dec
push
add
sbb
jp
mov
jns
mov
fsubs
insl
and
xchg
adc
pop
fcomps
lds
mov
push
xchg
pushf
push
cmp
adc
sub
push
or
or
arpl
popf
add
pushf
cltd
pop
pusha
outsb
frstor
pop
mov
outsb
mov
in
pop
popf
sbb
xchg
and
out
int3
or
fimull
cmp
adc
mov
sti
daa
les
adc
insb
les
or
es
add
pop
pop
out
or
push
andb
jbe
out
cmpsl
inc
arpl
aaa
stos
push
sub
xchg
aad
stos
cli
inc
into
paddd
scas
xor
sub
fdivrs
xor
sbbb
test
inc
inc
jmp
les
adc
dec
sub
sbb
jl
xchg
or
imul
add
imul
jg
cmpsb
pop
sub
ljmp
loopne
ss
test
rorb
add
pop
aam
ds
and
sbb
lds
popa
add
popl
push
aam
dec
pop
cmpsb
xchg
rolb
jno
lahf
mov
popf
push
ss
popw
jns
fldl
jns
lahf
call
push
xor
hlt
fadd
dec
inc
push
push
repnz
xchg
inc
rorl
fdiv
xor
std
adc
aad
sub
add
inc
fadds
fbld
sub
jp
push
inc
mov
jnp
fstpl
lods
outsl
daa
and
mov
mov
add
arpl
mov
jge
adc
pop
into
mov
mul
dec
sub
cmp
sub
xor
idivl
jne
jl
iret
push
mov
xchg
mov
test
mov
in
fistpl
adc
aam
cmpsl
push
jmp
mov
mov
shll
rolb
shrl
cmp
iret
inc
gs
xchg
fisttps
pop
or
pop
mov
jo
xchg
ds
jns
xchg
cwtl
cld
outsl
xor
sti
pop
add
xchg
pop
push
push
sub
jns
aas
icebp
shr
dec
add
jle
rolb
xchg
adc
add
stc
inc
push
adc
movsb
addr16
jns
xchg
repnz
fsubp
lahf
ja
scas
arpl
andl
iret
push
inc
lock
into
sub
mov
jae
cltd
jmp
cmp
inc
sub
cld
inc
in
or
and
popf
outsl
pop
adc
xchg
push
js
mov
out
inc
and
inc
popf
stos
jns
xchg
in
pop
add
pushf
aas
add
test
mov
in
mov
ss
cmp
push
ds
mov
sahf
insb
dec
insl
jecxz
call
test
pop
push
repnz
or
sarl
repz
lods
dec
adc
and
sub
jo
cwtl
cli
enter
cwtl
and
cli
or
fnsetpm(287
iret
xchg
and
repnz
xor
not
cmc
xor
lock
push
add
fcom
adc
pop
xchg
lret
aas
shlb
mov
jo
movsb
roll
sbb
add
push
xor
repnz
mov
xor
bound
aas
xor
dec
ss
mov
movsl
pop
pop
xor
dec
adc
jg
pop
pusha
ss
cwtl
xchg
xor
out
cli
call
jecxz
mov
push
mov
movsl
cld
dec
les
ror
daa
scas
xchg
pop
jne
je
sbb
push
mov
scas
repnz
mov
call
flds
faddl
xor
rcll
fcmovnb
movsb
mov
icebp
mov
jnp
pop
mov
insl
xchg
add
or
pop
mov
ds
add
outsb
repnz
ljmp
xor
lock
insb
add
or
cmp
test
mov
dec
in
movsb
ror
lcall
add
test
jmp
arpl
testb
test
add
movl
cmp
movl
je
sub
mov
mov
mov
subl
xor
add
adc
xor
andl
xor
movl
cmp
movl
jne
movl
cmp
jne
mov
mov
xor
mov
mov
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
sub
addl
push
xor
push
xor
mov
add
mov
xor
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
and
andl
xor
movl
movl
and
mov
mov
xor
xor
add
mov
orl
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movzbl
sub
mov
sub
xor
mov
addl
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
mov
xor
xor
xor
sbb
mov
mov
mov
sub
imul
addl
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
or
dec
mov
jmp
mov
orl
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
xor
mov
addl
sbb
mov
sub
mov
andl
xor
mov
mov
mov
dec
mov
andl
xor
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
jmp
test
icebp
arpl
scas
push
lds
bound
bound
and
scas
les
cmp
fistl
ss
xchg
lds
pop
dec
mov
cmpsb
shlb
test
ljmp
movsl
gs
cltd
push
ds
lods
jmp
jecxz
syscall
es
leave
mov
fxch
inc
pop
loopne
gs
xor
sub
jmp
insb
adc
sub
es
adc
mov
xchg
stc
lret
inc
mov
mov
sbb
mov
sub
sti
sub
es
mov
sub
cmp
arpl
fdivrs
xchg
lret
jge
imul
xchg
xchg
and
rclb
xor
fmul
pop
mov
sbb
or
and
mov
jmp
nop
mov
and
inc
or
loopne
mov
scas
cli
inc
and
pop
andb
or
mov
mov
test
insb
rclb
shll
mov
jns
data16
fidivl
mov
xor
outsl
xrelease
mov
add
cwtl
pop
repnz
fdivs
add
xor
jmp
movsb
loope
jbe
jecxz
mov
shll
push
xor
in
cld
xor
sbb
imul
cmp
adc
shlb
inc
cmpsb
jno
dec
pop
adc
add
pusha
jbe
sub
adc
gs
les
idivl
or
out
loopne
clc
in
and
adc
mov
mov
js
sahf
loop
push
je
or
xor
cmpb
in
mov
aam
inc
fadds
add
pop
leave
scas
call
lea
stc
call
jbe
push
xchg
jnp
sub
ja
scas
shrl
test
sub
mov
roll
push
nop
jne
addr16
cld
jg
adc
mov
dec
or
jp
push
xor
jns
fs
sub
cmp
xor
mov
cmp
dec
add
gs
pop
test
fisttps
outsl
mov
add
jmp
jmp
jno
shll
mov
push
ds
sbb
mov
mov
cmp
push
cmpsl
cwtl
pusha
enter
in
sub
rclb
cs
sub
lret
aas
icebp
jecxz
jo
jne
cmp
ljmp
mov
in
pop
add
cs
cmp
push
cmp
jg
leave
das
iret
popa
mov
or
mov
mov
stos
sahf
stc
aas
sbb
cmc
fdivr
outsb
in
jns
mov
jmp
jne
adc
push
adc
in
pop
shl
call
scas
fstpt
inc
or
push
divb
dec
jp
and
hlt
cmp
inc
fnstsw
popf
xor
and
cmpsl
fiaddl
pop
cs
inc
aas
int
sahf
enter
jl
mov
and
push
mov
lock
adc
pusha
in
push
push
mov
js
sub
adc
mov
jle
inc
dec
pop
dec
xlat
lea
dec
fsubs
mov
adc
movsb
jmp
ljmp
xchg
fcmovu
pusha
inc
shrl
add
stc
dec
mov
and
xor
inc
sub
sub
cmp
push
cmp
jg
loop
ljmp
es
or
add
insl
add
pop
push
push
xchg
scas
test
stos
scas
pop
movsb
mov
subl
mov
out
adcl
out
enter
cmpsl
rorl
push
dec
jb
sub
ficompl
lahf
aad
mov
xchg
cmpsb
icebp
sub
adcl
aad
push
cli
inc
mov
or
mov
mov
fcomps
int
stos
sti
std
push
fwait
pop
cwtl
cmp
es
bound
leave
jae
dec
xchg
push
ror
jno
rolb
mov
mov
jmp
mov
jle
xchg
pop
sub
aas
dec
xor
out
std
push
push
pop
jmp
add
jecxz
and
sbb
sub
mov
adc
mov
sahf
xchg
inc
enter
mov
test
jae
clc
sub
sbb
jg
ret
jne
fwait
into
ljmp
mov
das
dec
add
inc
fs
shlb
jmp
add
sarl
mov
mov
xchg
mov
mov
sub
jge
jb
lds
push
push
dec
iret
jnp
or
pop
scas
adc
pop
or
cmpsb
cmpsl
mov
test
add
nop
inc
xchg
or
sbb
scas
loopne
adc
pop
xchg
in
jne
out
jle
out
lret
lds
inc
xchg
xchg
mov
in
mov
data16
movsb
in
jns
adc
test
and
addr16
or
jns
in
aad
sub
push
arpl
xchg
sbb
pop
cmp
sub
das
adc
andb
or
inc
adc
xchg
and
outsl
fs
xlat
xlat
mov
rcll
push
insb
clc
sahf
in
add
test
pop
loope
repnz
hlt
scas
adc
out
or
mov
out
adc
lcall
xchg
iret
lods
ret
hlt
aad
xchg
jnp
push
push
js
sub
ret
mov
jae
imul
inc
nop
mov
adc
repz
in
jge
es
jge
ret
push
pop
adc
jno
repnz
dec
dec
and
insl
jecxz
adc
xchg
and
pop
mov
les
lods
xlat
cmp
xchg
popa
rcll
testb
push
in
or
insl
aam
cmp
or
or
and
cmp
rorl
imul
stos
pop
stos
and
cld
shlb
int
movsb
jg
andl
push
xchg
aaa
lahf
inc
sarb
mov
data16
mov
pushf
xor
in
fwait
push
dec
std
sbb
sub
cli
pop
fldt
sbb
dec
push
popf
or
stos
dec
add
push
std
mov
es
adc
shll
mov
pop
dec
mov
xor
and
movsb
fistps
dec
sahf
cmp
dec
cmc
xchg
jbe
dec
dec
mov
int
das
pop
test
loop
outsb
ss
push
add
adc
mov
out
lea
push
mov
cmc
mov
pushf
or
cltd
pop
or
sbb
sub
add
adc
lret
mov
ret
mov
rcll
jecxz
je
lock
in
les
mov
shr
adc
add
pop
cld
repnz
jne
adc
push
rcrb
and
inc
xor
mov
lcall
sbb
xchg
push
cs
popf
scas
adc
mov
or
dec
jnp
in
add
push
dec
inc
jl
fucom
test
out
sbbl
js
xor
lret
ret
call
or
xchg
stc
lods
mov
in
movsl
mov
add
int3
test
pop
les
iret
fucom
sbb
stc
push
cmp
jp
pop
pop
lods
push
std
or
jae
mov
xor
sbb
xor
cld
inc
mov
nop
mov
sbb
lret
insb
pop
jg
jns
stos
sub
add
popl
outsl
push
rorl
mov
movlps
js
fildll
mov
push
fs
dec
in
sub
sub
inc
pop
xor
mov
sbb
cld
outsb
push
xor
dec
into
and
jne
xchg
repz
stos
dec
out
cmovae
push
xchg
mov
adc
imul
pop
mov
jg
fidivs
popf
jns
outsb
test
inc
jl
pop
sbb
bound
fisubs
imul
int
daa
inc
and
adc
adc
das
lea
mov
mov
rol
repz
add
and
rcll
insl
enter
pop
bound
shlb
sub
dec
call
mov
add
sub
ja
scas
fnsave
cmp
adc
pop
test
jns
test
xchg
adc
xchg
cld
dec
gs
jle
jle
pop
les
xlat
movsl
jl
es
mov
mov
nop
and
inc
or
inc
in
js
push
jmp
sbb
lds
pop
je
outsb
and
rolb
int3
lcall
addr16
rcrb
lock
into
enter
loope
shll
repz
shll
xchg
xchg
pop
int3
pop
xchg
cmc
fildll
jb
outsl
mov
lds
outsb
rclb
imul
push
loopne
pop
inc
pop
push
xchg
mov
insl
cltd
xchg
mov
mov
leave
xlat
out
insl
xor
call
inc
adc
push
decb
and
push
mov
mov
adc
imul
aad
ds
rorb
fdivr
mov
sub
enter
lods
int3
scas
adc
test
pop
fdivrl
loopne
and
jnp
scas
cli
insl
fnstenv
divb
out
push
or
int
mov
das
insb
inc
hlt
scas
rep
insb
add
into
lock
in
fmul
fisttpll
jmp
faddl
mov
stos
xchg
or
sub
fistpl
sub
cmp
stos
scas
in
lret
insb
inc
push
push
sub
gs
push
sbb
mov
inc
nop
aas
cli
or
in
jl
or
fisubrs
fidivrs
das
mov
sbb
aam
in
inc
ljmp
push
xchg
fimull
out
push
in
call
mov
pop
ljmp
into
lea
push
dec
xchg
loopne
mov
call
mov
idivl
inc
mov
jle
sahf
and
imul
sbb
shlb
adc
mov
inc
and
out
and
ret
scas
jmp
jb
sbb
repnz
mov
sub
add
xor
lock
ss
dec
push
inc
or
mov
shl
out
xchg
dec
or
xchg
xor
imul
enter
dec
decl
std
call
sbb
js
jbe
push
popl
stc
or
jmp
dec
clc
and
xor
repnz
lock
in
iret
js
aad
pop
int
aad
fmulp
add
fsubs
dec
push
xor
adcl
sub
ja
mov
cmp
sbb
push
push
jle
mov
sbb
cld
aam
mov
lock
dec
mov
add
jl
sbb
movsb
fisubl
push
and
loope
and
jle
xor
repz
ret
movsb
adc
dec
loope
sbb
mov
dec
xchg
xchg
cmpsl
in
gs
pop
pusha
dec
bound
das
add
in
fildl
mov
loopne
mull
adc
push
in
push
dec
icebp
jle
js
into
pushf
xorb
iret
fnsave
pusha
fistpll
dec
rolb
arpl
cmpsb
sub
jge
pop
pushf
pop
clc
cltd
jle
lea
fisttpll
popa
out
jmp
pusha
pop
std
addr16
dec
adc
add
int
pusha
mov
xchg
mov
mov
into
mov
xchg
push
imul
add
rorb
out
ret
pop
dec
jb
sub
cld
push
pop
jecxz
lret
and
lret
jg
stos
push
dec
lret
jnp
mov
sub
sbb
cmp
jns
mov
push
bound
sbb
adc
sbb
sahf
gs
mov
xchg
mov
jmp
sti
jnp
adc
insl
push
es
jno
lods
imul
out
lcall
push
sbb
add
mov
add
dec
dec
dec
ret
scas
jnp
arpl
xchg
cmp
into
outsb
and
pop
push
push
pop
stc
and
add
int
xor
sarl
pop
pushf
scas
jle
lods
dec
mov
sbb
sbb
aam
mov
cwtl
push
inc
push
sbb
insl
cmpsb
jg
mov
jmp
push
rorl
cmp
clc
mov
or
fwait
adc
dec
add
test
test
cwtl
and
es
ret
dec
cmp
sbb
cmpsl
xor
mov
mov
lods
jns
popf
stos
mov
in
out
ja
arpl
xchg
popf
jnp
mov
jg
outsb
push
add
out
lret
in
or
stos
adc
sub
aas
into
xchg
mov
cwtl
fdivr
shll
in
pop
cs
aad
cli
sub
ret
aad
bnd
pusha
add
bound
pushf
ds
stos
xlat
sub
pop
addr16
sbb
push
mov
xchg
out
or
jg
je
jae
adc
dec
push
xor
loope
mov
mov
push
pop
and
and
sbb
mov
push
into
cmc
mov
inc
cmpsl
ret
sub
xchg
dec
inc
jle
jnp
std
andb
into
cltd
gs
stos
sub
mov
mov
or
dec
ss
jl
xor
adc
lds
jle
adc
fs
cmp
xchg
daa
xchg
ja
push
inc
mov
dec
push
mov
lret
adc
sbb
inc
mov
dec
add
and
mov
cwtl
mov
sbb
in
mov
es
lret
fwait
jmp
ja
pop
aaa
dec
mov
loop
adc
sub
inc
or
or
xchg
std
xchg
pop
xchg
in
jbe
mov
jecxz
in
lods
lcall
sbb
mov
cmp
xchg
xor
in
add
sbb
movsb
pop
dec
insl
rcrb
pusha
cmc
ja
scas
pop
push
ret
shlb
push
lea
cmp
xchg
daa
jbe
or
push
test
movsb
imul
aas
sub
loop
inc
sub
ss
sub
cmpsb
dec
sub
pop
jne
ret
fsts
sbb
sbb
jp
insb
mov
rcrb
lahf
push
std
scas
int3
push
sub
inc
les
out
das
subl
ljmp
lahf
dec
or
lods
arpl
mov
and
pop
xchg
cwtl
movsl
test
mov
cmpxchg
sbb
push
push
mov
pop
rcl
mov
into
mov
addb
xchg
pop
ret
fisttpl
push
cmp
and
lds
cmp
xchg
les
aam
or
pushf
push
test
mov
outsl
mov
and
loop
cli
movsl
rcrl
aaa
dec
nop
adc
inc
push
and
pop
mov
pop
pop
out
pop
push
pop
pop
xchg
sbb
loopne
jb
mov
inc
add
xor
sbb
or
cmp
or
push
dec
push
adc
push
pop
cmp
dec
pop
xorb
adcl
xchg
repz
int3
cmp
sahf
daa
movsb
inc
adc
mov
fs
pop
popa
inc
les
sub
dec
test
mov
push
mov
jae
ret
adc
scas
je
outsb
iret
and
divb
lret
pop
xchg
and
mov
jle
xor
xchg
pushf
fwait
mov
aam
cmpsl
cmpsb
cld
lea
rcrb
cltd
and
lcall
pop
push
inc
fidivrs
mov
push
pop
xor
scas
mov
pop
imul
and
dec
popf
lods
mov
push
jmp
xchg
sarl
jp
scas
pop
fdivrs
pop
lret
dec
addl
ss
arpl
pop
out
pop
dec
fwait
or
dec
adc
test
sub
and
repz
jge
andb
cmp
dec
mov
mov
data16
jns
inc
cmpsl
addr16
sub
movsb
push
and
mov
ss
nop
inc
cltd
mov
mov
cmp
mov
pusha
push
sub
mov
vucomisd
ds
mov
aad
cmp
loope
icebp
rclb
push
jg
out
push
insb
stc
and
repnz
dec
sbb
int
je
add
jnp
insl
into
cmpsl
js
aad
push
dec
lret
andl
cmp
add
push
imul
inc
sbb
mov
sbb
inc
inc
js
sti
in
stc
add
sub
adc
repnz
dec
rcrb
mov
lea
repz
shll
xchg
cmp
mov
clc
lock
daa
jo
icebp
inc
sbb
arpl
shl
and
fnstcw
inc
ret
pop
in
fstp
ljmp
popf
loopne
cmp
lea
push
push
cmp
aad
out
or
dec
mov
repnz
mov
fsub
mov
mov
xchg
rorl
or
xchg
xor
push
outsb
xor
add
punpckldq
lret
mov
dec
fbstp
jns
leave
insb
test
pop
negb
cltd
out
jle
inc
jmp
add
shlb
inc
into
jmp
push
lods
lock
mov
mov
div
popaw
mov
xor
negb
cmc
fnsave
rcrl
sub
push
jne
cmpsb
idivl
mov
xlat
mov
shll
cmp
sarl
pusha
ss
cmpsl
sub
aam
cmp
sbb
cmp
sbb
push
into
ret
ret
aam
mov
inc
cli
sub
icebp
rorl
push
pop
adc
aaa
fnsave
lock
nop
out
push
lcall
lods
fstpt
mov
enter
or
mov
loop
xor
jnp
in
mov
inc
xchg
push
cwtl
addl
jmp
out
fnstcw
xlat
inc
decb
push
daa
dec
lock
inc
notb
or
mov
and
neg
and
push
xor
scas
mov
cmp
push
jne
xchg
cmp
jge
bound
xlat
fistpll
fidivrl
adc
sbb
jg
outsb
pop
jle
mov
xchg
ljmp
cmp
insl
sbb
roll
pop
repz
aam
push
in
js
scas
addl
xor
lds
or
add
lods
in
or
orb
mov
popa
pop
insl
out
mov
xor
outsb
icebp
movsl
repnz
dec
sbb
arpl
cwtl
xchg
pop
lock
cmp
lcall
xchg
mov
cs
cmp
pushf
jbe
lods
jb
push
addl
movsl
push
push
icebp
es
out
les
sub
sbb
xchg
xlat
cld
hlt
add
test
add
or
sub
mov
cmp
inc
lds
gs
fistl
push
and
sbbb
xchg
mov
pop
pop
mov
add
fnstsw
or
sub
mov
data16
fs
mov
cs
cmc
xchg
mov
imul
test
stos
test
pop
xchg
mov
xor
lret
pushf
sub
je
dec
rclb
jae
mov
xchg
sti
in
dec
jae
jg
aaa
xchg
and
roll
aas
ljmp
gs
or
insb
inc
aam
in
add
dec
dec
mov
stos
pusha
subb
test
add
lods
mov
scas
stos
push
xchg
mov
pop
insb
jle
stc
addr16
fwait
pop
bnd
add
int
test
dec
scas
jbe
enter
fsubl
mov
ret
pop
mov
jle
mov
sar
add
xchg
out
in
incb
leave
ret
xchg
jne
adc
sahf
push
lcall
jo
dec
hlt
inc
inc
aas
sbb
loope
sub
push
shll
cmp
arpl
jge
add
or
stc
fldl
mov
add
cmp
popf
xor
movsl
cli
push
pop
push
sbb
pop
movsb
stos
adc
pop
pushw
xor
imul
mov
mov
lods
xlat
sbb
inc
imul
mov
js
mov
pop
mov
push
sub
mov
xor
incb
xor
adc
jb
adc
addr16
dec
fmull
cmp
ret
push
add
pushf
call
xor
pop
add
jg
mov
dec
mov
push
add
and
clc
js
jle
mov
sbb
inc
adc
add
testb
stos
outsb
and
pop
push
or
imul
lods
dec
push
lock
inc
fcmovnb
mov
mov
pop
lcall
and
pop
andb
and
mov
jl
xchg
inc
pop
sbb
mov
or
push
orl
scas
push
cld
jmp
shlb
or
cli
mov
and
mov
in
into
popf
je
xchg
pop
int
jge
rorl
out
sbbb
shl
ja
and
hlt
and
jns
in
js
lods
xor
xchg
sub
xchg
or
inc
fidivl
add
imul
imul
stos
dec
adc
fcoms
mov
adc
mov
jns
inc
mov
cmp
adc
pop
mov
stos
adc
cmp
and
icebp
inc
jmp
movsb
mov
jne
mov
daa
mov
andb
fdivrs
mov
jb
or
xlat
push
inc
and
xor
imul
lahf
adc
jp
and
pop
out
inc
inc
das
push
lods
mov
dec
insl
fists
into
in
lcall
inc
xchg
sub
and
les
ja
jno
fistl
sbb
sub
jmp
loop
mov
inc
pop
movsb
outsb
adc
dec
sub
push
mov
idiv
daa
sub
outsb
pop
mov
cmp
lret
icebp
push
jp
mov
iret
pop
jno
mov
ret
dec
icebp
sub
scas
lcall
test
sub
push
scas
or
xchg
pop
outsl
xchg
xorps
adc
pop
movsl
jo
or
dec
fwait
pop
jmp
mov
lcall
add
icebp
dec
add
push
jnp
icebp
cmovge
loope
sub
fdivrl
xchg
jg
inc
dec
movsl
cmp
push
imull
repnz
mov
dec
pop
sbb
scas
xor
cmp
leave
stc
and
mov
test
scas
outsb
push
xchg
push
jmp
insb
sbb
dec
sti
std
pop
jl
mov
sub
icebp
inc
iret
in
or
sbb
inc
insb
mov
adcl
scas
and
cltd
mov
inc
aas
sarl
pusha
popa
mov
arpl
test
jo
mov
pop
mov
pushf
adc
rcll
mov
adc
sti
js
sbb
fs
pusha
sbb
add
mov
jb
mov
or
sbb
inc
jno
inc
out
and
ss
mov
dec
arpl
icebp
div
add
out
inc
mov
jb
mov
out
mov
lret
mov
outsb
std
int
pop
fsub
imul
or
jge
das
jp
inc
dec
jle
pushf
xchg
sub
pop
jg
xacquire
or
iret
arpl
inc
movsb
hlt
sub
inc
in
jmp
cmp
stos
xor
push
adc
cmp
sbb
xchg
sub
or
mov
or
in
inc
lods
mov
stos
cmp
hlt
lock
cwtl
push
xorl
cwtl
xor
sarb
pop
add
jb
jae
test
addl
fcomps
ret
jmp
pop
inc
jle
ror
out
repz
stos
xor
into
mov
xlat
arpl
into
cmpsl
sbb
sarb
inc
test
inc
rorl
push
lret
std
sbb
mov
stos
mov
push
adc
fldcw
or
and
lret
shll
xchg
ljmp
mov
xchg
pop
arpl
sub
data16
inc
ror
jmp
lds
ret
or
pop
ja
xchg
repz
sbb
jno
sub
xchg
imul
xor
scas
push
icebp
sub
adc
dec
enter
sti
sarb
xchg
inc
mov
in
push
adc
xchg
mov
xorl
sahf
inc
out
xchg
insl
scas
lds
push
and
or
cmp
aam
pusha
mulb
notl
and
bound
push
jbe
pop
mov
in
cmp
pushf
jle
mov
jae
enter
gs
loope
gs
pop
fisttpl
lret
jl
add
mov
fldl
mov
mov
sahf
rorl
jle
xchg
negl
mov
xchg
lods
aam
cltd
aad
ret
and
jle
jne
xchg
xor
push
mov
xor
jle
enter
jbe
inc
cmc
add
popa
es
loopne
sub
imul
psubd
pushf
in
sub
push
xor
rolb
adc
insl
test
inc
jmp
cmc
jp
mov
xchg
pop
push
xchg
sbb
mov
pop
addr16
scas
and
mov
add
cmp
xchg
jb
pusha
scas
mov
enter
fsubrs
inc
das
jb
push
adc
mov
imul
out
jae
xchg
or
out
or
fwait
in
lods
fsubr
jne
stos
imulb
inc
divl
xchg
clc
int3
popf
mov
mov
popa
sbb
xchg
lcall
inc
mov
aaa
movsb
andb
nop
je
ljmp
xor
cltd
mov
cli
fadds
out
fsubl
inc
inc
jo
dec
mov
mov
sbb
movb
and
ret
or
lea
test
add
cmp
imul
adc
out
shlb
stc
jae
dec
cmp
pop
adc
in
mov
sub
and
mov
dec
arpl
jb
test
in
mov
xchg
push
mov
jecxz
xor
sub
jno
mov
xchg
sub
jne
adc
and
jne
push
das
xor
fs
mov
dec
sbb
popa
mov
mov
lea
jle
out
adc
mov
cmp
jo
sbb
mov
cmc
je
pop
imulb
jbe
dec
daa
add
mov
or
jle
xor
shlb
sub
jle
cmp
and
mov
aaa
cmpsl
sub
fiadds
andl
mov
sbb
and
lds
xor
xchg
into
inc
and
adc
cmpsb
fstpt
aas
jnp
mov
mov
or
leave
jno
mov
dec
mov
push
rcl
mov
shlb
pop
xchg
pop
mov
mov
jo
in
cmp
aad
fs
push
adc
dec
in
xor
mov
inc
rclb
and
cmpsb
icebp
pusha
andb
insb
sti
aam
and
inc
sbb
xor
cmp
dec
cs
mov
push
or
jbe
std
inc
xchg
inc
xchg
push
into
and
add
pop
sbb
and
icebp
lret
push
pop
xchg
in
insb
loopne
rolb
popf
sbb
cmp
push
stos
shlb
mov
mov
lret
cltd
hlt
and
mov
add
mov
mov
mov
lret
leave
xchg
popa
mov
sub
mov
jo
or
adc
cmp
fstl
call
adcl
jne
or
push
xchg
dec
pop
cmp
push
cmp
mov
jle
add
call
imul
pushf
je
cmpsl
jb
and
jge
loope
push
daa
add
sub
inc
popf
rol
push
dec
test
pusha
cltd
mov
jb
imul
ss
popl
out
pop
stos
push
mov
sbb
mov
out
ja
repz
mov
scas
mov
mov
jmp
mov
fisttpl
movsl
mov
mov
jno
notl
push
addb
push
push
or
int
cmp
es
cmp
jmp
xchg
mov
sbb
repnz
imul
lret
rcrb
std
xor
out
push
in
xor
gs
roll
pop
and
push
gs
lods
or
and
addr16
inc
aas
std
lret
shll
inc
add
add
jl
sub
lods
stc
fsubl
jo
int
push
adc
scas
pop
xchg
into
add
pop
shlb
jmp
test
mov
pop
and
rorl
je
movsl
jne
jne
mov
leave
jne
inc
hlt
push
or
sub
xlat
test
lret
xlat
popa
out
xor
sahf
ret
hlt
faddl
aad
inc
and
push
lret
loop
out
lret
pop
icebp
hlt
in
dec
negl
push
fcmovu
mov
mov
inc
xchg
or
sti
pushf
adc
inc
sub
adc
repnz
lea
and
push
jb
mov
push
out
les
add
push
clc
enter
dec
or
ja
dec
xor
jle
dec
arpl
pop
cs
lret
jns
xchg
out
inc
adc
cmpl
inc
sbb
std
in
jp
cmp
xor
ss
push
out
pop
rolb
ret
pop
cmp
aaa
add
rcrl
cs
movsl
and
cmp
mov
sbb
fwait
in
pop
out
cwtl
test
add
inc
jns
lea
cs
add
pop
cmpsb
jmp
loope
jle
jne
fwait
mov
xor
ror
mov
iret
push
dec
orb
movsb
dec
sti
sub
jecxz
xchg
pushf
shl
aad
mov
xchg
xchg
lcall
jnp
dec
rolb
aad
mov
mov
lcall
mov
lods
xor
mov
dec
xchg
testb
push
pop
out
cld
push
mov
push
jge
in
mov
scas
add
loope
push
inc
mov
std
cmp
inc
push
into
test
dec
test
ss
lret
jbe
rol
mov
mov
mov
or
icebp
push
test
es
pop
sub
rcr
push
in
and
cwtl
fsub
scas
xor
outsb
test
mov
mov
shlb
jbe
pop
mov
push
popf
aas
and
jnp
cltd
int
jecxz
push
add
fdivl
lds
pop
pushf
ret
push
push
lret
add
xor
pmulhuw
cmp
loope
hlt
mov
ret
pop
jl
jle
xlat
sti
ljmp
mov
rcl
jnp
adc
mov
or
pop
jb
jge
dec
repnz
push
xor
mov
out
movsb
nop
sbb
jmp
insb
fldcw
mov
pop
push
add
sub
or
out
sbb
xchg
mov
push
and
imul
out
push
out
dec
cmp
scas
ror
into
cmp
push
push
movsb
inc
mov
sbb
xor
cs
pop
ret
xchg
xor
enter
mov
add
mov
xchg
insl
pusha
push
int
lea
mov
push
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
jmp
jp
int
ret
add
pop
mov
dec
popa
bound
bound
adc
mov
loope
std
testl
js
or
mov
movsb
or
or
stc
cmp
fidivrs
aam
and
and
inc
xchg
adc
push
jmp
lretw
jp
xchg
adc
mov
outsb
sbb
cmp
fidivs
cmp
fsubr
adc
fdiv
or
fimull
jne
fcmovnb
cli
std
into
add
pop
lock
nop
mov
out
xchg
mov
lock
push
fadds
sti
add
je
call
repz
inc
rorl
out
data16
adc
inc
and
aam
repz
jp
call
mov
aad
inc
into
shl
cmpsb
push
out
int3
pop
push
hlt
push
xchg
sbb
rcrl
sub
pop
pop
subb
dec
cmp
xchg
jnp
dec
insl
cmp
xchg
mov
and
jns
test
aaa
jg
stos
sub
in
test
sub
dec
mov
jg
add
sbb
xor
ds
js
push
jp
lods
add
or
inc
sarb
cmpsl
inc
xchg
shlb
inc
cli
nop
mull
mov
mov
movsl
in
mov
jl
hlt
out
ds
inc
loope
inc
and
mov
jb
movsb
in
in
and
bound
and
mov
lods
lock
and
out
ror
imul
xor
or
mov
pop
in
mov
in
xchg
inc
aad
movsb
add
adc
inc
dec
mov
das
cltd
inc
fisubrs
test
mov
mulb
xor
xchg
imul
fnclex
popf
test
jle
popf
cmpl
leave
test
mov
add
jp
js
arpl
repz
xchg
roll
stc
fildl
or
jmp
inc
cmc
pushf
pop
mov
loop
mov
pop
push
inc
pop
ret
xor
arpl
mov
push
ret
xchg
xchg
mov
pusha
or
push
test
dec
mov
sbb
dec
dec
dec
push
sbb
neg
scas
lock
neg
and
push
nop
sub
les
inc
mov
push
sarb
xchg
in
aam
mov
sti
clc
or
jge
or
jo
out
mov
xchg
es
jmp
shr
add
mov
mov
lahf
push
lret
pop
inc
xor
push
js
sti
cld
bound
ret
hlt
mulb
jp
and
sti
dec
mov
xchg
imul
pop
fidivs
fcmovne
cs
pop
rcll
in
add
aad
enter
mov
push
int3
lds
in
add
push
push
loopne
roll
sarl
and
out
mov
mov
lcall
sub
insb
mov
fiaddl
mov
insl
dec
arpl
rcrb
mov
lahf
out
in
icebp
fucomi
cmp
mov
inc
das
jb
jb
xor
test
ret
outsl
jae
ret
cltd
add
ret
adc
sbbb
loop
pushf
pop
inc
xorl
mov
cld
jl
mov
mov
movsl
sbb
push
out
pop
inc
inc
xchg
mov
sub
pop
pop
cmp
push
and
scas
shrl
mov
ljmp
cmp
ss
sbb
add
cmp
movsl
and
dec
sub
sbb
sti
add
mov
mov
and
xchg
push
push
pop
mov
aam
outsl
pop
outsl
cmc
ljmp
add
dec
xor
jbe
sbb
xorb
rcll
or
mov
sub
push
cld
fdivr
cmpsb
in
mov
in
cmpsb
sub
outsl
pop
popf
out
mov
xor
add
lock
subps
popa
mov
xchg
out
and
inc
push
inc
out
cmp
into
or
stc
xchg
cmp
icebp
jnp
xor
jle
shr
push
daa
xchg
sbb
dec
pusha
in
fs
into
rcrl
jbe
iret
sbb
cmp
call
test
cs
xorl
jp
jle
scas
sub
pop
pop
adc
mov
mov
bound
frstor
sub
jb
subl
xor
dec
pop
and
and
or
fcmovne
sbb
adc
mov
jg
mov
adc
lea
push
arpl
or
mov
jb
jg
xor
sbb
xchg
mov
pushf
pusha
cmpsl
or
jb
jno
and
dec
idivl
mov
daa
push
jae
je
sub
and
loope
outsb
sti
push
rolb
xchg
xor
xchg
in
ret
push
popf
sub
cmp
sbbb
pop
sarl
adc
or
cmp
cmpl
mov
ljmp
lods
cmpl
incb
sbb
add
pop
inc
xor
cld
ficomps
pop
cmp
lret
fs
xor
mov
or
divps
in
and
movsl
push
jg
xor
dec
das
pop
and
lods
push
out
jecxz
pop
xor
aad
movsb
insl
sti
gs
sub
les
imul
psrld
mov
xchg
rorb
je
hlt
daa
mov
mov
jp
xor
dec
test
andb
pop
sbb
xchg
xchg
or
inc
in
insb
insb
popfw
mov
sbb
dec
mov
arpl
sahf
pop
shlb
sbb
jl
mov
daa
push
adc
mov
repnz
xchg
aad
movsb
clc
and
and
or
cmpsb
jo
daa
dec
shr
and
sbb
jb
inc
jge
cltd
pop
mov
dec
jmp
sahf
in
mov
jnp
dec
insb
int3
jae
push
mov
inc
mov
mov
out
adc
add
cld
jbe
inc
dec
out
sub
fnsave
sbb
mulb
stos
addl
rcrb
pop
inc
lret
sbb
out
cwtl
push
lret
dec
inc
out
cltd
sar
push
lock
hlt
daa
cmp
iret
leave
pop
arpl
ja
sbb
pavgb
mov
inc
push
jmp
int3
std
pop
cs
push
repnz
cs
addr16
aas
int
or
or
imulb
mov
mov
clc
enter
popf
jecxz
clc
inc
mov
inc
or
xchg
mov
cli
jns
mov
or
xchg
mov
push
cmp
add
out
xchg
push
scas
loop
mov
shll
ret
pop
sbbl
cmp
rolb
lahf
in
ss
ss
mov
aad
sub
and
dec
xorl
nop
jae
in
nop
imul
xchg
sub
pop
adc
or
jmp
jecxz
subl
adc
clc
addb
mov
pop
test
ret
iret
int
xchg
sbb
jns
movups
jne
add
incb
nop
loope
stos
push
sbb
scas
pop
xchg
mov
sbb
push
dec
lcall
pop
lcall
imul
cmp
mov
aam
jns
sbb
push
dec
lods
cld
cmp
cmp
outsb
or
lcall
adc
clc
jns
jae
mov
dec
mov
mov
fbld
jnp
xchg
mulb
mov
lock
mov
sbb
mov
cmpsb
js
jp
push
in
sti
mov
insl
pushf
add
in
and
fstpt
gs
sbb
push
out
or
cmp
lea
les
sbb
in
mov
or
xchg
lock
pop
pop
sahf
and
mov
push
push
fnsave
mov
or
shr
dec
inc
xorb
pop
push
into
and
mov
cmp
call
mov
js
repnz
stc
sbb
sbb
das
mov
and
iret
enter
add
add
mov
or
jbe
pop
sub
repnz
pop
test
stos
xchg
push
xchg
stc
mov
test
xor
test
int
xchg
lods
aas
sub
pop
insl
xchg
mov
pop
push
add
lock
mov
or
pop
mov
push
dec
jge
sti
push
lods
fimuls
loope
sbb
popf
mov
lock
dec
cmp
pop
and
dec
cmp
sbb
jns
shrl
jge
in
pop
movsl
sub
in
push
and
dec
inc
push
jecxz
mov
sbb
cmp
subl
sbb
lret
insb
insb
mov
dec
adc
and
add
lds
sub
or
aaa
sbb
jle
mov
mov
stc
mov
lea
dec
mov
cwtl
adc
cmp
and
mov
xlat
add
outsw
mov
loop
fdivrl
and
outsb
sbbl
pop
xor
fsubr
push
ret
scas
jb
jo
and
popa
xchg
imul
icebp
aas
cmpb
inc
pop
in
add
popf
rcll
orb
gs
mov
add
imul
push
jbe
mov
sub
push
sbb
cmpsb
out
stos
jbe
dec
xor
repnz
in
movsb
xor
xor
addr16
mov
add
fucomi
mov
mov
aam
addl
mov
or
mov
add
test
cmp
setg
arpl
or
fcompl
insl
shl
pushf
mov
inc
cmpsb
sbb
push
xchg
or
cwtl
loop
mov
pop
dec
imul
xor
mov
pop
aam
xor
dec
adc
pop
movsl
pop
sub
push
jmp
mov
ret
lret
mov
gs
sub
aaa
mov
shlb
cmp
jae
sub
outsl
lods
pop
inc
lods
mov
shll
mov
je
sub
xchg
rcrl
xor
insb
inc
or
jg
mov
subb
sub
pop
adc
xchg
pop
das
xchg
je
or
stos
sub
ret
arpl
and
divl
negl
jmp
push
mov
sbb
pop
testb
xchg
add
outsb
cmpsb
xchg
adc
idivb
mov
pop
mov
cltd
loopne
jl
xor
nop
icebp
cmp
out
ja
pop
mov
mov
stos
sbb
mov
mov
mov
fcmovnb
xchg
inc
sbb
xchg
test
push
ss
test
insb
ds
pop
cltd
or
pop
movsl
lea
arpl
cmp
mov
shlb
arpl
popa
jne,pt
dec
std
sbb
arpl
call
sbb
scas
lahf
ljmp
adc
xchg
dec
mov
dec
pop
xchg
xchg
movsl
add
push
sub
clc
cmp
dec
inc
mov
adc
inc
dec
push
or
fwait
push
dec
jno
bound
mov
jb,pt
xor
test
ds
push
negb
nop
pop
cmpsl
and
and
sbb
dec
add
mov
shll
mov
dec
nop
dec
mov
stos
insl
jmp
xor
andl
mov
xor
fstl
je
popf
pop
rolb
call
je
addr16
cmp
and
test
mov
cmp
pop
dec
push
and
test
dec
mov
xor
mov
or
add
mov
xor
rolb
imul
test
sahf
enter
lds
fstl
push
lcall
stos
sub
mov
test
lcall
sub
loopne
pop
hlt
inc
or
xor
cmpsb
cmp
jnp
push
and
sti
push
xor
fsubrp
std
jg
jle
repz
cltd
jl
ljmp
lods
test
sub
bound
imul
pop
pop
data16
pop
mov
dec
mov
add
mov
push
ret
out
shr
or
add
int3
cmp
mov
jmp
jmp
sbb
adc
cmpb
and
cmp
mov
xor
aaa
jecxz
clc
mov
out
and
fistl
mov
jle
sti
out
aad
add
arpl
mov
sub
adc
mov
pop
jp
push
lods
jno
cmpsl
fiadds
mov
add
aaa
sub
fidivl
sti
pop
sbb
cs
push
add
int
call
mov
push
lret
inc
loope
addsubpd
data16
mov
push
sbb
les
mov
push
cltd
mov
cmp
cmp
jg
jp
loopne
lret
ret
rclb
pusha
dec
subl
aam
jo
pop
sbb
mov
sub
or
dec
sub
fwait
ret
insl
or
out
cmpsb
jmp
pop
push
pop
push
test
and
add
popf
xor
sahf
outsl
lcall
out
push
in
out
dec
sbb
loope
cmp
mov
push
and
je
cs
imul
cli
push
mov
test
jo
fmulp
cs
add
out
daa
mov
loopne
and
clc
movsl
js
add
xchg
adc
dec
pop
adc
das
pop
dec
inc
xchg
mov
repz
lahf
cmpsb
mov
decl
or
sub
xchg
shrw
mov
pushf
pop
sbb
insb
mov
sbb
stos
les
cmpl
sub
into
sub
push
aam
cmp
push
push
cmp
rcrb
ss
push
adc
lret
sub
inc
jno
xlat
int
jle
iret
loop
jp
push
dec
mov
mov
and
sbb
in
sbb
push
jp
jbe
pop
dec
xlat
sub
adc
adc
cs
xlat
test
push
fs
inc
mov
xchg
lret
cmp
xor
lods
loop
lret
dec
shll
pop
call
stc
add
sbb
testb
insl
lods
repnz
push
imul
in
loopne
lods
sbb
fsubl
sbb
push
sahf
ja
addr16
add
add
leave
adc
xchg
mov
imul
adc
call
dec
arpl
xchg
xor
shlb
sbb
push
rdmsr
fdivl
or
add
jae
push
inc
dec
ret
clc
cmp
xor
xchg
xchg
shlb
cmp
and
into
mov
jecxz
xchg
stos
inc
aaa
cltd
inc
clc
sub
pop
sbb
movsl
push
xor
mov
fsts
pop
jg
cmp
adc
pusha
lcall
test
add
jmp
imulb
pop
test
cmc
aam
and
sahf
jmp
psubd
gs
jne
aam
mov
dec
mov
ret
repnz
add
aas
inc
xorl
mov
aas
xchg
shll
std
add
cwtl
adc
mov
dec
jp
sbb
dec
sbb
test
push
pop
popl
xchg
and
push
outsb
arpl
repnz
jbe
mov
sbb
mov
push
outsl
pop
notl
pop
ffreep
ret
ret
hlt
and
and
je
push
lods
outsl
ja
iret
pop
sbb
inc
mov
dec
mov
imul
pop
icebp
cld
mov
test
es
jle
cmp
test
test
adc
xchg
filds
dec
xor
cli
in
decl
mov
nop
sahf
mov
fiaddl
call
xor
dec
jg
icebp
or
sub
cmp
inc
aaa
inc
or
addr16
les
cmp
and
ja
imul
pusha
sbb
repz
fsin
and
mov
xor
sub
lea
mov
loope
jle
mov
js
push
lock
mov
clc
imul
mov
lods
loope
notl
loop
sbb
out
ret
out
cmp
into
mov
inc
xchg
xchg
les
inc
mov
incb
testb
sbb
in
or
or
iret
scas
cld
js
movsl
test
mov
jp
mov
loop
scas
call
pop
xchg
sbb
mov
out
or
je
aam
push
cmpsb
popa
add
push
in
in
inc
pop
call
lods
in
rcrb
aaa
inc
sub
outsl
xchg
mov
jecxz
push
in
out
in
mov
orb
mov
fdiv
daa
and
push
into
fwait
negl
add
mov
sti
js
dec
jo
scas
popa
arpl
push
fstpl
sbb
push
inc
cmp
add
pushf
sbb
fs
les
stos
pop
into
xchg
loope
mov
add
jns
add
mov
pop
in
jno
mov
jle
cmp
sahf
mov
push
push
push
int
sbbb
dec
aam
in
icebp
outsb
int3
sar
in
and
mov
les
in
mov
lar
jae
push
notl
scas
mov
andb
sbb
hlt
dec
sub
imul
test
fwait
andl
dec
sbb
push
adc
popa
push
or
in
rorb
enter
fmulp
xchg
pop
push
push
mov
jo
push
dec
repnz
sahf
orl
xchg
adc
adc
gs
and
daa
sarl
out
pop
mov
xor
js
inc
das
xor
mov
xlat
ljmp
loop
add
stc
test
xchg
inc
pop
and
inc
ljmpw
stos
fdivl
xchg
shl
mov
rcll
dec
aaa
gs
shld
sub
loop
clc
xor
dec
cmp
push
or
out
lods
mov
movsb
and
mov
inc
lds
fistl
pop
cmp
xlat
mov
fwait
jecxz
and
jmp
cmp
lret
pop
mov
test
jg
xor
into
stos
fsubr
mov
mov
ss
or
adc
mov
in
test
fwait
imul
insb
xchg
test
aad
std
mov
sbb
int3
push
inc
push
hlt
push
sbb
xchg
fs
sbbb
lods
mov
ljmp
je
loope
mov
sbb
dec
movsb
or
rol
inc
add
out
out
mov
cli
mov
jmp
clc
sub
xchg
out
mov
cmp
pop
gs
cmp
jl
aad
lds
push
outsl
lock
push
lahf
cmc
out
sub
loope
inc
ror
scas
inc
addr16
adc
test
call
inc
in
jmp
in
rcl
xchg
pop
inc
in
popa
stos
popf
ret
xor
xchg
icebp
rcrb
cmp
cmp
aam
and
push
adc
push
mov
into
stos
add
stos
out
nop
hlt
or
pop
dec
mov
jmp
mov
mov
xchg
sbb
icebp
sti
int3
dec
mov
mov
or
push
rorb
mov
xchg
cli
orb
lret
jmp
inc
test
lds
shll
dec
ljmp
dec
pop
cmpsb
rcr
in
or
dec
sbb
outsl
icebp
adc
xor
pop
clc
rorb
and
push
jae
xor
nop
xchg
xor
add
cltd
jo
inc
inc
lret
mov
and
push
lods
sbb
pop
sbb
and
scas
shlb
ret
jecxz
push
mov
mov
sti
push
pop
sarl
mov
jne
fucom
xchg
int3
imul
jl
ret
mov
outsb
repz
pop
arpl
inc
cli
push
les
dec
mov
ret
sti
adc
lock
ja
fnstcw
out
xchg
mov
ss
mov
and
cld
mov
out
dec
daa
call
and
jge
dec
stc
cmpsl
mov
sbb
mov
add
jecxz
movsb
push
test
mov
into
pop
test
sub
mov
push
cwtl
xchg
xchg
dec
in
es
cmp
data16
popa
add
out
adc
cmpsb
lock
jno
xchg
cltd
mov
push
xor
jb
xor
inc
push
jbe
stc
adcb
mov
jne
jl
fnsave
and
call
sar
ds
enter
ss
das
imul
cmpb
subb
fwait
sahf
pusha
xchg
and
out
pop
shrb
rcrl
xchg
ja
popf
xchg
imul
push
pop
jnp
mov
sub
push
lcall
dec
cmp
negl
iret
ret
lea
das
jns
out
outsl
stc
xchg
fdivrl
std
mov
cmp
push
popl
ja
xor
lods
stos
and
daa
adc
xchg
inc
mov
mov
dec
dec
test
fisubs
pop
xor
mov
subl
sarl
pushf
sbb
ljmp
fstpl
pop
fwait
and
mov
push
ret
adc
pop
scas
dec
mov
cmp
aam
divb
push
movsb
xchg
js
pop
movsb
fwait
nop
mov
lock
or
mov
adc
outsl
adcl
dec
lds
test
icebp
testl
xor
daa
or
xchg
ret
stos
je
and
mov
lret
jnp
aas
xchg
nop
xor
add
jg
movl
xor
sub
sub
mov
mov
test
jne
sti
iret
pop
xchg
les
sub
mov
fwait
sbb
pushf
sti
dec
sbb
out
xor
cmp
jo
and
scas
inc
lods
loopne
mov
mov
jae
lret
xchg
xor
int
lret
repz
test
pop
shrb
dec
sbb
leave
into
cmp
mov
xor
popa
mov
test
movsb
out
stc
push
xor
clc
pop
flds
xor
push
or
ljmp
mov
lock
scas
jp
xchg
xorb
xor
bound
sahf
lea
xchg
aam
pop
hlt
mov
push
mov
es
mov
iret
in
in
mov
push
shrb
cmp
xor
push
lret
in
mov
pop
nop
sub
int3
pop
or
loopne
stos
icebp
aaa
lcall
add
add
mov
inc
dec
push
mov
nop
mov
push
mov
mov
and
sub
vcmpps
inc
in
mov
stos
popa
dec
popa
push
cltd
lahf
outsl
xchg
idivb
cmp
pop
add
mov
push
push
pusha
pop
adc
outsl
cmp
outsl
into
scas
mov
push
jg
incb
or
push
push
inc
mov
aas
pusha
call
in
dec
jle
pushf
gs
lea
jmp
pop
xorb
cmp
xchg
pop
dec
addl
jle
cli
push
sub
mov
adc
pop
mov
lret
push
pop
mov
pop
pop
test
test
jne
or
push
cwtl
or
dec
lcall
fcompl
cld
in
ljmp
or
jmp
and
adc
arpl
subl
push
or
hlt
xchg
jle
hlt
push
loop
cmp
nop
cli
data16
stos
sbb
push
and
jecxz
sub
repz
cmc
fwait
iret
push
shlb
mov
divl
mov
jg
mov
iret
xchg
mov
movsb
pop
sub
cmp
inc
xchg
aas
movsl
loop
cmpsb
pop
inc
cmp
stos
push
push
push
sbbb
ret
dec
ds
lods
xchg
out
sahf
xlat
cli
cltd
sub
gs
mul
ja
cmc
push
vpsadbw
sub
cmpsb
pop
pop
jg
mov
jp
add
mov
roll
mov
mov
adc
das
jno
and
pop
hlt
int3
mov
mov
lods
pop
jp
or
pop
add
loopne
cltd
xchg
jne
push
jbe
xchg
shll
sub
outsl
push
insl
pop
les
jl
mov
mov
iret
stc
leave
in
negb
into
add
or
mov
jl
inc
mov
mov
xor
mov
add
fldt
outsl
jp
nop
add
in
shlb
fcmovb
mov
xchg
fnstsw
pop
inc
fs
push
mov
cli
pop
cmp
arpl
movsl
notl
xchg
xchg
inc
mov
mov
out
rcl
or
cmp
adc
sbb
mov
stos
xchg
mov
sub
dec
lods
adcl
dec
push
adc
rcrl
ja
jns
jne
mov
imul
cmpsb
sbb
mov
jl
jge
cltd
out
mov
mov
push
or
and
add
rcrl
stos
test
fstpl
mov
aam
popa
adc
mov
insb
cli
cmpsl
jne
adc
jnp
repz
js
xchg
rcrl
insb
push
mov
inc
adc
pop
ficomps
pushl
jl
inc
stos
ja
mov
or
call
push
jnp
add
dec
dec
xchg
mov
and
and
cmc
jge
jmp
mov
popa
sarl
jg
dec
adc
and
cmc
or
lock
fstl
stos
cwtl
and
cmp
xchg
ja
movsb
adc
cmp
inc
or
hlt
out
imul
js
and
jge
or
popa
mov
pop
push
movsl
stc
or
ret
dec
insb
or
arpl
mov
mov
scas
dec
test
outsl
inc
dec
cmp
into
mov
fidivl
adc
push
out
pusha
adc
adc
cld
adc
pop
popf
hlt
add
push
xchg
push
sub
dec
jmp
imul
ret
inc
pop
test
push
pop
adc
dec
ds
and
rclb
lods
stc
int3
jecxz
dec
pop
mov
jmp
xchg
negb
inc
decl
jecxz
cmp
fnstcw
out
push
shr
les
xor
call
aam
popl
insl
sahf
adc
ret
push
mov
adcl
shrl
mov
gs
repz
sbb
mov
cmpsb
dec
test
jo
loopne
int3
fbstp
adc
js
or
mov
test
stc
add
arpl
xchg
in
push
adc
mov
ret
jno
mov
add
mov
mov
inc
cmp
daa
lret
je
dec
lret
push
imul
mov
mov
push
movsl
add
mov
or
jns
movsl
sub
and
test
repnz
js
test
out
out
movsb
cltd
xchg
inc
xchg
cmp
adc
push
xchg
pusha
push
aam
bound
xchg
test
pop
bound
and
pop
jge
mov
lret
jmp
inc
mov
shlb
inc
sub
sub
inc
mov
les
jmp
loop
push
cmp
push
mov
adc
ret
vrcpss
sub
je
pop
mov
loope
adc
flds
nop
inc
cmpsl
das
rcl
out
jle
push
icebp
in
or
pop
cli
iret
fmul
pop
test
jge
pop
mov
aas
push
pushf
call
lahf
mov
ja
push
jns
push
outsl
stos
mov
cmc
pop
cmpsl
leave
adc
mov
movsl
popf
mov
sub
sarl
or
lods
mov
sub
jno
pop
mov
in
mov
xchg
shr
jp
push
push
cld
sub
sar
test
repnz
xchg
sbb
call
sub
dec
fimuls
sbb
popa
out
pop
lock
dec
adc
dec
insb
clc
int
push
in
mov
orl
inc
lahf
push
mov
sbb
hlt
push
xchg
jecxz
loop
dec
cmpsl
xor
ljmp
mov
pop
mov
test
in
icebp
and
ret
adc
adc
repz
sbb
lods
pop
scas
out
add
adc
or
enter
loopne
lcall
out
movsl
imul
loopne
sbb
xchg
out
pushf
xor
std
mov
and
push
mov
arpl
pusha
imul
push
dec
mov
and
dec
xchg
sti
movl
dec
inc
inc
inc
lahf
sbb
xor
movsb
xchg
fs
xchg
jo
or
clc
sub
iret
mov
outsb
push
or
cmp
arpl
rcrb
aad
cmp
mov
outsb
push
lock
sub
adc
and
aaa
jns
mov
out
pop
add
or
jl
push
cmp
adc
sbb
sahf
in
movsb
mov
mov
add
cmp
or
mov
inc
adc
xchg
mov
add
jbe
xchg
call
dec
int3
pop
aaa
sbb
inc
imul
dec
aaa
and
push
lea
sbb
loopne
sbb
rcr
ss
cli
gs
dec
mov
cmp
mov
int
jne
lea
adc
mov
adc
mov
ret
hlt
int3
xchg
mov
daa
andl
xchg
jnp
int
adc
mov
cmp
rcll
jge
fcoms
inc
xchg
add
mov
data16
mov
lods
adc
lods
fidivl
push
arpl
cs
or
jne
imul
sbb
enter
stc
ds
movsb
sub
les
lds
les
jo
pop
cmp
dec
ret
adc
sub
dec
and
xchg
aam
jl
in
mov
mov
inc
sub
mov
and
mov
fisubl
jp
enter
sti
push
push
adc
and
sbb
scas
pushf
dec
and
jne
mov
jp
or
and
xchg
or
fsts
test
gs
mov
enter
movsb
std
rorl
into
jo
cmp
imul
push
bound
aam
jnp
lock
jae
clc
mov
and
stc
inc
lahf
xchg
adc
cmp
and
inc
xor
es
add
xchg
mov
nop
cmp
into
jae
add
sbb
dec
jge
cmp
adc
adc
mov
sar
xor
nop
push
loopne
jb
inc
xchg
imul
ror
xchg
in
stc
shll
movsb
mov
adc
mov
xchg
or
lea
out
mov
ret
lret
push
mov
aad
popa
hlt
inc
pop
fdivrs
adc
cmp
subb
imul
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
mov
sub
mov
and
push
sub
mov
sub
mov
orl
lea
subl
mov
add
mov
mov
adcl
mov
xor
subl
add
mov
mov
add
mov
mov
add
mov
subl
mov
add
add
push
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
addl
mov
adc
mov
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
adcl
mov
mov
mov
add
xor
or
jmp
paddsw
mov
dec
cmpl
pop
bound
dec
jae
adc
dec
lods
cwtl
xlat
lcall
sti
cmp
fs
xchg
loope
jl
push
xor
ss
sub
js
aam
mov
aaa
or
jbe
dec
jg
add
jg
inc
inc
sub
add
fildll
ljmp
testb
ds
cmp
scas
xor
addr16
fstl
into
add
adc
adc
loop
jmp
adc
mov
ja
fnstenv
sarl
movsl
cmp
pop
push
lcall
or
imul
inc
clc
inc
add
in
stos
jo
inc
mov
push
subl
cmc
mov
repz
pop
inc
inc
fs
arpl
aad
scas
jp
add
test
mov
pop
dec
je
xchg
test
xchg
mov
dec
jl
test
fsubs
push
enter
std
int
dec
dec
out
or
inc
test
in
test
ret
ficomps
inc
cli
push
repz
repz
cmp
sub
push
mov
int3
mov
jns
xchg
inc
outsb
ds
xchg
mov
loop
xor
mov
push
xor
push
out
push
lahf
popf
paddsw
add
inc
aaa
xor
std
repnz
mov
jmp
into
pop
dec
pushf
cmpsb
mov
dec
sbb
mov
mov
xlat
sub
adc
add
mull
lret
cltd
xor
nop
pop
xchg
mov
mov
jle
lods
out
mull
inc
es
setno
shlb
stc
inc
rorb
dec
xchg
pop
js
loop
sbb
sub
into
xchg
or
push
mov
das
push
pop
mov
cmp
xor
and
les
sbb
insl
mov
push
adc
int3
bswap
pop
mov
pop
lcall
xchg
jp
das
jl
sti
pop
mov
mov
inc
pusha
or
add
lcall
xor
add
jae
mov
and
and
iret
jle
addr16
test
ret
push
shlb
add
jno
pop
xchg
pop
mov
sahf
adc
push
xadd
sub
mov
in
jmp
addr16
loope
lcall
popl
ret
jnp
loopne
int
and
push
cmp
test
popa
int
sbb
imul
out
mov
xlat
push
lods
and
sbb
arpl
mov
mov
arpl
clc
and
jae
push
in
imul
out
out
mov
gs
stos
dec
js
bts
xchg
fstpl
scas
pop
in
fcoms
repz
jmp
inc
pop
pushl
or
xor
mov
rolb
mov
mull
shl
dec
xor
lods
and
jle
sahf
cmp
jno
cmp
mov
cmp
jno
lods
xchg
lcall
dec
sub
aaa
cmp
or
mov
and
fwait
push
mov
cs
xor
add
mov
or
icebp
pop
cmp
dec
add
pop
add
ror
add
pop
jmp
ds
fisttps
ficoml
jmp
sub
stc
jne
cltd
cltd
cmp
fsubl
inc
test
xor
inc
add
cmc
call
and
add
incb
pop
or
pop
orl
into
and
inc
xchg
xchg
nop
sub
inc
xchg
push
xor
sbb
add
mov
xor
or
in
ss
enter
shrb
cmp
inc
icebp
inc
inc
xchg
xchg
and
fneni(8087
xor
adc
scas
inc
int
xchg
add
mov
sbbb
mov
xchg
inc
push
inc
mov
in
jae
ret
mov
lds
inc
divb
jno
add
arpl
andb
push
mov
negl
lahf
or
addl
mov
sub
push
add
mov
push
push
mov
push
and
mov
mov
mov
mov
mov
mov
jo
mov
or
pop
sbb
jmp
pop
xchg
add
jge
test
and
mov
inc
repz
push
popf
lret
inc
negl
add
cmpsl
xorl
or
sbb
mov
jae
fstl
test
je
mov
jbe
repz
xlat
dec
add
daa
jne
repz
in
push
adc
sbb
data16
add
mov
and
pop
mov
mov
push
pushf
nop
inc
adc
cltd
jbe
pop
push
pop
pusha
add
and
xlat
fmuls
dec
fildll
push
xor
enter
and
jae
cmpsb
mov
iret
mov
xor
pusha
adc
sbb
fisubrs
mov
adc
out
popf
add
cmp
sbb
push
mov
ret
xchg
mov
into
cltd
jp
mov
lahf
in
loop
ss
dec
mov
sbb
inc
cmc
xchg
dec
stc
mov
or
mov
fbstp
sbb
mov
add
mov
sbb
xchg
mov
rcrb
dec
test
mov
push
aam
popf
les
xchg
inc
filds
cmp
or
mov
push
aad
jp
mov
icebp
cmp
jle
inc
clts
push
xchg
aaa
test
dec
and
or
outsb
dec
xlat
stos
xchg
in
rcll
jns
mov
adc
fisttps
or
mov
push
jno
leave
outsl
ret
fistpl
leave
xchg
adc
mov
jno
mov
pop
mov
in
pop
out
aaa
std
inc
mov
into
xor
dec
push
cmp
popa
pop
xchg
les
iret
and
cmp
dec
xchg
push
mov
mov
dec
cmp
mov
insb
mov
xor
jne
sahf
les
push
mov
dec
mov
ss
pop
push
scas
xchg
mov
dec
ss
xchg
cmp
sbb
push
cld
sbbb
sub
pop
loope
test
mov
or
add
fstpl
mov
or
mov
xchg
fsubrp
pop
xor
repz
inc
sub
pop
xor
hlt
int
ret
insb
mov
inc
xlat
test
inc
and
jmp
xchg
mov
cmp
in
shrl
popf
adc
sub
lods
pop
add
scas
in
fwait
add
test
mov
ucomiss
dec
xor
sarl
dec
imul
push
mov
imul
pop
stos
xchg
xor
sbb
or
pop
inc
scas
idiv
repz
into
nop
je
cmpsl
add
jge
or
sbb
popa
jl
or
repz
adc
aam
int
aad
inc
test
sbb
stos
cmp
adc
add
std
pusha
insb
ret
faddp
jp
push
mov
mov
cli
xorb
adc
mov
arpl
mov
adc
cmp
and
mov
lret
mov
cwtl
or
hlt
add
outsl
add
insl
mov
jge
jle
jg
repz
loopne
dec
out
adc
jmp
daa
cli
loope
outsb
outsb
je
fnstcw
jmp
xor
cmp
gs
popf
loopne
mov
mov
adc
add
xor
and
mov
adc
and
pop
repnz
outsl
cmp
cwtl
xchg
in
fnstenv
mov
pop
aam
sti
xchg
fs
loopne
fs
dec
in
push
mov
mov
shll
and
pop
adc
loopne
aad
loopne
lock
mov
gs
lods
adcl
pushf
mov
aad
mov
jo
movsb
shlb
mov
aaa
cltd
ret
stos
rcl
add
jo
xor
xchg
iret
mov
shlb
cmpsl
popl
push
jne
adc
cmp
and
sub
cmpsb
pushf
ret
ret
imul
and
test
dec
inc
hlt
je
inc
aam
lahf
cs
inc
jmp
xor
inc
loope
cmp
fcompl
mov
jge
jmp
cmpsl
iret
pop
out
sarl
icebp
out
xor
hlt
cld
mov
ret
mov
scas
test
mov
mov
sub
push
pop
add
gs
insl
add
cmp
mov
push
sbb
jbe
je
mov
mov
outsb
xchg
nop
pushf
jmp
test
push
or
cli
inc
jecxz
cld
xlat
sbb
mov
and
jg
adc
push
decb
mov
mov
aad
fsts
fs
lods
fisttpl
int3
push
jp
gs
pop
adc
fldcw
mov
jae
pop
pop
xchg
xor
and
gs
xchg
or
lret
mov
testb
or
hlt
out
in
in
xchg
dec
aas
xor
mov
mov
pusha
movsl
and
pop
push
jmp
notb
stos
call
or
arpl
xor
js
addr16
jns
test
xor
das
in
xor
cwtl
js
pop
inc
jnp
pop
jae
loope
sub
ficompl
add
mov
test
add
jl
stc
sbb
lcall
int3
and
int
in
ret
xor
mov
adc
loopne
push
lods
pushf
add
pop
mov
add
fcompl
inc
popf
jmp
adc
push
dec
out
sbb
lods
mov
sub
int3
push
push
pusha
shr
xchg
pushf
xchg
mov
fldenv
js
lret
fs
movsb
fisubs
xor
cmpsb
cs
pop
cltd
clc
cmpsl
out
inc
inc
dec
lret
ljmp
xchg
xchg
dec
in
out
jmp
xchg
aam
sahf
pop
lret
pop
xchg
mov
pop
in
pop
xor
lahf
jp
enter
jbe
js
xchg
pop
ret
jae
mov
sbb
xchg
add
fsubrl
jbe
popa
out
fucomi
jle
imul
jle
mov
mov
lret
loopne
stc
push
in
push
cmpsb
sarb
addl
scas
test
or
mov
shrb
sbb
xor
into
pop
stos
fcom
lods
stos
mov
mov
enter
mov
add
in
xlat
jo
lretw
out
sbb
mov
jl
cmc
shrb
xchg
pop
icebp
enter
adc
lods
popa
push
or
inc
aaa
lcall
inc
mov
nop
cmp
jle
les
mov
cli
test
cmp
xor
ljmp
fs
ja
nop
sbb
daa
jp
rcrl
jmp
cmp
or
mov
inc
add
lcall
sbb
fcmovu
xchg
inc
pop
cmpsb
popa
dec
push
xchg
decb
push
mov
lods
pop
dec
lret
ds
call
test
stos
mov
cmp
add
mov
mov
cld
inc
test
adc
xchg
xchg
lcall
hlt
push
cmp
ds
bnd
incb
test
jb
fnsave
mov
loop
mov
insb
jp
dec
aad
pop
sub
cmp
push
ljmp
cmp
out
call
stos
test
xchg
fs
fdivl
add
inc
test
xchg
std
imul
jecxz
xor
pop
insb
add
dec
xchg
cmpsb
cmc
jns
cmpsl
sti
jp
insl
mov
sub
dec
jle
cltd
xor
push
lahf
lea
xchg
mov
nop
inc
inc
or
test
sub
lret
les
xor
mov
cmp
les
cltd
pop
sahf
xchg
mov
ret
mov
pop
test
insb
fcoms
pop
xor
pop
fs
fdivrl
stos
je
add
test
and
mov
mov
jb
pop
lahf
into
mov
add
into
aad
push
push
jae
in
js
shrb
xchg
hlt
mov
add
ds
call
jg
cmp
cmp
and
popa
mov
sub
sub
testb
mov
push
sub
cmpsb
sti
data16
out
int3
call
outsb
add
adc
out
lods
stc
push
xor
push
push
jnp
fcmove
adc
out
sub
testl
adc
fiadds
rcll
insb
cmp
fcoms
jns
push
cli
jno
fmuls
and
outsb
cmp
fwait
mov
lret
sub
pop
out
xchg
lods
sub
push
push
cmp
cmp
enter
sub
test
insl
mov
orb
mov
push
icebp
imul
mov
xlat
jmp
outsb
jo
addr16
push
push
leave
push
fiadds
andl
cmp
roll
dec
cmp
ret
adc
mov
out
push
or
inc
pop
in
int3
sbb
jo
pusha
outsl
jb
fnsave
cs
push
aaa
and
jno
cmp
les
into
adc
and
cmp
hlt
ds
sbb
fstl
jmp
outsb
rcrb
daa
mov
or
pop
mov
sub
jp
dec
and
lahf
sbb
or
out
xor
lcall
mov
ss
mov
cmp
jl
sbb
loope
inc
loop
sub
sub
std
mov
int3
int3
jl
sub
jb
jno
mov
sbb
call
movsb
fcompl
push
mov
and
sub
xor
mov
push
js
push
int
fistps
jne
scas
call
shrb
int
add
jns
repz
clc
cmp
sbb
cmp
mov
mov
iret
jnp
test
pop
mov
ljmp
dec
cs
jns
inc
xchg
cmp
outsl
sarl
lret
cmp
jg
and
cli
loop
push
loopne
xchg
dec
ss
cmp
xchg
jo
out
lock
insb
adc
mov
push
mov
push
test
mov
or
mov
pusha
mov
out
xchg
loope
sbb
gs
jns
out
jae
jmp
rcr
lods
shll
pop
fistpl
pop
cmp
or
mov
add
mov
xlat
lret
mov
mov
sub
idiv
push
sbb
ret
mov
int3
or
out
fbld
mov
adc
xchg
mov
mov
inc
push
sbb
mov
push
stos
add
xor
cltd
or
adc
and
cmpsb
scas
jmp
inc
cmpsl
in
cli
je
hlt
or
in
push
ror
jnp
add
shrl
jmp
adc
test
data16
adc
add
inc
push
mov
sub
fstl
shll
ret
add
gs
xchg
and
sbb
shlb
adc
jne
xlat
push
std
out
push
mov
pmaxsw
sub
fisubrs
mov
insl
or
or
dec
xor
sbb
jae
dec
rcl
movl
and
aad
cltd
outsb
cmp
xor
and
ficompl
push
inc
mov
lea
out
mov
mov
test
or
cmp
and
or
xchg
pop
es
int
cld
imul
push
mulb
lods
out
rclb
or
sub
sbb
cmpsb
stos
mov
lds
nop
pop
in
fistpll
into
or
lods
shr
jb
lods
daa
cmp
data16
mov
cmp
gs
in
insb
cs
xchg
jl
dec
test
popa
push
cmp
jae
iret
mov
jo
in
aad
jp
push
ret
test
mov
xor
pushf
jbe
dec
leave
ret
shlb
idiv
mul
push
loope
pushf
xchg
movsl
sbb
mov
mov
test
and
bound
jne
adc
outsl
stos
in
aas
inc
test
xchg
xchg
idivb
add
in
push
dec
sbb
cmc
cmpl
mov
xchg
mov
mov
mov
dec
pop
mov
dec
add
dec
clc
cmp
mov
stos
inc
mov
inc
rcr
cmp
jmp
and
js
leave
mov
push
sub
movsb
scas
repnz
xor
cld
sahf
dec
sbb
xor
call
cmpsb
lea
inc
pop
vpandn
jbe
movsb
imul
cmp
loope
mov
mov
imul
fwait
loop
add
je
fstpl
rcrb
xchg
add
mov
lds
std
and
cld
hlt
mov
outsb
sub
jnp
sarl
sbb
dec
jle
call
pushf
fucomip
xchg
and
mov
pop
add
mov
mov
stos
in
fiadds
cmp
fimuls
lock
mov
addr16
xor
test
and
jnp
add
ds
or
mov
jecxz
push
mov
adc
repz
dec
sub
fcoms
xor
dec
lods
push
in
out
ret
cli
fldenv
dec
xchg
out
daa
in
insl
stos
jle
and
add
pop
mov
dec
inc
je
sub
or
xchg
jbe
cmpsb
pop
jmp
pop
sub
aad
arpl
lods
rcpps
mov
sbb
and
add
insl
out
scas
out
ret
jmp
and
jp
mov
mov
jb
movsl
dec
dec
into
sbb
pop
inc
inc
scas
std
pop
cmp
scas
inc
lcall
push
push
pop
in
ret
push
arpl
rclb
nop
fisttpll
aaa
insl
lds
mov
add
in
cmp
adc
xchg
mov
dec
or
popa
mov
or
dec
andb
jb
dec
cmc
in
adcl
imul
inc
scas
xchg
hlt
mul
shrl
cld
sub
jnp
clc
jne
cmp
cmpsl
lods
int3
push
jmp
push
fcompl
jns
loope
ja
pop
xor
jle
lcall
push
mov
mov
ljmp
daa
insl
or
test
cmp
and
inc
stos
adc
aaa
add
sub
jl
addr16
xor
lds
popf
pop
cmp
mov
mov
xor
insb
rcll
xchg
dec
icebp
add
lret
add
loop
fdivrl
popf
rolb
mov
mov
jmp
cltd
and
lret
call
inc
or
test
pop
lods
mov
inc
xor
ror
js
pop
cmp
mov
xchg
jae
mov
idiv
mov
add
movsb
mov
sbb
jne
add
les
add
mov
insl
mov
jb
xchg
test
hlt
cmc
imul
je
or
test
jne
lea
mov
dec
pop
mov
push
and
jne
mov
adc
int3
lods
mov
cmp
andb
cmp
js
je
inc
das
in
pop
sub
jo
mov
js
dec
mov
rorl
loop
std
shl
or
inc
cmp
mov
mov
and
adc
adc
xchg
mov
les
add
and
into
pop
fldt
push
inc
cmpb
cmp
loope
sbb
dec
sub
mov
or
mov
jo
faddp
push
or
mov
imul
ljmp
in
mov
js
pop
mov
out
insb
xor
or
push
scas
push
add
data16
fnstenv
and
cmp
push
jge
or
test
mov
xchg
and
ret
sub
cmp
inc
jbe
pop
cs
sbb
outsl
jle
add
xor
xchg
sbb
testb
dec
and
xchg
cld
add
mov
add
pop
add
add
pop
mov
push
lcall
xorb
adc
pusha
push
sub
cli
out
rcr
bound
xchg
push
aad
cld
loop
and
cmpsl
jno
cmp
and
or
pop
or
movsl
stc
adc
aaa
pop
rcll
fcoml
jp
push
xchg
fwait
sbb
les
xchg
dec
lds
jmp
xor
sub
out
scas
push
out
jno
dec
fisubl
cmpsl
negb
and
pop
or
std
mov
pop
insb
xor
mov
xor
js
sahf
xor
mov
test
mov
xor
dec
inc
rcr
sub
das
mov
insl
xchg
fcompl
cli
stc
xchg
add
mov
je
push
fisubrl
test
xchg
sbb
fimuls
cwtl
cmp
leave
jno
cltd
mov
xchg
pop
jg
fisubs
push
and
jle
or
pop
das
xor
xchg
or
mov
mov
sbbl
inc
lds
iret
das
addr16
xor
xor
jne
shlb
xchg
ljmp
mov
jmp
sub
xor
xor
sub
jecxz
pushf
arpl
cld
fmul
mov
imul
into
nop
fwait
xor
data16
add
test
aas
pop
repz
mov
dec
shrl
repnz
push
inc
fidivrl
fsubs
rcrb
push
and
in
mov
insl
aam
and
fucomip
lret
imul
lret
cld
nop
test
clc
pop
inc
fbld
lock
sahf
int3
lea
push
shl
adcb
ja
pop
xor
and
iret
enter
and
jne
ds
jmp
pushf
fsubp
movnti
addb
scas
aam
je
ficoms
movb
sbb
mov
shr
inc
dec
sub
ret
mov
push
inc
fmul
mov
and
jl
pop
imul
or
mov
mov
push
jnp
adc
dec
push
pop
mov
insb
sti
lret
sub
mov
rolb
dec
nop
fstp
add
cmpsl
aad
mov
ret
cwtl
sub
sub
dec
sub
mov
cmovs
lret
jb
push
inc
dec
stos
xor
scas
sbb
dec
ljmp
pop
std
leave
and
imul
jecxz
pop
in
in
mov
cltd
stos
fisttpll
test
and
adc
inc
pushf
data16
cmp
mov
sbb
push
rcrb
mov
mov
xor
insb
xor
sbb
sub
pop
lea
mov
push
inc
mov
cmpsl
lods
sub
lea
jecxz
xchg
cli
jg
jns
or
mov
popa
adc
lahf
stos
int3
lahf
push
inc
add
subb
fsts
insl
popa
cwtl
sbb
push
mov
scas
lcall
add
inc
test
rol
sahf
dec
clc
rcr
cmp
in
bound
scas
jmp
out
ds
loopne
pusha
loope
dec
push
sub
sbb
shl
test
lahf
in
mov
sbb
sub
inc
or
shlb
aaa
ja
or
or
sub
jle
dec
xchg
out
jmp
mov
pop
push
lret
negb
outsb
pop
sbb
movsb
fimull
xchg
lods
sbb
cmpsb
push
ret
ss
outsb
pop
lods
xor
mov
test
or
xchg
mov
and
cmc
gs
nop
pop
jbe
xchg
ja
fs
test
adc
jl
pop
aam
cmp
pop
or
adc
daa
push
sbb
pop
xchg
push
cwtl
xchg
in
xor
adcl
ret
inc
inc
and
xor
sahf
repz
add
cmp
xchg
out
adc
bound
stos
aaa
in
adcb
iret
inc
pusha
arpl
sbb
xor
jecxz
xchg
adc
dec
sarl
aaa
out
push
push
inc
sub
mov
sbb
lea
adc
or
in
imul
outsb
jle
jns
aam
push
mov
lcall
xor
dec
fmul
cmp
pop
bound
jmp
dec
out
outsl
and
aas
sub
movsl
mov
add
and
pop
adc
hlt
mov
shll
push
inc
add
cmp
in
cmc
and
push
scas
pop
mov
daa
xor
in
repnz
stos
pop
in
popf
out
dec
outsb
jbe
mov
lahf
mov
bound
int3
cwtl
dec
inc
xchg
lds
pushf
dec
in
push
mov
cmp
lretw
sbb
add
repz
push
jnp
cmpsb
std
ret
or
pop
incl
in
cmpsb
data16
aad
jbe
sub
jge
inc
add
fs
cmp
push
and
sbb
dec
rorb
pusha
int
cmpsb
filds
popf
pcmpeqd
in
lods
sar
insl
sti
and
movsb
out
xlat
std
dec
xor
jne
in
mov
push
pusha
cmp
mov
cli
inc
rcrl
js
mov
ss
pop
add
mov
sbb
sbb
adc
in
dec
push
sbb
daa
sub
mov
xlat
aam
mov
add
sbbl
adc
mov
lods
or
sahf
pop
mov
or
movsl
inc
push
mov
and
ss
sub
mov
test
cld
adc
mov
xlat
leave
popf
dec
or
pusha
icebp
pop
std
push
cmp
push
mov
or
push
mov
or
insl
fildl
or
std
pop
cmp
cs
jae
push
daa
mov
xor
das
inc
push
push
or
call
push
dec
xlat
scas
cmc
fldl
inc
mov
in
mov
std
call
ja
mov
mov
adc
cs
bound
or
add
inc
stos
mov
inc
fs
in
fs
xchg
lret
mov
ja
movl
push
xchg
or
shll
sub
std
inc
push
je
inc
and
jne
dec
loopne
sbb
push
mov
cmp
mov
push
add
push
pop
nopl
das
aad
dec
sub
nop
sbb
inc
xchg
dec
xorl
fiaddl
sbb
inc
jae
sbb
nop
in
mov
push
lahf
pop
push
and
xchg
je
daa
mov
xchg
inc
inc
sbb
and
or
into
sbb
adc
divb
jecxz
adc
xor
les
lea
in
jmp
lods
cltd
mov
daa
push
xchg
test
add
iret
xor
fwait
aam
mov
enter
loop
sub
cmpsl
or
std
xlat
or
outsb
stos
lret
cmp
fwait
fwait
mov
adc
lahf
pop
mov
push
lret
jno
imul
stos
inc
shll
add
sar
jo
adc
push
addr16
cmp
xor
call
inc
mov
jle
test
push
iret
lahf
pop
dec
push
divb
dec
sbb
inc
pop
outsl
mov
jbe
push
or
jns
pop
scas
lds
outsb
push
test
dec
inc
fiadds
inc
mov
inc
sub
sahf
lret
loop
inc
arpl
jp
adc
inc
cld
out
nop
adc
lcall
pop
mul
imul
xor
mov
aam
xchg
out
int
repnz
scas
pop
cmp
test
das
repz
fistl
cld
add
notl
push
dec
out
test
inc
out
cwtl
pop
jmp
sub
add
dec
dec
pusha
roll
inc
mov
pusha
outsl
inc
cmp
jge
dec
iret
cld
push
ljmp
adc
out
dec
lods
inc
lock
clc
xchg
loope
push
stos
xchg
lods
cmp
popa
sbb
pop
adc
mov
xor
imul
mov
mov
jp
and
and
sbb
jo
dec
int
addb
adc
mov
add
or
push
sti
jns
loopne
jp
enter
bound
lods
pop
jle
jb
mov
cs
int
dec
rcrl
xchg
sub
jg
pop
and
and
and
enter
mov
jmp
push
pop
add
aam
cmp
add
les
xlat
icebp
xor
fwait
mov
cwtl
out
adc
movsl
pop
je
subl
mov
mov
into
fnstsw
test
pavgb
mov
call
jns
adc
hlt
or
xor
xor
xor
je
xlat
out
inc
ffree
mov
lds
sbb
cmpsl
jno
xchg
es
push
add
or
rcrl
mov
mov
mov
int
shr
push
sub
push
cltd
xchg
lods
js
cmp
jmp
and
jns
sub
xorl
aam
ret
pop
inc
xlat
arpl
mov
call
shrl
ds
mov
sar
mov
jno
test
xlat
imul
int
test
into
jb
test
inc
lret
shlb
mov
aad
xor
inc
adc
and
nop
sbb
jmp
dec
cmp
lods
push
test
mov
nop
insb
sub
stos
gs
repnz
pop
push
jecxz
jp
cmp
test
loope
sub
and
inc
cmc
cmp
or
pop
add
or
xchg
push
add
rorb
out
dec
pushf
or
cmpb
movsb
jg
push
jns
cli
sti
fimull
aas
fadd
mov
inc
frstor
ret
test
shrl
incb
setg
mov
rorl
aas
mov
sahf
out
xchg
adc
push
jle
loop
xorl
xor
sbb
ret
sub
xor
lahf
jb
inc
xchg
push
push
inc
and
data16
cmp
mov
ficoml
rolb
out
andb
mov
dec
jbe
outsb
sahf
lcall
aam
xor
mov
mov
xor
fiaddl
fildll
mov
mov
push
jae
in
lds
aaa
mov
movsl
fnstsw
inc
lods
sbb
iret
das
jp
push
mov
ficoms
mov
sbb
cld
inc
jb
or
movsb
in
addr16
and
mov
adc
lea
js
sub
jecxz
jb
sti
aas
jmp
daa
dec
fcoml
mov
insl
push
loope
mov
cmp
push
ret
sub
movsl
inc
popl
hlt
cmp
ss
xchg
flds
jb
repz
cmp
cmp
rcrl
xor
or
mov
mov
subl
stos
outsl
adc
cmp
or
xchg
js
fwait
rol
push
lods
outsl
je
jg
pusha
aas
scas
fcoms
dec
add
mov
mov
xor
push
loop
dec
daa
xchg
xor
xchg
dec
push
adc
jnp
fldt
cmp
mov
or
push
inc
dec
gs
rcl
xchg
fcmovbe
xor
jmp
in
push
push
sbbl
xor
loopne
xchg
test
pop
mov
cmc
pop
or
int
dec
scas
out
xchg
push
je
xor
in
subb
je
or
xchg
imul
mov
xor
into
ljmp
jne
outsb
fstl
pop
jno
in
sub
enter
pop
adcl
xchg
rcl
cmpsb
cmpsb
in
popa
xor
mov
insl
jb
outsb
mov
cmp
adc
dec
mov
addl
add
movl
cmp
je
mov
jmp
mov
movl
cmp
jne
push
movl
jmp
mov
mov
movl
cmp
movl
jne
mov
xor
add
mov
and
xor
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
negl
add
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
inc
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
andl
xor
incl
add
andl
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
jmp
dec
cmp
orl
push
mov
adc
add
pop
bound
mov
pop
test
xchg
fmull
in
mov
jo
ret
in
out
push
fwait
jp
and
inc
scas
je
outsl
arpl
push
sahf
sbb
jl
repz
fcompl
inc
jbe
mov
inc
rcll
ret
add
js
xor
int3
aam
add
std
sbb
loopne
add
rep
clc
push
lahf
loopne
jge
ror
sub
sub
mov
adc
dec
pop
fsub
gs
lock
movsb
mov
aas
icebp
fdivl
mov
inc
lcall
or
pop
out
xchg
mov
iret
or
cli
ss
fdiv
popa
call
in
nop
mov
sub
mov
aaa
fcmovu
inc
or
xchg
add
cmp
dec
or
adc
and
jne
addl
or
jp
xor
fstpl
xchg
pop
lcall
repnz
out
pusha
jle
fdivr
test
xor
aam
pop
data16
rorb
cmp
lcall
mov
sahf
icebp
jmp
xor
push
ja
inc
pop
or
push
outsl
dec
jmp
cs
xor
sub
mov
ret
icebp
stos
stc
or
mov
xor
movsb
cwtl
mov
aaa
aam
cmp
movsb
js
inc
mov
sar
ds
jno
repnz
cmp
cld
mov
xchg
or
pop
add
cmp
jae
mov
or
repz
pop
push
scas
lret
mov
dec
test
scas
mov
add
fwait
jp
repnz
mov
jecxz
cmp
xor
add
leave
jb
fwait
jb
and
cmp
cmp
xchg
lock
test
cwtl
clc
insb
test
aaa
or
out
cmp
cltd
sbb
ds
idiv
andb
subb
mov
sti
push
pushf
js
stos
lds
and
xchg
xchg
idiv
mov
cmp
jmp
or
push
lahf
lods
popf
dec
dec
pop
out
mov
nop
xchg
dec
icebp
mov
push
pop
sar
nop
mov
jecxz
dec
leave
mov
enter
lahf
xor
sub
fcoms
fcmovu
jno
mov
pop
pusha
dec
and
xchg
add
test
add
js
or
dec
cwtl
cli
adc
sti
in
nop
or
ret
inc
push
fsubl
pop
mov
lcall
adc
mov
inc
jg
and
and
push
pop
leave
dec
pop
and
xchg
gs
cmpl
fmulp
xchg
in
aaa
out
or
pusha
aas
ret
iret
mov
cmp
lcall
sub
mov
in
sub
cmp
mov
dec
lds
or
icebp
repz
mov
int3
push
cltd
adc
dec
les
inc
jg
push
shlb
push
cli
in
mov
sahf
orl
icebp
pop
fistps
jno
jne
jns
cs
cmpsb
jns
xchg
das
mov
and
loop
xor
testb
iret
push
adc
cltd
sbb
adc
lds
or
add
mov
dec
mov
jb
and
cmp
mov
sub
cmp
shrl
mov
or
int3
jge
les
stos
jle
outsb
jo
and
and
or
push
sbb
inc
and
jg
bound
mov
jg
fxch
cld
push
add
lods
fldcw
inc
pop
mov
sub
and
jae
push
sub
int3
inc
retw
test
or
es
clc
mov
mov
mov
lock
mov
adc
mov
pop
adc
mulb
repnz
notb
push
jb
aas
jge
xor
add
cmp
cmp
push
adc
test
aad
pusha
add
cmp
xor
aad
lret
lods
mov
jo
mov
jno
scas
stos
loopne
xor
mov
popa
xchg
sbb
pop
enter
jmp
jno
cli
mov
insl
aas
xchg
mov
add
std
shl
stos
sahf
lcall
ds
add
mov
in
adc
mov
pop
and
xor
dec
sub
jge
int3
ret
std
xor
loop
pusha
aaa
stc
cltd
leave
add
pop
ret
into
movl
cmp
inc
fbld
addr16
cmc
sbb
call
cmp
add
sub
jg
sti
lea
arpl
inc
jge
inc
adc
xchg
notl
push
bound
aaa
js
or
test
xchg
dec
jg
jbe
xor
pop
dec
xchg
int
into
dec
jo
inc
repz
das
add
dec
ljmp
inc
xchg
and
addr16
jnp
imul
mov
push
out
or
out
mov
ljmp
xor
add
jmp
ret
xlat
and
aam
push
sti
xorb
push
cmpsb
xor
lods
sbb
mov
adc
mov
dec
mov
sub
ja
xchg
gs
pop
cs
mov
push
ret
inc
in
fcoml
pop
mov
mov
in
pop
test
cs
fninit
lods
test
cmp
nop
dec
idivl
or
xchg
adcw
cmpsl
out
mov
dec
int
fwait
cmp
ds
cwtl
xor
fs
push
int
xchg
push
fnstsw
or
dec
and
test
es
lret
movsl
movsl
int3
test
test
test
jmp
cmc
or
shl
add
or
mov
movsl
rdmsr
daa
and
sbb
test
enter
ljmp
xchg
lcall
pop
push
adc
icebp
movswl
sbb
mov
mov
leave
movsl
dec
stc
push
push
inc
stos
jo
flds
xchg
ret
xchg
push
pop
outsb
mov
adc
repz
xor
sbb
jae
data16
cli
mov
add
int
inc
mov
push
aas
fcomps
xorb
pushf
fistl
inc
xchg
test
stos
fidivl
iret
xor
lods
dec
pop
hlt
add
outsl
mov
sub
pop
push
in
add
xchg
loop
ljmp
push
adc
les
mov
or
data16
push
sub
aad
in
push
fbstp
sbb
xor
sub
daa
adc
outsl
mov
jbe
fcompl
push
mov
fidivrs
loope
je
sti
jecxz
jb
mov
adc
nop
in
dec
add
xchg
stos
push
repnz
stos
push
jge
test
cmp
inc
mov
insl
xchg
in
pop
sub
addl
call
add
je
dec
sub
dec
xchg
cwtl
adcl
pop
mov
cmp
add
mov
mov
inc
xchg
test
mov
sub
xchg
push
adc
or
outsb
mov
ja
int
adc
xor
addr16
int3
mov
fs
clc
sarb
pop
outsl
daa
add
add
mov
xchg
jns
jno
shrb
inc
and
lea
mov
mov
aam
or
sahf
push
xchg
inc
sti
jecxz
cmpsl
inc
jmp
cmp
fisttps
aas
lret
push
je
out
paddsb
pusha
and
shr
sbb
or
xor
insb
mov
lods
adc
xchg
dec
js
xchg
push
mul
mov
jo
mov
decb
mov
jmp
xchg
cmp
jne
mov
aas
pop
ror
dec
or
fsubs
fimull
sbb
aaa
das
cltd
mov
xlat
fldcw
jmp
outsb
mov
fwait
gs
call
sar
mov
repnz
xchg
and
int3
pop
int
mov
jns
popa
sub
sbb
loop
xchg
xor
outsl
popa
mov
or
or
cmpsb
jne
or
mov
bnd
xchg
enter
and
mov
xlat
pop
iret
sub
cltd
jp
jno
pushf
pop
mov
pop
xchg
out
mov
and
xor
in
insl
mov
and
jb
shrb
fwait
pop
dec
hlt
fs
mov
sbb
call
lods
sbb
push
inc
loop
pushf
test
hlt
xchg
push
sub
fldl2e
addl
xor
add
clc
xchg
mov
call
mov
sbb
enter
lods
jbe
sub
das
les
and
pop
jg
cmpsb
popa
jle
das
cmpsb
out
test
mov
cs
cmpsb
outsb
imul
jb
inc
push
in
stos
add
push
enter
fmul
les
repz
cmp
or
sbb
jnp
or
and
or
push
je
xchg
ds
pop
lret
sarl
push
pop
popf
jmp
pushf
inc
sub
dec
mov
sub
out
add
imull
adc
sarb
daa
fbstp
adc
cmc
sub
stc
leave
ljmp
in
or
and
or
xlat
rcrl
mov
popa
add
loop
test
and
fwait
in
adc
sbb
sbb
inc
jae
je
in
push
std
sbb
add
js
adc
push
mov
mov
outsl
adc
shll
mov
insb
or
popa
adc
les
pop
dec
push
sub
or
imul
imul
inc
mov
push
xor
xchg
aaa
mov
mov
ljmp
stc
mov
mov
mov
or
loope
rorl
hlt
es
andb
jno
and
sub
aam
shlb
dec
jns
outsb
and
mov
scas
push
cli
inc
jae
mov
cmp
or
adc
jg
sbb
out
out
push
mov
sbbb
aaa
adc
icebp
inc
mov
cltd
mov
mov
inc
rcl
mov
daa
dec
les
hlt
movsb
sbb
js
shrl
push
nop
add
mulb
mov
lods
mov
sahf
xlat
pop
xor
leave
sbb
rorl
sub
xor
pop
fs
jns
jge
jp
cltd
out
inc
outsb
ja
scas
in
sub
jp
mov
dec
testl
or
stos
imul
push
fimull
xor
jmp
adc
les
mov
neg
and
ljmp
ja
push
lret
inc
cld
pop
mov
mov
inc
in
int3
or
out
mov
imul
mov
es
push
mov
sub
addr16
xchg
dec
sarb
subl
adc
addl
call
sarl
xor
add
jae
nop
repz
xchg
out
shrb
pop
jno
pop
stc
dec
adc
mov
out
cmp
aaa
cmp
clc
pop
mov
or
cltd
fnstcw
sbb
shlb
xor
jge
lret
pop
mov
push
sbb
jbe
aad
outsl
movsl
inc
jmp
and
push
mov
mov
out
push
cmp
insb
loop
sysenter
or
fs
mov
inc
xchg
jae
movsb
xor
and
mov
cmp
lods
fnsave
leave
or
insl
popa
int
dec
mov
jge
idiv
xor
xor
ljmp
ljmp
inc
cltd
in
es
xchg
mov
jo
iret
aas
sti
aam
inc
mov
arpl
cmp
adc
pop
lods
xor
jnp,pn
pop
jge
mov
xchg
push
mov
add
jbe
push
dec
cmp
adc
sub
inc
inc
dec
pop
popf
in
sarl
movl
fidivrs
add
fldl
jg
adc
gs
scas
push
inc
or
add
pop
nop
mov
js
and
xor
or
shr
cli
cmp
mov
adc
adc
ret
jle
inc
je
mov
jnp
cmpsb
lods
rol
iret
mov
fcompl
test
or
mov
lds
mov
xlat
sbb
xchg
cs
jg
mov
jne
in
push
rorl
xchg
lods
add
adc
or
jnp
push
or
test
das
inc
mov
sub
inc
int
jl
mov
pop
fidivs
mov
push
or
push
cmp
into
cmp
loop
sub
dec
in
adcl
mov
out
jnp
cmpsb
insb
or
push
jne
xor
adcb
fldenv
cmpsl
sub
sti
stos
negb
pop
shl
dec
sub
or
push
rcrb
ficomps
cwtl
pop
scas
xor
mov
jg
in
xor
xorl
fisttpl
mov
lods
mov
add
inc
cmpsl
cmp
jge
hlt
pop
jg
xchg
dec
add
mov
leave
insl
mov
jbe
jb
jg
ds
into
pop
inc
mov
scas
mov
movsl
jmp
test
adc
in
dec
mov
ret
push
xchg
pop
dec
jmp
jle
call
imul
roll
in
addl
les
jl
loope
dec
lret
inc
sbb
dec
add
lcall
jecxz
pop
xchg
je
fsubrl
inc
sbb
iret
or
pop
dec
add
out
mov
cmp
rcr
pop
jne
sub
arpl
inc
dec
inc
lods
js
rcrb
je
and
movsb
push
loop
movsb
pusha
rol
jae
jecxz
and
dec
xor
ds
pop
push
negb
sahf
and
int
lret
div
test
orl
push
pop
mov
pop
mov
loop
mov
pop
mov
nop
flds
inc
xlat
push
jne
inc
mov
mov
ss
push
jle
and
push
ret
cmp
loope
xchg
add
stc
les
scas
ficomps
ficompl
add
jmp
sub
andl
jg
dec
aas
shlb
test
cmp
stos
mov
cli
pop
stos
pushf
or
mov
int3
cwtl
cmpsl
aad
mov
fwait
call
or
or
in
push
nop
jmp
mov
ss
hlt
sub
ja
fsubs
mov
jmp
adc
and
dec
test
movsl
ds
icebp
mov
mov
mov
and
sub
xchg
test
daa
xor
inc
cmpsb
cmovl
bound
loopne
mov
fsubs
sarl
adc
arpl
pop
inc
push
pop
imul
sti
push
mov
sbb
js
ljmp
fs
mov
js
repnz
sbb
cmp
sti
sbb
fistpll
jl
iret
ljmp
inc
or
or
movsb
xchg
fcomi
jbe
and
dec
sbbb
add
imull
fbld
mov
cmc
inc
and
scas
leave
sbb
adc
les
ss
imul
mov
ljmp
cld
inc
jbe
daa
dec
or
pop
or
pop
filds
lods
test
jp
pop
ffree
jmp
jae
sbb
xchg
stos
mov
sbb
mov
clc
lret
aaa
icebp
mov
popw
nop
jbe
or
xchg
mov
xchg
dec
js
adc
mov
ss
insb
adc
in
arpl
icebp
pop
xchg
adc
test
pop
in
pop
inc
xchg
out
add
and
push
es
mov
jp
sahf
sub
add
imul
sbb
mov
loop
sub
lcall
pushf
push
inc
int3
and
imul
test
or
mov
test
lods
cmp
mov
sub
shll
dec
movsl
cmp
mov
sbb
clc
push
shl
dec
mov
sti
xchg
jl
jb
jbe
mov
mov
lahf
icebp
sub
loop
push
mov
pop
sti
rcl
mov
icebp
push
push
pushf
mov
sub
lret
push
jge
push
pop
jno
test
in
clc
jne
cs
xchg
push
mov
repnz
push
imull
or
sarl
sahf
xor
pop
loop
loopne
ret
sub
ss
dec
lahf
out
xor
aaa
inc
loop
dec
movsb
mov
dec
cmp
sarl
fisttps
fiadds
jno
sbb
adc
mov
and
sub
or
dec
loopne
xor
fwait
pusha
fwait
insl
popa
mov
shll
stos
mov
icebp
lret
hlt
adc
sahf
test
cmp
push
aad
add
shr
cmp
add
fcom
push
cmpsb
stc
cmc
in
jbe
dec
insl
test
inc
adc
lahf
dec
pop
iret
scas
icebp
shrb
data16
xchg
and
mov
mov
jl
mov
fbld
out
addr16
add
jno
push
push
inc
test
into
aaa
outsb
xchg
push
mov
mov
jne
cmp
daa
cli
loop
add
in
push
clc
mov
push
and
sbb
xor
into
xor
stos
addr16
mov
iret
sti
dec
add
lret
dec
mov
cmpsb
leave
sub
lret
loope
push
adc
ja
dec
ljmp
inc
xchg
push
ret
jecxz
mov
push
cmp
lea
add
mov
jle
or
fs
cld
movsl
scas
fstp
das
loopne
mov
mov
pop
push
mov
lret
cmp
fcmovu
push
lret
gs
inc
push
push
inc
lea
test
or
mov
aaa
dec
cltd
lock
jle
jbe
pushf
dec
xchg
pop
popa
jge
fisubrs
jb
insb
sahf
cld
pushf
dec
flds
sub
addr16
out
xor
pop
faddl
jno
push
int3
xchg
std
daa
fstp
dec
cwtl
sbb
das
shlb
dec
mov
sub
inc
cwtl
jae
dec
mov
jmp
popf
mov
and
data16
adc
inc
fwait
nop
push
ds
and
add
mov
mov
and
sti
add
xlat
sub
je
cmp
cmp
dec
and
cs
jns
mov
jge
and
sbb
mov
sbb
push
sub
jno
push
mov
mov
jns
mov
jae
or
add
out
mov
cmpsl
cmp
ds
ljmp
xchg
cmpsl
cmp
stos
jae
lods
addl
cmc
pop
or
push
fmuls
jle
pop
xor
xchg
mov
int
push
xchg
adc
scas
xchg
int
das
clc
jl
inc
imul
ror
adc
inc
sti
jmp
cmp
sub
es
nop
test
dec
sbb
ljmp
stc
out
sahf
pop
jns
pop
inc
loopne
cmp
add
mov
xchg
sbb
push
or
popa
fmul
pop
or
xchg
test
and
inc
cmp
imul
mov
inc
ja
jb
jl
insb
cmpsb
outsb
or
jb
insl
xchg
push
cld
dec
hlt
mov
js
ret
aam
test
sbb
ds
xlat
or
cld
inc
decb
dec
cld
test
push
mov
mov
pop
mov
mov
insb
xchg
popa
mov
adc
fdivl
call
rcrl
sub
mov
stos
dec
daa
sub
push
das
shll
sbb
scas
and
push
sar
iret
push
frstor
sub
cmp
ja
jnp
repz
sub
jl
popf
fisubrl
loopne
gs
sbb
mov
daa
stos
lods
add
sub
mov
sbb
das
fidivrl
outsl
xchg
in
nop
lret
cli
and
sub
inc
lret
mov
and
mov
xchg
adc
jbe
jno
xor
or
push
or
xchg
outsl
pop
je
arpl
in
mull
pop
push
jmp
fdivrs
mov
mov
sbb
push
inc
pop
cmp
mov
jmp
mov
and
adcb
adc
jge
mov
sbb
pop
xchg
mov
fimull
es
jae
pop
inc
xor
enter
jle
outsb
subl
fimull
divl
jge
jne
iret
clc
push
mov
call
out
sbb
lcall
mov
mov
icebp
xlat
mov
mov
cmpsb
out
xchg
jp
lea
shlb
push
dec
cmp
add
mov
xchg
out
xor
cs
clc
adc
idiv
push
mov
mov
and
test
push
push
repz
inc
adcb
test
pop
mov
movsl
mov
test
cmp
out
sbb
mov
test
xchg
movsb
mov
mov
enter
fisttps
scas
cmp
or
dec
xor
rorb
std
aam
mov
mov
iret
inc
ss
lret
and
ss
call
shlb
jnp
xchg
xchg
dec
out
sbb
dec
mov
or
sarl
mov
sub
fildl
mov
into
add
jbe
xor
dec
mov
test
jmp
out
add
or
test
adc
xchg
mov
mov
sbb
lcall
addr16
pop
dec
call
mov
pop
mov
push
or
sub
hlt
xchg
sub
sub
push
cltd
aam
jbe
std
mov
pop
adc
adc
mov
push
mov
lcall
mov
stos
pop
mov
inc
cmpsl
xor
push
je
scas
push
pop
mov
jne
shlb
or
inc
call
jbe
mov
fisttpll
sarb
dec
adc
cmpsl
dec
test
xchg
xchg
negb
ret
lcall
mov
push
lods
mov
fneni(8087
push
insl
sbb
popl
fstpl
aad
dec
pop
in
jns
jg
dec
sbb
test
pusha
xchg
sahf
popf
ret
mov
xor
das
sub
jg
dec
push
fdivs
sub
xchg
rcl
mov
fildll
inc
leave
mov
cld
mov
clc
stos
cmp
pusha
pop
orl
sbb
push
push
fstps
das
and
xchg
mov
mov
sbb
dec
inc
in
dec
mov
sti
fsubs
add
sub
mov
mov
inc
lods
jg
addr16
jae
xor
xchg
lret
mov
mov
adc
ds
ljmp
and
xorb
cmp
xlat
cmp
mov
push
in
shlb
cwtl
inc
dec
mov
mov
cmp
dec
ja
cltd
das
jns
xchg
sbb
inc
mov
pop
mov
or
cmp
xchg
dec
test
add
sub
fsub
or
fidivrl
add
roll
rcll
fnstcw
mov
cmpsl
cld
and
adc
cmp
daa
imul
popf
mov
xor
lahf
sbb
xchg
in
mov
popf
jo
mov
repnz
push
mov
sbbl
mov
pop
xchg
ljmp
pop
sbb
mov
xchg
xor
lock
lods
loope
dec
push
adcb
popf
in
jb
xchg
push
inc
test
sbb
mov
addl
scas
cmpsl
mov
jecxz
scas
pop
sahf
sbbb
pop
push
out
pop
in
pop
or
cmp
push
je
push
inc
xchg
xlat
test
pop
scas
xchg
mov
or
insl
cmc
sbb
fst
jl
shll
fisttps
cmp
xchg
sub
mov
jl
mov
xor
aam
dec
xchg
jno
push
js
cli
cmp
sbb
sbb
inc
mov
ljmp
mov
test
adc
push
cmp
inc
in
loop
push
mov
push
ss
test
ljmp
fstps
pushf
int3
dec
les
mov
rclb
sbb
mov
xlat
jmp
call
imul
sub
and
repnz
pop
cmp
and
pop
xor
sub
or
popa
pop
call
ror
cmp
lcall
popf
jl
dec
lods
inc
sbb
push
adc
xlat
repnz
aaa
sub
adc
jmp
cmp
pusha
dec
dec
movsb
add
jg
dec
inc
loop
pop
jl
faddl
cld
lahf
enter
imul
mov
loop
hlt
je
inc
aad
sbb
nop
cli
lea
arpl
dec
dec
inc
dec
and
adcb
mov
mov
and
cmp
and
daa
cs
outsl
xlat
mov
jno
inc
nop
mov
sub
push
mov
and
sub
bound
mov
push
jne
outsb
es
dec
mov
xchg
jbe
cli
inc
cmp
outsl
or
push
lret
xor
jmp
fistpl
popa
adc
lcall
jbe
xlat
pusha
adc
scas
xchg
mov
icebp
xor
xor
aad
stc
push
bound
sub
xlat
les
mov
adc
pushf
bt
adc
jns
pop
ret
cs
inc
test
pop
pop
add
xchg
xchg
push
pop
and
dec
aad
out
dec
or
jne
frstor
add
test
repnz
add
lock
stos
pop
sub
pop
fisubs
test
daa
adc
loope
jmp
notl
xor
mov
push
and
cmp
cld
outsb
adc
sbb
ljmp
inc
hlt
ss
aad
inc
mov
insb
and
popf
add
shl
sbb
mov
lret
aaa
ja
pop
hlt
sahf
out
insb
mov
std
sub
mov
cmpsb
mov
xor
in
out
fadds
dec
idivl
and
lret
ret
popf
data16
or
mov
mov
addr16
iret
fstps
fisubrl
js
pop
aam
mov
std
pop
sub
test
ja
xchg
dec
loopne
mov
xor
fsubs
sbb
sbbl
jecxz
lods
adcl
fistl
fcoms
jecxz
jle
jp
xchg
jo
cmp
cmp
xlat
out
jno
insb
rorl
daa
sahf
stos
xor
pop
sbb
ret
cmp
xor
popa
adc
dec
inc
and
sbb
scas
icebp
movsb
push
add
sub
das
clc
mov
mov
or
sarl
mov
add
ja
mov
in
xor
ret
inc
std
test
inc
lods
or
inc
stos
sub
loop
test
cli
inc
push
loopne
jp
aam
sbb
loop
mov
dec
aad
cmp
adc
jb
fsubl
mov
sbb
sub
cmc
inc
mov
or
leave
push
jle
jno
loopne
mov
xchg
sbb
nop
jl
testb
pop
xlat
loopne
or
js
push
idivb
iret
mov
dec
or
jle
xlat
aaa
rcrl
cmc
outsb
adc
xchg
jb
into
das
cli
push
mov
fs
addl
into
ficomps
add
testb
cmp
mov
cmp
dec
push
mov
and
jne
addl
sub
fnstsw
mov
js
pop
gs
lea
push
ret
fwait
or
push
shll
mov
jmp
jnp
fiadds
mov
dec
push
lea
and
hlt
xor
and
pop
cmpsl
inc
test
ret
push
jle
out
aaa
inc
or
push
pop
popf
push
fs
divb
or
xchg
movsl
mov
cmp
icebp
mov
dec
fs
and
and
dec
add
lds
test
adc
loopne
add
inc
mov
add
cli
cmp
jne
fiaddl
fistpl
cmpsb
add
cli
roll
ret
ja
movsl
mov
jbe
mov
clc
int
xor
stc
insb
aad
pop
cmp
mov
enter
imul
dec
mov
stos
cmp
faddl
and
or
gs
repz
dec
add
std
test
mov
pop
loopne
pop
cltd
aad
addr16
mov
pop
sahf
mov
xchg
jne
mov
aaa
cmpsl
jle
ret
fdivs
loop
mov
ss
mov
xchg
xchg
mov
fisttps
mov
xchg
xchg
popf
imul
mov
cmc
add
adc
or
mov
rcr
shrb
nop
out
scas
and
pop
mov
rcrl
jne
sub
scas
sub
in
jb
cli
mov
mov
sub
dec
dec
mull
out
sub
in
cmp
test
cmp
or
pop
fcmovb
filds
into
and
bound
mov
mov
and
xor
out
test
xor
orb
xchg
pushf
xor
dec
ficompl
cmp
add
rclb
jnp
loop
sbbb
cmc
ret
nop
mov
in
mov
and
dec
push
jb
hlt
scas
mov
inc
sbb
addl
bound
movzbl
es
stos
cltd
sahf
sub
arpl
sahf
outsl
mov
xor
and
mov
sarb
sub
in
cmp
cs
and
inc
sahf
sub
inc
sbb
mov
cwtl
fdivrl
mov
cmp
xchg
test
call
cltd
enter
imul
pop
mov
icebp
cmc
bound
in
push
loop
daa
dec
pcmpeqd
xchg
in
repnz
fldt
mov
cmpsl
sarb
fs
adc
push
movsb
repnz
imul
jae
fwait
shr
flds
shlb
repz
fidivs
call
subl
loope
mov
rcr
add
pop
push
popa
mov
pop
orl
daa
mov
test
iret
cvtps2pi
outsb
mov
scas
push
fdivp
orb
test
stos
adc
jl
pop
dec
push
shlb
aas
lahf
imul
cmpsl
cmp
inc
xor
ljmp
aaa
insb
sub
inc
movsl
sbb
mov
ret
lods
add
push
push
and
xor
inc
cmpsb
xchg
cmp
fmuls
pop
rorb
mov
pop
push
jb
insb
lret
dec
mov
cli
insb
push
aaa
in
push
jb
int
test
jo
sarl
dec
mov
sar
gs
push
lods
daa
pop
movsl
pop
mov
or
push
in
mov
pop
lock
inc
push
mov
xor
pop
sbb
sarl
cmpl
xor
jge
xor
or
pop
pop
fstps
cmp
or
sbb
jbe
or
lock
pushf
or
pop
xchg
and
fisubrl
jmp
jae
sahf
in
fwait
inc
mov
insl
notb
icebp
loope
lods
aas
or
dec
mov
jne
and
push
dec
sub
jae
adc
mov
addr16
xchg
xor
jae
arpl
add
fstl
mov
push
imul
loope
test
ret
adc
cltd
cmp
and
pop
hlt
mov
je
movsb
pop
cwtl
or
push
adc
mov
daa
inc
cld
xchg
jg
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
push
movzbl
sub
push
adcl
push
xor
xor
mov
sub
mov
push
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
xor
or
dec
mov
jmp
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
pop
push
subl
call
adcl
push
xorl
push
addl
push
push
andl
push
andl
push
sbbl
push
subl
call
push
push
push
push
push
push
subl
call
xorl
dec
movl
jne
push
push
push
call
orl
test
je
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
add
imul
mov
not
mov
mov
mov
cmp
movl
jne
addl
movl
orl
pushl
pushl
pushl
call
adc
mov
mov
sbb
mov
mov
add
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
movl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
movzbl
xor
mov
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
cmp
jne
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
mov
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
inc
push
sbb
push
add
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
or
mov
mov
xor
mov
mov
sub
sub
mov
add
xor
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
jmp
icebp
push
inc
movsl
cmpsl
mov
aaa
and
adcl
push
pop
bound
mov
pop
adc
fs
pop
inc
push
stos
lods
es
sbb
bound
loop
icebp
pop
aad
push
cmp
aas
test
sub
fstps
cwtl
stc
or
or
test
jmp
lahf
mov
xlat
push
pop
push
push
jge
xchg
arpl
mov
inc
lret
and
arpl
aas
pushl
lret
mov
xchg
in
in
sub
xor
push
adc
pop
push
call
mov
shll
push
rorb
lret
cmp
fst
mov
jmp
mov
cmp
sbb
popa
cmpsb
cltd
lea
dec
out
imul
fiaddl
out
pop
ds
sbb
ja
xchg
jo
xchg
push
adc
or
nop
fstpl
cs
fwait
xchg
sbb
popa
test
sbb
xor
xrstors
inc
js
xchg
ds
in
pop
mov
mov
push
jb
out
xlat
aaa
call
or
jmp
jg
gs
mov
adc
adc
mov
xchg
test
cmp
inc
int3
or
fcmovu
rcrl
test
mov
jmp
stos
cmp
out
mov
fcomp
sub
and
xor
inc
mov
dec
dec
add
dec
cli
or
in
dec
stos
neg
xor
arpl
push
cmp
test
mov
test
cmpl
cmp
insl
sub
arpl
sub
fcoml
mov
pop
sahf
pop
stc
hlt
sbb
mov
and
pop
loop
das
test
xchg
mov
push
xchg
dec
xchg
push
add
push
rorb
cmp
add
push
mov
fmull
add
xchg
in
inc
cmp
popf
in
ror
lods
in
mov
dec
push
jge
xchg
scas
aad
scas
xchg
icebp
lods
out
or
popf
sub
jmp
aad
fs
leave
xchg
rcll
scas
cmp
mov
push
fsubs
cmpsb
movsb
cmp
jno
popa
mov
jo
xor
fsubs
rorb
scas
lret
fists
mov
push
push
fiadds
mov
ljmp
and
hlt
jmp
sbb
call
inc
rclb
push
jbe
call
xor
jae
std
mov
push
test
or
std
adc
scas
pop
movsb
jg
mov
ja
mov
lret
insl
mov
fucomi
ret
or
push
test
arpl
or
mov
xchg
leave
push
mov
mov
and
in
sti
ds
dec
fidivl
in
test
ret
jo
mov
or
lods
jle
imul
xor
mov
cs
out
push
lcall
mov
fs
jne
push
aas
js
sub
dec
div
lods
cwtl
ret
out
aaa
mov
mov
repz
push
pop
and
and
insb
cmpl
cmp
mov
push
in
sbb
cmc
push
repz
push
cmc
fs
andb
test
test
jle
adc
icebp
mov
mov
loopne
jb
push
in
stos
in
mov
lret
shr
sbb
adc
pop
lds
movsl
cmp
jne
xor
scas
fiadds
mov
in
push
mov
int3
dec
pop
mulb
or
push
imul
mov
test
mov
xchg
xlat
mov
inc
adc
sub
out
sbb
jl
xorl
push
pop
scas
arpl
xchg
stc
outsl
dec
ror
pop
shrl
mov
fldl2e
das
adc
dec
lahf
pop
pop
ljmp
xchg
mov
jne
dec
fwait
mov
xchg
push
pop
gs
insb
mov
repnz
and
int
fistl
cld
mov
stos
push
dec
xlat
xor
int3
cmpsb
xor
fnsave
imul
loop
es
xchg
push
or
pushf
xor
imul
cltd
out
in
daa
out
lods
push
aad
or
jns
test
dec
and
cmp
xchg
mov
in
outsl
push
sbb
js
cli
scas
insb
lcall
xlat
lds
std
xchg
xor
push
push
mov
stos
xor
lret
hlt
cmp
ljmp
or
inc
mov
pop
cmpsb
push
push
ss
push
out
pop
lret
addr16
mov
repnz
cmp
mov
test
fldcw
stos
mov
mov
mov
mov
sbb
fstpl
scas
nop
pusha
xor
out
test
xor
test
push
xchg
inc
frstor
and
pushf
sub
aad
pushf
ret
testb
popa
push
das
outsb
jp
dec
lods
cwtl
in
fwait
pop
data16
movsb
lcall
stc
aaa
jb
add
push
int
sbb
pop
and
iret
pop
or
popa
mov
pusha
scas
mov
dec
les
mov
cmpsl
cwtl
jecxz
add
fidivs
mov
push
jge
jne
jecxz
lods
pop
addl
xlat
outsl
sub
movsl
cld
mov
shl
xchg
inc
adc
ljmp
xor
xor
imul
push
adc
xchg
jnp
faddl
popf
pop
cld
sub
jne
cmp
addb
mov
xor
fidivrs
mov
inc
stc
adc
iret
mov
dec
cwtl
xor
push
out
or
pop
xorb
movsb
leave
dec
dec
xchg
and
stc
push
cwtl
test
mov
insb
sub
lods
mov
push
imul
xchg
push
loopne
hlt
rcrl
js
xor
and
xchg
inc
mov
inc
lds
imul
lock
or
outsl
scas
fldl
jb
xor
pop
xor
add
cwtl
cmp
dec
in
inc
lock
mov
add
mov
pop
pop
pushf
mov
call
xlat
jg
hlt
push
pop
pushf
adc
enter
xor
jg
jne
or
jns
jp
fistpll
mov
dec
test
fwait
cltd
sub
push
lahf
jecxz
int3
flds
mov
lods
jmp
and
lea
sbb
aam
js
scas
push
mov
mov
and
in
cmpsl
mov
lret
mov
jo
add
lods
outsl
sub
out
push
loope
sub
das
adc
fsubr
fsubr
sti
cmp
out
test
repnz
push
loop
dec
icebp
loopne
fiadds
call
dec
add
lahf
lds
outsb
push
lock
out
incl
mov
xchg
ja
push
mov
ss
inc
outsb
xor
stc
psrad
imul
pop
addl
pusha
out
mov
dec
sub
sahf
stos
xor
inc
js
lret
mov
jmp
call
dec
xlat
xchg
outsb
stos
mov
punpckldq
add
mov
inc
test
sbb
scas
pop
clc
rolb
sbb
das
sbb
mov
paddsb
ss
push
jmp
sub
dec
repz
cmp
pop
cmc
cmp
shr
add
dec
and
cmp
xchg
inc
xchg
std
dec
push
lods
js
dec
mov
xor
fildll
sub
inc
cmp
sub
sub
xchg
adc
push
jecxz
movsl
adc
add
stos
mov
lock
inc
out
pop
push
fnstsw
data16
imul
push
call
pusha
iret
or
jb
fnsave
sub
movb
add
ja
jl
jns
mov
mov
and
mov
mov
push
and
jge
inc
imul
std
xor
ds
nop
sbb
mov
pop
pop
or
jmp
mov
lret
icebp
adc
hlt
jo
jge
jl
movsl
test
mov
mov
and
dec
xor
sbbb
jns
cmp
imul
pop
lahf
xchg
and
test
pusha
xor
insl
stc
dec
je
push
pop
shlb
sub
rorl
xlat
push
cmpsb
inc
imulb
nop
out
cmp
mov
dec
mov
adc
xchg
adc
orb
add
mov
les
xor
outsl
push
pop
mov
sti
mov
jg
lds
or
adc
test
hlt
aam
inc
dec
mov
jmp
mov
xchg
movsl
or
mov
sbb
or
out
les
int
lret
imul
hlt
xchg
subl
lret
mov
cmp
inc
push
push
aam
jbe
mov
sbb
ficompl
mov
and
add
pop
addr16
int3
lock
es
pop
jp
aad
roll
sub
ss
pop
std
ljmp
ret
and
out
fistpl
jae
adc
xchg
mov
add
ret
mov
repz
mov
adc
cmp
mov
dec
add
stos
fsubs
in
jae
lcall
dec
mov
arpl
std
sahf
enter
roll
push
sti
pop
loope
mov
insb
adc
imul
push
mov
repnz
mov
outsb
pop
fcomi
mov
outsl
push
lcall
in
jle
hlt
cmpsl
popa
pushf
cmp
rorl
pop
push
mov
lea
movsb
xor
xchg
sub
testb
cmpsl
cmova
push
push
adc
or
pop
stos
adc
sub
add
and
inc
cmpb
push
jl
sbb
jnp
inc
ja
cmpsl
pushf
push
add
lret
or
imul
sub
ficoml
sbb
mov
repz
pop
push
movsb
in
fwait
mov
mov
orl
inc
jecxz
cwtl
mov
lcall
and
xor
into
pop
ljmp
test
xor
stc
cli
pop
cmp
mov
fwait
xchg
int3
sub
shll
ja
add
cmp
xor
add
aaa
and
push
jle
sbb
jo
jmp
mov
dec
xor
lods
mov
movb
cmpsl
and
push
mov
aas
sti
push
call
pop
cltd
xor
and
rcrb
nop
loop
scas
stc
and
xchg
cmpsb
xchg
popa
push
mov
mov
xchg
xchg
lret
ficoml
fwait
xchg
jg
mov
jo
mov
push
insb
pop
mov
loop
leave
dec
mov
adc
xor
mov
pop
sbb
inc
jnp
mov
int
mov
inc
pop
sub
sbb
clc
fsts
imul
lods
in
lret
shl
jge
sbb
dec
outsb
mov
fadd
cli
xchg
xor
aas
jne
cmpsl
push
mov
dec
and
int3
fnstcw
pop
xor
sarb
and
fldl
mov
dec
push
dec
xchg
pushf
mov
lods
mov
xor
push
insb
or
ret
inc
loop
sub
call
and
xchg
xorl
dec
pop
sti
insb
adc
xchg
je
sub
sub
push
les
leave
setbe
cmp
xor
and
aaa
mov
add
shll
mov
mov
jl
mov
xchg
jb
dec
outsb
sbb
mov
std
push
xor
repnz
loop
sarl
dec
test
orl
popw
or
dec
jecxz
pop
lods
inc
mov
imul
andl
or
pop
and
ja
jno
mov
movsb
xchg
cltd
inc
mov
int3
pop
cmpsb
mov
xchg
or
add
ficoms
out
mov
sub
cmpsb
mov
push
or
out
les
ds
dec
jbe
mov
mov
lea
pop
add
into
pop
xchg
jp
xchg
sbb
int
les
fadd
sbb
lods
scas
out
scas
in
adcb
fwait
sbb
mov
fstl
jmp
outsl
aas
dec
lret
test
push
push
jae
xchg
shll
setb
enter
mov
rorl
movsl
add
mov
rcll
lret
adc
and
loop
pop
fwait
addr16
jmp
rcrl
pop
movsb
xchg
fistps
sbb
ds
out
sbb
pop
pusha
xchg
bound
dec
daa
leave
sbb
incl
insl
mov
mov
je
dec
xchg
mov
jns
add
arpl
jnp
hlt
adc
pop
dec
lcall
mov
add
jno
enter
adc
clc
clc
mov
insb
shll
jle
push
outsb
or
aas
jne
fisubrs
push
cmp
push
int
setno
data16
movsl
mov
xor
inc
mov
lds
push
cmp
mov
mov
ffreep
jo
push
mov
or
push
sbb
and
mov
mov
lret
movsl
mov
jmp
push
mov
pusha
sub
cmpl
or
cld
imul
pop
addb
jge
sbb
sti
jno
mov
mov
in
add
test
sub
out
adc
movsl
and
xchg
enter
push
mov
daa
shrb
popf
sbb
in
pop
shll
jbe
mov
xor
jle
lret
push
jne
add
or
xor
xchg
mov
daa
jg
mov
cmp
cli
std
jnp
xor
jg
sar
xor
hlt
out
or
cmp
lods
inc
mov
mov
jo
or
pusha
icebp
sbb
sub
int
outsb
leave
jae
push
pop
and
xchg
lcall
int3
pop
mov
imull
cmp
xorb
mov
mov
or
push
dec
cmpsb
scas
pop
sahf
mov
jo
lcall
push
aas
fs
icebp
jb
adc
xchg
into
jle
rol
jl
push
jo
enter
add
repnz
push
dec
adc
cwtl
dec
cwtl
cwtl
xlat
into
mov
cmp
and
aaa
insb
mov
adcl
mov
inc
mov
xchg
movsb
push
cmp
jmp
mov
daa
popf
xchg
mov
repz
cmp
pop
outsb
imul
insl
cmpsl
mov
cmp
mov
jecxz
add
lock
lods
test
test
sub
in
scas
int
or
adc
lret
movsl
addb
fsubp
cmpsl
dec
cs
ss
inc
cmp
add
xlat
jmp
loope
rcl
aad
dec
lods
inc
jbe
testl
jmp
les
pushf
aas
or
negl
xchg
ja
sbb
popf
mov
xchg
jae
jae
jmp
insl
pop
jnp
jp
call
add
cwtl
notl
push
push
xchg
subl
push
and
lea
lcall
sahf
es
mov
inc
fimuls
popf
and
jmp
scas
addl
xchg
pop
mov
inc
mov
xor
xorb
jno
dec
fnstsw
xorb
jle
enter
dec
sti
push
shll
cmp
jbe
cmp
add
push
cmp
cmp
sbb
dec
or
scas
repnz
pop
mov
imul
xlat
sbb
divl
jb
sbb
ss
cmc
rcll
mov
mov
ds
rorb
push
jle
js
dec
popf
shl
arpl
movb
std
adc
fcomip
xlat
inc
test
divl
outsl
dec
gs
add
flds
scas
cmp
lods
xchg
cmpsl
xchg
fiadds
xor
mov
xchg
ss
sbb
mov
popf
aad
cmpsb
hlt
ret
lds
icebp
mov
mov
adc
pop
bound
clc
xchg
loope
stc
jo
in
cmp
daa
push
mov
mov
dec
stc
adc
lea
add
shll
dec
jmp
rorl
cmp
and
push
mov
dec
add
xchg
addr16
sub
xlat
lods
stos
movsl
sbb
shrb
aaa
loop
jl
jecxz
mov
imulb
shll
outsl
xchg
dec
xor
pushf
xor
push
imul
or
push
xchg
out
enter
dec
hlt
dec
push
jbe
out
rcl
iret
fimull
data16
xchg
clc
sbb
int
out
sub
push
xchg
aas
subl
xlat
xor
jp,pt
xchg
and
xor
mov
repz
lock
cli
push
in
adcb
add
ss
jbe
fwait
xor
xchg
ss
dec
insb
es
inc
xor
out
stc
mov
adcb
adc
aam
outsl
mov
mov
lcall
sub
pop
and
bound
dec
jg
in
push
fdivrs
pop
pop
out
test
add
mov
negb
aad
xchg
or
call
push
adc
jge,pt
out
ficompl
pop
jecxz
es
mov
mov
jp
jae
mov
movsb
les
ficoms
pop
sub
xchg
imul
cmp
xlat
sarb
ja
shll
add
notb
push
add
shlb
push
cmpsb
pusha
xor
pop
mov
inc
aam
imul
pop
leave
je
sbb
and
xchg
mov
jge
sbb
add
nop
divl
and
cltd
pushf
nop
rcrb
subl
mov
jmp
add
and
lods
test
cmpb
mov
xchg
idiv
push
lret
mov
dec
lret
ficompl
fcompl
xchg
add
pop
jne
lret
popl
cmp
cmp
mov
mov
adc
pop
pop
dec
mov
stc
movsl
stc
jne
xor
pop
test
dec
mov
xchg
sub
inc
jb
pusha
cltd
je
test
fisubl
dec
or
or
int
fistps
test
decb
push
sub
or
lods
sub
fistpll
std
mov
test
imul
mov
cwtl
and
pop
inc
mov
bound
hlt
decb
or
data16
sahf
popf
sbb
shlb
jge
hlt
shrb
sbb
testl
loopne
xor
leave
sbb
ja
cmp
mov
inc
sti
lcall
neg
dec
repz
into
roll
pop
jb
dec
inc
ds
sarl
clc
out
rcl
stos
imul
daa
xchg
enter
movsb
add
push
pop
sub
sub
test
push
ret
cli
test
xchg
mov
clc
cmpsb
mov
cmp
jp
hlt
xchg
cwtl
mov
pop
and
or
cmpb
aam
scas
xlat
lods
inc
sub
add
jae
adc
adc
cmp
into
dec
push
psubusb
pushf
loop
mov
aam
xor
pop
loop
cmp
fmulp
lea
inc
mov
add
jg
popf
sbb
add
push
cmp
xchg
stc
fs
loopne
sbb
pop
mov
stc
push
mov
push
sar
dec
dec
movb
jg
das
xchg
adc
adc
pop
mov
inc
insb
cmp
test
or
stos
lahf
pop
sub
inc
cli
jge
sbb
rcrl
dec
scas
sub
xor
sbb
add
xchg
leave
xor
bound
dec
mov
bound
sub
stc
hlt
push
and
sub
pop
mov
xchg
testb
xchg
imul
insb
sarb
inc
addr16
jmp
push
sub
stos
push
adc
lds
cmp
mov
sub
ja
inc
sub
daa
pop
pop
xor
imul
jmp
pop
insb
or
jnp
push
int3
cwtl
jne
jg
lcall
mov
adc
into
fsubl
mov
lahf
out
mov
mov
pop
mov
xchg
cmpxchg
in
test
jae
mov
mov
movsb
into
cmp
pop
mov
sub
sub
fadd
imul
fucomip
scas
outsb
pushf
jns
add
pop
or
dec
sqrtps
fisttpl
inc
mov
sbb
bound
lods
or
dec
xor
cmp
cmc
push
repnz
out
je
ss
and
sbbb
push
adc
jno
adc
xor
stos
es
dec
mov
cmp
hlt
ja
ret
lret
xchg
sub
inc
test
mov
repz
cltd
push
sbb
roll
ja
xchg
jb
fnstsw
pop
adc
cmpsb
xchg
xlat
in
inc
loope
adcb
lea
subb
dec
sahf
jo
dec
daa
push
sub
ljmp
mov
sub
dec
and
fisttps
jbe
aas
fnstenv
cmp
ja
inc
add
xchg
addb
inc
out
ljmp
test
stos
adc
mov
push
xchg
lods
xor
pop
xor
inc
outsb
cmp
stos
xor
fs
out
mov
dec
dec
dec
ret
jb
or
jo
or
mov
cmp
in
ljmp
add
lahf
inc
jg
mov
jbe
fwait
jns
and
inc
add
adc
testb
cmp
xchg
lret
in
push
cmp
sub
sti
mov
xor
push
push
imul
insl
add
mov
stc
std
xor
xor
add
jmp
ljmp
mov
lahf
gs
push
dec
int
xor
aas
pop
jnp
dec
sub
pop
test
stos
or
or
add
outsb
pop
lds
fdiv
sti
sub
movl
jae
fs
add
fisubs
mov
fmulp
jno,pn
loopne
sbb
pop
rclb
sti
lods
cld
mov
aam
into
sbb
popf
push
mov
ljmp
jno
xor
mov
daa
inc
xlat
pop
mov
int
aaa
add
mov
mov
into
jo
inc
adc
inc
add
push
popa
sub
sbb
push
mull
mov
aas
xchg
xchg
pop
cmp
aaa
fs
mov
repz
in
mov
ljmp
flds
repnz
pusha
push
mov
rorl
sbb
insb
ret
outsl
push
sar
lock
aad
cli
fistps
mov
push
xchg
cmp
or
cltd
add
mov
test
sbbl
mov
rorl
xchg
pusha
shlb
pusha
ja
jo
xchg
xchg
mov
inc
sti
jnp
or
je
aas
stc
ret
lock
insl
push
xor
jno
adc
xchg
or
jnp
push
mov
jno
les
imul
pop
pop
cmp
xchg
mov
movsb
jns
sub
lods
add
pop
xor
mov
xchg
jns
insl
cmp
call
xchg
sti
out
push
inc
jb
js
nop
cmp
mov
fidivl
andl
mov
adc
xor
mov
movsb
mov
push
sbb
in
inc
and
cmc
jno
insb
cmp
es
movsb
jnp
lcall
push
sub
jmp
fstpl
ljmp
adc
push
xchg
adc
movsl
ja
fcmovu
jbe
fcoms
jmp
mov
mov
mov
mov
jne
mov
pop
or
inc
pop
pushf
xor
mov
fildl
inc
int
stos
pop
call
cmp
rorb
push
nop
popa
lret
das
subb
and
cmpsl
xchg
jae
mov
jle
sub
push
mov
imul
ss
mov
loop
dec
inc
jae
jmp
cmp
cmp
cltd
lcall
insb
xor
mov
push
testb
dec
popa
lock
mov
and
scas
mov
out
dec
add
repz
xor
and
stc
ss
mulb
popa
lret
lahf
cmp
fstl
add
int
jb
add
sti
dec
aad
cmc
inc
push
cmc
jnp
mov
test
jge
pop
jge
cmp
outsl
or
push
cmpsl
or
dec
outsl
add
dec
jbe
movsb
xor
stc
inc
fidivrs
test
pop
mov
cld
xchg
popa
mov
cmpsl
leave
xor
adc
sahf
lea
push
cmp
pushf
dec
xchg
pop
cld
cmp
ljmp
andl
and
jne
xchg
out
dec
fcomi
xor
call
sbb
mov
mov
xchg
shlb
or
push
mov
dec
pop
push
rcll
or
testb
pop
mov
hlt
or
mov
ss
xchg
add
add
adc
mov
adc
xchg
out
jns
jbe
push
mov
mov
jmp
stos
push
sbb
sub
cld
dec
js
mov
je
jg
repnz
popf
movsb
sbb
shr
or
stos
xchg
inc
cmp
sbb
mov
lods
jns
push
imul
sub
test
loop
and
xchg
test
add
inc
repnz
jg
scas
push
mov
add
or
inc
subb
out
fwait
movsl
lods
or
push
aam
xchg
leave
ljmp
loope
lcall
sbb
add
arpl
add
xor
pop
dec
imul
stc
rdpmc
fstpt
shrb
fistps
in
enter
pop
sub
dec
mov
mov
jno
or
pop
int
mov
insl
popf
js
push
mov
or
out
scas
arpl
cld
mov
xchg
mov
sbb
je
jge
sbb
push
xchg
dec
std
jp
sbb
pop
xor
add
sub
mov
adc
xor
xor
daa
call
out
loope
loop
cs
xorb
dec
pop
dec
fwait
and
dec
sbb
mov
jecxz
xchg
test
and
andb
insl
daa
iret
popl
adc
xorb
in
xor
or
mov
pop
xchg
outsb
mov
xlat
sub
lret
outsl
pop
cld
arpl
stos
aas
insl
sub
nop
mov
out
sbbb
in
dec
movd
xor
pop
rcl
mov
repnz
mov
pushf
pusha
mov
bound
stc
cmp
pop
dec
xor
test
loope
pop
xchg
mov
cmp
orb
mov
outsl
or
insl
sub
scas
out
xor
sbb
shlb
push
adc
mov
dec
cli
inc
and
sbb
nop
cwtl
xor
push
sub
ljmp
test
jb
jp
mov
scas
clc
xor
cmp
xchg
gs
fwait
jl
lcall
mov
xchg
lds
out
repnz
imulb
pop
mov
cmp
out
jns
push
push
jmp
aam
shl
icebp
inc
mov
mov
sbb
cmpsl
lock
or
jne
lds
mov
movl
pop
cmpsl
pop
dec
inc
rcrl
inc
add
inc
lret
push
sub
xlat
inc
lods
mov
mov
add
push
dec
insl
adc
inc
addb
vcvtpd2psx
shll
or
flds
ja
pop
jns
pop
popa
sar
ljmp
dec
repz
dec
fnclex
scas
insl
add
mov
cmpsl
xor
movsl
stos
ljmp
ljmp
repnz
outsb
mov
mov
rclb
jmp
sub
cli
lods
popa
lods
test
or
fstps
pop
and
dec
les
imul
in
int3
movsl
into
xor
pushl
cmc
iret
idiv
mov
inc
sbbl
and
add
packuswb
push
outsb
dec
movsb
mov
les
or
lret
in
into
sahf
sbb
outsb
jmp
mov
xchg
test
pop
xor
fldcw
cmp
and
iret
xchg
cmc
aad
nop
and
test
cmc
adc
aad
cmpsl
in
ret
and
lods
xchg
xchg
and
jno
and
enter
sub
mov
add
lds
mov
das
aam
ss
adc
or
xor
pop
pop
mov
insb
cmpsl
nop
jnp
cmpsl
mulb
sbb
pop
and
lea
sub
rclb
add
sub
pop
inc
jecxz
aam
lea
lods
out
push
add
mov
xor
test
fs
fisubrl
leave
stos
or
add
add
xor
jno
dec
jbe
push
jns
push
inc
xchg
or
mov
ja
out
outsl
mov
inc
lea
push
dec
jne
mov
test
ds
test
mov
mov
mov
add
lods
or
movl
or
mov
adc
mov
scas
pop
pop
jg
int
lret
sbb
ljmp
mov
fstl
sbb
call
daa
pop
ja
jl
adc
or
out
loop
dec
scas
push
push
mov
sbb
mov
inc
xor
fisubl
push
iret
push
das
xchg
and
xorl
shrl
addr16
xchg
loop
pop
jg
push
lahf
fdivs
or
sti
into
lahf
sbb
xchg
mov
fnstenv
fildl
rolb
mov
aas
ret
add
ds
divb
scas
outsl
jo
das
fmull
mov
loopne
lods
ret
sbb
gs
sub
sub
mov
add
rol
sbb
mov
std
add
mov
or
fisttpll
test
push
data16
mov
aad
inc
push
add
sub
add
cli
mov
mov
repz
push
ds
fisubrs
js
xor
repz
xchg
jecxz
add
cld
call
push
inc
cs
lcall
push
cmp
mov
jecxz
or
lahf
std
nop
insb
mov
inc
loopne
ds
incb
cld
sub
add
js
add
adc
pop
int3
push
lods
rol
and
test
arpl
pop
push
jns
push
cmpb
ret
imul
imul
fbstp
dec
fstpl
out
dec
jae
xchg
leave
lock
pop
pop
outsb
sub
loope
sar
pop
sub
and
sub
jns
add
pop
mov
in
jae
xchg
testb
xchg
xor
pop
push
jno
add
stos
in
lcall
bound
ficomps
lods
movl
sbbl
es
orb
aad
adc
out
je
xor
in
mov
jmp
lods
sbb
mov
mov
inc
loopne
add
push
add
add
add
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
mov
sub
or
mov
mov
mov
movl
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
and
add
xorl
mov
mov
xor
mov
sbb
mov
sub
mov
mov
mov
push
not
pop
adcl
sub
add
mov
or
movl
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
and
mov
andl
movl
mov
subl
mov
movl
mov
mov
sub
mov
addl
xor
add
orl
mov
xorl
lea
subl
mov
subl
mov
xor
subl
add
mov
andl
lea
sbbl
push
and
mov
subl
xor
add
sbbl
push
and
mov
adcl
push
andl
pushl
xorl
call
inc
mov
add
mov
mov
mov
xorl
xor
mov
xorl
add
jmp
adc
lea
movl
cmpl
je
cmpl
jne
push
pushl
push
call
xor
add
dec
mov
jmp
and
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
sbbl
sub
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
jmp
iret
and
daa
mov
jle
in
jp
adc
popa
bound
bound
mov
mov
insb
mov
std
outsb
ja
aam
pop
cli
das
nop
popl
adc
xchg
insl
fimull
pop
lahf
inc
pop
cmc
fldcw
mov
add
mov
imul
xor
or
push
mov
in
xor
fsubrl
jg
cmp
lock
stc
sub
pop
lea
fcoml
sub
fadds
xchg
and
and
je
insl
inc
test
outsb
xor
and
push
lret
fs
push
loopne
mov
push
cmp
cmp
stc
mov
push
fstp
std
jno
xchg
iret
dec
lahf
or
xchg
imul
push
jo
ss
addb
rcrb
mov
mov
adc
fidivrs
push
xchg
push
jne
mov
test
add
cli
nop
mov
lock
mov
flds
aad
sbb
in
icebp
fnstenv
mov
loop
jecxz
jbe
incl
mov
mov
push
mov
sub
pop
xor
xor
clc
dec
mov
sub
cmpsb
scas
test
adc
mov
mov
ret
dec
loop
mov
inc
fdivl
pop
and
js
pop
mov
xchg
xchg
mov
pop
and
pop
hlt
inc
mov
insl
roll
pop
addr16
es
push
scas
cmp
lret
je
mov
lods
pop
sub
push
daa
out
in
pop
outsl
xchg
cmp
jb
mov
lods
push
push
idivl
cwtl
shlb
mov
cs
in
xor
test
shrl
dec
ljmp
jl
ja
stos
test
insb
pop
push
xchg
popl
andl
icebp
mov
sub
jns
stos
lret
ret
imul
movsb
scas
dec
sub
pushf
das
jb
cld
out
push
xchg
sub
dec
inc
xchg
cwtl
imul
ficomps
mov
push
ret
cmp
jge
fldt
push
sbb
movsb
repnz
xchg
push
mov
inc
adc
popf
inc
cmp
pop
cmp
ja
mov
dec
xor
mov
sub
popa
jl
mov
les
pop
add
and
stc
mov
mov
or
mov
lcall
pushf
mov
ret
loopne
imul
dec
jne
mov
rorl
mov
in
mov
in
movsl
jae
mov
outsl
insb
pop
repz
shlb
or
rcll
bound
out
jp
int
mov
jecxz
aas
enter
sbb
xlat
ss
out
loop
or
fiadds
imul
jg
cwtl
pushf
pop
mov
sbb
stos
sahf
push
loopne
mov
dec
dec
pop
cmpsb
addr16
js
jge
inc
sahf
ficompl
mov
scas
in
clc
pop
rol
into
push
cmpsb
push
jge
lea
push
stos
and
cld
dec
pop
jle
pop
sub
out
xor
mov
dec
fs
and
sub
xor
sub
lret
insb
jmp
decl
push
and
fwait
shl
and
add
in
jmp
popa
jb
dec
ror
lock
das
cmpsb
pop
sub
cmp
add
cmc
jne
pop
add
cmpsb
jno
cmp
jge
mov
cmp
lret
jle
xchg
cmp
addr16
cwtl
pushf
mov
push
cs
mov
mov
paddq
es
mov
mov
addl
cld
shll
repnz
or
pop
mov
and
jb
mov
dec
cmp
sbbl
jbe
adc
insl
sub
mov
adc
xor
rorb
adc
lcall
outsl
fsubl
lock
inc
bound
cs
ljmp
pusha
popa
cmp
mov
dec
mov
adc
or
icebp
xlat
lret
enter
imul
pop
lret
out
lret
out
pop
push
cltd
pop
cmp
int3
sti
jae
pushf
dec
dec
jge
sbbl
loope
aam
imul
jecxz
lret
pop
mov
mov
inc
fwait
jecxz
sub
adc
mov
pop
xor
inc
ret
mov
mov
mov
in
mov
ljmp
loope
dec
mov
mov
or
dec
sub
faddl
addr16
fs
dec
les
dec
scas
adc
or
pop
test
jno
mov
inc
jle
ret
pop
inc
out
popf
mov
das
or
lods
idivb
in
dec
out
add
mov
adc
fnstsw
movsl
test
scas
fbstp
addl
mov
sub
fisttps
lock
mov
ljmp
jg
push
dec
or
pop
es
sbb
jb
out
lds
push
rclb
mov
scas
scas
sbbl
xor
and
in
push
test
addl
out
and
sarl
adc
and
or
sbb
push
fldenv
in
ror
ljmp
dec
out
loop
ja
out
mov
sub
loope
outsl
fdiv
iret
jg
loop
mov
fstpl
xorb
test
jnp
pop
dec
inc
xor
sti
adc
ret
mov
pusha
or
inc
pop
pop
mov
dec
mov
adcb
add
aas
mov
lret
xchg
aaa
aaa
outsl
adc
adc
sub
pop
and
dec
mov
push
jle
xor
mov
movsb
push
xchg
pop
inc
or
pop
fisttps
and
push
jge
and
push
jecxz
and
add
inc
mov
mov
inc
xchg
enter
dec
outsb
mov
test
sbb
push
outsl
push
mov
sahf
pop
js
loop
rcll
add
in
sub
insb
push
cmc
loop
lcall
outsb
mov
inc
dec
cmp
or
or
rorl
push
jle
sub
sbb
in
xchg
leave
mov
out
punpckhwd
cmp
push
cltd
repnz
mov
incl
inc
mov
clc
and
push
nop
xchg
xchg
rolb
pop
add
mov
push
lds
mov
repnz
cmp
enter
jg
jmp
mov
xchg
icebp
mov
mov
lahf
mov
mov
fbld
dec
out
nop
cmc
dec
in
sub
sbb
call
out
repnz
fisttps
lock
mov
dec
aam
jns
cmp
push
adc
inc
mov
xchg
dec
push
fs
ret
add
sbb
into
std
or
xor
mov
jnp
int
movsl
xor
test
mov
cmpsb
call
pop
mov
subb
jp
xchg
push
push
cwtl
mov
pop
mov
xchg
aaa
in
and
xlat
mov
push
lea
fs
mov
mov
adc
inc
dec
fs
push
insb
test
ljmp
inc
push
icebp
push
fsubr
addl
mov
jecxz
call
mov
cmp
rcr
push
out
subl
xor
loopne
rcrb
popa
mov
movsb
and
in
pop
cld
push
push
imul
add
jo
movsl
push
push
mov
es
cs
or
or
mov
iret
mov
cmp
pop
pushw
cmp
push
cs
ds
ja
out
sbb
dec
sub
jbe
ljmp
dec
jne
and
shr
ret
cwtl
dec
rorb
movsl
fs
add
ljmp
push
pop
mov
cwtl
and
push
in
dec
stos
sbb
mov
ret
icebp
dec
inc
xorb
pop
enter
sarb
mov
nop
xchg
inc
jbe
test
and
add
clc
cmp
mov
push
xchg
sarb
lock
stc
loopne
adcb
sub
clc
and
stc
hlt
rcll
cmp
mov
mov
cltd
push
int
iret
pushl
mov
adc
lret
cld
out
cmp
dec
dec
sbb
popa
repz
aaa
test
cs
xor
dec
movsl
add
mov
cs
inc
inc
and
fdivs
xchg
add
rclb
loopne
dec
dec
cmc
inc
push
lret
jp
scas
fbld
and
dec
xor
test
add
push
jno
dec
cwtl
cmpsl
inc
lret
lret
xor
jle
popf
mov
incl
sbb
call
sub
pop
pusha
aaa
cmpsl
dec
daa
adc
and
mov
or
test
mov
mov
pop
cltd
mov
sbb
add
ds
xor
stc
cwtl
ja
dec
or
jmp
addl
stos
lret
repnz
push
push
je
mov
sub
icebp
xchg
ss
or
ss
mov
jle
cmp
es
sbb
cmpsl
sbb
pop
cmp
pcmpeqw
mov
loope
xacquire
add
sbb
lret
scas
adc
icebp
sbb
out
aas
xchg
mov
insl
enter
cmp
out
pop
xchg
mov
mov
outsb
cmp
dec
pop
xchg
pusha
dec
jns
loop
mov
add
mov
lahf
mov
ret
adc
jb
jecxz
xorl
das
and
push
les
add
jo
fisttps
add
bound
out
lret
sbb
jb
and
fdivl
dec
pop
icebp
es
mov
and
jge
ret
mov
jb
mov
xchg
cltd
jmp
popa
pop
xchg
jo
js
call
scas
and
int
add
call
popa
ds
inc
dec
pushf
sbb
mov
sbb
cmp
mov
push
das
sub
adc
xchg
addr16
clc
jae
sub
pop
mov
add
imulb
jg
mov
lods
mov
jle
add
sub
jg
add
aaa
adc
in
clc
pop
jmp
out
xor
iret
aad
aad
dec
or
cmc
out
jae
push
dec
int
popf
aas
and
lcall
pop
pop
add
sbb
sub
jb
pop
iret
sbb
gs
xchg
pop
icebp
loop
lret
inc
inc
jmp
je
push
dec
mov
xchg
cmp
xchg
jp
in
dec
or
cmc
loop
out
std
bound
in
or
xchg
sti
test
cmp
sub
leave
jle
js
and
in
inc
ljmp
mov
mov
mov
in
pop
outsl
pop
vmulss
inc
xlat
adc
pushf
or
cmp
iret
pushf
loop
cld
jno
out
lods
mov
cs
cmp
bsf
sbb
or
lea
ss
mov
mov
into
pop
sbb
repnz
sub
sub
push
xchg
les
in
imul
loopne
fsub
and
insb
mov
mov
clc
jnp
sub
and
push
sub
iret
in
scas
notl
inc
jmp
xor
or
mov
fildl
or
fs
fucom
sbb
insb
cmp
cmp
adc
inc
sub
mov
pop
add
test
outsb
loope
insb
mov
sub
mov
aad
in
sbb
mov
ds
jnp
jnp
mov
addr16
pop
sbb
or
pop
lret
and
sub
cmpsb
inc
pusha
inc
out
xchg
aaa
push
push
fnstenv
insl
stc
lret
insb
clflush
xchg
sarl
pop
add
enter
sub
mov
and
je
pop
jmp
ret
fdivs
mov
mov
inc
movsl
inc
add
repz
sbb
sbb
addb
adc
jb
popa
add
dec
lcall
push
pop
movsb
es
fisttpl
sub
mov
sbb
lahf
pop
or
flds
push
loop
or
jne
fidivl
pop
sbb
xchg
push
ret
add
clc
push
mov
jge
add
ret
pop
sub
sub
inc
xor
push
push
xchg
cmp
arpl
push
addr16
sub
ss
mov
daa
imul
mov
jns
mov
push
sbb
jmp
jge
or
in
sub
cs
cmp
or
fstpl
add
clc
xchg
pop
lea
in
xchg
jecxz
bound
xor
lahf
push
enter
pop
ja
out
out
ljmp
out
leave
xchg
dec
out
int3
jp
mov
sub
jl
jmp
add
dec
repnz
xor
out
ljmp
inc
or
xchg
fbstp
sub
stc
repnz
mov
cmp
jne
in
push
jmp
ret
jbe
and
adc
jmp
stc
and
pop
sbb
imul
stos
test
adc
jmp
test
cmp
popa
daa
jae
enter
cmpb
pop
cwtl
pop
xor
ljmp
call
dec
int
jle
mov
cld
test
arpl
inc
inc
repnz
in
mov
push
push
je
mov
sub
shr
nop
in
or
int3
mov
cmpsl
or
xchg
xchg
mov
cli
scas
shll
cmpsl
sbb
xor
push
and
rcrl
aam
hlt
push
rolb
and
inc
int3
jnp
mov
ss
and
xor
lahf
xor
repz
mov
push
or
iret
jg
cmc
dec
jmp
ret
xchg
xchg
mov
mov
and
in
xchg
cmp
mov
push
cs
outsl
roll
mov
into
add
xor
mov
shrb
not
jne
arpl
adc
sti
mov
out
lock
ret
pop
fnsave
jne
mull
sub
sub
xor
sbb
gs
jnp
xor
hlt
addl
fildl
idivb
push
pop
mov
jb
clc
sbb
add
lret
sub
shrb
and
stc
push
add
and
mov
movsb
repnz
mov
pop
pop
lea
out
scas
je
sbb
push
sbbl
mov
lods
sbb
pop
icebp
push
add
aaa
jg
imul
pop
sub
push
mov
cmp
cmp
popf
xchg
imul
jb
jae
xor
cmp
lret
mov
stos
in
aas
or
leave
add
mov
sbb
mov
mov
fisubrl
mov
xlat
ja
push
and
adc
enter
push
and
or
adc
dec
movb
cmp
int3
pop
int3
jns
sarb
mov
xchg
push
lds
inc
dec
xchg
xchg
inc
lods
mov
or
roll
cs
push
test
mov
loop
lret
mov
cld
pusha
push
push
outsl
xlat
or
push
mov
cli
outsb
xor
and
xor
jecxz
int
jmp
push
xchg
xchg
push
scas
cmp
xchg
push
insb
mov
lret
test
push
adc
and
push
test
int
in
gs
pop
test
jbe
inc
adc
addl
jno
in
arpl
xchg
mov
enter
test
std
or
xchg
fidivrl
dec
push
mov
sbb
push
jecxz
cmp
or
xor
pop
fidivl
pop
mov
inc
das
loopne
xchg
sbb
inc
inc
icebp
fxsave
fiaddl
or
push
adc
dec
mov
sbb
mov
xor
outsl
lods
pop
lret
adc
inc
pop
sub
mov
mov
xchg
stos
loop
xor
int3
mov
scas
das
mov
aas
daa
cmp
push
movsb
clc
push
insl
into
xlat
pusha
test
scas
push
mov
mov
add
insl
and
int
ficoms
add
fistps
mov
xchg
push
rorl
lds
dec
push
or
and
aam
popa
adc
pop
pop
scas
bnd
dec
xor
xchg
dec
icebp
daa
lods
cltd
adc
cmp
stos
xchg
arpl
pop
pusha
cmp
les
pushf
imul
xor
cmc
push
lcall
loop
push
mov
lods
push
pop
mov
popa
es
fldl
mov
dec
adc
push
mov
inc
mov
mov
and
xor
popf
mov
in
outsb
xchg
sbb
mov
or
push
test
mov
mov
sbb
data16
push
sbb
add
lds
divb
pop
neg
cmpsl
sti
inc
and
pop
add
xchg
xor
scas
sbb
mov
jb
inc
popfw
test
mov
jnp
cmpsl
jbe
test
sbb
dec
ss
mov
or
sti
mov
ret
adc
aaa
dec
lea
mov
ffree
imul
in
cmp
repnz
pop
addr16
push
dec
and
orl
inc
sub
jb
sar
dec
and
adc
inc
pusha
inc
mov
jge
iret
test
mov
shlb
jo
jbe
pop
adc
sub
and
fcomip
stos
mov
mov
pushf
push
aad
adc
rol
mov
jne
in
cmp
sbb
add
out
popl
andl
or
jmp
stc
std
jl
sub
xchg
scas
mov
cwtl
jge
mov
adc
push
cmp
cmp
mov
cwtl
shl
jg
stc
mov
out
or
call
push
mov
push
xor
mov
mov
sub
icebp
out
stos
lock
xor
xchg
mov
fs
push
lock
aam
movsb
fistpl
mov
sub
or
pop
popf
mov
in
mov
adc
and
cwtl
out
lret
pop
scas
mov
mov
call
clc
loopne
cmp
outsb
adc
xor
push
insl
mov
mov
ret
sbb
mov
ja
xchg
es
push
in
pop
mov
xchg
jb
adc
popf
cmp
test
sub
sbb
cmp
sub
in
mov
dec
jle
jbe
into
mov
pop
shlb
mov
insb
popf
xor
fnstcw
out
imul
rcrl
sbb
int3
sarl
mov
out
shlb
xchg
cmc
sbb
call
sub
sbb
inc
leave
jo
in
negl
xor
mov
gs
mov
cld
insb
outsl
xchg
sub
pop
jg
pop
arpl
test
orl
test
ljmp
dec
sbb
and
hlt
insb
jp
mov
pop
dec
inc
pop
push
ret
xor
jg
pop
cmpsl
sub
loop
jecxz
pop
add
test
xlat
cmc
ffreep
mov
mov
cmovne
jp
pop
call
je
dec
gs
fmuls
push
dec
mov
push
test
call
fcmovbe
inc
push
pop
stos
sub
pop
add
xlat
sub
mov
pop
dec
fs
cmp
mov
and
push
fsqrt
std
pop
push
pop
hlt
clc
mov
pop
push
dec
adc
outsl
mov
xor
cmpsl
inc
test
pop
mov
jp
mov
xor
mov
enter
fldl
pop
popf
add
jge
les
and
test
mov
jle
gs
jmp
cs
cmp
cs
aad
inc
popf
cmpsl
test
dec
enter
mov
xchg
lods
jne
dec
fmul
ljmp
sub
xor
jmp
xor
fsubs
xor
jb
lret
mov
jne
cmpl
leave
loope
jge
and
push
lret
jmp
mov
arpl
mov
sub
mov
jb
aas
push
movsl
insl
out
shll
subl
dec
pop
in
into
pop
cmp
cltd
cmp
xor
lock
dec
fldcw
ret
and
in
mov
jg
mov
xor
jmp
ss
dec
sti
or
mov
sahf
sbb
push
jp
ret
fwait
or
cwtl
push
pop
add
push
dec
push
jecxz
and
push
outsb
clc
fwait
sub
mov
out
lods
loope
inc
es
sbb
repnz
test
inc
mulb
xchg
cmc
mov
inc
out
fistpl
push
or
sbb
pop
aam
cmpsl
or
addr16
mov
and
cmp
add
test
dec
cmpsl
mov
or
lods
mov
icebp
xor
or
mov
hlt
pop
ljmp
xchg
or
jne
xchg
mov
inc
jnp
shlb
int
pusha
jg
insb
xchg
add
dec
lock
lea
loope
adc
cs
push
test
repz
or
in
fsubrs
roll
lcall
jns
cwtl
push
inc
imul
xor
out
inc
cmp
insl
xlat
dec
xchg
mov
mov
dec
daa
scas
mov
sbb
sbb
jg
int3
xlat
stos
hlt
lods
and
cltd
push
pop
mov
sbb
lret
cmpsb
mov
mov
mulb
outsl
jg
fsubrl
push
daa
bound
ret
sub
out
push
cmp
push
push
cmp
pushf
sbb
out
sarb
icebp
lea
add
int3
pop
add
sbbb
and
xchg
sub
adc
push
jmp
push
push
popa
imul
xchg
pop
adc
std
inc
inc
cmpsl
lret
cld
popa
cmp
mov
cmp
ss
jmp
push
repnz
fnstenv
add
add
pop
repz
stos
test
inc
xlat
pop
jmp
mov
mov
loop
movsb
inc
in
movsl
push
in
cli
pmaxsw
sbb
icebp
or
add
outsb
enter
mov
aam
sbb
push
int3
xor
outsb
xlat
push
dec
mov
sbb
dec
gs
cld
rcrl
xor
sub
inc
push
mov
push
cmp
test
sahf
lock
lret
xorb
dec
in
mov
jl
bswap
mov
xchg
sahf
xor
xchg
movsb
dec
mov
cmp
lock
cmpsb
jne
cmpsb
cmp
pop
mov
pusha
int3
sbb
mov
iret
fyl2x
cmp
in
aad
neg
sub
loopne
shlb
cmp
aas
xorb
xor
xchg
lret
mov
xor
mov
out
inc
jo
ret
fisubl
in
jae
inc
arpl
dec
popf
scas
push
sbb
xor
sbb
and
lods
rcrl
popf
or
test
cmpsl
pop
push
repz
cmpsl
std
dec
movsb
stc
add
andl
sahf
xchg
cmpsl
or
gs
xor
xor
lods
adc
jg
xor
pop
cmp
push
loop
pop
mov
mov
jbe
lock
in
daa
outsb
sbb
jb
stc
xchg
push
or
push
out
rol
inc
or
push
inc
repz
jnp
test
lock
push
xor
movsl
js
jp
mov
xlat
inc
jg
mov
inc
push
inc
int
cli
sbb
leave
cld
rcr
mov
aas
lret
pop
and
dec
cld
cld
stos
jae
rorb
insb
xor
mulb
stos
and
shlb
sbb
int3
xchg
fldenv
inc
leave
jbe
push
pop
mov
mov
jmp
sub
pop
int3
pop
xchg
mov
adc
jo
inc
xchg
add
lcall
lock
push
sti
lea
mov
and
sbb
dec
lret
inc
inc
ss
adc
jns
imul
jle
js
faddl
push
bound
lret
call
mov
dec
icebp
jns
pop
int
cmc
sub
xor
inc
add
adc
stos
insb
mov
insl
xchg
xchg
push
sub
mov
xchg
jns
or
iret
mov
in
imul
dec
js
ljmp
add
mov
mov
pop
add
cmpsb
idivl
sub
mov
inc
lods
dec
inc
cwtl
adc
push
push
out
lods
or
mov
js
push
mov
ja
insb
mov
push
mov
mov
or
add
aad
dec
add
sub
lret
and
scas
fisubrl
jmp
jecxz
aad
add
adc
leave
xchg
pop
push
mov
call
sub
pop
add
jmp
lds
add
or
jge
out
rcrb
mov
arpl
mov
dec
pop
cmpl
int3
ficompl
movsl
jp
sahf
mov
loop
mov
mov
xchg
dec
or
fdivs
addr16
lret
imul
mov
inc
dec
adcl
jnp
sub
outsb
icebp
ja
outsl
pop
int3
xchg
push
push
bound
pop
outsl
in
daa
pop
test
push
insb
sbb
loopne,pt
mov
test
pop
arpl
and
dec
imul
pop
xchg
cmp
pop
repnz
cmpb
sbb
aad
sbb
cmpl
fidivrs
or
pop
lods
add
mov
in
xor
jbe
dec
sahf
add
cmc
inc
sarb
inc
rcrl
fcoml
jbe
lods
jno
test
cs
in
xchg
inc
jne
stos
and
ljmp
mov
pop
lock
push
sbb
cmp
inc
stc
add
cmpsl
mov
adc
fmuls
pusha
sbb
or
lret
fstps
and
lods
mov
push
mov
jno
sub
das
sub
out
rcl
pop
lods
jmp
loopne
push
stos
dec
sbb
sub
ds
sub
add
nop
js
mov
dec
mov
push
jb
ds
xor
lock
enter
inc
int3
xchg
test
xor
rorl
es
lods
mov
jno
or
add
out
in
jmp
leave
and
mov
testl
mov
scas
push
xor
call
dec
cltd
jmp
xor
enter
shll
aad
ljmp
int3
pop
in
js
pop
mov
jae
lret
xchg
xor
aas
loope
xchg
xor
enter
insb
ret
aad
mov
clc
adc
cmp
cmp
sahf
data16
inc
sbb
popf
pop
in
dec
and
pop
outsl
cwtl
leave
jb
cmp
cmovns
add
lret
adc
xlat
fucomip
pop
in
leave
mov
xchg
inc
into
lds
jmp
mov
cs
pop
andb
mov
mov
out
lret
mov
add
imul
inc
pusha
leave
adc
sti
sub
xor
xor
pop
add
lret
adc
es
xchg
jns
out
pop
enter
dec
lahf
and
add
inc
mov
ljmp
mov
mov
faddp
scas
call
mov
scas
pop
jae
push
fldcw
scas
mov
jnp
data16
in
mov
sub
push
sbb
adcl
dec
int3
leave
aaa
iret
movsb
push
push
pop
pop
aam
jl
sti
daa
loope
mov
or
sbb
addr16
jge
dec
cmc
dec
sbb
hlt
add
setg
xchg
aaa
lods
pop
repz
in
cmpsl
mov
add
or
inc
sbb
inc
out
out
pop
sbb
pop
push
in
cmpsb
mov
mov
jl
xchg
les
outsb
out
bound
sub
stos
imul
mov
sbb
mov
jmp
lods
inc
cwtl
push
ret
cmp
sahf
push
into
insl
je
jp
xor
jge
repz
lcall
call
pop
push
and
lret
lds
push
fdivrs
aam
jg
mov
mov
mov
fbld
in
shl
sar
inc
pop
xchg
fldl
mov
inc
lcall
mov
lds
adc
mov
lods
dec
xchg
je
enter
mov
aam
inc
push
ljmp
ret
xchg
xlat
and
repnz
bnd
push
cld
fiaddl
rcrb
add
rorl
add
or
out
fdivrs
and
negl
fucom
lds
das
xor
jne
in
clc
repnz
dec
inc
sbb
popa
cli
inc
adc
int
inc
sub
add
repz
adc
fldt
dec
or
outsb
icebp
sar
mov
mov
mov
fcmovnb
pop
test
rcrb
sbb
popa
adc
fisttpl
movb
xchg
insl
das
push
call
xorl
xchg
lods
mov
jns
mov
test
dec
test
inc
subb
push
rcrb
iret
push
add
mov
out
adc
loop
pop
hlt
xor
cltd
or
lds
mov
sbb
mov
and
or
movq
jb
orl
int
and
mov
inc
sub
dec
jb
idivb
nopl
stos
inc
pop
or
lea
or
cmp
loope
test
xor
je
mov
out
neg
inc
outsl
and
mov
sbb
push
mov
mov
mov
inc
pop
imul
lahf
adc
sub
pop
push
mov
fstl
xor
jmp
loop
mov
mov
test
lret
adc
pop
mov
shlb
jmp
sub
pop
enter
sbb
imul
ret
pop
iret
call
dec
aam
push
ja
jle
jne
pop
mov
jo
in
dec
aam
aaa
cmc
mov
mov
jno
scas
lods
cld
loopne
xor
ror
push
pop
ret
sbb
lcall
lcall
fnstenv
icebp
xchg
mov
jp
inc
js
adc
jg
loop
jbe
xor
test
xor
push
sbb
or
movsl
cmpsl
test
pusha
sbb
add
pop
push
shlb
xor
or
pop
in
int3
sti
and
pop
rorl
push
pusha
sbb
xchg
and
xchg
add
dec
ret
jle
jns
shl
into
adc
push
out
xchg
sbb
dec
xchg
mov
cmp
mov
pop
xchg
push
or
or
repnz
fnstcw
xlat
sub
sahf
inc
lock
xchg
movsb
sub
shl
push
jnp
fisttpll
jbe
xchg
push
or
ret
das
fiadds
fbstp
jae
mull
push
lds
push
gs
jae
in
mov
ja
sbb
cmp
push
mov
mov
mov
add
ja
cmc
pop
push
out
rol
jns,pn
pop
sahf
xorl
insl
mov
fdivl
imull
adc
and
mov
jl
xor
test
jno
fs
push
leave
dec
fdivrs
mov
test
lcall
cmpsb
jle
orb
shll
mov
cltd
mov
rclb
outsb
dec
shlb
int
sbb
inc
mov
aam
mov
pop
ljmp
ret
pop
test
xor
gs
fadd
mov
and
mull
loop
jns
push
mov
add
fsubl
jle
inc
xor
ret
bound
bound
xlat
cs
ss
std
adc
test
std
or
fisttpl
leave
jo
lahf
cmp
jge
dec
mov
jno
fs
into
nop
cmpsb
mov
int
jl
test
cli
out
ljmp
int
sbb
ds
sbb
inc
jp
mov
pop
mov
push
pop
cltd
int
das
ja
inc
pushf
hlt
xor
out
xor
addl
cltd
mov
mov
cmp
cmpsl
shlb
outsl
aam
pop
cli
fisttps
push
push
dec
mov
cmp
mov
fs
cs
nop
dec
inc
sarl
sub
cmp
ss
int3
mov
inc
pusha
sbb
cli
xchg
cmp
or
sbb
mov
addr16
cmp
pusha
idiv
or
cmp
lcall
cmc
mov
inc
sub
ja
aaa
nop
gs
mov
mov
mov
loop
cli
out
push
das
push
push
mov
dec
or
pop
sub
push
in
mov
daa
xor
jge
lcall
in
ja
cmp
or
outsl
add
add
or
cmpsl
cmp
sbb
cli
inc
cwtl
lock
mov
xorl
adc
les
and
adc
pop
mov
movsb
dec
lahf
lret
cmp
fadd
out
das
cmp
push
dec
add
jmp
sti
cmp
mov
xchg
adc
push
shl
add
pop
xchg
cltd
jne
outsb
jp
pop
pop
pop
rcrl
cmp
xchg
adc
aam
xchg
pop
cmp
lret
lret
jns
jp
lret
pushf
push
nop
jns
out
sar
xlat
fcmovnbe
push
pop
icebp
fnstsw
fwait
adc
pop
aas
cmpsl
sti
cmpsb
push
mov
pop
lea
pusha
icebp
mov
pop
ret
inc
stos
inc
stc
lret
mov
mov
nop
mov
cmp
mov
xchg
dec
xor
gs
bound
sub
popf
mov
lret
test
pop
dec
mov
push
sub
sub
lcall
pop
dec
iret
ljmp
std
dec
fucomi
subb
mov
adc
es
pop
imul
sub
jb
pop
mov
aas
into
and
nop
push
push
or
add
ds
xchg
out
orb
dec
push
fdivs
inc
adc
outsb
sbb
into
xchg
or
imul
push
test
mov
fidivs
sarb
in
and
mov
int
jmp
and
or
adc
sub
into
push
dec
xchg
gs
mov
mov
push
repnz
repnz
adc
jo
ficoms
dec
clc
mov
push
xchg
push
pop
xchg
push
ficompl
jmp
push
das
pop
arpl
push
inc
pop
daa
out
dec
ljmp
js
popa
in
push
enter
dec
scas
in
roll
mov
insl
mov
mov
add
inc
arpl
dec
mov
jne
pop
xor
fnstcw
adc
jo
adc
aad
in
cmp
inc
test
imul
mov
mov
addb
xor
aam
mov
sbb
xor
cmp
push
and
xchg
fildll
call
rorl
in
notl
or
pop
bound
test
mov
push
lahf
mov
cmp
inc
inc
sbb
stos
sbb
into
jb
popa
test
mov
jne
push
jecxz
std
sub
and
jp
sub
leave
addr16
fdivrl
lock
add
dec
inc
mov
std
add
imul
dec
mov
call
leave
xchg
cltd
sbb
movsl
push
shll
dec
fdivrs
outsb
stos
or
xchg
dec
js
xchg
pusha
push
andb
add
mov
lea
push
dec
stos
mov
adc
adc
add
call
jecxz
shlb
cmpsl
adc
outsl
add
dec
sub
dec
lea
ljmp
loop
adc
adc
add
loop
xchg
sub
in
cmp
adc
out
xchg
roll
mov
pop
adc
sahf
adc
pop
push
xor
xor
mov
xchg
test
jnp
xchg
inc
push
sub
dec
inc
push
fs
xor
push
jne
dec
je
jno
aam
push
movsl
dec
int3
test
sbb
mov
inc
clc
ds
iret
fs
cmp
pop
add
pop
mov
movsl
call
xchg
pop
mov
aam
lods
cmc
inc
fcmove
rcrb
inc
dec
mov
jecxz
inc
imul
pop
bndstx
notl
insb
ret
in
incb
insb
mov
loope
lods
leave
mov
jg
sub
cmp
mov
icebp
mov
cmp
loop
imul
cli
mov
xchg
sbb
out
ljmp
jne
and
xchg
std
std
mov
jno
int3
sub
shll
sahf
inc
push
addr16
jmp
test
mov
dec
add
xchg
test
data16
out
mov
call
mov
mov
imul
loopne
mov
pop
aam
mov
pop
add
dec
pop
in
jnp
andb
sub
dec
xor
and
imul
jp
in
jecxz
or
mov
test
xor
leave
test
or
ds
or
push
jo
cmpsl
fldt
pop
fadds
stos
into
push
inc
into
mov
add
hlt
and
jge
mov
add
fwait
mov
enter
push
lods
fldt
into
sbb
cmpb
mov
shrb
lcall
xlat
repnz
adc
add
lock
sub
mov
imul
lahf
fisttpll
clc
bswap
ror
in
rclb
pop
xchg
mov
stos
sbb
mov
xor
jb
push
ds
push
xchg
mov
out
xchg
mov
adc
push
mov
dec
or
les
in
inc
out
mov
out
enter
aam
inc
cld
cli
scas
mov
mov
insl
cmc
ja
fidivrl
pusha
sbb
adc
shll
jmp
xor
and
xchg
test
push
pop
rcrb
xchg
pop
je
pop
jle
add
push
clc
sahf
sbb
push
sbb
aam
push
test
shlb
jecxz
xor
loopne
push
or
iret
je
inc
test
in
adc
aas
pop
lret
popa
fucom
adcl
out
movb
out
push
lret
dec
aad
mov
xchg
sub
iret
enter
icebp
jo
xchg
inc
or
push
push
insl
xorl
ds
notb
push
shll
or
sub
inc
dec
mov
or
lret
mov
sub
fstl
push
and
lea
int
mov
adc
sub
pop
mov
lret
cmp
lods
test
xor
fwait
ljmp
cs
dec
mov
push
daa
pop
mov
xchg
add
fldt
stc
push
add
cld
and
xchg
push
lods
sub
js
inc
inc
xorb
lods
mov
mov
jb
mov
ss
shl
jecxz
pop
pop
jnp
sbb
fsubrs
insl
mov
add
mov
imul
inc
dec
mov
cmp
adc
or
cmp
inc
lret
mov
xor
pop
pop
xchg
push
in
jle
push
mov
popfw
or
fistl
xchg
test
jno
notb
push
les
adc
sub
stos
mov
call
icebp
dec
xor
enter
mov
and
dec
sub
mov
outsl
in
bound
inc
cmp
and
divl
or
lahf
pushl
and
and
pop
sbb
add
mov
jae
mov
push
xor
cmp
adc
js
lods
jl
pushf
push
push
das
mov
mov
lods
jmp
xchg
leave
repz
jle
sub
stos
gs
and
jb
std
in
push
push
push
push
test
je
pushf
icebp
scas
rorl
add
and
add
je
sti
loop
xchg
mov
dec
rclb
sub
icebp
mov
jb
cmp
shlb
inc
sub
push
adc
and
fsubrl
stos
daa
xchg
push
jmp
cmpsb
mov
mov
cmp
daa
jns
xchg
push
loope
insl
aad
push
adc
push
lcall
dec
pushf
push
js
arpl
pop
and
addr16
adc
add
add
stos
sti
movsb
dec
mov
rol
movsl
pop
lea
aaa
xchg
xchg
sbb
lods
pusha
and
ficoms
add
or
sub
dec
mov
repz
push
andb
dec
lds
mov
pop
int
daa
add
push
loopne
adc
pop
mov
mov
or
mov
stos
xor
icebp
adc
xor
aam
or
ror
push
or
imul
cld
rorb
test
out
jb
fbstp
movsl
pop
sbb
pop
addr16
cmpsl
stos
sti
add
mull
dec
clc
pusha
pop
and
sbb
sbb
test
sbb
jne
adc
test
insl
mov
pushf
mov
sbb
jbe
daa
test
fsubrl
jns
push
scas
mov
xchg
aad
jns
repnz
and
and
cwtl
movsb
pop
movsb
push
pop
icebp
pop
gs
sub
dec
mov
scas
push
ljmp
mov
push
sbb
imul
xchg
inc
inc
jo
shrb
cmp
insb
lcall
ljmp
outsb
gs
push
jno
mov
orb
inc
outsl
in
pop
movb
fnstenv
rcll
lock
hlt
cwtl
cmp
leave
ja
pop
mov
in
or
pop
addr16
inc
sbb
or
push
and
jl
dec
fwait
push
lods
mov
mov
mov
add
mov
dec
mov
shl
sbb
xchg
test
push
inc
xlat
aam
pop
out
jo
pop
mov
or
xor
pop
cmp
fstp
scas
xorb
ja
repz
rorb
or
adc
cli
sgdtl
mov
xor
test
aam
jns
in
sbb
xchg
cmpsb
das
add
mov
js
jnp
sub
jo
icebp
sub
mov
push
jbe
sbbl
scas
movsl
jp
add
add
pop
add
xor
lcall
fistl
out
jge
jmp
inc
out
sbb
xlat
jle
mov
push
xchg
xchg
jne
int
fldenv
ficoml
jmp
cmp
mov
ret
in
or
jo
or
into
leave
pop
inc
movsl
sub
sub
scas
das
dec
push
inc
loope
xchg
add
adc
push
int3
mov
jno
ljmp
push
repnz
jnp
fsubrl
xor
jae
ret
dec
add
dec
leave
mov
ret
and
repnz
pop
cmp
lds
sbb
sub
push
mov
mov
es
mov
sub
mov
ss
inc
xor
sub
ja
cmp
and
inc
aas
rcl
and
jge
sub
mov
add
jo
mov
xchg
xchg
or
int
bnd
xchg
jg
int
jge
aas
mov
inc
pop
test
mov
inc
inc
cmpsl
cli
inc
ret
push
loope
mull
pop
test
jb
out
cwtl
jmp
fisubrs
ret
cld
lods
mov
jb
bound
outsb
mov
movsl
sub
xchg
add
insb
sbb
lret
test
test
xchg
adc
idiv
ret
nop
adc
xchg
repnz
in
insl
push
xor
repz
test
pop
ja
push
push
int
xor
aaa
lret
rclb
mov
imulb
mov
push
sbb
pop
in
inc
imul
add
mov
add
pop
mov
das
leave
inc
pushf
mov
or
std
std
movsl
stc
js
stos
insb
pop
add
dec
pop
leave
ja,pn
mov
xor
push
ja
pop
pop
fmul
sbb
mov
aaa
xchg
int
and
std
fsubs
fstl
test
jo
mov
add
mov
cmpl
push
cmp
xchg
mov
leave
pop
sub
pop
fwait
sub
insb
xor
jbe
pop
stos
add
jle
and
addb
push
outsl
cmpsb
in
push
and
mov
int3
fdivp
outsl
arpl
inc
mov
add
add
test
xor
inc
dec
fwait
mov
inc
insb
jne
jmp
gs
dec
inc
mov
fsubrl
pop
cmpl
pop
in
xor
xor
xor
inc
xor
or
mov
jge
pop
outsb
ret
shlb
idivl
test
jle
cli
bound
subl
fsubl
sub
or
clc
jmp
dec
mov
xchg
enter
xor
fwait
and
lret
iret
sbb
ss
popf
shrb
mov
mov
ljmp
int
adc
dec
inc
movsb
jae
push
daa
nop
out
cmpsw
jl
inc
lds
scas
ss
stos
sbb
fstpl
imul
and
out
push
cmp
int
push
sub
sub
xlat
loope
pop
sbb
fnstsw
jg
test
inc
or
fwait
jecxz
jno
dec
lods
jge
loopne
push
cld
mov
cmp
push
mov
inc
aas
mov
sbb
ss
outsb
aam
sbb
ficomps
loope
mov
into
add
mov
out
loope
sti
inc
mov
dec
ljmp
xchg
xchg
mov
and
cltd
cmp
sbb
lcall
pop
mov
cltd
xchg
xchg
loopne
out
aas
mov
dec
push
pop
dec
push
and
xorl
mov
arpl
repnz
mov
ds
xchg
xor
cmpl
cmpsb
add
test
inc
stos
push
mov
push
js
or
in
mov
mov
xor
test
cmp
stc
mov
mov
out
sub
fistpll
jmp
xor
xchg
test
pop
hlt
fwait
mov
loop
push
cwtl
insl
push
aad
sbb
lret
pusha
lds
arpl
jnp
pushl
movq
adc
sbb
aam
cltd
inc
pusha
out
xor
sbb
xor
xchg
dec
push
push
jmp
add
xchg
push
mov
xchg
aam
imul
xlat
xor
mov
icebp
jmp
jo
push
je
adc
mov
pusha
jle
push
or
pop
add
push
dec
and
or
dec
dec
push
adc
jo
inc
repnz
fwait
cltd
or
mov
in
xchg
les
ljmp
movsb
sub
ffreep
gs
xchg
ret
pop
mov
stos
or
std
mov
xor
mov
popf
scas
fdivrl
push
dec
mov
dec
cltd
lret
shl
loopne
mov
gs
popa
add
mov
test
adc
mov
jg
mov
ja
test
lds
or
es
pop
push
mov
sahf
popf
mov
mov
push
lret
subl
inc
int3
adc
fdiv
fst
or
jo
lret
aad
call
inc
jmp
sbb
in
imul
pop
jo
add
out
daa
cld
test
mov
addr16
push
les
dec
jns
repz
jne
test
push
push
orb
test
or
pop
incl
btr
outsl
lcall
and
and
or
mov
jae
mov
push
mov
or
repnz
add
cld
add
cltd
cmp
pusha
int
sahf
xchg
mov
sub
loopne
mov
push
popa
out
xchg
jle
adc
test
cmpsl
lahf
mov
out
fnstsw
sbb
pushf
or
sti
xchg
push
leave
inc
pop
loop
aas
push
or
fcmovu
fdivl
fbstp
lock
sti
mull
push
mov
xorb
stos
jmp
push
adc
outsl
cmp
inc
ret
inc
jae
pop
sub
js
adc
fsub
cs
rorb
sar
sbb
data16
mov
cmc
sbb
jne
inc
adc
outsl
jae
sub
lret
lcall
lods
mov
cmpsl
xlat
xrelease
mov
cs
add
add
fistpll
outsb
lods
jmp
cmpsb
mov
jae
or
cmpsb
das
xor
and
stos
scas
and
lahf
insl
inc
sub
fidivl
ret
pop
lcall
dec
jg
pop
sub
lds
mov
adc
shlb
stos
sbb
ss
imul
sbb
lock
stc
mov
ds
call
leave
or
daa
add
in
les
sti
jl
push
dec
xchg
and
movsb
dec
xchg
jge
push
jne
xchg
jne
cmc
mov
clc
add
fbld
test
jecxz
movsl
pop
and
mov
dec
jnp
sub
bound
pop
jne
mov
les
mov
xchg
fdivl
xor
imulb
sbbl
test
xorl
mov
pop
xchg
test
sub
int3
je
rorb
cmp
sahf
scas
ret
clc
push
dec
cmc
lds
in
insl
scas
push
gs
cld
adc
adc
scas
add
cwtl
mov
icebp
sbb
push
and
aaa
shl
push
mov
daa
mov
scas
leave
sub
notb
addb
and
rolb
cmp
and
outsl
lret
lds
aas
popa
add
pop
cmp
sub
xor
sahf
outsl
fcoml
mov
xchg
add
cbtw
js
push
or
xor
or
minps
mov
pop
inc
outsl
pop
mov
addr16
outsb
cltd
dec
into
test
sub
sahf
cmp
stc
mov
cmp
aas
loope
mov
jae
inc
stos
addr16
sub
stc
cltd
mov
mov
jmp
push
inc
and
ja
adc
fsubl
out
push
fbstp
sbb
loop
jp
sbb
push
pop
mov
lds
popa
and
ljmp
aam
addr16
and
push
mov
cmpsb
pop
xor
jne
inc
repz
stos
jmp
jp
enter
lcall
jae
and
lods
cli
fsubr
sub
ror
mov
nop
int3
inc
lods
ds
bound
inc
pushf
mov
and
add
inc
mov
mov
xchg
or
data16
das
mov
inc
fsub
repz
iret
fdivl
je
cltd
mov
adc
ret
and
jle
jo
lahf
int
jge
xchg
cmpsb
mov
or
lcall
dec
lcall
xchg
mov
xchg
int
into
adc
or
imul
add
leave
add
xchg
push
lret
or
or
mov
movsb
stos
jmp
dec
inc
pop
test
mov
in
dec
mulb
imul
mov
loopne
xor
sbb
push
and
push
mov
fisttps
mov
pop
inc
push
mov
xchg
mov
out
aaa
pop
inc
popf
scas
and
xchg
add
hlt
jne,pn
pop
xchg
adc
movsl
sbb
mov
jns
fldcw
and
or
inc
xor
stos
pmuludq
jno,pt
lea
jo
xchg
jg
or
pop
sub
dec
or
hlt
das
negb
mov
mov
pop
imul
out
xor
adc
cld
stos
push
or
or
out
in
pop
jge
bnd
mov
es
lock
je
xchg
push
adc
lcall
and
or
dec
fildl
xchg
xchg
mov
cmp
clc
mov
les
push
pop
test
aam
sub
add
dec
ss
jg
out
gs
mov
mov
insl
int3
lret
and
mov
and
insl
xor
cs
scas
frstor
fnsave
pop
cmpxchg
jae
xchg
pop
mov
test
pusha
xlat
aaa
mov
cmove
xchg
cmp
xchg
test
adc
pop
jmp
aad
out
jbe
xchg
add
orl
shrl
xchg
pop
dec
ljmp
xchg
push
sub
in
mov
fstpl
cmp
cld
es
insb
dec
stc
out
inc
cmpsl
xchg
push
add
jo
sbb
cmc
xor
add
or
out
xchg
aaa
mov
pusha
loopne
mov
in
xchg
shlb
mov
add
xor
mov
xchg
jne
mov
mov
jbe
gs
sti
or
movsb
or
cmp
sub
add
cmp
ljmp
fstl
sbb
or
push
mov
sbb
js
test
dec
inc
mov
sub
pop
and
dec
add
push
cmpsb
cmc
add
sub
cltd
jle
pop
fwait
sub
data16
rcrl
sbb
sub
or
mov
bound
in
cmc
fldl
mov
cli
mov
ds
lock
ret
pop
iret
js
or
pushf
in
fiadds
xchg
jbe
jecxz
adc
xchg
std
loope
stos
lock
sarl
scas
pop
or
push
pop
js
lods
dec
mov
pop
jle
xchg
inc
cmp
ret
mov
mov
pop
cs
rclb
mov
mov
jns
mov
adc
pusha
sub
fstps
in
mov
outsl
lock
nop
int3
gs
popa
leave
mov
xor
ret
rcl
xor
mov
dec
movsl
dec
inc
xchg
pushf
push
mov
dec
int3
lcall
lea
inc
add
ret
je
push
cld
xchg
repz
ret
mov
pusha
pusha
mov
sbb
and
fildl
mov
adc
popf
sbb
aam
stos
imul
ljmp
test
jmp
push
mov
cmp
jecxz
add
hlt
mov
imul
xlat
mov
xor
sbb
mov
adc
leave
cwtl
out
sub
scas
test
jne
cmp
ret
rorb
cld
pushf
push
dec
loopne
and
jbe
stos
cmp
pop
dec
mov
adc
aas
bound
cs
lret
loop
mov
fidivs
lods
cmp
pop
adc
ficoms
imul
stos
fdivr
mov
xor
data16
test
repnz
clc
sub
pop
adc
popf
clc
leave
nop
cmp
push
jbe
scas
adc
int
mov
or
out
aas
int
sub
pop
dec
bnd
fwait
cmp
dec
lods
pop
sbb
xchg
pusha
mov
add
mov
lret
sub
add
cs
clc
test
or
xor
ret
sbb
xchg
mov
inc
faddl
das
test
pop
subb
scas
popf
push
or
ret
pop
repz
data16
insb
fcmovu
bound
push
pop
in
loopne
push
sub
pop
adc
add
or
push
daa
arpl
in
cmp
out
lds
aam
xor
add
xchg
fwait
sarl
mov
gs
test
nop
lock
sub
xchg
push
adc
inc
mov
enter
mov
in
jae
hlt
lcall
cmp
aas
loop
aas
fdivs
aaa
aad
pusha
inc
mov
pop
dec
push
imulb
push
jle
hlt
mov
sub
jbe
cmp
ret
xor
rdseed
aaa
repnz
or
incb
pop
inc
cmp
fldenv
bound
lea
int
dec
std
and
sar
push
cmp
jmp
in
insb
dec
test
mov
clc
popf
or
push
test
loop
hlt
sbb
clc
fmull
aaa
mov
adc
sbb
mov
in
sahf
in
cmpsl
sub
jmp
fnstsw
push
jecxz
sbb
jge
inc
and
ss
or
bound
push
sahf
xchg
frstor
jmp
fwait
add
outsb
popa
shlb
dec
mov
push
mov
sbb
fidivs
jecxz
fistpll
and
push
shlb
popa
dec
aam
scas
ret
fisttpll
icebp
sub
xchg
jbe
sub
mov
xor
sbb
mov
aam
mov
repz
nop
repz
rol
dec
insl
rcll
fs
jnp
push
push
les
outsl
ja
aas
mov
not
test
sti
adc
scas
mov
cld
inc
leave
push
lcall
faddp
xchg
push
orb
idivl
jge
lds
pusha
pop
jge
pop
sbb
add
jne
std
cld
xchg
hlt
sbb
pop
sbb
sbb
jge
mov
inc
push
inc
gs
push
cmp
cmp
pop
fwait
stos
sbb
in
and
sub
lgs
sbb
or
jmp
lock
push
sub
mov
jo
mov
mov
mov
sub
mov
ja
stc
test
adc
pop
jmp
out
pop
dec
adc
pushf
sahf
sbb
in
setge
sbb
fsubs
mov
pusha
cli
push
mov
and
and
out
jo
aas
aam
stc
test
testb
adc
xor
rcr
cmc
and
adc
jne
xchg
and
jnp
mov
xchg
clc
jmp
lret
test
rorl
mov
push
hlt
sti
dec
int
je
mov
jne
addl
movsl
out
xchg
filds
xor
add
adc
xchg
shr
insb
in
into
push
sbb
out
andl
ss
xchg
dec
scas
nop
mov
arpl
sbbb
mov
mov
gs
inc
loopne
jbe
push
xchg
sub
movsl
cmp
jecxz
inc
lods
jge
mov
ret
das
lcall
adc
cwtl
fstpl
jno
inc
imul
dec
rcr
rorl
lret
mov
imul
mov
cmp
test
movsb
gs
shlb
jnp
sbb
adc
lahf
add
stos
les
cmpb
xchg
loopne
repz
stos
mov
xchg
push
jno
mov
mulb
incl
jbe
and
xor
jle
frstor
fs
movsl
pop
jne
cwtl
data16
sarb
in
inc
xchg
mov
lahf
xchg
add
ret
jg
sbb
add
mov
inc
xchg
ds
push
fcoms
int3
mov
adc
xor
jecxz
mov
arpl
inc
inc
xor
jecxz
and
xor
mov
xor
add
mulb
aas
stos
mov
add
int
dec
pop
insb
push
data16
adc
cmp
inc
xor
adc
sti
sbb
loopne
shlb
mov
lods
out
dec
mov
inc
xor
pop
mov
out
or
jnp
sub
orb
in
out
dec
popf
mov
jo
daa
fs
add
sub
and
shll
test
mov
popa
dec
mov
hlt
xchg
call
out
add
dec
mov
and
mov
sarb
push
and
cld
and
in
cmpb
test
nop
clc
mov
scas
arpl
adc
sbb
inc
test
lods
lcall
aaa
xor
xor
inc
clc
push
and
mov
jge
gs
rcll
xor
sub
xor
test
jge
xchg
sbb
mov
lock
sub
popa
jle
xor
rcl
leave
sbb
lret
mov
hlt
pop
mov
inc
sub
jbe
cmp
fstpt
sbb
push
fs
dec
test
add
dec
add
xor
push
cmp
pop
mov
push
call
xor
por
clc
cmp
mov
add
roll
les
dec
xor
pushf
cmp
in
cmp
mov
mov
mov
or
dec
jle
mov
adc
push
mov
leave
push
sqrtps
addr16
push
push
add
cmp
in
lods
rorl
into
sbb
mov
inc
aam
dec
ffree
mov
push
jl
pop
mov
cmp
inc
inc
sub
js
lds
dec
pop
push
ja
leave
sbb
mov
inc
pop
out
jnp
pop
gs
dec
bound
enter
and
ds
pop
testl
ret
rclb
or
ja
inc
and
cmpsl
arpl
outsl
lahf
jecxz
inc
in
push
lcall
flds
mov
cmp
insl
inc
inc
add
mov
mov
loope
pop
popa
enter
or
loopne
dec
or
xor
fsubrs
sbb
jne
ror
fisttps
test
lods
sbb
xchg
stos
les
aas
sti
enter
mov
loopne
fisubrs
dec
push
xchg
push
fsts
int
inc
repz
pop
gs
and
dec
mov
je
loop
or
jo
xchg
sahf
aam
ljmp
arpl
sarb
or
ja
and
add
add
pop
gs
imul
and
bound
sbb
mov
jmp
ret
mov
push
cmpsl
imul
inc
in
pop
rep
or
xchg
push
cmp
mov
test
push
cli
jns
jg
adc
leave
popf
fnsave
ja
ja
scas
xor
mov
outsl
push
adc
xchg
ret
lods
pop
subl
cwtl
xor
and
pop
adc
push
push
lds
mov
jecxz
sarl
in
cltd
pushf
dec
jb
lods
out
out
add
mov
add
cmpsb
ja
mov
push
push
into
in
or
cmp
imul
sub
sbb
fnstsw
into
in
ljmp
aam
sahf
bound
pop
jp
jp
mov
jbe
int3
xchg
std
jmp
dec
jnp
push
xlat
mov
or
xor
pop
inc
pushf
ja
xchg
aaa
sbbb
enter
jae
xor
into
int
sub
fsubrs
sub
insb
xor
dec
addb
pop
rcl
fidivl
inc
int
cs
mov
xchg
dec
add
pop
inc
dec
jae
pop
mov
popa
and
push
rorb
je
mov
jne
lret
jmp
sub
test
hlt
inc
xor
out
cli
pop
loope
adc
insl
stc
mov
add
jb
add
mov
pushl
rorb
decl
hlt
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
jmp
mov
stos
arpl
jg
xchg
xchg
popa
jmp
bound
imul
push
test
ljmp
daa
popf
mov
mov
mov
testb
push
cltd
and
xor
pop
ja
cmp
mov
and
addb
nop
fidivrl
sub
popf
or
fisubrl
cmp
std
push
fisttps
push
pop
pusha
dec
push
ret
and
xchg
ret
mov
dec
and
cli
adc
enter
xchg
push
lock
jmp
cmp
fildl
imul
adc
rcr
dec
ret
int
dec
cli
les
or
lea
aad
out
shl
in
add
gs
xchg
adc
and
pop
adc
leave
sti
inc
push
mov
inc
jle
adc
fwait
pusha
cld
xor
push
push
mov
cld
inc
add
std
out
sahf
icebp
fbld
jecxz
je
mov
rorl
pusha
mov
mov
adc
jl
aaa
sarl
fisttpll
pop
or
mov
adc
mov
sbb
xchg
in
jo
xor
sti
mov
int
push
rolb
leave
xor
jns
repz
push
xchg
not
push
and
out
jl
xlat
popf
std
push
cmc
push
adc
mov
inc
mov
mov
and
jae
cmp
xchg
int
aas
repz
test
rol
addr16
cmp
mov
push
or
popa
cmp
mov
mov
test
jl
lret
pop
xor
out
pop
mov
cwtl
shl
jae
nop
std
test
test
sub
dec
inc
fsubs
nop
lods
movsb
fwait
fs
xor
rorb
dec
cmpsl
shll
push
adc
sub
add
fwait
and
pop
add
adc
xor
mov
fisttpll
and
inc
stc
ret
cmp
insb
jb
xchg
jmp
in
inc
mul
adc
pop
pop
jle
and
mov
out
subl
lods
in
fimuls
stos
inc
mov
mov
sbb
xchg
pop
hlt
daa
mov
aam
outsl
flds
test
call
repnz
fs
cmpsb
pop
mov
mov
sub
inc
out
pop
lret
jae
outsl
lret
fidivrs
push
lock
repnz
xchg
jnp
mov
or
sbb
lods
nop
sub
repnz
aas
mov
mov
adc
dec
clc
sub
pop
cmpsl
pop
xor
shr
stc
cmpb
call
call
daa
pop
and
push
mov
and
pop
cld
jnp
jns
pushf
mov
sbb
shrl
push
cltd
je
xor
xchg
loope
test
es
dec
scas
push
adc
dec
dec
push
subb
dec
imul
jbe
int3
sahf
add
add
pop
cli
popa
int3
imul
inc
jo
imul
dec
daa
pop
and
lock
ret
or
divl
pop
xchg
push
mov
and
iret
lahf
insb
sub
adc
mov
shll
push
and
inc
sbb
xorl
in
loopne
jns
and
mov
in
idivl
insl
sarl
mov
push
scas
bnd
scas
pop
sub
repz
scas
jg
sbb
insb
int
in
cmc
pop
adc
sarl
es
jnp
mov
xorl
mov
outsl
jge
scas
data16
repnz
push
jae
or
sbb
pop
out
shll
pop
insb
insb
push
out
push
stos
nop
jbe
loopne
adc
arpl
cmpsl
add
mov
mov
cmp
movsb
and
shrl
mov
pop
push
sub
or
and
push
mov
aaa
in
sbb
add
cmp
xor
test
out
inc
mov
je
in
add
inc
out
sahf
mov
sahf
shl
inc
jns
in
push
es
mov
cltd
and
popf
dec
cmp
cltd
mov
into
mov
mov
scas
mov
insl
lods
pop
pop
stc
jmp
cmp
jns
and
inc
adc
sarb
xchg
or
call
mov
lds
aas
dec
cld
es
mov
lahf
iret
sbb
iret
and
add
push
pop
mov
out
mov
adc
jle
xchg
pop
xor
jl
call
mov
xchg
fisttpl
lea
dec
dec
and
and
inc
popa
jecxz
outsl
pushf
sub
aas
mov
rorb
in
out
mov
mov
pop
sbb
adc
push
mov
inc
in
out
sbb
incb
adc
mov
imul
mov
jp
pop
orl
maxps
scas
jecxz
lods
je
push
fmuls
mov
push
cmpsl
jge
mov
insl
loop
stos
orl
lea
lahf
aam
mov
lcall
inc
cmpsb
dec
jnp
rorl
fwait
adc
pop
rorb
ds
jp
sub
or
xlat
or
call
push
inc
rclb
ret
mov
add
or
pushf
pop
mov
xchg
data16
push
and
mov
cmpsb
mov
jno
mov
inc
lods
cmp
push
sub
cmp
cmp
cld
pop
rcrb
pop
inc
mov
in
jmp
cs
pop
mov
pop
iret
les
mov
je
and
cmovnp
sti
fimuls
insl
xlat
out
xchg
adc
cmp
xor
mov
loopne
mov
jae
test
out
sub
repz
cmp
sbb
inc
test
je
or
dec
scas
lcall
xor
out
iret
push
xchg
arpl
rcl
xchg
pop
dec
xchg
lock
rcrb
imul
leave
push
adc
fsubs
imul
pusha
shrl
cmp
outsb
lock
xchg
in
sbb
jo
or
aas
adc
out
push
int
jmp
jbe
pop
insl
int3
dec
nop
mov
inc
call
jno
int3
sbb
xchg
addr16
mov
push
add
call
leave
push
jge
sub
aas
popf
mov
rolb
nop
insb
and
xchg
fstpl
sbb
mov
loopne
test
gs
push
dec
pop
mov
lret
mov
icebp
xchg
addb
cltd
rol
rcll
ja
test
dec
lea
xor
sbb
xor
xor
ret
pop
call
and
je
rolb
fsub
mov
push
imull
sbb
insl
decl
je
lods
jle
scas
mov
add
xchg
sub
push
in
cld
sti
testb
push
and
in
xor
dec
lret
adc
cmp
cld
data16
sbb
mov
icebp
or
and
leave
push
adc
ret
mov
mov
in
orb
or
push
push
imull
xchg
loopne
or
repnz
jg
rcrb
les
lret
sti
xchg
lret
vpmadcswd
sub
test
fldlg2
fs
cmp
hlt
clc
jne
jp
imul
and
nop
or
xor
bound
dec
hlt
pop
dec
mov
xchg
push
arpl
push
fidivrs
bound
dec
mov
test
fcomip
addr16
adc
and
mov
cltd
shr
mov
add
jne
ret
test
outsl
dec
dec
cli
pop
fwait
imulb
lock
sbb
ftst
fs
xlat
push
outsl
rolb
pop
cltd
xor
cmp
sub
pop
lods
sbb
xchg
das
jmp
mov
in
adc
lock
mov
sar
aas
and
cli
jo
in
pop
xor
lock
les
pusha
mov
cli
fdecstp
jns
imul
aam
das
into
in
mov
shr
test
dec
sub
jl
mov
iret
flds
movsl
push
adc
sbb
or
mov
inc
notl
mov
ljmp
pusha
jo
sbbb
pop
mul
xchg
sbb
push
rclb
cmpsb
and
subb
out
fs
push
xor
jne
out
insl
push
jo
ljmp
idivb
bound
stos
cmp
int3
mov
roll
dec
push
ret
mov
pop
and
fstpt
cmpsl
lea
cmc
and
jp
push
clc
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
mov
xor
movl
mov
sbbl
mov
addl
add
xorl
xor
movl
cmp
movl
jne
mov
mov
or
mov
add
mov
adc
mov
mov
xor
adc
push
addl
mov
xor
xor
xor
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
subl
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
pushl
pushl
pushl
call
jmp
movl
movl
dec
mov
add
push
mov
adc
mov
sbbl
xor
sbbl
xor
subl
mov
sbbl
add
movl
add
incl
imul
mov
movl
cmp
jne
and
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
insl
push
push
jo
addr16
pop
inc
push
jb
inc
je
gs
dec
js
inc
js
arpl
inc
push
jno
scas
inc
inc
add
inc
inc
add
or
dec
xchg
dec
scas
dec
ds
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
and
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
aas
inc
add
inc
inc
add
inc
inc
add
mov
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
ds
add
inc
add
inc
add
test
es
inc
add
push
orl
add
cmp
ds
push
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
add
jbe
mov
pushf
clc
sbb
push
pop
in
add
adc
inc
add
or
jl
inc
add
jne
je
jns
jb
addr16
imul
add
addr16
addr16
pushw
push
jle
inc
add
dec
cmpsb
dec
lahf
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
add
add
cmc
enter
push
inc
add
jp
push
inc
inc
add
inc
add
in
adc
pop
inc
inc
outsb
popa
imul
jne
dec
je
bound
dec
bound
inc
push
push
ja
jp
push
arpl
dec
dec
data16
imul
add
add
push
imul
push
je
push
jbe
jo
dec
dec
pop
jp
jbe
pop
jo
push
jbe
ja
js
jno
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
add
jae
dec
gs
insb
jp
add
fs
push
inc
inc
outsb
imul
push
push
push
pop
outsl
push
dec
je
jo
add
inc
dec
outsl
pop
inc
jb
jns
inc
pop
add
dec
dec
dec
inc
jno
jae
push
arpl
add
bound
dec
ja
dec
inc
inc
push
push
add
outsb
dec
jno
jbe
insb
inc
push
add
add
add
add
jbe
imul
insl
je
insb
jae
inc
insl
je
push
push
addr16
jo
js
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
add
cmp
inc
aaa
dec
ss
xor
dec
add
xor
dec
inc
dec
xor
dec
xor
dec
inc
xor
dec
pop
xor
dec
pop
xor
pop
inc
push
aaa
xor
pop
cmp
xor
aaa
push
xor
pop
add
push
xor
dec
inc
add
xor
xor
inc
dec
cmp
xor
pop
pop
push
add
cmp
xor
add
dec
pop
push
inc
xor
inc
push
xor
dec
inc
xor
xor
push
cmp
pop
xor
aaa
pop
xor
push
add
push
pop
xor
inc
inc
ss
inc
dec
add
dec
pop
push
cmp
inc
add
pop
xor
pop
cmp
inc
dec
add
xor
pop
dec
inc
push
pop
push
add
dec
pop
xor
pop
push
inc
inc
dec
add
push
pop
inc
pop
xor
inc
dec
xor
push
xor
ss
xor
inc
pop
push
push
inc
pop
xor
add
dec
pop
inc
inc
push
dec
push
add
dec
pop
ss
xor
add
xor
add
dec
add
inc
add
add
push
add
add
pop
add
xor
dec
add
add
pop
add
add
add
dec
add
push
add
inc
add
xor
pop
add
push
add
pop
add
xor
inc
add
add
cmp
push
add
add
push
add
inc
add
add
pop
add
push
add
add
add
pop
add
add
add
push
add
dec
add
inc
add
add
add
add
add
push
add
add
add
dec
add
xor
xor
add
pop
add
add
add
pop
add
dec
add
add
add
dec
add
add
xor
add
inc
add
inc
add
add
push
add
add
pop
add
add
add
add
aaa
add
add
push
add
add
pop
add
push
add
pop
add
add
add
add
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
