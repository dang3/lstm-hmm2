push
mov
sub
mov
adc
mov
mov
or
mov
sub
push
movl
mov
mov
mov
sbb
mov
and
mov
orl
mov
mov
add
orl
mov
add
mov
jmp
iret
inc
loopne
push
adc
fmuls
sbb
dec
pfrsqrt
cmp
mov
jmp
xlat
sahf
jae
in
mov
adc
ss
data16
mov
dec
inc
movsl
mov
pop
inc
xchg
mov
fdiv
ret
orl
adc
movsb
jge
dec
mov
and
cwtl
clc
pusha
lds
popf
mov
inc
push
mov
cli
imul
loop
push
stos
xor
notb
out
mov
cmp
xor
sub
jae
jp
call
jle
push
push
jl
adc
or
cmp
lret
xor
mov
aam
jne
push
ret
out
mov
cmc
pusha
pop
fsubs
test
pop
xchg
xlat
xchg
fadd
pop
jge
or
xchg
dec
stos
arpl
lret
clc
movsl
fdivr
ret
movd
jo
mov
mov
hlt
adc
sub
mov
inc
cld
xchg
mov
mulb
mov
mov
inc
popf
fnstenv
jbe
clc
repz
mov
int3
jecxz
adc
dec
dec
or
test
fisttpl
arpl
sub
ss
xchg
add
xchg
sub
xor
data16
in
cmpl
in
push
sub
add
mov
xor
pop
lea
inc
sub
mov
dec
lahf
pop
insl
mov
orb
inc
fistpll
cmc
or
sti
cmp
pop
jns
cmp
mov
jns
out
sbb
or
out
xor
pop
loop
xor
imul
push
adc
fiadds
xlat
ficoms
sbb
dec
in
pop
es
int
push
mov
into
pop
mov
ret
std
negl
aaa
xchg
cmpsl
rcrb
inc
and
jb
cmp
adc
pop
jmp
jne
fidivrl
adc
xor
ss
ss
mov
mov
push
orb
lahf
mov
sbb
fildl
popf
hlt
call
cmp
pop
inc
pop
in
cmp
or
cmpsb
add
nop
mov
icebp
test
jl
test
cmp
sahf
sub
loop
hlt
mov
mov
fsubrs
out
cwtl
adc
subb
mov
ss
push
in
rcrl
push
pushf
xor
pusha
test
out
dec
rcrl
or
pop
dec
sub
mov
es
icebp
pop
inc
jge
xchg
add
mov
mov
loop,pn
dec
lds
xchg
stos
insb
add
rol
push
loopne
xchg
push
pop
ret
add
lock
mov
dec
push
fwait
mov
rcrl
mov
dec
jg
test
sbbb
xchg
dec
inc
enter
outsl
jo
testb
xlat
fisubl
rol
sarl
mov
cmpb
ret
dec
cmp
fdivl
or
cmpsl
scas
iret
aaa
sbb
sbb
or
cmpsb
scas
cmp
cmp
mov
dec
push
pop
movsb
cmp
push
inc
frstor
fadd
xor
xchg
shll
sahf
lret
pop
adc
cwtl
dec
add
cmpsb
add
repnz
int
outsb
sti
push
cmp
xor
ljmp
loopne
mov
js
fwait
add
jns
sbb
fldl
pop
mov
jle
or
mov
push
movsl
aad
push
rolb
pop
lea
in
cs
test
sti
imul
clc
pop
jmp
add
or
nop
jmp
xchg
cmpsl
inc
out
inc
inc
mov
jae
int
fwait
loopne
cmc
mov
xchg
pusha
fisubrs
or
pop
pop
jo
ja
out
repnz
mov
insb
mov
aaa
xchg
xor
and
sbb
dec
sub
fimuls
stos
cmc
bound
rcll
push
sub
push
jge
add
enter
data16
mov
fidivrl
pushf
add
inc
and
or
filds
sbb
dec
jp
ret
int
xchg
data16
repnz
shrb
leave
leave
into
insb
sub
xchg
movsl
jno
test
mov
dec
sti
pushf
xor
mov
fldl
jecxz
pop
movsb
je
cmp
push
lods
dec
mov
jbe
mov
loope
popa
lahf
in
ss
jecxz
or
scas
mulb
std
popf
or
scas
lock
inc
mov
sbb
pushf
movsb
mov
in
movsl
adc
sbb
int
out
movsb
xor
cmp
cmc
push
pop
aaa
out
jo
int3
pop
dec
and
addb
cmp
inc
xchg
pushf
fsubs
and
mov
xorb
mov
in
jp
icebp
cmp
inc
dec
pop
cmp
xor
pop
fldenv
scas
mov
fistpll
ret
ficomps
cli
mov
cmp
inc
fadd
cmp
push
sub
sub
into
dec
cs
shr
adc
in
mov
cmp
movsw
dec
test
dec
sub
push
imul
dec
push
scas
ja
scas
mov
sbb
push
lock
sbb
and
xor
dec
lods
outsb
gs
scas
lret
push
dec
jecxz
fdivs
lock
add
xor
cmp
into
stos
ficoms
aaa
iret
dec
popa
adc
idiv
ret
inc
dec
cmc
sub
rorl
popa
std
pusha
sbb
push
icebp
lahf
mov
mov
xor
push
test
mov
iret
sub
push
daa
cmpsl
xchg
lods
cmp
push
inc
jbe
xchg
or
xchg
adc
cmpsl
cmovl
pusha
xchg
mov
adc
mov
mov
adc
add
insl
push
daa
shll
pop
lret
mov
xchg
mov
loop
pop
or
cmpsl
adcl
cwtl
inc
xor
add
cmpb
icebp
dec
add
lods
push
rcr
inc
inc
aas
adc
mov
imul
sbb
imul
inc
lds
mov
loop
inc
xchg
and
add
dec
iret
xor
push
jns
test
mov
out
jne
jl
push
mov
out
mov
inc
sub
cltd
xor
adc
dec
add
push
arpl
cmc
mov
shl
jne
sub
fs
cli
ret
mov
jg
xchg
or
rclb
adc
inc
rorl
push
in
cmp
addl
mov
mov
push
sub
je
mov
and
cmpsb
fidivrs
andl
int3
adc
xchg
xor
mov
inc
aam
cld
jnp
in
dec
dec
pop
mov
cmc
xchg
ss
or
sahf
jge
addr16
jae
push
push
out
and
lret
jb
pop
movsl
mov
or
and
pusha
mov
xchg
outsl
xchg
fisubs
int
movsl
icebp
pop
mov
pop
loop
std
test
gs
out
stc
pop
jae
mov
ret
pop
and
lahf
fdivp
xor
pop
cmp
jle
js
xlat
mov
out
jns
jne
push
lcall
in
cmp
sub
mov
inc
mov
mov
mov
addl
sub
notl
mov
movl
sbb
add
mov
not
orl
orl
cmpl
movl
mov
jmp
mov
jg
pushl
pushl
call
sbb
sbb
sub
or
orl
lea
adc
mov
or
mov
and
mov
xorl
mov
adc
add
mov
dec
mov
mov
adc
jmp
mov
xor
js
xchg
jmp
xchg
incb
mov
lret
inc
or
fs
mov
cld
mov
dec
jmp
adc
sbb
mov
sub
shrl
push
push
rclb
notb
mov
add
movsl
add
sub
add
cmpsl
insb
repnz
jecxz
aad
rcrl
or
jecxz
mov
pop
shlb
jl
out
loope
fisubrs
sub
fstpl
icebp
stos
and
into
sbb
and
cmp
mov
fsubs
lahf
cltd
sarl
pop
dec
stc
dec
loopne
inc
enter
mov
fsubr
lock
vphaddwd
sub
loop
pop
sbb
mov
cmpsb
or
and
push
pop
push
pop
test
aaa
fdivl
rclb
roll
into
aas
sbb
cmp
out
imul
mov
aad
test
push
cmp
test
jbe
dec
aam
popf
adc
dec
add
pop
dec
lcall
add
cltd
fwait
xor
cmp
sub
aam
stos
adc
cltd
repz
add
test
mov
xchg
xchg
push
jo
in
pushf
xor
clc
jg
push
cmpb
jmp
lahf
lock
mov
movsb
or
scas
jmp
xchg
xlat
aas
push
dec
loopne
fucomp
movsl
lods
cmp
add
loopne
gs
adc
xchg
addl
lahf
imul
jp
push
sbb
fbstp
std
icebp
jns
das
imull
dec
loope
xchg
sti
int
js
out
jecxz
adc
add
jmp
fisubs
std
jl
or
ljmp
pop
push
gs
imul
fidivl
fisubrl
sbb
mov
in
rclb
enter
arpl
mov
fmul
inc
fstps
sbb
lret
aad
mov
xor
shlb
mov
sbb
cmpsb
out
mov
jecxz
lock
test
and
push
push
lret
lods
inc
xchg
repz
pop
mov
fcmovnb
stos
je
std
pop
push
push
mov
cmp
sub
adc
imul
pop
imul
mov
push
or
cmp
loop
es
pop
bnd
shlb
mov
mov
aam
imul
dec
jle
xchg
jb
test
jmp
sti
ret
daa
test
in
incl
addr16
mov
mov
cmp
int
xchg
sbb
imulb
es
xlat
pushf
jae
jle
xchg
add
lret
dec
pop
jae
or
jl
lds
fcomps
inc
mov
sub
test
loop
imul
mov
enter
pusha
cmpsl
push
inc
add
push
and
push
xchg
xchg
pop
leave
in
mov
repnz
fs
call
xor
xchg
cmp
stos
lods
jle
jge
pop
dec
jnp
cli
dec
shl
out
mov
dec
fwait
and
jmp
cmp
daa
mov
cltd
fistpll
dec
ret
and
jne
and
mov
out
addr16
mov
nop
rclb
inc
movsl
shrb
outsl
sbb
scas
add
es
out
fldt
ret
push
xor
sub
pop
jno
jmp
int3
aad
mov
dec
adc
sti
jle
mov
cmp
mov
jnp
jno
insl
pop
inc
sbb
out
mov
mov
idiv
jbe
jge
sbb
sbb
aad
cmpsb
rcl
scas
das
scas
push
jmp
in
push
cltd
int3
daa
cmp
push
lods
xchg
push
fistps
repnz
shl
cmp
pop
out
mov
sti
mov
mov
rcr
loope
mov
jb
inc
pop
xchg
cld
les
cltd
clc
xchg
lret
loope
aam
pop
lret
jecxz
popf
xchg
cmp
lock
daa
mov
mov
shlb
pop
sub
icebp
or
test
jns
add
gs
pop
lods
hlt
inc
cld
loopne
push
xchg
jns
push
jle
and
loopne
cwtl
clc
cmp
adc
aam
mov
sub
and
test
cmp
pop
fsubl
or
dec
mov
and
dec
sub
add
push
or
sbb
add
in
cmpsl
push
sbb
push
jnp
shrb
fwait
mov
dec
stos
stc
int
pop
pop
insb
mov
outsl
pop
cmovnp
inc
or
lea
cwtl
lret
or
les
dec
mov
leave
jnp
push
xchg
mov
xchg
xor
jecxz
je
lahf
lods
pop
sub
addr16
outsb
and
add
cs
aaa
addb
iret
fistl
loop
dec
int3
es
push
fstpt
movsl
inc
rclb
outsl
mov
hlt
lret
aaa
cmp
js
call
mov
mov
inc
mov
mov
jbe
sbb
jmp
pop
xchg
pop
cmp
test
or
add
and
or
and
jmp
je
and
rol
xor
cmc
lret
xlat
in
cltd
xchg
clc
adc
add
aas
or
into
add
insb
add
out
in
dec
sub
mov
imul
cmpsb
push
rolb
xchg
shll
loop
pusha
pop
dec
dec
rolb
mov
and
cwtl
mov
fistps
dec
scas
das
into
enter
decl
dec
mov
adc
lret
xchg
sbbb
out
sbb
imul
cmp
hlt
popf
pop
lods
fldt
sti
insl
jae
push
fldenv
psubsb
out
cmc
xchg
inc
push
jle
je
cld
pop
jmp
mov
dec
jnp
outsl
fadds
xor
fstl
dec
lods
sbb
xor
jne
js
int
je
test
dec
xchg
adc
loop
sbb
mov
mov
cli
in
push
fimuls
clc
inc
int
enter
push
xchg
dec
into
adc
adc
jecxz
jnp
dec
or
out
stos
mov
jbe
mov
sbb
scas
fwait
jae
rol
outsb
int3
push
dec
dec
mov
xchg
testl
add
dec
inc
add
ss
lret
or
mov
and
stc
adc
push
adc
not
sbbl
xor
enter
out
and
in
jnp
cmp
adc
xor
mov
jmp
aaa
mov
daa
addr16
jo
subb
sbb
adc
push
or
cld
test
pusha
fdivs
aam
mov
lcall
repz
lcall
and
ja
jne
pop
icebp
scas
or
xchg
pop
or
mov
adc
inc
ja
adc
sub
push
les
adc
mov
filds
lods
enter
hlt
adc
add
jmp
jmp
mov
lock
popf
mov
adc
ja
imul
mov
mov
ret
and
xor
cmp
test
mov
stos
inc
dec
inc
sbb
push
adc
jo
xlat
pmulhw
pavgb
daa
push
inc
int3
lcall
xchg
pop
sbb
mov
repnz
rol
push
inc
add
cs
and
lret
fcomip
pop
das
push
xlat
xor
cmp
jg
mov
mov
cs
stc
test
lds
mov
jle
cmp
mov
adc
mov
jne
aas
mov
push
fmull
int
clc
xchg
pop
stc
das
dec
pop
loopne
jg
test
xchg
xor
clc
mov
push
mov
or
or
lret
cltd
cmpsl
cmp
and
icebp
cmpsb
add
sub
sbb
push
mov
int
pop
out
mov
add
imul
adc
pop
inc
sub
popf
xor
dec
insl
push
mov
dec
mov
popf
push
adc
fucomi
into
stos
jne
stc
adc
out
out
lods
xor
stos
into
into
clc
mov
dec
add
mov
sbb
fwait
inc
push
pop
jg
dec
dec
flds
sbb
or
scas
scas
addb
and
outsl
into
inc
xlat
sub
mov
or
mov
sbb
flds
adc
mov
jg
or
adcl
pop
fdivrs
and
int
aad
mov
cwtl
jb
out
cmpsb
dec
cld
into
xchg
inc
cmp
dec
inc
roll
gs
fdivrl
sub
lret
stos
jae
mov
xchg
xchg
fs
mov
adcb
jnp
int3
sub
enter
or
pusha
and
cmp
sbb
sub
in
ret
in
scas
and
mov
xor
add
mov
cmp
mov
cmc
jns
arpl
dec
push
fsubs
iret
adc
xchg
or
sub
subl
sti
dec
dec
lret
or
mov
mov
arpl
adc
ss
xor
mov
jge
add
fwait
or
in
mov
cmp
stos
fisttpl
add
into
popa
insb
jb
pop
cli
ss
out
sub
inc
xchg
sbb
dec
and
or
lds
mov
mov
shl
sbb
fisttpll
sub
push
iret
add
movups
ret
push
cmp
rcrb
add
xchg
ret
leave
mov
dec
pop
and
int
xchg
dec
inc
inc
scas
outsl
mov
xchg
outsl
adc
repz
or
repz
test
loop
jns
gs
daa
imul
inc
mov
push
mov
je
ja
adc
push
mov
mov
mov
and
loopne
out
int
ds
cmpsw
cli
mov
in
test
xor
cmp
mov
adc
nop
fdivp
mov
nop
inc
mov
hlt
push
mov
arpl
xchg
add
ljmp
and
xor
insb
into
repz
xchg
sub
mov
and
ja
or
or
outsb
mov
nop
ljmp
jo
jns
jo
xchg
xor
push
mov
mov
jle
jmp
pop
cmpsb
xor
test
andb
jae
jg
stc
cmp
dec
mov
aam
xor
testl
mov
xor
clc
inc
lahf
sub
dec
hlt
hlt
subb
test
in
ds
daa
addb
push
sub
and
pusha
mov
sub
repnz
jne
pop
aad
dec
addr16
popf
shlb
out
lahf
add
mov
mov
cli
mov
lret
mov
mov
je
and
dec
push
sub
sbb
fistpl
movsb
stos
dec
or
push
aad
pop
sbb
shrb
mov
faddl
cmpsl
jae
mov
shlb
sbb
pop
jae
ds
lock
out
jg
mov
fidivs
dec
dec
mov
ret
jb
or
shld
mov
shll
mov
sbb
dec
ret
mov
jle
sub
xor
add
xchg
inc
test
mov
jge
enter
or
enter
mov
dec
xor
js
mov
int3
arpl
lret
and
shrb
stc
out
dec
add
adc
mov
repnz
out
dec
jo
jecxz
aam
xor
xor
pusha
jo
jecxz
push
push
adc
cwtl
les
sbb
cmpsl
leave
mov
daa
mov
mov
adc
enter
je
lods
fcmovnb
or
push
adc
addr16
cmp
mov
fcoml
jge
push
dec
jmp
mov
push
loop
inc
and
leave
push
das
fildl
adc
stc
arpl
data16
and
je
sub
iret
push
sarb
lods
add
mov
out
pop
call
pop
jp
fistl
cmp
or
movsl
mov
push
stc
out
and
lods
jae
iret
xor
fldt
clc
aad
fst
je
int3
push
cmp
orb
xchg
cltd
or
adc
scas
into
jb
lret
jecxz
mov
mov
adc
adc
mov
xorb
pop
and
iret
sub
or
lods
mov
imul
sbb
and
lods
inc
push
or
cmpsl
hlt
je
rcrl
test
leave
jmp
ja
js
adc
sub
sub
inc
sub
push
xchg
jp
adc
sbb
pop
sbb
jg
add
or
insl
sbb
and
lret
clc
in
cmp
idivl
repnz
sahf
xchg
push
add
mov
addb
adc
ljmp
sbb
fdivp
dec
xor
into
xchg
sub
iret
pop
fisttpll
movsl
fisttpll
xchg
icebp
push
out
fdivr
orl
push
cmp
aaa
jno
dec
dec
pop
ret
sahf
jmp
sub
pop
test
push
adc
sti
push
dec
and
mov
lret
loope
addb
inc
pop
stc
inc
xorl
faddl
fmul
sti
sub
outsl
sub
sarb
cmp
xchg
xor
fmul
out
add
jnp
mov
xchg
push
iret
movsb
add
dec
push
or
and
lods
dec
pop
lcall
push
add
and
pop
gs
lcall
pop
xchg
push
add
mov
push
in
jle
sbb
jge
in
mov
mov
pop
test
int
dec
inc
call
hlt
nop
sarb
aam
clc
push
xor
clc
sub
jge
dec
out
mov
pop
or
mov
jp
sbb
les
mov
pop
enter
pop
int3
in
mov
push
dec
lret
cmp
mov
inc
sbb
lods
lods
jo
ror
dec
nop
lcall
aaa
inc
add
add
xor
adcl
xor
or
cmpl
movl
movl
movl
jmp
movl
not
jg
pushl
push
push
push
pushl
push
pushl
call
sub
xorl
andl
andl
addl
addl
adcl
movzbl
adc
jmp
sti
loopne
stos
dec
or
xor
dec
adc
cwtl
out
ja
push
repnz
lods
pop
je
add
out
inc
mov
jle
aam
pop
push
andl
idivb
or
mov
sub
mov
sbb
mov
jnp
mov
push
dec
xchg
push
outsb
mov
cli
scas
add
xlat
icebp
pop
push
jno
xchg
mov
mov
sbb
enter
xchg
mov
jmp
pop
mov
xchg
in
dec
ficomps
jecxz
in
xor
xchg
in
mov
stos
rorb
stos
jb
cli
std
popa
aam
push
jbe
push
pop
sub
adc
sahf
and
lds
stc
ds
push
inc
stc
cs
cmc
adc
mov
mov
adc
pop
repnz
repz
std
lret
xor
scas
pop
pop
outsl
movsl
in
push
in
cmp
cs
mov
inc
inc
or
out
mov
jp
sbb
sub
or
mov
pop
daa
dec
and
xor
mov
movsb
incb
scas
ficoml
insb
roll
popf
xor
jo
in
or
fs
pop
mov
push
mov
add
das
scas
stos
inc
pop
stos
lods
mov
xchg
jp
pop
ss
cwtl
adc
fistps
cmpsb
jg
shlb
loop
xchg
push
sbb
pop
mov
cmp
pop
or
loopew
adc
notb
mov
pop
out
std
jmp
dec
fwait
push
outsb
dec
pop
orb
std
lea
dec
cwtl
arpl
ret
adc
sub
pop
movsb
inc
out
mov
pop
dec
lcall
dec
int
outsb
insl
mov
xchg
mov
cmp
jp
xchg
int3
and
sub
rcrl
movsb
and
fiaddl
xchg
jns
daa
push
repz
push
mov
cmp
hlt
stos
popa
inc
add
mov
fisttpl
mov
ret
call
mov
sbb
inc
testl
cmovo
xchg
mov
push
js
clc
and
inc
mov
xchg
add
xchg
lds
xchg
out
xor
cmc
sbb
subl
dec
imul
stos
push
cwtl
pop
or
adc
xor
or
ficoml
lock
iret
or
movsl
push
jno
mov
imul
sbb
ret
sub
push
jo
add
jp
cmp
lret
aam
mov
ds
xor
stc
incl
imul
int
xorb
lahf
test
xor
cmp
test
icebp
leave
pop
xchg
mov
sub
xor
pusha
je
inc
push
fiaddl
aam
in
js
testl
mov
imul
push
adc
mov
xor
add
xchg
into
mov
leave
pop
push
adc
inc
sbb
scas
loop
mov
icebp
sbb
and
mov
repz
aas
out
icebp
shlb
sub
divl
dec
push
fmul
test
or
prefetchwt1
mov
mov
lret
pushf
mov
and
adc
mov
testb
xchg
xlat
pop
stos
shrb
mov
dec
and
inc
xchg
shll
das
and
mov
pusha
inc
pop
clts
into
call
enter
imul
jecxz
fistpl
mov
xor
into
xchg
jle
add
add
push
mov
adc
stc
aas
repnz
cs
lods
es
xor
pop
lea
or
stos
aad
adc
pop
and
mov
lods
aam
dec
loop
mov
pop
lret
or
sub
sbb
add
das
xchg
pop
pop
imul
or
sub
and
lret
lret
dec
popa
pusha
insl
ds
sub
pop
sub
jle
sub
dec
jne
cmp
xor
mov
pushf
lcall
aad
and
enter
bound
dec
push
das
jae
mov
mov
sbb
cmp
xchg
cmpsb
mov
ljmp
push
adc
fs
dec
xchg
fnstsw
push
mov
pop
popf
icebp
mov
test
test
pop
stos
and
imul
and
int3
mov
dec
cmp
xlat
sbb
mov
rolb
xchg
arpl
fnstsw
addr16
out
jo
mov
cmp
mov
mov
jmp
daa
cltd
push
out
xchg
push
jne
cmp
pop
cmp
mov
mov
test
test
pop
sbb
mov
cmp
aaa
jb
in
sub
aad
jne
cltd
jp
mov
cmpsl
fimuls
test
adc
mov
mov
inc
pop
adc
and
sbb
divb
out
or
outsl
pushf
dec
fdivrs
fnstenv
and
es
jecxz
ds
xor
rcrb
pop
rol
jns
daa
xor
dec
cmp
scas
lcall
bound
aam
jae
lret
dec
dec
jp
pop
mov
repnz
sbb
cmp
cmp
inc
or
push
in
notb
jo
mov
jl
or
cmpl
push
inc
add
orl
in
mov
mov
and
pusha
mov
dec
cmc
sub
jo
inc
dec
xor
mov
mov
mov
lock
push
xor
pop
add
enter
xchg
js
mov
adc
fstpl
xor
sub
push
ret
mov
xor
bound
mov
js
push
adc
lds
push
fiadds
inc
in
stos
jae
js
sub
addr16
pushf
xchg
addr16
das
cld
js
sub
out
or
mov
mov
dec
insl
adcl
and
pop
fisubrs
sbbl
inc
jbe
mov
stos
and
add
and
push
mov
cli
mov
xor
mov
sub
pop
test
nop
out
jne
cltd
inc
mov
and
ja
sahf
in
mov
pop
out
jg
xor
loopne
imul
mov
pop
and
std
outsl
push
jmp
clc
mov
stc
outsl
in
and
inc
jp
mov
push
iret
out
jns
data16
ficoms
fldcw
stc
aam
aaa
fdivl
fldenv
test
insl
incl
xor
jp
sbb
cmpsb
jnp
dec
push
mov
or
push
inc
scas
xchg
push
rol
lcall
dec
cltd
test
rcll
push
jo
sahf
in
out
shlb
leave
jp
cmpsb
sub
sbb
inc
pop
mov
and
sub
leave
fcomps
adc
mov
mov
pop
shrb
push
addr16
enter
cmp
or
push
lret
xlat
xor
jae
xchg
xchg
jecxz
testl
or
movl
movl
sub
movl
movl
and
movl
movl
movl
xor
or
adc
movl
cmpl
movl
mov
jmp
not
jl
push
pushl
pushl
push
call
add
sbbl
add
sbbl
xorl
sbbl
notl
or
movl
addl
movl
movl
movl
mov
or
mov
movl
dec
movl
movl
cmpl
movl
movl
movl
movl
jmp
mov
jge
push
call
movl
orl
orl
add
xorl
xorl
xorl
and
movl
cmpl
movl
mov
jmp
mov
mov
jb
push
pushl
push
push
pushl
push
pushl
push
push
pushl
pushl
call
orl
sbbl
adc
addl
movl
sbbl
movl
add
movl
jmp
and
jnp
sub
mov
and
ja
rcl
pusha
cmp
shll
mov
call
aaa
add
push
and
in
scas
jmp
jnp
stc
out
xchg
xlat
call
mov
arpl
add
jno
add
mov
and
ret
scas
or
mov
cli
xchg
leave
cmp
and
or
or
outsl
adc
inc
insl
pushf
test
jmp
add
aaa
pop
sbb
shll
mov
mov
or
add
popa
hlt
cli
xchg
ret
adcl
imul
mov
ficomps
dec
or
inc
pop
inc
aad
dec
inc
js
int
push
mov
into
xor
mov
adc
adc
sub
push
push
out
clc
xlat
lret
jge
rorb
jg
jl
mov
shll
mov
sahf
ret
pop
pop
pop
scas
sub
sbb
mov
lods
mull
pop
je
adc
je
inc
and
movsl
fs
mov
std
lcall
and
push
xchg
cld
mov
push
movsl
pusha
pop
add
cmp
out
adc
jg
xor
stos
lock
sti
filds
fs
std
rcrb
xchg
rorb
stc
imul
inc
pop
xor
rorb
pop
notb
xchg
insl
add
adc
sbb
cmp
popf
and
shrl
lret
jmp
int
or
leave
sbb
mov
bound
test
cmp
push
ret
movd
pop
xor
sub
popf
mov
cmp
cli
adc
enter
dec
inc
mov
ret
xchg
loopne
cli
mov
push
scas
push
xchg
pop
dec
xchg
loopne
jb
aad
push
call
dec
js
inc
xchg
inc
xchg
ljmp
mov
inc
cmp
je
jge
xchg
nop
aas
in
push
ds
sub
ds
repz
loop
fcomip
pop
jne
adc
stc
mov
dec
xchg
es
shrb
test
adc
mov
jns
out
push
movsb
push
dec
fs
subb
jmp
add
xchg
dec
sbb
gs
mov
and
rclb
dec
sub
movsb
add
in
imul
aad
xchg
outsl
inc
pop
sbb
in
cltd
add
test
push
push
cmp
pushf
arpl
mov
lahf
lock
cmp
outsb
adc
call
into
mov
fwait
std
and
push
push
aas
mov
test
cmp
xchg
mov
data16
inc
xor
out
push
sbb
daa
sti
add
stos
test
mov
test
or
sub
testl
sbb
outsb
addr16
xlat
or
mov
inc
xor
jmp
aam
outsb
pusha
fcomps
or
int3
sub
aam
sarl
xor
imul
loope
cmpsl
add
jg
pop
call
movsl
mov
mov
imul
outsb
clc
jmp
adc
cli
mov
ja
push
out
dec
or
and
mov
frstor
leave
gs
cmpsl
pop
faddp
ret
cmp
out
and
xchg
add
repz
int3
mov
dec
xor
cltd
das
outsb
arpl
movsl
ja
mov
imul
inc
sbb
mov
in
cmpsb
rol
push
and
test
inc
ja
mov
and
pop
insb
std
mov
test
out
mov
push
mov
inc
add
xchg
aad
movsl
push
xchg
imul
je
in
lea
mov
inc
xchg
cmp
int
in
scas
dec
mov
xor
mov
int
scas
jl
outsl
imul
rol
mov
xchg
xor
dec
inc
dec
push
inc
adc
or
popa
sti
cli
das
mov
cmpb
rcl
stos
push
imul
je
out
pop
fidivrl
ret
push
jno
bound
adc
dec
dec
and
inc
popa
lcall
jo
test
andl
repz
and
iret
movb
stos
in
xor
xchg
xchg
fwait
cmp
sub
jo
mov
cmp
out
in
push
xor
cmpsl
ja
outsl
scas
outsb
ret
inc
pop
fistps
xchg
xchg
dec
inc
mov
add
push
je
stos
pop
or
push
and
data16
add
loope
in
sub
adc
adc
jecxz
adc
sti
jnp
dec
pop
adc
mov
orb
cmpsb
push
push
leave
jmp
mov
js
pop
xchg
cmp
mov
in
ja
sub
jge
mov
mov
sahf
push
push
xor
add
mov
push
xlat
lahf
ret
pop
adc
xchg
mov
cmc
outsb
into
mov
js
xor
jge
jge
adcb
ret
mov
add
fwait
pop
fldl
xchg
scas
lret
and
push
add
xchg
mov
add
mov
aad
sbb
push
cmp
push
mov
and
mov
or
in
aad
out
loope
test
pop
push
mov
das
leave
mov
mov
mov
lods
iret
jo
arpl
push
pop
sub
push
jo
xchg
mov
mov
inc
out
fsubp
xchg
in
negl
fbstp
sbb
jb
or
cmp
sub
push
aad
cli
sti
mov
add
add
clc
pushf
out
jno
in
push
inc
aas
das
adc
mov
sub
pop
mov
xor
xchg
push
in
mov
push
add
dec
push
or
add
cs
call
dec
lea
shll
xchg
gs
mov
aas
jbe
cmc
imul
xor
nop
stos
pop
fiaddl
ret
sbb
jl
lea
jae
push
ja
cmp
add
sub
mov
push
test
nop
cmpsl
add
loopne
add
lock
loope
adc
scas
mov
jp
fcmovb
mov
cmp
adc
orb
js
enter
movsb
push
inc
negb
movl
pop
hlt
adc
nop
xchg
imul
lods
shl
gs
ret
xchg
pop
ror
ljmp
cmp
fsubl
xchg
mov
add
ja
sub
mov
xchg
push
mov
lea
cmp
daa
push
adc
out
inc
clc
fucomp
mov
mov
mov
push
decl
sahf
int3
stos
mov
das
bswap
pop
loope
mov
mov
jns
xlat
fcmovb
jp
sbb
inc
sub
xlat
mov
sub
lock
pop
into
cmp
notl
test
cltd
jo
pop
ficoml
imul
lea
out
pusha
or
adc
mov
sub
out
scas
outsl
pop
xor
shrl
mov
sub
addb
sbb
mov
inc
sbbb
pop
push
lea
fstpt
adc
jae
ja
in
in
test
sbb
or
cmp
push
add
inc
movl
xorl
movl
mov
xor
movl
not
movl
mov
addl
jmp
in
outsl
dec
gs
notb
inc
test
cmpsl
les
ja
leave
push
mov
xor
js
pop
inc
gs
sub
rolb
xor
or
ficoms
aam
pusha
ret
adc
stos
jae
sub
movsl
imul
addr16
mov
mov
jl
nop
pop
cmovl
loope
aaa
stos
jp
pop
cmpsl
addb
and
pop
or
aad
mov
mov
and
rol
dec
pop
or
xor
mov
dec
xchg
lret
out
mov
dec
xor
fsts
fstpl
sub
push
mov
repnz
adc
pop
cmp
mov
sub
jp
cmp
imul
das
stos
jmp
cmp
mov
and
mov
and
fisttpl
push
mov
pcmpeqb
cs
sbb
fildl
cli
mov
mov
inc
in
xchg
in
dec
bound
adc
mov
call
jb
addr16
repnz
ffree
scas
call
add
inc
popf
mov
lret
or
sbb
loope
adc
adc
xchg
push
xor
icebp
and
std
sbb
sar
ja
into
cmp
jb
adc
add
mov
lcall
or
movl
cmc
jb
and
jmp
jns
ret
xlat
add
cld
mov
divl
and
push
mov
mov
mov
xor
mov
rcll
aad
pop
sub
addr16
xchg
mov
popa
jno
xor
imul
inc
testl
inc
dec
dec
ret
add
sbb
push
cmp
pop
repnz
dec
out
test
js
mov
daa
mov
xchg
add
add
fcomps
sbb
fwait
cmp
sbb
sbb
aam
sub
sub
push
idiv
lahf
mov
hlt
mov
cmp
cld
cwtl
mov
dec
mov
fiadds
subb
repz
int
stos
movsl
mov
cmp
in
mov
js
lea
and
jmp
dec
lahf
mov
shl
sahf
imul
lret
aas
fistpl
in
jnp
mov
add
mov
imul
mov
sub
std
sbb
lds
lods
leave
push
mul
lahf
mov
cmpsl
jnp
mov
fistpl
fsubl
and
cli
pop
lods
push
inc
push
push
cli
mov
jb
into
jns
inc
sbbl
pop
ljmp
lea
out
movsb
sarl
arpl
lock
sub
adc
dec
rorb
mov
cmpl
pop
and
pop
mov
push
add
aas
daa
cmpsl
mov
fcomp
add
mov
outsb
insb
jnp
xchg
shrb
shll
and
mov
mov
xchg
dec
jp
pop
test
lcall
pop
mov
add
fs
das
or
add
pop
and
and
frstor
add
cmpsl
fidivrs
mov
or
loopne
sbb
std
cs
int
jbe
cld
add
incb
jnp
es
mov
les
scas
ds
dec
gs
scas
add
push
aad
addr16
sbb
stos
xchg
mov
pop
es
sbb
jns
imul
mov
push
into
and
lock
aas
jne
xor
pop
cs
into
lds
arpl
std
scas
iret
mov
mov
sub
or
or
xor
test
loopne
pop
fs
push
sbb
int3
out
iret
fistpl
sbb
jne
push
lahf
xor
adc
pop
inc
xchg
imul
jl
jmp
push
dec
add
sbb
scas
or
aas
sti
lock
rcr
inc
xchg
mov
movsb
cmpsb
sub
imul
and
xlat
mov
xchg
xchg
scas
out
test
sub
in
cmp
dec
call
inc
out
popa
sub
jp
push
repz
push
mov
fcmovnbe
mov
sbb
adc
and
sti
sub
push
pop
sub
ds
add
xchg
insb
pop
adc
and
pop
jl
cmpsl
ret
xchg
push
and
pop
icebp
push
outsl
push
scas
inc
push
cwtl
push
cmpsl
loop
push
divl
test
leave
mov
std
in
push
and
testl
test
jo
sti
and
xchg
lahf
in
mov
cmpsb
lods
ret
fmuls
test
jbe
cmp
jl
fidivrs
out
popf
ljmp
mov
clc
popf
in
lea
inc
fsub
push
add
mov
movsb
fisttpll
es
mov
cmp
push
push
rolb
inc
cli
adc
out
rcll
lretw
fcomps
lcall
movsl
xchg
adc
sar
imul
mov
mov
mov
fwait
jae
dec
call
test
cmp
lret
push
mov
sub
mov
lods
and
movsl
cwtl
jb
sti
in
daa
leave
and
xchg
addr16
or
push
cmpsl
pop
sbb
jb
movsl
cmp
cmc
lods
pop
xchg
mov
inc
push
pop
lret
ficoms
sbb
dec
rol
test
aad
push
jp
cmp
push
repz
test
xor
aas
pushf
mov
pop
lds
or
negb
data16
movsb
lds
sti
test
jns
insb
xchg
push
imul
push
push
orb
aas
lock
xchg
int3
inc
test
xor
sub
pop
fdivrs
add
xchg
fwait
cmp
mulb
and
cli
cmp
adc
jge
mov
sahf
mov
lret
fimull
xchg
add
jle
mov
push
jnp
sbb
xor
lret
cmp
pop
lcall
ror
xor
dec
test
inc
mov
xor
in
jnp
test
out
into
in
pop
stc
lahf
movsb
stos
add
hlt
jbe
adc
push
data16
notl
std
jns
push
lahf
mov
inc
or
out
or
into
in
jno
in
pop
mov
sbb
daa
je
loopne
ret
cmpsb
mov
mov
out
shll
shl
push
shl
arpl
or
les
and
push
std
and
add
cmp
or
mov
adc
xchg
adc
clc
sahf
mov
ret
cld
test
call
and
stc
orl
or
dec
inc
jnp
xor
xchg
pop
mov
popf
xor
mov
cmp
std
rolb
popa
mov
sub
inc
lea
or
mov
mov
fsubrl
sti
movl
and
cwtl
je
fstpl
outsb
mov
sbb
sti
es
popf
jns
xchg
sahf
jns
mov
mov
orl
push
adcl
push
andl
push
push
adcl
call
adc
mov
subl
mov
xor
mov
sub
mov
movl
jmp
mov
daa
xchg
gs
or
mov
mov
ja
pop
fmuls
aam
add
mov
dec
mov
and
push
repnz
gs
into
fildl
xchg
add
imul
ljmp
repnz
nop
hlt
scas
ss
xor
popl
push
data16
ficoml
or
push
dec
fnstsw
popa
int
adc
shl
mov
gs
popa
mov
dec
lock
mov
dec
jg
enter
or
fsts
sti
mov
sahf
and
lock
mov
shrl
jns
xchg
sub
cmp
sti
fnsave
rcl
jb
fldenv
jo
shr
into
punpckhbw
ljmp
jnp
sbb
pcmpgtd
mov
sbb
imul
shl
ret
mov
and
dec
cltd
jb
lret
andl
testl
add
mov
push
pop
cmpb
mov
sbb
aam
mov
mov
pop
aaa
mov
xchg
cwtl
jmp
movl
testl
push
setbe
add
in
inc
mov
mov
xchg
cwtl
fisttpl
decl
cmp
fmul
cmp
shll
mov
jns
shlb
push
outsl
push
decl
mov
inc
in
xchg
or
pop
or
or
inc
test
adc
sbb
cmc
test
pop
das
jbe
stos
out
mov
mov
push
xchg
iret
pop
out
or
add
mov
sub
push
jmp
cmpsb
call
xchg
fldl
jnp
inc
test
sub
stos
dec
sbb
test
mov
push
test
fisttpll
insb
cmp
push
add
outsb
adc
or
test
scas
adc
and
jb
jo
out
jg
and
cmp
shlb
cmp
xchg
repz
rorl
sub
jg
int3
dec
cmc
jbe
in
add
jae
lret
mov
mov
out
out
sub
out
sar
sub
test
cmpb
fldl2e
insl
jo
mov
pushf
jbe
push
idivb
cwtl
cltd
gs
dec
sbb
jg
cmpl
sub
inc
loop
movsl
ss
stos
fisubrl
ja
idiv
shll
sbb
data16
loop
enter
and
fucomp
sbb
sarb
ficomps
aaa
jecxz
mov
or
subl
pop
xor
loope
in
xor
sbb
mov
push
dec
sbb
adc
fcoms
pusha
insb
imul
mov
xchg
ror
sbb
mov
add
xlat
int
mov
movsl
shr
sub
les
sbb
lcall
andb
in
lret
and
rcrb
jno
jmp
rcrb
imul
or
movsl
and
cmp
call
out
inc
lret
jbe
sbb
inc
or
jbe
adc
push
dec
push
lock
fwait
inc
dec
inc
orb
jmp
mov
xlat
imul
pop
test
call
xor
xchg
sti
dec
and
ds
popa
cmpb
inc
test
mov
mov
cmp
gs
or
sub
mov
sbb
lret
in
jae
movsl
xchg
pop
shlb
mov
inc
mov
in
lock
sub
jmp
mov
iret
fbstp
leave
xlat
rclb
xor
mov
mov
adc
mov
push
mov
add
and
pop
out
lcall
out
inc
sub
xchg
fistpl
cld
shl
and
rcr
movsl
mov
mov
inc
repnz
push
stos
insb
pushf
call
xlat
mov
mov
and
pop
adc
fldt
in
sarl
xor
ret
fwait
cmp
and
gs
cmp
pop
sub
pop
push
xchg
xchg
filds
es
les
dec
or
push
xchg
out
popa
xlat
add
das
dec
mov
xchg
arpl
inc
out
dec
ds
pop
aas
sub
dec
nop
fiadds
aaa
sub
sbb
jnp
xor
lods
into
inc
adc
inc
lods
dec
sbb
push
repnz
mov
loope
arpl
adc
xor
mov
push
dec
iret
imul
leave
in
xchg
es
mov
xchg
lret
outsb
sub
push
pop
pop
fcoml
push
pop
popa
xor
adc
fistl
push
pop
int
or
pop
inc
lods
lcall
inc
divb
push
xchg
gs
xchg
in
inc
pop
mov
int
or
mov
es
imul
lahf
lods
test
sbb
push
jle
mov
push
and
mov
icebp
inc
xchg
iret
and
xor
enter
cli
imul
aam
mov
gs
cltd
shr
mov
jg
sbb
jg
sub
inc
mov
xchg
cmp
repnz
nop
and
xor
sarl
mov
in
adc
sub
jne
jnp
loopne
push
pop
sbb
cmp
aaa
sub
jle
rolb
xchg
bound
jl
or
pop
jb
and
push
ja
aad
jecxz
mov
in
idivl
test
xchg
iret
aaa
pop
out
mov
js
jp
jp
mov
orb
daa
repnz
push
cmp
scas
inc
icebp
je
repz
aaa
jl
pop
je
jg
add
mov
jg
xchg
lods
lods
push
mov
sub
and
mov
and
mov
movsl
in
test
pop
repz
dec
sub
or
cli
jg
cmpsb
jmp
or
pop
push
jb
aam
or
xchg
aam
xor
int3
push
adcl
xlat
pand
dec
es
inc
lods
dec
inc
cmp
aas
sahf
pop
test
fildll
cmp
mov
stos
movb
mov
lahf
repz
aam
daa
jo
jne
pop
int
test
sub
pop
mov
inc
imul
adc
mov
inc
xor
loopne
pop
neg
xchg
and
or
or
ret
or
or
cmp
addr16
jp
jns
call
addb
push
inc
in
bound
xchg
test
pop
scas
xchg
aam
xchg
leave
dec
mov
jmp
jne
les
mov
call
icebp
adc
insl
xor
adc
xchg
mov
sbb
shlb
addl
sub
outsl
cmp
lcall
call
sbb
insb
je
sbb
jl
and
push
test
xchg
mov
dec
iret
ss
scas
mov
pop
ljmp
fld
lahf
shr
stos
fidivrs
jecxz
dec
lea
push
lcall
sbb
inc
aas
mov
mov
ret
test
hlt
xor
xchg
call
sbb
mov
sub
mov
adcl
lea
mov
mov
or
subl
and
mov
or
adcl
xor
movl
cmp
movl
jne
mov
and
mov
shrd
adcl
shr
adc
mov
mov
orl
shl
xor
andl
jmp
sub
sub
sub
adc
xchg
in
adc
xchg
pop
mov
in
mov
aas
out
pop
js
ja
mov
loop
cld
cmpsl
inc
bound
cmpsb
fistps
shlb
test
mov
ret
xor
fmuls
cmp
jns
int3
stc
and
nop
inc
stc
inc
adc
adc
xchg
stos
insb
sbb
lds
scas
aam
test
push
repnz
mov
dec
and
dec
gs
adc
push
aad
mov
sbb
je
lea
outsb
sub
sub
xor
fstl
jno
in
lret
pop
and
insb
sub
stos
xchg
mov
fists
cmc
inc
idivl
loopne
cwtl
mov
jp
aam
inc
mov
mov
inc
add
sbb
or
cmpsl
jb
push
ficoml
fadds
add
into
sub
fdivs
outsb
das
loop
or
cld
jecxz
xchg
and
clc
cmp
push
ja
rorb
mov
mov
imul
iret
sub
gs
lods
ja
ljmp
inc
movsb
or
in
scas
dec
pushf
inc
lret
fiaddl
adc
cmp
popa
and
jne
xor
dec
dec
out
js
adcb
push
insb
jae
pop
pushf
ss
loope
clc
aaa
ja
out
push
dec
repz
mov
pop
ficomps
push
out
imul
ret
ss
stc
mov
out
xchg
adc
mov
add
nop
scas
int
cltd
mov
mov
xchg
xchg
popa
adc
repz
mov
jne
lds
repnz
jp
push
js
icebp
leave
lea
rclb
jns
xlat
sbb
lock
outsl
pop
mov
fdivs
cmp
ss
adcb
lea
xlat
cmc
xchg
xchg
sbb
jg
jbe
outsl
xchg
shlb
into
adc
adc
aam
rolb
fwait
and
pop
adc
mov
cmp
sar
mov
and
xor
lcall
mov
push
orl
mov
nop
push
add
test
sbb
cmp
test
or
shrl
push
mov
sub
cmp
add
sub
inc
imul
cld
and
movb
rcrb
xchg
fidivrs
iret
pop
pop
jge
lods
adc
add
lods
pusha
mov
jnp
loope
cmpsb
jns
cli
shrb
test
pop
mov
xlat
and
or
mov
or
jae
lahf
lahf
adc
xor
insb
mov
or
loopne
jl
sar
mov
add
fcom
add
add
mov
and
adc
inc
cmovae
rcll
stos
xor
dec
jne
cmc
repz
inc
xorb
add
mov
adc
mov
jb
xchg
lea
nop
pop
imul
mov
push
enter
push
sub
add
add
cltd
jl
and
arpl
and
daa
mov
cmc
dec
mov
jmp
xchg
dec
xchg
arpl
movsl
stc
xor
les
aam
mov
popl
xchg
shlb
inc
in
in
sbb
test
push
mov
dec
inc
xchg
cmc
stc
inc
cltd
mov
pop
lret
add
cli
pop
lods
cmp
and
or
lock
jecxz
lea
stc
imull
cmp
mov
stos
adc
aam
xchg
ret
xor
in
pop
cmove
lcall
mov
outsb
jle
push
cmpsl
xor
pop
addr16
insl
adc
dec
mov
add
in
popa
cld
cmp
sub
sub
sbb
cmp
push
shr
cmc
inc
xor
cmpsb
fcoml
xchg
fiadds
xor
or
push
insl
mov
dec
out
mov
arpl
test
test
out
popa
and
arpl
sub
mov
imul
stos
lret
rol
inc
fwait
mov
bound
push
and
orb
and
pop
cmp
mov
inc
sub
xor
jecxz
cltd
jecxz
adc
or
fbstp
xchg
mov
imul
ja
out
add
mov
mov
push
push
mov
mov
es
sub
int3
jns
leave
ret
push
js
cmp
jl
push
lds
pop
mov
add
push
idivb
mov
rolb
pop
loopne
sub
push
imul
out
xchg
scas
fidivrl
inc
fisubl
cltd
xchg
jno
pop
mov
dec
sub
jmp
jge
mov
mov
inc
or
out
fs
mov
ret
pop
imul
subb
jge
push
mov
mov
sahf
mov
dec
adc
and
jae
xor
cmp
sub
mov
inc
fisubrl
insl
dec
jmp
in
jo
mov
sub
jg
mov
rcrb
push
lock
in
imul
push
inc
out
xlat
push
notb
mov
xlat
mov
sbb
cli
es
add
dec
mov
scas
sub
loop
mov
fwait
xchg
cltd
test
sub
mov
push
icebp
dec
jge
imul
sub
cld
out
dec
mov
cmp
sub
xchg
test
cmp
mov
inc
jg
xchg
mov
sub
popf
pcmpgtw
lahf
movsl
jmp
movsl
test
sub
fisttpl
adc
sbb
and
cli
add
xchg
stc
inc
mov
sub
ficomps
mov
cmpsb
nop
push
sbb
aad
sbb
into
xchg
push
fisubrs
adc
xor
scas
in
negl
inc
cwtl
adc
fbld
stc
ds
mov
movl
pop
mov
daa
mov
rcrl
mov
and
xlat
cltd
call
insb
ds
cmp
or
xor
cwtl
cwtl
iret
sbb
call
sub
cs
mov
jmp
push
mov
push
sub
roll
mov
dec
int3
leave
mov
inc
je
sub
jns
ljmp
sbb
jae
mov
repnz
adc
rcl
ljmp
jb
pop
and
inc
test
sub
imul
xchg
jmp
xchg
cmp
xchg
js
mov
daa
mov
test
xor
sbb
pop
pop
jge
inc
sarl
sbb
inc
mov
jle
dec
addr16
mov
loope
insl
mov
imul
adc
and
pop
push
cs
call
push
aad
xchg
hlt
lcall
dec
adc
mov
inc
cld
add
cwtl
divl
add
xchg
add
js
sahf
push
cmpsb
pop
out
adc
lret
sub
dec
and
mov
adc
xchg
dec
sti
repz
or
mov
movl
cmp
jne
notl
mov
mov
xor
cmpl
mov
movl
mov
jmp
mov
movl
jl
push
call
xor
or
movl
movzbl
xor
and
mov
xor
mov
xorl
mov
jmp
daa
mov
or
pop
aaa
mov
xchg
xorb
imull
aad
divb
xlat
xchg
jb
or
xchg
pop
out
sub
or
es
rol
add
rolb
insl
lods
out
xor
idivb
int
mov
leave
cmp
loop
enter
loop
ds
out
jnp
call
pop
ljmp
push
pop
arpl
pop
sub
add
xchg
push
repnz
cli
sahf
scas
lcall
push
add
leave
enter
mov
push
sub
mov
push
mov
lods
adc
loopne
dec
cs
mov
mov
xchg
cs
xorb
lods
out
add
jbe
icebp
pop
lods
mov
in
and
and
int3
mov
sbb
repz
leave
repz
enter
xor
ja
jg
mov
lea
mov
dec
mov
fcompl
sbb
popa
mov
push
inc
insb
addr16
in
inc
pushf
inc
jmp
and
bound
ret
int
nop
ss
or
and
mov
lds
jle
inc
jge
int3
mov
mov
insb
cmp
sub
enter
and
push
or
dec
movsb
out
ja
adc
cmp
mov
pop
pop
out
mov
out
mov
dec
iretw
aaa
push
mov
jo
into
jnp
pop
bound
mov
mov
push
gs
xchg
xchg
movsl
jmp
ja
push
cmp
add
sub
jno
shrb
mov
ret
sahf
icebp
mov
in
mov
xlat
pop
movsl
pop
mov
nop
push
movsl
inc
test
jecxz
in
inc
pop
mov
mov
nop
pushl
int3
std
or
sbb
popl
add
xchg
cmpsl
pop
mov
inc
dec
scas
sub
fwait
xchg
shl
andl
cmp
push
addr16
out
mov
decl
data16
arpl
xchg
lcall
negb
pop
mov
hlt
out
sbb
out
loope
popf
pop
sbb
sbb
cmp
filds
icebp
mov
roll
test
lock
test
out
push
xor
lea
sti
mov
pop
add
dec
pop
pop
ljmp
cmp
fnstcw
stos
sub
mov
dec
cli
cltd
out
mov
pop
inc
lods
jbe
lcall
cltd
jl
push
add
nop
mov
and
or
dec
push
adc
inc
fisubl
jbe
sub
cltd
lock
lret
sbb
cmp
push
mov
mov
fyl2xp1
aam
incl
ficompl
mov
pop
addr16
push
push
push
aam
pop
inc
jmp
cmc
and
in
mov
arpl
pusha
and
ljmp
cmp
ret
pop
xchg
and
adc
sub
js
pop
mov
addr16
push
jg
adc
int3
lret
in
test
xchg
fnstsw
clc
sbb
add
call
mov
in
loope
repnz
roll
into
xchg
fnsave
stos
cltd
pop
add
scas
and
sbb
lret
test
stc
and
sbb
ret
pop
xchg
inc
pop
mov
rcrl
addb
in
ret
insb
jmp
push
test
sbb
stos
into
add
scas
mov
adc
fisttpll
clc
rcl
loope
cmp
push
ja
mov
cmp
push
xor
in
test
sbb
mov
outsb
sahf
jle
fdivl
rorl
aaa
sub
rclb
ss
pop
stos
or
push
cmp
push
add
add
xorl
jno
sbb
sbb
daa
lret
cmp
aad
mov
mov
mov
js
mov
xor
icebp
cmpsb
hlt
lds
xchg
jo
pop
push
inc
rcrb
outsb
dec
aas
cltd
rcl
push
mov
mov
jnp
sub
stc
cmpsb
xor
and
push
lret
and
mov
mov
jno
fcmovne
fwait
addr16
xchg
cs
rol
in
xchg
sub
cmp
cmp
into
sbb
jmp
jmp
lods
outsl
and
shl
adc
lcall
mov
ret
les
push
in
or
adc
stc
daa
jp
and
and
mov
push
push
mov
int3
fld1
and
loop
dec
mov
mov
stos
sbb
jnp
fimull
loope
adc
jb
mul
mov
add
in
push
test
or
mov
sbb
cli
dec
mov
mov
dec
scas
mov
testl
js
push
jb
test
xor
movsb
sahf
insl
sub
push
repz
out
mov
push
push
es
cmc
adc
ds
mov
test
sahf
dec
call
jecxz
mov
jbe
cmp
and
in
cmp
lods
sub
jnp
mov
fdivrs
cmp
jae
mov
push
daa
outsl
mov
shlb
add
clc
push
sub
cmpsb
mov
xor
mov
mov
in
xor
jbe
popa
push
arpl
jb
dec
sub
insl
es
sahf
out
xchg
xor
jae
je
std
xchg
cmpsb
sub
inc
mov
and
addr16
jge
xchg
ret
fucomi
in
icebp
mov
adc
scas
sbb
cld
ror
shrl
push
xlat
shl
mov
lahf
mov
mov
adc
pop
lahf
fnstsw
dec
scas
ret
jne
sahf
loopne
ror
or
push
and
pop
std
sbb
xchg
jmp
cmp
js
sub
mov
push
fsts
push
or
hlt
imul
test
into
outsl
mov
push
test
xor
imul
lock
movups
js
xchg
test
aas
inc
es
mov
xchg
daa
xchg
js
jmp
pushf
stos
mov
out
sub
mov
scas
movsb
aad
test
push
cltd
mov
das
rcr
pop
mov
mov
insl
push
xchg
leave
cmp
cmp
cmp
push
ja
push
adc
xchg
pop
lock
pop
add
mov
pop
or
cmp
sahf
je
jg
or
fdivrs
xor
lock
adc
cmp
cmp
data16
bound
inc
xchg
imul
rol
sbb
loop
jae,pn
lods
daa
mov
inc
push
hlt
adc
pop
sub
insl
sub
movl
aaa
pop
imull
sbb
shll
popa
jge
cmpsl
rorb
into
xor
and
loopne
fmulp
cmpsb
frstor
adc
std
in
int
mov
sbb
add
xchg
xchg
sub
pop
xor
ret
pop
insb
mov
sbb
out
aas
dec
stos
test
fldenv
dec
test
add
int
in
mov
xchg
add
push
push
jns
adc
into
xor
mulb
xchg
sbb
lea
cmp
ret
outsb
sub
lcall
orl
int
mov
jnp
jmp
into
cmp
shrd
andl
mov
cmpl
movl
mov
jmp
movl
movl
jne
push
push
push
push
push
pushl
push
push
call
orl
or
xor
xor
xor
add
adc
adc
sub
add
mov
xor
xorl
shr
xorl
mov
orl
xor
or
movl
shl
cmpl
movzwl
movl
jmp
movl
movl
jle
push
call
not
or
sub
sub
sbb
sub
mov
mov
sub
imul
mov
cmpl
not
movl
jmp
mov
jne
push
pushl
pushl
push
push
call
sbb
adc
neg
subl
adc
mov
mov
not
add
mov
mov
mov
shrd
shr
adcl
mov
mov
xor
add
shl
incl
xor
jmp
jle
jl
dec
mov
push
xor
cs
ja
movsl
and
xor
mov
aad
bound
imul
je
cmp
outsb
pop
fs
loopne
mov
fs
data16
movsl
scas
hlt
test
shl
mov
iret
cwtl
and
out
aaa
xor
sbb
ror
jl
in
bound
in
std
add
add
lods
inc
pusha
aad
xchg
sub
aam
or
daa
roll
mov
jle
mov
fstp
mov
arpl
rolb
lcall
mov
mov
or
adc
sahf
adc
push
into
int3
jl
inc
addr16
ret
icebp
adc
lret
stos
inc
sbb
push
orb
inc
and
cwtl
xlat
mov
mov
dec
pop
lcall
call
aad
gs
lcall
pop
pushf
mov
in
pop
cwtl
loopne
xor
jnp
jae
pop
dec
push
xchg
cmpsb
sti
lods
and
js
pop
ss
mov
sbb
adc
inc
adc
jns
mov
shlb
movsb
in
mov
fsubrs
nop
sbbb
das
mov
lods
inc
out
cmpsb
sbb
mov
ds
jp
push
dec
jg
imulb
cmp
sub
shl
inc
pop
inc
mov
sub
jmp
add
inc
push
push
inc
sub
jmp
sbb
loope
sti
ret
stc
add
aas
cwtl
xor
enter
mov
mov
fwait
jmp
cmp
mov
pop
inc
and
jmp
ret
insb
dec
icebp
fwait
xor
mov
xor
adc
stc
popf
add
push
scas
test
adc
sbb
jae
inc
jg
sub
adc
int
pop
iret
add
ficoms
aas
in
mov
cwtl
xchg
sub
cmpsl
push
out
inc
xchg
jbe
stos
scas
jnp
jb
lret
das
js
cmpsl
inc
rep
add
ret
sub
cli
imul
gs
lock
sbb
and
rorb
sbb
mov
jbe
adc
mov
in
xchg
and
in
cmc
movsl
or
xchg
dec
lods
stc
negb
xchg
stos
xor
add
adc
cli
pop
sub
add
cmp
outsl
orl
push
loope
clc
or
imul
lea
xchg
jb
js
cli
add
adc
add
cltd
jo
sbb
testb
popa
cld
xlat
scas
fcmovnu
cli
xchg
cltd
pop
mov
adc
jb
cmc
loope
inc
push
test
xor
addl
push
pop
xchg
fists
dec
xchg
mov
jo
dec
xchg
andl
cltd
mov
or
xchg
inc
jno
testl
in
lcall
lock
sbbb
mov
aaa
pop
outsb
xchg
pop
pop
gs
imul
push
xor
jb
gs
hlt
sub
push
cmp
lret
cmp
out
xchg
pop
cld
sbb
sbb
out
xorl
cltd
sbb
and
call
dec
push
stos
fiaddl
inc
cwtl
jecxz
and
pop
pop
sahf
mov
ret
out
out
pop
jmp
adc
paddd
or
adc
add
sub
mov
xchg
xchg
cmp
xor
push
in
and
xchg
jnp
jp
aam
ret
das
sub
fnstsw
and
xor
pop
enter
movsl
ja
adc
dec
pushf
dec
std
ret
imul
push
sbb
pusha
inc
mov
xor
add
xor
int
imul
mov
add
jno
aam
lea
clc
mov
cmp
sbb
ja
dec
pop
fs
sbb
int
bound
adc
cmpsb
push
xchg
cmp
push
cmp
repnz
pop
ljmp
xchg
hlt
in
or
cld
aam
inc
nop
fwait
pop
orb
adcl
out
out
lret
fwait
jle
aad
push
inc
add
nop
pop
outsl
cwtl
iret
loop
arpl
clc
cwtl
inc
pop
jge
inc
xchg
xchg
imul
lock
repnz
pop
dec
cltd
sub
scas
negl
adcl
inc
or
aas
jecxz
in
mov
movsl
inc
sbb
xchg
test
pop
push
ds
ret
xor
mov
mov
jl
jl
js
cwtl
sub
mov
adc
mov
dec
cmp
stos
out
add
ja
push
lret
mov
insl
add
popa
xor
inc
lds
sahf
js
ja
adc
lahf
shrb
mov
push
rcrb
aad
sti
bound
push
lock
mov
sbb
xchg
jno
sbb
sub
jnp
cmp
xor
hlt
push
adc
or
and
addr16
loopne
mov
iret
test
cmp
fcoml
hlt
jmp
mov
repnz
scas
sti
outsl
pop
cmp
clc
sti
cld
mov
bound
xchg
lcall
add
loopne
in
ds
test
xor
jae
dec
or
es
test
jg
fisttpl
flds
out
dec
addr16
cmp
inc
fsubrl
lods
out
or
xchg
fwait
jge
scas
shrb
fisubrl
push
mov
lock
push
jecxz
xor
inc
rcrl
sub
pop
mov
pop
jg
pop
cltd
shll
clc
aaa
mov
jb
inc
and
call
adc
cs
or
cwtl
aas
mov
bound
jge
dec
aas
inc
pushf
ds
outsb
or
or
aam
enter
cmc
out
jmp
sarb
jge
add
mov
jle
xchg
mov
lret
jecxz
fsubl
scas
rorl
fadds
fiadds
and
jne
mov
xchg
fcomps
iret
dec
ljmp
out
stc
dec
in
inc
push
mov
fdivl
jb
sub
sub
cmp
dec
mov
adc
xor
mov
sti
outsb
adc
add
xor
cmp
in
aas
leave
pop
outsl
xor
jbe
jnp
or
enter
add
or
popf
ss
or
sahf
mov
ja
jne
ret
fimull
add
jo
mov
pop
iret
jle
mov
pop
jp
out
out
xlat
ja
ror
in
shll
lds
push
xchg
lock
test
jb
shrb
es
sarb
movsb
leave
fisttps
adc
mov
mov
cwtl
icebp
cmc
mov
sbb
adc
popa
lods
mov
adc
mov
pop
iret
and
iret
ss
outsl
fimull
xorl
jns
add
xchg
int3
enter
imul
popf
popf
int3
dec
sbb
stos
cmp
inc
mov
fcoml
and
jmp
mov
gs
dec
and
or
cmpl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
xor
or
mov
sub
sub
mov
xor
or
sub
xor
and
xor
or
sbb
mov
mov
add
mov
mov
sbb
mov
mov
incl
shrd
subl
shr
adcl
mov
add
mov
cmpl
not
mov
jmp
not
jne
push
push
push
call
mov
sbb
and
andl
and
orl
sub
or
sbb
jmp
pop
and
push
adc
adc
push
ja
ljmp
sub
mov
lcall
cmp
add
sub
pop
stos
inc
lods
daa
cltd
out
lahf
fucomp
rclb
xor
cmp
mov
ret
push
jl
sub
daa
dec
push
fistps
dec
mov
notl
lret
jg
xchg
push
xchg
sub
sub
insl
sbb
dec
xchg
sti
dec
inc
js
hlt
push
in
push
jl
dec
popf
mov
push
add
jno
pop
mov
icebp
and
push
idivb
scas
hlt
mov
or
fisubrl
ret
cwtl
xor
aad
xor
repnz
scas
add
push
movsb
movsl
and
pusha
xor
xchg
pop
xchg
gs
mov
cmp
xchg
leave
mov
aaa
testb
or
ror
cmc
inc
loopne
daa
or
mov
std
adc
ja
in
sbb
xchg
aam
mov
dec
push
add
and
bound
out
jne
pop
int3
jl
cwtl
and
jle
daa
das
test
stos
out
lock
push
push
fwait
clc
loopne
std
lahf
shl
test
cmp
xchg
test
dec
rcrl
pop
stos
ljmp
fincstp
push
xchg
sub
xchg
mov
add
imul
nop
in
cmp
pusha
loope
fisubrl
dec
cmc
data16
mov
add
mov
xor
std
fcoms
mov
sub
mov
mov
xor
xchg
jg
stos
std
out
pop
out
sbb
xchg
into
add
ds
mov
mov
push
pop
mov
clc
or
dec
xor
lods
mov
in
mov
bound
adc
pop
mov
adc
lcall
or
leave
in
xor
push
add
je
pop
xchg
enter
cmpl
xor
incl
and
aad
lock
mov
sbb
push
jge
jp
sbb
rcrb
adc
mov
test
in
adc
mov
push
xchg
neg
sbb
adc
push
cli
pushl
test
fbld
neg
sub
adc
add
stos
mov
psubsw
push
mov
das
push
add
adc
loop
push
mov
pop
and
call
pusha
cmp
and
xchg
stos
dec
cs
stc
push
inc
imul
add
sbb
xchg
jmp
jae
cmpsb
push
and
inc
and
int
fdivrs
fisttps
mov
test
in
pusha
push
movb
push
loopne
jl
xchg
mov
jo
sub
aad
dec
in
mov
aam
fcompl
aas
pop
xchg
pop
adc
cmp
jno
ds
sub
xchg
repz
loopne
add
add
or
imul
dec
test
fdiv
inc
cmp
pop
xor
in
push
push
jecxz
xor
pusha
add
icebp
shll
stos
inc
and
imull
js
cmp
push
jl
aad
inc
jnp
addr16
outsl
adc
push
sub
sahf
imul
arpl
jno
mov
pop
std
xor
lret
push
sub
inc
iret
xchg
push
mov
jo
enter
mov
vphaddbw
sbb
mov
lahf
pop
mov
rdtsc
stos
sub
out
push
xor
dec
cmp
xchg
sub
sub
or
stc
adc
mov
jno
loope
ja
mov
loop
pop
xor
cmpsl
xor
addr16
xchg
push
in
sti
movsb
jbe
jns
mov
adc
xor
ss
jno
aaa
push
inc
mov
mov
shll
shlb
sub
cltd
ret
into
addr16
xor
jb
sbb
inc
hlt
js
aas
xchg
das
test
xor
add
je
inc
into
push
pop
popf
enter
push
inc
lock
pop
sbb
jne
test
notb
sar
xor
pop
xlat
scas
push
cmp
or
aaa
orl
and
jmp
push
jns
sbbl
xor
jnp
xchg
mov
sub
and
in
hlt
js
sbb
sub
sbb
cmp
mov
sub
shrb
add
fidivl
cmp
lods
jecxz
lret
dec
arpl
shll
lods
push
pop
xor
aam
mov
add
cld
mov
jg
sub
inc
mov
jae
xchg
mov
adc
adc
jp
pop
nop
sbbl
insb
gs
and
dec
dec
cmpb
fs
dec
popf
pop
mov
or
jb
xor
mov
cwtl
sahf
mov
imul
pop
adc
sub
std
xchg
in
insl
cmp
xlat
ljmp
jecxz
xchg
lahf
gs
movsb
jns
inc
push
pop
jmp
mov
stos
ret
mov
xchg
fdivs
xchg
pop
jo
dec
addr16
pop
mov
roll
and
jmp
pop
inc
fwait
cmp
mov
mov
fs
movsl
out
push
test
popa
xchg
adc
call
push
cs
inc
xchg
movsl
enter
bsf
sbb
aas
or
fmulp
popf
or
mov
cmp
dec
nop
mov
loop
scas
cmp
sbb
icebp
pop
popf
popf
icebp
xor
xchg
xchg
jge
stos
dec
cmp
push
inc
dec
popa
call
add
or
shlb
xor
in
add
mov
or
jns
loop
jle
shl
add
test
pop
mov
inc
mov
insb
inc
lods
pushf
or
gs
je
mov
inc
jge
rolb
mov
in
sbb
cs
es
shrb
xchg
das
mov
stos
shlb
sub
pusha
add
push
pop
xchg
and
aaa
or
dec
mull
jnp
jecxz
cld
adc
fbstp
inc
mov
pushf
int3
lret
sbb
push
lea
call
jb
push
xchg
sbb
sarb
jmp
jl
in
pusha
adc
fmull
rclb
cld
mov
ja
sub
push
inc
sar
xorb
cmp
test
dec
fiaddl
int
aaa
enter
les
shll
imul
daa
mov
pop
push
jp
aad
or
addb
fsubrl
mov
dec
jle
dec
sbb
daa
outsl
sbb
lds
or
cmp
mov
push
cmp
mov
mov
into
and
iret
in
mov
into
jno
sub
jecxz
inc
out
sbb
aas
push
js
outsl
xchg
dec
mov
stc
mov
loopne
in
fbld
ss
repz
or
fwait
jg
xchg
fdivrs
in
sahf
cmp
mov
pop
jge
shll
shll
or
cwtl
sub
fsub
or
xchg
mov
xchg
push
sub
lcall
lods
adc
test
and
mov
in
cmp
mov
sbbl
test
add
jge
xor
subl
or
andl
shl
sbbl
lea
sub
mov
cmpl
mov
mov
mov
mov
jmp
movl
jg
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
pushl
push
call
xorl
movzbl
adc
movzbl
add
or
add
movzwl
sub
mov
shrd
shr
cmpl
mov
mov
mov
jmp
mov
jbe
push
call
andl
mov
adc
sbb
movl
mov
mov
or
not
mov
mov
sub
mov
add
jmp
rcrl
cmp
and
and
scas
dec
or
fcomps
ja
mov
sbb
mov
lret
out
jae
cmp
incb
aad
rorb
fwait
xchg
lcall
popa
cmpsl
and
dec
jae
aas
ret
xchg
adc
and
cmp
outsb
push
addb
je
or
enter
js
or
lahf
fwait
jnp
or
aam
cmp
cli
fsts
testb
shl
cld
clc
pop
test
xchg
clc
cmp
cmp
pop
sbbl
mov
rolb
movsl
jmp
sub
mov
xor
or
mov
cmp
sar
inc
sahf
std
push
int
rolb
enter
add
clc
push
sub
js
or
fistpl
xlat
sub
test
leave
xchg
fdivrs
jecxz
xorb
jns
loop
cmc
add
adc
ljmp
out
loopne,pn
into
ljmp
int
push
push
enter
into
mov
inc
mov
sarb
dec
cmpsl
inc
mov
adc
test
out
or
xlat
sub
lcall
mov
out
and
stos
in
and
nop
inc
pop
out
mov
jmp
adc
cli
xchg
add
sbb
pop
loopne
orl
cmpsb
fadds
pop
dec
mov
pop
push
mov
fwait
inc
lock
outsl
jbe
cmpsl
cmp
dec
pusha
xchg
xor
in
aaa
cltd
popf
gs
or
pop
stos
sub
cwtl
js
push
loopne
mov
rorb
iret
inc
mov
jge
inc
lret
lret
push
hlt
mov
xor
or
cmp
mov
push
aad
stos
je
arpl
notl
rcll
lret
push
sbb
adc
popa
xor
gs
pop
pop
fisubl
ss
jne
rcll
push
imul
xor
lods
push
jecxz
jne
int
push
adc
xor
ja
pop
jle
orb
scas
fcompl
inc
shll
inc
dec
stos
mov
in
or
sbb
push
sub
daa
adc
iret
lock
rorl
mov
scas
xchg
and
outsl
mov
aad
cltd
pop
sbb
sbb
mov
mov
int
mov
loope
test
mov
pop
xor
and
jg
push
push
mov
scas
rcr
cld
scas
call
decl
sub
inc
in
sbb
dec
lahf
xor
popf
dec
dec
mov
xor
inc
dec
push
stos
sub
dec
in
loop
mov
or
xchg
js
loopne
gs
fsubl
popa
bound
call
pop
mov
fimull
push
icebp
mov
addb
out
mov
out
repnz
pop
aam
repz
in
add
stos
cmp
xor
mov
rcll
dec
jns
or
pop
aaa
mov
mov
push
xlat
inc
repz
cmp
mov
xlat
inc
lods
loopne
xor
pusha
xor
dec
je
fmull
jmp
hlt
or
add
inc
xchg
mov
faddl
cmp
sbb
xor
sbb
std
shr
sbb
push
es
adc
and
add
ret
xor
jno
out
notb
mov
xchg
shr
cld
fucom
outsb
leave
lret
aaa
in
xor
mov
or
xor
dec
xchg
leave
rorl
loop
fwait
sub
jle
sbb
cmp
sahf
and
pusha
lcall
xchg
or
int3
imul
add
inc
bound
rorb
adc
outsb
ret
ljmp
mov
mov
clc
rol
test
stos
jge
std
and
icebp
pop
sbb
sbb
mov
outsl
std
out
lret
jnp
ss
xor
arpl
sub
aas
xchg
sahf
testl
mov
jmp
add
cli
adc
sti
lret
aad
addl
push
out
adc
or
xor
mov
jno
sub
cmp
push
jbe
mov
dec
sahf
sub
sub
sbb
xchg
std
push
shll
mov
dec
mov
push
add
xchg
add
mov
inc
pop
mov
sub
jae
sti
inc
ja
lret
inc
addb
jnp
adc
xlat
rcll
push
push
sub
or
sahf
das
jmp
jle
xchg
sub
addr16
clc
aaa
loop
jb
sti
xchg
fisttpl
push
cli
jo
sub
clc
or
imul
in
sbb
fwait
mov
popf
cmpsl
mov
or
ss
mov
out
fnsave
pop
mov
sbb
bound
cwtl
sbb
sbb
movsl
jb
mov
scas
xor
pop
dec
stos
test
mov
jns
mov
sub
mov
faddl
jae
cli
sbb
add
scas
cwtl
dec
cli
adc
mov
fbld
js
and
sub
fidivrs
sahf
je
xor
mov
dec
push
push
gs
cmp
cli
push
popf
dec
decb
movsl
mov
js
adc
or
nop
mov
mov
inc
inc
sbb
xlat
jg
mov
lret
mov
xor
gs
add
jnp
call
adc
xorb
es
std
ret
mov
fldcw
das
inc
ret
xor
mov
cmpsb
ret
jmp
fs
or
movzbl
mov
in
mov
mov
leave
sbb
dec
std
ja
xchg
jo
cwtl
mov
lahf
ljmp
out
cmp
test
mov
sbb
or
or
dec
dec
mov
lahf
in
push
adc
adc
repz
out
arpl
jg
inc
popa
cmpsb
ss
cmpsl
add
mov
loope
stc
add
cmc
clc
into
pop
cmp
cmp
je
test
test
lods
shrl
push
jl
push
xchg
push
xchg
jne
popf
jle
and
stos
dec
mov
mov
push
movsl
fnsave
push
test
push
push
fcmove
cmc
pop
jge
inc
hlt
lods
xorl
sarl
in
xlat
scas
push
pop
sarl
push
lock
mov
pop
in
shlb
js
and
dec
mov
fwait
movsb
cmpsb
out
outsb
mov
popa
outsb
cli
cmpb
cmp
mov
jmp
sbb
adc
sar
movsl
add
xor
lock
lcall
shll
jmp
inc
jmp
stos
mov
ret
dec
dec
lcall
add
inc
and
mov
pop
mov
sub
inc
mov
cli
add
cmp
mov
xor
adcl
or
shl
movzbl
or
imul
mov
mov
xorl
shrd
xorl
mov
mov
xor
shr
mov
and
mov
sbbl
xor
orl
or
sbbl
shl
adcl
sub
mov
mov
cmp
mov
mov
jg
xor
add
mov
sub
and
mov
cmpl
movl
movl
jmp
mov
mov
jb
push
push
call
xor
mov
sub
sbb
movzbl
and
mov
jmp
les
cmp
push
mov
mov
movsb
js
rcrb
xchg
add
or
orl
pop
cltd
add
out
dec
sbb
faddl
jae
push
push
push
mov
out
mov
mov
fsubs
lds
ret
mov
movsl
mov
mov
add
into
insl
shrl
mov
pop
xorl
call
filds
xor
sar
xchg
jmp
lds
sub
sub
xchg
pop
xchg
fsubs
aad
lea
decb
mov
ljmp
popa
mov
lea
lods
mov
xor
pop
arpl
in
mov
out
das
inc
adc
mov
push
fldenv
mov
xchg
pop
push
cmp
sbb
enter
imul
out
out
xchg
popa
xor
arpl
iret
sub
andl
fstps
call
imul
pusha
sub
add
pop
mov
sub
popa
and
mov
lret
xchg
add
outsl
cmpsb
out
orb
xlat
lret
mov
cld
out
outsl
xchg
div
bound
jp
pop
mov
pop
insb
subb
mov
jno
push
push
sub
xor
jmp
push
mov
pop
xchg
pushf
cmp
fildll
xor
mov
jbe
add
test
mov
sbb
and
mov
int3
push
sbb
dec
and
cmpsl
jmp
aas
icebp
cld
jb
stc
and
add
mov
inc
dec
out
sbb
outsl
or
xchg
shl
jo
bound
inc
fidivs
ja
test
sahf
sbb
shr
aas
les
mov
flds
mov
mov
adc
test
call
daa
or
mov
pop
test
push
adc
mov
dec
out
pop
xor
pop
das
xchg
sbb
inc
fs
inc
bound
pop
add
rcrb
sbb
inc
jecxz
and
test
fimull
inc
subb
xchg
les
cmp
lcall
push
sub
adc
push
out
jb
sbb
pop
jns
insb
cmpsl
jp
sub
enter
sub
je
mov
addr16
clc
inc
call
test
and
subb
negb
cmp
cmp
call
stos
shl
rorl
pop
jb
pushf
push
aad
inc
mov
mov
cmp
mov
push
inc
mov
push
mov
enter
xchg
add
or
repz
and
mov
sbb
mov
adc
loope
stc
xor
xchg
cltd
mov
xor
icebp
fxtract
and
adc
add
add
cmp
daa
js
cltd
aas
addb
popf
repnz
xchg
ret
mov
stos
push
shl
sti
sub
sub
outsb
mov
nop
out
dec
fisubs
jg
mov
sbb
or
push
cmp
das
push
cmpsl
fwait
loop
test
ret
addr16
mov
sarl
mov
jno
gs
mov
xor
mov
mov
and
hlt
iret
and
ja
ljmp
lock
cmpsb
jle
mov
mov
xor
lahf
insb
add
xor
mov
mov
sahf
icebp
gs
std
stos
sub
std
push
cmc
xor
fisttps
mov
in
jmp
xchg
or
popf
xor
xchg
scas
mov
pop
jmp
int
push
jno
mov
fdivr
adc
xchg
in
sub
sub
xchg
aad
push
mov
test
int
cmc
enter
bound
sbbb
sub
clc
rcl
addr16
pop
adc
ficompl
cltd
outsb
dec
xor
pop
pop
sub
pop
mov
mov
inc
and
xchg
stos
xchg
xor
sbb
or
bound
jb
loope
adcl
pop
or
jno
cmc
or
packsswb
cmpsl
adc
dec
and
push
ret
cwtl
loopne
gs
and
dec
jmp
fcmovbe
daa
mov
icebp
sti
mov
dec
aad
fnstsw
push
das
in
mov
aad
cli
hlt
std
ss
jl
iret
lods
mov
out
push
adc
ret
dec
xor
sti
xor
inc
jne
fnstcw
ds
int3
pop
jbe
sbb
roll
push
ret
in
mov
lcall
sbb
cmp
add
mov
xchg
pop
add
xlat
in
lahf
mov
jnp
or
imul
pusha
mov
inc
xorl
test
add
push
iret
stc
call
cltd
idiv
mov
arpl
cwtl
aad
scas
mov
xor
jp
rolb
subl
into
call
jl
in
or
or
fs
inc
pusha
ret
jno
stos
mov
nop
cmc
and
mov
xor
int3
cmp
and
xchg
inc
push
sub
jbe
cmp
pop
jb
dec
xor
mov
insl
arpl
add
sub
push
fwait
adc
cmpsb
pushf
add
jno
jge
cmpsb
mov
addr16
shrl
jno
testb
sub
mov
mov
in
fwait
inc
dec
cmp
cmc
mov
mov
loopne
lcall
roll
and
xchg
add
fwait
cmpl
dec
lods
pop
ljmp
in
push
je
rcr
adc
sub
aaa
dec
pusha
gs
sbbl
cmc
in
scas
fists
popa
sbb
cmp
repz
cli
pop
adc
inc
pusha
mov
cmp
jmp
hlt
mov
sti
mov
xor
pop
sub
orl
negl
inc
dec
add
xchg
cmpsb
fnsave
mov
adc
mov
dec
testb
mov
scas
jmp
ret
jle
pop
imul
add
repnz
mov
call
mov
inc
push
mov
and
cmp
ljmp
adc
inc
jne
pop
mov
ljmp
mull
daa
or
mov
xor
test
pop
xchg
pop
pop
mov
shlb
or
sbb
call
pop
inc
bound
mov
jp
sbbl
xor
pusha
inc
mov
stc
pop
inc
push
enter
ret
pop
and
scas
cltd
sbb
jle
jp
jge
sbb
stos
cmp
sub
sbb
jbe
inc
adc
mov
xor
pop
pop
push
aaa
iret
movsb
sub
jno
push
imul
roll
out
inc
adc
mov
xor
cld
stos
cmp
fwait
xchg
cmc
sarb
dec
mov
test
cmp
stos
fsubr
mov
std
sbb
mov
add
and
stos
aaa
inc
add
lods
roll
mov
movzwl
or
mov
adcl
xor
andl
shl
orl
xor
adcl
or
sbbl
shr
and
mov
jmp
mov
mov
mov
sbb
cmp
ja
pusha
xorps
adc
adc
jne
jb
add
cmc
adc
jae
setp
inc
sbb
jns
add
imul
cmp
icebp
mov
adc
inc
adc
and
push
pop
dec
or
mov
dec
out
xchg
in
icebp
jecxz
testl
stos
add
insl
push
and
aam
sahf
andl
lahf
cmp
ficoms
sbb
stos
test
data16
lcall
outsb
rorb
jle
incb
xchg
daa
fistps
and
dec
jge
or
pushf
push
sbb
scas
inc
imul
mov
imul
das
mov
xchg
fnstenv
mov
inc
and
sbb
test
add
pushf
add
or
bswap
or
iret
enter
inc
clc
push
fs
adc
mov
or
lock
aad
cs
insl
gs
leave
stc
cmp
xchg
mov
movsl
sub
pop
and
aad
sbb
fldt
mov
enter
aam
mov
cmpsl
ljmp
je
in
fsub
cmpb
bound
mov
js
dec
cwtl
test
or
in
inc
cs
stos
mov
ret
pop
lods
leave
push
punpckhdq
pop
adc
cld
sub
into
jne
dec
push
sub
pop
pop
mov
xor
insb
sbb
or
and
fildll
xor
sti
frstor
jae
test
dec
push
lds
sbb
sub
testl
inc
xor
test
cmp
mov
pop
push
mov
push
jnp
xchg
and
in
shlb
or
lret
es
aas
les
push
in
cmp
sub
and
repnz
lods
fadd
or
lcall
xchg
mov
stos
sub
sub
out
mov
scas
mov
pop
pusha
xchg
push
lods
les
inc
inc
movsl
pop
sub
sbb
mov
mov
cmpl
mov
outsb
sti
dec
jmp
jl
clc
stos
mov
aaa
pushf
mov
cli
out
adc
clc
aaa
and
xor
ds
out
aam
lret
sbb
xor
pop
jg
jns
in
add
sub
in
pop
test
mov
jne
iret
lret
icebp
lahf
call
outsb
loopne
sub
mov
push
cs
dec
cmc
mov
and
int3
popa
sub
push
mov
and
mov
outsl
push
dec
cwtl
pusha
movsl
icebp
add
stos
pop
sub
mov
mov
ficoml
pop
cmp
movsb
cmpl
mov
lahf
sub
push
loope
xor
pushf
cmp
pop
sub
mov
mov
mov
jmp
insl
imul
nop
fldcw
xsavec
das
repnz
hlt
clc
mov
and
les
and
and
sub
add
xchg
mov
xorb
pushf
add
sbb
push
jp
sti
notl
cmc
jnp
jg
sub
les
pop
pop
call
aaa
push
stos
fildll
mov
mov
push
fisubrl
inc
into
into
cmpb
inc
jmp
sbb
loopne
fwait
mov
inc
out
jbe
in
int3
repnz
nop
lods
out
xchg
and
or
push
fisttps
enter
test
dec
pusha
jp
sti
inc
xor
sbb
call
call
out
xchg
mov
out
sbb
movsb
cmp
cmpsl
fsubl
sbb
and
loop
shrb
sbb
sbb
fstpt
in
pop
in
xor
call
xchg
push
push
and
in
aam
mov
out
outsl
mov
add
cmpsl
push
xchg
lods
adcb
mov
xchg
out
cmp
xchg
add
arpl
mov
adc
enter
rcrb
movsl
lds
ljmp
xor
test
imull
adc
in
inc
xor
ds
out
pop
iret
xchg
aad
mov
cld
mov
fxch
adc
adc
stos
mov
repnz
push
push
ret
jle
aad
addr16
clc
mov
xor
enter
fnsave
incl
mov
pusha
jns
fiadds
and
dec
loope
mov
sub
das
movsl
int
js
pusha
or
arpl
xchg
pop
cmp
jno
imul
orb
inc
xchg
pop
int
mov
out
push
cwtl
push
xor
push
sbb
in
cmpsb
sti
cmpsb
enter
dec
jecxz
insb
adc
or
fldt
fiaddl
clc
add
aaa
clc
and
cmp
xchg
lods
mov
out
and
adc
cmp
insl
xchg
popa
mov
pop
xchg
sbb
out
pop
mov
cltd
add
dec
lds
ret
push
push
cld
repz
lds
loope
loop
cmp
or
mov
js
sbb
pop
push
cmp
scas
ret
stos
and
cs
in
jb
inc
sub
sbb
inc
mov
cmpsb
push
or
stc
mov
popf
es
outsl
mov
dec
xchg
mov
dec
and
mov
in
mov
mov
test
adc
loop
xor
clc
bound
imul
mov
mov
aas
mov
xchg
mov
lock
inc
xor
rorb
and
fnstsw
mov
out
push
jo
xor
cmc
fildl
pop
into
rcll
mov
sbb
jnp
data16
cmc
arpl
divb
gs
xchg
movl
test
push
iret
jae
mov
dec
push
or
pop
leave
mov
sbb
mov
je
popf
test
mov
sub
mov
test
and
cmc
xor
inc
jb
sbb
out
ror
adc
xchg
ftst
jb
cltd
aas
add
inc
cmp
jge
ret
inc
in
or
enter
adc
xor
dec
inc
dec
rcrl
or
mov
inc
or
cmp
and
and
add
movsl
inc
in
sub
lods
add
gs
mov
fs
arpl
js
int
xor
jge
pop
or
xor
mov
dec
popf
test
mov
sahf
out
inc
fimuls
or
mov
test
inc
and
lods
add
push
mov
add
and
scas
insl
jg
adc
stos
or
pop
xchg
adc
nop
addb
or
stos
rolb
lret
movsl
lret
ljmp
pop
add
xor
xchg
mov
mov
aam
leave
mov
jnp
and
jmp
lret
xor
cmp
orb
aam
adc
or
mov
mov
mov
add
mov
andl
shrd
sbbl
shr
mov
mov
inc
jmp
shll
adc
push
scas
xchg
adc
ret
sub
ja
mov
cmpl
std
xchg
jl
sbb
dec
sbb
xor
fadds
and
pusha
push
cmp
sub
push
mov
cmpsb
cmpsb
movsl
fildl
xor
das
xchg
push
and
pop
cltd
fsts
and
in
test
decb
ljmp
dec
sbb
fcompl
repz
and
jle
and
xor
arpl
fistpl
fldt
cmovno
xchg
mov
fildl
dec
push
shr
jae
mov
adc
push
shrl
cmp
in
inc
hlt
mov
mov
sub
adc
ja
xor
stos
sub
push
mov
sti
in
sbb
xor
or
xchg
out
movsb
outsb
fwait
mov
cmpb
adc
or
add
mov
fnstenv
daa
into
mov
lsl
leave
or
stos
aas
jmp
xchg
push
rep
aad
lods
add
gs
clc
fs
jmp
and
in
mov
add
lret
push
dec
bound
jo
cmpsb
mov
int
push
clc
cwtl
mov
pop
add
cwtl
lret
js
ja
bound
ret
jne
mov
in
and
pop
jmp
fnstenv
insl
sarl
mov
pushf
aas
pop
xor
xchg
lcall
cmp
or
lret
push
jmp
or
push
sub
mov
dec
jo
loopne
cltd
out
movsb
in
popa
lcall
ja
sub
adc
das
jl
mov
mov
adc
imul
mov
cmp
jecxz
sbb
and
pop
jns
insb
push
out
enter
jnp
push
or
cld
sub
mov
mov
jno
sbb
or
loop
or
jb
jmp
mov
add
popf
push
movsb
pop
xchg
out
fistl
test
leave
iret
jb
fidivs
mov
cmpl
sub
bnd
adc
mov
ss
pop
xlat
sub
add
sub
xor
add
bound
add
jmp
clc
lahf
aas
cwtl
cmp
sub
push
xchg
xor
or
icebp
ret
add
ret
dec
lods
inc
xor
xchg
jmp
sbb
sub
pop
mov
cmp
xlat
in
loope
and
mov
insl
pop
cmp
push
adc
pop
popa
sbb
jne
adc
xchg
inc
sub
sahf
lock
adcb
adc
test
mov
push
out
mov
shrl
push
xor
xchg
adc
pop
add
out
mov
ret
push
push
sbb
insb
cmpl
hlt
in
add
or
shrl
and
repz
sbb
popa
flds
sbb
dec
push
data16
in
xor
test
jmp
jge
ja
fldt
xor
ret
or
cmp
loopne
mov
arpl
adc
sbb
add
lret
loop
mov
pop
fs
cmp
xorl
je
jp
mov
sub
add
xchg
xor
sahf
fiaddl
cltd
push
fnstcw
push
lock
xor
mov
sub
mov
xor
push
jno
pusha
sarl
sbb
jns
xor
aaa
xchg
inc
aam
daa
mov
jp
ficoms
cli
inc
or
pushf
add
cwtl
push
xchg
xchg
adc
cmp
mov
push
inc
and
jl
subb
cmp
mov
push
rcr
push
imul
popa
jg
je
mov
mov
cmp
and
int
lcall
test
mov
sub
add
cs
xchg
in
push
jecxz
push
subl
icebp
dec
fiaddl
adc
pop
jp
insl
ret
test
div
lds
or
mov
int3
sahf
std
push
shr
push
sbb
xchg
int
rol
pop
frstor
jno
and
rcll
dec
push
lock
fdivs
and
lea
incl
adc
iret
mov
dec
dec
pop
out
js
or
add
loopne
outsl
mov
inc
fistpll
shlb
pop
imul
sbb
outsb
sbb
ficoml
sub
adc
mov
shl
hlt
xchg
pop
mov
add
push
jo
fldt
cs
mov
test
inc
push
iret
or
arpl
dec
push
stos
incl
adc
or
cmp
and
jnp
test
sahf
mov
mov
cli
mov
mov
mov
movsb
pop
pop
add
or
imul
dec
adcb
repnz
add
dec
bound
rorl
fldt
mov
jbe
xor
mov
or
inc
xor
ljmp
jg
scas
jle
pop
sbb
pop
mov
pop
das
push
in
mov
cmp
push
sub
repz
lcall
dec
mov
sub
sub
loopne
push
cmc
dec
stc
sti
int
lock
push
add
or
mov
outsl
jnp
int
jecxz
dec
clc
push
cmpsb
push
sbb
push
mov
fsubp
out
push
cwtl
mov
dec
inc
pop
mov
repnz
mov
cmp
cmp
lret
fcoms
xor
icebp
fdivrl
inc
add
sbb
inc
dec
je
ss
dec
cltd
mov
scas
pop
decl
lahf
push
xchg
and
subb
stos
jae
dec
idiv
daa
mov
testb
cmp
add
test
gs
test
adc
mov
out
das
xchg
adc
and
xor
push
js,pn
and
ficoml
lret
sub
clc
in
rorl
lds
inc
add
add
add
dec
add
addr16
test
or
pop
test
rcl
adc
and
es
nop
dec
inc
inc
mov
pop
sub
lcall
arpl
shlb
rol
cs
notb
dec
andb
fnstcw
jo
mov
shrl
mov
pop
cwtl
ret
aam
add
mov
cmp
jbe
and
dec
and
dec
sub
shlb
or
fistpl
sbb
ret
jnp
dec
and
insb
test
push
push
movsl
jl
paddw
mov
sbb
jmp
xchg
nop
rcrb
jle
xor
and
fs
xor
or
dec
leave
jge
push
mov
arpl
lods
insb
repz
inc
mov
dec
cmp
out
outsl
mov
xorl
xor
subl
jmp
scas
popa
inc
jge
sbb
cs
int
pop
js
sbb
ja
lock
mov
xchg
and
pop
int3
sub
dec
cmp
lds
and
sbb
in
stc
dec
outsl
jmp
dec
dec
push
icebp
inc
arpl
pop
and
xchg
pop
xor
cmp
mov
mov
fcoms
and
lcall
xchg
inc
xchg
add
and
pop
fs
divb
mov
jl
enter
stos
mov
push
test
inc
icebp
lret
aaa
std
xor
outsb
aas
shll
xor
mov
mov
movsl
add
cwtl
jae
mov
or
sbb
leave
cmp
xor
stc
jno
mov
sbb
jae
xor
test
mov
adcl
out
mov
lcall
push
push
aas
sbb
push
adc
lahf
arpl
fcmovnb
lods
fistps
or
popa
test
ja
sbbl
jbe
push
pop
das
rorl
loopne
xchg
cmpsb
lret
test
add
lds
enter
enter
movsb
sub
mov
inc
stc
testl
mov
xchg
jae
filds
test
mov
xchg
mov
or
test
outsb
jmp
dec
cmp
and
mov
jge
xor
cli
cltd
rcrl
sub
movsb
or
add
pop
add
enter
sbb
or
shll
add
mov
cmp
addr16
inc
add
add
mov
sarb
push
fildl
aad
jmp
add
mov
sub
mov
out
xchg
popa
mov
fldt
popf
adc
into
popaw
mov
jns
dec
xor
shl
mov
ret
int
ficompl
ljmp
inc
les
repnz
xchg
push
lods
jmp
pop
add
nop
enter
mov
sahf
fistpll
cmp
mov
ljmp
push
sbb
xor
xchg
lea
addb
iret
insl
popa
sub
and
mov
add
stos
cwtl
add
xor
rorb
lret
pusha
lret
mov
xor
pop
sbb
mov
adc
dec
sub
xor
out
loope
cmpsl
sbb
cmc
jg
scas
daa
subb
aad
jecxz
or
cmp
jge
mov
ret
frstor
popa
in
push
jle
xchg
sti
add
mov
stos
popa
jb
xchg
sbb
push
fisttpll
nop
push
stos
cmp
lods
sti
cmpsb
sti
fildll
xchg
xchg
pop
lahf
mov
push
incl
cli
es
insb
es
popa
test
shll
and
fisubrl
mov
leave
mov
lock
stc
xor
mov
adc
and
mov
inc
aaa
fmuls
imul
out
add
fnstenv
sub
dec
push
mov
sbb
out
pop
imul
repnz
ret
jbe
jne
stos
stos
push
dec
in
xor
or
ja
jmp
sbb
mov
mov
std
sub
inc
and
jae
mov
shl
xchg
mov
or
mov
int3
push
outsl
mov
test
jns
in
sub
push
stos
fstl
mov
or
mov
sarb
adc
in
jmp
jne
ss
call
pop
dec
addl
sbb
fidivl
out
mov
mov
pop
dec
movsl
dec
mov
imul
sbb
mov
adc
jnp
fsubrs
fcmovne
dec
in
in
push
es
out
loop
aas
push
std
rolb
push
fldcw
aam
mov
ljmp
lret
mov
cmpsb
or
cmp
or
sbb
insl
xor
int3
jns
notb
xor
mov
ljmp
int
mov
std
divl
sbb
sub
leave
pushf
aaa
scas
jg
sbb
les
imul
shlb
sub
les
cmc
sub
mov
xchg
pop
out
loop
mov
push
xchg
push
xchg
xchg
lret
or
call
je
cmpsb
flds
mov
scas
pop
add
imul
adc
cltd
jle
jg
xchg
pop
out
popf
loopne
mov
and
jbe
in
out
cs
lds
daa
mov
ffree
add
hlt
adc
add
and
xchg
sbb
orb
int
lret
jne
pusha
aas
sti
hlt
jecxz
mov
xor
out
gs
inc
xchg
jno
jecxz
mov
xor
jle
scas
data16
adc
test
push
nop
mov
fsubrs
xchg
sub
mov
lds
fcomps
xor
int3
gs
pop
mov
std
int
push
insl
cmpl
mov
roll
sbb
insl
inc
dec
das
dec
and
pop
xorl
testb
jge
into
cmp
mov
jo
adc
lock
mov
andl
sarb
pop
or
pop
loopne
arpl
lahf
jmp
test
xchg
pop
cltd
jp
mov
inc
lods
movsb
mov
cmp
es
jne
iret
mov
fildl
ljmp
lds
test
js
mov
lahf
adc
sub
test
sbb
jno
adc
jle
fnsave
push
adc
mov
lret
xor
mov
jp
pushf
push
mov
cs
jg
add
sub
in
lea
loope
jnp
daa
and
or
pop
lret
arpl
cmp
out
fstl
inc
cwtl
jge
fidivrl
jns
ljmp
cvtdq2ps
sub
and
bound
icebp
ret
or
mov
mov
xchg
lods
or
mov
icebp
and
rcrl
mov
sub
inc
leave
shlb
lret
mov
sbb
mov
insl
adc
inc
dec
and
stc
in
dec
sub
mov
repz
in
into
jnp
out
sub
addr16
mov
mov
repnz
dec
stc
sbb
jge
shr
ss
mov
pop
outsl
repnz
repnz
clc
out
lods
or
shr
cwtl
jle
addr16
pop
ss
ja
movsb
in
les
in
mov
push
xchg
mov
dec
in
test
lods
rcrb
inc
push
xchg
xchg
cmp
mov
pop
mov
mov
xchg
cmpb
loopne
repz
in
roll
jl
aaa
and
jge
int3
xchg
pop
ret
daa
adc
pop
mov
mov
or
rorl
rcll
push
mov
leave
cmp
test
mov
lods
mov
arpl
shl
sub
inc
es
push
test
mov
cmp
repnz
cmp
js
rorb
push
in
add
sub
inc
add
loope
imul
jmp
add
or
or
adc
mov
xchg
xorl
cs
int3
test
imul
aas
addb
xlat
jmp
aad
inc
shlb
mov
push
mov
faddl
and
mov
xchg
imul
jne
jl
bound
lahf
movsb
or
xor
cmpl
sub
xchg
nop
in
jmp
in
mov
loop
push
push
shr
repz
into
cli
mov
rolb
dec
adc
idiv
insb
xor
push
push
out
das
mov
aam
or
std
jge
repz
movsb
xor
mov
iret
aaa
stos
dec
jb
aam
mov
mov
pusha
mov
push
add
ljmp
and
push
sbb
clc
cltd
xchg
fnstsw
pop
jnp
adc
or
xor
aad
sbbb
ss
test
dec
ja
add
fiaddl
jp
or
inc
lar
lock
dec
inc
stos
lea
aam
add
pusha
sbb
ljmp
cmpsb
jbe
add
push
jae
lahf
xor
fwait
out
sub
clc
or
xchg
dec
add
test
andb
mov
mov
mov
adc
and
dec
fidivs
mov
adc
inc
das
mov
mov
push
mov
mov
jle
add
sahf
std
jnp
inc
mov
or
gs
test
mov
cmpl
adc
push
dec
pop
jl
sbb
sbb
add
test
sti
pop
push
addr16
pop
xchg
imul
adc
pop
in
dec
fwait
push
aad
bound
mov
jmp
rcrl
cmp
adc
and
adc
std
xchg
push
sbb
sub
adc
mov
inc
loop
ljmp
popa
int
adc
mov
das
stos
aam
mov
push
inc
adc
iret
int3
or
popf
adc
mov
movsl
lret
xor
sub
sub
inc
insb
xchg
in
mov
filds
sbb
ds
and
push
adc
repz
loope
es
bound
cmpsl
inc
fmull
mov
repz
inc
xchg
mov
mov
dec
shrb
mov
adc
jo
mov
js
je
mov
test
scas
cmp
pop
loopne
inc
xchg
aas
dec
mov
jo
mov
mov
dec
xchg
and
xchg
out
js
adc
xchg
imul
sub
and
mov
xchg
push
cmp
fdivrl
arpl
push
push
or
inc
addl
sub
push
adc
imul
insb
popf
adc
mov
fs
mov
mov
and
insb
iret
jbe
or
sbb
lcall
pop
dec
repnz
cmp
fisubrs
fisttpl
or
insb
nop
cmc
int
sti
dec
jae
and
mov
ret
sub
mov
pusha
dec
push
das
sub
imull
pop
je
lods
popf
cld
jnp
xchg
fidivrl
mov
popa
cmp
loopne
pusha
mov
xor
push
pop
rcrl
jne
fcomps
jbe
std
inc
enter
in
push
pop
mov
test
fstps
loop
jbe
cmpsl
pandn
mov
mov
out
mov
test
push
lds
add
mov
or
int
js
in
jge
rcr
jne
dec
nop
xor
jnp
fiadds
or
iret
lret
mov
cmpsb
dec
sbb
loop
sarl
lcall
in
mov
cmp
lret
jp,pn
repz
popa
aaa
adc
into
dec
jge
stos
and
and
shlb
mov
gs
imul
cmp
and
scas
inc
je
dec
dec
js
adc
inc
dec
cmc
shl
mov
js
cmp
mov
mov
dec
dec
ss
pop
lret
mov
inc
dec
imul
loopne
je
jge
in
or
xlat
pop
cltd
xor
out
cmp
xchg
push
repnz
lods
push
sub
fs
jbe
sahf
addr16
mov
push
xchg
lret
pop
arpl
push
cmp
push
sub
ss
sub
dec
push
inc
mov
jnp
lahf
adc
fidivrs
and
sub
outsl
sbb
cmpsb
sbb
sub
cmp
rcl
adc
arpl
imul
sbb
adc
loope
and
mov
cmp
std
dec
test
or
xchg
int
test
int3
jb
pop
ret
pop
adc
inc
sub
lods
cmp
outsb
jno
mov
jp
pushf
jb
mov
out
cltd
mov
xor
stos
stos
jns
and
or
jo
outsl
or
pop
movsb
inc
or
imul
insb
push
xchg
mov
lods
fwait
or
pop
sahf
mov
into
xor
into
inc
pop
xchg
push
add
mov
cli
movsb
shrb
mov
popf
outsb
mov
add
inc
cmpsl
daa
add
fidivl
cmc
mov
mov
inc
push
adc
fimull
push
xchg
xchg
adc
mov
loop
sbb
mov
or
les
pusha
pop
pop
orb
out
xchg
jecxz
cmpsb
adc
and
push
xchg
push
orb
dec
lahf
cmp
test
cwtl
lahf
jnp
push
xchg
out
in
add
out
xlat
bnd
xor
dec
add
mov
js
jno
xor
vpunpckldq
xchg
xchg
lods
jae
or
xor
rorb
out
sub
push
dec
inc
ja
and
dec
jno
mov
jne
dec
stos
lret
xchg
mov
pop
cwtl
sub
cmp
shr
lds
xlat
sub
int3
notb
ds
lods
xor
test
pop
dec
in
imul
addr16
imul
inc
push
sub
aas
inc
fs
mov
popa
xor
mov
jae
cmp
sti
cld
jne
xorl
fs
push
popf
pop
fwait
sub
mov
push
out
aam
push
movsl
inc
cli
cmp
jle
jmp
sbb
cmp
adc
cwtl
in
inc
push
xor
pop
hlt
and
mov
sbb
lods
ljmp
pop
in
or
sub
push
scas
ljmp
cmp
rcr
adc
std
adc
jg
push
mov
mov
add
mov
cmp
mov
mov
sbb
ds
push
ficoml
jg
xchg
pusha
mov
cltd
faddl
xchg
aaa
xchg
ljmp
xchg
mov
push
out
cmp
dec
adc
xchg
push
fcompl
out
jae
scas
push
in
jmp
arpl
sti
rcll
sub
pop
scas
pop
push
popf
sub
movl
jmp
cmpl
mov
movl
movl
mov
jmp
movl
jle
push
pushl
call
andl
adc
xor
xor
mov
sub
and
not
and
movzwl
adc
cmpl
mov
movl
movzbl
mov
jmp
movl
movl
jbe
push
push
push
pushl
call
add
sbb
sbb
xor
add
mov
mov
shrd
adcl
mov
or
mov
addl
jmp
inc
or
add
cltd
or
movsl
out
dec
or
ja
shrb
rcll
addl
mov
adc
cwtl
mov
mov
pop
lock
popf
xchg
add
pop
fs
sbb
xor
test
jecxz
and
jl
dec
or
fsubrl
jmp
adc
xchg
jbe
xchg
mov
rcrb
dec
test
clc
and
mov
xchg
cmp
inc
data16
push
and
dec
mov
lahf
scas
aam
aaa
iret
cmp
pop
test
iret
int3
lock
jle
push
stc
mov
les
pop
pushf
mov
ret
xor
sti
xchg
out
ds
or
leave
fldcw
in
mov
outsb
pop
sbb
jmp
xorl
inc
sbbl
or
int3
adcl
sbb
push
es
xor
sbb
xlat
aaa
mov
and
pop
jecxz
and
dec
pop
ss
rcr
iret
pop
jns
add
mov
es
pop
mov
lret
sub
enter
lcall
shl
enter
mov
dec
sub
call
jp
push
movsb
adc
imul
jno
cld
or
test
inc
dec
les
cld
sub
push
ficompl
inc
jno
pop
and
out
daa
mov
push
negl
lret
test
inc
cmpsb
and
ror
cs
sbb
mov
mov
cmp
mov
into
push
jbe
sbb
lea
ja
xchg
push
les
scas
and
or
negb
cmp
cltd
add
pushf
cmpl
rcr
out
mov
int
xchg
and
or
inc
push
loope
push
in
out
test
push
cwtl
js
jnp
rorb
arpl
jnp
add
jp
je
push
adc
dec
lods
lahf
xor
mov
fldt
or
push
ss
rolb
cmpsb
sbb
scas
dec
insl
test
rcl
pop
pop
cmp
and
add
dec
out
inc
jnp
es
loope
lcall
and
out
int3
mov
nop
cmpsb
inc
jge
iret
fsubl
pop
rcrb
hlt
lea
cmpsl
mov
push
xchg
clc
pop
int
push
stos
pop
bound
rolb
inc
cmpsb
ret
icebp
mov
xchg
adc
testl
and
jp
and
adcl
nop
loopne
jne
mov
push
mov
pop
xchg
dec
mov
xor
clc
mov
repnz
jbe
mov
loope
das
ficoms
and
mov
adc
cmp
int
inc
and
loop
not
in
stc
aam
ret
push
mov
jns
arpl
scas
clc
pop
dec
jo
icebp
andl
or
mov
ficoml
and
jl
push
test
adc
mov
sub
lds
cmp
fimull
or
enter
clc
sbb
adc
imul
div
xor
jp
xchg
mov
xlat
pop
xchg
pusha
cltd
push
arpl
daa
push
repnz
data16
mov
imul
fwait
cmpsb
insb
enter
mov
jmp
fstpt
ficomps
xor
inc
xchg
push
ja
xor
xchg
jp
fisttpll
dec
adc
stos
pop
scas
aad
mov
not
lods
das
test
fmuls
adc
mov
add
nop
mov
cmp
cld
xchg
loopne
and
int3
adcb
out
adcb
jge
stos
sub
and
nop
xor
gs
je
dec
pop
jo
imul
xchg
cmp
pushf
loope
pop
fisubl
fildll
pushf
xchg
into
dec
xor
xchg
mov
and
cmp
fldcw
lcall
push
inc
loope
imul
fiaddl
add
cmp
jg
jge
pusha
or
xchg
enter
pop
jge
ret
lods
fldl
fwait
test
push
xchg
orb
add
int
out
sbb
mov
ret
pop
jge
iret
rorb
scas
xchg
cmpl
cld
sub
add
and
andl
xchg
xor
or
fld
push
shrl
xchg
jg
adc
lcall
add
mov
xor
jle
xlat
add
cltd
test
mov
push
lea
adc
mov
adc
ficoml
cmpsb
push
repnz
int
fsubl
das
test
mov
fmuls
mov
outsl
movsb
inc
lea
jge
jmp
loop
fimull
insl
rolb
call
aas
or
sbb
ds
cmp
scas
popa
test
je
es
mov
adc
push
cmpsb
fisttpll
mov
sbb
sub
sarl
jb
push
aas
test
fcompl
xchg
cmp
subl
imul
nop
cmp
or
int
cli
inc
bound
lods
cmp
mov
mov
imul
sub
dec
or
fwait
sub
outsb
lods
and
addr16
nop
xchg
loope
add
int
xchg
jno
lods
in
or
adc
xchg
inc
ficoms
lods
adc
cltd
movsl
fistl
mov
leave
fwait
sbb
insl
inc
lcall
cs
rdpmc
dec
stos
ja
add
pop
in
adc
movsb
push
dec
jns
sbb
fs
sub
mov
mov
xchg
aam
sbb
jl
cmp
cmc
popf
inc
adcl
xchg
add
pop
jne
ja
add
mov
cs
and
xorl
lcall
push
jle
jg
dec
push
fstps
popa
sbb
jbe
imul
push
cmpsl
or
loop
xor
sub
adc
popa
mov
lods
xorb
lahf
outsb
mov
jecxz
dec
push
mov
sbb
shl
scas
daa
or
movsl
xchg
arpl
cmp
das
or
ret
or
mov
ds
lea
dec
inc
fmull
or
movsl
xchg
test
sbb
xchg
xchg
leave
mov
xor
les
or
xor
jo
sub
ret
inc
dec
frstor
dec
pop
mov
dec
int
push
push
cmp
jle
inc
arpl
test
inc
jnp
aam
dec
cmp
cli
mov
pop
jno
sub
pop
call
aad
scas
jle
pop
mov
in
pop
adc
in
mov
sub
loope
ljmp
fidivrs
xor
pop
push
adc
mov
inc
inc
stos
out
data16
or
mov
ja
movsl
cmpsl
inc
cmpsl
push
outsl
lds
loopne
stos
leave
and
subb
jnp
pop
push
mov
fmulp
cwtl
int3
sub
and
mov
mov
mov
lret
sahf
cmpsb
cltd
pop
shlb
imul
loope
xor
movl
or
shr
mov
subl
mov
mov
addl
mov
adcl
shrd
shr
mov
cmpl
not
mov
movl
mov
jmp
mov
mov
jb
pushl
pushl
pushl
pushl
push
pushl
call
or
adcl
movl
sub
and
subl
subl
mov
mov
xor
xor
adcl
or
adcl
shl
add
add
add
mov
mov
adc
mov
and
shrd
cmpl
movl
not
mov
mov
jmp
movl
movl
jge
pushl
pushl
push
pushl
push
push
call
sbb
add
or
or
xor
or
add
mov
movl
cmpl
mov
movl
mov
jmp
movl
movl
jg
push
push
pushl
call
add
sbbl
mov
adc
mov
xor
mov
addl
sub
shr
movl
mov
or
mov
addl
xor
shl
cmpl
movl
mov
not
jmp
movl
ja
pushl
push
push
push
call
xorl
xor
incl
xorl
subl
sub
xor
mov
sub
or
cmpl
mov
mov
movl
jmp
mov
jl
push
call
addl
adc
xor
neg
mov
mov
add
sbb
and
mov
movl
mov
and
mov
movl
mov
add
movl
mov
mov
adc
jmp
ret
mov
dec
rcrl
js
out
ja
insb
adc
repz
push
lea
mov
push
stc
push
and
sbbb
push
addr16
sub
js
cmp
in
out
cmc
fistpl
outsl
testl
cmp
lea
dec
movsl
inc
pusha
cmp
adc
pusha
rcl
shll
bound
xchg
insb
sbb
or
xor
aad
fists
into
ljmp
xchg
mov
add
xor
push
mov
add
enter
and
adc
jmp
inc
out
outsb
inc
aas
jo
ds
nop
adc
sahf
mov
stc
insl
rcr
repnz
dec
aaa
jno
mov
int3
pop
inc
pop
idivl
jmp
aad
inc
lea
mov
jmp
and
lahf
jne,pt
push
imul
in
sbb
ja
nop
sbb
xchg
mov
test
int3
test
push
int3
mov
dec
sbb
mov
push
outsb
gs
testb
mov
xchg
daa
aaa
cmpsl
mov
xchg
add
jl
ss
stos
lret
rol
push
and
dec
xchg
pop
xchg
xor
pop
je
jbe
add
js
mov
xchg
mov
jmp
ss
xor
jno
push
add
pop
call
or
loop
sub
xor
daa
aas
mov
push
xor
mov
dec
or
dec
or
js
pop
adc
fsubrp
sbb
mov
imul
cmpsb
mov
jo
mov
mov
pop
sti
loopne
add
dec
in
mov
mov
or
sahf
mov
xchg
adc
or
or
and
ja
pusha
dec
lds
scas
pusha
daa
js
enter
mov
and
popf
lret
and
stos
mov
test
mov
inc
outsl
rorl
pop
mov
and
int3
ss
push
or
das
fs
sbb
loopne
subl
pusha
fisubs
arpl
fstp
sti
pop
pop
add
dec
adc
sub
test
mov
gs
add
and
or
cmp
cmpsl
xchg
repz
adc
mov
stc
in
add
jnp
das
pushf
jmp
or
adc
scas
and
sbb
in
cmpsb
jle
inc
or
or
fcoms
sarl
movsl
aad
lea
jae
push
push
loopne
sbb
ja
or
enter
mov
mov
dec
sbb
in
repnz
jnp
movsl
cltd
jmp
lahf
call
cmpsb
xor
arpl
mov
mov
mov
rcrb
out
mov
jae
or
popf
rcll
rolb
icebp
and
bound
jmp
pop
lods
ret
mov
jp
iret
add
out
push
repnz
inc
mov
sub
test
sarl
test
imul
sub
fidivrl
xor
jne
insl
jnp
push
cs
push
pop
lcall
loope
aad
repnz
pop
cltd
mov
mov
jmp
push
nop
xor
xchg
pop
pop
jecxz
cmp
dec
int
mov
or
add
lret
subb
add
adc
xor
jnp
mov
or
fidivrl
and
mov
push
pop
inc
test
pushf
adc
lret
in
push
cli
movsb
out
mov
lods
dec
dec
fcom
cmp
loope
fnstcw
push
sub
mov
cli
fucom
lods
jo
mov
je
push
sbb
ljmp
out
mov
mov
rolb
cmc
loop
dec
mov
sbb
cmc
lods
push
dec
ss
lret
aad
rcll
dec
inc
cmpsb
dec
out
dec
xchg
sbbb
repnz
mov
inc
je
cmp
add
adc
movsb
jne
xor
sub
popf
test
fdivrs
imul
adc
pop
jo
xor
pop
and
icebp
xlat
jle
add
push
lcall
clc
adc
push
aas
mov
cmp
loop
arpl
loope
lock
loop
and
sub
pop
mov
dec
stc
ds
fbld
push
jbe
loope
and
repz
test
addb
lds
inc
sbb
popf
mov
mov
pushl
pop
cmp
jg
jns
shr
and
xor
lds
sbb
push
cmpsb
out
shrl
addr16
lret
dec
int3
sbb
xlat
mov
cmp
push
add
out
loop
aaa
fisubrl
xchg
je
enter
pop
xor
mov
shlb
push
orl
stos
ss
sti
out
lods
call
sub
sub
arpl
sbb
push
ret
mov
mov
pop
adc
jbe
fs
mov
dec
leave
mov
xlat
rcrl
sub
mov
out
fsub
rol
hlt
cmp
nopl
cmp
mov
loop
loopne
adc
cmp
outsb
fs
ds
fidivs
fcoms
mov
or
ret
push
mov
sbb
loope
lret
loop
popa
int3
enter
mov
icebp
aam
int
stos
jbe
jbe
aaa
add
xor
lds
loopne
xchg
dec
sub
fiaddl
sbbl
out
adc
adcb
shrb
ss
dec
jno
int3
mov
inc
pop
jb
inc
int
push
pop
repz
jle
lahf
push
mov
in
negb
inc
jae
sbb
in
xchg
sbb
cltd
sub
ret
lahf
mov
xchg
jmp
pop
push
push
xlat
or
mov
jbe
lds
je
popf
aaa
dec
pop
shlb
lcall
push
movsb
loope
push
sbb
inc
sbb
clc
jle
inc
sub
mov
movsb
call
cltd
xlat
add
mov
xlat
inc
and
cmp
xor
xchg
adc
jo
aad
xchg
shrb
cld
and
sbb
aas
jae
movsb
mov
xchg
lcall
mov
stos
fcomip
ficoml
jl
imul
sbb
popf
incl
loop
pop
imul
adc
sbb
mov
add
inc
push
or
mov
and
int
and
lea
sahf
push
cmpb
mov
pusha
jmp
fwait
ret
idivb
cwtl
out
pop
fmuls
jecxz
pop
xor
xchg
je
adc
aad
push
mov
or
lret
cli
loope
dec
jle
inc
pop
dec
pop
ss
stos
imul
mov
cmp
xchg
movsl
leave
cmpsb
cmp
mov
inc
hlt
movl
jmp
lods
jp
scas
adc
xchg
mov
pop
fisttpl
ja
cld
push
push
adc
and
pop
fwait
mov
pop
jns
gs
mov
int
mov
in
mov
cmp
mov
fistpl
sti
scas
sahf
push
out
data16
and
jg
out
mov
inc
mov
mov
in
add
push
into
test
xchg
mov
lds
inc
movsb
xor
mov
inc
cltd
push
test
into
mov
inc
jne
js
jl
out
pop
dec
push
leave
xchg
sbb
icebp
hlt
std
jb
fstps
leave
pop
push
sub
lret
das
test
xchg
outsl
sar
rcrb
je
pop
shl
lcall
or
aas
cli
push
lahf
adc
xchg
repz
xchg
cmp
fmuls
pop
test
das
cmpsl
or
hlt
inc
or
repz
rcr
decl
mov
pop
cltd
xor
cmp
and
pop
stc
pop
pop
sbbb
insb
shlb
jmp
sub
addb
pop
xchg
jecxz
or
pop
inc
xchg
lds
ret
into
lret
fsubp
test
test
cld
loop
cmc
mov
scas
mov
subb
mov
mov
insb
mov
xlat
fcompl
jne
jl
mov
sub
addr16
dec
dec
push
gs
fisubl
je
shlb
jb
jb
sub
or
cmp
pop
imul
cmp
out
inc
mov
mov
outsl
stc
mov
xchg
add
test
cmc
pop
ret
cmp
cmpsl
push
dec
xchg
xor
pushf
int
xchg
mov
in
push
adc
cmp
push
pop
jmp
pusha
add
sub
mov
xor
shlb
xor
cs
test
adc
das
jns
sbb
dec
shr
outsb
add
jo
sahf
xor
push
cmp
leave
sbb
in
pop
dec
test
mov
pop
mov
stc
loopne
sub
sbb
adc
leave
mov
inc
mov
sub
cmp
gs
test
and
sub
cs
inc
mov
and
sbb
xchg
daa
mov
in
test
aad
add
inc
jne
dec
pop
test
inc
mov
jns
fdivl
sar
cmp
sti
mov
dec
cmp
rorl
lahf
mov
cmp
cmp
roll
mov
jb
insb
rcrb
movd
pop
mov
cwtl
xchg
xchg
and
in
mov
mov
mov
inc
xchg
pushf
hlt
mov
hlt
push
mov
ja
test
negb
cld
push
aad
mov
lods
insb
lcall
cltd
pop
rclb
push
in
out
mov
mov
dec
or
dec
or
test
mov
in
ucomiss
sub
jno,pt
mov
lret
or
std
es
inc
in
imul
jp
cltd
inc
push
sbbb
movsb
xorl
daa
les
adc
sub
sahf
jecxz
cli
jmp
icebp
rcrl
or
out
inc
inc
popf
cmp
mov
add
push
flds
lahf
xchg
cmc
aad
je
iret
jo
out
ret
mov
imul
inc
pusha
test
dec
out
cmp
mov
inc
jmp
repz
pop
xor
subl
add
adc
popf
jnp
mov
xor
add
pop
dec
pop
cmp
dec
xchg
adc
dec
xchg
notl
push
cltd
addr16
xchg
pop
fdivs
mov
cld
call
push
or
testl
es
mov
mov
sbb
xor
xor
shlb
pop
call
rdtsc
mov
test
addb
aaa
iret
push
fcoml
repz
aad
pop
lea
inc
lcall
pop
shll
xor
sti
xor
shl
addl
mov
dec
pop
int3
jecxz
out
mov
fdivr
fwait
insl
xor
mov
mov
cwtl
push
das
arpl
dec
push
push
mov
jge
push
es
xchg
fildll
jp
mov
pop
jge
mov
and
rcl
mov
clc
mov
lods
xchg
and
lock
mov
out
daa
xor
add
and
push
shlb
fcmovnb
sub
sbb
jmp
dec
mov
xchg
or
aam
dec
dec
xchg
pop
jno
es
ds
fmul
sbb
or
mov
cmpsl
leave
and
cmpsb
lea
mov
mul
mov
or
sub
sbb
cmp
in
ljmp
je
cmpsl
cmpsl
fwait
pop
jmp
sub
and
mov
mov
aad
push
push
js
mov
test
lods
ja
ret
inc
into
outsb
insb
push
imulb
and
mov
dec
popf
jmp
xor
and
hlt
xchg
lcall
push
ret
stc
int3
sub
push
jae
mov
xor
dec
dec
or
sub
cmpsb
inc
adc
push
mov
or
rclb
mov
popa
push
sub
jge
and
push
sti
test
mov
pop
adc
rol
notl
xor
xor
std
mov
sbb
imul
nop
jmp
ret
sti
sti
xchg
lahf
icebp
cmpsb
sbb
mov
loope
lcall
es
mov
mov
push
repnz
roll
cmp
jbe
add
mov
mov
push
out
iret
push
mov
push
adc
insb
jne
mov
or
scas
stc
rcl
icebp
adc
or
xchg
cld
ficoms
std
or
mov
push
adc
cmp
push
fstps
dec
mov
ja
outsl
out
adc
dec
fsubs
pop
decl
add
mov
xlat
or
jle
xchg
outsl
lods
sti
jl
jmp
mov
sub
cmc
adc
cmp
lds
pop
sahf
inc
dec
stc
push
and
inc
das
in
sub
push
mov
dec
js
push
repz
lods
popl
insb
or
pop
cli
or
rol
sub
rorl
mov
adc
rorb
adc
push
nop
sub
dec
mov
in
mov
inc
pop
push
lods
inc
pop
mov
xor
divb
aam
xlat
pop
test
mov
sbb
pusha
ret
addl
and
imul
push
sub
lods
mov
popa
in
xor
mov
sub
sahf
cld
dec
lods
call
xor
sar
addr16
sub
jecxz
dec
xor
test
mov
lock
dec
xor
iret
mov
sahf
and
je,pt
push
iret
ficompl
cmp
sub
inc
fstl
js
xchg
jge
inc
push
jae
adc
out
mov
push
leave
dec
mov
rol
jo
sqrtps
inc
movsb
mov
mov
shrd
jmp
add
dec
push
adc
call
mov
scas
lret
ja
jecxz
xchg
push
xlat
das
and
stos
shll
cmpsb
sub
rcrb
cmp
enter
mov
mov
xor
aaa
out
mov
cld
jbe
or
leave
inc
pop
int3
adc
sarb
cs
pop
mov
scas
dec
jp
mov
insl
in
or
push
sbb
mov
subl
push
add
int
xchg
sbb
mov
dec
mov
pop
inc
leave
fwait
rorl
xor
add
pop
stc
add
xor
xchg
push
pop
pop
outsb
and
shlb
dec
lds
loopne
push
lret
shl
fwait
inc
mov
sbb
sbb
fnstcw
xchg
and
stos
jae
push
imul
mov
rorl
pushf
mov
pop
cmp
es
mov
hlt
xchg
fadds
imul
bound
inc
lcall
popa
jbe
inc
xchg
fs
neg
fwait
xchg
das
mov
cmpsb
fcmovu
in
inc
dec
add
fisttps
xor
aam
loopne
mov
lods
dec
andl
pop
repnz
xchg
jne
mov
in
outsl
adc
or
xchg
pop
les
push
sub
cmpsl
les
jp
lahf
stc
and
mov
dec
xchg
jge,pt
pop
xchg
pushf
mov
cmp
xor
push
fists
out
sbb
and
and
jae
dec
jp
movsb
jecxz
xlat
iret
mov
mov
xchg
and
test
add
add
or
mov
lret
inc
sub
fwait
aas
mov
xchg
push
outsl
push
adc
xor
in
jo
fdivrs
into
insl
inc
js
xor
xchg
pop
xchg
int3
inc
pop
xchg
pop
xor
insl
loope
pop
test
push
stos
clc
repz
sub
loopne
hlt
or
fs
popf
xchg
pop
fsubs
call
cs
or
xchg
aaa
fs
mov
adc
lret
in
jae
test
insb
sbb
sar
sub
mov
roll
xchg
jnp
in
lds
push
adc
and
sbb
adc
add
xlat
ja
lds
dec
pop
sub
mov
mov
jnp
shl
mov
jge
push
xchg
mov
pop
dec
int
sarl
nop
push
adc
pop
jo
sub
in
shlb
ja,pn
or
and
pop
shrl
sub
adc
mov
push
cmpsl
rcll
xchg
cwtl
ss
insb
xor
sub
pusha
repz
es
shlb
cmc
in
mov
test
loop
negl
pop
stos
mov
scas
int3
lds
adcb
push
ja
jp
fsubp
sbb
imul
cmp
cmp
cmp
incl
idivl
pop
cmpsl
pop
lock
sbb
cmp
and
pop
test
cmp
orb
xor
add
outsb
xchg
mov
xor
imul
mov
and
rorl
sub
xchg
adc
icebp
jecxz
xchg
adc
das
add
dec
insb
sbb
cmp
js
push
xor
pop
jp
das
adc
sbb
jne
xor
xor
add
and
inc
jl
lods
movl
mov
dec
inc
ret
push
out
roll
dec
test
xchg
rorb
sbb
add
xchg
jae
sbb
mov
neg
mov
je
addr16
sub
insb
les
rcrb
pop
mul
pushf
clc
cs
sub
icebp
push
test
pop
fldl
hlt
jp
mov
test
jecxz
fs
sub
xchg
jae
push
test
cmpsb
out
rcll
inc
push
cmp
icebp
mov
repnz
and
scas
insl
cmp
ljmp
xor
aaa
mov
mov
pop
sbb
ja
mov
or
scas
sbb
mov
test
std
mov
mov
leave
dec
mov
mov
mov
push
cmpb
enter
mov
stos
in
inc
in
rclb
sbb
shlb
push
adc
outsl
xchg
pusha
xchg
fcmovb
nop
lret
adc
in
addl
in
or
adc
xchg
mov
std
sbb
sar
inc
add
call
inc
gs
adc
inc
adc
insb
in
daa
sbb
and
das
pop
inc
lahf
xchg
fldenv
push
loop
test
sub
xorb
mov
adc
adc
out
dec
fsubp
fdivp
pop
add
dec
pop
movsb
xor
add
adc
inc
sbb
or
adc
into
testl
mov
ret
fisttps
dec
shll
aas
mov
pusha
cmpsb
pop
cmp
or
dec
retw
outsl
ret
xchg
xor
xchg
xor
jp
aam
cld
push
mull
call
shl
adc
lock
and
cmp
in
repz
xor
popf
jg
movsb
pop
inc
inc
jne
fisttps
add
mov
mov
add
daa
lret
jmp
imul
aam
repz
mov
repz
scas
dec
leave
pushf
into
loopne
dec
lcall
xchg
cmp
xor
cmpb
scas
fcmovu
in
adc
aas
xor
test
mov
or
pop
add
or
out
jl
and
insb
pop
mov
stc
mov
das
mov
xor
imul
repz
xchg
psrlq
dec
mov
jnp
fdivl
imul
movsl
fdivl
or
mov
dec
popa
insb
mov
repnz
cltd
sbb
data16
shlb
icebp
in
cmp
aas
jl
xor
outsl
pop
add
jmp
fiadds
enter
mov
xchg
int
mov
xor
dec
xor
leave
add
push
mov
mov
int3
push
push
addb
imul
cwtl
jae
xchg
test
inc
loop
cmp
dec
sbb
mov
fdivs
dec
mov
rcrl
mov
lods
cmp
scas
adc
pusha
add
out
cltd
or
or
scas
sbb
mov
lret
jb
xchg
xchg
imul
add
stc
sub
hlt
fnstenv
out
add
sub
movsb
and
sbb
fsubs
pop
adc
mov
and
dec
sbb
push
dec
lods
fiadds
loop
iret
nop
hlt
or
inc
repnz
imul
dec
das
sub
test
xchg
cmc
pop
push
in
mov
push
mov
dec
fiadds
js
shlb
addr16
inc
dec
inc
mov
das
int
or
aas
sahf
and
mov
or
lcall
add
add
cmp
and
jbe
dec
neg
inc
add
movsb
and
sub
inc
mov
aad
sbb
jmp
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
jmp
in
in
data16
push
sbb
xchg
loopne
sub
pfrsqrt
mov
mov
faddl
sbb
sbb
lret
ljmp
dec
or
or
mov
or
add
outsl
xchg
xlat
jb
sbb
outsb
add
pop
mov
sar
addr16
insl
pop
jl
xchg
lret
shrl
fldt
out
dec
lret
adc
push
jge
jne
test
loop
push
jge
es
xchg
push
xor
fwait
mov
mov
xlat
iret
and
cmp
sbb
cld
les
nop
movsl
es
dec
xchg
jns
cmpl
repnz
inc
retw
fnstenv
lret
mov
subl
loopne
sbb
iret
inc
or
dec
and
fdivl
jb
mov
pop
sbb
shr
inc
mov
ficomps
enter
mov
dec
sbb
ficomps
sub
sbb
jp
and
popf
rorb
nop
and
shlb
dec
pop
nop
inc
lahf
sbb
adc
jge
shlb
pop
test
loope
lret
cltd
dec
enter
das
aad
pop
lods
pop
mov
inc
outsb
mov
ss
dec
ret
in
out
sub
in
lds
pop
sbb
sub
cmp
push
sarb
cmpsb
aaa
dec
cmp
aam
dec
mov
out
push
and
pop
cmp
mov
testl
adc
stc
jns
mov
fistps
mov
popa
fucom
and
mov
push
andl
push
repnz
xchg
imul
cmpsb
xchg
jge
gs
sbb
sbbb
sub
movsl
les
and
and
inc
loope
cmp
and
mov
lds
cld
cs
and
xchg
cmp
mul
cmpsb
mov
cmpsl
loop
mov
xchg
aaa
adc
adc
sub
hlt
inc
cli
adc
sbb
and
mov
repz
jle
imul
rol
inc
sahf
clc
sub
mov
cmpsb
icebp
in
pop
lcall
fidivrs
cmp
aaa
and
jg
stc
jle
clc
ja
adcl
test
mov
add
cmc
aam
outsb
test
dec
xchg
adc
mov
iret
out
pop
std
cmp
or
lods
or
inc
fwait
gs
inc
scas
cmp
scas
push
arpl
popf
xchg
xlat
adc
jmp
loope
jns
sahf
es
sarb
dec
ret
xlat
fwait
inc
ja
jne
jae
test
pop
add
pop
inc
leave
jnp
push
lea
cwtl
push
lret
push
add
hlt
shll
mov
nop
and
faddl
fstps
jl
arpl
in
imul
jge
es
pop
cmp
imul
clc
pusha
cmp
jno
and
pop
test
sbb
mov
xor
sub
jae
popf
pmaxub
dec
cmp
bound
stc
rcrl
mov
pop
xor
fdivrl
jnp
pop
test
in
scas
cmp
jno
pop
fbld
or
add
test
xor
test
jne
jecxz
call
loopne
push
dec
add
daa
fcomps
xchg
cmp
dec
fisttps
bound
aas
data16
mov
jo
lahf
das
pusha
or
add
icebp
mov
out
pop
inc
test
std
xchg
repz
xor
je
pop
cmpsb
or
ds
je
out
pop
popa
sub
jno
jno
das
loop
pop
push
inc
leave
cmp
test
out
xlat
or
popf
inc
inc
add
adc
imull
pop
mov
shl
dec
jmp
lahf
sbb
xor
pop
xchg
xor
cmp
jbe
and
push
xlat
das
pop
pop
stc
cmp
gs
fmul
push
addr16
jmp
rol
ljmp
push
dec
mov
inc
rolb
xchg
xor
cmp
add
loope
cmpsl
clc
adc
aad
push
cld
int
mov
test
cmp
sub
daa
inc
cmp
jo
and
ljmp
push
loope
pop
enter
jns
adc
sarb
jmp
lds
pushf
and
adc
push
dec
mov
jne
stos
jno
loope
in
cmp
push
imul
or
or
jnp
mov
lds
cmp
outsb
loope
adc
mov
shll
cmp
sbb
jne
outsl
xchg
inc
out
xchg
xor
adc
dec
dec
jmp
nop
fmull
into
lahf
xor
xor
xor
sbb
insl
addr16
push
sbb
xor
scas
pop
inc
add
call
shlb
inc
xchg
or
or
aaa
jp
mov
shl
jmp
push
pop
test
lea
lock
ret
aaa
jecxz
adc
in
dec
hlt
lahf
push
mov
or
sub
lret
xor
mov
fidivl
mov
push
push
jl
sbb
in
xor
push
mov
inc
mov
dec
xor
push
adc
cwtl
movsl
xchg
push
mov
popf
mov
xor
mov
in
mov
add
mov
inc
call
fistpl
and
hlt
ret
dec
movsb
push
xchg
ss
and
icebp
xchg
push
rcr
push
test
cmp
xor
or
shll
xorb
idivb
xchg
dec
cmp
jp
xor
pop
out
and
and
sti
mov
mov
push
adc
fstp
sar
addb
inc
das
loopne
lahf
loope
inc
sti
in
cmpsb
arpl
stc
or
pop
enter
das
cwtl
aad
insb
sub
ficoml
adc
ficoml
icebp
lods
xchg
xchg
pop
test
mov
xchg
sahf
xor
rorl
sub
sbb
nop
sub
dec
dec
cmp
xchg
orb
mov
outsb
dec
dec
adc
out
mov
in
dec
sbb
ret
dec
mov
or
aad
sub
ja
clc
xchg
shr
aas
cld
lea
sbb
aaa
lcall
mov
mov
data16
int
or
idivl
adc
in
hlt
mov
aas
cmp
lea
lret
adc
ljmp
mov
sub
push
test
adc
xor
and
dec
psrlq
int
js
cmp
jmp
jbe
ss
cs
mov
int
push
shll
jno
addr16
xlat
shll
imul
test
dec
call
dec
or
sbb
lcall
dec
xchg
out
imul
mov
xchg
or
mov
jg
push
dec
sarl
jmp
or
leave
push
or
xor
pop
dec
das
and
gs
push
mov
into
dec
dec
dec
sub
cmc
fistl
ljmp
mov
push
aam
loope
mov
xor
xor
or
mov
mov
xor
jmp
outsb
hlt
xorl
aam
mov
ja
mull
mov
inc
xor
ret
cld
fdiv
pop
dec
lea
jmp
fmulp
in
mov
insl
inc
fs
adc
sbb
push
inc
out
push
out
stc
test
out
movsl
movsl
mov
lret
hlt
mov
insb
adc
lahf
sub
cmp
aad
pop
arpl
pop
daa
adc
push
lcall
jb
inc
fs
lock
push
sti
loopne
in
or
pop
jns
popa
sbb
and
mov
shl
stos
adc
in
xchg
jl
or
and
sub
lcall
jg
or
ret
mov
sbb
andb
pop
js
test
pop
call
dec
sarb
dec
fsubl
dec
add
and
cmpsl
mov
and
jo
dec
jne
xchg
or
int
negl
mov
push
out
fyl2xp1
add
and
adcb
push
lock
das
int
cwtl
outsl
loopne
adc
cli
adc
or
test
insl
mov
sbb
pop
out
or
incb
mov
fnsave
cmp
jnp
les
enter
rolb
or
push
sub
mov
add
faddl
lods
ss
imul
pop
je
call
movsb
nop
sub
push
pop
sbb
imul
mov
fiadds
xchg
jge
imul
pop
inc
xor
jb
adc
xchg
and
pusha
es
les
mov
cmp
sbb
loope
clc
jmp
jns
int3
jns
inc
orl
mov
aad
aas
push
dec
inc
mov
daa
adc
mov
cmc
adc
lret
push
jle
mov
aam
push
fstpl
pop
lcall
repnz
popa
jne
fmulp
stos
inc
sub
dec
xchg
inc
imul
jne
pop
adc
enter
mov
dec
mov
cmp
lods
cwtl
ret
or
jnp
rcrl
inc
jle
into
les
jbe,pt
inc
pushf
stc
mov
inc
mov
movsl
dec
xor
xor
pop
lds
dec
ja
push
ja
xchg
mov
jbe
movsb
jb
jnp
mov
add
repz
xchg
movsl
push
or
test
hlt
adc
sbb
loopne
mov
gs
aas
lds
mov
xchg
cld
push
inc
clc
jle
inc
push
in
call
bound
in
imul
popa
outsb
xchg
xchg
or
test
jnp
push
mov
sbb
sbb
aam
dec
sbb
mov
sub
repz
outsl
aam
push
push
clc
sarl
push
sub
add
dec
sbb
and
out
jae
jno
repz
and
in
lahf
loopne
sub
out
jp
mov
ret
xchg
jp
xchg
bnd
adc
rolb
in
sbb
pop
in
test
loopne
test
out
xor
insb
jp
mov
test
xchg
fdivs
pop
test
loop
push
das
shll
xchg
xor
sub
popf
stos
mov
shll
dec
lret
mov
add
inc
idivl
sub
cmp
enter
sbb
pop
aas
mov
call
dec
xchg
inc
lahf
fwait
mov
mov
movsb
xchg
fldenv
dec
fsts
iret
aas
pushf
mov
cmp
inc
fwait
mov
data16
repz
xor
push
mov
cs
mov
dec
sub
jmp
testl
mov
mov
popa
xor
pop
or
popa
nop
pusha
pushf
add
cwtl
repz
pop
outsb
out
pusha
dec
stc
adc
test
adc
xchg
out
js
adc
pop
out
hlt
push
xchg
adc
mov
pop
pop
and
stc
inc
idivl
push
jo
add
lahf
repz
dec
jge
mov
lock
imul
or
sbbb
out
and
iret
lcall
jmp
sti
xchg
mov
pop
cmpl
sub
jecxz
dec
popf
sarl
mov
cmpsl
out
xchg
pop
inc
cmpl
cmp
mov
lahf
in
out
mov
pop
jno
mov
jmp
jle
and
hlt
out
xor
rolb
add
sub
adc
scas
sbbb
adc
stos
jp
xor
adc
or
inc
xor
sti
xchg
arpl
mov
mov
xchg
jb
je
test
inc
fwait
outsl
fwait
mov
flds
add
and
push
or
ret
push
mov
inc
mov
push
clc
enter
xchg
mov
or
in
adc
mov
stos
mov
adc
outsb
mov
lea
lock
out
or
movsl
shll
add
stc
das
fimull
cmp
imul
push
iret
jle
ds
clc
adcb
mov
iret
mov
cmp
mov
mov
test
cli
and
fyl2x
fdivrp
andl
outsl
test
mov
sub
lock
or
pop
js
pop
fists
xor
leave
jmp
into
xor
and
aad
mov
ret
inc
enter
mov
pop
inc
das
pop
mov
les
jg
xchg
sbb
push
or
insl
out
pop
aam
cmpb
test
add
mov
mov
aas
dec
push
ljmp
or
mov
js
mov
pop
imul
jns
jbe
data16
mov
mov
insl
cmp
adc
ret
lock
or
sub
pop
lcall
repnz
dec
insb
in
pop
iret
aas
dec
xchg
enter
or
and
or
mov
jmp
mov
lcall
or
popa
imul
sti
in
mov
rcr
icebp
orl
out
jecxz
dec
sti
and
hlt
inc
adc
or
jbe
insb
aas
pop
jae
scas
fucom
mov
mov
xchg
rcl
js
xlat
fstpl
xchg
lods
ds
dec
xchg
sub
punpckhdq
out
cmovnp
aad
stos
jmp
mov
repz
idivb
xlat
or
sub
push
push
rep
pop
outsl
insl
sarb
mov
cmp
pop
in
test
data16
orb
xchg
push
pop
and
outsl
idiv
and
int
movsl
jecxz
orl
rorl
ljmp
mov
dec
push
popa
and
repz
dec
iret
dec
sar
mov
jo
mov
xor
daa
jle
roll
inc
loopne
dec
in
lods
enter
add
in
mov
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
jmp
add
mov
inc
cmpsl
es
aaa
mov
ja
iret
negb
xchg
orl
dec
in
sub
mov
arpl
sbb
push
insl
or
mov
inc
or
les
icebp
loop
push
lock
mov
inc
sbb
mov
out
into
xchg
nop
lods
pop
sti
mov
xor
dec
cs
xchg
xorl
int3
xchg
jnp
mov
push
inc
mov
mov
daa
xchg
lea
out
cmp
xchg
and
nop
pop
je
mov
push
iret
lds
pop
mov
ds
cli
jne
xchg
push
mov
aam
loopne
jp
andb
arpl
xchg
dec
and
dec
or
pop
jae
xchg
lcall
mov
aad
aad
lea
sub
andl
pop
scas
or
and
mov
movsl
sub
shlb
cmpps
sub
pop
mov
lret
push
jecxz
in
mov
or
aad
pop
adc
mov
xchg
xor
jno
or
out
and
add
das
push
xlat
roll
arpl
mov
arpl
repnz
sub
loop
dec
in
cli
jb
jl
cmp
lret
dec
xchg
xor
jo
or
mov
sub
jl
mov
push
adc
sub
pop
xor
fidivs
cmp
clc
pop
or
add
sahf
clc
cmpb
mov
shlb
frstor
cld
push
roll
or
mov
lahf
and
insb
adc
pusha
mov
jg
xor
movsl
push
ret
xor
cwtl
lret
fistps
jb
mov
scas
faddl
xor
xor
in
and
sbb
or
pusha
inc
add
lcall
movsl
mov
pop
es
int
stos
or
pop
xchg
mov
fdivrl
mov
fisubl
sub
pop
jno
jno
stos
cmp
std
cmp
add
arpl
jae
fldcw
push
in
stos
aaa
loope
and
xchg
jo
push
sbb
testb
addr16
sbb
sub
int
movsb
cmpsb
or
jmp
bsf
arpl
repnz
inc
andl
dec
pop
scas
jno
mov
cmp
jns
pop
sbb
mov
inc
cld
loop
cmp
pop
addr16
call
movsl
data16
cld
jge
mov
test
jp
stos
aam
xchg
sub
in
addb
aaa
sarb
mov
aam
dec
pop
dec
dec
ret
inc
pop
shl
pop
sub
in
cmp
mov
stos
movsb
mov
aad
mov
decb
out
jbe
sbb
inc
fnsave
ret
lds
xchg
aas
xchg
lock
and
lds
lds
pop
jb
mov
cmp
or
divb
sub
scas
pop
xchg
testl
pop
je
rcll
mov
dec
mov
scas
repz
mov
add
inc
mov
or
outsl
rcll
jmp
mov
and
mov
push
fs
sahf
mov
mov
das
mov
dec
sbb
fdivl
xlat
cmp
or
xlat
lods
leave
roll
int3
adc
outsl
int3
and
sbb
nop
jg
call
clc
push
imul
pop
xchg
fs
mov
and
pop
adc
xor
insb
repnz
jo
sbb
mov
fcoml
sbbl
mov
cmpsw
adc
mov
xor
or
fs
push
cmpsb
xchg
sub
mov
fsubl
scas
insl
lock
adc
dec
pop
mov
dec
jb
int3
cwtl
pop
mov
dec
ljmp
jno
ljmp
jp
cmp
pop
jge
ja
jmp
cwtl
lods
imul
jge
pusha
ljmp
cmpsl
outsb
movsb
or
aad
dec
loop
pop
xchg
pop
outsb
cmp
loop
rolb
adc
push
sub
cmpsb
movsb
hlt
jg
dec
into
mov
sub
cmp
and
je
outsb
adc
bound
sub
dec
sbb
jae
pop
mov
dec
jg
loope
fsubrs
pop
jae
jns
xchg
xchg
lds
aaa
jle
jp
sbb
out
pushf
sbb
lds
in
and
ss
inc
lods
mul
iret
xchg
jne
insb
jp
dec
mov
pop
xor
int
gs
inc
and
daa
loop
bound
pusha
scas
xor
cmp
ret
idivl
jne
popf
js
jnp
shll
in
je
cmpl
scas
js
fs
imul
repnz
ljmp
and
push
mov
sub
imul
inc
loop
cmp
sbb
hlt
fstpt
mov
in
lods
push
sub
adc
cmp
loop
mov
call
divb
in
imul
push
lods
std
mov
jno
sub
and
mov
mov
sbb
add
imul
hlt
insb
or
scas
sub
cwtl
cwtl
adc
pop
xchg
push
popf
outsl
mov
ljmp
mov
inc
fcoms
cmp
testb
sarb
sub
mov
or
fucomp
or
popf
shlb
insb
mov
sbb
push
jno
add
adc
mov
sub
cwtl
clc
mov
orb
fdivs
mov
aaa
or
sub
outsl
jge
cmp
or
cmp
inc
mov
mov
loope
stos
subb
andb
clc
mov
jno
mov
inc
testl
cld
fs
mov
insb
movsb
pop
mov
jns
icebp
fsubrs
mov
imul
mov
push
mov
sti
pop
cld
movsl
jge
loopne
adcb
jg
pusha
fistpl
adc
or
rcr
sbb
in
out
js
mov
push
sbb
cmp
cli
mov
hlt
sbbl
mov
subl
in
xchg
cli
dec
aad
rorb
push
mov
sub
adc
dec
jge
cltd
inc
test
sbb
sbb
popf
pop
dec
movsl
lods
cmp
rcr
or
jmp
xchg
aam
xchg
lds
sbb
cmp
xchg
push
inc
movsb
push
movsb
pop
mov
inc
iret
inc
pushf
push
jnp
xor
mov
jnp
mov
test
mov
jl
mov
xlat
cli
and
repnz
sbb
xchg
jns
sub
cmpsb
inc
dec
cs
in
push
pop
add
pop
ds
xchg
movsl
int
insl
call
aas
fwait
xchg
jae
insl
or
cmc
pop
dec
int
bound
jo
daa
ret
movnti
pop
mov
and
sbb
mov
outsb
and
enter
add
hlt
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
jmp
orl
push
cmpb
push
repnz
xchg
shlb
insb
or
cmpl
orl
shr
xor
cli
fadds
pusha
lret
pop
jg
sbb
push
dec
pop
inc
faddl
out
stos
bound
cmc
shrl
aas
or
xchg
in
add
repz
fadds
mov
mov
sub
cs
outsb
scas
shrl
or
andb
in
inc
dec
daa
xor
mov
adc
push
sbb
adc
mov
hlt
mov
pop
push
sub
stos
cmpsb
jbe
jbe
add
into
icebp
sbb
subb
push
out
stc
pop
fcoml
fldl
sub
imul
lock
jge
push
addr16
popf
xor
add
stos
loope
adc
ja
adc
sbb
mov
fnstenv
or
or
imul
imul
or
cmc
lret
adc
out
clc
pop
scas
rorl
int
jno
cmp
enter
fidivs
enter
std
pusha
jmp
out
pop
fnsave
adc
fwait
mov
js
pop
fmuls
and
ret
mov
mov
test
lahf
inc
lods
movsb
jle
and
cltd
pop
ljmp
stc
inc
sub
out
vmwrite
shl
fbstp
jecxz
popa
movb
dec
inc
push
out
and
push
push
adc
mov
mov
lret
pushl
adc
aam
and
lret
or
push
fcomps
outsb
xchg
add
outsb
rclb
xchg
cs
push
dec
jmp
fistpl
xchg
lods
cli
ficomps
faddl
cmp
repnz
or
popa
xlat
lret
call
cmc
push
rorl
mov
lods
mov
and
aaa
add
dec
ja
pop
pop
ds
mov
xchg
mov
leave
and
ja
mov
stos
divb
jmp
xor
invd
push
jecxz
adc
and
mov
leave
lret
add
inc
aam
hlt
cmp
pop
out
mov
push
rclb
dec
add
nop
pop
fadds
outsl
nop
fldt
jb
mov
or
and
fisubrl
testb
cmp
xor
adc
sahf
sarl
data16
enter
mov
test
jnp
bound
jp
rcrb
icebp
mov
aas
push
pop
jb
repz
adc
jnp
adc
mov
repnz
in
or
mov
hlt
lock
mov
jns
jmp
stmxcsr
pop
jne
sub
pop
mov
mov
aam
adc
out
pop
jns
popf
scas
mov
rcll
pop
mov
fidivs
test
je
stc
lret
lcall
mov
pop
cmp
je
enter
fbld
js
sbb
xor
test
jmp
faddl
add
xor
jbe
push
sbb
pop
sub
test
dec
out
pusha
push
std
fs
lea
sbb
add
out
shll
or
adc
popa
in
sub
scas
fwait
mulb
imul
out
push
xorb
loop
addr16
mov
sub
pop
xor
negl
pop
sbb
push
mov
in
cmp
sub
pushf
or
dec
test
mull
insb
sub
pop
push
aas
sbb
movsl
pop
pop
out
mov
in
mov
insl
loop
mov
cmp
mov
sbb
dec
fistl
iret
jb
fwait
aaa
jg
jmp
adc
rcr
test
popa
lcall
sarl
dec
sbb
mov
add
adc
aam
cmp
push
adc
mov
jge
push
loope
inc
out
ja
lret
cmp
mov
dec
int3
push
lret
arpl
mov
cmc
xchg
mov
adc
out
std
jne
jnp
xchg
aaa
addl
xorl
leave
gs
and
shl
pop
mov
pop
xlat
push
push
inc
imulb
sub
scas
sub
pop
stos
popf
adcb
xchg
nop
and
ss
mov
dec
out
insb
pop
or
test
call
aam
inc
xor
push
dec
fs
fcmovnb
dec
inc
ja
sub
test
push
out
cmpsb
cs
inc
inc
or
shlb
clc
fs
insb
stc
fxch
cmp
push
in
sbb
stos
pop
xchg
dec
sub
enter
roll
and
pop
jge
add
xor
mov
lcall
je
mov
cwtl
iret
pushf
jns
ljmp
add
arpl
sub
lret
decb
notl
xchg
or
lds
repz
xor
mov
jecxz
pop
jbe
sbb
fmull
in
jp
std
pushf
push
or
xchg
imul
sahf
popa
addl
push
jnp
mov
push
imul
lods
mov
sahf
out
aaa
sub
mov
in
xchg
xor
lret
dec
sbb
lds
inc
xor
xchg
push
imul
fnstsw
cltd
lahf
mov
js
dec
fwait
ljmp
sbb
cmp
ret
dec
lahf
mov
pop
inc
lds
dec
pushl
loop
cmp
mov
inc
iret
cbtw
int3
xchg
in
cmpsb
pop
aam
cwtl
icebp
and
push
ja
insl
lea
test
insl
sbb
shl
addr16
popa
enter
lret
call
movsb
jo
inc
push
jbe
clc
jg
pop
stos
mov
pushf
pop
loop
mov
adc
mov
adc
into
push
add
mov
sbb
cmpsb
add
sbbl
ret
jmp
lahf
test
cmp
xchg
sub
insl
adc
mov
pop
push
dec
xchg
fistps
jo
popa
inc
push
sub
xlat
push
push
repz
jle
fsubl
popa
inc
dec
mov
cmp
out
cld
rcll
aas
jo
loop
xchg
popa
subl
mov
sbb
mov
ss
pop
mov
mov
xchg
cmpsb
pop
mov
jb
fisubs
mov
xchg
ficompl
decb
pushf
sbb
jne
das
lret
adc
pop
int3
jne
pop
mov
or
stc
pop
aaa
sbb
jp
adc
push
ds
rorl
push
lods
push
rorb
les
shll
in
xorl
sahf
dec
cmp
mov
imul
adc
mov
repz
das
in
mov
mov
inc
jbe
cmpl
iret
je
mov
in
jp
lods
fwait
sub
inc
adc
fisttpl
mov
mov
std
fmull
insb
pop
aaa
push
pop
fldln2
jl
les
cmp
xchg
hlt
imul
rcll
fstl
adc
in
add
stos
jne
inc
popa
fistps
pop
es
jo
loop
stc
dec
cmp
add
cmp
push
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
jmp
mov
and
setns
dec
cld
out
xchg
ja
push
ror
imull
and
roll
into
add
out
jb
rcll
ds
push
mov
jmp
aad
insb
nop
int3
in
or
mov
jg
cli
stos
and
insl
inc
lea
push
xchg
and
jns
jmp
and
push
cmp
push
loopne
lds
lods
les
add
xchg
mov
add
lock
add
xchg
iret
push
push
pop
inc
pop
xchg
inc
fcmovu
rcr
push
js
lret
push
insl
loope
mov
in
icebp
xchg
xor
xchg
jp
jmp
leave
jbe
or
dec
xchg
cmpb
fs
enter
or
test
jae
mov
mov
and
cmpsb
xor
out
push
lret
ficomps
mov
filds
dec
push
cmpb
fwait
mov
lods
or
test
and
aas
pop
je
mov
jns
into
fwait
je
push
jns
cmp
addr16
addl
jl
lods
or
cltd
pop
xlat
fwait
dec
popf
cmp
jle
jp
in
mov
icebp
daa
outsl
mov
pop
out
leave
nop
sar
jns
xor
sub
push
pop
scas
jne
xchg
inc
int3
lret
xlat
dec
pop
inc
mov
imul
fldl2t
call
push
pop
cmp
push
mov
or
sub
sub
movsb
pop
or
loope
loope
jb
mov
mov
out
je
push
call
fdivr
in
xor
sub
mov
jb
dec
mov
js
lcall
push
fldenv
dec
pop
adc
das
rcrb
cmp
popf
mov
xor
sbb
xor
pushf
scas
movsl
inc
inc
adc
cmpsl
jb
cwtl
addl
scas
ss
and
mov
bound
out
add
sub
ret
jecxz
cmp
xor
or
mov
xchg
inc
enter
data16
jl
mov
stos
mov
leave
jb
xor
and
dec
inc
inc
cmc
sub
dec
mov
or
loopne
pop
sub
jecxz
sbb
lea
and
xorw
fldt
xchg
jbe
jecxz
mov
xlat
mov
ret
sbb
les
int
shrb
jmp
sbb
loop
mov
setb
loopne
pop
hlt
mov
mov
dec
scas
andl
fsubp
add
add
xor
or
dec
and
stos
xchg
add
push
jnp
pop
ja
cmp
movsb
pop
jmp
or
adc
mov
scas
lods
dec
sbb
stos
pop
fisubs
mov
test
sarl
mov
lods
push
mov
es
pop
in
xor
inc
gs
sar
and
ss
insb
xchg
push
or
rolb
and
or
xchg
fmul
cs
std
sub
cmp
cld
push
pop
pusha
jle
cmpsb
xchg
dec
push
es
mov
or
stc
adc
dec
es
movsb
push
test
inc
add
add
lods
scas
lret
mov
pop
data16
pop
mov
fistpll
ja
in
lcall
ror
jecxz
dec
inc
mov
pop
jg
pop
pushf
xor
and
sub
and
adc
arpl
push
aaa
mov
shlb
enter
test
pop
xor
lods
dec
pop
lea
mov
cmp
adc
lcall
mov
mov
idivb
mov
mov
in
inc
add
dec
data16
fmul
sub
lcall
mov
sbb
inc
fimull
outsl
mov
jecxz
test
orb
dec
sbb
in
cmp
push
stos
and
or
int
adc
mov
adc
mov
jmp
repz
xchg
jmp
pop
pop
push
adcl
xor
lds
in
movsl
mov
gs
mov
das
je
int3
or
mov
jmp
cld
call
arpl
ss
inc
mov
mov
push
mov
movsb
loop
sub
cmp
in
decb
inc
or
pop
mov
dec
cmp
mov
ds
fldl
jle
dec
scas
adc
cld
lret
inc
jecxz
clc
popf
xchg
mov
outsb
adc
cltd
sub
push
scas
sahf
shrl
inc
mov
ljmp
orb
pop
sbb
jnp
int3
daa
adc
jecxz
jnp
out
and
add
xchg
adc
mov
xor
xchg
mov
push
into
inc
cltd
jbe
shr
xchg
inc
nop
sbb
sbb
mov
mov
lret
cmc
mov
and
xchg
pop
in
and
mov
pop
into
stc
sub
es
shrb
or
mov
pop
push
subl
leave
mov
fsubrl
repnz
mov
insl
iret
cs
cmpsl
cwtl
or
data16
pop
shlb
shlb
cmp
repnz
hlt
cmp
add
inc
and
jns
sahf
jae
imul
push
sbb
mov
outsl
insb
sbb
jecxz
pop
mov
xor
adc
mov
jg
ret
ret
mov
fdivl
mov
outsb
aad
adc
out
iret
xchg
or
lods
fcoms
adc
pop
sahf
mov
leave
and
mov
out
push
mov
inc
out
fcom
jecxz
rcll
pusha
and
xchg
jmp
mov
loopne
or
pusha
mov
sti
jecxz
mov
xchg
push
clc
in
sbb
repz
add
inc
enter
lock
mov
jmp
inc
mov
sbb
sahf
and
mov
shll
inc
push
into
stos
daa
cmpsb
lret
cmp
std
fidivrs
out
xor
jle
push
aam
stc
jl
xchg
xchg
or
sbbl
mov
and
add
jb
lea
test
std
lds
pop
pop
adc
ret
and
fisttpl
into
push
or
hlt
dec
cs
subb
push
scas
adc
idivl
xor
hlt
cwtl
or
mov
sbb
cmp
add
in
shlb
xchg
mov
add
stc
pop
mov
imul
pop
int
pop
mov
int3
hlt
mov
adc
into
stos
aas
xchg
jbe
mov
loopne
ljmp
push
jno
xor
sub
lods
xchg
lret
sarl
decb
and
inc
movsl
stos
jp
sbb
inc
jge
in
or
pop
cmpsl
icebp
and
xchg
data16
ret
lcall
rorb
ret
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
jmp
ret
fwait
mov
and
into
xor
orl
cmovg
mov
imul
test
pop
lret
test
push
cmp
cmp
push
sub
mov
mov
or
aam
add
xchg
out
aad
aaa
cmc
mov
repz
fimuls
fwait
ds
js
stos
addr16
pop
push
stos
sbb
pop
jne
es
sub
inc
outsl
insb
cs
test
jo
mov
fcoms
lcall
and
loopne
xchg
inc
aad
mov
mov
add
cmp
les
out
test
int
mov
sarl
mov
ret
jns
cmp
int3
cli
nop
xchg
insb
in
out
and
mov
jo
addr16
xchg
hlt
data16
repnz
dec
push
jecxz
mov
sub
lret
mov
and
ds
mov
shll
addr16
sub
cmpb
or
pop
into
or
mov
lcall
and
imul
dec
repnz
fmulp
ss
push
int3
add
jb
mov
sti
sbb
stos
fs
mov
cmp
push
push
clc
cmp
dec
jecxz
sahf
lahf
adc
movl
sbb
lahf
push
push
into
jmp
and
mov
mov
in
pop
std
push
dec
mov
xchg
push
in
hlt
adc
lret
and
jecxz
mov
lods
sbb
xor
lahf
lock
jl
mov
insl
cmp
xor
je
pusha
mov
sub
pop
clc
cmpsb
int3
les
xchg
fwait
das
mov
test
pause
jbe
bswap
inc
mulb
mov
push
mov
sbb
jl
cmpsl
xor
iret
and
and
js
shlb
pushf
pop
or
inc
fcomi
xchg
pusha
imul
push
cmc
and
cmc
pop
adc
mov
lret
inc
cmp
pop
xchg
jecxz
pop
dec
mov
xlat
out
inc
test
mov
adc
dec
movsb
repnz
es
xrelease
jl
arpl
std
outsl
lds
filds
stos
mov
cmp
inc
icebp
cwtl
imul
cmpsb
xor
inc
rcrl
push
lea
cmc
jbe
jb
dec
lds
push
test
pop
das
mov
push
pop
push
mov
clc
movsl
out
mov
je
pop
cmpsl
jae
cld
cwtl
movsb
jl
rcrb
testb
pop
shr
adcl
cmc
dec
sbb
add
cwtl
mov
int3
rcll
xor
xchg
add
add
in
and
push
or
and
nop
mov
addr16
call
rol
nop
pop
mov
xchg
add
out
xchg
adc
clc
ror
sub
and
xor
cmpsl
xchg
xor
fsubs
rcll
sub
movsb
xlat
bound
xchg
repnz
jns
mov
in
sbb
or
mov
sub
imul
out
ret
mov
mov
cli
mov
xorb
push
dec
fstpl
add
pop
jp
lock
aad
icebp
insb
pop
dec
clc
leave
sti
les
outsl
mov
movsl
lds
inc
jbe
sub
jmp
and
mov
cmp
dec
sbb
sti
jns
or
test
imul
mull
rcr
mov
adcl
mov
cltd
mov
ret
inc
filds
out
add
test
addr16
not
pushf
or
aaa
lahf
adc
xchg
nop
mov
daa
dec
inc
pop
fidivs
gs
mov
dec
inc
xlat
mov
dec
icebp
mov
imul
cmp
lahf
mov
push
fnstenv
sbb
stos
je
lret
pop
lock
test
pop
push
add
insl
push
xor
lahf
lods
mov
and
dec
leave
mov
or
pop
cmp
cmpsl
call
dec
lret
lock
push
jbe
sub
xchg
xor
shll
aam
mulb
adc
mov
lret
shlb
xchg
je
out
sahf
dec
inc
loopne
inc
sbb
sti
mov
adc
mov
mov
adc
or
dec
aas
shl
xchg
push
insl
xor
mov
stos
call
push
iret
and
mov
jg
cmpsb
shrl
adc
lock
mov
dec
movsb
cs
jno
out
addb
xor
or
pushf
sbb
pop
imulb
mov
out
add
mov
lods
adc
fisubl
push
mov
cmp
push
adc
loopne
dec
dec
or
popa
and
adc
bnd
cmpsb
cmp
orl
or
inc
int
pop
push
clc
mov
inc
push
jns
data16
test
icebp
pop
push
lods
outsb
aaa
mov
or
out
in
mov
cmp
rcrb
neg
sbb
mov
rep
pop
adcl
pop
mov
jbe
mov
cwtl
add
cmp
pushf
push
imul
cltd
sarl
push
mov
es
inc
imul
inc
jg
dec
pop
fstps
mov
mov
psubusb
divl
dec
mov
push
je
cwtl
xchg
out
push
mov
int
mov
out
cmp
adc
inc
dec
add
data16
and
or
or
call
dec
movsb
push
ja
inc
push
shl
xchg
sbb
sbb
xchg
sti
out
mov
cmp
mov
fldt
sbb
dec
gs
out
dec
icebp
sub
inc
pop
cmp
movsl
pop
xchg
fstpt
in
pop
inc
pop
mov
pop
imul
leave
cld
nop
fmull
jmp
cwtl
nop
sub
icebp
sbb
dec
inc
sub
adc
lret
push
cmc
out
sarb
int3
inc
mov
idivb
pop
cwtl
adc
clc
mov
or
xor
cmpb
into
mov
out
add
cmp
jo
inc
fs
sahf
out
add
inc
out
xchg
shll
daa
sub
shlb
stos
sbb
sub
xorl
incb
pop
and
dec
popf
push
add
test
adc
ret
push
push
xor
testl
dec
fnsave
pushf
aam
mov
ret
jb
test
and
sti
in
add
xor
jo
xor
aad
cmp
negl
frstor
mov
cmpsl
adc
mov
adc
cwtl
nop
and
xchg
xor
jbe
jg,pn
popa
pop
mov
lret
inc
mov
addr16
jo
mov
sbb
cmc
fmuls
or
jo
mov
in
mov
cwtl
aam
out
pusha
sahf
pop
incl
mov
stos
mov
loopne
xchg
jnp
sarl
jecxz
xchg
sbb
jecxz
mov
int3
xchg
xchg
inc
loop
sub
adc
pop
rorl
or
test
rolb
jle
enter
ljmp
fldt
mov
movsl
inc
xor
xchg
add
pushf
sbb
mulb
dec
in
mov
mov
jmp
aam
inc
test
addr16
add
dec
out
mov
xchg
imul
mov
lods
push
adc
sub
jns
push
cmp
and
dec
aam
cld
xlat
mov
ret
iret
imul
ficompl
stos
pop
cmpsb
inc
lods
pop
sti
cmpb
mov
dec
enter
sbb
or
shrl
mov
push
pushf
fisttps
jo
push
pop
ss
cld
inc
into
notb
dec
xor
dec
jno
in
cmc
mov
jl
mov
mov
sbb
push
icebp
lret
lods
push
dec
gs
xchg
insb
call
jmp
mov
push
in
movb
cmp
sub
sbb
cmp
xchg
push
mov
push
mov
imul
pushf
icebp
xchg
inc
dec
scas
lods
and
dec
adc
xchg
push
cltd
lock
jno
fadd
inc
dec
mov
scas
fs
xchg
dec
loope
sub
aas
adc
mov
jmp
xchg
and
shl
xor
in
pop
icebp
add
inc
xchg
in
inc
iret
adc
test
pop
addr16
mov
out
stos
insl
ja
bound
fcmovbe
jo
sbb
fidivs
push
and
pop
inc
fldt
pop
sahf
jg
test
sbb
mov
scas
cmp
mov
mov
or
mov
pop
out
loopne
push
push
pop
imul
sbb
jo
xor
rorl
ljmp
xchg
fdivs
movsl
cs
ret
das
daa
sub
int3
pop
sahf
inc
jge
hlt
cmp
movsl
pop
iret
mov
cmc
pop
shlb
inc
pop
push
shl
cwtl
nop
jmp
mov
les
into
xor
add
lea
sub
jmp
int3
loop
negb
inc
pusha
test
mov
sub
stos
adc
lret
mov
sbb
or
lock
cmpsl
divl
mov
sub
lcall
testl
cli
mov
sub
aam
and
arpl
dec
inc
ljmp
adc
or
mov
rcrl
adc
daa
lods
jecxz
inc
add
and
jmp
mov
add
ljmp
inc
jge
pop
pop
jno
ret
test
stos
sub
inc
xchg
int
fisubl
jmp
stc
and
mov
cmp
xchg
fcoms
push
fmulp
xor
pushf
ljmp
in
adcb
inc
dec
scas
inc
dec
dec
dec
repnz
flds
repz
pushf
jle
add
mov
push
adcl
loop
arpl
test
pop
or
cmpsl
mov
jne
pop
xor
mov
cltd
cmp
sub
outsb
arpl
jecxz
jnp
mov
aad
ret
mov
adc
mov
in
dec
mov
das
pusha
jne
xor
inc
jo
cmp
lcall
bound
ret
xlat
and
add
xor
int3
mov
or
mov
xchg
popf
pushf
xchg
jmp
aad
data16
pop
cmp
or
pop
scas
jle
in
nop
push
sbb
dec
ss
add
ret
dec
push
add
xchg
lea
aaa
ds
jmp
dec
es
sbb
jl
cwtl
push
repz
pop
and
xor
xor
or
mov
popa
out
ja
sub
jmp
xor
add
add
adc
cmp
iret
and
dec
pushf
xor
or
inc
mov
xor
mov
jne
mov
pop
imul
inc
fidivrs
lds
enter
ret
dec
xor
mov
fnsave
cmp
jecxz
shr
clc
loopne
sahf
in
adc
and
xlat
ret
mov
insb
pusha
mov
loop
and
dec
xor
lret
lea
addr16
imul
dec
ss
loop
ret
xlat
adc
cli
dec
int
mov
lods
lods
adc
enter
in
xchg
cmp
push
out
jge
fnstcw
jl
jns
rorb
int
pop
popf
mov
mov
jae
mov
sub
scas
push
cld
nop
fadd
jns
jns
jl
dec
push
out
fmulp
icebp
rcrb
jno
push
pop
sarl
repz
popa
push
subl
mov
cmp
cmp
in
pop
dec
inc
jo
add
lret
dec
in
xorb
sbb
int
jns
add
xchg
rcrl
enter
rcrb
sbb
movsb
pop
add
repz
cwtl
outsl
cmc
xchg
xchg
enter
cld
lret
fstps
enter
arpl
icebp
fdivrs
lcall
ss
jp
sbb
data16
pop
inc
iret
xorl
pop
mov
pop
push
xor
in
push
and
mov
mov
sbb
adc
adc
mov
mov
cmp
nop
push
fistl
mov
mov
jo
jae
inc
mov
int
push
pop
aad
xchg
scas
les
js
xchg
fs
repnz
inc
pop
call
mov
push
cmp
mov
pop
and
and
jbe
clc
push
inc
pop
ret
push
adc
jne
cmpsb
hlt
and
xchg
pop
jnp
sub
xchg
cmc
fs
cmp
icebp
and
push
rcl
repz
rcrl
popa
push
fcom
xchg
xchg
sub
lods
push
out
cmp
ja
jnp
bound
xchg
movsb
mov
mov
not
fsubrs
imul
loopne
pusha
push
mov
pop
and
mov
test
xor
cwtl
add
dec
push
rcr
mov
jg
cmp
and
dec
dec
pushf
stc
xor
jne
mov
lahf
cmp
cmp
push
test
leave
xchg
cmp
xor
cmp
xor
add
lock
out
or
dec
shlb
movsb
mov
cmc
hlt
jecxz
jno
dec
cmp
jo
fiaddl
hlt
push
and
xchg
fwait
negb
xor
fs
mov
dec
mov
imul
mov
cwtl
pop
mov
notb
mov
mov
lahf
stos
inc
out
push
pmaddwd
add
push
mov
sub
jno
out
push
pop
pusha
mov
pop
push
mov
pop
push
fidivrl
cmp
mov
aad
iret
or
push
adc
sub
pop
enter
mov
das
pop
add
jo
jo
dec
pop
subl
push
xchg
popf
push
hlt
pop
mov
sarb
jecxz
inc
mov
or
cmp
mov
jl
push
out
dec
dec
and
or
icebp
fnstcw
pop
in
cs
mov
xor
jge,pn
cli
xor
jmp
cmc
aad
adc
sub
jl
lret
and
iret
leave
xor
adc
xchg
mov
mov
add
pushf
gs
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
jmp
adc
cmp
ret
aam
mov
adcb
movq
pusha
aad
sub
je
out
mov
xor
adc
and
insl
into
sahf
jne
rcl
stos
push
nop
sbb
mov
jb
scas
or
and
sbb
add
jmp
call
es
or
cmpsl
fists
pop
les
je
inc
pusha
int
xchg
imul
popf
pop
cmp
rorb
xchg
icebp
loop
mov
add
jg
mov
cmp
xchg
xchg
pmuludq
pusha
inc
incl
push
out
add
ds
in
cmp
add
xchg
movsl
xor
jmp
dec
or
mov
loope
adc
mov
and
cmp
aam
mov
xchg
push
loopne
or
fcoml
lret
jo
push
lea
sub
lock
std
mov
std
jno
mov
je
dec
jl
shll
out
call
fisttps
enter
sub
sbb
push
cmp
stos
sahf
and
repz
loop
push
xor
jp
jecxz
sbb
movsl
sarl
xor
adc
in
aam
lea
xchg
lahf
sahf
add
repnz
add
ficomps
lea
mov
lret
xchg
mov
data16
sbb
gs
fs
push
in
cmpsb
fmull
sbb
dec
test
and
out
stos
in
add
push
cmp
inc
dec
sbb
sahf
cli
notl
idiv
in
mov
lds
xor
cmp
test
adcl
movb
lahf
pop
jbe
push
mov
and
and
and
push
out
add
cmc
push
dec
loopne
and
mov
je
push
ret
mov
mov
lods
adcl
mov
insl
out
adc
inc
addr16
push
out
adc
inc
popa
sbb
mov
sub
dec
push
mov
ret
push
int
pop
mov
jp
jge
mov
lds
pop
add
cmp
ljmp
pop
cs
fcmovne
jmp
push
cmp
mov
sbb
mov
ficomps
add
fcmovnb
xchg
add
out
orl
cmp
es
and
mov
sti
jp
pop
andb
adc
xchg
cmpsl
jne
andb
aad
sub
mov
sbb
xor
cs
mov
xor
in
sbb
adc
inc
jbe
aad
pop
mov
stc
and
jnp
jbe
call
fsubr
xor
cli
ret
mov
loope
sbb
ja
aam
outsb
xor
or
xchg
dec
pop
xor
notb
mov
xor
sahf
or
cld
fwait
xorb
push
stc
aaa
ret
ret
insl
iret
jnp
fsts
clc
cwtl
fldenv
mov
jb
divl
fld
push
je
hlt
xchg
rorl
jge
outsb
insb
lret
mov
sbb
and
nop
adc
mov
push
js
loope
sub
scas
dec
test
out
stos
adc
pop
lret
xchg
fdivs
mov
xor
inc
or
repnz
stc
addr16
sahf
test
sbb
stc
andb
add
lret
aam
jae
mov
addb
mov
add
stos
cltd
push
sar
sub
cwtl
loopne
jle
mov
push
shr
pop
or
mov
push
sub
incb
and
xor
jbe
mov
aad
pop
or
lcall
dec
mov
lea
das
xor
icebp
outsl
ret
popa
lahf
adc
out
rorl
sbb
int3
cmp
rclb
jl
cwtl
mov
repz
leave
dec
je
and
jmp
add
scas
xchg
mov
imul
push
out
adc
rcr
gs
mov
jecxz
jno
les
push
inc
sahf
fwait
xor
sbb
sti
pop
mov
icebp
lods
dec
idivb
add
les
mov
repz
imul
nop
and
jge
jmp
loopne
popa
pop
jae
cmc
and
jmp
push
jb
imul
mov
dec
ss
lds
push
fs
fwait
push
les
mov
js
inc
loopne
cmpsl
sbb
lret
add
shll
ja
jae
sub
ffree
int3
ljmp
xorl
inc
out
inc
mov
push
mov
stos
jge
xorl
sub
ret
mov
pop
addr16
xchg
nop
inc
insb
and
loope
jnp
mov
xchg
into
test
mov
jp
iret
mov
arpl
fcoms
dec
inc
imull
shlb
mov
loop
cmpsb
jae
mov
jmp
out
mov
in
jge
dec
stos
adc
gs
cwtl
out
roll
notl
and
ret
inc
adc
daa
xor
std
mov
jns
mov
sbb
jmp
out
out
adc
inc
cwtl
enter
stc
mov
aaa
fcoms
add
jo
mov
mov
push
jae
setb
xorl
imulb
add
leave
mov
adc
addr16
popf
rcll
outsb
aas
ss
insl
das
dec
pop
mov
xchg
jne
xchg
mov
or
dec
cmp
adc
loop
daa
dec
je
cwtl
mov
push
loop
outsb
dec
xor
mov
sbb
xchg
jnp
repz
rolb
je
and
xlat
or
out
lods
pop
push
xchg
ljmp
outsl
bswap
jp
and
adc
fstpt
cs
or
push
and
sub
mov
inc
ljmp
fsts
popa
addr16
pop
enter
call
test
in
fstp
sbb
gs
cmpsl
or
mov
fistps
inc
dec
fadd
lcall
fbstp
out
bound
xchg
fsubr
jecxz
pop
mov
sti
sub
clc
fsubs
lea
add
into
pop
sub
sub
mov
mov
pop
fstl
insb
sarl
mov
jecxz
loop
cwtl
inc
movsb
sub
ret
mov
pop
pop
ja
cmc
loopne
stos
push
push
shll
test
sub
pusha
add
mov
jb
ss
mov
adc
icebp
cmp
xor
sub
push
adc
sub
outsb
mov
push
adc
mov
out
insl
stos
lock
fcoms
xlat
imul
mov
out
movsl
or
roll
add
mov
or
jmp
icebp
sub
or
and
xchg
pop
cmp
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
jmp
sbb
and
in
xchg
ja
adc
mov
repz
mov
fdivrs
loope
scas
and
addr16
jecxz
and
inc
mov
mov
fnstenv
fs
push
aas
and
stos
inc
mov
test
scas
imul
and
cmpsb
xor
jno
and
jne
adc
xor
mov
cwtl
js
lea
outsb
mov
pop
pop
fsubrl
rcrl
decl
movsl
ss
lret
jl
test
mov
jp
movsl
loopne
mov
lahf
or
insl
mov
sarb
xor
and
mov
enter
sahf
cmp
jo
mov
and
jo
rcll
mov
and
imul
inc
ret
insl
inc
xchg
jae
jae
subb
or
lahf
xchg
xor
ret
adc
fisttpl
aam
mov
out
lret
adc
fs
sbb
sahf
mov
xchg
mov
in
add
jnp
dec
mov
out
popf
pop
push
xchg
fidivl
or
and
jl
dec
push
xor
loopne
mov
dec
mov
jge
sti
out
or
test
xor
data16
test
ret
mov
jo
mov
jp
int
mov
sti
test
mov
insl
and
cmp
and
std
js
repz
test
cld
and
outsb
dec
xor
es
scas
mov
xlat
mov
repnz
adc
inc
adc
jbe
ja
aad
dec
sarl
pop
mov
push
jecxz
stc
push
cmpsb
add
mov
rclb
fstpt
push
int
pop
ja
enter
in
aas
loope
imul
mov
lods
xchg
xchg
mov
and
lea
sub
xor
xlat
mov
pop
push
jmp
mov
bswap
stos
pop
movsb
jae
mov
rcll
push
sub
xor
and
mov
sub
jnp
addr16
sub
mov
and
repnz
xor
adc
ss
cmp
in
xor
mov
lds
fstp
ret
adc
adc
popf
cmp
es
xchg
sbb
cmp
orl
arpl
stos
sub
out
data16
inc
xor
jle
mov
fisubs
pop
mov
popa
fisttpl
jb
int3
mov
dec
mov
shll
mov
sarl
es
xor
push
fadds
imul
push
ret
aaa
add
mov
add
sub
pop
xor
fimuls
add
int3
push
data16
mov
mov
sub
add
jne
add
outsl
lret
mov
pop
xor
cmp
xor
fldt
pop
xchg
out
sub
push
jae
or
lds
pop
int3
mov
pushf
inc
sahf
inc
orb
pop
das
jne
and
stos
aas
in
sub
in
adc
xor
add
dec
sub
sub
pop
pop
jne
cmc
xor
and
adc
cmp
fsubrs
and
and
adc
dec
out
into
xor
pusha
and
movsb
popf
addr16
addr16
add
lahf
pop
or
inc
xorps
jp
stos
jns
cwtl
push
mov
adcb
or
mov
incl
loopne
jmp
mov
push
sbb
nop
xchg
insb
cmp
ret
mov
jecxz
call
dec
negl
jmp
sbb
imul
stos
js
std
js
aad
lcall
lret
lahf
arpl
loope
cmp
loope
cmp
jecxz
jnp
cmpsl
mov
cld
out
arpl
cld
das
push
icebp
mov
xor
or
sub
test
call
pop
sahf
pop
loop
das
pop
xor
xchg
icebp
faddl
mov
dec
pop
scas
push
adc
or
mov
jp
movsl
mov
jge
movsl
dec
and
pop
mov
push
imul
jle
lahf
jle
scas
adc
ja
cmpsb
mov
dec
incb
rclb
sbb
das
cwtl
sbbb
fildl
insb
mov
pop
cld
test
inc
inc
and
jnp
push
fstps
scas
sub
and
push
test
into
and
inc
jae
mov
cmp
rclb
xor
mov
ror
imulb
rcl
sbb
mov
jl
shrb
mov
mov
mov
ds
mov
xor
pop
insb
sbb
insb
into
sti
push
jno
in
in
mov
dec
fsubrl
or
or
mov
pop
test
shll
push
test
or
dec
cmp
mov
pushf
mov
adc
mov
stc
les
scas
sahf
mov
add
daa
xchg
shrl
or
jnp
mov
xor
mov
ljmp
cmp
push
lock
test
push
jp
mov
imul
mov
filds
enter
insb
outsb
adc
bound
mov
and
add
jecxz
mov
push
subl
popa
or
sub
sub
adc
hlt
mov
jp
out
lret
sub
inc
fisubl
adc
int3
mov
push
push
jmp
push
popl
cmp
int3
inc
or
push
mov
aaa
les
cmpsb
cmp
ud1
sub
xor
pop
icebp
jp
orb
pop
lahf
fildll
inc
lea
add
mov
and
int
dec
adcb
and
inc
sub
sbb
shlb
xor
adc
rorb
mov
pop
pop
inc
pusha
pop
int3
pop
or
mov
ds
mov
adc
fldl
out
in
mov
nop
dec
or
aam
or
sarl
hlt
push
push
adc
cpuid
test
les
adc
pusha
jo
push
or
add
and
cs
pop
sub
jecxz
inc
dec
push
mov
fldenv
sti
test
and
cmp
jbe
sti
xchg
jb
movsb
push
cmp
in
and
cmc
fs
mov
shll
adc
mov
inc
ret
jmp
jmp
flds
or
xchg
jno
shlb
inc
ja
xor
pop
inc
je
aaa
inc
les
lods
cwtl
fldcw
dec
scas
cli
pop
pop
sbb
sbb
dec
xorb
push
data16
repz
bt
push
push
sbbb
dec
pop
cmp
pop
imul
shlb
rol
push
xor
mov
mov
mov
jmp
sti
test
sbbl
mov
aas
ja
and
mov
aaa
dec
pop
xchg
stos
ljmp
jae
push
adcl
jne
fs
dec
and
outsb
cs
mov
jmp
dec
push
fidivrl
push
inc
dec
leave
maxps
scas
sub
movsl
mov
inc
movsl
jnp
and
test
aad
adc
xorl
jno
ds
mov
aad
fiaddl
sub
xor
daa
stc
aam
jb
or
cmp
std
push
sbb
cmpsl
out
cmc
lods
dec
mov
fstl
and
inc
inc
push
mov
pop
push
sub
pop
push
push
mov
jb
dec
jmp
jmp
add
shlb
pop
mov
sub
mov
nop
sahf
or
or
wrmsr
xchg
add
scas
or
or
jl
shr
cltd
inc
fs
xchg
into
or
das
xor
add
sub
sub
cltd
mov
enter
xchg
mov
dec
xchg
shrl
lods
loope
sub
mov
arpl
andl
jp
lahf
cmp
push
xor
or
movl
xor
sbb
pop
and
arpl
jp
cmpl
bound
inc
test
and
jmp
xor
inc
pop
mov
scas
cs
lahf
ret
divb
mov
push
movsl
add
into
pop
cmpsl
xorb
mov
cmc
loope
add
inc
enter
push
rcl
mov
sub
into
push
je
ss
cmp
adcb
jns
stc
leave
imul
xchg
mov
fisubs
aam
loopne
enter
out
mov
mov
adc
icebp
xor
test
stos
addl
cmpsb
cmp
cmpsb
dec
fisttpl
mov
mov
xor
insb
sbb
adc
fiaddl
das
test
fstps
pop
imul
out
je
leave
lret
outsl
cs
das
push
sub
loope
adc
cmp
add
pop
fisttps
pop
les
adc
mov
cmp
cmpsl
scas
sub
mov
xor
icebp
decb
mov
fs
xlat
dec
mov
lret
push
mov
jmp
dec
add
jge
xor
outsb
jmp
loope
dec
add
mov
add
call
les
cmpsb
cmp
and
fsubl
jge
sbb
and
push
inc
sub
outsb
or
or
in
repnz
inc
outsl
repnz
push
xor
icebp
loope
push
inc
scas
sbb
ficomps
jae
xor
sub
sbb
das
call
addb
sbb
xchg
aad
fidivrs
jae
cmp
mov
ljmp
jle
jg
mov
push
test
cli
xor
or
test
or
sbbl
mov
pop
and
enter
pop
or
jl
mov
add
loop
mov
mov
iret
fwait
and
push
sub
mov
push
aas
xchg
testb
cmp
aas
xchg
aam
iret
nop
and
fldz
popf
lcall
and
inc
shlb
cmp
or
sbb
out
xorb
test
xorl
xchg
lods
mov
adc
pusha
imul
mov
test
mov
sbb
out
fdivrs
aas
xor
xor
xchg
or
cmp
push
adc
movsb
mov
mov
and
imul
fbld
and
scas
mov
in
inc
rcrl
jmp
mov
pop
subl
dec
mov
mov
call
fists
add
sub
pusha
inc
movsl
lret
scas
aas
sbb
mov
ja
pop
cs
xchg
mov
jp
inc
mov
outsl
push
adc
and
or
mov
sti
lods
jne
test
jno
cmp
jle
push
repz
sbb
data16
mov
adc
daa
ficomps
mov
push
aad
insl
imul
pop
pop
ret
adcl
fdivs
insl
int
sub
jbe
mov
je
in
js
mov
in
scas
adc
psllq
cltd
cmp
sbb
iret
outsl
jae
popf
inc
jbe
cmp
push
pop
inc
inc
cmp
cltd
flds
sbb
dec
adc
out
cld
rorl
jge
sbb
sahf
or
jo
lock
or
ja
insl
or
cmp
test
movsb
sub
and
outsb
pop
jo
stos
push
push
xor
sub
scas
xchg
rol
repz
or
sub
jbe
mov
pusha
sar
stos
mov
test
mov
loop
pop
and
jne
cwtl
rclb
mov
xor
and
popf
imul
pop
test
ret
mov
and
pop
push
stos
lcall
cmp
sub
movsb
out
inc
out
mov
inc
addr16
or
in
xor
insb
dec
rol
push
and
jl
lret
aas
jmp
mov
cltd
inc
xchg
sub
cmc
out
xchg
mov
mov
mov
add
les
cmp
dec
rclb
cltd
test
pop
inc
push
mov
pop
loop,pn
addr16
mov
mov
xchg
adc
mov
lcall
sub
dec
push
sti
jne
mov
scas
push
xor
movsl
jno
gs
dec
sbb
push
add
call
test
adc
sub
loope
pushf
stos
push
repz
xor
cmp
lds
dec
imul
push
xchg
cmpsb
push
aam
dec
and
test
dec
adc
out
aam
jns
test
aaa
jg
arpl
dec
mov
or
jb
push
dec
jns
adc
and
ljmp
push
das
mov
icebp
mov
pop
imul
or
leave
cltd
out
push
movsb
pushf
add
jno
sbb
fwait
rorb
and
es
and
pop
cmp
dec
js
or
je
lds
es
or
jg
jo
je
mov
imulb
lock
std
pop
clc
enter
cmp
js
mov
xchg
sbb
and
fwait
jge
sbb
jp
sbb
pop
jae
adc
mov
leave
and
mov
and
push
into
sbbl
cltd
cmp
and
inc
gs
add
lret
push
add
and
xchg
adc
std
out
test
dec
hlt
repz
xchg
add
sbb
jg
sub
rcrl
xchg
or
insl
cmp
dec
cmpsl
scas
ds
aad
pop
pushf
test
adc
pusha
mov
sub
cli
test
loope
fadds
ret
lret
sbbl
sub
and
xchg
mov
test
ljmp
inc
nop
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
jmp
nop
loope
pop
dec
gs
int
xlat
sub
mov
ja
repnz
pop
jb
cli
dec
daa
sarb
ficomps
fstpl
in
pop
xchg
pop
test
jg
clc
jb
sub
test
scas
aas
inc
icebp
andl
mov
fidivrs
loop
idivb
dec
xchg
and
inc
pop
in
fcoml
int
pop
stos
jae
sbb
lret
jmp
inc
pop
shl
shrb
pop
inc
scas
cwtl
adc
push
fstpl
pcmpeqd
mov
in
shll
lock
and
mov
pop
push
imul
mov
adc
adc
popa
mov
or
or
and
xchg
data16
fmul
nop
inc
jnp
pusha
xor
cmp
or
push
sbb
fldenv
in
or
mov
mov
bound
mov
xchg
inc
jns
mov
test
in
mov
sbb
mov
cmp
sub
xchg
out
rorl
sbb
out
pop
daa
test
pop
lock
ret
xor
xlat
or
cld
xor
dec
aad
ds
jmp
xchg
int3
fisubs
inc
add
test
cli
pop
cmp
decb
mov
divl
adc
and
sub
sbb
outsl
rcl
sub
in
pop
xchg
sarb
mov
push
mov
adc
pop
inc
or
aas
dec
orl
loopne
sub
stc
lret
cs
xor
xchg
pop
xor
imul
xor
std
pop
sub
xor
les
sbb
or
jmp
sbb
add
loop
and
pop
shl
fmuls
out
sbbl
push
dec
dec
ljmp
xchg
test
cmp
adc
pop
sahf
push
cwtl
fisubs
cmp
push
popl
ror
push
daa
mov
add
aad
cmpsb
lock
scas
lods
jno
cld
jg
jae
and
and
fnstsw
mov
imul
inc
push
add
and
push
insl
sub
push
jo
xchg
add
dec
inc
lcall
stc
dec
mov
or
xchg
fisubrs
lock
pusha
mov
adc
jle
jle
scas
rorb
xchg
or
xor
int
imul
pop
jmp
int
sbb
jge
lea
out
pop
xor
int3
stos
mov
mov
jns
inc
repnz
pop
jb
and
add
lock
mov
lcall
sbb
xor
lods
icebp
das
iret
cwtl
mov
out
in
jle
js
int3
jbe
xor
dec
cmp
loope
mov
push
jecxz
cli
pop
or
inc
sbb
push
mov
mov
pop
inc
repz
pop
add
lahf
shlb
clc
imul
sar
or
int
inc
mov
std
mov
lods
pop
push
add
je
mov
mov
out
sbb
int3
je
xor
stos
sbb
sub
inc
jge
es
sub
clc
adc
pop
repnz
add
ficomps
jnp
xchg
loope
add
or
aam
data16
lret
jno
and
mov
jb
or
push
mov
in
lret
ljmp
jmp
pop
sti
or
cmc
gs
mov
pop
jmp
adc
push
sbb
out
int3
sub
xor
outsl
sbbb
jmp
jmp
sub
inc
push
jmp
add
push
jnp
mov
in
test
stos
enter
ljmp
push
in
icebp
aad
sbb
shlb
ffree
lods
outsb
push
les
sub
dec
movsb
or
mov
rclb
je
mov
xor
xor
out
lods
or
arpl
roll
or
mov
cmp
jge
or
ret
mov
mov
xor
fldl
jge
out
lock
mov
cmpsb
push
jne
dec
enter
addb
sarl
or
arpl
les
add
add
inc
cmp
fiaddl
jbe
xchg
daa
and
scas
enter
imul
xchg
mov
test
cmpsl
pop
lods
imul
pop
mov
mov
add
fsts
into
out
or
jg
or
fiadds
jo
dec
cs
xchg
push
insb
or
popf
cmp
ss
adc
pushf
inc
inc
xor
xlat
stos
shlb
jge
pop
neg
pop
iret
push
pop
xchg
xchg
aam
pop
fs
mov
in
add
adc
outsb
push
cmp
scas
xor
in
lods
inc
ds
ja
jns
push
pop
outsl
mul
mov
jg
fisttps
scas
pushf
movsl
mov
out
out
push
ja
lcall
cli
sbb
xchg
inc
and
clc
push
imul
das
fimuls
inc
shll
fwait
mov
dec
out
stc
sub
mov
jle
imul
push
les
lret
pop
data16
test
std
clc
addl
bound
fucomip
inc
out
pop
lea
fcoms
aad
das
sbb
jb
sub
mov
xchg
imul
xlat
mov
pop
sar
or
repnz
pop
push
or
cli
sub
inc
cs
outsl
iret
cmp
xor
jnp
mov
in
adcb
jb
jge
fsubr
jae
sbb
into
adc
add
pop
fs
in
add
cli
inc
dec
leave
sahf
movsl
mov
or
out
lds
test
mov
loope
jnp
outsl
push
subl
cltd
or
fidivrs
xchg
mov
dec
rcll
popf
add
add
or
gs
loope
push
jae
inc
jg
in
adc
adc
cmc
aaa
imul
mov
insl
inc
es
popa
sub
fwait
dec
mov
lock
into
out
scas
pop
out
iret
pop
enter
sbb
repnz
adc
xor
adc
pop
imul
or
es
repz
lods
in
jns
fwait
cmp
push
dec
dec
mov
nop
jne
xchg
add
lods
or
push
lret
in
jge
cmpsb
lods
out
fistpll
icebp
push
lds
xchg
pop
daa
inc
mov
pop
pop
repnz
idivl
xor
in
gs
sbb
sub
cmpsl
or
inc
jg
cwtl
lret
xor
push
rcrl
xor
and
push
pop
fimull
sub
and
stos
add
sub
ror
dec
mov
dec
jae
cld
add
hlt
mov
loopne
aas
sti
aas
mov
in
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
jmp
dec
loope
lret
sbb
or
mov
adc
psubusb
les
int3
fsub
fcmovne
sbb
loope
adc
push
je
sbb
lahf
dec
aam
adc
xchg
jb
and
fidivs
or
ds
sarb
cmp
pop
xor
test
inc
cmpsb
mov
inc
xchg
gs
pop
and
or
jbe
scas
push
mov
dec
loope
cmp
daa
dec
gs
and
test
sbb
or
test
xchg
mov
stos
movsl
fsubrp
xor
in
mov
shll
pusha
mov
pop
push
dec
insl
clc
mov
sub
mov
jge
add
push
xor
jae
dec
ja
jae
rcll
sbb
scas
xchg
popa
and
pusha
in
cltd
mov
je
imul
or
std
push
sub
mov
ja
adc
ror
hlt
loopne
loop
lahf
sarl
xchg
mov
sub
sahf
mov
lahf
lods
mov
aas
test
or
xchg
in
sbb
and
dec
cmp
push
push
cltd
or
sti
ja
jg
jp
mov
nop
jg
jne
popf
push
sahf
xchg
jl
xchg
movsb
inc
mov
mov
mov
pop
loop
data16
mov
int3
movsb
cli
scas
std
sahf
fcmovnbe
push
jae
int3
or
jb
mov
mov
adc
jecxz
or
add
cmp
dec
mov
push
xchg
jmp
jbe
pop
and
loope
outsb
mov
loopne
mov
or
inc
or
popa
shll
stc
test
adc
lret
jno
cs
into
aas
clc
mov
stos
adc
inc
cmp
loopne
dec
gs
mov
dec
das
ds
cld
jle
and
mov
cld
pop
dec
pop
add
mov
daa
fs
loop
xor
and
lods
jmp
mov
xchg
jmp
imul
xor
push
push
iret
fstps
shrb
mov
push
and
cltd
repnz
jecxz
and
sbb
in
aad
imul
aaa
pop
loope
fcomps
lods
dec
insl
mov
inc
jecxz
inc
dec
pusha
adc
scas
and
cld
roll
mov
lcall
xor
jl
popf
or
sbb
daa
bswap
clc
leave
mov
jnp
leave
inc
push
dec
int3
sbb
add
aad
jmp
iret
leave
bound
adc
fsubr
mov
movsb
sbb
xor
icebp
and
adc
sub
push
xchg
jg
push
test
nop
idivb
sbb
push
xchg
dec
dec
es
mov
pop
aaa
add
push
cmc
push
adc
fsts
xchg
das
rcrw
test
ficoml
mov
incl
cmp
bound
lds
ret
paddusw
pusha
dec
jbe
imul
add
stos
dec
pusha
pop
push
inc
dec
sub
mov
or
lods
rorb
add
or
push
mov
jg
jecxz
jbe
or
aam
dec
or
mov
daa
cmpsl
movsb
add
push
adc
mov
jns
lret
xchg
lret
outsl
inc
cmc
add
jns
je
and
pop
daa
orl
insl
into
dec
addr16
jo
sarb
insb
aad
stos
es
push
add
sbb
jmp
test
push
add
call
mov
pop
inc
cmp
push
cmp
sub
dec
pop
or
daa
cltd
int3
mov
inc
lds
sub
cmp
mov
cmp
push
jne
mov
push
mov
and
pop
cli
imul
push
enter
cmp
jl
or
scas
arpl
add
test
sbb
xor
pop
and
mov
in
mov
sbb
pop
aaa
mov
dec
insb
cmc
into
sbb
rolb
push
push
dec
adc
shl
jecxz
mov
add
cmpl
movl
inc
xor
fnstsw
pop
mov
cmp
sbb
inc
xor
out
fnstcw
or
subb
aam
push
fldcw
push
mov
mov
cmp
div
in
mov
inc
sbb
hlt
sub
test
cmpsl
inc
pop
pop
inc
outsb
scas
inc
inc
sbb
cltd
mov
leave
stos
popf
pop
mov
sti
and
jmp
mov
std
cmp
adc
and
out
xlat
repnz
push
in
rcrb
cmpl
xchg
cmpsb
cmp
sarl
and
mov
roll
mov
xor
lods
inc
sahf
dec
sahf
mov
fisubl
cmc
fcmove
in
cmp
sub
sub
pop
sub
jecxz
movhlps
outsb
pop
cmc
xchg
xchg
dec
mov
xorb
xchg
test
push
xor
pop
or
cmpsb
push
push
andl
add
xchg
imul
cmc
vandpd
das
and
cmp
loope
adc
and
idivl
enter
cmpsb
jle
push
stos
lea
cmp
push
lods
push
cmp
js
xchg
mov
ret
je
push
adc
jmp
or
and
pushfw
popa
push
dec
into
and
sbb
jno
test
add
aam
adc
push
lock
jge
mov
cmpsb
mov
push
sub
jmp
jns
xor
loopne
in
nop
inc
adc
mov
lahf
fsubr
pop
add
loope
call
jle
push
jecxz
or
test
ficoml
sbb
push
jl
ss
mov
sub
lret
scas
jge
inc
imul
add
cmp
orb
or
es
mov
sbb
add
mov
ret
addr16
cltd
mov
inc
insl
jle
adc
dec
dec
cmp
xchg
pop
sbb
xlat
lods
leave
mov
inc
ds
cmpsb
adc
std
xor
jl
ljmp
lods
das
add
xchg
jle
stc
sub
imull
ret
data16
scas
dec
sub
jnp
scas
push
push
xor
repz
pop
out
jmp
sbb
in
push
xchg
je
mov
clc
jge
outsb
std
icebp
add
addr16
xchg
fcmovbe
push
add
sbb
cmpsl
push
jl
mov
mov
stc
or
push
rolb
xchg
sar
imul
mov
movsl
inc
inc
jmp
fisttpll
into
xor
popa
shr
cltd
xchg
jns
mov
adc
test
aaa
cmpsb
das
pop
pop
inc
sbb
lahf
mov
push
push
pusha
inc
clc
pop
push
es
fidivl
jle
in
clc
fbld
loope
adc
loope
mov
mov
mov
sbb
es
aas
mov
leave
out
dec
jb
jnp
and
and
cmp
in
orb
inc
jmp
inc
cwtl
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
jmp
cltd
push
in
sub
jno
movb
lret
adc
xcrypt-ecb
cmpsl
btc
jp
out
mov
stos
jge
ss
inc
lds
ret
xor
add
mov
iret
fdivrs
cmp
pop
push
push
xor
mov
jge
inc
and
pop
add
add
std
pop
pusha
ret
inc
lret
imul
push
jmp
cmp
mov
divb
jb
fucomi
adc
pop
inc
mov
js
lahf
aad
loopne
repz
rcrb
xchg
inc
leave
stc
lock
dec
ficoms
pop
in
cmp
cmc
aas
jnp
sahf
mov
fsubl
cltd
jl
mov
test
dec
nop
sti
jge
jge
mov
nop
xchg
in
nop
insb
imul
rorl
pop
sbb
dec
mov
in
cmp
jne
xchg
mov
out
rorl
and
addr16
jle,pn
int3
xor
test
jae
sub
lods
xlat
imul
imul
or
push
jo
stos
inc
dec
je
xchg
test
daa
gs
push
test
ljmp
pop
test
xchg
add
inc
mov
out
test
sbb
ror
mov
or
xchg
insb
lock
pusha
jge
inc
push
or
inc
popf
rcrb
cmp
or
sub
clc
inc
and
movsb
popa
sbb
pop
movsl
fwait
gs
push
inc
xor
inc
cmp
iret
cmpsb
jp
mov
outsl
sbb
inc
outsl
sub
pop
mov
movsl
push
add
clc
jne
fcmovnbe
push
out
cmp
outsl
loopne
pop
mov
std
out
push
push
mov
xlat
pop
push
jl
mov
and
fldt
sbb
out
cmpsl
shrb
cwtl
enter
mov
jle
je
jbe
mov
xor
adc
mov
scas
mov
call
fdivs
adc
mov
jge
clc
lock
pop
ljmp
xor
push
cli
repz
out
aaa
test
adc
pop
or
mov
pop
faddl
push
std
fisttpl
or
sahf
mov
out
stos
sub
jne
std
add
ror
mov
sub
cs
xor
xchg
or
loop
mov
jno
jo
test
jae
das
mov
mov
scas
mov
xchg
mulb
inc
out
jno
mov
arpl
ja
mov
mov
iret
xchg
add
das
ret
dec
jns
xor
aas
clc
mov
dec
add
or
arpl
mov
ret
repz
xor
add
test
inc
shrl
mov
mov
jae
jl
cli
jle
xchg
mov
mov
call
adc
in
add
xlat
loopew
xor
lock
mov
cmp
mov
pop
jge
pop
stc
dec
add
push
in
jbe
or
test
adcl
jmp
pop
pop
xlat
jl
mov
aas
mov
aam
negl
add
popf
jo
bound
mov
inc
roll
cmpb
int
cmpsb
pushf
popf
or
test
pop
lret
loope
test
outsb
loope
push
xor
lcall
loopne
push
std
ja
jp
scas
hlt
cmp
je
cwtl
push
xchg
out
cmpsl
dec
push
mov
test
mov
mov
jnp
adc
adc
stos
mov
ss
popa
xchg
nop
and
add
mov
mov
pop
outsb
mov
inc
and
add
mov
dec
jg
pop
add
int3
mov
mov
or
lods
addb
push
shl
mov
fldcw
fsub
aam
inc
xchg
lds
addr16
fwait
and
pop
sbb
lea
add
in
push
pop
add
or
cmpsb
adc
cmpsb
ret
jecxz
not
mov
mov
push
out
inc
enter
jl
movsb
push
xlat
cs
popl
xchg
decl
ror
movsl
js
int3
mov
fwait
ss
hlt
shrl
aas
mov
mov
mov
mov
scas
imul
cmp
mov
cmp
rclb
mov
sti
add
lcall
adc
iret
mov
mov
fistl
insl
cmc
lret
addr16
and
add
out
push
rcll
out
ja
add
add
cmpsl
lods
xchg
sub
imul
fldenv
cmp
daa
adc
xchg
ljmp
lcall
sbb
dec
adc
ret
push
cmp
cmpsb
loope
cmp
aas
xchg
adc
sbb
xchg
nop
ror
push
jae
pop
sbb
mov
or
repnz
btsl
mov
add
sahf
loope
sahf
repz
jl
nop
stc
mov
mov
into
inc
sub
js
and
movsb
jge
addl
pushf
push
repz
stos
aad
scas
sub
jne
rol
repz
xor
pushl
notb
test
je
dec
cwtl
mov
lret
scas
subb
iret
and
sub
mov
mov
xchg
aam
lret
sub
shll
dec
rorl
nop
and
cmp
int
pop
jmp
std
inc
xchg
ds
lea
push
xchg
shl
sbb
or
cmpsl
stc
inc
ficoms
das
les
add
jno
jl
insb
out
lock
push
scas
jns
idiv
mov
fildll
pop
xchg
shlb
jle
push
dec
rcrl
inc
xchg
inc
inc
cmp
or
mov
test
mov
fimuls
insb
popa
cmp
xchg
insb
pop
xchg
movsl
pop
sbb
pop
dec
and
sbb
mov
imul
mov
and
push
fstl
subb
cmpsb
push
add
mov
or
leave
adc
hlt
andb
push
push
popa
gs
mov
inc
sbb
pop
cmpsb
addr16
xchg
push
test
jp
movsl
out
outsb
or
pusha
sub
mov
adc
lret
in
sbb
sub
mov
mov
sub
pop
fxch
imul
repnz
mov
dec
icebp
shlb
stc
outsl
cmp
xorl
pop
mov
or
rorb
roll
outsl
subb
andl
insb
in
jb
and
popa
mov
arpl
jns
add
add
adc
outsl
repnz
dec
sub
stc
sub
mov
adc
and
insb
lcall
das
sbb
push
cmp
data16
into
mov
mov
xor
clc
pusha
repnz
mov
outsl
repz
jnp
or
inc
lcall
loopne
loopne
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
jmp
push
mov
adc
xchg
js
pop
add
ja
push
xorl
inc
pop
add
pop
or
pop
iret
or
cmp
mov
call
pop
adc
in
fdivrl
dec
pop
xchg
fs
or
ja
inc
pushf
les
xchg
iret
movsl
pop
insb
rolb
xor
mov
lea
sub
loopne
inc
int3
pop
scas
or
inc
jle
decb
sub
xchg
outsb
mov
mov
sbb
jno
jl
cld
mov
leave
outsl
test
sub
lds
mov
push
push
fcmove
inc
mov
clc
jmp
mov
lods
ret
faddl
pop
add
scas
jg
movsb
or
sub
leave
sbb
and
xchg
je
aad
adc
ja
sbb
push
std
ficoml
jl
sbb
aas
mov
test
jp
push
in
xor
mov
lcall
aam
rcrb
mov
incl
jmp
ret
gs
pusha
fistpl
cmp
xchg
scas
adc
int
int3
scas
sub
lods
mov
repnz
cltd
adc
bound
adcl
inc
adc
aaa
shlb
adcb
cmc
or
ljmp
push
fsub
pop
bound
jns
sbb
mov
std
hlt
mov
rolb
add
mov
pop
fildl
shl
icebp
popf
idiv
popf
aas
inc
aam
cmpb
dec
push
clc
sbb
fs
test
das
in
fsubrl
aam
ds
mov
xor
out
xor
fistps
push
cmpl
cmpsb
jmp
pop
nop
jp
nop
cld
leave
scas
ret
in
pop
cmpsl
leave
sbb
lods
mov
add
xor
mov
push
roll
pop
popf
push
pushf
dec
sub
ret
jmp
fisttps
pop
cltd
jno
push
scas
cmpsl
test
sti
pop
mov
push
jp
or
mov
loope
sub
push
imul
popa
icebp
pop
cmpl
mov
jl
xchg
adc
out
hlt
push
and
sbb
out
daa
adc
jns
inc
mov
or
cltd
xchg
lret
cmpsl
mov
mov
adc
mov
aam
sti
and
or
push
pop
jb
xchg
mov
jno
cmpsb
int
gs
jge
test
cmpsl
pop
or
mov
and
mov
out
in
mov
fcmovbe
loope
push
mov
clc
test
adc
cmc
out
lods
dec
ds
jns
pop
add
dec
add
in
inc
dec
mov
movsb
push
les
push
test
pusha
dec
mov
mov
pop
pushf
cmpb
stos
rolb
xor
mov
dec
jge
push
mov
xlat
lods
and
push
push
fdivp
push
inc
adc
pop
in
in
dec
adc
sbb
xchg
mov
push
lock
add
cmc
jl
xor
add
jno
xor
cli
jae
xor
fcmove
mov
nop
jl
adc
pop
push
inc
push
cmpsl
arpl
mov
aam
mov
dec
lds
ja
xor
cmpsb
cmc
fildll
fists
jns
in
inc
lock
jb
es
sar
addr16
in
ret
or
mov
fsubl
daa
outsl
popa
popf
loope
lods
sub
jo
popa
and
out
sub
addps
test
jb
mov
inc
lods
jae
hlt
lods
xor
mov
mov
mov
and
adc
sub
mov
xor
mov
adc
adc
pusha
cmp
xor
cwtl
pusha
push
sarl
fdivrl
or
xchg
pop
xlat
sub
inc
pop
fnstenv
clc
dec
xchg
jno
jae
push
pusha
daa
in
mov
sbb
mov
shlb
xor
movsl
adc
pushf
or
sbb
xor
or
orl
mov
mov
cmpsl
add
mov
out
and
push
push
fildll
mov
cld
or
test
stc
push
xchg
pop
mov
mov
xchg
cmpsb
xor
andb
and
rolb
loope
ret
hlt
scas
bound
push
cmp
dec
push
popf
jge
or
or
add
xlat
add
stos
push
popa
mov
push
cmp
out
lret
or
in
jnp
out
ret
cmp
popf
jb
cli
inc
jge
push
mov
and
inc
dec
out
clc
push
xor
stc
dec
adc
inc
notl
dec
and
and
xor
add
mov
xor
jg
test
imul
mov
mov
cs
loope
std
lcall
or
xor
clc
pop
jne
pop
cmpsb
pop
xor
leave
out
das
push
push
ja
lcall
ds
lods
mov
mov
cld
clc
lea
inc
in
es
clc
roll
adc
add
mov
mov
inc
and
stos
mov
out
adc
pop
leave
adc
orb
xor
adc
jg
addl
mov
mov
imulb
jo
xor
fisubs
push
insb
adc
test
cmp
dec
pop
repnz
jg
cmp
mov
insl
scas
xchg
or
xchg
into
sti
pusha
lea
push
faddl
fistps
mov
mov
sub
je
jb
dec
fistl
sarb
aad
xor
push
pop
sub
fld
fnstsw
pop
sbb
push
movl
mov
mov
ljmp
cmp
dec
pop
pop
fildll
dec
mov
cltd
fs
jae
dec
ljmp
aaa
stos
aam
test
ljmp
ss
push
and
mov
cmp
and
sbb
xor
inc
dec
xchg
je
pop
clc
loope
ds
lahf
ja
test
scas
xor
cmp
jo
andb
sbb
pop
bound
xchg
out
cli
gs
das
mov
sbb
std
leave
pop
mov
cmc
lret
call
stos
pop
mov
insb
mov
popa
cmpsb
in
sbb
mov
sbb
fiaddl
aam
inc
movsb
mov
scas
pop
adcl
scas
loopne
mov
cltd
jmp
in
in
inc
ljmp
inc
scas
adc
inc
leave
mov
xchg
adc
push
cwtl
dec
fwait
or
and
stos
in
in
mov
fsts
mov
fcoml
hlt
ret
popf
push
adc
out
jbe
in
cmp
rcpps
pop
test
lock
sarl
loopne
iret
adc
nop
nop
aam
sub
sub
jmp
ss
ljmp
mov
pop
push
add
mov
dec
inc
cld
in
adc
pop
xor
mov
out
mov
inc
lret
lcall
stc
xor
push
pop
mov
jne
addr16
xor
jmp
cmp
adc
mov
test
xchg
repz
xchg
pop
pusha
cmp
jecxz
push
cwtl
cmpsl
push
push
jbe
stc
sbb
jbe
int3
push
jg
pushf
in
bound
fs
daa
das
or
cmp
or
mov
mov
xor
pop
xchg
int3
xchg
mov
pop
rclb
sti
cmp
mov
dec
bnd
jo
leave
bound
ret
fdivrl
cmpsl
mov
pop
mov
in
popf
cld
test
loope
jle
or
out
repnz
fnstenv
mov
add
add
sbbl
cltd
stc
scas
pop
xchg
adc
dec
mov
arpl
xchg
loope
les
and
mov
in
ror
shrb
bound
jecxz
push
cmp
dec
cmp
or
adc
bound
hlt
cmp
fcompl
adc
lock
jle
and
jnp
les
adc
andb
les
push
push
iret
test
jle
xchg
pop
push
in
push
sbb
jmp
stc
xchg
adc
clc
adc
add
jmp
cmp
xor
das
dec
xchg
sbb
jo
test
int
into
xchg
cmp
rcrl
inc
int3
stc
out
xchg
push
cmpsb
pop
pop
imul
mov
and
pop
jge
jecxz
aam
ljmp
aaa
aad
daa
mov
jb
cltd
js
lahf
fldt
jge
lcall
push
or
lock
je
xor
inc
insl
sbb
mov
mov
xchg
sbb
mov
and
cld
or
repnz
and
popf
sub
repz
add
inc
lods
sub
lods
fnstenv
inc
add
dec
xchg
xchg
testb
shlb
ret
shlb
ret
iret
lcall
nopw
insb
push
or
test
push
arpl
sbb
shl
outsl
inc
mov
xchg
cmp
cmp
ljmp
iret
test
inc
aas
nop
add
cld
pop
xchg
mov
xor
sbb
mov
clc
mov
dec
inc
lcall
jl
fwait
push
push
push
mov
popf
lret
loope
jmp
xchg
inc
addr16
fldl
into
mov
and
das
test
push
decl
adc
sti
insb
ds
lds
xchg
and
ljmp
dec
cmp
lret
arpl
and
cmpsl
mov
lods
mov
pop
jl
sbb
mov
sub
std
movsb
roll
sbb
dec
mov
cmp
xchg
aas
jp
sbb
iret
dec
adc
mov
and
test
xor
cmp
out
sbb
or
mov
into
insb
fstl
or
xor
and
mov
hlt
cmp
gs
xor
fisttpll
mov
sbb
bound
pop
add
push
inc
ret
out
and
xchg
stos
push
mov
lret
jecxz
out
pop
inc
adc
cs
es
cld
sbb
popa
aas
pop
shr
adc
xor
ljmp
aas
push
rol
sarl
or
lods
movsb
mov
out
push
stos
out
je
xchg
inc
add
sub
xchg
int3
xchg
jg
jle
pop
add
pop
imul
sbb
pop
aam
push
adc
mov
or
push
inc
int3
dec
ror
stos
popa
jecxz
cmp
push
or
push
add
dec
out
mov
insb
dec
pop
mov
sub
xchg
sbb
mov
ljmp
lcall
loope
pushf
dec
fildl
loope
lcall
xchg
pop
std
leave
push
adc
mov
xor
out
sub
xchg
cmpb
mov
inc
incb
xor
fiadds
adc
mov
dec
inc
stos
or
xlat
adc
mov
movsb
stos
pushf
scas
mov
inc
push
ds
add
and
cli
lods
call
lock
sahf
xor
push
lcall
mov
rolb
shrb
lds
mov
mov
jae
loopne
mov
fimuls
mov
fdivr
cld
dec
std
dec
dec
sub
js
stc
subb
dec
cmp
lds
lahf
iret
sbb
ljmp
lea
add
shll
push
jnp
xchg
ds
cli
or
mov
fbld
pushl
testb
adc
lahf
lock
andb
lcall
inc
ja
cmpsl
mov
xor
mov
xchg
xchg
lods
test
stos
cmp
lock
std
mov
scas
subb
ss
popl
or
push
cwtl
pop
push
add
adc
out
sub
add
je
sti
aaa
popf
sahf
push
inc
jmp
jge
fwait
cltd
xchg
mov
stc
sbb
mov
mov
push
inc
ljmp
xchg
pop
xchg
out
fwait
mov
adc
pop
push
wrmsr
or
loop
sar
lret
ret
cmc
push
or
mov
jge
pop
fmull
lods
pop
cmpsb
loopne
sbb
je
jmp
clc
clc
je
or
or
mov
inc
outsl
mov
mov
pop
test
xor
xchg
mov
mov
sbb
jbe
sbb
inc
sbb
test
mov
jl
subl
cmp
or
dec
imul
xor
and
mov
add
push
pusha
loop
cmp
dec
lahf
pop
shrb
add
jle
aad
mov
cmp
xchg
sub
cltd
ds
loop
in
xchg
inc
pop
mov
cmpsb
mov
dec
lcall
in
jp
mov
xor
pop
push
dec
mov
cmp
js
jne
jbe
enter
pop
xor
pop
jecxz
stos
mov
in
dec
shl
add
pop
mov
pop
mov
pop
mov
push
mov
inc
xchg
and
stc
insl
inc
test
mov
cmpsb
inc
call
ret
jmp
stos
sarb
jns
loopne
push
mov
inc
jecxz
cmpsb
test
mov
inc
push
sub
fidivs
cmp
aad
or
lar
jae
xor
scas
xor
cmpsb
sarb
pop
cmpsb
stos
fcmovnbe
xor
inc
clc
daa
or
sbb
fwait
xor
jge
xchg
out
fimuls
jge
mov
ja
add
add
lea
movsl
test
data16
rcrb
push
popf
in
imul
inc
pop
cmp
pop
mov
push
and
test
cltd
shrl
sbb
mov
dec
mov
std
adc
movsl
int3
fdivp
out
mov
ret
push
inc
or
push
mov
cld
imul
fcmovnb
ret
push
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
jmp
cmpsl
icebp
cmp
pop
dec
arpl
xor
adc
xchg
sbb
add
mov
pop
or
bound
fisubrl
xlat
sub
hlt
cmpsl
lds
test
adc
movsb
xchg
add
fsubrl
cltd
sub
arpl
jno
jns
inc
ret
inc
outsl
xor
cmovae
aaa
outsl
or
xchg
aas
cltd
jbe
clc
lea
mov
insl
pop
std
pusha
jbe
jno
repz
rcrl
vcmpsd
inc
sbb
inc
inc
mov
mov
stos
mov
je
hlt
mov
sbb
fcoms
or
fucomip
or
iret
cmpsl
xchg
popf
lcall
je
sbb
fists
cli
scas
xchg
xchg
mov
lea
arpl
repz
inc
out
inc
shrb
mov
pushf
or
aam
inc
or
js
dec
mov
decl
pop
and
stos
ja
out
cmp
jg
sub
clc
sbb
outsl
sarl
enter
xchg
push
and
cmpsl
jno
jmp
xor
dec
pop
rorb
movsl
outsb
mov
cmp
or
aad
jg
mov
fwait
xchg
push
test
js
or
and
push
sub
or
pop
clc
out
fdivrl
or
xor
push
adc
data16
and
fs
ds
mov
daa
sahf
fcomps
lret
sub
fbld
fwait
mov
sbb
xchg
xchg
sbbl
push
insl
and
inc
ljmp
xor
or
dec
jne
es
jl
mov
mov
das
nop
pop
pop
call
loop
js
mov
inc
ljmp
ficompl
shufps
hlt
jmp
add
fcom
mov
jbe
xchg
scas
dec
shr
and
popf
cmc
mov
jo
call
jmp
lods
aas
pop
roll
xchg
hlt
mov
sub
pop
nop
pop
dec
mov
popf
mov
jle
mov
dec
mov
in
xchg
rorl
test
jle
ss
jns
arpl
hlt
mov
sub
pop
cmp
lea
jl
orb
push
and
and
enter
lock
imul
push
call
icebp
mov
ret
ffreep
jnp
and
inc
scas
xor
insb
in
jns
adc
cmp
sub
mov
mov
cmp
pop
mov
cwtl
sub
inc
push
js
addb
add
mov
test
pop
mov
stos
push
pop
sub
push
movsb
xchg
imul
scas
jl
jnp
xchg
push
jb
xor
pop
popf
inc
rcll
sbb
cltd
pop
sarl
push
je
inc
pop
fwait
mov
dec
push
mov
pop
cmpsl
mov
stos
in
das
add
xchg
xchg
jge
out
je
fsubs
fld
xchg
cmp
cmp
pushf
push
lahf
push
lret
mov
xchg
dec
aaa
mov
jne
enter
pop
mov
mov
mov
sbb
dec
leave
sbb
in
iret
dec
call
jo
push
in
xchg
lds
cmp
lods
mov
setl
ret
mov
das
add
push
popa
and
test
leave
cmp
mov
xchg
and
enter
mov
adc
mov
aaa
mov
enter
imul
ret
pop
and
cmp
and
insb
popa
sbb
or
scas
sbb
mov
mov
hlt
cmp
push
jl
or
mov
adc
mov
repz
icebp
mov
jecxz
cmp
push
cmp
push
xor
fnstcw
mov
push
xchg
fcoms
test
lock
clc
cmp
inc
out
popf
jge
flds
outsl
or
adc
rclb
push
pop
add
das
cmpsl
int3
sub
jge
xor
inc
roll
mov
sbb
es
mov
test
mov
je
loope
jg
bound
jbe
stos
lahf
sub
cmp
stc
xchg
xor
or
sub
inc
adc
pop
fcomp
mov
add
fidivrs
lods
lds
xchg
sub
stos
mov
xor
pop
sbb
xchg
inc
imul
lret
fisttpl
sub
out
hlt
push
add
aam
lods
repz
fxch
xor
int3
and
outsb
or
sahf
push
jnp
cltd
ljmp
pop
loopne
inc
fimuls
test
in
pop
adc
insb
ss
loope
movsb
push
bound
test
inc
push
cmp
fbstp
jl
sti
and
push
xlat
jle
fidivrs
dec
aaa
aaa
sar
pop
movsl
lret
dec
push
mov
scas
fnsave
mov
dec
pop
cwtl
adc
js
and
addr16
cld
inc
lahf
cmpsl
rorl
add
xor
pop
ljmpw
ficoms
mov
test
es
cmp
daa
cmp
lret
adc
mov
fdivp
pop
inc
loope
add
fwait
pop
addl
and
jmp
pop
push
insl
mov
mull
add
fldt
jg
pop
or
mov
xchg
scas
ljmp
mov
test
icebp
repz
leave
repnz
into
in
lods
cli
cs
pop
sahf
jge
jnp
or
pop
pop
loope
or
imul
xor
test
mov
adcb
iret
stos
xor
add
add
movsl
mov
jp
inc
xchg
lods
movsb
jp
cld
pop
lahf
mov
gs
push
push
out
jns
test
push
test
hlt
mov
add
aaa
movsb
sub
aam
hlt
mov
fldl
aam
imul
mov
sub
mov
inc
pushw
jo
js
out
or
out
ret
add
iret
cmpsl
xchg
sbb
les
push
jne
stc
mov
push
mov
jb
and
mov
sarb
test
cwtl
loop
add
dec
jo
jge
fwait
lret
mov
loope
pop
mov
cmp
lret
cmp
sahf
mov
push
xchg
insl
out
mov
push
mov
movsl
xchg
xchg
cmp
outsl
jmp
stos
adc
cmp
cmpsb
lods
jp
popl
adc
jle
imul
std
jns,pt
jno
pop
jbe
mov
data16
or
movsb
lcall
push
lret
sbb
inc
mov
xchg
in
out
xor
or
mov
fiadds
mov
imul
call
cld
push
push
mov
test
xor
push
jns
and
jle
mov
sbb
mov
test
sub
shll
insl
push
loop
test
rclb
dec
adc
or
pop
add
ljmp
sub
cmp
mov
add
sbbb
and
ds
imul
pop
push
dec
leave
loope
cmp
adc
jnp
out
js
push
fldt
mov
int3
pop
adc
and
or
mov
mov
cmpsb
pushf
push
mov
jae
add
mov
mov
inc
xor
mov
mov
cmp
jecxz
push
push
xchg
ljmp
out
push
dec
out
unpckhps
shl
jmp
mov
mov
ljmp
xchg
mov
jmp
push
jnp
icebp
imul
arpl
fisubl
mov
adc
xchg
negb
cmpl
int
xor
inc
inc
xchg
fcompl
lods
push
sub
jp
not
push
or
cs
imul
cmpsb
outsb
jg
out
and
clc
lret
push
inc
push
pop
sbb
orl
jno
mov
cmp
movsl
pop
ret
add
out
dec
int3
lea
stc
dec
rclb
lods
scas
sub
fdivrl
jle
loope
sbb
pop
imul
add
es
pop
push
enter
xlat
sbb
sub
and
js
and
aaa
insl
adc
outsb
ss
lea
ret
inc
jmp
pusha
inc
out
ret
mov
mov
sbb
pop
adc
mov
xor
jge
or
mov
dec
mov
sub
sub
std
mov
dec
push
sub
pop
lods
add
mov
adc
popf
jnp
sub
cmp
or
sub
dec
jmp
sub
ljmp
dec
test
je
lret
pop
xchg
cmpsb
cli
inc
aas
xchg
not
xor
out
cld
inc
dec
outsl
sahf
xor
fisttpl
adc
repz
pusha
inc
push
fucomip
out
push
add
push
lock
lahf
fs
adc
jnp
sbb
fdivrp
mov
push
int
in
sub
das
mov
mov
cmp
jne
iret
cmpsb
mov
cmp
repnz
sub
test
test
idiv
lret
cwtl
adc
push
mov
xchg
ss
dec
mov
rorb
inc
pop
adc
and
movsb
inc
fsubrs
mov
pop
inc
sub
rcll
add
aas
sbb
push
js
mov
inc
rcrl
mov
iret
les
push
add
ret
mov
cmp
pop
dec
das
pusha
adc
jnp
outsb
notl
popa
mov
mov
clc
sub
cwtl
jnp
scas
mov
das
scas
decl
inc
dec
gs
ret
imul
mov
push
cmp
push
mov
jno
mov
cmp
cmp
icebp
ja
rcll
imul
cmpsb
in
jge,pn
mov
mov
inc
add
bound
test
fisubrl
testl
cmpsl
mov
jo
lock
pop
int3
mov
aam
add
add
sbb
mov
stos
cwtl
sbb
xor
or
scas
xchg
cld
mov
cs
dec
sub
ret
shll
adc
loopne
mov
xchg
inc
jle
xor
sub
shll
subb
rclb
ss
pop
xchg
das
idivl
fsubr
push
fld
out
out
push
add
jne
mov
xchg
filds
shlb
jo
jle
mov
jns
es
sub
adc
add
xor
or
or
add
imul
out
repz
sbb
aas
bound
std
dec
loopne
jns
mov
cmp
mov
or
repnz
pop
mov
loop
cmpsl
test
movsl
mov
or
gs
push
testb
fstpt
sub
and
loop
enter
in
dec
jnp
ret
shrb
ror
pop
ss
sub
mov
push
inc
pop
sbb
sub
mov
imul
pop
mov
push
mov
xchg
push
cmp
mov
jl
dec
js
and
stc
popf
jg
and
fld
loopne
mov
pop
lods
cmpsl
fidivrs
sbb
lahf
sub
mov
int
lods
loop
mov
orl
sub
mov
ds
lahf
push
sbb
mov
push
movsb
xchg
inc
push
mov
lret
xor
orw
inc
cltd
pop
daa
add
nop
add
leave
pop
ljmp
xchg
shr
hlt
dec
mov
add
insl
pop
test
dec
loope
insl
pop
daa
mov
mov
xchg
filds
and
add
mov
stos
push
pop
push
out
cs
testl
insl
dec
cwtl
xor
dec
fwait
mov
sub
adc
xor
and
insb
aad
addr16
in
adc
das
pop
inc
and
jno
loope
imul
push
or
add
into
movb
aas
out
mov
cmp
call
das
sub
jecxz
leave
into
xlat
repz
xchg
rorb
fstl
cmp
adc
xor
push
in
mov
enter
or
adc
jnp
mov
push
fsubrs
inc
in
gs
inc
popa
push
rolb
es
sahf
arpl
out
sti
dec
sti
lret
pop
add
loop
inc
jmp
sub
iret
jp
inc
daa
xorb
imulb
sbbb
adc
cld
sub
pop
jnp
call
in
stos
push
jle
rolb
sbb
std
add
sub
push
imul
push
jne
mov
cli
mov
and
rclb
mov
lcall
xchg
xor
cmovnp
arpl
or
cli
shrl
pop
gs
sbb
in
jb
jbe
push
pop
push
sub
test
add
insb
roll
pop
sbb
das
std
and
dec
or
mov
dec
adcl
fcmovbe
pushf
push
dec
addr16
stos
mov
test
mov
std
loop
sbb
jecxz
decl
sarb
je
std
jns
and
out
out
pop
cli
lea
jmp
pop
cmp
or
xor
and
loope
test
out
insb
pop
mov
dec
push
test
inc
mov
mov
movsb
cltd
mov
cltd
cltd
adc
cs
mov
popa
and
adc
adc
mov
out
cmpb
push
addr16
xchg
pop
xchg
test
push
xor
pop
movl
insb
nop
xor
loop
stos
xchg
pushf
jno
jb
cli
das
nop
sub
gs
xchg
in
jl
imul
filds
imul
test
ret
dec
sbb
push
or
test
mov
mov
nop
lea
hlt
fnstenv
sahf
ds
push
pushl
push
push
call
mov
jmp
push
rcrb
and
inc
outsb
xchg
or
aas
mov
mov
mov
cli
pop
pop
push
mov
movsl
mov
lods
inc
aas
shl
iret
loop
ret
dec
clc
sahf
add
xchg
imul
fdivrp
inc
popf
pop
pop
loop
cmp
sbb
dec
dec
sub
pop
and
leave
mov
jo
les
into
lods
bound
mov
cld
cmp
les
lds
leave
aas
dec
mov
or
fiadds
dec
lea
stos
mov
stos
xchg
adc
aad
cmpsl
xchg
inc
das
mov
jecxz
push
lahf
addl
testl
dec
fidivrs
jne
call
movsl
lahf
cltd
sbb
leave
jno
inc
mov
jns
cmp
imulb
mov
jo
pop
dec
sbb
nop
std
out
stc
dec
pop
or
std
sub
add
aad
jg
dec
inc
mov
pop
xchg
leave
rolb
sub
stos
fsubs
add
imul
out
cmp
adc
xor
mov
cmc
mov
insl
sub
pop
adc
sub
adc
sub
cmp
in
push
push
xchg
lcall
xor
out
pop
xchg
push
fidivl
jae
sbb
cmpsl
pop
enter
inc
inc
neg
mov
mov
and
dec
add
add
sub
imul
xor
ficoml
sub
mov
pusha
mov
repz
jp
mov
adc
test
sbb
mov
sbb
and
mov
sbb
xlat
dec
jo
pusha
add
cmp
fwait
in
cmpsl
add
and
adc
mov
mov
call
or
adc
leave
lret
stos
jnp
popa
inc
lret
mov
pop
in
mov
pop
xor
push
pop
repnz
repnz
mov
rclb
sub
pop
mov
lea
mov
ret
jl
lret
and
stc
xor
xor
sbb
cld
adc
inc
xchg
daa
shr
rclb
push
mov
add
xchg
add
test
stc
and
bound
repnz
imul
or
arpl
in
clc
iret
mov
or
bound
movsb
xor
xchg
xor
pop
test
aad
mov
mov
push
and
xor
cmp
movsb
cmp
push
stos
out
insb
inc
jnp
es
cmp
ja
mov
imul
push
cwtl
xor
xchg
imul
daa
xchg
xorb
arpl
jo
faddl
mov
xchg
xchg
xchg
clc
push
mov
mov
fmulp
hlt
push
cmp
mov
in
jmp
lods
fiaddl
jns
cmp
test
mov
jo
push
xchg
push
sub
jne
fsubrl
push
sub
sub
arpl
xchg
ja
and
std
sub
imul
add
lods
fnstcw
jb
popa
imul
adc
xor
adc
mov
adc
sbb
cwtl
or
std
xchg
inc
cmp
jge
inc
ss
js
es
xchg
movsb
sbb
outsl
mov
inc
out
inc
jb
fwait
int3
inc
imul
xchg
mov
jp
and
mov
in
nop
push
ljmp
jg
iret
xor
add
jns
and
fldt
pop
pop
sbb
jl
fidivs
test
fists
rcl
mov
stos
pop
xchg
mov
std
xchg
cmpsb
push
inc
cli
dec
movsb
orb
jle
pop
movsl
dec
cmp
mov
jp
pop
adc
mov
cmpsl
cs
pop
mov
jnp
jno
scas
xor
sarl
mov
sub
test
mov
inc
cmp
shl
xor
ret
into
out
push
enter
cmp
fmull
sub
sbb
icebp
add
sbb
xchg
fdivl
jne
push
testb
out
push
mov
mov
push
test
jns
push
pop
sbb
sbb
call
push
in
mov
aas
ja
loopne
bound
push
and
popf
inc
imul
or
test
push
sub
scas
jecxz
pop
lret
bound
bound
add
stos
ret
mov
mov
lret
das
sbb
fstpl
in
dec
test
clc
repnz
cmpsl
and
xlat
pop
add
imul
test
dec
fisttpl
push
push
cli
xlat
in
inc
out
bound
fnstsw
and
loop
xchg
mul
repnz
std
int
fistps
jmp
loopne
pop
dec
fisubrs
adc
cmpsl
pop
mov
cmp
and
mov
in
fwait
cli
jb
out
pop
cli
bnd
push
push
jp
sub
mov
es
cmpsb
xchg
repnz
xor
dec
orb
int3
xchg
push
aaa
lret
sub
mov
ret
hlt
jno
aam
pop
cmp
pop
cmp
je
imul
jl
fisttpl
cmp
dec
je
outsb
call
loope
shll
xchg
stos
push
divb
mov
ror
es
mov
addr16
jne
cs
rorl
call
inc
dec
mov
pop
inc
sbb
insl
les
sahf
int
push
adc
xor
ds
mov
jns
notl
mov
inc
cmc
clc
cld
mov
data16
mov
xor
popa
dec
movsl
ljmp
xor
les
pop
pop
mov
test
mov
clc
inc
lock
pusha
sbb
pop
jmp
sub
icebp
mov
cmovp
out
dec
cs
lahf
sbb
stc
push
lcall
imulb
or
mov
push
and
hlt
mov
add
add
in
mov
mov
inc
in
mov
loopne
cli
orl
pop
stos
lret
and
movsb
push
call
xor
jl
adc
aam
adc
rcl
sub
xor
pminsw
and
mov
and
xor
shrb
push
loopne
dec
gs
cmp
data16
std
out
or
cmp
dec
mov
or
and
push
cmpl
shlb
and
stos
xor
dec
sbbb
jecxz
and
mov
xchg
mov
mov
pop
negl
ljmp
fcomip
sub
dec
daa
mov
lahf
test
pop
mov
ret
inc
and
cltd
out
xor
aad
push
lods
call
mov
xor
cmp
and
dec
sub
pop
pop
mov
push
jg
testl
adc
xchg
dec
outsb
mov
scas
je
lcall
pop
jp
lods
pushf
mov
dec
add
lods
enter
add
ljmp
imul
scas
sbb
xor
neg
push
mov
xchg
cmpsl
mov
out
jg
lods
mov
das
jmp
pop
mov
add
std
stc
js
jae
out
and
push
popa
cmp
repnz
aam
jno
arpl
push
fs
repnz
sbb
and
dec
xchg
incb
incl
lahf
adc
in
stc
push
xchg
fisubs
inc
testl
out
inc
lea
push
das
add
call
inc
imul
movsl
xchg
aaa
vpsadbw
daa
lock
pop
mov
jo
xchg
in
push
gs
bound
pop
xor
ja,pt
sbb
push
dec
repnz
inc
xchg
xor
cmp
scas
cmc
xchg
xor
lds
stc
mov
mov
sbb
ljmp
bound
dec
mov
inc
test
jbe
adc
cmc
fdivl
sbb
fisubs
add
sarl
mov
sti
mov
mull
cmp
out
jnp
dec
jb
inc
test
ja
outsl
xchg
cmp
cwtl
repz
lret
lret
or
aaa
ja
loope
mov
repnz
cwtl
jecxz
cmp
mov
arpl
mov
pop
cltd
mov
lock
inc
add
testl
dec
int3
sub
dec
mov
ss
inc
jns
dec
fisttps
sbb
arpl
icebp
div
test
xchg
mov
pop
and
sbb
mov
ret
in
cli
push
and
lock
test
mov
stos
cwtl
fbstp
ret
dec
nop
mov
jge
lea
decb
je
daa
lods
inc
mov
or
adc
push
jae
and
push
or
mov
fdivrs
lods
dec
push
mov
jne
pop
cvtps2pd
cwtl
push
rcrl
mov
sbb
orl
pusha
cmp
sbb
adc
lcall
movsl
lcall
pop
movsb
jnp
lret
add
lea
pop
and
hlt
xchg
cld
adc
pop
dec
push
or
cltd
jg
sub
rcll
xchg
idivb
pop
mov
daa
dec
addb
popf
mov
xlat
sar
pop
and
push
das
loope
test
mov
mov
cld
shll
lods
shlb
mov
dec
fmul
fs
xor
cmpsl
xchg
rolb
into
mov
push
pop
shr
lods
cmp
xor
and
push
insl
imul
sti
dec
or
stos
inc
xor
mov
loop
and
les
push
je
int3
cmc
and
sahf
fldcw
dec
popf
adcb
scas
outsl
xor
addb
cmp
fnstenv
les
fcomip
xchg
jmp
sti
jmp
ret
or
addr16
push
test
negb
mov
clc
hlt
les
scas
add
fldcw
mov
popf
mov
jae
je
loopne
mov
call
test
jge
mov
sub
or
sbb
jno
jo
sti
test
pusha
jmp
mov
lea
movsb
push
sub
bound
enter
fcomps
jb
pop
lret
push
and
pop
or
sub
shl
xor
xor
aaa
jb
loopne
repnz
arpl
xchg
test
sbb
mov
clc
xchg
test
jnp
in
scas
and
mov
sub
lock
stos
mov
popf
imul
jmp
or
arpl
pop
inc
cmpb
jb
imull
imul
jo
lock
addr16
in
scas
xchg
inc
cmp
sbb
psrld
jg
call
fisttps
ret
ds
icebp
push
mov
fmuls
ret
jp
rcrb
xlat
iret
fldenv
push
push
nop
cmp
dec
push
mov
loop
push
xchg
pop
cmc
pop
and
pop
sbb
jl
ficomps
or
ret
mov
sbb
dec
fisubl
cs
fistpll
std
movsl
das
mov
ds
mov
push
sbbl
lock
std
insl
and
test
push
inc
es
adc
out
sub
mov
cmp
pop
dec
sub
pop
shll
test
and
push
clc
aas
adc
pusha
ret
fisubrl
dec
add
xor
mov
push
fadds
movsl
push
mov
adc
jo
outsl
cmp
mov
xlat
repz
and
xchg
add
jge
xor
jecxz
fstps
imul
imul
xor
push
mov
jl
movsb
mov
cmc
nop
pop
popl
jecxz
shll
mov
leave
cmp
xchg
fisubrl
jnp
or
cs
pop
sub
ret
lcall
or
cmp
repz
fwait
jo
loopne
in
dec
inc
inc
push
mov
sub
push
and
ret
xchg
mov
aaa
fs
arpl
sbb
sub
jb
in
or
lock
mov
mov
inc
jno
lock
dec
addb
mov
call
enter
imul
insl
pop
pop
dec
gs
jmp
dec
push
cmp
jle
mov
ret
and
and
mov
inc
mov
jnp
adc
mov
jle
mov
and
or
pushf
pop
mov
out
jae
xchg
aam
subl
push
push
aam
sbb
xchg
popf
jns
xchg
rclb
cld
mov
mov
scas
xchg
outsb
rcr
push
ret
stos
test
adc
fidivs
bound
mov
in
mov
fbstp
sbb
dec
test
jns
ret
loope
pop
push
dec
outsb
sti
cld
push
shll
mov
pop
mov
xor
cmpsb
ja
les
mov
adc
sbb
jmp
rolb
xor
rorb
pop
sbb
das
xlat
sub
shld
jnp
push
bound
or
lahf
icebp
cld
xchg
sbb
bound
xchg
dec
mov
push
insl
mov
jmp
and
push
data16
push
fldt
jl
ljmp
xor
mov
push
fidivrs
inc
stos
cmpsl
in
dec
inc
fistl
loope
popa
cmpsb
stc
test
xor
arpl
insb
adc
jns
mov
push
fwait
mov
les
pop
test
addr16
cmp
dec
push
inc
xchg
fistl
enter
stc
fidivs
lret
stc
pop
pop
sbb
pop
pop
scas
ret
xchg
cli
pop
mov
cld
in
pop
fs
inc
scas
std
loop
push
andl
aam
mov
enter
ja
lcall
mov
mov
and
cmp
cmp
in
stos
bound
sbb
call
pop
jp
xlat
xchg
cmp
sbb
fcmove
enter
mov
and
xor
je
xchg
mov
jo
fcomps
push
mov
je
icebp
push
mov
mov
mov
mov
push
push
jmp
push
xchg
stos
les
ret
aas
mov
push
lcall
stos
fldcw
push
test
mov
fisttpll
mull
insl
sub
or
in
imul
dec
fcoms
pop
lds
mov
stos
inc
test
dec
jbe
ror
pop
cmpsb
and
cmpsb
push
add
rcr
jae
add
pop
mov
cwtl
ja
push
ja
jmp
xchg
sub
das
repz
pop
loope
dec
pop
cmp
out
pop
jns
fisttpll
cmc
inc
daa
add
or
jge
std
btc
insl
or
rcl
mov
nop
mov
jle
loopne
cld
in
dec
add
mov
dec
or
test
push
push
push
inc
mov
ds
jmp
push
cmpsb
nop
sbb
jp
push
jbe
fisubrl
insb
jg
hlt
je
fildll
add
or
lea
mov
je
outsb
int3
lock
jne
sub
xchg
mov
movsl
and
sub
mov
iret
mov
mov
xchg
outsl
jge
xchg
imul
jo
test
lods
int
pop
sub
filds
cmp
out
aas
mov
inc
lahf
sub
lds
cmp
or
loopne
jb
pusha
push
loop
in
incl
mov
in
mov
jbe
stos
daa
lret
push
and
jecxz
sub
xor
push
adc
or
pushf
inc
pop
mov
andl
bound
cs
push
xor
aaa
subb
outsb
daa
adc
push
mov
and
orl
cmp
add
lock
outsl
mov
cwtl
movsl
lods
push
pop
mov
rclb
xchg
cmpsb
mov
add
jo
ja
cmpb
sub
enter
adc
pop
jle
je
jbe
push
add
mov
lds
mov
sahf
mov
jb
shl
movsl
mov
cmp
outsb
sbb
je
stos
outsb
cmpsl
ljmp
subb
push
cmp
hlt
push
fbld
mov
add
and
mov
cli
ljmp
dec
popf
mov
xchg
inc
stos
xchg
mov
inc
imul
adc
mov
add
and
hlt
enterw
das
repnz
xor
adc
pop
pop
adc
jae
mov
dec
testb
orl
mov
sbb
mov
jl
stos
shl
pop
nop
push
mov
into
xor
je
jmp
jae
mov
cmpsb
popf
jmp
mov
shrb
sti
clc
fsubl
xor
addr16
mov
test
out
in
out
bound
leave
nop
sub
sbb
test
ss
or
mov
push
call
xor
out
shlb
icebp
inc
jp
movsl
xchg
or
mov
insl
and
fdivrp
ljmp
insl
adc
sub
add
or
xor
push
adc
stos
xchg
loopne
stos
jmp
ficoml
mov
cld
mov
mulb
cmp
sub
and
out
incl
mov
jnp
daa
xchg
filds
sbb
mov
fistps
pop
aam
xor
jae
jmp
cmc
fdivl
push
pop
mov
and
daa
das
xchg
leave
repz
in
lret
jmp
jo
xchg
mov
test
cmpl
or
xlat
jne
lret
pop
enter
mov
pop
js
mov
ffreep
in
divl
or
inc
add
or
imul
mov
iret
cmp
jmp
rcrb
cmp
mov
dec
push
jg
xchg
aas
adc
jl
xchg
mov
dec
inc
adc
mov
shr
xchg
sbbl
push
data16
mov
mov
lret
sbb
xchg
pop
adc
aad
xor
fsts
nop
faddl
and
or
xor
bound
xlat
sarb
pop
test
push
enter
jnp
cltd
and
bound
pop
fcom
pop
and
mov
pusha
jne
cmc
lods
dec
sahf
mov
jmp
add
push
mov
fsubl
mov
lods
inc
aas
mov
scas
dec
and
sub
pop
push
mov
dec
insb
push
xchg
cmpsl
aaa
outsb
lea
and
pop
mov
in
jno
xor
sub
daa
sbb
jecxz
dec
cmp
fsubp
jb
fcomps
jp
jge
dec
push
adc
jne
sub
outsl
xor
jb
loop
stc
push
lods
repnz
in
push
xor
rorl
adc
leave
dec
mov
jns
xor
pop
pop
or
addb
sbb
and
out
cltd
push
push
jmp
in
xorb
jl
loopne
jns
xchg
cmovle
xchg
or
je
xor
cld
dec
insl
dec
and
inc
out
mov
ret
test
xor
imull
sbb
jns
cltd
in
xor
fidivs
sahf
into
and
gs
and
add
lods
cmpsb
push
pop
roll
inc
jp
hlt
mov
cmc
mov
lea
in
xor
and
movl
mov
les
aad
leave
xchg
add
dec
nop
hlt
jne
mov
mov
dec
imulb
cmp
mov
push
dec
or
orl
or
ds
call
filds
fadds
inc
shlb
cltd
cmp
jns
out
stos
jns
cmc
jle
push
adc
test
mov
addb
sbb
movsl
add
mov
mov
xor
fcmovbe
iret
fstpl
xchg
sub
xor
mov
sti
ss
dec
add
int
xor
mov
xchg
mov
jo
mov
mov
ds
xor
or
add
xchg
push
sarl
and
jns
movsb
fcmovnu
sub
gs
outsb
sub
jo
lock
test
mov
mov
jb
icebp
es
inc
sbb
hlt
add
ret
cmp
lods
add
push
popf
sahf
incb
pop
fcomp
jns
out
inc
jmp
or
mov
push
dec
das
pop
jns
sub
mov
out
shrl
fs
push
mov
stos
dec
lea
lret
stos
pop
inc
stos
inc
fwait
lcall
mov
mov
je
dec
enter
sbb
and
jg
bound
sub
rolb
popa
loope
mov
inc
cwtl
xor
shll
int3
outsl
mov
push
insl
xlat
das
jns
bnd
shlb
push
fimull
lcall
iret
cwtl
pop
cmp
cmp
cmp
jo
mov
xchg
insl
sti
add
insb
cmp
leave
imul
mov
pop
rcr
ja
loop
fcompl
push
popa
in
and
shr
sahf
clc
stos
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
jmp
pop
jge
lds
hlt
inc
rol
add
enter
xchg
das
mov
mov
mov
mov
mov
pop
rcrb
jp
jmp
je
xor
pop
dec
lcall
stos
or
fldl
movsb
xchg
mov
mov
sub
stos
mov
fmull
pop
imul
or
adc
mov
cltd
mov
inc
pop
sub
insl
add
cli
aad
xor
or
aaa
sub
push
pop
mov
cmp
xchg
adc
xor
movb
ret
adc
gs
cmp
push
movsl
jg
test
out
ljmp
jle
push
pushf
in
mov
mov
or
test
mov
mov
jge
push
les
loop
mov
repz
lea
dec
sub
pop
clc
or
xlat
les
jb
fisttpl
pop
dec
rorl
out
add
mov
pop
jmp
fldt
lahf
jl
sti
or
and
fbld
push
insl
insb
adc
pop
das
lahf
cmp
mov
mov
into
and
loope
lock
inc
xor
push
dec
outsl
loop
xorb
jbe
out
mov
push
ja
lret
or
in
mov
jge
mov
les
mov
mov
mov
xor
push
cli
lret
mov
or
push
pop
mov
sbb
cmp
test
ds
das
xor
fdivrl
fwait
mov
mov
ficoms
xchg
lods
ror
ja
mov
xor
jg
outsb
outsb
push
clc
pop
xchg
and
xchg
movsb
cmp
jne
xchg
and
clc
push
and
cli
xchg
cmpsl
dec
mov
cli
je
in
into
cmp
xchg
aaa
imul
daa
adc
push
pushf
in
lock
or
push
test
mov
test
data16
ss
mov
popl
mov
enter
fidivs
jmp
mov
mov
inc
bnd
cwtl
je
test
mov
xlat
loopne
xchg
xchg
cmpsl
dec
ficoml
mul
cmp
or
icebp
mov
jecxz
popa
xchg
stos
dec
aas
xor
insl
cmp
shrb
and
jecxz
xchg
aam
shl
inc
sti
pop
mov
in
cs
bound
push
daa
daa
xchg
push
xchg
pop
push
mov
aam
xor
mov
pushl
test
sub
sbb
mov
movsb
cld
outsb
add
inc
enter
mov
fstpl
mov
test
xchg
inc
lods
lods
mov
ret
insb
mov
jno
fldlg2
xchg
inc
out
addr16
aaa
cmp
inc
outsb
aaa
jmp
into
aaa
sbb
sbb
mov
dec
or
out
das
add
arpl
mov
fsub
jecxz
out
sbb
fadd
pop
sub
sbb
adc
sahf
add
pop
les
add
xchg
add
jle
les
push
dec
repnz
sbb
jne
mov
dec
cli
lods
jecxz
ljmp
ds
xlat
mov
jbe
pushw
lods
lret
data16
cwtl
cmp
and
add
out
xadd
test
pushf
pusha
mov
lods
cmpsl
loop
or
inc
and
sub
inc
pop
mov
adc
sbb
fimuls
daa
in
push
cmpsl
cmp
xor
cmp
push
mov
xchg
mov
arpl
frstor
in
pop
cwtl
test
scas
orl
dec
sahf
daa
or
outsb
cwtl
fwait
stos
outsb
data16
das
pop
data16
inc
addr16
fcoms
cmpsl
jp
lret
mov
push
fisubl
sub
andl
or
push
mov
ja
adc
pusha
jno
and
push
mov
loopne
mov
push
cmp
inc
mov
icebp
dec
xor
call
fwait
cli
or
sahf
imul
lcall
jmp
ret
jl
inc
mov
cmpsb
cmpsl
nop
or
sbb
bound
lcall
inc
mov
dec
adc
jns
xchg
xor
add
fmull
xchg
vxorps
pop
dec
decl
mov
push
fstpl
pop
sub
outsl
pop
xorb
push
in
adc
dec
addb
sbb
fcomip
scas
movsb
or
adc
xor
jg
imul
js
cmp
lods
hlt
pop
lock
pushf
mov
out
aam
test
out
add
dec
push
mov
outsl
xchg
pop
imul
lcall
add
aaa
hlt
and
adc
dec
clc
cmp
inc
adc
sar
cmp
and
cmpsl
mov
mov
cwtl
test
pop
add
mov
sub
lcall
push
mov
fwait
xchg
sbb
int
and
xor
pop
insl
fisttpl
xor
or
sub
mov
f2xm1
popf
inc
pop
mov
insb
push
mov
pop
lods
add
ffree
cld
xor
ja
mov
cltd
ficompl
out
mov
je
xor
mov
mov
aas
xchg
ja
lret
push
clc
mov
jnp
push
xor
inc
xor
inc
sar
mov
mul
std
inc
sbb
pop
sbbl
cmp
pushf
inc
imul
lods
push
push
jo
xor
add
inc
fwait
lods
lret
pop
and
adc
loop
mov
inc
mov
push
and
enter
sahf
lret
or
xchg
lods
icebp
cmp
insb
adc
or
push
xchg
push
std
mov
xlat
and
jp
les
lahf
fsubrp
loop
js
imul
mov
xchg
dec
stos
cmpsb
mov
and
movsl
lahf
xor
bswap
rcrb
pusha
test
imul
adc
xor
fdivrs
pop
xchg
mov
xchg
scas
mov
test
fstps
jae
test
add
sbb
xchg
test
les
cmc
dec
mov
aas
mulb
rorb
idivb
pop
dec
pop
pop
mov
ljmp
idiv
jno
pop
or
sub
push
or
addr16
inc
sti
sarl
ss
adcb
inc
jl
sub
mov
cmpsb
aas
cmp
jl
pop
jo
dec
adc
psubq
scas
dec
xlat
inc
pop
lds
pop
fwait
jno
jecxz
sar
popa
sbb
inc
jg
rclb
and
mov
xchg
fsubrl
fidivrs
scas
ret
pop
daa
jno
and
dec
in
push
mov
lret
and
xchg
mov
xor
inc
and
insl
mov
pop
cmp
sbb
ss
jnp,pn
movsl
sbb
add
add
pusha
push
cmp
add
mov
dec
out
mov
shrd
shr
jmp
and
add
loop
es
pop
js
mov
adc
xchg
test
push
mov
lods
lock
mov
push
xchg
add
aas
pop
mov
sti
movsb
cld
mov
cmpsb
mov
add
bound
imul
add
jno
lcall
and
and
pop
insl
andb
and
mov
pop
in
nop
add
int
adc
pop
fdivrs
push
fdivrl
lret
call
adcb
xor
mov
test
pop
mov
mov
loop
mov
js
jge
mov
xorb
cwtl
cli
mov
adc
repnz
xchg
jo
movsl
ljmp
push
bnd
xchg
jmp
nop
cmc
xlat
inc
add
out
cmpsl
lods
sbb
inc
in
jmp
std
xchg
mov
fistpll
movsb
aad
jmp
repnz
fwait
lea
in
mov
mul
lds
loope
dec
test
pop
dec
xorl
xchg
jge
push
in
sahf
call
sub
push
movsl
bound
adc
daa
add
sti
xor
push
xor
mov
subl
and
std
fbld
mov
hlt
mov
in
pop
cs
ret
or
subb
mov
ret
and
xor
inc
lods
mov
out
stos
test
lahf
jl
fwait
sub
inc
sbb
icebp
xor
push
aad
enter
test
dec
jecxz
aas
or
in
loopne
cmpsb
and
mov
push
pop
push
insb
jle
sbb
negl
lods
repz
jl
out
or
in
stc
mov
repnz
imul
sub
pop
shlb
lret
test
enter
pushf
mov
mov
movsl
stc
mov
push
inc
adc
cmp
and
dec
out
rcrl
rorl
ret
ret
shrl
lahf
mov
adc
stos
pop
aaa
push
iret
mov
mov
adc
aam
cmpsl
xor
mov
mov
arpl
add
mov
out
inc
faddl
gs
mov
loop
mov
xchg
es
sbb
loop
fstl
mov
push
cmp
filds
add
inc
xchg
pop
test
bnd
inc
das
sbb
call
test
jnp
stos
push
or
cwtl
popf
hlt
sbb
movsl
jne
jbe
scas
aad
repz
stc
imul
push
cmp
clc
push
xchg
jle
outsb
outsb
js
leave
push
fwait
inc
or
jmp
lods
push
clc
es
stc
orl
sub
fildll
enter
fidivs
rcll
or
or
mov
mov
cltd
add
ret
inc
and
loop
jnp
mov
sbb
paddsw
mov
inc
cmp
outsl
das
mov
movsb
cmp
cld
mov
mov
negl
aam
xor
aam
cmp
mov
jbe
cmp
shll
add
hlt
cld
je
xchg
out
dec
xchg
arpl
sbb
mov
pop
cmp
sbb
icebp
les
fwait
xor
adc
jbe
push
sbb
js
in
insb
sbb
add
lds
mov
js
dec
pop
jp
adc
mov
xor
push
fstl
xchg
ja
push
in
add
mov
in
out
lret
push
xchg
repz
in
rclw
out
xchg
mov
fisttps
outsl
push
stc
loop
int
push
fstl
and
loop
addr16
outsl
lds
pop
aas
xor
ret
test
mov
les
or
outsb
inc
mov
out
lods
jnp
push
mov
push
icebp
js
test
mov
mov
xchg
pop
or
mov
cld
orb
xor
sahf
pushf
and
push
jbe
test
fstps
inc
mov
aam
out
dec
sbb
in
push
shlb
in
in
test
sbb
lock
out
xchg
and
addb
movsl
ss
mov
rcr
data16
ficoml
xchg
jecxz
sub
add
cwtl
jns
or
out
addr16
or
sbb
repnz
lds
dec
outsb
incl
mov
sub
cli
iret
aam
call
mov
daa
mov
inc
xchg
cs
mov
xchg
test
sub
jbe
loope
aad
mov
dec
cld
sbb
clts
fcoml
sbb
dec
mov
cmp
testb
cmp
push
mov
and
cmpsb
and
sbb
cmp
rcrb
sarl
ljmp
insl
mov
cli
rorb
or
imulb
pop
stos
mov
das
insb
jp
aaa
adc
xchg
sub
jns
orl
in
test
or
loopne
movsl
cmp
lret
xor
xor
sbb
xorb
aam
dec
fiaddl
jae
xlat
int3
adc
sub
sbb
inc
or
aad
mov
cmp
outsb
fs
scas
mov
hlt
cmpsl
ljmp
push
sub
popa
and
mov
into
pop
push
test
xchg
cmp
fistps
lret
pop
pop
or
inc
int3
out
pop
or
xchg
test
fbld
mov
jmp
lahf
xchg
xor
das
pop
rclb
ret
ja
mov
push
outsl
push
mov
jmp
pop
fcmovne
push
in
loopne
jnp
mov
lds
push
xchg
jg
orb
in
mov
popf
ss
out
je
sbb
or
daa
aam
push
gs
add
xchg
push
addl
lds
jp
stc
int
nop
jne
fstpt
pop
adc
sbb
mov
lahf
std
sub
ja
xchg
subps
mov
iret
int
test
dec
dec
push
orl
push
push
lods
inc
pop
xchg
xor
fmuls
insb
fcmovb
pop
sub
call
nop
out
mov
mov
sbb
outsb
inc
popa
adc
or
arpl
jl
sub
sbb
pop
cmp
loop
in
dec
push
mov
jbe
push
pop
add
or
movsl
popf
sbb
adc
jle
sbb
xchg
stos
sbb
push
push
push
sbb
push
mulb
jl
xchg
shrl
pop
adc
pop
sbb
sbb
jge
adc
xor
popa
lods
das
je
push
and
push
jo
or
cmpsb
aas
or
mov
outsb
push
mov
cmp
repz
bound
mov
enter
out
lret
jae
jge
and
ss
repnz
adc
fdivrl
xor
mov
jno
pusha
adc
lret
push
push
push
cmp
insl
xchg
add
xchg
mov
mov
xor
shl
xor
or
jmp
aam
mov
xor
push
xor
jmp
xlat
push
sets
push
jl
dec
pop
push
cmp
test
push
int3
aad
outsb
int3
xchg
js
icebp
jl
lret
mov
push
rcr
mov
imul
repz
add
jae
cli
jno
push
xchg
out
and
or
cmp
add
xor
sarl
sub
inc
repz
xchg
ljmp
pusha
icebp
inc
inc
in
xchg
lret
cmpsb
stos
fisttpll
push
jmp
jecxz
jne
sti
mov
pop
rcll
dec
sahf
mov
add
xchg
test
xchg
push
in
aad
dec
or
push
jo
mov
xor
imul
adc
pop
inc
dec
fisubrl
fidivrs
arpl
sub
jne
cmp
dec
imul
arpl
shrl
mov
nop
cmpsb
xor
mov
mov
popa
xchg
cmp
scas
gs
test
push
pop
jmp
adcb
mov
mov
cmp
sbb
aas
roll
mov
jge
dec
xchg
push
xorl
movsb
mov
push
popa
lea
adc
jae
sub
pop
mov
stos
xchg
enter
call
ret
mov
lods
sub
xlat
adc
jnp
stos
movsl
and
popf
test
add
lock
enter
inc
dec
sub
rcrl
add
adc
inc
push
roll
cld
sub
mov
jge
loopne
mov
imul
push
mov
push
lret
and
pop
xor
pop
call
push
outsb
xor
imul
outsl
add
scas
fcoms
sbbb
pop
xor
mov
std
jmp
add
sub
inc
jns
xor
das
mov
popa
pop
testb
les
pop
andl
dec
andl
fsubrp
or
adc
adc
into
scas
std
cltd
mov
call
imul
js
js
mov
xchg
jecxz
jg
dec
imul
outsb
xor
lods
nop
iret
shlb
inc
and
inc
xchg
movsb
sub
cld
pop
mov
outsb
pop
test
and
js
int3
cmp
stc
iret
imul
push
xor
shll
decl
jmp
lcall
and
fsub
xchg
sub
out
xor
fsubl
faddl
mov
insl
xchg
stos
pop
stos
out
adc
pop
cmp
or
cs
xchg
ret
cli
andl
mov
popf
in
hlt
jge
into
pop
adc
divb
mov
ja
int3
sarl
pop
xchg
fucomp
jo
push
xchg
int3
stos
push
imul
std
int
sub
adc
dec
and
inc
mov
cmc
dec
dec
pushf
stos
movsl
cld
sbb
jb
xchg
les
xchg
leave
pusha
mov
enter
add
inc
dec
jmp
stos
repnz
insl
inc
fmull
loopne
adc
mov
loopne
xchg
jbe
popa
rol
lods
sub
aas
imul
into
sub
js
lds
pop
and
lea
mov
jbe
aam
nop
mov
xor
mov
lahf
fs
add
icebp
push
cmp
std
mov
lret
idivb
sub
or
fidivl
lret
mov
sbb
mov
cmp
cld
shrl
pushf
jo
xchg
loopne
jp
lea
pop
andl
push
shlb
lretw
push
pop
and
enter
sahf
sub
or
aam
ss
scas
and
xor
mov
jecxz
pop
push
cmp
call
sub
jecxz
dec
loope
dec
dec
sub
jg
jl
sti
mov
adc
leave
jle
mov
mov
faddl
adc
push
lcall
fucomi
out
mov
jp
sahf
add
insb
lret
cmp
ds
adc
add
rorb
sub
jmp
pop
bound
push
sti
and
and
popa
inc
xchg
adcb
mov
add
cmp
fistpl
cvtpi2ps
in
mov
xchg
mov
lock
repnz
fisubrs
and
rol
ret
jle
data16
in
or
xchg
hlt
xor
dec
std
pop
outsl
jns
sbb
jo
aam
mov
jle
mov
mov
int
inc
ds
dec
mov
cmp
xor
das
cmp
ret
push
imul
dec
sub
jle
rol
xchg
dec
test
out
pusha
jle
scas
mov
mov
outsl
outsb
inc
cmp
and
call
test
popa
cld
into
repnz
adc
cmp
pop
sub
inc
dec
shll
fdiv
mov
and
lea
xchg
sarl
insb
cmp
xrelease
jmp
lcall
xchg
or
in
mov
push
xchg
pop
js
cmpsb
mov
movsl
dec
add
push
scas
mov
push
es
lds
mov
repz
jns
movsb
nop
icebp
ret
test
pushf
mov
mov
mov
sbb
or
xor
je
lods
movsl
mov
mov
loope
add
sbbl
cmp
sbb
stc
jg
je
jno
ss
and
or
sbb
bound
jecxz
scas
or
pop
scas
mov
arpl
shr
ret
inc
jbe
mov
sbb
repnz
or
add
out
dec
jno
test
push
popa
leave
cli
mov
mov
dec
lahf
xchg
sti
push
fldln2
int
jle
jge
scas
scas
or
aad
cmpsb
push
iret
mov
mov
mov
insb
loop
mov
loop
mov
xor
cmp
push
sub
mov
stos
sub
pop
push
inc
pop
adc
push
scas
jne
and
pushw
and
sbb
jmp
pop
fldl
and
in
adc
push
cmp
fst
sbb
lcall
in
mov
or
je
aam
imul
in
insl
adc
stc
xor
mov
xchg
shll
fsubl
sbb
push
jo
cmpsl
aam
ficompl
cwtl
cwtl
add
test
movsb
es
in
pop
sar
pop
xchg
add
ja,pt
and
sbb
popa
cmp
test
sub
cmp
stc
idivb
repnz
or
dec
and
pop
sbb
in
shrl
push
cmp
test
push
stc
je
cld
sarl
lock
or
inc
data16
in
xor
dec
xchg
sub
jbe
and
test
mov
mov
push
lret
int3
add
das
lods
mov
jmp
or
pop
inc
or
and
jo
adc
xchg
and
test
jmp
xchg
jno
ds
cmpl
pminub
sub
out
std
mov
cmp
ret
sub
daa
dec
mov
cld
cmpb
cltd
push
or
lock
out
clc
inc
stos
cmc
push
inc
xchg
sub
loop
sub
shll
outsb
mov
jae
mov
out
push
rcll
mov
dec
add
pop
fistl
cli
test
xchg
repz
lds
bound
sbb
pop
push
cmp
mov
addl
daa
test
xchg
outsl
mov
lock
push
mov
cmpsb
push
mov
out
add
ja
movsb
push
pushf
gs
mov
fucomip
push
sub
stos
mov
sub
pop
int3
loop
or
cmpsb
mov
xor
in
fbld
jb
xchg
test
jecxz
addr16
jnp
xchg
jno
sub
and
sbb
sbb
adc
iret
pushl
inc
leave
inc
sub
xchg
sub
push
push
inc
jmp
aad
mov
ja
jno
cmp
roll
ret
sbb
mov
mov
aaa
push
test
mov
adc
mov
cs
out
nop
and
jbe
jns
test
in
mov
mov
pop
addr16
dec
push
jbe
sbb
sbb
push
scas
or
cli
mov
dec
loopne
in
mov
mov
sti
pusha
xor
or
test
or
push
mov
out
xor
hlt
and
bswap
std
jg
jo
inc
in
sbb
or
nop
and
scas
popf
add
dec
outsb
mov
xchg
jnp
aaa
cltd
loopne
cmp
adc
add
lock
mov
sbb
shlb
sti
rcr
sub
sti
and
lods
sti
or
scas
inc
aad
mov
jle
xor
xchg
std
jmp
sub
and
mov
clc
pusha
loop
xor
inc
cli
inc
and
sbb
psllw
sbbl
call
jo
xorl
mov
xor
jl
mov
gs
std
sub
pcmpgtb
mov
mov
dec
and
je
inc
hlt
cmp
mov
sub
mov
dec
cwtl
repnz
jmp
pop
jo
sub
test
outsb
repnz
mov
hlt
outsl
ficomps
pop
and
mov
sub
movsb
repnz
data16
sbb
mov
push
mov
add
mov
stc
insb
jl
call
mov
inc
ja
stos
pop
out
jmp
bound
leave
mov
pop
ss
jmp
mov
cwtl
leave
arpl
mov
mov
jl
push
es
shrb
fwait
sbb
adc
lahf
jecxz
sbb
fwait
shlb
shll
fimuls
arpl
les
sub
sbbb
adc
push
xchg
outsl
push
mov
and
dec
mov
daa
scas
hlt
mov
inc
pop
push
push
mov
leave
fdivl
fstpl
in
dec
push
cmp
lock
and
jb
xchg
push
stc
in
mov
cwtl
pop
in
sbb
repz
in
mov
ret
lret
cmp
cld
jb
int3
clc
fcompl
ret
ficoms
and
fs
and
enter
mov
outsl
push
mov
addl
add
and
les
mov
lahf
arpl
sub
mov
sbbb
call
sbb
sub
lcall
imul
xor
xchg
das
loope
rolb
mov
and
das
or
fidivs
ret
stc
insb
test
mov
fisubs
ds
neg
dec
insl
adc
stos
cmp
jp
cmp
pop
or
mov
adc
and
std
jmp
inc
ss
ds
fdivrl
mov
je
psubw
out
rolb
ss
xor
lahf
push
mov
call
mov
sti
lret
cmp
lods
nop
in
ja
ret
and
clc
sbb
movsb
mov
in
cmp
loope
jb
or
cmp
adc
popa
sbb
xor
mov
mov
insl
mov
outsl
cmp
xor
and
adc
es
test
inc
fsubl
pop
cmpsb
inc
sbb
stos
shl
dec
loop
arpl
fbld
mov
push
pusha
pop
adc
sbb
scas
pushf
cmp
mov
mov
sbb
pusha
cmp
sbb
lock
js
cmp
sahf
or
mov
int
pop
sbb
scas
insl
stc
cmp
and
pop
in
adc
movsb
jbe
ja
dec
xlat
pop
adc
hlt
mov
jp
adc
int
jmp
adc
pushf
mov
cwtl
xor
mov
dec
je
aad
fisttpl
clc
or
andl
pop
sub
sar
jle
imul
jo
aas
out
sub
fiadds
push
ror
imul
sub
lea
and
mov
fdivrl
out
lcall
add
pop
pop
cmp
int
rorl
pop
xchg
inc
loop
mov
fimull
xchg
insb
pop
dec
stos
aas
lock
jmp
lods
sub
ds
in
repz
pop
aad
fisttpl
sar
and
leave
cmp
pop
xchg
lret
shlb
in
cld
push
imul
inc
push
sarb
add
push
or
mov
test
pop
xor
sub
icebp
test
mov
loopne
push
gs
mov
xor
mov
push
jp
mov
mov
sub
ret
fwait
jbe
mov
out
lret
cmc
loop
jbe
sysexit
fmul
sbb
ret
or
outsl
dec
test
inc
xchg
loopne
pushf
pop
xchg
adc
rolb
mov
into
jmp
lahf
mov
dec
pop
cmp
jb
stos
mov
mov
and
out
negb
add
push
cld
test
in
jl
repz
sbbb
dec
and
xchg
mov
jle
xchg
sahf
xor
jecxz
jo
add
out
sub
dec
sahf
and
xchg
mov
xor
icebp
mov
cmp
test
cmc
pusha
sbb
cs
and
and
dec
inc
outsb
push
je
mov
jns
movsl
jecxz,pt
mov
lds
scas
mov
cmpsb
xchg
cs
shlb
fisttpl
dec
xor
fimuls
add
inc
mov
lds
aam
sbb
cwtl
aad
negb
adc
push
scas
loope
or
mov
and
mov
cmp
notb
jge
inc
lahf
and
in
jecxz
mov
test
fnstenv
add
push
pop
in
data16
fldcw
xor
fs
xor
jmp
std
sti
sbb
sbb
mov
out
adc
xchg
out
xchg
xchg
and
xlat
cmc
push
pop
cwtl
jecxz
orb
bound
adc
test
mov
aas
add
sbb
lods
scas
hlt
insb
xor
divb
lock
scas
cltd
sub
jne
fsin
stos
lahf
cmpsb
sub
outsl
cli
mov
xor
inc
rclb
sbb
popa
and
cmp
cmp
push
popf
jp
imul
lods
test
and
mov
arpl
jo
iret
sub
jp
mov
dec
mov
push
sahf
pushf
dec
adc
movl
jge
push
sbb
mov
or
mov
push
inc
stos
jl
and
hlt
pop
jg
or
cmp
adc
add
lret
jns
push
sub
testl
mov
cmp
and
jno
je
into
sti
clc
adc
addr16
insb
mov
inc
js
xchg
adc
addr16
add
sbb
xor
inc
mov
xchg
fadd
cmp
mov
lods
data16
and
fs
push
test
mov
es
and
xor
jo
test
and
mov
sahf
mov
das
add
rorl
sub
shll
mov
mov
push
dec
jp
jo
dec
xchg
imul
aam
mov
mov
sahf
jb
sub
aas
xlat
or
test
lods
fidivl
fcomi
lds
jo
add
sub
inc
js
jne
int
mov
xor
jbe
push
repz
jl
mov
shll
push
or
test
and
movsb
in
fiadds
incb
add
push
stos
or
ljmp
and
cmpsl
pop
inc
pop
inc
shll
jle
inc
cmp
loop
mov
and
jae
lret
shlb
pop
adc
jne
stc
addr16
and
and
ja
jl
dec
cmp
dec
xchg
pusha
fmuls
cmpl
je
jmp
xor
jnp
cmc
or
js
mov
mov
mov
not
adc
fstpt
shll
mov
xchg
repnz
and
std
mov
dec
rcl
xor
popa
xchg
in
cmp
pop
shll
fstl
inc
add
fmul
outsb
pop
jno
int3
mov
dec
lcall
js
cmpsb
cwtl
jle
mov
dec
sbb
pop
mov
push
fisubrl
into
ret
cmp
aad
mov
inc
pop
dec
xchg
mov
insl
xor
daa
inc
mov
jle
xor
arpl
sahf
jl
mov
xor
or
dec
pop
pop
shrl
dec
jns
xor
pop
xor
movsb
xorb
push
mov
aad
dec
hlt
cmc
sub
das
push
fidivrl
std
cld
dec
aad
mov
subl
dec
scas
and
push
in
out
sbbb
dec
cwtl
mov
jno
jle
fbld
sbb
sbb
sti
push
push
jno
movsb
ljmp
out
stc
mov
movsl
jb
shll
mov
jno
inc
push
cli
xchg
mov
lcall
jno
arpl
repnz
dec
jge
inc
ss
out
addl
mov
shrb
sub
xchg
xchg
add
adc
inc
jb
xor
incb
mov
pusha
and
sub
fcomi
xchg
mov
aam
in
inc
add
mov
push
dec
jg
test
cli
jmp
jne
daa
adc
scas
push
jp
mov
push
push
lock
xchg
adc
xchg
mov
pop
div
mov
jecxz
xchg
movsb
jno
dec
nop
adc
shlb
mov
add
jae
es
dec
shlb
mov
popf
push
andb
das
cmc
mov
test
mov
sub
xor
cld
jmp
sti
loopne
mov
pop
arpl
and
and
add
ds
mov
ljmp
int3
mov
and
and
mov
add
rclb
and
movsb
leave
and
mov
data16
or
push
repz
xchg
jns
mov
jb
sbb
lods
and
cli
inc
inc
push
pusha
mov
push
adc
mov
inc
int
icebp
push
fwait
sub
sbb
cmp
icebp
je
fs
call
je
gs
adc
fistl
push
jp
xchg
stos
mov
inc
dec
push
bound
daa
aas
pusha
cmpsl
pop
fstpt
sub
divb
push
fdiv
push
jge
xor
ja
fbld
and
das
xor
push
sub
xor
dec
out
cmc
ja
rcll
mov
sub
popf
mov
and
orb
sub
ror
pop
push
mov
jmp
loope
dec
mov
insb
shll
dec
dec
sbb
ss
pusha
fwait
test
cmp
scas
mov
mov
xchg
sbb
cmpsl
adc
cmp
mov
insl
jmp
mov
ret
sbb
jecxz
or
xor
fimull
dec
test
inc
popa
inc
cmp
push
fistpl
push
lahf
jge
cld
sti
dec
test
adc
inc
adc
mov
jmp
push
fsubs
inc
call
xchg
inc
bound
mov
shrd
scas
sub
into
movsl
stos
cmp
or
add
mov
sbb
add
cmpsl
es
mov
ja
and
jne
xor
ret
sub
cmp
jo
addr16
testl
adcb
jmp
pop
gs
jmp
subb
es
sarb
dec
adc
mov
ss
repz
addr16
xchg
shl
imul
dec
cmp
push
leave
dec
out
pop
movsb
aas
and
pop
inc
mov
or
mov
das
pop
mov
mov
mov
cmc
jmp
or
adc
add
sub
enter
ds
shl
imul
shld
mov
and
mov
lock
subb
xchg
shlb
cs
adc
pop
push
dec
adc
push
inc
xor
in
push
ret
sti
and
sub
hlt
aaa
jmp
dec
and
mov
jmp
andl
xor
int3
jo
out
lea
out
cwtl
rorb
mov
fcompl
jge
cld
stos
insl
lds
mov
jb,pn
dec
shrl
fdiv
imul
or
push
jg
je
adc
mov
setle
or
pop
xchg
insl
ja
loopne
jecxz
mov
sbb
fdivrl
lods
sub
orl
movsl
lret
sbb
cmpsl
dec
enter
or
xorl
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
xlat
mov
iret
or
push
mov
and
faddp
jg
adc
xchg
lret
mov
push
mov
pop
andnps
cmp
dec
mov
repz
inc
daa
mov
lahf
and
enter
aaa
xchg
dec
test
addb
cmp
test
nop
cli
xor
pop
not
aad
lods
mov
in
test
bound
pop
jle
sti
or
imul
pop
mov
xchg
push
imul
push
mov
push
mov
jmp
aaa
or
shlb
jp
add
jmp
mov
test
pop
in
dec
js
insl
add
mov
scas
adc
iret
movsb
iret
movl
out
mov
inc
movsb
dec
cmp
and
jl
mov
cmp
aam
jmp
fwait
addr16
inc
addb
and
inc
iret
jg
jmp
cmpsl
xchg
cmp
ret
daa
fs
xor
xchg
pop
sub
nop
xchg
inc
mov
cmp
gs
lds
or
loop
dec
in
xor
jo
ja
shl
mov
mov
adc
stos
inc
imul
xchg
decl
add
cmp
ret
dec
test
xchg
adc
fcmovb
jp
mov
jns
jbe
mov
mov
sbb
mov
imul
rolb
hlt
sbb
and
in
test
test
or
add
scas
test
and
xor
imul
inc
mov
mov
push
mov
bound
imul
push
std
popf
cmp
sbb
add
mov
and
inc
das
lahf
out
sub
mov
or
mov
cwtl
cld
mov
inc
dec
sbb
not
mov
and
sub
dec
icebp
mov
lahf
rolb
call
inc
cmp
jno
adcl
push
xor
and
mov
addb
pop
aam
cld
les
mov
sub
pop
pop
das
dec
pop
and
dec
push
insb
jb
dec
jecxz
xlat
mov
leave
jo
lahf
fiadds
fnstenv
mov
mov
je
in
dec
adcl
mov
jno
frstor
or
scas
mov
fisubrs
leave
mov
fcmovu
or
pop
lea
lea
jae
add
xchg
xchg
lea
dec
jge
pusha
out
scas
add
adc
loop
cmp
repnz
and
rolb
jne
pop
lds
adc
xchg
xchg
push
jns
scas
sub
mov
jg
adc
test
mov
mov
mov
test
popa
push
and
js
ja
mov
call
push
mov
pop
pop
sbb
les
mov
ds
xchg
lods
sub
dec
adc
mov
inc
out
mov
and
movsl
idivb
push
cmp
fdiv
out
inc
jae
pop
xchg
int3
dec
jl
fsts
mov
push
xchg
mov
arpl
scas
incb
or
jge
lahf
xor
pop
mov
daa
mov
pushf
mov
sub
sub
aam
cmpsl
push
and
and
mov
mov
insb
jecxz
jg
push
jp
cltd
ds
js
pop
sbb
add
add
outsl
jb
add
mov
repz
mov
xor
xchg
cmp
or
xchg
xlat
fisttpl
inc
imul
gs
mov
mov
jnp
adc
ja
sub
popf
dec
stos
cs
popa
lods
fcmovne
in
pop
cmp
push
add
xor
xorl
hlt
push
shlb
fldt
xor
lcall
icebp
and
out
jecxz
pop
adc
stos
and
out
xor
jb
add
aad
mov
aas
and
cmpsl
mov
add
pop
mov
cmpsl
jne
das
sbb
cmp
or
stc
outsl
fdivrl
jns
cli
push
xchg
adc
dec
fs
push
xchg
xchg
push
add
les
xchg
sub
mov
mov
and
xorb
push
das
stc
icebp
xorb
jg
pop
dec
in
cmc
xchg
or
int
mov
xchg
and
dec
jmp
mov
lock
sbb
repnz
frstor
fnstenv
test
popf
pop
pop
push
pop
loope
xchg
pop
add
cmp
test
push
lods
pop
inc
adc
and
cmp
jns
sbb
and
rorb
xor
jbe
pop
enter
add
loop
mov
cmp
inc
lret
jmp
adc
mov
push
push
sub
inc
out
insb
push
pop
in
mov
ja
cmp
xorb
mov
fcomp
push
push
mov
rcl
xchg
fsubp
dec
push
xlat
sti
loope
jecxz
fildl
add
negl
mov
mov
jmp
adc
jg
push
push
test
inc
dec
cmpsl
mov
int
int3
mov
adc
adc
or
sti
in
mov
into
fst
loopne
in
lret
gs
push
ja
pop
scas
sbbb
xchg
inc
mov
lds
sub
push
add
inc
fsubr
out
xlat
or
fildl
mov
or
into
mov
xchg
rcrl
mov
xchg
adc
outsb
mov
leave
and
pushl
ficomps
aad
and
and
ss
jae
dec
scas
lds
out
dec
cld
hlt
mov
jbe
leave
or
imul
push
cmp
mov
add
cs
push
out
int
aad
xor
pushf
add
jmp
xor
cltd
aaa
clc
cmp
sub
or
shlb
inc
rolb
shrl
mov
in
lret
sbb
in
and
loope
xchg
mov
in
pop
or
ja
adc
xchg
scas
xchg
rolb
pusha
or
inc
dec
or
test
xchg
adc
xchg
pushf
fadd
insl
outsl
lods
mov
fistpll
outsl
mov
xor
mov
jecxz
xchg
adc
out
fsubrs
sbb
outsb
test
push
push
pushl
imul
es
scas
jno
nop
xor
pop
ja
cmc
pop
mov
mov
movsl
pop
fdiv
in
mov
mov
sti
dec
cmp
sub
loopne
in
fsts
pop
jg
jge
and
pop
mov
fdivrl
inc
inc
stos
decb
xchg
xchg
or
stc
leave
les
jp
sbb
pop
ret
incl
mov
mov
arpl
nop
lods
nop
cmpl
lods
fistpll
or
clc
or
mov
hlt
and
jne
mov
jne
jl
dec
or
rorb
ret
mov
inc
add
mov
lods
enter
add
movsb
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
mov
outsb
arpl
xchg
and
xchg
inc
mov
push
js
adc
xchg
std
mov
or
cs
xchg
stos
dec
leave
and
inc
push
popa
adc
aaa
outsl
cld
cmpsb
mov
and
fsubl
mov
das
and
aaa
adc
inc
mov
in
sbb
sub
sub
mov
xchg
es
ja
orb
mov
fistps
and
mov
imul
lods
xor
cmp
lret
mov
or
shl
addr16
push
mov
loopne
dec
push
ss
shl
shrl
push
je
add
mov
lods
in
scas
filds
adc
subb
mov
jle
mov
cmp
fisttps
xchg
std
jle
test
jbe
mov
stos
push
loopne
call
in
outsb
or
leave
sbb
xor
sbb
negl
ja
mov
xchg
cli
inc
sbb
out
xlat
and
aaa
mov
inc
push
mov
fidivrl
les
inc
cltd
int3
push
sbb
mov
push
mov
jge
aaa
or
xchg
cmc
inc
add
lods
and
frstor
or
jne
mov
dec
sbb
mov
lret
xor
jg
sbb
cli
movsl
stos
xor
jns
pop
stc
vmptrst
addb
repnz
ljmp
pop
push
loop
insb
xor
add
fwait
test
jno
lea
push
pop
sub
xor
mov
cli
xchg
insb
lret
adcl
repnz
or
popa
out
movsb
aaa
push
jb
dec
push
cmpsb
test
jns
stc
les
push
data16
fucomip
mov
dec
aam
loope
pop
cmp
pop
daa
faddl
jle
pop
in
testb
xor
push
jo
leave
lcall
ret
in
add
sbb
push
adc
push
addr16
stc
out
mov
data16
mov
cmp
sub
in
ds
scas
in
ss
cmpsb
cwtl
orb
cwtl
add
mov
sub
and
stc
stos
sbb
xchg
mov
inc
jmp
int
into
mov
sbb
stos
xor
mov
jmp
sub
pop
or
repz
mov
push
mov
mov
imul
or
fcmovbe
jo
cli
iret
sbb
mov
mov
ret
add
aam
cld
imul
pushf
sbb
pop
adc
or
mov
icebp
mov
rorb
pushf
cmp
popa
ficomps
js
pop
pop
dec
inc
mov
out
add
cmp
push
jnp
leave
repnz
notl
cli
les
icebp
xor
pop
jecxz
or
add
xor
addr16
mov
mov
inc
test
or
addb
jg
jno
sti
adc
mov
mov
insl
test
or
xchg
daa
xchg
ret
pop
mov
lock
pop
test
cltd
xor
push
insb
mov
es
xchg
and
clc
mov
sbb
mov
mov
inc
notl
ret
sarl
sahf
gs
dec
add
push
xor
scas
pop
pop
lret
ja
sub
mov
pop
sahf
cmc
out
mov
xchg
and
push
hlt
xchg
inc
pop
or
in
icebp
sbb
push
adc
and
sbb
bound
adc
je
jp
and
bound
mov
negl
loopne
inc
repz
lods
callw
pop
cmp
push
mov
sti
push
clc
jns
or
add
xchg
xchg
mov
stos
cmp
jb
jecxz
sbb
pop
jno
imul
movsb
jae
mov
cmp
andl
mov
dec
cmpb
lods
or
xchg
cwtl
dec
mov
fwait
sub
scas
dec
les
shl
aaa
xchg
cmp
xchg
movsl
pusha
mov
fcomps
movsl
or
cmp
dec
add
xchg
mov
ret
stos
popf
pop
lret
sub
xchg
xchg
mov
ss
imul
adcl
jbe
jno
sub
inc
scas
jb
je
mov
jae
xchg
iret
push
cwtl
and
test
pop
imul
pop
cli
xlat
sub
stc
leave
sub
rolb
stos
adc
leave
mov
repz
or
rdpmc
scas
test
push
sub
ljmp
stos
fisubrs
out
sbb
push
adc
add
pop
mov
scas
cmpl
shll
mov
fdivrs
push
mov
test
mov
stos
mov
jbe
fwait
jbe
push
sbb
insb
jnp
ljmp
mov
int3
inc
cmc
shll
cmpsl
jle
mov
fisubs
les
push
cmp
sub
in
aam
lds
adc
hlt
das
mov
sub
and
scas
enter
mov
call
imul
into
fsubr
adc
loop
in
push
repnz
fidivl
and
jbe
mov
cwtl
cli
mov
icebp
inc
dec
int
mov
cmp
and
lock
repnz
fdivr
and
sbb
push
xchg
add
loopew
lea
jo
jns
enter
inc
arpl
adc
push
insl
imul
jbe
mov
sbbb
add
aas
rolb
add
mov
outsb
in
imul
mov
nop
sbb
mov
pop
sub
cmpsl
cmp
jno
pop
push
cli
sub
and
sti
dec
lds
hlt
outsl
push
shll
push
mov
and
fdivr
and
vhsubps
mov
xor
add
sub
inc
in
outsb
lcall
sub
arpl
pusha
out
mov
jo
movsl
xor
inc
outsb
inc
mov
mov
outsl
push
test
cmp
leave
push
xlat
push
sub
negl
and
movsl
xor
add
les
imul
jp
pop
mov
sub
out
in
ror
rcrl
xor
or
arpl
jmp
or
xor
pop
movsb
xchg
cmpl
xchg
mov
mov
and
addr16
mov
dec
call
ja
or
iret
rorb
jbe
orb
jge
xchg
push
pop
xchg
test
sbb
pop
or
dec
push
imul
cmp
movsl
mov
aam
adc
cmp
je
fstpl
std
and
mov
imul
cmpsl
insl
fcompl
mov
push
pusha
decl
cmpsl
scas
sbb
pop
push
xchg
fbstp
out
jns
inc
out
arpl
push
aad
scas
pop
mov
add
xchg
outsl
jb
sahf
int
sub
cs
push
cli
push
out
jo,pt
inc
push
decb
and
out
jge
jmp
adc
stc
ljmp
add
cli
shll
cld
and
dec
cmp
mov
insl
mov
sbb
or
int3
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
jmp
fnsave
push
adc
adcb
adc
xchg
dec
pop
movsb
add
ret
mov
cltd
or
pop
frstor
outsl
mov
cmpsl
sub
inc
fists
test
jae
and
dec
add
inc
jmp
fadds
nop
vunpckhps
call
adc
adcb
sbb
push
adc
xor
sbb
add
fs
icebp
jl
and
push
nop
es
add
jmp
mov
jnp
notl
mov
cwtl
out
push
xor
cmp
and
clc
andl
lds
mov
or
mov
fcomps
fildll
test
cmp
jl
loope
jmp
mov
xchg
stos
sbb
cld
cmp
and
add
pop
pop
push
imul
adc
andb
xor
mov
hlt
mov
je
jb
bound
adc
or
dec
cmp
ljmp
push
adc
outsb
jecxz
imul
inc
and
add
ret
ljmp
or
movsb
movsl
orb
pusha
rorl
testl
inc
dec
push
insb
dec
mov
jo
les
out
jecxz
xorl
insb
jp
inc
add
push
pop
pop
add
gs
push
gs
ss
dec
pusha
outsb
lods
or
addr16
adc
mov
sub
sub
test
or
jne
cmpsl
dec
cli
mov
mov
xchg
dec
cmpsl
loop
mov
lret
mov
adc
idivb
bound
enter
imul
mul
lahf
adc
add
pusha
loopne
sbb
faddl
push
xchg
addr16
dec
in
adc
insb
leave
push
mov
data16
push
stc
sti
xchg
into
push
mov
push
jmp
andb
cmp
cmp
jo
mov
xchg
aad
mov
inc
out
fsubr
xor
in
inc
xchg
sbb
idivl
adc
inc
lock
push
lds
push
int3
int3
lahf
mov
cmp
dec
cmpsb
sbb
inc
adc
jbe
xchg
cmpsb
xor
aas
jns
sub
movl
add
aad
out
cmp
cmp
add
test
icebp
jae
or
mov
addr16
push
xchg
fs
in
scas
mov
inc
in
sbb
pop
outsb
pop
cmpb
inc
dec
sbb
cmpsb
mov
jmp
or
in
pop
inc
cmp
arpl
orb
stc
jo
add
cmp
int
mov
orb
fbstp
fdivl
cltd
rclb
ret
xor
mov
sbb
mov
inc
aaa
xchg
out
cmpsl
push
dec
outsb
cmp
cmpsb
xor
pop
inc
jle
push
adc
fnsave
imul
call
sbbl
std
push
mov
push
add
hlt
mov
mov
sbb
cli
inc
clc
mov
rcrl
daa
jmp
dec
add
pop
mov
mov
pop
js
jp
in
and
jg
in
sbb
mov
mov
in
inc
outsb
adc
rclb
xchg
pop
imul
sti
and
aas
mov
dec
movl
push
loope
mov
add
mov
pop
or
or
mov
mov
imul
cli
pushf
add
testl
xor
mov
cli
lret
mov
adc
and
add
pop
adc
rcl
sahf
jb
push
xchg
retw
jae
addr16
mov
fwait
cmp
test
fdivs
mov
adc
aaa
and
ret
ljmpw
mov
or
leave
iret
int3
xor
in
mov
lret
sbbl
jmp
mov
add
dec
repnz
ror
push
pop
loop
dec
jge
cwtd
jecxz
inc
je
cs
pop
push
das
lods
xlat
xchg
xchg
dec
popl
mov
add
cld
icebp
pop
sub
lret
icebp
daa
push
loop
push
iret
out
pusha
repz
test
mov
and
ss
mov
hlt
add
daa
adc
lods
xchg
js
bound
mov
add
stc
adc
fimull
jb
xchg
cmc
imul
jecxz
sbb
cmp
lahf
mov
inc
and
or
adc
inc
xorl
sub
push
inc
jno
in
roll
pop
and
adc
rcr
xchg
fdivs
aaa
inc
lods
mov
push
cmp
cmp
sbb
sarb
test
jl
addb
cmpl
andl
dec
je
negl
cwtl
sbb
es
push
dec
mov
scas
imul
popa
push
lret
mov
pushf
lcall
add
cmp
xor
out
jecxz
pushf
jl
adc
lea
test
mov
jb
mov
mov
shll
lds
cmp
mov
pusha
in
pusha
testl
push
cwtl
push
addl
sbb
pop
jns
xchg
jmp
xor
nop
addr16
dec
test
shlb
cmp
jp
pop
mov
sbb
fs
movsb
subb
ja
fldcw
and
sbb
pop
add
jmp
shr
lods
scas
and
in
sub
mov
dec
mov
sarl
imul
inc
scas
scas
xor
pop
sarb
aas
xchg
or
cmp
jmp
test
test
mov
cmp
aas
xchg
lock
xchg
xchg
rcr
popa
push
and
mov
add
cmp
push
mov
add
lret
es
out
mov
rcll
inc
hlt
scas
imul
jb
add
loop
adc
fcoml
cmp
mov
das
or
jp
std
movsb
arpl
jmp
pop
xor
es
lcall
test
pop
pop
fdivl
call
outsb
arpl
push
cmpsb
mov
ret
jb
sbbl
sbb
sub
popl
rorl
fwait
inc
movb
outsl
adc
sbb
xchg
insb
adc
pop
mov
cltd
push
push
cli
or
bound
push
add
stos
lret
mov
je
lods
mov
pop
dec
sbb
lock
sahf
fisubs
shl
jge
xchg
addr16
xorb
shll
mov
jg
xchg
sbb
push
mov
imulb
and
inc
fisttpll
or
shl
shl
mov
mov
jmp
test
fcoms
sbb
adc
xchg
lock
rorl
mov
xchg
xchg
ret
subb
out
dec
pusha
push
adc
xor
sub
pop
es
fbstp
imul
and
cmp
mov
in
mov
jle
adc
out
rorl
xor
ficompl
les
jnp
addr16
xchg
imulb
xrelease
sub
push
test
push
sub
fimull
loop
xchg
int3
dec
mov
aas
leave
push
fistl
cwtl
mov
imul
mov
ud1
cmp
and
aas
je
bnd
outsb
adc
dec
mov
jns
shll
mov
mov
jge
inc
pop
loope
arpl
add
lods
xorl
mov
mov
mov
mov
leave
pop
pop
dec
cmp
aad
mov
std
popf
inc
cmp
sbb
sub
pop
cmpb
in
stc
cmpsb
in
cmp
mov
in
xorl
sub
push
mov
inc
cmp
inc
xchg
or
push
lret
cmpsb
jecxz
mov
dec
or
in
daa
popl
outsb
xor
push
cmp
and
adc
sahf
stc
mov
pop
adcl
sub
cmc
lret
xchg
call
fidivs
push
xlat
xchg
push
jmp
nop
cmc
xor
icebp
adc
les
scas
aaa
aas
cmp
mov
stos
popa
push
adc
cwtl
xor
jg
push
pop
and
cmp
popf
dec
dec
test
jmp
or
xor
insl
je
xor
push
mov
orb
cs
out
cmp
aam
cwtl
repnz
mov
shll
adc
jecxz
cmp
mov
push
jo
movsb
fwait
mov
ret
xchg
mov
dec
push
pop
shlb
out
sbb
lcall
subb
es
or
insb
mov
sub
and
mov
cmp
sahf
jbe
cmp
mov
pop
lret
jmp
cmpsl
add
add
cld
ljmp
imul
cwtl
pop
add
loope
inc
insb
jne
dec
sbb
movhlps
xchg
push
sbb
aad
fdivrp
enter
daa
sub
mov
cmpsb
pop
popa
pop
adc
or
mov
fcoms
cmp
sub
enter
mov
repz
fisubl
sub
push
mov
std
mov
data16
fdivp
add
scas
or
xor
push
test
outsl
or
test
cmpsb
dec
inc
xor
jp
dec
cmp
lahf
rcll
mov
lahf
or
ret
imul
leave
dec
enter
pinsrw
mov
or
pop
movsb
insl
adc
jbe
imul
cwtl
in
in
divl
dec
jns
cmp
jmp
fs
aaa
cwtl
mov
adc
push
push
lea
loop
and
idiv
je
test
aad
dec
mov
mov
inc
pop
dec
push
outsl
repz
xor
movsb
cs
xchg
mov
push
fwait
lds
push
cld
cmp
xor
adc
add
fwait
popa
jl
inc
repnz
cmp
xchg
sbb
aas
cli
shl
aam
ret
ljmp
xor
or
pavgb
pusha
adc
test
mov
dec
pop
cmpsb
adc
adc
rcrl
sub
stc
adc
iret
xor
mov
pusha
arpl
mov
dec
push
mov
jecxz
inc
mov
cld
stc
loopne
enter
loopne
stos
bound
je
out
les
icebp
shlb
add
jb
sbbb
inc
adc
sbb
sarb
popf
xchg
cmp
aad
mov
dec
in
push
outsl
sub
adcl
pop
test
lods
mov
mov
add
in
pop
data16
imul
aam
lock
or
fdivrp
jbe
loope
xchg
cmp
add
aam
icebp
loopne
jge
std
je
sbb
xchg
cld
out
push
xchg
push
adc
ret
and
dec
in
enter
mov
sub
test
call
fisttpl
dec
add
inc
mov
jnp
loop
dec
jno
pop
das
push
vpavgb
inc
xchg
add
xchg
or
sti
or
movsb
std
jg
popa
jb
daa
cs
bound
jne
daa
rolb
jmp
aas
es
or
cmp
out
lods
pop
sub
outsb
cmp
sub
aaa
icebp
or
ja
adc
fisubrs
popf
insb
rclb
shlb
push
xchg
cmpsb
lret
push
hlt
pop
scas
cs
out
lcall
test
jmp
mov
fwait
pusha
aad
xchg
xor
popa
cmp
xchg
mov
inc
dec
lock
stos
inc
ss
imul
scas
mov
lret
lds
xorb
jle
mov
jl
loope
jb
jmp
mov
mov
push
in
mov
iret
ret
lret
cmp
dec
data16
mov
jp
pop
sbb
dec
ret
mov
mov
dec
rcl
cs
fwait
mov
pop
subl
std
aam
lea
in
in
hlt
fcomi
jg
jg
mov
js
adc
rclb
xor
pop
xchg
cmpsl
cli
testl
mov
mov
bsr
lret
or
fnstsw
push
dec
xchg
xchg
insb
shrb
cmpsb
push
shrb
cmp
fisttpl
in
das
lea
pop
dec
fisttpl
mov
and
bound
js
jns
fwait
xchg
inc
mov
fs
dec
sbb
and
fistps
int
cwtl
add
mov
fcoml
and
push
test
leave
ds
ret
dec
jae
insb
lcall
cmp
loopne
scas
sbb
xchg
lods
jg
mov
jb
add
push
sbb
sbbb
mov
je
pop
jp
cmp
xchg
inc
je
icebp
push
fsubr
xchg
cmpsb
sub
add
mov
neg
in
in
push
in
movsb
cli
fwait
sub
pop
xchg
dec
cmp
push
jo
cmp
mov
lock
jl
push
adc
insb
xor
pusha
in
test
out
cmpsl
and
int
rol
mov
dec
mov
pop
pop
or
sub
int
lahf
xchg
daa
push
ss
cld
or
rcl
adc
push
bnd
test
lock
mov
jo
ja
add
inc
jno
jmp
imul
jb
stos
in
fwait
push
or
mov
cwtl
push
and
call
mov
adc
imul
mov
or
mov
push
aas
aas
subl
scas
jle
jmp
add
lea
ljmp
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
jmp
sti
icebp
lods
mov
outsb
fs
jg
xchg
lahf
cld
adc
jne
cmovg
bound
in
negl
stos
push
adc
sub
outsl
pop
es
sbb
fdivl
sub
aam
sbb
mov
popl
jbe
call
imul
cmp
insb
inc
lods
pusha
rclb
cmpsb
aaa
mov
add
jl
imul
push
clc
xor
sbb
mov
adc
stos
insb
adc
insb
mov
xchg
jmp
ret
mov
fdivrl
repz
insl
test
or
and
les
or
test
push
bswap
std
lret
jno
cmpsb
mov
cwtl
mov
rorb
push
call
cmpsl
sub
mov
aaa
mov
aam
or
outsb
mull
lcall
test
lahf
cmpsb
loope
dec
clc
test
jnp
sbb
lret
out
mov
loope
xchg
not
push
shlb
aam
sbb
pop
push
adc
adc
and
outsl
arpl
insl
jo
add
sbb
jbe
insl
gs
shlb
mov
out
add
imul
in
sub
ds
push
pop
add
lods
dec
mov
fstl
aaa
test
iret
cwtl
fcmovne
es
fcompl
je
xchg
mov
jecxz
test
in
dec
ss
je
rcrl
adc
jno
adc
jge
ljmp
jb
mov
in
les
mov
cli
scas
jbe
and
ljmp
or
dec
pop
pop
sbb
sub
insl
mov
clc
leave
xor
add
out
and
push
loop
inc
fistl
dec
mov
call
sbb
push
dec
or
lods
jmp
or
push
je
frstor
or
xor
fwait
xchg
mov
lahf
xchg
xor
sub
popa
xchg
mov
xchg
out
mov
push
mov
jb
es
jb
jno
js
and
mov
adc
test
push
lret
lds
lock
add
ds
lret
adc
or
lds
sbbb
pop
adc
loopne
sbb
shlb
jae
jle
jbe
outsl
cmpsl
cmp
rcr
dec
inc
dec
insb
outsb
popa
adc
dec
vlddqu
jmp
mov
lods
push
jo,pt
das
mov
mulb
add
popa
fsubr
lahf
xor
pop
int3
unpcklps
xchg
mov
dec
mov
imul
jne
insl
fwait
dec
adc
mov
test
cld
or
imul
test
xchg
aad
sar
xchg
dec
and
pop
cmp
sub
xor
nop
jb
cmc
pop
lods
cmp
jg
adc
aaa
and
push
pushf
pop
sub
push
mov
xor
dec
sbb
mov
jo
xor
adcl
sub
push
test
cmp
test
cmp
shrl
loop
aam
add
cmpsl
repnz
cmp
or
push
mov
out
jnp
adc
loopne
cmp
ss
clc
insb
stc
cltd
push
push
test
fld
into
push
gs
push
fisubrs
inc
sub
cli
insl
mov
mov
pushf
js
sub
inc
scas
adc
icebp
ret
mov
sub
sti
int3
jg
sbb
jbe
jmp
ss
imul
in
or
mov
mov
sti
add
sbbb
inc
clc
jp
aaa
add
mov
rorl
pop
in
jnp
push
test
mov
test
nop
out
push
bnd
inc
shll
andb
cmp
xchg
xchg
popa
dec
das
call
sahf
mov
fidivl
dec
fs
imul
adc
inc
cli
jb
xor
mov
sub
sbb
cmp
inc
mov
scas
sub
mov
pop
cmp
fdivl
inc
rcll
sbb
fsubl
pop
lods
insb
out
cmpsb
loop
pop
mov
stc
sub
inc
lahf
jb
mov
bound
loope
or
in
xchg
xor
mov
cmp
and
and
add
inc
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
cmp
jae
xorl
shrd
movl
shr
ret
adcl
mov
xorl
xor
sbbl
and
shr
ret
xor
xor
ret
push
mov
sub
cmpl
movl
movl
jmp
movl
notl
jle
push
pushl
call
notl
andl
andl
sbbl
adcl
movl
mov
incl
mov
adcl
movl
mov
movb
sbbl
movb
and
movb
adc
movzbl
andl
mov
sbbl
sub
addl
imul
movzbl
andl
push
and
andl
mov
addl
movb
movb
andl
movb
movb
negl
mov
mov
negl
add
adcl
imul
sbbl
mov
subl
or
mov
sbbl
and
mov
movl
cmp
ja
mov
mov
mov
or
mov
mov
cmpl
not
mov
movl
jmp
movl
jb
push
push
call
dec
xor
add
mov
add
adc
xorl
xor
adc
mov
movzwl
addl
movzwl
sbbl
shr
notl
or
sub
mov
subl
movb
notl
movb
mov
orl
mov
xor
xorl
add
mov
or
mov
movzbl
and
cltd
sub
push
cmpl
not
mov
mov
jmp
mov
je
push
push
call
mov
adc
xor
neg
adcl
or
adc
pop
adcl
idiv
mov
addl
movb
addl
movb
xorl
mov
mov
negl
add
movzbl
movzbl
xorl
cltd
idiv
mov
movl
cmp
jae
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
idiv
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
sub
mov
and
xor
imul
mov
push
sub
push
movl
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
or
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
and
add
cmp
jb
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
lea
add
movl
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
xor
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
add
imul
xor
mov
div
mov
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
xor
and
mov
add
mov
add
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
push
push
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
push
mov
mov
mov
push
push
push
call
push
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
push
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
or
xor
mov
xor
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
and
push
cmpl
not
mov
not
not
jmp
movl
movzbl
je
push
pushl
pushl
push
pushl
call
sbb
adc
adc
subl
add
push
adc
mov
cmpl
mov
mov
mov
jmp
mov
movl
ja
pushl
push
pushl
push
push
call
sbb
adc
xor
mov
mov
sub
sub
xor
add
xor
or
sub
and
addl
addl
sbb
mov
shrd
shr
cmpl
movl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
push
pushl
call
addl
orl
mov
add
mov
add
mov
sub
mov
mov
mov
sub
sub
xor
movzwl
sbb
mov
neg
xor
sub
or
mov
mov
cmpl
mov
mov
jmp
movl
mov
jne
call
dec
addl
xor
sub
inc
andl
mov
mov
adc
shl
cmpl
mov
movl
movl
jmp
mov
movzbl
jle
push
push
call
mov
adc
mov
adc
xor
inc
xor
or
or
notl
add
movl
mov
cmpl
mov
mov
jmp
mov
jge
pushl
push
pushl
pushl
call
andl
or
add
xor
or
shrd
xor
orl
shr
xorl
mov
and
mov
xor
or
or
cmpl
not
mov
mov
movzwl
jmp
mov
mov
jge
push
pushl
call
movzwl
xor
movzwl
add
mov
or
mov
sub
or
addl
xor
mov
mov
and
mov
mov
mov
mov
inc
mov
xor
mov
mov
mov
mov
cmpl
mov
movl
jmp
movl
movl
jle
pushl
push
pushl
pushl
call
not
andl
adc
sub
xor
shl
orl
xor
and
shld
sub
shl
inc
mov
orl
xor
addl
xor
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
cmpl
movl
movl
not
jmp
mov
movzwl
jle
push
push
push
call
sub
adc
or
sbb
adcl
sbbl
xor
adc
mov
mov
mov
and
mov
xor
shld
sbbl
shl
xor
xor
cmp
jne
movl
cmp
movl
je
cmpl
mov
movl
jmp
mov
not
jbe
push
pushl
push
pushl
call
xor
mov
add
adc
and
adc
not
mov
subl
mov
cmpl
mov
movl
mov
jmp
movl
mov
jg
pushl
pushl
pushl
call
subl
mov
add
add
add
xor
shl
mov
xorl
xor
shr
adcl
or
mov
mov
movzwl
or
mov
mov
and
mov
mov
cmpl
movl
movl
movl
jmp
movl
ja
pushl
push
call
and
orl
subl
subl
sbbl
orl
and
cmpl
movl
movl
movl
movl
jmp
movl
je
push
call
sbbl
movl
orl
andl
adcl
sbbl
xor
subl
cmpl
movl
movl
movl
jmp
movl
not
jb
pushl
pushl
call
xorl
sbb
add
addl
subl
movl
and
push
pop
sbbl
sub
mov
add
mov
lea
mov
mov
mov
sub
and
mov
xor
or
xor
mov
xorl
xor
xorl
shr
subl
shl
or
add
mov
cmpl
movl
mov
jmp
mov
mov
jae
push
call
add
sbb
or
movl
and
movl
add
mov
mov
andl
xor
movl
shr
shl
adcl
or
push
orl
lea
adcl
push
adcl
lea
push
call
cmpl
mov
movl
jmp
movzbl
jbe
push
push
pushl
pushl
pushl
pushl
call
orl
addl
movzwl
sub
mov
movzwl
sub
mov
sub
movl
sub
mov
mov
subl
xor
subl
shr
mov
xor
shl
or
cmpl
mov
mov
mov
jmp
movl
mov
jne
call
add
sub
add
adcl
mov
or
movzwl
or
push
lea
sub
push
or
mov
mov
sbb
shrd
sbb
shr
xor
add
xor
or
sub
imul
mov
notl
mov
xor
addl
xor
or
xorl
lea
adcl
push
adcl
shl
subl
call
mov
mov
xor
shl
cmpl
mov
movl
mov
jmp
movl
jne
push
push
call
xorl
xorl
add
orl
and
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
push
call
mov
mov
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
mov
rol
mov
xor
mov
cmp
je
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
sub
mov
adcl
or
movl
mov
jne
sub
mov
adcl
mul
ret
push
mul
cmpl
movzbl
movl
push
pop
jmp
mov
mov
je
push
push
pushl
push
push
push
pushl
call
mov
sbb
mov
not
movzwl
adc
mov
mov
add
mov
xorl
sbb
mov
adc
mov
xorl
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
push
mov
and
sub
push
push
push
mov
pushl
call
test
jg
movl
movl
movl
push
dec
movl
mov
xor
mov
andl
push
notl
push
orl
push
call
sbbl
push
andl
push
and
and
push
subl
push
andl
call
cmpl
mov
movzwl
notl
movl
jmp
movl
jbe
push
push
pushl
call
neg
subl
dec
sbb
subl
xor
or
mov
sub
or
mov
mov
xor
or
cmpl
movl
not
jmp
mov
jg
push
push
push
push
call
sbbl
xor
movzwl
and
orl
xor
mov
xor
or
mov
movl
movl
or
movl
sbb
movl
mov
xor
or
sub
add
movl
cmpl
mov
mov
jmp
mov
movl
jg
push
push
pushl
call
dec
xor
inc
adc
movl
xor
add
xor
mov
adcl
movl
cmpl
mov
movl
jmp
mov
mov
jg
push
push
call
addl
mov
sbb
sbbl
mov
mov
sub
xor
xor
or
xor
movl
or
sub
sbb
mov
cmpl
mov
movl
notl
jmp
mov
movzbl
jg
pushl
call
xor
movzbl
sub
mov
mov
sub
add
adc
xor
mov
mov
mov
andl
or
or
mov
or
mov
sub
mov
mov
sbb
or
mov
xor
subl
xor
addl
and
adcl
and
cmp
movl
jne
cmp
jne
movl
decl
movl
xor
movl
adc
movl
xor
or
mov
sub
xor
movl
mov
and
mov
sub
adc
mov
orl
imul
subl
and
notl
imul
mov
xorl
pushl
or
imul
adc
xor
mov
movl
div
mov
xor
cmpl
movl
notl
mov
jmp
movl
je
pushl
pushl
push
pushl
push
call
sbb
adcl
or
mov
sbb
mov
add
cmpl
mov
mov
not
jmp
mov
jb
pushl
push
call
neg
mov
mov
xor
sbb
sub
sbb
cmpl
movzwl
mov
movl
jmp
movl
jl
pushl
call
sbb
or
addl
and
sub
xor
add
mov
sub
dec
mov
sbbl
sub
addl
or
xor
adcl
pushl
pushl
addl
call
addl
pushl
call
movl
cmpl
mov
movl
not
jmp
mov
mov
jge
pushl
call
and
add
adc
xor
movl
adc
movl
xorl
movl
movl
movl
mov
mov
xor
mov
mov
subl
add
movzwl
mov
adc
add
mov
add
adc
and
xorl
mov
orl
and
mov
movl
movl
subl
movl
orl
movl
dec
cmp
jne
and
movl
mov
xorl
mov
subl
movl
mov
subl
call
andl
lea
mov
cmpl
movl
movzbl
jmp
movl
jb
push
call
adc
sub
and
andl
mov
xor
add
sub
imul
xor
sub
lea
mov
sub
mov
sbb
mov
add
mov
mov
decl
xor
shl
and
shr
movl
or
mov
or
mov
mov
cmpl
movl
mov
movl
jmp
mov
movl
ja
pushl
push
push
pushl
call
and
xorl
add
sub
addl
addl
cmpl
not
mov
jmp
not
jae
push
call
adc
subl
and
xor
add
adc
and
mov
cmpl
not
mov
jmp
movl
movl
jbe
push
pushl
call
or
andl
and
sub
adc
mov
and
mov
mov
mov
shrd
shr
and
mov
not
mov
movl
xor
xor
andl
or
mov
sbb
mov
mov
orl
push
addl
pushl
subl
lea
andl
push
adcl
shl
orl
call
addl
lea
addl
push
mov
mov
sbbl
lea
orl
push
mov
orl
lea
adcl
mov
adcl
mov
mov
push
call
subl
push
andl
push
pushl
xorl
call
andl
mov
or
mov
and
mov
cmpl
mov
movl
mov
jmp
mov
jg
push
pushl
push
push
push
call
sbb
xor
or
mov
adc
xor
adc
mov
shr
not
shl
or
sub
mov
or
xor
mov
notl
lea
xor
mov
lea
movzbl
or
mov
cmpl
mov
movl
movl
mov
jmp
movl
movl
je
push
call
or
add
mov
or
mov
xor
inc
add
not
mov
mov
and
mov
cmpl
mov
mov
mov
jmp
movl
mov
jne
push
call
or
sbb
addl
add
orl
mov
mov
sub
sub
movzwl
sbb
mov
and
sub
cmpl
movzbl
mov
movl
jmp
movl
jae
pushl
call
add
add
movzbl
add
add
movl
add
lea
andl
xor
cmpl
mov
mov
movl
jmp
mov
jg
push
pushl
pushl
push
push
call
or
adc
xor
mov
adc
mov
movl
movl
movl
cmpl
movl
not
jmp
movl
not
jle
push
call
subl
not
orl
and
and
mov
or
mov
movl
mov
mov
add
mov
not
mov
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
shr
or
or
mov
mov
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
cmpl
movl
mov
movl
jmp
movl
jbe
push
pushl
push
pushl
push
call
adcl
sbb
sub
adc
mov
xor
mov
mov
mov
sub
xor
movl
cmpl
mov
movl
movl
jmp
mov
mov
jle
push
push
pushl
pushl
call
adcl
notl
dec
add
subl
sbb
not
sub
movl
mov
subl
mov
xor
xor
mov
xor
and
adc
mov
sub
xor
or
and
cmpl
mov
mov
not
jmp
mov
jl
push
push
call
inc
xorl
and
sub
sub
add
mov
add
xor
mov
or
movl
movl
mov
sbb
mov
add
xor
sub
adcl
mov
or
imul
adc
xor
mov
or
div
subl
sub
and
mov
movl
sub
movl
movl
mov
mov
adc
movl
cmpl
movl
mov
movzbl
jmp
mov
movzbl
jg
pushl
push
push
push
call
or
xor
or
or
mov
sub
add
inc
movl
mov
sbb
mov
movl
movl
mov
xor
mov
imul
adc
add
xorl
and
adc
sub
cmpl
mov
movl
mov
mov
jmp
mov
je
pushl
push
push
call
add
adc
neg
and
not
mov
sub
or
mov
mov
cmpl
mov
movl
mov
movl
jmp
movl
jne
push
pushl
push
call
inc
or
dec
sub
adc
adc
or
add
sub
add
mov
xor
adcl
div
not
mov
sub
and
mov
add
addl
mov
cmpl
mov
mov
mov
jmp
mov
mov
jle
push
push
call
add
add
sbbl
subl
xorl
movl
movl
dec
movl
cmpl
movzbl
mov
jmp
mov
jne
pushl
pushl
pushl
push
call
sbb
orl
movzwl
adc
add
mov
mov
add
mov
xor
add
mov
andl
xor
movl
div
add
and
mov
or
cmpl
movl
mov
jmp
movl
movl
jg
push
push
push
call
mov
sbb
mov
add
mov
movzbl
sub
subl
decl
adc
cmpl
not
mov
jmp
mov
movl
jae
push
push
push
push
call
xor
sbbl
mov
sbb
mov
inc
mov
mov
sub
sbbl
cmpl
mov
movl
mov
jmp
mov
movl
jg
pushl
call
mov
adc
mov
mov
adc
mov
mov
xor
xor
or
mov
sub
sub
adcl
mov
and
movl
movl
movl
and
movl
mov
sub
mov
orl
xor
sbb
xor
push
xor
pop
orl
div
mov
andl
xor
div
mov
or
sub
xor
mov
xor
movl
inc
mov
movzwl
sbb
mov
xor
div
imul
adcl
xor
xor
sub
imul
xor
dec
mov
adc
movl
cmpl
movzwl
movl
mov
jmp
movl
mov
jg
pushl
push
pushl
pushl
pushl
pushl
push
push
pushl
push
push
call
adc
xor
mov
adc
mov
mov
xor
mov
xor
or
xor
mov
movzwl
sub
or
or
movl
movl
cmpl
mov
movl
movzwl
jmp
mov
movl
ja
pushl
call
xor
dec
adc
movzbl
sbb
xorl
mov
and
mov
xor
subl
div
mov
sub
mov
orl
imul
xor
add
mov
or
add
xor
sbb
mov
sub
movzbl
or
mov
mov
movl
cmpl
notl
mov
mov
mov
jmp
notl
mov
jg
pushl
call
notl
adc
adc
sbb
movl
mov
or
and
notl
and
or
xor
cmpl
mov
mov
movl
jmp
movzwl
mov
jg
pushl
push
pushl
call
movzbl
sbb
add
negl
sub
dec
mov
movl
movl
movl
cmpl
movl
movl
movl
mov
jmp
mov
jb
pushl
push
push
call
mov
and
mov
neg
xor
andl
and
movl
mov
xor
and
add
xor
add
or
or
cmpl
notl
movl
mov
movl
jmp
movl
jle
push
pushl
push
push
pushl
pushl
pushl
push
call
adc
mov
add
or
sub
neg
sbb
sub
mov
inc
movl
cmpl
mov
movl
mov
jmp
mov
mov
jne
push
pushl
call
decl
decl
sbbl
and
movl
movl
movl
xor
mov
shr
xorl
sub
cmpl
movl
mov
mov
mov
jmp
mov
movl
jbe
pushl
pushl
call
add
xorl
mov
sbb
and
adc
or
xor
mov
lea
sbbl
push
adcl
call
addl
mov
adc
or
cmpl
mov
mov
jmp
movl
movl
jbe
push
pushl
call
sub
mov
xor
or
sub
imul
negl
sbbl
and
mov
orl
or
xor
and
lea
adc
mov
movl
movzwl
xor
movl
movl
xor
xor
or
movl
movl
and
movl
cmpl
mov
not
movl
movl
jmp
mov
notl
jg
push
call
sbb
orl
xorl
add
xor
xorl
xor
xor
xor
mov
sub
or
movl
sbbl
movl
mov
mov
mov
sub
xor
mov
sub
and
cmpl
movzbl
movl
jmp
movl
movl
je
push
push
push
push
push
call
sub
or
notl
sub
xor
add
add
mov
sbb
sub
and
sub
or
mov
sbb
lea
mov
mov
add
mov
add
mov
mov
imul
sbbl
and
cmpl
mov
mov
mov
movzbl
jmp
notl
mov
jbe
pushl
pushl
pushl
push
pushl
pushl
call
xorl
add
movzbl
adc
not
or
imul
mov
lea
mov
addl
movl
movl
movl
movl
mov
sbb
mov
or
mov
movl
xor
andl
xor
sbbl
mov
call
cmpl
movl
movl
movzbl
movzwl
jmp
movl
movl
jb
call
sub
and
and
add
adc
subl
sub
sbbl
mov
mov
sub
mov
mov
adcl
xor
xor
mov
call
xorl
or
or
sub
mov
or
mov
andl
xor
xorl
xor
mov
call
mov
cmpl
movl
mov
movl
jmp
movl
jbe
call
or
xor
inc
or
andl
cmpl
notl
mov
jmp
mov
movl
je
push
pushl
call
mov
mov
and
sbb
not
mov
sub
sbb
or
and
mov
movl
mov
mov
xor
xorl
xor
addl
mov
mov
xor
mov
xor
or
mov
sub
mov
movl
mov
mov
movl
call
cmpl
mov
movl
mov
jmp
movl
movl
ja
push
push
call
and
addl
adcl
movzbl
xor
or
mov
adcl
or
mov
or
subl
push
push
subl
push
andl
push
orl
call
movzbl
mov
cmp
movl
jne
mov
sub
mov
mov
xorl
mov
subl
xor
xorl
xor
mov
call
adc
mov
add
mov
xor
mov
mov
incl
xor
addl
xor
xorl
mov
xorl
call
or
and
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
mov
sub
mov
xor
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
sub
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
or
mov
xor
mov
sub
mov
mov
sub
mov
xor
mov
div
mov
xor
div
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
notl
jmp
movl
mov
jle
pushl
push
push
pushl
call
negl
addl
orl
adc
sbbl
sbbl
not
push
push
not
mov
or
movl
jne
cmpl
movl
mov
mov
jmp
mov
jl
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
sbb
and
or
xor
xor
mov
sub
add
add
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
je
add
mov
mov
pop
pop
movl
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
shld
shl
ret
xor
mov
addl
xor
and
shl
ret
xor
xor
ret
