mov
mov
ret
mov
mov
ret
cmp
movl
jmp
xor
sbb
push
or
nopl
jmp
mov
xlat
roll
les
in
data16
ljmp
push
aas
inc
adc
rolb
dec
ret
clc
loopne
jmp
jbe
cwtl
lds
and
out
mov
mov
jge
mov
loop
stos
xor
int
popf
inc
idiv
sbbl
out
stos
xchg
pop
cmpsl
cmp
or
sub
jae
adc
dec
ss
mov
jne
lret
push
outsb
aam
jle
mov
cwtl
pop
idivl
addr16
mov
xchg
xchg
cmc
imull
or
mov
ror
enter
cwtl
xorl
mov
scas
pop
xor
in
sub
adc
insl
mov
stos
cmpb
jno
pop
push
mov
bound
cli
or
pusha
pusha
addb
adc
mov
js
hlt
fcomip
jp
mov
cmp
movsl
xor
sarl
fs
addr16
sbb
or
aaa
add
cwtl
out
cmp
cmc
push
lea
imul
int3
enter
pop
fwait
push
xchg
cmp
inc
sub
push
add
jne
loope
mov
shrl
sbb
jecxz
mov
xor
add
pop
sub
mov
jbe
and
pushf
pop
sahf
xchg
mov
push
mov
pop
xor
mov
mov
xchg
in
shlb
dec
inc
test
or
adc
cmp
mov
movsb
movl
dec
insl
scas
push
lds
push
sbb
mov
cltd
inc
sbbb
push
cltd
mov
mov
arpl
inc
data16
sbb
lds
xchg
fimull
setp
test
daa
aaa
mov
mov
xchg
lock
xchg
inc
pop
fst
or
test
xchg
push
jbe
or
bound
xchg
pop
xor
add
or
add
aaa
dec
setp
stos
clc
int3
shr
js
pop
sbb
mov
pop
aad
add
mov
fdiv
push
and
sub
mul
lcall
gs
dec
movsb
divl
push
insl
jae
lods
pushf
jp
xchg
shlb
fldenv
pop
push
inc
sbb
gs
lret
inc
mov
or
sbb
idivl
push
push
jmp
lods
aad
pop
sbb
mov
and
dec
ret
sub
test
shll
repnz
je
xchg
test
addr16
xor
cmp
neg
xchg
sub
jl
sub
das
bound
in
jbe
rorb
data16
frstor
js
cmpb
std
adc
or
mov
shlb
inc
stos
mov
or
into
mov
xor
inc
jecxz
loop
sub
dec
mov
mov
or
je
sbb
push
xchg
inc
fwait
jns
or
adc
xchg
adc
add
cmp
push
dec
dec
loope
mov
xor
lods
shrl
xor
lahf
out
and
les
hlt
xor
push
pop
loop
inc
lahf
popa
cmc
xor
js
adc
cs
in
ficompl
outsb
aas
xor
xor
js
es
push
inc
sbb
fists
xlat
clc
jb
cs
scas
xchg
repz
aas
push
adc
ja
cltd
imul
rcrl
mov
jbe
adc
or
movsl
stos
int
hlt
sbb
pop
nop
insb
add
sbb
lret
mull
mov
jg
dec
xor
or
mov
scas
in
int3
add
xchg
mov
adc
mov
jbe
pop
mov
cmp
aam
bnd
pop
xlat
loopne
inc
out
add
mov
ljmp
xor
repz
mov
mov
mull
cli
dec
jnp
repz
jle
in
push
pop
pop
sahf
cs
aaa
push
in
adc
clc
or
xchg
lret
sti
or
stc
xor
pop
adc
data16
mov
adc
xchg
mov
or
sahf
repz
push
das
pop
test
iret
mov
nop
cmp
pop
xor
shlb
imul
js
lea
hlt
sub
sub
mov
daa
sbb
js
adc
xchg
aam
adc
aad
mov
add
adc
cli
sti
mov
jne
mov
lret
jle
lahf
push
xchg
cmpsb
jp
inc
outsl
test
stos
adc
jne
jo
dec
cmpsl
xor
xor
pop
push
loopne
lret
je
mov
pushf
scas
jno
jno
rorb
sarl
xor
and
mov
sub
xor
inc
hlt
xchg
out
xlat
lret
pop
test
dec
push
lahf
jns
lret
loop
cmp
in
jnp
in
test
xchg
xchg
lahf
mov
ds
pop
in
fs
stos
push
test
cmp
and
mov
pop
sub
add
mov
pop
jo
movsl
xchg
jae
lods
push
call
fwait
jbe
add
imul
pop
push
subps
ja
lcall
in
push
xor
adc
js
rorb
popl
lods
dec
sbb
add
addr16
mov
mov
and
mov
mov
mov
inc
jmp
mov
push
out
iret
cmp
outsb
test
imul
pop
sub
icebp
mov
mov
rol
inc
mov
and
mov
pop
lods
into
enter
jae
mov
loopne
adc
dec
cld
sbb
test
dec
in
clc
outsb
xor
and
jg
xchg
mov
out
and
cmpl
sub
notl
sbb
cmp
mov
add
fldcw
shlb
mov
and
dec
in
mov
insl
fdivr
sbb
or
daa
and
adc
outsb
and
call
inc
stos
sub
in
xorb
mov
and
inc
pop
and
jbe
dec
jno
scas
sahf
mov
fimull
add
push
bnd
xchg
and
arpl
mov
lcall
mov
shll
push
daa
es
add
testb
movb
addr16
repz
inc
popa
aas
sahf
aas
or
mov
pushf
arpl
aam
lds
in
xchg
jne
inc
inc
adc
paddsb
or
loope
call
inc
pop
push
fdivrp
popa
test
xor
mov
and
cmp
inc
mov
ret
push
out
loope
fdivrp
push
fwait
inc
lcall
fidivrs
inc
mov
inc
mov
scas
imul
mov
fbld
pop
jl
pop
jg
cmp
cmpl
add
movl
cmp
movl
jae
adcl
shrd
shr
ret
inc
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
movl
movl
movl
movl
movl
jmp
cld
xor
test
mov
mov
push
add
pswapd
out
das
inc
lods
xchg
mov
ljmp
sahf
mov
push
loop
es
jnp
push
test
adc
int
loop
test
mov
lock
mov
pusha
std
mov
inc
lods
rol
and
xchg
jmp
test
and
jp
out
loop
xor
aas
xchg
mov
sbb
push
popa
imul
cmp
sbb
pop
insb
add
push
in
imul
cs
dec
pop
mov
pop
xor
das
or
jae
fmull
push
pop
mov
daa
xor
pop
pop
dec
sar
and
jecxz
icebp
xor
popf
inc
aaa
idivb
popa
std
int
insl
popf
jle
mov
popf
mov
outsb
scas
insl
insb
lods
in
mov
inc
lret
xchg
lahf
jle
inc
mov
lea
inc
ss
in
ja
sbb
xor
bound
mov
hlt
out
adc
pushl
xchg
into
cmp
add
inc
nop
mov
sub
subl
adc
stos
testb
in
sarb
mov
js
fwait
pop
nop
sarb
je
lods
jns
dec
subb
adc
jnp
out
subl
lret
inc
mov
mov
mov
xor
lock
push
lods
cmpsb
sbb
dec
xor
inc
out
cmp
nop
cmp
das
loope
push
scas
aam
xor
int
je
data16
push
pop
xchg
adc
xor
push
push
push
mov
in
lock
adc
jno
add
sub
xchg
jns
in
lret
subb
push
jb
mov
sbb
mov
dec
in
push
and
push
addb
xchg
test
in
fcomps
clc
sarl
push
mov
jb
pop
pusha
aas
sub
push
jo
test
ret
ss
cmc
nop
mov
ror
in
and
insb
mov
lret
xor
sbb
add
adc
jo
and
jl
and
popf
cmp
test
test
mov
adc
ds
popf
adc
jne
xchg
pop
movsb
mov
and
lret
lret
inc
pop
adcl
mov
lahf
add
not
in
mov
pop
into
into
pusha
lret
pop
mov
xchg
jle
push
dec
test
or
mov
and
femms
xor
push
push
test
sub
lret
scas
pop
sub
shlb
add
add
mov
jge
push
mov
setno
stos
popf
stc
ljmp
fiadds
dec
scas
push
adc
std
jae
add
add
mov
in
cltd
daa
in
cmpsl
fdivl
rcl
ret
scas
pusha
hlt
cmp
sbb
insl
adc
mov
enter
push
push
ret
or
mov
sub
xchg
rcrb
inc
aad
xchg
add
repz
xor
sbb
sar
jmp
aaa
out
jo
scas
popa
movsb
lahf
fnstcw
push
inc
lret
stos
push
mov
scas
insl
sbb
mov
add
cld
ds
push
mov
scas
xor
jmp
and
xlat
cmp
hlt
mov
dec
loop
aaa
orb
xchg
xlat
and
cmp
and
xchg
bound
data16
dec
je
pop
cs
pop
leave
mov
loopne
xor
jns
imul
stos
es
pop
js
iret
fbstp
xchg
cli
sahf
add
je
out
leave
jle
cmp
adc
imul
jbe
fisubrl
mov
test
sub
mov
aaa
dec
mov
adc
lea
mov
repnz
gs
sbbl
lds
into
cmpsb
jno
jg
aas
pop
push
pop
xor
pop
ds
iret
std
in
push
push
lahf
mov
insl
mov
rep
in
mov
jg
shl
inc
movsl
popa
nop
push
jb
push
mov
mov
nop
mov
cmp
test
gs
push
and
sub
sbb
jb
xor
dec
pop
sub
jmp
xor
jne
mov
push
sbb
dec
and
lds
or
sbb
jae
sub
add
jo
mov
lods
adc
mov
imul
or
mov
fs
lret
mov
daa
data16
or
mov
sub
inc
iret
jecxz
fwait
repz
imul
je
sub
shrd
inc
xchg
mov
mov
sbb
je
stos
cli
negl
adc
cli
mov
in
and
call
pop
or
inc
sarb
dec
decb
in
inc
pop
outsb
into
inc
jge
xorl
jae
mov
enter
into
popf
sub
imul
inc
mov
outsb
scas
jne
lds
popl
sbb
pushf
mov
fs
xor
fsubrs
pop
loope
stos
xchg
loop
push
leave
pcmpeqb
aaa
sbb
cmp
push
mov
out
incl
in
cli
sbb
push
cmp
xor
or
and
sub
xchg
mov
clc
pop
and
sub
mov
mov
sahf
jbe
dec
rcr
jge
movsb
xor
push
xor
and
jg
ljmp
fdivr
cmp
rcrl
sbb
mov
movl
movl
movl
movl
jmp
lds
mov
inc
xchg
inc
inc
das
ljmp
loope
pinsrw
pushl
loop
xchg
insl
cld
jbe
cmp
jae
xchg
shlb
adc
inc
jecxz
or
fcompl
cmp
xchg
jns
cli
or
sub
push
push
pop
test
and
dec
cmp
mov
mov
pushf
in
and
xor
or
fisttps
rorl
xchg
push
stos
je
cmp
mov
xchg
add
insl
enter
add
call
popa
je
xor
sbb
popa
sub
xor
imul
cltd
jl
sub
icebp
push
pop
pop
adc
sahf
sub
or
sbb
push
or
data16
insl
jl
test
filds
mov
mov
inc
sub
push
inc
arpl
or
fdivrp
and
xor
pop
stos
andb
stos
pop
adc
sbb
outsl
movsl
adc
push
pop
gs
cmp
xor
pop
pop
mov
push
rcrl
inc
mov
sub
add
out
push
es
inc
dec
sbb
mov
inc
sbbl
mov
mov
in
mov
pop
jmp
inc
int
sbb
add
inc
push
mov
push
xchg
pop
clc
fldcw
fildll
das
push
and
mov
sbb
in
movsb
scas
mov
mov
fwait
push
popf
sahf
fdivrl
push
mov
dec
jne
gs
lea
and
sbb
inc
scas
scas
pinsrw
dec
stos
sbb
in
adc
sarl
dec
sti
sti
das
inc
out
jmp
add
in
mov
mov
loopne
mov
push
push
push
add
dec
icebp
mov
sbb
jecxz
xor
cli
fidivrs
mov
stos
in
add
movsl
add
inc
push
mov
rorb
pushf
sub
fwait
int
xor
or
testl
lret
sbb
outsl
int
jno
enter
repz
push
sahf
push
jmp
outsb
out
mov
adc
sbb
and
rorl
inc
psrlw
jle
xor
mov
fs
stc
sahf
sub
mov
mov
dec
scas
cld
lret
sub
js
cmp
shll
sub
adc
cmpb
pop
stos
xor
cmp
sbb
add
mov
shrb
int3
loope
jmp
lds
fcmovne
sarb
sub
dec
or
es
mov
mov
and
jo
inc
aaa
popf
xchg
mov
test
push
mov
mov
xchg
icebp
adc
and
loopne
or
add
lcall
pcmpgtd
inc
inc
or
loope
mov
or
mov
arpl
and
pop
sbb
shll
stos
popa
loop
add
idivl
mov
xlat
jb
js
pop
mov
ficompl
mov
negb
xchg
test
lods
push
cmpsl
cmp
stos
pop
jno
mov
stos
jge
scas
lds
int3
ds
mov
pop
rolb
out
in
pop
repz
add
leave
push
xchg
idivb
in
sbb
cmpsl
mul
jns
test
into
ret
sub
pop
ret
scas
loopne
or
push
cmp
adc
jle
adc
inc
cmp
jge
lahf
and
rcl
out
out
lret
addr16
pop
xchg
xchg
ljmp
push
hlt
daa
mov
shl
pop
cmc
leave
or
shr
leave
aad
pop
and
lret
stc
test
sahf
int
lcall
pop
mov
and
jne
cmpsl
xor
int3
addr16
popa
mov
popa
and
jno
mov
popa
sub
mov
cmc
test
pusha
shr
pop
cmove
rol
test
xchg
stc
lock
mov
fsubrs
aad
sbb
inc
jp
gs
arpl
dec
pop
aad
in
nop
cld
xor
jae
jge
sub
mov
pusha
lods
andb
adc
enter
push
cld
mov
ds
cltd
xorb
incl
cli
mov
out
pop
je
adc
push
inc
or
cld
btc
inc
lods
outsb
sub
es
sbb
xchg
and
jmp
adc
stc
jns
add
jb
data16
aas
inc
arpl
mov
mov
sbb
mov
mov
cmp
ds
test
sub
mov
cwtl
cld
mov
sahf
lds
call
dec
push
xchg
and
test
add
mov
clc
lea
mov
mov
adc
into
or
push
rorb
jmp
rol
daa
or
or
movsl
and
pop
or
hlt
xor
mov
cmpsl
repnz
sbb
outsb
or
idivb
les
adc
cmp
in
aaa
mov
or
cmp
lcall
andb
dec
dec
push
and
js
inc
jbe
lods
xor
mov
and
sbb
xchg
iret
and
inc
js
aas
xchg
push
add
sti
pop
jg
sarl
cmpl
adc
dec
in
xor
mov
mov
movsb
sbb
mov
ret
das
adc
fcoms
mov
push
push
pop
mov
hlt
xor
xchg
lret
sub
xchg
sbb
in
pop
xchg
movl
movl
mov
mov
jmp
pop
inc
sti
and
jbe
pop
js
mov
pinsrw
jge
mov
xor
aam
add
sub
xchg
push
ds
adc
xchg
cwtl
inc
dec
sbb
adc
mov
loop
add
or
mov
mov
lds
mov
adc
push
sub
mov
in
icebp
loop
pop
stos
pushf
mov
dec
cmp
mov
data16
out
and
sahf
pop
sbb
inc
push
adc
pushf
jae
jecxz
or
push
add
cli
std
push
inc
inc
sahf
lods
hlt
in
pusha
sar
insb
jae
test
sub
jns
jl
test
adc
data16
cli
rcll
adc
cmp
pop
shrb
cmp
jl
cmpb
outsl
cmp
fldt
cwtl
lock
arpl
mov
in
xchg
or
xor
nop
jae
outsb
push
xchg
jg
popa
or
pop
mov
out
jmp
aad
imul
popf
aaa
clc
fcmove
mov
loope
jno
pop
and
daa
add
jbe
dec
out
ds
jae
js
das
push
lea
movsb
sbb
jno
fildll
fs
push
std
dec
outsb
enter
and
std
aad
ljmp
cli
test
adc
cmp
lret
sub
or
lds
or
add
cmp
mov
xchg
push
xchg
movsb
stc
enter
dec
mov
ret
mov
push
mov
cmp
into
push
call
jnp
popa
lret
out
xchg
mov
mov
pop
jae
in
orb
loopne
mov
dec
sub
xchg
inc
imul
or
rcl
jecxz
cmpsb
in
xorb
push
rorl
sarl
xor
int
xchg
pushf
cmc
jnp
dec
cmp
xor
shlb
inc
sub
mov
rcll
adc
not
mov
ss
mov
add
or
cmpsb
pushf
mov
xchg
mov
sbb
shr
stos
das
outsb
cld
xchg
xchg
cmp
add
loop
jmp
inc
stos
mov
dec
pop
mov
out
out
cli
movsb
add
popf
mov
pop
mov
lahf
mov
mov
xchg
lcall
cli
mov
xchg
mov
jno
fucomi
xor
imul
jnp
cs
lahf
stc
lret
push
mov
inc
cmp
and
and
mov
push
jno
es
out
or
nop
xor
in
dec
fcompl
lods
and
mov
xlat
mov
sbb
adc
loop
dec
clc
jb
jl
add
jnp
add
fs
out
xchg
and
ljmp
fdivrl
sbb
xchg
ret
call
pop
cs
and
cltd
ss
pusha
sbb
fisubl
add
jge
pop
adc
out
jge
int3
inc
jge
pop
les
mov
and
jae
repnz
out
fmulp
fstpt
lods
push
clc
xchg
mov
mov
inc
sub
or
dec
mov
inc
sarb
pop
adc
sub
aam
cmp
add
hlt
dec
dec
jg
in
push
fistps
fists
jbe
xchg
fnstsw
sub
test
hlt
out
cmp
pop
xor
pop
inc
sbb
sahf
je
add
fsubl
jb
jno
and
pop
adc
paddusb
adc
outsb
pop
cmp
call
clc
sbb
push
jae
push
push
test
xchg
shl
cmpsb
xor
pushf
faddl
xor
pusha
push
outsl
add
rclb
pop
and
pop
push
dec
insb
aas
xor
xchg
xor
xor
xor
xchg
aaa
insb
sbbb
scas
pop
sarb
sub
std
and
xchg
and
adc
push
xchg
cmpsl
xchg
pop
pop
leave
cmp
lahf
inc
inc
xor
rclb
pop
sbb
push
mov
popf
cs
inc
rcll
inc
cmp
repnz
cmpsb
decb
pop
cmpsl
push
xor
adc
and
mov
jg
pop
cwtl
adc
xchg
ret
xor
sub
lret
cltd
cmpsb
add
sbb
inc
subb
shll
dec
cmc
adc
dec
repz
mov
lods
mov
out
pop
push
enter
in
ret
sbb
daa
sub
and
rclb
loopne
outsb
fldcw
std
xchg
sbb
arpl
or
jno
lahf
sub
jne
lock
es
xor
stos
subb
mov
mov
pop
jae
jmp
ficompl
lods
shrb
add
jns
adc
push
pushf
addr16
ss
mov
mov
mov
out
sub
jae
dec
cmp
dec
aam
ljmp
dec
pushf
add
out
or
and
fidivl
xor
imul
jmp
fs
add
pop
pop
pop
imul
jg
fcoml
in
fidivrl
int
stos
jno
mov
je
push
stos
mov
pop
xchg
repz
mov
mov
pop
jne
and
cmp
imul
push
jmp
sbb
stos
int
sub
repnz
cmp
push
and
es
sbb
test
imul
inc
ds
pop
xchg
push
arpl
jle
cmpsb
or
mov
shll
ds
jb
fidivs
cmp
imul
shlb
add
cld
lods
pushaw
repnz
shlb
cs
adc
je
add
mov
and
xor
imul
mov
push
sub
push
movl
jmp
ljmp
stos
lea
jbe
xchg
js
cmp
pinsrw
pop
mov
inc
out
pop
out
push
xor
push
mov
jb
and
ret
cwtl
ja
test
mov
mov
pusha
sti
outsb
arpl
aaa
in
fstpt
push
addl
xchg
fisttps
call
or
sub
sbb
rcrl
orb
xor
sbb
out
adc
push
movsb
in
sub
fs
scas
or
shll
push
inc
loopne
into
dec
push
sub
pop
adc
test
stc
fcompl
push
aad
fwait
push
fidivrl
ds
add
dec
cmpl
loop
cli
pushf
mov
pop
pop
psraw
hlt
outsb
aas
dec
mov
loop
pop
xchg
lea
repnz
xor
scas
in
in
lret
or
idivl
scas
repnz
mov
add
push
jecxz
das
mov
or
imul
cmp
and
cmpl
adc
je
push
test
mov
fsubr
and
jecxz
adc
and
and
add
incb
mov
insb
xor
sub
cli
cltd
mov
xchg
xor
mov
sarl
push
push
addb
inc
shll
mov
sub
mov
out
inc
sti
adcb
test
cmp
les
sub
ja
push
or
dec
xchg
add
or
fstps
insl
and
shl
xchg
stc
fisubrl
push
cmp
push
lea
mov
fchs
mov
ljmp
test
dec
and
aaa
xchg
xorb
jb
shll
lahf
in
imul
fs
call
addl
cmpb
loopne
outsb
mov
adc
or
daa
mul
xor
add
lret
int
jnp
xchg
inc
jbe
pop
test
and
xchg
mov
adc
xor
lahf
mov
or
jmp
sub
shrl
cmp
xlat
sbb
add
int
dec
iret
xchg
call
sarl
scas
movsl
bound
inc
jo
inc
add
mov
dec
mov
call
data16
je
aam
fwait
inc
xchg
test
fsts
mov
rcl
mov
cwtl
inc
sbb
push
aaa
add
sbb
adcb
cmpsl
adc
jno
sarl
ret
xor
jnp
sub
fstl
sbb
dec
add
sub
cwtl
icebp
fwait
movsl
and
sbb
mov
push
in
and
cmp
sbbl
aad
sub
test
xchg
xor
fcmovb
mov
ljmp
xor
push
jns
pop
fisubs
bound
mov
loopne
sub
mov
ret
leave
out
jo
leave
arpl
imul
jo
loopne
xor
xchg
pop
fiadds
xchg
push
ja
imul
arpl
mov
daa
pop
and
mov
push
ss
movsl
fidivrl
js
adc
or
dec
adc
cmc
sti
cmp
xchg
gs
std
pop
rcr
fimull
mov
mov
lods
js
and
mov
scas
aad
push
shll
shr
fcomps
stos
dec
sub
push
movsl
pop
int
push
push
inc
dec
outsl
pop
cmp
xchg
push
xor
mov
pop
push
mov
xlat
pop
dec
xor
xor
in
xchg
mov
pushf
aaa
mov
jb
ret
popf
jne
imul
jmp
out
mov
mov
adc
push
jns
lods
leave
xor
movsb
sub
sbb
sub
jge
call
xchg
or
shrb
lea
jns
mov
lods
push
clc
push
xorb
in
pop
andb
adc
loop
add
imul
sbb
push
int3
inc
xchg
testl
into
enter
pop
inc
lcall
mov
out
fsubrs
scas
jg
rcrl
and
repnz
mov
lods
and
out
dec
pop
jo
jge
cmp
mov
lret
sarl
xchg
pop
dec
inc
or
pop
cmc
pop
mov
xor
stos
or
mov
inc
in
insb
sbb
cmc
into
jg
cmc
scas
ret
jmp
push
shrb
movsb
mov
cwtl
test
jbe
cmpsl
sbb
out
add
xor
mov
pop
mov
add
dec
mov
xor
insb
mov
js
outsl
js
mov
hlt
push
xor
flds
fstpt
data16
inc
divb
adc
hlt
sbb
fisubs
add
lock
add
rcr
leave
or
xor
push
sub
cmp
test
call
aaa
jmp
mov
push
or
outsl
mov
lcall
out
aaa
lahf
lds
fdivl
mov
mov
jno
loope
shll
ds
pop
adc
dec
in
clc
pop
fistpll
sub
stos
les
repz
lods
daa
clc
mov
cmpsb
in
dec
jae
sbb
in
fs
sub
wrmsr
fcompl
mov
sbb
adc
xchg
xlat
adc
xchg
jmp
mov
fnstcw
add
incl
xchg
adc
cld
cmp
dec
and
dec
lods
rcrb
insl
popf
push
cs
out
ret
pop
inc
aam
shll
mov
daa
shrb
add
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
jmp
xchg
mov
imul
out
in
rorb
pinsrw
das
iret
shrb
xor
cmp
in
scas
xor
push
aas
push
mov
stos
xor
dec
xor
or
sbb
inc
ret
iretw
stos
fstl
add
xlat
dec
in
call
hlt
out
repz
cmpsb
lock
mov
andb
fdivs
outsb
ret
xor
ds
xchg
or
adc
mov
inc
gs
sahf
mov
cli
cmp
mov
mov
pop
les
arpl
roll
xchg
or
pusha
rolb
sarl
nop
fwait
ret
or
lret
xchg
fcmove
scas
jns
pushf
ds
push
outsl
push
add
add
mov
or
gs
in
mov
lea
notb
mov
out
cmpsb
mov
arpl
movsl
test
xchg
pushf
scas
jp
mov
fldt
nop
imul
repz
mov
loopne
dec
out
out
in
mov
push
in
notb
push
loop
inc
push
ss
jp
sbbb
mov
je
int3
std
icebp
imul
cli
fcmovnbe
pop
mov
or
push
pop
sub
jge
sbb
ja
cmpsb
or
cmp
or
mov
mov
sbb
push
inc
test
pop
repz
out
lods
jecxz
pushf
jmp
int3
dec
xor
fstpt
xor
out
js
push
and
and
sbb
out
lret
sub
ljmp
dec
jg,pt
ja
stc
dec
adc
dec
hlt
call
fisubrl
jnp
sahf
lods
xor
insb
add
mov
xchg
pop
mov
jg
fldcw
cmovne
fdivr
xor
sub
sub
or
stos
ja
and
loopne
dec
in
mov
sub
cmp
xchg
test
std
xor
or
shll
clc
push
outsl
dec
push
mov
jl
sbb
jns
lret
sub
shrb
or
push
addb
jecxz
setns
lret
les
pop
mov
jns
lfs
in
xlat
sarb
dec
imul
xor
cltd
jl
imull
xchg
cmp
loopne
pop
jl
mov
ret
js
icebp
jnp
xchg
insb
adc
enter
dec
imul
push
in
in
aad
pop
cmp
lret
xlat
xor
mov
dec
out
out
mov
popl
rcrb
popa
andb
jae
mov
sbb
pushf
pop
push
fwait
pop
xor
loop
inc
add
scas
and
and
xor
pop
lcall
jns
sbb
mov
loop
lcall
test
xor
jmp
and
mov
call
cmc
out
fwait
push
gs
or
cltd
ret
xchg
sbb
fisubrl
mov
shl
or
lods
add
inc
out
or
push
cmp
movsb
push
movsl
mov
sbb
imul
mov
sahf
fnstcw
dec
add
out
ret
cmpsl
jno
xchg
lcall
and
hlt
cltd
and
jns
sti
xor
les
mov
sahf
loopne
cmp
mov
xor
ljmp
mov
jae
sbb
mov
adc
jmp
aas
inc
jmp
repz
imul
pop
mov
std
cmpsb
data16
les
jecxz
jae
dec
inc
lcall
popl
scas
in
scas
fcoms
hlt
js
sub
xor
sub
ret
enter
into
orl
mov
aad
xor
cmp
pushl
jno
xchg
inc
mov
push
and
inc
jb
mov
or
sahf
pop
xchg
icebp
daa
inc
cmp
adc
or
les
xchg
and
dec
fisubl
and
testb
sub
aaa
ss
das
arpl
out
ret
adc
jae
sbb
out
inc
rcll
inc
sbb
rcrb
mov
fldenv
inc
out
ficompl
sbb
mov
sub
popa
cmc
or
and
lcall
testb
dec
jl
in
js
insl
pop
adc
frstor
adc
or
data16
sub
fwait
in
stc
mov
mov
sub
arpl
add
lods
xchg
sub
mov
mov
pop
pop
mov
push
jae
mov
push
stos
push
sti
int3
fbld
je
inc
inc
std
dec
sti
pop
cmp
nop
std
shlb
insb
push
idiv
stc
jnp
dec
lret
or
cwtl
daa
inc
or
in
cmc
and
icebp
jns
int
xlat
adc
push
cmpsl
popf
ss
mull
in
jo
jle
imul
nop
ljmp
push
pop
or
and
xor
xor
jns
enter
stos
lock
test
lods
push
sbb
jbe
jb
movsb
clc
aam
ret
bsr
cmp
jle
and
cmpsl
jns
pushf
push
dec
add
insb
adc
lcall
inc
incl
orl
test
cltd
fdivrl
push
mov
mov
push
popa
xchg
sub
fdivrp
bound
add
inc
cmp
add
cmp
add
xchg
mov
jg
inc
out
sarb
fs
subb
mov
bound
daa
fs
xchg
cmp
enter
arpl
mov
adc
jle
sub
scas
cs
dec
push
or
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
jmp
push
fadds
sub
push
and
cmp
dec
push
bound
les
pinsrw
rdpmc
subb
andl
xchg
or
insl
adc
mov
dec
fcomps
mov
or
or
in
loopne
icebp
push
and
lret
clc
jbe
hlt
out
loope
mov
jae
push
push
insb
jbe
mov
dec
cmpsb
fcoml
negb
ja
sub
jp
call
and
lcall
out
fcomps
ret
clc
pop
cmp
sbb
push
filds
ret
fwait
sub
xor
inc
pop
js
cmpsl
fcoms
es
add
xor
and
ja
pushf
das
test
xor
cld
in
mov
mov
push
out
ffreep
inc
mov
dec
xchg
pop
stos
mov
xchg
sahf
call
cltd
popa
movsb
insl
jo
pop
aad
out
cld
adc
cli
in
or
and
inc
data16
std
repz
lret
fstpt
pop
test
lods
xor
in
jns
or
xchg
leave
jb
out
mov
aas
in
pop
mov
ds
stos
xchg
lods
out
addr16
push
adc
cmc
lock
jbe
mov
fstpl
hlt
aad
dec
push
or
lds
jecxz
fbstp
cmpsb
lea
jp
fsts
enter
mov
fisttpll
test
add
xor
cmpsl
ficoml
std
loope
mov
pop
clc
sti
xor
jo
jg
mov
shll
sub
cmc
cld
sbb
repnz
lahf
pop
test
or
jge
xchg
roll
sbb
mov
and
out
dec
shrb
lods
fmuls
add
icebp
std
pushf
push
jmp
or
pushf
mov
arpl
mov
jno
sub
jnp
and
fnstenv
loop
aad
repz
stos
test
jg
jecxz
aam
cvtps2pd
fstl
aaa
adc
test
sub
adc
stc
out
push
bound
mov
jbe
ljmp
push
xorl
add
jae
mov
sbb
inc
and
add
inc
loopne,pt
daa
jecxz
in
adc
lret
in
mov
mov
or
pop
aaa
push
out
adc
std
xchg
pop
dec
mov
sbb
mov
movsl
ljmp
mov
dec
pop
lods
sbb
loop
mov
and
and
mov
pop
pusha
push
es
lock
out
sub
mulb
jg
lds
pushf
cmp
dec
dec
lods
pop
add
lds
pop
ss
popf
lret
ds
mov
push
jge
sbb
loop
sti
dec
adc
jecxz
roll
ror
cld
fcmovb
mov
icebp
mov
mov
inc
and
lahf
sub
hlt
and
addr16
lods
sbb
and
dec
stc
idivl
sub
pop
sub
add
lret
mov
das
or
push
mov
lret
cmp
mov
add
dec
sub
movsl
fisttps
mov
add
nop
adc
fcomps
push
inc
test
and
cltd
xor
jmp
mov
shll
jo,pn
cmp
out
scas
xor
adc
sub
xchg
inc
out
push
jno
and
inc
int
sub
popa
cmp
mov
test
gs
jns
lea
mov
and
lahf
pop
push
scas
push
sub
sub
pop
mov
adcb
outsb
pushf
jbe
scas
adc
and
jno
nop
adc
icebp
je
mov
add
xor
and
dec
movsl
lahf
xchg
dec
adc
sbb
xchg
xchg
xlat
push
lds
pop
sbb
xor
xor
push
or
cld
outsb
stos
inc
adc
mov
add
or
adc
push
and
lea
mov
sbb
and
inc
out
mov
in
cmp
or
sti
or
mov
push
sbb
lods
sub
lods
xor
ss
cmpsb
ret
mov
loope
push
and
jle
aaa
repz
pop
shlb
mov
mov
arpl
adc
insb
mov
lock
sub
bound
jge
leave
int3
pop
cmp
test
and
and
mov
push
lret
cmp
lret
stos
cmp
ds
mov
pop
ret
inc
or
in
xchg
jl
testl
and
xor
jae
sub
popf
das
sbb
int3
cli
es
callw
push
sahf
lea
push
mov
sbb
push
data16
dec
jne
mov
stc
aaa
or
imull
dec
cmp
and
xor
mov
std
push
xor
push
test
movsl
pushf
call
stc
movsl
jo
fwait
dec
lahf
mov
int3
bound
add
sti
adcl
leave
pop
jno
mov
dec
mov
xor
xorb
adc
jae
imul
adcb
sti
jle
mov
insb
mov
and
adc
inc
std
sub
jno
nop
inc
clc
pop
pop
int3
mov
mov
ret
xor
jl
repz
lods
cmp
or
push
clc
push
sbb
mov
and
outsl
push
test
xchg
stc
mov
mov
inc
inc
insl
xor
sbb
cmp
cmp
mov
loop
lahf
cld
xchg
repz
xchg
sarl
dec
sbb
mov
jg
fisubl
cmc
or
nop
sub
jmp
rorl
ret
dec
add
cmp
jb
movl
movl
movl
movl
jmp
xorb
ret
xor
xor
mov
out
data16
pinsrw
nop
lea
icebp
rorb
dec
pop
imull
aas
int
insb
mov
inc
lret
inc
fwait
mov
adc
jae
jmp
in
cmc
pushf
add
sti
icebp
mul
xchg
xchg
push
push
push
inc
cmpsl
xchg
push
jle
das
sub
mov
rorl
push
mov
sbb
push
fnstcw
adcb
out
mov
movsl
mov
xor
cmp
mov
inc
scas
jnp
xor
jo
xchg
xor
and
nop
addl
mov
popf
dec
rolb
push
aaa
mov
add
outsl
xchg
sub
cmpsl
push
and
daa
fdivl
test
and
sbb
sbb
xchg
aas
mov
mov
xchg
jnp
shrl
scas
fwait
adc
sub
or
add
cwtl
rclb
in
outsb
mov
xchg
adcl
adc
pop
arpl
mov
xchg
or
add
loopne
mov
addl
dec
mov
pop
loope
mov
popf
fstpt
aam
adc
fstps
cld
imull
mov
int
jmp
xor
repz
sbb
jb
and
lock
jno
mov
lcall
lret
rcrl
loop
cli
mov
das
mov
or
mov
cli
mov
ljmp
cmpsl
pop
data16
loop
loopne
rclb
jbe
and
out
jecxz
idivl
repz
mov
cmp
shlb
sbbl
ficompl
add
out
inc
rorb
fildll
loopne
push
jno
out
in
and
cltd
out
inc
cmpsl
cmp
cli
lock
imul
mov
in
add
sub
push
jns
iret
xor
addr16
xor
clc
mov
push
push
mov
mov
cmp
cmpsl
loop
add
arpl
cmp
mov
inc
cmp
or
jmp
xchg
pop
andl
popf
jb
pusha
int3
pop
mov
movsl
sar
jle
dec
inc
orl
iret
daa
xorb
stc
lock
xor
or
xor
insl
xchg
inc
xchg
test
insb
fistl
mov
fs
pushf
adc
stc
xchg
dec
addb
inc
in
xchg
mov
xor
loop
jp
outsl
xor
pop
arpl
popf
push
test
imul
cld
mov
and
dec
gs
cli
test
lea
leave
jbe
add
fmuls
popa
add
or
dec
and
push
test
cmp
loop
cmpsl
push
or
sbb
shll
sub
insb
mov
das
inc
jl
lea
mov
test
mov
push
sarl
pop
push
into
xor
sub
push
mov
push
push
repnz
mov
div
fidivrs
and
sbb
inc
xchg
dec
xchg
inc
add
xor
mov
pop
loop
mov
dec
adc
dec
lret
jle
scas
in
rcrb
repz
mov
je
int3
call
leave
pop
imul
add
lret
iret
push
mov
push
fisttpl
sub
insl
push
andl
dec
das
xchg
sub
iret
daa
cli
or
adc
add
test
sub
mov
mov
ljmp
jae
notb
lcall
sub
xor
jecxz
or
lock
mov
mov
shl
enter
jns
mov
loope
xor
cmp
repnz
inc
pop
pop
add
adc
ret
mov
xchg
jo
subl
iret
sub
clc
dec
or
mov
faddl
sub
scas
stos
lods
add
lds
or
clc
in
xchg
test
call
push
or
out
mov
push
mov
hlt
testl
cltd
lods
and
jge
lea
push
inc
mov
push
data16
push
clc
fldcw
stos
jb
pop
push
call
cmpsb
bound
push
mov
imul
jo
or
adc
xchg
dec
cld
fiadds
repnz
or
push
xchg
push
clc
in
add
call
in
mov
stos
in
cmp
lret
fs
lret
and
cmp
pop
add
dec
in
push
xor
inc
out
ljmp
mov
in
nop
shlb
imul
cmp
cs
inc
repnz
pop
pop
jns
xchg
jns
ret
fwait
jnp
scas
cmp
mov
xchg
ljmp
sub
push
stos
iret
jae
mov
data16
inc
mov
dec
push
movsb
cmpsl
sub
pop
push
and
mov
push
adc
mov
dec
mov
pop
cmp
pop
pop
sbb
sub
lea
xlat
jns
mov
addr16
mov
leave
pop
divb
aam
out
jns
inc
inc
aad
leave
adc
sub
inc
fwait
mov
out
push
clc
inc
dec
jle
imul
icebp
pop
fstpl
fxch
aam
fwait
xorb
sbb
push
mov
add
xchg
sbb
mulb
push
xorb
dec
or
dec
icebp
or
imul
hlt
or
add
inc
hlt
rcll
add
inc
lock
inc
in
sbb
add
movl
movl
movl
mov
mov
or
lea
add
movl
jmp
add
inc
sti
daa
push
cs
test
pinsrw
prefetch
leave
push
inc
shr
push
push
push
jge
lods
es
xchg
inc
add
xchg
push
decb
out
inc
xor
inc
call
jb
mov
mov
insb
cmpsb
pop
inc
xchg
sub
loope
stc
fcomps
xor
ja
ds
mov
sbb
stos
lds
je
stc
dec
and
pop
sarl
mov
dec
lods
and
das
sahf
loope
adc
jecxz
sbb
adc
jp
mov
add
pushf
mov
sbb
popa
mov
mov
lret
sbb
jae
mov
inc
pop
dec
mov
mov
adc
scas
push
cmp
mov
mov
leave
int3
cwtl
pop
out
add
jge
int3
lahf
faddl
and
xchg
lahf
fsubr
aam
frstor
xor
mov
jns
lods
mov
iret
jl
in
pusha
and
sbb
adc
repz
ss
pop
dec
ret
lcall
mov
xchg
movsl
rol
pop
nop
add
and
xchg
pop
lods
stos
mov
xor
stos
jecxz
adc
pop
mov
lock
das
mov
inc
mov
jae
leave
jge
sub
fsubrp
cs
adc
lods
mov
lods
mov
or
inc
loopne
popf
in
arpl
sbb
repnz
inc
add
xor
out
andb
lcall
rcr
je
imul
js
out
outsb
fistpll
or
lock
popf
sbb
mov
mov
jb
dec
jg
in
popa
mov
inc
divl
or
scas
cmp
imul
das
sbb
jae
pushf
inc
mov
aas
fisubs
nop
cmp
xor
mov
push
cmp
rolb
pop
xor
lods
sbb
xlat
testb
mov
in
test
lods
leave
xchg
sbb
mov
int
dec
nop
rorb
mov
mov
les
jp
cs
push
pop
test
lods
sbb
in
pop
sub
mov
imul
adc
jmp
test
push
cmp
test
pushf
mov
addr16
xchg
jl
adc
data16
imul
jae
in
mov
lock
pop
sbb
push
int
incb
or
je
pop
ret
rolb
push
pushf
push
popf
imul
inc
pop
stos
and
loopne
lea
sub
dec
adc
dec
xlat
sbb
jg
rorb
jl
movsb
and
fwait
push
jbe
mov
xchg
arpl
dec
sbb
cmpsb
dec
mull
dec
mov
jns
out
xor
sbb
cli
ss
mov
out
xor
push
or
test
and
fsubrs
mov
push
mov
cmp
mov
out
dec
mov
das
setno
cmp
outsl
gs
loopne
push
jo
scas
push
scas
adc
cld
loopne
pop
test
lcall
jmp
pop
pop
lea
in
jmp
push
inc
push
loopne
data16
fnstsw
adc
iret
xchg
fidivrl
push
or
cmp
lret
push
dec
or
lcall
adc
sbb
fsub
out
ret
xchg
ret
adc
outsl
mov
add
dec
fdiv
into
aad
jmp
mov
mov
fiadds
outsb
pop
dec
mov
into
in
sub
sti
fwait
xchg
fs
div
rclb
icebp
add
sbb
mov
mov
mov
in
inc
mov
jno
pop
lret
xchg
popa
cmp
mov
aas
push
xchg
test
sbbl
dec
lods
push
aas
lock
fistpl
dec
mov
jmp
and
sbb
xchg
xchg
sarl
test
popl
loop
cmp
out
pop
repz
push
rol
ss
push
jp
mov
lahf
adc
mov
in
loopne
fidivs
nop
out
lcall
fwait
xchg
mov
dec
xor
dec
pusha
aas
cmp
pop
icebp
cmp
jne
jo
xchg
push
add
aaa
shlb
aad
ret
jo
and
fisubrl
outsb
or
jbe
mov
jp
sbb
adc
dec
sub
ret
push
sti
mov
movsl
loopne
and
nop
mov
sub
cmp
scas
adc
add
xorb
jge
sub
mov
xor
dec
int3
xchg
sub
xchg
and
aad
xchg
iret
fisttpll
pop
mov
add
pop
sbb
jmp
dec
mov
mov
sbb
shll
mov
loop
test
xchg
jecxz
jns
xchg
cmpl
inc
loope
xor
sub
iret
out
add
fnstcw
or
sar
sti
cli
imul
jb
cmp
or
popa
mov
out
out
cld
sti
adc
lock
cwtl
or
adc
mov
stc
icebp
and
mov
pop
add
push
dec
imul
cmp
pop
mov
frstor
test
orb
int3
inc
lods
insl
cmp
fstps
fsub
pop
xchg
sbb
sti
sbb
mull
out
cltd
ret
mov
jnp
lahf
sbb
loope
mov
jg
dec
push
icebp
dec
popf
loope
imul
mov
pop
cmpb
mov
daa
out
cmpsb
adc
inc
or
or
add
inc
int3
fwait
push
add
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
jmp
aad
sub
ss
adc
xchg
jg
mov
pinsrw
sbb
cmp
cmp
mov
push
sub
test
xchg
jle
push
sbb
jo
xchg
fisttps
mov
nop
inc
addl
dec
pop
ljmp
test
imul
in
fadds
cmc
inc
imul
shll
and
test
test
mov
jo
mov
mov
mov
leave
sbbb
pop
or
insl
rcll
and
or
inc
daa
std
shr
imul
mov
jb
sub
leave
test
lock
xor
ljmp
jecxz,pt
cmp
movsb
imul
inc
loop
jle
inc
ret
and
sti
int
ret
ja
movsl
pop
dec
lret
rolb
xchg
js
cld
test
or
roll
jae
inc
in
loopne
clc
in
cmp
jnp
imul
stos
adc
lahf
or
pop
in
mov
inc
idiv
mov
rclb
adc
es
cmp
fndisi(8087
loop
add
push
cs
call
cmp
inc
add
call
aam
ret
sub
out
mov
mov
inc
out
xor
call
inc
or
inc
sub
orl
cmpsb
sub
inc
mov
imul
inc
imul
mov
out
adc
pop
dec
xchg
inc
push
out
aas
mov
xor
xchg
nop
test
decl
sub
jecxz
sub
lcall
push
pop
cld
ror
push
mov
fwait
lea
jle
arpl
icebp
imul
hlt
dec
jp
jmp
xor
popa
mov
js
pop
jg
test
jmp
and
imul
daa
nop
and
push
mov
sbb
daa
pusha
leave
cld
shlb
sahf
push
or
addr16
dec
cmp
pop
cmpsl
push
cmp
inc
test
pop
adc
mov
inc
mov
in
insb
mov
fs
movsb
int3
cmpl
test
pop
ds
dec
fsubs
adc
cli
mov
mov
xor
mull
inc
and
mov
movsl
cli
inc
mov
jecxz
mov
dec
jns
or
fs
push
inc
push
mov
xor
pop
and
outsb
dec
pop
inc
mov
out
jne
test
lds
cld
mov
jl
sbb
push
pusha
hlt
xchg
stc
jns
pop
sbb
mov
nop
mov
add
sbb
push
mov
cltd
push
cmp
xchg
loopne
cmp
enter
xchg
and
out
int3
jmp
pop
ljmp
int
scas
lods
icebp
lods
cmp
out
insb
jnp
xor
push
add
dec
ljmp
sbb
cmp
push
cwtl
pop
push
add
cmpsb
idiv
pop
sbb
insl
dec
inc
nop
les
cmp
sub
cmp
jnp
sarl
mov
mov
cltd
mov
mov
xchg
loop
sbb
pop
ds
sbb
inc
sbb
idiv
adc
mov
jbe
imul
mov
shrb
std
mov
int
loope
adc
xchg
add
jbe
lret
mov
lcall
inc
out
rorb
jnp
ficoms
adc
jne
fxch
cs
jmp
sub
or
mov
push
xor
subl
mov
mov
outsb
sub
ret
inc
aam
pop
xor
xor
xchg
adc
loope
xchg
and
dec
sub
daa
push
in
dec
int3
mov
sbb
mov
pop
int3
and
xor
rol
mov
aas
enter
cmc
lcall
pop
stos
jmp
fsub
xlat
jne
and
sub
jo
jno
sbb
or
cld
imul
test
pushf
loop
jne
sub
mov
push
stos
push
imul
add
jle
dec
cmp
pop
add
fidivl
inc
aam
push
cs
and
adc
cmp
popf
adcb
fbstp
pop
addb
jle
mov
push
xlat
ret
mov
or
mov
sub
fldl
xor
inc
popa
xor
push
orb
add
in
arpl
adc
leave
jns
movsl
lret
push
jp
dec
inc
leave
or
push
fs
add
mov
subb
cmp
pop
sbb
aam
add
mov
xchg
test
add
dec
jae
popf
dec
jbe
call
pop
pop
xchg
and
sbb
aam
dec
into
repnz
xchg
dec
or
test
lds
andl
outsl
mov
movsb
cmp
pop
lods
into
mull
std
xchg
pusha
out
aad
sub
sbb
ss
popl
ja
xchg
sbb
aas
icebp
daa
and
bound
dec
and
lea
add
jecxz
cli
mov
inc
inc
nop
lret
das
ja
push
loop
inc
fadd
push
mov
imulb
push
mov
pop
mov
mov
stc
cmp
mov
cmpsb
mov
dec
lcall
mov
cmp
adcb
ja
ret
inc
sti
sbb
sub
mov
jno
notl
mov
cld
mov
push
mov
and
les
mov
sbb
scas
ret
sub
iret
icebp
and
xchg
popf
out
cmpsl
or
lods
lods
push
sarl
adc
mov
sbb
adc
jl
enter
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
jmp
out
aad
aad
aad
adc
fstpt
pinsrw
prefetch
or
fildll
pushl
cmpsb
mov
dec
xchg
movsl
mov
or
mov
int
mov
add
pop
mov
xchg
xor
jns
or
jl
xchg
push
stc
shll
lea
jno
xlat
or
sti
out
xor
xor
mov
jo
xor
xchg
xor
mov
pop
pop
das
inc
mov
daa
popf
mov
sub
inc
out
lea
mov
cmc
xchg
mov
and
xor
cmp
pop
pmulhw
push
sub
jg
mov
test
push
mov
cmp
cs
pop
stc
aaa
mov
mov
push
repnz
mov
in
ret
pop
lea
inc
push
sbb
jns
out
stc
test
dec
and
xchg
repnz
mov
std
jae
aaa
cmc
frstor
loope
in
ud2
pop
pop
adc
aaa
or
mov
shll
fsubrs
or
mov
arpl
iret
cs
aas
pop
movsb
add
inc
sbb
xlat
sub
enter
add
stc
cmpl
inc
xchg
push
sbb
jge
mov
sub
xchg
mov
add
arpl
xchg
lret
mov
test
pop
test
mov
jbe
loopne
jne
dec
jns
mov
jg
sub
scas
dec
movsl
inc
pop
jg
xor
mov
and
and
pop
dec
push
sub
mov
in
outsl
adc
sbb
mov
rolb
xchg
out
aam
inc
xor
sub
aad
nop
push
inc
pop
push
or
cmp
pop
fisubrl
nop
fmulp
les
push
adc
ucomiss
mov
adc
mov
sahf
lods
lock
cmp
sub
in
and
js
mov
sarl
int
push
xor
push
mov
icebp
sti
mov
jno
sti
fisubrl
call
sub
mov
pop
daa
and
cltd
into
mov
les
and
push
mov
movsb
inc
cmc
repz
xor
test
fidivs
push
lods
lock
jp
mov
xchg
ja
mov
ror
bound
and
call
ss
jge
push
mov
das
fdivrs
flds
sbb
and
push
mov
push
scas
xchg
dec
xchg
repz
das
xchg
mov
cli
out
pushf
ja
in
stos
add
das
ss
hlt
ss
mov
cmp
ret
mulb
push
ret
push
or
mov
bound
or
ds
xchg
jo
adcb
sbb
and
lock
test
mov
pop
cmp
fisubs
lods
or
lret
loop
cmpsl
fcomps
je
js
cmp
cld
jne
int3
popa
ja
imul
aam
je
jbe
xor
push
or
jnp
les
cmpsl
es
lcall
mov
stos
or
cmpsb
mov
cmp
aam
xchg
and
lods
cld
adc
out
sbb
mov
jns
stc
aas
adc
orl
pop
int
in
cmp
jl
stos
jno
gs
jnp
in
mov
movsb
lahf
das
out
push
inc
pushl
push
inc
mov
jl
push
ss
lods
addb
xor
lods
nop
outsb
jns
jp
add
movsb
int3
xchg
or
push
ficompl
test
cmp
cmpsb
stos
stos
pusha
mov
cmp
leave
xchg
adc
scas
inc
fs
xor
adc
cltd
call
pop
cmp
je
inc
mov
pop
imul
out
push
jb
mov
jbe
test
pop
insb
inc
and
frstor
pop
mov
dec
xchg
out
shll
mov
mov
out
mov
nopl
jg
mov
out
enter
ds
sbb
nop
imul
push
out
out
into
in
add
sub
mov
inc
push
mov
daa
sbb
push
roll
mov
jge
loop
rclb
gs
cs
xchg
pop
sti
repz
xchg
adc
cmpsb
jno
aaa
xlat
push
es
popf
inc
aas
sub
negb
push
insb
pop
out
iret
fmulp
insl
jno,pt
scas
repz
pop
test
in
jbe
cmp
int
fs
addr16
loop
dec
fcompl
and
jns
fistps
sbb
pop
arpl
sbb
jae
stc
in
arpl
mov
inc
je
fwait
add
daa
ja
js
test
call
xor
jbe
imul
negl
mov
fildl
or
mov
out
dec
addr16
addb
ud2
push
lods
mov
mov
ret
add
insl
dec
mov
pop
mov
in
loopne
mov
cli
jae
rolb
or
cld
mov
xor
and
lret
add
ljmp
mov
push
rolb
xor
sahf
pop
add
stos
roll
mov
dec
mov
je
sbb
fnstsw
rcrb
push
gs
and
pushf
fistpll
jb
sahf
cmpsb
mov
push
mov
cmp
lret
divl
cmp
loop,pn
sub
xor
cmpsb
inc
mov
loop
pushf
jne
xor
arpl
cmpsb
imul
push
add
movl
push
hlt
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
push
movl
movl
jmp
imull
xchg
xchg
aam
imul
xchg
xor
add
shrb
mov
aas
or
jge
test
fdivp
sar
add
bound
mov
mov
aaa
adc
icebp
mov
and
cli
fwait
aaa
cmpsb
mov
loop
fwait
push
pop
les
enter
inc
cmp
jns
xor
pop
xlat
jb
stos
in
or
sarb
dec
sub
lret
test
jbe
fwait
stos
cmp
mov
push
jns
cmp
xchg
insl
mov
or
jne
jmp
dec
sub
cmp
mov
scas
or
out
jmp
movsl
add
xchg
lret
jb
fcmovu
mov
sub
xor
jl
cmp
aam
shrb
adc
inc
jnp
cli
sbb
lret
push
in
xor
nop
test
int3
pop
in
in
dec
dec
out
loop
fisttpll
mov
std
mov
pop
loopne
or
jno
loopne
xor
out
outsb
out
fbstp
add
insb
ss
sbb
sahf
or
mov
and
jg
adc
and
xor
ds
adc
out
sbb
inc
adc
pop
fiadds
repz
pop
jecxz
mov
popa
aam
add
jp
bndldx
imul
mov
inc
xor
pushf
jp
mov
jl
dec
addr16
addr16
dec
movsb
pop
mov
inc
ficoml
sub
lods
sub
scas
dec
mov
xor
ficompl
push
fwait
out
cmp
insb
lods
shl
jle
add
cmp
push
dec
testb
xor
cmp
dec
sub
xchg
lcall
aaa
scas
dec
sbb
mov
int3
jmp
adc
jns
dec
xchg
add
insl
fcoml
fstpl
out
stc
mov
ss
mov
lahf
fidivs
push
les
sbb
lret
sub
push
mov
dec
jmp
adc
outsl
outsb
adc
fldcw
inc
mov
adc
aaa
cmp
jno
in
out
sbbl
notl
mov
jge
iret
lahf
xor
cltd
in
lods
pop
outsb
ljmp
repz
lcall
js
pop
clc
or
fidivl
mov
mov
jno
pop
mov
adc
adc
push
loope
mov
aam
jnp
mov
imul
arpl
scas
dec
xchg
daa
and
push
outsb
fistpl
push
sbb
inc
pushf
pop
xlat
mov
jnp
insl
in
cmp
js
ljmp
push
rcll
sbb
imul
imul
loop
add
adc
inc
inc
es
pop
test
cmpsb
jb
cmp
pusha
dec
mov
loope
ret
sub
mov
inc
pop
inc
push
je
inc
stc
jo
sub
shlb
lods
push
sahf
fistps
xchg
sub
daa
inc
adc
faddp
stos
inc
xor
arpl
adc
mov
cmp
sub
cwtl
lret
pop
stc
xor
xchg
lods
in
dec
movsb
insb
in
sahf
jle
pop
push
scas
push
pop
les
jns
sbb
inc
push
ds
iret
inc
dec
in
movl
sbb
cltd
fwait
sub
into
clc
jb
outsb
sbb
test
add
mov
jmp
loope
imul
xchg
dec
jmp
pushf
dec
push
adc
addl
add
negl
bound
outsl
pop
adc
or
dec
int
les
pop
mov
mov
jbe
jno
lods
lcall
adc
hlt
nop
xor
mov
out
loope
int
daa
outsl
push
mov
xchg
xchg
int3
pusha
mov
cli
hlt
mov
aad
cmp
outsl
jge
xchg
fldt
mov
adc
mov
cmp
adc
mov
xchg
jbe
cmpsb
xor
and
cld
xor
mov
test
pop
nop
insl
or
jmp
ret
fdivr
bound
jp
adc
jne
lcall
mov
lds
rcrb
scas
mov
ffreep
popa
sahf
xor
lds
or
rorl
adc
loop
dec
lcall
push
ret
outsl
xlat
sbb
adc
xchg
inc
mulb
shrl
xor
repz
leave
lods
jnp
cltd
lret
or
popf
xchg
mov
mov
mov
xor
pop
shl
cli
mov
imul
jne
cmp
jg
jne
jmp
cld
insb
dec
adc
add
xor
push
es
cmpsl
fnstcw
push
or
bound
cmpsl
mov
xchg
loopne
pop
leave
insl
xchg
in
pop
adc
mov
jecxz
mov
aaa
in
mov
xchg
dec
stos
cmp
repz
in
add
movsb
dec
divl
outsl
mov
and
arpl
xchg
sbb
pop
mov
add
mov
in
scas
arpl
xor
jnp
sub
add
mov
rcll
push
ja
insl
mov
lock
jno
ret
test
fisubrl
aad
adc
inc
into
insb
jp
push
addl
sbb
out
outsb
dec
cmp
pop
mov
xchg
aad
jg
daa
sub
out
sbb
inc
or
enter
xchg
repz
aas
jl
ja
mull
mov
mov
scas
xor
add
sub
mov
test
ficoml
xor
adc
arpl
jmp
test
pop
xchg
insb
out
mov
iret
mov
stc
mov
jno
movsb
adc
sbb
fcmovnb
sub
mov
pop
add
jle
or
cmc
lahf
mov
dec
jg
les
lret
inc
jmp
mov
pop
call
pushf
mov
fnstcw
mov
fisubl
mov
jge
repz
jns,pn
push
ljmp
js
imul
in
or
sbb
shrl
movsl
jg
pop
rcrb
adc
popa
dec
cmp
gs
xchg
pop
dec
xor
mov
xlat
sahf
enter
fisttpll
adc
xchg
mov
push
mov
jmp
mov
gs
mov
xchg
sub
lods
loope
shll
cld
pop
pop
sbb
leave
sbb
adc
outsl
mov
out
jmp
xchg
dec
or
addr16
add
jle
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
pop
fdivl
jo
push
push
mov
adc
repz
pop
push
in
out
sub
into
in
testl
cmp
xorl
push
push
jbe
push
icebp
lock
fwait
or
cmp
mov
jmp
cmpsl
xchg
std
sub
adc
mov
ss
outsb
dec
fcoms
cltd
rolb
push
mov
mov
ret
cli
adc
xor
rep
sbb
daa
jp
push
jmp
ljmp
pop
jmp
fdiv
or
shll
aad
in
mov
outsb
lea
in
xchg
movsb
xchg
or
mov
push
popf
sahf
out
andb
add
cmp
lock
mov
cld
jecxz
rcrb
rcrl
stc
das
shll
test
add
lret
mov
add
push
mov
adc
int3
xchg
push
jbe
pop
pop
mov
je
insb
clc
xchg
xor
fimull
int3
cmpsb
loopne
mov
adcb
or
xor
and
mov
dec
cwtl
cmp
and
enter
ret
push
out
jl
ljmp
push
mov
sbb
int3
adc
out
xor
rcrl
ret
jns
rcll
pop
sbb
pop
fstpl
dec
shlb
sarb
pop
rorb
aaa
testb
mov
into
pop
dec
lcall
sub
scas
mov
inc
mov
lret
lods
xchg
outsl
or
sub
xor
jb
cmp
ror
mov
adc
loop
sub
shll
pop
xchg
xchg
dec
mov
adc
popa
ret
mov
mov
imul
and
xlat
cld
jge
and
inc
addr16
cmc
inc
incl
mov
loopne
das
push
jp
pop
xor
pop
mov
jp
sub
arpl
jecxz
or
sbb
lret
inc
popa
aaa
xchg
xchg
or
scas
ds
xchg
mov
jb
nop
popl
arpl
repnz
jne
loope
insb
xor
lcall
jbe
mov
inc
sub
mov
mov
fsubrl
mov
mov
and
cmp
xchg
xor
cmp
test
jmp
mov
pop
and
dec
jb
adc
mov
loopne
mov
sbb
cmp
jmp
fisubs
out
cmp
popa
aas
jns
addl
cmpb
jns
fs
lea
loope
pusha
daa
fbstp
xor
in
xchg
iret
inc
js
sub
ljmp
add
xchg
ds
pushf
shrl
jp
fcomps
sub
out
and
jo
mov
pop
xchg
imul
mov
outsb
xchg
jecxz
and
ret
xlat
push
mov
test
push
rcr
pop
nop
call
pop
mov
test
lret
sbb
movsl
dec
sub
xor
mov
ret
sbb
mov
xchg
and
cli
scas
and
pop
pop
xchg
xor
fwait
inc
jbe
pop
pop
lods
or
aas
das
jmp
test
mov
and
movsb
stos
inc
sbb
jno
push
sbb
push
xor
rcrl
decl
inc
aad
cmpl
mov
sbb
add
mov
ss
lock
pop
mov
test
aaa
dec
xchg
inc
shll
aas
out
inc
test
pop
ffreep
push
jle
stc
fs
push
daa
inc
jno
in
xorb
ds
rclb
push
cld
fsubl
pand
cs
js
test
ret
cmp
jl
sbb
or
stos
shlb
bnd
mov
xorl
loopne
mov
mov
xchg
les
inc
pop
aaa
push
pop
orl
lds
insb
rcll
mov
jp
pop
stos
xor
cmp
roll
mov
pop
xchg
in
fsubrl
sub
xchg
xor
cli
inc
dec
cwtl
pop
xor
adcb
cli
popf
aaa
dec
scas
push
pop
mov
fists
mov
call
push
cmc
pop
shll
aas
daa
jge
cmp
scas
pusha
js
not
xchg
and
mov
loope
in
adc
add
adc
dec
roll
int
jno
mov
mov
pop
popa
dec
jbe
aas
jo
mov
aas
mov
mov
icebp
cmpsl
sub
rclb
icebp
arpl
repz
call
out
jmp
fwait
and
iret
pop
jns
cld
add
out
in
xchg
std
sbb
dec
push
stc
aaa
ss
cmpsb
test
dec
mov
out
ljmp
hlt
pop
jne
cmpsl
negl
or
and
inc
mov
mov
mov
pop
test
movsb
test
dec
adc
mov
fsubl
mov
cmc
inc
inc
cltd
sub
mov
sar
cmp
sbb
test
push
sub
rclb
pop
adc
loop
mov
xchg
lods
repnz
lods
aad
mov
push
fdivp
or
xor
sbb
jns
xchg
jmp
jg
mov
sub
pop
xchg
push
mov
je
pusha
mov
outsl
sahf
sub
aam
add
sub
aam
test
dec
stos
shr
jp
dec
sti
ret
mov
repnz
stos
addr16
mov
mov
jb
xor
or
out
sub
lret
xchg
loope
cwtl
pusha
mov
dec
mov
mov
test
lret
cmp
pop
pop
popa
js
and
fucomi
stos
lahf
movsb
pop
loope
adc
roll
sahf
jo
xchg
bound
mov
pop
mov
mov
xchg
xchg
mull
jmp
por
pusha
mov
arpl
scas
lahf
and
insb
cmp
popf
pop
mov
out
scas
ret
loop
xor
inc
mov
mov
icebp
xor
dec
fs
ljmp
jg
shld
and
pushf
repnz
inc
xor
pop
fstps
mov
mov
push
cwtl
dec
out
in
mov
push
mov
cmpsl
jo
xchg
sarl
test
sbb
data16
mov
loope
test
addb
movl
mov
mov
mov
mov
push
add
push
adc
jmp
lcall
xor
int3
mov
pop
add
lea
push
cmpsb
int
pop
fucomi
sub
xchg
repnz
push
fs
inc
les
in
jb
inc
jae
ljmp
add
stc
and
or
sub
sarl
mov
cwtl
inc
ja
ret
mov
jmp
dec
sahf
rorb
add
pop
xchg
xor
cli
xor
adc
repz
int
mov
repz
pop
jmp
dec
mov
dec
arpl
cmp
dec
cmp
test
push
xchg
cmp
fisubl
hlt
fwait
loopne
shl
das
jl
xorl
pop
test
iret
aas
mov
test
in
mov
pop
shll
mov
pushf
fists
xor
sub
fdiv
or
rol
data16
and
lcall
dec
daa
xchg
push
adc
je
int3
and
dec
ret
adc
pop
flds
sub
inc
cwtl
shrb
sub
rol
push
test
dec
aam
pop
mov
inc
bound
mov
stc
fadds
cmp
rcll
insl
dec
mov
sahf
out
jp
das
or
cmp
lods
pop
mov
repnz
or
and
adc
aaa
lods
push
lds
lea
fists
pop
jo
adc
out
aaa
stos
and
repz
sti
stos
out
push
mov
movsl
das
clc
cmp
sbb
outsl
cmpsb
adc
adc
pusha
xor
add
adc
rcll
inc
enter
shll
fdivrs
cld
and
aad
push
cli
lods
push
jno
lea
mov
sarl
adc
gs
lcall
insl
xor
push
mov
jp
push
jmp
testl
xchg
lea
test
adc
out
popf
es
movsl
or
pop
fucomi
das
push
shrb
adc
jmp
cltd
lcall
hlt
stc
js
mov
cld
jbe
rorl
jae
ret
mov
decb
lahf
jecxz
pop
ss
inc
scas
lret
mov
fwait
pusha
je
imul
mov
out
push
jmp
pop
cmp
pop
arpl
xor
test
push
lcall
enter
pop
popa
cmp
xchg
gs
outsl
lds
fsub
orl
ficoms
in
cld
mov
dec
in
repz
mov
adc
or
roll
je
mov
fwait
call
xchg
or
inc
mov
ret
or
out
push
fsubs
mov
pop
test
hlt
cmp
fisttpll
enter
jge,pn
imul
out
rorb
aaa
xchg
xchg
or
adc
sti
cltd
das
fldt
in
jae
cltd
icebp
fsubs
arpl
data16
adc
inc
add
sub
cmpsb
outsl
out
into
mov
int
jle
das
fistpl
mov
and
icebp
popf
xor
cmp
movl
ret
call
in
inc
sar
and
in
movsl
push
pop
push
mov
fisubl
mov
pushl
cmp
enter
pop
pop
lahf
cmp
mov
pop
daa
jnp
jmp
cwtl
dec
test
mov
jno
inc
sbb
push
imul
adc
movsl
push
or
pop
add
jnp
mov
push
leave
pop
mov
inc
mov
pop
xor
shl
shrb
scas
and
ljmp
mov
cmpsl
jge
in
sub
repnz
add
pop
test
loope
cld
fistps
lret
push
popf
vpunpckhqdq
push
mov
inc
psubsb
sub
lock
mov
mov
fsub
pop
or
orb
hlt
pop
jl
jp
mov
mov
cmp
push
aam
adc
addr16
test
dec
push
mov
not
sbb
sub
mov
push
gs
repnz
mov
cmp
in
jne
repz
repnz
test
jns
or
andb
or
jge
std
mov
popf
fisubrl
mov
shrl
hlt
jbe
lret
mov
mov
int3
addr16
push
outsl
icebp
jl
pop
iret
add
jnp
or
test
dec
hlt
dec
fildll
push
sbb
movsl
xchg
int3
mov
xchg
dec
mov
testl
addps
jns
pop
dec
sbb
inc
add
mov
cltd
inc
sub
test
fwait
ja
lret
mov
sarb
jmp
ss
add
inc
insl
outsl
movsl
mov
je
enter
mov
xchg
loopne
mov
daa
mov
cltd
cmp
fcomip
repz
cmp
inc
or
adc
and
daa
loopne
add
clc
loopne
scas
movsl
jmp
add
xchg
xchg
aam
mov
repz
add
cmp
cs
sub
fwait
lret
jp
pusha
aaa
xor
loopne
add
xchg
lds
rcl
jns
xor
and
or
push
xlat
pop
cmpsl
pop
fcmovnbe
inc
xchg
stos
rclb
sub
push
add
incl
jmp
jns
mov
jbe
nop
cmp
xor
mov
test
mov
lods
addr16
sti
iret
lods
pop
or
push
push
ret
sub
iret
dec
loop
xchg
ret
enter
sub
pop
ja
sbb
fwait
push
xor
out
repnz
adc
stc
cli
lcall
cmpsl
mov
push
out
mov
in
shll
arpl
push
xlat
jecxz
inc
cmpl
stos
fadd
dec
movsl
xchg
enter
dec
test
xchg
cmp
hlt
jecxz
fwait
dec
sti
xchg
dec
xor
inc
push
jl
cmp
pop
repz
jnp
stc
js
push
aas
pop
out
ror
mov
loope
push
stos
ljmp
loope
push
sbb
sub
ret
or
push
sbb
push
and
in
ficomps
and
popf
out
sbb
push
mov
jle
inc
adc
addr16
dec
aad
out
fs
or
in
inc
sbb
ljmp
pop
or
dec
cmp
iret
in
xchg
cmp
loope
pop
lods
and
daa
cmc
xor
stc
aaa
sub
sbb
cltd
roll
inc
dec
push
jl
jo
test
inc
inc
daa
lock
and
hlt
dec
mov
and
cmpsb
test
push
call
mov
mov
sub
mov
jmp
mov
and
cwtl
sub
inc
movb
add
push
push
dec
lret
jae
inc
lds
xchg
ljmp
ret
cltd
jbe
xor
sbb
js
popa
sbb
jmp
into
xor
jg
sub
pop
popf
and
and
mov
sub
fs
faddl
addr16
je
cli
or
es
push
xor
sbb
mov
cmp
aaa
iret
ret
cs
aad
pusha
sub
into
sub
int3
in
rcrb
adc
mov
mov
ss
xchg
mov
loope
add
sbb
mov
lds
call
insb
daa
ja
mov
out
jbe
mov
out
cmovbe
xchg
mov
sbb
fisubrs
idivl
mov
aad
sub
out
push
outsl
mov
dec
cwtl
add
out
shrl
stos
inc
inc
or
rorl
rcrl
fdivrp
pop
inc
jl
hlt
fs
lret
push
fisubs
lods
dec
pop
out
test
lahf
aaa
mov
dec
or
adc
xchg
add
adc
mov
mov
jno
add
sub
mov
arpl
mov
mov
jne
xor
add
jnp
popf
imul
mov
mov
icebp
push
mov
jg
lcall
ds
jl
test
dec
outsl
and
insl
cmp
jnp
mov
jno
mov
les
popa
leave
js
xorl
ret
mov
mov
add
or
xlat
mov
dec
sbb
lcall
in
shll
push
adc
sbb
sbb
lods
pop
outsl
jae
lods
push
das
xor
es
mov
adc
xor
jo
je
int3
jae
mov
jns
aad
in
sub
inc
pop
imul
cmp
pop
jmp
jbe
jp
les
sub
notb
into
imul
push
jmp
push
inc
mov
add
and
push
dec
xor
pop
push
push
out
data16
fdivs
in
mov
cmp
pop
dec
cs
dec
inc
ja
and
sahf
mov
pop
cltd
or
in
repnz
pushf
add
cmp
cs
pop
in
sub
int
push
stc
stos
xlat
cmpb
sbbb
hlt
pusha
jle
loope
inc
push
leave
cmpsb
dec
push
icebp
inc
inc
xor
movsb
adc
stc
ret
js
pushl
movsl
repz
or
cltd
insb
in
jno
sbb
lahf
insb
dec
or
mov
mov
and
and
adc
xor
mov
pop
bound
mov
in
jae
xorl
into
jg
jno
bound
jecxz
icebp
out
mov
es
aaa
stos
mov
jne
cmpsb
mov
enter
xor
out
sub
push
repz
jmp
adc
dec
stos
pop
negb
arpl
cmp
xchg
adc
inc
sbb
mov
pop
mov
test
repnz
push
ret
dec
frstor
mov
popf
jnp
out
mov
or
jns
sbb
ret
aaa
cmp
cmp
out
xchg
outsb
ret
jnp
dec
sti
lock
xor
add
mov
xor
push
jp
mov
loope
pop
mov
jl
mov
jl
dec
loope
lcall
mov
cltd
and
lods
cmpsb
push
inc
imul
lcall
mov
ds
xchg
pop
xlat
pusha
xchg
jge
pop
aaa
arpl
arpl
lock
jno
and
mov
push
jge
sahf
jg
jo
rcll
or
fists
xchg
gs
push
add
cmpsb
dec
pushf
inc
inc
cs
adc
or
mov
inc
push
mov
mov
mov
adc
fidivl
std
adc
dec
arpl
xor
lret
mov
int
push
adc
adc
sbb
mov
add
xchg
jnp
lret
cltd
fisttpl
lea
sbb
gs
push
dec
jne
and
cmp
adc
call
lea
xchg
les
and
jecxz
out
in
bound
add
int
and
out
pusha
push
mov
outsl
filds
aad
sbb
jbe
dec
mov
cmpsb
icebp
mov
pushf
pusha
int3
jmp
test
data16
push
inc
mov
mov
jnp
xchg
sbb
push
ss
clc
loope
xchg
int3
add
pop
mov
push
push
adc
fstp
push
adc
dec
movsb
dec
dec
adc
cld
ljmp
test
mov
ret
popf
cmpsb
es
jno
push
scas
mov
inc
push
gs
ljmp
cmp
and
add
pop
sbb
dec
in
mov
cmp
adc
ss
jno
movsl
into
neg
mov
jne
and
es
ss
sysenter
jb
sub
inc
daa
outsb
mov
xor
call
pop
mov
dec
les
andb
popf
mov
sahf
leave
jge
jae
jg
cltd
clc
jae
sub
dec
mov
inc
add
sbb
push
fisttpl
aas
cmpsl
dec
mov
insl
xor
mov
ds
jle
adc
scas
mov
fs
cli
or
out
or
cmp
and
add
xlat
js
cli
adc
add
jae
xor
or
insb
mov
loopne
push
or
jl
pop
pop
mov
push
mov
insb
icebp
stos
inc
ret
movsb
popa
in
sarl
xor
insb
div
xchg
outsl
loop
mov
shr
loope
push
xorb
fisubrl
cmp
fldt
stos
xchg
inc
movsl
test
dec
dec
idiv
es
out
enter
jecxz
mov
cmpsb
ljmp
mov
sub
dec
int3
ret
mov
orl
sbb
call
mov
pusha
sbb
xor
mov
movsb
lods
inc
push
out
push
sub
mov
pop
fistpl
lods
sub
push
and
sbb
xor
push
fcomi
push
and
dec
cwtl
add
jmp
xor
pop
adc
rorl
jbe
int3
sbbl
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
jmp
lcall
or
iret
test
add
mov
mov
movsb
loope
fidivrs
mov
loop
fcompl
lret
mov
call
inc
jge,pn
pop
and
nop
test
movsb
cltd
ret
jmp
push
cmp
popf
fidivrs
lcall
sarl
stos
rcll
call
shrl
mov
shlb
cmc
ljmp
add
add
dec
cmp
jmp
cmp
inc
iret
mov
inc
inc
gs
and
lret
mov
mov
ljmp
jb
mov
aas
xlat
sub
cmp
enter
cmp
loopne
movsl
psubb
sar
outsl
mov
xchg
icebp
in
push
inc
or
dec
fstl
jae
outsb
xchg
dec
mov
mov
aaa
pusha
stos
jno
dec
jge
xor
sahf
sbb
push
xchg
cmpsl
lret
lods
sbb
xchg
jo
or
cmc
nop
dec
add
sahf
dec
mov
movl
imul
push
fmuls
addr16
stos
imul
clc
mov
mov
dec
rorb
into
fiadds
dec
cmp
dec
dec
iret
push
lods
jmp
test
push
dec
dec
sti
es
in
pop
hlt
lods
loop
shlb
fistpl
pop
repnz
popf
push
cmp
jnp
and
ret
lret
jecxz
js
mov
mov
je
int3
or
imul
dec
pop
push
test
aas
xor
or
mov
dec
aaa
shll
outsl
adc
and
push
leave
sub
xor
das
xchg
cmp
xchg
xchg
sub
pop
std
adc
xor
dec
cmp
inc
aad
lock
inc
aas
jle
dec
clc
sub
or
imul
dec
in
pop
xchg
test
das
mov
pop
lcall
adc
shrl
push
and
or
in
mov
sub
decl
mov
sbb
rolb
aam
mov
mov
incl
insb
cwtl
divl
cmp
mov
nop
push
mov
adc
sub
dec
push
in
das
mov
pop
cmp
leave
and
das
sahf
sti
out
pop
or
addr16
xlat
mov
sbb
in
rorl
movsl
sbb
pop
mov
xchg
pop
jmp
mov
sub
daa
out
and
cmp
sub
imul
cmp
pushf
fwait
movsl
or
fwait
shrb
sbb
xor
mov
or
add
shrl
mov
xor
lods
sbb
repnz
movsb
out
xchg
adc
jg
addr16
sar
add
xchg
sub
ffreep
bound
test
jno
pop
pop
testb
sarl
mov
sub
ss
cld
int
jno
sbb
stos
cmpsb
into
xor
mov
sub
mov
and
push
cmpsl
dec
mov
cmp
push
loop
jge
xchg
nop
sbb
jb
sbb
add
loop
push
xchg
jg
push
daa
icebp
fistps
fsubl
out
add
mov
add
scas
mov
es
mov
cmp
mov
xchg
sbb
xlat
lea
jl
push
inc
inc
push
cmp
incl
rcl
sub
jmp
mov
bound
mov
push
adc
mov
sub
out
pop
inc
test
xchg
rorl
int3
jg
rcrb
lods
popf
fidivrl
arpl
cmp
and
sahf
jb
ret
loopne
fwait
addr16
adc
fdivrl
jmp
push
push
popa
pop
sbb
call
arpl
lock
cs
mov
inc
pop
cld
imul
xchg
ds
imul
adc
clc
bound
in
xchg
ds
shl
push
inc
xor
jecxz
cmc
cmp
rorl
in
call
push
sbb
mov
xorb
mov
push
fistps
push
xchg
jne
loopne
repz
cs
insl
xor
icebp
shll
cmpsb
cmpsl
push
add
cmp
cs
aas
in
push
test
xchg
rorl
fcmovbe
fsubr
inc
aad
mov
xchg
xor
ror
insb
adc
xor
cmp
adc
add
data16
leave
cmp
or
push
mov
mov
out
fiaddl
inc
or
push
push
sub
push
cmp
fwait
push
inc
call
in
fstps
pusha
jl
inc
sti
imul
adc
aad
add
push
mov
pop
jno
mov
jo
imul
push
pop
push
lds
xlat
out
push
push
ss
lods
and
iret
xchg
dec
jbe
sub
bound
pop
xor
and
xor
jmp
scas
mov
arpl
repnz
scas
jne
adc
mov
stos
and
sbb
xor
stc
jo
lahf
xchg
push
xchg
push
cmp
adc
xchg
adc
push
into
dec
orb
xchg
cmpsl
inc
test
jbe
pop
and
jl
or
in
scas
pop
and
jmp
shll
push
out
or
mov
dec
cmc
mov
xchg
push
imul
rcll
fcompl
and
jmp
jbe
push
add
add
dec
add
sbb
repnz
ss
bound
les
push
pop
scas
and
push
cmpsl
popa
lahf
inc
add
cmp
add
leave
push
ss
fiadds
jge
rcl
lods
das
mov
inc
cli
mov
pushfw
popf
fists
push
pop
sarb
jnp
and
sub
mov
inc
mov
loope
and
sti
mov
jecxz
fildll
xchg
aad
push
push
in
cld
jg
outsb
fucomp
inc
push
and
test
jp
adc
insl
cmp
int3
sti
bswap
mov
test
ficoml
mov
jle
mov
lea
mov
in
cmp
jne
add
sbb
lret
out
jae
dec
xchg
jle
jl
pop
jle
pop
xchg
orl
inc
loope
sti
sub
cmpsb
add
mov
arpl
rcrl
pop
jmp
loopne
jns
cwtl
xchg
sub
ret
pop
or
adc
ret
jb
pop
mov
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
jmp
mov
sbb
popf
or
arpl
dec
in
inc
add
xchg
notb
fsubl
sub
or
adc
outsb
add
push
lds
insb
push
mov
or
mov
pop
push
movsl
dec
or
xchg
jae
add
leave
push
cmp
repz
cmp
arpl
shlb
aaa
imul
das
inc
outsl
fstpl
popa
mov
movsl
scas
imul
addr16
jmp
fmulp
mov
dec
das
sbb
jb
cli
mov
pop
mov
mov
xor
xchg
push
push
jmp
ret
xchg
iret
rcr
gs
mov
ret
adc
xchg
mov
lret
jne
mov
push
fdivs
or
or
out
jnp
aaa
mov
or
out
pusha
xchg
arpl
add
and
dec
push
mov
lods
push
shl
popa
stos
roll
inc
ret
jg
addb
push
lcall
adc
in
in
scas
ret
daa
xor
add
push
imul
fs
lret
and
dec
xchg
sahf
cs
mov
fsubrl
mov
dec
imul
pop
mov
stc
leave
add
or
out
inc
lds
pop
adcl
pop
and
mov
ljmp
mov
xchg
fnstsw
divb
push
dec
or
lret
mov
sbb
inc
hlt
pop
sbb
aaa
jmp
add
cld
add
mov
out
std
pusha
push
imul
mov
jo
lds
mov
sbbl
xlat
fmuls
xorl
jo
sub
mov
and
hlt
jnp
jecxz
iret
jecxz
repnz
mov
jecxz
mov
cmp
outsl
xor
ret
sub
outsb
push
fildll
mov
push
mov
pop
stos
fildl
sub
mov
lcall
mov
mov
loopne
add
int3
adc
pop
cli
jo
stc
pop
ss
mov
inc
mov
cmpsb
cmp
mov
pop
lret
mov
incl
inc
lea
push
xor
out
xor
fidivrl
out
imul
and
int3
mov
jbe
xchg
pop
js
mov
lahf
add
xor
sub
mov
dec
repz
es
or
mov
pop
inc
lds
and
inc
push
xchg
imul
out
outsb
lods
fs
sub
jbe
mov
ret
xchg
enter
xor
adc
push
inc
dec
mov
jbe
mov
fildll
imul
and
mov
aaa
sbb
jbe
icebp
mov
mov
sbb
fcoml
adc
cmp
sti
idivl
mov
mov
pop
mov
jbe
shll
sbb
leave
aam
loopne
into
lret
imul
imul
sti
or
cmpsl
sub
jl
mov
rol
hlt
sbb
pop
xchg
lds
xor
shlb
mov
test
scas
das
mov
mov
adc
shrl
mov
fbld
jecxz
push
adc
loope
loop
mov
daa
rolb
insl
inc
dec
mov
jp
mov
add
ficoml
jbe
cmp
jne
xor
adc
sbb
inc
cmp
aam
popf
add
wrmsr
popf
stc
dec
scas
add
int3
pop
sub
cmp
xor
push
xor
adc
dec
iret
dec
cltd
aaa
sar
adc
mov
repz
out
mov
inc
fisttpl
imul
dec
jb
bswap
in
orb
shl
shlb
and
les
mov
out
pop
aad
out
fcomp
cmp
mov
mov
sub
ljmp
pop
and
out
ljmp
lea
shll
cli
sub
insl
fnsave
sbb
jno
stc
jbe
mov
mov
out
movsl
adc
xchg
dec
xor
xchg
jns
fstps
inc
mov
mov
cmp
scas
cld
push
frstor
mov
sbb
sub
lretw
rolb
mov
mul
pop
les
sbb
fmuls
lock
xor
test
pusha
ljmp
xchg
mov
movb
bound
mov
xchg
in
push
test
jl
ret
mov
add
lcall
jp
dec
mov
hlt
ljmp
ljmp
dec
dec
xchg
xor
pop
repnz
jg
pop
inc
push
sbb
test
cmp
aam
push
popl
jle
jg
stc
xor
pop
shlb
jle
add
xchg
mov
sahf
adc
sbb
imulb
gs
xchg
xlat
nop
out
xchg
out
mov
pop
aaa
in
mov
xchg
fs
outsl
les
sbb
xor
xor
popf
shlb
mov
lods
push
mov
cli
xchg
scas
mov
js
out
ret
mov
cltd
call
add
jns
insb
mov
scas
scas
jno
imul
pushf
sub
mov
push
sbb
xor
scas
push
pop
cmp
ficompl
lcall
lcall
fimull
xor
adc
mov
scas
cli
imul
shlb
int3
push
jg
pop
outsb
ds
cmp
shlb
sbb
fisttpll
xor
xchg
mov
bound
mov
nop
sub
fldt
js
and
mov
cmc
pop
sbb
enter
mov
xlat
inc
shll
sahf
pop
xor
mov
push
test
cmp
xor
fstps
mov
push
sbb
mov
lahf
lea
push
mov
inc
push
sub
xchg
jp
out
mov
dec
dec
mov
mov
jp
pop
mov
cmp
sub
pop
xchg
loopne
dec
je
adc
lods
pushf
push
lret
push
mov
cmp
imulb
addb
lods
push
cwtl
imul
xor
jnp
negl
pop
sahf
jbe
es
inc
jo
jp
loopne
sbb
sti
sbb
fmull
sahf
test
mov
inc
inc
lcall
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
jmp
mov
xchg
adc
mov
ss
add
and
rcrl
jb
ljmp
pop
cmpsl
fsubr
add
and
lcall
adc
rclb
fs
sbb
jg
js
cmpsl
in
icebp
and
incb
sbb
test
adc
aam
inc
aas
cmp
aaa
sub
idivl
lods
sbb
fsin
gs
sbb
dec
inc
xchg
fwait
push
insb
and
js
push
std
push
lock
cmp
xchg
outsl
dec
jp
push
movsl
es
fiaddl
sub
in
jb
js
aas
out
inc
cwtl
das
xor
std
or
std
lds
int3
dec
sub
adc
rcll
aaa
and
sbb
mov
fwait
xor
dec
scas
xorl
mov
inc
leave
inc
das
ret
lret
mov
repnz
das
out
xchg
insb
hlt
in
sahf
jb
pop
jne
jp
repz
fcomps
add
fisubl
push
jno
push
jl
stos
mov
outsb
jmp
xchg
dec
int3
and
pmaddwd
ds
cmp
imul
mov
sbb
dec
pop
jge
mov
push
xchg
repz
gs
clc
add
adc
outsl
adc
dec
cmp
iret
push
push
rol
ret
pusha
mov
mov
int
popa
sub
addl
scas
dec
jp
shrb
cld
lret
sub
mov
xchg
adc
stc
pop
and
mov
cmp
push
scas
push
adc
xor
in
shrl
aad
cmpsb
jge
adc
dec
sbb
push
out
mov
dec
xchg
int
and
mov
rolb
inc
pop
fbld
or
pop
fisttps
adc
aam
orl
out
fcmovnu
inc
cltd
adc
rcl
out
or
int
fs
cmpsl
fldpi
pop
iret
js
mov
adc
jecxz
in
sahf
ljmp
cmp
add
subb
jl
pop
lahf
ret
std
add
adc
mov
inc
rcll
mov
scas
imul
stc
sub
jmp
repz
sbb
icebp
insl
rclb
cld
cwtl
mov
xor
mov
mov
std
add
fsubl
adc
xor
test
mov
repnz
iret
and
es
out
xlat
inc
lds
faddl
add
sbb
inc
imul
add
sbb
fwait
cld
inc
std
fdiv
dec
lret
cmp
xor
dec
push
jg
mov
cmp
es
mov
mov
and
inc
dec
dec
xchg
mov
and
leave
jg
and
sbb
cli
sbb
fstpt
mov
or
xchg
fwait
push
enter
sahf
cmc
sbb
pusha
push
mov
mov
adc
and
insb
mov
mov
mov
add
fidivs
out
xchg
push
jle
test
jl
scas
pushf
lahf
lds
fadds
mov
nop
js
dec
jg
inc
lods
and
cltd
xchg
pop
fadd
sub
push
and
iret
mov
xchg
mov
mov
xchg
jbe
popa
or
or
into
loope
jb
mov
repnz
sahf
rcr
jle
add
rolb
stos
or
jl
cmp
xor
rorl
pop
imul
enter
jge
jg
stos
xchg
and
loop
push
add
xor
bound
enter
add
les
xchg
test
dec
mov
popa
jno
in
ljmp
pop
sub
mov
stos
lahf
dec
or
sbb
pop
jp
mov
and
xor
xchg
jno
xchg
pop
xchg
jge
xchg
ret
orl
sbb
mov
int
cmc
or
mov
shl
sub
mov
cmp
iret
jg
xlat
sbb
fwait
int3
call
xchg
cmp
jmp
jo
mov
mov
adc
xor
int
xor
loopne
push
xor
cmp
aaa
lea
inc
xchg
icebp
dec
add
push
dec
and
nop
jae
movsl
subl
or
or
jg
ja
pop
data16
adc
fs
and
mov
jmp
arpl
inc
test
pop
inc
rcrl
sbb
sub
movsb
ljmp
push
jae
ds
inc
lea
cmpsl
and
jno
jne
sbbl
fistpl
push
or
mov
sbb
or
pop
das
push
mov
cwtl
cmc
mov
xchg
roll
test
push
sub
test
xor
lret
pop
scas
cmp
fstl
sarl
stc
mov
jbe
inc
mov
fdivr
pop
in
dec
mov
adc
and
lods
rorb
adc
inc
mov
adc
sbb
xchg
cmp
jle
sub
mov
inc
push
xor
test
adc
xchg
sbb
rcrb
rorb
push
or
mov
out
out
lds
jp
int3
push
stos
mov
cmp
cli
jecxz
in
inc
mov
ror
jg
xor
test
xchg
mov
cmc
int3
dec
jmp
pop
mov
jle
roll
test
nop
cmp
mov
jl
sbb
inc
iret
aam
jb
xor
xor
pop
div
push
loopne
dec
std
jp
js
cli
adc
xchg
inc
xchg
or
test
xchg
sbb
xor
dec
add
movsb
add
je
bound
repnz
cltd
and
fnstcw
push
cmpsb
lea
imul
call
in
jns
lss
or
push
jb
fs
and
cmp
dec
fdivp
jg
test
test
adc
lods
sub
xchg
out
enter
es
xchg
loop
jmp
mov
jae
dec
xor
xchg
shl
adc
jae
ret
adc
jbe
push
sbb
or
jno
push
out
mov
xchg
jno
xor
xchg
dec
xchg
xlat
cmp
dec
push
sahf
push
inc
cmp
notl
outsl
dec
sbb
mov
and
add
out
iret
cmp
shr
mov
inc
and
into
sub
pop
adc
enter
push
insl
cli
cmp
sbb
inc
pop
push
lods
mov
fildll
sbb
add
fmuls
pop
add
push
push
jmp
dec
js
gs
push
pop
cmp
xchg
dec
sti
xchg
add
add
jle
push
popa
sbb
aad
leave
push
push
pop
lcall
sahf
roll
sbb
inc
insl
add
adc
popf
fistl
int3
sahf
popf
call
push
sbb
mov
jae
enter
xor
stos
shll
adc
add
lock
repz
cmp
add
test
pop
xor
idivl
sub
xchg
xchg
sarl
cmp
loope
outsl
sbb
and
neg
pmaddwd
sub
pop
lret
mov
dec
xchg
cwtl
and
dec
int3
push
mov
dec
sub
das
stc
cmp
mov
pusha
push
scas
add
or
dec
into
and
pop
into
cwtl
jl
push
mov
push
imul
mov
insb
mov
inc
or
jp
xchg
mov
insb
inc
mov
nop
fmulp
mov
cmp
pop
mov
pop
sbb
scas
out
mov
cmc
inc
jae
out
ss
sbb
fdivr
mov
data16
add
aad
int
and
ja
je
sub
mov
inc
fmull
sbbb
mov
pop
dec
popa
sbb
mov
sbb
jne
int3
jp
add
mov
jbe
loope
mov
pop
jle
jmp
mov
inc
or
lods
cmp
dec
mov
xor
add
push
push
imul
jp
mov
loopne
pop
jge
sti
dec
or
mov
ss
pushf
xchg
lock
cs
xlat
add
mov
pcmpeqd
sbb
out
and
push
int
in
or
pusha
cmp
pop
mov
sbb
mov
and
aaa
mov
test
dec
iret
mov
mov
ror
xchg
push
push
xchg
testb
push
sub
ss
jl
repz
ds
jne
decl
sub
push
ds
sbb
add
js
or
arpl
inc
bound
shlb
cmp
ret
movsb
dec
jg
jmp
cmp
cltd
jbe
stos
add
popf
lds
hlt
inc
push
cmp
pop
pop
test
jns
push
sub
fs
mov
sbb
ficoms
loop
pop
cmc
dec
arpl
mov
adc
adc
dec
sbb
fbstp
fbld
iret
call
and
jle
lret
jne
jecxz
shlb
fistps
ja
push
xchg
test
addr16
nop
dec
xchg
shll
jle
jns,pt
inc
cmpsb
jnp
addr16
inc
pop
rcrb
es
sbb
movsb
inc
leave
stos
xor
int3
mov
mul
dec
dec
jle
mov
xchg
andl
mov
hlt
add
jne
jp
xchg
mov
jge
mov
out
stc
andl
xor
mov
movsl
out
push
dec
mov
sbb
mov
hlt
xor
sbb
sub
test
jg
xchg
jns
mov
mov
or
dec
jp
out
pop
xchg
cmp
sub
pop
inc
in
fnsave
pop
mov
cmp
mov
sahf
mov
mov
lret
pop
mov
daa
jb,pn
dec
and
ret
sarl
xlat
or
rorl
adc
cmpsl
add
xchg
imul
shrl
rolb
shlb
sub
scas
addr16
jmp
test
inc
icebp
dec
jbe
or
int
js
loope
cmova
xchg
loopne
mov
loope
jo
xor
mov
mov
shl
imul
adc
add
rclb
and
add
adc
pop
or
pushf
pop
mov
out
add
and
sub
mov
xchg
mov
jno
fsub
pop
mov
cmp
dec
fidivs
add
shrl
mov
sbb
out
mov
adc
xchg
and
dec
hlt
jg
push
dec
push
hlt
repz
mov
das
mov
in
test
push
mov
sbb
in
insb
jmp
rcrl
mov
jns
cwtl
mov
cmp
insl
inc
stos
aad
pop
fisubs
andl
dec
jno
and
push
pop
stos
pop
jne
mov
outsl
cmc
arpl
jns
xor
xor
subl
bound
xchg
shl
or
std
jbe
fwait
add
vpunpckhdq
fildll
jge
decl
insb
in
aad
enter
dec
shrl
lahf
call
pop
pop
or
jnp
adc
stos
test
rcrb
ret
inc
iret
dec
int3
mov
xor
jg
cmp
lods
movsb
and
cld
dec
xor
insl
jbe
out
mov
jae
andl
scas
push
mov
dec
ljmp
fnsave
pop
mov
push
pop
gs
jmp
daa
in
xchg
rorl
decl
repnz
xchg
mov
inc
fmuls
loop
push
fwait
pop
test
push
cmp
jno
icebp
or
divb
jl
fbstp
push
push
sti
adc
mov
jnp
in
inc
mov
ret
add
jge
pop
out
mov
repz
or
mov
lahf
fildll
int3
fadds
cwtl
es
subb
movsb
mov
jno
loopne
push
push
mov
aas
in
dec
add
push
sbb
pop
ret
inc
aas
jnp
les
cmc
shlb
pop
fistpll
mov
mov
iret
xchg
pop
divb
xchg
inc
sub
push
insb
inc
sbb
hlt
sbb
sbb
mov
xchg
movsb
ljmp
mov
mov
lret
adc
or
inc
xchg
dec
les
add
adcl
xchg
xchg
fs
pusha
cld
inc
dec
out
pop
jg
or
adc
mov
or
push
sti
mov
movsl
call
pushf
xor
sbb
xchg
pop
mov
mov
cmp
push
mov
shrb
bound
ljmp
orl
out
and
ljmp
jb
aam
dec
hlt
mov
pop
enter
dec
or
push
push
scas
cmp
out
hlt
mov
inc
pop
call
push
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
jmp
fnstenv
inc
mov
mul
push
js
or
add
cltd
je
pop
dec
shlb
mov
pusha
test
cmp
std
outsl
sub
pop
sub
mov
jl
imul
popf
imul
lods
or
mov
push
lret
jbe
test
rcll
inc
inc
mov
pop
and
lods
push
jl
gs
hlt
decl
or
test
test
mov
lret
lds
cmp
lcall
xchg
push
lods
xchg
xchg
call
fcoms
xor
cltd
sub
inc
out
mov
and
pop
and
rorl
or
dec
and
ss
dec
out
shr
and
fistl
and
fdivrl
jo
sub
cld
lock
add
mov
call
adc
pop
mov
mov
cs
jae
pop
cli
stos
adc
in
xor
xchg
sahf
sbb
add
push
pop
sub
cli
shll
test
mov
scas
sub
gs
inc
mov
push
push
sbb
pop
lods
mov
ljmp
jg
test
and
push
add
in
add
pop
mov
shl
pushl
mov
cs
movsb
fadds
push
insl
les
popa
cld
cmpsb
and
ret
loop
pop
cmp
insl
push
inc
pop
jb
mov
sti
jp
jne
cld
sub
jo
xor
xchg
popf
iret
or
es
stos
push
out
fucomi
dec
pop
jno
cmpsb
call
mov
pop
shl
movsb
shrb
inc
stc
or
scas
repnz
fsubr
inc
movsl
sub
out
int
in
xchg
int
mov
adc
aaa
scas
mov
movsl
mov
daa
negl
test
mov
cmp
std
inc
mov
jmp
setle
mov
fst
xor
leave
rcll
shll
lret
add
mov
adc
cmc
out
or
dec
mov
pop
sub
mov
leave
mov
dec
scas
mov
cmpsl
cmp
sub
ja
ficomps
clc
mov
sub
xor
xor
clc
ret
push
insb
dec
icebp
stos
mov
lahf
or
mov
dec
cltd
cs
mov
icebp
cmp
repz
pop
testb
outsl
or
xchg
jecxz
aad
dec
mov
mov
ds
fcoml
cmpsb
jl
out
jle
push
xchg
es
int
sub
mov
xchg
cmovs
je
mov
cs
cwtl
lret
and
cmp
sahf
jg
xchg
and
cmpsl
pop
scas
mov
aam
inc
push
incb
dec
test
int3
and
add
mov
loop
add
movsl
mov
push
sbb
cmpsl
jp
push
and
lock
push
clc
sahf
inc
lret
enter
leave
push
mov
inc
adc
add
testb
and
sub
mov
insl
xor
and
dec
insl
lods
test
pushf
hlt
bound
or
and
lods
and
pop
push
mov
jne
adc
lahf
addr16
push
addr16
pop
out
xchg
dec
out
sbb
lods
mov
jg
out
popf
incb
aad
or
js
sub
adc
fwait
out
cmpsb
imul
movsb
pop
into
icebp
js
lods
stos
fisubl
ljmp
jb
stc
or
cld
bound
je
pusha
cmp
lea
mov
adc
or
psubusw
cmp
fnstcw
inc
movsl
inc
dec
lcall
or
sbb
ficompl
aaa
movsl
test
dec
sub
ret
xchg
mov
jno
xchg
add
lds
sbb
lcall
or
addr16
in
xchg
add
adc
pushf
lea
insb
lods
leave
loop
or
sahf
std
shrb
rorl
into
cmp
outsb
dec
enter
es
imul
les
clc
ficoms
push
fisttpll
jmp
adc
into
pop
cmp
lods
test
mov
test
cs
ljmp
xor
sbb
rcrb
ljmp
stos
jbe
and
mov
pop
in
call
adc
xchg
push
cld
push
stos
xlat
cld
or
lret
xorl
cli
jl
sbb
push
jns
bound
xor
adc
inc
rclb
xchg
gs
fsubr
fidivrs
xor
cmp
push
andb
lods
cmp
flds
push
cli
rcrl
mov
cmp
sub
jb
cwtl
in
fdivr
adc
and
das
mov
mov
xlat
std
or
outsb
jge
pop
push
fwait
stos
pop
notl
js
rorl
in
aas
xor
inc
nop
gs
lret
jno
adc
in
pop
das
push
mov
mov
mov
ds
lock
js
mov
xchg
test
addr16
jmp
shlb
xchg
movsl
push
clc
negb
jl
jle
jnp
or
cmp
add
andb
sub
cmp
jns
pop
inc
mov
sub
sbb
jmp
es
cmp
cmp
inc
leave
orb
mov
xor
ret
shll
push
or
test
or
pop
inc
push
sbb
push
push
mov
sbb
test
or
popa
lahf
xchg
bound
pusha
and
es
or
test
jbe
dec
mov
iret
repz
lods
push
cmp
pop
sbb
mov
mov
roll
xor
cmpsl
xlat
adc
imul
insb
scas
mov
xchg
pop
cmpsl
jle
jge
push
mov
gs
loopne
add
jmp
gs
sbb
or
adc
popf
dec
xchg
ret
dec
fsubs
xchg
pop
dec
ss
into
push
aad
stos
fsubr
jae
enter
mov
jnp
push
xor
xor
pop
or
lret
ficoml
sbb
or
nop
lret
hlt
jge
ljmp
jo
sbb
pop
pusha
or
repnz
sbb
movsb
stos
push
loop
cmp
popf
mov
loop
leave
sub
outsb
inc
xor
shlb
insb
push
sub
cmc
adc
sub
add
pop
lods
in
pop
fisubl
ficomps
sub
jmp
jnp
cs
xor
xlat
cmp
sub
sub
mov
arpl
add
imulb
pop
add
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
jmp
out
fisubl
push
jne
lret
sti
xchg
dec
add
add
adc
js
mov
xor
rcrl
xor
pop
je
push
pop
mov
cmp
enter
pusha
jne
loope
imul
xlat
inc
outsl
sub
sbb
and
sbb
aam
jns
cmp
add
roll
rcll
xchg
mov
jecxz
sub
outsl
addr16
xor
mov
idivl
xchg
pop
lahf
or
lea
js
pop
jmp
subb
addr16
and
les
push
int3
adc
fisttpll
xor
push
inc
ja
add
dec
lock
inc
rol
lods
lock
push
daa
cmp
pop
and
inc
in
push
sbb
jo
rcll
inc
or
sarb
push
xor
jecxz
lock
add
inc
cmpl
jae
fcomip
jge
repnz
inc
stos
cmp
cmp
mov
imul
js
xor
dec
mov
icebp
aad
mov
imul
sbb
inc
daa
sub
xchg
test
hlt
and
add
jb
pop
call
cmp
jl
mov
xor
out
popf
xchg
loope
mov
pop
insb
mov
and
jge
orl
lcall
lahf
enter
fdivs
push
jl
sbb
or
mov
xlat
test
mov
push
push
pop
lock
jb
out
mov
scas
test
jnp
mov
stos
loopne
iret
push
push
and
fisubl
cmp
cmc
es
stos
push
xor
lock
jo
jp
xchg
pop
sti
fimull
push
cwtl
push
sbb
dec
incb
mov
cmpsb
add
sahf
adc
cltd
jns
dec
cmp
imul
dec
dec
cld
push
cmpsb
ret
xor
mov
ret
roll
adc
inc
shlb
xchg
loope
jmp
ret
loope
and
subl
lcall
test
std
hlt
imul
xchg
bound
inc
hlt
das
jge
lret
dec
pop
test
or
pop
xor
loop
lcall
iret
adc
leave
and
fcomi
lods
int
mov
mov
dec
lahf
mov
testb
push
adc
cmpsl
in
or
popa
sbb
insb
sti
aaa
arpl
insb
jmp
ret
dec
fisubrs
adc
fstpl
test
hlt
leave
aas
push
sti
mov
jl
adc
adc
or
sub
mov
out
ljmp
xor
cmp
adc
cmp
pop
aad
push
xchg
xchg
push
in
int
test
aaa
dec
mov
or
push
fnstcw
popa
mov
loope
and
inc
out
mov
test
jae
push
aad
mov
incl
mov
xchg
or
jle
adc
clc
xor
or
mov
dec
inc
es
sbb
fcmovnu
push
mov
repz
leave
sub
test
lahf
dec
add
cmp
popf
sbb
popf
stos
stc
clc
sti
rclb
mov
sbb
pop
pusha
out
nop
leave
ljmp
cmp
icebp
bound
stos
dec
lds
clc
mov
jb
es
je
rcrl
test
dec
pop
scas
arpl
ret
xchg
ret
lcall
orl
mov
sbb
outsl
push
je
pop
dec
push
insl
sub
popa
inc
push
dec
xchg
or
mov
sbb
int
pop
adc
mov
fimull
pop
push
std
push
pop
lret
fistpll
sarb
pushf
dec
mov
adc
sub
loop
mov
ds
scas
jns,pn
fwait
loopne
out
mov
pop
mov
sub
xchg
repnz
stc
xchg
iret
dec
movsl
cmp
dec
outsb
pop
mov
sahf
jmp
mov
push
push
pop
push
push
int3
je
mov
lea
adc
cmp
orb
sub
scas
sarl
loope
fyl2x
scas
ret
leave
sti
pop
rorl
xor
stos
mov
scas
xlat
cli
and
fcoml
aas
pop
js
cmc
shrl
mov
je
xchg
cli
add
cmp
std
jb
cltd
shr
shrb
cltd
clc
and
out
lods
mov
out
lds
int
loop
xlat
ljmp
xor
sbb
xchg
dec
pop
aam
and
aam
mov
enter
cmp
loope
rcrb
xchg
or
pop
ret
lret
mov
mov
pop
test
xchg
dec
cmp
add
mov
shrl
or
xchg
jnp
pop
or
push
push
imul
inc
jo
mov
mov
std
mov
adc
imul
movsb
or
cmp
loopne
popf
jno
xor
dec
pusha
stc
mov
daa
outsl
pop
sahf
rcrl
dec
ljmp
and
test
sub
les
and
outsb
push
sarb
scas
out
pop
lret
lods
dec
jno
insl
mov
and
in
pop
pop
sub
shrl
pop
jle
pop
js
jle
ficompl
push
jge
dec
pop
loop
xorl
pop
xor
loopne
js
out
push
shrl
out
adc
xchg
push
sub
pmulhuw
cmp
inc
lea
sahf
sarb
sbb
adc
adc
xor
adc
xchg
inc
lret
adc
repz
mov
testl
sub
add
pop
dec
jno
jnp
and
in
push
rorb
pop
cs
dec
push
xor
or
mov
push
ljmp
test
xor
rorl
adcb
in
imull
cwtl
jno
push
ljmp
js
sbb
enter
shrb
orb
fstps
sbb
jns
dec
xor
pop
ficoml
daa
testl
adc
xor
ret
popa
pop
rcl
outsb
push
lret
lret
call
push
mov
jp
lds
or
outsb
dec
xor
jne
jns
and
scas
imul
sbb
xor
fs
ss
orl
jb
jne
js
add
ljmp
sub
outsb
xchg
insl
mov
sahf
push
fsubr
mov
add
xor
mov
xor
mov
push
push
push
push
call
push
push
jmp
add
lds
nop
mov
add
lds
js
fidivrl
rorb
repz
cmpsl
and
imul
sbb
ret
jbe
test
xor
repz
sub
test
mov
cmp
mov
cld
xchg
jb
cmpsb
add
and
popa
pop
add
cmp
mov
fildl
pushf
divb
loop
xchg
pop
pop
and
mov
lahf
dec
or
lods
pop
enter
sti
aaa
movl
mov
mov
cli
in
jae
cwtl
cs
lods
repnz
lds
into
and
adc
push
fsub
int3
push
ss
xor
or
scas
cmp
fs
xchg
dec
and
std
dec
or
sub
xchg
cld
cmp
xlat
orb
lock
push
xor
push
mov
js
fstl
jne
mov
rorb
push
test
push
and
icebp
jne
loopne
les
jne
insb
inc
or
repz
into
mov
std
mov
scas
dec
cmpsb
clc
int
out
pop
xor
test
sti
adc
call
mov
ret
mov
ja
aad
xor
cmpsl
jae
daa
inc
aad
pop
mov
dec
inc
dec
sbb
int3
aas
inc
add
push
or
push
stos
jae
cli
push
les
mov
aas
pushf
push
fisttpll
add
mov
out
mov
push
cltd
cmp
mov
push
aam
ret
mov
outsb
adc
pop
jge
sbb
inc
dec
mov
xchg
sti
ja
inc
lds
pop
outsl
xchg
das
push
nop
jle
loop
and
pop
push
popa
xor
out
fisubrl
pop
add
sbb
in
ficoms
mov
inc
add
push
cwtl
pop
pop
dec
nopl
sbb
daa
pop
sbb
pop
bound
jg
mov
lods
enter
xchg
pop
movsb
aas
out
xchg
stc
mov
jb
sub
sbb
cli
inc
mov
ds
in
rcll
jl
loop
scas
or
or
loop
sub
add
stos
push
mov
jnp
int3
cmp
cmp
popa
cmpsl
fdivrl
adc
adc
sti
push
mov
and
mov
dec
les
mov
js
mov
fsub
and
lea
fnsave
cmc
aaa
lret
jo
data16
jmp
jne
xor
dec
jge
lods
mov
inc
push
loop
sub
jecxz
sub
addr16
ljmp
cmp
mov
sub
adc
mov
add
cmpsb
fwait
ret
sbb
pop
pusha
push
xlat
icebp
push
lods
loopne
ret
push
shll
push
int3
mov
test
cmc
je
out
lods
lds
mov
adcb
sbb
pop
out
popf
mov
pop
iret
int
int3
sbb
lock
mov
dec
inc
and
out
ret
mov
das
decb
aad
mov
cmp
jno
and
inc
fildll
cmp
push
sbb
scas
rclb
cs
stc
adc
mov
add
repz
mov
xor
push
xchg
sub
out
jg
sbbb
enter
aad
pushf
loopne
cmc
stos
cmp
js
repz
fcmovnb
sbb
sbb
push
les
fdivs
xor
mov
int3
mov
std
mov
or
repnz
push
pop
stc
rorl
mov
dec
into
inc
lret
push
sbb
push
push
jecxz
scas
push
stos
mov
fsubrp
insb
stc
imulb
jp
inc
dec
adc
in
ja
lods
fistl
fs
incl
sbb
push
loop
repnz
push
inc
scas
and
push
fnstcw
mov
add
sahf
dec
sub
jb
loopne
mov
cltd
cs
addr16
jne
xor
icebp
cmp
mov
movsl
inc
ret
push
aam
xchg
cmp
test
not
sti
jmp
sarb
inc
lcall
mov
lret
lods
inc
pop
stos
mov
std
out
dec
jb
xchg
cli
jl
popa
addr16
sub
jp
jnp
mov
in
push
cs
mov
arpl
xchg
inc
test
or
enter
cmp
fsubl
sbb
test
test
addr16
outsl
jmp
loopne
test
fbstp
aam
sti
loop
and
sbb
mov
cli
adc
sub
adcb
mov
rcrl
popf
jl
enter
or
dec
loop
and
in
icebp
push
mov
jecxz
shll
lret
adc
pcmpeqd
push
cmpsl
push
popa
xor
jge
inc
inc
outsb
es
ja
loope
dec
leave
or
push
fldl
dec
data16
or
dec
and
inc
mov
mov
lret
pop
ds
inc
xchg
add
aam
imulb
out
and
mov
add
jb
outsb
xchg
add
pop
lcall
pusha
cmp
rolb
push
arpl
mov
xor
sbb
push
or
ds
mov
imul
clc
mov
add
jno
xlat
gs
cmp
jle
imul
iret
dec
negl
mov
xor
jns
mov
mov
mov
outsl
sub
cmp
xchg
inc
or
insb
xchg
mov
cmp
pop
jne
mov
add
fdiv
adc
add
sub
pop
out
cli
mov
es
adc
mov
jmp
add
out
nop
clc
das
mov
shll
sti
mov
inc
icebp
sti
pop
pop
pop
xchg
push
aam
popf
xchg
mov
jnp
inc
mov
fstpl
loopne
xchg
ret
cwtl
lret
int3
fdivl
adcl
lret
xor
cmpsb
xchg
xor
into
xor
data16
shlb
fistps
jns
icebp
jb
mov
lret
push
aam
shr
push
arpl
gs
mov
rcrb
push
sub
in
adc
add
clc
in
in
cmc
es
fwait
add
mov
mov
outsl
test
inc
dec
jmp
sbb
cmp
sbb
mov
fwait
jp
mov
mov
sub
std
sub
and
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
adc
movl
mov
sub
mov
xorl
mov
addl
movl
orl
jmp
sti
out
out
jo
jo
pop
inc
push
push
mov
js
invd
add
xcrypt-ecb
cmpsl
or
cmp
outsb
fidivrl
dec
into
add
xor
inc
mov
mov
dec
fs
mov
andl
rorl
cld
and
cmp
pop
pop
inc
pop
inc
test
jl
and
insl
out
mov
sbbl
repz
and
lods
mov
scas
outsb
sbb
popa
in
inc
xor
jae
hlt
and
or
jecxz
or
das
sbb
push
hlt
dec
clc
sbb
fdivrl
div
out
outsl
mov
out
outsl
stos
mov
xor
movsb
jo
push
mov
sahf
scas
out
xchg
fwait
mov
lds
and
add
xchg
pushf
clc
and
movsl
pop
sub
rol
aam
or
pop
push
aaa
jle
and
push
sarl
push
jnp
jp
cmovne
insb
es
mov
pop
iret
in
adc
push
pop
mov
in
add
fs
mov
mov
mov
add
cmp
jg
nop
enter
das
or
add
or
jnp
test
ror
jo
xor
mov
iret
or
adc
and
mov
cmp
mov
imulb
outsl
ret
push
les
pop
sbb
xor
pop
cmp
jbe
sbb
call
pop
std
inc
fwait
inc
pop
in
stos
or
movl
ja
daa
dec
push
rcr
iret
call
and
mov
or
add
or
mov
frstpm(287
testl
icebp
std
sbb
insl
mov
dec
jl
add
xchg
push
loopne
pusha
adc
jge,pt
rcll
adc
jnp
pcmpgtd
push
ret
inc
inc
pop
pop
adc
aas
sbb
mov
sti
sub
cmc
mov
pop
mov
hlt
mov
outsl
jge
sub
jae
add
mov
ret
rcll
mov
jbe
push
cltd
popa
movhps
je
int3
push
push
in
push
rcl
out
pop
and
popf
ds
jl
pop
pop
cmpsb
and
pop
adc
iret
insl
sub
fsts
cwtl
adc
and
jb
in
pusha
pop
mov
out
inc
inc
cmc
cli
xchg
ret
jg
push
mov
xchg
mov
mov
inc
xor
icebp
cltd
ljmp
setne
sub
sbb
jo
pusha
imull
xor
lods
clc
xor
stos
mulb
ret
mov
sbb
ljmp
and
xchg
insb
mov
setle
popf
lods
mov
pop
lret
les
jp
push
add
enter
mov
sub
adc
repnz
and
jae
rcrl
push
adcb
jmp
cwtl
fnstcw
cmp
das
imul
xor
xchg
xchg
cmp
call
cmpsl
mov
fdivr
enter
in
sub
popf
xor
push
fmuls
aas
aaa
int3
daa
cmp
jns
sar
mov
cmpsb
sarb
idiv
nop
shll
jno
aad
jbe
rcr
stc
dec
lock
mov
jl
test
inc
imulb
scas
fdivl
xchg
ja
mov
test
test
sub
ficoms
and
int3
cs
mov
cmp
lock
xchg
fidivrl
je
insb
sbb
jge
jb
mov
cld
cld
ja
fcoml
sbb
add
and
insl
mov
cmp
lcall
out
shlb
inc
xchg
in
andl
movsb
cmp
lods
out
jb
push
adc
push
dec
cmc
and
push
jne
mov
xor
pop
insl
fxch
rorl
cmp
pop
out
bound
and
cmp
push
mov
add
jmp
or
std
mov
cmp
push
sti
mov
dec
pop
jns
rorl
mov
sub
and
loope
insl
xlat
fsubl
jg
popf
mov
out
mov
fistps
daa
out
icebp
xchg
je
das
stos
repnz
ret
xchg
sbb
sub
dec
cmp
xlat
pop
popf
mov
pop
pop
push
cmp
or
rcll
loop
arpl
sub
aas
mov
mov
pushf
cmc
dec
ror
jb
sbb
sub
mov
fsubrs
inc
lret
mov
sub
cmp
xchg
push
ret
fsubrs
inc
add
jg
and
mov
pusha
fidivl
outsl
scas
lds
arpl
daa
and
adc
icebp
mov
pop
nop
loop
push
push
jae
repz
push
dec
fwait
sbb
popa
sti
bound
dec
push
in
imul
scas
incb
mov
scas
xchg
data16
cmpsb
int3
mov
cmp
ret
cwtl
rclb
cmp
movl
es
mov
test
inc
jno
xchg
sti
sbb
xchg
scas
sub
add
imul
and
fcmovnu
out
lods
jmp
and
xchg
popl
jg
push
pop
xor
mov
xchg
or
test
popf
mov
fidivl
inc
pop
sub
mov
inc
ds
xlat
pop
imul
or
sbb
out
aam
pop
jno
dec
jge
sahf
scas
inc
add
data16
sahf
push
and
xchg
jb
lods
aaa
out
pop
add
testl
inc
lods
scas
and
or
lret
jne
mov
mov
mov
mov
mov
jae
mov
jno
push
aad
loopne
insl
jno
mov
hlt
jmp
mov
push
insb
sub
dec
sub
or
out
dec
out
lcall
and
test
jns
out
ret
sub
ja
scas
fadds
fisubs
sub
jb
mov
mov
sbb
pop
int3
xchg
push
inc
in
movb
movb
cmpl
jbe
andl
adc
jmp
pushl
call
movb
movzbl
mov
sub
imul
mov
or
movzbl
push
orl
and
mov
movb
movl
movb
subl
movb
movb
orl
mov
orl
mov
subl
add
adcl
jmp
ret
sub
shlb
mov
xor
mov
es
push
loope
invd
add
comiss
xchg
out
frstor
adc
mov
jmp
xchg
scas
out
ffreep
sub
ret
push
in
mov
in
arpl
push
pop
std
xchg
sbb
mov
or
jo
push
sub
push
jae
test
push
test
dec
sbb
cmp
mov
push
sbb
push
loopne
mov
and
push
jecxz
push
fisttpll
imul
jae
and
and
fsts
stc
lods
enter
out
testl
pop
notb
faddp
and
mov
cwtl
aaa
dec
xor
subl
lods
mov
or
inc
pusha
pop
add
fwait
xchg
or
xor
les
push
mov
lret
stos
bound
das
test
lods
inc
mov
xchg
inc
repz
mov
lods
inc
nop
jo
or
adc
xchg
jecxz
ficoml
mov
int3
jo
sbb
or
adc
mov
inc
pop
jnp
gs
cmpsl
mov
dec
lock
jb
mov
xchg
das
aam
out
pop
add
popf
mov
shrb
sbb
mov
ret
dec
xchg
fidivrl
cmp
loope
cmp
inc
fdivrs
dec
push
sbb
mov
and
sub
sbb
add
mov
lret
lcall
sbb
push
loopne
inc
sbb
movsl
ds
mov
push
sub
add
pop
fsubs
cmpsb
push
out
push
addr16
test
and
loopne
arpl
jle
push
mov
in
jge
movlhps
aaa
cs
jo
fbld
mov
nop
adc
or
inc
cmpsl
xchg
add
cmp
inc
call
sbb
test
test
movsb
mov
cmpl
jmp
in
cmp
fsubr
inc
popa
stc
popf
loopne
pop
popf
push
cmp
jae
mov
dec
xor
dec
lea
cmp
andl
lcall
jmp
jno
fdivr
inc
aad
cltd
pop
pushf
pop
adc
mov
sub
rcll
mov
sbb
or
pusha
push
int
sbb
mov
xor
stos
sub
xchg
ret
lret
movl
ss
movsb
int3
imul
repz
ficoml
mov
adc
jno
mov
or
jae
fidivl
and
daa
sarl
ret
fdivs
pop
lock
jae
insb
push
fdivrs
scas
into
cmc
and
flds
mov
or
cld
push
out
mov
in
pusha
sbb
sbb
xchg
sbbb
xchg
lea
cmpsl
sbb
dec
aas
xchg
fs
sub
popa
jl
xor
mov
pop
test
movl
inc
lds
lock
out
inc
push
icebp
add
adcb
ljmp
xor
adc
and
je
pop
fmulp
mov
mov
jae
lahf
mov
xchg
mov
mov
shrl
add
jno
pop
fdivs
cmp
mov
sahf
js
aaa
cld
cmp
pop
clc
xchg
imul
cld
push
faddl
rcll
mov
push
push
lock
cmp
mov
lds
fwait
out
es
pop
cmc
or
popa
jb
cmpsb
loopne
lods
lret
inc
xlat
out
jb
leave
out
stos
push
fcmovne
cmp
fidivrs
lret
add
xchg
pop
into
ret
lds
sbb
push
add
mov
nop
fidivl
stos
in
xor
pop
xorl
movb
add
adc
lret
inc
xchg
sti
stos
sub
sub
es
int
iret
inc
mov
ljmp
sahf
jge
sbb
sbb
ss
mov
pusha
into
xor
push
sti
fs
adc
add
xchg
xchg
into
and
popa
stos
aam
stc
cmp
or
cmc
aas
popf
mov
ret
jbe
sub
xor
mov
push
push
mov
in
mov
cmp
and
xor
mov
cltd
xchg
popa
fsubrl
xchg
cwtl
cli
scas
sbb
mov
clc
sarl
not
cmp
int
inc
loopne
jmp
and
lret
pop
scas
jbe
loopne
ljmp
push
ret
ret
push
test
add
xchg
popa
lret
cmp
fwait
push
adc
lds
inc
pop
xor
inc
sbb
mov
std
xor
js
xor
push
mov
xor
jns
cmc
mov
rcll
stos
jns
push
cmc
pop
push
addr16
pop
icebp
pop
cli
dec
iret
mov
pop
insl
bound
add
pop
xor
xchg
rorb
mov
repnz
stos
jle
inc
decl
dec
mov
sbbl
sub
dec
pop
xchg
sbb
jl
sbb
movsl
push
mov
jns
push
leave
pop
outsb
rcrb
jle
pusha
icebp
and
jno
cmp
loop
inc
push
pop
mov
mov
dec
test
push
push
mov
inc
mov
sbb
xchg
sahf
add
testb
sbb
imul
int3
push
inc
dec
push
mov
insb
pop
into
test
dec
lret
sub
dec
aas
sti
mov
jg
or
or
inc
push
in
inc
cld
imul
xchg
jg
dec
in
inc
dec
add
xlat
sub
push
mov
inc
adc
test
loop
mov
lods
not
inc
addr16
xchg
lcall
mov
les
and
shll
fidivl
inc
sub
in
mov
cmpsw
icebp
mov
cmp
sahf
cmp
incb
dec
adc
cld
push
pushf
lea
and
mov
dec
incl
add
inc
inc
add
roll
movsb
pop
add
mov
subl
and
movl
jmp
mov
hlt
add
sbb
rclb
invd
add
ud1
movsl
add
es
shrl
sub
mov
shl
scas
repnz
push
shll
scas
sub
xor
and
pop
dec
mov
lahf
ficoms
dec
mov
and
sbb
push
lds
xchg
inc
mov
lret
add
xchg
xchg
test
add
stc
adc
movsl
leave
cmp
stc
sbbb
and
adc
imul
inc
sub
out
push
mov
sarl
loope
imulb
ljmp
hlt
pop
mov
out
ljmp
cwtl
pop
movsl
mov
fistpll
pop
lods
jp
repnz
faddl
cltd
leave
cli
enter
jecxz
cli
cmpsb
cmp
stos
or
adc
sbb
mov
cmpl
add
fisubl
cmc
mov
add
push
dec
jge
pusha
outsb
imulb
cmp
sahf
push
shl
fs
mov
sti
sbbb
xchg
lds
enter
xor
dec
inc
ret
movsb
sub
push
fdivrs
pop
and
mov
nop
sbb
sub
insb
es
scas
and
and
jmp
or
stc
jne
clc
pop
mov
push
subl
xchg
sbb
xchg
repnz
insl
js
sub
fsubr
jno
inc
into
lods
push
mov
jnp
inc
jne
xchg
mov
mov
inc
stc
pop
ss
xor
mov
fucomip
and
sub
sub
xchg
sub
testl
xchg
xadd
ret
fdiv
or
push
dec
insb
mov
fisttpll
jg
jmp
xor
add
daa
mov
leave
icebp
dec
mov
fsub
les
aas
aad
dec
sub
pop
xor
push
and
rcrb
dec
mov
sbb
mov
es
xor
pop
xor
shlb
lods
xor
cwtl
test
cld
mov
dec
insb
fucomip
adc
mov
test
jae
xchg
jecxz
adc
out
in
cmpsb
repz
int3
and
jns
movsl
xor
xchg
jns
stos
sub
jle
xchg
adc
clc
ds
fwait
notb
mov
outsb
xor
repnz
int
push
push
push
push
das
mov
mov
lds
mov
inc
push
gs
insb
xchg
inc
mov
add
mov
aaa
dec
out
mov
lea
in
out
cmp
sbb
add
xchg
xor
subb
cli
dec
pop
addr16
pop
rcrl
ds
int
test
repnz
and
shll
pop
sub
xchg
add
arpl
push
shlb
ljmp
cwtl
push
je
or
in
cmpsl
jecxz
repz
adc
ret
pop
jl
fmuls
adc
mov
pop
lahf
orl
pushl
or
enter
jge
mov
fsubrs
arpl
sbbb
lods
mov
cmp
imulb
dec
movaps
in
xchg
jge
adc
adc
idivb
out
testl
cmp
push
repz
xchg
or
and
dec
lahf
pop
or
ret
mov
or
adc
shl
cli
lret
sub
aas
pusha
or
bound
nop
sub
jmp
inc
aam
mov
adc
mov
jo
punpckhdq
rolb
test
paddsb
aas
cmpsb
sub
inc
mov
cmpsl
aad
idivb
inc
jmp
in
add
jae
jmp
and
xchg
inc
test
mov
inc
push
push
jbe
orl
xor
outsb
adc
mov
mov
into
in
push
cmp
pop
mov
repz
or
aam
sbb
in
push
iret
jecxz
cmp
ja
lea
and
fidivrl
push
ret
push
inc
adc
cmpsb
cmpsb
movsl
xor
in
push
jo
ffreep
xchg
push
sub
loope
mov
addb
xor
inc
mov
stos
sbb
roll
lret
push
inc
fnsave
xchg
lods
fwait
mov
nop
xchg
lahf
push
add
mov
mov
jmp
xchg
and
pop
std
cwtl
andb
mov
addr16
mov
jl
out
or
adc
rorb
fbld
mov
out
add
mov
xchg
lock
in
sbb
pop
fildll
adcb
fistpll
into
pop
jne
inc
jg
pop
in
mov
xor
lock
je
push
sti
sub
je
rolb
fwait
lcall
mov
fs
add
les
or
pop
jp
add
fists
call
xor
stos
in
or
orb
movsl
and
in
daa
aam
iret
mov
ret
push
call
jns
sub
in
push
mov
pop
arpl
fldenv
call
sbb
rorb
push
clc
jl
repnz
arpl
cmp
xchg
mov
sub
sbbb
inc
push
nop
sub
icebp
cmp
sti
rorb
push
in
xor
fisubrs
ljmp
lret
cmp
sbb
lds
cwtl
aam
xchg
xchg
adc
fsts
jnp
sub
out
rolb
fsubrp
stc
push
daa
test
es
push
orps
xlat
xchg
pop
sbb
hlt
pusha
mov
add
lea
iret
jne
pop
fsubl
inc
out
xchg
fsubs
push
and
out
inc
push
jne
push
imul
mov
sub
lods
repnz
enter
leave
jl
sub
scas
shrd
and
lahf
shll
popa
repz
addl
movsb
xchg
ret
cltd
dec
cmpsb
xchg
fisubl
xor
rolb
icebp
into
icebp
pop
or
sbb
dec
out
cmp
ja
mov
mov
sub
mov
cmpl
jl
andl
mov
and
jmp
push
push
push
call
mov
mov
movzwl
movzwl
shr
addl
or
sub
movl
mov
orl
movb
movb
sbbl
mov
mov
xorl
xor
addl
add
xorl
movzbl
movzbl
sub
cltd
mov
adc
mov
jmp
mov
pop
push
and
sub
mov
mov
lahf
ret
invd
add
wbinvd
and
test
mov
aaa
sbb
lock
jne
iret
sti
xor
jp
test
call
fcoml
sub
ss
movsl
loop
sub
jge
jge
sbb
fs
cmpsb
mov
out
imul
sbb
xor
enter
mov
ret
xchg
jp
push
push
mov
sub
loope
jae,pn
addb
xchg
mov
in
xor
gs
arpl
fwait
idivl
call
fs
jb
in
sarb
orl
adc
test
mov
test
adc
imul
add
iret
pop
jnp
aaa
test
mov
hlt
lock
or
pop
lahf
sbb
addl
jo
adc
mov
cmp
lds
mov
sbb
push
enter
xchg
popf
ret
call
dec
mov
jb
xlat
pop
push
sub
inc
jmp
movsl
repz
xor
jp
in
lret
dec
aad
cmpsb
mov
outsl
push
add
lret
sarb
jae
mov
push
sahf
fld
jno
ret
inc
daa
int
jle
xorb
cmp
mov
aaa
stos
andb
sbb
scas
jecxz
lahf
dec
pop
mov
adc
push
jmp
or
andl
int
out
mov
jb
outsb
movsl
fldt
cmp
inc
bnd
add
xor
dec
mov
jo
mov
stc
jno
mov
in
adc
mov
aas
repnz
push
xchg
lods
mov
add
popa
jg
orb
xchg
js
jmp
and
sti
inc
mov
inc
addl
and
call
adc
dec
mov
cmp
fbstp
bound
fisttps
push
repnz
adc
cmp
int
adc
sbb
jne
in
stos
outsl
cmp
dec
test
xor
jg
out
mov
test
xor
pop
xchg
jge
jno
neg
xlat
movsb
sub
jg
out
movl
testl
mov
push
jge
add
pop
bound
scas
pop
gs
jns
shlb
rclb
sti
cmp
adc
mov
addr16
out
fisttps
push
test
jno
adc
mov
and
out
mov
inc
inc
fwait
jns
test
int
xor
jb
push
xor
xor
cmpsb
mov
ljmp
jl
lock
jl
xchg
or
adc
mov
lods
mov
dec
sub
adc
ss
loopne
or
mov
ret
bts
aam
icebp
cwtl
decl
adc
fwait
mov
in
mov
xlat
jge
adc
outsb
mov
and
and
sub
imul
sbb
int3
out
popa
repz
clc
push
xor
xchg
mov
outsb
lret
fs
adc
or
xor
adc
adc
lds
stos
shr
out
pop
out
scas
inc
shrb
and
dec
adc
push
cli
sahf
inc
cmp
inc
push
mov
cmp
pop
insb
mov
sbb
sbb
mov
mov
and
inc
cld
xchg
rcl
ss
sbb
lea
inc
mov
mov
inc
in
jp
das
lea
jbe
ja
in
jmp
subl
inc
cmpsl
sbb
cld
out
pop
cmp
dec
sbb
xchg
imul
inc
mov
div
imul
outsl
jle
add
push
push
xchg
cmpsb
push
and
jecxz
les
sbb
insb
push
in
pushw
lcall
cmp
lods
fnsave
je
push
subl
sub
in
sbb
les
insb
cmpsb
or
mov
pop
loope
fwait
int3
pop
xor
movsl
jbe
mov
jmp
pushf
cld
movsb
fidivrl
ret
jecxz
sbb
jo
out
sbb
sahf
lods
into
jns
jb
and
test
imul
cmp
mov
aam
loopne
adc
ds
sbb
inc
ficomps
ret
push
loope
jns
shlb
push
sub
test
mov
mov
mov
xchg
pop
jle
sbb
xchg
fnsave
xor
sbb
hlt
enter
xchg
dec
sub
push
into
lret
hlt
xchg
stos
or
aas
fs
jl
dec
sub
inc
stos
fnstsw
and
mov
sub
xchg
cmpsl
dec
mov
lret
outsl
shll
ffree
push
std
faddl
cmp
popf
loop
lcall
pop
fisttpll
jbe
std
stc
fcomi
jl
scas
jmp
popf
sub
push
fnsave
mov
mov
fcoml
roll
fcoml
mov
mov
pop
jbe
fildll
fisubs
pop
ret
hlt
sbb
jnp
fbld
int3
aad
mov
rclb
jnp
xchg
mov
mov
cmp
dec
mov
out
int
rorl
scas
cmpsl
and
shl
dec
and
or
mov
push
push
pop
mov
mov
pxor
out
sub
rclb
jg
jo
sub
scas
or
mov
xor
sarl
mov
std
mov
mov
into
cmpsb
xlat
mov
aaa
mov
push
ret
jbe
inc
ffree
test
adc
push
stc
shl
cmp
shll
outsb
outsl
and
aad
dec
or
inc
mov
sbb
filds
mov
loop
push
sbb
and
cli
xchg
cmpsb
mov
adc
in
add
add
jl
and
jmp
push
call
jmp
sub
push
xchg
jne
jle
mov
test
paddsb
nop
outsb
sbbl
push
insb
int
pop
in
xchg
sbb
mov
push
cltd
jnp
inc
std
mov
pop
sub
notb
shll
jnp
xchg
sbb
ljmp
mov
rol
arpl
mov
sub
add
xor
enter
enter
stc
rcr
mov
repnz
pop
mov
xor
pop
mov
mov
xlat
mov
mov
pop
jo
xor
cli
pop
decl
cltd
jno
mov
pop
stos
jns
cmp
rorl
sahf
ds
mov
adc
gs
repnz
add
fwait
je
mov
mov
add
push
lar
cltd
mov
popa
into
fistl
jbe
aam
dec
jge
insl
mov
xchg
jg
mov
or
pop
xor
mov
popf
inc
popa
and
jecxz
stos
adc
clc
int3
shll
push
mov
sti
into
mov
mov
cmc
shr
cmpsb
repnz
mov
daa
pusha
or
aaa
test
and
scas
shll
sbb
inc
lock
rclb
out
leave
std
push
pop
enter
mov
pop
lcall
sarl
dec
pop
xlat
inc
and
xchg
mov
push
lods
push
mov
popa
lret
sub
add
push
sub
pop
pop
push
and
xlat
adc
stc
sub
and
js
mov
orl
cmpsb
addb
movsb
jmpw
cmp
cld
ror
leave
adc
ret
add
or
xchg
scas
hlt
jmp
adc
dec
mov
mov
xorl
jbe
push
mov
dec
jns
lock
les
call
test
mov
mov
mov
std
push
in
xor
test
sarl
or
mov
fcmovnb
inc
fdiv
jmp
pop
xchg
fldcw
and
mov
jmp
jb
insl
sti
lcall
mov
aad
imul
cmp
insl
into
or
push
push
rorb
rorl
sbb
pop
jp
fnstenv
push
push
jmp
sbb
push
fwait
lcall
add
out
push
pop
cmp
movsb
sbb
ret
scas
dec
test
cmp
mov
mov
mov
inc
scas
sarb
fimuls
jl
in
and
sbb
or
bound
std
cmp
shrl
ljmp
inc
push
adc
int3
mov
xlat
and
xor
pushf
dec
dec
fcmovnbe
out
inc
cmp
lea
adc
daa
lods
cmp
lret
lret
repz
das
ret
mov
sbb
lds
cmpsb
arpl
xor
push
leave
test
push
sbb
aas
dec
or
loop
mov
push
js
mov
mov
hlt
xor
mov
cwtl
mov
ret
add
popf
scas
push
int3
cmp
inc
mov
iret
das
es
push
rcll
in
and
loop
mov
shrb
cs
mov
jne
out
lods
push
sbb
jne
and
jne
jge
aas
xorb
popf
fisttps
inc
dec
pop
clc
jbe
push
jmp
mov
add
push
lds
into
cmc
fstps
iret
push
inc
cmp
xchg
int
aaa
cwtl
dec
push
jnp
mov
mov
pusha
rol
jb
jo
mov
shll
mov
mov
mov
pop
sub
xor
dec
sbb
pop
pushl
cmpsl
sbb
loopne
dec
push
movsl
js
lds
das
lret
push
andb
pop
bound
cmp
lret
inc
shrb
xor
and
jmp
cmp
dec
sarl
sub
xchg
pushf
push
jb
ljmp
mov
daa
mov
les
cmpsl
xlat
cmp
mov
ss
cmp
pop
in
ljmp
mov
xor
push
adc
xchg
enter
xchg
push
mov
imul
mov
dec
inc
push
mov
shlb
jo
stos
fadds
fsubl
add
repz
pushf
test
inc
ljmp
bound
mov
data16
in
mov
mov
add
sahf
sbb
lock
mov
and
or
ds
scas
add
or
and
xlat
cmp
mov
daa
adc
insb
lods
into
pushf
pop
xchg
fsubl
cltd
dec
push
jle
loopne
arpl
push
or
out
insl
add
data16
mov
jo
and
jge
mov
adc
cmpsl
inc
lea
hlt
es
jo
fmull
lods
cmpsl
sbb
push
cs
xor
fildll
sbb
cmpsb
cmpsb
push
sbb
and
jl
lock
inc
mov
jns
fildll
push
pop
rcrl
jns
jp
push
faddp
out
dec
repnz
orb
sbbb
mov
bound
aas
insb
jmp
jle
ljmp
and
iret
orl
enter
daa
xchg
stos
lahf
scas
pop
and
jp
inc
push
decb
xor
fisttps
jecxz
mov
fwait
scas
mov
or
ja
popf
cwtl
mov
test
insl
cltd
pop
in
mov
xchg
movsl
je
jge
xor
leave
pusha
xchg
cmp
dec
or
dec
mov
jno
sub
jl
adc
loope
jle
pop
jmp
mov
test
leave
sub
test
dec
xchg
mov
pop
push
dec
cmp
cmc
fmul
jmp
push
sbb
xchg
xor
adc
aas
ljmp
loop
inc
xchg
movsl
out
les
dec
mov
inc
xchg
inc
fstl
pushf
xchg
int3
adc
jl
mov
cwtl
mov
push
push
pusha
add
idiv
jmp
mov
xchg
mov
fcompl
scas
popf
invd
add
ret
sbb
ljmp
scas
test
inc
pop
insb
pop
ret
jecxz
inc
iret
fsubrl
push
jmp
pop
or
mov
or
es
or
fwait
scas
or
or
fcoml
clc
add
psubusw
sti
clc
shl
or
inc
mov
cli
jae
adc
or
lods
xchg
cltd
es
out
jns
sbb
jmp
dec
sahf
xchg
pop
sub
fldl
adc
cmp
jl
xorb
push
jnp
jg
xor
popf
fcmovnb
add
popa
push
lcall
pop
outsl
mov
data16
jp
and
cmc
push
dec
fdivs
mov
mov
sbb
push
push
push
rcr
test
jge
ds
outsl
rorl
movsl
dec
and
nop
mov
mov
sbb
cmp
andb
lods
mov
lock
lds
movsl
pushf
mov
sub
and
sub
cs
sahf
or
psrld
cmp
push
jge
incl
out
add
dec
sar
jb
mov
sub
sbb
incl
sbb
push
dec
cmpsb
outsl
cltd
lahf
out
scas
dec
mov
mov
jae
lahf
jecxz
in
xchg
xchg
bound
push
inc
xchg
jo
push
sbb
push
leave
mov
push
xor
adc
sarb
incl
jecxz
push
cmp
mov
mov
sub
in
lods
mov
add
push
push
mov
ss
rolb
aad
mov
xor
movsb
orl
lock
out
lcall
rorl
fld
mov
or
mov
or
mov
or
mov
adcl
xchg
call
or
std
out
mov
xor
fbld
or
sarl
scas
fs
das
inc
fstl
cltd
dec
mov
jo
and
cmp
add
dec
xor
xchg
sub
arpl
pop
xchg
jle
or
bound
lret
xchg
xor
xchg
repz
cmpsb
inc
adc
mov
in
pop
pop
jge
and
mov
addr16
sub
lahf
int3
jo
nop
push
stc
in
test
mov
ljmp
push
jno
int3
xchg
shl
xor
fmuls
sbb
inc
pop
test
scas
pop
lret
mov
into
fdiv
cmp
push
fcmovbe
inc
popf
outsb
inc
xchg
xor
pop
adc
inc
push
pop
mov
mov
adc
addr16
cmp
jb
push
repnz
js
addb
inc
dec
cmp
lahf
push
shll
fs
hlt
mov
push
shl
lcall
mov
mov
icebp
mov
cmc
xchg
jne
mov
add
popa
mov
cmp
push
inc
enter
mov
iret
pop
fists
add
sbb
lret
and
xorb
ds
jbe
add
dec
cmp
les
adc
mov
inc
pop
mov
jg,pn
rcr
or
ret
push
cmpsb
add
inc
cltd
xor
cmp
cmp
arpl
jmp
sbb
add
or
push
movsl
jne
lock
inc
lea
pop
mov
push
or
adc
jb
mov
lods
jnp
rorb
push
mov
stc
or
dec
daa
or
cld
mov
sub
and
jmp
fadds
sbb
xchg
adcl
lock
add
and
dec
pop
xchg
loop
sub
xchg
mov
lods
popa
pop
xor
mov
push
aas
fdivl
sbb
in
jmp
add
pop
repnz
es
pop
or
sbb
inc
scas
adc
xor
jno
and
in
mov
and
rcll
out
and
cmp
add
in
shll
inc
dec
leave
sub
shlb
cmc
int3
fucomip
sub
dec
jae
push
call
cmc
test
dec
push
ds
ret
icebp
or
aas
and
and
test
es
in
pop
sbb
fcompl
lahf
xorb
adc
lock
divl
aas
push
stos
mov
testl
fwait
icebp
pmaxub
addr16
dec
dec
mov
shll
push
testb
adc
icebp
sbb
jge
inc
mov
dec
dec
mov
add
test
decb
cwtl
pop
cmp
sub
dec
inc
hlt
loope
pop
cmpsl
sbb
loop
fimuls
xchg
fwait
outsb
rcl
fdiv
pop
loope
push
xchg
fildll
push
mov
dec
icebp
mov
fistps
adc
fisubs
mov
mov
dec
or
lods
rorb
pop
stos
call
hlt
cmp
test
and
or
inc
daa
sbb
mov
scas
xor
popa
data16
jno
jle
leave
mov
fldt
test
andb
fcoms
pop
fcmovnu
stos
scas
dec
gs
pop
sbbl
sbb
icebp
popa
repz
das
dec
imul
stos
push
leave
fidivrs
outsl
or
adc
cmp
roll
lret
cmp
add
jg
lret
jecxz
rorl
push
pop
sub
mov
fimuls
jl
xor
or
addr16
mov
movsl
sbb
mov
lret
sbb
or
inc
xchg
sub
insb
fwait
mov
or
push
mov
les
push
test
xchg
mov
pop
cmp
out
aad
movd
popa
pop
js
popa
ds
add
popf
mov
movb
movb
mov
andl
jmp
dec
mov
aaa
es
mov
push
test
invd
add
jns
jl
jp
scas
mov
insb
pop
add
lret
sahf
movsb
sub
sbb
std
push
fstl
mov
pop
sbb
add
ja
aas
and
jbe
mov
cmp
mov
jmp
sbb
add
mov
leave
xchg
ret
mov
mov
dec
clc
in
cmp
dec
outsl
inc
out
jmp
inc
test
pop
push
mov
jno
or
mov
testl
push
jb
pop
xchg
lret
scas
lcall
mov
in
popf
fdivrs
and
jmp
cwtl
scas
xchg
or
fs
adc
mov
mov
leave
mov
sub
sahf
sbb
arpl
jp
mov
inc
cmp
jl
jae
and
sub
sahf
mov
enter
imul
bound
sbb
and
jno
leave
ss
inc
scas
out
fnop
mov
pop
and
insb
jg
jae
xor
incb
and
mov
lods
dec
es
inc
shll
push
call
cmp
dec
or
jmp
cwtl
out
addr16
lret
cmp
mov
pop
add
imul
clc
lods
sub
xor
enter
iret
in
lea
outsl
imul
pop
adc
xlat
leave
mov
xchg
ds
and
jnp
jae
rorl
fidivrl
inc
out
dec
xor
les
jb
std
fidivl
pop
xchg
push
std
sub
xchg
jp
lock
sub
inc
cltd
repz
jb
xchg
xlat
pop
or
idiv
je,pn
sahf
sub
or
data16
sbb
mov
adc
push
test
fbstp
in
jb
imul
push
outsb
std
fcmove
or
ljmp
jge
add
nop
inc
push
dec
divl
cli
leave
cwtl
inc
repnz
fs
xor
dec
or
xor
pop
loope
hlt
daa
jg
fucomip
outsl
repz
psubsw
mov
pop
jns
cmp
out
mov
jl
mov
mov
lret
dec
or
loope
dec
pop
movsb
mov
movsl
xor
and
mov
ret
inc
andl
push
sub
jge
rcll
idiv
leave
mul
cmp
push
ja
aam
inc
sarl
pushl
cmpsl
xchg
xlat
inc
loope
push
or
sub
inc
daa
lcall
sub
in
clc
cmp
jecxz
push
mov
decl
cmp
cltd
xor
orl
shrb
cmp
cltd
lds
nop
stos
and
xor
repnz
pop
push
sbb
xor
ds
test
mov
jbe
xor
sub
mov
adc
mov
sub
imul
push
mov
xchg
pop
and
xchg
insl
sub
sbb
xchg
mov
mov
je
pusha
sub
sbb
sub
lmsw
xchg
lea
cmp
fsubs
rol
or
jno
ljmp
push
cmpsb
push
int3
xchg
xchg
aad
stos
push
xor
adc
dec
sub
push
sub
inc
mov
inc
rcl
das
fiadds
adc
push
leave
jbe
dec
mov
or
mov
rcrb
push
xlat
icebp
fs
xor
add
jecxz
pop
adc
xor
adc
mov
loop
or
stos
add
push
and
mov
sbb
mov
mov
inc
aad
leave
pop
sbb
or
mov
rorb
cmp
lret
mov
mov
sub
fistl
mov
lea
push
jo
popl
adc
inc
jne
jl
or
mov
and
loopne
mov
mov
repz
nop
sub
call
std
iret
arpl
add
test
xor
xchg
movsl
inc
inc
ja
mov
sbb
xchg
dec
test
loope
inc
fwait
adc
lock
mov
adc
pop
mov
mov
test
dec
lods
imul
cltd
pusha
mov
adc
cmp
inc
mov
fiaddl
pop
aas
pop
pusha
popl
and
xchg
mov
subb
fcompl
loop
dec
and
lods
mov
lcall
sub
xchg
sub
cld
mov
push
mov
cwtl
out
or
out
loop
into
pop
test
xor
and
jbe
icebp
sub
lds
add
jmp
int3
js
in
push
jb
punpckhbw
dec
jno
ror
dec
xor
adc
movsb
xchg
xor
mov
sub
push
fisubrs
cmp
aam
ret
fwait
mov
sbb
or
sti
lcall
lods
outsb
jae
fcoms
sbb
mov
push
pop
scas
popf
fidivrl
cli
or
adc
iret
pop
dec
enter
fsubp
cld
sub
lahf
das
sbb
xor
lock
loope
jmp
jge
fwait
pop
add
cmp
add
adc
stos
dec
inc
adc
jl
repnz
orb
cmp
mov
dec
cmp
ljmpw
imul
adc
les
and
jae
test
mov
popf
push
jg
pushf
mov
leave
xor
out
sub
or
test
jle
lret
imul
mov
or
pop
aas
xor
out
mov
pop
fwait
xor
or
push
xor
nop
add
addl
xor
pop
cmp
push
add
fwait
lahf
in
mov
lret
xor
fdivl
sbb
dec
adc
dec
icebp
orl
add
movzbl
movzbl
orl
jmp
insb
lods
push
repz
je
xor
or
sub
invd
add
movaps
push
xchg
test
movsl
mov
sub
mov
adcl
mov
inc
cmp
into
cmpb
mov
push
cmp
xchg
lret
cltd
movsb
xor
dec
scas
fcomip
loop
rcrb
insl
xchg
data16
sbb
sbb
sbb
sub
fiaddl
es
adc
cmp
mov
dec
rorb
sbb
filds
ds
mov
jge
imul
dec
gs
loope
fsub
push
mov
xchg
mov
cmp
cmp
repz
inc
call
fcompl
jbe
mov
out
jnp
inc
sub
sbb
inc
jmp
stos
dec
ss
sub
shll
dec
jno
cmp
dec
out
mov
aas
xchg
in
sbb
daa
dec
scas
jl
pop
inc
mov
push
out
mov
xchg
dec
arpl
cmp
and
mov
sbb
adc
pushf
in
mov
aas
mov
cwtl
cmpsb
insl
sbb
pop
test
or
in
repnz
lods
fnstsw
fnstcw
or
fadds
out
mov
push
sbb
inc
xchg
fs
add
push
push
jns
sbb
adc
inc
test
lds
push
xlat
imul
xchg
fsub
jmp
sbb
inc
xchg
cs
inc
in
movsb
mov
mov
outsb
orb
sub
cmp
inc
cmp
push
fsts
mov
jnp
xchg
hlt
in
pop
push
imul
lret
cs
jp
sub
out
mov
cmp
sbb
push
lods
lea
icebp
neg
cmp
out
jmp
and
adc
outsl
push
fimull
sbbb
sbb
out
lahf
cwtl
js
dec
mov
sbb
xor
fmuls
rcrl
testb
ljmp
shrb
cmpsb
xchg
into
mov
mov
test
add
lcall
ljmp
int3
pop
stc
push
jl
xchg
jb
xchg
xor
mov
add
xor
pop
jbe
inc
and
les
scas
jp
lret
ljmp
push
stc
dec
cld
aam
or
cltd
cmp
dec
inc
stc
out
cmp
add
xlat
lock
mov
lcall
sbb
mov
iret
sbb
cli
mov
fiadds
push
push
mov
push
mov
jbe
xor
int3
aas
clc
lret
dec
sub
inc
mov
mov
repnz
popa
and
adc
in
or
scas
cmc
stos
loop
shlb
divb
fdivl
cli
iret
sub
negb
inc
xor
addl
add
add
pop
gs
cmp
std
ret
in
out
repz
lret
push
jnp
mov
xchg
jl
mov
xchg
jns
dec
xor
inc
jmp
arpl
icebp
xor
sti
jno
cltd
adc
jecxz
mov
add
insb
xor
jnp
cld
push
fldl
or
xor
ficompl
and
notl
adc
mov
add
les
mov
dec
jmp
xor
push
mov
incb
shrb
out
test
pop
push
lds
push
xor
dec
jecxz
push
int
push
cmc
notb
aam
in
loopne
pop
cmpsb
shrl
insb
ret
xchg
imul
outsl
test
test
push
andb
cmp
xor
add
mov
test
dec
pop
sbb
testb
in
fldl
test
std
xchg
jp
mov
push
lcall
dec
stc
aaa
in
add
jle
aam
aas
outsb
dec
cmp
out
lods
lds
filds
adc
std
popl
pop
xorb
push
aas
fbstp
jl
pop
repz
ret
fsubrs
inc
je
pop
mov
and
mov
icebp
cltd
jle
adc
fwait
test
ds
shl
and
je
lock
mov
jge
xor
dec
nop
int
std
push
push
push
mov
aas
movsb
in
jp
dec
pusha
lods
inc
repnz
inc
sbb
sti
add
cmc
adc
test
xor
dec
mov
inc
fldcw
dec
or
xor
testl
mov
mov
movsb
sub
mov
push
lds
sbb
mov
adc
adcb
in
sub
repz
mov
mov
xchg
aam
pop
xor
push
xchg
stos
arpl
stos
jg
lea
popa
into
cltd
outsb
sbb
aad
fisubl
lock
mov
imul
inc
dec
stos
sub
leave
mov
lds
jg
stos
arpl
sti
and
dec
mov
arpl
and
xchg
xchg
shrb
ljmp
das
xor
rcll
jmp
lahf
orl
aaa
mov
repz
cltd
sub
pop
jle
mov
repz
adc
jns
sarb
xchg
data16
psllq
inc
adc
sbb
dec
jle
outsl
jne
test
pop
add
out
pop
cwtl
stc
insb
fadds
es
ret
adc
stos
stos
imul
loop
or
in
cmp
shlb
xchg
or
idivl
je
xor
jp
fidivrs
mov
in
jg
cmpsl
cmp
sbb
call
adc
leave
fs
xchg
pusha
xor
out
frstor
push
sti
cmp
in
out
sbb
mov
xor
or
out
add
daa
mov
adc
testl
sub
fldcw
adc
fidivs
mov
mov
mov
mov
mov
and
inc
in
hlt
aas
insl
or
jo
arpl
pop
sti
mov
mov
xchg
inc
inc
add
add
idiv
movl
mov
movl
cmp
movl
jmp
fidivl
push
or
fmuls
mov
mov
add
add
add
add
out
test
aad
adc
scas
clc
and
rol
into
das
mov
inc
xchg
int3
fsubs
sbb
mov
stos
dec
jne
imul
out
pop
add
sti
push
stos
insb
out
ljmp
fisubrs
mov
stos
test
scas
xchg
xchg
movsl
jge
and
pop
or
jo
nop
ljmp
insl
scas
mov
and
dec
jne
dec
inc
stos
or
fstpt
jb
fldenv
mov
stos
jmp
lock
ret
mull
inc
jnp
incb
lret
adcb
mov
popa
cmp
pusha
adc
jbe
push
sub
pop
fpatan
adc
leave
mov
mov
mov
stos
inc
pop
clc
movsl
sti
cmpsb
sti
xchg
in
call
xor
add
dec
xchg
ds
cwtl
push
push
mov
hlt
mov
cmp
push
cmp
mov
push
ja
pop
test
cs
mov
fisubrs
inc
fists
lcall
and
add
sbb
lods
and
stos
movsl
lret
imul
ficomps
nop
mov
adc
loopne
jnp
fcomip
dec
push
dec
stc
xor
jae
ficoms
fwait
cmpb
hlt
hlt
adc
sbb
call
aaa
mov
loope
pop
adc
sbb
imul
stos
jle
xor
jp
lods
addr16
xchg
mov
enter
repz
xor
hlt
andl
add
fsubr
enter
ret
out
shlb
scas
pop
shlb
pop
cmp
mov
push
rcll
or
outsl
ret
jno
js
xchg
mov
pop
lahf
or
sbb
lret
adc
int3
nop
sarl
push
sahf
push
in
sub
hlt
lea
xchg
pop
xchg
mov
shlb
cmc
pop
cli
jmp
pop
mov
cmp
cmpsl
lahf
xchg
sub
pop
xor
sub
fldl
mov
cmpsb
push
movsb
or
sahf
pop
jne
jnp
dec
gs
jge
push
mov
pop
mov
add
insl
xor
lahf
mov
sahf
test
xor
test
pusha
mov
fiaddl
out
push
stos
test
cmpsl
cwtl
andb
cli
cmpsb
xchg
mov
cmpsb
push
mov
loop
mov
and
mov
lea
push
inc
mov
in
or
cmpsb
lock
fs
mov
fsubs
inc
add
push
shrl
arpl
inc
inc
xchg
ja
mov
ficoml
rorb
addr16
and
push
inc
xlat
push
fincstp
ljmp
mov
loope
out
adc
mov
sub
out
and
mov
enter
cmp
or
sub
push
sbbb
jnp
mov
mov
jne
mov
jae
addr16
sbb
test
outsb
inc
bound
xor
ja
mov
pop
pusha
lret
ss
imul
jno
or
xchg
sbb
movsl
rcpps
das
adc
push
sub
aaa
call
outsl
jg
push
cmpsb
or
mov
out
mov
mov
out
aad
mov
sbb
loope
popl
cmp
fstps
inc
lods
in
aaa
cmp
cli
imulb
mov
lods
mov
mov
mov
inc
sti
rcll
int
ret
mov
fcoml
stos
sbb
lahf
imul
push
sbb
movsb
ret
mov
cmpsb
inc
movsb
jle
xchg
mov
dec
xorb
mov
std
clc
sub
sbbl
or
xor
lret
jle
test
shlb
xor
cmp
adc
dec
lea
pop
leave
xchg
dec
mov
out
test
fs
loop
leave
add
int3
lock
push
xchg
dec
mov
fdivrl
andb
sbb
and
add
jne
pop
mov
rcl
addr16
dec
and
jp
adc
outsl
ds
es
cmp
rcll
mov
sub
lcall
jo
dec
xor
mov
mov
cmp
and
inc
pop
es
jnp
fwait
dec
mov
push
insl
pop
mov
jecxz
imull
jbe
inc
sub
sub
pop
daa
sub
jge
out
imul
fcmovb
push
in
add
icebp
add
imul
aam
or
addb
xchg
push
push
shll
in
rcrl
jg
sub
sti
icebp
lcall
inc
xchg
push
ss
jmp
xchg
int3
call
push
xchg
sbbb
adc
ror
stos
cmp
xchg
negl
inc
icebp
push
mov
fwait
mov
cmp
in
pop
addb
das
cwtl
jg
movsl
mov
sbb
fs
das
sub
fs
adc
mov
int3
mov
pop
fcoml
sub
mov
xorb
outsl
dec
pop
and
adc
push
in
sbb
mov
mov
je
loop
rorl
mov
fwait
in
inc
in
scas
xor
je
cld
dec
sub
outsb
mov
cwtl
out
or
mov
add
push
ds
adc
cmpb
fiadds
xchg
adc
es
clc
xchg
or
int
inc
jp
insb
divl
inc
rcrb
lret
sbb
or
jmp
cmpsl
jp
das
push
mov
and
movsl
jne
xchg
or
lahf
clc
ret
xchg
inc
push
lock
jmp
lods
inc
jp
mov
out
imul
push
scas
loope
into
loope
out
inc
cltd
mov
test
popf
mov
icebp
adc
and
lods
out
adc
aam
jae
mov
loopne
jbe
test
or
xchg
negl
repnz
jmp
jae
xor
movl
cmpl
jb
mov
sbb
jmp
push
call
movl
mov
mov
push
push
adcl
push
push
andl
call
xor
xorl
xor
orl
or
or
movl
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
dec
and
xchg
sub
push
mov
iret
imul
mov
shrb
sub
cmpl
pop
pusha
cmp
add
rol
js
out
call
fcompl
sbb
pop
in
popa
fildll
ss
hlt
jg
sbb
mov
and
cmp
mov
inc
cld
xchg
jle
jmp
lret
sub
sub
daa
and
push
xchg
ja
or
xchg
push
icebp
loop
fnstcw
int
and
out
push
repnz
inc
push
insl
loopne
mov
dec
sub
xchg
push
addb
push
repz
jo
xor
adc
add
cmp
movsl
or
xor
jae
aaa
xor
rolb
push
xchg
jmp
out
mov
leave
or
pop
jo
pusha
xor
or
out
sub
mov
repnz
inc
aad
mov
dec
in
push
out
test
pop
ss
jb
inc
arpl
mov
movsl
lock
fcoms
jb
lret
sub
nop
cli
out
adcl
push
jl
and
sbb
out
inc
test
dec
imul
mov
xor
and
add
adc
nop
xorl
mov
pop
sbb
rorl
icebp
jmp
push
es
loopne
nop
sbb
bound
shll
cmp
dec
js
inc
sub
in
lods
adc
or
push
push
daa
push
or
outsb
lahf
mov
les
insl
jecxz
or
adc
das
push
out
xor
mov
pop
pop
loope
imul
sbb
out
movsl
mov
psllw
mov
pushf
lods
sahf
popf
fs
movsb
add
adc
sbb
sahf
je
sub
rorb
inc
gs
sub
test
inc
frstor
lock
stos
fwait
inc
rcr
push
mov
jge
xor
lods
pop
sub
dec
jecxz
cmp
fucomip
sbb
push
jle
adc
adc
jge
jg
out
jnp
or
sbb
test
push
xor
jge
dec
mov
cs
loop
add
notl
adc
mov
stc
lret
and
xor
mov
mov
mov
jecxz
mov
clc
inc
mov
mov
mov
cmc
mov
nop
scas
fadds
push
xchg
push
sbb
in
adc
and
jl
mov
jg
pop
imul
sbb
and
inc
in
pop
test
test
or
sarl
fnop
cld
jo
inc
cs
repnz
jle
jbe
enter
push
in
dec
fdivs
mov
incl
or
dec
test
cmp
lret
mov
xor
cmp
sbb
xor
jne
shrl
jae
sub
mov
scas
xor
mov
add
and
out
lock
lods
dec
movsl
loope,pn
neg
mov
lds
add
xor
imul
push
sahf
cmp
daa
repnz
and
inc
cmpsb
and
lcall
sbb
cmp
push
popf
movups
cmpl
shlb
sbb
push
jns
out
jmp
lds
lods
cs
in
push
sti
xchg
push
jo
mov
jle
inc
xlat
stc
inc
adc
add
adc
sbb
jp
pop
lods
popf
xchg
push
or
push
dec
orb
data16
rcrl
repnz
xor
cmpsb
fists
jecxz
lea
lret
push
adc
out
sub
loopne
mov
xlat
jl
push
in
iret
lret
sub
mov
pushf
ficoms
lods
inc
fidivl
js
push
loop
clc
mov
add
imul
adc
sbb
packsswb
gs
outsl
jbe
xor
sbbb
fimuls
imul
orb
stos
mov
lods
nopl
add
sbb
or
fisubrl
and
test
call
test
pop
scas
sar
into
rorb
mov
in
sarl
push
out
xchg
data16
aas
lods
imul
ficompl
mov
xorl
mov
popf
out
dec
aad
adc
int3
push
pusha
mov
sbb
int
inc
add
repz
outsl
jns
pop
imul
xchg
call
mov
xlat
arpl
leave
sbb
lods
mov
mov
cltd
data16
push
xchg
adc
mov
ret
jmp
std
jb
xchg
mov
stos
lea
pushf
inc
fwait
rolb
cld
xor
ja
and
rcll
push
and
sub
sti
dec
dec
ficoml
sbb
repz
pop
sbb
jle
push
or
mov
inc
mov
in
rcrl
push
push
cmpsl
sub
push
jno
add
imul
jmp
push
xor
mov
hlt
mov
and
enter
in
sub
sbbl
jle
and
jge
in
fstps
sbb
jae
pop
jbe
pop
add
aam
pop
sbb
inc
hlt
ja
sub
mov
sbb
add
pop
cmc
mov
gs
lods
arpl
xor
mov
std
mov
jecxz
cmp
pushf
movsb
xlat
cmp
dec
lock
inc
inc
int3
aam
xchg
xor
push
mov
adc
mov
mov
mov
cmp
cld
hlt
sbb
popa
cmp
pop
xchg
cmp
or
jge
jge
mov
push
dec
xlat
jl
mov
cmpb
into
adc
mov
or
int3
mov
insb
movsb
inc
pop
xchg
sbbl
adc
das
xor
sahf
pop
loop
repz
adc
or
iret
dec
bound
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
jmp
jb
ffreep
push
aad
push
dec
mov
or
mov
invd
add
jg
or
cld
mov
sbb
out
jnp
and
lods
jb
pop
ljmp
and
test
repnz
inc
sbb
xor
pop
out
pop
enter
outsb
add
lahf
rorl
aas
or
scas
jno
insl
je
xchg
adc
sti
stos
add
pop
dec
pop
mov
push
je
pop
xchg
mov
lea
sbb
lret
sbb
fistpll
inc
ficompl
scas
scas
ds
shlb
test
xchg
arpl
dec
ja
mov
cmp
repz
pop
push
pop
push
xor
mov
pop
lcall
pop
xchg
outsb
rcrb
sub
add
inc
lahf
pop
xor
or
inc
es
imul
mov
add
pop
cmc
int3
push
sbb
jae
ror
aaa
popl
pop
js
and
aaa
jmp
push
inc
lods
inc
outsb
inc
fildl
in
sub
pop
sub
xchg
cmp
fwait
enter
out
mov
movsb
cmp
aaa
dec
xorl
inc
rorl
add
out
sbb
push
gs
ja
xchg
jbe
cmpsl
rcrl
xchg
fptan
and
out
cmp
sub
out
movsb
stos
xchg
sub
shlb
or
mov
mov
and
aam
lret
mov
stos
movsl
fiaddl
pop
xchg
add
daa
dec
inc
or
popa
daa
mov
pop
and
xchg
mov
movsl
jecxz
sbb
sub
popf
std
daa
and
into
aas
dec
sbb
push
ja
fsubrl
push
pop
or
or
jnp
insl
addl
dec
and
or
sbb
pop
adc
jbe
xor
push
cltd
js
lret
cmp
push
gs
adc
out
jb
pop
dec
jmp
orl
insb
mov
or
inc
int3
out
fadd
xchg
in
push
outsb
or
pushf
and
mov
mov
pop
pop
mov
adc
stos
leave
mov
jmp
adc
and
sub
mov
leave
dec
mov
push
jp
add
and
mov
sub
fdivrl
int3
out
cmp
inc
aaa
imul
pop
push
enter
or
dec
push
and
lahf
or
mov
gs
data16
mov
jecxz
mov
aaa
adc
dec
or
pop
xor
fnstenv
xchg
int
cmp
xchg
adc
fisttpl
stos
sub
aaa
loop
push
add
fcompl
push
iret
cwtl
jno
mov
or
nop
and
xor
add
fidivrs
add
push
jb
cmp
lcall
jo
inc
ret
out
lods
sbb
inc
inc
mov
sbb
inc
paddusw
mov
cwtl
mov
in
fcomps
shlb
rclb
cmp
sbb
pop
jb
aad
and
dec
inc
movsb
addr16
in
mov
sbb
pop
popl
lret
aas
xchg
cmc
outsl
xchg
inc
or
jp
icebp
movsb
and
xchg
out
inc
pop
or
lods
hlt
jb
idivl
adc
xchg
fs
push
fimuls
aas
push
jp
adc
mov
xchg
in
loop
mov
dec
fcomp
add
jns
push
cwtl
sbb
bswap
out
or
add
push
pushf
sub
pop
mov
cli
and
dec
jo
repnz
popf
mov
push
sbb
popl
lea
and
enter
cltd
call
xor
test
daa
imull
stos
pop
mov
add
add
sub
jge
repnz
fisubrl
mov
or
cmp
sub
idivl
mov
cmpl
sub
pop
sub
mov
lret
mov
inc
lea
adc
lea
sbb
or
in
das
movsl
xor
mov
inc
add
push
into
shl
and
jae
push
aaa
sti
rolb
mov
ret
out
rclb
divl
jle
test
jecxz
xchg
mov
push
jecxz
add
test
sbb
adc
aad
and
stos
pushf
lahf
xchg
test
sbb
je
xor
push
push
sbb
out
ret
push
pop
call
in
scas
cmpl
dec
cmpsl
loope
mov
push
sub
and
insl
mov
jge
pop
xchg
pop
xlat
std
mov
dec
bound
push
stos
aaa
pop
mov
pop
jns
pop
sub
push
add
shll
fisubs
fistl
cmc
enter
vcomiss
sbb
and
cwtl
pusha
rolb
dec
lds
jp
cld
daa
ja
pop
mov
xchg
push
loopne
test
pop
imul
sbb
cmpsb
scas
push
adc
fucomip
or
fucomi
adcl
loope
xor
cmpsb
mov
mov
pop
xor
and
test
aam
subb
mov
lret
sbb
shlb
inc
push
mov
mov
add
stos
adc
sub
leave
fucomip
jge
mov
mov
dec
push
and
xchg
in
push
jnp
push
gs
or
out
jge
clc
push
ret
cmc
dec
pop
xchg
mov
mov
and
push
push
loopne
in
sub
and
xchg
nop
push
je
ds
jne
pop
into
inc
mov
fdivrs
ds
sti
addl
fs
fisubs
jle
adc
adc
das
sbb
mov
jmp
xchg
adcl
push
leave
sahf
xchg
dec
mov
mov
sub
mov
inc
sar
idiv
jmp
pusha
lahf
aas
sti
aas
pop
or
ss
lret
mov
dec
fisttps
invd
add
maskmovq
notl
loopne
or
mov
pop
addl
jmp
and
pop
pop
adc
add
inc
mov
inc
mov
dec
xchg
mov
sub
sbb
shll
hlt
sar
pop
mov
jecxz
rorl
or
cmp
hlt
dec
lcall
cmp
sbb
pop
xchg
and
adc
cmp
out
mov
gs
cmp
dec
inc
inc
pusha
jns
movsb
sbb
addr16
nop
dec
mov
push
in
mov
pop
int3
xor
mov
mov
insl
lret
sub
add
push
lods
outsl
popf
pop
jecxz,pn
sarb
stc
fucom
imul
xor
mov
mov
ds
pop
cmp
pushf
sbb
sub
pop
shlb
aas
cltd
mov
in
sbb
inc
data16
cmpsb
mov
sbb
sbb
stos
movsl
ja
fiaddl
outsb
lcall
pop
jecxz
add
es
cmpl
fwait
in
cmp
and
cmpsl
inc
sub
cmpsl
stc
sti
jbe
jb
data16
roll
mull
add
sub
sahf
negb
fisubs
dec
aaa
pushf
leave
adc
add
fildl
clc
fs
push
ret
xor
push
add
popf
pop
fwait
inc
cltd
xchg
cmp
mov
jns
inc
rcrl
rcr
mov
mov
addb
pushf
popa
bound
pminsw
push
adc
add
popa
jbe
fistpl
insb
lods
test
pop
adcb
cltd
push
mov
das
sbb
lret
add
lea
testl
stos
sbb
mov
je
cmp
jae
cmc
loopne
add
int3
pop
cmp
orb
jne
dec
std
cmp
mov
inc
mov
stos
jnp
pop
bound
bound
cmpl
jno
js
sub
pop
shlb
popf
enter
std
xchg
lret
test
cltd
push
jg
xor
jp
stos
out
pop
ja
adc
popf
push
fs
and
mov
push
lods
test
push
sahf
leave
div
xor
adc
int3
mov
ljmp
scas
mov
mov
or
mov
push
and
xchg
mov
push
stos
jno
sarl
gs
jb
ja
cmp
das
jmp
stos
and
mov
adc
mov
jno
xchg
or
fiadds
and
hlt
mov
insb
call
xchg
push
or
dec
dec
xchg
mov
mov
cmpsb
xor
mov
pushf
pcmpeqd
xchg
push
bnd
inc
ret
or
repz
popa
insl
pop
stos
popf
dec
cmc
das
data16
lds
push
sub
lahf
mov
push
outsb
gs
lea
push
mov
xchg
jae
push
ja
mov
xlat
add
jmp
daa
adc
jmp
adc
fisttps
jno
push
mov
imul
popa
jl
rcrb
xchg
imul
ja
mov
xchg
push
mov
cmp
dec
xor
and
cli
cmpsl
dec
push
and
inc
sbb
repz
les
not
arpl
mov
aas
out
xchg
mov
cld
aaa
pop
fisubrs
fs
sbb
int3
int
push
rcll
dec
fistpll
lret
sub
cmp
push
add
jle
scas
lods
dec
dec
xor
sbb
hlt
cmpsb
call
sbb
inc
lret
adcb
mov
icebp
dec
or
inc
push
dec
push
gs
in
sub
cmp
shll
jnp
or
test
ret
adc
cmp
jae
mov
fcoms
dec
xchg
jo
cmpsl
jnp
inc
sub
cmp
cmpl
je
clc
jbe,pn
xchg
pushf
std
add
stc
add
cmp
cmp
jp
test
das
clc
mov
shrb
dec
or
inc
adc
and
pop
out
out
sarb
sub
hlt
sti
divb
sub
out
pop
mov
lahf
adc
sbb
test
jbe
xor
mov
mov
mov
lret
dec
fdivp
int3
mov
jbe
mov
mov
pusha
mov
sbb
or
xchg
add
mov
pop
cli
xchg
jmp
adc
dec
xchg
mov
inc
pop
pusha
jl
dec
add
xor
roll
rcr
mov
sarl
lret
lret
out
mov
loop
outsl
add
or
mov
cmp
mov
pop
loop
movl
cmp
out
pop
addl
dec
dec
push
add
and
push
pop
add
inc
mov
inc
fadds
in
in
sbb
sbb
cmp
ss
adc
aas
add
cmpsl
jmp
or
and
into
fs
ds
and
aas
push
enter
imul
jmp
mov
mov
cmovno
xchg
enter
xor
cmp
nop
sbb
pop
movsl
adc
or
lock
xor
aas
leave
sbb
adc
dec
rcrl
mov
or
out
fprem1
xor
negl
scas
mov
rclb
cmc
and
lahf
fdivrp
aaa
jne
or
in
xorb
js
jge
inc
adc
lahf
mov
xor
pop
sar
xorl
mov
sub
rcll
mov
add
or
inc
rorb
inc
sarb
lds
cmp
jl
sub
loopne
lcall
sbb
sbb
jmp
cmpsb
mov
hlt
push
xor
std
xor
bound
sub
in
sub
stc
mov
dec
jo
mov
pop
aaa
js
lds
je
cmp
lret
cmpsb
and
dec
cmpsb
or
repz
dec
into
jns
fwait
jg
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
jmp
xor
xor
or
fcoms
invd
add
clts
xor
ficoms
ret
pop
shlb
and
adc
rorb
mov
xor
pop
outsb
nop
leave
pusha
cmp
adc
shl
mov
jecxz
and
pop
or
xchg
outsb
mov
mov
lods
add
jo
aaa
xor
sbb
push
loopne
outsb
fpatan
and
and
stos
das
cltd
outsb
pop
in
call
xchg
cmp
ret
or
mov
imull
out
adc
fmull
push
daa
repnz
mov
mov
fimuls
push
jns
mov
add
imul
dec
dec
je
pop
fcompl
xchg
imul
dec
arpl
lds
repz
repz
push
fnstenv
push
movsl
dec
xchg
lods
test
in
rcll
mov
in
sbb
mov
bnd
fdivrs
fildll
sbb
hlt
xchg
je
push
sub
fcompl
pop
mov
imul
sub
xor
mov
testl
mov
jge
popf
adc
or
push
lahf
cwtl
pushl
movl
pop
mov
in
rcll
data16
dec
clc
dec
icebp
cmp
or
sahf
outsl
and
int
gs
pop
fnstcw
pop
jo
add
jecxz
repz
mov
jne
bound
xchg
mov
cmp
dec
or
daa
and
loop
into
sbb
test
push
push
mov
add
mov
fpatan
push
push
adc
in
mov
mov
xlat
xchg
popf
loope
dec
cltd
shl
mov
inc
mov
movsl
push
je
sti
addr16
cld
jb
in
je
or
es
cmpsb
cli
clc
sub
pop
push
add
jnp
loop
imull
adc
in
mov
xor
cmp
ljmp
cmp
arpl
addr16
into
pop
sub
out
jl
cmpsb
popf
aaa
xor
in
push
pop
mov
test
mov
mov
movsl
inc
out
ret
inc
loop
xor
push
push
mov
adc
fcmovb
jg
outsl
push
inc
cmp
into
pushf
int3
mov
cld
insl
dec
fwait
fwait
and
lods
sub
movsl
loopne
rorb
xorl
cmp
mov
push
jae
jo
or
push
scas
mov
or
and
cmc
jae
je
sahf
dec
xlat
pop
je
mov
scas
rcll
imul
orl
cmpsb
push
sbb
mov
adc
test
pop
lods
cld
or
outsl
out
mov
sti
xor
fldcw
sahf
pop
inc
lea
and
inc
test
add
rclb
fucomp
es
inc
add
or
popf
cmp
mul
cld
popa
das
sub
fsubs
fldl
std
stc
cmp
jg
add
push
dec
imul
cmp
mov
aas
mov
aad
imul
iret
push
xchg
jae
fcomps
icebp
stc
pop
inc
adc
or
das
iret
cmp
leave
push
ljmp
pop
cmpsb
out
stos
int
dec
mov
jmp
lahf
xor
push
int
fcompl
cmp
xor
movhps
push
gs
loop
mov
jecxz
imul
pop
mov
pop
adc
test
xchg
inc
insb
push
xor
fldenv
mov
inc
dec
gs
sub
ja
pop
dec
sub
add
push
sahf
push
cmp
sti
ja
jle
cmpl
pop
test
mov
mov
out
push
cltd
mov
aas
lock
push
mov
and
daa
lods
cmp
ds
push
mulb
pop
mov
in
xor
test
stc
into
jl
sbbb
aaa
fcmovne
into
add
bound
push
mov
pop
or
jnp
sbb
push
cmp
ficoml
push
jne
mov
nop
sub
pop
das
jne
enter
fucomi
cmp
adc
cmpsb
mov
frstor
sbb
imul
xchg
dec
adc
movaps
arpl
jne
int3
fadds
push
push
xor
outsb
push
xchg
in
inc
call
pop
repz
loope
ret
gs
xchg
jns
mov
mov
cmp
add
or
out
xchg
pop
inc
mov
push
xor
movsl
movsb
loope
das
nop
arpl
pop
in
loopne
mov
jbe
iret
sahf
fwait
jmp
xchg
cmp
sbb
call
push
sbb
jmp
mov
dec
inc
sbb
mov
pop
loope
push
push
sbb
mov
je
into
das
jno
nop
data16
jl
xorw
mov
mov
dec
fwait
in
push
pop
sub
rcrl
xorl
adc
les
add
aam
mov
out
inc
fsubl
rcrl
jns
loop
mov
fstps
mov
in
jns
mov
and
fdivr
fsts
dec
jno
xchg
cmpsl
inc
push
jne
pushf
out
push
pusha
out
daa
nop
add
loopne
pushf
inc
pop
jnp
mov
inc
call
sub
push
cmp
jle
push
nop
push
arpl
aam
pop
bound
shl
lods
ficoms
out
in
mov
jmp
or
mov
imul
fistps
sub
cmpsb
cmovge
loop
int3
mov
xchg
cli
inc
pop
jecxz
jne
mov
mov
pop
pop
push
cmc
lds
and
testl
pop
outsl
cmpsl
push
add
xor
inc
jno
fs
xor
repz
lret
xlat
dec
inc
aam
xchg
aas
hlt
mov
xor
shl
jmp
push
mov
cli
sbb
fnstenv
dec
mov
inc
invd
add
maxps
ret
cmc
push
clc
fcoms
xchg
pushf
adc
mov
aaa
cmp
sahf
fcmovb
lahf
add
dec
lods
push
lods
jb
mov
jl
cld
cs
xchg
adc
out
cmp
add
jno
sub
lahf
or
dec
fwait
inc
mov
xchg
xor
inc
vandnpd
inc
sahf
dec
push
out
push
lock
shrl
push
sbb
or
pop
mov
nop
xor
bnd
js
movsb
mov
ljmp
or
loopne
cmpsb
jge
adc
push
xorl
xor
hlt
push
inc
push
pop
mov
jg
sub
inc
les
add
xchg
mov
stos
dec
mov
es
jae
add
popl
imul
cmp
xor
lock
push
rolb
add
nop
ljmp
and
xor
iret
mov
popa
fldcw
sbb
push
adc
sub
pop
cmc
adc
ljmp
inc
sbb
cmp
add
mov
pop
ljmp
pushf
cmp
les
jo
inc
test
dec
mov
mov
sti
ret
push
mov
dec
adc
lahf
mov
mov
scas
mov
out
fs
in
inc
mov
adc
mov
xchg
pop
inc
lock
dec
cwtl
and
dec
and
xlat
lds
loope
cmpsl
fwait
sub
scas
inc
into
loopne
push
ret
clc
ret
popf
cld
fsub
bound
jle
cmc
loope
pop
sbb
iret
mov
or
ror
jnp
sub
push
repz
sbb
or
nop
in
mov
or
insb
loope
xor
push
push
insb
cmpb
stc
push
fisubrl
push
cmp
dec
lods
xchg
jns
gs
sbb
popf
dec
aam
les
push
mov
inc
mov
xchg
gs
xor
pushf
cld
insl
std
add
push
test
dec
jp
mov
lods
add
push
arpl
or
stos
arpl
mov
js
push
cli
ja
cmp
inc
lock
add
arpl
or
rcrl
jmp
xchg
or
sbb
xor
es
cmpsb
adc
pop
es
test
adc
std
arpl
cmp
clc
iret
dec
cmc
out
lahf
inc
adc
and
addb
pop
and
dec
das
jmp
decb
ss
imul
sahf
fcmovb
cmpsl
in
in
jne
stos
repz
pusha
scas
in
cmp
jp
cwtl
pop
testl
xor
fs
gs
aas
icebp
adc
ja
cmp
jl
hlt
mov
les
push
lret
dec
adc
scas
sahf
xor
sbb
xchg
fbld
and
rcrb
inc
rorb
test
lods
pop
lcall
fdiv
shrb
inc
in
jne
sub
adc
insb
mov
sub
push
popf
pop
dec
cmp
clc
adc
stc
pop
pop
push
imul
inc
sbb
xor
dec
or
repnz
stos
cmp
xchg
add
jne
push
and
xchg
sbb
mov
push
lret
stc
icebp
fwait
mov
sub
repnz
pop
inc
mov
cmp
pop
and
sbb
mov
sub
movups
mov
sub
cmp
hlt
and
lea
dec
and
pop
pop
aaa
cmp
dec
xor
jnp
ljmp
sbb
push
les
fmuls
inc
mov
stc
adc
dec
adc
stos
into
and
pop
xor
mov
fiaddl
cmc
cmp
std
pop
js
icebp
jb
shll
ret
cmp
sub
push
leave
ret
incb
popa
mov
jecxz
mov
scas
bound
push
push
mov
cmp
ret
mov
aas
push
jmp
add
cld
inc
or
mov
cld
and
stos
loop
jg
lret
imul
inc
ret
mov
dec
jmp
loop
das
subb
mov
xor
into
inc
insl
or
adc
loopne
mov
push
inc
pop
add
jnp
inc
ds
cltd
lock
out
shrb
outsl
mov
push
int
stc
jecxz
cwtl
xchg
jae
mov
dec
daa
gs
loopne
jns
popf
mov
sahf
add
sarl
and
sahf
mov
pop
inc
int
roll
repnz
scas
lods
lods
mov
jmp
data16
mov
insb
xchg
or
fstpt
pop
mov
adc
push
mov
cmp
pusha
lret
mov
icebp
sahf
iret
jbe
int3
jle
mov
lret
add
mov
pop
mov
adc
andb
gs
insl
in
xor
mov
leave
cmp
fsubrl
ret
cmp
in
inc
pop
call
sub
cmpb
xlat
xor
cmp
push
xlat
fiaddl
jbe
movl
inc
cmp
dec
fnstcw
scas
sub
idivb
sub
xchg
pop
and
fdivs
icebp
add
mov
inc
lahf
xchg
mov
ds
or
mov
decl
xchg
test
pop
pop
rcrb
in
jge
test
mov
dec
inc
addr16
inc
addr16
cmp
sahf
mov
cmp
in
clc
mov
loop
lods
out
adc
xor
fisubrl
lds
pop
pusha
pop
xor
mov
jg
xlat
pop
mov
test
xchg
aad
aas
add
inc
lea
and
mov
dec
pop
sbb
adc
mov
int3
in
sbb
mov
xchg
scas
int3
dec
loope
mov
je
xor
fnstcw
cmp
orb
mov
pop
leave
ret
mov
mov
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
mov
or
mov
mov
insb
xchg
out
mov
jae
into
push
in
jb
mov
mov
push
xchg
scas
jl
and
dec
push
dec
cmpl
stos
loop
and
sbb
lock
add
mov
je
and
pop
popf
push
sub
dec
dec
pop
cmp
lret
and
and
in
inc
inc
lahf
dec
fstpt
adc
imul
divl
lock
jle
mov
sbb
pop
fisttpl
jns
jecxz
int
xchg
mov
add
sbb
cmp
cwtl
push
jl
out
ret
jnp
add
cli
filds
ficoml
jmp
mov
sbb
out
pop
cmp
test
jg
dec
stc
dec
test
jae
aad
in
add
jl
xor
adc
xchg
sbb
test
jmp
ja
mov
and
pop
jl
jp
push
inc
dec
stc
and
dec
mov
ss
aas
sbb
sbb
sub
add
out
and
pop
push
add
mov
insb
xor
popa
loopne
mov
jge
inc
sub
sbb
int
cltd
add
lret
jne
mov
sub
insl
xchg
push
inc
fisttpll
roll
mov
inc
xchg
cmp
dec
pop
mov
mov
rorb
arpl
push
outsl
aam
loope
inc
mov
aad
imul
and
incl
mov
mov
movsl
out
mov
cmp
inc
adc
cmp
ja
cmpsl
jg
or
insb
insb
jl
vcmpss
test
call
jecxz
cmovbe
pop
insl
inc
jmp
jbe
dec
xchg
fs
pop
sarl
ja
ljmp
sub
and
pop
icebp
fstps
arpl
xor
mov
mov
sbb
shl
repz
push
push
aaa
sbb
push
jns
and
pop
cmp
daa
xchg
cli
mov
and
pop
clc
notl
fdiv
ljmp
sti
add
add
jmp
testb
jo
incb
movhps
pop
addb
lahf
movsb
and
es
insl
pop
xchg
push
cltd
push
inc
push
imul
inc
mov
mov
idiv
lahf
lret
inc
pushf
ljmp
std
dec
dec
aad
inc
loope
loop
inc
pushf
xchg
push
lret
icebp
fs
insb
aaa
mov
xchg
lret
push
sub
fs
mov
and
or
push
cli
xchg
or
mov
out
ficoms
roll
mov
xchg
or
mov
inc
inc
loop
les
push
daa
cmp
jnp
inc
xchg
cmp
stos
mov
aam
mov
mov
cmpsl
sub
and
movsb
leave
inc
or
aam
dec
xor
cmp
pop
lock
push
lods
shl
sub
adc
outsl
sbb
loope
mov
sbb
imul
int
js
fldcw
push
inc
sti
pop
add
mov
stos
add
mov
pop
jo
into
hlt
xchg
push
js
out
xor
jle
cwtl
int3
or
fsubs
shll
mov
mov
out
mov
inc
stc
loop
or
sub
imul
or
adc
jno
mov
in
fsubrs
dec
ja
cli
pop
push
in
mov
lea
xor
icebp
mov
call
stos
push
cs
adc
jmp
mov
sbb
fbld
in
and
jnp
adc
sub
enter
push
jne
mov
sub
cmpsl
xor
cmc
mov
aas
dec
int
out
or
int3
xor
gs
rolb
test
cmp
xchg
ja
icebp
mov
das
incl
testl
cltd
mov
out
out
idivl
mov
mov
movsl
adc
dec
pop
insl
loop
imull
mov
mov
xor
stc
aam
cmp
mov
popf
arpl
das
jbe
test
xchg
leave
negb
out
xor
push
stos
xor
sbb
mov
sbb
jbe
pop
mov
cmp
stos
inc
stc
lock
ror
jo
sbb
xchg
xchg
adc
outsb
ja
pop
mov
adc
es
das
adc
xchg
xchg
lret
and
movsl
rolb
iret
test
out
fucomp
mov
adc
js
dec
adcb
popf
pop
jecxz
pushl
leave
sbb
xor
jle
aad
jl
adc
iret
out
mov
cld
pop
pushf
sbb
sub
mov
fbld
pop
loop
lret
pop
es
dec
ds
jp
sub
insl
and
add
mov
fcompl
cmp
ret
sub
jns
xlat
nop
xlat
sub
jg
inc
fidivs
je
enter
cld
movsl
jns
mov
sbb
pop
mov
in
dec
popa
pop
cmp
outsl
adc
ds
cwtl
sub
cmp
cli
es
add
mov
xchg
mov
int
adc
dec
jmp
movsl
add
cltd
sub
negb
sbbb
in
fcomps
pop
js
leave
push
in
clc
insb
adc
mov
out
fcompl
mov
and
jo
int
jno
mov
xor
push
scas
scas
jbe
jl
mov
sbb
lods
jl
jle
cmp
in
inc
loop
fs
mov
mov
mov
fimull
rcr
pop
mov
inc
test
jmp
in
sbb
push
out
stc
adc
stc
and
nop
mov
int3
sbb
dec
sbb
sti
pop
cmp
sti
add
adc
sub
mov
mov
loop
shrb
mov
mov
out
mov
pop
or
mov
mov
daa
stos
je
xor
mov
dec
sub
data16
iret
sarl
je
js
fisubrl
cwtl
outsl
lret
cmp
pop
scas
fsts
scas
cmc
add
ds
or
ss
int3
pop
xlat
mov
movsl
and
or
clc
pushf
sbb
pop
push
jns
lods
or
rcll
cmpsb
sbb
xor
inc
mov
out
push
loop
jae
mov
mov
outsl
outsl
arpl
int3
out
sub
int
cltd
call
bound
lods
inc
push
push
inc
popa
adc
sahf
push
sub
mov
pop
push
mov
in
jg
fstpt
shrl
es
lods
or
out
sbb
imul
xorl
push
decl
aaa
inc
fldenv
inc
hlt
mov
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ret
mov
adc
cmpsb
js
xchg
clc
sbb
mov
psubsb
adc
pop
daa
loop
sub
xchg
xchg
inc
dec
xchg
inc
mov
mov
pop
inc
sbb
pop
js
adc
scas
xor
cwtl
dec
loop
inc
fwait
loop
cmp
fnstenv
subl
out
mov
push
in
das
es
xchg
xchg
sbb
ljmp
dec
mov
leave
mov
cli
dec
int3
lock
xor
addr16
fildll
aam
mov
sbb
shr
xchg
icebp
fcmovnbe
mov
sbb
test
adc
xchg
inc
or
adc
jne
jnp
cmp
sbb
sbb
lds
testb
sahf
out
loopne
pop
mov
add
mov
push
dec
sbb
or
cmpsl
cmp
shl
pop
movsl
pop
xchg
mov
xchg
adc
test
data16
and
push
and
adc
mov
orl
pushf
pushl
fdivrs
hlt
push
popa
xchg
push
and
push
or
idivl
sub
xchg
outsl
popf
and
js
xor
scas
popf
cwtl
daa
loop
pop
stos
sbb
jb
repz
dec
mov
cld
push
cmp
sub
xchg
in
inc
stos
add
cmp
xor
cmp
mov
xchg
insb
mov
jae
mov
cmc
mov
add
es
push
add
movsl
xor
adc
adc
cmp
add
xchg
cld
xchg
jp
mov
cmpsl
cmp
fsubs
inc
mov
mov
out
push
push
ja
shll
fstp
sbbl
cmp
adc
testb
imul
jmp
je
push
inc
sbb
dec
add
or
pusha
inc
xor
cmp
push
aam
cld
test
les
xchg
pop
sub
inc
fldcw
mov
mov
addb
movsb
and
ja
cmp
push
cmp
mov
test
dec
fwait
test
adc
andb
mov
adc
sbb
es
adc
add
push
add
or
lea
sar
pop
loop
test
bound
xor
dec
inc
movsb
les
xor
mov
aam
mov
cs
leave
dec
mov
push
cmp
mov
mov
mov
push
ss
mov
pop
in
xchg
and
pop
mov
out
je
jnp
mov
mov
std
nop
adc
in
jecxz,pt
repnz
rcr
xchg
das
cs
jo
push
xchg
jg
outsb
jo
mov
add
cmc
js
fcmovnb
stc
add
jge
ds
mov
shr
rsqrtps
aam
aas
daa
jo
adc
adc
in
push
jl
lds
pop
dec
and
into
mov
lea
arpl
sub
fdivs
mov
shr
add
outsl
or
shl
xchg
mulb
jns
xchg
sbb
inc
xchg
or
jae
xor
or
incl
pop
insl
adc
in
aam
push
add
les
negl
mov
inc
call
mov
dec
xchg
mov
cmp
and
cld
pop
hlt
rolb
and
and
cmpsl
cli
add
js
mov
add
or
adc
jge
pop
mov
jne
push
mov
ss
mov
xor
fwait
nop
clc
in
aad
fistpll
jbe
rcrb
sub
or
and
jg
pop
std
dec
pushf
and
sbb
adc
push
add
int
xchg
sub
fmuls
call
pop
nopl
aas
push
inc
cmp
fs
cmp
aas
imull
pop
shll
andl
pushf
imul
fwait
sbb
push
sub
das
pushf
or
movsb
shrb
sbb
add
popa
mov
push
scas
rorl
sbb
sub
aad
fildll
push
test
fcomp
mov
call
fmull
cmc
pop
test
rcl
or
or
fadd
mov
pop
cltd
push
sahf
jmp
adc
push
push
mov
call
sbb
movsl
popa
jbe
add
repz
adc
jno
mov
jo
xchg
mov
add
mov
xchg
mov
aad
mov
mov
rcll
xchg
jnp
push
xor
leave
adc
or
iret
mov
jp
imul
or
jle
ss
js
mov
mov
mov
adc
mov
jns
into
jg
shlb
fwait
jns
add
stc
push
sahf
xchg
cs
adc
xchg
loopne
xor
sti
cwtl
cmp
imul
mov
push
fsubs
out
and
push
ja
lcall
pop
sti
adc
lods
mov
cli
lret
daa
loopne
out
jne
pop
pop
or
add
clc
pop
call
inc
daa
push
dec
je
out
movsb
in
dec
movsb
repz
add
cltd
mov
add
mov
push
jbe
mov
pop
nop
lret
fwait
aas
mov
xchg
mov
adc
fwait
dec
mov
jle
jle
pusha
bound
adc
andl
mov
nop
stos
fwait
adc
push
das
jo
daa
fwait
rcrb
stc
or
mov
mov
neg
fistpl
mov
leave
mov
pop
aam
dec
insb
daa
pop
jo
jmp
insl
add
mov
mov
shl
cmp
sbb
popf
dec
jmp
lds
in
push
cmc
sti
cltd
pop
fnstcw
movsb
or
je
lock
fidivrl
insl
xchg
sub
xchg
std
aam
adc
hlt
repnz
test
repnz
jle
movsb
jne
sub
sub
push
and
xchg
dec
popa
adc
mov
pop
sarl
ja
repz
mov
dec
adc
hlt
cli
fiaddl
mov
add
mov
xchg
pop
add
call
sbb
out
xchg
mov
inc
movsl
mov
gs
in
sub
cmp
push
jne
lds
pop
jmp
cmpsb
jne
loop
dec
sarl
sbb
dec
jno
insb
mov
cmc
add
dec
pop
insl
sbb
dec
push
loop
mov
inc
inc
cmp
into
xor
movsl
sub
push
shlb
fwait
mov
mov
jne
fstps
jmp
push
xor
dec
fisubl
inc
push
inc
fldt
sbbb
mov
fldenv
adc
ficompl
loope
sbb
jge
jmp
jae
sbb
test
mov
sub
ljmp
inc
ror
cmp
add
inc
aam
add
add
inc
fsubs
add
int3
mov
mov
add
jmp
pop
sbb
dec
mov
or
movsb
push
sub
pop
mov
jae
test
movsl
ljmp
or
cmpb
imulb
and
adc
out
dec
popl
lgs
add
cwtl
iret
lret
or
push
adc
loope
ds
mov
inc
mov
into
andb
sbb
mov
sbb
jmp
sahf
pop
and
out
mov
dec
in
les
xchg
shl
iret
lock
xchg
rol
xchg
jbe
repnz
lods
mov
jns
out
adc
or
lret
fidivs
mov
test
test
jbe
outsl
push
jecxz
pop
es
test
cwtl
push
dec
pop
jae
add
add
cmp
inc
out
cmc
add
pop
lea
pop
pop
push
cmc
cmp
xor
and
hlt
testb
fidivl
cmp
ficoms
ja
mov
xlat
xor
outsl
mov
test
in
xchg
int3
roll
mov
ja
hlt
and
sub
sbb
int
mov
pop
or
sub
notb
lods
fstps
mov
xchg
stos
push
popl
aad
mov
adc
dec
inc
xor
inc
movsb
adc
pop
or
mov
lret
fcoms
js
xlat
popa
add
mov
sub
stos
cmp
out
aaa
mov
iret
insl
inc
int
xchg
push
cmp
xor
push
icebp
repz
jl
mov
cmc
add
mov
lahf
call
ss
jmp
movsb
insl
test
inc
push
nop
adcb
bound
jp
cmpsl
sub
push
jmp
mov
push
and
jl
sbb
adc
ss
daa
push
or
dec
pop
testl
lcall
dec
pop
xor
cwtl
aas
sahf
popa
aaa
cmpsl
andl
movsb
or
pop
flds
aam
out
or
pop
iret
pusha
loop
lock
ljmp
jmp
xchg
add
mov
cmp
sbb
scas
cmp
and
push
cmpsl
xor
arpl
fstpl
std
jl
jne
nop
pop
stos
dec
jmp
fcomps
in
mov
jnp
test
pop
adc
fxch
pop
jecxz
pushf
cmpsb
inc
out
movsb
test
add
push
jae
shrb
incl
push
sar
xor
stc
or
pop
fisttpll
outsl
mov
and
ss
in
mov
inc
jmp
mov
dec
pop
outsb
adc
aad
dec
cmp
xor
in
jle
pushf
dec
or
mov
or
jl
mov
cmp
lock
pop
mov
aas
inc
lods
into
dec
inc
mov
lock
gs
test
xchg
inc
or
jnp
xchg
rclb
shrb
cmp
loope
pop
into
mov
ret
cld
xchg
test
or
imul
lods
aam
dec
shlb
mov
pop
xchg
dec
aaa
imul
and
push
addr16
adc
cmp
cmp
fstpl
mov
ss
rolb
or
inc
leave
push
out
cli
jge
cmp
imul
adc
in
dec
out
fcmovu
add
in
sub
cs
xchg
inc
jmp
jb
jns
aas
cmp
sub
xor
add
test
jp
mov
pop
data16
sti
inc
cs
adcb
bound
cmp
cli
ss
ja
outsb
fwait
push
cmpsb
bound
sub
inc
aas
xchg
data16
inc
and
loop
mov
xchg
xchg
and
in
add
push
jnp
cmp
insl
mov
aaa
sahf
popf
fsubs
hlt
and
shlb
mov
aas
leave
cwtl
movsl
scas
dec
movsl
shrl
jmp
rorl
adc
shl
test
push
and
pop
rcll
xchg
inc
and
adc
fnstenv
sub
push
jbe
fcoms
dec
xor
push
gs
xor
das
lods
inc
add
lea
iret
xchg
dec
aaa
jo
sub
das
sarb
sbb
ret
inc
adc
lcall
jge
int3
inc
adc
pop
xchg
inc
or
aas
inc
mov
push
call
ret
lods
mov
add
mov
dec
stos
and
pop
loope
inc
jbe
js
js
and
xor
and
inc
add
in
mov
dec
add
std
jns
push
cmp
jae
or
inc
mov
shl
dec
leave
jl
scas
push
adc
dec
fmull
inc
shrl
lcall
mov
clc
lret
pop
cs
cmc
mov
loope
outsl
cld
add
addr16
dec
mov
cwtl
bound
in
das
pop
je
movsb
repz
iret
xor
add
mov
popa
arpl
ret
leave
fadd
or
cli
es
xor
mov
test
cmp
dec
je
pop
pop
or
pop
ds
cmp
xchg
add
inc
adc
sbb
rcr
add
imul
and
iret
jecxz
dec
test
daa
add
push
sub
aas
ds
stos
test
xchg
mov
out
dec
and
lds
xor
lods
sbb
sahf
sbb
imul
and
xor
ret
mov
inc
xor
popa
scas
cli
mov
jmp
imul
sub
sbb
shlb
or
stos
sub
out
dec
scas
pop
xchg
xor
xor
jg
pop
and
pusha
adc
and
lcall
or
adc
mov
mov
ljmp
pop
test
aam
push
push
clc
out
aad
mov
xchg
mov
add
stos
outsl
push
inc
cmp
mov
cmp
jne
mov
outsl
jecxz
jae
cwtl
mov
add
nop
dec
clc
or
test
dec
lock
pusha
movl
fbld
fdivrs
xor
out
xchg
mov
jae
pop
dec
movsl
or
jno
leave
dec
cmp
push
xchg
or
test
pop
leave
loop
cmpsb
jo
and
rcl
arpl
and
hlt
or
mov
out
push
pop
mov
mov
rolb
mov
sub
and
mov
flds
xor
mov
les
in
adc
mov
mov
or
repnz
push
popf
jg
nop
clc
sub
hlt
aam
mov
test
loop
sti
std
mov
rcrl
adcl
mov
scas
adc
pop
xor
cmp
cmp
inc
sub
test
adc
jmp
into
add
or
leave
inc
or
sbb
adc
and
and
sub
lret
cmc
dec
mov
jo
or
test
xor
add
inc
stos
cld
pop
inc
inc
divb
inc
dec
jg
jge
cwtl
or
inc
add
icebp
inc
outsl
mov
push
pop
mov
lret
jb
xchg
mov
lret
test
or
xchg
or
xchg
cmp
cmp
mov
jbe
jae
push
pop
mov
ja
mov
lahf
imul
mov
dec
and
jl
sbb
nop
push
repnz
cmc
pusha
fldenv
xchg
lcall
imul
es
fisubs
push
stos
or
mov
popf
mov
jecxz
pop
rorb
dec
int
mov
aam
mov
push
jb
dec
and
imul
dec
add
adc
xchg
pop
xchg
jo
xchg
pushf
lock
call
cld
add
adc
dec
push
int
jbe
xor
dec
in
mov
mov
scas
aaa
mov
lea
xchg
jmp
jp
xchg
add
and
stc
fldcw
pushf
jge
pop
adc
lret
frstor
adc
dec
les
fucomp
mov
jg
inc
mov
and
mov
lock
movsl
outsl
xchg
inc
stos
movsl
push
fldcw
int
push
mov
stc
hlt
jo
roll
mov
ljmp
es
pop
pop
sub
xchg
add
movsb
cwtl
adc
out
adc
pop
dec
pop
movsb
pmaxub
jae
push
push
and
fidivl
adc
pop
pusha
and
xchg
js
xor
inc
xchg
sbb
or
jp
aas
sub
push
test
mov
ja
jns
lret
fwait
xor
call
sbb
outsl
imull
inc
mov
cmpsl
jb
int3
rcrl
dec
dec
aad
dec
daa
jns
sub
call
in
mov
outsb
push
fdivrp
ret
scas
insl
outsb
ljmp
mov
loope
push
cmp
sti
inc
js
data16
outsl
nop
lods
cvtps2pd
roll
jge
jnp
fsubs
xchg
shlb
sbb
pop
mov
aas
aaa
inc
jo
dec
inc
sbb
fidivl
repnz
mov
xchg
xor
iret
popa
push
xchg
cmpsb
divl
add
push
xchg
test
pop
cld
push
test
fiadds
dec
lret
mov
test
mov
arpl
push
add
cld
aaa
sar
xchg
inc
push
adc
and
xchg
adc
inc
mov
jo
xchg
or
mov
push
cmp
mov
fists
inc
stos
jne
cli
sarl
hlt
inc
ds
jb
jmp
jmp
xor
lahf
xor
icebp
lea
xor
mov
inc
insl
int3
lea
jno
mov
std
mov
jnp
pop
ret
lods
hlt
in
popf
das
call
in
mov
lods
mov
jecxz
sbb
push
pop
dec
inc
mov
or
cmp
cmc
loop
fdivrs
dec
pop
push
add
pop
das
cmc
pop
daa
mov
daa
push
cmp
scas
cmpsl
aad
gs
std
lret
jle
push
in
popf
mov
push
mov
mov
xor
mov
xor
cmpsb
xchg
nop
test
and
insl
insl
fdivs
cwtl
lock
inc
rcrb
pop
movsl
and
mov
repz
int
das
stos
push
inc
xchg
mov
jno
fs
pop
xor
mov
movsl
loopne
sahf
inc
enter
addr16
shrl
inc
jne
sub
adc
outsl
xchg
pushf
or
add
push
pop
aaa
jl
dec
outsl
adc
inc
xchg
cmp
cli
xor
push
cltd
pop
aam
push
fcmove
xchg
insl
push
xchg
sub
xor
xor
inc
popf
xchg
divl
mov
inc
jno
jns
shl
repz
jle
lret
and
jno
adc
xchg
jnp
ds
sbb
jnp
cld
lods
daa
mov
pusha
jno
adc
inc
pop
into
pop
stc
adc
bound
add
xlat
enter
testl
subl
cmp
add
cwtl
test
fdivrs
fsubl
push
into
mov
ret
fcompp
loop
addr16
ret
out
and
mov
jbe
mov
aad
mov
aaa
lods
cmpsl
mov
push
scas
mov
cmc
insb
push
test
sbb
push
arpl
cmp
stos
mov
ret
mov
pop
stos
adc
outsl
fstpt
repnz
dec
in
push
add
pop
ret
roll
ret
xor
mov
cmp
and
sbb
and
test
data16
jae
xor
test
test
xchg
mov
push
cmpsl
xchg
in
mov
cmc
loope
movsb
testl
jae
les
jns
dec
jnp
pop
mov
flds
mov
sub
cmc
call
dec
lods
daa
fwait
movsb
cmpsl
xchg
cmpsl
orl
mov
inc
dec
or
fwait
imul
mov
adc
jp
xor
rorb
lods
clc
enter
lcall
fs
int3
add
push
push
xchg
clc
mov
mov
and
mov
mov
data16
loope
sub
cmp
insb
out
mov
scas
insl
mov
mov
inc
mov
nop
inc
cmpsb
icebp
and
fnstcw
popf
iret
cld
xchg
js
jae
cmp
dec
add
daa
cmp
in
mov
addr16
imul
aad
xlat
stc
cmp
das
iret
jo
data16
lods
hlt
mov
mov
mov
add
mov
jl
rcrl
pop
cmp
aad
out
mov
and
cmp
sub
jnp
fisttpll
leave
jo
dec
mov
mov
fnstenv
adc
cmpsl
into
out
pushl
jle
in
fwait
ret
fbld
rorb
jo
rolb
jmp
fcomp
sub
jbe
subl
or
inc
inc
out
out
sub
cvtps2pd
mov
into
hlt
and
lahf
fiaddl
add
jo
xor
aad
sbb
mov
fiaddl
cmp
int
cwtl
cmp
jmp
add
call
pop
frstor
cmp
mov
mov
aaa
xor
inc
js
inc
jge
aaa
pop
adc
sub
push
inc
xchg
lret
lea
shrb
addr16
cmp
popa
inc
ss
jl
int3
push
push
xchg
mov
jae
cmp
add
mov
in
out
subl
push
test
fstpl
and
jae
loopne
or
pop
int3
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jmp
pop
cli
pop
sub
or
dec
pop
nop
push
in
dec
mov
and
xor
ljmp
ret
push
into
xchg
jo
jmp
lret
test
xchg
sbbb
stc
jne
lea
jne
hlt
sub
test
mov
js
jbe
cli
scas
add
push
scas
rorl
ret
mov
jmp
sbb
jno
jg
xorl
push
das
ljmp
and
les
sbb
push
sahf
stc
out
adc
popf
test
xor
ljmp
mov
add
and
xchg
cmpsb
xor
gs
fbld
jecxz
mov
scas
mov
push
leave
lods
push
sub
popa
sbb
lock
pop
jbe
and
shll
cmpsb
pop
cmp
cmpb
add
addl
scas
nop
popa
hlt
pop
dec
xchg
movsb
fsubrl
pusha
sub
xchg
pushl
sub
push
and
jbe
xchg
adc
dec
mov
test
cs
pushf
jecxz
mov
inc
repnz
mov
mov
in
and
jnp
iretw
popf
adc
sbb
add
push
cmp
dec
or
xchg
sub
test
lods
mov
push
in
and
or
shrl
stos
es
shll
mov
mov
add
or
jmp
jl
iret
sbb
dec
and
insl
sub
mov
and
pop
imul
adc
adc
mov
inc
push
repnz
xor
cmc
cmp
imulb
sti
pop
mov
adcl
adc
shl
mov
mov
pop
pop
int
data16
mov
push
test
aas
dec
sbb
popf
gs
cs
fs
xchg
les
dec
inc
mov
mov
or
mov
int
adcb
sbb
jp
jmp
push
cmp
push
aaa
es
fistps
sbb
outsl
pop
arpl
sbb
and
cli
loope
xor
xor
addr16
inc
xchg
movsb
jae
stc
mov
dec
sbb
mov
pop
add
sbb
fs
xchg
sbb
fwait
cltd
xchg
les
pop
sbb
pop
mov
sbb
cmpsb
lret
notb
outsl
pop
fs
out
cmp
cwtl
lret
cs
ret
inc
cmp
sbb
test
push
movhps
mov
xor
in
sti
popl
rorb
add
popf
push
lret
mov
xchg
jle
fisttpl
stc
int3
sahf
cld
xor
add
iret
cli
fdivl
enter
adc
mov
ss
and
dec
pop
or
dec
fstpl
cltd
or
pop
mov
inc
inc
out
xor
out
push
cmc
inc
rep
xchg
jne
sti
jge
xor
out
fsubrs
push
ror
inc
orb
ljmp
jle
mov
cmp
out
cmp
and
xchg
push
cwtl
add
sbb
sahf
subl
outsb
xchg
and
mov
push
inc
rclb
js
les
call
xchg
insb
mov
push
fwait
rcll
jns
orl
sbb
adc
mov
or
xchg
push
cmpb
jmp
jmp
mov
mov
and
popf
and
mov
xchg
push
aas
divb
sub
mov
cmpsb
or
test
jne
inc
out
pop
mov
pop
xchg
sbbl
dec
in
iret
xor
dec
je
pop
jne
fsubrp
cli
mov
adc
sbb
stos
pop
sub
mov
scas
les
sbb
fstl
ja
mov
int
and
mov
xor
jae
or
lea
int3
xlat
dec
stos
adc
xchg
dec
push
xor
sbb
leave
lcall
shrb
scas
xor
mov
inc
cmc
jne
daa
pop
pop
push
adc
mov
sbb
dec
add
daa
add
fstps
bound
adc
sarl
xor
ja
mov
inc
cmp
pop
bound
insl
xor
orl
adc
nop
lret
xchg
sbb
jle
nop
mov
mov
aas
jnp
imul
mov
repnz
mov
jne
push
push
test
imul
scas
or
push
adc
sub
add
jle
in
sub
scas
fistl
push
movsb
xchg
in
mov
mov
inc
sbbb
mov
ss
mov
lcall
int
movsb
inc
in
mov
push
repz
xchg
ret
add
es
cmp
movsl
out
cmc
or
pop
cmp
mov
add
jo
jg
lods
and
ret
insl
cwtl
mov
jmp
sbb
inc
cmp
imul
lcall
adc
mov
xchg
movsl
aas
push
addr16
pop
leavew
scas
mov
imul
pop
push
rcr
xchg
jmp
jg
inc
mov
loopne
pop
mov
add
jecxz
pop
adc
fists
fcoms
jg
mov
cs
push
rcrb
jmp
inc
sub
or
cmp
ret
mov
dec
outsl
insb
mov
pop
xor
pop
inc
push
inc
push
clc
sbb
sub
sbb
repnz
push
leave
sbb
mov
xlat
xor
push
inc
adc
mov
and
fildl
inc
jmp
mov
push
cltd
dec
sahf
cld
push
rcll
into
sub
stos
or
xchg
imulb
pop
mov
inc
std
push
cwtl
mov
jbe
inc
push
mov
movsl
mov
pop
leave
sbb
push
and
std
cmp
lds
cwtl
jbe
fldenv
cli
shlb
adc
or
mov
lahf
orb
mov
das
outsb
and
sti
adc
out
sbb
lods
mov
adc
insl
or
fdivrs
ret
inc
orl
adc
jmp
stos
cmp
cmp
mov
arpl
dec
ss
aam
mov
xchg
push
sub
inc
out
aas
je
cld
add
ficomps
ds
sub
ds
push
and
daa
mov
add
ss
and
add
inc
adc
sub
pop
sub
cmpsl
sti
inc
inc
mov
pop
sub
ret
lret
insl
push
mov
xor
mov
xor
inc
cmp
add
test
sbb
and
mov
sub
sbb
andl
mov
sub
lds
mov
jl
rcrb
add
or
leave
clc
outsl
jmp
test
add
mov
add
imul
xor
mov
div
jmp
lret
pop
cmp
adc
add
xchg
and
or
cmp
shll
xor
ret
cmp
adc
mov
lods
or
divb
stos
mov
jp
push
add
mov
out
xchg
in
inc
std
jno,pt
mov
scas
add
mov
js
cltd
js
xor
stos
mov
jno
loope
push
add
mov
jp
pop
cmp
mov
andl
push
vpsrld
jo
pop
ljmp
dec
push
std
add
and
out
xor
add
into
ds
icebp
push
cwtl
repz
cmc
popf
mov
jmp
xor
inc
inc
das
jecxz
dec
pushf
fdivl
mov
repnz
clc
inc
mov
fcmovb
in
jno
inc
xchg
rcrl
int
lahf
int3
push
ss
jno
insb
into
jne
fcoms
lock
pop
jge
pop
out
sahf
cld
jecxz
imulb
mov
lea
or
ljmp
sar
loopne
mov
pushf
rclb
mov
and
pop
xor
xor
pop
and
adc
cli
movsb
sbb
pop
adc
leave
and
ds
add
aaa
xlat
aam
cmp
xor
jno
mov
lcall
inc
addr16
push
and
sbb
sub
leave
or
adc
das
cmp
stc
fstps
cli
fisubrs
hlt
aaa
mov
in
push
repnz
jl
fistl
pop
imul
mov
aam
sti
js
and
stos
lret
inc
aam
or
mov
outsl
push
adc
imul
and
sub
fsubl
jno
je
dec
mov
add
shlb
aas
int3
mov
xchg
ret
stc
lret
jb
inc
test
mov
out
sub
cmpsl
cmp
inc
push
mov
mov
loop
jno
mov
mov
pop
adc
je
mov
stc
cmp
pop
int3
gs
inc
aad
jmp
std
loopne
jg
test
fs
leave
popf
add
jl
sbb
xor
jne
adc
mov
enter
cmp
daa
adc
fs
pop
popf
push
fmul
std
pop
pop
sub
or
pop
fcmovnu
dec
jbe
repz
std
jmp
add
push
mov
js
inc
pop
fsub
popa
jp
sbb
inc
mov
and
daa
jae
dec
mov
and
xchg
jp
aaa
lret
in
mov
cmc
repz
mov
sbb
xchg
stos
mov
cmp
mov
adc
push
push
repz
push
lds
dec
and
movsb
fwait
inc
fwait
orb
pop
push
mov
mov
dec
fadds
dec
subl
xor
ljmp
adc
pop
inc
sub
inc
xor
push
imul
clc
sbb
fadd
sbb
aas
imul
and
sub
jg
pop
rorb
sbb
test
hlt
fidivrl
dec
and
add
testl
icebp
lcall
jge
cmp
loop
fists
pop
sub
fs
xor
jmp
es
pusha
fisubl
pushf
push
ret
mov
and
jp
cmp
gs
mov
arpl
pusha
mov
ror
idiv
icebp
mov
mov
movsl
ljmp
test
xchg
testl
pusha
sub
hlt
push
movsb
mov
pop
pop
xchg
or
dec
fldcw
mov
sub
outsl
mov
pop
and
mov
cmp
jbe
jl
jno
outsl
bound
mov
xchg
clc
mov
dec
ljmp
sbb
xchg
aad
jp
and
adcb
jnp
jmp
in
mov
adc
xor
int
pop
dec
dec
mov
out
xor
dec
movsb
jns
outsl
bnd
int
mov
in
es
push
ljmp
adc
fsubrs
pop
dec
jg
cmp
xor
jbe
into
rcl
idivb
cmpsb
mov
sbb
sub
mov
aas
adc
and
inc
or
adc
add
shrl
insl
mov
inc
out
sub
scas
sub
mov
and
cmp
sub
cmpsl
addr16
enter
jge
push
stos
clc
in
das
mov
repz
mov
clc
mov
fbld
xor
and
lret
fdivrl
sbb
sub
or
loope
xor
js
mov
xchg
js
loope
add
enter
cmpsb
mov
or
sub
pop
js
dec
xor
xor
ljmp
aam
ret
and
and
sbb
test
lock
or
outsl
clc
add
lret
cwtl
lods
or
mov
mov
add
les
xor
jg
lret
shll
outsb
add
mov
test
dec
xor
push
stos
dec
lahf
cmc
dec
sub
call
divb
fnstsw
pop
cmp
bound
sbb
std
or
cmp
push
jg
fbstp
mov
mov
ss
jae
add
loope
out
mov
pop
xchg
xor
jb
sbb
dec
mov
mov
sub
xor
sbb
fwait
js
mov
in
int
push
ffree
ja
adc
nop
xchg
mov
mov
or
mov
push
cmp
pop
out
sub
ljmp
test
cmp
mov
dec
jne
xor
int
cmp
adc
addr16
dec
repz
sbb
insl
mov
call
push
add
movsb
mov
xor
mov
mov
popa
dec
or
movsb
jecxz
ret
mov
jle
mov
enter
mov
rolb
lret
mov
pop
sub
cmpsl
les
int
pop
adc
sarb
clc
je
clc
add
lock
fnstcw
sbbb
cmpsb
aam
enter
dec
inc
cmpsl
jg
mov
pop
fcmovnb
jl
stos
lret
leave
jne
mov
imul
inc
lods
jnp
fbld
cmc
jl
xchg
xor
movntps
ret
sahf
es
cld
call
idiv
mov
mov
jae
sub
ret
add
add
clc
lods
jo,pn
loopne
ror
in
mov
sbb
sub
sbb
out
xchg
sub
jmp
stc
xor
je
hlt
mov
pop
bswap
fisubrs
in
ds
lods
je
inc
push
pushf
add
int
mov
scas
mov
aam
in
push
cmp
dec
inc
int3
imul
or
jmp
cmc
xchg
cmp
push
mov
adc
sub
movb
mov
pmulhuw
idivb
jle
ljmp
call
out
adc
sub
idivb
and
lods
in
add
ljmp
xchg
or
adc
adc
pusha
add
jg
jmp
sub
dec
mov
dec
lret
addr16
push
mov
in
jecxz
sub
insb
jp
cmp
jnp
mov
push
xchg
lods
mov
lods
inc
dec
push
in
cmp
loopne
int3
test
mov
sbb
test
mov
je
popa
pop
ss
cmp
mov
and
sbb
ss
sbb
jo
je
into
out
push
pushw
pop
jle
outsl
and
sbbl
cmp
lahf
arpl
mov
fiaddl
cmpsl
sbb
inc
xchg
out
cmp
adc
cmpsb
in
rcll
pop
loop
sbb
xor
pusha
cmp
scas
inc
stos
and
jae
out
shlb
dec
push
mov
sbbb
sub
cmp
mov
mov
lret
jb
in
dec
and
or
sub
push
lahf
popa
cmp
push
insl
jne
aad
or
add
leave
dec
jle
bound
lods
inc
test
jbe
mov
sub
rol
and
xor
xchg
cmc
test
div
dec
inc
out
dec
loop
jmp
cmp
sbb
ret
fstl
pop
add
sub
cmc
sti
fs
rolb
xchg
mov
lahf
sbb
cmp
andl
insb
sub
pop
or
mov
mov
filds
test
cmp
stos
cmpsb
outsb
jne
or
mov
mov
inc
xchg
test
or
pop
ss
pushl
push
fstl
lret
jnp
xchg
nop
or
pop
cmp
push
jbe
push
call
int3
je
mov
ds
sbb
xchg
ja
or
sub
mov
adc
xchg
insl
xchg
ficomps
sub
negl
in
push
xor
sbb
inc
push
xor
sub
mov
jmp
adc
mov
xchg
movsb
dec
pop
or
add
bound
mov
stos
jge
inc
push
push
andl
pusha
rclb
sub
add
fnsave
fcompl
stos
movsl
bound
insb
je
loopne
inc
xor
pop
out
nop
add
inc
movsl
cmp
mov
lds
pop
xchg
sbb
movsl
pop
arpl
xchg
xor
mov
pop
xor
insb
jge
subb
lods
push
jp
add
add
adc
stc
xchg
int
shlb
ss
xor
inc
adc
and
jp
inc
movl
test
loopne
ljmp
aas
loop
push
push
push
jbe
push
xchg
test
mov
push
ja
test
or
push
add
sub
fsubrl
shrl
sbb
leave
mov
ss
add
jmp
nop
sub
jne
out
bound
mov
into
popf
arpl
inc
jle
mov
dec
icebp
sub
leave
pop
push
xchg
bound
std
ficoml
fxch
shrl
jp
out
and
popl
add
inc
pop
dec
nop
and
adc
stos
movsl
jmp
ficoml
shr
outsl
xor
mov
add
add
lods
int
ss
push
add
addr16
dec
xor
rcll
push
adcb
int3
cwtl
loope
pop
call
cmp
mov
jl
loopne
xor
xor
push
repz
or
adc
lret
lret
or
pop
out
ret
fcoml
idivb
pop
sub
sti
xor
aam
jne
loop
and
out
adc
adc
sub
adc
mov
mov
orb
fldl
lret
sbb
mov
out
xchg
xchg
mov
mov
stos
sub
sbb
flds
in
dec
xor
fs
in
negl
or
adc
pop
xor
loop
std
leave
jl
fldenv
cmp
jo
inc
int
pop
mov
stc
fisubrl
sub
cmp
shl
sbb
testb
ds
and
pop
mov
jns
iret
mov
out
into
pusha
or
sbb
push
call
ret
outsb
mov
ret
fs
dec
sub
ret
push
test
sbb
insb
testl
jbe
sar
cmpsb
insb
lds
sbb
pop
and
andl
addr16
call
and
mov
sbb
push
pop
dec
subl
ss
xchg
movl
dec
imul
pop
mov
dec
dec
out
std
pusha
lds
out
hlt
mov
sbb
or
add
xor
fsubs
arpl
outsl
xor
mov
fildll
push
sbb
jo
sub
aas
ja
jg
jno
sbb
fistps
fstpt
std
loopne
sbb
pushf
jmp
in
add
enter
shrb
mov
mov
aaa
lock
enter
out
popf
mov
cwtl
out
in
sarb
mov
dec
shl
cmp
loopne
jl
ss
scas
add
outsb
xchg
pop
xchg
aas
aaa
cmpsb
pop
movsl
dec
cltd
dec
pusha
and
jns
nop
mov
scas
iret
mov
iret
cld
jne
push
movsb
pop
imul
push
out
xchg
adc
add
js
test
outsb
stc
aam
out
jbe
aas
push
xchg
jp
or
push
mov
push
gs
cmpsb
loop
push
pop
sub
addr16
cmp
mov
lret
outsl
dec
fwait
cld
mov
test
lahf
sub
pushf
rorb
adc
sbb
bound
stos
fwait
lahf
mov
clc
rol
ret
scas
adc
out
hlt
test
and
dec
inc
arpl
sarb
int
insb
call
and
fs
and
insl
push
inc
jl
cmp
pop
in
sti
fidivrs
sbbb
mov
imul
fs
sti
mov
mov
push
jo
pusha
mov
daa
rcll
cli
add
push
inc
or
les
sbb
mov
leave
cltd
lods
lret
adc
mov
jle
movsl
sub
xlat
add
xchg
dec
inc
hlt
pop
lcall
imul
sarl
push
loope
fwait
pop
mov
mov
mov
and
sub
icebp
iret
lock
ret
adcl
shll
fmuls
jmp
ljmp
and
mov
add
cmp
add
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
jmp
scas
fldl
movsl
jl
stc
mov
out
mov
adc
and
jl
or
xor
or
clc
xchg
outsl
dec
js
ds
fsubl
and
pop
and
dec
outsl
jno
push
mov
insb
insl
xor
jp
jle
or
pop
mov
call
enter
sub
cmp
mov
loope
negb
push
mov
sbb
inc
ffree
aaa
push
out
hlt
push
filds
pusha
xor
add
and
and
fsubl
imul
test
jecxz
mov
insb
ja
mov
xchg
pushf
fildll
inc
xor
cli
fiadds
xor
clc
xor
ror
popf
mov
mov
jne
xchg
repnz
movsl
xchg
fdivr
dec
movsl
stc
cmovbe
lea
mov
test
jp
outsb
icebp
mov
test
fisttps
xchg
push
jnp
mov
sub
push
enter
and
xchg
gs
iret
mov
dec
jge
outsb
dec
out
xlat
push
mov
jb
inc
out
adc
mov
lds
ret
or
pop
cmp
xor
jae
nop
xor
xchg
and
mov
pop
xchg
cld
loopne
sti
fcompl
jge
stos
adc
cmpsb
and
loop
xchg
lret
call
fwait
sahf
lret
jle
std
push
fisttpl
les
js
dec
in
sub
adc
pop
xor
push
mulb
and
jno
sub
imul
mov
cltd
scas
adc
ljmp
add
js
fs
sarl
cmovns
fwait
pop
or
jnp
ljmp
xor
bound
cmpl
lret
xor
jno
pop
repnz
adc
test
into
ficomps
sub
andb
imulb
dec
leave
jne
sbb
jmp
add
lret
fldt
rolb
pop
mov
mov
lret
out
fisttpll
xchg
xchg
loope
xor
xchg
sub
xchg
adc
ret
sbb
cmp
icebp
cli
movsl
push
add
pop
push
cmp
rcll
inc
jne
xchg
cld
ffreep
test
push
aad
ss
add
jg
ljmp
add
aaa
mov
or
push
or
push
push
push
push
mov
add
lahf
lods
adc
and
aas
cmpsl
loopne
cwtl
push
pop
imul
inc
sbb
or
out
push
loopne
mov
cmc
or
inc
arpl
sarl
lea
pop
and
stos
dec
xor
jmp
jae
nop
dec
mov
fwait
and
in
jge
ret
mov
add
fisubrl
fisttps
js
sbb
pop
cmp
orb
mov
mov
fnstcw
aas
and
addb
push
dec
cli
push
leave
daa
test
insl
pop
sub
sbb
aas
xchg
or
mov
aas
sub
fldcw
mov
pop
data16
mov
in
aad
cli
adc
and
push
je
loop
mov
out
mov
iret
ret
mov
inc
mov
sti
test
mov
xor
or
ret
mov
adc
imul
and
xchg
push
xchg
adc
cmpl
imul
hlt
sub
aad
scas
mov
in
adc
lock
lret
xchg
sub
adc
fs
scas
aas
js
sti
arpl
callw
cs
adc
clc
xchg
sub
and
add
jg
fisubs
loopne
stc
jl
mov
pop
pop
clc
xchg
xor
push
xor
mov
fwait
cs
pop
into
push
movb
out
pushf
ret
jmp
int3
loopne
sbb
std
push
stc
notb
int
cmpsl
mov
pop
aaa
pop
ljmp
lahf
add
add
pop
jno
rcrb
xchg
push
sbb
dec
sbb
aas
lds
lock
mov
sbb
xchg
popl
mov
and
insb
cld
sub
fwait
xchg
push
fs
push
imul
jle
cmp
inc
stc
jne
mov
fsubrl
jge
stos
movb
mov
les
push
sahf
add
imul
xor
mov
stc
mov
fwait
push
fwait
push
xchg
pop
sub
fcmovbe
sbbl
mov
sbb
movsb
xchg
xor
movsb
mov
cmp
ret
jns
iret
jmp
sbb
push
sti
or
sub
adc
cmp
loopne
ss
arpl
pusha
int3
in
lahf
add
xlat
mov
repz
out
jmp
mov
pop
inc
das
sbb
xchg
xchg
enter
xchg
fsubs
ror
lret
fwait
xchg
fidivrl
sbb
iret
lss
ljmp
xchg
pop
jge
or
sub
push
mov
and
and
dec
adc
add
fisttpl
push
push
fcoml
and
adc
jno
dec
cmp
xor
lcall
and
das
imulb
cmp
xor
mov
pop
aam
sbbl
dec
sti
sub
push
and
hlt
xor
cmpsb
ja
mov
sub
bound
and
inc
cmp
shrb
cmp
xchg
shrb
inc
sub
out
popf
xchg
jns
stos
fucomip
lods
add
insl
inc
dec
fdivl
sbb
aaa
xchg
jnp
icebp
data16
pop
mov
mov
or
cli
lahf
cmp
ud2
std
cli
cwtl
cmpsl
ret
repz
movsb
mov
dec
jl
or
sbb
loop
popf
test
fisttpll
xor
cmp
movzwl
inc
xlat
mov
push
cs
sbb
inc
inc
mov
cmp
xchg
xchg
into
fcomip
shll
cltd
xchg
rcll
pop
push
cmp
lods
mov
cmpsb
mov
stc
lds
cmp
inc
cmp
jmp
cmpsl
or
pop
shll
out
mov
jmp
xlat
cmp
mov
loop
dec
adc
push
pop
pop
test
or
push
mov
ud0
flds
pushf
lea
adc
iret
cmp
xor
mov
icebp
or
add
mov
mov
inc
pop
inc
and
and
push
je
gs
shll
stos
cmp
fs
lods
push
out
outsl
xchg
and
sub
lods
dec
lcall
push
sarb
test
mov
or
and
movsl
repz
test
dec
mov
cmp
int
lcall
xor
and
jmp
jne
add
subl
xchg
pop
push
mov
adc
and
and
mov
test
inc
outsb
xlat
mov
mov
cmp
push
das
test
adc
pop
mov
dec
inc
mov
aad
add
adc
aas
not
jl
int3
test
push
enter
inc
mov
movsb
test
scas
jge
mov
or
push
cs
push
sub
daa
jle
cld
add
lret
insb
das
clc
adc
aad
out
fwait
cmpsb
and
adc
sbbl
pop
push
push
int
cmpsb
in
pushl
scas
dec
adc
sarl
ret
xchg
leave
dec
mov
out
and
repz
hlt
jge
test
fmul
sarl
jbe
call
push
loope
imul
xor
mov
testb
dec
notl
jae
filds
ja
mov
or
mov
cli
cmpsb
dec
jno
xchg
adc
das
and
or
insl
pop
sbb
pop
aas
daa
in
loopne
and
inc
stos
dec
dec
lea
mov
sbb
fcompl
arpl
mov
clc
ds
inc
stos
movsl
fimull
xlat
testb
xchg
cmovbe
mov
xchg
aas
lods
push
push
sub
mov
jo
xchg
lds
inc
dec
cmp
aas
or
pop
sbb
lods
lret
lret
sbb
pop
mov
loop
andl
adc
inc
clc
test
aas
dec
jg
inc
pop
xor
cmp
arpl
int3
jmp
push
divb
pop
and
in
dec
frndint
aas
neg
sbb
jmp
and
inc
push
mov
push
stc
xchg
icebp
insl
int3
cmp
jnp
xor
push
lret
cld
insl
xor
pop
sahf
mov
jp
dec
popa
mov
fstpl
enter
int
subl
mov
lock
ret
jno
es
jl
xchg
mov
dec
push
sbb
push
sti
popa
js
sti
mov
xlat
xor
repnz
loop
out
popf
mov
push
subl
jbe
bound
mov
jno
lods
es
xor
fidivl
xchg
lret
xchg
and
ja
gs
xor
sub
push
call
int3
and
fdivrl
add
out
fs
int
aad
test
sbb
or
enter
jne
lahf
pop
dec
lret
stos
sub
and
sub
pop
jo
fildl
jg
xchg
std
sbb
jmp
push
mov
jns
in
inc
mov
data16
jp
stc
mov
arpl
sub
nop
mov
pop
pusha
leave
sbb
lret
pop
push
insl
les
dec
dec
lods
or
and
in
out
jae
push
pop
push
inc
jg
mov
lcall
scas
scas
jno
jo
je
popf
addr16
xor
stc
movsl
jno
sahf
inc
sbb
subb
dec
or
popa
push
xchg
insl
shlb
push
mov
push
dec
adc
pop
push
cmpsb
aad
push
add
dec
or
clc
push
loopne
mov
mov
scas
adc
adcb
movsl
cmp
xor
xchg
loopne
movsl
jnp
sub
das
aad
div
imul
mov
lods
push
mov
repnz
xchg
lcall
dec
pop
repz
mov
imul
mov
or
ret
sub
orl
xchg
pop
ss
fcompl
sbb
mov
push
pop
jbe
adc
lahf
inc
into
jno
enter
lret
add
stos
into
jge
dec
add
mov
jno
idivb
xlat
daa
popa
rcll
daa
push
inc
aam
adc
inc
or
cmp
stc
aam
pusha
ss
in
push
stos
ds
cmp
out
jns
xchg
imul
call
pop
add
orl
in
and
add
insl
mov
xchg
das
int3
imul
xchg
mulb
mov
xor
pop
out
test
aad
xchg
dec
imul
or
push
in
lret
test
adc
in
or
jb
inc
pop
insb
mov
cs
jp
mov
pop
les
sub
mov
repz
inc
or
mov
inc
adc
push
xchg
xchg
cs
sbb
cwtl
dec
shlb
stos
into
fmull
pop
es
inc
or
mov
push
cmp
sbb
pop
inc
xlat
outsl
sbb
jns
dec
popl
outsb
inc
loope
cmp
bound
sarb
push
int
mov
xlat
leave
subb
pop
and
mov
jo
rcll
in
and
andl
xchg
sub
ret
xlat
rcl
cmp
insb
xchg
or
mov
dec
sahf
popf
push
fnstsw
outsb
gs
je
pop
mov
in
outsb
rorl
cltd
or
mov
out
popf
cmp
inc
loopne
data16
xchg
ss
adc
in
scas
loope
movsl
mov
jg
fdivp
xor
fmull
mov
cmpsl
repnz
dec
dec
stos
das
pusha
ds
jbe
add
fistps
or
cmpl
push
test
test
sahf
ja
or
add
test
sub
cld
rcrl
jp
adc
lret
sub
sub
pop
dec
jmp
dec
jae
cmp
push
mov
sbb
mov
dec
mov
mov
repnz
movsb
pop
les
push
insb
out
sbb
arpl
imul
mov
shlb
out
lahf
mov
loope
call
sub
mov
sub
leave
mov
and
outsb
sbb
repz
pop
cmp
arpl
mov
sbb
repnz
loop
test
push
mov
ljmp
hlt
popa
pusha
sub
mov
ret
outsl
insb
mov
pop
xor
and
adc
lods
shll
xchg
pop
inc
das
sbb
or
add
lret
or
jl
or
jp
ror
mov
mov
xchg
push
les
xchg
sti
popa
mov
mov
sbb
dec
dec
sahf
dec
mov
push
sub
adc
ret
in
add
cmpsl
inc
dec
bound
adc
add
ret
or
mov
arpl
and
pop
push
imul
test
mov
push
pop
orl
loope
ja
in
and
iret
mov
jp
xchg
les
xor
cmp
push
inc
or
mov
out
mov
push
mov
add
mov
add
jmp
nop
shrb
sub
addr16
sub
pop
xchg
js
adc
and
dec
sub
mov
ret
jb
flds
push
std
enter
mov
ja
pop
insb
mov
inc
gs
xlat
rorb
sbbl
push
lods
icebp
adc
daa
add
xor
sti
insl
mov
sbb
int3
push
hlt
dec
jnp
rcll
jo
adc
dec
test
dec
aas
push
sub
inc
dec
in
je
lahf
shll
add
xor
mov
cli
int
xchg
mov
scas
enter
icebp
enter
cwtl
mov
adc
fmuls
fldl
sbb
cmc
mov
jb
mov
xchg
jb
fsubr
hlt
push
jbe
xchg
inc
mov
adc
aaa
call
jo
rcrb
test
pop
sti
add
mov
push
movsl
pop
xor
cltd
adc
xchg
pusha
sub
cmp
popa
cmp
add
mov
mov
jle
fisubrs
jl
push
sahf
add
js
push
ficomps
dec
lcallw
into
insb
or
movsb
roll
les
inc
call
push
xchg
cmp
mov
mov
and
int3
add
out
inc
lea
jecxz
xor
xor
lods
test
xchg
outsl
mov
cwtl
lahf
add
jb
sbb
notb
int3
lock
addr16
das
sub
pop
lock
jp
dec
cmove
xchg
cmp
pop
arpl
ret
or
add
rcr
ss
in
scas
sarw
mov
dec
sbb
pusha
inc
aaa
pop
sub
int3
sbb
test
fcmove
test
out
call
ret
xor
stos
cld
orb
fcompl
pushf
stos
aaa
mov
outsb
cmc
inc
xor
mov
push
and
xlat
adc
jl
xor
iret
cmc
ret
cmc
fcmovnu
rorb
inc
pop
mov
loope
rep
mov
scas
push
mov
cltd
scas
push
je
lods
test
loopne
leave
fwait
pop
add
fs
xchg
out
daa
sar
rcl
sub
xlat
jae,pt
movsb
cs
cwtl
sbb
mov
jno
test
jns
inc
mov
lea
pop
lock
cli
pop
lods
daa
rclb
add
xorb
sbb
xor
xor
sarb
lcall
fwait
xchg
pop
dec
pop
scas
jg
mov
mov
cltd
sbb
xchg
or
fsubr
out
sub
aad
pop
xor
sti
cmp
pushf
aas
jl
rep
add
push
sub
sub
mov
repnz
lcall
gs
js
imul
into
pop
inc
mov
icebp
mov
mov
xchg
hlt
popf
sub
and
stos
aas
sbb
push
les
push
imul
sub
xchg
cmpsb
sbb
pushf
and
xchg
pop
movsl
gs
outsb
in
scas
jp
jo
xor
fidivrs
sbbl
or
xchg
loop
scas
jge
aam
rclb
mov
inc
cmp
out
addr16
cmp
sub
movsb
mov
cmp
cld
pop
sbb
push
push
movsb
push
rolb
push
xchg
lods
or
sub
xchg
js
ds
pop
and
and
jbe
mov
adc
mov
lds
and
sub
fwait
aad
jmp
xor
cmp
clc
fadds
sbb
pop
mov
or
adc
scas
xchg
ja
jmp
pop
cltd
jmp
inc
xchg
les
fcompl
pop
or
mov
inc
inc
adc
dec
xor
sbb
and
push
sbb
ret
mov
aaa
mov
repz
mov
pusha
mov
pusha
sar
pop
movsl
jmp
loop
das
pop
and
mov
sbb
movsb
mov
scas
sbb
xchg
cmp
jle
xor
roll
push
insl
pop
jl
dec
dec
mov
sub
push
mov
pop
test
jnp
lret
add
jge
pop
das
jb
adc
sbb
jle
xorl
pop
jae
mov
push
rcr
dec
sbb
leave
shll
into
xor
sti
xor
imul
scas
inc
dec
xchg
add
mov
inc
adcl
and
xchg
add
mov
cmpsb
lea
mov
xchg
xor
mov
mov
and
push
ljmp
jp
xchg
cmp
mov
clc
jge
or
dec
enter
outsl
jp
std
cmc
int3
test
sbb
dec
pop
sbb
lahf
enter
int
pop
add
stos
and
add
sub
lods
add
dec
lods
mov
mov
xor
das
incl
fs
add
sub
adc
mov
addr16
xor
pop
mov
ret
push
jmp
xchg
out
dec
inc
mov
pop
cltd
mov
pop
lahf
sbb
pop
add
insb
in
sbb
xchg
out
ds
add
xor
sti
nop
lahf
mov
mov
out
sbb
in
or
xchg
mov
inc
icebp
das
inc
sub
or
lcall
mov
mov
je
addr16
rcll
test
rorb
ja
cmpsb
mov
xor
xor
outsb
or
pop
shl
lret
jbe
dec
xchg
dec
mov
dec
dec
and
jns
xchg
out
push
mov
add
scas
dec
aam
push
negl
in
push
sbb
jmp
sbb
mov
call
shrl
add
xor
sarl
jae
jmp
lea
aas
repz
or
sub
or
xchg
add
test
inc
and
and
inc
inc
stc
stos
xchg
lds
adc
or
or
cmp
push
addb
xrelease
pop
cmpsl
outsl
cmp
insb
fisubl
test
shlb
sub
mov
mov
jmp
es
adc
xor
dec
xchg
fists
adc
xor
inc
cmp
mov
add
xchg
sti
inc
incl
shll
repz
fcoml
dec
add
es
mov
dec
sub
sarb
jmp
fsubp
jecxz
xor
hlt
pop
je
js
lahf
xor
mov
cld
fimuls
or
adc
dec
adc
xchg
shll
add
cs
cmpsb
bound
cmpsb
mov
xor
xor
outsl
and
fldcw
mov
mov
dec
rcl
lods
inc
sbb
sub
nop
mov
push
fdivl
ret
push
add
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
jmp
push
gs
pop
out
dec
push
push
add
mov
std
xchg
add
clc
je
popw
push
jno
cmc
xchg
adc
mov
rorl
repnz
jl
mov
loopne
in
push
xchg
lcall
pop
sbb
not
pop
xchg
push
cmpsl
xlat
mov
mov
mov
sub
or
cmp
and
pop
rol
cmp
repz
mov
pop
mov
push
rcl
xor
xor
mov
push
dec
outsl
leave
aam
inc
ret
out
inc
pop
leave
aam
lock
xchg
push
pushf
lcall
pop
inc
ja
jne
lea
nop
add
pushf
adc
xchg
mov
mov
into
shll
jns
or
nop
mov
fistl
subl
mov
dec
push
inc
scas
sub
mov
std
bound
test
insl
sahf
push
xor
mov
xchg
sbb
mov
popl
adc
out
int3
or
shl
pop
gs
push
add
adc
test
in
jmp
ds
stos
icebp
mov
fisttps
pop
mov
aaa
pop
fiadds
ljmp
pop
mov
in
ret
jb
lret
scas
xor
je
stc
cmp
mov
movsl
sub
mov
jecxz
js
loop
fistpll
add
mov
xor
dec
mov
aad
adc
clc
insl
jle
push
and
cmpsb
sbb
mov
cltd
out
out
sub
cmp
or
in
call
out
insl
pop
dec
fs
push
mov
inc
lcall
ret
imul
pop
call
dec
add
xchg
mov
pop
dec
sbb
sbb
sti
in
sub
loopne
add
xchg
jbe
cmpsl
stos
xchg
mov
sbb
jns
pop
adc
mov
iret
scas
xchg
mov
lahf
xchg
pop
std
push
aas
mov
shrb
xchg
add
loop
or
xchg
or
sahf
call
mov
mov
xchg
or
sbb
push
popa
mov
cltd
push
sti
dec
data16
stos
or
std
ja
jmp
xchg
jbe
imul
scas
test
fldcw
mov
int
fcomi
popa
enter
int
dec
call
push
js
xorb
ljmp
ds
xchg
movsb
into
ficoml
les
jp
cmpsb
jecxz
mov
and
and
loop
aam
sbb
lock
cld
rorl
lods
clc
mov
sahf
cmp
fmuls
push
mov
gs
and
shrl
test
push
imul
cmp
pop
mov
rorb
int3
jns
std
aam
mov
jge
adc
inc
out
dec
cli
cmp
fidivl
cmp
sbb
in
leave
in
mov
ret
mov
outsb
push
ja
shll
xchg
mov
push
fdivrl
stc
cs
mov
in
rorb
adc
pop
xor
insl
xchg
adc
push
push
je
cltd
sahf
xlat
xor
xor
fwait
aas
jl
enter
fcmovnbe
pop
pop
lahf
in
shrl
sbb
ret
mov
xor
mov
imul
scas
icebp
movsl
sbb
out
add
push
mov
push
mov
ljmp
adc
sub
add
xor
add
xchg
arpl
pop
popa
adcb
jl
xor
xor
out
dec
mov
stos
mov
sahf
lds
repnz
add
jecxz
pop
push
shll
and
sub
sub
inc
push
adc
mov
jmp
mov
jmp
sub
sub
sbb
cld
aam
fstl
aas
outsl
cmp
ds
jecxz
aas
add
push
into
and
pop
sub
cmp
dec
mov
cltd
jl
out
xchg
test
pop
xor
fistps
add
push
icebp
push
rcrl
xchg
aaa
xchg
test
mov
jge
mov
pop
or
std
cmpsl
and
sub
into
pusha
mov
int
cmc
push
sub
mov
stos
je
add
add
clc
mov
pop
dec
lahf
sbb
adc
push
add
xor
fcmovnu
or
in
and
xchg
xchg
mov
or
adc
ja
leave
lods
lods
adcb
xor
je
jg
xor
dec
xor
sahf
les
cli
je
movd
fldl
mov
outsl
sbb
mov
out
jmp
fdivs
mov
into
push
mov
nop
aad
add
lcall
fistpl
scas
fldenv
inc
stos
mov
xchg
jecxz
mov
fs
jnp
popf
pop
out
movsl
xor
outsl
outsl
enter
fdivrl
mov
in
stc
mov
les
insl
or
popf
mov
inc
pop
and
pop
pop
inc
mov
je
insb
or
inc
fimuls
mov
jge
add
add
insb
js
adc
neg
loop
mov
fildll
xchg
mov
jns
mov
lahf
mov
push
cmpl
adc
rep
xchg
jg
je
cltd
dec
xchg
xchg
repnz
jb
iret
push
mov
dec
sbb
add
mov
jns
ljmp
xor
add
cmp
mov
adcl
cld
mov
cmp
push
es
imull
cmp
xchg
xchg
dec
gs
out
fdivrl
lods
ds
lea
sar
push
xlat
and
lds
mov
xchg
mov
and
cmp
std
jecxz
cltd
dec
fsubrl
inc
inc
pushf
outsl
jge
mov
xchg
or
fwait
pop
add
add
enter
cmpsl
add
add
lret
mov
cmp
and
jnp
add
mov
lcall
out
cmc
clc
daa
lret
outsb
popl
mov
cmp
jb
ss
xchg
xchg
mov
rorl
add
xor
cld
sarl
sbb
or
mov
ja
mov
xor
mov
rorl
sub
shr
inc
push
loope
in
push
sbb
fwait
cmp
test
push
loop
dec
cmpb
sub
sub
dec
shrb
mov
int3
dec
or
mov
fcom
xchg
sbb
popf
pop
sub
hlt
sub
std
mov
popa
sbbl
stc
roll
inc
or
sbb
or
xchg
add
lods
push
pop
dec
push
rolb
add
sbb
and
jl
lfs
fstpt
pop
mov
ss
mov
call
nop
pop
add
sbb
push
adc
xchg
int3
xchg
adc
and
or
sarb
xchg
cmpsb
jmp
push
in
pushf
jo
cmp
and
andl
aam
xchg
js
gs
loope
xor
ret
cld
dec
mov
pop
or
hlt
pop
in
jo
push
push
xchg
mov
daa
divl
sahf
jo
cs
outsb
addb
xchg
out
push
jle
adc
sub
xchg
clc
add
jb
mov
fists
ljmp
xlat
int
xchg
xor
sarl
movsb
stos
ss
pop
pop
enter
fildll
scas
mov
jmp
cwtl
fisubl
scas
aaa
in
in
cmpsl
cmc
add
stos
cmp
out
stos
or
inc
jp
data16
cmp
and
test
sahf
push
orb
jg
scas
jle
push
icebp
outsb
cwtl
xor
pop
adc
lds
adc
mov
insl
fcoms
mov
addl
cmp
sbb
push
jp
sbb
mov
sbb
ja
lods
dec
popf
jne
stc
adc
mov
mov
or
pop
bound
cld
rol
inc
frstor
mov
xor
ret
jecxz
xchg
sbb
inc
insl
fstl
cmp
push
sar
jge
dec
sub
insl
xchg
push
sti
ds
pop
or
push
jle
add
push
sbb
rclb
and
push
mov
out
jp
orb
addb
or
pop
fldl
push
mov
cli
jae
mov
loopne
lds
sti
push
dec
js
xor
inc
std
inc
push
and
mov
clc
lret
xor
shlb
inc
mov
pop
movsb
push
inc
pop
mov
pop
test
push
js
mov
or
fnstcw
pop
add
push
inc
stc
inc
int3
lret
testl
mov
icebp
adc
mov
movsl
xor
cmp
jb
out
mov
ret
adc
or
push
cmp
fcmovnbe
test
sub
enter
dec
mov
push
mov
sti
and
lea
std
lret
ljmp
and
test
fidivrs
and
push
aam
adc
fwait
cmpl
push
push
mov
test
clc
jge
jb
outsb
nop
leave
fs
mov
sub
dec
jmp
lcall
orl
pusha
cmp
xchg
mov
xor
sbb
inc
cltd
vpextrw
lds
shlb
xor
xor
cmp
add
cld
ljmp
cmp
clc
jmp
push
aaa
addr16
push
scas
adc
mov
cmpl
or
mov
out
call
arpl
jg
loop
sub
mov
cli
outsb
mov
shrb
divb
sbb
jp
shr
icebp
inc
insl
jo
loope
shrl
shll
cltd
repz
jae
shl
cmpl
and
jge
xchg
fnsave
adc
cmpsb
push
shll
jl
xor
loopne
dec
test
mov
inc
aam
ficoms
jo
imul
xor
rcr
mov
inc
aad
push
fildll
cltd
push
sub
mov
es
sbb
jle
enter
or
outsb
sub
cs
pop
mov
neg
xorl
push
or
daa
add
fistpll
jne
repz
loopne
imul
ret
pop
cmpsb
push
mov
mov
lds
adc
inc
inc
pop
stos
insl
dec
leave
ja
dec
inc
rcrb
cmc
aas
push
fisubrl
addb
xchg
or
je
xor
lea
movsl
loopne
stc
movsl
cld
nop
push
inc
push
jne
outsb
cmp
push
adc
dec
mov
loopne
mov
imul
inc
or
mov
xchg
dec
dec
sbb
in
aam
mov
repz
cmp
add
xor
cwtl
lret
stos
push
fisubs
jle
ja
mov
gs
out
repz
mov
mov
fistps
popl
idivb
pop
andb
pop
das
int
cwtl
lret
lods
fistpll
stos
dec
nop
insb
mov
or
add
inc
adc
outsb
xchg
dec
adc
dec
jne,pt
mov
test
or
lds
repnz
mov
in
mov
jbe
mov
sahf
and
cmc
stos
in
test
inc
xchg
sti
pop
jne
mov
pop
jne
and
js
push
dec
add
icebp
mov
movsl
out
pop
mov
divl
pop
jbe
add
fisttps
scas
daa
repz
es
cmp
inc
mov
sub
mov
jl
add
push
mov
adc
lods
out
in
lods
adc
dec
lea
push
push
cld
rcl
out
jno
and
dec
mov
and
cmpsw
das
adcl
cltd
mov
clc
imul
shlb
mov
aaa
mov
or
adcb
lret
int3
adc
xor
dec
int3
hlt
inc
add
xor
push
inc
outsl
test
pop
rolb
push
arpl
push
roll
fwait
loop
or
and
xchg
cld
inc
pop
imul
dec
cld
inc
lds
call
gs
adc
inc
aam
scas
mov
out
cmp
push
adc
dec
push
in
xor
xlat
cmpb
jmp
and
loop
ljmp
jno
mov
repnz
push
mov
pop
frstor
loopne
out
arpl
arpl
mov
inc
mov
fwait
sub
insl
dec
xor
adc
push
pusha
adc
arpl
psadbw
nop
arpl
rcll
xor
xchg
mov
imul
ljmp
insb
arpl
dec
jg,pt
push
std
dec
xorb
scas
add
adc
aad
push
test
xchg
adc
bound
push
xchg
jecxz
in
mov
jne
push
mov
call
lock
or
daa
in
adc
jge
adc
test
pop
add
outsl
xchg
push
ss
cli
das
push
mov
stos
xchg
ja
ljmp
idivl
sub
aas
loopne
inc
pop
loopne
cli
push
lahf
testl
imul
mov
mov
cmpsl
push
dec
outsb
sub
adc
sti
fiaddl
inc
sbb
pop
mov
sbb
sub
lcall
cld
fiaddl
xchg
lahf
mov
push
cs
cli
sahf
inc
mov
dec
mov
jle,pn
rol
addr16
xchg
jae
dec
pop
dec
inc
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
cmpl
jg
mov
add
jmp
pushl
call
push
jmp
addb
add
xor
js
xchg
jno
daa
jmp
cmp
push
das
repnz
daa
add
insb
xor
jne
inc
and
pop
mov
xlat
push
call
fistl
mov
movsl
jmp
sub
loopnew
xor
repnz
fwait
hlt
pop
pop
in
mov
popa
adc
stos
push
ja
fwait
push
insb
adc
out
sbb
bound
les
xchg
inc
adc
mov
pop
and
ljmp
in
xchg
in
je
jg
xchg
sbb
sbb
push
inc
imul
pushf
mov
mov
mov
jnp
call
or
in
sahf
test
sub
jae
mov
sub
mov
jl
jns
xlat
dec
loope
shll
jnp
cmp
lds
inc
stos
add
call
call
lcall
pushf
push
dec
outsl
sbb
aas
jnp
add
inc
push
adc
inc
bndldx
in
sti
cmpsb
pop
fs
jle
inc
adc
rorb
push
mov
mov
jmp
jbe
icebp
sub
dec
sbb
mov
loopne
repz
mov
or
dec
sbb
dec
dec
xor
xchg
movb
test
pop
bound
cmp
jg
sub
lods
movsl
dec
or
outsl
cmpsl
fnsave
stos
jno
fstpl
pop
je
push
jmp
lds
pop
ret
push
xor
or
fisttps
inc
and
xor
mov
loopne
dec
xchg
pop
mov
and
test
and
cwtl
jno
pinsrw
lods
rorl
mov
mov
cmp
inc
loopne
call
xor
xor
push
addr16
cltd
xchg
sub
pop
push
les
imull
inc
xor
mulb
dec
daa
mov
xor
add
dec
lods
xchg
cld
es
imul
adc
jge
pop
xor
or
lock
xchg
repz
or
cmpb
fucomip
aad
lds
jae
adc
and
or
fsub
pop
mull
testb
sbbb
cmp
or
fistl
mov
jb
pop
add
mov
or
aad
sub
sbb
add
inc
mov
pop
jbe
leave
mov
add
sbb
clc
push
cltd
dec
xchg
mov
adc
add
jge
mov
dec
jecxz
ret
and
and
cld
push
and
push
and
or
stc
pop
jge
es
lcall
fdivl
pop
add
shrb
sub
insl
adc
sub
sbb
mov
loopne
sbb
rcll
sub
aad
call
mov
xchg
pop
cld
movsl
push
out
sbb
mov
cmp
mov
xchg
push
xlat
dec
out
jmp
addl
dec
cmp
and
lods
or
mov
cmpsb
jecxz
popa
andb
mov
and
mov
jo
filds
sbb
incl
mov
cmp
push
inc
shll
fistl
mov
sbb
xchg
mov
je
fsubrp
mov
jecxz
pop
add
jmp
jg
mov
jge
ljmp
xor
movmskps
push
pop
mov
xor
fstp
jg
fstps
mov
push
ss
and
sub
adc
addr16
adc
push
insb
xchg
jno
jns
adc
pop
cli
loope
fcompl
xor
stos
inc
jge
xchg
jmp
cwtl
fs
xchg
ret
loope
nop
inc
add
dec
dec
mov
leave
mov
jb
dec
fdivrl
int3
mov
add
inc
add
mov
xchg
daa
int3
cmpsb
out
jecxz
enter
ss
cmp
xlat
inc
mov
test
pop
ds
in
push
pop
xor
cltd
ffreep
lahf
or
inc
pop
xchg
popf
dec
xchg
arpl
out
sbb
jb
sub
mov
pop
fbld
addr16
loope
lea
in
test
popa
inc
fs
mov
sti
mov
xchg
cmp
mov
cmp
ret
loope
inc
ffree
shlb
std
push
inc
cmp
movsl
or
insb
xor
int
cli
mov
imul
or
insl
jmp
jb
nop
fsub
push
in
adc
xor
wbinvd
mov
inc
push
dec
jns
inc
loopne
mov
cmp
push
testb
imul
into
scas
adc
js
push
pop
push
inc
adc
sbb
xchg
jo
fnstenv
or
lea
adc
adc
repz
add
xchg
lcall
jg
xlat
arpl
jg
out
xchg
xchg
aam
adcb
jno
aad
mov
aad
frstor
orb
fcmovnbe
stos
iret
clc
fisttpl
jge
dec
roll
inc
ja
imul
sti
daa
sub
and
inc
push
mov
push
pop
arpl
push
icebp
and
sbb
je
je
inc
lea
mov
or
dec
dec
enter
outsl
mov
out
adc
test
outsl
adc
mov
movsb
jle
scas
fwait
xor
cli
cmc
mov
dec
pop
xor
xchg
push
dec
js
mov
dec
scas
xchg
clc
imul
stos
xor
xchg
out
and
shlb
mov
mov
mov
sub
dec
push
fisttpl
rcl
arpl
and
sti
neg
out
clc
std
std
mov
loope
addr16
stos
add
mov
nop
mov
nop
sub
dec
sbb
sub
push
lods
jae
or
inc
fistpll
insb
lahf
es
mov
and
into
js
lock
cmp
repz
in
ds
dec
fsubrl
mov
jge
rolb
fisubrs
mov
addr16
jle
aad
mov
xchg
fsubrl
popa
inc
push
je
add
xchg
mov
sbb
or
daa
insb
dec
arpl
pop
mov
aam
arpl
mov
int3
hlt
or
or
shl
movsb
shlb
repz
jb
shll
cwtl
cmpsb
lahf
mov
in
popf
jle
cmp
and
xor
ret
aas
push
jb
das
roll
orl
es
in
xchg
lods
mov
add
push
mov
cmpb
fwait
lahf
lret
sub
sbb
xchg
adc
pop
pushf
xchg
repnz
dec
in
mov
imul
dec
arpl
insl
mov
sbb
roll
das
js
xchg
jp
in
pop
cmpsl
clc
lods
aam
jg
call
xor
mov
aas
imul
and
pusha
inc
adc
xchg
outsl
je
push
xchg
out
push
mov
mov
xlat
scas
out
push
clc
in
push
ljmp
mov
cmc
pop
jb
rcrl
inc
inc
dec
hlt
imul
inc
xchg
pop
cmp
dec
jae
mov
push
leave
test
clc
lds
sti
ss
out
add
cmpsb
imul
mov
mov
cmpl
jge
movzbl
add
adc
jmp
push
push
push
pushl
call
shrd
jmp
outsb
fwait
push
movsl
or
movsb
js
push
faddp
sbb
jno
cmp
cmpb
lds
inc
mov
pop
into
add
add
add
sbb
xor
xchg
push
repnz
push
loop
enter
inc
xchg
sbb
rolb
inc
cmpsl
fstl
push
popa
sub
mov
inc
push
lcall
add
pop
insb
dec
clc
sbb
jno
pop
inc
xchg
test
outsb
xchg
pop
cli
xlat
insb
pop
dec
fwait
sti
cmp
jno
repnz
movsl
or
dec
and
ljmp
shr
fwait
in
sbb
pop
push
arpl
sbb
hlt
out
loopne
push
jns
adc
push
in
ds
sahf
insl
mov
scas
mov
or
xorb
fldt
movsb
inc
pop
hlt
inc
mov
addr16
lcall
ret
cmpl
scas
xlat
inc
mov
mov
into
sbb
popa
inc
shll
inc
mov
push
in
sahf
sbb
outsl
adc
out
in
sbb
jne
imul
xor
repnz
outsl
ljmp
rolb
adc
and
int3
dec
inc
imul
bnd
jmp
inc
lock
aaa
xchg
mulb
test
ret
lahf
cld
fsubrp
adc
icebp
jle
stos
and
mov
sub
loopne
stos
inc
inc
mov
push
stos
jae
repnz
add
pop
cmp
xchg
loope
loop
in
arpl
cmp
jne
arpl
inc
loope
arpl
mov
jo
jl
dec
xchg
out
inc
movsb
add
inc
xor
add
xor
shll
pop
mov
sbb
in
dec
les
int3
add
dec
jo
xchg
int3
inc
mov
mov
hlt
dec
push
pusha
and
mov
mov
aad
jne
mov
shl
dec
xchg
shrb
xor
sub
xchg
dec
xchg
test
fistpll
popf
imul
mov
cwtl
data16
mov
or
mov
adc
pop
pop
ds
into
gs
orb
mov
mov
outsl
lcall
pop
ret
jae
mov
sub
mov
aaa
orb
adcb
nop
mov
shll
mov
mov
pop
lods
push
movsl
arpl
cli
mov
mov
mov
jne
in
pop
push
leave
cmp
ret
fldenv
cmpsb
ja
popa
repz
repz
sub
or
lods
mov
lahf
loopne
xor
subb
cltd
adc
push
ret
ret
bound
dec
in
cltd
sub
sub
fisttpll
cmp
pusha
jae
cmp
pop
mov
inc
adc
xor
mov
stc
pop
into
fimuls
out
pop
jns
xor
mov
cmp
aam
add
arpl
push
shll
iret
rcll
pushf
sbb
movsb
xor
out
ss
push
xchg
dec
ja
outsb
divl
and
lds
xchg
bound
fs
test
lret
data16
mov
clc
inc
in
push
xchg
pop
or
xor
and
dec
or
adc
imul
jge
cmp
out
jnp
mov
lcall
out
dec
lds
mov
push
mov
fldl
lock
fbstp
sbb
add
xor
cmp
cs
push
ret
ja
push
jp
outsl
sti
or
mov
inc
and
mov
push
push
es
lods
sbb
in
lret
jecxz
pushf
aas
mov
cmp
pop
pushf
rolb
outsb
daa
mov
pusha
adc
jecxz
sbb
mov
les
pop
sbb
fstp
jnp
loope
mov
f2xm1
pusha
cmp
into
xor
cmp
jmp
es
jge
add
xlat
cli
mov
insb
jnp
ret
mov
notb
cmp
cmp
push
xchg
and
xchg
cmpsl
test
and
mov
out
out
outsb
fs
jl
adc
add
mov
push
fstl
dec
add
sbb
mov
daa
in
cmp
jbe
lret
jle
ret
push
dec
in
xchg
rcrb
push
fisubl
pop
add
sub
jne
xchg
mov
shll
mov
push
pop
xor
and
adc
roll
mov
loope
mov
inc
xchg
bound
sbb
xor
loope
xchg
insb
cs
jns
mov
rcrb
push
add
jne
dec
sbb
loop
pop
xor
push
mov
dec
sbb
test
xchg
out
pop
lods
and
pop
repz
inc
pop
xor
fadds
loope
das
je
pop
or
ret
add
inc
xor
push
dec
pop
push
aas
push
out
rcrb
push
mov
pop
daa
push
add
insl
xor
lods
jnp
cs
mov
fstps
js
popf
out
fsubrl
or
inc
xchg
movsl
shlb
int
cmc
popa
sub
inc
cltd
imul
fcoml
adc
or
push
lds
push
xlat
cmc
stc
loope
inc
or
jae
mov
push
sub
hlt
inc
xchg
mov
dec
aaa
je
mov
push
ffree
cli
inc
arpl
out
rcrb
inc
inc
pop
movsb
pop
jae
aad
je
sbb
mov
rclb
add
adc
jno
xor
outsb
dec
xadd
in
in
shlb
into
jge
out
scas
mov
outsb
cmp
aad
sub
data16
je
out
insl
and
push
xchg
pop
mov
das
dec
xor
xor
aas
cmpsl
or
push
sbb
inc
in
mov
lret
lock
add
call
jo
push
pushf
and
dec
push
lret
bound
and
andb
adc
adc
cmp
sub
xor
inc
push
xor
cli
inc
push
rcll
jnp
inc
test
mov
dec
add
push
xchg
jmp
js
lea
lret
mov
mov
pop
jmp
clc
test
ret
nop
inc
mov
inc
lock
popf
jecxz
ljmp
lods
jmp
push
mov
xchg
and
push
lea
sub
mov
pusha
loopne
popf
into
imul
outsl
gs
push
ret
test
int3
mov
in
daa
lea
jp
inc
sub
pop
orb
sub
fsubr
insl
push
mov
push
xor
mov
icebp
cld
cmp
sbb
callw
adc
clc
cmpb
dec
push
shrl
pop
lret
inc
adc
dec
pop
repz
sbb
scas
xchg
pop
fcoms
hlt
stc
and
mov
repnz
std
scas
mov
push
pop
cs
pusha
fnstenv
jne
cmp
pop
xor
jmp
insl
push
add
jmp
mov
adc
xor
and
mov
sbb
xor
sbbl
or
mov
sub
mov
mov
subl
shl
mov
and
mov
mov
shrd
movl
xor
addl
shr
mov
mov
sbb
mov
mov
mov
mov
sub
sub
xor
decl
or
orl
jmp
cli
int
lahf
push
or
inc
cmpsb
ss
xchg
jl
xchg
adc
addl
push
repnz
xor
lds
fisubrs
mov
in
jnp
pcmpeqd
outsl
mov
or
stc
push
in
loope
mov
and
dec
repnz
fstpl
adc
fxch
data16
nop
cmpsb
mov
jno
in
xor
mov
sub
mov
push
mov
pop
sahf
xchg
xchg
shlb
mov
add
fldenv
notb
mov
and
add
push
sarl
sbb
and
mov
sbb
push
sahf
stos
iret
lret
sub
add
mov
sbb
and
add
pop
lahf
and
test
push
sub
cvtdq2ps
int
xorb
add
test
and
mov
dec
cmpsb
in
pop
mov
push
ljmp
cmp
iret
dec
xchg
popa
and
in
push
dec
jle
std
push
adc
or
xchg
sub
and
daa
mov
out
arpl
into
ret
iret
push
push
cmp
xlat
cmp
jmp
cltd
sub
pop
pop
ja
lcall
or
enter
sbb
rorb
ret
lds
cmp
js
cmp
std
xor
mov
adc
jmp
mov
mov
rcrl
jo
xchg
push
mov
pusha
pop
push
mov
fstp
xor
loope
or
insb
sub
jae
data16
out
imul
jno
rorl
clc
cmp
pop
hlt
cs
and
jmp
loope
sbb
add
dec
pop
mov
xchg
sar
out
je
inc
rcr
pop
dec
mov
cmc
or
mov
hlt
jns
inc
scas
sbb
lock
pop
jno
aas
add
fsubrs
xchg
movsb
sub
add
sbb
les
imul
pop
enter
stc
loopne
adc
dec
cmc
lds
xchg
test
fidivs
cmc
push
jnp
mov
test
movsb
push
sahf
int3
jns
shlb
lods
inc
pop
mov
sub
arpl
xorl
adcb
pushf
adc
pop
push
mov
cmp
lea
mov
fildl
dec
mov
out
sbb
addr16
jne
sbb
xchg
ja
repnz
cmp
out
fcmovnu
pop
leave
outsb
out
out
xchg
repnz
and
es
andb
std
adcb
push
fwait
mov
call
adc
int3
cltd
mov
add
push
push
pop
push
mov
mov
data16
add
shll
cmpsl
dec
lds
xor
js
int3
lds
pop
push
nop
adc
or
pop
scas
push
into
stc
sub
inc
pop
outsl
mov
xchg
out
bound
xchg
pop
and
outsb
clc
rorb
sti
pop
jne
das
dec
jo
cmpsl
mov
stos
daa
in
fdivl
sbb
pop
int3
xor
repz
mov
or
imul
and
xchg
push
dec
mov
mov
fldlg2
mov
ja
test
sbb
cmp
dec
mov
test
in
or
aas
and
movsl
jbe
addb
cmp
lds
mov
lock
out
rcrb
pop
mov
int
xchg
mov
cli
orl
dec
ds
xchg
pop
mov
push
test
cli
arpl
repz
rorb
insb
pop
fidivrs
cmpps
dec
inc
add
sahf
jle
mov
incb
dec
leave
xchg
fs
push
push
inc
test
enter
or
jbe
divb
dec
lock
jb
roll
jae
pop
imul
fadd
adc
mov
pop
sub
ficompl
dec
sbb
inc
cltd
adc
cmp
mov
rol
and
scas
ds
ds
or
jo
ficoms
out
stos
cltd
sbb
lock
gs
mov
sbb
jge
stos
out
sub
adc
aad
lret
mov
fcmovnbe
mov
pusha
xor
out
xlat
pop
nop
inc
add
dec
pop
fsts
enter
in
test
cltd
sar
or
jnp
pop
xchg
arpl
andb
cwtl
cltd
fwait
iret
pop
hlt
rcrb
xchg
out
or
push
push
adc
push
pop
cmp
xchg
xlat
daa
mov
or
testb
add
push
sti
or
add
lcall
out
sbb
xor
mov
or
hlt
sub
fstl
cld
sahf
ja
xor
cmp
hlt
outsb
sbb
inc
ficomps
lret
and
adc
sbb
insl
xor
sbb
lahf
mulb
sub
xor
and
add
fldl
jne
imul
mov
mov
push
movl
sbb
or
mov
mov
fisubl
std
and
and
mov
leave
lahf
ret
pop
cmp
cmp
jle
ds
les
cld
cwtl
or
lea
movsl
mov
cwtl
stc
in
stos
xchg
adcb
lea
movsl
lret
sti
ja
cmpsl
pop
cmpsb
inc
nop
in
or
js
jno
mov
imul
aaa
mov
insl
sti
jge
out
popf
outsl
insl
iret
popf
clc
jle
dec
add
shll
sub
fstp
pop
mov
in
in
shrb
push
cmpsl
xchg
daa
hlt
and
push
pop
sti
mov
lea
imul
int3
movsl
cmpb
fisttps
mov
addb
jno
or
dec
xor
repz
push
nop
stos
ret
daa
dec
mov
sub
adc
lahf
pop
in
fucomip
bound
pop
js
ds
aas
adc
mov
cltd
mov
scas
enter
inc
test
rol
ljmp
add
xchg
out
pushf
sub
pushf
xchg
les
insl
mov
lret
stos
pop
sbbl
fbld
lods
push
cmp
lcall
stos
shlb
push
aam
mov
dec
test
jnp
les
jge
xchg
xchg
les
lods
cmpsl
mov
or
adc
push
xchg
xchg
pushf
inc
aaa
push
mov
sub
loopne
lods
mov
jb
cmpsb
cmpsb
xchg
shll
lret
fcom
test
test
imul
adc
fisubs
jmp
out
sbb
addr16
dec
dec
out
xchg
test
rcrb
pop
jle
shrb
lahf
xor
mov
jns
jge
mov
pop
movb
add
adc
cmp
xchg
dec
daa
dec
push
lret
incb
std
and
outsl
xchg
jae
mov
jle
pop
cld
ljmp
movsl
jbe
or
mov
dec
pop
mov
clc
mov
dec
push
and
mov
incl
sbb
mov
xor
or
mov
adc
mov
jmp
movsb
dec
dec
jo
gs
adc
push
int3
xchg
adc
addl
scas
xchg
inc
mov
pop
mov
dec
dec
es
insb
pop
scas
add
sahf
daa
outsl
xchg
fbld
in
adc
dec
dec
push
jge
int
and
sbb
imul
mov
pop
push
mov
xchg
push
insb
mov
push
add
dec
mov
cmp
imul
sbb
loop
adc
and
xchg
ds
xor
fsts
dec
mov
mov
inc
aad
cwtl
fdiv
cwtl
pop
xor
orl
into
sub
addr16
mov
sti
xchg
imul
je
test
fildll
push
mov
mov
mov
fdivl
push
push
cwtl
jmp
sub
push
push
xor
lcall
bound
dec
hlt
cmp
push
pop
popa
int
stos
pushf
mov
xchg
jp
iret
cmp
lock
or
pop
xchg
movsb
xchg
jno
add
rclb
jmp
jne
xchg
xchg
arpl
and
seta
js
xchg
jmp
jae
and
movsb
aam
lods
cmp
inc
or
cmp
or
hlt
insb
lahf
lods
cwtl
jecxz
test
stos
cld
cmpsb
sbb
jecxz
adc
add
popa
out
addr16
aas
ss
mov
popa
jle
bound
arpl
lods
pop
fldl
aaa
popa
outsb
jno
pop
into
cmpsb
addr16
push
sbb
xor
xor
pushf
and
lods
rclb
push
jmp
xlat
scas
xor
rcl
mov
and
popf
pop
push
cltd
adc
sti
jnp
push
inc
sbb
aaa
mov
sbb
fdivrs
xor
add
xor
fisttps
in
out
or
xchg
inc
add
pushf
into
aam
test
dec
shll
cmc
daa
leave
testb
dec
xchg
cmp
les
inc
fildll
loopne
sarl
mov
repnz
push
inc
add
inc
insl
aaa
xor
sub
in
xor
insb
and
mov
imull
jle
lret
mulps
int3
sbb
xor
inc
iret
lret
pop
push
sbb
imul
adc
inc
push
cmp
jno
test
vminpd
adc
cltd
and
push
add
aaa
cmp
sub
call
cmp
inc
add
mov
cmp
xchg
rolb
sbb
ret
inc
jo
sbb
mov
xchg
inc
fwait
in
sti
in
adc
add
lock
cmc
sti
jno
mov
setl
lcall
sub
sbbl
mov
xlat
pusha
pop
in
sub
jge
in
xchg
cmpsl
outsl
stc
push
and
xchg
dec
sbb
jge
sbb
pusha
push
push
fisubrl
rcrb
xor
out
cmp
jmp
in
in
xchg
fisubrl
or
or
add
lea
arpl
test
shl
fwait
mov
xor
lcall
jecxz
jne
out
or
das
paddsw
and
imul
js
stc
data16
fs
stc
aaa
int3
dec
popa
ret
mov
xor
addr16
mov
cmp
mov
lock
inc
jae
hlt
mov
outsb
sahf
xchg
mov
xor
cmc
rclb
mov
push
pusha
pop
sbbb
dec
pop
dec
push
and
xchg
adc
hlt
mov
jmp
lahf
cmp
dec
iret
push
xchg
adcl
mov
aas
mov
cmc
test
dec
sbb
dec
mov
arpl
xor
cmp
sub
push
jge
xor
pop
push
mov
data16
cmpl
stos
pop
or
test
in
sub
cwtl
mov
pusha
sbb
cwtl
cmp
xchg
mov
jbe
mov
sub
cmp
jb
mov
cli
mov
xlat
jae
and
loopne
mov
pop
adc
fadds
sbb
mov
adc
loope
add
xchg
sub
xor
lret
and
lods
je
mov
jno
xchg
or
dec
loop
movsb
cmp
cmpsb
push
mov
lock
out
sarl
pop
ror
adc
test
cmp
cmp
sbb
or
ja
cwtl
inc
mov
sbb
into
idivb
cltd
lret
push
outsb
pop
std
stos
andb
xchg
jp
fidivl
mov
push
mov
addl
lahf
adc
mov
lea
jae
popa
in
jmp
cld
cltd
inc
fiadds
ret
sbb
int3
in
out
scas
mov
xchg
daa
call
in
cmp
lea
test
jmp
cmp
fnsave
aam
cld
pop
and
mov
ljmp
add
and
ljmp
fdivs
jmp
cmc
mov
aad
cmpsb
mov
je
push
js
out
pop
pop
push
lock
push
idivb
mov
or
scas
push
xor
mov
int
in
stos
aam
sbb
subl
xchg
sti
sub
add
sbb
push
xchg
arpl
sbb
inc
inc
mov
dec
shl
cmpsb
xchg
mov
xchg
stos
ljmp
adc
int
pop
push
sub
push
lds
jns
cmp
pop
iret
in
adcl
in
pop
adc
pop
xchg
divb
int3
add
cmpb
test
xchg
add
jle
pop
cmp
jae
pop
and
pop
sbb
cmp
xor
xchg
mov
mov
je
in
push
jno
arpl
xchg
insb
and
cltd
stc
xor
mov
shlb
pop
cmp
or
cmpl
mov
stos
xchg
push
gs
push
aaa
pop
movsl
dec
jl
out
adc
rcll
jge
outsb
imul
mov
insl
cli
stc
xchg
cmp
jl
pusha
sub
and
cli
mov
push
hlt
pop
pushf
int
or
ds
lret
aad
mov
enter
add
mov
push
xchg
pop
lea
icebp
enter
loopne
add
or
ds
icebp
cltd
out
push
das
push
or
hlt
std
cwtl
rorl
dec
mov
add
movsb
or
addr16
lods
cld
outsb
push
cmpsl
pop
pop
add
mov
mov
popa
add
inc
mov
inc
rcrb
rolb
mov
and
push
gs
xchg
mov
adcb
stc
out
lea
jnp
into
cmpsb
shrl
add
or
mov
xor
mov
rcr
inc
or
jns
imul
pop
or
and
or
test
cmp
push
mov
adc
mov
cmpl
jl
subl
jmp
pushl
pushl
call
mov
mov
mov
mov
mov
mov
shl
xor
shld
cmpl
jg
dec
jmp
pushl
call
shl
mov
xor
xor
movl
movl
movl
cmp
movl
jne
movl
cmp
je
subl
mov
mov
cmpl
jg
add
jmp
pushl
push
pushl
push
push
push
push
pushl
call
mov
mov
xor
shld
shl
xor
addl
xor
movl
cmp
movl
jne
cmp
je
mov
mov
shl
mov
xor
movl
shr
or
sbb
mov
cmpl
ja
and
jmp
push
push
pushl
call
mov
mov
mov
mov
mov
jmp
bound
clc
xchg
xor
xchg
outsl
inc
adc
addl
xor
lds
outsb
cld
dec
fisttpll
pop
aad
in
jns
shll
mov
push
push
adc
sahf
add
and
push
iret
cld
sahf
add
cli
xor
mov
ds
pop
cmp
stc
mov
mov
into
mov
pop
xchg
sysexit
pop
pushf
mov
imul
test
jbe
test
add
mov
add
das
sbb
or
rcrl
and
xchg
xchg
mov
pop
fbstp
and
xchg
mov
xorl
mov
push
push
in
ret
das
xchg
push
or
adc
xchg
adc
aaa
mov
xor
dec
subb
pop
mov
iret
dec
shrb
jp
mov
fwait
push
test
mov
mov
jp
outsl
lea
or
mov
push
ss
and
jecxz
or
orb
mov
sbb
test
jge
lea
xor
inc
jo
xchg
xchg
test
pop
int3
mov
lea
popf
inc
mov
std
or
mov
xorl
out
mov
cwtl
or
fs
and
add
sub
je
loope
fwait
push
sbb
pop
jo
scas
inc
cmp
sub
or
arpl
call
shl
push
jo
sub
xchg
aas
xchg
cmpsl
dec
ss
clc
xor
divl
mov
mov
into
cmpsb
jl
mov
mov
clc
and
cld
mov
xor
popa
daa
xchg
mov
pusha
push
xor
jl
sbb
mov
mov
xchg
jp
into
pop
popa
and
mov
je
sbb
sti
add
cmp
cmp
out
xor
call
fisubrl
rclb
or
cmp
imul
xor
popa
stos
outsl
xor
xchg
adc
sti
pop
add
cmp
pop
movsl
jo
pusha
mov
push
pop
sbb
test
jo
in
jne
sub
add
and
dec
push
mov
fisubl
subb
or
bound
jnp
sarb
fcmovne
or
fldenv
adc
fndisi(8087
jb
lods
and
cmp
popa
dec
or
shrl
pushf
cli
xchg
mov
repnz
pop
in
leave
fcoml
and
push
insb
lods
cmpsl
pop
sbb
lds
mov
out
dec
push
lds
sbb
jge
rcrb
cmpsl
outsb
jecxz
test
fwait
xor
loopne
scas
xchg
jmp
dec
sub
fimull
leave
jbe
adcb
lds
sub
outsb
pop
rcl
sub
inc
cs
pop
enter
mov
mov
dec
mov
inc
mov
movsb
push
out
mov
mov
cmp
sbb
mov
xor
fdivr
add
xchg
xor
lret
mov
enter
jns
and
dec
int3
ja
jns
add
adc
mov
addr16
mov
jb
cwtl
and
xchg
sarb
pop
adc
pop
push
cmp
sahf
or
dec
inc
das
xor
push
jne
into
sbb
mov
int
loop
sbb
fucomip
sub
lods
int3
daa
pushl
adc
nop
push
xor
sub
pop
dec
adc
and
jns
sbb
dec
push
or
pop
aad
imul
test
jg
and
fstl
sbb
push
in
fyl2x
xchg
int
fsts
pusha
out
jmp
nop
mov
lret
shlb
dec
fwait
jecxz
lahf
sarl
xchg
jns
loopne
sbb
pop
push
xor
xor
mov
cs
add
add
push
inc
sub
and
cmc
shl
clc
mov
mov
fcomps
xchg
xor
shrl
add
mov
or
repz
and
adc
jbe
dec
out
mov
mov
cli
cmp
sbb
or
out
xchg
dec
pop
cmp
push
dec
cmp
add
rcl
push
idivb
push
cltd
xchg
addr16
cmpsl
pushl
sbb
repz
xchg
cltd
outsb
mov
mov
loopne
xor
lods
mov
push
cmp
call
jmp
adc
leave
rcr
add
repnz
arpl
pop
xchg
jmp
xor
ffree
fs
xor
cmpsl
int
aas
jecxz
jg
jmp
cltd
mov
lods
and
mov
ret
shll
push
bnd
jle
int3
in
adc
jbe
jmp
fwait
test
int3
inc
int3
daa
mov
or
dec
jnp
xchg
cmp
outsl
lcall
out
dec
movsb
mov
std
jge
push
jmp
sub
dec
adc
push
aaa
test
add
jmp
stos
daa
insb
out
adc
in
xchg
mov
shrl
aad
jns
pop
add
leave
inc
aaa
mov
pop
dec
mulb
sbb
fmul
xchg
shlb
mov
xor
test
sub
mov
dec
imull
sbb
lcall
fs
cltd
or
dec
mov
fbld
add
mov
js
lahf
movsb
test
jl
inc
fnstcw
add
cld
repnz
mov
aas
shll
jb
dec
xor
push
stos
test
jns,pn
cmp
dec
sub
and
test
mov
push
and
bound
xchg
stos
ja
jle
or
ljmp
jns
or
sbb
inc
fldcw
scas
sub
cmc
jmp
mov
shll
dec
inc
fldl
pushf
fmull
adc
adc
adc
dec
mov
cwtl
dec
lea
xorb
add
lcall
divb
jnp
xor
pop
sbb
jbe
out
inc
sbb
ds
pushf
enter
sbb
pop
pop
ljmp
inc
xchg
or
clc
and
or
arpl
dec
ret
xor
sbb
mov
pop
inc
daa
or
js
cs
mov
mov
pushl
or
pop
and
push
mov
sub
movsb
pop
dec
in
sub
shll
mov
xor
sti
test
dec
out
lcall
add
pop
add
mov
jbe
dec
ret
mov
fistpll
xlat
dec
call
scas
or
sarb
ljmp
mov
inc
add
mov
push
sahf
or
rclb
inc
mov
sub
fst
pushf
adcb
push
mov
and
fisttpll
repz
pusha
mov
or
jg
sub
add
sbb
pop
xorl
sub
mov
add
mov
lea
mov
xor
mov
mov
mov
adc
jmp
fbld
and
cmp
testl
icebp
mov
inc
out
stos
jecxz
std
mov
jecxz
dec
cwtl
mov
mov
cmp
jge
sbb
add
orl
into
pop
loope
std
xchg
cmp
enter
lret
cmp
das
scas
jp
adc
add
jg
mov
neg
cmp
add
pop
adc
loopne
bound
pop
enter
test
push
jp
sti
mov
stos
adc
adc
leave
fimuls
pop
fiadds
mov
shl
cmp
scas
dec
shlb
stos
fmull
fsubrs
lods
sub
mov
pusha
or
xchg
cwtl
testl
adc
jmp
jbe
jb
jmp
and
ja
push
pop
xchg
addr16
jge
mov
and
idivl
inc
sbb
enter
fcmove
mov
mov
pushf
adc
cwtl
seta
pop
inc
push
cmp
push
mov
in
inc
hlt
jbe
dec
bound
mov
inc
adc
adc
cmp
dec
test
jo
inc
xchg
lret
lods
test
fdiv
out
cmpsb
push
xor
dec
jns
ret
cmc
data16
mov
add
mov
je
scas
lods
xor
out
adc
out
add
mov
mov
add
ljmp
stos
popf
das
or
pop
sub
adc
lds
inc
push
xor
pop
push
dec
fwait
insl
jmp
push
add
adc
aam
or
sahf
fmul
pop
push
dec
dec
jnp
mov
dec
emms
ss
repz
add
popf
add
or
push
adc
mov
mov
or
push
push
outsb
rolb
sub
out
and
fwait
sbb
rcrl
jecxz
mov
orl
imul
fucom
repnz
test
xchg
cli
mov
and
shll
pop
or
adcb
add
sub
pop
dec
and
xchg
jb
dec
add
xchg
xchg
leave
sbb
inc
fmulp
pop
pushf
out
clc
mov
scas
add
ja
lahf
push
jg
xor
mov
xor
pusha
fstp
subb
push
mov
pushf
or
into
inc
icebp
lods
add
sbb
fcoms
pusha
jl
ds
xchg
fdivrs
inc
cli
sub
lods
pop
fcmovne
add
scas
dec
add
ljmp
out
push
cmpsl
leave
adc
cmp
ljmp
push
and
notl
and
repz
std
clc
mov
inc
icebp
in
repnz
and
mov
and
push
jno
xor
mov
and
andb
es
lahf
in
mov
inc
cmp
cli
bound
je
sbb
jnp
mov
push
popa
mov
daa
and
or
pop
pop
nop
mov
pop
ret
loope
dec
movsl
popf
xchg
jle
and
test
fsts
ret
mov
or
ret
mov
insb
js
jbe
shl
imul
jbe
adc
lods
scas
push
xchg
imul
call
xchg
or
xor
dec
xor
stos
test
jo
ljmp
les
push
fwait
pop
lock
mov
cmovne
add
pop
mov
out
push
test
inc
or
jg
nop
xchg
dec
mov
into
push
std
leave
ficompl
sti
or
sub
outsb
add
lods
nop
div
jp
shll
nop
fcmovnu
adc
add
sub
arpl
jbe
add
popa
adc
ss
jbe
jne
jl
cmp
insl
jg
xlat
push
sbb
mov
xor
aad
jo
mov
push
add
pop
insl
pop
js
mov
jns
outsb
mov
fwait
cmovae
adcb
lods
pop
push
repnz
push
xchg
sarb
adc
sahf
jg
mov
jp
fwait
out
negl
cltd
inc
mov
insl
inc
jo
mov
mov
xchg
or
or
icebp
add
add
shll
mov
dec
dec
test
push
mov
mov
adc
push
test
les
jl
fldenv
mov
lret
in
mov
repz
aaa
je
js
loop
mov
mov
sub
scas
test
and
pop
jne
and
aam
flds
jg
or
mov
mov
mov
add
bnd
cmp
out
push
testb
fs
mov
fdivrl
in
loopne
mov
outsb
mov
push
test
push
mov
sbb
add
imul
xchg
cmp
mov
movsl
popa
es
int
jmp
divl
xchg
cmpsb
cmp
xchg
push
popa
xor
mov
adc
leave
mov
mov
rcll
sbb
dec
xor
into
loop
loopne
mov
or
test
cmp
incl
fidivs
sub
mov
inc
xchg
loope
mul
mov
xor
cmpsb
filds
adc
mov
jp
pop
ret
in
es
cltd
push
push
data16
test
loopne
cmp
jo
xor
out
out
ficomps
inc
pop
mov
out
mov
mov
push
ficoml
das
sub
cltd
fisubrs
xchg
in
sub
pop
mov
adc
push
icebp
aad
in
call
inc
mov
xor
mov
xchg
fdivl
xchg
bound
imul
insl
push
negl
in
jns
mov
fistps
out
and
and
sub
daa
ret
xor
jmp
adc
leave
pop
dec
fs
add
jmp
adc
fwait
mov
lret
mov
and
cmp
pop
pop
rcrl
sub
out
cmpsl
test
test
rol
scas
xlat
mov
leave
fwait
shrb
shlb
sbb
adc
jmp
imull
into
pop
inc
repnz
mov
bnd
shr
or
push
lea
xchg
pop
sar
insl
js
adc
jb
xor
cmp
sub
nop
mov
popa
inc
hlt
cmc
jl
sub
push
outsb
imul
shlb
das
add
mov
xchg
cmp
shll
push
mov
movb
mov
mov
fisubs
stos
mov
jmp
stos
cltd
repz
popa
push
addr16
cmc
dec
sbb
movsb
pop
es
lret
clc
pop
data16
out
shll
cmp
adc
js
and
add
les
std
or
loopne
sub
stos
inc
insb
and
or
fistps
adc
inc
push
pop
data16
pushl
push
test
andl
ja
jecxz
mov
xor
cltd
push
push
cmp
repnz
xor
flds
pop
lahf
adcl
pop
add
sbb
and
cmc
xchg
stos
or
dec
cld
orl
xor
orl
shr
xorl
shl
adcl
or
movzbl
sbb
mov
mov
mov
and
movl
sub
mov
neg
mov
xor
shr
negl
shl
or
subl
push
lea
sbbl
push
lea
orl
push
call
and
mov
cmpl
jb
jmp
push
push
pushl
pushl
call
mov
xor
shr
shl
or
push
lea
push
mov
sub
mov
shrd
shr
cmpl
jg
xor
add
mov
sub
imul
jmp
push
push
push
call
mov
mov
movl
xor
addl
xor
or
andl
lea
push
shl
movl
call
mov
sbb
mov
sub
xor
shl
adc
shr
or
mov
sub
push
sub
lea
push
orl
mov
inc
mov
incl
shrd
shr
or
mov
mov
sbbl
xor
shl
xor
movl
or
adcl
lea
push
call
and
mov
or
mov
cmpl
jl
mov
and
xorl
jmp
pushl
call
xor
shl
shr
or
addl
jmp
xchg
adc
inc
adc
xchg
popa
aaa
repnz
cmp
adc
addl
jg
int
dec
out
ja
xor
cmp
in
push
and
and
add
push
xchg
sti
adc
sahf
jle
lock
leave
adc
aaa
in
shl
mov
pop
xchg
cwtl
repz
in
das
jns
fcomps
ja
cmp
inc
outsl
out
int
addr16
jle
repz
into
mov
movsl
fmull
int
scas
adcb
ljmp
bound
jg
cmpsl
sti
fsts
pop
mov
add
imul
sti
xor
sarl
xor
lock
jl
aaa
jne
lea
mov
inc
xchg
cltd
fistps
pop
mov
adc
mov
aad
sub
enter
movsb
push
clc
fcoms
mov
test
cmpb
dec
mov
adc
push
aaa
add
outsb
cmc
repnz
lret
adc
mov
jne
loopne
mov
je
daa
cmpsl
rclb
jmp
addr16
adc
gs
es
fimuls
mov
loope
add
ja
out
lods
clc
int3
and
into
cmp
rcrb
jnp
insl
push
nop
jno
stos
mov
and
das
or
xor
push
test
inc
sub
ds
inc
xchg
in
mov
lea
mov
dec
loop
cmp
cltd
jnp
aaa
outsl
cmp
sub
xor
push
lret
fimull
das
test
or
insl
insb
sbb
cmp
sbb
jnp
insb
int3
xlat
ljmp
sbb
xlat
fiaddl
xor
mov
sti
mov
inc
int3
mov
rclb
pop
xor
mov
sbb
insb
aam
mov
aas
inc
adc
loopne
mov
xor
push
mov
pushf
push
cmp
enter
outsb
out
aad
mov
fdivrs
pushf
scas
nop
jmp
xor
test
pushf
inc
mov
push
in
mov
push
shrd
pop
push
imul
sbb
sbb
adc
sub
mov
jno
or
mov
push
mov
ds
fstl
sbb
lods
sub
inc
jle
cmpsl
push
push
dec
insl
mov
sti
push
inc
or
popf
xchg
mov
adcl
xor
dec
imul
imul
xlat
dec
sbbl
mov
push
call
jle
call
pop
cmp
mov
sbb
fildl
pop
push
adc
imul
sbb
pop
pop
or
sub
addb
sbb
pop
fsubl
xor
iret
xchg
sbb
push
fs
shl
dec
out
mov
push
sub
push
cwtl
loopne
cld
xor
cmp
inc
or
dec
pop
and
int
mov
sub
dec
loop
sub
xchg
xchg
scas
xor
sbbl
xor
fcomps
pop
fwait
test
and
stos
lods
pop
sbb
stc
xchg
or
cmpsl
dec
inc
cmp
pop
pop
rol
data16
xchg
idiv
xchg
mov
sbb
out
xchg
not
cmpsl
or
fidivrl
mov
pop
inc
insb
adc
xchg
push
enter
loop
fiaddl
adc
fildl
lret
ret
jmp
add
outsb
mov
out
xchg
sub
inc
push
mov
fidivl
mov
mov
pop
mov
and
adc
sub
rclb
dec
mov
mov
add
xchg
adc
data16
dec
add
mov
fisttps
stc
stos
push
je
setbe
inc
movl
jae
mov
pop
cld
iret
add
mov
mov
test
and
out
std
lods
outsl
cwtl
inc
and
xchg
fdiv
gs
loop
sub
xchg
out
pushf
rcr
xchg
fs
int
jnp
dec
adc
and
mov
mov
pop
push
lret
push
in
dec
cs
loope
push
or
or
push
test
dec
fstpl
push
sbb
sbb
push
out
lods
add
out
scas
sbbb
pop
fmull
adc
ja
popa
std
jae
out
lret
popa
cmp
push
xchg
aaa
cld
add
mov
in
push
push
pop
addr16
push
or
je
icebp
xor
jg
shll
popa
icebp
mulb
cwtl
push
stos
hlt
sub
cmp
icebp
push
pop
xchg
inc
dec
xchg
mov
les
iret
mov
sub
pop
stos
ds
pop
adc
lods
addr16
das
sub
cltd
jo
mov
jb
std
imul
leave
stc
lret
fs
inc
inc
xor
dec
dec
ljmp
jne
or
pop
insl
cltd
push
jmp
sbb
cmp
xchg
gs
cli
or
loopne
inc
arpl
xchg
add
fdivs
adc
add
sbb
das
movsl
cmovg
mov
dec
xchg
push
stc
inc
cmpsb
mov
test
fcomps
mov
fdivl
xor
sub
mov
clc
fdivr
iret
sub
fwait
sub
fsubrl
inc
mov
ss
dec
addr16
or
enter
pop
inc
in
pop
or
jmp
mov
xchg
mov
and
enter
ljmp
jns
sub
fsubl
sub
into
rolb
test
pop
lahf
mov
fisttpll
insb
push
imul
jg
or
test
dec
jle
jg
push
push
int3
fsub
pop
ljmp
vmread
vunpckhps
das
pop
mull
jg
imul
xor
out
jnp
pop
xlat
cs
jecxz
cltd
xor
and
jmp
mov
fwait
dec
fstpl
xchg
sub
dec
adc
call
in
ss
push
mov
lret
outsl
std
mov
and
pop
dec
outsl
jg
outsl
add
push
lds
cmp
push
mov
sub
jb
and
inc
inc
jnp
and
je
jbe
mov
push
in
jmp
push
cmc
push
mov
and
mov
mov
inc
pop
jns
jle
das
cmp
gs
rolb
aas
out
les
dec
jl
inc
add
mov
subl
es
add
inc
dec
push
cmc
movsl
adc
outsb
rorb
shrb
xchg
mov
jnp
movsl
cmp
lahf
push
xchg
add
div
call
jcxz
xor
stc
movsb
fistps
insl
jge
mov
mov
mov
imul
std
push
mov
mov
fs
fistps
jmp
das
lock
mov
mov
or
les
int3
repz
lds
pop
iret
xchg
jg
lods
lds
cmp
popf
jecxz
or
mov
xchg
stos
push
outsl
loope
cmp
loope
popl
cs
inc
pop
filds
outsl
lret
cs
aam
mov
lea
inc
pushf
sbb
push
adcl
mov
sub
mov
shrd
and
shr
mov
mov
adc
xor
xor
subl
or
shl
mov
sub
mov
movl
shrd
shr
adcl
mov
mov
xor
jmp
adc
sahf
dec
push
rcrl
mov
adc
addl
or
push
add
jmp
sbb
push
mov
mov
mov
icebp
push
enter
mov
cltd
movl
dec
outsb
movsl
inc
call
dec
mull
cli
xlat
aas
les
mulb
call
pop
stc
adc
sub
and
adc
push
inc
jecxz
xchg
sti
mov
add
mov
jbe
mov
add
test
fisubrs
dec
js
inc
stc
enter
xchg
cmc
cmp
sti
xor
sub
out
xor
in
add
sub
sbb
orl
cmp
pop
dec
inc
cmc
test
dec
add
or
aaa
shll
test
repnz
lcall
adc
fdiv
les
call
ret
fisubs
ljmp
sti
test
mov
cmpsl
jb
mov
cltd
dec
push
shl
ds
jg
xchg
insl
in
aam
sub
jge
pop
outsl
cwtl
inc
aas
in
push
outsb
dec
cmp
aaa
mov
test
fcomps
leave
jge
xchg
stc
add
sub
out
notl
lret
push
lahf
mov
ret
popf
pop
push
sub
icebp
pusha
inc
shrb
mov
mov
loopne
xchg
or
subl
out
adc
addr16
or
ja
addb
pop
or
jmp
add
and
je
mov
cmpsb
pop
ja
cld
push
testl
push
jae
pushf
cmp
testl
pop
add
ror
add
lock
dec
inc
fnstsw
stos
pop
jns
mov
dec
js
inc
adc
cmp
cltd
fstpt
pop
jo
addl
inc
loopne
std
rorl
pushf
std
retw
cmp
rorl
dec
test
or
cmp
imul
stos
int3
sahf
add
jp
cmp
or
fs
jmp
xor
in
sbbl
in
repnz
adc
test
or
add
insl
ret
cs
test
mov
pop
inc
mov
bound
cld
movsb
sub
and
cwtl
clc
shrb
pushf
cmp
cmp
jmp
je
push
hlt
adc
testb
push
out
xchg
inc
mov
inc
cmp
dec
call
stc
pop
inc
roll
xor
lods
imul
cmp
push
xchg
adc
or
sarb
stos
loop
adc
dec
add
out
cmovae
std
jb
cld
push
jg
mov
mov
imul
pop
cmp
ds
mov
mov
aas
xor
push
cmp
andb
dec
or
push
mov
lea
imul
in
mov
repz
aas
ficoms
mov
pop
lea
mov
xorb
mov
jge
xchg
mov
mov
hlt
and
repnz
mov
sbb
jno
sbb
adc
cli
push
jmp
les
lahf
mov
imulb
ja
cmc
dec
dec
cmpsl
addr16
and
scas
and
mov
aaa
inc
pop
bound
test
rolb
sbb
insb
sti
mov
pop
xchg
add
adc
mov
sub
clc
aad
sbb
in
sub
das
mov
int3
push
and
ljmp
xchg
loope
push
call
xor
push
fnstenv
pusha
leave
ljmp
ret
outsl
jne
mov
jo
cmpsb
orl
xchg
out
popf
pop
int
add
or
xchg
push
sbb
mov
mov
std
negl
push
stos
or
mov
and
or
dec
or
ss
push
aad
mov
mov
push
in
mov
movsb
jmp
dec
dec
xlat
adc
fs
mov
js
add
fistpll
cmp
fistpl
fwait
mov
lahf
or
pop
ja
dec
add
in
sti
insl
loopne
loope
jecxz
jmp
xchg
in
rorb
pop
int3
aad
into
mov
mov
jmp
fisubrl
xlat
stos
cmp
adc
inc
dec
mov
aad
adc
out
js
jbe
adc
and
fnstenv
sbb
xchg
movsb
cli
fldcw
adc
sub
test
ljmp
std
sub
jl
inc
loop
lds
stos
mov
dec
mov
call
xor
adc
mov
out
call
pop
inc
cwtl
es
push
popa
pop
push
push
stc
xor
cmc
aam
call
xchg
rcrl
stos
es
mov
xor
sti
test
push
ds
adc
push
inc
stc
mov
popf
mov
jecxz
sub
xchg
loope
int
pop
xlat
movsl
pop
mov
cmp
movsb
pop
andl
jo
stc
sbb
xchg
mov
incl
jns
sub
cmp
in
xchg
xor
mov
popl
in
add
xlat
lods
cld
lret
stos
mov
adc
xchg
pop
add
adc
xchg
adc
sub
jb
mov
mov
add
fstps
leave
push
ret
inc
fcoms
das
in
and
inc
xchg
in
cmpsl
xchg
mov
and
neg
mov
xchg
and
hlt
jmp
insb
cmp
jl
sub
push
shll
push
mov
aaa
mov
xor
mov
lcall
push
push
stos
cmpsb
push
seta
sbb
mov
cs
push
add
adc
push
inc
jne
adc
les
jp
in
ja
ret
divl
jae
movsl
push
xor
xchg
pushf
xchg
push
shr
push
jns
mov
dec
stos
dec
jp
mov
push
xchg
mov
adc
stos
mov
outsb
cmp
out
scas
and
mov
jle
inc
in
lcall
sbb
enter
mov
mov
adc
push
mov
lock
movsb
sub
hlt
rcrl
out
ficoms
sbb
sub
aas
xor
test
sbb
xor
sub
outsb
dec
cmpsl
inc
repnz
jo
les
xchg
pop
adc
daa
test
adc
lahf
sub
daa
mov
fnstcw
push
jno
dec
mov
ljmp
add
push
mov
notb
push
push
mov
cmp
dec
xchg
sbb
sbb
and
stos
xor
iret
mov
jnp
sub
das
or
sub
ss
cmpsl
xchg
cmpsb
in
or
mov
push
into
push
pop
out
into
jmp
mov
cmp
jle
lods
xchg
lods
hlt
call
imul
push
sub
and
cmpsl
jmp
xor
rol
or
jb
je
inc
daa
cmp
fbstp
sahf
mov
loope
add
movsb
daa
or
lcall
arpl
sbb
push
enter
sub
or
add
lret
add
lea
adcl
push
xorl
shl
call
mov
cmpl
jg
sub
and
jmp
pushl
push
call
mov
shl
xor
shr
or
push
lea
sub
push
cmpl
jg
xorl
jmp
push
pushl
pushl
push
push
push
call
mov
mov
shrd
shr
mov
mov
sub
xor
mov
adc
shl
mov
mov
mov
sbb
xor
or
mov
and
shrd
adcl
shr
adc
mov
mov
orl
xor
xor
andl
or
cmpl
jg
jmp
call
add
mov
shl
mov
shrd
shr
mov
adcl
mov
xor
xor
sbbl
or
notl
add
lea
push
shl
xorl
call
mov
xorl
mov
cmpl
jg
jmp
push
pushl
call
xor
shr
jmp
notl
notb
sub
and
mov
mov
pfacc
stos
xchg
rcrl
into
push
lods
add
jmp
adc
cli
aam
xchg
ret
xor
mov
xor
sti
nop
xchg
nop
rcll
mov
push
jnp
xchg
xor
repnz
xchg
lret
sbb
cmpsl
and
pop
jg
out
adc
lret
clc
icebp
cltd
ret
or
inc
leave
mov
push
ret
add
sbb
imul
inc
aad
dec
jb
inc
dec
cld
ss
scas
pusha
int
imulb
dec
sbb
shll
adc
pop
test
mov
xchg
bound
mov
imul
mov
mov
pushf
push
aaa
test
loopne
leave
leave
ss
sub
popf
mov
fcompl
inc
sti
lret
push
jp
std
fiadds
ret
push
xchg
dec
inc
xchg
frstor
je
cltd
inc
push
test
mov
popa
add
add
test
sub
cmp
and
sub
xchg
data16
ret
data16
push
mov
js
mov
cs
dec
lret
stos
hlt
cmpsl
jnp
mov
cld
push
xchg
repz
xor
test
add
add
push
pop
lock
sub
xchg
xchg
fdivrl
mov
cmpsb
mul
cmp
inc
data16
imulb
and
jmp
ja
adc
test
fnstsw
lcall
sahf
and
fs
jno
sbb
in
mov
sub
sub
je
out
bound
xchg
mov
int3
jg
push
test
les
push
cld
inc
xadd
push
or
mov
lea
push
cmpl
ja
and
jmp
push
push
push
pushl
call
mov
mov
shrd
shr
mov
mov
addl
xor
neg
xor
or
push
sbb
mov
movzbl
and
mov
mov
push
orl
pushl
subl
shl
call
lea
xor
add
add
push
add
mov
mov
cmpl
jbe
adc
or
jmp
push
push
push
call
shrd
shr
mov
mov
xor
xor
or
addl
push
adc
mov
push
adcl
pushl
subl
shl
call
cmpl
jge
sbb
jmp
pushl
pushl
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
sbbl
mov
rol
mov
adcl
xor
movl
mov
movl
cmp
movl
je
or
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
push
mov
sub
not
mov
cmpl
jb
jmp
push
call
mov
mov
sub
push
mov
mov
sbb
mov
adc
orl
orl
add
mov
mov
add
mov
cmpl
ja
sbb
inc
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
sub
mov
sbb
mov
cmpl
ja
or
jmp
push
push
push
call
orl
orl
lea
mov
mov
mov
not
mov
sbbl
add
neg
mov
mov
adcl
mov
mov
neg
shrd
cmpl
ja
or
jmp
push
push
push
pushl
push
call
shr
mov
mov
xor
xor
or
cmpl
jb
jmp
pushl
push
push
pushl
pushl
call
mov
movl
movl
movl
movl
movl
movl
xor
movl
movl
mov
add
movl
movl
cmpl
jge
adcl
adcl
jmp
pushl
push
push
call
movl
movl
movl
movl
movl
dec
movl
sbbl
movl
movl
movl
cmpl
ja
xor
add
sub
mov
jmp
push
push
push
call
movl
movl
movl
mov
shl
mov
andl
push
addl
push
push
push
andl
call
xorl
mov
xorl
mov
mov
mov
add
xor
add
mov
mov
sub
sub
mov
sbb
lea
and
mov
cmpl
jg
jmp
pushl
pushl
push
call
mov
or
and
mov
or
xor
cmp
movl
jne
not
mov
mov
shrd
cmpl
jbe
adc
jmp
push
pushl
push
pushl
pushl
call
shr
mov
mov
shl
xor
xor
subl
or
mov
mov
cmp
movl
jne
mov
add
mov
neg
xor
xor
or
sbb
mov
cmpl
jbe
jmp
pushl
call
mov
mov
shrd
mov
mov
xor
shr
cmpl
jbe
xor
jmp
push
push
call
mov
xor
or
shl
sub
mov
andl
mov
mov
add
adc
mov
and
mov
adc
mov
shrd
negl
shr
sub
mov
mov
cmpl
jg
add
jmp
pushl
pushl
pushl
pushl
pushl
call
xor
shl
xor
or
mov
mov
subl
shrd
shr
neg
mov
cmpl
jbe
adcl
jmp
pushl
pushl
pushl
call
mov
mov
xor
xor
or
shl
incl
lea
mov
cmpl
jl
dec
jmp
pushl
call
mov
shrd
shr
mov
mov
mov
adc
xor
cmpl
jbe
and
jmp
call
mov
xor
or
shl
imul
mov
dec
mov
sbbl
shrd
mov
or
mov
xorl
xor
orl
shr
mov
mov
addl
xor
subl
or
shl
sub
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
jb
jmp
pushl
push
call
mov
shrd
mov
mov
xor
shl
xor
or
shr
subl
mov
sub
mov
mov
adcl
mov
subl
shrd
adcl
shr
add
mov
cmpl
jg
sbb
jmp
pushl
push
call
mov
mov
xor
xor
or
shl
orl
imul
addl
sub
jmp
mov
or
mov
mov
cmpl
jl
or
jmp
push
pushl
call
mov
shrd
mov
mov
xor
shl
addl
xor
adcl
or
andl
shr
cmpl
jg
jmp
pushl
push
push
push
call
mov
mov
mov
mov
shrd
shr
mov
cmpl
jg
mov
adc
or
jmp
push
pushl
pushl
pushl
pushl
push
call
mov
mov
xor
xor
or
shl
mov
mov
adc
add
add
xor
xor
adc
mov
mov
xor
add
adc
shrd
or
shr
movzbl
adc
mov
mov
xor
sbbl
shl
xor
movzbl
adc
or
neg
mov
add
movl
mov
mov
sub
imul
mov
cmpl
ja
or
jmp
push
pushl
pushl
pushl
call
mov
movl
mov
movl
mov
movl
adc
mov
xor
mov
cmpl
jbe
jmp
push
push
push
pushl
call
mov
shrd
shr
mov
mov
xor
shl
adcl
xor
or
movzwl
sbb
mov
lea
cmpl
jbe
and
jmp
pushl
push
pushl
pushl
call
mov
mov
mov
shrd
shr
mov
adcl
mov
subl
shl
adc
mov
xor
xor
sbbl
or
sbb
mov
or
mov
xor
cmpl
jl
jmp
push
push
push
call
mov
mov
shrd
shr
mov
mov
xor
shl
xor
adc
or
adcl
lea
mov
or
mov
cmpl
ja
add
jmp
pushl
pushl
push
call
mov
mov
shrd
shr
mov
mov
subl
shl
and
mov
xor
adcl
xor
xorl
or
cmpl
jle
inc
decl
jmp
push
call
mov
mov
or
mov
mov
shrd
notl
shr
mov
sub
mov
xor
addl
shl
addl
xor
sbb
or
lea
mov
mov
addl
mov
shrd
shr
xor
add
mov
sub
xor
mov
mov
addl
xor
shl
adc
mov
xor
addl
or
mov
sbb
mov
or
add
cmpl
jle
sub
negl
jmp
push
push
call
mov
mov
shrd
shr
mov
cmpl
jge
neg
jmp
pushl
push
push
call
mov
xor
xor
or
lea
mov
cmpl
jge
jmp
push
push
push
pushl
push
push
push
pushl
push
pushl
push
push
push
pushl
call
mov
shl
mov
shrd
shr
mov
mov
addl
xor
orl
xor
subl
or
xor
mov
shl
incl
mov
adcl
mov
orl
mov
addl
or
xor
mov
mov
andl
shrd
shl
sbbl
shr
mov
mov
or
xor
mov
xor
orl
or
mov
dec
orl
not
xorl
and
xor
or
xor
mov
xor
and
mov
cmpl
ja
sub
jmp
push
push
push
call
mov
xor
or
mov
mov
shrd
shr
mov
sbb
mov
mov
adc
mov
mov
xor
xor
xor
adc
mov
addl
xor
andl
shl
subl
mov
addl
or
mov
mov
cmp
je
xorl
mov
xor
add
mov
sub
and
sub
cmpl
ja
add
jmp
pushl
push
pushl
push
push
push
call
mov
mov
mov
shl
xor
mov
mov
mov
subl
xor
adcl
xor
sbbl
shrd
shr
xorl
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
xor
xor
mov
sub
xor
push
push
movl
movl
mov
and
movl
movl
mov
mov
and
sbbl
mov
xor
inc
and
and
add
cmpl
jle
xor
sub
jmp
pushl
call
xor
mov
movl
movl
mov
cmpl
jb
xor
jmp
pushl
call
xor
sub
mov
imul
xor
mov
movzbl
sub
mov
div
mov
xor
or
sub
xor
sub
mov
cmpl
jl
sbb
jmp
push
pushl
pushl
call
movl
movl
movl
movl
movl
movl
sbbl
mov
xor
or
adc
mov
sub
imul
xor
add
mov
sub
or
add
or
and
cmpl
jge
xor
xor
mov
and
and
jmp
push
call
sub
mov
sub
add
mov
mov
orl
sub
or
add
cmpl
jg
mov
sbb
mov
adc
jmp
pushl
call
mov
xor
div
xor
mov
xorl
sub
mov
andl
add
sbbl
mov
movl
movl
not
movl
or
mov
sbb
xor
and
add
add
mov
xorl
xor
subl
div
and
mov
or
sub
cmpl
jl
jmp
push
push
push
push
call
mov
movl
movl
movl
movl
mov
mov
orl
xor
cmpl
ja
jmp
pushl
pushl
push
pushl
push
pushl
call
xor
push
pop
div
mov
xor
div
mov
or
cmpl
jle
or
jmp
pushl
push
push
push
push
call
sub
mov
movl
mov
mov
xor
sbbl
div
cmpl
jg
jmp
push
push
call
imul
xor
xor
imul
xor
mov
movl
movl
movl
mov
and
mov
orl
xor
adcl
div
mov
imul
add
xor
and
mov
sbbl
sub
mov
sbbl
movl
mov
mov
sbb
and
xor
and
sub
or
cmpl
ja
jmp
push
pushl
call
xor
mov
movl
movl
movl
mov
and
or
add
xor
add
or
andl
or
dec
sub
cmpl
jg
inc
mov
sub
jmp
pushl
call
mov
movl
movl
movl
and
mov
shr
sub
cmpl
ja
mov
and
jmp
push
push
call
xor
mov
lea
push
call
mov
or
or
mov
add
or
add
and
lea
adc
mov
and
movl
movl
movzwl
adc
movl
sub
movl
mov
sbb
mov
movl
subl
movl
movl
mov
mov
sub
imul
movl
mov
orl
mov
and
sub
mov
lea
adc
mov
mov
cmpl
jbe
sub
adc
jmp
push
push
pushl
pushl
call
mov
mov
imul
and
imul
or
mov
lea
mov
movzbl
xor
movl
movl
movl
and
movl
or
mov
mov
mov
sub
or
mov
mov
andl
xor
xorl
xor
adcl
mov
subl
call
xor
or
or
mov
mov
mov
mov
cmpl
jle
xorl
jmp
pushl
pushl
push
call
mov
xor
xor
mov
call
or
cmpl
jle
jmp
push
push
pushl
call
or
mov
mov
xor
xor
mov
call
or
mov
cmpl
jb
jmp
push
call
mov
mov
mov
xor
xor
mov
mov
addl
mov
mov
mov
andl
call
mov
adcl
or
mov
or
subl
push
adcl
push
andl
push
addl
push
addl
call
mov
mov
cmp
movl
jne
mov
mov
xor
xor
mov
call
xor
mov
mov
sub
mov
adc
mov
addl
xor
xor
andl
mov
call
or
movl
or
add
mov
adc
mov
xorl
xor
xor
mov
adcl
call
sub
mov
mov
xor
mov
mov
mov
sbb
mov
mov
xor
subl
xor
mov
mov
xorl
mov
decl
call
adcl
or
movl
mov
andl
or
push
subl
push
push
addl
push
xorl
call
mov
movl
jmp
jmp
cmpl
jg
add
jmp
push
call
lea
mov
mov
movl
mov
xor
cmpl
ja
jmp
push
call
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
movl
xor
xor
mov
sbbl
call
neg
mov
mov
adcl
mov
xorl
mov
andl
xor
adcl
xor
mov
movl
call
or
and
or
cmpl
jge
orl
movzbl
xor
jmp
push
push
push
call
mov
mov
xor
xor
movl
mov
subl
call
sbb
mov
sub
mov
xorl
mov
mov
subl
xor
subl
xor
mov
mov
mov
mov
incl
mov
call
sbb
mov
addl
or
sub
mov
or
push
subl
push
addl
push
push
sbbl
call
mov
cmp
movl
je
cmpl
jbe
jmp
push
push
call
mov
mov
xor
xor
mov
call
mov
mov
cmpl
ja
jmp
push
pushl
push
call
mov
mov
xor
xor
mov
call
or
or
sbbl
mov
imul
cmpl
jle
not
decl
jmp
push
pushl
push
pushl
push
pushl
call
add
mov
mov
mov
jmp
movl
jmp
cmpl
jb
xorl
jmp
push
call
mov
mov
xor
xor
mov
call
mov
xor
mov
mov
mov
xorl
xor
addl
xor
adcl
mov
call
subl
or
or
adc
mov
mov
xor
adcl
xor
mov
call
adc
mov
cmpl
jb
jmp
pushl
call
mov
mov
mov
xor
xor
mov
mov
mov
orl
call
or
or
mov
or
push
push
negl
push
push
subl
call
movl
mov
jmp
movzbl
adc
mov
mov
and
mov
xor
andl
xor
movl
mov
addl
call
add
mov
mov
mov
mov
sub
mov
cmpl
ja
movl
jmp
pushl
push
call
mov
xor
xor
mov
call
or
or
mov
movl
jmp
mov
cmpl
jl
jmp
pushl
push
push
call
mov
xor
xor
mov
call
mov
mov
sub
mov
xor
or
or
mov
xor
xor
subl
mov
call
xor
or
xorl
or
xor
mov
mov
add
mov
xorl
xor
sbb
mov
sub
sub
sbb
mov
xor
xor
or
xor
movzwl
and
add
cmpl
jge
jmp
push
call
mov
movl
movl
movl
movl
movl
movl
and
movl
xor
movl
cmpl
jl
mov
mov
and
adc
jmp
pushl
pushl
pushl
push
pushl
pushl
push
push
call
mov
add
mov
sub
cmpl
jbe
jmp
push
push
push
push
call
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
dec
or
sbb
mov
cmpl
jg
orl
jmp
pushl
pushl
call
xor
mov
sub
mov
mov
sub
cmpl
jle
xor
jmp
push
push
pushl
call
mov
xor
mov
div
mov
xor
sbbl
div
orl
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
and
sub
push
push
push
mov
pushl
pushl
call
test
je
movl
movl
movl
push
movl
adc
mov
andl
mov
andl
push
addl
push
push
adcl
call
push
subl
push
xorl
and
sbbl
and
push
push
orl
call
xor
xor
and
mov
cmpl
jbe
and
jmp
call
mov
xor
or
mov
xor
or
notl
mov
xorl
movl
movzbl
and
mov
movl
add
movl
movl
sub
movl
adc
movl
cmpl
jb
adcl
jmp
pushl
push
push
push
call
mov
mov
mov
mov
or
mov
or
mov
mov
sbb
mov
adcl
sub
mov
movl
sbb
mov
xor
xor
subl
and
sbbl
and
cmp
movl
jne
movl
cmp
movl
jne
sub
movl
sbbl
movl
adc
movl
cmpl
jl
sbbl
xor
jmp
push
push
pushl
pushl
push
pushl
call
movl
movl
mov
mov
sub
adc
mov
subl
imul
adcl
and
negl
imul
mov
addl
pushl
imul
incl
xor
mov
adc
mov
sbbl
div
xor
mov
adcl
xor
sbb
mov
sub
or
xor
sbbl
pushl
addl
pushl
call
andl
pushl
call
andl
movl
movzbl
sub
movl
cmpl
jge
negl
jmp
pushl
push
push
push
call
movl
movl
movl
movl
mov
mov
sub
mov
mov
add
mov
adc
cmpl
jge
and
jmp
pushl
push
pushl
push
pushl
push
call
mov
add
adc
and
mov
and
orl
mov
movl
decl
movl
addl
movl
xorl
movl
subl
dec
cmp
jne
movzwl
or
movl
mov
xorl
mov
movl
addl
mov
call
xor
lea
mov
mov
sub
sub
mov
lea
adc
mov
mov
cmpl
jbe
jmp
pushl
push
push
call
mov
mov
mov
xor
shl
shr
or
xor
mov
add
mov
or
mov
and
mov
xor
or
xor
or
sub
sub
mov
cmpl
ja
andl
jmp
push
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
subl
xor
sbbl
xor
xorl
or
cmpl
ja
subl
jmp
push
push
pushl
push
pushl
pushl
call
mov
push
pushl
lea
push
shl
call
adcl
lea
subl
push
mov
mov
andl
lea
andl
push
adcl
mov
subl
lea
notl
mov
mov
orl
mov
push
xorl
call
xorl
push
addl
push
pushl
addl
call
mov
cmpl
ja
mov
xor
jmp
push
pushl
push
push
push
push
call
mov
mov
mov
shr
shl
or
mov
mov
sub
sub
mov
xor
xor
mov
or
xor
mov
lea
mov
cmpl
jle
adc
jmp
pushl
push
push
call
lea
mov
mov
sub
lea
xor
sbb
movl
movl
mov
sub
movl
movl
orl
mov
adcl
mov
sub
add
mov
mov
movl
adc
xor
cmpl
jb
and
jmp
push
push
push
call
xor
and
mov
and
mov
movl
movl
movl
movl
sbb
movl
add
movl
andl
mov
sub
mov
adc
mov
cmpl
jl
and
jmp
push
call
mov
push
push
or
or
push
addl
push
xorl
call
mov
negl
mov
sub
mov
movl
sbb
mov
mov
cmp
jne
cmp
je
and
movl
movl
movl
xor
add
mov
sub
xor
movl
mov
mov
sub
xor
mov
mov
mov
cmpl
jb
jmp
pushl
pushl
pushl
push
pushl
call
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
and
movl
sub
movl
cmpl
jl
add
jmp
pushl
call
movl
movl
movl
mov
mov
push
push
xor
adcl
xor
push
push
call
addl
mov
andl
mov
push
push
push
sbbl
push
call
cmpl
jl
subl
jmp
call
mov
mov
push
push
push
push
andl
call
mov
sbb
mov
mov
mov
andl
add
movl
mov
adc
mov
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
addl
xor
adcl
shld
mov
and
shl
mov
mov
sbb
mov
sbbl
xor
subl
xor
mov
movl
cmp
movl
jne
movl
cmp
je
mov
mov
cmp
je
cmpl
jl
sub
jmp
pushl
call
mov
mov
mov
shl
xor
mov
mov
cmpl
jle
and
jmp
pushl
push
push
call
mov
xor
xor
shrd
xor
shr
or
or
mov
movl
mov
movl
cltd
movl
cmp
movl
jne
cmp
movl
jne
movzwl
add
movl
cmpl
jge
mov
add
jmp
push
push
call
movl
mov
mov
mov
xor
orl
shld
adcl
shl
movl
mov
mov
xor
sbbl
xor
mov
cmp
jne
movl
cmp
movl
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
addl
xor
and
shl
ret
xor
xor
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
negl
subl
movl
cmpl
movl
je
cmpl
jbe
xor
jmp
push
pushl
pushl
pushl
push
push
push
pushl
push
push
push
push
pushl
push
call
add
mov
mov
pop
pop
pop
leave
ret
mov
mov
ret
orl
mov
mov
notl
or
mov
movl
jne
mov
sbbl
mul
ret
xorl
push
mul
and
mov
add
mov
mull
add
mov
mul
add
pop
ret
incl
push
mov
sbb
push
mov
andl
or
movl
jne
mov
mov
sub
imul
mov
mov
xor
div
andl
mov
and
mov
movl
div
not
mov
jmp
and
mov
andl
mov
movzbl
xor
mov
cmpl
jge
jmp
pushl
pushl
call
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
