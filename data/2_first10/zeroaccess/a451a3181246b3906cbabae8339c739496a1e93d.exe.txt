push
mov
sub
mov
mov
inc
mov
sbbl
jmp
xchg
xor
xchg
and
mov
adc
adc
adc
adc
ja
call
push
repz
lods
add
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
cli
mov
testl
imul
rorb
movsb
and
cwtl
sub
adc
enter
cmpsb
mov
mov
cli
pop
int3
stc
sbb
out
push
in
add
jno
xor
das
dec
test
loope
addb
cmpl
cs
fiadds
xacquire
arpl
roll
xchg
xchg
popf
push
scas
and
call
mov
pop
sbb
cltd
mov
repnz
mov
imul
inc
push
dec
popa
cmpsb
pop
iret
and
cmp
test
jg
loop
pop
mov
movsl
dec
mov
imul
imul
es
insb
test
cltd
mov
mov
adc
movsl
mov
jb
sub
dec
pop
lret
pop
daa
sub
and
fucomi
or
inc
sbb
lret
movl
call
cltd
rcll
ret
cltd
mov
inc
xor
cld
mov
shr
inc
or
insl
mov
and
pop
fnstsw
pop
mov
pop
fcompl
sub
insl
jg
into
nop
dec
sbb
scas
sahf
test
sub
xor
daa
mov
pop
faddl
push
jle
mov
pop
iret
mov
cmp
loop
adc
inc
fsubl
inc
bound
jle
xor
or
loopne
inc
test
or
mov
stos
icebp
popf
mov
es
es
xchg
dec
pop
fwait
js
mov
mov
dec
shll
push
cmp
fwait
cmp
mov
pop
adc
mov
jbe
jg
lcall
add
loop
mov
ss
hlt
movsl
inc
jae
into
xlat
imul
mov
lret
pop
cmp
inc
mov
in
or
sub
xchg
jecxz
and
mov
sub
dec
adc
mov
clc
or
xchg
int3
cmp
in
dec
insl
outsl
and
pop
jae
ljmp
lret
fistpll
incl
in
xor
into
xchg
mov
mov
adc
fsubl
movl
mov
sti
push
fcomi
mov
mov
aaa
adc
jae
das
leave
int
js
test
and
xchg
cmc
cmc
rcll
jp
cmp
test
mul
pop
xchg
mov
mov
pop
and
jg
mov
les
dec
sbb
fmuls
jnp
lret
sbbl
cmp
fdivs
pop
jl
in
out
lea
imul
int
icebp
xor
and
push
aad
ret
jge
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jbe
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
movl
mov
jmp
movl
jb
push
push
call
xor
mov
mov
and
mov
or
mov
xor
sub
xor
mov
mov
xorl
sub
mov
movl
sbb
cmpl
mov
not
jmp
mov
jg
pushl
call
xor
or
mov
sub
or
and
dec
mov
or
xor
subl
mov
cmpl
movl
mov
movl
jmp
mov
movl
jb
push
call
or
mov
xor
movzwl
and
sub
sub
adc
sbbl
or
orl
orl
adcl
lea
mov
mov
sub
imul
mov
or
mov
or
jmp
and
sub
sbb
sbb
fs
lods
mov
adc
adc
adc
xor
pop
ljmp
lret
sahf
mov
sub
gs
rorl
xchg
stos
addr16
xor
jmp
sub
sar
loop
add
je
test
hlt
shr
aaa
stos
popf
pop
jl
dec
test
push
lods
xchg
or
ror
xchg
ret
xchg
mov
mov
jmp
inc
sub
and
leave
cmp
mov
popf
push
pop
and
outsb
xchg
add
mov
clc
adc
inc
fistpll
popf
lds
decb
mov
ss
sub
jne
xchg
pop
pop
out
push
sbb
fld
and
lods
inc
jbe
notb
mov
jp
inc
fistpl
add
or
je
push
jo
imul
adc
jp
gs
mov
jnp
jecxz
and
cmpsl
lcall
sub
sbb
adc
xor
push
out
jnp
movb
hlt
es
cmpsl
bound
mov
sbb
inc
cmp
xchg
cmp
iret
mov
jb
lret
dec
pop
push
push
mov
insb
mov
jmp
jecxz
movsw
inc
mov
outsl
ja
movsl
int
aad
shll
and
mov
arpl
lds
mov
jge
inc
pop
and
fwait
cli
add
pusha
push
jns
dec
lret
add
inc
sti
pop
gs
push
adc
jns
add
dec
xor
lock
and
jg
or
std
jmp
pop
jge
out
ret
jbe
into
xchg
arpl
mov
fnstsw
pushf
std
imull
ret
sbbl
xor
lret
mov
std
mov
jo
in
in
and
int3
sbb
fldz
or
pop
mov
add
incl
imul
arpl
mov
sub
out
cmp
sub
imul
jo
lret
push
sbb
mov
ljmp
jo
sub
xor
repnz
jmp
inc
pusha
adc
ss
fdivrs
add
pop
imul
outsl
dec
flds
mov
adc
inc
pop
dec
jae
push
scas
sbb
out
out
push
cmp
xchg
cmp
stos
sub
scas
xchg
xchg
and
push
cvtdq2ps
and
adc
popf
fwait
movsl
js
or
stc
loop
adc
adc
adc
hlt
leave
fs
cwtl
cwtl
sarl
or
int3
cmpsb
fs
xorl
fst
cwtl
or
jge
pushf
imul
icebp
test
stos
mov
addb
mov
fisttpl
mov
dec
add
and
jb
aam
insl
xchg
fsubs
aas
es
dec
enter
in
pop
and
ret
mov
lock
shr
aas
add
push
lret
aas
and
pop
adc
jns
mov
inc
add
inc
in
push
sti
imulb
pusha
pusha
mov
out
lods
add
lock
cmc
out
xchg
data16
jne
dec
hlt
mov
mov
sub
or
mov
jmp
push
pop
and
pop
leave
and
sti
lcall
pop
adc
adc
adc
mov
incl
mov
int
cmp
jmp
aad
dec
into
xor
sbb
loopne
mov
and
test
and
add
mov
out
jo
fwait
sti
jns
mov
mov
fistps
add
lods
or
sub
pop
std
mov
xchg
ret
mov
cmpsl
inc
enter
jmp
and
jbe
mov
arpl
pop
outsb
dec
fmul
add
mov
add
fwait
pusha
fcoms
xchg
stos
push
xchg
add
cmp
rorl
cmp
sbb
push
in
ficomps
xchg
shrl
adc
iretw
mov
cmc
sub
inc
nop
jae
xor
imul
or
adc
clc
xor
jp
jmp
fsubl
xor
inc
inc
inc
repnz
xor
iret
test
subl
cld
add
adc
inc
rclb
mov
mov
or
sbb
jmp
aaa
popf
add
push
mov
imul
dec
sbb
pop
lds
or
xchg
mov
stos
sbb
push
jecxz
lea
xchg
jle
mov
sub
lea
push
pop
dec
pusha
xor
inc
lahf
mov
inc
repnz
push
popf
stos
push
dec
or
movsl
rcr
pop
mov
or
out
jno
fs
xchg
jge
lods
add
sbb
fcompl
std
imul
add
sub
mov
addr16
movsb
dec
nop
mov
xchg
rorl
and
add
test
cmp
stos
popl
rol
pop
mov
sbb
and
adc
in
int
call
les
jo
inc
into
fldenv
and
cltd
inc
lds
cmpsl
add
rcrb
out
ljmp
jecxz
mov
fcoml
popa
stos
xor
and
cmp
pop
mov
mulb
std
fmulp
cmp
sbb
iret
js
and
dec
xchg
cmp
sbb
fisubl
sub
inc
sbb
and
mov
push
mov
out
pop
hlt
cltd
loope
pop
or
cld
xlat
push
or
xchg
cmc
mov
adcl
xor
rcrb
jge,pt
incb
push
cmc
mov
nop
jo
dec
sub
je
add
bound
mov
addr16
mulb
ret
mov
push
and
push
mov
sub
mov
dec
pop
pusha
jbe
pop
popa
out
mov
movsl
clc
xchg
xchg
dec
out
add
adc
pop
mov
adc
push
fdivr
imul
cmpl
push
ja
mov
dec
xor
pop
shlb
lret
std
cltd
cmpsb
xchg
adc
int
push
mov
and
push
enter
or
mov
cmp
std
outsb
iret
loope
cmp
loope
insb
icebp
push
aad
imulb
lret
out
popf
cmp
mov
cmp
inc
cmp
xchg
mov
ljmp
popl
insl
test
and
pop
xor
pop
xchg
inc
add
mov
mov
mov
sub
or
mov
cmpl
mov
mov
movl
mov
jmp
mov
mov
jl
push
pushl
push
pushl
push
call
not
adc
adc
mov
sub
mov
movzbl
sub
mov
mov
shrd
shr
andl
mov
adc
mov
xor
addl
xor
or
mov
movl
xor
or
sbb
movl
movl
movl
xor
add
mov
adc
movl
movl
movl
cmpl
movl
notl
movl
movl
jmp
not
jge
push
push
pushl
push
push
call
addl
xor
movl
addl
adcl
movl
add
movl
and
movl
sub
movl
movl
movl
movl
sbb
movl
movl
movl
mov
xor
movl
movl
subl
movl
add
movl
movl
movl
movl
cmpl
movl
movl
jmp
movl
movzwl
jne
push
call
addl
andl
adcl
or
subl
andl
cmpl
movl
movl
jmp
not
ja
push
call
subl
andl
subl
orl
subl
andl
mov
shl
orl
mov
push
subl
push
xorl
push
xorl
jmp
and
pop
and
push
shlb
push
call
adc
adc
xor
fcoms
jle
andl
or
mov
les
push
mov
sbb
or
sub
sub
ret
sarl
icebp
inc
imul
and
cmc
mov
out
int3
pop
ds
std
sbb
int
outsl
data16
in
mov
jb
push
into
faddl
jne
jmp
push
enter
mov
scas
jae
mov
xor
xor
pop
je
jp
mov
or
add
sahf
das
push
jb
ret
popf
mov
les
fcoml
std
mov
sub
dec
fisttpll
push
and
mov
cmp
mov
leave
inc
test
imul
inc
std
das
jmp
xchg
rcrl
dec
dec
or
adc
jle
cmpsb
mov
movsl
sub
pop
xchg
dec
add
ret
push
std
call
sbb
scas
sbb
aas
iret
sahf
loope
mov
loope
popa
mov
int3
xor
ret
icebp
ljmp
xchg
ja
hlt
ja
jle
mov
aam
push
xor
jns
jg
xor
leave
mov
rolb
push
lock
test
push
loope
or
mov
std
mov
aam
cmpsb
jb
xchg
out
das
lret
into
and
std
int
dec
test
lcall
dec
pop
cmp
fiaddl
add
movsl
mov
xor
jno
xchg
mov
dec
mov
lahf
in
scas
daa
lret
scas
jge
es
aam
mov
dec
sarl
fprem1
mov
popf
lock
sbb
dec
nop
jbe
sarb
pop
cmp
push
ret
lock
cvtdq2ps
aaa
cmpb
sbbl
lret
in
dec
sbb
andb
call
adc
lret
pusha
add
out
mov
in
jmp
cmp
mov
pop
stos
push
pusha
aad
mov
bound
rorl
in
jbe
ljmp
mov
xchg
popa
jns
sub
xorb
xor
sbb
push
fidivrl
add
dec
mov
leave
mov
std
and
xor
lods
dec
bound
push
inc
add
lods
xorb
sbb
hlt
andl
lcall
mov
push
cwtl
inc
mull
sti
adc
enter
xchg
mov
dec
ds
or
jle
add
mov
jno
lods
push
mov
aaa
pop
fstpt
leave
sarl
out
mov
test
out
xchg
push
movsb
xchg
andl
hlt
cmp
mov
dec
pop
push
sub
mov
popf
bound
pop
in
add
jge
les
mov
daa
outsb
mov
push
sbb
cwtl
xchg
shr
pop
test
mov
inc
jmp
scas
mov
js
cwtl
daa
xchg
insb
test
adc
sub
test
les
ret
negb
push
pop
addr16
add
into
dec
testl
xchg
add
mov
sahf
mov
push
call
mov
sbb
mov
mov
xor
xor
not
jmp
sub
sub
jnp
adc
std
adc
adc
adc
mov
inc
dec
mov
clc
popa
inc
push
push
in
sbb
push
inc
push
fidivs
or
jne
adc
es
loopne,pt
and
sbb
xor
sub
clc
rdmsr
cltd
xchg
cs
cs
or
seto
repnz
mov
cmp
sar
sub
imul
shrl
aam
jb
repnz
pop
inc
xchg
data16
notb
mov
int
push
add
mov
jne
popa
ret
adc
xchg
push
push
aam
inc
dec
pop
sub
mov
sbbl
lcall
leave
and
insb
mov
push
leave
push
or
popf
sbb
dec
and
add
loope
adc
jno
mov
and
adc
and
sahf
cwtl
inc
adc
jbe
repnz
mov
mov
or
cmp
dec
cltd
outsb
out
inc
insl
imul
jnp
pop
inc
mov
pop
xorb
aam
addr16
mov
jns
in
mov
xor
push
mov
mov
out
lea
std
jg
jle
or
testb
aad
stc
xor
jnp
push
pusha
xlat
push
inc
je
mov
xlat
insb
out
sahf
add
stc
cmpsb
out
push
push
lods
mov
cwtl
adc
cmpsl
mov
cmove
lea
push
sub
sub
mov
push
and
fcmovnb
mov
lcall
sbb
lods
scas
std
jge
mov
mov
dec
xor
imulb
adc
fwait
cmp
mov
push
loope
push
or
mov
sti
inc
test
fldt
mov
mov
dec
cmp
push
mov
mov
push
mov
push
call
fidivrl
test
ss
addl
pop
jmp
push
xchg
sub
and
loop
and
pop
cmp
xchg
push
mov
jns
jmp
sbb
xchg
in
or
test
mov
leave
dec
and
mov
mov
popa
mov
fcmovnbe
or
shrb
pop
add
mov
push
sbb
clc
gs
add
daa
sbb
enter
mov
out
inc
sbb
sarb
cmp
cmpb
dec
mov
lret
adc
mov
mov
test
add
decb
mov
std
frstor
out
push
out
inc
adc
or
outsl
incl
sub
pushl
push
pop
sub
stos
push
mov
les
in
xchg
sbb
cmp
pop
or
pop
incl
leave
pop
out
pop
add
inc
jns
mov
cmp
xchg
xorl
or
cmp
xchg
pop
pop
mov
jnp
adc
mov
sbb
xchg
jae
sub
push
mov
xchg
movsl
test
pop
jno
enter
cmp
pop
pop
popf
sub
pop
fs
pop
xor
mov
add
add
add
mov
sub
or
mov
mov
sub
mov
lea
xor
or
mov
and
mov
adc
mov
adcl
or
and
addl
mov
or
adcl
xor
movl
cmp
movl
jne
mov
mov
sub
sub
mov
sbb
mov
shrd
xorl
shr
mov
or
mov
movl
shl
adcl
xor
xorl
xor
addl
or
movl
mov
movl
cmp
jne
adc
mov
mov
mov
sub
add
mov
xor
sbb
mov
cmpl
movl
mov
jmp
notl
jbe
push
pushl
pushl
pushl
pushl
push
push
call
xor
subl
notl
or
mov
sbb
mov
cmpl
movl
movzwl
mov
jmp
movl
jle
push
call
sbbl
xor
neg
subl
sbb
mov
orl
shrd
subl
mov
dec
mov
addl
xor
shr
xor
mov
sbbl
xor
adcl
or
xorl
shl
xor
sub
and
mov
and
mov
xor
add
xor
mov
xorl
add
mov
neg
mov
adc
mov
and
shrd
orl
shr
mov
mov
add
mov
mov
xor
mov
mov
adc
xor
shl
negl
xor
cmpl
mov
mov
mov
jmp
movl
jb
pushl
push
push
pushl
pushl
push
push
push
pushl
pushl
pushl
pushl
pushl
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
or
mov
add
jmp
lcall
imul
pusha
push
push
repz
adc
adc
sub
stos
das
mov
sbb
hlt
adc
pop
cmp
jecxz
adc
xchg
lahf
mov
sar
adc
lret
pusha
cli
out
xlat
add
jo
add
dec
test
sahf
sub
pop
adc
add
mul
ret
xchg
shlb
jmp
xlat
out
ss
mov
cmp
sub
out
rcr
bound
or
movsl
out
std
push
lret
pop
clc
dec
dec
shlb
mov
jp
xchg
in
mov
in
or
xor
pushf
xchg
into
movsl
fistpl
sub
mov
clc
jbe
mov
fistl
out
dec
mov
fs
popf
es
mov
adc
in
push
int
lcall
sub
mov
inc
test
das
or
adc
cmovns
push
xchg
cli
movsb
fstpt
mov
lods
cmp
xchg
cltd
inc
mov
mov
outsl
pushf
and
outsb
jnp
pop
xor
ja
shrl
push
into
sbb
enter
pop
icebp
add
inc
pushf
shrl
lret
lcall
outsb
pop
cmpsb
inc
jle
xchg
dec
mov
fwait
scas
inc
or
adc
jp
and
sub
inc
push
mov
push
lock
imul
aam
mov
fstpt
fs
bnd
xchg
dec
cmp
sbb
mov
mov
bound
pop
pop
push
lods
inc
jae
cmp
lret
enter
fs
insl
mov
mov
arpl
sbb
dec
sbb
mov
mov
pop
push
scas
jb
test
loopne
jae
in
mov
mov
popf
or
xchg
je
pop
jnp
fwait
shr
orl
push
dec
insl
leave
mov
into
jno
mov
call
stc
xor
pusha
add
push
test
push
sub
mov
rcrl
mov
dec
mov
mov
or
lods
cmc
sub
jle
add
mov
lds
cmp
mov
xchg
mov
xchg
adc
mov
pop
add
pop
mov
rcrb
aam
xchg
mov
jp
test
shlb
or
cmp
cmc
hlt
adc
repz
and
fbstp
mov
cmp
jne
push
ljmp
aas
pop
repnz
test
jl
fsub
pop
xor
and
nop
andb
nop
adc
fcmovnb
dec
ja
outsb
aad
cmp
jecxz
loop
in
stc
mov
xor
push
jnp
pop
jnp
xor
mov
pop
cmp
mov
ja
inc
divl
xchg
sub
out
roll
in
es
in
inc
je
movsb
pop
mov
sti
ja
gs
mov
push
popf
push
push
aad
stc
repz
adc
nop
js
cmp
rolb
and
jne
push
add
jne
add
xchg
cltd
bound
and
push
jo
scas
int
js
jmp
adc
adc
cmp
fists
pushf
rorl
rol
inc
or
mov
sub
das
mov
aam
xor
inc
popa
stos
cmp
dec
notl
add
or
dec
shlb
mov
xor
pop
or
test
test
mov
jne
gs
cmp
push
push
xlat
popa
push
cs
test
mov
jno
or
addr16
xchg
lahf
jp
mov
or
cmpsl
daa
jno
insb
mov
jo
call
add
clc
xlat
cmpsl
sbb
test
mov
adc
daa
jo
ret
cmp
inc
lods
cmp
mov
mov
cs
xor
sarl
inc
pushw
fildll
mov
sbb
ret
or
mov
xorb
ret
shll
jne
add
rorl
hlt
por
loop
mov
adc
pop
mov
push
inc
adcb
nop
dec
lods
out
movb
or
ror
add
aas
mov
inc
cmc
hlt
jb
rorl
push
mov
sub
pushf
ss
mov
and
in
push
or
mov
pop
xor
in
jae
xor
add
jb
sbb
cmpsb
xchg
arpl
hlt
out
and
outsl
jae
pop
movsb
lret
push
stc
push
popa
lahf
pop
sarl
mov
arpl
push
and
mov
js
cmp
xchg
pop
fwait
lods
xlat
test
jl
jl
into
test
pop
loopne
xchg
inc
cwtl
add
shlb
scas
cli
push
or
or
stos
mov
movsl
xorl
in
lahf
outsl
adc
fidivrs
xchg
and
push
outsb
notb
push
in
dec
push
out
add
jg
fistpl
mov
xchg
xchg
sbb
and
subb
fistl
adc
mov
nop
pop
test
jle
inc
sub
jle
aad
or
mov
fbstp
stc
xchg
iret
cmpsl
or
jae
sub
cmp
xchg
ror
cltd
push
xchg
sbb
mov
sarl
jge
jp
enter
mov
jg
mov
xor
mov
leave
fcomps
push
mov
lods
pop
mov
imul
sahf
xor
or
mov
pop
push
jae
fcompl
dec
lcall
stos
and
fstl
enter
jp
mov
lret
adc
hlt
jecxz
notb
jmp
or
mov
sub
xlat
pop
testl
cmc
icebp
jnp
sbb
push
mov
cmpsl
mov
mov
pop
loope
inc
mov
pop
mov
mov
outsb
inc
frstor
inc
or
cli
lods
add
jae
dec
dec
in
jno
xchg
cmp
xchg
mov
or
mov
mov
fadd
frstor
sub
pop
outsl
icebp
jno
inc
push
rolb
pop
add
aaa
pop
inc
arpl
cwtl
jb
pop
shrd
andl
shr
mov
sbb
mov
mov
xor
orl
xor
or
shl
orl
lea
neg
mov
movzbl
add
mov
mov
shrd
subl
shr
mov
cmpl
mov
mov
mov
jmp
mov
movl
jae
push
pushl
pushl
call
dec
not
or
sbb
adcl
sbb
mov
mov
adcl
xor
mov
xor
orl
or
xorl
shl
add
imul
mov
movzwl
xor
mov
mov
shrd
mov
adc
mov
movl
xor
shr
mov
sbb
jmp
out
pop
out
pop
pop
jns
lcall
sub
cmp
adc
adc
adc
leave
jmp
mov
add
sub
test
fcos
jg
dec
lods
pop
xorl
stos
inc
mov
scas
dec
stos
in
and
mov
and
enter
mov
pop
mov
lahf
add
xor
outsb
sbb
std
scas
movsl
mov
jbe
mov
dec
out
fwait
xchg
rorl
sarb
or
push
scas
or
xchg
cli
outsl
outsl
xchg
or
push
push
mov
jno
cmp
int3
pushf
shrb
aam
mov
mov
test
repnz
enter
leave
xchg
xchg
in
adc
mov
popf
xchg
sti
test
stos
subb
out
aaa
subb
stos
loope
xor
mov
loope
jb
push
cmc
fildl
lods
mov
mov
jno
xchg
sbb
int
loopne
aad
adc
aas
push
adc
pop
dec
xchg
sub
xor
xchg
jmp
adcl
push
cmp
je
out
addb
jg
sbbb
push
jecxz
inc
out
pop
push
les
jmp
fwait
bound
mov
ljmp
ret
leave
inc
jecxz
xlat
jge
popaw
pop
sbb
or
std
stos
sarl
pop
in
xchg
scas
dec
jo
std
jo
add
xor
iret
cmpsl
arpl
inc
xorl
sub
lds
testl
mov
add
stos
pop
add
push
add
stos
pop
cmp
jbe
iret
adc
mov
ja
cmpsb
adc
stos
hlt
cmpsl
pop
inc
push
push
leave
call
ss
add
imulb
or
pop
sahf
push
mov
popa
stos
mov
testb
fwait
mov
dec
xor
and
jne
adc
xlat
jnp
jbe
or
shll
ret
cmpsl
sarb
mov
sbb
cmpsl
bound
mov
sbb
or
mov
adc
movsl
pop
lcall
movsl
cmp
sbb
mov
arpl
add
add
test
movsb
push
or
cmp
jmp
cld
xor
loop
sti
jno
xor
xchg
adc
push
lods
dec
fmull
jle
mov
out
js
insb
sar
scas
jmp
cmp
add
mulb
jg
mov
and
xchg
int3
pop
push
stc
xor
loope
loopne
insb
mov
xor
ss
shlb
cld
sub
xchg
xchg
rorl
in
mov
xchg
jl
sub
in
cwtl
cmpsb
popa
mov
sbb
or
leave
jp
add
mov
sbb
jns
or
xchg
arpl
jo
aaa
fwait
xor
cmpb
clc
addr16
mov
arpl
call
mov
fisubs
mov
cld
sbb
cmc
xchg
lock
into
cmc
bound
xchg
dec
pop
out
xor
outsl
or
shlb
mov
push
xchg
int
ds
data16
fistl
xor
or
orl
shl
sub
movl
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
mov
movl
jmp
notl
notl
ja
pushl
pushl
pushl
pushl
push
push
call
adcl
mov
add
sbb
add
and
mov
subl
shrd
mov
cmpl
movl
mov
mov
jmp
movl
ja
push
call
or
mov
mov
adc
movl
mov
add
movl
dec
mov
xor
shl
xor
orl
or
shr
mov
mov
mov
mov
xorl
shrd
shr
mov
sbb
mov
andl
mov
xor
sbbl
xor
or
orl
shl
imul
orl
sub
jmp
mov
dec
mov
shrd
orl
mov
mov
sub
mov
xor
andl
shl
xor
xorl
or
orl
shr
xor
mov
mov
cmpl
mov
mov
jmp
movl
movl
jae
call
and
xor
xor
xor
or
sub
add
subl
mov
mov
sub
imul
adc
sbb
jmp
popa
aad
mov
mov
popf
adc
add
mov
adc
adc
mov
pop
mov
rcl
mov
fisubrl
into
lret
push
mov
dec
jb
adc
rolb
xor
xlat
jae
stos
cmc
rcrl
jg
aad
popa
mov
or
stos
insl
cmp
insb
lcall
pop
mov
cmp
out
cwtl
stos
jg
test
push
cmp
and
and
mov
clc
jp
pop
les
pop
in
jmp
pop
xor
js
sub
xor
push
sahf
xor
adc
sahf
sub
adcl
pop
and
lods
pop
pop
xchg
push
decl
js
mov
test
dec
je
adc
xlat
das
fwait
push
mov
lcall
in
outsl
arpl
cli
pushf
mov
dec
inc
cmpsl
add
lahf
outsb
mov
or
or
mov
int
xchg
mov
rol
lahf
pop
push
leave
push
adc
add
pop
mov
dec
mov
xchg
xor
inc
add
mov
adc
test
fs
adc
daa
sbb
out
pop
lea
ret
cmp
call
out
mov
cmp
jne
pop
push
push
fcoml
popa
pop
shll
aaa
mov
adc
cwtl
mov
fucomp
gs
enter
ret
inc
std
test
xlat
xchg
mov
aam
pusha
enter
dec
fwait
icebp
in
pop
xchg
push
push
xor
pop
and
inc
pop
dec
sub
xor
adc
mov
add
call
rcrb
in
in
imul
pop
mov
mov
adc
lahf
xor
stc
enter
mov
inc
jnp
lods
and
mov
sbb
test
fidivrl
cmp
sbb
lods
jecxz
add
pop
jae
cwtl
jno
jns
repz
pmaxub
and
mov
movsb
in
lcall
push
sbb
sbb
mov
outsl
dec
addr16
in
mov
mov
in
jmp
dec
push
adc
cs
and
push
mov
xor
iret
xorb
sbb
mov
or
pop
jl
jo
mul
jge
loopne
lidtl
nop
pop
pavgw
push
inc
test
jno
jno
popf
cmpsl
lret
jecxz
sbb
iret
mov
movsb
dec
pop
pop
sarb
cmpsb
mov
int3
mov
test
add
dec
js
mul
stos
xchg
xchg
mov
dec
sbb
push
sbb
jne
rorl
repnz
leave
dec
insb
pop
inc
xlat
out
sahf
in
add
push
xchg
test
pop
hlt
and
dec
lods
and
mov
repnz
setg
mov
and
pop
clc
dec
sbb
addl
inc
mov
insb
push
xchg
push
loope
inc
xchg
push
iret
outsb
shlb
xchg
xchg
imul
xchg
xor
and
mov
pop
movsb
mov
dec
sbb
add
mov
movl
movl
jmp
notl
je
push
push
call
sub
movzbl
sbb
movzbl
sbb
sub
and
mov
adcl
shrd
sbbl
shr
mov
or
mov
mov
sbb
mov
xor
xor
adcl
or
xorl
shl
add
add
xor
mov
movl
mov
shrd
shr
mov
cmpl
mov
mov
jmp
movl
movl
jbe
push
push
push
push
call
and
xor
add
add
add
movl
xor
add
mov
xor
sub
mov
subl
xor
shl
xor
or
sbb
mov
cmpl
mov
mov
movzbl
jmp
notl
jl
push
pushl
push
push
push
call
sub
adc
sbb
subl
add
movl
adcl
mov
mov
add
movl
cmpl
movzbl
mov
mov
jmp
movl
movl
jl
push
push
push
push
pushl
pushl
push
pushl
call
sbb
sub
add
and
add
sbbl
sub
mov
movl
mov
sbb
movl
mov
mov
mov
or
shrd
subl
shr
cmpl
movl
movl
jmp
movl
jae
pushl
pushl
pushl
call
sbb
add
and
subl
adc
and
adcl
mov
mov
mov
add
mov
subl
xor
shl
and
xor
xorl
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
jmp
or
adc
inc
add
pushf
lods
out
pop
bound
fcoms
adc
adc
imul
mov
sub
add
insl
sub
dec
mov
arpl
dec
popa
jp
push
cmc
hlt
mov
test
xchg
lcall
daa
clc
cmp
pop
xorl
sub
imul
faddl
sub
xchg
les
sub
mov
repz
lret
arpl
jmp
pushf
push
xchg
jecxz
sbb
fimuls
jb
data16
dec
push
inc
shl
stc
aad
lods
enter
movsl
orl
mov
add
shr
xor
dec
out
daa
lret
push
out
out
adc
push
cmc
cwtl
sbb
add
mov
add
or
pop
pop
call
sub
cmpsb
data16
dec
or
cmp
mov
mov
xor
ret
push
xor
jns
out
adc
push
mov
rorb
imul
rolb
lcall
jae
aam
xchg
mov
test
mov
pop
xor
mov
or
cltd
sbb
sub
jbe
jmp
lock
stos
xor
ret
cmp
repz
fadd
inc
mov
imulb
inc
das
add
outsl
outsb
dec
jg
hlt
inc
shlb
lods
gs
cmpsb
lods
sbb
push
push
sub
xlat
mov
sti
repnz
jb
fsts
sub
ja
in
and
sub
sahf
fwait
mov
scas
jp
lds
xorl
insl
imul
lcall
pop
push
in
test
cmpb
mov
jb
jmp
cmc
idivb
sub
std
jle
popa
or
pop
mov
clc
jns
mov
cmp
cmp
jge
or
nop
mov
int3
movsb
cld
pop
shlb
int3
clc
xor
pop
cld
aaa
jg
xchg
mov
and
mov
or
test
dec
sbb
push
dec
gs
sbb
adc
jns
inc
sub
cmpsb
cld
xor
daa
mov
mov
jmp
cmpsl
je
mov
xor
out
xchg
pop
push
push
dec
ret
fmuls
or
push
ficompl
icebp
jmp
test
mov
jl
pop
or
sbbb
xor
mov
jmp
dec
pop
add
out
rcrb
xchg
adc
push
mov
leave
loope
xchg
insl
fs
push
pushf
push
pop
mov
and
repz
aas
push
mov
dec
xor
pop
bound
cwtl
clc
mov
xchg
xchg
fcom
dec
sub
inc
sub
fnstsw
and
repnz
xchg
insl
aas
dec
stos
bound
sar
push
mov
decb
imul
iret
push
sbb
mov
mov
gs
adc
mov
enter
mov
lcall
dec
push
jnp
or
pop
imul
inc
scas
test
jmp
in
pop
sub
int
imul
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
jmp
gs
test
sbb
xchg
js
pushf
dec
mov
adc
adc
push
call
std
out
xchg
xchg
in
pusha
add
into
sbb
sub
and
jecxz
ret
cmp
adc
or
xchg
push
scas
aas
ss
and
mov
andb
cmp
movsb
cmp
jmp
je
outsl
into
stos
jl
inc
or
inc
test
dec
imul
push
pop
sub
jecxz
cltd
push
sub
int
cmp
test
scas
pop
sbb
mov
pusha
lret
xor
mov
ss
je
adc
sub
sub
and
hlt
fsubrs
repnz
mov
add
bound
cmp
pop
les
add
cmp
lahf
outsb
repnz
jbe
mov
xor
add
push
pop
pop
ss
jns
inc
jnp
inc
sar
push
ret
out
insb
jo
jl
and
rclb
sbb
ja
add
xor
inc
pop
and
mov
movsb
lret
add
arpl
jp
lret
adc
fcmovbe
sbb
fidivrs
sti
mov
jnp
call
xor
cmp
and
subl
inc
jb
imull
loopne
bound
jnp
xchg
mov
daa
mov
test
shrl
inc
cwtl
outsl
sbb
ret
push
jmp
or
fnstcw
in
adc
inc
mov
push
inc
xchg
dec
fiadds
jle
xchg
sbb
inc
scas
mov
imul
lods
into
or
jnp
push
jns
jg
mov
mov
adc
push
enter
mov
adcl
or
sbb
xchg
inc
aad
enter
aam
push
cmpsl
ds
aaa
les
scas
or
or
sub
push
adc
aad
mov
push
movb
push
jae
dec
insl
adc
mov
pop
jnp
cs
pusha
repnz
nop
ljmp
xor
mov
jns
xor
lahf
into
pop
sub
aam
loopne
jmp
out
pop
dec
fwait
js
jmp
and
dec
test
in
jle
jne
in
add
xor
push
out
into
jno
mov
stos
cmp
bound
in
dec
fisubrs
sub
in
jle
pop
inc
push
xchg
cmp
cmp
test
ja
mov
add
es
in
fmull
movsl
ljmp
pop
idiv
add
ja
pushf
mov
xor
je
jge
stos
ror
fsincos
mov
ss
and
fs
or
mov
add
pop
fisubs
enter
call
xor
adc
pop
clc
push
mov
dec
or
adc
sbb
jb
cmpb
add
repnz
push
jnp
jp
jl
add
xchg
pop
add
jo
in
xor
imul
dec
int
mov
cmpsb
xor
addb
pop
stos
cmpsb
divb
inc
mov
ret
sahf
adc
lret
xor
xor
out
inc
fadds
and
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
jmp
cli
mov
cltd
mov
dec
add
js
int3
adc
adc
adc
popf
jecxz
ret
push
scas
add
mov
jo
imul
inc
pusha
pop
sahf
out
xor
pop
add
sbb
lds
jge
xchg
mov
negl
sub
dec
dec
clc
lret
pop
sti
addb
jg
push
in
scas
stos
mov
test
out
rclb
subb
sbb
and
fwait
stos
jbe
int
leave
sub
std
xchg
pop
xchg
xor
lock
and
and
xchg
push
movsb
xchg
test
fwait
xlat
and
test
lods
push
jmp
inc
adc
vcompressps
sarb
jmp
filds
cli
mov
lcall
out
adc
push
mov
lea
fildll
adc
shrl
push
je
mov
nop
mov
mov
push
movsl
xor
out
arpl
enter
mov
lock
cmp
stos
mov
rclb
enter
pushf
push
fwait
cmp
stc
jg
je
xchg
push
insl
adc
xlat
lret
ja
xor
cmp
fsubrl
xchg
sub
dec
sub
add
popa
add
arpl
mov
pop
imul
out
inc
cmc
cli
lds
xor
lret
jle
push
and
in
adc
jb
es
gs
mov
out
mov
xchg
mov
sub
call
mov
rep
cs
sub
aad
mov
sahf
gs
add
adc
fs
sub
push
cmp
rcrb
lods
sub
push
mov
les
push
stos
ja
inc
mov
lods
pop
push
ja
push
sub
add
xlat
xor
push
fstl
dec
loopne
or
out
das
mov
push
ret
js
cmp
add
test
inc
jae
out
xor
stos
push
xchg
dec
lahf
fldenv
nop
out
push
dec
jg
mov
in
lods
dec
je
dec
jp
push
fwait
mov
dec
lret
pop
dec
jmp
fwait
jmp
push
cs
cli
fsubs
sbb
dec
mov
add
fcomps
adc
lahf
loope
or
cmpsb
daa
ret
mov
pushaw
data16
sbbl
push
pop
inc
mov
test
addr16
rcrb
mov
hlt
jecxz
jo
out
pop
enter
adc
xor
scas
aas
shlb
lahf
jbe
mov
les
sbb
fdiv
sbb
aas
bound
imul
test
xchg
jl
push
loopne
mov
lods
repz
pop
cmp
or
xchg
nop
lock
mov
xor
repnz
add
fnsave
mov
xor
repz
mov
addb
int
js
xchg
decl
jp
inc
mov
pop
sti
fucom
ret
mov
xchg
sub
hlt
xchg
mov
icebp
pop
dec
and
inc
jg
xchg
aaa
mov
mov
and
add
or
divl
rcrl
adc
mov
mov
loopne
rorl
incl
inc
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
jmp
in
repz
jmp
les
inc
stos
xor
les
adc
adc
pusha
add
mov
inc
stos
mov
sarl
dec
xor
loop
shlb
dec
inc
enter
adc
xchg
push
jmp
xor
dec
cld
negl
lds
stos
nop
adc
adc
inc
or
push
inc
dec
call
cwtl
push
fadds
mov
and
std
push
movsl
ret
das
fdivl
or
out
dec
inc
scas
cwtl
rcrb
insb
adc
fwait
daa
ret
roll
jbe
jecxz
mov
aam
push
cmpsl
clc
lcall
dec
or
and
stos
mul
and
stc
mov
sbb
aam
mov
test
lods
into
in
aas
cmp
flds
jno
es
or
and
mov
pusha
jge
mov
movsl
add
out
jl
clc
lods
sbb
mov
push
scas
aad
in
into
and
cmc
je
push
jns
push
pop
lea
add
outsb
jo
pop
xor
lret
daa
inc
adcl
aad
cmp
mov
mov
xchg
xlat
out
or
paddusb
stos
loop
pop
xor
fbld
push
aad
jp
jnp
movsb
sbb
in
xor
es
mov
add
in
lcall
icebp
jl
mov
fsubs
push
xor
dec
jmp
outsb
repz
mov
jle
dec
je
pop
inc
xchg
jle
mov
inc
xor
dec
imul
sti
cmp
cmp
and
icebp
gs
hlt
lock
adc
lcall
movsl
sub
push
scas
and
push
sti
jne
mov
mov
push
jb
push
jge
mov
and
xor
lds
xor
push
test
cmc
fidivl
int
xchg
xor
mov
mov
xor
mov
outsb
lahf
mov
push
jno
cld
add
pop
test
arpl
jno
push
hlt
into
xor
jnp
cmp
imul
xor
cmp
push
arpl
mov
pusha
pop
test
gs
icebp
adc
mov
inc
mov
daa
jecxz
imul
sbbb
sbb
push
xchg
dec
jle
aad
sub
inc
sbb
add
movsl
sub
sub
sahf
leave
sarb
mov
mov
out
aad
insb
inc
xchg
adc
dec
lds
cmp
ret
popf
push
mov
rorl
daa
and
pop
sbb
and
cltd
mov
test
orl
xchg
loope
jg
jle
test
movb
lea
loop
pushf
repnz
xor
xor
rcrb
mov
nop
jp
jg
dec
push
push
xchg
movsl
xchg
sbb
notb
and
or
test
inc
inc
repz
addr16
xchg
xlat
inc
aas
jo
lea
jb
pushf
jp
test
into
bound
and
or
cli
inc
and
pushf
pushf
inc
and
sar
frstor
add
or
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
jmp
fs
push
add
aaa
sbb
push
push
mov
push
ret
adc
adc
pop
sub
jae,pt
hlt
pop
call
push
xchg
and
and
into
cltd
es
jb
push
push
push
dec
test
scas
add
jg
jbe
dec
adc
mov
sub
out
mov
pop
orl
pop
divb
imul
fs
pop
or
rol
mov
inc
pop
sub
inc
sbbb
fwait
sub
repnz
call
cmp
pop
and
inc
lret
fcom
cmp
pushf
pop
push
push
mov
hlt
test
xchg
and
push
jl
stos
inc
sub
inc
es
rcrl
push
sub
adc
sbb
sbb
pop
lds
call
popa
call
dec
dec
cmpsb
inc
xchg
aas
add
mov
and
mov
mov
fisttps
mov
inc
js
jmp
and
mov
cmpsl
mov
inc
xchg
je
jns
xor
jns
in
scas
sub
jge
adc
pop
cwtl
lret
rorl
mov
jl
aaa
dec
frstor
jae
hlt
dec
mov
cltd
mov
lea
mov
and
lds
add
add
std
adc
mov
fstpl
icebp
or
jo
imul
mov
sbb
adc
or
mov
dec
xchg
mov
inc
pop
fdiv
pop
cmp
dec
pop
dec
dec
sbb
mov
jmp
jmp
sbb
dec
scas
fnstsw
mov
push
push
ret
cmp
dec
xlat
adc
stc
xor
into
xchg
dec
addr16
jbe
add
push
mov
push
inc
add
out
add
cltd
inc
into
cltd
add
push
mov
out
jge
and
lahf
add
lret
or
cmp
dec
in
std
push
sbb
add
inc
loop
push
pop
jb
inc
push
fdivl
xchg
pop
ret
jo
mov
mov
lret
dec
pop
mov
mov
stc
mov
lea
sub
repnz
sbb
mov
sub
dec
jle
sub
fadd
shlb
pusha
movntps
call
mov
mov
mov
jne
movsb
add
ljmp
data16
mov
mov
sub
sbb
xchg
mov
mov
leave
mov
dec
xchg
xor
addl
stc
ljmp
scas
pop
mov
dec
and
cmp
adc
sub
pop
fnstenv
push
stos
in
ret
fcomps
dec
enter
dec
imul
mov
jbe
pop
leave
ljmp
std
out
jbe
mov
in
cld
rol
lea
movl
jge
out
push
aaa
pop
sub
and
unpcklps
enter
xor
hlt
xor
xchg
cmpsb
jmp
das
shll
inc
xor
imul
out
and
xchg
xor
mov
xor
and
popa
clc
dec
and
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
jmp
lods
dec
sbb
sbb
sbb
and
mov
adc
adc
pop
cmp
fstpt
mov
or
stos
adc
pop
push
lock
les
pop
cmp
mov
mov
xlat
popa
fldl
mov
int3
ret
insb
cmp
sbb
dec
mov
xchg
push
int
or
bnd
fsts
push
cli
sub
sbb
gs
sbb
push
std
inc
mov
inc
push
popa
es
leave
xchg
lret
out
jmp
dec
ss
mov
or
mov
rcr
arpl
adc
xchg
imul
xor
cmpsb
jmp
shrl
pushf
pop
pop
mov
xchg
mov
dec
daa
inc
xchg
fs
sub
cmp
and
shr
adc
or
adc
and
insb
inc
mov
cli
cmpsb
clc
adc
popa
push
pop
pop
adc
repnz
fwait
inc
add
sbb
in
cwtl
fldcw
in
dec
loop
dec
lret
pop
add
pop
xchg
adc
mov
es
jno
sbb
daa
imul
pop
arpl
mov
mov
and
ds
push
addr16
in
rcr
xchg
push
xor
aad
les
or
lds
dec
jmp
int
and
sbb
ret
mov
or
adc
enter
cmp
dec
inc
push
arpl
icebp
faddp
in
inc
stc
in
int
loop
in
xchg
enter
in
stc
pop
test
push
cmp
fisubrs
pop
lret
sub
pop
sti
xor
sbb
add
idivb
in
mov
fcoms
pushf
std
inc
jns
shl
out
cmp
movsb
mov
test
and
push
jge
mov
pushfw
cmp
push
fst
sbb
inc
lock
cmpsb
ret
lds
xor
add
jg
xlat
faddl
xchg
sub
ss
mov
or
cmp
add
out
jmp
push
dec
fcomi
fisubs
cld
dec
pop
push
dec
ss
divb
int3
pop
sti
add
repnz
lret
pop
aad
mov
pop
jns
pop
ror
loope
adc
rclb
add
nop
pop
xchg
test
test
test
mov
add
or
lods
sbb
push
cld
fnsave
out
jae
std
das
fsub
pusha
push
popf
jae
imul
sub
data16
sub
mul
mov
lea
test
mov
lods
push
ficompl
pop
jle
in
aam
pop
outsb
pop
icebp
dec
pop
jmp
jns
cwtl
mov
mov
das
js
sbb
into
pop
aas
in
shlb
and
mov
orl
jnp
push
inc
and
rcrl
popf
pop
push
scas
imul
xchg
mov
imul
add
popf
roll
jecxz
fwait
jo
cmp
fcompl
rorl
jae
push
pop
mov
pusha
or
pusha
test
mov
cld
nop
dec
mov
movsl
adc
int3
cmove
cmpsl
inc
cmp
lret
cmc
shl
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
jmp
scas
mov
mov
sub
stos
lahf
mov
adc
adc
adc
sbb
jmp
mov
or
lods
cld
cld
dec
mov
jae
mov
fbld
pop
sub
push
dec
cmp
sub
cmp
arpl
ljmp
repnz
loop
aaa
push
std
jns
es
les
loop
les
mov
dec
into
pop
dec
xor
push
lea
dec
imul
and
aam
jge
loopne
mov
out
test
lret
mov
cmpsb
inc
or
xorl
cli
dec
scas
cli
insb
loop
fwait
jno
adc
pop
push
mov
xor
jg
fdivrs
test
cmpsl
out
in
mov
icebp
int
roll
sub
push
mov
push
xor
mov
mov
mov
scas
paddq
lcall
int3
push
js
mov
push
jnp
lds
and
ds
outsb
push
stc
mov
addb
lea
sub
outsl
jp
cmp
push
add
adc
jle
outsl
mov
dec
adc
idivb
xchg
and
dec
or
rorb
idivb
xchg
ret
sahf
repnz
push
sub
addr16
repz
sbb
xor
adc
jno
sbb
popf
sbb
cmp
leave
mov
dec
fnstsw
aad
repnz
sbb
icebp
popf
and
icebp
das
in
pop
adc
imul
adc
push
mov
push
dec
inc
popf
adc
inc
cmp
xor
push
cli
stos
xor
sub
fdivr
sahf
fcomi
aam
add
fsubp
insl
in
daa
lods
and
je
orb
pop
jl
mov
jp
pop
pop
push
mov
push
cmpsl
bound
outsl
add
mov
js
cmp
ret
xlat
mov
stos
les
filds
xchg
ds
scas
fdivp
imul
mov
inc
pop
inc
outsl
addr16
jmp
shlb
orb
xor
sbb
arpl
js,pt
scas
dec
pop
frstor
mov
push
or
movsl
ss
pusha
xor
sarl
and
jle
int3
fbld
pushf
or
dec
push
fstpl
js
xor
cs
movsb
xor
xchg
dec
das
jmp
movsb
fwait
dec
lahf
mov
sbb
outsb
daa
cwtl
fidivs
dec
push
sbb
or
aas
sbb
mov
push
stos
sar
sub
push
xchg
repz
enter
cmpsb
repnz
pushf
jbe
ret
mov
sub
fwait
movsb
xlat
repz
pop
jo
imul
ja
loope
sbb
adc
enter
ja
dec
mov
int3
fnstcw
fidivs
pop
cmp
enter
lahf
mov
cmp
jmp
icebp
test
inc
imul
inc
cmpsb
into
pop
lods
push
lock
popa
dec
lock
lock
scas
loop
sub
xchg
repz
pcmpgtb
test
es
push
mov
out
outsl
movsl
pusha
mull
xor
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
jmp
hlt
xor
pop
and
daa
insl
rep
hlt
scas
adc
adc
adc
jg
ds
fwait
int3
mov
adc
xor
mov
fwait
and
cmp
xchg
ret
cld
push
adc
push
sub
push
cltd
add
jae
cmpsb
cmp
jo
lds
inc
stos
pop
mov
or
in
push
cmp
mov
xchg
out
ss
test
ret
js
sub
pop
or
movsb
in
fistps
mov
out
std
and
imul
or
mov
aad
dec
jge
imul
cmpsl
add
dec
stc
rcll
add
andb
hlt
pusha
in
jle
sti
addr16
and
insb
inc
add
cmp
pop
push
outsb
sbb
push
leave
ljmp
lds
cmp
ja
sub
shll
rcrl
xchg
fcoml
xor
ret
pop
stos
sahf
sbb
scas
and
movsl
and
mov
xor
mov
add
mov
jno
in
sbb
adc
fimull
add
add
fwait
pop
and
jge
mov
pop
push
stos
jge
mov
aad
xchg
add
mov
jnp
add
in
add
and
and
iret
call
mov
lahf
fimuls
or
jp
mov
fsubrs
jmp
and
xchg
jns
mov
mov
sbb
call
xchg
pushf
imul
or
mov
das
enter
test
arpl
lea
mov
and
imull
dec
adc
xchg
dec
add
jmp
scas
push
fucomp
in
ljmp
js
sub
vorps
jb
inc
sbb
sub
mov
cmp
sahf
jo
adc
movsl
sahf
call
test
sbb
bound
fcomps
clc
push
scas
orl
movsb
ret
aas
addr16
mov
adc
and
mov
adc
aas
out
push
arpl
cmpsl
scas
push
nop
pop
adcb
fdivrl
mov
jne
or
popf
fs
mov
mov
fwait
shlb
leave
jo
stos
fistpl
mov
shrl
out
and
aas
mov
cs
pop
push
pushf
fidivl
adc
add
jmp
pop
dec
sahf
or
cmp
out
mov
ss
dec
jae
jmp
neg
hlt
daa
xor
loope
sub
cmp
mov
iret
and
cli
sahf
popf
dec
icebp
mov
addr16
das
push
pop
and
pop
mov
mov
and
aam
ret
aas
inc
dec
mov
xor
in
es
or
and
pop
js
add
rcl
cmp
popa
ds
iret
adc
jecxz
mov
mov
inc
mov
jmp
clc
outsl
or
repnz
or
and
shrl
in
pop
mov
cmp
popf
jmp
faddl
pop
inc
daa
fs
push
ret
or
fiadds
ret
roll
call
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
inc
jbe
js
js
sub
dec
push
push
movsb
adc
adc
adc
add
pop
mov
adc
cs
dec
xchg
fwait
movhps
adc
sahf
cmp
loopne
jb
jmp
clc
jle
mov
or
stos
int
xchg
or
push
mov
dec
sbb
int
repz
cmpl
fwait
lcall
add
jle
mov
push
xor
jo
dec
adc
cli
lods
add
push
call
xchg
pop
out
pop
aas
jecxz
fisubrl
insl
sub
or
leave
cmp
push
ss
pop
mov
into
sbb
jo
ret
shr
cwtl
mov
mov
inc
xor
push
or
testl
pop
jnp
dec
std
daa
stc
xchg
pop
inc
cmp
sarl
lret
mov
or
pop
inc
movsl
xchg
fists
cmpsb
test
arpl
jge
add
dec
push
inc
xlat
push
or
pop
scas
test
and
pop
xchg
dec
out
and
mov
jo
andb
lcall
xor
sbb
les
fists
test
dec
inc
adc
xchg
pop
push
cmc
call
dec
outsb
enter
jmp
and
dec
jl
incl
sbb
scas
cmp
hlt
ljmp
int
int
push
xchg
sar
inc
out
cmpsb
hlt
mov
fcomp
mov
jecxz
sbb
insl
mov
dec
adc
sub
test
xlat
lds
lret
sarb
xchg
test
mov
ret
sbb
jmp
mov
mov
sti
outsb
inc
cmp
ja
or
call
sbb
mov
jecxz
add
push
movsb
aaa
lea
lahf
getsec
xchg
insl
cltd
xlat
js
dec
sbb
push
fisubrl
test
fstpl
call
inc
jnp
rcrl
sbb
lea
clc
insb
in
push
xchg
jl
adc
int3
movsb
gs
mov
jb
or
mov
cs
adc
js
in
adc
cmp
lods
out
into
add
jp
pop
xchg
sub
test
pop
aam
test
ret
rcl
fiadds
cmp
or
xor
add
xchg
pop
push
xorl
xchg
in
push
push
pop
sbb
in
xchg
int3
dec
mov
dec
push
cmp
data16
cld
imul
cmp
out
sti
sub
inc
fdivr
mov
in
cli
les
or
fnsave
jle
mov
cwtl
lds
pop
jno
mov
in
and
add
das
clc
andb
out
hlt
imul
pop
xchg
cmp
or
adc
inc
aam
and
orb
fdivs
adc
pop
add
cmpb
xor
fucomp
inc
mov
cmpsb
fcmovb
ficoms
ror
rorb
js
xor
sub
push
insb
pusha
add
pop
mov
mov
data16
push
int
faddl
mov
jge
mov
sub
fs
aas
fistpl
jnp
jne
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
jmp
stc
xor
mov
sub
icebp
stos
dec
adc
jle
pushf
adc
adc
adc
aas
mov
cmp
adc
imul
test
daa
cld
je
div
sub
pop
es
aam
lea
shlb
outsl
jne
aam
cli
ja
dec
sti
scas
pop
movsb
insl
pop
std
jae
popa
testl
loop
xchg
sub
mov
sahf
pop
add
mov
add
fnsave
push
xor
je
dec
push
aaa
mov
sbb
mov
adc
push
ljmp
imul
cwtl
ja
mov
add
notl
inc
outsb
mov
xchg
mov
aas
or
jp
scas
adc
fnsave
adc
pusha
jmp
dec
sub
les
dec
pop
dec
xchg
hlt
and
test
sub
xor
mov
adc
cmp
stc
dec
enter
sbb
mov
shrl
xchg
jns
mov
fbstp
push
and
and
jne
cmp
rcl
pop
pop
fwait
mov
loope
inc
imulb
cld
sbb
imul
jae
sub
sub
daa
sub
pop
rolb
lods
pop
xchg
or
mov
popf
jno
int
sub
xor
mov
fildll
mov
ret
mov
iret
push
cmp
push
mov
inc
cmp
cmp
scas
mov
adc
mov
cld
cmp
xchg
inc
add
xchg
mov
into
pushf
fisttps
pop
or
sbb
sti
cmpsb
test
mov
js
shlb
mov
pop
pusha
data16
daa
xchg
jl
xchg
xorl
pop
ja
and
mov
repz
rclb
push
outsb
fdivrl
or
sbb
lods
les
in
js
cmp
pop
sub
adc
movsb
sti
mov
imul
ret
sub
dec
and
outsb
out
dec
outsl
stos
aas
push
popf
sbb
cmpb
push
xchg
push
dec
fcmovbe
rolb
call
in
jno
push
imul
mov
daa
int3
es
jb
cmp
xor
jbe
mov
stc
test
pop
stos
je
jl
pop
imul
mov
lea
rep
faddp
fisubl
ja
adc
sti
jbe
push
ljmp
js
icebp
andl
ret
add
jbe
dec
mov
sub
rclb
pop
cmp
ss
fcmovnb
test
sarl
subb
cmp
lds
cltd
imul
jbe
lahf
jbe
aad
mov
in
and
js
mov
sbb
ret
lock
or
and
std
mov
sahf
mov
scas
pop
pop
inc
or
mov
nop
lds
iret
and
xor
sti
lcall
test
adc
out
xchg
imul
rorb
cld
rcrl
add
jmp
pop
xor
decl
fsubrs
jg
mov
dec
push
push
sub
sbbb
mov
or
add
mov
jmp
xor
and
xor
lods
insb
loope
adc
adc
adc
int3
xor
and
mov
lods
xchg
and
mov
cmp
mov
add
adc
pop
imul
mov
xor
push
test
mov
adc
stc
inc
out
stos
pop
fldl
iret
push
sub
ljmp
daa
ret
or
notb
xchg
lods
testl
mov
adc
or
sub
addr16
push
mov
movsl
cmpsb
add
inc
jle
and
outsb
add
movsb
dec
sbb
lret
mov
pop
jg
add
cmp
adc
ja
fcmovnb
pop
aad
push
xchg
mov
mov
iret
jecxz
insb
icebp
ret
popa
idivb
andb
adc
xor
push
jp
fcmovnb
test
insb
jb
lahf
pop
dec
icebp
sub
mov
add
es
movsb
outsl
imul
fs
dec
xor
ja
sub
sar
xor
je
adc
push
mov
cmp
cmp
das
std
out
rorb
rcrb
stos
mov
aam
fstps
mov
or
lods
adc
scas
out
daa
sbb
or
inc
jg
aaa
cli
imul
sti
xor
adc
lock
ja
insl
rorl
dec
shll
aad
pop
mov
cmp
hlt
add
stos
aaa
lock
dec
ja
or
jbe
bound
les
mov
leave
mov
adcl
ljmp
mov
cmp
in
and
sub
aad
push
sbb
jnp
sub
je
frstor
mov
mov
int
jge
sub
sti
push
into
icebp
dec
cltd
lahf
sbb
jbe
inc
xor
scas
and
mov
jb
dec
fnsave
out
pop
jg
aad
lds
jmp
and
lahf
insl
mov
sbb
mov
aaa
xor
lds
test
xchg
movsl
cmc
mov
mov
mov
push
bound
push
ret
xchg
dec
ljmp
daa
call
mov
nop
lcall
sbb
shl
fstpt
rorl
cwtl
pusha
fs
xor
stos
out
jne
addb
stc
push
or
xchg
mov
or
inc
lret
cltd
outsl
xchg
ljmp
mov
dec
std
jne
fiadds
bound
or
inc
iret
cwtl
out
jl
data16
movb
outsl
popf
sub
in
int
cwtl
out
push
cwtl
rcll
and
test
cli
out
movswl
movsb
inc
stos
aas
xchg
jnp
sbb
lods
lcall
sbb
aaa
and
mov
mov
je
pop
jae
xchg
xor
hlt
daa
mov
and
stc
mov
or
mov
in
add
outsl
jp
ret
adc
outsl
jo
sbb
xchg
fimuls
xor
repz
ds
shrb
rorl
and
pop
dec
jg
pushf
sbbl
test
pusha
mov
inc
pusha
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
adc
and
sbb
xchg
out
js
nop
adc
adc
adc
mov
fbld
jmp
cmpsl
mov
sub
jns
pop
mov
movsb
dec
mov
lods
mov
inc
adc
int3
pop
fs
call
je
xor
push
xchg
in
push
xchg
xchg
xor
out
pushf
xlat
push
lahf
ret
in
sahf
repz
out
push
and
out
enter
int3
cmp
adc
imul
jp
and
adc
adc
movl
lahf
mov
imul
test
cs
pop
repz
std
sub
test
repnz
mov
fmul
shl
mov
lods
movsl
loope
stos
aam
outsl
mov
loope
mov
addr16
sar
xlat
scas
adc
or
pushf
sub
xchg
test
pop
sbb
inc
arpl
mov
inc
cmp
pushf
and
rolb
adcl
out
inc
adc
dec
pop
dec
scas
pop
les
xchg
out
dec
lock
add
loopne
pop
filds
jb
jnp
in
dec
mov
pop
out
xor
arpl
test
imul
cmpsl
xchg
divl
fsubs
into
movsb
jge
mov
loope
movsl
aas
cmc
enter
bound
stc
imul
xor
das
or
and
jmp
sahf
sbb
lock
outsl
loop
xor
push
movsb
out
push
or
inc
push
ja
not
aad
pop
dec
sub
hlt
jge
leave
mov
adc
lret
outsb
shll
mov
lock
xor
or
test
pop
push
lret
iret
movsb
jecxz
push
lods
sub
fnstenv
jp
fcomip
addl
fwait
sub
std
pop
fldt
inc
xor
sarl
addl
mov
popa
mov
xchg
jno
cmp
push
insl
aas
sub
in
cmpsl
outsl
cmp
or
lods
xor
push
icebp
and
lcall
enter
mov
mov
sahf
xor
xor
push
popa
inc
sti
mov
dec
xor
mov
push
cmc
inc
ret
xchg
xlat
jno
adc
xor
xor
dec
inc
add
lret
xchg
test
cmpsb
in
lahf
inc
push
jg
mov
xchg
push
in
mov
aam
jl
repz
in
test
into
sub
cmpsl
int
lds
int3
jnp
imul
test
mov
insl
repz
sbb
mov
push
and
lock
add
push
loope
add
aam
mov
loop
cmc
stc
fcoml
daa
fcmovu
push
adc
pop
daa
jnp
inc
mov
push
xor
add
in
test
hlt
les
inc
and
lahf
std
out
mov
jle
jmp
loopne
push
stos
scas
dec
jp
cmp
cmovo
outsb
rol
call
mov
mov
div
sbb
scas
xchg
fs
add
jb
imul
jmp
gs
mov
stos
jecxz
lods
sub
div
imul
and
push
sub
addb
inc
insl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
jmp
insl
outsb
fstps
ret
mov
cmp
mov
adc
adc
ret
jmp
mov
mov
and
jno
push
mov
add
iret
cmp
cs
in
testb
out
fcomps
pop
loope
lock
dec
xor
add
shll
xor
sbbl
lahf
pop
mov
push
lret
jp
jle
nop
shr
dec
ss
icebp
jo
pop
inc
lods
aad
cmp
ja
jb
repnz
insb
test
push
mov
icebp
sub
jle
inc
add
lahf
jbe
cli
xor
in
imul
sarl
loopne
cmp
jb
push
movsb
mov
xlat
sbbl
pop
das
inc
nop
pop
xchg
adc
add
mov
inc
push
cli
mov
add
and
fwait
push
mov
add
mov
int3
sub
lods
xor
xor
call
pusha
lds
clc
dec
stos
les
push
lret
rcrb
xor
dec
movaps
pop
push
incb
dec
jnp
dec
mov
push
fs
shlb
pop
popa
and
and
inc
cmp
mov
or
push
and
movsl
dec
mov
fwait
cmp
sbb
mov
inc
lea
push
or
xchg
inc
popf
hlt
mov
add
out
mov
mov
pop
jecxz
cmpsl
lcall
lret
divb
xor
notb
mov
fwait
in
push
cld
and
popa
iret
sub
fidivl
add
fnstenv
ret
roll
xchg
ss
jnp
push
int
sbb
xor
xchg
ds
jno
insl
pop
pop
cli
out
mov
dec
mov
dec
loope
sub
rorl
mov
xor
dec
mov
aaa
scas
xor
jae
xor
iret
xchg
hlt
xorb
call
mov
push
enter
jbe
pop
mov
out
dec
imul
add
jge
sar
and
mov
ljmp
jmp
mov
sub
inc
in
inc
les
icebp
hlt
fwait
dec
cld
out
mov
pop
pop
aaa
mov
lret
xlat
rep
push
or
fiaddl
mov
mov
jae
mov
outsl
mov
mov
adc
mov
add
mov
cmp
adcb
sub
in
rorb
ficompl
mov
test
out
inc
push
and
sub
sub
insb
adc
lods
add
jp
inc
push
and
lea
cmp
sbb
dec
fcompl
fcmovnbe
stos
es
loope
and
xlat
or
xchg
or
fs
stos
pop
dec
in
lods
and
mov
or
xchg
jl
jno
mov
cwtl
add
xor
jl
movsl
rorl
jnp
mov
mov
adc
mov
ja
call
ret
cs
mov
pop
or
dec
pop
add
cld
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
jmp
out
sub
pop
popf
and
inc
dec
mov
movl
and
rcll
push
jg
mov
int3
rorl
rorb
jle
je
xor
cltd
aam
shl
or
call
inc
lret
repnz
mov
inc
in
inc
js
sti
lock
pusha
out
or
stos
sbb
inc
frstor
aas
push
pop
in
mov
stos
imull
dec
out
data16
sbbl
out
jl
mov
xor
xor
mov
hlt
aas
fcoms
aam
out
jmp
jae
or
pop
jle
push
das
or
cli
fimull
sub
jns
psrld
imul
test
push
and
push
sahf
inc
sub
pop
out
in
sbb
rcr
addr16
mov
call
and
sbb
inc
push
adcl
mov
inc
dec
or
ret
xchg
dec
push
adc
fwait
movsl
pop
jecxz
sub
das
cltd
pop
mov
jb
or
fildl
data16
pop
fdivrs
notl
and
cmp
mov
in
movsb
jno
in
sbbl
das
dec
or
fidivl
jg
cs
loop
mov
pop
xchg
xlat
jp
pop
mov
sti
push
push
mov
in
inc
idivl
testb
or
push
xor
xchg
xor
fisubl
lods
add
lea
out
in
movsb
mov
fadds
ret
pop
adcw
pop
dec
push
inc
in
dec
fidivs
xchg
cs
dec
push
push
mov
cmpsb
lods
mov
dec
pop
sbb
mov
outsl
inc
xchg
push
js
sub
push
into
xchg
push
xchg
fs
pop
push
cmp
mov
push
sbb
fmul
sahf
add
cmp
mov
adc
push
sub
sti
mov
inc
sbb
ror
out
or
shrl
push
push
xlat
xor
sub
pop
call
cmp
jno
sti
mov
xchg
loop
stos
fs
in
fidivl
decl
cli
cmc
push
cmpl
notb
fdiv
push
jge
gs
divl
mov
xchg
fbstp
roll
mov
out
or
pop
cmp
push
sti
es
pop
out
pop
movsb
mov
or
pop
ret
shlb
cli
xchg
jge
and
fildll
sbb
push
fmull
xchg
adc
push
push
addr16
mov
mov
mov
dec
outsl
aaa
icebp
js
in
mov
sub
xchg
push
flds
lcall
inc
inc
sbb
push
rol
imul
add
inc
test
loope
xchg
sti
jecxz
add
flds
xchg
ret
add
push
cmp
fldt
test
cmpsb
mov
das
mov
jo
adc
inc
jb
fldz
and
adc
and
push
mov
mov
mov
movsb
cmp
dec
push
xchg
aam
or
dec
and
jmp
pop
add
push
add
push
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
jmp
xchg
hlt
insb
lret
xor
pop
dec
mov
jle
jl
adc
adc
leave
cmpsl
jmp
mov
pusha
jp
xchg
imul
lock
sbb
dec
dec
sahf
and
jg
inc
movsb
mov
sbb
std
stos
outsb
out
or
call
ret
inc
popf
jp
xchg
subl
mov
mov
xchg
or
pushf
arpl
push
mov
fildl
jmp
and
jns
and
iret
sbb
pop
outsl
call
add
cs
fadds
call
mov
sub
test
mov
fdivl
fwait
testb
inc
dec
push
xor
cmp
pop
lods
or
sbb
movsb
jae
pop
mov
cmc
sbb
cmpsb
adcl
cwtl
lods
jecxz
pushf
pusha
das
mov
int3
lret
inc
mov
mov
addb
pop
sbb
ss
adc
xchg
in
gs
adc
lahf
shll
or
icebp
rorl
adc
or
sub
mov
mov
sbb
leave
pop
mov
push
mov
popf
cmc
ss
adc
sti
mov
add
push
lea
mov
push
les
stos
pmulhuw
jecxz
or
pop
jbe
xor
pop
sahf
mov
in
mov
jmp
pop
leave
stos
inc
divb
dec
imul
pop
pop
ds
cmp
imul
je
dec
push
mov
xchg
or
and
or
mov
cmp
subl
insl
push
xchg
cmp
push
add
pop
cmp
cs
lea
cmc
mov
pop
mov
mov
cmpl
jmp
filds
sbb
fstl
std
mov
sbbb
cld
or
shr
stc
outsl
or
dec
xsaves
int3
push
mov
int
test
inc
test
cmpb
dec
loope
sbb
add
adcl
gs
call
lret
pop
pop
sti
add
jle
loope
test
mov
sub
pop
data16
shrb
mov
bound
int3
test
xchg
andl
test
icebp
dec
scas
add
mov
add
test
or
inc
pop
outsl
jae
cmp
push
shll
inc
or
push
dec
loope
daa
movsl
mov
shlb
mov
inc
iret
xor
ds
movsb
add
pop
pop
out
fs
add
jl
daa
and
mov
aaa
sbb
out
push
arpl
test
fldcw
mov
testl
fstl
mov
dec
leave
jo
mov
insb
mov
mov
xor
fprem1
fcmovb
push
shl
push
or
add
push
into
adc
inc
insl
icebp
inc
in
cmpb
sub
sub
repz
sbb
mov
jecxz
iret
and
fcomip
bound
sti
in
mov
es
push
mov
iret
cmp
push
jnp
aas
dec
mov
je
gs
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
jmp
inc
jae
jge
sbb
into
lods
in
mov
adc
adc
and
loope
add
pop
aam
and
sbb
jmp
mov
fdivr
push
pop
pop
ja
insb
dec
xor
cmp
add
test
adc
adc
xchg
cmp
fcoms
adc
sti
outsb
mov
shr
xchg
lcall
dec
decl
in
or
and
add
mov
leave
cmpb
push
push
add
push
sub
or
mov
adc
and
xor
jno
jne
inc
inc
mov
sub
jge
jae
push
add
lret
adc
fmuls
push
hlt
mov
lea
out
ss
test
mov
and
mov
or
jnp
mov
call
sub
test
scas
cmp
push
sbb
loope
nop
and
popa
sti
jecxz
mov
out
test
mov
stos
adc
sub
lahf
into
mov
mov
fnstcw
outsl
or
iret
divb
pop
jb
xchg
lcall
ja
mov
loope
xchg
nop
xchg
rcl
cmpl
repz
add
sbb
rorb
mov
sti
dec
pop
mov
mov
gs
movsl
inc
sarl
out
out
push
fdivs
sbb
fsts
xchg
loop
sbb
in
imul
aad
mov
cmc
clc
ret
fsts
aaa
cmpsl
iret
add
fsubrs
xor
hlt
ficompl
inc
lret
jmp
add
push
loope
pop
mov
outsb
mov
mov
push
xlat
aaa
pushf
cmp
or
movsl
jbe
or
lcall
add
push
aas
add
insl
and
dec
clc
outsb
test
ljmp
testl
cmp
push
cmp
lahf
daa
jmp
loope
aam
lods
enter
mov
xor
in
stos
mov
push
push
loopne
cmp
cmp
pop
xchg
xor
test
mov
add
enter
movl
cmp
and
pop
xchg
data16
cmpb
aas
dec
fsts
lock
add
sub
xchg
pop
clc
mov
fstps
mov
aas
inc
aad
loopne
out
in
fsubrs
pop
shr
pop
test
incb
cmp
insw
cmp
mov
stos
xor
add
cli
inc
jge
out
xchg
das
in
pop
loop
sub
dec
lcall
movsb
dec
and
stos
jg
out
rorl
mov
movsb
sbb
fstpt
bound
mov
inc
mov
stc
or
flds
repnz
sub
or
mov
roll
lahf
push
xchg
dec
sti
jmp
pop
movsl
sbb
cwtl
cld
jg
mov
int
mov
imul
and
xchg
aad
stos
sub
aam
test
cmp
cmpsb
in
cmc
inc
cmp
adc
shl
mov
and
cmp
mov
lret
or
std
cs
aam
sub
mov
push
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
adcl
shrd
shr
ret
mov
mov
adc
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
movzbl
xor
movl
sub
mov
or
mov
notl
movl
and
mov
inc
movl
movl
dec
movl
movzbl
and
push
sub
movl
movl
push
addl
movl
movzbl
or
mov
cmpl
mov
mov
jmp
movl
ja
push
call
adc
adc
sbb
sbb
and
xor
add
add
sbb
mov
push
andl
push
andl
push
jmp
mov
pop
sbb
sar
sarb
jb
adc
shll
cltd
dec
mov
jmp
xor
arpl
insb
in
pop
popa
out
jns
adc
out
mov
inc
and
cmp
in
and
cmp
aad
fwait
push
enter
or
push
xchg
cli
imul
xchg
loop
mov
jmp
mov
daa
lods
xor
jmp
adc
jb
lock
into
loop
sbb
je
xchg
shl
stos
iret
pop
mov
xchg
ror
aas
dec
dec
add
jno
and
xchg
insl
leave
push
sbb
rcr
cli
add
stc
gs
xchg
enter
shr
xchg
sub
or
push
leave
fisubl
aas
rolb
lahf
fiadds
int3
sahf
push
sbb
lea
mov
sbb
aad
and
cmpsl
sbb
mov
add
push
pop
jecxz
icebp
call
sub
mov
leave
mov
sub
icebp
repz
sbb
outsl
data16
inc
jno
fisubs
xchg
and
aas
pusha
cmp
pop
dec
xorl
cltd
in
aas
add
movsb
aaa
ja
fisubrl
cmp
in
call
jle
add
xchg
cli
sbb
repnz
lods
lea
jecxz
mov
scas
sub
scas
add
jns
gs
pop
mov
add
inc
cwtl
push
lods
jle
push
stc
filds
xchg
lahf
jnp
jns
imul
int3
xchg
pop
mov
stos
xchg
adc
xor
sbb
mov
dec
jecxz
loopne
xor
fst
andl
cmp
inc
out
idivb
and
or
push
adc
ss
loopne
xor
xchg
dec
sub
scas
stos
jl
push
push
and
lcall
cmp
inc
int3
dec
adc
aas
mov
cmc
mov
xchg
push
xchg
adc
push
fadd
cmpsb
mov
sub
leave
jl
lock
adc
out
in
and
outsb
xor
add
pop
mov
inc
ja
filds
xchg
je
inc
adc
mov
ret
mov
mov
push
xchg
mov
divb
jnp
xor
mov
push
gs
or
add
lds
cmp
popa
sbb
mov
jns
jle
outsl
sbb
stc
add
or
push
pushl
in
xchg
cmp
lret
test
es
movsb
arpl
pop
imul
data16
scas
xor
sar
xchg
js
stc
mov
pop
test
and
loop
aad
out
aad
pop
out
jl
adcb
xchg
sbb
cmpsb
fwait
imul
cltd
mov
jecxz
jmp
adcl
insb
test
add
push
mov
lahf
sub
xchg
into
jns
xchg
xchg
cmp
dec
xor
push
out
fwait
mov
sbb
test
cmp
add
jmp
iret
stos
lods
add
loop
cmpsl
ljmp
popf
lret
fsubrl
ljmp
ret
rcrl
mov
mov
sub
add
mov
out
add
fldcw
push
push
repnz
popa
cmp
add
lods
lahf
into
dec
jmp
in
and
cltd
fcoml
scas
aaa
jl
adc
or
xchg
adc
filds
xchg
call
xorl
mov
mov
subl
push
sbbl
or
xorl
push
or
xor
xor
push
push
xorl
call
mov
movzbl
xor
mov
orl
push
andl
push
adcl
push
push
call
mov
xor
or
mov
sub
sub
mov
cmpl
movl
mov
movl
jmp
movzwl
mov
ja
push
pushl
call
add
andl
adc
adcl
movzbl
sub
add
and
movl
movl
adcl
movl
movl
movl
cmpl
mov
movl
mov
jmp
movl
mov
je
push
pushl
call
sub
mov
adc
mov
and
sub
movl
mov
cmpl
mov
not
mov
movl
jmp
movl
jg
push
push
push
call
dec
add
adc
neg
mov
adc
mov
sbbl
jmp
mov
and
sbb
scas
push
mov
inc
push
adc
add
lcall
gs
ljmp
inc
jl
out
adc
xchg
fistpll
sub
ja
inc
loope
mulb
rcr
cmp
dec
ljmp
jbe
loopne
and
sub
xor
xchg
push
adc
push
mov
rclb
and
gs
pushf
add
int3
in
shlb
out
lret
xchg
int3
pop
pop
fistps
aam
insl
mov
jmp
push
mov
push
cmp
or
pop
mov
fs
movsb
xorb
jmp
mov
sahf
cs
pop
aad
ss
push
jg
leave
pop
pushf
push
icebp
jno
aad
inc
cs
popf
add
xor
mov
xsaves
cwtl
loopne
js
loop
jl
mov
add
xchg
vucomisd
adc
mov
xor
push
inc
pandn
push
push
xchg
jge
adc
call
ja
or
mov
pushf
mov
ljmp
cmp
out
cmp
jns
repnz
pop
std
pop
xchg
outsl
fists
lock
dec
jb
pop
js
add
push
shrl
pop
movsl
push
jmp
jno
push
sub
pusha
mov
iret
shlb
data16
xchg
dec
pop
int
mov
mov
jo,pt
pop
jmp
into
xor
sub
or
lds
push
mov
ds
mov
ret
xor
test
jl
lock
cmp
shrb
xchg
add
jge
lahf
jg
fnsave
repz
in
and
dec
xchg
push
popa
push
sbb
aad
pushf
and
mov
push
arpl
and
test
mov
sahf
push
ljmp
cli
in
decb
pop
mov
hlt
xor
sahf
lds
mov
mov
subb
push
sbb
push
aam
xchg
inc
loope
je
pop
push
sbb
sub
jns
daa
sub
jge
rcl
jbe
push
jb
outsl
cld
mov
cmp
xchg
xchg
fildll
mov
inc
call
and
cmp
test
dec
sbb
lea
inc
lea
dec
xchg
xlat
mov
filds
mov
sub
fnsave
adc
lods
sbb
mov
jbe
test
mov
in
cltd
je
mov
aam
ret
sub
sbb
mov
and
outsb
test
xchg
jns
xchg
js
ficomps
popa
aad
and
xorb
pusha
arpl
mov
movsb
dec
std
insl
push
insl
ficoml
xchg
gs
add
xchg
jo
outsl
aad
mov
test
outsb
scas
mov
mov
mov
std
lret
icebp
in
fdivrp
loop
sub
cmp
and
je
fstpt
roll
out
or
sbbb
js
loop
lods
lds
push
cmpsl
pop
or
mov
shr
outsl
push
testb
adc
mov
add
jbe
nop
cwtl
and
popa
sbb
sub
pusha
cmp
xchg
rcrl
sub
aam
jl
mov
push
pop
push
movsl
int3
fs
jmp
stos
fldenv
popa
mov
xchg
pop
push
xchg
jbe
aaa
adc
insl
movsl
fisttpl
call
inc
sarb
mov
pop
std
sti
lods
sub
dec
pop
out
mov
test
add
mov
xor
movsl
sbb
add
adc
andl
or
xor
xor
sbb
mov
or
cmpl
movl
movl
jmp
movl
jle
pushl
call
sbb
adc
sbb
adc
add
xor
xor
adc
mov
or
sub
mov
or
mov
notl
or
or
movl
cmp
jne
movl
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
jmp
cld
into
loope
mov
cs
sub
adc
mov
or
mov
stc
xor
dec
cs
sub
movsl
js
jl
adc
pop
or
pop
sub
call
cmpsb
push
cmpsb
rcl
adc
inc
dec
mov
cbtw
push
adc
push
ficoml
jne
cmp
add
inc
dec
sbb
lret
loopne
inc
imul
bound
mov
sub
in
les
push
mov
fcmovnu
in
out
pop
push
call
mov
es
pop
and
gs
push
sahf
out
ljmp
rcrb
insl
xchg
xchg
sub
push
rolb
ljmp
or
rcll
or
mov
jae
fldt
aaa
fwait
adc
sbbl
jae
loop
mov
popa
xor
jo
je
ss
mov
fsubr
xor
loopne
adc
fwait
lea
xchg
xchg
cmp
mov
imul
sbb
cmp
add
xor
pop
or
mov
push
test
sbb
es
push
push
stos
fwait
cltd
push
imul
rclb
imul
sbb
test
xlat
add
xor
jge
rclb
cmp
popa
mov
sub
ret
mov
dec
cld
jg
cmp
push
nop
test
sti
mov
mov
lods
cmc
mov
inc
fstl
pop
scas
orl
pop
aam
lock
pop
jp
pop
jo
mov
shl
pop
nop
xor
scas
arpl
cmp
cwtl
sub
add
xchg
mov
test
dec
xor
sbb
mov
xor
mov
popa
inc
xor
into
imul
or
loope
stc
fldcw
gs
pop
push
movb
mov
lods
in
in
movsb
loopne
pop
mov
sahf
testl
aaa
jle
lods
dec
nop
insb
sbb
scas
xchg
lea
xchg
adc
xor
mov
sub
mov
adc
cmp
sbb
dec
daa
je
push
das
mov
sbb
cmpsb
clc
ja
mov
nop
xchg
mov
fisttps
fdivl
mov
ljmp
mov
mov
sti
inc
addl
mov
shll
hlt
dec
pop
mov
and
mov
mov
test
jbe
repnz
repnz
scas
add
pop
or
aad
scas
test
fwait
in
adc
push
icebp
dec
add
add
cld
push
dec
mov
push
rcr
mov
mov
sbb
ficoml
sub
cwtl
roll
mov
jne
push
add
xor
insl
push
jnp
les
je
pop
jecxz
add
jle
push
jb
pop
push
add
cwtl
inc
pop
push
aad
and
adc
push
test
sbb
cld
add
imul
rcrl
repz
loop
inc
push
sbbb
sub
popf
insl
xor
out
les
lret
dec
dec
outsb
mov
dec
call
xor
movsb
aaa
pop
and
push
frstor
cmp
addr16
push
adc
pop
jecxz
xor
jp
inc
jge
fstpt
inc
rclb
imul
movl
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
push
call
jmp
icebp
push
out
sub
repnz
xor
stos
gs
adc
mov
lea
add
dec
mov
sub
ja
das
test
adc
jl
int
sub
outsl
add
test
divl
daa
mov
jecxz
cmp
lret
lock
dec
push
imul
in
hlt
xor
inc
and
mov
sub
mov
or
repz
push
in
shrl
stc
mov
negl
int3
push
stos
std
cmp
cmpsl
call
int
shll
hlt
lcall
or
fsubr
adc
add
xchg
rcll
js
and
outsb
xor
adc
add
nop
arpl
jmp
andl
imul
xor
push
inc
das
int
adc
and
rolb
jle
loop
movsb
fs
cwtl
xor
ds
push
mov
mov
adc
iret
pop
xor
fldcw
int3
adc
mov
fnstenv
aaa
jo
clc
sbb
inc
sti
adc
imul
jo
daa
dec
int3
push
mov
stc
ficompl
and
mov
mov
nop
mov
ja
sub
jp
lahf
pop
inc
sub
insb
push
cwtl
pop
test
mov
out
js
ja
jbe
fldl
es
insl
xchg
mov
add
lds
sarb
inc
lds
jo
sub
and
popf
or
adc
or
dec
fisttps
mov
pop
dec
pop
jo
repz
jns
xorl
ffreep
xor
sub
xchg
mov
xor
jecxz
and
mov
fisttps
out
adc
fnstcw
cmp
and
adc
mov
mov
and
popf
pop
and
cmp
mov
inc
in
pop
in
popf
rcl
pushf
jp
xor
outsb
push
jae
jne
push
test
mov
mov
out
jb
loopne
jl
fbld
mov
gs
pop
aad
out
test
xor
pop
popa
jecxz
sbb
sti
mov
out
cmp
lret
lcall
cmp
test
nop
jecxz
stos
or
sub
icebp
and
test
jo
push
rcr
mov
jo
cmovle
stc
nop
or
rorb
test
out
push
inc
fdivl
add
cs
inc
mov
cmc
jae
adc
cmp
jo
mov
out
out
mov
pop
xor
sahf
lock
je
cmp
pop
stos
or
in
or
xor
add
xchg
flds
daa
orl
loop
loope
cwtl
test
loopne
cmp
adc
fdivp
int
mov
mov
mov
or
mov
icebp
pop
pop
push
fisttpll
cmpsl
clc
mov
ds
cmp
pop
push
dec
lahf
fwait
and
enter
leave
jp
push
adc
in
cmp
and
cmp
loop
jge
mov
rclb
xchg
mov
cmpsl
add
popf
sbb
push
pop
cmp
jnp
mov
xchg
stc
cmp
jle
bound
inc
push
jge
icebp
movsl
lret
or
xor
adc
out
jne
and
inc
mov
or
and
mov
pop
divl
xchg
xor
sub
clc
cmp
loopne
leave
je
test
add
sub
cmp
jnp
add
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
jmp
sub
aam
push
cltd
sbb
adc
js
mov
adc
mov
adc
loopne
jae
xchg
negl
gs
push
in
mov
mov
data16
and
sub
movsb
cmp
push
and
pop
cmp
stc
ja
push
sti
lds
xlat
mov
daa
sti
inc
lahf
adc
mov
mov
adc
push
loop
int3
xor
ss
pop
xchg
test
lods
insl
mov
jg
sbb
jmp
loop
pusha
lods
pop
inc
roll
bound
mov
rorb
stos
cmp
xchg
cmp
cltd
cs
mov
icebp
clc
test
adc
int
stos
loop
repz
aaa
xchg
rcrb
jg
push
stos
int
mov
push
add
mov
xchg
mov
fildll
jl
mov
or
xor
push
jl
cmpsl
dec
mov
rolb
in
rorb
or
mov
je
or
inc
test
out
push
addr16
js
fs
mov
scas
outsb
sub
push
sub
jnp
adc
cmpsb
mov
mov
das
cmpl
pushf
xchg
repnz
cmp
cmpsb
sub
push
in
or
push
sbb
xor
fstl
and
daa
xchg
fiadds
inc
les
push
cmp
imul
mov
push
ljmp
loope
shl
sahf
mov
les
lret
out
es
jecxz
jnp
jae
push
pop
rolb
mov
xor
int3
testb
push
pop
dec
pop
rclb
stos
mov
pop
cmp
xor
mov
jno
bound
sub
aaa
ljmp
cmp
inc
stos
shl
lahf
cli
or
sub
and
shll
leave
les
ss
inc
jo
push
mov
mov
mov
mov
fcoms
xlat
out
mov
and
cmpsb
dec
adc
xchg
aad
mov
jecxz
jo
xchg
sub
adc
stc
inc
and
adc
in
aas
rsm
inc
mov
stc
dec
cmc
sahf
mov
stos
out
sbb
add
jge
idivb
call
push
inc
inc
scas
fdivrs
xchg
cmpsl
ljmp
test
xchg
sbb
call
xor
rcrb
test
adcb
push
pop
push
add
add
insb
sbb
stos
cmpsl
ret
hlt
cmpsl
xchg
add
jp
xchg
dec
cmc
call
adc
lret
adc
cmp
stc
mov
adc
and
push
pop
sarb
add
xchg
outsl
add
int3
add
sbb
jecxz
int3
pusha
push
dec
dec
lods
push
sbbb
frstor
sbb
movsl
or
xor
in
jge
jno
mov
out
dec
enter
addr16
sbb
rcrb
sub
aam
or
mov
mov
stos
test
xchg
mov
jmp
xchg
pop
in
lea
jge
pusha
xor
pushf
or
xchg
dec
lea
pop
jl
jp
adc
mov
mov
cmpsl
pop
cmp
mov
push
idiv
jnp
dec
sbbb
popa
inc
aad
mov
inc
sahf
jae
arpl
iret
lds
cltd
cmp
inc
iret
push
stos
mov
adc
and
aam
pop
cmpsb
shl
scas
mov
fcmovnu
adc
pop
jbe
mov
cmp
mov
dec
lock
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
jmp
xor
sub
cltd
xor
outsb
or
jle
dec
adc
mov
adc
and
out
rcrl
cmc
in
inc
mov
std
hlt
adc
xchg
and
stos
sbb
mov
int
out
jns
xchg
push
xor
inc
inc
mov
xchg
mov
push
mov
jp
je
clc
jg
dec
mov
inc
cltd
push
fistl
xchg
sarl
fstpl
sub
sbb
push
fcomi
cli
imul
xor
xchg
mov
je
mov
insl
rep
adc
pop
out
test
je
or
mov
jg
cmp
in
dec
in
pop
cli
jp
sbb
les
mov
inc
insl
sub
xor
add
aas
inc
popa
hlt
sti
dec
xor
out
das
push
arpl
and
insb
and
repnz
test
movsb
or
fucomi
push
ja
mov
pop
xor
sub
pushf
sbb
ss
std
mov
out
xchg
mov
cmpsb
mov
mov
push
ret
lock
lock
push
push
mov
fadd
push
cli
pop
dec
and
inc
mov
lahf
ficoms
fildl
jle
and
iret
pop
mov
cmp
orb
sub
dec
push
dec
ret
movsl
ret
std
fsubl
aad
aad
mov
xchg
jp
dec
pop
repnz
xor
pop
mov
adc
pop
xchg
mov
ds
or
jno
sbb
cmpsb
or
push
loopne
aas
cltd
inc
lds
pop
pop
sub
dec
push
insl
fisubl
add
push
dec
rcll
std
rclb
sahf
aaa
lahf
jmp
jl
sub
lea
mov
in
shl
lea
mov
push
lods
add
stos
mov
mov
fistl
mov
test
jb
addl
jno
xchg
jb
mov
jno
into
lock
aaa
xor
mov
leave
jmp
jmp
scas
aaa
xchg
add
bound
lods
dec
out
int
mov
test
mov
jbe
movl
sbb
stos
dec
negl
ja
test
fimuls
bound
jmp
cmp
loop
add
sub
outsb
stc
jecxz
dec
lcall
add
das
jl
xor
jmp
pop
dec
sub
lcall
mov
mov
pop
stos
mov
dec
mov
es
pop
mov
cltd
inc
ret
movsl
xor
inc
pop
xchg
add
inc
hlt
cmp
cmp
sti
jmp
andl
das
cli
ljmp
adc
cmp
popf
xchg
lods
and
cmp
push
imul
in
outsl
cli
inc
stos
pop
leave
shrl
leave
hlt
or
jae
sbb
iret
jle
cmp
adc
or
sub
jae
cmp
mov
cld
cmpsb
arpl
comiss
cmp
jo
push
pop
mov
lds
movsb
jb
fcompl
and
mov
cmc
incb
dec
int
fwait
add
cmp
outsb
sub
adc
or
mov
clc
mov
or
int
pop
fs
cmp
pop
rorl
popa
dec
sbb
icebp
incb
mov
dec
cwtl
imul
hlt
inc
jg
pop
or
xor
mov
dec
cwtl
cld
dec
jne
data16
adc
subb
dec
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
jmp
mov
in
xor
sbb
stc
test
sahf
test
adc
mov
adc
inc
nop
insb
loop
aas
pop
xchg
push
mov
pop
popf
fcoms
mov
mov
and
xor
pop
rcrl
dec
push
cmp
es
xchg
in
ljmp
ljmp
arpl
push
pop
mov
fndisi(8087
roll
out
xor
int3
push
inc
fisubrs
int3
mov
jg
sub
fstps
icebp
divl
pop
pop
es
out
mov
push
nop
mov
pop
test
jns
rcr
popf
mov
mov
xor
mov
dec
jge
inc
jg
jmp
add
xchg
call
cmc
adc
cmp
adc
add
push
or
into
dec
das
dec
dec
mov
std
inc
xor
loop
pushf
lock
sub
pop
mov
popl
cmp
pop
cld
insl
sub
fisubl
pop
xchg
lret
push
imul
push
bound
inc
mov
xchg
negl
and
aaa
adcb
lock
stos
add
sbb
shl
push
bswap
and
les
jmp
test
sbbl
cmp
inc
jbe
dec
mov
dec
add
adc
inc
fucomi
add
pop
cli
scas
mov
push
pop
lahf
shlb
out
cmp
jb
int
xchg
sub
mov
adc
push
out
cmpsl
scas
pop
mov
xor
cmp
xchg
add
test
or
mov
adcl
sbb
cmp
jb
iret
ret
xchg
js
movsb
jp
xor
push
pop
mov
nop
inc
jl
mov
dec
push
pop
fs
xchg
aad
daa
outsl
sbb
push
pop
shl
pop
mov
aad
into
outsb
outsl
and
nop
push
adc
int3
push
sbb
sahf
sbb
inc
mov
add
aaa
inc
mov
jne
fmul
sub
cmp
jbe
int
cmpsb
mov
mov
and
add
scas
int3
aas
push
mov
or
inc
into
ljmp
push
icebp
lods
aam
add
add
movsl
ret
fs
pusha
ret
cmpsl
sub
fiaddl
or
xor
pop
xor
add
xor
and
sub
sub
or
xor
hlt
ljmp
sbb
and
pop
dec
outsl
pop
sub
in
inc
or
push
ret
fucomp
pusha
sub
fdivrs
clc
fmulp
mov
notl
dec
jp
lea
push
hlt
roll
xchg
pop
cwtl
jmp
inc
jnp
hlt
cmp
into
push
mov
push
lds
jnp
aad
in
repnz
fsubrl
xchg
ljmp
rcrl
mov
sub
jo
xor
stc
push
bound
mov
cmp
jns
fcoms
cmpsl
cltd
data16
adc
bound
aad
adc
xor
sub
cmp
pop
xchg
ja
test
repnz
sbb
pop
mov
ficoml
pop
ja,pt
inc
imul
movb
jmp
leave
mov
xor
js
push
pop
mov
ss
or
cmp
sub
pop
lahf
inc
lods
stos
add
mov
mov
pusha
or
and
xchg
xlat
pop
lods
mov
dec
pushf
cmpsb
adc
mov
pop
lahf
fsubs
xchg
sahf
xchg
in
dec
adc
ds
push
mov
push
fs
cltd
lea
ret
mov
sub
mov
mov
mov
mov
mov
imul
jmp
mov
leave
pop
dec
push
sub
push
call
mov
mov
adc
mov
cld
ljmp
pop
xchg
cltd
cmc
push
out
jne
xchg
xchg
jb
loope
into
out
jecxz
dec
jbe
xchg
mov
inc
je
xchg
xchg
xor
add
mov
jo
cmp
pop
push
pop
std
iret
outsl
jmp
jge
pop
lds
xchg
aam
jge
xor
test
jae
int3
aaa
jb
jb
dec
or
fimuls
pop
in
push
sub
mov
and
insl
divps
xor
push
mov
aas
sti
mov
xchg
mov
dec
and
xor
dec
ja
popf
pop
xchg
cld
dec
clc
nop
jl
xchg
jo
mov
pop
lcall
mov
or
mov
sbb
mov
out
dec
xchg
rclb
lods
ret
cmpl
lea
out
ja
sub
mov
setae
pop
daa
and
sub
push
pop
jo
lods
hlt
insb
inc
cwtl
repz
push
xchg
rorl
gs
or
and
stos
lret
lret
xorl
into
arpl
sbb
lcall
sub
cli
xchg
stos
push
inc
scas
mov
bound
pop
pushf
add
jmp
mov
aas
lahf
xchg
int3
stos
icebp
push
and
fwait
in
sbb
jno
xlat
pushf
cmpsl
pop
inc
xor
fidivrl
adc
out
pop
test
test
cld
movsb
xor
sbb
jecxz
das
jmp
sarl
sub
ret
test
cmp
divl
imul
cli
mov
fpatan
out
and
jo
sbb
test
decl
dec
adc
mov
mov
jg
add
jge
test
pop
jno
mov
out
pop
jae
gs
add
mov
xchg
fidivl
scas
push
jge
push
push
movsb
adc
inc
jb
and
ret
dec
jge
mov
int3
mov
fwait
and
and
stos
dec
aaa
lea
pusha
test
pop
push
add
test
fld
in
fdivr
aaa
push
xor
mov
aaa
push
inc
jmp
mov
sub
adc
cmp
or
js
mov
lret
stos
sub
rcr
push
cwtl
loope
cmpsl
lret
lock
mov
movsb
add
lock
mov
or
loope
cmpsl
push
gs
mov
lds
mov
mov
sbb
movsb
iret
push
adc
dec
mov
pop
scas
add
iret
outsl
mov
inc
call
lods
sbb
ret
adc
mov
movsl
adc
cmp
jns
jl
les
xorb
and
les
jg
dec
push
and
mov
int3
movsl
mov
cmp
mov
addr16
xchg
cmp
fstpt
gs
and
in
sub
jne
popf
cmp
mov
and
mov
xchg
sbb
pop
add
out
icebp
jecxz
insl
test
xor
add
or
jns
add
mov
sbb
mov
clc
and
cmpsb
shrl
out
push
xchg
outsb
adcl
ret
inc
ja
out
inc
ss
stos
pop
xchg
test
test
add
leave
adc
cltd
loop
push
fldenv
jge
mov
inc
cmp
ss
mov
push
dec
ss
test
rorl
sub
int3
outsl
dec
dec
push
ja
push
jno
push
mov
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
jmp
pop
sub
pop
rcll
sub
scas
je
sbb
adc
mov
adc
dec
or
imul
xchg
js
sbb
cmp
shl
cli
add
dec
push
mov
push
lock
pop
push
mov
fldt
rcr
test
aad
sub
test
aas
push
sub
sub
leave
andl
fcmovb
lret
js
pop
jp
fidivs
mov
xchg
xlat
jmp
loope
lock
push
dec
sbb
ffreep
test
daa
mov
or
xor
dec
fiaddl
clc
cwtl
add
jne
imul
popf
inc
stos
inc
aam
mov
out
rcr
jecxz
in
jo
sti
jg
ds
test
inc
mov
pop
into
fisttpll
das
inc
and
mov
testl
test
lds
into
sti
mov
aas
add
out
outsb
sub
mov
and
fwait
jb
or
arpl
jbe
repnz
mov
cmpsl
inc
add
inc
push
xor
inc
push
enter
mov
mov
mov
insl
lods
or
leave
cmp
or
add
cli
push
dec
dec
add
xchg
or
aaa
inc
imul
mul
subl
insb
push
pushf
inc
push
add
cmp
push
or
shlb
sub
add
adc
mov
add
fucomp
imul
xchg
jg
call
and
aad
ret
inc
leave
imulb
dec
movsl
mov
xor
push
jno
out
sbb
jae
outsl
in
jp
ljmp
xchg
in
cwtl
or
or
rcrl
mov
divl
jg
adc
sahf
aad
fldcw
pop
aam
dec
sub
leave
pop
stc
push
mov
xchg
cmp
ljmp
fstpt
pop
push
or
add
int
adc
or
lods
imul
loop
mov
das
fs
dec
aas
enter
push
test
scas
mov
xlat
lea
and
cli
pushf
dec
les
jne
fs
pop
int3
jno
lahf
xchg
and
aas
shld
addr16
push
test
jp
int
pusha
pop
hlt
int3
lea
adc
shll
lock
enter
out
or
push
aas
cmp
in
insb
push
and
int
mov
out
push
repnz
fstpt
out
dec
cmc
loop
xchg
testb
ds
jnp
stos
pop
lea
inc
jmp
sbb
shl
mov
ret
mov
dec
and
jae
sbb
adc
cmp
cmc
in
sub
imul
pop
test
mov
push
mov
sbb
push
cmp
mov
and
cmpsl
mov
xor
mov
push
xor
icebp
sub
jmp
es
sti
in
cmc
add
add
xor
lock
mov
mov
xchg
pop
cmp
or
adc
sub
stos
cld
push
mov
push
adc
pop
xor
xchg
outsl
xor
es
jnp
arpl
int
mov
mul
mov
push
mov
sub
scas
and
movsb
sub
jle
push
stos
mov
cmp
movsl
jnp
icebp
pop
mov
jbe
jbe,pt
mov
fsubp
jg
and
jle
jl
mov
sub
clc
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
jmp
in
stc
sub
les
fidivrs
mov
adc
xchg
xlat
adc
xor
mov
jge
pop
add
add
subl
les
popf
add
push
movsb
xchg
sbb
insb
adcl
dec
loopne
scas
dec
stc
negl
rcrb
or
ret
in
jo
cmp
jnp
popf
push
loop
lods
ret
fwait
jnp
out
lock
repnz
iret
in
roll
sub
aas
sbb
mov
inc
xchg
stc
xlat
dec
ja
mov
or
adc
pop
test
xlat
pop
push
adc
in
aam
addr16
iret
push
xor
dec
mov
fstps
aad
into
push
jmp
adc
mov
mov
pop
xchg
gs
test
rcl
sbb
xor
jg
adc
cmp
out
push
lcall
lods
cwtl
push
scas
dec
jp
jp
pop
test
insl
xchg
sar
jl
ljmp
fstps
xchg
ficoms
repnz
imul
mov
int
sub
test
int
sub
jbe
mov
inc
inc
and
push
js
mov
cmp
fnsave
mov
mov
and
adc
mov
jbe
push
sub
xor
std
mov
clc
and
jg
inc
jne
or
cld
sub
dec
mov
enter
or
adc
fwait
mov
cmpsb
adc
out
loopne
jmp
shr
fistpll
push
jmp
fcmovnu
and
xchg
jo
or
mov
add
push
out
pop
outsl
lahf
insl
sbb
pusha
and
mov
push
add
scas
push
push
imul
rcrl
rcr
adc
jge
or
push
movsl
dec
out
adc
xchg
movsb
out
cwtl
mov
and
sub
das
into
test
xor
pop
ret
in
adc
and
sti
std
jnp
cmp
cltd
push
shll
jo
sbb
mov
das
mov
dec
pushf
adc
push
in
aaa
pop
dec
std
lret
mov
pop
xchg
adc
out
or
insb
rol
pop
call
jg
inc
and
inc
xor
mov
sbb
xor
into
xchg
or
push
mov
xor
lea
pushf
mov
cmpsl
es
out
outsl
je
mov
stc
aam
cmpsb
jg
dec
pusha
loope
and
adc
cmpsb
sbb
mov
push
jne
arpl
aam
sbb
mov
les
xchg
mov
push
push
push
loop
xor
adc
jnp
stc
dec
xor
shr
mov
test
inc
cmp
push
jb
insl
xchg
fs
and
add
sub
out
cmp
xchg
bswap
cli
out
jb
pop
or
in
jb
mov
mov
icebp
sti
shrl
jp
sub
or
and
je
sub
fdivs
and
mov
dec
sbb
in
xchg
mov
xor
push
ret
cmp
notl
addr16
xor
pop
xor
adc
pop
jl
cmpsb
pop
push
int3
xchg
push
out
inc
and
cltd
repnz
cmp
pop
and
and
cwtl
sbb
dec
add
stc
fdivrl
movsl
pop
stos
jo
jp
mov
jmp
fldenv
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
jmp
jo
pop
bound
stos
mov
je
test
adc
adc
test
push
insb
test
cmp
fmulp
pop
in
and
lods
leave
and
bswap
pop
gs
push
mov
out
mov
mov
lahf
fisttpl
sti
and
add
mov
rolb
leave
xor
cltd
insl
sub
xchg
mov
jno
lock
leave
inc
fisttpl
sub
pop
xlat
mov
lods
adc
sbb
dec
cwtl
sahf
incl
jo
dec
sub
in
rclb
test
mov
lret
jo
ja
push
xchg
sbb
dec
inc
adcl
mov
popa
daa
or
daa
push
mov
mov
mov
inc
mov
xchg
jbe
inc
mov
jg
in
nop
je
stos
add
std
push
nop
ficoms
mov
js
movsl
repz
clc
cmpsb
xchg
movl
imul
push
sbb
jge
add
icebp
and
in
arpl
push
test
pop
negl
add
push
xchg
cmc
add
cmp
mov
xor
dec
insb
sbb
mov
adc
mov
out
fstpl
ror
xchg
loope
cmc
rcl
sub
cmp
jecxz
inc
int
in
les
gs
sub
in
lock
aad
adc
jbe
ja
mov
popf
jno
add
cmpsb
inc
fdivrs
xchg
leave
dec
mov
xchg
dec
jbe
xchg
mov
mov
jno
sbb
es
lcall
cmpl
fwait
dec
inc
jp
scas
fmul
push
lret
and
or
mov
or
movsl
fmuls
rcrl
xchg
pop
fimull
fimull
and
inc
mov
cmpsb
andnps
xchg
lock
sahf
inc
cltd
dec
push
scas
and
cltd
mov
jae
aaa
rorl
outsb
sub
outsb
add
pop
mov
incl
or
das
pop
or
das
dec
sbb
adc
pop
hlt
loope
or
push
repz
jmp
mov
dec
pop
dec
ljmp
push
fimull
iret
mov
aam
cmp
insb
movsb
and
xor
dec
sahf
in
jp
ss
push
sub
push
jne
in
ja
sub
stc
push
sub
push
dec
jnp
dec
test
rcrl
sbb
add
dec
outsb
xchg
mov
data16
sbb
pop
out
cmp
aad
jp
cmpsl
stc
xchg
ljmp
mov
jae
out
iret
cmp
cmc
pop
insl
push
arpl
add
mov
fcomps
test
in
ds
adc
xor
out
adc
sub
pop
jo
xchg
jo
mov
ljmp
mov
pop
lahf
dec
jmp
or
xor
xchg
dec
sti
or
xor
inc
lock
xchg
loop
pop
imul
aad
popf
ja
pop
clc
push
sbb
mov
fstpt
or
push
or
lret
insl
add
xor
mov
cli
or
ficoml
mov
dec
bound
fwait
push
in
mov
outsl
loopne
inc
add
dec
push
mov
lcall
fldt
sub
pusha
bound
sub
push
movsl
bnd
sub
insb
bound
or
xor
add
clc
mov
xor
xor
jmp
pop
xchg
push
dec
push
sbb
js
insb
insb
shl
es
sbb
adc
mov
pop
jp
imul
pop
or
inc
sbb
xchg
cmpsb
aad
imul
sub
movsb
int3
add
lock
adc
testl
and
out
xchg
addr16
ret
dec
and
loopne
mov
push
scas
adc
or
insl
call
mov
push
mov
jb
dec
pushf
pop
pop
iret
xchg
dec
nop
test
push
out
sub
nopl
icebp
addr16
ljmp
cld
sbb
xchg
fisubrl
insb
rcll
popf
scas
and
out
in
imul
xchg
jle
sbb
push
mov
mov
lea
mov
mov
mov
xchg
fisttps
mov
clc
out
sbb
sbb
ja
adc
jne
addr16
xchg
and
cmp
pop
mov
adc
adc
fstcw
adc
div
push
es
cmp
cwtl
push
sub
arpl
jae
mov
test
cwtl
ret
mov
and
push
fidivrs
cmpsb
cmp
inc
arpl
sbb
jnp
into
push
ret
inc
sbbb
mov
sbb
xor
jo
dec
mov
or
jno
or
int3
ja,pn
jae
repz
xchg
sti
jnp
and
dec
pop
incl
js
pop
xchg
call
in
xor
sti
xchg
xchg
fildl
dec
pop
rcr
popf
outsl
pop
loop
test
fadd
stos
pop
lcall
push
mov
sub
aas
les
pop
negl
push
shll
data16
and
cmc
push
add
andl
clc
cmp
add
and
jae
inc
fcoml
imul
pop
xchg
dec
xchg
lret
push
call
cmp
dec
adc
hlt
add
lahf
inc
outsb
imul
nop
shl
lods
mov
mov
mov
mov
mov
sub
dec
mov
or
orb
mov
sbb
lret
fidivl
insb
ljmp
mov
out
lods
lahf
fimull
cwtl
mov
jb
push
cli
sbb
cli
inc
jmp
repnz
inc
and
push
jnp
jb
xor
adc
sub
xchg
imul
imul
push
ror
mov
and
add
shll
adc
xchg
cld
ds
subb
cmc
adc
data16
clc
das
insb
popa
subl
dec
mov
xchg
in
pop
test
cmpsl
sbb
jmp
mov
shr
mov
xchg
adc
mov
cmpsl
jae
dec
add
mov
out
lods
cmp
roll
push
pop
addr16
or
aad
xor
scas
jo
lea
cmp
xchg
and
mov
add
aam
push
ja
add
scas
repnz
and
mov
mov
es
cld
xchg
rolb
inc
adc
punpcklbw
xchg
dec
add
repz
xchg
pop
cmp
popa
test
xchg
rcrb
push
mov
push
sub
ja
xorb
fistpl
fcmovb
int
jmp
dec
mov
xor
inc
add
mov
pop
jmp
cmp
cwtl
das
fldl
mov
lret
mov
dec
and
dec
xchg
ljmp
mov
and
sub
mov
movl
movl
movl
jmp
out
sbb
fsts
xchg
add
ficoms
adc
notb
call
inc
jmp
mov
sbb
pop
and
mov
mov
dec
adc
and
xchg
shlb
mov
or
sub
fnstenv
cld
cmp
xchg
cmpsb
jno
in
stos
add
cmp
inc
sbb
and
xchg
nop
sub
cmc
outsl
inc
xor
xlat
jae
dec
xor
xchg
addb
mov
mov
ljmp
add
loop
into
adcb
addr16
in
addr16
jg
sahf
sbb
je
lahf
ret
insl
lea
fsubr
in
loopne
stc
mov
cmp
or
adc
stos
lret
int
inc
mov
or
or
xchg
jg
in
enter
aas
test
fs
jecxz
or
lods
xor
xlat
and
daa
pop
xchg
push
mov
movsb
test
loope
pop
lahf
jae
outsb
addl
cmpsb
mov
dec
sub
or
add
push
mov
mov
or
push
lods
cmp
adc
inc
in
mov
imul
outsl
and
aad
pop
cmp
mov
add
sbb
es
mov
jp
pop
pop
addl
push
adc
mov
repz
je
les
xor
out
cmpsb
mov
fs
hlt
outsb
push
mov
cmp
push
inc
xchg
aas
push
pop
mov
jo
sbbb
lret
and
xchg
xor
pushf
rcrl
je
test
lods
mov
pop
adc
dec
mov
scas
cli
pop
sub
imul
fstl
lods
mov
or
mov
in
rcr
add
mov
loop
mov
mov
repnz
add
cmp
sahf
push
add
lahf
fsubrl
das
mov
cs
shlb
push
movsl
fsub
and
aaa
in
fdivl
sub
push
mov
inc
add
mov
bound
sar
mov
mov
rol
xor
xor
das
inc
jae
ss
mov
das
ret
jge
dec
mov
in
jecxz
das
aam
std
lock
xor
and
jno
dec
push
xchg
push
jg
psrad
out
movsb
cltd
and
rcl
repnz
push
fdivs
lods
stc
dec
ljmp
movsb
loop
sbb
out
fdivrp
lock
test
sbb
out
push
pop
push
hlt
in
aas
push
mov
inc
xor
gs
arpl
push
mov
add
mov
shl
mov
xchg
imul
imul
dec
test
xchg
mov
fdivl
cmp
mov
mov
aaa
add
gs
dec
popf
test
jecxz
or
bound
xlat
aas
dec
popa
push
sub
shll
cmpsb
test
pop
mov
aad
stos
push
and
adc
fucom
adc
mov
pop
jle
sbbb
out
fsubr
dec
jb
lret
call
cmp
inc
fcmovne
cmpb
filds
adc
in
or
loopne
sbb
jp
das
jge
pop
sti
lret
movsb
xor
mov
add
clc
push
lock
cmp
addl
aaa
dec
cltd
jae
out
pop
adcl
mov
cmp
inc
clc
mov
inc
hlt
insb
dec
add
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
jmp
fisubrs
outsb
rcrl
iret
sbb
insb
lcall
adc
sbb
jmp
scas
xchg
mov
ficompl
sbbl
or
push
jp
ljmp
lock
repz
dec
xor
or
lea
xchg
out
std
xchg
pop
insl
fneni(8087
xor
ja
cld
sub
adc
push
iret
cmp
cli
inc
pop
pushf
repz
xchg
mov
adc
out
lea
dec
mov
ds
mov
xchg
push
test
jl
cmc
jae
cmp
jae
std
fcoms
mov
das
dec
cs
cmpsb
out
scas
cwtl
mov
rorl
push
fstpl
push
lds
clc
xchg
dec
or
pop
sbb
jp
sub
leave
dec
mov
fwait
pop
adc
adc
insb
or
enter
sbb
cmp
xchg
fstps
lret
leave
lock
xor
fwait
gs
mov
movsl
push
xchg
or
stos
stos
lock
xlat
xor
mov
push
in
push
fndisi(8087
mov
cmp
inc
out
filds
aad
out
push
mov
xor
inc
dec
mov
mov
mov
jle
or
inc
dec
aas
add
mov
inc
cmp
mov
sub
lret
mov
sbb
popf
sbb
stos
pusha
rcll
das
sub
or
mov
adc
cmp
dec
inc
push
and
imul
and
ljmp
scas
leave
test
enter
das
aad
repnz
fisubrs
rorb
mov
mov
pop
lahf
jbe
clc
mov
loope
mov
jno
mov
dec
lea
jb
or
push
out
pop
movsb
ja
loopne
int3
inc
jae
js
std
cmc
loope
insb
pshufw
and
xchg
dec
jmp
adc
mov
decl
fs
stos
sbb
scas
xchg
xchg
push
mov
cmp
add
outsl
sub
in
enter
sub
cmp
xchg
inc
clc
push
scas
fildll
mov
push
stos
xor
xchg
sub
orl
outsl
nop
imul
sbb
fwait
imul
mov
xchg
insl
stc
gs
lods
jb
jnp
das
dec
xor
sub
adc
or
ret
dec
scas
js
lret
lcall
test
movsb
pop
aaa
xchg
loopne
rcll
je
lock
mov
sub
pop
stc
sbb
push
add
inc
lods
sti
ljmp
negb
loop
aad
mov
sub
imul
pop
mov
ret
lret
stos
std
das
imul
decb
cli
mov
test
data16
daa
inc
arpl
pop
mov
mov
cmp
xchg
or
ss
sti
in
jno
aam
xchg
cltd
lret
xchg
mov
and
sub
add
and
adcb
or
jmp
pop
push
test
pop
fldt
pop
xchg
cmpsb
jg
popa
jecxz
or
stos
sub
ds
mov
maxps
pop
fdivrs
jo
stos
mov
push
adc
mov
mov
insl
inc
fdivs
jnp
mov
pop
xchg
int
in
lret
mov
ja
decl
pop
pusha
inc
pop
mov
mov
push
jle
push
in
ret
mov
ljmp
pop
add
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
jmp
in
xchg
es
cwtl
pop
push
and
in
push
push
or
adc
jg
pop
test
ud0
jb
jb
mov
push
outsl
insl
inc
repz
push
pusha
shlb
stc
jnp
ret
jbe
call
jne
adc
pop
mov
sbb
dec
add
or
mov
xlat
inc
insb
inc
insb
shr
jne
pop
cmp
call
jle
cltd
pop
sbb
outsb
mov
jne
inc
cmp
bound
xchg
or
mov
jmp
movntq
out
jne
push
mov
stos
sub
imulb
xchg
js
cltd
dec
mov
cmp
and
fstpl
loop
sbb
mov
daa
add
lods
mov
pop
or
jne
mov
andl
shrl
movsl
mov
nopl
clc
lock
mov
push
sbb
inc
mov
fildll
pop
stc
jge
shll
fisubs
xchg
test
test
lahf
mov
mov
pop
rcr
sbb
adc
or
add
cmp
out
bound
mov
push
cltd
sub
dec
ds
mov
inc
xchg
inc
mov
in
xchg
mov
mov
loopne
jb
movsl
arpl
xor
pusha
loopne
xchg
mov
gs
out
popf
mov
lcall
and
cmp
push
and
int
sbb
repnz
enter
shrb
popa
dec
aaa
dec
repnz
aaa
xor
mov
shlb
add
mov
lcall
push
das
hlt
xchg
mov
pop
loope
shll
call
xor
dec
andb
sbbl
addl
xor
mov
sbb
pushf
mov
roll
stos
out
xor
pop
pop
in
sbb
rep
stos
jne
ljmp
jmp
push
arpl
push
adc
mov
mov
xor
fistl
movsb
jnp
sub
sbb
or
imull
fcom
mov
nop
repnz
sub
or
sub
jo
cmp
stos
or
js
push
xchg
fcomps
sbb
xor
mov
xor
pop
xchg
mov
fldcw
cmpsl
rcrb
jle
jb
pop
std
jmp
call
mov
roll
xlat
jl
xchg
test
xchg
stos
xchg
test
fisubs
add
adcl
fiadds
daa
out
lock
bound
add
ret
int3
loopne
repz
daa
gs
sub
xchg
call
fcoml
mov
leave
cltd
stc
push
mov
and
sub
mov
test
scas
mov
leave
insl
inc
cmp
push
dec
jo
jne
mov
jnp
stos
jle
sbb
cmp
mov
mov
and
sbb
and
lahf
xchg
mov
imul
outsb
outsb
movsb
stos
and
jae
push
iret
jg
dec
sub
jp
mov
inc
lea
ds
pop
fadds
cmp
jp
cli
imul
xor
push
jns
or
mov
in
aad
dec
sub
xchg
enter
mov
add
jg
repz
fldl
pop
fs
and
rorb
iret
add
add
pusha
inc
ja
pop
aaa
and
or
mov
mov
adc
clc
psubq
in
lret
xchg
pop
inc
jnp
in
cltd
mov
cmpsl
xor
jg,pn
lret
inc
push
push
jecxz,pt
jne
push
sbb
mov
pop
push
dec
outsb
xor
sbb
ja
pop
push
in
rcl
mov
add
jle
outsb
jmp
insl
add
xchg
mov
orl
cmc
mov
sub
add
and
mov
aam
add
push
add
or
xchg
pop
out
dec
dec
sbb
fsubrl
cmc
xchg
ljmp
aam
mov
fmuls
test
mov
push
pop
xchg
fsubl
adc
lahf
out
setge
xchg
sub
aam
pop
aaa
inc
mov
filds
out
stc
mov
dec
sub
jg
leave
test
cltd
or
jge
sbb
adc
inc
shl
fistl
jbe
daa
fldenv
push
push
movsb
lea
or
ljmp
dec
xchg
and
pusha
sbb
and
inc
scas
lcall
push
adc
xchg
fdivr
adc
inc
xor
xchg
data16
into
jp
daa
adc
mov
pop
mov
inc
and
aad
sub
dec
and
das
dec
pushf
jns
and
lods
insb
inc
xor
les
and
mov
push
jbe
stos
jp
movsb
hlt
pop
popa
or
xchg
and
xor
fildl
xor
and
xor
sahf
push
movsb
or
jecxz
int
addl
jecxz
out
and
pop
inc
push
aam
inc
pop
lret
loop
fcmovnu
mov
insl
pxor
and
test
cwtl
sbb
or
sub
cmp
out
stos
sbb
adc
hlt
cmp
lcall
push
and
push
lods
jne
subl
lahf
mov
xor
xchg
mov
cmp
mov
cs
aad
xchg
mov
pop
pop
push
sub
inc
xchg
shlb
mov
cltd
and
js
jae
add
dec
xor
mov
femms
addb
cmpsb
jecxz
test
sbb
add
mov
xchg
jo
or
xor
mov
push
popaw
push
aaa
lods
rolb
add
stc
adc
xchg
pop
adc
pushf
add
cmp
push
add
xor
cmp
ret
or
xor
enter
cmp
std
mov
in
push
jl
bound
cmp
sahf
xchg
xchg
push
push
jbe
xor
jecxz
xchg
mov
mov
sbb
jno
orl
mov
mov
pop
push
push
mov
cli
mov
lret
enter
jae
mov
inc
das
shll
out
push
inc
pop
or
cmp
sti
bound
or
jl
and
lods
cmp
xchg
mov
sahf
stos
hlt
out
sub
lods
lock
inc
or
xor
sub
dec
inc
or
ret
rclb
es
pushf
sti
in
fldenv
enter
mov
adc
das
enter
push
out
push
sub
fcoms
repnz
or
xor
or
sub
movsbl
add
inc
or
in
imul
pop
mov
add
add
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
xchg
lods
sub
addl
adc
adc
adc
xor
aas
xor
stos
fbstp
imul
gs
pop
push
sub
push
jno
mov
mov
dec
and
inc
clc
test
jmp
sbb
jle
bound
mov
fidivs
mov
incl
push
xchg
adc
cli
push
sbb
sub
xchg
lahf
cltd
adc
cmp
jg
or
push
xchg
mov
movsb
push
push
lock
out
push
es
push
xchg
pop
mov
mov
cmp
adc
push
es
lds
mov
cmp
mov
loop
arpl
movsl
add
mov
shlb
push
xor
dec
mov
stc
into
dec
inc
inc
cwtl
sub
mov
testb
adc
jecxz
outsl
dec
mov
cld
repz
cmp
inc
inc
aaa
js
sub
inc
test
enter
xor
out
sbb
dec
dec
mov
cld
jg
int3
dec
xchg
test
movsb
push
repnz
rorl
into
cmp
and
push
inc
dec
push
adc
sbb
or
outsl
mov
rcrb
and
xchg
subb
push
mov
fnstenv
imul
cmp
mov
pop
out
arpl
jno
ljmp
mov
lret
push
adc
ficomps
push
or
sbb
push
lds
inc
adc
sahf
push
and
dec
sub
pusha
dec
addr16
fisubs
xlat
mov
xchg
imul
lahf
or
cmp
aas
dec
aam
xor
xchg
sbb
and
adc
rorl
push
jno
inc
outsb
lahf
xchg
jo
cmp
pop
pop
sbb
clc
and
pop
jmp
incl
jb
and
jg
clc
out
iret
stos
pop
scas
nop
jecxz
sbb
dec
fprem
jp
insl
orb
sbb
sbb
inc
sbb
dec
mov
call
icebp
cmp
lret
sti
xor
jnp
sbb
arpl
call
push
lret
mov
arpl
movsl
sub
xor
orb
aad
dec
lret
lds
jno
mov
fimull
fnstsw
cmpsl
or
enterw
mov
dec
js
dec
jno
cwtl
das
mov
imul
in
mov
adc
fsubr
fstps
rcrl
adc
lahf
gs
orb
loope
dec
jecxz
sti
mov
addb
pop
ss
push
in
sbb
push
es
cwtl
mov
hlt
xchg
add
jns
cltd
mov
into
rcl
push
or
jp
lods
xchg
push
xchg
fistps
stc
xchg
outsb
rolb
or
push
cmp
add
test
call
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
jmp
jle
mov
cltd
cmp
or
stos
inc
inc
mov
adc
adc
adc
shl
popf
cmp
xchg
ret
push
out
leave
fmull
fidivs
adc
ljmp
inc
sub
inc
loopne
sbb
ljmp
dec
fld
hlt
inc
stc
cmc
loop
cmpsw
mov
hlt
stos
icebp
mov
testl
mov
xchg
dec
cmpsl
mov
popf
insb
push
xchg
fistpll
shll
rcll
test
mov
fdivrl
mov
sub
shll
scas
jge
stc
dec
lret
pop
in
inc
jle
out
lahf
mov
pop
push
add
jle
or
xor
cs
xlat
nop
je
sbbl
leave
sub
cltd
call
push
mov
into
jbe
xor
dec
mov
add
icebp
add
mov
or
mov
mov
imul
inc
pop
pop
imul
std
insl
test
popf
loope
lahf
push
out
xchg
mov
and
dec
fnsave
xchg
mov
pop
and
xor
daa
add
fidivrs
cmp
sbb
out
xor
xor
les
imul
fistps
pop
inc
pop
or
rolb
dec
scas
pop
std
fsubs
shl
sti
add
xlat
scas
jmp
inc
mov
mov
cltd
jbe
push
jo
in
aaa
ljmp
xchg
push
mov
cmp
int3
mov
faddl
sarb
pop
dec
scas
cli
lods
dec
je
add
cmpsb
fisubs
push
mov
dec
sub
scas
inc
inc
mov
mov
pop
sub
dec
push
mov
or
cmp
jge
mov
arpl
dec
enter
sub
repnz
stc
cmc
pop
nop
lret
mov
xor
push
mov
stos
adc
int
fistpll
mov
lret
imul
lret
in
adc
inc
push
sub
sub
addr16
inc
dec
subl
cld
and
mov
sub
jecxz
or
push
in
mov
mov
movsl
adc
scas
fcmove
repz
ror
adc
in
aas
inc
andl
jns
or
pop
xchg
mov
ss
addl
mov
js
add
loope
xor
insb
test
mov
adc
mov
jb
mov
test
or
cmp
jmp
push
xchg
insb
adc
xor
xorb
add
mov
mov
sbb
daa
and
dec
pop
sbb
icebp
popa
das
xchg
mov
ss
inc
rcrb
lahf
imul
test
fs
lret
test
gs
mov
cmp
call
fnstcw
fs
dec
push
aas
aam
sbb
mov
xchg
jb
gs
xchg
es
mov
and
lock
out
inc
xor
in
jge
andb
movsl
xchg
push
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
jmp
mov
popf
dec
cltd
push
and
rclb
cmp
adc
adc
adc
add
mov
pushf
jns
es
jmp
sbb
outsb
cltd
jnp
fwait
inc
mov
and
arpl
pop
int3
sarl
lcall
repz
mov
pop
pop
fs
sub
xchg
sbb
jne
xchg
ljmp
xchg
xor
scas
jnp
dec
mov
pop
mov
in
loopne
mov
loop
lock
aaa
sbb
dec
ret
cmp
xor
daa
push
hlt
lock
pop
mov
push
nop
lds
es
out
adc
push
or
stos
lcall
imul
xchg
sbb
and
mov
push
arpl
das
push
pop
xor
cmp
mov
cmp
add
push
jno
and
daa
es
jle
xchg
or
lods
scas
xchg
sbb
test
jp
insl
xchg
outsl
xchg
fnsave
push
faddl
nop
out
std
leave
ret
lcall
add
fildll
sub
cs
cmpsl
xchg
icebp
sub
in
out
lahf
int
int
xchg
aas
add
jns
fstpl
inc
jg
lcall
push
popa
mov
addb
adc
stc
nop
stc
in
cmpsb
xor
mov
repnz
cmp
mov
mov
jge
aaa
cmpsb
mov
cld
orb
mov
adc
movsl
mov
lods
cmp
sbb
sqrtps
sar
jle
jg
lret
push
and
add
mov
dec
mov
pop
insl
jb
aas
mov
sub
push
dec
mov
xor
pop
out
fs
xchg
lret
mov
fisubs
mov
cmpl
sbb
pushf
inc
jns
rcrl
mov
mov
mov
push
push
call
in
mov
inc
push
std
mulps
xlat
orb
dec
jno
addl
jl
inc
fwait
pavgw
ficoms
std
insl
push
push
insb
and
xchg
test
fs
scas
xchg
xchg
xchg
and
jae
inc
mov
push
push
and
xor
stos
mov
mov
notb
xchg
inc
xor
nop
mov
pushf
lcall
cwtl
sub
arpl
xor
mov
daa
adc
fiaddl
push
test
xor
andb
shrl
xor
jmp
lahf
scas
push
ljmp
mov
inc
jns
fadds
cli
les
mov
bound
addr16
ficoml
lret
rol
adc
repz
mov
fisttps
loopne
lret
pop
pop
push
cwtl
daa
pmaddwd
repz
psrlw
scas
cmp
mov
imul
jne
fisttpll
mov
pop
ss
test
jno
xchg
or
push
pop
ja
xchg
jge,pn
jecxz
icebp
mov
mov
enter
adc
js
add
add
ret
nop
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
jmp
xchg
jne
and
js
outsl
cmpsb
js
jecxz
adc
adc
adc
cmc
loope
xor
arpl
sbb
mov
adc
rcrl
jle
bound
insb
or
std
gs
shll
jns
mov
loope
dec
or
xchg
jbe
bound
inc
or
clc
xor
pop
btr
sar
stos
inc
sub
mov
enter
ja
imul
scas
lret
cmp
sahf
xchg
movsl
cmp
mov
ret
mov
xchg
gs
push
xlat
jbe
sbb
fs
testb
add
inc
stos
mov
and
sarb
sarb
sbb
pushf
lahf
adc
inc
dec
inc
xchg
jl
sbb
ficompl
jmp
inc
in
aas
and
jmp
push
int
hlt
xchg
inc
lock
add
mov
sub
clc
mov
jno
lcall
lcall
pop
cmc
leave
loop
sbb
stos
and
xchg
and
xchg
xlat
jl
test
xor
fldl
shlb
sub
dec
sub
dec
sbb
mov
lea
sbb
out
inc
mov
adc
dec
sbb
jmp
mov
stc
jb
mov
pop
cwtl
cli
add
pop
mov
test
aas
cmp
mov
push
mov
ds
icebp
add
inc
clc
mov
subb
mov
cmp
test
js
aas
loope
push
cmpsl
jle
fwait
arpl
fcom
sub
arpl
cmpsl
xlat
mulb
bound
sub
sub
mov
mov
jle
push
xchg
cmp
and
arpl
add
roll
xlat
pushf
and
in
add
shr
dec
lods
int
xchg
fistl
stos
aaa
xor
jo
aaa
mov
or
pop
aas
lods
sbb
cld
loopne
jecxz
adc
cmp
sub
mov
lret
inc
out
add
pop
dec
cmp
notl
in
jmp
ljmp
inc
loopne
jge
in
in
lods
sahf
mov
incl
xchg
es
dec
mov
fidivrs
enter
pop
sbb
sti
repnz
loope
enter
add
mov
jp
and
pop
sahf
fildl
add
sbb
jo
and
insb
pusha
imul
loope
stc
cli
fisubrl
mov
jge
ljmp
pop
movsl
xor
std
inc
nop
or
push
cli
repnz
mov
pop
scas
punpcklwd
inc
inc
aas
mov
inc
repz
cwtl
dec
pushl
out
inc
test
jb
sub
lret
and
push
or
dec
aad
cli
fisttpll
jge
push
mov
ret
lods
stos
loop
mov
sarb
inc
insl
pop
and
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
jmp
or
jo
outsb
mov
insb
cmp
adc
adc
adc
push
pop
xchg
fistps
in
mov
sbb
jmp
dec
leave
gs
inc
stc
mov
adc
jo
mov
dec
pop
push
lock
sub
push
pop
cmpsb
xor
ret
jmp
push
xor
repz
sbb
movsb
aam
clc
test
arpl
xorb
push
and
cmpsb
int
and
xor
repnz
mov
addr16
push
mov
cmp
mov
push
jbe
or
scas
push
push
pop
pop
sub
stc
push
push
mov
lret
pop
adc
loopne
cmc
shlb
add
dec
movsb
negl
out
jl
lods
jge
mov
jb
addl
mov
cmp
jecxz
clc
mov
arpl
adc
sbbl
outsb
inc
cs
icebp
imul
mov
daa
dec
rcrl
in
add
mov
ljmp
sbb
mov
lock
mov
fidivrs
mull
mov
and
push
andl
adc
push
inc
or
mov
sbb
xchg
shll
sti
jle
jg
fadd
out
lahf
fldt
sbb
mov
insb
push
out
lret
fwait
test
jno
movsb
fnstenv
movsl
scas
add
cmp
jb
lret
mov
movsb
cmp
sub
fnstenv
inc
mov
mov
push
pop
sarb
bound
push
into
and
ja
xor
leave
js
jp
and
lods
mov
mov
test
push
int3
call
das
pop
push
aad
dec
xor
fimull
in
pusha
jmp
mov
rol
bswap
pop
cmp
dec
xor
bound
invd
int3
xor
pop
cmp
gs
dec
xchg
inc
pop
mov
repz
movsl
or
test
movsl
cmpsb
fstpt
andb
mov
inc
pop
and
and
dec
sbb
in
cld
add
dec
dec
icebp
cs
fnstenv
mov
stc
les
aad
xchg
inc
cmpsl
mov
mov
pop
rcll
gs
xor
mov
das
rcrl
out
and
test
fdivl
sub
in
ljmp
mov
and
push
ss
addr16
mov
cmc
and
test
push
popa
lret
pop
fsubp
fidivrs
jbe
pop
xchg
mov
je
and
cli
sbb
out
ficoms
pop
aam
out
sbbl
lret
mov
jne
jp
pop
mov
jmp
mov
and
mov
mov
jecxz
or
mov
ja
sbb
ret
leavew
seto
ret
sub
xchg
ljmp
pop
das
outsl
pop
mov
std
test
mov
test
addr16
inc
dec
pop
adcb
inc
int3
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
jmp
lds
mov
mov
cmpsl
xlat
adc
adc
adc
fiaddl
stc
out
add
add
loope
std
jecxz
pop
mov
or
cmp
or
jecxz
sahf
icebp
mov
movsl
mov
loopne
pusha
out
xor
outsl
enter
add
mov
fnstenv
push
test
pop
scas
add
aam
cwtl
iret
lea
adc
jb
pop
stos
xor
stos
jmp
mov
loope
pop
adc
mov
divb
fistl
jmp
out
repnz
xorl
mov
hlt
and
mov
mov
lock
ljmp
std
adc
mov
and
iret
insl
cmp
mov
sub
inc
mov
adc
loope
testl
push
pop
sub
jmp
mov
out
cmc
mov
lods
in
repnz
cli
popl
mov
or
aad
xchg
pushf
mov
mov
adc
int3
mov
adc
inc
loop
es
and
mov
push
loop
insl
popf
imul
iret
pusha
mov
jbe
xor
inc
test
les
pop
xchg
shll
test
fs
and
inc
pop
rorl
cmp
jno
dec
xchg
sub
sahf
add
int
scas
cmp
xlat
jp
cmp
out
orb
sti
iret
xor
mov
int3
jno
mov
imul
dec
fbstp
cli
adc
mov
adc
push
jns
adc
call
in
in
ja
aad
pop
mov
mov
add
push
xchg
inc
mov
jno
out
hlt
lret
mov
addr16
nop
outsb
mov
fstl
xchg
sub
xor
cmc
sbb
iret
dec
fwait
jbe
dec
mov
gs
and
stos
jecxz
sbb
jo
push
int
xchg
fs
mov
aas
enter
sbb
xlat
stos
sbb
mov
stos
in
sbb
mov
scas
sarl
test
sti
push
pop
repnz
cltd
cmp
xchg
dec
inc
push
push
inc
jo
mov
jl
xor
and
mov
mov
adcb
push
pop
sahf
mov
xchg
lock
ljmp
mov
scas
movsl
xchg
xor
add
mov
mov
add
stc
mov
ud1
mov
pusha
cmp
push
cmp
or
mov
mov
jb
dec
push
cli
andl
outsb
inc
xor
mov
xlat
push
popf
add
add
mov
add
movsb
push
pop
adc
or
test
dec
pop
lds
mov
fiadds
lods
rol
mov
fcmovb
shlb
pop
es
sbb
cmc
or
dec
ljmp
ja
inc
mov
test
decl
decl
decl
ljmp
rorb
lcall
icebp
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
jmp
mov
sbb
adc
inc
adc
aad
adc
adc
adc
mov
sbb
in
popf
sbb
xor
les
fs
stc
lea
pop
ja
lahf
into
mov
inc
pushf
shrb
sbbb
lahf
cmp
push
adc
scas
mov
iret
int
sub
lea
xchg
jae
dec
jbe
mov
or
push
mov
jnp
xchg
out
push
push
jns
add
loopne,pt
mov
repnz
out
test
bnd
push
insl
mov
sbb
xchg
push
sub
mov
mov
xor
stos
loopne
sub
pop
fbld
sub
pop
lret
xchg
ficomps
mov
push
ljmp
daa
and
mov
sarb
mov
push
push
add
mov
aam
cmp
mov
scas
stos
fwait
push
and
popa
add
dec
mov
fsubl
mov
mov
cwtl
ja
int3
loope
adc
out
leave
push
arpl
out
push
adc
add
push
mov
dec
sarl
pop
adc
js
xchg
pop
mov
xchg
filds
bound
inc
fstpl
push
inc
pushf
mov
ret
cmpsb
dec
jp
sbb
ret
or
rcrl
aas
test
outsl
sub
repz
sub
test
sbb
es
mov
cmp
inc
and
xchg
mov
mov
dec
xchg
and
addb
loop
leave
sub
rorb
ficompl
lods
xchg
lea
inc
mov
mov
outsl
jge
mov
xor
or
mov
sbb
pop
sub
push
push
pop
test
into
rorb
cli
outsb
sbb
add
mov
jno
in
or
jae
push
repz
js
xchg
lret
mov
int3
cmp
negb
repnz
mov
shl
add
jne
mov
mov
fadds
test
mov
push
or
xchg
ds
add
xchg
sbb
fiaddl
pop
pop
cld
insb
movsl
fcoms
pop
fmull
mov
int3
or
xchg
cltd
mov
xor
mov
cld
mov
push
adc
adcb
pop
lret
xor
jae
pop
lods
sub
hlt
jmp
lock
das
insb
inc
fsubs
mov
addr16
and
xor
imul
pmaxub
jnp
fstps
push
cmp
cli
outsb
mov
lcall
icebp
imul
fcmovnbe
mov
jl
int
adc
js
out
fldt
add
push
jbe
test
xor
push
or
cltd
je
aad
xchg
push
hlt
cwtl
and
loop
xchg
cmpb
es
out
push
push
push
out
sbb
jo
sahf
adc
insl
inc
add
lods
pop
bound
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
push
adc
push
push
push
call
jmp
xchg
and
sbb
outsb
dec
adc
xchg
jle,pt
int
adc
xchg
out
dec
iret
mov
out
scas
aam
jne
addr16
add
fstps
mov
or
lcall
scas
je
into
insl
pop
or
ret
jg
dec
xchg
sti
rclb
and
or
js
and
leave
or
add
pop
push
sub
ftst
push
aam
mov
cwtl
fbstp
lock
add
in
outsl
stos
js
std
inc
and
aam
in
cwtl
aaa
mov
fstps
mov
lods
jl
jmp
arpl
mov
jb
mov
mov
repz
push
and
mov
iret
lea
dec
outsl
jp
aaa
dec
ja
jge
popa
cmpsb
fs
aas
mov
ret
cli
mov
js
sub
inc
stc
sub
pop
jp
pop
push
adc
push
add
cmpsl
sti
dec
scas
dec
mov
int
mov
out
and
frstor
shrb
mov
xchg
add
cmovp
ss
ret
inc
or
mov
lock
push
lret
stc
or
in
cmp
xor
adc
insb
cmp
push
int3
xor
repz
icebp
inc
arpl
or
je
or
xchg
ja
out
cli
std
xchg
inc
inc
dec
xor
add
int
pop
sbb
lea
scas
cmp
sub
cmp
pusha
outsb
clc
testb
into
repz
or
lea
fs
outsb
into
cwtl
pop
pop
std
xor
push
xchg
push
fcom
int
es
sub
mov
add
enter
cmp
lods
adc
ds
int
lahf
lret
movsl
cmpsb
iret
ret
add
pop
test
int3
jmp
fs
mov
and
rorb
aas
xor
push
in
ret
adc
pusha
sbb
shr
popa
rcrb
pusha
jg
dec
aad
add
ja
int
add
loope
adc
push
shll
ja
mov
and
loope
in
popf
cmpsl
in
jb
lcallw
xor
mov
or
mov
loopne
jge
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
jmp
ds
fistl
nop
js
leave
adc
xchg
movlps
xchg
loop
fisttps
aam
jg
lcall
dec
sub
ja
mov
stc
sahf
in
mov
mov
push
pop
js
in
cwtl
add
mov
cwtl
test
push
sbb
pusha
pop
add
rolb
cmpl
mov
jmp
jmp
add
fiaddl
mov
cmp
js
inc
push
add
and
xorl
add
in
adc
lcall
push
push
xchg
fsubp
jp
push
mov
movb
scas
arpl
cmp
ljmp
and
xor
pop
lock
ret
inc
xchg
sbb
xchg
pop
mov
test
mov
xlat
inc
mov
pop
mov
mov
hlt
shll
or
dec
js
pop
xchg
sti
inc
push
dec
or
repz
jno
jne
cmp
std
mov
fstpl
or
bound
jne
jge
movsb
jo
fildll
outsb
and
cld
je
dec
inc
lock
es
mov
rcrb
ds
insl
lea
sub
mov
adc
push
cmc
das
das
je
and
push
xor
stos
sarl
or
jmp
in
jb
lods
cmp
or
sbb
pop
arpl
in
outsb
inc
cmp
scas
ljmp
lret
lret
aad
stc
xchg
sahf
stos
xor
jb
adc
push
adc
or
in
std
iret
js
cltd
pop
inc
loop
cmp
js
xor
xlat
xchg
jb
jle
popf
adc
pop
lock
outsb
xchg
aaa
adc
push
dec
aam
mov
or
cmpb
test
jnp
repz
xchg
jno
mov
xor
dec
jbe
dec
sarb
rcrb
ret
dec
mov
aad
xor
fistl
inc
cs
cmpsb
in
and
iret
ret
lods
xlat
push
outsl
imul
fcmovnb
and
cli
rorb
insb
adcb
fdivrs
sbb
jmp
sbbl
cmp
aam
pop
lods
imul
stos
add
adc
xchg
movlps
ja
mov
and
lea
mov
mov
scas
xchg
leave
imul
add
jecxz
inc
movntps
adc
stos
mov
mov
sahf
pop
pop
mov
outsb
dec
pop
lods
or
cmc
iret
jnp
and
fisubrl
mov
hlt
loop
sbb
inc
loop
push
mov
add
outsb
test
and
repnz
addr16
dec
xchg
std
cmc
std
xchg
arpl
in
sbb
pop
push
jne
je
add
cvtpi2ps
fisubl
fldl
push
jecxz
cld
mov
adc
lds
mov
and
dec
das
pop
iret
clc
fnstenv
outsb
call
lods
subl
adc
loope
mov
icebp
mov
fs
rolb
cld
hlt
ljmp
mov
push
iret
pop
mov
cmpsl
aas
loope
mov
jns
dec
out
and
cmpsl
mov
mov
mov
mov
adc
lret
insb
and
jnp
dec
cmp
dec
cwtl
cmp
imul
and
mov
or
into
scas
imul
out
dec
iret
inc
xlat
dec
and
sub
and
andb
xchg
and
ds
popf
adc
adc
mov
inc
sahf
mov
adc
xchg
pop
in
push
int3
lret
sbb
leave
dec
sbbl
mov
cltd
pop
movsl
movsl
or
cs
sub
leave
movsl
push
mov
mov
ret
push
lods
test
jp
std
hlt
sub
cmpl
sub
inc
js
xchg
mov
xchg
xchg
jns
mov
pop
fsubrs
mov
dec
lret
xchg
push
orb
in
push
cmp
pop
outsb
xchg
jecxz
dec
pushf
mov
call
stos
push
in
cmpb
sbb
add
iret
xor
fdivs
add
mov
push
mov
fs
jb
insb
mov
jo
push
outsl
pop
jnp
loop
sub
mov
ljmp
cmp
mov
loope
cmpsl
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
jmp
rclb
mov
insb
mov
nop
js
rcll
xchg
movlps
lret
fbld
adc
scas
sub
les
mov
sub
rorl
dec
lods
push
add
inc
sub
pop
cmp
mov
push
iret
push
test
dec
leavew
ds
call
push
in
aam
mov
adc
jb
in
mov
lods
cs
pop
and
rolb
js
jae
and
inc
rclb
hlt
pusha
adc
hlt
outsb
stos
mov
xchg
cs
lea
pop
xlat
pop
xchg
gs
sti
add
xor
jb
cmp
lahf
lds
test
jne
sbb
adc
loope
sbb
xchg
adc
lods
mov
mov
pop
inc
xchg
pushf
xchg
loop
mov
rolb
cmp
cmp
pop
test
aam
xchg
dec
hlt
cmp
and
or
movsb
cmpsb
push
inc
xchg
mov
and
lcall
sub
ljmp
mov
jns
cmc
cmpsb
xor
mov
int
daa
cld
jg
or
data16
jno
hlt
xor
xchg
jle
or
adc
and
inc
mov
pushf
add
mov
fcmovne
cmc
lods
mov
cmpb
iret
cmpsl
dec
mov
push
std
and
sti
in
jne
call
bnd
stos
outsb
pop
data16
stos
sti
ds
insb
stos
hlt
inc
icebp
push
xchg
cld
or
stc
lret
sbb
aas
sbb
and
and
cmp
mov
jnp
lods
addr16
sahf
sbb
divb
stc
and
push
inc
pop
cmp
dec
mov
es
ror
jle
out
inc
sbb
psubsb
xchg
lret
scas
sahf
dec
dec
xchg
sub
push
adc
sub
pop
inc
and
les
and
inc
mov
fcoml
push
fildl
es
push
stc
cli
dec
or
outsl
test
sbbl
push
loope
mov
xor
xor
xor
adc
mov
add
xor
jmp
fnsave
cmp
add
add
adc
cli
push
insb
test
lcall
fidivrs
pop
shlb
loopne
pop
ss
nop
jno
xorb
test
lret
add
leave
cmp
xchg
xchg
mov
dec
mov
iret
lcall
mov
jno
iret
fimuls
in
ret
jge
jo
je
mov
sub
xchg
dec
sbb
cli
jbe
ljmp
lret
inc
outsl
adc
pop
mov
call
popa
xor
add
jge
incl
jcxz
cwtl
jmp
sub
adc
sub
call
push
jne
dec
in
lahf
mov
ds
in
mov
lock
movsb
imul
lods
fists
xchg
mov
pop
xor
inc
and
movsb
and
mov
ja
mov
mov
decl
mov
lret
rclb
lods
outsl
push
push
testb
xchg
mov
sbb
and
mov
cmp
dec
cltd
mov
ss
mov
pop
xlat
repz
in
dec
inc
cli
and
mov
inc
push
test
and
push
push
inc
out
mov
push
xor
jnp
xchg
push
ljmp
cmp
incl
push
scas
hlt
xchg
pop
mov
inc
dec
add
clc
clc
repz
sub
push
pop
mov
sti
push
pop
xor
lret
data16
pop
xchg
in
mov
mov
ds
std
dec
sbb
pop
sbb
jb
lahf
lret
push
fmull
mov
out
dec
fiadds
fs
leave
test
mov
icebp
sub
cmp
sahf
test
test
icebp
or
hlt
js
and
out
sahf
sub
adc
xor
sub
sub
jbe
aad
cwtl
mov
aad
jmp
hlt
js
aaa
test
jne
sbb
jb
mov
pop
cmp
push
pop
xor
sbb
inc
fnstenv
stc
shr
popa
data16
js
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
jmp
inc
lds
gs
inc
and
imul
and
adc
icebp
loope
ret
mov
lods
ss
lea
shlb
push
lret
jbe
mov
mov
ret
xor
stc
test
daa
mov
fidivs
mov
ficoms
mov
mov
mov
and
out
fscale
pop
jmp
mov
ficoml
jmp
js
mov
das
and
inc
lea
cmpsb
cltd
test
or
jne
scas
xlat
pushf
mov
aam
add
adc
aas
test
cltd
push
or
inc
xchg
pop
cmp
pusha
lcall
mov
fldcw
aam
xchg
rorb
xchg
pop
lods
les
ljmp
pop
pushf
enter
pop
dec
add
inc
pop
lcall
xchg
or
xor
pop
cmpsb
ret
cli
xchg
sti
jnp
shrl
cmp
notl
or
jmp
push
jle
jmp
sub
cmp
cmpsl
mov
adc
add
and
add
add
por
shl
sub
inc
rcl
dec
jno
mov
mov
lret
adc
mov
and
inc
sbb
inc
fwait
or
orl
cmp
fwait
ret
cld
adc
sub
and
aas
imul
out
mov
aad
jb
test
cmp
lret
jo
out
jbe
and
fcomps
dec
packuswb
aam
loop
sbb
rcl
xchg
pop
cmp
cmpsb
pusha
ds
xchg
jecxz
xor
test
or
mov
out
add
stos
aad
rdmsr
mov
mov
fimuls
mov
mov
jge
jae
test
mov
dec
pop
daa
aad
cmp
fidivs
sahf
mov
xor
push
mov
in
imul
ror
call
pushf
inc
inc
pop
repz
sbb
cld
sub
sub
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
jmp
hlt
aaa
add
pop
dec
pop
sbb
les
add
adc
xlat
std
insb
loop
pop
imul
mov
mov
stos
push
mov
sbb
dec
fs
imul
sbb
xor
lea
in
or
xor
push
xchg
inc
dec
ret
fiaddl
mov
sti
xor
call
daa
dec
pop
jbe
lahf
push
jb
movsb
push
mov
sub
into
mov
cmp
mov
cmp
xlat
lock
push
xor
fildl
pop
pop
nop
and
xchg
lock
movsl
roll
bound
xchg
lret
cmp
jno
xor
jbe
dec
and
mov
cmp
mov
pusha
add
js
adc
push
outsl
sti
adc
dec
in
jae
adc
loopne
push
adc
and
sub
movsb
or
pop
pop
repz
int3
push
iret
and
add
sarl
pop
xorl
stos
push
repnz
cmp
cmpsb
fnstenv
ljmp
and
pushl
out
mov
inc
je
pop
push
sbb
push
loopne
fs
xchg
movsl
lods
cmp
mov
jbe
mov
fmull
jne
pop
pop
sti
outsb
ficompl
stos
add
mov
jl
mov
xor
rorl
int
imul
insl
cmp
add
jecxz
dec
repz
adc
jg
aas
aam
hlt
xchg
push
adc
pop
movsl
sbb
pop
lea
mov
pusha
insb
jo
fcomps
jne
sbb
pusha
and
icebp
jo
cli
mov
in
lods
lock
andl
pop
cmp
divb
mov
ficoml
les
cmpl
inc
sysenter
aaa
sub
pop
adc
mov
dec
lcall
cli
push
xlat
aad
xchg
mov
adc
in
dec
dec
aad
adc
inc
movsl
xchg
and
dec
add
pop
sub
adc
test
inc
scas
fptan
iret
inc
cmp
fdivl
fcmovnb
lds
outsb
lock
cmpsl
sub
ret
add
and
push
add
gs
dec
add
ss
inc
data16
jp
xor
and
and
cmp
arpl
leave
in
jg
mov
lods
xor
sbb
cltd
mov
loope
and
aas
sbb
hlt
mov
xlat
adc
pop
into
push
xor
or
jne
add
in
add
in
adc
push
inc
add
jecxz
xchg
jle
dec
pop
scas
fdiv
aad
aaa
push
clc
sti
cmp
test
mov
jmp
mov
or
leave
cld
jo
mov
sub
out
pushf
les
sub
mov
inc
pop
repz
sbb
lret
xchg
loope
add
fnstenv
xchg
outsb
call
push
or
cli
pop
out
sub
adc
mov
movsl
insl
ret
xchg
int
shll
mov
shll
sbb
mov
stos
adc
or
or
xchg
add
sub
sub
xchg
je
mov
xlat
cmpsl
fs
mov
xor
xor
in
ja
jle
and
sti
outsl
xor
add
ja
or
jo
addr16
sub
jle
adc
inc
lock
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
jmp
xor
cmpsb
pop
cmpsb
pop
sub
jg
push
push
call
adc
adc
adc
cmpsl
pop
fbstp
test
and
mov
out
sbb
sub
out
and
cs
lds
pop
xchg
mov
and
pop
les
loopne
jecxz
or
shrb
push
sub
das
movsl
mov
lahf
sbb
sbb
inc
repnz
frstor
shl
mov
sbb
aaa
dec
sbb
test
aad
das
push
repnz
outsl
add
cld
mov
ljmp
ds
out
pop
int3
int3
push
addb
jecxz
xor
dec
and
movsb
icebp
push
xchg
outsl
or
aam
aam
xlat
int
jg
testb
movsb
fs
jg
pop
mov
xor
mov
jae
sub
push
xchg
push
push
push
and
mov
in
es
push
int3
daa
dec
addr16
xchg
repnz
andb
mov
inc
sbb
iret
cmp
aaa
shlb
or
imul
sub
and
sub
mov
jge
mov
rclb
mov
fdivrs
mov
push
mov
hlt
pop
popf
clc
xorl
xor
inc
das
repz
xorb
out
test
vfrczss
rcrl
jns
aas
test
mov
sub
sub
jae
mov
ljmp
xor
mov
xchg
test
mov
cs
and
cli
mov
aas
pop
aad
xor
sbb
pop
mov
outsl
mov
push
in
test
dec
pop
es
push
mov
mov
repz
or
fucomi
mov
inc
and
sub
ficompl
fldt
cli
xor
hlt
adc
js
jge
adcl
cld
data16
add
scas
inc
aas
bound
lea
sbb
insl
gs
xor
adc
or
in
pop
xchg
jecxz
add
ljmp
movsl
aam
push
idivl
fldcw
push
test
mov
hlt
xor
test
cli
or
cmp
xor
pop
fisubrl
fchs
xchg
outsb
jle
inc
pop
testb
xchg
insb
arpl
mov
fldcw
mov
jns
dec
rcll
inc
mulb
scas
mov
xchg
cmovp
inc
js,pt
push
movsl
test
mov
lahf
xor
sbb
pushf
in
dec
fcompl
insb
jnp
std
test
call
daa
fisttpl
xchg
xchg
push
call
test
inc
add
fmull
hlt
xchg
sahf
aad
fwait
hlt
lret
fwait
jnp
add
mov
divl
es
mov
mov
loop
dec
ja
divl
les
mov
in
pushf
lea
push
enter
mov
adc
pop
fcomps
sbb
ljmp
test
pushw
dec
xchg
jl
jb
dec
xchg
xchg
out
pop
dec
adc
lods
aaa
or
in
sarb
ss
pop
je
cli
jo
out
movsl
sub
fwait
icebp
jge
int3
cmp
icebp
jno
push
add
fwait
sar
shr
lret
fnsave
cmp
or
pop
std
enter
jo
rolb
int
inc
out
lret
fnstcw
add
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
jmp
loop
repnz
es
mov
adc
add
adc
cwtl
xor
sbb
les
mov
or
ss
and
loop
xor
mov
pop
icebp
sub
fwait
mov
mov
mov
pop
mov
clc
inc
in
pop
cmpsb
xor
lods
addr16
sarb
and
push
cmc
xchg
xor
lods
movswl
test
scas
sub
enter
mov
or
push
nop
gs
scas
mov
mov
mov
dec
add
das
push
xchg
xchg
xor
cmp
dec
pop
push
fwait
adc
jecxz
mov
push
xlat
inc
add
shlb
adc
xor
xchg
sarb
mov
and
cmpsb
andl
add
push
pop
scas
js
jo
test
xorb
lods
repnz
jge
scas
mov
adc
loope
or
pop
or
out
and
and
mov
cltd
and
aaa
xlat
das
xor
lea
adc
imul
dec
push
pop
mov
lea
stos
dec
test
cld
or
hlt
les
cmp
push
mov
lock
adc
imul
dec
xchg
lock
xchg
into
jle
mov
cmpsl
cmp
cs
lods
inc
repnz
cmpsl
jo
sub
enter
pop
sbb
mov
je
push
inc
push
in
mov
gs
out
rcl
movsl
lods
stos
push
pop
push
out
xlat
sti
mov
push
xlat
fcompl
dec
mov
test
std
fidivrl
idiv
inc
lea
scas
mov
mov
jo
fldcw
aaa
sti
push
std
bnd
mov
adc
jae
gs
clc
jp
fs
stos
fcoml
or
mov
aas
mov
ljmp
xor
xlat
ss
cld
xor
adc
adc
and
daa
lock
es
push
test
addr16
sti
roll
adc
push
test
dec
fmuls
sti
mov
xor
xor
sub
dec
and
push
ret
pop
mov
push
daa
mov
add
mov
imul
lods
pop
xchg
pop
xor
mov
mov
and
push
mov
jno
int3
shlb
or
mov
jp
xor
dec
mov
pop
nop
jbe
sbb
push
jae
xchg
adc
and
push
mov
xor
mov
xlat
or
xchg
push
inc
mov
cmp
mov
imul
push
pop
sti
cltd
sub
fidivrl
or
das
mov
iret
mov
dec
in
fmuls
movsb
stos
inc
adc
xorl
mov
jecxz
and
and
xor
cmp
movsl
or
xchg
and
sub
adc
mov
outsl
cltd
sti
sbbl
ret
cmpsb
fisubs
push
xchg
and
add
mov
insl
ret
inc
mov
adc
push
ret
xchg
jle
dec
mov
daa
dec
clc
fisubrs
and
jmp
jno
push
fs
ds
dec
dec
mov
jno
in
push
out
push
out
push
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
jmp
popf
jnp
cwtl
sub
loopne
push
dec
inc
stos
enter
jne
adc
inc
adc
icebp
pop
test
add
or
cld
loopne
ret
int3
push
popa
stos
shrb
stc
aas
std
movsb
sarb
pop
pop
xchg
add
xorl
insl
ss
aas
push
ret
xchg
cwtl
les
lahf
pop
cltd
or
les
in
mov
outsb
pop
or
push
adc
xchg
adc
add
mov
scas
dec
cmp
addl
fbstp
jecxz
sub
ss
pop
loope
les
xchg
loopne
xchg
scas
sahf
lret
add
or
cltd
fidivs
std
dec
mov
jne
push
inc
cmp
rorb
and
lret
and
mov
ret
mov
or
inc
jecxz
insl
in
lods
dec
sbb
aas
xchg
fsubrs
dec
adc
and
lret
pusha
sbb
jnp
cwtl
mov
xlat
cmp
cltd
mov
jae
cs
mov
mov
loopne
sub
shrl
mov
cld
pop
stc
mov
popa
inc
dec
and
jecxz
cmc
fwait
inc
xchg
dec
pop
insl
arpl
jnp
dec
inc
cmpsb
ss
dec
arpl
fiadds
add
outsl
out
xchg
js
mov
cmp
repnz
stos
jnp
out
mov
imul
je
xor
adc
pop
mov
call
idivl
movsb
mov
pop
add
mov
mov
mov
lea
inc
or
pop
shlb
mov
outsb
das
das
jmp
outsl
inc
mov
es
js
loopne
lods
arpl
imul
js
or
mov
fs
adc
xchg
loope
adc
icebp
std
fucom
sbbb
xchg
pop
lret
push
adc
mov
fadds
inc
mov
dec
inc
pusha
xchg
jns
cmp
mov
mov
mov
rcr
rcl
cmp
enter
lods
pushf
push
or
pop
outsb
ss
dec
adc
ljmp
mov
fwait
add
into
pop
jae
xor
dec
ret
mov
dec
mov
repnz
shll
roll
mov
inc
mov
nop
xchg
mov
pop
adc
repz
and
fisubl
mov
jp
stos
adc
cli
fcoms
outsl
mov
fwait
xchg
dec
or
add
insb
dec
xor
fldcw
adc
scas
or
in
xor
cs
cmp
loop
jnp
cmc
or
std
sbb
cmpsb
pop
orl
push
jno
mov
push
jo
dec
cmp
int
adc
jecxz
and
or
ret
xlat
inc
and
add
add
clc
add
movsl
nop
push
hlt
mov
jbe
jp
loope
mov
addr16
mov
jns
inc
mov
inc
sub
fstps
adc
daa
xor
sbbb
jl
ja
aam
mov
xchg
in
or
test
outsb
outsb
mov
pop
gs
push
loope
sbb
ret
sub
or
ffree
mov
cmp
test
cli
inc
loop
sti
xchg
xor
test
repz
scas
pop
je
xor
pop
orl
xor
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
jmp
dec
mov
loope
and
les
cwtl
lods
cs
js
xchg
adc
jne
adc
xorb
loope
adc
push
push
fcomip
fwait
cmp
or
test
clc
push
sub
add
xchg
fstp
mov
push
adc
cmpsl
xor
push
adc
push
sbb
xor
add
inc
out
mov
xchg
jb
adc
popa
cmp
rcl
pop
mov
cmp
lods
xorl
inc
shll
mov
cmp
xchg
dec
pusha
hlt
jnp
aas
jno
jl
loopne
jno
in
popf
orl
xchg
imul
mov
and
fsubrl
std
outsl
aas
mov
mov
mov
xchg
lock
in
mov
push
or
outsb
ss
xor
add
dec
dec
int
testl
int3
stc
pop
inc
and
sub
cmovp
push
les
push
popa
aas
xchg
adc
and
mov
sbb
scas
stc
inc
jns
xchg
ds
add
xor
mov
pop
dec
ja
ret
adc
testb
dec
pop
arpl
sbb
mov
cld
icebp
push
jge
es
sub
xor
mov
inc
pop
add
inc
jnp
sub
lods
push
mov
movsb
pushf
lock
cmp
xor
adc
adc
mov
adc
jae
add
aad
xchg
insl
xchg
cltd
jmp
ret
dec
cs
incb
mov
cmc
mov
hlt
jo
or
mov
cmpl
nop
mov
das
dec
xor
mov
stos
jns
push
add
mov
sub
rcrw
lods
and
jg
jge
movsl
mov
mov
inc
jg
sub
inc
mov
dec
orb
pop
ret
mov
push
cld
out
es
push
mulb
push
push
xlat
mov
mul
push
push
sti
mov
jno
mov
jae
mov
in
sub
cs
cmpsb
fiaddl
mov
lret
mov
cwtl
sbb
xor
xor
test
adc
dec
push
xor
xor
sub
mov
lds
push
jmp
xchg
and
das
int
leave
mov
sub
xor
mov
xor
pop
xor
jg
leave
test
or
adc
xchg
jle
inc
popa
push
mov
xchg
divl
jb
xor
stos
popa
repz
jmp
mov
inc
xchg
pop
ljmp
dec
xchg
cmp
dec
in
lock
loopne
dec
mov
ss
daa
aas
mov
mov
hlt
gs
bnd
xchg
adc
fdivl
std
and
fnstcw
stos
mov
jns
mov
pmaxub
mov
sahf
cmpsl
cmpsb
sub
loopne
add
adc
pop
lea
fidivrs
sub
sahf
lock
fnstcw
lcall
xchg
lret
testb
mov
int3
sarl
leave
cmp
mov
mov
xor
lock
faddl
adc
sbb
stc
in
mull
punpcklbw
cmp
insl
stc
inc
jne
pusha
pop
rorb
adc
popa
les
repnz
and
out
les
jmp
add
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
popf
mov
and
sbb
js
mov
adc
fimull
adc
push
in
fisttps
mov
jl
and
sbb
xchg
fcomps
daa
aad
push
insl
mov
mov
jnp
std
xor
adc
pusha
scas
lret
int3
inc
adc
inc
mov
mov
mov
in
add
dec
out
into
aaa
ljmp
push
jg
pop
dec
jbe
pop
mov
jae
mov
jmp
paddb
iret
xchg
mov
and
out
sub
mov
mov
fiadds
lea
jge
fsts
ljmp
push
dec
rolb
das
xchg
or
jne
mov
lret
sub
enter
cmpsb
adc
xor
aas
shll
cs
iret
jno
fdivr
add
add
mov
sub
faddl
leave
mov
ret
xor
sbb
xchg
daa
clc
lahf
aas
xchg
and
xchg
sbb
and
subl
xor
movsl
test
mov
scas
nop
jae
mov
inc
mov
mov
push
mov
nop
fs
rorb
imul
adc
outsb
fwait
xor
xor
mov
mov
add
hlt
pop
mov
push
jno
pusha
in
rcr
sahf
mov
lds
lret
sbb
fcomip
inc
jo
push
jmp
jnp
lods
sub
rcrl
mov
fsubs
push
mov
in
filds
or
mov
shrl
lret
add
mov
push
pop
jg
pop
xor
mov
les
sub
cmp
hlt
inc
loope
push
scas
test
sbb
xor
into
xor
nop
stos
test
xchg
insb
insl
andl
add
mov
outsb
sub
in
lret
clc
mov
mov
push
sub
mov
push
scas
mov
ds
int
push
addb
inc
push
jns
cmp
ja
mov
dec
cmp
fmuls
jnp
add
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
add
push
cmpl
notl
movl
movl
mov
jmp
movl
movl
jle
pushl
push
push
call
xor
or
sbb
add
cmpl
movl
mov
jmp
mov
je
push
pushl
pushl
call
or
sbbl
sub
xor
or
mov
sub
xor
xor
add
and
push
notl
push
mov
mov
shrd
cmpl
movl
movzbl
mov
jmp
mov
jbe
pushl
pushl
push
call
add
dec
xorl
add
sbb
and
shr
cmpl
mov
movl
movl
jmp
mov
ja
push
call
mov
xor
sub
add
xor
sub
xor
add
adc
mov
cmpl
mov
mov
mov
jmp
notl
jbe
push
push
push
call
add
xor
addl
add
mov
mov
add
sbb
mov
cmpl
movl
mov
movl
jmp
movzwl
jb
pushl
call
adc
mov
xor
add
sub
or
mov
mov
or
and
adc
movl
xor
adc
mov
xor
cmpl
movl
mov
movl
jmp
movl
movl
jae
push
pushl
push
call
xor
xor
or
mov
sub
movl
movzwl
sub
mov
or
adc
not
mov
add
xor
or
mov
mov
cmpl
movl
mov
movl
movzwl
jmp
mov
jle
pushl
push
push
push
push
push
call
mov
add
add
inc
add
mov
and
mov
or
and
sbb
shl
mov
shrd
xor
sbb
shr
cmpl
movl
mov
mov
movzwl
jmp
movl
movl
ja
push
push
pushl
push
pushl
call
or
xor
or
adc
adc
movzwl
xor
sub
adcl
and
mov
mov
cmpl
movl
mov
movl
movl
jmp
mov
movl
ja
push
pushl
push
pushl
push
call
xor
add
adc
subl
movzwl
sbb
mov
xor
andl
movzbl
adc
xor
sbb
or
orl
mov
neg
mov
negl
mov
cmpl
movl
mov
mov
jmp
movl
not
jge
pushl
pushl
pushl
call
sbb
sub
notl
sub
sbb
add
mov
adc
mov
mov
cmpl
mov
movl
movl
jmp
mov
mov
jle
push
call
sbbl
xor
or
or
mov
movzbl
sbb
mov
cmpl
mov
not
jmp
mov
jne
push
pushl
push
pushl
pushl
pushl
push
call
andl
and
or
movzwl
add
or
mov
adc
mov
orl
shl
xor
movzwl
add
xor
sub
mov
cmpl
not
mov
mov
movzwl
jmp
mov
mov
ja
push
push
pushl
pushl
push
call
xor
xorl
sub
or
mov
and
mov
xor
shld
shl
mov
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
adc
mov
movzbl
adc
mov
sbb
xor
xor
xor
mov
mov
andl
shld
shl
jmp
ffree
addl
cmp
push
into
es
xchg
adc
movlps
rolb
out
pop
clc
les
sti
das
xchg
inc
push
add
jb
rolb
pop
xchg
popf
mov
aaa
jecxz
pop
rclb
gs
mov
or
add
addr16
cmpsl
sub
mov
subl
stc
lcall
jb
call
mov
mov
test
loop
jle
or
pop
xchg
sahf
xor
sbb
jnp
test
notl
add
cld
stc
mov
sub
orl
adc
fildll
xor
shll
jge
iret
mov
pop
cs
mov
add
cmpsb
xchg
jecxz
pop
lods
mov
sbb
add
adc
xchg
imul
pop
pmullw
aad
out
mov
notb
aas
sub
jge
movsb
mov
mov
leave
and
decl
cmp
jp
adc
mov
add
dec
mov
lods
scas
jnp
mov
or
scas
rcll
in
adc
push
mov
movntq
mov
xchg
bound
mov
pop
mov
aam
mov
mov
roll
std
loopne
xchg
loopne
jle
lock
clc
dec
pushf
cltd
dec
xor
es
mov
xchg
jb
push
mov
in
call
iret
andl
sub
mov
arpl
or
sbb
dec
pusha
xor
xchg
lcall
mov
cmp
cs
jp
cltd
repz
iret
push
mov
ljmp
lahf
mov
xor
mov
cmp
push
rcrl
mov
les
icebp
mov
enter
dec
push
cmc
cld
pop
test
iret
pop
loop
test
popf
punpckhwd
stc
or
mov
stc
cmpsl
mov
insl
xchg
or
cld
jbe
imul
mov
mov
aaa
push
icebp
jbe
and
enter
add
stos
push
dec
xchg
ret
push
fistpl
dec
fbstp
jl
inc
push
ja
xchg
xchg
test
sub
popf
lcall
jl
bound
into
rcrb
movsb
ja
andl
dec
sahf
ljmp
mov
gs
mov
scas
insl
sbb
out
cmp
movl
jne
cmp
je
mov
mov
push
pop
xor
shl
mov
xor
shr
or
mov
mov
mov
mov
mov
mov
push
pop
sub
mov
add
mov
lea
mov
mov
mov
xor
jmp
gs
test
dec
jmp
push
loopne
mov
decb
adc
outsl
sub
jnp
push
jne
push
pop
stos
pop
addl
mov
stc
cwtl
cltd
pop
in
daa
out
jae
adc
cmp
movntq
loopne
pusha
rcl
pop
int3
xchg
xchg
int
adc
mov
dec
xor
push
in
movsl
les
test
xchg
mov
movl
sub
mov
sbb
mull
push
test
popa
movsb
push
dec
sub
sub
and
adc
repnz
sahf
mov
mov
lods
insb
lock
in
pop
jns
int3
or
xchg
cwtl
pusha
je
rorb
je
notb
fdivr
adc
xchg
push
cmp
sub
adc
lods
inc
imul
sbb
test
xchg
pop
cmp
add
inc
xchg
out
dec
jmp
and
aas
imul
daa
loope
vmwrite
push
mov
call
clc
or
sbb
mul
sub
nop
scas
gs
pushf
loop
inc
shlb
inc
outsb
stos
mov
jbe
push
mov
sti
jecxz
pushf
cs
cld
cmpsw
lret
xchg
mov
aaa
or
adc
push
push
jg
stos
es
loope
jnp
popf
scas
push
in
sarb
cmp
and
pushf
and
mov
pop
jb
sbb
lods
cmc
dec
shr
and
jp
call
inc
and
int
ret
notb
test
xor
aam
mov
pop
dec
adc
push
push
cmp
js
in
shll
stc
dec
jb
mov
lcall
inc
not
mov
dec
stc
sahf
jg
insb
ret
xorb
mov
int3
fdiv
push
sbb
sbb
add
lock
cmpsb
push
push
mov
inc
out
jl
cmpb
fstpl
fs
mov
cs
lods
add
scas
lret
mov
fdivl
ja
sti
cmpsl
nop
push
pop
or
fadd
xor
pop
sub
adc
mov
inc
push
repz
call
dec
and
and
xor
xchg
inc
sbb
rol
js
in
jns
or
xchg
in
add
test
adc
pop
cmp
push
and
bound
in
mov
inc
shl
data16
push
cmp
fidivrl
sbb
repz
lahf
mov
mov
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
jmp
xchg
enter
pop
cs
sti
jle
jnp
adc
movlps
rorb
and
inc
rcr
xor
lds
call
jne
scas
fwait
dec
adc
ds
arpl
outsb
sub
enter
fcmovb
sbb
stc
and
std
pop
jne
popa
add
aaa
ror
push
add
pop
sub
sub
mov
lret
sub
sbb
in
pop
xchg
jge
and
pop
stc
lret
cwtl
dec
or
adc
icebp
adc
push
loop
jbe
cmc
shl
std
pusha
popf
add
cs
cmp
fucomip
push
fsubrs
mov
and
shld
les
in
outsl
out
daa
lds
stos
es
adcl
jbe
sbb
xlat
lret
shlb
ja
in
std
movsb
arpl
dec
shll
mov
sbb
xor
cwtl
daa
or
fadds
push
imul
xchg
insb
jl
sub
mov
subl
out
je
je
xor
data16
xchg
adc
in
fisttpl
js
fwait
xor
int
insb
fwait
push
stc
shr
push
lret
fisubl
xchg
xor
jae
nop
incb
jae
xor
mov
das
popf
jne
fcmovbe
pop
mov
jo
cmpsl
out
mov
pop
bound
repz
sub
jbe
out
lods
sbbb
add
jge
sbb
pop
jno
aam
push
add
push
mov
cmp
cmp
call
mov
ds
notb
push
sbb
test
addr16
int
mov
ja
xchg
addb
pushf
push
xchg
push
push
sbb
sbbl
and
lods
loop
mov
pop
dec
xchg
add
iret
ss
cmp
cmc
mov
insb
mov
inc
mov
sbb
jnp,pt
sub
fmuls
or
repnz
push
nop
arpl
jae
sbb
xchg
lcall
add
stos
fwait
pop
jns
pop
int
adc
sbb
outsl
andb
dec
adc
mov
xor
enter
sub
mov
cwtl
xchg
pop
ficoms
dec
jae
sbb
push
and
push
nop
imul
adc
add
enter
fistpll
xchg
inc
adc
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
jmp
adc
sbb
sbb
mov
decb
adc
push
push
mov
clc
fisubs
pop
sub
adc
add
cld
dec
fldenv
gs
push
jmp
imul
movsb
movsl
push
xor
cld
xchg
push
add
or
mov
lcall
dec
jmp
popf
push
mov
jb
cmpsb
mov
cwtl
cld
push
xlat
adc
cmpsb
inc
mov
xor
aad
inc
add
mov
pop
stc
cld
push
es
sub
mov
inc
ds
adc
je
mov
push
add
fs
fsubrl
mov
test
sbb
in
dec
mov
lahf
test
lcall
add
arpl
mov
sbb
and
out
xor
cltd
and
mov
cmp
jo
out
mov
push
adc
xor
fnstcw
das
dec
out
sahf
dec
aad
insl
inc
sbb
iret
aam
inc
push
and
outsb
aad
mov
push
push
shlb
sbb
or
fs
pop
fildl
xchg
in
push
dec
fsubr
lods
mov
push
loop
enter
xchg
add
sbb
pop
insb
or
or
mov
inc
pop
pusha
push
cmp
icebp
sub
push
add
or
popa
mov
loopne
test
inc
out
subb
dec
pop
sbb
push
movsl
ljmp
lods
cmp
cmp
xchg
mov
icebp
pop
xlat
dec
nop
pop
or
lods
loope
mov
fstpt
insl
ss
mov
sbbl
testb
xor
out
sahf
jno
mov
and
mov
std
bound
mov
xor
pop
dec
add
cli
cld
jle
mov
sbb
jnp
lret
test
add
lret
dec
js
adc
jge
push
rolb
push
push
repnz
sbb
fdivl
andl
shrb
sbb
push
push
push
pop
mov
cmp
repnz
cli
lahf
sbb
in
adc
adc
es
sub
stc
fiadds
js
sub
hlt
mov
pop
cmp
pop
xchg
jns
and
and
shrb
test
cmpsb
aaa
lods
ljmp
mov
addr16
loope
call
mov
jmp
js
cmc
repz
sub
push
cwtl
punpckhdq
jne
adc
movlps
fimull
sbb
sub
out
mov
sbb
xchg
enter
or
cmp
js
mov
arpl
jg
imul
push
ret
and
vcvtpd2ps
inc
pop
sub
mov
scas
stc
fnstcw
sarl
and
add
std
xchg
pop
test
mov
add
out
xor
inc
sahf
fildll
int
adc
test
mov
dec
into
or
add
inc
mov
sbb
je
inc
out
bnd
je
jb
jp
jg
cltd
xchg
bound
push
icebp
lock
mov
push
push
movsl
mov
test
mov
mov
push
mov
cmp
mov
mov
test
jmp
mulb
pop
mov
and
mov
cmpsl
lds
cs
adc
cmp
test
movsl
lock
sbb
cmpsl
or
jmp
adc
gs
data16
nop
insb
fs
and
movsl
push
fsub
hlt
rcll
mov
xchg
movsl
sub
sub
inc
jns
xor
fistpl
push
shr
xchg
mov
ret
sbbb
dec
adc
fcoms
jne
adc
sbb
xorl
and
add
mov
leave
es
rcl
sbb
dec
in
mov
mov
fisubrl
xor
dec
push
jle
jae
fs
fildll
sbb
into
insl
xchg
movsb
or
out
outsl
sub
arpl
cli
pop
mov
push
add
scas
sbb
dec
mov
pop
jae
inc
cmpsl
jae
mov
cmp
das
add
sub
mov
std
mov
xchg
orb
cmp
add
sbb
or
mov
inc
hlt
lock
pusha
pusha
rolb
pop
dec
adc
clc
sbb
ss
or
addr16
movsb
xorps
sub
jl
sub
dec
xchg
leave
leave
or
and
and
push
aas
adc
inc
push
xchg
test
xor
add
cmp
push
push
cmc
push
pop
popf
loop
cmp
mov
mov
add
push
rcrl
daa
insl
ds
test
xlat
jg
adc
fdivrs
jnp
cwtl
mov
add
mov
pop
pop
mov
jne
and
lret
jge
mov
mov
xlat
rcr
mov
nop
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
jb
and
sbb
pop
jmp
add
insb
ret
jno
adc
movlps
popa
mov
mov
push
mov
fldenv
cld
fninit
pop
cmp
sbbl
push
shll
xchg
aad
xchg
add
rcr
sub
fstps
push
arpl
jno
xchg
js
mov
in
mov
test
cltd
stc
mov
and
push
dec
xchg
dec
pop
loope
stos
pop
push
xchg
jmp
pop
dec
cmp
loop
mov
adc
push
in
mov
sub
jle
pop
xor
add
aas
movsl
pop
imul
mov
jae
test
aas
imul
pushf
insb
sub
pop
pusha
sbb
add
into
fwait
lock
shlb
ret
cld
dec
cli
add
cmpsl
aaa
cmp
mov
movb
rcr
ja
cmpsl
lds
fsubrs
xorb
sarb
ret
push
daa
movsb
decb
inc
stos
into
xchg
shlb
push
lea
sbb
aad
es
mov
cmp
and
loop
or
push
ds
ljmp
iret
lcall
pop
xlat
nop
mov
int
stc
cmp
mov
stos
ss
rcrl
cmc
push
sbb
dec
imul
ljmp
incb
or
or
data16
xchg
and
xchg
jp
push
xchg
sub
cmp
loopne
mov
jo
scas
mov
cmp
int3
pop
and
add
mov
push
mov
xchg
jl
movsb
test
scas
pop
subl
adc
into
addr16
add
push
jmp
dec
sub
in
cwtl
inc
ss
cmp
ret
fcoms
cmp
pop
jae
inc
ja
sub
imul
jecxz
movsl
adc
pop
cwtl
insb
push
enter
cmp
push
sbb
dec
xchg
jmp
stos
lods
aaa
jae
jnp
push
rcll
pop
js
jmp
pop
test
xchg
cltd
push
rcll
ret
repnz
out
decl
mov
je
neg
and
pop
lcall
pop
fsubrs
or
sahf
inc
iret
nop
lods
iret
aaa
pop
inc
jle
dec
lret
das
jo
roll
or
ret
sahf
adc
repnz
shll
mov
add
lea
push
shl
jmp
push
loopne
jo
jno
mov
cmpsl
cs
scas
adc
decb
adc
mov
push
arpl
cld
fimull
movsl
cmpsl
sti
xchg
pop
icebp
cld
clc
ja
push
aas
pop
and
mov
mov
dec
jno
and
test
and
adc
mov
push
pop
jmp
int
int
jne
lret
xor
nop
add
mov
and
xor
rcl
call
out
out
inc
fdivs
test
mov
mov
leave
inc
cmp
icebp
sbb
xchg
rcl
mov
addr16
push
push
mov
repnz
inc
push
repz
loope
and
adc
pop
out
xchg
shll
pop
es
or
sbb
jns
pop
cld
mov
jns
mov
cmp
xchg
dec
jnp
aam
push
cwtl
inc
pop
popf
pop
iret
xchg
fisubrl
popa
pextrw
popf
movb
icebp
pushf
cltd
pop
shll
sbb
sbb
adc
sub
pop
fadds
out
xor
and
jecxz
arpl
leave
cmpsl
xchg
ds
scas
clc
xor
jge
in
xchg
adc
mov
adc
cmp
sub
xor
rcll
pop
push
andl
adc
cmc
iret
stos
ficoml
leave
jle
lret
adc
push
call
dec
imul
mov
xor
mov
cmp
fnsave
adc
clc
mov
sub
inc
nop
aaa
add
lret
rorl
sub
jbe
cmp
arpl
add
jg
addr16
call
push
cld
test
add
mov
pop
sbb
inc
into
cltd
inc
dec
int
add
cli
lods
scas
push
scas
insl
xchg
addb
push
nop
mov
stos
arpl
inc
sbb
ret
sarb
fsubrs
fdivl
mov
mov
pushf
xchg
mov
cmp
aaa
xor
dec
pop
xor
faddl
push
pop
leave
xor
fcoms
mulb
inc
and
push
mov
mov
mov
and
jecxz
lret
leave
loope
jno
jle
jno
fwait
sub
inc
mov
dec
mov
mov
bound
sbb
pop
xor
push
push
mov
into
push
out
ja
and
decl
clc
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
jmp
imul
sbb
lea
adc
decb
adc
add
mov
jmp
jbe
pop
stc
mov
inc
or
push
rcll
mov
push
or
dec
xchg
dec
rclb
jp
lock
fwait
mov
mov
push
gs
push
outsb
enter
inc
stos
pop
test
mov
pop
mov
call
mov
push
lock
hlt
push
jmp
mov
jne
ja
decb
adc
fsts
ja
pushl
jge
mov
add
pop
ja
inc
repnz
movsl
es
ss
jo
stos
int3
leave
ret
cmp
cmp
and
or
and
addb
xlat
xor
mov
int
sbb
lea
iret
add
or
pop
inc
mov
dec
test
lahf
xor
movsb
pop
cs
mov
pop
xchg
aas
jle
jno
shlb
xchg
mov
xchg
sbb
test
lahf
test
push
dec
jg
inc
adcb
cmpb
roll
sub
or
repz
inc
mov
fdivrs
daa
dec
pop
mov
fldl
mov
cmp
pushf
inc
inc
cmp
adc
add
outsl
js
lahf
int3
daa
ljmp
jns
inc
popf
lods
xchg
pop
sbb
pop
cmp
adc
pop
mov
fidivs
inc
cwtl
fisttpll
test
sub
addr16
sub
dec
out
addr16
mov
inc
pop
test
sub
movsl
push
adc
lret
adc
mov
psadbw
jl
std
test
iret
or
push
inc
sub
xchg
mov
scas
sbb
cmpsl
inc
cli
mov
sbb
push
pop
scas
scas
shrl
lcall
push
mov
arpl
cld
popa
in
inc
roll
aad
jne
into
outsb
and
lret
sub
cmp
punpckhwd
out
xchg
mov
cmp
mov
lcall
adc
sub
xor
dec
or
xchg
fstps
mov
cltd
push
mov
icebp
jns
sub
xor
aaa
jno
js
inc
arpl
mov
mov
lods
xor
ja
push
mov
xchg
jnp
or
mov
movl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
jmp
lods
lods
scas
sbb
xchg
adc
jle
mov
decb
adc
pextrw
push
call
in
outsb
sbb
mov
ljmp
jne
fchs
cltd
jne
and
out
or
ss
insb
and
outsl
jl
and
add
mov
shrl
fldcw
lahf
or
fimuls
lret
dec
mov
adc
sahf
movsb
pop
pop
clc
inc
dec
shlb
pop
out
mov
lea
fnstcw
xchg
fsubp
repz
push
decl
repz
pop
mov
daa
sub
xchg
ja
or
jmp
cltd
leave
fwait
push
out
inc
dec
add
xchg
enter
je
int3
loop
outsl
in
stos
jp
enter
inc
sub
pop
cmp
ja
cmp
inc
clc
lock
jne
out
aam
pop
leave
sub
mov
and
pop
into
enter
push
push
sbb
pop
add
aas
cli
inc
mov
xchg
hlt
jge
jp
jns
sub
adc
mov
or
fstpl
addl
and
into
fwait
sbb
jl
out
push
pop
push
fcmove
cmpsb
or
sar
hlt
loope
cmc
sub
jmp
jnp
jmp
xchg
mov
out
js
or
scas
pop
in
mov
mov
push
test
dec
dec
cltd
ljmp
cmc
add
loopne
pushl
es
cmp
aaa
cmpsb
mov
test
jg
daa
sahf
push
push
or
ss
cltd
add
cmp
pop
es
adc
cmp
aaa
ljmp
mov
sub
ret
les
push
mov
imul
pop
jmp
cmp
jbe
aas
out
sahf
jbe
imulb
jb
std
add
lods
loopne
loope
mov
shr
mov
dec
or
dec
fwait
lods
cmpsl
mov
add
mov
stos
fmulp
jb
mov
mov
sarb
mov
stc
sub
loope
js
inc
movsb
pop
aaa
inc
inc
insl
dec
repnz
loope
jb
adc
push
jnp
mov
mov
stos
pop
in
sbb
xchg
arpl
lods
dec
push
gs
xchg
ror
loop
incl
daa
mov
jb
xchg
jmp
lcall
aad
push
add
in
mov
add
cli
push
test
out
mov
mov
imul
js
push
adc
add
cmp
pop
incl
add
add
add
xorl
js
jmp
pop
pop
adc
decb
adc
add
leave
jmp
mov
or
sub
js
xor
test
add
frstor
push
xchg
in
ret
mov
sbb
inc
icebp
push
jg
out
cmp
dec
xchg
xchg
sbb
rcll
cmpl
dec
pop
push
addr16
dec
and
js
pop
es
and
xchg
shll
shl
das
pop
js
and
fwait
sbb
mov
fcomps
mov
xor
int
bound
or
adc
mov
or
es
dec
pop
xchg
cs
add
add
mov
aad
pop
subl
sti
pop
mov
hlt
enter
pop
xchg
scas
lock
and
iret
pop
shr
dec
jno
push
arpl
mov
push
xor
mov
sbb
outsl
mov
stc
orb
inc
out
mov
out
scas
int3
cmp
lods
jne
sbb
or
mov
push
push
or
sbb
cmp
mov
js
mov
and
imulb
clc
cmp
mov
mov
sbb
not
mov
jno
jno
mov
sub
lea
arpl
cmc
add
enter
lahf
mov
jle
imul
push
sbb
and
xchg
popa
jns
mov
movsb
xchg
adc
aas
insl
add
push
push
xchg
and
jp
sub
fimull
movsl
mov
cmp
leave
sbb
aas
push
mov
or
sub
loope
repnz
cmp
mov
mov
je
lods
xor
xor
and
mov
add
pop
sub
sub
imul
xchg
lret
fsubr
push
daa
inc
and
jns
ja
repz
outsb
xor
dec
mov
or
add
insl
mov
mov
push
inc
inc
pushf
dec
fxch
sbb
sub
xchg
xchg
ljmp
dec
cmc
js
fcoml
imul
out
mov
dec
jne
dec
sbb
stc
cmp
ss
lods
ret
das
xchg
and
iret
push
push
mov
inc
pop
sbb
sub
loop
popf
push
pop
cs
popa
mov
pop
dec
rorb
mov
mov
inc
cmp
jmp
icebp
bt
cmp
test
push
adc
decb
adc
xchg
imul
adcl
ljmp
mov
shl
test
add
inc
hlt
add
and
cwtl
lock
vpmacssdql
daa
loop
jae
mov
cs
repnz
or
xchg
jns
xchg
dec
inc
iret
cltd
lcall
or
ret
es
call
cmc
inc
push
jo
mov
inc
mov
sbb
push
leave
pop
pusha
mov
gs
iret
clc
popa
out
mov
push
rorl
add
repz
mov
aad
xchg
idivb
outsb
xchg
inc
pop
je
andl
hlt
dec
cmpl
sbb
shrb
test
jne
cltd
lret
movsl
sti
jp
sti
mov
mov
ljmp
sti
xchg
out
add
add
mov
mov
into
adc
jne
aad
mov
and
jmp
mov
ret
jo
int
or
adc
add
or
lock
test
pop
cmpsb
jb
jne
daa
das
aam
ret
or
jg
xor
clc
push
enter
mov
dec
lds
int
notb
pop
jge
cmp
outsl
cmp
xlat
fs
xor
cmpsl
adc
int3
out
adc
cmp
shlb
pop
pop
xchg
insl
out
popa
jnp
jb
cmp
pusha
pop
or
dec
out
jp
ljmp
push
adc
lcall
inc
pusha
push
ds
cltd
or
out
lcall
cmp
popf
pop
lds
clc
ret
push
loopne
ja
fwait
sti
push
mov
add
sbb
fisubl
pop
fmul
inc
cmp
push
cmp
push
stc
push
flds
div
inc
das
ljmp
ss
mov
stos
push
jbe
jo
dec
cwtl
add
outsb
cs
lcall
cmpsl
outsb
insl
stos
sub
jecxz
add
arpl
clts
sub
stc
into
ret
fiadds
sub
add
sbb
imul
sub
jnp
pop
jecxz
fidivrl
push
dec
pop
lcall
loopne
jnp
lret
lock
push
inc
ficoml
icebp
call
pop
jns
mov
cmovbe
int3
pushf
repz
or
sbb
and
test
cmpsl
push
sub
push
inc
mov
fmulp
push
ja
add
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
jmp
nop
sti
sti
fnstsw
jno
mov
jle,pn
dec
sarb
dec
adc
decb
adc
adc
es
clc
adc
les
adc
adc
inc
mov
xchg
jp
sbbb
sahf
mov
pop
sbb
aad
sbb
or
inc
jle
mul
push
or
rclb
xchg
jl
xchg
mov
int
ja
imul
mov
push
in
xorl
sbb
nop
sbb
push
pop
push
inc
xchg
es
jmp
ret
jle
nop
in
fsubs
adc
inc
ja
jne
test
mov
add
iret
xchg
leave
adc
add
popa
xor
aam
xchg
popf
cmp
sbb
adc
adc
inc
mov
rorl
push
je
sbb
lock
dec
adcl
jge
cwtl
imul
loope
sbb
fcmovu
sahf
and
dec
loopne
mov
and
mov
aam
sub
imul
pop
mov
pop
lahf
movsb
js
cs
inc
sar
sub
inc
lds
repz
xchg
dec
cmp
cmp
icebp
xor
xchg
in
loopne,pt
js
pop
out
ja
adc
jae
fidivrs
enter
lock
cli
int3
add
sbb
push
add
cltd
clc
jno
int3
add
add
pop
inc
lret
xor
xchg
inc
mov
mov
dec
jns
lret
lahf
pop
les
adc
cmp
es
sti
insb
pop
pop
fidivrl
ss
jno
inc
data16
aad
pop
lock
fprem
pop
add
and
mov
lea
in
out
mov
rclb
sbb
push
out
jnp
in
mov
nop
xlat
xor
stos
jb
and
loop
in
cli
gs
add
fwait
or
fsts
cmp
lods
addb
dec
sbbl
jb
loope,pn
mov
cltd
jecxz
leave
movsb
inc
adc
test
shrb
aam
dec
jne
pusha
inc
or
cmpsb
xchg
add
cmp
pop
xor
jge
gs
add
push
cs
imul
xor
jbe
arpl
and
pop
sbb
sti
ss
pushf
out
and
addr16
and
or
imul
jge
xlat
jb
inc
shll
in
adcb
adc
pop
push
lea
outsl
inc
repnz
negb
ds
in
imul
les
mov
cmp
and
cwtl
mov
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
jmp
ss
mov
lods
insl
xor
js
repz
adc
adc
movlps
push
push
enter
call
dec
gs
dec
or
and
jnp
inc
stc
mov
dec
int
mov
pop
xor
sti
push
lock
adc
sahf
and
mov
out
ja
push
and
jle
cmp
add
call
iret
testl
push
pop
into
push
sbb
push
in
insb
cmp
js
jle
aam
test
mov
inc
aam
jns
push
push
mov
or
mov
arpl
cltd
mov
bound
dec
xchg
ljmp
mov
inc
adc
addl
adc
les
out
xchg
cmpsb
cltd
mov
out
aas
data16
test
mov
xchg
or
insb
xor
jecxz
mov
sbb
sbb
push
or
std
imul
push
xor
repz
jb
cli
mov
test
dec
mov
in
enter
or
pop
push
mov
push
sti
mov
cmp
pop
mov
lock
push
inc
push
dec
inc
ret
sub
add
push
push
add
xchg
sbb
pop
clc
mov
sub
mov
ds
je
pop
cmp
inc
pop
int
push
cmc
fmull
cli
push
fwait
pop
out
sub
inc
and
adc
cmc
fmull
mov
imul
insb
mov
push
push
pop
fsts
sub
dec
lods
add
fcmovne
jb
fdivp
scas
push
inc
adc
test
jnp
jp
pop
xor
add
popf
ljmp
jo
or
roll
nop
pop
and
shlb
out
sub
shrl
jmp
stos
add
mov
enter
xor
jne
shlb
loopne
jecxz
js
js
rorl
test
sub
sbb
mov
xor
jne
push
in
aas
clc
push
ss
jbe
xor
cld
cmpsb
jae
arpl
or
dec
jmp
mov
dec
fdivrs
insl
rcrb
and
sti
cmp
je
scas
mov
ss
pop
aad
lea
pcmpeqb
aaa
adc
xorb
mov
cltd
aam
data16
mov
imul
lods
sbb
mov
rcl
jbe
mov
push
shl
call
jmp
cmp
addr16
pop
push
cmp
cmp
mov
repz
adc
decb
adc
xlat
pop
cmp
add
or
push
mov
cli
xchg
aad
xchg
sbb
jbe
xchg
mov
shrl
xchg
lcall
lret
ficompl
pop
mov
movsb
fld
or
cwtl
jb
sub
xchg
jp
push
adc
lcall
stos
pop
pusha
lds
cld
mov
jge
add
fdivl
and
add
into
out
fnstsw
arpl
ja
push
bnd
lcall
cmp
es
fbstp
ficoml
in
pop
je
std
aaa
xchg
fsts
pop
pop
jbe
lcall
sub
mov
sarb
push
mov
hlt
lret
mov
cmp
xor
mov
mull
jno
lcall
andl
clc
es
inc
movl
mov
dec
adc
nop
sbb
mov
inc
dec
pusha
pop
outsb
out
jp
fsubrs
pop
mov
jne
jle
test
cltd
push
dec
pop
cmp
mov
je
xchg
scas
fcmovnu
ds
or
or
pop
cmpsb
incl
dec
pushf
cmp
push
mov
jns
or
xor
cmpsl
sub
mov
ret
add
pop
jns
add
bound
roll
push
mov
into
mov
movsb
stos
mov
and
pop
add
xchg
in
adc
cmp
xor
and
js
ret
add
inc
cmpl
push
es
inc
sbb
dec
fisttpl
test
dec
xchg
inc
pop
cwtl
cli
and
insb
nop
mov
gs
push
cmp
xchg
addb
stos
lahf
popf
push
mov
out
loop
popf
push
sub
outsb
sbb
out
xchg
leave
shl
subl
dec
out
sti
insl
lsl
outsl
leave
data16
xor
cmp
icebp
push
mov
adc
dec
ret
popf
popa
xor
repnz
or
lods
dec
ss
inc
sbb
test
inc
mov
dec
or
fwait
adc
xlat
inc
mov
ret
pop
aaa
imulb
clc
lock
andl
push
cmp
cli
jmp
lahf
inc
or
imul
mov
lret
iret
push
out
rol
add
insb
pushaw
pushf
mov
xor
int
stos
dec
mov
cmc
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
jmp
imul
leave
sub
xlat
xor
fnstsw
adc
decb
adc
mov
into
adc
cltd
mov
movsl
shll
insb
or
jns
loopne
cmp
xlat
sub
cld
sbb
sub
std
cs
pop
aaa
jb
add
inc
xor
mov
sbb
or
add
cld
test
push
sbb
test
sbb
xchg
test
enter
sti
and
pusha
sbb
pop
daa
or
xchg
pushf
mov
xchg
mov
push
pop
scas
jp
scas
ljmp
jb
pop
push
add
lahf
push
leave
push
frstor
add
or
test
lods
adcb
ds
iret
mov
cld
ja
rolb
clc
dec
mov
in
mov
mov
cmc
lods
pop
mov
movsb
adc
cwtl
lcall
cmpsl
scas
push
movsb
adc
enter
xor
and
es
dec
mov
lock
outsl
bound
loop
jbe
xchg
adc
inc
sub
cld
sub
stos
xchg
outsl
pop
jg
xchg
jp
mov
lea
pop
or
addr16
into
dec
shr
mov
fs
jmp
mov
lods
sbb
test
ds
mov
stos
push
pop
aaa
repnz
xor
xchg
sbb
mov
pusha
pop
push
mov
xchg
int
push
clc
dec
sbbb
sub
gs
add
cld
mov
mov
imul
outsb
add
aas
add
push
insb
mov
lods
iret
aam
mov
fldenv
xor
fcmovu
test
adc
pop
cmp
pinsrw
mov
int
pop
pop
bnd
dec
je
inc
int
sbb
jo
adc
test
sub
mov
sbb
jmp
push
push
addl
in
push
cs
stos
jne
dec
pop
pop
out
cmp
movsl
addr16
imul
shll
lock
int3
xor
dec
mov
push
test
aad
mov
jns
push
mov
push
enter
mov
das
mov
imul
shll
fwait
lcall
dec
cli
and
jmp
daa
or
mov
and
lea
sbb
mov
mov
pop
leave
ret
mov
inc
mov
or
mov
mov
jne
mov
incl
mul
ret
push
mul
mov
cmpl
movl
movl
jmp
not
ja
push
push
pushl
call
subl
adcl
adcl
xorl
xor
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
jmp
jmp
mov
dec
addl
dec
push
test
popf
movlps
testl
dec
filds
mov
mov
pop
mov
mov
repnz
lock
dec
mov
lret
jae
fcoms
sub
xchg
inc
sub
xor
dec
sbb
xchg
jae
jns
xchg
xchg
jmp
inc
jno
push
jnp
movb
dec
sub
jmp
ret
outsb
andb
out
push
mov
popl
ds
inc
cmp
cwtl
test
ret
enter
fdivrs
fstp
repz
pop
fisttpll
int3
ss
or
sub
xchg
mov
ds
mov
xchg
pop
sub
and
dec
movsb
or
dec
adc
cmp
push
mov
fcompl
daa
mov
cmpsb
in
and
jmp
lods
push
hlt
cltd
jg
xlat
inc
test
cmpb
popf
mulb
lcall
add
mov
jmp
in
loope
fcompl
cmpsl
dec
adc
daa
popf
inc
mov
pusha
sub
insl
jmp
push
loop
pusha
add
test
repnz
mov
lea
mov
fcomps
add
js
shll
in
add
mov
push
jne
js
sub
inc
or
std
fistps
and
sub
jp
jno
inc
xchg
or
pusha
cmp
pushf
inc
xor
outsb
cmp
sub
daa
and
ffree
lret
iret
xchg
fwait
rol
inc
xor
xchg
pop
mov
jne
shrb
movsl
dec
in
fwait
pusha
adc
and
add
mov
sub
int
and
nop
pop
stos
xor
pop
jne
scas
lock
jg
pop
mov
in
pusha
cmpsb
loope
aaa
sbb
dec
ret
push
jl
int
sub
cltd
fcoms
pop
fimuls
fwait
cmc
daa
sub
dec
pop
dec
inc
add
cs
push
fidivrl
movsl
mov
fwait
les
jg
push
fcmovnb
mov
mov
sub
iret
mov
loopne
cmp
pop
or
mov
pop
add
pop
ljmp
gs
lret
xchg
int
loop
and
pop
push
mov
pop
cs
xor
sub
enter
jle
addr16
cltd
mov
lods
push
loopne
mov
rorl
adc
mov
sbb
cmpl
pusha
cld
xchg
mov
enter
jae
test
repz
adc
aaa
lret
push
xchg
arpl
mov
adc
mov
inc
jmp
jnp
inc
div
mov
xor
mov
jmp
xchg
add
and
xchg
and
sub
in
int3
lods
dec
cmp
adc
orl
out
or
bound
cmp
add
pop
dec
inc
mov
dec
mov
jns
lock
push
dec
std
add
aad
popf
outsb
in
negl
mov
xor
fmuls
daa
xor
mov
jno
dec
incb
and
movsl
das
inc
lods
push
insb
push
cwtl
fsubrs
mov
cmpsb
xlat
sar
jb
adcb
mov
push
ret
orl
push
jp
mov
pop
sahf
inc
cmpsb
insl
fiaddl
testl
cli
rcr
push
jae
pop
inc
cli
and
lods
mov
lea
sub
sbb
pop
add
inc
or
mov
inc
out
aas
jl
loope
jg
aad
faddl
pop
es
sti
fsubr
and
push
push
iret
cmp
xlat
and
das
pop
xchg
lea
lret
mov
in
pushl
push
test
sub
fldenv
and
mov
dec
fnstenv
sub
xor
daa
bound
mov
xor
mov
into
div
rep
cmp
and
xchg
pop
sub
pop
add
cld
dec
mov
inc
pop
stc
orb
sbb
lods
mov
ror
mov
mov
add
push
jmp
idiv
sub
push
fwait
sub
add
inc
loope
sahf
mov
cmp
or
mov
sbbl
or
pop
and
xchg
or
cmp
jg
js
xchg
push
cwtl
sti
sbb
ret
jae
xchg
xchg
aaa
pop
popw
cwtl
pushf
repnz
add
shlb
scas
lods
mov
repz
divl
rorl
popa
jne
loope
orb
xchg
or
in
movl
push
jae
pop
fs
xchg
sub
arpl
ficompl
dec
inc
cmp
jbe
dec
cmc
xor
hlt
call
inc
shll
push
adc
in
popa
test
xorl
dec
imul
xor
inc
pop
les
xchg
inc
lret
outsb
mov
out
lcall
jne
aaa
aad
sub
pop
dec
or
loope
and
cmp
cmp
ret
mov
insl
xchg
sbb
mov
pop
mov
stos
cmp
test
lea
add
add
pop
insl
loope
mov
rcll
fdivr
mov
in
sahf
in
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
jmp
pop
mov
pusha
cltd
pop
sbb
enter
lret
das
adc
popf
movlps
or
and
out
lret
mov
sbb
push
mov
call
adc
loop
outsl
push
cmpsl
sbb
cmp
insl
jbe
sbb
mov
movsl
inc
aad
sbb
ret
outsb
dec
nop
orl
scas
jecxz
fdivs
lea
in
push
dec
lods
sub
mov
add
mov
mov
push
out
adc
int3
dec
xchg
imul
ret
enter
outsl
movsl
addb
rcl
movsb
call
hlt
shr
inc
fsubrl
pop
cmp
in
mov
ror
scas
inc
addr16
mov
les
push
jle
xchg
fisubrs
mov
pop
mov
or
ret
jmp
cmp
popf
es
leave
cmp
mov
lret
inc
mov
pop
outsb
clc
daa
sarb
jl
xchg
out
ljmp
push
or
lret
enter
adc
test
and
pop
lea
repz
push
mov
add
outsb
inc
not
das
cmp
mov
inc
data16
or
sub
dec
ds
xor
daa
stc
loope
cs
jb
push
ret
jbe
xor
loopne
or
xor
insl
mov
or
add
icebp
jno
push
xor
inc
jbe
jge
push
adc
cwtl
pop
jns
pop
jno
jecxz
inc
fadd
fcmovnbe
jne
popf
sub
addb
lahf
in
xchg
sbb
out
jbe,pn
outsb
jbe
shll
push
lods
sti
and
rol
xchg
xlat
jne
into
add
adcl
add
or
dec
clc
xor
mov
out
out
xor
add
adc
xchg
add
xor
cmp
mov
mull
mov
jbe
mov
subb
adc
jno
test
jp
xor
sbb
cmp
ror
push
sub
add
imulb
fnstcw
inc
fwait
mov
mov
adc
mov
aas
sub
mov
jmp
je
mov
pop
flds
repz
stc
inc
push
xor
pushf
xor
cmc
pop
ret
or
mov
sbb
lcall
jbe
pop
cs
rcrl
push
mov
xor
adc
jl
lret
testb
inc
ds
dec
test
inc
ljmp
xor
out
add
lret
js
fdivrl
enter
push
sub
xor
fiadds
mov
xor
mov
xor
mov
sub
mov
add
mov
jmp
jo
sbb
lcall
sub
adc
xchg
push
lret
das
movsl
sahf
filds
jne
cld
popl
jb
pushf
bnd
clc
cli
xchg
in
mov
lea
das
dec
ror
popa
leave
pcmpeqd
lret
or
cltd
arpl
dec
mov
ja
stos
pop
xchg
xor
mov
shll
mov
lcall
mov
mov
in
add
loope
dec
jbe
jae
inc
outsl
stc
ja
mov
iret
sbb
mov
and
mov
fisubrl
jmp
test
or
add
dec
loopne
shl
xchg
cltd
push
imul
shll
adc
rcl
inc
int3
sub
push
jp
mov
push
jae
aaa
mov
popf
pop
mov
push
in
dec
scas
or
jle
movb
mov
mov
repnz
mov
pop
cmp
push
mov
xor
jg
movsb
clc
and
lock
mov
pusha
jg
or
jb
adc
movsb
call
pop
jae
dec
jmp
and
mov
jnp
xchg
sti
sahf
lret
fmul
insb
mov
clc
scas
out
bound
ljmp
mov
and
or
or
mov
outsb
insl
xchg
int
sub
icebp
dec
in
inc
ds
gs
mov
jg
sub
mov
fsubrl
push
or
jo
pop
pushf
fldenv
inc
adc
orl
sbb
lcall
jle
ds
mov
xchg
cmp
ljmp
xchg
jb
mov
fisubl
add
mov
das
jmp
cmp
in
jge
or
cmp
push
repnz
inc
fsubl
mov
inc
or
mov
insl
das
push
jne
sbb
adc
jns
cmpsl
lret
dec
ret
outsl
popf
cmp
and
shrb
dec
js
out
aam
loope
xchg
xor
sbb
out
in
lds
push
fimull
test
cmp
stc
hlt
jno
in
lret
sbb
arpl
stos
test
mov
add
xchg
dec
sbb
inc
enter
adcb
push
cmpsb
lods
sbb
aas
xor
mov
setbe
mulb
fsts
mov
sbb
mov
sbb
push
imul
pushf
loope
xor
xorl
lret
decl
xlat
push
and
pop
or
loop
xchg
dec
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
jmp
fiadds
ljmp
or
fsubs
adc
iret
movlps
mov
jle
test
shl
fadds
outsl
out
movb
dec
fwait
jl
jecxz
in
movsb
jb
xor
dec
addb
xorb
or
shlb
icebp
movsb
push
nop
lcall
push
xorl
daa
push
xor
add
xchg
push
adc
push
popf
xchg
jmp
add
leave
or
xor
fstpt
push
add
push
pop
jp
inc
push
and
add
xchg
sti
enter
std
lods
aaa
rcll
add
popf
jg
cmpsl
push
xchg
xchg
hlt
loop
negl
call
or
int
cmp
leave
aad
fucomi
push
inc
xchg
test
jo
mov
and
mov
sbb
mov
cli
mov
sub
pop
push
push
xor
jmp
adc
xchg
push
mov
xchg
dec
pop
shr
aas
pop
xor
aas
cmp
sub
or
lret
ret
fdivl
sti
fwait
out
js
ss
cli
movsl
mov
xor
lods
imull
fwait
loop
push
shll
sub
or
jg
das
leave
movsb
push
inc
xor
push
lock
imull
ljmp
cmp
push
xor
shlb
and
daa
sbb
mov
pushf
push
add
ljmp
cwtl
jo
sub
test
sbb
nop
das
jno
dec
addr16
jmp
aam
jmp
or
dec
cmpb
lods
scas
add
fsubp
out
xor
pop
lock
popa
adc
inc
mov
lcall
or
aaa
fsubrs
xchg
rol
rcrl
inc
mov
scas
pusha
sahf
js
and
inc
dec
cmp
or
add
fstl
cld
fdivrl
pusha
mov
sbb
aaa
lcall
push
insb
xchg
cld
pop
aas
in
dec
aas
dec
jb
mov
jb
sbb
divl
and
cmp
jns
mov
push
lods
dec
mov
adc
rol
hlt
cld
lds
pop
int
mov
sub
pusha
and
int3
jo
adc
xchg
mov
das
out
insb
cmp
xchg
jnp
fwait
imul
sbb
ret
int3
cs
mov
pop
in
cmp
xor
sbbl
adc
pop
cld
adc
push
jg
enter
into
aad
mov
cmp
mov
pop
xor
and
adc
add
call
mov
movzbl
push
call
test
jne
decl
xor
jmp
mov
mov
incl
mov
cmpl
mov
movl
jmp
mov
mov
jae
call
sbb
adc
xor
movl
orl
add
push
add
pop
mov
sbb
mov
mov
andl
mov
addl
mov
adcl
movzwl
or
cltd
sbbl
movzwl
sbbl
idiv
sub
movzwl
or
or
mov
neg
mov
xor
xor
mov
adc
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
pushl
push
pushl
pushl
pushl
call
xorl
sbb
mov
xor
mov
orl
and
addl
sub
mov
sbbl
jmp
arpl
ja
arpl
mov
into
lods
xchg
pop
adc
iret
movlps
push
imul
mov
jmp
mov
popa
add
push
movsb
icebp
data16
dec
pop
clc
aam
mov
outsl
por
int
lret
divb
lahf
dec
shrl
mov
rcr
mov
lods
jb
jle
clc
jl
jg
lcall
push
jbe
or
sbb
xchg
pop
fisubrs
fistpl
mov
emms
dec
mov
scas
xchg
pop
mov
icebp
xor
insb
mov
adc
rorb
jge
cltd
adc
lahf
xor
lret
sub
cs
and
imul
jb
fidivl
fistpll
cmp
bnd
inc
mov
inc
push
inc
push
push
inc
mov
mov
aam
pop
push
ja
aaa
loop
and
sbb
push
sbb
cs
int
arpl
fldl
lahf
cld
mov
pop
mov
mov
mov
pop
cmp
xchg
fs
push
xchg
test
mov
nop
xor
cmp
add
loop
xchg
mov
mov
inc
pushw
sub
leave
dec
stos
test
cmp
mov
xorl
jns
inc
cwtl
aad
inc
lea
or
shll
push
mov
jae
iret
lds
loopne
pushf
out
ret
movsl
xor
dec
cmp
lcall
sahf
mov
in
in
jno
jns
fcomps
adc
jo
pop
into
xchg
cmp
in
or
push
mov
cli
mov
sbb
mov
lock
mov
stc
lret
dec
xchg
cwtl
int3
mov
lods
shr
add
push
aad
ja
aam
paddd
mov
pop
dec
push
jmp
out
fsubrl
lahf
rorb
add
sbb
sbb
mov
mov
je
sahf
test
pusha
pop
loope
push
jge
fcmovnu
pop
mov
js
imul
mov
pop
mov
loope
push
jge
sub
rcrb
inc
out
push
xor
mov
mov
mov
jle
mov
cmpsb
clc
pop
in
fstps
xchg
std
xor
jne
stos
and
mov
sub
sbb
push
std
xchg
xchg
lock
fstpl
sub
inc
pop
push
aam
das
cwtl
inc
movsl
push
mov
dec
dec
sbb
push
lret
lahf
push
xor
sbb
mov
sbb
mov
popa
movsb
fsubs
inc
and
and
mov
and
mov
adcl
sub
mov
xor
mov
sub
movl
mov
cmp
movl
jb
cmpl
mov
mov
jmp
movzwl
jb
push
call
mov
sub
mov
xor
mov
orl
xor
or
sbb
add
subl
add
movl
movzwl
sbb
movl
movl
andl
movl
mov
mov
sbb
mov
andl
xor
mov
adc
add
mov
mov
xor
mov
subl
xor
subl
div
or
mov
andl
add
adcl
and
pushl
orl
pushl
sbbl
call
movl
not
movl
movl
sub
mov
and
mov
subl
and
or
mov
xorl
and
xor
pushl
adcl
pushl
call
sub
pushl
movl
movl
cmpl
movl
mov
jmp
movl
movl
jge
pushl
push
call
movzbl
or
xorl
andl
negl
sbb
mov
mov
add
dec
sub
or
movl
xor
movl
movl
cmpl
mov
movl
jmp
movl
jbe
pushl
push
push
call
xor
neg
add
adc
sbb
and
adcl
cmpl
mov
mov
mov
jmp
mov
mov
jg
pushl
call
orl
xor
adc
xor
andl
sbb
movl
movl
xor
movl
mov
and
mov
sub
movl
mov
orl
or
and
mov
sub
cmpl
mov
movl
movl
jmp
movl
movl
jge
push
push
pushl
call
decl
xor
xor
add
not
pushl
mov
xor
mov
addl
add
and
xor
mov
sub
sbb
mov
xor
subl
and
andl
pushl
xor
mov
sbb
mov
andl
imul
xorl
xor
subl
or
movl
mov
subl
sub
addl
pushl
andl
call
dec
jne
or
movl
xor
add
adc
mov
movl
mov
andl
movl
mov
call
lea
xorl
mov
cmpl
movl
mov
mov
jmp
movl
movl
jg
push
push
push
call
or
sub
addl
or
xor
xorl
lea
adc
mov
sbbl
mov
orl
mov
mov
mov
cmpl
movl
not
mov
jmp
movl
notl
jne
pushl
push
push
pushl
call
sbb
sub
neg
or
or
adc
xor
cmpl
mov
movl
mov
jmp
mov
jle
push
push
call
or
movzbl
and
mov
sub
subl
orl
xor
jmp
pop
mov
xor
mov
test
adc
iret
movlps
xchg
xchg
lret
das
xchg
add
lret
dec
jb
fs
jo
jle
push
fcomps
and
in
mov
xor
iret
fsts
enter
sub
sub
das
mov
adc
xchg
xchg
cli
imul
iret
out
sub
cwtl
cld
and
mov
pop
xchg
sub
ljmp
imul
xor
xlat
push
inc
lods
or
xchg
and
push
push
jb
sbb
fmull
rcll
xor
fisttpll
loop
scas
jo
inc
sub
xchg
and
inc
add
jne
cltd
inc
outsb
aaa
fsubs
and
insb
decl
xchg
mov
and
fwait
and
pop
in
or
clc
aad
or
add
divb
or
inc
pop
subb
xor
js
rorb
xor
lret
cmpsl
imul
les
mov
rolb
mov
sbb
imul
daa
sbb
popf
xchg
push
mov
sub
imul
repnz
mov
cltd
jl
lret
cmp
mov
icebp
cmc
pop
inc
sbb
ds
mov
mov
out
mov
dec
aad
stc
daa
sbb
sbb
sub
fs
test
mov
dec
fimull
xchg
les
sub
imul
mov
xchg
lret
sti
sub
fbld
subb
std
enter
lret
sti
loop
adcb
mov
std
xchg
xor
pop
mov
dec
pop
mov
sbb
jo
cmp
enter
mov
shrd
popf
test
or
and
out
das
xchg
mov
mov
das
or
mov
cli
or
add
adc
push
xor
jne
sahf
scas
loope
leave
into
push
insl
cs
lock
shrl
push
insb
jecxz
sbb
divb
sbb
add
jae
dec
lock
cmpsl
mov
or
jbe
and
mov
mov
js
nop
lock
dec
lods
lods
cmp
negl
jb
popf
sub
cmc
loope
wrmsr
popa
scas
ja
mov
mov
aad
dec
jl
sti
adc
mov
mov
cld
push
inc
shl
shr
or
incl
mov
cmpl
movl
movl
mov
movl
jmp
mov
movzbl
jbe
push
call
movzbl
sbb
andl
xorl
and
subl
sbb
mov
adc
mov
inc
mov
mov
mov
mov
mov
shrd
cmpl
mov
movl
mov
not
jmp
mov
jb
push
push
push
push
call
mov
and
mov
add
and
add
xor
sbb
shr
mov
inc
mov
cmpl
movl
mov
movl
jmp
movl
jbe
pushl
pushl
call
andl
sbb
or
xor
xor
negl
mov
andl
xor
addl
xor
sbbl
or
xor
xor
add
mov
andl
push
addl
pushl
lea
push
subl
shl
call
xorl
lea
push
mov
mov
lea
xorl
push
addl
mov
lea
andl
mov
mov
andl
mov
push
adcl
call
sbbl
push
push
pushl
call
add
mov
mov
sbb
mov
addl
mov
mov
xor
add
sub
or
mov
or
shr
cmpl
mov
notl
not
jmp
movl
jg
pushl
push
call
sbb
inc
or
sub
add
sub
dec
neg
adc
shl
cmpl
notl
mov
movl
jmp
movl
jb
push
push
call
adc
adcl
xor
and
add
adcl
or
subl
mov
xor
xor
mov
dec
lea
cmpl
movl
mov
movzwl
jmp
movl
notl
jbe
push
pushl
call
adcl
and
add
movzbl
or
movzbl
xor
mov
mov
xor
lea
cmpl
mov
movl
jmp
movzwl
movl
jg
push
pushl
push
pushl
push
pushl
pushl
call
and
sub
sbbl
mov
sbb
mov
add
neg
mov
movzwl
and
mov
sub
lea
cmpl
mov
mov
mov
jmp
movl
jbe
push
push
push
pushl
call
xor
add
xor
andl
xor
add
or
movzbl
sub
sbb
xor
mov
sbb
movl
movl
movl
jmp
out
rclb
bound
cwtl
push
insb
push
dec
jp
or
adc
adc
add
mulb
or
cmpsb
in
enter
mov
rcll
insb
and
pushf
int3
jnp
pop
nop
xorb
and
or
push
xor
mov
jl
mov
jne
ret
data16
outsb
or
ficoml
fucom
jnp
inc
movsb
adcl
adc
in
push
mov
mov
inc
sbb
mov
mov
mov
js
pop
mov
daa
or
fildll
and
cmpsl
pusha
imul
iret
adc
xchg
repnz
fildll
mov
xor
pop
xchg
pop
xchg
jo
fsubp
push
mov
mov
nop
sbb
scas
ret
test
xor
clc
mov
test
jne
int3
or
loop
mov
push
mov
pop
push
cld
test
and
jle
add
pop
clc
pop
cmp
inc
loopne
mov
dec
push
and
ret
aas
push
orl
cmp
add
pop
fistl
mov
lahf
mov
faddp
lret
ljmp
mov
lret
inc
xor
fstp
mov
imul
pop
pmuludq
rcl
js
mov
jne
es
lahf
stos
mov
push
das
push
insb
push
pushf
cmp
sub
outsb
sbb
negb
es
imul
outsl
add
insl
xor
mov
test
sbb
push
fs
popf
xchg
imul
cmpl
mov
and
inc
clc
pushf
test
movl
in
and
cmp
sub
pop
jne
lea
scas
or
push
popa
sbb
shll
mov
sahf
pop
sub
outsb
lea
mov
xchg
jae
mov
je
fwait
jp
cmpsl
and
xor
in
add
push
pop
xchg
jo
push
push
adc
mov
inc
and
mov
mov
test
lcall
movsb
aas
cmp
xor
out
test
push
mov
mov
mov
pop
lahf
cld
aas
jno
lods
jge
dec
add
adc
sub
mov
jnp
mov
inc
xchg
dec
jae
movsl
and
scas
stos
mov
xchg
lock
mov
mov
inc
xor
mov
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
jmp
mov
adc
jg
mov
shl
idivl
in
push
unpckhps
iret
movlps
test
in
rcll
mov
push
jge
add
insl
mov
adc
mov
jg
call
insl
cmpsb
xor
adc
mov
test
insb
fwait
je
mov
aad
mov
lahf
cmp
pop
out
hlt
mov
jle
push
test
mov
mov
mov
push
push
and
pop
rorl
jge
loop
sub
rolb
stos
cwtl
xor
mov
jns
cmp
mov
or
lcall
add
in
not
sbb
and
shlb
into
xchg
je
sub
jns
inc
xor
mov
push
test
and
mov
mov
inc
xchg
xchg
pop
inc
cli
xor
adc
imul
push
mov
xlat
call
lock
inc
pop
in
in
test
out
mov
mov
dec
pop
outsb
daa
xor
cmp
pop
mov
or
xlat
jmp
lret
movsb
sub
pop
movsb
and
stos
push
pushf
int
in
add
mov
cmc
dec
pop
mov
push
adc
out
rol
inc
and
hlt
lods
lock
pop
arpl
cwtl
test
je
pop
movsb
xchg
jmp
cmp
add
dec
ljmp
das
cli
data16
lret
ficomps
jno
dec
lahf
mov
iret
dec
sub
sub
xchg
sbb
leave
sub
xlat
sub
out
std
push
out
xchg
mov
cmpl
sahf
jmp
dec
aad
orl
in
scas
xchg
js
xlat
xchg
sub
dec
cmp
ret
adc
inc
int
adc
test
cwtl
insl
mov
int
push
push
fdivs
mov
push
rcrl
or
arpl
sbb
dec
xchg
inc
mov
push
jne
dec
mov
cmp
pop
xor
add
cmp
rcl
push
or
sub
out
add
mov
insb
out
fdivp
incl
std
push
cwtl
xchg
movb
and
subb
mov
mov
sub
dec
adc
mov
hlt
subl
pop
sbb
sahf
out
andb
inc
xchg
test
mov
sbb
adc
mov
add
insb
ss
pop
or
movsb
lea
inc
sub
jbe
add
push
je
insl
loope
xchg
bound
pop
mov
lret
adc
pop
jne
add
test
mov
push
or
or
jmp
dec
pop
imul
enter
push
mov
iret
movlps
daa
fimuls
call
xchg
inc
push
fdivs
and
xchg
fldenv
shll
jl
lcall
stos
in
xlat
loopne
xor
add
enter
and
shrb
mov
fabs
adc
mov
ds
fmul
lret
hlt
cmp
imul
dec
stos
cs
push
mov
pop
pop
clc
sub
icebp
out
and
dec
or
add
jmp
stc
cmp
clc
fisubrl
imul
dec
push
icebp
pop
test
pusha
jae
popf
mov
add
stc
test
cmp
bound
negl
jbe
enter
jp
sbb
fsubs
and
cmc
imul
pop
and
adc
xchg
incl
scas
cld
push
mov
rorb
pop
enter
fnstenv
mov
stc
loop
sarl
leave
sbb
in
repz
adc
out
stc
inc
ss
ret
flds
dec
lcall
push
outsl
in
add
mov
cmpsb
push
ret
lret
lds
pop
out
jo
mov
inc
pop
and
movsb
test
dec
fwait
jo
xchg
jecxz
iret
mov
das
sahf
iret
nop
adc
outsb
ja
jmp
sub
gs
outsl
sub
pusha
test
cmpb
fucom
mov
jbe
cmc
out
xlat
ret
jo
adc
pop
jbe
test
mov
outsb
jo
test
adc
dec
ljmp
rcr
dec
sub
push
call
popa
repz
out
mov
lea
ja
je
adc
mov
cmp
inc
leave
cmp
jno
out
scas
out
xor
aam
jg
clc
fstpt
pop
mov
sbb
pop
mov
sbb
ret
sub
inc
sbb
xor
dec
lock
push
stos
and
mov
test
inc
out
cmc
repz
shrb
mov
sbbl
inc
pop
or
mov
adc
jmp
mov
jecxz
adc
inc
inc
lock
mov
fsubs
inc
mov
adc
jmp
lcall
dec
xor
xchg
sbb
inc
push
lahf
mov
lret
jno
xlat
lret
stc
lods
or
mov
dec
fxch
mov
lds
mov
rorb
scas
dec
decb
mov
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
jmp
jp
jg
aaa
lret
int
xor
aas
or
adc
sub
shll
sub
arpl
js
ret
sahf
pop
or
inc
push
jmp
mov
popf
inc
out
jnp
enter
in
mov
in
pop
aam
dec
repz
pop
mov
lods
or
cmp
add
cmp
add
xchg
es
lcall
or
cmpsb
repz
repz
out
cli
xchg
int3
cwtl
movb
adc
mov
mov
shl
daa
pop
xchg
and
mov
mov
aad
repz
in
fwait
iret
sbb
movsl
jns
adc
or
ds
sarb
or
in
daa
adc
sbb
repnz
int3
das
push
push
mov
inc
fs
pmulhuw
aaa
add
stos
and
mov
add
jno
mov
jp
xor
and
sbb
sbb
test
mov
roll
inc
lcallw
mov
clc
mov
mov
add
push
sbb
mov
mov
mov
mov
insl
jmp
jne
test
sub
aas
ret
addl
jmp
jnp
call
dec
enter
sbb
bound
shrb
push
sti
inc
lret
jns
and
jmp
daa
jne
and
pop
out
and
nop
test
dec
xor
sub
cltd
mov
stc
out
loope
cmc
stc
cmp
sub
dec
push
outsl
or
mov
add
nop
push
pop
lcall
call
addb
pop
xor
cmp
mov
imul
fs
hlt
mov
mov
stos
das
les
jmp
aaa
adc
mov
jge
popa
dec
cmpsl
leave
cmc
xor
lret
or
jo
sti
mov
dec
scas
mov
ret
dec
inc
insb
pop
or
push
pop
fdivrp
scas
push
inc
jns
adc
mov
mov
clc
movsb
inc
and
jae
and
test
iret
in
daa
or
mov
xor
ja
cli
jecxz
dec
xchg
mov
rcrl
fwait
pop
dec
outsl
div
mov
inc
push
jns
xchg
gs
mov
sub
fimuls
insl
fcompl
xor
scas
js
xchg
push
int
xor
mov
or
push
ss
in
jnp
lock
fisttpll
adc
jg
add
dec
and
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
jmp
aaa
jae
jnp
jns
das
jmp
in
adc
call
adc
andl
xchg
leave
adc
jne
pop
and
cmpsl
lret
mov
push
loopne
xorl
testb
inc
fsubs
aad
cli
hlt
inc
xchg
mov
mov
gs
dec
lods
sub
fisttps
outsb
mov
sub
sbb
outsb
mov
sahf
add
shrl
lock
imul
xchg
add
test
or
pop
mov
or
sbb
xorl
jbe
test
add
jmp
dec
leave
sub
orl
out
mov
imull
fistpl
jbe
add
cld
imul
add
leave
adc
push
fdiv
vdivss
jmp
icebp
adc
push
fcmovb
add
cs
sbb
pop
mov
mov
cli
xchg
mov
mov
imul
xor
loopne
cmp
ret
negl
lret
cwtl
sarl
adc
test
stc
jge
pop
sbb
jge
push
notl
das
rcl
lock
cmp
aaa
mov
loop
mov
dec
mov
clc
adc
pop
lret
addr16
popa
fldcw
cmpsl
mov
cmp
mov
mov
lret
lret
mov
push
aas
scas
mov
imul
sahf
adc
push
je
mov
cmp
mov
icebp
nop
in
and
mov
outsl
lret
sub
repz
outsl
add
xlat
sarb
sub
and
test
push
xor
pop
hlt
adc
pushf
inc
or
push
imull
repnz
push
cs
fcoml
dec
jns
into
or
mov
fwait
inc
inc
clc
mov
ds
sbbl
aaa
mov
leave
and
mov
int
stc
or
popa
int
test
xor
test
and
sub
jo
pushf
stc
cmpsl
imul
outsl
icebp
or
xchg
dec
adc
push
mov
movsw
push
xchg
pop
aad
push
sub
repz
pop
sti
inc
mov
loopne
add
jnp
lret
outsl
fldt
lods
mov
daa
mov
cld
sub
icebp
dec
push
and
sbb
mov
push
sti
mov
mov
or
adc
shl
adc
pop
insl
push
push
push
push
call
mov
mov
add
mov
adc
jmp
and
das
sbb
sbb
or
mov
movlps
js
cmp
dec
or
sub
mov
pop
xchg
mov
jnp
insb
and
insb
fsubrl
mov
jl
in
lods
stos
mov
dec
sub
nop
add
inc
mov
outsl
int3
pop
adc
test
sbb
mov
outsl
jb
testb
hlt
fisttpl
andb
mov
add
push
xchg
pop
jo
sbb
int3
aad
xchg
scas
xchg
push
div
dec
int3
pop
and
add
ffreep
loop
xlat
repnz
mov
mov
cmp
outsl
and
mov
aad
mov
stos
push
and
push
mov
jecxz
sbb
mov
jnp
sub
cmp
cmp
imul
adc
js
mov
adc
imull
xchg
pop
jae
jae
loopne
imul
push
or
outsb
sub
outsl
or
lret
ret
cmp
or
mov
cmc
jae
lock
enter
into
jecxz
subb
mov
mov
adc
jne
out
nop
mov
inc
out
aas
andl
icebp
sbb
inc
in
rorl
es
in
pop
adc
mov
and
push
bound
in
xchg
mov
add
dec
push
push
jne
lds
dec
push
jmp
pop
mov
lds
mov
jns
das
mov
in
sahf
test
inc
lcall
mov
addr16
jle
enter
sub
iret
mov
inc
jge
jge
cltd
and
and
add
lcall
pop
movb
or
testl
adc
testb
fadds
lods
pop
ret
movsl
mov
out
sbb
or
rcrl
xlat
repnz
adc
adc
gs
dec
jmp
sub
mov
sbb
out
mov
les
out
jle
mov
xchg
sub
and
push
ja
mov
cmpsb
scas
test
add
jno,pt
lcall
mov
loop
inc
jae
push
enter
mov
mov
adc
push
sub
repnz
xchg
lods
mov
push
xchg
push
fwait
lret
push
jns
xchg
or
jns
lock
mov
gs
cmp
cmp
add
fnstenv
add
or
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
jmp
pusha
into
out
sbb
and
or
cmp
stc
adc
adc
insb
and
sub
in
mov
fsubr
ret
call
in
xchg
in
out
scas
insl
std
mov
jg
repz
push
mov
xchg
or
sahf
inc
jmp
mov
int
jbe
sahf
loopne
ss
sbb
mov
repnz
pushl
and
cmp
js
mov
pop
xor
inc
add
xor
cmp
out
imul
mov
daa
leave
cwtl
les
mov
fstps
push
stos
mov
add
mov
pop
int3
pop
sbb
or
dec
jbe
test
push
jp
loopne
mov
ds
out
xchg
adcb
push
sub
push
and
cmp
add
gs
mov
cmp
nop
pop
sub
sbb
xchg
cmp
int3
popl
sub
bound
sub
xlat
inc
fildll
xchg
in
and
sbb
add
mov
push
pop
sarl
out
fidivrs
or
mov
int3
adc
mov
js
dec
cltd
gs
adc
pop
pop
pushf
pop
fwait
adcb
inc
adc
push
jb
scas
sbb
jp
jae
dec
imul
cmp
cmpsb
loopne
mov
pop
or
pop
fiaddl
cmpsb
mov
xor
adc
lods
out
lods
or
push
sbbl
mov
insb
mov
mov
or
in
fcmovne
hlt
sub
add
je
pop
lods
inc
movsl
dec
outsl
xchg
sbbl
andl
test
xor
hlt
sub
popf
mov
sbb
std
mov
mov
jns
repz
test
xchg
jge
push
cmp
clc
es
mov
cmp
cltd
mov
sub
adc
and
fdivs
idiv
sub
push
pop
adc
mov
xchg
mov
icebp
dec
fstpl
lods
jnp
iret
sahf
imulb
iret
test
mov
cmp
jmp
fwait
jmp
in
mov
inc
popl
mov
ret
sbb
xchg
int3
dec
push
inc
xchg
or
shl
cmpsl
adc
orb
out
fcoms
xchg
sub
in
mov
loopne
jbe
loop
and
adc
dec
inc
xchg
inc
mov
cmp
fdivrp
jmp
cmpsl
je
mov
inc
ja
push
add
and
jmp
inc
and
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
jmp
pop
and
fldenv
js
outsb
insb
test
adc
adc
pop
pop
rcrb
mov
std
shl
in
movsb
sbb
into
dec
idivb
outsb
rcll
pop
add
or
xor
cli
aas
mov
adc
sarb
ret
mov
cmp
adc
inc
mov
repnz
adc
lret
jp
inc
add
pop
and
jae
xchg
mov
push
loop
nop
cmp
pop
orb
push
inc
stos
dec
ret
mov
mov
popa
and
fisttpl
jnp
fwait
jno
push
stos
and
cmp
pop
fsub
test
mov
int3
lcall
in
cs
xor
movsl
mov
jne
pushw
xor
pop
and
xchg
loope
ss
or
adc
iret
inc
out
xchg
add
leave
mov
push
and
arpl
clc
sbb
les
aaa
jecxz
inc
and
or
adcb
jnp
cmpsb
push
add
mov
or
cmp
orl
mov
aaa
xor
pop
ss
dec
sub
add
add
push
mov
xchg
xor
lret
cmp
lds
mov
cmp
xchg
imul
xor
or
jecxz
jle
mov
push
jb
repz
xchg
mov
or
test
mov
sub
or
out
pop
xor
sbb
jno
sub
lods
cli
imul
in
or
scas
stc
xor
test
ljmp
cmp
xchg
sub
lds
adc
cmp
pop
pop
insb
movsl
pop
repz
or
adc
push
cmp
sahf
sbb
scas
push
add
and
ror
sub
in
inc
mov
lahf
add
arpl
fsubl
rorl
cmp
push
js
lock
repz
and
cli
pop
add
addr16
xor
clc
adc
nop
ret
xor
inc
ljmp
push
out
cmp
rol
jns
cli
in
and
sahf
in
xlat
addb
or
mov
jecxz
jp
mov
aaa
mov
adc
jnp
popf
inc
pop
aaa
dec
fcmove
loope
lods
aaa
sub
lods
push
rcll
add
xor
test
cmpsb
sbb
insb
les
ja
lods
dec
jl
xchg
in
jnp
xor
test
dec
jge
lock
mov
ljmp
inc
addr16
bound
add
inc
and
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
add
and
inc
and
jmp
adc
adc
pop
loop
es
dec
stc
lss
and
xor
stos
outsl
lods
sarl
roll
out
xchg
aas
inc
mov
lds
push
cwtl
and
movsb
out
or
gs
xchg
lret
pop
movsl
mov
imul
pop
sar
or
cmp
in
out
movsb
lds
add
jb
shlb
movsb
out
sahf
cs
call
or
pop
dec
rol
mov
out
clc
cltd
sub
cwtl
pop
xchg
push
sub
push
test
out
adcl
cli
out
push
daa
sub
push
scas
xor
pushf
bound
jo
data16
inc
jp
add
xchg
fmulp
enter
call
pop
js
sbb
xchg
addr16
mov
mov
jle
aad
rcr
out
iret
outsl
pop
test
popa
mov
xchg
outsl
push
repz
cmp
movsb
cmc
cs
pop
pop
cld
add
mov
xor
sub
mov
mov
dec
decl
sbb
dec
xchg
in
sbb
stos
mov
out
or
push
fmuls
cld
dec
popf
rcr
movsl
xchg
mov
push
push
xor
mov
sub
rol
icebp
lret
dec
nop
push
dec
lods
or
xchg
rolb
dec
pushf
sub
in
sub
setp
sbb
xor
adcl
lret
add
sbb
in
xor
push
sbb
dec
pop
sbb
call
lods
pop
dec
outsb
inc
loope
jmp
divb
movsb
pop
push
add
jno
inc
mov
or
xchg
xchg
cld
in
pop
std
into
popl
addr16
dec
cmp
stos
es
cmpsb
inc
lods
mov
repnz
jecxz
lock
dec
cmp
xor
sub
icebp
out
mov
jo
cmp
pop
add
imul
pop
cmp
mov
or
in
mov
roll
scas
stc
inc
pop
movsb
xor
add
cmp
mov
adc
pmuludq
mov
sub
mov
lret
pop
inc
rorl
test
and
pusha
jbe
lods
add
enter
imul
xchg
int3
into
lods
popa
dec
sub
push
jo
inc
pop
ret
push
push
rcrb
add
cmp
sti
addr16
push
and
idiv
push
bound
cwtl
stos
in
pushf
lods
add
jmp
jp
lahf
fnsave
and
adc
inc
and
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
jmp
les
mov
mov
cmpsl
ljmp
and
mov
sub
push
in
cmp
mov
shlb
aaa
pop
in
or
fimuls
push
and
fwait
mov
pop
cs
dec
dec
cmp
dec
gs
mov
mov
roll
adc
je
dec
repz
dec
loopne
out
push
imul
fcmovnu
cmpsb
bnd
rorb
mov
roll
mov
inc
jne
xor
clc
out
pop
mov
pop
cmp
aad
mov
incl
pop
lock
fsubrl
and
push
int
cmp
imul
xor
and
mov
mov
out
jmp
push
mov
lret
mov
xchg
xchg
push
ja
jb
insb
dec
jle
loop
lahf
sbb
sbb
out
xor
inc
pop
inc
movsb
or
test
clc
inc
int3
ds
xchg
movl
sub
or
xchg
mov
jne
push
mov
outsb
sub
fwait
popf
call
leave
popa
lock
cwtl
jae
fs
shll
pop
jns
xor
xor
orl
stos
clc
jns
aas
sbb
enter
or
outsb
in
subl
lods
imul
pusha
fadds
inc
sti
jmp
stos
mov
ljmp
lods
jge
insb
loopne
stos
cmp
push
xchg
ja
sub
in
bnd
ret
pushf
mov
mov
ficoml
push
inc
lods
mov
in
jae
or
mov
pop
mov
jmp
inc
adc
aas
inc
stc
mov
push
outsb
cmp
popa
xor
inc
fistps
inc
test
in
adc
sub
push
ret
je
cmp
inc
sub
mov
lock
sbb
cmp
andb
sub
sbb
insb
idivb
adc
cs
inc
cmc
jno
sbb
addr16
mov
fdivrs
mov
scas
xchg
test
movsl
fsub
dec
jns
jl
ret
dec
dec
repz
in
ret
pop
sbb
xchg
loope
mov
xchg
popf
xor
cmp
scas
stos
jg
test
out
pusha
mov
xchg
xor
sbb
push
aad
test
pop
mov
stc
out
in
and
pop
andl
adc
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
jmp
je
adc
cmp
mov
fs
adc
movlps
out
mov
insb
mov
dec
dec
xor
fwait
insb
fsts
push
jge
and
mov
adc
mov
and
aaa
xor
xchg
jb
fdivs
rcrl
pop
xchg
in
inc
pop
aaa
test
xchg
enter
push
mov
loop
lret
jne
xor
xor
dec
hlt
shl
std
mov
aas
fs
int
lahf
cmpl
test
into
cld
inc
adc
movups
cs
dec
enter
mov
shlb
ss
inc
sub
mov
insl
loope
js
add
adc
cmc
sarb
shll
outsb
into
sarl
fwait
mov
or
cld
push
pop
and
mov
sub
adc
jecxz
mov
ficompl
push
push
jmp
insb
xor
mov
jg
fisttps
das
pop
adcl
ljmp
nop
outsl
jmp
jbe
shll
push
jg
dec
and
cli
sarb
insb
mov
das
inc
mov
outsb
push
imul
and
xchg
aas
gs
ret
and
inc
jecxz
or
sub
jl
xchg
in
and
mov
mov
adc
jl
aam
pop
dec
cmp
ljmp
roll
xor
icebp
sbb
insb
inc
scas
ljmp
popa
shll
adc
es
rcrl
lcall
xchg
test
test
fcompl
movsb
or
xchg
sbb
pop
adc
cmovnp
add
rcl
rolb
imul
mov
iret
xchg
push
test
xor
xchg
jle
cmp
sbb
or
xor
aam
int3
jo
xchg
psubsw
dec
pop
aas
jl
loop
jecxz
rcll
mov
icebp
testb
jbe
pop
inc
mov
push
xor
xchg
les
mov
jno
in
xlat
mov
pop
push
dec
mulb
popa
mov
add
inc
pop
std
push
aam
push
aam
lcall
ja
adc
mov
adc
lret
nop
sub
cmp
sbb
lock
cmpsb
push
stc
sbb
int3
outsl
popf
ja
push
imull
dec
mov
and
add
xchg
jb
jo
iret
dec
into
push
mov
dec
insl
loope
in
pop
sbb
mov
jno
dec
daa
testb
dec
sbb
movsl
jle
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jmp
in
xchg
xchg
or
or
mov
push
es
fcoml
adc
inc
cmc
pop
outsl
cmpb
leave
push
in
add
aaa
fisubl
mov
in
adc
mov
adcl
inc
jb
dec
or
sub
inc
dec
xchg
cli
dec
addr16
lcall
inc
mov
in
subb
mov
cmp
mov
lahf
sub
bnd
pushf
sbb
cwtl
xchg
ret
mov
pop
push
cmpsb
mov
icebp
nop
sbb
xor
cmpsl
sub
xlat
inc
ja
testb
mov
jns
setp
stc
mov
lret
loopne
push
stos
xor
loope
pop
fwait
mov
test
mov
dec
sub
aaa
lods
movb
add
lods
bound
push
stos
xchg
orb
jge
dec
add
icebp
dec
fidivrs
addb
jge
xchg
gs
aaa
je
mov
pop
scas
xchg
or
rcl
sbb
jg
add
xchg
adc
repnz
sub
adcl
add
jmp
leave
sub
add
int
adc
mov
sub
jge
inc
les
ret
and
pusha
imul
cmp
xchg
add
xchg
stos
and
lret
add
mov
outsl
add
fsubrl
mov
dec
xchg
pop
cmp
insl
fisttpll
or
xlat
fnstcw
lret
test
popf
pushf
cmc
stc
sbb
sbb
scas
mov
in
and
cld
jns
xchg
xchg
rcrl
jns
push
cmpsb
sbb
out
add
adc
popa
mov
jg
loopne
imul
sub
pop
mov
xor
mov
jmp
xchg
stc
cmp
mov
sub
adc
sub
imul
test
cmpsl
cmp
pop
mov
xchg
or
jp
jo
sbb
scas
add
call
mov
lock
dec
leave
xor
cltd
or
dec
xor
imulb
mov
and
or
out
sbb
cmp
push
pop
lock
repnz
adc
test
cltd
movsl
mov
ficomps
adc
pop
lret
mov
ret
xor
jmp
fldl
xchg
nop
cmc
popa
scas
dec
xchg
in
mov
mov
mov
inc
out
mov
sbb
pop
ljmp
addr16
adc
sub
pushf
push
xorb
fldlg2
adc
xor
enter
test
add
mov
mov
mov
mov
xor
xor
shl
shr
or
xor
xor
jmp
pop
sbb
sbb
and
lret
xor
js
scas
mov
adc
movlps
subb
mov
cmc
xchg
cmp
insb
dec
fcomps
sarb
pop
push
sub
fwait
roll
leave
dec
outsl
add
mov
mov
in
pusha
xchg
aam
mov
scas
aaa
fmul
hlt
je
popa
and
dec
loopne
test
add
dec
mov
lock
push
gs
lahf
push
flds
mov
jmp
jmp
cmp
enter
std
ds
push
outsl
dec
xor
int3
aam
jo
push
idivb
jecxz
adc
cmp
stos
shlb
sub
call
repnz
mov
in
sbb
xchg
jmp
aas
mov
stos
dec
js
jo
push
sbbb
sub
aam
mov
push
dec
ja
dec
icebp
mov
sbb
sub
add
xchg
out
call
jmp
adc
adc
cmp
pop
jnp
mov
or
ljmp
cmp
sbb
dec
repnz
adc
jmp
pop
mov
cmp
test
addr16
push
jo
aad
orb
shlb
inc
repz
or
addr16
leave
xchg
lret
ret
lret
add
push
mov
das
aam
or
fldt
xor
fidivl
xor
adc
lods
pop
mov
out
adc
mov
nop
push
fistps
push
movsb
insb
test
mov
add
cltd
sbb
in
shlb
std
push
jbe
adc
jmp
inc
or
lds
int3
aaa
or
or
jl
dec
mov
cmp
fisttpll
jge
ljmp
aas
cmp
mov
mov
inc
popa
imul
mov
mov
sbb
xor
dec
in
push
sbb
lahf
sub
jne
sub
pushf
jbe
data16
or
sti
mov
dec
xchg
mov
sbb
push
cs
cmp
stc
or
add
cs
movl
inc
or
test
loope
scas
and
cwtl
adc
pop
int3
outsb
dec
lret
ret
mov
mov
jo
rcrb
dec
test
addr16
sbb
mov
mov
arpl
data16
sbb
adc
push
fucomp
mov
popf
and
sub
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
movl
push
cmpl
mov
movl
not
jmp
mov
je
push
pushl
push
push
call
sbb
sub
adc
add
sub
add
cmpl
mov
mov
not
movl
jmp
movzbl
movl
jg
push
call
andl
xor
xor
andl
mov
mov
sbb
dec
push
movl
sub
movl
xor
movl
dec
mov
xor
add
xor
mov
xor
xorl
div
cmpl
movl
mov
movl
jmp
movl
movl
jl
pushl
call
orl
or
not
sbb
imul
mov
xor
mov
add
mov
and
mov
xor
adcl
jmp
adc
sbb
xchg
pop
pop
cmp
js
rclb
adc
dec
negb
jno
jne
jge
leave
mov
mov
and
cmpl
dec
xor
or
daa
mov
ret
xchg
clc
sub
xchg
insb
mov
ficomps
and
push
cmpsl
hlt
daa
lds
es
mov
mov
adc
pusha
push
adc
nop
test
mov
cmp
push
cmp
cs
pop
jg
sub
mov
test
sbb
xor
loop
testb
push
addl
popa
stc
repz
ss
push
adc
push
out
mov
in
xor
sarb
daa
add
outsb
mov
push
shll
in
leave
add
dec
mov
das
fsubl
cmp
fsubr
out
sub
rorl
inc
xlat
push
mov
popa
scas
fiadds
outsl
jp
and
fdivl
mov
ret
push
sbb
stc
std
shll
push
mov
shrb
mov
cli
pusha
aaa
daa
fildl
add
adc
mov
scas
mov
sets
leave
push
cmpsb
popa
or
mov
push
jl
pusha
sub
fbstp
fstpt
in
mov
jne
pushf
push
adc
push
push
sbb
aad
xchg
loop
cmp
out
sbb
fwait
adc
mov
clc
cmp
jg
fisttpl
mov
adc
jge
inc
pusha
les
push
subl
xchg
mov
sbbl
mov
dec
shr
stc
push
xchg
and
imul
fbstp
cmp
in
dec
mov
xchg
into
pop
mov
repz
mov
inc
lret
fsubrs
or
xchg
sahf
nop
push
shr
movsl
xor
inc
leave
scas
ss
add
jb
sbb
leave
mov
roll
dec
xchg
mov
adc
xlat
push
xchg
movsl
mov
and
ret
out
xchg
cltd
popf
out
pop
cmp
dec
imul
inc
or
lcall
pop
sbb
daa
pop
or
movsb
mov
mov
popf
aaa
jl
aaa
or
popa
insl
mov
adc
in
out
adc
aad
mov
ret
popa
xchg
lods
push
push
xchg
movsl
mov
into
dec
add
add
and
sub
stos
dec
add
jbe
mov
mov
push
mov
jnp
mov
cld
or
decb
sub
cld
cld
outsb
xchg
lret
jae
xor
movsl
mov
fdivp
movsb
and
lock
push
xchg
pop
and
mov
mov
and
inc
lahf
fs
divb
mov
jb
jle
psubusw
aas
cmp
incb
cmp
sbb
jmp
arpl
inc
loop
mov
lods
and
adc
pop
sbb
cmovnp
cmpsl
test
or
inc
ret
stc
jmp
sub
dec
dec
pop
in
stc
fidivrs
mov
and
inc
push
push
cmpsb
dec
add
js
lret
sub
push
mov
movsb
push
mov
sbbl
push
pop
xchg
add
in
or
adc
cmpsb
data16
or
cmp
lods
pop
imul
clc
xchg
sti
sub
push
aad
cmc
fwait
js
div
sub
adc
mov
movl
sub
movl
add
movl
mov
adc
mov
add
mov
or
xor
xor
imul
mov
and
sub
xor
mov
mov
mov
sub
sub
movl
movl
sub
movl
movzwl
or
movl
mov
sbb
imul
mov
cmpl
mov
movl
jmp
movl
movl
jl
push
push
call
sbb
addl
xor
xor
xor
add
mov
dec
adc
sub
imul
imul
mov
adcl
and
or
not
mov
xor
mov
adcl
mov
sbbl
lea
mov
sub
movl
and
movl
and
movl
cmpl
movzwl
mov
movl
jmp
mov
mov
jne
pushl
pushl
push
call
sbbl
and
sbbl
subl
sub
mov
xor
mov
or
add
jmp
adc
mov
and
xchg
js
mov
das
into
adc
adc
sub
adc
test
cmp
adc
dec
cld
imulb
add
out
pop
mov
test
lahf
adc
sarb
andl
cmpsl
fnstenv
pop
xor
in
insb
call
shll
addl
push
xtest
rolb
xchg
adc
hlt
or
sbb
jmp
pop
les
mov
cmp
mov
fisubl
xor
test
jo
lret
xor
shll
jp
push
dec
push
sti
jge
cmp
push
pop
lea
test
bound
pop
pop
jne
sbb
xchg
xchg
inc
sbb
dec
cmp
push
outsb
outsl
sti
mov
sbb
xchg
jo
clc
sbb
in
pop
pop
popf
mov
iret
mov
lds
mov
ds
or
push
adc
in
into
das
sub
add
mov
sub
push
dec
movsb
cmpsl
mov
imul
sti
pop
sub
and
aas
stc
fucomi
jge
xchg
cmp
dec
cmp
xchg
or
sbb
int
jle
repz
and
lea
ret
inc
cli
mov
imul
pushf
stos
ret
lcall
leave
or
insl
fwait
pop
lcall
clc
jbe
and
pop
int3
mov
mov
inc
aad
sub
pop
scas
movsl
movsl
fstl
out
test
mov
push
das
fs
nop
add
inc
mov
out
inc
xchg
pop
pop
aam
inc
dec
ror
xor
scas
loope
lcall
loopne
add
loope
and
in
mov
cs
and
inc
jle
or
int
ret
jb
lds
xlat
xorl
data16
cwtl
adc
jmp
sti
xor
mov
ret
mov
lret
loop
test
sbb
and
test
inc
popa
mov
xor
in
jmp
call
dec
dec
aaa
inc
fisubl
in
jecxz
inc
mov
dec
stc
mov
decb
in
xlat
je
cmp
es
loope
and
out
icebp
insl
je
sbb
push
mov
sub
lds
and
xchg
mov
push
and
jb
adc
jb
pusha
xchg
cmp
dec
sub
lea
xor
ret
aaa
mov
into
mov
mov
int
inc
xor
adc
test
pop
jbe
mov
lret
xor
mov
xchg
fs
shl
fdivrl
cmp
push
repnz
add
test
scas
sbb
or
das
fwait
dec
sub
loope
jle
out
lock
xchg
dec
push
add
cmp
out
lss
adc
xchg
fimull
adc
inc
sbb
lods
mov
mov
and
pop
push
pop
cmpsb
aaa
xchg
adc
scas
rcrb
cmpsb
push
push
push
mov
cmp
push
mov
add
call
cmp
adc
lret
sub
loope
add
aam
push
dec
lds
scas
stos
outsb
icebp
add
cmp
lods
lret
jnp
movsl
push
les
or
pusha
imul
test
ds
shll
sar
les
jmp
sbb
cmp
test
decl
roll
add
adc
xor
cmpl
not
mov
not
movl
jmp
movl
movl
jae
push
push
call
or
or
adc
notl
adc
xor
mov
or
movl
movl
movl
cmpl
mov
movzbl
movl
movl
jmp
mov
jg
pushl
push
push
pushl
push
push
push
call
adc
xor
mov
and
mov
dec
sub
and
mov
sub
add
xorl
mov
sbbl
sub
cmpl
movl
mov
mov
jmp
movl
jne
pushl
call
xor
or
add
mov
xor
mov
mov
sbb
and
xorl
mov
xorl
lea
mov
xor
mov
or
cmpl
movl
mov
mov
jmp
mov
je
push
pushl
call
and
andl
adc
mov
or
not
sbb
sub
mov
cmpl
mov
mov
mov
mov
jmp
movl
mov
jae
push
pushl
call
mov
adc
mov
xor
movl
movzwl
xor
and
orl
movl
and
movl
cmpl
mov
mov
jmp
movl
jb
push
push
push
call
adc
adc
add
or
mov
add
mov
or
adc
mov
add
add
movl
imul
mov
imul
or
xor
mov
div
or
sub
mov
cmpl
movzbl
not
jmp
mov
jb
pushl
pushl
push
call
xor
or
and
mov
inc
sbb
add
xor
add
mov
and
xor
mov
mov
and
movl
add
movl
movzbl
or
movl
movzbl
or
mov
add
mov
subl
xor
xorl
div
or
imul
add
cmpl
mov
mov
movl
jmp
movl
mov
jbe
push
push
pushl
push
pushl
call
sbb
addl
add
add
adcl
adcl
add
mov
xor
cmpl
mov
mov
movl
mov
jmp
mov
movl
je
pushl
pushl
call
movzwl
xor
movl
xorl
andl
movl
add
sbbl
xor
jmp
xchg
fldenv
push
pop
xchg
pop
outsb
bound
mov
mov
adc
leave
xchg
and
shrl
adc
sti
or
lcall
cwtl
cmp
outsb
mov
outsl
push
push
xchg
xchg
and
in
sbb
cmp
shufps
nop
into
sub
pop
sub
dec
aad
lcall
and
jge
cmpl
cs
into
and
andl
jns
lahf
pop
jge
test
push
add
adc
stos
jbe
jns
jmp
xchg
inc
sbb
vmread
xlat
aam
sahf
loopne
mov
or
stos
nop
sbb
fcomps
aam
sbb
push
sbb
call
jl
iret
scas
mov
cs
push
inc
add
mov
push
cmpsl
cltd
lock
fiaddl
inc
sbb
adc
stc
repnz
xor
insb
inc
das
pop
lcall
mov
jae
pop
cmpsb
popa
je
and
arpl
fs
add
jmp
test
pusha
push
jle
adc
or
mov
jns
mov
xorl
xchg
jge
mov
fucomip
cmp
and
pop
cmc
xchg
add
jmp
jge
pop
daa
aam
add
mov
inc
jge
adc
lret
aas
xor
imul
jge
rcrl
ds
or
push
inc
cmp
dec
nop
fs
cmp
ret
cmp
mov
mov
pop
lods
daa
jge
movsb
push
xchg
arpl
outsl
add
or
shl
push
dec
dec
push
push
movsl
decb
movsb
loope
out
pushf
repz
adc
adc
sub
mov
sbb
aas
jno
xchg
lock
jae
cmp
cmp
cvttps2pi
push
arpl
iret
into
enter
cmc
es
test
rcl
jg
fs
jmp
pop
push
mov
aad
inc
hlt
div
pushl
fmuls
xchg
sti
mov
shl
cmp
aad
xor
mov
insl
dec
mov
fwait
push
add
jmp
xor
mov
les
sahf
pushf
inc
pop
pop
or
hlt
imul
popa
mov
aas
sub
lds
or
rorb
jp
lock
fcoml
xchg
xor
pop
into
arpl
pop
stos
inc
pusha
xchg
pop
xchg
jnp
mov
xchg
dec
popa
lods
in
ja
and
mov
roll
out
xor
or
divl
iret
sub
cmc
repz
cltd
mov
inc
sub
imul
imul
sar
mov
movsl
ret
cmp
test
xchg
push
xchg
call
sub
inc
aas
push
rcr
lret
cmp
out
mov
stc
mov
vshufps
jnp
lods
push
enter
pushf
mov
push
notl
jns
inc
and
aas
mov
push
ret
ljmp
in
inc
fistpl
hlt
sbb
lock
pop
lock
daa
dec
testl
and
push
in
push
lret
xorb
pop
mov
aas
mov
dec
int
stos
out
mov
std
dec
addr16
repnz
mov
imul
add
div
into
loopne
ljmp
dec
pop
mov
div
subl
xor
mov
adc
movl
movl
movl
mov
and
mov
addl
sub
dec
shr
sub
mov
imul
cmpl
movl
mov
mov
jmp
mov
jne
push
call
orl
adcl
movl
xorl
adcl
addl
mov
addl
and
cmpl
movl
movl
jmp
movl
jl
push
pushl
push
push
push
push
pushl
pushl
push
push
pushl
call
xorl
sbb
andl
sub
andl
orl
xor
or
adc
mov
andl
sub
mov
movl
cmpl
mov
mov
movl
not
jmp
mov
jbe
push
call
dec
xor
orl
add
mov
mov
sub
adc
adcl
movl
mov
cmpl
mov
movl
movl
jmp
movl
mov
jae
push
push
pushl
push
call
subl
mov
adc
mov
movzwl
or
negl
and
adc
and
jmp
insb
cmp
push
daa
aaa
mov
fbld
push
mov
adc
ret
pop
dec
pop
xchg
mov
or
enter
sbb
pushl
sarl
loopne
pop
inc
xchg
stos
xchg
sbb
mov
or
mov
lds
mov
inc
mov
bound
ja
bnd
xor
xor
jb
jbe
jle
cmp
rcrl
xor
mov
pop
sub
shrl
mov
or
push
lret
xchg
movsb
cmpsb
lcall
fs
push
ss
sub
rolb
pop
pop
cmp
jae
mov
mov
fucom
cmc
icebp
dec
jbe
lahf
das
mov
mov
das
jmp
add
push
outsl
movsb
bound
mov
jl
fsubrl
xchg
inc
jmp
jnp
pop
gs
mov
push
test
sub
push
adc
push
mov
inc
je
aam
xor
sarl
add
xor
std
pop
stos
sub
pop
jbe
pop
adc
fcmovu
js
xchg
fimull
sub
imul
es
cmpsb
pop
fdivrs
mov
int
push
cmp
sahf
jns
lods
mov
add
cmp
mov
pushf
out
pop
mov
cmp
daa
and
jp
dec
push
arpl
test
popa
pop
xchg
rclb
dec
std
inc
out
and
mov
pop
xchg
jmp
inc
xchg
inc
xlat
inc
adc
lods
popa
cmc
in
pop
aad
loopne
inc
xor
xchg
dec
mov
in
jl
push
mov
bnd
lcall
mov
xor
cmp
test
es
pushf
adc
jb
push
pop
cmc
cmp
cmc
push
push
or
lea
pusha
aad
and
adc
and
mov
xor
test
xchg
mov
add
jmp
sub
inc
in
fdivrs
pop
enter
cmpsl
imul
cmp
and
aas
mov
jmp
fisttps
out
inc
in
mov
push
sbb
mov
sub
mov
add
test
dec
test
fistpll
movsb
adc
mov
repz
lret
and
in
mov
clc
add
sub
ljmp
aam
jb
outsl
cmp
cmp
icebp
jne
pushf
push
xchg
mov
movsl
or
inc
push
xchg
cmp
dec
xchg
test
jne
cmpl
mov
arpl
xchg
xchg
pop
inc
mov
mov
pop
xor
fdivrp
sub
std
imul
ret
xlat
idivl
fldt
or
adc
mov
add
int3
dec
test
ficomps
loop
les
mov
lock
xor
push
daa
mov
pushf
inc
repz
out
lcall
outsb
lahf
cli
dec
insl
testb
fs
stos
inc
repnz
stos
push
call
cmc
xchg
fmull
inc
mov
in
jno
mov
repz
adc
jp
push
inc
dec
aam
mov
fwait
cmp
rcrl
mov
or
xchg
cmp
xchg
data16
mov
dec
push
cmpsb
adc
popa
add
cs
mov
lret
pop
fists
or
mov
mov
add
jmp
jecxz
ret
stos
or
dec
add
inc
mov
or
xor
sub
mov
cmpl
notl
mov
jmp
movl
mov
jne
push
pushl
push
push
call
movzbl
adc
mov
xor
mov
and
subl
adc
add
movl
or
jmp
xchg
pop
dec
or
cltd
push
pop
jecxz
mov
mov
adc
sbb
loopne
sub
mov
add
or
cmp
rclb
mov
push
push
jo
mov
mov
xor
das
inc
sarb
mov
data16
das
pextrw
adc
sbbl
sbb
cmc
lock
sbb
ror
aaa
inc
pusha
mov
mov
lret
jb
enter
jb
and
mov
xchg
mov
lds
inc
xorl
mov
cmp
xchg
or
in
lds
imul
pop
lret
fstps
cs
cmp
and
jns
xor
adc
imul
out
pop
lcall
xor
jecxz
mov
loop
mov
test
mov
jae
ror
shrb
aam
lret
enter
fisubs
and
push
dec
add
xchg
mov
inc
shrl
ss
jno
gs
mov
ss
push
ror
out
jo
pop
push
xchg
pop
rcll
jb
hlt
and
enter
xchg
mov
push
icebp
testl
sub
das
xchg
addl
mov
mov
xchg
inc
cmc
paddusw
jp
push
imull
xchg
in
add
lock
inc
xchg
or
imul
and
adc
loope
out
mov
in
popf
jae
stos
xlat
jp
jae
or
jae
in
lock
dec
leave
pusha
sbb
rcrb
ret
pop
das
rcrb
jns
js
push
sub
mov
adc
push
dec
pusha
inc
mov
repnz
xlat
jb
or
sbb
inc
fs
call
and
mov
push
push
dec
jbe
dec
cmp
call
cmp
jns
mov
es
lret
icebp
ss
cmpsl
pop
fsts
in
negl
xchg
bndldx
cltd
cmp
loope
and
mov
push
inc
in
push
add
inc
adc
lods
pop
lret
lds
cmpl
leave
out
xor
inc
test
shrb
cmp
push
sub
xor
ljmp
push
adc
movsb
jb
repnz
ja
push
sbb
repnz
adc
subb
push
addr16
imul
repz
jmp
mov
jle
xchg
jle
xlat
mov
out
jg
jns
sti
jnp
lahf
jmp
jmp
fiaddl
add
lea
add
aad
inc
fildll
in
fsubs
ret
sub
jmp
xor
add
mov
push
shlb
mov
scas
sahf
jecxz
adc
jnp
jg
mov
frstor
mov
jl
imul
push
leave
mov
xor
inc
movsl
popa
cli
loope
test
cs
pop
les
ljmp
and
std
ljmp
push
call
jg
add
jne
les
sub
adc
sbb
jno
les
pop
fsubl
aaa
and
cltd
mov
xchg
in
sub
adc
je
push
fdivp
in
inc
call
out
sarb
jbe
or
movl
subl
movl
sbbl
movl
mov
mov
sub
xor
movl
or
movl
movl
cmpl
mov
movl
mov
movzbl
jmp
mov
jb
push
call
sub
adc
and
add
movzwl
and
mov
mov
add
mov
sub
cmpl
movl
mov
jmp
mov
jne
push
pushl
call
sbb
mov
add
and
or
and
andl
mov
mov
add
mov
imul
cmpl
mov
mov
mov
mov
jmp
movl
movl
jbe
push
push
push
push
pushl
call
sub
dec
mov
sub
or
adc
orl
add
imul
mov
or
dec
mov
lea
adcl
push
call
add
mov
add
mov
imul
add
and
mov
mov
xor
sub
add
xor
mov
andl
div
cmpl
notl
movl
movl
jmp
movl
movl
ja
push
push
pushl
pushl
call
xor
xor
and
mov
or
sub
mov
or
mov
inc
xor
xor
add
and
mov
movl
mov
and
mov
movl
and
movl
addl
movl
cmpl
mov
mov
mov
jmp
mov
jg
pushl
call
mov
adc
sbb
mov
adc
or
movl
xor
movl
andl
movl
orl
movl
xorl
movl
sub
movl
movl
movl
sbb
movl
mov
mov
mov
cmpl
mov
mov
jmp
movl
ja
pushl
push
push
call
or
sbb
adc
movl
cmpl
mov
movl
mov
jmp
mov
ja
push
push
pushl
call
and
and
incl
mov
and
not
and
mov
adc
mov
cmpl
notl
mov
movl
jmp
movl
jbe
push
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
and
xor
sub
sub
cmpl
mov
movzbl
mov
jmp
movl
jg
push
pushl
push
call
add
mov
xor
add
sub
or
xor
add
mov
sub
or
notl
sub
adc
xor
imul
mov
sbb
lea
mov
xorl
mov
neg
mov
mov
movl
xor
adc
add
or
mov
xor
lea
and
xor
add
sbb
mov
mov
cmpl
movl
mov
jmp
movl
movl
je
push
push
push
call
subl
sub
adc
sub
or
sbb
sub
movl
add
mov
cmpl
movl
mov
mov
not
jmp
mov
jb
push
call
xorl
sbb
add
add
xor
add
movl
sub
movl
adc
movl
movl
cmpl
movl
movl
jmp
movl
not
jle
pushl
call
andl
sub
xor
mov
adc
or
and
mov
cmpl
not
movzwl
mov
jmp
movl
jl
pushl
pushl
call
add
neg
or
adc
adcl
sub
mov
and
mov
xor
xor
adcl
mov
adcl
call
cmpl
mov
mov
movl
jmp
movl
movl
ja
push
call
adcl
xor
xor
or
and
or
mov
mov
mov
mov
xor
xor
mov
call
or
or
jmp
sbb
adc
cli
sbb
add
nop
js
lods
adc
adc
scas
sub
xchg
fidivrl
pop
imull
gs
ja
int
mov
and
fstl
shl
sub
clc
push
icebp
push
cltd
lods
movsb
inc
mov
int
add
mov
jne
adc
imul
mov
push
push
fwait
adc
cmp
push
arpl
and
es
test
jo
outsb
aas
pop
add
add
pop
movsb
inc
add
sub
mov
adc
adc
pop
mov
push
int
or
xor
mov
add
icebp
out
pop
xchg
sarl
xor
test
dec
out
jl
and
ja
repnz
jbe,pt
addl
shll
cmp
adc
data16
mov
fyl2x
xorb
xchg
mov
stos
loope
jns
stc
popa
hlt
ss
lahf
and
and
xor
jp
call
and
inc
cmpsb
shrl
arpl
call
ficomps
fdivs
leave
rolb
cwtl
jo
adc
jg
push
push
mov
fwait
pop
adc
daa
sub
pusha
push
inc
push
leave
mov
int3
call
add
into
pop
clc
xchg
je
insb
xchg
jmp
jns
push
push
and
inc
xor
insb
inc
xor
push
xchg
and
or
pop
jle
xchg
sahf
jb
test
xchg
xchg
shl
mov
push
out
mov
and
mov
lret
fldenv
cmp
cmc
inc
mov
xchg
sub
or
cwtl
mov
jnp
dec
mov
dec
stos
hlt
and
jno
bound
adc
in
mulb
mov
lea
subb
test
inc
mov
xor
xchg
xchg
test
pop
lods
mov
mov
in
pop
loop
mov
imul
repnz
mov
fdivrl
notb
jle
xchg
lcall
mov
int
mov
cwtl
int3
int3
shll
andb
nop
push
sbb
mov
idivl
call
push
scas
cmp
lea
jb
cmp
jle
js
cmp
or
mov
gs
movsb
mov
pop
mov
test
or
sbb
pop
ret
call
lods
lcall
and
mov
jle
mov
mov
iret
insl
mov
jmp
sub
les
or
adc
push
sbb
lea
add
inc
sti
cmp
pop
pop
rcrb
shll
inc
cmp
jp
orl
loop
lods
fistps
jmp
leave
mov
cmpsl
test
jl
jp
and
cld
push
in
jmp
xor
jecxz
xor
ljmp
xchg
cltd
insl
push
clc
movsl
hlt
nop
aad
sub
pop
ljmp
sahf
sub
mov
mov
ja
and
sbb
mov
mov
push
les
pop
pop
or
inc
cmpsb
mov
lods
xchg
in
sub
xor
or
ret
fdiv
jp
mov
xor
daa
decb
icebp
cmpsl
out
xchg
mov
jo
sub
xor
mov
cmp
add
test
test
pushl
xor
jmp
or
mov
mov
mov
inc
gs
lods
sub
adc
and
jge
push
add
or
push
or
mov
loopne
cmp
xor
mov
lcall
or
add
xor
rcrb
adc
cmp
lock
add
fsts
nop
mov
push
mov
sub
or
out
repz
loope
movsb
cmpsl
movsl
fcmovu
sbb
insb
fiadds
inc
pop
loopne
inc
adc
mov
push
shrb
je
and
cmp
sub
xchg
mov
stc
pop
push
das
cmpsb
mov
iret
int
movsb
dec
mov
mov
fxch
mov
sbbb
xchg
stos
in
mov
or
pop
mov
test
sbb
cmp
cmpsl
jbe
jns
mov
in
pop
mov
sti
loop
jnp
lret
pop
daa
cmp
mov
repz
icebp
dec
adc
pop
jle
ret
loopne
lea
jg
jle
jae
in
lods
jl
loop
sbb
xchg
lock
rcrl
pop
imul
jo
inc
in
mov
movsb
cli
lcall
out
hlt
push
mov
bound
pop
fdivrl
cmc
mov
mov
sub
addr16
sbb
pop
sub
lret
push
shl
and
add
pop
and
lds
insl
sbb
jg
in
pop
test
jmp
jle
ret
cmp
sub
outsb
maskmovq
negl
in
xlat
push
jmp
cmp
out
push
cmpsl
test
scas
ret
and
dec
inc
push
and
mov
fstpt
js
test
lea
fisttpll
imul
lcall
imul
mov
fs
adc
mov
jp
insl
jl
in
popf
mov
lahf
ss
and
push
stos
mov
pushf
adc
scas
push
rolb
and
in
insb
pop
cmpsl
add
lret
in
imul
stos
dec
outsl
sbb
int
inc
jle
imul
icebp
ds
orb
xlat
or
jb
jno
mov
sar
imul
lret
mov
scas
addr16
aad
jns
sub
pop
int3
int3
inc
test
add
xchg
arpl
jmp
sub
inc
shlb
imul
dec
lret
lret
ljmp
mov
sbb
arpl
sbb
sbb
imul
es
xchg
ret
cmp
push
inc
adc
add
jo
dec
insb
lcall
cmp
cs
das
or
fdivrp
xchg
xchg
mov
notl
xchg
adc
lods
add
shlb
push
mov
push
in
icebp
jno
repnz
in
into
push
loopne
pop
inc
sub
inc
cmp
add
repnz
cmc
in
js
std
je
shlb
xor
ljmp
push
sub
jle
push
add
loopne
push
je
test
inc
mov
mov
lds
jle
lods
and
mov
iret
fisttps
inc
mov
hlt
mov
loope
or
gs
and
lcall
xlat
call
jge
mov
cs
cmp
dec
sub
or
push
les
mov
or
cmp
mov
cli
ud1
cmp
cmp
cmpsb
jl
mov
sbb
sbb
decl
decl
decl
incl
lret
add
add
inc
incb
cmp
ds
mov
stos
rcrb
mov
pop
inc
repnz
sbb
incl
js
cmc
push
lahf
push
ss
pop
jnp
inc
leave
cwtl
push
push
mov
cmpsl
mov
lcall
cmp
pop
pop
insl
into
sbb
pop
jmp
push
pop
xor
sbb
imul
sub
dec
into
outsl
pop
cwtl
leave
in
pop
popa
xor
dec
jmp
or
pop
mov
inc
mov
jo
and
and
inc
push
mov
fidivs
bound
insb
and
lods
cmp
std
xchg
adc
mov
test
or
popa
sahf
hlt
cmp
pop
sub
adc
mov
jmp
sub
dec
cmpsl
mov
xchg
cmovno
nop
inc
xchg
sarl
xorps
push
push
mov
insl
popa
into
and
pop
shll
ja
and
aaa
mov
inc
dec
fstpt
jl
inc
out
ss
movsb
sbb
cmpsb
xor
lcall
fcomi
pop
inc
sub
movhps
outsl
shlb
sub
push
push
adc
ja
repz
clc
jecxz
stos
loope
in
mov
daa
enter
jg
pop
add
jl
je
jo
je
cltd
lock
loope
shrl
adc
adc
mov
push
cmpb
mov
mov
std
dec
jns
fsubrl
out
clc
sub
xor
push
in
das
int3
out
scas
inc
je
imul
mov
dec
scas
lods
daa
in
fstps
shl
adcl
mov
rorb
jo
sub
xorl
cmpb
mov
imul
mov
mov
add
das
imul
cmpb
repnz
cmpsl
xchg
mov
push
cmp
ret
cmp
push
push
sbb
jns
mov
inc
inc
mov
ds
loope
sbb
lcall
movsb
int
test
add
ljmp
dec
enter
mov
lea
pop
xchg
rorl
cmp
fmull
fxch
dec
cs
mov
popf
sub
scas
or
lcall
cmpsl
clc
out
add
aas
dec
push
cmp
jno
cmpsl
daa
and
test
jle
inc
jge
lret
mov
pop
push
mov
or
dec
dec
sbb
push
test
mov
xor
dec
add
notl
bound
mov
cmp
jg
test
mov
mov
dec
mov
lahf
mov
or
push
les
stc
into
push
pop
imul
push
sbb
scas
call
push
lds
test
cmp
int
int3
lret
shr
or
js
or
mov
xor
cltd
fs
cmc
stos
sub
mov
inc
movsl
push
jo
aam
jb
fdivl
adc
test
jno
pop
pop
dec
fdivp
push
mov
pop
gs
lret
dec
stos
cmp
insb
push
fstpt
mov
dec
jg
push
and
cmp
adc
sahf
and
pop
outsb
stos
cmpsl
dec
pusha
pop
xchg
push
xor
jmp
jge
jmp
cmp
mov
js
stos
sarb
lcall
jb
and
aam
jbe
out
pop
pop
pop
xor
sub
int
sarl
vcvttps2dq
fldcw
rolb
test
adc
mov
xor
sub
pop
sahf
aaa
inc
lahf
cld
out
fisttpll
mov
jb
fsubrl
xchg
add
push
adc
test
rcrl
mov
outsb
cmpb
mov
inc
sbb
add
xchg
loop
mov
fists
or
cmpl
sahf
les
mov
lcall
es
mov
sbb
push
mov
int3
cmp
push
ljmpw
shl
mov
xor
lods
repnz
sbb
loopne
push
lea
movsb
lds
in
jns
mov
imul
push
pop
div
adc
sub
dec
mov
enter
divb
stos
lock
jo
sbb
sbb
imul
xor
ret
paddw
bound
or
add
popa
in
mov
and
sbb
rcr
test
mov
jg
or
sbb
hlt
arpl
cmp
mov
rcrb
dec
popf
js
lret
sbb
dec
and
mov
push
mov
aaa
mov
insl
bound
mov
lea
in
addr16
leave
sbb
lret
lods
adc
rcrb
pop
std
lahf
test
lock
outsb
loop
or
xor
scas
subb
loope
mov
std
sub
cmp
scas
sbb
cmpsl
cmp
xchg
test
xor
mov
fiadds
add
adc
test
jno
scas
stc
cmpsb
pop
and
cmp
roll
add
or
add
xchg
inc
xchg
cmp
sbbl
inc
pop
jmp
not
mov
enter
fidivs
ret
cmp
jecxz
cmp
mov
xchg
inc
dec
dec
push
cmpsb
cwtl
xchg
and
or
mov
movsb
add
push
stos
sbb
in
daa
in
fcmovb
pop
shlb
lahf
sub
cmpsl
int3
es
ret
xor
nop
cmp
test
push
push
fistpll
pop
repnz
stos
push
dec
sub
jmp
int3
inc
inc
push
adcl
add
pop
gs
mov
xchg
cli
loopne
shrb
push
push
mov
cmc
enter
sbb
add
sub
shlb
mov
mov
jbe
jb
sub
sbb
cmp
pop
sbb
int
or
or
test
push
xchg
pop
xchg
stos
and
insb
add
test
cmpb
out
mov
jg
push
movsl
xchg
add
pop
inc
xchg
or
adc
loopne
mov
jg
je
adc
and
adc
mov
inc
scas
gs
mov
icebp
and
push
xchg
andb
adc
int
inc
mov
or
iret
test
sbb
outsl
cmp
into
rclb
popf
andb
push
in
xchg
pop
adcl
sub
adc
test
daa
adc
popa
sbb
inc
mov
scas
fst
inc
dec
and
cwtl
in
mov
lea
push
stos
jge
inc
jp
movsb
ficoms
sbb
inc
cmp
test
std
decl
loopne
pushl
add
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
jmp
inc
fwait
pop
dec
sbb
fwait
lds
xchg
js
xchg
adc
adc
xor
add
jl
sbb
ss
mov
xchg
shl
sub
jb
test
cmp
dec
adc
pop
std
inc
dec
xchg
mov
adc
repnz
inc
ret
inc
shl
sti
clc
lret
and
mov
jne
jl
jl
add
fcompl
sbb
repnz
loopne
mov
push
jbe
jmp
xor
loop
loope
imul
cltd
jecxz
ja
sub
lock
jnp
mov
mov
test
lods
xchg
aam
xchg
cmp
fwait
pop
sub
or
dec
mov
sbb
xchg
out
pop
mov
add
xchg
pop
mov
dec
jae
xchg
lret
jno
out
cmp
cltd
cmp
shl
sbb
icebp
xchg
je
fs
les
pop
leave
push
dec
sub
cmp
popf
add
dec
cmpsl
ret
inc
dec
push
push
adcb
sub
outsl
out
mov
enter
neg
xor
pop
dec
cmp
mov
push
mov
pusha
jnp
out
adc
push
pop
std
sub
data16
scas
lret
decb
or
lods
in
pop
jne
adc
fdivr
daa
rcr
cmp
out
in
jns
int
fsubr
sbb
pop
loope
hlt
pusha
inc
repz
icebp
adc
je
in
js
sbb
scas
aaa
clc
lret
mov
jl
fildll
lcall
inc
pop
pop
push
add
scas
negl
sbb
in
enter
sub
add
cmp
shr
xor
mov
mov
jle
add
cmp
jge
add
stos
or
addr16
addl
in
sti
divl
clc
data16
in
pop
rcrb
sub
cmp
mov
bound
push
jl
sbbb
leave
fsts
sub
lahf
aam
ret
fistps
sbb
scas
pop
and
lds
inc
mov
or
push
cltd
lret
mov
outsb
cmpsl
daa
jae
pop
xor
mov
mov
push
loop
popf
xchg
pop
enter
mov
sbb
and
dec
pop
lock
jl
fwait
scas
push
in
test
push
insl
jae
popf
inc
mov
in
cmp
xchg
jmp
mov
dec
das
lret
jns
rorb
dec
mov
lods
xor
nop
inc
rclb
enter
jecxz
outsb
movsl
cmc
enter
dec
js
pop
test
test
aam
xchg
cmp
dec
dec
mov
or
adcl
xchg
mov
insl
popf
push
iret
mov
add
roll
cmp
dec
jae
cs
cmp
ljmp
fcompl
mov
xor
dec
inc
or
xchg
mov
out
add
lods
aaa
sub
daa
lea
shl
iret
jp
pop
mov
cmp
jbe
pop
and
stos
fcompl
shll
pop
inc
mov
and
cmpsb
sbb
popa
xchg
add
jle
imul
or
cmc
icebp
out
mov
fcmovnb
and
mov
mov
add
pop
je
xor
jb
andl
not
sbb
sub
push
push
jl
js
lret
test
pushf
mov
jmp
sahf
pop
pop
adc
lahf
sbb
mov
stos
adc
adc
aam
loop
fisttps
scas
into
xchg
popa
testl
fs
std
imul
std
mov
sbb
mov
sub
aaa
lods
in
stc
gs
les
ljmp
sti
xchg
mov
sub
or
cmp
jp
jno
and
fildl
jl
jecxz
jae
sub
int3
cs
ds
add
scas
pushl
int
push
rorb
repz
jo
scas
insl
cwtl
in
adc
test
adc
pop
addl
jmp
xchg
shll
and
hlt
mov
cltd
and
mov
mov
push
xchg
pop
sbb
pcmpeqb
xor
mov
loope
inc
sbb
xorb
push
test
or
xchg
loope
lret
shlb
push
pop
and
push
jecxz
mov
pop
pop
adc
sbb
out
or
mov
dec
daa
in
push
xchg
aad
dec
adc
in
mov
cli
mov
and
fnstsw
out
and
mov
fidivrl
lods
jne
lods
sahf
loopne
pop
pusha
jae
mov
dec
ja
inc
jmp
dec
push
adc
jle
xchg
push
jbe
pop
and
repnz
fistpll
sub
pop
imulb
clc
test
test
mov
incl
sbb
push
push
pop
dec
cwtl
lds
cmp
mov
mov
adc
lret
lret
xchg
ret
xchg
leave
sbb
sbb
mov
cmp
xchg
adc
mov
es
shrb
push
adc
dec
push
adc
adc
sub
jne
cmc
jno
sub
clc
inc
pop
cmp
xchg
ss
popf
es
pop
push
xor
or
out
fcmovnb
bound
sub
enter
cmp
mov
psubq
mov
dec
je
aas
jnp
xchg
jae
pop
xlat
xchg
fistpl
rcl
and
fdiv
orb
xor
mov
sub
loopne
pop
call
das
flds
pop
out
inc
cmp
aam
cld
cli
sub
stos
push
fisttpl
mov
daa
xor
negl
mov
fistpll
lret
and
cwtl
lods
lahf
mov
sahf
inc
jg
jle
mov
lds
outsl
dec
add
out
in
pop
pop
scas
lods
sbb
or
pop
cmp
sti
addr16
jbe
sbb
ret
jb
mov
push
mov
mov
outsb
adc
aaa
mov
shrl
mov
fcoms
popa
cmpsb
xchg
xchg
fidivl
push
sub
call
mov
icebp
jmp
lret
aaa
fs
mov
sbb
lretw
mov
xchg
test
xchg
adc
xchg
fnsave
xchg
and
cmp
in
cmp
push
inc
test
add
ljmp
shrb
icebp
xor
mov
ja
jno
lahf
mov
test
or
leave
sub
adc
sub
cmp
xor
pop
dec
cmp
stos
jp
aas
add
dec
leave
jno
test
or
test
mov
out
jns
or
aas
xchg
inc
pop
loope
mov
out
sbb
scas
test
mov
shl
dec
mov
jecxz
sti
and
xchg
leave
les
lret
xor
test
push
xor
mov
cmp
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
jmp
mov
sbb
lahf
cmp
fidivrs
stos
adc
adc
lods
adc
mov
mov
repz
fmull
ret
xor
jbe
scas
arpl
aas
add
xor
test
jmp
dec
gs
mov
pop
dec
iret
in
stc
lods
int
test
cmp
push
mov
jo
cmp
outsb
orb
fs
icebp
xlat
xor
xchg
in
daa
sahf
inc
push
xchg
mov
inc
rcl
mov
enter
loop
adc
mov
insl
adc
or
mov
mov
into
cmpxchg
pusha
mov
data16
sbb
rcll
loope
enter
pushf
das
adc
iret
loop
mov
cmpsb
sbb
das
test
add
imul
sbb
es
push
loopne,pt
cs
cli
mov
stos
in
mov
jns
jp
mov
fwait
movsl
sbb
xor
sti
popa
lea
pop
test
fidivl
std
insb
mov
dec
xchg
fwait
adc
rcrl
out
repz
adc
mov
mov
imul
ds
andb
fnstcw
fninit
mov
ficomps
sub
push
and
out
cmp
pop
cmpl
push
test
xchg
out
push
stos
xchg
and
dec
dec
in
mov
mov
push
jne
adc
xchg
pop
mov
jbe
or
add
daa
adc
push
arpl
scas
xchg
arpl
mov
sub
pushf
ds
flds
lock
negl
stc
outsb
sarb
adc
jmp
addr16
dec
les
test
mov
sbb
jnp
daa
lret
out
mov
pop
and
aaa
jge
inc
dec
shll
in
mov
push
pusha
adcb
les
jl
rcrl
dec
lret
sarl
mov
pop
call
xchg
adc
inc
ret
mov
dec
dec
push
pop
add
clc
jnp
sub
xor
js
movsb
mov
pop
sbb
fmuls
dec
jb
add
dec
inc
adc
or
int
dec
clc
jnp
andb
lret
or
push
lea
int3
xchg
add
cmp
lods
xor
sub
aas
mov
in
fcoms
adc
popa
xchg
and
jno
andl
dec
or
cmp
fmuls
pop
daa
fmul
mov
in
shl
sahf
jl
jnp
mov
jg
push
sbb
pop
jl
ret
push
scas
sbb
push
sub
rcr
mov
lods
pop
jne
int
jno
into
mov
ja
sbb
mov
push
lea
repnz
lods
pop
add
mov
sbb
lcall
xchg
arpl
pop
add
pop
xchg
sbb
arpl
cmp
sub
jmp
xchg
jnp
inc
mov
jno
mov
call
imull
push
mov
add
pop
add
dec
xchg
loopne
out
lret
sbb
cltd
pop
cmp
mulb
xchg
aas
and
ficomps
xor
in
mov
mov
adc
ret
push
test
je
pushf
and
out
addl
mov
out
aam
cmp
lret
mov
stc
addr16
add
xlat
sti
push
sbb
sahf
stos
xchg
mov
imul
out
adc
xor
mov
mov
cmp
mulb
lea
icebp
sahf
lcall
rorl
mov
mov
jmp
stos
cwtl
dec
pop
ds
lcall
push
enter
adc
adc
cmp
mulps
js
ljmp
adc
cmp
sub
sbb
xor
imul
idiv
dec
rorl
push
xchg
mov
pop
idiv
insb
xchg
call
and
jae
inc
jecxz,pt
loopne
inc
mov
jne
jo
stos
lods
out
push
test
sub
repz
sub
fildl
xor
xor
mov
inc
mov
leave
fcmovnbe
jecxz,pt
cmc
in
add
out
stc
jnp
inc
mov
loop
pop
push
into
jle
pop
mov
sub
sub
ret
shl
cltd
mov
shlb
popf
cld
or
test
popa
xchg
in
inc
in
dec
sbb
int3
mov
cmp
test
lds
inc
pop
ljmp
aad
fxch
sbb
mov
jl
jmp
dec
in
test
mov
dec
adc
inc
pop
add
xchg
lock
leave
out
clc
pop
cmc
inc
sbb
adc
push
loope
mov
ret
or
mov
sar
jmp
mov
sbb
push
orb
push
jecxz
or
push
push
ret
cmp
jno
push
pop
bound
lods
or
xchg
fidivrl
sub
or
scas
and
sbb
mov
jge
inc
lcall
bswap
dec
fwait
sub
sub
inc
imul
adc
nop
inc
sub
push
test
and
aad
xchg
mov
call
pop
icebp
aam
jge
and
inc
pop
pop
xor
data16
inc
or
push
push
roll
inc
sti
leave
cltd
add
sti
mov
ret
in
cmp
movsb
jne
subl
cmovae
adc
and
adc
inc
mov
lcall
dec
repz
inc
out
and
jle
imul
int3
sub
scas
popa
dec
cmp
inc
push
mov
idivb
aad
cmpsb
ja
test
pop
mov
push
nop
sahf
fistpll
add
pop
ret
mov
xchg
je
test
or
out
dec
jb
jp
xchg
sbb
mov
add
ljmp
imul
mov
inc
test
add
inc
add
and
call
js
enter
pop
std
sti
pop
ds
dec
scas
jb
pop
lds
movsb
icebp
inc
push
stc
cltd
test
pop
imul
xchg
repnz
iret
jecxz
and
data16
mov
addr16
add
nop
icebp
inc
mov
call
insl
mov
pop
out
push
rcr
mov
frstor
scas
pop
push
sbb
mov
mov
add
xchg
fstps
mov
or
hlt
push
je
push
fsubs
mov
mov
jmp
mov
into
mov
mov
aam
cli
fucom
cld
push
lods
add
push
mov
cmc
mov
xlat
jmp
push
dec
stos
lds
mov
das
inc
lods
dec
cmp
std
and
mov
sub
aad
mov
fisttpl
ljmp
mov
sbb
int
sbb
repnz
jne
clc
adc
push
cmc
std
lock
pop
mov
int
xchg
add
xor
inc
mov
mov
jmp
mov
clc
mov
sub
jle
mov
adc
adc
dec
xor
pop
aas
mov
out
lea
roll
xchg
pop
push
or
inc
sbb
xor
in
xchg
shlb
xor
pushf
ja,pn
insl
nop
ss
add
rdtsc
test
icebp
push
mov
fdivrl
cmp
mov
mov
xor
pushf
out
pop
xchg
fbld
pushl
lock
icebp
and
gs
mov
test
mov
inc
and
cli
push
cmp
and
sub
pop
ret
scas
xchg
inc
xorl
dec
cmp
sub
shlb
es
sub
adc
jne
xchg
scas
push
or
xchg
je
push
inc
sub
scas
and
jp
or
imul
or
ljmp
inc
pop
adc
cli
repnz
out
ljmp
inc
leave
xchg
daa
cmc
xchg
sub
xchg
mov
cmc
lcall
push
leave
aam
and
jmp
rcr
jo
add
les
inc
lea
rolb
add
sahf
stc
jae
push
jb
lods
inc
stc
pop
mov
mov
es
cltd
loopne
mov
cmp
or
in
push
cmp
loope
mov
sub
mov
rcrb
out
adc
scas
adc
ljmp
sub
imul
mov
add
pop
lods
xchg
divl
or
bound
es
dec
nop
inc
inc
pop
sub
dec
jae
adc
push
lods
outsb
mov
mov
leave
into
cwtl
dec
test
mov
xor
dec
mov
mov
jle
stos
dec
lahf
ficoms
imul
shrb
jle
std
orb
jmp
xchg
arpl
and
push
push
out
jnp
lahf
and
push
adc
mov
adc
add
cmp
rcrb
sub
xchg
mov
or
les
mov
ljmp
call
aaa
mov
sub
icebp
mov
aad
mov
cli
inc
pushf
add
aad
imul
loop
mov
sbb
jecxz
stc
scas
mov
push
aaa
lret
cmp
jb
jge
cs
cmpsb
lahf
sbb
negl
in
outsl
and
nop
dec
cmp
das
lock
xchg
clc
adc
xchg
dec
jp
imul
jns
out
mov
clc
xor
adc
jle
and
mov
push
or
cwtl
mov
loopne
xor
fisubs
dec
mov
or
cs
or
in
pop
fldl
ficoml
leave
faddl
and
sub
xchg
std
xorl
adc
gs
shl
std
bound
dec
negl
and
adc
jns
jle
inc
xchg
jmp
shl
push
sbb
mov
mov
idiv
mov
int
stc
push
fs
stos
int
push
add
decl
dec
scas
mov
popa
adc
xchg
ds
enter
cli
xchg
push
dec
insb
cmp
scas
adc
pslld
xchg
sub
push
in
pop
cmp
sub
jmp
cs
into
imulb
or
rorl
mov
fldt
dec
sbbl
stos
lods
push
fsub
xchg
jle
xchg
mov
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
icebp
sbbb
push
cmpsb
icebp
stos
xor
adc
adc
loopne
sbb
mov
mov
or
in
inc
xchg
jae
sahf
das
push
stos
mov
push
and
daa
xor
dec
push
rclb
mov
gs
pop
sub
stc
jne
xor
mov
imul
cld
pop
sbb
xor
push
shl
jnp
decb
imul
test
stc
pop
imul
dec
push
inc
lret
and
enter
fwait
or
loope
sbb
pushf
cmc
scas
fimull
gs
xor
mov
cmp
lcall
or
sbb
cli
repnz
daa
mov
mov
mov
sti
test
daa
roll
cltd
out
mov
call
test
xchg
pop
lahf
mov
mov
mov
mov
call
aam
lcall
add
mov
mov
outsl
jno
xor
mov
inc
push
jle
pop
in
aad
insb
adc
jmp
lock
test
ret
scas
sahf
mov
data16
rol
push
icebp
push
hlt
je
imul
pop
notb
pop
sahf
adc
mov
and
xor
rcrb
pop
fnstcw
movsb
push
mov
xor
stos
pushl
ret
pop
cmp
jb
pop
mov
push
sub
shr
sbbl
repnz
pop
repz
adc
sbb
jmp
and
inc
daa
sub
mov
arpl
push
ljmp
pop
orl
cmp
int
lock
jae
imul
xchg
and
pop
jno
cmp
sub
push
adc
mov
scas
fisubs
jle
pop
adc
punpcklbw
mov
lahf
je
pop
jge
cmp
xchg
mov
or
adc
dec
dec
sbb
cmp
mov
mov
call
and
scas
xchg
test
data16
adc
js
lret
sbbb
in
mov
cmp
mov
and
pop
lods
mov
add
std
inc
arpl
cli
push
mov
rcr
mov
imul
xor
sbb
fldt
fbstp
mov
lret
pop
and
sbb
fstp
dec
movl
fldt
rcll
xlat
int3
xchg
nop
popf
sbb
mov
adc
mov
gs
push
mov
int3
sahf
pop
ret
mov
sahf
mov
xchg
int3
in
jge
mov
cli
pop
inc
scas
xor
and
xchg
add
outsb
xchg
pop
xchg
mov
and
xchg
push
adcl
inc
outsl
lods
jl
ds
xlat
jo
in
aad
sbb
dec
dec
jbe
xchg
adc
scas
data16
xchg
repnz
pop
pop
sahf
mov
in
cmpsb
mov
fnsave
push
cmp
mov
pop
cwtl
jmp
cmp
and
and
mov
and
cld
fs
and
or
mov
xor
dec
xor
push
lahf
ds
fdivl
popf
cmp
mov
or
cmp
decb
popa
ret
dec
sub
mov
ret
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
xor
xchg
aas
sbb
sub
jb
add
jg
adc
adc
lods
inc
mov
or
cmp
inc
push
push
leave
xor
push
in
dec
xor
enter
push
sub
aas
movsb
push
xor
clc
mov
mov
xchg
pop
xor
xchg
mov
ret
jne
les
add
mov
insl
push
mov
xor
push
inc
and
insl
pop
jae
shll
out
mov
mov
pandn
mov
and
jmp
inc
lock
cmpsb
shrb
aaa
xor
shrl
lcall
dec
sbb
jecxz
sub
mov
les
les
adc
test
mov
sub
mov
inc
pushf
mov
scas
gs
dec
test
inc
mov
loopne
je
push
js
or
mov
push
and
cs
mov
or
or
adc
xor
loop
push
or
test
ljmp
mov
addr16
mov
jmp
adc
push
mov
mov
aad
push
lea
test
les
cli
lcall
mov
clc
push
cmp
mov
lcall
lock
int
xchg
or
pop
pop
inc
mov
mov
sbb
jbe
pop
xor
test
popa
xchg
dec
xchg
push
push
mov
adc
xor
fstl
out
adc
adcb
push
lret
shll
sahf
cmpsb
push
ret
and
add
pop
and
pop
inc
cmp
inc
xlat
push
adc
push
mov
push
pop
lods
movsl
cwtl
hlt
or
cmpsb
ret
jnp
mov
mov
mov
adc
jg
cmp
leave
and
mov
pop
xlat
faddp
jbe
filds
xor
xor
pop
pop
sub
fisubrs
xchg
fwait
jmp
jl
push
ret
test
mov
aad
adc
mov
sub
cld
cmpb
lcall
cmpsl
add
jp
push
xchg
imul
pop
xor
test
mov
add
ljmp
jp
out
addl
rcll
jmp
cmp
out
cmp
cli
int3
loope
adc
add
and
xchg
adc
mov
push
pop
lahf
mov
xor
and
mov
lock
jne
adc
sub
lcall
push
mov
std
push
sub
cltd
in
lcall
clc
cwtl
pop
jmp
test
lahf
mov
xchg
jae
dec
cmp
sub
ja
fcmovu
nop
jmp
lret
mov
fsts
arpl
adcb
call
int
sbb
push
and
jge
pusha
movsb
cmp
adc
adcl
add
mov
lods
xor
xor
call
sbb
lea
push
sub
and
or
nop
push
or
inc
xchg
lods
sbb
stc
out
ret
int3
subl
fwait
add
push
sbb
mov
push
push
xchg
mov
pop
lret
leave
xor
cwtl
dec
mov
in
cmp
sbb
jl
aas
pop
rcrl
inc
in
stos
or
sbb
or
cld
mov
lea
dec
jl
loope
mov
cmp
lret
mov
mov
cwtl
pop
dec
push
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
jmp
adc
and
sbb
arpl
jbe
dec
mov
stos
adc
adc
cmp
push
cld
test
adc
sbb
movsb
aas
lods
mov
mov
pop
mov
dec
lret
sub
mov
ret
sbb
rcrl
arpl
pop
aad
cmpsb
ss
out
jne
inc
mov
xchg
add
fcmovb
cmp
daa
scas
inc
mov
ror
stc
orl
outsl
mov
pop
xor
jle
mov
mov
mov
out
lahf
rcrl
repz
sbb
cld
add
and
xchg
movsb
sbb
push
jnp
ljmp
jl
jb
out
mov
adc
xor
stos
mov
xor
xlat
inc
outsl
mov
pop
xlat
xchg
daa
movsb
mov
mov
mov
iret
cwtl
cmp
fnsave
jl
dec
ss
mov
inc
les
aad
jno
inc
push
daa
bound
aaa
push
clc
ja
xchg
pop
lods
or
adc
nop
pop
popf
fwait
or
das
bound
dec
push
xor
xor
xchg
neg
mov
mov
and
call
scas
jg
push
insb
adcb
into
sbb
idivl
cmp
mov
out
jle
cwtl
lods
cmc
mov
push
push
add
jae
inc
fnsave
mov
fdivs
push
fadds
xor
aad
test
scas
shl
cmp
cwtl
shr
stos
aad
imul
cmp
sub
mov
and
mov
adc
cmp
xchg
bound
push
mov
loope
mov
sbb
xor
call
rolb
sahf
rclb
into
xchg
xchg
add
push
ret
adc
popa
xchg
mov
dec
test
xchg
loopew
ret
dec
xchg
push
cmp
loop
and
in
mov
ss
call
arpl
shrb
cs
jle
sti
pop
icebp
pop
nop
inc
push
xchg
mov
pop
call
pop
cmp
scas
test
lock
icebp
sbb
call
adc
push
ret
adc
push
cmp
pop
xchg
jno
or
sahf
cmpsl
or
test
test
lcall
mov
dec
cmc
aam
fmulp
rclb
cmp
outsl
xchg
aaa
pushf
xchg
mov
mov
pop
sub
mov
push
xlat
int3
out
xchg
sbb
in
xchg
fidivrl
lock
movsb
mov
ss
mov
stos
dec
mov
xor
aas
mov
stc
aad
xor
movaps
mov
lock
push
mov
jecxz
xor
lret
js
imul
enter
mov
test
cmp
lea
lret
aaa
les
mov
mov
pop
mov
dec
dec
dec
jp
popa
mov
sarb
push
cld
jns
push
jb
cmc
mov
stos
leave
dec
scas
adc
xor
xor
sahf
fwait
add
xchg
adc
mov
lea
jno
sub
gs
cmp
cmp
xchg
pop
ds
adc
fidivs
insl
dec
out
add
into
sub
arpl
xchg
sti
and
cmp
push
std
fwait
stos
push
adc
fidivrl
add
mov
push
dec
sahf
inc
xchg
cmpb
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
jmp
jg
dec
dec
sub
loop
mov
mov
adc
adc
loop
icebp
into
adc
jmp
xor
scas
inc
rol
ljmp
add
subl
movsb
mov
nop
movsl
pusha
mov
bound
cld
int
or
sbb
jecxz
cmp
xchg
xchg
and
cmp
xchg
sahf
dec
jae
pop
imul
loop
xor
hlt
rcll
adc
dec
ret
or
aad
jp
sub
adc
out
mov
vhaddps
movsl
sar
push
pop
mov
pop
sub
mov
wbinvd
mov
adc
fisubrs
sti
dec
roll
dec
mov
jp
ret
test
pop
arpl
call
popf
xchg
cld
ss
mov
scas
pop
inc
in
mov
pop
sahf
scas
decl
adc
or
xor
xlat
ds
dec
movsl
test
in
jmp
or
gs
mov
xor
xor
and
enter
cmp
lods
mov
ss
xchg
sub
ds
lock
xor
xor
divl
test
jo
add
mov
repz
cmpsb
xchg
mov
stos
mov
jmp
adc
push
jle
cli
pushf
mov
or
cltd
out
xor
sbb
push
shl
push
or
push
sti
push
pusha
aam
xor
loope
fwait
cmpsl
xor
fnsave
je
inc
fimuls
fsubrl
movsb
mov
push
movsb
cmp
push
xchg
xchg
cmp
pop
add
mov
movsl
jmp
xor
es
sbb
arpl
gs
mov
mov
mov
in
scas
jno
xchg
test
sub
mov
in
lahf
push
dec
mov
mov
pop
in
xchg
mov
andl
cld
clc
dec
pop
loope
add
sub
scas
add
outsb
scas
xchg
mov
or
ljmp
std
xor
sahf
sbb
dec
or
mov
aam
sub
es
iret
sbb
or
jbe
push
pop
mov
fstps
dec
outsb
test
dec
inc
and
inc
clc
cmp
stc
jns
and
int3
and
aas
pop
bound
add
mov
sti
aam
cmp
jnp
jmp
mov
mov
push
mov
jae
arpl
sub
cltd
adc
out
shrb
in
pusha
test
mov
cmp
loop
jno
es
mov
int3
aad
std
imul
mov
mov
pop
out
fwait
or
or
ret
push
and
mov
mov
mov
imul
lahf
ds
pop
dec
jno
and
dec
mov
popa
xchg
jmp
push
mov
pusha
lds
inc
adc
inc
jecxz
cmpsb
imul
std
push
inc
gs
rolb
xor
mov
dec
mov
jbe
mov
sahf
outsb
aaa
mov
nop
cmp
cwtl
mov
enter
adc
adc
inc
or
pop
sbb
negb
or
jo
and
cmpsb
int3
jge
sub
jns
mov
ljmp
cs
and
jl
pop
in
out
fwait
insb
test
fisubl
aam
inc
xchg
adc
xchg
js
subb
fbstp
aaa
dec
mov
add
mov
movl
movl
movl
movl
movl
movl
movl
jmp
sbb
or
pusha
cmp
push
inc
ss
inc
dec
adc
adc
test
sbb
push
lods
movsb
imul
ja
sbb
rcr
xchg
testb
dec
jno
jge
mov
xlat
pusha
rcrl
cli
sub
dec
sbb
dec
fwait
test
repnz
xor
pop
pop
mov
push
push
aad
sbb
mov
and
push
adc
shrl
lods
push
rcrb
sub
fldenv
sub
mov
push
movl
inc
jmp
xchg
movsb
test
dec
push
into
inc
jne
adc
cmpsl
adc
mov
push
cmpsl
lds
test
lods
or
mov
pop
repnz
cmpsl
xor
mov
cmp
jne
in
shll
push
mov
jbe
adc
lock
movsb
lahf
pop
ret
pop
mov
test
or
mov
mov
popf
mov
popa
shlb
xor
stos
sub
jae
mov
pop
xchg
rorb
out
inc
sub
scas
pop
pop
clc
jp
hlt
push
les
sub
jmp
pop
or
adc
std
or
je
mov
cmp
dec
lods
ljmp
dec
cwtl
jnp
js
ret
shll
push
negb
sbb
mov
imul
xchg
aaa
push
jnp
pop
mov
cld
xchg
add
aaa
pop
push
andb
jns
setg
lcallw
xchg
or
lahf
je
ret
imul
pop
lock
and
test
xchg
fcmovu
cmpl
cwtl
mov
jns
mov
xchg
pushf
and
ljmp
nop
arpl
ljmp
bound
pop
lods
notl
dec
mov
loopne
fildll
mov
testl
add
clc
lret
xorl
fisubrl
hlt
pop
dec
pop
jp
jne
loope,pn
data16
mov
mov
jb
jae
inc
out
stos
mov
into
adc
mov
or
jl
leave
adc
xchg
mov
ja
mov
pop
pop
aaa
mov
inc
fsubs
push
sub
repz
jno
sti
mov
inc
adc
outsb
mov
push
addb
xchg
sbb
out
fs
cmp
push
xchg
xchg
lret
sbb
dec
push
les
in
and
push
sbb
or
push
stc
sbb
pop
fidivl
add
xchg
in
and
jb
inc
adc
popl
push
xchg
adc
dec
fsubl
jg
daa
mov
repz
repz
sub
add
aam
fiadds
inc
push
jae
and
into
lcall
ljmp
mov
out
xchg
mov
jne
comiss
mov
sub
cmpsb
adcl
mov
mov
xchg
mov
xchg
mov
test
mov
jno
mov
adc
bound
cwtl
jns
inc
in
js
gs
cmp
out
or
xor
mov
in
iret
dec
stos
push
adc
or
ret
cmp
rcrb
mov
fwait
push
jo
mov
imul
sub
roll
push
lret
fwait
pusha
outsb
mov
push
add
sbb
xchg
fiaddl
sbb
jo
inc
lcall
push
sbb
push
sub
xor
add
dec
cmc
pop
cmpsl
push
rol
test
lcall
jno
add
test
push
or
add
test
call
test
decl
pushl
shl
icebp
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
jmp
test
sub
sbb
xchg
push
push
mov
mov
filds
stos
adc
adc
ljmp
insb
pop
sub
sahf
mov
cli
pop
dec
movsl
test
push
test
mov
sub
add
push
scas
inc
lods
stos
jle
loope
test
rorb
adc
call
inc
aas
lods
aas
ret
loope
push
cs
cmp
and
enter
insl
inc
mov
daa
xor
sbb
jne
inc
add
mov
adc
in
fs
fimull
xchg
cmp
cmpl
mov
jmp
sahf
cmp
loope
sub
mov
ja
lahf
xor
cmpxchg8b
xchg
mov
sub
push
mov
pop
stos
cmpsb
xor
dec
lods
inc
dec
sbb
add
mov
jecxz
mov
jb
scas
stos
pop
xor
arpl
jbe
pop
in
mov
pushf
mov
mov
inc
cmpsl
jmp
test
mov
mov
and
mov
dec
fstps
push
sub
mov
mov
ds
mov
fwait
out
aas
enter
add
stos
aas
xor
loope
xchg
outsb
jmp
popa
push
or
repz
mov
fdivr
cld
adc
popf
mov
add
cmp
sbb
ss
imull
xchg
add
lods
addr16
pusha
fiaddl
adc
dec
movsb
lahf
jp
fimull
mov
fildl
in
inc
push
repz
sahf
lret
cmp
dec
or
leave
shrb
inc
rorl
sub
sub
push
mov
add
and
out
imul
das
fs
imul
pop
sbb
in
rcrl
fldcw
jo
xchg
fidivrs
add
jmp
add
int3
jmp
push
lcall
daa
arpl
inc
add
jnp
adc
jp
repz
out
cmp
je
popf
outsl
stc
sub
jo
dec
fwait
inc
cmp
cli
rcrl
dec
popa
arpl
pop
sbb
xchg
inc
roll
test
sbb
push
in
push
sub
sub
outsl
inc
jb
test
test
sbb
cmc
mov
ja
jb
aas
orb
fptan
sti
xchg
dec
xchg
sbb
and
stos
cltd
fwait
dec
mov
sbb
and
jmp
sub
pop
sub
int
roll
adc
call
cld
roll
ret
pop
lret
scas
jne
lods
push
and
clc
pop
sub
stos
mov
bound
pop
test
push
arpl
or
jp
pop
push
mov
lock
and
cld
xchg
aam
mov
mov
jle
enter
lret
push
xor
in
scas
mov
add
sbb
mov
sub
popl
shll
int
leave
les
cmpsb
movsl
scas
mov
jno
cmpsb
and
jns
fcoml
mov
sbb
imul
call
sbb
xchg
cmpsb
mov
dec
leave
cld
mov
xchg
mov
mov
call
sbb
ljmp
sbb
test
xlat
push
popf
xor
popf
add
int3
into
pop
jne
je
mov
test
movsb
push
cmp
push
xor
aad
adc
cwtl
jnp
push
jmp
add
addl
lret
insb
sbb
imul
push
xchg
mov
cmp
icebp
or
outsb
lret
mov
icebp
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
mov
pop
cmp
movsl
mov
sarb
cmp
adc
cmp
loope
mov
pop
icebp
xor
jl
or
jne
je
clc
or
fldcw
lea
push
mov
pop
je
movsb
mov
and
stos
sub
ffree
nop
lea
pusha
rcrl
push
cld
dec
lret
xor
xor
iret
xchg
sahf
aaa
je
xchg
adc
push
push
lock
sti
xor
mov
add
dec
jno
test
or
cld
stos
sub
adc
lock
jl
mov
or
xlat
out
lea
icebp
cmc
popf
dec
dec
mov
jnp
sub
iret
loop
lea
push
nop
xchg
das
cli
pop
loopne
sub
lods
sub
ds
and
xchg
addr16
adc
mov
mov
sub
xorb
cmp
jbe
cmc
leave
jno
cmp
cld
cmpsl
repz
and
test
push
dec
mov
rcrb
out
mov
aad
mov
rclb
add
or
mov
sbb
daa
or
test
xchg
push
inc
push
ja
stos
pop
xor
push
data16
in
mov
testl
test
mov
fisubrs
sub
or
mov
push
int
stos
jle
adc
into
test
cli
pop
rcll
lea
adc
and
rorb
hlt
fcomps
fistpll
notb
sub
push
fcomp
notl
mov
mov
inc
jge
jo
pop
jle
add
in
inc
mov
push
das
inc
outsl
add
arpl
mov
aam
dec
mov
test
cltd
add
sti
mov
in
les
movsl
nop
lods
lahf
mov
loop
and
sbb
pop
cli
xchg
clc
lahf
jno
mov
mov
mov
xchg
clc
mov
sub
mov
add
xchg
sub
push
push
shlb
mov
push
jo
sbb
xchg
clc
pushf
xor
aam
sbb
ljmp
pushf
cmpsb
lds
jno
lock
incl
pop
add
fmuls
lods
dec
cmp
mov
xchg
push
mov
pop
sub
movsl
inc
mov
sbb
inc
jo
pop
cmp
aaa
or
test
push
inc
mov
add
outsl
insb
adc
in
fsub
jle
fcmovne
fwait
pop
pop
mov
int3
or
add
sbb
test
jle
mov
in
aas
pop
jle
cs
repz
ljmp
add
and
cmpsb
mov
daa
int3
lret
scas
std
pusha
mov
jno
inc
sahf
pop
add
cmp
xchg
insl
sub
cltd
out
mov
sbbb
mov
test
insl
arpl
ret
jge
movsb
addr16
cltd
or
lahf
sbbl
sbb
sbb
shrl
cmp
inc
and
sbb
inc
lock
lods
pop
sbb
push
movsl
movsb
loope
mov
sub
mov
je
mov
and
shld
mov
xchg
pop
repz
daa
dec
jmp
cmp
fistl
xchg
iret
popa
lods
dec
or
mov
mov
dec
pop
and
cld
pop
roll
js
pop
cli
cmp
mov
xchg
mov
mov
in
sti
test
sahf
mov
fnstcw
mov
mov
pushf
mov
call
or
or
add
mov
mov
jmp
jbe
ja
cmp
aam
popf
dec
insb
insb
sysenter
adc
adc
leave
das
pop
cwtl
add
out
jmp
fs
cltd
loop
ja
orl
ret
cwtl
enter
imul
loopne
jae
rol
push
in
pop
es
popa
xchg
adc
je
pushf
cs
je
add
test
mov
divl
xor
pop
sahf
jecxz
pop
ja
data16
pop
lea
aam
jno
subb
sbb
arpl
ror
adc
ljmp
add
aad
push
ja
lcall
xchg
lods
or
push
xchg
lods
pop
addr16
ljmp
cwtl
cmp
push
lret
sbb
inc
es
lods
out
ds
loopne
daa
rorl
add
imul
les
sbb
daa
xchg
push
repz
add
cmp
ljmp
leave
sub
shrl
stos
cmp
dec
sbb
adc
mov
test
fsubl
arpl
outsl
cmp
push
xor
orb
popf
jmp
adc
mov
mov
mov
sub
lahf
mov
cmp
dec
mov
mov
cltd
xchg
rorb
mov
mov
fdivrl
movsl
repz
fdivrl
icebp
pop
clc
mov
add
xor
inc
das
pop
test
sbb
stc
inc
mov
leave
jl
cmp
push
pusha
addr16
jle
cmpsb
js
push
push
jo,pt
fimuls
sbb
sub
xchg
movsl
sbb
cmc
jmp
jp
or
xlat
adc
dec
pop
in
in
pop
sbb
movsl
stos
flds
ljmp
adc
add
into
fucom
jecxz
ret
pop
movsl
sbb
mov
adc
and
sahf
mov
xchg
add
adc
xlat
push
mov
pop
cs
fs
adcb
movsb
outsl
sti
and
inc
movsl
movsb
cld
movsb
and
push
mov
leave
mov
dec
pop
jno
cmp
fdivp
jle
lds
lock
jo,pn
lret
lahf
jo
rolb
movsb
nop
insl
inc
mov
mov
pop
lods
cmc
mov
adc
jo
mov
stos
enter
jp
xchg
pop
andb
cs
inc
ficomps
add
mov
sub
inc
and
clc
xchg
mov
popa
fnstcw
mov
sub
mov
icebp
iret
push
and
push
repz
dec
pop
pop
loopne
mov
jnp
inc
hlt
cmc
xchg
or
mov
push
inc
ss
sbb
dec
adc
mov
std
js
test
jge
push
push
ljmp
int3
adcl
outsl
mov
nop
ret
jmp
out
mov
add
xlat
inc
bound
inc
fwait
pop
mov
mov
lcall
xchg
xor
add
jns
nop
mov
adc
adc
in
or
and
fwait
pop
or
push
rol
rcrb
mov
aas
dec
add
jns
mov
xchg
sub
mov
mov
lock
stos
push
and
xchg
lock
sub
cmc
sbb
pop
outsl
jmp
xchg
jl
jg
mov
loop
inc
inc
sarb
int
rolb
rclb
roll
add
aad
loop
mov
cmpl
pop
stos
sbb
lcall
adc
cs
ret
add
push
and
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
jmp
jnp
add
xor
test
cmpsl
xor
adc
mov
xor
jnp
je
cmp
push
cld
arpl
aaa
fnstcw
sub
push
xchg
mov
testb
inc
jg
repz
outsl
mov
imul
mov
je
mov
and
std
out
dec
adc
adc
test
jg
mov
xchg
idivl
test
lock
adc
push
iret
adc
push
daa
dec
mov
dec
cmpsl
push
fisubrs
xor
out
mov
inc
or
jno
iret
movsl
aad
popa
shl
popa
in
jbe
jb
lcall
jns
cmp
xchg
icebp
movsb
push
and
leave
call
sti
xchg
cld
daa
daa
dec
shll
stos
mov
movsl
js
mov
mov
adc
and
mov
pop
push
daa
add
in
add
testb
mov
outsl
adc
xor
xor
push
sbb
jg
cmp
fistps
dec
hlt
imul
mov
stc
inc
lahf
mov
sahf
xlat
ljmp
aam
add
and
xor
shll
test
pop
xor
in
out
pop
push
aaa
jbe
mov
mov
cmpsb
adc
add
dec
jl
xor
imul
arpl
lods
add
jecxz
sub
xor
clc
out
and
xchg
pop
xor
rcrb
pop
sahf
call
push
jns
mov
jbe
mov
lret
xchg
dec
sub
mov
xchg
xchg
scas
scas
mov
or
fidivl
mov
jae
lds
jbe
sub
std
pop
outsb
mov
adc
adc
out
rolb
iret
loopne
sbb
sbb
sbb
test
xchg
fistpl
cs
ja
sbb
sub
leave
test
push
and
pusha
cmp
movhps
imul
inc
mov
push
cmpsl
mov
aaa
cmp
test
out
pop
loopne
insl
divb
xor
inc
dec
or
sbb
push
xor
inc
xchg
cmp
stc
and
push
add
popf
jne
out
xchg
adc
shl
jns
loop
popa
adc
push
jne
stos
xchg
jmp
mov
mov
pop
lods
sbb
dec
pop
gs
inc
lods
add
cmp
inc
inc
repz
loop
shrl
mov
inc
ret
jge
sbb
jp
es
icebp
repz
jp
insb
lret
lahf
rol
cmc
jmp
fimuls
addr16
cmpsb
push
scas
adc
and
cmc
arpl
cmp
inc
pop
mulb
dec
shlb
dec
leave
hlt
cmc
std
xor
mov
mov
inc
dec
sahf
in
or
inc
orl
cmc
test
push
cmpsl
das
outsl
in
clc
push
mov
or
popf
lods
mov
add
testl
rcrb
arpl
gs
movsb
jo
push
xchg
lods
test
jbe
dec
xchg
mov
mov
test
ss
out
sti
mov
pop
xor
dec
jp
jnp
enter
sbb
aam
ljmp
shrl
pop
js
cmc
cs
leave
and
cld
push
jno
pinsrw
dec
cmp
xlat
lret
sbb
sub
jp
mov
hlt
sbb
shlb
cmc
in
cmp
sbb
jmp
ret
sub
fnsave
add
dec
out
sbb
rorl
rorb
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
jmp
popa
rolb
and
loopne
insb
sti
das
mov
adc
push
xor
testl
repz
dec
sub
rclb
lret
nop
mov
push
in
cmp
add
push
mov
ret
jnp
mov
aas
or
sahf
push
les
rorl
sbb
rclb
mov
sti
cld
aas
xchg
sub
mov
inc
out
cmp
cli
xlat
pop
fcoms
loope
xor
popf
mov
scas
ret
popf
shll
add
test
mov
insb
test
lcall
mov
ja
js
jne
in
xor
loope
or
inc
push
in
jge
lock
mov
ja
scas
faddp
jne
stc
mov
arpl
or
jno
pop
jnp
or
arpl
xchg
pop
mov
lds
jno
out
mov
fisubrs
pusha
lock
or
inc
popa
mov
cmpsb
mov
push
sub
cli
mov
fwait
sub
test
mov
mov
in
leave
cmpsl
dec
in
add
jmp
pop
lahf
js
sbb
jg
outsb
lret
mov
loop
out
push
push
jb
int3
std
stos
adc
sub
test
lods
cmpl
fstpl
pop
sbb
or
mov
adcl
pop
lcall
insb
icebp
ljmp
inc
mov
mov
adc
dec
leave
adc
cmp
daa
mov
imul
xchg
jecxz
ret
jmp
mov
or
push
mov
insl
movsb
roll
xchg
mov
pushf
into
enter
sub
mov
lahf
cltd
sub
lock
shl
inc
mov
push
clc
roll
jecxz
inc
or
dec
push
fwait
popf
insb
sahf
lods
dec
add
sub
test
push
inc
loop
xor
pusha
xchg
push
mov
nop
ret
int
mov
xchg
mov
mov
sub
and
sub
jne
pop
scas
insb
mov
stc
pop
icebp
push
or
outsl
push
xchg
pop
xor
aaa
mov
aad
push
es
sub
sahf
pop
sbb
xchg
aam
cmp
aaa
add
je
addb
mov
cmp
repz
pusha
mov
inc
cmovns
xor
ret
sub
fsubs
mov
out
call
xor
mov
jns
mov
sahf
jne
jne
js
pop
mov
pop
cwtl
mov
pop
les
push
out
filds
pop
or
push
inc
les
adc
out
test
dec
mov
cmp
sbb
cmp
dec
movsl
aas
fs
sbb
daa
xchg
fwait
and
shlb
stos
or
jmp
arpl
clc
add
dec
jl
add
pop
repz
or
dec
cmp
add
pop
push
jg
mov
or
push
shl
mov
mov
fidivrs
aas
xchg
inc
mov
cmpb
inc
push
andb
aaa
mov
cmp
pushf
pop
push
cltd
scas
stc
push
idivl
cli
or
lahf
jns
cltd
orb
dec
mov
popf
loop
jno
xor
lock
lds
push
andl
cmc
mov
jb
inc
pushf
call
int
inc
jns
jmp
mov
sub
imul
mov
imul
ds
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
jmp
test
push
cmpsb
inc
sbb
cltd
adc
mov
fsubs
adc
adc
pop
loopne
lods
cmp
cmc
push
out
xchg
mov
sete
dec
jl
mov
cmpl
test
mov
imul
dec
enter
call
leave
add
sbb
stc
and
addl
pop
cmp
xchg
out
jmp
mov
mov
fcmovne
stos
sbb
outsb
cmp
pushf
aam
sti
fcomps
int
cmpsb
dec
dec
adc
lods
mov
sbb
incb
test
sbb
xor
movsb
and
inc
mov
fsts
add
retw
fisttps
fcomps
jbe
aas
push
add
push
jns
jo
fidivs
data16
jecxz
jno
shlb
cmp
dec
dec
jl
aad
aam
mov
shrl
xchg
mov
dec
cmp
jge
inc
mov
nop
test
xchg
fwait
push
fisttpl
mov
sub
pop
das
pop
pop
sub
nop
sub
jnp
in
popf
pop
inc
in
jmp
fdivrs
jp
in
test
fcompl
pop
das
cmp
leave
iret
fnstcw
dec
mov
inc
loop
push
dec
cli
sub
test
dec
test
mov
ret
sbb
push
or
jge
daa
xchg
jb
or
imul
lock
adc
jecxz
pop
je
jl
pop
jmp
pop
or
idivb
push
xlat
in
sti
mov
mov
aam
dec
jge
push
sahf
mov
lret
adc
cmp
push
xlat
dec
xchg
outsb
sub
mov
mov
sub
lret
fwait
ss
adc
mov
imul
dec
out
and
mov
dec
dec
xor
gs
inc
loopne
aad
cmc
sub
fisubs
mov
aaa
jno
dec
pop
outsb
sub
mov
xchg
jge
in
jg
inc
sbb
insl
jnp
pop
pop
push
popf
push
sub
adc
or
ljmp
fucomp
es
lret
pop
pop
iret
mov
insb
mov
lock
mov
xor
daa
mov
outsb
xchg
or
push
aam
in
clc
jp
inc
loopne
enter
inc
popa
push
dec
push
mov
dec
push
adc
icebp
push
fcmovu
adc
cmpl
rcrb
mov
mov
fsubrs
xor
and
mov
std
xchg
cmpsl
sub
jno
mov
clc
pushf
ret
cwtl
lret
push
jae
mov
cmpsl
fstpt
jecxz
sbb
stos
pop
dec
sysret
and
je
fidivl
pushf
push
outsl
mulb
and
push
daa
roll
lods
mov
jno
sbb
mov
sahf
inc
mov
add
call
sub
or
dec
js
cmp
mov
jns
int
int
lea
adc
add
adc
inc
push
cmc
xchg
cwtl
inc
pop
andb
sbb
push
sahf
popa
outsb
fwait
ret
dec
fildll
mov
xlat
xlat
shrl
add
stc
adc
lods
pop
lcall
add
cmp
dec
add
pop
mov
push
test
stc
xor
mov
rcr
leave
cmp
movsl
daa
inc
push
and
clc
in
jns
sub
pop
pop
aad
fcmovb
push
sahf
or
pop
lcall
cmpsb
adc
or
dec
test
dec
ljmp
cmpsb
jb
lret
scas
out
mov
call
mov
mov
mov
jmp
or
mov
adc
repz
stos
adc
adc
push
call
lret
dec
mov
daa
shl
divb
sbbb
lret
and
cmc
repz
es
push
mov
addr16
dec
adc
pop
andl
dec
pop
jnp
cmp
add
repz
hlt
xor
xlat
sbb
cmp
xchg
roll
ds
adc
dec
pop
mov
xor
mov
pop
jns
insl
movsb
scas
xor
test
inc
add
aad
divl
mov
gs
lret
shlb
jo
rcl
push
sub
scas
adc
mov
dec
jmp
ret
mov
or
mov
iret
incl
into
sahf
pop
std
rorl
movsb
daa
arpl
push
jp
popa
mov
cmpsl
addr16
xor
xor
push
int
mov
rorb
mov
in
mov
arpl
xor
lods
and
pop
pop
mov
jbe
je
lret
fdivs
mov
jns
movsl
js
sub
jle
out
sub
add
pop
and
fdivrs
jb
mov
in
stc
aaa
inc
cli
cmp
push
and
fisttpll
bound
mov
adc
into
xor
daa
push
pop
mov
hlt
testb
mov
mov
dec
loop
icebp
mulb
icebp
jno
pusha
lods
cmp
lcall
test
xor
nop
pop
icebp
out
or
push
in
mov
jae
add
mov
sbb
cmpsb
rclb
push
test
cmp
and
in
sub
or
movsl
aaa
loopne
call
jb
fmuls
mov
inc
push
push
or
sub
pusha
fcompl
mov
cwtl
sbb
stos
in
push
fbld
test
push
push
inc
mov
outsl
insl
lods
adcb
add
push
xlat
mov
clc
insl
subb
dec
dec
lahf
popa
orb
mov
bound
fists
pop
mov
mov
data16
fcmovnb
cmc
in
dec
lods
pusha
iret
jl
lea
adc
icebp
or
mov
ja
pop
inc
rorl
dec
repz
add
dec
mov
lds
lock
or
insb
sub
pop
stos
lods
shrl
fisttpl
lret
fisubl
rcrb
xor
xorb
stos
lahf
adc
fcmovb
int3
addr16
mov
dec
fiaddl
cmp
in
xchg
hlt
jb
inc
push
rcr
repnz
mov
xchg
popa
cmp
mov
jg
dec
sbb
mov
hlt
fwait
insl
pop
lds
stos
or
in
lods
fwait
mov
pop
sub
pusha
pop
rcl
out
pop
sub
jo
popf
and
adc
test
in
call
push
ds
dec
dec
ffreep
out
or
scas
rcrl
mov
fs
mov
dec
pop
jecxz
in
cltd
cmpsb
jge
cmp
or
pop
xor
mov
mov
cmc
das
xor
int3
loopne
seto
inc
popa
out
xlat
repnz
push
sbb
mov
daa
or
or
cld
mov
push
jbe
testb
je
jno
pop
ret
xor
mov
xchg
iret
in
and
push
xchg
lcall
fcomip
mov
jo
sub
aam
push
addl
add
mov
insb
mov
shlb
decl
lock
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
jmp
insl
into
leave
mov
jne
lret
lahf
ret
adc
adc
fs
add
push
xor
jne
sbb
shll
pop
ds
fst
mov
pop
mov
fmuls
scas
adc
mov
ja
and
dec
fcompl
out
xor
fdivl
test
mov
sub
leave
fdivrp
mov
lods
leave
dec
subb
popa
fcmovne
lock
insl
testb
adc
and
jmp
pop
test
push
adc
jae
idivb
les
in
lcall
mov
jnp
sahf
mov
or
int
aaa
bound
sub
mov
popf
mov
ds
lahf
iret
xor
and
mov
xchg
push
out
dec
fcmovnu
jge
sarb
repnz
bound
mov
mov
dec
inc
in
sub
iret
and
leave
out
out
repz
xchg
arpl
sub
mov
mov
fxch
xchg
outsl
mov
mov
xor
xchg
push
push
sahf
push
adc
imul
pop
inc
repnz
xchg
dec
test
xor
fbstp
jb
lods
pop
mov
jno
aaa
dec
push
push
nop
lds
loop
pop
bt
mov
fdivrp
iret
mull
dec
decl
jle
fmulp
dec
cmpsl
popf
iret
inc
imul
mov
lds
and
mov
popa
cmp
mov
lods
pop
xor
dec
out
loopne
push
popa
inc
and
add
sbb
inc
jl
pop
add
push
out
test
jecxz
stos
xchg
fsubrl
jae
test
and
out
dec
mov
sbb
bound
into
xor
stos
out
cmpsl
and
nop
cmp
jne
and
pop
jecxz
mov
popa
dec
push
insl
mov
push
and
lahf
mov
int3
imul
arpl
inc
lods
sub
popa
or
adc
ds
lahf
popa
in
inc
adc
push
inc
ja
xchg
imul
cmc
rorb
into
push
jg
mov
divb
push
xchg
dec
pop
mov
int
pop
xor
leave
dec
fs
fwait
jmp
lret
pop
jecxz
cmp
data16
cmp
xchg
mov
cmp
push
mov
int
xchg
pop
loope
jl
test
orl
adc
lea
cmc
cs
mov
push
repnz
aad
clc
mov
scas
stc
jp
loope
fcoms
imul
or
and
xor
push
mov
insb
adc
dec
mov
in
jae
mov
or
or
mov
outsb
popa
cli
add
notl
and
das
jmp
pop
roll
xchg
pop
xor
lret
or
sub
dec
aas
movsb
xchg
mov
fnstsw
outsb
inc
pop
jg
inc
xchg
xchg
dec
insb
push
mov
and
push
fnstsw
fwait
cmp
jae
sbb
jmp
fwait
loopne
xchg
inc
push
enter
sub
stos
in
xchg
sbb
pop
xlat
repnz
and
jae
xor
cltd
add
loopne
inc
push
xor
hlt
cmp
shlb
mov
stc
mov
mov
sarb
xor
add
add
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
mov
xchg
pop
mov
dec
mov
mov
adc
mov
inc
mov
jecxz
and
cwtl
aaa
mov
lcall
jge
cmp
mov
sarl
shlb
ljmp
adc
popf
out
aad
mov
es
mov
push
cmp
push
shr
rorb
leave
xor
and
fidivl
dec
pop
mov
push
cwtl
ss
xchg
addr16
jb
cmpsb
push
bound
rorb
push
mov
push
cmpsb
push
push
shlb
mov
popa
sbb
cmp
adc
test
sbb
cmp
int
ja
xchg
or
mov
loope
mov
inc
leave
dec
cmpsl
dec
sbb
negb
or
or
add
xor
popf
jb
incb
pushf
test
cmp
push
cmp
xchg
lcall
mov
cmp
popf
jecxz
dec
pop
fistl
push
aad
addr16
mov
test
add
jg
in
test
or
jg
jno
je
sub
addb
inc
jbe
xchg
daa
sub
mulb
fnstsw
roll
ds
inc
es
in
jl
stos
daa
mov
pop
xor
arpl
aas
xchg
pop
es
enter
and
sbb
imul
add
add
fmuls
cli
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
cmpl
movl
notl
movl
jmp
mov
jg
pushl
pushl
push
call
adcl
orl
adc
sbbl
orl
addl
notl
push
movzbl
sub
mov
or
jne
mov
and
mov
mov
sbbl
xor
div
sub
mov
mov
and
mov
div
notl
mov
jmp
xor
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
cmpl
movl
je
and
add
movzbl
mov
mov
mov
pop
pop
pop
leave
ret
movl
cmp
movl
jae
cmp
jae
subl
shld
movl
shl
ret
cmpl
mov
mov
jmp
movl
je
pushl
push
call
xorl
adcl
sbb
and
xor
adc
adc
mov
xor
and
shl
ret
xor
xor
ret
