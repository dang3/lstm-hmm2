push
mov
sub
xorl
push
movzwl
sub
mov
push
push
andl
call
test
movl
je
adcl
xor
jmp
push
push
xor
andl
inc
push
push
call
xorl
test
movl
je
xor
movl
jmp
sbbl
push
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
push
subl
push
movl
push
call
andl
test
jne
push
push
adcl
call
test
movl
jne
push
push
call
xorl
test
jne
addl
push
andl
push
addl
call
test
movl
jne
push
xorl
push
push
subl
call
notl
test
movl
jne
push
push
adcl
push
call
test
jne
xorl
push
andl
push
subl
call
subl
test
jne
push
push
andl
call
test
movl
jne
andl
push
sbbl
push
addl
call
test
movl
jne
push
andl
push
push
call
orl
test
jne
addl
push
andl
push
push
andl
call
xorl
test
jne
push
push
xorl
call
movl
test
movl
jne
subl
push
xorl
push
andl
call
test
movl
jne
subl
push
adcl
push
xorl
call
test
movl
jne
push
xorl
push
push
decl
call
test
movl
jne
push
push
adcl
push
sbbl
call
xorl
test
movl
jne
push
orl
push
call
test
movl
jne
andl
push
push
addl
call
adcl
test
jne
push
push
orl
call
test
jne
push
push
addl
push
call
subl
test
movl
jne
push
addl
push
push
xorl
call
movl
test
jne
push
push
call
andl
test
movl
jne
orl
push
push
negl
call
orl
test
movl
jne
subl
push
push
call
test
jne
xorl
push
push
sbbl
push
adcl
call
xorl
test
movl
jne
sbbl
push
push
xorl
push
addl
call
sbbl
test
jne
orl
push
push
adcl
call
test
jne
sbbl
push
adcl
push
xorl
call
test
movl
jne
addl
push
subl
push
xorl
call
addl
test
jne
xorl
push
notl
push
andl
push
call
test
jne
push
push
push
xorl
call
sbbl
test
movl
jne
movl
push
addl
push
call
test
jne
andl
push
xorl
push
call
subl
test
movl
jne
push
push
call
orl
test
jne
subl
push
adcl
push
push
andl
call
addl
test
movl
jne
addl
push
push
adcl
push
call
adcl
test
movl
jne
subl
push
push
subl
call
subl
test
movl
jne
adcl
push
adcl
push
call
orl
test
jne
subl
push
push
call
orl
test
movl
jne
push
push
push
orl
call
test
jne
push
movl
push
movl
push
call
test
movl
jne
movl
push
xorl
push
call
test
movl
jne
push
subl
push
subl
call
addl
test
movl
jne
subl
push
push
call
subl
test
movl
jne
sbbl
push
adcl
push
adcl
push
xorl
call
andl
test
jne
movl
push
xorl
push
xorl
push
andl
call
adcl
test
movl
jne
subl
push
addl
push
subl
call
xorl
test
jne
addl
push
push
adcl
call
test
jne
push
addl
push
call
orl
test
movl
jne
subl
push
push
andl
push
xorl
call
adcl
test
movl
jne
push
movl
push
push
call
addl
test
movl
jne
movl
push
subl
push
call
test
movl
jne
push
push
call
addl
test
jne
addl
push
subl
push
call
test
movl
jne
sbbl
push
xorl
push
addl
push
addl
call
movl
test
movl
jne
andl
push
push
push
call
sbbl
test
movl
jne
xorl
push
adcl
push
adcl
call
addl
test
movl
jne
adcl
push
adcl
push
call
test
movl
jne
adcl
push
xorl
push
subl
call
xorl
test
jne
push
adcl
push
push
andl
call
andl
test
jne
push
push
subl
push
call
test
jne
push
push
sbbl
call
test
movl
jne
subl
push
push
call
test
movl
jne
adcl
push
subl
push
andl
call
test
movl
jne
andl
push
orl
push
orl
push
adcl
call
andl
test
jne
orl
push
push
push
call
sbbl
test
movl
jne
sbbl
push
push
call
sbbl
test
movl
jne
sbbl
push
orl
push
call
test
movl
je
subl
xor
movl
jmp
or
movl
movzbl
add
mov
dec
mov
mov
mov
mov
sub
imul
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
sbbl
lea
mov
mov
and
mov
lea
mov
subl
mov
mov
orl
mov
mov
mov
adc
xor
mov
add
movl
mov
mov
mov
cmp
jne
xor
mov
mov
orl
mov
or
xor
and
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
sub
mov
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
xor
xor
add
mov
sub
mov
mov
sbb
mov
mov
orl
mov
mov
decl
mov
subl
mov
andl
mov
mov
addl
movl
adcl
mov
andl
xor
add
movl
jmp
add
mov
adcl
mov
xor
subl
lea
push
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
sub
mov
adcl
xor
lea
push
addl
mov
pushl
xorl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
xor
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
andl
mov
xor
mov
addl
xor
xor
andl
add
mov
negl
xor
lea
movl
mov
movl
cmp
movl
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
adcl
inc
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
movzwl
xor
mov
mov
sbb
push
mov
sbb
mov
mov
mov
add
xor
add
mov
subl
push
mov
add
movl
cmp
movl
je
inc
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
sbb
mov
xorl
xor
xorl
xor
addl
add
add
movl
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
jmp
jmp
iret
push
jae
lret
xchg
mov
lods
push
lods
jp
jp
xlat
pop
jp
adc
and
imul
xor
fsub
push
dec
imul
pusha
insl
pop
iret
pop
dec
and
jg
jo
jg
mov
fdivr
push
jg
in
cmp
mov
mov
mulps
fldl
push
cli
sbb
imul
adc
cmpsb
jmp
enter
cli
js
arpl
cwtl
pop
mov
repz
cmp
jae
fisubrl
push
jecxz
mov
mov
in
push
dec
or
repz
rolb
push
push
movsl
stc
push
or
or
mov
push
negb
xchg
in
inc
shll
rsqrtps
jbe
aam
pop
dec
adc
lods
jo
mov
ret
lea
inc
jbe
xchg
insb
das
xchg
cmp
scas
ret
cmpsb
inc
sub
xchg
enter
sbb
pop
ret
mov
cli
mov
mov
xchg
fdivrs
push
pop
or
nop
incl
pop
cmp
inc
popa
mov
mov
mov
les
sub
shrb
add
ficomps
daa
and
fsubrl
and
popf
orl
sbb
lahf
gs
popa
adc
stos
enter
bound
addr16
aaa
or
pop
add
xchg
adc
popf
add
loop
xchg
fisttps
insl
addl
outsl
aas
cmp
sub
loop
cmpsb
cmp
push
fstps
fsubrs
dec
gs
mov
iret
pop
mov
pop
ds
cmp
imul
push
addr16
xor
dec
xchg
rolb
sbb
inc
movl
push
mov
test
call
ret
pop
adc
aam
lret
jbe
mov
or
xchg
pop
or
outsb
sub
jbe
add
pushf
push
mov
jmp
bswap
add
adc
mov
pop
xorb
or
mov
test
test
sub
bswap
dec
dec
lcall
das
xchg
jo
jp
rolb
movsb
icebp
mov
mov
int3
pop
lahf
cmc
pusha
push
jae
xchg
ss
ret
ljmp
outsb
and
cmc
add
rorl
adc
stos
mov
and
dec
mov
inc
loopne
add
mov
xchg
es
mov
repnz
cmp
mov
cmp
push
jge
jge
fildl
sub
cmp
sub
mov
cwtl
je
scas
lock
repz
sub
jle
jle
pop
popf
test
cmp
test
push
push
xor
stos
dec
sbb
add
cmpsl
add
inc
pop
subl
popf
xor
sub
sub
cmp
insb
loopne
in
mov
nop
xor
or
push
lods
call
pop
xor
js
pop
mov
push
std
test
pop
mov
repz
add
imul
lds
mov
mov
inc
cmp
mov
test
pusha
mov
push
inc
aad
das
xor
pop
and
inc
sub
mov
pop
fbstp
out
jle
imul
pop
or
out
in
clc
xchg
mov
xor
insb
cmp
jns
lods
and
notb
orl
fwait
in
mov
les
inc
inc
cmp
ja
test
mov
mov
in
loopne,pt
sbb
dec
out
dec
push
aas
in
dec
push
cmpb
xchg
push
stc
jle
cli
xchg
cmp
mov
in
mov
pop
mov
cmp
pop
mov
fsubr
dec
jmp
lods
sbbb
xor
mov
aaa
sub
iret
fstpt
ret
scas
andl
sbb
stos
mov
pminsw
cwtl
je
add
iret
push
test
jo
mov
inc
mov
in
pop
jmp
jne
pop
xchg
mov
cwtl
popa
sbb
add
jmp
ds
pop
es
mov
fstps
es
jnp
or
mov
test
mov
xorl
xor
lds
ljmp
dec
jmp
sub
in
jl
mov
and
add
les
jae
xlat
sub
jle
jno
push
vmovd
repnz
jle
mov
fadds
mov
add
ret
subl
in
dec
fisttps
loope
insb
pop
xlat
mov
xchg
negl
out
outsl
mov
mov
dec
rorl
mov
or
in
jmp
push
scas
or
cmpsb
lahf
and
mov
jo
inc
dec
decl
popf
and
xchg
sbb
push
test
push
mov
fbld
lods
xchg
mov
hlt
push
fstp
xchg
inc
cltd
lds
imul
jle
fdivrs
mov
dec
xlat
cwtl
pushf
inc
mov
mov
sub
mov
rclb
sbb
daa
and
add
enter
mov
adc
adc
adc
mov
imul
clc
pusha
pop
adc
aas
and
inc
out
lret
add
pop
lahf
rolb
loop
rcl
mov
or
sub
sahf
pop
js
addr16
pop
jecxz
jb
jo
jg
imul
jl
mov
scas
lods
scas
sbb
ds
ljmp
aam
in
pop
add
icebp
clc
dec
ficoms
jp
xchg
ficomps
push
pop
aad
pusha
dec
es
jle
jnp
aas
cmp
lods
pop
or
fsubp
fbld
call
pop
sub
sub
jnp
sbb
addr16
and
mov
adc
data16
dec
int3
cmp
dec
xchg
fldt
push
imul
fbld
mov
add
xchg
xchg
ja
les
jg
insl
nop
sarl
add
sub
fld
sbb
jns
cmpsb
or
repnz
std
add
leave
rol
adc
lcall
adc
iret
testb
mov
fwait
out
cmpsb
popa
in
sub
fs
pushl
cwtl
or
lds
rcrb
ljmp
cmpsb
add
add
sub
jo
adc
lahf
xor
jg
dec
loope
mov
dec
fisubs
jecxz
in
jnp
jl
insb
dec
xor
and
sti
adc
xchg
in
mov
data16
mov
and
adc
xorl
sbb
pop
out
mov
arpl
pop
bswap
or
sub
ja
fnsave
lret
mov
popf
adc
ss
repz
inc
pop
add
jae
jo
in
jp
cmpsb
sarb
adc
les
addb
fld
loopne
fsubrs
outsl
pushl
lahf
dec
mov
xchg
adc
cwtl
mov
xor
lods
sarl
add
cmpl
mov
imul
adc
mov
pushf
bound
jg
insl
jmp
dec
push
xchg
stos
cs
cli
pop
pop
add
adc
adcl
lds
cltd
mov
and
and
cs
mov
lock
test
push
jle
sbb
in
in
dec
into
cmp
ret
jl
fcomps
adc
lea
adc
insl
lods
shrb
rcrl
fistl
xor
imul
imul
sarb
ret
arpl
ja
xchg
lock
imul
jnp
addr16
lret
or
xchg
js
sti
mov
sbb
or
in
push
ss
jo
int3
push
pop
aas
es
popf
sub
mov
test
frstor
push
adc
jmp
push
cmpsl
jnp
pop
pushf
loop
mov
popa
out
std
aaa
insb
out
or
push
stos
mov
cmp
xor
push
push
xor
cmc
call
jb
jmp
xlat
or
jp
mov
add
mov
xor
pusha
js
inc
cmpb
mov
imul
fidivrs
lret
and
mov
aam
mov
or
mov
cld
dec
test
cwtl
sbb
xor
jno
xor
ret
test
movsb
es
sbb
dec
movsbl
stc
repz
daa
xchg
dec
pusha
mov
push
adcb
push
sub
mov
mov
mov
out
int3
mov
xchg
push
mov
mov
lret
push
sahf
inc
xchg
pop
fincstp
xor
add
cmpsl
loop
insb
mov
push
jae
push
in
mov
movsb
mov
adc
cs
mov
and
jle
and
shll
dec
inc
mov
addr16
je
xchg
mov
int3
xor
push
sbb
fmull
fdiv
mov
mov
mov
xor
arpl
cmc
pop
testb
add
mov
lret
xchg
out
in
repz
pop
inc
pop
sbb
shrd
cltd
mov
sar
adc
mov
test
mov
push
inc
test
pop
movsb
jle
out
in
mov
or
and
jne
push
add
mov
stc
add
mov
mov
aam
inc
test
pusha
ljmp
push
enter
lahf
test
ret
xorb
nop
xor
je
out
lret
lret
pop
rcll
repz
cmc
mov
or
add
fcomp
mov
imul
or
in
lret
inc
popf
shlb
mov
rcrb
mov
push
mov
std
in
and
xchg
notl
mov
push
jg
lcall
push
xor
out
dec
push
rorl
jge
mov
push
shlb
pop
mov
icebp
and
scas
inc
jne
out
push
cs
jae
xchg
popf
mov
inc
fistl
repnz
insl
mov
ret
fsubrs
jle
out
push
xor
sbb
lahf
data16
mov
dec
and
loope
addr16
sub
mov
test
es
icebp
mov
cmp
addr16
std
xor
je
loop
loope
imul
push
outsl
shlb
or
add
dec
jecxz
insl
mov
outsb
fildll
or
pop
fildll
push
sti
mov
fisttpl
rolb
pop
jne
sub
lahf
mov
in
iret
test
jns
xor
std
mov
shlb
or
jae
dec
jo
outsb
mov
dec
and
imul
add
popa
int
lret
jmp
jp
sub
adc
sbb
repnz
pushf
inc
movl
je
add
mov
insl
xchg
pop
or
je
ja
aad
iret
repnz
adc
fiadds
loop
mov
pop
je
imul
rcll
xchg
cmpsb
dec
insl
lods
sub
jle
jp
mov
incb
lods
mov
repnz
dec
sti
inc
jae
mov
mov
lahf
push
pop
gs
or
push
cmp
sub
js
cld
push
cmp
xchg
or
lret
adc
in
sub
adc
cmp
jns
ss
mov
add
push
fldl
fidivs
jmp
sbbb
dec
js
fiaddl
sti
js
repz
adc
shll
xlat
mov
dec
pop
mov
int3
jb
push
out
cmpsb
push
cmp
jg
mov
or
ficomps
test
daa
repz
rcrl
push
sbb
out
insb
cs
out
shrb
lahf
sahf
mov
cmovne
pop
push
lock
pop
ja
cmpsb
mov
mov
add
inc
jae
mov
sbb
incb
xchg
push
es
xchg
dec
bound
add
fidivrl
sbb
adc
mov
das
lock
xor
lods
clc
or
adc
or
mov
sahf
inc
je
mov
idiv
inc
jb
fnstenv
jb
sub
mov
rorl
inc
fidivl
push
stos
es
popf
enter
insl
xchg
testl
ds
enter
rclb
inc
pop
clc
bound
ja
adc
push
into
lods
movsb
dec
xor
mov
cmp
push
mov
cli
das
add
inc
sbb
lods
mov
push
aam
scas
es
lods
pop
jg
dec
pop
enter
int3
in
sub
iret
movsb
inc
rolb
das
nop
test
ret
movsl
push
xchg
fwait
rorb
fnsave
sub
out
loopne
push
ljmp
jp
in
xor
mov
jp
stos
mov
inc
out
lds
aas
mov
fistpll
mov
xor
jne
sub
add
aam
popl
cmpl
mov
cmp
shl
dec
mov
repz
mov
xchg
jo
xor
lock
ljmp
mov
pop
add
fiadds
xchg
adc
or
outsl
fs
mov
push
ljmp
or
pop
orb
mov
and
add
pop
or
fistps
push
mov
mov
stos
fwait
push
push
fcompl
push
mov
jne
in
push
int3
sub
mov
sub
int
or
in
xchg
mov
cli
in
data16
adc
add
lds
mov
xlat
jb
and
jecxz
mov
loopne
jb
test
jp,pn
aaa
mov
outsl
sahf
loop
mov
imul
jmp
inc
sbb
pop
shlb
int3
mov
popf
fxch
es
fisubrl
repnz
push
fadds
movsb
loopne
shlb
cmc
hlt
inc
adc
das
cmc
push
out
xchg
jp
rcl
not
pusha
xor
xor
jmp
and
push
cmpsl
repz
dec
into
ds
imul
stos
dec
sbb
and
movsl
jge
jns
in
clc
and
xchg
cmp
push
mov
pop
dec
cmp
test
mov
sbb
mov
hlt
mov
sub
imul
push
fbstp
inc
xor
xchg
jmp
fdivs
cmpsb
mov
pop
add
jo
xchg
cmp
push
jecxz
push
adc
xor
inc
xchg
lds
pop
movsb
in
mov
inc
xor
mov
cltd
inc
sub
sbb
or
shll
pop
std
inc
xchg
mov
cmp
jge
mov
imul
cmc
dec
pop
adc
rsm
mov
outsb
into
xchg
arpl
mov
lods
outsl
pop
pop
stos
sub
dec
in
inc
sub
xor
push
fwait
mov
outsb
push
cld
push
repz
xor
lret
daa
add
mov
dec
add
push
icebp
es
loope
sub
ss
mov
int
shll
rcrb
xor
xchg
xchg
xor
push
cmpl
psubusb
inc
jno
jo
cmc
popf
sbb
cwtl
das
mov
scas
jo
popa
das
sbbb
les
ss
add
fs
lret
call
mov
lock
jecxz
out
fstp
or
cld
cmp
cltd
ja
pop
sub
xor
jmp
jno
fnstcw
push
adc
jge
dec
mov
out
cmpsb
inc
mov
cli
mov
sbb
and
rclb
dec
rol
cltd
movsl
cmp
das
popa
dec
inc
aam
into
notl
adc
dec
cmp
pop
and
jmp
jmp
bound
andb
push
scas
push
push
mov
je
std
jo
xchg
pop
addl
jge
pushw
xchg
or
pop
lods
add
scas
dec
pop
lahf
push
leave
or
jbe
dec
xor
loop
mov
mov
shlb
testl
clc
outsl
add
add
imul
pop
inc
inc
mov
test
ror
loopne
mov
xchg
and
insl
inc
shr
dec
sub
cmp
aas
inc
in
sub
xchg
int3
pop
dec
jmp
nop
lock
cmp
es
mov
repnz
jmp
mov
mov
jp
pop
lods
test
push
les
mov
das
jne
dec
adc
stos
fdivr
cltd
adc
cmpsb
js
and
loopne
movsl
outsl
cmpsb
mov
pop
sbb
aaa
jle
pop
dec
test
inc
sarl
aas
in
dec
xchg
mov
mov
push
mov
inc
mov
mov
js
inc
nop
pop
xor
adc
mov
mov
cmp
mov
mov
je
adc
mov
cmpsb
loopne
xor
xchg
mov
mov
dec
outsb
out
loope
push
mov
cmp
stc
xor
mov
test
mov
fsts
mov
out
mov
pop
rol
hlt
mov
mov
stos
imul
xchg
jl
xor
cmp
xchg
adc
add
add
and
dec
and
lret
jno
push
mov
xchg
add
repz
hlt
xor
cmp
sbb
mov
cmp
and
rol
sbb
mov
mov
aad
cmp
jle
mov
insl
aas
sbb
data16
pop
xor
ret
sbb
imul
sbb
inc
mov
rolb
dec
jp
push
rol
stc
sbb
icebp
in
mov
lret
dec
pop
ljmp
sbb
dec
push
cmp
stos
imul
add
loopne
lcall
sbb
add
loop
xchg
fisubrl
mov
xchg
push
xchg
out
mov
sbb
mov
lcall
mov
pusha
fadds
imul
out
shll
call
sahf
cmp
inc
mov
andb
mov
inc
lret
inc
loop
mov
pop
outsb
cmp
sar
mov
sub
rorl
push
mov
jne
aam
or
lods
mov
fs
dec
cmc
adc
imul
mov
jbe
jle
enter
sbb
adc
push
cmpsb
dec
into
popf
cwtl
adc
xchg
sub
lock
sbb
or
and
roll
jne
icebp
xchg
and
insl
pop
mov
pop
push
lods
push
out
jg
out
insl
cmc
jnp
mov
mov
jns
or
out
nop
cmp
loop
pop
or
inc
mov
rcrb
sbb
dec
pusha
jle
mov
frstor
sahf
ss
cmp
push
dec
cmp
dec
lock
xchg
mov
mov
adc
sub
pop
testb
outsb
pop
in
subb
in
scas
pop
push
inc
int
jnp
or
dec
imull
push
jl
or
jecxz
mov
push
xchg
mov
rcll
out
and
movb
mov
out
jp
push
je
aam
das
adc
xchg
sub
push
dec
dec
xchg
or
lock
or
sbb
aas
inc
jg
add
loopne
push
dec
imul
adc
enter
fcomps
adc
jle
fcmovnbe
push
shll
mov
push
xor
push
jb
test
add
dec
setb
add
push
pop
test
cltd
mov
imul
int3
add
jecxz
out
jns
ja
sti
daa
xor
aas
xor
mov
enter
shlb
adc
inc
jg
and
add
or
fwait
mov
fucomip
mov
inc
or
xchg
jne
jge
imul
sub
pop
loop
sbb
out
adc
dec
in
popa
lods
iret
lahf
inc
rolb
test
jle
and
cli
insb
cld
cmp
in
popf
rorb
xchg
xor
imul
sub
pop
clc
cmp
mov
pop
test
ds
cs
clc
inc
lret
data16
rcrb
aas
mov
adc
mov
jnp
fs
dec
sbb
es
dec
test
loop
jae
pop
inc
jmp
popl
mov
and
lret
aaa
clc
sbb
mov
and
jno
jp
scas
lds
xor
mov
movsl
cmpsb
add
outsl
and
pop
xor
fs
inc
popf
je
mov
pop
loopne
test
push
out
pop
mov
or
stos
xchg
sbb
dec
pop
push
jmp
dec
push
cld
fwait
inc
add
inc
cmp
lock
popl
push
mov
int3
outsb
dec
lcall
and
inc
add
lock
mov
jne
loopne
dec
lods
ret
loop
outsl
scas
mov
loopne
aas
pop
xor
dec
push
icebp
rcr
je
jns
gs
adc
rolb
addr16
pop
adc
pop
jne
call
xchg
inc
test
adc
xchg
cmpl
cwtl
push
lea
xor
mov
sbb
pushw
subb
xchg
jge
or
ljmp
add
mov
leave
outsb
mov
adc
add
cltd
sti
push
fs
cmp
cs
xor
ljmp
sbb
mov
push
sbb
call
xchg
pop
mov
jbe
push
mov
outsb
ss
stc
lea
shrl
cs
flds
imul
cmp
popa
les
jno
and
leave
xchg
cmpl
movsb
fisubrl
jl
inc
xchg
jge
sbb
mov
es
dec
fstpt
dec
mov
and
in
push
pop
ds
inc
xchg
int3
push
iret
sub
lock
out
xor
add
sbb
jp
xchg
testb
sub
jb
add
es
cmp
jp
xchg
xchg
adc
dec
cmp
lahf
je
mov
and
std
jns
mov
xor
push
sti
aad
ret
data16
mov
mov
fisttpll
pop
inc
xor
in
hlt
bound
popf
cld
pop
mov
insb
mov
mov
jae
out
pop
dec
movlps
arpl
repnz
pop
adc
jne
ja
inc
sub
and
lahf
jp
mov
filds
shll
mov
jbe
or
push
in
out
in
push
stos
add
push
mov
pop
push
xor
aaa
xor
xchg
lahf
addr16
adc
pop
and
sti
push
dec
addb
push
outsl
cmp
mov
xchg
sbb
sbb
mov
xchg
adc
es
rcrb
jl
jge
push
sub
dec
js
adc
xor
jns
dec
jb
adc
pop
jge
aas
test
cli
pop
push
sahf
jmp
btcl
lea
stos
cmp
out
loope
mov
xor
in
lods
mov
mov
sahf
lods
test
mov
insb
xchg
ljmp
push
insl
popa
daa
jo
loop
xor
or
pusha
mov
adc
and
xor
cmp
push
xor
lods
add
mov
inc
data16
insb
shrb
xchg
sbb
das
inc
adc
iret
shrl
mov
stos
or
ror
shll
call
inc
into
push
jne
mov
mov
xor
inc
fs
mov
roll
jno
call
lods
mov
js
cli
imul
jp
shll
lcall
cltd
hlt
lea
cmp
xchg
xrelease
les
lock
cmpl
insb
push
in
fmul
or
jo
mov
aas
add
stc
in
jp
mov
insb
data16
push
mov
negb
and
add
std
fcmovne
xor
inc
loope
mov
hlt
push
cmc
std
cmp
push
xchg
ret
dec
sub
imul
push
leave
fimuls
pop
mov
adc
mov
push
mov
adcl
jg
adc
cmpsb
iret
dec
xor
rcll
add
sqrtps
xchg
add
mov
test
mov
lock
imul
cmp
cmp
pop
mov
ficompl
ds
leave
popf
lods
dec
push
rolb
pop
sbbb
cwtl
hlt
pop
sub
testl
in
and
clc
ret
jge
xchg
cmc
es
push
loop
fdivrl
jl
es
aad
mov
scas
aad
in
or
mov
fstpl
xorb
mov
sahf
aad
pusha
xor
xchg
rcrb
std
mov
sbb
inc
fcomi
daa
sbb
xchg
pop
fsubrl
data16
mov
fcoml
adc
inc
push
jp
mov
mov
mov
aam
loop
xor
pop
cld
nop
ja
inc
das
jmp
pushf
mov
es
cli
or
bnd
mov
add
mov
inc
push
add
shrb
imul
aad
push
sbb
les
pusha
sbb
iret
mov
mov
dec
mov
rorl
cld
cmpb
xor
or
pop
adc
xor
mov
shll
push
jecxz
sub
fstl
inc
jp
std
xor
lret
cs
clc
scas
iret
sub
mov
and
shr
icebp
push
mov
dec
movsb
cmpsl
or
jle
fs
in
mov
and
aad
out
jecxz
sbb
push
xchg
ljmp
stos
scas
test
and
push
inc
mov
insl
xchg
lock
iret
pop
aam
mov
aam
lret
add
xchg
mov
subl
lahf
shlb
jl
aam
mov
js
mov
adc
fs
mov
popf
mov
rcrb
sahf
mov
fs
sbb
cmp
cmp
dec
xor
je
jmp
add
inc
xchg
arpl
mov
mov
ficompl
out
xchg
jl
iret
mov
mov
and
sub
mov
insl
fwait
inc
scas
pop
jge
pop
dec
inc
jl
adc
or
jb
fcmovbe
fisubs
cmpsl
sahf
mov
popf
orb
cmp
cmc
lods
sbb
pop
mov
jecxz
dec
fld
les
mov
or
jecxz
mov
repnz
test
mov
data16
das
aaa
out
jae
mov
push
fildll
aaa
lods
mov
jae
lahf
push
call
fisttps
jg
dec
add
pop
adc
fisttpl
pop
in
adc
mov
in
jle
cwtl
dec
cmp
repnz
jo
pushf
jl
pop
iret
xorl
jge
xor
andl
add
add
insb
push
sbb
cld
cmpsb
loop
rcr
js
pop
out
in
out
cmp
in
sub
in
or
and
shr
scas
dec
ja
mov
fidivrs
inc
xor
mov
fldl
xor
xor
add
mov
pop
int3
sarl
push
push
dec
es
cltd
mov
mov
sbb
pop
xor
push
xor
inc
and
dec
into
and
popa
in
sub
in
in
xor
stos
push
jne
lahf
xchg
scas
or
pop
insb
cmpsb
jmp
sbb
test
sbb
pop
fninit
outsl
outsb
sub
pop
dec
outsl
sar
xor
push
adc
or
inc
mov
scas
js
lds
into
mov
arpl
lock
mov
mov
sub
dec
stos
sbb
and
daa
jmp
scas
outsl
movsl
fwait
add
add
movsb
dec
repz
stos
jno
xor
das
xchg
in
shl
daa
cmc
test
jecxz
fwait
in
sbb
cmpb
pushl
xor
insl
subl
dec
or
add
jmp
mov
adc
lods
sub
mov
adc
sbb
test
sbb
push
sub
stc
lcall
mov
and
inc
or
mov
add
pop
addr16
lods
push
jmp
hlt
into
dec
sub
lret
dec
shll
and
es
sbb
loope
or
sbb
dec
sbb
out
pop
push
fs
and
mov
mov
adc
in
dec
dec
js
mov
lret
jmp
sub
mov
pop
imul
or
jg
mov
sub
push
fnsetpm(287
xchg
mov
jno
cmp
sarb
out
mov
mov
unpcklps
sahf
push
popf
dec
ds
imul
cmp
dec
sub
xor
cmpsb
sub
fcoml
mov
jo
sahf
pushf
stc
cli
stc
fcomps
sub
mulb
aam
xor
sarl
jl
lea
pop
xlat
repnz
sahf
lds
sar
jns
xchg
cltd
cmp
mov
pop
les
imul
xor
mov
add
out
xchg
clc
jmp
pop
repnz
lods
and
or
cld
lds
cmp
cmp
orb
iret
jle
ss
inc
inc
pop
insb
stos
jl
fadd
pop
xchg
xchg
not
adc
fidivrl
mov
filds
jg
iret
fcoml
sub
xor
das
jle
jb
repnz
push
enter
mov
nop
lret
loope
inc
mov
clc
sbb
jmp
sti
adc
mov
cmp
inc
and
jbe
sti
sub
jb
or
mov
jecxz
xlat
loopne
rorb
lea
aam
xchg
mov
int
shrb
aad
adc
lcall
fcomps
mov
lcall
ficompl
sbb
cli
mov
adc
push
jo
jns
test
xchg
pop
jp
popa
push
movsb
das
xchg
xlat
sbb
in
loopne
and
sbb
jnp
cwtl
xchg
lcall
jle
mov
cwtl
push
jno
enter
ss
aad
popf
mov
lret
mov
pop
bound
jp
jae
pop
mov
inc
pop
mov
insl
lods
cs
xchg
lock
mov
fstl
pop
scas
out
mov
or
xor
loope
xor
and
xchg
sbb
pop
add
push
jbe
faddp
dec
xchg
push
test
sbb
push
jae
jb
loope
icebp
inc
fisubs
push
push
addl
call
fisttps
adc
lea
jmp
hlt
daa
call
popf
and
cs
aad
xor
dec
adc
lret
ljmp
add
mov
mov
shrl
aaa
fldl
and
push
mov
test
decl
stos
dec
adc
xchg
gs
push
pop
fucomip
sbb
jle
mov
dec
ljmp
xor
dec
pop
fcmovnu
xchg
lret
rcrb
mov
stos
and
movsl
sbb
inc
data16
inc
pop
sbb
mov
add
jae
or
push
pusha
mov
jg
pop
not
mov
mov
shlb
and
nop
add
mov
jp
fldenv
push
addl
ret
push
subl
sysenter
xrelease
in
icebp
jecxz,pn
idiv
xchg
xchg
lret
sub
int
mov
jmp
out
mov
sub
js
les
xchg
ret
xchg
sarb
or
adc
add
or
in
stos
lds
movsl
outsb
jae
xor
mov
insl
cmpsb
xchg
lcall
dec
movsl
cmpl
sar
sarl
pop
sti
repnz
mov
inc
sbb
mov
stos
adc
sub
cmp
test
xor
scas
imull
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
add
movl
sbbl
mov
xorl
mov
add
xor
cmp
movl
jne
mov
or
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
orl
add
mov
mov
mov
xor
push
mov
and
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
push
push
push
push
lea
xorl
push
push
movl
call
addl
push
call
adcl
movl
movl
mov
mov
addl
xor
orl
mov
add
mov
notl
mov
test
movl
je
inc
mov
andl
mov
dec
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
imul
movzbl
xor
mov
add
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
adcl
xchg
xor
mov
sub
sbb
mov
sub
xor
mov
and
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
andl
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
mov
xor
add
sub
mov
dec
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
or
xor
dec
add
mov
andl
sub
orl
lea
addl
xor
adcl
xor
cmp
je
mov
orl
xor
sbbl
add
cmp
movl
jne
andl
pushl
addl
call
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
push
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
adcl
mov
dec
xor
sub
mov
movl
add
movl
cmp
movl
je
addl
pushl
pushl
call
mov
sub
mov
mov
mov
movl
xor
orl
add
movl
cmp
movl
je
mov
mov
sub
sub
mov
mov
mov
and
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
jmp
or
xchg
loop
movsb
emms
adc
repnz
xlat
pop
jp
aaa
pop
jp
inc
and
into
or
jns
test
cmp
pop
jnp
es
pop
stos
xchg
pop
in
and
lret
stos
data16
fcoms
xor
loope
xor
scas
adc
jne
mov
fdivrs
adc
out
daa
push
int
mov
rol
int
test
mov
push
cltd
xchg
pop
aas
popa
push
sbb
push
inc
mov
ss
in
mov
jecxz
test
jp
push
inc
pusha
and
pop
push
push
push
jp
fldcw
push
sub
test
paddusb
bound
test
fdivrl
cs
pushf
dec
push
pop
ljmp
out
dec
sub
push
xor
sbb
stos
inc
pop
adc
imul
lods
cmp
mov
mov
stos
and
in
xor
add
ror
pushf
sbb
xchg
inc
fnstenv
push
repz
push
jnp
test
fildl
ret
ret
sub
mov
add
sub
mov
dec
je
divb
jo
sub
addl
in
movsl
mov
or
imul
arpl
stos
aad
adc
xlat
sarb
divb
fwait
mov
roll
mov
cwtl
jno
aam
jno
xlat
jg
cmpsl
and
inc
sub
add
pop
dec
inc
adc
daa
mov
adc
add
ja
aad
lock
sbb
pusha
push
cmp
stos
aaa
sbb
in
mov
loopne
xchg
sub
subl
sub
jg
lret
stc
inc
leave
rolb
jmp
pop
xchg
fidivrl
movsl
adc
lahf
mov
aad
outsl
sbb
aas
xor
push
dec
and
push
push
in
mov
push
or
jbe
fbld
and
jmp
iret
xchg
inc
cmpsb
inc
lods
jbe
xor
lahf
out
mov
popf
mov
pop
aaa
pop
frstor
mov
ret
das
mov
adc
sbb
jne
pop
push
sub
movsb
xchg
jmp
mov
mov
or
sbb
in
mov
mov
lret
fbstp
jne
pop
cmc
ljmp
mov
lock
data16
xor
insl
xchg
subb
mov
addr16
stos
xchg
inc
jnp
xchg
dec
add
dec
pop
push
sti
nop
push
inc
js
add
dec
inc
gs
icebp
push
push
push
xchg
mov
fidivrl
fisubrl
repz
mov
pop
cmpsb
pop
pop
dec
aam
push
mov
sub
sbbb
push
aas
mov
in
lret
repnz
jns
fsubs
or
dec
daa
sahf
fstpl
lea
in
cld
call
mov
rcr
inc
cli
inc
mov
sub
call
cmp
popf
loop
jnp
mov
test
lock
pop
bound
aas
ljmp
cli
lock
les
mov
fucomi
sbb
sar
or
pop
mov
dec
movsb
and
cld
jno
or
cld
cmp
imul
xchg
xchg
pop
pop
nop
repnz
fstl
mov
add
cwtl
pop
dec
mov
inc
cmpl
dec
push
mov
ret
and
push
mov
loopne
dec
sbb
fisubrs
icebp
or
repnz
mov
pop
notl
mov
pop
lea
pop
mov
sbb
ret
ret
mov
ret
xor
je
test
jae
jp
cmp
frstor
out
push
je
mov
shll
and
fists
xchg
mov
jb
aaa
int3
sahf
push
pusha
aad
je
mov
or
mov
sbb
mov
inc
aam
das
mov
outsb
jne
popf
data16
loopne
lcall
nop
mov
or
clc
sbb
outsl
adc
pop
shll
shll
fcomp
xor
or
popf
mov
inc
cmp
lahf
xor
lods
or
mov
repnz
jmp
inc
cwtl
mov
in
sar
jbe
push
movsl
sub
inc
push
push
scas
or
xchg
loopne
insl
add
inc
aas
cmp
dec
les
jg
icebp
lret
and
dec
adc
sarb
test
leave
jns
fisubrs
jnp
repnz
jb
lods
cmpps
xor
js
xor
push
icebp
fwait
test
pop
out
stos
inc
or
in
and
mov
enter
adc
dec
dec
leave
pop
jmp
call
inc
bound
sub
and
jo
xchg
mov
xor
out
std
es
xchg
and
sbb
out
iret
cmp
icebp
cmp
add
add
lret
lds
xor
push
mov
jmp
push
push
push
call
pop
xchg
inc
push
or
push
jno
in
popa
xchg
js
mov
mov
adc
adc
pop
bound
add
adc
rcl
mov
loopne
incb
push
mov
and
push
fdivrl
shll
out
adc
scas
xchg
mov
xchg
mov
outsl
mov
mov
je
out
fldt
dec
clc
pushf
jg,pn
mov
imul
iret
in
out
ss
push
mov
test
jne
enter
adc
add
movsb
cld
inc
and
je
lahf
mov
sub
xor
mov
aaa
cmpsl
and
insb
dec
jg
iret
cmp
imul
mov
xchg
xor
jno
lock
aaa
pop
shll
insl
popa
outsl
mov
push
fimuls
daa
dec
add
dec
sarl
mov
repnz
arpl
arpl
in
das
imul
lds
mov
adc
push
jecxz
out
movsb
shlb
cmp
or
lcall
and
push
mov
ljmp
jle
adc
lret
ud0
shr
pop
loopne
cmpsl
and
cmpsl
inc
pop
or
jnp
mov
jl
in
cmc
mov
imul
cld
jae
xor
add
xchg
inc
sbb
cs
pop
data16
mov
mov
mov
sbb
dec
in
stos
aas
cld
aam
add
mov
xlat
pop
pop
or
aam
jae
test
lret
dec
pusha
cli
xchg
dec
cmp
inc
mov
push
push
jle
subb
add
push
and
push
push
jns
test
lahf
cmc
and
pop
mov
and
inc
jge
sub
jne
enter
push
or
cmpps
add
and
pop
loop
andb
sbb
adc
int
and
rorb
inc
push
xchg
or
adc
cmp
jno
sbb
jge
mov
shll
jecxz
xor
adc
pop
cmp
out
or
jns
push
dec
xchg
add
in
sub
jnp
sarb
addr16
cmp
enter
sub
adcb
jg
or
xlat
mov
sbb
fs
loope
sarb
adc
xchg
int
push
cmp
mov
pop
mov
hlt
cmc
fs
push
cmp
lods
and
lcall
xchg
xchg
lcall
scas
and
mov
lds
frstor
or
pcmpgtb
mov
adc
dec
out
mov
cltd
ficoms
pop
push
aam
ss
outsl
ljmp
jle
fcoml
loopne
ljmp
jl
xor
aas
and
mov
in
cmpsl
lods
mov
jno
push
out
repnz
or
mov
mov
lret
mov
xchg
imul
test
fisubrs
aad
mov
ret
and
xchg
pop
mull
repnz
lock
jl
sti
adc
sti
push
fidivrs
imull
loope
lods
nop
pusha
enter
pop
movsb
mov
jle
mov
sbb
insb
sub
out
outsb
lret
shlb
jns
lods
je,pn
sahf
ljmp
and
pop
shrb
das
insl
fs
sti
scas
sbb
push
lret
iret
mov
cmp
loopne
rcrl
xor
jmp
jns
cmc
leave
decl
dec
mov
dec
sti
repz
push
mov
add
or
sahf
pop
xchg
std
cmp
dec
or
inc
fldenv
cli
cwtl
xchg
push
fidivs
xor
aaa
out
fmul
sbb
cmpsb
fmull
mov
mov
mov
or
and
mov
adc
sbb
dec
cmp
daa
in
mov
mov
mov
sbb
test
hlt
sub
adc
cld
jg
push
xor
xor
cld
mov
fists
jge
movb
sbb
cmp
cmc
insb
jbe
sub
ficomps
dec
cmp
nop
dec
adc
jb
cmpsb
fs
int3
ret
lret
movsl
mov
enter
mov
sbb
addl
pop
jnp
loope
aaa
mov
adc
xorb
loope
aas
cmp
mov
es
mov
popf
sarl
push
inc
inc
xor
sbb
push
mov
cmp
sbb
std
mov
pop
jge
rcr
je
lea
cmc
or
jecxz
mov
mov
aad
mov
cmp
lods
push
xor
stos
fidivrl
test
push
pop
pop
inc
cmp
lcall
sbb
dec
jnp
fiadds
loop
push
fs
enter
and
jmp
fidivrl
cs
sbb
rcl
cwtl
ficomps
push
dec
jecxz
mov
jecxz
jbe
pop
xchg
add
xchg
rol
inc
es
add
icebp
or
sub
add
cmp
jle
add
int3
xor
aam
rcr
inc
or
cwtl
or
sbb
fiaddl
dec
add
xchg
fiadds
je
jle
clc
mov
cmp
sub
adcb
jnp
xor
pop
outsb
xor
xchg
pop
cmp
inc
dec
xor
xchg
lea
xchg
stos
mov
in
and
mov
loope
aaa
jb
xor
clc
pop
dec
test
subl
push
cli
fs
cmpsb
icebp
mov
mov
mov
cmp
sbb
lret
stc
sub
sub
cmpsl
mov
std
bound
popf
es
mul
test
add
mov
aas
insl
icebp
pop
out
dec
int
movsb
sbb
cmp
iret
out
mov
or
lahf
call
icebp
mov
cmp
dec
mov
push
ja
and
scas
fdivr
in
mov
inc
or
int
mov
push
aaa
nop
out
sbb
aas
in
push
ja
fstpt
xchg
push
stc
repnz
mov
and
and
pop
push
outsb
push
lds
sahf
lods
adc
lods
xchg
cmp
gs
mov
test
leave
xchg
stc
in
mov
jno,pt
adc
jbe
push
dec
inc
jae
mov
mov
or
into
test
cmpsl
mov
jge
bound
aad
xor
xor
pop
in
cmp
repnz
arpl
sub
repnz
shr
enter
mov
data16
nop
or
dec
jns
rolb
sub
pop
ret
push
arpl
lea
shlb
into
and
sti
jae
jle
nop
and
fwait
and
cmp
pop
out
cwtl
mov
add
xorl
and
das
xchg
loopne
in
movsb
push
out
aas
xor
mov
or
pop
popf
jg
fdivrs
sbb
sbb
gs
lcall
pop
pusha
aad
adcb
push
loop
xor
inc
adcb
shll
fimull
xor
sahf
andb
lods
sub
daa
push
mov
jge
jl
cmp
fidivs
aad
dec
dec
in
out
sub
add
inc
lahf
incb
out
sbb
mov
xchg
fmul
testl
jae
or
mov
sub
clc
add
add
pop
jne
fisttpll
loope
test
jl
icebp
ljmp
out
jne
lds
leave
or
xlat
mov
mov
cmp
icebp
adcl
jmp
lea
mov
test
xchg
add
out
mov
sbb
jecxz
fsubs
clc
mov
inc
repz
fs
js
mov
push
xchg
das
push
mov
xor
pop
dec
rorb
fwait
and
push
pop
sbb
adc
in
mov
test
iret
lahf
stc
lret
ss
jae
in
rcr
enter
add
push
pop
push
mov
aam
jnp
inc
das
sahf
mov
fstps
dec
jle
xor
push
fdivs
sbb
aas
sahf
test
or
loopne
mov
mov
int3
fldt
dec
and
in
or
out
and
xchg
lahf
mov
inc
into
inc
jno
pop
ja
sub
cmp
push
jne
dec
xlat
lahf
and
mov
fdivrp
pop
xor
aad
jl
jae
dec
mov
rcl
arpl
cs
sti
pop
int3
inc
cmpsb
jne
mov
leave
leave
mov
push
inc
imul
xchg
add
mov
in
in
enter
mov
push
xchg
out
mov
cmpsl
lods
push
jbe
popa
pushf
rcll
ja
or
inc
xor
int
imul
cmpsl
enter
nop
and
negb
adc
push
sbb
xchg
mov
daa
jb
imul
push
push
pop
xchg
faddl
ret
inc
cmpsb
fmuls
in
mov
js
push
and
adc
push
cmp
inc
jl
cmp
ljmp
cld
sub
sbb
leave
jns
mov
arpl
jmp
cltd
and
dec
icebp
sbb
fcoml
stos
fstpt
jns
mov
xor
sbb
xlat
rcl
out
lock
sti
ljmp
stos
mov
repnz
adc
jbe
or
lods
test
push
push
dec
lods
das
cmpl
jle,pn
ljmp
mov
ss
xchg
popf
pop
test
lcall
in
inc
lcall
mov
xchg
adc
or
fcom
popf
jl
pop
cmc
shrb
mov
mov
lcall
js
sbbb
sub
jb
rclb
test
pop
xchg
and
icebp
mov
test
sbb
xchg
cmc
ret
or
sti
dec
cmp
and
and
dec
inc
xchg
cwtl
mov
movsb
jns
xor
in
test
fnstsw
lea
jns
into
addr16
enter
dec
ja
inc
cs
test
add
psllw
mov
xchg
jo
je
dec
xchg
insl
cwtl
xchg
scas
add
loope
int
mov
inc
xor
sbb
mov
imul
loope
pop
in
sarb
imul
adc
std
jae
loop
cmc
dec
push
pop
fmul
paddusb
sbb
outsb
fwait
xor
push
movsl
pop
sti
pop
fsubrp
or
fnstsw
mov
pop
iret
add
shrl
xor
sbb
pop
lds
xor
in
adc
into
and
push
int
insb
adcb
dec
adc
cwtl
xchg
out
lahf
loop
mov
test
and
pop
stos
xor
or
push
jl
jge
add
aad
inc
dec
and
and
mov
sti
lahf
cmp
in
mov
lods
cmc
in
out
lahf
xchg
stos
sti
mov
mov
into
icebp
add
ret
dec
insb
sar
xchg
inc
imul
adc
aaa
pop
adcl
cmpsl
subl
inc
pop
cld
lahf
hlt
xchg
or
jo
repnz
das
fadd
jae
cmpsl
popa
lret
scas
mov
stc
lods
jno
mov
cmp
repz
leave
pop
cld
and
loop
mov
jno
inc
repz
mov
sarb
stc
into
pop
stos
inc
icebp
out
movsb
adc
xchg
jmp
inc
add
pop
jbe
push
jmp
add
push
adc
sub
pop
pop
mov
into
or
and
out
sub
adc
inc
adc
sahf
in
cwtl
scas
ja
xor
arpl
leave
mov
into
call
stos
xchg
out
sub
cmpsl
xchg
mov
xchg
mov
nop
lret
cwtl
int3
hlt
out
mov
jg
mov
push
jne
pop
add
imul
testl
and
cld
add
push
ret
filds
or
add
jns
sbbl
lea
test
movsb
or
adc
test
es
inc
push
cmpsb
adc
jb
in
fisubrl
test
rorl
xchg
sti
repz
xchg
sub
xchg
movb
pop
mov
out
fisubs
out
push
mov
mov
push
into
push
push
addr16
pop
jmp
icebp
fisubrl
mov
pop
dec
mov
decb
movsl
mov
push
pop
xor
bound
rolb
pop
and
sbb
mov
into
inc
jmp
xor
xor
inc
add
adc
rolb
cld
inc
push
xor
into
cwtl
cmp
scas
mov
xlat
sub
mov
mov
mov
xchg
pop
xchg
aas
test
in
add
pop
add
fs
or
cmp
sub
jg
push
and
ret
push
sub
arpl
jnp
fdivl
popf
hlt
mov
lds
or
jo
pop
sub
shlb
and
leave
pusha
in
adc
ficompl
imul
xchg
push
xor
test
das
mov
ljmp
pop
es
sbb
insb
mov
inc
cmpsl
arpl
idiv
in
mov
xchg
and
sarb
mov
cmc
push
icebp
cmpsb
jno
mov
dec
xchg
insb
repz
sub
daa
stc
push
jl
data16
add
adc
fwait
or
push
scas
sub
jg
sub
or
outsl
fisubrs
jbe
insl
das
stc
xor
lock
in
add
rorl
fidivl
stc
add
sbb
xor
cmp
mov
inc
mov
sub
mov
sbb
test
push
divl
ds
xchg
mov
in
xchg
ja
push
pushf
fbld
clc
rclb
out
lods
sub
adc
or
stc
xor
out
adc
mov
add
add
and
jg
or
adc
popf
push
mov
mov
add
mov
pop
mov
in
push
inc
xchg
push
in
push
mov
mov
loopne
iret
out
jno
fcmovnb
out
inc
xlat
xor
pushf
into
cmpsl
stos
mov
dec
dec
aas
xchg
aam
jo
cwtl
dec
pushf
sarl
in
les
add
aaa
adc
out
sub
dec
out
sub
cmp
nop
popa
or
je
imul
pushf
adc
mov
aad
sub
bound
loop
sbb
loopne
out
jp
loope
sbb
xor
arpl
shlb
outsl
pop
lret
xchg
xchg
loopne
and
aam
cmpsb
pushf
test
inc
cmp
aas
pop
inc
lret
rcll
aaa
adc
lods
leave
je
dec
js
inc
cli
and
add
orl
cmp
mov
clc
and
cmp
xor
test
jns
scas
subb
negl
fstl
enter
cmp
pop
cmc
iret
jle
lods
test
inc
pop
mov
push
jp
push
xor
jmp
cmp
les
ds
mov
fwait
xchg
scas
sub
cli
mov
cld
or
movsb
adc
ljmp
xor
xchg
sbb
dec
mov
hlt
sbb
xchg
push
jo
xchg
jl
les
mov
push
lods
call
lods
push
movb
push
dec
stos
movsb
in
lock
scas
pop
fmull
testl
inc
aad
in
xlat
mov
mov
pop
sub
xchg
xor
mov
fs
xchg
dec
jo
sub
xchg
call
aaa
xchg
xchg
mov
in
and
aaa
ss
mov
jmp
stos
push
out
inc
fnsave
jmp
push
jno
pop
cltd
and
test
and
data16
mov
inc
mov
out
add
sti
pop
negb
adc
jecxz
aaa
arpl
jb
mov
cmp
adc
push
mov
cmpl
mov
scas
out
mov
push
jb
sub
mov
xor
cmc
xchg
aad
xchg
push
and
adc
test
in
ja
dec
aad
mov
xchg
or
jmp
mov
cwtl
mov
jmp
leave
mov
inc
push
jae
in
cmp
pop
mov
rcrl
dec
sbb
push
imul
or
lahf
lods
sbb
andb
mov
xlat
bound
into
fcom
sarb
xlat
xchg
adc
xchg
push
jp
cld
sub
test
rcrl
mov
divl
call
jno
ss
rorl
lcall
cmpsl
pop
pop
xchg
sub
pop
addl
ret
sub
add
inc
pop
push
outsb
adc
cmpsl
out
xchg
add
jg
out
mov
push
dec
mov
pusha
pop
mov
mov
lock
in
cli
dec
push
pop
dec
std
or
ret
lods
jbe
das
mov
xchg
xlat
les
sbb
mul
sahf
dec
imul
mov
js
push
jle
mov
addr16
mov
inc
lahf
adcb
xchg
pop
cltd
dec
pop
nop
sub
jnp
pop
stc
ja
inc
movb
aad
mov
xchg
loope
aam
andb
pop
icebp
stos
pop
or
insl
leave
test
push
xchg
out
rcrl
jmp
mov
imul
divl
sbb
dec
add
ja
inc
and
pop
into
outsl
jmp
push
sbb
or
fisttpll
adc
or
arpl
insl
lock
adc
push
mov
sub
out
inc
adc
test
cltd
sar
mov
jecxz
lahf
adc
addb
in
lds
stc
daa
mov
sbb
scas
pushf
cmpsb
mov
mov
push
mov
lret
xor
fstpt
xor
or
fidivs
pop
xchg
pop
mov
je
fistpl
xchg
jl
xor
add
lock
mov
inc
inc
stos
rolb
jg
mov
jmp
leave
sub
push
xchg
nop
int3
imul
sahf
outsl
cmp
mov
cmc
pop
lock
mov
push
in
mov
push
mov
adc
or
pop
mov
mov
sub
and
std
jg
imul
jle
fisubrl
inc
ret
in
jge
into
jns
pushw
insb
scas
les
mov
stos
inc
lret
cltd
popf
inc
pop
sbb
ljmp
rorb
cmc
cli
sahf
jne
popf
scas
insl
push
rorb
aad
sub
push
and
jns
outsb
cmpsl
cld
add
push
xchg
lods
mov
addr16
mov
lods
sbb
sub
in
sbb
xor
mov
jo
mov
jecxz
insb
and
mov
lea
mov
js
clts
int3
int3
adc
adc
sub
sub
push
test
add
clc
mov
scas
push
and
sub
xchg
loopne
adc
or
ja
sbb
fs
aam
pop
push
gs
add
mov
mov
xchg
sbb
push
ljmp
mov
mulb
stos
lret
sub
fistpll
ljmp
and
mov
mov
fldl
sbb
pop
sahf
cmpsb
icebp
jb
sbb
cmpsl
cmp
lds
lds
mov
flds
arpl
adc
cltd
loopne
add
or
sbb
pop
and
in
sahf
cmpsl
or
ja
sbb
jmp
into
jl
xorb
cmp
mov
dec
popf
inc
idiv
pop
pop
sahf
sub
dec
adc
mov
repz
lock
insl
jle
mov
xchg
mov
xchg
jecxz
dec
out
repz
push
filds
adc
jecxz
push
popf
mov
push
movsb
mov
insl
les
xor
adc
push
xchg
adc
aad
cltd
lret
fists
int
jg
lods
inc
in
jp
ficomps
lahf
fwait
push
inc
bt
inc
fcoms
lds
cmp
out
xlat
mov
add
adc
jp
data16
mov
inc
pop
add
lea
fstp
mov
sahf
pop
loop
dec
inc
or
pushf
add
js
pop
cmp
adc
jno
andb
inc
mov
movsl
sub
push
testb
or
jl
push
pop
adc
fistpll
cmpsl
add
aad
sbb
dec
roll
icebp
mov
inc
and
or
mov
sbb
xchg
inc
js
dec
cmp
aaa
es
sub
and
or
lods
test
arpl
xchg
es
mov
aam
xchg
cmp
adc
jecxz
stc
lock
adc
mulb
and
cmp
int
stc
pop
inc
imul
imul
rcl
scas
negb
into
fdivr
push
add
mov
mov
cmp
push
adc
add
or
pop
lea
and
or
pop
xor
cmp
testl
pop
cltd
or
jae
dec
ret
lds
adc
xchg
in
lahf
mov
push
sti
inc
imul
mov
mov
arpl
insb
sub
pop
lock
mov
cmp
jg
sub
aam
jne
ds
lcall
out
cmp
inc
pop
mov
or
push
fildl
movsb
push
dec
test
fldenv
mov
std
xchg
mov
add
jmp
jmp
lcall
cltd
cld
push
into
insb
pushf
aas
mov
and
dec
jns
out
outsb
cmc
imul
icebp
daa
or
popa
sub
pop
xchg
enter
sub
ret
dec
adc
enter
fcomps
pop
xor
push
aad
imul
jbe
or
jp
ss
dec
push
js
and
shrl
aad
testb
and
fists
daa
aas
sbb
insl
dec
repz
sub
shrb
pop
mov
sbb
stc
mov
sti
rcrb
mov
pop
clc
xchg
inc
dec
fidivrs
fwait
jmp
sbb
inc
mov
pop
add
inc
out
cmp
ret
mov
jle
sbbl
add
jle
dec
dec
jo
pop
cmpb
lret
dec
dec
outsb
xchg
fiadds
mov
xor
mov
ljmp
leave
sbb
and
fimull
cmp
mov
in
xchg
js
je
cmp
add
ret
jno
test
pusha
imul
jns
xchg
inc
mov
xchg
cmp
mov
add
je
xor
adc
and
mov
loop
xchg
push
or
adc
cmc
inc
adc
pop
mov
mov
scas
dec
xor
mov
lcall
addl
mov
xchg
cmp
jnp
mov
push
clc
adc
xchg
mov
scas
dec
adc
inc
mov
dec
add
fs
rorb
jbe
and
push
test
xlat
aaa
out
and
pop
inc
mov
push
fadd
aaa
inc
out
les
cltd
repz
dec
rcll
cmp
jp
std
jne
add
push
adc
lock
sbb
shll
lcall
jne
cs
cmp
and
mov
pop
mov
pop
test
mov
pop
das
inc
cmp
add
xchg
sub
mov
xchg
fnstcw
cs
js
push
aas
mov
movsb
lahf
mov
adc
movsl
sti
ret
adc
mov
stos
adc
push
stc
sahf
bound
lds
cmp
call
xor
imul
pop
popf
sub
imul
cmp
sub
lcall
call
mov
mov
ds
scas
popf
mov
xchg
pop
loope
xor
mul
out
sahf
leave
jg,pn
movsl
aam
xchg
jns
and
es
mov
xor
cltd
xchg
testb
es
or
mov
mov
fwait
or
mov
pop
xor
or
inc
int3
fimull
int3
imul
popa
test
arpl
or
add
sub
push
data16
mov
or
adc
push
mov
xchg
js
lret
cmovo
lock
inc
rorb
lret
pop
insl
lods
out
dec
adc
mov
scas
sbb
outsl
mul
and
test
jmp
push
jbe
jno
xor
sub
sub
sahf
push
outsl
scas
fidivl
hlt
mov
lods
jp
imul
lret
popf
or
cld
cmpsb
bound
mov
in
aam
mov
sbb
jle
sbb
pop
aaa
test
les
imul
and
jge
dec
and
int
xor
xchg
push
outsl
mov
and
mov
lcall
shll
lods
push
lea
and
into
repnz
add
mov
mov
sub
inc
in
pop
out
cld
lods
ds
sub
jb
outsl
add
pushf
push
push
xorl
and
adc
outsb
shlb
sbb
dec
insb
add
inc
and
loopne
pop
repnz
cmp
mov
and
scas
jae
fdivrl
popf
cmp
lcall
imul
loopne
ljmp
out
or
mov
jbe
clc
in
inc
fwait
xchg
sarl
in
inc
xchg
aas
and
pause
out
cmpsl
add
inc
sub
inc
push
sti
not
in
cld
adc
add
fwait
mov
jns
adc
sahf
ss
scas
cmc
and
sub
out
sbb
push
pusha
sbb
ljmp
in
xor
xchg
pop
aam
mov
or
movsl
lea
movsl
popa
mov
test
subb
lods
aam
inc
cmp
pop
push
jns
sbb
rcrl
pop
lods
cld
mov
mov
lcall
pop
cmp
xchg
cmp
bound
addb
push
push
mov
lcall
movsl
ffreep
daa
push
fcmovu
subl
jecxz
aas
mov
cmpsb
jnp
enter
jmp
mov
fsubl
cmpl
lret
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
push
or
xchg
xchg
xor
nop
and
aaa
pop
jp
jg
sbbl
inc
fs
div
fwait
mov
mov
ljmp
aad
adc
dec
push
les
xor
xlat
jb
shlb
ret
in
xchg
loop
or
or
push
in
leave
xchg
inc
inc
pop
pop
dec
sbb
fwait
call
loope
mov
sub
repnz
add
insl
loopne
cwtl
and
push
leave
mov
lods
out
sti
mov
add
sahf
inc
mov
ss
sbb
test
push
and
mov
inc
and
xor
test
xchg
test
int3
pop
scas
mov
loop
mov
ds
inc
cwtl
pop
inc
dec
lahf
jbe
jle
pop
pusha
aas
cmp
cmp
mov
fmuls
enter
mov
xor
mov
and
cwtl
test
dec
push
mov
faddl
or
in
xchg
outsl
cmp
ds
xchg
jmp
xchg
int
adc
out
stos
enter
xor
stos
mov
cld
mov
sbb
inc
pop
mov
nop
and
mov
dec
test
mov
inc
jno
xor
in
pop
pop
add
dec
mov
add
jge
cmp
fidivs
mov
dec
or
out
or
ficomps
mov
test
mov
repz
dec
out
mov
popa
aaa
adc
inc
lock
push
pop
int3
and
pusha
test
fsub
mov
mov
inc
jecxz
sbbl
js
and
cltd
dec
pop
xchg
out
aad
test
sub
dec
mov
sahf
cwtl
rcrl
push
dec
or
int3
adc
and
mov
xchg
push
jge
cli
inc
jg
and
adc
pop
sti
xchg
lods
shr
dec
mov
push
push
loopne
cli
fsts
mov
dec
push
outsb
cli
or
sbb
xor
loope
xor
xchg
fistps
pop
hlt
cmpsb
cmpb
ds
stos
inc
shlb
scas
xchg
jl
bound
inc
or
mov
sub
mov
mov
pop
jmp
stos
mov
hlt
aaa
pushf
in
push
pop
clc
dec
push
and
push
stos
out
shll
repz
outsb
sub
adc
ss
or
mov
ret
or
sbb
jns
sub
push
pop
add
repnz
lea
jo
out
mov
cs
scas
sbbb
insl
sub
xchg
push
and
je
es
arpl
cmp
jmp
sub
dec
lahf
or
jmp
sub
and
mov
mov
xchg
ficoml
cmp
jne
and
rcrl
loopne
mov
push
and
add
add
push
mov
cmp
ljmp
push
movb
or
daa
ja
mov
mov
xchg
ret
xchg
rcr
in
lods
fsubs
rcrb
dec
insb
dec
in
ds
add
ja
clc
xchg
xchg
xchg
out
mov
inc
rorb
mov
ret
mov
cmpsb
mov
sbbb
xchg
jnp
outsb
xor
push
mov
push
xchg
ljmp
cltd
push
std
push
jmp
pop
jno
out
sbb
mov
jp
jecxz
inc
mov
or
xchg
std
cmpsb
in
mov
std
sar
pop
xor
out
loope
into
fsubr
and
loopne
cmc
ss
push
and
jo
dec
aad
fsubr
and
jne
dec
push
dec
nop
adc
loope
cltd
sahf
cld
adc
adc
push
rclb
imul
inc
cmc
lea
ja
push
data16
sbb
sarb
dec
jno
repnz
popa
adc
imul
fwait
adcl
push
lds
xchg
jmp
ljmp
mov
xchg
dec
pop
jp
jge
ss
mov
jbe
push
mov
loop
enter
pop
bound
jmp
add
push
add
bnd
iret
fadds
shll
mov
insl
pop
mov
jae
inc
dec
push
and
jmp
repz
stc
and
jp
jecxz
push
rorl
xchg
push
test
inc
cltd
imulb
xor
lods
cli
or
push
enter
inc
inc
fldl
jne
dec
dec
jno,pt
jmp
mov
or
das
je
rorb
xor
sbb
add
fwait
mov
dec
cs
add
insb
fcompl
lret
mov
pop
push
dec
fsubs
call
je
xchg
mov
iret
subb
test
cmpsb
jecxz
adc
cmp
je
inc
fwait
xchg
inc
jl
lods
inc
adc
push
hlt
fucomip
dec
xchg
mov
ret
iret
push
stos
arpl
adc
dec
xchg
aad
fwait
sub
fldcw
sbb
cs
xor
scas
jnp
add
arpl
andl
cmp
aas
inc
mov
inc
rolb
repz
dec
jnp
mov
hlt
xor
sbb
push
or
xor
in
xor
adc
enter
imul
out
ljmp
jl
push
xchg
add
test
out
fwait
pop
push
imulb
outsb
cli
in
pop
mov
xchg
push
add
clc
dec
insl
and
hlt
jo
pop
sti
stc
push
mov
mov
or
add
sub
mov
lahf
jnp
push
faddl
jb
dec
cmp
jns
ljmp
add
in
pop
sub
negb
xchg
pop
mov
scas
lret
data16
jbe
inc
mov
fs
dec
sbb
or
jne
test
fcomps
subb
outsl
pushf
jecxz
les
or
hlt
cmc
mov
fs
dec
mov
mov
popa
fidivs
and
pop
adc
addr16
inc
pop
sarb
jno
mov
loop
int3
fs
or
cmpsb
fdivl
dec
xor
xor
in
pusha
daa
jae
jo
jne
and
lods
push
push
mov
repnz
dec
dec
repnz
mov
pop
mov
addl
cmpb
leave
adc
popa
lahf
dec
ja
cs
mov
xchg
inc
lcall
fmul
mov
aas
dec
xchg
pop
int
pop
inc
aam
dec
mull
pop
dec
imul
mov
sbb
dec
fdivr
pop
mov
outsl
bound
and
pushf
and
pop
repz
adc
pop
popf
fimuls
outsl
pop
jle
lds
xor
pop
mov
sahf
in
sbb
das
loopne
je
jb
jae
fsubr
test
mov
and
pop
cmp
jg
insb
dec
adc
mov
nop
xchg
outsl
movsl
sbb
pusha
pushl
out
jp
ss
insl
jbe
test
pop
jno
test
xor
pop
sub
pop
ss
inc
pop
mov
push
add
mov
add
pop
sbb
std
imul
leave
sbb
sub
jg
adc
addr16
fistl
jns
mov
cld
push
ljmp
and
je
shlb
sbb
dec
jbe
fsubr
xchg
push
dec
cs
jmp
incb
cmpsl
jbe
mov
lcall
fsubrs
xchg
pop
dec
xor
rcrl
data16
test
gs
jo
test
dec
lods
test
or
jp
cli
push
mov
imul
out
les
int
dec
sub
pop
or
int
testb
or
fsubs
aaa
test
sbbb
jle
movsb
jl
jno
pushw
lcall
adc
mov
les
loope
and
test
jne
sbbb
and
xchg
aam
dec
sub
dec
mov
std
lods
jmp
fisubs
repz
pop
enter
cmp
pop
ja
cltd
and
daa
xor
repnz
cmp
enter
mov
inc
cmpsb
cltd
lcall
pop
scas
sahf
add
or
test
pop
decb
add
mov
push
sub
dec
cwtl
xchg
int
inc
inc
aad
jmp
pop
jge
fildl
stos
push
test
test
popf
loopne
mov
push
loopne
hlt
pop
xchg
add
int3
fldenv
call
cmp
inc
mov
pop
imul
xchg
repnz
stc
pop
cmp
nop
xchg
fstpt
movsb
jge
push
xor
xchg
cwtl
mov
xchg
test
aam
sbb
movsb
cmpsb
sub
pop
enter
jmp
adc
shr
or
mov
push
divb
mov
mov
fldt
and
or
pusha
or
andb
adc
mov
shld
cmp
pop
jns
aaa
dec
xchg
mov
sarb
ja
mov
jnp
icebp
push
sbb
push
inc
iret
in
jbe
movsb
adcb
mov
in
inc
pusha
fbstp
cmpsb
inc
push
mov
cli
test
or
inc
rep
out
lcall
mov
outsl
mov
mov
divl
push
jle
out
mov
stos
mov
pop
rclb
std
sbb
xchg
aam
hlt
sbb
and
nop
popf
test
jae
push
lret
jns
mov
cmpps
cmc
ficoml
xorl
leave
lret
add
aad
mov
xchg
loope
push
addr16
decb
out
xor
or
into
lahf
imul
test
push
pop
adc
fsubs
sub
daa
mov
mov
cmpsl
cmpsl
or
ficoml
test
jmp
aad
jns
add
repnz
and
jmp
mov
cs
sarb
adc
adc
lret
lahf
into
repz
jo
mov
fdivr
inc
les
xchg
dec
out
xor
shrb
pop
ds
dec
mov
imul
jbe
pop
fwait
daa
push
xchg
mov
out
xor
dec
push
out
jp
push
mov
mov
dec
pop
mov
jno
mov
movsb
stos
xchg
add
sbb
xchg
adc
jae
mov
frstor
sbb
xchg
push
push
and
ror
mov
dec
lock
pop
in
bound
add
mov
mov
sub
cmp
jmp
arpl
xor
jle
mov
lock
out
outsb
testb
sbb
or
and
jb
xchg
cltd
dec
push
movsl
or
sbb
xchg
push
incl
sbbb
hlt
in
pop
imul
mov
test
jne
stos
inc
inc
fwait
sub
adc
and
cli
add
cmc
cmp
orl
sarl
xor
pop
or
dec
adc
cli
xor
jmp
shrb
mov
int3
in
rcll
addr16
test
xor
xor
sub
lahf
push
mov
sbb
push
pop
jb
lcall
cmp
push
mov
rol
sub
pcmpgtd
dec
fildll
xchg
pop
pop
cmpsl
push
inc
add
stc
pop
incl
and
sti
and
data16
imul
xchg
dec
cmp
call
imul
mov
loopne
jo
xchg
lahf
mov
imulb
es
xor
mov
sub
fwait
xor
loop
pop
lds
jge
repnz
and
sub
mov
inc
push
movb
aam
adc
loopne
repnz
xor
push
popf
or
xchg
into
sbb
pop
xor
mov
icebp
mov
aad
dec
push
xor
add
repnz
adc
add
ds
notb
push
mov
pop
nop
xchg
and
mov
mov
loopne
cwtl
add
loop
mov
nop
stc
dec
popf
mov
jp
mov
into
pop
jno
aad
xchg
and
popf
fsubl
cmp
push
arpl
sub
addr16
xor
loope
test
cmpsl
cmp
clc
stos
int3
fmull
adc
xor
and
mov
jmp
pop
faddl
ds
inc
mov
jbe
adc
cmc
jae
mov
stc
fcmovnb
cmpsl
dec
je
pop
mov
adc
pop
mov
shll
ja
int3
movsl
push
in
push
incl
adc
clc
repz
call
popa
push
adc
dec
aas
mov
popa
mov
mov
cmp
and
popa
stc
aaa
fmuls
out
lods
stos
fucomp
ret
sub
add
inc
push
adc
scas
aam
pop
lcall
pusha
pop
jle
add
arpl
pushf
jns
inc
daa
lcall
ret
mov
adc
aas
int3
jne
dec
pop
arpl
mov
lods
cli
into
mov
cmp
jmp
xchg
jle
inc
loope
fsubs
lcall
enter
fisubs
sub
cmp
jecxz
shrb
out
mov
js
adc
mov
xchg
adc
les
mov
fimull
hlt
inc
mov
in
dec
xchg
iret
stc
imul
mov
dec
iret
mov
je
mov
std
mov
or
bound
int
outsl
push
sbb
push
test
data16
dec
xchg
lahf
in
cmp
call
adc
icebp
insl
jns
lea
out
jmp
inc
and
cltd
ss
mov
fcompl
sub
add
mov
lret
dec
pop
mov
pop
addb
fldcw
jle
and
jnp
gs
call
xchg
fwait
pop
mov
ret
out
lcall
lods
or
fs
sub
pop
or
add
insl
inc
sti
in
loopne
push
fidivs
mov
dec
inc
inc
dec
xchg
mov
mov
aad
hlt
add
nop
cli
out
loop
stos
xchg
xchg
pop
fstps
loope
or
mov
jg
icebp
loopne
cmc
scas
or
and
xchg
sbb
mov
xor
test
lods
push
into
ss
xchg
stos
es
cmp
mov
loope
repz
int3
dec
icebp
lock
in
add
xchg
inc
push
adc
jo
push
test
inc
jle
arpl
scas
dec
mov
sbb
mov
cmpsl
loope
and
sbb
lcall
in
adc
sub
push
data16
movsl
xchg
adcb
cmpsl
jne
fnstsw
or
nop
shlb
scas
leave
adc
sbb
jno
inc
add
orb
pop
int
cmp
sbb
jno
cltd
jns
adc
sub
je
mov
out
pop
jb
pushf
sub
je
xlat
sbb
dec
popa
cmc
sti
mov
xor
lea
jo
scas
mov
int
adc
test
movsl
popf
rclb
xor
and
sub
add
bound
fiadds
mov
fisubrs
push
inc
repz
push
adc
xchg
fdivl
jns
push
inc
fldcw
and
cmp
cs
inc
into
outsb
sbb
mov
es
jg
negl
jo
or
or
repnz
mov
xor
stc
clc
pusha
dec
in
ljmp
xor
sub
dec
or
fsubr
push
mov
add
mov
inc
push
pop
lds
xor
or
icebp
jmp
popf
sub
dec
mov
dec
pop
aas
rcr
mov
mov
enter
add
sub
jle
loopne
pop
aas
aad
outsl
in
pop
les
mov
mov
bound
stc
adc
dec
mov
shrb
arpl
pop
aas
jecxz
mov
lea
inc
decb
cwtl
adc
or
es
or
pushf
and
mov
outsl
daa
jno
inc
inc
rep
adc
add
dec
sbb
xchg
jg
push
xor
sub
in
negb
aaa
cmp
pop
mov
lods
or
addr16
cmpsb
test
popl
fwait
out
pop
ljmp
insb
pop
xchg
fiaddl
adc
sahf
mov
xchg
sbb
pop
and
xchg
inc
hlt
shlb
mov
sub
fnstsw
popa
in
pop
mov
push
fwait
adc
xchg
out
nop
or
gs
sti
inc
add
bound
rcll
xor
inc
sub
inc
syscall
stos
ja
sub
sub
xchg
sahf
insl
aas
enter
in
popf
jne
cld
add
push
call
add
or
fstps
cmp
dec
mov
stc
hlt
dec
notl
lret
cmp
addb
cmp
shl
insl
jle
lahf
mov
mov
push
cld
push
lahf
cmp
cmpb
sub
and
pusha
sbbl
jle
inc
rclb
mov
std
dec
dec
lock
sub
jl
test
pop
adc
xchg
call
scas
xchg
jnp
repnz
movl
insl
jge
fsts
sbb
dec
xor
jb
pusha
and
fadd
jl
push
ror
popa
lret
push
push
dec
lock
cmp
adcb
inc
lret
jbe
je
imul
adc
lcall
mov
pop
aam
cmp
mov
push
ficompl
push
pushf
idiv
fdivs
adc
fwait
lods
in
add
lods
xchg
mov
enter
xor
adc
mov
jmp
push
mov
fisubrl
stos
push
pop
mov
aaa
int3
mov
xrelease
ja
sbb
in
or
cli
out
and
sbb
mov
sub
rolb
and
roll
push
mov
mov
dec
es
and
add
les
roll
cld
push
movsl
pusha
jmp
subb
in
ror
std
inc
icebp
stc
mov
add
xchg
incb
stc
stos
or
pushl
vmovddup
mov
jecxz
add
lods
mov
xchg
inc
ds
pop
mov
pop
mov
testb
clc
mov
popa
rcrl
xor
xor
pop
mov
mov
cmp
mov
ljmp
xchg
sarb
stc
inc
inc
pusha
pop
insb
mov
xchg
add
cmp
jno
jl
popf
stc
shl
xchg
lret
insl
lods
test
dec
inc
rcl
mov
movsb
ss
adc
dec
lea
dec
adc
outsl
inc
lret
xchg
push
popa
std
jb
inc
stos
dec
xchg
or
push
mov
negb
jecxz
jle
cwtl
cld
add
dec
xchg
call
int
stos
sub
lcall
jle
cmp
je
icebp
push
cmp
and
ljmp
pop
lock
or
in
mov
lcall
loopne
arpl
outsl
cmpsl
sahf
orb
and
ljmp
sub
stos
scas
dec
lods
or
pop
sbb
mov
imul
fs
test
push
adcl
scas
cmp
push
sbb
jb
push
pop
and
fwait
je
cwtl
fmul
lods
fwait
out
or
jle
fsub
shr
add
mov
or
pavgw
mov
jmp
and
test
and
fsubs
sbbb
sub
imul
push
xchg
sbbb
sbb
and
cmp
int3
in
add
popa
ljmp
ljmp
mov
fcomp
adc
mov
arpl
in
cltd
sbbb
andl
adc
stos
in
pop
ljmp
aas
mov
aas
or
repz
lahf
mov
add
xchg
lea
outsl
xchg
in
fstl
pop
shl
loop
cmpsb
push
mov
in
jg
int3
push
mov
xchg
leave
pop
das
test
mov
cmp
xchg
sub
pop
lds
imul
fdivrl
add
pop
scas
mov
jl
xchg
mov
jg
popa
and
and
lods
xchg
sbb
xchg
xor
in
test
mov
incl
fidivl
scas
inc
rorl
inc
fwait
xor
mov
xchg
imulb
arpl
or
fisubl
inc
lret
xor
lret
and
cli
mov
rol
jo
add
or
inc
or
or
shll
jp
je
and
inc
popa
add
stos
push
dec
ret
and
jg
je
mov
icebp
ret
sub
dec
pop
and
faddl
negb
sub
js
mulb
add
mov
ret
insb
mov
lret
and
or
push
arpl
rclb
xchg
jns
pop
enter
jg
fisubrl
in
xorl
sub
adc
scas
sub
or
mov
and
lea
mov
sub
inc
sub
and
insb
sbb
std
mov
fistpll
and
fwait
push
fcmovnbe
inc
or
push
insl
das
jmp
or
and
mov
test
clc
pop
lea
cltd
mov
lret
xor
inc
sahf
jae
ja
fisttps
repz
jl
frstor
sahf
inc
pop
mov
cmp
shll
mov
sbb
mov
pop
lea
imul
xor
js
gs
ja
mov
out
and
dec
jge
xorb
loopne
ss
mov
ss
icebp
jg,pt
fsubrs
adc
adc
pop
inc
and
fisttps
loope
or
ja
mov
bound
mov
mov
dec
popf
lar
push
mov
inc
mov
jmp
imul
cmp
push
pusha
pop
mov
mov
outsl
dec
rcll
and
add
mov
mov
test
and
mov
sub
nop
mov
enter
xor
pop
test
adc
out
loopne
scas
cmc
push
adc
scas
or
jg
scas
lods
sarb
add
and
lods
inc
scas
push
mov
das
dec
pop
aaa
lret
inc
adc
in
enter
add
push
adc
imul
jno
ljmp
out
sarl
sbb
dec
xchg
fsin
aad
cmp
mov
adc
sti
cmp
mov
outsb
enter
mov
jge
pop
orl
mov
sbb
fsubrp
pop
xor
inc
pop
insl
sbb
mov
push
aam
add
push
inc
insl
cmp
dec
mov
pushf
mov
ret
aaa
jp
rcll
xor
sbb
stc
inc
ror
add
adc
stc
mov
cli
adc
and
js
mov
jp
xchg
add
sub
and
push
test
mov
insl
scas
or
jns
stos
shlb
daa
mov
pop
out
rolb
mov
adc
mov
jmp
jmp
imul
lret
pop
call
shrb
mov
frstor
xor
ja
inc
xor
out
sub
push
lea
call
inc
push
inc
and
lret
push
scas
je
andb
dec
pop
cmp
mov
fdivs
jmp
stc
xor
fstpl
bound
std
lds
loop
test
and
fwait
std
mov
inc
cmp
stos
enter
addr16
mov
fldt
xor
xlat
sahf
insl
movsl
les
stos
mov
push
scas
cmc
lcall
movsl
stc
ss
fimuls
adc
cmpsl
mov
lea
hlt
test
scas
push
pop
add
and
cld
sahf
mov
cwtl
ljmp
insl
fs
mov
repz
insw
lea
mov
fnstcw
aaa
dec
or
jl
fcoms
add
jp
cmp
inc
sbb
inc
fcoml
movsb
add
jo
or
xchg
inc
sarl
pop
cmc
sbb
and
or
pop
jbe,pt
je
rolb
inc
jo
xor
lret
std
pop
data16
fisttpl
mov
dec
inc
std
jg
push
mov
imul
fnsave
dec
adc
xor
inc
ret
xchg
js
xor
or
jg
ss
loope
dec
cmpsl
and
push
mov
adc
sbb
fs
jge
mov
filds
das
pusha
repnz
dec
es
bound
lods
push
dec
cmp
sbb
into
inc
xrelease
xor
xchg
pop
xchg
pusha
dec
push
dec
mov
xchg
cmp
or
rcrb
pop
sbbb
cmp
mov
mov
sbb
cmpsb
pop
mov
ret
xor
daa
xor
stc
bound
mov
jns
popa
dec
ja
xor
push
daa
iret
add
std
dec
push
xchg
mov
rol
scas
pop
xor
xlat
jp
movsb
mov
jmp
pushf
cmp
adc
xchg
aas
arpl
and
icebp
sti
push
repnz
imul
mov
fisttpl
sub
aam
hlt
inc
adc
shlb
je
mov
mov
jno
add
fs
mov
rolb
loop
xchg
cmp
pop
das
and
jbe
stos
gs
movq
xchg
jno
cwtl
sub
xchg
iret
push
adc
dec
xchg
mov
testl
xor
jbe
jmp
jge
lds
or
lods
xor
xchg
addr16
mov
lahf
hlt
adc
xlat
divl
adc
pop
lret
cs
xor
jne
inc
nop
bound
sub
or
dec
ds
test
cmpsl
dec
xchg
pop
js
xchg
xchg
mov
popl
sbb
adc
xor
or
fs
shll
push
or
jno
insl
add
pop
mov
mov
bound
movsb
lcall
cmc
cmpsb
dec
adc
mov
dec
and
and
sbb
scas
sub
lahf
stos
rcrl
cmp
dec
pop
outsb
lcall
sbb
ljmp
test
push
adc
call
sub
sub
mov
adc
jl
mov
das
mov
subl
pop
pop
pop
orb
xor
jg
jns
push
push
jl
decl
or
mov
outsl
dec
cli
mov
mulb
sbbl
dec
sbb
mov
ret
aaa
gs
sub
inc
add
jns
das
rcrb
sbb
int
sbbb
cld
sub
ljmp
cld
sbb
mov
lea
movsb
inc
mov
mov
mov
leave
sbbl
mov
cmpsb
adc
dec
and
xlat
and
mov
cmp
dec
sarl
push
push
xchg
and
push
inc
inc
jle
pusha
lods
xchg
test
dec
mov
dec
hlt
loopne
outsl
hlt
icebp
stc
leave
pop
aad
jl
movsl
sbb
sahf
and
je
icebp
aaa
enter
mov
std
push
push
xor
ds
movsb
jae
xchg
cmc
jecxz
ficoml
daa
mov
add
add
or
loop
sub
or
cmpsl
out
inc
inc
in
cld
pusha
push
lock
jbe
scas
addl
stc
fimull
jmp
fisttpl
mov
insb
idiv
xor
push
out
xlat
inc
imul
fcomps
xlat
xor
repnz
imulb
fldenv
fcomps
cmp
add
in
push
mov
outsl
mov
adc
mov
sub
or
lods
mov
ss
jnp
mov
scas
or
add
movsb
and
sbb
scas
outsb
and
and
pop
ljmp
mov
xchg
jnp
mov
push
inc
scas
movsb
and
shl
xor
out
jl
cmp
shll
dec
fmull
cmpsb
pusha
or
push
mov
jno
mov
stc
mov
jb
jo
ljmp
cmp
xchg
mov
inc
scas
fstl
and
cs
mov
xor
lods
orl
aam
or
cmpl
cmp
test
mov
adc
mov
call
pusha
jge
shlb
sahf
out
aaa
iret
mov
mov
in
pop
and
push
add
scas
dec
stc
imul
mov
mov
popa
push
loopne
sarl
xor
cmp
fistpll
jns
cltd
or
jns
loope
mov
jbe
push
scas
pop
cmp
jnp
sahf
xchg
jb
popa
lret
cmc
leave
ljmp
sub
daa
xchg
ret
adc
lods
mov
mov
jg
push
sbb
mov
pop
popa
fldcw
inc
rorl
xor
sbb
inc
mov
enter
push
test
sti
lcall
and
adc
mov
push
bnd
cmp
mov
pushf
imul
ljmp
popa
sub
sub
xlat
jmp
xchg
out
pop
add
mov
mov
cmp
or
pusha
test
imul
js
cmc
test
cmc
cmp
je
jo
mov
scas
js
pusha
add
push
andb
sbb
sub
outsl
pop
in
in
les
imull
pop
jbe
push
lret
add
lea
rsqrtps
test
cmc
push
and
mov
dec
call
push
or
sahf
adc
out
cmp
lods
sub
decl
fisubl
std
cltd
sub
in
xlat
xlat
dec
inc
mov
sbb
mov
inc
and
xor
scas
aaa
xchg
xchg
adc
xorl
fwait
add
or
jl
xor
jno
push
faddl
mov
mov
ret
or
jge
xchg
call
out
insl
into
daa
stc
mov
repz
mov
cmp
jle
dec
stc
mov
stc
jne
in
jg
jo
fisubrl
jl
addb
xchg
inc
push
mov
mov
sub
adc
gs
sub
lods
xor
add
mov
pop
and
jg,pt
lret
mov
movsl
nop
sub
inc
bnd
clc
lret
xchg
sub
xchg
popf
push
std
push
inc
push
sti
push
cmp
ja
jo
or
xchg
loopne
jnp
mov
pop
mov
xchg
mov
jg
ds
enter
fldl2t
icebp
inc
or
repnz
out
imul
shlb
push
shll
outsl
dec
outsb
scas
shlb
and
call
add
cmp
popa
out
idivl
fwait
or
push
adc
sub
mov
mov
test
mov
hlt
cld
in
repnz
mov
inc
mov
shll
aad
xor
mov
test
push
inc
adc
cltd
sarl
in
aaa
stos
js
or
add
push
sub
xor
es
jp
xor
cmp
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
xor
xor
xor
push
push
movzwl
adc
mov
mov
or
mov
mov
mov
or
andl
xorl
movl
movl
mov
mov
sub
mov
xorl
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
orl
mov
mov
or
sub
xor
xor
and
mov
sbbl
orl
adc
mov
mov
xor
xor
mov
sub
and
sub
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
call
cmpl
jb
add
mov
adc
orl
mov
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
mov
add
push
and
mov
mov
lea
mov
mov
mov
mov
andl
xor
subl
add
adcl
mov
dec
mov
sub
mov
mov
andl
add
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
mov
xor
mov
andl
add
movl
cmp
je
movl
mov
jmp
mov
mov
cmp
movl
jne
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
mov
xor
mov
dec
xor
adc
add
xor
or
adc
mov
mov
adcl
mov
xor
addl
add
imul
mov
orl
xor
movl
add
movl
cmp
mov
mov
push
movl
je
movl
mov
orl
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
subl
mov
addl
xor
xorl
add
xorl
imul
mov
movl
jmp
and
mov
xor
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
mov
mov
sub
jmp
inc
sbb
fwait
jnp
mov
adc
pushf
insl
add
jp
pop
jp
push
xchg
or
and
and
adc
insl
sarl
or
lcall
mov
mov
je
dec
cmp
gs
repnz
aaa
sub
sub
cmp
sbbl
sub
sbb
inc
mov
adc
lock
call
xchg
sub
mov
iret
mov
fimull
bound
mov
clc
loop
and
cld
insb
fmulp
jle
xchg
lds
jo
pop
fs
cwtl
mov
arpl
mov
push
and
icebp
jae
jg
fsubrs
test
pop
jns
out
xchg
adc
sbb
xlat
aad
int
push
push
fstpt
fwait
cmp
test
jp
or
aaa
push
out
dec
push
outsl
sub
push
data16
adc
fmuls
movsl
pop
adc
dec
in
sbb
and
into
sub
pop
mov
movsb
addr16
jb
daa
lock
fnstsw
loopne
add
scas
andl
push
or
pop
aaa
das
push
push
pop
sbb
enter
movq
in
shr
mov
pop
sbb
call
and
adc
push
in
push
std
or
or
pop
xor
leave
add
mov
mul
in
inc
pop
repnz
pop
push
push
adc
inc
mov
rcrl
dec
in
sub
jb
lods
xchg
jmp
testl
mov
pop
adc
or
inc
xor
cld
data16
lds
xchg
hlt
movsl
jo
cmp
pusha
mov
mov
cmp
aas
cs
lret
hlt
sbb
outsl
jno
cmp
xchg
mov
ja
push
sub
mov
sbb
pop
xlat
xchg
push
subl
push
sub
mov
push
enter
pop
and
stos
adc
add
mov
out
pop
notl
xchg
push
jmp
cmp
pop
jle
scas
cmp
and
and
xchg
cmp
xor
mov
repz
imul
dec
mov
insl
add
inc
cmp
xor
cmc
mov
pop
imul
mov
insl
cmpsl
cwtl
stc
xor
xchg
jno
dec
xor
dec
and
inc
lods
repz
jo
inc
sbb
outsb
or
ljmp
push
addl
sub
xchg
in
push
push
lahf
out
mov
mov
stos
iret
ds
int
cltd
call
add
addr16
mov
xchg
xchg
insb
pop
popa
out
mov
sbb
cwtl
jl
jle
insb
loop
fldcw
jmp
out
pop
pop
inc
or
sbb
imul
loop
lea
or
adc
sub
push
roll
cld
cs
mov
imul
jnp
and
sbb
jnp
push
ja
jle
ret
pop
mov
xor
mov
push
or
and
mov
shrl
and
icebp
push
sbb
and
adcl
dec
roll
cmpb
fidivrs
not
pop
mov
nop
sub
stos
jno
xor
ljmp
cmp
aam
imul
xchg
sbb
nop
ljmp
push
stc
mov
stc
pop
cmp
inc
loop
stos
adc
call
addr16
stc
or
xchg
mov
mov
loopne
je
push
add
hlt
aaa
and
gs
mov
jns
dec
push
shrb
xchg
inc
fcompl
out
icebp
stos
jne
push
jae
cltd
xchg
mov
cmc
mov
inc
loope
sub
pop
lods
imul
mov
or
repz
inc
add
aas
shrl
cmp
fwait
push
shl
mov
mov
leave
pop
xor
stos
adc
fistpl
fldcw
sbb
call
out
jl
mov
push
push
rcll
clc
test
push
and
out
test
jo
call
mov
or
cmp
mov
mov
sti
js
mov
xlat
sbb
rol
sbb
ds
mov
add
push
cmp
jecxz
and
mov
mov
sbb
iret
fsubl
cs
sbb
and
fwait
inc
popf
sub
push
sbb
xchg
sub
and
xchg
jmp
fcomps
lds
sub
xchg
cmpsl
push
mov
cltd
fucomi
bnd
pop
xor
push
or
and
push
pop
add
js
in
push
call
repnz
popf
shlb
xor
add
and
jne
mov
and
xor
out
push
inc
sbbb
lcall
mov
nop
int3
sbb
dec
fldpi
add
into
lods
adc
lcall
daa
ret
xchg
sbb
xor
arpl
xchg
out
fidivrs
orl
aas
aas
testb
popf
sbb
or
aaa
call
movsb
cmp
pop
push
shlb
hlt
jg
cmp
dec
ret
cmp
add
mov
cs
cld
mov
movsb
out
js
lods
in
mov
mov
push
xlat
cli
push
inc
test
sub
into
sbb
cs
dec
dec
imul
dec
xchg
into
inc
sub
maskmovq
testl
push
or
scas
jl
lods
xchg
push
imulb
jns
pop
mov
jnp
adc
test
or
insl
mov
stc
je
xchg
adc
pusha
sbb
xor
in
push
lahf
ljmp
sbb
clc
xchg
insl
cmp
add
popf
or
add
adc
adc
or
jbe
dec
sub
mov
insb
jmp
clc
xor
jg
fildl
inc
out
sbb
clc
add
adc
inc
add
test
jp
repnz
mov
jno
fwait
push
pop
test
push
out
jecxz
jnp
cmp
clc
out
sub
mov
xchg
jge
jge
or
ficoml
lret
xor
outsb
adc
push
lock
adc
lock
xchg
pushf
mov
sahf
mov
test
outsb
cwtl
jne
and
imul
adc
mov
and
adc
test
sti
mov
cmp
pop
adc
push
add
jno
xchg
lcall
cmpsl
les
rol
adc
fbstp
sbb
pop
jae
dec
enter
push
pushf
mov
fsubr
jbe
cmp
loope
mov
outsb
iret
ja
add
sub
xlat
outsb
mov
pop
push
aas
lahf
sub
test
mov
insl
lods
dec
je
cwtl
mov
xchg
lds
dec
xchg
std
rclb
sbb
xor
in
fidivrl
cwtl
lds
sub
push
lahf
les
nop
dec
test
scas
and
mov
adc
fcmove
sub
call
stc
ds
mov
pushf
pop
sub
pop
cmp
out
addb
jmp
lret
leave
sbb
in
jecxz
jp
and
inc
ss
mov
mov
repz
inc
stc
fcompl
add
pop
pop
pop
jne
icebp
ret
push
push
mov
outsb
test
int
imul
jl
js
cmp
sub
aad
sub
arpl
enter
and
andl
adc
ja
xchg
repz
xor
fdivrp
pop
mov
add
mov
mov
fdivrs
repz
hlt
or
fcoml
adc
sub
stc
xchg
fucom
ja
nop
movsl
and
inc
or
add
mov
mov
xchg
jbe
fisubrs
insb
pop
push
adc
scas
aad
lret
hlt
pusha
sbb
ret
data16
cmpsb
test
and
and
mov
fcomi
jmp
dec
sub
mov
mov
ret
fiadds
es
cwtl
in
or
into
cmp
dec
andl
mov
ficompl
push
cmp
add
hlt
dec
scas
arpl
mov
sub
enter
stos
test
fldl
lods
xlat
and
lods
dec
pusha
mov
into
dec
cmpb
movsl
mov
push
sar
int3
push
bound
push
inc
iret
shrb
lds
xor
loopne
ret
adc
mov
test
sub
dec
repnz
xor
fisttpl
or
add
sub
enter
and
popa
sahf
ficompl
andb
cld
sub
inc
in
xor
into
aam
sti
sub
mov
cmp
imulb
leave
inc
cmp
test
sti
into
insb
xor
push
push
cmp
push
add
das
das
shlb
aas
imull
lea
sahf
bnd
out
pop
push
xor
mov
mov
cmp
dec
sbb
cld
xchg
push
addb
jge
xchg
and
enter
mov
xor
aad
push
repnz
cli
cld
ret
lea
mov
mov
out
sbbb
movsl
push
leave
es
int
push
imul
testl
lds
adc
cld
fstps
add
sub
repz
xor
push
in
lock
insl
mov
mov
outsl
adc
rclb
mov
sbb
leave
gs
gs
pop
cmp
outsl
jae
clc
aam
sbbb
fwait
and
xlat
filds
arpl
mov
mov
ljmp
fisubl
push
incl
insl
ret
and
ffree
mov
adc
out
adc
mov
xor
dec
mov
xlat
bound
inc
ret
lea
push
xchg
xor
sub
jp
rclb
pop
dec
cli
gs
mov
mov
jge
pusha
in
add
xor
fdivp
xchg
sub
pop
lock
pop
dec
imul
or
adc
jmp
push
testl
rclb
mov
out
dec
adc
lsl
insl
clc
xlat
pop
xchg
in
mov
and
sarb
mov
imul
scas
mov
repz
adc
or
pusha
sub
jne
mov
pop
dec
loopne
xchg
js
pop
js
cld
xchg
fistpl
jb
jge
shr
addr16
js
in
in
cmp
loop
fsubp
pop
add
mov
insb
loop
add
add
test
mov
pop
outsl
clc
mov
jp
mov
flds
xchg
jb
shl
jmp
cli
sub
push
orl
pop
flds
dec
or
xchg
addr16
lds
js
adc
mov
dec
cmc
gs
or
jp
js
mov
pop
sarl
or
sub
push
pop
popl
outsl
mov
lock
add
test
push
mov
arpl
fstps
jae
push
nop
jnp
pop
jae
push
jmp
dec
cmpsb
testl
adc
pusha
adc
mov
inc
cmc
push
mov
xchg
test
mov
cmpsl
push
lods
in
scas
repz
inc
cmp
gs
and
add
aam
je
mov
int3
push
cli
mov
pop
fisubrs
jmp
xchg
lcall
xchg
push
stos
test
lahf
push
insb
dec
sub
cmc
and
sub
dec
cmpsl
into
shrb
mov
ljmp
inc
in
call
fisubrl
arpl
shrb
push
into
jmp
scas
lcall
loop
mov
in
lods
dec
popa
sub
sbb
mov
mov
pop
rorb
push
imul
lcall
push
mov
mov
mov
popa
mov
cmp
jns
mov
mov
ret
xor
inc
scas
sbb
mov
mov
pusha
arpl
add
xchg
ds
dec
jg
or
mov
aam
mov
mov
inc
xchg
sahf
icebp
inc
pushf
xor
hlt
test
mov
fstps
scas
adc
dec
xor
popa
xor
pop
fwait
mov
sbb
test
cmp
push
lcall
jb
mov
push
or
cmp
lret
push
add
das
and
call
orl
rorl
push
xchg
outsl
fnstenv
xchg
mov
loop
cs
xchg
dec
in
push
xor
test
les
testb
sub
shll
push
mov
out
icebp
shrb
cmp
leave
sub
mov
add
shll
push
cld
add
aad
fwait
mov
cltd
inc
mov
sbb
jge
outsl
cmc
xchg
std
xor
sub
inc
dec
movsl
stos
jmp
divb
jno
pop
cmp
xor
imul
fstps
or
sub
add
les
scas
push
fistpll
in
ja
pop
in
jmp
cwtl
jge
mov
or
out
notb
inc
rorb
jp
jg
stos
cmp
mov
fwait
mov
movsl
dec
push
inc
mov
mov
push
xchg
scas
aas
lds
sti
loope
loopne
mov
nop
mov
call
lcall
mov
inc
jle
inc
in
sub
jae
ja
inc
ja
adc
adc
pop
shlb
jg
sbb
inc
mov
leave
pop
and
daa
in
xor
sbb
jo
mov
dec
pop
test
and
push
movb
push
xorb
xorl
jg
incb
add
lret
iret
int3
outsb
mov
enter
mov
enter
test
dec
je
call
cwtl
into
pop
arpl
fnstsw
mov
or
mov
and
mov
iret
lret
aam
xchg
mov
lret
popa
rorl
les
stc
push
ljmp
aas
call
sahf
test
addr16
cmpsl
xchg
adc
mov
lret
sbb
jnp
imulb
mov
cmpsb
and
jp
cltd
xor
ss
out
mov
rcll
xor
ljmp
push
out
mov
ss
scas
pop
cmp
push
push
test
movsl
aad
sub
std
clc
pop
ljmp
mov
pop
gs
pop
stos
cmc
fnstcw
sbb
jne
test
cmp
nop
fbstp
clc
and
imul
adc
lea
cmc
movsb
add
mov
or
jae
add
adc
adc
test
adc
mov
pop
xchg
push
sbb
or
jno
in
aam
test
shll
shrl
pop
mov
cmp
cwtl
adc
or
mov
mov
pop
add
cli
loop
or
jmp
fucomi
ljmp
xchg
outsl
xor
jbe
ret
sub
andb
sub
mov
and
push
insb
or
jmp
sub
pop
jne
jbe
rcll
sub
rorl
cmp
lcall
cwtl
mov
add
cmpsb
pop
push
stc
xchg
jle
gs
and
nop
icebp
dec
or
xchg
mov
mov
scas
cli
enter
push
mov
outsb
xchg
xor
jo
in
mov
insb
push
jle
addr16
mov
inc
outsl
sbbl
out
in
into
mov
sbb
scas
xchg
insb
sub
roll
push
fstl
mov
jae
mov
sbb
push
inc
mov
jp
das
arpl
push
fldenv
cld
pop
inc
push
std
push
mov
or
and
ljmp
and
mov
enter
push
loop
mov
into
movsl
fbld
cmp
into
jecxz
dec
mov
mov
gs
mov
fs
xlat
dec
inc
dec
loope
aaa
adc
inc
mov
je
scas
in
lock
push
clc
out
jb
jge
icebp
jnp
mov
mov
leave
out
jb,pt
popa
mov
sahf
repz
cltd
sahf
xor
outsb
mov
shl
jae
pop
subb
cmp
xor
pop
or
aad
stc
shlb
in
xor
loope
gs
ficompl
dec
lahf
jno
outsb
xchg
jmp
fsubrs
xor
fs
lcall
leave
pushf
int3
shlb
leave
fwait
lret
inc
arpl
xor
xorl
push
or
adc
out
dec
inc
xchg
mov
xchg
in
xor
xchg
cmp
cmp
mov
lret
jl
jg
mov
mov
call
imul
flds
cmpl
push
ret
add
addr16
or
jle
push
loopne
push
outsl
xorl
cli
xchg
stos
jne
sub
out
cwtl
lcall
mov
dec
aaa
cmp
cmp
ret
sbb
jbe
ljmp
and
incw
aam
jnp
in
rclb
pop
dec
xor
scas
lahf
hlt
push
xor
sbb
pop
sbb
mov
xor
fsubrp
scas
loopne
cltd
cmp
shlb
jno
iret
or
hlt
stc
in
jno
rcrb
inc
incl
jle
mov
es
pushf
sub
jno
jge
cmp
out
fiaddl
les
das
bound
mov
hlt
mov
dec
mov
or
stos
out
sarb
repnz
nop
sub
mov
xor
jbe
aam
adc
mov
push
gs
adc
shrl
ja
xchg
cmpl
jmp
adc
cli
outsb
dec
sbb
mov
mov
jne
push
mov
movsb
cmp
lcall
dec
in
insb
xchg
inc
jl
cwtl
xorl
cs
mov
lds
out
xor
jnp
sbb
dec
dec
xor
lods
lahf
inc
adc
add
std
pusha
sbbb
jecxz
lods
out
outsl
clc
sub
lahf
and
bound
xor
adc
bound
mov
sub
pop
inc
shlb
imul
xor
out
xchg
fiaddl
int
fnstsw
adc
or
sub
scas
cmp
add
hlt
mov
lahf
shrb
lds
xor
lods
push
les
fnstcw
scas
cmp
ja
push
pop
in
lahf
mov
xchg
aaa
push
fprem1
jbe
and
add
mov
xchg
sub
inc
pop
push
cmp
adc
push
inc
in
les
pop
xchg
push
out
pop
pop
popf
xchg
cwtl
mov
xchg
cmpsb
out
sbb
mov
jnp
lcall
ficoml
cmpsl
fdivr
aaa
dec
test
mull
iret
lahf
mov
pop
jecxz
pop
mov
sbb
das
xchg
insl
scas
lret
lods
ss
xor
loop
cwtl
outsl
mov
cmp
std
add
pop
dec
push
movsl
sbb
mov
and
addr16
and
push
inc
in
jns
incl
adc
sbb
push
mov
adc
xlat
mov
test
xor
pop
and
mov
sub
pop
mov
fsubs
sbbl
add
push
inc
aaa
add
or
push
int
ds
adc
mov
dec
and
or
insb
push
dec
mov
and
mov
stos
xchg
mov
stos
xchg
mov
lds
xchg
addl
ficomps
jae
jae
inc
lret
adc
and
xchg
mov
pop
mov
mul
dec
inc
ret
test
das
push
jle
subl
nop
dec
mov
ret
push
insb
sub
cmp
daa
dec
jl
push
jg
mov
jae
mov
pop
push
xor
leave
pop
mov
pop
adc
imul
aaa
push
jp
divl
in
xchg
je
cmpsl
xor
lock
mov
aam
push
test
push
dec
ljmp
sbb
xchg
dec
pop
imul
scas
dec
int3
jecxz
mov
aam
loopne
xchg
xchg
popf
icebp
roll
dec
mov
gs
add
and
sub
cltd
cmp
mov
pop
or
push
mov
jbe
movb
cmpb
icebp
jbe
ds
je
push
test
lahf
pop
sbb
movsl
push
das
jno
sbb
add
gs
xor
mov
int3
das
scas
pop
mov
sahf
roll
mov
scas
imul
inc
je
ja
mov
jmp
pop
cs
mov
nop
adc
mov
push
js
mov
push
movsl
jo
jl
cmc
fdivs
in
aaa
mov
iret
ja
int3
rcll
inc
pop
push
inc
inc
arpl
insl
mov
jle
dec
sbb
mov
imul
xchg
mov
in
imulb
cmpsl
sub
mov
int3
adc
call
mov
bound
insl
mov
shl
stos
cs
mov
sbb
and
mov
lea
movsb
pushf
adc
xor
adc
cmp
loop
fwait
imul
in
mov
bound
fadd
mov
jmp
in
pop
jb
shlb
jl
adc
mov
arpl
pop
and
or
jno
xor
arpl
cmp
xor
xor
scas
dec
lcall
mov
dec
sahf
dec
es
xor
pop
insl
fwait
pop
xchg
pop
or
mov
movsl
testb
add
xor
ror
loopne
ja
pop
ret
xchg
scas
jb
aam
call
sbbl
fnstenv
jp
mov
or
aad
bound
fisttpll
sub
push
mov
cmp
lahf
jbe
sbb
mov
mov
sbb
lea
in
dec
mov
int
ljmp
daa
int
mov
mov
adc
or
stos
adc
test
mov
mov
jge
aas
adc
xor
lock
push
xchg
push
in
daa
and
sbb
stc
sub
fisubrl
test
test
jp
add
cmp
inc
mov
pop
arpl
sarl
xchg
xchg
pop
xchg
push
mov
jg
push
and
cmp
imul
insl
sarb
lahf
or
push
and
sbbl
push
jno
push
dec
stos
insb
stos
test
and
jle
mov
frndint
cmp
and
or
call
mov
push
cmpsl
test
mov
pop
jp
inc
push
cli
pushf
fisubrl
ljmp
dec
nop
or
mov
lret
scas
add
jbe
shlb
pop
mov
sbb
mov
dec
or
or
inc
hlt
push
add
dec
pushf
sti
mov
popa
dec
rorl
subb
std
les
push
sti
popa
shrb
js
mov
jb
nop
insl
sbbb
shl
dec
adc
lock
mov
inc
imul
push
mov
mov
jbe
sbb
push
add
sar
cmp
int
cmpsb
sub
cmp
push
sbb
ljmp
inc
aad
mov
mov
dec
sahf
mov
aad
mov
or
in
insl
loope
enter
outsb
sub
stos
adc
enter
movsb
aam
pop
add
push
cmp
lods
test
lret
mov
pop
repz
nop
ja
adc
add
adc
jae
cltd
xor
lahf
stc
ja
or
icebp
cmp
cld
dec
pushf
addr16
jg
push
rolb
inc
rcr
mov
jecxz
inc
mov
stos
aas
jle
gs
inc
inc
mov
sbbl
std
sahf
sbb
sbb
ja
pop
xchg
in
dec
and
mov
and
leave
xchg
inc
mov
xlat
push
iret
dec
xchg
ds
scas
push
mull
dec
jae
lock
mov
fstps
pop
jae
in
xchg
outsl
cli
pop
fucomp
xor
addr16
or
mov
and
ljmp
ret
inc
int3
leave
push
loope
aam
lahf
cli
int
incl
cmp
xorb
mov
loopne
jne
cmpsl
xchg
movsw
sbb
sub
xchg
xor
push
pop
or
inc
insb
test
xchg
dec
subl
out
sub
orb
sbb
hlt
pushf
repnz
call
je
andb
jmp
push
add
sbb
aad
mov
sub
fldcw
je
dec
decl
xchg
cmp
adc
scas
add
adc
gs
popa
jo
cltd
icebp
fnsave
jle
ficomps
xchg
xor
mov
fs
lds
outsl
push
aam
js
cli
sbb
arpl
into
lea
push
adc
dec
push
pop
movsb
cmp
pusha
clc
mov
rcrb
mov
xor
sub
movsb
and
jl
and
stc
xchg
push
or
insl
movsb
testl
aas
adc
sbb
xor
imul
lcall
fsts
pop
inc
mov
arpl
mov
mov
call
mov
jmp
sub
mov
jg
clc
aas
enter
add
cmp
pop
push
inc
mov
mov
incl
or
cmp
out
in
lds
cmp
xor
enter
outsl
test
mov
rorb
mov
pushf
lock
bound
mov
push
shll
cmp
mov
mov
mov
adc
ljmp
inc
sbb
mov
xor
jns
push
popf
jo
sbb
dec
nop
gs
fneni(8087
cmp
pop
icebp
int
add
or
movsl
mov
cmp
and
or
jmp
mov
push
data16
lret
leave
out
and
mov
clc
arpl
dec
or
scas
mov
loop
ret
inc
lahf
pop
pop
mov
ss
and
imul
pop
aas
mov
dec
stos
or
dec
cli
test
xchg
inc
xchg
fcmovbe
xor
stos
dec
fimuls
cmp
test
xchg
dec
sbb
mov
sbb
ljmp
jo
popf
lret
out
pop
mov
loope
repz
ret
stc
cld
add
jle
mov
xchg
mov
dec
fs
sbb
mov
cwtl
xchg
add
mov
dec
loopne
std
test
addr16
push
inc
pop
lea
rcll
sahf
int
dec
outsl
sbb
sub
aaa
xchg
pop
mov
addl
cs
aam
mov
jae
es
mov
fnstsw
pop
push
add
mov
outsb
or
aaa
daa
fldpi
or
adc
es
outsb
cmpsb
test
mov
lret
jae
nop
push
lcall
test
mov
sub
add
rcl
stos
sar
jmp
xor
cmp
or
mov
faddl
pushf
sbb
sub
orl
or
push
xor
gs
pop
ds
xchg
scas
test
or
adc
popa
jae
js
xchg
push
lods
pop
outsb
bound
call
jmp
js
mov
mov
sahf
sti
aad
ds
mov
mov
jle
sbb
les
das
dec
rolb
cmc
push
leave
test
mov
jns
push
dec
pop
mov
ret
push
and
aam
inc
cmp
bound
leave
mov
aas
stc
jge
jo
call
lret
jp
mov
xchg
sbb
in
imul
or
pop
or
add
pop
test
outsb
dec
fnstenv
out
mul
xor
lea
pop
mov
inc
les
mul
repz
es
popa
cmc
sbb
dec
push
mov
pop
jb
xor
filds
jae
stc
mov
jle
out
push
push
inc
inc
loop
mov
mov
cltd
mov
in
xchg
cmp
jnp
and
jg
push
in
les
rcr
aam
pop
icebp
or
mov
nop
jnp
cmp
mov
jno
and
xchg
cltd
jae
fwait
mov
sbb
daa
or
fcmovu
xor
sahf
add
stc
mov
sbb
xor
shlb
push
cmp
das
or
sbb
cmp
jnp
orb
add
xchg
mov
or
loop
fs
push
mov
and
into
jmp
xorb
js
fwait
in
pop
gs
mov
sbb
sahf
test
jp
lret
cmp
movsb
inc
addr16
imul
cld
and
push
jmp
jg
mov
push
mov
jns
arpl
pop
jne
xchg
mov
stos
fimuls
cmp
fsubr
ja
test
xchg
mov
push
es
rcl
push
fildll
lds
inc
sti
mov
data16
xchg
xor
mov
movsl
mov
lea
push
aam
fists
gs
and
dec
mov
xor
ret
sbb
inc
push
mov
and
or
shrl
xchg
mov
add
test
sbb
aam
dec
sbb
bound
js
sbb
jmp
xchg
pop
fiaddl
sbb
cmp
dec
pop
pop
jae
jb
pop
ficoml
sub
mov
in
mov
push
xchg
jl
imul
fs
add
xor
sub
lahf
movsb
shlb
sbb
out
or
xchg
fbld
mov
test
dec
rorl
insl
ljmp
aaa
fcompl
iret
loope
icebp
out
imul
loopne
daa
aas
sbb
jmp
mov
xchg
sbb
jmp
jbe
mov
cmp
sbb
xor
lock
cmp
out
fistpl
xlat
pushf
mov
sub
insb
mov
aam
js
cmp
pop
dec
incl
movsl
push
mov
imul
mov
icebp
out
loope
popf
mov
lahf
jns
nop
jg
out
fldl
cmp
imulb
shl
test
fstp
mov
int3
mov
sar
sbb
xchg
xor
add
xchg
pop
les
xor
jg
jmp
xor
xchg
xor
imul
sub
movsl
ret
xchg
add
pop
out
mov
mov
iret
add
add
das
sarb
ljmp
xchg
scas
aam
push
push
aam
dec
bound
pop
cmp
add
xchg
ds
imul
out
push
and
call
repz
or
push
mov
pop
xchg
adc
shl
jae
mov
insl
and
rclb
sbb
ret
dec
fcoml
adc
pop
mov
shl
negl
test
push
rolb
fwait
scas
xor
jnp
test
pop
xchg
adc
jne
les
mov
jle
mov
mov
negb
lret
sub
jmp
data16
adc
sbb
or
movsl
dec
push
loopne
cmc
and
add
jl
cwtl
push
cmpsl
adc
push
xchg
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
push
add
movl
subl
movl
and
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
xor
xor
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
jmp
push
pop
rcll
fwait
pop
push
outsb
adc
fldl2t
jp
sbb
jp
es
xchg
jl
ja
stos
data16
in
fldlg2
add
or
or
and
rcrb
pop
imul
xchg
orb
loope
xchg
int
shll
test
icebp
pop
lea
lret
add
movsl
aad
cmp
mov
sub
into
and
ljmp
popf
lret
dec
push
lret
inc
imul
mov
mov
mov
mov
add
clc
adc
xor
data16
xor
arpl
out
dec
cmp
xchg
mov
fwait
add
pop
dec
enter
cmp
scas
imul
cmp
cmp
imul
stos
repnz
cmp
jecxz
dec
loop
pop
push
xor
lods
ss
push
nop
fs
add
cmp
sub
mov
aaa
hlt
das
call
mov
or
jge
inc
lods
mov
or
push
sarl
jg
mov
jle
add
aas
ficomps
ds
pop
xchg
subl
loopne
lea
mov
sbb
pop
les
outsb
pop
fs
jne
out
jo
popl
data16
andb
xor
jbe
mov
lcall
les
push
call
and
jo
fwait
iret
jb
pop
pop
add
sub
or
pushf
inc
mov
adc
mov
cmp
mov
sbbl
decb
jecxz
cmp
adc
mov
pop
pop
fs
cmp
xor
rcrl
adc
hlt
ljmp
lds
pop
mov
in
imul
repz
xchg
test
add
cmc
rcrb
and
repnz
scas
repnz
jae
jno
add
repz
fcomps
xor
int
add
sub
push
mov
pusha
xor
sbb
sub
rol
pop
stos
and
dec
int
cmp
iret
pop
and
movsl
iret
movsb
or
and
xchg
fcoml
jo
vpor
adc
fnsave
push
fldl
inc
fsubs
dec
lods
mov
popa
cs
xchg
clc
stc
dec
push
std
jmp
and
subb
popf
dec
xchg
test
in
mov
mov
xor
jo,pn
push
movsl
pop
orb
bound
mov
jb
push
popa
push
add
inc
lea
mov
mov
mov
stos
fs
mov
push
les
inc
popl
adc
sbb
add
stos
dec
stos
outsl
cmp
les
call
insb
push
add
daa
data16
or
out
fxsave
jp
xlat
or
repnz
fdivrs
loopne
mov
pop
nop
aad
jne
adc
jmp
rcrl
fstpt
sub
movb
lret
sti
lret
add
push
mov
into
pop
add
fdivrs
popa
lret
or
scas
mov
mov
mov
dec
push
stos
call
je
push
fwait
mov
sbb
outsl
and
ja
loopne
lock
sbb
sti
push
fdivs
rolb
insl
bound
pop
andl
shlb
ja
dec
pop
jl
add
adc
popa
sub
ja
mov
into
pop
jmp
push
notl
out
mov
fmul
pop
mov
add
cli
pop
cld
jp
and
mov
cmc
sbb
pop
and
push
and
addb
push
dec
pop
clc
sub
aad
sub
adc
ret
pop
std
mov
rcl
daa
scas
ret
js
cmp
jb
jge
pop
repz
ljmp
aas
xchg
pushf
adc
enter
into
ss
loope
pop
addl
sub
sbb
dec
rorl
or
in
pop
cmp
jno
push
lds
mov
lret
push
push
and
insl
popa
xchg
movsb
out
fs
shll
add
mov
push
in
lea
adc
in
jl
mov
inc
imul
mov
cmp
mov
ds
xchg
cld
jmp
mov
mov
dec
mov
add
xor
mov
sub
mov
outsb
mov
pop
shr
testb
je
test
and
cltd
testb
adc
xlat
push
jae
pop
cmpsb
mov
sub
xchg
cmp
inc
lods
je
xchg
sti
jmp
arpl
in
jle
push
cmp
mov
int
cmp
and
loop
push
adc
mov
and
pop
dec
into
test
add
mov
insl
fidivs
xchg
dec
cmpsl
stos
mov
add
arpl
mov
aad
negb
jmp
shl
mov
stos
mov
sub
or
bound
loope
test
mov
out
in
stos
mov
lahf
jnp
push
lret
test
and
mov
rolb
loopne
or
lret
adc
adc
out
mov
test
or
dec
cmc
xor
arpl
roll
push
loop
in
movsb
loop
jo
jno
ja
mov
lahf
js
cld
sbb
and
lock
xlat
ljmp
jl
and
out
hlt
or
xchg
imul
push
gs
xchg
pushf
in
inc
xlat
lret
rorl
and
pop
push
add
pushf
jl
mov
fwait
daa
jns
imul
xor
adc
loop
dec
cmp
insb
and
ljmp
dec
mov
cli
push
dec
pop
add
and
mov
jmp
scas
js
sbb
cmp
aas
add
adc
pop
mov
lds
testb
pop
inc
cmp
push
sub
push
push
mov
out
aad
sub
push
inc
test
mov
je
mov
push
jmp
and
xor
testb
leave
mov
jne
inc
std
pusha
inc
jb
jns
push
xor
adc
jle
push
cmp
gs
jns
ret
out
mov
pop
icebp
mov
in
mov
pusha
negb
or
orb
mov
aas
sub
xchg
icebp
ja
sub
push
gs
sbb
in
dec
dec
adc
aam
mov
das
lahf
in
cld
dec
imul
jo
inc
or
pop
shl
out
cmpb
sbb
cltd
and
add
dec
imul
stos
xchg
test
mov
add
sub
ficompl
xchg
pushf
pop
movsl
sbbb
pop
sahf
push
popa
adc
ja
sbb
jle
call
fnstenv
int
and
shl
mul
sub
pop
cmp
or
cmp
icebp
dec
pop
push
movsl
data16
push
adc
int
repz
mov
pop
in
pop
jbe
lret
sbb
push
mov
mov
outsl
movsl
jb
inc
xchg
loop
cmpsb
imul
stc
xor
hlt
sub
mov
xor
jnp
fsubrs
and
dec
and
mov
rcrl
sub
mov
inc
xchg
dec
add
add
int3
gs
test
inc
sub
dec
aam
adc
faddl
xchg
mov
sbb
das
jecxz
orl
les
mov
movsl
cmp
adc
icebp
aam
cwtl
pop
outsl
dec
push
stos
mov
mov
xor
cwtl
loope
push
cmp
lods
mov
cmp
cmp
mov
in
mov
push
add
and
inc
xor
xor
xor
mov
inc
lret
loope
add
push
ror
movsb
lock
cmp
dec
sbb
aaa
out
ret
cs
jmp
scas
mov
lods
xor
dec
sbb
jl
in
imul
cmp
mov
int
insb
das
or
pop
xchg
mov
mov
test
cld
cwtl
adc
xor
push
mov
xchg
int
aas
add
js
xchg
ret
in
dec
call
into
stc
pop
addl
and
pop
xchg
ja
mov
inc
jb
pusha
out
fcmovu
pushf
mov
fdivp
cmpsb
in
enter
subl
sub
mov
lock
inc
shr
or
inc
les
jnp
fisttps
aad
ljmp
pop
cwtl
movsl
xchg
ss
decl
sahf
sub
inc
jne
hlt
fidivrs
pop
or
sbb
mov
and
cmpsb
inc
mov
addr16
popf
add
adcb
push
xlat
push
cld
push
xor
cmp
mov
mov
arpl
repnz
ffreep
push
add
or
int3
push
sub
pop
dec
cmpsb
cmpsb
iret
mov
lret
cmp
xchg
cwtl
sbb
insl
cmp
inc
lds
sub
mov
xchg
jo
push
ja
sub
imul
push
jno
jmp
ljmp
dec
xchg
nop
xchg
repz
xor
push
hlt
lods
or
clc
std
ja
mov
fldl
xchg
mov
push
rcr
dec
call
mov
and
out
cmp
and
imul
xchg
mov
ds
test
jnp
sbb
lret
jge
dec
push
cltd
aam
test
dec
sub
out
sbb
mov
xchg
hlt
fidivs
sub
mov
and
sbb
jo
outsl
ret
cmp
mov
xchg
xor
loope
cld
pop
sbb
ljmp
arpl
xor
and
loopne
outsb
xor
jmp
and
popa
pop
in
cmc
lea
out
jg
xchg
into
out
jb
dec
lods
mov
ja
in
andb
sarb
xchg
sbb
sbb
or
sahf
and
andb
addr16
add
sbb
xchg
mov
fs
aaa
cwtl
cltd
pop
mov
sbb
ret
push
ja
mov
sbb
pop
pmaddwd
push
ljmp
mov
into
mov
dec
push
iret
cltd
sbb
jge
test
sbb
jp
fists
sahf
xlat
js
mov
mov
mov
daa
adc
fucomp
arpl
call
pop
cwtl
int3
xchg
fcmovnu
lret
jne
aad
xchg
daa
xor
push
packsswb
xchg
test
push
dec
sar
or
insl
pop
jle
lret
scas
jmp
cmpsl
int
ror
sbb
sbb
mov
xor
stos
and
test
loop
ret
add
xor
inc
jne
lock
pcmpgtb
aaa
repnz
aam
adc
sub
cmovae
jbe
cmp
cld
call
cmp
idivl
jnp
and
out
arpl
xchg
sbb
in
lcall
sbb
push
lret
aaa
mov
sbb
cmc
push
sbb
jle
arpl
stos
and
jnp
mov
or
es
daa
and
xor
cmpsb
es
dec
out
jb
dec
mov
pop
mov
jmp
lahf
in
push
pop
orl
xor
into
mov
dec
scas
push
xlat
js
loopne
mov
add
jbe
lcall
sahf
and
or
lret
sub
lods
dec
bound
jns
ret
mov
mov
in
inc
xor
ret
lods
ficomps
out
xor
fwait
push
jmp
test
test
cwtl
es
in
push
jecxz
cmp
push
decl
out
pop
cli
out
out
xchg
fbld
or
scas
mov
out
dec
imul
add
fildl
push
add
int3
sbb
lods
mov
jl
cmovl
and
inc
xor
mov
insb
xchg
inc
mov
cwtl
sub
xchg
xor
or
jp
je
sarl
mov
jg
xor
adc
dec
add
sti
shlb
add
daa
dec
dec
add
bound
gs
into
mov
int
xlat
mov
ds
popl
and
xchg
push
fisttpl
enter
lret
xchg
cmp
in
adc
stos
popf
cmp
mov
push
aam
je
push
dec
mov
pop
dec
mov
movsb
daa
ds
push
ror
jb
pushf
mov
lret
dec
dec
sub
mov
iret
or
ffree
clc
xor
add
loopne
data16
loopne
mov
fldcw
data16
aad
and
je
arpl
adc
xor
das
fisttpl
sub
push
dec
subl
jecxz
push
scas
lcall
mov
inc
jge
jecxz
movsl
shl
adc
pop
fimull
cs
xchg
mov
xchg
push
sbb
cmp
data16
mov
aaa
adc
fimull
popf
jge
dec
test
cmp
je
dec
mov
addl
xor
add
adc
pop
adc
lea
nop
pop
jmp
jecxz
mov
mov
xorl
pop
mov
fidivrl
jb
pop
fcmovb
ja
dec
jg
outsb
pop
fwait
out
dec
inc
or
add
hlt
sub
mov
leave
clc
and
cmpsb
out
jne
rcrb
xlat
sti
cmc
adc
sub
stos
pop
jl
cmpsb
mov
push
jg
clc
mov
mov
jg
xchg
xchg
pop
sti
loope
ja
and
push
nop
inc
mov
lods
and
lods
mov
stos
jg
cmpsl
jg
sahf
pop
inc
popf
movsl
cs
je
aas
jp
int3
adc
xchg
add
sbb
in
xor
stos
mov
enter
in
sbb
fmuls
pop
pop
jecxz
mov
pop
lods
scas
jl
xchg
adc
fsubs
shlb
imul
pop
or
fmull
push
xchg
fisubl
mov
xor
xor
data16
test
push
push
cmp
lahf
sti
push
shlb
call
out
push
cmp
stos
pop
inc
fdivl
je
cwtl
dec
xchg
stc
xchg
sbb
stos
push
pop
push
push
mov
jg
mov
jecxz
ja
lods
xchg
gs
data16
popf
push
jg
jmp
and
ss
mov
cmp
cmc
fcoml
les
std
push
sub
imul
ljmp
push
mov
in
sbb
sub
decb
rcrb
aad
mov
inc
mov
pop
rorl
mov
push
add
scas
je
sub
xchg
mov
mov
pushf
jecxz
xor
or
pop
lcall
xchg
insb
sub
mov
aas
inc
xor
xchg
add
cmp
scas
es
cmp
and
cs
aas
pop
pusha
stos
nop
cmp
add
fs
inc
or
popf
lret
mov
mov
int
mov
cld
lds
divb
sub
mov
jmp
lock
stos
xchg
mov
inc
cmpsl
jp
loope
pop
ss
xor
add
pushf
outsl
sbb
jbe,pn
xchg
mov
pop
aaa
popa
xchg
or
and
xor
arpl
or
aam
lods
addr16
in
xor
rorl
push
or
pop
movsb
js
pushf
out
or
stc
push
idivb
test
sbb
icebp
mov
je
inc
out
xor
clc
xchg
fucomip
pop
or
inc
sbb
ret
insl
pop
gs
mov
shlb
shrl
push
in
arpl
adc
fisttpll
cs
mov
push
mov
jns
stc
sub
shll
lcall
bswap
mull
adc
imul
add
sub
push
lods
xchg
lea
scas
lahf
add
and
lcall
jbe
sbb
xor
inc
cmpsb
test
hlt
and
pop
fnstsw
pusha
inc
int
xor
sub
push
pop
out
mov
ljmp
dec
test
pop
adc
sbb
sub
xor
pop
sub
sub
adc
out
jb
scas
fisubrl
push
mov
push
shlb
xor
push
sub
pushf
fimuls
je
add
cs
enter
and
out
push
inc
in
das
sbb
fcomi
sub
cmpsb
loopne
rorl
cli
inc
into
pop
cwtl
out
subb
data16
push
in
mov
cmp
hlt
pop
ret
test
sbb
pop
push
push
and
ret
sti
inc
inc
cltd
jle
fwait
or
ja
out
adc
pop
lds
fidivrs
or
xchg
push
jp
adc
cmpsb
imul
es
test
pop
xor
push
push
mov
insl
cmp
dec
outsb
mov
push
mov
aad
testl
sbb
cmp
jo
fcomip
stos
or
stos
mov
aad
pop
jae
out
xor
hlt
shrl
inc
sub
push
sti
inc
ret
out
fisubrl
test
dec
xchg
mov
aam
push
jl
shlb
pushf
sub
push
sub
lds
xor
ret
adc
push
lock
mov
inc
xor
sbb
cmp
jg
xor
sub
scas
cmp
stc
jns
ds
add
idivb
jnp
addr16
or
xor
frstor
dec
lret
jecxz
repnz
cmp
or
mov
cmp
fldl2e
repnz
pop
mov
repz
xchg
popa
cmp
fbld
sar
sarb
outsl
jo
push
fsubl
shlb
pop
loopne
jns
scas
cmpsb
mov
roll
jge
inc
xchg
lret
fldt
clc
jmp
sbb
mov
es
mov
out
repz
mov
int3
xchg
cli
testb
insl
sub
mov
insl
lock
and
push
icebp
das
pop
and
stc
add
mov
dec
sbb
pop
pop
loopne
aam
sbb
pusha
xor
roll
jno,pt
add
sbb
mov
mov
aaa
lock
out
lods
testl
sub
mov
and
jecxz
clc
inc
negl
bound
test
cs
js
xchg
cmp
xchg
insl
jecxz
dec
outsb
push
shrb
inc
xorl
sar
mov
divl
or
dec
mov
fistps
jp
lcall
int
in
jnp
sbb
sub
pop
shrb
jo
push
pop
ljmp
hlt
jo
test
lock
inc
mov
frstor
pop
xchg
mov
cld
cwtl
lahf
fsubl
dec
mov
mov
je
hlt
dec
pushf
cwtl
je
jno
xor
jmp
ror
ljmp
cmp
mov
inc
popf
sub
aad
push
or
fnstcw
int
mov
adc
or
or
jae
test
inc
push
sub
sub
jg
fidivrs
mov
pusha
or
out
out
and
clc
push
jmp
xlat
cmp
out
sbb
bound
fidivs
lcall
imul
sbb
pusha
xor
xorb
mov
loop
or
inc
pop
inc
push
and
das
pop
inc
rol
mov
inc
out
arpl
movsl
adc
mov
stos
pushf
adc
mov
jo
filds
push
loopne
jne
inc
xchg
adc
mov
aad
lds
into
out
lcall
andb
mov
push
xor
cwtl
loop
inc
scas
pushf
jno
mov
inc
xchg
push
inc
dec
mov
fmull
push
movsl
jbe
pop
sbb
mov
xor
repnz
jne
clc
popa
in
call
jno
xchg
or
ss
mov
mov
and
call
imul
mov
in
mov
xor
push
jge
dec
out
loop
cltd
mov
xchg
stos
xchg
add
insl
movl
mov
aas
int
lds
pop
es
sbb
push
cld
clc
inc
and
dec
scas
aaa
push
mov
shl
in
jbe
popa
sbb
mov
pop
mov
cmp
aam
cmp
shlb
addr16
xchg
cltd
aam
sbbl
pop
adc
icebp
jmp
jmp
inc
push
mov
and
mov
aas
aad
xchg
and
icebp
add
lcall
dec
repz
add
sahf
fistl
mov
and
or
xchg
int
or
pusha
sti
push
notb
xor
dec
lret
mov
xchg
and
sbb
xor
pop
repnz
shl
adcl
cmp
mov
gs
xor
ja
ja
mov
and
jl
ret
add
ljmp
add
mov
mov
insl
sub
xor
fldl
ljmp
test
movsb
stc
cmpsl
jmp
jle
ss
iret
pop
jl
out
sarb
inc
dec
sub
orb
dec
sbbb
and
or
dec
push
mov
jb
mov
stc
pop
into
imul
dec
push
dec
dec
es
aas
imul
pop
sbb
sub
lret
pusha
push
add
shrb
in
lcall
or
mov
icebp
cmp
in
popf
pop
call
push
sahf
clc
rcll
daa
or
ss
push
xchg
aaa
and
mov
ret
and
push
outsb
clc
sbb
in
dec
inc
stc
dec
fldt
pop
cmp
dec
iret
call
lcall
sub
pop
jg
loope
in
adc
jb
mov
imul
filds
inc
notl
mov
imul
repz
sbb
xchg
mov
scas
sub
lods
and
xor
call
in
or
pop
xchg
inc
lcall
cmp
stc
scas
sbb
enter
mov
add
fistpll
jns
mov
sti
push
or
dec
test
testl
lds
cli
dec
repz
mov
and
faddl
adc
insb
shrl
add
dec
das
lock
aam
das
je
sub
pop
cmpsb
dec
dec
icebp
ss
add
outsl
add
out
mov
hlt
call
mov
roll
add
jne
xor
out
push
jne
dec
leave
lcall
mov
dec
sub
mov
pop
aas
fcompl
cmp
fwait
out
adc
mov
lret
je
ja
je
xchg
adc
stos
pop
icebp
enter
pop
adc
sarl
aas
js
adc
test
dec
stc
mov
imul
add
xchg
add
cmp
jle
jp
xchg
pop
push
sub
xchg
fimuls
xchg
push
aam
add
cwtl
push
es
sub
fs
cmpb
icebp
mov
mov
cmp
cwtl
popa
or
enter
subl
xchg
popa
inc
fsubrl
and
pop
jmp
cmp
mov
repz
sbb
mov
adc
cmp
iret
data16
pop
cmp
or
repnz
movsb
pop
sub
lock
push
mov
adc
sbb
or
aad
pop
inc
testb
ret
ret
paddsb
add
fsubrl
jmp
int3
sub
arpl
rcll
inc
inc
js
mov
inc
sub
add
push
lods
iret
out
mov
push
add
dec
mov
lea
sbb
add
bound
insb
or
std
cmp
xchg
bound
mov
xor
xchg
mov
fcmovbe
sbb
jecxz
gs
cmpxchg
pop
lods
outsl
adc
inc
scas
dec
inc
cmp
addl
cmp
jno
xchg
cld
pusha
es
inc
adc
fisttpll
call
mov
add
inc
clc
jnp
push
cmp
dec
scas
subl
pop
rcrb
sbb
fdivrl
loope
mov
rcll
es
inc
rcr
sbb
insl
inc
insl
sub
clc
add
inc
add
sti
fistps
xor
sbb
xchg
dec
stos
pop
std
cmp
xor
outsl
xchg
inc
push
addr16
cmpl
and
mov
dec
repz
sti
mov
cmp
adc
adc
mov
cmp
lods
mov
adcl
ja
pop
or
add
sbb
out
inc
cmpl
xor
dec
nop
lcall
cld
sub
or
test
les
dec
movl
mov
ds
shrl
loopne
flds
ret
xchg
cmpsb
iret
mov
mov
inc
jno
dec
ja
je
xor
sbb
orl
adc
iret
leave
xchg
rorb
les
aaa
add
dec
insb
xchg
dec
xchg
lock
mov
inc
mov
mov
inc
xchg
ror
jno
sbb
add
pop
je
cs
pusha
jge
mov
das
adc
into
sbb
js
enter
jbe
imul
aad
mov
sbb
in
out
mov
jnp
ret
mov
daa
in
hlt
adc
idivb
ljmp
negb
sti
dec
cmp
movsl
pop
scas
loop
jp
imul
je
faddp
add
imull
leave
mov
fistps
dec
jecxz
jo
lods
lds
pushf
mov
sub
int3
add
mov
mov
movsl
das
mov
addb
cmpsl
imul
jmp
and
pop
xor
dec
pop
xchg
fimull
dec
stos
int3
add
jae
or
stos
pop
push
mov
and
lahf
inc
lock
outsl
jg
cmp
mov
cld
mov
daa
into
leave
scas
or
push
pop
aad
add
shl
inc
mov
je
cwtl
clc
pushf
aaa
push
jne
outsb
jne
jnp
mov
shrl
ret
cmp
call
fiaddl
repnz
push
mov
loop
cwtl
cmpsb
xor
xchg
and
mov
mov
popa
sub
xchg
nop
aaa
push
inc
ljmp
test
and
or
adc
xchg
ret
mov
fcmovnu
jne,pn
cli
mov
stc
and
push
inc
and
stos
mov
out
jmp
or
sub
loope
push
or
pop
xor
clc
enter
repz
les
mov
shll
daa
mov
pop
adcb
loopne
and
bound
pop
fucom
add
push
aas
mov
stos
ret
adc
scas
les
shll
mov
push
jns
mov
fisttps
xor
pop
or
jl
rcrl
dec
cmp
push
pop
push
and
adcl
push
push
lcall
insb
bound
stos
jb
mov
push
mov
mov
jmp
bound
imul
cmpsb
stos
and
leave
iret
cmp
pop
das
imull
mov
lcall
test
pop
inc
push
and
ljmp
push
push
or
pop
fstps
gs
mov
pop
xor
sub
push
fsubrl
mov
sub
mov
mov
xor
pop
cvtps2pi
or
push
inc
test
inc
xor
jb
sbb
je
in
cmp
push
xchg
xor
push
ret
push
outsb
adc
push
negl
inc
xchg
frstor
mov
shlb
adc
jmp
dec
imulb
in
not
jb
loopne
cmp
aad
pop
add
mov
mov
jg
mov
movsb
insl
mov
mov
cmp
lods
shlb
dec
test
or
pushf
in
mov
jns
loope
test
fimull
xor
inc
inc
push
push
fmul
push
inc
and
mov
xor
xor
pop
cld
lock
cmp
mov
movsb
scas
push
out
push
jp
pop
push
cmpsb
sub
sub
mov
sub
lret
sti
inc
enter
dec
in
xchg
xchg
lret
xchg
stos
or
mov
push
cmp
loop
frstor
in
jge
add
fwait
xor
dec
mov
mov
pop
jb
in
out
rorb
add
mov
push
inc
push
subl
mov
sub
inc
jmp
jns
sub
sti
jg
imul
push
ss
fwait
cltd
in
lret
jge
push
jp
jo
inc
mov
add
and
jne
mov
mov
int3
aaa
sbb
sahf
fs
mov
insl
xor
stc
aam
mov
jnp
mov
mov
es
je
aad
push
adc
cbtw
clc
loope
jge
cli
inc
adc
divb
pop
jle
test
jbe
js
dec
lock
enter
outsb
sbb
mov
mov
fs
in
cltd
repz
test
mov
shll
inc
sub
in
fstp
std
mov
push
jns
and
inc
out
cmpsb
lahf
cwtl
adc
enter
pusha
into
jmp
shrl
jp
xchg
imul
sbb
mov
repnz
dec
aam
sbb
bnd
arpl
das
rep
in
cwtl
and
or
je
mov
jae
pop
sbb
enter
add
in
daa
mov
aam
or
fiaddl
sub
fstl
cltd
sbbb
push
adc
adc
ljmp
cmp
xor
xchg
lahf
aaa
test
fcomi
icebp
jecxz
sbb
pop
es
pop
mov
outsl
sbb
xor
mov
mov
mov
push
jne
xchg
std
je
lret
roll
fwait
movsl
pop
xor
stos
jmp
push
pop
repnz
movsb
cmp
outsl
ret
nop
sahf
or
mov
into
out
addl
popa
mov
mov
dec
jbe
dec
sub
mov
mov
movsl
pop
xor
xchg
lds
push
test
mov
push
cltd
lahf
or
adc
adc
pop
mov
mov
and
push
inc
data16
sbbl
jb
loopne
test
shlb
test
lds
repz
ljmp
jb
xchg
divb
mov
lcall
js,pt
sbb
imul
mov
filds
shll
loope
pop
shll
les
daa
add
cs
stos
or
outsl
sub
and
or
lods
out
jno
adc
sub
mov
testl
cli
dec
rolb
cmp
cwtl
adcl
adc
loop
aaa
pop
lcall
lods
out
jmp
movsl
add
call
inc
out
inc
lret
xchg
adc
dec
bound
ljmp
sub
dec
sub
sub
stc
das
mov
adc
inc
add
into
in
pop
push
or
fs
addr16
test
mov
mov
ficoms
enter
sbbb
ss
frstor
pop
dec
fstpt
push
adc
jns
loope
sbb
cmp
int
push
jb
push
ss
and
lcall
or
lock
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
or
movl
adcl
mov
mov
mov
add
mov
negl
xor
add
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
or
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
adc
mov
adc
mov
adcl
xor
mov
and
mov
decl
add
movzwl
add
mov
movb
mov
mov
adc
lea
subl
mov
mov
inc
mov
xor
adcl
sub
adcl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
mov
dec
mov
jmp
sbbl
movl
push
movl
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
andl
xor
or
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
xor
mov
or
mov
sbb
xor
or
mov
push
add
jmp
movl
mov
mov
movl
inc
cmp
jb
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
not
mov
subl
xor
adcl
add
movl
jmp
decl
mov
adc
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adcl
mov
subl
add
movzwl
negl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
or
mov
movzwl
movl
xor
add
movl
mov
movl
mov
mov
inc
mov
movl
cmp
jne
mov
mov
adcl
xor
movl
add
subl
mov
add
mov
addl
xor
add
movl
mov
mov
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
jmp
sbbl
mov
and
mov
xorl
xor
xor
sub
sub
sub
xor
mov
mov
mov
subl
lea
movzwl
adc
mov
sbbl
mov
dec
mov
lea
mov
sbbl
mov
add
mov
lea
mov
incl
mov
sbb
mov
andl
lea
dec
mov
movzwl
adc
mov
mov
addl
lea
mov
xorl
mov
andl
mov
orl
lea
addl
mov
or
mov
xor
add
movl
jne
jmp
negl
mov
mov
subl
xor
xor
sbbl
sub
orl
sub
xor
movl
mov
movl
mov
movl
mov
jmp
mov
mov
xor
adc
xor
xorl
sub
sub
or
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
jmp
fstps
sti
sarl
jnp
inc
xchg
or
shrl
aad
je
jp
sti
pop
jp
jl
mov
or
pushf
mov
subb
popa
jecxz
out
jge
ljmp
pop
adc
cmp
loopne
bound
add
clc
imul
scas
or
stc
loope
orb
mov
jno
xchg
xor
notb
mov
adcl
xor
pop
repz
xchg
jecxz
push
dec
rcr
inc
stos
mov
fiadds
adc
add
icebp
inc
or
sbb
outsl
and
dec
xor
popf
outsb
bound
jg
pusha
in
add
jecxz
dec
jns
inc
sub
ljmp
rcrb
movsl
mov
mov
jg
aas
orl
pop
aam
jle
dec
mov
xor
daa
push
xchg
sbb
pop
adc
push
mov
ss
arpl
fs
icebp
repz
sub
aad
jo
inc
mov
ss
xchg
jg
mov
pop
arpl
fnstenv
movsl
xor
adc
sbb
mov
push
mov
cmc
lcall
mov
push
sub
and
in
test
adc
mov
adc
in
and
and
into
dec
jae
jae
pop
test
cmp
sarl
cmpsl
sub
cmp
fmull
arpl
stos
pop
push
sbb
pop
mov
jae
shrl
lods
dec
adc
dec
mov
lahf
mov
pop
and
lods
popa
xchg
xchg
mov
add
sub
push
pop
cmp
and
aas
leave
mov
mov
adc
pop
mov
push
pop
imul
fnstenv
shll
mov
not
mov
shll
repz
aam
das
les
jge
inc
cmc
xchg
sbb
lods
cwtl
and
roll
hlt
fstl
or
and
in
jne
push
popa
jne
addr16
push
into
jle
push
pop
xor
xchg
hlt
cmpsl
and
adc
fcmovnb
xorb
in
and
fldt
insb
out
jge
fidivs
stc
icebp
stos
shll
lods
jb
fsubrl
sub
push
add
dec
fstpl
add
adc
mov
cmp
dec
test
rcr
mov
dec
daa
inc
mov
mov
andb
mov
ljmp
mov
addr16
popa
adc
call
sti
test
outsb
adc
lcall
jg
mov
stc
sbb
mov
adc
push
and
mov
cmp
sub
js
scas
mov
cmpsb
orb
not
aad
sbb
jmp
mov
jns
jl
movsb
or
aas
push
test
jl
rclb
test
divb
push
loop
fldenv
lahf
insl
sbb
and
xchg
jmp
loopne
cli
xor
push
ret
xchg
jnp
ret
test
bound
in
add
sub
pop
add
or
les
cmp
pop
insl
and
adc
xchg
fwait
lds
call
popf
ljmp
mov
push
stos
and
jge
xchg
mov
orb
lcall
and
lahf
aas
and
scas
fs
push
pop
ljmp
aad
dec
pusha
sbb
xorl
add
loop
push
sub
xchg
loop
jns
mov
xor
popa
mov
repz
dec
pop
mov
cld
mov
ret
jp
sub
push
dec
mov
test
xchg
pop
xchg
pop
push
je
jns
test
xchg
aaa
repnz
insl
and
push
lret
or
xchg
mov
ss
adc
je
dec
or
and
fmul
imul
divb
shl
mov
mov
and
sbb
xchg
fistpl
ja
xchg
sub
push
jp
fcom
mov
movsl
clc
or
js
scas
mov
jno
sub
neg
xor
push
sub
icebp
aaa
jbe
fcoms
push
jge
cmp
fildl
fiaddl
ror
rcll
dec
call
mov
or
add
pusha
fadd
pop
cmp
pop
sar
add
pop
ss
ss
ficoml
xor
dec
adc
ret
sub
sub
leave
mov
sbb
ret
mov
dec
xchg
mov
add
dec
mov
movsb
movsb
outsb
loop
test
test
adc
cltd
jo
scas
stos
adc
pushf
jbe
cmp
cmp
call
jecxz
pop
jl
xor
push
das
or
gs
and
pop
icebp
fstps
cmp
mov
push
push
fsubrl
mov
pop
aas
in
mov
jg
sti
sbb
add
jle
iret
push
mov
dec
jae
int3
outsb
sbb
shrb
sbb
call
push
mov
es
cltd
sub
fistpll
inc
cmp
mov
rorl
mov
pusha
bound
mov
sbb
xchg
pop
mov
lds
jg
in
and
xor
add
stc
push
inc
addr16
mov
xor
jge
repz
jecxz
test
inc
sub
loope
mov
or
and
sub
cmp
sub
dec
adc
and
sub
pop
adc
pop
sub
addr16
iret
loopne
test
test
inc
popl
mov
xor
and
fisttpl
adc
imul
mov
out
jle
adc
outsb
push
jecxz
rcrb
clc
adc
push
pop
cmpsb
fisubs
adc
aad
mov
repz
cmp
call
andb
pop
dec
daa
rorb
xlat
aad
pop
pop
adc
stos
mov
adc
inc
mov
push
clc
fwait
adc
mov
sbb
repz
in
mov
inc
cltd
in
add
mov
orl
cmc
cmpsl
inc
dec
adc
jmp
push
push
mov
loopne
or
stos
or
pop
int
test
in
push
sbb
das
scas
adcl
andb
jg
out
data16
out
fucompp
adc
xlat
pop
mov
mov
sbbb
jmp
xchg
inc
mov
sbb
xor
dec
movsl
test
sub
inc
mov
push
test
xchg
mul
or
lea
pop
mov
out
rcl
gs
pop
jnp
xor
push
dec
jle
dec
mov
mov
and
enter
mov
adcl
dec
loop
mov
cs
dec
test
pop
test
repnz
mov
pop
or
aas
lods
xchg
add
mov
out
and
pop
fbstp
pop
cmp
mov
mov
rclb
ret
cmc
andb
dec
shrl
cmpsl
lret
rclb
inc
sub
js
out
sbb
popa
cmpsl
pop
mov
nopl
daa
mov
adc
clc
cmp
stc
dec
jb
aas
notb
les
andb
jl
daa
sbb
xor
jl
test
dec
push
imul
fisttpll
dec
push
ret
mov
loopne
jo
les
mov
add
cwtl
and
ret
adc
imul
mov
mov
inc
sub
ss
inc
test
cltd
or
inc
dec
je
fisttpll
push
xor
mov
int
pop
shrl
xchg
jge
mov
or
push
mov
jbe
jg
pushf
cwtl
and
hlt
pusha
rcrb
push
sbb
jge
int
cwtl
ljmp
add
lret
xchg
xchg
addb
lahf
xchg
sahf
sub
fiaddl
push
ret
pop
push
int
push
xor
or
imul
shl
aas
adc
in
in
test
les
sbb
inc
gs
gs
aas
fistpl
sub
imull
pop
xor
push
into
mov
dec
mov
insb
loope
jecxz
mov
or
xchg
inc
pop
test
push
adc
jno
aaa
jl
lock
test
jo
jg
out
dec
shll
xor
movsl
or
test
fdivrl
into
fdivl
stos
sarl
and
push
pop
xchg
and
push
sub
into
mov
outsb
jae
loop
dec
mov
mov
jmp
repz
dec
mov
ss
movsb
inc
sbb
lea
add
mov
or
pushf
lret
lods
push
cmp
movsl
cmc
test
push
dec
in
popa
or
aas
push
pop
sub
jo
mov
sub
or
mull
sub
mov
inc
cmp
xorb
push
jmp
iret
jl
call
jp
xor
fstpl
xor
nop
cltd
in
cmp
pop
das
cli
movsl
sbb
pop
aam
shlb
test
arpl
sub
cli
mov
lret
fidivs
repz
repnz
and
push
push
xor
cwtl
mov
push
flds
sbb
add
mov
mov
adc
bnd
add
adc
lods
xchg
imul
and
xchg
lds
rcl
jo
and
sbb
int
mov
pop
sbb
negl
or
lock
adc
pop
ret
mov
and
aas
sti
loope
xor
lods
inc
je
hlt
push
pop
testb
inc
pushf
mov
mov
js
sbb
add
sbb
imul
push
xchg
js
hlt
jg
std
orb
jns
cmp
mov
dec
and
in
fstpl
mov
out
rcr
mov
push
jnp
test
pushf
mov
and
pop
dec
push
sub
push
jns
rorl
outsb
mov
pushf
sbb
mov
cmp
mov
test
dec
adc
xor
push
ss
jb
ds
sbb
out
or
jle
fcomps
push
mov
call
test
cltd
scas
push
stc
xchg
xchg
xchg
addr16
loope
shll
adc
push
out
bound
and
xor
mov
clc
andl
push
pop
lret
push
push
xor
adc
xchg
stos
dec
mov
popa
ficoml
clc
pop
sti
adc
out
pop
inc
into
imul
jns
push
push
call
inc
fs
lea
fwait
push
stc
mov
jbe
call
pusha
lods
out
stos
mov
sbb
adc
cwtl
dec
loope
sbb
in
cltd
loop
cmp
out
jb
mov
fcompl
sbb
sbb
jmp
inc
mov
dec
mov
stos
cmpsl
sub
inc
in
inc
in
jbe
stos
mov
mov
sbb
insb
mov
sbb
std
aaa
clc
add
fwait
pop
dec
mov
xchg
push
sub
fnstenv
test
lret
not
or
jne
gs
and
xchg
pop
outsb
cmp
jae
into
enter
das
mov
pop
arpl
mov
add
test
lea
cmpsl
fwait
insl
mov
pop
cmpl
sbb
jmp
fisttpll
imul
icebp
fwait
push
fwait
pusha
and
hlt
mov
mov
imul
ja
xchg
xchg
jg
cli
les
sbb
sbb
loopne
inc
mov
pop
rclb
imul
lcall
pusha
insb
stc
neg
pushf
jno
mov
jecxz
mov
rolb
jbe
out
cmp
and
push
xor
jmp
cmpsb
lret
shll
in
popa
in
push
mov
out
scas
shl
out
inc
mov
cltd
out
push
sub
movsb
add
adc
push
es
mov
xor
xchg
das
ret
out
inc
xchg
pop
jnp
sub
jb
call
std
dec
jmp
fwait
fs
mov
cmpsl
hlt
aaa
cltd
xor
jo
sub
fcom
lods
jb
js
sub
xor
sub
mov
sub
out
xor
iret
test
jnp
repnz
out
mov
or
xor
repnz
idivl
enter
pop
das
inc
sub
mov
fdivs
cltd
pop
popa
or
test
in
push
cmpsb
jl
push
adc
push
rcrl
jae
push
dec
cmc
mov
inc
adc
es
mov
ret
lock
dec
cmc
adc
jle
mov
dec
das
cmp
scas
sub
jno
icebp
mov
and
in
mov
dec
mov
mov
test
cmpsl
int
xchg
sub
jno
mov
dec
xchg
and
and
inc
mov
clc
mov
mov
hlt
pop
int3
int
xor
les
and
jb
xor
pop
mov
xchg
out
add
xor
pop
addl
je
cltd
xchg
lock
ss
negl
push
cltd
jp
jl
adc
inc
mov
xor
ljmp
test
mov
sub
sub
inc
cmp
jge
xor
jnp
movb
and
jnp
ret
lcall
in
cs
out
pop
aaa
mov
ret
testb
aas
scas
dec
pop
xor
imul
enter
add
test
roll
stos
push
dec
push
push
ret
cmp
sub
cmpb
hlt
jae
jge
add
test
push
mov
xchg
les
mov
add
fidivrs
stos
fwait
mov
sbb
jb
cmc
xor
das
lahf
sub
or
sub
insl
aaa
in
sbb
or
xlat
dec
lock
push
cld
addr16
or
xor
rorb
jo
ficoms
in
das
decb
xchg
xrstor
insb
push
enter
rcrb
cld
jo
lret
lcall
arpl
mov
lret
and
push
fwait
setle
rorl
pushf
adc
dec
sub
sbb
push
sbb
cmp
jecxz
cmc
add
mov
and
scas
test
or
pop
mov
xor
cld
out
lea
add
mov
mov
push
leave
arpl
push
xor
xchg
dec
pop
add
push
movsb
and
sbb
mov
decl
sbb
adcb
sub
fsubrl
pop
mov
scas
ljmp
adc
pop
pop
sub
ja
jbe
pop
arpl
in
mov
dec
arpl
dec
dec
fnstenv
cs
xchg
lods
adc
in
pop
cmpsb
out
mov
or
cmp
insl
mov
call
and
jb
jno
and
rcrb
fs
add
sub
rorl
mov
stos
push
fsubrs
cmp
inc
jne
pop
push
jb
adc
mov
fimull
inc
lds
outsl
adc
mov
push
mov
jmp
dec
dec
enter
mov
fbstp
dec
inc
cmp
fisttpll
xor
and
hlt
dec
or
ja
mov
ret
dec
xor
in
xor
fwait
cmpsb
sarb
mov
fstl
sub
ret
into
inc
adc
out
pop
mov
xchg
in
mov
pop
sub
shrl
push
jmp
jnp
dec
lods
cmc
popf
mov
cmpsb
ss
pushf
andb
cld
lock
mov
xor
push
js
cmpsb
mov
popl
inc
and
sbb
fidivl
push
push
cwtl
in
sub
loop
jno
adc
sti
xchg
cmc
clc
call
cmp
or
and
jle
jle
cmp
xor
sti
mov
xor
jbe
cwtl
or
xchg
cmp
scas
push
mov
jne
sarb
xorb
ljmp
push
cmp
push
cmp
outsl
or
leave
movsl
sbb
sbb
push
out
mov
adcb
cs
out
ljmp
rclb
push
mov
pop
inc
roll
pop
mov
loopne
in
test
jns
xor
mov
repnz
sbb
jmp
dec
add
dec
fdivs
stc
outsl
mov
push
lock
cmp
push
adc
lock
xor
mov
outsb
pop
dec
das
adc
data16
ds
add
xor
hlt
mov
lcall
cmp
incb
mov
insl
and
and
cli
cmp
mov
mov
lret
js
les
and
fidivl
cmp
addr16
jo
sbb
gs
test
arpl
add
faddl
sub
fidivrs
jne
decb
hlt
rcll
add
ss
jmp
jno
xchg
int3
xor
or
out
push
xor
mov
rcrb
sub
in
out
mov
and
push
cmp
lahf
dec
cmp
scas
xor
call
dec
call
popf
ss
push
fwait
push
popa
cmp
rcl
mov
rcll
ljmp
mov
add
and
cmp
jnp
xor
inc
aas
ljmp
jg
push
int3
sahf
imul
icebp
pop
mov
hlt
push
shrl
ljmp
out
iret
shrl
cmc
jo
mov
mov
inc
outsb
sub
shlb
push
call
ret
adc
lret
sti
mov
cmp
subl
popf
dec
jge
jb
or
lea
sub
xlat
mov
out
sub
pop
sahf
fstps
xchg
cmp
pop
subl
or
movhps
ds
push
or
sbb
mov
out
push
mov
push
sub
push
cmp
dec
cs
insl
adc
lahf
lock
push
cli
testl
test
add
pop
mov
push
scas
lea
cs
stos
lcall
jg
test
test
lret
mov
pop
fs
insb
das
pop
mov
inc
mov
popa
push
in
xchg
daa
icebp
cmp
push
je
xorb
mov
jae
test
sbb
aaa
adc
xchg
sbb
inc
inc
repnz
cmpsl
pop
cmpsl
rorl
mov
or
test
fldcw
fldcw
outsb
lret
hlt
cmp
mov
cmpsb
std
mov
adc
out
jmp
scas
cmp
pushf
daa
leave
push
enter
inc
cld
pop
jg
mov
xchg
test
scas
dec
faddl
sub
fcmovnbe
add
inc
push
fildl
xchg
mov
int
imul
inc
mov
push
addb
mov
scas
jb
push
aaa
mov
xor
mov
push
int3
enter
out
out
or
test
daa
sti
jge
pop
scas
loope
pop
loope
ret
insb
mov
fstps
jle
cli
fwait
sbb
fldenv
or
sbb
push
mov
shrb
data16
pop
mov
pop
xorb
rorb
daa
or
push
bound
test
sub
call
sahf
cltd
roll
test
push
shll
rcrl
jp
mov
mov
hlt
adc
adc
mov
cmpsl
fs
mov
adcb
aam
mov
pushf
cmp
stos
rorb
in
and
mov
jae
push
add
mov
xlat
popa
cmc
and
ss
mov
pop
ds
inc
fistl
inc
arpl
add
cbtw
push
xchg
xchg
ja
insb
subl
mov
jmp
xchg
fsubrs
mov
aaa
sti
imul
pop
call
xor
scas
sahf
xchg
test
xor
fidivrs
xor
stc
mov
push
repz
xchg
jno
int
push
mov
pop
adc
and
in
xor
arpl
or
inc
repz
repz
sbb
ds
lret
xchg
dec
dec
push
xor
mov
in
pushf
xchg
and
mov
push
xchg
fisubrs
lock
adc
icebp
rorb
push
loopne
xor
inc
mov
popf
in
push
outsl
xchg
dec
mov
fdiv
dec
enter
pop
jno
sub
insb
lock
fs
xorl
adc
mov
repz
nop
jle
mov
gs
std
repnz
mov
or
inc
bound
jg
push
xchg
mov
adc
hlt
testb
xchg
adc
adc
jecxz
jne
out
mov
adc
inc
cmp
and
pop
loop
outsl
sbb
bound
adc
ss
pusha
mov
dec
cmc
rorb
in
popf
jns
cwtl
mov
cmp
mov
sub
and
inc
push
mov
mov
adc
jno
push
push
jno
sub
pop
imull
stos
in
jmp
pop
cltd
inc
xchg
data16
pop
in
or
jmp
es
insb
aaa
in
mov
cmp
pop
cmp
adc
push
jle
add
xor
inc
addl
add
jg
js
outsl
shrl
fcoms
je
movsl
mov
xchg
inc
fldl
dec
add
add
dec
inc
movsl
push
stos
cmpsb
cmpsl
test
jmp
sub
dec
out
adc
mov
jbe
pop
out
cs
jo
lods
arpl
adc
rcrb
cmc
sub
sbb
in
stos
lahf
cli
lds
call
xchg
insl
push
cmp
cmc
into
js
loop
mov
xchg
movsl
pop
xor
ss
cwtl
fwait
pop
cli
sbb
sbb
mov
inc
pop
or
aaa
jg,pt
mov
scas
imull
jae
incb
std
inc
test
dec
mov
adc
jno
mov
xchg
lods
jb
inc
test
pop
xchg
pop
jae
xchg
cmp
inc
mov
das
push
icebp
pop
fnsave
stos
dec
push
xor
pop
clc
lret
lcall
pop
arpl
popa
stos
adc
call
xlat
fstpt
cli
jo
lret
sbb
and
fisubrs
cmc
in
and
ds
xchg
arpl
jbe
mov
pop
stos
sbb
dec
repnz
mov
or
insl
xchg
loopne
push
fbld
xchg
inc
cmp
and
push
movb
mov
adc
jb
sti
orl
loop
pop
in
ja
cmp
mov
lahf
test
mov
xchg
mov
jbe
xchg
add
add
mov
movsb
fbld
lds
inc
subb
inc
cmp
xchg
js
lcall
rep
jg
sub
cwtl
push
lods
test
pusha
adc
or
gs
stc
mov
bswap
adc
test
lds
xor
shr
leave
push
lret
sbb
push
xchg
cmpsb
xchg
or
dec
cli
cmpsb
xorl
pushf
lret
in
daa
sahf
ja
div
ret
push
movsl
cmpsl
ficoml
add
adc
loop
pop
popf
push
mov
adc
cld
sbb
les
add
decb
into
push
movsb
jl
scas
pop
andb
mov
pushl
roll
add
loop
stos
cmp
lret
dec
adc
cmpsl
cmp
js
in
dec
mov
sub
xchg
repz
test
inc
add
and
mov
lret
sbb
fsubs
in
jae
call
or
pusha
ja
mov
cmp
pop
xchg
xchg
xchg
sbb
cmc
data16
negb
aam
hlt
imul
xchg
and
sbb
jl
cmpsl
enter
sub
cmp
ss
shlb
cs
in
lds
cmp
push
mov
sbb
pop
xchg
inc
and
iret
xchg
or
sbb
data16
clc
pop
pushf
pop
outsl
xchg
inc
stos
inc
incb
arpl
jne
fstpl
add
lret
xchg
adc
adc
shll
insb
xchg
cld
ret
or
leave
ds
leave
shr
mov
sub
es
push
iret
mov
scas
xchg
sbb
outsl
gs
dec
mov
xchg
filds
stos
js
out
adc
daa
jecxz
cmpsb
roll
shrl
xchg
mov
push
jno
fisttps
push
sbb
adc
push
leave
mov
pop
dec
movsb
iret
push
cltd
cmp
lret
pop
inc
mov
mov
xchg
xchg
out
std
lahf
insl
ret
jecxz,pn
sub
mov
rclb
cltd
adc
mov
dec
int
push
sub
dec
pusha
iret
hlt
push
cmp
ljmp
push
push
shrb
or
icebp
sub
pusha
xor
jnp
in
dec
push
xor
testl
dec
test
mov
insb
adc
jle
adc
fdivrl
cmp
sbb
cli
jno
mov
out
ficoms
es
adc
rcl
jnp
dec
outsb
and
std
adc
fldl
mov
inc
mov
lock
dec
cmp
popf
push
lods
jmp
mov
push
mov
pop
inc
sbb
fdivp
xchg
ds
pop
xor
push
sub
cltd
in
pop
pop
sub
outsl
iret
nop
pop
jne
cmp
pop
adc
push
mov
mov
repz
aas
and
push
or
cmpsb
cltd
cmp
add
pop
xchg
add
mov
sahf
add
aad
mov
ret
or
mov
das
pop
dec
dec
mov
loop
pop
xchg
xor
into
push
nop
fsubs
jp
push
xchg
xor
mov
xchg
lahf
dec
adc
mov
pop
fcmovne
scas
xor
lock
sbb
fdivp
sahf
mov
push
and
mov
pop
mov
jnp
jb
xor
lcall
xchg
xlat
pushl
mov
int
testb
push
movsl
pop
sbb
int
add
jno
loope
sbb
jp
push
push
rcr
cmp
sub
daa
mov
clc
add
daa
mov
loope
sbb
add
inc
lcall
push
pop
mov
inc
hlt
sarl
xchg
or
notl
push
mov
cld
xchg
mov
jmp
dec
loope
mov
add
and
shlb
pop
jg
cs
push
ds
and
lods
cmp
xchg
lret
test
hlt
and
gs
adc
mov
xchg
out
stc
dec
push
xchg
xor
xlat
gs
pushf
push
mov
je
adc
and
lret
inc
out
pop
es
sbb
mov
aad
stc
int3
cli
add
popl
mov
adc
clc
movsl
jle
add
push
dec
aas
enter
mov
mov
push
subl
lods
stos
and
cmpsl
dec
xchg
or
adc
mov
popf
mov
jbe
leave
std
aaa
out
ret
stos
cmp
cltd
addr16
mov
add
popf
xor
rolb
addr16
inc
or
or
scas
mov
arpl
mov
lcall
push
ljmp
stos
incl
mov
or
stos
pop
ljmp
mov
lahf
pushl
xor
hlt
loopne
jae
stc
imul
inc
sub
jl
inc
insb
das
sbb
sarl
stos
jb
jo
mov
inc
push
das
std
push
xchg
add
stos
in
mov
sbb
and
mov
out
int
adc
mov
xor
sub
mov
in
inc
mov
mov
pushf
lret
or
xchg
cmp
fidivs
clc
scas
xchg
and
dec
pusha
and
or
push
lcall
or
push
popf
test
iret
test
inc
dec
push
lods
scas
loopne
push
inc
scas
jo
mov
xchg
xor
andb
cmp
and
dec
pop
xor
loope
or
fistpll
call
xchg
inc
fcomi
and
add
xor
and
jb
test
nop
sub
or
pop
add
push
and
imul
adc
cmp
pushf
imul
mov
mov
mov
aam
sbb
lret
dec
ljmp
mov
mov
push
cli
mov
out
mov
add
push
shlb
popf
lock
scas
sar
out
repnz
jge
ja
jle
adc
and
insl
xchg
or
bound
das
or
stos
mulb
clc
fiadds
sub
dec
dec
cmp
add
push
out
and
clc
xor
cwtl
mov
push
add
pop
pop
jb
pop
pop
cmp
cmp
push
mov
in
mov
cwtl
out
xchg
rcrb
je
fnsave
jmp
loope
pop
insb
movsb
push
mov
jbe
les
imul
out
jle
and
idivb
sub
mov
sub
leave
fadds
cs
ficomps
lock
shlb
test
clc
loopne
mov
jmp
mov
and
add
cmp
jne
cmp
int3
jmp
adc
leave
mov
fisttpll
pusha
out
loope
mov
inc
ficoml
lahf
xchg
push
jmp
sti
push
addb
jg
xchg
add
lods
fildll
sbb
jno
test
xchg
jp
mov
clc
test
call
icebp
fstpl
jge
lcall
imul
xlat
push
inc
cmc
adc
push
jnp
js
cmp
stc
sub
mov
push
dec
mov
mov
add
sub
or
cmpsb
and
xor
sbb
cmpsl
cmp
mov
mov
mov
test
loop
iret
and
cs
push
ljmp
aam
cmp
pop
cs
mov
leave
test
mov
sub
roll
fldenv
sbb
mov
pop
push
and
fidivs
leave
inc
cs
repz
mov
inc
or
nop
adc
lret
in
push
push
fidivs
and
adc
je
sbb
mov
leave
outsb
hlt
adc
xor
scas
ret
jno
jno
clc
dec
cmpsb
mov
and
cmpl
les
je
sbb
jnp
adc
jb
mov
rcr
daa
fidivrl
and
lock
or
xor
clc
pushf
leave
mov
lods
sbb
jb
popf
and
mov
in
cld
stc
aaa
mov
iret
or
xor
shlb
xor
fidivrs
punpcklbw
xorl
in
push
mov
into
cmp
sbb
imul
mov
pusha
sub
add
xchg
cmpb
and
fs
test
mov
mov
daa
enter
pop
push
cmp
adc
push
int
mov
rolb
pushf
arpl
imul
shlb
pop
cmc
adc
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
pop
mov
add
xor
add
add
add
add
add
add
add
sub
add
sub
add
xor
add
test
pop
add
add
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
imul
mov
inc
add
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
add
rorb
add
add
add
add
and
add
adc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
add
add
inc
push
mov
adc
fiadds
add
xchg
and
and
add
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
push
movb
xor
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
push
mov
inc
pop
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
movl
movl
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
mov
movl
movl
lea
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
mov
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
mov
mov
mov
mov
mov
mov
lea
mov
cmp
jb
mov
mov
mov
add
cmp
jae
sub
add
mov
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
sub
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
pushl
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
lea
add
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
mov
add
mov
mov
xor
add
mov
push
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
push
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
xor
add
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
mov
mov
add
mov
mov
mov
add
andl
mov
mov
mov
mov
mov
mov
lea
mov
xor
mov
add
incl
cmpl
mov
jb
movl
movl
movl
movl
movl
movw
movb
xor
lea
mov
xor
sub
inc
mov
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
movzwl
movzwl
mov
xor
mov
xor
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
jmp
mov
xor
mov
lea
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
sub
xor
cmp
jne
xor
jmp
xor
inc
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
push
push
movl
movl
xor
inc
je
mov
xor
add
cmp
jne
jmp
mov
xor
add
mov
sub
mov
mov
xor
add
mov
add
mov
jmp
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
pushl
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
push
pushl
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
add
push
lea
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
mov
popa
test
cmc
aaa
push
shrb
and
aam
add
add
add
imul
cmpsl
jp
pop
sti
mov
dec
lea
fsubr
add
lds
and
mov
mov
sub
adc
push
in
inc
or
movsb
sbb
aaa
inc
adc
insl
mov
out
jne
pop
jbe
loope,pn
adc
sti
fwait
push
jecxz
testl
xchg
adc
dec
stos
or
je
jb
xor
out
inc
orb
mov
xchg
loop
lds
pop
sbb
cmp
enter
inc
pushf
sbb
or
aaa
mov
sbb
xchg
std
aas
xchg
shll
clc
clc
xchg
jnp
adc
js
shl
lods
dec
ja
sub
in
mov
push
pop
std
popf
sub
mov
aaa
adc
inc
dec
mov
and
inc
lcall
aad
xor
fistpll
xchg
push
lahf
rclb
sahf
fists
shrl
xor
and
cltd
ret
pop
repz
idivl
jb
fs
or
inc
adc
sahf
inc
in
add
fdivrs
push
js
ja
dec
popa
jecxz
cmp
push
mov
mov
loope
adc
ror
enter
popf
outsl
lcall
mov
inc
sub
icebp
dec
jne
mov
jp
repnz
xchg
addb
add
mov
aam
out
rcrb
push
xor
push
sub
mov
xlat
lds
mov
mov
adc
xchg
or
sar
xor
inc
test
xor
sti
or
rcrb
push
das
xchg
sub
or
cli
xor
test
cld
adc
dec
pop
pop
pop
adc
xor
cmp
fnstcw
and
mov
jecxz
pop
call
lahf
jmp
movsl
pop
repnz
push
daa
std
jbe
adc
xchg
mov
roll
mov
or
or
pushl
aaa
cmpsl
sbb
bnd
and
imul
mov
dec
cli
inc
lret
into
sub
cmpsb
cmp
dec
and
jl
fwait
loop
cwtl
repz
and
mov
pop
jmp
jae
sub
xor
shlb
imul
adc
add
cmpsl
pusha
pop
mov
mov
out
ds
cmp
jmp
xchg
cs
adcl
in
std
bound
lcall
adc
mov
out
xchg
dec
jle
mov
dec
jne
pop
xchg
shll
and
jmp
push
icebp
sub
adc
movsb
xor
aam
push
inc
mov
adc
out
jp
movsb
adc
popa
in
inc
or
mov
out
pop
je
shlb
sbb
or
iret
mov
xchg
sub
jnp
jg
dec
mov
and
xchg
rcpps
pop
inc
pop
popa
jnp
mov
mov
add
outsl
call
xor
pusha
lret
jecxz
dec
loope
cmp
sub
push
sti
sub
mov
and
shlb
std
insl
adc
andl
clc
ret
dec
jp
in
jb
mov
lods
inc
jmp
jp
mov
add
arpl
xorb
ret
imulb
test
mov
push
adc
lods
mov
sbb
cmpsb
cmp
nop
aaa
sbb
cmpsb
movsl
mov
adc
outsl
test
mov
dec
js
pop
sub
insb
es
daa
sub
and
push
out
test
popa
lds
jnp
cltd
push
inc
pop
jl
aas
adc
sbb
inc
jecxz
in
mov
sbb
pop
xchg
push
mov
dec
lcall
lahf
imul
lock
test
fiadds
in
rclb
loope
mov
dec
add
mov
push
into
push
lds
push
add
ss
out
bound
add
push
lret
loop
adcl
or
xor
out
mov
test
ret
scas
fs
in
and
pop
mov
xchg
inc
pop
dec
repnz
insb
add
jge
out
mov
lret
fs
je
add
sti
gs
push
lds
addr16
popf
or
mov
or
cmp
xchg
inc
or
divl
outsl
sti
lahf
out
lods
mov
test
adc
and
enter
mov
stos
jge
push
das
leave
repz
pusha
mov
movsl
out
xchg
clc
xchg
rorl
fisubrs
aad
add
add
push
sbbb
fistpl
lret
dec
insl
flds
add
add
add
add
lret
push
bound
loope
lds
dec
aam
or
push
cmp
or
mov
test
push
and
addr16
adc
ds
ja
scas
cmc
mov
push
dec
mulb
inc
jbe
pop
outsb
jnp
xor
fdivl
outsb
lcall
adc
push
mov
leave
cmc
cmp
sbb
ss
movl
scas
cmp
mov
pusha
dec
lods
outsb
rcrl
xor
fs
sub
arpl
sbb
sbb
adc
inc
std
ret
leave
nop
repnz
mov
xchg
jl
sar
call
imul
loop
adc
dec
xor
mov
movsb
sub
and
in
cmp
mov
incl
repnz
adc
movb
dec
leave
scas
mov
ljmp
sub
addr16
stos
dec
jmp
inc
jo
or
lahf
inc
movsl
loope
hlt
es
flds
and
mov
xchg
loopne
push
dec
pushf
mov
inc
or
aam
mov
imull
jle
push
jbe
push
stos
cmp
and
cwtl
sbb
pcmpgtb
cmp
cmpsb
imul
aaa
push
cmp
pop
lods
mov
bound
scas
pop
in
aaa
mov
fildll
adc
adc
sub
loopne
mov
pop
shlb
stos
cmp
mov
xchg
sbb
into
mov
xchg
mov
in
xor
dec
mov
mov
daa
mov
pushf
sahf
mov
jp
xor
insb
pop
xchg
icebp
mov
push
cmp
enter
sub
mov
mov
inc
mov
push
nop
lret
das
scas
mov
xchg
mov
ficompl
mov
inc
add
mov
mov
mov
inc
lock
jbe
sarb
sbb
add
fdivs
xor
lea
inc
fdivl
out
push
clc
scas
mov
jno
ds
cmpsl
xor
mov
pop
push
mov
mov
leave
mov
pop
out
fistl
daa
mov
data16
and
scas
fucom
mov
orl
stc
cmpsb
lods
movsb
loop
es
adc
or
inc
push
mov
sbb
pop
jno
je
jno
test
jecxz
pop
mov
lahf
sahf
imul
xchg
data16
cmpsb
shl
and
cmp
xchg
dec
jmp
mov
loopne
fwait
mov
loopne
ja,pt
std
mov
nop
sub
inc
mull
or
orb
dec
paddusb
jg
shlb
test
cmpsb
movsl
pop
mov
shrb
mov
pop
decb
push
fdivrs
mov
jl
sahf
or
fmuls
jbe
pop
scas
ljmp
sub
lods
pushw
push
imul
movsl
jns
ds
sahf
xchg
loope
and
inc
push
inc
jmp
push
cmp
movsb
repz
pop
je
mov
mov
pop
imul
dec
cmpsb
mov
mov
jmp
cmp
cmp
out
mov
pop
mov
adc
pop
leave
sahf
aas
push
sub
cwtl
das
dec
shlb
push
stos
xchg
mov
inc
jp
or
lods
fwait
cmpsl
mov
ljmp
sub
and
push
xor
fwait
test
inc
call
pushf
and
fs
push
or
xchg
leave
and
mov
sub
jg
es
lods
pop
repz
inc
inc
mov
dec
sahf
outsl
cmp
leave
jmp
fnstsw
sbb
mov
xchg
push
cld
inc
mov
and
stos
mov
test
xchg
fisttpll
gs
cs
shrb
mov
js
in
scas
mov
insl
in
inc
shrb
adc
aad
aaa
pop
je
or
pop
ret
xchg
or
out
xor
jno
les
pop
fs
adc
jae
adc
jne
add
sub
lods
sbb
enter
jno
nop
dec
adc
pushf
add
fwait
sub
sub
inc
dec
push
dec
pop
adc
dec
ds
jb
ss
sbb
inc
into
adc
js
mov
sbb
cmpsb
pop
mov
roll
jne
push
fucomp
jae
shlb
mov
dec
jnp
shl
imul
xchg
pusha
sbbb
sub
shrl
sbb
subb
sub
adc
outsb
mov
mov
add
and
test
lret
pusha
cmp
icebp
clc
sub
xor
out
push
testb
add
cmp
cmpsb
jg
mov
jae
movsl
arpl
popa
fiadds
add
add
add
ja
xchg
push
xor
insb
test
and
adc
filds
dec
das
into
clc
outsb
dec
push
and
rolb
in
ret
mov
movsb
and
in
add
pop
in
out
push
in
popf
sarl
and
push
cmp
pop
ss
or
add
mov
int
ret
jle
shl
dec
pop
test
call
add
or
push
mov
mov
jle
push
jg
jecxz
add
add
inc
jl
stos
loopne
loopnew
mov
dec
ljmp
adcl
mov
xchg
out
out
insb
sbb
xchg
iret
fwait
push
pop
sbb
mov
lcall
lea
push
scas
in
cld
stos
mov
dec
mov
push
enter
lahf
mov
pusha
jne
xor
ja
movsb
inc
xor
cmp
jbe
push
adc
jg
xorb
cmp
enter
sbb
test
loopne
addb
aaa
inc
jl
decb
and
lock
div
out
jle
mov
shlb
mov
dec
lahf
mov
out
sbb
lods
testl
and
rdtsc
and
orb
sub
fidivrs
sahf
or
mov
pop
inc
xchg
xchg
dec
xor
cltd
mov
dec
ret
into
add
fimuls
addr16
inc
test
add
mov
shrl
xchg
hlt
fdivl
xchg
jmp
ret
xchg
mov
pop
ds
loopne
aad
cld
push
push
shl
xor
push
pop
data16
or
push
add
nop
dec
aas
mov
sub
sub
sbb
ss
xor
shlb
gs
lret
movsb
lea
mov
mov
mov
jmp
es
mov
mov
mov
stos
shrl
and
xor
mov
fistpl
in
dec
jae
adc
sahf
mov
sbb
add
mov
pushf
inc
incl
jl
xor
iret
ss
mov
ss
ljmp
out
nop
jp
pop
adc
fsubs
ret
jo
push
sub
mov
lahf
sub
push
cmpsl
dec
inc
push
mov
inc
mov
xchg
add
ja
pop
or
dec
je
lods
xchg
cmpsb
es
xchg
repz
mov
ss
frstor
pop
stos
idivl
in
in
out
push
fnstenv
push
mov
sbb
mov
jecxz
cmp
and
cmp
movsl
sbb
jo
pop
aad
and
pop
cmp
ds
es
xlat
in
nop
testl
pop
int
or
imul
xchg
xor
out
mov
je
cld
addr16
cmc
xor
push
test
les
mov
push
je
test
mov
shll
fsubl
jbe
jb
scas
das
shr
mov
orb
sbb
sarl
fwait
mov
cmc
inc
je
test
xor
jl
cld
loopne
or
hlt
add
stos
mov
mov
add
cmp
fidivrl
jp
out
andps
repnz
test
out
sub
scas
add
add
test
add
or
shrl
jnp
or
sub
mov
aas
pop
inc
mov
add
into
cmp
jo
notl
mov
scas
lret
stos
mov
ret
sub
pop
testb
mov
pop
js
xlat
mov
mov
loopne
shll
push
xchg
and
xor
out
fldcw
dec
fwait
stc
pop
test
sbb
and
pop
ds
aam
arpl
push
cmp
xchg
mov
fcomps
repz
mov
lahf
test
test
test
in
jge
and
inc
cmp
sti
int
add
xchg
dec
pop
leave
dec
xor
lahf
jl
sbb
mov
mov
pop
les
lret
and
nop
popa
mov
ljmp
pop
mov
int3
popa
pop
in
in
add
push
ja
stos
or
push
pop
dec
sub
decb
xchg
cmp
test
cmc
adc
fsubr
dec
mov
push
rolb
mov
in
inc
and
pusha
push
data16
cmp
adc
mov
jmp
es
push
push
jne
mov
sbb
xchg
mov
inc
adc
push
negb
cmpl
jmp
add
pminsw
idiv
repz
lret
gs
add
hlt
add
add
inc
dec
and
jnp
jno
xchg
sbb
mov
mov
pop
pop
repnz
jo
jns
shll
test
sub
stos
addb
cmp
adc
mov
inc
test
mov
fcomps
repnz
adc
jle
cs
add
insl
and
add
sub
aad
insb
sbb
fnsave
addr16
mov
aam
mov
adc
dec
popa
jecxz
push
mov
xchg
popa
cmp
mov
dec
repnz
or
sbb
cmp
inc
cmp
outsl
jge
into
stc
lock
imul
pop
out
cltd
lock
adc
loop
mov
jge
mov
sub
or
ja
cmp
jns
sahf
and
add
xor
ja
xor
push
inc
cmp
dec
test
decl
mov
mov
xchg
sarl
mov
mov
lahf
imul
adc
mov
mov
iret
shrb
or
lea
div
add
repz
inc
lods
shll
outsl
or
mov
fadds
aad
imul
aam
lods
lds
outsb
xlat
bnd
dec
inc
xchg
cs
call
lret
movsl
or
or
jae
ljmp
jae
mov
sub
cmc
jns
pop
mov
test
pop
fucomp
add
xor
lock
cs
push
sti
sti
mov
enter
sub
test
and
sti
rolb
adc
jbe
rolb
dec
mov
dec
pop
cmp
add
and
adc
sub
mov
mov
pushf
jg
mov
adc
hlt
jnp
push
lods
xor
fisubs
or
lar
test
adc
sarb
pop
mov
movsb
int
pop
icebp
icebp
ret
shlb
xchg
in
fs
loope
loopne
jae
nop
cmpsl
mov
xlat
xor
fisubrl
xlat
stc
mov
jp
pop
cli
add
fldt
xchg
test
imul
notl
xor
add
leave
mov
fcom
aas
push
mov
dec
and
aam
fidivrs
push
scas
add
sbb
mov
mov
cmp
in
dec
mul
adc
sbb
push
inc
pusha
or
test
mov
sbb
aaa
int3
mov
mov
cmpsl
ljmp
fdivrs
hlt
daa
aam
test
jmp
mov
xor
rorb
les
nop
fsubs
das
cmp
lds
call
or
mov
dec
push
pop
xchg
and
subb
mov
inc
xchg
fs
and
leave
in
scas
gs
loopne
and
cltd
and
sbb
inc
pop
test
insl
das
in
sbb
outsl
stc
lret
pop
sbb
mov
inc
mov
mov
cmpsb
pop
nop
xor
outsb
sbb
mov
inc
pop
and
mov
arpl
fs
mulb
stos
rorl
mov
cmpsb
lret
aad
mov
xchg
dec
or
inc
and
xchg
icebp
adc
test
push
shlb
add
lea
shlb
repnz
mov
mov
mov
aad
lock
out
out
call
jl
insl
loope
sbb
into
iret
inc
add
xor
dec
sub
push
test
mov
neg
push
ss
aaa
sbb
jmp
fldt
mov
inc
adc
in
out
pop
inc
mov
push
mov
cmpsl
enter
out
or
rorl
je
push
sbb
test
in
adc
cmp
jge
fcomps
int
aaa
mov
inc
cmp
ficomps
and
stos
in
push
jle
jp
cwtl
push
pop
mov
or
mov
pop
dec
adc
mov
dec
into
lret
xchg
pop
addb
das
adc
in
jmp
cmp
or
adc
sbb
mov
xor
test
lods
push
xor
xor
les
icebp
xor
jp
pop
insl
and
std
mov
rcll
pop
inc
cmpsl
fildll
aad
scas
jecxz
xor
inc
mov
clc
mov
add
add
xchg
lret
jnp
sarl
cmp
add
hlt
add
add
icebp
test
ja
cmc
lret
lcall
push
cmp
rcrl
fimuls
mov
jb
lea
mov
mov
xchg
add
mov
mov
pop
sub
test
jl
cmp
add
imul
ret
dec
or
and
sbb
fwait
mov
out
and
mov
mov
sub
arpl
outsl
sub
push
mov
outsl
sbb
in
scas
xchg
cmp
int
cs
or
mov
add
pusha
mov
xchg
mov
or
loopne
outsb
cmp
mov
inc
sbb
xor
out
out
out
cmp
or
fcmovb
repnz
cmp
popl
enter
dec
sbb
cmovle
imul
cld
cmp
xchg
roll
test
push
cli
lret
adc
fidivs
loopne
xchg
pop
imul
xchg
add
out
mov
jecxz
js
mov
aad
lret
stos
mov
mov
test
push
mov
sbb
mov
ret
dec
jbe
pop
push
fs
mov
xor
add
in
mov
sub
jmp
aaa
push
mov
xchg
mov
pusha
syscall
sbb
add
icebp
mov
adc
ja
sti
pop
jmp
lods
push
mov
mov
xorl
dec
sbb
rcll
pop
mov
rolb
push
nop
jno
imul
push
movb
sbb
jecxz
sahf
std
jp
or
pop
repnz
ja
cmp
pop
adc
insl
xor
shufps
dec
int
sbb
push
mov
inc
dec
cltd
and
mov
sti
and
in
inc
dec
js
fists
or
sbb
enter
and
lock
pop
das
sub
dec
ret
push
pusha
jno
std
pop
adc
cwtl
cmp
fistpl
or
or
dec
push
push
or
mov
ja
jge
adc
push
push
cmc
add
mov
dec
mov
mov
xor
mov
pop
xchg
lods
add
inc
push
loopne
lahf
bound
or
adc
mov
inc
lret
jo
sbb
fwait
in
mov
cwtl
mov
lock
cmc
dec
xchg
clc
mov
mov
mov
dec
lock
add
lods
pop
xchg
dec
xchg
mov
add
or
mov
jbe
mov
dec
mov
dec
sub
push
jmp
push
leave
lds
mov
mov
aad
push
adc
mov
ret
mov
push
mov
hlt
scas
xor
test
inc
pushl
push
or
cmp
icebp
aad
fst
mov
fs
and
rcll
dec
xor
lret
add
leave
mov
fdivrs
outsl
add
adc
outsl
lea
pop
insl
call
and
push
jl
cltd
fwait
mov
pop
cli
adc
dec
and
hlt
dec
cmp
lret
cmpsl
shll
sub
rsqrtps
popa
ja
aad
test
push
or
mov
ljmp
inc
icebp
push
fcmove
inc
jb
out
fmull
loopne
or
jb
das
out
or
jp
push
adc
nop
sbbb
jb
mov
cs
out
dec
add
clc
pop
inc
fs
dec
xor
dec
ret
mov
jo
push
xor
test
sub
jle
pusha
push
pop
jp
inc
mov
jo
rorb
xchg
jge
cmpsb
call
xor
ja
dec
jecxz
cmp
lret
mov
enter
les
adc
mov
xor
ljmp
mov
xchg
dec
mov
cmp
push
xor
sbb
mov
dec
jb
ljmp
cmpsb
adc
and
shl
xor
sub
sub
clc
and
cmp
stos
lods
and
insb
sub
outsl
sahf
mov
cmp
mov
fidivrl
dec
mov
sub
sti
jo
je
lcall
andb
lcall
inc
mov
loope
fmuls
dec
mov
jae
cmp
ja
and
movmskps
jno
pop
in
iret
or
add
pop
test
adc
call
add
add
add
ja
jle
sbb
jae
fstl
fwait
dec
scas
subb
out
jo
sahf
scas
out
js
out
mul
sub
or
cmp
arpl
fucomip
and
and
jp
insl
fcmovnbe
fwait
jecxz
sbb
repnz
mov
pop
pop
jo
mov
jmp
addr16
test
cld
imul
xor
lahf
mov
outsl
xchg
outsl
jne
pop
sbb
jge
mov
add
dec
push
adc
std
dec
scas
sbb
sbb
adc
int
push
out
cmpsl
mov
pop
data16
push
dec
or
cmpsl
dec
pop
pop
jp
mov
mov
inc
pop
lods
scas
pop
xchg
pop
jne
adc
test
and
daa
jmp
roll
and
mov
les
pop
pop
repz
cmp
repnz
mov
dec
push
popa
insb
loop
dec
mov
mov
jne
pushf
into
push
push
dec
add
dec
mov
faddl
sahf
fsts
pop
lods
mov
inc
mov
lods
sbb
test
mov
lods
insl
repnz
lea
push
or
jle
std
jl
sbb
pop
or
lock
sbb
jmp
mov
mov
call
xor
rcrb
loop
push
adc
fcmovb
push
popf
ds
push
add
or
fwait
test
mov
adc
jle
test
mov
cs
fists
xor
fcomp
insl
lcall
xchg
arpl
pop
clc
lret
or
inc
stos
mov
sbb
lods
push
cmp
rcrb
push
cmpsb
stos
out
arpl
fsts
or
imul
not
ljmp
pop
rolb
mov
loopne
cmp
js,pn
and
add
add
cltd
rcrb
mov
clc
in
out
enter
insl
mov
sub
in
arpl
out
pop
jne
shrb
in
stc
icebp
lds
jmp
pop
add
add
mov
inc
sub
mov
xchg
mov
in
fidivl
sahf
insl
dec
ss
pop
fdiv
and
rcl
lock
out
popl
stc
inc
cmp
popa
or
pushf
setl
xor
jns
daa
orl
std
push
dec
push
mov
mov
or
fstl
mov
xchg
push
js
dec
mov
adc
arpl
clc
rcll
int
mov
inc
jle
imul
mov
stc
jl
dec
jno
test
mov
fucomi
iret
cmp
push
and
inc
and
in
pop
mov
sbb
mov
xor
and
dec
add
es
and
mov
shr
mov
xchg
movsl
fcompl
xchg
mov
cmp
cmp
cld
pop
cmp
into
sbb
lds
add
call
pop
pop
mov
insb
mov
pandn
insb
in
mov
insl
adc
ret
adc
jp,pt
insb
sarl
fidivl
sub
push
std
data16
or
push
inc
fists
dec
pop
jl
pop
sub
cltd
xchg
sub
inc
dec
test
or
aam
add
push
les
xlat
lret
mov
or
icebp
xchg
pop
outsb
add
mov
jae
or
sbb
pop
data16
rolb
ljmp
mov
lahf
pop
mov
push
xor
mov
jbe
inc
mov
js
mov
inc
cmp
lar
decl
inc
lods
sub
adc
stos
pop
inc
xchg
sub
mov
jo
mov
test
mov
push
jmp
dec
dec
adc
aam
iret
nop
jo
insl
insb
sub
and
cltd
ljmp
loope
or
es
pop
repz
in
xchg
iret
cmp
sbb
push
dec
lea
xchg
int3
and
adc
xchg
filds
popa
sub
sub
add
gs
pushf
repnz
sub
push
or
lds
adcb
cmp
rcll
data16
out
sahf
cmp
mov
ja
fadd
sub
mov
scas
incb
loopne
mov
fisubrl
mov
pop
arpl
ja
cmp
shll
movsl
sti
aam
add
add
dec
lcall
adc
lret
lods
push
xor
add
hlt
add
add
add
ss
aas
jno
sub
jle
adc
int
and
sub
and
adc
popf
add
xchg
cmpsl
pushf
xchg
shlb
scas
and
jmp
pop
cmpsl
je
add
jnp
jo
add
push
xchg
cs
iret
pusha
inc
lret
mov
jl
adc
xchg
imul
in
dec
jmp
xchg
sbb
fidivrl
call
iret
scas
test
popf
mov
pushf
cli
dec
pushf
imul
adc
repz
daa
push
lahf
lahf
les
jns
pop
jns
jmp
ss
psubq
pop
adc
or
jne
sub
jg
notb
cmp
dec
jbe
cmpsb
lret
mov
lret
jo
mov
fucom
add
scas
dec
movsb
dec
neg
jb
lcall
pushf
pop
jns
mov
xchg
adc
leave
es
mov
adc
stos
fisubs
cli
mov
test
addr16
pop
mov
movsl
xchg
stos
inc
scas
jg
cmp
push
sar
shrb
add
std
ljmp
xor
andl
mov
dec
or
jecxz
xchg
mov
fsubl
repz
or
nop
dec
pop
js
mov
pop
mov
pop
xchg
jg
mov
dec
movsb
std
xchg
cld
jne
fildll
mov
lods
js
cmp
sbb
mov
xchg
or
push
cs
jb
jnp
fnstenv
xchg
or
cs
or
pop
fldt
daa
in
dec
lcall
adc
jnp
xor
sbb
add
movsl
lds
or
xchg
inc
pop
or
lock
outsl
data16
xor
and
js
pop
mov
or
mulb
mov
mov
push
icebp
push
pop
daa
xchg
test
out
nop
mov
mov
inc
data16
xchg
ds
ljmp
or
xchg
jge
aaa
popf
addb
dec
sub
cmp
jl
push
pop
jge
lahf
test
push
call
add
push
iret
insl
inc
cmpl
loop,pn
and
notl
xchg
jmp
add
dec
je
push
cltd
mov
xchg
cltd
cwtl
sub
fxch
jg
inc
xor
xchg
xchg
lahf
mov
ds
vmovupd
test
pop
and
test
daa
and
in
or
sahf
rcrl
dec
out
and
idivb
xor
sub
sub
and
insl
dec
gs
fstps
pushf
pop
pop
fabs
int
ficompl
sbb
aas
xchg
sbb
dec
daa
cmp
push
fcomip
movsb
push
jp
mov
sahf
adc
and
ja
mov
ljmp
arpl
int
inc
clc
sarb
clc
test
sub
lret
mov
xchg
adc
stc
push
pop
mov
inc
pop
mov
es
dec
jb
and
arpl
cli
cs
pop
pusha
jno
shll
scas
mov
push
mov
jb
leave
and
jbe
stos
lcall
mov
stos
mov
mov
clc
std
repz
mov
js
movsl
into
jge
xchg
loop
out
jo
add
sub
sub
imull
bound
add
xchg
leave
in
pop
mull
jecxz
repnz
test
sub
in
in
xor
je
movsb
daa
xor
push
das
je
aas
mov
arpl
ret
ljmp
mov
pop
mov
jecxz
inc
mov
inc
dec
stos
repnz
pop
xchg
icebp
scas
sub
repnz
imul
xchg
jae
mov
mov
dec
sbb
pop
xor
add
es
dec
shlb
insb
xor
cmp
movsb
push
pop
dec
mov
mov
nop
std
or
jbe
and
mov
mov
adc
mov
loope
repz
negl
int3
add
loopne
jle
in
add
pop
sub
movl
mov
fcomip
popf
dec
dec
sbb
imul
fwait
dec
cmc
pop
sbb
shr
and
out
dec
xor
jns
fstpl
dec
xor
jl
cwtl
xchg
call
cmpsb
pushf
scas
inc
pop
dec
ret
inc
xchg
mov
fimuls
in
jp
add
add
mov
jno
cmc
divl
mov
adc
add
add
call
inc
cmp
in
push
xchg
loopne
out
jp
push
push
ljmp
push
loope
cmpsl
and
movsl
jnp
aaa
mov
outsb
xchg
pop
jns
mov
shlb
push
popa
ret
jp
arpl
sbb
sub
movsl
cmpl
test
push
cld
and
jbe
bound
and
sbb
test
push
loopne
es
int3
loopne
push
and
rol
stos
insl
popa
sub
cmpsl
cmp
in
scas
notl
shrb
cmovae
and
js
pop
xchg
jle
inc
rclb
sarl
lods
mov
jge
pushl
mov
cmp
jge
jle
xor
cmp
cmpsl
mov
add
mulb
and
std
int3
xchg
mov
add
mov
add
addr16
test
push
xor
add
inc
and
lret
push
push
popa
mov
loope
dec
jecxz
inc
xlat
mov
cmp
cmp
sub
sub
jl
adc
cmp
add
push
clc
cmp
sub
out
mov
ja
xor
dec
push
and
stos
sub
movsl
mov
mov
in
aaa
cmp
repz
mov
js
movb
call
call
enterw
adc
mov
cwtl
repnz
jnp
pusha
leave
insb
xchg
cmp
out
pop
fisttpll
add
and
repz
mov
mov
setnp
sbb
mov
mov
mov
or
int3
or
jbe
mov
cmc
inc
ds
push
sbb
and
inc
dec
sub
out
fistl
cmp
sbb
popf
sbb
push
inc
cmp
hlt
mov
ss
clc
out
in
cmpsl
xor
js
or
or
push
stc
mov
ret
xor
int3
gs
and
cmpsl
icebp
and
mov
in
and
inc
outsl
arpl
movb
int
testb
dec
fs
rorb
xlat
out
arpl
dec
fistpl
lret
mov
scas
sub
je
in
and
and
orl
inc
xor
repnz
mov
and
aaa
scas
xchg
mov
sub
cmp
int3
ljmp
movsl
mov
pop
popa
adc
fwait
jno
sbb
imul
in
dec
movsb
leave
and
cvtps2dq
mov
js
movsb
adc
test
cmp
fisubrl
mov
stos
insl
fs
or
aam
jmp
xchg
ffree
add
ret
xchg
std
sbb
test
stc
test
push
pop
cltd
daa
xor
inc
adc
sbb
in
inc
cmpl
fdivrl
out
jmp
xor
lock
call
ja
mov
leave
mov
leave
mov
gs
sub
lods
and
les
mov
sbb
cmc
lods
jno
icebp
mov
dec
xor
xor
inc
push
pop
stc
es
outsl
mov
mov
jne
xor
push
aad
enter
dec
xor
mov
pop
cltd
incb
dec
pop
add
and
cs
call
fmuls
sub
xor
icebp
adc
popf
imul
ss
jl
fldenv
lods
shll
cmpsl
in
test
stc
push
xchg
cli
jbe
jecxz
add
add
pop
cmp
mov
cmpb
push
pop
xchg
int3
mov
loopne
in
push
jg
pop
sub
push
mov
sahf
pop
adc
mov
sahf
repnz
cli
scas
popa
jbe
sbb
mov
xchg
lock
cmp
sbb
mov
mov
icebp
jg
pop
movsb
test
sbb
jg
pusha
test
shl
adc
xlat
daa
mov
lea
pop
imul
out
xchg
bound
aas
mov
in
sub
sbb
push
add
jle
dec
jns
rorb
loope
inc
pop
add
xor
shlb
andb
addl
iret
int3
jp
das
xor
jecxz
andl
cmpsb
jno
jmp
sbb
mov
xor
push
mov
mov
in
push
sub
mov
hlt
leave
push
aas
callw
adc
insl
pop
sub
add
add
sahf
xchg
inc
fisttps
lahf
int
push
btr
push
cld
add
hlt
add
add
arpl
jp
cltd
pop
mov
cltd
inc
xchg
mov
cltd
mov
test
outsb
dec
iret
ljmp
jle
jae
push
pushl
push
cmpsb
lea
lret
sahf
cmp
inc
mov
test
jl
and
push
fmull
cmp
rcl
aam
int
sub
out
xor
and
or
dec
dec
into
test
outsl
xchg
mov
iret
xchg
out
jl
je
sbb
mov
arpl
sbb
jbe
or
mulb
adc
xchg
or
push
stos
and
das
fdivr
fsubr
daa
cltd
and
cmp
jecxz
or
dec
lods
pop
xchg
mov
stos
jge
add
popf
inc
shll
xchg
push
jb
mov
int
orb
cmc
xchg
fwait
push
ds
cmp
in
inc
imul
cmpsl
ja
repnz
hlt
push
imul
mov
je
movl
pop
adc
cwtl
dec
cli
addr16
gs
outsl
adc
mov
sbb
pushf
xchg
les
in
or
js
mov
rorb
fidivs
stos
and
bound
leave
dec
clc
fidivl
jp
pop
arpl
jecxz
movsl
dec
sub
out
dec
in
mov
cli
push
push
or
adc
adc
in
cs
daa
lock
outsl
push
je
rcrl
mov
sub
vmovdqu
lret
jno
repz
je
jmp
repnz
push
clc
sub
sbb
shlb
jb
jno
call
sbb
fbstp
add
sub
add
mov
outsb
sarl
bound
insb
aaa
divb
loope
jge
pop
dec
les
and
mov
lret
loopne
push
stc
push
mov
dec
jl
test
mov
cli
popf
icebp
enter
outsl
daa
adc
loop
mov
lret
ror
loope
dec
sub
repnz
leave
imul
sub
ret
int3
mov
outsb
mov
int3
add
push
add
fs
and
push
cmp
push
leave
in
cmp
jnp
fcoms
dec
push
stos
dec
setg
xchg
shlb
mov
inc
in
sub
or
xchg
or
test
sub
push
dec
push
jae
repz
dec
jne
icebp
pop
popf
rorl
add
dec
dec
mov
loop
jecxz
add
int
dec
lcall
test
xlat
aaa
ds
pushf
pop
pop
jg
icebp
push
lds
insb
and
rcr
mov
push
cmpsb
sbb
bound
decl
cmp
mov
mov
das
cltd
fstpt
test
mov
scas
loop
push
push
or
in
scas
push
mov
mov
sbb
stos
fsub
dec
push
adc
shl
ret
leave
pop
ret
aaa
daa
outsb
mov
inc
test
sbb
adc
pusha
mov
dec
mov
mov
daa
fwait
inc
jae
cli
addr16
mov
into
call
inc
leave
or
test
rcrb
cli
push
xchg
in
pop
aas
xchg
ljmp
jp
push
das
add
out
mov
lcall
fs
push
cmp
cwtl
std
dec
add
sbb
andb
nop
pop
insb
arpl
sbb
std
sub
repz
adc
push
lds
and
pusha
jecxz
xchg
ret
mov
lods
inc
cmp
adc
das
lock
jge
xchg
rcrb
mov
sub
add
in
adc
test
les
stos
cmp
mov
mov
sbb
insb
inc
pushf
fwait
sub
sub
cld
xchg
mov
fcmovbe
mov
mov
mov
inc
dec
lods
sahf
push
addb
subb
dec
sub
adc
cmp
mov
and
jbe
sbb
mov
pop
sarb
push
sti
imul
jmp
and
jo
cmp
test
lock
inc
sbb
rcll
inc
popf
pop
mov
enter
hlt
lods
push
cmpsb
ds
das
pushf
inc
mov
lock
in
imul
jle
fs
dec
jbe
stos
out
fcmove
pushf
mov
or
add
xchg
rcrb
fsubs
sbb
and
cmp
enter
pop
or
sbb
pop
dec
and
pusha
add
sbb
jg
add
add
call
aas
popa
adc
addl
or
add
add
inc
adc
std
ficoms
xchg
dec
cmpsl
pop
into
jle
incl
inc
imul
push
movb
lea
andb
negl
lret
adc
loopne
fisubl
dec
testb
jle
in
xchg
sbb
pop
in
xor
jo,pt
sub
mov
pop
ret
and
js
pop
test
std
jmp
outsl
ljmp
movsl
mov
fiaddl
stos
sbb
and
pop
ror
movsl
fwait
mov
inc
jg
loopne
int3
loop
in
mov
fbstp
sub
movsl
push
inc
or
iret
andb
xchg
lcall
das
and
add
shlb
std
daa
dec
inc
xchg
mov
cmpsl
cmc
sbb
movsb
xor
lock
pushf
imul
jecxz
jge
add
rolb
lret
mov
mov
or
dec
aad
rorb
and
pop
pop
inc
mov
mov
mov
push
mov
ffree
lldt
fildll
lods
incb
out
add
dec
loopne
cmp
xor
xchg
jl
icebp
mov
fimull
mov
and
outsb
inc
scas
and
out
jae
es
pop
out
xchg
pop
aas
aaa
cmc
sub
xor
xchg
cmp
cmp
sarl
sbb
scas
inc
adc
cwtl
icebp
or
testl
add
out
push
inc
push
cmp
sti
add
pop
outsl
sbb
sub
add
cmp
lret
inc
addr16
into
cmp
mov
adc
test
fs
rcrl
pop
cmpsl
int3
cmp
push
movsl
repz
sbb
xchg
call
jnp
leave
lea
scas
in
dec
mov
pop
sub
sbb
lret
insl
and
sbb
push
mov
mov
ds
pop
ret
jo
adc
test
cmp
outsb
hlt
xor
adc
pop
je
cmp
dec
xor
mov
or
mov
cs
cltd
mov
push
sbb
ficomps
lods
lds
mov
push
jbe
les
icebp
addr16
call
jbe
arpl
out
jae
std
lods
add
outsb
test
mov
sub
fdivrp
shlb
hlt
aam
lods
push
push
in
and
je
int
adc
jae
fnsave
sbb
inc
cmp
or
xchg
inc
andb
sub
dec
pop
pushf
lds
js
outsl
cwtl
and
and
mov
inc
push
loope
add
fwait
mov
outsl
jge
aam
jns
mov
sub
xor
dec
or
and
xchg
bound
popa
jp
add
xlat
pop
js
lcall
add
decb
xlat
push
bnd
scas
cs
lret
std
in
stc
call
scas
insb
test
adc
aaa
std
push
cli
mov
scas
test
dec
add
sbb
cwtl
fistpll
mov
sub
jp
bound
mov
test
mov
mov
loopne
dec
inc
arpl
pop
shlb
sahf
jecxz
fwait
inc
push
push
aaa
xor
fsubr
pushf
insb
incl
cs
mov
push
pop
and
inc
mov
nop
add
cmc
test
adc
sub
fiadds
mov
faddl
mov
test
inc
call
xchg
pop
jmp
arpl
in
sub
mov
mov
dec
mov
out
xchg
or
stos
or
movsl
cmc
jg
sbb
pop
mov
fcmovu
lea
sbb
lds
addr16
adc
lret
insl
in
mov
pop
sbb
call
push
es
filds
in
lcall
mov
push
xor
aas
mov
mov
fistl
addr16
movsl
icebp
int
and
icebp
test
add
mov
jp
mov
and
xchg
xchg
xlat
jle
push
aaa
inc
imulb
out
sahf
sub
push
cmp
xor
jg
nop
pop
pop
xchg
push
sbb
sub
imul
sub
shlb
addl
push
pop
hlt
cli
fbstp
in
mov
into
icebp
xchg
notl
mov
or
cmpsb
leave
jg
scas
sbb
scas
push
icebp
inc
jb
mov
stc
ret
push
repz
sbb
xchg
jl
stc
adc
stos
rcl
mov
sbb
shrb
aad
add
add
fidivrs
int
jbe
add
add
hlt
add
add
cltd
xor
inc
leave
adc
inc
loopne
mov
push
push
mov
fidivs
xchg
sahf
into
out
jae
adc
mov
popf
pusha
cmp
cld
filds
mov
ret
add
and
negb
aas
and
cmp
jb
ret
mov
stos
pop
roll
cmp
cld
jmp
cmc
imul
jbe
jae
cld
jmp
cmp
inc
fidivs
add
ss
cmp
sbb
or
jecxz
test
mov
test
jle
sbb
testl
cmc
sbb
cmpsb
xchg
sbb
pushf
pop
sub
jl
sbb
rclb
cs
jecxz,pt
push
and
xor
adcb
stos
cmp
loopne
daa
mov
bound
jle
call
and
shl
cmp
ss
out
mov
cli
or
mov
or
sbb
dec
fstps
mov
aas
dec
and
addr16
enter
stos
add
mov
jbe
mov
cli
cmp
popa
cld
movsl
push
lcall
adc
xchg
adc
add
dec
decb
orl
and
rol
adc
test
mov
or
mov
movsb
jbe
ss
out
sahf
call
jmp
xchg
stc
stos
inc
jp
xor
pop
mov
or
jge
dec
addr16
into
mov
out
inc
mov
mov
sti
lea
pop
push
xor
mov
pop
mov
call
jae
jmp
xor
mov
sbb
xchg
and
rorl
cmp
inc
adc
inc
push
cmp
inc
int3
jb
rclb
out
pop
pop
das
fstl
repz
inc
xchg
in
jge
sub
and
cli
pop
add
clc
and
adc
push
mov
mov
cmp
and
mov
ljmp
out
sbb
imul
push
dec
fnsave
data16
xlat
adc
out
jne
jno
inc
fadd
popa
into
fsts
xchg
xchg
push
or
fisttpl
push
daa
test
jl
mov
cmp
jo
movaps
adc
jno
lds
jecxz
inc
push
pusha
jnp
flds
jecxz
or
ret
xchg
aad
pusha
arpl
aad
ret
push
stc
roll
mov
lret
jno
cwtl
das
imul
iret
nop
popa
loope
ret
stc
leave
in
xor
out
fnstenv
xor
outsb
dec
or
mov
rorb
xor
shr
mov
test
push
adc
stos
push
mov
inc
or
mov
shrb
pop
movl
in
jg
and
push
mov
je
sbb
fisttps
mov
fcomip
aad
pop
push
js
sbb
add
xchg
test
push
icebp
push
and
hlt
inc
push
sbb
ficompl
add
lds
nop
mov
pushf
push
ret
mov
mov
push
pushf
xchg
jae
les
loopne
jno
cmp
xor
xchg
mov
xchg
jbe
push
mov
sub
add
xchg
dec
stos
iret
shl
xor
daa
aas
movsl
mov
enter
push
pop
lods
inc
dec
clc
cmpsb
xchg
mov
cltd
cwtl
mov
ljmp
adc
jl
cltd
pop
cmp
insb
fcmovb
in
mov
ss
pop
insl
cmpsl
out
mov
pusha
leave
int
stc
fldl
lcall
and
ljmp
push
or
push
push
adc
ja
jl
dec
jb
ficomps
mov
aam
adc
mov
cmp
mov
pop
les
fdivrp
repnz
cmc
inc
sbb
negl
and
mov
xchg
stos
xchg
pop
out
mov
stc
rcrb
call
cmpsl
pop
nop
test
scas
and
pop
xchg
lods
stos
in
fisttpl
push
lahf
decb
sbb
arpl
dec
sbb
jns
mov
cmp
add
jnp
les
cld
or
and
push
test
inc
mov
and
pop
test
mov
jae
jmp
lock
xchg
xchg
outsl
mov
add
std
mov
push
jg
mov
cmc
or
add
add
add
in
sbb
pushf
in
popf
dec
movsl
scas
and
test
sub
mov
mov
pop
mov
push
or
insb
fsubr
lods
ljmp
lods
xchg
cmp
lahf
cli
rorb
mov
stos
xchg
je
mov
jmp
mov
enter
mov
mov
push
es
cmp
adc
push
dec
or
cmp
push
sbb
cmp
push
in
in
movb
stc
test
xor
mov
push
mov
push
lock
push
or
push
mov
adc
xor
fwait
xor
jecxz
or
sbb
dec
xchg
lods
call
sbb
call
sub
push
test
mov
xchg
push
xchg
es
and
shr
push
das
jp
ljmp
xor
jmp
ljmp
adc
mov
and
or
cltd
jo
insb
imul
pop
mov
sub
xor
mov
fidivl
xorb
xlat
sbb
mov
orb
pop
add
pop
cmp
out
cld
push
jbe
sti
mov
idiv
jge
inc
cmp
mov
aas
and
jmp
sbb
rcll
pop
loope
sbb
cli
mov
loopne
sub
mov
aam
cmp
lds
cmc
std
sub
out
in
xor
bound
dec
clc
cmp
push
pop
pop
hlt
sub
pop
adc
and
xchg
in
push
inc
pop
mov
addr16
push
add
aaa
xor
adc
ljmp
lds
mov
mov
add
mov
aaa
sti
mov
cmc
mov
adc
in
pop
test
pop
lahf
loopne
sbb
pop
insl
punpckhdq
or
jo
and
insb
jo
cmp
dec
mov
add
aad
sub
mov
inc
jnp
xorl
cmp
mov
dec
pushf
lds
sub
jae
je
push
pusha
adc
jnp
push
pusha
rclb
xchg
or
loop
ja
out
push
lahf
pop
test
imul
outsb
es
inc
jns
lds
insb
mov
or
pop
cmpsl
pop
xchg
adc
push
je
mov
imul
shl
cmpsl
inc
scas
imul
int3
jb
aad
fisubrs
rcrl
mov
aam
or
loope
sub
or
or
mov
in
push
dec
aas
sub
into
xchg
and
jo
mov
insl
push
lcall
xchg
repnz
insl
pop
mov
pop
dec
gs
arpl
xchg
fcoms
in
out
int3
xor
xor
pop
xchg
frstor
jno
sbb
outsl
arpl
repz
xchg
lahf
add
and
jmp
pop
cmc
mov
dec
xchg
jmp
daa
xchg
jp
push
test
popf
inc
inc
mov
cmp
adc
scas
iret
out
adc
mov
sbb
mov
lahf
pop
pop
ret
test
subb
pusha
jno
cmp
xchg
and
mov
insl
into
popf
lret
ds
and
jo
enter
or
fstl
dec
scas
ds
xor
mov
inc
movsl
inc
jp
cmpsl
es
ljmp
adc
cmp
and
aad
ja
add
jne
mov
push
mov
iret
imul
inc
push
ret
andb
push
dec
shlb
pop
pop
test
dec
bound
xor
fcoml
jb
jb
or
iret
pop
lret
push
inc
pop
dec
dec
dec
loop
or
push
popf
mov
and
xor
xchg
pop
push
push
dec
or
faddl
pop
xchg
lahf
jb
cmp
or
xchg
push
sbb
hlt
adc
xchg
repz
or
jecxz
std
shll
in
fnstenv
sti
enter
jge
jnp
fsubl
fsubs
xchg
mov
push
jl
dec
sub
lcall
les
out
or
inc
lods
cmpsb
jmp
lret
push
push
jecxz
dec
cmp
mov
fistpl
inc
movsb
pop
xchg
inc
and
mov
bound
or
or
xchg
mov
add
mov
mov
stc
lcall
addr16
mov
cmpsb
repz
mov
rcrl
pop
jne
fstp
call
push
or
add
cmp
sub
xchg
inc
push
lret
in
out
dec
add
jne
jmp
add
add
mov
int3
es
mov
add
lea
frstor
sbb
mov
cmp
cmpsl
leave
push
por
movsb
xchg
push
cmp
out
xchg
push
add
icebp
enter
mulb
cld
mov
out
sti
loop
add
mov
pop
sbb
lds
insl
movb
ja
pop
scas
dec
loop
add
cwtl
mov
mov
cmp
xor
adc
inc
daa
mov
inc
stos
cmp
sbb
dec
sub
in
pop
ljmpw
cmp
mov
sbb
int3
loope
lods
cld
mov
inc
rolb
in
out
sbb
xchg
cltd
jmp
cs
out
int
mov
push
add
xchg
xchg
aad
or
lret
xor
or
inc
test
outsb
push
sti
jae
mov
push
bound
inc
mov
movsb
in
out
mov
mov
daa
jmp
stos
pusha
inc
pop
push
lcall
jmp
inc
or
lea
scas
ret
pop
inc
mov
in
in
pop
in
adc
mov
add
pop
or
outsl
xor
mov
mov
rclb
mov
pop
in
ds
or
pop
icebp
rorb
stos
xchg
xor
mov
fbld
int3
xchg
ret
sbb
mov
fsincos
xor
dec
or
inc
xchg
mov
std
out
jp
adc
int
aaa
fdivp
mov
jbe
das
rep
push
mov
or
pop
int
sub
xor
mov
lret
sbb
movsb
in
mov
sub
inc
pop
inc
lods
or
stos
mov
scas
jns
add
out
icebp
scas
shrb
push
cltd
es
mov
push
cld
andl
jge
ljmp
ljmp
xchg
jo
aas
mov
aad
xor
punpckhbw
fidivl
adc
lods
sti
mov
pop
cmp
pshufw
xchg
ret
pop
xor
gs
jp
jmp
dec
push
cmp
outsl
js
add
jb
arpl
sbb
mov
mov
push
cwtl
mov
aam
pop
or
sub
and
push
movl
cmp
pop
rcr
imul
sbb
mov
sub
dec
xor
jle
pop
scas
push
sarb
mov
lods
dec
lea
push
test
repz
lcall
cmp
and
jo
enter
cmpsl
inc
sbb
adc
scas
mov
mov
adc
push
rol
inc
sub
and
notb
testl
jmp
rorl
pop
mov
loopne
int
mov
push
cmp
sub
into
sub
cwtl
int3
dec
mov
sub
mov
imul
dec
pop
clc
ja
add
pop
repnz
icebp
fs
ja
mov
outsb
insl
and
inc
stos
test
jno
inc
and
mov
arpl
add
aam
push
loop
adc
jo
notb
mov
cltd
adc
cmp
dec
xchg
clc
flds
bound
dec
mov
movsb
or
aad
aam
inc
push
lds
mov
divl
or
jnp
out
pop
xor
test
push
mov
or
test
pop
aam
jns
fdivrp
cmp
adc
test
push
mov
shl
jns
xor
xorl
adc
jmp
in
roll
jge
mov
dec
dec
inc
movsb
push
mov
add
adc
xchg
dec
call
into
int
aad
aam
xchg
mov
pop
ret
fstpt
adcl
test
mov
adcb
xor
ja
mov
cmp
push
mov
jbe
imull
fisubrs
lods
aad
es
outsb
lret
ljmp
test
test
cmp
int
hlt
cmp
call
jle
rol
or
dec
xor
or
shlb
jo
sbb
out
sbb
std
stc
lock
mov
mov
pop
loope
scas
dec
xchg
movsl
cltd
jmp
push
outsl
mov
push
in
sub
xchg
xor
xor
es
adc
mov
dec
rcll
jo
out
hlt
mov
aad
sub
lods
add
inc
scas
xlat
cli
add
add
adc
je
std
mov
rolb
adc
add
add
add
imull
int3
mov
out
lods
xchg
dec
sub
sbbl
jno
int
iret
insb
pop
pop
fmul
cld
out
daa
push
cmp
pop
xchg
push
xchg
xchg
sbb
cld
in
push
pop
andl
leave
dec
dec
rolb
pushf
push
and
outsb
stos
lods
inc
je
add
push
mov
sahf
or
jb
adc
insb
decb
cwtl
mov
and
jmp
fimuls
dec
lock
xorb
fsub
mov
loop
mov
je
dec
scas
es
aaa
negl
sbb
orb
fstl
stos
aad
push
scas
jno
push
jbe
mov
clc
mov
shr
push
jne
lahf
cmp
sbb
filds
pop
scas
sahf
jb
inc
xchg
cmpsb
rcrl
jae
mov
or
xor
and
aas
loop
jmp
dec
lcall
cmpsb
ret
or
sbb
mov
sub
cmp
sub
sub
xor
inc
mov
stc
or
push
iret
cmp
loope
inc
inc
mov
pop
sub
jp
add
addr16
arpl
fidivs
lcall
push
movsl
sub
shll
incl
pop
xchg
js
shlb
pop
sub
push
pop
pop
call
pusha
adc
ja
push
aad
test
xorl
outsb
fmull
fs
lds
push
mov
mov
jecxz
cwtl
sub
les
outsb
push
push
and
cmp
or
movsb
cmp
dec
cmp
cs
cli
jp
inc
dec
mov
or
xchg
jno
les
jle
fadds
shl
fistpll
or
out
addr16
insl
xchg
dec
xor
in
in
insb
mov
sub
push
cmpsb
insb
dec
sub
mov
cld
mov
inc
repz
inc
cwtl
pop
divb
jb
mov
xchg
movsb
push
xchg
mov
adc
rcrl
movsl
cmp
sub
jno
jbe
enter
dec
xlat
je
aaa
cmp
nop
fcoml
lret
mov
mov
add
cmp
xor
mov
icebp
cmpsl
mul
mov
cmp
push
test
dec
push
cmp
mov
ret
jmp
fs
stos
pop
mov
fmul
pop
or
popf
mov
out
loopne
int
iret
mov
sbb
push
mov
cmpsl
roll
loopne
daa
add
fsubl
cmp
mov
sub
cmp
mov
mov
ds
cmp
movsl
jnp
test
xor
push
cmp
movsl
imul
dec
outsb
leave
outsl
dec
ds
repz
xor
adc
ljmp
mov
pop
ret
dec
divps
popf
and
mov
jl
jae
rorl
fcmovne
mov
rcrb
add
test
xchg
cmpsb
fwait
sub
add
adc
xor
adc
or
xor
sbb
mulb
imul
jmp
jmp
call
mov
sub
cmp
lds
and
pushl
mov
mov
jmp
mov
sub
cmp
lcall
aaa
sbb
xchg
test
lcall
gs
add
pop
out
pushl
or
jge
jo
sbb
xchg
mov
adc
sub
cmp
aas
dec
mov
nopl
cli
popa
jb
dec
pop
dec
rclb
push
inc
inc
repnz
fadd
mov
imul
sti
and
enter
cli
push
aas
insl
pusha
pusha
testl
or
popf
incl
cmpsl
jnp
mov
test
loopne
xchg
xchg
or
sub
fsubp
jmp
push
push
cmc
addl
loopne
and
jmp
aam
iret
sbb
pop
ds
mov
or
bound
and
stos
mov
lcall
xchg
mov
or
ret
into
add
inc
jne
ret
lret
test
or
lock
fistpl
mov
jecxz
loopne
xor
xlat
outsl
daa
in
popf
insb
adc
push
jns
icebp
push
cltd
or
in
inc
push
xchg
pushf
pop
mov
scas
lahf
add
and
adc
sbb
and
add
add
mov
fs
lods
in
or
fwait
arpl
sbb
add
add
add
cmpsb
mov
jb
jmp
add
int
test
dec
sub
push
insl
sub
dec
dec
lcall
movsl
outsl
sbb
pop
sbb
pop
cli
jecxz
cmpsl
scas
pop
icebp
andb
imul
out
push
sub
push
repnz
in
mov
sbb
sbbl
jmp
int
dec
rcl
jb
or
lods
outsb
dec
adc
add
jle
mov
in
dec
in
dec
clc
sub
pop
outsb
mov
pop
jecxz
out
imul
push
xchg
jb
and
mov
xor
pop
sub
outsb
test
loopne
inc
bound
popf
popa
xchg
das
cmp
int
pop
mov
cli
mov
xchg
aam
push
or
stos
sub
testl
inc
cmp
js
mov
xchg
jmp
test
or
or
add
jae
test
pop
xchg
or
ds
jns
out
adc
xchg
ss
test
je
mov
mov
xchg
mov
dec
dec
pop
push
loope
adc
fwait
div
popf
inc
es
xchg
inc
jne
cmpsl
mov
add
stc
jno
lods
stos
pop
pushf
cmpsl
adc
cltd
filds
xchg
add
push
cli
sub
lcall
in
sbb
fistps
cwtl
xorb
cmpsb
outsb
fsubrs
mov
dec
in
mov
lcall
lcall
sbb
jl
enter
inc
pushf
negl
dec
and
xchg
cmp
test
mov
aad
inc
jns
cli
cmp
sti
in
in
xchg
iret
dec
je
mov
adc
pushf
jns
popa
das
add
aas
clc
inc
movb
test
data16
nop
push
cmc
fcmovb
inc
into
cmp
sbb
sbb
aas
inc
je
and
stos
ret
mov
jns
add
pop
arpl
or
scas
inc
adc
fisubrs
add
popa
push
test
out
inc
push
pop
mov
xchg
add
inc
mov
or
decl
mov
xor
jo
scas
in
mov
add
cvtpi2ps
popa
push
sahf
out
push
pop
push
ret
negl
in
xor
mov
push
ret
jb
inc
pop
std
leave
mov
sahf
jbe
movsb
sub
mov
mov
and
push
aad
add
sub
out
inc
mov
fdivrs
stos
imul
test
jg
lods
mov
int
lds
cmp
cmp
sub
and
sbb
out
nop
pop
inc
pop
pop
rcll
push
mov
jae
xchg
inc
adc
xor
lea
dec
cmpb
adc
es
mov
adc
sbb
hlt
and
insb
mov
icebp
xlat
xorl
and
dec
inc
loopne
lods
xor
in
mov
leave
es
clc
jge
mov
mov
in
je
loop
mov
pop
out
push
fidivs
rclb
bnd
in
out
jns
pusha
xchg
jg
cmc
xchg
cmp
jmp
jl
stos
std
sub
int3
pushf
mov
sub
mov
imul
lcall
push
add
ds
insb
jl
sbb
inc
in
xchg
outsb
and
mov
jg
lcall
pop
decb
lahf
inc
je
popf
ds
jp
imul
xchg
pop
pop
cs
imul
out
cmpsl
mov
inc
mov
imul
or
mov
pop
icebp
stc
adc
sbbb
je
out
adc
xchg
lret
pusha
cmc
jl
movsl
imulw
sbb
pusha
cmpsb
popa
imul
loop
dec
sar
loope
mov
inc
jbe
aas
lods
jmp
push
dec
jmp
aaa
jb
mov
arpl
push
dec
sbbb
mov
pop
ret
cmp
popa
adc
jp
test
xor
insl
insl
dec
fcoml
lahf
or
scas
jge
jb
in
push
jge
sub
jmp
pop
xchg
subb
in
xchg
xor
or
sbb
mov
rcll
test
scas
aam
cmp
insl
inc
mov
rolb
cmp
js
mov
jbe
loop
int
int3
or
add
mov
xchg
adc
lock
sbb
mov
dec
fwait
lcall
jns
inc
mov
xchg
lcall
pop
adc
add
add
sbb
add
lods
test
gs
mov
add
hlt
add
add
cmp
into
orb
fisubs
fadd
mov
mov
xchg
pop
mov
jo
test
pop
push
stos
fcomps
sub
sbb
inc
mov
sub
scas
aas
aas
cmp
cmp
sbb
dec
rorb
mov
cmp
mov
inc
lret
into
hlt
loope
sbb
push
adc
mov
xor
int
dec
or
mov
mov
popa
lock
es
xlat
sub
jae
push
insb
es
inc
leave
aaa
test
nop
push
inc
xor
pop
in
cmp
sbb
or
mov
popa
insl
add
iret
cld
pop
push
pusha
lahf
in
jmp
aaa
jbe
inc
outsl
outsb
loopne
imul
adc
xor
xchg
cmp
sbb
inc
fldt
inc
sti
mov
push
insb
jo
or
jge
cld
xchg
push
dec
std
xchg
push
fs
das
xchg
loopne
cmc
std
imul
out
fidivrl
cmpsb
xlat
fsubl
xor
cwtl
nop
int3
push
sbb
aaa
movsl
push
stc
jae
clc
xor
testl
ret
iret
fnsave
test
xchg
fldenv
or
xor
pop
jmp
lea
and
or
sub
sbb
and
stos
sub
inc
in
icebp
shlb
sbb
es
push
cmp
pop
mov
je
push
imul
jbe,pn
mov
inc
pop
into
sarl
mov
cmp
add
icebp
popa
sarb
jnp
jnp
dec
aaa
ret
push
outsb
test
cmp
mov
sub
add
popf
dec
stos
fucompp
lock
cwtl
jnp
int3
xchg
std
call
cld
lcall
cmp
mov
cmc
dec
and
loop
fdivrl
fcmovnbe
cltd
mov
pushaw
dec
mov
fmull
int
lock
lcall
add
cmp
pop
enter
mul
aas
loopne
icebp
pop
fiadds
add
adc
sbb
jecxz
rcrb
adc
int3
inc
xlat
enter
roll
and
xchg
test
and
loopne
lret
addr16
outsl
pushf
xor
shl
stos
rorb
dec
cmp
xor
or
pop
push
mov
mov
xchg
popf
fucomp
movsl
repz
pop
shrb
sbb
stos
adcb
sub
ljmp
leave
test
pop
cmp
out
test
or
leave
sbb
bound
cwtl
inc
xchg
or
ret
and
repz
xor
mov
sub
hlt
sbb
fwait
ljmp
push
xchg
ret
ret
xor
push
in
dec
xchg
mov
jg
dec
add
push
mov
cwtl
cmpl
inc
sbb
popf
pop
shlb
sub
jo
push
mov
mov
int3
mov
inc
push
jno
xor
mov
mov
push
add
jge
lret
call
xor
mov
dec
push
mov
insl
fiadds
sub
insl
xor
inc
or
or
cmp
and
dec
cmpsl
dec
lret
out
icebp
pop
faddl
ja
pop
imul
stos
add
or
adc
inc
fdivrp
push
cmpsb
out
inc
add
bound
cmp
and
addr16
cmp
push
mov
cmpsl
cmp
out
jbe
and
stos
mov
gs
mov
adc
push
iret
sbb
imul
dec
pop
inc
adc
sahf
ret
fnstcw
mov
sti
test
movsl
push
in
repnz
int
mov
iret
inc
dec
arpl
push
cld
aam
js
ljmp
sub
add
sbb
sub
int3
sub
push
pop
cmp
aaa
jg
bsf
push
cli
xchg
lcall
inc
jmp
push
mov
scas
test
or
cs
lret
gs
out
jmp
or
std
push
stos
call
fs
cld
int
xor
sar
cmp
xlat
in
test
adc
dec
jmp
xchg
enter
sub
insl
mov
sub
ja
add
es
sbb
mov
xchg
adc
and
xchg
push
xchg
stos
push
adc
pop
and
mov
test
mov
dec
popf
je
lds
mov
popf
subl
mov
pop
movsl
lret
cmp
or
inc
in
add
add
dec
outsl
je
jne
pop
outsl
out
aaa
jae
data16
in
mov
add
add
xchg
pop
jns
push
sbb
mov
sbb
inc
in
je
xchg
mov
pop
cmp
sub
mov
arpl
jp
pop
sti
lahf
out
xlat
jae
lods
push
cmp
negb
in
mov
movsl
push
xor
rcll
jecxz
or
xchg
sub
jb
jnp
in
mov
pushf
adc
or
mov
bndldx
decl
add
xchg
lret
sub
jns
lcall
sbb
adc
fimuls
mov
xchg
mov
sbb
neg
dec
mov
lods
jp
ds
cmp
fadd
ret
and
jae
mov
xor
xchg
add
mov
adc
and
test
cmpsl
mov
iret
js
test
push
push
pop
push
inc
mov
xchg
cli
scas
cltd
addl
fistl
popf
ret
fildl
xchg
fstps
pop
mov
fdivl
pop
jcxz
pusha
jns
mov
popa
stos
out
push
in
and
adc
das
and
push
cmpsl
cli
push
xor
cli
pop
push
adc
leave
or
enter
in
bound
xor
xor
outsb
mov
cld
out
add
cli
ds
cmpsl
test
scas
pop
adcb
pop
shrb
push
push
stos
xchg
sbb
push
arpl
inc
imul
imul
cmpsl
xchg
fnstenv
sub
mov
or
inc
into
jle
sub
xor
stos
aam
sbb
pop
push
ret
pxor
cwtl
out
stos
jno
xchg
push
inc
cmpsl
inc
mov
push
add
stc
aam
or
inc
inc
xchg
lods
cmp
mov
xor
push
mov
pop
jo
test
xor
jns
inc
je
jnp
adc
out
inc
xchg
mov
insb
incl
mov
xor
adc
and
mov
sub
dec
jle
fwait
imul
mov
stc
int3
mov
addr16
shlb
add
mov
jl
sbb
aaa
loop
decb
inc
fiaddl
jns
or
pop
inc
sahf
jecxz
push
mov
jp
popa
and
jle
mov
repz
dec
sub
pop
mov
jle
xchg
jmp
ret
and
stos
lds
push
and
and
add
mov
mov
xchg
mov
jnp
xor
das
add
push
sti
inc
cmpsl
out
in
sbb
push
add
sbb
xchg
rorl
inc
sub
das
mov
fwait
dec
sbbl
cmp
mov
cmpsb
test
xor
fcompl
data16
mov
cwtl
mov
dec
push
or
aaa
test
js
fstp
inc
test
lahf
lods
insb
icebp
sub
test
data16
or
lea
stc
sahf
ret
es
jno
mov
std
pushf
xor
shll
roll
mov
out
sti
and
and
aam
xor
arpl
rcll
cmp
push
push
out
xchg
ret
daa
push
les
cmpl
and
push
and
cmp
in
mov
ret
push
mov
xchg
jbe
xor
or
inc
and
ss
stos
addr16
sbb
sub
or
int3
cmpsb
test
inc
mov
les
repnz
insl
adc
dec
adc
push
xor
int
or
fstl
lret
sub
xchg
inc
hlt
roll
inc
cmp
cs
jl
in
icebp
add
dec
in
lods
in
dec
in
push
mov
sahf
jbe
jp
xor
or
stos
es
das
mov
lret
xchg
mov
ret
sbb
jl
shlb
sbb
xchg
adc
and
fs
pop
divl
sbb
leave
in
movsb
jnp
idivl
pop
enter
lea
add
mov
mov
imul
inc
movsl
mov
mov
das
es
scas
lret
movsb
mov
sbb
cmp
fwait
cltd
jnp
test
mov
lea
dec
arpl
fistpll
cmp
mov
shrl
call
rep
lds
xchg
loope
rcr
out
mov
cld
cmp
bound
and
xor
rclb
fwait
test
aam
lods
pop
mov
jl
xchg
mov
adc
addl
cmpb
dec
ss
std
iret
cmp
cld
push
daa
icebp
or
add
add
sub
jp
add
test
xor
push
xor
jmp
xchg
push
je
movsb
iret
shrl
and
xchg
mov
inc
test
int3
aas
lahf
aad
sub
sub
cmp
add
jnp
adc
jb
add
push
lret
das
cmp
lahf
js
sbb
cld
ret
mov
dec
inc
imul
mov
in
fwait
mov
lock
sbb
scas
lret
adc
pop
rcr
jne
mov
enter
std
mov
inc
pop
xor
sub
rorl
leave
out
fiaddl
fwait
sbb
dec
ret
popf
jae
icebp
stos
push
loopne
inc
leave
popf
xchg
jge
aam
push
and
and
inc
pop
mov
or
iret
and
push
cltd
lods
or
lea
xor
jg
nop
out
loop
push
dec
sub
insb
jne
cmpsb
repz
or
in
cmp
push
int3
mov
repz
mov
xchg
pop
mov
or
fidivrl
scas
add
mov
insb
add
xchg
mov
add
inc
inc
cld
mov
jne,pt
bound
cs
cwtl
stos
dec
scas
lahf
clc
sbbl
mov
pusha
les
adc
ret
cli
aas
fnsave
loope
pop
lret
push
cmpsl
mov
ret
or
cmp
leave
cmp
adc
add
mov
push
xchg
adc
test
cli
imul
pushf
enter
fxch
test
repz
stc
stos
divb
stos
jns
sbb
data16
inc
inc
ret
aaa
mov
test
loop
icebp
iret
das
jnp
movsl
out
xor
add
and
in
mov
jno
and
jl
ss
cs
mov
je
imul
add
jmp
sub
adc
test
jns
test
movb
lods
cmpsb
int3
lock
gs
and
cld
jle
nop
inc
pop
sbb
fwait
inc
ljmp
dec
mov
or
popa
cmpsb
jne
mov
sbb
insb
sbb
pop
sub
mov
or
jns
cmp
fisttps
xchg
insb
adc
push
mov
iret
sbb
cmpsb
test
sub
fnsave
mov
pop
aaa
pop
fbstp
add
inc
add
lock
jg
mov
fstps
cmpsl
bound
or
jmp
ss
mov
dec
cmc
pop
mov
mov
test
pusha
ljmp
sarb
pop
mov
fucom
mov
dec
call
xchg
mov
mov
xchg
pop
lods
sbb
ret
int
icebp
inc
mov
jb
push
mov
jecxz
iret
pop
lahf
cmp
and
pop
add
mov
jb
in
dec
lret
add
test
cmc
sbb
outsb
and
call
in
mov
cmp
or
add
add
xchg
sub
adc
insb
add
scas
or
and
sbbb
push
add
xchg
push
fcmovbe
fwait
mov
int
sbb
sbb
scas
fs
repz
fimuls
int
andb
movsl
cmp
insl
testb
nop
data16
fidivl
inc
and
scas
push
cmpsb
and
aam
in
int
pop
and
lahf
lock
adc
pop
fistps
dec
pop
insl
jo
pop
jmp
iret
xchg
pop
dec
sahf
mov
jno
mov
hlt
mov
dec
pop
popa
sbb
out
or
mov
jg
test
lret
mov
aas
lds
cmc
div
adcl
xchg
sub
hlt
cmc
jbe
daa
fs
ds
ficoml
int
cmp
mov
pushf
mov
sub
ljmp
jg
mov
dec
lock
add
sbb
mov
movsl
pushf
test
outsb
icebp
cmp
xor
jmp
fstps
int3
xchg
iret
xor
js
movsb
mov
inc
dec
mov
jg
sub
fldl
lcall
mov
add
jl
test
or
dec
div
fxch
fs
inc
jmp
ss
out
repnz
push
jno
sub
mov
jmp
enter
xchg
mov
xor
test
lahf
popf
test
jns
pop
imul
rclb
sub
test
roll
sti
jge
fs
mov
cmp
adc
add
add
cld
es
mov
jmp
fdivrp
ret
aaa
mov
add
add
movb
push
mov
inc
add
push
push
dec
mov
mov
lahf
mov
in
hlt
imul
outsb
insl
push
cmp
push
mov
adc
xor
out
push
fstps
enter
adc
aad
mov
dec
push
loope
jl
mov
mov
jae
xor
mov
aam
add
lcall
push
mov
push
enter
dec
shrb
mull
in
push
nop
pop
push
sbb
or
adc
inc
into
decb
and
dec
xor
push
lods
ds
inc
xor
and
mov
shr
fs
mov
xchg
inc
xor
push
popf
adc
rolb
test
mov
ds
xor
fs
dec
jmp
arpl
int
push
fcomi
adc
aad
jns
cmp
sbb
mov
inc
push
out
inc
scas
jp
mov
jo,pt
lret
sub
add
mov
pop
dec
push
mov
mov
movsl
fwait
xchg
jge
mov
std
ja
sbb
dec
mov
test
lods
or
jmp
imul
sbbl
cmpb
enter
cltd
cmp
test
jo
ja
in
js
insl
popl
jno
and
pop
pop
shrb
push
popf
jmp
xchg
and
xor
inc
into
push
data16
mov
cmpsb
aad
popa
push
imul
aas
jge
pop
jae
lcall
xor
xchg
mov
pop
or
sbb
ss
cs
lret
sub
jb
dec
fsubrs
jo
sbb
cmp
ds
rclb
es
sub
int3
jbe
addr16
inc
stc
cld
inc
das
push
ret
inc
call
xor
fsubrl
mov
pop
sbb
lcall
test
cmp
pop
cli
and
push
sbb
adc
lods
mov
xlat
inc
cmp
ret
xlat
scas
daa
pop
es
jns
sahf
xchg
cmp
mov
and
mov
stos
into
loopne
int3
dec
sbb
ja
jae
js
jb
pop
jb
jns
cwtl
adc
out
mov
cmp
cmp
rcrb
and
or
mov
cld
das
mov
add
into
hlt
lods
sbb
sub
test
sub
xor
adc
add
mov
cmp
xchg
imul
sub
rorl
int3
loop
add
repnz
adc
cmp
sbb
popf
cmp
pop
inc
lods
sub
pusha
mov
test
lea
test
movzbl
or
jle
stos
mov
and
int3
es
sbb
in
xor
mov
jo
sbb
push
jne
andl
int
ds
mov
push
in
test
mov
cmp
cli
cmc
mov
cltd
dec
inc
push
push
or
test
sub
adc
hlt
imull
orl
and
cld
push
mov
out
aas
push
inc
fs
mov
sbb
int
add
dec
pusha
pusha
out
mov
ljmp
xor
rorb
subl
inc
sbb
or
xor
mov
arpl
int3
and
inc
scas
shrl
xor
xor
cs
sti
and
jne
lret
mov
mov
push
adc
adc
pop
xchg
or
andb
sub
xchg
mov
xor
cs
fldt
cmp
pop
sarl
out
in
and
jp
pop
push
fcomi
fdivrl
xor
sti
repz
loope
pop
pop
mov
iret
sbb
jge
xor
sahf
mov
push
dec
in
ljmp
push
adc
lahf
pop
and
add
sbb
mov
sbb
das
movsl
cmp
loop
pushf
test
jo,pt
out
xchg
push
fcomps
jns
xchg
imul
loopne
arpl
fbld
je
popa
daa
or
cmp
xchg
int3
dec
push
and
test
scas
jg
mov
movsl
lea
lahf
add
add
aaa
sti
addr16
out
fidivs
hlt
jl
mov
xor
add
add
add
pop
clc
mov
jnp
lds
test
call
ret
xor
mov
push
or
dec
std
stc
mov
ja
imul
daa
jg
push
jns
mov
pop
mov
cltd
or
cmp
mov
jae
xchg
je
scas
pop
stos
orb
mov
pop
les
fimuls
icebp
xor
xor
movsb
pop
dec
and
push
fsubl
fs
sahf
jecxz
int3
sbb
scas
sub
insl
stos
daa
lea
pop
hlt
xchg
sub
mov
inc
mov
ss
sub
sbb
imul
sub
pop
pop
jg
fisttpl
icebp
gs
test
test
ret
dec
mov
sub
out
movsl
lds
dec
in
lods
lret
inc
sub
jg
or
xor
rcll
movsl
jecxz
mov
cmp
aam
push
int
mov
pushf
sahf
int3
test
add
add
repz
popf
or
inc
mov
adc
fcoms
test
dec
mov
int3
sub
pop
lods
mov
sbb
and
sbb
lcall
inc
cmp
pop
and
mov
inc
push
lcall
hlt
je
or
imul
inc
pop
dec
testl
mov
sub
mov
or
mov
push
outsl
daa
xchg
fidivl
scas
ds
push
push
sub
sub
cmpsl
add
popa
lcall
push
aas
add
daa
cld
insl
jae
sahf
cld
xchg
ret
inc
or
imul
add
sbb
jns
cmpsb
arpl
jo
adc
out
jae
pop
jbe
lahf
jo
loop
or
pop
ja
test
adc
and
out
int
sti
in
push
push
shl
mov
test
popa
dec
push
add
adc
inc
or
inc
adc
cmc
xchg
sub
cmp
sbb
addr16
insl
mulb
sub
daa
sbb
cmc
inc
lret
out
sub
imul
xchg
jbe
stos
mov
popf
cltd
jns
sar
pop
sub
xchg
xor
push
cmc
sbb
nop
cwtl
xchg
fs
push
mov
push
sbb
mov
inc
mov
ja
lret
js
inc
pop
in
imul
xchg
push
in
mov
mov
iret
adc
push
popf
popa
pop
std
pushf
mov
out
sub
into
imul
xlat
cs
add
lret
es
notl
fwait
mov
push
cmpsb
push
loop
ljmp
mov
test
xor
pop
pop
movsb
push
std
adc
mov
add
jo
or
mov
mov
pop
sbb
fcomps
mov
int3
enter
into
aas
inc
adc
xorb
mov
pop
int
add
cli
dec
popa
add
and
das
arpl
inc
stc
and
add
jne
add
lock
mov
jb
inc
mov
jne
cmpsl
push
xor
mov
mov
xlat
sub
ljmp
pop
dec
pop
xor
in
cli
xlat
pop
cmp
lods
mov
imul
ret
jmp
lcall
push
add
ss
inc
lds
mov
dec
rcll
out
xchg
fwait
aam
inc
xchg
sub
pop
adc
xchg
xchg
or
ret
mov
test
mov
inc
xchg
cs
sub
stc
lds
mov
adc
mov
das
out
mov
xchg
mov
popf
inc
or
cwtl
add
push
xor
mov
lcall
sbb
sub
repz
cpuid
lret
addr16
mov
mov
mov
push
pop
pushf
xchg
js
or
xchg
sbb
cmp
fcompl
mov
mov
mov
orb
divl
andl
les
pop
pushf
xchg
fiadds
pop
and
in
pop
mov
adc
repnz
int
dec
push
clc
mov
enter
imul
addps
lcall
std
push
push
scas
mov
cli
sub
in
and
std
jecxz
iret
sub
pusha
jmp
pop
insb
iret
dec
cld
faddl
arpl
idivb
call
lods
xchg
pop
fmull
xor
xor
inc
push
jne
insl
jecxz
pop
pop
fsub
mov
xor
xchg
dec
mov
cmp
and
add
add
inc
sbb
repz
fists
aaa
add
hlt
add
add
xchg
ret
mov
clc
in
pop
pop
cmp
push
push
push
cwtl
mov
jecxz
test
adc
push
movsb
adc
adc
scas
add
adc
push
lea
incb
mov
bound
cmc
sub
mov
jno
rcll
pop
cmp
rclb
xor
sahf
lret
aas
cmpsb
test
test
jmp
mov
fs
es
aad
mov
movsb
add
lds
test
frstor
dec
add
xchg
icebp
cmp
xor
insb
es
out
mov
cmpsb
sbb
jle
xor
out
mov
xchg
pop
frstor
cwtl
out
or
push
icebp
xlat
fildll
test
data16
test
into
jae
pop
or
loope
xor
outsl
orl
add
xchg
adc
cmp
jge
pop
fwait
adc
add
xchg
xchg
xchg
pop
js
or
in
hlt
mov
dec
jb
pusha
and
fsub
cmpps
inc
test
lea
sbbb
cmp
iret
and
stos
cmp
sub
lds
push
jbe
idiv
sbb
and
cltd
mov
sbb
sarb
mov
mov
fldenv
idivl
dec
repz
imul
pop
pop
mov
rcll
sbb
cmp
adc
cli
xchg
rcll
add
ljmp
mov
adc
les
cltd
loope
pop
lea
mov
xchg
icebp
arpl
stos
xor
mov
stc
insb
lods
mul
mov
dec
data16
addl
mov
pop
jge
mov
lahf
leave
sbbl
pop
ds
ljmp
pop
je
sub
xchg
sub
shll
in
mov
jmp
and
dec
and
sbb
dec
movsl
fs
sub
add
lds
decl
aas
lahf
fistpll
inc
pop
dec
mov
xor
lcall
into
pop
movsl
xchg
cwtl
mov
cld
jmp
andb
arpl
add
popa
in
lret
inc
cmp
dec
or
mov
or
cmc
dec
outsb
pop
lock
cmp
test
xor
xchg
push
stos
pop
sub
aas
push
fdiv
inc
mov
test
push
push
xchg
or
pop
lods
popa
mov
dec
out
fst
pop
rcrb
scas
orb
xchg
rcll
ret
popf
in
mov
sub
push
mov
add
inc
aam
aam
insl
pusha
pop
cli
jle
into
add
xchg
and
in
fsubrl
jb
orb
push
insb
xorb
adc
stos
push
push
jnp
mov
lods
mov
sub
inc
scas
scas
pop
cmp
cmpsl
dec
jmp
xor
sbb
mov
mov
ss
and
test
add
cs
outsb
and
arpl
sbb
push
mov
jg
push
lods
mov
pushf
jle
mov
sub
xchg
jecxz
jnp
jmp
mov
int
dec
loop
and
or
mov
sbb
sbb
jae
fisubs
bound
xchg
sub
adc
inc
xchg
lea
inc
cmp
push
mov
stos
push
cwtl
mov
pop
mov
mov
pop
xchg
fcompl
hlt
fwait
mov
sub
sbb
sub
pop
lds
cmpsl
sub
mov
scas
jl
imul
adc
or
sub
lcall
add
push
jecxz
shlb
dec
cli
lods
jp
push
pop
sub
cmp
sti
push
mov
int
push
dec
jp
sbb
add
fadds
popf
cs
pop
dec
and
mov
mov
mov
pop
lods
mov
addb
or
sub
push
pop
pop
and
cmp
lock
inc
stos
shlb
jmp
jae
iret
and
cmpb
push
or
lds
daa
scas
xchg
ljmp
cmp
inc
push
cmp
stos
nop
fbld
push
inc
xor
or
xchg
push
and
addr16
sahf
sbb
cltd
movaps
cmp
leave
sarl
aad
cmp
adc
adcb
pop
xor
insb
xchg
sbb
push
xlat
mov
pop
mov
jle
sub
push
push
in
mov
add
add
mov
lahf
cwtl
or
add
add
mov
add
ficomps
adc
jmp
inc
inc
inc
addr16
inc
test
add
out
inc
pop
mov
vpshufhw
mov
add
adc
cwtl
shll
jb
call
adc
xor
mov
sarb
jl
and
lcall
or
mov
xor
and
xor
frstor
xchg
dec
out
adc
xchg
nop
cli
fsubrs
jge
dec
inc
add
pop
nop
clc
xor
cmp
fsubl
mov
adc
faddl
popf
mov
lods
mov
adc
fdivl
mov
nop
loopne
cwtl
pop
mov
pushf
int
mov
loopne
and
xor
xchg
dec
push
je
pusha
es
js
mov
sarl
xchg
insl
or
and
mov
push
mov
mov
or
adcl
jle
lods
test
mov
stos
add
loope
test
mov
mov
push
and
stos
scas
jne
sbb
sub
xorb
sahf
mov
or
setno
cmp
adc
enter
add
or
imul
sub
mov
pop
fwait
adc
jae
scas
dec
ret
pop
mov
jbe
fsub
bound
andl
insl
push
mov
int
addr16
pop
dec
mov
pusha
test
fdivrl
clc
push
xchg
out
push
ss
sbb
gs
sti
repnz
sahf
fs
xchg
lret
push
mov
jmp
xor
xor
div
lret
lret
mov
loope
pushf
popf
jl
cmp
jmp
add
rorb
jae
xor
in
jns
mov
rcr
xor
pusha
call
mov
add
xchg
sub
mov
aam
pop
push
ss
mov
arpl
mov
or
sub
mov
js
int
idivb
movb
aam
inc
fwait
xor
adc
lods
sub
gs
xor
push
pushf
jb
imul
jmp
mov
jno
les
les
pop
sbb
pop
inc
or
add
les
jle
fldcw
cli
or
mov
loopne
subl
mov
add
mov
mov
jbe
inc
or
mov
sub
push
add
ror
sbb
call
aad
loopne
lahf
iret
cmp
mov
hlt
std
fcmovb
sbb
push
mov
in
out
or
and
xchg
inc
in
stc
ret
popa
lods
or
dec
testl
ficompl
and
jp
addr16
lcall
sti
mov
fidivrl
out
fsubl
arpl
fs
in
negl
andl
imul
add
and
jmp
lret
test
rorb
lods
imul
scas
add
fcmovnb
adc
inc
mov
and
stos
pop
xchg
jp
data16
sub
ds
mov
adc
outsb
pop
lods
lods
mov
nop
or
adc
sarl
pusha
cmp
xchg
cmp
shll
push
pop
aam
push
xor
mov
andl
mov
pop
popa
and
dec
jno
adc
movsl
cli
int
lahf
jg
sbb
or
hlt
shl
insb
sub
shll
add
add
fwait
aam
in
pop
or
push
adcl
push
sub
mov
fbstp
push
xor
frstor
push
in
mov
int
pop
xorl
ja
cmp
jne
adc
xchg
xor
add
pop
mov
stc
xchg
aad
sbb
push
cwtl
subb
pop
xchg
int
pusha
or
cmpsb
lods
movsl
iret
rorl
outsb
fistpl
pop
mov
xchg
daa
mov
xor
rolb
call
push
daa
lcall
pop
iret
sbb
lret
xchg
sbb
lods
mov
nop
sbb
mov
inc
xchg
repnz
fisttpll
and
mov
inc
je
call
add
ja
mov
rcrl
nop
sbb
cmp
stc
add
lock
or
push
in
in
mov
adc
and
inc
test
push
xor
or
add
add
in
pop
dec
negl
mov
dec
sbb
xchg
jno
add
hlt
add
add
rol
subl
dec
dec
xchg
lahf
xor
stos
mov
into
mov
fwait
push
bnd
fadds
addr16
mov
insb
mov
pop
addl
loope
pop
jns
rclb
andb
pop
stc
and
int
lods
push
aas
fcmovnb
dec
repz
add
mov
mov
add
les
xchg
xchg
cmp
mov
sbb
jge
jne
scas
cli
clc
lock
push
sub
cmp
mov
idivl
xor
pop
and
mov
imul
lcall
fdivrl
cs
adc
std
mov
enter
int3
daa
repz
push
bound
push
loopne
dec
std
idiv
fdiv
sti
add
loopne
insb
xchg
sub
jmp
sub
das
or
pop
jb
inc
mov
dec
fs
xchg
sbb
and
cmp
hlt
insl
xchg
inc
sub
push
mov
test
shrd
lock
icebp
stc
and
out
or
jo
repz
push
jb
adc
jecxz
popa
fbld
stos
xor
push
lea
mov
mov
sahf
lea
outsb
pop
mov
cmp
outsl
cwtl
pop
mov
rolb
push
pop
pop
lds
and
cmpb
movsl
cmc
jmp
mov
jno
shll
inc
outsl
rcl
cmp
push
and
insb
les
push
pop
test
dec
mov
test
movsl
into
pop
cld
sbb
jle
jl
dec
dec
pop
or
scas
ret
or
jo
jge
mov
stos
push
push
and
lea
fldenv
aam
pop
test
insb
pop
mov
pop
popa
inc
or
push
adc
test
xlat
mov
dec
and
inc
sub
sbb
jp
mov
xchg
adc
add
incb
and
fnstcw
jb
dec
cmp
shll
fistpll
push
push
sub
and
inc
bound
out
subl
mov
arpl
or
add
ja
lock
mov
mov
xchg
xchg
lahf
ret
mov
mov
ret
cmpsb
sahf
roll
sub
ljmp
xor
negl
test
push
fstpl
adc
xchg
sahf
cli
cwtl
pop
xchg
push
stos
ss
lock
leave
xchg
insb
xchg
inc
sarb
adc
cmp
lcall
cmp
loop
inc
sbb
cmp
das
popl
div
adc
xor
pop
push
adc
stos
sbb
orl
lahf
push
insl
enter
cmp
add
addl
mov
jecxz
cmpsb
jne
mov
xor
jne
pop
aad
adc
je
and
dec
sbb
push
push
and
lret
pop
cmp
les
outsl
dec
in
or
cmc
sbb
outsb
mov
int3
push
imul
lods
push
jns
or
jno
add
sbb
xor
pop
lods
jge
pop
notl
fidivrl
dec
fs
fsubr
or
jns
loopne
or
xchg
or
sub
push
xlat
and
repnz
inc
orb
sbb
les
xchg
cmp
int
xor
cmc
cmpsl
out
imul
push
jmp
dec
push
jge
sahf
xchg
lea
jmp
out
ret
mov
sahf
add
mov
mov
push
loop
mov
ss
push
add
mov
out
xchg
and
mov
xor
xor
xor
mov
rcrb
lea
push
lret
sbb
pop
mov
push
push
mov
pop
adc
xor
cwtl
mov
lcall
jecxz
mov
mov
lods
adc
jbe
xchg
sub
pop
add
cwtl
add
push
aam
or
add
std
cmc
push
inc
cld
clc
sbb
stos
add
sub
xchg
add
cwtl
lcall
dec
sbb
cld
adc
loop
sti
pop
mov
mov
push
pusha
push
jp
mov
leave
fsubr
ret
fdivrp
bound
ret
pop
aam
xor
repnz
cmp
test
cmp
lret
mov
add
mov
stos
shll
cmp
lods
cmp
lods
jnp
shr
aam
out
add
ret
dec
repnz
dec
or
addb
add
in
mov
fdivp
cld
ds
daa
cmp
cltd
jmp
add
add
add
inc
lea
dec
push
cs
imul
mov
cmp
mov
or
insl
sbb
filds
dec
std
sub
xchg
js
sbbb
pop
fwait
cmpb
pop
push
ret
add
push
cmpb
xchg
lret
mov
outsb
mov
add
test
mov
xor
jg
ja
push
inc
inc
dec
inc
rorb
add
fldt
push
loopne
lds
sti
nop
aad
mov
das
je
mov
inc
pop
hlt
rcrl
out
int3
out
push
push
push
idiv
cmc
inc
test
mov
inc
leave
mov
push
and
push
fsts
popa
jnp
xor
or
enter
imul
out
rcr
inc
divb
push
add
sbbw
lret
mov
sub
aas
jp
xchg
pop
ja
add
xchg
xlat
push
cltd
jmp
js
in
sbb
mov
lds
add
dec
es
mov
and
xchg
std
add
fs
push
fdivr
popf
popa
push
adc
cmc
dec
push
xchg
sbb
orb
repz
mov
dec
cmp
mov
xchg
xor
andb
cmp
es
xchg
lods
and
push
mov
call
push
lods
scas
pop
add
test
xchg
xchg
lahf
cmp
sub
push
push
xchg
jnp
adc
add
xor
leave
sub
add
dec
dec
mov
inc
fs
inc
ljmp
rolb
mov
js
mov
lcall
adc
repnz
or
outsb
push
insl
shll
aaa
fdivl
hlt
cmpsb
and
fldl
xchg
push
lds
mov
push
cmp
dec
xchg
popf
test
enter
cmp
dec
cmp
out
jge
xchg
and
inc
pop
orb
cmc
int
cmpsb
push
adc
movsl
xchg
mov
and
cltd
mov
inc
pop
es
in
sub
dec
sbb
mov
sbbb
mov
ficoms
inc
cs
dec
push
push
cmp
adcb
pop
imul
scas
add
push
xor
jecxz
pusha
dec
negl
outsb
jp
sbb
adc
mov
xchg
pop
cmp
xor
fstps
xchg
jp
sub
mov
data16
stos
gs
movsl
push
addr16
bound
mov
imull
loope
mov
add
sbb
cld
les
int
add
rorl
bound
shrb
lds
mov
dec
and
sub
in
dec
xor
sbb
push
aas
mov
jle
jp
lcall
adc
jp
inc
test
cmp
mov
mov
shrd
xor
stos
popf
dec
pop
and
push
addps
mov
cmp
sbb
scas
ds
pop
aam
pusha
cmp
test
jmp
pop
jmp
aam
es
out
out
fstps
leave
xorl
push
mov
jmp
sbb
jg
sbb
andb
mov
int3
cwtl
sub
fldenv
mov
sbb
dec
mov
adc
adc
mov
pop
pop
mov
repz
mov
pop
into
mov
sbb
jmp
addr16
testl
add
testl
adc
rcrl
pop
jp
add
adc
fdivs
pop
movsl
mov
popf
out
adc
cmpl
inc
leave
or
hlt
jp
add
sbb
mov
sub
jp
fstpl
push
add
cld
inc
dec
dec
pop
pusha
mov
jbe
jl
aas
jbe
and
pushf
stc
xchg
loopne
mov
je
icebp
pop
mov
lcall
jmp
or
mov
jl
icebp
xor
clc
pop
fs
sbb
pop
sub
jo
jle
fsubrl
and
fwait
pop
add
adc
lret
fsubrs
out
jb
addps
cmp
test
jg
mov
add
add
jnp
xor
jg
sbbl
pop
dec
add
hlt
add
add
pusha
pop
ljmp
lahf
sbb
adc
repnz
std
xchg
mov
xchg
or
loop
lock
pop
adc
dec
aad
mov
pop
pop
or
adc
in
cmp
jb
aas
scas
mov
push
fldenv
dec
enter
push
test
mov
push
cli
in
adc
jae
add
jl
push
shrb
dec
add
ljmp
out
inc
inc
sub
sbb
sub
mov
test
and
or
jl
ficomps
lahf
inc
add
cwtl
arpl
cmp
mov
fsubl
lret
ret
xchg
cmp
dec
mov
dec
xor
js
pusha
xchg
sub
aaa
inc
lods
insb
das
jae
vfmsubps
pop
cmp
test
mov
test
in
xor
aas
outsb
scas
push
push
cli
jno
fcmovb
inc
add
ret
pop
loopne
push
sbb
xchg
jg
stos
push
lahf
sbb
mov
jle
inc
jne
xchg
cli
inc
ret
divb
push
popf
enter
bound
mov
add
cs
stos
dec
sbb
xchg
adc
jo
jno
addb
adc
adc
cmp
push
in
popa
mov
jmp
pusha
leave
movl
jne
pop
or
aam
jns
add
pop
ds
and
pop
sub
dec
dec
pop
mov
xchg
dec
and
subb
pop
les
frstor
push
lret
rcll
xchg
testb
cwtl
pop
in
roll
adc
scas
mov
mov
shl
mov
daa
add
ss
or
xor
ret
cmpsb
jl
imul
jns
pop
mov
rcr
stc
push
cli
jo
mov
jle
pop
xchg
cmp
add
leave
mov
jae
cmp
adc
cs
and
gs
addl
inc
sbb
sahf
stc
out
sub
bound
or
pop
xchg
and
inc
xchg
popa
or
repnz
push
xchg
ret
or
jp
dec
hlt
gs
add
mov
jmp
stos
pop
sub
adc
xchg
add
daa
xchg
call
mov
jle
mov
jnp
add
sbb
mov
aaa
add
ja
je
mov
inc
push
mov
sbb
sbb
stc
add
push
pop
push
in
scas
mov
mov
out
cmpl
or
sub
dec
inc
jns
sub
mov
push
fnstsw
push
add
sbb
dec
sub
mov
add
lock
roll
pop
push
dec
cli
and
mov
pusha
lds
hlt
arpl
pop
hlt
pop
mov
pop
les
push
cld
mov
test
jle
shll
push
pop
jge
lcall
mov
es
or
xlat
xor
lods
ficoms
cld
pop
icebp
push
pop
add
inc
jl
jb
and
lea
inc
sub
sti
std
pop
lds
lea
fimuls
ret
clc
fisttpl
jmp
adc
movsb
xchg
dec
outsb
jecxz
pop
and
bound
mov
sbb
cmp
stos
sub
mov
and
fs
sahf
or
add
mov
cmp
dec
and
int
shll
call
or
cmpsb
push
or
xor
or
jmp
iret
cmpl
out
ret
or
idivl
out
adc
gs
ret
es
add
call
lods
fildl
flds
nop
stc
mov
inc
jl
mov
insl
movsl
dec
or
dec
jl
lds
ficoml
cmpsl
sbb
rcl
push
inc
rclb
jecxz
add
mov
sub
xor
sbb
jecxz
jmp
sbb
clc
out
mov
mov
mov
lret
xor
stos
push
cmp
push
stos
in
inc
pop
ret
push
out
sbb
test
in
xor
subb
inc
inc
adc
popf
mov
mov
movsb
jg
mov
cmc
enter
sbb
imul
test
pop
sbb
inc
push
cmp
jmp
mov
ljmp
test
ss
hlt
mov
push
movsl
jge
adc
add
jbe
ja
fwait
inc
imul
dec
pushf
inc
jbe
hlt
xor
add
add
or
xchg
jmp
adc
pop
push
in
les
add
hlt
add
add
xchg
mov
in
pop
ljmp
jbe
aad
jne
inc
push
jno
data16
mov
inc
jecxz
sbb
pop
ret
or
pop
mov
mov
and
popf
icebp
test
inc
xchg
dec
adc
lods
xor
outsl
dec
xor
cs
push
pop
push
mov
sahf
xor
mov
fcomp
inc
lret
fmuls
ret
je
jnp
and
inc
cmp
pop
std
jnp
cmpb
push
inc
add
sub
push
inc
lods
loope
cmp
sar
mov
lods
sbb
cmc
inc
push
pop
xchg
insl
pop
inc
sbb
jg
mov
mov
or
sbb
inc
in
add
and
les
push
jmp
je
mov
pop
xlat
mov
jb
in
fwait
mov
das
xor
sub
xor
jnp
outsl
sub
cmpb
lds
ss
sbb
mov
cmpsb
jecxz
aam
push
shlb
fadds
sub
cmp
jle
dec
cmp
pop
push
pop
es
mov
loopne
dec
inc
iret
pop
pop
adc
mov
xor
lods
lcall
push
jo
movsl
mov
cwtl
roll
std
shll
ds
daa
mov
popf
mov
mov
fsub
add
or
cmpsb
cmp
cs
popa
clc
lret
dec
sbb
out
dec
addr16
fs
clc
mov
mov
xor
dec
in
jge
bound
sbb
or
lds
pop
and
xchg
or
mov
mov
lcall
cmp
std
outsl
jno
test
fists
sbb
pop
sub
mov
mov
je
hlt
dec
das
mov
jb
push
iret
push
sbb
icebp
sti
push
inc
mov
fwait
in
and
mov
ljmp
add
enter
fidivrs
pop
sbb
jl
scas
xchg
inc
cmp
dec
jl
add
xor
pop
sbb
sub
pop
rcrl
mov
mov
jmp
lret
adc
aaa
lret
pop
sbb
and
sbb
jge
or
and
pop
jmp
imul
xchg
add
lds
sbb
push
and
sbb
out
pop
mov
lahf
ds
fdivs
pop
loope
adcl
clc
or
jae
sbb
aas
xchg
pop
insb
xor
push
cmp
mov
call
cltd
xor
mov
xor
pop
lods
add
fidivl
jb
loope
mov
mov
flds
adc
push
cltd
jnp
dec
sub
jno
adc
pop
xchg
adc
and
fnstcw
inc
ficompl
sub
stos
lcall
lock
mov
dec
inc
push
lahf
cmpsb
fldt
dec
xor
mov
pop
mov
pop
mov
and
push
gs
into
pop
mull
jo
mov
dec
dec
sub
mov
pop
xchg
test
mov
out
or
outsb
lds
mov
dec
jle
stc
inc
pop
fldenv
je
jb
mov
mov
jecxz
pop
fs
imul
or
or
sbb
sub
insb
xor
jo
std
push
push
test
add
sbb
and
sahf
gs
add
mov
jecxz
fldcw
cmp
es
je
sbb
fbld
lret
push
mov
sbb
inc
rolb
cmp
incl
cmp
mov
mov
add
and
out
ret
cmp
scas
fcomp
stc
into
leave
xor
mov
incb
out
pushf
std
icebp
int3
popf
loop
cmpl
test
add
movsb
jg
mov
mov
xor
popa
jge
nop
jp
mov
jle
cmp
mov
mov
addr16
scas
push
das
sar
pop
pop
fnstsw
lret
in
sbb
adc
xchg
and
das
fidivrl
jne
or
rcrb
mov
pop
mov
push
mov
xor
adc
ds
pop
push
es
dec
dec
sbb
bound
pop
nop
or
pop
push
fs
fbstp
inc
push
int3
out
loop
sub
push
mov
inc
xchg
dec
push
push
push
xor
fstpl
test
xor
leave
mov
sbb
das
push
inc
dec
sub
test
add
add
loope
loope
fistpll
adcl
pop
fnstenv
add
add
add
mov
jae
and
jg
in
mov
xor
shll
das
jo
xchg
push
sub
packsswb
int
shll
dec
mov
jnp
sti
jle
mov
push
cmp
add
test
mov
and
jge
and
xchg
add
sub
mov
sub
hlt
rcrb
sbb
test
pop
clc
shll
shll
frstor
push
fwait
repz
mov
inc
int3
loope
mov
xor
test
sbb
out
roll
lock
adc
push
xor
aad
sbb
dec
cmpsl
cld
sub
mov
dec
or
test
pop
add
fs
mov
inc
notb
push
notl
push
and
add
xchg
pop
or
idivl
shrl
add
xor
sar
ret
xchg
lds
test
add
or
dec
pop
push
cmp
mov
dec
fwait
xchg
push
fistps
mov
sub
sbb
cwtl
dec
mov
into
fwait
int3
popa
lock
negl
fs
and
mov
in
outsl
stos
int
push
xchg
jmp
or
cmp
or
shlb
std
mov
movsb
pop
shlb
leave
xlat
pop
pop
mov
mov
test
xchg
arpl
bound
negl
mov
cli
mov
outsl
jmp
in
push
subl
xchg
shr
adc
dec
dec
and
and
sub
pushf
filds
stos
push
jmp
pop
test
lahf
pop
jae
sub
sbb
rolb
out
jno
fs
pop
sbbl
bound
nop
fs
adc
xchg
popa
pop
mov
pusha
jg
xor
pop
mov
jle
test
mov
rcll
arpl
jecxz
push
mov
push
xchg
dec
icebp
cltd
add
std
iret
dec
jg
in
stc
dec
addr16
rol
lret
pop
cmp
mov
ret
imulb
mov
mov
pusha
nop
ljmp
outsl
lods
test
loope
add
or
mov
iret
fiadds
leave
jp
cmp
int3
jnp
pop
pusha
push
inc
fisttps
je
lahf
jle
cmp
jb
push
or
out
cmpsb
push
cmp
or
out
jo
pop
jmp
dec
int3
xlat
mov
sub
cmpsb
fildl
mov
mov
daa
cwtl
mov
jo
adc
nop
adc
jecxz
scas
ja
in
fwait
lcall
cmc
xchg
lds
pushf
mov
xor
ret
icebp
mov
and
movsl
int
xchg
mov
xor
mov
fstpt
inc
xor
not
stc
jle
xchg
push
call
mov
jp
cli
mov
aas
push
mov
jecxz
shll
pop
test
ss
push
sub
movsl
dec
sub
ror
mov
pop
dec
ficoms
pop
mov
daa
sti
adc
outsb
ja
inc
fld
adc
jge
push
mov
inc
adc
push
dec
mov
outsl
xchg
dec
and
sbb
addr16
frstor
mov
ja
inc
cs
fwait
pop
ret
das
test
xor
xchg
or
insb
or
mov
cld
push
mov
xchg
movsl
cs
push
add
and
add
inc
adc
add
dec
sahf
adc
lret
test
mov
sarb
push
ret
mov
pop
dec
cmpsl
sbb
cmp
add
sub
pop
test
lods
lods
rep
dec
addr16
into
dec
stc
test
pop
fs
clc
shr
jnp
mov
fs
push
or
mov
notb
lock
mov
pushf
pop
movsb
sbb
into
lods
lock
fwait
jmp
jae
mov
jmp
cli
pop
push
xchg
repz
lea
jne
sub
mov
inc
sub
xor
fbld
jnp
rcl
xor
pop
fs
adc
adc
push
cmp
mov
andb
add
out
aam
push
pop
rclb
adc
sub
xlat
popa
lods
repz
arpl
jnp
in
ror
shll
ja
insb
ret
mov
jl
xchg
test
data16
clc
or
mov
fisttpl
cmp
fstl
sbb
subb
fst
dec
addb
add
loope
xchg
out
notl
shrb
add
hlt
add
add
jnp
xor
imul
cltd
sub
dec
test
inc
pop
ret
dec
notb
push
xchg
jb
int
push
dec
lods
std
fsts
shr
jae
push
xchg
mov
add
pop
sbb
int3
dec
cwtl
cwtl
and
clc
mov
hlt
mov
xchg
arpl
mov
mov
and
mov
jl
outsl
mov
sbb
cmp
stc
faddl
cwtl
inc
xchg
mov
adc
inc
and
ljmp
jp
push
int
scas
loopne
lea
mov
and
fsubs
test
loop
mov
mov
push
je
incl
cmp
in
pop
mov
int3
lret
repnz
stc
cmp
ja
push
adc
std
cmpl
stc
cltd
in
sbb
push
jle
test
sbb
xchg
daa
fildl
and
mov
jno
xlat
inc
call
xor
jo
lds
jbe
into
jecxz
dec
insb
cli
push
in
call
mov
into
jmp
xchg
rolb
inc
xchg
mov
xor
imul
cld
js
cmc
add
xchg
loop
inc
sbb
arpl
cmp
test
imull
xchg
inc
dec
dec
clc
stc
cmp
aad
mov
sub
fs
inc
mov
ret
cmc
sbb
gs
xchg
xchg
cmp
sub
ds
pop
mov
ds
cltd
add
js
mov
sar
frstor
adc
xor
out
dec
inc
mov
ljmp
lock
in
lods
and
fisubs
jo
push
fisubrs
rolb
es
push
mov
clc
dec
loop
iret
mov
lods
mov
and
cmp
pop
xor
test
scas
daa
pop
call
add
enter
add
adc
cmp
xchg
pusha
rolb
repnz
or
fisubrs
sub
in
xchg
into
cmp
sbb
jns
add
xchg
shrl
jl
mov
pop
hlt
movb
pop
sti
mov
jecxz
lret
jae
rdtsc
addl
add
dec
fbld
pop
sahf
jl
fdivs
xchg
outsl
dec
xor
cmc
pop
addr16
iret
adc
lcall
mov
popa
out
mov
sarb
push
pop
daa
dec
push
sub
sbb
fsts
add
mov
ja
subb
negb
mov
js
xchg
pusha
es
gs
aaa
adc
mov
and
js
adc
xor
dec
xchg
jp
test
pop
pop
cmp
lcall
scas
sti
and
repnz
stc
aas
push
mov
mov
lods
inc
and
pop
aas
cli
or
ret
mov
adc
mov
jle
jnp
aas
not
inc
pop
xlat
push
movsb
push
inc
jmp
mov
sub
dec
sub
adc
int3
sbb
sbb
sub
cmpsb
addr16
je
cli
or
shll
mov
mov
call
es
push
pop
aam
xchg
inc
fcmovb
int3
mov
sbb
popf
cli
adc
xchg
roll
cmp
test
mov
fisubl
inc
mov
pop
cmpsb
jno
test
dec
or
push
ja
mov
sbb
fwait
stc
xchg
out
sub
sbb
loop
add
call
js
sahf
aam
repnz
mov
js
repnz
aam
xor
mov
mov
stos
add
sahf
add
sub
call
sub
or
adc
sbb
dec
std
aad
sbb
dec
movsb
pop
push
mov
mov
call
and
lock
sbb
das
faddp
add
jp
cmp
cmp
push
push
jg
and
outsl
fnstsw
scas
sub
cmp
lcall
push
inc
mov
xchg
cmc
stos
mov
cmp
fwait
jno
int
gs
mov
js
or
ret
push
jp
stos
subl
inc
popf
push
push
fwait
jb
test
outsb
sub
push
lahf
xchg
xchg
push
iret
bound
mov
pop
fwait
jle
aad
rolb
jl
dec
cmp
pop
adc
movsb
mov
mov
int
call
dec
adc
idivl
xchg
in
push
mov
ret
dec
or
dec
pop
xchg
test
arpl
fadds
add
add
cmp
loope
mov
xlat
sub
add
add
add
or
mov
out
and
test
xchg
mov
push
cwtl
push
dec
mov
lahf
stos
jnp
pop
mov
outsb
xor
jecxz
jl
mov
pusha
jns
das
xor
mov
add
pop
mov
scas
data16
ja
jl
test
jo
mov
adc
mov
cmp
adc
aad
xchg
or
fwait
pop
xor
fldenv
adcl
aaa
jmp
lret
popf
daa
push
addr16
ret
mov
fildll
int3
jo
or
jb
shrl
stos
data16
push
inc
jg
popf
dec
adc
loopne
stc
pop
xchg
pop
popf
cld
push
inc
aad
aad
arpl
enter
inc
cmp
sub
sub
adc
xchg
push
ljmp
je
adcl
mov
stos
bound
add
seto
or
fxch
or
push
adc
mov
push
jae
test
sbbb
adc
mov
or
adc
push
pop
popf
or
xlat
rolb
data16
xchg
mov
bound
cmp
mov
or
xchg
cmp
add
ljmp
test
scas
add
xchg
pushf
bound
cmp
xchg
lods
jo
mov
inc
pop
or
out
mov
jae
rcll
push
jo
inc
js
jb
jns
outsb
xchg
inc
cmp
hlt
mov
push
pop
ss
lret
jbe
and
adc
loopne
sbbl
push
cmp
mov
and
loope
mov
shl
repnz
pop
fistpll
jecxz
push
push
pop
ds
jle
inc
test
and
add
ja
mov
mov
ret
bound
mov
pop
sub
repz
mov
push
cmp
sub
ja
and
aad
cmpsl
jmp
xchg
xor
mov
add
aad
fldenv
out
fidivs
xchg
imul
and
jbe
into
shll
shl
scas
js
jnp
nop
xor
loopne
fcmovbe
notb
aad
shl
pop
adc
call
sub
dec
cli
dec
cmp
ljmp
inc
in
xchg
mov
mov
ja
ss
inc
adc
loopne
xlat
jl
pusha
xor
decb
mov
sarl
jmp
and
cmp
lcall
push
mov
nop
dec
dec
mov
mov
insb
hlt
mov
sbb
xor
int
inc
ss
sbb
ficomps
mov
jne
dec
dec
mov
sbb
and
inc
lcall
lcall
cmp
sbb
cmc
sbb
data16
ja
cmp
pop
pop
adc
sbb
test
xchg
jae
jnp
xchg
mov
popf
repnz
loop
xor
ss
adc
int
jle
into
jns
sbb
shr
mov
idiv
sub
icebp
movsb
cmp
add
sbb
gs
lret
jg
xchg
fsts
rcrb
jnp
sub
push
dec
cs
cmp
stc
xor
mov
cwtl
push
js
mov
xchg
fisubrs
push
cmp
xchg
add
xorl
inc
cmp
inc
jno
sahf
sub
lcall
inc
cltd
fidivs
sbb
push
mov
stc
mov
push
mov
pop
adc
jp
jbe
xchg
fstps
fbstp
mov
imul
dec
mov
testl
adc
or
mov
mov
mov
or
out
data16
dec
daa
push
mwait
pop
sbb
popa
out
pop
sarl
bound
xchg
hlt
insl
xlat
and
xor
cmp
into
cltd
adc
push
push
adc
pop
popw
xchg
pop
data16
aad
mov
daa
notb
arpl
push
mov
lret
lret
add
repz
inc
mov
fwait
dec
iret
ret
cld
mov
orb
lods
add
cmpsb
mov
js
in
cmp
out
mov
push
ret
repz
add
jno
jecxz
int3
loopne
lods
loope
loop
push
jae
mov
in
or
out
xor
pop
insl
stos
lods
mov
data16
ror
cmc
adc
jne
push
sahf
inc
xlat
or
adc
jp
cld
jae
mov
rcr
lock
lock
repz
add
add
mov
jp
ret
inc
testl
hlt
add
add
out
cmpsb
sub
rcrl
test
sbb
xchg
addr16
or
xchg
andl
xchg
dec
imul
data16
js
ljmp
sub
in
jne
js
fnstenv
and
hlt
decl
add
cmpl
push
xchg
cmp
test
sub
and
ja
mov
movsl
jge
jae
sub
sub
adc
mov
mov
out
sti
sub
lahf
movsl
inc
mov
dec
movsb
fsub
std
dec
pop
in
push
mov
or
fstpl
leave
inc
cmpsb
sbb
jp
mov
dec
mov
outsl
insl
sbb
hlt
lods
cwtl
push
push
roll
and
cmp
in
xor
mov
mov
filds
outsb
or
jg
inc
inc
dec
xchg
sbb
dec
outsb
jbe
movb
out
mov
das
push
stos
add
adcb
inc
dec
and
push
jge
dec
and
cmp
or
push
pop
push
icebp
pop
lock
nop
outsb
mov
and
push
stc
or
jns
mov
mov
cmp
popf
xor
ror
out
jo
mov
lds
insb
cmp
imul
jg
inc
mov
jl
or
cmpsb
lret
cwtl
pop
adc
rcrb
les
rolb
mov
pop
shlb
popa
sbb
pop
jne
mov
adc
pcmpgtw
fisubl
sbb
sbb
es
pop
push
adc
mov
xor
repz
push
repz
aas
dec
fsubl
cwtl
jnp
mov
jge
inc
cmc
xlat
rol
push
aam
lds
sahf
xchg
imul
pop
repz
loopne
pop
mov
jle
aaa
jbe
dec
loopne
jle
pop
mov
adc
icebp
jbe
in
subb
sub
dec
push
inc
sbb
add
pop
dec
lcall
movsl
pop
mov
mov
pop
cmp
test
movsl
add
out
mov
das
jecxz
sbb
cmpl
and
fs
adc
xchg
mov
bound
movsl
pop
mov
pop
push
mov
nop
jg
and
sbbb
and
cmc
sbb
cmp
aas
cli
sahf
mov
test
or
insl
dec
jg
dec
fmull
pop
cmp
insl
xchg
mov
iret
rcrl
icebp
arpl
movsb
fsubl
adc
flds
das
jno
pop
call
mov
sub
fsubs
imul
push
add
sbb
daa
fs
pop
and
mov
xor
mov
cs
pop
rolb
mov
dec
adc
jmp
std
fmuls
test
cld
shrb
jge
addl
cmc
outsl
jo
xlat
sub
inc
mov
lahf
cltd
push
push
push
movsl
xchg
add
pop
scas
lods
sub
mov
inc
pop
ja
dec
ficompl
mov
adc
inc
bound
cld
mov
sub
jmp
nop
lcall
ja
pop
aam
pop
jnp
sbb
into
inc
dec
pop
mov
aaa
lcall
scas
lea
xor
xchg
mov
push
pop
push
test
adc
das
or
outsl
inc
stos
jae
pushf
adc
iret
jp
cs
test
sbb
fwait
sbb
or
movsl
xor
stc
mov
fmulp
ja
nop
jmp
inc
mov
xchg
and
ret
push
add
add
xor
pop
movsb
scas
fs
and
mov
test
mov
jbe
adc
push
lcall
cwtl
push
ja
pop
lret
enter
mov
mov
and
lret
mov
into
xor
xchg
or
ret
out
and
inc
adc
shlb
push
push
adc
in
fistl
sub
ret
sbb
sub
push
nop
nop
and
cmpsb
ret
xchg
scas
icebp
in
xor
rolb
in
data16
lods
xchg
sti
flds
jne
xchg
mov
int
sub
insb
movsb
sbb
dec
movsb
inc
sub
or
inc
pop
push
push
xor
std
lods
ljmp
push
rorb
popf
inc
xor
add
repnz
jl
or
add
add
cmp
cmp
push
pop
mov
lahf
sub
decb
hlt
add
add
popf
lds
push
icebp
mov
cmp
push
inc
add
sbb
fldcw
inc
std
mov
sahf
js
test
lods
test
jns
in
add
aaa
sbb
test
sbb
sub
or
xchg
add
ss
jmp
push
cmp
into
mulb
int
fucomi
push
inc
ja
and
lcall
add
dec
xor
enter
mov
loop
pop
adc
sbb
xchg
repnz
test
es
cwtl
repz
add
jbe
jge
push
inc
add
pop
loope
jo
mov
icebp
loope
loope
mov
lock
xchg
stos
loope
sbb
mov
mov
ficoms
adc
push
push
mov
xchg
cmp
push
push
shr
lea
clc
dec
pop
xlat
sahf
or
dec
lods
mov
test
sbb
pop
mov
jbe
inc
pop
lret
inc
subl
mov
inc
jbe
movsl
insl
jecxz
adc
mov
pop
jge
les
stc
pop
stos
dec
scas
lret
add
sub
and
and
pop
push
cwtl
or
sbb
aas
rcr
pop
leave
inc
pusha
cmp
imul
mov
shrb
dec
xchg
and
cmc
stos
popa
dec
fildll
ss
adc
and
les
cmp
jecxz
out
xchg
mov
mov
push
rcrl
mov
imul
xor
add
xchg
push
mov
ja
mov
mov
adc
pop
cmp
mov
ret
outsb
sbb
add
xor
dec
aam
inc
or
add
add
test
shl
rorb
iret
hlt
mov
xchg
outsl
xchg
stc
pop
call
adc
out
out
daa
push
dec
jg
das
lds
ljmp
pop
mov
lea
test
leave
sarl
mov
imul
jno
xor
enter
ss
scas
cmp
imul
jno
outsb
push
lret
ljmp
dec
cmp
popa
repz
mov
mov
inc
sub
xchg
popf
fadd
or
sbb
sub
mov
in
xor
jbe
push
xlat
xor
dec
push
adc
jmp
insb
vpmaxsb
add
stc
sbb
mov
dec
cmpsb
sbb
in
in
push
addb
ljmp
mov
mov
jns
pusha
dec
cmc
jp
mov
lods
mov
mov
jns
or
cmc
dec
mov
daa
cmpsl
xor
xchg
add
out
cmp
jae
xor
insl
leave
les
xchg
jp
stos
push
pop
pop
cmp
mov
into
in
push
cmp
dec
in
repz
inc
insb
scas
pop
rcrb
sahf
sbb
rcl
fisubl
jns
inc
and
inc
push
stc
lret
sub
pop
arpl
lcall
adc
mov
pushl
fwait
mov
and
div
fwait
arpl
xchg
mov
movl
ret
xchg
xlat
pop
jbe
fcoml
mov
jmp
movsl
sar
push
jb
negb
dec
xlat
out
sti
mov
inc
les
jp
mov
push
shr
ss
imul
js
in
inc
in
in
outsb
xchg
or
int3
les
aam
rol
les
jmp
pusha
into
pop
dec
pop
out
push
mov
dec
in
cmp
loope
push
ret
mov
repz
mov
push
jl
in
mov
mov
pusha
leave
imul
daa
xchg
out
lcall
roll
roll
aam
and
pop
xorl
loopne
insl
mov
andl
fmull
test
xchg
pop
clc
imul
cmp
insl
inc
push
inc
xchg
mov
pop
cmp
aad
cmc
inc
aas
hlt
dec
sub
out
aas
stos
push
dec
push
shr
movsl
mov
pop
cmp
das
and
lea
mov
add
push
lock
sbb
scas
jl
mov
mov
jo
enter
aad
insl
loop
repz
aas
cmp
stc
push
mov
stos
xchg
stos
lea
add
lea
les
outsb
or
add
jge
inc
cmpsb
push
jo
jb
lcall
sub
pop
stos
mov
scas
ljmp
rcll
add
add
sub
jg
test
out
sub
xchg
add
add
add
icebp
ret
jne
and
stc
nop
inc
ss
jb
cmp
sbb
ret
rcr
aad
mov
std
outsb
outsl
movsl
adc
jnp
jge,pn
lods
les
sbb
ds
dec
dec
jl
nopl
dec
std
imul
xor
mul
aas
or
ljmp
and
xor
sbb
or
outsb
pop
mov
icebp
orl
out
push
pop
jbe
inc
mov
push
aas
pop
push
popa
mov
mov
jmp
repnz
test
xchg
imul
mov
pop
or
xor
cmpb
aaa
pop
js
loope
jp
cmp
cmp
xchg
push
mov
aam
and
in
cld
xchg
rclb
cmpsl
lcall
mov
jne
fldenv
loopne
jmp
push
or
out
or
pop
lods
or
test
test
in
outsl
dec
mov
loop
jg
jp
mov
enter
pop
scas
cmc
jo
add
loop
mov
rcrl
mov
fwait
in
mov
loop
in
xchg
test
jnp
mov
enter
movsb
fcmovb
adc
jns
jnp
popa
stos
mov
insb
cmp
fwait
icebp
add
stos
mov
jo
xor
mul
fmull
mov
sub
ljmp
sbb
sub
xlat
mov
mov
jb
or
mov
pop
add
mov
pop
nop
aad
xchg
mov
cld
xlat
mov
adcl
fstl
xchg
and
xchg
dec
mov
add
adc
ja
les
push
sbb
push
jmp
pop
inc
cli
push
inc
xorb
arpl
push
jbe
and
lock
xor
and
imul
in
imul
fistpll
cmp
sahf
mov
out
jbe
inc
sbb
mov
notb
mov
mov
ror
jmp
cld
sti
pusha
or
xchg
jge
popa
ret
pusha
inc
iret
enter
push
loopne
and
xchg
test
xchg
jo
cltd
sbbl
ljmp
xor
std
test
push
lahf
sub
mov
mov
mov
fnsave
stc
dec
add
mov
ja
adc
cs
div
mov
pop
xchg
das
or
adc
pop
push
inc
sub
dec
or
ss
pop
mov
cmp
dec
xchg
jmp
loop
in
push
roll
loop
pop
ret
sbb
outsb
jbe
lahf
cwtl
insb
add
ret
cltd
dec
or
sub
xor
sub
out
jmp
int3
aad
sbb
arpl
in
cmp
sub
fisubs
arpl
mov
stos
aaa
rorb
movsb
mov
inc
xor
push
subl
or
adc
adc
push
aaa
add
shl
lods
adc
xchg
push
int3
test
and
cli
push
pop
xor
push
ss
push
gs
sahf
push
pop
pushf
loopne
ss
and
and
inc
in
xchg
fs
xorl
lods
inc
sub
dec
mov
or
sbb
cmp
mov
fidivs
mov
mov
lcall
cmp
sub
fnstsw
mov
and
jecxz
in
adc
cmp
clc
add
fstpl
push
movsb
imul
cmpsb
imul
jae
stos
mov
jle
mov
sbb
rcr
mov
inc
subl
jne
fs
jnp
mov
push
fnstenv
mov
add
mull
inc
fcomps
stos
xchg
mov
dec
xchg
push
inc
dec
and
push
ret
pop
and
pop
std
sub
inc
or
sub
pop
cmp
into
cmpsb
xlat
clc
xchg
repnz
addr16
cmpsb
cmpsl
out
rclb
xlat
fwait
out
add
cmc
sub
call
or
jno
sbb
or
sbb
fwait
idivb
ljmp
rcll
lds
push
jne
xchg
inc
pushf
je
push
test
aas
jg
push
insb
mov
push
cli
repnz
xchg
xchg
lret
das
push
test
and
push
fs
das
inc
stos
push
dec
inc
idiv
sti
mov
inc
ret
aas
mov
add
add
dec
mulb
repnz
out
aam
xor
jb
add
add
add
in
ss
adc
pop
leave
les
inc
add
pop
and
pop
add
mov
out
or
out
jns
pop
lahf
sub
adc
sub
aas
mov
inc
push
jmp
jge
cmp
mov
mov
or
mov
arpl
fstps
popf
xor
push
lret
add
loop
pusha
sti
sarl
ds
inc
dec
shrb
add
clc
xor
mov
out
mov
rcl
adc
xor
dec
cwtl
fldl
lcall
out
std
push
insb
mov
or
add
int3
dec
add
testb
and
shll
mov
scas
test
std
pcmpeqd
repnz
xlat
pop
int3
fldenv
out
mov
cli
in
ja
xchg
aaa
add
push
movsl
arpl
mov
loopne
mov
cmp
push
clc
fcomps
and
bound
pop
dec
cmp
in
das
and
cmp
hlt
idivb
push
jo
mov
adc
fdivl
pusha
outsb
xchg
and
mov
aam
sub
fs
mov
push
idivb
cmp
adc
dec
pop
mov
cld
jmp
mov
in
lret
negb
les
xchg
dec
jmp
adc
dec
clc
and
aam
mov
popa
inc
in
pop
mov
popf
inc
sub
test
dec
dec
insl
mov
fstl
sbb
adc
js
inc
inc
call
aam
shlb
mov
test
push
bnd
int3
add
mov
stos
jle
int3
sahf
ret
and
inc
dec
xchg
fidivl
push
ja
pop
in
push
jo
mov
lcall
lods
push
push
das
sub
flds
adc
push
test
fsubrs
add
add
xor
std
popf
inc
push
pop
hlt
push
ret
mov
adc
sahf
shlb
cmpsl
pop
test
imul
push
into
fwait
add
fistl
push
stc
jge
scas
dec
popf
clc
sub
cwtl
mov
lea
inc
dec
adc
cmpsb
imul
mov
pop
cmp
imul
cld
daa
mov
test
xor
daa
imul
dec
daa
orb
lods
aas
ror
movsb
fdivl
xchg
fwait
jb
lods
shlb
daa
test
pop
mov
mov
mov
inc
xchg
cmp
and
hlt
js
clc
js
jecxz
inc
xchg
int
sub
jae
fcmovu
aaa
inc
xchg
in
and
cmp
popf
push
push
cltd
test
sbb
jne
out
loope
or
stc
mov
dec
xor
ret
push
jl
scas
mov
or
mov
sahf
arpl
enter
out
adc
out
sbbb
hlt
adc
jp
ds
cli
test
movsl
sbb
repnz
bound
xchg
clc
andl
fcmovnb
push
stc
lds
push
iret
leave
imul
sub
jecxz
xor
mov
push
cmpsl
ds
xor
jle
in
pusha
cld
jl
mov
add
cltd
lret
jo
fisubl
or
mov
dec
call
fcmovnu
or
adc
mov
movsl
or
jmp
jle
idivb
sbb
cmpsl
add
mov
push
adc
xchg
or
adc
pop
cld
adc
movsl
imul
mov
jle
ss
shll
xchg
and
fbstp
out
rol
jbe
test
or
aas
test
sub
incb
mov
jo
pop
lret
xor
mov
push
cmpsl
push
cmp
and
loop
cmp
sbb
add
xchg
inc
inc
inc
sahf
in
repz
xor
call
fldt
pop
mov
fidivl
cmp
fbld
aad
cltd
jmp
clc
push
mov
and
push
cmp
adc
mov
push
movsl
sbb
pop
sti
sahf
rclb
into
adc
test
das
jae
hlt
fidivrl
mov
xor
inc
mov
repz
add
cmpsl
shll
push
push
sbb
jno
adc
adc
jns
stos
or
nopl
in
jge
js
sarb
jl
mov
pop
push
lret
and
xchg
mov
pop
add
xchg
stc
mov
pushf
lods
or
xchg
mov
mov
mov
sbb
sub
repz
test
adc
xor
inc
jmp
add
add
mov
mov
add
cld
in
ja
add
add
add
sub
sti
cmpsl
mov
test
cmpsl
mov
cwtl
cmp
pop
mov
cmpsb
fwait
jle
or
push
lahf
sub
xor
and
and
add
les
or
insl
push
mov
loop
push
jmp
dec
xchg
je
pop
lea
mov
lret
inc
int
cli
or
repz
ror
popa
mov
scas
enter
loopne
hlt
ret
pop
xor
fidivrl
xchg
mov
out
xor
inc
ret
outsb
cmp
pop
add
mov
sahf
movsb
bswap
xchg
aas
out
leave
iret
in
clc
pop
cmp
cmc
loop
xor
jbe
push
test
rol
cwtl
insb
test
leave
xchg
cmp
das
test
rcll
hlt
mov
jp
mov
cli
pusha
stc
movsl
aad
daa
inc
mov
push
cmp
push
sub
imulb
sahf
mov
sbb
mov
int3
shll
ljmp
jle
mov
mov
sub
mov
hlt
pop
push
push
aaa
sbb
test
ja
fadds
ret
pop
out
loopne
inc
icebp
jns
cmp
icebp
cli
cmp
mov
pushf
rol
sbb
sbb
mov
loope
fcoms
pop
imulb
mov
jg
shlb
cmpsl
and
pop
in
dec
rol
sbb
pop
sub
cmp
fdivrp
and
divb
mov
dec
ret
sbb
mov
and
push
lcall
sub
jmp
hlt
or
lea
dec
inc
sahf
fistps
stc
mov
lret
mov
insl
and
sbb
inc
ret
dec
xchg
scas
das
imul
xor
sub
movsb
daa
sbb
sahf
jp
mov
pop
xchg
imul
push
ret
or
cmp
pop
movsl
mov
or
jmp
shlb
inc
jnp
ja
in
jmp
cmp
int3
cltd
movsb
out
and
push
adc
mov
lcall
ret
or
push
jg
sbb
and
std
pop
or
test
sub
pop
pop
dec
adc
sub
lahf
pop
call
lahf
push
loopne
mov
imul
repnz
sbb
add
je
mov
rol
xor
xchg
std
out
add
ljmp
test
cwtl
push
imul
push
sub
push
cltd
push
cmp
pop
jle
inc
mov
setle
pop
in
sub
subl
leave
pop
push
push
subl
pop
in
sbb
push
test
adc
mov
inc
inc
push
cmp
inc
sub
inc
sbb
scas
stc
mov
pop
and
sbb
stos
push
pop
add
inc
es
cmpsb
aam
push
inc
inc
sbb
stc
xchg
lcall
fdivrs
cmc
icebp
push
and
push
test
mov
push
nop
mov
dec
jle
les
add
jo
lahf
fcompl
xor
imulb
cltd
or
lea
mov
out
add
add
mov
imull
pop
outsl
mov
xchg
push
mov
sbb
mov
pop
cmp
and
lret
fisttps
cwtl
xchg
pop
or
jp
rcl
push
add
mov
ja
mov
sarb
out
adc
xor
icebp
inc
stos
lret
pop
adc
add
jno
icebp
int
xchg
neg
fisubl
add
and
out
push
dec
inc
inc
cld
lahf
mov
ret
xor
dec
adc
mov
lods
add
inc
lret
outsl
out
jo
sarb
pop
jo
cltd
inc
xchg
sti
sbb
push
aam
inc
lcall
test
out
or
incl
bndstx
and
mov
push
pop
xchg
mov
movsl
repz
aam
dec
sub
scas
je
jo
jbe
int
lcall
cld
and
fistps
jg
lds
mov
or
inc
gs
daa
lret
mov
mov
cmp
inc
inc
jns
xrelease
jbe
imul
add
push
pop
pop
mov
in
push
mov
mov
ret
popf
xchg
repz
push
xorl
push
sbb
mov
outsl
inc
sar
mov
out
aas
or
xor
pop
push
sub
xchg
mov
mov
mov
mov
add
add
mov
and
jl
add
add
add
or
stos
adc
mov
roll
fisttpll
sub
jg
lods
cltd
lret
mov
incw
jl
int
lahf
in
orl
push
int
push
fsts
and
xchg
pop
fstp
mov
cmp
cmp
lahf
and
or
jno
jns
in
jne
inc
xlat
mov
out
jnp
jnp
loope
lcall
int3
and
cmp
adc
aas
imul
outsb
push
fimuls
add
popf
popa
jg
sbb
pusha
jp
or
pop
jne
ja
scas
xchg
clc
adc
pop
pop
adc
into
bound
mov
push
jnp
cmpb
int3
adc
test
addr16
or
repnz
xor
cmc
xchg
mov
push
inc
shrl
test
nop
xor
xlat
call
js
rorb
pop
enter
dec
mov
sub
aaa
and
sub
ret
es
in
or
or
nop
jmp
add
push
cmc
sub
mov
pop
dec
mov
out
push
fnsave
sbb
push
sarl
inc
out
lea
aad
shll
movsb
or
shrl
cmc
jo
inc
lock
punpckhbw
adc
insl
pop
push
ret
ljmp
push
mov
stc
pop
push
dec
sti
js
iret
push
cmc
inc
xor
inc
push
imul
mov
or
fcmovnu
pop
inc
mov
fstps
add
rcrb
insl
loope
and
adc
int
sti
fdivl
call
sahf
call
out
lret
ljmp
mov
arpl
jmp
data16
cs
sub
push
fisubs
leave
pop
mov
les
dec
adc
cs
insb
lret
mov
and
rcrl
cltd
sub
xor
jmp
add
add
dec
mov
mov
inc
fdivr
in
mov
pushf
imul
das
andb
test
mov
sub
adc
mov
sub
les
std
push
lods
in
xchg
or
les
dec
data16
je
inc
ja
jae
xor
lods
push
rcrb
adc
jne
xchg
mov
adc
jp
outsb
cmpsl
mov
jge
sahf
cmc
mov
cmp
or
xchg
jbe
fucomip
in
pop
shrl
push
dec
xchg
sbb
xor
mov
jecxz
test
sub
out
xor
sbb
clc
jne
pop
inc
xor
in
outsl
clc
movsl
pop
ja
adc
cmp
int
out
daa
cltd
int3
mov
jbe
or
test
cmc
mov
repz
ret
stc
decb
xchg
ret
jae
out
jmp
inc
loopne
aas
mov
sbb
cmc
jo
mov
mov
xchg
mov
mov
cli
and
inc
jmp
mov
add
push
dec
fimull
je
addb
data16
outsb
movsl
int
jle
push
insl
in
jne
addr16
sbb
push
cwtl
cmpsb
scas
movsb
sub
fcmove
adc
insl
mov
cli
hlt
mov
outsb
fdiv
fsubl
daa
cmpsb
cmp
inc
mov
iret
cld
cltd
mov
cmp
cmp
dec
lahf
ds
fcomp
cltd
xchg
pop
pushf
or
in
adc
nop
out
push
outsb
push
cmpsb
xorb
cmp
add
xchg
fistps
fmull
das
and
adc
movl
clc
cmp
adc
mov
jecxz
jge
xor
aam
icebp
sub
pshufw
jbe
or
cwtl
lods
add
enter
cmc
in
xor
or
push
jecxz
pushf
mov
std
test
hlt
adc
stos
fstp
int
pop
adc
inc
pop
out
add
sbb
cmp
xchg
fadds
leave
test
xchg
cld
sub
xchg
add
jge
ss
int
sbb
das
stc
sub
adc
and
cli
mov
xor
xchg
call
lds
jle
push
loope
push
dec
inc
rorb
mov
sahf
jo
mov
mov
test
stc
pop
fsubr
in
jns
incb
push
inc
jp
bound
std
in
xchg
sbb
sbb
mov
nop
sar
lcall
gs
mov
pop
out
repz
icebp
pushf
icebp
call
push
cld
int
mov
mov
data16
mov
cwtl
mov
and
fldl
inc
sti
aas
jb
add
pop
mov
repz
add
hlt
add
add
mov
push
out
jbe
rcrb
insl
loope
xchg
gs
mov
adcl
jmp
dec
sbb
dec
mov
movsb
jmp
xchg
div
imul
inc
cld
roll
xor
cld
daa
mov
or
dec
fiadds
and
mov
cmp
outsb
test
mov
mov
pop
loope
fnstenv
mov
and
nop
pop
push
inc
push
shlb
push
dec
jle
in
jne
jae
ljmp
adc
daa
out
sbb
mov
add
mov
in
fnstenv
lahf
mov
dec
idivb
mov
mov
add
hlt
insl
mov
mov
mov
and
xor
movsb
loope
adc
mov
sub
call
stos
xor
fcmovnu
push
mov
int
jge
mov
cmpsl
iret
or
dec
pusha
xchg
jmp
add
fdivl
sahf
jl
es
lahf
test
cltd
push
aaa
mov
outsl
scas
jge
jae
aam
aas
cmp
pop
push
or
inc
pop
push
cmpsb
mov
add
rorl
inc
scas
mov
jl
fisttpl
dec
cmp
popf
jnp
arpl
and
mov
imul
inc
cwtl
pop
push
aaa
fwait
jns
cmp
jb
outsb
pop
loope
pop
xchg
fimull
stos
mov
inc
add
scas
loop
gs
imul
jl
push
lock
cmpb
pop
sbb
push
call
cmc
mov
pushf
xchg
aam
jae
aaa
daa
sub
jge
lret
inc
sub
sarb
iret
mov
adc
sahf
cmpsl
xor
sub
aad
imul
or
cmc
pushf
dec
movsl
inc
cmp
xor
xchg
out
subb
arpl
stos
repz
fists
xchg
jp
sbb
cli
stos
mov
stos
jnp
mov
mov
in
mov
sub
repz
sbb
push
mov
mov
pop
mov
or
out
fldt
outsb
test
mov
mov
xor
inc
mov
fwait
push
push
dec
aaa
iret
aas
inc
inc
mov
cmp
sbb
outsl
iret
clc
je
sub
sbb
jae
lock
lods
cmp
jge
mov
cmp
push
fprem
in
and
ss
cmp
push
and
fisubrs
xchg
pop
cmp
jp
fisttps
inc
mov
add
jbe
lea
fisubrl
dec
ds
jns
xchg
jbe
data16
insl
stos
cltd
enter
rcr
scas
test
sub
fistps
rorl
and
dec
xor
ja
lods
sub
es
jno
xor
sub
push
imul
ss
push
xchg
imul
pop
sahf
adc
push
sub
push
repz
pop
jecxz
flds
jg
xchg
adc
and
leave
jecxz
fs
mov
lahf
jo
out
mov
adc
push
push
movsl
dec
xchg
jp
movsl
jmp
cmp
mov
out
insb
push
sub
mov
pop
xor
xchg
lcall
cmc
mov
sub
jle
inc
xor
je
dec
xor
inc
sbb
stos
xchg
jo
xor
lcall
aas
xchg
jb
sub
jp
mov
pusha
xchg
mov
in
cltd
adc
movsl
push
jno
movsl
rorb
ljmp
or
xor
sbb
adc
push
lods
cwtl
clc
clc
jb
mov
inc
jae
loope
in
mov
cli
ds
lahf
gs
cmc
int3
push
into
mov
sbb
mov
out
mov
mov
aam
mov
cmpsb
xor
adc
out
cmpsl
outsb
loope
pop
xor
leave
sub
movsb
adc
xchg
cmp
jae
aam
add
or
daa
xchg
enter
rcrl
add
bound
pop
pop
inc
insb
clc
sarl
shll
data16
jbe
lahf
sbb
repnz
scas
inc
outsb
mov
sub
movsl
cmpsb
rorl
daa
into
imul
aaa
lret
jecxz
and
sbb
mov
cmp
xor
test
movl
je
fiadds
xchg
xchg
into
mov
pop
outsb
pop
sbb
add
or
sub
out
dec
jmp
nop
push
inc
xchg
add
add
add
mov
or
and
leave
xchg
add
add
add
pop
jge
add
xlat
jno
xlat
insl
rolb
cli
lcall
mov
pop
ljmp
xor
inc
jbe
jae
int
jmp
mov
out
aaa
ss
loope
mov
ljmp
sbb
jg
push
sahf
cmp
mov
shlb
mov
dec
gs
mov
inc
adc
pop
mov
sub
mov
loope
int3
add
push
icebp
and
mov
add
aam
scas
lock
sbb
loope
cld
sbb
pop
mov
shrl
jg
lock
adc
lods
sub
cmp
jbe
cmpb
push
in
mov
and
nop
fdivrs
and
push
loope
sbb
xor
ss
mulb
mov
cld
jg
adc
mov
sahf
stos
std
dec
fsubs
mov
push
mov
add
jbe
data16
test
testb
sub
inc
add
fnsave
push
repz
mov
xchg
ret
pop
cmp
orb
int3
adc
push
mov
dec
pop
das
or
idivb
in
shrl
and
sub
xor
gs
push
push
dec
pushf
arpl
xchg
sbb
roll
sub
jp
int
or
lock
inc
inc
mov
mov
ficomps
stos
jno
push
int
lahf
cmp
test
fists
push
mov
push
or
sti
testl
adc
fsts
and
mov
jg
test
aad
cwtl
insb
clc
xchg
jnp
lods
cmc
sub
loopne
sti
cmpsb
out
pop
icebp
pop
xchg
inc
inc
popa
sub
call
cmp
jl
mov
ficoms
xchg
jmp
adcb
dec
sahf
test
loop
cmpsb
adc
inc
or
sbb
ds
out
lods
adc
lret
and
cmp
insl
ljmp
imul
adc
push
shlb
aam
hlt
pop
sub
cmc
mov
test
push
cmp
cld
int
pop
mov
sub
cmp
test
imul
push
sub
mov
aas
jno
ret
xchg
mov
nop
cmp
shlb
aam
push
addr16
pop
push
in
mov
sbb
and
mov
js
or
test
les
pop
rcll
ds
adc
cmp
test
dec
sub
test
inc
fadds
cmpsl
lods
fstp
cmp
cmp
inc
mov
shr
imul
jl
xchg
sbb
cmp
xor
std
gs
scas
xchg
test
lcall
cltd
xchg
sbb
xchg
test
movsl
and
in
mov
xchg
push
xchg
fisubs
int
lcall
push
add
mov
adc
xor
mov
dec
inc
and
ret
je
cmovno
test
dec
sbb
mov
push
lea
jo
push
int3
mov
ret
cmpsb
push
xchg
mov
movl
leave
sub
data16
js
call
pushf
xchg
fs
out
outsb
std
stos
mov
or
out
adc
and
xor
sub
xor
inc
and
in
lret
jno
adc
stos
lock
add
testl
aaa
xchg
inc
sub
outsb
cmp
jg
mov
in
jae
add
adc
fsubrs
jmp
stos
repz
mov
stos
aaa
inc
adc
std
mov
adc
movsb
popa
mov
repnz
insl
scas
add
fmull
xchg
push
push
sub
pusha
sbb
and
jmp
sub
cmp
leave
pushf
mov
or
add
movl
mov
adc
dec
mov
cmp
std
mov
sbb
rcll
jns
sbb
addr16
clc
dec
and
cmp
rolb
pop
sbb
and
lahf
popf
cmp
pop
enter
pop
clc
mov
mov
hlt
imul
sbb
and
loop
movsl
xchg
lahf
int3
cld
sub
int
enter
jl
scas
fst
inc
jo
dec
inc
fimull
lret
push
and
push
dec
mov
cmc
xchg
jnp
cbtw
push
xor
cmp
mov
lahf
push
mov
xchg
adc
xor
sbb
xchg
loop
mov
fcmove
stos
insl
hlt
repnz
inc
inc
repz
adc
pop
fsubrs
xchg
cmp
roll
daa
push
lret
and
add
add
mov
cmp
outsb
mov
add
add
lahf
sub
les
aam
xchg
dec
push
pusha
jle
xlat
rcrl
jmp
lods
aam
rcll
sbb
shll
rcrl
push
and
pop
int3
xlat
cmp
xor
aaa
ljmp
mov
fsubs
fsts
movsb
sub
je
lds
out
sbb
jmp
and
lds
cmp
mov
jle
sarl
push
mov
mov
data16
setbe
loop
ror
cwtl
in
xchg
add
sbb
cmp
sub
cmp
jl
pop
xor
rclb
mov
nop
mov
xchg
out
mov
mov
push
popf
dec
in
jne
fmul
inc
andl
call
roll
data16
cmp
sti
fbstp
push
inc
push
cmp
push
and
cmpsb
mov
out
mov
cli
pop
add
add
daa
xchg
jnp
mov
mov
mov
sub
cwtl
and
inc
xchg
ret
out
mov
pop
popf
inc
push
xchg
stos
mov
mov
cltd
push
dec
adc
ds
adc
lahf
and
mov
movsl
pop
rorl
cmp
mov
test
adc
sbb
jb
arpl
jecxz
ret
and
lcall
cmc
mov
ds
xchg
insb
jecxz
insb
inc
pop
cwtl
or
lea
inc
dec
bound
pop
incb
scas
xchg
fldl2e
imul
sbb
mov
lock
cmpsl
fldenv
sub
add
push
bound
adc
push
push
mov
sar
scas
dec
sbb
fwait
pop
sub
or
loop
notl
arpl
adcl
ss
repz
jle
inc
adc
in
outsl
xchg
cmpb
mov
fists
jl
fs
mov
clc
in
sbb
or
and
pop
scas
or
inc
push
xor
cltd
pop
xchg
or
dec
inc
sbb
fdivl
sub
pop
ss
pop
pop
xor
sarb
das
mov
dec
xor
jl
jge
mov
jns
pusha
movb
push
imul
or
rorl
xchg
mov
jno
popf
jmp
cmpsb
repz
mov
push
je
adc
call
adc
dec
push
das
xlat
bound
clc
jmp
ljmp
aas
ret
xor
enter
push
lret
jmp
stos
stos
mov
mov
sub
ljmp
shll
lods
jb
fsubl
pusha
bound
rorl
add
xlat
in
incb
push
mov
popa
xchg
sbb
add
dec
or
xchg
lahf
out
and
mov
sarl
push
lods
pop
dec
shlb
or
arpl
filds
mov
scas
jnp
out
adc
jae
lret
mov
sahf
push
pushf
pop
jg
mov
jb
pushf
add
cmpsb
mov
aas
inc
out
and
movsb
popa
scas
pop
hlt
mov
clc
dec
in
sub
inc
cmpsb
das
push
scas
inc
xchg
inc
sbb
mov
repnz
jl
and
sbb
push
inc
and
inc
adcb
out
adc
cli
xchg
icebp
xchg
sub
int
push
xchg
popa
cmp
js
xchg
add
xor
add
dec
icebp
aad
xchg
and
enter
or
lcall
stc
mov
fcomi
in
fstpt
test
cmp
add
int
add
ret
xchg
ja
sub
loope
push
lds
adc
inc
or
and
adc
popf
leave
out
out
pop
pusha
pop
ja
xchg
outsb
pop
pop
pushf
lea
sahf
push
jge
ficoms
outsl
adc
orl
push
xchg
js
imul
nop
data16
popf
and
xor
mov
or
jb
mov
jae
inc
mov
sub
adc
shrb
out
mov
int
mov
xchg
pop
dec
fildll
inc
push
inc
movsl
sbb
dec
push
xor
sub
ja
sub
push
repnz
jg
outsl
fs
gs
or
push
in
or
nop
adc
sbb
add
pop
and
js
mov
sub
or
dec
lods
test
iret
or
add
sbb
pop
hlt
mov
cmp
cwtl
inc
pop
mov
xchg
enter
ljmp
shlb
xchg
cmp
push
jb
bound
xor
pop
push
iret
mov
add
add
sti
and
es
sti
std
sbb
adc
test
hlt
add
add
push
mov
scas
mov
or
push
nop
mov
lret
push
adc
pushf
inc
lahf
aas
jnp
mov
std
push
stc
cmp
call
scas
xor
movsl
rorb
sub
ss
fldenv
mov
ljmp
cmp
xor
push
and
fldl
and
mov
sti
sti
mov
mov
push
sbb
mov
jae
ret
test
testb
shr
scas
xchg
sbb
jge
testl
clc
arpl
sbb
jo
dec
ret
mov
mov
cld
add
jg
dec
sub
add
insb
or
loop
jbe
imul
push
adc
insb
and
pop
stc
jge
mov
out
fcmove
in
jl
test
lcall
cld
sbb
mov
mov
cmp
hlt
dec
pop
adc
adc
lret
shll
push
cmp
inc
cs
repnz
gs
sub
rcrb
in
or
sbb
mov
push
and
call
sub
iret
outsl
mov
lahf
xor
xor
mov
push
jno
ret
sbb
mov
jp
jge
hlt
repz
out
push
jl
lret
je,pt
sbb
out
lahf
jno
outsl
cltd
loopne
xchg
fwait
call
jnp
cmc
aas
add
add
or
lea
or
pop
or
rolb
pop
sbb
pop
in
stos
dec
mov
dec
nop
jp
popf
inc
inc
mov
rclb
decb
sub
movsl
inc
sub
cmpsl
aaa
adcb
push
and
cmc
jge
xchg
enter
testl
cli
sbb
add
mov
mov
xchg
imul
mov
mov
inc
popa
popf
mov
insl
jl
push
fistpll
popf
fmul
push
jno
jecxz
mov
pop
adc
sbb
push
mov
imul
jge
dec
mov
xor
cmpsl
adc
jg,pn
psadbw
repnz
mov
push
cmp
repnz
dec
ret
inc
sub
shlb
cmp
inc
xor
aam
add
adc
inc
xor
cmpl
cmc
stos
and
test
push
dec
adc
mov
pop
outsb
cmp
movsl
cmp
xor
inc
or
mov
mov
cmp
cmp
andl
aad
popf
outsl
fimull
leave
and
sbb
rcl
ja
dec
add
repz
or
mov
sar
sbb
jecxz
popf
jbe
int
lea
mov
mov
pushf
sbb
lods
ret
xor
sbb
or
adc
jne
gs
cmpsl
lcall
imul
inc
cld
push
data16
ds
xor
pop
sti
mov
add
cmp
cmp
cmpsb
orb
movd
push
int
cmp
pop
das
mov
cmp
lret
sbb
stc
stos
aaa
or
adc
sbb
data16
dec
arpl
es
add
xor
inc
sub
push
jp
and
repz
jle
add
cmp
shr
xor
mov
sub
cmpsb
test
sbb
mov
lret
sarl
aaa
aam
sbb
pop
xor
fidivl
lahf
pushf
popl
dec
cmpsl
fs
pop
jae
iret
jge
leave
mov
adc
mov
xchg
shl
pop
sub
loope
sub
inc
cmc
inc
lods
ljmp
shrl
mov
push
movsl
sahf
leave
lods
fiaddl
adc
andb
jp
insb
mov
or
push
in
add
dec
sbb
mov
out
mov
mov
mov
lods
stc
cmovnp
hlt
pop
insb
dec
push
es
inc
mull
and
and
ljmp
sbbb
fldl
clc
loopne
fistpll
xor
cmp
addl
fisubrl
mov
cmp
cmp
jns
add
mov
je
sbb
push
pushf
mov
or
outsl
pop
cmc
test
in
and
inc
into
jp
mov
mov
sbb
aaa
jmp
xchg
lock
cld
hlt
clc
rolb
inc
mov
cld
mov
mov
mul
aaa
sbb
aad
sbb
add
scas
aas
push
loopne
cmp
push
mov
add
sbb
jg
lcall
mov
hlt
add
add
and
les
out
out
xchg
iret
xchg
or
jno
cmp
add
fmull
sti
aam
mov
shr
mov
lods
out
lret
or
into
jecxz
jae
cmc
push
mov
ss
and
imul
and
or
stos
or
jge
je
adcl
stc
xor
or
push
xchg
mov
ds
push
jae
mov
or
sub
adc
xor
adc
cwtl
bound
mov
ljmp
fdivrs
clc
cs
bound
add
push
adc
cmpb
es
arpl
nop
adc
jge
and
icebp
cmp
push
pop
out
jle
and
jns
xchg
adc
test
cmc
lcall
dec
lods
xchg
mov
addr16
jg
pop
mov
dec
cmc
rol
aas
inc
cmpsl
lret
ljmp
iret
sub
rcll
jl
cmp
loope
mov
insb
aad
jmp
leave
sahf
add
xchg
adc
out
das
xchg
inc
lcall
mov
and
int3
pop
in
cltd
inc
stos
xchg
std
pop
aad
sub
or
or
hlt
js
adc
jle
cwtl
inc
pop
xchg
ss
pushf
dec
outsb
push
shr
popf
out
or
sahf
in
xchg
jae
push
jns
mov
enter
adc
xchg
or
adcb
mov
frstor
add
xor
add
ret
and
scas
outsl
push
jb
lods
xor
icebp
inc
mov
popf
or
mov
adc
orl
and
aaa
sarb
adc
out
adc
jbe
mov
inc
shr
mov
jl
dec
call
mov
inc
and
sub
and
jo
sar
lock
push
stos
call
xor
sti
je
cmp
lret
jmp
pop
xor
add
mov
and
repnz
arpl
mov
pop
cmp
pushf
popf
dec
jl
aas
mov
or
mov
add
mov
cwtl
js
nop
cmp
aam
and
cmp
ljmp
sarb
test
loope
stos
and
movsl
lret
hlt
sub
and
mov
mov
dec
cmp
mov
cmc
push
shrl
inc
les
cs
mov
cs
mov
pop
add
adc
mov
jb
mov
or
push
iret
and
pop
cmpsl
out
das
idiv
xchg
cmp
sbb
out
rolb
mov
adc
mov
scas
hlt
ret
mov
sub
sub
lret
xchg
fistpl
aaa
scas
jg
movsb
mov
pop
ficoms
or
adc
in
adc
subl
inc
dec
cs
lret
dec
add
jge
lods
sahf
scas
and
hlt
fsubrp
fcmovb
fcoms
jle
outsl
scas
add
pop
mov
fistps
sahf
mov
mov
pop
shlb
in
adc
xchg
add
sbb
lret
iret
outsl
bound
lret
popa
insb
jne
mov
sub
inc
mov
sub
daa
sub
add
int3
push
cmpsl
adc
testl
dec
lods
loopne
xchg
fcmovu
fwait
xor
inc
mov
add
ljmp
mov
lahf
sub
les
repz
or
lds
pushf
adc
sub
mov
ja
out
mov
mov
lods
mov
pop
lock
pop
cmp
sub
mov
test
or
push
daa
in
push
lea
loopne
test
es
xor
sub
test
mov
mov
push
in
sub
mov
sar
leave
cmp
shll
xchg
loope
rolb
sbb
pop
or
cmc
mov
jo
mov
push
repnz
xchg
inc
mov
fdivrs
inc
mov
cli
insb
shl
rcl
or
push
and
adc
addr16
dec
lea
int
in
cmc
out
mov
ret
cld
sub
jl
insb
cmp
adc
xchg
lds
push
sti
sbb
stos
xchg
jmp
out
jbe
inc
stos
repz
bound
cmp
popa
push
adc
ret
das
xor
mov
xlat
xchg
sbb
mov
sub
xor
loope
jae
ficoms
test
add
add
cmp
pop
sub
stos
jns
dec
sub
and
cltd
lcall
ja
out
mov
push
push
test
cmpsl
xchg
vmulsd
dec
jle
sub
pusha
cld
imul
adc
push
add
and
out
out
xor
add
jecxz
mov
or
call
pop
xor
push
sub
add
jecxz
dec
or
mov
push
xchg
cmpsb
sti
dec
sbb
filds
mov
fwait
cltd
in
aas
repz
and
das
jmp
pusha
jp
inc
jne
mov
push
loopne
mov
pop
mov
dec
out
mov
cmc
inc
fnstcw
jb
insb
cmp
scas
or
ljmp
in
sub
daa
xchg
loopne
je
je
lea
lds
mov
mov
add
or
les
mov
xorl
and
cmp
pop
mov
sbb
sbb
jg
mov
pop
sbb
cmp
cltd
pop
movsb
xchg
pushf
mov
jno
jle
fcmovb
stos
sub
fdivr
mov
dec
xor
clc
pusha
das
mov
adc
dec
pop
fstpt
and
cmpsl
gs
cmp
mov
pop
push
imul
leave
jle
stos
dec
mov
call
pusha
in
mov
cli
jle
repnz
sub
sbb
sti
mov
imul
sub
jecxz
sub
enter
daa
in
sbb
pusha
xchg
insb
rorl
repz
icebp
f2xm1
push
lahf
adc
and
ja
or
addl
cs
inc
jle
imul
int3
inc
and
fdivl
jmp
out
lds
push
test
jmp
push
push
daa
div
push
push
test
lods
icebp
adc
or
sti
movsl
sbb
icebp
cmp
lock
xor
hlt
lods
sarl
lock
cmp
repz
sbb
sub
or
es
out
push
cltd
clc
cmpsb
ds
out
ret
out
sub
cltd
pop
inc
out
mov
inc
add
and
loop
pop
repz
ret
or
idivl
ret
mov
or
cld
cli
lea
sub
loopne
dec
or
in
xor
sub
sbb
mov
pop
and
or
and
dec
pop
and
add
mov
nop
js
or
movsl
sub
and
std
cli
ucomiss
addr16
mov
and
mov
pop
cmp
outsb
adc
sbb
dec
rcl
mov
jbe
pop
clc
lret
sbb
subl
dec
loopne
mov
mov
inc
dec
inc
jecxz
mov
into
mov
mov
mov
insb
mov
pop
fistl
ljmp
mov
icebp
jne
xchg
and
cmpsl
arpl
pop
js
aad
push
cmp
rorl
sbb
xor
mov
movsb
sub
mov
push
mov
leave
push
adc
mov
pop
pusha
clc
aaa
enter
adc
je
lret
cld
in
ja
sbb
clc
dec
call
adc
idiv
movsl
add
sub
shll
pop
daa
clc
bound
mov
pop
add
jge
sbb
push
ja
cmp
test
pop
or
dec
aam
testb
addl
js
loope
dec
loop
lahf
dec
jbe
in
addr16
xchg
popf
scas
pop
dec
pop
pusha
pop
and
cmpl
push
sbbb
xor
adc
jge
jmp
xlat
aad
imul
mov
dec
inc
adc
xchg
add
and
xor
mov
add
inc
out
sub
cmp
ret
xor
mov
mov
sbb
stc
out
js
jnp
cmc
push
push
test
pop
mov
out
fcompl
pop
mull
adc
ds
cmp
mov
fldcw
jae
push
xchg
and
push
bswap
inc
mov
inc
or
inc
jl
push
sbb
lret
and
xchg
out
stc
sub
seta
mov
push
ds
adc
movsl
pop
imulb
scas
stc
sbb
lret
adc
cs
imul
inc
jbe
adc
xorb
pop
iret
mov
das
or
push
adc
les
sbb
aad
sub
sub
movsb
add
jp
nop
int
sub
mov
outsb
in
addr16
sti
xlat
add
xor
mov
add
lret
dec
jge
xchg
outsl
jge
lcall
add
hlt
add
add
sarl
sahf
test
iret
sbb
push
sub
xchg
scas
mov
jb
push
test
fs
cmp
mov
xor
int
inc
jo
xlat
loopne
nop
clc
stos
mov
call
std
jmp
jno
mov
stos
push
inc
movsb
jo
pop
pop
xlat
adc
scas
imul
cmc
and
pop
inc
call
lock
mov
sarl
pop
call
aaa
xor
lods
jge
punpckldq
fwait
test
jns
lahf
adcb
sub
add
add
rcrl
daa
imul
mov
andb
push
xor
pop
mov
jbe
or
ret
jecxz
or
adc
test
out
dec
jecxz
add
and
dec
cmp
push
dec
xchg
repz
or
add
pop
and
xor
ss
push
pop
mov
js
pmulhuw
inc
dec
cli
call
mov
jo
lahf
aaa
push
loope
push
nop
andl
stos
sub
cmc
sbb
push
lock
es
cmp
cmpxchg
adc
xor
and
pop
fwait
movsb
pop
aad
cwtl
dec
cmp
jl
and
int3
pop
out
lock
ss
mov
lret
sub
cmp
je
in
dec
add
stos
add
mov
rcrb
and
mov
movsl
and
push
cmpsb
dec
enter
loop
data16
add
cmp
cmp
or
or
xor
jl
xchg
aaa
sbb
loope
inc
push
imul
mov
ljmp
push
or
and
shlb
sbb
dec
mov
inc
push
push
push
xor
fnstenv
push
xchg
add
pop
and
inc
ss
icebp
cmp
cld
and
lret
stc
jae
sbb
scas
sub
imul
out
inc
sbb
inc
mov
scas
cli
cmp
cmc
int
or
ret
pop
addr16
notb
adc
iret
fs
repnz
xchg
mov
mov
pop
aam
mov
inc
fdiv
fstps
stc
fists
dec
pop
hlt
xor
push
setns
push
rolb
rorl
cmp
sbb
pmuludq
clc
cmc
xor
push
mov
mov
push
push
notb
jle
mov
inc
xor
out
and
inc
stos
xchg
fisubrs
push
inc
or
xchg
sub
loop
xlat
inc
fildll
mov
xchg
lods
cmc
stos
inc
ret
sub
sahf
adc
imul
jg
dec
push
cmp
ret
ja
imul
cwtl
mov
les
or
or
push
in
jbe
flds
das
cmp
xchg
out
fstps
xor
pop
xlat
clc
push
push
xor
popf
xchg
mov
inc
std
pop
notl
mov
mov
iret
sbb
adc
outsl
xor
add
jo
mov
pop
into
mov
rolb
loopne
daa
mov
add
inc
fbld
push
bound
imul
hlt
out
inc
out
push
push
mov
fistl
sarl
jo
test
ljmp
add
mov
mov
xchg
mov
fists
ja
mov
adc
adc
stos
testb
cmpsl
popa
sahf
cmc
test
enter
fwait
jns
jmp
or
pop
ljmp
dec
pop
iret
xor
xlat
or
das
push
mov
jle
cld
xchg
jmp
adc
aas
bound
sub
out
out
ljmp
out
imul
push
mov
cmpsb
add
lcall
rorl
in
mov
mov
aad
push
ja
sti
mov
mov
insl
stos
outsl
ficomps
cmp
jo
jmp
xor
ss
orb
add
cli
ficoms
dec
fdivrs
sbb
pop
jecxz
test
rcr
lea
scas
inc
mov
in
out
adc
jle
mov
cmp
sbb
aaa
push
in
cmc
push
lcall
repz
dec
push
cltd
push
mov
xchg
cmp
add
mov
xlat
ljmp
mov
cmp
jo
inc
in
daa
ss
cli
in
shrb
movsl
lods
movsl
stos
dec
push
ss
iret
sbb
ss
hlt
push
ret
add
add
xlat
hlt
push
ljmp
sub
cmp
andl
iret
jne
xchg
leave
or
in
xchg
cmp
jno
in
sti
and
movsl
xor
jae
mov
jmp
mov
mov
and
jno
ljmp
std
fwait
aaa
mov
xor
cli
pop
loopne
mov
out
stos
add
stos
adcb
jns
push
or
dec
mov
scas
mov
push
test
jecxz
inc
cmp
cmpsb
sbb
adc
push
sbb
jp
in
dec
mov
repnz
test
cltd
adc
aam
pop
and
lods
jno
rcrb
pop
or
sub
repz
popf
sub
inc
int3
jg
sub
mov
push
add
js
mov
test
push
cmc
jge
xor
jecxz
mov
test
rcll
test
lret
push
pop
int3
dec
cli
iret
adc
sbb
or
add
hlt
sub
outsb
mov
mov
dec
push
mov
pop
rcrl
repnz
loop
pop
out
jmp
addr16
cld
lods
jb
mov
mov
fnstenv
pop
in
add
andb
scas
addr16
jg
lods
aaa
xor
mov
jb
push
xchg
jns
daa
sbbb
fwait
sbb
xchg
fnstsw
adc
in
ljmp
imul
insl
or
xchg
mov
jle
in
sub
xchg
call
push
pop
inc
iret
xor
inc
xchg
and
xor
shl
pop
aam
test
push
sub
imul
mov
lods
insl
cmp
push
int
cmpsb
or
icebp
scas
sub
enter
in
push
mov
mov
add
mov
adc
cmp
out
mov
mov
xor
pusha
adc
nop
mov
mov
pusha
inc
sbb
push
xchg
or
xchg
push
add
outsl
das
xchg
mov
mov
push
test
cmpsl
pop
lret
inc
std
mov
scas
sub
mov
push
xchg
mov
cli
cmpsb
mov
sti
mov
in
jecxz
shrl
dec
mov
je
and
call
jb
inc
jnp
pop
in
ficoml
ret
nop
add
mov
push
xchg
fnstcw
shl
mov
cmp
cmp
mov
mov
sub
sub
mov
pop
cmp
or
jno
mov
mov
mov
xchg
ja
fisttps
iret
fmul
ljmp
mov
sbb
push
fnstenv
mov
inc
push
mov
sub
jp
xchg
jb
lods
out
and
decb
sbb
or
pop
das
pop
mov
pop
jecxz
sub
xlat
cld
adc
xor
adc
push
dec
loop
and
movl
xchg
sahf
or
cs
push
xchg
das
notl
jns
lock
push
mov
lret
push
ret
repz
aad
pop
idivl
cmp
xchg
dec
mov
ljmp
jb
pop
pop
cmp
cmpsb
ds
xorl
pop
mov
lods
mov
inc
xor
mov
sbb
nop
bnd
mov
add
jnp
mov
shl
push
mov
test
mov
adc
call
stos
jnp
mov
mov
xchg
rolb
shll
add
cmp
repnz
jmp
insb
fcompl
out
mov
stos
mov
push
movsl
push
mov
dec
lcall
jl
ja
lret
jo
or
rcr
in
imul
push
dec
xchg
pop
inc
xlat
int
out
push
pop
pop
ret
mov
outsl
rorb
xchg
inc
and
cld
add
push
push
mov
aam
cmp
adc
fstpl
test
pop
or
outsb
pop
call
push
jmp
and
add
adc
sbb
daa
cmpsl
mov
js
push
add
pop
sub
shl
or
lods
pop
sbb
fwait
jge
imul
lods
sbb
xor
fistps
add
cli
leave
loop
sbb
mov
mov
test
adc
fildl
and
out
mov
icebp
sub
xchg
scas
sbb
loop
fldl
lock
or
test
ja
mov
adc
andb
mov
jns
mov
xor
add
dec
cmp
xor
xor
ljmp
pop
lea
add
add
cvtdq2ps
dec
sar
adc
movsl
addr16
add
hlt
add
add
outsb
mov
mov
lret
dec
fidivl
lcall
jae
js
pop
pop
jp
inc
xchg
pop
pop
mov
lea
xchg
loop
leave
and
mov
lods
test
xchg
popa
loope
xchg
aad
add
pop
loop
jle
sar
add
adc
mov
imul
ret
cltd
mov
and
cltd
xor
insl
mov
jecxz
pushf
cs
pop
pop
pop
outsl
pop
hlt
mov
out
jg
dec
outsl
jecxz
icebp
jmp
sbb
mov
or
pop
mov
push
inc
test
mov
add
iret
fbld
mull
xor
lock
or
scas
repz
es
xor
or
mov
les
adc
cwtl
dec
adc
mov
add
outsb
lea
inc
or
lcall
stos
and
push
stos
cmp
aaa
mov
ret
ja
dec
jnp
or
out
fbstp
sbb
test
mov
xor
in
cmp
daa
mov
pop
insl
xchg
mov
jbe
dec
sbb
adc
je
int3
into
cli
popa
sbb
incb
sbb
cld
sub
lds
xlat
sub
iret
arpl
pop
insl
cs
fildll
jg
pop
adc
add
mov
add
rorb
xchg
negb
jno
testb
or
test
arpl
sub
lahf
das
mov
xor
scas
loop
faddl
push
jnp
ljmp
sub
sub
sbb
add
add
mov
sbb
lcall
aam
outsb
dec
adc
pop
mov
aam
es
popf
xorl
mov
shl
test
addr16
fiadds
push
ret
sbb
es
fbld
and
imul
and
dec
nop
xor
jbe
sub
into
jae
fdivr
pop
and
push
std
rorb
lcall
push
mov
jo
push
es
mov
adc
js
cmc
into
xchg
adc
lock
cmp
xchg
and
sbb
popf
bound
out
add
andl
hlt
cs
jl
pop
jo
aaa
or
stos
icebp
inc
jno
out
xchg
mov
sbb
cmp
repz
dec
pop
fdivr
dec
mov
je
pop
or
inc
or
fisttpll
cmp
scas
ror
imul
mov
dec
xchg
ret
jnp
nop
push
sbbl
and
ret
mov
fisubrs
clc
push
mov
popf
imul
cmp
push
movsb
sti
mov
leave
cmc
stos
sub
xor
or
fbstp
inc
test
cltd
xor
inc
sub
sbbl
out
pop
pop
adc
js
out
sbb
dec
cmp
outsl
lret
jo
mov
fidivrl
nop
movsl
xchg
call
pop
sti
daa
mov
pop
lret
test
test
push
sbb
rolb
test
dec
fcmovbe
add
loopne
in
popa
mov
fwait
xchg
leave
ljmp
in
out
pop
iret
dec
test
or
inc
roll
les
mov
push
or
shl
pop
aad
std
adc
insl
pop
add
cmpsl
pop
mov
fmuls
or
std
jg
inc
jmp
movsb
rclb
jg
xchg
movsl
xchg
jecxz
cld
aam
dec
fimull
inc
iret
xchg
adc
leave
push
test
movsb
pushf
mov
inc
mov
ret
je
cmp
inc
mov
sti
pushf
inc
jbe
mov
xchg
xlat
lea
add
cmp
xor
xor
call
push
push
push
repz
pop
test
adc
adc
test
or
lret
pop
std
jns
jp
and
mov
imul
test
jle
sbb
inc
out
in
and
pop
sub
leave
push
fildll
mov
fcoml
cmp
rorb
gs
inc
dec
dec
cltd
jl
icebp
stos
xor
mov
popf
in
sbb
loop
xlat
lea
insl
push
call
xor
push
inc
fwait
rcrl
jns
cwtl
pop
jnp
popf
push
stc
cld
jge
ficomps
gs
mov
clc
mov
dec
movsl
jno
xor
jmp
inc
cmpsb
test
pop
pop
daa
sarl
aad
lcall
mov
mov
sbb
push
cmpl
fcompl
jne
inc
add
add
dec
mov
lret
mov
push
rcll
cld
imul
icebp
xor
add
dec
in
xor
clc
or
cmp
pop
fidivs
cmc
inc
dec
mov
shl
and
stos
call
mov
cmpsb
fwait
push
fwait
stos
push
xlat
xchg
ret
mov
push
pop
xor
aaa
pop
inc
sbb
rcll
jg
cld
imul
repz
and
movsl
dec
push
sub
push
push
into
mov
les
stos
inc
aas
leave
fisttpl
jle
sub
adc
imul
faddl
push
mov
outsl
arpl
test
lcall
gs
or
mov
push
into
hlt
faddp
imul
ret
je
mov
shrl
and
pop
outsl
test
and
testb
pop
and
ljmp
pop
in
or
icebp
inc
sarl
or
movsb
inc
fistps
add
insb
insl
movsb
push
push
inc
lcall
loopne
lahf
leave
or
mov
mov
pushf
in
dec
adc
mov
adcl
push
pop
add
or
dec
ret
pop
jmp
push
xchg
push
mov
cmpl
lret
push
data16
xchg
inc
pop
sbb
cld
or
ret
outsl
es
mov
pushf
push
mov
mov
xchg
mov
cmp
and
mov
sub
push
push
mov
mov
lret
jne
int3
loopne
xchg
jbe
xorb
pop
loop
insl
jmp
lock
popf
pop
jp
lahf
fidivs
incb
sub
cmp
or
pusha
pop
mov
mov
lret
xlat
xlat
ss
lea
scas
std
daa
pop
inc
xor
or
dec
adc
jae
mov
outsl
popf
adcb
ror
push
dec
das
mov
push
xor
sahf
in
lods
cld
arpl
jl
loopne
cwtl
ljmp
stc
outsb
aad
stc
cmp
frstor
pop
rcrb
mov
cs
das
adc
jns
or
adc
xor
inc
or
scas
test
jl
add
inc
sbb
mov
pop
lock
scas
scas
jecxz
dec
xchg
push
pop
in
dec
out
in
ljmp
jge
pop
mov
and
cwtl
mov
movsl
daa
aam
push
xchg
add
stos
out
lahf
test
fistl
mov
std
mov
push
adc
or
cltd
xchg
sub
jns
mov
xorb
stc
hlt
jb
sbb
fwait
and
adc
mov
shlb
subl
dec
pop
xchg
xor
ja
mov
add
add
xor
add
ja
xchg
inc
shlb
mov
inc
pslld
sub
pop
scas
xchg
test
jmp
mov
jne
popa
push
dec
sbb
or
loope
mov
mov
ret
cld
test
out
or
adc
fs
fstpl
push
les
out
or
popl
lds
leave
shrb
xchg
iret
mov
negl
popa
cmp
inc
jge
mov
adc
and
sub
repz
ret
imul
cmpb
pop
sub
rcrb
pop
sbb
bound
xchg
scas
outsb
movsl
jnp
gs
sahf
loopne
sti
mov
xchg
sahf
rorb
jo
mov
adc
div
mov
sbb
lds
test
sub
nop
inc
mov
push
dec
lret
test
sub
jecxz
sub
xchg
push
jge
pusha
inc
mov
and
imul
or
mov
mov
sub
leave
xlat
js
or
mov
icebp
aad
dec
mov
mov
lret
in
sub
lea
pop
in
xor
sbb
sti
sbb
in
iret
mov
jno
in
mov
sub
icebp
jmp
mov
push
test
sahf
cmp
inc
fucomp
aas
pop
stos
xor
sbbl
shrl
add
int3
rol
fildll
and
lret
mov
jno
sbb
mull
hlt
xor
xchg
inc
add
jge
adcl
int
push
pop
daa
aam
and
xor
sbb
cmpsl
loop
xor
imul
add
stos
mov
and
testb
and
sub
ja
mov
inc
lds
ficoms
inc
xchg
daa
cmp
mov
and
pop
mov
add
add
add
fsubrp
fldenv
and
cmp
shll
addr16
das
test
inc
loope
popf
xchg
pop
enter
lret
sub
enter
fisubs
insb
sub
push
or
cmp
icebp
and
cmp
mov
mov
fcmovne
and
bound
jecxz
push
mov
outsl
mov
and
hlt
mov
sub
adc
xor
mov
push
mov
imul
and
xchg
out
jbe
sbb
out
cmpsb
jmp
xlat
mov
inc
pop
lret
js
out
orb
inc
dec
shrb
lods
jg
cmp
mov
inc
push
int3
arpl
enter
and
cmp
sub
fwait
xor
lds
lahf
add
xorl
stos
xchg
fimull
lret
cltd
cmp
scas
or
cmp
in
ss
and
imul
mov
sbb
ljmp
xchg
adc
sahf
cmp
inc
or
jns
jecxz
cmpsl
or
mulb
shll
sarl
inc
cmp
out
stos
and
lds
je
shlb
sbb
test
pushf
js
sbb
mov
iret
add
push
and
loop
les
jne
clc
jbe
and
fwait
jge
dec
xchg
xor
ret
push
hlt
movsl
mov
sub
sbb
in
cmp
jle
mov
call
daa
mov
sub
arpl
test
push
jle
push
in
movsb
out
fucomi
scas
fldt
mov
and
stc
ret
andb
push
lods
outsl
mov
push
icebp
push
cltd
into
roll
stc
sub
xor
addr16
inc
dec
ja
aam
shrb
outsl
psrlw
mov
pop
xchg
cmp
call
push
jae
jp
mov
js
adc
nop
outsl
and
bound
mov
sub
xlat
fdivrp
cmp
cs
cld
lahf
add
mov
jbe
add
or
in
lods
and
mov
in
xor
add
movsl
icebp
addb
imul
pop
dec
add
imul
into
movsb
popf
dec
fstpl
fbld
ret
push
decl
cmp
jo
add
or
fwait
xrelease
lea
fadd
stos
test
stos
xchg
or
sub
pusha
adc
sub
cmpsl
out
pop
push
push
sbb
in
fsubr
dec
pop
xlat
cltd
xlat
push
dec
mov
sub
dec
daa
adc
inc
jns
jle
stos
adc
scas
cmpsb
dec
push
xor
fwait
push
aaa
mov
test
xchg
loope
sbb
pop
decb
push
xor
pushf
jp
rcr
mov
push
sbb
arpl
mov
in
mov
daa
enter
mov
scas
dec
mov
fists
loopne
js
lds
sbb
cmpsb
jmp
out
push
mov
iret
push
cmp
jmp
mov
cmp
cmpsb
das
or
dec
push
cmpsl
and
mov
adc
push
mov
xor
pop
leave
cld
pop
inc
pop
and
cmp
jp
jg
jecxz
into
push
xor
bound
lds
cmpsb
mov
les
and
or
into
xchg
aaa
imul
lock
xor
movsb
loopne
xor
jae
dec
inc
jg
loop
cmp
sbb
fdivrs
sbb
pop
lock
sti
sub
jnp
aaa
push
gs
inc
idivb
lods
movsb
or
xchg
leave
arpl
fcmovnbe
dec
cwtl
sub
lcall
jecxz
iret
lods
xchg
je
int3
into
faddl
pop
cmc
mov
fwait
dec
dec
cmp
mov
push
ds
pop
cmp
in
in
out
loopne
shlb
leave
or
pusha
mov
jmp
fdiv
mov
test
xchg
xor
arpl
xchg
xrelease
hlt
pop
and
cmpsl
idivb
push
popf
xchg
cli
hlt
clc
aam
cmpb
sahf
inc
push
jne
adc
sbb
fwait
pop
and
and
jge
sbb
in
loop
mov
loopne
pop
mov
dec
mov
pop
pop
std
ficoml
xor
arpl
sbb
int3
push
pop
adcb
jecxz
inc
jge
in
sti
cwtl
arpl
jns
ss
inc
in
icebp
loopne
insb
shlb
push
or
push
mov
shl
xor
insb
shrl
cmp
and
xchg
push
popf
out
cmp
mov
into
loopne
pop
dec
pop
inc
arpl
sar
data16
mov
out
fisubrl
mov
add
xchg
orl
mov
aas
lfs
cmp
into
pop
pop
roll
sub
jecxz
sub
pop
adc
inc
lcall
mov
mov
call
and
push
call
adc
and
pushw
aad
sahf
repz
in
xchg
repnz
mov
repz
mov
inc
stos
inc
movsb
sub
pop
pop
out
subb
into
push
inc
xchg
and
loopne
or
call
or
dec
mov
adc
test
xor
fisubl
repz
mov
outsb
in
sbb
or
cmp
nop
dec
cwtl
add
icebp
inc
loope
cmc
adcb
jmp
test
stos
lret
pusha
push
and
fwait
movsl
adc
daa
pop
push
cmp
push
or
push
divb
add
shll
nop
xchg
mov
pop
mov
shll
cltd
call
dec
jle
xchg
lods
repz
sub
ss
push
jnp
stos
mov
xchg
push
cwtl
test
sbb
lret
push
js
data16
sbb
sub
movsb
mov
lea
popa
fadd
dec
mov
add
fs
ljmp
xchg
sbb
jae
cltd
bound
cmpsl
pop
push
adc
lahf
sbb
cmpb
pop
outsb
pop
adc
xchg
sbb
jp
dec
or
stos
lods
enter
test
and
xor
in
outsb
test
popf
dec
lods
lds
in
cmpl
dec
test
inc
lcall
lahf
popf
jb
mov
inc
fldln2
jecxz
sbb
xor
jmp
xchg
mov
push
pop
inc
sti
and
into
mov
mov
ljmp
in
cli
mov
dec
into
dec
or
cmp
adc
cwtl
cmpl
sbb
fbld
test
enter
in
jo
mov
repnz
mov
movsb
fldcw
shll
imul
popa
inc
mov
lea
xchg
dec
mov
adc
jmp
pop
sub
lds
andb
mov
lcall
fcomip
and
enter
sub
cmp
xchg
mov
mov
cmp
lahf
negb
push
daa
outsb
ljmp
cmp
jg
les
test
adc
aad
loop
std
cmp
jge
jo
or
xchg
jmp
lret
pop
mov
inc
or
mov
int3
push
adc
out
xchg
push
dec
and
in
aad
insl
outsl
loopne
push
das
dec
iret
aaa
sub
mov
jb
mov
mov
mov
lock
xchg
pop
js
in
lds
out
sbb
sbb
pop
enter
mov
shll
shll
insl
orl
sub
pop
inc
push
mov
imul
bnd
xchg
dec
mov
sub
add
pop
sar
scas
arpl
andb
shrb
push
sbb
inc
mov
shlb
mov
lcall
jno
xor
inc
aaa
xchg
pop
jmp
push
in
xor
dec
rcl
jge
xchg
icebp
popf
lods
repnz
mov
cmpsb
adc
xlat
in
xor
pop
pop
icebp
fnstcw
cmp
rcl
testb
scas
mov
mov
dec
push
jmp
scas
and
ja
data16
mov
addr16
fnstsw
movsb
add
mov
inc
shrb
sbb
andb
mov
jbe
push
mov
mov
mov
push
fcmovu
loope
fwait
daa
jmp
push
push
xor
test
push
jecxz
int3
jae
popa
mov
lods
push
imul
sbb
sbb
pop
dec
enter
faddl
mov
out
punpckhbw
scas
sub
adc
dec
dec
push
push
or
or
adc
add
outsl
outsb
xchg
loopne
leave
inc
adc
stos
lds
sbb
cld
int
xor
push
mov
xchg
mov
popa
cmp
cmp
roll
push
lahf
cmp
jno,pt
add
push
test
aaa
push
sbb
pop
inc
movsl
push
je
xor
fwait
jns
or
mov
imul
je
mov
xchg
lods
nop
jl
jno
push
ds
mov
pop
sti
dec
mov
jae
push
jnp
mov
rcrb
int
xor
decl
add
add
sub
iret
cmp
outsl
jecxz
push
insl
and
add
hlt
add
add
and
adc
test
ljmp
insb
pop
adc
push
jl
iret
push
mov
mov
mov
test
aam
fcoms
lods
jo
je
pop
je
cs
pop
popf
sbb
test
add
jo
cmp
js
shrb
mov
or
mov
mov
ss
and
xchg
mov
repz
cmp
and
ret
fstps
or
aaa
leave
jbe
mov
xchg
div
out
xchg
nop
gs
fcom
movsb
movsb
mov
enter
mov
mov
push
dec
xor
xchg
xor
xlat
out
sub
filds
mov
mov
jno
xchg
xor
aas
jns
or
ja
cld
push
pop
jge
xchg
out
xor
inc
mov
les
inc
lea
inc
stc
push
repnz
pop
loopne
or
mov
add
dec
adc
sub
int3
mov
dec
arpl
test
bound
sub
push
xor
shll
les
sub
pop
popf
push
in
dec
scas
inc
xchg
xchg
movsl
dec
scas
sti
in
add
mov
cmp
jbe
hlt
xchg
mov
stc
fcoms
fisttpll
and
push
and
call
les
popa
push
jg,pt
jge
clc
arpl
aas
pop
int
ror
cwtl
mov
add
push
push
xchg
cmp
mov
mov
mov
cmp
rolb
int
or
jp
xor
lret
aad
sbbb
les
cmpb
ret
into
cld
cli
dec
sbb
add
sub
jmp
mov
mov
in
xor
sub
mov
leave
orl
aaa
sbb
out
in
test
dec
add
xor
jmp
dec
popa
mov
adc
ret
inc
push
test
lret
sbbb
jbe
dec
push
cmp
ret
out
mov
push
in
or
push
cmpl
sub
push
mov
xor
iret
sub
sub
or
jo
int3
cmp
aas
jp
mov
cmpsl
shll
mov
pop
pop
xor
or
cmp
stc
dec
ficoml
inc
mov
jmp
push
subl
xchg
cwtl
pop
inc
push
int
jnp
adc
mov
stc
cmpsb
jg
movsb
add
cmp
out
mov
loope
shll
cmp
fimull
pop
fadds
sbb
stos
dec
das
inc
push
pop
jge
add
push
mov
add
bound
sub
push
push
mov
lods
mov
outsl
addb
pop
cmp
fwait
jb
cmp
mov
orl
lds
in
ja
mov
ret
mov
sub
jo
add
jmp
clc
rolb
jge
push
stos
divb
sub
or
push
mov
movswl
pusha
sub
add
lahf
cmp
lret
out
je
movsb
imul
inc
adc
movsl
in
jl
ljmp
clc
aam
pop
sbb
and
je
imul
adc
lahf
push
xchg
lret
push
or
or
mov
mov
out
jae
iret
inc
ss
sub
out
pop
std
ss
ljmp
loopne
push
push
ds
mov
mov
loopne
out
xchg
cmp
inc
pop
inc
lret
mov
fisttpll
xor
and
mov
jp
push
fs
in
add
add
ss
gs
outsl
je
icebp
pop
mov
shll
pop
add
cltd
cld
xor
dec
outsb
in
inc
and
pop
mov
xor
mov
dec
mov
mov
pusha
das
loop
sub
icebp
testl
in
scas
mov
sub
xor
repnz
aaa
sti
jg
mov
push
dec
jnp
lret
movsl
pop
cltd
mov
mov
loopne
in
bound
cmp
pusha
mov
and
xchg
icebp
inc
adc
mov
add
popf
inc
leave
je
test
mov
js
in
std
mov
in
mov
mov
fwait
cmp
out
and
xorb
push
cltd
fdivrp
jno
in
cmp
outsl
cmp
int
in
inc
or
dec
adc
inc
mov
inc
push
ret
xchg
loope
pusha
xchg
sbb
push
and
outsl
mov
jg
add
add
add
lea
imul
fcmovnb
inc
xchg
ret
hlt
add
add
nop
cli
mov
int3
sub
jmp
jp
jl
mov
pop
shl
sahf
gs
insb
movsb
outsl
push
rcrl
pop
lock
dec
movsb
ret
dec
addr16
jbe
addl
sti
stos
jp
push
cs
sub
xor
in
into
jnp
sbb
pop
sub
pop
dec
sbb
push
outsl
enter
xor
or
jmp
shl
test
dec
xchg
add
loop
push
ljmp
lret
pop
mov
xorl
sub
push
aas
push
arpl
fnstenv
push
out
mov
mov
fs
mulb
pop
push
mov
mov
pop
loop
mov
lock
cld
scas
push
jnp
or
out
adc
aad
jnp
pop
cmpsl
cmpsb
mov
push
repnz
sahf
out
add
sub
insb
shrl
push
add
dec
jecxz
test
adcl
std
xchg
adc
sbb
repz
nop
add
mov
jo
mov
pop
or
mov
cs
push
adc
push
cltd
mov
rorb
mov
sti
or
sbb
fiadds
jae
jge
mov
jmp
aam
jg
data16
ret
sahf
push
cli
es
push
pusha
cmp
jns
inc
ror
js
test
pop
and
popf
enter
jns
or
add
loopne
push
or
repnz
push
push
shll
shr
scas
popa
mov
notb
arpl
or
in
lods
mov
popf
sbb
sub
lcall
add
in
cld
jne
fstpl
pop
jl
ficomps
mov
xor
lods
xor
cmp
pop
es
pushf
imul
sub
in
cli
mov
popf
in
lret
test
shlb
cmpsl
in
stc
cmpsl
xchg
enter
mov
mov
dec
jp
or
fildll
pushf
incl
adc
pop
sbb
scas
rep
jns
fisttps
das
push
push
clc
pop
mov
std
pop
dec
xchg
or
and
rcll
push
xlat
push
inc
jb
lcall
and
cmp
or
xchg
in
mov
inc
push
sahf
mov
mov
pop
hlt
fstpl
in
cmp
push
mov
mov
push
cmp
or
imul
test
aaa
pushf
aas
jo
pop
push
loope
pop
and
insb
movsb
stc
sahf
push
inc
mov
add
cmc
sbb
std
in
lahf
clc
mov
mov
or
rclb
inc
and
popa
pop
add
stc
mov
cmp
aas
pop
jbe
out
push
jecxz
arpl
cmp
dec
dec
addr16
dec
and
and
pop
sbb
mov
popf
xchg
jle
lret
cltd
out
mov
mov
inc
adc
inc
ja
sbb
push
mov
push
mov
jb
imul
push
cmp
dec
fmuls
bound
aad
adc
adc
adc
outsl
orl
pop
jp
ja
pop
test
mov
aad
into
popf
and
sbb
mov
cmc
jmp
mov
pusha
inc
xchg
pop
and
out
dec
or
and
mov
mov
jge
decl
xor
xor
dec
inc
adc
insl
xor
xor
hlt
or
nop
imul
mov
out
ss
cs
inc
push
inc
jecxz
inc
lods
andb
jo
xlat
insl
lret
add
cmp
sarl
jae
int3
mov
add
cmp
push
es
inc
mov
xor
test
jecxz
xchg
push
sahf
popf
iret
lods
cltd
xchg
xchg
sub
adc
jbe
in
push
sub
subb
mov
push
in
dec
lahf
pop
push
sub
pop
loop
mov
push
inc
scas
hlt
xchg
pop
repz
inc
push
inc
cmp
xor
push
push
xadd
mov
mov
adc
xchg
sti
push
push
cmp
mov
lahf
mov
or
sbb
or
mov
add
addr16
or
lds
loop
dec
scas
mov
sub
stos
pusha
push
inc
out
mov
lretw
inc
mov
dec
in
dec
loopne
insl
inc
fwait
sbb
ljmp
or
push
dec
test
dec
jnp
push
popa
push
aad
das
fistpll
or
adcl
repnz
dec
jae
cs
sub
push
enter
cmp
push
out
pop
out
das
add
add
add
bswap
test
dec
or
scas
push
sub
add
add
add
ds
divl
or
push
add
jmp
and
add
push
int
push
negb
movsl
xchg
xor
jae
push
shrl
int
push
jns
inc
das
cmp
pusha
std
cmc
fistl
test
sbb
add
jae
and
jecxz
inc
rclb
imul
push
mov
push
push
or
in
out
fldt
and
adc
xchg
aad
stc
repnz
jb
fwait
test
sbb
lods
imul
dec
cld
aam
mov
jae
mov
popl
mov
mov
test
dec
and
xchg
test
inc
mov
aas
sub
arpl
mov
xor
or
xor
nop
inc
sbb
push
push
addr16
jo
xor
adc
xor
pop
mov
enter
negl
jle
dec
sbb
mov
push
addr16
icebp
lods
mov
mov
fsubrs
inc
add
cmp
testb
les
add
test
dec
and
ljmp
cmc
pusha
xlat
jg
andb
ss
adc
adc
daa
dec
frstor
inc
adc
push
inc
mov
mov
and
hlt
mov
add
dec
adc
xlat
inc
ret
mov
sub
sub
shlb
dec
lcall
cmc
mov
mov
call
inc
or
mov
and
mov
push
inc
mov
movsw
inc
icebp
xchg
xchg
add
push
fdivs
cs
adc
in
jg
or
nop
jae
mov
fwait
xchg
cmp
fs
mov
xchg
test
adcb
rcrl
dec
aaa
or
cmp
push
sub
popa
sub
aad
and
mov
clc
xchg
dec
adc
rcll
arpl
mov
leave
xchg
and
lcall
and
or
ss
sbb
pop
cmp
cmc
jecxz
into
mov
repnz
mov
fs
add
mov
in
jg
cmc
in
leave
pop
ljmp
adc
shlb
pop
mov
fmuls
mov
movl
cmpsl
xor
out
sbb
stos
push
pop
popf
jge
push
cmp
add
push
xor
test
add
mov
fsubs
push
jl
in
pop
enter
loopne
icebp
mov
xor
stos
and
adc
push
inc
xlat
cltd
push
jg
sub
scas
dec
nopl
test
fcmove
lahf
sub
int3
pop
push
xor
test
inc
xchg
push
lret
and
stos
aad
inc
out
fiaddl
iret
in
addr16
je
ja
sbb
nop
pop
lods
popf
adc
pop
jle
jp
sbb
mov
movsb
pop
shll
pop
add
cltd
mov
dec
outsl
shrl
or
push
dec
lods
cs
cmp
and
adc
lods
xchg
xchg
dec
cli
push
jp
xchg
jg
lods
fsts
xchg
pop
xchg
iret
fs
add
inc
cmp
push
add
pop
mov
cmp
repnz
jns
cmp
lcall
mov
cmpsl
xchg
lods
inc
lret
cmpsb
inc
imul
lock
jno
dec
nop
je,pn
push
adc
pop
mov
das
sti
xor
fadds
pop
f2xm1
cmp
repnz
lret
adc
sub
adc
xchg
mov
dec
push
cmpsl
in
fstps
ljmp
out
mov
nop
push
adcb
jae
fsts
and
stc
in
lea
cmp
faddl
adc
lret
adc
pop
lods
xor
les
push
pop
pop
dec
adc
std
dec
or
das
aaa
cwtl
clc
pop
loope
rcrl
or
movsb
mov
inc
pop
stos
aas
mov
in
mov
mov
aas
push
push
test
js
insl
lret
mov
and
cmpsb
loope
out
pop
rsqrtps
mov
or
pusha
out
repnz
scas
sub
add
mov
sbb
test
adc
pop
add
adc
mov
nop
pop
loop
dec
add
shrb
pop
adc
push
pop
add
shrl
addr16
jle
out
sbb
push
inc
fwait
jo
ret
xchg
imul
add
add
fwait
push
pusha
outsl
out
jg
cmc
or
push
cli
frstor
int3
add
hlt
add
add
push
fwait
push
pop
cmpsl
pop
mov
cmp
fs
aas
and
dec
out
mov
and
fstl
stos
push
stos
lahf
xor
jecxz
inc
xorb
jbe
das
pop
mov
cmp
repnz
test
xchg
lods
jne
jp
insb
cs
mov
cmc
stc
cwtl
dec
aas
add
mov
aad
adc
jge
push
or
push
insl
mov
scas
lret
rclb
add
stc
lret
lahf
js
jb
or
data16
aaa
rolb
adcb
pop
mov
stc
nop
push
hlt
mov
mov
or
cmp
aad
mov
jge
mov
push
add
inc
es
aaa
cli
pop
push
dec
cmp
add
xor
jge
cmp
insb
push
sub
jle
cli
movsl
int
rcrb
outsb
jo
push
dec
mov
mov
xchg
and
cli
xchg
mov
pop
or
sbb
cwtl
mov
es
cld
cmc
mov
cmp
int3
les
xchg
mov
mov
dec
cwtl
mov
sub
add
pusha
or
je
test
jns
loop
std
neg
jmp
dec
mov
jle
aas
pop
aas
mov
jo
inc
ja
pop
ds
incl
push
idivl
pop
mov
pushl
dec
inc
shrb
cmpsb
aam
dec
lret
push
adc
dec
mov
and
ret
lcall
fistpl
xor
push
lret
xchg
mov
dec
xor
dec
mov
test
push
push
add
les
inc
mov
add
xchg
fisubs
and
push
out
xor
sbb
jge
push
and
scas
enter
dec
inc
or
popl
shlb
mov
cmc
pop
pop
leave
out
sbb
aaa
push
jo
pop
call
sub
cmpsb
arpl
add
repz
out
test
stos
scas
or
mov
out
push
and
jb
mulb
in
mov
xor
int
add
lret
fbld
cmpb
or
xchg
xor
jmp
pop
into
cmpsl
inc
lods
add
in
mov
negl
jno
mov
sbb
loope
push
fs
pop
int
jae
inc
daa
fsubl
mov
sbb
in
shrb
aaa
mov
imul
inc
sub
rcrb
inc
pushf
mov
adc
xor
orl
jecxz
movsb
xchg
inc
test
xchg
movb
inc
xchg
aad
mov
sbb
and
jbe
cmp
lock
test
stos
test
gs
fs
pop
adc
outsb
hlt
dec
rcll
xchg
adc
jecxz
outsb
lahf
pop
add
lods
sbb
je
mov
fildll
jmp
fstl
fmull
cmp
ds
les
push
lcall
fldcw
iret
sarl
or
jmp
mov
mov
in
scas
mov
xchg
inc
stos
pop
mov
xor
iret
lahf
addl
dec
sub
xor
in
test
pop
out
daa
mov
fisubs
and
hlt
or
mov
stc
int3
insl
cmp
cmp
in
push
xchg
sub
xor
sbb
insb
jl
enter
je
sub
mov
xchg
pop
pop
std
cs
jecxz
sbb
ret
mov
cmp
fidivrs
jns
mov
mov
push
sub
data16
stc
or
cmp
movl
adc
fs
outsb
inc
scas
gs
mov
jae
pop
bound
pop
xchg
shl
bound
loopne
jne
dec
xchg
pop
imul
int
inc
imul
test
dec
hlt
jnp
pop
ds
enter
xor
push
mov
add
ljmp
xchg
xor
popa
lahf
adc
xchg
std
push
xchg
pop
push
xchg
ljmp
or
std
lods
enter
andb
mov
je
mov
mov
and
dec
inc
popa
mov
pop
push
cmovbe
inc
jl
dec
cmp
mov
scas
add
outsb
push
bound
sbb
mov
mov
cli
sti
or
adc
inc
insb
aas
cmp
pusha
jle
fsubs
xchg
scas
scas
sbb
inc
in
roll
add
shll
add
add
add
outsb
out
lds
arpl
hlt
add
add
movsb
push
aam
mov
inc
jo
std
std
sub
inc
dec
pop
jmp
jbe
xor
loope
sub
adc
add
xchg
xor
stos
inc
rclb
pop
fdivl
mov
jbe
pop
sbb
test
push
outsb
cmp
out
test
xchg
mov
jne
and
push
mov
pop
roll
sbb
mov
in
jae
dec
pop
pop
or
and
jae
leave
outsl
push
cmpl
mov
jns
mov
pop
pop
repz
pop
mov
lcall
clc
sub
test
add
inc
push
shl
inc
inc
out
divl
cld
popa
gs
lods
adcb
fcmove
push
push
mov
cli
xchg
mov
xlat
adc
rorb
rcll
mov
fildll
rcrl
dec
and
fwait
pop
sub
shl
add
jo
addr16
stos
js
fucomp
shrb
cmc
jge
adc
fisubl
xchg
pushf
xchg
dec
pusha
ja
hlt
mov
scas
imul
push
mov
xor
int
cmp
cmpsl
adc
lret
ret
das
dec
icebp
add
aas
out
push
ret
popf
mov
xor
loopne
xchg
sbb
ljmp
mov
loope
dec
push
and
ja
jle
dec
in
adc
xor
dec
jbe
rcll
and
fistl
mov
jp
mov
pop
mov
push
imul
inc
pop
imul
or
shll
lahf
mov
lds
sub
inc
xchg
sbb
or
arpl
mov
es
test
sbb
push
repz
add
cmp
jl
cmp
xlat
cli
push
cmp
in
dec
and
jecxz
and
jb
fs
xchg
mov
jnp
out
rolb
insb
xchg
push
cmp
xor
pop
popf
xchg
ficompl
jge
bnd
mov
out
or
mov
ret
jb
repnz
jb
test
mov
add
jmp
iret
mov
pop
add
mov
or
xor
cwtl
sbb
xchg
hlt
fcomp
sbb
pop
cltd
adc
dec
cmpsl
or
mov
out
rol
out
push
push
or
mov
andb
add
push
dec
and
inc
ja
cmp
test
das
xor
sbbl
inc
adc
sub
cmpb
xchg
sub
inc
and
xor
daa
jg
outsb
adc
xchg
push
movsl
std
push
push
or
dec
or
in
push
xchg
mov
loop
pop
and
icebp
shll
mov
arpl
push
outsb
hlt
pop
aaa
imul
mov
dec
or
cwtl
jmp
shrl
pop
addl
mov
roll
pop
sti
into
rcll
not
idivb
ret
jle
xlat
jns
add
lea
and
mov
adc
jnp
lds
lock
adc
loop
sub
mov
xchg
cmc
out
int3
inc
repz
mov
scas
jno
adc
and
and
adc
jecxz
push
call
add
mov
xchg
icebp
push
inc
dec
jno
fs
out
jle
adc
add
leave
pop
mov
shr
aam
pop
repnz
or
shrl
jmp
cmp
sti
dec
mov
fstps
cmc
lock
arpl
dec
mov
jle
jno
das
mul
xor
mov
or
insb
mov
cmp
aas
mov
push
cmp
jl
mov
imul
lret
cmp
push
inc
or
cmp
xor
adc
adc
ss
add
lahf
xchg
jno
stos
push
jge
ljmp
or
bound
xor
test
leave
out
cmp
and
inc
or
pop
sub
or
jle
sahf
mov
adc
out
add
push
xlat
inc
in
dec
mov
sarl
jb
cmpsl
push
pslld
dec
sub
inc
adc
gs
nop
dec
cmp
es
test
test
mov
cli
aas
mov
mov
ds
mov
je
ret
inc
mov
mov
inc
imull
movsb
xchg
dec
js
pminub
push
ret
cli
add
adc
aaa
sbb
push
out
xchg
inc
aad
cmp
xchg
adc
mov
pop
mov
cmp
in
dec
aas
sub
xlat
cwtl
pop
jmp
jge
adc
add
add
lret
lods
xlat
sti
mov
sub
add
add
add
adc
mov
dec
fadds
sysret
lahf
rorl
adc
sub
jno
test
mov
mov
addl
fisubrs
jmp
or
xor
lock
stos
inc
nop
sbb
lea
push
and
dec
sar
dec
test
movb
push
mov
and
push
adc
add
xchg
cli
inc
pop
int3
adc
dec
addb
inc
hlt
dec
aam
jne
mov
dec
pop
loopne
ljmp
outsl
xor
shrl
dec
inc
push
mov
inc
dec
and
int3
sub
xchg
pop
and
pop
das
xchg
cmp
mov
popf
arpl
xchg
leave
mov
and
aad
mov
jno
jmp
test
and
pop
movsb
xor
je
push
push
cmp
sbb
lret
push
adc
test
pop
pushf
hlt
dec
clc
and
jne
enter
inc
sub
and
push
xchg
int3
inc
loope
and
lcall
pop
pop
mov
sbb
xchg
jbe
in
inc
jmp
push
sbb
add
cmp
pop
push
popf
test
lcall
lds
std
jge
mov
mov
add
or
xchg
xchg
imulb
mov
xor
js
fcoms
pusha
sbb
cli
and
jecxz
sar
sub
xlat
xor
adc
xor
sbb
jmp
hlt
cmp
imul
nop
imul
inc
and
das
fadd
cmp
pop
mov
sub
jle
jnp
test
in
push
push
jae
push
mov
test
push
fwait
adc
inc
xchg
sbb
pop
adc
in
ret
and
rcrl
dec
mov
sahf
ds
adc
jnp
in
xchg
call
std
imul
and
and
ret
iret
leave
das
dec
sti
lret
adc
mov
pmaxub
daa
lret
lcall
mov
mov
push
dec
xchg
fisttps
mov
push
add
mov
sub
outsl
xchg
ret
push
adcl
xor
fimull
push
dec
and
dec
lret
iret
mov
xchg
cmp
cmp
adc
inc
js
add
jecxz
arpl
into
out
call
aas
int3
mov
pop
xor
inc
jnp
cltd
adc
popa
jno
test
jge
fbld
cmp
dec
lahf
push
pop
adc
ljmp
test
push
add
lods
jle
mov
push
daa
jecxz
push
bound
fists
mov
push
xorb
xchg
jno
aas
jnp
stc
pop
imull
loop
ret
mov
xchg
shr
inc
std
fisubs
nop
and
or
fs
mull
or
test
daa
dec
dec
xchg
push
sub
gs
hlt
fnstenv
cmp
mov
enter
pushf
jno
pop
pop
test
xchg
movsl
mov
iret
pop
jb
or
sub
xchg
leave
cli
push
xor
mov
cmp
cli
fcomps
or
and
pop
repz
loopne
pop
sbb
in
frstor
arpl
mov
test
out
std
mov
stos
mov
sbb
mov
xor
dec
loopne
cltd
sti
rcrl
adc
push
xor
sarw
and
mov
jl
sub
stc
cmp
fs
mov
inc
imul
in
mov
sahf
lret
add
cmp
adc
test
inc
pop
pop
xchg
adc
adc
loop
ds
addb
push
sub
add
sub
adc
xor
iret
add
pusha
fs
mov
jae
mov
push
cld
popf
jns
mov
sbb
ss
push
iret
inc
cmp
and
pop
pusha
jmp
in
aas
insb
inc
fists
push
pop
mov
cmpsl
ret
inc
lcall
aas
shrb
xchg
or
pop
in
mov
cwtl
leave
xchg
pop
mov
pop
or
jg
inc
xchg
mov
imulb
push
stos
pop
mov
mov
sahf
mov
daa
stos
sahf
add
and
pushf
mov
add
add
loop
bnd
fcomi
mov
cmp
inc
pop
std
fiaddl
add
add
add
jno
les
dec
push
clc
clc
popf
dec
movsb
push
movsl
ja
jae
fdivs
lcall
sahf
cmc
mov
lea
movsl
pop
pushf
aas
sub
icebp
jecxz
add
call
jne
js
adc
or
cmp
fisubrs
xor
test
into
mov
test
cmp
adc
and
rcrl
scas
or
rorl
push
xchg
das
out
mov
int
cmp
sbb
nop
jae
jmp
ret
push
xchg
loop
sub
mov
lods
sbb
stos
push
inc
and
outsl
pop
aas
in
test
jecxz
inc
xor
jle
sbb
jle
mov
adc
imul
std
mov
pop
add
les
xor
fwait
mov
adc
shll
inc
js
push
push
hlt
cmp
adc
jp
push
xchg
mov
mov
add
and
setb
jg
mov
mov
mov
icebp
adc
jbe
insl
test
fwait
xchg
inc
jmp
or
adc
ja
aam
push
jp
aam
cmpsl
pop
push
fnstsw
push
negb
mov
fnstenv
push
loop
push
sbbl
cmpsl
pop
cmp
test
xor
mov
xchg
lds
pop
test
pusha
mov
add
andb
jb
bound
xchg
pop
jno
loope
jae
jmp
testl
sub
enter
clc
pop
movaps
pop
sbb
xor
nop
and
mov
fstps
add
pop
insl
or
nop
stos
mov
jmp
jno
out
dec
out
in
icebp
mov
int
push
sub
divl
ss
cmp
adc
xchg
dec
pop
xor
mov
and
jge
std
cmpsb
aad
arpl
cld
mov
popf
repz
mov
rcl
mov
mov
sub
outsb
jg
filds
es
sbb
mov
idivl
cmc
loopne
ds
nop
mov
sub
aad
mov
mov
stos
das
mov
inc
insb
js
xchg
push
inc
jbe
insl
or
leave
adc
ret
movsl
stos
dec
jo
nop
mov
lret
push
fstps
les
call
adc
cwtl
cmp
mov
mov
into
int
cmpsl
fsubrl
jmp
lds
sbb
lcall
mov
push
mov
mov
sub
incb
aaa
repnz
loopne
and
xchg
into
fs
repz
int
sti
mov
rcrb
jne
fiaddl
inc
loope
lret
push
pop
xchg
pop
ret
sahf
sub
jecxz
sbb
jmp
dec
sub
jbe
notl
into
jo
pop
push
inc
stos
loopne
mov
sub
cwtl
dec
jg
test
xlat
lock
adc
xchg
aad
mov
cmp
mov
flds
mov
jmp
pmaxub
mov
and
imul
loopne
dec
fcmovu
xchg
repnz
add
adc
in
loopne
sarb
xchg
lahf
xor
sbb
mov
sti
xchg
shrl
xchg
jge
push
push
cmp
es
movsl
add
add
mov
jle
fists
lret
out
push
out
lfs
aaa
orl
aas
mov
push
or
xor
sub
jae
loope
dec
and
popa
inc
inc
adc
add
stc
fmull
dec
push
and
pop
lds
je
in
pop
mov
test
mov
jle
ja
clc
outsl
rclb
fptan
cmp
fsubr
lods
lcall
xlat
out
fdivrs
sub
jno
test
push
xchg
orl
pop
jge
mov
xor
hlt
xchg
hlt
inc
cmc
inc
add
cmp
movsb
mov
add
sub
mov
std
adc
stc
jmp
icebp
out
mov
popa
xor
js
jnp
jbe
mov
imul
lret
stos
pop
pop
add
xor
bound
mov
es
je
out
call
stc
cmc
mov
loope
loope
sub
jne
jle
iret
or
fldt
aaa
or
shlb
cmp
inc
pop
popa
or
xlat
mov
int3
ja
imul
sub
gs
pop
add
scas
shrl
mov
inc
sub
add
add
ss
in
inc
dec
out
lahf
out
filds
add
add
add
shl
inc
mov
jo
or
mov
in
jo
and
jnp
lods
sbb
xchg
mov
pusha
movsb
jnp
inc
shr
in
stos
into
adc
ja
mov
mov
shll
ret
iret
mov
push
xchg
ljmp
cmpsl
das
mov
rorl
jns
jmpw
and
mov
addr16
inc
push
jl
rol
mov
adc
dec
sub
and
jge
cmp
inc
add
jecxz
sub
out
lods
fidivrl
fsubs
mov
aam
rcr
dec
dec
inc
pop
pop
xor
mov
jp
cld
mov
mov
enter
adc
xor
xor
in
pop
imul
icebp
xchg
dec
xchg
shl
cmp
loope
mov
cwtl
test
push
lret
cmp
xor
enter
mov
std
nopl
push
in
mov
incl
ret
sbb
pop
adc
push
sub
mov
lods
lds
insl
fwait
incb
or
movl
inc
out
hlt
imul
jns
xchg
and
push
push
jns
cmp
test
or
mov
js
lds
mov
divl
sbb
dec
fldl
out
jge
mov
outsb
push
in
arpl
lods
jg
sti
jmp
js
xchg
adc
and
cmp
add
test
test
adc
push
mov
fidivrl
push
inc
ss
cli
add
add
jg
inc
xchg
fldenv
pop
cmpsb
pop
or
popa
cmpsl
lahf
jbe
lock
cli
xchg
mov
lahf
fcoml
sbb
testb
dec
push
xor
or
daa
mov
mov
mov
cld
and
ja
cld
mov
dec
push
je
or
lret
ja
xlat
jb
imul
fwait
add
xchg
adc
insl
shll
pop
dec
stos
mov
inc
addr16
repz
addr16
push
add
pop
push
les
or
mov
movsl
inc
or
jb
iret
jo
sub
in
mov
inc
and
in
mov
lret
fldenv
pop
int3
and
insb
add
pushf
iret
xchg
push
adc
jbe
dec
xchg
test
iret
ret
mov
fsubl
mov
xchg
xchg
jle
push
mov
dec
icebp
insl
or
xchg
adc
orl
pushf
mov
je
negl
lret
mov
jo
mov
xor
into
xchg
inc
mov
push
jp
std
jae
add
xor
add
pop
push
or
xchg
sahf
out
mov
xor
cmpsb
sub
xor
mov
sbb
sbb
push
pop
xchg
adc
arpl
or
xchg
pushf
mov
dec
scas
xor
adc
xor
outsb
push
push
daa
cmp
fbld
pop
cmc
mov
sbb
xchg
sbb
xor
imul
lret
or
and
lret
cmpb
test
mov
and
lock
xlat
jne
dec
incl
mov
repnz
std
xor
scas
mov
pop
dec
lods
lods
add
and
scas
sbb
cli
sbb
mov
add
push
test
push
mov
fnsave
add
mov
xor
add
mov
push
hlt
mov
out
addr16
std
dec
in
cs
popa
imul
jg
sub
cmc
daa
add
lret
adc
nop
add
mov
ds
mov
cmp
dec
mov
popl
js
mov
out
inc
fwait
push
inc
push
int
stos
idivl
mov
inc
into
xlat
je
cwtl
jg
mov
jl
add
insb
cmpsl
dec
fadds
pop
cs
lea
push
mov
rcl
aaa
fisttpl
psubusw
mov
mov
xchg
addr16
cltd
ficoms
std
call
out
aaa
and
test
in
in
mov
mov
aad
mov
call
out
test
jl,pt
pop
push
and
lahf
push
in
inc
lret
pop
int3
push
hlt
lcall
lods
icebp
out
inc
cmp
cmp
loope
popf
roll
mov
shll
jne
mov
jg
sub
push
mov
ja
dec
test
mov
cmp
mov
subl
fbstp
add
add
roll
and
in
add
hlt
add
add
in
imul
lock
ret
mov
and
add
fucomip
scas
add
sbb
xchg
push
rcl
sub
cmc
cld
test
outsb
xor
or
insl
in
mov
inc
jo
jne
cmp
pushf
push
push
lods
inc
push
fcmovb
outsb
xor
mov
mov
int
jae
sar
sahf
lret
lds
stos
fisubrs
pop
and
out
fisttpll
scas
cmp
mov
out
inc
test
adcl
and
mov
punpcklbw
mov
in
popa
je
sarl
mov
test
dec
sub
cmpsl
cmp
mov
ja
hlt
mov
xchg
xchg
or
movsl
mov
push
lret
mov
mov
mov
push
out
rcrl
sbb
sbbl
adc
inc
push
cwtl
outsb
xor
and
xchg
repz
fisubrl
xlat
dec
test
std
adc
in
mov
add
adc
repnz
repz
push
xchg
daa
jl
mov
sbb
out
xor
mov
arpl
rcll
jnp
jo
fcomps
jge
sarb
pusha
mov
int
push
rcll
ret
std
adc
jmp
and
fwait
stc
mov
xor
in
test
cli
or
pop
pop
jb
dec
inc
push
fs
jg
jae
movsb
sub
xor
add
leave
aam
je
inc
cmpsl
and
push
arpl
mov
out
divb
mov
jp
dec
dec
imul
gs
lods
iret
insb
hlt
xchg
mov
cmpsl
ret
and
ja
mov
fld
xor
lds
add
mov
mov
add
and
dec
insl
and
push
incl
dec
mov
into
xchg
or
insl
mov
mov
movsl
jne
adc
push
or
repnz
call
fdivl
out
fdivrl
add
or
sbb
cltd
out
or
mov
jns
fnstsw
jbe
fwait
mov
icebp
insl
pop
pushf
pop
push
xchg
adc
cmp
mov
push
sbb
inc
mov
aaa
es
sbb
fdivs
cmp
adc
and
insb
dec
dec
scas
cmc
push
add
mov
sbb
std
push
imul
cmp
int3
jnp
test
sahf
xlat
cld
imul
pop
pop
dec
fnstenv
outsl
sarl
shlb
add
cld
sub
push
or
inc
das
mov
sbb
jmp
fldenv
adc
aas
arpl
inc
and
in
jp
icebp
mov
cltd
and
jge
or
add
cs
test
or
dec
test
or
cld
inc
ret
outsl
mov
pushf
add
add
fs
mov
or
dec
sbb
je
adc
inc
sub
sbb
xor
in
into
sub
dec
dec
mov
pop
jnp
xorl
les
or
repnz
aaa
mov
mov
xchg
outsl
inc
popf
aad
xor
jo
clc
rcrb
mov
fsubrs
sbb
ftst
jae
cmp
test
xchg
mov
push
jecxz
ss
jle
sub
mov
iret
sub
sbbl
inc
daa
in
jno
pop
push
data16
dec
imul
out
in
enter
movsb
and
in
jne
jle
xchg
insb
cmp
jp
add
push
lods
jae
sbbl
rclb
loop
nop
push
pop
jne
cmp
sub
mov
add
mov
mov
jns
mov
pop
or
xor
xchg
jo
std
out
jmp
jns
fidivrl
repz
shrb
jmp
sti
jne
es
std
scas
fisttpll
push
add
mov
xor
jge
jmp
mov
or
push
int3
push
imul
into
pop
mov
outsl
cli
fstps
mov
jnp
push
mov
repnz
fwait
push
push
xchg
dec
or
ret
xor
adc
cmp
push
not
adc
call
adc
push
enter
and
loope
aas
fucomi
out
cltd
sahf
iret
mov
jecxz
dec
xorb
fdivr
inc
pusha
repnz
sbbb
out
xor
add
add
sub
mov
inc
ja
scas
mov
hlt
add
add
sub
or
pop
cmp
imul
loop
mov
mov
repz
push
cmp
in
xor
dec
jp
cmpsb
popf
scas
cmp
jl
std
mov
sbb
mov
adc
lahf
idivl
ror
mov
cmpsb
scas
add
fldl
stos
mov
pop
imul
push
mov
iret
inc
dec
add
iret
int
ss
les
pop
inc
and
mov
clc
cld
lock
mov
pop
push
push
fsubs
and
push
lock
mov
cltd
add
clc
adc
and
std
xor
pop
rcrb
mov
shrb
pop
shr
cmp
adc
xchg
push
cmp
jnp
sub
ss
test
dec
fldenv
mov
push
in
sbb
mov
in
add
pop
das
imul
cmpsl
jbe
mov
pop
leave
mov
mov
xchg
sbbl
mov
in
pop
and
add
pop
insb
int
loope
aaa
hlt
sbb
mov
jp
push
scas
hlt
dec
outsb
inc
cwtl
dec
adc
adc
cwtl
popf
mov
int
mov
dec
ds
dec
or
pop
jmp
xchg
aad
pop
jecxz
pop
lcall
orb
push
adc
sti
or
pop
ror
fdivrp
cmp
mov
stos
push
lret
scas
sbb
inc
loope
daa
jae
sbb
sbb
aad
mov
outsl
pop
cmovge
loopne
fiaddl
out
int3
lret
fsubrl
jle
stos
movsb
ja
insb
lea
push
or
add
insl
cld
pop
mov
push
or
adc
gs
adc
mov
cmc
int
sbbl
xchg
mov
push
outsb
jae
mov
hlt
push
push
repz
push
ds
fucom
mov
adc
inc
ja
xchg
mov
ja
ss
aad
push
dec
xchg
cld
fidivs
jmp
fxch
xor
inc
mov
or
gs
inc
lcall
gs
aad
call
jb
push
xor
test
mov
mov
cli
cmp
xchg
test
mov
xchg
xor
popl
cli
lahf
outsl
mov
in
adc
inc
aas
aam
jo
inc
movsb
xchg
xchg
jmp
or
cmc
out
or
cmp
sub
xchg
out
enter
push
jbe
push
rclb
add
cli
add
fstpt
cmp
and
inc
das
scas
sar
xlat
pop
jb
xchg
pop
stos
std
xchg
insl
dec
sub
fwait
jb
jecxz
mov
test
pop
shll
push
cmp
nop
mov
loop
mov
lret
mov
add
mov
adc
test
dec
aam
adc
call
mov
ja
fwait
sub
sbb
push
xlat
pop
fs
inc
mov
and
xchg
mov
ljmp
sbb
aas
lods
testb
pop
xchg
lret
cltd
dec
je
daa
and
sub
cmc
push
ret
cwtl
insl
pop
dec
fucomp
adc
sub
inc
dec
lcall
sbb
cmp
enter
sub
xor
fistpl
int3
lret
pop
loop
jle
sbb
ficoml
push
iret
scas
inc
xor
xchg
jo
shl
sti
mov
gs
cli
dec
lret
int3
leave
inc
test
fwait
sub
idiv
fnstenv
ljmp
leave
adc
test
push
or
jmp
hlt
pop
push
adc
subl
ss
hlt
pop
loopw
xchg
push
shlb
xorps
mov
hlt
inc
nop
lret
mov
sub
jns
add
sbb
clc
mov
fnsave
repnz
outsb
jnp
mov
jbe
cmp
push
fwait
push
popf
and
inc
rorb
push
jae,pt
adc
jo
xchg
push
mov
push
mov
dec
cwtl
stos
ret
adc
adc
pop
dec
mov
push
test
xor
xchg
xchg
hlt
or
arpl
icebp
xchg
mov
shr
repz
out
inc
push
jbe
mov
data16
scas
adc
bound
jae
rol
into
outsl
ffree
ds
jbe
scas
ret
push
xchg
cmp
mov
ficomps
push
cld
pop
inc
ja
gs
insl
pop
adc
and
pop
rcll
cmc
xchg
mov
jbe
mov
add
or
mov
std
mov
xchg
ficompl
hlt
add
add
mov
lods
incb
ret
ret
adc
mov
push
cld
inc
xchg
fstl
dec
cmpsb
sahf
mov
pop
jecxz
outsb
out
ss
test
cmp
lea
fsubl
mov
or
idivb
push
mov
sub
adc
or
inc
inc
jo
pushf
sbb
mov
ret
shrl
adcb
loopne
subl
or
inc
pmuludq
out
cmp
icebp
cmp
mov
pop
xchg
in
lahf
and
xor
xchg
rcrl
xchg
push
xchg
mov
push
mov
cmp
and
xchg
rorb
push
pop
repnz
and
and
dec
scas
insl
cld
sub
cmpsl
fdivrl
pop
stos
test
lret
mov
xchg
cmp
jmp
sub
das
test
sbb
sub
int3
outsb
and
mull
or
pop
mov
push
or
das
lock
dec
rcrl
repnz
adc
adc
addr16
jmp
mov
cmpsb
into
loope
fistps
fidivl
leave
cltd
xchg
pop
dec
cld
pop
paddb
lods
inc
in
add
mov
mov
ja
in
sahf
push
test
mov
sbb
cmpsb
pop
out
int3
or
cmpsl
je
out
mov
mov
ffree
scas
xchg
and
xor
jnp
sbb
insl
xchg
stos
ja
fcompl
mov
and
cmp
mov
pop
loope
cs
ss
push
xor
xchg
out
jge
ss
or
fnsave
mov
xchg
leave
push
shll
call
lods
and
jge
or
add
bound
adcl
lods
xchg
and
fisubs
cld
mov
xchg
sbb
imulb
dec
mov
push
hlt
dec
jp
dec
hlt
mov
sub
out
cli
push
das
incl
ss
sub
sarb
jbe
shll
push
xchg
pop
jmp
lds
push
and
mov
aam
adc
loopne
or
movsb
pop
ret
rorl
jle
add
stc
rolb
cwtl
and
jmp
and
in
sbb
xchg
mov
int3
stc
push
movsb
or
xchg
jmp
out
addr16
cmp
je
test
aad
lock
mov
add
icebp
adcb
mov
loope
push
dec
jge
ret
cli
xrelease
xlat
add
ja
and
cmp
insb
jne
dec
je
push
inc
inc
push
adc
mov
lret
jae
and
es
aaa
or
mov
imul
in
cmp
fimull
mov
or
aas
fwait
add
outsl
dec
mov
cs
jg
popa
enter
aam
gs
xor
sub
daa
jnp
and
es
pop
sbb
pop
mov
dec
mulb
add
push
pop
sbb
mov
xchg
test
out
jmp
cmp
stos
jecxz
cmp
clc
aam
cwtl
outsb
sbb
inc
lds
es
pop
mov
sub
mov
pushf
repnz
lock
xchg
aas
scas
imul
xor
mov
daa
in
shrb
ss
lahf
add
stc
sub
imul
inc
xor
jg
xor
push
icebp
inc
sti
mov
mov
lods
sub
pusha
idiv
dec
lds
add
fistpll
sub
xchg
shrl
scas
shlb
mov
and
jmp
mov
sbbb
pop
pop
dec
bound
push
xor
sbb
stos
inc
jnp,pn
mov
das
pop
movsb
loop
or
push
insb
ret
cli
movsl
pop
push
cltd
mov
pop
push
ret
mov
sbb
std
push
mov
or
push
orl
dec
ret
or
test
enter
rol
mov
aam
mov
push
jge
inc
sbb
push
adc
mov
jbe
daa
loopne
hlt
sub
cs
xchg
cmc
mov
inc
mov
jnp
fdivp
adc
es
mov
push
loope
pop
cmp
or
into
ret
es
mov
push
xchg
subl
in
xchg
cmp
xchg
xor
in
cmpsl
add
mov
je
lods
push
xchg
dec
stos
mov
pop
xor
mov
sub
fwait
and
add
add
ja
push
dec
shr
jg
push
mov
jae
shl
add
add
add
mov
mov
stos
push
cltd
or
dec
mov
cmp
sti
mov
insl
mov
xchg
pop
cmp
int
sub
push
dec
cmp
out
lods
mov
and
jle
mov
mov
jg
out
or
divb
cmpsl
mov
mov
in
mov
cwtl
add
testl
into
ljmp
jb
lock
nop
inc
lret
jp
test
inc
push
mov
lahf
xchg
push
out
lahf
stos
enter
repnz
fwait
mov
xor
ffree
mov
dec
fsubrs
test
icebp
fs
xlat
sub
jmp
ljmp
sub
fimuls
mov
les
js
mov
xor
ret
ss
dec
insl
adc
lret
stos
cmp
jb
xlat
popf
or
sub
mov
repnz
cli
push
testl
push
and
xlat
addb
mov
pop
xchg
stos
gs
cld
in
sbb
out
pop
mov
icebp
jl
push
pop
xchg
fdivs
cmc
call
pop
in
xchg
jl
sub
pusha
jmp
jno
outsl
ljmp
pop
push
andl
push
xor
pop
jne
rcll
das
xchg
in
pop
popf
lea
mov
mov
ljmp
mov
lcall
add
mov
add
sub
fsts
aas
and
sbb
lcall
bound
ljmp
sub
adc
iret
adc
jle
sbb
movsl
push
data16
movsb
push
dec
ret
clc
mov
xchg
xchg
push
mov
and
fistpl
jl
jnp,pn
mov
pop
push
rorb
in
ljmp
jmp
xchg
int
or
movsb
mov
add
add
out
std
lret
xchg
mov
shl
ficoml
jae
or
jg
inc
out
and
shl
aaa
dec
cmpsb
or
sbb
nop
popa
jmp
mov
push
inc
jecxz
pop
lods
inc
mov
xchg
jb
jmp
ror
sub
addl
imul
mov
fs
adcb
add
bound
push
cmc
mov
push
inc
jnp
cli
adc
xchg
jecxz
jecxz
jo
mov
sub
cmp
mov
test
or
test
pop
jnp
lret
push
push
cmp
push
iret
rorb
out
xorb
jg
jmp
fsubrl
pop
loop
add
fsub
push
in
leave
and
sbb
inc
stos
push
inc
and
data16
fucom
ja
test
inc
push
xor
fdiv
lcall
lret
jno
xor
mov
inc
int3
inc
es
stos
mov
int3
cwtl
cltd
pushf
pop
sub
insb
or
mov
sub
adc
cli
push
scas
pushf
int3
mov
popa
mov
outsb
mov
cmp
ljmp
mov
jecxz
sbb
jmp
pop
push
pop
xchg
clc
mov
mov
stc
jmp
ftst
mov
add
icebp
jmp
xchg
xorl
aam
fcmovu
stos
inc
sbb
push
pop
or
cmp
and
push
inc
xor
add
out
sahf
xchg
je
js
inc
push
dec
orl
mov
pop
push
and
mov
sub
mov
lret
arpl
push
mov
mulb
mov
pop
sbb
push
jnp
xor
jle
loopne
out
or
pop
mov
sub
dec
lret
in
fcomps
adc
push
mov
mov
enter
mov
outsl
cmp
push
pushf
fisttpll
cli
and
add
stc
fdivrl
mov
xchg
inc
push
ss
push
cmpsl
mov
es
lock
xchg
push
test
push
mov
and
popa
push
mov
jae
bound
mov
fists
add
pop
jbe
jbe
rolb
and
or
pop
add
into
push
mov
jae
ret
xor
roll
nop
jg
aaa
testl
xlat
fmull
repnz
jle
sub
mov
mov
call
sbb
lahf
xor
popa
in
push
andb
mov
aad
rol
movsb
addr16
clc
xchg
xor
fcmovnb
cmp
xchg
add
popa
add
add
movsl
push
movsl
shl
divl
dec
pop
scas
mov
add
call
mov
jo
push
in
xor
xchg
ret
xchg
mov
and
sub
push
jbe
jl
fs
ds
xor
repz
clc
or
or
out
mov
sahf
add
jg
aas
into
and
xor
rorl
and
test
out
loope
adc
pop
in
aam
jl
adc
mov
testl
sarl
loopne
mov
hlt
fidivrl
mov
lahf
inc
jbe
add
xlat
mov
shl
stos
fwait
rcrl
bound
adc
adc
rorl
test
mov
in
mov
pushf
xor
mov
aas
daa
in
pop
adc
sbb
fidivs
xchg
add
dec
leave
push
sarb
sbb
mov
fidivrs
cltd
insl
bound
fsubl
mov
movsb
stos
add
cmp
pop
cwtl
dec
mov
fcoms
push
mov
rep
xor
jge
mov
xor
mov
fimuls
nop
cmp
mov
push
and
popf
sbbl
insb
add
lret
in
dec
pop
sub
jmp
addb
adc
insb
call
scas
adc
jb
ja
jmp
pushf
pop
sbb
sbb
add
add
xor
jo
inc
fsubl
in
and
and
stos
rorl
pushw
std
jae
test
jnp
pop
test
popf
push
outsl
jecxz
xor
and
imul
xor
rcr
inc
dec
fcomi
or
int3
pop
lret
dec
xchg
out
adc
mov
sub
pop
push
pop
dec
push
cs
mov
rcrb
sti
jle
xchg
jg
out
pushf
lea
and
adc
xor
push
sub
inc
loopne
imul
sub
call
jns
and
adc
adc
in
mov
or
inc
push
sub
xor
xorb
mov
mov
repnz
cli
xchg
inc
jp
mov
xor
pop
xchg
cli
fildl
cwtl
xor
mov
ror
dec
push
es
jb
jl
mov
pop
mov
stc
xchg
xor
fwait
inc
stos
sub
sbb
shrl
add
daa
shll
adc
inc
pop
jbe
push
movsl
cli
sarb
fidivs
imul
ljmp
jno
adc
pop
rcr
mov
pop
enter
icebp
or
out
sti
scas
repnz
inc
cwtl
pop
adc
nop
movsl
mul
adc
mov
rcrl
jecxz
and
sbb
pop
add
sub
cmpsb
mov
test
and
insb
outsl
test
ljmp
xor
notl
or
jge
pop
dec
loop
sbb
push
dec
pop
cmpl
rclb
mov
test
inc
test
xchg
or
sub
jmp
int
push
lods
test
loopne
push
jno
test
mov
clc
out
in
xchg
adc
mov
mov
sub
sbb
repnz
int3
les
pop
mov
inc
jge
lret
pushf
or
xchg
mov
std
xchg
sub
cmc
mov
xlat
sbb
dec
xor
jmp
stos
push
mov
adc
inc
aam
mov
fadds
fidivl
sbb
or
dec
fnsave
js
lcall
rcll
cmp
xor
adc
in
push
adc
push
jnp
xor
mov
mov
out
sub
mov
cmpsb
adc
adc
mov
add
pop
jo
bnd
test
mov
add
shl
mov
movsl
inc
mov
xlat
push
mov
push
mov
fwait
call
out
rcrb
or
lret
out
pushl
inc
push
fisubl
and
cltd
into
pop
clc
push
sahf
jb
jns
jnp
cmc
scas
out
lcall
xchg
cs
lahf
xor
add
mov
mov
aam
enter
push
es
stc
andb
data16
frstpm(287
andl
inc
mov
sub
fcoms
ja
dec
nop
in
sbb
xchg
loope
pusha
and
xor
sub
dec
jg
lret
cwtl
shlb
int
cmc
popf
mov
ss
xor
idiv
.byte
popf
pop
.byte
