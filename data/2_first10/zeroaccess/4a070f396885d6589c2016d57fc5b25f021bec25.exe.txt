push
mov
sub
mov
mov
mov
jmp
sarl
lcall
jle
jle
add
into
xlat
cmp
rol
pop
add
push
jg
rdpmc
xadd
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
sbb
popa
adc
rolb
stos
pop
push
imul
sub
add
sbb
mov
dec
dec
xor
dec
xor
xchg
fstpl
pop
loop
test
xlat
push
cbtw
dec
out
cli
cmp
dec
lock
je
in
iret
jns
loope
or
xchg
and
fucomi
and
pop
insl
les
pop
mov
add
or
lods
fadds
shll
xchg
es
in
xor
out
test
lods
test
fsubrl
push
jns
push
int3
xor
les
and
add
sub
fstpt
xor
test
lods
cmp
push
jo
add
popa
iret
ljmp
push
jg
mov
rclb
or
xorl
lock
mov
cli
pop
push
lcall
lret
or
ljmp
mov
out
out
cmpsb
sbb
fcmovne
inc
aas
pop
les
cli
loope
sub
or
testl
movsb
mov
test
xchg
data16
pop
addr16
daa
inc
adc
sbb
mov
sbb
loope
scas
incl
mov
push
jge
mov
stos
mov
jle
das
aad
sub
imul
pop
push
mov
aaa
fcmovnb
pop
jns
mov
dec
loopne
inc
fadd
dec
add
movl
cmp
jne
or
mov
andl
push
sbb
mov
sbb
xor
movl
cmpl
je
cmpl
jne
push
push
push
push
call
xor
add
dec
mov
jmp
sub
mov
adc
jmp
or
xor
jno
inc
lds
in
stos
adcb
jle
mov
jb
or
push
xor
repz
shll
arpl
sbb
inc
mov
ljmp
mov
jne
push
sbb
sti
clc
aad
add
aam
jge
ret
mov
lret
sub
cld
out
lahf
sahf
arpl
divl
orl
lret
adc
iret
mov
jne
cmp
movsl
mov
and
sbb
subl
mov
scas
shl
pop
lock
cld
test
push
es
and
sub
mov
jo
fwait
pop
test
push
ret
addr16
jnp
lahf
mov
sub
cmpps
jg
mov
imul
mov
lea
or
stos
xor
fs
dec
adc
test
mov
pop
and
adc
xchg
mov
clc
imul
and
dec
mov
jnp
adc
cmp
add
pop
sub
inc
mov
jp
sub
out
int3
lods
scas
sbb
dec
pop
cmp
pop
push
enter
and
fcmovbe
cmpps
add
test
daa
and
xor
icebp
mov
inc
sub
jmp
mov
cmp
rorb
inc
push
out
xchg
loop
mov
inc
inc
std
inc
jb
rcll
sub
or
sub
jo
mov
push
jbe
insb
fisubs
data16
inc
or
mov
in
or
rclb
pop
ror
arpl
pushf
xor
jge
rclb
jb
std
popa
lcall
fwait
sub
sbb
lcall
in
andl
test
ret
mov
push
je
adc
inc
add
cmp
add
dec
push
mov
add
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movzwl
sub
mov
movzwl
not
addl
and
xor
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
or
mov
sub
mov
mov
push
xor
or
xor
mov
orl
movzwl
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
dec
mov
or
mov
movl
andl
xor
or
inc
mov
cmpl
jne
call
cmpl
jb
movl
xor
or
sub
mov
xorl
mov
movzwl
xor
mov
lea
mov
mov
mov
lea
mov
mov
movl
mov
mov
xor
xor
xor
add
add
div
mov
cmp
je
movl
lea
mov
mov
mov
imul
mov
mov
cmp
je
mov
orl
jmp
mov
add
cmp
je
mov
andl
jmp
jmp
push
rcrb
popa
mov
xchg
add
and
add
cwtl
sub
stos
cs
aam
xchg
cld
sub
push
xor
fidivs
inc
xchg
cmp
ljmp
sbb
xchg
ja
ja
fisubl
scas
adc
into
adc
jbe
jle
mov
jns
je
mov
hlt
or
mov
xchg
movsb
jecxz
lret
sahf
push
mov
aaa
sarl
push
ret
aas
mov
mov
jle
ss
cmp
mov
jmp
data16
aad
mov
call
fists
pop
imul
clc
imul
and
lea
jmp
and
xchg
lea
sub
test
sahf
repz
jae
pop
scas
xchg
stos
cmc
cltd
cwtl
mov
in
cwtl
or
jae
adcb
cmpsb
out
xchg
mov
clc
addr16
fimuls
push
cmp
pop
xor
es
hlt
jae
cmpsl
in
pushf
mov
jae
xor
jnp
add
and
mov
inc
jl
arpl
and
jle
adc
lcall
outsl
ss
cmpl
ja
push
outsl
mov
adc
xchg
lahf
pop
fucomip
loop
push
xchg
mov
sbb
ds
jb
jp
ljmp
push
in
lds
xchg
popf
push
cmp
es
roll
xchg
xorb
xchg
sarb
sti
sqrtpd
imul
ret
movb
xchg
test
daa
add
sbb
sub
fmuls
mov
or
es
push
mov
push
aaa
cwtd
shrl
mov
mov
std
into
jmp
fmuls
adc
pop
fadds
scas
add
pop
fisttpll
call
bound
inc
hlt
jmp
f2xm1
addr16
ja
icebp
jo
mov
and
js
jle
jl
jle
lds
or
jo
or
orl
aas
mov
jmp
es
lds
pop
add
outsl
js
mov
cs
mov
lds
imul
jg
imul
mov
fidivrl
jecxz
sbbb
push
adc
inc
fdivl
cmc
push
rcl
mov
test
push
shrl
sub
popf
call
xor
inc
adc
inc
adc
xor
test
test
pop
js
jecxz
sub
roll
inc
addl
jmp
mov
push
mov
jecxz
mov
push
mov
fsubrl
mov
insl
fnstcw
lods
adc
stc
push
lahf
cwtl
xchg
sbb
cmp
cmp
dec
subl
xchg
cs
pop
popf
xchg
lods
sub
push
dec
pop
xor
gs
jbe
and
mov
js
out
pop
add
xchg
jns
pushf
mov
fisubrs
pop
cli
xor
adc
ds
sbb
pop
xchg
ds
mov
dec
jne
imul
xchg
in
fmull
dec
shrb
fdivl
fistpll
jl
shll
mov
pop
jmp
dec
jg
cmp
xor
bound
adc
jne
lea
popf
in
sbb
mov
rcrb
nop
pop
mov
cmpsb
and
mov
hlt
popa
sub
cwtl
arpl
add
fcmovb
add
imull
shll
push
clc
fidivs
js
add
pusha
xchg
jle
or
mulb
loop
sarb
jl
cld
test
add
xchg
cmp
pop
dec
repz
es
imul
test
xor
add
in
jmp
cli
arpl
mov
mov
je
inc
inc
mov
add
cs
ret
out
frstor
fwait
lea
cmp
jmp
js
sub
mov
xchg
ss
jle
add
cmpsl
lahf
add
jbe
lock
fst
mov
stos
xor
pop
push
sbb
inc
jge
or
dec
repz
inc
dec
pop
lret
and
out
adc
xor
sub
rcr
add
aad
out
test
leave
push
iret
out
leave
insb
lret
jnp
pushf
test
int3
or
iret
adc
leave
jg
jns
les
rclb
repz
jmp
xor
movl
mov
ja
pop
mov
xor
pop
jae
mov
push
in
out
call
mov
scas
add
or
inc
inc
dec
xchg
mov
mov
out
jno
xchg
test
lret
and
mov
mov
inc
loope
aaa
scas
jl
jne
mov
mov
idiv
jecxz
push
les
mov
std
pop
addb
cmp
into
or
or
movsb
inc
add
cli
mov
cmpsl
mov
push
js
mov
ficomps
pop
scas
in
pop
inc
repnz
pop
lds
cltd
cmp
push
mov
push
xchg
subb
or
fnsave
mov
mov
jmp
sbb
adcb
js
outsl
sub
icebp
jo
xchg
call
mov
mov
xchg
aam
fs
mov
mov
movsb
repnz
fsubs
into
cwtl
adc
add
call
jbe
scas
cli
imul
sub
xor
jp
or
stos
xchg
dec
cwtl
dec
xchg
clc
std
stos
insb
cmp
jl
jle
addr16
mov
xchg
jmp
and
mov
xor
sub
je
push
int3
and
push
xor
dec
dec
aaa
jno
push
addr16
shl
mov
es
sbb
xchg
mov
cmp
jl
xchg
xor
lods
mov
add
mov
jmp
std
jecxz
es
popa
popf
popa
push
out
inc
jo
dec
cmp
jle
jl
jle
dec
repnz
sti
dec
xlat
test
testb
clc
inc
dec
dec
cs
popa
inc
mov
enter
pop
test
test
or
or
test
pop
movsl
push
rcrb
sbb
mov
loopne
popa
dec
mov
adc
add
pop
xor
add
shll
push
lcall
incb
dec
ficompl
xor
shll
mov
dec
stos
push
and
sbb
push
xchg
mov
popf
cmp
xor
xor
sbb
or
ja
inc
cmpsb
xor
rolb
xchg
xchg
push
test
dec
pop
mov
dec
rorl
mov
mov
or
xor
les
or
xor
lods
outsb
mov
push
cwtl
das
jge
scas
pop
filds
sub
fisubrl
mov
push
lea
aam
push
push
xchg
addr16
in
shrb
adcb
enter
mov
dec
inc
scas
mov
fdiv
cs
or
cmp
je
jge
lret
push
mov
pop
nop
add
movsl
dec
xlat
movsb
arpl
inc
imul
ror
xorl
lock
push
pop
call
fwait
push
jl
push
lret
xor
stos
fwait
ljmp
lahf
ds
mov
mov
call
fsubrs
pop
jge
insl
push
inc
xchg
adc
jne
sub
bswap
hlt
pop
mov
xor
sbb
sub
lock
rclb
xchg
mov
inc
rcr
dec
lahf
movsl
sbb
aam
mov
insb
adc
fwait
test
pop
cmpsb
mov
aam
push
fs
adc
inc
mov
cmpsb
cmc
ret
xchg
push
int
jl
pop
pop
insl
adc
fwait
out
cmp
sti
jecxz
xorl
jmp
mov
mov
xor
mov
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
mov
add
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
xor
xor
sub
push
addl
jmp
cmp
push
imul
jle
fnstsw
pop
mov
stos
or
addb
flds
aam
jae
dec
pop
repz
test
insl
out
inc
push
cmp
mov
enter
cmp
cltd
iret
aam
sub
sub
lret
daa
test
cwtl
sti
lods
push
mov
cwtl
test
incb
jmp
fildll
sbb
mov
xor
mov
lcall
lea
stc
push
push
push
insb
cs
popf
and
pushf
clc
lcall
cmpsl
lcall
dec
and
cmp
jmp
aaa
fwait
push
mov
adc
or
mov
mov
push
in
and
sbb
push
pop
inc
sub
divl
lahf
js
lds
mov
lods
push
rolb
test
aam
pop
xchg
in
lea
sub
adc
rorl
pop
scas
test
data16
push
add
jae
out
push
cmp
enter
aad
cmpsl
cbtw
adc
or
stos
xchg
int
cmp
mov
mov
cmpsl
add
push
xor
or
sub
iret
icebp
leave
cmp
cmp
pop
mov
pop
mov
pop
subb
mov
ljmp
outsl
addr16
mov
dec
fs
cmc
rorl
cmpsb
mov
iret
add
imul
sbb
jo
adc
add
lods
xor
mov
nop
sti
inc
sbb
jg
testl
lcall
lods
adc
mov
negb
sbb
jg
cmp
push
mov
xor
into
push
out
bnd
sbb
adc
jae
pusha
jecxz
or
cmp
or
mov
and
xor
sub
push
mov
pop
dec
push
adc
add
clc
fstl
or
pop
aaa
call
lahf
xchg
mov
mov
scas
test
pop
test
aad
dec
mov
or
arpl
sub
mov
sbb
push
stc
in
pop
jmp
adc
push
lods
push
push
xchg
testb
jbe
jne
lahf
cmp
jbe
test
pop
sub
aaa
mov
aas
pushf
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
pushl
pushl
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
movl
jmp
inc
testl
pop
sbb
test
jl
jle
dec
mov
push
dec
xor
cwtl
sbb
repnz
flds
cwtl
sub
add
mov
dec
xchg
push
into
loope
fisttpl
addr16
mov
mov
pop
comiss
push
je
xchg
pusha
lret
stos
test
or
arpl
imul
adc
sbb
xor
ret
cmp
mov
and
sarl
push
imul
cmp
stc
jbe
inc
cmp
mov
xchg
sbb
jle
sbb
push
repz
sub
mov
adc
cmp
mov
cli
xchg
mov
pop
push
shlb
leave
cs
cwtl
lret
fmull
scas
int3
xchg
mov
cmpsb
fwait
mov
or
push
and
pusha
clc
movsb
pop
scas
popa
pushf
enter
inc
mov
je
xchg
or
sub
push
push
xchg
push
push
add
dec
mov
insb
or
aaa
push
and
daa
jmp
out
mov
xchg
jmp
push
enter
mov
divb
and
mov
lahf
xchg
adc
sahf
cmp
insl
in
fists
sbb
and
and
loope
rolb
dec
jmp
dec
jbe
repz
and
mov
test
fs
xchg
xlat
dec
mov
lcall
rol
pop
push
out
push
pop
mov
shrl
outsb
movsb
adc
jmp
mov
loop
aaa
mov
inc
shll
pop
push
cmp
sub
movsb
jge
push
adc
push
xor
sbb
pusha
mov
clc
lcall
mov
cli
dec
fdivrs
add
or
cmp
adc
mov
test
push
fwait
subl
fildl
cmp
sub
mov
test
jle
xchg
jb
pop
ja
aas
mov
cli
jb
sub
and
dec
push
jnp
out
push
sub
into
imul
frndint
pop
shlb
mov
add
adc
clc
push
mov
xor
mov
push
mov
add
cmp
je
mov
jmp
and
push
xchg
cs
mov
insl
movsb
sahf
lds
jle
fnstsw
push
mov
fcomp
mov
fstpt
daa
mov
xor
or
lods
inc
adc
push
mov
jnp
adc
inc
scas
or
jno
cmp
je
movsb
test
sahf
aam
fildl
push
sbb
movsb
pop
sbb
mov
in
mov
jns
xor
idivl
scas
jne
mov
shlb
sbb
test
das
gs
sbb
iret
sbb
pop
jbe
les
inc
mov
jge
push
adc
js
mov
xor
xchg
sub
aaa
adc
mov
or
mov
test
inc
push
es
dec
push
xor
lods
and
movsl
mov
into
scas
and
and
or
loop
cmpsl
inc
lret
mov
aas
lea
jb
dec
sbb
sti
pop
shlb
adcl
iret
imul
fwait
xchg
mov
popf
xor
push
pop
mov
subl
les
inc
add
xchg
push
push
and
mov
xchg
out
cmovo
or
adc
mov
jne,pt
xor
aaa
cmp
sbb
out
lock
stos
pop
mov
fbstp
or
jmp
pop
pop
xchg
imull
xor
sbb
mov
pop
pop
dec
adc
jno
fmuls
insb
hlt
or
mov
xchg
popa
imul
cli
int
stos
das
xchg
mov
cld
sbb
flds
aas
mov
mov
sbb
dec
mov
arpl
hlt
cmp
adc
mov
dec
fs
stos
cld
popf
mov
push
mov
int3
adc
mov
test
les
lods
inc
icebp
sbb
jl
popf
xor
pushl
icebp
mov
xor
sbb
cmp
cmp
mov
mov
lods
sarb
test
or
push
shl
addl
iret
sub
jno
adcb
loop
mov
test
adc
fnsave
mov
inc
jbe
push
mov
add
ss
jbe
aas
js
enter
pop
sbb
movsb
xor
mov
mov
xor
mov
sub
add
xor
add
jmp
jl
fsubl
sbb
aas
cmpsl
xchg
lods
sbb
jl
jle
push
repnz
adc
jg
dec
lret
jae
add
ret
movsl
add
movups
lcall
lods
loopne
mov
cmpsl
dec
out
repz
pop
repnz
sub
pop
dec
insl
xchg
in
flds
push
roll
and
movsb
pop
xor
jbe
std
xchg
into
sub
push
mov
inc
mov
sarl
mov
test
adc
sbb
leave
inc
ss
jp
imul
or
and
stos
xlat
pop
pop
sbb
sbb
adc
pop
and
out
jecxz
scas
fisttps
insl
dec
hlt
lcall
subl
test
mov
adcb
mov
jl
cwtl
sbb
je
jbe
xlat
xchg
add
dec
mov
lret
pop
ret
adc
cmc
roll
int
and
pop
cmp
ret
in
aam
pop
das
inc
in
push
adc
sysenter
int3
into
push
ficomps
ja
ja
xchg
shll
mov
jne
cmc
int3
mov
dec
sub
int
sub
jnp
dec
adc
hlt
jmp
dec
or
lea
jo
lock
icebp
push
test
lcall
mov
ja
add
cmpsb
add
arpl
xor
fsubl
or
push
and
enter
data16
mov
cmpsb
movl
adc
dec
xchg
dec
or
push
cmpsw
lahf
inc
jp
mov
addr16
mov
adc
insl
add
mov
popa
in
mov
std
add
pop
xchg
mov
adc
push
cmp
shlb
iret
pop
daa
jecxz
cmp
ficoml
loope
adc
mov
aad
loopne
mov
shlb
cwtl
jecxz
mov
scas
and
adc
loope
mov
mov
jb
adc
pusha
out
cmc
mov
or
cmc
pushf
ds
shlb
repz
adc
fmuls
mov
popf
aas
aaa
jnp
jae
mov
fisttps
push
mov
in
fldcw
sbb
out
sub
and
pinsrw
or
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
mov
and
mov
movl
xor
mov
orl
add
not
movzwl
mov
or
movb
movzwl
adc
jmp
popa
test
mov
sub
addr16
fstps
jle
pop
jl
jle
fstl
in
in
sbb
xor
inc
lret
popf
jae
int3
lock
lret
pop
cli
cmp
int
mov
stc
sbb
inc
dec
insb
or
ljmp
aas
push
movsl
cs
inc
repnz
test
cmp
add
sbb
dec
xor
loope
in
sub
xchg
sbb
hlt
xchg
imul
pop
fcoms
icebp
jnp
movsl
xor
and
cmpl
xchg
jbe
stos
cmovnp
sub
inc
aam
mov
xchg
cmpsb
cmp
add
lret
outsl
gs
adc
cmp
and
jge
sub
cltd
jne
xchg
xor
sbb
xlat
mov
arpl
lahf
testl
test
xorl
lret
sbbb
xchg
adc
xchg
fists
push
mov
out
cmp
jnp
in
cwtl
pop
sub
xlat
mov
stos
jl
mov
xor
cmp
mov
mov
or
ljmp
sbb
push
adc
hlt
sbb
aas
fiadds
push
nop
lods
mov
repz
add
test
mov
dec
scas
sbbl
imulb
inc
jnp
push
mov
add
scas
jmp
or
ja
mov
repz
loope
xor
sbb
lock
dec
xor
add
cmp
movsl
lods
data16
mov
xchg
shll
sub
ss
iret
mov
movsb
sbb
mov
fcomi
in
je
cmp
sub
cmp
jmp
sbb
lcall
lret
insl
orl
lcall
lock
xor
lahf
fwait
cld
push
nop
push
idivl
dec
mov
test
xor
lcall
xchg
jecxz
mov
cmc
enter
push
outsl
xor
dec
cmp
fnstcw
push
fwait
mov
cld
jmp
or
inc
std
add
push
push
nop
jmp
sbb
movsb
xor
movb
int
jns
fists
cld
sbb
shll
inc
pushf
push
mov
inc
xlat
out
sub
in
inc
add
adc
sbb
out
sbb
cmc
call
mov
or
pop
movsl
clc
hlt
fcoms
pop
mov
push
jmp
add
jmp
jmp
fildll
cmp
mov
adc
xor
xlat
call
lret
ss
fcomip
dec
inc
fistpll
adc
gs
fistl
xor
aam
ss
or
scas
jb
int3
je
sub
jp
mov
out
cltd
rorb
jno
in
lea
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
adc
mov
negl
mov
xor
jmp
sbb
sarb
repnz
jns
push
std
mov
jl
jle
into
in
and
jecxz
push
cmp
xor
out
jno
lods
mov
dec
cmpsl
inc
fcmovnbe
pop
inc
sub
in
sub
mov
jns
mov
cmc
enter
lods
xor
inc
push
loope
aad
push
jae
inc
jge
mov
sbb
enter
mov
add
and
cmp
vpcmpeqb
out
mov
out
je
dec
shlb
adc
and
clc
mov
loopne
or
outsb
sub
mov
add
add
test
arpl
jae
ds
cmp
rorb
mov
fmul
dec
pop
xchg
xor
ret
inc
dec
lods
fimuls
pusha
xchg
fstl
les
test
sub
cmpsb
imul
pop
incl
clc
or
addr16
mov
jne
cmp
mov
inc
push
xlat
fcomi
dec
hlt
and
imul
loope
push
jbe
pop
mov
mov
movsl
push
jns
add
inc
mov
dec
sub
cmp
mov
jg
fstpt
pop
lcall
jno
xor
or
add
dec
pop
ret
test
out
outsb
sbb
jle
dec
push
subb
aad
enter
jmp
in
lret
hlt
xchg
jae
jge
dec
mov
imul
pop
sub
fildll
fbld
popa
mov
call
sbb
or
add
dec
loop,pn
cs
stos
fwait
jne
ficoml
dec
fadds
ja
pushf
int
cmp
xchg
adc
mov
pop
lods
insl
mov
mov
cmpsb
sahf
add
mov
insl
shlb
lods
sub
jns
or
std
or
lds
sti
iret
std
fcompl
cmp
push
or
std
pop
icebp
cmpsl
add
xchg
and
adcl
hlt
pop
sub
in
xchg
dec
pop
jg
push
lods
push
push
jb
xor
cltd
mov
pusha
outsl
aam
or
mov
dec
dec
add
inc
mov
push
sbb
loop
lahf
sbb
adc
sub
fs
fldl
leave
in
outsl
jbe
insl
icebp
pop
push
in
cwtl
lea
lcall
fwait
daa
adc
les
pop
lods
mov
or
lods
and
mov
aas
stc
and
inc
jle
inc
jno
pop
mov
mov
sbb
inc
sbb
stos
cmpsl
divb
gs
das
jecxz
dec
int
inc
add
xor
pop
xor
mov
mov
xor
adc
movl
movl
xor
or
adc
mov
not
mov
adcl
push
add
xor
mov
movl
add
movl
jmp
mov
movl
mov
inc
movl
cmp
movl
jb
and
mov
sbbl
mov
xor
addl
add
cmp
je
adcl
push
inc
push
mov
mov
sub
add
mov
andl
mov
xor
movzwl
xor
mov
mov
orl
add
addl
movzwl
sbbl
mov
and
mov
sbbl
movzwl
xor
decl
add
mov
mov
jmp
xchg
sbb
icebp
adc
mov
mov
jl
jle
and
fistpl
and
sub
lds
sub
xlat
jb
test
sub
stos
jns
mulb
cmp
rol
pop
or
cmp
dec
enter
in
shll
cmpsb
pop
dec
insl
push
adc
xor
inc
mov
in
scas
push
stc
notb
mov
les
and
inc
sub
fcmovnu
clc
call
and
int3
cld
dec
jne
inc
sbb
icebp
int
mov
inc
addr16
or
adc
outsl
orl
inc
hlt
fs
mov
dec
dec
sub
mov
mov
repz
sbb
rcr
push
and
push
lcall
stos
mov
popl
push
xchg
leave
mov
or
dec
pop
pop
or
sti
ja
sbb
push
test
pop
xchg
stc
lods
jae
pusha
inc
xchg
and
outsb
ljmp
adc
icebp
bound
adc
cmp
fistps
mov
jecxz
rol
out
and
andb
mov
xor
pop
cmp
ret
jle
inc
mov
test
popa
push
fdivrl
sbb
or
rorb
or
xlat
inc
jo
mov
test
cmp
inc
ja
nop
push
dec
xor
shr
mov
stos
int
push
repz
daa
pop
xchg
aas
dec
outsw
mov
shl
inc
mov
add
add
xchg
pop
cmp
xchg
cs
mov
xchg
mov
xchg
dec
jle
nop
sub
out
aaa
add
mov
jmp
jg
test
cmpsb
faddl
loopne
dec
push
jno
in
loop
add
jns
dec
mov
inc
outsl
insb
rcrl
movsl
mov
push
xchg
cmp
loopne
rcl
sbb
adc
sbb
jo
test
pop
in
decl
dec
fnstcw
testb
jo
add
push
in
inc
mov
and
les
mov
push
jb
outsb
imul
adc
dec
lods
mov
mov
inc
xchg
push
sub
in
hlt
test
das
dec
xchg
scas
pop
xor
mov
pusha
mov
loopne
cmp
jnp
push
nop
sub
stc
imul
pop
arpl
int
or
adc
out
int3
stc
es
sub
inc
xchg
jp
lea
cmpsl
flds
out
xchg
or
or
mov
or
jecxz
pop
mov
lds
cmpsb
stos
movsb
sti
or
pop
les
jge
pop
add
fisubs
xchg
rcrl
sub
cmc
mov
inc
hlt
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
jmp
pop
arpl
out
xchg
imul
xor
mov
jle
pop
jl
jle
pop
add
sbb
mov
js
scas
dec
fisttpl
push
mov
xchg
xchg
mov
xor
dec
push
jb
cs
push
push
push
roll
xor
xchg
pop
cmp
filds
xchg
push
sbb
jmp
inc
adc
div
je
imul
cmpsl
xchg
cmp
cmpsb
lcall
sub
aas
mov
sbbl
jns
inc
into
push
push
pop
pop
rcr
cmpsl
ss
mov
or
push
aaa
mov
je
div
dec
sbb
lcall
fimuls
and
pushf
adc
mov
pusha
mov
push
and
inc
cmc
cmpsl
lds
mov
les
jle
lock
pop
mov
jo
xchg
sbb
push
cmp
pand
xor
rol
rol
dec
movsb
sbb
inc
popf
adc
fnstsw
mov
add
cs
mul
sbbl
add
mov
sub
out
scas
imul
inc
sub
cli
or
cmc
cs
jle
push
cmp
xchg
mov
add
push
cmp
pop
sub
mov
mov
xor
jge
push
dec
stc
ljmp
scas
sti
pushl
lret
into
adc
adc
adc
stos
jae
inc
orb
cmp
xor
sbb
pop
dec
popf
jnp
cmp
out
stos
and
sub
mov
movsl
sub
push
add
in
mov
cmp
mov
test
out
mov
enter
xchg
push
xor
aaa
pop
push
pusha
fcoms
sub
rcrb
test
jle
sbbl
jns
jno
xchg
cs
rorb
cmp
and
bound
or
sub
mov
sahf
mov
shll
pop
insb
dec
pop
sbb
mov
cs
sbb
mov
pushl
inc
loope
subb
adcb
sub
test
mov
cltd
in
leave
out
push
jbe
fidivrs
mov
push
cltd
cmp
sbb
push
daa
stos
psrlw
and
fsubrl
in
adc
je
out
das
jae
mov
mov
dec
cmp
add
idivb
gs
push
dec
push
out
pop
pop
sti
cmc
jns
ret
mov
repz
mov
scas
test
adc
nop
mov
cmp
fimuls
das
dec
movsl
mov
sbb
pusha
sbb
adc
xchg
mov
mov
dec
dec
decb
add
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
jmp
addr16
movsl
insl
jne
in
shl
out
cmp
repnz
jle
pop
jl
jle
lahf
cmp
jecxz
push
scas
call
mov
push
jns
in
in
jl
mov
inc
fisubrs
cmp
lods
inc
inc
inc
out
hlt
dec
or
mov
inc
jae
xchg
inc
call
cmpsl
fs
pop
js
and
jmp
jecxz
jp
sub
sub
pushf
inc
outsb
lock
add
scas
sub
std
add
xchg
inc
or
sub
sub
or
rcr
jo
mov
test
mov
add
cmp
pop
adc
out
xor
cld
adc
jle
daa
out
in
pusha
scas
and
fsubrs
jl,pt
mov
repnz
xor
inc
mov
cmc
sti
lcall
lret
or
leave
cwtl
and
xor
sarb
movsl
jne
dec
mov
hlt
addb
xor
mov
cmp
jne
xlat
fmuls
sti
xor
xlat
push
stc
jecxz
daa
cs
fwait
push
das
mov
inc
push
push
pop
mov
test
mov
inc
sub
inc
movsb
xchg
mov
aam
sbb
rol
in
sbb
xor
mov
shlb
adc
or
stc
loope
ss
sbb
jne
pop
mov
popf
jo
mov
jle
popf
ret
adc
arpl
sub
aad
mov
sub
es
sbb
and
mov
cmp
fnstsw
or
loopne
in
jmp
mov
and
dec
add
lahf
mov
and
and
mov
inc
cmpsl
std
pop
or
push
inc
cmp
mov
xchg
sub
mov
out
mov
addr16
adc
int
sbb
push
das
inc
stos
cmp
jns
leave
gs
jmp
fcompl
xlat
out
rcl
loop
popa
es
jge
jnp
rcr
int
pusha
xor
xlat
imul
xchg
mov
fwait
push
outsb
jns
fsubrl
lods
cmc
sub
or
push
hlt
mov
aam
push
dec
or
int3
xchg
outsl
mov
mov
movsl
cmp
and
test
xor
iret
loope
test
rorl
jns
sub
push
push
clc
sub
gs
and
mov
std
inc
sbbb
cmpsl
push
lret
or
les
sbb
xlat
test
cmp
mov
gs
jl
fidivl
mov
ret
fisttps
ret
fists
icebp
dec
mov
divb
cld
or
pop
jns,pn
loop
mov
popa
test
mov
imul
testb
push
sub
rorl
add
or
xchg
cld
decl
mov
jmp
jnp
ljmp
cmp
fstpl
jle
pop
jl
jle
cwtl
and
pop
mov
adc
rcll
xchg
test
dec
and
mov
sub
pushf
outsb
lods
sbb
hlt
push
test
push
xorl
cmp
call
sub
in
xor
jbe
jmp
les
int3
lds
inc
sahf
orl
outsl
pop
js
fsubr
dec
shrb
cld
mov
sahf
roll
lds
int
pop
jecxz
inc
or
adcb
sbb
inc
iret
and
dec
aas
mov
loopne
mov
inc
push
icebp
fnstsw
int3
mov
daa
adc
pop
sbb
push
dec
pop
jl
lcall
arpl
fwait
xor
arpl
out
cmpsb
or
mov
sti
pushf
pop
roll
das
aam
stos
out
ss
push
mov
xchg
ja
jecxz
jle
push
jmp
loope
mov
repz
lret
les
fisubrl
pop
int
imul
ret
mov
popa
pop
xor
jne
ljmp
mov
adc
repz
cs
js
add
mov
mov
in
dec
cmp
stc
jnp
sahf
mov
scas
xchg
int3
sbb
fwait
mov
xchg
lods
inc
cmp
sub
xor
loopne
js
mov
mov
sbb
ljmp
ljmp
or
call
sahf
jp
push
dec
mov
mov
jb
loope
sbb
shlb
mov
lret
inc
pop
out
adc
sub
fwait
mov
inc
sbb
arpl
xor
hlt
cmc
packssdw
loop
push
pop
stc
inc
daa
xchg
sub
movsl
push
or
cmp
inc
mov
mov
stc
xor
dec
fcomip
fsubs
test
in
xchg
add
shrb
push
add
enter
mov
jmp
flds
add
stc
mov
sub
or
imul
and
mov
cmp
fs
jne
adc
movsl
popf
in
in
mov
push
cmp
rorb
push
scas
dec
dec
xchg
mov
xchg
xchg
push
int
cmp
xchg
fnstsw
nopl
hlt
dec
in
sbb
je
jbe
inc
fstpl
out
push
jle
mov
imul
in
sbb
xchg
loope
test
into
lds
and
into
jbe
adc
scas
les
into
jne
push
sbb
cmpsb
mov
push
sbb
xchg
aas
inc
mov
mov
into
repz
inc
cli
or
int
add
mov
pop
leave
ret
push
mov
push
push
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
push
push
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
and
movl
adc
movl
movzwl
xor
mov
sub
push
xor
mov
mov
mov
xor
xor
jmp
fiaddl
imul
mov
sbb
dec
jl
jle
movsb
pop
push
mov
push
dec
mov
push
dec
in
imul
outsl
popf
dec
jmp
in
les
dec
add
imul
cmp
xor
adc
and
xchg
mov
push
test
cmc
jbe
dec
aaa
pop
insb
mov
notb
pop
mov
mov
pop
mov
dec
sbb
std
repz
movsl
xchg
and
mov
and
loop
cmc
dec
notl
fwait
mov
mov
xor
mov
inc
xor
lods
icebp
cmp
out
sti
enter
imul
xchg
adc
pop
push
aad
insl
icebp
xchg
xchg
pop
jecxz
das
scas
stc
cmpl
and
testl
or
lods
push
push
dec
push
cltd
test
pop
fstps
and
lods
ret
adc
xchg
aam
jecxz
mov
stos
mov
fwait
push
adc
bnd
movsl
jae
add
lea
sbb
fisttps
repz
shr
mov
xor
push
lea
or
cs
mov
jle
xor
or
mov
aad
add
push
cltd
scas
and
scas
testb
xlat
mov
inc
jle
stos
repz
andb
stos
jno
xchg
pusha
test
dec
or
es
repnz
outsb
popf
sub
das
daa
or
jle
ja
mov
scas
leave
mov
scas
rclb
fsts
cli
inc
std
sbb
mov
aad
dec
es
mov
pushf
std
stos
xlat
mov
mov
stos
nop
mov
xchg
pop
push
mov
dec
dec
test
sub
mov
push
into
ficompl
scas
cmpl
es
push
pop
jge
iret
xchg
jno
or
rcr
in
mov
or
js
jge
lods
inc
cmp
movsl
and
dec
push
mov
mov
ror
aad
jp
jo
ret
mov
sti
mov
pop
jl
cld
xchg
mov
push
in
outsb
daa
adc
mov
aad
lret
movb
cmp
cmpsl
sub
ret
cmp
adc
das
cmp
push
cwtl
gs
sbb
xchg
iret
jbe
and
test
lcall
jge
sbb
inc
xchg
imul
pop
mov
push
sub
mov
stos
inc
inc
loopne
sbb
inc
push
mov
pop
sub
cmp
stc
xchg
push
ret
jp
seta
sarl
xchg
sub
into
das
cmp
add
movsl
mov
inc
dec
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
jmp
rclb
mov
mov
cli
pop
fiaddl
jle
jl
jle
andb
test
test
cmp
mov
sbbb
pop
inc
jmp
jge
mov
pop
or
in
lds
mov
call
push
loope
push
push
xlat
and
aas
xchg
sahf
aad
scas
sahf
dec
jno
adc
ja
scas
cmp
aas
popa
cmp
xchg
imul
add
sbb
imul
movsb
repnz
ret
pop
imul
dec
aaa
push
pop
adc
test
cli
cmp
push
cmpsl
ja
xor
pop
ja
outsl
rorl
es
mov
loope
fwait
push
fnsetpm(287
add
bound
sbb
dec
push
loopne
xchg
push
aaa
out
gs
cmp
xchg
popf
sar
xor
ret
mov
inc
push
mov
pop
pusha
outsb
inc
repz
repz
jmp
mov
xchg
loopne
xchg
fwait
or
insb
outsl
mov
in
or
cmp
sbb
repnz
add
jmp
fmuls
adc
fcoml
clc
testl
leave
popa
inc
dec
ret
jns
jno
mov
into
icebp
into
arpl
mov
lods
icebp
out
scas
hlt
or
jle
inc
scas
in
imul
mov
test
and
cvtdq2ps
in
mov
std
xchg
decl
pop
call
mov
or
icebp
push
shrl
pusha
nop
pop
sub
or
push
pop
dec
pop
sahf
je
cmp
xchg
mov
inc
sub
add
inc
cmc
and
pop
inc
pop
inc
and
fcmovnb
int
xchg
or
fidivl
rol
pop
adc
fisubl
popa
push
fistpl
sbb
faddp
and
mov
sbb
push
pop
icebp
aam
push
xchg
dec
hlt
push
das
stc
mov
and
pop
mov
pop
cli
or
dec
mov
cmp
add
addl
aad
je
push
fwait
cld
icebp
and
sub
lock
int3
push
icebp
inc
ret
lock
repnz
push
inc
mov
adc
icebp
sub
pusha
fs
adcb
add
cltd
push
ret
lret
test
jo
mov
scas
into
call
test
enter
cmp
jg
js
sti
mov
negb
out
sarb
shrl
inc
xchg
lds
inc
xor
fwait
leave
and
mov
add
pop
popf
addb
lds
push
inc
mull
arpl
or
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
jmp
test
insl
mov
ret
into
xor
and
lahf
jl
jle
pop
call
add
xchg
es
jno
loopne
ds
adc
dec
popf
repnz
add
outsl
add
adc
jp
sahf
sbb
repz
sub
aam
in
add
lock
orb
insl
enter
dec
dec
xor
add
sbb
int
xchg
leave
jb
fistps
scas
sbb
or
pop
ja
lods
and
or
mov
or
jno
loop
cmp
adc
outsb
popa
outsl
push
xor
nop
clc
and
dec
or
aam
mull
out
mov
outsl
xchg
out
cs
fcomps
dec
mov
inc
sbb
adc
push
loope
jmp
push
cmp
loopne
mov
test
sub
inc
inc
push
mov
sbb
cld
mov
into
popf
xor
jb
and
data16
orb
fisubl
fsubs
and
ret
mov
dec
jae
jl
push
jl
push
pushf
dec
inc
and
pusha
rclb
scas
ficompl
adc
inc
mov
aaa
popf
push
jae
or
and
inc
je
stos
in
int3
xchg
std
lea
mov
or
pop
xchg
mov
cmp
jns
lds
dec
pusha
jnp
sub
adc
mov
std
xchg
fcmovb
inc
stos
ljmp
cmpsb
adc
or
rcrl
xor
cwtl
xchg
inc
shlb
cwtl
adc
pop
aas
ficoms
adc
sub
call
data16
out
push
inc
xor
testl
popf
popa
rcrb
mov
mov
fs
fsubrp
dec
xchg
jp
insb
leave
aam
dec
lods
outsb
push
data16
and
xchg
js
cmc
pop
adc
cmp
daa
loope
divl
mov
jmp
in
jns
xlat
sbb
clc
pop
sub
sarb
xchg
addr16
loop
sbb
int3
jo
adc
loopne
movsl
cwtl
dec
dec
in
shl
aaa
mov
xor
mov
out
add
aam
add
mov
jmp
xchg
mov
addr16
and
jo
xor
clc
cwtl
les
add
dec
cmp
sahf
int3
lcall
lret
out
shr
icebp
enter
jnp
add
movl
and
mov
sbb
mov
mov
orl
xor
add
decl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
sub
mov
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
push
mov
mov
add
mov
jmp
fs
in
lret
popa
jno
mov
mov
lea
jle
lahf
jl
jle
ja
jge
das
adc
les
add
lods
mov
mov
dec
dec
sbb
adc
mov
stc
pop
xor
or
sbb
test
push
push
lahf
mov
push
lidtl
sbb
add
das
jb
jge
jge
cmp
in
jle
movsl
sbb
clc
lret
fcoml
mov
loop
fsubrs
ffreep
push
mov
xchg
call
add
xchg
test
add
xor
or
xor
xor
add
insl
les
leave
mov
fiaddl
daa
sti
inc
or
xchg
mov
push
mov
mov
pop
pop
push
scas
add
test
fldenv
mov
daa
mov
or
mov
sbb
mov
xchg
in
out
inc
movsb
lock
mov
icebp
cmp
sarb
outsb
mov
insb
dec
ficoml
push
inc
xor
sbb
cltd
call
add
mov
pop
imul
lods
push
jmp
mov
scas
test
and
mov
test
pop
xor
push
mov
or
cmp
ret
fnstcw
shl
cwtl
out
cmpl
xchg
scas
xor
mov
adc
jne
mov
jae
test
data16
nop
jmp
dec
jmp
out
scas
shrb
sub
sub
mov
jns
xor
pop
dec
sbb
out
mov
pop
jp
jmp
cmpsl
cld
js
iret
sbb
sbb
jnp
adc
in
cmp
into
and
mov
sar
repz
mov
mov
nop
ja
mov
in
and
and
add
lret
cmpsl
lcall
nop
sbb
dec
fcoms
call
push
lahf
xchg
ret
shll
in
aas
xor
and
enter
sub
scas
and
subb
lret
mov
and
in
imulb
cmp
andl
repnz
jmp
xor
sub
or
icebp
lcall
mov
add
pop
or
insb
push
rorb
imul
and
loope
sti
mov
dec
and
mov
lods
xbegin
inc
data16
outsb
movaps
adc
jne
mov
mov
jmp
jl
mov
xchg
rcll
inc
sub
jle
jl
jle
mov
and
daa
faddl
push
and
sub
cmp
jno
call
mov
and
je
cmpsb
stc
sbb
or
inc
or
cmp
xchg
mov
and
jp
dec
std
xchg
fucomip
movsb
cmpsl
sti
nop
je
test
cli
sarb
jb
lret
icebp
mov
in
mov
push
xor
neg
in
mov
cmpsl
aaa
and
add
inc
sbb
sbbb
add
lret
sub
adc
xor
sub
fbstp
mov
sbb
fnsave
add
jno
mov
lahf
lret
test
sbb
out
outsb
roll
xor
inc
sbb
adc
cmp
shr
andl
mov
mov
daa
leave
loop
push
rcrb
add
hlt
pop
add
pushf
daa
xlat
dec
fcomps
out
negl
xor
mov
repz
mov
std
inc
lods
les
sub
dec
dec
xchg
lahf
stos
push
mov
xor
mov
imul
test
pop
or
std
mov
and
mov
xchg
dec
push
out
lods
ficomps
jb
aad
xchg
xor
sub
es
and
inc
cmp
push
fistpll
icebp
sbb
loopne
pop
mov
popa
and
jg
sub
gs
pop
or
sahf
call
xorb
sbb
jbe
cmp
mov
pop
sub
sbb
jle
int
mov
jns
fmuls
jg
xchg
lret
stos
mov
mov
outsl
jnp
in
push
addr16
insl
call
jno
sbb
jnp
pop
and
gs
bound
leave
xchg
mov
sbb
push
fnstcw
add
mov
jo
mov
loopne
jmp
inc
in
cli
mov
or
movsb
add
jo
xchg
outsb
fists
out
dec
fisubl
mov
lcall
mov
into
sahf
out
popa
out
cli
aas
jo
jmp
test
fldt
lods
cltd
aaa
leave
lock
mov
iret
xchg
cmpsl
or
cmpsl
pop
add
bound
call
lds
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
push
sbb
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
and
pop
icebp
jae
push
lret
jmp
dec
sub
sbb
sti
ljmp
jp
or
or
inc
into
jg
js
outsb
inc
jg
test
inc
or
cmp
sbb
mov
xorb
adc
or
xchg
mov
loop
arpl
lret
sbb
dec
sub
sbbb
add
push
xorl
jge
je
mov
mov
xor
jbe
inc
jl
rol
push
aaa
or
fistpll
mov
loop
dec
dec
shl
and
out
mulb
stos
jge
mov
jne
test
mov
pop
mov
out
jae
or
leave
and
dec
and
xchg
cmc
mov
sti
xchg
mov
inc
xchg
cmp
aam
int3
sbb
sbb
mov
popf
imul
push
or
adc
in
out
aad
outsb
aaa
addr16
inc
je
arpl
dec
pop
and
and
sti
mov
mov
xchg
adc
mov
sub
adc
imul
adc
or
icebp
mov
sbb
iret
add
mov
sub
subb
repnz
xor
std
mov
and
cmp
xchg
mov
mov
iret
hlt
pop
jne
inc
or
cwtl
int3
aaa
cld
aas
xor
in
cmpsl
mov
add
sti
repnz
into
rclb
in
cmc
xor
int
mov
int
inc
xor
loope
sub
sbb
add
lcall
stc
vpmaddwd
jae
cmpsl
lea
inc
in
and
pop
loopne
mov
dec
cmpsl
lods
in
nop
sub
inc
lock
call
adc
nop
ret
adc
xchg
pop
add
pop
mov
ficomps
lock
rclb
and
pop
test
sub
in
pop
daa
inc
add
and
cmpsb
lcall
sbb
or
sbb
sub
decb
push
mov
repz
dec
sub
or
jnp
outsb
and
mov
mov
mov
mov
mov
mov
test
mov
jne
jmp
sbb
sbb
int3
aaa
jl
jbe
jle
sbb
aad
cmp
addr16
sbb
das
add
js
fiaddl
lods
cmp
xchg
dec
mov
mov
lcall
dec
push
cmp
pop
data16
jle
mov
adc
pushf
push
xor
fdivs
cs
sub
pop
xchg
sbb
dec
mov
aam
mov
sbb
cwtl
popf
jno
es
mov
stos
call
imul
out
lods
cmp
xchg
adc
les
mov
stos
or
sbb
jg
imul
test
test
xchg
mov
pop
push
sbb
lcall
xor
call
cmp
pop
test
mov
loope
push
test
repnz
dec
xor
push
mov
mov
jno
mov
add
rorl
and
mov
repz
sbb
pop
inc
adc
adc
pushf
pop
les
test
dec
hlt
mov
out
fwait
movsl
mov
arpl
int
cwtl
cwtl
aad
into
mov
xor
xchg
dec
dec
fdivrl
rorl
adc
dec
int3
push
cmp
dec
cmp
inc
incb
cmc
pop
test
jp
scas
leave
nop
dec
test
out
pop
cmp
cmpsb
cld
popf
sbbl
sbb
lds
sub
ljmp
mov
sbb
mov
sbb
cld
dec
fildll
aad
arpl
adc
rcrl
arpl
out
cmp
dec
cmpsl
popa
imul
cmpsl
fisttps
scas
mov
int
sahf
stos
jmp
cmp
xchg
fldenv
outsl
lods
mov
mov
notb
cmpsb
mov
dec
stc
mov
mov
ja
aaa
mov
jmp
movsl
repz
arpl
xchg
in
mov
and
popa
scas
es
inc
ffree
mov
cli
xor
iret
mov
stos
cmp
outsl
fnsave
add
leave
ret
push
mov
sub
mov
subl
mov
xor
mov
mov
orl
movl
movl
mov
jmp
sbb
leave
in
icebp
xor
out
in
rcr
adc
jge
jle
outsb
je
js
adc
rclb
jle
out
stc
xlat
ljmp
push
xchg
leave
xor
roll
das
iret
stc
xchg
and
test
sbb
je
mov
icebp
mov
sub
push
dec
sbb
icebp
or
xchg
shlb
ret
popa
scas
out
mov
fucomp
inc
lock
cmp
in
leave
and
sbb
rcll
arpl
inc
imul
sub
aas
in
dec
add
mov
pushf
std
adc
jmp
mov
sbb
rolb
sub
test
stc
nop
fidivrs
jne
mov
add
dec
xlat
out
and
lods
xchg
sbb
jb
rcrb
jo
stc
lcall
ret
jnp
std
lret
xchg
pop
jp
xchg
jae
or
shrl
sub
ja
mov
mov
xor
xchg
add
jmp
pop
mov
lea
xchg
into
insb
cmp
sti
rorb
cmc
repz
icebp
pusha
shrl
out
mov
inc
aaa
push
mov
jmp
jno
fldl
enter
sets
loop
and
xor
sbb
ficoml
push
jmp
mov
jae
adc
aas
inc
hlt
lret
fidivl
ds
cmp
xchg
testb
inc
out
into
lods
insl
fdiv
dec
cwtl
adc
test
xor
out
fcoms
ja
dec
cmpsl
cwtl
xorb
in
sub
add
sub
sbb
mov
test
lcall
imul
pop
inc
sar
ret
mov
dec
cmp
ret
loopne
xor
jno
xor
fiaddl
inc
mov
cmpsb
mov
pop
cmp
jno
not
sbb
lcall
mov
mov
sbb
lret
adc
fisubl
ss
addr16
push
mov
stos
je
out
or
dec
or
lods
or
fimull
in
loope
inc
sub
rcrl
fstpl
mov
andb
push
push
sar
xor
and
dec
jmp
jg
inc
inc
push
es
pop
data16
mov
dec
sbb
test
lock
flds
inc
in
lock
xchg
orb
adc
filds
sub
push
jbe
sub
in
jae
ret
incl
push
mov
inc
stos
out
cli
rcrl
dec
popf
lea
movb
dec
pop
sbb
inc
and
ror
inc
enter
and
aam
shl
cwtl
xchg
movl
add
and
lods
mov
iret
jno
imul
add
mov
sbb
repz
jle
push
mov
xor
pop
insb
cwtl
lahf
bound
push
dec
dec
pusha
or
cmp
pop
lahf
jns
movsl
rclb
or
pusha
cmp
mov
xor
movzbl
sub
mov
sbbl
add
incl
mov
xor
xor
xor
movl
mov
adc
movl
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
xor
add
dec
mov
jmp
xor
movl
addl
jmp
movsb
fsubrs
jmp
clc
test
fmulp
xor
sub
jle
cmp
push
mov
sub
mov
stos
pop
add
mov
and
push
orl
ljmp
mov
lret
jbe
jmp
mov
outsl
mov
add
fbstp
push
jae
add
das
dec
out
add
imul
fnsave
ret
inc
cmpl
sbb
das
test
jo
popf
add
dec
int3
imul
cld
xor
or
icebp
bound
test
xor
popa
push
stc
fdivl
fnsave
and
cli
in
xchg
mov
dec
inc
sbb
out
cmpl
push
mov
loopne
dec
insb
pop
pop
push
int3
out
mov
popa
inc
cs
xchg
pop
loope
inc
xor
dec
sbbl
xchg
lret
out
aas
jp
call
adc
pop
orb
push
out
pop
lret
mov
xor
movsl
insb
add
mov
mov
ret
lock
jl
shr
lods
ret
jecxz
xor
push
pop
sbb
xor
push
jnp
push
divb
jns
je
cmp
movsb
xchg
lods
adc
imul
fwait
jecxz
and
push
cltd
jge
push
mov
sub
cmp
lods
ror
pop
sbb
jne
dec
jmp
pop
inc
xlat
loope
aam
dec
fidivrs
mov
push
sub
lods
mov
pop
push
pop
dec
pop
dec
lahf
sbb
std
xlat
loopne
addr16
test
or
xor
sbb
add
test
ja
dec
dec
dec
popa
int
rolb
inc
cmc
pop
addr16
pop
nop
unpckhps
push
xorb
jno
sbb
sbb
movsb
xor
xchg
ja
enter
inc
dec
fldenv
jle
mov
dec
ffree
pop
pop
mov
sbb
or
inc
sbb
daa
cmp
xchg
push
shrb
or
add
subl
xchg
inc
aas
pop
lahf
fidivrl
jne
sbb
imul
adc
pop
push
es
jmp
iret
inc
cmp
and
xchg
dec
jns
out
das
imul
cmc
sub
gs
cmc
jns
ret
int3
imul
adc
xchg
fcomp
cltd
leave
mov
adc
xchg
inc
shrl
sub
rorl
mov
in
pop
movsl
movsl
repz
push
pop
cltd
adc
shl
mov
arpl
mov
subl
mov
cmp
pop
ss
push
pop
mov
inc
loopne
stc
fcoml
mov
lds
cmpsb
mov
rcll
adc
or
or
mov
lock
lcall
inc
xor
or
popa
lods
cld
mov
sub
mov
aam
adc
and
aad
ja
xor
dec
in
pop
or
test
inc
add
jmp
aaa
insl
pop
lret
repz
psrlq
shl
or
jle
jge
jle
cmp
fldln2
insw
loope
in
add
out
inc
outsb
xor
and
out
cmc
mov
ret
icebp
sbb
scas
stos
nop
lds
mov
add
sub
xlat
xor
loopne
sub
in
pop
fxch
push
test
sbb
aas
cmp
in
mov
add
test
inc
xchg
out
stc
mov
sub
icebp
jb
addb
jno
cwtl
and
mov
and
addb
adc
fistl
adc
mov
push
das
out
out
dec
leave
fstpl
les
lea
aaa
inc
movsl
pop
mov
mov
fst
adc
jmp
out
and
popaw
movsb
dec
popa
push
inc
frstor
popa
ja
and
mov
pushaw
add
scas
xor
clc
fldenv
scas
cmp
lock
mov
sub
mov
sub
icebp
cmp
divb
push
mov
lahf
add
popf
inc
and
stc
pop
fcoms
out
cmp
pop
inc
imul
mov
add
sbb
out
in
imul
add
cs
cli
sub
fwait
cld
cld
sahf
addr16
aad
pop
adc
bswap
pushl
jns
and
daa
push
inc
cld
pop
sub
pop
dec
xor
fsubl
lock
in
gs
lret
cmpsb
push
daa
popa
scas
inc
iret
cmc
insb
stc
inc
sub
mov
scas
jle
mov
popf
sub
bnd
add
xchg
lret
lea
or
out
scas
xchg
fs
lock
pop
pop
or
mov
jp
adc
sbb
stos
or
movzwl
push
mov
pusha
fmuls
mov
repz
rcrl
popf
push
stc
je
jecxz
fwait
adc
adc
in
outsb
movsb
cmc
cmp
sbbl
rorb
jae
andb
jae
nop
ret
popa
and
adc
adc
mov
int
xchg
lret
sti
mov
std
push
push
xchg
push
mov
xor
inc
mov
loope
xchg
inc
or
hlt
lahf
mov
adc
lahf
stos
mov
mov
dec
mov
sbb
xor
push
ja
bnd
jmp
jmp
mov
lret
dec
js
or
insb
dec
aam
mov
dec
mov
stc
cs
push
mov
cld
andb
sarl
notl
scas
js
aas
test
xor
pop
jbe
aam
shrb
sub
mov
clc
xchg
arpl
testl
lods
fnstcw
sti
int3
in
sub
mov
adc
mov
jecxz
loopne
lret
mov
add
dec
and
and
xor
imul
sbb
loope
out
shll
int
test
movsl
lahf
sbb
pop
call
pop
cmc
nop
xchg
push
cltd
mov
pop
pop
dec
js
not
fwait
push
jbe
shlb
xor
cwtl
adc
decl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
xorl
movl
mov
mov
adc
movb
mov
decl
xor
subl
jmp
adcb
mulb
jmp
cmp
jle
jge
jle
fstl
jl
shrl
add
sub
and
mov
jo
adc
inc
ret
jb
fistpl
inc
aad
or
jno
dec
cmp
inc
ret
ficompl
movsb
push
aaa
push
inc
xchg
ss
xchg
push
pop
nop
nop
out
testl
sub
adc
inc
push
push
lods
iret
adc
nop
jl
mov
popf
and
mov
mov
lock
xchg
cmp
dec
into
dec
icebp
or
sub
call
popf
ja
pop
mov
fistl
sar
addl
mov
scas
mov
repnz
mov
hlt
adc
js
mov
les
dec
outsb
mov
xchg
out
or
dec
adc
out
test
jg
test
add
pop
int
or
ja
adc
xor
pop
pop
adc
int
addl
lods
stc
das
inc
dec
dec
mov
push
rorl
clc
lahf
gs
fnstcw
outsb
push
loop
jns
push
sub
push
iret
cmp
adc
jae
or
xor
sub
repnz
hlt
xchg
pop
mov
jp
xorb
je
fcomps
or
stc
or
lds
and
addr16
sti
fldcw
sub
aas
push
out
lds
or
adc
std
sbb
mov
pop
subl
push
and
and
aad
jge
adc
rcll
in
pop
and
cwtl
fidivs
pop
jo
or
outsl
hlt
notl
out
pop
xor
fs
mov
push
test
sub
movsb
or
arpl
rorl
push
inc
fidivl
jle
scas
insb
stc
cmp
sbb
ss
push
and
pop
fcompl
sbb
add
mov
lahf
xor
clc
sub
into
pop
popf
lea
xchg
call
sub
xor
cmpl
cmp
out
cmp
mov
mov
add
testb
cli
repz
icebp
jg
andl
xchg
mov
sub
mov
dec
or
mov
pushf
in
jp
dec
js
movsl
enter
push
push
mov
adc
pop
jns
lahf
mov
xor
inc
std
push
dec
dec
hlt
xchg
pop
mov
cmp
mov
jno
pop
lret
sub
subb
sub
lods
inc
mov
mov
sbb
mov
out
push
push
cltd
jecxz
sub
hlt
or
pop
aas
push
ss
push
and
mov
out
mov
jnp
idiv
test
mov
popf
or
imul
cmp
jg
fcmovnb
cltd
sbb
cltd
dec
sub
in
pop
pop
jb
jne
loopne
xor
out
sub
or
mov
cmp
push
mov
adc
clc
test
and
outsb
ret
pop
adc
jl
fwait
scas
rol
rcr
cmp
testb
push
dec
mov
andl
mov
mov
xor
add
sbbl
push
movzbl
sbb
mov
mov
xor
xorl
jmp
lods
or
repz
repz
dec
xchg
cmp
jle
sub
jle
jo
mov
movsl
inc
aas
out
cmp
xor
mov
pop
push
roll
data16
cmp
xchg
mov
out
mov
sbb
aas
ja
push
mov
sub
cmp
daa
lret
pusha
sub
or
iret
in
push
lock
inc
mov
xchg
stos
cwtl
xchg
push
out
das
mov
ljmp
jne
push
ret
add
rcll
jne
imul
sbb
repz
iret
and
loopne
jp
imul
xchg
xchg
or
jb
adc
repnz
in
push
or
jl
xor
mov
testb
cmp
jge
into
xor
pop
addl
insb
dec
mov
cmp
aaa
jecxz
xchg
sub
icebp
nop
ret
cmp
and
das
in
or
inc
fcmovbe
hlt
lods
imul
in
pop
lcall
sbb
fwait
cmp
movsl
push
flds
jg
mov
icebp
mov
xchg
setb
loop
inc
les
movsb
stos
add
pop
cwtl
adc
inc
xor
icebp
packssdw
jmp
fdivs
sub
mov
mov
xchg
imul
sub
or
jge
clc
xor
cmc
mov
jl
data16
cwtl
mov
dec
cs
xchg
lods
cwtl
loop
bound
or
mov
pushl
test
inc
xchg
scas
dec
insl
arpl
push
incl
pop
jns
adc
bound
fsubs
sbb
dec
jecxz
cwtl
push
into
test
je
mov
cmp
mov
jns
sti
fsub
inc
and
or
call
mov
cmpsl
shll
sub
dec
mov
shr
or
mov
rol
xor
in
in
dec
test
jnp
and
sbb
jecxz
outsl
leave
repz
or
jbe
inc
jp
mov
inc
scas
xchg
mov
jae
sub
nop
addr16
pop
xor
lea
fxch
mov
addr16
jae
in
cmp
shl
sarb
jecxz
add
inc
inc
inc
jbe
jne
aam
mov
cmp
ret
clc
fnstenv
push
stos
jg
outsb
rolb
push
gs
and
fdivrl
lea
lock
mov
or
jmp
incb
loop
add
mov
ds
loope
mov
mov
push
push
cltd
cmpl
pop
push
ficoml
fwait
lcall
or
addr16
mov
mov
mov
jns
mov
lock
fisubl
sbb
icebp
cmp
push
mov
push
xchg
pop
cmpb
mov
sub
mov
lods
les
cmp
push
xchg
rolb
cs
jnp
sbb
push
decl
cltd
dec
add
xlat
shrl
dec
xchg
add
andl
push
mov
xor
jmp
dec
push
test
xor
xor
push
add
and
jle
sub
jle
out
sub
jae
scas
push
cmc
and
rcll
in
lds
pop
xor
xor
xchg
mov
ds
mov
adc
enter
sbb
adc
es
sbb
xor
and
cmp
aaa
sahf
adc
push
loop
push
jl
fdivrs
pop
cltd
shrd
dec
cs
push
testl
mov
jl
iret
test
mov
xchg
fimull
aaa
add
aam
adc
cmp
test
or
imulb
push
inc
pop
and
jno
push
cmp
dec
das
add
loope
and
mov
inc
gs
sub
imul
cs
movsb
jmp
or
rcl
mov
or
mov
add
enter
adc
aam
cltd
push
mov
inc
clc
mov
jge
xchg
loop
cs
popa
xchg
test
imul
push
sub
sbb
stos
js
inc
adc
les
call
int
insl
inc
hlt
es
inc
sbb
or
lea
dec
fiadds
shr
xor
repnz
xlat
addr16
sub
xchg
and
test
xchg
cmp
lret
mov
lds
enter
fcomi
divl
repnz
mov
shrl
hlt
fwait
jge
jno
pop
inc
jnp
mov
inc
jg
add
mov
adc
enter
push
aam
daa
out
push
fnstcw
cwtl
and
add
jns
in
aas
enter
inc
in
icebp
arpl
and
insl
in
out
shrl
shlb
mov
cld
push
or
and
inc
je
es
out
xchg
jg
pop
cmp
xchg
sbb
cwtl
dec
mov
andl
push
pusha
and
dec
cmp
mov
push
loop
fsubrl
fiaddl
addr16
or
notl
push
clc
mov
fmul
inc
xchg
in
outsl
out
les
fdivrs
imul
mov
xchg
push
cmp
pop
dec
leave
mov
push
in
xlat
loope
jno
shlb
lock
mov
ja
mov
arpl
or
test
lea
aas
mov
mov
outsb
out
xchg
cmp
sti
cld
add
xor
lods
es
cmpsb
sub
xor
inc
out
mov
sub
insl
testl
icebp
popf
fwait
icebp
cli
test
cld
xor
addr16
and
sbb
aaa
es
cmp
pop
push
loopne
popa
clc
dec
or
push
xchg
les
sub
test
xor
fadds
inc
shl
jnp
mov
mov
out
loop
push
jp
repnz
and
andb
loop
ljmp
enter
shr
addl
into
pop
inc
roll
test
nop
imul
cld
push
add
imull
jmp
push
in
lods
jne
loopne
movl
add
xor
inc
insl
add
lea
incl
push
subl
pushl
jmp
mov
gs
push
sub
fcmovnb
jle
sub
jle
imul
xor
mov
cmp
mov
mov
dec
xor
add
test
sarb
mov
jno
xchg
xchg
cmp
pop
std
fnstcw
xchg
jbe
or
pop
xchg
or
pop
dec
sub
add
push
xchg
jmp
pop
bound
jae
loopne
sbb
clc
sbb
lahf
and
call
sbbb
fcomps
inc
mov
jmp
or
imull
mov
into
add
rsm
jge
out
pop
pop
pop
xor
insl
les
aas
jg
jae
gs
popf
jo
addb
call
xchg
sbb
push
jb
xchg
sub
ror
or
jl
cmp
mov
xchg
jge
mov
jecxz
push
xorl
pop
adc
mov
push
inc
aas
in
pop
mov
push
leave
mov
js
adc
ja
push
inc
cwtl
jle
cmp
and
dec
mov
add
xchg
push
cmp
add
ret
jnp
test
push
add
dec
and
push
lret
and
int3
pop
rolb
mov
or
mov
mov
sub
cmpb
adc
xchg
into
lcall
ljmp
adc
or
jg
arpl
sbb
mov
cmp
mov
ljmp
clc
or
aaa
and
pusha
inc
jo
lea
sbb
push
push
sub
mov
and
insb
dec
push
mov
and
test
inc
call
enter
xchg
setbe
xor
in
jo
adc
dec
push
icebp
sbb
sbb
dec
ret
xorps
xchg
test
push
jnp
movsb
pop
xchg
aam
cmpsb
and
inc
inc
sbb
add
xchg
pop
mov
pop
rcrb
mov
adc
sub
ds
iret
jb
sub
dec
ss
mov
sbb
push
out
js
cmp
movsb
xor
mov
cwtl
mov
inc
and
test
clc
int
pop
aam
push
lret
sbbb
sbb
in
test
stc
addr16
pop
cmc
push
adc
fidivs
aaa
sahf
repnz
sub
mov
sti
in
mov
sub
adc
jmp
data16
mov
cmp
jo
aad
cmp
mov
bound
jb
inc
out
cwtl
xor
cmc
fwait
scas
pop
outsb
sub
mov
mov
inc
pop
mov
or
ficompl
dec
jl
daa
xor
ficompl
xchg
adc
rorl
leave
push
inc
in
push
sbb
lahf
popa
imulb
pop
push
repnz
push
mov
sub
mov
stc
scas
or
leave
push
stos
mov
loope
pushl
call
jmp
aaa
dec
rcrl
jno
repz
push
and
or
jge
jle
cmc
test
cmp
xor
outsb
fildl
insb
jno
mov
jae
sbb
add
in
hlt
jbe
push
andl
jbe
push
lods
aam
ds
add
dec
fldt
mov
ja
push
shlb
mov
cmpb
mov
adc
and
jno
shll
std
sbb
stc
cmp
clc
cmp
insl
movsl
mov
lcall
pop
adc
aas
jecxz
sti
add
inc
sub
ljmp
dec
and
mov
pop
ljmp
inc
and
andl
repnz
dec
mov
ret
sbb
inc
cmpb
sahf
loope
cmp
adc
mov
mov
inc
les
cmp
insb
incl
and
into
mov
ds
adc
pop
mov
in
aad
jb
clc
mov
adc
adc
insb
inc
cmpsl
jecxz
out
shlb
add
mov
dec
and
mov
jns
aam
adc
sub
inc
mov
je
out
inc
icebp
lea
adc
popf
pop
or
inc
and
popa
or
sub
sub
mov
mov
inc
ljmp
filds
jae
pop
pushf
enter
adcb
pushl
rcl
ljmp
jl
cmp
orl
arpl
in
insb
inc
data16
loop
into
inc
mov
push
mov
xorl
adc
lods
dec
push
xor
add
push
test
and
lock
sub
push
or
pop
imul
mov
es
xlat
pop
addr16
dec
arpl
pop
mov
or
push
cs
dec
pop
mov
inc
push
mov
orl
pushf
jbe
inc
xor
cld
sbb
add
cmpsb
adc
sbb
xchg
xchg
out
cld
es
adc
xor
sub
mov
cmpl
mov
jmp
in
pop
popf
ret
sub
cld
jge
icebp
push
inc
push
xor
rorl
in
fisttpl
imul
mov
add
addr16
pop
push
stos
popa
push
js,pn
dec
leave
mov
xor
sbb
cmpb
inc
jne
xchg
push
sbb
in
pop
cld
test
lock
push
xor
popf
outsl
and
leave
in
ja
xor
push
cmp
mov
jmp
imul
and
and
adc
sub
pop
cs
or
daa
inc
shlb
sbb
add
aas
ret
addr16
out
inc
rcrb
sbbl
and
call
push
inc
js
and
test
movl
je
lea
subl
push
mov
xorl
xor
sbbl
add
xorl
push
mov
jmp
mov
orl
inc
shrb
cmp
dec
int3
jle
sub
jle
inc
popf
mov
ja
movsb
lods
std
aaa
xchg
aam
into
test
lock
mov
cmpsb
adc
pop
push
push
xor
cld
cli
xor
call
push
xorb
daa
mov
hlt
push
sub
add
xor
in
rorb
mov
repnz
adc
addr16
dec
shlb
cmp
enter
hlt
jmp
jmp
sub
jle
sub
pop
pmulhuw
sub
dec
xchg
jl
je
jmp
bound
arpl
jl
jle
mov
ret
dec
mov
hlt
icebp
arpl
push
sub
mov
aam
out
sub
scas
dec
insb
pop
fs
sbb
push
push
pop
sub
orl
cmpl
repz
jge
adc
into
and
rcrl
fcmovbe
ret
sbbb
lds
dec
pop
mov
out
lahf
mov
push
fs
xor
insb
xchg
mov
sahf
nop
xchg
jp
pop
int
adc
test
push
adc
mov
gs
icebp
out
ljmp
lahf
push
push
mov
enter
cld
lods
push
movsl
cwtl
cmpsl
inc
rcl
mov
jge
mov
cmpsl
jmp
inc
fdivs
or
hlt
pop
adc
dec
js
pop
push
stc
test
cli
xor
out
hlt
lods
mov
pop
pop
sbb
sbb
popa
je
mov
test
mov
mov
lret
test
mov
aaa
int
je
add
repnz
mov
jmp
sti
movb
repnz
push
out
pop
out
ds
push
repz
cwtl
sbb
int
add
mov
pop
sbb
xchg
adc
jno
ja
jb
inc
ret
dec
in
push
sbb
mov
jg
lods
into
fidivrs
add
out
inc
adc
xor
cltd
insb
push
add
xlat
dec
aad
lret
sbb
std
adc
mov
data16
mov
jno
out
sbb
push
cwtl
inc
or
and
xchg
xor
out
repnz
jno
xlat
mov
rcll
push
mov
test
ss
mov
pop
cwtl
or
jo
mov
and
cmp
daa
repz
cmp
push
scas
dec
mov
arpl
adc
jmp
loopw
jmp
push
fcmovnb
pop
xor
add
xchg
push
popa
fdivr
pop
lret
push
inc
les
sbb
lcall
jecxz
sub
and
push
js
adc
jl
adc
outsl
call
fs
and
arpl
test
and
out
sub
sub
dec
dec
mov
jmp
push
iret
fisubl
ret
push
adc
bound
adc
movsb
mov
add
subl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
cmp
xor
rcl
lods
push
mov
enter
jge
jle
mov
ds
xor
or
out
mov
jp
xchg
popa
rclb
cwtl
jb
push
repnz
lcall
lret
pop
dec
mov
mov
mov
mov
pop
mov
mov
mov
jno
out
lods
fisubrs
mov
jne
out
inc
arpl
add
std
and
leave
cmpb
mov
jp
fs
jo
sbb
jge
jle
pop
pop
dec
int
pop
inc
into
pop
xchg
aas
in
mov
xor
or
loop
sub
jmp
sub
sub
jecxz
lds
dec
jecxz
pushf
out
icebp
out
stos
pop
std
dec
adc
ljmp
jb
into
or
aas
addl
iret
inc
inc
insl
fcompl
bound
fisttps
arpl
addr16
pop
cmpsl
fimull
rcrb
das
and
leave
imul
and
inc
int
adc
xor
xchg
ret
dec
push
inc
movhps
into
mov
xor
icebp
mov
mov
adc
aam
repz
lea
jo
mov
push
jae
xorb
mov
repnz
mov
insb
je
lds
dec
mov
ror
mov
rcrl
scas
daa
or
pop
jae
inc
lds
xchg
shlb
ljmp
mov
dec
ja
test
daa
mov
scas
orb
xchg
call
dec
cmc
push
fidivl
push
pop
jl
jg
xor
cmpsl
out
imul
adc
mov
testl
pushl
pop
add
and
scas
xchg
loop
in
popf
mov
bound
xchg
test
popa
push
jl
imul
aad
sub
cld
std
or
add
cwtl
stc
fs
dec
mov
push
xchg
das
lock
movsl
jecxz
or
dec
sarb
ss
in
or
cmp
push
bound
ror
inc
fcoms
jae
out
jbe
dec
xchg
sahf
mov
inc
xchg
js
repnz
sti
sbb
and
call
orl
fnsave
div
xchg
int
pop
jecxz,pt
jae
fstps
pop
movsb
loope
mov
imul
pop
data16
orl
cmp
jp
fisttps
mov
andb
inc
mov
dec
ljmp
jb
push
mov
outsl
mov
xor
insl
push
adc
jp
xor
jne
ret
or
ljmp
ljmp
inc
push
movsl
outsl
inc
jo
mov
dec
scas
mov
inc
iret
out
pop
lahf
add
fldenv
push
lea
mov
cmp
std
xlat
xchg
mov
xor
mov
inc
xchg
dec
jle
inc
lock
pushl
call
jmp
pop
push
jl
mov
sub
adc
aas
xlat
jle
sub
jle
mov
sub
jecxz
nop
test
inc
inc
pop
subl
das
mov
imul
jle
addr16
mov
push
mov
mov
mov
push
cmp
je
sub
xorl
lds
lds
sbb
cmpl
sub
jo
or
xchg
insb
jmp
and
xor
cltd
add
sub
mov
and
scas
xchg
imul
mov
mov
imul
repnz
push
add
add
movsl
adc
das
inc
sub
jle
mov
sbb
sbb
pop
inc
fs
mov
stc
and
jmp
mov
pop
mov
mov
ret
or
inc
xchg
in
fists
mov
out
movsb
xchg
add
sti
cmp
call
popa
inc
mov
scas
sub
fstpl
mov
popa
les
fcomp
jbe
ror
into
push
sub
test
ja
sub
add
dec
int3
sbb
sub
or
in
pop
add
pop
fmul
fstpt
inc
iret
dec
adc
mov
and
enter
es
sbb
xor
ds
sub
out
dec
loopne
mov
and
iret
mov
rorl
mov
sbb
in
hlt
push
xlat
lods
or
out
push
lret
mov
fstl
adc
and
enter
js
push
inc
cmpsb
imul
and
jecxz
mov
fistl
inc
repz
cs
fcmove
pop
movsb
daa
hlt
cli
jnp
out
lods
out
xchg
xor
mov
mov
filds
mov
cmpsl
pushf
outsb
cmp
add
inc
push
outsl
dec
mov
sahf
xchg
sbb
pop
sbb
cmpsl
dec
push
sub
adc
pop
cltd
in
les
mov
es
mov
adc
jmp
mulb
sub
pop
cwtl
dec
push
iret
ds
fsubs
ficoms
mov
loope
inc
in
push
or
adc
lea
mov
scas
mov
pushl
pop
ret
sbb
mov
mov
and
das
sbb
rol
push
pop
xlat
leave
sbb
xchg
pop
mov
rorl
push
xor
adc
or
rorl
dec
in
std
jle
in
dec
test
and
push
push
mov
jecxz
shrb
xchg
enter
lods
and
jl,pn
xchg
and
aam
push
dec
icebp
fcompl
fcom
xchg
mov
pop
push
pushf
jno
fisttpll
stc
add
inc
dec
mov
push
pop
adc
stos
pop
dec
sbb
push
adc
fcomp
add
mov
out
lods
xchg
mov
mov
imul
cmc
insl
or
clc
add
loopne
test
add
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
jmp
popa
pushf
cmpsl
mov
jno
inc
xchg
popa
jb
push
ss
not
jle
sub
jle
test
or
mov
loopne
addr16
das
jne
out
inc
push
and
inc
or
mov
dec
pop
ret
and
popf
mov
mov
xlat
dec
adc
ljmp
push
ja
dec
xor
pop
stos
ror
add
inc
push
xchg
push
xchg
mov
lret
fs
f2xm1
sbb
pop
jns
pop
repz
cmp
adc
iret
mov
stos
cli
cwtl
lock
in
roll
lods
lock
stos
xlat
push
xor
inc
jno
in
inc
hlt
fs
mov
outsb
push
fmull
sub
sub
mov
fsts
cmp
push
repnz
cmp
cwtl
inc
jnp
inc
scas
out
mov
cmpl
fdivr
or
push
and
clc
mov
pop
loope
xchg
outsl
clc
mov
rorb
rcrb
pop
mov
and
divb
mov
lret
xor
cmp
mov
xor
inc
pushf
jmp
jmp
and
notl
inc
hlt
icebp
push
add
mov
aaa
dec
aad
xor
mov
lahf
lret
cmpsb
sub
inc
pushf
cmp
lret
pop
daa
xchg
adc
dec
push
sbb
mov
pop
cltd
mov
roll
push
push
repz
cmpsb
in
test
push
mov
loope
ffreep
gs
aaa
pop
scas
loopne
sbb
xchg
addr16
mov
sti
sarb
insb
mov
sbb
mov
cmp
test
jp
jl
stos
lret
test
xchg
inc
sub
sbb
xor
xchg
sub
sub
ljmp
or
int3
mov
push
in
movsl
bound
lods
and
adc
mov
or
sar
lods
arpl
add
pop
and
int
or
jns
inc
cmpsb
imul
shll
movsb
jne
adc
push
push
pop
fistps
push
ds
push
lock
cmp
xchg
push
es
sbb
fwait
xor
xor
rcrl
xchg
je
sbb
adc
rcl
popa
or
dec
std
sub
dec
fstpt
imul
sbb
inc
dec
js
inc
daa
movsl
out
fsin
clc
push
out
push
mov
hlt
dec
mov
pusha
push
sarl
movsb
arpl
add
sbb
das
sub
and
and
xor
in
jae
fwait
xor
cmp
add
testb
in
pop
push
dec
mov
mov
fmulp
in
fstpl
push
adc
outsb
sbb
test
add
cmpsl
mov
add
push
jmp
test
pop
and
orl
pop
aam
jl
mov
sub
out
lcall
cmc
push
insb
rolb
in
ret
push
jne
xor
xchg
xchg
cmp
decb
or
add
or
inc
xor
pushl
pushl
call
test
je
lea
push
mov
xor
jmp
test
cmp
push
mov
sbb
jge
jle
sti
fwait
dec
pop
or
mov
mov
imul
stos
xchg
dec
subb
cwtl
out
cwtl
inc
push
pop
in
mov
xchg
jo
mov
pop
push
fimull
in
es
jmp
fstpl
arpl
sub
jmp
jb
push
hlt
adc
sbb
aas
fwait
in
or
fsubl
mov
or
jg
daa
or
andl
insl
push
adc
icebp
dec
ret
outsb
pop
inc
jg
mov
adc
mov
mov
fisubrl
adc
lret
and
cmp
std
das
or
mov
cwtl
mov
rcrl
push
fwait
jmp
cli
mov
shl
movsl
stc
dec
xchg
xrelease
xor
lea
sar
test
pop
push
add
pop
xchg
mov
and
lock
icebp
js
or
cmpsb
insl
cmp
and
sub
lods
xlat
xor
xor
mov
insl
adc
jae
sbb
clc
or
sahf
je
jae
mov
jns
dec
sbb
lods
mov
int3
or
sbb
mov
fisubs
mov
pop
or
repnz
adc
sub
aas
and
adc
loope
mov
orb
sub
sbb
les
into
sbb
loope
pop
in
xchg
jmp
mov
inc
fsts
dec
or
pop
jg
adc
out
mov
jle
fwait
cltd
js
imul
addl
xor
push
push
lods
ljmp
add
cwtl
out
pop
or
dec
pushf
and
jbe
data16
cmp
sbb
jb
mov
aas
mov
mov
inc
mov
jno
sub
cmc
adc
mov
xchg
maxps
jecxz
jecxz
loopne
lea
mov
pop
nop
and
cmp
aam
jo
clc
loope
lcall
shlb
add
inc
sbb
pusha
ljmp
xlat
pop
mov
aad
xor
mov
inc
dec
push
push
mov
push
xchg
pop
fisttpl
mov
adc
lods
xchg
scas
sar
divb
movsl
push
std
out
dec
push
xchg
push
mov
bound
xchg
nop
fcomp
cli
mov
pop
arpl
adc
cltd
dec
sbb
cmpsl
cmp
rcrl
js
dec
cmpsl
adc
ss
lea
xchg
es
add
cmp
mov
out
in
pop
clc
sub
fstps
push
xor
ds
cmp
mov
cmpl
sbb
jle
push
xchg
sub
leave
out
add
fidivl
mov
test
mov
adc
pop
xchg
pushf
mov
sbb
addr16
inc
pushf
enter
hlt
pusha
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
jmp
shll
add
ret
loope
inc
rcl
jmp
pop
fdivrl
sub
jle
pop
stc
test
push
xor
inc
pextrw
js
cmp
orl
out
xchg
push
push
pop
lods
out
mov
xchg
and
mov
out
push
mov
js
movsl
sbb
fcomps
jb
sub
and
cli
dec
mov
lahf
jb
sti
mov
aad
stos
ljmp
imul
adc
daa
dec
shufps
rcrl
out
jg
pop
mov
jmp
mov
cmp
xchg
mov
ljmp
dec
fsubl
aam
js
or
push
jmp
mov
add
and
sub
add
adc
sbbb
xor
scas
iret
mov
dec
push
lods
scas
add
into
inc
es
mov
lret
jge
push
jno
sub
fldcw
jmp
leave
or
xor
pushf
std
and
das
sub
adc
insb
or
mov
sbb
arpl
mov
inc
loop
pushf
sar
lret
repz
fnstcw
xor
loope
mov
je
ljmp
daa
bound
inc
movntps
test
jnp
shll
xchg
insl
aad
icebp
xchg
jecxz
ror
je
int3
add
rcrl
iret
out
pushl
sarl
mov
fs
and
jno
jl
es
jbe
loopne
fsubs
dec
in
nop
pop
fimull
jmp
mov
stc
fsubl
cmp
bound
rol
push
push
fucomi
lods
lods
gs
adc
out
sub
leave
fwait
inc
add
insl
pop
pop
xchg
mov
clc
daa
lods
dec
mov
fcmovbe
mov
and
and
pop
arpl
fnstsw
jne
pop
es
leave
nop
ja
jne
popa
mov
and
pop
add
into
aaa
outsb
mov
loope
sbb
es
dec
mov
test
jbe
sub
jg
mov
lret
mov
mov
clc
iret
dec
ljmp
or
mov
push
sub
pop
xchg
incb
mov
das
repnz
negl
cwtl
dec
push
fidivrl
mov
and
lret
cmp
repz
mov
lea
push
push
cmc
mov
dec
mov
cltd
out
mov
lret
pusha
mov
jg
xchg
aaa
mov
lds
loop
xchg
push
cmp
cld
jge
pushf
sbb
add
jo
clc
and
in
adc
sbb
mov
add
mov
add
orb
lods
cmp
adc
sarl
mov
enter
adc
xor
cltd
dec
pop
cld
cmpsl
imulb
mov
cmc
flds
ds
sarb
cmp
push
sarb
sbb
cmpsl
xlat
out
cmp
lods
sub
test
pop
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
jmp
lcall
insl
sub
or
cs
jle
sub
jle
dec
mov
addr16
or
lds
pusha
pop
add
push
out
sbb
fcomp
inc
fisubrl
adc
popf
pop
push
int3
mov
mov
mov
add
dec
sahf
jae
test
insb
outsl
xchg
pop
es
mov
ljmp
icebp
adc
dec
sbb
adc
mov
ja
cmp
das
inc
fnstcw
hlt
mov
push
adcl
hlt
inc
lds
add
pop
pop
xor
xor
movb
pop
jg
mov
xchg
sahf
dec
pushf
aad
jo
inc
add
push
movsb
call
or
test
js
stc
mov
adc
std
xor
dec
mov
mov
pop
xchg
std
rcr
out
cltd
not
div
mov
and
sub
out
jecxz
out
jno
adc
xchg
lea
mov
sbb
push
lret
mov
mov
jmp
dec
lds
mov
cmpb
and
sarb
jae
shl
fidivs
fwait
add
and
add
clc
lods
dec
sub
mov
popf
mov
sub
bound
mov
popa
jp
sahf
push
inc
test
dec
adc
sbb
xchg
or
adc
mov
and
and
dec
cltd
mov
lret
ret
les
pop
push
mov
mov
mov
std
sbb
in
stos
and
jns
add
aad
jp
lcall
sti
mov
mov
cltd
icebp
pusha
loopne
and
enter
mov
fcmovnb
sbb
sbb
cmp
xchg
jns
mov
dec
test
xor
negb
insl
pushf
xchg
add
dec
mov
jp
dec
stos
ret
or
or
neg
mov
mulb
inc
iret
les
loopne
sub
xor
popf
push
xor
imul
fidivrs
cmpsb
dec
dec
std
xor
in
cli
xchg
cli
in
das
outsb
mov
xor
or
and
cld
out
es
sub
sub
pop
fldt
xor
aas
inc
cli
int3
cmovns
push
dec
fsubrs
inc
xor
sbb
outsb
jg
popa
xor
roll
push
mov
loopne
add
mov
xchg
sar
mov
mov
mov
adc
movsb
sbb
call
sub
test
lcall
mov
ja
xchg
dec
movsb
xchg
gs
sub
sub
cld
fcmovbe
or
mov
sbb
mov
repz
push
aad
sahf
mov
add
fmul
adc
out
out
repz
loop
stc
mov
sbb
aaa
add
jecxz
lock
cmc
sub
sbb
and
vpavgb
push
repnz
jne
insb
pop
xchg
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
jmp
cli
add
ret
popa
arpl
xchg
jle
sub
jle
xor
adc
ret
fsubl
in
icebp
push
scas
cmp
cmp
push
push
sub
add
xchg
sarl
cli
push
dec
inc
imul
or
js
push
push
sbb
fisttps
xchg
cmp
jo
xor
cmp
addr16
lret
pop
pop
lods
addr16
jmp
leave
adc
mov
and
lds
jg
push
mov
rcr
mov
and
adc
sti
pop
rcll
out
scas
mov
sbb
ds
adc
and
pop
pusha
stos
mov
pop
jnp
push
inc
xor
inc
ljmp
mov
cmp
lret
dec
out
jns
loop
lods
fbld
jmp
xchg
dec
fnstcw
out
push
mov
fisubrl
shl
jns
std
outsb
in
test
out
in
cmp
sbb
test
adc
cmpl
cmpsl
sub
jnp
dec
das
testb
jno
jmp
jo
cmc
in
jns
divb
cld
popa
mov
out
lahf
adc
and
into
push
mov
inc
adc
fisttpl
push
inc
xchg
jg
xchg
xor
xchg
mov
lahf
aaa
jg
test
fstl
mov
idivl
push
jmp
les
cld
filds
mov
cmp
and
dec
push
push
outsb
xor
test
jno
mov
dec
add
fwait
sub
cmp
ss
loop
and
out
mov
bound
mov
sub
js
enter
xor
mov
or
xchg
push
and
push
inc
rclb
jge
mov
and
clc
mov
faddp
scas
mov
stos
xor
mov
mov
cwtl
out
mov
popf
rolb
mov
insb
cmpsb
insl
mov
fsubrl
xorl
xlat
cmpsb
sub
sbb
pusha
shlb
and
scas
xlat
dec
int
stos
cmp
jb
inc
nop
or
dec
pop
pop
push
lcall
clc
cli
inc
repnz
fimull
cmp
iret
xchg
lahf
std
std
mov
mov
mov
sbb
dec
aaa
gs
xchg
test
mov
in
dec
and
jae
mov
ss
testb
and
mov
ja
push
pop
pop
jge
push
testl
popa
dec
pushf
jecxz
and
jl
clc
cli
test
jg
and
xchg
shrl
stos
jb
icebp
shrb
cmpsl
mov
aam
and
shll
sub
mov
or
stos
sub
xchg
iret
ljmp
xchg
out
divb
dec
pop
jmp
cmp
adc
mov
mov
lds
fdivl
pop
jge
pop
xchg
popa
pop
adc
movl
push
dec
daa
mov
dec
pusha
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
mov
add
jmp
outsl
adc
insl
popa
insl
jno
std
inc
add
jno
call
jle
jge
jle
or
jb
inc
jge
aas
sub
out
push
cmpb
inc
gs
sahf
imul
scas
sbb
cmp
ljmp
or
fwait
or
xor
mov
fwait
mov
iret
jne
add
lret
clc
hlt
je
mov
pop
inc
mov
sub
adc
jno
in
mov
decb
cmp
xor
push
dec
xchg
iret
shll
lods
outsb
nop
ds
or
jno
mov
movsl
lahf
repnz
test
sbb
xchg
or
cmp
pop
jle
pop
lock
popf
cmp
lock
push
cmp
push
subb
jnp
cmp
cmp
subl
xchg
fsubr
test
lods
sbb
stos
bound
add
fnsave
mov
faddl
nop
pop
mov
xchg
aam
mov
test
sub
nop
add
mov
inc
fimuls
sub
fs
out
out
mov
push
in
mov
xlat
push
sbbl
xchg
xor
ret
xchg
sub
mov
add
jmp
iret
and
mov
and
xchg
hlt
sbb
fildl
pop
push
test
out
rcl
mov
lret
cmpsl
scas
pop
sbb
push
push
jnp
inc
mov
popf
roll
jae
xchg
adc
push
fs
pop
push
mov
test
icebp
add
xor
cmp
pop
sbb
imul
ret
mov
xchg
or
add
bound
fidivs
lds
std
iret
dec
pop
rcll
jb
fbld
mov
addr16
movsb
inc
xchg
test
aaa
dec
inc
movsb
or
jb
sub
repz
loope
or
sbb
xchg
fnstenvs
inc
int3
insb
and
hlt
pop
fidivrl
popf
push
jg
mov
fwait
cld
fwait
push
out
fistpl
es
loope
cmp
jmp
sub
scas
loop
xchg
mov
push
lahf
arpl
out
cltd
or
or
dec
adc
ret
mov
inc
cltd
int
rol
push
cwtl
setp
popa
je
movsb
ds
inc
mov
sub
add
add
outsb
cmpsl
adc
mov
dec
sub
movsl
or
dec
inc
adc
cmp
cmc
push
inc
fsubrs
xchg
testl
js
enter
add
in
xor
cmp
inc
into
lods
popa
dec
pop
inc
ret
pop
cmpsl
lea
int
cmc
fcmovnbe
lods
bound
cmp
or
cmp
jbe
sub
pop
sub
bound
xchg
rclb
jb
call
outsb
lods
lea
fidivrs
out
mov
imul
mulb
mov
stos
cmp
enter
test
and
outsl
sbb
push
sub
pop
and
ret
stos
and
pop
leave
ret
push
mov
sub
and
push
or
mov
and
mov
mov
sbb
mov
mov
xor
movl
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
or
movl
mov
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
add
xor
mov
add
mov
or
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
pushl
pushl
pushl
push
pushl
push
push
push
push
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
jmp
push
jp
in
jne
stos
push
nop
inc
inc
js
cmp
mov
jl
jle
in
je
dec
out
scas
jae
mov
ret
ja
mov
mov
pop
and
push
fists
cmc
push
cld
leave
xchg
notl
mov
or
movsb
lcall
pusha
cmp
jecxz
pop
push
loope
fbld
pop
aam
popl
test
int
mov
scas
int3
sbb
xchg
ss
xchg
xchg
dec
xor
inc
jnp
icebp
sub
or
mov
or
lret
cmp
xorb
mov
xchg
out
ret
and
subl
push
mov
xchg
insb
or
dec
mov
cmpsb
shlb
cmpl
sbb
aas
mov
cmc
lret
mov
int
aas
cmp
xchg
imul
jae
push
dec
and
xorl
sbb
xor
push
ds
movsb
or
xchg
adc
testl
testl
insl
pop
xchg
fnstsw
inc
into
mov
add
ja
inc
lret
jb
push
adc
stos
or
aas
cmc
mov
orl
fisttps
movsl
mov
ds
cmp
jl
pop
sub
xor
fs
pop
mov
popf
imul
sbb
nop
adc
add
into
mov
push
add
add
xchg
mov
mov
push
push
xchg
jecxz
cmp
mov
stos
cli
pop
cmpb
push
cld
repz
inc
icebp
mov
aas
mov
inc
pusha
push
mov
jecxz
fwait
repnz
push
js
out
sub
push
sbb
or
push
mov
stc
insl
and
nop
in
and
scas
fnstenv
sub
sti
nop
mov
fstps
cmc
jl
arpl
cmc
cmpsl
cltd
loope
daa
push
inc
dec
mov
cld
fxch
outsb
cmpsb
xlat
outsb
idivl
popa
sub
cmpb
sub
sahf
jmp
mov
daa
daa
in
or
push
jbe
insl
pushf
cmp
xor
les
mov
sbb
mov
fnstcw
fcompl
imul
es
sbb
in
sbb
std
mov
shr
mov
inc
fcoms
fisttpl
sbb
jp
mov
xchg
pop
lock
in
add
inc
aad
cmp
cli
sub
jnp
push
pop
jno
aad
add
js
addl
xchg
dec
in
add
inc
dec
inc
movsb
jp
lock
adc
imul
movsb
and
shll
pushl
into
pushf
jmp
mov
movsb
pop
mov
shll
rolb
rorl
push
or
adc
movl
movl
add
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
not
movl
movl
or
movl
and
movl
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
xor
xor
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
or
jmp
incl
mov
push
push
inc
jo
in
jle
data16
jle
jg
clc
inc
fstpt
jnp
out
xchg
lret
mov
sahf
pop
add
add
aam
fdivrs
xchg
data16
push
or
xchg
push
in
fs
fldz
pop
daa
lods
sti
pop
clc
push
fistl
dec
fstpt
xchg
and
sub
pop
cmp
dec
xor
mov
inc
mov
sub
sbb
mov
sbb
lods
ret
dec
iret
xor
fnstsw
cli
sahf
inc
mov
mov
test
test
mov
rolb
fistpll
gs
enter
int
or
and
sar
test
jb
pop
add
int
fcomps
das
jae
sub
xor
movsl
or
das
mov
mov
sarb
mov
push
cmp
sub
in
andb
aas
fnstcw
insl
jo
push
out
aas
frstor
add
fwait
mull
out
insl
inc
inc
enter
push
jg
aam
xor
mov
ljmp
inc
shr
pop
int3
dec
or
dec
pop
pop
loop
add
and
xor
test
add
jge
push
testb
lods
xchg
dec
mov
add
fdivs
cltd
shrl
sub
inc
inc
adc
add
pusha
mov
jge
mov
pop
popf
lods
call
fwait
ds
xchg
ret
je
jae
lds
loope
lods
pop
mov
call
mov
xchg
test
xchg
and
fbstp
das
das
faddp
mov
push
ds
jl
cmp
sub
mov
jecxz
repnz
sub
lods
xor
push
and
cmc
movsl
inc
stos
dec
dec
mov
scas
pop
mov
aam
mov
inc
mov
pop
repnz
ds
mov
or
push
mov
dec
stos
lret
cmp
lods
int
adc
pop
push
xchg
mov
std
dec
push
outsl
push
sbb
in
lret
mov
pop
testl
rcrb
les
jbe
std
mov
std
repnz
mov
pop
ds
adc
leave
jl
jecxz
fsub
stc
cld
js
and
xor
jbe
xor
imul
addr16
dec
cli
pop
shl
sub
ret
cs
mov
push
in
gs
push
mov
xchg
inc
lock
aam
push
cmp
adc
subl
aaa
outsb
mov
mov
xor
insl
loope
mov
sub
and
dec
out
mov
stos
cwtl
enter
in
addr16
arpl
or
adc
push
jne
add
lock
cwtl
movsl
dec
loope
cmc
xlat
lods
cmp
mov
sbbl
sub
andl
mov
xor
add
movl
cmp
jb
mov
mov
sub
sub
mov
or
mov
xor
xor
sbb
xor
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
xor
add
xor
or
sbb
mov
jmp
inc
int
popa
jae
push
in
mov
jp
push
mov
jle
data16
jle
aaa
and
push
xchg
shr
xorl
sub
add
fwait
cwtl
push
in
mov
and
xor
mov
mov
adc
jb
jae
push
dec
cmp
cmp
sub
inc
sti
jnp
xchg
call
pop
dec
dec
cmp
enter
push
in
pop
movsl
ja
xor
mov
jmp
das
add
xor
mov
adc
dec
push
idivb
jge
pop
jno
je
mov
orl
mov
cmpsb
adc
dec
pop
gs
mov
mov
push
sbbl
xlat
data16
fldt
stos
jo
mov
out
nop
inc
mov
lock
test
mov
dec
sub
sub
cmp
cmp
ds
orl
and
cld
in
mov
movsl
fs
xchg
inc
movsl
popa
inc
pop
push
popa
jg
and
loope
pop
xchg
sbb
cmp
mov
cltd
push
sbb
lock
aam
neg
idiv
xlat
sbb
push
repz
les
xchg
or
mov
sarl
or
test
push
insb
cmp
insb
mov
jmp
push
cmp
mov
mov
movsl
xchg
jno
pop
add
push
cwtl
sahf
fptan
lock
loope
cmp
push
int
in
mov
mov
std
nop
cmp
cmc
test
mov
dec
scas
inc
imul
pusha
les
lgdtl
xchg
ficoms
clc
or
cmp
jge
inc
xchg
jmp
sbb
mov
call
pop
inc
xchg
aas
jbe
or
push
jle
mov
dec
mov
inc
xor
jge
rol
lea
fsubrl
adc
in
add
jmp
or
scas
inc
mov
enter
lcall
cs
cmp
cmp
xor
rclb
push
pop
mov
movsl
mov
push
jmp
or
sub
cmc
loop
adcl
call
pop
push
call
int3
mov
int3
jmp
jne
push
or
and
mov
cltd
and
mov
mov
mov
mov
pop
aaa
loope
popa
mov
and
xor
fbld
andb
sub
inc
call
rclb
stc
mov
dec
lret
rorl
out
or
adc
ja
jge
movsb
adc
mov
jbe
js
test
ja
add
sbbl
imul
mov
sbb
mov
orl
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
sar
sub
stos
cmp
imul
jle
test
aaa
lret
and
dec
jmp
cs
add
mov
dec
inc
jns
mov
int
leave
dec
stos
adc
popf
pusha
hlt
das
add
sbb
popa
sbb
insl
dec
cmpsb
out
push
aad
ja
pop
jg
rcrl
push
js
loopne
push
or
ds
sbb
ficompl
cwtl
and
mov
bound
cltd
popf
gs
mov
call
imul
in
lcall
lret
sub
mov
cmp
sbb
stos
fldenv
daa
in
or
mov
jmp
push
xchg
outsl
pushf
in
sbb
adc
outsl
jb
out
sarb
adc
stos
js
mov
jmp
push
cli
or
mov
fs
mov
push
mov
jge
add
popf
xlat
lea
push
cmp
pop
test
inc
popf
aam
lods
fnsave
push
and
add
ficomps
int3
ljmp
hlt
icebp
xchg
push
shrb
jne
pop
fbstp
int
and
xchg
fwait
jae
rol
adc
mov
and
push
cmpsb
movsl
mov
hlt
mov
sahf
mov
stc
aaa
xchg
lcall
aas
leave
pop
fdivrl
out
pop
sub
xor
out
arpl
out
push
out
sbb
cwtl
push
push
int3
pop
pop
fnclex
push
js
shlb
mull
add
jmp
inc
aam
inc
ljmp
sbb
dec
lret
scas
aaa
sbb
cwtl
mov
sub
fs
inc
in
sbb
jmp
sub
mov
bound
clc
insb
or
popf
outsl
sbb
pushf
mov
pop
into
enter
xchg
push
push
xor
in
imul
pop
mov
adc
mov
mov
xor
into
and
mov
ljmp
mov
inc
js,pn
pop
outsb
jns
out
push
movsl
lods
imul
test
add
js
cmpsl
pop
and
adc
mov
jo
subb
pop
fs
shlb
test
jnp
test
and
ret
pop
cltd
outsb
cmpb
mov
ss
xlat
add
in
mov
pushf
pushf
cmp
jle
pop
test
shll
lds
and
cmc
inc
call
jmp
pop
push
mov
jbe
dec
mov
xchg
lcall
dec
hlt
pushf
mov
add
sub
loope
fneni(8087
cmp
in
and
jle
and
push
push
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
jmp
mov
push
jl
mov
ret
add
fdiv
jle
data16
jle
sub
in
imul
loope
jmp
movsb
mov
mov
mov
pop
jge
or
jns
pop
inc
or
jbe
insb
push
sahf
push
mov
cmpsl
in
inc
fdivs
repnz
xlat
hlt
mov
push
jge
fbld
clc
imul
outsl
test
jo
pop
popf
jne
inc
sub
int3
xor
pop
or
and
out
fistl
mov
clc
or
sub
pop
in
sahf
mov
sub
cmp
adc
test
push
xchg
sarl
mov
bound
xchg
inc
xchg
mov
mov
push
repnz
and
iret
dec
fwait
outsb
lret
xchg
jb
test
pop
sarb
or
add
xor
hlt
test
or
iret
pop
rcl
jbe,pt
push
lods
cmp
xor
dec
pop
inc
jle
mov
pop
daa
icebp
pop
scas
les
push
aad
pusha
mov
sbb
andb
mov
cwtl
in
in
ja
jnp
xor
xor
test
or
inc
or
push
mov
mov
cwtl
insb
mov
in
add
movsl
push
rolb
and
cmp
lock
pop
aam
mov
jne
or
push
push
sub
add
popf
int
outsb
in
cmp
mov
add
pop
jns
push
das
pop
and
push
jb
or
mov
or
push
in
add
sbb
stc
jmp
aas
test
cli
cmp
fcmovu
adc
or
cmp
cld
jo
test
mov
cmp
jmp
lds
int3
mov
test
das
sti
or
sbb
inc
cs
jae,pt
or
mov
mov
jmp
add
js
add
adc
int3
jmp
inc
and
cmp
push
cli
std
xchg
movsb
pushf
clc
rcl
lds
jbe
dec
cmpsl
dec
push
xchg
enter
rcrb
ja
jp
shrl
test
adc
lret
bound
scas
pop
mov
sub
out
pop
or
cld
lret
cmp
loopne
loopne
cltd
pop
ret
mov
sbb
imul
and
vzeroupper
sub
cmp
xchg
lcall
push
pop
insl
popl
mov
or
cli
and
cmc
ss
loopne
and
mov
jbe
and
or
pop
pop
popf
pop
imul
ret
fisttps
dec
inc
mov
add
cmp
aaa
je
xchg
jb
fwait
cld
mov
sbb
sarb
popf
push
jle
stc
movsb
fimuls
jbe
in
bound
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
jmp
in
aaa
mov
jo
jno
scas
nop
xchg
xchg
ja
iret
lock
data16
jle
xchg
push
fstpl
shrb
mov
cmpl
das
push
cli
inc
sub
rorb
push
mov
jle
shlb
or
xchg
inc
mov
mov
sti
sub
sub
sub
imul
mov
mull
iret
mov
jne
fisttpl
mov
cmpsb
std
bound
and
push
xor
andb
gs
xchg
out
push
xchg
xor
fsubs
mov
xlat
dec
fsubrp
inc
dec
xchg
xor
mov
shlb
mov
test
push
sub
pop
pop
pushf
lea
fwait
into
adc
test
movsl
cmp
sub
jae
xor
jl
mov
jb
jae
dec
aam
fbstp
sub
cmpsl
fdivrl
popa
fwait
outsl
popa
sbb
shlb
movl
xor
inc
test
ret
in
notl
sbb
fcmove
mov
out
popf
out
mov
stos
mov
pop
dec
test
sbb
adc
mov
vdivss
sbb
cmc
insb
shll
addr16
fstps
and
mov
repnz
loope
xchg
and
cltd
cltd
inc
into
sahf
movsb
dec
mov
gs
int3
add
fwait
mov
xchg
inc
popf
pop
in
jo
adc
mov
sbb
sbb
jp
dec
rorb
inc
xor
sub
out
add
dec
xchg
pop
movsl
outsb
repnz
lock
jne
add
push
jnp
jo
push
dec
sahf
mov
inc
bound
push
pop
xchg
cmpsl
and
shlb
mov
fs
aad
fdivrs
sub
out
adc
and
xor
inc
sti
roll
pop
ret
lret
push
jmp
and
mov
dec
xor
sbb
hlt
out
pop
push
push
xchg
sub
or
jecxz
fistps
jg
mov
push
push
popl
ret
inc
hlt
lahf
out
clc
popf
xor
into
stc
ss
xchg
lcall
sub
cmp
rolb
or
sbb
fidivrl
pop
lock
cmp
xchg
xor
push
xchg
adc
repnz
jge
push
lahf
imul
cld
lods
xchg
mov
add
stos
mov
fistl
sbb
rorb
insb
divl
addr16
stos
repz
aas
loop
jp
mov
sub
fwait
das
mov
test
xor
sub
int3
psrad
ret
mov
xor
jno
mov
dec
dec
mov
outsl
push
enter
push
cmp
jne
ja
add
xchg
lret
xor
cmp
xchg
add
add
push
add
mov
mov
xor
xor
add
add
jmp
push
dec
fcmovne
jecxz
jae
loope
add
clc
aad
sub
jle
data16
jle
aad
movsl
mov
cmpps
sarl
xlat
dec
push
push
lret
scas
les
mov
cld
rcll
test
cmpb
rcll
sahf
mov
xchg
and
fwait
adc
pop
cmpsl
jge
pop
aad
nop
xchg
rorb
fcmove
jge
rorl
lret
fld
pop
mov
sub
push
outsb
adc
imulb
jmp
push
mov
int
mov
int3
mov
push
inc
jmp
dec
out
mov
fists
fstps
cwtl
imul
ds
sub
mov
fwait
in
push
cmp
imul
bound
or
mov
pop
jle
push
adc
sbb
cmp
mov
pop
sbb
stos
sub
sbb
push
inc
xchg
jb
cltd
cwtl
jmp
dec
push
or
movsb
cmp
shlb
jns
and
push
xchg
xchg
dec
sbb
cmp
mov
sbb
inc
scas
and
in
repnz
out
stos
jae
pop
add
mov
ljmp
xchg
mov
jb
scas
pushf
mov
stc
mov
mov
fisttpll
cmp
mov
movsb
gs
out
test
insb
out
pop
iret
daa
push
dec
sti
rcrl
call
subb
les
lock
jmp
sub
outsb
and
jmp
ret
push
daa
add
rorb
add
inc
mov
dec
dec
sub
adc
xchg
mov
push
jo
js
adc
into
mov
popf
negl
scas
and
xchg
fisubrs
lahf
mov
push
out
leave
push
imul
ret
xchg
addl
sub
pop
mov
movw
stc
mov
add
push
or
or
pop
xchg
xor
out
xchg
aaa
loope
push
stos
jne
out
sarl
jno
fcom
mov
test
push
pop
clc
pop
push
adc
or
sub
and
dec
andl
repnz
jae
je
test
adc
iret
scas
sarl
idivl
sub
xchg
xchg
or
pop
lahf
xchg
inc
cmpsb
in
sahf
xchg
push
daa
stos
mov
addr16
mov
xchg
test
jnp
mov
cmp
bound
mov
lods
adc
inc
mov
outsl
aad
nop
popf
mov
mov
mov
xor
inc
pop
jmp
cwtl
fmul
mov
mov
div
in
and
sarl
cld
add
mov
scas
bound
into
or
in
in
xchg
pop
andb
push
adc
jge
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
jmp
ss
cltd
sub
mov
icebp
sub
lock
jle
data16
jle
or
dec
jmp
sbb
clc
ret
and
es
mov
mov
rorb
jno
push
aaa
out
mov
jns
mov
daa
or
jle
and
shlb
pop
aaa
dec
mov
cmp
xchg
cmpsl
mov
loope
pop
xchg
imul
leave
sahf
test
clc
xor
subb
dec
mov
mov
mov
in
mov
xor
iret
ds
js
pop
sub
cmc
movsb
imul
fwait
dec
je
shr
pop
cmc
xchg
dec
lock
mov
push
dec
jl
sub
cli
inc
mov
mov
mov
ljmp
mov
lret
sub
adc
mov
insl
call
dec
sub
shll
nop
pop
mull
mov
std
mov
or
aam
sbb
cmp
daa
addr16
lahf
pusha
loop
xchg
jbe
dec
popa
int3
test
jp
cmp
jp
mov
in
add
jl
mov
dec
movl
mov
outsl
mov
add
pushf
outsb
add
nop
aam
adc
mov
jne
repnz
mov
dec
xchg
push
dec
jecxz,pn
loopne
in
push
aaa
inc
out
aad
mov
xor
and
xchg
mov
movsl
cmp
or
cli
mov
push
xchg
jge
push
jnp
xlat
or
std
leave
jmp
sbb
lcall
aam
stc
pop
dec
decl
jg
or
sbb
fdivrl
movsl
sbb
gs
lock
push
popf
out
test
ss
jmp
sub
popa
mov
push
sub
adc
jmp
dec
arpl
icebp
or
loope
das
cli
sub
add
adc
mov
or
sub
mov
repnz
sub
enter
pop
pop
fwait
fwait
insl
push
dec
stos
inc
out
sub
pushl
mov
mov
scas
cld
sbb
dec
jp
push
pop
pop
sbb
mov
shlb
ror
jg
mov
fsts
aam
enter
jge
cmp
push
xchg
mov
sbb
jns
jle
jb
fisubs
pop
pop
push
iret
insb
xchg
adc
mov
les
sub
sub
fistl
icebp
out
lret
jb
iret
into
pop
jmp
xchg
sarb
cmp
lods
pop
dec
sbb
mov
xchg
mov
jae
movsl
pusha
adc
cld
movsb
or
pop
jnp
push
in
xlat
ret
sahf
mov
test
imul
adc
adc
fidivl
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
jmp
fnstenv
sub
mov
jae
jns
xor
jl
jle
data16
jle
push
jb
jno
out
idiv
es
fimuls
xor
xlat
or
and
es
and
sbb
ljmp
pop
rorl
ja
push
push
jecxz
xchg
adc
stos
or
shrl
xor
jle
out
aam
sub
inc
aas
adc
addr16
cmpsl
mov
fdivr
mov
insl
sahf
jbe
or
fisttps
sbb
adc
adc
daa
ja
xchg
in
shrl
mov
call
push
stos
xor
mov
adc
jno
into
inc
das
pop
xchg
iret
aas
arpl
mov
lods
popa
pop
and
iret
out
cmp
cmpsb
outsl
cld
xor
sub
and
mov
call
add
add
addr16
xchg
sub
add
adc
jae
cmp
jmp
xchg
mov
mov
test
bnd
out
mov
rsqrtps
sbb
inc
scas
xor
cmp
fsubrl
inc
pop
jae
adc
mov
jge
and
es
in
fdecstp
cld
outsb
fucomip
mov
pop
sub
dec
push
lods
sub
out
rclb
pushf
arpl
mov
insb
shll
or
xchg
outsl
test
sub
or
lods
fidivrl
mulb
cmpsb
add
test
xor
xchg
push
jne
out
iret
loopne
jno
fdivrl
push
mov
mov
lock
add
cwtl
jge
mov
addb
bound
cwtl
adc
and
inc
ror
push
cli
test
popf
sub
xchg
adc
les
mov
out
jae
cltd
mov
inc
incl
lock
aaa
sahf
sub
inc
lods
and
or
cmp
movsb
sarb
imull
xchg
lods
stos
xchg
add
arpl
insb
data16
mov
imul
and
jp
cmp
mov
repz
fldenv
and
in
inc
jnp
or
xor
rolb
inc
bound
jnp
cmp
inc
ficomps
sahf
pop
xor
fnstcw
or
pop
mov
dec
lret
dec
pop
cmp
jp
and
insb
mov
mulb
jge
push
daa
jle
xchg
lret
mov
cmp
and
sub
rolb
xor
or
repz
mov
xor
or
adc
mov
je
add
pop
mov
shlb
add
les
mov
sbb
xor
xor
jle
in
xchg
fst
insl
lock
out
add
mov
mov
mov
mov
jmp
lods
mov
jno
mov
stos
jb
push
outsb
push
xchg
data16
jle
dec
shll
dec
scas
push
paddsb
sub
das
mov
loop
pusha
xor
and
mov
fdivrl
bswap
cmpsb
imul
xor
out
imul
or
mov
mov
or
sbb
mov
les
lcall
cmp
xchg
fcmovnu
jmp
or
xor
mov
xchg
in
stos
sahf
xchg
ds
or
std
mov
mov
shrl
pop
imul
dec
xor
cmp
popa
in
ja
push
nop
add
clc
push
outsb
or
and
sbb
popa
les
sub
enter
sub
pop
jp
xchg
mov
loop
and
xchg
jecxz
push
decl
inc
pop
les
push
xchg
por
pop
pop
testb
sbb
push
jae
out
mov
mov
out
adc
aam
roll
out
stc
outsb
push
fsubl
pop
lret
push
out
lds
dec
ljmp
loop
mov
dec
adc
arpl
jbe
push
jl
mov
fstl
incl
mov
inc
jo
jmp
loopne
das
shlb
mov
movb
mov
aas
sbb
in
sarl
add
hlt
jl
sub
mov
add
mov
stc
xor
dec
mov
sub
mov
cmpsb
dec
mov
out
inc
mov
out
or
mov
pusha
rolb
cmp
inc
pop
xchg
xor
aad
pop
les
jnp
or
roll
sub
ret
push
iret
mov
pop
mov
push
dec
jecxz
arpl
or
enter
jbe
add
inc
jge
sub
or
hlt
stos
cmp
cmp
test
fsts
inc
arpl
test
xchg
in
cld
or
lahf
loope
leave
adc
inc
inc
push
xor
inc
enter
dec
fimull
mov
dec
shll
stos
mov
rolb
iret
test
jo
add
in
xor
push
and
cmpsl
out
in
je
cmpsb
mov
iret
pop
add
cmp
das
test
mov
mov
jmp
mov
ret
sar
jns
aas
push
jle
mov
jns
scas
out
push
xor
xchg
lea
push
arpl
arpl
pop
divb
inc
sbb
xchg
pushl
sub
xchg
stc
sbb
push
fnstsw
scas
lock
fildll
int3
xor
xchg
enter
dec
sub
inc
xor
in
imul
shlb
inc
and
dec
pop
test
cmp
js
push
ret
bound
xor
add
add
imul
add
jmp
xchg
lods
mov
mov
jae
bound
xchg
jne
sbb
dec
cmpb
jl
jle
sbb
test
lock
mov
xor
lret
bound
out
xchg
aas
lds
js
out
mov
lret
mov
test
jae
aaa
pusha
push
xchg
sub
divb
fists
xor
mov
popa
pop
addl
pop
jne
lea
sarl
xchg
mov
xchg
call
popa
push
lods
inc
dec
cs
xchg
mov
jp
mov
or
sub
and
popf
xchg
push
push
push
out
test
cmpsb
popl
adc
push
popf
sub
in
mov
lret
je
xchg
ret
out
inc
mov
pop
adc
movsl
fdivl
call
aam
mov
jne
fstl
cmc
inc
add
jo
stc
shlb
xlat
inc
addr16
mov
push
fnstsw
sub
pop
inc
mov
xchg
mov
movsl
or
inc
loopne
pop
xchg
enter
sub
xchg
call
in
frstor
jbe
xchg
jl
push
sbb
xchg
jle
mov
xchg
pop
adc
popa
mov
stos
inc
push
ret
jmp
js
sbb
pop
adc
out
push
mov
or
mov
mov
mov
fs
xchg
inc
dec
push
popf
pushf
inc
fbstp
adc
daa
mov
lock
addr16
xchg
arpl
mov
sbb
mov
mov
xor
in
push
sub
xchg
pop
sti
rcrb
cmp
out
jecxz
dec
cmp
frstor
mov
dec
test
mov
movl
adc
pop
leave
pop
and
mov
adc
mov
xchg
xor
sub
repz
jl
frstor
lods
dec
xchg
sub
pushf
pop
push
lret
and
popf
out
out
pshufw
xor
mov
or
outsb
or
mov
inc
aaa
xchg
cli
and
mov
sbb
jbe
fcomi
data16
and
mov
and
xchg
cmp
dec
ss
pop
jmp
jmp
aaa
push
cmp
je
loop
mov
xor
xchg
xor
xchg
lock
popa
or
mov
das
mov
loopne
nop
mov
push
mov
in
cmpsl
lcall
inc
add
int3
jo
xorl
adc
sbb
cli
or
aaa
mov
dec
adc
outsl
push
push
dec
mov
lcall
pop
dec
dec
out
pushf
and
push
mov
mov
les
out
cmp
sar
push
adc
in
into
fildll
shlb
daa
scas
jnp
loope
mov
mov
mov
xor
add
jmp
cld
jmp
adc
inc
jno
faddl
xchg
mov
jle
data16
jle
sub
cltd
push
mov
loope
loope
mov
int
push
gs
lock
mov
cmp
lea
mov
add
imul
test
loope
cmp
cmp
shlb
pop
clc
outsb
mov
shl
stos
sub
lock
or
jbe
roll
inc
cmp
cli
mov
add
cmp
mov
mov
into
mov
or
daa
dec
dec
aaa
dec
insl
repz
cmp
xor
and
jle
popf
test
mov
pop
test
inc
fbstp
iret
add
cmpsb
mov
clc
or
jg
xchg
mov
fmull
pop
lcall
bound
popf
jecxz
push
arpl
cli
sub
call
fcomps
mov
mov
test
ret
push
adc
jmp
push
stos
push
cmp
pop
jb
imul
daa
test
mov
jae
movsl
das
iret
sub
rcrb
push
mov
pop
mov
ret
insl
xchg
ret
and
stc
sub
bound
imul
push
add
inc
cmc
xorb
daa
fsubr
mov
dec
push
mov
or
inc
bound
adc
cmp
push
aad
mov
lds
ljmp
mov
inc
shrl
in
mov
jmp
fsubrl
mov
lcall
in
das
mov
in
test
rclb
roll
cmp
mov
jg
cmp
push
cmp
push
adc
xor
or
xchg
sti
lea
push
in
pop
mov
jb
xchg
and
hlt
insl
aam
ficoml
lret
xchg
mov
sub
push
xor
cmp
movl
push
pusha
dec
and
scas
sbb
adc
shll
stos
cmp
jl
push
nop
mov
stos
call
in
adc
and
and
inc
icebp
mov
loop
mov
and
lods
mov
cmpsb
pushf
cmp
pop
xor
mov
push
repnz
sub
xchg
stos
rcrb
xor
movsb
into
test
fisubrl
and
ds
stos
or
pop
mov
or
rolb
dec
sahf
add
mulb
jno
sub
pop
call
bound
popf
lock
cli
add
lahf
insl
push
loopne
mov
add
roll
push
imul
imul
mov
xor
sub
mov
jmp
sbb
cmpsl
pop
mov
loope
xchg
or
or
data16
jle
jnp
sub
xchg
cmp
fstp
shlb
das
addr16
lcall
xchg
arpl
pop
hlt
inc
lds
mov
push
nop
loope
es
andb
cmpsb
lret
gs
sbb
push
ja
roll
add
cli
pop
pop
test
xlat
xchg
sub
in
mov
mov
cmpsl
mov
arpl
outsl
sbb
xchg
fstps
test
cmp
ficompl
or
push
fbstp
dec
stc
imulb
ja
inc
out
pop
mov
sahf
add
int3
gs
adc
xchg
arpl
pop
movsb
sub
lret
popf
jns
or
cmp
cli
lock
ds
flds
sub
mov
push
xor
cs
xchg
cwtl
in
sti
dec
negl
mov
scas
inc
xchg
int
dec
mov
stos
mov
popf
mov
pop
sarl
jg
ds
movsb
shrb
imul
aam
faddl
adc
pop
test
loope
bound
sbb
pop
ret
dec
pcmpeqb
cmp
mov
test
out
notl
add
inc
loopne
mov
into
dec
enter
add
mov
lea
xchg
adc
and
ret
cmc
mov
or
xlat
fisubrs
add
dec
lcall
push
pusha
hlt
jge
mov
xor
sub
mov
adc
pop
cmp
int3
cld
mov
xchg
inc
adc
pop
cld
scas
out
jmp
sub
stos
sbb
test
call
inc
clc
in
push
inc
int
xchg
ret
negl
cwtl
adcb
into
popf
outsb
push
jmp
stos
xchg
pop
push
mov
add
add
mov
lret
arpl
loopne
jbe
mov
cmp
ja
jmp
leave
scas
pushf
mov
pop
imul
outsl
jb
dec
divb
pop
stos
inc
cmp
and
sub
std
pop
loope
jecxz
and
loope
xchg
scas
pop
nop
rep
jmp
add
stos
inc
jg
push
cmp
push
add
out
xchg
push
es
mov
jns
rol
cmpl
outsb
sub
pop
pop
cld
fwait
mov
fstl
arpl
shlb
fdivrs
sub
into
bound
loop
pop
pop
icebp
and
or
iret
loopne
or
outsb
imul
inc
or
mov
push
dec
mov
mov
or
stos
adc
sbb
jl
cmpsl
nop
nop
adc
jg
pop
pop
popa
mov
pusha
dec
shlb
imul
std
jnp
fnstsw
xchg
push
add
loop
pop
mov
clc
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
jmp
rcrl
popf
and
scas
mov
jle
jl
jle
aam
add
outsl
inc
mov
cmp
stos
cmp
inc
dec
ss
outsl
test
out
mov
add
lret
pop
fwait
adcl
icebp
dec
and
test
mov
xchg
pop
stos
sub
sub
add
xor
adc
sahf
js
test
xchg
out
addr16
sbb
push
push
sbb
mov
xor
int3
sbb
cmp
dec
push
inc
cmp
fisubrl
sub
dec
or
outsb
mov
sbb
jecxz
cmp
sahf
pop
std
ja
push
xchg
pop
repz
inc
push
push
mov
mov
mov
aaa
int
test
lods
jl
jge
xor
imull
pop
in
shll
movsb
push
scas
dec
scas
jo
out
sbb
push
or
iret
in
jmp
test
inc
lea
mov
jg
and
sbbb
ret
insl
out
arpl
shlb
jle
cwtl
notb
in
test
adc
mov
fnstsw
pop
mov
or
mov
dec
cltd
sub
adc
cmpsl
push
loope
fs
aaa
mov
aam
mov
stc
pop
stos
jecxz
cs
clc
js
mov
fldenv
mov
push
push
push
jmp
xchg
jne
pushf
test
push
mov
ret
mov
and
out
adc
push
pop
int3
js
data16
adc
jge
push
roll
pop
mov
insl
jle
loope
add
dec
movsl
pop
add
xchg
xchg
mov
pushf
push
fdivs
and
pusha
sub
je
fdivr
pop
iret
mov
xlat
adc
fwait
je
insb
mov
xchg
pop
stos
in
push
stos
leave
pop
jb
sbb
lock
jge
notb
jo
popf
mov
mov
pop
in
xlat
bound
mov
xlat
and
cmc
fimull
push
into
add
inc
push
fwait
mov
pop
outsb
hlt
xchg
inc
lds
ljmp
int
movsb
xor
stos
sub
jl
inc
mov
ret
add
popa
push
xchg
push
add
xor
imul
sub
call
xor
jecxz
inc
adc
es
mov
and
xlat
xchg
mov
pusha
popf
pushf
push
and
and
ds
fbstp
pop
and
pop
lret
outsl
push
fisttpl
sbb
pop
stos
cmp
aam
sub
mov
clc
inc
sbb
out
std
sub
out
lret
shlb
out
fidivrl
mov
and
adc
dec
pusha
inc
add
adc
cmp
push
loopne
xor
sbb
sub
int3
leave
inc
push
cs
xor
cltd
nop
mov
xchg
jo
add
imul
mov
jmp
shrl
mov
loopne
cli
pushf
dec
scas
mov
in
xchg
jle
data16
jle
fwait
popf
mov
push
sarb
jge
ret
out
fwait
pop
adc
cmp
pop
mov
mov
jns
xorl
dec
jp
mov
movsl
pop
pop
hlt
xchg
mov
mov
das
inc
add
push
mov
push
gs
sbb
push
aad
outsl
scas
push
sub
inc
inc
or
insb
mov
cwtl
popa
sub
fdivl
push
and
bound
cld
inc
sub
push
cmpsl
pop
xchg
mov
nop
int
in
sti
sub
loop
mov
push
ret
inc
mov
sbb
popa
aad
int3
mov
cmpsb
jnp
sbb
pop
int
jns
mov
xor
add
aas
ja
mov
xchg
sbb
mov
jmp
jnp
add
cmc
js
and
cld
and
rorb
jo
jle
jle
mov
scas
sahf
jmp
sbb
jae
add
lods
imul
cmp
adc
dec
add
sub
push
mov
adc
les
popa
insb
andl
jo
je
xchg
dec
inc
mov
or
fisubs
mov
or
mov
pop
cs
andl
stos
dec
and
cmpsb
int3
dec
addl
and
or
in
sbb
mov
shlb
imul
cmc
pop
scas
loop
inc
jne
clc
scas
es
movsb
insb
insl
jg
stos
out
mov
sbb
aam
jle
stc
test
bound
jnp
daa
push
outsl
int
inc
mov
inc
in
sbb
jae
mov
mov
ljmp
adc
adc
pop
push
adc
inc
jp
dec
mov
test
loopne
shlb
mov
daa
andb
push
adc
inc
icebp
xchg
push
mov
popf
dec
cmc
mov
push
cld
sub
sub
std
sarb
mov
out
div
ficoms
in
scas
dec
js
lret
stc
lahf
xchg
push
out
dec
mov
insb
mov
test
inc
adc
outsb
clc
test
imul
movsb
into
add
lcall
ds
mov
neg
mov
jbe
das
inc
out
rol
jae
aad
mov
cld
imul
jmp
push
xchg
push
mov
mov
pop
mov
mov
rcrb
stc
sub
jl
push
ret
cs
test
adc
icebp
mov
outsw
movsl
xor
cmpsb
test
fidivrl
or
movsl
scas
dec
rcr
sbb
subb
push
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
call
andl
xor
movl
cmp
jne
movl
cmp
movl
jne
orl
push
addl
call
push
movl
push
andl
push
call
test
movl
je
sbbl
lea
orl
push
movl
movl
subl
movl
subl
movl
orl
call
orl
test
je
decl
xor
jmp
sbbl
push
andl
push
push
call
movl
jmp
adcl
push
call
sbbl
test
movl
jne
push
mov
add
mov
movl
adc
lea
mov
xor
lea
dec
mov
xor
mov
notl
mov
add
mov
mov
adcl
push
sbb
mov
movl
xor
push
xor
mov
adcl
add
mov
mov
cmp
mov
mov
je
andl
mov
xorl
xor
add
imul
mov
movl
jmp
addl
xor
add
mov
adcl
mov
xor
movl
cmpl
je
cmpl
jne
pushl
call
xor
add
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
addl
add
sub
mov
movzwl
and
mov
addl
mov
xor
add
movl
cmp
movl
jne
subl
pushl
subl
pushl
subl
call
negl
mov
mov
orl
mov
mov
or
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
addl
mov
mov
mov
sbb
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
movl
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
sub
mov
addl
mov
subl
xor
addl
xor
add
mov
andl
xor
andl
xor
add
movl
lea
cmp
movl
ja
mov
orl
xor
lea
orl
push
movzbl
xor
mov
mov
addl
xor
lea
adcl
push
xor
xor
sbb
mov
addl
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
dec
jmp
pop
lods
xchg
je
jo
mov
mov
mov
xchg
jle
push
jl
jle
jb
fnstenv
xor
jle
push
ss
les
mov
pusha
inc
push
loopne
sub
das
push
rolb
mov
loopne
aam
xchg
xor
stc
fxch
les
imul
sti
decl
or
dec
fcompl
arpl
dec
pop
popa
add
popa
lods
shrl
dec
inc
roll
testb
out
or
xor
loope
mov
mov
jle
jmp
pop
pop
popa
sbbl
outsl
ret
aaa
mov
push
dec
and
jns
mov
ret
fdiv
movsb
rcrb
loope
arpl
pop
dec
in
cmc
mov
imul
and
sub
outsb
sbb
in
add
into
push
mov
inc
orb
inc
sub
lret
sbb
pop
int
pop
dec
push
pop
push
cltd
mov
dec
jns
or
cmp
divb
push
adc
lds
mov
push
rcrl
nop
bound
push
out
jae
test
test
das
ret
xor
sahf
mov
xchg
xchg
call
movsl
inc
test
out
mov
mov
push
mov
push
test
xor
pushf
add
rcrl
cmp
test
hlt
sub
jno
sti
enter
xchg
adc
push
enter
js
sub
pop
push
sbb
int
and
mov
dec
scas
outsb
jb
xchg
gs
sbb
call
imul
xor
dec
clc
rorl
movsb
mov
adc
mov
rcr
daa
mov
sbb
ficompl
cwtl
push
pop
jne
push
add
add
js
leave
in
bound
xor
rcll
push
iret
jbe
sbb
add
mov
gs
aam
je
jns
xchg
sub
mov
incl
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
push
pushl
push
push
pushl
pushl
pushl
call
xor
add
dec
mov
jmp
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
xor
or
dec
mov
jmp
and
mov
sbb
mov
subl
push
adc
push
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
push
mov
adc
add
sbb
mov
notl
lea
xor
mov
mov
add
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
arpl
jae
jno
lret
nop
movsl
pushf
in
jle
push
jl
jle
mov
adc
push
inc
or
mov
pop
dec
and
cld
cs
out
popw
and
or
xchg
and
mov
xor
hlt
xchg
jecxz
add
jl
loope
mov
cmp
mov
cmpsb
popf
aad
lock
adc
cmovb
lock
addr16
out
inc
lods
adc
and
call
mov
daa
add
cmp
dec
jo
mov
inc
aaa
in
jp
ror
lods
jae
pop
xlat
shll
sub
js
jl
dec
xchg
add
insl
sbb
inc
ljmp
and
test
sti
cltd
pop
imul
jg
ljmp
jmp
iret
dec
jbe
or
dec
xchg
shrb
xchg
cmpsb
je
lea
cs
imul
mov
jbe
lock
xchg
nop
cmp
mov
xor
sub
mov
dec
jg
ds
shlb
pop
inc
inc
pop
rcrl
sbb
mov
sbb
sbb
lret
shrl
aad
or
mov
xchg
mov
xlat
jns
xor
ret
call
bound
sbb
dec
out
adc
lods
add
adc
and
mov
outsl
mov
xor
cmpsb
inc
repz
sbb
mov
mov
aas
or
mov
and
dec
ja
pop
mov
mov
das
pushf
cwtl
jne
out
cld
and
dec
jo
loopne
mov
pop
push
pop
cwtl
cmp
fwait
jg
xchg
jbe
mov
mov
ds
adc
in
mov
mov
xor
ja
test
sub
aad
insl
adc
jle
stc
and
stos
inc
ss
jg
daa
aad
mov
jno
adc
out
xor
xchg
sub
mov
mov
mov
movl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
jmp
pusha
imul
cmc
mov
stos
insl
dec
arpl
push
jl
jle
or
das
or
cmp
pop
sub
loopne
test
aad
xor
cmc
fwait
dec
cmc
mov
push
cmpsl
mov
push
scas
and
lret
cmp
lods
mov
pop
scas
nop
cmp
xor
xor
int
jno
xchg
sti
push
insb
adc
test
ss
inc
orl
xor
stos
lods
or
fiadds
jp
aam
mov
xor
repz
or
jl
mov
test
orl
addb
jbe
pop
dec
fsubr
mov
lods
dec
jecxz
insl
cwtl
mov
ds
xchg
xor
cwtl
add
ds
cmc
inc
push
insl
outsb
push
loopne
mov
mov
pop
mov
and
mov
or
dec
fcompl
rolb
mov
mov
adc
pop
push
pop
mov
jbe
push
xor
mov
xor
mov
push
or
push
jnp
aaa
cmc
mov
jp
xchg
shr
mov
mov
lea
xchg
enter
cmp
dec
adc
cmp
test
mov
sahf
pop
imul
cmp
lcall
lea
pop
addr16
mov
data16
cmpsb
scas
dec
or
stc
clc
cwtl
hlt
addr16
test
aas
pop
insb
pop
nop
xor
lret
jmp
and
nop
lods
pop
fcoms
fmull
mov
je
stos
push
in
loope
sbb
out
repz
push
jg
and
adc
fldt
sbb
add
cmp
pop
xchg
mov
loope
inc
or
jp
add
cld
add
aaa
int3
mov
cmpsb
ffree
or
jns
adc
cmpsb
push
lret
jne
sahf
ja
andb
mov
sub
ss
cltd
mov
mov
imul
xchg
data16
clc
es
cmp
add
mov
mov
mov
mov
mov
mov
movzwl
add
movl
mov
mov
mov
xor
add
jmp
or
das
mov
push
test
shrl
roll
jle
insl
pop
mov
cmpsb
out
mov
mov
lret
in
push
ja
movsl
add
test
sarl
sbb
push
sbb
adc
lea
xchg
test
scas
popl
bound
jb
inc
push
adc
ja
xchg
sbb
out
into
lock
test
frstor
jns
test
jmp
inc
xchg
ds
xchg
pop
mov
enter
xchg
inc
flds
cmp
enter
lret
cmp
arpl
pop
lods
mov
call
push
pop
dec
cmpsb
call
dec
test
sub
nop
js
sbb
fisttpl
and
arpl
icebp
push
lock
pop
out
mov
or
dec
call
stc
mov
xchg
sbb
movsl
dec
scas
loopne
xchg
jne
cmp
hlt
pop
adc
jne
or
mov
pop
xchg
ret
cs
dec
in
cmp
add
fs
lcall
mov
dec
clc
cmp
jl
inc
adc
cmp
lret
inc
cmp
cltd
hlt
sbb
out
sub
sub
dec
loop
lock
jmp
dec
mov
push
fidivl
test
adc
test
push
mov
rclb
add
adc
push
fcom
inc
push
cwtl
cmp
inc
je
add
imul
ja
push
hlt
ja
push
shlb
pop
push
jmp
lahf
cmp
and
repz
xchg
jge
dec
or
bound
push
push
adcb
dec
mov
out
test
mov
outsb
orl
cli
ret
dec
cwtl
test
inc
les
sbb
fs
xor
jecxz
and
data16
push
jle
mov
andb
imul
cmpsb
out
cmp
frstor
sub
insb
fwait
add
mov
add
subb
adc
mov
or
xchg
mov
cmp
jmp
sbbb
cltd
jno
jo
gs
fistl
jle
inc
cwtl
cmp
cld
mov
inc
mov
or
inc
out
mov
add
cmp
ror
rcrl
pop
sub
loope
push
xchg
sub
xchg
mov
xchg
pop
andb
pop
cs
scas
sti
xor
sti
lret
sub
ret
adc
test
push
loopne
push
xor
push
pop
adc
push
xchg
mov
gs
push
aaa
std
cmp
movsb
mov
rorl
outsb
int
js
push
stos
adc
idivb
cli
js
not
insl
in
add
sti
jae
adc
push
rorb
push
shll
cltd
adc
add
sbb
adc
dec
push
jg
push
add
adc
hlt
sub
push
lahf
mov
dec
sbb
jmp
cmpb
mov
adc
call
stos
adc
stc
add
dec
push
scas
fstl
add
frstpm(287
inc
add
add
add
out
mov
ss
mov
out
push
push
push
xchg
jnp
fwait
mov
cwtl
enter
adc
jne
pushl
data16
and
rolb
scas
push
add
dec
dec
mov
sar
dec
or
inc
sub
mov
xchg
test
aas
jp
add
sbb
dec
xchg
pop
aaa
inc
mov
push
pushf
and
pop
aaa
adc
dec
mov
pop
loopne
movsl
sbb
inc
push
dec
or
aad
and
or
pop
pop
into
push
mov
add
mov
jnp
xchg
mov
jae
ret
je
in
push
sub
stos
push
pop
imul
hlt
sub
mov
test
sub
jbe
xchg
and
fwait
mov
mov
mov
mov
jge
ret
xchg
mov
pop
mov
jmp
jne
jmp
xchg
mov
icebp
inc
cs
pop
sub
cmp
jle
push
adc
ret
sbb
icebp
xor
pop
imul
pusha
adc
mov
fs
test
sahf
dec
inc
lret
and
andb
sub
or
push
lods
add
inc
mov
test
add
hlt
lahf
sbb
push
das
aaa
arpl
mov
push
shrl
clc
rcr
jnp
xchg
lcall
iret
imul
sbb
or
mov
cmp
inc
xor
loop
and
subl
fdivl
nop
xor
and
xchg
mov
push
das
pop
mov
pushf
pusha
sbb
xor
add
push
mov
cmpsl
adc
inc
js
add
adc
mov
cmpsb
sahf
jae
hlt
fmul
cmpsl
mov
rcl
js
shrl
pop
xchg
push
add
push
test
xchg
aad
movsb
jle
inc
into
mov
cltd
jnp
mov
mov
into
adc
fadd
adc
sbb
sub
and
cwtl
shlb
mov
ds
jmp
es
dec
push
sarb
push
fsubs
push
test
sbb
sbb
negl
ja
fists
sarb
dec
pop
sub
fisubrs
mov
insb
cld
test
or
inc
fmul
ds
popf
shll
mov
cld
cmp
and
mov
nop
mov
testl
out
or
pop
sub
add
lods
push
mov
jge
inc
insl
les
pop
inc
and
test
popa
lock
andl
push
test
mov
in
fs
mov
lcall
mov
mov
shrl
fldcw
clc
push
xor
xchg
insb
rorl
or
leave
pushf
shl
leave
imul
jo
push
dec
jmp
lea
ret
or
add
cmp
jmp
dec
iret
lods
dec
lods
imul
frstor
xchg
mov
jle
push
jl
jle
and
jns
lahf
ret
addr16
mov
cmp
and
stc
xchg
fdiv
hlt
mov
push
dec
idiv
jg
dec
cmp
movsb
mov
adc
sub
divb
daa
mov
xor
loope
sub
add
pushf
nop
in
insb
or
xchg
mov
insb
lret
scas
pushf
xor
fs
rorl
dec
cwtl
enter
rolb
cs
aam
enter
push
sub
std
add
out
inc
or
mulb
pop
adc
rorl
in
stos
jbe
jb
das
data16
or
das
or
out
test
xlat
add
sti
cmp
dec
rcrl
scas
into
mov
ja
sbb
cmp
cltd
shlb
xchg
pop
push
enter
aas
hlt
mov
rcll
pop
cwtl
cmpsb
adc
into
mov
pop
or
cmp
xor
lahf
jge
cld
sar
fldenv
cmp
call
pop
inc
dec
sbb
aam
or
std
mov
cwtl
mov
sti
js
cwtl
adc
dec
addr16
loope
aam
or
test
fldl2t
adc
xchg
fisubrl
mov
insl
incb
andl
dec
out
jae
ret
push
imul
fistps
xchg
cli
rolb
imul
shll
and
cmp
ja
loop
shrb
js
stc
xor
jno
pop
mov
stos
lahf
aad
cld
push
or
adc
subb
xor
mov
push
fisttps
cwtl
adc
push
fs
push
push
xor
ss
arpl
sub
pusha
cmpl
lret
repnz
rol
sbb
dec
sub
ret
or
inc
scas
mov
pop
aam
jecxz
jl
mov
jne
mov
mov
xor
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
jmp
lret
mov
or
and
cmpsl
or
jle
jl
jle
dec
das
pcmpgtd
sbb
in
inc
xchg
lahf
sbb
cld
inc
pop
lret
push
push
jl
stos
lret
mov
push
loope
pop
jne
jno
stc
jecxz
in
mov
add
ret
cmp
push
add
xchg
mov
adc
test
pushf
inc
mov
cwtl
push
insl
repnz
sub
adc
js
lcall
fdivrs
push
mov
or
xchg
call
jne
adc
mov
stc
push
sub
leave
ret
std
pop
cwtl
out
imul
popa
in
jae
loopne
add
lods
inc
xlat
aaa
jmp
mov
or
mov
in
jb
rcrb
cmp
testl
stc
shll
jmp
cmp
or
loop
sbb
inc
pop
popa
lods
jle
aaa
xchg
pop
mov
xor
sbb
mull
jl
mov
sub
or
daa
clc
adc
dec
push
dec
jbe
out
addr16
xor
iret
cmpsl
add
and
lahf
mov
es
mov
dec
movlhps
dec
add
ficomps
push
bound
jae
and
and
adc
lret
add
dec
dec
cmp
adc
stc
jle
pop
cltd
pop
std
sti
cwtl
xor
rclb
pop
sbb
cmovl
ret
push
loop
or
lea
xlat
stc
scas
dec
jno
push
outsb
sbb
inc
xor
dec
imul
lret
mov
cmp
inc
sub
mov
outsb
lods
or
int3
dec
cmpsb
ja
sbb
or
sub
inc
lret
dec
sub
hlt
insb
xchg
leave
aad
ds
lods
and
push
sbbb
xchg
repnz
aas
aam
iret
push
arpl
jb
outsl
aam
popa
dec
add
dec
in
inc
or
dec
or
movb
xor
sub
mov
movzwl
sub
cmp
jmp
popa
ja
add
xorl
inc
mov
scas
push
movsl
jle
push
jl
jle
loopne
push
mov
jae
dec
or
dec
hlt
xchg
pop
cs
and
jle
pop
add
jl
jns
xchg
ljmp
sbb
adc
sub
dec
pop
iret
pop
or
pop
ds
shr
jg
xchg
xor
jnp
jg
imul
in
out
rclb
and
icebp
dec
lret
mov
test
das
jbe
push
insb
out
push
mov
sub
shl
stos
fadds
in
es
mov
orb
xor
ss
jl
ja
inc
es
or
mov
xchg
popa
bound
jo
mov
data16
in
ljmp
xor
nop
mov
mov
inc
inc
addb
ret
add
aaa
cmp
pop
jle
rcl
or
push
ds
je
or
aaa
loopne
inc
sub
mov
add
xchg
mov
sub
pop
add
dec
pop
cmp
and
and
int
popa
nop
sub
lods
in
sub
adc
push
or
mov
gs
cltd
fidivs
ljmp
aad
out
xchg
cmp
adc
iret
fwait
mov
jg
ja
stos
mov
lret
xchg
hlt
cld
push
mov
xchg
ss
outsl
or
je
push
nop
mov
cmp
and
cltd
sub
pmaddwd
mov
test
loopne
and
jbe,pn
test
pop
inc
mov
and
cmpb
loop
inc
push
sub
sbb
mov
mov
lock
cld
ljmp
dec
scas
inc
loopne
mov
pop
loopne
lea
rclb
mov
jnp
inc
and
out
loopne
ja
imul
lahf
mov
lds
jl
xchg
sahf
xchg
inc
sub
xchg
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
jmp
cli
subb
cmc
stos
inc
push
jo
inc
cmpsl
shrl
mov
jle
mov
out
mov
jge
imul
ss
cwtl
cld
pop
cmp
pop
dec
fisttps
aaa
jge
fsubs
push
mov
ss
mov
sbb
mov
inc
jo
imul
call
icebp
js
js
mov
xchg
lret
outsb
icebp
lock
pop
mov
lock
adc
repz
pop
cs
int3
aam
mov
cwtl
data16
mov
fildl
sbb
dec
or
lcall
xchg
sub
idivl
dec
rcll
stos
push
lods
xchg
xchg
test
jne
pusha
fsubrl
les
xchg
pop
mov
rcll
popa
cmp
push
sub
xchg
jb
push
mov
sbb
jg
push
ss
insl
cli
jns
leave
and
mov
hlt
sbb
shl
fisttpl
out
sub
enter
sarl
pop
or
mov
add
jns
fisubs
mov
cmc
mov
jae
jge
fcoms
xor
cs
push
add
mov
lock
inc
push
popa
mov
jge
mov
jecxz
pop
hlt
adc
pop
adc
xchg
lds
or
sbb
sbb
insl
sti
lds
arpl
pushf
inc
int3
and
or
test
das
gs
or
and
xchg
sub
xlat
pushf
mov
jle
push
adc
cmp
fidivs
cs
pop
jnp
and
pop
fisttps
ljmp
cmc
inc
imul
push
xor
mov
js
jecxz
cmc
addr16
lods
push
addl
fisttpll
cwtl
and
std
add
or
add
aaa
or
test
fistpll
pop
jo
pop
mov
mov
push
and
lcall
sub
mov
or
orl
ds
ret
testb
outsb
out
mov
mov
xor
add
jmp
rcrb
gs
icebp
cltd
mov
and
lds
jle
push
jl
jle
and
fsubr
mov
add
cmp
and
jg
sbb
adc
into
xchg
adc
mov
js
jnp
sbb
add
mov
adc
dec
insb
mov
jp
fistpll
repnz
arpl
lea
pop
pop
inc
cwtl
ds
sbb
pmulhw
jnp
xor
mov
jne
outsl
xchg
js
insl
or
inc
out
inc
inc
xchg
lahf
adc
add
xchg
or
xor
test
popf
jnp
pop
sub
sub
outsb
rorb
jg
bound
aaa
inc
push
mov
adc
scas
jl
rcrb
out
sbb
ja
stos
inc
adc
lods
dec
hlt
push
rcrl
xchg
sbb
fimuls
mov
pop
jg,pt
enter
inc
ja
xchg
insl
lds
cs
inc
callw
pusha
lea
or
mov
mov
inc
add
jecxz
call
push
adc
dec
inc
scas
cmpl
int3
sbb
mov
pop
ds
or
ljmp
xor
pop
in
gs
xchg
inc
adc
cmp
sub
movsb
mov
aas
inc
add
xchg
xchg
subl
shrl
and
repnz
loop
rclb
ljmp
ljmp
fcoms
imul
fucomi
xchg
fiaddl
into
dec
xor
outsb
fsubr
jge
sbb
or
fists
xor
mov
mov
pusha
lds
and
addb
jae
imul
ret
push
and
xchg
pop
mov
mov
lret
hlt
sbb
mov
pop
out
and
pop
loop
mov
in
out
add
add
test
add
add
clc
mov
mov
jmp
js
sbb
cltd
ja
jno
cli
xor
je
lds
lods
jle
push
jl
jle
notl
pop
roll
push
xchg
aam
sbb
dec
dec
repz
mov
outsl
lea
jl
pop
mov
icebp
add
cwtl
add
sbb
sub
lods
in
stos
push
jmp
mov
mov
mov
scas
outsl
xor
ss
jae
dec
jmp
ret
movb
and
fmuls
jb
idivb
popa
cmp
fcoml
jae
adc
push
in
xchg
pop
jle
data16
pop
out
pusha
repz
fistpl
sbb
mov
mov
inc
or
lds
cmp
adc
xchg
sahf
lea
and
dec
push
out
pop
lahf
mov
out
mov
lea
mov
inc
cltd
scas
out
es
sti
dec
add
lods
pop
pop
and
hlt
push
outsl
dec
adc
int
stc
scas
lahf
fldt
aad
aad
arpl
dec
dec
rorl
mov
sbb
movsb
decb
sub
jecxz
ret
fs
xchg
xor
jb
ja
pop
repz
loope
lock
xor
sub
xor
scas
sahf
dec
imul
or
shlb
aam
mov
jmp
cmpsl
rcr
or
push
mov
icebp
mov
adc
lcall
and
mov
fxch
xchg
sub
push
rcll
cmc
jl
adc
jno
lods
mov
pop
es
test
inc
cwtl
inc
sub
sbb
jg
imul
sbb
pop
cwtd
pop
or
xor
dec
or
insb
cmp
inc
cwtl
je
imul
or
xchg
ret
dec
jmp
js
pop
out
ret
sub
lcall
mov
out
roll
clc
fisttpll
xchg
add
out
sbb
pushl
sar
mov
cli
in
xchg
shlb
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
jmp
and
xor
adc
push
add
adc
jle
push
jl
jle
jmp
dec
je
stos
mov
iret
sub
repnz
xchg
sahf
xor
loop
out
movsb
and
pop
mulb
jge
dec
or
in
jns
fucom
push
and
mulb
sub
inc
and
mov
std
daa
push
js
roll
aad
mov
push
sarl
sbb
cmp
jnp
xchg
js
dec
movsl
mov
adcb
jecxz
fwait
mov
arpl
cmpsl
jne
lea
jo
or
loopne
push
fwait
pushf
fwait
popl
mov
cmpl
outsb
jmp
scas
dec
pop
mov
mov
cli
mov
ret
sub
ret
in
mov
dec
sahf
loopne
cmpsl
orl
push
push
insb
daa
aas
aas
fdivl
fld
pop
out
scas
pop
mov
ss
pop
mov
addr16
out
popf
fiaddl
shlb
and
mov
mov
cs
repnz
loopne
xchg
cmp
outsl
xchg
or
sbb
ljmp
fidivs
push
dec
sub
dec
dec
sub
fisubrl
mov
and
aam
mov
add
adc
inc
dec
fstl
pop
xchg
cli
push
fldt
fimull
je
int3
scas
mov
popf
out
sub
jg
fbstp
xor
add
cmpsb
push
or
inc
add
inc
lock
ja
enter
pop
jb
xchg
ds
icebp
jge
lock
pop
jb
push
jle
aam
test
mov
mov
ds
mov
popf
pop
cmc
cmp
shrl
xchg
int3
imul
mov
inc
and
or
add
xchg
lcall
xchg
dec
or
push
jno,pn
mov
and
mov
in
test
jo
mov
lret
imul
push
or
lcall
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
jmp
sub
add
popa
push
in
jno
mov
mov
pop
adc
push
jl
jle
add
je
mov
addr16
divl
into
and
add
push
mov
cmp
xchg
icebp
iret
mull
add
push
sbb
pop
jecxz
adcl
ss
cli
jg
push
fsubrs
cli
aam
sub
inc
xchg
rcrl
rclb
and
jle
inc
mov
inc
mov
dec
rcr
dec
subb
mov
sbb
cltd
xchg
mov
adc
mov
lods
movsl
jo
mov
pop
outsb
dec
ret
das
scas
mov
inc
movsb
addl
insb
ret
lods
push
adcb
pop
test
cmpsb
pushl
push
lahf
push
daa
inc
insl
rol
cmpsb
jae
sbb
push
jne
iret
shlb
aaa
mov
xlat
mov
inc
jg
push
push
and
fistps
cmp
fs
cwtl
loopne
mov
add
les
iret
mov
pushf
orb
outsb
movsb
outsb
popa
repnz
pop
xchg
fidivs
gs
in
in
test
in
imul
dec
push
punpckldq
out
adc
shl
fmull
aas
cmp
clc
add
xchg
jle
cmpsl
mov
cmp
outsl
into
jns
sub
fs
dec
ret
popa
sub
out
sbb
push
imul
dec
popa
pop
push
and
push
push
lods
push
or
repnz
test
dec
in
sub
ljmp
stos
add
and
jecxz
je
fsubl
or
fisubs
fucomp
pushf
packuswb
in
jnp
repnz
sbb
adc
inc
int3
incb
fcomps
sub
daa
xor
xchg
pop
jge
xchg
sbb
sbbb
bound
jo
popa
fmuls
sbbl
iret
cli
fs
out
icebp
jnp
pop
xchg
ret
xchg
imul
in
sub
add
icebp
in
popf
push
mov
cmp
cmp
push
jl
jle
mov
fidivrs
lea
add
insb
stos
add
test
add
pop
clc
andl
sbb
mov
add
fptan
dec
ljmp
push
test
mov
jb
movsb
cld
ret
je
popa
jg
push
adc
dec
xchg
scas
push
in
sub
jl
jb
aaa
inc
jb
ss
insl
inc
sub
push
mov
sbb
xchg
aad
mov
inc
inc
in
sub
gs
sarb
daa
mov
std
xchg
adc
inc
pop
imul
lods
mov
mov
sub
add
push
insb
xchg
cmpsb
in
push
mov
mov
push
pop
rcrl
sbb
rcll
gs
jg
loop
inc
loopne
test
popa
mov
jecxz
xor
dec
mov
adc
mov
stos
ror
cltd
dec
fucomip
add
fstl
mov
or
in
and
mov
mov
xchg
or
std
inc
scas
imul
mov
insl
mov
jns
aam
sti
mov
push
popf
add
mov
pop
mov
adc
dec
and
pop
jae
mov
std
cmpl
aad
imul
pop
nop
stos
mov
cltd
adc
leave
cld
xor
cmpl
push
imul
adc
jecxz
pop
stos
add
pop
pusha
std
dec
lcall
adc
test
lds
inc
adc
int
nop
mov
pop
aam
dec
clc
or
jne
shrb
xor
mov
mov
jmp
xor
lods
push
movsb
mov
out
andb
in
mov
lds
xor
push
sbb
pusha
push
xchg
or
jnp
push
imul
inc
out
lods
ficompl
ljmp
xorb
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
jmp
iret
dec
mov
mov
icebp
dec
fadds
rcr
mov
jle
jl
jle
loopne
jle
das
or
jp
rcrb
stos
xchg
push
sub
mov
test
inc
jg
lret
xor
xor
xchg
push
je
lods
fmuls
mov
lds
mov
dec
or
lahf
inc
and
nop
mov
cmp
clc
bound
aaa
dec
cmp
xchg
std
je
adc
jns
adc
pop
push
jno
and
xchg
dec
sbbl
jb
jae
fwait
adc
das
mov
mov
mov
adc
mov
mov
into
mov
pop
jmp
fisubrs
pop
mov
adcl
sbb
out
popa
adc
mov
cwtl
int3
fildl
mov
cwtl
adc
pop
xchg
mov
jg
fiaddl
in
inc
lret
pop
push
aaa
xchg
popl
dec
jbe
lret
dec
into
call
xchg
popf
insl
out
mov
or
xchg
int
mov
popf
sbb
mov
add
aad
dec
xor
mov
pop
adc
and
jns
adc
and
lret
push
mov
imul
in
pop
cltd
and
and
in
pushw
push
repnz
dec
push
lods
ja
cmp
idiv
adc
sub
mov
or
push
cmp
inc
or
stos
cmp
roll
mov
gs
pop
mov
dec
xchg
stos
xchg
jbe
iret
mov
mov
cli
arpl
and
sbbb
jge
mov
xor
imul
jg
xor
aas
pop
pushf
adc
cmpsb
sub
outsl
aaa
jb
mov
clc
ja
sbb
jecxz
outsb
sbb
ss
cmpsb
aas
adc
fmuls
sub
fistpll
dec
mov
roll
inc
push
cs
or
jne
stc
mov
jle
push
push
data16
aam
pop
int
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jb
movl
mov
andl
mov
add
jmp
out
xchg
aaa
jne
gs
xor
sub
jmp
mov
jle
jge
jle
push
repnz
fnstcw
pop
inc
push
sub
xorb
out
pop
cmp
xchg
mov
push
out
iret
scas
enter
push
loope
adc
mov
inc
filds
test
xlat
push
cmc
out
in
add
arpl
sub
cmp
xchg
sahf
sbb
or
lock
nop
xor
push
mov
push
hlt
sahf
mov
sub
inc
cmp
add
add
add
adc
mov
xchg
or
xchg
mov
les
jne
in
lret
dec
and
or
inc
xorb
in
loopne
push
adcl
stos
lea
ljmp
rcrb
das
xor
mov
shl
into
mov
out
fucomi
sbb
cmp
mov
lret
or
jns
sti
lea
lahf
js
push
imul
and
ficoml
xor
int
sbb
xchg
adc
inc
sbb
idivl
and
adc
mov
lods
and
test
push
xor
shll
nop
sahf
push
test
or
jle
icebp
fmulp
pop
xchg
aam
pop
mov
mov
into
test
ljmp
sbb
pop
push
inc
outsb
dec
push
and
push
icebp
mov
shlb
addr16
jmp
mov
push
push
or
pusha
adc
jle
xchg
movsl
hlt
fisubrs
or
xchg
add
iret
xchg
ret
lods
test
sub
das
inc
loop
inc
cmc
mov
cmc
or
clc
pop
sbb
inc
jle
xor
mov
jae
fiadds
test
std
xor
scas
adc
repz
xchg
stc
lds
xor
nop
sbb
cmp
mov
jbe
mov
mov
and
mov
xchg
lcall
fsubrl
mov
and
inc
sti
fildl
push
lea
clc
cmp
lret
std
mov
and
dec
inc
ljmp
push
dec
fstp
push
shrb
ds
shll
sahf
mov
imul
pop
jmp
lcall
dec
cmpsl
jb
jge
push
ficoms
dec
cmc
sub
fcmovu
fmull
int
dec
lods
movsl
test
hlt
into
mov
xlat
push
shll
shrl
test
fcomp
jg
addr16
scas
sub
cmp
sti
inc
aam
add
stos
push
pop
xchg
jecxz
sar
adc
or
add
jb
leave
pop
xchg
dec
and
inc
arpl
add
out
push
jmp
push
jp
fadd
inc
ficoms
dec
mov
ljmp
ljmp
dec
fbstp
je
out
arpl
cld
push
pop
jp
sarb
int
jge
add
cmp
movl
jmp
dec
adc
sub
imul
mov
jle
push
jge
jle
cmpxchg
in
jnp
lods
pop
pop
add
inc
arpl
movsl
cltd
xor
xor
pcmpeqw
iret
mov
adc
mov
dec
aaa
stos
fiaddl
jne
xor
mov
inc
xchg
out
jne
call
and
les
jno
jb
jge
push
xor
shll
in
shll
sbb
cs
inc
push
and
movsb
add
ljmp
mov
sub
pop
add
or
loop
fisubl
pop
push
rol
test
pop
pushf
sub
add
iret
insl
nop
stos
jae
jo
inc
mov
dec
addr16
insl
jb
push
or
repz
pop
xor
mull
subb
iret
fldl
loopne
mov
mov
lea
lret
cmp
sub
pop
fistps
mov
orl
lods
outsb
pusha
xchg
gs
mov
push
jnp
insl
fcmovb
loop
movsbl
adc
mov
aam
cmp
push
stos
inc
xor
loopne
sarb
jb
sbb
cmp
popa
subb
jns
jg
mov
and
je
sub
xchg
aam
or
dec
sbbl
dec
pop
sbb
cmp
dec
aaa
push
bound
jp
xchg
mov
mov
nop
sub
pop
out
cmpb
scas
stc
lret
fcmovnb
push
addl
inc
push
loope
push
notl
je
dec
ss
mov
and
push
mov
adc
ret
sahf
cli
int
or
test
stos
aas
push
xchg
push
leave
ret
mov
lods
shrl
push
jp
mov
bound
addr16
lds
andl
inc
fwait
out
cmp
lahf
ds
xchg
mov
lods
enter
mov
test
in
mov
jg
adc
adc
sbb
push
cmc
roll
and
loopne
sub
pop
add
sub
hlt
or
jl
sbb
gs
ds
orb
xor
xchg
in
jp
xor
gs
fwait
stos
out
add
adc
std
mov
jg
dec
shlb
ja
sbb
cmp
mov
or
cmp
je
push
mov
ja
lea
pusha
xor
xchg
jl
or
movsb
xchg
in
sbb
inc
stc
cmp
push
mov
hlt
sbb
ss
sarb
jae
test
cmpl
fnsave
adc
sub
mov
push
jl
and
push
sbb
insb
shll
mov
or
pop
jno
inc
add
out
pop
fidivrl
xchg
aaa
mov
sti
jne
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
jmp
fsqrt
std
imul
mov
jo
and
mov
jle
mov
add
mov
add
dec
sbb
inc
xchg
imul
movsl
outsl
cmp
repz
and
jns
rorl
push
xor
mov
imul
sbb
ds
pushf
pusha
pop
pop
jo
adc
xor
cmp
call
popf
out
scas
dec
subl
lods
xchg
sbb
jnp
loope
push
sub
cmp
sbb
xchg
push
sbb
sti
cld
add
mov
cmp
test
push
dec
imul
lea
mov
inc
sub
mov
imulb
push
pop
mov
lret
push
cmc
fiadds
sti
xor
das
js
fildl
lea
add
push
sbb
out
loopne
dec
pop
scas
or
repnz
stos
adc
pop
jmp
push
adc
push
jno
jge
or
jns
push
cmp
loop
fidivs
addb
int3
lds
ficompl
xor
int
sub
divb
push
cmp
xlat
icebp
out
and
insl
jb
int
mov
or
test
inc
push
push
push
jmp
jle
pushf
movsb
pop
sbb
pop
lret
pushf
sahf
test
and
adc
push
data16
bound
dec
jge
sub
mov
inc
test
xor
les
and
xchg
stos
push
fwait
sbb
rcr
inc
inc
cmc
dec
xchg
fldt
jle
pop
sub
or
pop
js
gs
cltd
das
and
fstpt
sub
lahf
inc
add
popf
pushf
or
add
push
mov
pop
mov
pop
shll
push
test
sub
movsb
mov
mov
inc
lcall
xchg
and
ds
std
jg
push
mov
push
mulb
mov
cmc
or
aam
loope
xor
mov
shrb
iret
into
xor
xlat
jmp
dec
jb
cli
adc
cltd
int
test
fwait
push
jae
call
cwtl
rcll
inc
xchg
sahf
outsl
sbb
loope
lea
push
hlt
jne
pop
lods
nop
sbb
ja
fisttps
scas
ljmp
push
xor
dec
sbb
push
mov
mov
arpl
mov
jp
dec
test
mov
pop
mov
xchg
jecxz
lcall
adc
gs
popf
jae
lahf
jo
inc
loope
jg
mov
scas
rcll
mov
mov
xchg
stos
mov
repz
gs
ret
sbb
mov
cwtl
ds
out
popa
xchg
lcall
mov
xchg
inc
cmp
jl
mov
movsb
adc
adc
dec
shl
xchg
xor
pop
repz
sbb
add
jmp
repnz
rep
cmpsl
xchg
or
pop
fists
push
jge
jle
jp
lods
rorl
test
outsl
pop
ss
imul
in
test
pop
fucomip
rcr
stos
shlb
mov
repnz
dec
in
loope
out
jns
adc
test
lods
jp
addr16
imul
push
cltd
jge
push
test
push
mov
xor
hlt
fldt
mov
sbb
xorl
cmpl
flds
insb
out
cmc
addr16
std
mov
in
mov
subl
mov
xlat
outsl
pop
enter
in
jno
sbb
ljmp
mov
lret
imul
cli
sarb
aaa
addb
mov
sar
push
xchg
rorb
sbb
imul
ds
pop
dec
movsb
xchg
jl
mov
scas
inc
sbb
mov
cmpsl
jecxz
fwait
xor
out
fisubs
or
pop
mov
fistpll
pop
adc
dec
pop
mov
jl
inc
sarl
addr16
lea
add
xchg
adc
add
aas
mov
xlat
cmp
jg
mov
outsb
inc
cmp
fsubrl
push
push
gs
add
les
add
xchg
jno
clc
and
mov
outsl
sub
xorl
jl
and
xchg
sub
or
test
in
sbb
mov
pop
or
lret
aas
jge
jns
ja
adc
inc
jp
dec
pop
pop
mov
loope
adc
dec
loope
dec
es
enter
pop
mov
addr16
movsl
pop
pop
xor
jo
and
decl
adc
jle
inc
jnp
mov
push
seta
lret
ljmp
or
sbb
xchg
mov
cmpsb
cmp
pop
mov
addr16
pop
jno
pop
in
nop
fidivrl
popf
cmp
pusha
jno
jmp
popf
lret
xchg
cmovge
xchg
pop
in
subb
or
push
xchg
ds
xlat
add
das
mov
pushf
xor
insb
fisubs
enter
mov
movsb
and
outsl
push
cwtl
lret
cmpsl
push
in
xchg
hlt
sbb
cmp
cmp
mov
movsl
pop
mov
data16
mov
jecxz
lock
lods
mov
jae
pushf
nop
lcall
ja
inc
outsl
insl
mov
adc
pop
or
add
mov
mov
pop
jae
stos
xchg
jg
cmpl
pushf
push
push
mov
sahf
dec
sub
jb
js
mov
sbb
sahf
mov
cmp
aad
jl
cwtl
into
stos
das
jge
cmp
pop
mov
mov
mov
pop
inc
or
sbb
jle
aam
mov
pop
imull
in
add
je
das
mov
pop
mov
mov
xor
push
mov
mov
add
cmp
pop
jmp
int
mov
jno
imul
mov
push
push
inc
jle
push
jge
jle
test
arpl
cmpsb
fwait
cmp
dec
push
dec
lcall
adc
icebp
sbb
xchg
pop
push
jmp
cwtl
in
outsb
hlt
push
loope
in
lcall
call
lret
adc
sbb
push
jae
mov
xchg
dec
in
sub
out
xchg
add
adc
fnsave
push
mov
push
and
inc
dec
dec
push
mov
shrl
add
sbb
aad
xchg
fucomi
inc
cld
sub
xor
push
dec
pushf
test
push
pop
into
mov
test
pop
daa
cmp
cmpsl
fldt
xorb
jae
aas
addr16
mov
sub
push
sbb
aad
push
int3
xchg
stc
pusha
xchg
xor
rcl
push
push
jmp
in
add
jno
dec
inc
cmpsl
sub
in
pop
add
stc
sub
jp
cs
push
inc
inc
adc
add
pop
decb
inc
add
imull
test
dec
aas
lahf
push
inc
test
jne
shll
cmpsl
addr16
sbb
lret
call
clc
inc
mov
int
xor
add
lods
rep
mov
ja
mov
adc
loop
cmp
dec
ljmp
sub
mov
mov
inc
cmp
jb
mov
sub
sbb
ds
inc
adc
std
les
dec
movsl
push
push
inc
popf
in
leave
data16
xchg
lds
xor
cmp
xchg
outsb
inc
inc
notb
fdiv
dec
mul
push
insb
xor
mov
cs
mov
mov
xor
in
dec
lret
ss
sti
xor
push
negl
mov
xchg
fiaddl
inc
fwait
mov
in
and
inc
insb
mov
cmpsl
ljmp
movsb
mov
lea
jo
inc
pop
cmp
rolb
into
cmp
adc
cmpsl
cli
pushf
mov
or
dec
or
in
inc
xor
mov
popf
jno
jb
imul
int
into
loope
les
xor
inc
push
and
mov
cmp
movsb
lods
lods
insl
add
push
adc
ficoml
jne
bound
fwait
cmp
cmp
fists
sbb
and
dec
xor
out
or
fwait
push
aad
cli
andb
push
nop
ror
ljmp
adc
dec
inc
jnp
stos
ficomps
mov
xor
popa
pop
cwtl
inc
mov
clc
push
pop
loope
pop
push
sub
pop
adc
int3
ret
push
jns
icebp
sbb
pop
pop
ror
mov
test
fstps
movsl
iret
adc
sbb
pop
pop
stos
add
cwtl
add
dec
jge
dec
adc
mov
jp
push
xor
and
ret
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
mov
xor
xor
mov
sub
add
mov
orl
jmp
iret
ret
rcll
push
popa
mov
stc
jb
je
jle
or
jle
adc
add
dec
mov
mov
xor
incl
mov
js
testb
inc
xchg
popa
jo
xor
dec
mov
pop
cmpsl
sbb
popf
pop
sti
mov
les
mov
stos
adc
int3
pop
fs
dec
decl
add
jp
adc
sbb
aaa
inc
lods
mull
pop
enter
aas
push
mov
lea
xor
addr16
pop
pusha
xor
mov
xor
and
scas
arpl
push
add
roll
mov
xor
and
sub
mov
jl
cld
fists
mov
push
mov
mov
andl
push
ficoms
xchg
xchg
jmp
faddl
inc
inc
iret
add
popf
jns
xchg
push
mov
xchg
pop
mov
lock
mov
sub
inc
les
popf
sahf
into
in
or
es
pop
mov
ret
pop
push
inc
add
add
mov
movl
push
jmp
rolb
out
fs
test
mov
jle
jg
jle
dec
cli
jmp
out
add
cmp
ja
fldlg2
dec
sahf
pop
mov
imul
scas
push
arpl
fsubl
jno
testb
mov
inc
je
and
and
push
mov
adc
jle
add
pop
iret
cmp
movsl
fwait
js
push
xchg
mov
cmp
test
adc
insb
rcrb
add
sub
out
mov
or
mov
inc
sub
neg
sbb
pop
mov
sti
dec
sbb
add
bound
adc
test
cmp
push
movsb
cs
push
stos
test
cmp
xor
stc
adc
xchg
in
addr16
lds
sti
mov
daa
test
pop
dec
sbb
addl
sub
sub
shrl
jnp
sbb
mov
movsb
mov
sbbl
xor
movl
jmp
mov
push
mov
sub
xchg
and
or
jle
je
mov
mov
and
lcall
dec
ret
fdiv
jge
in
pusha
mov
js
sbbb
ljmp
aaa
into
and
repnz
rorb
xchg
inc
int
int
cli
push
mov
mov
fcom
push
lock
or
sti
pop
mov
aas
out
fidivrs
ja
stos
push
inc
dec
push
dec
jg
lcall
ja
xchg
repz
js
xchg
loopne
out
ror
mov
or
minps
sahf
pusha
push
and
and
cwtl
fsubp
mov
pop
push
test
xor
mov
into
loopne
pop
mov
les
xor
nop
cmpsl
cltd
cli
push
adc
stos
hlt
cmpsl
or
int
shld
lods
sbb
adc
xchg
adc
pop
mov
enter
addr16
int3
je
sub
fdivrl
inc
lods
leave
inc
pop
inc
push
call
mov
enter
jne
loopne
sahf
jmp
cmp
je
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jb
movzbl
add
mov
andl
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
jmp
ficoml
addr16
loop
inc
push
insl
mov
cs
jle
or
jle
js
jno
scas
testl
out
xor
adc
and
nop
enter
ljmp
inc
adc
arpl
or
outsl
daa
ds
and
or
imul
aad
sub
cli
add
rolb
fwait
stos
in
dec
in
add
xchg
pop
sub
sahf
dec
call
out
pop
in
mov
loopne
sub
loopne
cmp
sbb
movsl
sub
pop
fmuls
outsb
xlat
xor
mull
je
jo
push
aaa
adc
data16
hlt
pop
in
stc
aad
mov
in
inc
cmp
mov
pop
add
push
scas
xchg
jecxz
hlt
add
sbb
fidivrl
or
sub
and
aas
ja
repz
pop
jmp
insb
xchg
sub
in
lods
add
repz
sar
lods
ss
pop
adc
jns
out
mov
int
inc
nop
mov
subb
stos
and
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
movl
movl
and
mov
push
mov
add
xor
movl
mov
add
mov
mov
jmp
xchg
push
lret
adc
push
xchg
stos
dec
xlat
pushw
sub
jle
xchg
jg
jle
out
mov
loope
mov
jno
pop
cmpsl
outsb
subb
dec
cmpsb
xor
lods
cmp
ljmp
adc
ss
outsl
imul
lock
push
arpl
rorl
shll
add
dec
push
mov
pop
stc
cmpsb
lcall
les
fldenv
or
lods
xlat
popf
scas
scas
pop
jge
cld
mov
push
out
jns
pop
adc
ret
push
test
add
in
pop
loop
jne
adcb
mov
inc
inc
jno
cmp
jnp
shlb
xor
imul
js
sbb
add
adc
repnz
push
inc
out
dec
jmp
adc
sahf
jecxz
cmp
pushf
and
mov
iret
bound
push
dec
test
inc
jle
sub
lahf
test
xchg
std
pop
jmp
pop
nop
cs
mov
sbb
pop
xor
lods
sbb
fwait
xor
and
notb
pop
push
in
push
inc
shll
mov
jecxz
mov
divb
out
testb
xchg
cli
in
andl
lret
sub
xchg
pop
clc
push
add
adc
jb
mov
xor
mov
pushf
sar
ss
mov
mov
push
sahf
mov
sbb
out
lods
mov
adc
dec
es
sbb
fmuls
pushf
dec
adc
xor
movsb
push
fsubrl
sbb
lods
and
cmp
push
cmp
add
push
inc
add
add
add
test
add
add
add
cmp
mov
mov
mov
adc
jmp
xchg
roll
icebp
mov
test
and
jle
jg
jle
xchg
push
xor
mov
push
jbe
push
dec
aam
int
in
mov
and
clc
cltd
jge
lock
mov
jecxz
scas
sbb
fdivrl
pop
pop
int3
push
mov
add
jle
pop
aad
and
add
leave
push
adc
mov
add
scas
push
cmp
xchg
out
jno
pop
js
xor
or
or
push
mov
call
lret
jge
xlat
sbb
pop
xbegin
ljmp
dec
data16
adc
jmp
sub
lret
rcrl
sub
jns
cmp
jno
jl
adc
imul
jmp
pusha
pop
xchg
jp
adc
jmp
sahf
xchg
popf
inc
mov
es
sub
outsb
dec
popa
pushf
ficompl
add
iret
add
xor
out
push
js
xchg
fldt
mov
fbld
push
ficomps
jo
mov
pop
mov
loope
dec
scas
inc
mov
dec
sbb
mov
cmp
adc
mov
dec
ds
adc
divw
cmp
sub
push
add
mov
aad
test
cmp
arpl
rorb
std
mov
out
xchg
dec
mov
rcrl
fld
cmp
mov
xor
rcr
inc
mov
punpcklbw
in
sbb
imul
mov
and
add
sbb
mov
addl
mov
xchg
sbb
jmp
pop
lods
es
repz
pop
mov
mov
cmp
add
jle
jg
jle
push
ljmp
xchg
test
test
mov
pusha
inc
leave
mov
in
jl
inc
sbb
lods
push
add
pop
and
cmp
xor
cmpsl
dec
aad
pusha
cmp
inc
mov
inc
cmpb
push
xor
fisubrs
loopne
aas
arpl
mov
pusha
jno
ret
inc
jecxz
orl
imul
je
mov
fsubrs
and
lret
lcall
js
cmp
pop
and
cmp
outsl
test
fisubrl
jg
fs
mov
inc
rolb
js
lock
sub
imul
xchg
out
mov
xchg
stc
les
fstpl
xor
cwtl
data16
xlat
andl
int
and
imul
test
repz
arpl
lret
pop
mul
shll
rcrl
add
jge
xchg
push
mov
xor
cmp
dec
sub
mov
xor
jp
mov
add
lods
xchg
cmc
aaa
xor
pop
stos
push
pop
cmp
mov
inc
sbb
jmp
loop
lcallw
sub
sti
jmp
mov
mov
sbb
xor
push
roll
scas
cmp
insb
lahf
or
add
pop
jecxz
push
jne
leave
jnp
neg
push
sbbl
jo
sbb
push
iret
out
outsb
in
and
sbb
jmp
ja
and
dec
pop
hlt
pusha
icebp
cmp
mov
jle
jg
jle
mov
pop
push
xor
cmp
dec
into
sub
jae
les
jmp
lea
mov
lods
cmpsl
incb
dec
mov
out
iret
ret
in
push
pusha
fcomi
xlat
movsb
lea
or
cld
dec
lret
xor
pop
aam
lahf
pop
adc
inc
sub
pop
or
stos
mov
dec
lds
into
push
lahf
in
jnp
adc
clc
aaa
jae
sbb
mov
movsl
adc
les
es
push
xchg
and
add
lods
sub
xchg
out
jbe
inc
call
data16
or
cmpb
andl
sbb
out
mov
mov
test
xchg
push
mov
sahf
sbb
orb
mov
xchg
cmp
mov
jg
outsb
dec
das
loopne
pop
pop
pusha
bound
or
push
inc
outsb
cmpsb
popf
dec
addr16
pop
movsl
push
push
call
jns
dec
jmp
aaa
mov
sbb
rcrl
dec
cld
lds
lea
orl
aas
cmpsl
repz
adc
fldcw
pop
xlat
xchg
pop
cli
dec
test
xor
jo
jo
cmp
add
mov
pop
std
adc
inc
cli
push
arpl
out
insl
mov
jbe
repz
into
outsb
mov
lds
bound
lret
repz
cmpsl
add
cmpl
xor
andl
pop
mov
scas
sub
lret
xchg
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
push
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
movzwl
or
mov
mov
mov
and
mov
mov
andl
xor
sub
xor
add
mov
mov
movl
je
mov
xor
xorl
add
movl
cmp
movl
jne
pushl
call
mov
xor
mov
xor
mov
mov
subl
xor
andl
add
movl
cmp
je
pushl
xorl
pushl
call
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
mov
mov
adc
mov
subl
xor
addl
add
movl
cmp
je
xor
jmp
xchg
imul
dec
jle
xchg
jg
jle
shrl
cmpsb
loopne
ja
sbb
sub
xlat
int3
cmc
insb
inc
dec
cmp
adc
adc
insb
and
cli
les
fstpt
repnz
xor
je
xchg
stos
icebp
sub
push
sbb
mov
jns
xchg
pop
iret
jne
mov
outsl
leave
rclb
repz
xchg
mov
sub
dec
xor
mov
pusha
push
sbb
inc
lret
stc
pop
adc
jae
lahf
icebp
int3
add
shll
in
cmpsl
adc
popa
mov
pushf
cltd
das
out
jmp
mov
stc
pushf
sub
test
xchg
std
loop
or
mov
fildll
cltd
jmp
lds
jecxz
rclb
popa
or
gs
leave
cmp
pushf
cli
arpl
inc
movsl
ds
insl
push
mov
or
add
add
xor
cld
jb
jge
bound
pusha
dec
xor
cmp
mov
pop
les
jns
ficomps
add
push
cmpsl
in
push
push
sbb
pop
sarl
pop
cli
outsl
je
jo
rcr
dec
mov
adc
shl
scas
xchg
add
pop
push
aaa
sbb
push
inc
sbb
push
stos
mov
lcall
adc
test
cmp
cmp
loop
push
in
xchg
rcrb
mov
lock
adcb
adc
and
rolb
inc
or
mov
jle
and
loopne
sbb
dec
fisubrl
call
xor
mov
negl
mov
and
mov
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
sub
mov
adcl
add
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
mov
xorl
add
jmp
addr16
mov
ja
adc
mulb
xor
jle
xchg
jg
jle
jns
pop
and
fadd
xor
inc
jno
movsb
adcb
sub
mov
ja
dec
mov
dec
push
xchg
lods
aad
dec
sub
into
pop
mov
shlb
pop
sbb
jle
jno
pop
and
int3
loop
adc
in
sbb
aaa
jmp
mul
xchg
cmpsb
movsl
stos
pop
das
pop
mov
addr16
decb
xor
mov
xchg
sbb
sub
out
rcll
and
in
cmp
cmp
jo
xor
repz
sub
fisubrl
shrl
pop
mov
sub
lods
cmp
arpl
mov
out
jl
pop
lea
outsb
add
cmp
adc
xchg
enter
jo
adc
jecxz
and
cmp
add
push
insb
movsl
cmpsl
sub
test
and
jecxz
cmp
test
push
jbe
lods
inc
inc
call
inc
rcll
xchg
sbb
insb
cwtl
push
lret
xchg
nop
inc
or
mov
cmp
inc
lock
sbb
sbb
inc
jmp
ficoms
sahf
fldenv
add
mov
sub
lock
jno
mov
jo
jmp
cmpl
fadds
aam
jp
lret
jb
push
cmp
xchg
jnp
or
gs
cld
jo
stos
sbb
mov
pop
or
pop
insb
out
mov
and
shll
and
add
add
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
mov
jmp
mov
iret
mov
test
fstp
xchg
inc
mov
jle
jg
jle
daa
imul
or
push
jl
test
sahf
or
sub
ljmp
xchg
xlat
ds
add
pop
cmp
xchg
push
lock
sbb
js
mov
jp
cmc
xor
sti
xchg
mov
nop
push
movsl
daa
ss
ret
outsl
mov
scas
push
repz
je
and
enter
dec
fwait
push
xor
gs
call
or
rcll
test
repz
sarb
mov
insb
jno
jecxz
push
aas
test
push
pop
jecxz
push
out
mov
test
or
scas
xor
sub
sbb
outsl
out
repz
mov
dec
mov
mov
in
js
xor
mov
jecxz
mov
sbb
xor
mov
cwtl
mov
call
scas
loope
pusha
mov
gs
xchg
jb
push
out
hlt
jnp
fstpt
cld
ret
cmp
arpl
and
cmp
ficoml
mov
lret
jb
je
sub
aas
loop
btc
inc
and
mov
in
fs
push
push
xchg
add
or
stos
ficompl
push
dec
fstl
mov
pushf
pusha
test
jno
das
orb
mov
pop
je
mov
push
sub
sub
data16
push
ret
mov
jae
xchg
jbe
or
or
jnp
xchg
xchg
jbe
push
add
xor
mov
mov
jmp
xlat
frstor
jg
cld
rcrb
jle
xchg
jg
jle
mov
movsb
outsl
aaa
ret
sbb
popf
pushf
enter
cmp
test
fld
sbb
mov
out
xchg
mov
lock
cmc
xchg
push
mov
aas
pop
pop
mov
mov
and
mov
out
jg
mov
xor
sub
imul
push
cmp
mov
dec
scas
insb
sub
mov
adc
cmp
cmp
xorl
mov
incl
fisttpl
lods
xor
and
pop
jb
out
aas
lock
mov
jp
std
xor
inc
cmp
mov
idivl
mov
push
add
data16
jecxz
add
push
add
out
push
in
mov
sub
lods
sub
mulb
mov
sbbl
dec
dec
lds
dec
aaa
xor
pop
addr16
mov
or
xor
lret
je
mov
clc
test
sbb
and
insl
push
sub
push
shll
jo
cmp
lock
and
adc
sahf
inc
cli
mov
xchg
rcrb
shr
jmp
testl
add
xchg
outsl
dec
xor
ljmp
rclb
decb
fmull
inc
push
xchg
mov
lock
or
test
xchg
ljmp
mov
add
and
cwtl
mov
jmp
sbb
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
jmp
bound
movsl
es
popa
push
call
roll
jl
jle
xchg
jg
jle
xor
mov
inc
in
push
or
gs
jecxz
cmc
xorl
inc
movsl
mov
ret
lahf
imul
mov
out
sub
std
stos
dec
movsl
imul
sahf
mov
xchg
jle
popa
pusha
mov
sub
std
xchg
xor
aaa
int3
mov
pop
dec
push
test
xor
sarl
push
mov
inc
push
fidivl
sub
or
jecxz
icebp
xchg
stc
lea
and
adc
mov
mov
sbb
inc
lea
mov
out
push
mov
in
dec
and
add
cmp
in
mov
adc
jecxz
or
ljmp
mov
xor
inc
in
out
adc
int
dec
adc
enter
sahf
sub
inc
xchg
and
xchg
sbb
mov
mov
pop
gs
scas
push
not
add
fwait
and
dec
ret
adc
movsb
pop
mov
repnz
xchg
xor
dec
shl
adc
cmpsb
shrb
rcrb
jno
pop
sub
outsb
lret
adcl
in
repz
pop
cmp
fsts
add
nop
mov
xchg
and
pusha
int3
adc
frstor
js
mov
bound
mov
stos
inc
shll
mov
nop
je
aas
call
xchg
pop
fsubrp
and
jbe
pop
repz
fistpl
stos
jp
sbb
cmp
xchg
dec
mov
mov
xor
pop
add
cmp
jne
mov
inc
cmp
jb
jmp
jmp
ret
ficomps
popa
cltd
ret
fs
outsb
push
pop
xchg
jecxz
xchg
push
jle
xchg
jg
jle
stos
mov
imul
scas
jl
jno
std
inc
test
les
or
pop
mov
xchg
mov
mov
divl
dec
andb
add
inc
mov
cli
cs
inc
xchg
hlt
sahf
and
icebp
xchg
insb
shlb
cmpsl
scas
cmp
pop
mov
outsl
lcall
loop
xchg
mov
pop
je
insb
insb
pop
aam
cs
xor
loope
sub
push
jo
in
cltd
cltd
sbb
js
xchg
mov
cmp
xchg
testb
adc
xchg
je
pop
imull
jp
jns
adc
cmp
pop
daa
or
sub
dec
or
mov
mov
mov
fs
sub
lret
pop
mul
and
xchg
icebp
push
loope
notl
mov
mov
imul
int
repz
fsubl
xchg
popa
stos
and
rcrb
mov
dec
cs
fcompl
and
les
fcoms
sub
stos
sbbb
iret
shll
inc
cmc
dec
pop
shlb
pop
out
mov
xor
orb
cltd
cmpsl
mov
jb
arpl
shrl
pause
ret
cmpsb
outsb
pop
popa
mov
insl
testl
xchg
push
sub
jmp
pushf
sarl
jbe
sub
sub
filds
jne
int
xor
negb
jl
dec
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
jmp
out
or
xor
in
rcrb
mov
sbb
jle
xchg
jg
jle
insl
sbb
in
xchg
sbbb
cld
or
cmp
cmp
xor
arpl
lods
and
xor
lret
popa
or
in
and
mov
hlt
sbb
out
cmpl
jp
loope
inc
sub
loop
mov
xor
dec
int
xchg
leave
mov
cmc
and
add
mov
mov
cmp
stos
dec
cltd
jns
xchg
dec
loopne
scas
dec
mov
adc
sbb
test
sbb
inc
mov
les
mov
jo
xchg
inc
cmpb
xor
push
jge
and
out
insb
loop
leave
mov
sti
jne
add
gs
movsb
repz
jg
adc
test
mov
pop
cwtl
dec
sub
pop
gs
adc
inc
xchg
xor
arpl
xor
data16
sub
mov
push
aaa
sbb
or
lock
aad
mov
xchg
fdivl
adc
pop
xlat
sbb
sbb
ds
inc
fsub
fcmovbe
mov
mov
mov
cmpsb
mov
dec
dec
push
into
inc
pop
ljmp
or
repnz
idivb
adc
dec
popl
and
mov
xchg
cli
xlat
repnz
cwtl
js
cmc
and
cmp
add
lret
and
rcl
and
daa
and
test
pop
jmp
mov
add
mov
jmp
inc
jae
pop
sub
jae
repz
test
jle
jg
jle
fists
clc
xor
aaa
lret
sbb
fnsave
clc
sbb
lock
jmp
mov
insb
outsb
dec
iret
fnsave
adc
jae
cmc
xchg
fs
imul
call
inc
fwait
jg
add
xchg
jae
into
sub
orl
push
hlt
insw
push
pop
test
aas
out
clc
push
into
les
popf
push
mov
les
adc
cmp
inc
lods
sbb
jne
lds
cmp
adc
inc
ds
mov
dec
and
mov
out
das
jb
add
jnp
sbb
or
insl
int3
push
mov
jb
cmp
lret
jno
add
sub
and
aas
push
sbb
push
aas
xchg
lcall
orb
addr16
pop
outsl
dec
mov
mov
and
je
xchg
popa
pop
call
and
lds
mov
xor
mov
sub
jns
cmc
and
inc
test
shrl
ds
jp
out
stc
hlt
shrb
xchg
idivl
pusha
popf
push
ficompl
mov
dec
and
hlt
in
aam
lret
sbb
jno
sbb
dec
in
dec
add
mov
loope
xchg
js
fwait
cmp
xchg
sub
insb
adc
adc
mov
mov
fadds
into
sub
pop
dec
rolb
pushw
in
repnz
inc
sbb
int
jmp
pop
leave
inc
fwait
shr
inc
add
inc
in
rorb
push
or
add
mov
add
sbb
mov
xlat
fsubrl
cmc
pop
shrl
jg
jle
lods
xlat
xchg
adc
or
enter
push
cmp
iret
push
lcall
mull
cmp
mov
sbb
add
in
sub
addl
stc
popf
data16
or
push
jmp
and
popw
insl
xchg
pop
and
mov
jg
sub
jl
sub
sbb
pop
daa
insl
xchg
aad
pop
and
or
mov
jnp
and
and
sahf
fcoml
scas
test
popf
push
data16
jb
adc
stos
imul
mov
ss
enter
adc
bound
in
adc
sar
fisttpll
mov
jecxz
cmpsb
rcrl
adc
in
fidivl
insl
xchg
or
rclb
out
fsub
pop
aam
pop
inc
or
movsl
aam
dec
inc
push
xchg
lahf
push
iret
pushf
dec
je
inc
xor
hlt
pop
mov
imul
dec
cmpsb
or
pop
lds
daa
repnz
adc
cmp
dec
int3
test
adc
xchg
push
mov
test
cltd
cmp
jno
stc
push
int
jge
jo
stos
mov
mov
stc
cmc
imul
lea
mov
cwtl
mov
jno
pop
loope
cs
ss
cmp
mov
mov
ljmp
or
dec
push
ret
dec
std
jae
jle
cmp
fsubrl
pop
push
dec
pop
xchg
sub
xchg
dec
jmp
cmp
pop
ret
cmp
sub
iret
push
pushf
pop
cmp
pop
jle
xchg
jg
jle
shl
adc
sbb
mov
pop
push
inc
je
mov
loopne
stos
outsl
jecxz
lret
ljmp
mov
scas
aaa
inc
imul
mov
ret
xor
out
push
stc
lret
in
push
pop
mov
cld
jl
ljmp
stos
mov
cmpsb
jnp
and
fdivp
dec
mov
pop
push
or
sarb
adc
icebp
mov
lcall
loope
popf
divb
mov
adcb
push
or
leave
pop
les
repz
sbb
nop
mov
mov
movsb
fiadds
xchg
jl
cmp
dec
pop
rol
xchg
pop
jb
adc
popa
not
jb
sub
sbb
cmc
jnp
adc
or
mov
pop
jmp
xchg
int3
xor
mov
popf
mov
jg
mov
sbb
sti
dec
loopne
out
rorb
and
loopne
pop
ljmp
jno
push
xchg
out
adc
xor
or
arpl
shrb
sbb
loope
test
cmp
cmp
clc
loopne
jp
movsl
das
mov
sar
fsub
sub
jg
or
testb
aaa
xor
jg
push
lods
dec
pusha
mov
loop
fidivl
test
cmpsb
nop
adc
inc
in
mov
jmp
jae
push
sbb
mov
cmc
pop
push
lea
sub
adc
push
lcall
aas
xor
adc
push
ds
add
jns
inc
in
scas
shrl
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
jmp
xlat
cs
jae
push
aaa
adc
inc
imull
inc
mov
jle
jg
jle
es
arpl
pop
data16
in
gs
push
imul
push
inc
fisubrl
shrl
divl
aam
mov
pop
movsb
mov
das
ds
fucomp
mov
pop
icebp
and
das
dec
cmp
sbb
cli
aaa
scas
flds
cmp
jmp
sarl
jb
inc
imulb
outsl
insb
insl
mov
or
mov
aad
cmp
repnz
mov
orps
jle
xchg
lret
jle
cmpsl
mov
roll
mov
xchg
pop
mov
stos
xor
and
jge
fdivl
sub
mov
hlt
mov
mov
cmp
sub
push
fnstsw
out
fsubrl
fsubrl
fwait
addr16
pop
push
dec
and
sbb
dec
imul
adc
popa
cmp
lea
mov
dec
stos
mov
nop
push
cmp
shlb
add
idiv
clc
and
xchg
or
mov
jl
jmp
jns
sub
mov
int3
sub
call
pushf
mov
cmpsb
mov
adc
dec
addr16
lods
cld
sbbl
shll
mov
push
outsb
pop
dec
leave
sti
adc
in
pop
aas
addr16
add
sarb
out
mov
adc
xchg
adcl
scas
cmpsb
aaa
outsl
pop
jae
mov
inc
mov
les
mov
mov
mov
xor
xor
mov
add
div
jmp
pushf
das
or
mov
mov
push
xchg
loopne
and
jle
xchg
jg
jle
dec
xor
adc
mov
iret
cwtl
mov
or
cmp
dec
addl
sbb
ljmp
in
or
xor
add
les
jecxz
cmp
and
ficomps
shr
mov
pop
shll
add
insl
in
int3
push
add
mov
xchg
cmp
or
movsl
xor
into
notl
jle
test
cwtl
mov
cmp
mov
pop
and
push
sbb
aam
scas
insb
lahf
mov
mov
mov
frstor
adc
xchg
jg
daa
mov
testb
inc
push
dec
sub
mov
push
imul
lods
addr16
subl
sub
fidivrs
lock
sub
fbstp
adc
push
push
popf
aaa
jbe
mov
sub
fwait
iret
xchg
in
inc
mov
stos
cltd
and
cmpsl
jg
pop
flds
and
and
pop
stos
xor
nop
inc
pop
sbb
mov
jbe
mov
lds
jle
arpl
daa
add
adc
cwtl
in
add
ss
or
int
sub
push
scas
icebp
stc
adc
xchg
fcomip
pop
push
dec
push
adc
incb
add
stos
inc
ss
inc
movsb
mov
shl
xchg
scas
and
sub
or
mov
ljmp
push
cld
xor
lea
jmp
in
outsl
pop
outsl
jne
fs
sbb
jle
popf
xchg
gs
jge
fnstsw
add
sahf
push
pop
ret
repnz
std
hlt
in
loope
jo
js
mov
push
test
jecxz
dec
sbb
mov
xchg
ret
iret
add
sub
dec
push
ds
mov
cmp
mov
scas
dec
cld
push
push
sbbb
gs
in
ss
mov
fldcw
loope
sti
or
xor
mov
mov
ficompl
test
mov
cwtl
xor
loope
stos
psraw
data16
call
icebp
pop
sub
mov
push
insl
push
inc
push
aad
mov
cmp
sub
data16
jmp
sbb
xchg
popw
stos
xlat
subb
insl
inc
mov
and
xchg
pop
pop
xchg
clc
test
fcoms
fidivl
and
pop
cmp
lret
xor
cmpsl
mov
scas
cli
and
in
popf
int3
loopne
cmp
out
fbld
mov
outsb
mov
pop
icebp
gs
data16
push
xchg
add
mov
addb
jno
jb
filds
and
fwait
jmp
inc
pop
scas
push
or
ret
iret
mov
xor
xchg
mov
das
ss
cmp
aas
dec
xor
mov
dec
leave
dec
insl
stos
push
cmp
das
icebp
pop
std
arpl
push
xchg
mov
dec
add
test
fdiv
mov
fsubrp
ret
daa
cmp
sbb
inc
and
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
jmp
ja
mov
mov
scas
xchg
jle
jg
jle
sub
scas
mov
arpl
pusha
jmp
shll
sub
push
dec
mov
repnz
ret
mov
cmp
lea
fiadds
sbb
pop
hlt
movsl
bound
ja
add
pop
cmpsl
mov
insb
mov
xor
iret
xor
or
mov
dec
inc
arpl
mov
mov
inc
inc
decb
pushf
shrl
mov
mov
adc
inc
jno
mov
dec
sub
cmc
xchg
stc
xchg
rcl
sub
cli
and
lcall
cmp
add
in
int
fdivs
jnp
ja
faddl
out
std
xor
test
in
stos
mov
inc
lea
das
mull
fadds
imul
sti
mov
pushf
push
add
xor
inc
or
jp
sbb
clc
inc
add
and
push
jns
sbb
lds
insl
fbstp
add
loopne
ja
xchg
iret
cmp
lret
jle
inc
aas
lret
xchg
ffreep
push
jae
leave
rcrb
pop
adc
push
insl
adc
mov
out
mov
sbb
fscale
fldcw
aam
ret
sub
push
sub
cltd
mov
push
cmpsb
cld
repz
xlat
dec
in
inc
xchg
imul
nop
stc
jo
or
imul
add
inc
clc
fisttpl
call
shlb
jle
jg
jle
and
sbb
and
loop
sub
shr
into
pop
pop
jno
cmp
lahf
push
or
xchg
xor
jmp
xor
pop
je
lods
sbb
popf
jmp
jo
into
xor
lahf
aad
sbb
cwtl
dec
cmpsb
inc
jle
mov
push
sbb
sbb
dec
enter
cmp
std
add
lods
popa
push
push
iret
insb
push
repz
pop
xor
cmp
sbb
dec
pop
cwtl
sub
add
shrb
and
xor
jnp
movsl
dec
daa
ja
xor
fdivs
movsb
push
cmp
add
shl
mov
fcoml
mov
into
lea
sahf
std
add
in
push
imul
test
cltd
push
jg
call
icebp
push
push
enter
lock
xchg
fimull
ret
sbb
iret
test
jmp
sbbb
insb
out
mov
sbb
lret
out
test
stos
lret
cs
mulb
movsb
inc
sub
push
scas
xchg
ret
mov
jmp
mov
test
stos
mov
enter
sbb
mov
fnstcw
sti
cli
add
movsb
dec
push
dec
ret
rcrb
in
lods
aas
xchg
xor
dec
jle
jae
shll
mov
loope
jnp
test
js
stos
pop
std
icebp
mov
fsubl
jmp
pop
ljmp
pop
jnp
sub
xchg
clc
loopne
movsb
lods
adc
xchg
dec
xchg
push
xchg
or
mov
out
xor
mov
dec
jmp
mov
jae
roll
adc
test
jle
jg
jle
xchg
adc
in
icebp
mov
xchg
xchg
movsb
or
outsl
stc
pop
int3
sbb
sti
movsl
je
xor
sarl
es
loope
and
fcoml
ja
sbb
mov
pusha
roll
call
stc
sub
lret
jno
pop
inc
mov
mulb
fmul
fwait
pop
inc
ljmp
or
stos
aad
mov
mulb
mov
ret
lods
cmpsl
pop
xor
sahf
push
cmp
repz
loop
popa
inc
push
jnp
aam
mov
ret
xor
xchg
cltd
filds
inc
or
sbb
mov
sbb
fwait
jnp
loop
aam
rorb
into
sub
adc
mov
pushf
push
mov
test
orb
add
cld
adc
xchg
enter
insl
arpl
daa
daa
inc
fmull
notb
das
cltd
or
sub
fidivs
pop
testb
dec
adc
jl
jo
movsl
adc
pop
lahf
jecxz
dec
cwtl
and
imul
xor
dec
push
nop
stos
jg
xor
pop
pop
ret
dec
test
sarb
pop
in
xabort
pop
and
aad
push
stos
jmp
or
jbe
outsb
out
dec
add
cltd
mov
jle
sahf
cmp
xchg
sub
push
inc
add
dec
xor
add
pop
mov
pop
pop
jmp
mov
push
mov
pop
roll
and
sbb
jle
xchg
jg
jle
fwait
aam
leave
jb
pop
xchg
jb
stos
and
jge
pop
mov
pop
fwait
jno
sahf
sub
test
aam
inc
pop
outsb
ds
mov
rolb
add
jae
dec
or
add
popf
rcrb
repz
insb
push
fs
jne
or
xchg
es
xor
inc
lret
push
negl
xor
mov
popa
adc
sbb
popf
sub
js
in
mov
push
stc
test
std
test
out
out
dec
cmp
mov
add
clc
stos
xchg
jns
mov
dec
movsb
mov
xlat
enter
xchg
push
insb
mov
movsl
mov
sbb
mov
and
bound
mov
aaa
js
cltd
adc
pop
adc
test
xor
mov
mov
lods
push
test
xchg
sub
sti
notl
xchg
in
sbb
fmull
cmovbe
xor
test
xchg
lret
jnp
inc
sahf
mov
pop
sub
sbb
xchg
loope
jecxz
jne
pusha
out
in
xchg
dec
lods
enter
out
mov
mov
or
rcrb
push
xor
nop
xchg
push
fstl
insl
pop
decl
xlat
cmp
fistpl
setae
cmpsl
js
out
mov
ret
sbb
push
insl
jnp
mov
push
dec
popf
mov
adc
mov
pushf
adc
jne
jge
and
cmp
add
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
add
push
decl
push
mov
call
mov
add
test
loop
ljmp
fsub
add
mov
add
add
cmp
add
push
inc
push
fisttps
test
out
shlb
jmp
fildl
inc
jle
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
rorb
add
add
xor
mov
cld
jle
lea
add
push
add
mov
decl
add
inc
add
add
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
lcall
add
mov
test
add
incl
jmp
adc
mov
fwait
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
inc
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
dec
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
mov
test
clc
pushf
inc
cmp
pushf
inc
mov
je
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
fwait
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
fwait
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
in
push
mov
gs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
fwait
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
gs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
cmp
pushf
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
fwait
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
in
push
mov
gs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
xor
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
fwait
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
fiaddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jle
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
lret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
test
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
shlb
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
les
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
repz
add
xor
pushf
push
jb
lea
mov
loopne
dec
mov
into
add
iret
inc
call
enter
jge
xor
inc
inc
mov
mov
or
pop
mov
in
cmovne
add
in
cld
inc
sbb
inc
add
adc
sub
add
jle
testb
les
add
decl
mov
inc
in
mov
inc
mov
push
inc
rcr
inc
push
incl
out
inc
add
imulb
mov
mov
fcos
mov
in
jo
incl
mov
out
mov
mov
inc
cmp
test
std
in
add
cmp
outsb
add
push
push
test
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
fsubs
test
incl
test
inc
ret
mov
push
rolb
test
aam
pushl
add
or
incl
add
pushl
mov
mov
jp
decl
add
push
jl
push
orl
callw
lea
out
mov
data16
lea
lea
mov
in
cwtl
loop
mov
data16
push
jle
inc
pop
push
adc
cmp
repnz
inc
mov
cmp
lea
push
inc
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
hlt
xor
clc
ret
rol
mov
mov
rolb
push
add
inc
test
push
mov
mov
push
jmp
push
add
decl
add
cmp
decl
jmp
push
call
mov
lea
jne
decl
decb
mov
push
jmp
inc
pop
lea
daa
test
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
add
inc
ret
xor
pushf
mov
pushf
loopne
test
clc
dec
inc
xor
data16
inc
test
clc
inc
test
lahf
decl
incl
lea
rolb
cld
pushf
dec
test
add
incb
decl
mov
lea
aam
call
xor
mov
test
cmp
ud0
test
ljmp
mov
incl
xchg
add
add
inc
lea
mov
cld
push
mov
xor
add
push
addb
jmp
addl
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
sub
mov
push
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
movb
add
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
in
call
mov
mov
mov
out
addl
mov
inc
lcall
ljmp
mov
sbb
cmp
pushf
pushl
mov
add
aam
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
and
in
lea
jne
incl
jnp
mov
pusha
mov
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
sub
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
cld
mov
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
cmp
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
fwait
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
xor
jmp
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
cmp
pushf
nop
movl
clc
add
add
or
dec
ret
push
inc
dec
mov
mov
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
cmp
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
call
add
mov
xor
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
fwait
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
call
and
call
addl
pop
pushf
in
ret
push
test
mov
and
mov
mov
je
je
mov
mov
add
test
dec
and
test
push
add
or
adc
and
or
cmp
sbb
dec
ret
push
je
and
.byte
.byte
