push
mov
sub
add
mov
cmpl
movl
not
jmp
movl
not
cmpl
jne
push
call
mov
sub
movzwl
and
add
mov
xor
add
sub
xor
adcl
mov
mov
sub
xor
adc
andl
jmp
jae
insl
mov
and
cmp
cmp
sbb
sahf
adc
sbb
mov
mov
cmp
cs
xchg
mov
or
pop
jno
sbb
mov
and
inc
mov
cld
clc
sub
dec
pop
push
and
fcompl
dec
inc
jp
clc
xchg
xorb
jle
sti
xchg
mov
arpl
jmp
adc
mov
sub
mov
push
mov
inc
add
inc
add
xor
repnz
mov
dec
insl
stos
lahf
lret
add
lock
sbb
into
pop
pop
cmp
push
inc
inc
and
mov
xlat
jl
pushf
movsl
movsb
or
xor
imul
push
rol
sahf
stos
mov
fs
fcoml
xor
rorb
out
in
movsb
dec
shlb
shrb
adc
dec
scas
add
popa
sahf
push
popa
in
sub
push
push
push
xchg
xor
dec
push
test
stc
andb
jo
pop
jnp
not
mov
lea
cmp
xor
insb
ljmp
aas
rcll
outsb
fcompl
mov
mov
xchg
imul
jne
test
lret
cmp
mov
pusha
sbb
xchg
mov
sub
fadds
or
scas
mov
xor
add
arpl
lea
jp
movaps
iret
out
adc
or
mov
mov
jne
lock
cwtl
dec
stos
mov
pop
jecxz
test
bound
sub
mov
adc
xchg
lds
outsb
ss
mov
movsl
sub
mov
outsl
lcall
test
add
out
add
mov
das
les
in
mov
xchg
lds
xor
jl
fbld
push
cmc
movsl
scas
adc
fwait
inc
in
mov
js
je
out
popl
flds
icebp
jae
mov
mov
test
or
sbb
test
cmpsb
jge
cmovo
mov
jae
or
outsl
jb
out
std
push
pop
test
out
mov
in
icebp
push
mov
push
jo
push
lods
rorl
sti
sbb
push
movsb
cs
mov
sub
pop
mulb
cmp
or
or
sub
jno
fstpl
jle
pop
repz
jle
mov
dec
xlat
push
inc
stc
repz
movl
and
inc
mov
xlat
and
xchg
xor
insb
cmpsb
out
push
out
push
pop
pushf
cmp
and
fnsave
mov
in
imul
mov
insl
clc
pop
or
adc
int3
popa
add
add
jl
pop
aad
stc
mov
sbb
or
mov
sti
lret
and
jg
call
stos
je
flds
mov
ret
scas
or
pop
fdivr
xlat
arpl
negb
int
rcrb
sarl
nop
insl
mov
sarb
js
jbe
sahf
testb
adc
mov
aad
icebp
int3
lds
in
push
aaa
jne
mov
mov
push
andl
lods
mov
xchg
sub
mov
cmpsb
mov
int3
iret
xchg
and
or
pop
nop
xchg
popf
cmc
xchg
jg
popf
or
movsb
arpl
sub
jge
push
sbb
lods
and
xchg
sub
xlat
mov
mov
sub
mov
push
mov
mov
mov
sbb
mov
mov
mov
and
orl
orl
andl
mov
add
mov
cmpl
mov
movl
mov
mov
jmp
notl
mov
cmpl
jae
push
call
mov
xor
or
sub
or
xor
add
mov
sub
imul
and
or
mov
mov
jmp
outsl
add
das
movsb
out
sbb
stos
sahf
adc
sbb
mov
push
hlt
js
fisttpll
dec
cmc
and
mov
test
sub
lods
rcll
mov
add
xchg
push
xchg
xor
cli
xchg
dec
loope
add
add
ret
mov
imul
mov
adc
cmpb
mov
mov
cs
rorb
hlt
fs
mov
dec
xchg
cmp
adc
sub
and
scas
ja
jne
lahf
push
aam
pusha
leave
cs
mov
add
iret
adc
hlt
je
jg
add
aam
add
inc
rol
sbb
incb
imul
in
and
fwait
xchg
jno
lret
movsb
fmull
inc
out
dec
rolb
shrl
or
repz
cld
jno
xlat
popa
cmp
daa
add
shlb
pop
fstpl
jmp
nop
jmp
dec
push
and
lret
inc
out
and
imul
jle
loope
adcl
jae
repz
lahf
sub
push
cmpsb
sub
insb
ds
addl
repz
mov
sub
sahf
test
je
loop
xchg
xchg
mov
cwtl
sub
movsl
mov
pop
cmp
into
adc
dec
addb
mov
enter
xchg
insb
xlat
addr16
cmpsl
cmp
xchg
scas
clc
cs
push
sahf
mov
mov
movsb
push
ret
imul
add
sahf
or
das
adc
sub
dec
jmp
jae
jne
pop
shl
push
loop,pn
sti
ds
dec
out
lock
idivb
loopne
in
pop
cmp
js
or
aas
inc
mov
push
mov
or
dec
cld
mov
je
call
push
sub
mov
stc
ljmp
pop
mov
notb
movsl
jmp
jl
sbb
jmp
orb
div
sub
adc
cmp
push
shll
mov
pop
or
xchg
add
cmp
fisubl
cmp
call
jl
movsb
adc
jl
xor
stc
sub
lds
cmpsl
mov
arpl
loope
sbb
inc
shl
mov
addb
xchg
lahf
sub
pop
xchg
loope
xor
xchg
pusha
add
or
popa
mov
jle
mov
fadd
into
std
aad
enter
lea
mov
jmp
sub
sub
in
clc
push
adc
repz
cmpl
sbb
pop
jns
out
out
mov
cli
sbb
aad
push
out
scas
add
mov
sub
xchg
in
stos
pop
mov
sbb
jle
js
aaa
mov
push
fcmove
mov
push
sub
or
addr16
repnz
and
in
in
ret
jbe
mov
out
mov
cmp
mov
adc
ficoml
cld
pop
dec
or
scas
es
loop
xor
test
aad
adc
stc
pop
push
mov
xchg
pop
bound
sbb
mov
enter
inc
pop
subb
sbb
fildl
inc
pusha
popf
or
jo
popf
fs
cld
push
sub
mov
popa
dec
int3
lods
outsb
imul
fs
add
jp
adc
cmp
or
push
inc
jae
sub
mov
mov
sbb
cmpl
notl
mov
mov
jmp
movl
not
cmpl
jge
push
call
mov
adc
and
add
mov
xor
and
mov
mov
sub
mov
orl
sbb
orl
adc
lea
mov
movl
mov
cmpl
mov
movzbl
mov
jmp
not
mov
cmpl
jg
push
push
pushl
push
call
adc
sbb
neg
adc
sub
addl
xor
mov
mov
add
sub
mov
mov
inc
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
jg
push
push
push
call
sub
or
sub
mov
adc
mov
xor
mov
shrd
cmpl
mov
movl
movl
jmp
movl
cmpl
jge
pushl
pushl
push
call
movzwl
and
mov
and
add
sub
add
or
shr
mov
cmpl
movl
mov
movl
jmp
mov
mov
cmpl
je
pushl
pushl
pushl
push
push
call
sub
movzwl
add
add
sbb
incl
mov
xor
xor
orl
or
jmp
xchg
xchg
je
insb
sub
dec
and
dec
push
stos
and
adc
sbb
push
add
mov
jmp
int3
cmp
stos
push
lods
sbb
sbb
in
movsl
inc
dec
xor
je
pop
pop
pop
les
push
dec
push
inc
in
mov
inc
and
call
mov
lods
fldcw
popf
mov
mov
outsl
fwait
sbb
jmp
scas
add
insb
add
cmpsl
test
aaa
imul
jnp
shll
jge
mov
pop
xor
cmpsl
nop
push
pop
dec
add
lahf
test
jb
shll
out
jg
loop
arpl
lahf
pop
shlb
mov
dec
jbe
out
push
push
and
mov
jne
ficompl
jne
nop
aaa
xchg
inc
aam
pop
fmuls
es
arpl
xor
xorl
push
repnz
fidivrs
xor
mov
dec
jb
mov
or
add
and
ja
movsb
jo
jmp
dec
xorl
pop
outsb
repz
fists
mov
pop
mov
rcl
lods
cwtl
push
ret
ficompl
gs
cmp
out
or
ffree
and
call
mov
sbb
jnp
pop
xchg
cld
nopl
cs
rclb
leave
mov
repnz
test
ficoms
pop
sub
shll
xor
jle
ja
mov
inc
or
aaa
cmp
jnp
add
push
dec
idiv
int
ljmp
out
popa
xchg
out
aaa
mov
outsb
push
insb
jo
hlt
push
jmp
in
adc
lock
scas
loopne
lcall
incl
cwtl
aad
xchg
hlt
in
cmp
or
sbb
mov
push
lahf
and
decl
cmpsb
push
lret
rorl
push
mov
cwtl
faddl
aam
adc
mov
repnz
pop
cld
push
sub
jl
jae
push
rcrl
inc
aam
push
add
jne
mov
dec
lds
cltd
adc
adc
or
lea
iret
mov
xor
mov
inc
cwtl
int3
scas
stc
lods
sarb
insb
adc
push
ds
push
cmp
test
shl
pop
mov
outsb
push
add
jnp
data16
inc
dec
movsb
push
or
lods
add
dec
sub
mov
icebp
bound
arpl
out
data16
cmp
fistl
sub
mov
inc
sbb
mov
imul
sub
test
out
mov
adc
repnz
repnz
jns
mov
lahf
mov
clc
outsl
inc
jne
lahf
mov
aas
imul
ret
inc
outsl
push
inc
sbb
and
pop
filds
sub
nop
mov
add
sbb
cld
pop
sbb
dec
aas
jo
xchg
xor
loopne
cmp
fnstsw
aas
push
xorl
push
mov
pop
mov
or
dec
sbb
dec
inc
inc
sub
pop
xor
in
lret
jns
add
mov
mov
mov
inc
roll
negl
ret
incl
stos
nop
subb
sbb
iret
mov
subb
adc
jno
xchg
xor
les
mov
aaa
and
jmp
das
mov
int
mov
mov
jle
mov
sub
add
jbe
test
je
xorl
jg
push
je
clc
inc
jnp
pop
inc
mov
movl
mov
adc
movl
cmpl
movl
movl
jmp
mov
mov
cmpl
jbe
pushl
push
call
orl
xorl
addl
and
movl
subl
movl
cmpl
mov
movl
mov
movl
jmp
mov
cmpl
ja
push
pushl
push
call
sbbl
xorl
adcl
addl
andl
sbbl
sbbl
sbb
movl
neg
movl
movl
movl
mov
add
movl
mov
add
movl
cmpl
movl
notl
jmp
movl
mov
cmpl
jle
push
pushl
push
pushl
push
pushl
call
adcl
addl
subl
orl
mov
xor
movl
xor
jmp
stos
fisttpll
aas
and
mov
stos
add
sbb
push
xchg
sub
out
lea
in
out
enter
lods
ret
lods
jb
sbb
icebp
lret
repz
cwtl
test
rorl
lret
adc
xchg
test
in
aam
mov
pop
xchg
dec
fldcw
and
hlt
cltd
ror
sarb
movsl
mov
pushf
cmp
sub
lret
das
sub
xor
fnstcw
jmp
mov
adc
insb
call
ljmp
push
push
cmp
movsl
je
xor
jle
pop
mov
in
enter
out
xchg
dec
mov
xchg
pand
fucompp
out
and
jecxz
pop
mov
repnz
out
adc
hlt
sub
mov
jle
inc
cld
fisttps
jbe
sbb
xchg
cmc
xor
sub
push
push
sbb
mov
fwait
and
out
cwtl
inc
ja
aam
int
push
mov
sbb
ja
cmpsl
movsb
sti
mov
mov
hlt
mov
fisttpl
mov
pop
push
nop
cmp
shlb
lahf
addl
popf
cmp
jne
insl
imul
jmp
mov
mov
push
cwtl
mov
pop
mov
dec
inc
adc
jbe
cmp
repz
jb
insl
pop
add
testb
pop
das
dec
je
push
loop
aas
fwait
das
shll
addl
cmc
std
push
inc
jp
add
sbb
adc
mov
jo
sbb
mov
jb
jno
pop
push
sbb
aas
fcomp
jge
sbb
push
sub
filds
lds
leave
lret
cmpsl
popf
sahf
ret
add
ss
lea
adc
cmc
push
and
cltd
push
mov
add
data16
xchg
shll
ret
push
add
xor
xchg
mov
xor
pop
dec
sbb
js
mov
pop
sti
lods
xchg
push
xor
mov
fisttpll
xchg
lods
loope
push
xor
sub
adc
mov
push
pop
data16
mov
push
cmp
mov
cmp
fsubl
ret
dec
push
loop
stos
jb
add
inc
pop
dec
lea
pop
push
and
daa
xchg
sub
movsb
shll
inc
lds
inc
sbb
jg
sub
push
mov
int
mov
test
rolb
andb
mov
or
sbb
jecxz
xchg
ffree
ljmp
xchg
sub
sti
sbb
push
popf
in
mov
repz
sub
push
sbb
pop
jecxz
hlt
cmp
mov
xchg
and
pop
add
loope
or
jbe
cmp
add
addr16
ja
xor
stos
pop
test
gs
adc
loope
jecxz
out
mov
aam
adc
popf
push
loopne
add
cmp
lret
pop
mov
call
push
hlt
movsl
mov
pop
clc
sub
jmp
cmp
into
xchg
sub
lods
mov
xor
rorl
mov
lods
fs
aas
ret
xor
jmp
pop
mov
fdivl
call
sub
jae
out
fsts
adc
dec
or
lcall
mov
popf
loope
dec
enter
loopne
out
sub
dec
or
jp
es
jbe
and
pop
movl
movzwl
adc
movl
adc
movl
cmpl
movl
mov
movl
jmp
mov
mov
cmpl
ja
pushl
push
push
push
call
sbbl
adcl
subl
andl
addl
movl
sub
movl
movl
addl
movl
movl
cmpl
mov
mov
mov
movl
jmp
mov
mov
cmpl
jg
pushl
push
push
push
call
addl
subl
xorl
decl
and
or
mov
and
movl
movzwl
sbb
movl
or
movl
adcl
movl
mov
decl
shl
not
mov
jmp
out
repz
cmp
pop
and
stos
xor
sbb
sahf
adc
sbb
dec
daa
imul
mov
pop
mov
and
ljmp
jb
jns
popa
pop
std
mov
in
sahf
mov
xchg
and
jns
mov
or
jecxz
mov
xor
rcll
mov
mov
mov
jp
int
loopne
pop
add
or
into
push
dec
imul
lds
adc
sub
dec
push
lock
lahf
adc
rcll
or
adc
ljmp
cmc
bound
add
add
add
mov
xor
pop
add
add
cmpsl
mov
push
int
fistpll
adc
sarl
mov
popa
rclb
jnp
and
inc
cmovp
sub
mov
outsb
dec
call
inc
pop
idivb
dec
jns
cmp
pop
mov
cltd
jb
in
jp
xchg
call
xorl
jg
sub
int
sbb
orl
loop
out
sbb
shl
xor
mov
ljmp
mov
ret
and
xchg
rorb
lahf
lods
ljmp
dec
push
or
sbb
lcall
push
dec
mov
cmp
outsb
pop
dec
popa
sahf
fsubrs
repz
xchg
jnp
push
inc
fwait
and
jnp
push
cmc
sub
xor
lret
add
clc
ret
insl
fnsave
enter
xchg
mov
mov
sbb
jnp
popf
push
add
jle
je
fwait
ret
inc
push
mov
mov
ljmp
mulps
pop
cmpl
push
insl
data16
iret
mov
loopne
arpl
sbb
in
int
arpl
sub
iret
jg
mov
aaa
sub
cmp
push
pushf
xor
fcmove
mov
lret
mov
pusha
or
loop
xchg
and
xchg
cs
dec
pop
sbb
mov
std
add
notl
testl
fsubrs
jbe
dec
orb
mov
mov
inc
inc
add
sub
lcall
imul
xor
shll
fdivrs
stos
mov
daa
shrl
ja
push
out
inc
sti
push
xchg
push
jle
mov
repz
add
sbbl
pop
fwait
jl
cmp
or
lds
or
dec
inc
mov
jno
test
jle
cmp
jno
or
pop
mov
lods
sub
fidivl
rcrl
nop
repz
adc
mov
inc
pop
lea
ss
out
mov
xor
jnp
lea
pop
jns
or
push
in
mov
ss
and
and
xor
dec
add
loope
js
inc
ljmp
mov
pop
xor
cmpsb
mov
inc
sub
test
inc
jle
test
cwtl
pop
push
sahf
je
popf
scas
out
jl
add
dec
jnp
or
xor
adc
andl
push
dec
pop
mov
adc
leave
jno
xor
nop
push
adc
lret
push
scas
jecxz
lock
add
repz
daa
xchg
fnstcw
int
cltd
cmp
mov
sahf
fistpll
ljmp
je
and
xlat
xor
add
test
in
fwait
and
aas
in
dec
test
push
push
push
sbbl
push
call
mov
not
mov
cmpl
mov
movl
movzwl
jmp
mov
cmpl
jb
pushl
call
mov
add
movl
adc
mov
sbb
mov
xor
and
xor
mov
xor
mov
addl
sub
mov
mov
and
mov
orl
lea
mov
mov
sbbl
or
addl
jmp
nop
movsb
call
int
cmpl
jl
hlt
sbb
sahf
adc
sbb
call
es
cmpsl
pop
sbb
pop
cmp
sbb
pop
aam
push
mov
xchg
test
cli
sarb
dec
or
scas
jp
pop
inc
mov
cmp
pop
iret
cmpsb
jne
push
jp
aad
iret
mov
ja
pop
add
scas
sti
clc
ss
ja
inc
lods
jbe
rorb
cmpsb
or
sahf
sub
push
sub
inc
fcoml
jmp
das
add
call
cwtl
inc
out
sbb
enter
jo
and
jnp
ljmp
jns
xor
pusha
arpl
jo
inc
jb
jnp
outsb
dec
jp
insl
stos
cmpsl
loopne
sbb
dec
or
rorl
dec
cmp
sub
xor
pop
outsb
cld
cli
mov
push
cmp
jmp
inc
or
push
jb
mov
out
jae
mov
outsb
and
pop
sti
jmp
sub
and
lods
mov
test
pop
mov
push
test
shll
fs
dec
add
add
lret
insb
dec
dec
adc
mov
les
enter
inc
sub
push
xor
fwait
popa
jo
adc
loop
js
imul
test
sub
xor
popf
jge
nop
mov
and
and
mov
pusha
fisttpll
ss
push
iret
aad
into
in
sarb
popa
push
daa
lds
int
push
dec
or
mov
pop
dec
cwtl
mov
out
arpl
inc
mov
lods
sti
stc
test
pushf
shlb
popa
popa
iret
movsb
xchg
scas
pop
stos
sbb
ja
push
cmp
movsl
imul
notb
dec
pop
std
add
cmc
cli
fwait
jmp
sbb
outsl
adc
mov
gs
dec
scas
fmuls
fstl
leave
lods
pop
nop
or
xor
dec
gs
jb
fwait
and
cwtl
jmp
mov
mov
pop
jb
fistl
xchg
xchg
jb
rolb
inc
stos
aaa
jmp
jl
rol
jge
adc
mov
pushf
sbb
out
in
jge
inc
fisttps
shr
cltd
jge
sbb
xchg
mov
mov
cs
sbb
ds
xorb
inc
stc
aam
imull
mov
sahf
xchg
jnp
aaa
fdivr
loopne
xor
and
push
or
mov
lock
xlat
cmp
dec
and
push
xor
xchg
pop
pop
push
pop
push
sub
pop
xlat
ja
in
sub
test
and
or
mov
pushf
dec
jg
pop
pop
dec
xlat
mov
loop
pushf
shr
imul
scas
pushf
dec
test
mov
lcall
test
test
push
or
cmpsb
fldl
sbb
pop
mov
test
pop
jmp
pop
add
jle
sahf
xor
ret
cmp
adc
jl
cmp
mov
jmp
jb
xchg
cmp
jmp
mov
lcall
dec
pop
sbb
out
imul
mov
sbb
mov
cmp
mov
data16
push
popf
mov
cmp
lahf
bnd
inc
xchg
lret
or
ss
pushl
dec
filds
jo
cmpsl
inc
dec
and
mov
in
push
xor
sub
pop
adc
outsl
shrb
or
and
add
mov
or
xor
cmp
movl
jne
mov
cmpl
mov
movl
mov
jmp
movl
not
cmpl
jl
pushl
pushl
call
movl
incl
or
add
sub
add
sbb
mov
sbb
shrd
shr
mov
xor
mov
negl
shl
xor
xor
sbbl
or
jmp
and
push
repnz
inc
sarb
jo
adc
jl
in
sbb
sahf
adc
sbb
in
test
ljmp
fdivrp
cmpsb
shrl
rclb
popa
sub
mov
mov
sub
setge
cmp
imul
cmpsb
mov
shl
push
cmp
ret
push
dec
pop
sbb
xor
add
repnz
out
stos
jne
shrl
pop
sahf
xchg
push
add
js
jmp
jbe
adc
insl
orl
sbb
in
xchg
sbb
push
pop
jb
lahf
mov
cmc
sbb
inc
dec
aam
or
sub
outsb
push
and
and
pop
test
fidivrl
mov
and
xchg
shrl
push
mov
daa
cmp
mov
out
out
jp
or
pop
ret
sbb
bound
push
xchg
mov
mov
test
or
cld
jbe
sbb
or
and
scas
subl
aas
jge
xchg
mov
loop
sub
cmpsb
mov
mov
xchg
popa
add
test
lds
mov
add
xchg
jnp
push
push
mov
sbb
cwtl
jl
xor
pop
std
mov
aad
xor
sti
xlat
popf
cli
pop
imul
jmp
pushf
xchg
xchg
scas
jl
mov
mov
loop
sbb
in
pop
mov
aas
je
fadd
repz
lds
shrb
mov
pop
push
xor
xor
inc
xor
dec
das
pop
out
lahf
add
or
sub
inc
xchg
pop
arpl
push
add
inc
xor
pusha
std
adc
mov
or
adc
and
mov
mov
out
xlat
data16
lods
dec
test
test
cmpsb
sbb
popf
add
inc
ljmp
xchg
rorl
pop
mov
cld
sbb
popa
movsl
in
add
rcll
lea
push
lea
xor
jl
or
andb
dec
inc
lods
loope
push
mov
push
cwtl
std
fdivrs
sub
jnp
lahf
pop
dec
adc
insb
out
sbb
vpmacsdql
lock
mov
fsubrl
rclb
xchg
rcl
movsl
push
imul
inc
mov
xor
icebp
repnz
ret
daa
mov
nop
or
aaa
mov
jo
out
out
andb
fsts
add
sub
inc
sub
jge
adc
pop
fisttpll
stc
or
push
push
mov
dec
inc
or
mov
xchg
lcall
sbb
xor
xchg
leave
outsb
stos
jo
mov
jmp
call
jbe
fwait
add
jns
addr16
ja
sub
repz
mov
pop
add
dec
push
push
and
sub
mov
or
pushf
dec
daa
les
mov
ret
jns
enter
in
ljmp
cmp
popa
test
xchg
pop
fists
fldenv
fidivrl
pop
dec
lret
hlt
addr16
xor
test
dec
xchg
and
sbb
inc
fistps
pop
orl
lahf
int3
and
nop
int
inc
adc
pop
imul
dec
sub
imul
push
into
pop
dec
jp
fprem1
pushf
ss
xchg
mov
cmp
movl
jne
jmp
sbb
fldt
sbb
or
sbb
push
in
sbb
fiadds
push
out
jg
push
lods
out
psrld
and
test
inc
nop
sub
in
in
inc
pop
and
xor
int
out
add
sbb
xchg
hlt
cmp
lahf
call
lahf
shlb
cltd
mov
mov
cmpsb
sbbl
xchg
leave
fs
lret
fsubrl
inc
cmovo
repz
int
jmp
xchg
xor
add
rcll
dec
cmp
xor
fisubl
pop
fwait
jmp
sbb
jge
mov
xchg
sbb
xchg
movsl
test
or
xor
ds
test
lret
inc
mov
sbb
xor
or
jb
inc
repnz
js
inc
inc
adc
jl
jne
mov
add
jne
ret
andl
sarb
cmp
mov
adc
mov
das
mov
xchg
push
aas
test
cmpsb
xchg
mov
cmp
jne
sbb
popf
jne
jle
push
ret
add
incb
fldl
sarb
cmp
std
xor
xchg
es
jl
mov
scas
ljmp
add
scas
mov
or
add
test
testl
xor
xor
rcr
fistl
or
or
mov
jl
mov
sub
xor
incl
stos
jle
sti
cmpsl
lret
mov
adcb
fsubl
sbb
or
cmp
stc
bound
roll
add
or
into
vmovntpd
out
lods
xchg
jae
xchg
or
push
jmp
inc
and
aam
mov
cmp
sub
outsb
adc
jge
out
lret
dec
adc
jb
or
and
jg
imul
xchg
jno
xor
std
rorb
fs
and
add
or
lock
out
jno
xor
pop
mov
xor
imul
clc
inc
mov
jo
and
icebp
mov
dec
mov
xor
adc
pop
push
les
lea
sarl
xchg
ds
imull
mov
and
mov
ljmp
ret
icebp
les
push
sub
loop
and
shll
and
inc
lock
cmc
mov
inc
mov
xchg
test
add
sbb
fwait
cmp
cmc
pusha
or
cltd
mov
jns
sarl
shlb
jbe
add
add
movsl
ret
cmp
stos
repz
scas
aad
add
in
insb
xchg
mov
cmp
dec
mov
mov
rcrb
adcb
dec
mov
je
jg
data16
gs
aaa
and
mov
add
xorl
add
pop
mov
movsl
push
and
in
push
fbstp
inc
shrb
add
ror
xchg
inc
sub
aas
mov
sub
push
imul
and
shl
adc
arpl
pop
fldt
push
mov
xchg
jne
xchg
sbb
push
add
pop
scas
xorl
dec
les
daa
pushf
pop
imul
ret
mov
mov
mov
jmp
mov
inc
hlt
cmpl
notl
mov
jmp
not
cmpl
jne
pushl
call
xor
negl
xorl
andl
sbb
or
mov
cmpl
movl
mov
jmp
mov
cmpl
jbe
push
push
call
adcl
sbbl
mov
or
xor
add
adc
mov
xor
orl
mov
mov
and
mov
orl
shrd
mov
adc
mov
xor
adcl
shr
orl
mov
sbbl
xor
orl
or
subl
shl
subl
sub
cmpl
movl
mov
jmp
mov
cmpl
jne
push
call
mov
xor
xor
sub
or
sbb
xorl
xor
sbbl
orl
mov
cmpl
mov
mov
movl
jmp
movl
movl
cmpl
jle
push
call
and
adc
or
add
add
mov
xorl
mov
add
jmp
and
fdivrl
xchg
mov
dec
fistps
sbb
outsb
push
daa
call
adc
sti
aaa
movsb
jecxz
mov
xchg
stos
les
fs
cmp
or
stc
out
cli
jo,pt
dec
cltd
mov
xor
repz
sbb
jbe
sub
pop
loop
xlat
jp
ja
xor
dec
pop
fists
filds
les
outsb
gs
and
sub
pop
fmul
lea
rolb
and
lds
ret
and
in
add
adc
loope
xchg
sbbb
sbb
pop
in
lea
push
negl
rclb
cmp
sbb
mov
push
xchg
cmp
repnz
pop
xchg
xor
lret
scas
dec
cltd
add
push
push
bound
shl
jmp
dec
push
cmpsl
jns
mov
mov
cmp
dec
push
popf
mov
clc
mov
cli
sub
faddl
addr16
push
andl
int3
orl
push
dec
jecxz
mov
shr
cmc
rcrl
jp
movsb
fdivrp
leave
mov
adc
mov
sbb
mov
xlat
cs
popf
sbb
imul
push
es
sbb
sbb
out
jmp
pusha
pop
pop
xchg
xor
call
imul
rolb
and
int3
jge
out
aad
lret
jno
jl
mov
sahf
or
pop
ljmp
notl
pop
loope
cmp
fistl
jne
inc
xchg
gs
loope
cmpsl
jno
mov
insl
or
mov
mov
ljmp
xor
repz
into
mov
fwait
adc
inc
dec
mov
sbb
xchg
fwait
mov
cmp
outsb
stc
add
int
and
cmc
push
dec
shlb
das
roll
jo
sub
into
and
pop
repnz
loope
or
rolb
sub
leave
pop
mov
cltd
sub
shr
sub
add
jp
add
sub
subb
or
stc
mov
adc
mov
sub
movsb
pop
xchg
jns
aad
mov
sti
test
xchg
push
iret
lds
or
adc
mov
movsb
jne
push
rorb
bound
ret
repz
lock
lahf
in
push
stos
lods
add
imul
aad
or
je
adc
scas
cmpsl
dec
idivl
fisttpll
enter
push
sysenter
adc
pop
aaa
lret
pushf
and
xor
cmp
lds
mov
inc
xor
sub
rolb
add
call
xor
mov
cmpsb
and
shrl
and
mov
test
bound
dec
pushf
pushf
jecxz
pushf
xor
adcb
push
scas
mov
lods
push
lods
xor
sarb
mov
ret
inc
xchg
adc
push
jp
repnz
sub
fwait
pop
push
incl
xchg
pop
fcomip
inc
mov
jnp
xchg
adc
pop
ret
pop
cmp
jnp
pop
out
test
call
dec
sub
shl
jmp
add
outsb
mov
pop
pop
mov
mov
mov
dec
out
mov
push
pop
std
mov
cmpsl
rorb
cwtl
push
aaa
sbb
ja
jns
sub
jno
shrl
in
add
sbb
mov
mov
mov
mov
mov
add
shrd
sub
shr
and
mov
andl
jmp
subl
and
sbb
push
xlat
sbb
sahf
adc
sbb
rcrl
inc
push
fnsave
out
push
nop
mov
test
setb
pop
jno
xor
and
bound
mov
add
lret
and
jb
jno
cmpsl
mov
fistpll
into
and
imul
mov
pop
push
outsl
cli
cmp
mov
adc
shll
andl
mov
mov
lods
dec
out
cmp
dec
repnz
jo
hlt
add
bound
push
lods
and
stos
sar
dec
pop
outsl
add
mov
divl
mov
xchg
mov
jae
es
xor
loope
xor
stos
inc
mov
xor
inc
lods
fsts
inc
sub
inc
cmp
pusha
mov
es
inc
jl
mov
mov
cmp
lea
inc
add
in
out
sbb
inc
and
add
mov
cmpsb
je
jg
mul
xchg
out
pushw
pop
mov
adc
push
add
ret
push
push
test
imul
neg
out
popa
cld
xchg
sub
lret
gs
pop
ljmp
adc
jno
fcoms
sbbb
popf
xchg
lods
adc
popa
cmpsl
clc
jb
nop
jecxz
mov
mov
and
sarb
paddd
mov
add
xor
sahf
fs
xlat
mov
cmp
mov
dec
push
mov
stos
ret
lret
aaa
icebp
sbb
xchg
pop
cmp
push
out
pop
mov
mov
xor
push
ja
pop
cli
dec
fdivs
mov
xchg
mov
xor
test
mov
rclb
pop
divl
dec
mov
push
lret
arpl
aas
enter
mov
ja
bound
fiadds
pop
mov
lock
int3
test
cmp
xchg
cmpsl
int
ja
add
adc
scas
ss
ljmp
inc
or
loop
sub
ret
mov
xor
jp
and
nop
js
lahf
gs
sub
pop
xor
inc
and
sbb
and
cmp
sub
pop
mov
aam
and
and
mov
cli
jmp
loopne
shlb
cmp
gs
lahf
cmp
pushf
dec
scas
fwait
iret
inc
subl
ret
sbb
sub
mov
pop
jbe
add
fldcw
lea
ret
in
xchg
lds
loopne
out
in
cmp
mov
jmp
pop
movsl
mov
mov
das
cltd
lret
out
aas
testb
mov
bound
mov
mov
aas
pop
es
sub
and
mov
mov
sub
repz
push
call
jne
dec
rcrb
push
inc
lea
fwait
enter
jno
mov
stos
push
bound
les
mov
test
adc
cmpsl
mov
pusha
sbb
incb
out
jnp
fdivrs
xor
insl
push
add
lock
mov
add
dec
mov
outsl
and
fldcw
ret
push
bound
rorl
jp
in
xor
push
xor
cli
ficompl
xchg
loope
jecxz
jecxz
cmp
fbstp
mov
jne
xchg
sub
or
xor
loope
xchg
arpl
jg
push
add
sbb
xor
or
shl
and
xor
mov
and
or
mov
movzbl
sbb
mov
jmp
xchg
xchg
lcall
stos
sub
mov
push
iret
sbb
sahf
adc
sbb
ficomps
push
insb
xchg
mov
cmp
dec
xchg
loop
test
and
fmul
repnz
cwtl
sbbb
xchg
dec
sbb
cs
sbb
ret
inc
lcall
outsb
insl
ss
mov
fsubrl
xor
outsl
lea
cmp
add
insb
movsl
pop
fmull
jg
cmp
jle
pop
clc
ret
or
adc
in
inc
and
fimull
jae
sbb
fucom
dec
xchg
gs
xchg
xchg
repz
add
mov
pop
inc
xchg
lahf
mov
add
clc
imul
aas
xor
mov
cli
push
call
mov
mov
cmp
cmp
pop
clc
add
sbb
adc
fisttps
popa
and
andb
mov
mov
cmc
sub
mov
pop
mov
mov
jg
push
dec
push
pop
sub
sub
sub
and
cmc
push
aad
inc
inc
fcmovbe
leave
or
clc
into
and
fstp
sbbl
test
xchg
stc
mov
aaa
cmp
cwtl
mov
rol
jb
jnp
jnp
xchg
mov
sub
xlat
sti
lods
add
in
sbb
pop
fwait
out
lret
sbb
cmp
mov
stc
xlat
pop
fcoms
into
xor
rcll
fldl
push
mov
int3
dec
mov
adc
xchg
pushf
xchg
push
sub
cmpb
xchg
sbb
jle
test
cmpsl
mov
popf
xchg
clc
dec
cmpsl
push
hlt
lret
mov
movsb
adc
pop
loope
mov
test
jmp
jle
das
outsb
inc
lds
jbe
divl
or
xchg
push
sub
lcall
es
das
aas
sbb
pusha
cld
push
fsubl
push
sub
lahf
jg
pop
push
push
data16
or
xchg
in
nop
or
and
jg
push
pop
pmulhuw
and
jae
or
adc
push
dec
cwtl
and
sbb
xor
jl
adc
sbb
imull
stos
inc
aam
rcr
dec
cmpsl
adc
pop
lods
xor
pop
push
dec
push
ljmp
or
clc
mov
ret
sbb
pop
loopne
jg
push
push
stos
mov
cmp
ljmp
fisttps
fdiv
sub
add
add
pusha
lea
xchg
jge
lock
ja
sarl
cmpsb
and
gs
jge
push
iret
hlt
xchg
and
aas
push
loopne
lock
mov
sbb
jp
dec
out
xchg
jge
ss
cmp
cltd
ficoml
lret
push
jmp
outsl
cmp
mov
add
sbb
inc
pop
imul
add
cmp
dec
xchg
lds
stos
insb
cld
loop
addr16
divb
lret
dec
cmp
xchg
sbb
cmp
subb
adc
mov
lahf
cmpsl
inc
orb
repz
xor
out
push
push
adc
ret
lods
add
add
pop
lods
xchg
std
pop
gs
js
push
subl
daa
insl
dec
and
scas
cmp
inc
dec
add
adc
out
mov
insl
pop
in
or
fwait
stos
out
dec
mov
out
aaa
dec
mov
cmc
movsl
es
pop
out
pop
sub
and
add
add
ljmp
add
adc
mov
jmp
add
lea
fcompl
pop
or
mov
fcmovnb
sbb
sahf
adc
sbb
xor
and
push
jae
cmp
mov
pop
dec
sbb
sahf
div
sbb
iret
adcl
xor
xchg
mov
jmp
xchg
data16
mov
push
mov
ss
pop
dec
mov
xlat
xor
fabs
in
ljmp
dec
pushf
mov
sub
jge
fsubl
xchg
and
mov
push
outsb
andl
sahf
mov
ficompl
sub
push
mov
inc
popa
mov
pop
inc
wbinvd
push
sarl
cmp
mov
and
push
xchg
push
fisttpll
out
push
scas
dec
adc
inc
aas
rcrb
dec
add
dec
cmp
in
cmp
sbb
out
and
test
or
outsb
pop
add
mov
mov
mov
pusha
dec
ret
adc
xchg
cmp
mov
inc
sbb
mov
test
lock
jnp
fcomps
fcmovnbe
sub
mov
repnz
and
jno
push
jle
push
mov
mov
mov
shlb
jl
enter
imul
xchg
add
mov
mov
out
cmp
pop
mov
and
adc
cmp
test
dec
mov
popf
aas
mov
push
pop
mov
jmp
sbb
lods
push
les
popa
sarb
lcall
gs
out
cmpsl
int
and
in
sbb
push
or
lock
adc
dec
dec
add
inc
sbb
xor
ret
inc
outsl
mov
add
jnp
cmpsl
sbb
sti
fisubl
adc
sbb
push
fstpl
xor
or
imul
loop
jae
sbb
popa
mov
push
popa
xchg
jo
je
sub
pop
fdivrl
sub
dec
fisttpll
into
daa
call
or
mov
mov
das
sbb
fsts
data16
cli
sub
add
xor
scas
xchg
sub
cwtl
out
add
jno
adc
xchg
mov
cmc
push
daa
mov
shrl
or
cltd
popa
xchg
mov
testb
loop
pushl
or
loopne
xchg
imul
mov
lods
int3
pop
ret
repnz
jae
jae
test
cmp
cld
cmp
sub
mov
andl
in
mov
sti
pcmpeqd
clc
cmp
cmp
inc
mov
inc
stos
jns
movsl
clc
xchg
or
ds
imull
ret
movb
cmp
or
scas
ror
dec
mov
fstps
mov
mov
das
push
add
jbe
xchg
sub
xor
jns
or
adc
xchg
pop
repz
mov
jl
and
daa
out
push
ret
cmp
mov
lock
loopne
stos
jl
outsl
add
out
bound
or
lea
add
mov
push
jge
xor
sub
lods
add
pop
inc
jae
insb
repnz
test
jne
mov
xchg
sbb
push
fwait
push
ljmp
cwtl
nop
mov
fs
iret
jecxz
lea
adc
loope
sub
mov
mov
xor
addl
xor
jmp
scas
ds
and
sbb
fsubrp
push
stos
ds
sbb
sahf
adc
sbb
iret
xchg
es
lods
testb
xchg
xchg
aaa
sbb
cmc
jbe
mov
mov
and
js
fs
loope
das
adc
xor
arpl
fisttpll
inc
int
xor
and
or
jmp
adc
sti
mov
adcl
in
ss
push
adc
dec
cmp
pop
dec
add
movsl
fiadds
dec
cwtl
cmp
fbld
mov
xchg
mov
pop
mov
sahf
or
imul
pop
and
popa
cmp
mov
push
shll
gs
mov
mov
dec
mov
push
icebp
clc
and
movsb
gs
pop
aam
movsl
shlb
lret
inc
inc
orb
jns
orl
notl
cmp
inc
add
cli
xchg
and
fsubs
mov
adc
mov
or
das
fidivl
sbb
cltd
andl
mov
jne
xchg
cld
pop
das
popf
jl
push
mov
std
ficoml
aas
movb
cmp
adc
pop
roll
sub
cwtl
ret
pop
xchg
test
cltd
sub
cli
push
cwtl
jmp
push
je
leave
stc
ret
cwtl
sub
mov
cmp
int
ss
mov
mov
mov
dec
clc
xor
ljmp
sub
pop
cltd
fsub
test
and
in
repz
loop
cmp
xchg
in
adc
cmp
jmp
or
sub
int
mov
jae
xor
clc
and
fstl
ficoml
push
push
es
mov
xor
int
pusha
xchg
lods
xor
sub
pop
jmp
pop
mov
pusha
add
jp
jns
data16
lods
aas
or
and
sub
inc
jmp
xchg
call
dec
mov
mov
or
test
jbe
mov
cmp
mov
aaa
mov
popa
cld
jle
inc
lods
sbb
mov
fs
icebp
pop
mov
lods
xchg
sub
scas
loop
out
data16
adc
shrb
es
mov
mov
xchg
leave
adc
push
outsl
push
stc
fistl
pop
push
imul
mov
push
push
jl
inc
sbb
mov
jnp
sahf
popa
xor
mov
stos
fs
mov
scas
jle
jmp
adc
aad
aad
pushf
mov
mov
incl
loop
into
push
lret
mov
inc
mov
or
cmp
cmp
lahf
dec
jmp
cmp
add
out
adc
mov
xor
fildl
mov
rolb
cs
or
adc
std
push
ret
out
aaa
mov
mov
mov
push
cmp
push
std
notl
push
add
dec
pop
mov
or
into
cmp
jnp
xchg
lea
mov
ret
push
imul
fildl
jb
out
dec
repnz
jg
or
fcmovbe
in
jb
fildll
sahf
inc
rcl
enter
fsubl
adc
dec
daa
xor
int3
or
dec
js
push
pusha
or
and
pop
clc
push
vpackssdw
lret
adc
sbb
push
je
add
loope
lea
adc
mov
or
mov
movl
shrd
adcl
shr
cmpl
mov
movl
movl
jmp
mov
movl
cmpl
jg
push
pushl
call
and
sub
orl
adcl
mov
mov
add
xor
xor
xor
mov
add
mov
mov
add
mov
sub
mov
xor
mov
xor
addl
or
subl
shl
and
imul
mov
mov
shrd
sbbl
mov
sbbl
mov
adcl
xor
shr
adc
mov
mov
xor
movl
or
adcl
shl
orl
sub
mov
movl
cmp
not
mov
movl
jg
mov
xor
mov
sbbl
shrd
sbbl
mov
mov
xor
orl
shl
xor
andl
or
shr
or
mov
mov
cmpl
mov
mov
not
jmp
movl
cmpl
ja
push
pushl
push
call
orl
add
adc
xorl
sbb
cmpl
movl
mov
mov
jmp
mov
cmpl
jge
pushl
pushl
call
incl
mov
mov
sub
imul
xorl
mov
mov
sub
mov
mov
sub
and
mov
subl
mov
shrd
shr
mov
xor
xor
sub
mov
inc
mov
addl
xor
xor
xorl
or
xorl
shl
andl
imul
addl
sub
jmp
addl
mov
cmpl
movl
mov
movl
jmp
movl
movl
cmpl
jae
push
push
call
add
adc
add
andl
dec
xor
or
add
mov
add
mov
xorl
shrd
mov
cmpl
mov
mov
jmp
movl
movl
cmpl
jb
push
push
call
not
adc
neg
mov
mov
sub
mov
xor
or
sbb
cmpl
mov
notl
jmp
movl
cmpl
jb
push
pushl
pushl
push
pushl
call
sub
subl
orl
adc
sub
movl
mov
xor
shl
adcl
xor
xorl
or
shr
mov
sub
mov
jmp
xchg
stc
xchg
out
insb
push
jbe
push
stos
jge
arpl
adc
sbb
add
push
sti
fsts
das
stos
add
jmp
daa
push
adc
loop
fs
sti
mov
mov
mov
subl
cmp
int3
dec
call
inc
add
xchg
cs
mov
cmc
es
jle
movsl
cmp
roll
add
xchg
in
dec
sbbl
leave
dec
insb
imul
pop
pop
sbb
das
lret
fwait
mov
cmp
dec
adc
aad
fisttps
repz
cmp
cmpsl
ja
rolb
loop
adc
mov
or
push
jae
push
inc
sarb
lahf
mov
cmpb
data16
sti
pop
sbb
test
es
xlat
mov
push
popf
test
addb
cltd
out
mov
xor
in
sbb
jp
push
imul
lret
test
jae
stos
jns
add
xchg
arpl
push
xchg
out
and
adc
pusha
mov
mov
push
xor
inc
mov
lods
mov
pop
in
cwtl
jae
cmpb
mov
popf
push
subl
scas
mov
shrl
cmc
mov
and
add
lods
js
rcl
orl
in
push
in
in
jno
mov
loope
fstl
inc
sbb
cmp
lcall
xchg
push
rclb
push
cmp
mov
in
mov
in
scas
sbb
jae
test
mov
sbb
cs
lods
test
stc
fs
mov
pushf
mov
leave
addb
test
int3
and
xlat
in
pusha
inc
jns
push
roll
shrb
xor
lock
mov
shlb
mov
aaa
aad
jbe
mov
mov
add
lea
aaa
cmp
insb
outsl
xchg
ja
nop
xchg
call
popa
gs
cmc
fbld
mov
pop
adc
aas
push
pop
popf
fldenv
test
adc
repz
mov
push
dec
imul
and
jg
adc
loop
adc
lods
dec
inc
stos
inc
add
out
inc
in
lahf
fwait
adc
scas
push
cld
and
lret
add
das
pop
cmp
fcmovu
popf
pusha
jns
pop
rcll
roll
sub
adc
xchg
ret
sub
mov
sbb
pusha
jmp
mov
jnp
and
movsb
mov
push
and
mov
xchg
adc
xchg
xor
stc
scas
jbe
mov
pop
inc
xchg
lea
pop
push
xor
dec
pushf
in
in
and
lds
adc
ljmp
in
sub
xorb
sbb
mov
imul
sbb
sbb
and
cli
mov
ja
xchg
fists
and
xchg
pop
cmc
pop
out
mull
jns
and
imul
sub
iret
push
xchg
and
pop
pop
and
cmp
pop
mov
cmp
aas
adc
xchg
cli
lcall
xchg
sbb
rcrb
inc
fwait
rcrb
pushf
lcall
xchg
xor
lahf
iret
cs
mov
pop
jb
ret
movsb
sbbl
fnsave
adc
mov
adc
outsb
jl
mov
cmp
xchg
sbbb
xchg
arpl
mov
negl
mov
cmpl
movl
mov
mov
jmp
mov
movl
cmpl
jb
push
call
adc
orl
negl
sub
sub
mov
mov
shrd
shr
mov
mov
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
jmp
ret
scas
sar
fcmovb
scas
mov
jl
out
insl
mov
sbb
cmpsl
pop
sub
cs
mov
lds
mov
ljmp
xor
cmc
adc
xor
xchg
fidivs
adc
lahf
cwtl
pop
sahf
std
pop
xchg
sub
push
ret
mov
out
mov
lea
in
add
adc
pusha
popa
or
pop
ret
pop
jb
ljmp
cli
xor
sbb
in
push
mov
sub
mov
inc
adc
mov
sub
cmp
inc
pop
push
inc
jae
and
mov
lds
dec
xor
es
lahf
xchg
ficoml
fstps
scas
clc
aas
fcoml
aas
sti
js
leave
mov
pusha
mov
test
add
jns
xor
insl
mov
aaa
xlat
pop
xchg
daa
test
xor
push
jmp
jbe
addl
dec
mov
arpl
dec
dec
jae
jecxz
cmpsb
pop
pop
int
jae
fbstp
mov
xor
sub
cli
sub
sbb
sbb
or
cmp
fs
or
mov
test
push
loop
daa
jne
mulb
popf
push
repz
test
push
dec
pop
xchg
aad
notl
js
and
popf
and
bound
aaa
je
or
std
in
cmp
in
push
mov
sbb
lcall
pop
or
les
out
push
inc
jno
pop
aaa
push
and
fisttpll
int3
aaa
andb
push
fistpll
testb
lret
ficomps
test
notl
pushf
pop
inc
xchg
leave
xor
lret
ljmp
sbb
dec
test
test
cltd
mov
cld
adc
push
cli
imul
neg
ds
mov
std
int
cmp
aad
arpl
inc
jl
test
jl
in
sbb
adc
push
test
add
mov
loopne
sub
sbb
out
cmpsl
call
sti
mov
addr16
mov
mov
and
xor
in
das
lret
inc
jnp
inc
cmpsb
pop
push
mov
ja
pop
lret
push
mov
mov
cmp
fimuls
movsl
iret
outsl
xchg
add
dec
fwait
xchg
nop
into
push
jno
push
dec
pop
or
and
divb
call
sub
lret
xchg
es
mov
jge
out
mov
fdiv
inc
icebp
push
jns
out
test
in
dec
pop
test
mov
jno
outsb
inc
adc
xor
rcrb
mov
sub
lcall
xor
mov
call
xchg
sub
fiadds
aaa
gs
sub
push
adc
inc
push
dec
jns
cmp
jge
lds
mov
aad
jbe
push
inc
dec
xchg
es
dec
cli
mov
pusha
ja
dec
adcb
pop
addr16
popa
clc
xchg
or
mov
push
das
insb
pop
int
push
movsb
repz
mov
shr
jl
cmpsl
rol
arpl
aas
mov
fs
sub
push
dec
insl
imul
push
pop
jle
ds
sub
stos
xor
jp
aas
ss
adc
sbbl
mov
mov
and
xor
sub
or
aam
inc
loopne
movsl
jns
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
jmp
cmp
lock
shll
rolb
repnz
sbb
dec
add
es
push
scas
or
rcrb
push
or
jo
inc
mov
lea
inc
sbb
std
sub
addl
dec
in
pop
push
daa
push
fistpll
mov
aad
add
cmovp
and
scas
mulb
sub
in
jno
scas
in
out
out
out
into
and
sub
test
cs
scas
mov
bound
flds
pop
xchg
ljmp
sbb
pop
jle
shll
or
add
xor
out
push
lret
inc
mov
addl
mov
dec
mov
inc
sar
sbb
enter
mov
fisttpll
ret
rolb
es
push
or
add
dec
and
xchg
add
jg
filds
leave
jnp
cs
pusha
adc
push
mov
add
mov
sbb
mov
xchg
fimuls
and
nop
inc
adc
mov
mov
mov
dec
mov
lods
mov
push
dec
inc
pop
out
movsb
cld
js
icebp
fistps
xchg
add
dec
aad
imul
jmp
inc
inc
shll
arpl
xchg
sbbb
mov
and
pop
or
call
jns
dec
jmp
mov
sub
add
or
jl
add
mov
fwait
sub
fadd
pusha
xchg
in
inc
xlat
sbb
sbbb
fidivrs
lret
dec
dec
dec
xchg
cmp
xor
in
sbb
mov
add
shlb
mov
xor
jnp,pt
cs
dec
xchg
pop
cmp
iret
pusha
testb
cmp
jnp
xchg
aas
lods
cmp
pop
pushf
loop
mov
add
add
js
stos
scas
mov
adc
rclb
shll
push
push
insl
mov
xchg
mov
iret
adc
dec
mov
movsl
push
cmp
dec
rcrb
fcoml
pop
loopne
pop
adc
inc
mov
sub
cld
out
sub
dec
jle
cvtpi2ps
inc
daa
sbb
into
mov
stos
dec
imulb
inc
and
xor
rcrb
pusha
and
stos
jae
cltd
adc
pop
ficomps
cmp
jae
pop
pop
fsubs
adc
rclb
ja
adc
lock
mov
and
nop
add
cmp
jne
into
lds
mov
mov
cmp
fisubrl
aad
mov
cmpsb
jae
mov
pmaddwd
test
rcll
pop
sbb
popa
sub
push
pop
pop
sub
cld
outsb
mov
fldenv
in
jbe
adc
inc
testl
mov
mov
push
or
mov
sub
scas
add
mov
jns
std
jecxz
sbb
push
es
sub
aad
fmuls
push
fsts
mov
mov
mov
add
ss
cmp
xor
fisttpl
and
and
and
sbb
push
push
or
icebp
dec
fmul
or
or
push
mov
mov
cmp
dec
pop
push
mov
icebp
lea
loope
mov
testl
cli
sbb
arpl
jb
jp
les
mov
mov
xor
sub
xor
adc
pop
sub
dec
cmpsl
push
sub
sub
and
pop
insl
shlb
jecxz
dec
arpl
lea
xor
jne
out
lods
out
cld
sbb
fnop
dec
push
push
cmc
jne
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
jmp
sarl
mov
lds
stos
enter
js
sbb
sahf
adc
sbb
mov
sub
adc
adc
fbld
mov
stos
cmpsb
scas
addr16
mov
aam
pop
inc
adc
repnz
scas
mov
enter
mov
movsb
push
push
xchg
xchg
imul
mov
lea
dec
in
cmc
sbb
cmpsb
hlt
mov
adc
les
sarl
mov
test
aad
inc
jns
push
scas
les
repz
ds
push
or
mov
jns,pt
add
mov
shrb
jg
rclb
cmc
add
cld
jae
and
xor
and
scas
inc
test
imul
inc
loopne
icebp
mov
les
arpl
pop
mov
xchg
cmp
lahf
imul
push
mov
push
or
loope
and
jge
js
adc
push
pop
loopne
lock
int3
xchg
mov
cmp
in
jo
rorb
and
imul
ficomps
arpl
lahf
cmc
inc
xchg
xchg
jp
jge
int
xlat
scas
scas
dec
jecxz
cmpsb
xchg
sarl
aam
jp
mov
repnz
push
mov
icebp
cwtl
lcall
sysexit
cmp
inc
xchg
sbb
adc
test
scas
lea
push
in
xchg
cmp
rcll
mov
sbbl
push
mov
jp
and
gs
aaa
lahf
sbb
fbstp
mov
out
dec
or
xor
out
shlb
or
or
jge
or
ficoml
xor
out
dec
jo
jb
and
push
jg
in
xchg
testl
mov
mov
dec
push
gs
out
jnp
in
pop
orl
fisubrl
rclb
cltd
addr16
xlat
addr16
daa
xchg
jbe
shr
add
cmp
lock
and
insl
and
xor
add
adc
out
imul
mov
addr16
ljmp
mull
repnz
cld
push
pop
imul
mov
mov
inc
cli
dec
push
imul
jnp
into
mov
xchg
into
pop
shlb
rorl
pop
shrl
stos
xlat
sub
sti
mov
mov
test
les
lcall
xchg
sarb
lcall
mov
sub
fcoms
movsl
jno
jecxz
test
jmp
dec
and
dec
cmp
or
aam
fs
sahf
ds
push
jmp
mov
sbb
lea
int3
add
mov
jae
dec
sub
mov
dec
gs
scas
not
cwtl
add
mov
fucomip
shrl
sar
adc
and
mov
test
jb
pop
mov
or
jo
fsubrs
mov
cmp
sbb
popa
add
inc
gs
pop
push
and
dec
sub
inc
pop
add
movlps
cmpsl
add
leave
int
loop
iret
or
push
scas
cmp
in
push
jnp
clc
jo
popa
jbe
ret
imul
or
mov
ret
data16
and
jnp
mov
xorb
mov
sbb
stc
and
ja
mov
pop
movsl
in
scas
inc
pop
je
fisubrl
cltd
es
jnp
pusha
nop
sub
push
jp
pop
cmp
dec
inc
add
inc
mov
or
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
jmp
push
sbb
sbb
aas
xor
lcall
sbb
rorl
adc
outsl
xchg
out
jmp
push
or
cs
test
jp
and
push
dec
jnp
shr
jle
xchg
and
js
js
and
cmp
add
fwait
in
pop
pop
push
sbb
stc
fiadds
push
je
mov
mov
xchg
cmp
and
jl
addr16
push
nop
mov
sub
lret
jl
sbb
pusha
or
fsubrl
or
std
pop
ficoml
decb
jb
fsts
ret
mov
js
and
ljmp
fwait
inc
xchg
int
cmc
pop
cmc
in
lods
jb
mov
cwtl
sbb
xchg
and
dec
flds
lret
pop
mov
loop
adc
scas
dec
leave
mov
insl
test
mov
fidivs
adc
clc
in
cmpl
pop
stos
dec
pop
pop
pop
mov
sub
fwait
and
test
push
push
sub
sbb
dec
mov
lar
jae
js
fstpt
mov
jns
psubusb
out
jne
scas
cmpsb
cs
dec
adc
xor
fldenv
adc
cmp
movb
jns
lock
arpl
push
das
imul
loope
cmp
xchg
xchg
xor
cwtl
sub
dec
cmpsb
int3
inc
movl
into
test
scas
add
cltd
mov
dec
les
mov
les
mov
and
sbb
ficoms
dec
mov
xlat
int
pop
adc
sub
mov
sahf
and
les
mov
addr16
stos
rcl
fistl
mov
adc
insb
xorl
stos
cmpsl
fdivp
push
mov
loope
mov
or
mov
or
jae
pop
not
movsb
cmpsl
aad
mov
in
xor
jb
sbb
les
orb
lret
xor
mov
pop
js
aad
in
es
imul
mov
lea
push
and
cli
sbb
or
lods
loop
sahf
gs
mov
cmc
pop
cmpb
rolb
mov
and
or
mov
jp
fcoms
jle
aaa
and
aas
mov
cmp
cmp
sub
int
jbe
lock
pop
jecxz
pop
loopne
fldenv
pop
je
and
sahf
movsl
inc
adc
push
mov
adcl
aad
dec
fs
test
mov
mov
lret
int
out
inc
test
or
mov
je
in
loop
or
std
dec
mov
call
cld
in
out
lahf
pusha
mov
or
sub
enter
mov
jmp
mov
in
daa
adc
inc
and
inc
sahf
cld
dec
adc
ficoml
sbb
cmpsl
lret
repz
adc
cmp
dec
mov
outsl
inc
push
sbb
cltd
in
mov
and
inc
out
or
imul
inc
jno
jo
xchg
mov
cmpsb
aad
pop
cld
out
fs
xor
xchg
cmpsl
outsl
jo
mov
push
cmp
enter
pop
clc
push
fiaddl
addr16
add
adc
les
ficomps
mov
enter
out
scas
xchg
daa
and
loope
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
jmp
arpl
test
ss
scas
addr16
test
sbb
js
mov
pop
jle
cwtl
es
mov
mov
sub
sub
cmp
adc
mov
icebp
test
out
test
pop
clc
clc
mov
add
mov
mov
mov
enter
loope
xchg
pop
push
pop
int
out
xchg
jmp
data16
rolb
fcoml
adc
fadds
sbb
sbb
push
notb
loope
cmp
out
cs
stc
pusha
insb
mov
fists
xor
sub
or
hlt
xchg
icebp
fistps
cmp
addb
fstl
cmp
cld
push
pop
mov
es
inc
clc
mov
clc
cmp
imul
fidivrs
push
and
outsb
xchg
cli
ja
int3
iret
and
push
jo,pn
sub
testb
mov
cmpsl
divl
pop
pusha
addr16
xor
jno
jle
scas
fsts
movups
daa
push
xor
jecxz
notl
call
jg
mov
or
cmp
sub
hlt
mov
dec
mov
xor
movb
das
adc
jecxz
dec
sbbl
jge
jns
imulb
cmpsl
jne
das
jmp
push
shr
jno
fsts
jp
dec
scas
mov
jp
inc
xchg
not
jae
or
outsl
jns
xchg
pop
call
cmp
bound
adc
sub
sub
jg
cltd
shll
outsl
dec
mov
add
jp
xchg
sahf
out
push
mov
into
dec
sub
add
jnp
data16
lcall
add
nop
arpl
mov
pop
fs
mov
in
cwtl
movw
dec
sar
movsb
add
shl
inc
mov
divl
inc
stos
in
or
jbe
fnstsw
aas
cmp
fs
push
in
cmc
repz
lret
jl
sub
inc
pop
xchg
inc
mov
sbbb
xchg
dec
mov
inc
or
xchg
push
jp
outsl
scas
mov
push
xchg
rolb
es
and
pop
icebp
xchg
adc
fistl
cwtl
popf
mov
fcmovbe
push
push
mov
xor
and
jle
or
imul
inc
repnz
fs
fsub
or
enter
loopne
icebp
insl
cmp
sub
cmc
dec
sub
pop
push
fistpl
leave
or
dec
imul
xor
adc
or
roll
cltd
jo
adc
or
inc
jp
insl
adc
or
xor
and
xor
mov
call
sar
cli
pop
iret
test
pop
cld
shrl
pop
cli
scas
or
sbb
movsl
cmp
cs
icebp
push
aam
fldenv
or
mov
lea
mov
fmuls
ljmp
sub
fdivrl
jecxz
shrl
nop
dec
aaa
sbb
lea
and
xchg
test
push
notb
imull
rolb
pusha
mov
scas
fcmovu
push
in
popa
adc
pop
outsl
fbld
movsl
dec
and
bound
testl
sbb
and
lret
clc
lcall
jl
jmp
sahf
push
in
sbb
inc
out
faddl
adc
xchg
dec
in
std
cmp
loope
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
jmp
fcmovnb
int3
xchg
lods
jnp
sbb
or
stos
or
sbb
and
dec
daa
xchg
and
lea
sub
lcall
adc
ret
mov
pop
andb
mov
jle
push
loop
sub
cmp
clc
push
clc
clc
mov
mov
and
insb
imul
nop
jnp
dec
xor
and
fstpl
out
mov
and
xchg
adc
shrb
iret
push
adc
test
sbb
cmp
sbb
lret
push
inc
fimuls
xchg
adc
addb
push
adc
push
mov
dec
cwtl
inc
mov
xchg
mov
shll
xchg
cltd
shlb
pop
mov
mov
jmp
and
xchg
inc
mov
mov
je
pop
pop
mov
les
out
cmp
sahf
xchg
xchg
sub
jno
test
loope
leave
mov
mov
pop
dec
and
test
insl
xchg
xchg
iret
cmp
clc
cmp
mov
and
loop
jnp
mov
mov
pop
and
addr16
cmp
mov
testb
fs
dec
popf
sub
xchg
xor
popa
fs
mov
push
mov
jne
pusha
cwtl
mov
out
inc
adc
push
loopne
nop
mov
xchg
cs
fildll
adc
nop
lods
lret
dec
cmpl
pusha
cmp
in
stos
jo
sbb
enter
cmpsb
test
imul
jge
movsb
in
push
cld
sub
inc
xor
daa
shrl
cmp
fs
shll
fisttpl
and
sbb
pushf
mov
jl
pop
xchg
stc
ds
cmp
pusha
jne
push
mov
xlat
stc
xchg
pusha
lcall
pop
pusha
sahf
movsb
aaa
jbe
int3
jbe
outsb
arpl
mov
imul
sahf
push
aam
xlat
push
sti
stc
jmp
sub
pop
dec
fbld
bound
mov
or
imul
ret
je
push
insl
pop
enter
cli
movsb
hlt
loop
xor
test
adc
iret
dec
push
fisttpll
ret
stos
cmp
mov
sti
jmp
adc
lea
mov
frstor
jmp
push
dec
loopne
int
cmp
push
mov
call
mov
adc
call
xor
push
cli
fstps
fbld
mov
dec
mov
jmp
lcall
push
add
das
xchg
lahf
fistl
mov
cmp
aaa
movsb
jbe
fisttps
mov
add
push
ret
lock
or
pop
loop
fbld
pop
jge
mov
es
xchg
adc
sahf
lods
dec
mov
dec
ret
call
ret
shll
jge
pop
cmp
in
int3
dec
jne
pop
in
pop
fisubrs
jmp
mov
push
jne
testl
ljmp
outsl
or
aas
push
mov
insl
ss
je
pop
out
xor
mov
testl
mov
adc
lret
sub
inc
aam
push
dec
push
mov
cmpsl
test
into
gs
push
leave
rcrb
fiadds
mov
cwtl
fidivl
jle
mov
ret
fstenv
imul
dec
inc
cmp
ss
divb
cld
cmp
jno
pushf
subb
repz
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
jmp
fiaddl
mov
sub
jnp
mov
movsl
adc
sbb
std
pop
notb
and
flds
loop
push
pop
mov
imul
sub
sub
hlt
cwtl
dec
repnz
jo
jbe
popa
push
dec
test
and
roll
sbb
push
jmp
loope
orb
xor
mov
jno
jle
sub
test
movsl
aad
jbe
mov
scas
je
cmpb
sahf
pop
xor
cmp
rcr
xchg
add
mov
add
stos
mov
dec
iret
push
jmp
push
jmp
inc
es
jecxz,pn
outsb
insb
xlat
ror
outsl
adc
jge
xchg
inc
push
pop
ljmp
mov
mov
mov
mov
mov
and
jnp
and
cmp
loopne
ds
pop
hlt
dec
insb
add
stos
push
push
add
leave
fs
pop
add
jg
mov
mov
push
mov
and
call
push
sub
mov
stos
xor
in
scas
das
jns
mov
xchg
dec
call
outsb
int3
jno
xchg
jp
pop
sub
scas
pusha
xor
inc
lds
fwait
stos
enter
rorb
stc
in
hlt
les
push
or
mov
insl
inc
push
shlb
into
mov
enter
pop
outsl
xor
xchg
dec
mov
pop
rcrl
push
negb
arpl
push
xchg
push
out
xor
inc
int
pushf
mov
mov
inc
or
cmc
bound
in
repnz
loop
orl
in
daa
arpl
stos
int3
mov
jbe
adc
xor
sub
mov
jne
adc
mov
loopne
mov
sti
adc
popf
sbb
push
les
stc
and
add
cmp
mov
cmpsl
adc
int
call
fsts
push
aam
shrl
lea
mov
xor
adc
pusha
test
cmp
xchg
pop
adc
mov
pop
mov
int
push
aaa
sbbb
add
sub
pop
test
test
sbb
mov
xor
pop
fstpl
mov
shlb
loope
jecxz
sbb
mov
jne
sub
je
ja
jmp
jle
cs
ss
push
int
sti
ja
push
push
or
and
loop
jnp
cld
push
and
xor
mov
and
and
mov
xlat
push
cmpsl
cmp
das
xchg
xchg
lcall
mov
sub
jbe
mov
addb
cmp
in
adcb
push
pop
and
xchg
lock
dec
jp
push
mov
xchg
sub
data16
mov
xor
and
adc
xchg
dec
dec
in
adc
cmpsb
or
push
push
out
and
cwtl
add
xchg
mov
ret
push
pop
inc
jae
inc
loop
mov
cmp
cmpsb
jle,pt
inc
insl
das
cmp
cld
jl
addb
cmc
mov
testb
mov
pop
or
xor
xchg
cmp
repnz
cmp
mov
sbb
lds
lret
mov
jmp
pop
test
cwtl
push
fwait
xor
movsb
mov
push
and
jmp
add
sub
mov
dec
mov
lods
enter
add
enter
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
jmp
mov
jg
cmp
sbb
or
mov
or
pop
jge
sbb
pushf
pop
das
and
out
inc
mov
xor
nop
pop
fbstp
outsl
mov
sti
scas
fldcw
push
scas
sbb
mov
in
mov
in
inc
stc
arpl
adc
insl
jl
mov
sahf
mov
mov
jl
cmpsb
test
outsb
sahf
push
push
lea
jnp
loop
outsb
sub
fistpl
cmpsb
jo
pop
das
or
icebp
lahf
push
fcomp
enter
push
sbb
xchg
sub
aas
xchg
lret
mov
jae
mov
iret
out
arpl
inc
jae
in
mov
jecxz
sahf
fldcw
inc
xchg
mov
sbb
outsl
inc
pop
add
std
test
adc
popf
jbe
push
jecxz
lret
xchg
mov
push
add
lods
dec
xchg
adc
lahf
xchg
popa
imul
lahf
xchg
adc
or
xor
pusha
jmp
jp
lcall
and
shrl
inc
jl
cmp
jge
rcrb
stos
push
cltd
and
mov
jmp
call
cmpsl
pop
psubsw
push
adc
dec
mov
enter
jmp
daa
xchg
push
es
mov
ficompl
in
adc
mov
enter
scas
xchg
addr16
mov
mov
or
cmp
mov
xchg
pop
and
push
jb
cmp
inc
push
in
inc
xor
mov
mov
mov
enter
jnp
movd
cs
or
dec
dec
jg
inc
ljmp
mov
mov
adc
insl
jle
cmp
jae
test
dec
lcall
sbb
test
add
mul
dec
test
fmulp
jecxz
pop
cmpsb
in
test
xchg
addr16
leave
es
or
ret
test
mov
sbb
lahf
fld
add
push
or
inc
aad
leave
fdivs
pop
pop
inc
xchg
push
mov
loopne
xor
jmp
call
test
decl
inc
rolb
js
outsl
repz
fwait
ds
sub
sbb
jnp
aas
roll
jg
test
je
mulb
lahf
jnp
out
mov
je
into
cwtl
retw
mov
sbb
or
test
push
ja
dec
fnsave
lret
aad
adc
pop
mov
jle
pop
pop
add
mov
adc
jae
push
ss
lods
imul
and
fbstp
fsubr
cmp
mov
pop
jg
leave
xor
and
stos
adc
cli
dec
xorl
fstpl
or
int3
xor
xchg
pushf
mov
imul
inc
pop
test
xchg
ja
insl
jge
int
sarl
inc
call
pushf
mov
lods
clc
mov
sti
and
fs
xor
test
jno
je
pop
or
xor
sbb
mov
addl
pop
jno
add
sub
mov
or
add
jb
sti
mov
fcmovne
sarl
pusha
mov
mov
xchg
nop
cwtl
push
hlt
jb
mov
loope
shlb
test
jmp
icebp
cmp
cmp
ss
stc
fisttps
adc
mov
hlt
cmpsl
outsl
cs
popa
sbb
out
fiaddl
jmp
sub
popf
inc
xchg
jle
push
jae
scas
leave
out
mov
mov
mov
or
shrb
fadds
inc
mul
and
mov
mov
jmp
repnz
jmp
imul
pushf
pop
jle
jae
mov
jne
sbb
jbe
xor
sar
pop
out
fists
cwtl
data16
xorb
pop
xchg
out
add
dec
sbb
dec
aam
mov
nop
in
aad
mov
pop
xor
mov
sub
out
fsub
cmp
out
and
xlat
xor
mov
in
jmp
sbb
jns
cs
dec
stos
push
inc
xor
les
imul
lock
adc
bound
push
jg
mov
out
into
inc
xchg
or
jmp
mov
sub
inc
xchg
lods
sahf
mov
sbb
and
jl
add
loop
cmpsl
xor
popl
cli
cs
leave
inc
mov
xor
popa
sarl
cmp
scas
and
sub
call
or
ds
mov
inc
je
iret
cmp
xchg
sub
pop
xchg
into
test
lret
jmp
pop
sbb
adc
xor
pop
cmp
enter
xor
and
fucomip
mov
add
jge
lods
jnp
hlt
jb
xchg
lods
xchg
adcb
nop
pop
lods
test
pop
sti
clc
imul
aad
sbb
cld
add
icebp
pop
sti
xchg
mov
popa
das
xor
jmp
add
int
std
aam
pop
cwtl
fnstenv
pop
push
hlt
insl
xchg
jmp
das
pop
and
xor
dec
shl
pop
sub
jo
in
push
sub
stc
cmp
xchg
sbb
out
pop
imul
or
aas
xchg
lcall
cmpsl
repz
mov
stos
mov
addr16
add
fstl
dec
or
adc
jg
jge
std
pusha
sbb
adc
xor
inc
jnp
stos
mov
insl
lods
adc
mov
push
add
xchg
insb
jecxz
mov
cmp
cmp
ret
leave
adc
rorl
push
in
mov
push
idivb
test
fwait
hlt
inc
or
lea
pop
inc
rorb
xchg
shufps
dec
xchg
pop
ret
aam
adc
cmpsb
mov
lods
lahf
xor
clc
andl
inc
mov
enter
mov
inc
dec
mov
push
jecxz
sub
push
mov
xor
xchg
jl
dec
sbb
mov
adc
inc
jg
xor
dec
inc
mov
mov
in
sahf
inc
aaa
lea
aaa
icebp
jnp,pn
cmp
in
imul
push
test
inc
fstpt
pop
jmp
pop
icebp
ret
xor
mov
xchg
scas
fldenv
int3
leave
or
xchg
fimuls
xchg
out
or
imul
iret
inc
in
jle
and
pop
xchg
dec
add
jle,pt
ret
incb
xor
inc
mov
arpl
mov
mov
imul
popf
adc
mov
test
mov
xchg
packuswb
int
mov
mov
std
ret
fidivrl
dec
inc
add
insb
ja
les
imul
push
mov
std
push
xor
outsb
popf
jo
jle
cmpsb
nop
mov
imul
sub
or
setb
pop
xchg
loope
gs
inc
dec
inc
pop
xor
xor
mov
mov
mov
shrd
shl
xor
or
mov
mov
mov
shll
xorl
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
xor
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
jmp
push
dec
dec
testb
cs
sbb
push
outsl
sbb
sahf
adc
sbb
cld
nop
pop
mov
jno
inc
jb
add
inc
mov
and
xchg
lcall
fs
or
jbe
jno
outsb
inc
jg
xchg
and
xchg
adc
out
dec
pop
sub
xor
or
rol
push
push
addl
nop
mov
pop
dec
push
xor
inc
imul
xorb
lcall
js
out
fwait
ficompl
jg
imul
xchg
scas
mov
call
lods
add
mov
test
cmc
cmpb
test
inc
mov
notb
stc
inc
gs
jle
and
mov
bound
xchg
outsb
push
add
daa
andb
xor
mov
xchg
cmp
std
push
mov
popf
loop
xor
adc
imul
scas
bound
movsl
jb
rcrl
scas
lds
fistpll
std
xchg
jno
adc
push
sub
xchg
mov
dec
or
jne
push
sbb
add
js
es
les
push
aas
xchg
adc
mov
lds
dec
and
sub
dec
mov
pop
in
and
in
out
and
inc
lcall
ret
jle
dec
sbb
pop
inc
ljmp
jb
pop
mov
add
aaa
fcomip
jnp
stos
xor
sub
xchg
popa
adc
mov
add
gs
push
mov
sbb
cmpb
adc
jle
mov
scas
push
push
out
cmp
dec
mov
xor
and
push
cmp
jne
fisttpl
leave
cs
jb
xor
pop
movsb
loope
pop
or
std
pop
pushf
pusha
dec
es
sub
mov
outsl
in
insb
push
and
pop
into
add
and
and
test
sti
cld
inc
inc
pop
das
ret
dec
pinsrw
sbb
jecxz
lock
add
pop
jge
pop
sbb
insl
fisubl
jmp
push
jo
out
pop
jp
cmpsb
clc
andb
adc
decl
pop
and
mov
pop
sbb
mov
dec
lds
xor
and
aas
mov
mov
subl
push
mov
sub
mov
xchg
fsubl
mov
in
aam
int3
mov
cmp
xchg
push
lret
repnz
jae
xchg
je
dec
xor
negb
call
xlat
inc
stos
xor
repz
mov
push
xchg
imul
sahf
sub
rcll
and
stos
lret
inc
ss
push
add
mov
sti
jbe
add
call
jns
mov
add
dec
jg
mov
inc
cmpl
fsubrs
imul
lods
mov
mov
mov
pusha
and
inc
jmp
in
sub
or
push
js
andl
push
das
mov
popf
pop
scas
push
sub
mov
jbe
mov
mov
cmpsl
pop
or
cs
adc
mov
dec
pop
int3
out
xchg
das
jnp
gs
movsl
dec
jmp
add
or
icebp
jb
lcall
sub
int3
enter
sub
cmpb
shlb
scas
test
push
mov
movsl
xchg
jl
sbb
and
adc
mov
call
dec
mov
mov
mov
mov
shll
xorl
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jmp
xchg
hlt
xchg
addr16
in
mov
fistpll
sbb
sahf
adc
sbb
xor
shlb
adc
sub
sub
call
in
sbb
dec
mov
cmc
jp
xlat
dec
stos
es
cli
and
and
lcall
xchg
xchg
sub
inc
or
icebp
xor
sar
ja
movsl
out
cmpsb
loope
dec
sbb
ret
addr16
mov
movsl
jge
test
xchg
inc
cltd
dec
mov
lcall
dec
dec
xchg
ds
jnp
movsb
stos
aaa
cmp
push
pop
icebp
push
arpl
movsl
mov
lahf
stos
fsubr
shr
sub
xchg
jne
outsb
lret
fldenv
push
insb
cli
cli
jns
mov
lods
daa
scas
outsb
xchg
out
and
lods
sub
cmovns
sbb
data16
sub
push
test
pop
dec
sbb
pop
inc
in
in
fsub
xchg
add
dec
mov
jno
rcrl
jbe
or
xorb
xchg
sub
fnstenv
into
add
jne
outsl
lods
iret
xchg
add
and
push
leave
divl
xchg
push
inc
add
dec
mov
sub
jae
lock
mov
xchg
cmp
sub
sbb
adc
adc
mov
add
stc
stos
mov
je
ds
shr
inc
cwtl
fisubs
mov
adc
push
sbb
daa
push
jl
mov
inc
inc
test
xchg
ficoms
cmp
mov
sbb
add
fnstenv
loopne
movsl
icebp
dec
and
push
sbb
cmc
out
push
das
cmp
mov
adc
iret
pop
imul
dec
push
xchg
mov
jbe
stos
or
add
inc
sbb
mov
cmp
sahf
jle
mov
or
pop
or
pop
adc
fisttps
jbe
mov
push
fidivs
stos
movsb
mov
xlat
pop
and
pushf
pop
and
and
pop
dec
mov
bound
and
dec
mov
sahf
stc
sbb
pushf
stos
and
xchg
mov
push
sbb
cmp
popa
loope
lods
lods
std
mov
filds
xor
movsb
movsb
lods
pop
call
pop
xchg
insl
lods
xlat
add
push
sbb
sbb
and
cmp
pusha
jge
repnz
push
gs
add
xchg
mov
inc
or
shll
stos
sbb
test
das
xchg
sbb
xor
xchg
pop
loope
mov
out
xchg
scas
out
xchg
add
icebp
aas
adc
lcall
scas
adc
shll
loope
xchg
xchg
je
xchg
fwait
xchg
cltd
push
lods
sbb
and
call
imul
jns
arpl
cli
adc
add
jb
or
jno
inc
xor
in
mov
lret
sub
sub
dec
pop
fidivrs
or
xor
pop
push
add
pop
inc
or
stos
push
mov
ffree
divb
pop
stos
int3
cld
and
pop
lcall
cmc
and
ja
ds
xor
movsl
aam
outsb
stc
outsb
inc
and
ss
out
add
repz
mov
mov
pop
cmc
jno
das
push
into
cmpsb
andl
adc
sub
fisttpl
in
test
inc
jne
insb
xchg
xor
pop
jne
enter
jle
push
lcall
wrmsr
mov
mov
pop
fidivs
push
fcomps
and
ss
stc
pop
imul
icebp
iret
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
jmp
or
jns
arpl
pop
faddl
mov
das
pop
sbb
sahf
adc
sbb
push
ror
inc
or
pusha
sbb
jmp
fisubrs
mov
push
cwtl
popf
push
hlt
xlat
stc
fisttpl
iret
pop
and
fbld
pop
adc
add
xchg
push
aam
addr16
xchg
and
imull
adc
cltd
adc
push
mov
pop
imul
sub
jbe
inc
es
mov
jb
xor
adc
mov
in
inc
ja
xor
lds
es
iret
pop
xor
lcall
push
jbe
scas
pop
mov
and
lret
fbld
jns
imul
dec
into
aaa
push
ds
sub
jbe
nop
mov
dec
sbb
mov
xor
out
out
add
mov
dec
adcb
es
insl
sbb
das
adcl
mov
popa
pop
leave
sti
pop
stc
out
mov
and
ret
ljmp
insb
mov
xor
mov
mov
xchg
adc
mov
xor
add
js
fwait
inc
adc
cmp
dec
adc
jno
in
sahf
out
jae
das
cmp
test
pop
jp
jg
cmp
push
cmp
inc
and
gs
mov
mov
xlat
in
sar
cli
loopne
loopne
and
xor
xor
jle
decb
mov
mov
jb
jbe
push
jp
sbb
mov
test
lcall
push
nop
dec
dec
or
lods
leave
ret
test
cltd
fimuls
fdivrs
clc
mov
out
dec
xchg
mov
clc
cmpsl
sub
mov
loopne
add
popf
dec
jecxz
pushf
xchg
int3
insl
xor
movsb
sbb
dec
push
shlb
sahf
daa
dec
lret
add
xchg
aad
sar
fucomip
aas
in
loop
icebp
gs
xchg
popa
jecxz
into
sbb
shrb
movsl
int
mov
xchg
inc
jmp
push
pop
and
mov
bsf
push
int3
outsb
jae
and
jne
inc
mov
int3
xor
rcrb
rcl
outsb
sbb
jp
inc
leave
sub
add
mov
cld
lcall
dec
lret
fucomp
mov
xchg
das
addb
jle
push
mov
shll
pusha
imul
xchg
mov
hlt
iret
dec
jmp
in
les
sbb
xchg
mov
jg
push
scas
ss
js
gs
decl
or
fs
fs
imul
xor
pop
mov
jg
lret
jp
pusha
int3
cmpsb
sahf
xchg
push
in
inc
insl
cmpsl
push
out
adc
push
mov
cmc
cmp
jle
test
inc
mov
cmp
movb
shll
mov
pop
xor
movsb
test
cmp
inc
insl
xor
xor
rorb
mov
rclb
cmove
rcrl
movsl
pop
xor
or
in
imul
sbb
ljmp
divb
insb
das
cld
mov
ret
mov
scas
mov
cmp
inc
ja
int
or
iret
lds
imulb
push
ja
pop
push
push
sbb
pop
cmp
dec
mov
shlb
mov
call
push
add
flds
add
pop
jno
mov
xchg
inc
mov
mov
sahf
adc
sbb
arpl
jp
dec
dec
dec
jb,pt
jge
insb
adc
pusha
call
jp
dec
daa
bound
cmpxchg
jmp
sbb
pop
ss
xchg
sub
push
sbb
test
dec
out
int3
dec
mov
cmpsb
pusha
lods
sub
or
lcall
jb
push
mov
sub
out
shrb
dec
mov
insb
xlat
dec
cwtl
sbb
mov
test
ud0
loop
ja
inc
fldl
jns
dec
jl
subl
ret
movsb
sub
insb
add
fcompl
out
sub
xchg
mov
and
mov
sarb
mov
mov
je
jns
call
and
daa
inc
add
mov
and
pushl
jo
pusha
mov
add
lret
fnstcw
jb
xchg
pop
cltd
push
mov
int3
stos
in
jnp
push
jbe
add
xchg
je
push
xor
scas
adc
roll
divl
arpl
push
pop
adc
or
mov
mov
adc
mov
enter
cltd
negb
mov
sarb
mov
xchg
mov
mov
lock
orl
xlat
pop
fisubs
idivl
mov
fistpll
in
movsl
or
ds
call
cld
mov
or
dec
hlt
xor
out
pop
xor
pop
push
pop
mov
xlat
sti
out
testl
setno
clc
sbb
pop
gs
daa
aam
lods
cmp
je
into
or
and
inc
sar
das
xchg
dec
xchg
jne
mov
and
and
cmp
cmpsl
mov
or
addb
push
sbb
fisubrs
and
or
sub
sbb
int
js
mov
inc
push
sub
push
repz
repz
dec
and
fadd
push
xchg
repnz
jno
jmp
popf
in
int
in
and
pop
jo
fs
xchg
stos
lock
iret
jb
sahf
jb
repz
sbb
mov
mov
xchg
fisubrl
sar
dec
out
out
pushf
push
in
or
iret
rolb
bnd
push
mov
and
xor
cmp
test
clc
sub
cmp
xor
sbb
add
ljmp
jle
mov
mov
shlb
pusha
xchg
push
push
mov
jnp
fisttpll
mov
add
es
sub
adc
enter
sub
cltd
iret
nop
xchg
arpl
lods
mov
fisttpl
jl
sub
adc
sahf
jp
cs
repnz
and
push
dec
mov
hlt
lock
dec
inc
jne
dec
sbb
mov
rep
aas
mov
test
xor
out
mov
mov
pop
or
xchg
mov
pop
mov
aam
idivl
pop
ljmp
cs
jl
sbb
into
xchg
inc
mov
scas
mov
sub
add
cmp
xor
stos
add
out
jno
outsb
fs
and
in
jae
push
imul
sbb
ljmp
push
lret
dec
mov
push
sub
mov
mov
shl
mov
dec
or
orl
cmp
outsb
movsl
out
ret
mov
test
jecxz
outsl
pop
mov
add
int
lods
rolb
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
jmp
and
pop
jb
and
shll
stos
cmp
sbb
jl
sub
pop
sub
int
and
psllw
and
lea
and
pop
je
out
fcomps
call
dec
cmp
shr
cmp
rclb
lea
adc
lcall
inc
faddl
fisttps
xchg
cmpsl
or
and
sub
insb
clc
aas
repnz
jno
jns
mov
enter
orl
pop
rcrl
or
scas
jo
add
clc
in
fwait
mov
insl
nop
mov
shr
lods
iret
xorl
xor
lret
mov
jae
jb
xchg
rorl
mov
addr16
das
sbb
or
mov
mov
xcrypt-cfb
dec
mov
add
push
or
pop
loop
xor
cmp
shrb
pusha
outsl
pop
movsl
mov
mov
mov
call
or
mov
ja
or
cld
add
cmp
dec
or
pop
cmpsb
popf
add
xor
and
jg
loope
pop
jp
xchg
dec
mov
jg
xor
adc
inc
mov
jnp
add
rcl
pop
pop
mov
icebp
cltd
lret
icebp
xor
adc
jo
or
dec
fisttpll
je
in
out
out
ss
jl
xchg
jno
and
jp
in
adc
inc
pop
add
outsb
pop
fidivl
je
in
cwtl
mov
push
insl
imul
adc
mov
or
pop
dec
test
pop
pop
gs
jecxz
adc
outsb
cmpb
cwtl
fldcw
addl
out
or
shrb
mov
pusha
test
lods
inc
mov
cmpsb
les
mov
or
popf
and
dec
je
adc
push
xchg
iret
popa
pushf
sub
dec
daa
bound
or
add
lretw
sbb
sub
mov
pusha
lock
notb
sbb
mov
sarl
mov
aad
rolb
xchg
test
cli
fists
jbe
clc
push
movsl
xlat
jno
mov
sub
out
push
push
pop
or
dec
aas
mov
add
inc
fldcw
mov
mov
dec
inc
jne
ret
cmpsb
insl
mov
scas
in
mov
fsubr
mov
xorb
push
lods
sahf
or
push
fstp
push
loop
mull
lods
jae
xor
mov
fildl
adc
jno
jb
sub
adc
popa
add
fbstp
imul
fisubrs
dec
xchg
das
jmp
mov
mov
rorl
inc
inc
pop
add
jecxz
std
cli
mov
dec
test
es
rcl
cmpsl
ja
pop
xchg
add
sbb
fistps
cmp
dec
xchg
sub
or
pop
pop
lahf
shll
insb
dec
jg
enter
std
and
mov
push
add
push
sahf
pop
mov
pop
lret
gs
fisttps
xchg
push
inc
icebp
and
cmpsl
jp
inc
test
xchg
test
xorb
push
cmpl
inc
divb
xor
neg
scas
jl
mov
test
or
mov
push
out
jno
out
mov
push
mov
int
pop
in
rorb
movsb
ret
rorl
add
add
and
sbb
and
sbb
sahf
adc
sbb
std
daa
xchg
sub
popf
cmp
stc
leave
mov
jb
in
sar
mov
fwait
push
inc
push
mov
fisubrl
inc
out
sbb
ja
lods
xor
adc
inc
stos
mov
out
xor
ret
add
mov
xchg
test
sti
nop
cmp
out
shlb
in
cmpsb
xor
fbld
test
test
fcmove
es
fldcw
pop
mov
inc
push
ret
lock
jmp
sub
shl
inc
inc
dec
xchg
repnz
sbb
and
gs
jg
pop
pop
adc
mov
adc
icebp
pop
mov
cmc
hlt
push
mov
rcll
xchg
divl
mov
push
push
xchg
movsb
and
mov
ficomps
fnstsw
sbb
cwtl
incl
repz
jo
in
sub
out
mov
inc
stc
adc
pop
rcrl
std
pusha
scas
and
outsl
add
lahf
ja
fxch
and
xor
pushf
push
popf
aam
pusha
xchg
and
or
dec
scas
fistps
out
mov
scas
inc
mov
xchg
lods
cmpsb
shll
mov
hlt
jmp
add
icebp
dec
js
mov
fs
xchg
add
lock
inc
mov
pop
fidivs
fsubs
dec
rclb
ja
lds
jg
add
pusha
dec
mov
sub
ror
cltd
mov
mov
mov
shl
nop
pop
loope
mov
or
outsl
lock
or
push
mov
xchg
pop
jl
push
push
lock
mov
mov
dec
add
ds
xchg
jno
pushw
cwtl
in
sub
and
mov
in
into
es
xchg
out
notb
cmp
bnd
jge
adc
sub
jae
and
lock
sbb
pop
ficoms
mov
stos
scas
add
call
cmpsb
insb
mov
push
cmc
xchg
push
rclb
inc
jle
ljmp
xchg
repz
lods
add
dec
add
mulb
sbb
jbe
pop
and
in
pop
pop
movsb
out
xorb
jp
push
xor
mov
sbb
fistpll
add
leave
movsb
repz
fldenv
loop
test
shr
cmp
cmp
mov
ret
stos
pop
push
push
rcr
push
lahf
fisubrs
mov
fisubrl
jne
add
push
xchg
xchg
push
clc
inc
add
pusha
push
loope
fsubrl
cmp
orb
fidivl
inc
shlb
or
or
das
int3
pop
cmc
pop
shll
cltd
mov
xlat
mov
add
popf
sub
scas
pop
or
fists
ret
lock
push
mov
lds
test
add
pop
push
push
pop
jl
cld
and
shl
cmpsl
or
scas
pop
mov
gs
cmp
int
push
out
aad
pop
ja
push
or
subl
or
fs
into
js
and
pop
inc
pop
cmp
stc
add
movsl
pop
xchg
or
divl
dec
leave
xchg
mov
sbb
cwtl
shll
repz
insb
mov
inc
fidivl
push
push
or
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
or
cmp
mov
mov
sbb
sahf
adc
sbb
cmp
popf
jno
in
sub
sub
in
loop
test
fistpll
cld
add
sbb
into
inc
or
shll
pop
or
push
add
xor
and
and
mov
push
push
xchg
dec
mov
cmpsb
push
idivl
fisttpll
das
into
inc
cmp
mov
cmp
test
fisubl
push
jbe
xchg
pop
iret
clc
mov
scas
cmp
pusha
mov
inc
shlb
or
mov
push
and
jo
std
aaa
loop
imul
lret
sub
fisubrl
sbb
sbbw
mov
and
sbb
sbb
mov
jp
pop
outsl
jmp
add
pop
lcall
pop
or
sbb
jl
pop
cmp
outsl
sub
enter
sub
push
cmpsb
and
cmp
pushf
add
pop
jl
jp
js
sahf
imul
stc
inc
pop
push
sub
xor
xchg
repz
mov
cld
mov
xchg
push
sbb
loopne
xchg
and
int
enter
shlb
shll
cmp
movsb
out
repz
pop
xchg
mov
cmpsb
mov
sahf
inc
dec
mov
data16
xchg
and
ds
pop
jbe
cmp
pop
push
and
sub
mov
xchg
subb
cmp
push
pop
inc
adc
push
idivl
jl
mov
sbb
lods
xor
insl
mov
fidivrs
fsubrl
sti
mov
cli
cmpsl
fwait
sarb
push
std
iret
aad
cmp
xor
cs
dec
decb
mov
xchg
int3
fsts
xchg
or
dec
or
mov
nop
jl
rorb
repnz
xor
inc
jl
pop
gs
fcmovbe
dec
and
rcr
lahf
out
stos
mov
pop
xor
and
mov
push
scas
fnstsw
in
push
leave
pop
dec
cmp
push
cmpsb
mov
jmp
pop
jg
push
dec
out
je
push
ret
pop
cmp
in
std
inc
xchg
xlat
and
pop
loope
div
out
cltd
not
repz
iret
inc
add
cs
jno
das
mov
inc
mov
jge
or
fdivrl
cmp
lahf
nop
inc
add
and
imul
xchg
xchg
int
ss
shrl
nop
insb
adc
aaa
outsb
icebp
dec
loope
adc
lods
mov
imul
lock
inc
xor
pop
aad
add
jae
mov
adc
pusha
fstl
lea
pop
mov
or
fcompl
adc
sbbl
in
and
and
add
cltd
lcall
mov
jae
movsl
push
in
or
pop
icebp
loopne
call
cmp
xchg
jecxz
mov
jecxz
add
jecxz
mov
aaa
out
cmpsb
ret
xlat
sub
adc
mov
std
pop
stos
jmp
aam
inc
arpl
decb
je
sbbl
push
cmpb
adc
sub
jns
cli
dec
out
lret
mov
lcall
lock
mov
shl
cmp
and
rorl
mov
xor
fnsave
jb
cltd
jl
rclb
push
mov
pop
push
dec
pop
pop
jmp
mov
sbb
inc
xor
nop
mov
inc
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shr
shl
mov
mov
mov
mov
xor
or
mov
shll
xor
mov
jmp
jbe
fstpt
insl
cmpl
jle
cmp
sbb
jp
stc
xchg
mov
cmpl
lock
adc
roll
pop
inc
push
xlat
xchg
in
mov
lock
push
xchg
adc
hlt
dec
insl
mov
fisubl
test
aam
jb
scas
push
fstpl
rcrl
mov
xor
test
test
and
xchg
mov
or
neg
in
lahf
mov
jg
pop
sub
lcall
test
sub
movsb
fcoml
addr16
and
out
cs
mov
cmpsl
inc
pop
fxch
scas
pop
add
jmp
push
lds
fsubs
add
sub
add
test
adc
lahf
push
xlat
mov
xor
dec
or
ja
push
xlat
adc
stos
mov
pop
mov
dec
bound
bound
mov
push
push
test
jle
pop
std
or
neg
add
fstl
aaa
xor
pop
lock
mov
vmovddup
gs
icebp
inc
ljmp
cwtl
ja
pop
mov
pop
dec
jne
ret
mov
leave
jns
ja
rcl
or
fldz
mov
adc
es
fldl
add
lret
test
push
mov
es
aad
jb
pop
sub
xchg
lret
and
cmp
inc
sub
int3
fnstsw
orl
cltd
fcmovnu
clc
and
cmc
fcomi
add
jb
out
movsl
pop
mov
add
push
enter
mov
lods
cwtl
movsl
and
std
xor
cmpsb
gs
jle
add
xchg
xchg
jae
bound
xchg
cltd
sub
mov
test
subb
jecxz
dec
push
adc
jo
out
outsl
les
inc
shl
out
lahf
mov
mov
adc
pusha
or
imul
ljmp
int3
test
repz
mov
stos
or
add
mov
mov
jo
jno
mov
mov
jno
add
js
orl
es
xor
jp
faddp
and
xchg
xor
xchg
fstpt
stos
push
jmp
loop
or
sbb
in
sbb
sbb
inc
ljmp
pop
pop
cmp
repnz
xor
push
sbb
inc
aas
xchg
add
pop
mov
je
pop
idivb
dec
and
fmuls
enter
ret
xchg
aam
and
jle
push
insb
pop
ret
call
inc
mov
in
in
cs
lret
xchg
in
sub
push
push
adc
outsl
lock
loop
xchg
popf
pop
inc
add
mov
jmp
stos
call
xor
inc
sahf
xor
aad
sub
jo
jb
mov
cmp
add
inc
insl
cmpsl
mov
rcrl
out
fdivr
jp
imul
sub
push
mov
pop
pop
dec
shr
pop
fwait
add
dec
data16
lcall
mov
out
imul
xchg
in
push
or
inc
lods
dec
adc
arpl
insb
adc
jmp
add
push
insl
xor
stc
in
cmp
rcrb
cmpsb
ds
sbb
mov
int
je
mov
inc
inc
into
cmpl
pop
rcrb
test
adc
lods
inc
loope
int3
xchg
mov
dec
daa
rol
repnz
pop
inc
jno
cs
mov
or
mov
sbb
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
jmp
std
dec
mov
sub
fidivrl
test
push
stos
mov
sbb
sahf
adc
sbb
mov
test
and
repz
lea
or
outsl
sub
out
fcoml
repz
pop
jle
dec
xchg
outsl
stc
cmc
xchg
mov
stc
xorb
or
xchg
mov
add
stc
pop
dec
inc
push
and
mov
iret
adc
scas
les
std
cli
xchg
sub
mov
jbe
dec
sahf
sbb
xor
add
data16
xor
cmp
pop
repnz
sub
inc
lret
push
rorl
lods
into
mov
mov
call
push
mov
outsl
aas
cld
sub
aam
jo
lret
push
pop
cmp
imul
aas
dec
hlt
inc
push
jle
or
out
jne
pop
pushf
data16
xor
jl
xchg
cmp
lods
movsl
repz
jp
adc
pop
cmp
inc
mov
bound
into
cmc
pop
ss
mov
ss
pop
loopne
data16
mov
aaa
pop
cmp
jg
not
xor
daa
scas
call
jno
sub
imull
fcom
sbb
xchg
dec
mov
test
inc
scas
int
or
mov
cmp
pop
push
push
js
cmp
sbb
inc
pop
push
cmpsl
mov
incl
movsl
and
iret
repnz
jg
mov
cmp
movsl
mov
add
and
insl
nop
mov
mov
cmpb
cmp
shlb
xor
cs
adc
fcomps
sbb
out
lret
inc
mov
mov
subl
nop
push
adc
xor
leave
movsb
mov
popf
add
mov
cmpsb
movsb
adc
loope
mov
or
mov
sbb
pop
pop
sahf
inc
cmp
aam
cmp
mov
fdivrs
or
mov
jnp
mov
mov
test
fcoml
mov
push
mov
xchg
outsl
push
and
jmp
mov
lods
fidivl
in
stc
cld
pop
jns
test
das
jb
jmp
popf
fdivs
ret
fs
sarb
int
fs
adc
xchg
mov
incl
mov
cmp
filds
aaa
and
ljmp
out
fmuls
addr16
sub
loope
or
sbb
dec
push
adc
mov
xchg
repnz
dec
mull
and
repnz
inc
pop
cmp
or
pop
and
shl
jmp
test
jg
popa
add
inc
punpckldq
ja
repz
push
popa
adc
mov
in
jl
mov
fcomps
insl
out
mov
sbb
inc
xchg
push
dec
loopne
jb
jecxz
lock
mov
pushl
daa
adc
jo
cmp
or
test
cli
popf
inc
xor
mov
mov
fnsave
jne
jecxz
scas
cmp
dec
push
dec
aaa
mov
mov
sbb
pop
mov
mov
xchg
xchg
dec
fwait
das
add
mov
stos
lcall
ficoml
imul
repz
mov
lods
push
push
mov
xlat
inc
adc
fsubrl
in
mov
in
sarl
fsubs
adc
lret
and
ja
cmp
mull
rcrl
hlt
inc
fidivrs
xlat
call
mov
mov
shrd
shr
shr
xor
push
xor
jmp
sbb
jmp
ljmp
jo
cld
repnz
sub
sbb
rolb
xchg
dec
push
inc
jb
xchg
test
dec
xorl
cmp
dec
test
xor
cmp
out
pusha
in
mov
inc
movsb
add
or
and
fdivs
mov
outsb
push
fcmove
and
adcl
lahf
sub
movsl
adc
inc
xorl
mov
hlt
iret
pop
fisubl
repnz
or
add
push
and
add
mov
sahf
push
sti
testl
test
push
stos
leave
pop
in
xchg
xchg
pop
lock
aad
cmp
and
or
rorl
insl
mov
hlt
rcrb
push
mov
mov
cmp
nop
xor
jno
sbb
dec
and
sub
sub
sbb
ds
mov
imul
fimull
or
jge
daa
data16
pop
pop
cli
push
push
pushf
in
roll
addr16
cmpsb
or
stc
add
xchg
in
dec
adc
cwtl
jle
fimuls
or
cld
jecxz
xlat
out
leave
cmovg
push
in
pop
xchg
lock
jmp
push
in
mov
mov
pop
aam
jae
sarl
out
dec
test
fwait
pop
inc
sbb
xchg
cmpsb
fimull
fsubrs
and
or
mov
ljmp
lahf
mov
adc
insb
xor
xorb
dec
outsl
pop
mov
loope
add
jnp
xor
xor
faddl
sub
rcll
mov
test
jae
cmp
mull
faddl
mov
cmpsl
mov
in
test
and
add
pop
rcr
and
cmpsl
ror
push
adc
in
inc
cli
xchg
push
xchg
outsb
scas
mov
out
insl
bnd
xor
addr16
inc
jb
or
add
stos
xchg
xchg
andl
nop
jmp
dec
enter
jne
repnz
aas
stos
jnp
mov
sbb
jne
popf
sub
adc
icebp
insb
popa
lds
pop
inc
add
aas
push
lahf
jmp
pop
push
dec
popa
jge
cmp
pop
sub
pusha
insl
cmp
mov
std
and
ror
cmpsb
and
mov
in
lock
std
imul
jne
push
test
rcpps
mov
stc
sbb
add
jecxz
ja
ljmp
ret
pop
push
mov
out
movsl
jb
jle
jle
cmp
ds
roll
fldt
dec
std
push
adc
sahf
inc
aas
xchg
push
adc
mov
mov
and
xlat
xor
test
xor
sti
and
mov
add
lods
js
cli
iret
add
fsubrs
inc
xchg
push
inc
fnstsw
or
push
jge
jmp
and
sarb
jnp
in
xchg
stos
dec
mov
pop
into
int3
mov
sub
cmc
xchg
out
mulb
shrb
sub
mov
jl
fsubrl
mov
xchg
outsl
mov
or
jmp
push
jp
xchg
push
ja
mov
repz
or
cmpsb
insb
cmp
push
les
mov
rcr
fdiv
cld
jl
outsl
stc
pop
nop
ret
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
shl
mov
mov
mov
shrd
xor
or
mov
mov
mov
mov
shl
xor
or
shr
xor
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
movl
shrd
notl
shr
ret
add
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
movl
xor
mov
mov
not
movl
decl
mov
movl
mov
sbb
movl
jmp
clc
sub
sub
mov
sbb
outsb
adc
sbb
lods
mov
lock
es
sub
jp
sub
mov
pop
sub
shrb
adc
jnp
aad
jl
push
daa
subb
and
lock
sbbb
insb
lods
hlt
leave
daa
and
mov
cmovge
hlt
out
inc
and
dec
pop
inc
fistpl
push
push
or
xchg
or
rorb
xor
xchg
call
insb
rol
rcrl
sahf
jg
mov
lahf
adc
je
cltd
cmc
out
loopne
movsl
repz
popf
pop
xlat
xchg
sbb
dec
jnp
cli
into
sub
sub
sbb
lea
and
add
xor
sti
add
fcomi
movsl
jle
das
add
add
fldenv
in
add
loop
rol
mov
mov
call
js
lods
fiadds
enter
add
or
mov
jl
and
cmp
insb
adc
sbb
xchg
jmp
dec
xchg
xor
ret
testb
popf
mov
xor
xchg
arpl
outsb
cmpsl
dec
pushf
ss
ds
mov
add
out
dec
fdivrs
test
aad
and
loope
inc
push
iret
sub
in
in
lcall
dec
das
mov
xor
dec
push
jns
dec
aad
pop
xchg
pop
lea
adc
dec
mov
and
insl
push
test
mov
mov
test
inc
aam
push
movsb
in
adc
add
or
gs
js
out
push
cmpsb
pop
pop
inc
iret
or
sbb
inc
xor
and
out
loop
imul
jp
sub
popa
xchg
out
pop
push
fnstsw
pop
iret
sbbl
cmpsb
and
mov
xchg
cmpsb
xchg
leave
leave
out
rol
pop
cmpsl
lcall
ret
hlt
bswap
lods
addb
xor
stc
jbe
cmp
cmpsb
lds
fisubrs
shlb
dec
mov
and
fidivrs
sti
push
dec
lock
xchg
jl
mov
scas
ja
dec
inc
dec
ja
loopne
jmp
lret
adcl
sbb
cltd
cs
jg
loop
inc
mov
jne
mov
cmpsb
push
push
pop
adc
cmpsl
jle
icebp
push
add
mov
stc
popa
lods
mov
push
sub
pop
mov
xchg
add
fidivrl
ds
dec
dec
sub
xchg
add
adc
or
rcrb
mov
ja
adc
insb
mov
mov
mov
push
xchg
jnp
fstps
jmp
in
lods
push
stos
imul
inc
adc
mov
fwait
ud2
and
push
mov
xor
jo
mov
pop
mov
gs
aas
jmp
mov
pop
sub
fisttpl
mov
je
fidivs
hlt
ret
pop
cmp
insb
adc
inc
popf
pop
dec
fwait
inc
xor
sar
mov
test
std
mov
mov
fsubs
xor
xlat
cmc
fidivrs
sbb
sub
xchg
aaa
push
xor
cmp
pop
mov
pop
add
hlt
xlat
mov
cmp
notb
push
icebp
pushl
and
fwait
dec
mov
inc
dec
pop
and
adc
hlt
cmp
sbbb
dec
fcoms
shll
jl
test
loop
sub
pop
xchg
inc
and
jb
cmp
and
std
into
inc
pusha
adc
daa
popf
inc
xor
lods
pop
mov
push
adc
push
adc
inc
loopne
outsb
add
xor
push
movl
movl
push
xor
movl
sbb
mov
cmpl
mov
mov
jmp
mov
movzbl
cmpl
ja
push
pushl
pushl
push
call
mov
xor
or
or
mov
adc
xor
or
adc
mov
and
mov
push
adcl
push
andl
jmp
xchg
sahf
push
push
fists
jecxz
stos
mov
sbb
sbb
sbb
cwtl
mov
cmpsb
stos
inc
fisubl
fdivrs
loope
shl
mov
jne
xor
and
sarb
jbe
pop
hlt
js
dec
xchg
and
data16
sti
add
sbb
xor
lahf
scas
adc
add
mov
inc
mov
sti
and
sub
jp
test
decb
add
enter
or
ficoms
mov
icebp
sti
data16
xchg
cmpb
icebp
xor
and
jg
push
pop
jno
xchg
out
mov
inc
insb
in
inc
xchg
test
mov
or
std
and
sub
adc
or
rcrl
pop
mov
add
jnp
or
adc
out
test
inc
popf
hlt
and
out
lret
dec
mov
jne
jmp
inc
push
cmp
mov
hlt
aad
fdivr
sbb
mov
loope
sbb
mov
jnp
xchg
repz
push
out
push
das
sahf
mov
test
shrb
dec
or
or
and
cld
loopne
inc
mov
xor
xchg
nop
mov
lds
push
es
out
into
or
int
aam
outsl
add
std
jnp
aas
sahf
inc
fidivl
sub
xchg
cmc
cmp
ret
mov
mov
lret
andl
rol
nop
mov
loopne
and
mov
xor
adc
imulb
sahf
ds
mov
mov
out
mov
jge
outsb
stos
xor
lock
and
mov
bound
into
orb
js
daa
sbb
inc
sbb
sti
repnz
xchg
fidivrs
arpl
out
inc
and
cmp
gs
scas
lock
fisttps
pop
pusha
in
xchg
dec
imul
movsb
inc
and
popa
dec
pop
push
daa
aaa
sbb
jg
insb
ljmp
outsl
aad
fsubl
fistpl
jecxz
xchg
mov
jbe
inc
pop
dec
xchg
add
jle
aam
add
negl
hlt
incl
push
pusha
jbe
or
and
or
aaa
sbb
fistl
int
sbb
pop
jno
loopne
dec
fdivs
scas
sbb
cmp
lcall
orl
add
rorb
enter
push
imul
fisttpl
outsb
jle
repz
iret
or
and
mov
dec
mov
push
and
mov
cmpsl
pop
push
ja
mov
fs
ss
sbb
push
xlat
push
or
pop
xor
push
outsb
rolb
leave
xor
ficoml
fs
daa
mov
cmpsb
xchg
test
add
pop
idivl
adc
mov
mov
mov
out
mov
push
jbe
ss
in
mov
mov
and
fnstenv
les
or
push
movsl
lock
mov
push
jne
aaa
loopw
outsl
ret
stos
fs
or
and
mov
fsts
xchg
rcr
add
jne
jl
sub
test
mov
adc
aaa
pushf
or
add
ja
and
fimull
push
cmp
jae
mov
rolb
jnp
imul
xchg
jge
push
test
adcl
call
sbb
mov
adc
mov
sbbl
push
or
subl
push
xorl
or
xor
xor
subl
push
push
call
xor
or
adc
mov
xor
mov
andl
push
addl
push
subl
push
push
subl
call
mov
add
mov
cmpl
not
movl
jmp
notl
mov
cmpl
jl
push
pushl
call
xor
and
movzwl
or
add
adcl
sub
cmpl
mov
movl
movl
jmp
movl
movl
cmpl
jbe
pushl
push
call
xor
adc
andl
and
add
movl
movzwl
xor
movl
decl
movl
movl
cmpl
mov
mov
not
movzbl
jmp
movl
movl
cmpl
je
push
push
call
sbb
mov
xor
or
sub
imul
and
sbb
movl
movl
mov
sbb
mov
notl
mov
or
mov
sbbl
jmp
adc
packssdw
jb
jnp
push
push
dec
jle
adc
sbb
sbb
xchg
repz
mov
mov
lcall
cmp
cmpsl
leave
outsb
scas
insl
ds
sub
mov
jmp
sarb
or
enter
std
test
dec
push
mov
mov
inc
cltd
test
and
mov
div
inc
cltd
and
std
or
xor
sbb
test
dec
out
or
loop
or
add
push
leave
dec
push
jecxz
mov
cwtl
orb
pushf
pop
in
call
int
outsl
insb
int3
les
cmp
cmc
mov
mov
popa
nop
cld
lcall
push
add
mov
sbb
jae
push
out
in
cwtl
mov
sbb
fisttpll
fs
cli
pusha
jp
out
jbe
test
loope
jnp
xor
pop
jle
lahf
test
sbb
adcb
das
adc
lods
inc
or
mov
cmp
lret
fs
adc
mov
add
sub
in
lods
in
xchg
jo
add
fisttpl
xor
je
pop
push
add
mov
xchg
cmp
jmp
cld
outsl
and
sub
push
fs
in
into
adc
fs
je
sbbb
and
hlt
hlt
and
in
lahf
stc
lea
mov
jp
lcall
sub
and
jmp
pop
jno
arpl
loope
pushf
gs
cmp
cmp
mov
stos
mov
lcall
addl
mov
icebp
shlb
mov
in
add
lcall
bound
xchg
inc
dec
aad
popf
imul
imul
cmc
mov
rclb
sbb
fsubs
stc
test
mov
add
mov
mulb
sbb
jno
add
lcall
mov
push
adc
stc
inc
xchg
sub
or
cmp
subl
or
dec
dec
rolb
cwtl
xchg
sti
call
imul
movsb
mov
pusha
or
sti
push
addr16
imul
fwait
or
shll
adc
add
loope
xchg
popa
pop
sahf
mov
mov
mov
xor
clc
inc
icebp
jl
and
test
sbbl
jmp
sbb
sbb
add
loop
adc
lods
repnz
xor
leave
inc
call
stos
enter
shl
mov
jo
mov
xor
jg
mov
nop
mov
into
jle
dec
test
cltd
andb
bound
es
cvttps2pi
outsl
cmp
push
gs
pop
adc
ja
movsb
push
stos
rol
xor
das
add
mov
jae
xchg
inc
fistpl
xchg
push
inc
bound
movsb
es
cmpsb
dec
in
pop
lods
ret
add
jns
add
fdiv
xchg
repnz
in
inc
je
fucom
stos
vmovhps
fs
cmp
jo
pop
mov
mov
aaa
mov
xor
cmp
adc
fsubl
out
push
jl
int
sahf
push
mov
cwtl
push
mov
out
cmp
mov
jg
add
xchg
dec
cltd
mov
pop
cmp
jecxz
std
mov
js
mov
jbe
sbb
add
jl
std
mov
sub
inc
movsl
ja
cld
xor
sbb
sbb
sarl
add
adc
adcl
or
mov
or
and
mov
andl
or
cmpl
mov
not
movl
jmp
movl
movl
cmpl
jbe
pushl
push
call
adcl
not
movzwl
sub
mov
adcl
mov
xor
orl
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
jmp
movsl
movsb
test
test
sbb
fdivl
mov
mov
or
sbb
out
and
cs
imul
int3
stos
push
cmp
dec
cmpsl
mov
lahf
daa
shrb
mov
out
es
xchg
push
mov
jno
fdiv
jg
and
pop
sub
mov
aas
icebp
mov
andb
inc
fcomip
pop
xorb
rcrb
add
cltd
sbb
push
jno
lds
mov
cmp
pop
pop
xchg
pop
sub
push
pushf
dec
fidivrs
or
ror
inc
jmp
clc
inc
xor
sub
and
mov
ss
lret
dec
mov
loope
cwtl
enter
jle
cmc
cmpsb
mov
add
mov
push
inc
test
lea
and
fmul
mov
adc
push
jb
sub
movsb
repz
inc
mov
imul
adc
fwait
aas
rol
sub
add
insb
cmpsb
mov
icebp
mov
adc
sahf
mov
roll
ds
mov
cli
sbb
or
mov
mov
dec
push
nop
test
arpl
or
xor
les
xchg
jle
stos
xchg
arpl
ss
shll
jnp
inc
sub
insb
mov
shlb
sbbb
or
xchg
mov
dec
adc
pop
inc
mov
hlt
out
xlat
in
jbe
push
mov
mov
insb
and
add
out
fcomps
popf
ds
cmp
sti
pop
xchg
pop
xchg
jg
or
adc
mov
push
mov
adc
pop
dec
cmpsb
mov
stos
pop
mov
add
jmp
pop
jmp
pop
cltd
pop
and
and
iret
cltd
xchg
pop
insl
push
loop
popf
negb
ja
mov
test
ljmp
cmp
stc
mov
cmpsb
pop
cltd
and
cmp
sbb
xor
xchg
ljmp
jecxz
sahf
push
lea
filds
jecxz
daa
fistl
data16
xchg
jb
cmpsl
xchg
data16
into
test
mov
out
mov
shr
inc
in
pop
outsb
cmp
repnz
test
mov
test
dec
pop
jae
pop
add
lret
ss
or
notl
faddl
stos
dec
mov
fwait
cmp
mov
icebp
stos
xchg
mov
add
xlat
adcb
negb
scas
push
push
or
jp
enter
stc
inc
or
mov
jnp
mov
push
fnstsw
leave
cmp
je
pop
pop
jno
es
jae
inc
sub
pop
sub
mov
sbb
xlat
inc
xchg
mov
stos
cmpb
add
fwait
lods
mov
cmc
inc
xor
add
icebp
sbb
dec
xchg
test
lret
jmp
loop
outsl
and
js
sbb
lods
push
cmp
push
insl
lret
add
xor
out
cs
movsl
sahf
push
sub
cmpsl
into
out
inc
fistps
or
sub
shll
lret
ds
lea
add
cwtl
xchg
imul
loopne,pt
xchg
jecxz
jno
add
sbb
into
call
mov
mov
fs
xor
mov
call
adcb
icebp
or
adc
jecxz
dec
dec
mov
outsl
imul
mov
sub
jl
push
add
inc
mov
addr16
mov
ljmp
push
rcl
or
sti
inc
pop
das
jmp
mov
fidivs
xor
dec
adc
mov
dec
hlt
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
jmp
fsts
or
push
jp
jo
dec
mov
sbb
sbb
inc
or
pop
fldl2e
and
sbb
jb
xor
push
je
rclw
dec
jnp
movsl
jmp
imul
jb
mov
cmc
rolb
movsl
mov
ljmp
imul
enter
lcall
cmp
dec
pop
shll
fbstp
cmp
enter
and
sarl
inc
outsb
cmp
jbe
inc
mov
bnd
inc
mov
dec
fisttps
loopne
out
mov
pop
into
loopne
dec
cld
loope
push
add
or
cmpsb
nop
mov
xchg
cmp
mov
mov
loope
movsb
inc
iret
cmp
jnp
mov
ret
test
fsubr
bound
fwait
cmp
xchg
dec
sbb
aam
sub
leave
repz
int3
fnstcw
outsb
rcl
push
lret
andl
pop
adc
clc
or
es
pop
jae
mov
xchg
pop
outsl
sbb
mov
mov
mov
pop
pop
jno
sbb
int
cmc
fists
addl
ret
out
int
cmp
jle
mov
mov
leave
cmp
xor
cmpsl
sti
ja,pn
and
jb
in
lcall
rcrb
fldenv
push
or
iret
lcall
jne
test
sub
xchg
mov
ljmp
cmp
mov
call
insl
aad
ret
add
repz
dec
xchg
fadd
jbe
jecxz
sub
xchg
outsl
xlat
sbb
jecxz
jl
or
mov
sub
push
sbb
pop
sbb
pop
pop
adc
and
lock
lods
leave
sub
gs
jge
clc
sbb
jp
popa
rolb
in
jmp
push
mov
lods
mov
fiaddl
mov
addr16
repnz
mov
mov
lret
push
fbld
psrad
ja
push
jmp
mulb
xchg
pop
add
mov
xor
cmp
and
shll
push
sub
push
pop
sub
ljmp
mov
bound
insb
pushf
stc
and
inc
int3
ret
pushf
sarb
clc
in
sub
inc
arpl
jae
pushf
es
call
fstl
mov
mov
and
aam
mov
stos
stos
jne
int3
pop
xchg
or
inc
xchg
add
sub
fdivrl
sub
gs
shll
mov
jge
cs
fisubs
push
pop
add
xor
out
icebp
lret
adc
inc
jge
jle
shrb
xlat
pop
pop
jae
jmp
inc
test
sbb
cmp
cli
imul
int
fidivrl
testb
loopne
stc
mov
mov
imul
adc
loop
cmp
mov
xchg
mov
jbe
push
and
mov
adc
jl
gs
divl
int
flds
bound
dec
dec
inc
pop
sbb
mov
xor
adc
fwait
ljmp
aas
inc
adc
xchg
pop
pop
or
fdivrl
fcoms
pop
rorl
test
out
into
mov
mov
cmpsb
xor
ljmp
mov
cli
out
xchg
adc
mov
xchg
mov
iret
rcr
aam
jl
cpuid
fcmovne
lret
mov
jbe
xor
pop
inc
or
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
jmp
xor
mov
lcall
jne
ret
jl
std
sbb
outsb
adc
sbb
ret
mov
add
bound
push
dec
push
or
cmp
sarl
jbe
sbb
xchg
hlt
jne
push
fwait
les
xor
mov
lea
lret
mov
mov
mov
jae
sbb
mov
mov
adc
and
inc
pop
sbb
mov
jp
fs
rcrb
mov
dec
mov
push
mov
lods
or
sbb
call
push
xchg
xchg
xchg
fistpll
clc
shlb
mul
imul
push
push
fdivrl
addr16
outsb
inc
pop
or
stos
gs
popf
or
pop
xchg
in
addr16
xor
ret
mov
sub
jnp
pusha
mov
fists
mov
jmp
and
pop
mov
adc
or
jnp
movsb
and
mov
pop
mov
data16
add
xchg
adc
pop
dec
sub
sbb
mov
inc
repz
das
jle
fwait
shlb
mov
push
cmc
das
insl
lret
add
popf
cld
daa
pop
mov
adc
mov
pop
lds
fmull
stc
mov
push
dec
cmp
and
dec
add
js
not
push
rcrb
lock
push
and
das
cmpb
std
sbb
movsb
ds
test
lock
push
jno
xchg
in
sub
sub
lret
sbb
push
rcrb
ret
push
lds
cmpsl
popf
lcall
loope
ss
testb
nop
arpl
movsb
xor
sub
push
jp
pop
sahf
cmp
adc
cmp
xchg
cwtl
iret
addr16
jg
cmp
jb
test
rcrl
outsl
sbb
and
sub
mov
fsubrs
mov
es
xchg
lret
rolb
repz
ret
pop
imul
sbb
test
jecxz
inc
sbb
lea
mov
enter
fwait
push
repz
xchg
jmp
pop
in
and
les
jnp
pop
cmpsb
xchg
add
pop
xchg
movsb
mov
mov
mov
pop
cmp
gs
ret
lcall
jp
ret
ror
mov
adc
and
aaa
mov
ja
out
mov
cmc
fldenv
ss
repz
pop
shrb
cmp
ret
xlat
test
jns
enter
mov
push
or
mov
mov
add
push
push
and
sahf
out
and
insl
mov
hlt
fldenv
fstl
sub
sbb
push
das
fldt
push
imull
loopne
add
xor
pop
bswap
shll
mov
daa
aaa
repz
test
add
cli
sahf
in
daa
jae
lea
jge
cmp
scas
arpl
pop
mov
sbb
jp
fistl
enter
or
dec
jb
push
out
mov
pop
repz
push
adc
pop
lods
pop
ja
xor
call
dec
push
jo
mov
lret
icebp
movsl
scas
dec
pop
sbb
mov
data16
jae
jge
fidivs
push
mov
loope
bound
out
bound
ja
jl
sub
xor
lock
jmp
aad
xrstors
loop
jns
test
es
les
movsb
pop
outsl
std
jnp
sub
aad
dec
std
das
push
lahf
push
inc
in
push
cmp
roll
and
insl
mov
das
out
inc
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jmp
xchg
and
cmc
mov
mov
jle
cmc
sbb
outsb
adc
sbb
xor
jbe
bound
jl
imul
fwait
pop
fiaddl
loop
lcall
mov
out
xchg
cmpsb
and
push
pusha
iret
add
xchg
push
push
stc
and
popa
mov
rorb
or
mov
or
lret
cs
pop
in
les
push
add
mov
cmp
cwtl
cwtl
mov
sub
jno
sbb
adc
push
repnz
mov
les
xchg
or
xchg
mov
inc
scas
inc
xchg
sub
dec
and
push
stos
xor
lods
cmp
jns
jb
jns
setge
out
sbb
pushf
sub
sub
and
inc
xlat
jl
xor
pop
sarl
and
and
stos
movsb
push
push
aad
call
jae
out
stos
aas
cmc
cld
outsb
arpl
and
adc
push
adc
xchg
inc
xor
addr16
repz
mov
or
mov
adc
and
sti
ljmp
fcoms
jecxz
sbb
xchg
icebp
dec
addb
idivb
cs
xchg
sub
mov
cltd
pop
in
into
test
fisubrs
rorb
fimuls
cmpsb
lea
mov
outsl
and
xor
xor
enter
outsl
push
pop
dec
push
push
mov
adc
out
stc
xlat
and
push
sahf
jno
and
ja
inc
cmp
rcpps
pop
mov
push
mov
or
das
stos
mov
mov
nop
in
lods
mov
sbb
andb
add
mov
sarb
mov
sbb
lock
jmp
sti
jns
imul
icebp
in
cmp
mov
insb
cli
popf
out
or
pop
rcll
leave
ret
fs
fisubrs
mov
add
ficoms
mov
test
bound
jle,pt
movsl
mov
shlb
ds
add
jmp
cmc
pop
inc
adc
mov
mov
icebp
add
jge
jne
out
in
pop
sub
ja
les
test
jl
push
repnz
ds
sbb
dec
push
xchg
or
push
test
fdivrp
and
inc
xor
cmp
mov
out
pushf
sub
and
loop
cmpsb
nop
mov
add
in
fldt
outsb
adc
mov
jne
sbb
and
scas
jle
jns
mov
and
outsl
mov
jo
sbb
lahf
cmc
jl
rcr
adc
xchg
cli
xchg
ja
fmul
mov
add
add
cmp
pop
mov
std
sahf
adc
pop
lods
ret
imul
std
xor
das
pop
push
jbe
icebp
divl
cs
std
dec
lret
not
arpl
cltd
pop
insl
in
scas
or
adc
les
sbb
adc
and
xlat
jae
dec
scas
fistpl
cmp
push
xor
xchg
pop
xor
pop
and
mov
sub
lea
xor
push
mov
hlt
stos
fcmovbe
mov
xor
and
dec
sub
sub
cmc
insb
jmp
in
cli
loope
movsl
notb
into
push
imul
dec
loope
aam
sbb
xor
ss
popf
mov
xchg
and
pop
mov
push
aad
scas
in
lds
outsl
subb
jae
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
jmp
sub
sti
xchg
sbb
xorl
rclb
sbb
pop
jno
mov
movsb
jo
xchg
cltd
jne
mov
mov
push
mov
or
nop
sbb
ret
shll
push
and
stos
fwait
pop
mov
mul
jae
xor
shr
add
mov
jmp
cmpl
iret
push
insl
jle
sbb
out
pop
sti
call
ds
cs
sub
pusha
xor
lock
pop
push
sub
sub
sahf
data16
stc
out
xor
pop
fwait
mov
and
xor
jae
ds
arpl
out
imul
sbb
nop
mov
insb
int
js
cmp
rolb
stos
push
daa
add
sub
inc
ja
sbb
cmpb
or
pop
cltd
jmp
lahf
lods
push
into
mov
dec
andl
lods
cmp
cs
rcr
push
andb
cli
mov
push
enter
aas
jmp
dec
add
push
push
pop
inc
push
xchg
cmp
andl
inc
in
lahf
jae
shll
or
pop
fidivl
mov
inc
xchg
shrl
call
sub
in
sbb
push
in
fisubl
gs
pavgw
mov
jle
mov
ds
or
cmp
test
or
repnz
jne
pop
and
add
pop
push
lds
mov
push
addl
in
jle
push
adc
mov
test
int3
fnstenv
in
nop
push
movsb
add
lock
dec
sbb
xchg
mov
pushf
test
jmp
sbbl
ja
jg
out
xchg
insb
outsl
in
jmp
inc
lahf
popa
and
cmp
ljmp
outsl
jne
call
mov
xchg
push
lods
dec
mov
xchg
adc
jbe
test
push
mov
imul
and
xchg
jb
push
inc
mov
cli
popa
push
leave
in
or
or
div
jns
arpl
in
xchg
aad
or
or
mov
jp
mov
pushf
or
jmp
and
jno
movsl
in
lcall
cmp
js
sarb
sbbl
popa
loopne
sbb
cmp
mov
xor
pop
cmpsb
loop
notl
pop
inc
push
loopne
and
push
push
dec
mov
cld
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
jmp
nop
xchg
lret
ja
das
sub
sbb
adc
jb
sbb
rclb
sbb
lods
cld
sub
and
or
sbb
cmp
stos
inc
mov
loope
push
lock
mov
cmp
scas
cld
mov
mov
cmp
pop
pop
sub
iret
fwait
push
jo
sahf
je
or
push
push
cmpsb
cs
cmp
or
sub
and
lods
sub
aam
lret
cmp
insl
mov
das
hlt
ret
push
std
jmp
mov
and
mov
cwtl
mov
addb
repnz
ret
mov
and
push
or
pop
mov
in
add
int3
stos
fistps
aad
inc
jmp
shl
jns
push
xor
cmp
shr
ret
jl
push
mov
mov
or
sbb
mov
sbb
or
add
fstpt
mov
loop
orl
jno
push
jbe
sbb
cmpsl
push
add
mov
repnz
push
mov
dec
das
mov
xchg
es
iret
mov
jnp
movsl
daa
xchg
push
mov
push
add
test
pop
xor
jg
lret
xor
or
push
push
cmpsl
fadds
jmp
mov
push
int
mov
jno
lock
dec
pop
xlat
adc
arpl
int
leave
inc
mov
push
xchg
xor
call
sbb
pop
xchg
movsl
popf
mov
jae
mov
sbb
mov
je
jne
js
in
icebp
push
push
lcall
out
cld
jnp
stc
sbb
test
cmp
loop
or
imul
mov
sbb
movsl
sbb
int3
int3
sub
cmpsb
cli
mov
add
xchg
addl
dec
xor
out
mov
adc
loopne
or
mov
mov
push
arpl
lcall
aaa
test
cs
sbb
dec
faddl
aaa
push
lcall
jo
pop
fbstp
lcall
inc
jg
xchg
lock
cmp
fwait
roll
pop
sbb
cld
adc
xchg
seto
add
jb
shll
xchg
sahf
push
outsb
hlt
movaps
jae
sub
and
test
pop
ss
sub
fucomi
shl
jo
lods
mov
sub
add
push
mov
xor
stos
sub
push
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
jmp
test
push
inc
sbb
jnp
inc
sbb
adc
inc
push
loop
sbb
adc
sbb
cmp
mov
xchg
xchg
pusha
pop
and
movsb
rolb
or
dec
xor
push
pop
mov
adc
cmpsl
adc
ret
aad
jo
mov
mov
xor
in
cmp
inc
push
pop
js
in
in
or
inc
cmpsb
adc
fidivrs
push
adcl
jnp
push
sysexit
pushf
adc
or
ret
pmullw
out
imul
add
mov
jp
movsb
adc
add
out
pop
scas
inc
mov
and
out
xchg
mov
aad
mov
aad
mov
sbb
push
sbb
inc
or
xor
add
push
ret
sti
sbb
movsb
scas
cli
dec
popf
aam
adc
inc
mov
sub
cmp
roll
add
arpl
xchg
popa
mov
xor
repnz
sub
js
insl
cmp
int
je
mov
mov
inc
push
outsb
dec
loope
loopne
adc
negl
jne
push
cli
pop
in
sub
cli
in
or
jl
push
addr16
xchg
cmp
ror
fcmovbe
inc
sub
in
int
mov
shlb
adc
pop
xchg
push
in
add
sub
shlb
dec
dec
push
xchg
mov
inc
sbb
ja
sbb
mov
mov
stos
jo
dec
rclb
mov
fucomi
sub
andb
xor
push
fsubl
pop
dec
pop
pop
inc
gs
ret
aad
mov
adc
jno
mov
mul
or
mov
call
sar
pushl
cmpb
adc
ss
mul
dec
inc
jno
rolb
jne
push
sbb
dec
push
inc
add
in
testb
adc
iret
test
je
loop
mov
or
call
mov
jo
sbb
push
pop
or
mov
dec
stos
mov
jge
gs
loop
cmp
daa
lcall
cmp
push
cmp
mov
push
cmp
bnd
inc
inc
or
jnp
in
push
loop
xchg
popa
les
cmc
xchg
inc
rclb
ja
les
push
jl
mov
pop
loopne
or
pop
adc
shlb
in
and
leave
inc
add
add
movsb
add
popa
push
je
repz
xor
jmp
pop
fdivs
sbb
pop
into
sbb
jae
fldenv
sbb
rclb
sbb
xor
pop
inc
popf
mov
ja
call
dec
xor
std
imul
and
aaa
cwtl
aad
rorb
fsubs
lcall
loope
pop
in
sti
bound
sub
stos
dec
repnz
int
push
ret
xlat
cmpsl
dec
dec
pushf
loope
test
add
jb
fldcw
jecxz
in
sub
clc
pop
imul
lret
fsubp
out
cwtl
lds
lret
cmp
jae
loop
into
hlt
in
mov
lods
aam
xlat
pop
sti
xchg
xchg
inc
cmp
fsubrs
cltd
xchg
xchg
shlb
dec
adc
push
xchg
add
dec
jno
sub
or
cmp
leave
fucom
mov
and
sub
inc
mov
inc
mov
in
cs
xor
into
cs
jne
and
sarl
mov
push
pcmpgtb
ljmp
xlat
nop
and
push
jmp
jge
std
popa
sbb
andl
mov
push
sbb
cmp
lods
aad
shll
data16
mov
push
outsb
lock
xor
aas
int
gs
push
ret
sub
dec
pop
out
xor
aas
mov
adcl
jb
ds
fdivrl
jns
cmp
jecxz
ret
nop
out
and
adc
add
cld
pop
ret
inc
popa
cmc
inc
or
les
pop
lods
insl
push
sbb
dec
xchg
cmp
adcl
dec
sbb
mov
dec
scas
lock
cmp
pop
xlat
adc
xlat
mov
push
ret
lods
lds
sbb
and
cmp
mov
jns
bound
mov
int3
mov
jo
inc
sub
push
mov
jmp
sub
mov
and
fs
inc
aam
jne
lock
sub
xchg
sti
out
repnz
lods
sub
lret
cmp
pop
xor
mov
dec
movsb
mov
push
cwtl
jno
sbb
add
fdivp
fisubrl
in
popa
out
pop
or
jne
js
orb
rcrl
fldpi
scas
jae
pop
cli
arpl
dec
push
arpl
sbb
cmpsb
mov
outsl
pusha
lret
add
movl
dec
aaa
loopne
jnp
xor
push
xchg
pop
push
mov
div
mov
xor
div
xor
mov
jmp
aam
sbb
and
test
mov
rclb
sbb
ret
mov
mov
xchg
jne
pop
xor
push
aas
xchg
pop
repz
mov
fiaddl
cmpsl
les
sub
insb
out
xchg
or
jno
push
ja
enter
xchg
dec
mov
mov
sub
mov
push
std
in
stc
and
leave
pop
sub
test
cmp
jg
mov
in
int3
cli
or
dec
and
sub
xor
addr16
dec
lds
loop
lock
dec
rclb
and
mov
sbb
sbb
inc
pop
int
xchg
bound
pop
cltd
nop
mov
mov
stc
aam
sub
xchg
and
xchg
xchg
daa
pop
lret
or
lock
cld
outsl
nop
push
adc
in
outsl
lea
push
out
mov
cmp
sbb
cmp
aam
repz
outsl
pusha
fsub
add
pusha
push
pop
xor
shld
push
sbb
jecxz
pop
dec
xchg
stc
lcall
mov
es
or
mov
fcmovb
push
rolb
fwait
pusha
push
cmp
mov
pop
sub
dec
addr16
ds
in
movsb
or
call
push
xchg
sti
gs
sub
push
test
scas
inc
ja
testl
bound
sub
push
sbb
clc
jp
push
mov
jle
into
jl
add
sbb
sbb
xor
mov
je
jbe
sahf
push
and
leave
mov
mov
xor
adc
adc
pop
jae
and
call
ljmp
push
sub
cwtl
imul
pushf
add
sbb
testb
xor
xchg
push
insl
mov
nop
out
sbb
mov
inc
neg
outsl
jnp
inc
dec
out
mov
fmuls
sbb
andb
mov
int
and
sub
sbb
lea
xchg
xor
add
in
or
fcmovnb
int3
inc
cmc
cmp
outsl
jg
mov
add
imul
pop
and
cmpsl
test
add
cmpsb
imul
ds
lds
add
xorb
out
out
jo
imul
test
test
and
scas
xor
xchg
lds
mov
xor
sub
enter
and
sbb
stos
or
cld
xor
leave
add
add
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
jmp
test
in
gs
les
jo
stos
inc
push
rcrb
sbb
adc
sbb
xchg
shlb
add
jmp
cld
loop
adcb
cmp
pop
mov
es
cmc
imul
pop
scas
add
dec
xchg
shlb
sahf
jno
adc
xor
imul
loop
jge
int3
or
test
adc
shl
jo
addr16
xchg
pusha
push
add
jmp
imul
mov
jge
and
sbb
pop
pop
push
or
pop
and
out
dec
dec
stc
sbb
mov
pushf
int3
daa
lods
ljmp
lods
jae
arpl
xchg
pusha
dec
or
pop
and
sub
sbb
test
out
popf
push
cmpsl
jmp
pop
mov
jnp
es
nop
imul
adcb
xchg
ds
jg
or
ds
push
ss
jae
test
and
mov
out
inc
add
aad
iret
in
je
sbb
stos
xor
lahf
nop
lock
ds
pcmpgtd
inc
cmp
adc
sbb
cbtw
push
lods
in
jae
sub
and
nop
rcll
stos
pusha
jmp
mov
fidivs
jns
pop
lfence
std
and
in
cmp
test
popf
mov
jnp
inc
pushl
ret
mov
jge
scas
jmp
sbb
inc
pop
ss
scas
out
push
xchg
adc
fadds
in
fs
arpl
sahf
out
dec
pop
xor
mov
nop
add
sub
aaa
sub
add
push
jbe
add
and
subb
add
sub
scas
jle
push
sarb
jae
ret
sarb
jle
mov
push
pop
mov
insl
jmp
ja
aaa
std
pop
xchg
lret
test
cmp
std
fimull
fstpl
push
sub
add
mov
incb
push
cmp
mov
and
xchg
bound
or
popa
sbb
sbb
movsb
pop
nop
xor
pop
pop
nop
adc
and
sbb
or
adc
sbb
lahf
dec
push
mull
stos
pop
cli
inc
out
daa
mov
inc
xlat
push
mov
or
js
xor
mov
cmp
xor
push
loop
jae
pop
popf
inc
cld
insl
xlat
lock
std
dec
hlt
xchg
dec
add
inc
and
inc
push
cmp
adc
xchg
leave
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
jmp
rep
add
mov
inc
leave
jl
pop
or
adc
sbb
rclb
sbb
dec
into
cmp
js
pop
push
mov
sahf
out
push
adc
fnstsw
mov
in
fucomp
je
or
inc
add
subb
pop
aas
idiv
mov
mov
push
inc
aad
mov
pushf
jns,pn
mov
lock
repz
jl
mov
xor
out
jmp
xchg
imul
dec
out
jp
mov
pop
cmpsl
sbb
add
je
mov
mov
jbe
jmp
leave
imul
mov
es
xchg
push
fbstp
out
mov
out
sub
sub
pop
jmp
test
loop
cmp
or
mov
cld
mov
add
and
xchg
mov
mov
pop
dec
push
in
jl
out
dec
iret
adcb
add
mov
mov
and
out
mov
lds
imul
decb
sbb
jge
push
xlat
jg
or
push
insb
mov
inc
or
insl
bound
addr16
jmp
loope
xlat
mov
cmc
arpl
imul
cs
outsl
cmp
and
or
fistpl
jmp
ret
adc
sub
jmp
adc
arpl
sub
addb
addr16
ja
outsl
xlat
cmp
sub
loopne
dec
inc
cmp
lret
das
add
rcrb
sub
inc
outsl
nop
add
adc
ja
cmp
jmp
mov
xchg
mov
push
dec
xor
adc
lock
xor
xchg
incb
adc
mov
outsb
cld
pusha
push
push
jecxz
bound
push
fucomp
aam
or
xchg
jge
adc
push
int
in
stos
aas
and
movsl
aas
sub
add
xchg
inc
lds
pop
test
and
filds
lea
cltd
dec
jbe
mov
rcl
cmp
ss
inc
pop
add
lret
in
inc
cmp
push
popa
add
int
insl
mov
stc
and
in
pop
imul
inc
xor
ds
scas
mov
dec
lar
pop
ss
jp
inc
fildll
mov
and
flds
or
movsb
pop
jbe
mov
in
inc
ss
push
pusha
mov
inc
push
mov
adc
test
ret
mov
xor
add
jmp
sub
mov
inc
pop
and
leave
out
jle
loope
mov
rclb
sbb
ds
inc
add
sub
mov
dec
lcall
cmp
rcrl
jae
loope
in
jne
in
xlat
or
dec
jg
adc
push
sbb
cltd
mov
xchg
xor
in
add
lods
and
mov
jmp
cmpps
popf
sub
add
push
fwait
imul
aas
ja
fs
xor
and
icebp
roll
popl
push
nop
sub
jbe
out
mov
ret
cmpsl
aas
jno
mov
fdivrp
in
mov
popf
jb
lods
pop
push
dec
xor
cmp
inc
arpl
cmp
cmp
ret
ror
in
push
mov
mov
inc
lods
push
or
xchg
or
jns
cmp
out
aad
lods
mov
jae
mov
ljmp
jno
dec
sbb
fwait
fs
loopne
cmp
nop
dec
loope
emms
daa
xchg
xor
fistpl
sub
xor
xchg
dec
in
jmp
adc
in
sbb
sahf
call
outsl
gs
sar
rclb
lods
pushw
outsb
pop
mov
push
call
daa
mov
cli
jae
mov
pop
push
arpl
and
lret
stos
push
mov
aam
ret
nop
push
dec
sbb
in
jle
mov
pusha
int3
mov
pop
out
xlat
aas
pop
scas
shl
shl
test
push
fs
mov
jecxz
add
xor
mov
icebp
pop
sub
add
jns
mov
or
into
push
push
cmp
lret
es
lds
in
dec
lea
xor
or
xchg
pop
xor
xor
push
adc
add
or
jp
outsl
loope
xchg
call
pusha
lret
jmp
push
pop
push
or
cltd
ss
cmp
cltd
mov
or
lds
es
icebp
ds
or
inc
andl
cs
or
pop
ljmp
jl
cwtl
cmpsb
stos
cmp
jae
inc
sub
jo
testl
sbb
inc
jns
pusha
or
aas
shrb
and
ljmp
js
out
dec
cmp
test
xchg
imul
sti
or
or
gs
inc
shlb
in
adc
or
pop
iret
lahf
scas
lock
fisttpl
lcall
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
jmp
mov
and
ss
xorl
rclb
sbb
lret
xchg
jmp
inc
inc
dec
inc
mov
dec
push
sbb
jg
rolb
fimull
repz
sub
xchg
adc
mov
push
push
fstl
mov
mov
cmp
sub
mov
add
cmpsl
cmc
and
sbb
jle
jns
pop
jbe
outsl
idivl
or
js
mov
sub
test
in
jne
xchg
cs
dec
lea
xchg
inc
hlt
les
mov
stos
les
out
adc
adc
mov
aam
xor
hlt
fwait
xchg
mov
and
lea
mov
out
aaa
pop
fcoms
ljmp
insl
jne
push
loope
pop
or
imul
divl
fs
mulb
iret
jbe
and
add
or
dec
inc
xor
pop
fsubrp
repz
adc
mov
stc
dec
jne
push
or
sahf
fsubrs
add
pop
xchg
and
inc
fdivs
clc
pusha
ja
jae
pop
in
sbb
lret
cmp
gs
jmp
inc
sti
xchg
xchg
arpl
cmc
les
cld
cs
sub
aam
insw
mov
mov
pop
adc
fstl
ss
cmp
orb
pop
jle
inc
or
mov
add
add
scas
push
mov
pop
ret
sbb
inc
iret
mov
mov
test
loop
add
les
sbb
adc
add
or
inc
sub
xchg
scas
fcmovbe
call
pop
rol
sub
xchg
pop
dec
xchg
lods
adcl
dec
mov
movsb
pop
scas
lods
mov
outsl
loope
xor
lea
push
or
dec
or
inc
movsb
add
cmp
scas
jecxz
jp
stos
lock
pop
lods
jge
mov
clc
fbld
inc
adc
dec
lahf
lahf
sub
mov
cmp
in
inc
dec
pop
in
test
fwait
mov
inc
mov
scas
mov
outsl
add
fistps
and
sub
inc
ss
sbb
and
adc
clc
cmc
leave
mov
in
daa
lret
jno
ljmp
shll
cli
test
mov
push
leave
add
dec
add
icebp
jg
lret
lret
push
in
mov
xor
hlt
pushf
gs
aas
lock
mov
and
adc
cmp
jecxz
enter
rorl
add
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
jmp
orb
loop
sbb
call
dec
cwtl
cmp
sbb
adc
sbb
ficompl
push
mov
add
outsb
mov
xor
shrl
outsl
rorl
mov
inc
and
je
test
sbb
arpl
ds
push
aad
ljmp
lods
adc
pop
or
leave
cli
insb
mov
cld
lods
add
add
popl
mov
jb
outsb
sbb
rorl
arpl
lock
ret
mov
subl
add
je
dec
push
fdivrs
jp
out
out
mov
daa
stos
sub
enter
xchg
out
movsl
or
pushl
call
cmp
xlat
andl
xor
sub
out
pop
or
dec
and
out
dec
notb
incb
fucomip
test
mov
lret
jg
pop
adc
pop
cmp
stc
adc
repnz
add
xor
je
jb
pop
mov
popa
sbb
loop,pt
arpl
hlt
inc
cltd
into
jnp
clc
lret
mov
jno
sbb
adc
mov
insb
rcll
jnp
cmpsl
cmp
mov
xor
sbb
mov
jns
stc
aad
inc
imul
inc
in
ljmp
scas
mov
jge
adc
adc
das
mov
or
dec
xor
cmp
jo
out
dec
push
test
xor
out
insl
cmp
popf
in
dec
fs
jg
and
orb
inc
jg
pusha
inc
ljmp
sbbl
lahf
and
push
adc
mov
imul
clc
lahf
pop
jb
cld
aas
cmpsb
je
iret
add
sbb
sbb
xor
jb
xor
idivb
aad
pop
xchg
fildl
cmpsl
in
add
xor
cmc
cmc
or
lds
mov
jmp
mov
mov
push
mov
pop
jl
or
mov
ss
out
mov
cmp
jg
popf
addr16
pop
jne
add
js
ret
testb
adc
dec
ss
popl
jb
out
inc
outsb
mov
pop
sahf
or
adc
mov
mov
iret
bound
jecxz
xlat
sahf
adc
xchg
cmp
push
dec
insb
cmp
sar
sbb
push
sub
test
shll
shl
testl
add
add
rorb
push
mov
mov
mov
imul
mov
imul
or
mov
or
xor
jmp
subb
pushf
sbb
pop
mov
movsb
and
mov
sbb
push
das
xor
loope
jp
xor
cmc
inc
mov
dec
add
pop
add
dec
hlt
repz
inc
mov
clc
pushl
test
jl
mov
lea
popf
mov
mov
sbb
movsb
out
rcll
into
sub
test
pop
push
jnp
sub
push
pusha
outsl
fadds
xchg
imul
inc
dec
fcmovb
gs
push
mov
loop
pop
test
popf
jl
das
movups
xchg
test
lds
cwtl
push
sbb
dec
int
jns
pop
imul
sbb
and
addr16
insl
xchg
test
xlat
dec
ss
shll
das
jo
jbe
sub
addr16
cmc
push
push
fninit
push
mov
xor
dec
loope
icebp
popf
in
jp
mov
in
mov
cmp
or
xchg
adc
xchg
xor
jmp
push
into
repnz
mov
clc
je
cwtl
xchg
stc
and
jmp
inc
xchg
repz
fs
jge
testb
inc
xchg
jne
fstpt
lock
fcmovnu
lea
fidivs
repnz
xor
lahf
cmc
mov
jbe
outsb
leave
xchg
aaa
rclb
aaa
lea
lret
sbb
xlat
cmpsl
or
inc
sbb
fbld
cmove
fwait
scas
cmp
lcall
pop
sub
or
jae
inc
outsl
sahf
mov
out
sub
cld
addl
scas
ret
mov
ja
mov
js
enter
lods
outsl
gs
gs
movsb
fwait
jno
xor
call
mov
jp
inc
mov
cwtl
test
in
push
ret
mov
aas
push
xor
push
aas
into
rcr
push
inc
sub
pusha
add
aad
adc
mov
and
and
jae
inc
push
push
inc
mov
loopne
lret
aad
stc
repnz
inc
and
hlt
int
addr16
pop
mov
insl
ds
dec
sub
hlt
and
clc
mov
sub
cmp
pop
int3
fildll
push
pop
cmp
mov
adc
imull
inc
in
jae
cmp
xor
xchg
cld
repnz
xchg
std
dec
and
sub
rorb
js
sbb
jne
xor
jle
push
push
leave
sub
mov
popf
dec
push
pop
lea
mov
fstl
into
mov
jle
push
inc
das
repz
and
xor
shrl
jbe
sahf
call
sbb
pusha
xchg
pop
lea
mov
and
add
xor
add
cmp
jmp
cmp
daa
sub
mov
sbb
rclb
sbb
cmp
pusha
mov
cmp
sahf
mov
out
hlt
out
pop
in
or
and
hlt
loope
pop
add
xchg
fisubl
pop
inc
pop
sub
fwait
adc
add
stos
jno
fbstp
or
and
es
popa
call
cmp
js
nop
mov
lds
mov
das
cltd
outsl
test
or
sub
in
clc
lret
stc
inc
jl
pop
lods
mov
pop
xchg
dec
push
jecxz
popa
std
aam
cmp
cmp
mov
daa
add
inc
push
loop
pusha
jp
mov
mov
sub
gs
aad
sti
lds
shll
push
stos
adc
xchg
scas
pop
pop
orb
lcall
cltd
dec
int
hlt
push
inc
and
movsb
aas
xchg
or
in
push
xchg
setae
shrb
aam
in
cmp
xchg
and
mov
fdiv
jne
pop
ljmp
inc
shll
sarl
test
dec
fbstp
xchg
xor
leave
add
lret
popa
mov
sub
shll
lods
jb
add
cvtps2pd
xlat
mov
das
dec
xor
mov
bound
sarb
sbb
rcrl
jge
dec
push
mov
out
scas
xchg
fs
rcrb
into
mov
adc
dec
rorl
fs
xchg
aaa
mov
xchg
aad
shl
mov
push
aas
sbb
loopne
inc
popf
es
movsl
fildll
loope
sbb
xor
outsl
dec
push
es
jge
test
fisttps
or
mov
inc
pop
xor
adc
and
cmp
pop
lds
pcmpeqw
test
push
add
lea
and
add
mull
xor
rcl
add
es
lret
jle
into
jg
cmp
mov
pushf
out
xchg
sbb
fdivp
stc
push
push
in
inc
das
sbb
cmp
fs
xchg
jno
add
dec
pop
mov
in
stc
flds
and
fldcw
jns
cmp
cli
loope
dec
movsb
adc
push
xor
xchg
movsl
pop
test
pop
or
popa
pop
sub
sub
mov
mov
xor
clc
cwtl
mov
loopne
nop
adc
in
jne
pop
jmp
inc
mov
inc
lcall
jnp
jo
sbb
rclb
sbb
sub
das
into
and
pop
pushf
lds
lea
mov
sbb
fcmovb
sbb
lea
lret
insl
fs
inc
pop
mov
xor
add
mov
sbb
mov
adc
mov
arpl
test
push
pushf
lea
add
pop
adc
xchg
scas
xor
adc
jmp
push
xorl
cltd
cmpsb
xchg
adc
cs
fsubrl
lret
test
sub
out
xchg
sbb
mov
out
jo
aam
sbb
mov
jae
je
and
cmp
and
push
popa
xchg
dec
inc
cwtl
inc
xor
and
mov
inc
jl
ja
inc
push
pop
cli
scas
fs
add
pop
scas
mov
add
mov
in
mov
cmp
enter
repz
mov
add
adc
lret
sub
or
sub
and
pop
adc
inc
add
notb
sbb
jl
inc
jns
shl
cli
dec
dec
movsl
mull
adc
imul
ljmp
pop
pushf
sbbl
lret
les
jo
packsswb
jmp
pop
adc
push
mov
mov
pop
push
add
fimuls
dec
and
std
xlat
mov
xchg
inc
add
stc
sbb
pop
add
or
lret
mov
jno
dec
pop
and
mov
jne
cmpsb
fadd
cmc
stos
xchg
push
xor
or
stos
fsubrs
jns
or
mov
jecxz
sub
clc
cmpsl
test
int3
cltd
adc
les
movsb
dec
rolb
int3
lcall
xchg
leave
aaa
xor
xor
jge
pop
div
ret
pop
pop
insb
leave
lcall
or
sahf
jno
sub
dec
fldcw
xchg
insb
dec
push
xchg
add
cs
mov
jle
test
or
int
push
jg
inc
ja
mov
sbb
test
mov
jle
xchg
jbe
mov
adc
sub
cmp
pop
arpl
ret
std
hlt
daa
adc
xchg
push
lcall
adc
outsb
idiv
lcall
fsubrl
add
lds
stos
pushf
movsl
test
je
mov
iret
mov
ret
test
cmc
push
sub
xchg
push
adc
leave
sti
loop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
jmp
outsb
rolb
jnp
cmp
ret
push
pop
fnstsw
test
sbb
loop
stc
pop
mov
dec
add
push
adc
out
mov
xchg
cmpsl
loope
add
cvtdq2ps
ficoml
jo
test
sbb
adc
movlps
sbb
ret
lret
cmp
mov
and
push
cmp
push
or
test
mov
cwtl
sbb
xchg
mov
cli
mov
test
in
popa
lahf
stos
or
ret
lock
or
cmp
add
cld
icebp
daa
neg
rorl
and
or
mov
dec
push
popf
jmp
int3
mov
pop
push
rolb
pop
mov
cld
or
jae
lods
mov
adc
enter
xchg
ret
lahf
scas
jns
cmc
mov
mov
lahf
jl
and
scas
pushf
push
je
inc
jg
stos
add
dec
add
inc
leave
int3
push
cmp
and
xchg
sub
mov
cmpsl
adc
lds
icebp
add
scas
jne
lods
sahf
imulb
mov
inc
jbe
in
and
sbb
inc
mov
scas
fidivl
cmpsl
xchg
mov
mov
lds
mov
mov
hlt
cltd
or
pushf
jp
dec
push
outsb
loop
jle
lods
ret
loopne
cmp
jnp
jns
xor
push
xlat
sub
ja
add
aaa
sbb
jecxz
jg
cmpsl
dec
jmp
jge
movsl
and
lods
fiaddl
jne
push
rcl
push
pop
movsl
arpl
aas
negl
sub
and
and
push
lret
xchg
push
mov
ljmp
popf
pop
cmp
mov
mov
and
push
lret
jae
mov
sub
mov
cs
movsb
loope
mov
mov
sub
mov
jns
xor
mov
add
pop
jg
jmp
stc
in
mov
shr
cld
xor
mov
and
dec
pmaxsw
sbb
add
stos
jecxz
or
adc
adc
jnp
mov
dec
sbb
imul
sub
test
dec
cli
jmp
push
dec
js
add
mov
and
adc
dec
add
xor
sub
popf
sub
push
jo
and
lods
clc
jb
mov
shll
xchg
xor
shlb
mov
sahf
cmp
ljmp
int3
xchg
mov
out
or
jl,pt
push
lods
mov
push
pop
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
jmp
mov
pop
mov
stos
and
sbb
shll
sbb
out
xor
mov
bswap
rol
pop
lds
mov
xor
sbb
stos
adc
xchg
cmp
and
add
ret
out
mov
dec
mov
jle
xchg
xor
test
bound
fcoms
pop
jmp
adc
sbb
push
call
sub
out
adc
stos
inc
adc
push
sub
popa
cmp
cs
rcll
cmpsb
call
pop
cwtl
xchg
shlb
ret
mov
mov
daa
cmp
or
inc
insb
inc
enter
lock
pushf
and
sub
mov
test
pop
shrl
inc
mov
xchg
cs
int3
iret
adc
icebp
sbb
xlat
pop
inc
jne
pushf
add
std
push
cmp
jmp
pop
jge
dec
insl
leave
inc
push
push
xor
lds
dec
push
test
mov
loope
aaa
cmp
add
mov
aad
or
call
mov
aas
inc
popa
lret
push
lret
and
adc
push
adc
aad
pop
cmpsb
icebp
jg
xchg
mov
cmp
sub
xchg
pop
cmp
aad
outsl
cmpsb
mov
ljmp
out
mov
adc
out
mov
es
xchg
inc
imul
jle
push
lcall
mov
icebp
adc
pop
loop
arpl
lods
lcall
pop
dec
fbld
frstor
pushl
sub
movb
or
xor
orl
fcomip
pop
adc
jg
push
jne
dec
or
aad
cltd
lods
pop
or
add
mov
mov
sbb
sar
test
xchg
push
lock
cmp
jle
sub
mov
out
inc
inc
pop
sub
call
insl
call
cs
rdmsr
ficoms
sub
mov
inc
out
jnp
mov
add
sub
dec
cmp
push
movsl
pushf
mov
or
cltd
lret
into
arpl
or
and
push
mov
push
ja
cmpl
insb
jae
mov
bound
sbb
xorb
inc
jecxz
add
pop
add
sbb
lret
les
popa
push
push
stos
iret
push
roll
lock
add
jl
rcr
mov
mov
xlat
sub
mov
inc
lret
fs
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
jmp
fiadds
rcrl
dec
fisubl
out
mov
jo
sahf
sbb
mov
loop
outsl
fwait
int
leave
push
dec
mov
sbb
push
sub
in
stos
jmp
mov
call
lret
add
fxch
dec
fstl
inc
jecxz
dec
aas
clc
cmc
push
mov
cs
and
push
lret
add
rclb
push
or
push
cmp
jl
shll
fyl2x
aas
jno
mov
jae
and
sbb
or
or
push
icebp
cmp
push
in
cwtl
fsts
cli
sbb
xorb
sbb
xor
xor
les
jbe
jge
aas
push
push
jns
mov
mov
test
mov
push
lret
pop
popf
mov
mov
mulb
arpl
push
int
inc
or
sbbb
stos
jnp
and
test
add
ljmp
pop
shlb
das
std
mov
adc
xchg
shll
inc
divb
mov
mov
sub
stos
les
pushf
out
insl
mov
xchg
sub
jecxz
adc
cmp
add
std
sub
xchg
scas
xlat
cmpsb
iret
mov
iret
mov
rcl
jecxz
sbb
repnz
sar
and
clc
inc
push
nop
fisttps
sub
cwtl
aad
dec
iret
jns
xchg
sbb
nop
push
rclb
mov
in
adc
pop
mov
lea
movsl
inc
outsl
cmp
lods
fstpl
mov
andb
dec
out
push
sbb
insb
push
or
stc
sub
dec
pop
enter
add
sub
lds
inc
dec
dec
outsb
cwtl
push
pop
jns
and
cmp
stos
icebp
cmp
fnsave
scas
inc
insb
pop
add
inc
adc
inc
pop
movsl
iret
inc
fwait
repnz
xchg
inc
outsl
test
loope
push
aas
or
cmp
sbbb
mov
call
push
inc
push
loop
in
push
dec
jecxz
lahf
cli
push
int
inc
lret
pop
ficomps
add
lret
sbb
cmpsl
xchg
mov
adc
aas
movsb
inc
xchg
pop
shl
and
leave
pop
push
sub
nop
in
jmp
sub
add
push
shll
fcmovbe
inc
loope
test
xchg
loopne
or
mov
ficomps
xchg
adc
inc
sub
pop
loopne
fiaddl
xor
xor
mov
div
cmp
jmp
ss
jnp
pop
xor
add
mov
mov
lods
lods
imulb
adc
cli
xor
add
lea
nop
mov
cld
enter
jg
dec
lods
daa
jnp
les
outsb
pop
mov
ljmp
subb
popf
add
fdivrs
dec
mov
and
les
mov
adc
divb
xchg
sarb
xlat
dec
lret
test
inc
mov
adcb
ret
sub
test
jo
ret
mov
sub
lea
mov
pusha
xlat
sub
or
test
add
aaa
mov
div
and
sbb
mov
cli
jge
sahf
das
jp
enter
cmp
jge
ja
jno
mov
xchg
jmp
ret
jb
mov
xchg
popf
pop
stos
jp
cmp
mov
arpl
std
and
xchg
adc
jmp
jbe
push
insl
jae
xchg
out
dec
rclb
data16
ja
jno
fldlg2
scas
out
roll
loopne
mov
xchg
jmp
mov
loope
inc
sbb
inc
aas
mov
test
jp
adc
es
lcall
xor
fcmovnbe
sub
lret
xor
lock
pop
add
cwtl
adc
or
js
sbb
fstpl
xor
imul
lret
pop
jg
dec
es
lret
sub
jae
hlt
movsl
cwtl
jnp
mov
fs
test
movsb
mov
pop
mov
mov
push
leave
mov
aam
sahf
xor
pop
cli
cli
add
jbe
adc
bnd
mov
pop
ljmp
cwtl
dec
cmpsb
into
mov
mov
xchg
nop
xchg
aam
in
add
push
pushf
xchg
aam
push
in
jmp
pop
xor
jge
or
in
xor
xor
sbb
add
aas
inc
xchg
roll
dec
mov
aas
cwtl
pop
push
stc
mov
imul
mov
add
or
adc
mov
xchg
fnstcw
ficoms
add
xor
mov
mov
lds
shl
inc
call
mov
sbb
push
push
sbb
out
mov
adc
cmp
inc
mov
lods
xchg
jp
scas
neg
scas
mov
cmpsb
cmpsl
cmp
adc
jecxz
xchg
inc
std
jno
pusha
jg
stos
cmp
loopne
roll
pushf
shr
jno
js
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
jmp
sbb
cmpsb
fs
mov
sbb
sbb
mov
adc
mov
sub
dec
out
push
jns
mov
lods
push
sub
cmp
push
enter
dec
incl
mov
xor
pusha
frstor
xchg
jnp
pop
jo
idivl
mov
mov
ja
and
popf
scas
pop
js
inc
gs
mov
sub
adc
and
push
stos
fwait
lahf
test
mov
pop
inc
iret
sti
stos
stos
loop
and
pop
cld
add
jnp
jns
out
xchg
push
mov
pop
push
fadd
lock
mov
jl
mov
cmpsl
add
pop
js
sub
nop
into
leave
pop
cmpsb
inc
lds
mov
incl
cli
add
push
jno
test
dec
push
mov
xchg
addl
sub
jb
adc
inc
add
sub
insl
rclb
repz
cs
inc
les
sub
inc
xchg
gs
xor
hlt
lcall
nop
adc
sbb
in
inc
mov
loope
insb
mov
movl
fcoml
pop
sahf
xchg
insb
cmp
loopne
clc
mov
scas
mov
stos
mov
pxor
pop
cmpb
push
lods
inc
inc
hlt
jo
frstor
fsubrl
mov
jge
xchg
sahf
push
jnp
loope
jnp
clc
mov
mov
hlt
jbe
sti
dec
pop
subl
cmpsl
mov
and
mov
xor
add
pushl
insl
sbb
jmp
arpl
adc
add
mov
add
in
sbb
shl
mov
adc
sbb
fldl
cwtl
or
and
mov
push
popf
iret
shrb
stos
call
lods
cs
in
and
inc
dec
inc
dec
in
and
daa
call
mov
aad
mov
lcall
imul
icebp
pusha
divb
mov
or
das
add
mov
cmpsl
hlt
adc
cmpsb
mov
std
xchg
into
outsb
cmp
sbb
mov
fnsetpm(287
xor
xchg
mov
es
cwtl
push
in
fisttps
cmp
fsubs
mov
push
mov
rcr
in
shlb
cs
dec
ss
xor
push
mov
lcall
inc
pop
and
adc
cli
std
xchg
or
lahf
mov
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
jmp
pop
jp
movsb
mov
fsubl
sbb
mov
sbb
or
stc
lcall
xchg
mov
jns
mov
add
je
in
movsl
adc
add
or
inc
dec
aam
testb
add
ret
imul
sbb
lcall
loop
cli
pop
shrl
insl
mov
sub
shr
js
outsl
jns
ds
xchg
push
iret
pop
sti
mov
jmp
cmp
jmp
adcb
ret
fucomip
nop
movsl
pop
mov
xor
jb
sub
insl
adc
mov
or
adc
xlat
scas
add
xchg
pop
jmp
mov
std
sub
jmp
cmpsl
push
call
mov
outsl
aad
cmp
jbe
xor
mov
cwtl
test
cld
sbb
test
inc
and
pop
out
sbb
out
shlb
fcmovnbe
mov
bound
xor
lahf
es
xchg
popf
je
mov
insl
push
lds
xchg
ret
xchg
rol
into
and
fmuls
pop
das
mov
scas
jae
cmpsl
insl
out
or
adc
dec
lods
gs
push
roll
stos
cli
outsb
call
jge
push
rclb
mov
les
xchg
or
out
loopne
lods
sahf
mov
inc
xchg
xchg
xlat
xor
dec
mov
mov
scas
xchg
mov
inc
push
mov
movsb
jb
in
jo
in
ljmp
push
lea
or
fadds
dec
repz
ret
test
in
into
xchg
adc
pop
or
sub
push
inc
xor
pushf
rorb
and
adc
jnp
lea
or
dec
std
je
dec
dec
in
daa
and
cmpsb
pop
data16
push
add
inc
mov
jne
leave
ficomps
pushf
adc
jg
push
add
aaa
add
jne
je
call
xlat
add
and
ret
dec
icebp
mov
cmpsl
cli
mov
pop
shr
icebp
mov
int3
jb
sbb
sbb
xchg
mov
negb
mov
sbbb
imul
clc
das
cmpsl
add
xor
repnz
pop
sarb
in
mov
and
ficoml
and
dec
or
adc
mov
movsl
jg
outsl
push
mov
mov
call
mov
sarb
ljmp
fsub
movsb
add
sbb
jb
or
dec
xchg
cmp
mov
test
rorb
or
mov
add
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
jmp
jno
xchg
mull
mov
ljmp
sbb
xchg
js
andl
push
aaa
push
pop
xchg
fdivrs
aas
inc
mov
cwtl
cmp
cmp
xchg
or
and
gs
pop
sti
fs
dec
iret
mov
or
sbb
int3
rclb
fs
int3
sahf
fwait
cmp
jle
jbe
mov
sub
dec
xchg
in
bound
mov
sub
decb
sbb
fstpt
imul
mov
push
in
inc
mov
std
fmuls
adc
pop
je
rclb
inc
sub
mov
inc
nop
cmp
cmp
mov
pop
mov
fldt
push
add
mov
mov
xchg
aaa
dec
mov
test
jns
add
lret
aam
fucom
in
cmpsb
push
inc
dec
outsl
xbegin
pop
mov
or
fidivrs
insl
push
dec
push
jge
jae
lahf
inc
inc
push
adc
mov
mov
dec
ljmp
test
jl
in
mov
dec
add
or
lret
mov
roll
lock
mov
hlt
jnp
sbb
cltd
stos
xchg
xchg
add
data16
shl
sbb
mov
xor
mov
test
mov
mov
xchg
xlat
sbb
les
jbe
inc
adcl
fcomp
and
and
pushf
push
scas
out
stos
fstps
pop
mov
mov
nop
jp
outsb
cltd
test
lret
filds
xchg
lds
shl
cmp
mov
shrl
mov
sar
pop
xor
scas
out
cs
ret
std
mov
lcall
call
clc
xor
adc
jb
lods
and
je
push
push
call
insb
adc
cmp
cmpsb
dec
fdivl
les
or
push
into
in
sub
mov
sub
adc
xchg
xchg
fwait
shrb
ret
add
jo
daa
xor
mov
fsubrl
call
dec
ret
xchg
test
xor
dec
xchg
fmulp
arpl
jge
stos
and
aaa
pushf
movsl
dec
cs
mov
sti
sub
cmp
popf
aas
xchg
aaa
pop
inc
nop
test
add
pop
test
push
stos
lretw
inc
sahf
add
dec
movl
mov
call
loop
push
in
pop
popa
shrb
add
leave
das
addr16
ret
cs
adc
pop
adc
int
and
cmp
cli
mov
jge
movl
mov
mov
sub
jmp
test
mov
push
addl
lcall
sub
add
cmp
es
fwait
mov
xchg
sub
inc
shll
pop
pop
lea
fnstsw
repnz
cltd
pop
pop
pop
out
push
jl
test
sbb
jge
add
mov
pop
test
sarb
in
xchg
xchg
adc
cld
movb
sarl
and
xchg
mov
mov
push
push
movsl
in
sub
aaa
xchg
insl
insl
adc
xchg
imul
inc
adc
out
xchg
stos
pop
mov
cmp
hlt
lcall
loopne
in
jp
push
adc
xor
comiss
sbb
adc
push
pop
das
push
pushf
lds
sbb
inc
fldenv
sbb
test
daa
cmp
rclb
dec
sti
imul
hlt
inc
mov
push
or
add
mov
icebp
cmp
mov
mov
cmp
adc
out
pop
xor
icebp
push
adc
xlat
mov
popf
or
add
inc
and
loop
scas
inc
jo
and
pop
cmp
test
jmp
aas
rcrl
push
inc
mov
cs
push
pop
mov
clc
iret
cmp
xchg
xlat
pop
or
bnd
cmpsl
push
mov
pop
mov
das
nop
xchg
ds
pop
pushf
mov
je
sbb
popa
mov
jge
out
sbb
push
test
std
ds
jmp
mov
inc
pop
add
cwtl
bound
inc
or
adc
mov
les
sbb
sub
add
mov
adc
sub
and
jmp
iret
lock
ljmp
mov
mov
sub
int
xchg
inc
mov
movsl
out
dec
sub
cmpsb
mov
scas
or
loopne
imulb
repz
stos
jne
shll
jl
jle
or
outsb
pop
sbb
inc
cmpsl
mov
rol
adc
das
leave
xor
push
or
sbb
movsl
mov
inc
add
fldt
rolb
xchg
pop
xor
lret
mov
icebp
pop
mov
mov
leave
sub
lea
adc
cmc
adc
push
pusha
xchg
pop
int
ss
call
dec
test
lret
mov
popf
dec
std
ja
sbb
dec
popa
fiadds
push
sub
jns,pn
and
das
lods
mov
shlb
dec
cld
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
jnp
push
jl
mov
push
jno
out
jl
sbb
sbb
clc
jmp
aam
std
fwait
scas
sbb
repz
aad
or
rol
cmp
sbb
insl
js
stc
cltd
sahf
add
sti
cmp
dec
dec
dec
movsb
mov
xchg
sahf
int3
mov
aas
cmpsb
sub
and
cwtl
fimull
pop
fisubrl
pop
mov
cmp
das
fbld
es
lahf
pop
loopne
jno
cli
aaa
xor
or
push
inc
movb
jbe
add
or
xchg
loop
aas
sbb
jno
adc
cs
push
ret
cmp
in
sub
inc
mov
sarl
dec
mov
cld
call
inc
into
jb
pop
add
negl
pop
or
aaa
lock
inc
adc
jae
std
sbb
push
adc
popa
call
add
test
push
pop
pop
xchg
hlt
jle
arpl
test
inc
shr
insl
push
mov
push
sub
aaa
dec
in
out
adc
inc
mov
rolb
mov
movsb
sbb
ret
dec
ret
push
inc
mov
or
inc
pop
mov
rorb
pop
into
aaa
push
and
push
sahf
test
jmp
and
pop
leave
enter
pop
dec
ret
in
dec
stos
imulb
xor
pop
dec
ljmp
add
or
inc
fiaddl
adcl
cwtl
out
jge
push
js
sub
lods
jb
subb
out
mov
mov
pop
lods
out
xor
and
push
shl
mov
lock
cmp
mov
mov
jmp
in
inc
push
aam
or
clc
lret
add
adc
out
push
dec
dec
es
inc
sbb
test
mov
stos
iret
mov
sbb
cs
aam
lods
adc
jmp
mov
sub
arpl
xor
and
mov
loope
fldt
mov
mov
xchg
adc
inc
gs
mov
cmp
ss
idivl
or
pop
addr16
jl
push
lods
adc
nop
movl
movl
movl
movl
movl
movl
movl
movl
push
jmp
dec
sub
sub
xor
mov
jno
sbb
cltd
jg
idivb
outsl
repnz
xor
data16
lahf
push
sarb
imul
ljmp
mov
cmp
mov
ds
cmp
or
cmp
xorl
cld
mov
add
icebp
push
dec
leave
mov
jne
add
xor
xor
or
jecxz
pop
mov
or
orb
mov
sub
mov
or
jle
mov
arpl
push
fcmovb
add
lret
sbb
fs
dec
scas
and
push
jmp
int
xor
mov
arpl
xor
addr16
xor
or
adc
mov
les
adc
in
cmp
sub
push
out
loopne
popw
aaa
mov
push
test
jg
pop
xor
shr
sti
cmp
sub
test
mov
mov
adc
mov
ss
es
pop
sub
mov
fcomi
fs
fidivrs
mov
stos
into
mov
jecxz
cmp
lods
or
inc
sbb
sub
dec
cli
add
adc
add
inc
dec
rcll
jge
je
test
aaa
jge
rolb
add
psubq
in
pop
mov
enter
shrl
jle
mov
dec
push
clc
test
jb
jb
xchg
jbe
inc
jge
push
movsl
mov
or
xchg
sahf
sti
sti
outsb
aas
aas
inc
xor
sbb
lds
outsb
popa
stc
pop
inc
cmp
imul
test
mov
add
push
push
inc
mov
lcall
jl
enter
adc
addr16
daa
lods
dec
int
outsb
or
scas
movsl
push
inc
jb
fdivrp
xchg
pop
cmc
inc
pop
jp
popf
push
cmc
add
aad
cwtl
fstpt
pop
xchg
in
jmp
inc
pop
and
xor
add
xor
jmp
jp
mov
lea
iret
xchg
pushf
cmpsl
mov
imul
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
jmp
lds
fisubrs
sbb
pusha
mov
sub
jno
sbb
imul
bound
mov
outsl
xchg
adc
out
fisttpll
xor
pop
mov
mov
mov
mov
daa
roll
jbe
pop
rclb
int3
and
shrb
xchg
and
xchg
pushf
add
pop
out
loope
xor
xchg
ljmp
iret
adc
mov
mov
add
xor
xchg
into
cwtl
xor
cmp
aam
sarl
in
test
in
enter
hlt
cmpsl
gs
and
rsqrtps
stos
into
ret
or
fcoms
mov
or
inc
add
loopne
xor
loopne
adcb
jmp
divb
cmp
sbb
out
in
rol
out
shl
fldl
mov
sbb
cld
sbb
adc
pop
outsb
mov
mov
pushf
push
jae
xor
loop
cmp
cltd
sti
jp
adc
mov
jle
add
mov
adc
or
dec
xor
sub
lcall
les
into
xor
add
imul
or
movsb
cs
adc
aas
sub
inc
xor
outsb
adc
bound
mov
rcll
popf
push
jns
shrb
int3
or
es
sbb
pop
inc
aad
stos
fisubs
push
dec
movsl
inc
mov
imul
push
xchg
inc
inc
mov
or
out
lret
daa
push
inc
dec
je
jg
push
pop
ljmp
out
js
xor
out
bound
shrb
and
sti
fildl
mov
and
adcl
mov
rolb
jnp
jno
int3
sbb
push
pop
mov
dec
mov
shlb
not
or
std
dec
mov
pop
dec
repnz
dec
out
or
dec
lock
push
push
aam
int3
adc
pop
mov
mov
ficoml
aam
andl
xor
in
sahf
jecxz
cld
sbb
dec
mov
ljmpw
inc
sbb
lcall
fdivrs
cmp
cmpsl
inc
subl
push
les
add
enter
inc
add
add
data16
or
add
cltd
adc
cmp
jne
cmp
je
mov
jmp
loope
lods
aam
mov
gs
imulb
sbb
sbb
js
imul
add
sbb
inc
mov
mov
inc
mov
jle
xor
adc
out
scas
jmp
mov
xchg
mov
test
negl
fwait
dec
mov
mov
stos
rolb
or
or
sbb
mov
jp
push
mov
and
insb
push
loopne
pop
stos
in
loop
mov
push
jbe
outsb
pusha
lods
xchg
cmpsl
push
mov
sbb
jecxz
rclb
xchg
fsubl
adc
mov
mov
aam
inc
pop
add
xor
sti
ljmp
int3
add
dec
outsb
sub
mov
test
rcll
xor
mov
enter
sbb
mov
dec
mov
testb
repnz
sahf
insl
das
jbe
int3
jge
clc
ficompl
lds
or
enter
mov
jbe
and
lcall
std
inc
daa
repz
data16
scas
hlt
lcall
lahf
cmpsb
insb
test
pop
insl
ds
mov
test
stc
stc
fidivrs
shrb
sub
cld
mov
decl
xchg
shlb
mov
nop
int3
pop
sub
dec
jb
and
push
data16
jne
mov
pop
jl
repz
sbb
rclb
pop
dec
and
call
jp
fadds
ret
mov
pop
iret
mov
test
test
pop
mov
aaa
push
test
jns
mov
mov
cmp
fstps
cmpsb
loope
sbb
lahf
aad
xchg
ret
xor
repnz
dec
push
add
mov
inc
push
or
and
dec
iret
sti
inc
inc
mov
lods
les
inc
scas
int
push
push
dec
pop
or
or
in
mov
dec
out
cmp
fwait
inc
mov
ficoms
jae
mov
push
xlat
cli
push
push
addl
mov
add
sub
call
imul
loope
adc
cmp
fimull
sub
cli
aas
inc
mov
mov
mov
add
adc
or
mov
jmp
pop
and
xor
pop
sbb
jl
push
sbb
sbb
jg
fsub
scas
loopne
cmp
das
fnstenv
sahf
add
cmpl
movsl
push
dec
sbb
test
cmovg
out
addr16
call
clc
fwait
push
pop
mov
push
or
setb
das
jecxz
xchg
jge
lret
jmp
in
bound
jo
xchg
and
hlt
sub
xchg
inc
lcall
pop
mov
push
in
sti
mov
xchg
mov
lock
pop
mov
and
jecxz
scas
mov
cwtl
and
dec
lcall
les
mov
sbb
lahf
out
imul
pop
pusha
mov
pcmpeqw
mov
icebp
aas
imul
xor
cmp
fst
sbb
arpl
adc
pop
sbb
xchg
sbb
rorl
inc
scas
mov
out
mov
push
sbb
sub
add
mov
inc
std
scas
ss
add
mov
call
mov
rcll
shr
loope
adc
and
adc
out
or
jge
xlat
es
pop
push
fcmove
inc
jp
push
inc
xor
push
xchg
mov
pushl
push
xlat
pop
insb
add
sti
jmp
call
jns
add
iret
mov
lar
shl
add
sahf
push
xor
rolb
adc
lcall
fidivrs
pop
cmp
and
or
adc
ljmp
inc
mov
push
jno
stos
push
out
lock
test
dec
aad
stos
dec
lea
ss
and
mov
test
jnp
sbb
loop
sti
or
add
sar
out
lock
popa
sbb
arpl
push
inc
push
testl
stos
push
in
imul
inc
mov
adc
dec
rcll
leave
and
xor
xor
mov
insb
stc
push
adc
les
bound
pop
out
push
rclb
lret
xchg
fdivr
insl
or
pop
pop
in
sahf
cmpsb
inc
push
mov
hlt
sub
les
pop
ds
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
jmp
mov
push
jle
inc
inc
jne
xchg
in
push
data16
jno
sbb
sub
sbb
push
xchg
xor
and
aas
out
shlb
dec
hlt
sub
ret
stos
cmp
push
xchg
das
scas
push
addr16
roll
dec
push
ret
jg
add
pop
ss
sti
jno
mov
cmp
xchg
outsl
jge
sbb
and
stos
ljmp
std
pop
pop
bound
pop
flds
mov
jns
jb
aaa
pop
movsb
aad
mov
mov
pop
jno
mov
cmp
lds
and
sbb
add
jg
pop
inc
fisttpl
jmp
push
enter
and
mov
inc
test
fsubp
iret
test
out
xchg
lods
ret
mov
dec
jns
inc
cmpsb
lods
nop
fwait
mov
fwait
je
push
mov
dec
mov
sbb
xor
test
cmc
xchg
cmpsl
ds
fs
or
add
and
pop
xor
fs
js
pop
cs
add
ucomiss
stc
mov
fwait
lods
subl
pop
dec
fadd
push
sbb
rep
sub
inc
pop
rcrb
sbb
into
cs
leave
test
in
mov
ficompl
js,pn
adc
mov
pushf
sbb
pop
das
mov
lds
in
xorl
pop
adc
test
jp
js
cltd
cli
lahf
mov
insl
mov
jbe
xlat
cmp
jb
mov
insl
xchg
mov
ret
stos
inc
sub
bound
push
in
push
and
cmp
aas
jbe
jae
stos
mov
fisubrl
mov
mov
xor
lods
add
or
call
sahf
fs
lret
or
push
jb
dec
jmp
add
xlat
loopne
or
xchg
mov
int
or
out
movsl
addr16
stos
jl
mov
orb
ret
jae
mov
xchg
mov
out
xor
fwait
ja
pushf
mov
icebp
pushf
mov
dec
push
adc
pop
inc
mov
cmp
je
jl
enter
jecxz
lods
inc
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
jmp
mov
xchg
cli
push
fistpl
jge,pn
stos
ret
xlat
movsl
mov
jno
sbb
sbb
cmp
dec
repz
add
repz
dec
outsl
fst
mov
test
shll
pusha
xor
negl
je
imul
pop
fnstsw
stos
mov
inc
das
or
add
lea
dec
dec
hlt
lock
inc
scas
ret
test
int
mov
pop
push
dec
or
lods
ffree
jb
xchg
daa
ja
and
dec
lods
shll
push
push
bound
ret
popf
xchg
cs
stos
add
movsl
cmpsl
add
inc
in
cld
std
shl
pusha
pushf
aam
adc
lea
cmp
push
enter
push
jbe
leave
push
out
mov
xorl
divb
rolb
lcall
lods
sub
and
sub
push
aad
xchg
push
push
dec
dec
repnz
cmp
aad
dec
lods
xlat
lods
xchg
add
push
and
push
add
pushf
call
xchg
sub
and
xchg
jae
iret
mov
mov
mov
data16
pop
movsl
test
xchg
xor
dec
add
loop
daa
insb
or
lret
loop
adc
rorl
cmp
jg
loop
inc
hlt
fstps
nop
aaa
sub
mov
push
dec
stos
sub
in
clc
test
sub
mov
ret
ja
sbb
inc
ret
dec
xchg
mov
and
push
jae,pt
aas
int
aad
sub
loope
push
mov
dec
sbbl
mov
add
adc
scas
mov
xchg
mov
inc
jae
xchg
push
inc
test
mov
and
add
call
fdivrs
sub
scas
inc
sar
ficoms
add
and
outsl
scas
pop
mov
xor
popf
mov
inc
inc
push
lret
js
or
inc
or
mov
mov
or
inc
cmp
push
gs
js
xchg
lds
xchg
mov
cmp
cmp
lods
lds
sahf
xchg
push
sbb
imul
dec
jb
ss
pop
xchg
loopne
inc
sbb
imul
cmp
sbb
add
adc
push
push
call
mov
sub
push
pop
jmp
jae
mov
sbb
jo
arpl
jle
pop
sbb
jno
sbb
es
stc
fidivrs
push
insb
mov
fstpt
std
in
in
test
stc
xchg
popa
mov
push
mov
mov
mov
mov
pop
push
out
push
add
dec
xor
dec
sub
jns
pop
fistl
bnd
dec
mov
sub
mov
movsl
enter
cmpsb
stos
gs
cltd
insl
aam
sbb
xor
xor
frstor
dec
add
insb
mov
jb
hlt
test
mov
mov
sub
outsl
dec
in
shr
insb
repz
mov
sbbl
jae
shl
in
mov
push
mov
ret
ret
ss
das
pop
out
lcall
fildl
in
inc
jb
sahf
decb
aam
mov
js
xchg
call
and
cld
call
pop
fsubrs
rorb
cmpsb
pop
cld
out
jmp
nop
out
xor
scas
jp
pop
push
jnp
lret
and
xor
jl
pop
jecxz
scas
adc
lods
add
mov
mov
popf
ds
bound
add
nop
movsb
cmp
ljmp
push
or
cli
pop
clc
loope
testb
mov
outsl
popf
scas
out
xor
xor
sub
push
lea
fucom
jae
xchg
mov
xchg
lcall
fwait
xor
push
push
sub
mov
xchg
mov
inc
push
repnz
lret
adc
adc
aas
je
jg
mov
adc
pop
push
sti
in
jb
pop
out
out
je
pop
aad
add
or
mov
jmp
and
lock
sbb
les
lock
loope
rcll
fucomp
ficompl
loope
dec
dec
sub
inc
push
cmp
inc
sbb
stos
outsl
jns
or
lret
gs
test
mov
ss
jmp
push
movsl
cs
fidivrs
dec
pop
or
das
test
xor
mov
daa
jmp
jns
bound
popa
mov
imull
inc
fs
lret
imul
out
and
dec
sub
loopne
and
dec
lods
sub
adc
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
jmp
icebp
not
xchg
into
xor
jbe
cmc
gs
scas
pop
sbb
stos
adc
sbb
or
loope
andb
in
int
sub
jbe
mov
cmp
arpl
mov
les
and
mov
into
inc
cld
cmpsl
mov
test
hlt
popa
scas
push
jecxz
cmp
push
loop
lahf
pop
push
not
movsb
jl
jno
lret
adc
rol
mov
cld
bound
adc
mov
inc
push
jl
cmp
and
lahf
sbb
mov
es
mov
mov
je
cld
fbstp
xchg
mov
aam
xor
mov
xlat
mov
mov
add
jmp
push
imul
mov
andl
add
mov
lds
cmp
pop
or
scas
popa
dec
std
stos
add
add
mov
shrl
inc
mov
sub
loop
mov
jae
enter
out
cwtl
shrl
mov
sub
inc
bound
popf
rorl
xor
sub
inc
adc
sbb
pusha
cmp
sahf
pop
mov
add
leave
dec
add
lret
rcll
sti
test
sub
sub
inc
xor
xchg
sti
cltd
dec
enter
xchg
add
dec
xor
pop
movsl
sbb
mov
mov
jmp
xor
test
dec
lock
and
popa
mov
imul
imul
in
inc
cmp
jnp
lahf
cmp
mov
daa
mov
xchg
xchg
mov
ss
movsb
mov
pushf
aad
cwtl
adc
push
xor
pop
mov
xchg
and
pop
push
pusha
mov
push
or
jp
shll
popf
cmp
mov
jmp
iret
mov
jo
and
xor
cli
jmp
mov
sbb
idivl
pop
clc
mov
lahf
push
cmc
adc
pop
add
dec
popa
jmp
inc
mov
stc
loopne
hlt
popl
repz
lods
jp
and
and
xor
sbb
scas
orl
testl
inc
mov
es
daa
mov
je
test
cs
sbb
pop
imul
xor
inc
hlt
ljmp
enter
stos
pushf
icebp
xchg
loope
mov
xchg
pop
adc
xor
aad
dec
mov
test
cmp
repnz
dec
push
jle
mov
scas
xchg
xor
inc
movsl
mov
fadd
push
popa
push
insb
sti
push
pop
std
mov
xor
cwtl
jbe
mov
push
dec
fidivs
imul
lahf
daa
sub
paddd
xor
push
or
add
xchg
sbb
push
into
jge
dec
pop
jo
lods
mov
shl
in
les
shll
mov
jno
int
leave
repnz
inc
mov
mov
inc
jo
stos
inc
std
xor
adc
enter
sbb
dec
mov
pop
jl
scas
sahf
rcll
and
divl
je
rol
daa
mov
cmp
jmp
and
shll
imul
or
push
in
stos
test
pop
jns
add
pusha
mov
pushf
iret
sub
pop
btr
enter
add
push
inc
mov
and
mov
ret
out
je
clc
push
xchg
sub
inc
clc
mov
mov
mov
add
mov
adc
mov
push
push
or
or
jmp
cmp
sahf
cmp
mov
inc
push
sbb
stos
adc
sbb
push
push
sub
inc
jmp
aaa
lahf
sbb
add
arpl
pop
popf
cld
addr16
push
lock
jmp
cmp
notl
sarl
sub
enter
inc
pop
jbe
mov
cwtl
add
pop
dec
int
cmpsl
enter
test
icebp
cli
xchg
int3
cmc
sub
fs
push
xor
pop
inc
fmull
aam
cmp
ror
push
pop
cmp
data16
pop
iret
ja
loope
jge
jbe
outsb
outsb
test
je
shlb
dec
add
or
sub
and
gs
cmc
sub
dec
and
lret
inc
jg
sti
or
push
sub
lods
mov
pop
xor
xchg
cmp
xchg
inc
cmp
and
xchg
pop
lcall
test
jne
xor
add
xor
rol
push
or
jmp
add
test
jl
cmp
ljmp
mov
movsb
ljmp
push
sub
and
jo
scas
push
cmp
fiadds
push
jmp
imulb
cmp
inc
or
adc
mov
imul
shrb
sbb
gs
rclb
cmp
jecxz
int
and
mov
jb
and
loopne
push
pop
xchg
jge
fsubr
pop
jno
ljmp
mov
jmp
ret
jl
fsts
xchg
test
mov
xchg
ficoml
lea
in
sahf
jno
cmp
rorb
xorb
jno
xorl
mov
cmp
xchg
mov
aas
ja
movsb
lret
lea
cs
adc
lret
aas
mov
inc
das
dec
mov
jl
lret
lock
mov
push
xchg
flds
aam
ljmp
insb
xor
mov
outsb
notb
pop
and
mov
jb
dec
xor
mov
or
adc
sti
dec
mov
fldt
fxtract
inc
xlat
lret
fbld
sbb
fnstcw
cwtl
addr16
mov
xchg
cld
adc
inc
pop
or
cwtl
lods
aad
mov
cli
bound
mov
add
jae
cmp
dec
or
inc
fstl
test
pop
dec
ficoml
sbb
inc
test
push
jecxz
test
jmp
insb
mov
aaa
jg
testl
daa
ret
int
pop
out
or
popa
mov
stos
bound
in
lahf
push
cmp
mov
sbb
daa
sbb
test
pop
xor
iret
xor
stos
adc
loop
sub
das
adc
xchg
clc
aaa
jle
jns
sub
andb
fcmovu
xchg
xor
jb
sub
or
ret
dec
push
adc
stos
loop
jae
leave
mov
mov
ds
fisubs
popf
or
mov
sub
inc
dec
jns
jg
add
fmuls
xlat
mov
push
push
cli
scas
pop
out
cmpsb
clc
push
dec
cmp
and
test
mov
inc
sub
or
add
mov
daa
je
push
dec
adc
dec
xor
fnstenv
sbb
movsl
loop
mov
adc
imul
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
jmp
push
push
jbe
jb
mov
push
xchg
pop
jle
dec
sbb
stos
adc
sbb
cmp
enter
pop
clc
xchg
in
fcmove
mov
loope
fdivs
andl
mov
jno
jbe
jg
lock
mov
leave
sbb
ds
sbb
orl
aad
jle
pop
cmp
mov
ds
cmp
data16
xchg
popa
mov
lods
mov
xchg
fisttpl
cltd
enter
ret
dec
rorb
fdivr
fsubrl
mov
inc
inc
push
insl
inc
sub
hlt
icebp
add
push
aad
pop
cmc
sbb
xlat
stos
sbbb
mov
mov
rorl
push
or
jge
int3
push
loope
mov
enter
out
add
pop
mov
and
ds
addr16
cmp
pop
jle
mov
movsb
arpl
mov
adc
inc
push
divb
mov
xchg
ret
insb
sub
out
xor
mov
sbb
sarb
add
sbbl
lahf
jle
rorb
out
imul
dec
pop
mov
stos
push
adc
gs
mov
mov
xor
or
pop
leave
inc
addps
xchg
xor
sbb
sub
xor
jbe
in
push
cmp
mull
adc
mov
mov
or
and
adc
rclb
xchg
out
stos
jmp
cmp
jge
orl
sahf
and
xor
mov
sub
scas
test
jecxz
enter
inc
sbb
js
cmpb
xchg
sub
bound
mov
nop
mov
call
mov
adc
adc
mov
sbb
pop
inc
jo
icebp
ljmp
xchg
testl
imul
jp
iret
stos
movsl
and
mov
sub
mov
xchg
call
jg
arpl
loope
jb
mov
call
popf
pop
push
cwtl
sub
xchg
gs
push
cli
pushf
mov
test
stc
stos
repz
ds
xchg
sub
gs
lock
mov
jge
mov
ljmp
ja
das
push
sbb
lret
inc
xor
jp
mov
and
pushf
shll
mov
out
xchg
lcall
adc
fxch
lret
mov
aad
std
fmulp
aam
inc
jl
sahf
push
sbb
rol
loope
repz
cmpsl
sbb
push
rolb
add
loope
aas
dec
es
nopl
inc
pop
xlat
xchg
test
fwait
les
scas
or
icebp
fwait
pop
push
sub
leave
mov
cmp
xchg
cmp
xor
repz
mov
jno
add
les
add
stos
pop
push
int
adc
sbb
xlat
in
push
ss
jecxz
inc
test
cmp
add
and
outsb
jb
sti
repz
adc
jns
fwait
xor
popa
pop
outsl
mov
lret
cmp
pusha
dec
jns
pop
arpl
sub
mov
shl
adc
push
sbb
cmpsl
add
pop
dec
imul
stos
sub
insb
dec
inc
shl
xor
stc
lods
data16
dec
sbb
dec
les
mov
and
mov
jo
and
outsb
xchg
icebp
mov
sub
fwait
pop
xchg
int3
test
loopne
cmp
add
fadd
pushf
loope
sbb
dec
sbb
ret
sub
cmc
imul
enter
in
jl
stos
adc
push
push
push
push
call
mov
mov
jmp
or
sbb
jmp
sub
stos
adc
sbb
dec
into
push
imul
add
sub
cmp
arpl
nop
pop
loopne
insl
xchg
pop
repnz
pushf
push
int3
aaa
pop
push
xchg
in
ss
xchg
stos
insb
aad
mov
push
inc
sub
aam
cmp
mov
iret
xchg
add
jae
push
pop
jmp
fcompl
int3
add
push
xor
enter
insb
dec
movsb
stos
xor
std
xor
pushf
loope
inc
pop
aaa
incb
pushf
test
sti
pop
fs
inc
xchg
cld
push
pop
cmp
push
ss
jle
jbe
int3
sbb
pop
into
aad
stos
dec
paddw
pushf
add
xor
mov
pop
out
mov
divl
outsb
xor
lods
stc
xchg
push
scas
inc
pop
test
aas
inc
push
jmp
je
clc
cld
es
out
push
lds
sbb
mov
cmpsb
mov
fisubl
mov
andb
mov
xchg
inc
xorl
stos
mov
jp
inc
pushf
dec
xchg
fildl
xchg
xchg
cwtl
or
xor
pop
sbb
fsubs
mov
or
into
add
push
pusha
fildl
mov
out
pop
push
rcrb
xchg
jecxz
inc
fwait
add
pop
hlt
adc
inc
hlt
inc
rcll
adc
push
jle
or
fimuls
movsb
xor
sub
out
out
xchg
cmp
pop
cmpsb
dec
pop
mov
int
inc
push
sbb
stos
inc
or
cmpsl
dec
call
or
scas
outsl
cmp
cltd
cmp
and
shl
icebp
divl
cmp
pop
daa
mov
clc
lret
outsb
push
ss
mov
push
dec
xor
pop
or
shr
stc
rclb
loope
xchg
lret
lods
jne
jne
popa
sub
sbb
or
sbb
adc
inc
xchg
jg
ret
add
adc
mov
push
mov
jg
inc
in
outsl
xchg
fsubrs
mov
push
in
movsl
test
jecxz
mov
data16
in
sub
cmp
lret
cld
leave
aad
testl
clc
cltd
cmc
xchg
xor
sub
cld
xchg
and
push
les
push
outsb
mov
enter
mov
test
fidivrl
arpl
mov
push
dec
stc
lock
rclb
mov
cld
pop
mov
sti
mov
outsb
inc
arpl
popa
sub
sbb
mov
dec
pop
sbb
lret
cld
sahf
sbb
bound
xchg
sbb
pushf
and
jne
push
test
mov
sbb
pop
sbb
xchg
or
mov
pop
xchg
dec
pop
lea
xlat
inc
popa
mov
rcll
sub
push
cmpsl
shlb
pop
popf
ss
out
mov
mov
push
xchg
mov
das
js
dec
mov
test
mov
mov
mov
sahf
cli
pop
sub
stc
inc
shlb
mov
movsl
push
aaa
clc
jbe
repnz
rcll
fistpll
jmp
jmp
dec
push
int3
subl
ljmpw
and
add
paddb
aaa
or
mov
lods
cmp
mov
repnz
cli
cmpsb
insl
out
mov
xor
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
jmp
out
inc
jp
jp
sub
xchg
cmp
fisttps
idivl
sbb
stos
adc
sbb
dec
int3
bound
lahf
sbb
mov
pop
dec
ja
inc
out
ss
jb
out
and
shrl
inc
inc
out
int3
lcall
jle
lret
and
fists
insb
loop
andb
sub
sub
jns
pop
jo
inc
dec
lret
or
out
jle
stos
popf
iret
imul
mov
or
pop
dec
fs
push
repnz
inc
or
das
ds
cmp
fistpll
cltd
std
repnz
push
cmp
pop
das
fcmovb
push
shrb
insl
sarl
fsubrl
push
adc
mov
aaa
insl
dec
push
aaa
pop
cmp
mov
mov
push
and
jge
data16
in
or
xchg
xor
push
lret
dec
adcl
jmp
and
in
pop
jl
mov
icebp
fsubl
sub
frstor
and
js
cmpsl
cld
mov
and
pop
sbb
pop
mov
les
xchg
std
sbb
stc
and
xchg
and
jne
bound
nop
xchg
iret
int3
push
dec
cmp
jmp
stos
out
add
jl
xor
mov
mov
or
sbb
daa
pop
jnp
or
xlat
dec
adcl
shll
inc
and
jno
and
and
mov
mov
inc
or
testb
sbb
outsb
cs
insb
add
or
insb
pop
mov
xor
xlat
aas
pop
push
xor
icebp
mov
mov
push
push
out
dec
mov
popa
lock
out
test
xlat
push
dec
mov
add
push
gs
lcall
and
popf
test
aad
fsubrs
sub
and
sar
push
jg
inc
movsl
and
mov
push
jg
inc
cmpsl
data16
clc
orb
xor
dec
xor
ret
mov
std
push
push
jmp
xchg
les
mov
mov
pop
arpl
pop
pop
and
cmpsl
xor
ret
repz
mov
xchg
xor
jg
std
clc
mov
mov
cmp
ret
stos
mov
mov
or
scas
insb
insb
cmc
mov
or
js
xchg
addr16
push
add
mov
sub
call
mov
push
mov
lods
pop
xchg
out
or
sbb
push
in
mov
lods
add
fs
adc
push
rcr
ja
sbb
sub
sub
sbbl
jecxz
mov
mov
scas
cmp
jo
mov
jmp
sub
pop
mov
mov
mov
js
jp
sub
jnp
or
jmp
xchg
notb
mov
lds
cld
iret
pop
in
mov
or
xlat
xchg
xchg
sbb
fcmovne
add
jecxz
push
dec
sub
imul
daa
cmp
xchg
push
mov
fsubrp
and
cwtl
add
popa
add
jo
aad
sbb
adc
mov
xchg
mov
ja
xor
pandn
stc
cld
insl
xchg
into
lods
push
xchg
add
aas
inc
push
xor
cmpsb
fs
dec
cltd
mov
enter
fistpll
lahf
mov
ss
iret
in
lods
mov
leave
test
into
sub
addr16
lds
xor
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shl
xor
shr
or
xor
or
mov
jmp
mov
fcompl
stos
dec
ljmp
stos
adc
sbb
and
inc
push
andb
dec
fstpl
mov
adc
sub
inc
filds
mov
sub
rorb
inc
insb
push
push
addb
jno
scas
popf
push
hlt
mov
jo
sti
push
test
arpl
push
sub
bound
xchg
or
fcompl
test
and
add
cmp
mov
dec
jns
sub
pop
jno
ret
dec
loopne
insb
jl
movsl
dec
xchg
loop
fwait
push
mov
popf
lcall
xchg
sbb
push
mov
dec
sub
push
push
leave
sub
add
ret
lock
fisubrl
xchg
sbbl
pop
nop
es
cmovo
lods
jb
push
hlt
sti
xchg
sub
pop
and
pop
gs
xchg
roll
mov
cmp
jnp
aas
push
xchg
ljmp
xor
mov
pusha
jmp
xchg
rorl
fs
mov
je
push
insb
mov
leave
sub
rorl
jns
add
loope
xchg
push
js
gs
jmp
fistps
and
push
out
mov
pop
xchg
mov
pushf
imul
push
cmp
mov
inc
lcall
or
ret
stos
shl
das
push
notb
jg
push
and
gs
adc
push
out
inc
mov
cmp
xchg
cmp
dec
add
popf
dec
cmp
popf
ljmp
push
xor
sbb
pusha
and
testb
nop
in
add
scas
lahf
cmp
lret
dec
and
lods
jecxz
daa
cld
push
insb
cs
out
xchg
mov
sarb
fdivrs
xchg
sbb
sbb
pop
adc
inc
sub
test
jge
xchg
lret
cmp
sti
inc
sbb
add
mov
aam
sbb
aas
cwtl
mov
sbb
push
neg
sti
std
ret
xorl
pop
push
icebp
mov
push
cmp
adc
jmp
jg
pushf
inc
cmc
shl
cmc
sbb
jno
clc
test
mov
rcrb
jp,pt
xchg
in
test
add
dec
and
adc
pushf
jl
loope
loope
nop
stos
mov
inc
xorl
lods
pop
mov
jmp
jp
add
hlt
cmp
and
mov
icebp
inc
fs
add
xor
push
dec
loopne
push
fwait
je
mov
loope
pop
sub
push
adc
gs
sub
nop
rcll
int
xchg
mov
cmp
mul
push
std
push
das
pop
mov
pop
cltd
ss
mov
pop
sbb
arpl
sti
repz
jno
add
icebp
hlt
testb
sbb
repz
inc
inc
inc
jo
mov
outsl
mov
jno
and
aaa
ljmp
mov
psubw
mov
cmp
lods
lret
and
add
cmp
fs
add
mov
jp
mov
pop
mov
loope
lock
lea
arpl
aam
aas
add
std
adc
pop
leave
cmpsl
or
xchg
push
stos
cli
mov
sub
push
jg
xlat
pop
jno
lahf
jge
mov
jae
adc
xor
idivl
and
cmp
rcrl
fcmovne
loop
mov
test
mov
inc
bnd
or
adc
fistpll
in
cld
fisttps
xchg
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
jmp
jnp
xlat
dec
sarl
jnp
add
lds
movsl
mov
rclb
sbb
mov
cmp
jmp
push
or
or
stos
push
or
add
mov
or
add
dec
repz
or
mov
add
stc
mov
mov
xor
and
roll
jno
dec
shlb
icebp
arpl
push
jo
xchg
sbb
push
sub
iret
mov
dec
push
push
inc
sti
pop
inc
ja
jne
scas
data16
mov
sub
or
mov
push
inc
sbb
movsb
add
je
int3
ja
call
insb
xchg
aam
mov
pop
clc
cmp
sti
rol
xor
ror
xchg
pop
fwait
mov
aaa
cwtl
or
jnp
add
in
ret
shl
scas
daa
or
inc
mov
push
jle
fs
push
dec
jle
and
vmwrite
mov
arpl
adc
pop
cmc
insb
jmp
adc
and
mov
lahf
test
mov
adc
xchg
mov
pop
mov
bound
lret
int3
adc
mov
cs
in
in
mov
cmpsb
mov
fwait
movsb
inc
js
cli
jl
lret
stos
ljmp
je
sbb
enter
adc
aam
loope
loop
push
stos
outsb
lods
imul
pop
imul
jns
xchg
jbe
bswap
push
fwait
and
decb
pusha
repnz
lret
xor
adc
or
out
imul
jg
pop
es
loop
and
lcall
insb
xchg
iret
lods
stos
in
fbld
stc
loopne
cmp
ds
das
push
and
pop
int
or
xlat
dec
cmp
inc
out
test
add
adc
or
cs
test
xor
cli
jmp
stc
inc
and
movsl
add
mov
xchg
rcl
adc
mov
jl
inc
sub
pop
sbb
adc
xlat
pop
aaa
scas
into
jle
loope
cmpb
jo
sub
mov
mov
pop
mov
mov
rcrb
pop
inc
mov
loop
pop
in
lods
int3
pop
xchg
adc
push
stos
leave
stc
aas
xlat
ss
or
jo
test
add
insl
ds
les
adc
mov
pop
dec
nop
or
and
jmp
jnp
add
cmp
lret
das
icebp
add
jle
or
mov
stc
ss
dec
dec
testb
jmp
or
pop
pop
icebp
mov
enter
lods
fmul
lds
add
xor
add
dec
inc
arpl
out
addb
inc
imul
cmp
stc
jge
pop
jecxz
sbb
push
xchg
push
fstpt
mov
lcall
sbb
out
and
and
jb
dec
push
add
pop
dec
inc
jp
je
ss
fadds
daa
jno
sub
dec
adc
jb
pop
cmp
add
or
dec
cmp
dec
ljmp
adc
mov
ljmp
daa
test
loopne
jp
jo
jo
pushl
cmp
jl
scas
inc
mov
and
mov
mov
gs
gs
jp
dec
mov
push
sahf
cmp
xchg
adc
and
mov
clc
add
add
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
jmp
push
mov
dec
sub
ljmp
enter
and
sbb
adc
sbb
adc
int
dec
fdivr
into
cmp
cli
adc
xor
add
pop
rcr
sub
lret
or
arpl
mov
jg
inc
xor
mov
adc
icebp
xor
ja
jle
or
movsb
cmp
pop
js
dec
mov
dec
fsubs
or
bound
dec
and
mov
testl
or
aaa
outsl
nop
scas
adc
daa
fnstsw
movsb
popa
lea
ljmp
jb
adc
xchg
xor
mov
jmp
jbe
cli
loopne
aaa
mov
dec
ljmp
or
cmpsb
dec
rolb
insl
dec
xchg
adc
cmp
add
negb
test
dec
data16
push
sub
ss
call
iret
push
adc
cltd
daa
popf
cmp
sub
sub
aad
add
pop
cmp
sbb
jmp
push
hlt
mov
sub
aas
xor
xlat
or
lret
sbb
cmp
repz
dec
xchg
sub
xor
icebp
sub
mov
fwait
jmp
test
pop
adc
ss
fidivrl
sub
mov
fisubl
pop
mov
shlb
sbb
mov
icebp
sub
lret
dec
mov
jg
dec
xchg
es
push
iret
sbb
inc
mov
push
aas
stos
test
xchg
jo
roll
ss
push
lds
xchg
mov
rcrl
dec
shr
das
testl
and
add
mov
das
mov
lret
lods
xchg
pop
out
lret
push
xchg
scas
or
push
xor
mov
xor
das
dec
popa
cwtl
xchg
loop
mov
shr
jns
stos
pop
call
ds
punpckhwd
pop
mov
mov
inc
cmp
pusha
cli
rcr
xchg
sbbb
in
int
orb
repnz
div
fadds
mov
inc
arpl
addb
ror
xchg
mov
andb
and
and
sbb
js
sub
xchg
mov
rcll
fwait
push
xchg
sti
cmc
andl
sub
xor
sbb
sub
out
mov
mov
dec
stos
ss
xchg
fsubs
sbb
jnp
lret
in
mov
addb
sub
add
cmpsl
loope
lock
mov
mov
push
inc
pusha
aas
pusha
fwait
xor
dec
mov
push
push
out
loopne
hlt
bsf
hlt
mov
mov
std
ficoms
out
fisttps
lea
sub
push
dec
lret
movsb
lock
pushf
in
mov
out
sub
mov
mov
pxor
fnstsw
lcall
aam
add
in
arpl
pop
or
jg
adc
inc
adc
sarb
add
dec
and
pop
cmp
adc
dec
push
out
inc
inc
in
cmp
ficoml
leave
and
mov
nop
sbb
xorb
push
arpl
push
out
or
mov
add
jae
cmp
in
js
jne
xor
fwait
pop
add
gs
jb
repnz
imul
push
popf
dec
jns
notl
repz
roll
nop
dec
in
add
outsl
scas
xchg
or
mov
imul
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
jmp
lret
mov
pop
inc
repnz
rcrl
mov
sbb
adc
sbb
repnz
stos
ret
mov
cmp
adc
out
nop
dec
out
cmpb
jl
hlt
loop
push
xor
mov
inc
xlat
gs
mov
add
mov
aas
push
ror
test
mov
jmp
push
jge
xorl
mov
std
push
push
sub
xchg
jmp
sub
pop
js
popf
add
lock
dec
push
add
dec
or
push
ss
push
push
arpl
sbb
dec
pop
loop
fdivl
add
jg
dec
scas
outsb
cmp
test
xor
mov
dec
jl
pushl
jle
xchg
insb
cmp
adc
sti
outsb
testb
shrl
inc
inc
or
mov
sbb
lock
negl
orb
ret
mov
mov
cmp
mov
mov
inc
xor
sub
cli
xchg
cmp
add
push
mov
jo
jo
adc
or
mov
into
or
cmpsb
mov
hlt
cmp
mov
popa
adc
out
jle
test
pop
push
and
xlat
aas
xchg
jl
xchg
pop
aaa
cmc
mov
mov
inc
mov
test
shrb
notl
aas
popf
cmpsb
int
sub
dec
sub
int3
or
les
repz
out
pop
fmul
shl
adc
fsubl
xor
mov
pop
mov
adc
hlt
sub
into
gs
popw
jge
sub
push
sub
push
fisttpll
jecxz
jp
insb
scas
jnp
addr16
scas
das
adc
lahf
add
iret
outsb
loope
setnp
or
fdivrs
and
out
adc
ret
inc
repz
outsb
gs
sub
mov
imul
inc
add
push
fistpl
push
loopne
enter
cs
jnp
clc
push
mov
testl
dec
pusha
mov
ss
rorl
rcr
aas
dec
dec
mov
daa
cmp
data16
jmp
dec
popa
jo
shrb
cltd
repnz
mov
imul
rorb
test
inc
xor
repz
pop
add
das
or
sub
sbb
popf
adc
add
out
idivl
push
adc
sbb
adc
insl
adc
out
dec
sti
mov
push
movsl
adc
sahf
dec
add
push
push
icebp
pop
fldl
adc
jp
js
mov
dec
jle
fldz
mov
sbb
pop
dec
testl
aaa
push
outsl
fistpl
jge
rol
mov
inc
stc
jmp
std
adc
test
fnsave
nop
mov
cli
jnp
and
jp
mov
jno
adc
fildll
cmpsb
daa
mov
repz
jae
push
push
push
or
xchg
mov
fcoml
xor
cltd
and
dec
mov
insb
fbstp
call
aaa
pop
repnz
icebp
and
push
push
sbb
cmp
cmpsb
push
jp
faddl
adcb
adc
or
adc
in
addr16
sahf
xchg
std
fwait
inc
outsl
es
sub
sbb
mov
rorl
dec
or
fsubs
rorl
dec
rorb
scas
rorl
dec
enter
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
jmp
sbb
cli
sbb
lret
mov
add
sbb
shrb
movsb
push
or
or
fs
mov
out
aad
icebp
sbbb
cmpsb
cmc
xchg
shll
sets
xchg
push
push
jecxz
fistpl
xchg
cli
adc
jg
jnp
test
stos
xor
lods
jle
push
in
fs
cmc
xor
inc
loope
rol
shlb
mov
mov
mov
inc
inc
lods
scas
imul
dec
inc
mov
push
xor
sub
jg
or
fs
pop
push
push
into
dec
mov
imul
fidivl
addb
je
inc
mov
orb
cwtl
test
pop
and
sbb
lret
sbb
pop
cmc
pop
in
jl
mov
and
dec
scas
cmpsb
jb
xchg
sti
repnz
shlb
fnstsw
lods
inc
cmp
call
cld
cmp
cmpl
push
xchg
fildl
sub
mov
cmp
or
inc
jmp
inc
xchg
fsub
mov
insl
and
push
repz
xlat
mov
popa
rcr
repz
xor
pop
xchg
mov
out
lahf
or
popa
pop
jecxz
or
jecxz
fs
push
pop
leave
and
shrb
mov
cmp
mov
lock
cmp
push
cmp
sub
lds
push
pop
xor
inc
jecxz
loopne
pmullw
adc
pop
cld
jmp
stos
test
add
lret
mov
xor
and
pop
outsb
test
push
sub
rclb
pop
add
adc
sbb
leave
jnp
push
fcomps
sti
xchg
inc
lret
jns
repnz
xchg
pop
test
mov
jmp
sbb
and
enter
stos
jge
fdivrl
je
dec
adc
lock
fwait
or
inc
fwait
lahf
sbb
mov
and
xchg
mov
sbb
in
lahf
imul
mov
dec
enter
xchg
xchg
into
or
xor
scas
inc
push
jnp
sbb
in
add
inc
out
movsb
fildl
xor
or
mov
xchg
int
push
jb
push
mov
in
cmpsb
fldcw
or
mov
xchg
cmp
mov
jae
loope
pop
pop
and
je
je
in
dec
dec
xchg
insb
and
js
inc
mov
clc
jge
dec
dec
cmpsb
push
fisubs
jp
pushf
inc
fldenv
and
dec
shlb
loop
mov
outsb
mov
dec
out
sbb
lret
mov
loop
jbe
jmp
jne
or
aam
mov
inc
jg
and
xorb
xor
cmp
lret
add
das
mov
xor
jb
in
cmpb
xchg
xor
stos
xor
ret
cld
sbb
jl
in
test
sub
mov
cmp
jns
in
sahf
outsl
push
sub
adc
dec
into
jae
xor
fwait
shll
out
push
push
adc
push
aas
jle
cld
test
push
push
jecxz
lods
inc
adc
cmc
xor
push
xor
test
in
add
and
jmp
xchg
jns
add
jecxz
push
cmpsl
cmc
mov
cwtl
mov
ret
shrb
test
cld
pushf
icebp
inc
outsl
in
sbb
shll
xchg
stos
and
lock
imul
add
push
das
iret
cmp
shll
test
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
jmp
mov
aas
sbb
sub
or
sbb
adc
mov
fwait
pop
daa
and
cmp
pop
lret
lds
out
mov
enter
dec
pop
faddl
xchg
cmp
repnz
shll
xor
push
stos
push
inc
sahf
shll
pushf
hlt
hlt
jns
cmp
gs
pop
dec
dec
lea
jge
jmp
out
andl
adc
inc
dec
hlt
or
xor
mov
dec
in
or
mov
fstps
mov
jns
leave
add
sbb
pusha
daa
push
sbb
mov
fs
fisubl
fcoml
mov
repz
mov
dec
xor
in
and
andl
rcl
mov
pop
into
mov
lods
arpl
divl
inc
fs
mov
sbb
nop
push
or
notl
adc
lods
push
data16
shlb
xor
cmc
int
lret
cmp
scas
out
test
push
jae
jnp
aaa
outsl
jecxz
js
cmp
sbb
loope
mov
or
or
xor
or
ljmp
pop
out
jnp
xchg
orl
fcmovnbe
aaa
lcall
mov
jbe
idiv
mov
popf
dec
lret
xor
sbb
xchg
jo
repnz
inc
scas
jle
int
jg
mov
cmp
xchg
scas
jmp
data16
xchg
data16
adc
cmc
lcall
ja
sub
cltd
mov
cmc
shl
pop
ss
les
push
aam
cmp
popa
mov
fimuls
sbb
filds
fmuls
adc
repz
mov
add
divl
jecxz
sub
jno
xor
mov
ljmp
adc
loope
sbb
ljmp
imul
je
fiaddl
outsl
sarb
dec
and
loope
jecxz
cli
test
or
jmp
push
jmp
ss
shlb
inc
rcll
push
xor
lahf
cmp
jl
push
pop
xchg
sti
xlat
push
sub
into
ret
cmp
sub
roll
enter
pusha
sub
dec
sub
loopne
fstl
leave
push
popa
in
pop
vpavgw
loop
fdivr
push
repnz
mov
addl
lds
adc
xor
pop
pop
sarb
adc
sub
iret
insb
mov
push
popf
movsb
ds
xchg
mov
leave
or
jbe
cmpsb
loop
mov
icebp
mov
sub
out
dec
mov
push
gs
push
xchg
decb
repz
pop
adc
sub
add
out
and
lret
ret
sbb
push
int
cmpsb
or
insb
mov
ljmp
ret
jnp
push
push
mov
bound
mov
mov
jge
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
jmp
pop
pushf
lds
pop
pushf
push
cwtl
pop
jo
xor
push
sbb
insl
push
sub
mov
inc
shr
mov
sub
lret
mov
mov
dec
clc
cmp
ds
and
lea
out
inc
and
clc
add
ffree
and
pop
insb
popa
in
stos
cmp
pushf
movsl
lock
les
sarb
stos
xchg
and
inc
mov
or
test
mov
gs
pop
xor
mov
clc
bound
into
lret
xchg
add
sbb
rclb
mov
outsl
inc
rcl
xor
sar
jle
sub
pop
insb
inc
push
lock
imul
mov
mov
mov
sub
jae
fmuls
pop
aad
lcall
fmuls
outsb
sar
pop
fidivrs
in
inc
cmp
int3
jo
xor
jne
aaa
push
test
dec
std
fcompp
jmp
int
lret
xor
stos
xchg
adc
arpl
es
push
lods
test
jae
inc
insb
mov
shll
adc
jecxz
add
jp
jns
add
push
jmp
push
jno
loopne
aad
sahf
hlt
mov
sbb
xor
inc
aad
lock
add
mov
jne
jecxz
cld
lret
js
mov
lahf
sti
dec
mov
movsl
jg
test
inc
hlt
addr16
cmp
aaa
pop
or
push
popa
pop
into
or
hlt
repnz
fistl
mov
mov
aas
push
inc
dec
imul
jo
lcall
mov
adc
lcall
fsub
push
push
add
xor
aas
outsb
cld
xor
rorl
lock
pop
imul
inc
loope
aaa
imul
xor
lret
movsl
sub
xlat
push
imul
jp
movl
negl
js
leave
lods
push
into
and
mov
jb
cwtl
cmpsb
pop
mov
xor
arpl
pop
movmskps
sbb
outsb
pop
sarl
mov
mov
xor
and
dec
mov
lahf
je
jb
lods
mov
insb
into
push
pop
out
lcall
lcall
mov
ljmp
ljmp
pop
and
pop
push
adc
lcall
lcall
inc
xchg
mov
sbb
dec
inc
out
xchg
or
mov
mov
stos
cmc
adc
mull
jns
testl
adc
in
sub
mov
mov
mov
in
repnz
mov
sarl
imul
push
or
call
iret
jno
test
les
adc
jnp
add
incb
lods
fidivl
xchg
mov
mov
sbb
data16
mov
jge
clc
lahf
push
iret
add
push
pusha
xchg
jo
jmp
mov
add
mov
jge
gs
loop
mov
xor
mov
and
mov
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
xor
push
push
push
orl
mov
cmpl
mov
movl
jmp
mov
mov
cmpl
jae
pushl
pushl
pushl
pushl
push
push
pushl
call
mov
xor
or
sub
imul
movzwl
and
xorl
sbb
adc
mov
shrd
shr
mov
and
mov
mov
xor
xor
xor
xor
xor
or
sub
or
mov
xor
adc
or
mov
not
mov
sbb
shl
mov
shrd
adc
xor
shr
sbb
mov
mov
mov
sub
and
mov
cmpl
notl
movl
movl
jmp
movl
cmpl
jge
pushl
push
push
call
addl
inc
add
sbbl
mov
adc
xor
xor
add
or
cmpl
movl
movl
jmp
mov
mov
cmpl
jl
push
push
call
sub
sbb
and
mov
and
orl
mov
mov
sub
xor
mov
cmpl
mov
mov
jmp
mov
cmpl
jbe
push
push
push
push
push
pushl
push
push
call
mov
mov
sub
sub
add
or
add
or
and
mov
xor
mov
or
mov
and
mov
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
ja
pushl
push
pushl
pushl
call
or
or
adc
and
sbb
add
sbb
mov
xorl
mov
sbbl
mov
mov
cmpl
movl
notl
mov
movl
jmp
mov
cmpl
jg
push
push
call
and
sub
xor
xor
sbb
or
sbbl
shl
xor
adc
shld
shl
mov
mov
orl
mov
mov
xorl
xor
subl
xor
movl
movl
movl
movl
mov
movl
cmp
movl
jne
movl
cmp
je
mov
adc
mov
xor
shld
andl
shl
xor
cmpl
not
mov
mov
jmp
movl
movl
cmpl
je
push
push
call
orl
or
subl
movl
mov
add
mov
or
mov
or
mov
xor
mov
mov
cmp
jne
cmp
movl
je
cmpl
movl
movzwl
not
jmp
mov
cmpl
jne
push
push
pushl
push
pushl
pushl
push
pushl
push
call
xor
sbb
subl
sub
add
dec
and
mov
and
mov
push
pop
andl
xor
movzbl
add
shl
cmpl
mov
mov
movl
mov
jmp
movl
movl
cmpl
jg
push
call
add
neg
movl
and
and
movzwl
adc
mov
andl
xor
subl
shr
or
cmpl
movl
mov
movzwl
jmp
not
mov
cmpl
jg
pushl
pushl
call
adc
orl
mov
sub
addl
dec
mov
mov
and
mov
mov
mov
xor
mov
orl
push
cmpl
movl
movl
jmp
movl
cmpl
jle
pushl
call
xorl
subl
sbbl
andl
xorl
pop
orl
sub
mov
add
mov
mov
mov
sbb
lea
mov
and
mov
mov
xor
xor
subl
shr
andl
shl
sbbl
or
orl
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
jmp
sbb
lods
sbb
xor
adc
jl
add
sbb
or
in
sbb
jns
out
xlat
nop
add
adcb
outsl
adc
push
jbe
in
aaa
orb
add
incb
xchg
mov
add
inc
sub
cwtl
add
inc
add
addr16
outsb
lcall
nop
scas
iret
lahf
adc
add
xor
icebp
das
xchg
es
arpl
mov
jns
aam
mov
mov
enter
mov
xchg
fsubr
adc
add
mov
mov
xchg
lret
adc
sbbb
push
outsb
sbb
jns
dec
popf
jmp
xor
or
mov
sbb
mov
add
test
lods
jge
inc
mov
hlt
mov
or
mov
sbb
data16
pop
test
fistl
or
hlt
cli
or
shll
cltd
xor
int3
data16
mov
adc
loope
mov
pop
mov
sti
push
addl
jae
and
aam
cmp
outsl
inc
cmp
xor
cmp
repnz
insl
adc
shll
in
in
ret
clc
les
cmpsb
fbstp
add
add
mov
or
adc
imul
dec
pushf
roll
das
xor
xchg
jb
out
lret
sub
adc
cmp
sub
fcompl
inc
loope
out
mov
dec
and
scas
pushf
cmp
ret
jg
das
popf
fistpll
mov
lods
inc
fs
cmpsl
ret
xchg
test
lcall
mov
outsb
clc
ljmp
jns
clc
adc
outsb
jle
int
lret
or
mov
shll
int
and
fs
sub
mov
int3
push
inc
scas
xchg
xor
out
notb
and
jbe
add
dec
xchg
data16
sub
test
mov
push
out
popa
xor
push
dec
xchg
jbe
mov
inc
cli
fbstp
aam
movsb
dec
and
imul
iret
movb
add
mov
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
jmp
out
mov
dec
xchg
fistps
stos
ja
push
sbb
xchg
adc
pop
es
push
sub
rorb
subb
mov
js
in
mov
lcall
popa
inc
inc
imul
addr16
cmp
ss
cmp
mov
push
dec
xchg
test
xchg
or
adc
and
mov
mov
cs
and
or
pop
aas
scas
mov
daa
mov
xchg
pop
test
mov
aad
xchg
sub
sub
insl
cmpsb
jg
shlb
xor
inc
mov
insl
dec
xchg
mov
dec
test
cld
ror
out
bound
shr
mov
gs
jecxz
or
out
sbb
lcall
inc
iret
add
arpl
mov
mov
xor
out
jb
lret
jno
and
and
inc
add
fisttpl
dec
orl
or
out
jg
jnp
push
xor
hlt
mov
stos
add
mov
or
mov
add
mov
popf
pop
jg
in
jno
inc
dec
aaa
mov
loopne
jge
xor
shll
xchg
push
gs
dec
stos
push
push
adc
cltd
lea
sub
inc
xchg
push
call
dec
mov
scas
add
dec
mov
sub
out
add
scas
mov
sbb
into
outsb
clc
int
and
pop
test
sub
ds
fwait
cmp
lret
out
arpl
jge
inc
roll
in
inc
repnz
aas
mov
add
int3
sbb
dec
add
xor
mov
xchg
cltd
inc
sub
push
lea
lahf
daa
jb
mov
mov
adc
mov
mov
mov
mov
arpl
lds
xor
insb
fcoml
jecxz
out
mov
lock
ss
dec
fnsave
xchg
repnz
bound
xorb
lds
mov
scas
push
mov
popa
cld
inc
jno
push
pushf
xlat
in
call
inc
pop
sub
lods
or
xorl
ja
and
pushf
scas
dec
sbb
inc
adc
enter
add
adc
jmp
mov
sbb
mov
stc
clc
push
sbb
or
fcomps
adc
aam
sub
push
pop
jnp
cmp
mov
scas
cwtl
or
cs
cmp
adc
push
xchg
and
addr16
cli
in
adc
mov
inc
ds
add
sqrtps
xor
test
cli
sub
adc
dec
stos
es
and
insl
xchg
dec
imul
mov
insl
inc
cmp
cwtl
jmp
lock
sti
push
adc
jmp
cld
add
mov
adc
xchg
and
xchg
test
mov
push
mov
ljmp
dec
outsb
mov
xor
dec
and
ror
sub
mov
movsb
cmp
jmp
pop
leave
mov
scas
sahf
popf
push
mov
repz
push
xchg
fisubl
stc
or
iret
mov
mov
mov
scas
dec
adc
mov
lock
pop
mov
mov
fimuls
jae
negb
cli
and
lods
mov
and
test
rorl
or
cmp
jg
jae
jg
cmp
ret
mov
daa
xchg
jne
sbb
cltd
and
and
popa
icebp
mov
das
xor
test
sub
cmp
mov
pushf
stc
insl
pop
movsl
push
mov
fldlg2
pop
sbb
movsl
sbb
mov
mov
ret
dec
movsb
lock
mov
mov
inc
mov
std
xchg
or
pop
add
fldl
in
fcoms
pop
psllq
xor
in
and
mov
jae
popa
jle
pop
xor
nop
out
rolb
pop
scas
sahf
sbb
lret
in
iret
lods
pop
lds
out
sub
out
shlb
xchg
pop
stos
cmpsb
inc
rcr
les
mov
mov
add
and
push
add
scas
push
xor
push
cmc
repnz
adc
andl
icebp
jle
aas
mov
sbb
cmp
iret
cltd
push
dec
pop
rorb
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
sub
mov
or
mov
mov
jne
mov
xorl
mul
ret
subl
push
sbbl
mul
addl
mov
xor
add
mov
adc
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
jmp
dec
jbe
imulb
dec
sub
push
mov
lret
jp
push
sbb
adc
sbb
sbb
cmp
repnz
cmp
movsb
movsl
stos
inc
pop
and
add
xor
ret
iret
mov
mov
and
aaa
sbbl
mov
inc
aas
dec
stos
call
retw
adc
rcrb
fdivr
push
jns
push
call
push
inc
ja
jbe
imul
and
movsb
jecxz
loope
sbb
jmp
pop
xor
add
mov
adc
pop
sub
jg
repnz
loop
inc
js
leave
stos
xor
fbstp
and
call
inc
mov
scas
mov
out
dec
xchg
fisubrs
push
xchg
pusha
dec
xchg
clc
fistps
and
or
mov
in
pop
add
ds
test
lock
sub
gs
xchg
and
sub
mov
imul
cmpsb
cli
inc
jge
orl
xlat
lea
test
call
sahf
ret
push
and
insb
pop
cwtl
mov
leave
jbe
negb
mov
iret
xlat
xchg
mov
cli
xchg
mov
jge
dec
dec
mov
cmc
mov
loope
inc
push
sub
adc
in
pop
sub
bound
dec
std
adc
mov
mov
mov
fiaddl
scas
stos
test
in
leave
or
stc
mov
mov
or
fisttpll
push
fsubl
push
sbb
mov
sbb
test
movsl
and
sbb
inc
lock
push
mov
xchg
shlb
gs
call
sar
xchg
add
mov
push
jmp
jbe
icebp
int3
js
cmp
cmc
popf
shlb
jnp
xchg
lahf
out
imul
incb
jo
shld
sub
jl
mov
push
pop
push
push
bound
rorl
push
shll
rorb
shrl
sbb
jns
inc
or
push
xor
in
cltd
xchg
dec
jbe
or
inc
mov
pop
es
fldl
inc
inc
pop
lret
pop
jb
fsubl
lods
mov
or
cmc
jnp
cmp
cmc
mov
shl
lea
mov
sbb
pop
lods
dec
enter
repz
jae
push
test
pop
xchg
sahf
inc
jae
iret
pop
and
sahf
and
arpl
out
mov
mov
ljmp
mov
insb
xchg
xor
incb
mov
sbb
mov
cmp
into
sub
lods
xorl
pop
push
jp
xchg
jmp
mov
jns
mov
sub
pop
mov
shll
arpl
add
pop
loop
sti
sarb
jmp
int
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
jmp
in
lret
repnz
pushf
pop
stos
movl
inc
out
push
sbb
adc
sbb
pop
and
cmp
push
dec
cltd
dec
iret
scas
inc
mov
mov
cmp
cmpsl
add
in
adc
js
push
add
fwait
add
rolb
pop
cmp
jne
mov
mov
jb
lock
pop
jle
xor
add
mov
repz
mov
adc
lods
mov
jo
adc
adcb
jbe
pusha
inc
int
loope
inc
jge
inc
cmpb
add
sbb
mov
push
hlt
lods
cmpsb
dec
inc
sub
xor
pop
or
aam
cwtl
push
inc
fimull
gs
mov
mov
sbbl
mov
and
push
int3
dec
incl
cmp
stc
add
shrb
and
je
xor
push
pop
xchg
mov
cmp
scas
mov
sbb
jne
xchg
stos
cli
sbb
sbb
pop
std
fistpll
icebp
ds
setae
icebp
mov
bound
ljmp
sub
mov
or
mov
inc
fs
hlt
or
repnz
and
addr16
rolb
jle
std
jmp
inc
stos
rclb
push
jp
fs
ret
pushf
adc
jg
jl
gs
or
scas
movsl
out
popa
repnz
sub
pushf
xchg
bound
js
arpl
mov
imul
jecxz
es
out
pop
inc
out
adc
and
push
fs
inc
jp
ljmp
test
pop
or
xchg
pop
out
lds
cmpsb
lea
aad
das
and
mov
ljmp
shr
divb
xchg
repnz
mov
push
add
push
pop
fnstcw
das
lock
cmp
ljmp
xchg
jmp
push
pop
pop
sub
sbb
mov
fdivl
adc
mov
jecxz
sbb
pop
je
test
push
inc
dec
inc
jo
sub
inc
push
shrb
add
jmp
xchg
mov
cmpsb
xchg
mov
pusha
xchg
or
push
sbb
fcmovnu
jecxz
mov
ret
insb
jle
pop
std
and
dec
lret
fldcw
je
gs
invd
pop
xor
lock
out
add
fwait
mov
push
cltd
add
ja
imul
xor
add
loop
xchg
jl
push
pop
lret
inc
out
inc
push
cwtl
cltd
push
jae
add
loopne
pushf
push
dec
cmc
je
cmpsl
xor
jnp
pushf
ds
aam
call
pop
orb
fwait
stos
mov
push
repnz
les
lds
rcrl
in
mov
mov
xchg
fisubrs
imul
sarb
cli
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
pushl
lea
push
call
pushl
pushl
call
push
call
mov
subl
jmp
iret
and
inc
sbb
and
fnstcw
out
sbb
and
push
jo
xchg
outsw
xchg
std
mov
in
pusha
rcll
jge
fisttpl
sub
sub
and
cmp
mov
mov
lcall
lock
fs
inc
pop
cmp
pushf
addl
xor
fisttpl
std
sub
sub
jnp
and
scas
dec
daa
cmp
out
xchg
bnd
ret
fwait
mov
gs
push
sbb
lds
aaa
setbe
shlb
push
mov
ljmp
cmpb
je
sbb
aam
scas
push
jge
sub
loope
adc
xor
outsb
mov
dec
xor
nop
xor
test
add
cmc
arpl
sub
push
and
fnstcw
nop
bnd
enter
pop
jmp
fmulp
xlat
sbbb
aaa
sub
sbb
sub
aam
jle
loope
inc
out
mov
jnp
out
cmp
push
lods
sbb
ficomps
std
js
sar
xchg
xchg
ficoml
pop
jbe
out
cmpsl
mov
cmp
add
mov
adc
das
dec
in
out
cmp
sbb
inc
arpl
adc
xor
js
mov
fcoml
cmp
pop
adc
cltd
xorb
push
xchg
cmpsb
adc
adc
xchg
stos
arpl
or
xor
sbb
push
xchg
mov
sbb
xor
imul
mov
call
iret
push
inc
scas
sub
adc
test
in
int
lock
pop
xor
lods
addr16
mov
xchg
mov
mov
pop
mov
data16
xor
addr16
push
jg
mov
cmp
into
call
das
xchg
push
push
inc
ret
cld
jne
cmp
mov
test
jge
cmp
inc
iret
fstl
jno
lea
dec
xor
and
adc
or
loopne
in
mov
stos
add
mov
sub
mov
in
das
sti
push
and
ja
jb
pop
sbb
icebp
ja
cmpsl
or
xor
or
xor
or
dec
xchg
xchg
aas
lods
lahf
xchg
jmp
push
adc
cs
nop
test
lcall
fsubrs
add
nop
xor
adc
es
add
dec
jge
fbstp
sbb
adcl
addr16
decb
ret
lods
dec
repz
inc
enter
lahf
inc
arpl
cwtl
jl
ret
mov
xor
cmp
es
in
bound
aad
je
call
mov
add
dec
imul
cmp
xlat
pop
add
sarb
mov
out
pusha
scas
lock
int3
mov
addr16
ret
jl
push
mov
push
je
dec
nop
decb
cmp
cwtl
sbb
push
fdivs
xchg
push
sub
sub
jnp
out
out
xor
adc
xchg
sbb
stos
push
scas
std
mov
out
jo
insl
jge
add
jl
jle
in
sbb
mov
vpsllw
push
dec
sbb
and
jmp
shlb
jmp
mov
sahf
cli
pop
subl
xchg
imul
lods
and
icebp
cmp
pop
push
push
jecxz
push
mov
lahf
cmp
ss
add
add
xor
add
add
call
adc
mov
add
movl
movl
addl
mov
mov
mov
and
mov
subl
xor
xorl
imul
and
sub
xorl
mov
xorl
movl
movl
adcl
movl
add
movl
xor
add
add
mov
mov
addl
sub
and
mov
and
mov
sbbl
xor
sub
imul
mov
mov
cmp
movl
jne
and
movl
movl
xor
movl
movl
add
pushl
cmpl
mov
mov
mov
jmp
movl
cmpl
je
pushl
pushl
push
pushl
call
not
sub
or
mov
mov
and
sbb
add
add
movl
xor
movl
movl
negl
jmp
xor
fwait
clc
dec
arpl
loope
sbb
daa
cs
jnp
les
mov
pmulhw
xor
add
pop
stos
sub
or
iret
xchg
mov
and
lret
xchg
je
int
xchg
stos
dec
leave
sub
xor
cmp
test
popf
dec
push
iret
sbb
mov
mov
sub
mov
pop
imul
fsubrl
xchg
mov
sub
mov
dec
cmp
jle
xchg
sub
sub
lods
jmp
loopne
out
insb
bound
gs
mov
dec
lret
bound
jne
loop
movsl
cld
adc
iretw
mov
pop
add
lods
inc
lock
dec
cmp
enter
mov
or
je
ret
dec
enter
js
cmp
push
sti
or
insl
idivb
cltd
mov
push
cmpb
shrb
enter
addb
or
test
xchg
mov
mov
xor
testl
and
cmp
push
loopne
jno
xchg
pop
cmp
stc
push
cmp
adc
mov
popf
lds
adc
inc
les
int
push
mov
push
sub
push
mov
aaa
pop
insl
movsb
pop
jp
in
sub
lods
bound
xor
fsubr
fdivrl
rorl
or
mov
dec
push
jnp
jecxz
sbb
repz
or
mov
mov
push
mov
icebp
pushf
mov
dec
sbb
in
cli
mov
xchg
mov
xchg
jmp
test
js
pop
clc
ds
and
mov
push
add
arpl
jno
fidivrs
or
dec
pushfw
xor
cs
sub
jmp
shll
add
sahf
push
mov
xor
mov
mov
mov
push
cmpsb
xchg
mov
push
cwtl
cmpsb
outsb
xor
pop
cmp
inc
fnstenv
es
fsubrs
inc
int3
fdiv
loope
stos
pop
dec
je
test
mov
fcmovnbe
sub
int
jmp
pop
and
pop
dec
mov
adc
inc
mov
icebp
mov
sbb
mov
out
jo
cmp
hlt
mov
jnp
xchg
out
inc
into
push
sbb
cmpsl
sbb
fs
ljmp
mov
cltd
int3
test
pop
xchg
dec
sbb
dec
in
mov
lret
fidivrl
fst
push
sub
cmp
or
mov
insb
jmp
and
xor
push
outsb
test
push
cs
push
cmp
lods
jmp
mov
sub
mov
shlw
fs
sbb
clc
ret
sub
bound
out
imul
pop
popl
jo
testl
push
loop
mov
or
xchg
popf
insl
test
jle
adc
and
in
sbb
scas
pop
cmpsb
adc
sub
shll
mov
jnp
mov
cmc
sub
repnz
add
mov
xor
in
add
inc
aam
cmp
mov
push
sahf
cld
scas
cmp
fs
repnz
mov
dec
stos
movl
movl
movl
movl
movl
mov
mov
subl
imul
or
xor
cmpl
mov
mov
mov
jmp
movl
movl
cmpl
jge
pushl
pushl
call
subl
xor
mov
and
xor
mov
or
mov
or
jmp
jp
lock
dec
pop
push
dec
lret
repnz
pop
jl
fsts
sbb
loopne
mov
mov
pusha
not
jae
out
fnsave
outsl
jbe
call
imul
xchg
pop
xchg
in
aas
add
scas
sub
jnp
outsb
mov
into
fdivrl
jno
sub
and
push
and
cmp
test
je
ret
sub
mov
iret
jmp
pop
pop
adcb
dec
xchg
repnz
sahf
dec
pop
mov
mov
add
fisttps
xchg
out
out
mov
jge
insl
mov
push
push
mov
lds
add
pop
addb
je
jmp
sbb
xor
lock
loopne
std
jo
jbe
cmp
xchg
les
les
into
jne
jl
scas
adc
scas
nop
lcall
cmpsb
push
js
xor
sub
pop
sub
xchg
sti
mov
ss
push
inc
addb
add
scas
les
inc
inc
rol
imul
xor
xor
xchg
pop
cmp
ds
jns
xlat
and
jg
adc
fcmove
sbb
fistpl
push
sub
inc
inc
or
mov
stos
mov
mov
add
jne
sub
and
inc
or
push
pop
popa
or
push
adc
int3
iret
push
push
imul
test
cs
in
xor
cltd
pushf
mov
cmpsl
inc
xchg
movsl
dec
xchg
inc
incb
push
call
mov
cwtl
in
xchg
xchg
fists
jae
sbbl
jmp
and
sub
xchg
pop
jbe
icebp
test
push
mov
jl
pop
enter
lods
pop
es
into
xlat
or
adc
pushl
je
mov
push
jbe
and
inc
cmp
icebp
pop
loope
sbb
inc
sbb
fnsave
jge
mov
out
movsl
lcall
cltd
gs
insb
js
lods
xlat
mov
popa
pop
adcl
js
stc
dec
stos
dec
subl
xchg
cld
lock
adc
mov
arpl
ja
lret
jbe
inc
add
dec
ficoms
les
inc
push
scas
add
cmp
adcl
out
test
push
jne
pop
rclb
sbb
dec
test
mov
pop
test
fnsave
push
lods
sub
xchg
jp
loop
mov
jnp
sbb
aaa
dec
jnp
xor
mov
dec
cmc
pop
and
push
nop
xchg
adc
push
pop
jmp
add
or
mov
jbe
imul
movsl
xchg
and
int3
sbb
das
add
sbb
and
ljmp
adc
std
xchg
out
in
scas
cmp
je
adc
lret
dec
les
adc
cmp
push
xor
dec
push
arpl
xchg
jle
aam
jbe
in
inc
inc
cmp
out
add
movsl
dec
mov
adc
nop
xor
ss
mov
ret
xor
fwait
js
mov
scas
dec
jns
xor
rolb
jg
out
insl
insb
fisubs
aam
mov
add
out
xchg
mov
push
arpl
fiaddl
outsb
sbb
bound
sub
call
scas
int
ds
in
and
fcompl
mov
jg
outsb
outsb
adc
icebp
pushl
mov
cmpl
movl
mov
movl
jmp
movl
movl
cmpl
ja
push
push
push
call
add
add
xor
mov
or
add
xor
push
not
pop
xor
div
mov
xor
xorl
or
mov
xorl
or
movzwl
or
mov
subl
div
xor
xor
cmpl
movl
mov
jmp
movl
cmpl
jl
push
push
call
sbbl
movl
or
xor
or
pushl
mov
or
mov
xorl
pushl
add
andl
pushl
orl
imul
pushl
mov
adc
jmp
and
sbb
sbb
and
push
stos
not
push
sbb
add
sti
cmpsl
pop
sbb
cs
fcomps
jbe
cmc
mov
outsb
fcmovnbe
adc
nop
xor
cmpsb
rcrb
mov
dec
adc
ret
and
jmp
rcrb
sbbl
aaa
xor
rorl
pmaxsw
push
inc
fiadds
movsb
jg
cmpsb
adc
shll
outsb
test
lock
jecxz
and
mov
ret
push
movl
std
sbb
outsl
insl
jl
add
sbb
mov
pop
sahf
mov
flds
mov
or
push
xchg
inc
cmp
cmp
dec
fsubs
shlb
sbb
sub
outsl
mov
and
push
in
mov
xchg
cmpsl
adc
jmp
inc
inc
or
push
leave
bound
mov
mov
lret
push
xchg
and
cli
push
add
inc
xorb
add
clc
push
rcr
push
push
mov
jo
dec
dec
mov
and
nop
nop
pop
xchg
je
mov
sbb
aaa
lea
hlt
rcl
fwait
dec
dec
xor
push
lret
std
mov
test
pushf
lods
jbe
xor
je
xchg
cmpsl
fwait
xchg
or
adc
push
xrelease
out
lcall
outsl
out
inc
lods
sbb
mov
decb
ror
mov
jecxz
je
xacquire
inc
outsl
lods
addr16
lds
sub
ss
pusha
ss
in
dec
repz
xchg
test
mov
loopne
sub
push
cli
pop
leave
push
rcll
loope
sbb
jno
bound
jp
lods
cmp
lea
xchg
push
xchg
jns
adc
aad
int
and
sub
pop
jge
into
testb
mov
inc
pop
and
pusha
into
xchg
mov
push
xchg
mov
in
test
cs
jl
inc
mov
pop
fldcw
loop
jmp
jo
mov
popa
pop
xchg
insb
mov
pop
rcll
mov
mov
pop
cmp
int
inc
mov
out
cmp
adc
sar
pop
adc
mov
outsb
mov
aad
sub
aad
fcmove
dec
cs
daa
mov
mov
out
mov
adc
xchg
mov
sub
out
cmp
das
scas
jnp
cmp
pop
in
pop
movsl
jmp
inc
sbb
repnz
mov
fsub
jne
cmc
inc
movsl
and
repnz
lods
mov
inc
cltd
jno
mov
pop
sbb
jg
mov
mov
sahf
mov
pop
inc
mov
cmpsl
cmp
cmp
xchg
daa
int
jne
mov
adc
push
pop
fs
adc
in
dec
icebp
mov
pop
ja
cwtl
stos
fdivs
outsb
jb
test
jp
xor
mov
or
mov
jmp
inc
dec
inc
push
std
add
mov
test
xor
push
adc
adc
repnz
out
mov
clc
add
mov
cmp
nop
or
mov
daa
sbb
fdiv
xor
pop
sahf
dec
test
les
jae
pusha
inc
enter
adcb
enter
xor
mov
xchg
orl
inc
xchg
rol
lods
mov
shl
dec
xchg
adc
shlb
adcb
or
mov
dec
rolb
push
jmp
orl
xor
adc
mov
div
adcl
and
xorl
or
xorl
pushl
xorl
call
orl
dec
jne
add
movl
cmpl
mov
mov
mov
mov
jmp
mov
cmpl
jb
push
call
movzwl
sbb
adcl
xor
mov
xor
mov
addl
sbbl
mov
mov
andl
movl
mov
xorl
call
cmpl
mov
mov
not
jmp
movl
mov
cmpl
jle
call
adc
orl
xor
add
mov
sub
and
sub
sbb
lea
mov
lea
add
mov
cmpl
mov
movl
mov
jmp
movzwl
mov
cmpl
je
push
call
or
sbb
sbb
xorl
sub
orl
sbb
mov
mov
sbb
jmp
js
push
xor
or
push
sbb
mov
out
push
sub
lret
pop
ds
push
mov
sbb
push
cmpsb
push
inc
icebp
sbb
cmp
jp
cmpl
icebp
add
fldcw
or
mov
insl
and
xor
fcoms
out
pop
add
call
jp
add
cmp
and
pop
in
aas
jo
push
cmp
lcall
lods
dec
imul
mov
sbb
xorl
imul
in
pop
sub
das
push
in
sub
outsl
lret
inc
mov
idivb
popf
xchg
stos
add
xor
push
pop
fst
fs
cmp
outsb
sti
xor
sub
dec
pushf
xor
stos
xchg
mov
push
push
mov
lahf
or
out
push
push
ljmp
mov
nop
mov
ffree
pusha
pop
xlat
outsl
jnp
and
pop
inc
into
ljmp
and
aam
xor
sub
movsb
jecxz
sub
cli
icebp
xor
push
pop
stos
iret
mov
cltd
es
pop
cmpsb
or
push
mov
lock
call
mov
mov
adc
imul
repz
add
push
or
fadds
adc
jecxz
leave
inc
xor
xor
jae
or
scas
cs
jl
lock
imul
mov
call
jb
inc
mov
lods
jo
faddl
leave
pushf
in
lds
lds
js
mov
sub
lcall
roll
aaa
xchg
sub
cli
loop
xchg
push
aas
lret
rcrl
shlb
stos
cmp
push
or
sar
in
int
adc
bound
addl
imul
push
push
dec
and
adc
cmpl
icebp
insl
test
dec
inc
imul
jae
cli
adc
movl
lahf
adc
js
test
cmc
mov
int3
hlt
ret
cmp
aam
inc
pop
ficompl
or
adc
sub
and
and
add
push
lcall
je
sub
cmp
cmpb
pushf
lods
and
test
add
jns
mov
inc
xchg
jle
aam
jle
lcall
xchg
out
fs
in
js
lock
aaa
cwtl
fucom
pusha
adc
ret
lahf
sub
sub
jge
and
cltd
fildl
push
cwtl
jp
fcoms
pop
arpl
aaa
mov
sbb
daa
push
pop
out
in
jg
adc
add
and
push
push
add
adc
pusha
rcl
or
jo
jg
imul
fdivrs
xlat
stc
jge
cmpsb
cmpsb
jne
movsl
roll
idivl
inc
mov
mov
jle
in
lret
dec
fcoml
insl
xchg
pop
push
adc
int3
loop
sub
add
push
push
push
dec
out
xor
inc
push
addl
push
sub
pop
pusha
and
enter
jne
test
push
sbb
jg
push
push
pop
je
mov
popf
mov
jno
cmp
aam
inc
mov
clc
out
add
or
pop
test
gs
push
mul
add
add
mov
mov
xor
cmpl
movl
movl
movl
jmp
movl
movl
cmpl
jae
push
push
pushl
call
notl
subl
adc
sub
mov
sbb
xor
or
mov
and
xor
and
shl
shr
sbb
or
cmpl
notl
notl
movl
mov
jmp
mov
mov
cmpl
jae
push
push
pushl
push
call
inc
or
xor
sbb
xorl
sub
mov
mov
mov
addl
mov
and
mov
cmpl
movl
movl
mov
jmp
mov
mov
cmpl
jl
pushl
pushl
push
push
call
add
notl
or
movzbl
or
sub
add
mov
adc
jmp
lock
fidivs
push
push
call
sbb
mov
mov
pop
mov
rorb
lahf
lods
cwtl
outsb
xor
push
dec
fdivrl
inc
sahf
stc
xchg
in
mov
xchg
rcl
insl
mov
dec
ficoms
mov
dec
idivl
add
movsb
ljmp
jno
cmpb
test
mov
push
es
es
add
xor
imulb
adc
fistpll
cmpsl
popf
ja
rcrb
push
sti
pop
or
jbe
inc
sub
mov
movsl
jp
mov
mov
inc
adc
cmp
testb
filds
into
jmp
loop
pop
test
stos
out
aas
testb
and
cmpsl
and
fistps
add
sar
xor
lods
cltd
sahf
mov
dec
lret
out
outsb
adc
rorl
test
jo
das
pop
jae
pop
les
dec
lods
and
and
pushf
shll
pop
gs
pop
fdivl
pushf
push
scas
inc
xchg
into
loopne
and
jne
call
arpl
hlt
adc
xchg
negl
pop
and
lds
cmpsb
add
push
xlat
leave
xor
sbb
popf
cwtl
into
push
push
call
je
in
into
lahf
lret
shrb
adcb
jns
jnp
in
fstl
or
or
add
xor
mov
out
pop
pop
push
jmp
in
inc
mov
xor
xor
xor
in
inc
sbb
sbb
js
test
jne
xor
mov
movaps
jns
jns
sbb
imul
xchg
xchg
dec
loop
popfw
in
fnstcw
and
scas
addr16
jbe
lods
jp
xchg
fdivrs
addl
lods
outsl
jg
mov
ret
fisubrl
aaa
rcrb
mov
add
sarl
mov
aam
rcrb
push
js
adc
int3
xchg
lret
in
pop
cli
out
pop
jns
jno
repnz
pop
and
jp
mov
stc
sub
lods
cmpsb
push
jmp
cs
mov
lea
push
lcall
push
das
xor
xlat
int
lock
lods
dec
rcrl
int3
sub
lock
inc
ret
fdivr
pop
mov
push
ds
mov
mov
movsb
adc
jbe
lods
fucomi
call
mov
and
out
es
jnp
push
mov
iret
inc
loop
push
sbb
cmp
jo
cmpsl
enter
idivl
sbb
sub
in
ss
push
daa
adc
adc
in
shrl
scas
xor
xor
mov
or
jo
push
outsl
push
dec
or
jb
test
je
mov
jb
iret
jp
xor
pushf
push
add
mov
mov
loope
mov
ret
in
data16
adc
mov
ficoms
cmp
sub
ror
push
and
call
out
xor
mov
mov
jecxz
in
mov
push
inc
packuswb
or
out
aas
loop
negl
sbb
jecxz
jns
sub
pop
loope
pusha
adc
xor
fcmovne
push
jmp
ror
mov
pop
loopne
pop
cmp
sbb
xchg
xchg
and
shrb
sbb
push
adc
popa
fdivrs
or
pop
pop
pop
push
fdivs
faddl
and
add
add
lods
enter
lahf
addb
mov
not
not
jmp
mov
movl
cmpl
jae
push
call
movl
mov
mov
sbb
movl
or
and
cmpl
movl
mov
mov
movl
jmp
movl
movl
cmpl
jge
push
push
push
call
adcl
xor
xor
movl
adc
decl
shr
mov
xorl
mov
xor
xorl
xor
or
cmpl
movl
movl
movl
jmp
movl
mov
cmpl
jne
push
push
call
adc
andl
add
andl
add
mov
andl
push
pushl
lea
subl
push
subl
shl
andl
call
lea
orl
push
mov
mov
lea
push
negl
mov
lea
addl
mov
mov
adcl
mov
sbbl
push
negl
call
push
andl
push
sbbl
pushl
sbbl
call
sub
mov
movzbl
sbb
mov
adcl
mov
mov
shr
add
shl
and
or
adc
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
jbe
pushl
call
movzbl
adc
movzbl
add
and
sub
orl
xor
cmpl
mov
mov
jmp
mov
cmpl
jb
push
push
push
pushl
pushl
call
subl
addl
addl
mov
xor
add
sub
sub
sbb
add
and
mov
lea
neg
mov
add
lea
or
mov
cmpl
not
movl
mov
jmp
movl
movl
cmpl
jge
push
push
push
pushl
call
adc
add
and
mov
mov
sub
or
xor
cmpl
movl
movzwl
notl
jmp
mov
cmpl
jne
call
sbb
notl
and
mov
sbb
orl
adc
and
mov
sub
mov
xor
xor
sub
or
lea
cmpl
mov
not
not
jmp
movl
movl
cmpl
jne
push
pushl
pushl
push
pushl
call
sbb
add
sbbl
subl
movzbl
sub
mov
cmpl
movl
mov
movl
movl
jmp
mov
cmpl
jge
push
push
call
sub
mov
sbb
adc
and
adcl
sbb
xor
xor
mov
xor
movl
add
movl
sub
movl
movl
mov
jmp
xchg
inc
sub
test
push
sbb
mov
cmp
hlt
js
jb
int
clc
testl
out
xor
je
and
cmpsb
jg
cld
or
sub
fsubr
pop
aas
dec
fwait
shlb
addr16
lret
dec
je
adc
ret
popf
lahf
testl
imul
lret
imul
mov
add
sub
fdivrl
aaa
jle
ret
ret
add
jns
pusha
negl
mov
inc
inc
push
cltd
test
cbtw
sbb
rcll
repnz
add
ret
mov
or
sti
out
add
inc
inc
dec
pop
js
xchg
mov
ret
loop
xor
xor
lods
into
lock
out
lahf
lahf
sbb
insb
outsb
mov
dec
loope
jae
int
stos
fidivl
pop
js
std
dec
sbb
mov
sub
sbb
pop
fwait
leave
jb
jne
fsubl
in
fidivl
mov
outsb
push
pop
xchg
cmp
stc
inc
sub
repnz
aad
sub
shrl
inc
icebp
scas
push
cmp
into
pusha
mov
ds
xor
movsb
outsb
and
leave
fists
into
in
cmp
dec
mov
lcall
ret
push
inc
addb
cmpsl
lock
mov
orb
sbb
cmp
cmp
test
mov
jbe
push
pop
sti
or
fcompl
addr16
mov
fsubrs
xchg
pop
inc
fistl
movsl
mov
enter
push
xchg
and
neg
adc
pop
xor
push
jp
ficoml
xchg
ja
adc
fidivl
mov
jle
lds
jb
sub
dec
ret
lcall
pop
or
jmp
fxch
pusha
inc
mov
mov
fildll
cmpsb
and
add
jns
sub
push
adc
cmc
inc
outsb
sub
andb
mov
jns
fwait
push
jnp
fcoms
hlt
add
push
lret
fsin
xor
rcrb
repz
add
rorl
inc
sbb
mul
lds
inc
push
iret
cmp
insl
xchg
fdivp
outsl
pop
adc
ret
test
push
fsubrl
fdivl
aam
subb
sbb
mov
arpl
mov
fstpl
pushf
inc
jmp
hlt
mov
jb
sbb
insl
nop
cs
adc
cli
in
in
clc
cmp
inc
or
adc
mov
cwtl
clc
in
mov
loope
sbb
scas
mov
cmpsl
push
popf
iret
inc
inc
push
xor
sub
xchg
or
sbb
add
xlat
jbe
fldenv
jbe
ror
add
mov
nop
test
jg
aas
xchg
ljmp
mov
sub
push
add
inc
jl
push
sub
adc
mov
mov
test
and
add
sbb
jle
sbb
mov
jb
jne
std
pusha
mov
pop
sbb
cmp
inc
popa
push
mov
sahf
mov
ljmp
popa
popa
vmovq
out
in
and
or
inc
push
xor
cmc
shl
mov
fldenv
int
js
test
popf
push
dec
loopne
push
shll
jge
jne
in
cmp
xchg
pusha
mov
data16
jb
or
mov
push
mov
mov
mov
add
adc
xor
xor
jmp
pop
es
sub
pusha
in
mov
xchg
sbb
ja
shlb
mov
iret
adc
inc
mov
xchg
stos
xlat
jp
push
push
data16
ret
out
add
fdivp
mov
sub
or
sub
sbb
mov
mov
ret
insl
pop
shlb
xchg
add
push
xchg
sub
daa
cli
outsb
sbb
mov
int3
jno
divl
enter
mov
test
lods
imul
jle
es
inc
imul
aas
or
scas
xor
rol
adc
push
out
add
pop
xor
je
fcomp
repz
lahf
fcmovu
and
jno
enter
push
mov
mov
ljmp
lock
popf
push
jge
addr16
icebp
je
imul
inc
in
and
pop
test
rcr
test
out
fists
cmp
cltd
mov
daa
enter
xor
cmp
sbb
pop
imul
cmp
inc
jno
cli
jle
test
shl
jmp
mov
fildll
jbe
lods
lret
enter
in
push
das
stos
ljmp
adc
rclb
dec
xchg
or
mov
fldpi
sbb
shll
xchg
ret
sub
loope
aaa
or
mov
adc
pusha
std
push
sti
out
mov
or
lods
pop
shlb
inc
ds
aad
mov
clc
cmp
cmp
and
repnz
fidivrs
cmp
mov
mov
mov
mov
sbb
mov
jmp
xlat
testl
daa
pop
or
inc
pop
popf
jecxz
adc
ss
in
out
stos
and
jp
or
jbe
test
in
bound
std
inc
mov
lods
lds
push
jle
mov
pop
rolb
or
data16
pop
or
sub
pop
sub
and
xchg
mov
sbb
pop
cmp
and
add
pop
das
dec
inc
jecxz
push
imul
fwait
xchg
popf
inc
or
dec
cmp
mov
repz
cmc
aad
enter
idivl
les
push
fs
lahf
pop
scas
xlat
or
popf
inc
mov
gs
jmp
pop
mov
jge
lahf
and
xchg
push
aas
shrl
insl
rol
mov
jae
mov
cmc
out
fs
cmpsb
mov
add
test
pop
xchg
outsb
iret
test
adc
ret
clc
jo
stc
cltd
mov
clc
call
dec
fcoml
add
sbb
dec
sub
pop
lea
es
pop
aam
pop
subb
jb
push
cmc
mov
fistl
rclb
lcall
sub
dec
mov
adc
pop
inc
or
iret
push
js
or
fwait
lods
cmp
push
jl
iret
arpl
mov
sub
xchg
dec
push
dec
mov
cli
mov
mov
mov
out
and
fnsave
adc
popf
xor
cmpsl
aaa
inc
add
adc
sbb
adc
lret
push
and
adc
cltd
jmp
xchg
or
push
sti
sbb
mov
and
mov
pop
or
xor
and
pop
lea
sub
lea
or
sub
pop
rorl
test
mov
in
test
adc
imul
cpuid
mov
dec
jp
test
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
jmp
lcall
es
lret
movsb
loop
stos
sub
sbb
xchg
cmp
and
lea
lret
jl
xor
cmpb
pop
ja
mov
push
add
mov
or
sub
push
rolb
fstps
jge
in
outsl
push
into
sub
mov
inc
iret
mov
jno
push
xchg
jns
jns
mov
adc
sbb
movsl
mulb
add
jecxz
cmp
dec
sar
cltd
into
add
cmpsl
int3
clc
and
xchg
xchg
cld
sub
or
mov
xor
push
jmp
cld
test
fmuls
negl
dec
jecxz
adc
fxtract
xlat
jmp
into
xchg
lds
xchg
xor
push
inc
xchg
inc
and
pop
sbbb
enter
pusha
loopne
jbe
or
addl
adc
push
into
add
push
je
or
jb
xchg
shlb
lcall
cmp
mov
adc
xor
loop
aad
or
fidivrl
xor
cmp
sub
mov
dec
jbe
jo
mov
sub
or
dec
mov
jge
loope
and
lds
les
push
xchg
ljmp
xchg
in
add
jbe
je
imul
push
dec
jmp
jno
sub
mov
lret
clc
pushf
xor
add
and
test
out
shlb
xchg
mov
jge
dec
js
lock
and
sbb
leave
cmp
loope
sub
cs
fldt
iret
shl
insb
sbb
jmp
pop
rorl
mov
ds
adc
pop
gs
ja
ficomps
clc
mov
test
mov
out
cmp
push
mov
mov
xlat
adcl
js
push
in
nop
and
xlat
jns
mov
add
lock
mov
mov
push
xlat
mov
cli
arpl
js
lds
mov
mov
cmc
push
jns
pop
jbe
cmpsb
push
js
fldl
and
pop
fnstsw
sbbl
int
xchg
mov
jb
shrl
addb
mov
cmpsb
cmpsb
push
and
xchg
push
int3
js
and
aaa
repz
cmc
stos
push
negb
sarl
ja
xchg
mov
and
xchg
add
add
xchg
xchg
jmp
aam
xor
fdivl
inc
or
sub
dec
fists
mov
push
ss
fstps
clc
jbe
xchg
loope
ret
aad
jmp
ja
scas
in
adcl
push
xchg
jp
pop
dec
xor
in
ret
ja
or
dec
test
pusha
or
lcall
call
add
imull
addl
sub
rcrl
and
jb
mov
fs
mov
mov
mull
enter
ja
xchg
repnz
pop
cltd
insl
imul
pusha
adc
ret
ds
and
xchg
outsb
fsubs
std
pop
mov
sahf
jb
cltd
jno
lock
scas
std
dec
dec
xor
stos
insl
pop
adc
jns
or
fistpll
and
int
lds
ljmp
pushf
adc
pop
pushf
notl
inc
leave
jae
dec
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
jmp
cmp
arpl
add
lcall
sbb
add
ja
sub
adc
mov
shlb
movsl
into
inc
sbb
sub
sub
popa
inc
int3
aas
sub
icebp
in
rol
and
insb
jle
jl
or
aam
out
lret
ret
pusha
jge
and
inc
adc
push
push
dec
sub
in
mov
jg
fsubrl
sbb
in
jle
test
out
lret
jnp
loope
stc
insb
orb
xor
stos
lret
mov
outsl
test
idivb
pop
inc
sahf
jno
add
imul
push
mov
jl
fisttpll
ljmp
jg
push
add
and
push
cmp
or
rcl
stc
inc
fnsave
dec
roll
add
cmpsb
mov
push
dec
mov
daa
js
cwtl
xchg
add
xlat
int3
cmp
add
xchg
repz
popf
xchg
mov
mov
rcll
cwtl
pusha
mov
nop
test
adc
aas
pushf
or
add
inc
test
out
jp
sbb
add
mov
or
loope
in
out
iret
push
mov
sub
lods
rorl
push
sbb
push
sbbl
xchg
movsl
and
lcall
int3
data16
pop
dec
mov
loop
aam
sbb
fbstp
repnz
cmc
sub
dec
pop
sahf
and
or
mov
aas
ljmp
jns
shll
rclb
lods
jo
adc
cmpb
jg
xchg
push
push
pop
movsl
xchg
sub
repnz
push
sub
stc
cmpsb
ret
inc
adc
mov
daa
dec
sub
imulb
cmp
sbb
and
xchg
hlt
cs
inc
adc
stos
lret
cwtl
fadds
cld
mov
pop
lahf
jne
call
pop
xchg
imulb
jns
movsl
pop
popf
adc
xrelease
jle
mov
repz
fcompl
xchg
fnstsw
je
inc
out
cmpsl
repz
fimuls
in
xchg
shl
xor
scas
dec
jp
ret
push
lahf
adc
push
push
adc
mov
pop
mov
lahf
stc
sti
mov
mov
mov
int3
stos
les
test
xor
push
leave
je
aam
scas
and
lret
lods
and
jno
jge
push
cli
stc
jmp
int
popa
lcall
out
subb
jb
clc
sbb
sub
pop
imul
cld
push
ljmp
push
pop
mov
jne
mov
cmc
mov
add
lods
jno
dec
test
scas
aas
or
mov
or
xchg
dec
mov
mov
lods
int
call
lcall
xlat
cmpsb
jmp
dec
dec
jb
data16
dec
out
inc
dec
mov
insb
sub
dec
mov
mov
nop
xchg
outsl
xor
pop
fs
dec
push
leave
call
push
fs
sarb
dec
and
fdivs
pop
movsl
inc
xlat
inc
xchg
mov
jns
daa
push
les
push
repz
imul
or
in
and
cmpsb
mov
or
int3
inc
cmpsb
dec
mov
lret
movsl
fsts
cmp
inc
outsb
xchg
repnz
lock
iret
out
out
orl
xchg
addr16
cmp
and
loop
xchg
sahf
push
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
jmp
xchg
loope
gs
fs
aam
imul
lahf
push
sbb
xchg
test
jge
or
mov
add
sbb
cwtl
push
sbb
dec
xchg
gs
icebp
daa
sub
clc
sbb
push
clc
lahf
inc
subb
jecxz
loop
pusha
push
mov
add
cmc
ljmp
iret
out
push
mov
fmul
adc
and
lock
popf
jo
add
xor
pop
mov
pop
xor
leave
mov
pop
loopne
rcrb
cmp
imul
push
pop
adc
stos
mov
fdivr
jmp
fiaddl
mov
jbe
pop
dec
inc
out
test
adc
jae
xchg
jno
and
and
sarb
es
cmp
enter
fs
push
stos
lret
mov
jp
andb
sarb
push
push
dec
divb
mov
mov
push
in
inc
movsb
aad
cltd
xchg
jp
popa
setp
daa
adc
inc
clc
adc
xor
bound
jmp
stos
jge
or
cmp
adc
cld
nop
int
fldcw
sbb
jle
adc
cs
add
xchg
jns
push
jae
out
fbld
in
sti
pushf
cltd
mov
jmp
mov
mov
jnp
xchg
or
aaa
dec
mov
lret
fnstenv
mov
lret
mov
fiaddl
jmp
aas
leave
mov
aaa
cli
loop
mov
mov
adc
fcomi
cmp
mov
and
sbb
fxch
sar
sub
xlat
jo
data16
add
mov
lret
push
jns
test
fwait
inc
and
imul
loope
mov
fld
sti
outsl
pop
jmp
test
das
push
push
jle
inc
sub
xchg
jnp
mov
xchg
or
or
out
mov
mov
cs
dec
add
cli
dec
popf
adcb
ret
push
or
leave
sbb
jae
xor
mov
sti
cmp
fldcw
loope
aam
jecxz
adc
fcoml
lods
nop
les
push
dec
xchg
out
in
xor
mov
push
adc
jmp
push
les
jno
in
inc
mov
mov
cwtl
jbe
clc
lods
sbb
jno
or
lret
sbb
fists
pusha
cmp
sub
call
lcall
xor
cwtl
sbb
or
cmpsb
loopne
push
pop
mov
in
out
inc
int3
and
loope
push
je
xchg
adc
les
jbe
xchg
fucomip
dec
adc
sbb
call
aas
pop
jmp
dec
loop
xchg
mov
adcb
scas
mov
jmp
nop
dec
push
pusha
cmp
movsb
in
scas
jge
xor
or
addl
adc
pop
mov
inc
pusha
mov
lahf
dec
jg
nop
es
stc
xchg
add
fdivrp
and
pop
sbb
pop
xchg
popf
das
xor
dec
pop
dec
mov
sub
xchg
ljmp
inc
mov
jmp
cmpl
sub
std
sub
push
dec
sbb
or
andb
sbb
push
pop
stc
out
loopne
xchg
imul
fisubl
clc
test
xlat
dec
mov
jae
xchg
cmpsb
pop
lds
mov
cwtl
cmp
cmp
push
orb
pop
scas
dec
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
jmp
popa
cmp
cmpsb
stos
and
insl
jnp
jl
push
jl
xchg
push
sbb
loopne
mov
inc
iret
push
adc
xor
daa
loopne
add
insl
out
sbb
sub
jbe
les
lea
repnz
pop
test
adc
jno
addb
nop
into
adc
pusha
out
dec
adc
jns
repnz
fadd
test
sahf
inc
and
fstl
xlat
pop
in
mov
shl
popa
cwtl
lods
xor
mov
ret
in
adc
pop
and
das
iret
xor
in
rcl
aaa
push
sbb
sub
sub
dec
mov
sti
addr16
decb
cmp
lret
mov
popa
fcoms
add
insb
mov
add
js
adc
scas
pop
icebp
sub
movsb
add
push
adc
sub
cmp
repz
repnz
jecxz
shlb
add
repnz
push
add
xchg
mov
outsb
adc
addr16
addps
lea
clc
fdivrp
xor
xchg
jne
mov
add
sub
inc
les
fucomi
je
iret
loope
clc
push
and
jae
mov
mov
imul
aam
xchg
cs
inc
lock
xlat
mov
mov
out
arpl
and
xchg
std
jns
cmp
dec
sbb
ds
into
add
repnz
sbb
lock
cmp
sbb
ja
sbb
fists
jb
movsb
std
dec
pop
fwait
out
jae
es
idivl
out
adc
les
inc
mov
cmp
push
mov
cmp
and
fidivrl
jnp
dec
jg
out
jne
aam
mov
test
imul
popf
xor
lahf
xor
jl
iret
insl
lods
push
xchg
sub
dec
notb
pop
sbb
and
test
rorb
lods
pop
aam
adcb
inc
int3
lods
add
mov
test
lds
jae
rcrb
xor
adcl
rcll
sti
mov
xchg
fistpl
push
jae
mov
aad
push
stos
stos
sbb
jmp
inc
fucomp
lock
out
lock
jmp
lods
xchg
cmpsl
jmp
in
stos
jne
jnp
fwait
popa
or
fldl2e
xchg
dec
movsb
dec
ss
cmp
pop
mov
pop
mov
and
pop
adc
inc
push
repz
int
ss
loope
shl
test
sub
mov
sbb
mov
cs
cli
out
out
pusha
fldcw
lods
jns
and
mov
sbb
roll
int3
sahf
inc
rcrl
cmpsl
cmc
cmpsl
std
repnz
jmp
jge
add
rolb
ja
shll
cmpsl
jnp
sahf
xchg
add
addr16
scas
dec
jle
xor
add
adc
sbb
and
pop
sahf
jge
jmp
jge
mov
std
outsb
cltd
lret
xor
sub
fcompl
scas
add
sbb
and
push
faddl
shl
and
xchg
cmpsb
cmp
clc
mov
test
outsb
mov
lret
sahf
push
inc
loope
stos
mov
fsts
cmp
sbb
fsubp
mov
into
dec
enter
push
aam
and
aam
add
xor
aad
pop
jno
adc
mov
test
jnp
shr
or
das
leave
dec
adcb
ja
jns
shrd
shr
mov
mov
mov
jmp
push
or
sbb
sbb
jo
push
sbb
fidivl
cmp
cmp
mov
inc
mov
ja
ljmp
inc
jg
subb
xchg
fs
mov
mov
xchg
movsl
push
negl
outsl
lods
mov
inc
mov
out
ret
pop
xchg
fistps
jnp
loopne
mov
adc
adc
jg
ja
fcomi
jle
movsb
imulb
test
addr16
imul
int
xchg
outsl
leave
mov
cmpsl
jp
out
mov
js
fsub
or
std
xchg
jecxz
sbb
dec
push
mov
cmp
sub
in
xchg
lahf
into
cmc
cltd
add
hlt
in
in
xchg
fs
mov
adc
cmpb
sbb
xor
inc
fcomip
cmp
sub
mov
xor
test
and
in
jge
jbe
flds
pop
cmpsl
or
add
adc
loopne
jo
movsb
mov
mov
cs
insl
xor
pop
pop
or
jp
inc
ds
add
nop
jae
adc
pushf
and
mov
dec
dec
and
add
adc
insb
lods
ljmp
pop
add
inc
leave
pop
dec
stc
inc
jne
call
dec
xchg
jge
mov
cmp
lds
jb
rcll
jns
les
or
ret
fwait
cltd
add
loop
push
jmp
test
xchg
ffree
shll
notl
push
xchg
dec
push
enter
jnp
repz
aaa
fcoms
cmc
fildll
dec
add
xorl
mov
int
and
or
push
mov
adc
lods
gs
test
stos
rolb
add
and
add
pop
mov
pop
out
adc
sbb
sahf
je
adc
sub
mov
jecxz
lods
mov
mov
int3
sarl
mov
daa
or
push
xchg
lahf
adc
pop
ret
xchg
sbb
std
dec
jecxz
mov
add
mov
pusha
rorl
dec
movb
lds
push
or
popa
xlat
loopne
cltd
mov
psrld
add
inc
sbb
das
fildl
push
movsl
adcb
sub
data16
movsb
xor
or
sar
mov
adc
das
sar
xchg
mov
or
jmp
loopne
nop
mov
pop
sti
dec
push
outsb
push
or
or
xchg
dec
mov
push
aaa
xchg
lea
dec
xor
ljmp
fs
int
enter
test
jno
pop
adc
std
add
fwait
add
lds
fidivrl
data16
sbb
jbe
xchg
cmpsl
sub
add
dec
lret
cltd
in
mov
push
je
stc
jae
das
mov
scas
sbb
fbstp
popa
jne
cmp
cmp
into
movsl
cwtl
xchg
fstpt
push
inc
ret
jae
js
or
xchg
stos
mov
add
leave
outsl
push
mov
cmp
sti
pop
mov
dec
fsubr
jmp
pushl
push
jle
mov
pushf
and
mov
cwtl
mov
adc
xchg
pusha
mov
adc
adc
dec
fmuls
testb
pop
jge
or
lock
dec
dec
adc
orb
enter
jb
sbb
jno
mov
inc
inc
mov
scas
out
pop
add
jmp
out
arpl
push
into
lods
xchg
lods
rcll
sti
insb
and
jnp
jg
or
push
iret
jl
loopne
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
jmp
push
and
and
sbb
push
sbb
arpl
ljmp
dec
mov
pop
icebp
or
push
lds
enter
jp
outsl
cmpsb
insl
and
and
inc
xchg
mov
xchg
sbb
push
sub
cmp
or
push
in
idivb
push
adc
popa
int3
fwait
lret
test
push
test
fs
adc
mov
jno
loope
sahf
fistpll
cmpsb
test
push
orl
sbb
dec
test
pushf
mov
out
and
iret
add
js
xchg
mov
xor
and
nop
jecxz
dec
sub
mov
xchg
push
add
add
cltd
gs
push
pop
rcr
inc
xor
jno
mov
and
adc
jmp
movsl
adc
cmpsl
jmp
adc
mov
dec
aaa
rcll
js
mov
mov
arpl
xchg
call
std
adc
sbb
arpl
xchg
adc
hlt
sbb
pop
in
stos
cmpsl
or
aam
sbb
xor
dec
sbb
pop
scas
lret
bound
in
mov
bound
push
xrelease
jecxz
xor
aam
aam
mov
std
outsb
fsubrl
adc
inc
mov
push
pop
mov
dec
mov
dec
addr16
push
jae
xchg
jb
pop
test
in
sbb
and
pop
cmovbe
movups
les
out
stos
scas
stos
push
pop
test
shll
shlb
push
jns
cmp
popa
insl
xor
arpl
xrelease
pushf
lahf
sbb
hlt
int3
cs
jo
loopne
mov
sti
fsubs
out
adc
mov
pop
lahf
mov
inc
sbb
dec
scas
ret
lahf
add
jb
les
iret
cli
cli
or
push
pop
xlat
dec
lods
orps
xchg
les
cmp
out
jae
mov
dec
inc
jmp
aas
adc
mov
fidivrl
movsb
inc
aas
movq
mov
andl
pop
cmpsb
add
cmp
sbb
cmp
insl
stos
pop
mov
arpl
arpl
cmc
cs
jns
push
inc
push
rcll
xchg
ret
cwtl
lods
mov
inc
xor
loopne
cmp
mov
mov
cmp
ljmp
xor
pop
or
xor
sbb
lea
mov
mov
ja
push
and
cwtl
fnstcw
test
sub
xor
aad
mov
mov
aaa
into
in
test
andb
mov
mov
dec
inc
icebp
out
movsl
inc
inc
movsl
add
add
mov
push
push
and
pop
nop
in
and
push
call
ret
and
rolb
fs
jne
jmp
cmc
mov
mov
leave
or
push
dec
insb
push
fwait
stc
xchg
mull
jnp
xchg
fucom
lods
je
lds
out
ficomps
sub
or
xchg
fldl
out
xor
xchg
out
aas
cltd
rol
sbb
jecxz
adc
jl
ss
loope
jg
clc
frstor
fstp
add
cmp
int3
popa
mov
divb
mov
xchg
movsl
jno
stos
in
hlt
movsb
std
or
inc
aad
xchg
push
add
jmp
cltd
in
shlb
lret
push
and
or
mov
add
or
mov
jmp
inc
pop
push
fwait
xor
pop
stos
adc
sub
mov
add
cmpsb
scas
dec
sbb
in
push
cmp
cmpsl
add
push
lret
push
daa
stos
popa
loopne
insl
and
adc
push
inc
adc
pop
arpl
or
stos
cmp
mov
push
mov
fadds
sarb
cmp
decb
xchg
push
sbb
pop
out
rcll
fidivrl
aaa
pop
xchg
dec
jg
inc
ljmp
arpl
add
cmpsl
les
pop
sbb
add
pushf
pop
or
lock
adc
sti
inc
jb
pop
enter
bound
cmp
dec
jle
cli
mov
cmpsl
leave
sahf
sti
daa
mov
mov
and
mov
lcall
lret
push
shl
mov
push
mov
in
cmc
jmp
pop
or
xor
sbb
xor
jmp
mov
movsb
and
cltd
dec
cld
inc
add
cmp
xor
xchg
outsl
icebp
int
mov
lret
pop
inc
push
mov
ds
xchg
inc
out
div
sub
xlat
adc
icebp
jle
jb
mov
fnstenv
add
add
cld
inc
sti
js
ja
jno
shrl
adc
inc
jnp
popf
movsb
vpmadcsswd
pop
lret
jb
test
xchg
in
das
jle
aas
dec
lods
jle
jbe
jne,pt
sub
ljmp
js
xchg
or
jmp
inc
mov
popf
lock
test
dec
fisubrs
adc
stc
jle
sub
xchg
ret
lret
mov
sti
and
mov
lock
mov
dec
jnp
push
shl
cmp
push
aas
iret
clc
fnstsw
sbb
aas
add
cmp
fbld
add
xchg
adc
int3
mov
cmp
fs
or
sub
jns
add
push
jp
dec
xor
cmp
in
add
xchg
cmp
mov
loop
test
mov
sbb
mov
jnp
push
adc
scas
popa
sbb
in
lock
pop
jmp
add
repz
ljmpw
add
sahf
mov
in
aad
dec
pop
xchg
ret
scas
sti
lret
or
push
insl
nop
icebp
mov
jne,pt
inc
or
stc
mov
mov
int3
out
or
mov
jp
stos
daa
xlat
lret
sub
shlb
add
pop
dec
cmp
cmp
out
mov
int3
sub
stos
insb
fstpt
xlat
push
lret
xchg
icebp
insb
adc
sub
test
jne
jb
push
cmp
jnp
out
fisttps
xor
push
xchg
mov
fldt
test
test
inc
xorb
sbb
dec
scas
dec
jl
outsl
test
ja
sbb
jb
mov
mov
fbld
xchg
adc
test
mov
je
jbe
inc
cmpsl
sub
test
and
std
movsl
repz
test
or
xlat
enter
insb
mov
movsb
call
mov
stos
add
sub
adcb
ret
mov
cmp
cld
sbb
mov
pop
or
aas
je
or
pop
jmp
mov
adc
jg
sub
sbb
cmp
mov
notl
lcall
add
dec
pusha
pop
mov
xchg
lret
rolb
test
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
jmp
in
sarb
dec
sbb
icebp
scas
mov
movsb
movsl
mov
mov
das
inc
loope
dec
mov
and
mov
stc
outsl
push
mov
adc
loope
fsubl
movsl
fisttps
in
inc
gs
flds
lock
cmc
leave
pop
cmp
sbb
lods
mov
jge
inc
fwait
mov
push
add
dec
mov
sub
add
mov
data16
xor
sbb
test
iret
adc
push
mov
cwtd
ret
loope
cmp
test
add
mov
jbe
push
in
stos
or
not
xchg
pop
cmpsb
dec
fnstenv
jno
mov
lahf
lods
sahf
aas
lret
xchg
ret
aaa
imul
inc
and
out
rcl
cmp
xor
negl
jl
push
shrl
aad
xchg
inc
out
leave
ret
xchg
lock
loopne
pop
push
outsl
outsb
dec
pushf
aad
xchg
sub
shll
cmp
jmp
jge
cwtl
arpl
push
sub
rorl
cld
sub
jbe
dec
cmp
in
insb
push
push
shr
jp
or
jne
dec
sbb
sub
mov
aad
lods
call
sti
mov
cmp
fwait
rcl
pop
adc
or
cmpsl
into
xchg
addl
out
inc
and
mov
lds
ja
imul
add
cmpsl
or
mov
loopne
xlat
clc
push
inc
pusha
sub
outsb
aad
insb
stos
mov
adc
or
mul
fdivs
mov
sbb
stc
sahf
push
pusha
add
jle
repz
fwait
and
dec
mov
movsb
inc
mov
push
push
mov
cmp
dec
mov
mov
xchg
cmp
fs
push
mov
inc
sub
jge
pusha
cmpsl
outsl
popa
jno
xor
sub
lret
jg
mov
push
stc
mov
xchg
arpl
dec
test
leave
mov
subb
aam
sbb
mov
cmp
push
lea
xchg
and
jae
in
pop
mov
xor
adc
mov
outsl
in
outsl
push
xchg
popf
lock
or
or
aam
mov
push
jg
daa
sbb
xor
adc
je
rcl
add
sbb
aas
mov
push
rol
mov
stos
mov
push
jl
jecxz
pop
xor
and
out
cmpsl
push
inc
scas
testl
or
mov
int
adc
shrl
test
adc
inc
and
gs
xor
arpl
dec
push
sbb
fcoml
ss
faddl
mov
nop
and
pusha
lea
das
mov
mov
dec
hlt
pop
ja
sbbl
cmp
xchg
jns
fistps
and
arpl
mov
sub
mov
cmp
push
jge
cltd
in
sarb
sub
push
stos
das
sbb
and
fwait
out
xchg
flds
cmp
push
repnz
fwait
mov
ja
test
sti
addr16
dec
push
push
push
jmp
das
orl
adc
adcb
adc
mov
dec
pop
mov
ret
stos
insl
ret
das
sbb
xchg
mov
sbb
aaa
rcrl
jbe
movsl
call
jmp
inc
and
sbb
daa
and
cltd
lahf
jo
dec
imulb
jae
sbb
xchg
sub
ret
push
push
lcall
ret
mov
cmp
jl
jb
cmpsl
mov
mov
xorl
arpl
repnz
popa
mov
sbb
daa
sahf
or
inc
sub
and
add
add
xor
push
jl
cwtl
cltd
mov
and
inc
sub
scas
rcrl
call
add
add
aaa
inc
jmp
and
pop
imul
xchg
push
mov
rclb
loop
pushl
xchg
sbb
pushf
sbbb
in
aam
sub
je
subl
dec
aad
adc
in
sahf
mov
je
ds
cmpb
movsl
jmp
fstp
mov
adc
dec
dec
mov
push
inc
mov
adc
das
xchg
sarb
ss
cwtl
scas
scas
lea
mov
jmp
add
daa
xchg
aaa
out
imul
mov
repz
pop
pop
xchg
inc
cltd
add
mov
in
mov
inc
cmp
mov
not
xor
mov
mov
das
in
aad
add
leave
movsl
mov
mull
cmp
inc
jp
or
out
jle
mov
inc
jae
mov
div
push
mov
mov
test
mov
out
loopne
shrb
movsl
sub
fcoml
test
mov
sti
add
sti
mov
cmp
push
xlat
addr16
ss
lds
mov
sahf
lahf
stos
mov
adc
jnp
mov
test
repnz
iret
cmpsb
dec
add
lret
call
cmp
pop
xlat
add
inc
xor
inc
push
mov
aad
dec
mov
pop
jbe
pop
subl
mov
scas
and
and
stos
rorl
adc
imul
xchg
cld
adc
popf
or
push
or
fildll
or
jmp
imul
das
dec
ds
je
into
jns
inc
mov
xor
jns
sbb
daa
movb
aas
and
popa
lds
cmpsl
dec
int
xor
adc
and
movsb
mov
push
pop
ljmp
inc
mov
fwait
out
mov
jo
mov
pop
mov
shll
cmp
or
movl
popa
mov
add
fstl
and
shlb
mov
jb
insb
pop
jg
jmp
int
push
data16
adc
lret
jg
push
push
xlat
xor
cli
test
dec
pusha
jns
inc
pop
mov
mov
jae
fs
lret
ja
mov
xchg
pop
test
das
stos
ja
imul
or
roll
push
push
pop
pop
shl
in
shrl
jecxz
in
sbb
cmpsb
enter
aad
cmc
xchg
mov
and
shll
fmul
mov
mov
test
jb
add
in
mov
and
test
mov
pop
sbb
les
push
pop
cwtl
sub
sub
dec
mov
mov
lods
aaa
lods
inc
mov
int3
push
sbb
mov
iret
push
sbb
cmp
sbb
ljmp
aam
sub
mov
adc
loop
out
fdivs
outsb
pusha
ret
push
push
rcrl
je
je
je
je
je
and
je
and
imul
and
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
jmp
push
and
shll
push
and
jmp
enter
out
imul
mov
shll
jbe
out
mov
rcrb
aas
jo
and
add
or
inc
jle
cs
jl
dec
jmp
fs
iret
fsubs
and
jo
xchg
dec
lods
shl
or
popf
adc
adc
imul
and
push
popf
out
mov
push
mulb
out
fildll
fwait
sub
leave
aas
jp
and
iret
dec
mov
repnz
negb
sub
mov
mov
sbb
pop
mov
popf
mov
movsb
cmp
stos
and
arpl
jae
cwtl
fsts
lock
mov
cmpsl
es
int
inc
mov
outsb
jecxz
rol
sti
cld
add
loope
fisubl
push
scas
mov
mov
in
cmpsb
fcoml
push
xor
xor
push
test
jnp
xchg
xor
adc
movsb
or
jo
or
jmp
sti
sub
push
int
mov
repnz
js
cmp
adc
cwtl
mov
and
mov
push
jne
imul
mov
scas
sub
inc
addr16
push
sahf
inc
ss
fistpll
push
push
dec
clc
mov
andb
decb
xor
sub
cmp
sub
fdiv
jle
iret
mov
dec
jno
in
cwtl
mov
xchg
xchg
lea
rorl
push
inc
jne
stos
shl
push
aaa
sbb
xchg
add
data16
xchg
jecxz
shrb
out
fadd
mov
sbb
mov
lret
sbb
test
sti
imul
mov
movsb
jae
outsb
cld
xor
sub
add
xor
outsb
push
xor
aad
push
gs
or
pop
add
sahf
test
pop
mov
test
daa
mov
out
mov
mov
stos
nop
nop
test
cld
loop
mov
add
cmpsb
loopne
sarl
push
xchg
repz
mov
das
in
fwait
inc
in
outsl
lock
js
clc
jge
adc
imul
or
pop
push
shrl
jg
jmp
jge
jbe
sti
sbb
cmp
lcall
push
adc
sahf
and
lock
pop
xchg
ret
test
repz
in
or
lcall
mov
aaa
faddp
addb
pop
frstor
loope
fnstcw
pop
lcall
sbb
push
jbe
call
ret
dec
pop
out
rclb
adc
test
enter
push
mov
rorl
xchg
imul
fisubs
inc
lock
cmc
sub
push
dec
push
xchg
and
pop
enter
mov
xor
in
push
pop
xor
jle
xor
repnz
loopne
mov
scas
mov
xor
sub
sbb
out
dec
cs
lds
jbe
xlat
cmp
sbb
pop
add
stc
mov
jae
sub
std
sub
cmp
lret
add
xchg
std
and
sub
int3
sbb
jmp
inc
adc
sbb
mov
xchg
pop
repz
adc
pushf
fsubs
enter
inc
dec
arpl
mov
xchg
inc
pop
lds
cmp
ficompl
movsb
mov
pop
stc
jecxz
test
mov
scas
aad
nop
sub
sub
ficompl
push
xlat
js
aad
loope
or
mov
fsubr
lret
add
dec
push
jle
ds
je,pn
xchg
mov
xchg
arpl
sbb
int3
es
adc
bswap
add
mov
pop
mov
gs
pop
or
lods
ret
movsb
xchg
loope
test
mov
shrb
push
stc
xchg
iret
xchg
mov
mov
lret
out
xor
out
inc
ljmp
sti
mov
call
pushf
dec
test
or
out
lds
pop
mov
push
adcb
imul
aas
add
movsb
adc
std
mov
pop
mov
imul
cmp
sub
add
dec
sti
loop
aaa
jnp
push
aaa
test
or
dec
aam
rorb
add
jae
sub
add
loop
mov
and
in
out
xor
pop
pop
xchg
ss
cmp
mov
pop
add
push
mov
hlt
es
or
fs
arpl
and
rcll
cltd
xchg
cmp
stc
pop
loope
out
inc
popf
std
and
popa
arpl
fcomps
cmp
movsb
sarl
in
adcl
mov
xor
pop
sbb
and
pop
vucomisd
stos
pop
mulb
scas
push
xchg
inc
push
jge
dec
out
pop
mov
ret
jo
rcrb
scas
ret
enter
jne
pop
icebp
xor
pop
mov
add
xor
push
shrl
testb
jle
adc
stc
and
hlt
dec
add
inc
mov
adc
dec
imul
loopne
enter
fadd
mov
jbe
scas
add
xchg
or
jo
sbb
mov
jl
jbe
pop
sub
in
ret
fisubl
jp
sbb
mov
pop
and
and
or
adc
push
and
jae
loop
xor
leave
std
xchg
not
mov
mov
add
sarb
scas
cmpsb
shrl
lods
leave
inc
ljmp
cmp
dec
cmc
fidivs
pop
rdpmc
xacquire
insl
inc
rolw
push
sbb
fadd
xor
mov
aaa
push
and
testl
test
inc
pusha
les
push
jae
clc
mov
lcall
mov
ja
pop
xor
lods
inc
popf
mov
cltd
jmp
push
nop
mov
xlat
insl
sbb
push
div
sub
lds
fisubl
adc
mov
mov
cmp
mov
sar
xor
and
mov
xchg
push
test
adc
call
jmp
shl
shrb
in
jle
adc
es
and
dec
push
and
pop
and
nop
mov
adc
xor
or
mov
lea
pop
popf
mov
test
inc
ror
dec
and
dec
jns
cmc
sub
jmp
mov
mov
cli
popa
sub
dec
push
outsl
fs
nopl
popf
pop
dec
fildl
adc
add
ds
pushf
sahf
add
icebp
xor
sbb
icebp
cld
pop
xchg
enter
push
test
pop
dec
jge
and
test
mov
or
repnz
fs
xchg
movsl
outsl
push
dec
pop
push
in
mov
jmp
popa
lahf
sbb
aam
adc
push
leave
or
rorl
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jmp
lahf
cmpsb
out
cltd
out
inc
push
push
mov
test
ss
push
sbb
outsl
das
sbb
psubd
xlat
movsb
sbb
jecxz
adc
pop
int
add
lods
cs
roll
or
sbb
pop
testb
jge
mov
push
repz
pop
xchg
cmpsl
mov
mov
std
outsl
xchg
movsb
and
pop
mov
xor
pop
lods
sub
loop
scas
xchg
mov
mov
stos
cmp
adc
loop
ror
add
movsb
mov
sub
sub
loopne
popa
dec
jge
pop
xchg
data16
sti
es
inc
mov
cwtd
cmp
xor
pop
std
lods
dec
imul
sub
pop
fdivr
clc
fs
and
xchg
fldenv
movsb
outsb
push
add
sub
cmp
test
add
cmc
push
dec
push
inc
test
pop
adc
pop
pusha
fiadds
call
ljmp
push
xor
cld
das
pop
lret
test
pusha
pop
fisubs
inc
cmovg
pop
pop
jle
mov
or
loop
sub
ds
pushf
add
movsl
shll
cs
frstor
xor
cmpsl
xchg
mov
stos
out
ljmp
std
test
pop
paddusb
dec
les
mov
adc
es
fwait
rorb
ret
jno
mov
scas
stos
jle
sub
add
and
fdivl
cwtl
or
rcll
and
fisubrs
mov
jp
lea
add
and
mov
out
cltd
pushf
dec
lahf
or
lret
out
rcrb
dec
sub
or
loop
dec
in
data16
mov
imul
lock
xor
xor
lock
xchg
pushf
jmp
xchg
iret
mov
mov
jno
arpl
xchg
and
jno
sti
test
push
bnd
mov
ljmp
sub
cld
test
pop
xlat
push
mov
push
bnd
dec
mov
das
out
add
sar
dec
push
bound
ret
push
dec
push
dec
aaa
fisttpl
sbb
and
or
or
sub
adc
lcall
adc
jmp
lea
dec
les
repnz
push
test
xchg
movsb
movsb
test
pop
add
sbb
dec
push
dec
add
inc
mov
ret
sbb
rol
cltd
fwait
ret
bound
add
loope
push
sti
in
scas
movsl
popf
int
popa
sbb
iret
adc
push
filds
mov
pop
rorl
bndstx
mov
dec
into
bound
jecxz
sbb
jecxz
ljmp
mov
aaa
xchg
push
sub
test
mov
stos
mov
ds
jbe
or
fsubr
pop
adc
lds
jg
push
dec
aam
dec
pop
dec
add
iret
and
cltd
sahf
lea
or
push
dec
or
mov
sub
mov
push
and
add
jo
sub
xor
inc
inc
push
imull
xchg
xor
hlt
testl
out
inc
stc
xlat
mov
popf
mov
insb
fnstsw
js
inc
movsl
adc
repz
jg
xor
adc
stos
in
out
repnz
push
lret
cmp
xchg
dec
adc
xchg
aam
arpl
imul
cli
pop
ja
sbb
rol
pop
int3
jne
cmp
jne
xor
jmp
mov
mov
jmp
ss
xchg
sbb
sbb
fwait
push
out
jl
jecxz
mov
mov
xor
fistps
stc
cli
bound
out
outsb
xchg
out
test
or
getsec
xorl
adc
xor
fs
pmullw
loop
cs
test
adc
xchg
jg
or
cltd
hlt
adc
sbb
inc
mov
mov
cli
push
mov
and
cmp
cmp
bound
push
rcrb
addl
pop
gs
add
int
adc
jmp
and
dec
cmp
add
mov
dec
fsubrs
cmp
cmp
mov
xor
aas
test
ficoml
es
dec
cmp
add
out
adc
jg
mov
movb
pop
icebp
fidivl
or
and
fnstenv
inc
add
jl
nop
cltd
mov
or
arpl
outsl
mov
mov
push
iret
pop
inc
inc
pop
loope
mov
push
push
andps
js
negl
loope
inc
xchg
rol
adc
ja
fsts
test
sub
std
mov
mov
repnz
push
subb
sub
ret
push
jge
test
aaa
dec
aad
popa
rol
or
mov
data16
cs
xor
ret
call
push
fidivs
in
inc
jns
fcmovnu
mov
cmpsl
pop
lods
aas
inc
dec
mov
mov
je
mov
popa
stos
imul
xchg
repz
cmpsl
fimuls
jno
insl
sbb
in
pop
push
repnz
mov
subl
or
and
shll
jl
mov
in
test
sarl
inc
popf
adc
dec
test
roll
repz
jg
scas
andb
xchg
jbe
jg
mov
dec
xor
insb
sbb
jmp
mov
inc
das
jg
das
mov
jae
xchg
andb
bound
sub
add
or
stos
call
jbe
adc
inc
lds
mov
and
jbe
imul
mov
xor
jp
inc
xor
mov
cs
sbb
stc
xor
add
jns
popl
aas
or
mov
sbb
push
cs
divb
jb
inc
int3
jle
or
loope
fsubrl
mov
cli
insl
mov
and
enter
lds
movsb
cmp
fmul
mov
gs
arpl
rclb
push
dec
ljmp
add
leave
cmp
or
and
mov
mov
jns
adc
pushf
cs
mov
mov
sub
inc
xchg
ja
sti
ljmp
adc
inc
ja
jecxz
or
jp
add
mov
add
fcoms
dec
fcompl
cmc
test
xor
imul
push
and
mov
outsl
gs
test
jne
xchg
adc
jae
push
iret
orl
push
sub
or
cmp
push
add
sbb
mov
mov
sbb
lods
pop
cli
daa
imul
pop
sbb
cmp
xchg
das
cwtl
scas
dec
xor
mov
xchg
mov
xchg
cmp
cmp
fnstsw
leave
and
nop
iret
loope
mov
xlat
jmp
sti
push
sub
jge
ljmp
sbb
ret
mov
mov
jmp
mov
push
push
jmp
mov
cltd
lahf
bound
mov
stos
jg
push
sbb
ds
xchg
inc
and
xorl
dec
std
jp
cld
cmp
cs
push
cmp
rolb
out
xchg
imul
xor
out
sbb
cmp
sub
jnp
loope
sarb
mov
mov
mov
outsb
out
loope
or
push
out
or
pop
jp
sub
dec
lahf
jmp
jmp
outsl
in
movsl
cld
push
mov
push
add
in
call
mov
lcall
pop
out
mov
ljmp
mov
cli
rcll
stc
fildl
push
adc
mov
add
test
mov
adc
mov
jno
insb
cmp
cmpsb
cmp
out
pop
xchg
and
int3
cmc
push
jnp
sbb
push
jmp
test
cwtl
mov
shlb
inc
pop
sub
test
popa
jnp
push
arpl
insl
movsl
cwtl
or
sbb
adc
add
inc
push
dec
daa
cmpsl
jp
jne
cmpsb
and
insl
and
sahf
ljmp
jecxz
ss
pusha
shl
fs
mov
andl
push
mov
mov
jecxz
jae
mov
cli
pop
sub
divl
fcmovu
in
lret
pop
ja
outsl
ret
testl
stos
lods
pushf
ret
loopne
jmp
in
jecxz
add
push
sahf
mov
cmc
xor
jmp
sub
jg
loopne
daa
xchg
sahf
dec
sbb
clc
jbe
sbb
test
cltd
xchg
cmp
and
mov
xchg
mov
mov
dec
pop
dec
xor
inc
scas
lret
jo
or
xlat
mov
aaa
inc
push
adc
cmpsl
stos
add
lods
out
cmp
inc
mov
or
mov
mov
aaa
jns
idivl
in
and
mov
loopne
mov
mov
mov
inc
pop
mov
call
int3
cmp
movsl
inc
popa
or
adc
xchg
xorl
ljmp
sub
js
ds
push
xchg
dec
pop
je
mov
pop
lock
and
jp
and
pop
and
xor
cmc
les
cmp
int
cmpsb
mov
gs
dec
cs
inc
dec
xor
lahf
mov
fdivr
iret
pop
mov
cmp
lea
pop
dec
int
push
adc
push
adc
jg
in
mov
jns
pop
shlb
or
xchg
adc
aam
enter
lds
fwait
adc
fwait
push
sbb
pop
and
dec
cwtl
nop
push
fcoml
inc
outsl
push
faddl
jns
loope
stos
addr16
pop
sub
enter
bound
mov
inc
push
sub
xchg
into
xor
adc
insl
sbb
add
enter
out
dec
inc
lock
push
xchg
mov
pop
sti
mov
push
in
mov
add
movsl
rcll
cmpsb
int3
push
xchg
cmpsl
xor
lock
xor
adc
test
sbb
xor
cmp
call
ficompl
cmpl
cmp
sti
cwtl
fsubs
dec
dec
mov
test
bound
outsb
dec
mov
cltd
dec
pop
mov
mov
into
pusha
push
pusha
push
and
jb
mov
inc
lea
mov
pop
test
sbb
adcl
into
adc
inc
and
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
jmp
dec
inc
mov
push
push
push
mov
push
sbb
insl
clc
test
jo
rclb
lahf
out
ja
lea
pop
lcall
bound
mov
test
aad
push
adc
inc
mov
scas
sub
cmp
jno
sar
inc
cwtl
fs
gs
xchg
dec
add
mul
sbbb
add
outsl
sub
push
mov
jnp,pt
sarb
sub
aaa
test
insb
or
lret
lret
xchg
aaa
aam
or
in
popf
insb
data16
insb
push
jae
das
and
xchg
stc
mov
adc
jb
pop
out
sbb
push
sbb
mov
addr16
out
mov
mov
xchg
mov
bound
in
std
pop
shlb
rolb
les
and
adc
stc
pop
mov
imull
sbb
pop
add
pcmpgtb
pop
mov
adc
fisubrs
jns
push
adc
xor
jns
or
push
jae
je
out
mov
lea
sbb
out
inc
ds
decl
adc
rolb
mov
les
push
jl
call
cltd
mov
jne
inc
inc
push
shl
push
lock
xor
fsubrp
sbb
js
pop
mov
mov
daa
mov
daa
fldenv
ret
cmp
popf
pusha
fdivl
fsubs
repnz
aas
jl
dec
xchg
out
popa
es
pop
push
leave
sarb
push
inc
iret
in
jle
sbb
aad
gs
mov
pop
cmp
mov
popf
mov
jnp
into
or
hlt
lods
cmpsl
push
mov
clc
cmp
sub
sti
pushf
jnp
mov
inc
insb
pop
cli
iret
es
push
push
inc
ret
pushf
adc
pop
adc
and
mov
or
cmp
sbb
addb
insb
xor
cmp
mov
add
jl
mov
xchg
test
and
fwait
cmpsb
cmp
mov
pop
lcall
scas
shlb
jecxz
test
push
rcrb
jmp
or
loop
dec
sbb
int3
add
lret
cs
mov
pop
mov
movsl
jp
sbb
into
cmp
ss
lcall
mov
test
sub
dec
jp
rcr
std
insl
jle
mov
icebp
cmpl
mov
lret
adc
adc
out
and
inc
popf
daa
jo
movsb
mov
je
mov
inc
iret
adc
aas
or
movsl
dec
mov
aad
and
dec
bound
ja
jno
mov
add
and
cltd
jge
lahf
test
add
je
mov
pop
lret
les
cwtl
out
aam
jns
xor
cmp
push
ret
call
mov
pop
dec
stos
mov
adc
dec
insb
dec
xlat
jne
cmp
leave
lret
adc
stc
dec
call
xchg
ja
jae
jbe
xchg
dec
inc
inc
inc
jo
lds
les
dec
adc
add
aad
daa
les
inc
jbe
gs
les
xchg
xchg
jg
test
add
lds
sbb
mov
inc
ret
or
test
pop
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
jmp
inc
mov
and
stos
mov
push
sbb
js
daa
mov
lret
inc
in
or
and
cs
adc
dec
popa
pop
stc
fmull
repnz
mov
push
fldenv
fwait
mov
outsb
adc
push
mov
lods
mov
fwait
das
aad
je
xchg
cmpsl
sahf
es
add
rclb
stc
pop
xor
pop
in
cmpsl
loop
xchg
inc
imul
cli
shrl
in
add
scas
sbb
pop
push
fildl
xlat
push
lret
cld
std
push
nop
cmpsb
add
iret
in
out
mov
mov
sub
xchg
cmc
stos
add
ds
dec
xchg
jno
test
je
push
push
or
inc
or
int
js
jo
jle
flds
icebp
ret
jl
ja
push
stos
push
jno
mov
dec
cmp
loopne
divl
cwtl
fidivrl
add
xor
or
lea
ljmp
adc
pop
jmp
xorl
mov
in
cmp
mov
adc
cmp
mov
add
sbbb
sub
mov
and
arpl
roll
fadds
pop
sbbb
jle
jl
cmc
xchg
ljmp
mov
pop
in
cli
push
cmp
cmp
push
mov
outsl
inc
fcomp
mov
adc
and
test
in
mov
push
sbb
sub
xor
xor
mov
xchg
loope
xor
xor
push
push
test
lcall
dec
mov
lock
jg
aas
out
mov
sub
xchg
add
iret
push
inc
ret
and
out
adc
jns
mov
movsw
jns
bound
add
xchg
in
idiv
mov
dec
jmp
add
loopw
bound
xor
test
lods
jl
xor
and
cmp
int3
addr16
shlb
fcmovu
xchg
pop
mov
mov
add
pushf
push
pop
or
push
sbb
cmc
jge
mov
call
cmp
push
sub
jecxz
xchg
mov
arpl
ret
fwait
ja
fs
insl
insb
sub
cmp
lcall
cmp
shl
push
cmp
shr
repnz
push
pop
mov
flds
xchg
or
test
and
inc
cs
lods
daa
jae
push
mov
lcall
inc
inc
mov
ss
sub
testl
iret
jbe
add
xchg
pop
mov
dec
mov
and
aad
ljmp
movsl
cltd
lea
sbb
pop
push
popa
ret
je
cmp
jmp
andb
dec
sub
inc
mov
dec
cmp
jmp
stc
sbb
out
or
mov
shrl
xor
fidivrl
xor
idivl
cmp
sbbb
sbb
shl
add
into
lea
inc
push
sub
aad
adc
cmc
add
cmpsl
lret
hlt
xor
add
lahf
inc
adc
and
mull
cmp
addr16
in
movsl
jmp
fmull
xor
xchg
mov
int3
jl
sub
sahf
xchg
jb
inc
lods
and
aad
sbb
inc
popa
jnp
and
jge
in
lcall
mov
jl
test
xchg
inc
stos
cltd
fiaddl
pop
pop
cmp
shr
add
add
and
xor
pcmpeqw
push
sbb
sbb
mov
cwtl
in
loop
enter
lcall
clc
aam
push
adc
aas
sbb
aas
jbe
fistps
mov
loop
or
inc
movsb
push
pusha
ffree
sbb
enter
cmp
shl
jge
in
pop
stos
push
xchg
lret
cmpl
ds
push
sub
adc
leave
mulb
test
mov
xor
mov
cmpl
test
mov
xor
sbb
mov
ljmp
xor
imul
dec
pop
add
arpl
or
into
sub
andb
dec
mov
daa
aam
sbb
and
test
push
ret
jp
cltd
adc
sahf
sub
dec
pusha
inc
outsl
push
smsw
shll
sub
sub
and
stos
sub
mov
adc
int3
rcll
cmpsl
cmc
pop
cmpsl
shll
ds
xchg
enter
fbld
shrb
dec
pop
dec
add
sarl
hlt
cli
addr16
add
cs
lret
movsl
xlat
fisubrs
sub
xchg
outsl
inc
rorb
cmp
push
in
mov
push
lahf
push
and
jne
data16
in
cmpl
mov
bound
fdivl
adc
nop
mov
test
stc
cmc
sbb
sub
mov
dec
sahf
mov
arpl
shl
xchg
sbb
sbb
dec
xor
push
jge
sbb
fwait
cld
push
add
mov
mov
daa
loopne
add
jbe
pop
mov
or
repnz
jb
add
add
xchg
lahf
loop
xor
dec
cmp
lret
pop
rcr
call
dec
and
adcl
insb
punpckhbw
or
stos
mov
lret
shll
sbb
pushf
push
icebp
sub
pop
jbe
repnz
push
dec
cmp
stc
and
lock
push
mov
mov
stc
out
mov
xchg
fidivrl
movl
test
insl
mov
jp
xor
pusha
dec
or
mov
mov
jo
loope
aas
in
movsl
imul
and
jle
push
mov
jae
mov
mov
pop
aad
cli
neg
stos
filds
inc
cmp
int
in
je
mov
in
mov
test
pop
mov
lds
jae
gs
dec
lods
call
jne
divb
mov
and
pop
movsb
stos
mov
repnz
hlt
add
sbb
mov
aam
adc
push
jecxz
roll
mov
in
filds
arpl
ret
lcall
cwtl
push
lds
int
fisubrl
fwait
outsb
ljmp
sbb
mov
cmp
adc
and
mov
call
xor
test
jb
iret
mov
mov
lods
es
xor
jnp
aaa
mov
mov
std
xchg
xchg
pop
mov
sahf
push
jmp
icebp
in
mov
xor
sbb
bound
push
mov
fildll
pushf
dec
mov
ljmp
add
push
or
sub
into
fnstenv
push
add
rorl
push
mov
xlat
daa
loop
push
enter
arpl
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
or
push
cmpl
movl
mov
mov
movl
jmp
mov
cmpl
jg
push
push
call
sbb
mov
xor
mov
sbb
neg
xor
adc
mov
mov
and
push
mov
mov
sub
imul
push
add
movl
sub
movl
xorl
movl
mov
add
mov
xor
sbbl
div
xor
imul
neg
mov
orl
xor
and
xor
mov
xor
andl
div
orl
sub
cmpl
mov
mov
notl
jmp
movl
notl
cmpl
je
pushl
push
push
pushl
call
add
add
sub
adc
sub
movl
and
mov
mov
mov
sbb
movl
addl
movl
xor
movl
or
jmp
ret
push
sbb
mov
mov
sbb
push
das
push
sbb
push
xchg
or
hlt
pop
call
pop
xchg
jae
add
test
pop
jmp
aam
js
xor
rcll
xchg
mov
or
fcmovb
inc
pop
icebp
sbb
loop
jp
mov
or
mov
mov
xor
or
sub
jge
pusha
hlt
cmp
cmc
scas
pop
loope
xchg
lea
cli
arpl
in
out
fisubrl
and
sbb
lods
aas
imul
stos
xchg
xor
dec
sub
adc
push
pushf
fiadds
mov
leave
mov
iret
or
shlb
scas
xor
and
jmp
add
mov
xchg
stos
icebp
pop
pop
mov
mov
leave
jle
xchg
adc
bound
cltd
in
jge
dec
sub
nop
inc
xchg
and
xchg
or
daa
mov
loopne
jp
adc
push
dec
pop
inc
jle
roll
or
loop
int
xchg
nopl
mov
mov
repnz
loop
mov
mov
cmp
mov
mov
gs
mull
mov
xor
and
out
scas
pop
dec
jmp
cmp
shll
sub
jno
jl
mov
sbb
shll
cmp
jmp
ljmp
xchg
test
adc
fisttps
add
mov
jecxz
scas
lds
xor
xor
dec
aaa
sub
loopne
cmpsl
dec
fdivl
jmp
and
fcomp
cld
cmpsb
sarb
movsb
sbb
jge
je
adc
jle
sub
mov
mov
testb
fstl
pushf
mov
lods
and
push
test
sbb
je
push
jno
and
roll
jg
lods
jp
xchg
ret
jmp
jae
mov
cld
cmc
loop
jno
nop
xor
bound
ds
shlb
fs
mov
sbb
add
test
or
mov
xor
lods
leave
sti
xorb
rorl
jb
xchg
pusha
jne
and
ficompl
adc
or
int3
cmp
jp
leave
clc
xor
adc
cld
sub
les
mov
in
lret
mov
jle
repnz
lea
inc
inc
mov
enter
inc
icebp
dec
ucomiss
gs
push
add
push
lret
jl
fldl
xchg
jg
loopne
inc
sbb
jl
mov
js
gs
in
sub
sub
add
icebp
outsl
stc
pop
xchg
mov
fnstcw
adc
ret
out
lret
int3
pop
pop
add
sbb
fiaddl
lcall
and
pop
stos
add
or
inc
sub
pop
rcr
push
cmp
xor
xorb
mov
adc
add
mul
das
fbld
inc
mov
adc
xchg
xor
add
test
incl
add
sbb
xor
movzwl
sbb
imul
and
mov
cmpl
mov
mov
mov
jmp
movl
cmpl
jb
pushl
push
push
call
sub
inc
and
movl
and
xor
and
and
sub
mov
jmp
adc
fstps
and
cmpsl
repz
mov
sub
sbb
jbe
xor
je
jmp
mov
sti
add
fsub
jnp
sbb
push
lds
dec
and
mov
lds
popa
fsub
js
pop
adc
push
xchg
jge
gs
hlt
popa
mov
mov
dec
dec
insl
mov
mov
mov
mov
cmp
pusha
xor
pop
idiv
inc
cmpsl
add
pop
int3
scas
cmpsb
xchg
xor
call
cmp
cld
dec
test
inc
pusha
push
inc
adc
loop
mov
scas
mov
pop
add
popa
xchg
cmp
pop
and
mov
aas
in
lret
push
insb
pop
mov
gs
pop
lcall
sahf
adc
sti
mov
push
andb
add
arpl
fldl
dec
xchg
mov
shlb
gs
out
or
jecxz
xlat
jns
imul
or
mov
test
and
pop
sub
faddl
inc
in
popa
jbe
and
fwait
sub
xchg
xor
mov
shll
out
cld
test
adc
out
mov
adc
ret
movsb
cmp
mov
pop
ljmp
mov
jg
cmp
add
jg
xchg
movsb
push
pop
xchg
sub
pop
xchg
pop
mov
pusha
mov
iret
or
pop
aas
mov
add
sbb
jno
jo
into
add
mov
mov
pop
xor
lret
and
push
mov
cmp
dec
jnp
jp
cli
xlat
enter
inc
cli
arpl
xchg
leave
pop
lods
int3
dec
or
repz
fstpl
xchg
lock
mov
ret
inc
xchg
mov
xor
or
sbb
popf
insl
pushf
dec
xchg
cli
inc
push
or
into
mov
fnstcw
add
xchg
push
data16
dec
mov
fisubrs
pop
sbb
adc
scas
int3
sbbl
push
jae
sbb
iret
inc
jmp
pop
and
mov
stc
mov
or
dec
adc
mov
push
aad
and
ret
out
push
out
mov
in
add
cli
push
inc
leave
sub
or
pop
sahf
add
xor
sub
popa
fldt
sti
jle
stos
push
dec
ljmp
loopne
xor
xor
sti
bound
stc
push
mov
in
in
std
ja
push
sub
loope
xchg
sbb
xchg
into
xchg
insl
push
addb
popf
cltd
cltd
test
pop
clc
rcl
push
lcall
and
mov
arpl
xchg
cmp
or
insl
cmc
push
push
loop
sbb
pop
jnp
push
movsl
and
push
arpl
icebp
cli
jle
pop
add
pop
iret
cmp
std
push
imul
pop
dec
or
fcomps
sbb
or
xor
xchg
stos
add
xchg
loope
lahf
adc
add
in
sub
dec
mov
mov
add
add
movzwl
mov
mov
jmp
not
mov
cmpl
jbe
pushl
pushl
pushl
push
push
push
push
call
sub
movl
and
or
xor
or
mov
sbb
movl
movl
movl
orl
mov
imul
cmpl
movl
mov
mov
jmp
mov
movl
cmpl
ja
pushl
push
call
sub
incl
add
or
sub
mov
cmpl
not
movl
movl
mov
jmp
movl
cmpl
ja
push
pushl
call
negl
andl
and
movzbl
sbb
mov
subl
and
imul
and
imul
mov
sbbl
and
cmpl
movl
mov
not
jmp
movl
notl
cmpl
jg
push
pushl
push
pushl
push
pushl
push
push
pushl
pushl
call
inc
adc
and
movzwl
add
mov
addl
adcl
dec
subl
or
movl
mov
adcl
xor
or
mov
adcl
mov
xorl
lea
cmpl
mov
mov
mov
notl
jmp
movl
cmpl
jae
push
call
dec
orl
mov
add
sbb
mov
adc
and
mov
mov
mov
xor
movl
not
movl
subl
movl
xor
mov
cmpl
movl
notl
mov
jmp
movl
mov
cmpl
jb
push
push
call
movzwl
xor
mov
add
mov
mov
adc
inc
xor
sub
andl
xor
add
mov
addl
or
andl
add
or
mov
addl
or
add
add
or
xor
mov
cmpl
mov
mov
movl
jmp
movl
mov
cmpl
jne
pushl
push
push
call
sub
xor
add
mov
add
adc
andl
movl
cmpl
mov
movl
movl
mov
jmp
mov
cmpl
jge
push
push
push
call
and
add
adcl
and
sub
subl
movl
or
movl
movl
mov
add
xorl
mov
subl
sub
decl
mov
lea
or
adc
sub
mov
cmpl
movl
movl
mov
jmp
mov
mov
cmpl
je
call
sbbl
xorl
add
andl
or
movl
movl
xor
mov
movzwl
or
add
cmpl
movl
movl
jmp
mov
cmpl
jg
push
call
adc
sbb
movzwl
add
addl
orl
mov
and
imul
mov
addl
imul
xor
mov
div
or
sub
mov
cmpl
mov
mov
jmp
mov
movl
cmpl
jb
push
pushl
call
adc
dec
movzbl
sbb
mov
xor
movzwl
or
xor
add
add
and
movl
cmpl
mov
mov
mov
movl
jmp
not
cmpl
jne
push
push
call
and
mov
or
mov
mov
add
mov
sbb
adc
movl
xor
movl
or
mov
sub
mov
orl
xor
xorl
div
imul
add
cmpl
mov
movl
jmp
movl
movl
cmpl
jne
push
call
and
adc
sub
mov
sbb
mov
andl
add
mov
adcl
xor
or
xor
or
mov
subl
div
cmpl
mov
mov
movl
mov
jmp
movl
cmpl
jbe
push
push
pushl
call
neg
sbb
andl
mov
xor
movzbl
sub
movl
xor
adc
mov
movl
mov
add
mov
movl
xor
movl
cmpl
mov
mov
mov
movzwl
jmp
mov
mov
cmpl
ja
pushl
call
and
xorl
add
or
mov
mov
sbb
sbbl
mov
mov
sub
shr
sub
xor
mov
imul
mov
sbbl
and
xor
mov
sub
mov
movl
movl
sub
mov
xor
or
xor
add
xor
mov
or
sub
mov
adc
movl
sub
movl
movl
cmpl
notl
mov
jmp
mov
cmpl
jne
pushl
call
andl
add
movzwl
and
and
add
mov
mov
sub
and
movl
not
movl
movzbl
or
movl
cmpl
mov
movl
jmp
mov
mov
cmpl
jae
push
call
or
and
adc
adc
sbb
movl
mov
and
add
jmp
test
cmp
pop
cmp
mov
int
push
and
sbb
push
xchg
sub
jmp
rcll
dec
xchg
add
mov
stos
dec
cmp
js
stos
jmp
mov
push
mov
addr16
pop
pop
test
adc
imul
fidivrs
pop
and
cmp
pop
test
clc
pop
fwait
dec
push
in
rcll
insl
daa
cltd
mov
dec
lahf
dec
jno
insl
je
ja
popf
fsubs
xor
imul
cmp
pop
mov
xor
dec
push
fcomps
pop
add
pusha
not
cmp
mull
and
imul
cs
xor
repnz
test
mov
xchg
push
adc
leave
adc
enter
insb
data16
lods
fistpl
xchg
outsb
aam
push
xchg
test
push
inc
pusha
jno
jns
xor
push
cmp
sub
sub
pop
mov
lret
mov
in
data16
roll
and
jne
cmp
test
push
int
mov
repnz
jb
dec
add
inc
jp
or
pop
js
jo
mov
repnz
aas
leave
dec
jge
mov
insb
js
mov
fistpll
es
or
mov
xor
xor
arpl
imul
imul
xor
adc
cli
jnp
jno
aam
jmp
push
cmp
jg
dec
add
and
mov
cmpsb
xor
nop
jp
adc
movsb
mov
dec
cli
mov
sarb
push
cld
std
daa
mov
jl
shlb
stos
xor
jnp
hlt
adc
mov
sbb
test
mov
dec
xchg
add
std
leave
mov
sbb
jnp
das
push
lahf
popf
dec
xor
into
mov
mov
xor
pop
push
fwait
shufps
jo
rolb
jge
mov
sub
jge
pop
cwtl
add
orb
mov
shlb
jno
lcall
jge
add
sbb
adc
lret
inc
cmp
dec
adc
mov
aam
add
add
popw
jmp
or
lock
and
pop
inc
dec
pop
jg
jmp
lcall
in
sahf
cs
cmp
movsb
ss
fsubl
or
add
or
pop
roll
mov
push
pop
xor
fs
adc
adc
xchg
std
mov
pop
sti
aaa
push
fimull
sahf
sub
lods
mov
fndisi(8087
frstor
inc
push
out
imul
xor
pop
dec
int
ljmp
ret
pop
and
cld
movlps
scas
test
jae
rcr
mov
aaa
xchg
ret
inc
xchg
sti
std
iret
mov
jle
out
lds
cmp
sub
je
in
sub
hlt
xchg
faddp
cmp
push
mov
sub
add
xlat
cltd
or
js
sti
pop
out
push
push
mov
sti
imul
loop
pop
mov
incl
add
inc
add
rorl
add
mov
imul
imul
mov
or
and
mov
subl
lea
addl
push
addl
call
cmpl
mov
mov
mov
movl
jmp
movl
notl
cmpl
jae
pushl
push
pushl
pushl
push
call
adc
xor
add
mov
mov
sub
and
sbb
mov
mov
add
imul
sbb
add
and
cmpl
mov
mov
movzwl
jmp
movl
mov
cmpl
jae
push
call
movzwl
add
adc
addl
and
or
sbb
sub
cmpl
movl
movl
movl
notl
jmp
mov
cmpl
je
push
pushl
call
subl
movzwl
xor
mov
mov
or
xor
add
orl
xor
addl
mov
div
xor
xor
add
adc
mov
sbbl
movl
movl
cmpl
movl
mov
jmp
movzwl
cmpl
jne
push
pushl
push
push
pushl
call
mov
sbb
and
sbb
mov
or
mov
mov
sub
and
adc
movl
movl
adc
movl
cmpl
not
movl
jmp
movl
notl
cmpl
jge
push
push
push
pushl
call
xor
mov
or
mov
mov
and
and
and
mov
xor
movzwl
and
mov
sub
movl
xorl
movl
sbb
movl
jmp
movsl
mov
push
and
stos
aaa
mov
push
sbb
xor
stos
pop
jl
clc
sub
test
and
scas
xor
jl
in
movsl
mov
mov
out
sar
sub
xchg
data16
repz
test
inc
sbb
nop
cli
xchg
leave
scas
push
mov
clc
ficomps
int3
out
enter
jb
cmp
inc
add
loop
int3
cmpsl
sahf
fisubs
and
xchg
push
das
int
lcall
hlt
mov
xchg
dec
inc
ret
cmp
pop
cmp
xchg
adc
bound
jecxz
imul
push
pop
inc
sahf
pop
push
sub
sub
in
mov
mov
aad
sub
cs
cli
mov
jl
or
mov
inc
testl
pusha
fstpt
mov
sub
pop
cmp
mov
add
pop
mov
lods
mov
adc
mov
inc
push
xor
push
cs
or
sub
lock
in
loopne
push
and
adc
pop
loope
popa
mov
jo
loope
pop
sbb
and
mov
jp
add
ret
adc
dec
ljmp
pop
add
rcrb
sub
sub
jo
add
cmc
pusha
mov
jae
or
dec
enter
push
hlt
jg
out
test
std
and
lds
xor
xchg
into
jns
cld
mov
loope,pn
xchg
push
sub
fstpl
push
nop
loop
fcmovne
lods
xchg
sub
add
fistpl
mov
xchg
nop
clc
jne
loopne
aam
add
imul
push
hlt
andl
cmc
aaa
mov
pop
xchg
test
xor
pop
and
mov
std
loope
dec
cmp
jmp
mov
sti
sahf
and
pop
inc
pop
push
cmpsb
pop
dec
imul
outsl
lcall
push
and
fiadds
or
xor
enter
mov
test
sub
repz
xor
adc
sti
mov
mov
and
aas
pop
and
movsb
sbbl
or
xchg
js
jae
mov
push
ja
jno
xlat
mov
hlt
dec
sbb
xor
out
jmp
inc
movsl
test
push
mov
aam
clc
or
jmp
int3
xor
pop
adc
inc
pop
lret
dec
lcall
mov
mov
inc
add
outsl
add
negb
stos
xorl
cs
lret
ret
mov
lahf
pop
or
js
mov
imul
vpor
fs
popa
popa
lea
ss
inc
popf
outsl
popf
orb
mov
data16
fcompl
mov
popf
cmp
jl
and
xchg
test
pop
jp
lcall
aaa
out
imul
cli
sbb
stos
pop
imul
pop
imul
lcall
add
movl
movl
xor
movl
xorl
mov
cmpl
movzwl
mov
jmp
movl
movl
cmpl
jne
push
push
call
subl
inc
inc
and
and
sbb
and
mov
adc
mov
mov
sub
and
add
sub
cmpl
mov
mov
jmp
movl
cmpl
je
pushl
push
pushl
pushl
call
mov
or
xor
add
mov
sub
or
mov
or
add
sbb
sub
or
jmp
mov
lds
stos
xorb
ret
ss
push
sbb
mov
das
pushf
inc
sub
pop
pop
ja
jmp
cmpl
stc
mov
xor
iret
xchg
out
sub
test
fwait
outsl
push
adc
and
cmp
xchg
or
enter
mov
clc
xchg
loope
shlb
pop
and
mov
sbb
repnz
cwtl
pop
lods
testb
sbb
or
aaa
in
inc
sbb
pop
in
std
popa
push
mov
insl
push
mov
cwtl
imul
add
js
mov
lock
push
aaa
sarl
call
dec
lds
inc
rol
push
and
cmp
shl
inc
stc
inc
loopne
nop/reserved
push
mov
xor
jae
int
ret
scas
hlt
pop
outsl
adc
ret
das
pop
sahf
fisttps
daa
xchg
cmp
jl
push
xchg
in
xchg
pusha
scas
push
mov
pop
pusha
in
pop
push
outsb
mov
or
sahf
popf
xchg
mov
hlt
test
popa
inc
outsl
mov
ret
out
call
cmp
mov
jb
inc
inc
pushf
sbb
repnz
pop
das
add
cmp
stos
loope
jle
sub
mov
cmc
adc
sbb
fldenv
push
fadds
sbb
xchg
fistl
movb
ds
fnstsw
xchg
repz
enter
mov
stos
dec
dec
ret
dec
imul
or
push
dec
cmpsb
fcomp
adc
push
popf
xchg
mov
subb
adc
shrb
pop
popa
ds
mov
clc
lret
push
rorb
add
mov
into
xchg
fs
dec
pop
pop
loop
iret
jne
popa
push
insl
in
mov
popf
aam
add
shll
lock
lds
pop
push
lods
fs
adc
repz
in
inc
push
cltd
movsb
jnp
xor
push
and
pop
dec
test
les
adc
call
sbbl
adc
fmul
hlt
adc
std
fwait
inc
mov
fisttpll
mov
inc
or
loop
mov
mov
mov
mov
pop
dec
pusha
dec
mov
xor
out
loope
pop
fdivrs
dec
icebp
in
cmc
orb
inc
imul
sbb
fs
push
inc
in
imul
rcl
mov
daa
out
fldcw
cmp
int
insl
sub
xorb
int3
mov
dec
fucomi
jbe
lods
pop
mov
aad
aas
icebp
push
jae
mov
lock
adc
int
aad
out
mov
push
adc
xchg
xchg
into
dec
fisubs
dec
and
push
mov
dec
and
lock
cmc
mov
mov
adc
push
mov
daa
jne
mov
arpl
push
cmc
sbb
push
loop
mov
arpl
fimull
pop
cmp
mov
fld
xchg
or
imul
adc
ficomps
dec
sub
mov
sbb
imul
cmpl
mov
movl
jmp
mov
movl
cmpl
jle
push
push
call
add
xor
adc
xor
mov
or
mov
and
negl
dec
movzwl
sbb
mov
mov
xor
add
xor
add
sub
xor
lea
cmpl
movl
mov
mov
jmp
movl
cmpl
ja
pushl
pushl
pushl
call
neg
xor
or
xor
add
sub
or
sub
mov
sbb
mov
add
subl
cmpl
mov
movzbl
movl
mov
jmp
movl
cmpl
jle
pushl
call
xor
add
xor
mov
sbb
movzwl
or
mov
decl
subl
mov
mov
mov
add
mov
neg
xor
cmpl
movl
movl
movl
mov
jmp
movl
cmpl
jae
pushl
push
pushl
push
pushl
call
sbb
adc
and
sbb
add
mov
lea
and
mov
sub
add
mov
movl
movl
movl
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
jmp
test
fdivr
and
lcall
or
push
movhps
inc
adc
sbb
lds
das
mov
mov
pop
mov
cmp
pop
xor
cli
cmpsl
or
xchg
pop
loope
lahf
mov
fisttpl
adc
es
lret
fiaddl
scas
and
cmp
push
pop
sbb
mov
and
call
sahf
repz
and
loope
scas
and
or
add
sbb
jmp
aad
repz
cltd
add
sub
mov
sbb
dec
imulb
mov
ds
movsl
outsb
test
and
popa
or
sahf
out
int
pop
dec
leave
adc
stos
mov
mov
orb
xor
dec
ljmp
mov
push
arpl
into
aam
test
adc
ret
insb
cli
and
ljmp
cmp
movsl
loopne
and
inc
loope
cmpsb
sahf
xlat
lsl
jnp
ds
cmp
adc
pop
xchg
push
lret
push
jae
lahf
mov
pop
lret
in
add
insl
testb
pop
dec
mov
mov
aas
rclb
les
xor
sub
stos
ret
test
in
lods
push
fldz
dec
dec
dec
loope
ficoms
lret
nop
fbld
adc
aas
jg,pt
sub
filds
dec
cltd
xchg
pusha
shll
or
push
jle
insl
out
and
mov
rcrl
mov
bound
xchg
aas
repz
arpl
push
movsb
es
lock
pop
in
out
xchg
dec
dec
repnz
hlt
int
xor
xchg
inc
ret
or
pop
xchg
test
sbb
test
pusha
add
jae
or
mov
sub
add
xorl
add
in
in
mov
sub
xchg
fstps
icebp
cmp
cmp
into
push
and
xor
loop
or
out
jge
pop
js
pop
jo
fsubrs
mov
and
mov
pushf
pop
and
inc
pop
enter
jo
imul
xchg
lret
test
or
mov
test
test
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
movl
movl
jmp
mov
cmpl
jbe
push
call
incl
subl
incl
adc
orl
not
push
push
sbb
mov
or
jne
mov
mov
xor
div
xorl
mov
mov
div
mov
mov
jmp
mov
sbb
mov
cmpl
mov
movl
mov
jmp
movl
movl
cmpl
jle
push
call
xorl
sub
sbbl
dec
not
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
orl
subl
movl
cmpl
movl
je
xor
add
mov
mov
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
orl
shld
movl
shl
ret
inc
mov
subl
xor
and
shl
ret
xor
xor
ret
jmp
es
jno
ja
int3
fsubrl
jo
popa
insb
push
lods
xor
insb
popa
outsb
add
add
addr16
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
outsl
add
add
jne
je
xor
xor
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
mov
inc
add
gs
arpl
push
outsl
inc
jne
jae
jb
adc
inc
add
daa
inc
add
daa
inc
add
inc
push
mov
movsb
popf
movsb
jno
xchg
movsb
or
movsb
sbb
movsb
roll
adc
movsb
popf
movsb
jno
xchg
movsb
or
movsb
xor
movsb
mov
in
xchg
movsb
adc
movsb
popf
movsb
sbb
movsb
fwait
movsb
xchg
sub
cs
push
adc
movsb
fwait
movsb
add
movsb
sbb
movsb
shll
shrl
or
push
pop
outsb
adc
movsb
fwait
movsb
add
movsb
xor
movsb
andl
imull
dec
adc
movsb
fwait
movsb
jae
popf
movsb
sbb
movsb
fwait
movsb
andl
testl
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
pop
movsb
xchg
movsb
push
movsb
mov
inc
rorl
imulb
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
xchg
mov
mov
out
adc
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
andl
imul
push
into
adc
xchg
movsb
cmp
movsb
popf
movsb
jnp
xchg
movsb
fwait
movsb
xchg
movsb
shl
shr
lock
test
cs
push
push
adc
xchg
movsb
adc
movsb
cmp
movsb
fwait
movsb
lea
or
push
push
outsb
adc
xchg
movsb
add
inc
and
add
add
add
daa
inc
add
and
add
inc
add
jg
add
inc
add
daa
inc
add
inc
add
es
add
daa
inc
add
push
movsb
scas
or
movsb
push
es
add
daa
inc
add
inc
add
daa
inc
add
daa
inc
add
and
add
es
add
daa
inc
add
inc
out
mov
es
add
add
loopne
jbe
pop
cmpsb
add
inc
add
rcl
pop
das
jg
add
outsl
arpl
pop
xor
cmpsl
mov
xchg
test
es
add
fiadds
movsb
cmpsb
fiaddl
movsb
mov
fiaddl
movsb
mov
fiaddl
movsb
mov
push
movsb
mov
push
movsb
mov
push
movsb
out
fiaddl
movsb
decl
adc
xor
inc
add
loop
js
lcall
and
add
xor
add
inc
sbb
hlt
clc
sarb
sub
jle
add
add
add
add
jmp
push
movsb
jg
inc
movsb
push
movsb
inc
movsb
std
movsb
jmp
movsb
push
movsb
dec
movsb
std
movsb
jmp
movsb
push
movsb
jg
std
movsb
jmp
movsb
dec
movsb
inc
movsb
jne
pop
movsb
jnp
dec
movsb
fwait
movsb
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shlb
rcll
into
xchg
dec
xor
sbb
push
je,pn
mov
imul
leave
daa
dec
out
pushf
mov
dec
xchg
lock
inc
or
js
popa
pop
jecxz
movb
cs
aas
inc
leave
testb
jl
mov
jb
pop
sub
inc
add
sti
fbld
adc
popa
arpl
popa
outsl
gs
jae
outsl
insb
gs
in
jg
ja
jp
inc
push
movsl
push
dec
gs
popa
push
jne
jae
imul
inc
jae
imul
jb
gs
lds
xor
fs
push
gs
popa
insl
imul
add
add
push
mov
jb
jno
or
lods
repnz
je
je
js
cmc
outsl
insl
popa
imul
popa
jb
push
imul
mov
jns
outsl
addr16
add
sub
icebp
gs
jae
popa
je
insl
add
in
mov
insl
imul
gs
add
jne
popa
or
popa
push
loope
stos
je
push
popa
jb
jae
imul
loope
aad
jb
imul
je
adc
outsl
gs
imul
outsb
shrl
ja
outsl
popa
outsb
gs
imul
imul
inc
jb
sbb
jo
addr16
jo
fs
xchg
in
jno
iret
jbe
or
cwtl
int
std
pop
fsubrs
dec
xor
stc
inc
adc
dec
sbb
mov
jns
dec
sbb
xchg
cmp
in
jno
iret
jbe
or
int
std
pop
jns
pop
xor
stc
inc
icebp
das
int
mov
mov
jns
xchg
lret
rolb
jno
jbe
or
int
std
pop
fdivs
int
stc
inc
icebp
test
mov
int
mov
addl
rolb
jno
jbe
or
cwtl
int
std
pop
ret
cmp
xchg
stc
inc
adc
test
ret
xchg
aad
lds
iret
jbe
or
int
std
pop
pop
insb
cmp
stc
inc
icebp
push
int
mov
mov
jns
test
lcall
jbe
xorl
sbb
and
int
adc
mov
add
add
lods
clc
icebp
jo
jge
aad
clc
icebp
jo
adc
incl
jo
jo
jo
xor
cwtl
add
add
xchg
or
addb
jecxz
hlt
scas
rolb
sub
iret
pop
iret
push
out
int
adc
out
sub
or
rolb
subb
sub
cmc
sub
in
aad
add
mov
fcmovnbe
out
pushf
xchg
test
fs
mov
iret
int3
call
jno
imul
int
std
xor
movsl
das
pop
push
or
sub
xchg
iret
les
addb
add
addl
adc
inc
jns
fldlg2
es
or
add
mov
add
addl
jns
insl
and
push
add
test
push
add
push
mov
test
lret
addb
in
outsl
rcl
jge
outsl
xchg
addb
sahf
mov
jno
popa
mov
addb
push
jge
push
xchg
addb
jge
push
xchg
addb
rorb
jo
std
xor
movsl
inc
xor
or
addl
addl
int
popf
aam
shlb
or
xchg
aam
int
icebp
int
xchg
or
or
or
pushf
stos
sahf
popa
mov
mov
mov
roll
int
or
adc
int
mov
lods
xchg
lret
rorb
in
push
int
or
daa
addl
or
mov
gs
addl
xchg
or
addb
xor
int
mov
int
xor
xor
lea
das
add
addb
int
mov
cli
test
int
jge
xacquire
insl
insb
shrb
outsl
lods
xchg
inc
addl
lea
cli
test
mov
and
xchg
mov
dec
ja
pop
rcll
int
fidivl
jecxz
xchg
or
in
inc
add
test
jecxz
jecxz
movsl
pop
cmpsb
lods
addb
lods
mov
mov
addb
shll
test
add
leave
int
or
cmpb
movsl
jecxz
mov
in
in
addb
movsl
int
mov
rcll
leave
xor
pop
jbe
jnp
int
xor
movsl
int
cmp
inc
inc
add
jle
clc
or
std
das
pop
adc
cmp
or
add
mov
xor
les
int
sub
stc
xor
sbb
inc
int
inc
int
std
xor
xor
pusha
lret
arpl
test
xor
in
popf
adc
addb
shl
mov
and
mov
jbe
shrl
lods
or
stc
test
int
jne
pop
insl
shl
test
in
xchg
pop
insl
xchg
int
jge
les
xor
les
adc
addb
mov
shll
xor
ja
lret
je
pop
shl
mov
xchg
xor
int
das
mov
push
das
rcll
pop
mov
ja
int
pop
orb
jmp
mov
insl
iret
les
test
mov
xor
mov
insl
add
or
cwtl
int
mov
int
int
jns
mov
sub
add
cwtl
int
jns
test
add
mov
jns
xchg
cmp
add
add
inc
addl
leave
jbe
inc
and
or
int
stc
int
stc
pop
cwtl
lcall
ljmp
cmp
sarl
jbe
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
leave
jbe
dec
and
mov
and
sarb
jbe
or
sarb
ror
jbe
jo
addb
addb
stc
cmp
cmp
sarl
push
rorb
jbe
int
stc
int
stc
cmp
cmp
sarl
push
rorb
jbe
leave
jbe
arpl
lods
pop
addb
addb
add
iret
push
xchg
incl
add
add
lea
xchg
fcmove
jbe
dec
insb
addb
stc
cmp
sarl
cmp
shl
sub
or
int
stc
int
stc
add
cmc
cmpb
sarl
repnz
or
mov
sbb
addb
push
or
int
dec
or
int
mov
cmc
or
rolb
mov
in
or
push
addl
lea
or
pop
addl
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
mov
add
mov
jbe
int
xor
addb
int
adc
adc
add
int
mov
mov
int
xchg
rolb
bound
jno
cmp
push
push
add
add
cmpsl
aad
leave
push
pop
add
add
adc
add
mov
push
insb
add
add
iret
outsb
add
add
insl
leave
push
sub
add
push
cmpsl
aad
leave
push
xor
add
push
xor
cmp
add
mov
push
inc
add
add
iret
addr16
add
add
jbe
int
adc
mov
int
mov
add
addb
mov
leave
jbe
mov
cmp
leave
jbe
xlat
sbb
push
les
add
push
cmpsl
aad
leave
push
nop
add
add
xlat
inc
leave
push
aam
add
cmp
jge
push
faddl
add
mov
shll
add
xlat
sbb
push
pushf
add
add
cmpsl
aad
leave
push
movsb
add
add
xlat
inc
leave
push
lods
add
add
dec
push
jge
push
mov
add
mov
shll
add
ret
sbb
jo
jbe
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
lea
testb
int
mov
lds
psrlq
sub
mov
lea
insl
inc
shrl
or
addl
int
mov
rclb
addl
add
addb
jo
cwtl
xor
lea
addb
int
adc
mov
insl
iret
pop
pushf
add
add
jo
jbe
int
inc
addl
adc
pop
adc
mov
insl
iret
pop
les
add
mov
jo
jbe
int
inc
addl
mov
pop
adc
mov
insl
iret
pop
push
add
add
jo
jbe
int
inc
addl
pop
orb
xor
push
cmp
sahf
clc
add
shrb
pop
shlb
xchg
xor
int
pop
add
mov
adc
int
mov
pop
adc
mov
insl
iret
xchg
add
jo
jbe
int
cmp
push
add
in
test
or
add
pop
sub
sub
lea
ljmp
sarl
push
ror
pop
cmc
incl
add
jo
jbe
int
stc
int
mov
lds
lock
push
ror
pop
xchg
incl
add
jo
xchg
or
xchg
stc
cmp
jmp
shr
sub
inc
jge
mov
jbe
addl
cmp
sarl
repnz
xchg
or
int
cmp
int
mov
lea
sarl
push
roll
xchg
int
mov
lea
shl
sub
mov
lea
insl
inc
shrl
pop
push
incl
add
ljmp
lea
jge
xor
mov
jbe
jo
stc
jl
orb
jne
sbb
jbe
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
push
mov
jbe
int
stc
cmp
cmp
shl
sub
mov
lea
shrl
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
std
inc
shrl
add
int
stc
int
stc
cmp
cmp
sarl
push
shr
adc
lea
or
cltd
shr
xchg
shr
sub
xchg
int
std
inc
roll
or
int
jne
jbe
ret
dec
and
leave
jbe
inc
and
int
inc
cmp
cmp
sarl
push
rorl
jbe
int
inc
int
inc
cmp
cmp
sarl
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
lds
psrlq
sub
mov
lea
push
xchg
addb
cmp
jns
or
lods
sub
jmp
push
jge
jbe
xor
cmp
clc
add
jbe
int
sbb
lds
psrlq
sub
mov
lea
int
sbb
lds
psrlq
push
rorl
jbe
int
cmp
lds
psrlq
push
ror
lea
jbe
int
inc
int
inc
cmp
cmp
shl
sub
mov
lea
pusha
xchg
addb
or
jbe
or
xchg
or
pop
inc
and
leave
jbe
cmp
xchg
and
int
xchg
int
xchg
cmp
cmp
sarl
push
rorl
jbe
int
jmp
addl
add
and
push
xchg
add
add
and
insl
int
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
cmp
shl
sub
mov
lea
rcl
int
adc
or
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
jo
add
int
jo
add
cmp
cmp
ljmp
pop
lea
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
sarl
repnz
int
jge
rcl
int
pop
int
pop
cmp
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
xchg
add
add
pop
xchg
add
add
lds
cltd
sarl
push
rolb
test
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
xor
sub
mov
lea
xchg
pop
cmp
cltd
shr
xchg
shr
sub
das
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
pop
cmp
shl
sub
xchg
push
ror
lea
lea
xchg
push
ror
lea
sub
or
int
popf
int
popf
cmp
shl
sub
xchg
push
ror
lea
or
jmp
cmp
adc
xchg
in
sbb
jbe
int
popf
cmp
cmp
sarl
push
roll
push
int
popf
int
popf
cmp
sarl
repnz
int
lods
xor
jbe
int
popf
cmp
cmp
mov
xchg
push
das
rcl
inc
shrl
pop
adc
add
int
stc
int
stc
int
std
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
stc
int
stc
add
xor
shr
xchg
shr
sub
jno
jo
int
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
or
inc
jge
add
int
stc
in
int
or
push
cmpsb
lods
int
lods
shr
xchg
cmp
lods
sub
int
jne
dec
orl
mov
lea
or
cltd
shr
sub
jmp
push
adc
xchg
mov
jge
jbe
cmp
add
std
add
std
shr
sub
leave
int
std
int
std
shr
xchg
shr
sub
cmp
inc
rcl
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
int
or
int
xor
jbe
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
std
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
jne
jbe
int
mov
lea
shl
sub
mov
stc
or
leave
jbe
imul
imul
gs
into
and
addb
sarl
lds
jbe
rol
lods
xchg
or
int
cmp
lods
sub
lods
lret
int3
das
imul
lret
inc
rcl
jle
jbe
int
mov
jbe
int
mov
jns
or
lods
sub
jmp
push
jge
jbe
cmp
lods
sub
lods
cmp
xchg
jbe
add
std
add
std
shr
sub
lock
and
jbe
in
and
jbe
int
stc
cmp
cmp
sarl
push
ror
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
or
out
leave
jbe
mov
xchg
and
dec
mov
lods
imul
and
xor
jbe
int
lods
int
lods
cmp
jmp
cmp
adc
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jo
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lea
cmp
shr
xchg
shr
sub
jno
jo
int
mov
jbe
int
mov
or
jns
jmp
shrl
jbe
inc
jge
add
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
inc
lea
addb
and
add
mov
lea
add
lea
jmp
add
scas
or
aaa
sbb
add
addb
add
add
add
jno
cmp
add
add
lods
jno
lea
lea
shll
jno
mov
or
int
mov
lea
add
addl
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
add
int
rcl
insl
xchg
cmp
inc
leave
int
mov
lea
addb
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jne
jo
int
lods
or
int
cmp
cmp
or
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lods
add
int
std
or
int
jne
out
or
leave
jbe
inc
and
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
int
push
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
jns
or
jmp
shrl
lea
push
xchg
addb
xchg
int
inc
cmp
cmp
sarl
push
jge
jbe
xor
cmp
clc
add
jbe
int
lods
int
lods
cmp
or
jmp
shrl
lea
int
lods
int
lods
cmp
or
lods
sub
jmp
push
rorl
jbe
int
xchg
int
xchg
cmp
or
lods
sub
jmp
push
ror
lea
jbe
int
push
int
push
cmp
or
jmp
shrl
lea
pusha
xchg
addb
or
jbe
or
cmp
inc
and
leave
jbe
cmp
xchg
and
int
cmp
jns
or
lods
sub
jmp
push
rorl
jbe
int
jmp
addl
add
and
push
jl
add
mull
xchg
int
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
jns
jmp
shrl
lea
rcl
int
gs
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
mov
add
int
mov
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
lods
sub
or
jmp
push
ror
lea
rcl
int
insl
int
insl
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
jl
add
int
jl
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
and
or
jns
jmp
shrl
lea
xchg
insl
cmp
cmp
shl
sub
repz
push
adc
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
insl
cmp
jmp
cmp
lods
sub
int
or
lea
sub
int
cmp
xchg
push
rorl
jbe
int
popf
int
popf
cmp
jmp
cmp
lods
sub
int
popf
int
popf
cmp
shl
sub
aad
repz
push
adc
xchg
in
sbb
jbe
int
popf
cmp
or
lods
sub
jmp
push
roll
inc
int
popf
int
popf
cmp
lods
sub
or
jmp
push
ror
lea
popf
int
popf
cmp
aad
repz
shrl
xchg
inc
das
rcl
inc
shrl
pop
adc
add
int
mov
dec
iret
jbe
add
mov
jbe
int
xchg
addl
icebp
addl
jne
test
addb
stc
int
stc
cmp
cmp
shl
sub
mov
lea
rcl
push
int
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
stos
test
lret
rorb
add
and
int
int
sub
pop
subb
dec
addl
addb
das
add
int
or
das
add
add
int3
addb
addb
add
int
and
mov
or
xor
shrb
mov
mov
mov
das
add
iret
jl
pop
or
add
or
add
cmc
subb
xchg
das
mov
mov
mov
in
push
push
aam
int
add
stc
subb
xchg
mov
sahf
dec
xchg
aam
iret
ficoms
out
int
std
int
push
add
xchg
cmpsb
mov
and
das
mov
sahf
dec
add
add
std
mov
sbb
mov
mov
add
add
mov
pop
out
subb
jo
das
mov
adc
mov
pop
xchg
adc
or
arpl
insl
insb
in
xchg
cmp
lret
lds
sub
jbe
add
xor
fstpl
add
inc
pop
pushf
test
insl
insb
in
fmul
insb
faddl
and
jo
int
adc
fcompl
lea
std
inc
clc
jnp
or
std
or
fsub
inc
pushf
adc
xchg
mov
int
iret
push
ror
push
add
ds
mov
out
inc
stc
fdivs
int
dec
int
in
popf
inc
cld
ja
int
in
mov
out
or
adc
not
dec
int
stc
dec
or
sbbb
cmp
test
lret
rorb
add
push
pop
cwtl
pop
dec
and
leave
jbe
inc
and
int
std
lcall
psrlq
xchg
stos
cmp
shl
sub
or
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
leave
jbe
fadd
loope
int
std
int
std
cmp
cmp
shl
sub
jmp
push
or
cmpsb
dec
int
sub
push
das
add
int
std
int
std
cmp
cmp
shr
xchg
shl
sub
inc
adc
add
int
add
std
int
std
cmp
xchg
shl
sub
inc
adc
add
xchg
int
cmp
shl
xchg
shl
sub
or
inc
icebp
aam
int
std
int
std
cmp
cmp
ljmp
int
adc
adc
test
xor
jbe
int
std
cmp
cmp
ljmp
int
adc
adc
je
xor
add
int
std
int
std
int
std
int
std
cmp
cmp
in
xchg
push
popf
int
adc
adc
ror
jl
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
int
std
or
lea
cltd
cmp
shl
sub
repz
push
jecxz
lea
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
jbe
popa
and
or
in
int
dec
int
adc
xor
jbe
add
in
int
adc
dec
leave
jbe
popl
dec
pop
xchg
xchg
std
cmp
cmp
shr
xchg
shr
sub
or
inc
jge
pop
int
stc
int
stc
cmp
lock
sub
mov
lea
fnstcw
psrlq
sub
int
adc
xchg
push
jecxz
rcl
bound
jo
int
std
int
std
cmp
lock
push
roll
mov
and
jbe
int
popf
cmp
cmp
mov
push
jge
fldt
pop
xchg
add
add
jbe
int
std
cmp
lock
push
roll
mov
and
jbe
int
stc
cmp
lock
push
roll
addl
leave
jbe
fdivr
sbb
int
std
int
std
cmp
xchg
shrl
sbb
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
cmp
shrl
push
jge
jbe
inc
jge
xchg
test
jbe
int
sbb
jbe
int
std
cmp
lock
sub
mov
in
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
in
shr
sub
aam
int
in
int
dec
int
adc
lret
jno
mov
jo
in
push
int
cmc
xchg
int
dec
int
adc
xchg
jo
mov
jno
or
int
std
int
std
cmp
lock
sub
mov
cmc
inc
ror
jbe
int
stc
xor
jns
lock
push
roll
cmp
cmp
repnz
mov
cmc
das
rcl
int
lods
or
stc
cmp
lock
push
roll
int
std
cmp
cmp
repnz
mov
lea
push
or
add
int
adc
lea
insb
sarl
test
int
icebp
push
dec
and
add
int
std
int
std
cmp
lock
push
rcrl
mov
stc
int
stc
in
xchg
jbe
int
std
cmp
cmp
shl
sub
mov
arpl
rorb
add
xor
jbe
dec
and
inc
and
or
cwtl
int
int
std
int
std
sar
shll
xchg
cltd
shr
sub
mov
xchg
mov
das
add
int
mov
xchg
mov
xchg
cmc
leave
jbe
popa
and
int
stc
cmp
rcl
mov
xchg
std
int
std
cmp
cmp
shr
sub
repz
push
fxch
out
pop
xchg
leave
fsubrl
add
int
cmc
int
mov
or
mov
out
xor
pop
int
std
cmp
cmp
in
push
cld
or
add
int
std
int
std
cmp
cmp
shl
xchg
shr
sub
or
mov
xchg
out
cmp
cmp
shl
xchg
shr
sub
jmp
addb
std
add
cmp
sarl
push
cltd
iret
ja
jecxz
inc
cltd
das
add
addb
jo
or
mov
mov
das
addb
in
xchg
int
in
xchg
repz
mov
mov
adc
dec
and
or
int
in
cmp
add
call
repz
sarl
xchg
mov
xchg
in
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
in
int
movsl
addl
mov
push
xchg
add
add
stc
int
stc
cmp
add
call
mov
push
cltd
int
adc
out
inc
aam
in
sub
xchg
std
int
std
cmp
add
call
repz
sarl
cltd
int
test
das
push
test
add
arpl
jbe
cmp
int
lods
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
adc
xchg
addb
and
inc
and
int
std
cwtl
lcall
xor
xchg
mov
sub
or
int
std
int
std
cmp
mov
repnz
or
int
and
jbe
int
in
cmp
or
adc
dec
mov
cmc
int
cmc
cmp
or
adc
dec
lahf
xchg
lea
cmp
or
adc
imul
mov
lea
mov
jbe
dec
and
hlt
mov
insl
das
add
int
dec
push
insl
das
add
int
sbb
insl
das
add
int
and
jbe
int
mov
mov
addb
addl
cmp
mov
repnz
or
int
std
int
std
int
mov
lea
outsb
jo
lea
insl
das
add
leave
jbe
dec
and
int
xchg
pop
int
xchg
cmp
loop
mov
push
popf
or
int
std
int
sub
xor
bound
int
std
int
std
int
and
sbb
xchg
dec
inc
fst
push
cmc
int
adc
lods
int
cmc
cmp
add
call
jmp
shr
sub
int
dec
bound
xchg
jo
add
int
dec
int
xchg
int
jo
jge
xchg
jo
dec
xchg
int
xor
sbb
xchg
xchg
add
mov
or
pop
fs
das
mov
xor
jbe
int
std
int
std
cmp
add
shl
sub
mov
mov
and
jge
add
int
std
int
std
cmp
add
shl
sub
mov
jbe
int
stc
int
stc
add
cmp
repnz
mov
mov
pop
lea
addb
mov
lea
xchg
lea
or
jl
icebp
aam
clc
icebp
sub
xchg
in
xchg
int
jo
outsb
test
test
int
mov
lea
xchg
std
cmp
add
call
jmp
shr
sub
pop
lea
mov
popf
int
test
lds
add
sbb
stc
int
stc
cmp
shr
xchg
add
incl
push
adc
and
jbe
int
stc
int
stc
add
cmp
repnz
mov
lea
mov
pop
lea
add
int
and
sbb
cmp
lea
int
adc
lods
int
adc
sti
call
jmp
shr
sub
int
dec
bound
xchg
xchg
pop
add
push
insl
das
add
int
and
or
or
cmp
add
call
jmp
shrl
add
int
std
int
std
cmp
add
sarl
push
rorl
jbe
pop
push
jl
or
leave
jbe
sbb
shr
lahf
xchg
jbe
dec
and
xchg
iret
inc
shl
xchg
adc
scas
cmp
lea
add
cli
xchg
xchg
add
or
mov
jbe
or
iret
outsb
std
iret
jno
or
or
leave
push
jo
add
sub
pushf
add
add
pop
movsb
add
add
push
lods
add
add
xchg
add
sbb
les
add
popa
lahf
xchg
add
sbb
aam
add
call
iret
faddl
add
leave
push
in
add
mov
add
jbe
and
or
jbe
inc
lahf
xchg
jbe
pusha
lahf
xchg
and
int3
push
jo
add
shr
xchg
add
scas
or
test
add
sbb
addl
add
int
adc
inc
add
add
add
or
iret
jbe
jo
or
push
int
jge
icebp
int
std
int
std
cmp
add
sarl
push
rorl
jbe
int
std
int
std
cmp
add
call
lods
sub
jmp
push
jge
jbe
inc
rcl
xchg
or
in
das
int
int
jne
jbe
int
mov
int
sbb
mov
addl
addl
int
sub
xchg
dec
int
cmp
xor
jo
int
stc
int
stc
cmp
add
sarl
push
rorl
jbe
int
and
pop
mov
push
insl
das
add
add
and
lock
mov
push
insl
das
add
int
and
lock
mov
push
insl
das
add
lcall
push
insl
das
add
int
and
sbb
sbb
or
addl
int
dec
add
and
or
or
cmp
add
call
jmp
shrl
dec
and
int
mov
jbe
shr
xchg
adc
scas
cmp
sbb
insb
cmp
lea
lds
outsb
adc
jbe
leave
addb
sub
pushf
test
jbe
int
sub
outsb
mov
jbe
int
sub
outsb
dec
in
adc
jbe
int
cmp
lea
lds
outsb
adc
jbe
add
or
icebp
addl
cmp
int
arpl
xchg
cmp
test
shlb
xchg
int
jno
das
mov
mov
mov
leave
jbe
dec
and
push
lret
aam
popa
shll
xchg
out
xchg
pop
out
orb
mov
pop
out
cmpb
std
int
std
cmp
add
call
jmp
in
xchg
push
cld
add
std
add
test
sub
adc
dec
and
int
std
int
std
cmp
add
call
jmp
shr
sub
inc
stc
xorb
rorb
add
push
leave
jbe
mov
jbe
xchg
addb
addb
test
lods
addb
addb
addb
addb
addb
addb
addb
mov
stc
cmp
clc
add
repnz
and
movb
addb
or
cmc
icebp
lea
jnp
addb
addb
std
ss
pushf
addb
int
push
jp
addb
int
std
xchg
int
std
xchg
xor
jbe
int
in
sbb
cmpb
int
mov
fadds
jbe
xchg
popa
fists
xor
xchg
int
xor
out
adc
mov
subb
int
xchg
adc
mov
addb
clc
int
icebp
push
out
addb
icebp
adc
pop
push
addb
add
add
adcb
pop
cwtl
lcall
or
adc
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
movsl
dec
bound
addb
dec
pop
and
pop
xchg
mov
stc
xor
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
fisubrl
ret
add
clc
test
push
addb
int
mov
leave
das
sarl
fisttpl
xchg
mov
popa
addb
push
addb
addb
addb
addb
pop
lcall
xchg
lods
int
mov
int
popf
xor
int
xchg
cmpsb
push
addb
mov
ret
jbe
int
icebp
int
or
int
xchg
xor
inc
test
inc
or
rol
addb
cmp
clc
hlt
int
gs
ss
push
addb
add
xchg
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
hlt
int
dec
xor
int
mov
leave
das
rol
int
xor
das
pop
pop
add
add
mov
in
jo
jbe
xchg
aaa
ficoms
pop
mov
jbe
leave
jbe
mov
jbe
leave
jbe
fidivs
ficoms
or
pop
leave
jbe
scas
aaa
ficoms
or
cwtl
lcall
adc
jbe
cmp
cmp
pop
dec
and
out
ficoms
jp
jbe
int
or
iret
xchg
addl
push
ror
je
ror
xor
pushf
test
inc
loop
shr
xchg
int
int
test
insl
adc
cmpsb
mov
or
xchg
in
inc
jbe
das
or
jbe
add
mov
int
stc
push
insl
aam
cmp
out
int
mov
fs
xchg
mov
lret
xchg
add
xchg
stc
xchg
lret
int
lods
or
lret
int
stc
xchg
int
mov
adc
int
cmc
insb
add
std
sarl
push
sarb
rorl
jbe
push
cmc
int
cmc
add
call
repz
shrl
xchg
stc
inc
rolb
int
adc
xchg
stc
int
mov
test
int
stc
iret
adc
int
dec
shl
sub
cmp
or
push
adc
xchg
adc
call
repz
shrl
xchg
stc
xchg
xor
or
inc
lds
pop
outsl
add
add
jbe
int
mov
ljmp
mov
ror
popf
int
cmp
in
or
or
add
in
xchg
or
test
lret
rorb
add
adc
jbe
leave
jbe
dec
and
inc
and
cwtl
or
leave
jbe
into
and
in
inc
sbb
int
std
sar
shll
xchg
repnz
adc
out
xchg
push
add
lea
int
adc
jge
jmp
shr
sub
das
roll
jmp
addb
xchg
stc
cmp
shr
sub
jge
jmp
push
adc
xchg
std
int
std
cmp
cmp
shl
xchg
shl
sub
push
adc
xchg
stc
int
stc
aam
cmp
shl
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
int
in
int
in
cmp
loope
jmp
shl
sub
cmp
in
sub
lock
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
or
int
std
cmp
jmp
shr
sub
xchg
int
cmc
int
cmc
cmp
cmp
ljmp
int
std
int
std
cmp
cmp
shl
sub
repz
push
aad
adc
das
pop
pop
add
add
jbe
int
mov
jbe
arpl
rolb
insl
pop
jbe
aam
pop
jbe
fdivs
lret
or
das
adc
in
addb
lea
lret
or
insb
inc
jbe
subb
stc
std
add
cmpsb
rorb
adc
cmp
addb
xchg
jbe
inc
and
dec
sub
jno
cli
arpl
jbe
int
adc
subl
repnz
or
leave
jbe
into
and
inc
sbb
mov
int
std
int
std
cmp
shl
sub
jns
mov
lea
int
adc
jmp
shr
sub
das
rcl
in
outsb
int
cmc
int
cmc
sarl
push
sarl
lds
jbe
iret
jbe
jo
mov
jbe
int
stc
int
cmc
or
add
jbe
int
std
cmp
lock
push
roll
cmc
int
in
int
in
cmp
shl
sub
jns
mov
std
int
std
cmp
cmp
shr
xchg
shr
sub
xor
int
cmc
inc
jge
mov
jbe
int
mov
jns
lock
push
rorl
jbe
leave
jbe
bound
xchg
addb
jbe
cmp
shrl
jmp
push
jge
jbe
aad
or
int
mov
orb
in
lret
int
stc
das
pop
insl
cmp
or
int
in
int
in
cmp
mov
repnz
int
cmc
sub
int
push
popf
cld
add
int
popf
cmp
or
int
std
int
std
cmp
lock
push
roll
std
int
std
cmp
lock
push
sarl
jbe
int
adc
lea
cmp
cmp
repnz
mov
lea
imul
add
jbe
int
mov
jns
lock
sub
mov
int
stc
test
shll
rolb
in
xor
lret
pop
lcall
addb
roll
cwtl
sub
lahf
xor
std
or
stc
mov
lret
cmp
leave
jbe
adc
addb
mov
jecxz
mov
stc
iret
dec
into
mov
pop
das
mov
mov
das
mov
mov
fs
adc
das
mov
mov
mov
jge
pop
cmc
aam
leave
jbe
sbb
stc
int
mov
jecxz
mov
inc
in
dec
add
leave
jbe
push
addb
int
mov
lret
pop
dec
sub
push
add
add
cmc
sbb
push
jb
add
cmp
arpl
rolb
jecxz
mov
mov
adc
int
add
mov
inc
add
mov
adc
iret
js
or
iret
js
or
iret
js
or
iret
pop
or
cmp
addb
or
jbe
iret
pop
out
addb
pop
xor
pop
iret
pop
inc
addl
pop
xchg
addl
addb
xchg
icebp
or
or
mov
adc
or
and
lea
out
cmp
adc
jnp
ficoms
das
inc
cli
xchg
rcll
xchg
or
mov
out
int
or
cmp
shl
sub
int
mov
addb
cld
push
lock
stc
das
add
adc
mov
or
and
jbe
mov
movsl
int
jge
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
add
add
add
lea
or
lea
icebp
mov
dec
stc
pop
sbb
mov
xor
std
xor
icebp
mov
xchg
adc
add
mov
jmp
and
lea
cmpsb
or
shr
sub
notl
shr
xchg
push
lock
aaa
ficoms
or
or
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
push
comiss
xor
add
int
stc
push
imull
add
int
fs
push
faddl
int
and
jp
int
sbb
cltd
or
xchg
xchg
in
or
or
xchg
cmpsb
cmc
cmp
or
fcom
in
xchg
jbe
int
or
inc
lcall
ja
int
mov
xchg
mov
and
or
xchg
sbb
mov
jbe
or
push
addb
pusha
adc
jo
jbe
int
xor
int
stc
int
in
push
insl
aam
int
std
or
std
test
lea
movsl
push
or
or
int
test
lret
rolb
int
mov
pop
adc
mov
int
cmp
lret
pop
mov
shll
fwait
sbb
cwtl
int
pop
lahf
xor
cmp
jecxz
mov
xchg
add
xchg
das
mov
repz
mov
sbb
lds
sbb
jmp
dec
add
addl
mov
lret
cli
sbb
adc
or
sbb
leave
stos
lds
mov
addb
and
cmc
xchg
aaa
ficoms
or
aaa
ficoms
or
jbe
dec
and
inc
and
out
ficoms
or
fidivs
ficoms
or
int
adc
inc
icebp
xchg
shl
xchg
int
in
int
adc
ljmp
cmp
cmp
push
jns
jbe
iret
jbe
or
int
or
xor
ficoms
or
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
or
nop
add
add
lea
icebp
cmp
shr
sub
jmp
push
adc
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
popf
cmp
in
push
aad
int3
pop
aam
add
int
xor
xchg
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
cltd
shl
xchg
shl
sub
int
std
cmp
mov
shl
sub
xchg
int
adc
int3
pop
aam
add
int
adc
add
shl
sub
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
repz
shl
sub
xchg
int
std
int
std
cmp
in
shl
xchg
push
aad
adc
add
add
push
nop
add
add
jbe
int
std
sar
cmp
or
mov
push
shll
jbe
iret
or
addb
addb
int
push
or
lea
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
xor
repnz
inc
mov
int
lods
int
mov
inc
jge
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
push
shl
sub
cmp
inc
sti
add
int
std
int
std
cmp
repnz
jns
mov
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
or
nop
add
add
jbe
int
int
mov
aad
jmp
shr
sub
or
add
jbe
int
int
std
int
std
cmp
shr
xchg
int
jo
aad
ljmp
aam
add
int
sbb
lea
or
repnz
jns
mov
std
int
std
cmp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
hlt
call
in
push
aad
adc
add
add
jbe
int
std
add
call
repnz
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
int
std
add
cmp
shr
sub
jmp
push
adc
pop
nop
add
add
xchg
std
int
std
xchg
cmp
int3
push
aam
add
int
sub
hlt
call
repz
shl
sub
iret
or
addb
addb
xchg
and
insl
aam
int
in
int
adc
inc
jge
shr
xchg
int
int
int
in
int
adc
fidivrl
lock
push
adc
xor
jo
xchg
push
in
push
int
int
push
lret
or
int
cmc
int
stc
das
inc
jge
shr
xchg
int
cmc
int
stc
cmp
cmp
shl
sub
lea
push
lds
int
inc
jo
lea
or
xchg
xchg
push
int
dec
int
int
xchg
sbb
dec
xchg
sub
lea
int
int
push
xor
int
int
xchg
jbe
or
das
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
or
int
xor
les
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
lea
leave
cmp
add
stc
push
inc
shrl
add
addb
movsb
dec
mov
jge
cmpsb
xor
lea
xchg
das
inc
rcll
jbe
int
xchg
shrl
cmp
cmp
push
or
cmpsb
stc
das
inc
popf
xchg
or
int
cmc
push
out
add
dec
shr
xchg
int
stc
cmp
mov
int
cmc
int
stc
das
inc
or
shrl
shr
xchg
int
stc
cmp
shrl
cmp
push
fcmovne
lea
mov
ror
icebp
or
int
xchg
das
inc
rcll
jbe
int
xchg
shrl
das
mov
cmp
dec
or
rorl
mov
or
and
shrl
ficoms
cmp
fidivs
ficoms
ss
or
cs
int
xor
add
mov
int
xor
xchg
int
orl
push
and
add
in
test
int
adc
jbe
leave
jbe
scas
aaa
ficoms
or
int
jne
inc
jge
shr
xchg
int
insl
int
jne
repnz
lea
cmp
cmp
push
shl
int
inc
inc
mov
int
xor
xor
insb
test
jbe
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
fnstsw
leave
push
sub
adc
push
mov
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
xchg
shl
sub
xchg
or
nop
add
add
lea
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
cltd
cmp
in
push
aad
int3
pop
aam
add
int
sbb
xchg
sbb
icebp
shr
sub
psrlq
xchg
push
adc
xchg
std
int
std
cmp
cltd
shl
sub
repz
push
aad
cmpsb
std
cmp
hlt
call
mov
push
lds
aam
add
int
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
iret
xchg
movsl
or
add
iret
nop
add
add
std
int
std
cmp
int
sub
icebp
shr
xchg
shr
sub
jno
pop
out
addb
addl
add
dec
int
mov
mov
dec
int
cmc
int
stc
das
inc
jecxz
shl
xchg
int
cmc
int
stc
cmp
shr
sub
xchg
cmc
cmp
push
bswap
stc
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
cmp
int
stc
cmp
push
flds
dec
sarl
add
int
or
rclb
xchg
int
add
inc
pop
cwtl
lcall
popf
aaa
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
leave
jbe
dec
mov
cmc
dec
lahf
xchg
and
cmp
xchg
and
jbe
int
sbb
shlb
jbe
int
sbb
add
xor
pop
xchg
fs
popf
int
and
out
int
movsl
das
inc
add
out
int
movsl
adc
cmpsb
mov
shr
sub
pop
push
aad
nop
int
or
int
xor
xchg
dec
iret
xchg
lods
bound
stc
jno
cwtl
add
sbb
jbe
add
mov
cmc
add
adc
in
jo
jbe
jo
stos
clc
add
or
int
sbb
lea
outsb
adc
jbe
leave
addb
lods
int
and
outsb
test
jbe
int
and
outsb
mov
jbe
int
and
outsb
dec
int
and
insb
and
addb
sbb
lea
or
and
xorb
or
int
std
stos
test
lret
rcrb
xchg
int
int
dec
adc
cmp
cwtl
lcall
push
mov
jbe
inc
and
dec
addb
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
int
mov
jbe
int
cmc
int
mov
or
or
pop
jle
addb
mov
insl
mov
sarl
xor
mov
nop
xchg
iret
sahf
int
mov
aad
or
mov
jno
int
mov
leave
xchg
mov
ficomps
or
pop
mov
or
lret
mov
or
insb
add
add
push
add
add
outsb
add
add
add
inc
mov
add
iret
outsb
xor
add
add
xor
add
mov
add
int
mov
add
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
cmpsb
mov
cmp
shl
sub
in
outsb
iret
aam
mov
int
das
mov
cmp
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
outsb
iret
aam
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
incl
add
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
je
push
jbe
add
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
mov
add
or
int
stc
pop
inc
pop
inc
xchg
or
daa
or
int
mov
add
int
mov
mov
xor
pusha
addl
addb
mov
add
int
mov
add
pop
es
push
std
incl
add
xor
push
incl
add
xor
push
addb
add
or
xchg
add
add
jbe
pop
dec
xor
iret
test
add
add
bound
add
pop
push
xor
iret
mov
add
add
pushf
mov
add
int
mov
add
pop
add
addb
add
cmp
adc
cmpb
add
mov
addb
add
pop
lcall
adc
add
int
xor
call
repnz
or
adc
jbe
int
dec
cmp
mov
shl
sub
leave
add
add
add
incl
add
jbe
int
xor
jns
mov
shl
sub
jo
push
stc
incl
add
jbe
int
cmp
push
sbb
add
inc
lret
fwait
xor
adc
icebp
or
int
stc
push
insl
aam
adc
or
fmull
int
dec
int
dec
sar
setl
icebp
shr
sub
jmp
push
adc
xchg
cmc
int
and
dec
das
push
popa
test
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
in
addb
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
add
pop
xor
mov
add
int
mov
add
pop
es
iret
sub
add
pop
daa
xor
iret
xor
add
add
test
add
add
xor
iret
cmp
add
add
mov
or
cmp
add
pop
fwait
xor
iret
inc
add
add
or
or
inc
add
add
xor
iret
dec
add
add
pop
addb
add
pop
cmp
addb
add
jns
movsl
cmpsl
pop
pop
adc
iret
push
add
add
pop
mov
add
jns
fisttps
jbe
inc
jns
loope
pop
fcom
addb
add
jns
lods
push
pop
jnp
addb
add
jns
repnz
ljmp
mov
add
jns
in
int
xor
xchg
xor
icebp
shr
xchg
shr
sub
in
xchg
int
xor
out
cmp
stc
shr
sub
xor
das
pop
mov
int
xor
out
cmp
stc
shr
sub
int
stc
add
adcl
fwait
addb
movsw
int
xor
lea
cmp
sub
repz
push
jecxz
stc
xchg
int
xor
out
cmp
xchg
shr
sub
add
mov
stc
inc
adc
int
xor
icebp
shr
xchg
shr
sub
or
adc
lea
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
movsl
or
add
xor
mov
rcl
int
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
cmp
cli
mov
add
cld
mov
add
cli
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
popa
mov
or
or
int
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
dec
int
dec
cmp
mov
jmp
mov
or
int
dec
int
dec
cmp
cmp
shr
xchg
shr
sub
int
dec
iret
mov
out
shl
xchg
cmp
shr
sub
das
mov
or
int
dec
int
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
int
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
xor
out
cmp
xchg
shr
sub
xchg
or
adc
lea
dec
int
mov
icebp
cmp
shr
xchg
shr
sub
iret
push
nop
incl
add
add
add
jbe
mov
int
xor
xchg
xor
cmp
stos
cmp
shr
xchg
shr
sub
or
add
jbe
int
dec
cmp
mov
repnz
aam
iret
push
adc
int
xor
lea
cmp
mov
repnz
jo
push
and
add
jo
jbe
rolb
int
dec
cmp
lock
mov
mov
push
ror
iret
movsb
incl
add
int3
push
sbb
jbe
mov
int
xor
xchg
xor
psrlq
xchg
add
call
ljmp
sbb
sub
xor
push
jo
add
iret
mov
mov
add
pop
adc
push
bound
add
int
mov
add
int
mov
add
add
sub
jge
or
mov
mov
mov
add
add
pusha
mov
add
iret
mov
or
les
add
int
mov
add
iret
loopne
pop
add
iret
enter
iret
mov
mov
add
mov
add
add
stc
mov
add
int
pop
leave
xor
iret
addb
add
jge
or
aam
add
int
mov
add
cmp
or
add
add
addr16
add
leave
push
lods
add
add
xor
fadds
add
jae
jno
mov
int
xor
xchg
xor
call
repnz
jns
mov
lea
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
addb
das
add
addb
xchg
xor
psrlq
xchg
add
call
ljmp
aad
cmp
add
lea
int
xor
psrlq
xchg
add
call
jmp
jge
int
lea
add
mov
repnz
mov
jecxz
lea
int
xor
psrlq
xchg
add
call
jmp
jge
or
add
lea
int
xor
sti
call
jmp
shr
sub
int
xor
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
pop
pop
add
add
cmpsb
mov
jne
jbe
int
mov
or
insb
test
jbe
int
jge
inc
jge
shr
xchg
int
jne
xchg
jge
leave
cmp
push
icebp
int
cmc
bound
jo
push
cmc
incl
add
repnz
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
iret
cmc
incl
add
mov
leave
cmp
push
rolb
das
push
push
addb
jbe
ficoms
pop
mov
jbe
or
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
xor
repnz
pop
xor
push
repnz
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
pop
xor
repnz
pop
sub
xchg
repnz
int
xor
mov
jle
xchg
lea
inc
rcll
jbe
int
icebp
cmp
shrl
ror
lea
push
jge
dec
int
popf
addl
jbe
int
xor
cmp
cmc
add
sub
and
sbb
adc
test
add
or
adc
add
int
cmp
fcoml
aam
int
cmp
fsubl
aam
int
adc
add
int
cmp
outsb
sbb
push
add
cmp
cmc
mov
stos
test
lret
shlb
xchg
int
jno
cwtl
leave
jbe
dec
and
inc
and
int
std
sar
shll
xchg
sti
sarl
push
jns
mov
int
std
aam
int
std
cmp
cmp
sarl
push
jns
dec
inc
adc
pop
int
xor
jbe
cmp
push
add
push
pop
lret
or
das
push
fcmovbe
dec
add
adcl
fwait
addb
dec
adc
in
addb
lea
lret
or
js
clc
orb
int
stc
cmp
int
stc
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
int
add
leave
jbe
dec
and
xchg
jbe
or
int
adc
add
lea
addl
lea
std
cwtl
lcall
jns
mov
shl
sub
or
int
std
int
std
cmp
mov
repnz
or
int
mov
insb
jo
mov
int
mov
insb
pop
int
mov
push
outsb
xchg
int
mov
sbb
insb
pop
int
mov
jle
jl
icebp
sub
jbe
int
pop
xchg
in
xchg
insb
xchg
or
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
sub
mov
jbe
int
std
int
std
cmp
cmp
repnz
mov
lea
or
jbe
cmp
xchg
and
imul
xchg
int
std
cmp
lock
push
rorl
jbe
int
mov
jbe
add
popf
add
dec
int
mov
neg
add
or
int
adc
insl
aam
int
popf
or
int
movsl
int
dec
xor
or
int
adc
lea
dec
int
movsl
inc
jge
sbb
jbe
int
dec
int
adc
outsb
mov
lea
test
xchg
jbe
inc
and
cmp
xchg
and
or
iret
jbe
or
iret
jbe
or
iret
jbe
or
int
std
int
std
cmp
lock
push
rorl
jbe
jmp
xchg
and
xchg
popf
iret
jbe
jo
xlat
filds
add
jbe
int
stc
cmp
lock
sub
mov
jbe
or
int
xchg
sarl
in
push
popf
or
int
stc
cmp
shl
sub
jns
mov
stc
int
stc
cmp
cmp
shr
xchg
shr
sub
xchg
int
movsl
or
sub
jbe
int
stc
cmp
lock
push
shll
dec
iret
jbe
jo
sti
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
std
int
std
cmp
lock
push
shll
dec
iret
jbe
jo
mov
jbe
int
cmc
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
lock
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
in
int
in
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
cmc
int
int
cmc
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
push
mov
jbe
int
adc
mov
cmpb
shl
sub
jns
mov
je
ror
lea
int
int
adc
and
psrlq
xchg
cmp
shr
sub
lret
rolb
int
in
int
int
in
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
cmc
addb
in
int
int
cmp
shl
sub
jns
mov
je
ror
lea
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
add
in
int
in
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
in
int
int
in
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
xor
jbe
jo
outsl
lods
add
int
pop
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
jbe
int
stc
int
stc
int
stc
int
stc
cmp
xchg
shrl
cmpsb
gs
xchg
cmp
add
std
add
std
shr
sub
hlt
dec
and
int
std
cmp
cmp
repnz
mov
lea
push
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shr
jle
addb
popf
iret
jbe
jo
jge
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shll
iret
jbe
jo
das
cli
add
int
std
int
std
cmp
lock
push
shll
iret
jbe
jo
sti
stc
add
int
popf
xchg
or
add
cmp
jbe
xchg
jo
push
fildl
add
jbe
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
mov
repnz
jo
cmp
jbe
jo
add
jbe
int
std
cmp
mov
repnz
jo
cmp
jbe
jo
jb
add
int
inc
int
inc
cmp
cmp
shr
xchg
shrl
lea
addl
jo
cmp
lea
add
jbe
int
cmp
cmp
jbe
int
stc
int
stc
cmp
shl
sub
jns
mov
lea
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
or
cli
add
int
mov
xor
in
adc
cwtl
lcall
add
xchg
mov
or
dec
int
mov
cmpsb
dec
or
pop
jnp
ficoms
cmp
pop
mov
adc
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
sbb
aad
sbb
das
adc
je
push
ja
xchg
shr
addl
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
popf
int
xor
cli
int
adc
inc
loope
shrl
cli
push
addb
push
popf
int
mov
bswap
dec
int
xor
cmpsb
adc
lods
std
add
std
shr
sub
ficoml
aaa
ficoms
adc
mov
clc
aam
ficoms
adc
mov
leave
sbb
push
jge
cltd
pop
mov
add
aaa
ficoms
cmp
adc
out
ficoms
sbb
das
adc
das
stos
push
in
xchg
imul
and
addb
dec
int
mov
out
cmp
pop
jnp
ficoms
cmp
das
inc
sti
xchg
shr
xchg
cmp
shl
sub
cmc
push
fxch
out
imul
cmpsb
and
and
cmpsb
adc
xchg
fiaddl
aam
add
xor
and
sub
std
add
sub
add
or
or
mov
out
cmp
cmp
das
inc
add
out
int
mov
cmpsb
dec
shr
sub
dec
cmc
cmp
push
clc
int
xor
cli
push
aad
cmpsb
adc
popf
int
int
xor
or
cmpsb
adc
inc
jge
shr
sub
fst
jmp
adc
addb
lock
icebp
sbb
and
mov
cmpsl
cmp
sbb
jbe
int
dec
int
mov
dec
adc
mov
jnp
ficoms
das
inc
jge
int
cmp
cmp
sarl
jmp
adc
addb
divps
test
aam
adc
gs
jo
mov
ss
das
sbb
mov
test
lret
shrb
xchg
int
add
dec
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cwtl
shl
sub
lea
cmpsb
mov
cmp
push
rorb
or
xor
mov
jbe
int
xor
addb
int
adc
adc
test
nop
jo
add
or
lea
jge
shr
xchg
int
mov
xchg
dec
add
and
jns
ficoml
or
iret
jbe
jo
add
sbb
repnz
adc
xor
dec
add
mov
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cmp
fcmovbe
repnz
das
push
rolb
aam
int
xor
lea
inc
jge
shr
xchg
int
xor
xchg
adc
jns
fcmovbe
repnz
lea
shrb
shll
or
adcb
lcall
xchg
inc
int
and
mov
jnp
ficoms
inc
icebp
das
or
addb
test
jnp
inc
hlt
mov
das
add
adc
jno
ficoms
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
cmpsb
aaa
ficoms
test
aam
adc
scas
aaa
ficoms
mov
das
add
adc
mov
ficoms
das
push
into
addl
sub
addl
adc
xor
dec
add
mov
jmp
addl
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
aaa
ficoms
test
aam
adc
fidivs
ficoms
mov
das
add
adc
out
ficoms
in
iret
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
mov
int
dec
xchg
sbb
or
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
fst
out
xchg
adc
addb
clc
ds
xor
adc
xchg
cmp
inc
int
xor
adc
xchg
xor
adc
out
int
adc
adc
jecxz
inc
sti
xchg
shr
sub
fstl
clc
addb
push
clc
int
cmp
aad
cmpsb
inc
cmp
cmp
lea
loope
cmp
shrl
subb
lea
shr
xchg
push
popf
xchg
int
adc
hlt
add
std
shr
sub
insl
adc
aam
ficoms
adc
mov
out
int
inc
add
std
adc
aam
ficoms
adc
mov
lock
and
aad
rclb
or
and
not
aaa
ficoms
cwtl
add
xor
sub
add
sbb
adc
xor
dec
add
mov
or
arpl
sarb
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
aad
clc
int
xor
cmpsb
adc
fsts
or
int
cmp
inc
int
xor
adc
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
cli
cmp
lea
inc
loope
cmp
push
cli
shrl
subb
push
popf
int
cmp
lea
int
cmp
hlt
int
inc
adc
mov
jnp
ficoms
das
inc
jge
shr
sub
jmp
cmp
adc
addb
lds
lea
out
int
adc
repnz
add
std
adc
aam
ficoms
adc
aam
ficoms
shr
sub
insl
adc
mov
hlt
mov
lock
jmp
incl
add
sbb
pop
aaa
ficoms
or
and
jbe
xchg
aaa
ficoms
or
int
adc
cmc
lcall
xchg
int
adc
out
jo
sti
cmpsb
mov
jno
xchg
std
int
dec
or
iret
jbe
add
mov
mov
dec
add
in
add
mov
adc
stos
or
int
std
test
rorb
add
stc
add
inc
cwtl
leave
je
xor
addb
addb
xor
xor
sub
and
sbb
adc
xor
dec
add
mov
int
mov
je
test
je
xor
insl
das
add
int
xor
push
insl
das
add
add
xor
add
xor
add
xor
int
xor
add
int
xor
int
xor
int
xor
iret
jbe
or
int
xor
xchg
or
int
xor
int
xor
int
xor
int
and
xor
aam
mov
add
sbb
or
xor
push
int
fs
xchg
sbb
push
int
xchg
pop
sbb
add
addl
dec
int
xor
xchg
or
or
xor
push
insl
das
push
cwtl
addl
addl
je
test
add
orb
xor
int
xor
int
or
int
or
int
xor
int
int3
addl
dec
int
xor
int
xor
int
popf
addl
or
imul
jns
add
sarl
push
jge
mov
leave
je
mov
je
xor
insl
aam
int
xor
add
adc
jl
cmp
and
add
xor
add
xor
add
xor
add
xor
int
xor
add
in
cmp
aam
and
aam
and
aam
and
je
push
add
in
and
aam
adc
je
cmp
icebp
in
xchg
je
xor
icebp
or
int
xor
push
insl
aam
int
xor
leave
add
and
mov
mov
int
movsl
addl
and
mov
mov
cmp
add
shl
sub
mov
mov
inc
rcl
and
je
test
mov
int
movsl
addl
addb
cmp
push
iret
jbe
or
int
xor
int
xor
int
in
addb
je
test
add
addl
or
or
adc
mov
int
in
addb
mov
sub
lds
insb
jae
bound
bound
add
insb
popa
inc
gs
fs
add
push
outsl
jns
add
jns
popa
outsl
bound
add
push
add
arpl
popa
insb
jne
gs
insl
imul
outsl
jb
jo
ja
gs
jb
bound
add
outsb
addr16
outsb
arpl
add
jne
je
outsb
push
popa
jb
add
jb
popa
insb
insl
je
outsl
ja
jb
jo
insl
jns
push
outsb
push
imul
inc
outsl
popa
insb
popa
imul
je
outsl
outsb
gs
inc
push
jns
jns
jne
imul
outsl
je
gs
outsl
je
imul
jo
popa
insb
dec
outsb
popa
jo
add
je
gs
jae
js
popa
data16
insb
popa
imul
gs
jb
inc
insb
popa
bound
je
insb
jns
push
popa
inc
popa
insb
insb
push
outsl
insl
outsl
jb
data16
jae
bound
add
outsb
gs
je
gs
add
outsl
inc
popa
imul
jo
fs
je
imul
outsl
add
jne
add
popa
add
add
add
insl
add
add
jb
ja
imul
outsb
add
add
ja
imul
push
add
je
jbe
add
je
add
insb
add
imul
outsl
add
je
popa
add
push
add
arpl
imul
add
outsl
add
add
jns
add
insb
add
jns
jbe
popa
add
popa
add
outsl
add
add
jb
jae
imul
imul
bound
outsl
add
imul
js
jae
outsl
add
popa
add
je
add
bound
jns
add
add
add
add
js
imul
imul
popa
add
add
add
ja
insb
add
popa
add
jo
popa
add
imul
add
jbe
add
jb
jne
je
insl
add
arpl
jne
jo
add
jae
outsl
add
imul
outsl
add
jb
jae
outsl
add
add
outsl
add
popa
add
jae
data16
jb
popa
add
add
add
adc
out
adc
js
adc
test
adc
fs
adc
jp
adc
enter
loop
adc
ja
adc
cmp
adc
rclb
adc
sbb
add
add
add
adc
mov
adc
out
sbb
adc
add
jbe
add
addl
mov
addl
lret
addl
roll
inc
add
addl
jecxz
inc
add
addl
out
addl
testl
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
or
add
push
adc
cmpsl
outsl
adc
push
popa
adc
add
add
jle
add
adc
mov
adc
aas
inc
adc
pop
and
add
jl
add
adc
inc
push
adc
mov
pop
adc
sub
add
ja
add
sbb
add
adc
or
adc
sbb
data16
xchg
bound
add
dec
adc
in
adc
sub
add
adc
imul
rolb
in
adc
mov
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addl
addl
and
add
push
adc
testb
add
sbb
add
or
add
pop
adc
adc
cmp
add
sbb
add
adc
push
adc
mov
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
pusha
adc
pop
js
add
dec
adc
cmp
adc
aam
adc
or
adc
pop
push
adc
mov
xor
add
and
adc
adc
add
dec
adc
jae
adc
dec
add
inc
add
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
test
pop
test
add
jno
dec
add
add
mov
add
add
add
add
add
add
add
orb
add
add
add
add
xchg
add
add
mov
add
mov
add
into
xchg
add
add
add
xchg
add
xchg
add
add
sub
add
dec
xchg
add
add
jo
add
jle
add
nop
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
push
mov
add
mov
add
mov
add
add
pop
mov
add
add
add
mov
add
lods
mov
add
add
loop
add
clc
mov
add
mov
add
add
sub
add
cmp
add
dec
mov
add
add
insb
mov
add
add
xchg
mov
add
add
ret
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
add
add
add
jl
add
mov
add
mov
add
enter
fmuls
add
push
mov
add
add
and
add
xor
add
dec
mov
add
add
jb
add
mov
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
mov
add
add
push
mov
add
add
add
add
xchg
add
mov
add
mov
add
mov
add
mov
add
add
and
add
inc
lea
add
add
pop
lea
add
fs
add
add
je
outsl
jns
jb
jo
jb
jns
push
popa
add
pop
add
outsl
jo
jb
jns
push
add
pop
add
outsl
jo
jb
jns
push
add
dec
add
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
je
outsl
jns
inc
add
popa
addr16
imul
dec
insl
popa
addr16
outsl
jne
je
dec
add
popa
addr16
imul
outsl
jbe
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
push
add
gs
je
inc
imul
imul
jb
insl
push
add
xor
push
gs
popa
jb
je
outsl
jae
cmp
inc
gs
gs
popa
addr16
add
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
sbb
inc
gs
arpl
dec
outsb
outsw
add
add
arpl
outsl
jo
jo
outsb
jne
add
add
outsb
imul
push
arpl
add
popa
jb
jo
gs
add
add
je
insb
addr16
je
insl
push
gs
inc
add
push
outsb
gs
outsl
jo
jo
add
add
insl
outsl
jbe
push
jb
jo
add
push
push
outsb
outsl
ja
add
add
insb
insb
push
imul
outsl
arpl
mov
dec
outsl
popa
fs
outsb
jne
add
arpl
outsl
push
push
outsb
outsl
ja
add
add
jb
insb
insb
push
imul
add
popl
inc
gs
imul
outsl
arpl
add
add
popa
jb
jb
jbe
add
fs
je
push
arpl
xor
inc
gs
outsb
jne
je
insl
dec
inc
add
fs
outsl
je
data16
gs
popa
addr16
add
mov
dec
outsl
popa
fs
arpl
push
add
imul
popa
bound
add
inc
outsl
jb
addr16
jne
fs
imul
add
je
imul
js
inc
add
add
je
gs
popa
addr16
add
add
outsb
fs
gs
popa
addr16
add
das
add
je
arpl
gs
imul
add
imul
popa
jae
inc
js
add
and
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
dec
gs
popa
addr16
imul
inc
popa
jae
popa
fs
imul
add
add
imul
jae
js
repnz
jae
dec
gs
popa
addr16
add
add
je
jo
popa
je
push
outsb
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
test
fs
imul
add
ja
je
je
push
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
cmp
inc
push
jo
jb
jne
push
add
daa
add
je
gs
outsl
popa
jb
push
jns
add
inc
gs
jb
jo
add
dec
add
jo
push
arpl
sub
jb
gs
push
add
push
ja
jb
add
sub
inc
gs
popa
jae
inc
arpl
gs
outsl
jo
jo
add
fs
je
imul
inc
gs
imul
outsb
addr16
add
leave
add
jo
imul
imul
inc
push
dec
gs
push
add
push
push
inc
push
xor
cs
insb
add
xchg
add
insb
dec
outsb
imul
jb
outsb
add
fs
insb
cs
insb
add
dec
outsl
arpl
gs
outsb
outsw
push
add
inc
add
je
jb
arpl
fs
jae
add
roll
inc
jb
popa
je
inc
imul
outsb
addr16
add
sub
gs
popa
outsb
fs
gs
outsl
jne
je
add
add
gs
je
dec
popa
imul
popl
inc
gs
je
insl
dec
popa
insl
gs
add
pusha
add
je
jns
je
insl
push
imul
imul
jns
add
aas
add
fs
imul
add
xchg
add
outsl
bound
inc
insb
insb
outsl
arpl
xchg
add
imul
jne
jb
add
testl
imul
jb
inc
imul
jne
arpl
add
add
jbe
inc
imul
popa
imul
jo
imul
inc
gs
imul
jo
inc
add
and
gs
imul
bound
gs
add
add
jbe
inc
imul
add
jo
inc
imul
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
sub
gs
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
push
add
je
jb
jb
je
arpl
push
arpl
outsb
add
jg
inc
outsl
insb
fs
je
imul
insb
jae
jb
outsb
inc
add
sahf
add
je
outsl
insl
insl
push
imul
add
gs
push
push
imul
inc
push
dec
inc
dec
xor
cs
insb
add
mov
push
outsl
insb
jns
outsl
outsb
add
gs
bound
arpl
add
gs
inc
inc
add
roll
push
gs
arpl
push
arpl
jmp
push
gs
popa
jo
outsl
fs
leave
add
jne
fs
arpl
add
je
insb
je
add
insb
imul
je
add
jge
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
push
gs
inc
js
outsb
je
outsl
imul
push
arpl
gs
imul
inc
js
inc
js
add
add
insb
arpl
imul
add
je
gs
inc
outsl
insb
outsl
jb
add
push
imul
inc
outsl
insl
bound
gs
outsb
add
lods
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
outsl
add
mov
popa
je
dec
inc
push
add
je
imul
movsl
add
gs
je
push
popa
insb
gs
add
dec
xor
cs
insb
add
add
add
add
add
js
outsl
arpl
add
je
outsb
arpl
jb
jb
imul
add
add
add
add
xchg
add
add
mov
add
mov
add
into
xchg
add
add
add
xchg
add
xchg
add
add
sub
add
dec
xchg
add
add
jo
add
jle
add
nop
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
push
mov
add
mov
add
mov
add
add
pop
mov
add
add
add
mov
add
lods
mov
add
add
loop
add
clc
mov
add
mov
add
add
sub
add
cmp
add
dec
mov
add
add
insb
mov
add
add
xchg
mov
add
add
ret
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
add
add
add
jl
add
mov
add
mov
add
enter
fmuls
add
push
mov
add
add
and
add
xor
add
dec
mov
add
add
jb
add
mov
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
mov
add
add
push
mov
add
add
add
add
xchg
add
mov
add
mov
add
mov
add
mov
add
add
and
add
inc
lea
add
add
pop
lea
add
add
