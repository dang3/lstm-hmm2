push
mov
sub
mov
mov
mov
sbbl
sub
push
mov
mov
mov
sbb
mov
orl
orl
sbbl
mov
mov
mov
cmpl
mov
movl
jmp
movl
movl
je
push
push
push
call
orl
orl
adc
xor
neg
neg
cmpl
movl
mov
mov
movl
jmp
movl
jg
push
call
xor
adc
movl
mov
add
add
not
mov
sub
mov
mov
sbb
mov
cmpl
movl
movzwl
mov
jmp
movl
jbe
push
pushl
push
push
pushl
call
mov
mov
sub
and
sbb
sub
adcl
orl
or
orl
mov
mov
sub
or
lea
cmpl
mov
movl
not
mov
jmp
mov
not
jge
push
push
push
push
push
push
call
or
adc
sub
incl
mov
mov
sub
or
and
xor
xor
and
adc
mov
mov
cmpl
movl
mov
not
mov
jmp
mov
jle
push
push
push
pushl
call
orl
xor
mov
sbb
sub
mov
and
mov
xorl
xor
or
sub
mov
inc
mov
xor
add
mov
mov
add
mov
mov
addl
shrd
shr
mov
mov
xor
xor
addl
or
mov
add
mov
movl
movl
movl
and
movl
cmpl
movl
movl
movl
movl
jmp
mov
mov
ja
pushl
push
push
push
pushl
push
call
addl
adcl
addl
andl
orl
neg
movl
xor
movl
adcl
movl
sbb
movl
movl
movl
sbbl
movl
adc
movl
or
movl
movl
movl
add
movl
sub
movl
xor
xor
and
movl
sub
movl
sub
movl
sbb
movl
sub
movl
cmpl
movl
movl
jmp
movl
mov
jle
push
pushl
push
push
pushl
call
andl
notl
andl
orl
addl
sbbl
mov
subl
shl
xor
mov
xorl
push
sbbl
push
push
push
sbbl
call
mov
or
mov
mov
or
mov
xor
mov
mov
cmpl
mov
movl
mov
notl
jmp
movl
movl
jl
push
push
call
adcl
sub
adcl
negl
and
or
movzwl
add
mov
sbb
add
sub
sub
mov
xor
or
adc
lea
subl
mov
inc
mov
andl
or
and
adcl
mov
adcl
or
xorl
xor
movl
cmp
movl
jne
and
mov
or
mov
shrd
adc
shr
notl
mov
sbb
mov
shl
subl
xor
xor
or
mov
movl
cmp
movl
jne
xor
mov
mov
addl
xor
mov
sbbl
mov
mov
add
mov
shrd
andl
mov
mov
addl
xor
xorl
shr
mov
adc
mov
xor
movl
or
movl
shl
sub
mov
mov
subl
mov
add
mov
mov
add
mov
sbb
mov
shrd
cmpl
not
not
mov
mov
jmp
movl
movl
ja
push
push
call
xor
add
and
mov
movzbl
adc
mov
sbb
and
movzbl
sub
cmpl
mov
mov
mov
jmp
movl
jge
pushl
call
sub
mov
mov
or
subl
or
neg
adcl
shr
sbb
mov
mov
sbbl
xor
xor
shl
adc
xor
or
add
mov
mov
andl
jmp
mov
imul
sarb
adc
adc
pop
adc
add
ja
fisttpl
lds
lods
add
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
push
push
mul
sub
addr16
fidivl
fmulp
adc
inc
xor
push
rcll
sarb
frstor
rcrl
sahf
loopne
mov
lret
mov
push
xchg
sarl
sub
inc
pop
and
jmp
or
ss
scas
mov
and
aad
cld
inc
jo
mov
loope
data16
cmc
pop
jo
testb
js
mov
cmp
mov
movsl
sbb
mov
repz
lds
xchg
add
lock
add
add
mov
popf
fisttpll
xchg
mov
enter
push
jecxz
stos
imul
lcall
rcll
test
sub
push
adc
add
cmc
inc
fs
xchg
mov
adc
fistl
xor
cmp
popf
call
or
testl
push
rorl
mov
jne
movsl
imul
pop
lock
jbe
and
in
mov
loopne
or
adc
lret
jecxz
push
push
cmpsb
lret
pop
jns
jp
sub
lret
pusha
dec
imul
xchg
inc
shll
pop
addl
dec
or
or
mov
mov
push
mov
jecxz
xchg
push
fs
orb
xchg
add
mov
adc
ljmp
sub
clc
add
and
pop
lret
mov
dec
test
loop
mov
lahf
mov
or
mov
fwait
pop
push
sti
shlb
cli
and
and
pop
xor
clc
into
mov
popa
dec
sub
pop
shlb
push
adc
inc
sub
mov
sub
repz
aad
popa
xorb
push
mov
aad
mov
dec
outsb
inc
add
add
bound
and
out
imul
imul
test
and
sti
lea
inc
jge
push
dec
add
aad
and
ljmp
lahf
add
lds
fwait
pop
push
ret
aad
stc
dec
incl
aas
insl
mov
sbbb
iret
jg
jno
lds
scas
dec
push
loopne
cmp
inc
mov
notb
sub
jl
ljmp
lds
js
das
shrl
rolb
jle
xlat
dec
sbb
pop
sbb
dec
mov
mov
lods
sub
jle
jbe
js
pop
jl
and
ja
int
jecxz
push
cli
movsl
les
add
pop
repnz
dec
out
mov
mov
sub
scas
fldcw
movsl
test
bound
mov
push
xchg
test
push
jmp
decb
xchg
dec
dec
out
int3
fisttps
or
aaa
pop
or
jmp
aaa
inc
dec
sbb
inc
push
inc
dec
shr
mov
sti
mov
int3
repz
jae
and
push
test
pop
pop
push
cld
cltd
adc
ds
push
pop
sbb
fistpl
rol
loopne
jbe
adc
push
shlb
incl
cld
or
cmp
jmp
ljmp
add
sub
test
add
pop
das
rol
and
sub
sub
mov
ret
pop
cld
repnz
cmp
mov
cmp
outsl
fs
sbb
push
dec
popf
lods
mov
repz
imulb
es
or
mov
jmp
loopne
inc
ret
or
dec
sub
or
jne
loope
ds
and
les
mov
sbb
fidivrl
adcl
mov
or
xchg
fs
push
xchg
push
sarb
mov
lcall
std
in
pop
ljmp
outsb
aas
scas
pushf
sarb
add
inc
cmp
das
jns
add
sti
sahf
pop
stos
mov
jbe
xchg
xlat
clc
mov
add
iret
daa
jns
enter
xor
lds
cmp
je
out
or
or
ficompl
mov
jmp
sarl
jl
arpl
aad
test
sbb
pop
and
sbb
rcrl
xchg
jmp
push
test
imul
push
sbb
rorl
pop
mov
adc
cltd
int
adc
les
mov
push
hlt
ret
sahf
test
push
dec
sar
push
dec
mov
mov
cmp
loop
mov
sbb
int3
or
mov
inc
sbb
stos
in
mov
inc
dec
mov
pop
fisubrl
aam
pop
les
jecxz
mov
push
mov
enter
aad
push
shrb
imul
sarb
bound
jle
call
cld
roll
sbb
mov
xchg
arpl
mov
std
stos
testb
sbb
sub
mov
and
lea
jae
mov
enter
data16
movsl
outsl
xor
jo
dec
add
stos
in
popa
add
xchg
cmp
mov
dec
pop
pop
rolb
sbb
xor
jb
adc
mov
jmp
add
xchg
adc
sub
enter
mov
xchg
in
iret
ret
aaa
xchg
cltd
or
adc
cli
cli
cs
jno
pop
movsl
fmuls
xlat
jl
mov
mov
ds
inc
dec
popf
mov
cmpsl
je
pusha
cli
mov
or
movsl
push
xchg
jno
cmp
pop
mov
shll
xchg
bswap
in
std
test
xchg
cmp
or
out
or
mov
es
orl
lods
xchg
push
test
test
adc
jecxz
inc
imulb
into
aaa
gs
fidivs
int3
jbe
sbb
jno
pop
jp
jae
in
mov
fidivrs
fs
mov
xor
cmc
jo,pn
xor
outsl
mov
scas
mov
sbb
fs
sbb
pop
push
les
pop
jns
shl
sbb
rorb
stos
jno
pop
cltd
xchg
adc
scas
test
das
pop
int3
xorb
pushf
dec
dec
std
popf
xchg
stos
scas
and
lods
dec
xchg
pop
mov
mov
std
idivb
in
hlt
jo
and
lods
xchg
pop
pop
hlt
lret
jp
jecxz
stos
add
aad
adc
pusha
inc
mov
jbe
rorb
in
leave
es
mov
inc
lods
insb
fldenvs
sub
fwait
mov
sub
or
hlt
mov
dec
jb
add
lods
push
adc
push
popf
inc
shrb
add
clc
lcall
icebp
xor
repnz
rcl
int
insb
push
shr
mov
mov
xchg
xchg
add
push
cld
aas
xchg
imul
mov
scas
jne
dec
mov
mov
testl
sub
in
outsb
lahf
pushf
mov
adc
int
rol
dec
dec
sbb
jle
add
mov
xor
xchg
cmpsl
pop
stc
popa
xchg
mov
or
xor
jmp
jecxz
push
in
push
xor
push
ljmp
shrb
push
notl
scas
in
mov
and
iret
jbe
decb
repz
cmp
out
xchg
popa
xchg
jl
int
test
hlt
mov
push
insl
pop
mov
mov
ss
js
adc
inc
pop
pop
pop
push
add
js
mov
dec
add
jnp
repz
fwait
out
jg
or
jne
add
es
sbb
mov
dec
outsl
inc
inc
mov
xor
push
leave
mov
mov
clc
add
and
adc
sbb
in
out
jne
mov
cmp
je
add
mov
and
in
es
in
sub
push
ficomps
jb
inc
mulb
cmpsb
enter
xchg
or
bound
mov
outsl
jle
inc
in
call
mov
inc
adc
mov
pop
add
adc
jge
push
push
fidivrl
in
push
xor
loopne
pop
jo
sub
and
and
stc
adc
loopne
add
inc
jnp
in
adc
cltd
in
mov
and
hlt
jbe
sti
cltd
or
pop
rcrb
fsubr
testb
shrb
lret
dec
gs
outsl
push
cmp
inc
sbb
insl
cmp
aas
and
popf
push
cmp
jno
adc
cmp
jnp
inc
jno
xor
dec
lods
xchg
or
xchg
adc
pop
sbb
pushf
aas
or
push
mov
inc
das
lret
push
sub
mov
shrd
push
fisttpl
test
enter
cmp
fcoms
jle
pop
push
pop
xor
or
and
loopne
cmp
or
push
and
shlb
adc
cli
rcl
cwtl
xor
imul
pop
pop
dec
ret
sti
or
cmp
icebp
shrl
das
and
out
pop
mov
shr
addb
mov
xlat
sub
push
fildll
add
jg
sbb
jge
je
mov
mov
ret
jns
cmpsl
add
es
mov
mov
and
jns
inc
add
pop
mov
xchg
cmp
cmpsl
push
add
sarb
loopne
jg
call
mov
repnz
lds
lret
mov
or
dec
mov
call
sub
mov
mov
rorl
mov
aam
cmpsb
and
sbb
in
adc
add
lahf
sbb
pop
shrb
cmpsb
or
jno
mov
iret
insb
shlb
ja
movsl
xor
fcoms
arpl
nop
daa
mov
aad
and
das
insb
int3
fsubrl
cltd
jmp
pop
test
stos
add
or
add
xchg
cmc
lea
pop
mov
sbb
js
pop
inc
or
push
adc
hlt
push
jg
add
dec
jae
mov
cld
roll
insl
repz
xor
push
and
mov
sub
inc
mov
cmp
add
cmp
cmp
sub
pop
mov
inc
mov
jo
std
jl
inc
push
pop
mov
add
mov
push
out
xor
jns
ja
jb
out
pushf
jne
pop
pop
fs
aad
push
push
rcl
cmp
pusha
xchg
push
insb
and
fildl
pop
mov
clts
icebp
into
test
test
lock
and
inc
mov
in
add
out
lock
out
jge
mov
push
cmp
cld
ljmp
cwtl
jecxz
xor
out
mov
jecxz
adc
push
push
pop
les
jne
sub
test
push
jb
ret
in
gs
stos
jmp
sbb
stos
movsl
dec
sub
repnz
mov
andb
arpl
jmp
setns
div
jo
mov
mov
add
xor
mov
xor
pop
xchg
dec
push
mov
inc
pop
test
fistpl
lods
aam
divb
test
inc
out
mov
in
xor
scas
or
jno
das
and
jmp
push
push
jle
inc
and
lret
jmp
sub
mov
sbb
cwtl
ret
pop
sbb
sbb
sbb
imul
sarb
rorb
add
mov
es
sub
pusha
adc
imul
add
dec
sbb
add
stc
jl
mov
in
pusha
mov
cmc
addr16
cli
icebp
sti
popa
adc
in
mov
fisttps
mov
int3
mov
ds
pusha
xor
cmp
dec
movl
xor
mov
cmp
push
call
sub
xor
or
mov
gs
stos
dec
push
cmpsb
and
out
shl
xchg
jnp
cld
fs
mov
mov
test
or
ret
pop
sbb
in
xchg
sbb
loopne
jno
adc
mov
mov
mov
outsb
int
shll
cmc
ja
nop
rcl
xchg
xchg
pop
inc
cmp
inc
push
stc
or
loop
push
shrl
test
stc
decb
sub
js
fs
sbb
pop
cwtl
add
cmp
inc
xchg
adc
enter
loope
mov
push
cltd
push
std
js
stos
add
sbb
and
pop
inc
out
xorl
call
lods
jo
mov
mov
aam
xor
mov
xlat
leave
and
shll
cmpsl
setg
add
scas
inc
xchg
cld
xchg
pushf
aas
xor
pop
push
and
cmp
lahf
cmp
and
add
test
aas
in
loopne
mov
stc
mov
push
nop
aas
sbb
aam
inc
mov
sbb
fldpi
sub
fwait
jne
and
jns
inc
push
push
test
insl
xor
out
xor
addr16
mov
mov
fldl
mov
adc
pop
movsl
cmp
lods
sbb
add
aas
popf
mov
add
add
fwait
ds
lcall
pop
icebp
out
xchg
jl
aad
in
xchg
mov
addl
mov
xlat
nop
xor
out
add
fsubrl
mov
mov
rclb
push
call
in
mov
data16
jge,pn
cmp
fnstenv
and
dec
push
stos
pop
jae
mov
ljmp
insl
imul
loop
inc
mov
stos
sub
mov
sub
inc
js
jne
or
fcompl
xchg
xor
lods
ret
xor
mov
mov
icebp
add
in
lea
xchg
test
scas
inc
cmp
js
pop
shrl
mov
iret
dec
mov
pop
push
xchg
pop
mov
pop
sub
jne
popf
rcrb
mov
in
neg
jb
push
nop
push
aam
jbe
jns
push
sub
out
jl,pn
pop
push
inc
ja
adc
mov
int
xor
push
notl
add
das
mov
cmp
sbb
lds
adc
push
repnz
popa
push
lea
mov
mov
jb
sub
aaa
push
dec
jo
xlat
fistps
cld
pop
and
out
lea
test
loop
sbb
movsl
pop
mov
jge
pop
pop
call
into
or
mov
xchg
pop
shlb
xchg
enter
fimuls
int3
iret
ficomps
mov
leave
fnsave
mov
loope
mov
xchg
imul
push
gs
sub
adc
add
jo
jecxz
arpl
icebp
jne
mov
push
cmpl
fimull
sahf
leave
pop
push
int
mov
hlt
pop
mov
xor
dec
xor
xchg
out
cli
pop
jbe
sbb
mov
mov
jne
daa
lods
lock
mov
out
cmp
call
jo
outsb
push
or
push
and
aaa
adc
jge
sub
add
add
lahf
fists
jp
jnp
mov
xchg
aas
sbb
xchg
mov
movsl
js
jp
and
loope
fldl2t
pushl
icebp
fs
dec
imul
movsl
xchg
inc
inc
gs
push
out
jb
cmp
jno
sbb
sub
pop
orb
cltd
or
sbb
stos
push
mov
dec
mov
stc
add
mov
lods
xor
das
inc
cmp
ret
xor
push
mov
mov
shlb
mov
xchg
icebp
jle
aas
cmpsb
mov
jb
cmp
int3
repz
in
adc
fcoml
inc
mov
xchg
mov
ficoms
lods
push
push
loop
add
das
or
pop
outsl
sahf
xchg
and
into
mov
cmp
dec
dec
push
movsb
in
insb
xchg
dec
lock
push
cli
fs
int
inc
inc
push
add
adc
add
cli
xor
sub
jnp
clc
jbe
int
aad
test
sub
fcomi
inc
mov
xchg
lcall
pusha
outsb
mov
lds
insb
mov
push
mov
dec
pop
adc
scas
mov
pop
ret
movsl
aam
lods
test
jns
aaa
mov
xor
jle
mov
lcall
pop
mov
adc
sub
arpl
daa
cld
push
and
mov
mov
loop
lea
mov
stos
inc
push
add
pop
js
jl
lret
cs
scas
pop
test
push
sbb
jns
cmpsl
cmp
mov
push
mov
xchg
xchg
data16
fs
das
hlt
sub
jmp
mov
jmp
das
imul
in
jge
lret
and
and
cmp
int3
scas
xchg
jns
mov
sti
out
jnp
shlb
mov
or
in
popf
inc
sub
bound
mov
imul
dec
and
sbb
xor
jle
or
test
mov
mov
dec
add
mov
cmp
mov
or
and
xorb
pop
daa
cmp
xor
dec
mov
or
jo
pop
inc
jne
popf
cmpsl
xchg
mov
test
js
fcmove
add
dec
sahf
movsl
mov
jb
test
sarb
daa
and
adc
jnp
fwait
inc
repz
or
lods
xchg
inc
xor
test
mov
aas
cwtl
jae
and
dec
push
mov
pop
es
lods
xchg
cmp
inc
insl
xlat
and
xchg
out
iret
popa
adc
hlt
mov
outsl
sarl
cmp
cmpsb
push
pop
lea
lods
jl
and
xchg
and
jnp
repz
mov
adc
int3
mov
cwtl
or
mov
pushf
add
mov
insl
js
stc
lods
out
in
mov
push
addr16
cmc
das
inc
mov
daa
lds
mov
sub
lock
push
loop
dec
in
push
mov
xchg
xor
je
inc
mov
push
cmpsl
xchg
and
and
dec
or
push
pop
dec
cmp
punpcklwd
je
mov
mov
push
into
mov
aam
sbb
jnp
rcrl
aad
je
test
and
push
adc
or
mov
sbb
fdivr
shl
jae
lods
mov
out
insb
movl
mov
ffreep
aas
shrl
pop
dec
push
aad
scas
sub
cmpsb
add
imul
fsubl
stos
hlt
cmp
test
out
mov
inc
fists
add
push
fsubrs
repnz
xlat
xchg
mov
xor
mov
test
cld
repnz
enter
mov
mov
fldcw
pop
dec
mov
sbb
jnp
inc
fwait
js
andb
xchg
xchg
aam
sbb
bound
ret
out
idivl
cmp
mov
push
fwait
xchg
xchg
mov
rcrb
and
pop
call
add
icebp
jmp
xchg
mov
mov
mov
aam
mov
adc
hlt
fdivrs
adc
and
js
sbb
push
pushl
hlt
add
pusha
push
in
mov
inc
insb
dec
ret
in
mov
jmp
cmpsl
dec
sbb
in
fwait
aam
jecxz
mov
in
mov
xchg
std
xor
stos
out
mov
mov
jp
inc
push
add
mulb
fdivrl
std
pop
cmp
or
repz
add
hlt
sub
xor
and
cwtl
jp
mov
in
cmp
push
xchg
sbb
scas
cmc
fdivr
leave
repz
jb
clc
in
cmpsb
outsb
sub
fcoml
xchg
ss
cltd
mov
cmp
cmp
adc
cmp
fstpt
jnp
cmp
mov
push
lock
mov
out
stc
inc
loop
test
xchg
cmp
sbb
cmp
test
je
sub
mov
mov
test
arpl
dec
int
pop
mov
push
dec
mov
xchg
cld
mov
ds
aam
jbe
or
adc
ss
int
repnz
ja
leave
clc
lods
mov
jno
cltd
xor
nop
mov
mov
sub
mov
stc
je
popf
jbe
or
cmp
lea
sub
sub
cli
pushf
xor
push
xlat
xchg
out
or
sub
add
mov
dec
arpl
sub
aam
add
out
lea
jae
xchg
push
xchg
scas
inc
addl
cli
jbe
in
sbb
stos
pop
insl
push
orb
jb
js
xchg
or
call
sahf
pop
aam
xchg
sub
cmp
pop
adc
out
mov
add
cmpsl
rolb
cli
sbb
push
inc
bnd
pop
loope
and
mov
push
jp
ljmp
jge
inc
inc
sub
pop
je
jmp
std
outsb
xchg
pop
movsl
in
mov
icebp
inc
loop
fldcw
and
nop
out
ficoms
fadd
pop
push
notb
mov
adc
cmp
dec
cmp
xchg
jecxz
pushf
add
mov
fdivrl
and
icebp
lock
dec
movsl
push
outsl
cmpsb
stos
jbe
xchg
pop
mov
or
push
cmp
nop
add
jge
jno
out
pop
jl
jnp
jno
in
sub
shrb
bsf
add
adc
mov
repnz
inc
cmp
add
addl
test
dec
mov
add
stos
scas
dec
push
outsl
inc
adc
jge
call
leave
pop
sub
cltd
retw
or
sbb
xor
std
or
insb
xor
sarb
xchg
shrb
lcall
add
pop
xor
repnz
in
aaa
push
movsb
xchg
jns
outsb
lock
dec
mov
adc
jle
js
sub
jns
jle
shl
scas
lret
lods
pop
jmp
mov
dec
ret
cmp
lahf
jge
ja
inc
push
loop
sarl
mov
das
fsubl
xchg
xchg
scas
mov
aaa
sar
lds
mov
je
pop
subb
sub
jg
and
stos
mov
xor
inc
xchg
cmp
call
push
mov
sbb
imul
leave
fistpl
pop
setne
push
std
cs
adc
fbld
jl
or
in
jp
xchg
dec
jecxz
xchg
dec
sub
imulb
movl
out
test
xchg
popf
insb
leave
inc
adc
and
cmp
out
dec
dec
test
fstpt
mov
cmp
negb
in
and
ds
jg
jae
fcmovnu
fiadds
xchg
cmp
xchg
and
sbb
jmp
push
xchg
push
adc
jle
mov
pop
sub
lret
adc
adc
addr16
hlt
and
and
xchg
pop
cmp
mov
jae
lock
xor
xor
loope
or
enter
sbb
jle
jmp
ret
and
jno
cmp
cmpsb
test
jnp
cltd
cmp
insb
outsb
adc
int3
jle
xchg
jl
push
scas
cwtl
dec
push
dec
cs
ss
testl
xor
loopne
fildll
arpl
dec
jecxz
dec
xor
repz
out
in
jge
fdivl
outsb
fimuls
imul
push
xchg
aaa
or
mov
mov
jae
add
lret
pop
sub
mov
aad
hlt
sub
shrb
int
mov
jnp
es
mov
movsb
mov
pop
mov
add
sbb
push
pop
test
inc
adc
test
leave
dec
dec
sbb
sbb
fcom
cmc
mov
sbb
leave
sbb
sbb
push
aad
repnz
jae
adcb
mov
ret
fimull
or
mov
shll
jmp
das
mov
bound
lret
mov
jo
into
mov
mov
sbb
xchg
out
adc
push
pop
or
movsb
shl
mov
xor
mov
sahf
lret
outsb
int3
scas
xorl
bound
ret
or
dec
data16
gs
leave
lret
aam
cwtl
sub
aaa
shrl
inc
cmp
push
arpl
mov
xor
jg
and
cli
cmp
and
dec
or
xlat
mov
fwait
insb
cmp
xchg
adc
popf
cmp
daa
and
jo
pushaw
out
pop
push
ret
mov
ja
mov
and
xchg
outsb
sub
hlt
push
clc
push
mov
sbb
adc
dec
cmpsb
ss
xchg
jb
fs
lods
xor
cmpsl
rcr
gs
movsb
pop
ljmp
xchg
add
push
dec
add
mov
pop
mov
insl
or
sti
mov
divb
xlat
cmpsl
pop
fwait
dec
and
jo
cmc
xchg
dec
push
mov
outsb
insl
xchg
jp
sahf
adc
jmp
cld
jle
rclb
into
jecxz
cmpsb
in
mov
shll
call
xchg
lret
or
les
xor
sub
push
sub
inc
lods
dec
dec
sub
clc
or
pushf
cmp
xor
lds
daa
stos
movups
pop
sbb
in
mov
call
add
inc
addb
fcmovnbe
pusha
push
xchg
and
imul
sub
lahf
mov
fdiv
add
jbe
scas
mov
pop
jns
push
jmp
mov
jmp
push
dec
adc
mov
mov
lods
mov
push
and
mov
push
jg
js
push
pushf
pop
out
lods
dec
mov
mov
aaa
jp
or
lcall
in
std
das
xchg
cwtl
sub
push
rclb
enter
xchg
test
mov
fsts
pop
push
xchg
xchg
popf
xchg
in
xchg
in
or
outsb
sbb
mov
out
xchg
ret
out
adc
outsb
adc
pop
mov
enter
in
xchg
pop
fcmovnb
sbb
jmp
xchg
jp
push
test
cmp
push
fbld
leave
leave
cmp
arpl
js
inc
faddl
sub
cmc
dec
jb
mov
rol
push
or
mov
dec
dec
daa
push
inc
jecxz
or
xchg
pop
faddl
cs
fwait
test
fisttps
mov
fsts
and
dec
lods
mov
insb
fs
sbb
test
push
push
inc
outsb
pushf
sub
jb
fisubrl
imul
loop
dec
sub
enter
lods
mov
sbb
sahf
fidivrl
cmpsl
mov
push
or
rcl
inc
or
push
xchg
sub
fildll
sub
popf
fistpl
lods
cli
push
pop
mov
out
out
insb
mov
xor
cmp
mov
shld
sbb
pop
mov
pop
stos
dec
clc
leave
mov
mov
aam
push
call
xchg
jbe
int
mov
pop
cltd
mov
mov
out
xor
pop
jnp
fwait
enter
aas
js
adc
aas
ss
insl
adc
or
inc
cwtl
xchg
insl
mov
aaa
mov
xchg
fnstsw
and
divl
dec
sbb
and
sub
loop
dec
clc
push
adc
stos
sbb
xor
add
adc
test
jle
sbb
outsb
and
nop
es
nop
cmp
pushf
fmuls
mov
inc
mov
arpl
repnz
sti
inc
cs
sub
ds
xchg
mov
pop
shrb
cli
xchg
jecxz
jmp
add
test
push
int
and
das
cmpsb
jbe
in
fimull
and
enter
cmpsb
jbe
je
rcl
clc
push
push
cmp
or
lods
lds
lret
mov
es
xchg
inc
out
int
movsl
mov
loop
push
jns
sbb
pop
xor
mov
lcall
out
mov
lods
fwait
push
jp
addr16
imul
jbe
and
lea
test
push
or
adc
inc
jo
ljmp
mov
lret
je
cmp
jbe
mov
push
jns
push
mov
cmc
vmread
outsl
dec
pop
js
lret
mov
and
xchg
adc
clc
xor
sbbb
pusha
fsubl
lods
ret
in
clc
les
sti
lgs
mov
mov
insl
shr
cmpsb
mov
aas
clc
dec
add
and
cmpsb
fistl
lahf
inc
test
push
sbb
sub
pop
fsubl
dec
xor
push
dec
add
xchg
push
xchg
imul
lods
inc
stos
scas
xor
cmpl
bswap
addl
sar
cs
repnz
clc
imul
cli
test
sub
sub
ret
fists
sub
mov
jp
sbb
cs
xlat
lcall
sbb
sti
jge
ljmp
add
dec
cmc
inc
add
int
or
jne
cld
arpl
xlat
test
movl
add
and
aad
sbb
int
pop
rcll
add
mov
cmp
inc
test
jne
sbb
in
les
push
xchg
je
dec
test
mov
sub
shrl
push
addr16
or
lret
jno
aam
sbb
stos
adc
mov
mov
and
mov
adc
pop
rorb
mulb
add
jnp
mov
xor
stos
cmp
jbe
xchg
pop
mov
xor
or
cmp
cltd
xchg
push
into
das
out
sbb
insb
adc
xchg
scas
shll
mov
xchg
repz
jg
or
jns
mov
push
inc
jmp
imulb
lcall
movsl
andb
cmc
fisttpl
cmp
les
cld
dec
shrd
shr
sbb
mov
mov
mov
orl
xor
xor
or
orl
shl
addl
lea
or
mov
cmpl
mov
mov
jmp
mov
movl
jl
pushl
pushl
push
push
call
sbb
movzbl
xor
mov
addl
sbbl
mov
sbbl
shrd
andl
shr
xor
mov
and
mov
mov
sbb
xor
movzbl
or
mov
mov
subl
xor
or
orl
shl
imul
mov
cmpl
mov
mov
movl
jmp
notl
jne
push
push
push
push
pushl
pushl
push
pushl
pushl
push
pushl
push
push
pushl
call
movl
or
and
sub
subl
sub
sbbl
mov
adcl
shrd
mov
mov
xor
decl
shr
cmpl
movl
movl
jmp
movl
movl
jl
pushl
push
push
call
adc
or
or
sbb
xor
neg
sbbl
mov
mov
sub
mov
mov
xor
or
negl
shl
xorl
sub
mov
movl
cmp
mov
mov
movl
jg
and
mov
mov
xorl
shrd
mov
xor
mov
xor
shl
xor
or
shr
cmpl
mov
movl
jmp
movl
movl
jb
push
push
pushl
push
call
neg
xorl
neg
xorl
inc
andl
adc
mov
addl
mov
cmpl
mov
mov
jmp
movl
jne
pushl
call
adc
sub
sub
and
sbb
mov
cmpl
mov
movl
jmp
movl
ja
pushl
push
call
sbbl
and
adc
mov
add
add
or
sbbl
adcl
mov
movl
shrd
shr
mov
mov
cmpl
mov
not
jmp
movl
movl
jl
call
dec
movzwl
sbb
and
xorl
movl
add
mov
xor
movl
xor
adcl
or
xorl
shl
subl
imul
adcl
sub
movl
jmp
movzwl
sbb
mov
mov
cmpl
movzwl
mov
movl
not
jmp
movl
movl
jg
push
push
push
pushl
pushl
push
push
push
pushl
call
adcl
sub
sbb
adcl
xorl
not
xor
xor
sub
mov
decl
shrd
mov
decl
mov
xor
xorl
shl
decl
xor
or
addl
shr
mov
mov
mov
and
mov
sbbl
shrd
sbbl
shr
decl
mov
cmpl
movl
not
jmp
mov
movl
je
push
call
and
adc
mov
sub
mov
movzbl
or
add
xor
xor
add
mov
sub
sub
mov
mov
xor
xor
orl
or
addl
shl
xor
add
add
mov
mov
xor
shrd
movzbl
sbb
shr
mov
mov
orl
xor
shl
xorl
xor
or
sbb
mov
xor
or
sub
mov
movl
sbb
mov
cmpl
not
mov
jmp
movl
movl
jbe
push
push
push
push
push
push
push
push
push
push
push
pushl
call
dec
movzbl
sbb
sub
and
mov
mov
sub
add
mov
movl
mov
mov
sbb
mov
xorl
jmp
pop
pop
iret
pop
cltd
sbb
dec
fldenv
push
pop
cwtl
lods
pop
adc
pop
adc
imull
into
mov
insl
or
mov
push
xor
mov
pop
mov
rcrb
jb
jg
insb
pop
mov
loopne
sbb
ds
in
roll
sbb
cld
push
cmp
jl
jo
pusha
lock
dec
stc
movsl
stos
jno
dec
in
sbb
ja
test
fbld
fcoms
push
imul
enter
fs
mov
dec
pop
stc
ret
mov
add
das
jne
das
dec
inc
xor
dec
lret
test
lock
sbb
jo
sbb
and
pop
mov
or
pop
jg
xor
add
jge
orb
cmp
adc
daa
sub
pop
dec
mov
scas
xor
ljmp
and
psubsw
fcmove
insb
lods
leave
cltd
adc
inc
test
xorb
mov
lcall
ret
aas
adcb
movb
or
jge
add
clc
mov
mov
dec
enter
and
or
push
jbe
cli
fldenv
mov
add
lcall
mov
mov
ret
test
lods
cmp
out
xchg
jo
dec
push
mov
andl
test
xchg
stos
mov
leave
xor
cwtl
sbb
divb
lods
popa
rolb
bound
loope
jne
loope
out
xor
les
lea
out
lahf
daa
dec
sub
pop
pop
xchg
mov
and
jl
pop
movsb
adc
xor
push
out
lcall
dec
les
sar
in
adc
mov
xchg
repnz
mov
scas
adc
es
icebp
mov
jns
pop
loope,pn
fdivr
adc
push
cmp
sarb
push
orb
and
insl
popa
inc
jecxz
jle
and
mov
lock
or
jp
adc
movsb
outsb
popa
mov
dec
lret
js
mov
sti
xor
movsb
lret
xchg
mov
leave
sbb
mov
ljmp
stos
xor
and
mov
and
sti
sub
pop
push
fwait
cmp
xchg
dec
fnstcw
stos
ds
xchg
std
or
sar
adc
fiaddl
fdiv
addl
cmpsb
fldl
push
push
std
lret
das
clc
mov
scas
mov
xor
fisttps
xchg
andl
in
hlt
out
clc
into
jmp
adc
cltd
xor
stc
popl
loope
xchg
and
push
adc
fimuls
jns
mov
aas
mov
stc
xchg
popf
push
mov
pop
outsl
push
fsubl
ljmp
adc
aas
dec
ljmp
xorb
inc
psllq
xor
pusha
push
jle
imul
mov
js
cmpsl
dec
call
and
popf
stc
xchg
pop
outsb
xor
xor
cmpsl
vmptrst
ror
or
add
xlat
xchg
mov
xchg
cmc
lds
movsl
into
ds
cmp
mov
sub
dec
clc
push
adc
sub
int
push
je
lea
aam
or
nop
mov
cld
jne
stos
add
nop
pop
repnz
rcr
jne
push
jmp
popa
ds
cs
jle
cmp
inc
test
jnp
je
sub
in
cmp
ret
repz
push
xor
scas
std
ficomps
pop
aas
cwtl
pop
fdivs
cwtl
push
repz
scas
and
aad
cmpsb
xor
and
mov
jg
push
adc
cmp
and
jecxz
pop
loope
outsb
xchg
icebp
lahf
inc
movsl
adcb
in
push
mov
mov
sub
cmc
mov
adc
sahf
cltd
pop
jmp
js
sbb
cmp
pusha
cmp
push
icebp
sub
fildl
inc
cwtl
or
cmpsb
push
xchg
adc
enter
clc
call
jl
mov
daa
ljmp
sub
or
lret
dec
push
out
push
pushf
mov
cmp
hlt
clc
popa
cmc
cwtl
cmpsb
xor
daa
sti
mov
cmp
push
imul
inc
xchg
in
xchg
mov
pushl
outsb
mov
dec
in
inc
outsb
dec
and
mov
push
pop
pop
jnp
mov
popf
mov
and
arpl
cmpb
adc
dec
or
sub
sbb
andl
inc
mov
outsl
mov
or
cltd
mov
cmpsl
mov
adc
xchg
imul
pop
fs
imul
fldcw
jmp
cli
adc
adc
imul
std
out
sub
and
sub
inc
mov
dec
adc
xlat
mov
or
stos
and
rcrl
jge
pop
pop
mov
mov
sahf
mov
dec
add
push
mov
cmc
sub
jp
lret
adc
adc
je
lcall
mov
mov
adc
leave
ljmp
mov
add
inc
mov
inc
push
dec
ljmp
into
add
push
sub
adc
ret
mov
daa
rclb
lahf
arpl
xchg
and
adc
daa
movb
daa
movsl
mov
pop
ss
cmc
dec
add
xchg
mov
xlat
popa
mov
mov
mov
ficoml
jnp
addr16
jmp
xor
insl
push
cmp
shufps
push
pop
lods
add
xor
dec
pop
sub
out
sar
leave
dec
mov
out
cmp
mov
jbe
sub
and
fs
outsl
scas
gs
xor
jl
dec
pop
jl
lds
mov
test
cmp
movsl
call
jnp
fldz
iret
lahf
jns
xchg
cmp
out
gs
cmp
sbb
outsb
xchg
cmp
adc
xchg
mov
xchg
iret
add
jbe
inc
test
pop
gs
push
cmp
or
dec
aas
xchg
xor
sti
mov
adc
and
push
ljmp
sahf
mov
das
cs
cmpsl
jmp
push
dec
jb
jl
mov
mov
dec
out
sub
es
mov
and
sti
test
ret
sti
cwtl
add
leave
andl
jg
notl
sbb
fisttps
jnp
cld
jg
aas
mov
push
inc
dec
into
std
fidivrl
in
mov
es
xchg
stc
stos
mov
xchg
sti
in
xchg
ficoml
mov
adc
pop
scas
es
call
pop
sbbl
dec
or
rorb
out
sub
lahf
aad
xchg
sbb
pop
inc
lcall
imul
loop
pop
gs
insb
mov
xchg
lcall
adc
xchg
jb
iret
fnstsw
jmp
push
pop
scas
or
out
cmp
push
stos
arpl
ret
push
mov
insl
pop
inc
jb
fldt
jge
mov
pusha
sub
pop
decb
rcrb
push
stos
push
icebp
jbe
repnz
stc
fwait
push
or
popa
jmp
xchg
in
jb
push
sbb
cltd
shlb
cmp
lods
divb
mov
xchg
vmovaps
lret
call
xchg
int3
dec
cmp
sar
ja
lock
mov
leave
mov
jae
mov
jb
xorl
xchg
push
jo
pop
aad
pop
push
mov
out
into
int
mov
sbb
out
mov
aad
jecxz
adc
pop
push
aas
fcomip
jle
mov
and
cmp
add
out
test
sub
clc
pop
or
mov
push
adc
pop
mov
sub
xor
divb
stos
subl
cmp
push
fildll
dec
fdivs
xor
pop
inc
cmp
xor
cmp
mov
xchg
push
cmp
ret
sbb
xchg
test
adc
lea
popa
in
popf
and
fwait
mov
dec
mov
mov
adc
and
sbb
sti
or
pop
push
rorl
jp
lret
out
jo
inc
pop
sbb
jb
rorb
addr16
inc
mov
daa
jne
in
adc
inc
popa
je
movsb
jnp
sarb
mov
je
xchg
lods
repnz
clc
jg
mov
sbb
cmpl
ret
add
int3
dec
fnstsw
out
imul
push
fistpl
push
test
cltd
jnp
in
test
mov
jb
fiaddl
dec
sarb
sub
inc
ja
cmpsl
cmp
mov
or
aad
mov
cmp
mov
cmp
aaa
call
sub
jecxz
lds
mov
ret
fdivs
push
add
adc
fsubrs
adc
scas
jnp
jb
mov
mov
adc
jp
sub
xchg
jne
dec
sub
inc
fs
int
adc
sub
push
leave
adc
cmp
push
fcoms
inc
dec
bound
xchg
stos
cltd
je
inc
xor
ret
imul
pop
push
push
mulb
push
mov
dec
push
daa
insl
fstpt
xor
lock
pushf
fsubr
dec
inc
mov
sub
cmpb
leave
cmp
divl
ret
dec
shrb
pop
pop
stos
stos
data16
ja
and
jne
inc
je
testb
add
clc
test
dec
mov
fidivl
jmp
imul
fxch
pop
push
pop
push
jno
aaa
cmp
scas
mov
flds
push
jp
dec
fdivs
ss
pop
lahf
jo
int3
fwait
pusha
jg
jl
dec
mov
dec
scas
mov
sarl
je
jnp
iret
outsl
ret
imul
insl
fnstcw
in
mov
int3
scas
mov
popa
jo
xchg
cltd
bound
xchg
mov
sub
jnp
adc
iret
and
mov
fstpt
sub
push
movl
adc
mov
popa
or
mov
outsb
pop
mov
scas
int
add
or
push
lods
loope
inc
cmp
pop
pop
loopne
inc
mov
out
mov
stos
or
mov
outsl
jnp
jbe
pop
cmp
inc
pop
xor
ja
outsb
scas
mov
push
xor
inc
jnp
icebp
ds
xchg
pop
or
je
mov
dec
add
outsl
push
xor
jno
in
fsubrp
enter
data16
dec
call
popa
jb
in
fdivrs
lds
ljmp
bound
ret
mov
pushf
lods
lock
into
loopne
lret
xor
pop
pop
aaa
jmp
sarb
call
sub
mov
pop
int
es
sbb
dec
into
jae
stos
stos
cmp
mov
or
xor
stc
jno
cmp
mov
pop
mov
push
xchg
adc
rcll
xor
adc
pop
test
push
inc
or
add
mov
das
mov
hlt
or
jno
xchg
shll
mov
dec
popa
push
shrl
iret
add
and
lods
fdivs
test
adcb
lea
outsb
sub
or
loopne
xchg
mov
mov
enter
mov
fwait
sub
cmp
stos
mov
add
push
out
xlat
add
mov
dec
lds
cmp
aaa
fadds
rcl
shll
scas
sti
movsl
je
ljmp
sbbl
mov
hlt
jbe
bound
add
push
sbb
adc
lock
dec
cs
iret
cs
adc
out
inc
in
repnz
and
adcb
in
cmpb
ljmp
sub
out
outsb
xchg
in
cs
jmp
jne
sar
add
add
or
popf
clc
addl
push
mov
fidivl
xor
cmp
aaa
or
movsl
or
cltd
cwtl
adc
jbe
push
aad
stos
ss
mov
cltd
inc
out
mov
xchg
jg
stos
clc
sbb
aas
int3
jae
int
inc
dec
or
pusha
les
add
fbld
sub
fimuls
add
jl
inc
push
mov
xchg
fimull
mov
loope
mov
or
enter
cwtl
gs
push
push
test
arpl
mov
divl
push
mov
in
jecxz
loop
mov
mov
imul
push
adc
adc
int3
sbb
push
pop
push
je
xor
cwtl
adc
fistl
out
arpl
add
fwait
movsb
jnp
out
inc
pop
pop
pop
mov
shlb
inc
push
xlat
xchg
jmp
push
xor
andb
or
cmp
xchg
fwait
icebp
mov
bound
push
aam
jnp
and
les
pop
das
xor
sbb
inc
xorb
call
mov
dec
sbb
jo
or
in
faddl
sub
daa
cs
cli
lock
xchg
rcrb
in
sar
and
xchg
mov
rcl
ror
xor
cli
loop
mov
adc
scas
mov
fwait
lods
mov
call
add
shlb
mov
dec
loope
xchg
dec
aaa
flds
popa
aad
add
xor
jmp
mov
fidivl
repnz
dec
jae
add
rcrb
cmp
xor
sti
ljmp
push
sub
ret
stc
out
push
fwait
xchg
xor
jle
adc
shlb
jecxz
jo
fs
sub
outsb
jnp
sub
sbb
sbb
sbb
sub
pop
out
sbb
push
or
shlb
loopne
pusha
fimull
push
cmpl
int3
cmpl
ret
stos
ljmp
pusha
sahf
sbb
mov
movl
sti
cmp
xchg
push
and
pop
mov
pop
jno
int
mov
xchg
sub
daa
test
inc
mov
fdecstp
cmpsl
adc
aas
sbb
xor
bound
popa
or
mov
push
fdivr
mov
das
cld
jo
sarb
push
les
or
push
sbb
aad
repz
xor
gs
xcrypt-cbc
cmpsl
ror
push
mov
je
cltd
ret
mov
mov
les
jp
in
or
cwtl
mov
ds
into
scas
imul
scas
dec
or
push
test
les
xchg
inc
jg
jp
aam
lods
mov
push
rcll
es
iret
int
ret
adc
fbld
je
fwait
xchg
es
inc
cmc
loope
sbb
and
add
test
mov
scas
pop
aas
mov
nop
scas
push
movsb
mov
add
adc
leave
jl
sub
fldenv
or
push
stos
mov
jle
jecxz
mov
outsl
scas
xor
push
xchg
mov
clc
lods
mov
pop
es
push
pop
mov
or
jnp
es
xchg
mov
cmp
psrlq
push
add
fsubr
loopne
mov
scas
push
lds
pop
mov
rorb
sub
push
lock
pop
adc
insl
stos
je
push
inc
ret
lahf
xchg
mov
xor
adc
imul
idivl
ja
sbb
cld
popa
jb
xchg
push
into
lods
mov
push
add
sbb
in
bound
or
inc
iret
xchg
xor
jo
nop
loop
stos
fisttps
notb
and
dec
es
sub
std
jo
test
inc
and
add
mov
xchg
mov
sub
inc
je,pt
push
sub
movsl
out
or
inc
js
dec
push
int3
inc
add
cvtdq2ps
xlat
xchg
jge
mov
sarl
inc
daa
sbb
add
xor
mov
inc
mov
sub
cmp
out
pop
jbe
cld
sub
add
es
push
xor
daa
iret
dec
negb
fs
jne
icebp
hlt
xchg
call
sub
leave
cmpsb
lods
fimuls
clc
mov
outsl
cltd
out
pop
das
mov
mov
mov
out
push
dec
fdivp
jl
dec
insl
insl
jae
int3
aas
mov
and
mov
mov
divl
cmp
fisubs
daa
add
inc
int
roll
sub
mov
mov
cmp
jmp
ljmp
mov
and
mov
push
cwtl
jne
fs
popa
sarb
dec
sbb
inc
call
fdivrl
aam
aam
sbb
push
cltd
lcall
inc
lea
push
jae
fisubrs
nop
imul
adc
pop
push
push
out
dec
xor
push
lcall
repnz
mov
out
fadds
pop
andb
jb
mov
pop
jnp
mov
push
cmpsb
or
fdivrl
mov
inc
mov
stos
add
shl
and
inc
push
je
in
fs
and
ds
je
adc
negb
jmp
fldt
dec
mov
pop
push
cmp
adc
sub
test
fidivs
xor
jnp
movsb
xchg
xor
inc
push
scas
inc
jo
xchg
gs
xor
sahf
mov
dec
pop
cs
mov
and
dec
out
add
int3
xor
or
lods
mov
mov
arpl
cld
push
jb
xchg
scas
dec
roll
das
add
imul
sti
xor
pop
call
cmp
dec
xchg
cmpsb
pop
mov
xchg
inc
mov
shll
pusha
lahf
xor
popf
lret
mov
mov
pop
inc
mov
negb
pop
ljmp
sti
pop
pop
sub
loope
mov
mov
mov
icebp
in
push
in
xchg
hlt
sbb
test
mov
jno
xchg
jnp
xchg
mov
xor
push
test
push
mov
xchg
or
jle
lea
cld
mov
xor
out
jae
pop
movsb
and
pop
pop
ret
into
inc
mov
orl
sub
out
hlt
sbb
inc
mov
jb
jl
or
loop
cmc
nop
add
add
mov
lret
ja
icebp
mov
testl
cmp
cltd
add
jne
sahf
jae
imul
inc
icebp
movsb
mov
bound
mov
jg
arpl
cmpl
xchg
xchg
sub
outsl
mov
xchg
mov
inc
lods
mov
xchg
push
int3
and
sbb
sub
repnz
add
aam
xchg
xchg
lea
cmp
xchg
xchg
in
inc
mov
aas
repnz
mov
mov
cmp
cs
fiadds
lret
push
push
sbb
aam
push
and
test
test
push
xchg
rolb
ds
mov
test
ja
fcmove
outsb
pop
inc
outsl
adc
push
xchg
sbb
mov
push
xor
push
loop
mov
fdivrl
imulb
mov
jecxz
pop
fimuls
rorb
testb
pop
call
sbb
inc
popa
mov
out
inc
mov
sbb
popa
aas
mov
xor
xor
adc
inc
mov
jnp
xchg
xor
xlat
dec
lods
cli
ret
hlt
outsl
int
pop
add
xor
fsubrl
nop
mov
std
jl
fiadds
pop
xor
adc
popa
mov
push
mov
sbb
mov
adc
mov
in
and
sub
inc
cmp
cltd
repnz
jge
out
in
stos
test
into
xorl
sub
adc
popa
out
jae
repnz
add
repnz
xor
fldl
jo
push
dec
movsb
push
sub
mov
mov
std
jbe
sub
mov
xor
das
add
int3
xlat
std
dec
jecxz
jno
lahf
mov
jbe
xchg
jno
test
pcmpgtb
xchg
jle
xchg
adc
sub
rclb
pop
movsl
dec
mov
add
mov
push
loope
adc
int
pop
movsb
int
inc
aas
dec
ffreep
cmp
mov
dec
mov
mov
cmpsl
cmpl
jae
dec
test
gs
jle
shll
rcll
filds
push
add
pop
xchg
orb
div
pop
cmp
std
xchg
inc
mov
push
push
push
cmp
hlt
jns
mov
jno
inc
cmc
icebp
rolb
jecxz
je
out
jbe
idivl
stos
and
sarl
scas
jb
je
lds
lret
sbbl
fnstsw
add
push
xor
pop
push
add
mov
scas
ficoms
test
imul
inc
insb
sbbl
shlb
stos
xor
pop
push
clc
or
imul
shll
mov
imul
stc
ret
hlt
xor
test
xchg
je
mov
ja
dec
push
pop
orb
jae
add
mov
in
test
jae
out
outsb
imul
sbb
je
mov
cltd
les
insl
sub
jne
popa
and
pop
je
add
xor
pop
frstor
popf
cmp
sbb
xchg
xor
sub
cmp
dec
mov
cmp
aaa
nop
sbb
sub
push
sbb
ja
lods
push
pusha
daa
scas
fnstcw
xor
sub
out
mov
incb
cmp
pop
jmp
in
rcrl
mov
ret
leave
in
or
data16
in
jge
loopne
lea
out
adc
scas
cmp
push
mov
push
mov
xchg
sub
inc
imul
jno
push
dec
xchg
aas
mov
jns
and
xor
xlat
xchg
insb
add
stos
push
cs
insb
sti
sbb
lret
or
addr16
pop
cli
dec
push
mov
add
aam
lgs
fisttpl
mov
or
cli
or
mov
jmp
iret
stos
dec
jle
ljmp
sub
jne
pop
xor
hlt
sahf
aas
ds
pop
xchg
test
outsb
and
xor
pop
dec
add
mov
adc
shl
push
lret
loopne
aam
xchg
or
pusha
add
shrl
xchg
xor
sub
leave
aas
cmc
mov
add
leave
and
mov
mov
adc
ret
pop
jno
jg
js
mov
mov
xchg
cmp
lock
sub
sub
pushf
aaa
pop
push
aas
sbb
sub
sti
sub
in
jmp
xor
bound
roll
ja
stos
cmc
ror
and
js
and
testb
lds
pop
sbb
add
in
push
mov
rcrl
daa
loop
sbb
stos
push
lea
and
fildl
pop
mov
in
push
xor
sbb
jl
loope
lock
push
mov
sbb
popa
imul
add
xor
and
out
sbb
add
fsub
mov
and
inc
sbb
stc
leave
out
xor
lock
push
lods
adc
fwait
mov
dec
shlb
ror
xor
leave
mov
push
call
divl
pop
mov
lret
and
stos
xchg
jno
mov
int
mov
dec
push
fstpt
mov
mov
inc
push
leave
icebp
xchg
xor
cmp
gs
push
outsb
stos
sub
cltd
nop
xchg
loop
int
push
lds
icebp
jne
in
cs
pop
xchg
or
dec
flds
adc
mov
sbb
push
pusha
jg
nop
jbe
jmp
mov
adc
xlat
divl
aaa
lahf
cmp
xor
xor
hlt
push
jge
leave
lods
cmp
sbb
add
js
sarl
push
outsb
ljmp
pusha
or
lods
nop
sbb
push
std
into
daa
xor
aam
lcall
sub
push
adc
out
xor
mov
repnz
push
scas
lds
jecxz
cmp
repz
and
adc
inc
xor
mov
push
xchg
dec
sarb
inc
leave
ret
loope
mov
jp
pusha
sub
xchg
inc
int3
cli
jb
outsb
fcmovbe
push
mov
cs
mov
call
iret
push
mov
imul
cmp
out
test
data16
push
popa
loope
aam
and
push
loop
add
hlt
insl
dec
jmp
push
lea
in
shr
and
pusha
sbb
mov
mov
sub
pop
jns
lds
roll
faddp
movsl
dec
scas
ud0
add
mov
int
sbb
add
sbb
pop
jecxz
test
sbb
stc
ret
inc
aas
push
xor
add
repnz
movsl
cmpsb
int
fs
add
xchg
sbbl
test
or
cli
dec
stos
fisttpll
mov
testb
or
sbb
iret
jnp
dec
xor
sub
dec
xchg
sbb
scas
loope,pt
fidivl
cmp
jb
or
mov
imul
sub
cs
es
inc
xchg
pop
fmuls
shlb
aas
dec
pop
mov
ds
daa
pop
sub
cmc
jecxz
push
mov
and
push
scas
jge
xchg
lahf
in
sbb
push
enter
add
rcrb
sahf
inc
cmp
cmp
xchg
pop
outsl
les
adc
jp
adc
cmp
stos
scas
push
lahf
lods
mov
mov
pusha
inc
fsub
mov
pop
jecxz
add
les
les
cli
rclb
ds
adc
push
sub
fidivrl
add
xchg
loop
lea
cmp
push
jle
push
pop
push
mov
nop
rcr
pop
dec
testl
or
adc
in
cmp
dec
xchg
loope
dec
aam
fistpl
mov
stc
mov
aad
push
out
rcrl
or
lock
pop
lea
fs
cmc
adc
faddp
clc
lds
sub
in
data16
jne
or
dec
pop
fcompl
icebp
ja
xor
out
lods
push
les
lret
sub
push
rcrl
push
scas
gs
arpl
mov
negb
and
xlat
sub
jge
and
sub
push
icebp
insb
ficoms
mov
test
das
mov
iret
cmp
dec
fucomi
push
in
mov
pop
shrl
negl
fistps
pop
icebp
icebp
sahf
fistl
jnp
and
cmc
xor
inc
and
push
loope
xor
xor
pop
mov
pop
loopne
dec
add
xor
jnp
dec
ss
cltd
rclb
jmp
rol
sub
sbb
mov
xchg
sub
adc
push
or
cltd
and
lcall
adc
stos
inc
and
xchg
xor
addl
lods
fdivrs
jno
add
pop
das
mov
jno
adc
sub
imul
mov
dec
loopne
cli
add
pop
pop
cmpsl
lret
jo,pn
es
movzbl
mov
ss
xchg
int3
mov
cmpsb
hlt
bound
es
push
sub
or
xchg
xchg
insb
adc
gs
pop
pop
xchg
sbb
aad
cwtl
mov
jg
leave
out
adc
push
push
xor
mov
into
enter
popf
or
mov
or
jl
sbb
push
mov
fcmovnb
xchg
add
addr16
add
loope
les
jo
adc
xchg
arpl
pop
mov
jno
and
or
xchg
dec
pop
and
fisttpl
push
cmpsl
mov
js
sub
pop
loopne
and
mov
loop
ret
and
cmp
xchg
pop
rolb
psrlw
sbb
mov
push
inc
repz
xchg
and
stc
xchg
cltd
pop
vaddsd
jb
stos
fwait
mov
dec
outsb
adc
scas
movsb
jb
xchg
stos
imul
cmpsw
sub
cmpsb
adc
js
pop
mov
sub
pop
cs
ljmp
and
xchg
jp
mov
out
int
cltd
cltd
add
sub
pop
cwtl
inc
jne
inc
xchg
into
jle
pop
hlt
push
mov
popa
mov
lcall
pop
repnz
or
mov
stos
dec
sbb
stos
dec
cli
fsubrs
mov
jecxz
jl
imul
jmp
xor
pushf
leave
push
lahf
aaa
imul
jmp
shr
xchg
mov
and
fstl
push
inc
test
push
lahf
shrl
shll
cmc
je
xchg
fdivr
loopne
adc
sbb
jl
xor
ds
xchg
push
pop
push
int3
cwtl
xchg
shr
imul
int
lods
frstor
loope
addl
inc
repz
sahf
xchg
or
cli
inc
sub
dec
test
sbb
es
mov
inc
imul
add
sub
push
cmp
sarl
inc
stos
jp
ret
lock
sbb
cs
cmpl
mov
add
xor
sub
notb
in
pusha
jns
jp
sti
ja
addr16
icebp
mov
pop
xor
les
mov
lock
push
fistpl
loope
dec
cs
dec
mov
inc
jnp
lret
and
lret
adc
push
jp
pop
outsl
movsl
inc
insb
imul
test
lcall
xchg
adc
jle
jnp
outsb
dec
inc
push
imul
sarl
pop
pushf
jae
adc
dec
cmpsb
cwtd
mov
mov
xor
call
jae
push
xchg
orl
inc
shl
adc
frstor
flds
ds
lcall
xchg
mov
movsl
imul
inc
add
not
mov
mov
jmp
movl
movl
ja
pushl
call
or
adc
xor
mov
xor
or
sub
xor
xorl
xor
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
jmp
push
shl
dec
jne
sub
lods
push
sub
xchg
adc
pop
adc
icebp
jle
pop
pop
sub
stc
inc
mov
data16
push
out
push
xchg
daa
add
popf
pop
icebp
mov
mov
sbb
mov
inc
mov
sub
jecxz
push
jmp
push
mov
rorb
inc
imul
and
nop
je
mov
sti
lea
dec
push
cmp
push
mov
stos
pop
std
mov
fdivp
xor
mov
lcall
outsb
stc
out
cmpsb
movsb
notl
incl
fstps
sti
add
into
xchg
mov
mov
repnz
dec
sbb
popa
push
inc
sti
test
repz
incl
inc
sbb
imull
pop
loopne
mov
xchg
and
jmp
imulb
stos
adc
and
iret
cmc
push
adc
orl
sub
and
jl
or
dec
out
icebp
add
das
gs
or
je
jno
jp
pusha
int3
jle
push
cltd
pop
jae
hlt
sbb
fwait
int
sbb
out
and
movsl
add
mov
adc
pop
ret
jo
mov
cld
popl
sbb
insb
cmp
icebp
xchg
fisttpll
xor
out
jp
xchg
cmpsl
adc
pop
nop
adc
cmp
ljmp
pusha
push
sub
jne
xchg
adc
ds
adc
ljmp
mov
leave
shrb
ds
xchg
mov
sbb
dec
outsb
cli
add
loop
and
add
in
int3
pusha
fs
fidivl
ss
mov
cltd
adc
jnp
shll
or
lcall
dec
jmp
imul
stos
les
sbb
std
mov
cli
sbb
imul
push
sbb
pop
fists
dec
sbb
repnz
push
mov
pusha
sub
scas
inc
mov
push
cmp
lret
mov
jge
loop
dec
pop
or
jns
fwait
and
mov
xchg
cmpl
cmp
or
push
add
xorl
push
jge
mov
jns
dec
xor
cmpsl
add
sub
stos
dec
int
push
xchg
mov
xchg
fiaddl
cwtl
int3
xchg
cli
and
and
lock
pop
les
lahf
sar
popfw
icebp
xor
mov
lock
and
push
xchg
lret
addr16
lea
xchg
arpl
out
lret
mov
js
xlat
aam
add
fisttpl
mov
mov
insl
std
cmp
xchg
mov
inc
loop
push
lcall
outsl
sub
mov
dec
pop
inc
mov
adc
mov
fwait
or
stos
push
adc
addb
addr16
dec
adc
sub
and
fsubs
lods
cmp
adc
or
ror
mov
lret
adc
pop
push
lret
ljmp
adc
mov
ss
loop
cmc
pop
imul
loop,pt
and
sbb
xchg
ss
mov
xchg
movsl
dec
rclb
xor
cmp
mov
test
or
pop
adc
out
popf
mov
and
mov
lods
sbb
lods
aad
fwait
orb
out
pusha
sub
pop
lds
pusha
jbe
dec
xor
and
insb
movl
mov
jne
sub
jae
mov
xchg
aad
cmp
add
test
std
jnp
in
repz
out
je
fdivrl
jbe
pop
mov
push
lds
pop
jmp
pop
gs
or
in
stc
adc
pop
dec
adcl
pop
mov
xchg
lcall
push
mov
dec
xor
sub
pop
sti
push
adc
je
xor
imul
adc
into
jp
enter
mov
pop
aas
outsl
inc
cltd
je
test
popf
cmp
jae
ljmp
cld
or
lcall
nop
jmp
inc
or
dec
cmp
outsb
stos
icebp
push
stos
dec
lods
outsl
xor
test
pop
mov
inc
pop
pop
insl
fistpl
scas
adcl
loop
xor
subb
sarl
mov
jbe
loop
das
cld
xchg
mov
adc
ds
daa
mov
mov
sub
or
lods
imul
hlt
cmp
mov
movsb
dec
outsb
fwait
mov
cmp
addb
pop
sti
clc
mov
mov
add
jno
or
loop
mov
jg
imul
in
int
mov
pop
repnz
repz
jmp
xchg
loope
bound
add
icebp
pop
xor
mov
sarb
jle
and
cld
sbb
jno
inc
dec
lret
ss
sbb
jg
xor
xchg
jnp
sbb
mov
mov
cmpsl
pop
push
adc
sarb
add
movsl
nop
xchg
outsb
test
inc
adc
aaa
fiadds
int3
out
int3
and
cmpsl
mov
push
call
mov
add
jae
loopne
push
add
into
mov
fidivl
add
out
sub
and
out
jl
dec
je
ficoml
xchg
icebp
jl
scas
pop
xor
ret
int
repnz
pop
imul
push
mov
sbb
cmovo
inc
call
jecxz
jmp
and
jp
sbb
sub
sub
dec
adc
push
mov
movq
js
std
lret
lock
and
out
pop
xchg
inc
sbb
xchg
pop
aaa
mov
adc
fwait
mov
and
cli
mov
leave
dec
pop
or
xor
xchg
or
add
xor
mov
es
ss
sub
mov
test
call
cmp
scas
jo
fcmovnb
fmul
insb
leave
cli
xchg
or
test
int
inc
cmp
pop
aaa
mov
in
cmp
fs
aam
mov
cmp
xlat
rol
add
rolb
xor
mov
or
or
inc
jno
ljmp
and
and
hlt
scas
lret
jne
jge
jo
jne
xchg
jle
mov
fbld
and
out
arpl
incb
mov
inc
pushf
adc
mov
push
fisubrl
mov
clc
inc
bound
pop
jno
adc
xor
jne
dec
mov
cmp
xchg
rcrl
std
cmp
add
test
jnp
or
pop
xchg
mov
jg
ret
fwait
cmp
aaa
mov
popl
in
push
notb
sub
clc
xor
lods
cmpsl
sbb
fbld
subb
les
daa
shufps
jl
push
cmp
lret
out
pop
rcll
mov
nop
test
jns
sub
les
repnz
or
shrl
mov
inc
xchg
xchg
in
jl
or
stc
pop
imul
out
mov
test
pop
jg
mov
fwait
push
notl
mov
dec
push
mov
push
out
pop
mov
push
push
cmpsb
xchg
adc
xor
bound
cli
or
mov
cmp
int3
mov
test
lret
cltd
cmp
or
jmp
push
adc
nop
inc
loop
cld
scas
sub
add
ret
loope
push
enter
jne
mov
shll
pushf
adc
mov
push
insb
popf
and
andl
jbe
outsl
adc
mov
push
fdivr
sub
mov
pop
inc
rcrl
xchg
pop
add
xchg
data16
ljmp
mov
arpl
fisttps
int3
push
hlt
or
mov
daa
arpl
dec
shl
jecxz
mov
les
insb
adc
pop
mov
and
inc
xchg
adc
push
cli
pop
into
cmpsb
pop
in
in
in
cmp
pop
or
mov
aaa
pushf
fsubrs
sbb
ja
inc
push
and
in
lret
lahf
cwtl
pop
fidivrs
add
lods
pushf
lret
roll
push
mov
test
push
outsb
jb
pop
and
loopne
lret
xor
call
mov
lods
popa
sbb
into
out
scas
add
imul
cmpsb
into
je
jne
xchg
repnz
lds
icebp
adc
insb
mov
int3
mov
sarb
sbb
xor
imul
pop
add
cmc
jecxz
adc
cmc
mov
xchg
lea
das
sub
insl
imul
sarb
jmp
mov
lea
cmp
or
and
ds
rcr
dec
mov
push
or
imul
mov
dec
pop
xchg
stc
sub
loop
add
pop
sub
pushf
insb
sub
inc
xor
fnstsw
bound
and
repz
shll
pop
mov
inc
add
ljmp
mov
inc
xchg
xor
jns
sub
or
in
iret
mov
mov
daa
in
fs
dec
or
xchg
ljmp
pop
or
movsb
dec
ficomps
xchg
adc
arpl
mov
leave
mov
add
pop
stos
shlb
jle
xchg
sbb
pushf
outsb
jmp
pop
inc
leave
test
cmp
cmpb
jo
scas
fwait
jl
daa
popa
jmp
mov
mov
xor
ljmp
xchg
xchg
jo
out
movsl
imul
sub
pop
jo
vpinsrw
pop
cmp
enter
xchg
xchg
cld
out
cltd
push
push
pusha
rcll
cltd
dec
adc
and
xchg
mov
fbstp
mov
mov
cs
lcall
mov
jae
cmpsl
aas
cmp
xor
imul
sbb
adc
mov
add
sub
outsb
movsl
ret
cmp
gs
and
jp
stc
sub
adc
jnp
mov
repz
addr16
nop
nop
push
mov
movsb
mov
push
sbb
sub
lea
mov
mov
sub
or
js
lods
mov
aam
fistl
jo
movzwl
mov
cmp
jo
aas
test
inc
pop
fidivrs
mov
ret
enter
xchg
js
in
addr16
pop
fildll
xchg
lea
push
cmp
mov
ja
inc
push
or
popa
push
lock
push
mov
std
sbb
lcall
rorl
xchg
outsb
pop
inc
test
push
mov
add
arpl
jg
imul
mov
jg
sbb
sub
xor
call
lods
int3
pushf
inc
jb
rcrl
fbstp
mov
stos
clc
and
scas
push
or
add
outsb
or
aaa
cli
ret
sbb
daa
add
shr
add
scas
scas
inc
adc
dec
loop
jg
xchg
mov
fs
sub
pop
mov
aad
rorl
out
mov
dec
push
push
mov
mov
pop
push
bound
ja
das
push
lea
ds
mov
ja
jnp
pop
mov
xor
sub
mulb
scas
mov
push
rclb
jle
jle
movsl
cld
xchg
xlat
cmp
ret
xchg
scas
std
test
aam
inc
sbb
movsb
add
push
sbb
divb
jo
sub
data16
push
cld
stos
test
scas
adc
jl
rcrl
and
leave
mov
adc
xchg
dec
xor
xchg
xlat
mov
inc
cmp
aad
into
lret
cmp
jecxz
ljmp
icebp
je
into
cld
nop
into
sub
pop
mov
xchg
pop
fwait
repz
loopne
les
jle
xlat
aas
xchg
pop
mov
pop
jge
xchg
dec
and
ljmp
or
in
push
xor
into
out
out
in
outsb
pop
jg
mov
mov
js
lret
adc
cli
cmp
pop
xchg
push
push
sbbl
mov
insb
negb
mov
add
mov
xchg
sub
cld
stos
fwait
popf
sbb
adc
and
paddd
cmpb
inc
int
cmpsb
jo
pusha
fwait
sbb
mov
and
ja
or
mov
push
xor
in
addl
negl
imulb
aad
bound
dec
push
or
jle
jecxz
decl
mov
add
data16
loopne
xchg
and
lods
daa
imull
insb
pop
pop
stos
cli
push
out
pop
xchg
ss
dec
add
fiadds
xor
xor
xor
and
mov
cmpb
lods
nop
jb
jnp
scas
jne
stc
ss
dec
mov
push
jg
rcll
pop
adc
pusha
mov
aaa
xor
push
in
cs
cmp
sar
aaa
pusha
fwait
mov
jno
add
dec
pop
pop
in
pop
movsb
testb
lcall
aam
repz
ljmp
and
insl
xchg
add
mov
mov
pop
xchg
outsb
js
cld
dec
test
movsl
push
addr16
sub
shl
cld
aam
cmc
loop
mov
pop
cmp
cltd
sub
inc
jae
jnp
mov
or
xor
rolb
jne
xchg
dec
icebp
out
cli
sbbb
adc
cltd
rorl
in
loopne
repz
add
mov
mov
fwait
scas
in
xor
mov
insb
sbb
or
dec
jo
xchg
push
add
into
scas
lock
cmp
mov
std
ret
mov
in
js
in
cld
fcomps
and
sub
pushw
dec
xchg
xlat
push
xchg
in
test
outsb
add
repnz
jbe
out
loopne
cmp
lock
pop
mov
or
and
fs
lcall
push
loop
fs
xchg
ret
pop
in
bound
leave
gs
cld
mov
adc
mov
shrl
mov
notl
gs
std
fsubs
pop
inc
bswap
lahf
insl
push
or
sub
xchg
jmp
cmp
data16
arpl
mov
leave
or
stos
push
mov
add
rcll
or
sbb
addr16
mov
adcl
xor
scas
mov
movsb
into
fstl
je
and
add
das
call
jae
insl
cmp
jb
clc
pushf
add
push
inc
loopne
loope
or
pop
sahf
les
fistl
dec
cmp
pushf
inc
sub
fstpl
sub
shr
int3
ret
ss
sti
and
push
imul
mov
and
cmp
xchg
pop
shll
dec
cli
inc
rcrl
push
stos
daa
fwait
xchg
bound
inc
mov
rcrb
mov
mov
in
lock
xchg
dec
aaa
in
push
mov
cltd
ret
ss
in
jp
or
sub
inc
cmp
cmp
leave
arpl
sub
outsb
xorl
mov
scas
sub
ds
imul
stos
push
mov
xor
lcall
mov
pop
push
adc
mov
push
fs
lods
jo
int
insl
cwtl
adc
ss
lea
mov
add
filds
jge
repz
add
aas
ret
push
sbb
mov
loope
xor
fptan
mov
stos
hlt
dec
andb
in
insb
call
add
mov
xchg
lret
loope
jl
add
xchg
lahf
fdivrs
leave
scas
pop
jl
decl
dec
mov
xchg
lcall
repz
in
mov
outsb
addl
xlat
inc
or
ds
sub
lret
jmp
push
filds
insl
fwait
or
loop
sub
adc
jno
repz
cltd
push
mov
ds
push
pop
fists
idivl
js
call
push
sti
repz
call
test
inc
dec
jb
stos
testl
xchg
ljmp
fwait
dec
mov
push
pop
punpckhdq
in
es
jnp
cmp
enter
std
cld
in
xchg
lcall
mov
or
pop
jno
outsl
mov
xor
dec
rol
mov
mov
ja
xchg
test
adc
jmp
pop
rol
je
dec
adc
xchg
jbe
fisubrl
mov
scas
jmp
addr16
repz
mov
movzbl
repnz
scas
fmuls
sti
stc
ret
sbb
test
inc
rcrl
enter
jb
sub
clts
sub
jecxz
fidivs
aas
and
fisubrs
outsb
mov
cltd
push
call
aam
adc
aam
and
adc
push
rcll
bound
mov
push
cltd
xor
aad
push
push
cwtl
cs
inc
in
fwait
pop
pop
and
mov
pop
cli
lock
sub
xor
pop
jae
out
flds
xlat
push
cmp
fistl
dec
sbb
xchg
push
jo
mov
pop
int
test
cld
add
sbb
sub
shll
notb
in
into
test
sub
aam
leave
or
adc
xchg
sub
xchg
sahf
cltd
mov
sbb
jmp
int
scas
add
and
sub
jns
nop
data16
cmc
fidivrs
mov
cmpsb
js
dec
xchg
adc
adc
dec
mov
ret
test
sub
dec
cmp
je
mov
jb
sbb
sbbl
and
adc
adc
fadds
jno
push
lods
test
cltd
ret
push
inc
mov
insb
mov
int
sbb
test
push
pop
andb
sub
inc
outsl
lret
fistps
sub
icebp
push
test
js
pop
and
shlb
mov
mov
cmpsb
mov
cs
xor
sub
aam
inc
subb
dec
push
enter
iret
imul
jns
pop
imul
arpl
mov
fnstcw
xchg
add
pop
adc
jns
and
jno
lret
cmp
mov
loope
mov
aas
fisubl
mov
hlt
xchg
int
adc
dec
push
pushf
fdivs
addr16
xor
lahf
add
ds
sub
adc
mov
cltd
out
dec
sbb
xchg
add
lods
mov
mov
addr16
pop
push
mov
mov
mov
test
xchg
mov
push
and
mov
or
inc
lods
add
push
enter
sbb
fwait
mov
xor
mov
mov
orl
lds
stos
mov
push
imul
aad
sti
jmp
mov
mov
inc
cld
jns
les
fsts
push
xor
sub
imul
dec
in
jg
sbb
imul
sbb
jns
lds
cs
orb
rcrb
sbb
xchg
clc
push
adc
sti
clc
sbb
xchg
rolb
mov
mov
test
pop
push
sbb
lock
ja
out
or
ftst
ja
lcall
leave
mov
inc
jecxz
jae
jmp
xchg
xor
fcoml
mov
jnp
mov
fidivrl
adc
inc
lahf
sbb
clc
fldl
sbb
push
xor
cmpsb
scas
cmpl
outsb
xor
sarb
cmpsl
add
clc
xor
fistl
push
sbb
and
or
fucomip
or
mov
or
dec
push
cmp
sub
push
or
push
hlt
stos
jae
jmp
mov
jae
out
lods
ret
and
or
lods
push
pop
sub
ds
fs
adc
icebp
addb
aam
add
test
repz
mov
adc
outsb
loope
mov
and
inc
fcmovnb
mov
push
repz
dec
inc
stos
cmpsb
sti
dec
test
out
xchg
dec
push
adc
jl
and
inc
aam
add
xchg
adc
jmp
pop
push
loopne
add
mov
or
dec
and
rolb
les
lcall
pop
jbe
das
sub
out
das
xchg
and
lods
mov
cs
pop
inc
pop
and
inc
cld
subb
dec
cmp
js
push
mov
idiv
rcl
xor
add
dec
xor
std
lahf
std
clc
ret
pop
sbb
loop
hlt
lds
xorl
dec
pop
lea
pop
jg
pushf
fnstenv
push
inc
pop
enter
mov
js
inc
aas
mov
mov
pop
dec
std
les
orl
xor
out
and
jmp
xchg
negb
dec
loop
sbb
bnd
imul
rol
ja
out
cmp
add
add
daa
imul
enter
mov
psrlw
mov
cli
sub
in
imul
xlat
aaa
adc
mov
out
or
sahf
nop
xorl
or
add
scas
sub
push
xchg
out
notb
sub
add
aam
or
sub
imul
cld
imull
push
jg
je
adc
lcall
repnz
loopne
add
jl
dec
out
push
adc
push
sbb
repnz
xchg
xor
test
push
ficoml
lcall
mov
cmp
mov
pop
jb
sub
cmpsl
imul
rorb
dec
push
jp
push
xchg
sub
mov
add
cmc
faddp
pop
out
mov
lods
xchg
nop
insb
movl
or
cmpsl
divb
xchg
mov
imul
push
dec
lcall
mov
lcall
push
mov
lds
outsb
cmp
rcrl
daa
and
xor
sbb
stos
xor
repnz
cmp
mov
adcl
dec
lret
fs
pushf
cmp
mov
cmp
jle
add
and
leave
and
add
js
lods
mov
lods
sub
adc
jb
data16
fistpll
push
lahf
push
pop
cs
cmpsl
addb
fbld
outsl
mov
ljmp
lret
add
outsl
cwtl
aaa
push
mov
dec
sti
pusha
mov
push
cmc
pop
fsubp
movsb
fdivrp
sar
xchg
out
stos
insl
mov
cli
aad
sub
cmc
mov
cmp
inc
movsb
daa
test
cmp
dec
aad
dec
xchg
pushf
test
out
pushf
sub
mov
push
testl
xchg
repnz
mov
repnz
or
jecxz
int3
jl
int3
pop
pop
fisubrl
push
sbb
push
outsl
fs
push
in
jge
decl
leave
cmpsb
push
fidivs
movsl
dec
jmp
dec
adc
cltd
mov
fs
repz
jo
neg
mov
mov
popf
xchg
call
sub
pop
sbb
push
int
movsl
xor
inc
dec
lods
cld
or
orl
pop
outsl
int
in
push
nop
subl
cmc
jge
adc
imul
mov
sub
dec
faddl
pop
push
xor
push
ds
imul
pop
push
hlt
cmpsl
dec
les
ss
pop
rorb
loop
pop
lahf
or
pop
sub
lcall
out
add
lock
jp
icebp
xor
jno
aaa
mov
notb
lea
cmpsl
mov
mov
rorl
sub
rdmsr
adc
inc
push
jb
lret
jno
int
cltd
ss
mov
outsb
mov
and
jp
jp
pop
mov
xor
lret
bound
inc
in
jbe
mov
mov
push
mov
pop
cmp
lahf
push
push
sub
in
sub
add
mov
scas
push
roll
cltd
decl
std
adc
adc
scas
sbbb
testb
xchg
ss
ljmp
push
out
insb
xor
inc
push
inc
xchg
xor
shrb
repnz
cmp
add
mov
outsl
add
in
and
loop
dec
dec
cld
fcoml
dec
ss
xchg
lea
out
dec
push
pushf
mov
inc
fimull
push
inc
push
xor
jmp
call
loop
pop
push
jno
fwait
mul
or
ret
outsl
sahf
sub
mov
push
inc
xor
fdivr
mov
es
sub
sbb
ja
push
movsl
ljmp
jno
xchg
mov
loopne
mov
ja
ret
and
std
pop
xor
pushf
out
jbe
sbb
in
stos
rcrb
xor
rorl
mov
sub
test
sub
push
xchg
lret
ret
out
insl
mov
cmc
rcrb
xchg
cmpsb
cmc
call
adc
cmp
pop
dec
in
stc
test
popf
and
dec
sbb
jnp
aad
dec
mov
push
cmpsl
push
imul
xor
jle
add
je
mov
rorb
pop
jnp
dec
or
out
bnd
test
nop
test
cmp
roll
aam
dec
repz
scas
lret
adc
jl
jmp
loop
bound
xchg
ret
mov
sbb
fwait
cltd
jl
and
dec
xchg
in
push
outsl
pop
cmp
xchg
jmp
fistpll
mov
push
test
ss
jg
cmp
sbb
jo
cmp
dec
test
cli
or
cmp
lea
iret
mov
mov
add
lock
or
lock
loop
push
cmc
scas
and
negb
lods
dec
sub
dec
xor
daa
fmull
fidivrl
je
inc
mov
push
scas
push
lret
aam
repz
cmpb
push
mov
sub
pop
cmp
cmp
pop
sbb
cmp
mov
setb
lcall
aas
mov
push
mov
pop
cmp
shl
rol
insb
fnstcw
mov
xchg
dec
pop
nop
xchg
pop
fwait
das
mov
repnz
and
pop
mov
xor
aas
mov
data16
jg
lds
pop
push
pop
inc
cmp
arpl
dec
or
mov
mov
outsl
sbb
dec
mov
pop
addl
cmp
or
fidivs
incb
ret
dec
scas
fcoml
mov
movsb
mov
icebp
mov
mov
pop
popa
shrl
pop
fbld
jbe
xchg
lods
inc
dec
mov
leave
sti
into
fmuls
mov
pop
test
or
jl
cmp
add
cmp
loopne
sbb
fidivl
cmp
dec
xlat
adc
js
inc
icebp
jg
push
test
mov
cmp
dec
xor
fld
sub
sbb
jle
popa
inc
loope
xchg
xchg
out
inc
outsb
mov
iret
lahf
push
repnz
cmp
je
xor
lds
movsl
imul
cmpsl
sbb
sbb
jae
mov
icebp
ja
stos
mov
push
adc
push
loop
pop
sahf
jo
mov
outsl
stos
cmp
jns
jmp
add
lahf
out
aas
xchg
add
das
popa
mov
mov
xchg
add
jl
jg
subl
xchg
ds
or
cmp
add
fsubs
outsl
loope
js
mov
mov
mov
setp
and
pop
inc
fimull
lsl
aad
lds
jge
lods
dec
add
hlt
nop
xchg
push
adc
lea
mov
sbb
pop
mov
jo
dec
es
mull
bound
pusha
mov
es
ret
rorl
sti
rcrl
jb
push
lods
jp
mov
subb
fwait
mov
cmp
xor
inc
and
outsb
add
mov
mov
adc
jo
in
call
and
cli
ja
xchg
and
popa
jne
icebp
mull
inc
stc
imulb
fisubrl
int
cmc
sub
or
and
sti
loop
lcall
aam
cmp
outsl
mov
inc
icebp
je
repnz
ss
add
or
sub
les
shlb
jg
inc
push
push
cwtl
and
shll
icebp
mov
xchg
hlt
pusha
inc
pop
lods
int3
add
add
jnp
fbld
xchg
leave
pop
fisubrl
lret
dec
rcrb
mul
push
jne
cmp
movsb
loop
in
mov
sub
jae
lahf
clc
add
mov
test
mov
mov
lock
sbb
ja
outsb
sarb
mov
sti
sub
jg
popa
rclb
jp
pop
shll
inc
adc
outsl
pop
into
arpl
into
out
mov
fsts
xchg
adc
cmp
pusha
sub
cmp
pop
xchg
lahf
cmp
in
repz
iret
ret
in
xor
bound
xchg
mov
popa
pop
push
add
add
dec
sub
jle
nop
sub
pop
pop
push
lcall
xchg
movsb
cld
adc
xchg
int3
sbbb
popa
cs
stos
inc
rclb
xor
negl
xor
add
push
push
adc
stos
cmp
fidivs
cmp
xchg
jecxz
pusha
add
push
pop
sbb
leave
inc
mov
add
mov
mov
call
push
ret
mov
shrb
imul
test
jl
cs
decl
xchg
sub
hlt
lret
push
sub
xchg
bound
sbb
sti
jl
out
std
sti
loop
cmp
ss
sbb
adc
xchg
addb
mov
lds
cmpsb
adc
fcmovnb
sbb
mov
fcoml
mov
sub
leave
mov
jge
mov
jb
push
pop
and
xor
dec
sub
pop
aad
popf
fimull
ret
call
cmp
xorl
mov
add
push
sahf
les
lret
inc
jnp
mov
cmp
popf
pop
pushf
das
pop
dec
shrb
mov
push
out
sub
lret
cmp
inc
fistpl
clc
sub
les
scas
add
pop
imul
fsubrs
int3
dec
inc
nop
sub
xor
lret
scas
xchg
cmp
dec
xchg
popa
cmp
sub
cmp
mov
stc
and
add
fstpt
iret
cmp
dec
adc
pop
adc
cltd
call
fs
dec
and
data16
inc
mov
loop
sub
out
leave
stc
jle
mov
pop
rcll
aaa
fistpll
sar
ffreep
lcall
movsb
jecxz
rcll
jbe
add
inc
test
inc
jo
fwait
and
mov
mov
movsl
cli
mov
pop
movsl
push
cmp
daa
mov
and
jo
test
xchg
les
mov
jmp
cltd
xchg
rcl
pop
sbb
fildll
dec
pop
xor
outsb
mov
xor
je
sbb
outsb
ljmp
movsb
jno
cmc
inc
adc
pop
xor
not
xor
cmp
fstps
inc
fidivs
pop
fdivs
sbb
pop
imul
jg
arpl
test
sbb
mov
int3
out
jbe
aas
mov
scas
xor
adcl
push
out
mov
popa
cmc
or
sbb
lods
cmpl
mov
dec
mov
adc
pop
push
jns
lods
ds
popa
fistpl
mov
repnz
inc
cs
movsl
dec
bound
mov
pop
sub
xchg
xor
test
or
fld
test
inc
lea
cmpsb
inc
mov
and
sbb
mov
test
mov
cwtl
hlt
ss
addr16
jp
ds
xchg
xchg
sub
rolb
loop
mov
cmp
std
fimuls
mov
sbb
jecxz
std
gs
aas
pop
cmp
xor
repz
loope
inc
cs
popf
pop
mov
push
jecxz
clc
sbb
cmc
mov
out
int3
or
xor
subb
mov
mov
mov
mov
daa
jge
loope
jge
scas
cmpsl
ja
push
or
lret
mov
pop
mov
add
pop
and
jge
xor
mov
push
adc
popf
pop
mov
xchg
and
lret
mov
mov
add
mov
mov
jne
in
pop
mov
or
cltd
lret
mov
mov
dec
stos
scas
test
addb
inc
cmpsl
push
jge
out
pop
dec
mov
dec
lea
loopne
inc
pop
fidivrs
ret
jns
and
and
xor
pop
jnp
xchg
mov
sbb
pop
dec
div
cmpsb
in
push
adc
inc
lods
jno
sub
lahf
mov
subb
jge
xchg
and
inc
stc
mov
inc
repnz
test
mov
ficoms
cmp
pop
jg
and
pop
out
pop
mov
pop
mov
arpl
imul
insb
iret
sub
push
dec
xor
xor
inc
pusha
or
iret
dec
in
out
xchg
enter
sub
outsb
stc
std
out
mov
adc
xchg
loop
and
jmp
cmpsb
mov
lock
mov
mov
shlb
or
fsubs
gs
cld
xchg
mov
test
int
add
imul
out
insb
jno
das
pusha
or
lret
adc
jbe
enter
jnp
lds
xor
outsb
push
jmp
leave
repz
push
iret
scas
mov
mov
mov
sti
xor
ss
mov
inc
pop
scas
or
xor
jg
arpl
mov
bound
addr16
and
mov
push
and
push
sbb
push
arpl
jne
push
mov
into
mov
jg
in
xor
xchg
lock
shrl
mov
jb
push
movsb
xor
jecxz
bound
sub
inc
mov
pop
adcb
js
ret
aas
fs
pop
inc
jl
inc
mov
push
inc
sbb
xlat
fldcw
xchg
into
push
and
out
imul
dec
int3
ficompl
mov
loop
mov
mov
movsl
cmp
mov
or
testb
inc
mov
or
or
adc
push
out
and
inc
push
mov
add
cltd
movsl
stos
call
iret
out
sub
xor
push
andb
hlt
hlt
and
mov
ljmp
repz
mov
jns
or
stc
dec
out
inc
mov
insb
insl
mov
push
imull
xchg
cmp
or
fnsave
and
lock
jg
movsl
mov
mov
cmpsb
xchg
lds
jnp
jne
inc
sub
or
mov
push
cld
cmpsb
add
lds
in
push
adc
outsb
int3
cmp
or
xor
mov
sub
adcl
adc
dec
into
cmp
aam
mov
sbb
scas
popf
rorb
or
das
js
cmc
mov
shrl
repnz
mov
bnd
popf
std
jno
dec
dec
push
cmp
xor
in
cmpsb
in
sub
inc
sti
call
pusha
insb
sbb
sbb
xor
mov
loop
push
lea
sub
and
mov
cmp
outsb
and
icebp
fsubrl
sub
mov
test
jbe
cld
or
cmp
xchg
arpl
mov
leave
xchg
stos
push
xor
mov
inc
out
add
push
and
xor
aas
cltd
sahf
mov
xchg
jo
mov
std
imul
fadds
xor
bound
push
mov
pusha
repz
push
dec
push
pop
fistps
aas
cmpsb
add
aas
rcrb
mov
jbe
push
cmp
mov
push
ret
mov
cmp
scas
pop
add
ja
ljmp
das
xchg
inc
and
pop
push
and
pop
cmp
jbe
out
push
das
dec
and
clc
hlt
int3
repz
inc
jl
push
lock
ljmp
mov
push
lods
aam
jns
inc
stos
xchg
inc
pop
mov
mov
xor
cmpl
enter
xrelease
push
mov
push
sti
ret
or
aad
pop
or
mov
push
dec
roll
push
mov
fsubrl
lock
out
push
out
xor
movsl
aaa
ficoms
jb
dec
insb
fstp
cmp
jmp
ja
sbb
jne
inc
xor
and
je
or
adc
xchg
cs
sbb
lret
sub
xchg
popf
push
sar
pop
mov
subb
mov
mov
inc
jbe
mov
jno
fidivl
int3
jno
dec
sbb
and
ljmp
ss
fs
cli
jg
and
popa
clc
sub
sarb
fbld
movsl
or
push
inc
jns
inc
movsb
adc
popf
mov
lods
mov
js
std
dec
ret
cmpsl
adc
fisubl
sbbb
int
fisubrl
mov
dec
icebp
or
mov
inc
inc
mov
pop
or
push
js
xchg
popf
cwtl
popa
int
daa
xlat
inc
lods
xchg
ret
aam
cmpsl
or
loop
repnz
cmp
pusha
pop
adc
push
sub
jne
push
or
xchg
test
jno
sahf
add
out
imul
push
incl
repz
das
sbb
jle
mov
lret
and
testl
adc
xchg
jne
cmp
sbb
cs
and
adc
ljmp
js
adcb
adc
xchg
sbb
scas
dec
stos
fstp
xchg
loope
or
lcall
cmp
jmp
jg
rcr
sbb
jno
and
aaa
int
mov
xor
sub
xor
cltd
das
test
jne
inc
outsb
cmp
adc
inc
xchg
fmul
mov
adc
mov
push
jnp
inc
sub
dec
loope
sahf
adc
addr16
aam
sub
mov
jecxz
out
or
mov
aad
xchg
dec
cld
and
sub
xor
clc
daa
pop
hlt
push
mov
popa
ret
mov
cmpsb
outsb
insb
jge
aad
or
divl
push
mov
sub
or
push
cmp
lret
hlt
gs
mov
fiadds
pop
call
xchg
loop
sbb
outsb
cltd
fwait
push
js
sub
xor
iret
pop
xor
jne
in
mov
addr16
mov
xchg
dec
call
mov
or
shl
pop
inc
cld
jae
lret
dec
sub
push
ljmp
ss
cmpsl
mov
lods
xchg
in
inc
add
lea
cmp
std
xor
cmp
rcrb
adc
mov
aaa
jecxz
imulb
or
sti
es
stos
out
in
faddl
icebp
je
pop
jle
movsl
mov
inc
sbb
scas
hlt
sbb
lods
jle,pt
test
icebp
in
jl
adc
insl
and
out
pop
push
cli
test
mov
test
repz
mov
jge
mov
out
cwtl
xor
dec
pop
dec
mov
sahf
scas
gs
enter
idivb
js
xor
fcmovnb
jne
add
outsl
adc
mov
cltd
sbb
leave
mov
jae
dec
dec
fdivrs
xchg
xchg
fisubrl
lock
mov
sub
scas
mull
xlat
mov
cli
xor
mov
dec
cld
ja
and
cmpsl
bound
pushl
out
cmp
pusha
dec
pop
in
sbb
jo
pop
icebp
mov
inc
lahf
push
adc
xlat
jmp
dec
pop
lods
push
push
inc
add
rcll
test
push
jge
mov
imul
add
cmp
gs
aas
dec
in
out
scas
pop
pop
lret
cmp
mov
inc
mov
xchg
adc
jg
arpl
push
aad
fwait
mov
mov
cltd
jnp
rcll
jnp
scas
xchg
dec
sub
movhps
jae
cmp
lret
mov
lret
or
and
into
insl
jae
sti
add
mov
sbb
dec
jae
dec
std
ds
xor
out
ffreep
add
cltd
fdivr
fisttpl
ljmp
repnz
dec
stos
jae
cld
iret
jae
cmpsl
fisttpll
fbld
hlt
push
mov
cmp
mov
push
frstor
jb
cmc
sub
ljmp
cmpb
adc
push
ss
mov
mov
popf
daa
ss
add
loope
jo
stos
loop
lret
xor
cmp
cwtl
in
movsb
mov
movsb
xchg
hlt
testb
push
push
jbe
into
cld
pop
pushf
cld
inc
fcoml
shlb
inc
adc
in
push
jb
ss
jle
xchg
fdivs
pop
sti
mov
and
and
cmp
leave
cmp
push
jle
stc
inc
sahf
push
fmuls
pop
cmpsb
add
sbb
cmpsb
and
popf
es
int3
lea
mov
adc
test
scas
mov
shr
outsl
mov
dec
fwait
jno
dec
fprem1
insb
das
xchg
ljmp
and
push
or
add
addr16
inc
stc
mov
aam
jge
gs
cmp
push
add
sbb
push
cmp
sbb
les
or
nop
out
mov
pop
push
fildl
out
inc
jmp
enter
and
xor
lods
mov
jnp,pn
test
scas
sbb
sub
outsl
int3
mov
cli
push
testl
dec
mov
add
insl
sub
adc
sbb
jb
idivb
mov
int
mov
sbb
ret
data16
inc
movsb
add
loope
pop
fs
ds
xlat
pop
xlat
idivb
stos
xor
test
jge
mov
imul
mov
cltd
cmp
ljmp
jl
pop
movsb
lds
fmull
lcall
clc
pop
and
int3
int3
subb
or
les
push
test
lea
sub
sub
insb
push
mov
pop
mov
lret
inc
push
inc
cmc
fistpll
fcmovnbe
sub
mov
lock
mov
xor
ret
fcmovb
enter
add
rcll
sub
inc
jno
jbe
pop
dec
ret
sbb
roll
sbb
add
mov
pusha
cmpsl
into
mov
call
mov
movsb
or
inc
aad
jmp
cmpsb
xchg
xchg
repz
imull
lds
push
push
leave
mov
push
rorl
test
jmp
lods
lea
mov
xchg
shll
sub
cld
push
js
cmpsl
mov
dec
jecxz
inc
mov
push
inc
js
adc
cmpsb
roll
mov
mov
loope
xchg
cmp
call
into
or
insb
push
or
mov
fwait
in
add
iret
xlat
and
push
jmp
iret
movsl
sbb
popl
cmpsl
es
push
cmpsl
adcl
pusha
es
pusha
and
cmp
pop
jbe
adc
pop
sub
clc
inc
mov
idivb
push
hlt
adc
sbb
jge
dec
pop
dec
add
mov
pop
sbbl
adc
xor
outsl
insl
std
add
pop
xor
or
and
mov
jne
jp
xchg
push
fwait
jge
sbb
jmp
stos
xchg
cmp
dec
or
xchg
out
lret
neg
and
out
cmpsb
loopne
add
jecxz
aas
adc
enter
inc
mov
push
mov
fucom
or
int3
insb
add
push
push
xorl
rcl
xchg
dec
enter
lock
push
mov
sbb
rcrb
mov
je
push
and
cmp
in
xor
push
sahf
or
cmp
movsl
and
push
hlt
rcrl
mov
outsb
inc
pop
sub
pushf
cmp
xchg
roll
les
push
cltd
push
mov
sbb
mov
dec
mov
sbb
outsb
adc
mov
cwtl
sbb
pop
scas
test
jecxz
mov
adc
mov
inc
push
stos
dec
movsb
push
xchg
mov
gs
dec
mov
cmovp
adc
jo
ror
xchg
pop
jb
daa
std
aam
lds
aam
sbb
rcll
icebp
je
sub
cld
sub
sub
pop
scas
adc
scas
out
cmpsb
cmc
cli
jnp
les
mov
pop
addr16
dec
out
std
out
lret
sbb
cld
cli
mov
les
jns
data16
aad
loope
and
cmp
or
cmp
mov
push
sbb
lods
pop
sub
and
int3
sbb
pop
dec
repnz
pop
bound
ja
lret
or
push
sahf
leave
outsb
xor
call
enter
stos
push
loop
or
lret
stc
push
dec
sbb
sbb
sub
and
pop
faddl
pusha
cmp
or
push
data16
lahf
lods
mov
out
push
add
subb
xchg
jmp
lock
mov
loop
jo
outsl
sbb
xchg
outsb
push
dec
add
shlb
icebp
lods
in
scas
pop
lea
pop
adc
jge
loope
sbb
in
gs
pop
clc
dec
mov
dec
mov
int3
cltd
mov
or
push
shll
dec
fwait
push
and
stos
out
div
imul
adc
push
in
fcomi
cmpsl
popf
sbb
xchg
lods
pop
pop
insb
mov
popf
idiv
pop
pop
push
insb
jle
jns
loope
jmp
add
or
mul
adc
and
shll
cmpsl
push
inc
or
ds
or
xor
mov
iret
loopne
push
sahf
aas
mov
loop
mov
xchg
adc
in
dec
xchg
jl
leave
mov
xchg
adc
addr16
aaa
inc
xor
fstpt
nop
xchg
push
mov
stc
adc
mov
inc
stos
jno
nop
or
pop
xor
lock
xor
xor
lahf
dec
jb
ret
mov
mov
inc
cli
jae
adc
bound
insl
popa
test
sbb
push
lcall
add
push
mov
or
imul
fists
movl
mov
sti
cmp
mov
imul
outsb
dec
insl
dec
dec
sbb
popa
or
jmp
mov
jae
dec
mov
pop
or
adc
cmp
inc
je
mov
sarb
clc
xlat
mov
or
pop
rolb
lret
sbb
jmp
lods
adc
aas
pop
into
add
pushf
test
or
out
in
sbb
cld
push
cli
cmpsl
cmp
add
rorl
push
add
xor
cli
int
inc
outsl
jae
nop
in
fdivl
push
xor
or
xchg
jae
jb
mov
outsb
inc
adc
popa
shlb
xchg
in
jns
imul
mov
jne
adc
xchg
xor
cmpsb
scas
pop
fs
fsubrp
mov
cmpsl
and
mov
jg
lock
mov
test
repz
hlt
xchg
inc
fsubrl
and
mov
inc
lods
push
add
xorl
shlb
inc
dec
movsl
push
jno
sarl
xor
in
bswap
jecxz
add
push
sbbl
mov
sub
pop
or
and
lahf
sahf
adc
mov
cld
pop
xor
add
xor
scas
insb
xchg
pushf
xorb
cmp
mov
cmpsl
addr16
jmp
rclb
mov
hlt
mov
scas
cmpsl
sbb
inc
jmp
add
sahf
ror
mov
outsl
ds
adc
gs
fwait
adc
mov
ss
xorb
cmp
test
adc
rolb
mov
clc
push
mov
pop
sub
mov
mov
repnz
xlat
and
cld
ficompl
mov
gs
inc
jecxz
jo
mov
call
insb
add
push
das
cmp
movsb
hlt
cs
adc
jl
xor
add
cs
pop
imul
pop
mov
cmp
insl
or
xor
xchg
scas
and
sbb
pop
push
in
dec
addr16
mov
lahf
jno
jae
arpl
inc
dec
sub
hlt
out
add
and
sub
adc
mov
or
or
pop
insb
push
cmpsb
ret
nop
xor
mov
mov
inc
ret
shl
mov
inc
cmp
dec
mov
push
sbb
add
cmp
out
test
mov
mov
sbb
xor
mov
cmp
lock
pop
call
jae
sbb
mov
lret
in
mov
push
test
mov
fwait
xlat
cmp
lods
popa
jle
inc
int3
repz
mov
icebp
mov
gs
dec
push
sbb
pop
xchg
and
rcrl
mov
jb
std
mov
inc
xor
inc
mov
mov
jne
mov
mov
mov
das
mov
mov
popa
bound
je
mov
negl
dec
or
test
js
sti
pop
test
dec
inc
sub
xchg
ret
push
fcomip
jnp
sbb
mov
sub
inc
stos
and
or
pop
adc
jl
cmp
pop
sti
out
xor
js
jl
pop
xor
jns
mov
sarb
sarl
add
mov
in
pop
dec
cmp
mov
or
push
inc
cltd
es
sub
test
sbb
movsb
dec
inc
bound
call
cmpb
and
mov
ljmp
xchg
pusha
shll
lock
ret
cli
mov
mov
enter
inc
popf
jmp
mov
shlb
pop
add
cwtl
jl
mov
mov
gs
mov
imul
push
sub
sbb
jecxz
aaa
fisubrl
call
cld
cmp
push
mov
pop
cmc
pushf
movsl
iret
pop
sti
out
inc
xor
lods
lret
dec
js
adc
sbb
add
jl
adcb
jo
jmp
dec
inc
mov
sbb
gs
sahf
xchg
mov
fcomi
adc
mov
mov
sarl
inc
jae
cmp
pop
scas
mov
mov
pop
mov
mov
mov
sub
or
mov
loope
inc
mov
out
cltd
add
shl
jo
je
adc
fidivrs
psubsb
rol
nop
push
arpl
mov
arpl
sarb
jb
jne
int
out
bound
stos
mov
fcmovb
lea
outsl
xor
fwait
mov
jge
lds
pminub
outsb
ss
lcall
shr
fs
icebp
lea
sbb
jb
push
daa
sub
mov
push
push
rcl
push
fnstcw
inc
movsl
out
daa
push
sarl
lea
pop
lcall
sbb
cmp
in
test
lcall
out
jl
adc
mov
int
push
fs
mov
mov
mov
jo
and
ds
dec
or
sbb
movsb
in
push
sti
jecxz
jp
test
shl
in
push
enter
popf
jge
dec
addr16
push
je
jns
cmp
popl
js
lcall
dec
dec
and
mov
cwtl
or
lcall
loopne
sbb
inc
aaa
pushf
and
push
cld
mov
imul
out
mov
popa
mov
pusha
mov
dec
cltd
mov
pop
pop
jno
mov
iret
lock
push
in
pop
lret
insl
cmp
cmp
and
fnstsw
out
jbe
rolb
lret
xchg
mulw
mov
enter
push
repnz
xor
jo
enter
mov
jo
or
rcrl
or
popa
push
inc
jb
jmp
ja
jno
push
hlt
iret
jb
rclb
imul
scas
fdivrs
movl
push
pop
xchg
and
in
xchg
jecxz
mov
stos
pop
into
sub
pop
jp
push
mov
add
dec
punpckhdq
mov
shrl
or
pop
jnp
dec
push
negb
sub
movl
outsb
lahf
or
xchg
nop
jp
xor
dec
pop
dec
in
mov
out
lds
hlt
scas
std
push
shlb
gs
jo
fistl
mov
lods
mov
jb
es
hlt
daa
add
fcmovnb
adcl
out
stos
jecxz
add
push
mov
std
inc
push
pop
cmp
cmpsl
arpl
push
jne
push
sub
lea
mov
pop
mov
jl
push
shll
and
push
push
mov
mov
rcrb
pusha
cmp
push
add
sti
pop
xchg
jbe
cmp
incl
mov
xlat
cli
xchg
push
addr16
push
imul
aam
dec
push
jl
mov
notl
jp
dec
pushf
lods
in
loopne
ljmp
xor
inc
ljmp
pop
shll
pop
into
sub
inc
adc
adc
loope
and
fdivl
in
incl
shrl
dec
or
dec
jle
addr16
pop
inc
stc
iret
int3
idiv
pop
mov
nop
das
sbb
mov
cmp
dec
into
push
pop
repnz
push
nop
push
add
pusha
mov
insl
loop
das
mov
test
cmpsb
sub
xchg
pop
cmp
cmp
lahf
jne
lcall
je
and
insl
pushf
push
popf
jmp
pop
pop
aas
mov
mov
xor
sbb
inc
jg
xor
dec
dec
mov
mov
ljmp
addr16
popa
jmp
jno
popf
mov
cmpsl
imul
stc
idivb
push
int3
ret
mov
fidivrl
mov
inc
xchg
insb
jp
mov
jbe
daa
and
mov
in
test
adc
mov
loope
inc
cltd
add
fstpt
jmp
into
loope
and
mov
xchg
push
xchg
push
xor
push
dec
out
sbb
sub
imul
mov
sbb
jb
sbb
divl
cmp
mov
push
pop
lds
sti
sbb
lret
adcl
lret
and
gs
mov
cli
xchg
lods
and
xor
out
int
xor
lods
push
dec
movsl
insl
mov
lods
adc
inc
out
and
out
or
clc
addr16
mov
fimull
mov
pop
adc
pop
push
fstps
cmp
xor
push
push
jo
ja
mov
out
fidivl
insl
jns
jecxz
and
lcall
in
dec
xchg
pop
xlat
pop
inc
inc
negl
roll
aad
and
mov
mov
and
xor
xchg
aad
sub
sbb
mov
in
subb
out
in
out
lock
loope
xor
fisubs
aad
ficoms
test
push
xchg
aaa
popl
test
lret
pop
ret
pop
lds
xchg
jbe
xor
and
mov
pop
ret
pop
add
push
and
pop
dec
out
insb
push
popf
mov
jg
inc
sbb
jo
push
adc
movsl
lahf
pop
lcall
pop
sbb
movsb
scas
mov
mov
xor
call
subl
pop
adc
or
fdivrs
cmp
or
xchg
mov
sub
in
ljmp
push
dec
dec
xor
dec
mov
xchg
sbb
outsl
sbb
lock
mov
sbb
in
aad
into
mov
cmp
mov
cli
stos
jns,pt
test
outsl
stos
cs
lea
sti
cmpsl
je
popf
arpl
sbb
in
loope
ja
mov
loope
stos
ljmp
ret
push
and
jp
mov
cltd
bound
pusha
sbb
xchg
outsl
pop
mov
jns
or
jp
call
push
dec
in
sbb
and
addr16
push
mov
dec
lock
jl
lcall
xor
sub
xor
xchg
cld
sub
and
imul
les
lods
pop
lahf
mov
jns
mov
in
rcrb
xchg
jnp
pop
add
lret
pop
imul
jmp
arpl
or
das
out
movsb
std
adc
fldl
mov
xor
mov
in
test
insl
add
ljmp
push
call
jp
xor
filds
ret
xchg
es
fs
mov
mov
int
add
push
test
mov
rclb
jbe
jp
xchg
mov
or
or
decl
push
mov
mov
or
sub
cmp
shrl
xor
jge
sbb
clc
push
shlb
push
arpl
out
fcompl
push
movsl
sbb
push
inc
orb
dec
jg
mov
out
stc
sarb
stos
xchg
fldenv
testb
shll
les
sub
cmp
mul
push
add
enter
cmpsb
adc
and
lods
mov
inc
push
cmpsl
out
cmc
jb
mov
jno
into
popf
sbb
add
or
bound
xchg
mov
pop
ret
ljmp
lods
and
fisubl
out
cs
js
push
lods
bound
outsb
pop
mov
inc
dec
subl
scas
sub
adc
fstpt
xchg
push
jmp
mov
dec
in
imul
push
dec
xor
adc
xchg
jns
or
in
data16
mov
and
std
xchg
fs
hlt
xchg
sub
ss
mov
cmp
idiv
sbb
mov
sbb
and
mov
pop
outsl
ret
mov
stc
imul
int3
inc
sub
add
cmp
xchg
push
icebp
xchg
cmp
mov
jge
or
call
lods
mov
or
fisubs
mov
mov
fcmovnu
adc
ljmp
xchg
leave
add
or
lahf
int3
pop
dec
out
andl
movb
push
push
test
cwtl
pushf
scas
pop
addr16
pop
fnstcw
mov
pop
insb
or
mov
fstl
popa
roll
cmpsl
mov
clc
jle
in
fldt
test
fisttpl
fadds
sbbl
push
dec
xor
in
out
jnp
jne
fs
cmp
movsb
push
or
inc
jge
push
push
cmp
cld
std
xor
incl
imul
dec
fcmove
out
adc
ret
pusha
dec
add
icebp
inc
imul
mov
lret
mov
cmp
push
stos
dec
cmp
mov
faddl
pop
xor
pop
sbb
fisttps
inc
cli
jl
dec
fists
adc
loopne
xchg
int
clc
mov
pop
aaa
add
mov
hlt
pop
outsb
dec
pushf
mov
push
jp
cmp
adc
and
pop
bound
xchg
and
je
pop
daa
clc
mov
adc
test
sbb
mov
adc
ret
sub
sub
dec
movsb
sub
jecxz
sbb
push
and
pop
push
mov
add
mov
outsl
inc
lahf
mov
cmp
fmuls
out
rorl
movsl
sub
in
jg,pn
push
inc
lock
inc
sbb
call
jecxz
fs
aad
outsl
pop
adc
add
add
out
std
sub
bnd
push
cmp
call
cli
dec
mov
and
push
imul
sbb
xchg
loopne
mov
adc
xchg
ja
xchg
push
pusha
inc
mov
sbb
mov
xchg
test
dec
mov
pop
sbb
pop
imul
cld
sarl
cmp
aas
mov
xchg
add
dec
and
xchg
xlat
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
jmp
lods
mov
xor
pop
sbb
js
xor
sub
adc
pop
adc
pop
jo
pop
js
xor
sti
pop
pop
cmp
aaa
mov
adc
push
popf
sbb
shlb
lock
xor
movsl
jle
add
in
popf
ret
cltd
lret
sahf
je
xabort
faddp
dec
outsb
aaa
pushf
xor
sbb
idivb
inc
dec
fldenv
aaa
lahf
mov
push
mov
adc
and
pop
jg
sbb
arpl
fmulp
das
mov
xor
push
mov
inc
adc
cmp
pusha
pop
push
mov
jne
stc
xor
cmp
mov
cmc
dec
lods
jl
push
cmpsl
out
mov
mov
out
das
stos
cld
stc
aas
lods
xchg
xchg
aad
and
imul
lea
testb
xor
insl
inc
cmp
inc
mov
xchg
dec
jl
shll
aad
ljmp
mov
pop
ror
sub
pop
into
jne
add
jb,pn
fisttpl
add
rcrl
sub
fnstcw
jecxz
fbld
adc
pop
pop
hlt
add
ret
idivb
rol
pop
add
fs
int3
arpl
jne
mov
mov
subl
lock
cmp
fdivl
mov
jmp
lock
jmp
push
sarb
sbb
ds
sub
push
add
clc
add
pop
xchg
out
push
movsl
gs
sbb
adc
dec
or
pushf
adc
ret
fwait
icebp
out
push
cmc
ds
inc
test
dec
mov
shll
inc
mov
sbb
dec
adc
xchg
cli
adc
imul
std
dec
adc
iret
ja
push
scas
hlt
fisubrl
test
arpl
dec
adc
jns
ss
cmpsl
jno
push
xor
rcrl
test
lahf
out
shll
inc
and
daa
push
jle
dec
pop
jg
int
xchg
xchg
and
notl
sbb
push
in
xorb
mov
out
notl
das
jge
aam
or
pop
lods
push
adc
bound
mov
outsl
fs
addr16
adcb
push
stc
loopne
mov
stos
jbe
mov
mul
mov
addps
test
pop
jl
in
cmp
in
add
aad
jno
test
nop
inc
or
push
and
icebp
shlb
add
idivl
stos
jp
push
sbb
push
aas
std
notb
fstps
jnp
xor
or
lcall
and
in
pop
fs
and
lods
int3
pop
adc
sub
cmpsl
sahf
lcall
mov
xor
dec
lea
nop
dec
mov
push
insb
xorb
cmpsb
rcr
mov
rcrl
inc
pop
xchg
nop
inc
fbstp
inc
int
ret
int
push
mov
adc
loopne
cli
push
inc
pop
arpl
cmpsl
stos
incl
push
loop
inc
divl
xchg
sbb
std
lcall
pop
push
lcall
bound
ds
fsubs
xchg
jae
jle
push
cmovp
loope
lods
pop
lods
insb
popf
rorl
or
mov
sub
es
xchg
js
jns
je
xchg
mov
enter
ss
xchg
clc
outsl
mov
sbb
add
or
jnp
pop
mov
inc
sbb
and
and
and
jnp
fs
inc
popa
mov
sti
imul
aad
cmc
adc
cmp
out
push
outsl
mov
scas
scas
scas
mov
xor
xlat
fdiv
lds
repnz
incl
jns
xlat
pop
push
xchg
loopne
adc
sbb
jge
shrd
stc
rolb
jno
xorb
dec
jb
push
mov
leave
es
cwtl
call
loopne
xor
shrb
iret
sbb
enter
adc
ret
jge
repnz
or
push
mov
sti
xchg
scas
loopne
cltd
mov
cltd
pusha
jbe
std
xchg
and
addr16
js
adc
fwait
mov
fstpt
and
jns
inc
repnz
cltd
shrb
loop
loopne
inc
inc
xchg
aad
js
mov
loop
pop
lret
and
ljmp
inc
dec
aad
pusha
and
mov
jb
adc
std
lods
sub
mov
add
repz
mov
sbb
fistpll
cmpsl
xchg
inc
ret
pop
movsl
dec
arpl
jmp
mov
fcmovb
or
stc
dec
mov
shll
cmp
jae
push
inc
mov
aas
fdivrl
xchg
sub
jge
ds
cmp
and
addr16
xlat
xor
xchg
in
jo
xchg
xchg
sbb
mov
jle
sub
shll
xor
ljmp
lock
cltd
inc
cltd
popa
mov
in
popf
xchg
cmp
pop
popa
inc
pop
mov
mov
addr16
add
cmp
cltd
cvtps2pi
lea
adc
fwait
xchg
int
js
lret
je
in
enter
adc
inc
test
adc
pusha
lods
ss
orb
sti
or
push
jns
test
lcall
mov
fs
cld
stos
in
scas
mov
sahf
lret
inc
jns
je
or
sbb
or
xor
mov
shl
fildll
xlat
dec
cmp
mov
fildll
sete
aaa
ja
cmp
pop
or
push
rcrb
imul
aam
dec
cmova
push
pop
push
test
in
inc
shlb
roll
fimull
xor
sbb
aas
std
inc
pop
test
add
xor
jno
jae
es
imul
imul
das
jae
shlb
cmc
outsb
fwait
sbb
cmp
push
pop
fadd
pop
pop
fmuls
adc
jmp
dec
pop
lahf
daa
inc
aad
cld
aas
fld1
shll
sub
pop
sub
mov
and
repz
cmc
cmp
aam
cmp
inc
ret
mov
mov
sub
jb
aaa
out
ret
dec
sbb
addr16
mov
cmpsb
loopne
sub
rcrl
xchg
sub
cmp
in
sub
lods
js
cmp
or
jne,pn
sub
std
inc
clc
hlt
push
xchg
gs
and
sbb
mov
lock
dec
shll
aas
ja
or
push
repnz
ret
int
shll
pop
daa
jbe
aaa
inc
jnp
ss
fimull
xor
fldcw
shlb
daa
movsl
inc
cwtl
int3
pop
fnstenv
mov
pop
lds
ja
in
rcl
mov
xor
clc
imul
jl
xor
or
jmp
cld
out
mov
ror
fistps
pop
data16
lret
scas
lods
adc
enter
or
cmp
mov
push
mov
in
scas
das
sarb
mov
pop
std
call
cmp
xchg
cltd
fucomi
mov
xorl
int3
dec
inc
cmpsl
test
lods
lret
xor
or
shll
adc
pop
jae
out
sub
adc
into
push
inc
mov
jle
jle
scas
test
jecxz
add
inc
dec
sub
in
jb
aas
clc
adc
xchg
push
out
ret
dec
in
insb
cli
out
orl
and
repnz
sub
push
pop
scas
mov
dec
out
add
mov
sub
or
dec
dec
mov
fbstp
dec
cwtl
das
gs
inc
jbe
repz
ds
and
cmc
rcll
ja
jnp
shrb
out
dec
mov
xor
sub
xchg
rcrb
adc
stos
or
stos
mov
mov
test
in
xor
cld
add
xchg
dec
sti
add
jmp
mov
loope
dec
jge
pop
out
ret
lret
jmp
xchg
push
rolb
dec
outsl
inc
cwtl
mov
std
inc
sbb
xchg
xor
jns
cmp
pop
and
mov
push
xchg
dec
imul
dec
sbb
movsb
je
cmp
jmp
int3
push
push
mov
pop
jae
scas
add
mov
cmpsb
aam
push
lahf
int3
inc
pop
cmp
mov
cs
push
imul
out
mov
push
into
xchg
and
out
push
sub
push
xchg
mov
mov
pushf
mov
dec
mov
jecxz
negl
sub
in
adc
dec
xchg
movsb
xchg
sub
mov
jp
jae
mov
fnstenv
add
les
mov
fildl
push
bound
inc
shl
xlat
cmp
jno
jb
mov
movsb
push
adc
and
or
test
test
fistl
jecxz
mov
inc
inc
xchg
roll
adc
sbb
int
addr16
out
in
std
jp
push
stos
testl
call
mov
pop
sbb
adc
mov
xchg
in
cmc
and
sahf
cld
push
pop
popa
xor
jmp
sub
loopne
mov
in
sub
cmpsl
out
fcoml
loope
sbb
outsl
movsl
mov
fwait
xchg
das
mov
outsb
inc
mov
stos
xlat
jecxz
lea
push
adc
mov
cld
push
orl
pop
in
or
daa
or
cmp
or
sbb
adc
mov
cmp
imul
fadd
pop
and
loopne
inc
pop
mov
sub
fwait
sbb
in
iret
mov
sbb
cmp
mov
addr16
sbb
dec
clc
arpl
aam
frstor
inc
fs
enter
lcall
popa
mov
clc
pop
add
and
push
call
in
mov
ja
cmpsl
cmp
jbe
lea
je
test
lahf
jnp
call
dec
mov
gs
and
outsb
test
cmp
cli
movsl
mov
imul
mov
mov
movsb
mov
stos
dec
addb
lock
lahf
sbb
jge
bound
push
insb
gs
push
push
or
jecxz
dec
mov
jg
inc
ja
adc
adc
inc
jbe
cltd
pop
lea
js
out
adc
call
lret
les
scas
jecxz
xor
arpl
inc
xchg
cmp
adc
inc
jno
out
lds
push
js
inc
xchg
enter
push
fdivs
pop
ja
pop
dec
arpl
lods
ja
jmp
das
pop
mov
xchg
bndstx
push
jnp
xchg
jns
xchg
pop
lds
mov
adc
mov
xor
ffreep
push
fildl
and
xchg
pop
push
push
add
cmp
sbb
jb
sahf
sbb
ficoml
adc
imul
sub
sti
inc
inc
jne
xor
add
mov
lds
mov
outsl
xchg
push
jb
cmpl
daa
add
test
jo
push
shr
cmp
rol
neg
nop
call
je
cmc
repz
pop
mov
stos
lea
call
or
push
jl
and
or
sti
cmp
mov
test
sarl
out
jl
fdivrl
rorl
scas
push
push
adc
pop
les
dec
pop
arpl
xchg
imul
aaa
dec
mov
adc
jge
adcl
mov
movsl
outsb
fdivrl
and
or
xchg
xchg
sbb
lea
test
and
jns
pop
adc
xchg
lods
daa
repz
fnstenv
imul
jns
xchg
mov
insl
divl
pushf
cmp
mov
in
jl
or
sahf
es
int
sbb
dec
dec
sbb
add
arpl
mov
fucomp
pop
dec
xlat
jge
push
in
add
lock
inc
dec
mov
dec
ficoms
xchg
sbb
insl
cs
jo
in
mov
mov
jbe
cli
sbb
lret
dec
cltd
xlat
loope
adcl
pop
lods
mov
or
insl
mov
mov
dec
out
add
fwait
mov
outsb
jecxz
data16
add
adc
add
mov
xchg
outsl
cmc
pop
pop
rcrb
add
repz
dec
fdivs
into
dec
insb
rcrb
push
enter
adc
stos
cmc
and
mov
lods
sbb
data16
pusha
gs
mov
cmpsb
sub
outsl
int
pop
fldl
cmp
jp
sub
xor
pop
stos
mov
adc
push
leave
sub
jb
sbb
lret
sbb
adc
scas
mov
aas
rcrb
mov
in
jo
pop
roll
mov
leave
fcom
jo
xchg
ja
mov
divb
rcr
ds
ds
adc
stos
mov
jmp
call
in
js
test
fcmovnbe
jno
jecxz
les
cltd
jae
cmpsb
mov
adc
pop
fisubs
xor
ret
and
fs
cltd
push
mov
xchg
aas
shl
cmp
push
jb
imul
ja
out
shrb
ss
jle
cmc
movsb
outsl
sbb
dec
pop
or
mov
adcl
xchg
dec
lcall
in
mov
push
rcll
cmp
jns
inc
out
dec
ret
mov
cmp
sbb
jle
pop
cwtl
jno
push
sarb
test
jne
adc
negl
filds
rcrb
xchg
mov
gs
std
int
xor
lret
pop
ds
and
push
cmc
mov
push
inc
dec
pop
xor
xchg
lods
in
push
xlat
rcr
mov
mov
push
mov
out
jp
lods
xchg
jge
repz
pop
mov
cmpsb
out
push
inc
xchg
scas
xor
push
out
fsubr
rorb
movsl
add
fdivrl
jecxz
je
or
fstl
jne
xstore-rng
cmpsl
add
or
push
jno
or
adc
xchg
mov
aas
pop
fcoml
xlat
or
lods
push
addr16
mov
divb
stos
lea
scas
enter
mov
lds
jmp
pop
pop
mov
cs
jle
dec
jb
push
jb
lods
fs
mov
or
das
idiv
mov
sbbb
jo
stos
test
inc
pop
lcall
push
jl
add
xchg
arpl
lcall
sti
bound
push
sbbl
mov
pop
mov
icebp
data16
dec
cltd
mov
rolb
mov
out
test
test
lret
imul
in
stos
fwait
xor
xor
mov
cli
push
xor
aam
bound
mov
negl
mov
push
jge
mov
pop
cmp
mov
into
xchg
sarb
pop
cmp
mov
cltd
cmp
sub
aaa
pop
or
inc
negb
push
das
mov
mov
inc
mov
mov
lock
or
jno
pop
push
outsl
and
dec
sub
xor
dec
mov
lret
mov
adc
ja
sub
aaa
jmp
and
adc
push
mov
mov
pop
sub
jecxz
in
stos
pop
xchg
int
xor
xchg
push
fwait
dec
fcomps
scas
and
nop
mov
mov
xor
cmpsl
test
cld
sahf
scas
and
xor
ds
fstpl
repnz
xchg
push
js
roll
push
call
shll
stos
pop
xlat
sub
mov
insb
icebp
icebp
dec
nop
fidivl
xchg
fiaddl
lods
mov
outsb
and
int
cmpsb
ja
notl
xor
inc
mov
or
stos
dec
mov
lret
xor
add
test
pop
jmp
ljmp
sub
mov
fistps
dec
push
mov
sub
stos
mov
fsubrs
jno
mov
js
mov
fisubs
pushf
jne
jo
movsl
push
and
sub
pop
pop
inc
jo
daa
fidivrl
and
rorb
faddl
into
sub
push
jb
pusha
jo
push
pushf
std
add
mov
jno
pushf
cmp
cmp
ror
jl
rcll
xchg
pop
adc
mov
cmc
sbb
sbb
xchg
cli
movaps
das
das
out
fistpll
pop
lret
fcompl
fcompl
dec
cmp
inc
pop
sub
or
loopne
mov
mov
cmp
mov
notb
and
push
into
std
cltd
pop
or
mov
hlt
cld
pop
add
rorl
ret
sti
sahf
leave
sub
rcl
std
mov
mov
and
das
cmpsb
and
stos
test
sbb
and
or
mov
ret
dec
addr16
jns
push
fsts
xchg
adc
pop
sub
push
pop
mov
jae
fcomip
aam
add
roll
pop
adc
pop
rorl
mov
xchg
nop
xor
cmpsb
cli
pop
sbb
shl
and
inc
adc
cs
and
fnsave
stos
cmp
popa
andb
xor
xor
cli
in
xor
cld
ljmp
cmpsl
roll
aam
inc
or
xorl
sbb
fidivrl
stc
outsl
push
push
sub
cwtl
xchg
aad
call
mov
es
adc
push
or
fbld
rcrb
daa
pop
fs
out
mov
mov
lret
lret
push
insl
xchg
cmpsl
popa
in
cmpsb
rol
sub
mov
mul
fmuls
sahf
out
inc
imul
stc
ficoml
dec
lea
orb
and
arpl
mov
jmp
enter
adc
aam
xchg
cmc
xchg
cmp
sub
sub
stos
shl
push
hlt
push
lods
loope
dec
sbb
ret
mov
ds
adc
lods
push
pop
ret
inc
jo
dec
popf
and
addr16
mov
mov
cmpsl
cld
shlb
test
pop
sub
rcrb
dec
dec
jns
jecxz
repnz
rcrb
mov
dec
adc
push
divb
mov
sub
sbb
in
fstpl
gs
scas
test
bound
inc
adc
arpl
add
std
jl
call
into
add
call
rolw
loop
mov
test
push
xor
je
das
sbb
scas
in
sbb
push
shr
data16
fidivs
pop
or
in
xorl
out
cmpsb
clc
pop
loope
dec
sti
mov
lcall
andl
mulb
xor
mov
movsb
call
test
push
scas
cld
ret
scas
inc
dec
xor
outsb
jbe
daa
pop
or
sbb
xchg
jl
icebp
std
add
test
push
sbb
fnstcw
cmp
mov
sbb
mov
rorl
insb
std
rol
arpl
icebp
jmp
fldt
stc
sub
sub
sbb
mov
pushaw
cmp
inc
inc
adc
insl
ds
adc
jae
lea
fsubr
dec
icebp
lret
cmpsb
notl
lret
mov
lahf
div
fstpl
outsl
sahf
test
dec
cwtl
and
mov
insb
xchg
mov
ds
pop
push
and
jge
sbb
sub
push
push
imulb
or
ss
push
imul
mov
xchg
lods
lds
push
push
outsb
push
sbb
adc
sub
inc
sbb
outsb
xchg
inc
mov
pop
or
mov
add
mov
repz
push
or
aad
lods
insl
ret
fcoml
or
jbe
pop
daa
cmpsl
or
out
cmp
shl
mov
ret
cmp
inc
cmc
aam
pop
insb
inc
jge
cmpsl
sbb
push
cmp
adcl
xlat
adc
mov
scas
movsl
mov
js
add
js
mov
mov
popf
mov
repnz
cli
jbe
arpl
or
mov
mov
pop
leave
call
ja
mov
mov
out
or
in
lea
lock
mov
shl
xchg
jns
lock
sti
mov
arpl
sbb
jecxz
cmp
inc
sbb
jp
outsl
push
push
add
inc
std
repz
push
jmp
jmp
cmp
adc
lcall
jge
sbb
sub
or
xor
inc
or
das
dec
xor
mov
jg
aas
js
xchg
fmuls
jnp
fdiv
jl
push
stc
das
sub
jne
mov
and
andb
xor
iret
sub
jmp
in
sahf
add
push
pushf
fmulp
adc
adc
into
rol
jp
dec
stos
outsl
or
inc
es
mov
add
or
jno
cmpsl
fidivrs
push
push
adc
pop
jno
cli
inc
lret
jg
sub
inc
sbb
das
pop
or
dec
jl
iret
test
xchg
jne
jge
rcl
push
xchg
adc
jnp
rcl
nop
push
push
iret
in
in
cmc
mov
out
jp
mov
mov
cwtl
gs
enter
rol
divl
das
cltd
test
sub
inc
cmp
ljmp
stc
movsb
push
sub
adc
sbb
daa
dec
cmpsb
push
jnp
sub
mov
xor
push
cmp
testb
mov
je
test
push
aaa
pusha
xchg
test
outsl
dec
movsb
pop
subb
inc
jle
nop
push
mov
xchg
push
xchg
pop
hlt
loopne
mov
cmp
or
pop
push
loope
hlt
and
sbb
pop
mov
std
test
xor
popf
fcomi
jp
mov
mov
arpl
int3
pop
repz
push
sub
dec
pop
int
sarl
pop
testb
xor
cld
outsb
jmp
in
ja
lods
cmp
mov
mov
jnp
test
movsl
fistps
adc
push
sahf
cmpb
mov
push
add
push
bound
xor
sbb
adc
sbb
out
jg
lods
test
inc
in
movsb
scas
mov
or
addr16
push
arpl
outsb
jge
testb
inc
popf
loop
das
rol
das
adc
scas
aad
hlt
mov
xchg
and
fadd
pop
cli
cmpl
sub
icebp
xchg
push
inc
xor
lds
sbb
mov
int
ja
xchg
int
lret
movsb
adc
xchg
enter
push
xor
repnz
mov
testl
xor
popf
cmovb
in
lods
lret
ss
sbb
call
popf
adc
pop
sahf
jg
cmpsb
push
sahf
push
or
jo
jge
xor
ja
jns
ds
ds
inc
lds
jl
dec
add
pushf
xor
adc
push
mov
xlat
call
or
loopne
ret
mov
and
repnz
cmc
cwtl
sahf
bound
push
bound
xor
addr16
out
mov
cmpsl
in
jae
fadds
data16
imull
ljmp
sub
aam
test
jg
enter
sbb
popa
std
sub
xor
daa
out
push
dec
inc
fcomps
sbb
jno
sub
jmp
sbb
mov
pop
xlat
mov
cmp
in
push
cmpsl
dec
cs
mov
add
adcb
mov
adc
inc
lret
stc
stos
pop
xchg
outsb
fsubp
xchg
or
cmpb
cmp
xchg
xor
jns
or
push
sbb
push
mov
call
insb
pop
sub
sbb
pop
or
into
mov
rorb
into
mov
add
xchg
sub
mov
push
pop
mov
leave
fsubs
inc
ja
outsl
jno
or
int3
cmp
aaa
push
push
mov
bound
cmp
jbe
mov
movsb
inc
sub
ficoml
jne
push
int
xor
cwtl
movsl
gs
dec
jecxz
movsb
inc
mov
stos
mov
push
out
xchg
xchg
mov
sub
xchg
fcomi
popa
mov
mov
lahf
jne
sahf
cltd
adc
js
in
mov
mov
pop
push
mov
jno
xor
push
popf
xchg
pop
repnz
dec
aad
xor
push
xor
cs
mov
push
or
pop
or
pop
add
test
rclb
pop
xor
das
popf
out
imul
gs
or
cmp
xor
stos
jnp
out
daa
jb
sbb
icebp
xor
mov
repz
cmp
shr
mov
inc
lock
push
xchg
loope
xchg
fistpl
jno
je
jmp
jne
rcrl
and
sahf
add
out
rcll
jle
push
fidivrs
lret
adc
inc
iret
and
mov
jmp
in
mov
adc
add
adc
dec
xchg
ja
xor
jmp
inc
sbb
jbe
aaa
cmc
jne
lds
out
cmp
xchg
test
sub
add
jecxz
sub
in
pop
add
mov
in
lods
cltd
in
mov
sti
out
divb
xchg
fisubl
add
jg
mov
leave
pushf
mov
or
add
ljmp
outsb
cld
ret
mov
pop
std
sbb
pop
cmc
addr16
ja
mov
xlat
cmpl
dec
xchg
test
cmpsl
xor
adc
into
std
mov
cs
or
jns
pop
pop
mov
nop
or
fwait
mov
mov
das
fmull
cli
lret
mov
jbe
aaa
icebp
dec
cltd
rcrb
loopne
jno
sahf
scas
mov
and
cmc
xchg
cmp
jle
lahf
fwait
imul
sarl
sub
subl
mov
and
sbb
lret
rcrl
nop
int3
loop
cmp
xchg
xchg
lods
in
stos
sub
fistpll
mov
je
jl
lcall
leave
sub
adc
jmp
xor
fidivl
cmp
lret
cmp
das
or
mov
rcl
adc
sbb
add
fwait
test
push
cwtl
add
xchg
repnz
cmc
scas
dec
lahf
dec
or
loope
sub
scas
dec
pop
pop
enter
mov
test
xlat
xor
or
cwtl
loop
inc
icebp
adcb
hlt
push
loop
loope
mov
adc
xor
cmp
dec
popa
and
mov
sbb
sti
in
cmp
sbb
add
testl
add
pop
jp
pop
and
out
cli
nop
mov
or
mov
sub
inc
in
and
add
mov
cmp
popf
test
push
cmp
ja
sti
sub
pushf
mov
arpl
push
mov
jle
mov
addr16
dec
mov
mov
cli
add
adcb
push
xchg
por
sub
daa
push
mov
mov
cmp
cs
inc
enter
insl
add
imulb
mov
cmpsb
aad
ret
jle
adc
mov
sarb
test
pop
lahf
ret
and
sub
mov
sbb
mov
out
lds
and
std
into
push
gs
loope
aam
test
jl
dec
stos
xchg
cwtl
mov
cmp
pop
dec
pop
push
test
scas
mov
sbb
push
ja
mov
add
setb
loope
outsb
add
stos
lods
xchg
lret
gs
push
pushf
inc
fwait
xor
sbb
pop
int3
mov
negb
mov
jo
mov
loope
xchg
lock
dec
ljmp
xchg
fdiv
mov
sbb
sbb
mov
jnp
jl
scas
xchg
jl
pop
add
dec
sahf
sti
out
inc
push
xchg
aaa
scas
outsl
into
stos
add
icebp
negl
mov
mov
rcrl
xlat
xchg
je
pop
mov
mov
and
sysenter
in
ja
inc
inc
je
stos
addr16
sbb
jle
adc
dec
mov
out
mov
cmp
in
cmpsl
addl
ror
and
mov
push
faddp
adcb
dec
int3
mov
xchg
add
and
and
sbb
adc
xor
mov
and
faddp
push
cltd
ds
std
fldl
psllq
rorl
das
cmp
sarl
das
shrb
pop
jnp
pop
jmp
stos
das
outsl
int3
ficoms
pop
shll
jg
inc
push
cltd
daa
mov
pop
mov
leave
dec
rcrl
xlat
add
in
cmc
cmp
or
xchg
in
jmp
sahf
scas
sub
ja
push
movsl
and
addb
mull
cmp
aam
lret
or
adc
ljmp
and
sbb
jle
test
call
push
and
push
and
sub
loope
add
in
xchg
leave
jge
push
adc
cmp
pop
icebp
jb
das
sbb
and
sbb
add
icebp
cmpsb
dec
scas
les
daa
xor
cmp
xor
hlt
iret
fistpl
mov
and
cli
or
nop
sbb
push
lcall
imul
fstpt
hlt
jle
in
es
imul
dec
mov
pusha
lds
mov
mov
aaa
shl
and
subl
setae
mov
fidivs
mov
popf
and
movsl
out
and
cmovns
adc
clc
pop
mov
sub
iret
pop
call
dec
mov
out
ja
mov
or
movsl
fisubrl
out
fcmovb
bound
mov
ds
imul
je
popa
mov
fildll
test
mov
lds
shll
divb
inc
cli
jns
sbb
pop
ss
add
pop
mov
js
int
push
dec
sarl
ljmp
sti
fsubrs
and
cli
adc
and
outsl
pop
fdivl
cmpb
mov
inc
int3
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
jmp
inc
mov
aaa
cwtl
arpl
push
lock
mov
pop
adc
fsubs
call
push
jae
jecxz
xor
rcrb
popf
mov
sub
add
lods
sub
xchg
and
imul
into
shlb
bound
ljmp
fmuls
xchg
mov
push
ljmp
pop
not
add
dec
xchg
outsl
and
stos
testl
cmp
cmp
sar
aam
sbb
pop
mov
je
stos
in
push
stos
sbb
lret
adc
imul
enter
sub
or
lcall
dec
dec
xchg
fistps
test
out
xor
cwtl
lock
xorl
lret
stc
dec
and
into
mov
sahf
dec
sbb
repz
lods
fadd
and
test
mov
ret
adc
pop
cmpsl
cmp
outsl
inc
jge
adc
repz
inc
repz
jge
out
push
jp
ret
add
fcom
xor
outsl
lret
sub
out
iret
mov
jmp
ret
pop
leave
inc
dec
call
loop
pop
mov
rclb
cmp
in
and
cmp
aam
addr16
mov
cmp
cltd
int
sbb
sub
js
lods
inc
repnz
fiaddl
loopne
lock
in
adc
insb
xor
sti
xchg
push
xorb
and
sub
push
xlat
stos
add
jns
sub
push
jmp
lret
arpl
aam
mov
mov
xor
inc
dec
repnz
int
or
rorb
xor
sbb
scas
mov
je
cmc
dec
xor
mov
ss
in
xlat
or
cs
popf
pusha
ror
es
test
jge
idivb
nop
add
add
jae
xlat
and
testl
mov
mov
pop
jno
in
dec
dec
or
fwait
scas
push
ret
jnp
lret
or
xchg
scas
ljmp
add
and
dec
jp
mov
data16
dec
inc
push
mov
in
cmp
xchg
jo
addr16
sbb
inc
cmc
pop
sub
out
daa
movsb
cmp
clc
popf
inc
or
ss
or
push
enter
aas
into
jl
push
or
hlt
repnz
pop
pop
scas
negb
iret
popa
and
outsl
in
mov
dec
scas
shrl
je
cmp
push
fisubs
lahf
ret
xchg
xchg
sbb
adc
test
std
push
and
fstpt
adc
sub
ss
imul
lret
sbb
pop
pushf
stos
mov
outsl
mov
mov
jmp
adc
jo
cltd
lcall
lret
movsl
aas
in
iret
xchg
fildl
and
dec
cmc
cmpsl
cmp
push
icebp
mov
test
dec
repnz
hlt
sub
or
stos
jp
inc
pop
sub
jns
mov
lret
fs
in
aaa
cmp
xchg
sbb
pop
pushf
or
push
mov
lcall
int3
xor
sub
popf
dec
insl
and
jmp
not
lcall
imul
sub
push
jmp
fs
pop
jl
iret
mov
add
add
test
sahf
test
repz
subb
jbe
imul
mov
std
xor
repz
pop
test
push
jne
adc
sahf
mov
fsubl
pop
xchg
mov
pop
dec
adc
pop
dec
outsb
xor
ja
pop
dec
adc
mov
push
cmpsl
ja
cs
repz
pop
test
sbbl
in
imul
push
or
daa
adc
in
mov
xchg
int3
xchg
jecxz
xchg
in
cmp
push
and
sub
clc
push
jo
movsl
into
dec
xchg
and
ret
fstpt
loopne
sbb
ret
pop
cmp
je
lret
sbb
sbb
inc
cmp
jb
pop
mov
xchg
jb
jle
dec
in
add
pop
push
cmpsb
xor
ret
bound
adc
jge
scas
adc
lods
fcmove
fcmovnu
dec
mov
fstpl
push
sbb
cmp
push
ret
int
sahf
mov
jmp
mov
fisubs
lcall
into
mov
or
aaa
in
adc
push
xor
mov
pusha
inc
mov
mov
xchg
icebp
push
jle
lds
push
aad
push
inc
stc
int
cld
xchg
cmp
popf
push
in
adc
popa
pop
sahf
sahf
jle
call
xchg
add
push
ljmp
inc
mov
sbbl
lcall
pop
fwait
xor
xlat
es
jmp
sahf
xor
sahf
sub
aad
cmpsl
push
xchg
add
push
pop
inc
rol
dec
fwait
mov
push
inc
cmpsb
mov
xchg
lcall
aaa
add
icebp
xor
push
push
adc
xchg
les
cwtl
popa
ljmp
cwtl
mov
mov
xor
adc
bound
push
fmull
mov
pop
fcoms
popf
in
insl
js
xchg
push
test
in
push
xchg
fcmovnb
arpl
shrb
pusha
cltd
cmp
in
jecxz
subl
push
das
in
jbe
lret
cmc
imul
add
or
clc
mul
xchg
sti
fnstenv
cwtl
pop
sahf
mov
jge
xchg
xor
mov
mov
jne
inc
rorl
mov
out
cmp
out
adcb
pop
add
adc
push
cmc
fmul
mov
jl
xor
repz
add
mov
lahf
sahf
xor
ljmp
insl
inc
add
mov
xchg
xor
sub
mov
arpl
sbbl
or
push
lods
fadd
iret
push
xor
subb
push
and
clc
inc
inc
push
add
or
pop
fistl
lea
leave
insb
jl
or
imul
test
ficoml
sub
pop
cmp
cld
scas
mov
mov
mov
popa
dec
popf
aas
in
incl
outsl
cmp
clc
xor
das
push
inc
push
outsb
dec
pop
push
dec
sti
fsub
cld
dec
push
int3
leave
dec
into
cmc
loope
mov
xchg
insl
int
aaa
mov
mov
adc
mov
movsb
bound
jne
scas
adc
lea
lods
and
mov
xor
mov
and
in
enter
test
lods
cmpsl
js
ret
fisttps
mov
ljmp
mov
aad
adc
mov
jl
test
je
sbb
jl
out
imul
sub
into
cltd
lods
addr16
subb
inc
xor
decb
mov
out
or
scas
inc
incb
and
pop
dec
jo
jnp
hlt
inc
or
add
cmp
adc
mov
cltd
aam
stc
inc
push
mov
and
popa
adc
ret
xchg
cmpsl
out
mov
push
push
push
inc
scas
or
outsb
aad
nop
in
xlat
test
sahf
mov
inc
dec
data16
hlt
mov
add
adc
mov
add
push
and
retw
aas
addr16
ljmp
mov
jb
xchg
mov
rcl
pop
addr16
out
mov
push
lods
mov
mov
push
jo
jp
cmp
pop
enter
popl
add
push
lcall
sbb
mov
aas
subl
jns
repz
xor
pop
cmpsl
add
rcll
sbb
ljmp
mov
fsubrs
ds
sub
out
sub
jmp
fdivl
out
xor
dec
pop
xor
dec
cld
ss
push
js
int3
sbb
or
pop
jl
out
and
cmp
int3
jmp
mov
push
sbb
push
sbbl
xchg
inc
xor
iret
stos
les
inc
pop
push
mov
pop
test
jbe
xchg
add
and
jg
stc
and
add
int3
cmp
xchg
leave
mov
or
inc
push
out
sub
in
fidivrs
jbe
mov
rcl
mov
scas
lcall
push
xlat
cmp
pop
icebp
xor
dec
dec
cmp
pop
mov
ds
mov
push
inc
dec
inc
inc
ret
cmp
fs
mov
and
adc
rcl
popf
stc
pop
aaa
dec
push
rcrl
jp
dec
jae
jae
xor
sub
or
and
sub
cltd
stos
push
add
in
and
sub
or
sub
dec
cmpsb
pop
sbb
inc
jnp
mov
and
es
adc
xchg
push
fucom
jg
xchg
les
ss
sub
mov
aad
add
mov
inc
scas
pusha
fisttpll
les
popa
popf
mov
rcrb
daa
nop
cld
jecxz
jnp
pop
inc
cmpsb
dec
dec
mov
mov
push
jecxz
add
insl
sbb
test
cmpsl
push
and
mov
ds
fdivrs
pop
enter
popf
adc
cli
or
popa
imul
adc
sbb
inc
data16
insl
push
or
jp
aam
cmc
fnstenv
xlat
add
jge
xchg
dec
into
stos
movsl
cmp
in
push
popf
and
adc
inc
es
int3
mov
repz
stc
push
cwtl
loope
and
or
rcr
xlat
test
mov
ret
mov
xchg
adc
addr16
paddd
pop
pop
xchg
mov
mov
shll
mov
call
or
mov
stc
add
or
notb
pushf
in
push
es
adc
xor
sbb
add
mov
outsb
test
pop
sub
inc
mov
aam
jge
mov
and
sbb
icebp
jecxz
test
push
sub
cwtl
jl
sti
push
cmpsl
add
xor
mov
sub
jp
push
and
imull
inc
test
sahf
xlat
xchg
ja
adc
iret
lret
fidivrs
dec
je
mov
paddw
xchg
xor
or
pop
leave
jbe
adc
rcrb
mov
push
cmp
out
repnz
out
cs
jg
and
popa
in
fidivl
call
fmulp
mov
cmp
sbb
cmp
dec
cmp
aas
shrl
repz
fadds
out
jmp
push
mov
and
add
lcall
out
shrb
cmp
in
roll
and
hlt
push
lock
add
fnsave
negl
cmp
insb
push
xor
lock
push
jo
in
and
pop
sti
mov
iret
or
mov
test
adc
sbb
outsb
cmp
mov
or
lret
dec
jp
orl
std
push
adc
aad
xchg
mov
cld
lods
mov
stos
stos
sbb
adc
mov
sbb
gs
xchg
je
shlb
das
fsubrl
fidivrs
sbb
ja
cmp
cltd
jbe
push
cmp
cmp
adc
xor
insl
cli
push
ficoms
jae
sbb
fiadds
lds
scas
scas
sbb
rcll
add
scas
adc
bound
aaa
or
mul
cld
shl
fsubrs
lds
scas
das
jl
mov
mov
mov
jmp
xchg
pop
jmp
int
dec
lods
inc
push
sub
out
push
dec
inc
inc
pop
scas
inc
xchg
lods
mov
roll
cmp
out
dec
insl
fdiv
mov
test
mov
cmpb
mov
loop
movb
lret
out
cmp
xchg
jg
loop
andl
dec
rcl
dec
and
sub
adc
add
stos
cmpsb
jecxz
mov
xchg
xchg
mov
shll
or
sub
dec
ja
sub
inc
lahf
fidivrs
xor
cs
fsubs
sti
cmc
push
sbb
into
fucom
loop
ds
enter
sub
and
das
xchg
xlat
jnp
push
adc
fwait
add
imul
mov
jmp
mov
jno
xor
pop
dec
lret
movsl
popf
test
sub
ja
mov
mull
pop
das
scas
insb
or
addl
cmp
ds
ja
loope
xchg
cwtl
mov
pop
sbb
faddl
mov
rcrl
sbb
push
jp
hlt
icebp
shlb
mov
scas
xor
jnp
jmp
xchg
loope
test
cmp
xchg
mov
push
push
sub
std
xor
mov
stc
flds
mov
jno
inc
cmpsb
mov
sub
inc
neg
popf
ficompl
dec
mov
out
lock
and
bound
movb
iret
inc
insl
int3
jbe
xchg
leave
and
mov
dec
push
mov
bound
shl
push
inc
pushf
sub
stc
dec
mov
cmpsl
js
adc
lret
inc
stos
sbb
dec
faddp
lahf
fidivrl
and
xor
cmc
push
ret
fiadds
sub
test
mov
mov
mov
pop
dec
xor
or
add
jne
negl
pop
rcrb
cmp
lret
jge
in
dec
ss
inc
cmp
jmp
adc
xchg
and
cmpsb
jle
cmp
xchg
push
xchg
lods
cli
add
lret
ret
movsb
fiaddl
lahf
cmp
repz
out
xchg
pop
ja
ljmp
mov
or
jnp
movsl
sub
shrl
test
push
dec
in
jae
sahf
and
lock
mov
dec
or
in
aaa
fwait
mov
addr16
bound
andb
cmp
call
sbb
cltd
mov
sub
add
cwtl
out
testb
and
loop
mov
pmulhw
aad
imul
sbb
xchg
fdivrl
test
sub
xchg
adc
insb
sbbl
fimuls
loopne
push
inc
pop
ror
mov
push
imul
inc
mov
lret
add
lret
jecxz
jg
lcall
fiadds
or
adc
in
test
xchg
sbb
iret
xor
pop
cmp
movsb
imul
jo
mov
lods
fs
fadds
out
mov
xchg
pop
leave
outsl
inc
cmp
fcoms
push
repnz
mov
dec
aam
push
test
mov
fisubrl
mov
ret
insb
fldenv
add
cli
jnp
aad
sarl
jo
lds
andb
add
inc
jbe
imul
das
dec
and
cmp
sbbl
mov
sub
bound
repz
sbb
and
push
cmc
and
dec
pop
mov
mov
mov
lods
mov
jbe
ret
push
rolb
movsbl
gs
or
loope
pop
sbb
xchg
movsb
push
addl
lods
loopne
loope
sarb
in
stc
stos
ss
jns
icebp
clc
xchg
add
cltd
xchg
mov
loope
sbb
into
lods
cmp
dec
push
into
cli
adc
xchg
cmp
mov
enter
lea
mov
mov
mov
lret
jge
dec
pop
inc
push
jl
dec
call
aas
pop
es
call
aaa
inc
pop
adc
imul
leave
adc
ja
test
xor
mov
jg
mov
pop
rcl
rolb
pop
sbb
das
int
pop
psubq
push
insb
or
shrb
popa
icebp
shlb
rclb
dec
leave
sahf
fnstsw
insl
pop
dec
jmp
lcall
subb
lds
outsb
adcb
pop
faddl
fucom
lods
nop
push
in
iret
xlat
stc
xchg
inc
pop
jmp
jbe
jge
ljmp
aam
enter
mov
insl
mov
sbb
repnz
cmp
cmpsb
xchg
mov
lods
sahf
jge
inc
xchg
adc
xor
push
lret
mov
ficomps
icebp
jg
mov
ficomps
xchg
cld
mov
and
mov
das
xchg
push
insb
push
mov
std
loopne
push
mov
and
push
or
jmp
mov
pop
push
insl
test
shll
xchg
xor
daa
mov
xchg
dec
int
jae
cmp
xchg
cmp
aad
test
or
sti
popa
cli
xchg
sbb
fidivs
cmp
insl
cwtl
test
adc
inc
nop
mov
inc
mov
fucom
clc
mov
push
mov
adc
dec
leave
pop
sbb
nop
jnp
add
cmpsb
dec
ret
mov
out
gs
aam
inc
pop
cli
lcall
dec
ja
sbb
jl
lods
sarb
repz
aad
xor
inc
xchg
popa
mov
std
sub
sbb
adc
int
dec
mov
cmp
loop
mov
push
in
jp
lea
sub
fstpl
bound
dec
and
jg
push
and
mov
adc
mov
and
push
adc
xchg
mov
push
mov
movsb
pmulhuw
fdivp
imul
mov
mov
addr16
imull
stc
shrl
mov
mov
stc
mov
push
xor
xlat
fistps
mov
lcall
add
inc
out
bound
popf
fisubl
xor
je
bound
cmp
pusha
sarl
inc
hlt
pop
mov
fsts
mov
clc
insl
jnp
add
sub
pushf
das
inc
test
movl
xor
sub
mov
push
mov
adc
shlb
lret
ss
jle
push
int
ret
test
scas
mov
ret
loope
add
icebp
inc
push
jns
test
mov
jbe
outsb
rcrl
jo
loop
lret
adc
lods
push
rcrb
add
jbe
xor
xor
mov
mov
ret
cmp
adc
hlt
push
mov
xlat
pop
pop
xchg
in
fildll
into
bound
or
std
push
bound
scas
lahf
cmc
cld
fldl
int
out
outsl
aaa
jae
jb
xchg
jle
ja
cmp
sub
dec
pushf
loopne
or
stc
xchg
push
xchg
mov
adc
lods
mov
xchg
in
decb
and
loop
inc
mov
dec
cmp
and
test
pop
test
in
out
or
sbb
inc
scas
aad
push
sti
jno
loop
xchg
push
imul
ficoms
adc
shlb
movl
mov
mov
or
xor
xor
cmc
popf
pop
ljmp
div
sahf
mov
pushf
icebp
jmp
into
cltd
push
dec
stos
ret
lret
push
cwtl
mov
call
ds
inc
pop
mov
mov
add
scas
pop
jle
pop
push
jb
inc
inc
lods
cli
rep
pminub
fildll
call
rcll
cmpsb
fs
or
aas
mov
pop
mov
into
aas
mov
pop
frstor
in
xchg
out
out
mov
pop
mov
dec
mov
inc
bound
or
lret
add
pushf
sahf
mov
lds
inc
fwait
cs
cmp
inc
mov
call
aaa
jge
rcll
movsb
dec
and
adc
movsb
movsl
outsb
adc
add
push
cmp
add
inc
cmpsb
add
adcl
je
or
fwait
mov
mov
loope
mov
outsb
fwait
pop
fwait
sub
into
jbe
jmp
xchg
or
push
mov
jnp
scas
cmpl
lods
outsb
fmuls
xchg
iret
scas
loopne
inc
push
and
es
fldenv
adcb
pop
add
mov
sarb
pop
mov
dec
in
or
push
cmp
stos
and
mov
add
cli
cmp
sbb
loopne
xor
dec
xor
push
push
es
push
or
sub
sbb
rep
mov
xchg
xor
enter
pop
mov
mov
test
sub
jmp
mov
push
call
push
or
adc
fisubrs
je
sbb
sbb
repnz
rcll
inc
in
lods
bnd
push
stos
fimull
ds
lret
outsl
insb
test
fildll
clc
inc
cwtl
sub
inc
movl
mov
mov
iret
inc
inc
scas
dec
nop
faddl
mov
cmp
push
ds
mov
mov
out
cmpsl
fwait
data16
inc
rclb
js
dec
mov
mov
jno
inc
or
add
sub
addl
insb
int3
jae
or
dec
pop
shll
rclb
push
outsb
sti
mov
pop
xor
inc
or
mov
out
xchg
insl
shlb
and
jns
shrb
and
cmp
add
ror
in
sub
out
mov
and
sub
push
daa
js
repnz
pushf
mov
lds
add
push
jb
js
pushf
sti
cmc
fcmovnb
jge
push
cmp
iret
aaa
mov
dec
and
fninit
loope
xor
push
sarb
cs
mov
jle
jmp
inc
push
push
lods
xor
jns
xorl
rorb
test
cmp
stos
and
xlat
xorl
xchg
dec
ds
cmp
fwait
repnz
mov
adc
cli
test
lock
push
inc
hlt
ss
cmpsl
outsl
cwtl
rolb
sub
cmp
outsb
jecxz
ret
fcompl
xor
popa
jo
xchg
push
jb
fmull
sbb
icebp
pushf
xchg
mov
sub
stc
data16
lea
pushf
mov
lret
sbb
icebp
or
dec
xor
sbb
into
sub
cmp
mov
pushf
je
xchg
pop
loope
loope
push
adc
data16
mov
outsb
out
sbb
rorl
add
mov
aaa
or
dec
testl
aam
test
arpl
push
pushf
xor
dec
in
xchg
inc
sbb
jp
mov
daa
mov
subl
sub
scas
jnp
push
sub
stc
xor
mov
push
out
fdivrp
gs
xchg
shlb
fbld
inc
fidivl
adc
push
imul
pusha
int
shl
jp,pt
jle
adc
add
stos
pop
dec
fistl
or
mov
xchg
mov
jae
shrb
loope
call
mov
cmpsl
inc
mov
lcall
fs
mov
not
inc
cmc
push
aaa
std
sbb
inc
and
into
adc
hlt
stc
sub
fldt
aas
in
stos
cwtl
lret
dec
cmpb
xchg
in
xchg
mov
outsl
fidivrl
iret
pop
xor
jne
repz
iret
xor
push
lret
je
addr16
adc
jnp
and
mov
and
mov
inc
mov
mov
jns
scas
push
test
inc
xor
call
ja
aad
xchg
mov
stc
mov
dec
in
out
imul
push
xchg
clc
rcll
popf
mov
js
or
lret
mov
sbb
xchg
addr16
push
cmp
xor
fcmovbe
sub
rol
pop
dec
in
pusha
push
push
push
sub
sbb
push
test
and
scas
xor
cmp
sbb
mov
std
dec
or
pop
add
loopne
mov
or
insl
mov
mov
stos
repz
shr
jo
adc
dec
int
xchg
lahf
inc
hlt
addb
cmc
loope
insb
add
jae
xchg
lods
imul
fimull
ret
cmpsb
stos
int
push
mov
mov
mov
ficomps
inc
push
hlt
mov
cli
imul
shrb
fwait
int3
adc
sarb
outsl
es
sub
inc
fadds
pop
shll
in
adc
imul
mov
cmp
jmp
add
xor
test
push
in
dec
gs
jbe
ss
xlat
std
icebp
sar
lock
mov
jecxz
jb
jle
mov
cmp
inc
out
imul
lret
push
call
popf
mov
scas
fxch
fcompl
enter
lea
dec
out
mov
call
xchg
or
cmpl
hlt
sahf
adc
or
jecxz
lock
mov
pop
mov
add
push
xchg
aam
gs
xor
pop
or
or
jb
cltd
fadds
shl
adc
movswl
cmpsl
das
push
cmpsb
loop
nop
cmpsb
loopne
ficoms
int3
jne
mov
xchg
fldl
mov
cmp
or
adc
outsb
jne
or
lret
pop
xchg
clc
inc
pusha
mov
xor
nop
outsb
cmc
xchg
leave
jae
fcmovbe
sub
mov
mov
fsubs
std
cld
add
push
pop
in
sbb
or
mov
mov
jns
push
clc
mov
repz
add
jmp
jecxz
loope
jb
jmp
nop
cmpb
fs
jmp
aaa
insl
xlat
fsubl
inc
inc
pop
and
inc
lret
mov
cmpsl
imul
mov
cwtl
fistps
into
lret
push
cmp
mov
mov
lahf
iret
call
mov
cmp
cmp
popf
cld
sbb
jns
mov
pmuludq
lds
ljmp
sbb
mov
fs
mov
int3
pop
je
inc
in
cli
sbb
or
pop
loope
outsl
fisubl
jbe
das
xchg
mov
cmp
dec
push
movsb
mov
jge
push
insb
mov
pop
lahf
test
xor
mov
jmp
jo
loopne
sbb
lcall
rcrl
dec
xorl
movsl
mov
sbb
dec
or
mov
rorb
mov
xchg
insl
js
arpl
jnp
hlt
jbe
fldcw
or
or
shl
in
in
cmpl
push
jbe
inc
sub
sub
loopne
or
out
pop
sbb
dec
xchg
inc
lret
jb
cmp
aam
imul
in
jo
xor
mov
cmc
stos
in
mov
ret
test
out
or
adc
nop
push
mov
and
xchg
cli
xchg
fcoms
mov
lock
pop
xchg
ficoms
and
push
insl
dec
lahf
dec
lea
outsl
cmp
outsl
call
call
pop
cs
or
subb
scas
fstps
and
lret
sbb
adc
pop
dec
sub
jns
int3
aaa
ret
loop
rol
popf
xorl
inc
pop
movsl
add
into
ss
adc
fcoms
pop
dec
jo
or
hlt
in
jbe
cld
push
push
imul
sti
data16
les
and
int
nop
sbb
loope
jnp
cmpsl
or
lret
shll
lea
std
inc
lods
repnz
sub
scas
sbb
add
adc
fmuls
mov
mov
rcl
cwtl
xor
mov
push
push
stos
jg
xchg
negl
incb
int
cmp
jg
rorl
or
xor
xor
push
xchg
outsb
cmpsb
dec
imul
mov
mov
mov
scas
pop
out
sarb
xor
add
imull
mov
mov
out
ret
fwait
add
mov
lods
hlt
sbb
int3
fcoms
movb
sbb
rcrl
or
lcall
movsb
add
or
aam
popf
pop
stc
inc
cmp
inc
pusha
inc
cmpsl
imul
xchg
nop
pop
mov
iret
mov
xchg
rorb
pop
xchg
in
adc
dec
cmp
adc
dec
cli
sub
imul
mov
orps
je
or
int
jae
das
sub
mov
fidivrs
dec
sti
adc
dec
jmp
pop
dec
mov
mov
add
cmp
mov
mov
xlat
xor
and
sub
mov
dec
push
push
outsl
pop
das
loop
jle
xchg
data16
cmp
inc
shr
test
aaa
stos
sub
cmp
int3
loope
mov
adc
jg
test
sub
pop
xchg
jne
fsubrp
mov
sub
push
js
adc
mov
je
and
xchg
add
jle
xchg
imul
push
scas
inc
mov
cmpsl
xchg
pop
mov
sbb
in
pop
sub
addb
or
enter
fldenv
pop
sbb
bound
mov
mov
xlat
pushf
xlat
jnp
pop
jbe
loop
data16
sub
mov
adc
rclb
push
push
fwait
mov
insb
ds
sbb
jne
adc
inc
cmc
lea
and
lea
xchg
xlat
sub
or
sbb
mov
ret
fdivrs
pusha
mov
into
popa
pushf
adc
decl
arpl
out
andl
test
mov
aam
sub
aaa
lods
in
test
mov
cmpsl
cs
push
repnz
mov
inc
dec
bound
push
lods
stos
cltd
adc
out
out
repz
out
int3
aam
cli
mov
sub
cmp
andb
pop
movsl
inc
jns
add
test
leave
popa
sbb
fs
std
adc
call
shrl
inc
lock
lret
xchg
mov
xchg
jbe
add
das
cmpsb
repz
add
adc
sbb
lcall
lods
loop
fsubr
icebp
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
jmp
add
lret
lret
add
enter
mov
adc
or
and
or
rcrl
mov
xor
imul
push
aaa
insb
pushf
push
test
dec
ss
or
stos
add
push
add
bound
xchg
frstor
sahf
in
in
jle
bnd
jb
test
sub
mov
jl
loop
jae
push
dec
ss
aam
into
add
rclb
mov
sbb
pusha
xchg
fwait
jbe
loope
stc
in
jmp
loopne
fwait
adc
adc
enter
out
cltd
xchg
fnsetpm(287
ja
cld
push
inc
jbe
das
es
xchg
jp
or
pop
filds
pop
dec
pushf
jns
pushf
pop
sbb
pop
and
inc
mov
loopne
adc
lcall
jg
push
clc
mov
repnz
dec
mov
xor
into
arpl
push
push
icebp
imul
xor
sbb
sar
fwait
xor
in
sub
int
aam
cmp
push
mov
cld
and
aad
xchg
jno
add
xchg
neg
xorl
push
aam
out
out
jl
jae
lods
mov
ds
inc
into
inc
jl
dec
test
mov
rorb
dec
fcoms
pop
iret
sar
jbe
aaa
or
and
pop
lods
in
cmp
repz
pop
jl
sub
fwait
mov
pop
mov
pop
jg
push
mov
pop
mov
daa
and
adc
pop
dec
je
xlat
mov
inc
mov
aaa
rclb
sub
inc
xchg
push
sti
inc
sbb
xchg
lds
mov
js
jbe
xor
mov
hlt
or
dec
jg
call
ds
pop
dec
je
aam
ja
mov
sub
mov
mov
cmc
insl
aas
mov
mov
inc
sti
movsb
xchg
imul
inc
cmpsl
fcompl
cwtl
lret
mov
test
sbb
sub
rorl
push
outsb
xor
jne
out
movsb
xor
mov
cmc
inc
clc
cmp
dec
fsubl
fistl
adc
sub
insl
cmp
inc
hlt
inc
pop
adc
in
cmp
call
sbb
pop
adc
xchg
push
or
mov
add
xorb
ja
sub
jae
mov
scas
mov
and
jae
jbe
jmp
push
sub
dec
xlat
ja
or
push
loopne
test
xchg
xadd
popa
mov
mov
mov
adc
mov
jl
les
cmp
mov
cmp
lahf
mov
aaa
mov
jns
mov
movb
cmpl
or
and
mov
inc
xchg
add
mov
mov
outsl
pop
pop
dec
popa
jecxz
rcrb
pop
jnp
mov
jae
cmp
push
xchg
fnstcw
or
mov
ja
push
push
lods
lock
fistps
lods
aam
int3
sbb
enter
mov
out
mov
sbb
orb
jg
nop
out
call
filds
xor
lahf
ror
daa
addl
mov
movsb
mov
lock
push
test
in
pop
lods
popa
add
inc
ret
inc
addr16
mov
popa
or
dec
inc
xor
div
add
outsl
push
nop
mov
mov
sub
aaa
mov
sub
movsb
mov
cmc
fwait
xchg
sub
bound
inc
inc
ja
movsb
inc
scas
xchg
lds
sbb
mov
mov
jge
sub
in
popf
push
xchg
xlat
inc
xor
push
cs
es
cmpsl
jle
gs
popa
mov
shl
test
adc
fisttpll
adc
pop
cmc
mov
jae
and
cmp
xchg
jbe
add
xchg
xlat
dec
nop
sub
inc
jns
std
addb
mov
cld
cmp
pop
ret
popf
pop
cwtl
adc
pop
sub
lret
int3
popa
cli
andl
pop
gs
inc
inc
push
pop
loop
aaa
xchg
and
dec
jg
js
cli
pop
sbb
hlt
cwtl
imul
cli
or
pop
stos
adc
adcl
mov
jge
insl
xchg
insl
mov
gs
mov
jae
jne
mov
popl
push
jmp
pop
jmp
roll
jo
test
sub
enter
push
dec
inc
flds
lahf
clc
and
or
jo
cs
outsb
sbb
and
add
ret
add
xlat
jnp
aad
and
ss
ja
xor
scas
adc
iret
mov
mov
imul
ja
xchg
cmpsb
mov
movsl
dec
mov
mov
pop
sti
sti
dec
lods
ds
inc
sbb
xchg
faddl
test
and
inc
push
sbb
sbb
insl
hlt
in
popa
mov
or
hlt
mov
popa
hlt
icebp
ja
mov
popa
lret
fsubs
loopne
cmp
mov
xchg
jmp
das
je
xor
sub
adc
mov
cmp
lcall
cltd
aaa
out
jne
ret
sbbl
push
add
pop
addb
dec
or
sarl
pop
jnp,pn
adc
std
pop
pmulhw
or
jae
test
mov
in
jecxz
pusha
inc
fidivrs
inc
mov
repz
fnstsw
arpl
sbb
mov
ret
xchg
xchg
outsb
xor
xchg
movsl
adc
inc
and
and
mov
fwait
cs
dec
pop
insl
es
and
cmc
xchg
push
inc
inc
ret
enter
mov
das
push
and
sub
adc
cmp
popa
adc
sbb
and
and
sbb
mov
pop
sub
rol
adc
mov
mov
inc
mov
or
xchg
aam
xchg
pop
push
shlb
out
sub
mov
sbb
jmp
roll
icebp
sub
arpl
insl
dec
mov
sub
inc
in
scas
movq
out
daa
fs
push
dec
int
bnd
jg
lock
cmc
scas
sub
rolb
mov
jbe
out
lds
clc
sbb
mov
leave
addr16
ret
mov
gs
sbb
neg
pop
adc
sbb
leave
and
mov
jp
inc
add
mov
stc
jl
and
adc
je
add
adc
cld
es
addr16
cmp
inc
icebp
sbb
xlat
push
inc
cmc
and
adc
ja
and
pusha
test
pop
popa
aad
js
cmp
xor
adc
adc
xchg
test
mov
add
not
jae
or
push
in
jl
outsl
mov
push
in
aaa
lret
dec
push
aam
enter
mov
or
fcmovb
jne
push
sbb
call
mov
sub
pop
xor
adc
add
fstl
pop
mov
icebp
insl
filds
movsl
nop
mul
scas
daa
ret
cmp
mov
xlat
rorl
test
clc
ljmp
lock
push
or
jae
pusha
adc
and
inc
push
dec
xchg
xor
and
xorl
dec
inc
adcb
pushf
xor
pushf
adcl
inc
mov
inc
jl
stos
gs
mov
mov
adc
fwait
mov
ljmp
in
aas
jp
xchg
std
sbb
testl
and
jg
sbb
in
cmp
mulb
test
mov
iret
jnp
mov
xchg
mov
daa
push
dec
outsb
mov
add
fnstsw
mov
sbb
push
fimull
push
cmp
xor
mov
les
test
call
push
push
or
inc
sti
jno
test
push
out
jmp
jno,pn
cmp
mov
lret
xchg
jg
lret
adc
xor
out
mov
mov
lds
mov
test
inc
or
std
and
lret
loopne
xor
mov
jg
push
icebp
inc
pop
sbb
sbb
and
dec
and
scas
mov
stos
mov
jo
test
cltd
test
in
mov
int3
fldcw
pop
mov
movsb
fstl
repnz
jle
inc
popa
sahf
mov
insl
lahf
mov
push
shrb
das
jbe
adc
cmc
das
sub
push
mov
test
idiv
jne
sbb
lods
cmpsl
aad
mov
inc
in
lahf
movsb
mov
cltd
pushf
jg
ficompl
jecxz
scas
mov
cmp
mov
and
push
sub
rorb
out
out
or
test
popa
scas
jne
enter
sub
xor
jp
jl
pop
pushf
adc
push
cld
jp
or
ret
xor
bound
adc
sbb
sbb
fistl
fldt
orb
jle
xchg
mov
bound
fs
inc
xor
pusha
sahf
pop
clc
pop
mov
popf
imul
lods
push
popa
dec
fcomip
mov
ds
adc
filds
fwait
mov
xor
push
push
icebp
pop
pop
das
fs
xlat
sub
xchg
ret
stc
cmp
cltd
mov
sahf
push
jecxz
and
and
push
jg
ja
lcall
lods
aam
jmp
sub
cld
jns
mul
sbb
cmp
mov
xchg
pop
aas
aam
push
jle
dec
mov
pusha
inc
imul
dec
cld
inc
outsb
add
mul
loope,pn
std
popf
ret
pop
je
stc
int
addr16
mov
mov
jbe
pushf
inc
sbb
jbe
cltd
ss
jno
or
and
in
clc
mov
jo
addb
clc
cmp
cmp
jae
and
pop
add
inc
jmp
out
dec
push
xor
xor
aaa
xor
jecxz
sub
test
imul
ret
loop
out
lahf
inc
std
je
lods
pop
out
pop
cmc
test
or
addb
cmp
scas
popf
lcall
jnp
lds
mov
movsl
imul
pushf
cwtl
pop
xor
scas
push
dec
and
cmpsb
aad
pop
jae
mov
jle
jbe
push
jbe
cmpsb
pop
fidivrl
jle
aaa
popa
lods
movsb
sbb
ss
lcall
scas
mov
daa
jecxz
mov
bound
inc
mul
lock
mov
mov
aam
jns
insl
lea
push
sbb
push
lea
and
daa
test
fists
xchg
jmp
push
insb
inc
cmp
daa
and
cltd
dec
xchg
adc
fsubr
ss
xlat
insl
jecxz
and
outsl
lahf
pop
dec
mov
xorl
in
data16
aas
repnz
push
test
rcrb
orb
and
cli
out
push
sbbl
jge
jge
fidivl
or
repnz
je
ljmp
lret
jge
dec
mov
add
push
mov
cmc
adc
ljmp
addb
sbb
xchg
into
in
xchg
sbb
add
xchg
adc
nop
or
mov
push
cmpsl
jp
cmp
push
jge
mov
push
out
out
es
aas
out
fcomi
inc
dec
pop
cli
es
mov
jnp
mov
mov
sahf
jl
jecxz
pop
std
pop
mov
mov
adc
test
test
cmp
mov
daa
or
movsl
mov
or
aam
xor
or
int
adc
cld
sbb
cmpsb
cmp
aas
adc
addr16
sbb
pop
push
pop
mov
sti
fimull
mov
addr16
jle
fistpll
fisubl
add
mov
dec
fcomps
xchg
push
or
dec
mov
xchg
sbb
addl
rcrb
fisttpl
test
jmp
mov
xchg
int3
lock
js
mov
xchg
ret
mov
sbb
or
pushf
push
jne
test
int
dec
sbb
and
lret
mov
sbbb
dec
mov
lods
outsb
mov
imul
cmp
cmpsb
mov
ljmp
jge
shrl
ret
stos
loopne
shlb
loope
out
cmpsb
roll
adc
inc
in
scas
pop
sbb
pop
cmp
scas
mov
jns,pt
rcr
mov
test
fildll
imul
arpl
and
pop
insb
in
jns
adc
mov
lods
je
xchg
dec
lea
jge
js
lcall
jp
push
fisttps
ret
outsb
repz
call
testb
and
pop
andb
js
adc
rol
arpl
mov
fcompl
or
dec
bound
clc
jae
sub
sti
mov
mov
loop
pop
jae
cmpsl
push
cmp
sub
aam
mov
push
sub
les
daa
rcrl
cmpsb
pushf
cld
pop
push
into
push
dec
in
sub
es
adc
mov
mov
xchg
iret
or
or
loop
or
inc
leave
test
stos
popl
inc
xor
cmpsl
pop
add
cmp
cmpsb
mov
aas
mov
mov
mov
add
lcall
push
mov
add
adc
pop
dec
out
iret
std
inc
mov
push
mov
insl
jno
ret
ja
push
out
out
loop
jmp
lds
insl
push
xor
iret
imul
sub
add
jle
mov
sbb
outsb
dec
xchg
arpl
push
push
jmp
xchg
xchg
shrb
jl
incb
cmp
mov
lcall
pop
sub
lods
cwtl
adc
loopne
repz
lods
rcrl
add
pop
icebp
jns
dec
cmpsb
pop
inc
sub
cli
out
add
imul
dec
sbb
ss
mov
jns
xchg
or
mov
jo
inc
xchg
jae
gs
push
in
lods
adc
dec
scas
cmpsb
jg
loopne
aad
pop
outsb
or
push
pop
adc
push
sbb
decl
outsl
movsl
push
sbb
andnps
stc
insb
xchg
sar
xchg
fstpt
call
adc
aaa
xchg
mov
arpl
in
roll
jbe
xchg
sti
test
dec
add
sarb
mov
fisubrs
xchg
in
sub
scas
mov
mov
rclb
mov
int
lods
call
or
adc
sbbl
js
push
sahf
mov
sbb
push
fsubp
mov
or
inc
sti
xchg
jmp
xchg
les
jno
ds
lahf
adc
hlt
jo
add
aas
mov
in
push
mov
dec
pop
pop
div
inc
or
add
movsw
jg
mov
test
pusha
movsl
sbb
int3
sbb
lea
and
add
aaa
xchg
xor
and
inc
adc
push
stc
pop
fwait
out
shrl
nop
mov
pushf
aaa
pop
jge
test
cmpsl
add
mov
out
push
pop
enter
push
xchg
xchg
or
ljmp
cmc
jb
aas
jnp
mov
inc
mov
jle
inc
stos
mov
mov
in
pushf
push
clc
and
mov
sbb
push
movsb
int3
cmp
imul
frstor
repnz
mov
shll
dec
jne
pop
pop
or
and
cmp
sbb
fsub
lods
push
cltd
or
jae
pop
mov
lods
mov
mov
pop
and
xlat
ds
mov
sub
shlb
adc
fwait
push
sti
mov
jle
cmp
cmp
jnp
sbb
dec
cmp
mov
test
or
cs
shrl
cmp
ret
jecxz
ror
js
stos
lds
fs
stc
in
sub
push
mov
cmpsl
dec
cmpl
dec
icebp
adc
iret
or
or
fsubrs
iretw
cmp
pop
mov
mov
xchg
sub
dec
fmuls
push
mov
mov
stos
add
mov
es
int
int
cmp
incl
sbb
add
jp
out
xchg
fimull
lods
xor
adcb
jb
test
push
mulb
cld
shr
add
leavew
dec
push
pop
into
xchg
xchg
mov
add
mov
push
xchg
daa
jne
pop
adc
mov
adcl
jb
push
mov
dec
jl
gs
push
pop
mov
mov
pop
testl
push
xchg
push
data16
mov
jge
loopne
cld
push
mov
lret
jne
adc
add
jb
mov
ljmp
sti
push
dec
xor
movsl
dec
dec
pop
loopne
lea
mov
jno
mov
and
cmpsb
popf
mov
push
aam
cmp
mov
add
je,pn
stos
pop
fidivl
test
jb
or
jne
es
mov
add
jnp
iret
push
pushf
mov
out
push
cltd
arpl
push
ja
lea
xchg
out
and
mov
inc
xor
push
push
iret
add
add
xor
mov
xor
jae
subl
test
jecxz
and
insl
test
inc
jo
xchg
not
ljmp
jl
leave
mov
fisubl
stos
insb
fcoml
fdivr
imul
push
int3
add
int
push
jmp
push
lods
mov
mov
xchg
jb
mov
popa
lods
hlt
inc
test
icebp
inc
pop
scas
jne
sub
gs
arpl
fs
cvttps2pi
jle
jne
mov
dec
sub
inc
dec
push
jno
xor
andb
or
movsb
push
adc
testl
push
fsubrl
outsl
push
xchg
enter
cltd
jbe
push
adc
push
pushf
dec
xchg
jp
xchg
inc
push
and
push
fldt
imul
mov
fistpll
or
in
into
out
dec
sub
and
nop
mov
and
xor
jl
mov
js
lds
dec
popf
lods
into
sub
pop
pop
je
cltd
push
fmulp
fdivs
inc
mov
push
shlb
push
jnp
pushf
pop
loope
sbb
mov
mov
sub
xchg
out
adc
mov
mov
inc
sbb
pop
or
jae
das
mov
mov
or
jg
dec
mov
jb
lahf
sub
lock
adc
inc
fcompl
fimuls
jg
cmpsb
and
jae
add
js
shl
and
sbb
dec
std
fstl
jnp
loope
mov
cmp
cmp
push
idivb
cld
dec
dec
rorb
xor
xor
imul
add
addr16
int3
add
mov
jo
stc
gs
lret
ds
es
adc
lret
hlt
in
lcall
call
pop
push
sub
stos
and
jl
pusha
mov
iret
test
in
ss
shlb
dec
out
adc
sub
lahf
push
cwtl
push
leave
fstps
shll
test
addl
or
addr16
popa
mov
ds
das
cmp
xchg
add
dec
push
push
mov
rolb
inc
je
mov
mov
mov
jecxz
sbb
and
test
sbb
repz
aaa
ss
bound
inc
adc
imul
std
xor
adc
mov
ret
mov
pop
sbb
and
fadd
pop
aas
inc
jecxz
xor
or
fwait
sub
mov
pusha
jecxz
dec
mov
pop
xor
test
mov
sbb
fsubrl
mov
xchg
fwait
lock
mov
rol
push
sahf
cmp
mov
mov
imul
cmpsb
pop
jnp
ficoml
inc
movb
test
sbb
jno
mov
inc
mov
movsb
neg
dec
adc
leave
js
popf
stc
in
sarl
repnz
sub
sarb
lcall
push
xor
in
push
mov
jmp
ja
fnstcw
push
icebp
sub
sub
adc
sub
xchg
in
fdivrl
loopne
adc
mov
mov
pop
sub
fadd
sbb
movsb
repnz
xchg
xor
icebp
and
and
xor
imulb
cs
add
sbb
adc
cmp
into
mov
aas
inc
and
shll
lds
cli
xchg
fs
sub
push
xchg
push
fisubrs
xchg
add
jp
shl
ds
dec
lar
call
dec
nop
push
sbb
incl
sbb
xchg
add
in
stos
mov
sub
xor
add
adc
enter
lock
jge
xchg
xchg
mov
sub
mov
cwtl
mov
rclb
xlat
gs
lods
jne
jo
jl
dec
mov
cmc
aas
pop
mov
adcl
sbb
jmp
jbe
loope
icebp
inc
mov
je
repnz
leave
sub
aaa
ds
leave
fldl
and
lea
aam
mov
into
adc
shlb
adc
mov
fsts
iret
mov
pushf
stc
jno
xor
popf
inc
test
lods
sub
mov
jge
lock
dec
mov
dec
add
movsl
mov
sub
push
or
pop
sbb
xchg
sub
sub
insb
jecxz
leave
fmull
shlb
dec
or
data16
xor
fsub
rcl
loopne
xchg
adc
shll
push
xor
xor
adc
sbb
adc
ret
mov
pop
dec
rolb
adc
out
clc
xchg
sarb
mov
popf
insl
int
iret
add
mov
imul
mov
iret
fs
cwtl
mov
jp
daa
xor
mov
jmp
int
stc
lods
fs
aad
ret
mov
in
cmp
inc
mov
pop
leave
dec
flds
cmp
ucomiss
xchg
dec
jb
mov
out
hlt
js
adc
in
adc
push
out
or
pop
xor
mov
jbe
test
add
xchg
xor
xorb
inc
adc
aas
dec
int
in
out
mov
scas
xchg
ret
or
xor
adc
xor
jl
ja
loope
push
insl
mov
jbe
jl
cmp
jg
in
add
mov
pop
out
xchg
jbe
xchg
movsb
sbb
jo
xchg
popa
mov
jmp
sub
jge
mov
fidivrl
lahf
cmpsb
popf
pop
popa
enter
mov
fstps
or
jbe
call
out
gs
sbb
pop
outsb
dec
mov
sub
push
add
rolb
adc
mov
jns
fidivrl
xchg
inc
or
pop
push
push
or
iret
mov
inc
into
je
add
in
pop
mov
mov
or
inc
mov
lock
rcrb
out
mov
push
lock
cmp
lods
mov
arpl
jge
sbb
and
sti
cmpsb
scas
xor
ret
adc
idiv
das
loopne
loopne
cmp
test
aas
mov
mov
popa
stos
dec
adc
cmp
shl
std
mov
adc
mov
push
xor
dec
jmp
jb
cmp
inc
sbb
ja
mov
arpl
jo
xchg
insb
jmp
lret
inc
xchg
xchg
add
lahf
stos
dec
pop
ss
inc
xor
aaa
dec
int3
push
out
adc
dec
jmp
mov
fisubrl
arpl
add
movsl
jge,pt
hlt
out
mov
pusha
ret
sub
push
lea
cmp
and
adc
pop
and
imull
sub
call
outsb
inc
repnz
je
lods
icebp
add
ds
or
xchg
test
sub
lods
mov
add
ljmp
aam
add
out
fwait
imul
mov
push
sahf
scas
mov
cmp
adc
in
xchg
dec
outsl
adc
or
mov
sti
xorb
mov
cltd
jb
out
dec
pop
ljmp
dec
mov
je
sub
sbb
faddl
inc
out
cs
sub
enter
sbb
cmp
test
cs
jg
ds
jae
imul
pushf
and
pop
cmp
and
dec
mov
int3
mov
sub
ret
sahf
ficoml
popf
jb
sbb
mov
pop
sahf
sub
push
stos
sbb
dec
mov
ret
stos
aad
arpl
loopne
imul
je
cmp
shll
sub
movsl
or
cmc
dec
scas
inc
imul
lds
xchg
add
push
or
inc
pop
ss
aas
sti
cwtl
cmpsl
adc
inc
cmp
test
int
cmp
push
fmul
jp
shlb
or
jmp
sbb
aam
sbb
jge
push
jns
into
in
mov
in
repz
push
cmp
ret
pop
xor
rcr
and
sahf
aaa
movsb
pop
pop
mull
int3
xchg
dec
mov
adc
jb
imull
cmc
jnp
pop
shl
jle
dec
dec
jge
ret
fidivs
add
push
jno
lods
fsts
adc
or
popa
push
push
adc
cmp
inc
test
mov
adc
xor
aam
imul
mov
negl
dec
dec
push
pop
adc
inc
mov
int
sbb
pop
addl
pop
xchg
in
xchg
fisubs
push
adc
imul
cwtl
mov
cli
pop
into
sub
mov
push
imul
incl
jge
mov
jno
nop
push
cmp
cmp
inc
js
dec
loope
imul
dec
and
and
sub
jne
push
sbb
xchg
insl
bound
loope
or
pop
mov
pop
hlt
call
movsb
fsub
ljmp
mov
mov
xchg
or
lea
inc
adc
mov
fdivrl
scas
clc
jle
stos
fwait
mov
fmull
and
movsl
loopne
addr16
sub
push
inc
push
repz
cmp
mov
sub
sub
pop
push
stos
dec
fbld
cmp
jnp
push
jno
int3
aam
cmp
mov
int
xor
mov
ror
roll
and
push
add
xchg
fsubrs
icebp
add
ficoms
xor
cmp
psubsw
pop
mov
pop
lea
iret
xchg
sub
and
add
in
pop
jnp
in
stos
imul
enter
lds
mov
or
pop
aam
adc
sarl
pop
cmpsb
ljmp
jmp
sub
or
cltd
and
and
pop
dec
roll
add
pop
mov
push
clc
cmp
jle
mov
out
jmp
imul
stc
and
lret
idiv
ror
inc
jl
or
mov
rolb
lahf
fwait
cmp
in
xchg
data16
repnz
push
xchg
jecxz
xor
imul
pop
lods
push
or
dec
mov
rcrb
fldenv
mov
das
pop
popf
arpl
lret
outsb
outsl
testb
out
push
out
sbb
lret
notb
mov
hlt
mov
frstor
ds
jnp
jnp
or
push
fcomp
mov
in
add
fwait
enter
lcall
shll
or
pop
std
es
xor
dec
movzwl
aaa
push
int3
shlb
adc
sub
lcall
lcall
mov
pop
dec
dec
pop
adc
and
movsb
mov
pop
aam
sahf
mov
push
pop
xor
cmp
imul
xchg
add
sahf
subps
pop
je
sbb
ss
or
mov
repnz
gs
mov
add
xchg
incb
test
enter
int
dec
into
add
shlb
sar
adc
sbb
enter
dec
mov
into
inc
jle
add
imul
pop
sbb
pop
lods
fldenv
data16
fcomip
xchg
and
lret
in
lods
and
mov
inc
dec
dec
add
mov
cmpsl
xchg
push
jo
inc
mov
neg
rcr
lcall
jae
fs
lahf
sbb
jno
jbe
cs
leave
popf
movsl
popf
add
sub
sbb
arpl
jbe
test
mov
adc
sbb
xor
subb
je
sub
aam
or
in
inc
cld
stc
mov
out
call
jmp
inc
in
test
imul
mov
out
jge
and
lds
cmp
ljmp
mov
cmp
mov
test
inc
xor
loop
xchg
cmp
jb
jo
pop
add
ds
mov
push
push
std
shrl
outsl
loop
inc
roll
mov
or
out
cmc
pop
xchg
jb
inc
test
cmp
ror
out
cli
jnp
inc
push
je
scas
inc
sahf
les
in
mov
add
inc
cmpsl
int3
fildll
pop
ja
and
push
shll
and
cli
pop
mov
cmp
pop
jne
push
in
lret
or
loope
scas
mov
out
call
fisubrs
aad
inc
dec
mov
push
mov
mul
jae
mov
clc
dec
or
int3
mov
sbb
pusha
mov
xchg
movsl
xchg
in
xor
sub
inc
sbb
mul
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
jmp
jnp
imul
sub
insl
sbb
add
adc
jg
push
xor
faddl
repz
out
shll
cmp
mov
xor
xchg
fldenv
out
sbb
fcompl
das
subl
fstpt
into
lret
pop
inc
sbb
inc
pop
mov
insl
fwait
jg
or
fnsetpm(287
sbb
lret
cltd
roll
adc
push
jo
inc
jb
xchg
mov
sbb
pushf
das
add
push
fldl
scas
cmpsl
nop
sbb
stos
mov
in
sub
jns
or
in
push
orb
and
or
scas
aas
test
insl
jmp
lds
push
push
je
pop
fnsave
jp
ret
mov
inc
adc
inc
or
adc
lahf
sarl
sbb
call
sbb
or
ret
jae
pop
cmp
sbb
pop
arpl
sahf
push
iret
and
lock
jge
pop
call
jno
dec
fmul
ja
stc
dec
mov
dec
jmp
in
stos
jmp
mov
mov
pop
data16
cmp
push
test
mov
imul
test
adc
jbe
dec
inc
insb
lds
jecxz
xor
cld
xor
jno
lods
pop
test
or
pop
xchg
sbb
stos
adc
inc
rcr
pop
jl
rcrl
stos
ret
dec
inc
pop
fmul
or
add
test
xor
orb
sbb
sub
dec
leave
mov
bound
mov
jae
push
imul
out
xchg
cmpsl
sbb
inc
nop
fwait
add
and
pop
lahf
xchg
xor
push
lea
sbb
jg
notb
pop
aam
mov
pusha
out
sub
add
sub
pop
pop
outsl
lock
movsb
fisttps
mov
aaa
int
das
jno
fsubr
imul
mov
jp
jb
mov
sub
pop
mov
pusha
orb
out
mov
test
cmp
jnp
insl
xor
in
fcompl
add
mov
aas
or
aam
test
cld
lcall
insl
cwtl
cmp
mov
mov
ljmp
imul
push
repz
jle
adc
lock
jo
fisttps
and
dec
or
xchg
aaa
scas
mov
outsb
fnsave
xor
xor
or
dec
mov
mov
and
mov
mov
or
aaa
cmp
mov
and
popf
mov
mov
lret
jecxz
and
pusha
rcrb
xor
xor
pop
mov
mov
push
jo
sub
call
mov
mov
cld
nop
ss
scas
fmull
and
lock
adcl
test
push
test
daa
jp
dec
clc
test
push
jecxz
push
and
movsb
mov
xchg
ljmp
imul
movsl
or
sbb
xor
shr
mov
jbe
dec
stos
cmp
lahf
shr
mov
push
inc
les
je
cwtl
mov
pop
orb
outsl
inc
adc
xchg
sbb
pop
pop
inc
mov
adc
mov
pop
lret
rcr
fs
jno
jb
sbb
iret
movsl
xchg
lahf
add
stc
push
add
xchg
fs
std
imul
or
lcall
push
or
fistl
add
xor
pop
mulb
mov
in
xchg
cmp
iret
loopne
in
adc
mov
jl
push
add
imul
lret
addr16
jecxz
imul
xchg
mov
sub
ffreep
jne
mov
aas
lea
imul
mov
xor
mov
mov
dec
jmp
sub
scas
insl
or
std
hlt
in
rorl
mov
jp
icebp
sub
push
jno
inc
add
jo
sbbb
jnp
sub
jp
pop
popf
cmp
movsb
lret
mov
lock
in
dec
testl
xor
add
sbb
ljmp
pop
stc
addr16
inc
inc
mov
clc
cs
push
test
xor
sti
icebp
jbe
jmp
in
stos
or
lock
mov
add
mov
pop
addr16
sub
adc
sar
inc
pop
andl
push
outsb
out
xchg
mov
dec
jno
stos
xchg
adc
mov
test
sbb
int3
int
adcl
aam
sbb
xchg
mov
rcll
and
mov
push
inc
fsubrs
adc
push
gs
lcall
jno
lea
sbb
icebp
loopne
sub
cltd
out
sbb
cmp
ja
movsb
mov
stos
stos
loope
xchg
add
jae
adc
mov
or
scas
jne
pushf
jmp
lret
in
pop
cli
cmp
stos
xchg
jb
std
out
and
pop
and
jbe
repnz
mov
repz
ret
push
imul
mov
push
inc
iret
sbb
push
mov
xchg
fisubs
push
shl
push
xchg
jbe
das
repz
and
push
pop
gs
lcall
sub
xor
fstl
repz
xor
push
movsl
inc
cmp
into
ljmp
xchg
in
inc
outsb
mov
cmp
pop
popa
mov
pop
pop
adc
mov
push
push
ds
dec
jp
lds
in
jns
scas
xor
jne
push
mov
jb,pt
fnstsw
imul
push
lods
shll
mov
out
hlt
xor
mov
sub
dec
mov
iret
das
testb
or
out
mov
lahf
sbb
mulb
mov
fisubs
sub
mov
xchg
stc
movsb
jns
dec
xor
in
fisubl
out
negb
cmpsb
js
ljmp
pop
mov
pop
jmp
fmuls
pop
cmp
addr16
fsubrl
sbb
in
mov
adc
popa
in
sbb
cltd
add
inc
sub
push
push
push
lds
xor
jge
and
add
test
sbb
fiaddl
cmp
lret
mov
rcrb
or
mov
cs
jg
test
sub
fstl
add
aas
stos
jae
pop
push
inc
pop
or
mov
fcmovnbe
loopne
test
ret
pop
pop
mov
jmp
and
popa
in
mov
xchg
rorb
leave
js
insl
add
mov
fisttpll
jb
cwtl
mov
std
mov
ret
dec
xor
jns
leave
lock
and
popa
mov
inc
fwait
sarb
cmp
jae
xor
inc
in
fimuls
jae
xor
mov
rorb
xchg
dec
sub
push
xor
stos
lods
or
jo
test
ds
cltd
mov
div
aad
adc
mov
sub
mov
out
cmp
mov
mov
pop
pop
mov
cwtl
enter
idivl
xchg
jns,pn
cmp
insl
aas
jmp
in
cmp
cmp
stos
aad
lcall
movb
pop
ja
cmpb
movsb
dec
lods
lods
cmc
jnp
stc
or
jge
mov
in
dec
dec
pop
xchg
pop
dec
std
cmpsb
xor
jmp
lahf
jmp
mov
cltd
mov
and
mov
mov
sub
xlat
js
cmpsl
test
lret
test
mov
jmp
xor
mov
mull
shll
or
cmp
jge
inc
cmp
cld
int
or
insl
mov
aaa
cmp
add
lea
push
ljmp
in
popf
pop
xor
or
push
and
popf
pop
sub
mov
inc
aaa
cltd
enter
leave
adc
lds
lcall
jae
sti
xchg
stos
ret
popa
cmp
mov
dec
pop
push
popa
in
aas
ret
and
sub
jmp
cmp
bts
out
incl
hlt
mov
fmull
push
gs
fsubs
pop
mov
xchg
enter
test
call
add
leave
sbb
repz
hlt
adc
mov
es
fnstcw
inc
test
inc
xchg
icebp
ss
insb
push
xor
outsl
mov
dec
cmc
fldl2t
inc
imull
jecxz
in
sti
daa
mov
adc
pop
scas
inc
popa
pop
and
xor
je
inc
cwtl
pop
mov
mov
sbbl
xchg
stc
inc
xchg
xchg
int
xor
mov
repnz
leave
fucomip
lahf
or
sbb
gs
stc
add
das
and
or
in
pushf
jecxz
dec
pop
sub
inc
mov
notl
cmc
rcr
aam
rolb
lds
es
and
in
xchg
mov
daa
movsb
stos
rcrl
fstpl
lock
test
pop
pop
movsb
adc
ret
jg
mov
clc
das
pushf
jp
test
insb
sbb
jp
lret
lea
enter
xor
out
mov
outsl
test
icebp
sbb
push
inc
adc
pop
clc
sub
out
xchg
and
sbb
inc
shl
insb
out
fs
out
sub
or
mov
mov
iret
hlt
loope
pop
adc
xchg
cmpsl
inc
fstl
push
fisubl
loop
mov
push
mov
sub
push
mov
ret
add
enter
pop
hlt
cmc
jnp
imul
in
push
aaa
mov
cmp
lret
push
jbe
clc
mov
cld
lock
dec
xor
bound
out
pusha
mov
test
pop
mov
mov
aas
add
std
clc
lahf
loop
adc
scas
mov
inc
leave
sarl
cs
mov
fnstsw
scas
jp
outsb
inc
mov
mov
je
inc
xor
or
dec
mov
add
inc
jg
adc
xchg
mov
add
cmpb
je
mov
outsl
stos
jo
jb
xor
out
add
daa
dec
cld
stos
add
mov
subb
xorb
cmpsb
cltd
hlt
mov
mov
hlt
addb
out
andl
sti
add
out
or
fldcw
loope
cmp
clc
inc
and
xor
and
cmp
mov
push
mov
movsl
and
arpl
cs
fdivl
lret
xchg
aam
mov
lods
inc
rcr
cwtl
pop
fdivr
mov
popf
cmpsl
js
mov
jge
jae
sbb
jge
arpl
ljmp
xchg
xchg
xchg
mov
add
jl
cmp
clc
mov
fisubrs
out
xor
add
sub
popf
lcall
mov
stos
cld
or
dec
pushf
adc
dec
adc
iret
adc
bound
sub
ja
xor
lods
adc
or
into
push
xor
mov
xor
mov
orb
lock
mov
push
jb
cmp
cli
mov
sub
cmp
lahf
dec
jb
mov
pop
ret
incl
sub
cwtl
adc
pop
xchg
fidivl
push
push
test
adc
das
in
sub
push
adc
pusha
jl
adc
lock
push
rcrb
rorb
ret
outsl
cmp
in
mov
mov
inc
mov
addb
das
mov
add
mov
mov
pop
inc
push
lcall
iret
out
jecxz
inc
cltd
cmp
fbld
insl
ja
aas
out
sub
mov
jmp
or
sbb
xor
mov
push
data16
push
adc
test
int3
cmp
stc
in
cmp
outsl
jmp
jne
push
and
sub
out
pop
leave
in
sub
mov
scas
push
push
and
pop
cmp
shlb
mov
rolb
in
and
sub
rclb
pop
inc
push
stos
xchg
sub
test
imul
pusha
cmp
dec
xor
subl
push
add
mov
cmp
xchg
or
mov
or
xor
add
scas
loop
je
add
loopne
inc
cmp
dec
inc
jmp
popa
cmpsl
pop
and
sub
xor
adc
notb
push
push
xor
bound
sbb
dec
sbb
stos
test
push
mov
jne
pop
outsb
lds
and
aad
push
mov
imul
jmp
fisttpll
in
aaa
lret
cmc
in
outsb
adc
sbb
out
cmc
stos
and
movsb
add
cli
mov
iret
gs
ret
inc
xor
push
lcall
push
movb
shr
mov
daa
push
push
aad
rcrb
fcomps
cmp
sbb
icebp
ret
dec
mov
cmp
xchg
iret
faddl
pop
aaa
in
pop
stos
mov
mov
xor
ja
push
mov
add
jae
mov
sahf
xor
dec
hlt
pop
pop
lcall
and
mov
inc
sub
sbb
cmp
and
cmp
arpl
xchg
call
lock
jb
pop
jmp
jno
lcall
ss
loop
idivb
sub
pop
xorb
xchg
jae
cld
and
out
pop
aam
shrb
daa
int3
loop
movsb
push
pop
xor
ret
mov
pop
fsubrs
dec
daa
pop
xlat
inc
jne
adc
popa
adcl
sub
clc
insb
sub
das
xchg
pop
aaa
mov
mov
or
rcrb
mov
mov
push
call
mov
aad
xchg
sti
dec
out
xchg
mov
addr16
mov
loopne
sarl
ss
lcall
jae
and
jl
sbb
fldenv
push
lods
mov
push
xchg
pop
sbb
loop
pop
iret
sahf
mov
push
push
or
cmp
sbb
test
inc
sbb
ljmp
mov
push
stos
jno
add
or
mov
xor
lods
jne
dec
sub
dec
pop
call
push
inc
leave
jle
jl
iret
lock
test
fstpl
into
fsubrl
sub
or
push
imul
insl
ja
pop
add
mov
out
mov
cmpsl
mov
mov
shll
outsl
sub
cmc
sti
xchg
pop
sub
add
push
pop
inc
or
pop
adc
add
cmpsl
adc
inc
fisttps
rcrl
jg
mov
subl
pop
jmp
adc
stos
idivl
insb
fiaddl
xchg
test
mov
xchg
mov
dec
jbe
push
stc
into
xchg
es
cmp
test
ja
pop
pop
inc
mov
and
xchg
pop
popa
cmp
push
add
xor
inc
fucomp
fwait
lock
mov
jp
cs
jg
sbb
mov
popa
pop
adc
jp
cmc
lods
xchg
xor
bound
loopne
push
pop
ffreep
es
mov
scas
sahf
cmp
xor
inc
lods
mov
sbb
xchg
aad
jmp
mov
add
cmp
ljmp
adc
aam
or
mov
cmp
xor
fldt
icebp
icebp
dec
push
mov
jecxz
loope
sub
pop
subl
push
sarl
adc
or
mov
xlat
rcll
out
aaa
test
enter
adc
push
xchg
lea
inc
add
sbb
push
mov
fmuls
sbb
test
cmp
dec
or
mov
pop
pop
or
inc
call
sar
cmove
icebp
or
orb
pop
enter
loope
push
jno
mov
push
je
dec
leave
addr16
int
aaa
pop
or
xor
mov
pop
ljmp
cmp
pusha
xchg
adc
pushf
mov
mov
jo
xchg
fsubrp
sarl
and
imul
sbb
rolb
mov
adc
in
test
or
adc
mov
dec
sti
insb
sbb
lock
lods
adc
shl
jmp
mov
pop
add
dec
cmp
sub
inc
jp
inc
and
adc
add
cltd
jp
out
int3
jge
icebp
dec
rcll
push
mov
fwait
jb
xor
inc
or
mov
jp
lahf
push
and
cmp
and
mov
dec
push
pop
or
xor
lds
lcall
and
pop
push
lret
imul
inc
daa
or
es
mov
jns
gs
mov
sub
in
aad
mov
mov
arpl
push
xchg
mov
lret
adc
or
inc
mov
cli
and
dec
dec
mov
mov
push
cld
fadd
shrb
mov
orb
jp
sbb
sahf
xor
inc
movsb
inc
pop
add
push
cmp
xchg
jmp
sub
jbe
mov
lea
add
int3
xchg
sbbb
sub
std
gs
xchg
or
xor
cmp
ret
or
and
pop
into
xor
lret
fdecstp
into
adc
popa
mov
sbb
orb
nop
add
bound
nop
lea
mov
test
sbb
and
mov
push
mov
mov
push
pop
das
cmc
pop
jmp
test
out
xchg
mov
out
xchg
xor
jbe
insb
sbb
outsb
lods
jo
push
into
ljmp
push
insb
idiv
dec
imul
cld
add
sub
dec
and
inc
mov
int3
pushf
cli
push
mov
lret
mov
ret
testl
pop
cwtl
mov
sti
pop
mov
rclb
inc
lahf
adc
or
jmp
and
mov
xor
in
out
and
into
sub
pop
mov
pop
aaa
cs
pushf
sub
inc
jecxz
inc
mov
sbb
stc
push
xchg
inc
mov
and
xchg
jb
or
rorl
add
fnstenv
xor
jmp
lods
jl
jne
mov
test
cmp
adc
fsts
cmp
pop
rep
mov
adcb
add
or
cmp
sub
xchg
cld
sub
push
pusha
pop
mov
enter
or
ss
rcr
and
ret
mov
mov
pusha
and
jecxz
in
shrb
sbbl
xchg
dec
aam
pop
icebp
sbb
add
cmpsb
inc
outsb
adc
inc
in
xor
cmc
cld
push
ss
ret
adc
adc
ljmp
xchg
pop
dec
fsts
or
push
jo
or
mov
dec
mov
sahf
in
stc
test
inc
repz
clc
stos
xor
mov
xor
scas
mov
pop
and
mov
divps
jns
sub
inc
ja
inc
arpl
inc
fsts
jl
dec
push
cmp
cmp
out
jecxz
cs
jo
repnz
cmp
add
xchg
je
test
imul
ds
fld
sbb
add
stos
mov
sub
lds
leave
sbb
pop
and
fisttpll
sub
andb
xor
popa
std
insb
roll
or
leave
sahf
int3
mov
lahf
mov
je
nop
outsl
inc
xor
mov
jbe
aaa
jne
ja
gs
fdivrs
shlb
add
mov
dec
ljmp
fldenv
xorb
jl
shll
jecxz
mov
mov
fcoms
xchg
data16
imulb
xor
push
int3
std
sub
jnp
mov
popf
jp
in
jg
adc
push
in
ret
xor
add
in
ret
test
fnsetpm(287
add
xor
cli
xchg
or
jae
outsl
mov
or
adc
xlat
cwtl
jmp
mov
stc
outsl
sub
rep
das
xor
dec
aaa
mov
pop
and
sub
xchg
sbb
insb
sbb
out
lret
sahf
shlb
in
pop
inc
daa
aas
rorb
dec
jmp
fdivr
mov
in
or
lods
cmovo
pop
lods
mov
mov
cli
addb
cmpsb
repnz
lcall
sub
mov
ret
xchg
lock
inc
out
sbb
add
fldcw
notl
add
ret
idivl
xchg
adc
leave
int3
jecxz
sbb
or
dec
inc
stc
shlb
push
sub
mov
jo
stc
jmp
js
icebp
sbbb
xchg
jle
testl
cmp
jle
fimuls
or
xchg
xor
push
mov
aaa
xchg
jecxz
js
mov
loop
iret
inc
cli
ret
lcall
filds
adc
xchg
daa
push
loopne
dec
in
pop
jo
xchg
jo
adc
dec
lea
push
sbb
and
push
jbe
leave
push
add
hlt
je
jno
mov
loope
dec
sbb
sbb
insb
xchg
jae
or
jns
lret
ret
fstps
into
cli
dec
loop
inc
jge
clc
mov
jp
inc
push
femms
adc
leave
test
les
arpl
in
mov
xorb
or
jns
daa
add
ljmp
maskmovq
and
subb
daa
fidivl
mov
outsb
fs
lds
xor
rcrl
mov
sbb
mov
idivb
outsb
jae
push
or
pop
jne
add
pushf
insl
ljmp
add
inc
stc
icebp
xorl
pop
or
push
sbb
loop
add
gs
ja
push
pop
mov
lcall
push
xchg
sub
or
dec
lods
pusha
jns
lret
add
push
test
cmc
push
push
push
pop
cmp
add
mov
pusha
aaa
or
dec
xchg
lea
push
jb
sbb
push
sub
mov
mov
xchg
xor
mov
jbe
add
lret
scas
loope
adc
clc
push
popl
adc
sbb
push
mov
push
cmc
jmp
push
gs
aas
jbe
test
mov
outsl
fisttpl
fidivl
shll
xchg
pop
xchg
stc
fwait
ret
mov
ds
mov
insb
scas
es
dec
xchg
andb
or
jmp
stos
inc
dec
push
movsl
jp
aaa
in
jp
or
out
mov
rcll
pop
and
add
jne
stc
in
orps
in
daa
dec
outsb
add
cmp
sti
ficomps
mov
and
mov
in
loopne
jle
jnp
or
ret
mov
jbe
enter
cmp
jl
mov
insb
jl
mov
popf
jge
fwait
jae
mov
cmp
enter
push
mov
mov
int
fstpl
inc
loopne
dec
jbe
push
rcrb
movups
mov
addr16
cmpsb
sub
xchg
ds
jbe
lret
fdivrs
loop
mov
cs
or
aad
mov
pop
rorb
jmp
fsubrs
inc
lahf
out
xor
enter
add
loop
gs
icebp
xor
push
pop
bnd
cmp
into
stc
adc
movsl
xchg
cmp
xor
loop
insb
cltd
div
cltd
jb
xor
mov
mov
push
adc
dec
xchg
inc
add
mov
xchg
scas
fwait
xchg
pushw
je
std
xor
inc
add
xchg
ret
imul
cmpsl
dec
adc
pop
fs
xor
mov
arpl
mov
into
adc
mov
adc
sbb
hlt
inc
xorb
xchg
xchg
outsb
and
push
jo
and
add
cli
dec
loopne
lea
out
std
inc
cmpsb
notb
and
nop
pusha
pop
lahf
push
mov
mov
mov
adc
cmp
cmp
sub
push
mov
daa
xchg
je
daa
daa
mov
xor
aam
xchg
and
xor
dec
mov
call
xchg
test
jg
test
repnz
iret
jne
fstpl
outsb
dec
shl
cmp
jne
testb
sub
je
and
pop
dec
in
adcl
imul
out
out
xor
xor
imul
lea
push
imul
je
jp
out
into
jp
lods
ds
add
adc
rol
sub
pop
and
imul
adc
sbb
bound
pop
sub
test
mov
jmp
scas
pop
pop
mov
dec
cmp
ss
cmp
adcb
sub
xchg
sbb
lods
or
sbb
adc
mov
inc
out
int
andl
aam
int
mov
mov
mov
gs
pusha
push
fisttpl
push
sbb
xor
inc
adc
inc
mov
test
rcrb
xchg
pop
into
ds
pusha
lahf
ret
int3
and
pop
mov
sahf
ss
or
insl
cmpsl
popf
add
test
fs
jl
add
pop
aam
fdivs
and
dec
and
xchg
scas
mov
xchg
lds
cmp
pop
movsb
imul
std
xchg
or
inc
daa
inc
lods
jecxz
adc
jo
lcall
addr16
inc
sub
inc
jmp
cmpl
sahf
shl
jno
mov
fs
pop
jmp
dec
add
dec
adc
movl
add
in
push
and
inc
ret
mov
mov
hlt
xchg
popa
and
adc
or
xchg
cmp
sarb
push
push
in
dec
sar
sbbb
mov
push
je
push
cld
pop
out
fwait
cld
xchg
mov
jno
inc
insb
xchg
xlat
lahf
push
dec
add
cmp
fcom
insl
sbb
mov
andb
sub
dec
mov
pop
enter
xchg
sub
test
sbb
xor
cmp
sahf
lds
sub
jmp
xor
xor
int3
sbb
aaa
scas
cs
daa
insb
iret
add
cmp
imul
ficoms
or
sub
sahf
mov
jle
inc
stc
orl
or
cld
shrl
into
mov
inc
test
repz
aam
cltd
clc
mov
aam
iret
in
sti
and
mov
imul
testl
jnp
xor
add
sti
sbb
push
jne
jle
pop
cmp
rolb
inc
or
add
in
out
or
cmpsb
jb
adc
jne
insb
jge
imul
xchg
sub
cmp
fadds
and
out
inc
jmp
add
addr16
adc
fcomp
mov
mov
roll
mov
lods
cwtl
jb
iret
js
adc
mov
testb
ret
cmp
hlt
fwait
je
iret
sti
in
loop
fldenv
sahf
push
sbb
sub
ja
repnz
xor
lahf
cmp
cs
push
push
jnp
and
mov
jecxz
sub
nop
popf
lock
icebp
inc
inc
push
mov
test
in
stos
lcall
js
adc
xchg
xchg
aaa
xlat
pop
test
aam
push
add
mov
enter
imul
adc
dec
loopne
cli
ss
clc
dec
in
mov
push
call
adc
sbb
cs
jb
pop
fwait
add
repnz
icebp
aam
pop
sbb
out
push
jns
sub
insb
filds
pop
adc
push
push
inc
sub
loopne
pop
push
lret
xchg
mov
pop
xchg
sub
call
lock
insb
mov
clc
sub
add
hlt
icebp
imull
sarl
sti
mov
add
iret
jae
lds
adc
ja
scas
xor
aaa
sub
fdivrl
inc
cmp
lods
jno
mov
test
es
ljmp
inc
aad
cmp
aaa
and
pop
pop
pop
test
mov
idiv
xor
mov
pop
or
scas
lods
mov
pop
jbe
mov
jo
shl
jns
sahf
mov
fldt
jno
push
jo
cld
push
lret
jne
jecxz
and
lock
jne
jnp
int
cmp
jno
les
lret
sub
cmc
push
jno
mov
sarl
push
pop
repnz
xchg
test
xchg
ret
mov
test
iret
xchg
jno
dec
subl
cld
data16
outsb
enter
in
add
mov
mov
mov
lea
std
add
lock
pop
and
inc
popa
mov
das
loop
cmp
xor
jae
mov
pop
pop
mov
mov
ss
insl
out
xor
push
and
mov
and
mov
test
nop
mov
jle
arpl
scas
int3
in
shlb
repz
pop
notl
ja
sarb
cwtl
aas
outsl
pop
mov
pop
das
ljmp
insl
xchg
sbb
jmp
mov
iret
addl
adc
adc
mov
push
dec
mov
std
cmpb
sbb
je
inc
out
pop
out
inc
jge
clc
int3
cmp
mov
xor
sub
xchg
mov
jecxz
lds
push
cmp
scas
and
mov
add
rcrb
stos
and
pop
test
pop
fisubl
outsl
inc
push
mov
in
sbb
in
adcl
mov
push
mov
push
jnp
data16
lock
in
inc
push
das
nop
lock
and
mov
mov
arpl
mov
lahf
sub
or
sbb
mov
push
lcall
cs
lock
out
movsb
sarb
xchg
or
inc
pushl
or
sbb
iret
or
jmp
adcl
xchg
es
jmp
cmp
movsl
imul
xor
pop
cmp
inc
or
test
push
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
jmp
shrb
push
sbb
mov
inc
notl
adc
or
jb
lret
loope
dec
inc
aam
dec
lahf
cwtl
sbb
fnstenv
dec
add
pop
loope
test
push
loope
jne
imul
lret
jne
popa
pop
outsb
pop
inc
mov
leave
addl
mov
idiv
lock
xchg
js
xchg
test
mov
mov
idivl
rcrb
in
dec
loope
out
addl
mov
sbb
cmp
aas
jle
pop
fidivrl
pop
mov
js
jns
scas
lock
jl
jl
sti
dec
movsb
pop
rcll
sub
dec
sbb
pop
jmp
inc
stc
and
shrb
sti
enter
xor
jge
mov
outsb
jge
dec
sub
lods
iret
add
cmc
test
mov
movsb
in
in
xor
sbb
cmp
js
lea
sub
mov
xchg
add
inc
jg
inc
mov
int
sub
in
adc
int3
jecxz
add
pop
inc
out
jne
dec
hlt
pop
xor
int
lods
into
mov
rorb
imul
pop
outsl
sub
add
adc
outsl
jne
stc
ret
sbb
add
movsl
mov
push
int3
add
pop
inc
sub
mov
aam
mov
in
pop
decb
rorl
mov
rcrl
es
outsl
add
jmp
dec
fdivl
out
pop
jmp
nop
shll
dec
lods
sar
or
je
call
les
test
out
addr16
sub
xchg
hlt
or
lods
mov
mov
xlat
ds
testb
dec
in
cmp
out
jae
push
sub
imul
ljmp
adc
adc
mov
sub
out
cmc
movl
into
scas
xchg
fcomi
movsb
leave
adc
add
fimull
jmp
sti
jns
add
icebp
push
cld
lds
lret
add
sub
mov
mov
ss
inc
lods
xchg
stos
gs
out
inc
jg
xchg
sub
pusha
xor
xchg
inc
ret
fnsave
pushf
ds
pop
push
jle
in
mov
jae
xor
pop
jecxz
xor
nop
daa
dec
icebp
push
add
jae
push
jns
pop
int3
test
pop
cmp
inc
mov
push
and
pop
imul
aas
pop
shlb
adc
sti
sbb
rep
mov
sbb
and
shlb
push
pop
loop
pop
fdivp
fistpll
int3
and
stos
mov
pushf
sub
sbb
sub
popcnt
mov
mov
jnp
dec
test
xchg
out
fistps
or
adcb
sti
xchg
outsb
or
fimull
jmp
cmc
xor
mov
stc
cmpsl
lret
in
xlat
dec
cmpsb
insl
cmp
fildll
push
popa
xchg
cmpsl
pop
jbe
daa
cli
ss
adc
cmpsb
stc
je
lea
aas
sbb
pop
xchg
add
idivl
cmpsb
inc
loop
jecxz
sbb
rcrl
cmpsb
lock
lcall
add
out
jo
jmp
add
iret
and
pop
or
sbb
pop
rclb
sub
out
pusha
insb
xchg
push
push
add
pop
and
pop
or
xor
inc
xchg
pop
mov
dec
mov
push
push
movsb
call
or
dec
jo
notb
aam
dec
adc
xchg
mov
lret
pop
test
mov
xchg
cli
loop
aad
adc
sbb
add
icebp
or
jg
pop
fwait
out
dec
test
ljmp
jne
adc
test
jl
or
push
xchg
inc
xchg
xchg
fnstsw
rcll
out
fsubs
or
in
cmp
pop
fiaddl
and
pop
scas
insb
imul
sbb
mov
pop
xlat
faddl
loope
jne
ret
dec
inc
mov
pop
jns
adc
jmp
test
mov
test
mov
ja
dec
xchg
mov
dec
pop
lahf
sbb
mov
flds
lock
out
dec
xorb
je
pusha
lret
pop
pop
mov
pop
fnstcw
push
jo
add
jge
lds
mov
jecxz
test
std
std
xchg
push
pop
inc
cmp
mov
dec
nop
imul
xchg
sbb
pop
nop
rorl
dec
push
dec
xlat
leave
rorw
push
push
insb
out
in
stos
fs
add
push
sub
aam
mov
xchg
mov
or
mov
mov
jmp
xor
mov
dec
sbb
js
cmp
test
xchg
inc
jmp
pop
xchg
mov
js
imull
nop
inc
push
mov
in
cwtl
jmp
ja
mov
mov
pop
in
adc
mov
jg
test
fcomps
inc
enter
stos
push
les
mov
popa
push
sub
dec
cmc
inc
mov
sbb
int3
cmpb
dec
out
shll
incb
add
rcll
jb
xchg
ret
add
adc
lcall
stos
adc
sbb
mov
sarb
jns
mov
xchg
imulb
mov
push
pop
lea
push
add
scas
stos
lods
pop
les
adc
xchg
push
xchg
lea
je
int
mov
adc
je
clc
mov
dec
xchg
push
mov
inc
pop
lods
shll
xlat
jp
adc
or
pop
mov
insl
sbbb
nop
lcall
insb
dec
inc
ret
xchg
or
xor
dec
mov
mov
or
stc
xchg
pop
sub
dec
adc
inc
loope
cli
ret
cmp
push
pop
mov
inc
ret
jmp
call
add
mov
push
bound
loopne
mov
fsubrl
mov
out
jl
jmp
sub
fs
and
sub
sub
mov
rcrl
cld
mov
pusha
mov
sbbl
sbb
pop
jno
mov
and
xlat
cs
hlt
mov
aaa
in
popf
pop
stc
std
push
in
inc
es
pop
test
dec
pushf
out
ja
add
test
push
fisttpl
xor
stos
outsb
adc
mov
dec
jmp
jle
inc
inc
push
adc
mov
cwtl
shlb
sub
sbb
rep
mov
leave
adc
popa
loopne
mov
or
pushf
add
inc
pop
pop
ss
jnp
pop
cmpsl
call
loopne
jl
dec
data16
pop
insb
movsb
sub
adc
int3
movsl
pushf
cmc
xchg
fisttpl
sbb
movb
push
ret
sahf
adc
inc
out
add
leave
fsubrs
lds
sbb
clc
leave
enter
lret
pop
xor
fwait
add
enter
scas
shll
iret
fmulp
ja
lea
push
int3
fs
fs
adc
cld
insb
dec
sub
xlat
ds
mov
fbld
es
or
xchg
push
lahf
stos
out
mov
sahf
cmp
outsb
cmp
pushf
gs
mov
jae
xchg
aad
jnp
filds
fstpl
and
jg
in
shlb
dec
dec
inc
les
dec
ficomps
test
pusha
lods
jecxz
and
pop
out
sbb
das
jns,pt
push
dec
cmp
dec
popf
inc
jmp
pop
fadds
mov
cwtl
or
sub
push
aas
cmc
inc
int
mov
pop
xchg
ret
pop
pop
pinsrw
ss
test
icebp
icebp
int3
sbb
push
hlt
or
icebp
movsl
mov
loopne
dec
addl
push
inc
fcoml
inc
inc
push
mov
sub
and
std
cld
cmp
int
mov
jecxz
mov
fstl
mov
push
loopne
shll
push
push
add
andb
jo
and
jl
shll
mov
xlat
xchg
ss
leave
jne
mov
aaa
cmp
xchg
inc
xlat
mov
pop
aaa
out
roll
xor
or
mov
lock
add
cltd
fcoms
repnz
test
pushf
sbb
pusha
data16
cli
pop
cmp
cli
stos
mov
mov
inc
insl
xor
jns
or
dec
inc
aas
fstl
inc
movsb
adc
pop
add
pop
daa
xchg
je
lret
and
in
mov
testl
inc
inc
sti
push
xchg
sub
add
sbb
mov
out
mov
mov
fistpl
lea
xchg
add
inc
lods
ror
mov
out
es
sub
cli
jne
dec
js
in
mov
repnz
lods
fldenv
pop
out
adc
mov
xchg
push
jno
sbbb
repz
dec
aad
out
and
cli
sub
in
incl
inc
in
roll
push
js
jo
push
mov
cmc
mov
outsl
aad
clc
mov
pusha
xor
pop
js
jae
inc
sub
outsb
popf
ficoml
cli
pop
sbb
sbb
sbb
dec
pop
sub
repz
sbb
sti
push
mov
add
lods
xchg
inc
lds
adc
push
push
mov
mull
leave
adc
sbb
add
mov
sub
lock
sbb
iret
inc
push
stos
mov
sub
mov
sti
or
mov
sahf
inc
push
bound
je
movsb
test
sub
in
pushf
dec
mov
fsub
std
push
xchg
mov
dec
lods
xchg
jle
loop
add
out
stc
add
mov
gs
xchg
xor
xorb
outsl
adc
sub
subb
xchg
out
int3
int
lods
push
push
je
js
outsb
push
xchg
fs
pop
mov
pop
and
ljmp
inc
pop
ds
jb
jb
inc
int3
ja
pop
int
mov
or
hlt
cmp
or
sbb
daa
xchg
aaa
xchg
adc
add
ss
sub
in
sbbb
sub
mov
into
bound
sub
push
xor
stos
cmp
negb
pop
jle
mov
and
dec
sbb
mov
push
mov
pop
cmp
das
sub
pop
mov
or
popa
jge
dec
lret
mov
fadds
int
imul
dec
or
or
push
stc
rcl
les
jb
mov
lret
push
insb
sub
lret
inc
stos
pusha
jo
jne
adc
les
xchg
pop
jmp
in
addr16
ficomps
ret
mov
loope
iret
in
sahf
sbb
adc
and
xor
stos
stos
xor
cmp
int3
jg,pt
out
ret
pop
fldcw
mov
das
out
cs
jns
aaa
and
xchg
push
sarb
cmp
pop
pushf
test
cld
and
jle
loop
pushl
shrb
in
inc
shlb
pop
fidivrl
lods
sub
aaa
mov
lret
sub
sbbb
aaa
fistps
popf
stc
out
mov
mov
cwtl
jo
and
out
jecxz
fidivrs
or
sub
push
and
ja
cmp
ret
inc
shll
test
or
mov
dec
pushf
xchg
mov
mov
pusha
sub
inc
jecxz
mov
imul
clc
mov
rorl
jecxz
push
adc
xchg
cmp
outsb
mov
pop
shlb
ss
movl
fildl
mov
pushf
xor
sti
add
movsl
sar
mov
cld
add
imul
sub
roll
pusha
sub
ljmp
mov
rolb
negb
mov
pop
adc
push
pop
lods
jl
xchg
push
sti
mov
hlt
imul
addr16
add
popf
pushl
call
mov
and
movsl
cli
lods
push
popa
xchg
packuswb
inc
cmc
jmp
movsl
pop
sbb
dec
xchg
outsl
ret
insb
rcll
filds
movsl
das
xchg
push
xchg
and
fsubl
aaa
or
mov
mov
orl
xchg
out
js
dec
mov
adc
subl
mov
fcmovnb
jns
in
mov
fwait
mov
mov
testl
sbb
repz
or
xor
sub
adc
call
mov
test
inc
pop
pop
fcomps
inc
fldt
insb
fsubrs
push
mov
in
dec
dec
mov
stc
adc
add
sbb
stos
fnstenv
pop
popa
sbb
cli
xlat
roll
add
fisubl
pop
inc
leave
and
scas
jge
imul
iret
push
out
add
add
es
sbb
lcall
add
das
inc
xchg
int3
test
imul
and
imul
sub
pop
push
inc
arpl
cmova
gs
mov
adc
or
push
dec
clc
mov
mov
mov
jl
aad
dec
psrlw
dec
std
mov
or
ret
ss
or
mov
push
fwait
je
jl
lcall
mov
stos
scas
popa
repnz
mov
cs
imul
popf
push
loopne
iret
mov
sub
or
movsl
mov
mov
cmp
test
repnz
imul
mov
add
jo
push
inc
scas
jnp
testb
arpl
add
add
loop
addl
xchg
sbb
mov
mov
lds
lods
cmp
sub
or
decl
sarb
lods
cmpsl
jl
imul
and
push
jg
lret
mov
and
and
in
pop
or
cmp
mov
pop
out
outsl
dec
and
jecxz
out
add
dec
sub
aas
xlat
sbb
xor
imul
push
adc
sub
sub
push
int3
add
test
cmp
scas
cmpsb
std
dec
lahf
and
fmull
sub
push
fisubrs
cmpsl
jns
xlat
in
cld
sbb
inc
arpl
jecxz
push
sti
xchg
xchg
jmp
lds
andb
sarb
test
shrb
stc
push
pop
inc
mov
imul
push
out
popa
ror
push
push
dec
jns
xor
adc
leave
out
dec
xchg
inc
in
cld
incl
iret
rorl
adc
pop
mov
sub
jo
mulb
movsl
movsb
mov
push
xchg
pop
mov
inc
icebp
mov
xlat
push
ljmp
push
icebp
subl
nop
mov
mov
jns
jmp
in
hlt
or
in
ficomps
adc
insl
cmpsl
dec
ja
push
push
movl
std
or
dec
adc
orb
mov
xor
rcrb
pop
mov
dec
lods
popf
adc
paddsb
in
push
int
inc
ja
lds
addl
dec
mov
add
scas
sub
mov
rcrl
jno
rep
mov
jecxz
scas
pop
imul
adc
in
lret
mov
inc
div
xchg
inc
add
shll
mov
mov
jp
jp
sub
cwtl
or
inc
inc
mov
movsb
movsl
test
je
out
fucomp
das
pusha
and
mov
neg
scas
sub
aad
cmp
shll
imul
fidivrl
xlat
and
mov
xor
add
daa
xchg
cmp
outsl
mov
sbb
xchg
sub
mov
stc
xchg
mov
sub
mov
jbe
rol
movsl
mov
push
pop
outsb
jnp
fsts
cmp
xchg
add
divb
push
and
inc
pop
sub
inc
dec
xchg
lods
scas
jns
mov
jp
ss
pop
hlt
adc
cltd
lods
push
jne
mov
jmp
leave
xor
xor
cmp
aas
in
pushf
popa
cmp
icebp
bound
jecxz
jae
mov
xor
lret
orb
xchg
mov
cltd
outsl
sub
push
sbb
jl
mov
and
imul
test
pop
es
jl
cmp
stos
pushf
outsl
xor
daa
lret
adc
ficoml
sub
cmpsb
iret
mov
mov
iretw
movsl
sbb
fs
insb
xchg
mov
fstp
stc
push
xor
push
shlb
loope
push
repz
adc
push
and
fisubl
push
adc
xchg
push
lret
xchg
xchg
aaa
lret
pop
fstpt
jb
mov
or
ret
stos
out
fidivl
sbb
arpl
lock
cwtl
xor
add
sbb
rolb
int
xor
mov
enter
rorl
dec
push
sbbl
mov
push
inc
fucomip
sub
mov
xlat
xor
dec
repnz
cld
aad
xchg
push
jne
popa
repnz
adcb
push
xor
aas
push
out
leave
in
jle
inc
inc
incl
jp
enter
dec
idiv
inc
push
mov
pop
out
mov
sub
mov
test
orl
push
pop
fcompl
out
sbb
out
stc
push
mov
and
adc
divl
pusha
rorb
lret
incb
sub
mov
or
hlt
mov
loope
inc
sub
clc
enter
xor
xchg
in
out
cmc
dec
test
insb
mov
sub
xor
fisubrl
stos
fiaddl
lock
xor
ljmp
dec
mov
test
push
leave
repnz
cmp
jb
add
lret
sub
popf
fidivrl
movsw
cli
jge
retw
mov
and
add
icebp
setg
insb
nop
sub
jl
or
sub
pop
div
push
lea
sbb
pop
jno,pt
hlt
sahf
xor
int3
xor
and
lret
xor
shrl
mov
and
flds
ds
movsb
scas
int3
mov
loopne
loope
mov
stos
inc
pop
mov
mov
in
lds
gs
inc
cmp
adc
jmp
cmp
pop
jl
push
outsl
insl
adc
imulb
adc
and
dec
sti
mov
shll
mov
push
movsl
js
enter
lahf
lock
push
dec
dec
add
pop
mov
pop
jne
inc
data16
out
es
push
xor
xlat
fidivrs
xor
and
and
pop
sbb
fistps
push
imul
dec
sub
push
or
cmp
ficomps
pop
dec
mov
imul
aas
push
cli
xor
sub
mov
andl
loope
push
imul
pusha
ss
or
lcall
in
mov
or
sarb
imul
mov
jp
js
sbb
btrl
push
sbb
push
sar
inc
inc
das
cld
mov
dec
adc
pop
mov
repnz
or
and
dec
or
movsb
mov
push
les
lods
std
xor
pusha
stc
adc
xchg
jp
cmp
dec
sbb
and
mov
lcall
imul
dec
dec
ret
imul
cwtl
and
inc
das
movsl
add
fimuls
lds
test
fdiv
push
xlat
dec
cmp
inc
and
mov
mov
mov
push
push
add
pop
cmp
or
and
inc
xor
sbb
sbb
mov
mov
mov
inc
cltd
or
ss
sbb
mov
sub
adc
shrl
inc
inc
push
scas
call
ret
out
xchg
loope
adcb
lret
aas
push
fstl
inc
xchg
out
pop
iret
jg
addb
jnp
loop
jg
mov
mulb
ret
dec
pop
inc
bound
and
push
mov
mov
les
push
fwait
mov
adc
jecxz
pushf
lahf
adc
and
shll
fbld
fdivrs
mov
xor
dec
mov
test
test
mov
pop
cwtl
andb
cli
mov
aad
negl
add
mov
and
push
subb
mov
fistl
dec
push
loopne
or
xchg
sbbl
mov
push
leave
dec
adc
inc
popa
xchg
popa
dec
ret
cmp
add
mov
std
das
jo
scas
loope
cmp
sahf
push
test
push
sub
jp
wrmsr
ret
or
mov
lahf
loop
mov
in
xchg
adc
std
loope
cmp
ret
sub
jle
dec
sbb
fldl
aaa
cmp
cltd
inc
push
es
loope
xor
dec
adc
jns
shll
lahf
jle
pop
pop
push
cmp
push
dec
out
arpl
and
mov
mov
lret
xor
push
insb
data16
pushf
pop
cltd
and
push
mov
push
test
or
cli
daa
cmp
push
xchg
and
and
and
dec
mov
hlt
stos
pop
jecxz
test
sar
clc
in
imul
js
inc
mov
inc
inc
call
xlat
clc
push
push
adcl
jo
cs
shlb
hlt
pop
cltd
lret
and
fwait
scas
clc
pop
push
in
push
rorb
fstps
loopne
xor
mov
out
fwait
pushf
lret
dec
xlat
pushf
not
push
xchg
mov
ljmp
or
sub
push
jp
ffree
rcrb
xor
popf
xchg
xchg
iret
push
push
pop
push
ret
xor
mov
cmc
shrb
jl
imul
xor
mov
ret
pop
cltd
jmp
outsb
jecxz
outsl
mul
andb
stos
push
es
sahf
lock
dec
cld
xor
adc
cmp
pop
cltd
push
sub
stc
movsl
pop
sbb
sti
and
xlat
jne
das
mov
or
add
mov
shrb
daa
sbb
lcall
les
mov
and
fiadds
mov
cmp
mov
pop
cmp
shrb
out
daa
in
adc
repnz
cmp
and
cmp
dec
adcb
sub
rcr
cmpsl
mov
add
or
push
mov
dec
add
les
pushf
std
or
dec
xchg
into
xchg
lea
insl
scas
not
pusha
bound
xchg
mov
insl
das
inc
mov
into
mov
push
movsl
fisubs
xor
out
hlt
push
sbb
jae
pop
jbe
sbb
fwait
adc
sub
inc
mov
adc
leave
xor
add
xchg
outsl
testl
in
cmp
inc
adc
out
ret
mov
add
xchg
cmp
sbb
iret
sub
xchg
jge
jmp
pop
fnstsw
xchg
mov
pop
sub
cld
cmp
mov
les
mov
or
enter
pop
std
cmp
cmc
pop
adc
pop
fcompl
stc
inc
mov
jp
fnstcw
xchg
into
push
jno
test
in
cmp
sbb
mov
adc
bound
sbb
movb
push
mulb
mov
daa
fcoml
adc
pop
in
stos
into
cmp
call
loop
sti
repz
das
inc
push
adc
inc
inc
jo
das
pop
adc
ror
cmp
xor
sarb
sub
ret
imul
inc
loop
stos
test
or
adc
xchg
xchg
fstps
dec
subb
les
jne
jl
or
pop
fwait
call
mov
icebp
pop
roll
cmp
add
jecxz
xchg
lret
cmp
nop
xchg
mov
std
repnz
jge
cmc
cwtl
dec
mov
aam
scas
push
shl
push
les
mov
jbe
in
out
inc
mov
and
mov
imul
in
leave
imul
sbb
lock
pop
xor
lods
into
imul
adc
and
gs
adc
adc
iret
jle
dec
pop
mov
cmp
sahf
jecxz
jno
push
fidivl
pop
mov
xchg
add
sbb
jmp
inc
stc
pop
addr16
repnz
js
aad
or
pushf
bound
mov
mov
incb
pop
sub
ss
adc
lods
jg
add
pop
in
loope
popa
mov
les
out
mov
inc
mov
mov
pop
xor
movsb
pop
and
scas
or
sub
mov
ss
jl
jb
outsb
xchg
gs
push
xlat
mov
mov
inc
imul
dec
ret
mov
ret
es
call
cld
inc
cmp
and
arpl
xchg
dec
mov
inc
xor
repz
fs
push
loopne
mov
lods
cwtl
rorb
stos
xor
xchg
xchg
xor
add
or
push
or
test
mov
fstl
pop
icebp
cmc
mov
dec
sahf
sbb
mov
xor
pop
shl
arpl
hlt
out
rcrl
mov
mov
pop
jmp
mov
jmp
lods
cmp
push
cltd
orl
call
mov
sti
pop
mov
or
pop
loop
ret
stos
in
xchg
push
enter
sbb
hlt
out
mov
pop
dec
fisubrl
jmp
clc
outsb
mov
cmp
mov
shlb
dec
ret
repnz
push
dec
lcall
into
mov
and
clc
mov
frstor
out
xor
cld
cmp
inc
xor
cmpsw
std
insb
scas
out
xlat
cmp
adc
pop
outsl
xchg
push
dec
aaa
loopne
jb
gs
xchg
stos
das
rcrl
add
add
adc
stc
pop
leave
dec
je,pt
fucomi
mov
loopne
orl
ja
rorb
mov
push
popf
or
stos
icebp
xor
fisubs
or
std
xchg
or
jp
dec
orb
scas
scas
fwait
xor
sub
stos
mov
idivl
push
sub
pop
fists
xchg
xlat
cmp
fldenv
mov
pop
mov
js
addl
jp
xor
cmp
test
sbbb
fidivl
mov
lgdtl
push
mov
mov
ficoms
xchg
lods
outsb
push
rep
push
loope
outsl
sub
lret
shrb
popa
mov
inc
push
pop
push
ret
cmp
add
mov
add
push
fldl
adc
xor
shlb
into
cmpb
pushf
mov
leave
and
sbbl
cmc
xchg
ret
mov
push
sub
test
push
pop
add
and
movsl
mov
jns
ljmp
testl
sub
hlt
push
jmp
mov
pop
movsb
mov
push
loopne
push
hlt
iret
lcall
testl
aas
mov
pushl
xor
int3
mov
adc
fcmovnbe
es
mov
mov
sub
adc
shr
aad
mov
mov
or
push
leave
js
cs
repz
lods
imul
mov
scas
xor
mov
cs
or
push
push
pop
mov
ja
call
mov
fisubl
arpl
jl
sbb
push
inc
leave
push
mov
mov
mov
ljmp
jmp
mov
das
mov
rorl
inc
repnz
jecxz
faddl
jecxz
xchg
push
aad
pop
popl
test
dec
jo
sub
sbb
cmc
push
scas
xchg
cld
repnz
daa
or
sub
or
aad
dec
les
cmp
movsb
cli
xchg
push
stos
mov
jno
sub
hlt
push
test
shll
dec
fmull
mov
lods
mov
push
mov
sub
mulb
shl
adc
ja
ja
push
pop
imul
ds
and
lods
fsts
xor
mov
sarl
ret
mov
dec
scas
data16
jle
pop
test
aaa
jle
inc
mov
bound
mov
daa
pop
jo
xchg
dec
push
ret
faddl
punpckhdq
adc
cli
repnz
lock
dec
jne
mov
mov
xchg
and
mov
in
xchg
das
es
ret
setb
cmp
lods
es
or
pushf
sub
fs
lods
push
leave
mov
sbb
mov
aaa
xchg
jecxz
mov
pop
or
sbb
jbe
insb
les
xor
rol
test
mov
jns
mov
mov
sbb
push
jnp
mov
jmp
repnz
popa
lds
repnz
and
test
outsl
inc
inc
sbb
inc
or
mov
aam
lret
data16
push
pop
xor
xor
cld
ret
mov
out
jns
xchg
add
xchg
pop
sub
out
pop
jmp
push
xor
gs
push
adc
pop
lret
push
mov
pop
scas
lahf
mov
mov
or
dec
mov
lcall
mov
xorb
jg
xchg
lcall
mov
jb
out
fdivl
in
fdivl
mov
mov
cmp
add
xor
loope
lahf
std
inc
mov
ljmp
repnz
lcall
xchg
sub
loope
pop
scas
testl
mov
or
and
jno
sub
jl
dec
dec
es
out
les
sahf
mov
mov
loopne
xchg
enter
pop
out
out
iret
fwait
mov
dec
addr16
repz
sub
call
mov
repnz
or
popa
xchg
ror
dec
adcb
push
fucomp
test
repnz
and
dec
jmp
xor
in
sti
dec
xor
aas
stos
repz
push
dec
out
xchg
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
sbbl
shrd
shr
ret
mov
xor
addl
and
shr
ret
jmp
mov
and
loopne
mov
into
lods
lea
adc
push
xor
loop
out
mov
pop
shr
and
shll
outsb
in
shll
std
pop
cmp
stos
fwait
in
movsb
push
in
jbe
pop
mov
dec
or
imul
jp
inc
xchg
mov
pop
xor
cmp
push
adc
testl
add
jns
ds
push
leave
dec
rol
lret
push
add
cmpsb
out
push
das
mull
popa
out
lds
sub
cld
addl
sbbb
sub
cmp
test
cld
xchg
int3
adc
sub
das
shlb
pop
icebp
pop
cmp
dec
jge
sbb
push
popf
add
jmp
xchg
inc
xchg
ljmp
mov
pop
mov
arpl
and
lcall
movsb
jmp
and
mov
imul
iret
cmp
fwait
in
cwtl
movsl
push
das
fisttps
push
inc
or
in
jbe
mov
mov
or
sub
scas
adc
adc
mov
aam
pop
mov
cmp
les
hlt
add
pop
jmp
inc
mov
sbb
rolb
add
iret
stos
gs
inc
mov
out
enter
or
sub
pop
push
dec
jns
movd
sub
imul
sbb
stos
mov
mov
push
fstl
into
xor
xchg
lret
repnz
pop
jne
ja
mov
push
push
jne
aad
sahf
fidivrs
sbb
lcall
mov
aaa
or
iret
lret
and
cmp
inc
mov
fwait
aas
adc
bound
shrb
or
popa
mov
sub
daa
loop
pop
cmp
repnz
add
imull
push
sahf
sbb
push
and
mov
pop
fdivl
call
xor
clc
call
not
push
lock
sbb
sbb
push
mov
mov
mov
lds
out
outsl
insb
jmp
lcall
in
mov
jp
cltd
ljmp
roll
stc
xlat
into
xor
fwait
sbbb
mov
xor
jp
inc
out
add
call
mov
mov
dec
out
add
and
mov
sbb
xchg
push
jg
cmp
dec
fdivs
daa
int
fwait
xchg
lods
inc
call
push
and
lea
dec
out
ret
ja
lea
lret
mov
outsb
mov
nop
pop
aam
je
ficoms
dec
mov
inc
fucomip
mov
popa
mov
adc
outsb
pushw
cmp
fld
and
fcmovb
pop
push
mov
push
cld
xlat
sbb
inc
mov
mov
sbb
std
adc
mov
adc
adc
push
dec
dec
dec
in
loop
les
loopne
adc
mov
sub
mov
out
add
push
mov
mov
sbb
or
xor
movsl
rcrb
imulb
dec
nop
dec
fsubrl
test
ljmp
imul
or
cmp
mov
mov
loopne
std
adc
dec
and
push
add
mov
insl
and
xor
hlt
into
adc
adc
mov
lret
push
cli
imul
mov
add
mov
sub
mov
sbb
mov
fs
movsl
inc
dec
outsl
and
outsl
int
insb
pop
jbe
lea
add
lret
pop
nop
int3
icebp
mov
daa
testb
iret
pop
cwtl
repnz
jg
sub
mov
int3
and
cltd
ret
cmp
iret
insb
aad
clc
adcl
int
add
push
out
sti
cmp
jmp
aaa
xor
nop
adc
ja
add
jmp
sub
mov
sbb
push
cmp
mov
dec
xchg
lea
outsl
daa
hlt
mov
mov
les
inc
xlat
mov
mov
inc
call
cmp
fnstenv
push
dec
xor
fstpl
sbb
std
mov
xchg
mov
pop
nop
imul
mov
jnp
lahf
cmp
cld
nop
xor
cld
mov
mov
push
add
inc
jne
popf
idivl
mov
inc
pusha
jae
push
mov
into
jecxz
jmp
mov
xlat
std
cmpsl
in
pop
pop
mov
pop
repz
xchg
lods
push
push
arpl
mov
sbb
jle
dec
cmp
std
dec
mov
jae
out
das
iret
sti
setno
xor
ss
fbstp
mov
push
mov
lret
cwtl
sbb
lock
rorb
arpl
jmp
adc
aaa
and
jp
clc
pop
and
mull
xor
mov
push
xor
adc
mov
movswl
push
int
cmpsb
fwait
mov
es
or
pop
pop
dec
sub
fneni(8087
mov
mov
inc
jb
push
out
xlat
xchg
lods
mov
pop
adc
or
cs
dec
lret
cli
int3
sub
cmp
push
and
mov
jne
cwtl
pop
ret
xor
dec
xchg
pop
sbbl
scas
xor
pop
sbb
mov
lcall
aas
out
stos
rol
out
mov
int3
fcomp
shrb
pop
gs
push
push
and
enter
insb
test
mov
out
push
ret
sbb
imul
fwait
xor
out
mov
adc
xchg
leave
mov
cli
cmp
add
xchg
push
adcl
fstl
xor
inc
pop
and
sbb
pop
test
pop
jb
add
inc
je
xchg
sbb
jmp
mov
dec
push
shlb
enter
push
cmpsl
ret
lret
ja
or
push
mov
stos
pushf
inc
and
pop
push
mov
pushl
mov
aaa
test
je
insb
sub
insl
sub
jns
idivb
push
sbb
add
jmp
pop
push
fistpl
ljmp
adc
stos
xchg
mov
mov
repnz
sub
cmp
aad
enter
pop
repz
adc
fwait
add
pop
inc
inc
imul
sbb
lret
insl
call
push
fwait
das
sub
xchg
mov
mov
push
push
dec
xchg
aaa
pop
hlt
mov
lods
and
push
pop
aam
cmp
jle
iret
cs
in
dec
iret
push
arpl
jl
inc
dec
dec
shll
dec
ret
ja
mov
push
push
fdiv
jno
push
and
aaa
mov
std
mov
cmp
or
or
mov
cmp
in
mov
add
js
fists
sub
and
fs
inc
jle
xchg
test
dec
test
xor
lahf
sbb
je
cmp
decl
fs
aas
mov
dec
push
lahf
flds
mov
sti
cmpsb
loopne
stc
sbb
sahf
mov
xchg
cmp
xchg
mov
mov
xor
pop
stos
fcoms
scas
pop
out
data16
out
mov
loopne
dec
ljmp
jnp
nop
rorb
add
xchg
shlb
aaa
and
stos
test
cli
cli
push
cwtl
mov
inc
cwtl
jg
nop
push
shlb
rcrl
js
in
into
mov
pop
ss
xchg
jae
ret
mov
sub
fnsave
adc
sub
xchg
or
mov
pop
test
xchg
sub
adc
in
ficoms
pop
es
adc
mov
les
cmpsb
jmp
ja
push
pop
in
call
mov
or
popa
and
or
mov
jg
mov
push
cmpsb
frstor
out
push
mov
ja
cmp
and
sarb
xchg
and
fbld
cmp
mov
mov
shll
pop
cmp
pop
mov
xlat
dec
call
out
loope
addl
push
pop
add
push
repz
fwait
mov
loop
pop
pop
xchg
sub
adc
xchg
dec
inc
mov
add
adc
das
movsb
insl
aam
lea
push
aaa
push
das
out
add
push
mov
mov
test
pop
cmp
adc
dec
inc
int3
leave
push
xchg
cs
fildl
call
lods
ss
inc
fxch
fisubrs
mov
cmpl
jno
pop
xchg
and
ljmp
sbb
cs
sbbl
dec
cmp
pop
mov
fildll
cmp
mov
lds
sarl
shl
adc
test
in
mov
push
dec
or
xchg
rcrb
lods
test
push
insb
push
push
lea
dec
add
xchg
xor
sbbb
loop
cmpsl
inc
xchg
pop
jne
push
shr
std
pop
aas
lea
jae
lret
popa
pslld
adc
hlt
sub
in
andb
popf
lods
cmp
push
movsb
outsb
faddp
mov
push
adc
mov
aaa
stos
cmpsb
dec
popf
inc
mov
sub
je
loop
bound
int
loopne
sub
sahf
xor
mov
and
in
je
ficomps
pop
mov
test
arpl
sbb
push
call
mov
dec
fistps
sbb
push
push
mov
cmp
movsl
add
and
stos
push
cs
mov
outsl
sub
movl
pop
pop
cmp
push
xor
imul
push
dec
nop
insl
push
dec
sub
call
ds
loop
add
outsb
pop
rolb
jg
xchg
cmp
lcall
test
addr16
decl
xor
insl
pop
inc
test
in
adc
and
outsl
sbb
jns
int
test
jg
mov
lods
hlt
cmp
mov
sub
dec
dec
jg
fidivrs
mov
jo
fisubrl
cmp
leave
push
cmp
frstor
jbe
pop
pop
jecxz
xorl
xorb
fs
out
idiv
jno
dec
push
sti
aam
out
repz
and
push
sbb
insl
divb
popf
cs
je
aaa
movsb
add
das
and
pop
cmpb
aam
jle
sti
in
inc
xor
pop
inc
xlat
jecxz
push
test
out
sbb
inc
pop
and
sbb
stc
int
push
cmc
mov
cmp
shrl
jne
xchg
call
inc
orl
xchg
jns
mov
lret
nop
daa
rcrb
mov
je
sub
push
iret
push
pop
sbb
mov
xchg
div
pop
out
call
dec
sahf
pushf
pop
or
hlt
pop
mov
dec
leave
scas
in
out
in
pop
jp
jmp
mov
orb
push
movsb
jns
and
mov
mov
xor
test
aam
popa
mov
mov
sarb
pop
xchg
stos
xor
cmpsl
and
sub
insl
les
pop
fbld
aam
cmp
add
dec
pop
enter
es
sbb
rol
xor
mov
adc
add
mov
repz
sbb
pop
push
sub
inc
jge
out
jbe
cmpsb
xor
out
mov
or
ret
xchg
mov
adc
dec
daa
aas
outsl
lahf
cltd
xor
sbb
and
add
add
testb
hlt
and
mov
popa
inc
xchg
dec
jno
cmp
lods
xor
sub
fiadds
mov
mov
pop
mov
push
mov
loopne
jo
test
ss
orb
mov
nop
pushf
fwait
cmp
inc
in
stos
adc
jo
sub
mov
das
mov
filds
jecxz
bound
loop
out
lret
xor
adc
add
fbstp
push
lock
mov
repz
std
in
lods
sbb
cmp
push
insb
jp
sbb
jbe
sbb
xchg
adc
lret
push
mov
pop
push
lret
popa
popa
test
loopne
out
jle
xor
sub
mov
mov
and
mov
jecxz
out
xor
jno
mov
push
jae
stos
mov
lret
adc
sbb
push
cmp
jno
mov
mov
xchg
pop
in
mov
fcoml
cltd
mov
sub
out
mov
adc
adc
js
dec
inc
mov
or
pop
push
jo
mov
inc
scas
cmp
sub
int
mov
mov
inc
icebp
mov
or
mov
or
loopne
xor
mov
icebp
mov
rcrb
dec
xchg
test
mov
cli
add
jbe
jbe
mov
and
ret
mov
leave
add
repz
cmpsb
and
outsl
cwtl
push
icebp
mov
or
mov
out
fs
out
or
clc
cs
sub
test
jnp
sub
lcall
orl
repnz
addl
cmp
aaa
adc
pop
inc
pop
fmul
orl
cmpsl
fnstenv
out
ret
mov
jb
rcrb
mov
pop
inc
push
ds
test
cmp
pop
sbb
lret
in
mov
mov
adc
pusha
mov
jl
pop
stc
lcall
ljmp
push
add
dec
ja
sbb
nop
push
mov
jbe
xchg
jp
jl,pt
sar
rcll
mov
mov
std
scas
mov
mov
das
and
inc
mov
and
movsl
pusha
pop
loopne
pop
lods
xor
pop
pop
mov
pop
pushf
jo
sbb
mov
pop
mov
out
pop
clc
sbb
xchg
cmc
dec
mov
mov
outsb
push
mov
shlb
dec
pop
pusha
in
movsl
mov
push
push
rorl
push
test
popa
and
cmp
stos
int
sub
pusha
scas
and
imul
lret
and
push
xchg
cwtl
mov
call
xchg
pop
aaa
div
mov
inc
lock
xlat
jnp
jge
cld
xor
pop
mov
decb
es
add
int3
sti
jbe
lahf
jge
dec
mov
mov
push
inc
dec
iret
in
sti
mov
pop
jo
je
fbld
lahf
xchg
test
push
sahf
daa
scas
jecxz
mov
inc
inc
clc
popf
cmp
mov
rcrl
push
sub
icebp
aaa
cmp
jg
xor
nop
xchg
mov
mov
mov
push
dec
sub
mov
push
sti
imul
and
cmp
pushf
cmp
adc
inc
add
pushf
xchg
jne
sub
pusha
ss
mov
mov
in
push
int
xchg
insl
cmp
mov
in
enter
fcomps
ficoml
push
fadd
test
add
loopne
cwtl
imul
filds
push
fsts
subl
test
repz
gs
mov
pop
pusha
lods
pop
jnp
sub
adc
pop
fcom
cmovbe
or
repnz
fisubs
popf
sahf
jno
and
ljmp
pop
xor
pop
call
cmp
dec
xor
sbb
mov
sbb
add
jae
pop
cld
je
aam
js
lods
push
xor
test
pop
test
femms
shll
out
add
inc
xchg
pop
cwtl
mov
cmp
aad
orl
fwait
in
in
cmp
pop
loop
das
push
inc
movsb
adc
ret
push
ljmp
fcmove
mov
insb
fsubrl
loopne
in
js
test
adc
or
pmaxsw
filds
xor
mov
and
hlt
mov
mov
mov
adc
pop
stos
test
cmp
push
imul
mov
add
xlat
push
in
mov
test
fcomi
push
jg
lods
push
shlb
rolb
jmp
inc
call
in
je
out
stos
jg
mov
rclb
aas
mov
dec
dec
or
adc
push
adc
in
cmp
and
cmp
mov
arpl
and
sub
fs
xchg
jbe
push
lock
and
pop
enter
ja
sbbl
das
jbe
jne
sbb
sbb
cld
and
sbb
iret
mov
outsl
fildll
sub
ljmp
xlat
cmp
sbb
mov
mov
xchg
pop
fistpl
lds
xor
jp
xor
cmc
popf
mov
mov
sbb
cwtl
add
cmp
mov
dec
shl
ficoms
movsl
out
mov
mov
dec
movsl
mov
and
data16
popf
orb
dec
xor
daa
mov
and
fmull
fdivrl
in
ret
dec
inc
imul
xchg
sub
aad
mov
push
pushf
pushf
stc
jb
mov
jecxz
nop
cld
inc
or
xchg
int3
std
pop
xchg
cmp
mov
push
test
pop
aam
in
lcall
in
pop
mov
lret
aaa
sub
stc
jecxz
in
and
test
xor
mov
aad
cmp
inc
sbb
cmp
movsl
movsb
insb
push
jnp
mov
push
andl
inc
loope
xor
mov
scas
insl
push
xor
xlat
push
insb
mov
inc
daa
push
push
test
cmp
inc
jno
fcompl
inc
jmp
rclb
in
mov
call
adc
mov
hlt
rcll
rcll
add
adc
cltd
out
js
push
jecxz
mov
sbb
xchg
jo
leave
cmpsl
mov
mov
pop
and
fidivl
icebp
das
sbb
arpl
clc
popa
shlb
sarb
inc
ds
pop
cmp
out
icebp
fisttpll
cli
inc
xor
sbb
ds
or
bound
or
adc
pop
inc
sahf
cld
in
je
sbb
scas
out
mov
inc
inc
xchg
cltd
ds
pop
mov
cli
pushf
jo
mov
jle
sub
int3
add
pop
les
clc
jo
frstor
shll
xor
test
jle
mov
clc
adc
xchg
pop
push
das
inc
stos
dec
sub
test
movsb
lods
int
cld
fstpt
fwait
dec
mov
addr16
pop
push
mov
daa
jge
mov
popa
nop
sbb
mov
jmp
aas
push
mov
sti
add
and
pop
push
in
inc
add
in
jno
loope
icebp
xchg
mov
loopne
add
xchg
gs
xor
and
dec
jmp
pop
jno
mov
push
icebp
dec
scas
daa
adc
add
fldcw
iret
mov
lods
fs
jae
dec
pop
pusha
mov
inc
jns
push
cltd
xchg
loop
adc
push
js
js
ror
rorl
pop
movsl
xchg
pusha
scas
add
rolb
jmp
xchg
movsl
sbbl
int
and
xchg
movsb
push
stos
mov
scas
sub
sub
shll
dec
addr16
sub
cwtl
adc
inc
clc
push
jno
addr16
or
popf
in
mov
jno
jae
adc
xor
lods
or
xchg
push
mov
cmp
sbb
or
cmc
das
movsl
les
mov
popa
cmp
mov
pop
fstl
insb
mov
add
invd
inc
jmp
xchg
or
sub
pop
pop
popa
repz
in
icebp
mov
mov
inc
loopne
xchg
push
lds
push
xor
inc
jae
enter
mov
and
xor
mov
aaa
xor
sub
ret
cmp
cmpb
outsb
arpl
lds
adc
pop
dec
mov
lcall
mov
scas
pushf
push
add
sub
mov
popa
cmp
int
jo
stos
push
xchg
arpl
imul
cmp
daa
sub
repnz
inc
dec
mov
test
pop
aas
js
cltd
cld
lds
jbe
cwtl
adc
pusha
fmuls
test
bound
xchg
xorl
mov
fistpll
pop
std
bound
or
popf
xchg
shlb
pop
xchg
push
and
dec
adc
pop
inc
or
stos
mov
dec
mov
mov
adc
or
cmp
stos
outsl
cmpsl
pop
mov
adc
dec
or
mov
push
sub
push
lods
add
ret
stc
mov
mov
pop
outsb
inc
mov
inc
inc
push
ret
cmp
xor
sbb
fwait
dec
mov
movsb
add
mov
jno
fldt
jo
xchg
sarb
jg
std
pop
dec
aam
js
pop
cmc
cmp
pushw
mov
jp
or
js
lcall
shrb
push
int3
dec
sub
shl
fists
mov
or
mov
push
mov
daa
fxch
cmp
cmc
sub
push
push
loopew
dec
in
dec
xchg
jb
push
divl
call
jmp
push
mov
subl
pop
vpaddsb
cmpsl
mov
shrl
sbb
jmp
fs
jg
cmpsl
mov
sbb
adc
sub
sbb
data16
gs
mov
and
xchg
les
sarl
dec
test
dec
dec
shlb
jecxz
lock
inc
dec
pop
lods
sti
push
dec
leave
push
stos
mov
stos
xor
ss
imul
pop
into
and
sbb
pop
adc
mov
out
mov
fmuls
jns
ljmp
imul
sbb
sbb
or
jge
imul
jo
scas
lods
insb
shlb
aam
push
test
inc
jb
push
add
push
adc
pop
xchg
sbb
sti
mov
sub
iret
dec
cs
pop
cmp
jnp
or
xchg
insb
je
dec
ficomps
mov
dec
pop
fldl
jns
mov
aad
jnp
lock
push
cmp
inc
push
add
pusha
iret
and
xor
add
push
in
outsl
jbe
test
aam
insl
mov
cld
jmp
popa
cli
pop
sti
xor
scas
mov
cmp
or
inc
lock
jp
sub
cmpsb
adc
xchg
pop
nop
pop
push
add
jb
fwait
sbb
shr
out
stos
xchg
push
xor
bound
fldl
or
lea
mov
dec
stos
dec
loopne
or
out
frstor
out
mov
xchg
inc
ja
push
jl
fcomps
cli
or
rcr
inc
pop
sbb
xchg
hlt
mov
sub
xor
mov
cmc
adc
cmpsb
ret
dec
mov
shll
cld
out
cmp
in
sbb
fisubrl
fs
add
loop
jp
and
out
xlat
sub
stos
into
das
mov
xor
cmc
hlt
mov
adc
loope
sub
cld
push
mov
imul
mov
jns
clc
or
inc
or
or
stos
mov
and
jle
test
icebp
sub
loopne
xorb
push
mov
sbb
pushf
or
stc
adc
out
lock
cmp
jl
cmp
jne
out
cltd
and
mov
and
addl
out
mov
fcomps
fisubl
fldcw
fisubrs
push
cmpsb
xor
loop
jp
adc
test
imul
inc
mov
lock
fcoms
mov
imulb
out
mov
out
dec
ret
mov
mov
pop
mov
jl
push
mov
scas
mov
sbb
je
icebp
xor
stc
lods
cmp
sbb
fadd
mov
xlat
aam
popf
mov
sub
xchg
pop
xchg
mov
and
jnp
pusha
mov
mov
add
mov
in
cmpb
push
fnstsw
sub
ss
pushf
adc
xor
mov
mov
mov
mov
sub
push
into
mov
jp
fwait
sub
notb
add
lcall
lahf
xchg
imul
mov
dec
inc
enter
add
mov
sub
stc
dec
mov
mov
test
push
test
mov
xchg
push
sbb
dec
stc
xor
int
pop
and
ss
xchg
inc
mov
inc
and
or
sub
or
fs
sub
mov
addr16
sub
out
and
sub
scas
xchg
or
and
in
cli
push
pop
insl
subb
out
adc
mov
lock
pop
andl
add
cmc
cmpsb
lods
das
jne
jnp
cwtl
test
cmpsb
sbb
dec
dec
pop
sbb
fidivs
icebp
mov
adc
lret
hlt
mov
xchg
lea
into
push
mov
or
in
pop
xchg
js
in
jno
in
stos
mov
fcomps
inc
xor
scas
divl
in
je
sahf
movl
in
xchg
loopne
inc
sub
inc
shll
insb
insb
loop
sbb
adc
push
std
fdiv
dec
dec
cmp
cmp
int
sub
lea
xchg
mov
stos
mov
lcall
xor
incl
ss
enter
aam
sbb
psubw
and
jnp
imul
xchg
sbb
push
sahf
inc
gs
in
es
lret
pop
xor
pop
cmp
pop
js
mov
sbb
ss
or
andb
xor
jmp
repz
repz
sarl
dec
scas
and
shlb
cmpsb
nop
pop
dec
xor
pop
xchg
push
add
xchg
push
add
add
int3
cmp
cmpb
dec
aaa
jg
rorl
outsl
rcrb
shlb
loop
fiaddl
mov
aam
fcompl
push
fldenv
jbe
lods
xchg
fwait
sbb
dec
arpl
fisubs
add
sbb
sti
jns
fldcw
jb
cmp
xchg
fcomps
out
jmp
bound
or
loopne
xchg
mov
scas
arpl
cltd
loopne
sub
hlt
aad
mov
sub
pop
stc
mov
std
dec
stos
mov
shrd
in
inc
push
subl
and
testb
insb
movsl
push
push
ljmp
into
xor
push
mov
insb
mov
int3
in
inc
icebp
lcall
xor
mov
push
mov
and
rcrb
xor
test
fmul
mov
adc
sub
stos
andl
js
loop
sarb
push
pop
movsl
out
pop
add
mov
cmpsb
add
or
rorl
push
cmp
mov
test
pop
jbe
push
out
fildl
in
mov
mov
aas
je
fwait
mov
xor
aam
lcall
push
sbb
inc
inc
outsl
ja
jae
mov
mov
outsb
fistps
outsb
inc
cwtl
sub
test
rorb
lock
ds
cmp
out
or
ret
outsl
lods
mov
icebp
fsubrl
lods
and
imul
hlt
rcll
mov
cmp
adc
mov
jg
push
loope
jl
push
mov
sub
xchg
cwtl
mov
adc
ss
imul
out
xorl
jle
pop
add
xor
mov
push
or
pop
ret
je
bound
dec
mov
les
fmull
xor
mov
push
adc
fiaddl
jae
data16
and
adc
aam
pop
in
inc
jp
cwtl
repnz
scas
lods
and
ret
shlb
ss
add
inc
pop
outsl
or
mov
inc
fs
inc
xchg
iret
test
mov
popf
cmp
mov
lret
pop
cmpsl
jecxz
lret
lods
aam
outsl
aam
xchg
lods
push
add
pop
loopne
inc
js
and
lcall
mov
dec
jns
xor
ret
jmp
leave
out
add
sbb
fldcw
xor
mov
inc
idivl
sbb
add
sbbb
xor
out
pushf
push
xchg
xchg
jle
dec
mov
and
mov
fldenv
ret
xor
mov
daa
dec
dec
jno
movsl
and
sbb
add
std
sbb
pop
es
or
int
cmp
jle
cmc
dec
psubd
sbb
jb
scas
shl
insb
jl
lahf
inc
inc
xchg
leave
sbb
xor
push
fcmovnb
bound
shlb
xor
sub
insb
inc
mov
or
lds
lods
mov
shl
andb
scas
jmp
mov
sti
inc
push
dec
and
out
sar
xchg
lret
int3
fidivrs
adc
or
dec
iret
stc
outsb
lods
jge
fisubs
lcall
aam
pop
sbb
xor
xchg
add
push
ror
lcall
pop
and
leave
sbbl
xor
rolb
rorl
add
sbb
ret
push
pop
push
rorl
add
cmpl
call
scas
cmp
cli
loope
out
jb
sub
push
cmp
loope
cli
fmulp
adc
mov
into
mov
push
adc
mov
nop
aaa
data16
pop
mov
stc
xchg
clc
dec
ljmp
fyl2xp1
inc
add
cmp
push
arpl
test
inc
dec
hlt
and
and
ret
ljmp
push
addl
test
lcall
mov
enter
add
rol
push
mov
sub
sbb
movl
mov
orl
mov
movl
cmpl
mov
movl
not
not
jmp
mov
ja
push
push
call
or
mov
xor
xor
add
or
sbb
add
adc
movzwl
xor
dec
mov
movl
addl
movl
cmpl
not
movl
jmp
mov
mov
jne
pushl
call
inc
movzbl
xor
mov
or
neg
and
adc
xor
movl
add
movl
movl
cmpl
mov
mov
jmp
mov
movl
jb
push
push
push
call
add
movl
xor
xor
movl
mov
mov
cmpl
mov
movl
movl
jmp
mov
jg
push
call
subl
or
add
sub
and
xor
add
sub
mov
andl
mov
sub
mov
push
mov
sbb
mov
cmpl
movl
movl
mov
jmp
mov
je
pushl
push
push
push
call
orl
dec
adc
xor
xorl
xor
or
mov
andl
push
addl
push
notl
push
push
incl
call
mov
mov
xor
and
not
xor
and
xor
or
mov
sub
xor
and
cmpl
mov
movl
jmp
movl
jg
pushl
push
pushl
push
pushl
pushl
pushl
call
add
xor
add
and
add
mov
and
add
mov
jmp
movsl
add
mov
stos
and
sarb
jo
adc
adc
xor
and
ja
pop
cmp
repnz
addr16
mov
adc
pop
push
aam
popa
andl
inc
lods
andl
inc
inc
stos
sbb
in
jne
cmp
inc
nop
lock
or
cmp
lds
mov
dec
lcall
sbb
inc
mov
lods
je
dec
stc
xchg
dec
repnz
lods
addb
mov
cmpsb
push
sub
xchg
rol
sub
sahf
dec
daa
push
adc
adc
daa
addb
int
rorl
outsl
inc
dec
sbb
pop
mov
fbld
iret
sub
dec
fs
scas
punpckhdq
mov
and
jmp
enter
mov
movsb
and
insl
cmpsl
push
sbb
out
das
das
or
sub
sbbb
shr
stos
and
lret
call
sbb
loop
sub
mov
dec
loop
pop
add
es
std
pop
jg
test
sahf
leave
dec
cmp
sub
sti
jmp
in
out
stos
test
popa
mov
inc
sbbl
negl
xchg
popa
add
jecxz
cmpb
pop
out
mov
roll
test
jae
add
pusha
push
sbb
push
into
outsl
jb
jns
rcll
cmc
mov
xchg
lret
pop
outsl
stc
mov
and
xor
push
xor
daa
xor
loop
sub
push
xchg
xor
incl
sbb
push
outsl
push
mov
jle
sahf
mov
out
dec
pop
mov
ds
ret
ljmp
push
std
inc
dec
jnp
mov
add
jge
dec
test
movsb
cltd
mov
jb
test
xor
cwtl
mov
adc
push
add
inc
dec
sbb
divl
in
dec
fs
ret
pop
and
xor
mov
pop
dec
push
scas
lods
add
sub
or
adc
inc
lods
mov
adc
dec
jge
sbb
and
pusha
mov
jo
push
jg
pushf
xor
jge
mov
loopne
sarb
sahf
sti
enter
mov
jb
push
mov
cld
dec
sbb
mov
mov
pop
adc
or
dec
mov
jno
jo
test
mov
dec
inc
int
int
dec
xor
adc
cwtl
pusha
dec
pop
mov
aad
adc
loope
pop
cli
fists
aam
testl
fdivs
inc
insb
push
xlat
scas
hlt
jle
pushf
jl
outsb
jg
adc
or
lret
and
dec
or
pop
daa
jecxz
aam
push
stc
add
sbb
ja
test
sbb
sbb
orb
jg
out
enter
cmc
ljmp
loope
jae
in
xchg
dec
test
dec
mull
pushf
sbb
sarl
ds
cmp
retw
cwtl
sbb
sub
lahf
adc
les
mov
or
adc
mov
ljmp
push
movsb
sti
pusha
pop
repnz
stos
sbb
int
or
jmp
dec
inc
sbb
fstpt
cltd
into
xchg
cli
ljmp
jecxz
mov
or
mov
pop
sar
mov
pop
ret
mov
das
sub
and
lea
pop
loopne
pusha
push
jne
outsb
mov
fisubl
xchg
push
mov
sar
addr16
sbb
dec
mov
pop
dec
mov
xchg
rcrl
lock
sbb
enter
mov
push
and
addr16
cmp
dec
js
jns
gs
scas
loop
mov
hlt
insb
add
jge
sbb
jbe
jne
push
repz
daa
inc
call
repz
pop
cmc
movsb
push
push
loopne
add
fs
or
adc
pop
imul
dec
lock
inc
daa
mov
dec
sub
jle
pop
jg
js
pusha
dec
adc
fsts
out
add
les
and
and
mov
stc
xchg
cmp
mov
mov
adc
pop
sbb
stc
sub
fdivs
aaa
mov
cld
and
add
push
aas
sbb
sub
pop
push
mov
addr16
and
cld
adc
pop
sbb
inc
add
sbb
sahf
xor
loopne
cmp
add
cmp
inc
jb
or
dec
cmp
adc
cmp
dec
iret
dec
lods
cmp
cltd
fdivs
mov
sub
or
cmp
imul
scas
dec
test
lods
jl
pushf
cmp
rcll
aas
cmp
add
scas
pop
jns
cmp
aam
ret
jg
imul
or
nop
mov
imul
push
fwait
sub
fcomi
test
mov
std
mov
mov
movsl
fidivl
leave
mov
in
xchg
lds
pop
push
push
repnz
cmpsl
and
jae
fld
repz
cld
push
add
insb
pop
repnz
je
outsb
test
inc
repnz
mov
mov
shr
and
inc
arpl
aad
sbb
jbe
cld
push
hlt
cld
repz
aaa
and
dec
les
lret
cmp
mov
orb
xchg
mov
ds
jno
xchg
imul
jbe
push
jnp
inc
sbb
popa
xchg
cli
leave
mov
xchg
mulb
in
or
push
out
inc
push
mov
aad
cld
int
jbe
insb
ret
pop
sub
lock
ljmp
in
inc
xor
lds
mov
cmpsl
mov
insl
sbbb
xchg
jmp
xchg
icebp
mov
imulb
or
dec
pop
push
sarb
out
or
loop
jne
mov
fsub
xchg
jmp
or
out
push
push
es
sub
test
clc
mov
dec
add
pop
sbb
or
sti
les
bound
stc
push
leave
sub
mov
mov
and
fiaddl
xchg
mov
mov
sub
pop
xorl
js
fwait
aad
jge
sar
js
jecxz
rcl
popf
fs
cmp
int3
sahf
sbb
inc
xor
out
adc
push
cmp
ret
fisttpl
dec
dec
shrl
jnp
lahf
out
jbe
add
push
dec
mov
out
mov
pop
sub
push
dec
mov
loope
mov
xchg
insb
sahf
popf
sbb
popf
dec
sub
mov
out
ds
xchg
jbe
cmovno
addl
mov
lods
dec
cmp
mov
stos
sub
es
mov
cmp
int3
cmp
xchg
fistpll
movsl
mov
and
lea
mov
aaa
imull
lea
clc
stc
ret
pop
or
xchg
mov
push
sbb
mov
insb
bound
shll
lret
or
xchg
push
enter
cmpsl
lahf
sti
inc
popf
add
adc
inc
test
push
imul
sbb
sub
dec
in
mov
repnz
sub
hlt
add
loop
push
inc
add
jge
mov
xchg
xor
push
jb
test
xchg
jle
in
or
decb
mov
enter
dec
lahf
dec
repz
stos
add
mov
xchg
clc
jge
std
cmp
movsb
dec
xchg
xor
mov
or
mov
add
in
sbb
xor
ljmp
stos
test
sub
mov
jl
jl
pop
scas
or
dec
into
xchg
shrb
movsb
das
and
sti
jp
sbb
xlat
xor
sbb
pop
fistpll
bound
std
popf
addl
cmc
call
pop
add
inc
mov
insb
adc
testl
mov
jmp
hlt
inc
sbb
mov
or
and
lock
mov
xchg
push
inc
cmpsb
ljmp
lret
xlat
insl
fdivrl
jae
lods
cmpsb
jecxz
scas
loop
movl
jo
stos
aad
addb
outsb
nop
loope
xor
lahf
cmp
pop
test
mov
addr16
pop
inc
add
loopne
loopne
or
ficoms
jno
pop
lods
pop
fadds
lret
or
in
or
cmp
out
sbb
xchg
lar
cmp
jge
add
sub
jmp
jmp
pop
sbb
pop
add
mov
cmp
aaa
pop
and
pop
lcall
fcmovnu
push
cltd
add
fs
and
inc
popf
movsl
jns
xchg
mov
push
xor
push
xchg
ficoml
rorb
push
scas
stos
movsl
mov
jecxz
rclb
cwtl
mov
sbbl
jp
mov
divb
dec
xlat
pop
push
inc
movl
mov
sub
mov
sbb
xchg
je
daa
fcoms
imulb
pop
cvttps2pi
cli
test
rorl
and
es
mov
mov
mov
mov
sbb
int3
mov
daa
into
push
insl
dec
or
jbe
stos
insl
mov
push
push
andl
jbe
mov
repnz
aaa
or
out
filds
ret
adc
inc
loopne
rol
es
jo
pusha
pop
js
add
mov
mov
aam
and
pop
mov
idivl
iret
lods
cltd
pop
ret
or
test
xor
daa
xor
jmp
and
jmp
cwtl
cmpl
pop
mov
repz
outsl
adc
dec
jb
enter
test
mov
stc
xor
inc
pop
xor
icebp
xchg
lods
sti
or
rorl
scas
lahf
ret
push
xor
int
push
xchg
ret
xor
insb
jg
cmp
repz
push
mov
xorl
rcll
mov
or
scas
add
mov
lcall
mov
xor
pop
test
loopne
dec
adcl
mov
stos
push
jmp
out
rcrb
sbb
pop
sbb
push
inc
xor
mov
daa
xor
inc
sub
in
pop
ss
mov
pop
loopne
sahf
icebp
out
add
sub
push
das
imul
cmpl
lcall
rcl
movl
sbb
pop
insl
pop
fbld
mov
xchg
mov
enter
mov
movsb
in
or
repnz
add
and
mov
cli
subl
jp
or
add
pop
jnp
inc
lea
out
add
push
add
pusha
push
xchg
cmpsl
adc
add
cmp
jno
test
push
imul
mov
pop
mov
clc
pusha
popa
cmc
nop
frstor
pop
orb
jne
xchg
test
call
xlat
pop
fsts
mov
or
dec
inc
js
js
out
out
out
mov
sub
lret
jo
and
outsl
push
fmuls
mov
xchg
pop
xchg
rorl
lods
jecxz
sahf
lock
fwait
or
push
pop
cmp
and
sbb
adc
xchg
fwait
push
fbstp
les
das
sbb
mov
arpl
pop
add
or
add
and
or
inc
sbb
sub
lret
jnp
adc
add
hlt
incl
or
jns
sbb
jne
mov
xchg
mov
inc
mov
pop
or
cmpl
xor
jo
sbb
in
jns
jbe
mov
out
cwtl
pusha
jl
and
aam
repnz
mov
roll
push
pop
sub
or
out
xchg
rcrl
jnp
mov
adc
fstps
and
add
inc
sub
jbe
imul
inc
in
bound
jle
mov
mov
and
insl
push
ss
iret
ja
pop
pop
sar
hlt
push
fcmove
push
jle
iret
and
push
sbb
data16
ror
push
in
scas
mov
fcomps
pop
or
lret
sbb
imul
dec
pop
and
in
loopne
inc
popf
and
push
das
push
xchg
jmp
std
shlb
les
jns
mov
add
pop
pop
xor
adc
mov
popf
ljmp
scas
mov
mov
sti
push
mov
shrl
dec
adc
es
xchg
inc
jno
test
push
dec
stos
pusha
push
push
adc
cmpsb
cld
test
mov
int3
inc
cmp
mov
clc
dec
xor
cli
inc
xorl
lea
out
ljmp
sbb
frstor
sub
jnp
xchg
xor
lds
sbb
arpl
aam
fld
add
rcrl
cmpl
andl
in
sbb
sbb
test
sti
mov
mov
popf
xchg
je
pusha
inc
inc
in
push
call
imul
aas
shl
sbb
sbb
and
filds
push
jnp
int3
test
push
push
adc
out
sbb
jns
out
bound
pop
mov
jmp
or
pop
pusha
out
mov
pop
inc
and
sub
pop
ja
pushf
xchg
jp
iret
hlt
loope
lock
and
int3
xlat
js
xor
push
ljmp
dec
imul
xlat
and
jle
mov
cmpsb
sub
pop
push
pop
jns
ds
fwait
or
mov
sbb
call
icebp
adc
mov
scas
xchg
mov
nop
sub
adcl
int
outsb
xchg
nop
roll
aam
push
add
jl
insl
dec
cmp
xchg
es
cmpl
scas
mov
std
mov
pop
out
test
push
into
movsl
lock
or
xchg
fwait
cmp
out
popf
div
icebp
xor
cld
fwait
sahf
xlat
or
negb
mov
xlat
roll
xor
xchg
jns
cmpsl
xchg
in
popf
mov
aas
cld
cmc
or
xlat
aad
inc
jne
jg
xchg
add
pop
add
movsl
out
es
pop
pusha
pop
js
jl
popf
fcompl
push
mov
jge
dec
and
pop
xchg
cli
cmpb
adc
cltd
int
test
cmp
xchg
rcr
nop
rolb
je,pn
negl
sub
push
ljmp
test
aas
adc
cmp
enter
fldcw
leave
adc
xor
lret
insb
or
jmp
sbb
or
lcall
mov
add
xchg
imul
xor
dec
jecxz
cltd
cmp
lcall
arpl
mov
add
push
jo
mov
std
movb
mov
pop
cmpsl
xchg
sub
aas
push
mov
pop
ja
outsb
out
lret
xchg
push
push
adc
xor
rcrb
cmc
lock
loop
rorl
xor
fucomip
jge
xchg
mov
xor
ja
jno
dec
mov
cltd
dec
xchg
xor
shlb
aad
les
negl
jae
jp
enter
nop
movsl
adc
sbb
inc
stos
inc
or
mov
popa
pop
xchg
push
inc
xchg
movsb
jmp
sub
cs
and
or
outsb
aaa
mov
and
cmc
and
and
xorl
sarl
cmp
add
inc
cmpsl
mov
sub
mov
sbbb
cld
inc
fldcw
xchg
std
pop
or
pop
icebp
in
out
sbbl
and
pusha
jmp
xor
or
lret
jg
scas
clc
test
mov
jae
push
sahf
jl
inc
out
aas
push
sbb
jbe
enter
pushf
lcall
xor
dec
push
pop
jne
icebp
loope
lods
adc
test
sahf
out
sub
push
sbb
jmp
adc
cli
jmp
mov
sahf
lods
in
pop
pushf
adc
sbb
outsl
sub
fnstsw
xlat
push
mov
xchg
repz
sahf
cmp
dec
cmp
pop
scas
fsubl
cltd
mov
mov
push
jae
scas
pop
int
inc
jnp
subl
lock
or
add
insb
or
add
xchg
adc
sbb
sub
out
jmp
xor
loope
stos
jne
mov
pop
aaa
pop
getsec
leave
push
rcrl
rclb
mull
dec
ret
jecxz
mull
std
sub
lret
jb
xor
pop
inc
sbb
push
out
xchg
insl
mov
adc
dec
add
mov
sub
iret
sub
test
xchg
fsts
xchg
add
adc
mov
dec
dec
incl
push
jo
outsb
mov
push
pop
cld
mov
inc
push
dec
test
mov
pop
ret
mov
jnp
lret
and
adc
cwtl
lcall
jl
dec
cmp
fwait
subb
jae
sub
or
mov
ret
push
pusha
cwtl
pop
push
push
add
popa
lcall
or
mov
sub
xor
aas
jmp
push
cltd
ret
addr16
lds
mov
cld
cmpsl
cltd
sub
lret
xchg
jbe
clc
arpl
repnz
dec
push
inc
mov
loopne
add
fildll
push
loope
out
mov
inc
iret
pop
je
out
mov
js
adc
xchg
push
push
sbb
or
xchg
pusha
lahf
dec
fwait
dec
cmp
jge
in
jg
sub
and
pop
lods
add
push
repnz
push
int
mov
dec
push
mov
in
sub
xchg
cmpl
push
adc
repz
xor
rclb
adc
outsl
pop
push
mov
enter
imul
and
adc
imul
pop
out
pop
pusha
and
ja
push
pop
sub
call
cltd
mov
sub
mov
mov
outsb
jo
andl
repz
fisubl
jmp
mov
cmp
outsb
push
cmpsb
mov
aam
in
cmp
push
aas
ljmp
sub
dec
dec
xorl
dec
dec
xchg
mov
mov
dec
fbstp
ja
pop
dec
inc
add
cmpsl
pop
pop
test
mov
in
jne
divl
push
js
adc
out
add
repz
pusha
push
gs
je
scas
div
cmp
in
pop
inc
adc
sub
mov
xchg
adc
ja
add
cwtl
jnp
jnp
mov
ror
cltd
sbb
cmp
cmpsl
ljmp
pusha
adc
outsb
adc
mov
movsl
insl
enter
lods
aas
lock
rorl
ret
jbe
mov
sbb
in
hlt
cmp
xor
jg
add
jnp
pop
daa
loop
xorl
aad
lret
movsb
mov
mov
outsl
scas
inc
add
mov
call
dec
adc
jns
jo
adc
stos
mov
sub
mov
into
inc
inc
lds
pop
das
in
aaa
sub
sub
adc
addl
add
adc
push
dec
jb
mov
pop
pop
pop
out
repz
fwait
dec
mov
es
jnp
xor
push
shlb
test
sbb
mov
inc
mov
pop
jbe
or
mov
cwtl
int
sub
lcall
mov
jbe
add
mov
loopne
bound
inc
sbb
lcall
or
mov
mov
jecxz
mov
popf
pop
subl
cs
mov
mov
addb
testl
mov
mull
inc
add
nop
stc
or
or
aad
fcmovnbe
insl
lret
shlb
adc
stos
outsl
xchg
mov
mov
ljmp
sbb
cs
add
fisttps
je
pop
out
ds
scas
loop
inc
int
int
ss
and
mov
push
mov
inc
rcrl
inc
jbe
movsb
sahf
sub
in
mov
sbb
mov
gs
fsubrs
pop
sub
outsl
out
jb
xchg
xor
call
add
mov
insb
mov
sbb
cwtl
js
adc
jnp
ja
sbb
nop
cmp
sbb
xor
dec
push
lret
adc
sbbl
dec
or
rorb
ret
mov
add
and
adc
aad
mov
sbb
bound
out
sbbb
or
aas
out
add
pop
cmpsl
leave
sbb
xor
push
cltd
out
js
insl
imul
mov
imul
cltd
icebp
cmovno
fistps
int3
lahf
jmp
jnp
inc
out
jg
inc
fdivrs
sub
add
sub
add
add
js
pop
ret
pop
insb
fnstcw
push
pop
testb
cmp
jg
push
icebp
mov
stos
mov
int
lret
mov
int3
pop
xchg
sarl
cmp
xchg
mov
mov
lods
push
ja
das
test
gs
fsubl
push
orb
jae
test
in
adc
dec
test
push
push
imul
mov
lods
lret
out
fldt
sbb
lods
jns
xchg
mov
adcl
movsl
and
outsb
mov
mov
inc
pop
and
iret
addr16
out
pop
or
lahf
mov
jne
cs
xchg
in
repz
pop
xor
adc
xchg
fisttps
xchg
mov
jbe
das
mov
fxtract
xor
push
sbb
rcll
mov
or
sub
add
mov
mov
or
in
imul
mov
mov
icebp
pop
xor
call
jno
bound
rcrl
ss
or
inc
mov
shll
xor
adc
xchg
cmpsb
or
sub
mov
sbb
outsb
pusha
loope
flds
cmpsb
repz
dec
gs
dec
xchg
mov
cmpsl
fdivl
adcl
call
test
out
push
xor
call
in
or
sbb
call
mov
and
push
jmp
jne
add
cmp
enter
mov
inc
xchg
pop
cmp
xchg
cmp
cmp
cmp
push
inc
jmp
mov
cwtl
xor
and
inc
ljmp
fnstsw
mov
sbb
faddl
imul
insb
sub
les
xlat
xchg
inc
mov
mov
stos
out
lods
adc
popa
lahf
gs
xorl
add
adc
xchg
xor
sbb
popf
mov
adc
inc
pop
leave
mov
orb
sbb
mov
mov
mov
out
cmp
daa
dec
inc
ljmp
cmpsl
fwait
pop
and
add
mov
hlt
sarb
sbb
mov
test
cmpsl
pop
push
mov
ret
repz
mov
cmpl
shrb
mov
sti
push
arpl
shll
add
dec
enter
cwtl
dec
sub
in
test
loopne
cli
dec
sub
adc
call
outsl
aaa
cld
loop
mov
fisubl
scas
std
cli
pop
mov
lcall
dec
mov
xchg
ds
mov
cmp
lods
lahf
xchg
dec
sub
xchg
fwait
es
sti
inc
xor
fidivrl
enter
or
push
sub
sub
enter
cmp
out
pop
or
lods
out
out
ss
sbb
ja
and
sub
jnp
paddusw
cmp
cwtl
aas
mov
push
cwtl
call
push
pop
mov
dec
push
rcrl
pushf
or
lods
js
and
dec
clc
jne
inc
lahf
sub
ljmp
lods
push
sbb
shr
dec
and
out
inc
jne
cwtl
cmp
loopne
nop
jns
int
dec
aad
jp
push
sub
mov
addr16
xchg
jmp
pop
mov
rcl
movsb
mov
or
sbb
dec
and
xchg
lret
insl
sbb
fs
inc
or
pop
push
adc
sub
xor
insl
movsb
cwtl
sub
jg
adc
xor
jmp
xor
inc
push
ss
mov
inc
sbb
jp
or
cmpsb
adc
or
nop
xchg
xchg
rclb
notb
pop
in
push
sub
mov
add
inc
dec
dec
stos
sti
loope
std
js
adc
xchg
dec
jb
dec
push
and
or
xchg
push
adc
pop
fistps
inc
ljmp
loopne
popa
pop
out
cli
dec
push
and
inc
nop
ret
fwait
jne
xor
xor
and
loope
aaa
adcl
push
pop
and
push
mov
rcrl
mov
out
test
insb
add
sub
dec
adc
push
jp
shrb
neg
pop
dec
dec
mov
push
pushf
das
sub
sub
jb
outsb
notb
es
lods
inc
ror
sub
and
cmpsl
scas
pop
and
mov
rorb
adc
xor
out
xchg
push
add
mov
call
pop
adc
fisubl
pop
mov
dec
pop
pop
enter
lock
fisubrl
neg
outsb
leave
mov
xchg
push
nop
ret
insl
popf
shl
std
sbb
rorb
mov
negl
jmp
xchg
push
mov
pop
cs
mov
jns
aam
or
sbb
pop
xlat
adc
into
jmp
and
adc
loopne
or
loopnew
mov
jl
jb
cmp
in
pop
mov
movsl
adc
into
mov
sbb
mov
xchg
xchg
ret
lea
ljmp
adc
in
repz
xchg
fs
lods
mov
fildll
or
dec
dec
cmp
cmp
sub
sub
aad
std
adc
test
out
mov
xchg
push
dec
push
je
adcb
sub
or
xchg
jl
cmp
negl
adc
sarl
or
out
mov
shlb
inc
dec
mov
or
sbb
pushf
xchg
out
lods
shrb
outsb
add
adc
xchg
lods
jne
pop
and
popa
rorb
mov
rcll
mov
rolb
test
cmc
and
pop
divb
lods
pop
dec
fs
clc
pop
or
inc
or
add
jnp
mov
sar
xchg
adc
enter
push
pop
mov
test
push
push
xchg
ja
sub
ljmp
icebp
push
or
jl
je
jo
call
ud1
ds
and
pop
mov
pop
jp
scas
into
dec
das
jb
je
jns
cmp
insb
jecxz
fs
mov
mov
jno
adc
xlat
cmp
rorb
popf
mov
xchg
xor
sbb
mov
in
pop
and
or
hlt
jl
push
sub
je
frstor
std
pop
loopne
jecxz
pushf
pushf
mov
cmp
dec
icebp
mov
push
sub
shlb
fldenv
es
inc
mov
or
add
push
inc
sub
lea
sbb
mov
push
adcb
dec
mov
dec
mov
popf
mov
pop
inc
cli
lcall
hlt
mov
nop
faddl
shr
test
pop
aas
scas
adc
repz
inc
test
xchg
adcl
lret
cmp
mov
addr16
jno
add
scas
sahf
lds
mov
pop
lods
or
mov
inc
and
loop
sarb
sbb
add
push
lea
mov
sarl
inc
int3
pop
push
and
and
add
test
cmc
es
or
std
int3
mov
rcrl
out
call
pop
fsubrl
cmc
jns
aam
sarl
ret
xchg
add
jnp
mov
cmp
mov
sub
push
cmp
arpl
push
inc
sub
clc
pushf
cmpsl
adc
stos
add
lods
jae
fnstsw
js
xlat
incl
mov
mov
cmp
subb
inc
scas
scas
btc
sbb
mov
mov
pop
scas
push
mov
rclb
jg
push
dec
cld
push
inc
rolb
push
pop
mov
cmpsl
aas
insb
leave
sub
fidivs
mov
mov
add
sub
xchg
sbb
and
out
sbb
icebp
dec
fnstenv
push
mov
or
or
xchg
test
in
shll
arpl
mov
scas
test
mov
xchg
push
add
mov
test
cmpl
shlb
lods
les
js
jecxz
shlb
fiaddl
mov
fwait
jmp
out
xor
sahf
jne
jbe
notb
outsl
iret
imul
cmp
movsb
and
cmp
into
movl
cmpl
movl
mov
mov
jmp
mov
je
push
push
pushl
pushl
pushl
call
mov
mov
sub
xor
xor
xor
sub
andl
add
mov
adc
mov
movl
inc
movl
or
movl
cmpl
mov
movl
mov
jmp
movl
mov
jl
pushl
pushl
push
push
call
xor
movzbl
adc
mov
neg
adcl
sub
cmpl
mov
movl
movzwl
jmp
mov
jl
call
andl
adc
or
neg
sub
add
mov
mov
mov
mov
add
push
adc
push
and
and
push
push
call
mov
mov
cmp
ja
jb
cmp
jae
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
or
or
add
adc
xor
xor
add
mov
adc
mov
movl
movl
movl
movl
movl
jmp
add
insb
shrb
sbb
jbe
push
push
mov
adc
adc
aam
sbb
jg
leave
jo
clc
fs
mov
mov
rorl
sbb
inc
sbb
fstl
adc
in
rcrl
fsub
mov
mov
pop
push
xchg
push
cmp
outsb
xchg
push
xchg
loope
mov
or
js
xor
add
or
call
insl
and
push
popa
or
inc
sub
fbld
xor
fucomip
and
mov
sahf
sbb
repz
out
std
ja
inc
popf
das
test
js
dec
add
bound
add
cmovge
sbbl
fsqrt
sbb
push
data16
cmc
std
jno
add
add
mov
sbb
cmp
jg
or
lock
cld
fstps
pusha
loop
shlb
xchg
lret
dec
mov
fwait
test
in
icebp
scas
test
mov
ret
mov
or
or
inc
out
or
adc
sti
sub
in
or
mov
cmc
or
ss
imul
outsb
jg
sub
mov
in
cmp
arpl
repnz
inc
cmpsl
add
pop
outsb
pushl
cltd
loopne
cmp
pop
jmp
clc
push
push
dec
jbe
test
scas
xchg
pop
pop
push
mov
cmp
out
lret
mov
jne
dec
pop
js
popa
xor
mov
sbb
lock
pop
stos
xchg
push
icebp
adc
insl
cmpsl
in
adc
inc
jg
ljmp
xchg
and
mov
ret
stos
loop
fiadds
pop
jbe
inc
enter
scas
test
movsl
dec
fs
add
inc
mov
repz
jns
mov
xchg
mov
js
insl
roll
cld
mov
or
std
insl
dec
mov
sbb
xchg
dec
int3
les
arpl
or
nop
sub
pop
xor
gs
jne
cmpsl
ja
lods
pop
sbb
test
inc
stc
dec
test
stc
mov
ja
bnd
jbe
stc
xor
pop
or
or
in
jle
shlb
jns
loopne
scas
add
or
and
adc
adc
cmp
rolb
andl
ret
xlat
fsts
jno
daa
test
push
push
pop
dec
fldenv
cmc
js
dec
mov
add
leave
mov
xor
fwait
cwtl
add
mov
iret
mov
in
jno
aas
pop
push
loopne
shrb
loopne
enter
fisttpl
out
push
test
push
mov
mov
cmp
dec
popa
xchg
mov
jae
ret
mov
sub
push
sub
cli
rorl
data16
xchg
in
leave
aad
xchg
and
sbb
and
and
movsb
int3
add
outsl
and
cmp
test
adc
roll
int3
push
sti
mov
dec
adc
call
mov
xchg
ss
mov
stos
aam
xchg
stc
push
shr
std
fstl
pop
daa
push
mov
mov
jle
daa
sub
dec
icebp
sbb
mov
popf
sahf
out
out
sbb
push
mov
mov
mov
pop
cli
loope
insl
sub
aas
pop
sbb
push
outsl
add
in
push
xlat
jo
jecxz
pop
mov
cmc
mov
lahf
cmp
sahf
push
movsl
jb
repz
loope
push
stos
push
sbb
cmp
adc
mov
sub
lahf
lock
sub
push
jle
mov
mov
xchg
jne
aam
dec
stc
aam
push
sub
push
inc
and
xchg
cmpsb
pcmpgtd
mull
jp
jne
outsl
sbb
dec
in
push
hlt
popf
adc
dec
mov
push
fwait
or
adc
sub
push
fisubrs
pop
aam
cmp
repnz
inc
dec
ja
daa
repz
and
mov
sahf
cld
mov
push
cmp
jmp
fs
repnz
cli
movsbl
sbb
push
sbb
clc
ljmp
dec
mov
dec
call
sarl
add
jbe
sub
adc
dec
xor
jle
mov
std
repz
xlat
leave
jge
ja
adc
shrb
les
js
sub
xchg
hlt
std
loop
jecxz
inc
jno
out
add
je
iret
push
into
sub
ljmp
out
mov
cmpsb
lret
out
pop
adc
dec
xor
test
add
sbb
fwait
mov
sbb
leave
aas
jl
into
push
xor
xchg
add
pop
and
rolb
jmp
iret
mov
xor
scas
cmp
push
clc
and
inc
mov
add
cmpsl
or
sahf
mov
je
jb
mov
addr16
push
mov
add
and
int3
mov
sub
shlb
test
sbb
test
lock
sbb
loope
testl
loopne
or
es
pop
out
mov
popf
popf
mov
dec
mov
dec
inc
bound
lret
mov
dec
push
aam
cli
sahf
sub
pop
mov
shll
push
sbb
xchg
cltd
sarb
push
shll
or
jl
jo
int
pop
jne
add
mov
mov
shl
mov
gs
clc
mov
sbb
call
inc
sbb
aad
into
xchg
pop
frstor
divb
jns
or
pop
cs
ljmp
adc
enter
nop
je
insb
out
jmp
test
ss
mov
sbb
imul
mov
xor
jp
add
aaa
imul
sahf
push
addb
inc
loopne
stos
daa
shrb
mov
and
sbb
mov
mov
adc
xor
push
mov
int3
cmp
xor
mov
lret
pop
repnz
leave
andl
and
jno
cmp
loopne
pop
sbb
aaa
sbb
and
xor
or
out
insl
cmp
out
xchg
das
add
mov
outsb
lea
xor
fidivrl
pop
add
dec
dec
and
jae
leave
aas
fimuls
jg
repz
lods
or
mov
loop
inc
mov
mov
in
cmpb
or
add
in
test
icebp
xor
add
lret
dec
js
cmp
mov
mov
push
adc
mov
inc
iret
pop
clc
xchg
stos
sbb
hlt
mov
mov
xchg
add
mov
enter
rcrl
ljmp
and
mov
push
sub
ljmp
je
lcall
inc
or
out
sti
int3
popa
sbb
lea
dec
inc
stos
dec
fidivl
cmp
shlb
das
roll
pop
add
cmpsl
fcomps
outsl
dec
push
or
sarb
movsb
xchg
in
lea
popf
push
dec
jmp
cmp
cld
pop
cmp
xchg
lods
pop
rorb
je
aad
add
adc
loope
scas
xchg
mov
in
insb
movsl
push
inc
sub
sbb
jle
mov
sahf
pusha
insl
add
fcom
scas
sbb
js
imul
test
adc
xchg
test
sub
fsubrs
cs
lea
lods
inc
inc
xor
aad
icebp
hlt
mov
call
filds
std
addr16
ds
push
mov
movsb
rclb
mov
cmc
inc
inc
decl
xchg
es
dec
add
or
sub
fcomps
or
icebp
movsl
cmp
pusha
test
inc
jge
fistpll
cld
jno
int3
mov
outsl
pop
divl
icebp
jae
mov
inc
fdivr
add
ret
addr16
add
clc
dec
add
cmp
mov
jnp
dec
mov
and
inc
xchg
mov
imull
call
mov
enter
xchg
fstps
adc
adcl
xlat
rorb
gs
jmp
decl
aad
cmpsl
or
pop
or
sub
ret
and
fs
adc
ret
wrmsr
mov
inc
loop
mov
sti
ljmp
fs
or
dec
sub
or
dec
or
mov
jecxz
pop
jo
xor
iret
xlat
pop
jns
iret
addr16
jmp
aas
int3
and
iret
leave
jnp
popa
push
adc
scas
shll
inc
in
cmp
insb
addr16
adc
jle
dec
sub
pop
jo
lds
cli
out
mov
popa
inc
add
mov
mov
jmp
adc
mov
add
or
ficomps
add
jbe
out
mov
js
jge
nop
rcl
sub
push
fnstsw
xlat
cmp
movsb
mov
out
push
scas
mov
cmp
jne
mov
mov
push
cmpsl
out
andl
enter
notl
sub
out
pop
mov
adc
xor
mov
jle
cltd
adc
mov
jns
lcall
insb
or
and
xorb
inc
fistpll
loope
pop
adc
lds
call
push
jecxz
mov
test
sbb
aad
outsb
pop
mov
jle
mov
or
mov
test
push
mov
hlt
ret
mov
cmp
cmp
js
xchg
pop
data16
cmp
jl
pop
and
cmp
pop
loopne
das
jmp
sti
fimuls
cmp
mov
leave
mov
enter
insl
lock
jg
push
mov
sub
mov
xor
fisubrs
int
test
cmp
jo
movsl
xchg
lret
enter
pushl
mov
fidivs
out
shlb
mov
enter
mov
jo
jo
and
xor
mov
sub
mov
pop
clc
mov
ja
xor
cmp
leave
decb
push
sbb
push
xchg
pop
pop
and
jl
loop
mov
jg
dec
lods
jnp
xorb
lret
inc
js
loopne
add
or
movsb
hlt
push
jnp
addb
dec
and
mov
mov
mov
cmp
js
pop
and
fisubs
mov
push
outsb
jle
jp
lea
out
addr16
repnz
mov
jno
movsb
imul
xchg
ja
mov
pop
or
fcoml
dec
addr16
icebp
mov
je
mov
lcall
insb
stc
bound
inc
lahf
test
dec
lahf
push
loopne
mov
das
dec
xor
mov
push
add
and
xor
cli
dec
add
sub
rcr
cwtl
mov
inc
and
jle
push
data16
inc
mov
xchg
ret
movsl
push
lret
enter
lcall
xor
or
pusha
add
js
cwtl
add
int3
sbb
pop
imul
adc
dec
pusha
outsl
adc
scas
insb
push
jne
dec
xchg
dec
or
xchg
add
jmp
adc
mov
test
xor
mov
and
xor
int
cmp
add
pop
fiaddl
cmc
xor
into
cmp
cltd
ljmp
clc
data16
loopne
adc
stos
loope
daa
or
and
ret
or
inc
es
cmp
sbb
jmp
cmpsl
sti
lods
add
push
mov
loopne
fstp
int
xchg
fmuls
test
sbb
sbb
mov
aaa
cli
fdiv
or
mov
movsb
jmp
ja
fsubrs
adc
add
shll
and
test
mov
or
pop
rcrb
pop
cmp
xchg
xorb
subb
les
in
xchg
dec
aad
jl
or
push
inc
and
cmp
jl
dec
insl
lea
ret
adc
mov
cld
pop
insb
inc
cmpsb
cltd
fsubl
xor
sti
inc
ja
inc
cmp
jp
pop
or
xor
xor
ficoml
imul
mov
inc
in
adc
adc
pop
cmp
mov
out
or
add
pusha
xchg
sbb
sub
xchg
mov
out
lods
or
addr16
pop
leave
mov
je
lret
aaa
out
xchg
jle
mov
mov
xlat
mov
js
into
sahf
push
add
movsl
test
jp
leave
fst
ljmp
loop
pop
jae
loop
and
cmp
rcll
popf
fisttpll
mov
inc
aad
scas
ds
popa
inc
shll
cmp
xchg
adc
loopne
ss
pop
xor
sub
inc
cmpsb
andl
insb
inc
inc
leave
or
or
inc
push
out
ds
loope
sahf
jae
into
in
adc
sub
jns
push
dec
cmp
cmp
out
and
out
popf
jae
sti
leave
out
ljmp
mov
mov
xor
mov
cmp
std
mov
add
xlat
scas
push
gs
sbb
cmc
push
sbb
scas
jge
mov
mov
test
or
mov
les
xchg
loope
imul
ja
mov
out
es
dec
jl
sbb
jbe
stc
pop
sahf
jg
popf
adc
int3
pop
sbb
hlt
cltd
cmp
and
push
pop
jb
dec
push
mov
push
and
fcos
iret
lcall
stos
cmp
outsl
cmpsl
mov
lret
adc
in
sub
shrl
mov
rcl
pop
or
jmp
mov
out
ret
or
sbb
movaps
mov
out
push
iret
lea
cwtl
scas
inc
ss
mov
daa
pop
lret
in
mov
imul
adc
test
add
bound
ss
gs
and
mov
sbb
dec
xor
and
fwait
push
icebp
or
fwait
and
pushf
bound
add
dec
push
xchg
push
in
test
fidivrl
and
andb
pusha
mov
push
icebp
mov
push
cs
inc
lods
es
mov
testl
insb
jno
jo
mov
out
lret
or
mov
mov
sarb
add
mov
sahf
imul
xor
pusha
fidivs
xor
xchg
mov
pop
in
aaa
ljmp
stc
and
sub
rorl
ljmp
jne
sub
lock
movsb
sarl
mov
pop
dec
cwtl
out
ljmp
sub
test
inc
es
pop
ret
push
sub
lods
adc
sbb
icebp
cmpsl
xor
cmp
cwtl
mov
stos
fnstenv
stos
mov
mov
ljmp
out
add
nopl
test
xchg
lcall
mov
iret
ljmp
sbb
cmp
or
push
in
xor
mov
adc
int3
mov
push
sbb
imul
add
dec
inc
jp
push
pushf
ret
daa
std
lods
push
push
xchg
cmp
scas
outsb
movb
inc
mov
mov
cwtl
sub
cli
jle
lods
jecxz
adc
fidivrs
neg
aas
daa
add
bound
xor
mov
xor
ljmp
movsl
loop
fwait
jne
sub
dec
test
fidivrs
push
mov
mov
out
pusha
and
mov
outsl
inc
fstpl
dec
loop
adc
push
insb
xchg
jl
ljmp
inc
sahf
iret
lahf
jle
mov
dec
fs
cmpsb
and
adc
mov
cmpl
adc
push
pop
cmp
mov
pop
or
dec
cmp
cmp
push
mov
loop
je
sti
fisubrl
jp
jne
sub
cmpsb
inc
mov
inc
xchg
fstps
int
out
fdivl
nop
rcl
outsl
inc
and
xor
or
sbb
subb
sahf
dec
scas
add
jb
mov
jbe
push
call
inc
icebp
out
sub
jl
push
int3
xchg
popf
dec
cld
xchg
mov
sbb
loopne
int3
jl
push
cmc
add
out
hlt
mov
outsl
jp
gs
mov
mov
mov
ret
rcll
xchg
mov
push
jg
sub
add
das
xor
xchg
test
xorb
shrb
xchg
pop
jae
and
mov
push
outsb
xor
dec
loopne,pt
sti
fadds
and
sub
or
movsb
cmp
rclb
dec
mov
cwtl
je
lea
mov
push
sub
sti
jno
mov
adc
mov
inc
inc
adc
pop
xchg
cmovne
andl
test
jbe
xchg
xchg
lods
lcall
inc
dec
std
idivl
or
sbb
pop
out
xchg
loop
mov
and
cltd
adc
sbb
jns
fidivrs
fmuls
xor
mov
pop
jnp
in
in
xchg
sbb
xor
loopne
xorb
xor
inc
mov
test
mov
sub
jg
xchg
jle
mov
repz
mov
insb
inc
xor
out
gs
out
out
outsl
and
push
ss
pop
out
in
fprem1
test
cs
jmp
xchg
gs
cmpsb
push
push
adcb
dec
bound
lret
mov
icebp
mov
and
movsb
xor
iret
loopne
mov
cmp
imul
cmp
sub
add
xchg
aad
icebp
pop
out
mov
scas
inc
in
loop
lods
adc
mov
sbb
lods
and
test
popa
aaa
inc
jmp
das
imul
and
or
xor
mov
mov
xchg
push
pop
cmp
arpl
add
lcall
jbe
jmp
mov
jb
push
mov
popf
sub
je
add
dec
xor
ror
das
mov
shrb
push
aam
jge
lret
mov
lret
cmc
pop
adc
jne
sub
aam
adc
add
inc
in
std
rorb
cmp
pop
ret
mov
in
mov
mov
les
gs
lods
push
sub
and
push
ror
and
imul
test
addl
pushf
movsb
mull
rclb
xchg
cmp
lea
adc
xchg
mov
testl
mov
out
movl
movl
movl
movl
movl
mov
mov
mov
mov
and
mov
and
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
add
mov
adc
mov
and
mov
and
mov
cmp
jne
cmp
je
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
xor
shr
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movb
movb
movb
movb
mov
movzbl
mov
movzbl
shl
cltd
idiv
mov
movzbl
movzbl
or
mov
movzbl
cltd
idiv
mov
movzbl
movzbl
cltd
idiv
movzbl
and
mov
movb
movb
mov
mov
add
add
mov
imul
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
mov
imul
mov
imul
xor
or
mov
mov
xor
mov
and
sub
xor
xor
add
div
mov
jmp
movl
mov
movl
movl
mov
mov
or
xor
mov
sub
xor
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
imul
sub
imul
xor
add
mov
mov
xor
mov
and
sub
xor
xor
mov
div
mov
sub
mov
add
xor
add
mov
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
or
push
sbbl
push
push
mov
cmpl
mov
mov
movzbl
jmp
movzwl
je
pushl
call
and
or
xor
add
xor
mov
mov
xor
mov
orl
add
adc
mov
shrd
cmpl
movl
movl
not
jmp
mov
ja
push
pushl
pushl
pushl
push
pushl
pushl
push
call
adc
addl
mov
mov
sub
xor
xor
xor
and
adc
or
cmpl
not
movl
movl
movl
jmp
mov
ja
push
push
call
negl
mov
mov
xor
or
sub
adc
mov
xor
movzwl
add
shr
adcl
mov
mov
mov
sbb
xor
cmpl
movl
mov
jmp
mov
jle
push
pushl
push
push
call
mov
sub
mov
and
movzbl
sub
not
xor
or
xorl
mov
add
mov
not
shl
xorl
mov
shrd
sub
xor
shr
cmpl
movzwl
not
mov
movzwl
jmp
movl
movl
jbe
push
push
call
or
xor
or
adc
adc
movzwl
xor
sub
adcl
and
mov
mov
cmpl
movl
mov
movl
movl
jmp
mov
movl
jae
pushl
push
pushl
pushl
push
call
xor
add
adc
subl
movzwl
sbb
mov
xor
andl
movzbl
adc
xor
sbb
or
orl
mov
neg
mov
negl
mov
cmpl
mov
mov
mov
jmp
movl
not
jg
pushl
call
sbb
sub
notl
sub
sbb
add
mov
adc
mov
mov
cmpl
mov
movl
movl
jmp
mov
mov
jb
pushl
push
push
call
sbbl
xor
or
or
mov
movzbl
sbb
mov
cmpl
mov
not
jmp
mov
jg
push
pushl
pushl
pushl
push
pushl
call
andl
and
or
movzwl
add
or
mov
adc
mov
orl
shl
xor
movzwl
add
xor
sub
mov
cmpl
mov
movl
mov
jmp
movl
movl
jle
push
push
call
dec
sbb
xor
xorl
sub
addl
xor
shld
movl
shl
mov
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
adc
mov
movzbl
adc
mov
sbb
xor
xor
xor
mov
mov
andl
shld
shl
cmp
movl
jne
cmp
movl
je
mov
subl
mov
sbb
push
pop
cmpl
mov
movl
jmp
not
jae
push
pushl
pushl
push
call
mov
or
mov
adcl
xor
xor
xor
mov
and
xor
or
add
movzwl
adc
xor
decl
shl
mov
xor
shr
incl
or
cmpl
mov
movzwl
movl
mov
jmp
movl
movl
jg
pushl
pushl
push
push
pushl
call
sbb
or
xor
sbb
and
adcl
movzbl
add
mov
mov
mov
adcl
mov
cmpl
mov
mov
movl
movl
jmp
movl
jbe
push
push
call
sbbl
xor
neg
add
inc
adc
mov
mov
mov
push
pop
sub
mov
add
mov
lea
mov
mov
mov
xor
xor
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
cmpl
mov
movl
jmp
movl
mov
jae
pushl
pushl
push
pushl
call
or
or
xor
pushl
pop
adc
mov
add
xor
adc
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
imul
add
xor
add
mov
mov
sub
imul
add
xor
div
mov
mov
jmp
movl
movl
movl
movl
mov
mov
or
mov
imul
add
xor
mov
div
mov
mov
xor
sub
mov
mov
mov
xor
sub
mov
sub
mov
add
mov
mov
sub
and
add
xor
mov
div
xor
add
mov
mov
sub
imul
add
div
mov
xor
mov
sub
mov
and
or
sub
xor
mov
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
xor
push
push
call
mov
movzbl
push
call
test
movl
jne
adcl
xor
jmp
xor
add
mov
sub
sub
mov
add
movl
mov
mov
and
movl
cmpl
movl
mov
mov
jmp
mov
jg
pushl
call
or
mov
xor
sbb
adc
xor
xor
mov
adc
and
not
and
movl
movl
movl
cmpl
not
mov
jmp
movl
not
ja
pushl
pushl
pushl
push
call
mov
mov
xor
or
sub
adc
movl
sbb
cmpl
mov
mov
movl
mov
jmp
mov
jge
push
pushl
call
mov
mov
add
sub
add
add
movl
movl
xorl
push
movzwl
sbb
movl
or
mov
mov
subl
push
sbbl
push
andl
push
andl
call
mov
mov
push
adcl
push
push
xorl
push
adcl
call
mov
mov
sub
sub
mov
sbb
mov
add
movl
mov
movl
adc
mov
addl
xor
mov
subl
xor
mov
cmpl
mov
mov
movl
jmp
mov
movl
je
push
push
push
pushl
push
push
call
adc
movzwl
and
adc
and
xor
xor
xor
xor
sub
movl
cmpl
mov
movl
movzbl
jmp
movl
mov
jle
pushl
push
push
call
add
sub
xorl
incl
neg
or
movl
cmpl
mov
notl
not
jmp
mov
jg
push
push
push
call
mov
sub
mov
xor
movzwl
sub
sbbl
and
movzbl
sub
movl
cmpl
mov
movl
mov
jmp
movl
jle
push
push
push
push
push
pushl
push
call
adc
xorl
xor
add
adc
sbb
mov
sbb
mov
add
xor
movl
cmpl
movl
movzwl
movl
jmp
mov
movl
jbe
push
pushl
pushl
call
adcl
sbb
xor
add
xor
sbbl
adcl
sub
sub
movl
adc
push
add
movl
mov
mov
add
mov
mov
incl
push
sbbl
push
subl
push
adcl
call
cmpl
movzwl
mov
jmp
not
movzwl
ja
push
call
xor
or
xor
sbb
xor
adcl
mov
mov
xorl
push
push
adcl
push
push
call
cmpl
mov
movl
jmp
mov
movl
jl
pushl
push
call
subl
adcl
xor
mov
mov
sub
and
movzwl
add
or
and
mov
orl
mov
xor
orl
mov
sbbl
xor
mov
xor
sbbl
xor
cmp
jne
cmp
jne
movl
mov
adc
movl
cmpl
mov
mov
mov
jmp
movl
movl
jb
push
push
pushl
pushl
push
call
adc
xor
xor
mov
sbb
xorl
or
movl
xorl
mov
adcl
imul
add
xor
mov
div
movzbl
and
pushl
or
xor
sbbl
and
not
xor
inc
pushl
mov
movzwl
adc
mov
push
notl
pop
xorl
div
mov
andl
sub
add
xorl
imul
adcl
and
xor
pushl
pushl
pushl
pushl
andl
pushl
call
movl
sub
movl
cmpl
movzbl
movl
jmp
movl
jbe
pushl
push
push
pushl
call
xor
sub
sub
add
adcl
mov
xor
or
mov
or
mov
adcl
sub
cmpl
movzbl
mov
movl
jmp
movl
jle
push
pushl
push
push
call
add
and
add
adc
dec
xor
add
add
dec
mov
andl
xor
adcl
xor
movl
div
imul
addl
xor
sbbl
pushl
sbbl
pushl
sbbl
call
sub
movl
cmpl
mov
movl
jmp
mov
ja
pushl
call
sub
and
add
sbbl
mov
sbb
andl
mov
movl
movl
mov
mov
sub
or
mov
mov
mov
adcl
mov
push
push
adcl
xor
xorl
xor
push
push
notl
call
orl
add
mov
movl
adc
mov
sbbl
movl
andl
movl
movl
addl
movl
dec
jne
cmpl
movl
movl
movzwl
jmp
mov
jle
push
pushl
call
sub
sbb
adc
not
sbb
sbb
add
movl
xor
mov
mov
subl
movl
mov
call
cmpl
movl
mov
movzwl
jmp
not
movl
jb
pushl
push
call
adc
xor
mov
add
mov
xor
lea
mov
lea
xor
add
mov
adc
mov
subl
mov
xor
or
adc
mov
mov
cmpl
mov
mov
mov
mov
jmp
mov
jae
pushl
call
xor
xor
mov
sub
xor
orl
xorl
mov
xor
mov
xor
mov
xor
and
xor
shl
subl
shr
or
sbb
mov
cmpl
mov
mov
movl
jmp
mov
mov
jl
push
call
adcl
sbb
adc
subl
dec
subl
mov
mov
mov
mov
mov
sub
sub
mov
add
mov
mov
shrd
shr
mov
add
mov
mov
xorl
xor
addl
xor
or
mov
subl
push
pushl
addl
lea
andl
push
shl
subl
call
lea
push
andl
mov
movl
mov
sbbl
lea
xorl
push
mov
adcl
lea
mov
orl
mov
sbbl
mov
push
sbbl
call
movl
push
orl
push
pushl
call
mov
mov
mov
mov
shr
shl
or
mov
xor
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
or
xor
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
addl
push
sub
push
adc
movl
movl
mov
adc
movl
mov
movzwl
xor
mov
subl
xor
div
or
imul
cmpl
movl
mov
movl
jmp
movl
mov
jbe
push
call
movl
orl
mov
or
xor
or
adc
and
add
mov
andl
xor
and
xorl
mov
xorl
xor
div
cmpl
mov
mov
mov
jmp
mov
movzwl
jb
push
pushl
push
call
mov
mov
sub
and
mov
mov
sub
xor
xor
xor
add
sub
imul
adc
mov
mov
adc
mov
mov
adc
and
sub
mov
movl
add
movl
movl
or
mov
andl
add
neg
xor
xor
sbbl
imul
mov
or
mov
mov
and
xor
add
mov
or
sub
adc
mov
sbb
movl
sbb
movl
notl
movl
add
movl
and
mov
movzwl
xor
imul
adc
mov
cmpl
movl
movzwl
movl
jmp
mov
jae
push
push
pushl
call
mov
sbb
mov
sub
andl
and
mov
sbb
mov
imul
imul
neg
mov
xorl
and
dec
or
xor
mov
xor
mov
mov
xorl
lea
mov
mov
sbb
mov
movl
movl
cmpl
movl
movl
mov
movl
jmp
mov
mov
jle
pushl
call
xorl
sbb
dec
subl
mov
mov
or
and
adc
movl
cmpl
mov
movzwl
mov
movl
jmp
movzbl
notl
jge
pushl
call
and
xor
movzwl
adc
and
xor
sbb
mov
xor
mov
or
or
add
or
mov
or
add
or
xor
mov
movl
cmpl
movl
mov
movzbl
jmp
movl
je
push
pushl
pushl
push
call
not
mov
mov
adc
sub
mov
mov
and
or
movl
cmpl
movl
notl
not
mov
jmp
mov
mov
jae
pushl
pushl
push
pushl
pushl
pushl
call
neg
dec
movzbl
and
dec
sbbl
sbb
sbb
cmpl
movl
mov
mov
jmp
not
jge
pushl
push
pushl
call
mov
adc
or
xor
xor
xor
mov
xor
mov
add
adcl
movl
mov
add
mov
addl
sub
mov
adcl
lea
sbbl
or
cmpl
movzbl
mov
jmp
movl
jl
push
push
pushl
call
and
adc
add
and
adc
mov
add
mov
and
sub
mov
xor
mov
mov
xor
movl
cmpl
mov
mov
jmp
mov
movzwl
jae
pushl
push
push
push
call
mov
or
mov
orl
orl
sbb
and
adc
movl
mov
add
imul
mov
adc
mov
adcl
imul
orl
xor
xor
or
or
mov
div
cmpl
mov
mov
movl
jmp
movl
movl
jle
pushl
pushl
push
push
pushl
call
adc
or
add
xor
add
neg
xor
xor
and
sub
or
mov
addl
movl
sbb
movl
and
movl
mov
mov
sub
mov
cmpl
mov
movl
jmp
movl
jge
call
adc
or
mov
adc
sbb
sub
mov
adcl
xor
addl
div
imul
cmpl
mov
mov
mov
movl
jmp
movl
movl
jne
pushl
push
push
pushl
push
push
pushl
call
orl
xorl
xor
and
orl
orl
inc
add
mov
subl
xor
movzbl
sbb
mov
xor
mov
adcl
div
add
xor
movzbl
adc
mov
movl
movl
movl
cmpl
mov
mov
jmp
mov
movl
jbe
push
push
pushl
call
add
sbb
movzwl
sbb
adcl
movzwl
sub
or
movl
mov
and
mov
andl
sub
shr
sub
mov
addl
imul
cmpl
movl
movl
movl
jmp
movl
jl
pushl
call
sbbl
xorl
xor
orl
sbb
mov
and
cmpl
movl
movl
jmp
mov
jle
pushl
push
push
call
sbbl
sbbl
sub
xorl
adcl
cmpl
movl
movl
movl
movl
jmp
movl
mov
je
push
pushl
call
notl
xorl
sub
xorl
mov
adcl
sub
mov
neg
movl
xor
movl
xor
mov
or
xor
mov
or
movl
sub
dec
mov
movl
mov
xor
add
sub
imul
movl
movl
movl
add
movl
movl
movl
mov
mov
or
add
orl
mov
sub
incl
mov
movl
imul
imul
andl
mov
orl
or
mov
lea
orl
push
xorl
call
sub
mov
mov
imul
add
cmpl
movl
movl
mov
jmp
movl
jb
pushl
push
call
sbb
mov
or
xorl
addl
xor
add
adc
addl
and
mov
sub
mov
sub
or
xor
mov
xorl
div
cmpl
movl
mov
jmp
not
jl
push
push
push
push
call
xor
movzbl
and
mov
and
or
xor
add
add
mov
adc
movl
movl
movl
movl
mov
xor
movl
sbb
movl
cmpl
mov
movl
movl
jmp
mov
jbe
pushl
push
call
sbb
sbb
sub
adc
adc
movl
or
movl
sbb
movl
cmpl
movl
mov
mov
mov
jmp
movl
jge
push
push
call
andl
and
adc
mov
mov
and
sub
mov
or
movl
cmpl
mov
mov
jmp
mov
mov
jle
pushl
call
adc
mov
and
mov
xor
mov
sub
movzwl
and
mov
adc
movl
movl
and
mov
xorl
mov
adc
mov
and
and
sbbl
sub
sub
imul
mov
xor
lea
xor
mov
orl
mov
or
mov
mov
xor
add
add
mov
cmpl
movl
mov
jmp
movl
movl
jbe
push
push
pushl
call
or
sub
adc
xor
dec
movl
or
or
add
lea
or
and
mov
add
sub
add
add
mov
mov
xor
or
sub
xor
movl
mov
sbb
mov
movl
movl
adc
movl
and
mov
orl
mov
subl
mov
addl
xor
orl
xor
adcl
mov
notl
call
add
mov
sub
mov
mov
andl
mov
xor
adcl
xor
mov
orl
call
subl
or
or
adcl
mov
mov
adcl
xor
adcl
xor
sbbl
mov
call
mov
mov
mov
cmpl
movzbl
mov
mov
movl
jmp
movl
jle
push
push
pushl
call
sbbl
notl
xorl
neg
add
mov
xor
orl
xor
andl
mov
movzbl
adc
mov
mov
mov
xor
mov
adcl
mov
subl
mov
sbbl
call
sub
mov
or
mov
orl
or
subl
push
push
subl
push
xorl
push
call
mov
cmp
movl
jne
mov
cmpl
not
movzwl
mov
jmp
movl
ja
call
mov
sbb
sbb
xorl
movzwl
sbb
and
xor
mov
xor
orl
xor
orl
mov
xorl
call
cmpl
mov
movl
jmp
movl
jg
pushl
push
push
call
mov
add
and
or
or
mov
mov
sub
or
xor
mov
sub
mov
mov
adc
mov
xor
andl
xor
mov
subl
call
or
cmpl
movl
movl
jmp
mov
jae
pushl
push
push
pushl
pushl
pushl
pushl
push
pushl
push
pushl
call
adcl
orl
adc
sbbl
orl
addl
notl
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
movzbl
sub
push
mov
or
movl
jne
or
mov
cmpl
notl
mov
mov
jmp
mov
jae
pushl
call
or
adc
xorl
movzbl
or
mov
sbbl
sub
mov
xor
incl
div
xor
or
sub
mov
mov
sub
mov
orl
div
mov
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
movl
je
cmpl
mov
mov
movl
mov
jmp
movl
movzbl
jne
pushl
push
call
sbb
add
mov
xor
add
sub
and
inc
add
add
mov
mov
pop
pop
pop
leave
ret
cmp
jae
movl
cmp
jae
orl
shld
shl
ret
cmpl
mov
movl
jmp
movl
movl
jge
pushl
push
call
sub
xor
sbbl
movzwl
adc
mov
xor
and
shl
ret
xor
xor
ret
