push
mov
sub
push
lea
push
addl
push
subl
call
xorl
push
incl
xor
inc
movl
push
decl
push
andl
call
xorl
test
movl
je
xor
movl
jmp
push
xor
mov
incl
push
addl
push
call
andl
test
je
sbbl
lea
push
orl
call
jmp
push
inc
mov
push
adcl
push
push
orl
call
andl
test
movl
jne
mov
orl
push
sbbl
push
adcl
call
test
movl
je
orl
push
xorl
push
push
subl
call
adcl
test
jne
push
push
call
xorl
test
movl
jne
addl
push
orl
push
push
call
xorl
test
jne
andl
push
push
sbbl
call
movl
jmp
movl
add
mov
mov
movl
addl
movl
lea
mov
mov
sub
sub
mov
xor
lea
mov
xor
add
xor
mov
mov
movzbl
or
mov
mov
mov
mov
addl
xor
xor
mov
andl
add
mov
mov
cmp
jne
sbbl
mov
mov
inc
mov
xor
addl
add
mov
negl
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
add
mov
mov
add
mov
mov
mov
mov
and
mov
mov
mov
sub
sub
mov
mov
sbb
mov
adc
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
call
mov
dec
mov
jmp
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
mov
adc
movl
movzwl
xor
mov
mov
xor
orl
add
movl
jmp
adc
mov
addl
xor
subl
lea
orl
push
negl
mov
xor
adcl
lea
orl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
pushl
adcl
call
movzbl
sbb
mov
adc
xor
sbb
lea
mov
add
mov
mov
adcl
xor
xorl
xor
add
xor
mov
sbbl
xor
lea
movl
cmp
jbe
mov
and
mov
mov
movl
mov
sbb
mov
neg
mov
sub
xor
movl
mov
mov
mov
movl
cmp
movl
jne
orl
push
xor
movl
inc
andl
push
push
adcl
call
orl
test
jne
xorl
push
push
xorl
call
test
jne
adcl
push
push
push
call
test
movl
jne
addl
push
negl
push
andl
call
orl
test
jne
sbbl
lea
subl
mov
lea
orl
mov
xor
mov
andl
test
je
xor
mov
mov
xorl
mov
andl
xor
add
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
movl
cmpl
je
cmpl
ja
jmp
push
pushl
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
mov
mov
movl
cmpl
je
cmpl
jbe
jmp
push
pushl
pushl
pushl
call
xor
xor
dec
mov
jmp
cltd
mov
movl
cmpl
je
cmpl
ja
jmp
call
xor
add
dec
mov
jmp
mov
add
mov
adc
and
andl
xor
mov
mov
mov
and
mov
andl
xor
add
mov
movl
adcl
adcl
xor
subl
mov
mov
xor
mov
movl
cmp
movl
jne
mov
mov
cmp
movl
je
movl
cmpl
je
cmpl
jbe
jmp
pushl
call
mov
dec
mov
jmp
mov
orl
mov
addl
mov
xor
add
adc
xor
xor
cmp
movl
jne
cmp
movl
jne
mov
orl
mov
sbbl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
call
jmp
mov
mov
mov
add
notl
mov
jmp
mov
movl
cmp
movl
je
xor
xor
adc
mov
mov
mov
xor
add
movl
cmp
movl
je
xorl
push
xor
inc
sbbl
push
subl
push
adcl
call
orl
test
movl
jne
movl
push
addl
push
call
test
jne
andl
push
push
push
sbbl
call
orl
test
movl
jne
push
addl
push
call
addl
test
jne
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
or
mov
mov
mov
pushl
movl
mov
pushl
movl
add
mov
orl
mov
movl
pushl
sbbl
call
mov
mov
movl
mov
jmp
adcl
push
adcl
xor
sbbl
inc
notl
push
push
call
orl
test
movl
jne
orl
push
addl
push
addl
call
addl
test
movl
jne
xorl
push
push
push
call
test
movl
jne
subl
push
push
call
test
movl
jne
andl
push
push
push
call
test
movl
jne
adcl
push
subl
push
call
notl
test
movl
jne
sbbl
push
push
subl
push
call
test
movl
jne
subl
push
adcl
push
sbbl
call
test
movl
jne
mov
andl
mov
inc
mov
cmpl
ja
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
decl
add
movl
cmp
jne
sbbl
mov
mov
andl
mov
xor
subl
add
cmp
jne
movzwl
and
mov
adcl
push
xor
add
adcl
push
decl
push
sbbl
pushl
andl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
xor
mov
inc
lea
mov
lea
mov
mov
test
je
push
push
push
call
test
jne
push
push
call
test
jne
push
push
push
call
test
je
lea
push
call
jmp
push
push
call
test
je
xor
jmp
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
inc
ret
push
mov
sub
mov
sbb
mov
mov
addl
mov
movl
movzwl
sub
mov
dec
jmp
sub
jae
xchg
xchg
pop
int3
cmp
jl
jl
pop
jl
adc
and
popa
pusha
mov
xor
fdivrp
push
arpl
stos
jp
push
iret
pop
dec
cmp
dec
jg
mov
jmp
cld
imul
xor
mov
andl
push
mov
fldl
or
and
inc
push
and
mov
sub
mov
jbe
ret
sbb
jb
jnp
xchg
pop
cmpl
cwtl
je,pt
add
sub
push
sti
iret
mov
or
out
push
dec
push
cmp
xor
lods
inc
int3
cmpsl
dec
fiaddl
push
std
push
push
movsl
icebp
bound
jg
jge
pop
or
fwait
loopne
daa
add
iret
insb
inc
pushf
fisttpl
jbe
imul
xor
in
lret
shlb
jbe
dec
imul
xor
leave
lahf
imul
dec
mov
nop
jl
jecxz
jns
add
mov
push
lds
aas
push
inc
popf
lret
int
std
mov
fidivl
jns
adc
jmp
push
push
or
mov
push
outsb
xor
pop
ficoml
cltd
mov
dec
in
cwtl
mov
xchg
stos
inc
cmp
add
sub
fldcw
loopne
jne
es
sbb
pop
sub
dec
in
sub
xchg
arpl
aad
jle
pop
jecxz
fimuls
popa
nop
fsubl
stc
or
mov
je
scas
es
pop
xchg
jb
and
and
clc
test
inc
push
jle
jo
xchg
sbb
lds
daa
test
push
cmpsb
lret
pusha
bound
sub
cmp
scas
loope
rcll
and
push
push
stc
mov
rcrb
loop
in
xor
push
sahf
mov
aas
mov
addr16
stos
mov
int3
stos
pop
mov
fs
enter
aaa
inc
mov
and
jbe
mov
sbb
or
and
icebp
and
ss
mov
add
and
sbb
test
jno
push
jge
ret
xchg
jne
lcall
daa
outsl
cmpsl
scas
mov
jmp
cli
or
push
popa
faddl
mov
insb
dec
jb
ljmp
aad
mov
ficoms
arpl
push
mov
inc
jle
repnz
movl
mull
or
and
aaa
cmp
movsl
or
dec
insb
fdivr
stc
insb
sub
jl
fsts
mov
stos
sbb
jecxz
test
clc
jae
or
adc
sbb
jg
mov
adc
push
ja
cmpsb
loop
rcrb
adc
or
or
push
pop
xchg
nop
xchg
cmp
pop
and
sbb
or
mov
ret
popf
dec
roll
js
sar
sbb
push
ljmp
loope
add
cmp
fs
push
push
lea
mov
or
sub
add
xor
mov
dec
negl
jnp
lret
cmp
mov
xor
mov
out
popa
insl
scas
mov
fstl
shrl
pop
test
add
dec
jmp
popa
sbb
mov
dec
xchg
xchg
dec
push
lea
pop
sub
jp
lahf
stos
xchg
ljmp
pop
outsb
sub
pop
xchg
jmp
pusha
jp
divl
cmc
ljmp
fcoml
in
xlat
in
jo
ljmp
and
into
xchg
xchg
ret
push
jle
cld
dec
fwait
jl
ja
mov
jge
push
icebp
mov
fstpt
das
mov
pop
bound
lods
mov
frstor
jae
sar
inc
popf
or
wbinvd
mov
sbb
mov
fwait
fwait
imul
mov
fsub
shlb
adc
cld
ds
sbb
mov
push
dec
xor
sti
imul
adc
inc
nop
ljmp
and
xchg
push
ss
mov
adc
mov
and
xchg
arpl
adc
cmp
adc
adc
adc
xchg
mov
xchg
enter
jl
fldenv
ljmp
push
jg
stos
sub
push
mov
pusha
adc
fwait
mov
and
pop
cmp
jge
loop
mov
dec
repnz
int3
fildl
movsl
jmp
lret
lock
rcr
arpl
jl
dec
pop
mov
xchg
imul
insl
xchg
cmpsl
out
jae
pop
xchg
xorl
dec
add
les
dec
cld
mov
lods
mov
dec
movsl
push
jle
push
push
out
sbb
jo
aaa
adc
xchg
push
sub
pop
adc
in
jmp
jno
xlat
outsl
ds
xchg
cwtl
movl
cli
or
mov
jne
inc
adcb
sub
xchg
rcll
push
jnp
jge
xchg
ja
push
loope
sub
push
lds
pop
jns
out
and
xchg
mov
cs
adc
push
popa
fwait
sub
cmp
push
add
jno
cmpsb
cmpsb
adcl
and
insb
add
mov
sbb
pusha
fisubl
xchg
mov
xchg
push
movsl
in
push
mov
pop
repz
lea
adc
scas
jb
fisubrl
sub
sbb
cwtl
ja
in
shlb
mov
push
stc
xchg
popf
sbb
xor
sub
ror
mov
rcrl
lahf
out
lods
cmpl
das
lods
mov
pusha
push
shlb
inc
mov
imul
and
mov
jg
enter
cmovbe
push
or
adc
adc
test
dec
int
dec
imul
idivl
dec
aaa
scas
icebp
fdivs
jl
sub
test
push
aad
add
out
pop
jae
or
xor
jge
je,pn
sbb
pop
adc
adc
push
cwtl
push
or
sub
xor
cmp
out
orb
mov
xchg
pop
sbb
sub
xor
fsubs
nop
imul
cmp
pop
mov
mov
aad
testl
repnz
ror
lods
or
lods
fiadds
adc
sub
ret
push
jbe
xor
xor
pop
mov
xchg
adc
add
jg
lret
jo
dec
loope
and
test
out
ret
mov
xor
dec
or
xchg
ljmp
xlat
popa
jns
jecxz
or
pop
lods
jmp
mov
test
insl
dec
pop
sub
sahf
xor
jp
ret
mov
std
out
movb
push
enter
movsl
lock
mov
call
aaa
lods
add
rolb
nop
mov
push
ret
int3
mov
mov
jl
sub
mov
mov
mov
pushf
mov
adc
lret
push
loope
andl
scas
jge
inc
les
dec
jb
dec
xor
ret
jmp
int
ss
sbb
pop
sbb
mov
adc
inc
insb
xor
or
pop
or
je
sub
bound
sbb
pushf
dec
mov
sarb
or
lahf
mov
inc
fcompl
mov
mov
sub
cmp
in
mov
movsl
insb
mov
out
arpl
dec
or
jg
sbb
les
std
loopne
into
jle
cli
sbb
jns
pop
push
js
shll
and
aaa
sbb
xchg
adc
or
xchg
jmp
insb
daa
out
sub
sub
je
les
adc
pusha
jo
pop
push
loop
jno
aas
mov
loopne
dec
add
or
or
call
cmp
push
loopne
dec
dec
add
xor
inc
dec
pop
shr
cli
sbb
mov
inc
out
and
mov
adc
nop
jmp
test
outsb
xor
jb
adc
scas
in
shl
arpl
pop
shll
xor
into
lods
loopne
push
mov
jo
std
jle
push
push
lea
ret
jmp
lahf
shll
int3
sbb
repz
pop
outsl
lret
mov
adc
imul
js
shrl
cmp
insb
sahf
roll
xor
mov
and
int
int
outsl
dec
sbb
mov
popf
roll
push
ja
mov
push
and
push
cmc
sbb
sub
xchg
fs
mov
adc
lds
jns
mov
cmp
jmp
in
push
push
push
incb
push
jmp
push
xchg
sub
insb
mov
lods
aam
inc
pop
add
fmull
adc
xchg
outsb
nop
adc
aaa
movsl
pop
add
movsb
lods
mov
and
popf
adc
push
sbb
mov
stc
loop
sbb
mov
pop
int3
jns
mov
jo
cmp
cwtl
insb
sti
mov
imul
sbb
test
dec
leave
add
mov
sub
ret
rcr
imul
mov
nop
push
into
into
bound
iret
pop
mov
dec
scas
jge
scas
adc
sahf
jge
shll
push
sbb
pop
mov
dec
sbb
shrl
mov
stos
ret
jle
jb
fbld
into
jmp
mov
adc
sbb
fisttpll
and
out
fldenv
pop
mov
xorl
pop
mov
les
rcrb
mov
shr
inc
mov
mov
cld
dec
mov
pop
sub
repnz
rorb
in
les
movsb
inc
pushf
lods
xor
pop
cmpb
scas
inc
dec
adc
cmp
lcall
pushf
sti
mov
pushf
pop
mov
pushf
ja
std
daa
mov
pop
insb
sub
xchg
mov
cmp
mov
cmc
add
jle
or
cwtl
rorb
les
jp
into
mov
test
es
push
mov
filds
xchg
sahf
xchg
adc
jl
sub
add
std
mov
xorl
dec
ror
out
stos
adc
push
mov
xchg
dec
push
jae
imul
or
inc
into
test
movsb
pushf
fs
cmpl
adc
pop
xor
cmp
ss
icebp
inc
movsb
push
outsb
jmp
je
into
test
pop
pusha
cmp
movsb
and
loopne
decb
sbb
ret
lret
fistpl
xchg
loopne
icebp
loopne
roll
inc
push
rolb
test
ret
or
rcpps
gs
outsb
pop
stos
lock
xlat
sbb
fwait
xchg
clc
push
mov
fwait
jmp
and
fidivs
jle
mov
sti
dec
out
cwtl
dec
pusha
rcll
cwtl
adc
jb
les
adc
scas
sub
xchg
pop
outsb
dec
lock
mov
mov
add
cmp
mov
bound
les
loopne
fnstcw
dec
mov
dec
jecxz
push
mull
sarl
shr
jbe
sbb
stos
insb
mov
lahf
ror
and
shll
mov
lahf
jbe
and
inc
jnp
fnstcw
push
xchg
sbb
dec
dec
rcll
xorb
push
mov
adc
xor
leave
sub
sbb
test
out
bound
stos
pop
cmp
push
or
mov
rorb
lods
mov
test
aaa
sbb
mov
cmpl
fwait
mull
inc
fs
in
inc
inc
cmp
pop
xchg
cltd
outsl
dec
jmp
fadds
pop
jo
xchg
push
loopne
dec
mov
sbb
mov
pop
dec
lds
jns
call
mov
fmuls
pop
imul
mov
add
or
jg
lea
inc
sbb
stc
aas
mov
mov
lds
pop
add
fnstcw
out
jle
es
lret
repnz
ret
mov
jg
lcall
addr16
enter
pop
aad
xchg
addr16
or
jecxz
fs
je
popa
movsb
out
out
mov
mov
and
jmp
adc
jecxz
test
das
jnp
stos
pop
lahf
jnp
dec
push
mov
movsl
xchg
sbb
fnstcw
mov
js
shrl
pop
popa
lea
push
xor
adc
ds
daa
mov
stos
subb
lods
popf
dec
outsb
cmp
hlt
mov
popa
shrl
aaa
inc
mov
push
rcrb
lret
lret
xor
xchg
add
sbb
mov
jle
dec
jne
gs
je
js
aad
inc
arpl
mov
int3
jo
jmp
out
popa
sbb
sbb
cmp
mov
and
mov
pop
insl
es
xchg
sub
add
adc
mov
iret
lcall
pop
jns
mov
add
fcoml
fisttps
pop
sub
or
std
and
mov
lods
jg
std
mov
sbb
nop
sub
jbe
rcrb
cmpsl
xchg
lahf
cltd
xchg
icebp
addb
bound
dec
mov
lahf
pop
xchg
movsb
fstps
jbe
lcall
in
insl
lods
pop
sbb
pop
inc
imul
adc
sub
mov
add
sbbl
adc
inc
jmp
and
xlat
inc
xchg
or
inc
lods
mov
mov
nop
mov
jnp
xchg
jno
ret
fs
mov
aam
sti
gs
fistps
xor
inc
sbb
xchg
leave
xchg
xor
push
dec
cmp
stos
dec
adc
shr
sahf
adc
out
jge
cs
pop
dec
fimull
adc
xchg
sub
shlb
add
xor
aam
test
ffreep
and
es
outsl
jbe
and
lds
popa
ljmp
push
out
icebp
inc
xchg
lods
mov
mov
int3
mov
cmpsl
and
pop
sbb
add
sub
mov
dec
test
push
in
xor
dec
jge
in
inc
movsl
add
scas
and
inc
adc
insl
mov
xchg
hlt
imulb
xor
inc
xchg
jb
mov
dec
dec
push
shl
fs
sbb
push
call
sbb
mov
shrl
add
sahf
dec
xchg
xor
mov
mov
sbb
dec
xor
cmc
inc
imul
int3
adc
dec
mov
enter
sbb
inc
cmc
inc
addr16
push
lret
int3
pop
in
mov
subb
fldl
adc
fcoml
and
leave
movsl
dec
mov
xor
std
xchg
mov
push
jle
les
sbb
maskmovq
testl
int
inc
mov
test
xor
imul
sub
jnp
lret
ja
xlat
aam
aad
cmp
mov
jo
fwait
decb
pop
push
sbb
sbb
scas
or
adc
es
sbb
leave
or
or
imul
pusha
mov
aad
movsb
xchg
jae
pop
scas
imul
jb
jle
dec
fistps
xchg
sbb
rorb
mov
ja
xor
imul
pop
jge
cli
mov
push
das
mov
shlb
add
cmc
enter
rcrb
mov
lea
in
sbb
and
adc
pop
pop
lret
out
pop
in
sbb
sahf
clc
xchg
add
mov
pop
mov
mov
jne
add
scas
movsb
std
jmp
scas
jb
push
adc
xor
sub
or
jo
int3
cld
fsubs
fcoml
lods
aad
mov
mul
or
mov
and
loope
or
mov
add
out
add
sar
neg
cld
sti
sar
or
cmpsb
arpl
shrl
and
and
js
loopne
sub
mov
push
add
nop
xor
xor
out
mov
cmp
lods
mov
adc
xchg
imul
mov
jno
or
sbb
mov
mov
mov
xchg
pop
sarb
dec
lods
stos
sub
lock
mov
mov
add
pop
popf
jne
jp
sub
and
push
repnz
clc
push
bound
iret
inc
pop
inc
mov
test
dec
push
or
loopne
add
cli
push
out
jmp
inc
cmp
inc
loopne
inc
out
sbbl
into
fimull
mov
movsl
and
push
fstpt
adc
cltd
jne
icebp
dec
shll
out
fwait
mov
dec
cwtl
dec
insl
divb
fistl
ret
xor
adc
imul
ljmp
std
and
sbb
dec
push
xorb
xchg
scas
into
mov
xor
ss
loop
push
adc
cmpl
and
inc
jmp
enter
adc
add
pop
test
jl
scas
mov
cmp
out
stc
pop
out
scas
dec
mov
mov
jae
lret
mov
orl
mov
in
add
sub
int
aaa
push
xlat
mov
push
and
movsl
push
jp
pop
push
jmp
push
mov
icebp
add
cmc
js
mov
cmp
add
mov
jecxz
sub
ja
push
xchg
rcl
sub
sahf
inc
test
testl
and
lods
js
and
stos
inc
loop
mov
nop
xchg
lea
cmp
in
int3
jl
pop
inc
jne
icebp
jl
stc
adc
push
add
sti
pusha
mov
icebp
sti
ds
fwait
adcl
aam
leave
jg
add
sub
fnstenv
pop
lea
mov
fiaddl
mov
inc
rol
mov
xadd
pop
popa
add
add
add
mov
shlb
or
lods
test
inc
push
adc
arpl
fistps
stos
push
movb
xchg
insl
jno
xchg
xchg
das
pop
bnd
cli
js
cs
mov
jmp
pop
pop
cli
jp
mov
pop
test
inc
test
fadds
aaa
xchg
push
insl
es
push
bndstx
cmp
jle
mov
cmp
push
lret
jp
cmpsl
stc
jge
das
xchg
cmpsl
jg
sarl
shl
adc
xchg
scas
insb
and
jne
jne
movsb
lods
push
in
or
shll
mov
xor
jo
in
mov
call
and
sub
cmc
or
push
and
out
sarb
pusha
popa
popa
push
out
or
pop
dec
cmc
cmp
fists
cmc
mov
test
sub
pop
add
xor
ljmp
sub
mov
mov
js
xchg
add
std
aad
test
cmp
cwtl
jge
pop
ret
mov
sub
ds
add
aam
ret
push
cmp
fisubrs
pop
lds
sbb
add
es
lds
mov
inc
ret
insb
and
or
out
addr16
test
cmp
xchg
loope
mov
inc
mov
or
cmc
xchg
push
xchg
xchg
xchg
inc
sti
fs
mov
test
jae
xchg
frstor
cld
push
test
leave
fildll
imul
jno
js
xor
shlb
adc
ret
inc
lods
pop
or
sub
xor
arpl
sub
cmp
mov
sar
pop
lcall
jge
ret
inc
mov
out
pop
mov
les
aas
jmp
ret
fistl
mov
dec
mov
sub
mov
sbb
test
push
and
add
mov
aad
or
in
insl
enter
mov
mov
xchg
out
sub
fadds
sub
or
jns
stos
jb
mov
arpl
sti
call
stc
push
push
inc
push
sub
lock
lds
jns
pop
aaa
cmp
aad
jnp
ja
aas
xor
and
into
xchg
pop
sahf
jae
jnp
inc
jbe
inc
out
nop
or
inc
and
cmc
inc
cmp
inc
xchg
xlat
mov
add
pop
jg
xchg
mov
bound
ds
xor
pop
cmpsb
jae
addr16
lea
ljmp
imul
aaa
xchg
dec
mov
test
push
jnp
inc
test
and
sbb
push
mov
lods
xchg
clc
in
fwait
push
inc
cld
pop
dec
loop
sarl
and
das
mov
or
sub
rolb
jmp
movsl
push
or
std
test
mov
into
adc
loop
jb
push
icebp
insl
sahf
shl
aas
aaa
cs
clc
pop
sub
mov
fsubrl
sub
test
xor
decl
adc
pop
pushf
sahf
xchg
lret
fidivrl
fs
aam
pop
or
icebp
enter
sbb
test
mov
movsl
and
xchg
fiadds
pushf
sbb
pop
or
ja
cltd
push
mov
shrb
sbb
test
adc
mov
push
negb
xchg
fcomip
loopne
push
pop
mov
or
mov
insl
mull
lret
jmp
or
pop
iret
xchg
sub
mov
or
aam
testb
pop
adc
mov
idivl
dec
cli
mov
test
jp
pop
imul
sarl
jnp
jp
xor
mov
dec
xor
mov
cltd
and
push
lret
sub
mov
sub
cmpb
mov
or
enter
outsb
xor
sbb
push
mov
aaa
scas
fsubrp
dec
hlt
fisubrl
cs
and
ficompl
notl
leave
dec
push
test
jg
ds
leave
inc
xchg
pop
mov
push
mov
pop
inc
sub
xor
mov
jle
add
dec
bound
mov
movsb
jae
xchg
xchg
sbbb
popa
jo
pop
mov
mov
inc
jge
out
xchg
xor
loope
mov
imul
jnp
es
push
andl
mov
pop
call
pop
sbb
mov
popf
mov
push
xchg
mov
mov
add
test
sbb
aaa
push
lcall
inc
sub
xchg
arpl
lahf
mov
cmp
repz
mov
ljmp
add
int3
sarb
shl
mov
jl
cmp
sahf
push
and
xchg
or
ret
mov
cmp
aad
ja
mov
gs
pop
add
dec
movsl
mov
and
or
or
jmp
inc
xchg
mov
lock
sub
add
outsb
mov
cmp
xor
lret
dec
or
lea
dec
mov
xchg
lahf
int3
and
cmp
mov
inc
or
lods
dec
iret
adc
jne
xchg
xchg
arpl
adc
mov
addr16
lds
repz
insl
lock
adc
push
lahf
sahf
push
lds
jbe
cmp
inc
ret
pop
scas
or
push
sub
mov
jge
dec
das
inc
fsubrs
mov
in
inc
scas
das
stc
dec
mov
and
inc
sti
test
pop
mov
mov
and
xor
add
inc
jbe
aas
test
adc
mov
shlb
push
xchg
mov
test
sti
and
jmp
pop
sub
out
mov
add
lret
sub
mov
jnp
lock
out
or
push
jl
mov
mov
and
adc
cmp
add
movsl
push
ret
add
push
jp
out
or
cmove
int
faddl
mov
js
iret
cmp
mov
pushf
sub
inc
movsl
mov
mov
inc
movsbl
jnp
pop
fwait
or
push
addr16
mov
fldl
loope
testb
fmuls
mov
incb
mov
pop
add
mov
pop
std
push
xchg
gs
or
mov
mov
push
testl
mov
jmp
repnz
and
jl
xchg
mov
lock
jmp
mov
lahf
sbb
stos
pop
xor
shrl
xor
clc
xchg
loop
pop
stos
pushf
aad
jo
std
add
and
aam
jnp
pop
pop
movsb
sbb
jp
shll
aad
idiv
ret
jg
push
es
inc
mov
xor
dec
mov
xor
xchg
je
insl
xor
fisubrl
xor
sahf
pop
pop
xor
jnp
cmp
mov
dec
xorb
rcrl
sub
push
add
fs
pop
and
dec
xlat
pop
clc
jo
xor
enter
and
or
adc
montmul
cmpsb
xchg
or
mov
into
outsb
rorl
mov
jns
push
mov
cwtl
orb
push
push
lret
xchg
into
mov
aad
fs
fdivp
ja
or
movsb
mov
sub
lret
mov
adc
xchg
mov
sub
cli
cmp
hlt
js
insb
jbe
fstpl
out
jg
out
jle
aam
mov
mov
or
cmpsb
insl
sub
int
and
or
imul
mov
ret
orb
push
sbb
imul
test
xor
and
push
aas
push
cmp
fyl2x
and
rclb
sub
inc
mov
ror
cmpsb
inc
repz
push
rol
or
mov
js
xorl
out
int3
sahf
or
lahf
or
inc
xchg
lar
pop
push
popl
xchg
test
sub
push
or
xchg
pop
mov
sub
fstl
jl
xchg
int3
mov
imul
arpl
adc
xor
ret
jns
shl
icebp
adc
sahf
xor
arpl
mov
lods
jb
mov
adc
out
jne
mov
sub
stc
jbe
int3
clc
aaa
negb
push
stos
lods
and
rcrb
in
scas
push
jo
add
jp
imul
lret
jmp
fidivs
out
and
cmpb
lcall
sbb
les
test
adc
dec
in
xor
shrl
ja
fimuls
ds
pop
sbb
pusha
xorl
cmp
adc
xchg
rorb
and
jno
xchg
sbb
jp
xchg
ljmp
jnp
adc
or
add
out
repnz
and
pushf
or
mov
jle
cld
into
dec
jno
sub
movsb
dec
gs
sub
mov
lea
mov
mov
mov
je
repnz
sahf
and
fildl
lcall
call
jecxz
mov
and
mov
push
ljmp
scas
dec
mov
das
loop
push
popa
lock
sbb
adc
mov
mov
add
sbb
pop
sbb
jmp
or
aaa
xchg
fwait
movsb
test
jecxz
cli
mov
popa
mov
mov
mov
gs
stos
scas
lret
imul
add
push
cmp
cli
add
data16
fs
push
lahf
mov
xchg
mov
push
push
out
fcompl
enter
inc
pop
push
movsl
xchg
add
data16
push
pushf
push
add
in
test
stc
sub
loope
arpl
sarl
jecxz
rclb
out
call
sbb
ror
sti
in
pop
out
int
cli
sub
sub
xor
mov
filds
loopne
dec
mov
sub
add
mov
adc
test
jge
adc
and
cwtl
in
sahf
rorb
xor
xor
out
js
sub
cmp
jmp
dec
andl
js
movsb
dec
insb
cmp
xchg
lcall
hlt
ret
sbb
test
xor
jmp
bound
lret
bswap
adc
mov
adc
scas
pop
pusha
in
js
sub
popa
adc
pop
and
aad
xchg
lret
pop
sub
es
pop
push
pop
call
stc
dec
fucomip
sbb
sti
push
call
stc
mov
js
out
inc
popf
int
loope
repz
jb
aad
cmc
mov
adc
add
inc
jne
int
mov
repnz
in
ljmp
fsubrl
popa
inc
notl
cmp
jge
jmp
inc
cmp
cmp
jmp
aas
je
push
adc
pop
jne
or
enter
dec
das
mov
lret
jmp
call
adc
add
add
dec
cmpsl
push
sahf
adc
sbb
sub
cmpsb
mov
das
xor
cmp
outsb
daa
jp
sbb
cmp
popf
movb
xlat
xchg
push
iretw
aas
je
xchg
sti
jl
test
mov
cmp
jno
shlb
sbb
daa
cmpsl
fimull
jge
mov
vmovmskpd
xor
ret
imul
xchg
sbb
es
jne
es
sub
pop
lods
lret
push
adc
sar
xchg
dec
aaa
push
xor
je
in
sbb
sbb
mov
js
ds
jmp
aaa
jbe
and
int3
pop
int
dec
sti
cmpsl
outsb
movsb
pop
and
mov
idivb
and
shrl
out
rcl
mov
xorl
adc
aaa
adc
jne
jg
adc
mov
sbb
add
dec
cmpl
into
in
outsl
add
lret
jl
inc
or
mov
push
mov
xor
mov
addb
jae
adc
mov
enter
fildll
xor
in
out
cli
or
imul
roll
cli
mov
pop
adc
adc
stos
or
fwait
xor
or
rorb
shrb
mov
mov
lret
pop
inc
lahf
cmpsb
scas
insb
lods
imul
notb
inc
adc
add
sub
jp
pusha
ret
loope
loope
mov
pop
nop
xchg
pop
sahf
mov
mov
fs
mov
inc
daa
insb
aaa
pusha
insl
jns
cmp
mov
cmp
in
loopne
and
add
lcall
xlat
sbb
mov
push
stc
and
fcoml
push
mov
iret
jl
insb
and
jp
movsl
out
rol
or
addb
mov
leave
ss
out
loopne
dec
test
push
add
mov
add
addr16
imul
les
mov
jle
push
and
testl
mov
dec
cmp
dec
jns
lret
xor
jne
aaa
or
out
mov
mov
mov
pushl
mov
into
gs
in
rolb
jnp
addr16
mov
xor
adc
loop
test
dec
psraw
cmp
lret
xchg
xor
mov
in
outsl
nop
sahf
adc
xchg
mov
jecxz
loope
roll
inc
les
out
dec
fwait
xchg
cmp
pushf
add
mov
xchg
imul
mov
addl
xor
andl
xor
or
inc
mov
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
orl
push
add
mov
add
movl
cmp
movl
je
mov
sbb
mov
xor
xorl
xor
add
movl
add
adc
incl
xor
orl
mov
push
xor
adcl
xor
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
addl
movl
mov
movsbl
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
neg
sub
mov
xor
movl
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
orl
movl
mov
or
push
movl
adc
mov
xorl
push
xorl
mov
andl
xor
notl
push
mov
add
xorl
mov
andl
mov
inc
mov
cmpl
jb
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
test
je
and
mov
andl
xor
add
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jb
mov
or
mov
orl
mov
adc
xor
xor
or
xor
add
mov
addl
mov
xor
add
and
xor
andl
xor
add
inc
mov
cmpl
jg
jmp
push
pushl
push
pushl
call
cmpl
jb
add
movzwl
sbb
mov
mov
mov
and
xor
add
addl
mov
sub
mov
subl
xor
sub
add
adcl
mov
xorl
sub
lea
xor
adcl
xor
movl
cmp
movl
je
andl
xor
or
inc
mov
cmpl
ja
jmp
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
subl
add
cmp
jne
adcl
pushl
adcl
call
mov
sub
mov
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
orl
xor
add
cmp
je
pushl
andl
pushl
xorl
call
sbbl
mov
or
mov
mov
or
mov
subl
xor
add
movl
cmp
je
movl
cmpl
je
cmpl
jb
jmp
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
sub
mov
adc
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
call
mov
dec
mov
jmp
mov
or
mov
xorl
add
sbbl
mov
mov
mov
xor
mov
add
xor
add
xor
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
or
push
add
push
xor
mov
mov
orl
mov
or
mov
andl
add
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
mov
mov
sub
sub
mov
mov
mov
sub
xor
mov
sub
movzwl
and
mov
mov
xorl
sbbl
mov
movl
cmpl
je
cmpl
jge
jmp
call
xor
xor
dec
mov
jmp
mov
movzbl
xor
sub
mov
sub
orl
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
sub
or
mov
orl
sbb
mov
addl
mov
or
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
jmp
push
out
push
jae
jae
das
push
sbb
rcl
jl
dec
pop
jl
or
fdivp
leave
or
jecxz
or
leave
scas
cltd
cmp
xchg
inc
push
xchg
pop
inc
xchg
pop
jns
lds
aaa
jp
or
cwtl
imul
dec
xchg
pop
dec
shl
inc
pop
xor
add
add
xchg
push
sub
sub
dec
jmp
sub
faddp
or
add
icebp
jecxz
pop
ja
mov
or
cmp
orb
insb
fcompl
jae
cs
push
xchg
sbb
or
jno
jb
loopne
xor
sbb
bound
adc
dec
lods
mov
push
dec
xchg
mov
sub
push
or
out
pop
lods
enter
shll
je
inc
mov
rol
sbb
test
fstl
dec
xchg
mov
pop
mov
pop
jge
adc
mov
sbb
and
mov
jno
sahf
pop
outsb
push
lds
push
pusha
call
push
inc
jecxz
loopne
lds
dec
pop
push
cmp
mov
push
lret
stos
movsb
pop
test
adc
cwtl
dec
ss
mov
mov
adc
sbb
add
xor
jp
pop
xchg
aad
add
das
arpl
addr16
inc
jbe
mov
insb
dec
pop
cli
insb
xor
and
leave
test
inc
or
mov
lds
lahf
inc
add
sub
mov
popa
jle
cs
in
mov
lea
je
test
pop
add
jle
std
and
mov
aam
pop
or
push
mov
pop
mov
lahf
push
inc
ret
sub
pop
cs
push
out
cli
sub
dec
add
les
cmp
fdiv
jno
repnz
imul
jae
pop
sbb
inc
or
or
jo
xchg
lea
sub
push
arpl
rcrl
sbb
cmp
popa
sbb
rorl
ret
cmp
hlt
pop
and
clc
jo
mov
notb
inc
adc
jecxz
cmp
mov
sub
xchg
iret
jbe
imul
or
sub
and
sub
push
jns
pop
mov
stc
sar
ret
rolb
jne
rol
pop
sbb
dec
mov
js
movsb
sub
jb
xor
xor
repnz
jmp
jge
dec
jnp
out
add
and
cli
sbb
xor
out
in
cwtl
idivl
xchg
pusha
cmp
insb
jecxz
ds
mov
adc
xor
jp
lcall
pusha
mulb
add
fcomps
adc
mov
pop
push
ljmp
repnz
and
or
xchg
inc
daa
mov
pop
nop
pop
cltd
add
push
dec
pop
imul
fsubrl
ror
cmpsb
out
jg
mov
mov
inc
stos
out
add
sbb
dec
inc
cltd
data16
gs
sub
out
insb
mov
dec
push
ret
ret
out
mov
pusha
mov
sbb
pop
xchg
mov
pushf
jecxz
js
jae
cmc
inc
sub
xchg
jp
cli
sbbb
push
fcmovb
inc
cwtl
mov
adc
adc
ds
dec
push
in
adc
dec
lods
ja
icebp
mov
aaa
jmp
pop
sbb
push
or
mov
adc
mov
mov
jns
imul
sahf
cmp
and
jnp
jae
dec
pop
or
inc
sub
ljmp
sbb
and
or
daa
cmp
cld
xor
pop
pop
mov
jbe
lahf
out
add
sub
push
sbb
inc
mov
push
dec
fldt
std
push
enter
xor
fsub
xchg
popf
test
ja
popf
out
dec
sub
or
xchg
and
ja
jmp
dec
mov
mov
stos
psllw
lds
or
jae
outsl
pop
jmp
sub
inc
insb
js
sub
jnp
sbbl
hlt
fistl
cmpsl
shll
dec
add
cltd
xchg
in
lahf
cs
std
or
xor
enter
orb
or
cmp
in
pop
enter
int3
push
pop
std
cmp
mov
jl
and
ret
dec
push
ss
pop
aaa
ficompl
push
popa
push
dec
jg
mov
xor
xchg
lea
stos
lds
sub
mul
push
lret
insl
push
mov
and
cs
repz
and
push
orb
imul
and
push
cmp
sbb
pop
ret
fsts
addb
sbb
and
or
es
xchg
push
jg
dec
hlt
lock
pop
mov
xchg
xor
popf
lock
add
sbbl
xchg
pop
in
mov
shl
jns
lcall
cli
stos
icebp
test
loope
dec
call
mov
fdivl
xor
mov
cwtl
sbb
movsl
pop
cmpsb
int3
cmp
jmp
mov
cmpsl
repnz
xor
lea
mov
adc
insb
dec
imul
mov
stc
xchg
repnz
pop
dec
sub
fwait
bt
fimuls
adc
in
sahf
scas
inc
lods
cwtl
dec
sarb
add
push
mov
ja
jmp
mov
pop
ret
jle
ljmp
lcall
icebp
pop
mov
jno
or
loope,pt
ret
pop
mov
sbb
jge
cs
xor
add
sahf
in
fsubl
cli
mov
sub
ljmp
push
popf
jae
mov
push
in
loope
add
in
clc
mov
int
lods
rcrb
jmp
int
sub
cmp
fidivrl
xchg
in
mov
addb
jb
out
add
jmp
movsb
inc
mov
ret
push
pop
mov
ficomps
and
mov
mov
jmp
cmpsb
sub
mov
clc
lea
mov
add
leave
rcrl
pusha
test
out
adc
xor
mov
insl
movsl
mov
mov
fbld
cmp
lea
inc
push
and
jg
and
int
xor
jg
pop
stos
mov
xor
clc
bound
sbb
packssdw
popf
aam
mov
in
and
adc
push
sahf
mov
cmp
mov
sbb
sub
sahf
pusha
mov
add
data16
js
jg
cltd
cld
jbe
subb
mov
insl
aad
push
pop
jle
loop
inc
out
test
std
and
imul
cltd
xchg
loopne
pop
jbe
outsb
jno
or
fs
popa
ds
imul
gs
mov
adc
xor
sub
cmc
add
fstpl
mov
jmp
push
or
test
sub
add
pop
inc
mov
lcall
popf
cwtl
push
addr16
dec
gs
or
jl
push
stc
test
mov
dec
std
int
and
inc
cmp
and
loopne
mov
fsubl
scas
es
loope
push
adc
out
mov
cmp
fwait
and
stos
pop
inc
push
adc
cmp
and
or
pop
popa
cmpsl
fists
inc
enter
js
xchg
pop
add
js
inc
sti
push
mov
scas
out
and
pop
adc
subb
das
pushf
shll
cmp
push
daa
jle
aas
icebp
decb
dec
stos
arpl
pop
xor
in
jge
inc
and
or
mov
mov
bound
int3
out
sbb
push
xchg
dec
lahf
xchg
scas
jge
dec
mov
xchg
das
pop
and
fs
xor
pop
cmpsl
mov
icebp
mov
or
loop
mov
push
add
jae
inc
push
inc
jp
push
sub
ljmp
pop
cmp
imul
fwait
or
push
loopne
sub
xor
adc
pop
xchg
out
inc
call
mov
jbe
jle
lret
pop
mov
push
ja
in
dec
fildl
jmp
lahf
loopne
jge
push
sub
or
adc
inc
dec
sbb
cmpsb
mov
adc
loopne
stc
xchg
nop
xchg
jg
lds
pop
pusha
cmp
add
repz
inc
test
cmp
inc
ljmp
xlat
sbb
outsb
jns
sub
mov
loopne
sbb
mov
push
xchg
push
flds
jo
cli
cmp
cmp
push
faddl
ljmp
icebp
cmp
icebp
jno
mov
add
aas
mov
pop
adcl
lds
popf
dec
pushf
xor
xor
jns
lock
push
incl
sarb
ljmp
push
mov
mov
pop
or
pop
out
mov
lods
out
add
mov
xchg
adcl
scas
push
jge
lock
out
pop
test
negb
or
jne
daa
imul
xor
cmpsl
jge
dec
push
or
test
aaa
leave
push
aaa
cmp
lods
dec
mov
cmp
test
mov
daa
xchg
xor
cmpsb
ljmp
mov
fidivrs
movl
ret
in
adc
inc
lock
jg
scas
outsb
out
xchg
andb
jmp
mov
xlat
out
fisubl
insl
inc
mov
push
and
sbb
pop
cmc
or
pop
jns
pop
es
lds
nop
ss
mov
xchg
pop
mov
loope
jl
out
add
int3
clc
mov
cmpsl
adc
xlat
icebp
add
mov
cmpsl
xchg
push
mov
xchg
std
roll
or
cld
aaa
xchg
xor
imul
insl
andb
inc
repnz
in
inc
jbe
inc
and
test
push
mov
lret
daa
pusha
into
les
movsl
cli
pop
std
outsl
jae
xchg
xor
inc
pushf
ljmp
cltd
shlb
mov
nop
sar
xor
pop
mov
scas
js
loopne
and
dec
or
jge
and
setno
test
xor
and
mov
mov
in
mov
xor
dec
pusha
xchg
movsb
imul
bound
jl
enter
add
xor
repz
jae
xor
rcrb
cmpsl
cltd
xchg
lret
fdiv
test
xchg
mov
adc
xor
mov
sbb
jns
jmp
je
add
stc
out
sub
sbb
popf
sub
hlt
push
int3
fldt
loopne
das
pop
mov
addl
int3
mov
rcrl
jmp
fcomp
pop
pop
shll
iret
lahf
and
push
cmpsb
iret
daa
js
fcomps
inc
add
jge
lahf
adc
mov
cmp
xchg
int
pop
mov
cmp
and
mov
xor
dec
pop
xor
push
ret
int3
mov
popa
inc
das
and
add
adc
rcll
jae
leave
mov
push
mov
mov
sbb
xor
sub
ds
insl
mov
pop
push
push
push
mov
pusha
xchg
fidivrl
fwait
test
push
jmp
cs
add
dec
jns
xor
xchg
sub
inc
in
pusha
imul
movsl
add
lahf
jbe
mov
cmp
sarb
nop
enter
jae
sub
pop
dec
inc
ds
sub
test
pushf
xchg
outsb
adc
cmp
aaa
mov
dec
push
lods
sub
aad
fadds
es
mov
mov
and
or
pop
pop
outsl
adc
adc
add
loop
in
push
and
shlb
sahf
mov
mov
mov
add
cmp
and
or
cmp
lock
in
lcall
dec
clc
push
shll
scas
sahf
or
testl
pop
outsb
shll
and
adcb
sbb
cmp
mov
or
cmp
aad
inc
adc
repnz
stc
mov
repnz
shrb
sub
lock
adc
popf
pop
pop
mov
mov
lahf
mov
adc
xor
inc
sbb
sub
inc
push
subl
mov
xlat
push
xor
aad
fdivrs
fcoms
adc
add
fstps
fwait
jne
mov
dec
int3
jmp
and
iret
stos
xchg
mov
fdivrp
pop
lock
in
repz
jecxz
adc
xor
mov
dec
out
or
cmp
mov
sbb
adc
bound
jle
lock
dec
xchg
lds
pushf
cld
xchg
test
test
adc
sti
mov
xor
cli
mov
and
ja
test
pop
cmp
imul
ret
in
adc
xchg
xchg
sbb
add
lret
test
xchg
jp
jb
jmp
fstpl
fdivrp
xchg
lods
or
adc
or
fs
iret
mov
ds
bound
pushf
cmp
jecxz
add
mov
gs
and
pop
out
push
fdivrl
fnsave
lahf
punpcklbw
inc
out
shlb
pop
das
adc
or
cmp
jecxz
push
aad
lea
xlat
add
xor
pop
push
sbb
push
fldcw
clc
inc
ja
int3
test
cmp
sub
mov
cmpsb
and
xchg
adc
dec
xchg
aad
mov
or
jns
add
out
mov
sub
sahf
mov
xchg
jnp
je
insl
sub
cmp
cmc
mov
aaa
dec
test
js
jl
push
daa
push
insl
sarl
xor
fld
xlat
jmp
in
inc
push
ret
repz
hlt
and
mov
adc
fistpll
xchg
mov
jne
mov
cmp
cmp
jp
gs
cmp
xchg
push
lds
inc
divb
incl
dec
sbb
test
iret
xor
leave
mov
pop
dec
sbb
imul
cli
inc
jns
icebp
pop
in
leave
push
ja
outsb
icebp
or
pop
inc
sbb
mov
cli
outsb
mov
or
inc
mov
push
fcom
jp
outsl
gs
xor
push
add
stos
scas
jno
jmp
jle
lock
shlb
xor
jmp
xchg
or
loop
inc
push
dec
out
jnp
add
lret
push
sarb
test
dec
daa
fxch
mov
shrb
jns
push
push
mov
push
fsubl
mov
repz
adc
lods
pusha
mov
inc
lods
mov
push
cltd
dec
sbb
pop
clc
pop
sbb
movsb
inc
adcb
fsubs
push
xchg
arpl
dec
rolb
lret
fbld
jmp
out
std
pop
mov
sub
adc
dec
mov
sbb
mov
mov
data16
cmp
je
jmp
cs
mov
sti
lds
mov
repnz
lret
xchg
and
shrl
xor
shlb
test
jae
scas
std
sbb
inc
fldcw
jo
cmp
inc
fsubl
or
xor
arpl
imul
or
adc
rcr
add
pop
ds
aad
fs
out
nop
js
jmp
scas
dec
imul
shlb
inc
pop
movsl
int
fcmovbe
cmc
cmpsl
push
sahf
sbbb
jmp
fdivs
in
mov
pop
jmp
dec
stos
push
and
ret
mov
in
fwait
pop
or
mov
mov
pop
jo
and
fists
jp
pop
cwtl
rol
xor
sub
mov
addr16
into
jnp
fcoml
jp
out
and
mov
cmp
iret
mov
mov
mov
xchg
out
ja
ljmp
xchg
mov
ficoms
sbb
add
push
push
mov
add
dec
jp
push
mov
mov
jmp
inc
sbb
mov
std
sub
adc
mov
aaa
inc
sahf
and
push
add
cmp
push
into
adc
aaa
add
push
je
push
fbstp
pop
repnz
push
push
fs
andl
adc
mov
pop
or
sbb
mov
sbb
add
cmc
cmp
les
add
jne
orb
movd
add
adc
sahf
sub
test
movsb
mov
xlat
and
loop
xor
and
stos
push
notl
xor
adc
fildll
pop
mov
inc
xor
xchg
pop
dec
scas
cld
fstpt
jmp
sahf
lahf
mov
pop
rep
mov
lea
push
cld
pop
fsubp
imul
rorl
pop
rcrb
xchg
in
fs
and
adc
insl
movsb
xlat
mov
xchg
mov
mov
iret
out
cmc
rolb
pop
dec
jg
cs
mov
andb
cltd
loop
lret
and
movb
push
fists
gs
push
push
mov
scas
jle
and
cmp
sbb
les
mov
test
xor
pushf
pop
stc
and
sbb
lds
lahf
bnd
lret
loope
mov
loope
ret
stos
popa
mov
movsb
movsb
sti
sub
xchg
sub
repnz
sub
aas
fstl
mov
lcall
mov
xor
cld
dec
dec
dec
subb
rol
inc
pop
jnp
stos
cwtl
cmpsl
pop
push
sbbb
ljmp
inc
enter
jns
dec
cli
lds
inc
popf
ds
dec
jl
add
mov
gs
jnp
mov
movsb
std
push
or
iret
call
pop
ret
xchg
xchg
sbb
aad
push
and
inc
insl
mov
clc
jg
sbb
dec
ljmp
aam
das
xchg
mov
sbb
std
adc
adc
xchg
pxor
loop
push
out
test
data16
dec
pop
inc
repz
sbb
add
in
xor
mov
test
js
xor
sbb
lahf
rcrl
xorl
push
sahf
mov
and
adc
cmpsl
in
xchg
sub
ja
and
mov
sbb
sbb
testb
dec
inc
std
xchg
inc
insl
pop
mov
ds
lret
std
std
idivl
sbb
fdivr
adc
adc
mov
mov
les
xchg
and
fdivr
test
xchg
mov
cmp
mov
movsb
adc
fwait
iret
decb
xor
jo
int
addl
fcmovu
xorb
orl
jnp
adc
inc
in
lret
subb
pop
test
std
in
stc
insl
iret
mov
outsl
imul
fstps
adc
adc
std
out
xchg
incb
pop
cltd
test
push
repz
popf
xor
inc
jmp
cltd
xchg
mov
sub
mov
in
xchg
adc
adc
dec
xor
jmp
and
mov
es
xchg
add
repnz
cwtl
ret
lret
and
dec
lahf
sub
aaa
jnp
add
inc
jbe
ja
fistpl
stos
inc
add
jmp
mov
aam
stos
jl
loopne
adc
es
dec
cmc
pop
movsb
xor
push
decl
out
lret
enter
add
jg
lods
test
cmp
enter
and
xchg
in
cltd
neg
dec
sbb
inc
std
and
xchg
xchg
mov
jnp
inc
rolb
jnp
movl
mov
cmp
jo
xchg
or
inc
cmpb
xor
jecxz
pop
mov
xor
movsl
popf
xchg
lcall
stos
test
sbb
mov
sti
dec
xchg
dec
xchg
sbb
in
popf
into
xchg
inc
mov
pop
or
imul
icebp
int3
aaa
pop
pop
mov
call
xchg
xchg
mov
push
inc
out
push
and
sti
inc
pop
movsl
sub
xchg
adc
sbb
inc
aaa
mov
pop
in
fnstcw
sub
add
dec
cmpsl
ljmp
pop
in
pop
test
pop
cmp
and
pop
jle
push
popa
cli
xor
mov
cmpsl
pushfw
jle
in
or
xor
xchg
das
stc
div
jp
scas
pushf
fs
shll
jp
rcll
sbb
add
jb
nop
sbb
sub
orl
mov
dec
test
jne
mov
jnp
imul
cltd
adc
add
clc
cwtl
push
aas
xlat
jnp
xchg
xor
adc
pusha
aas
stos
in
mov
mov
dec
push
push
loope
dec
xchg
push
mov
loopne
rcrl
std
jo
xor
sbb
add
lods
or
sbbb
cli
or
je
add
or
mov
sub
cmp
lret
mov
scas
xchg
adc
inc
insl
or
pusha
jl
and
dec
stos
xchg
jnp
pop
sti
lret
sub
dec
xor
out
push
addr16
push
push
cltd
inc
stc
inc
jp
cmp
pop
mov
sahf
xor
lds
testb
mov
hlt
pop
shrb
xor
inc
sar
adc
stc
enter
xor
int3
push
lret
rorl
jae
in
cld
dec
mov
mov
mov
sub
call
push
mov
cltd
or
roll
clc
mov
shl
or
cmp
xchg
cltd
inc
dec
lahf
inc
movl
and
mov
popf
pop
or
jb
xor
sub
mov
addr16
ljmp
popa
jbe
jb
rol
ret
dec
adc
mov
inc
mov
xchg
in
pop
cltd
and
sub
mov
mov
sbb
fs
stos
int3
dec
jbe
popf
gs
test
lahf
sahf
inc
xchg
movsl
cmpsl
add
das
cmp
inc
addb
fcmovbe
test
popa
and
xor
fcomps
ret
data16
push
mov
pop
in
push
lods
xchg
lret
mov
loop
test
shr
subl
inc
shlb
fimull
dec
jnp
sub
mov
inc
scas
add
mov
mov
clc
push
xor
imul
popa
sbb
js
aam
mov
es
mov
add
les
mov
xlat
push
sbb
xchg
mov
aas
add
cmc
movsb
pop
fwait
dec
xchg
loopne
push
push
mov
mov
mov
inc
ret
mov
xorb
cmp
dec
lcall
sub
cs
aas
imul
pop
push
dec
mov
dec
add
and
mov
mov
adc
xchg
ret
sub
jl
mov
add
add
insb
xorl
mov
outsb
pop
sub
inc
sub
jle
inc
jo
mov
stos
lods
push
mov
cld
inc
mov
pop
jle
sbb
movsl
loop
xchg
jge
push
pop
arpl
and
pop
inc
xorl
xchg
loope
mov
mov
lahf
ja
inc
psllw
mov
gs
jb
or
rcl
pop
xor
shrb
mov
jno
fcmovnb
sti
out
sahf
imul
jmp
cwtl
add
xchg
xor
jno
pop
shl
stos
out
xor
lret
xchg
pushf
inc
fstpl
sarb
inc
in
lock
rcl
mov
test
div
ljmp
dec
mov
sbb
xchg
sbb
push
pop
sub
cltd
ja
push
jle
mov
leave
add
fs
xchg
cmpsl
inc
test
mov
ret
mov
inc
xlat
es
add
and
imul
rorb
sub
mov
dec
or
pop
mov
ret
daa
int
push
cmc
inc
nop
outsl
adc
xor
jae
test
loopne
and
movsb
cmpb
lret
xchg
iret
insl
push
push
sahf
adc
fs
aad
or
lock
in
leave
test
adc
sbb
insl
test
in
inc
or
out
lret
jp
popf
jb
repnz
xchg
sbb
adc
lret
ret
sub
pop
pushf
and
shrl
pop
int3
ret
push
xor
mov
mov
lods
in
fsubs
popa
and
sahf
cmpsl
add
jo
xchg
in
xor
mov
dec
daa
aaa
stc
leave
mov
cld
mov
xchg
sub
mov
fcmovnu
cmpsl
or
lea
mov
pop
and
movd
shll
pushf
inc
scas
xchg
jb
ret
inc
jnp
bound
std
xchg
cmp
dec
or
jne
push
push
cmpsb
mov
xchg
fwait
test
mov
push
push
adc
pop
dec
inc
xchg
fbstp
ljmp
add
xor
stos
or
popa
outsl
imul
xor
cmpl
jl
or
push
pop
or
pushf
rolb
xchg
jb
divl
sbb
and
clc
and
in
cmp
xchg
std
adc
cmpb
fucomp
adc
ja
mov
push
aaa
insl
fcompl
repz
mov
sbb
mov
lret
and
mov
into
outsb
jp
adc
out
pushl
andl
mov
stc
or
sub
pop
stc
movsb
mov
dec
mov
cmp
pop
nop
ret
fadds
jmp
mov
inc
sub
cltd
imul
pusha
pop
adcb
push
mov
stos
mov
sub
dec
pop
test
jo
xor
rolb
inc
sub
jmp
les
or
cmpl
jns
je
jl
and
clc
adc
inc
adc
scas
fistl
pop
stos
cmp
daa
adc
sti
add
dec
mov
dec
or
dec
out
in
xchg
mov
nop
pop
mov
movsl
dec
add
popl
cmp
ret
call
pop
jg
mov
mov
pop
sbb
mov
sbb
cltd
flds
cmp
stos
push
call
gs
lods
xchg
lahf
or
mov
stc
fwait
out
es
sbbl
and
loope
jb
dec
in
mov
cld
adc
and
pushf
fstps
xchg
push
sbb
fwait
mov
sub
dec
xchg
cli
out
sbb
outsl
mov
andl
jg
xchg
subl
inc
adc
lcall
mov
mov
test
andb
xor
and
cmp
mov
sbb
jp,pt
xor
subb
xchg
scas
loopne
sub
jmp
ret
xchg
insb
stos
rcll
shl
mov
in
cwtl
ret
sti
mov
xor
inc
cltd
loope
mov
stos
iret
mov
rcll
dec
mulb
adc
loope
repz
flds
dec
xlat
cmp
xor
mov
mov
lretw
js
outsb
pop
rclb
std
stos
cmpsb
das
push
movsl
fbstp
pop
xor
sbb
roll
int
cmp
loopne
cmp
mov
or
adc
sub
outsl
dec
adc
push
pop
adc
xor
fdivl
and
push
xchg
xor
mov
adc
ret
test
test
testl
cltd
xchg
daa
jp
daa
cwtl
imul
jne
add
adc
call
add
add
push
cli
cmpsb
fbstp
stos
shrb
mov
sub
test
mov
aad
add
lcall
sub
or
bound
xchg
or
hlt
or
cmc
idivl
jns
mov
and
adc
les
xchg
out
xchg
dec
inc
in
fs
outsb
jb
adc
inc
testl
xchg
ret
pushw
push
loop
cmp
inc
mov
mov
xchg
fstpl
pop
jbe
cmp
xor
test
in
loopne
push
std
hlt
dec
jnp
loop
les
mov
push
ss
addr16
adc
push
push
lds
jb
idiv
xlat
adc
sbb
inc
negb
rcl
mov
push
cmp
lods
enter
add
ja
jae
sub
loopne
push
aaa
js
loop
lods
xor
add
pop
mov
call
outsl
xchg
into
lret
or
sub
in
push
jecxz
and
loope
cmp
xchg
mov
loop
jle
mov
cmp
jp
sbb
inc
sar
add
xor
fsubrl
mov
adc
pop
lock
cmp
add
adc
pop
push
outsb
test
int
jo
shlb
cmp
test
insl
push
iret
stos
cs
movsb
xor
inc
and
and
notb
divb
lea
mov
fs
jbe
or
cltd
jae
int3
jns
rcrl
imul
out
xor
jns
mov
and
cmp
push
mov
je
xchg
popf
xor
push
jb
jae
xlat
adc
xchg
pop
cmp
jnp
push
pop
mov
jg
ret
jp
jmp
ljmp
push
fiadds
adc
loope
add
jle
mov
scas
xchg
loop
lds
xchg
in
jmp
cmpsl
call
jb
push
mov
xchg
mov
cld
enter
cmp
pusha
outsl
mov
das
push
stc
mov
adc
stos
mov
fldt
jg
push
ret
imul
adc
add
daa
mov
and
add
lahf
jno
sbb
jge
icebp
pop
roll
adc
adc
push
pop
repz
addb
mov
insb
xchg
dec
push
je
xlat
inc
cmc
push
pop
mov
adc
and
pop
xor
leave
les
xor
negb
fbstp
pop
xor
jno
not
cmc
imul
adc
jbe
jne
fildll
mov
inc
xchg
and
shlb
ret
pavgw
cmp
jbe
sub
pop
mov
xchg
das
fists
push
mov
lock
mov
pushw
adc
adc
mov
xorb
add
stc
dec
enter
ss
push
into
data16
push
and
hlt
ljmp
ja
fwait
inc
pop
jle
idiv
push
arpl
enter
dec
shlb
rolb
cli
movsl
lcall
paddusw
enter
out
jmp
pop
adc
fstl
pop
push
and
in
sti
das
jno
bound
js
push
int
mov
mov
jnp
rorl
add
jb
xchg
sbb
pusha
mov
inc
lahf
cwtl
aaa
sbb
cmp
dec
negl
in
dec
inc
fisubrl
adc
inc
sbb
popa
outsb
mov
aaa
sbb
inc
dec
sbb
in
mov
or
pop
test
fbstp
sbb
xor
test
push
call
mov
cmp
pop
int3
sar
or
mov
leave
push
inc
fwait
sbb
and
mov
test
arpl
cmp
sbb
std
cmp
ljmp
xor
inc
ds
rclb
in
repnz
cmp
inc
pop
mov
mov
and
fwait
jbe
cmc
push
mov
xor
fstpt
add
repnz
mov
jns
inc
add
cmp
push
movsb
test
sbb
push
mov
mov
push
cmpsb
inc
add
jne
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
adc
mov
adc
push
xor
mov
xor
mov
lea
adc
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
xor
add
adcl
mov
subl
mov
sbb
mov
orl
mov
addl
add
push
mov
mov
andl
xor
xor
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
mov
mov
adcl
xor
mov
add
movl
cmp
movl
je
movl
mov
movl
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
cmp
jne
sub
mov
xor
movl
cmpl
je
cmpl
jl
jmp
pushl
call
mov
dec
mov
jmp
add
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
and
mov
mov
or
mov
adcl
xor
adcl
add
xorl
imul
mov
andl
xor
sbbl
add
movl
cmp
mov
movl
push
movl
je
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
xor
mov
mov
andl
xor
addl
add
xorl
imul
movl
mov
jmp
movl
cmpl
je
cmpl
ja
jmp
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
jmp
lahf
xchg
jle
emms
xchg
ljmp
test
pop
jl
mov
dec
sbbb
jecxz
rcrl
mov
inc
pop
leave
adc
mov
jo
add
dec
call
and
cmp
mov
cmp
pop
fs
cmp
das
push
jl
pop
insl
rolb
mov
push
test
sub
ja
rcr
or
neg
cmp
mov
mov
cmp
addb
scas
das
mov
mov
xor
inc
stc
dec
in
mov
add
fs
inc
push
loopne
cmpsl
sbb
out
in
xchg
pop
inc
dec
movsb
lods
sub
iret
or
iret
aam
sub
test
mov
mov
popa
push
sub
stc
jns
add
ss
jmp
cmc
xor
idivb
jge
push
sub
inc
mov
das
pusha
mov
aam
mov
mov
lret
xor
dec
xlat
les
fstl
iret
nop
xchg
fcoms
cld
test
push
dec
mov
cltd
insb
rcr
push
jl
mov
out
shrb
sub
pusha
addr16
bound
mov
insb
xor
js
push
mov
cmp
aas
adc
cmp
inc
push
push
imull
fs
popf
cmp
or
jb
pop
cltd
sbb
scas
pushf
fdivrs
cmp
lds
sub
lcall
xchg
jae
stos
xchg
jns
sub
mov
fs
aad
imul
les
mov
loope
xor
push
adc
clc
add
xchg
ret
out
push
aas
xchg
sbb
gs
lea
fdivl
mov
ds
inc
cwtl
imulb
pop
or
lahf
js
mov
xor
lcall
ror
fldl
sbb
lds
fiadds
add
xor
adc
mov
js
mov
out
call
icebp
in
and
into
mov
lret
lahf
xorl
mov
scas
add
in
lods
or
mov
push
jge
push
fisubrs
mov
daa
dec
add
lret
cmpsb
pop
sub
sub
stos
jns
adcl
mov
push
xor
cmpsb
cmp
mov
add
sbb
fwait
ljmp
pmovmskb
in
push
sub
mov
cmc
std
fsubrs
push
imul
mov
cmp
or
push
add
mov
jbe
gs
std
jbe
add
repnz
lcall
mov
push
ljmp
shrb
repz
iret
aad
pop
in
lea
jnp
ret
push
xchg
cwtl
ret
or
sub
or
test
mov
sbb
lods
inc
jle
xchg
cs
xchg
cmp
lods
fs
pop
loope
mov
movl
jl
mov
xor
jb
xor
jp
sbb
test
xchg
mov
mov
out
cmp
mov
jge
mov
inc
sbb
test
scas
adc
fdivrl
in
fistps
or
ret
rcrl
pop
cmpsl
movsl
jbe
aam
inc
mov
mov
lds
sbb
and
stos
mov
push
out
fbld
idiv
dec
push
fcoml
fcoml
dec
rorl
in
mov
push
inc
dec
cmp
lret
mov
pop
sub
js
dec
mov
insb
stos
test
imul
inc
cld
cs
mov
mov
jg
hlt
push
in
adc
push
mov
mov
pop
cli
cmp
add
xchg
mov
and
mov
cmp
ljmp
outsb
jb
test
mov
mov
loopne
fsubl
push
sahf
mov
sbb
xor
rcll
stos
xor
xor
or
ficoml
sbb
push
fcmovbe
sbb
xchg
pop
sahf
jg
xchg
xchg
jmp
arpl
mov
adc
sub
inc
add
loop
xor
push
xchg
ja
fldl
and
fisubrs
cltd
dec
stc
imul
push
xlat
in
pop
mov
fnstcw
andl
js
mov
adc
rorb
inc
gs
mov
jg
hlt
xchg
fcmovnbe
sahf
jge
adc
jns
popa
dec
pop
pop
xor
std
out
enter
push
movl
or
pop
cmpsl
movsl
addr16
mov
cmp
lock
push
cmp
mov
rcl
push
pop
xor
add
xchg
xlat
mov
mov
fdivr
mov
in
aas
repz
and
out
inc
adc
and
fiadds
pop
jp
jbe
jb
mov
mov
pop
push
cmpsl
data16
lods
cmp
lahf
add
ret
sub
mov
fstpl
mov
adc
or
outsl
ret
pop
mov
jbe
dec
lcall
out
jns
test
push
int3
loopne
jno
in
je
push
enter
fcmovu
pop
inc
push
cld
mov
cmp
inc
mov
ret
shrb
or
inc
pop
inc
and
adc
divb
mov
inc
dec
cmpl
push
data16
cmp
or
or
loope
gs
and
dec
stos
sub
sbb
outsb
or
cmp
xchg
push
cmp
vphaddwd
scas
sbb
mov
fcmove
fistl
arpl
adc
pushl
icebp
iret
cld
sti
aaa
outsb
imull
xor
icebp
add
call
or
mov
mov
sbb
push
lea
test
pop
xor
and
ljmp
stos
sub
icebp
jno
push
xor
sub
adc
pushf
xlat
or
dec
push
fadd
in
in
std
fimull
pushf
lock
ss
fadds
push
mov
stos
in
outsb
dec
cltd
in
pop
gs
rcrb
mov
shll
int
or
push
fsubrs
icebp
movsl
push
and
xchg
imul
xchg
ss
int
lret
pop
or
mov
ror
xchg
sub
repnz
mov
aaa
fwait
sbb
in
fwait
outsl
mov
inc
stos
es
cmp
push
mov
sti
std
jg
fwait
inc
sbb
cld
mov
in
ljmp
jmp
lds
loope
test
mov
out
fsubp
ret
add
test
orb
shl
jne
outsb
inc
cs
mov
inc
mov
imul
rcrb
ljmp
xchg
mov
xor
jl
push
outsb
cmp
aas
mov
outsl
fdivr
mov
sub
jne
lcall
ja
cmp
pop
or
jnp
ja
dec
pop
xor
dec
lea
xor
bnd
js
clc
mov
cld
fidivl
jecxz
daa
pushaw
jae
ficoml
repnz
lret
mov
setb
jecxz
dec
or
dec
int3
push
jbe
int
xor
and
daa
lcall
loopne
lods
loop
lea
dec
mov
xorl
out
cld
or
jae
and
dec
push
cmp
cmp
mov
mov
pop
mov
filds
fisttpl
sti
cmp
into
aas
pop
xchg
mov
sbb
push
jmp
cmp
adc
sub
dec
inc
fildl
filds
into
lcall
adc
add
les
push
gs
les
fdivrs
bound
mov
and
lds
mov
fmulp
pop
mov
jnp
and
or
sbb
adc
outsl
jecxz
xchg
popa
pop
jg
push
adcl
jne
jb
cltd
cmp
xchg
lods
push
cli
xor
push
fsubrl
orb
add
pop
push
in
xor
jo
les
ror
xlat
les
and
js
stos
inc
sub
scas
jae
lds
push
mov
push
mov
out
push
dec
mov
and
lret
jnp
movsb
cmp
pop
mov
popa
pop
aaa
add
xor
adc
int
mov
popw
mov
inc
shrb
jae
movl
cltd
addb
xchg
pusha
adc
cmp
dec
pop
shll
int
inc
xor
lea
xchg
aam
mov
mov
sub
sbb
pop
or
data16
lods
fadd
pop
insl
or
mov
int
clc
test
test
rclb
inc
jecxz
stc
jle
or
rcrb
push
jle
movd
xor
cli
xor
fcoms
lahf
call
sbb
mov
push
or
mov
xchg
or
mov
popa
outsb
or
ss
pop
jne
mov
pushl
jne
inc
dec
sbb
fstpl
and
mov
xchg
push
cmc
mov
push
ret
mov
jecxz
pop
mov
mov
jnp
lret
aad
pop
arpl
mov
sbb
inc
leave
sub
push
mov
jle
test
sbb
mov
mov
data16
imul
mov
inc
sbb
jno
jae
xchg
loope
insb
cmp
adc
add
mov
cmpsl
aam
add
test
mov
shrb
mov
pop
mov
xor
cmp
xchg
pop
sub
sub
js
rolb
test
xor
xchg
daa
stc
mov
mov
sub
jp
nop
test
cmp
cld
dec
pcmpgtd
ret
out
sub
je
leave
pop
xor
sbb
push
bound
cmp
mov
mov
jb
jne
adc
insl
mov
dec
je
inc
add
pop
add
in
pop
push
or
in
mov
out
or
les
lea
jo
and
test
sbbl
or
repnz
sbb
cwtl
out
es
cmpsb
loope
outsb
ficompl
cld
fwait
and
cmp
scas
xor
les
lods
and
insb
mov
imul
in
pop
mov
adc
leave
xor
mov
jns
js
pop
xchg
test
bound
jb
jnp
mov
xchg
or
loopne
sub
cltd
sub
dec
aam
dec
cli
push
push
test
out
adc
dec
mov
add
repz
xchg
aaa
add
or
sub
mov
aad
jbe
or
sbb
addb
adc
jl
push
add
push
in
dec
sub
fcoml
cmp
cltd
xor
insb
sti
rcpps
sub
or
cmp
setl
popf
cld
fs
push
jp
loopne
mov
ret
push
fadd
inc
add
in
pushf
sbb
sub
fcmovnb
jbe
dec
inc
sbb
fcomps
mov
mov
xchg
mov
and
sarb
sbb
mov
cld
rcrb
mov
in
push
push
mov
ret
stc
mov
jecxz
pop
and
inc
push
adc
pop
add
add
jmp
or
adc
and
jl
and
mov
dec
stos
pop
je
leave
lret
mov
and
fcompl
mov
repz
inc
mov
pop
mov
loopne
pop
pop
xlat
in
popa
add
push
and
sub
popl
test
xlat
pop
cli
lock
in
iret
mov
push
andl
ss
js
popf
pop
test
rorl
les
cli
test
xor
imul
inc
stos
das
cmpsb
lahf
jb
jp
mov
outsl
sbb
ret
adc
mov
imul
xor
xchg
sbb
and
rorb
call
mov
enter
xchg
jo
shr
mov
lahf
out
pop
ret
movl
adc
sub
or
cmp
add
std
xchg
js
xor
jb
jb
pop
lods
jecxz,pn
arpl
aas
add
dec
call
mov
rcll
hlt
scas
montmul
cmpsb
ret
test
mov
aas
stc
pop
mov
adc
ds
pop
cmc
lcall
jl
pop
aaa
test
cld
cwtl
xor
sarb
adc
mov
movsl
jo
jle
mov
js
mov
add
and
xchg
pushf
xchg
xor
cwtl
aaa
inc
dec
push
pop
mov
mov
stos
in
decl
push
mov
fidivl
cltd
rcr
mov
cmpsl
mov
cmpsl
push
ret
xchg
js
stc
jb
sbb
fwait
in
xchg
pusha
aaa
pop
cmpsl
repnz
fsubrs
out
out
jecxz
ret
dec
cmp
push
in
imul
out
or
fists
lods
test
mov
test
jg
push
mov
leave
add
sub
movsb
aas
les
shl
mov
test
or
inc
test
outsb
jo
adc
and
mov
test
out
imul
loop
popf
dec
inc
bsf
or
jne
sub
cmc
mov
add
repnz
jle
push
enter
repnz
jge
add
jne
jns
std
xchg
ja
cmp
adc
stos
jp
loop
xchg
mov
pop
mov
gs
inc
inc
aad
cmp
add
mov
mov
push
sbb
jbe
dec
test
dec
xchg
cmpsl
cmpsl
xor
mov
dec
adc
lret
jae
int
add
dec
popa
pop
lods
pop
imul
dec
and
leave
push
dec
or
xchg
lcall
mov
scas
sbb
mov
addb
enter
mov
mov
idivb
push
fadd
out
mov
ljmp
rcl
sub
dec
out
pop
shlb
mov
stos
mov
mov
xor
scas
lods
sub
dec
clc
cld
rolb
and
insb
cmp
dec
push
push
jmp
rol
add
lret
xchg
cs
shll
mov
ror
xor
cmp
es
and
sbb
mov
pop
int
cmp
clc
dec
adc
fistpll
dec
xorb
clc
es
mov
cmpsl
adc
test
or
pop
xchg
pop
push
ficomps
nop
addl
stos
into
xchg
cmp
jge
ss
xchg
test
mov
cmp
daa
mov
sahf
fmuls
shlb
outsb
dec
ret
sbb
xor
movsb
sti
cs
adc
mov
mov
cmp
xorb
popf
mov
mov
xchg
mov
adc
aam
ja
and
mov
xchg
stc
call
stos
bound
nop
mov
test
sbb
je
push
imul
mov
insb
pop
in
scas
jns
and
jp
sbb
cmp
pop
pop
push
jg
gs
mov
cmp
leave
dec
jnp
fcomps
cwtl
adc
cmpsl
sub
xchg
loopne
sub
leave
jg
loope
test
inc
add
xor
cltd
imul
push
aad
incl
pop
pop
pushf
mov
jl
bound
aam
out
lods
xchg
cmc
push
xchg
cs
outsl
mov
adc
jp
ret
or
xor
adc
jb
add
int
or
xchg
mov
pop
sbb
and
jnp
lahf
dec
pop
xchg
lods
xlat
adc
inc
shlb
fadds
std
ss
and
leave
lahf
push
stos
xor
enter
fcompl
test
pop
bound
xchg
push
push
shr
xchg
stc
nop
add
xchg
mov
adc
clc
adcb
xor
add
inc
mov
push
clc
mov
dec
jp
test
aad
ja
aas
push
sbb
je
jno
push
xor
out
incb
stos
filds
jnp
ret
call
lret
xor
aas
cmc
scas
fmull
inc
int3
ss
cmp
cmp
dec
vpunpckhbw
mov
negl
scas
push
movsl
mov
es
daa
mov
popa
orl
or
inc
insb
jbe
sti
mov
pop
jmp
jmp
cmpsb
out
mov
xchg
cltd
mov
jp
fnstenv
stos
sub
aad
mov
push
out
and
mov
dec
xchg
xchg
bound
lret
ret
cmp
mov
xchg
ret
cmp
bnd
lock
getsec
jbe
bound
mov
xor
dec
mov
std
cmp
xchg
push
pop
cmp
pop
arpl
mov
arpl
cmp
les
sbb
push
outsl
jge
shll
jp
fsubrl
test
dec
out
mov
popa
dec
cmpsl
adcl
fisubl
iret
xor
je
mov
test
fwait
push
mov
cmp
mov
or
sub
cmp
imul
mov
adc
je
lret
xchg
dec
aaa
xchg
cmpl
inc
out
fcoml
adc
cmp
xchg
rcl
cmp
arpl
out
mov
jmp
addr16
and
mov
add
notl
data16
imul
xchg
test
leave
stc
lds
push
pop
jbe
add
cmp
or
pop
cltd
cmpsl
clc
push
data16
imul
insl
jo
sub
mov
ror
xor
xchg
stos
shll
int3
pop
js
mov
scas
mov
push
das
outsb
mov
outsl
add
fstpl
mov
in
lods
movsb
dec
pop
or
lahf
sahf
xchg
cmpsl
das
test
add
shll
es
inc
mov
or
and
jmp
fchs
or
mov
hlt
out
inc
movsb
lret
sub
mov
or
mov
dec
icebp
fists
push
dec
andb
xlat
sbb
xlat
sub
pop
mov
or
jmp
pop
cmpsl
push
in
stc
mov
cmp
shlb
aam
movsl
outsl
pop
mov
adc
insb
data16
cs
jnp
sub
icebp
fdivl
outsl
cmp
movb
sbb
jae
pop
dec
jge
sbbl
mov
inc
mov
add
mov
mov
pop
popa
inc
push
sbb
es
dec
cwtl
inc
sbb
shlb
add
adc
lret
repnz
cmc
jg
mov
mov
push
in
in
sbb
jae
mov
and
mov
jno
add
sahf
mov
out
xchg
lcall
push
xor
clc
enter
lret
sbb
jl
cmp
pop
movsb
insl
loope
call
push
xor
enter
popa
aad
adc
jmp
std
popf
sbb
lock
stos
mov
out
mov
leave
lock
sar
aas
imul
inc
xchg
mov
sbb
xchg
data16
lret
int3
mov
sub
int
dec
mov
jns
fcmovu
mov
daa
sbb
push
sbb
inc
push
lock
filds
sahf
mov
and
xor
xor
pusha
inc
jp
push
pushf
pop
push
push
push
adc
loope
sbb
and
sbb
push
mov
mov
push
fs
mov
xchg
stos
pop
fnstsw
movsl
pop
xor
arpl
or
jl
mov
xchg
push
cmp
xor
sbb
ljmp
push
push
sub
call
lods
mov
xor
ficoms
loopne
mov
sbbb
es
ds
xor
pop
ja
pop
fadd
jne
mov
sbb
cltd
adc
mov
fnsave
outsb
int
ficompl
jne
xor
je
jl
lods
imul
mov
aad
in
inc
jge
sbb
pop
mov
outsb
into
mov
imul
imul
xchg
cmp
repnz
pushf
fld
sbb
mov
mov
fstpl
push
cmp
pushf
nop
push
pushf
sub
sub
unpcklps
mov
jnp
pop
mov
and
jmp
xchg
ja
std
fnstenv
shll
fwait
rcl
xchg
rcrl
inc
mov
out
shr
and
fistpl
aas
mov
dec
cmp
mov
fldcw
and
js
in
and
pop
addl
ret
cmp
mov
xchg
inc
mov
iret
mov
mov
push
js
inc
jl
mov
stc
inc
jbe
or
xchg
fwait
sub
inc
jp
push
imul
sbb
les
das
sahf
xchg
hlt
cmp
out
or
ret
ds
cmpsb
jo
mov
push
push
nop
lret
loope
out
cmpsl
xchg
mov
icebp
xor
loope
xor
fldenv
pop
add
jp
push
inc
std
int
jns
shr
mov
ljmp
mov
adc
mov
roll
sbb
pusha
push
jl
xor
sahf
faddp
stos
add
inc
mov
and
leave
pusha
lret
sub
notl
dec
pop
test
xchg
pop
mov
lock
inc
push
push
or
or
scas
inc
mov
push
lods
xchg
ret
stos
push
leave
xchg
mov
ror
push
iret
adc
cmp
push
dec
mov
sub
mov
cwtl
jb
sti
rol
xchg
sti
sbb
push
adc
mov
in
mov
shlb
out
lahf
jp
sub
mov
pop
out
jns
popf
ss
int
inc
imul
pusha
int3
push
sbb
inc
add
jo
inc
cltd
xor
pop
pop
jnp
aas
xchg
xchg
cld
addr16
shl
jo
and
sub
xor
scas
shr
sahf
je
fs
jge
sub
adc
leave
xchg
sbb
mov
add
adc
scas
pop
adc
mov
mov
sub
push
pushf
shlb
aam
into
or
xor
nop
xlat
ja
pop
out
aaa
adc
dec
and
popa
mov
insb
aaa
mov
or
cld
sub
pop
or
test
daa
lahf
jae
daa
lea
movsb
jae
mov
nop
lock
mov
inc
mov
jp
mov
call
fsubr
jmp
jne
cmpsb
jecxz
add
arpl
cltd
mov
adc
cmp
add
cli
cmpb
sbb
sub
and
js
lahf
add
cwtl
test
pop
popf
lret
add
xchg
xchg
xchg
into
lods
or
cwtl
or
fwait
xchg
cmp
mov
xchg
xchg
add
push
rolb
pop
mov
imul
stc
mov
lahf
lahf
test
adc
ret
jo
pop
adc
int3
pop
mov
pop
pop
mov
cld
adc
dec
incl
cltd
cmp
lahf
scas
adc
mov
lahf
inc
enter
loope
imul
push
dec
in
pcmpgtd
push
push
push
aam
mov
sti
sbb
lahf
ficomps
mov
jg
js
aad
jns
xchg
dec
in
mov
dec
test
jno
dec
clc
insl
lret
cld
mov
dec
push
sti
shll
dec
jnp
push
in
or
sbb
sbb
or
cmpl
test
add
lcall
aaa
jnp
sub
push
scas
rol
or
mov
insb
sbb
lock
xchg
push
inc
pop
out
imul
add
jnp
shlb
cwtl
xor
in
repz
imul
shlb
xchg
pop
push
jecxz
mov
outsl
clc
test
mov
cmp
dec
xchg
sti
arpl
scas
out
scas
in
mov
jg
inc
xchg
in
and
cmp
sub
sub
push
int
mov
mov
pushf
arpl
clc
sbb
shl
leave
inc
loop
cmp
jmp
addb
pop
lcall
sbb
ss
jb
mov
inc
fcoml
addr16
sarl
outsl
insb
cld
lea
fcmovb
or
je
inc
out
loopne
push
jp
push
stc
jbe
movsl
mov
ret
stc
stos
popf
push
xor
insb
cld
jb
push
movsl
jg
mov
mov
or
leave
xchg
add
ljmp
sti
insl
clc
mov
ret
cmpsb
mov
mov
insb
sbb
pop
stc
or
jle
ret
es
mov
pop
mov
outsl
or
clc
jb
xor
adc
inc
pop
jo
xor
pushf
loope
mov
es
fnsave
mov
mov
es
pop
in
cld
fcompl
jo
and
xchg
js
repnz
adc
push
ret
lret
xchg
pop
scas
fs
inc
ss
adc
sub
ljmp
rol
lods
mov
out
mov
insl
adc
adc
add
add
xchg
or
dec
sbb
daa
imul
imul
icebp
test
mov
mov
dec
not
pop
and
dec
add
mov
or
stos
fwait
sub
popf
jno
sbb
push
in
and
dec
add
test
aaa
lods
icebp
fsubr
add
insl
pop
std
push
pop
xchg
jp
mov
cmc
jg
cmp
lods
shll
jmp
sbb
mov
sub
mov
pop
movsb
fnsave
push
repnz
dec
pop
fistl
push
pop
gs
mov
stos
cwtl
repnz
popf
insl
je
dec
inc
mov
sbbb
push
sbb
adc
xchg
stos
dec
jne
popf
popa
fiaddl
dec
mov
or
xchg
call
add
mov
les
inc
jns
mov
gs
xor
lea
repz
test
xor
dec
es
test
push
stos
xchg
sbb
nop
adcl
xor
lds
cmp
mov
sub
insl
popa
lret
movsb
add
xchg
je
jge
fistpl
mov
or
pop
or
lahf
mov
jnp
sub
mov
test
divl
jbe
cmp
pop
jmp
mov
dec
ljmp
adc
movsl
jmp
and
add
adc
roll
inc
stos
mull
clc
add
int3
mov
jne
les
pop
sti
sbb
imul
cmpsb
test
iret
mov
leave
pushf
sbb
negb
pop
mov
and
or
dec
in
ret
jmp
mov
les
adc
repz
fnstcw
and
lods
stc
lret
or
push
movsl
dec
js
mov
in
lea
les
lret
int3
push
lret
scas
xchg
lret
jmp
adc
xor
es
and
sub
inc
mov
imul
das
cmp
test
dec
xchg
ret
movsl
ljmp
push
add
dec
push
fwait
sbb
or
ds
cmp
or
divb
outsb
adc
div
jae
xchg
fbstp
jmp
pushf
fisttps
cwtl
mov
out
xor
pop
adc
push
xchg
iret
inc
testl
pop
jle
mov
xor
push
or
repz
xor
push
test
fsubr
push
jl
cmp
xlat
stos
push
push
push
outsb
pop
mov
xor
mov
fdivl
jle
outsl
mov
mov
into
ss
test
lods
daa
loop
push
imul
pop
mov
push
xor
push
pusha
mov
pop
xchg
es
mov
pop
sbb
push
xchg
repnz
mov
loopne
aaa
inc
cmpsl
cmp
lods
popl
adc
sbb
and
inc
jp
push
push
mov
hlt
jnp
cmp
outsl
push
add
movsl
inc
in
cmp
cmpsb
andb
scas
dec
shll
pop
in
inc
mov
xchg
lret
popf
add
cmp
lea
mov
or
ss
pop
push
or
mov
aam
fs
repz
xchg
jb
mov
lock
pop
lcall
les
pushf
mov
daa
lret
lret
call
cmpsb
test
stos
inc
test
loope
leave
pop
push
std
loop
inc
call
mov
and
outsb
inc
jp
mov
fidivl
lods
aad
inc
xchg
cmpsl
fwait
and
mov
fldt
jp
cld
sbb
inc
je
inc
iret
pop
mov
sub
mov
and
pop
inc
add
xchg
sub
dec
pop
leave
mov
andl
cld
push
push
data16
mov
sub
cmpsb
xchg
divl
mov
fcoml
out
gs
loopne
inc
pop
xchg
mov
jae
mov
dec
mov
xchg
sti
sub
and
jns
shrb
xlat
xor
jecxz
in
clc
lea
mov
movsb
subl
or
std
and
dec
mov
int
adc
shll
movsl
cmp
mov
sahf
cli
or
shll
rorb
jmp
push
fdivrs
lret
int3
leave
mov
rcrb
dec
stos
js
rol
fsub
jmp
subl
pop
xchg
addb
out
ret
sbb
jl
loop
sub
inc
sbb
ja
and
loop
repz
cmp
sbbl
or
clc
cmpsb
jns
jmp
xor
jmp
mov
or
push
jle
std
add
adc
test
bound
fdivl
jbe
adc
inc
push
out
push
mov
xor
aam
pop
mov
mov
push
add
je
sbbb
movsl
jb
addb
push
insb
add
xchg
cli
in
or
fldt
fildll
add
cmp
cmp
jmp
dec
add
arpl
dec
or
mov
out
cmp
lods
jae
mov
lcall
mov
jno
sub
adc
dec
dec
dec
repz
fistpll
mov
push
repz
cmpsb
fimull
jmp
adc
inc
cwtl
pop
out
test
out
fimuls
xchg
popa
rcr
or
loop
push
aam
pop
into
movl
jnp
aam
jb
fcomi
dec
add
and
aas
add
ds
enter
test
lds
fcompl
jb
les
stos
mov
in
inc
jle
jl
mov
repnz
add
xchg
idivl
rcrb
stos
cmp
sub
movsb
inc
mov
das
inc
rorb
aad
iret
lods
mov
jge
mov
push
test
sub
je
cs
or
imul
repz
and
mov
call
aam
add
cmp
push
repz
in
adc
dec
lea
sbb
push
sub
mov
roll
sbb
cmp
xor
mov
sub
jecxz
outsb
push
push
pop
fistl
insb
arpl
cmovge
mov
test
inc
pop
adc
js
mov
std
pop
cs
jnp
mov
jle
inc
jae
and
pop
and
and
pop
inc
popf
lret
fimuls
xor
movsl
add
cmp
jns
cmp
jnp
mov
sarl
insb
push
sahf
mov
adc
into
adc
inc
mov
or
sub
xchg
add
stos
mov
ljmp
inc
jl
inc
mov
mov
push
outsb
add
push
xor
repz
lret
arpl
dec
mov
sub
pop
mov
inc
xlat
in
jl
fwait
lds
int3
add
movl
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
sbbl
push
movl
cmpl
je
cmpl
ja
jmp
call
mov
dec
mov
jmp
mov
notl
mov
movl
push
mov
mov
mov
sub
imul
mov
mov
mov
movzwl
or
xor
adc
xor
and
mov
addl
add
subl
add
imul
mov
mov
cmp
je
and
mov
mov
mov
sub
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xor
add
mov
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
mov
dec
mov
jmp
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
movzbl
xor
mov
mov
xor
mov
add
mov
add
movzwl
mov
movb
sub
lea
mov
sub
mov
add
mov
andl
xor
andl
sub
orl
mov
movl
andl
mov
inc
mov
cmpl
jl
jmp
call
cmpl
jb
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
movl
movl
cmpl
je
cmpl
jbe
jmp
push
call
xor
xor
dec
mov
jmp
mov
push
and
mov
xor
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
subl
push
andl
add
movl
jmp
mov
movl
mov
movl
inc
cmp
movl
jb
andl
xor
xor
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
xor
adcl
add
jmp
adc
mov
mov
sbb
mov
orl
xor
mov
add
movzwl
mov
andl
mov
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
movzwl
incl
xor
orl
add
mov
mov
movl
mov
movl
inc
mov
movl
cmp
jne
inc
mov
movl
cmpl
je
cmpl
ja
jmp
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
dec
add
add
mov
xor
or
mov
sub
or
mov
sub
xor
add
add
orl
mov
movl
and
movl
orl
movl
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
pushl
push
push
push
call
cmpl
jb
mov
mov
mov
xor
mov
orl
mov
xor
add
mov
mov
mov
je
mov
mov
xor
orl
xor
sbbl
sub
andl
sub
neg
xor
or
mov
decl
mov
mov
add
imul
mov
mov
mov
subl
add
or
or
mov
mov
mov
jmp
mov
xchg
mov
xlat
lea
push
jl
jmp
jl
sbb
xchg
adc
inc
push
xlat
loopne
leave
and
lahf
inc
movsb
xchg
sar
ja
pop
repnz
jno
push
fcmove
out
mov
fwait
mov
and
loop
rcll
call
or
cmp
sti
mov
div
cmp
mov
std
push
add
cmc
lds
mov
add
enter
fcoml
jge
push
jb
mov
shl
mov
add
dec
icebp
negl
ja
push
inc
rcrb
fsubl
fcomip
sbb
xor
pop
loop
sub
cwtl
out
scas
pop
out
mov
push
insl
aaa
dec
push
lcall
popa
cwtl
jl
jb
mov
cwtl
adc
mov
inc
pop
mov
lahf
cmpsl
pop
popa
jno
and
xchg
push
sub
enter
jle
dec
mov
jbe
add
pop
fcomps
lock
in
mov
outsb
imul
jo
insb
mov
cmc
mov
or
outsl
movsb
lcall
or
mov
jns
xchg
and
or
mov
inc
stos
dec
push
into
enter
xchg
push
bound
in
shrb
mov
push
lcall
jno
push
pop
mov
sbb
fs
sahf
xor
add
mov
cmp
pushf
xchg
push
out
cmp
jns
lahf
aaa
add
aaa
sub
popa
pop
repz
pop
sbb
or
es
or
push
pop
movsl
cmp
lods
or
in
and
push
in
stos
aam
iret
adcb
lahf
enter
pop
fdivrs
mov
mov
int3
in
dec
jg
mov
pop
or
xchg
mov
mov
push
fcmovnbe
sub
mov
dec
jge
mov
subb
aad
ljmp
and
push
mov
xchg
or
outsb
idivb
out
lock
in
jle
outsb
jae
test
test
cmpsb
mov
mov
mov
sbbb
add
out
jb
mov
lret
cmp
stos
adc
arpl
jb
sbb
adc
push
push
inc
iret
dec
shll
cmp
popf
push
dec
imul
cmpsb
out
dec
fldcw
pusha
sbb
pop
pop
daa
sub
mov
sar
pop
xchg
inc
jl
rorb
add
pop
loopne
imul
pop
xchg
aam
push
mov
lds
xor
adc
sbb
and
push
leave
mov
bound
xchg
push
dec
mov
cmpsl
in
into
repz
add
lea
add
ja
mov
pop
dec
std
pop
into
pop
add
pop
adc
cmp
outsl
js
mov
in
inc
leave
or
js
pop
rcll
cs
stos
mov
push
jnp
lcall
jp
fcmovnbe
xchg
shrb
pop
cmpsb
xchg
adc
sub
cld
jl
out
or
fdiv
shl
aas
adc
xchg
jno
adc
or
mov
xchg
fdivs
inc
imull
or
stos
ljmp
cmpl
icebp
cmp
test
xlat
in
in
push
inc
jne
in
push
cltd
paddd
out
mov
add
mov
sbb
jns
dec
add
mov
pusha
pop
dec
sbb
push
icebp
or
jp
cmp
fistl
pop
mov
xchg
adc
push
and
sub
sbbb
jge
out
loopne
popf
aad
mov
sub
lret
push
mov
pop
mov
push
cs
pop
in
ret
pop
mov
shr
lods
mov
cwtl
lock
mov
mov
xorl
xor
sub
gs
cmp
iret
jp
iret
bnd
sub
xor
pop
push
stos
pusha
mov
lcall
mov
jbe
dec
in
xchg
jne
in
mov
xor
adc
pusha
cmpsl
pop
xchg
mov
dec
pop
mov
push
push
int3
adc
sub
jns
mov
pop
stos
pop
sub
mov
xchg
jmp
inc
fidivs
lds
pop
lea
jnp
push
adc
dec
sbb
mov
out
stos
push
lds
push
outsb
ror
shrl
jb
xchg
inc
and
cwtl
push
rclb
int3
inc
mov
xlat
jbe
jecxz
gs
inc
mov
mov
adc
jo
ret
into
bts
dec
and
dec
xchg
insl
in
pop
repz
out
gs
lcall
adc
cli
mov
push
mov
mov
test
cmp
in
into
mov
or
adc
loope
inc
arpl
xchg
test
sbb
es
inc
sbb
xorl
xor
mov
and
fs
adc
jb
out
pop
mov
inc
mov
sub
push
daa
sbb
test
movsb
ss
push
sti
imul
mov
push
lock
sti
testl
mov
adc
es
sbb
cmp
lds
mov
sub
mov
mov
fwait
js
mov
add
ds
jl
or
mov
gs
scas
push
cld
or
out
xor
xchg
inc
dec
inc
cld
inc
aaa
xchg
enter
mov
iret
xor
pop
stos
inc
jo
das
mov
mov
jae
lret
or
xchg
repnz
and
push
jmp
stos
shll
push
mov
cld
scas
dec
sbb
fs
xchg
and
jle,pt
data16
ret
adc
loop
mov
jbe
jmp
aam
mov
or
push
mov
shlb
icebp
xlat
xchg
pop
arpl
repnz
mov
xchg
shr
jmp
int
adc
push
shlb
cmp
in
add
aas
roll
std
insl
push
cmp
lock
xor
frstor
test
cmc
shlb
dec
sub
jno
or
loopne
add
cwtl
ds
icebp
and
cmp
negb
mov
addr16
adc
daa
and
outsb
loopne
movsb
mov
ljmp
xchg
or
shr
mov
jb
test
sbb
mov
fs
mov
pop
adc
xchg
loopne
idivl
and
outsb
scas
cld
mov
dec
xchg
cmpsl
inc
mov
pop
fbstp
jae
sbb
xchg
nop
cli
pop
or
ja
lahf
jg
iret
negb
hlt
call
cmp
or
es
dec
js
int
out
fists
adc
aam
fmull
mov
or
push
xchg
dec
gs
jbe
icebp
out
arpl
mov
hlt
push
jae
sub
xor
jge
push
jnp
or
test
jne
gs
mov
fs
inc
int3
lahf
cmp
push
mov
inc
fisubrl
lahf
jns
push
test
mov
out
or
push
rorl
xchg
jb
andl
sbb
call
enter
xchg
mov
pop
scas
dec
aaa
outsb
jl
stc
cmp
pop
push
pushf
data16
mov
shlb
jp
outsb
ss
inc
pop
popa
or
lcall
mov
cmp
pop
jo
xchg
mov
jae
and
data16
fsts
int
es
or
addr16
lea
imul
xor
push
sbb
jno
movsl
inc
push
fs
sub
dec
scas
jne
js
jbe
push
xchg
adc
dec
es
xlat
pop
jb
jl
dec
cmp
mov
mov
jp
sub
mov
scas
xchg
pop
xlat
int3
sahf
cmp
pop
inc
scas
jmp
and
popa
cmpsb
loop
lea
sub
cmp
or
ss
out
cmovb
mov
xor
push
cmp
data16
in
sub
push
pushf
aad
fldcw
and
xor
stos
inc
addr16
push
jno
ljmp
cli
push
push
aaa
pop
mov
sarl
cld
cli
out
outsl
dec
xor
lods
sub
or
add
xor
adc
cli
sti
subl
dec
in
jecxz
mov
rcrl
mov
push
jo
scas
rcrl
cmp
sti
clc
es
mov
dec
sbb
insl
cmp
adc
dec
mov
lahf
sbb
cld
faddl
add
cmc
ljmp
repnz
imul
inc
fcom
pop
adc
jns
xor
mov
ret
xchg
into
sub
sub
addr16
ds
pop
or
outsl
mov
pop
inc
pop
ljmp
xor
sub
lea
test
dec
push
mov
mov
lds
and
lcall
dec
dec
mov
cmpsb
je
stos
jmp
pop
shll
subl
fisubs
push
pop
pusha
mov
pop
addr16
xor
mov
jge
xor
call
hlt
pop
mov
mov
xor
nop
loop
lods
cli
ja
sbb
and
jp
pusha
fistpl
jge
sub
mov
ret
sbb
dec
fbstp
out
aam
movsl
aaa
sbb
insl
sub
ret
jge
adc
add
ss
xor
dec
xchg
cmpsl
push
adc
lds
adc
icebp
mov
rol
xor
in
aas
call
fs
popf
orl
mov
dec
push
stos
leave
xchg
in
insb
cmpsl
jmp
daa
jo
xchg
js
mov
dec
rcl
imul
repnz
and
sub
loope
cld
sarl
in
jnp
aas
fxch
and
mov
inc
jg
int3
or
lods
ljmp
pop
scas
add
add
mov
mov
sahf
and
mov
vpsubusw
jae
test
lods
imulb
mov
add
and
fs
cmp
cld
shll
nop
mov
loop
out
sbb
xlat
push
repz
push
adc
imul
xor
notl
cmp
mov
lea
js
jecxz
dec
jo
mov
stc
adc
clc
jnp
xchg
ret
sbb
pop
xor
xchg
mov
fcoms
mov
push
mov
adc
insl
pushf
pushf
or
repnz
sub
hlt
pop
rolb
cmp
and
inc
mov
fs
dec
loopne
jno
inc
or
push
adc
jbe
fucom
bound
sub
insl
and
fcmovb
into
jns
cmc
or
dec
lahf
mov
mov
jp
out
out
xchg
in
jo
fcomps
or
insb
je
pinsrw
fstpt
loope
mov
or
sub
jp
mov
mov
and
sbb
bound
ja
aas
shrl
dec
imul
aam
scas
mov
outsb
lods
enter
lea
repz
adc
notb
lcall
aam
xor
xchg
cmpb
test
pushf
sbb
or
pushf
inc
mov
jnp
push
enter
aas
pusha
iret
add
daa
mov
dec
jb
aas
cmp
mov
pop
aaa
cmp
jecxz
add
and
test
int3
adc
popa
cmc
jp
cmp
js
inc
insb
pop
out
sub
push
clc
mov
je
shlb
in
xchg
xor
sbbl
pop
stos
xor
cmp
push
aad
cmp
dec
dec
mov
pop
andb
jl
and
popf
test
sbbl
insb
fiaddl
jnp
cmp
test
xor
pusha
hlt
incb
lods
pop
sti
mov
mov
xchg
sbb
in
cli
enter
popf
add
push
insb
mov
int3
dec
in
idivb
andb
out
mov
xchg
adc
mov
pop
imul
sub
movsb
inc
in
dec
dec
jns
dec
mov
or
push
test
fcoms
movsl
orb
jg
addr16
pop
mov
push
lds
push
sbb
mov
lods
movl
sarb
adc
aas
xlat
push
loopne
mov
xchg
js
aas
xchg
lea
sbb
push
stc
mov
xlat
jle
les
in
jbe
popf
mov
mov
inc
lea
in
add
popa
rcl
mov
mov
sbb
add
add
mov
dec
jae
mov
movsb
inc
sbb
xor
pop
fst
mov
clc
sti
stos
out
ja
sbb
add
nop
cmp
repz
mov
xor
sbb
or
jp
aas
fnstcw
inc
das
fldcw
hlt
jecxz
lcall
xor
sub
inc
push
pop
nop
xchg
je
pop
xor
mov
and
push
jno
gs
jp
pop
es
out
enter
mov
mov
sti
int3
repnz
dec
and
xor
dec
or
mov
mov
dec
mov
sbb
sub
cmp
call
insl
dec
mov
xchg
mov
xchg
clc
test
mov
cmc
mov
movsb
jae
loope
ret
push
bound
rol
cmpsl
xor
pop
lret
mov
push
cmc
xchg
xor
insb
mov
xor
jmp
mov
jle
inc
sub
bound
push
cwtl
xor
out
pop
push
jmp
adcl
popf
xchg
inc
mov
adc
es
and
dec
jle
sbb
movsb
xchg
fstpt
fstp
cmp
dec
sbb
out
int
push
jp,pn
sbb
jp
mov
mov
js
rcll
mov
insl
clc
inc
stc
xchg
scas
or
rcll
clc
mov
lcall
mov
xor
mov
inc
or
sub
jge
out
rcr
shl
sub
sub
sbb
push
fstl
cmp
sbb
lock
adc
xchg
pushf
inc
outsl
out
or
sub
adc
ret
dec
rcrl
test
lods
lret
out
push
mov
loopne
add
cmp
out
sub
xchg
mov
hlt
test
idivl
aas
xchg
icebp
sahf
mov
stos
dec
add
inc
lea
mov
fisttpll
imul
jl
es
cwtl
sbb
and
sbb
inc
xlat
push
fwait
mov
enter
sbb
gs
addr16
or
jmp
sbb
fsubs
add
mov
mov
les
popa
js
pushf
push
in
cmc
jg
xchg
cmc
cmpsl
and
jmp
jmp
push
iretw
inc
jecxz
cld
mov
mov
push
pop
xchg
push
into
sar
push
push
cld
push
insb
sbbb
int
es
xchg
dec
scas
shrl
inc
jl
loopne
arpl
test
rorl
inc
xchg
or
int
test
push
ret
in
imul
lods
fildll
es
popa
cmp
xor
cmpsb
dec
add
push
les
cli
pop
push
testl
out
lret
mov
jne
jb
adc
test
adc
call
loope
ja
inc
sbb
sub
pop
cmp
jecxz
push
call
inc
push
sub
jne
loop
sbb
lods
push
mov
inc
add
les
das
ret
into
ficompl
imul
shll
lcall
or
jns
add
mov
lock
cwtl
pop
in
cwtl
fwait
aaa
cmc
popa
adc
popa
cld
sbb
dec
iret
les
xor
or
js
sub
out
mov
push
sbb
xor
lcall
xor
data16
shl
test
push
je
mov
pusha
xor
inc
dec
mov
test
xchg
negl
rol
and
stc
call
aaa
mov
flds
pop
xlat
sbb
fcom
pop
fld
std
outsl
jbe
jbe
cmpsl
sub
dec
int
pop
jge
add
sbb
lcall
xor
mov
push
jnp
add
outsb
add
add
mov
push
and
add
inc
sarl
ja
jb
arpl
xchg
mov
jnp
xchg
shll
inc
icebp
fs
pop
or
mov
dec
xchg
sub
or
cli
xchg
aaa
stos
xor
push
pop
mov
addl
xlat
cmc
ficompl
mov
pop
mov
adc
cld
jo
clc
clc
pop
int
lods
pusha
jno
addr16
fisttps
test
mov
fmul
out
and
ret
rcrb
or
adc
jge
sbb
je
sub
inc
sub
sbb
imul
mov
jbe
inc
fbld
mov
scas
nop
sub
les
dec
orb
in
jmp
lret
sbb
into
lods
scas
aas
rcrb
add
xor
jmp
gs
mov
es
into
aad
pop
jns
int
mov
adc
xchg
enter
add
test
push
and
sahf
int
shrl
jp
test
fwait
ret
popf
and
xlat
push
arpl
adc
cli
mov
push
cmp
sbb
xor
or
push
dec
jne
fcomps
test
aad
push
movl
bound
or
icebp
or
cmp
inc
fldl
call
or
pop
in
xor
je
and
mov
rorb
pop
fcmovnbe
sub
push
mov
inc
xchg
cmc
jge
push
xchg
xchg
iret
sbb
ja
loopne
and
addl
cmp
adc
sbb
dec
jl
cwtl
cmpsl
and
repnz
pop
faddl
mov
inc
adc
mov
ljmp
jno
cmpsb
roll
sub
cmpsl
clc
scas
test
clc
js
mov
fidivs
cmp
mov
negb
or
jmp
arpl
adc
test
sbb
jle
orb
mov
xor
pop
xor
icebp
mov
xchg
push
add
in
push
insb
fcoms
dec
jb
cmp
stos
sub
mov
stos
sub
lds
scas
aam
pusha
enter
pop
ss
enter
xorb
movsl
mov
pusha
sub
frstor
or
jnp
fistl
ficompl
cli
aas
xchg
jbe
fwait
cwtl
and
jmp
cli
push
mov
pop
out
repz
cmp
jge
mov
or
sahf
jb
sub
push
push
push
pop
mov
test
jnp
iret
jne
mov
divb
dec
mov
add
jae
lea
push
and
cwtl
sub
jae
enter
sbb
or
je
jne
sub
mov
sti
ss
push
ret
jmp
mov
cmpsb
cmp
gs
pop
xchg
fmuls
jo
sbb
push
daa
adc
mov
pop
jmp
or
xor
xchg
jp
fstl
notl
mov
mov
pushf
pop
or
add
and
jp
psrlw
ror
push
xchg
xor
sub
adc
dec
inc
mov
jecxz
jo
jl
adc
js
enter
out
mov
cmp
xchg
nop
and
inc
loop
xchg
repnz
mov
push
mov
sub
add
xor
lds
daa
cwtl
sub
sbb
push
mov
stos
jns
shrb
mov
push
mov
push
scas
mov
cltd
xchg
add
cwtl
push
or
pusha
pop
pop
adc
mov
stc
stc
push
roll
push
ret
out
or
les
flds
cmp
lcall
xchg
adc
adc
aad
dec
roll
movsb
insb
shrl
mov
aad
cmp
mov
push
cmp
jge
leave
andl
mov
or
xchg
mov
push
leave
mov
arpl
pop
mov
cmp
adc
add
icebp
jg
test
das
sub
cs
lds
pop
inc
dec
add
insb
or
cmp
push
or
sub
push
enter
and
inc
and
iret
dec
pop
addl
hlt
cmp
pusha
sbb
lds
xchg
inc
mov
push
or
mov
std
adcb
mov
iret
insl
cld
mov
ret
add
js
aas
daa
mov
inc
ljmp
jnp
mov
outsb
out
icebp
jle
out
out
dec
inc
inc
shrl
pushf
xor
ja
outsl
mov
push
push
adc
in
jb
cmp
or
std
mov
mov
fcomi
mov
sbb
clc
push
ret
pop
add
std
fs
push
adc
decl
das
xchg
les
mov
pop
scas
xchg
mov
sarb
outsb
jns
dec
popf
cmp
fbstp
ret
xorl
mov
test
insl
fdivrl
popa
jo
sbb
jns
fisubs
jb
je
shlb
lret
sbb
out
mov
mov
imul
adc
nop
test
fs
ljmp
sbb
sub
cmp
ret
xchg
ftst
cmp
int
daa
xchg
pushf
add
adc
imull
xchg
into
sub
cmp
and
aaa
push
adc
int
add
scas
xor
sti
dec
add
pusha
mov
dec
mov
divl
xchg
sahf
pop
in
sub
adc
iret
push
mov
xor
xchg
pop
iret
pop
arpl
cmc
pop
or
jnp
or
and
xchg
dec
insl
adc
popa
mov
nop
xchg
inc
adc
fcomi
imul
in
ljmp
lods
sahf
stc
and
sub
adc
and
jbe
mov
pop
dec
shll
mov
jbe
adc
mov
sub
sbb
jns
subl
psubusw
xchg
xchg
std
xchg
shlb
cmpsb
pop
xor
icebp
mov
sar
fiadds
scas
arpl
add
aaa
rcr
xchg
popa
adc
fmull
mov
daa
push
jge
dec
and
ret
inc
jb
test
mov
out
sahf
mov
cmpsl
mov
xchg
pop
daa
lods
js
pop
pop
cmp
mov
mov
xor
lahf
xchg
movsl
cltd
std
dec
movsb
pop
adc
sbb
sub
jns
push
in
lods
sub
xchg
dec
movsl
stc
mov
mov
jae
push
les
shrl
and
shr
ret
int
int3
add
sub
jp
sub
sub
enter
rcr
int
shll
hlt
adc
inc
shlb
push
pop
ficoml
sbb
in
aas
ror
pop
in
mov
stos
imul
fisubl
cmpb
push
mov
pop
inc
mov
mov
mov
add
add
jno
jno
stos
or
and
xchg
lea
xchg
out
jae
add
add
xchg
stos
enter
jnp
jnp
mov
out
lds
add
cmpb
in
xadd
or
insb
mov
dec
cmc
cmp
xchg
popf
dec
daa
hlt
push
add
hlt
inc
jl
cwtl
xor
dec
sub
dec
mov
ja
fcomi
ljmp
add
dec
jbe
jmp
aad
or
imul
insl
pop
push
xor
mov
adc
pop
les
mov
push
push
mov
or
pop
dec
adc
cmp
arpl
jb
jmp
js
push
and
adc
mov
shl
outsl
test
xchg
push
cltd
loopne
cmp
mov
arpl
mov
add
filds
data16
xor
lods
clc
stc
pop
loopne
add
fdivl
mov
aaa
in
jmp
repnz
jle
inc
out
and
push
xchg
ja
shll
rcll
in
jge
sbb
xor
cmp
sub
push
icebp
pop
sub
adc
push
jnp
cmp
and
push
movsb
inc
dec
ret
pop
insl
jl
mov
jge
adc
cmp
push
mov
fcomps
inc
mov
sub
or
cmp
mov
adc
mov
scas
sbb
out
and
stos
in
insl
push
mov
gs
lcall
mov
sti
ret
iret
gs
out
js
arpl
out
mov
cmpb
rclb
xchg
sbb
pusha
addr16
adc
and
xchg
cld
stos
sbb
mov
pop
fwait
dec
jae
and
std
sbb
or
ss
and
aam
js
pop
add
repz
inc
push
cmpsb
or
pop
movsb
call
pop
push
mov
popf
xchg
jno
fimuls
jne
or
cmp
outsb
test
shll
pop
mov
xchg
jae
pop
cmp
mov
adc
in
jno
cmc
aas
mov
add
addr16
adc
push
lods
xchg
inc
add
mov
jecxz
sub
cmpsl
loop
pop
jb
xchg
rcl
repnz
pop
insl
outsl
mov
aas
outsb
sbb
sbb
mov
mov
mov
mov
es
imul
mov
push
cltd
fidivs
xchg
dec
fsin
fcom
jecxz
mov
flds
push
cwtl
mov
and
inc
or
xor
mov
cmp
dec
vsqrtsd
dec
popa
inc
jecxz
fidivl
sub
ljmp
jg
add
hlt
add
shl
imul
scas
mov
and
push
int
dec
adc
push
mov
xor
cmp
mov
push
icebp
cmp
cmp
insl
out
pop
fistl
loope
or
inc
stos
jae,pt
or
xor
pop
cld
cld
lcall
mov
mov
pop
xchg
aaa
sbb
addr16
cli
out
addl
pop
mov
cli
inc
stc
jno
xor
cmc
add
hlt
mov
cmpl
push
pop
fprem1
scas
mov
lods
xor
int3
std
mov
es
inc
ret
push
bound
lds
jne
out
lret
enter
ljmp
int
mov
ss
sub
jecxz
mov
in
dec
fwait
std
fcomi
sub
dec
and
std
pop
mov
jns
push
jns
es
mov
pop
stc
adc
jl
ror
test
rclb
and
mov
mov
int
aam
call
shl
xchg
jae
jle
add
or
data16
fstpl
repz
aam
outsb
add
lock
xor
arpl
lods
notb
xchg
pop
xchg
sbb
lret
cmp
push
mov
or
mov
mov
mov
push
paddsb
push
scas
xchg
in
push
jl
in
fwait
jle
cmp
dec
inc
adc
pop
and
in
sbb
sub
rcrl
ds
xchg
pop
in
xchg
dec
outsb
sbb
imul
push
pop
inc
ret
sbb
outsl
jb
lods
fistpl
shlb
cmpsb
xsha1
cmpsb
dec
fdecstp
lahf
add
pop
aas
dec
pop
xchg
mov
stos
inc
push
cltd
push
adc
adc
mov
push
jne
push
push
pushf
outsl
call
sbb
mov
enter
lock
fadd
xchg
jmp
test
fiadds
cmp
jae
imul
push
mov
lea
inc
jno
repz
xlat
xor
ficoms
pusha
pop
stc
stos
sbb
sub
xor
insb
add
test
cli
in
mov
push
mov
mov
aas
movsl
aas
mov
push
loopne
add
dec
jge
inc
in
icebp
inc
lods
cld
mov
cmp
xchg
pop
daa
sub
out
addr16
call
enter
pop
call
fidivl
lcall
cld
into
orb
testb
mov
sub
push
test
cmc
cmp
mov
jae
repnz
mov
push
mov
cmp
lcall
movsl
testb
add
adc
sub
cmp
jmp
push
or
mov
movsb
cmp
add
cwtl
dec
popa
int3
push
das
pop
lahf
iret
stos
mov
js
leave
jns
cmp
leave
jns
out
popa
je
inc
pusha
xchg
test
push
pop
cmpsl
inc
fldl
lock
fs
mov
scas
loopne
lcall
mov
lea
rcrl
jg
dec
push
sub
push
stos
fsubs
pop
mov
mov
out
push
lock
loopne
sbb
xlat
xor
int3
nop
loope
and
push
adc
out
xor
pop
ret
lret
call
adc
sub
outsb
cmp
mov
pop
mov
loope
xchg
inc
leave
out
imul
jecxz
ret
jae
les
aam
mov
punpckhwd
pop
dec
lds
mov
pop
adc
xchg
jmp
out
int3
xor
jnp
jmp
xchg
inc
int3
cmc
sbbb
add
lahf
push
in
in
scas
sub
outsl
clc
stos
filds
dec
call
cs
shrl
inc
xor
inc
adc
in
or
and
add
jmp
das
outsb
stos
les
mov
push
mov
imul
jp
or
jns
arpl
fnstcw
mov
inc
iret
xor
adc
add
repz
cmpsl
xor
add
ret
cmpsb
jp
lret
repnz
sub
dec
cli
mov
ret
adc
pusha
div
xchg
push
fcoml
sub
test
cmp
int
sbb
les
imul
clc
and
mov
mov
cld
mov
fstpl
adc
add
inc
mov
sbb
addb
ret
cmp
or
jns
sub
es
pop
loopne
in
out
rcl
mov
adc
in
jg
ret
inc
mov
xlat
mov
pop
imul
outsl
rcll
ljmp
mov
inc
add
jae
adc
jmp
mov
roll
sbb
stos
daa
repz
cmp
inc
xor
or
jnp
mov
inc
in
jecxz
cmc
push
pop
jns
dec
cmpsb
cmp
sbb
cmpsl
dec
sar
pop
lods
push
xor
and
push
xchg
xchg
ss
fxch
ja
outsb
insl
sbb
jnp
sbb
inc
sahf
ja
notl
lahf
jo
in
lods
shll
stos
lods
and
xor
dec
mov
jno
out
sub
rol
sbb
divb
jae
add
mov
cmp
arpl
sahf
mov
out
jns
push
shl
sahf
icebp
adc
sbbl
push
xor
mov
scas
mov
xor
xor
push
adc
jns
cld
xlat
ret
hlt
inc
mov
adc
jmp
mov
jbe
and
jge
sub
bound
mov
addb
and
imul
push
pop
mov
sub
inc
push
mov
or
and
shll
imul
mov
mov
pop
xlat
dec
icebp
std
les
xor
cmp
inc
adc
xchg
and
xchg
dec
rolb
aam
movsb
arpl
lods
aam
and
data16
adc
sti
mov
lods
into
cltd
int3
stos
scas
fimuls
pop
cmp
repz
call
push
sub
fsubs
sub
jp,pn
popf
icebp
mov
pop
daa
jns
inc
daa
test
xchg
mov
mov
mov
ret
es
test
shll
rorl
add
sbb
mov
mov
mov
sbb
mov
jmp
movl
ret
xchg
cs
xchg
sbb
repz
jl
pop
jl
sarb
jg
pop
sub
pop
daa
jb
sub
out
std
sbb
sbb
adc
mov
cmpsl
jne
inc
jl
inc
adc
out
adc
divl
mov
lcall
pop
mov
mov
cmpsb
mov
adc
aad
jbe
fs
subb
add
push
dec
xor
sub
stos
jno
inc
lods
roll
cs
enter
add
mov
test
jno
aas
std
ja
dec
mov
fcomp
loope
xchg
jns
icebp
pop
sbb
decl
lcall
ficompl
popf
push
pop
bnd
leave
pop
inc
mov
fisttpl
or
and
mov
je
movsb
mov
pop
aaa
popa
dec
cmpsb
cmp
pop
push
ja
roll
or
cmp
xor
and
sar
pop
pop
mov
xchg
xchg
cmpsl
pop
roll
data16
sub
add
outsl
gs
scas
xlat
pop
dec
and
xor
push
icebp
mov
orl
lret
jp
xchg
xor
inc
dec
cld
data16
or
orb
ss
dec
dec
mov
lret
mov
adc
xor
dec
inc
mov
adc
adc
es
or
call
sub
cmpsb
inc
cld
adc
arpl
jnp
jae
ret
adc
cld
and
cmp
hlt
sbb
cmp
jns
jbe
dec
jle
push
js
sub
jecxz
cmp
push
pop
ja
fwait
push
fisttps
jl
cltd
ljmp
insl
jmp
lods
repnz
mov
imul
in
sbb
scas
or
ficoml
mov
dec
adc
in
fistpl
cli
sub
or
stos
clc
xor
shll
xor
cmp
xchg
pop
into
test
mov
sbb
xlat
push
in
mov
pop
inc
pop
popw
fsts
mov
mov
dec
in
ficompl
jb
insb
cmp
jb
jae
or
jnp
or
es
mov
dec
nop
or
addr16
test
es
aam
mov
mov
leave
fdivp
adc
cltd
sbb
jb
xchg
or
cs
cs
dec
lahf
sbb
pop
mov
clc
lret
lods
mov
insl
cwtl
leave
jb
adc
xor
out
jmp
sub
jecxz
sub
and
fiadds
sub
mov
sti
pop
xor
cmp
xor
add
cs
shl
sbb
xchg
pop
movsl
jno,pt
adc
sbb
stos
mov
data16
fwait
rcr
cmp
rolb
pushf
loope
insb
cmpsb
lcall
lahf
pop
jmp
fisubrs
out
clc
ret
ret
lods
pxor
gs
dec
and
add
xlat
or
sub
pop
ja
adc
test
aad
test
lret
push
jmp
in
mov
pop
mov
stos
push
in
mov
inc
outsb
inc
rorl
push
push
cld
sbb
shr
lds
lds
jl
xchg
jns
dec
and
clc
pop
sub
push
sub
xchg
mov
jno
push
test
xor
push
xchg
mov
jb
and
xchg
push
fstpt
sbb
push
imul
es
cltd
adc
inc
test
in
add
pop
fs
sbb
andl
push
xchg
out
xchg
enter
sbb
jne
sahf
pop
xchg
gs
jnp
dec
sub
das
pop
clc
push
fwait
icebp
pop
int3
std
jns
shlb
jbe
add
int
int3
or
push
mov
jecxz
jg
flds
dec
push
inc
fisubrl
shlb
in
repz
jge
mov
adc
js
mov
jb
lock
push
mov
out
jg
popf
xor
insb
mov
mov
jle
jge
add
clc
mov
sbb
mull
pop
cmp
and
lea
lahf
in
aaa
clc
adc
mov
hlt
leave
movsl
scas
pop
mov
cmp
jg
push
scas
add
lret
shrb
stc
jns
cmpl
into
inc
jo
adc
shl
aaa
jmp
add
inc
cli
mov
sub
in
pusha
mov
hlt
or
lock
adc
aam
loope
mov
adc
aas
adc
test
loopne
xchg
loop
js
cmpsb
mov
je
mov
push
sbb
sbb
mov
ret
fdiv
pop
adcb
stos
mov
cmp
xchg
std
in
push
mov
cmp
ss
dec
testl
mov
mov
aas
xor
mov
mov
daa
dec
test
pop
aaa
cs
mov
es
leave
pop
mov
push
lea
and
adc
sub
notb
mov
pop
push
cmp
ret
dec
test
jge
test
ljmp
testl
jge
inc
xchg
pop
mov
cmp
add
push
inc
xchg
pop
outsb
shrb
cmp
push
fisubrl
movsl
dec
or
sub
movsl
mov
stos
inc
cmp
lock
pop
push
int3
bound
or
jae
mov
mov
test
inc
in
jae
cmp
add
out
popf
adc
or
push
in
xchg
in
test
add
loop
shl
ret
xchg
adc
sti
loop
dec
sarl
fs
jns
or
stos
mov
mov
dec
repnz
out
jecxz
loopne
mov
xchg
or
movsb
stc
and
out
dec
lret
or
cmp
divb
int
xchg
xchg
leave
push
mov
fsubl
repz
jbe
je
or
pusha
out
dec
pop
mov
cld
loopne
out
dec
loope
xor
add
in
adc
es
shr
dec
sbb
dec
out
clc
dec
push
mov
jge
inc
call
xor
test
adc
jae
jbe
sub
cmp
xchg
jp
mov
dec
imul
jns
outsl
inc
mov
jecxz
jnp
arpl
mov
data16
mov
mov
pop
nop
push
lods
cmp
sub
iret
rcll
adc
stc
mov
pushf
ret
cmp
xchg
inc
push
xchg
out
push
dec
nop
rclb
cmp
add
mov
daa
or
or
push
hlt
adc
aad
shll
xor
gs
lcall
xor
jno
mov
icebp
mov
mov
push
fldenv
pushf
lea
mov
or
orb
cwtl
test
mov
push
ljmp
outsb
inc
push
or
inc
popa
dec
stos
mov
aam
into
pushf
in
jns
popa
stos
mov
and
das
jl
repnz
insb
repz
ror
lock
repz
pusha
leave
mov
adc
lods
xor
mov
jmp
je
lret
insl
pop
mov
movsl
jge
pop
call
cmp
inc
adc
mov
stos
cmp
sbb
int3
jnp
int
popf
pop
repz
lock
es
mov
cmp
shlb
stos
adc
das
insb
pop
xor
stos
jo
out
loop
inc
cltd
dec
lea
mov
ljmp
jle
and
out
sbb
stos
iret
mov
aas
xorl
jnp
ret
jmp
mov
jb
jp
jb
pop
lret
cmpb
sub
iret
mov
jmp
mov
hlt
push
dec
fdecstp
clc
adc
test
stos
push
inc
pop
out
fs
ljmp
mov
mov
pusha
pop
ret
sbb
inc
ljmp
mov
daa
dec
andl
pushf
loopne
push
rorb
cltd
push
call
negl
outsl
jg
xchg
dec
inc
fstpl
fistpl
cmp
push
or
test
popf
add
cmp
in
cltd
scas
sti
xchg
mov
add
pop
iret
cmpsb
rcrl
insb
cmpsb
xchg
or
ficompl
cmpsl
sbb
ss
lods
aam
fwait
sub
mov
or
fsubrl
sbb
test
in
jbe
xchg
pop
mov
mov
imul
pop
push
int
and
and
jmp
into
fistl
sub
sub
fidivrs
filds
xchg
repnz
mov
push
inc
imul
inc
je
pusha
fcompl
in
sub
sub
adc
out
pop
call
mov
sbb
xor
shrb
inc
enter
aam
pop
sbb
or
fwait
and
push
jno
fcom
jne
aaa
and
dec
arpl
mov
mov
repz
xor
jmp
push
loope
mov
stc
add
dec
popf
push
push
clc
lea
mov
xorb
mov
aam
jmp
push
sbb
mov
xor
ljmp
add
or
cmp
enter
sub
jle,pt
sub
pop
mov
jb
icebp
adc
xchg
aam
mov
and
nop
popf
out
add
out
jbe
mov
pop
add
adc
nop
add
dec
cmpb
jns
test
popf
dec
iret
roll
mov
arpl
xchg
push
xchg
arpl
sub
pop
mov
imul
or
pop
sub
dec
ret
stos
daa
add
inc
cmpsb
outsl
int3
inc
cmp
js
shlb
das
mov
movsb
rcrb
aas
cmp
ret
roll
cmp
mov
sub
imul
movsb
and
add
jmp
insb
sub
fildl
pusha
sbb
push
cmp
gs
js
sub
aaa
pop
cmp
addr16
xlat
add
dec
jl
enter
rol
mov
jno,pt
mov
push
mulb
mov
jne
frstor
imul
xor
adc
lds
inc
sti
imul
cmp
jp
popf
mov
pop
int
fcoms
daa
add
push
mov
xchg
aaa
pop
add
xchg
les
and
jecxz
std
or
bound
scas
push
outsb
out
xchg
push
sahf
ret
jo
subl
jge
sub
cltd
add
xchg
adcl
nop
jae
in
cmp
gs
cmpb
lret
adc
pop
and
mov
add
inc
daa
add
jle
mov
decl
jne
aas
outsb
cli
in
cmp
sub
cld
cmpsb
jg
ljmp
push
aaa
gs
inc
repz
xchg
jno
inc
mov
sub
out
ss
dec
imul
hlt
add
and
sbb
test
daa
xor
and
vpsrlq
sbb
xchg
xchg
sbb
int3
jne
push
js
or
aaa
movsl
fistl
inc
push
jnp
pop
xor
pop
xchg
cs
and
lahf
repz
cltd
jnp
nopl
xor
mov
rorl
add
loop
mov
imul
sarb
lret
pop
push
cli
adc
push
adc
or
das
and
fwait
mov
push
jae
sbb
cld
sub
lock
inc
adcb
jnp
xchg
aad
sub
mov
movsl
jae
mov
bound
int
cltd
das
scas
stc
cmp
dec
sbb
imul
and
pusha
pop
sarb
int
sbb
and
rorb
xchg
and
pop
push
bound
sar
testb
jmp
test
dec
pushf
dec
add
cmp
xor
call
mov
cld
rcrb
or
es
js
mov
or
ds
mov
push
push
popa
call
cmpsb
pop
add
int
sahf
mov
das
xchg
jno
inc
or
into
push
faddp
enter
pop
inc
ds
mov
shll
mov
and
mov
jle
aas
mov
add
outsl
scas
js
and
mov
into
cli
xchg
sbb
pushf
mov
sarl
subl
scas
fwait
push
cmp
imul
and
lahf
test
lahf
mov
sbb
insb
mov
fisttps
fisubs
cmpsl
rcr
lock
and
mov
sub
mov
or
loop
jnp
adc
test
je
cmc
dec
testb
xchg
xchg
xor
push
int3
push
pusha
adcb
stos
pop
sub
in
std
jp
jl
cwtl
and
push
jg
sub
pop
sbb
or
icebp
loope
add
dec
fstpt
movsb
xor
jb
imul
mov
inc
jno
add
mov
push
js
jmp
dec
lods
mov
xor
inc
xor
fcoml
cltd
fisubs
cmp
pop
stos
fsubl
add
adc
shll
xchg
nop
adc
or
lods
add
push
adc
jbe
cli
and
aam
cmp
je
popa
repz
loopne
mov
cmp
loope
cmp
pop
daa
mov
jmp
shll
xchg
xchg
dec
in
and
cmp
ret
and
push
mov
or
push
outsb
loop
insb
es
xor
addr16
je
clc
push
jb
dec
sub
pop
ficompl
aas
xor
cmp
out
mov
ljmp
push
lock
add
in
aaa
and
dec
push
fstpl
stos
adc
lods
ds
pop
fmulp
add
cmc
pop
scas
mov
pop
ret
xchg
add
test
mov
popf
or
in
dec
xchg
add
fstpt
out
jp
stos
mov
addr16
mov
pop
adc
xchg
mov
xchg
sti
mov
sbb
pop
daa
outsb
add
test
andl
sub
sbb
sub
sub
jl
xchg
mov
inc
jmp
sub
jecxz,pn
test
jle
int
adc
adc
arpl
outsb
in
popa
repnz
sbbl
pop
stos
aas
mov
jecxz
mov
stos
dec
lret
push
fildll
icebp
xor
dec
adc
mov
popf
jo
add
pop
movsl
ds
jg
push
xor
adc
mov
adc
inc
or
adc
test
mov
dec
jnp
push
mov
mov
int
into
das
mov
push
int
or
sbb
mov
test
sub
ds
fsts
leave
push
jae
std
mov
loope
test
jl
mov
cs
scas
dec
push
rorl
mov
popa
mov
pop
xor
test
rorb
cmp
push
jp
outsb
in
xorb
insb
fsubrl
lock
dec
inc
inc
push
hlt
xor
fwait
mov
mov
gs
dec
fidivs
sub
push
popf
add
bound
in
mov
push
in
xchg
cmc
popa
xor
or
jae
push
into
sbb
std
jns
push
push
loopne
mov
lcall
sbb
repz
adc
adc
shll
jae
push
std
or
shrl
adc
repz
je
clc
in
ds
jns
fildll
aad
loopne
push
or
shll
jne
push
movsl
pop
fsub
inc
insb
fisubl
xchg
icebp
adc
fbld
repnz
das
push
cmc
in
test
ljmp
lahf
fldcw
xchg
xchg
popf
shlb
idivl
mov
sbb
es
add
mov
out
lcall
decl
cltd
jg
sbb
push
cmpsl
xor
xchg
jnp
mov
call
xor
inc
loop
jp
push
fldl
lcall
or
push
mulb
push
cmc
adc
pop
inc
mov
dec
addb
xor
add
fdivrl
and
repnz
pop
lcall
inc
push
and
mov
add
jae
fsubr
push
pop
movsb
aas
jg
cmp
pushf
add
jns
pop
xchg
rcrl
into
mov
jnp
lods
or
dec
lea
sbbb
imul
rcrb
cmp
dec
cmp
xor
add
dec
jmp
pop
popa
iret
ficoml
sbb
dec
int
push
fcmove
gs
inc
filds
ret
data16
jge
mov
idivb
add
arpl
in
sbb
not
xchg
xor
jo
sbb
iret
dec
loopne
sub
xchg
mov
jl
fwait
popf
push
pop
imul
mov
shrb
adc
test
popf
addr16
jno
aad
ss
sub
xchg
int
leave
sbb
mov
xchg
adc
mov
lea
dec
sub
mov
movsl
into
sbb
movsl
inc
dec
inc
outsl
lock
cmp
xor
xor
push
inc
or
mov
or
cmp
jecxz
sti
cmp
fst
divps
in
mov
mull
and
pop
in
in
mov
mov
add
dec
popf
lock
shl
movsl
jae
jae
push
cmp
addr16
inc
add
mov
mov
cmpsl
mov
xor
fbld
pop
push
dec
pop
xchg
cmpb
push
in
xor
popf
pop
mov
aam
pushf
aas
add
jle
lods
addr16
cmp
mov
cmp
je
filds
xchg
mov
cmp
cwtl
add
out
fdivl
pop
mov
aas
add
test
int
out
mov
mov
enter
cmp
sbb
pusha
lea
xor
cli
out
shll
outsb
shlb
adc
test
movsl
jbe
bound
cmp
sub
jmp
dec
mov
dec
mov
mov
adcl
ret
push
lret
jbe
mov
fdivl
add
sub
outsl
stc
pop
push
sbb
mov
lahf
ds
repz
rolb
ret
shll
ds
cltd
rcrb
dec
adc
dec
dec
jecxz
insl
imul
fstpt
pop
in
fildl
add
or
addr16
pop
fadds
fisubl
pop
lret
mov
sahf
ffreep
sub
and
mov
call
lock
out
adc
push
fistpl
cmpsl
les
xchg
add
and
mov
adc
mov
cmp
jne
add
es
mov
push
sbb
dec
pusha
sub
fldl
dec
ret
daa
sahf
add
mov
sbb
jnp
pop
push
dec
aaa
lret
jl
mov
pop
mov
movb
pop
lds
sub
ds
rorl
mov
les
mov
cmp
push
jg
lar
loope
movsb
sbb
add
pop
jmp
test
lds
and
push
or
daa
repnz
dec
rcr
in
std
loope
movsb
pusha
lock
pop
jge
sbb
cmp
dec
scas
mov
ds
ret
inc
xor
jb
inc
and
jb
shlb
add
adc
mull
test
mov
stos
and
popa
cwtl
cmp
cld
sbb
stos
test
jo
cwtl
ljmp
push
cmp
iret
jmp
mov
push
pop
lret
push
add
fcompl
outsb
aaa
cmp
xchg
in
cmp
fistpl
imul
xchg
rcrl
das
and
sub
enter
dec
les
mov
js
mull
push
mull
push
cmp
push
push
pop
push
int3
adc
push
inc
add
xlat
cmp
pop
mov
aam
dec
daa
dec
mov
test
xor
cmpsl
out
cmp
jbe
mov
call
mov
scas
loopne
lods
test
scas
mov
and
pop
xchg
call
test
cmp
adc
notl
or
xorb
inc
add
xchg
aad
push
cmpsb
jbe
jb
pop
in
loopne
frstor
sbb
jl
push
xchg
mov
rol
pop
mov
adc
int3
lea
stos
jo
sbb
mov
insb
push
push
or
xor
xchg
inc
inc
fldenv
out
push
fnstenv
xchg
ret
mov
add
cmp
mov
jo
sub
jp
icebp
jp
dec
stos
das
lods
pop
mov
inc
dec
lds
imul
sub
dec
push
push
push
push
outsl
lret
jnp
cltd
add
sbb
dec
sub
rorb
shrl
cmpb
mov
dec
fwait
push
cs
mov
or
and
loope
push
ljmp
inc
jmp
inc
dec
cld
ds
jp
xchg
mov
gs
fbld
arpl
in
xor
jo
mov
aad
lods
mov
mov
dec
pusha
ficompl
icebp
frstor
lret
jmp
js
sub
cs
andb
push
outsl
popa
movsb
jmp
and
decl
xor
mov
nop
cmp
push
cltd
fdivr
sub
pop
and
mov
sub
mov
xchg
or
push
xchg
inc
lret
jecxz
cmc
or
mov
pop
jbe
lods
call
negb
or
xchg
and
push
int
pop
je
sbb
sti
dec
and
adc
enter
mov
add
outsb
fisttpl
roll
fsubs
mov
icebp
xchg
shll
addl
in
imul
mov
js
push
in
rolb
add
insl
xchg
mov
xchg
fisttpl
incb
mov
roll
fs
mov
adc
pop
add
pushf
or
xchg
jnp
cmp
mov
icebp
out
fists
into
sub
push
lea
mov
out
test
or
or
dec
and
jne
andb
xor
jae
ror
dec
test
mov
pop
or
dec
je
xchg
stos
mov
mov
xchg
mov
sub
fadd
imul
mov
mov
adcl
es
adcl
push
cmc
and
jmp
je
push
idivl
shl
test
insb
mov
ret
inc
call
inc
jne
pop
test
outsb
mov
aam
jmp
mov
into
lods
into
cmp
nop
outsb
int
shl
push
inc
mov
sub
jbe
mov
shr
in
popa
imul
jnp
call
hlt
shlb
fdivr
popf
in
fildll
stos
mov
jb
rcl
nop
jbe
shl
inc
jo
ror
fadd
push
xor
shrb
mov
gs
nop
fwait
or
pop
sbb
push
jge
repnz
mov
pop
int3
mov
cmp
inc
cmpsl
dec
scas
inc
push
lret
cmc
or
xchg
jno
or
push
xlat
fsubrs
or
xchg
and
mov
mov
mov
sbb
push
push
jecxz
xchg
das
and
lcall
daa
insl
cmp
add
cmp
movsb
int
ret
or
add
test
or
outsb
inc
cli
push
in
add
jl
icebp
or
sbb
mov
push
loop
cmp
add
mov
xor
xor
push
daa
jge
sbb
popf
mov
cmp
out
or
rclb
jno
xlat
xor
and
add
scas
out
das
pop
outsb
push
push
and
inc
andl
ja
jbe
xchg
push
aad
testb
lea
rorl
movsl
push
xchg
iret
cmpsl
xchg
adc
lds
dec
or
call
or
fidivl
dec
cmp
dec
jbe
cmp
in
dec
and
shll
lcall
xor
mov
cmp
sbb
lcall
push
xchg
fiaddl
add
into
loopne
cmp
repnz
cld
out
dec
sbb
or
jg
mov
push
ss
sbb
es
xchg
adc
test
and
dec
jnp
test
xchg
pop
rcl
or
gs
adc
mov
scas
lods
sub
dec
mov
pop
movsb
cltd
inc
pop
mov
outsb
ljmp
aaa
test
mov
mov
add
aas
inc
rorl
sub
pop
xchg
add
vmovapd
orb
sub
xchg
ret
and
test
mov
dec
rcr
fwait
mov
mov
xchg
scas
in
popa
mov
xchg
or
popa
pop
popa
cmp
cmpsb
jg
pop
jle
mov
push
adc
mov
js
sbb
int3
or
push
into
mov
jp
jle
push
push
sub
push
sbb
xchg
in
rorb
sub
sbb
xor
mov
sub
cs
lret
daa
sub
testb
test
mov
xor
xchg
jle
push
loope
sbb
flds
xchg
or
ffree
outsl
jbe
jecxz
int
mov
inc
iret
mov
aas
xorb
xor
loope
xor
das
daa
ret
cmp
xchg
pop
cmp
or
and
call
sbb
push
cmp
movsb
pop
jmp
pop
pop
call
rcrl
inc
int3
ret
shrl
ljmp
push
sbb
jns
pop
repz
ret
aam
xchg
jg
push
mov
test
or
aas
lea
jbe
lret
fisubl
adc
pop
fs
dec
jbe
pusha
sub
into
outsb
sub
adc
js
hlt
jb
subb
insl
mov
jne
add
sbb
adc
imul
inc
or
inc
adc
scas
mov
xor
addr16
shl
bound
jns
ds
push
mov
inc
sbb
jmp
and
rorb
jg
mov
lret
pop
xchg
add
jnp
js
bound
in
adc
repnz
leave
outsl
sahf
lds
loope
jle
mov
fisttps
addr16
cltd
sbb
jge
adc
in
sub
not
int
sbb
in
test
ja
xor
je
or
mov
inc
and
in
mov
xor
xchg
ja
sti
jno
pop
adc
add
push
and
rolb
inc
lock
mov
dec
mov
jnp
data16
enter
stos
sbb
ret
or
jmp
lods
mov
mov
sub
aaa
lret
lock
add
rorl
and
cmp
arpl
push
dec
push
jp
ret
fwait
sbb
xor
movsb
mov
jp
and
dec
jbe
cmpsb
aad
sti
pusha
sbb
rolb
ficomps
fs
xor
and
xor
fmuls
ss
pop
cmpsl
fistl
imul
push
pop
jg
xchg
adc
repz
mov
sub
out
xor
cmp
push
mov
sbb
push
cmp
adc
adc
dec
pop
sub
xchg
lahf
std
cmp
adc
push
cmpb
test
in
push
int
mov
outsl
xchg
inc
dec
push
cmpsb
and
iret
jle
jo
lcall
pop
fstpl
mov
sbb
dec
xor
add
dec
fcmovnu
cmp
cmpsb
sbb
out
xor
jg
fcomps
push
pushf
add
and
in
add
jle
pop
xchg
pop
in
adc
icebp
fpatan
movsb
cmp
mov
push
es
fs
movsl
dec
popa
scas
adc
dec
pop
pop
xor
dec
in
mov
dec
mov
cs
les
and
mov
outsl
sti
jns
sahf
xchg
lret
inc
adc
jb
add
nop
mov
cmp
outsl
loopne
sbb
inc
mov
adc
dec
in
adc
cltd
fsts
lea
mov
sbb
cld
fists
or
push
mov
lds
mov
adc
test
pop
jg
sub
jbe
sahf
xor
call
pop
outsl
iret
in
inc
imul
aaa
xchg
add
sbb
std
gs
fcomp
imul
loope
cmp
dec
add
shlb
push
enter
pop
jge
fnstcw
int
sub
lods
out
outsl
movsb
jne
hlt
inc
xchg
jno
test
pop
push
mov
mov
pop
daa
popa
aaa
outsl
jo
xor
push
add
jge
cmpsl
jbe
dec
mov
cltd
and
test
notl
sbb
xor
outsl
lahf
pop
push
aaa
mov
test
stc
and
fistpll
movsb
sahf
sub
rcll
xor
pop
xchg
adc
pop
insb
fbld
pop
and
xor
mov
sbbl
jl
rcrl
and
sub
fwait
aam
mov
insl
push
adc
loope
pop
xchg
sbbb
sbb
fistps
sub
pop
insb
sti
sub
push
mov
lret
std
mov
int
xlat
aad
sbb
xchg
psrad
pop
mov
inc
fnstenv
mov
lret
pop
mov
cli
mov
stos
mov
jmp
pop
rorb
stos
aad
sahf
jnp
jecxz
aaa
pop
mov
mov
inc
and
into
test
out
test
lcall
mov
ret
cwtl
mov
sbb
sub
fcoml
lret
inc
mov
jne
lock
call
dec
jmp
push
mov
sbb
fmuls
insb
cmp
mov
jb
fs
or
push
jbe
xchg
rcll
push
xor
inc
aas
xchg
push
repnz
aad
loope
inc
push
ret
enter
scas
aad
fisttpl
dec
push
bnd
ret
test
fistl
in
not
inc
cli
push
mov
int
je
jns
stc
cwtl
xor
and
push
lret
sub
mov
sub
lock
adc
jle
insl
cmp
in
xor
xor
jle
or
fdivrp
push
pop
fs
insb
adc
adcl
adc
xchg
cmpsb
push
std
sahf
inc
inc
dec
or
scas
cmp
or
lahf
mov
or
jne
aam
andb
pop
jp
pop
les
push
xchg
popl
bound
sub
cmp
xor
xor
test
and
cld
lock
lea
pop
ss
icebp
mov
popf
mov
ror
lahf
and
int3
mov
sbb
sbb
adcb
mov
out
lahf
fmul
mov
mov
int
inc
pop
arpl
add
jle
dec
incb
sub
fwait
xor
je
xor
aam
pop
rcr
xor
or
pusha
fisttps
arpl
sbb
fimull
or
sub
inc
adc
nop
pop
fldcw
mov
outsl
notb
xor
xchg
sbb
movsb
lds
sti
xor
mov
add
iret
lds
in
and
push
shlb
mov
dec
sub
repnz
mov
mov
cwtl
sub
cmp
pop
or
arpl
loope
lock
test
sar
fiadds
imul
sbb
sbb
fidivl
fstps
outsl
mov
jb
ljmp
lods
jmp
jnp
dec
xchg
pop
inc
pop
cmc
add
loopne
cmp
dec
jae
xchg
xlat
insb
xor
add
or
ds
in
cmc
enter
mov
jb
imul
add
orl
and
mov
sbb
mov
and
mov
andl
lea
movzbl
and
mov
and
mov
mov
sub
orl
add
mov
mov
xor
orl
add
movl
jne
jmp
movl
cmpl
je
cmpl
jl
jmp
pushl
push
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
negl
sub
xor
mov
mov
mov
orl
xor
xor
adcl
sub
andl
sub
xor
mov
movl
mov
movl
mov
jmp
movl
cmpl
je
cmpl
jb
jmp
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
mov
adcl
xor
subl
xor
sub
sub
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
movzwl
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
call
jmp
mov
sbb
mov
add
adcl
imul
mov
adc
mov
mov
xor
mov
adcl
add
or
mov
mov
adc
mov
add
adcl
xor
adcl
mov
adcl
mov
mov
andl
add
addl
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
jmp
ficomps
xchg
test
jl
jmp
jl
stc
iret
pop
iret
push
pop
pushaw
cmpsb
int
sbb
cltd
scas
divl
in
int
mov
xchg
add
sbb
dec
or
or
int3
jecxz
cmp
mov
in
mov
cs
imul
in
lcall
sub
addr16
aas
ret
cld
cld
and
sbb
pop
jbe
lds
lods
push
std
rcr
mov
filds
movsl
mov
sub
in
pop
pushf
mov
pinsrw
add
add
mov
dec
jbe
push
bound
or
jae
insl
or
out
inc
cmp
lock
pusha
add
loope
push
sub
jo
hlt
mov
mov
xchg
inc
or
push
outsb
popf
shrb
adc
jae
subl
addr16
lcall
gs
flds
and
xlat
mov
dec
rorl
mov
push
xlat
sub
popf
xchg
imul
pop
inc
ficomps
xchg
ljmp
mov
sbb
stos
out
rcr
or
divb
stos
insl
xchg
fldcw
pop
jp
mov
lea
sahf
xchg
outsl
sahf
sub
push
xor
and
repnz
daa
popa
jecxz
xchg
inc
cltd
push
cmpsb
mov
dec
mov
lods
mov
les
lahf
stos
xor
sub
nop
jnp
mov
adcl
pop
cmp
xchg
jbe
cmp
or
mov
xor
or
loopne
add
in
orb
cmp
push
xlat
ret
icebp
xchg
mov
mov
outsl
test
ds
sub
shlb
pop
fsub
ljmp
or
pusha
insb
addr16
adc
aad
xchg
lret
lret
andw
fs
push
push
fsubs
mov
stos
dec
jnp
adc
adc
dec
das
stc
into
or
mov
jb
mov
and
aaa
and
test
aad
xor
out
imul
jle
push
movsb
cmpl
push
jge
fcmovnb
out
ja
sbb
or
in
jecxz
inc
push
clc
je
aas
mov
testl
cmp
sub
ficoms
mov
lret
lods
es
in
xchg
cmp
leave
sub
mov
lahf
inc
sbb
sbb
mov
adc
sub
and
enter
add
push
or
hlt
aas
fidivrl
dec
jbe
mov
ja
xchg
aad
or
and
add
cmp
leave
into
cld
cs
inc
push
mov
xor
push
stos
orl
sahf
sub
cmp
mov
mov
hlt
pop
out
aam
mov
and
mov
lcall
pop
sub
xchg
dec
stos
cmpsb
repnz
lret
or
lahf
xor
in
pop
cmp
xchg
clc
mov
mov
jp
cld
clc
fstps
outsb
arpl
dec
dec
fsubs
sbb
fcmovnu
sbb
and
loop
adcb
sub
mov
push
leave
inc
lock
aam
fs
adc
outsb
ja
shll
sbb
dec
mov
push
cli
mov
mov
xchg
nop
roll
jge
jecxz
inc
fwait
int
fistpl
mov
mov
arpl
test
adc
add
adc
jnp
aaa
popf
repz
jnp
inc
imul
add
sub
iret
daa
scas
imul
test
addb
mov
xchg
adc
aas
loope
pop
insb
cmovnp
or
mov
testl
out
pusha
ror
stos
and
lods
pop
adc
fwait
mov
and
cs
and
addb
iret
ss
mov
or
cmp
rcrb
or
pop
subb
scas
stos
fldenv
push
xchg
xchg
mov
jge
dec
pop
sub
push
jns
loope
popa
daa
sbb
aam
push
sbb
xchg
add
iret
adc
sti
sub
pop
inc
add
pop
and
aad
out
fisttps
dec
neg
mov
jo
add
pop
popf
mov
push
inc
movsl
popa
mov
fsubl
or
movsb
sub
in
mov
into
test
cmpsb
lret
inc
and
xor
ficoms
sub
mov
inc
cmp
mov
sub
mov
and
std
cli
mov
jg
ret
shrd
lock
sbb
icebp
xor
mov
cmp
inc
sti
add
ret
dec
mov
cmc
add
and
leave
pop
adc
daa
jmp
and
mov
adc
mov
cmpsb
fs
jp
xchg
shlb
icebp
pop
cmp
pop
pusha
rcll
or
mov
stos
xchg
rclb
neg
nop
stc
inc
adc
mov
jge
leave
in
cs
lds
xlat
es
and
outsl
and
inc
lahf
pop
mov
call
jmp
and
aad
shll
push
cwtl
dec
data16
mov
enter
imul
in
clc
sbb
xchg
xchg
and
pop
xchg
jbe
cmp
jg
adc
fidivl
add
lea
or
pop
pop
jge
stos
leave
sarb
and
fcomp
or
ret
or
jge
dec
test
jno
push
stc
sbb
imul
jp
inc
loop
sub
mov
xor
sub
or
xorl
shlb
mov
not
das
and
dec
xchg
pop
aam
sub
mov
icebp
lods
cmp
mov
lods
lcall
adc
push
mov
nop
rcrb
test
pmulhw
adc
mov
mov
push
jl
out
cmp
cmc
lret
rcrl
aaa
fwait
sub
ret
insb
jns
dec
mov
or
xor
mov
lods
ds
int3
inc
fldt
std
adc
movsl
ja
jno
pop
sbb
push
xor
mov
cmp
mov
pushf
or
faddl
cld
or
hlt
xchg
rep
hlt
ss
scas
inc
push
hlt
lcall
add
jmp
xor
xchg
jl
imul
int3
fildll
in
aaa
scas
xor
jge
sub
test
mov
jg
xchg
aad
sbb
mov
in
push
out
ja
fidivs
jnp
jecxz
call
jns
sub
imul
stc
inc
ret
out
ss
lods
mov
xchg
pop
mov
and
enter
add
out
push
enter
jns
pop
xchg
outsl
pop
pop
mov
lods
dec
sahf
dec
jo
or
mov
ss
pop
cmp
hlt
xor
aaa
or
or
adc
cmp
cld
jg
hlt
inc
andl
into
xor
je
mov
lcall
xchg
xor
jo
stos
push
xchg
jle
addr16
mov
mov
inc
xor
dec
mov
outsb
cmp
mov
dec
inc
clc
mov
mov
lcall
jnp
fidivl
pop
cld
in
lea
pop
pop
and
and
mov
cmc
je
aad
xor
dec
les
cmpsl
mov
cwtl
sbb
dec
inc
xchg
int
outsb
dec
push
out
fs
pop
mov
ficoml
push
pop
inc
mov
push
jmp
icebp
loopne,pn
cmp
cmpb
mov
pop
adc
mov
mov
xor
inc
cmp
mov
adc
dec
sbb
add
lret
lcall
fucomip
clc
idiv
out
not
push
adc
dec
test
ret
cmpsb
adc
jmp
rorl
mov
mov
lcall
or
lods
dec
sar
and
jg
jb
dec
xor
adc
adc
cs
or
xor
jnp
mov
lret
loop
xor
push
out
shrb
jmp
fistpll
test
iret
lcall
cs
lahf
and
adc
shlb
les
adc
or
pop
fldt
mov
loopne
mov
stc
inc
aaa
sbb
mov
jae
jg
mov
jns
ljmp
add
pop
sub
xchg
push
mov
mov
dec
add
xor
fisttps
movhps
xor
insb
les
mov
and
or
test
mov
or
dec
aad
out
lods
int
adc
andl
enter
jnp
jae
and
push
inc
cmpsb
mov
lods
push
mov
jg
or
call
aam
cmp
cmpb
cltd
cld
popf
push
rorb
andb
pcmpgtw
fxch
xchg
add
fnsave
adc
dec
and
mov
ss
pop
lods
inc
add
dec
jb
andl
inc
lds
sub
push
mov
pusha
je
and
std
mov
xlat
pop
lea
pop
jnp
cwtl
shrl
scas
cmp
ret
push
cmp
jno
sbb
jo
movsl
ds
push
xchg
nop
ljmp
cmpsl
daa
add
mov
stos
xlat
mov
and
mov
arpl
mov
sub
xchg
jbe
add
or
out
sub
test
sarl
adc
jge
add
xchg
push
mov
mov
sub
sub
lods
dec
jle
insl
dec
sbb
sbb
mov
loope
mov
fwait
or
mov
xchg
dec
fstps
cmp
jg
and
scas
daa
pop
fidivl
pop
adc
push
pop
sbb
outsl
xchg
cmp
std
xchg
mov
addr16
aam
jle
mov
jnp
fsub
push
add
mov
xlat
pop
scas
sbb
rcrl
sti
dec
sub
or
pop
and
es
sub
lret
fs
adc
pop
pop
and
add
and
in
sahf
cmpl
sti
xchg
cmp
popf
icebp
xor
push
pop
inc
xchg
pop
mov
and
or
jg
pusha
test
sub
stos
push
dec
jae
cs
ja
push
xor
sub
dec
arpl
mov
jge
push
sbb
test
push
push
mov
mov
adc
mov
dec
lods
jae
or
push
push
in
insl
adc
dec
insb
aad
push
mov
jl
and
out
push
xchg
leave
mov
jo
mov
dec
pop
hlt
or
gs
push
ljmp
xor
jmp
xchg
mov
mov
add
cmp
jecxz
push
mov
xchg
cs
or
das
dec
pop
pushfw
rcl
add
inc
notb
ljmp
xchg
xchg
add
inc
ljmp
lcall
mov
out
push
je
or
inc
inc
or
push
pusha
mov
mov
add
je
pop
xchg
cld
sub
imul
test
pop
push
shll
push
sarb
pop
jge
mov
pop
mov
rolb
sub
scas
mov
inc
cmpsb
add
sbb
scas
jne
and
stos
aas
pop
or
pop
popa
lods
mov
inc
outsl
shl
mov
lds
repnz
inc
jecxz
lret
sbb
gs
dec
mov
scas
sbb
xchg
in
scas
clc
leave
hlt
imul
push
repnz
pop
add
jl
cld
test
adc
inc
repnz
out
dec
sub
test
pop
rorb
push
add
lds
inc
xor
loop
mov
lret
addl
lea
sti
add
cmpsb
jle
in
add
mov
dec
xlat
adc
mov
cmp
adc
ret
jl
dec
aam
fstl
jbe
dec
mov
mov
lahf
mov
xchg
push
push
sbb
loop,pt
xchg
into
nop
aad
fs
fwait
loopne
movsb
and
inc
dec
cmp
fs
aam
in
scas
in
mov
lret
mov
fmuls
bound
dec
xor
fnstcw
pop
stos
aas
mov
inc
imul
int
inc
notl
jnp
inc
mov
or
dec
iret
pop
cmpsl
lock
fsubrl
pop
iret
shlb
cmp
mov
add
sbb
dec
fcmovu
push
push
cmp
add
repz
push
jl
in
pop
sbb
call
in
sub
or
movsl
stos
loopne
fidivl
add
outsl
xor
int
cmp
sarl
inc
adc
insl
push
mov
pop
or
lods
addr16
mov
fnsave
xchg
jb
and
xor
push
out
adc
and
fstps
adc
imul
jmp
xor
fldcw
shl
test
add
scas
je
lea
mov
nop
mov
mov
sub
sbb
pop
lret
dec
pop
das
std
je
int3
adc
adc
ljmp
push
repz
jmp
sahf
cmp
cmc
aad
inc
jp
out
xchg
sub
in
and
push
xchg
pop
out
jo
int
loopne
xor
test
test
movsb
shlb
ficoms
push
arpl
imul
mov
pop
shl
dec
mov
dec
lahf
lret
add
adc
and
lods
test
aad
imul
lcall
pop
stc
mov
lods
and
jb
pop
sub
icebp
loopne
xor
ds
fs
imul
test
ja
fld
loope
adc
jns
les
iret
in
cs
add
int3
popa
sbb
shrb
std
pop
push
adc
and
rclb
and
push
jmp
sbb
out
mov
repnz
inc
adc
adc
cmp
xor
insb
push
jmp
fcom
in
in
lods
push
leave
outsl
xor
loop
inc
imul
jmp
pusha
sub
testb
ret
cli
icebp
fnstsw
pop
insl
jle
push
lods
xorb
xor
xchg
sahf
pop
std
cmpsl
addr16
lret
push
and
mov
ds
aas
call
cmp
mov
in
mov
inc
xor
sarl
mov
xchg
scas
movsl
out
push
aas
ret
xor
pushf
jb
stos
call
cmp
in
push
sub
push
test
imul
mov
adc
sbb
mov
mov
lods
sub
cmp
cmp
mov
mov
sbb
popa
sub
lea
lods
aas
leave
imul
inc
sti
jmp
mov
in
mov
jbe
xchg
call
outsb
aaa
xchg
imulb
sub
call
jne
inc
dec
mov
mov
rorl
sti
mov
movsb
and
mov
mov
mov
dec
test
pop
sbb
mov
jno
xor
lahf
jmp
fsubrl
aaa
sub
jae
fs
xchg
decb
fnstsw
mov
or
or
mov
scas
pushf
subl
lret
loope
nop
aad
or
push
and
cli
aas
cwtl
scas
rclb
mov
dec
mov
ja
xor
sbb
jmp
xchg
dec
xchg
sub
sbb
mov
cmp
mov
stos
cmpsl
lods
pop
or
lock
pop
repnz
gs
imul
jmp
dec
sti
push
mov
jmp
repz
sbb
lock
adc
adc
test
bound
leave
adc
xor
mov
mov
or
jbe
or
and
mov
push
aam
xor
cld
adc
xorl
leave
leave
leave
mov
and
sbb
add
mov
insl
shrb
jl
or
xchg
in
mov
mov
sahf
ficoml
mov
out
sets
sub
jge
ret
xor
jmp
sbbb
xor
imul
dec
cvtps2pd
lcall
push
aaa
daa
out
mov
jno
jle
dec
xor
icebp
lds
adc
xchg
insl
or
enter
adc
pushf
in
ja
call
aas
dec
cmc
aaa
mov
inc
cmc
loope
enter
jbe
out
inc
std
cmpsb
iret
mov
lock
lret
pop
popf
shl
sbb
cmp
imul
cld
add
test
sub
rolb
mov
push
sub
insb
loopne
stos
jmp
test
out
and
push
or
pop
shrl
mov
mov
fimull
aad
ret
dec
int3
les
psrld
outsl
arpl
sbb
cmpsl
dec
pop
jno
and
mov
enter
xor
es
sub
add
xchg
syscall
pop
xchg
mov
cmp
pop
in
add
mov
mov
lret
dec
fisttps
inc
mov
push
inc
or
cmp
popf
outsb
mov
shll
shr
cmp
in
push
xor
pushl
inc
in
sub
pop
lods
pop
lcall
pop
pop
and
adc
nop
and
out
sub
lea
fbld
mov
mov
and
test
xor
in
dec
clc
dec
ja
and
bound
push
dec
stos
lahf
push
or
xchg
jno
stos
addr16
mov
dec
xor
in
pop
jge
sub
mov
adc
dec
ficoml
or
push
mov
xchg
cld
mov
add
sbb
arpl
sbbl
std
pop
lods
aam
pop
or
int3
inc
in
in
pop
idivb
and
and
je
and
rcr
jne
shll
add
jb
inc
and
lods
ljmp
orb
adc
cmc
sub
aam
test
jb
ljmp
std
mov
sub
mov
pop
sub
adc
iret
add
pusha
cmp
nop
fmul
je
stos
cld
movsb
negl
loop
and
outsl
test
mov
outsb
das
jg
iret
adc
lcall
dec
rolb
mov
data16
adc
vcvtdq2pd
inc
leave
sub
mov
sti
push
int3
icebp
sbb
pop
rcrb
aas
fcoml
xor
adcl
fcoml
loopne
dec
dec
sbb
fnstcw
repnz
xor
enter
shr
adc
out
fldenv
push
aas
xor
mov
mov
push
int3
adc
add
cmp
repz
sbb
push
and
pop
mov
imul
sar
pop
mov
sbb
dec
insb
or
xor
adc
sbb
rcll
shll
faddl
popa
fistpll
mov
shll
or
inc
xchg
jae
lret
outsl
ficomps
or
dec
or
test
and
mov
dec
out
shr
lods
test
fnstsw
inc
or
jle
dec
xchg
pop
ljmp
out
imul
pop
xchg
out
or
dec
adc
mov
sti
negl
sbb
orw
and
push
inc
scas
push
push
add
fucom
aam
jmp
shll
lcall
sbb
xchg
lret
sbb
lahf
push
mov
dec
sbb
cmpsl
mov
lahf
inc
int
push
stos
cmp
fisubrs
in
push
inc
adc
scas
adc
xor
insl
xlat
jo
jge
add
xor
xchg
mov
mov
jae
pusha
pop
repnz
jecxz
loopne
test
jg
sub
into
mov
clc
or
mov
stc
in
gs
jl
rol
adc
jnp
bnd
pop
xor
pop
mov
dec
ja
add
pop
test
dec
aad
and
pop
fs
xchg
jae
in
mov
lea
mov
or
test
sti
les
sbb
jmp
pop
imul
xchg
sbb
les
test
in
jno
rep
pop
movsb
std
arpl
sbb
adc
sub
push
inc
arpl
bound
push
jmp
inc
in
jp
repnz
sbb
ja
push
and
jmp
sbbl
out
or
sti
leave
push
xchg
xor
sbb
pop
cmc
outsb
cmpsb
xlat
and
nop
add
adc
add
adc
loope
gs
scas
adc
cmp
nop
mov
iret
mov
ficoms
stos
xchg
into
or
aaa
ds
data16
mov
and
insb
dec
add
int
add
addr16
mov
out
shl
jmp
jmp
dec
push
popl
xorb
pop
ljmp
in
mov
aam
pop
addr16
xchg
jnp,pt
lea
or
push
cmp
or
test
add
cmpsb
imul
scas
ss
xor
xchg
pop
inc
sub
and
mov
aad
pop
cmp
orl
xchg
mov
push
jmp
xlat
push
dec
aaa
lcall
xchg
adc
int
mov
dec
fdivrs
xchg
xchg
xor
push
inc
shrl
xor
xor
cld
push
xor
sub
sub
js
add
inc
sbb
mov
adc
int3
push
jne
xor
mov
imul
jno
insl
xchg
test
test
xchg
pushf
icebp
add
mov
sub
das
pop
lcall
xchg
mov
shrb
pop
ror
mov
xor
pusha
movsl
ret
inc
xor
xor
std
jge
push
cmpsb
scas
inc
shrl
pop
sti
push
mov
in
xor
mov
rorb
mov
mov
cwtl
cmp
jl
lcall
lret
call
cmp
iret
jnp
dec
xchg
sbb
outsb
lea
jns
and
fxtract
mov
lds
in
sub
and
sub
cmpsb
xor
fisttpl
push
mov
daa
xor
mov
das
gs
gs
sub
jb
test
xor
cmp
fcoml
repz
mov
lcall
enter
shlb
mov
std
inc
mov
data16
movsb
mov
adc
pop
sbb
mov
movsl
fistpll
inc
dec
add
ret
pop
or
add
arpl
testl
xor
cwtl
sub
cmp
les
sub
insl
xchg
cmp
scas
mov
dec
dec
ds
or
outsb
mov
into
sahf
sbb
mov
aad
in
cmpsb
test
jno
sbb
cli
pop
inc
shlb
insb
movsb
ret
in
push
ret
hlt
add
js
add
stc
ss
in
mov
cmc
addl
sbb
je
dec
jnp
xor
xchg
faddp
cltd
push
das
scas
cs
pop
je
jne
pop
cli
dec
mov
mov
sarl
jp
enter
pop
mov
shlb
icebp
out
dec
cli
dec
repz
stos
das
rorl
jo
das
sub
sti
push
inc
out
pop
popf
push
lret
cltd
xlat
adc
jnp
jae
loop
or
fwait
ss
dec
out
shll
sarb
push
mov
sti
in
aad
outsb
repnz
jo
mov
dec
js
gs
frstor
addr16
jns,pt
xchg
cmp
push
scas
sub
movsb
nop
loope
cmp
ret
fnstsw
adcb
inc
lds
gs
movsl
lods
repnz
mov
dec
shr
addr16
nop
xlat
mov
outsl
lcall
xor
sbb
sub
fld
test
stos
ds
cmp
fsubs
andl
int3
mov
sub
adc
mov
push
pop
xor
sbb
imul
ret
xchg
mov
push
pushf
std
xchg
pmuludq
mov
jae
jne
lahf
stos
pop
mov
lahf
ljmp
dec
jmp
mov
mov
xchg
adc
mov
lods
jp
push
insl
into
out
lock
jge
add
cmc
mov
jbe
cmp
adc
jns
rcr
stc
cmpb
fisubrl
ss
sarb
scas
out
out
enter
sbb
inc
sbb
cmpsl
loop
xor
cmc
xchg
test
lods
ds
or
sahf
das
or
idivb
test
jae
fwait
xor
xchg
fstps
ds
call
mov
jo
lds
xor
push
jbe
fwait
push
not
pop
icebp
lock
imul
test
sub
push
push
add
sub
push
repnz
pmaxsw
cmpb
hlt
mov
and
pop
popa
push
mov
pop
out
pop
sbb
adcl
loope
stos
jecxz
or
xor
lahf
jge
in
push
jmp
jmp
fcmovnbe
test
inc
xchg
jle
xchg
jp
shlb
mov
cmp
mov
push
xchg
jno
adc
mov
insb
jb
jg
sub
xchg
scas
inc
push
jb
clc
lret
fstps
outsl
out
dec
jnp
idivl
inc
out
cwtl
mov
push
out
int3
sbb
lahf
and
add
scas
dec
idivb
mov
rcrb
push
or
mov
jmp
pop
add
ss
xchg
scas
pop
ret
fucomp
sbb
popa
mov
fs
les
xchg
push
add
dec
push
xor
not
cli
jb
lods
lds
hlt
and
fcoms
cmp
ret
cmp
clc
push
sub
sti
add
pop
xorl
add
outsb
mov
xchg
push
or
aad
add
stc
sub
xchg
inc
mov
cld
sbb
int
imul
pop
add
mov
sub
pop
test
jno
imul
dec
add
mov
loop
mov
aaa
cli
dec
adc
int3
jge
repnz
xchg
stos
jecxz
mov
rorl
pop
and
xchg
iret
dec
jmp
pop
adc
ja
mov
data16
pop
insb
imul
dec
js
mov
sbb
cmp
in
pop
xchg
in
mov
add
push
pop
jb
sub
push
pop
in
loop
xchg
mov
popa
jns
and
add
xchg
adc
mov
rol
mov
dec
das
dec
icebp
icebp
push
jnp
xlat
dec
push
sub
iret
call
pop
xor
popa
movsl
xor
iret
pop
pusha
inc
jb
adc
pop
popf
icebp
jae
jo
scas
mov
popa
pop
cli
out
cmp
jle
sbb
xor
fsub
adc
cmc
into
imul
ret
fstpl
subl
fs
test
pop
add
xchg
lret
jae
inc
mov
or
pusha
sbb
add
in
pop
or
sub
mov
int3
mov
jo
jo
dec
imul
sub
stc
dec
nop
jne
dec
loope
iret
or
ss
les
daa
cmp
pushf
movsb
lahf
jb
add
jle
add
scas
loope
cmovbe
rclb
enter
inc
pop
stos
adc
mov
test
pop
dec
dec
mov
jae
pop
xor
adc
add
sbb
mov
push
fisubl
mov
and
ret
jecxz
xor
dec
cmp
leave
inc
xchg
iret
sahf
inc
test
fsub
and
and
clc
int3
inc
aad
mov
movsl
or
mov
ret
popf
pop
and
fs
sbb
pop
scas
movsl
inc
popa
stos
lods
ljmp
xor
xchg
mov
out
insb
xchg
push
sahf
adc
fimull
or
xchg
dec
mov
push
xorl
pop
in
and
fadd
arpl
mulb
call
cmc
pushf
inc
mov
stos
in
fwait
mov
shrb
mov
dec
push
loop
pop
mov
mov
mov
inc
frstor
mov
and
xchg
leave
cmp
jo
loope
xor
fwait
ds
lahf
push
fs
mov
or
push
ret
lds
xchg
pop
cmp
aas
sahf
jle
add
rclb
add
push
shll
cmp
fstpl
subl
or
mov
cltd
std
jo
fs
std
fldl
stos
loopne
fstpt
movl
adc
inc
rorb
pop
aam
mov
test
clc
xor
mov
loop
jle
pop
pop
wbinvd
fistps
jnp
jle
mov
leave
inc
mov
scas
ret
add
add
sub
cs
jl
lea
sahf
or
push
hlt
in
sbb
xor
adc
test
pop
fs
jg
jle
push
out
xor
dec
xor
rorl
xchg
jg
mov
data16
mov
jge
arpl
dec
pop
insl
jle
sbb
insl
sbb
inc
push
movsb
adc
xchg
out
popf
sar
cmpl
pop
push
scas
lcall
sbb
aaa
fisubrs
mov
mov
daa
dec
fmuls
pushf
movsb
sub
test
or
adc
mov
out
and
stc
ss
in
lret
jg
dec
fwait
inc
lods
push
imul
cmpsb
nop
sub
cmp
adc
cld
das
or
stos
pop
jo
in
xorl
add
xor
test
push
int
addr16
push
or
adc
in
xor
adc
jns
call
sub
aam
dec
lea
cld
xor
cltd
iret
inc
jmp
nop
js
push
mov
dec
rol
xor
movsb
rcr
subl
popf
test
inc
loop
dec
mov
popf
mov
jno
sub
jno
add
outsb
fsubrs
das
add
sahf
insb
mov
xor
mov
jmp
test
sbb
sub
xor
push
pop
outsb
subb
mov
cmp
aaa
out
add
inc
push
outsl
xchg
insl
jge
and
mov
pop
and
mov
xchg
outsl
pop
fadd
mov
cld
push
sar
cmp
leave
rcr
cli
xor
mov
movsl
inc
xor
or
js
add
inc
jo
mov
inc
fsubl
push
push
lret
outsb
scas
jne
mov
sbb
jo
push
push
pop
andb
ds
out
add
ljmp
add
nop
adc
mov
dec
outsl
es
xchg
mov
mov
jg
adc
shlb
and
and
iret
xor
xor
cli
jne
sbb
hlt
icebp
aas
aam
cmp
adc
xor
repnz
dec
idiv
mov
in
test
dec
adc
sbb
mov
pop
int
es
jge
mov
mov
sbb
in
add
lea
push
aam
mov
inc
test
sub
mov
sahf
xchg
push
mov
cmpsb
scas
sti
enter
ja
icebp
leave
cmp
add
mov
or
retw
xor
xchg
cwtl
pop
xchg
lds
cmp
fsubl
add
adcl
and
fisubs
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
jmp
rcrb
and
rorl
or
test
jl
sarb
lock
andl
fimull
xor
cmp
arpl
lcall
jp
mov
pop
inc
fisttps
decl
jmp
sub
cmp
mov
adc
xchg
scas
cli
add
jle
call
jns
push
arpl
data16
push
shll
mov
imul
adc
shll
jns
jne
jmp
jno
scas
sub
mov
inc
push
addr16
lahf
sub
aad
cmpsb
andl
mov
pop
dec
out
and
sub
sbb
cmp
add
movsb
ret
loop
jo
cmp
xchg
pop
mov
or
and
sub
in
fwait
subb
imul
pusha
mov
mov
push
imul
iret
cmp
push
mov
mov
inc
rep
push
mov
xchg
dec
xor
cmp
dec
stos
jmp
inc
shlb
loope
in
js
divb
xor
ss
push
cli
sbb
lret
pushf
pusha
das
sbb
lcall
pop
add
jecxz
sbb
mov
cltd
xor
shrl
inc
push
sbb
and
imul
pusha
adc
iret
insl
dec
test
psllw
in
pop
das
faddl
loop
leave
push
iret
std
pusha
push
xchg
fisubrl
add
inc
inc
fldenv
xor
mov
push
xor
clc
movsb
mov
add
xchg
add
lea
hlt
loopew
push
pop
jl
pop
mov
sbb
inc
test
cmp
daa
inc
shlb
sbb
pusha
in
push
stc
pop
mov
xor
jg
push
pop
out
lock
push
in
daa
cltd
imul
push
mov
adc
stc
jo
sbb
mov
cmc
mov
repz
sbb
mov
in
in
inc
jo
jp
std
xchg
and
push
sub
lcall
rcll
repnz
lret
aaa
cmp
loopne
loopne
fwait
jne
dec
adc
mov
sbb
mov
pop
dec
repz
movsb
xor
inc
mov
jnp
sti
fnstcw
push
or
pop
sbb
push
das
fwait
test
mov
pushf
or
ss
loop
add
xchg
lea
inc
insb
jge
pop
fistl
xchg
ljmp
sbb
xor
cld
sbb
mov
popa
jb
js
sti
repnz
clc
ljmp
nop
adc
pop
std
mov
xor
and
cld
ret
dec
call
pushf
loop
test
jbe
add
stc
data16
mov
add
push
shll
ljmp
test
add
inc
arpl
cli
out
shlb
mov
nop
cmp
mov
push
iret
outsb
pop
and
dec
pop
jnp,pn
shlb
gs
adc
popf
sbb
adc
addr16
inc
sbb
and
xor
loopne
jno
lea
push
dec
lret
inc
fnstsw
fsubl
jo
mov
xchg
sti
xchg
push
sub
adc
pop
lea
insb
pop
xrelease
aam
cli
jns
inc
cmpsl
mov
and
or
and
push
aaa
lea
arpl
and
andl
call
mov
mov
outsb
orb
cmp
mov
repz
out
push
pop
xor
sahf
pusha
ret
pop
jmp
loope
icebp
push
xchg
data16
pop
pop
xchg
aam
loope
pop
pushf
add
adc
or
or
inc
ljmp
scas
popa
call
xor
adc
in
mov
test
std
xor
push
iret
pusha
fucomi
add
std
test
subl
loop
push
jns
imul
dec
mov
or
and
in
rclb
mov
test
ds
and
es
aas
nop
xor
jge
outsl
push
fcoms
pop
addr16
daa
jmp
pusha
sub
repz
lcall
pop
xor
enter
minps
test
mov
sbb
mov
inc
pop
or
ret
shrb
cmp
mov
xlat
xor
out
jbe
push
lcall
xchg
fdivrl
decb
xor
pop
les
adc
add
pusha
mov
xchg
push
sarl
add
xchg
cmp
mov
mov
stos
jge
lock
dec
dec
ret
sub
mov
sbb
sbb
ljmp
sub
push
sbb
leave
int3
inc
loopne
mov
sub
and
jg
out
mov
test
lcall
fistl
add
das
fidivrl
xchg
mov
aaa
fs
loopne
dec
hlt
sahf
pop
imul
test
mov
pop
and
pop
mov
mov
arpl
xchg
xchg
sbb
out
push
push
pop
cmp
mov
xchg
cmp
aas
shlb
stos
imul
add
lods
in
dec
outsl
sub
pop
mov
popa
xor
jp
sub
inc
and
in
adc
mov
scas
push
repz
dec
test
or
adc
int3
push
cwtl
add
jge
pop
mov
dec
shrb
lock
cmpsl
mov
cmpsb
inc
filds
lods
or
test
or
ds
cmp
xor
dec
xor
repnz
adc
jo
lods
imulb
movsl
and
icebp
mov
js
mov
shll
jne
inc
cmp
bound
cltd
lods
or
insb
pop
push
mov
sub
popa
imul
iret
push
mov
pop
jb
push
cltd
setp
xor
test
mov
ror
push
or
movsb
mov
dec
nop
call
xchg
or
mov
sti
insl
pop
pop
mov
incb
lods
mov
in
adc
and
xchg
into
sub
adc
sub
cli
cmpsb
test
nop
mov
xor
js
popf
mov
insl
pop
mov
and
sbb
iret
call
add
pop
or
mov
popa
in
push
imul
jno
push
aaa
jne
lea
adc
xor
subb
cmpsb
jg
inc
pusha
subb
arpl
push
subb
push
pop
xor
fmuls
cmp
xor
or
or
or
mov
mov
ljmp
in
in
je
push
jae
or
in
dec
out
xchg
mov
sbb
mov
orb
or
ds
enter
popf
insb
jl
cmp
mov
sub
mov
leave
hlt
add
push
popf
cli
or
push
out
push
xchg
jae
adc
mov
adc
sub
out
shll
push
fwait
lcall
cld
aam
sbb
pushf
adc
jg
pop
fwait
cmp
push
or
lret
push
cmp
xor
sbb
lcall
aad
pop
hlt
sub
mov
xchg
pop
sbb
cmc
or
aaa
imul
sbb
push
inc
inc
cmpl
pop
pop
xchg
inc
xor
sbb
clc
xlat
fiadds
mov
xlat
cmpsb
xchg
sub
xor
cmp
dec
xchg
sub
inc
jg
daa
enter
jne
push
call
icebp
sbb
jno
les
scas
shl
insb
jle
cld
test
rcrl
or
clc
or
mov
insb
mul
jnp
stos
or
xchg
cmp
out
adc
adc
sub
xchg
sar
or
sbb
pop
cli
adcl
outsb
mov
ss
mov
leave
add
dec
xchg
lds
test
sbb
dec
pop
sarb
test
xor
xlat
pop
out
push
test
pushf
lods
stos
jnp
xor
addb
hlt
scas
testb
adc
or
xor
push
mov
jbe
insb
push
pop
add
sbb
rolb
jb
mov
and
push
sbb
fdivs
pushf
pop
fisubrs
adc
xor
imull
ljmp
dec
dec
dec
aad
fstpt
mov
inc
mov
lahf
es
dec
xor
sbb
mov
fistl
add
popf
enter
and
inc
js
shrl
lock
arpl
push
inc
mov
xor
inc
adcb
fcomp
movsb
ds
jnp
iret
aam
repz
lea
dec
jns
pop
fidivrs
scas
push
mov
xchg
icebp
popa
xchg
mov
leave
adc
or
sbb
cmp
lods
dec
lea
jmp
or
fildl
idivl
pop
xchg
sbb
xchg
fwait
push
movsl
repz
jb
xchg
or
shrb
push
pop
mul
lods
mov
or
incb
mov
sub
mov
paddq
outsb
icebp
pop
lock
mov
add
outsb
push
in
movb
sbb
sub
xor
pop
insb
lods
mov
jle
sub
mov
fstp
dec
movsb
int
mov
xchg
inc
shlb
mov
dec
jns
jmp
cltd
lods
adc
pop
and
je
lcall
mov
or
outsb
pop
sub
orb
scas
int
or
addr16
adc
test
js
dec
outsl
imul
lods
mov
pushf
pop
sarb
push
lock
xchg
inc
mov
sahf
add
in
or
dec
inc
std
in
movb
in
scas
ret
es
xchg
sbb
mov
test
jnp
or
cld
mov
test
sub
sbb
cmp
lds
testb
jae
mov
and
pop
test
pop
sbb
jle
test
out
mov
scas
icebp
movsb
add
scas
push
sbb
xchg
push
pop
rol
fildll
ljmp
push
xchg
lret
outsl
xchg
sahf
pop
jmp
jl
movsb
sti
add
xor
mov
rorb
dec
aas
push
daa
inc
sbb
ror
imul
leave
sub
adcl
inc
lret
lahf
mov
inc
bound
ljmp
xchg
aad
adc
sarl
or
xlat
imul
jb
add
popf
add
sbb
jno
sti
sub
fisttpll
test
mov
jg
ljmp
dec
js
jmp
punpckhbw
push
lods
lret
jo
nop
iret
popa
jge
xchg
mov
pushl
xor
fs
data16
lret
lret
xlat
and
sbb
fcmovnbe
jmp
mov
iret
xor
mov
loop
fdivs
push
repz
in
mov
loop
rcll
jb
mov
cwtl
aad
movsl
fsts
scas
mov
imull
mov
pusha
adc
adc
scas
es
aas
test
cmpsl
mov
jge
cmpsb
fists
mov
xor
jns
aam
stc
adc
pusha
inc
rcll
in
in
testb
push
mov
outsl
pop
ja
jle
sub
mov
fnstsw
test
test
jmp
loop
push
xchg
pop
xor
push
dec
shlb
or
shrl
les
xchg
xchg
pop
stc
es
sbb
pop
lock
push
ja
mov
inc
pusha
xchg
sub
shrl
pushf
pusha
das
lret
daa
pop
inc
sbb
dec
call
xor
push
cmp
push
lock
and
and
mov
push
cld
rolb
adc
xor
movsb
out
pop
bnd
pop
add
ljmp
addr16
test
loopne
insl
cmp
or
lock
not
xchg
jg
repnz
push
cld
adc
pop
gs
jg
hlt
mov
fsubr
lods
into
movsb
daa
ss
jecxz
jp
cmc
mov
adc
scas
les
push
ror
and
xor
mov
xchg
add
rcr
jae
ljmp
rcll
fstpt
movb
jnp
xchg
push
mov
fst
cltd
clc
add
test
in
xchg
mov
adc
cmp
lret
in
sub
daa
jl
lods
and
cmp
jl
roll
adc
cwtl
popf
cltd
pop
sub
mov
push
outsb
and
fcom
test
or
xor
sub
push
xchg
int
dec
movaps
jns
xchg
jns
xor
mov
xchg
sbb
cmpsb
repz
aas
jp
cmp
lock
outsb
sbb
jge
pop
mov
cltd
mov
rolb
repz
in
sahf
repnz
call
das
mov
sub
cmp
inc
subl
and
popa
cld
arpl
pop
cmp
jecxz
jns
jge
nop
fwait
jle
and
dec
fistl
aam
add
sbb
lea
cmpb
jp
loope
notl
cmc
jmp
lret
fldl
jg
pop
cs
decl
xchg
cwtl
pop
cs
outsl
insl
add
addr16
loop
aaa
in
sub
dec
jo
faddl
or
lock
sbb
jle
das
cli
repz
sub
sub
pushf
sbb
aas
lods
cmp
mov
mov
dec
dec
cld
icebp
add
testb
lcall
xchg
shr
push
adc
pop
pop
xor
adc
inc
push
push
leave
add
sub
push
adc
aaa
movsb
inc
test
jb
jo
rorb
jns
xor
jno
dec
popf
push
out
or
jl
pop
dec
jb
cmp
jne
in
in
xchg
lds
add
push
sub
cli
out
mov
xor
xlat
mov
fwait
scas
push
jno
sub
ss
out
les
out
or
pop
pop
or
sub
sbb
lcall
fstpl
out
or
imul
xor
gs
lret
rcrl
fs
test
mov
add
iret
jno
sbb
ljmp
xor
mov
sub
out
data16
call
xor
lods
nop
insb
loop
mov
push
test
scas
push
es
mov
int3
dec
xlat
mov
int
cs
out
mov
out
stos
push
sti
outsb
jne
mov
or
dec
mov
ret
imul
xlat
push
faddl
and
and
mov
push
xchg
xor
bound
push
xor
jb
in
mov
xchg
nop
push
fidivrs
cltd
bound
icebp
leave
cltd
add
push
jp
insl
lods
mov
ret
dec
popf
jmp
js
add
lret
imul
fwait
stos
aaa
popf
add
stc
popf
sub
imul
aam
out
insl
rclb
test
lcall
jbe
jl
pop
je
mov
sub
inc
pop
gs
dec
or
stc
int3
testb
inc
iret
jb
call
push
ja
les
inc
pop
ss
dec
mov
les
ret
or
dec
popf
add
mov
jno
in
filds
stos
fsts
add
or
mov
jns
push
jmp
and
lods
ret
in
loopne
mov
mov
test
imul
mov
mov
pop
lret
pushf
xchg
jbe
fsubrl
pusha
sub
cmp
sub
or
mov
mov
sbb
inc
add
mov
shlb
mov
hlt
push
div
xor
fisttpll
int
es
push
lds
pop
pop
xor
fsubs
sbb
push
fisttps
xchg
ja
sub
fdiv
add
push
and
je
xchg
push
mov
js
enter
mov
pop
ficomps
xchg
mov
xor
insb
inc
lock
sbb
cld
out
test
loop
jge
xor
mov
mov
out
mov
mov
sbbl
cmp
pop
cmpsb
xchg
rclb
dec
pop
call
adc
or
add
loope
mov
lahf
shlb
cmp
test
xor
push
inc
mov
mov
in
cmp
imul
mov
ficomps
shl
shl
add
xor
fcomps
mov
sbb
inc
in
inc
mov
cmc
aam
jb
dec
ret
mov
xchg
push
stos
repz
sub
xchg
and
pop
sub
mov
pop
and
lret
sbb
and
in
mov
lahf
inc
mov
in
pop
adc
inc
test
jg
loopne
mov
pop
sub
icebp
testl
fadd
cmc
loope
je
adcl
mov
lds
subl
pop
aam
and
movsb
ljmp
push
andb
and
fisubl
rcl
js
loope
ljmp
fstps
mov
repz
mov
cld
mov
out
out
orl
out
add
test
sub
hlt
andl
push
mov
dec
and
int3
lret
mov
cmp
fnstsw
imul
dec
or
lret
add
lcall
dec
sbb
leave
mov
repnz
push
je
mov
cmp
shrl
mov
or
xchg
orb
jecxz
ss
repnz
adc
bound
sub
inc
pop
pop
in
sub
push
push
aas
push
add
or
pop
sub
cmp
jns
cmpsl
push
cmpsb
cmp
negl
cld
xchg
loopne
jae
pop
loop
pop
push
inc
mov
pushf
add
std
and
aas
pusha
test
int
test
dec
scas
push
push
sub
jbe
loop
cltd
sub
dec
mov
and
js
adc
sar
repnz
lcall
or
sub
test
clc
stos
imul
cltd
enter
nop
outsl
or
xor
pop
cs
sbb
icebp
xchg
jecxz
pop
cmp
xor
sbb
ret
or
xchg
jecxz
dec
add
mov
push
enter
mov
test
lret
cmp
xor
push
jb
gs
dec
xchg
popa
iret
lahf
cmpl
pop
xchg
fbld
or
clc
push
xchg
iret
mov
lret
pop
cmp
aaa
fdivrs
popa
lods
mov
fnstsw
mov
nop
pop
mov
jb
or
sbb
sub
xor
outsl
mov
push
xchg
or
adc
cld
sti
imul
sub
xorb
xchg
ja
pop
fildll
aas
mov
push
mov
repz
add
cmc
lea
fldcw
icebp
lds
push
pop
pop
shrb
pop
jo
sub
das
int3
shlb
dec
mov
lret
aad
jns
xor
cs
btc
pop
imul
mov
subb
syscall
xor
int
ss
aaa
lods
or
xchg
jno
xchg
push
outsb
add
add
pop
jns
xchg
xor
xchg
push
jecxz
sbb
stc
push
sub
cltd
out
and
mov
mov
in
mov
ret
xchg
pop
jnp
inc
cmp
mov
stos
push
gs
add
adc
or
js
fisubs
fwait
ss
push
jl
and
arpl
int3
frstor
imul
mov
jns
jns
pop
frndint
jmp
push
ja
lret
incl
subb
pop
mov
push
mov
pop
adc
cmc
mov
stc
out
mov
cmpsl
sub
data16
out
stc
xchg
pop
sarb
jns
jle
call
hlt
divb
clc
mov
or
or
push
ret
popf
xlat
push
mov
and
jb
xor
aad
int
or
fiadds
xchg
jo
daa
xchg
fcmovnbe
adc
scas
mov
sub
addr16
je
push
adc
push
fwait
and
xor
mov
lods
xlat
xor
adc
dec
mov
enter
ror
dec
jo
leave
imul
xchg
fbld
popa
bound
dec
push
stos
jge
nop
mov
lahf
sti
pop
aam
fcompp
pop
jnp
rclb
icebp
sbb
outsb
iret
mov
push
daa
shlb
mov
sbb
cs
jne
jl
pop
in
jo
mov
sbb
mov
jge
icebp
add
fcmovnu
popf
xorb
and
xchg
inc
int3
mov
aam
xchg
lret
or
flds
mov
mov
adc
sbb
mov
outsb
push
dec
lahf
xchg
movsl
fimull
cmp
add
mov
jne
cmp
adc
mov
adc
jg
push
dec
lret
test
xchg
dec
cmp
ljmp
mov
test
adc
mov
int3
jb
mov
addb
mov
insl
mov
shrb
xchg
arpl
fadd
inc
mov
inc
cmp
push
add
aas
and
iret
int3
sahf
ds
jbe
in
cmp
dec
dec
adc
cmp
fists
cmp
out
xor
es
gs
mov
lret
loopne
int
pop
xlat
and
std
cmp
outsb
dec
jno
roll
stos
cld
repnz
and
lahf
sbb
call
xor
aaa
pop
jg
mov
mov
rcrb
mov
adc
into
jns
mov
xorb
sbb
aam
push
dec
sbb
xchg
inc
add
ja
mov
inc
dec
xor
pop
jb
fs
fldl
sbb
xchg
shll
out
mov
je
jg
push
push
mov
jnp
and
divb
jl
and
push
bound
mov
into
mov
mov
xchg
adc
pop
pusha
inc
xor
jbe
cs
dec
push
hlt
adc
aam
hlt
rcrb
stc
inc
mov
daa
jl
xor
rolb
lds
aam
scas
mov
cmp
shlb
cli
pop
xor
sahf
inc
xchg
mov
xor
repz
inc
mov
jb
or
je
adc
xchg
mov
mov
movsb
shll
add
js
scas
push
xchg
rcrb
pusha
pop
lock
push
cmpsl
js
xchg
xor
xor
jno
push
ds
push
jnp
stc
clc
mov
out
arpl
mov
mov
and
add
cli
ss
dec
mov
pop
stos
xor
inc
cmpsl
ret
shl
jno
xchg
inc
test
add
out
jno
add
lcall
cltd
pop
pop
sub
sbb
push
add
popa
lds
mov
push
sbb
push
jecxz
xchg
lcall
out
sti
pushf
in
mov
mov
mov
iret
fwait
xchg
mov
mov
in
add
jne
sub
push
pop
in
mov
pop
xchg
lods
mov
repz
cmp
dec
popa
insb
fwait
lds
data16
or
xchg
fdivp
mov
mov
sahf
rorb
mov
out
into
jle
xchg
dec
and
mov
rclb
sbb
test
sub
mov
orl
scas
adc
js
mov
push
sbb
in
mov
and
jle
push
insb
jb
push
sbb
jle
mov
sarb
sub
fstps
les
add
cmc
icebp
pop
add
dec
cmpb
in
mov
pop
push
out
pop
repnz
inc
adc
rclb
lret
push
adc
fmuls
xlat
jle
add
sub
data16
call
cmc
sbb
jnp
outsl
stos
ret
fistps
fimull
jns
xor
das
gs
fstpt
pop
iret
call
ds
push
les
outsl
add
push
or
mov
bts
int3
sub
cmpsb
cli
mov
jle
ss
in
cmp
fincstp
mov
out
fs
mov
mov
and
jbe
inc
mov
call
xchg
mov
add
add
mov
mov
test
shl
xchg
mov
push
gs
movsb
test
cmp
lds
jb
and
mulb
push
lret
or
cltd
add
dec
sub
xor
lods
out
sbb
shll
jmp
mov
mov
jne
mov
lea
in
pop
lret
movsb
cmp
dec
movsb
pop
js
sbb
popf
xchg
or
movsl
mov
pop
cmp
inc
repz
push
xchg
lock
loop
push
movsb
scas
and
js
iret
in
mov
mov
pop
aaa
inc
movsl
movsb
push
dec
test
cmc
pop
cli
lods
rorl
mov
pop
iret
mov
in
mov
cmc
in
push
fisubs
dec
add
xchg
sub
mov
aaa
xchg
mov
adc
xchg
inc
imul
dec
fbstp
cli
pop
fists
push
add
and
xor
cmp
loope
arpl
add
ret
cmp
or
add
pop
das
or
mov
jne
testb
or
lds
ds
pop
inc
xchg
imul
inc
push
sti
icebp
adc
push
xchg
and
inc
push
movsl
push
sbb
pop
pop
add
cwtl
and
and
adc
or
mov
cmp
ret
or
and
test
js
in
push
shlb
js
stos
repz
ret
cmp
adc
lea
pop
push
dec
push
clc
in
mov
push
jmp
leave
outsl
and
mov
jp
mov
mov
orl
popa
mov
xorl
insb
mov
test
jnp
mov
aas
cmp
shll
fstl
insb
xor
push
xor
lahf
sahf
xor
ja
ja
and
or
stos
pop
rorb
enter
out
imul
pop
test
ljmp
add
add
sbb
cmp
and
jne
jge
ret
adc
or
push
pop
or
out
into
jp
jge
dec
pop
jnp
adc
adc
aam
cmp
mov
push
clc
je
pop
stc
jae
cmpsl
lret
xchg
mov
dec
int
ss
sahf
adc
loop
pop
sarb
push
insl
repz
xchg
mov
push
jne
cli
fsubrl
cld
jl
cmp
jg
cltd
shlb
push
pop
dec
popa
sbb
loop
call
jmp
push
int3
adc
xchg
mov
loopne
mov
pop
push
xchg
out
fcomi
sub
call
xor
sbb
inc
push
int3
xor
xchg
ja
mov
xor
aam
push
ja
movsb
inc
repz
icebp
mov
lock
xor
cmpsl
loope
hlt
idivb
decl
outsb
mov
xchg
stos
dec
mov
cmp
push
sub
xchg
mov
or
fsubrl
int
jbe
and
jle
xlat
loope
inc
lret
pusha
sar
dec
test
jmp
lods
push
fwait
movsb
ds
sub
sub
xorl
cld
or
sub
mov
rcll
call
cmp
into
or
repnz
subl
pop
test
lret
mov
or
mov
xor
lahf
repz
clc
out
imul
xor
sub
adc
push
aad
or
sub
popf
rcrb
mov
adc
sarb
pusha
dec
push
cld
add
jle
rcll
jp
in
sbb
mov
cmp
in
test
mov
rcrl
inc
fcomps
jno
or
xor
stos
out
xchg
les
dec
mov
cmpsl
fmuls
mov
test
ljmp
dec
sbb
jle
push
add
inc
sti
movsb
iret
or
mov
push
out
paddw
lahf
jecxz
rcrb
cmp
xor
add
push
mov
les
jle
inc
pop
outsb
xor
imul
ja
lahf
outsl
arpl
jmp
int3
xchg
loopne
lea
mov
dec
sub
cmp
adc
movsl
jne
imul
cld
mov
int3
in
jmp
test
ds
sahf
sar
xchg
xor
cmp
and
cltd
push
aaa
xlat
data16
roll
enter
adc
mov
mov
loope
and
notl
shlb
dec
popa
test
fisubrs
in
cmp
test
or
dec
sahf
or
jnp
out
insl
pusha
ret
int3
xchg
les
dec
jg
out
lds
lea
mov
cmovp
adc
jecxz
adc
xchg
out
mov
inc
pop
pushf
cmp
cmc
inc
lods
mov
sbb
mov
pop
xlat
fistpll
push
scas
insl
xchg
jl
cs
rorl
xchg
add
cmp
cwtl
inc
data16
inc
dec
push
adc
sahf
pop
sbb
ds
out
mov
add
jmp
loope
jmp
aas
xchg
lea
loope
sub
je
add
rorb
push
scas
mov
sub
adc
adc
lahf
test
insl
pushf
lahf
pop
add
loope
fs
je
pushf
in
fwait
lods
add
mov
movsl
mov
fdivp
mov
fstl
scas
fmuls
out
pop
cld
jb
call
ljmp
popf
shll
aad
rcrl
pop
and
js
dec
add
add
stc
push
incb
out
ret
mov
movsb
jb
inc
cmp
dec
pop
jp
push
addr16
adc
cwtl
inc
gs
cmp
cmpsl
pop
movsl
sub
xchg
or
adc
mov
and
mov
testl
imul
xor
adc
jmp
loope
cmp
dec
dec
adc
mov
cli
enter
imul
iret
cld
mov
hlt
adc
xor
push
inc
push
out
fs
test
data16
mov
mov
lret
rclb
repnz
adc
or
pop
xlat
sub
and
mov
jae
jge
cltd
xchg
mov
add
xchg
cs
and
mov
filds
add
xchg
mov
cmp
push
sbb
lock
jno
jae
pop
add
xchg
sub
in
adc
test
mov
fcmovnu
push
cmp
aam
je
das
int3
lret
cmp
or
cmpsl
ja
subl
movsb
mov
push
mov
cli
mov
jl
push
sbb
dec
dec
fimuls
sub
mov
and
lcall
std
push
and
add
sbb
cld
cmp
sbb
cmp
jg
je
add
dec
lods
in
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
jmp
scas
shlb
jno
scas
mov
xor
loop
ja
mov
pop
jl
xor
mov
sub
pop
cmpsb
jge
ljmp
and
and
jnp
cmpsb
sti
jle
sbb
or
shrb
mov
add
xor
adc
movsl
arpl
xor
call
rcll
enter
shlb
mov
fsqrt
mov
std
jne
mov
mov
scas
dec
es
push
push
mov
or
movsb
ret
mov
imull
jbe
out
mov
mov
popf
cmpsb
mov
enter
push
or
and
sbb
xor
in
loop
scas
or
push
popa
mov
insl
loope
jno
xlat
cmpsl
shrb
mov
push
ljmp
xor
dec
jl
mov
addb
stos
add
addr16
les
stos
out
subb
daa
or
push
inc
aam
fs
fidivrl
fidivrl
popf
scas
sbb
andb
jle
nop
inc
loope
inc
mov
test
inc
imul
lods
push
mov
fnstcw
shl
gs
sbb
imul
or
add
mov
fsubr
stos
dec
mov
js
mov
insb
in
cmp
int3
add
push
adc
loop
cmpsb
sarl
mov
fucomp
dec
test
pop
adc
mov
sti
jbe
mov
cs
jno,pn
das
fsubs
adc
sub
andl
into
cmp
insl
mov
scas
subl
push
mov
jno
pusha
decb
or
inc
dec
dec
sahf
movsb
lret
and
mov
stc
push
cmpl
or
add
adc
test
out
or
or
ret
rcll
jl
pop
test
clc
js
int3
repnz
loope
pop
ds
out
dec
mov
mov
and
or
and
dec
cmp
out
int3
cmp
inc
cmc
mov
repz
pop
xorl
daa
aas
rorb
dec
loopne
scas
inc
xchg
xchg
xchg
xchg
add
mov
inc
and
mov
xchg
enter
inc
push
cmp
xchg
sbb
mov
pop
into
sbb
cmp
jmp
mov
pop
test
xchg
test
xchg
int3
arpl
add
mov
xor
aam
popf
adc
and
xchg
iret
mov
loope
inc
jae
cmp
xor
les
inc
outsb
mov
xor
fisubl
sarb
cld
jae
ljmpw
mov
out
faddp
pop
add
adc
sub
sti
or
add
xor
pusha
inc
sarl
xchg
sub
out
nop
aad
or
xchg
xor
pop
addr16
push
xlat
int
jmp
sub
lret
ds
mov
hlt
mov
movsl
and
mov
mov
sub
cltd
inc
sub
out
xor
mov
in
jg
or
fcomi
dec
ret
xor
cmc
insb
inc
cmpsl
jecxz
popf
aaa
out
push
mov
push
jl
test
popf
sti
pop
and
xchg
xlat
lea
xchg
mov
cmp
lret
dec
xlat
fisubrs
xchg
int3
dec
aas
fldt
xchg
in
ficoms
push
aas
adc
push
pop
inc
dec
mov
imul
mov
jns
xchg
aaa
mov
bswap
sub
lret
push
call
mov
and
mov
outsb
fdivr
mov
fwait
mov
mov
mov
ficoms
les
push
jmp
roll
inc
push
repz
push
movsl
sbb
dec
inc
and
xor
jno
scas
loope
pop
or
push
ljmp
outsb
lcall
leave
das
out
add
xor
inc
and
mov
xchg
lods
enter
push
sub
dec
maxps
arpl
mov
and
les
inc
bound
pop
in
xchg
negl
push
popl
fidivs
push
lods
bound
test
rol
xchg
push
xchg
or
fnstenv
nop
lea
scas
sbb
scas
or
or
pop
leave
xchg
xor
mov
insb
xor
aam
adc
into
rcr
int3
jb
mov
adcb
cmc
xchg
icebp
lods
xor
and
push
mov
andps
xor
leave
pop
push
or
lret
pushf
mov
inc
cwtl
push
cmp
out
iret
cmp
mov
mov
pop
mov
sub
cmpl
push
mov
jno
ljmp
fldcw
iret
mov
adc
jmp
add
cmp
stc
xchg
out
rcrb
lock
xor
dec
xchg
leave
movsl
xorb
jae
pop
sbb
jecxz
lods
or
je
shl
dec
or
pop
bnd
mov
outsl
and
arpl
hlt
call
aas
push
fildll
xchg
dec
cmp
scas
icebp
mov
imul
movsb
movsb
hlt
sbb
movsb
push
inc
lret
xchg
into
pop
adc
jb
inc
xchg
cltd
jl
ret
add
mov
xor
or
inc
xchg
adc
or
xchg
aaa
cmp
mov
xlat
mov
call
out
pushf
sbb
push
jl
idivb
jae
inc
mov
add
scas
scas
cmp
sub
pop
in
or
dec
jecxz
scas
xor
jmp
aad
inc
leave
mov
sbb
daa
xor
dec
mov
sbb
call
push
pop
fadd
repnz
mov
inc
in
or
push
push
movsl
ret
xor
sub
std
arpl
call
aaa
and
cltd
push
mov
push
test
pop
sahf
lcall
mov
loopne
ljmp
mov
sbb
movsl
adc
jb
dec
sbbb
and
inc
pushf
scas
sahf
xchg
ljmp
ss
dec
xor
sub
cld
js
pop
cmp
and
jbe
lods
cltd
jae
imul
inc
insl
pop
push
sub
jbe
mov
add
movsb
xchg
pop
dec
in
sub
das
mov
mov
test
outsb
xchg
fwait
xor
inc
dec
shlb
out
nop
jae
jae
xor
add
filds
xchg
aad
and
popa
jl
and
insl
outsl
inc
sarl
mov
mov
jo
cli
jge
ficoms
xor
test
mov
sti
jno
pop
jno
and
pusha
rcr
loope
sub
mov
inc
in
fdivs
frstor
ret
cld
outsb
push
fninit
adc
in
fmull
mov
xor
and
mov
or
jns
jne
xchg
imul
sub
jp
sbb
add
sbb
fstps
incl
or
mov
fwait
lock
icebp
pop
mov
fistps
pop
inc
jb
mov
pop
inc
test
inc
jne
movsb
add
mov
loop
sbb
mov
scas
imul
jmp
push
mov
xchg
in
jp
mov
pop
mov
outsb
mov
test
stc
push
push
aaa
lret
cmp
jno
add
fidivrs
xchg
pop
faddl
jecxz
adc
stos
xchg
mov
push
pop
sub
inc
std
adc
lds
fs
insb
mov
out
out
in
and
jno
dec
xchg
pop
push
clc
xchg
sarb
xor
inc
jge
ret
sub
movb
std
pop
or
dec
lods
mov
jne
pop
es
mov
add
mov
push
mov
or
mov
push
sbb
insb
jno
adc
divb
jecxz
dec
into
lret
lret
dec
insb
nop
js
das
mov
add
ds
sahf
enter
out
lods
andb
dec
repz
call
icebp
and
pushf
cmpsl
add
lods
pusha
outsb
xor
rcrb
aam
lcall
xor
sarb
inc
mov
pop
mov
pushl
mov
jo
cmpl
and
pop
cmpsl
aas
push
scas
leave
mov
dec
push
rcrl
sbb
push
call
cmp
ret
clc
fildl
xchg
call
add
dec
fxch
and
aam
psllw
fmuls
add
popa
fisttpll
inc
xchg
mov
aas
or
out
mov
in
dec
jmp
adc
xchg
xchg
lea
adc
sahf
in
js
shlb
stos
xlat
pushf
out
push
jle
shl
push
mov
sub
mov
xchg
in
and
gs
scas
inc
sbb
pop
in
xchg
ss
pop
or
adc
cmp
pop
jo
iret
leave
notb
in
mov
mov
sub
fwait
shrb
int
push
scas
add
sbb
ret
daa
icebp
popf
clc
pop
xor
mov
xor
mov
mov
lcall
jb
dec
rcl
xor
cwtl
fs
dec
inc
pop
leave
out
mov
daa
mov
inc
and
gs
or
test
lods
nop
add
pop
inc
sarb
cmpsb
rcll
out
adc
add
fisubrs
fcom
add
push
add
mov
xchg
or
mov
xor
out
inc
outsl
mov
xchg
pop
jae
shlb
adc
subl
dec
icebp
push
cmp
xchg
mov
xchg
cli
lret
adc
push
adc
xor
xchg
in
aas
mov
das
inc
call
pop
icebp
sub
sub
out
pop
cmp
scas
jae
and
sub
or
shr
repz
repz
outsl
cmpsb
mov
sbb
int3
repz
loop
aad
int3
or
xchg
sub
fwait
add
out
lahf
dec
mov
rcrb
daa
gs
push
aaa
fdivrl
cltd
sbb
mov
or
inc
xchg
aaa
je
divb
or
mov
dec
ret
cltd
icebp
test
cmp
fwait
or
add
divb
test
xlat
push
cmc
out
int3
int
sbb
cld
xor
jne
js
aas
int
dec
test
pop
repnz
es
pop
ss
stc
or
inc
xchg
loop
iret
and
ret
adc
dec
sbb
push
cmp
test
mov
sub
push
cmpb
xor
mul
jo
add
lods
cmp
repnz
push
mov
arpl
lock
and
jbe,pt
jne
ljmp
fwait
insb
sub
or
sar
inc
adc
lcall
jp
push
inc
sar
push
jbe
daa
sub
divl
insb
loope
loopne
std
mov
cmpsl
and
xchg
xlat
pop
mov
xor
insb
cmp
repnz
adc
mov
or
push
out
je
push
push
push
inc
jmp
push
nop
and
mov
lret
daa
mov
stc
mov
jmp
inc
movsb
shl
mov
inc
imul
jge
cmp
adcl
mov
icebp
out
cld
inc
xchg
lret
loopne
jnp
adc
js
popa
gs
sub
jg
jmp
inc
testl
inc
adc
or
cld
mov
sahf
cmp
fwait
inc
aaa
sbb
repnz
lock
cmp
in
xlat
pushf
insb
cli
into
test
add
mov
mov
mov
nop
rcr
or
je
push
imul
mov
xchg
lcall
jne
cli
rclb
fs
bound
add
mov
sbb
xor
jp
cmp
or
into
or
mov
lcall
xor
sub
mov
bound
imul
and
rcl
push
idivl
dec
mov
in
test
add
sub
icebp
push
inc
and
push
mov
adc
mov
or
es
inc
js
adc
or
inc
pop
jns
into
aaa
inc
les
add
push
shlb
inc
mul
inc
pop
cmpsl
xchg
in
mov
fisubs
fwait
xor
xor
popf
test
add
xchg
ja
cmpsl
negb
enter
add
int
mov
push
xchg
bound
push
shr
and
cmc
push
movsl
pop
shlb
jne
inc
out
stos
ja
std
adc
and
mov
and
jnp
mov
rolb
mov
add
mov
in
pop
push
jg
popa
jne
jnp
mov
hlt
xchg
pop
popa
jns
dec
ficompl
icebp
pop
lea
mov
push
loope
cmp
shll
cltd
in
jbe
jle
es
clc
into
fimuls
adc
mov
jecxz
aad
ror
lret
out
jmp
das
andl
mulb
aam
subb
cmp
lret
ficoml
jle
push
jle
popa
leave
das
dec
push
sahf
lods
mov
div
dec
ret
neg
stos
lds
dec
jge
lds
imul
dec
test
out
mov
jnp
mov
rcr
pop
and
insb
mov
adc
das
loopne
addl
add
xchg
fimull
or
push
sub
sahf
mov
mov
and
lods
loopne
bound
xor
pop
insl
lahf
enter
xor
cmc
push
xor
xor
jb
and
and
lret
std
cmp
loop
lret
scas
inc
xor
add
pop
push
imul
or
imul
dec
insb
lea
ficoml
pop
repz
out
movsl
push
mov
sbb
dec
xchg
adc
push
dec
pop
lret
sbb
loopew
xor
pop
out
arpl
repnz
xchg
push
mov
pop
subb
jg
aad
mov
xor
push
push
dec
push
mov
jmp
loopne
fcompl
push
jno
mov
mov
aam
mov
inc
pop
sti
test
or
pop
gs
iret
test
scas
mov
mov
call
add
dec
sti
repz
xor
es
mov
stc
push
inc
sbb
jge
js
outsl
lahf
fdivrp
int
cwtl
imul
inc
add
outsb
mov
movsl
movsl
adc
out
sub
sbb
dec
jp
jae
loopne
push
xchg
adc
sub
rcrl
les
sbb
leave
sub
push
jg
cwtl
sbb
pop
sti
sub
dec
enter
pop
add
std
int3
dec
sub
inc
adc
mov
mov
test
push
push
int
loope
mov
std
mov
les
mov
mov
sti
dec
inc
test
push
mov
add
loopne
jns
test
into
repnz
hlt
adc
pop
mov
push
jb
cmpsb
dec
loope
push
aam
inc
orl
shll
jbe
test
mov
and
xchg
movzbl
cmp
rolb
mov
cmp
sub
cmpsl
fcompl
mov
fstpl
push
push
imul
fnstenv
inc
inc
add
cs
mov
xchg
mov
or
inc
pop
mov
add
ljmp
or
icebp
lret
jae
and
dec
gs
std
mov
in
insl
mov
cmp
mov
pop
sub
movsb
loop
adc
movsbl
sbb
jno
mov
cmc
inc
rcrb
sub
xchg
fisttpll
fnsave
imul
into
mov
mov
adc
pop
jns
lahf
std
ja
rclb
mov
and
fwait
pop
jp
jmp
xchg
push
repnz
lock
outsl
push
or
mov
add
int3
mov
or
in
dec
test
jl
aad
andb
dec
lods
push
adc
xchg
addl
cmp
cmp
in
add
sbb
ss
xlat
pop
push
push
lods
push
in
add
test
push
xchg
pop
stos
ret
dec
mov
cmp
inc
imul
or
jns
xor
sub
add
jae
ret
mov
subb
fisttps
xchg
lea
jns
mov
adc
xor
fldt
daa
outsl
gs
bound
sahf
xchg
loop
dec
shll
jns
xor
inc
mov
xlat
mov
xor
jmp
stos
or
jmp
iret
and
jae
mov
inc
fdivrs
pop
inc
mov
push
rcl
movsb
xor
push
cmp
lret
repz
mov
in
int3
aaa
inc
push
in
test
cmp
push
push
lcall
xor
xchg
stos
and
jno
sbb
push
sbb
cmp
test
mov
insb
pop
sub
adc
imul
popa
push
mov
fcom
mov
in
test
xor
cmp
cmp
xor
lock
cmpsl
loopne
mov
mov
aas
mov
sbb
stc
xchg
pop
dec
lcall
cltd
mov
mov
out
cli
mov
mov
lea
das
nop
out
jo
or
jge
add
rcll
and
pusha
lret
in
out
test
sub
stos
adc
inc
repz
stos
cmp
xchg
dec
cmp
jp
dec
les
ds
subb
ret
and
faddl
shrb
inc
inc
xchg
xchg
sub
movsb
int
mov
lret
and
mov
pop
lahf
and
jb
movsb
sbb
insb
cwtl
stos
jle
loope
daa
xchg
inc
outsb
push
and
mov
dec
in
dec
fnstsw
pop
or
xor
jge
pop
je
enter
mov
jl
push
mov
clc
fdivrl
inc
dec
mov
dec
not
mov
imul
cwtl
or
subl
ss
das
hlt
cs
loopne
lods
test
lahf
loopne
into
icebp
mov
xchg
mov
jne
jge
je
jmp
repnz
inc
cltd
out
jecxz
dec
int3
jb
fiaddl
lds
xchg
adc
aad
stos
xchg
lret
call
iret
xor
loope
mov
lahf
movsl
out
dec
movsl
adc
pop
pop
and
cmp
sarb
loop
add
and
mov
ja
sbb
les
clc
nop
les
das
in
test
jbe
sub
xorl
fsts
pop
mov
vpgatherqd
loop
xchg
xchg
mov
cltd
jbe
inc
sub
mov
sub
scas
xor
sub
stos
outsl
xchg
cmp
jno
scas
inc
inc
xor
sub
imul
push
movb
dec
adc
pop
and
pop
push
jg
and
adc
data16
jp
sbb
add
xor
test
push
mov
arpl
inc
inc
lcall
test
mov
sahf
pop
push
xor
mov
data16
and
cmp
sub
in
jae
or
or
mov
loopne
dec
mov
scas
rolb
mov
lock
shrb
flds
pop
ja
jbe
mov
fst
ja
les
out
lahf
cmp
lods
inc
sub
xchg
or
pop
negb
subl
stos
xchg
xchg
sub
inc
push
add
xchg
loop
dec
pop
and
cltd
mov
dec
dec
jle
loop
cmc
cmp
inc
mov
mov
sti
mov
sti
cmp
and
xor
dec
add
leave
xchg
lods
fstpt
ljmp
rcrl
roll
push
xchg
pop
ds
dec
cltd
rclb
bound
js
dec
loopne
push
mov
dec
or
push
lcall
sbb
jnp
xor
jb
push
enter
insl
adc
rorl
cmpsb
shrd
insb
cmp
mov
sub
divb
push
and
mov
cmp
aas
test
mov
out
loope
out
mov
addr16
fdivrl
xchg
out
lods
dec
jo
push
pop
out
idiv
xchg
pop
shlb
inc
scas
outsl
jmp
jmp
xchg
xchg
and
mov
aam
cmpsb
and
sub
xorb
loop
out
clc
andl
sarl
cmp
or
push
push
mov
mov
jnp
orl
in
xchg
scas
or
fdivrl
dec
add
sbb
sti
jnp
jp,pn
jle
mov
add
fimull
xchg
and
inc
test
scas
mov
push
lret
pop
cmp
loop
xchg
lods
and
out
rcrb
inc
cmp
fistl
push
mov
dec
sub
fmull
movsb
sub
iret
jae
fildl
ljmp
push
jecxz
adc
push
xchg
out
pusha
je
jp
xchg
fsubs
sbb
mov
addr16
daa
fstpl
xor
hlt
add
sarl
test
cld
inc
shll
repz
jge
xor
aaa
sbb
mov
out
lret
pop
lods
push
shlb
repnz
push
arpl
mov
imul
sub
and
push
cmp
lods
insb
cld
bound
test
pop
cld
xchg
cmp
or
inc
test
imul
or
in
xor
push
mov
test
inc
cmpsl
clc
cld
adc
std
jmp
inc
xchg
sti
xor
jle
int
add
ds
push
imul
repz
int3
mov
stos
in
push
add
int3
shr
xchg
sbb
push
mov
mov
xchg
negl
jnp
adc
pusha
xor
sahf
mov
dec
aas
mov
arpl
jns
jns
shll
pop
roll
jno
mov
push
rcrl
loop
imul
and
pusha
adc
adc
inc
xchg
sub
inc
pop
movsb
cmc
aaa
mov
adc
mov
dec
mov
imul
adc
or
mov
enter
xor
push
xchg
insl
cli
xchg
loopne
push
mov
ljmp
cmp
fistpll
mov
cli
mov
mov
mov
push
es
mov
call
mov
pop
adc
jne
repnz
test
jne
push
pop
cmpb
loope
cmp
popf
jno
cwtl
pop
dec
push
pop
test
lods
jmp
or
clc
sbbl
jecxz
dec
stos
jnp
jo
mov
scas
xor
popa
idivl
cmpsl
pop
or
pop
xor
inc
cmp
inc
xlat
xor
jg
sub
mov
ljmp
inc
repz
or
inc
in
in
jne
test
lea
sub
arpl
fidivs
jmp
jp
aam
lahf
inc
xchg
jb
adc
dec
lods
cmpsb
ror
les
pop
mov
stos
add
cmp
arpl
push
test
scas
or
adc
cld
and
test
pop
mov
pop
fcoml
lret
icebp
pavgw
inc
fcoms
insl
inc
pop
pop
dec
adc
sbb
lcall
movsl
jle
mov
loop
xchg
stc
int
mov
jb
frstor
inc
sub
cmc
xchg
adc
pop
std
inc
out
jno
pop
pop
dec
jmp
and
adc
jne
pop
xor
cmpsb
loopne
stos
test
push
mov
stos
pop
clc
pop
mov
fnsave
pop
jne
scas
stc
dec
pop
popa
out
fisttps
subb
lahf
mov
sub
loopne
popa
lea
ds
pop
inc
mov
add
mov
dec
mov
popfw
jb
sub
rolb
fdivr
out
sub
pop
andb
rcr
adc
fimuls
mov
inc
adc
sbb
into
push
sbb
pop
stos
sub
fnstsw
call
bound
jg
lock
pop
loope
mov
popa
int
cmp
in
lods
pop
jmp
jbe
xor
mov
mov
and
fdiv
adc
push
sub
xlat
cmp
xlat
jo
psubw
push
mov
insb
mov
add
daa
sbb
popf
out
aaa
es
addb
test
shll
cwtl
arpl
mov
jl
mov
push
jp
and
mov
test
and
dec
jns
leave
aam
mov
in
inc
setnp
cmp
orb
aam
lods
add
stc
cld
or
outsl
push
cmp
cmp
add
daa
xor
push
xlat
out
pushw
adcb
cmp
cmp
shrb
bound
mov
add
xchg
insl
enter
daa
mov
sub
mov
dec
js
repz
add
lahf
pop
fucomip
mov
pop
popa
ffree
xchg
sti
es
fistps
push
fdivrl
movsl
mov
xor
push
loop
pop
sti
jle
push
xlat
rol
xchg
test
mov
xchg
jge
in
je
mov
inc
sub
lods
and
adcl
rcr
mov
repnz
mov
inc
cs
scas
sub
or
adc
xchg
into
xchg
sub
js
jecxz
or
ret
mov
or
shll
mov
flds
dec
lcall
rcrl
mov
lret
icebp
adc
cmc
clc
push
cmp
roll
movsl
mov
jl
lcall
loopne,pn
in
pop
jns
add
aas
push
push
adc
mov
psadbw
inc
mov
data16
or
sub
pop
adc
enter
jmp
dec
fidivs
lods
cmp
sub
xor
fisttps
inc
dec
aad
and
xor
mov
call
enter
cld
inc
jecxz
das
in
imul
xor
shr
mov
adc
mov
dec
rcr
in
pop
mov
xor
aas
and
jae
mov
sarb
pop
inc
and
add
fstpl
orb
jecxz
sub
and
jmp
addb
jmp
xchg
out
std
xchg
into
pop
das
push
lret
loope
adc
aad
aad
mov
jmp
add
xlat
lock
sti
inc
jbe
cs
jns
cmpsb
inc
mov
out
lcall
inc
pop
push
jge
inc
popf
and
in
xchg
jb
call
inc
mov
add
add
mov
or
out
addr16
ror
lahf
dec
xchg
add
dec
xor
clc
pop
push
into
xchg
inc
sub
jle
lock
add
jl
das
cmp
les
add
lods
test
test
aas
fbld
sbb
mov
std
xor
push
mov
cwtl
jl,pn
lock
push
mov
jl
mov
and
cmp
stos
xchg
jno
xchg
cmpsb
push
mov
or
hlt
jmp
xor
push
mov
push
push
xor
in
daa
jb
xor
arpl
cwtl
cmp
mov
mov
mov
pop
mov
add
xchg
inc
jecxz
push
mov
inc
pop
fadds
jecxz
xrelease
cmp
fwait
roll
xchg
lcall
add
pop
jo
push
stos
gs
sub
mov
fnstsw
xor
cmp
lret
cld
mov
mov
iret
lods
popa
mov
inc
testl
scas
cmp
lods
sbb
in
mov
xor
sbb
repz
insl
xchg
dec
jp
loopne
stos
jle
mov
and
int
mov
pop
test
mov
bnd
mov
or
lock
repz
pop
scas
pop
aad
adc
lcall
nop
sbb
leave
pop
das
out
in
sub
orb
jno
push
clc
and
outsb
lea
nop
xor
adc
loopne
xor
and
pop
test
lock
sub
in
leave
mov
or
mov
mov
xchg
xor
inc
je
jmp
inc
movsb
inc
jnp
or
xchg
jl
mov
jnp
mov
dec
or
mov
das
ljmp
and
cmp
leave
jge
pop
mov
out
rcll
push
icebp
adc
cmc
inc
sti
montmul
cmpsb
xchg
or
movsb
loop
ss
push
mov
xor
pop
xlat
sub
mov
aaa
movsb
xor
pop
repnz
es
loopne
cmp
repnz
in
cmp
ror
push
push
sbb
lcall
dec
in
roll
aad
mov
mov
out
data16
inc
sahf
inc
mov
adc
adc
mov
lods
sub
xor
adc
fildll
pusha
aas
jl
push
mov
fst
jae
dec
mov
incl
jbe
dec
ljmp
test
and
sbb
cmp
dec
leave
fildl
and
sbb
mov
jae
mov
push
je
cmp
jmp
iret
jl
mov
jnp
clc
mov
ds
sti
stos
js
dec
cmp
mov
xor
push
aad
mov
incb
add
dec
push
xchg
and
pop
ret
je
ljmp
scas
pop
xchg
cld
jg
roll
fnstenv
rcrb
leave
sbb
inc
adc
xor
cld
idiv
mov
push
sub
xor
popa
scas
push
cmpsb
aaa
sbb
out
jno
or
cwtl
mov
sub
mov
pop
lock
mov
fwait
push
das
fmuls
iret
or
xor
or
gs
and
mov
dec
pop
cmp
loope
xlat
xchg
and
sarb
testb
aaa
jmp
nop
cmp
adc
lea
addr16
je
push
push
add
xchg
push
fdiv
adc
test
push
dec
movsb
lods
or
jmp
cmp
push
adc
in
bound
out
gs
adc
mov
popa
aad
dec
push
test
ljmp
das
lret
imul
xor
testl
xchg
ficompl
sar
fisttps
aam
movsb
xchg
mov
jbe
fwait
ret
sbb
ds
xor
loopne
cwtl
mov
mov
xchg
xlat
add
int3
hlt
adcl
push
ficoml
lods
outsl
test
dec
jecxz
jmp
mov
cli
xor
cmp
jl
data16
sti
sbb
int
push
out
cltd
cmp
xor
lea
dec
repz
stos
xchg
repz
jmp
and
hlt
repz
je
or
mov
jno
and
divb
add
sbb
cmp
inc
add
pop
and
inc
adc
jmp
out
cld
lods
pushf
out
test
shlb
in
sbb
mov
stos
movsb
mov
and
add
into
ja
inc
rcrl
fwait
dec
sub
pop
jmp
or
mov
loopne
cwtl
mov
leave
xchg
lock
jecxz
xor
push
jns
add
dec
pop
icebp
mov
push
xlat
movsb
inc
ja
aaa
xor
ljmp
lret
pop
fs
pop
fwait
mov
repz
sti
mov
std
lock
test
and
pop
jb
cmp
fsubrp
pop
and
inc
aaa
std
cmpl
insb
das
ljmp
popa
out
dec
dec
push
dec
pop
mov
mov
sahf
mov
addr16
mov
daa
bound
xchg
sub
mov
std
and
shl
jle
cli
in
lahf
nop
call
xor
pushf
sbb
mov
pop
daa
or
fiaddl
pop
mov
push
or
rolb
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
add
add
into
xor
add
add
add
add
add
rcrb
add
add
inc
add
jo
add
inc
add
jo
add
inc
add
jo
add
inc
add
add
add
inc
push
incl
cmp
inc
dec
inc
test
lods
jg
arpl
inc
add
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
sub
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
andl
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
dec
inc
mov
pop
xchg
andl
gs
add
arpl
adc
loopne
dec
enter
or
mov
into
enter
push
xor
cmp
mov
add
repz
adc
sbb
mov
sbb
sbb
xor
repnz
or
addl
aaa
in
adc
dec
jle
das
and
movsl
mov
and
or
sbbl
add
xchg
mov
gs
leave
mov
pop
out
scas
jg
cmpsb
mov
xchg
xor
inc
or
jl
xor
mov
adc
pop
push
pop
and
lahf
pop
jmp
push
adc
lret
xor
xchg
mov
mov
fisubrl
push
nop
sbb
jg
push
pushf
dec
ss
aas
mov
adc
push
test
icebp
jl
push
ret
pop
and
cmp
sub
movsl
jecxz
xchg
lds
lahf
sbb
pop
jns
movsl
out
pop
push
int
in
sahf
fwait
mov
dec
jb
pop
mov
fadds
xor
sub
test
sbb
push
in
and
sub
jne
out
xchg
cmp
in
xor
std
leave
adc
movsl
js
pop
pop
pop
sub
mov
outsb
ds
sub
lret
jne
lds
int3
and
pop
loop
jnp
leave
movsl
mov
ret
mov
jge
pop
test
mov
add
mov
into
insl
mov
dec
imul
sahf
mov
push
inc
jbe
xorl
fistpl
sbb
jmp
out
into
push
add
inc
sti
movsb
and
inc
pop
mov
jmp
cwtl
push
mov
mov
mov
hlt
lahf
repz
les
jecxz
stos
lea
and
rcl
iret
push
fidivrl
cmp
pop
mov
xor
adc
xor
pushf
dec
sub
aas
push
andl
xor
cmpsl
add
sbb
sbb
sbb
pop
mov
ret
sbb
jns
push
mov
inc
movsl
xchg
out
cli
inc
xor
incb
mov
mov
mov
js
repnz
dec
pop
roll
mov
rclb
in
push
mov
ss
nop
and
ret
mov
lret
xor
sub
mov
outsb
bound
out
fildl
inc
xchg
cmc
pop
fsubs
sbb
mov
popa
or
mov
cmpsl
pop
pcmpgtd
cmpsl
mov
jge
data16
pop
or
imul
outsb
insb
mov
loopne
fcmovu
repnz
push
int
outsb
xchg
sub
cld
mov
push
mov
or
cmp
mov
pop
add
lret
fcmovnu
gs
inc
jge
aaa
xlat
in
ja
aam
shr
mov
test
dec
ss
pop
cmp
mov
mov
dec
lret
fnstcw
popf
clc
xor
add
shlb
push
cli
mov
push
nop
test
not
xchg
mov
sub
lea
jne
sete
cmp
add
and
mov
lahf
test
ret
ja
pop
std
xchg
ret
loopne,pt
stos
clc
dec
push
fxch
or
and
repnz
popf
xor
sub
test
push
mov
imul
ret
cli
inc
imul
scas
add
mov
mov
insb
adc
and
add
jb
xchg
mov
sbb
xchg
mov
or
sub
push
flds
push
and
jae
mov
mov
in
cmpsb
dec
mov
dec
lret
out
push
mov
inc
add
repnz
std
fidivs
movsl
sbbb
cld
mov
nop
jmp
rcrl
inc
push
mov
add
fstps
push
lahf
shrb
fcomp
js
les
push
cld
add
cmp
dec
subl
stc
push
je
xchg
jb
ljmp
jnp
jecxz
ret
sub
lods
lock
out
mov
mov
data16
lret
jge
push
pop
sahf
stos
cs
adc
sub
into
mov
xor
insb
pop
jmp
pusha
mov
ror
xor
cmp
cli
negl
ljmp
xchg
and
adc
and
gs
sub
lahf
sub
push
inc
cmp
mov
repz
cmp
sahf
shll
push
mov
lock
cmp
movsb
sub
int3
ds
adc
fdiv
int
sbb
ret
in
jmp
sub
outsb
popf
rorb
aaa
leave
sub
and
mov
jecxz
xlat
mov
cmpb
push
mov
inc
pop
sub
xor
or
xor
push
cwtl
sahf
mov
mov
push
dec
add
lahf
fyl2xp1
cmp
insb
or
add
jno
adcl
xchg
or
add
jns
test
pop
rolb
cmp
jbe
stos
incb
cmc
pop
fnstenv
repz
inc
push
xchg
or
loop
mov
pop
cmp
data16
or
ja
jo
sub
add
loop
repz
cmpsb
nop
inc
int
sbb
scas
andb
xchg
aas
int3
xchg
pushw
or
in
pop
loopne
scas
jb
jl
popa
xor
dec
push
das
rcr
sbb
pop
nop
mov
dec
pushl
hlt
cwtl
outsb
push
sti
push
repnz
outsl
xchg
add
inc
cltd
mov
or
mov
stc
in
jno
les
mov
add
or
or
fnstenv
out
jnp
lea
fildl
or
inc
ss
fwait
push
repnz
popf
js
fs
push
mov
xor
loope
shlb
ret
cmc
les
sub
ret
or
movsl
pop
lods
in
pop
and
inc
les
adc
insl
push
and
mov
test
jg
sub
ja
pop
push
pushf
mov
loop
jae
stos
jle
jge
inc
cld
or
rorb
ret
out
adc
fmul
scas
repz
stc
xor
cmp
ds
stc
xchg
ja
mov
loope
fcmovb
inc
enter
cmp
sahf
push
nop
mov
stc
nop
inc
lea
and
mov
lock
push
cmpsl
push
lahf
enter
push
das
add
ss
int3
xchg
call
pusha
or
mov
xchg
lods
sub
ret
scas
pop
jmp
sbb
jne
cltd
and
inc
imul
stc
iret
out
ds
adc
iret
std
add
or
stos
add
jns
push
sub
mov
add
add
mov
or
lcall
and
add
stos
mov
xlat
mov
rcrl
gs
ljmp
cmp
icebp
ret
pop
and
cld
clc
jge
pop
mov
add
test
sti
and
stos
imulb
mov
js
nop
loopne
hlt
in
pop
sahf
cld
push
rcrl
fs
jg
cwtl
sbb
push
inc
outsb
imul
push
sub
outsb
and
movsb
das
push
push
sub
outsl
xchg
loopne
adc
and
and
mov
inc
sub
filds
pusha
pop
scas
movsl
cltd
dec
rcrl
mov
inc
sahf
vmovmskps
cmp
push
pusha
jns
movsl
insl
add
outsl
lret
mov
mov
pop
or
movl
repz
aad
push
dec
jns
push
sub
mov
jg
out
popa
add
push
xchg
data16
stos
rol
lcall
pop
pop
stos
mov
mov
orl
and
add
push
mov
pusha
repz
rcrb
div
pusha
push
test
xchg
popa
mov
stc
inc
xchg
cltd
test
pop
mov
mov
mov
pop
inc
sbb
es
mov
mov
push
fucomip
mov
stos
xor
nop
push
pop
pop
mov
jb
push
dec
cmp
push
jle
call
lds
and
cmp
fisubl
add
aad
add
sti
add
mov
ret
outsl
mov
or
sub
mov
xlat
mov
pop
lcall
jl
jbe
dec
pop
shlb
je
sbb
data16
pop
sbb
lcall
fistl
iret
jp
jg
adcb
enter
sbb
out
add
push
testb
jno
std
xchg
mov
push
gs
repnz
inc
leave
mov
test
fstpt
jae
repz
push
lahf
adc
mov
daa
fstl
leave
cli
das
mov
xor
jp
mov
mov
sub
aas
bound
cmpsb
mov
test
ja
std
adc
repz
fnsave
daa
in
xchg
loope
sarb
mov
dec
or
clc
arpl
fldenv
fadds
pop
dec
jae
sub
sbb
lret
sbb
xor
pop
call
pop
hlt
ds
mov
inc
sbb
iret
or
test
fdivrs
gs
sbb
repz
or
dec
push
mov
std
gs
mov
xchg
cmp
and
add
arpl
in
jle
jae
movsb
cld
cmp
fs
xchg
pop
cmp
jae
hlt
sub
fmuls
xchg
popa
call
pop
inc
daa
dec
in
pop
mov
xchg
sub
inc
or
loopne
aaa
ds
mov
data16
jae
mov
movsb
out
int
dec
adc
ja
fucomp
pop
mov
xchg
mov
xchg
add
fsubl
enter
pop
add
fcmovnb
pop
xchg
negb
pop
or
xchg
mov
stc
insb
imul
xor
iret
xor
ljmp
test
out
sbb
xchg
dec
or
cmp
pop
stc
mov
dec
out
cmp
fnstenv
es
mov
lret
ljmp
je
shl
and
cmp
repz
sbb
outsl
fwait
cmp
aaa
shrl
xor
sub
jge
cmpl
add
add
add
inc
clc
gs
popf
jg
mov
dec
sahf
adc
shrb
add
lods
add
add
shl
adc
xor
jmp
push
push
add
mov
sbb
in
sub
int3
scas
mov
pop
das
push
lret
aad
xor
aad
inc
sbb
and
fsts
mov
in
lds
inc
mov
mov
mov
mov
xchg
sahf
movsl
ret
jl
daa
mov
imul
and
jnp
jg
lahf
je
mov
mov
or
cmp
mov
out
or
xchg
push
push
jmp
jge
mov
pop
data16
mov
int3
xchg
in
repz
pop
lcall
roll
in
je
test
out
mov
sub
add
outsb
scas
pop
dec
pop
jbe
inc
cltd
mov
mov
push
icebp
shlb
adcb
movsl
lods
rorb
hlt
daa
push
mov
sti
xor
fs
mov
or
in
out
or
sub
lret
addl
popa
jge
mov
cmpsl
fildll
outsl
movsl
or
xor
inc
ss
inc
stc
cmp
inc
push
in
pop
fcmovu
repz
stos
dec
pop
pop
rcll
nop
jp
mov
sub
adc
jecxz
or
lods
roll
scas
mov
lret
ret
in
pop
sub
js
clc
and
arpl
push
sub
or
xchg
jecxz
ror
mov
mov
aam
enter
cld
arpl
jno
pop
fsubrs
in
rcr
shlb
jbe
dec
hlt
sub
inc
clc
jp
dec
leave
shlb
sbb
jno
mov
test
in
outsb
jno
lock
ja
push
repnz
test
loop
lds
cmp
in
mov
cmpsl
imul
cmp
xchg
mov
cs
loope
add
mov
loopne
cli
dec
mov
inc
fs
jge
and
leave
mov
mov
dec
mov
fdivr
enter
lcall
and
lods
popf
sbb
cmc
lods
sub
sbb
jmp
xchg
lret
fcompl
or
loop
xchg
and
mov
push
sub
pop
rorw
jne
jg
inc
int3
xchg
push
mov
cs
inc
mov
adc
nop
pop
push
jecxz
push
cltd
cs
pop
lcall
ds
adc
jp,pn
inc
data16
fs
push
and
cltd
out
pop
xlat
or
adc
loopne
push
out
xchg
dec
jg
lods
pop
test
mov
dec
and
stos
sub
sti
imul
fldt
jle
mov
add
mov
mov
adc
sbb
imul
ds
jmp
mov
fimuls
pop
int
pop
cmp
sub
xchg
mov
divl
sub
inc
or
lahf
sarb
loopne
loopne
test
mov
and
jl
xchg
dec
inc
pop
jb
das
lds
icebp
mov
mov
jne
cmpsl
sub
jno
jne
mov
mov
xor
mov
jecxz
xor
leave
cltd
ret
inc
fisubs
xchg
pop
test
or
out
cli
stos
shl
ret
out
inc
mov
notl
mov
and
daa
pop
mov
cmp
rcrl
iret
pop
push
mov
mov
pop
sbbb
dec
imul
sub
add
xorb
nop
bswap
push
pop
test
inc
shrd
and
inc
mov
mov
sub
add
repz
mov
std
loop
push
cmp
outsb
mov
scas
pop
out
jg
xchg
jb
int
xchg
jne
scas
ss
out
sub
adc
arpl
jns
in
decl
dec
mov
stc
in
repnz
and
int
fwait
cmp
lods
sub
push
neg
adcl
ret
outsb
insl
mov
inc
rcll
cmp
in
jns
cmp
sbb
repz
cltd
push
lret
cmp
adc
pop
jbe
mov
es
orb
push
sub
cmp
push
rcll
gs
hlt
rolb
inc
sbb
push
aas
jl
sub
and
popf
jp
shl
push
rorl
jecxz
out
test
xchg
adc
xchg
push
mov
inc
icebp
pop
ss
add
inc
fistps
push
jns
lret
dec
xor
inc
ret
and
addr16
or
push
sbb
or
fisttps
into
add
mov
inc
mov
repnz
inc
andl
fcmovnb
dec
and
jg
rcl
xor
pop
mov
hlt
pop
mov
sarl
stc
and
js
lret
cmpsl
adc
jo
xchg
stos
or
stos
loop
mov
cwtl
xor
addr16
jno
mov
mov
cld
pop
cwtl
out
je
in
mov
test
ret
mov
leave
inc
pop
pushl
jge
jmp
js
push
sahf
jge
fsubs
mov
xchg
jb
jmp
pop
fiaddl
mov
cmp
xchg
out
inc
inc
adc
idivb
hlt
push
dec
lds
stc
fcompl
cmpsb
ficompl
push
cmp
ficomps
loop
pcmpeqd
mov
ret
sub
inc
dec
dec
and
push
iret
sbb
stos
mov
aaa
or
mov
in
mov
das
fwait
sbb
fwait
mov
add
and
add
stos
sub
cmp
fistps
pop
and
jp
movsl
jns
pop
or
and
repz
push
and
test
xchg
roll
jns
cld
sub
out
bts
add
xor
outsl
inc
mov
add
sub
das
mov
push
int3
mov
lcall
push
and
sbb
mov
mov
sti
pop
add
incl
shl
ljmp
mov
jl
mov
test
movsb
or
jne
mull
add
loop
xlat
adc
arpl
roll
adc
mov
lcall
jbe
jbe
sbb
popf
scas
mov
jne
andl
push
lods
scas
ss
sahf
dec
lret
bound
sti
mov
mov
xchg
add
neg
movq
fcoms
outsb
push
sbb
push
xor
fwait
test
scas
push
imul
stos
mov
fdivr
scas
or
shlb
cs
mov
outsl
sbb
lock
rcrb
ret
push
pop
inc
inc
ss
xchg
add
adc
minps
and
dec
mov
sub
ret
mov
js
addr16
dec
cmc
lret
jns
mov
xor
mov
sarl
push
jecxz
nop
rcrb
dec
shr
lods
arpl
shrl
add
inc
ret
cmpl
jp
and
adcl
ficomps
sbb
sub
add
popf
mov
fisttpl
lcall
sub
mov
jp
mov
inc
fcom
outsl
and
mov
cmpsl
lret
mov
shl
and
mov
inc
xor
insb
adc
lods
mov
dec
push
fsts
enter
es
mov
movsb
inc
iret
inc
not
adc
imul
inc
or
outsb
jae
jge
cmpsb
mov
sub
ljmp
sbb
or
imul
out
out
inc
out
icebp
and
aaa
test
rorl
out
or
ljmp
push
jno
sbb
mov
imul
xor
popf
xor
jnp
and
sbb
lahf
add
or
fidivrl
xchg
fs
mov
fnstsw
lods
add
mov
and
lock
rcr
mov
jecxz
xor
xor
fcomi
in
fs
sub
pop
ljmp
or
add
mov
cwtl
inc
pop
mov
cs
xchg
push
xchg
or
sbb
mov
pop
shrl
ret
test
js
sbb
mov
mov
dec
loope
inc
repnz
pop
test
les
dec
and
and
fmull
rcrb
sbb
push
mov
mov
decl
addr16
ret
repz
jge
adc
push
xlat
dec
sbb
lds
pop
fisubs
cmp
std
push
sti
push
sbb
shlw
aam
xchg
mov
mov
dec
jno
xlat
cs
sbb
pop
mov
adc
sbb
test
je
lock
mov
add
aas
das
arpl
mov
dec
cs
add
fs
and
je
pop
push
pop
xchg
fs
xor
and
sbb
adc
cmc
mov
cmp
lds
fnstsw
arpl
in
fidivrs
iret
hlt
xchg
pop
push
loope
and
movsb
sbb
xchg
sbb
jnp
outsl
addl
push
fldl
adc
dec
andl
ret
push
push
cld
mov
popf
cmpsb
mov
sti
push
fwait
rcr
xor
in
shlb
dec
mov
sbb
inc
jecxz
les
cmc
xor
xchg
sbb
std
dec
adc
mov
jns
lret
xchg
dec
xchg
push
push
dec
insb
add
push
lcall
push
mov
in
imul
add
mov
and
rorb
inc
sbb
and
arpl
mov
sub
xor
mov
add
dec
insl
cmp
sub
mov
jecxz
leave
jp
into
ljmp
cmpsl
imul
cld
pop
gs
pushf
popf
adc
movsl
ss
mov
adc
mov
sub
leave
adcb
mov
filds
pop
mov
and
in
fwait
xchg
popf
jo
out
mov
mov
push
jb
sbb
repz
xchg
mov
mov
rorb
cld
mov
repnz
lods
je
mov
dec
ja
into
es
out
mov
bound
push
dec
inc
mov
out
data16
lods
cld
mov
hlt
xor
insl
xor
add
mov
repnz
pop
push
out
inc
inc
cld
or
add
pop
rcrb
mov
pop
jmp
je
push
jmp
xor
xchg
push
rcrl
les
jle
ret
dec
inc
or
shll
push
cmc
adc
pusha
xchg
inc
das
les
dec
lret
aam
addr16
test
push
inc
leave
scas
dec
push
push
fisubs
adc
pop
icebp
stc
mov
mov
movsl
ljmp
inc
mov
dec
imul
inc
and
pop
imul
movsb
int3
push
addr16
scas
sub
faddl
push
mov
add
pop
dec
shrb
int
mov
int
cmpsb
jmp
out
jle
xchg
test
sti
cmpsl
movsl
lret
lods
movd
jb
mov
test
frstor
cltd
ja
adc
xchg
add
push
push
adc
loope
dec
ja
fsubl
xchg
mov
pop
rcrb
xchg
loope
loope
sahf
insl
mov
pop
xchg
aaa
mov
shl
addr16
inc
clc
mov
cmc
adc
fistps
cwtl
and
push
cltd
xchg
jecxz
lcall
sub
lea
sub
stos
insl
clc
mov
lods
mov
xor
pusha
out
mov
lods
mov
aam
jmp
add
dec
ja
and
popa
pusha
int3
pop
lock
xlat
adc
cmpsb
and
xchg
push
test
adc
data16
stos
ret
arpl
sahf
dec
xor
arpl
jl
pop
mov
pop
xchg
pop
push
mov
lds
sbb
push
cmp
mov
lcall
mov
lahf
sub
jne
xchg
jne
imull
add
stos
sbb
outsl
mov
dec
inc
fcomps
ss
loopne
xchg
cmpb
pop
lds
inc
int3
lret
jge
jecxz
push
mov
xor
mov
inc
cs
dec
fcoms
mov
mov
xor
add
mov
mov
mov
mov
and
push
pop
xor
adc
sub
jbe
imul
push
mov
jno
inc
jg
mov
into
mov
bnd
adc
out
xor
sarb
sub
orb
mov
pop
or
mov
and
dec
sub
and
outsl
sub
ret
out
and
cli
jle
dec
push
enter
or
stos
out
and
ss
or
adc
add
sbb
cmpsl
subl
mov
pop
xchg
jo
push
xchg
cmp
movsb
jb
add
jecxz
fstsw
add
fidivrl
stc
mov
test
gs
out
or
or
ljmp
or
mov
push
lea
xchg
inc
push
js
test
aad
repnz
data16
jns
dec
jmp
adc
notl
sub
mov
ljmp
test
push
and
mov
and
dec
cwtl
mov
in
mulb
pop
mov
pusha
cltd
mov
ss
jmp
or
and
pop
loope
push
mov
scas
arpl
mov
ds
outsl
dec
stc
pop
rcr
jmp
sbb
add
xor
add
neg
jmp
cli
and
sub
sbb
add
lods
add
add
cs
mov
cmc
notl
xor
cmpsb
in
fld
sbb
sub
pop
xor
mov
xlat
and
aad
stos
inc
jmp
dec
xchg
cmp
hlt
mov
test
scas
mov
pop
lds
cld
insl
push
or
int3
or
jo
call
in
sbb
push
hlt
xchg
dec
inc
fwait
je
loope
inc
dec
cmp
push
add
jmp
js
rorb
jg
mov
lods
adc
inc
sbb
pop
adc
mov
lret
jns
xchg
cltd
cld
adc
cwtl
decb
xlat
out
or
pop
fisubs
adc
in
cmc
and
dec
xchg
les
xor
out
push
sub
xchg
and
lods
les
cmpsb
shrb
xor
imul
testl
aaa
das
dec
jp
negl
mov
std
dec
lea
fstl
jge
repz
lret
in
or
push
sbb
push
mov
adc
adc
icebp
cmpsl
pop
rcr
jecxz
and
xchg
aaa
mov
fwait
aaa
or
mov
xlat
xlat
push
add
mov
mov
call
stos
and
xchg
inc
mov
push
push
jl
sub
ss
insb
push
add
cmp
pxor
fstps
jge
scas
rorl
sbb
mov
mov
in
ficoml
jg
and
stos
jb
xchg
mov
sbbb
testl
pop
rclb
into
insl
cmpsb
mov
nop
xadd
stos
jno
sub
or
jge
icebp
push
in
cmp
ret
lcall
popa
push
and
ja
cmp
loop,pt
call
pop
push
jnp
lock
jmp
pop
mov
add
xlat
lods
test
inc
pop
xchg
mov
mov
lcall
jmp
xchg
push
and
test
pushf
cld
sbb
push
cmp
or
lock
in
sbb
dec
in
pop
cli
loop
xchg
movsl
or
insl
packsswb
lods
fwait
xor
das
sub
hlt
js
add
push
stos
orb
jp
xor
cmp
test
add
stos
inc
js
mov
bound
mov
mov
dec
cmp
mov
lcall
dec
adc
push
lods
ret
mov
fidivrl
enter
test
and
fldl
xchg
enter
push
push
popf
push
push
lock
sbb
fsubs
das
loopne
cmp
cltd
mov
lret
neg
pop
addr16
xchg
enter
jbe
or
or
pop
push
inc
push
cmp
fs
repnz
out
popf
mov
imul
outsb
add
and
mov
mov
call
inc
ret
mov
fidivl
xlat
cmp
stos
scas
cmp
addr16
lds
pop
sub
sbb
rcll
or
adc
mov
jecxz
fnstsw
in
add
add
inc
sbb
in
sub
and
pop
shrl
push
inc
ljmp
enter
nop
sbb
test
fisubrl
jge
push
ljmp
jg
sbb
repnz
shrb
hlt
fsubl
divl
arpl
lds
loope
bound
add
add
mov
and
jmp
add
lahf
scas
lds
add
lods
add
add
inc
int3
mov
push
pop
fscale
mov
inc
mov
adc
arpl
fcomi
jns
aas
cmp
xchg
adc
adc
fildll
xor
mov
mov
jl
mov
lret
jp
mov
daa
sti
jle
xchg
xchg
pusha
mov
scas
and
in
push
into
adc
pop
mov
enter
jae
pop
cmpsb
mov
lret
mov
insl
es
xchg
orl
xor
int
mov
or
mov
ljmp
push
aam
nop
fwait
orb
mov
xorb
and
sbb
adcb
adc
ficompl
sbb
mov
push
stc
dec
cli
clc
inc
jno
sub
and
mov
cmp
jns
daa
movsl
leave
xchg
cmpsl
pop
cli
mov
mov
dec
jle
xor
aad
push
mov
je
clc
insb
push
sbb
adc
incl
roll
fisubrl
inc
pushf
fstps
pushf
sti
test
pop
or
fcmove
or
mov
scas
inc
loop
clc
rcr
rep
insl
xchg
pop
test
sbb
popa
or
inc
cld
lcall
push
in
sbb
mov
mov
and
mov
inc
lahf
jb
dec
scas
leave
in
stos
mov
enter
mov
mov
adc
mov
ss
stos
loop
or
push
jmp
popa
jge
push
sub
mov
adc
adc
aaa
dec
imul
sahf
test
xor
je
std
test
repz
bound
add
or
sbb
test
pop
out
xchg
adc
flds
add
repz
xor
or
xor
inc
or
mov
stos
dec
add
dec
sub
cmp
enter
dec
add
aam
fs
sub
pop
xor
lcall
rclb
adc
arpl
or
sub
xchg
in
xorl
enter
aaa
pop
test
int
mov
mov
push
xchg
mov
xchg
adc
les
leave
jae
fidivl
xor
les
xchg
sbb
daa
aam
pop
ds
sbb
add
inc
cmp
out
jmp
xor
out
or
movsl
cmp
mov
push
fdivl
push
movsb
dec
fdivl
jle
aas
push
fwait
jbe
or
clc
pusha
pop
xor
clc
cmp
dec
jbe
lods
sti
dec
sbb
movsb
push
pusha
lcall
push
ret
les
loope
pop
push
mov
cmp
dec
filds
cmp
jno
pop
fwait
jg
lea
xor
ffreep
jbe
out
lret
pusha
cmp
push
mov
jb
jecxz
fnstsw
jg
cmp
fsubr
hlt
bound
jns
mov
out
outsb
pop
pop
push
ljmp
push
out
cmc
pop
out
fs
or
sub
mov
pop
push
outsb
pop
cltd
lods
jge
cli
pop
cltd
push
pop
jo
ret
mov
scas
push
imul
sbb
sub
mov
mov
pop
adc
imulb
enter
pop
dec
in
xchg
addb
movsl
adcb
adc
cmp
cmp
aas
xchg
repnz
add
add
test
sbb
dec
fisubl
or
cmp
add
cmp
add
cvtdq2ps
inc
cmpsl
lods
lret
daa
sub
add
stos
push
mov
xchg
xor
jo
xor
fsubrs
mov
push
cs
adc
mov
pop
les
add
push
add
inc
insb
dec
js
cmc
rolb
pop
adc
push
lea
test
sbb
sub
stc
sbb
mov
stc
xchg
shrl
gs
in
loope
repz
les
jp
cmp
sbb
add
mov
jmp
ljmp
fyl2x
inc
mov
test
stc
dec
add
dec
pop
test
roll
xor
inc
ror
add
test
dec
or
sbb
cltd
lock
fcmovnu
ret
sar
adc
and
push
test
xchg
add
jle
scas
andl
and
sub
dec
adcl
xor
jno
xchg
mov
cs
clc
jns
or
jecxz
jno
jge
sbb
adc
cld
jmp
mov
ss
push
xorw
in
jbe
mov
out
xor
ret
enter
lods
lea
out
fcompl
shlb
sbb
stos
sub
inc
pop
sarb
inc
inc
shll
fsubr
aas
shlb
jge
or
dec
dec
adc
jecxz
clc
xor
mov
lret
add
insl
mov
movsb
popf
cltd
lds
cmp
int
adc
and
clc
cmp
cmc
sbb
cltd
mov
push
push
stc
push
cmpsb
push
ljmp
call
lds
xchg
dec
mov
add
ficoms
int
ja
movsl
jmp
repnz
jb
cltd
shlb
lret
xchg
inc
aaa
sarl
aaa
and
stos
adc
loop
aam
dec
jge
xlat
cmp
push
pop
mov
sub
ss
repnz
mov
mov
dec
aam
jae
dec
xchg
sar
bswap
mov
xchg
xchg
repz
hlt
enter
es
test
sbb
clc
cmp
dec
push
cltd
hlt
pop
add
mov
xor
push
push
aas
dec
push
mov
in
cs
sbb
jbe
xchg
mov
insb
subl
push
enter
pop
movsl
sub
pop
fsts
fisubrs
mov
mov
mov
and
inc
fcomps
pushw
sarb
sbb
pop
dec
pop
bound
out
cmp
movsl
in
sub
or
mov
out
fcoms
mov
aam
out
mov
xor
ja
xchg
pop
lock
mov
xor
lret
std
and
insb
dec
jge
sub
jl
cmp
sub
fcoml
in
cld
jl
call
jge
sub
xor
fcompl
loopne
xchg
jbe
ljmp
and
jg
and
repnz
jmp
insl
jo
or
inc
adc
imul
xchg
cmpb
cmp
lods
dec
pop
sbb
xor
movsb
daa
and
lods
inc
subl
xchg
jno
daa
bound
inc
adc
in
loopne
xor
ds
mov
pop
mul
ljmp
inc
cmp
cmp
mov
mov
les
add
mov
insl
add
add
add
out
inc
dec
add
ljmp
add
movl
or
pushf
stc
dec
sub
and
out
push
pop
mov
aaa
or
add
fs
xchg
mov
add
jp
push
iret
sahf
out
xchg
mov
pop
mov
pop
xor
not
stos
int3
cmpsl
dec
sub
xor
insb
and
mov
inc
loopne
adc
fcoms
xchg
jl
fstpl
xchg
dec
imul
jmp
fstl
jne
mov
int3
xor
popf
je
aad
cmpsl
das
cmp
mov
jl
stc
mov
test
dec
icebp
add
xchg
cmc
inc
sbb
ret
andb
cmp
clc
sahf
out
dec
cwtl
xor
outsl
pop
inc
add
pop
pop
fsubr
xor
das
cmp
push
mov
jl
repnz
xchg
mov
push
aad
loopne
mov
push
push
addl
inc
cmp
push
mov
ret
xchg
movb
loop
ret
or
lret
rep
clc
lahf
jp
popa
lock
lahf
xchg
xor
shll
cmpsb
clc
sbb
and
pop
xchg
jmp
cmpb
icebp
and
jmp
xchg
push
mov
xor
adc
je
in
aaa
scas
enter
leave
or
scas
add
dec
jecxz
les
push
movsb
sahf
and
xor
and
and
rclb
sbb
aam
xor
imul
bound
cmp
mov
sbb
adc
sti
movsb
mov
loopne
adc
rcl
es
inc
loope
mov
inc
cmpsb
cld
les
adc
inc
es
fnstsw
loope
mov
sbb
lcall
inc
jne
mov
or
xor
sar
pop
mov
push
jmp
mov
sti
and
cmp
xor
fcoml
push
out
not
fwait
xchg
arpl
cli
xchg
pop
fstps
outsl
sbb
push
aaa
in
cmc
jnp
lret
faddl
sub
popa
adc
outsb
fnstenv
mov
enter
shrb
scas
mov
jp
inc
pusha
repz
aaa
mov
insl
pop
or
scas
pop
jg
call
sub
mov
out
cwtl
dec
adc
data16
jge
ja
fimull
inc
cmp
dec
int
fnstcw
dec
dec
cltd
rorb
or
xchg
cli
mov
mov
push
dec
lcall
pop
repz
stos
popf
sub
dec
mov
and
mov
adc
jo
pop
xor
cmp
into
xor
push
movsl
hlt
int
je
xchg
mov
lock
sahf
fstps
divb
outsl
cmp
iret
cmp
into
fwait
sti
enter
roll
popf
mov
adc
sbb
push
inc
sub
inc
push
enter
sbb
loopne
and
pop
daa
stc
mov
jmp
mov
and
movsl
jp
test
pop
int
into
into
cmp
rorb
xchg
jbe
adc
inc
fstpt
sub
lret
mov
pop
cmp
jbe
inc
push
or
dec
stc
mov
jns
cmc
pop
inc
mov
xchg
push
cmpsb
sarl
adc
imul
pop
pop
call
inc
xor
add
xchg
inc
pop
into
push
orb
or
loopne
mov
in
pop
dec
cmp
fdivs
mov
nop
leave
or
add
or
dec
inc
push
leave
inc
add
lods
add
add
pop
loopne
test
jne
cmp
jmp
mov
adc
dec
mov
ficomps
sahf
xchg
push
and
jbe
gs
xchg
jge
lcall
or
adcb
lea
mov
aaa
repnz
mov
mov
ficompl
hlt
sub
enter
fildl
das
outsb
test
inc
mov
fidivrs
addl
xchg
sub
out
ret
insb
outsl
push
test
mov
idivb
xchg
sbb
fabs
push
aam
icebp
cmp
incl
jns
sarb
mov
mov
test
xchg
cmp
nop
orl
jne
outsl
sub
cmp
and
adc
xor
repnz
xchg
ja
pusha
cld
push
or
shrb
cli
bound
mov
stc
test
mov
sub
ficoms
out
jbe
pop
int
dec
mov
inc
xchg
and
mov
sub
aad
rcl
fadds
add
or
popf
push
sbb
adcb
cltd
mov
seto
cli
add
xchg
mov
es
xor
inc
xor
pop
jge
in
lret
addl
push
test
test
shrl
ss
add
dec
out
movb
sti
out
gs
popl
xchg
cld
into
jb
xor
xor
loopne
sbb
adc
clc
mov
rcrl
sub
out
enter
lea
pushl
insb
hlt
retw
std
in
pushf
ficomps
cmpsl
sti
xchg
inc
mov
je
into
inc
mov
js
mov
lea
fcomps
cmpsb
insb
pop
jecxz
shl
icebp
pop
leave
sahf
mov
cmp
icebp
in
push
or
rolb
and
or
inc
jge
sub
push
leave
movsl
out
jae
xchg
mov
je
test
push
popa
cmc
cwtl
mov
cmp
push
fiadds
inc
repz
dec
sbb
mov
popa
sub
add
insl
in
add
lods
daa
fbstp
icebp
dec
arpl
cs
pop
inc
adc
lods
push
sbb
ret
cmpsb
fdivs
jbe
mov
outsl
sub
cmc
pop
ljmp
adc
sbbb
das
cs
or
cmp
fdivrl
mov
push
ret
sbb
stc
ss
sub
loope
pop
and
mov
inc
jp
loopne
int
rorl
push
xchg
pop
flds
cmp
xchg
and
jo
repz
sub
push
jecxz
es
ljmp
mov
cmpl
js
cltd
iret
data16
add
xor
lret
jle
rorl
sub
ss
pop
roll
cltd
sbb
repnz
icebp
orl
aam
out
sub
cmp
mov
fwait
int
jecxz
jae
mov
into
pusha
je
stos
fcoml
frstor
rcrl
cmp
rolb
adc
lea
xlat
aaa
dec
icebp
xchg
inc
mov
out
adc
xchg
fldl
std
std
pushf
cltd
cmpsb
lcall
sbbl
je
cmp
cmp
cmp
add
pop
cltd
pop
push
jp
pusha
addl
add
cltd
ja
out
out
cltd
ja
daa
xor
jne
add
lods
add
add
into
pop
cli
lahf
icebp
mov
xor
ffreep
jnp
testb
frstor
std
rorb
cmp
cmc
andb
jmp
push
mov
xchg
pop
cmpl
inc
mov
cld
push
cmp
mov
in
dec
sub
mov
mov
aam
test
adc
inc
sub
addl
sub
nop
test
insl
jne
aaa
sbb
add
xor
scas
and
mov
iret
rcr
rdtsc
outsb
movsb
test
dec
push
sarb
sub
cld
shlb
jbe
lahf
fstps
xchg
add
repnz
addb
int
sti
pop
dec
pop
mov
xor
pusha
dec
sbb
xchg
shlb
xchg
int3
sub
mov
leave
pop
and
jnp
fs
jecxz
jne
mov
jp
scas
pushf
fwait
xchg
mov
into
mov
jge
mov
sub
out
add
mov
add
adc
insl
fs
push
push
mov
or
sub
sbb
std
xorb
jo
xor
inc
xchg
add
repz
cmpl
push
xor
cltd
xchg
jg
mov
add
fs
mov
mov
xchg
add
add
imul
les
mov
push
adc
mov
lock
roll
xchg
sbb
jecxz
loop
add
inc
or
cltd
pop
inc
and
mov
lahf
das
cmc
adc
fistps
pop
dec
movsb
fdivl
and
lods
mov
add
cltd
sub
jns
divb
xchg
xchg
xor
cmp
xchg
mov
in
aas
cs
divl
cmp
inc
xchg
pop
cltd
ljmp
scas
jge
pop
scas
sub
fcmovnbe
xchg
jnp
bound
outsl
dec
sub
add
push
jmp
push
mov
repz
lock
mov
loope
mov
test
test
push
out
sub
and
pusha
inc
mov
push
imul
insb
xchg
out
sub
cmp
cmp
insb
les
jle
push
nop
gs
sbbl
mov
gs
rolb
mov
adc
pop
lock
movsb
jge
pushf
outsl
mov
xchg
lods
add
enter
fistl
xor
fs
dec
jne
jl
mov
js
enter
lahf
clc
or
divl
xchg
mov
shlb
lret
push
shll
sti
sbb
and
dec
jns
in
pop
bound
inc
mov
fsubrl
hlt
pop
out
pushf
aaa
mov
inc
push
das
ret
dec
cld
cmp
and
cmp
sarl
mov
xchg
xor
popf
jge
in
push
lea
cmp
lock
jmp
icebp
lcall
and
call
out
and
push
aad
add
xlat
dec
rolb
dec
rcrl
stos
adc
cmpsb
imul
or
out
push
stos
cmp
fcomps
sarl
jo
test
mov
icebp
cli
and
add
mov
cwtl
and
and
sbb
enter
add
xchg
inc
mov
loop
aad
loope
sbb
lods
add
add
adc
test
js
inc
daa
je
push
push
mov
inc
or
fcmovb
cmpl
push
inc
testl
sti
or
adc
cltd
lahf
cmp
mov
sbb
das
mov
ljmp
mov
and
fstps
and
push
lea
xlat
shl
sbb
lods
mov
cmc
cmp
inc
jo
and
dec
nop
repnz
pop
xor
scas
cmpsb
ss
loop
aas
cmp
mov
cmpsl
aas
nop
push
adc
sbb
jge
mov
les
js
mov
dec
mov
hlt
sti
jbe
pop
gs
je
xchg
adc
aaa
sti
das
ret
and
jns
cmpsl
and
repnz
outsl
int
rclb
loope
adc
aam
mov
out
mov
xchg
xor
popa
lahf
loopne
test
popf
sbb
add
xchg
lock
xchg
push
adc
fcomip
dec
jg
adc
or
xchg
int3
push
movsl
aas
mov
xchg
jne
ficomps
mov
call
mov
cli
std
mov
stos
mov
lcall
jmp
in
push
jae
mov
inc
mov
ss
fcompl
outsb
xchg
xor
adc
popf
mov
test
aad
movb
jge
test
inc
xchg
popf
lds
setno
mov
mov
loope
orl
ja
push
movsb
data16
in
loopne
imul
mov
rcrb
mov
adc
in
dec
cmp
xchg
adc
push
cmpsb
and
fdivrs
sub
mov
xor
stc
aas
fwait
adc
inc
mov
or
loopw
sub
stos
andb
or
dec
jne
je
mov
pop
xchg
pop
jo
mov
ds
mov
push
sbb
jne
call
sti
xchg
add
arpl
inc
cwtl
bnd
dec
jno
sub
bound
leave
adc
adc
push
mov
push
cmp
adc
and
push
pusha
push
mov
enter
push
add
divl
lret
test
sti
jp
push
jge
sub
pop
push
xor
or
dec
rol
scas
or
or
jle
or
mov
xorb
incb
test
clc
out
mov
inc
sbb
rcl
sbb
aaa
mov
inc
inc
cmp
in
imul
aaa
mov
daa
sub
push
insb
jno
mov
in
push
and
ss
cwtl
jns
btsl
stc
push
ja
pop
dec
and
popf
loopne
inc
xchg
enter
ds
dec
xor
fidivrs
dec
pop
and
xchg
roll
popa
or
mov
fwait
popa
adc
fistpl
adc
dec
lcall
jp
shrl
xor
dec
popf
dec
lahf
xor
insb
push
call
xor
adc
pop
cmp
sbb
stos
push
leave
test
in
mov
jp
lds
mov
adc
ret
orl
les
mov
pushf
xchg
sbb
inc
icebp
xchg
cmc
data16
xchg
mov
test
addr16
jne
xchg
stos
jg
jo
fistl
cmp
cs
popa
mov
les
jp
jae
lret
fcmovu
mov
mov
das
hlt
jmp
push
push
movsl
shll
cmpsb
es
lret
enter
lcall
jg
push
jecxz
inc
and
movsb
int
add
lods
add
add
mov
mov
sub
add
sbb
mov
mov
mov
push
aas
jnp
cld
out
aad
add
push
out
dec
rorl
push
dec
adc
icebp
leave
cmp
mull
stos
movsb
pop
std
dec
push
mov
add
jl
clc
lds
pop
in
xor
push
sbb
sub
inc
psubsw
fs
jae
movsl
sbb
sbb
call
inc
outsb
aas
fisubrs
imul
mov
iret
lds
rcr
xor
shlb
cmp
fidivrs
jecxz
inc
insb
orps
and
jmp
ret
xlat
mov
cmpsl
shrl
push
icebp
arpl
mov
popa
pop
hlt
cli
jne
push
jne
scas
push
int
cmpsb
jnp
or
fcompl
fmulp
jb
push
lods
and
stc
or
cld
sub
xchg
cmp
adc
test
inc
push
sbb
iret
inc
xchg
ret
orb
xchg
nop
lods
push
pop
jne
sub
push
or
xor
sub
in
lret
fcoml
mov
add
sahf
test
mov
xor
mov
jne
cmp
jecxz
adc
push
sub
loop
inc
add
mov
lods
or
cli
rcrl
push
nop
sbb
sub
inc
and
fs
sbb
sbbl
and
fsubrl
nop
lret
imul
push
ret
aad
dec
pop
inc
adc
cltd
scas
jmp
cmp
lret
test
fwait
jo
or
push
movsl
mov
inc
or
lcall
mov
cmp
in
mov
mov
leave
dec
xlat
in
scas
xchg
dec
popf
addb
lds
adc
mov
cltd
sbb
inc
out
pop
xor
inc
popa
out
push
lods
jno
mov
cmp
inc
or
add
fistps
xchg
add
xor
xchg
sub
shlb
inc
mov
rdmsr
xchg
sub
dec
ljmp
fdiv
sbbb
stc
js
mov
jb
xchg
scas
mov
pushf
inc
sbb
ljmp
test
daa
mov
sub
cmp
or
push
pop
jno
fidivrl
pop
and
inc
cld
xchg
sahf
jne
push
outsb
data16
lahf
cmp
out
in
xor
cmp
mov
mov
cltd
cmp
push
stc
dec
jl
sahf
shrb
or
mov
divl
jle
mov
mov
stos
xchg
xchg
mov
insb
cmp
sub
sbb
mov
cltd
cltd
cld
shlb
in
lret
mov
and
jg
sub
outsl
cmp
mov
cli
mov
bound
mull
add
mov
stos
pop
movsb
inc
outsb
push
lea
mov
pop
inc
pop
jb
or
addr16
fcomps
int
sbb
cmp
mov
repnz
or
xchg
dec
jbe
pop
pop
inc
jae
sbb
mov
pop
pop
xor
ret
stc
loop
lea
icebp
push
outsb
xchg
insb
lea
mov
in
inc
sub
mov
jmp
mov
mov
inc
in
lock
add
cld
xlat
dec
call
adc
dec
sbb
push
add
lods
add
add
cli
jle
adc
dec
shrl
push
insb
xor
aas
dec
add
fists
pop
out
cld
pop
adc
test
lret
push
cmp
imul
cltd
sbb
test
repnz
dec
or
scas
test
fstps
mov
cmp
fsubr
sbb
cli
mov
and
repz
into
and
pop
and
imul
mov
cmc
aad
ja
xor
int3
cmp
mov
dec
je
js
sarb
push
cmp
shl
mov
daa
mov
das
leave
pop
lret
adc
adc
scas
fcompl
inc
or
data16
fidivrs
and
add
testb
jo
stc
xchg
sub
mov
int3
mov
inc
or
test
bound
inc
and
lods
nop
adc
adc
decb
insl
xchg
out
push
fld
mov
lods
mov
mov
jg
loope
rcll
xor
xor
sarl
lods
xor
cmp
mov
ret
loope
call
xchg
repnz
lea
mov
mov
fstl
stos
stc
add
xchg
imul
bound
mov
inc
pushf
mov
add
repz
imul
inc
filds
jne
dec
ljmp
add
cwtl
dec
fiadds
shl
sub
push
mov
add
testl
int3
das
mov
sub
or
int
ss
push
mov
add
out
sbb
mov
cmp
std
cmp
int
adc
mov
pop
mov
test
inc
imul
test
out
cld
lahf
and
les
daa
push
fwait
int3
adc
aad
xor
cmp
add
lcall
xor
dec
lods
iret
lret
dec
add
les
dec
jno
out
rcrb
xor
jne
jnp
movsl
cmp
dec
movsb
or
inc
lea
push
or
in
rolb
data16
in
jg
shr
and
outsb
sti
lock
insl
decb
cmp
and
pop
dec
aaa
sbb
je
lock
mov
push
mov
mov
lods
and
mov
xor
sbb
sbb
in
aad
xorb
mov
sub
xchg
enter
pop
push
gs
int
orb
inc
sub
scas
jle
inc
in
inc
jp
sub
in
mov
jbe
stos
jb
lds
jbe
mov
adc
shlb
mov
cld
mov
pop
pop
pop
imul
inc
mov
jl
test
cld
fisubl
jne
lahf
ret
pop
sbb
lods
xor
sub
dec
imulb
pop
xchg
jnp
stos
xorl
push
or
popa
cmc
std
push
jnp
cmp
jnp
pop
or
push
pop
shr
mov
into
aad
mov
mov
test
xchg
sbb
lret
jmp
into
jns
inc
jno
jae
std
test
push
cs
and
insl
jmp
fcmovb
shll
and
ja
outsl
wrmsr
jmp
cmp
push
inc
inc
cli
jecxz
lods
pop
in
imul
dec
cmp
sbb
mov
inc
out
jnp
mov
cmp
out
and
add
add
mov
xor
pop
cltd
pushf
adcb
push
and
fbstp
aad
inc
dec
push
sub
mov
sti
lahf
movsl
inc
js
mov
out
lods
adc
jo
arpl
or
pusha
lods
xchg
sub
sbb
xorb
gs
jb
imul
inc
push
push
xor
xchg
in
pop
dec
cmpsl
cltd
xor
aas
fnstcw
icebp
or
lret
test
xor
push
aaa
mov
sub
lods
cmp
into
sub
ret
sbb
inc
hlt
mov
cmpsl
mov
mov
mov
pop
mov
fisttps
jo
adcl
push
push
lock
stc
sub
pushf
jb
mov
loopne
and
fadds
xor
xor
adc
xchg
stos
std
jp
xor
inc
xchg
popl
scas
pusha
adc
jb
imul
push
sub
xchg
xchg
mov
stos
or
popa
fs
pop
pop
cld
mov
dec
fisubl
hlt
dec
mov
mov
loopne
insb
stc
gs
cmp
xchg
pushf
mov
inc
ss
lods
cmp
add
adcl
fmull
adc
mov
pop
sub
bnd
xchg
aam
xchg
jge
mov
jb
sub
cs
arpl
push
insl
call
aam
push
add
sub
cmp
popf
dec
arpl
loopne
cli
cmp
insl
into
jp
jecxz
inc
test
lock
inc
or
bound
in
push
push
mov
mov
mov
scas
cmp
test
or
pop
and
pushf
mov
pop
ficomps
hlt
sub
jno
mov
mov
aaa
cmp
jg
xor
inc
or
push
mov
data16
rcr
cmp
mulb
rorl
std
iret
inc
pop
jp
sub
test
stos
jbe
sub
stos
xor
dec
leave
int3
push
mov
arpl
call
adc
mov
fsubs
and
push
sbb
int
add
lods
lods
push
pop
rorb
push
and
xor
sub
mov
insl
sbb
pop
dec
addb
faddl
xor
pop
jl
inc
dec
xlat
cmc
mov
push
shrb
loope
cwtl
add
daa
dec
xor
out
les
mov
es
add
cmp
imul
shlb
jp
fwait
arpl
mov
xchg
jnp
addr16
xchg
test
mov
es
sahf
lods
jnp
pushf
mov
sbb
mov
fsub
sti
or
push
push
and
inc
or
arpl
adcb
pop
lret
mov
rcrl
call
jo
cmpsl
mov
imul
lret
inc
dec
out
push
insb
cmp
sub
push
lock
daa
inc
sub
dec
movsl
cld
jg
xchg
into
adc
push
jl
xchg
scas
dec
cwtl
aam
cli
insb
cltd
lea
out
push
xchg
fsts
dec
cmp
sbb
and
imul
push
sbb
mov
xchg
sub
cmp
mov
lcall
movsb
and
mov
movl
push
and
data16
pop
pop
daa
jg
test
test
loop
add
xor
mov
lea
add
add
jg
jns
pop
xorb
insl
rcrl
add
pusha
int3
insl
enter
lar
jnp
test
in
inc
dec
dec
movl
mov
test
push
data16
hlt
or
test
jecxz
push
lret
and
xchg
movsb
dec
fsts
pusha
pop
lock
frstor
inc
mov
cmp
fdivrs
and
aad
insb
fs
shll
lret
fstpl
and
inc
mov
add
jo
add
inc
ficoml
lock
dec
xor
aas
push
sbbb
arpl
cmpsl
dec
cmp
push
push
and
push
xchg
insl
cmp
sub
cmp
xor
and
std
sub
xor
repnz
movsl
push
lret
icebp
jbe
lock
lds
sbb
mov
mov
push
push
orb
inc
cmpb
sub
adc
mov
mov
jg
adc
imul
inc
lret
ret
call
mov
xor
rcrl
dec
jmp
jo
movsb
cs
arpl
and
in
mov
inc
cmp
lds
jl
popf
add
lret
xor
xlat
jnp
mov
mov
pop
addl
mov
adc
lock
push
or
jno
pop
xchg
nop
lret
jle
sbb
xchg
mov
lret
dec
add
inc
call
iret
push
out
adc
cmpsb
in
rorl
dec
dec
pop
pushf
lds
mov
jbe
lcall
int
or
and
jo
and
aas
nop
fldz
in
rorl
push
dec
lock
sbb
les
xor
insb
pop
sbb
int
xor
lret
lea
mov
jl
gs
mull
push
mov
and
jge
mov
jmp
dec
sbb
push
cli
enter
xlat
aam
shrl
mov
jns
dec
mov
aas
xchg
inc
cmpsb
jge
cltd
inc
jnp
mov
jne
insl
aam
cmp
paddb
xchg
fprem
lods
xor
andl
jbe
push
je
mov
mov
jnp
testl
sbb
shll
mov
adc
lret
mov
lea
lock
jbe
and
mov
jns
rcll
into
ja
xchg
lds
inc
cmp
jmp
or
jle
mov
or
pop
movsl
and
xchg
pop
lret
test
cwtl
dec
int
mov
daa
xor
or
mov
mov
and
andb
push
scas
jge
xor
fdivr
popa
cmpsl
inc
add
das
and
dec
dec
hlt
movsb
cmc
cwtl
into
cli
dec
lcall
pop
sbb
gs
daa
hlt
pop
pop
pop
imul
stos
adc
fs
fildl
push
or
addr16
sbb
outsl
push
rcl
sub
rclb
ja
mov
std
adcl
mov
mov
jge
das
xchg
fildll
ficomps
jecxz
adc
xchg
adc
sub
or
jno
cltd
rorb
outsb
idivl
notl
pop
fisttps
ljmp
add
jns
orb
push
dec
icebp
std
cwtl
int3
jne
dec
mov
divb
daa
lahf
sub
mov
arpl
cmp
mov
lods
stos
jns
repz
fwait
stc
jb
add
stos
rorb
nop
repz
sub
and
xor
jle
sbb
je
imul
icebp
add
popa
mov
push
andb
mov
sbb
pop
je
popf
xchg
add
lret
pop
push
in
mov
stc
lahf
lret
pop
and
sub
xchg
pusha
jle
in
lea
pusha
adc
ljmp
rcr
lds
fld
data16
ficompl
outsb
jg
shl
jae
jmp
or
mov
mov
stos
clc
mov
mov
jl
adc
loope
mov
les
dec
push
addr16
ucomiss
pop
inc
jae
std
and
cmp
loop
pusha
je
cmp
pop
loope
push
out
mov
sub
ret
nop
div
jne
lret
mov
adc
shlb
mov
je
mov
shl
lret
lret
pop
lods
fs
ret
jecxz
out
test
sub
out
dec
lcall
inc
lcall
add
leave
inc
lods
push
rorb
shr
push
hlt
mov
push
mov
test
mov
jae
xchg
adc
negl
and
xchg
out
test
mov
movsb
stos
fwait
mov
lahf
cmp
ljmp
and
subl
sbb
push
mov
push
cmp
movsl
dec
shl
mov
test
cltd
pop
stos
shlb
test
inc
into
jle
inc
outsb
test
leave
in
test
or
sbb
xor
call
pop
sbb
add
aam
mov
in
pop
enter
loope
xchg
lcall
sbb
xor
iret
jbe
add
mov
rolb
mov
push
cli
push
jnp
subb
jnp
call
dec
sbb
cmp
jno
push
xchg
cwtl
xor
addb
fcoml
jecxz
xchg
add
sarl
ja
jnp
push
clc
inc
adc
adc
mov
mov
aaa
insb
sarb
and
js
dec
outsb
out
mov
add
stos
sub
popf
jnp
mov
outsl
xor
stos
js
pop
repz
lock
push
or
icebp
lret
mov
cmp
jp
and
sub
mov
mov
xchg
push
mov
iret
clc
sarb
xchg
mov
decl
aad
push
sub
sub
inc
out
mov
adc
ds
push
fwait
jp
lods
out
cmc
sahf
xorl
stos
mov
ja
cld
jmp
notb
inc
jle
xchg
cmp
jo
clc
dec
pop
rcll
movl
cmp
or
packsswb
pop
aaa
frstor
addr16
and
pop
sub
mov
rol
mov
xchg
adc
int3
cmpsl
inc
sbbb
push
or
gs
xchg
ficompl
leave
test
mov
nop
lds
in
pop
mov
lret
lods
dec
je
mov
adc
or
sub
scas
or
pop
lcall
and
cmp
xor
sbb
sbb
inc
sar
and
jbe
sub
sti
lods
or
jmp
mov
lods
add
add
dec
sahf
inc
add
es
movsb
push
mov
rcrl
sub
pushl
pusha
movsl
insl
sbb
ljmp
mov
cmp
cmp
dec
insb
xchg
jmp
and
xchg
aad
sti
pop
xchg
pusha
mov
int3
and
sub
dec
or
add
pop
jns
mov
push
ret
scas
addr16
rcrb
dec
push
ret
loop
inc
and
orl
jo
movsl
rol
int
cli
pop
stos
add
xlat
push
call
push
add
test
add
test
mov
or
xchg
scas
jmp
lret
dec
jnp
mov
cmp
mov
lea
es
pop
dec
pop
sbb
xor
jl
mov
leave
fwait
jns
cmp
xor
sbb
push
sub
xchg
test
dec
popa
add
jne
movsl
add
hlt
or
jle
aas
mov
jb
mov
sbb
mov
adc
ret
mull
mov
adc
mov
out
dec
xor
clc
sub
mov
push
adc
lods
xchg
cli
push
mov
imul
rol
fdivs
xor
movsb
aam
jb
sarb
mov
popf
aaa
mov
mov
data16
imul
arpl
loop
push
imul
mov
lds
dec
pop
mov
stc
mov
jecxz
into
jle
dec
rcrb
scas
out
leave
or
mov
lea
or
sarb
rclb
xor
pop
test
out
inc
sub
in
gs
mov
lcall
rcrb
sbb
mov
std
popa
jmp
xor
push
fsubr
fdivs
xchg
mov
andl
lods
out
jg
inc
mull
daa
sub
xor
out
jne
dec
idivl
cmp
popa
dec
sub
pop
sahf
fadd
mov
insb
mov
lret
push
mov
and
int3
xor
lahf
sub
adc
fldt
incl
out
mov
filds
push
filds
test
add
int3
mov
ja
stc
mov
or
sbb
add
push
into
sub
mov
or
pop
fstl
jecxz
cmc
xor
in
push
cmp
test
out
sub
sbb
jp
movsb
aad
incl
adc
sub
cli
ret
sbb
pop
jae
or
stc
imul
je
pop
lahf
lret
mov
popf
stos
hlt
inc
xor
xor
iret
jecxz
mov
inc
rolb
sbb
jne
push
jecxz
repnz
add
add
sbb
fildll
inc
and
xor
aam
sub
shl
dec
adc
int
hlt
pop
cwtl
sub
push
adc
xor
xchg
in
movb
adc
push
pop
cs
mov
push
sub
mov
test
add
inc
popf
scas
nop
jnp
cltd
jle
lds
lahf
or
add
xchg
hlt
dec
int3
cwtl
or
rorb
adc
std
data16
pop
ret
in
mov
loope
jns
push
sbb
rorl
mov
cmpb
sbb
dec
daa
mov
pop
mov
cwtl
ljmp
cmpsb
pop
or
xor
jle
in
push
cld
cs
repnz
add
xor
clc
fldt
add
lods
add
add
xchg
loop
dec
or
add
and
and
sbbb
or
stos
cmp
pop
imul
dec
push
mov
and
mov
aad
mov
maskmovq
outsb
inc
repnz
mov
mov
push
fs
cmp
aas
inc
into
mov
pop
and
jne
sbb
pop
jnp
repnz
adc
dec
push
pop
daa
pop
popa
pop
inc
enter
daa
call
mov
adc
pop
jp
out
pop
sbbb
rol
gs
and
sbb
incb
push
subl
lcall
mov
xor
jo
imul
pop
push
sub
cmp
push
sbb
mov
add
out
add
ss
push
and
push
mov
test
imul
mov
and
bound
stos
popa
push
push
cmp
sti
add
jnp
movsb
outsb
inc
out
out
lcall
mov
mov
mov
push
cld
data16
sub
dec
fwait
mov
cld
out
jp
fldenv
mov
fistpl
into
or
cmp
repz
std
push
outsl
push
clc
scas
cmp
mov
mov
loope
lds
inc
sahf
cmpsl
popf
xor
mov
push
jae
xor
movsb
and
cmp
fisubrs
scas
leave
rcr
mov
sbb
orl
iret
test
xchg
je
outsl
mov
in
loop
aam
outsl
std
mov
push
cmp
dec
js
pop
and
xor
ljmp
push
lahf
lods
sahf
push
insb
inc
cld
leave
xchg
push
pop
jne
mov
sti
stc
popf
fsubrs
xchg
xchg
sti
iret
fsubl
repz
arpl
cli
roll
mov
xorb
mov
push
xor
xor
dec
add
insb
nop
addr16
cltd
push
cmp
or
jmp
or
rolb
cmp
xor
adc
inc
mov
mov
xchg
push
add
sub
push
adc
pop
jo
xchg
fwait
mov
add
fldcw
addl
jnp
lret
dec
out
push
aad
mov
orb
shll
pusha
mov
stos
inc
jae
mov
jno
xchg
es
jb
test
adc
xor
push
dec
pop
adc
int
fsub
stos
nop
mov
arpl
xlat
addl
jg
sbb
stos
out
mov
sti
cmpsb
mov
jecxz
sbb
mov
pusha
lcall
fdivl
jle
pop
or
inc
cld
fs
jnp
xchg
jg
sti
jne
int3
in
push
fcmovnu
xchg
cs
mov
outsl
inc
arpl
ja
mov
je
push
sub
stos
cmp
jge
add
dec
xchg
lcall
test
popf
ljmp
out
mov
daa
mov
inc
inc
xchg
scas
mov
sbb
clc
stos
jno
sbb
pusha
cmp
fwait
inc
enter
and
enter
cmpsb
xchg
mov
pop
cmp
out
and
adc
leave
out
outsl
in
cltd
xchg
movsl
aad
pop
sub
das
pop
pop
shl
loop
jo
mov
inc
cmp
mov
jnp
push
jecxz
std
xchg
mov
adc
sub
movsl
dec
leave
mov
lods
mov
add
lret
repnz
cltd
hlt
mov
ds
inc
push
dec
push
cli
lret
push
and
xor
test
test
pop
mov
sbbl
mov
addr16
cmp
xor
or
stc
lret
or
into
ret
nop
cmp
cmpl
pmaxub
incb
adc
cmpsb
mov
push
jae
jl
push
cltd
pusha
mov
sbb
pusha
loopne
fwait
das
xor
lret
adc
je
roll
push
out
popa
pop
pop
int3
outsl
sahf
fsub
sub
insb
mov
test
int
xchg
inc
std
jle
add
mov
adcl
adc
xchg
clc
push
mov
inc
mov
pushf
pop
out
xlat
subb
pusha
int
int
cmp
repnz
lcall
stc
popf
push
loope
mov
ja
add
jge
lock
sub
aas
jne
sbb
into
shll
mov
leave
jle
ss
insl
or
xor
xor
arpl
or
or
fimull
in
jnp
xor
fstps
or
mov
cmp
jno
sti
movsb
mov
cmp
cli
mov
dec
dec
add
mov
xor
sub
jae
xchg
sbb
negl
and
shlb
cltd
mov
pop
es
cmpsb
popf
imul
outsl
ljmp
pop
cmp
scas
xchg
mov
mov
xlat
add
mov
ret
jo
cmp
cmpb
ljmp
cltd
test
dec
sarl
aad
rorl
pop
sub
fbstp
pop
xchg
lods
xor
das
rolb
cmp
int3
rcr
and
stc
cmp
or
pop
out
pop
pop
aad
and
push
mov
je
add
cmpsl
sbb
repnz
es
scas
jge
sub
pop
sbb
mov
and
add
mov
das
ficoms
popa
lret
push
push
ja
imul
adc
stos
mov
adc
push
in
mov
outsl
and
mov
cmp
loope
xor
pushf
stc
ret
mov
jo
jns
xchg
gs
sub
stos
shl
sar
mov
pop
mov
xchg
adc
adc
jp
gs
mov
rolb
stos
push
mov
aaa
jne
nop
cmpsb
inc
fwait
cmpsb
push
lahf
aam
jle
xor
sahf
test
test
fwait
pmovmskb
out
lods
test
sbb
out
adc
int3
and
stc
negb
jno
push
adc
mov
sbb
jecxz
iret
xchg
push
inc
loop
mov
push
sbb
lods
mov
cmp
cltd
addl
xor
aas
icebp
mov
xor
arpl
push
idivb
xchg
sahf
xor
jmp
pop
push
andb
jg
sarb
xchg
lret
dec
rolb
push
movsl
add
or
fidivl
xor
dec
sbb
xor
je
jbe
daa
rcll
pop
cmp
mov
jmp
add
test
outsb
add
sahf
loop
jne
lock
pop
mov
shlb
sbb
sub
jecxz
fisubrs
push
fcmovne
movsl
push
jo
jb
xor
and
repz
fcmovnb
pop
sbb
out
je
sub
add
add
push
in
cmc
adc
mov
aas
mov
mov
shlb
cmp
mov
mov
mov
xor
out
lret
xor
pop
jno
dec
rcrb
je
mov
sti
lds
sti
je
cs
and
adc
adc
lahf
adc
pushl
sti
aaa
inc
add
mov
jns
sub
rorb
cli
and
stc
aaa
iret
pop
jg
adc
aas
fs
adc
ret
mov
notl
enter
inc
out
repnz
dec
inc
mov
rcrb
mov
test
dec
fildl
in
movsl
sbb
fsubr
push
mov
orb
ja
test
adc
mov
sahf
gs
xchg
mov
aam
leave
arpl
test
sub
cmpsb
dec
pop
dec
cwtl
jl
divl
mov
in
or
cwtl
out
dec
jne
rcrl
fnstsw
pusha
imul
out
push
dec
xor
sub
jnp
cmp
jo
int
in
pop
adc
xor
cwtl
movsl
fcmovne
inc
xchg
ds
and
xchg
andb
fimuls
push
mov
inc
or
mov
shlb
shll
std
int3
idivb
and
in
repnz
sbb
mov
dec
test
ss
mov
or
inc
jecxz
fs
scas
andl
cmp
mov
outsb
outsb
or
or
std
ljmp
and
lea
push
lock
mov
sbb
mov
dec
aad
push
ret
and
jge
lahf
sbbl
cmp
sbb
out
loope
add
adc
data16
imul
xlat
sbb
dec
repz
mov
in
in
loopne
and
nop
dec
and
xlat
pop
sbb
pop
es
cmpsb
ja
dec
or
jae
xchg
mov
or
push
jl
call
ljmp
cmpsl
sbb
int3
dec
jb
lret
cld
pop
popl
fildll
dec
xchg
outsb
not
rorl
inc
or
les
bndldx
mov
push
jo
and
lods
test
add
loop
pop
lea
dec
arpl
and
ljmp
lods
and
adc
rolb
or
jp
sahf
aad
push
or
mov
clc
add
pop
iret
push
sbb
xor
jp
in
xor
fstpt
fadds
shll
push
in
insb
xlat
lret
jle
cmc
mov
aas
push
test
push
mulb
fcmovnb
loop
push
cmpsb
jge
imul
jno
bound
shrb
ficoms
sarl
nop
bound
test
gs
and
sahf
sub
push
fwait
dec
dec
stc
fistpl
xor
jno
call
xchg
xchg
ja
lret
sti
insb
jmp
jle
or
xchg
mov
pop
arpl
xor
xchg
pop
jbe
mov
xchg
popa
adc
and
sub
push
xchg
outsb
push
iret
mov
mov
scas
jg
pop
arpl
sarl
test
push
dec
outsl
addr16
loopne
lahf
sub
int
push
icebp
add
add
inc
add
inc
daa
sti
mov
push
cli
mov
add
lods
add
add
push
sarl
fidivrl
inc
add
xchg
and
mov
mov
repnz
jae
jo
aaa
add
icebp
xchg
iret
cmp
in
and
adcb
sub
pop
cmpsb
xor
lea
push
mov
enter
jge
jle
jb
cmp
and
call
xor
mov
inc
cmc
stos
or
mull
dec
push
pop
pop
in
mov
push
popf
adc
xor
cltd
dec
xlat
test
dec
add
pop
je
jnp
aad
jge
enter
xchg
xchg
or
jbe
das
out
stos
jnp,pn
aad
repz
and
in
or
xchg
push
add
cwtl
and
sbb
stos
dec
lret
xchg
mov
lret
arpl
movb
push
jle
pop
test
call
in
mov
adcb
clc
add
int
movsb
sahf
adc
std
sbb
iret
sbb
shl
mov
adc
dec
daa
xchg
shr
fdivrs
mov
jae
ret
mov
add
xchg
ja
sub
jno
hlt
fdivl
dec
scas
inc
mov
lcall
iret
je
clc
fstpl
inc
add
nop
ret
mov
imul
loop
mov
js
stos
cmp
mov
ja
outsl
mov
loopne
out
xchg
sbb
add
jg
xor
and
lods
or
repz
push
orb
movsl
adc
jecxz
fcmovnu
jbe
add
and
repz
mov
aad
pop
pop
popa
cld
pop
xor
mov
inc
mov
call
mov
test
pop
call
jle
jg
mov
jno
dec
push
lcall
xor
add
dec
xchg
mov
test
sbb
dec
mov
push
dec
ljmp
push
add
fidivrl
pop
mov
dec
dec
mov
mov
iret
test
call
inc
dec
rcr
addr16
or
xorl
push
pop
jle
adc
mov
subb
pop
jmp
xchg
dec
stos
mov
sti
pop
pop
or
add
xor
mov
xchg
mov
jnp
jmp
or
stos
xchg
inc
xor
sub
es
cmp
xor
dec
les
add
push
sbb
es
push
lds
sub
jmp
or
mov
or
adc
pop
sbb
pop
daa
xor
sub
enter
je
xchg
cld
mov
add
push
ret
in
inc
loopne
popf
ljmp
sahf
pushf
pop
daa
mov
pop
adc
sbb
dec
xor
std
add
adc
sbb
cmp
outsb
mov
sub
test
rcrb
or
dec
ja
xor
or
stc
pop
mov
in
cmpsl
ret
mov
jbe
loope
lcall
push
push
pop
js
inc
and
add
dec
adc
out
cmpsl
mov
inc
sahf
and
mov
sahf
sti
inc
fidivrl
mov
jb
jge
jb
inc
mov
xor
adc
mov
cmp
insb
lcall
lahf
sbb
popa
popa
jmp
pop
cmpsb
cmp
fldt
pop
fcomps
aam
mov
add
add
mov
aas
sysexit
pop
push
mulb
movsb
test
lods
add
add
or
mov
or
addr16
lret
mov
mov
cmp
cmp
adc
in
mov
push
aam
mov
sub
jbe
sbb
jno
rcl
jnp
daa
or
and
xchg
outsb
add
andps
int3
and
lods
cli
cmp
aaa
mov
test
test
mov
shrl
push
push
xor
xchg
jg
mov
pop
push
push
iret
dec
sbb
sti
rol
std
xor
aas
popa
push
xor
pusha
mov
adc
sti
hlt
fbld
cmp
xor
fnstenv
arpl
ja
or
sub
fs
xor
sub
ja
popa
xor
sbbb
jp
jae
inc
pop
pusha
mov
add
push
pushf
fnsave
mov
fldl
jo
popf
add
push
repz
cld
xor
pop
mov
fstl
xor
dec
imul
add
pop
out
jno
or
add
push
insl
xor
add
mov
push
ss
fucomip
stos
fsubp
es
sti
sahf
dec
pop
add
sbb
cmc
mov
repnz
add
lods
shl
cmpsl
xor
aam
lret
dec
push
clc
adc
arpl
jg
pop
aam
aas
jge
pop
xor
scas
cmp
pop
and
pop
inc
shll
push
mov
in
fidivl
cmp
nop
mov
mov
lods
bswap
mov
out
imul
loope
fsub
unpcklps
push
mov
sti
bound
repnz
cld
lods
scas
ret
inc
add
pop
roll
out
pop
lock
jo
dec
dec
arpl
dec
lret
mov
mov
mov
or
push
xchg
aas
push
adc
sub
fdivs
idivl
cmc
jecxz
cli
push
xor
sub
out
ds
cld
lods
inc
out
ja
xor
and
hlt
pop
cltd
les
xchg
add
movsl
iret
sbb
lock
jb
pop
dec
push
inc
xor
movsb
pop
lock
scas
jb
fs
shrl
call
adc
loopne
or
negl
jle
in
add
adc
jbe
out
sub
je
jae
ret
push
cwtl
lds
inc
stos
push
push
add
sbb
sub
and
aaa
leave
ljmp
inc
add
mov
xor
push
jmp
inc
jno
imul
rolb
sti
jnp
mov
add
repz
aaa
jbe
mov
test
call
or
jl
cmc
sub
negl
pop
lea
and
and
lds
hlt
inc
mov
sub
adc
fmulp
xchg
rcr
hlt
fldl
mov
movsb
mov
jbe
mov
insb
pop
dec
and
xchg
and
xor
xchg
ret
pop
popa
fimull
adc
jbe
xor
push
aaa
jno
test
test
jg
popa
movsl
adc
or
outsl
mov
inc
lcall
pop
cmpsb
push
fcoms
lods
add
mov
ret
sbb
or
pop
xchg
gs
jnp
fidivrs
mov
je
add
jmp
cmp
sbb
sar
dec
inc
add
ret
test
sbb
ljmp
fimuls
mov
push
cmp
fnstenv
insb
xor
add
icebp
insb
ja
cmp
vpunpckhqdq
pusha
addb
pop
notb
sbb
jae
adc
pop
test
lock
aam
lock
and
leave
shrb
jle
sub
xchg
pop
mov
pop
paddsw
inc
pusha
in
or
repnz
mov
xchg
mov
aaa
test
xchg
pop
mov
fwait
repz
and
xlat
mov
test
push
insb
ret
in
pusha
xor
add
add
fistps
xchg
dec
sub
lods
std
mov
lcall
mov
dec
out
in
xor
fidivs
lret
fnstcw
sbb
mov
std
dec
bound
insb
jecxz
xchg
lret
pop
mov
cwtl
add
push
xchg
je
aas
sub
sub
xlat
xor
ljmp
insl
lods
fcom
dec
loope
jb
jg
fwait
icebp
fbld
jp
mov
add
pop
loop
repz
mov
and
jno
and
sub
inc
and
jecxz
dec
inc
gs
cmp
call
loopne
sbb
pop
inc
dec
cmp
lods
imul
xlat
fsubl
push
or
lret
xchg
aaa
aad
aaa
pop
jg
scas
into
and
or
inc
out
sbb
jnp
mov
add
jb
pop
popf
testl
pop
cmp
and
andl
adc
loop
sbb
mov
lods
inc
cmpsl
mov
pusha
stos
jp
xchg
pop
fwait
loope
inc
push
dec
int
pop
fnstenv
pop
xor
xchg
das
int3
pop
xchg
push
testb
adc
les
loop
or
cmc
jecxz
mov
xchg
cld
inc
inc
jmp
sti
adc
int3
jbe
mov
mov
pop
js
imul
mov
test
fnstcw
xor
sub
xchg
fldt
jge
fldenv
mov
adc
rclb
adc
loopne
rol
or
pop
xchg
cmc
xchg
shr
xor
mov
mov
add
inc
orl
inc
js
outsb
xchg
scas
lret
hlt
divb
lods
cmpsl
clc
dec
mov
rcrl
xor
inc
fidivs
popa
in
jns
aad
push
imul
pushf
fidivrl
jmp
cmp
or
mov
xchg
lods
push
stos
in
sub
jecxz
mov
mov
cwtl
push
mov
loop
cmc
pop
jmp
leave
mov
xchg
outsb
lods
xchg
ss
mov
shlb
je
push
sub
push
arpl
je
call
add
xchg
mov
push
mov
push
xlat
adc
call
cmp
mov
xor
push
addr16
cmp
loope
sub
fidivl
imul
mov
mov
out
jmp
inc
popf
leave
cmpl
out
shll
or
scas
mov
mov
sbb
cs
cmp
lods
lods
fisttpl
insb
xor
adc
pop
fsts
mov
or
int3
icebp
jb
out
sbb
mov
jp
testl
les
ds
iret
enter
jle
xchg
or
lcall
insb
iret
fnstsw
add
mov
pop
cmp
sbb
jge
mov
adc
iret
dec
add
ljmp
sbb
data16
enter
shll
fcomp
mov
cmp
inc
arpl
xlat
adc
test
pop
fs
pop
leave
push
mov
and
mov
xchg
icebp
popa
test
je
mov
inc
les
arpl
pop
fisubrs
cmp
mov
sbbb
into
xchg
out
repnz
gs
mov
push
jl
rol
nop
les
movsl
add
mov
xchg
stos
xchg
jge
int3
stc
dec
call
push
ds
shlb
lock
xorb
xor
lock
sbb
adc
icebp
cmp
sub
je
iret
cmpb
jl
iret
cmp
mov
xor
adc
pop
xor
rorl
pop
xor
xchg
and
gs
outsl
mov
je
aas
js
dec
pop
cmovle
xchg
sarl
adc
imul
jns
jge
jle
push
mov
pop
aam
jbe
dec
and
jl
mov
jl
insl
sub
xchg
sti
lahf
and
sbb
adc
je
fnsave
sbb
jnp
popa
lea
sbbb
ss
notb
push
insb
mulb
pushf
jmp
jnp
mov
sub
sti
repz
data16
lods
notb
popa
popa
loopne
cli
into
push
jg
aam
mov
shll
stos
xor
hlt
push
jns
mov
push
cmp
loope
into
push
xor
cs
jle
das
xchg
mov
or
jg
push
int3
nop
cld
inc
inc
xchg
and
imul
or
aaa
jb
pop
push
fisttpll
inc
outsl
andl
sbb
outsb
mov
aaa
movsl
mov
sbb
push
fnstsw
mov
insb
and
cmp
or
push
popa
pop
jne
push
icebp
stc
push
inc
fiaddl
mov
push
aam
sub
mov
cmp
mov
fsubs
lds
mov
push
xchg
imull
loop
jp
fnstcw
add
gs
dec
xchg
jae
adc
shrb
icebp
xchg
pop
xchg
jle
add
daa
addr16
loope
jp
mov
cmp
pusha
or
fwait
jp
push
mov
sahf
int3
and
les
push
fcmovu
js
ficoms
imul
cmpsl
cld
pop
les
pop
mov
aas
mov
loope
sahf
ror
leave
mov
shlb
lds
push
or
xchg
loopne
enter
mov
push
adc
scas
clc
push
push
into
ret
outsb
mov
cmp
dec
imull
xchg
fdivs
test
inc
and
cmp
pop
adc
mov
and
inc
arpl
gs
cmp
cmp
xor
enter
hlt
xor
dec
cmp
js
icebp
hlt
xchg
fidivrs
pop
and
and
rcl
popa
and
fldt
and
adc
mov
or
icebp
rcrl
fistl
icebp
hlt
xor
or
pop
mov
inc
xor
xchg
add
push
data16
cmp
scas
xchg
ret
rcrb
xchg
ja
mov
loope
sub
mov
add
add
call
jmp
and
jecxz
enter
add
lods
add
add
stc
mov
add
stos
in
pop
and
mov
add
jge
jge
imul
lahf
imul
adc
jnp
out
mov
mov
inc
scas
sarb
pop
ficompl
cwtl
inc
jno
icebp
std
jmp
sbb
mov
orb
out
cmp
out
jb
cld
call
cltd
mov
testb
dec
ret
mov
cpuid
loopne
sbb
fsubl
mov
mov
movsb
xchg
std
in
jl
mov
pop
data16
je
pop
bnd
pop
sub
and
mov
mov
je
adc
sti
lret
push
mov
insl
loop
pop
dec
ss
std
or
scas
add
out
mov
cmp
sub
cmp
push
subb
mov
icebp
movsb
and
call
adc
in
adc
and
jecxz
push
stos
pushf
cmp
lret
jl
jg
push
add
add
mov
add
pop
test
jb
push
fisttpll
rolb
inc
out
js
into
jmp
or
mov
push
inc
dec
inc
arpl
mov
inc
std
xchg
jl
pop
cmp
adc
xchg
inc
jnp
aaa
jno
push
add
insl
and
pop
ret
push
cld
jae
inc
pop
inc
lcall
pop
sub
pop
aas
cmp
jle
mov
xor
mov
stos
scas
test
or
mov
dec
shlb
rolb
inc
fsts
sti
and
scas
mov
test
out
call
jb
mov
out
bts
jmp
push
jo
and
and
pop
sbb
cmc
test
inc
rcll
and
pusha
popf
inc
cmpsb
cltd
sbbb
push
jbe
jl
cmpsl
repz
aam
in
sbb
adc
mov
xor
movsl
scas
imul
pop
imulb
test
leave
daa
pop
fidivrs
loope
push
sub
jge
pop
fisubl
int3
movsl
movsl
xchg
jmp
ss
sar
adc
sbb
in
popf
sbb
testl
sbb
sti
icebp
in
lods
dec
add
jle
add
call
fpatan
xor
gs
dec
fdiv
hlt
mov
stos
in
cmc
pop
cld
out
mov
add
scas
push
loop
inc
mov
leave
adc
loop
cwtl
enter
xchg
cs
sub
idivl
jb
out
push
or
mov
cmp
sub
fisttpll
es
aam
jae
dec
test
push
test
inc
int3
scas
xor
cmp
dec
push
lret
les
stos
cmp
gs
adc
jmp
pop
inc
ficomps
sub
jmp
inc
xor
lcall
cld
xorl
mov
lods
mov
mov
lret
cli
ret
mov
scas
andb
pop
pop
ret
pop
xchg
vpxor
adc
jne
and
fisttpll
xchg
inc
add
pop
sub
inc
mov
insl
inc
into
mov
call
push
scas
sub
push
xlat
xchg
repz
xor
add
icebp
inc
ja
mov
rcrl
and
xor
pop
pop
xor
in
sbb
xlat
frstor
mov
xor
adc
sub
mov
lock
push
push
flds
add
add
cmp
pop
rcrb
addl
lods
add
add
pusha
push
sbb
pop
mov
jo
rcrb
adc
negl
inc
mov
cmp
dec
push
gs
jo
pop
cli
xchg
fsubl
or
icebp
scas
cmc
dec
push
xchg
mov
add
fbld
ret
jae
push
cmp
mov
bound
sti
pop
jge
mov
jmp
es
jge
ret
dec
mov
insb
cs
lret
sub
fbstp
fwait
jp
fwait
xor
jg
mov
mov
inc
mov
pop
fmuls
dec
in
add
jle
sbbb
cmp
jp
lods
out
and
shrb
xchg
jge
push
cltd
inc
out
xchg
xor
popf
adc
inc
pop
xor
jns
cli
shll
mov
negb
jo
or
or
sar
fimuls
inc
push
mov
shr
scas
aam
cmp
insb
iret
fsubs
sti
jb
aam
cltd
subb
repnz
pushf
mov
xor
negb
in
pushf
xor
mov
daa
push
xor
xchg
inc
jae
add
push
fldt
mov
sub
in
push
cmp
mov
mov
dec
sbb
mov
jns
lds
out
add
shrl
mov
sub
and
lea
fmuls
push
add
fdivrs
in
mov
jp
adc
stos
xor
or
inc
pop
movsl
mov
jl
fcoml
xchg
fistps
pop
add
push
dec
jge
dec
or
mov
pop
jle
cmp
inc
xlat
inc
clc
rep
mov
icebp
ret
sbb
dec
xor
fimull
fmull
jg
xor
inc
pop
and
sarb
shrl
insb
std
dec
out
push
je
fldt
cmp
ja
jb
mov
addr16
xor
fbstp
sub
int3
and
cmc
jp
jno
dec
cmp
cli
loope
rcr
out
cltd
pop
fwait
adc
add
testl
es
inc
push
xchg
sub
cmp
fsts
cltd
or
adc
loope
sbb
pop
jno
adc
push
cli
pop
jmp
add
std
hlt
inc
scas
push
adc
cmp
cmp
mov
imul
lret
outsl
test
cmp
fwait
stc
cmp
iret
adc
mov
das
xchg
addr16
repnz
clc
shlb
pusha
mov
negb
daa
lods
lds
daa
sbb
pop
in
popa
cltd
sarb
shll
pop
add
jmp
lock
pop
push
and
cli
scas
ds
in
mov
sub
daa
aam
das
jo
xchg
lds
sub
std
outsl
push
cwtl
subb
imul
repnz
mov
dec
mov
aad
pop
lea
dec
cmp
shlb
cmp
mov
frstor
mov
xor
ja
add
mov
sub
arpl
sti
int
shll
dec
mov
out
ljmp
inc
and
lahf
add
xchg
out
mov
popf
adc
add
ret
lret
and
add
dec
fstps
add
add
mov
cmpsb
mov
ficoms
add
xchg
add
movsb
cmp
or
pop
loope
lds
cmp
cwtl
inc
and
test
and
pop
pop
loope
lret
dec
and
test
clc
xchg
mov
stc
rcll
adc
and
mov
mov
cmpsb
sbb
push
jo
add
mov
pop
cmp
xor
lods
lcall
mov
and
leave
insb
and
out
sti
pop
into
sbb
test
xchg
sub
mov
repnz
push
inc
scas
mov
jne
jp
mov
pop
cmpsb
cli
aaa
ja
push
loopne
mov
pusha
fisubrs
adc
sbb
xchg
inc
xchg
dec
jb
jl
das
push
mov
xor
inc
cs
movsl
xlat
adc
and
dec
push
testl
stc
xchg
shlb
cmp
sub
cmc
xchg
std
jnp
xchg
sub
push
ret
push
mov
inc
jns
arpl
fisttps
pop
push
frstor
inc
push
sbb
cs
lcall
cld
adc
enter
cmp
sub
sbb
sbb
stos
jle
adc
pop
mov
leave
pop
xchg
cs
outsb
movsb
sti
stos
inc
lea
in
push
cli
mov
repz
push
pop
shlb
gs
pop
mov
imul
xchg
push
out
out
dec
aad
bswap
cld
ret
stos
lret
cmp
xchg
es
dec
jb
lods
and
pushf
dec
push
cmp
xchg
stc
push
xlat
add
ja
cmpl
jecxz
ret
addr16
xchg
jp
sub
pop
lods
je
jb
sti
adc
and
mov
lahf
dec
add
mov
dec
add
into
loope
insl
cmpsl
fcoms
imul
mov
scas
pop
jnp
leave
repnz
das
cmp
mov
outsw
cmc
xchg
and
cli
push
outsl
mov
pop
xchg
inc
lahf
jg
test
ss
push
insl
add
jns
das
adc
ljmp
data16
adc
mov
fsub
jl
push
fiadds
adc
cmp
movsl
mov
test
flds
test
mov
sbb
divb
in
jbe
sbb
mov
mov
dec
dec
std
repnz
loopne
cltd
imul
aam
ret
sbb
nop
cltd
sbb
in
push
cmp
loope
daa
cmp
dec
jg
out
push
cmc
pusha
addb
xor
mov
cs
sti
xchg
cmp
sbb
scas
arpl
cmp
or
xor
xchg
inc
and
jle
jns
in
add
cmp
or
cwtl
loop
hlt
adc
and
jae
mov
push
xchg
pusha
sub
mov
inc
sbb
mov
repnz
jo
add
and
shlb
iret
pop
mov
icebp
add
xlat
push
or
fs
rcr
mov
add
adc
add
icebp
les
push
fbstp
cs
mov
lcall
pop
bound
push
mov
xchg
popa
das
sarl
mov
cmp
fiaddl
xchg
cmpsl
jbe
sbb
pop
test
lea
xor
mov
adc
packuswb
int
dec
repnz
and
dec
mov
daa
js
les
mov
push
out
rcrb
pop
mov
xlat
fwait
xchg
mov
mov
add
fdivrs
out
jbe
outsl
cmp
push
jae
ja
mov
add
jmp
or
cltd
repz
cmpsb
mov
sbb
cmp
and
xchg
fldenv
mov
sub
adc
loopne
insl
jo
mov
scas
xlat
lds
mov
iret
mov
pop
mov
xchg
ret
jg
pop
decb
adc
or
mov
xor
movzbl
repz
pop
notl
xchg
jp
xchg
pop
jge
cmp
cmc
ss
mov
stos
outsl
pop
fcoms
jle
cmpsb
cltd
mov
pusha
sti
movsb
aaa
adc
jo
dec
cmp
pop
pop
jno
mov
sbbl
pop
iret
push
adc
sub
sahf
xchg
sahf
xchg
test
adc
fcomps
add
push
mov
and
cmp
ret
test
cld
loop
dec
sub
ja
aas
jg
pop
leave
popa
mov
xchg
dec
enter
pop
fcom
lock
or
mov
std
mov
sub
aad
repz
shlb
inc
fidivl
mov
inc
push
inc
dec
mov
lret
jno
jmp
dec
loope
addb
sbb
in
filds
clc
dec
push
push
cmp
fs
test
cmp
cmc
daa
mov
inc
jo
lcall
cmp
mov
sti
mov
insl
aas
adc
int
popf
dec
cli
sarl
or
xchg
neg
addb
nop
fs
dec
std
jl
mov
xchg
in
aad
adc
out
mov
xchg
mov
xchg
out
add
pop
or
lret
movsl
cli
mov
data16
adc
cmp
insl
test
xor
nop
in
stos
frstor
inc
test
cmp
adc
jbe
mov
cltd
pop
pop
mov
and
pusha
sbb
outsb
insb
aas
dec
arpl
repnz
cmp
aad
iret
jg
mov
xor
fistpll
jae
iret
mov
inc
pop
loope
into
pusha
inc
add
adc
sbb
pop
shl
jne
push
repnz
pop
adc
lcall
cmp
in
jge
jbe
ret
push
es
push
xchg
lds
and
add
push
xor
or
xchg
pop
sub
fs
jmp
cmc
adc
inc
sarl
or
or
lds
rorl
cmpsl
mov
xor
gs
inc
and
adc
pop
or
dec
sarb
xchg
adc
addr16
sub
pop
mov
fsubp
call
mov
std
cmpsl
shlb
scas
adc
mov
sub
inc
cmpsb
add
popa
add
aam
mov
add
std
cli
cmp
loop
adc
scas
sub
test
rcrl
icebp
add
pop
aad
into
cmpsb
add
sbb
and
fcmovne
jl
pop
cmp
adc
out
mul
dec
das
inc
js
mov
jmp
stos
sbb
shll
cmpsl
mov
sub
xor
int
sti
jg
lods
adc
outsb
shrb
pop
dec
les
fsub
rolb
aas
xchg
scas
dec
les
adc
fisttps
add
fldl
fstpl
pop
ret
ret
add
lods
add
add
outsb
stos
movsl
fwait
xor
push
cltd
cmp
adc
repz
je
subb
mov
orl
mov
lahf
mov
add
rcll
cmp
in
adc
jl
shl
repnz
nop
push
leave
adc
dec
out
mull
fldt
mov
or
mov
pop
cmp
inc
into
cwtl
mov
push
dec
cmpsb
dec
outsl
mov
jle
mov
pop
sarb
or
aaa
add
push
push
stc
movsl
dec
ss
add
aas
in
daa
sbb
jg
inc
hlt
pop
dec
shrl
mov
insb
test
sbb
into
xor
ds
repnz
sub
sbb
dec
daa
xchg
outsb
vunpcklpd
addl
imul
arpl
in
cmp
dec
lds
sbb
or
mov
fldenv
rorl
xor
repz
icebp
push
jne
movsb
and
xchg
xchg
xor
aas
mov
dec
lcall
sbb
je
insb
pop
imul
das
xchg
add
out
xchg
pop
imul
test
adc
scas
rclb
sahf
xlat
mov
stos
cmc
dec
pop
push
fsubrl
aad
push
loop
pop
inc
lret
push
imul
sub
ret
mov
pop
in
test
xchg
or
fidivrl
cmp
or
push
sub
scas
cmp
int3
outsl
and
scas
and
fxch
mov
jae
loope
push
scas
lahf
fsubrs
gs
std
loope
jae
sbb
in
arpl
fwait
pop
loop
call
inc
out
orb
cmpsb
rol
dec
mov
fnstcw
cmp
shrb
sub
add
and
cmp
lret
xchg
adc
insl
in
shld
sub
es
iret
mov
or
bound
dec
mov
hlt
xor
mov
divb
in
ds
hlt
ret
imul
jo
into
xor
xor
icebp
sub
sub
les
mov
inc
ljmp
aad
cmp
jbe
and
test
pop
aaa
and
out
sbb
daa
push
leave
jecxz
cmc
test
aaa
push
int3
and
fcomps
ljmp
dec
inc
xor
loop
sub
and
iret
movsb
enter
mov
adc
cmpsl
and
lret
jbe
jae
rcrl
mov
push
adc
lcall
and
push
call
lock
inc
out
xchg
cwtl
fdivr
out
or
jbe
inc
dec
dec
mov
fdivs
loope
pop
adc
mov
mov
inc
dec
stc
push
mov
repnz
push
pusha
shll
mov
imull
and
xor
push
mov
lcall
mov
push
movq
xchg
jl
xchg
pop
stos
rolb
fcmovu
and
and
sbb
dec
mov
insl
add
and
int3
insl
pop
int
jno
imul
test
jmp
ljmp
adc
inc
add
or
je
and
jno
add
add
inc
dec
mov
popa
dec
push
sbb
mov
lods
add
add
jge
movsb
fbld
fnstenv
push
scas
push
in
es
mov
cmpsl
lea
lcall
xchg
and
mov
dec
xchg
cmp
dec
negl
sub
xchg
pop
fwait
sti
dec
add
fdivrs
jle
push
pop
imul
push
mov
or
xor
shrl
outsb
add
add
and
sbb
push
out
inc
loop
xchg
decb
jmp
and
xchg
gs
mov
popf
lea
mulb
xor
fwait
jecxz
cmpsl
iret
cmp
out
jge
scas
repz
test
mov
movsl
mov
sarl
mov
jg
fsubs
inc
dec
cmp
movsl
aas
out
xchg
aas
je
cmp
scas
sbb
pop
xchg
mov
sbb
mov
lods
dec
and
mov
test
jns
sar
test
daa
xor
popf
roll
add
nop
jnp
cmp
sti
and
scas
pop
add
in
mov
sub
ds
pop
pop
loop
out
daa
hlt
mov
xor
xchg
aaa
dec
jg
dec
lcall
xor
decl
nop
inc
pop
out
fsubr
jae
adc
xor
fprem1
and
sbb
test
jg
inc
inc
add
ds
xor
mov
and
js
xchg
dec
xchg
xchg
xor
scas
int
inc
pop
repz
mov
repz
adc
andb
mov
jl
cmp
xchg
je
pop
fwait
test
mov
shlb
popf
mov
pop
lahf
lods
xor
add
fisubrs
adc
pop
daa
adc
adc
sbb
jmp
mov
jnp
adcl
push
inc
mov
std
and
cmp
sub
cmpsl
add
lcall
loope
mov
jg
jge
call
mov
cmp
cmpsl
js,pn
arpl
xchg
aad
mov
sbb
ds
leave
fwait
pop
dec
dec
inc
and
mov
fldcw
mov
std
mov
loope
push
cmpsl
and
cs
mov
pusha
push
mov
pop
xchg
repz
inc
dec
popa
sub
jns
cmp
iret
push
ror
arpl
imul
out
leave
adc
cmp
xchg
dec
push
jmp
cmc
pop
sub
mov
cmpsl
mov
stc
push
fisubrl
dec
cwtl
sub
sbb
pop
mov
jl
add
outsl
and
sbb
mov
es
push
nop
jo
pop
xor
fdivrl
call
cmpsl
sub
mov
lcall
cld
push
push
xchg
mov
xchg
sbb
inc
mov
movsb
sbb
aad
adc
loope
cmp
sub
mov
cwtl
insb
inc
adc
dec
and
pop
mov
cli
xor
setle
loope
mov
aas
test
cmp
incb
xchg
pushf
pop
aad
mov
dec
sbb
or
loopne
aam
sub
lcall
jnp
loope
push
mov
cmp
mov
test
jmp
mov
add
add
xlat
and
aaa
std
out
and
das
jb
xchg
xchg
add
lods
add
add
paddw
fstpl
mov
call
out
xchg
cmp
dec
xchg
popa
pop
stc
loop
mov
lret
inc
ds
lret
adc
leave
rol
lret
pop
jno
or
gs
push
lods
movsb
push
les
push
fnstsw
or
test
sbb
inc
ljmp
push
adc
insb
mov
or
dec
inc
loop
pusha
xchg
mov
andb
aaa
mov
add
lret
cs
pop
fisttps
dec
inc
sub
ficoms
jmp
mov
flds
push
xchg
or
and
scas
lods
scas
mov
and
outsb
test
dec
scas
sbb
pop
xchg
test
push
jp
addr16
rorl
or
mov
jmp
rcrb
jmp
das
adc
std
hlt
cld
dec
aaa
adc
dec
ja
cmp
jnp
pop
addl
pmulhw
loope
sub
insl
std
dec
pop
jle
movsb
jnp
jo
or
or
dec
je
cli
repnz
inc
hlt
clc
js
imul
pop
scas
fs
inc
into
sahf
fs
repnz
sbbb
ret
imul
xchg
lds
cmpl
testb
push
insb
adc
dec
cmp
mov
inc
enter
dec
mov
sub
jb
jbe
mov
cmp
fists
sub
cmpl
cmc
mov
rcr
mov
lret
out
jae
dec
fcom
or
pop
pop
or
sbb
adc
push
xchg
neg
lcall
cmp
inc
rclb
clc
add
xchg
in
rolb
ljmp
rorb
repz
mov
or
mov
scas
or
shrl
lahf
out
call
and
imul
dec
cmp
and
cli
mov
sbb
or
xchg
cs
out
and
mov
inc
in
xchg
inc
aaa
dec
addr16
or
movsl
shlb
pop
dec
lods
test
int3
loop
int
xchg
push
loope
call
loope
out
arpl
mov
sub
ret
shrl
mov
sub
mov
lret
stos
sub
pop
call
xchg
andl
cmp
cs
adc
mov
xchg
cmpsl
add
leave
les
cmc
inc
push
adcl
jno
cmp
xor
inc
push
jg
jl
sub
movsl
js
pop
cwtl
popa
cwtl
mov
popf
test
cmp
push
fistpll
fxch
call
insb
inc
push
in
pop
cmp
pop
adc
pop
std
lea
iret
dec
pop
popf
jle
stc
sbb
jle
loope
and
rclb
aad
mov
in
cwtl
adcl
lock
add
and
xchg
add
imul
in
cmp
mov
add
lea
xor
lret
inc
push
clc
hlt
adc
and
outsl
jmp
shl
jg
add
int
push
cmp
cli
int
pop
clc
out
sar
mov
ret
add
imul
loopne
pop
outsb
call
lods
push
jae
mov
cmp
stos
or
ja
jmp
pop
jl
push
push
iret
outsb
cmp
repz
nop
xor
inc
outsl
sub
lahf
mov
and
fsts
xor
pop
clc
inc
dec
nop
int3
popf
fistps
lea
jmp
adc
add
add
mov
xchg
mov
adc
ret
insw
loope
push
ror
test
mov
loope
js
push
int3
lret
mov
adc
mov
or
imul
and
xor
dec
jnp
loop
pushf
lret
scas
and
roll
fisubrl
cld
clc
aas
outsl
jno
cmp
rcll
inc
inc
in
idivl
iret
fimull
loope
jbe
lahf
adc
inc
aad
fcomps
cwtl
bound
pushf
pop
popf
pop
pop
cmp
dec
ror
movsb
cmc
xchg
mov
cs
xor
ja
mov
test
cmpsb
aas
or
and
das
sbb
adc
ds
xchg
sub
mov
inc
inc
rcr
stos
shlb
mov
mov
hlt
sbbb
iret
dec
mov
jmp
int3
inc
in
lret
sub
mov
inc
orb
js
xor
cli
dec
push
scas
clc
push
gs
outsb
imul
insl
jl
sbbl
jnp
inc
push
iret
data16
enter
pop
dec
lahf
stos
mov
and
xor
imul
pushf
inc
pusha
and
push
push
inc
xlat
cmp
cmp
pop
shll
sbb
or
jnp
int3
lahf
ret
jl
lock
mov
out
push
int3
cs
and
stos
cmp
negb
and
aas
dec
mov
test
fldl
dec
mov
mov
sbb
sbb
mov
mov
shl
and
test
sbb
fisubs
pop
mov
xchg
in
sbb
addr16
std
sub
ficomps
inc
jne
adc
inc
iret
mov
aam
frstor
add
sbb
cmp
ljmp
and
nop
leave
cs
shr
mov
and
adc
jecxz
sub
cmpsl
mov
inc
mov
and
jge
stc
and
and
pop
pushf
xor
lahf
mov
lahf
jnp
pop
es
mov
daa
roll
loope
lods
and
inc
stc
push
int
lret
adc
cltd
clc
lods
int
pusha
hlt
insb
test
std
lcall
push
push
enter
sbb
rclb
std
mov
or
pop
aam
daa
stc
xor
bswap
outsl
pusha
and
and
cltd
mov
addl
pop
and
sti
mov
ja
push
push
mov
int3
arpl
ss
cmp
xor
cmp
mov
pop
scas
test
cwtl
enter
test
mov
out
push
pushf
stos
jno
xchg
pop
imul
and
mov
lret
lock
sahf
sub
sbb
xchg
lock
jmp
xor
int
mov
imul
xchg
jp
jb
ja
push
idiv
cltd
jg
and
mov
adc
mov
aam
fisubs
andl
mov
lret
xor
dec
xchg
mov
and
movsl
cmc
cmc
add
sub
jns
mov
dec
pusha
jle
push
xchg
add
je
data16
xchg
xchg
gs
pop
mov
nop
cmpl
xor
xchg
pop
fwait
stos
lds
iret
adc
push
mov
roll
push
adc
jmp
test
divb
js
or
clc
in
das
push
data16
mov
pop
mov
cmp
lods
add
add
idivb
jle
into
cmpb
xchg
adc
mov
adc
pop
xor
imul
mov
int
and
daa
mov
call
mov
xlat
test
fimuls
fs
cmp
sbb
lds
stos
jb
sbb
push
in
repnz
pop
pop
pop
popl
inc
shll
sub
mov
or
in
adc
adc
dec
ss
in
stos
xor
and
ror
rorb
push
add
sbbl
jne
push
jmp
mov
stc
cmpsl
outsb
pop
jo
lahf
cmp
push
pushf
pop
mov
pop
mov
xor
push
mov
push
fstpl
xchg
inc
iret
rcll
pop
adc
stos
scas
hlt
in
das
scas
shll
pop
lret
adc
push
scas
shll
or
push
std
sub
add
mov
ja
bound
dec
out
stos
or
xchg
xor
fwait
xor
enter
inc
jge
inc
add
iret
imul
mov
loop
insb
aam
push
sub
mov
and
mov
sub
and
xor
imul
jne
mov
loopne
loopne
mov
cmp
adc
dec
jp
fwait
push
test
and
xor
shlb
mov
in
xchg
jne
mov
xchg
pop
in
push
sbb
int3
lods
pop
imul
mov
fsubr
gs
orl
popa
xchg
dec
mov
and
das
rcll
inc
push
xchg
jbe
adc
je
push
inc
nop
fadds
mov
enter
jbe
jp
push
roll
mov
out
jo
or
fbstp
scas
push
fsubs
xchg
mov
enter
cmpsb
lahf
rcrl
adcl
cwtl
jl
mov
push
insb
push
cltd
or
cmp
ja
sub
mov
popa
cmp
jno
insb
repz
sahf
push
push
mov
add
mov
xor
mov
inc
shr
sbb
sub
mov
cmp
in
dec
cmp
pop
jl
out
and
cmp
jmp
leave
scas
jne
push
sub
dec
pop
lock
add
popf
and
and
or
dec
push
enter
imul
add
mov
cmc
rorb
or
mov
std
jmp
sti
push
cmp
sub
iret
lcall
ljmp
dec
ret
jmp
sub
movsb
fistpl
push
cmp
push
sbb
fmul
dec
push
sub
cmp
inc
push
xor
ficoms
jne
cmp
inc
add
fcoml
lock
addr16
sbb
mov
add
and
aam
fcomps
mov
xchg
sti
nop
or
cwtl
cltd
mov
scas
mov
lahf
andb
or
test
adcl
cmp
jno
push
add
pop
inc
adc
stc
adc
nop
je
mull
add
pop
inc
or
push
fs
inc
fldcw
push
jo
or
or
xchg
or
add
out
mov
cmpsl
pushw
sbb
inc
xchg
jg
sahf
mov
movsl
pushf
and
bound
add
add
int3
inc
fdivrp
out
ja
or
pop
mov
mov
add
inc
or
movsl
cmp
sbb
sub
sub
in
or
or
mov
fwait
cmp
sub
pushf
cmp
sbb
mov
add
xchg
mov
in
jge
movsb
les
imul
or
adc
pop
xchg
out
push
lock
fcomps
rorb
lods
insb
into
mov
pop
fs
xchg
cmp
add
iret
xor
movsb
cmp
decl
xchg
call
and
sbb
ja
mov
dec
sbb
das
inc
je
out
add
xchg
sub
pop
cmp
add
pop
mov
jns
push
dec
jl
iret
aaa
out
leave
divb
stos
pop
movsb
mov
fisttps
pop
dec
sbb
mov
or
mov
dec
push
mov
imulb
adcl
roll
stc
cwtl
les
sbb
leave
ret
xor
loopne
jge
jle
push
jge
mov
in
lahf
test
mov
lods
inc
add
jecxz
bound
push
xlat
inc
and
mov
adc
repnz
and
ja
adc
in
dec
inc
pop
mov
xchg
cmpb
adc
and
or
push
test
lahf
mov
icebp
icebp
in
jno
pop
adc
dec
scas
lds
int3
call
pop
sub
outsb
insl
ret
repz
cmpb
mov
push
notb
inc
mov
fldcw
mov
pop
loop
mov
push
inc
in
js
inc
mov
aaa
dec
inc
ss
mov
cmp
xchg
jle
out
lock
mov
adc
rorl
mov
jns
adcl
std
rcl
and
and
test
inc
jno
test
xchg
mov
in
movsl
mov
jae
xchg
test
div
pop
inc
and
and
mov
sub
cltd
imul
adc
cs
push
add
xlat
repnz
mov
ss
inc
bound
cmpsb
xor
jmp
inc
lods
loop
loope
mov
cmpsb
cmp
ss
pushf
in
pop
rcrb
mov
mov
sub
fisttps
addb
mov
dec
pop
jb
pop
mov
shrb
and
jno
cli
stos
popa
mov
mov
cmp
mov
insb
loope
fnstenv
pushl
cli
fadd
jae
in
scas
fwait
insb
pop
mov
xor
add
stc
lds
clc
sub
dec
sbb
jne
mov
xchg
pop
mov
outsb
pop
pop
cmp
inc
stc
scas
ja
cltd
outsb
sbb
mov
popf
jnp
ficomps
bound
mov
in
out
cmpsl
gs
ret
sub
mov
adcl
dec
jne
loop
test
orl
pop
xchg
data16
xor
mov
push
lods
cmpsb
sbb
or
mov
lock
xor
arpl
test
push
insb
jmp
push
push
sbb
mov
out
jne
cmpsb
xchg
jb
repnz
movsl
fs
adc
mov
pushf
push
icebp
dec
mov
add
fcoml
sbb
or
or
pushl
fadds
mov
je
xor
stos
mov
in
sbb
into
cmp
das
or
fnstsw
insl
xchg
ja
leave
dec
loop
sub
push
int3
push
xor
cmpsl
out
orl
or
push
out
xor
mov
cltd
mov
xor
movsb
add
lods
add
add
iret
rcl
fisubrs
mov
shrb
mov
xchg
outsb
dec
ficompl
adc
adc
xor
xor
jno
lock
pushf
sbb
xchg
xchg
sub
dec
fcompl
lock
dec
nop
movsb
jecxz
clc
hlt
jns
cmpl
push
cmp
add
fidivs
and
jl
and
loop
and
add
les
sub
mov
push
inc
out
xor
in
cmp
mov
and
notl
xchg
aad
add
dec
inc
sbb
imulb
inc
enter
int3
sbb
pop
rorb
mov
mov
cmc
pop
mov
push
pop
jp
cmp
mov
lret
cmpsb
mov
mov
xor
or
push
inc
ljmp
jno
shl
sbb
xor
and
jnp
scas
mov
rcll
shrl
cltd
arpl
mov
lret
add
adc
mov
cs
shrl
call
inc
aam
pop
add
xchg
push
or
loop
fildll
jecxz
push
mov
fstp
mul
movsb
sarl
movsl
es
lds
cld
xorl
mov
add
iret
rclb
adc
jne
and
add
pop
ljmp
mov
sbb
bound
mov
setns
jns
ds
cmpsb
or
loop
dec
jg
inc
dec
repnz
push
and
xchg
or
subb
movsl
sbb
pop
dec
insb
addr16
or
les
pusha
testl
insl
sbb
xchg
mov
cld
push
lods
xchg
xchg
imulb
test
adc
or
adc
in
enter
mov
call
loopne
cvtpi2ps
xor
enter
stc
pop
and
aad
jno
popf
rorl
jg
add
add
mov
sbb
adc
or
push
shl
addr16
lret
dec
jb
ja
mov
dec
icebp
test
rorl
push
inc
inc
popf
dec
add
jl
push
xor
xlat
jge
mov
push
cmp
cmc
inc
test
xchg
lods
mov
call
les
ss
push
push
xor
aad
xchg
xchg
ss
xchg
mov
mov
lods
dec
testb
jne
lahf
xor
cmp
pop
repnz
shlb
aam
inc
xchg
jbe
stc
jl
mov
pop
or
xchg
data16
xor
sti
mov
mov
inc
add
fdivr
pushf
imul
gs
mov
test
and
mov
stos
outsb
ss
mov
adc
inc
lock
fistpl
push
mov
ds
pop
push
call
jae
repz
and
in
loop
mov
mov
lds
inc
divb
push
rcrl
ja
sbb
xchg
sbb
jno
xor
mov
cli
in
mov
cmpsb
lds
call
mov
jmp
into
cwtl
test
push
insb
jmp
fwait
add
popa
mov
les
cmp
and
push
jl
inc
gs
push
sub
shl
pusha
int3
sbb
add
add
add
add
xor
cmp
shll
add
roll
mov
repnz
xchg
or
mov
mov
mov
xchg
ja
ja
cltd
fdivrl
push
dec
mov
sub
sub
push
cmp
cmp
addr16
sahf
mov
scas
lds
pop
xchg
mov
or
test
sub
push
cltd
daa
cmp
jge
adc
je
stc
xchg
cmpsl
hlt
or
jge
mov
jmp
mov
sbb
xlat
inc
dec
outsl
inc
pusha
cmp
sub
sbbb
icebp
int3
mov
inc
ljmp
stc
std
inc
xchg
call
jb
and
sub
mov
sar
mov
lods
xchg
lahf
out
push
mov
cmpb
sub
movsb
pop
xchg
mov
gs
les
push
add
idivb
dec
movsb
mov
mov
mov
pop
mov
cmpsl
pop
insl
int3
imul
xchg
sbb
inc
dec
repnz
aam
pop
shrl
dec
push
inc
dec
movsl
daa
xchg
subl
inc
in
mov
ds
insl
sti
cmp
mov
subl
push
push
fistpl
clc
pop
push
jb
imul
jcxz
lcall
mov
pop
push
adc
ret
add
ret
ds
pusha
cmp
or
pop
jae
sbb
sub
mov
ja
jecxz
xor
sarl
fadds
cmp
mov
mov
aas
and
jmp
test
leave
fsubl
add
sar
mov
or
xchg
in
mov
into
add
rorl
dec
add
hlt
ss
mov
xchg
arpl
push
test
inc
dec
call
sbb
sub
es
xchg
mov
hlt
imul
inc
adc
mov
jle
push
inc
xor
cli
jmp
or
adc
xchg
scas
testb
icebp
push
adc
dec
xor
xchg
lds
lods
rclb
es
xchg
mov
lret
jno
ret
gs
jecxz
scas
or
divl
sub
push
cmp
subb
dec
push
cmp
test
mov
out
adc
and
pop
divl
daa
daa
and
dec
sub
idivl
xor
inc
shrl
icebp
mov
pop
test
ljmp
pop
xchg
fwait
inc
fwait
mov
inc
fistps
add
insl
and
xor
xor
adc
out
mov
mov
mov
cwtl
add
mov
int3
hlt
dec
jp
and
push
dec
adc
mov
sub
add
fwait
js
repz
insb
in
mov
inc
int
mov
movsl
jne
or
jbe
pop
aam
mov
movsb
in
stos
adc
push
jl
mov
add
fcompl
loop
hlt
mov
jne
imul
sub
negl
inc
push
loopne
lods
das
stos
mov
mov
cltd
int
xor
mov
sub
xchg
mov
dec
sbb
push
andb
sahf
push
push
and
aam
les
cli
dec
push
ret
mov
jge
cmp
in
aas
adc
add
lods
add
add
fcmove
push
pop
sbb
jnp
or
dec
adc
roll
fsts
cmp
repnz
pop
scas
cmc
arpl
std
cwtl
jbe
int3
xor
dec
insl
jno
mov
mov
mov
inc
and
mov
add
call
dec
fs
push
inc
stc
dec
add
mov
sbb
lods
shlb
cmp
xchg
pop
stc
jge
mov
dec
xchg
adc
xchg
pop
iret
jns
idivl
mov
mov
icebp
dec
in
cmpl
jb
in
mov
imul
pop
xchg
jl
inc
lea
gs
jecxz
jl
std
jp
shlb
xor
push
push
popa
inc
cwtl
mov
nop
jo
push
sbb
mov
and
repz
aad
dec
xchg
push
cmpsl
fsubs
lret
enter
test
mov
popf
das
pop
cmp
fistpl
lret
push
xchg
or
mov
add
push
sub
test
mov
pop
loope
shl
loope
outsb
xchg
fstpl
adc
je
add
adc
cmp
dec
int3
inc
pop
dec
mov
fwait
jp
not
cmp
pushf
dec
sbb
or
rol
sbb
sub
shlb
push
cmp
or
dec
push
rorl
unpcklps
add
std
xchg
test
jnp
jno
mov
or
xchg
or
cmp
pop
dec
aaa
push
aad
push
ds
and
and
pop
fsubr
push
push
in
lock
ds
sti
jg
fs
test
loop
jne
fmul
test
mov
dec
dec
lods
xor
add
shll
shrb
cs
mov
cs
stos
jle
lret
pop
stos
sbb
loopne
cli
scas
loopne
imul
xlat
adc
mov
adc
pop
loopne
cmpsl
mov
push
or
outsb
stos
push
adc
mov
push
adc
outsl
dec
pop
repnz
inc
mov
jl
jmp
repnz
or
jg
add
xchg
aad
jne
ret
das
xor
pop
inc
test
mov
ljmp
sub
jb
out
jecxz
jmp
pop
mov
push
insb
insl
ds
sbb
mov
inc
cmp
aam
hlt
inc
cmp
fists
pop
rorb
fisubl
and
xchg
xchg
or
movl
out
movsl
adc
mov
test
stc
out
mov
xchg
push
out
cs
in
test
mov
shll
cltd
sbb
cmp
sub
mov
stos
sbb
and
or
js
cltd
cs
dec
repz
inc
inc
lods
sbb
imul
les
add
fwait
rol
sub
and
nop
and
adc
mov
cmp
popf
xor
popa
aad
adcb
cmpsb
mov
imul
dec
aad
xor
in
inc
pop
pop
idiv
aad
enter
hlt
adcl
call
scas
aam
or
movsb
push
xchg
cmp
push
pushf
cwtl
inc
mov
int
aad
cmp
je
mov
imul
rclb
add
subps
sbb
in
jmp
lahf
jle
stos
xchg
inc
scas
add
lods
add
add
mov
lret
out
push
andl
jle
inc
mov
insl
pop
mov
xchg
ret
pop
or
add
add
aas
jmp
mov
in
inc
je
adc
iret
dec
push
xchg
fwait
mov
mov
fistpll
lock
into
sbb
test
shll
mov
rolb
jb
or
push
arpl
jb
inc
jg
xchg
arpl
lea
jae
pop
in
inc
and
inc
xor
frstor
jl
mov
enter
mov
xchg
sbb
pushf
adc
roll
xor
notl
or
dec
test
leave
in
dec
adcl
subl
hlt
es
loopne
cmp
lods
jbe
insb
lods
pop
cltd
and
pop
push
push
add
out
lea
das
roll
dec
dec
mov
sbb
fs
push
xchg
lret
ja
or
jnp,pn
lret
hlt
pop
xchg
sub
jo
leave
shr
add
adc
pushw
pop
adc
xchg
lret
rorb
fxch
aam
xchg
lods
out
shl
sub
dec
int3
push
dec
cltd
adc
cs
cmp
inc
sahf
sub
lock
mov
xchg
and
add
in
push
pop
sub
jl
lds
enter
cld
sbb
out
pop
shl
aad
mov
pop
rclb
inc
je
loopne
jge
push
push
push
mov
pcmpgtd
lahf
fwait
xor
in
adc
push
push
neg
sahf
and
out
cld
outsl
shlb
dec
sbb
aam
and
pop
mov
popf
rorb
enter
add
xchg
popf
xor
push
mov
xlat
stos
cmp
insl
cmpsb
push
lock
mov
xchg
call
add
aaa
out
xchg
jmp
out
ss
fldt
mov
sbb
adc
pop
push
fcoms
push
push
out
iret
sub
arpl
lea
pushf
pop
cwtl
push
ficomps
repnz
push
add
loop
fcom
cmpsb
and
sub
repnz
push
push
movsw
or
rsqrtps
pusha
enter
insb
jl
push
out
pop
inc
and
mov
mov
inc
jle
inc
mov
inc
fadd
lods
dec
lcall
inc
pop
out
int3
daa
out
scas
daa
inc
repnz
xchg
lahf
mov
js
enter
and
inc
in
mov
push
or
cmp
pop
repnz
add
jno
js
in
and
repnz
pop
dec
jne
clc
push
mov
mov
int
in
mov
cmp
mov
push
shl
or
adc
cld
push
adc
lods
mov
in
dec
inc
sbb
les
push
cvtpi2ps
mov
daa
xchg
sti
sub
js
insb
arpl
lea
insl
dec
jmp
push
sub
inc
in
cld
xchg
cmpsl
daa
fiaddl
ljmp
enter
push
or
aam
std
dec
rolb
pop
jno
push
pop
and
repz
push
mov
lock
mov
pop
cmpsb
push
xor
mov
inc
pop
add
pop
and
and
lods
pop
mov
mov
and
mov
fidivrs
in
loopne
test
iret
xor
cmp
dec
data16
dec
loopne
faddl
sub
push
cmp
pop
hlt
lds
add
add
mov
decl
mov
out
ss
icebp
mov
add
pop
or
mov
mov
jno
or
sbb
mov
outsl
scas
push
xorl
inc
test
inc
sbb
push
xchg
subl
jnp
xchg
adcb
add
daa
je
dec
pop
aad
rcrb
push
aad
fwait
cmp
sbb
mov
sub
cmp
sub
xor
scas
adc
stc
pop
das
push
mov
add
sub
mov
mov
pop
dec
push
sub
lods
fidivrs
and
mov
jecxz
ss
in
cmpl
adc
lds
mov
pop
inc
xor
in
aas
adc
xor
ror
clc
add
mov
fs
or
hlt
iret
mov
inc
dec
mov
jge
push
mov
fistpl
jle
in
call
testl
das
into
fsubl
mov
xlat
cmp
cmpsb
add
mov
fsubs
mov
bswap
mov
jl
lret
je
btcl
xorl
adc
fdivrp
sbb
and
lret
push
jne
or
inc
cmp
test
mov
jae
inc
es
out
pop
inc
jecxz
mov
jecxz
add
stc
adc
lahf
jb
xor
sti
jge
mov
xchg
dec
jl
cmp
test
mov
in
jnp
shlb
aas
xchg
mov
push
and
or
pop
mov
mov
movsb
loop
pop
mov
int3
adcl
loope
int3
xor
xor
sub
inc
repnz
mov
repnz
pop
xchg
cmp
cmpsl
out
inc
push
outsl
pop
cwtl
xchg
cmp
cmp
push
lcall
jae
mov
or
push
lods
cmpsb
aas
pop
dec
fisubrs
loop
sbbl
mov
mov
out
inc
jmp
les
mov
lds
pop
aaa
insb
pop
test
jo
ret
mov
subw
xchg
cltd
mov
inc
jno
inc
add
mov
pop
ret
rcr
negl
inc
inc
mov
sahf
hlt
xor
lret
adcl
sub
push
pop
xor
xchg
push
xchg
out
fstpt
lcall
add
xor
cmpsb
pop
sbb
test
fdivl
popa
and
dec
xor
in
push
dec
push
mov
shlb
aam
arpl
and
sbb
mov
mov
push
loop
adc
sbb
sub
cmpsl
sarl
push
pop
fdivrl
push
repz
rcrl
xlat
fisttpll
jge
xlat
imul
ret
in
xchg
std
out
cmp
out
in
fwait
leave
xor
sbb
divb
orl
xchg
inc
not
dec
cmpl
subl
or
shlb
mov
mov
mov
or
xor
outsb
arpl
push
inc
es
and
inc
pop
fwait
cmpsb
sbb
scas
lahf
iret
mov
xor
pop
test
aam
jno
pop
lret
lahf
or
outsb
ss
dec
inc
lds
add
sub
mov
mov
pop
xlat
dec
mov
shrb
cmpsb
inc
push
loope
adc
pop
jo
inc
fmull
add
add
lret
xorb
icebp
lret
aam
imul
out
aad
popf
mov
add
xchg
sub
push
adc
popa
inc
imul
fwait
gs
flds
daa
xchg
mov
sub
mov
xor
adcl
and
pusha
andl
out
ja
enter
adc
fwait
sub
icebp
and
clc
and
andb
decl
sub
sbb
aad
incb
jno
xor
dec
pusha
lea
jp
push
movsl
inc
lea
push
hlt
xchg
in
lret
rorl
cmp
stos
nop
push
pop
bound
adc
inc
jbe
ljmp
repz
jnp
mov
pop
pusha
mov
xchg
orl
pop
inc
jecxz,pt
icebp
inc
sti
cmp
enter
sbb
push
jmp
jg
push
mov
jbe
addr16
fucomip
ja
dec
sub
mov
dec
push
cli
pop
cltd
repnz
int
es
cmc
stc
testb
mov
mov
xor
dec
mov
cltd
out
xchg
jae
jg
or
ljmp
test
testb
in
push
adc
mov
inc
mov
sbb
jmp
push
aad
dec
sbb
jb
jmp
push
sbb
data16
in
stos
mov
std
push
inc
add
adc
sbb
stos
icebp
cmp
sti
inc
mov
sub
sarb
sub
and
into
lods
pop
or
jae
pop
bound
cmpsl
cmp
lret
inc
out
popa
leave
mov
cmp
pop
inc
iret
sbb
dec
and
xor
leave
cli
push
stos
mov
push
adc
xor
mov
shl
sbb
xlat
sub
sub
inc
loope
icebp
or
cmp
jmp
lea
xchg
shll
addr16
fists
cmp
lcall
xchg
and
mov
push
into
mov
and
das
in
sbb
sbb
mov
mov
xor
jle
xor
dec
inc
ret
test
in
cmpsl
dec
imul
mov
insl
jb
fmuls
sbb
push
push
jge
pop
jecxz
std
jecxz
sahf
test
lret
push
divb
out
push
jo
lds
jl
push
aad
fmuls
inc
jecxz
inc
bound
inc
push
aad
lret
add
cmp
lahf
loopne
mov
jne
int
mov
out
or
sub
call
lods
in
sub
cmp
filds
push
fdivs
xor
nop
xchg
test
dec
xchg
dec
and
andb
pop
mulb
outsb
ret
lcall
xor
xchg
test
cmp
push
xchg
xor
dec
xchg
andb
bound
or
mov
sahf
es
fidivrl
xchg
scas
rcll
dec
sub
sbb
push
ja
cs
popf
add
rorl
aas
mov
pushf
push
push
mov
push
add
push
rclb
sbb
xor
loope
mov
jge
test
std
test
sar
adc
aam
dec
mov
pop
xor
mov
sbb
jno
jnp
ds
out
lret
add
or
cmp
cmc
xor
mov
insb
loopne
jnp
das
test
int3
gs
xor
dec
and
clc
inc
push
into
cmp
add
mul
lahf
jp
jp
in
sarl
jmp
dec
mov
add
cmp
mov
add
pop
cmpsl
jnp
scas
xchg
mov
push
insb
push
push
addb
jle
push
xchg
sbb
xor
loopne
xor
shr
cmp
pop
addr16
hlt
sbb
cmp
jo
es
cmp
js
push
mov
dec
paddusb
out
fdivrl
mov
cmp
xlat
ljmp
dec
dec
cmc
pop
loope
pop
sub
imulb
push
std
xchg
cmp
data16
xor
test
sub
lock
test
push
jbe
cmp
es
ljmp
and
or
mov
aad
nopl
loope
add
adc
xchg
cmp
dec
push
pop
sbb
add
mov
out
or
js
movsb
rorl
inc
call
xchg
mov
sbb
pop
das
pop
push
and
mov
inc
in
bound
incl
jno
push
addr16
and
push
rcrb
push
sub
imul
rclb
jbe
ljmp
filds
out
mov
lea
xchg
jp
sarl
stos
je
xchg
lods
lods
and
mov
cmpsl
xchg
ret
aad
aas
pop
out
nop
std
push
repz
jmp
cmp
inc
mov
hlt
sbb
imul
sub
or
lea
push
mov
jo
pushf
jge
loop
inc
out
mov
xchg
in
in
xchg
mov
rcr
jbe
inc
aas
xchg
fcomip
stos
pusha
push
add
imul
xor
mov
add
pusha
dec
pop
fldcw
add
pop
inc
cmp
jo
inc
xchg
daa
cli
aaa
fnstsw
loope
xor
das
sub
pop
setb
mov
nop
fwait
pop
iret
mov
pop
cmp
sub
or
aaa
jecxz
out
cltd
ret
dec
or
xchg
sub
jnp
pushaw
enter
in
jle
cwtl
inc
xchg
fwait
das
popf
mov
or
cmc
es
addr16
test
rorl
stos
dec
ret
into
or
or
push
push
add
cmpsb
movsb
jo
inc
sub
in
sub
inc
mov
loop
jge
xor
sub
orl
data16
jno
push
cmp
mov
data16
jge
jo
ficomps
push
int
ljmp
sbb
or
hlt
jecxz
mov
outsl
mov
mov
rcrl
adc
repz
jns
dec
dec
or
lcall
xchg
mov
or
cmp
out
in
imul
sub
popf
shlb
mov
add
lods
ror
jb
pop
sahf
mov
filds
mov
push
leave
repnz
xchg
test
mov
ja
jne
in
mov
and
pop
mov
mov
or
mov
add
xchg
dec
push
and
and
push
pop
js
inc
movsb
adc
popa
pop
int3
nop
and
xchg
mov
xor
mov
xor
ret
int3
jno
test
mov
mov
sbb
dec
shl
pop
mov
lcall
leave
mov
cmp
gs
pop
xchg
aad
cmp
fdivrs
and
mov
inc
sub
idivl
or
jmp
mov
test
popa
std
cmpsb
xlat
mov
incl
or
imul
lahf
push
jl
dec
pop
pop
cmc
fcomip
mov
add
sbb
popa
mov
into
lea
stos
dec
pop
mov
daa
push
cmpsl
mov
cmp
mov
leave
sbb
mov
loopne,pt
mov
dec
mov
lret
pop
mov
or
jl
mov
insb
lret
push
xchg
ljmp
add
and
iret
test
jnp
xor
mov
hlt
jbe
mov
int
imul
sub
pop
dec
xchg
lea
and
sub
out
add
add
sarb
push
sub
pop
cld
xchg
bound
popf
scas
into
pusha
or
cltd
add
cmp
shll
sbb
shl
jnp
lods
outsb
cli
cmp
es
in
push
js
xor
pop
xor
rorb
add
xchg
cltd
sbb
inc
in
mov
aas
sub
shrl
mov
scas
and
ret
cmp
jo
dec
push
push
shlb
fcomip
hlt
inc
nop
mov
adc
mov
xchg
adc
mov
fdivrl
pop
add
repnz
call
jle
arpl
push
sub
xchg
outsb
add
mov
or
xchg
out
jge
das
outsl
lds
pop
daa
loop
les
iret
cmpsb
sbb
stos
jnp
jecxz
add
mov
and
aam
fs
int
mov
clc
mov
push
push
mov
xchg
cltd
ja
ss
cmp
lahf
jl
fisttps
xor
sbb
xor
aas
in
rcl
cmpsl
pop
repnz
clc
xor
cltd
cltd
mov
sarl
lret
mov
stos
jmp
push
cmp
xchg
and
outsb
push
push
adc
clc
stos
out
sub
xchg
sbb
push
and
imul
xchg
es
lcall
push
iret
or
movsb
es
popa
xchg
pop
cvtdq2ps
out
jp
lcall
aad
add
sti
or
mov
inc
subb
and
cli
pop
hlt
cmpsb
xchg
rorl
inc
xchg
sub
popf
and
sbb
lea
in
push
into
nop
sbb
push
sti
mov
pop
xchg
mov
dec
inc
imul
mov
jp
test
fadd
adc
call
jmp
test
mov
push
mov
xor
daa
mov
cmp
and
test
addr16
cltd
inc
sub
inc
les
mov
or
arpl
sub
sub
notl
es
fstpt
push
xchg
incl
addr16
cld
movsl
lea
mov
sti
repnz
imul
adc
cwtl
dec
push
aad
cmpsl
or
xchg
mov
or
or
dec
and
test
cmp
cwtl
aad
mov
ljmp
jne
into
sbbb
or
dec
clc
or
xor
fists
addr16
ljmp
in
rcr
sub
in
or
fnstenv
sub
and
dec
popa
adc
mov
pop
xorl
cld
imul
jb
push
dec
repnz
popa
out
inc
inc
psrld
std
subl
test
and
stos
jle
xor
insl
push
xchg
outsl
jb
rclb
out
movsb
lcall
pop
pop
arpl
add
mov
mov
cs
fistps
push
push
mov
mov
cmp
rcrb
mov
roll
lods
add
add
xchg
adc
sahf
fwait
sbb
xlat
fs
ret
repz
fs
sbb
in
lds
cld
lret
sub
in
sub
sbb
adc
cmp
jmp
mov
insl
or
fmull
xchg
sarb
test
cltd
popf
out
test
mov
mov
xchg
push
adc
fnstsw
add
mov
mov
pusha
jne
ret
cli
jl
adc
push
test
inc
push
lods
pop
int3
mov
sub
dec
add
inc
xchg
mov
sarl
lock
jb
jnp
mov
sbb
jo
es
jno
orb
pop
sub
add
mov
mov
sbb
cmp
into
stos
leave
stos
jnp
ret
call
gs
aam
cwtl
xchg
sbb
push
mov
imul
fidivrs
icebp
jae
pop
ss
push
mov
add
aaa
cmc
adc
push
repz
mov
pop
enter
ret
cli
jg
xchg
dec
push
and
xlat
inc
sub
mov
fisubs
sarb
mov
jp
jo
test
jg,pt
xlat
leave
cmpl
and
cmp
dec
pusha
mov
pop
xchg
push
fnstsw
adc
cmp
mov
jo
cld
mov
xchg
xchg
and
pop
cmpsl
push
sti
adc
xor
cmpsl
inc
shr
in
mov
fwait
addr16
arpl
add
inc
cmp
fdivl
sub
xchg
push
push
inc
xor
mov
fstpt
int3
sbb
stos
mov
mov
cmpsl
push
addr16
or
inc
pop
rol
test
js
jns
gs
and
flds
pop
aaa
sbb
xchg
test
out
aam
inc
mov
movsl
cmp
jo
sti
data16
xor
mov
xchg
imul
fcomip
xchg
sahf
sub
jae
rcrb
sahf
in
addb
imul
fs
mov
cmp
fildl
stos
jge
frstor
xor
cld
sbb
je
xchg
aaa
pop
lret
xor
stos
pushl
mov
and
fildll
lahf
sti
mov
or
push
inc
add
push
repz
sub
test
lret
mov
and
in
pop
mov
inc
inc
sub
or
and
xchg
xchg
jecxz
push
rcl
push
pushf
mov
icebp
sub
xor
arpl
dec
mov
jge
push
les
mov
mov
mov
or
pop
and
add
add
jle
ljmp
ja
stos
dec
or
fistpll
inc
inc
ljmp
pop
fs
cmp
cmpb
push
mov
pop
in
daa
jecxz
pop
dec
fnstsw
adcb
pop
xchg
push
fwait
xor
xor
jg
add
sbb
outsl
push
and
cmpb
add
push
add
mov
pop
shll
adc
jbe
sbb
iret
inc
mov
dec
repz
pop
mov
push
aad
sbb
data16
lods
into
add
loopne
jp
push
test
mov
mov
xor
lds
add
pop
mov
mov
insl
dec
out
js
xor
mov
pop
es
sbb
xchg
rcl
jnp
nop
pop
inc
aaa
mov
shll
cli
cmp
leave
inc
in
mov
pop
add
xchg
stos
jne
sub
and
mov
push
data16
push
push
cmp
addl
fidivrs
xchg
inc
and
add
add
lret
inc
sti
gs
std
adc
sarb
or
or
sub
xchg
pop
mov
cmp
sarb
aaa
jge
jl
cmp
fstpl
jno
ljmp
sbb
std
dec
push
stos
mov
andl
ret
into
shll
xor
add
lock
int3
ljmp
fwait
std
mov
jecxz
call
or
push
add
loopne
loopne
aas
pusha
repnz
push
stc
xchg
int3
fmulp
loope
mov
or
sarl
adc
ds
sub
jge
push
jo
mov
cwtl
int3
lock
sub
push
adc
inc
pop
inc
lock
adcl
push
dec
pop
dec
outsl
lods
inc
insl
imul
in
arpl
mov
add
sbb
sbb
movsl
repz
out
and
movsl
scas
pop
and
lock
bound
add
add
shll
outsb
sub
stc
out
jl
push
cmc
insb
or
fdiv
inc
sub
fidivs
lods
xor
das
mov
cmp
insb
cli
daa
in
xchg
xchg
ret
int
xor
shlb
mov
sahf
jl
fidivl
pop
lods
push
lcall
lret
or
incl
cmp
std
push
jae
xlat
dec
add
pop
popa
in
iret
cmp
scas
loop
ss
into
pop
pop
xor
frstor
into
out
and
fcoms
mov
das
adc
jp
add
movsl
push
movsl
xchg
arpl
rcrl
pop
push
lds
test
cmp
in
pushf
pushf
pop
push
or
dec
jno
dec
xchg
sub
or
pop
or
stos
nop
mov
outsl
cmpsb
inc
inc
stos
or
xchg
test
xchg
dec
in
std
cmp
cmpl
aam
sbb
inc
jmp
ja
pop
and
leave
insl
and
sbb
hlt
clc
and
iret
sbb
push
or
loopne
es
xchg
mov
lret
loope
add
cwtl
dec
xrelease
mov
jl
int
or
insb
iret
inc
sbb
cmc
ds
xor
adcb
xchg
fs
push
int
sbb
jnp
xchg
mov
cli
aad
push
inc
add
leave
syscall
stos
test
dec
in
mov
push
popa
repz
or
adc
add
mov
pop
std
mov
jae
push
jns
dec
nop
adc
jmp
mov
mov
es
dec
pop
jno
into
fwait
enter
loop
sbbl
stc
or
lds
mov
adc
lcall
inc
loop
movsb
xchg
cs
into
pop
stos
mov
add
pop
fdivs
movsb
add
push
xor
lods
test
cmpsb
es
cld
jle
testl
imul
dec
pop
sbb
xor
enter
add
add
add
sbb
sti
push
dec
sbb
shl
imul
and
jmp
cmp
fisubrl
mov
jnp
outsl
xchg
int3
pushf
test
shl
push
int
dec
pop
call
xlat
insl
inc
sub
mov
into
mov
mov
imull
test
nop
aaa
inc
jp
jmp
mov
cmp
push
add
cmp
and
sbb
inc
into
jbe
shll
add
cmc
sub
adc
ds
stc
test
mov
mov
pmaddwd
lock
xor
mov
leave
cmc
jno
cmpsb
int3
scas
mov
je
outsl
roll
ds
repz
xor
loop
sbb
sar
xchg
insl
ss
push
push
shrl
xor
sub
std
repnz
int
xor
imul
jge
fsubrs
inc
sub
insl
jge
mov
add
repz
out
jle
mov
adc
push
add
xchg
inc
sub
sahf
push
push
add
mov
pop
mov
out
rcrl
nop
jb
xor
dec
xchg
push
xchg
or
inc
lret
xlat
out
into
fcoms
int
stc
test
movsl
in
pop
and
and
and
sbb
dec
clc
loop
jge
jmp
pop
pusha
ss
lea
shl
nop
lods
xorb
scas
ret
lret
hlt
pop
sarb
mov
xchg
imul
and
push
cmpsb
sub
fiadds
insl
inc
arpl
cli
push
aad
jg
mov
data16
into
fstpl
dec
sbb
int3
pop
xor
cmp
adc
ret
vpaddusb
inc
bound
push
push
fildll
push
and
sbb
ret
rorl
vaddpd
aas
pop
jecxz
repz
dec
jb
and
in
repnz
sbb
cmp
push
mov
dec
in
test
ret
lds
xchg
call
push
cmp
iret
cli
dec
sub
sub
xlat
cld
push
jmp
adc
bound
mov
dec
dec
xor
jge
movsb
addr16
aad
jmp
push
adc
inc
or
jae
push
xchg
sbb
ljmp
repnz
cmp
push
rclb
xlat
sti
jmp
aas
movsl
xorb
fwait
xchg
rcrl
or
cmp
out
imul
xlat
xor
add
mov
ror
mov
pmulhw
insl
repnz
out
cmpl
mov
inc
bound
outsb
or
push
jg
jmp
mov
test
mov
mov
dec
mov
jle
push
addb
paddusw
adc
sub
or
mov
test
iret
rorl
int
fnstsw
notl
and
sub
mov
mov
xor
shll
dec
loopne
mov
adc
mov
fs
cmp
cwtl
jae
and
out
mov
xor
sub
push
stos
fldenv
stc
pop
mov
push
popf
add
push
stos
fdivrl
cmc
les
push
dec
loope
fwait
sbb
push
je
dec
in
outsl
fsubr
or
jmp
push
mov
mov
xchg
icebp
jg
popa
fisttpl
mov
add
jmp
or
scas
jmp
popa
mov
or
add
add
lods
add
add
rorl
inc
mov
ja
ja
jge
call
stos
pop
jp
movsb
leave
int3
cwtl
jle
push
test
adc
mov
mov
ds
shll
in
dec
dec
int3
push
xchg
dec
jg
cmp
xlat
xor
mov
les
xchg
rcrl
test
push
and
add
dec
push
ficompl
cmp
jne
in
push
sbb
cmpsl
lahf
movl
lret
sbb
cmp
bnd
cltd
push
ss
and
jmp
cli
pop
jbe
jnp
dec
xor
xor
movsb
cmp
jmp
push
in
xchg
push
push
xor
mov
cmp
cmpsb
rclb
ljmp
lods
ja
insl
js
aam
hlt
mov
pusha
jnp
mov
or
sbb
imul
testl
adc
pop
pusha
xor
mov
pop
gs
pop
arpl
ljmp
bound
aam
setnp
mov
outsb
mov
xor
push
pop
nop
sub
mov
push
scas
jb
mov
pop
adc
sub
push
push
inc
jl
clc
lock
sbb
cwtl
push
mov
mov
jbe
cmp
testl
pop
test
adc
push
in
xchg
sub
test
jbe
cmp
clc
sbb
push
add
iret
pop
pusha
stc
pop
adc
dec
jecxz
and
rcll
aas
fcompl
fs
xor
dec
jge
push
sbb
cmp
or
xchg
fildl
or
dec
mov
push
je
mov
add
jle
push
sbb
and
out
iret
aam
xor
jnp
out
fdivl
ret
faddl
mov
out
addl
dec
sbb
cmp
pop
jo
push
jno
outsb
clc
adc
mov
shll
imul
mov
mov
xchg
fld
push
loopne
es
add
cs
or
xchg
out
stos
xchg
mov
push
sbb
nop
lret
add
das
dec
adc
pop
jp
hlt
jmp
in
add
nop
adc
jmp
test
add
pop
xor
es
jecxz
mov
mov
shlb
aad
inc
push
dec
popf
aad
mov
je
sbb
out
mov
jl
in
xlat
mov
mov
mov
sbb
sbb
fildl
sahf
jecxz
out
leave
cmc
and
sbb
pop
aas
push
cmp
les
in
dec
clc
push
or
push
pop
js
and
xchg
fnstcw
push
mov
in
das
subb
stos
xchg
pop
scas
inc
lock
shl
clc
xchg
mov
lds
aam
mov
stos
daa
bound
lea
xor
cli
xchg
out
stc
lret
sbb
lods
sub
insl
or
inc
fimuls
loop
fadds
loopne
lret
add
and
das
out
imul
or
outsb
or
lret
test
inc
inc
mov
jecxz
icebp
rcrb
sahf
mov
push
pop
cs
add
xchg
dec
pop
sahf
mov
pop
pop
stos
adc
mov
mov
jae
add
mov
jle
sbb
cmp
je
jne
imul
ljmp
add
add
add
add
test
push
cld
mov
push
rolb
add
xor
or
pop
inc
xor
cmp
sub
or
sbb
dec
mov
adc
lcall
pop
sahf
imul
cmp
nop
add
mov
cmp
jo
xchg
push
movsb
cmpsl
daa
movsl
mov
dec
sub
popf
test
das
xchg
sbb
mov
testl
cmpsl
and
lret
cmp
xchg
lcall
in
ds
push
movq
fsin
das
mov
in
pop
in
xchg
sub
rolb
sahf
vshufps
jns
jo
adc
andl
aaa
jg
sarl
add
rorl
cltd
jae
movsb
outsl
gs
repnz
cmp
mov
push
movsl
popa
insb
jno
jo
push
jbe
sub
inc
mov
ljmp
inc
clc
push
adc
dec
leave
xor
pushf
loopne
push
mov
ja
xchg
and
in
cmpsb
pop
ror
das
inc
mov
out
xchg
daa
add
fldenv
rcrb
pop
cld
or
ret
jne
sub
adc
pop
pop
mov
push
pop
scas
mov
pusha
out
mov
cmp
jge
je
and
aad
in
imul
dec
enter
adc
xchg
aad
mov
and
out
nop
inc
lret
pop
out
cmove
loopne
aas
popa
aam
cld
xchg
in
mov
inc
ds
fcmove
inc
add
dec
sti
loope
inc
xor
inc
add
mov
lcall
push
aaa
push
enter
fistl
and
mov
popa
push
call
dec
dec
pusha
adc
stos
add
mov
notrack
out
jne
and
imul
mov
adc
sbb
lret
mov
lods
mov
aad
shll
movsb
xor
loope
mov
xor
rorl
mov
xchg
mov
insb
incb
jecxz
mov
sub
stc
ret
inc
xor
jg
cmp
and
inc
imul
mov
cltd
testb
push
movsl
imul
rcr
movsl
add
out
stos
fst
inc
fs
popa
pop
pop
sbb
lret
xchg
and
pop
mov
adcl
or
repnz
pop
ljmp
cltd
movsl
into
or
or
jns
push
repnz
test
dec
sub
loope
das
ljmp
sub
xchg
lret
jl
mov
xorl
fs
push
push
lock
movsl
add
mov
sbb
mov
cwtl
lods
cmpsb
mov
inc
rorb
adc
out
repnz
sarl
inc
inc
jmp
jp
hlt
divb
push
sbb
int3
pop
mov
xchg
scas
sahf
push
inc
add
icebp
pop
imul
push
lods
add
jo
xor
lret
push
fwait
arpl
test
into
add
jnp
xchg
scas
push
movb
popf
adc
in
add
fnsave
mov
mov
push
cli
orb
inc
ret
cmp
rolb
sbb
mov
loop
fwait
sub
out
bound
js
out
sarb
fidivrl
xor
pop
push
leave
popf
lret
popf
pop
xlat
loope
fs
sahf
mov
lods
add
add
fisttps
mov
lea
clc
test
mov
lods
jno
imul
fdivrl
xchg
cmp
ljmp
stos
pop
cmpsl
movsb
adc
js
imul
cwtl
mov
enter
add
out
fucomip
mov
test
fcmovb
std
sub
aaa
lods
fs
xchg
js
adc
or
mov
cmp
mov
movsb
lret
mov
mov
fiadds
xor
popf
push
sbb
cmpb
scas
ljmp
dec
mov
mov
std
push
pop
and
aad
pop
sbb
pop
hlt
ljmp
mov
mov
fistl
or
inc
xchg
jp
jmp
xchg
and
or
sbb
into
pushf
pop
ret
xlat
add
fcmovbe
ja
and
mov
shlb
repnz
cmc
xor
out
jg
sbb
movsl
adcl
clc
fucomp
mov
push
mov
mov
cli
mov
js
pushf
xchg
jg
dec
xor
push
in
or
sbb
jecxz
pop
mov
jnp
addl
dec
es
das
dec
test
jg
adc
add
sbb
das
inc
enter
push
in
out
xchg
and
pop
iret
cmp
mov
aas
enter
pushf
insl
lahf
or
or
jg
movsb
aad
ja
testb
icebp
movsl
fs
and
xchg
imul
fucomip
std
xor
cld
cmp
cld
push
add
xlat
mov
pop
mov
imul
int
movsl
lcall
andl
mov
adc
in
aas
pusha
loope
add
jns
adcb
xor
dec
rolb
jo
mov
ja
subb
inc
shlb
xlat
jb
in
mov
test
inc
pop
pop
push
cmp
inc
scas
dec
in
add
int3
les
in
dec
pop
hlt
orl
jl
out
jne
sub
lods
popf
out
dec
jbe
pop
or
cld
pop
mov
aaa
cmp
xor
out
stc
movsl
mov
xor
sub
cmpsl
clc
or
sub
mov
sbb
push
insl
pop
imull
inc
dec
add
lret
gs
inc
insb
or
mov
sub
sbb
loopne
adc
aam
rolb
inc
andb
fdivs
sbb
fmuls
push
pop
mov
pop
mov
jecxz
xlat
or
sub
and
mov
loopne
nop
push
sbb
enter
cmpsl
push
sbb
mov
jecxz
das
loope
add
enter
nop
fmul
lods
jmp
push
hlt
add
xchg
pusha
jae
stos
shl
mov
test
cltd
cmp
pop
mov
mov
jae
add
sbb
clc
mov
pushf
inc
sub
pop
mov
xor
pusha
decb
mov
lea
loop
dec
mov
mov
push
or
out
aam
mov
mov
pop
cmpb
xchg
xchg
mov
imul
lcall
cltd
andb
movl
int3
out
xorl
jmp
adc
orl
imull
xor
mov
xor
mov
insb
fadds
add
add
call
pop
out
dec
pop
popa
sub
sub
lods
add
add
push
and
mov
imul
lea
jo
shrb
addr16
fildl
test
lds
add
dec
dec
adc
push
mov
inc
jnp
cmp
adc
cmpsb
mov
lea
and
push
push
stos
outsb
divb
fwait
insl
daa
in
add
pop
cli
lcall
je
scas
add
je
pusha
push
dec
add
pusha
mov
xor
pop
sub
jns
adc
jae
push
es
iret
sarb
popf
jge
rorb
or
push
arpl
or
imul
dec
sbb
push
cmpsl
fcoml
faddl
xchg
adc
in
repz
push
pop
sbb
lcall
stc
into
and
popf
ss
xchg
rcrl
and
jo
ficompl
dec
dec
mov
dec
adc
inc
dec
jne
or
add
lock
and
movsl
shrb
xor
stc
pop
sub
jge
cli
pop
dec
aaa
dec
jno
or
lahf
ffree
mov
out
jg
add
xlat
ljmp
mov
push
dec
inc
aaa
push
lahf
push
lret
or
push
fs
icebp
jb
dec
out
pop
sbb
xchg
mov
sbb
ret
mov
aad
lahf
xchg
scas
jle
sub
jmp
xlat
imul
jp
lods
dec
call
inc
insb
and
hlt
leave
dec
mov
movsb
scas
stc
cmpl
out
xor
cmpsl
outsl
lock
xchg
push
hlt
daa
daa
xchg
pop
fdivrs
lret
jno
pop
sbb
jg
dec
xlat
arpl
sub
hlt
pop
lcall
movsb
popf
popf
std
jge
add
gs
call
lret
mov
mov
sub
cli
lock
push
inc
insb
cmp
pop
rclb
jle
pop
xor
imul
dec
push
clc
pop
adc
in
mov
sub
pop
rorl
pop
lods
popl
outsb
dec
xchg
mov
cmp
adc
pop
loop
das
lods
outsl
and
out
xor
scas
jl
loop
ss
shrb
jb
xor
scas
push
pushf
and
mov
sub
mov
int3
xchg
imull
or
push
repz
add
lds
xchg
mov
jge
addr16
test
mov
xor
in
push
and
std
cltd
dec
js
lcall
add
jae
xor
inc
rclb
lods
aam
dec
cwtl
xor
mov
xorb
jp
xchg
leave
mov
sbb
cwtl
push
shll
xchg
jg
adc
jns
inc
push
push
or
ret
sub
jle
xor
sbb
sub
mov
out
cmpl
mov
sarl
jmp
xchg
and
aad
lods
cmpsl
mov
pop
xchg
pushf
in
lods
std
inc
cmc
mov
xchg
adc
push
test
xor
ja
call
ret
xchg
push
mov
call
adc
mov
mov
pop
es
cmp
repz
divb
mov
dec
into
push
mov
cmp
mull
mov
fdivrs
add
mov
push
leave
mov
data16
xlat
or
enter
imul
daa
pushf
jnp
imul
add
loop
push
data16
decl
std
or
fs
push
fildl
add
stc
sub
addr16
lret
xor
movsl
mov
mov
dec
shl
fsubrs
cld
iret
data16
shll
push
mov
lods
les
add
xchg
ja
cmp
dec
add
iret
dec
pop
xor
into
stc
sti
mov
and
test
xor
mov
adc
sti
and
test
add
dec
adc
or
cmp
sub
jne
cltd
pop
rcr
imul
das
xchg
inc
leave
cmp
mov
imul
cmp
mov
inc
pop
xchg
shrl
es
push
and
ljmp
add
out
xchg
mov
adc
jae
xchg
ljmp
jns
dec
into
sub
rep
mov
jbe
cmc
aaa
imul
add
pop
ret
aaa
xor
stc
xchg
nop
sbb
addr16
and
lcall
add
xorb
or
test
push
push
bound
in
dec
push
dec
call
xchg
int3
aaa
mov
popf
cmp
pop
cltd
testb
push
mov
sbb
add
ja
pusha
fbld
mov
cmp
sub
jo
push
jb
sub
adc
inc
pushf
fidivl
in
sub
dec
cmp
cmpsl
lret
xor
lcall
xlat
fiadds
mov
and
or
inc
fidivs
jle
lods
stos
jne
xchg
sbb
cmp
mov
pop
into
dec
scas
outsb
jp
outsb
cmp
xchg
push
cmp
scas
clc
rcr
mov
cmp
sbb
mov
ret
push
mov
mov
mov
pop
lea
shrl
pop
outsl
or
jmp
pushaw
sysenter
clc
rorl
cli
loope
xchg
mov
lock
sahf
pop
outsb
xchg
jmp
push
std
mov
insl
and
insl
loope
insb
call
push
xor
mov
pop
rolb
out
cli
jbe
or
scas
lret
add
add
mov
movsl
cmc
outsb
cmpsb
in
test
decl
iret
xchg
inc
imul
sub
mov
sub
and
ja
insl
roll
jl
test
in
movsl
fwait
xchg
dec
sbb
lea
dec
sbb
lret
cmp
add
insl
jo
lds
test
and
fsubrs
mov
jmp
jno
movsb
mov
push
es
inc
mov
test
ljmp
mov
adc
stos
addr16
cli
je
ss
sub
sub
push
add
xchg
repnz
push
xor
and
into
loop
dec
jmp
dec
test
fidivrs
outsl
cwtl
pop
jb
sub
pop
movsl
xchg
push
xlat
aaa
in
pop
add
pop
stos
shrl
mov
cmp
add
mov
insb
out
inc
jle
jle
cmp
or
ja
andb
xor
out
loope
jg
inc
enter
repnz
test
pop
pop
rol
sub
lret
imul
or
sbb
and
jbe,pt
xorl
fs
cli
cwtl
das
mov
ror
repnz
lret
jo
cli
ret
divb
push
scas
shl
mov
loop
push
inc
ror
rorb
rcr
fistpll
push
popa
test
inc
add
add
lods
add
add
cld
nop
sub
popa
repnz
and
test
cmp
rcr
cmc
and
mov
mov
es
aas
int3
fs
mov
cmp
jnp
inc
jb
scas
dec
mov
or
imul
lods
and
mov
test
testb
fsubrl
enter
mov
pop
and
pusha
jno
shll
mov
dec
xchg
popf
xor
cmpsl
push
push
je
xor
pusha
push
lods
xor
outsb
xchg
jae
es
pop
mov
scas
dec
jo
nop
add
dec
and
mov
pop
lcall
xchg
ds
or
lret
popf
jmp
aad
shll
mov
sbb
in
mov
add
es
stc
sub
or
out
pop
outsb
loope
mov
hlt
jl
int3
xchg
cltd
or
loop
jge
inc
test
inc
xchg
rorl
int3
lods
mov
add
in
xchg
pop
clc
mov
add
mov
jl
rcrl
in
xchg
mov
loop
je
out
cmc
bound
es
lret
loope
mov
cld
mov
popa
sar
mov
pop
out
je
push
popa
insb
scas
and
inc
or
cmpsl
pop
mov
and
jno
or
mov
jnp
mov
lock
test
fadds
bswap
cmp
pop
loope
push
xlat
dec
mov
xchg
sbb
jp
aas
test
sub
ret
inc
adc
nop
xchg
sub
add
popa
adc
js
jbe
out
pop
lcall
aad
in
jmp
mov
jmp
insl
movsl
dec
and
jo
or
add
sbb
sbb
add
xor
dec
mov
aas
sub
hlt
xchg
jns
xchg
cli
shr
in
mov
xchg
dec
pop
sbb
mov
sbb
fistl
inc
sbb
or
mov
mov
in
aad
xchg
sti
les
rcrb
ja
sbb
pop
mov
clc
cmp
push
imul
push
and
sub
sub
and
push
clc
add
push
addl
out
fstp
js
fadds
popa
stos
sbb
mov
sub
out
dec
inc
pop
xor
nop
popa
xlat
movsb
lods
lret
out
push
inc
out
and
addr16
insb
data16
mov
fs
arpl
in
lea
mov
mov
cmp
mov
divb
jmp
arpl
cmc
mov
dec
ds
psrlq
outsl
xor
sbb
push
aas
pop
push
in
gs
fwait
inc
outsb
add
lods
mov
dec
dec
repz
push
cmp
ja
xchg
lock
repnz
daa
xchg
cs
fcmove
adc
lcall
dec
adc
out
xorl
arpl
xchg
mov
and
cmpsl
test
fwait
jbe
push
mov
jp
xchg
mov
and
jno
mov
mov
lret
clc
loopne
sahf
adc
jo
in
enter
shrb
in
and
mov
xchg
dec
sub
std
lcall
add
add
add
add
lock
pushf
pusha
pushf
cld
cld
push
dec
lock
clc
shrb
add
add
das
xchg
lret
ljmp
cld
mov
cli
cmpps
mov
mov
into
mov
xor
mov
inc
mov
int3
jmp
movsb
icebp
jp
pop
dec
and
shr
mov
add
pop
mov
sbb
inc
pop
int3
shlb
nop
jp
inc
push
push
and
add
lahf
inc
push
mov
sbb
jmp
lret
insl
test
sbb
lret
mov
cltd
incb
sbb
je
lret
loope
or
fstpt
sbbb
jno
adc
insl
lds
inc
and
push
pop
adc
das
sub
push
inc
cmp
hlt
jbe
jecxz
sub
faddl
cmp
mov
stos
mov
test
and
mov
jns
out
lret
clc
inc
cwtl
sub
stc
icebp
repz
sub
mov
scas
rolb
aas
fstps
shll
fidivl
mov
dec
sbb
out
iret
enter
pop
ja
jge
inc
mov
popf
mov
test
imul
push
add
mov
cld
or
adc
jg
or
adc
icebp
and
jbe
mov
int
pop
inc
dec
sub
fdivrl
notl
lds
cmp
add
outsl
lcall
bound
arpl
shrb
push
xchg
shlb
scas
outsb
xchg
push
push
sub
xchg
lds
dec
sbb
stos
jle
mov
mov
push
daa
push
fsubrs
lcall
xchg
or
dec
mov
dec
adc
cli
jne
loopne
mov
ljmp
or
daa
or
mov
ljmp
push
sub
add
leave
andl
push
shll
xchg
mov
pop
jecxz
adc
fcmovnu
sahf
sbb
mov
lea
add
dec
mov
bound
xchg
popf
jb
popf
enter
mov
jb
mov
cwtl
jl
ret
jae
lret
rcl
ret
xchg
dec
inc
sbb
loope
cmp
fisubl
out
xchg
pop
dec
cmp
cld
in
mov
jne
mov
adc
cli
cltd
fdivrl
xorl
enter
adc
es
ret
pop
pop
js
loopne
iret
or
loop
cmp
hlt
xchg
popa
inc
cmc
adc
mov
cli
out
pop
cmc
dec
pop
cmp
push
into
scas
icebp
fstps
ficomps
scas
cli
pop
outsb
and
outsb
xchg
fcoms
push
enter
adc
fdivr
and
pop
scas
xchg
imul
add
leave
inc
cwtl
popa
sub
cmpsb
loope
test
add
mov
pop
jmp
bound
into
out
mov
test
sarl
cmp
dec
mov
sarl
push
xchg
add
push
and
out
ret
push
pop
mov
flds
in
add
adc
sub
or
bound
dec
xchg
fwait
mov
and
xchg
enter
xchg
aam
pop
mov
push
in
dec
inc
rcrl
dec
cmp
adc
pop
mov
dec
lret
xor
mov
push
adc
aas
ss
cwtl
sub
mov
push
xlat
sbbb
subb
pushf
sbb
ret
jg
mov
rolb
cmpsl
mov
add
push
mov
push
xchg
xor
push
mov
pushf
test
inc
loop
popf
and
mov
push
das
sub
inc
scas
inc
xchg
push
loopne
pop
sahf
aaa
gs
cltd
test
loop
and
stos
mov
les
mov
movsb
std
sbb
in
lahf
pop
cmp
pop
jl
stos
jle
fimuls
scas
clc
push
imul
hlt
xchg
xchg
bound
adc
mov
add
scas
sbb
mov
das
jb
lret
dec
push
pop
or
cmc
mov
cmpl
sub
data16
movsl
test
arpl
mov
mov
and
mov
jmp
push
or
movsl
mov
mov
push
lods
pop
mov
and
test
cmp
enter
fstps
repnz
inc
add
shl
cmc
aam
pushf
std
mov
jg
add
sar
stos
dec
adc
jle
mov
or
call
enter
mov
stos
pop
outsl
sti
ret
ja
testl
rcrb
add
test
je
jl
stos
scas
repnz
call
aam
xchg
push
pop
pop
movsl
mov
sbb
push
es
dec
adc
inc
pop
in
mov
inc
and
jns
fstp
inc
dec
cmp
inc
push
fistl
sbb
mov
mov
fwait
cltd
inc
mov
lods
test
aas
add
mov
fwait
movsl
outsb
pushf
into
pop
mov
aas
in
mov
popa
in
cld
xor
jbe
sbb
jle
mov
aad
iret
outsl
rcl
xchg
fwait
or
jns
or
mov
xchg
fnsave
out
daa
loope
push
cmpsl
cmp
inc
xor
and
cli
add
cs
ret
jae
mov
scas
sub
ret
std
fldt
xchg
push
mov
xlat
sub
pop
addb
dec
sub
mov
jecxz
push
sarb
lahf
push
xchg
push
pusha
andb
and
fs
sub
pop
jecxz
sub
inc
int
enter
xor
pop
sbb
loopne
icebp
mov
dec
imul
push
jnp
sub
in
daa
mov
xor
xor
jae
inc
jbe
mov
repz
jbe
fsubrs
leave
push
add
lock
cli
ds
insb
jno
aam
mov
push
pop
clc
lock
inc
mov
xchg
outsl
push
push
int3
int
or
push
adc
sti
jne
cltd
ret
call
repnz
mov
or
fiadds
aam
mov
mov
andl
scas
out
sub
outsl
mov
aas
shl
push
add
in
iret
xchg
ja
insb
push
xchg
sbb
or
testl
in
imul
cltd
aaa
loop
lock
pop
into
rclb
sbb
subb
push
bound
add
aam
inc
xor
repz
pop
lods
xlat
sbbb
jl
pop
aas
sbb
das
dec
jmp
jl
dec
or
lret
and
push
jns
pop
repnz
or
inc
xchg
dec
xchg
mov
pop
xchg
jne
ljmp
and
sbb
mov
xchg
jne
xchg
cld
push
cmpsb
rolb
addr16
out
cmp
push
fcoms
push
xchg
frstor
scas
inc
dec
lss
xor
lds
add
sub
mov
pop
ss
pop
ret
mov
adc
push
aad
push
shl
or
sar
dec
adc
and
pop
stos
dec
das
movsl
sub
cld
icebp
fdivrs
inc
js
or
hlt
push
fdivrp
mov
sbb
ds
xchg
sti
adc
mov
movsb
inc
add
xor
mov
inc
out
aam
sub
and
daa
ss
adc
inc
push
fmull
test
mov
jmp
xchg
sub
test
es
fwait
pminsw
loop
push
and
sbb
mov
fnstsw
mov
stc
outsl
mov
aas
pop
nop
push
dec
pushf
mov
stos
dec
lock
aas
push
mov
jge
xchg
add
adc
mov
out
and
xor
sub
inc
mov
inc
jo
inc
inc
adc
int3
std
cmp
ret
or
sub
xchg
arpl
or
push
les
pop
fcoml
shll
nop
popf
repnz
jge
inc
repnz
dec
je
aad
stos
mov
pusha
aad
hlt
inc
out
icebp
lahf
scas
stc
inc
mov
es
or
sbb
fidivl
xchg
movsb
inc
std
insb
shrb
xor
addr16
js
and
mov
in
xor
in
adc
lock
ja
and
in
add
orb
add
and
movsb
cmp
orl
mov
lock
cwtd
int
out
fldl
xlat
add
leave
clc
push
fcmovnu
and
dec
std
lret
lahf
jp
test
lret
hlt
lret
loop
adc
inc
test
add
lahf
js
and
divl
xor
rorl
fwait
xchg
aad
mov
rcrb
lods
sub
repz
ficompl
add
adc
and
pop
cmp
sub
iret
sti
xor
insl
jle
in
cmpsl
mov
push
inc
shlb
xchg
fsts
std
les
insl
in
pop
push
pop
ss
divb
add
sub
xor
xchg
sbb
or
les
jne
jge
mov
daa
add
test
insl
adc
add
mov
je
jnp
jae
push
fwait
push
or
mov
nop
and
rcll
pushf
cmp
push
in
lods
mov
imull
xchg
insl
jae
pop
mov
cli
cld
and
stc
cmp
stos
jp
hlt
loope
test
lock
adc
sbb
fstpt
test
mov
jb
mov
pop
imul
andb
rol
mov
movsl
jecxz
inc
adc
out
dec
xor
loop
jmp
mov
mov
stos
dec
mov
mov
sub
fisttpll
iret
mov
je
jle
xor
push
stos
shr
outsb
jo
testl
adc
pop
adc
ret
mov
add
insl
roll
fidivrs
adc
adc
cmp
daa
jle
mov
inc
ret
mov
fisttpll
sub
stos
rcrl
xchg
das
insb
iret
sub
or
jnp
and
add
stos
cs
enter
push
sub
xchg
xchg
mov
cmc
mov
shr
add
add
add
and
jg
push
adc
push
fidivl
add
add
bound
decb
push
dec
sub
pop
out
repnz
rcl
sbbb
inc
add
in
lcall
insb
push
cltd
enter
adc
scas
pop
adc
push
and
jae
cmpsl
pop
jbe
lock
mov
dec
ja
or
sbb
sub
inc
decb
xor
add
pop
pop
jae
enter
jbe
mov
mov
sbb
mulb
jo
movsl
mov
adc
mov
cld
lret
xchg
push
cmp
mov
fs
pop
jbe
pop
xchg
mov
add
in
rcll
mov
xor
fistpl
add
cmp
repnz
mov
adc
jl
outsb
jnp
sbb
repz
dec
ss
cmp
xchg
sbb
hlt
test
pop
rcrl
notb
mov
pop
mov
les
ds
loopne
add
cwtl
in
mov
inc
xor
loopne
dec
fucomi
or
cmpsb
mov
jge
jne
scas
inc
adc
popa
mov
xchg
push
lock
jns
lea
sbb
inc
nop
jbe
inc
mov
cmp
pop
sti
cmp
out
xor
jle
cld
ja
imull
pop
adc
jge
push
std
out
insl
push
in
out
inc
or
pop
es
dec
faddl
adc
loope
cs
sbb
jge
inc
movsl
in
imul
lret
fisttpl
xchg
adc
xor
in
insb
mov
stos
push
sub
mov
mov
cltd
inc
mov
insb
push
pop
mov
iret
mov
lret
dec
xor
mov
xor
sahf
decb
lret
inc
adc
jg
add
mov
ret
sbb
lret
subl
pop
sbb
or
fdivl
sub
aam
in
int
fldcw
xor
xchg
sub
jnp
gs
push
mov
scas
stc
pop
test
dec
cmp
mov
scas
pop
xor
leave
cmc
mov
jge
cmp
out
dec
fnstenv
mov
pop
mov
bound
lds
in
pusha
fmull
es
xchg
jo
pop
adc
cmp
packuswb
xor
xor
in
inc
inc
outsl
cmpsb
fiadds
addl
and
fldenv
cmpsl
jae
add
mov
pop
outsb
loopne
pop
roll
mov
jmp
jbe
dec
or
aam
rcrl
pop
push
call
loop
inc
xchg
test
mov
in
adc
pop
or
ret
pop
hlt
cs
dec
lods
dec
xchg
test
sahf
mov
ret
rclb
mov
out
mov
xchg
addl
sbb
adc
inc
xorl
rcrl
pop
gs
dec
cmp
and
pop
adc
mov
pop
loope
xor
int3
orl
scas
inc
adc
adc
pop
jle
mov
aam
lods
or
daa
add
mov
into
movsb
popf
jmp
cmc
add
dec
daa
sbb
data16
sti
outsl
jo
scas
push
mov
fwait
jg
aad
dec
je
push
xchg
sahf
dec
imull
fsubrl
loope
fdivs
imul
cmp
or
or
add
icebp
arpl
arpl
sub
sbb
jg
test
mov
mov
add
add
loopne
cmp
mov
aaa
mov
icebp
add
lods
add
add
mov
mov
or
mov
cltd
inc
xchg
adc
scas
and
or
dec
ss
dec
mov
aaa
cs
mov
pushf
ja
fdivs
clc
cmpl
lahf
cmp
loope
fdivrs
and
or
sbb
cwtl
sbb
or
mov
out
fidivs
sbb
int3
xchg
mov
xor
or
repnz
xlat
jl
mov
cmp
and
es
fisttpll
aaa
push
inc
lret
cmp
sbb
or
out
das
and
stos
mov
ljmp
dec
aad
mov
ljmp
inc
push
outsl
mov
push
add
loopne
fnstcw
stos
aad
xchg
mov
mov
bound
sbb
ret
jne
jmp
je
adc
scas
jne
aam
mov
cld
lret
mov
xor
jno
push
fnstenv
out
shl
add
dec
lods
movsb
ret
xor
js
cli
scas
sti
lods
mov
lret
xchg
and
pop
mov
aaa
mov
out
out
mov
xchg
push
loopne
test
dec
adc
test
leave
stos
lea
cltd
cld
xchg
mov
sbb
push
popl
cmp
sbb
add
pop
inc
cmpsl
insl
sub
loope
ss
jbe
jae
mov
idivb
push
add
cltd
jge
sub
adc
or
fs
cltd
adc
push
faddl
mov
inc
mov
xchg
mov
test
mov
andb
adc
clc
push
jbe
push
and
add
jne
lret
sub
cmpsb
or
in
xor
add
ljmp
shrl
adc
sub
cmp
loop
cwtl
cmp
cmp
push
jge
fincstp
add
push
push
adc
dec
mov
out
enter
icebp
mov
dec
pop
mov
adc
add
jp
mov
fxch
pop
add
mov
mov
lds
jmp
mov
or
ret
cwtl
cmp
bound
imul
inc
cs
hlt
mov
push
fs
jg
mov
mov
int3
lea
std
sub
sub
push
stos
jnp
sbb
ss
cmp
movb
insb
xchg
fwait
je
and
and
jns
jp
aad
mov
loope
mov
add
mov
lcall
int
in
add
movsl
mov
jle
cwtl
fists
out
lds
add
rcll
xchg
push
adc
lods
push
imul
dec
shll
xchg
outsb
push
push
test
gs
jmp
movsb
ljmp
loop
xor
and
inc
mov
push
jnp
test
pusha
sub
nop
jl
cmp
in
cwtl
and
push
push
fsubrl
pop
inc
fidivrl
lds
adc
ss
or
cltd
xor
dec
lret
inc
xchg
add
mov
lods
push
mov
sbb
xor
mov
xor
cwtl
in
cld
aam
jnp
shll
loopne
cld
mov
std
xchg
nop
mov
push
leave
repnz
divb
sbb
sbb
push
push
mov
mov
mov
mov
add
add
mov
xor
mov
add
push
push
movsb
lods
int3
imul
mov
pop
stos
jecxz
lods
inc
mov
add
sbb
add
push
cmp
scas
xor
mov
pop
frstor
sbb
dec
sub
shrl
inc
adc
jg
insl
lahf
dec
aad
and
das
xchg
push
fists
jecxz
sub
shrl
jo
cmp
das
cmp
int3
mov
jecxz
mov
sbb
out
or
push
scas
sarl
mov
mov
lods
mov
out
pop
shrb
inc
xor
pop
shlb
jns
test
call
enter
sarl
adcl
jns
inc
ss
or
iret
and
mov
lret
mov
sarb
pop
daa
shll
push
push
dec
sbb
lods
hlt
aad
or
lret
xchg
pop
cmp
loopne
sahf
int
xchg
imul
mov
cwtl
or
sahf
jnp
addr16
mov
xor
and
fnstenv
lcall
lods
in
pop
das
rclb
fists
pop
dec
pop
adc
dec
pop
daa
xchg
xchg
cmpsl
add
inc
jecxz
subl
lock
leave
fisttpl
sbb
in
xchg
test
movsl
mov
inc
mov
add
push
jno
dec
roll
cwtl
xchg
mov
xchg
js
pop
ficoms
inc
sti
inc
in
pushf
push
push
das
inc
and
mov
jae
xor
pop
cmp
repz
fwait
insb
repnz
adc
jo
xor
jb
push
jb
sub
lock
mov
xor
jne
dec
pop
jecxz
push
lret
fadds
sahf
fisubl
dec
outsl
repnz
xor
mov
sub
es
idivb
popa
aad
out
dec
popl
jmp
and
adc
in
loope
aam
ret
aam
popf
or
mov
mov
push
es
and
jae,pt
xchg
outsb
pop
mov
jg
sti
mov
inc
movsl
inc
dec
mov
lret
jno
je
pop
and
cmp
rcr
fiadds
xchg
in
cli
insl
add
pusha
ss
rcrl
pop
pcmpgtw
out
popf
xor
and
fcompl
mov
popf
rolb
rcr
out
inc
rclb
sbbl
xchg
mov
into
xchg
aaa
jg
loop
enter
fucomp
cmp
dec
cltd
stc
fsubrl
cmp
out
fstl
or
ret
and
pop
pop
cmp
popa
lahf
std
and
jp
mov
add
cmp
in
cmp
sub
add
negl
pop
fsts
movsb
mov
fs
fmul
sbb
mov
and
cmc
lds
std
andl
xchg
inc
ffreep
enter
xchg
xor
pushf
enter
stos
repz
jno
jecxz
cmp
es
jl
mov
adc
cmp
je
mov
jle
sbb
dec
mov
xor
mov
dec
xchg
xchg
int
and
inc
scas
add
hlt
adc
mov
xchg
xor
xor
inc
inc
in
and
rcl
push
mov
ljmp
fmuls
adc
mov
fadds
dec
sub
clc
test
mov
pop
je
lock
mov
dec
mov
je
aam
mov
clc
push
outsb
test
aas
pop
jg
test
cmp
icebp
loopne
xor
add
add
and
cltd
out
lahf
idivb
js
jg
xchg
cmp
sbb
xor
push
fistps
pop
mov
fs
mov
dec
adc
adc
