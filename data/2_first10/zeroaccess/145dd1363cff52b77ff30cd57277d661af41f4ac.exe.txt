push
mov
sub
mov
jmp
incl
shlb
fs
add
jle
cwtl
jg
jle
xlat
cmp
ror
pop
add
emms
add
xor
rcrb
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
mov
cmp
test
jno
sub
fcoms
enter
dec
cmp
push
inc
out
mov
xlat
ds
jmp
int3
fbld
inc
push
pop
xchg
lds
leave
jae
les
lahf
lock
test
lods
repnz
pop
fisubs
add
decb
lret
sbb
mov
pop
dec
adcb
lahf
adc
sub
xorb
sub
add
jbe
mov
xor
pop
sub
in
addb
and
jns
sbb
lds
xchg
lret
aaa
iret
mov
xchg
daa
sub
and
pop
mov
fucomip
or
push
mov
rep
iret
jo
cmp
ds
push
pop
cmp
and
testb
xor
push
push
push
add
ss
jecxz
adc
sbb
loope
mov
mov
mov
movl
cmp
jne
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
pushl
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
jmp
out
sub
xor
imul
and
adc
cwtl
jg
jle
jg
jle
adc
xor
pop
aad
or
pushf
sbb
in
sbb
mov
and
sub
into
push
dec
jns
jl
mov
fisubs
sbb
mov
mov
jnp
sub
mov
pop
mov
mov
pop
lret
mov
sub
push
nop
pop
dec
scas
mov
test
fiaddl
call
clc
movsb
leave
sbb
and
jo
scas
popa
xor
enter
fdivrl
sarb
or
and
lea
xchg
sbb
mov
mov
popf
mov
cmp
inc
jmp
fldl
movsb
add
sbb
adc
mov
jecxz
inc
jno
pusha
mov
dec
bound
fcomps
push
xor
out
jp
mov
ja
adc
aad
lds
mov
sub
or
pop
push
mov
sbb
sub
lock
ss
pop
pop
mov
or
arpl
mov
lret
sbb
or
mov
filds
cmp
jle
pushf
mov
pop
push
mov
xor
mov
leave
dec
nop
std
int3
sbb
pop
in
fisubrl
les
stos
mov
pop
rcrb
pop
lea
pop
or
xchg
cs
int
aam
cmc
mov
cmp
popf
rcrb
repnz
in
ret
push
cmc
sub
mov
sti
xor
push
mov
adcl
xor
movzwl
or
mov
jmp
adc
insl
xchg
jo
or
adc
jge
jle
jg
jle
push
jl
sub
popf
in
pop
cmp
das
js
clc
out
cmp
push
data16
adc
lock
adc
dec
in
mov
adc
sbb
sbb
rcll
sbb
lret
popa
into
cli
jno
push
add
cmp
icebp
mov
adc
adc
hlt
jmp
xchg
jbe
inc
push
jae
lret
jmp
xchg
xor
cmp
or
mov
bound
inc
jg
insl
ret
mov
les
sbb
pushf
mov
mov
adcl
mulb
sub
inc
icebp
scas
lea
fisubs
or
dec
jecxz
jmp
imul
add
cmp
adc
jo
cmc
jno
insb
addr16
jmp
mov
mov
xchg
push
xchg
into
jb
mov
push
push
mov
fwait
shl
out
arpl
sarb
into
cmp
fnsave
push
sbb
lret
test
insb
repnz
mov
jmp
push
or
incl
mov
movsl
inc
push
into
mov
es
and
mov
out
insb
stc
xchg
xchg
adc
fnsave
jae
cmp
pop
sbbl
repnz
aad
push
shrb
lods
xor
push
in
push
pop
call
scas
inc
movsbl
sbb
out
cmpsb
pop
pusha
mov
mov
stos
ss
out
lock
mov
sbb
xchg
sti
push
xchg
or
idiv
and
dec
jmp
mov
xchg
sbb
sahf
sbb
sub
adcl
jmp
push
and
pop
xor
jno
cmpsl
cmp
dec
ds
and
jle
jg
jle
mov
cmp
mov
sub
pusha
lds
mov
repz
push
fadds
int3
std
lret
cmp
add
xchg
loope
pop
std
xchg
mov
xor
cmp
outsl
adc
ds
aas
mov
cmpsb
pop
ljmp
faddl
xor
push
loopne
inc
or
cmp
sub
pop
add
lods
leave
mov
adc
mov
clc
mov
dec
outsl
call
movsl
addb
xchg
lds
mov
mov
je
loope
leave
fadds
fdivrs
dec
dec
mov
std
inc
mov
je
push
jo
loope
repnz
mov
loop
pop
movsl
mov
pop
fistl
std
loope
sahf
fcoms
adc
inc
imul
loope
mov
push
xorb
andb
lret
out
sub
out
dec
sbb
mov
rorl
add
scas
xchg
mov
das
sti
and
adc
xorb
sub
cltd
sahf
xchg
mov
test
or
out
inc
aas
stos
mov
pop
xchg
testb
push
push
outsb
mov
or
push
cmp
mov
orl
pushf
adc
fcompl
xor
test
sbb
xchg
jp
mov
call
mov
add
movl
movzwl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
sbb
not
and
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
sbb
mov
push
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jb
mov
movzwl
mov
mov
mov
movl
movl
mov
mov
lea
mov
mov
mov
lea
mov
mov
movl
mov
mov
xor
xor
xor
add
add
div
mov
cmp
je
movl
jmp
movl
popa
movsl
ja
and
xchg
js
jle
jg
jle
pop
pop
mov
int
push
push
add
mov
aas
lret
bound
insl
mov
sub
sub
loopne
mov
js
scas
adcl
adc
adc
in
pop
fcoml
or
test
xor
add
inc
adc
mov
fisttps
pushf
mov
divb
add
sbb
mov
xchg
lret
xor
xchg
ljmp
loopne
dec
ja
or
mov
push
hlt
sub
lret
sbb
inc
roll
ret
insl
xlat
pusha
inc
fisubl
stos
mov
pop
mov
push
mov
das
dec
mov
pop
arpl
rcll
push
inc
or
iret
in
mov
addr16
add
enter
pop
mov
jo
pop
mov
pop
int
dec
fcompl
xor
int
cmp
xor
and
pop
cli
inc
insl
mov
mov
ljmp
add
in
xor
mov
inc
xchg
pop
cmc
mov
xlat
push
int
jo
or
mov
mov
or
pop
mov
mov
ss
add
ret
jle
stos
addr16
cld
cmc
and
dec
pop
nop
in
cmp
pop
call
jp
aam
dec
lret
mov
inc
outsb
jl
in
popa
sahf
sub
dec
stos
mov
adc
pusha
sbb
ljmp
and
inc
lock
mov
imul
mov
mov
cmp
je
mov
orl
jmp
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
jmp
das
adc
inc
icebp
inc
mov
test
and
loope
jae
xor
jle
cwtl
jg
jle
cmp
push
xchg
call
mov
xlat
mov
aaa
cs
push
xor
mov
or
jno
mov
jp
sbb
ds
in
xor
cmpsb
test
and
data16
outsb
push
or
lahf
out
push
pop
xor
ds
mov
mov
adc
nop
xorb
add
scas
jl
sub
mov
jnp
jno
adc
cmpsl
ja
stos
aad
ds
xchg
dec
into
pop
cmp
pop
loopne
mov
js
xchg
xchg
push
imul
mov
ret
inc
pop
cmp
mov
andl
or
push
jo
in
mov
add
lret
cwtl
jns
cwtl
xchg
in
loop
lods
push
test
cmp
push
jmp
inc
dec
push
icebp
adcb
inc
je
push
and
inc
ss
fsubl
pop
bound
movsb
mov
sub
pop
mov
cmpsb
repnz
mov
fs
out
adc
das
pop
in
mov
das
lock
adc
aam
test
inc
xor
icebp
arpl
inc
popa
out
push
fcoms
daa
push
xor
sbb
mov
bound
push
int3
adc
pop
shrb
push
ss
cmp
sub
test
xchg
cmp
pop
xchg
fsts
or
jno
lret
xor
dec
stos
pop
adc
orl
xchg
xchg
es
pushf
icebp
dec
data16
mov
cmp
outsb
popa
ret
xchg
sahf
pop
jmp
xor
push
add
add
inc
cld
mov
xor
mov
mov
add
cmp
je
mov
xor
jmp
mov
lcall
sub
jle
jg
jle
mov
ljmp
mov
push
out
les
test
inc
mov
call
adcb
imul
ficomps
adcl
in
dec
jo
adcl
mov
ja
xor
add
ljmp
stc
test
xchg
xchg
pop
stos
loop
cmp
mov
mov
mov
flds
pop
arpl
sbb
mov
sbb
jns
push
push
add
lods
les
in
popf
sbb
and
pop
dec
int3
or
add
insb
xor
ficomps
add
aas
and
int
sbb
mov
leave
repnz
add
int3
daa
xchg
add
or
pusha
mov
outsl
aas
inc
push
imul
pop
fnsave
pop
and
iret
iret
lea
andb
sahf
cwtl
push
dec
cmp
adcl
rorl
sbb
lods
test
and
int3
cltd
mov
inc
pop
fcmovnb
loope
dec
inc
mov
xor
clc
sub
fwait
stc
std
fcomps
xor
std
iret
js
dec
xor
shl
add
xor
push
jno
aaa
pop
shr
sbb
orb
cmp
push
mov
mov
aas
cli
or
jl
mov
cs
dec
mov
popa
repz
movsb
jg
test
ficoml
pushf
cmp
daa
adc
mov
pop
pop
dec
outsl
sti
cltd
mov
rorb
push
enter
add
xor
mov
add
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
outsb
jecxz
mov
jne
add
insb
push
sbb
test
jle
daa
pop
outsb
cld
imulb
nop
aad
fidivrs
into
pop
cwtl
testl
cs
add
sub
imul
xor
cmp
mov
adc
clc
lds
int3
sub
jmp
adc
dec
enter
fidivl
sub
rcr
cmp
ds
dec
fisubl
xchg
clc
in
sub
xor
lret
dec
lret
and
fildll
or
mov
xchg
jns
shlb
add
insb
inc
fimull
fs
jne
push
lahf
xchg
dec
adc
or
mov
xor
push
ja
movsl
rorb
sub
sub
cmp
and
pop
sbb
rolb
scas
aas
pop
vfrczpd
fcom
pop
xchg
out
adc
mov
inc
push
jmp
pop
pop
sti
cmpsb
push
or
inc
inc
dec
cmc
ljmp
and
push
jnp
and
das
sbb
lahf
sub
or
loopne
cli
in
pusha
mov
movsl
adc
jo
rcll
adc
fmul
mov
and
popa
ljmp
or
int
movsl
or
in
cmpsl
decb
lret
or
int3
fs
inc
fidivrl
lcall
and
popf
repz
aad
xor
fdivs
ss
sti
rorl
popf
mov
add
icebp
adc
jecxz
stc
aaa
push
jns
nop
icebp
es
fldl
inc
jmp
pop
cs
jb
jle
cld
les
dec
mov
push
xor
sti
or
out
lret
sub
push
mov
cmp
je
or
or
cwtl
popf
mov
dec
jns
or
iret
jmp
rcl
fs
popa
pop
or
sti
or
and
popa
shlb
dec
lret
js
push
adc
in
inc
add
add
add
add
adc
cmpl
jne
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
adc
jmp
je,pt
cltd
mov
out
sub
mov
lea
jle
push
jg
jle
jge
divb
jmp
xchg
sbb
dec
inc
clc
clc
inc
int3
and
mov
sub
jg
mov
xchg
cmp
mov
pop
sub
cmp
and
mov
push
mov
stos
pop
xor
mov
sti
je
mov
cmpsl
mov
stos
test
xchg
inc
in
int3
mov
in
test
sbb
inc
sub
inc
jle
pusha
inc
fcom
sbb
mulb
loope
cmp
repz
aam
fwait
out
push
dec
aaa
jne
mov
xor
xchg
aad
movd
aam
sbb
adc
add
movsl
and
cmpl
adc
scas
sub
js
cwtl
xor
in
rclb
xchg
push
stc
pop
sub
das
nop
pop
jl
pop
mov
push
xchg
fisubs
dec
or
inc
mov
push
jle
popf
or
cli
inc
out
inc
test
mov
push
mov
push
push
out
rolb
jns
jnp
mov
mov
test
push
pop
jg
jle
push
dec
pop
pop
insb
cmp
jmp
xchg
test
loop
popa
aaa
mov
icebp
loop
xchg
subl
in
push
es
lret
testb
push
xchg
mov
inc
adc
fwait
lret
out
push
mov
inc
sbb
icebp
xchg
loopne
mov
jmp
mov
jg
mov
mov
cltd
mov
lds
imul
lods
sub
ljmp
loope
push
ss
outsb
test
jo
mov
ljmp
mov
dec
mov
mov
push
sbb
add
dec
inc
ret
mov
add
dec
cmc
std
scas
leave
repnz
sub
adc
inc
push
andl
mov
movzwl
xor
mov
mov
xor
movl
mov
addl
push
mov
xor
or
and
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
lock
xchg
aaa
insl
fs
mov
add
push
jg
jle
inc
add
cmp
sbb
jns
pop
push
lds
pop
jne
push
test
fs
jae
inc
and
mov
iret
ficomps
and
repz
sbb
inc
dec
vmovupd
insl
pop
imul
lcall
cmpsb
push
xor
adc
push
test
pop
cmp
lea
push
and
inc
sub
inc
jae
outsb
push
mov
roll
roll
rorl
dec
pop
jae
pop
cmp
cld
xchg
fcompl
lods
scas
and
mov
lret
outsl
or
xor
pop
hlt
test
xchg
jmp
gs
dec
sbb
inc
and
test
push
stos
sbb
mov
lds
fwait
leave
or
test
dec
int3
xchg
fwait
inc
sub
inc
fisubl
xchg
fistpl
xor
fistpl
sti
lcall
pop
pusha
mov
cs
repnz
jmp
dec
or
pop
gs
or
les
xchg
ret
jge
adc
repnz
push
fisubrs
xchg
dec
mull
mov
jl
ljmp
cmp
test
push
ljmp
addr16
fildl
sbb
cmp
dec
or
lods
xlat
xchg
fcomps
es
jg
or
mov
into
xchg
xchg
and
test
or
xchg
rcl
stc
pushf
mov
xor
mov
mov
mov
jle
mov
push
jne
pop
cwtl
jns
jbe
cmp
dec
sarl
fcomp
sti
jne
loope
jnp
fnstenv
push
lret
lret
jmp
mov
dec
cmpsl
mov
sbb
xor
jne
push
mov
add
cmp
je
mov
mov
xor
mov
sub
jmp
insb
cmp
arpl
push
xor
daa
mov
jle
jg
jle
fidivrs
jmp
scas
add
ja
jmp
or
fstps
ljmp
dec
mov
loope
and
enter
sub
loope
adc
sbb
rcll
stos
jp
sahf
mov
shl
test
ja
leave
negl
mov
inc
sbb
rolb
cmp
cwtl
ja
mov
enter
push
aas
cmp
mov
pop
nop
test
inc
push
xor
mov
ds
cmpsl
push
in
in
jb
subb
mov
test
movsb
fimull
imul
add
pop
mov
movsb
inc
sub
add
out
mov
add
std
dec
jle
add
out
ret
cmp
fists
ds
and
add
sbb
in
in
xor
fidivs
cmp
mov
push
and
icebp
je
mov
or
out
ljmp
cwtl
or
inc
sbb
pop
ret
pop
cli
dec
cmp
push
stc
xchg
out
xchg
fucom
rorb
push
mov
adc
loope
in
and
xchg
inc
into
push
mov
mov
cmp
mov
in
cli
mov
call
dec
outsl
mov
inc
add
mov
dec
out
cmp
dec
mov
dec
ljmp
mov
imull
ss
jp
inc
mov
sbb
mov
dec
mov
fwait
movsl
repz
cmp
aad
out
dec
inc
mov
cli
in
inc
shrb
jmp
les
test
icebp
mov
sbb
stos
cli
xchg
inc
popa
mov
and
and
pop
inc
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
jmp
lock
xor
jo
repnz
pop
mov
test
jle
push
jg
jle
in
push
jl
jns
outsl
into
dec
lcall
lret
cmc
nop
inc
icebp
loopne
sbb
fstpl
inc
inc
test
push
xadd
adc
sti
addl
scas
leave
pushf
out
or
mov
sub
addr16
gs
loopne
in
sub
cltd
push
dec
push
xchg
push
and
sub
or
sub
sbb
movsl
jne
fisubs
sbb
jnp
dec
je
jmp
lret
cmc
xor
dec
dec
aaa
fmull
dec
sbb
and
repnz
and
aas
ljmp
inc
out
xor
dec
shl
jno
es
push
lcall
dec
insl
jmp
shr
add
inc
cmp
js
dec
xlat
mov
mov
jle
push
js
push
mov
scas
scas
cmp
or
movsl
addb
int
insl
imul
mov
imul
in
pushf
mov
fisubrl
insl
not
add
ret
or
add
sti
inc
arpl
js
es
xchg
push
jmp
xor
jno
fwait
in
movsl
or
sub
ret
pop
in
in
into
push
hlt
aam
jb
sqrtps
cmc
rolb
cltd
xchg
mov
push
cld
adc
fs
fwait
sbb
lock
leave
in
sbb
add
pop
adc
cld
dec
xor
cltd
sahf
ret
and
std
cwtl
mov
outsb
pop
orl
push
insb
inc
cld
lahf
jne
inc
and
data16
ljmp
mov
dec
insl
mov
in
push
mov
mov
jmp
adc
loope
mov
inc
adc
fsub
xchg
mov
dec
shll
stc
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
jmp
outsb
add
and
add
mov
cmc
aad
dec
or
push
jg
jle
and
jae
pop
add
sbb
add
jecxz
aaa
mov
pushf
mov
cltd
mov
test
jl
pop
bound
shlb
or
das
loop
sbb
cmp
decl
hlt
inc
mov
sti
pop
in
fprem1
outsl
stos
das
sbb
jno
pop
jns
stos
xchg
adc
sub
mov
fildl
sbb
xchg
adc
fldl
jge
add
in
xchg
inc
repz
mov
pop
js
dec
and
std
lret
mov
roll
aam
pop
add
adc
das
cmpsb
insl
xchg
and
mov
jns
movsb
pop
int3
jbe
out
jmp
dec
popf
lods
scas
sti
cld
pop
xor
ljmp
pop
or
sar
push
jb
in
cli
push
push
jb
or
int
and
mov
cwtl
mov
stc
js,pn
jnp
add
fcomp
lods
fdivl
stos
or
aaa
inc
push
push
inc
cld
xlat
test
in
xor
mov
add
adc
inc
or
mov
cmovno
cmpsb
ljmp
ret
jae
filds
movsl
cmpsb
fs
int
dec
or
jnp
mov
rclb
push
pop
fists
clc
out
sbb
int
mov
mov
mov
mov
sbbl
lods
divb
or
aad
mov
jbe
cltd
popa
push
push
cmp
lahf
sub
data16
push
cmpsl
outsl
dec
push
jbe
test
dec
cld
fnstsw
call
sub
testl
daa
add
mov
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
mov
mov
xor
mov
add
or
movzwl
mov
xor
mov
mov
movb
sub
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
add
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
mov
add
mov
movl
xor
sub
orl
mov
not
jmp
loop
fcoms
popf
mov
mov
or
scas
jg
jle
xor
stc
popa
push
mov
mov
out
inc
sub
and
jns
sbb
jae
in
lock
push
lds
js
popa
mov
movlps
iret
ret
mov
pop
or
push
dec
std
push
sbb
xchg
xor
hlt
mov
inc
sub
into
pop
pop
and
ds
in
test
scas
xor
pushl
std
daa
in
sub
and
ljmp
jo
cwtl
or
loopne
xchg
and
cmpb
mov
out
push
cmp
push
push
mov
mov
stos
and
xchg
mov
mov
lea
roll
loopne
sbb
dec
mov
fisttps
jge
in
sub
je
or
jle
dec
cmp
test
enter
popa
mov
int
dec
adc
stos
xchg
std
xchg
test
dec
hlt
aad
idiv
pop
js
xor
jb
scas
or
pop
dec
jge
clc
aaa
inc
fbld
out
mov
pop
mov
mov
emms
sbb
push
add
pop
sbb
fs
fstpl
jo
enter
stos
jno
mov
int
je
js
mov
or
xor
dec
and
add
mov
mov
jnp
sbb
or
ja
jge
outsb
push
add
sub
sbb
mov
push
fwait
dec
loope
vphsubwd
in
mov
push
movl
movl
or
mov
movzwl
adc
mov
subl
push
xor
andl
jmp
inc
jp
cs
mov
jno
pop
ljmp
jle
jg
jle
fidivs
pop
jmp
aam
hlt
js
sti
mov
jp
das
push
add
cmp
sub
push
mov
xlat
and
adc
cmpsb
stos
pop
lods
popa
jg
arpl
jp
push
inc
lock
push
jns
inc
inc
lock
repnz
mov
mov
aam
xor
adc
dec
pop
cmp
inc
fcmove
nop
jb
rclb
shlb
pusha
pushf
rcll
mov
rorl
push
test
adc
push
inc
push
nop
inc
cmp
mov
lcall
pushw
addr16
rorb
lret
das
sub
sbb
mov
inc
imul
xchg
cmp
stos
cmc
decb
mov
fidivs
mov
loope
mov
nop
andl
into
mov
xor
rorb
lock
stc
leave
adcl
inc
xor
mov
mov
cmpsb
lods
add
sbb
xchg
sbb
jg
aaa
mov
xor
sarb
and
and
loop
jmp
popf
arpl
add
mov
aas
lea
dec
test
inc
or
out
pop
lods
cmp
cmp
lods
icebp
jmp
fs
rcrb
ficomps
mov
ret
xchg
push
mov
stc
sbb
inc
ja
ficompl
fildl
sbb
sbb
pop
jns
repnz
cmp
mov
or
aad
mov
sub
jae
scas
pop
cmc
sete
adc
push
xchg
mov
negl
add
jmp
mov
mov
inc
cmp
jb
mov
mov
jmp
mov
andl
mov
push
add
jle
jg
jle
inc
roll
mov
push
addr16
jle
cltd
dec
and
xchg
add
xchg
jo
shrb
add
aas
push
push
pop
sarl
jg
xchg
push
sub
mov
test
xchg
popa
cmc
stos
into
pop
and
mov
lret
xor
lds
mov
and
incl
movsb
push
push
mov
sarl
push
nop
bound
jae
mov
and
ss
pcmpeqd
iret
push
out
lret
popf
push
inc
or
xor
jge
sbb
mov
jno
cli
addr16
data16
sbb
lock
call
ds
push
inc
dec
mov
sbb
xchg
mov
sti
mov
dec
fmulp
test
rcrl
and
inc
shll
hlt
stos
in
pop
mov
test
stos
adc
inc
roll
xor
ss
mov
pop
loopne
mov
mov
cltd
stc
enter
test
and
push
test
cmp
jp
xchg
inc
xchg
pop
cmp
xchg
cmp
iret
rcll
clc
push
cs
mov
jnp
xlat
mov
xlat
pop
pop
fsubp
iret
jl
xor
xchg
xchg
loope
out
arpl
mov
push
sarl
lea
jp
mov
add
je
adc
lds
inc
incb
sbb
jmp
shll
xchg
insb
pop
mov
aaa
or
xor
inc
add
lret
push
mov
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
jmp
jo
add
mov
mov
mov
jle
scas
jg
jle
adc
fistl
loope
jge
in
ss
sbb
inc
ficoml
xchg
movsl
inc
in
xchg
dec
hlt
pop
add
mov
add
test
es
cmp
sbb
mov
dec
lret
ret
ss
roll
ja
aas
scas
int3
jnp
cli
mov
in
data16
xor
cmpsl
xchg
js
icebp
sti
popa
add
pop
ja
mov
jg
out
and
insb
int
jae
jp
mov
in
push
pop
daa
hlt
sub
push
mov
pop
dec
jne
rolb
popf
shlb
add
test
xchg
pop
sbb
adc
inc
jns
inc
adc
addb
popf
xor
mov
mov
andl
fists
sub
push
out
dec
mov
push
bnd
int3
imul
jge
imul
fwait
lcall
push
test
addr16
mov
aas
in
jns
call
fs
mov
mov
fcoms
int
xchg
lret
stos
stc
mov
and
fisubrl
or
scas
jmp
mov
stos
cmp
adcl
mov
push
sbb
popa
sbb
inc
jge
enter
arpl
lahf
aaa
sbb
call
lea
in
jl
jnp
stos
pushf
and
rol
cmp
jle
fidivs
mov
daa
adc
in
movsb
sti
out
xchg
out
jmp
stos
daa
mov
loop
fsubrs
mov
mov
sub
push
adc
roll
jmp
jl
mov
mov
jge
fldl
call
aas
loop
jle
scas
jg
jle
jecxz
inc
out
daa
and
mov
push
mov
iret
pop
sbb
cld
xchg
sbb
je
lret
loopne
rolb
lods
rcrb
outsb
mov
frstor
xor
pop
addr16
dec
mov
lock
ficompl
in
cmpsb
pop
shrb
mov
into
jne
hlt
rcl
cmp
jae
and
test
aaa
pop
add
lods
xchg
repnz
lock
jle
xor
inc
inc
add
xor
pushf
jbe
jl
pop
or
or
cmp
daa
cwtl
mov
cmc
and
xor
xchg
push
mov
dec
into
and
push
je
xor
sarl
and
testb
sbb
cs
pop
out
lahf
notb
int3
sbb
into
enter
rorb
mov
or
pop
in
in
in
mov
push
lahf
add
data16
push
fildl
xchg
sub
rcll
mov
inc
in
pop
inc
lea
movl
mov
push
imul
inc
pop
rcll
inc
imul
push
add
arpl
cmp
cmpsb
push
or
inc
lods
inc
dec
lods
jg
inc
push
xchg
lods
insb
sub
fsubs
inc
add
sub
nop
aaa
pusha
dec
jl
mov
cmpsl
cli
push
cmp
dec
scas
clc
inc
ret
xorl
mov
mov
fs
dec
sahf
pop
lock
in
loopne
and
orb
cmc
fildll
add
add
push
push
pop
inc
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
jmp
lret
int3
push
push
mov
push
mov
adc
jle
scas
jg
jle
inc
add
adc
add
lods
ja
xor
pusha
push
sbb
addb
mov
mov
mov
out
loopne
data16
orb
subb
add
lock
ret
loopne
cltd
outsl
mov
or
cli
mov
sbb
and
popa
sbb
dec
je
cmpsl
pop
sbb
mov
movsl
pushf
sti
and
test
mov
cmpsl
fs
test
outsb
dec
jl
sti
les
dec
into
test
cltd
lret
in
test
and
adc
aas
adc
add
leave
fwait
lock
cmp
jns
mov
push
jnp
imul
in
or
adc
cmpsb
or
inc
and
or
cmpps
arpl
dec
aad
jns
jns
jl
xchg
sub
aaa
sub
jae
sub
dec
pop
mov
ds
mov
push
push
mov
sti
clc
dec
or
pop
rcrl
inc
inc
pushf
lcall
pop
sbb
inc
or
stos
bound
in
and
in
cltd
pop
test
sub
jecxz
mov
jb
shl
mov
repnz
dec
jl
out
fmuls
insl
out
aad
in
xchg
bnd
xchg
enter
shlb
imul
jge
fnsave
pop
mov
cld
daa
fwait
stos
das
shr
adc
and
add
inc
jp
lea
jge
jo
cmpsl
pop
fstp
sti
je
movl
jmp
scas
or
xor
mov
data16
inc
push
jle
scas
jg
jle
adc
mov
fidivs
mov
js
rcll
or
pop
push
sahf
outsl
mov
sub
dec
loopne
into
lahf
cmp
dec
jne
ret
outsb
xlat
imul
dec
jp
pushf
inc
pop
cltd
shrb
pop
xchg
out
sbb
push
fisttps
bound
shll
fxch
test
pop
lret
ljmp
stc
pop
aad
mov
xor
push
lods
aad
lea
je
out
sub
loopne
sub
outsb
fisttps
fmuls
stc
push
xchg
std
fdivl
call
mov
call
push
aad
jnp
leave
push
sbb
add
mov
jb
loopne
push
fidivl
pop
jmp
daa
mov
cli
sbb
jne
jno
insl
pushf
es
imul
jno
cli
pop
push
aaa
in
cmp
pop
insl
mov
clc
sub
sbb
push
pop
and
add
lods
ss
aad
mov
out
push
lret
dec
aam
cmp
adc
ljmp
inc
mov
cli
cmpl
mov
ret
mov
loop
test
xchg
push
sub
ffreep
xor
sub
les
clc
pop
in
xor
jg
xchg
xchg
jl
lahf
push
fcmove
aas
mov
add
lods
insl
mov
mov
dec
mov
inc
add
scas
add
xchg
dec
orb
in
xchg
je
sbb
lret
mov
ret
in
out
aam
jl
jg
lock
push
in
pusha
mov
inc
call
inc
in
addl
jmp
mov
inc
push
push
jb
andl
scas
jg
jle
je
sbb
loop
sub
and
sbb
lret
movsl
pop
das
inc
or
cltd
dec
roll
clc
negb
jp
jo
aaa
or
ret
xchg
pop
inc
sub
sahf
dec
ret
notl
divb
repz
lret
adc
pop
fdivs
mov
pop
push
mov
xchg
mov
inc
loope
inc
leave
adc
jp
pop
out
add
scas
sub
cmp
aam
lock
std
push
sbb
mov
in
inc
inc
stos
addr16
mov
insl
outsb
sub
pop
dec
test
jne
push
in
fwait
aas
and
test
mov
idivl
rcrl
xchg
push
aad
mov
pop
cltd
inc
loop
into
int3
aas
mov
scas
fucomip
prefetch
or
lcall
out
in
jnp
pop
push
pop
dec
or
add
jb
cld
pmaxub
in
cmpsl
cltd
dec
cld
repnz
ss
xor
cmp
push
inc
les
in
test
sti
sbb
roll
scas
mov
pusha
push
pop
lods
cld
bound
scas
ret
mov
nop
pop
push
fldenv
mov
push
int
and
inc
ss
inc
jmp
sbb
mov
pop
fwait
xchg
std
aad
xchg
and
push
push
push
xchg
cltd
mov
push
loop
pop
adcl
or
adc
in
cmpsl
icebp
or
dec
cld
jns
in
jb
scas
lret
add
es
stc
stc
inc
mov
mov
mov
mov
xor
jmp
pop
sub
dec
insl
dec
imul
and
loope
imul
popa
mov
or
arpl
rcrb
fwait
sub
or
xor
push
lsl
mov
cmp
or
mov
out
xor
jo
fisubs
fildl
js
or
mov
loop
lret
xchg
xchg
xor
sbb
pop
xorl
aad
push
pop
mov
xor
fsts
fistps
arpl
jle
std
push
xor
aad
inc
dec
xchg
push
data16
sbb
mov
scas
mov
scas
xor
out
outsb
xchg
jmp
fdivrs
pop
add
mov
pusha
test
or
pop
mov
in
jno
sub
insl
xchg
xchg
cmp
sub
dec
xchg
mov
xchg
mov
loopne
hlt
adc
lock
mov
dec
xchg
in
testb
lret
add
lret
adc
xor
pusha
push
jge
jno
mov
mov
mov
push
out
adc
inc
xchg
punpcklbw
adc
clc
lret
mov
jmp
and
int3
in
sub
enter
inc
inc
sub
cmp
into
out
cmp
pop
and
sub
inc
jmp
push
loope
and
pop
rorl
js
into
adc
xchg
aad
insb
and
lock
js
not
mov
jo
push
insb
into
fsubs
xor
cmc
or
jns
and
test
push
cmp
pop
add
mov
divb
popa
cmpsb
mov
fisttpll
fwait
jb
add
or
arpl
decl
mov
add
mov
pop
leave
ret
push
mov
push
push
movl
jmp
lcall
mov
ja
pop
push
cli
mov
jle
jg
jle
sbb
cmp
adc
enter
cmp
popa
rcrl
xchg
jo
inc
mov
and
imul
movsl
rorb
movsl
jl
cli
pop
push
imul
cmpsl
cmp
neg
inc
movsb
test
jae
dec
es
xor
out
mov
bound
icebp
popf
ja
pop
call
ret
mov
into
and
push
adc
movsb
test
cld
xor
xor
fldt
out
mov
dec
rorl
cmp
pop
jmp
sbb
into
mov
mov
pop
add
ss
and
mov
int3
rcr
mov
test
loope
jl
or
sti
or
add
dec
into
shl
ss
inc
cmp
mov
daa
cmp
fwait
cmpb
xchg
sbbb
and
push
mov
int3
jbe
push
xchg
jno
loopne
es
jp
sbb
jle
dec
shl
inc
movsb
aam
push
shrl
xchg
pop
lods
sbb
and
xor
pop
in
gs
push
jge
mov
mov
fldl
popa
addr16
sbb
fsts
lahf
jg
pushf
out
adc
xchg
mov
insl
test
rorl
xchg
dec
mov
or
daa
lcall
xchg
ret
pushf
fmulp
shlb
or
or
pop
pop
xchg
insb
dec
push
lock
insb
or
or
nop
xchg
add
cwtl
sbb
or
mov
loopne
pop
and
inc
cld
xor
cld
push
orl
mov
and
mov
orl
xor
addl
xor
mov
orl
add
add
subl
imul
mov
mov
cmp
jne
mov
mov
xorl
xor
andl
xor
xorl
jmp
jbe
cmpsl
adc
sahf
es
sbb
push
dec
std
sbb
cltd
jg
jle
imul
movsb
out
mov
jmp
mov
xchg
mov
cld
cmp
dec
imul
fwait
imul
dec
out
or
mov
xchg
cs
rclb
aam
lea
xchg
and
jbe
decb
cli
pop
cwtl
inc
mov
lock
in
insl
mov
xchg
jns
rorb
sub
pop
jl
sub
sub
push
push
dec
lock
xor
fisubrl
in
and
test
daa
repnz
add
sub
imul
fsts
cli
xchg
rcl
cmpsl
ds
adc
add
scas
cwtl
mov
test
mov
lods
jne
jbe
add
insb
mov
mov
aas
lret
out
int3
aaa
xchg
jae
aas
inc
jmp
mov
cmpsl
notb
inc
clc
aas
repnz
cmp
ret
pusha
pop
scas
xor
xchg
mov
mov
aaa
cli
push
movsb
jmp
sub
das
mov
stos
xchg
lret
and
fisttpl
ret
fisubrs
push
stos
xchg
and
cmp
adc
sbb
int
push
aaa
int3
sbb
in
in
fwait
or
out
subl
add
aad
fisubrs
dec
imul
or
xor
mov
ljmp
xor
sbb
mov
stos
push
xorl
or
repnz
xchg
movsl
ret
push
int3
dec
jb
pop
sub
add
add
imul
movl
jmp
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
movl
movl
mov
mov
mov
sbbl
xor
subl
add
jmp
fnstenv
loop
jb
jno
in
jne
push
andl
daa
jle
xchg
jl
jle
rorb
and
mov
inc
pop
sbb
rol
aaa
cmp
in
leave
push
xor
or
push
sbb
into
outsb
cwtl
loope
inc
clc
inc
jmp
jp
cmp
inc
adc
js
sbb
sbb
jp
ja
xchg
cmp
adc
cmpsb
jecxz
jbe
test
mov
stc
bound
and
adc
out
xorps
mov
loope
cwtl
lea
xchg
mov
xchg
mov
mov
sbb
push
jecxz
sbb
popf
outsl
sbb
mov
nop
push
lahf
loopne
and
add
sbb
test
shrl
daa
gs
je
scas
and
cmpl
sbb
hlt
int3
imul
and
xchg
mov
pop
push
out
rorb
mov
mov
mov
lea
jno
jp
lea
sub
fucomi
lea
pop
mov
lods
xchg
stos
bound
xchg
in
xchg
jbe
arpl
hlt
sbb
pushf
or
xor
mov
decl
mov
xor
bound
scas
adc
sub
dec
shll
fnstsw
xlat
lock
pop
mov
jne
cld
test
aas
hlt
lret
push
push
nop
and
lock
inc
inc
xchg
jecxz,pn
pop
jg
or
xor
sarb
xchg
push
adc
fndisi(8087
aad
pop
and
mov
sbb
insl
sub
orb
or
into
insb
fwait
push
popf
int3
dec
sbb
cmpsb
dec
lds
leave
pop
cltd
jg
aaa
and
adc
pop
sbb
iret
and
lods
fistpll
addl
adc
ror
je
mov
mov
pop
dec
mov
addr16
mov
sbb
mov
inc
imul
jb
dec
sub
lods
push
add
popf
rcl
in
mov
addl
sub
mov
je
stc
shll
cmp
adc
pop
push
mov
call
mov
mov
sbb
into
imul
aas
push
mov
inc
dec
inc
incl
daa
aam
pop
sbb
adc
gs
xchg
jp
popa
or
push
mov
mov
ja
subl
es
xor
bound
cmp
jno
inc
push
and
mov
xchg
pop
cmp
pop
into
inc
mov
fnsave
mov
pop
out
dec
cs
add
add
add
add
shlb
adc
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
xor
xor
push
mov
addl
mov
sbbl
add
addl
mov
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
xor
mov
jmp
xor
loope
loope
icebp
pop
mov
or
fs
and
jle
pop
mov
jge
mov
or
pop
jmp
hlt
xchg
jmp
jo
repz
ss
cmp
popa
sub
jno
push
pusha
sbb
xor
cmpsb
aam
fcomi
pop
push
jae
push
popa
sbb
in
ja
pop
cli
pop
mov
ja
popf
in
sar
xor
loopne
jns
jno
push
daa
loopne
jecxz
out
into
mov
je
jae
in
mov
icebp
lcall
sti
call
lds
or
scas
je
jmp
and
push
lahf
aas
jge
mov
je
jnp
push
outsb
stos
and
rcr
andl
dec
inc
inc
stc
fldenv
lahf
or
mov
xchg
dec
mov
inc
inc
data16
cltd
in
inc
cltd
out
and
pop
imul
adc
call
mov
and
cs
cmp
jne
in
xorl
mov
cwtl
clc
addr16
or
movsb
jbe
arpl
mov
pushf
sahf
sub
ret
cmp
iret
sbb
fcomps
shrb
bound
cs
iret
in
sub
dec
and
jmp
mov
and
lea
push
rol
inc
xchg
lret
lea
into
jecxz
loope
testl
add
clc
mov
inc
mov
mov
lods
lods
or
xchg
shrb
pop
lods
push
xchg
jbe
pop
int
dec
movsb
scas
scas
mov
jg
ror
cmp
outsl
movsb
sbb
mov
mov
mov
mov
mov
into
int
fists
xchg
jne
int3
add
sbb
mov
test
mov
iret
lcall
adc
loope
shld
xchg
pop
pushf
xchg
gs
sbb
mov
clc
inc
rcrb
xchg
pop
shlb
mov
daa
in
cmp
dec
inc
out
fstl
ja
out
adc
pop
mov
das
mov
out
je
jns
enter
jnp
icebp
add
dec
lret
nop
cli
cmpsl
test
insb
xlat
shlb
loope
repnz
mov
pop
pushf
cmc
mov
imul
xchg
inc
insb
push
jle
scas
inc
in
fidivrs
out
popf
inc
cmpsl
cmp
scas
mov
mov
sbb
jmp
push
pop
stos
subb
sahf
pop
clc
cld
ret
jbe
inc
outsb
push
push
jae
ret
xchg
mov
adc
xchg
xor
dec
adc
enter
sbb
pop
ret
push
mov
jmp
pop
iret
xchg
cmp
jno
das
insb
xchg
mov
out
jle
outsb
jg
jle
pop
rcrl
inc
daa
jne
out
movsb
push
jg
repz
loop
fsubp
daa
add
sub
push
fnstcw
or
jne
xchg
xchg
negl
ds
mov
pusha
sbbb
popf
adc
mov
ficomps
in
cmpsb
dec
cmp
xchg
xchg
xor
cmp
scas
in
call
ret
inc
jno
or
push
js
jl
mov
mov
das
movsb
dec
movsl
scas
dec
push
cmc
xchg
lret
subb
and
adc
into
xor
push
push
test
sbb
and
mov
insl
call
sub
inc
fcompl
stos
cmpb
push
imul
scas
es
and
ret
ret
xchg
sbb
je
or
sbb
inc
push
mov
pop
sub
dec
cwtl
jmp
adc
outsl
js
test
pop
adc
test
pop
inc
or
hlt
xor
lahf
in
mov
scas
inc
data16
std
mov
aas
fidivrl
sub
stc
rcrb
jo
mov
repz
mov
xor
lock
cs
inc
sahf
out
and
push
pop
xchg
dec
adc
sti
mov
mov
insb
adc
adc
insb
mov
dec
leave
insl
adc
jae
int3
mov
xchg
aad
push
mov
fistpl
push
insl
xor
ss
add
clc
test
inc
jg
icebp
push
iret
mov
call
mov
xchg
cmpsb
dec
shl
inc
or
adc
push
test
ds
cs
jg
fwait
push
mul
xor
das
inc
loop
inc
jb
aas
xor
pop
mov
mov
push
sar
mov
flds
inc
add
add
add
or
add
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
mov
xor
mov
movl
mov
mov
sub
and
mov
movzwl
sub
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
jmp
inc
jo
xor
jo
jo
shlb
outsb
aas
das
negb
outsb
jg
jle
sar
and
add
and
jno
out
sti
mov
addr16
iret
xor
lds
dec
dec
cmp
mov
dec
and
xchg
in
push
adc
xchg
add
or
sub
xor
pop
test
ds
daa
stos
pop
stos
or
pop
adcl
stos
push
adc
xchg
mov
or
mov
stc
sbb
cmp
in
or
mov
arpl
sahf
mov
add
and
push
push
ds
adc
loope
into
cmpsl
push
movsl
aam
inc
lcall
fisubs
sub
ret
sub
scas
jnp
push
fmul
fistpl
jle
pop
out
addr16
jbe
mov
pop
mov
call
shr
push
dec
pop
mov
js
jecxz
in
jl
cmp
mov
push
or
fldl
or
push
out
sbb
xor
enter
jae
push
out
rolb
orb
jae
pop
xor
pop
ret
xchg
sarb
imul
push
jb
test
sbb
and
mov
sbb
xchg
push
push
inc
mov
sbb
mov
loope
outsl
sbb
int
add
push
ret
jmp
add
movsl
jo
mov
sub
xchg
dec
jb
pop
dec
mov
inc
inc
mov
push
sbb
jno
pusha
sub
mov
jg
inc
je
dec
dec
push
imul
xchg
xor
xor
js
fmuls
adc
pop
fidivrs
cltd
xlat
cmp
das
inc
and
lds
dec
xchg
es
aad
xchg
sahf
orl
xor
adc
or
xor
add
mov
mov
mov
mov
mov
mov
jmp
sarl
push
mov
icebp
mov
shlb
and
sub
jle
jg
jle
ljmp
loopne
das
gs
into
sub
xchg
mov
sarl
cmp
gs
cmp
ds
jl
insl
daa
lcall
test
or
xor
out
fsubrs
sbb
or
and
lods
cmp
or
sbb
out
inc
inc
xor
sbb
xor
cmp
scas
sub
jmp
or
test
inc
cwtl
push
call
adc
xchg
rcll
cmp
and
outsb
mov
lds
inc
mov
in
idivl
cmp
pop
sti
fisubrl
subb
and
dec
mov
push
pop
sub
mov
test
mov
mov
sbb
inc
cmpsb
or
clc
dec
dec
add
loope
fnstenv
fcmovnu
add
orl
cmc
call
fnsave
xor
xchg
dec
push
xor
sti
test
lret
aaa
mov
pop
push
cltd
inc
test
incb
dec
clc
add
jecxz
lods
lock
push
mov
repz
les
movsl
ret
or
dec
cmp
cwtl
cmpsl
dec
gs
fwait
cli
loope
gs
loope
pop
inc
lret
adc
push
cmpsl
sub
push
sub
jmp
jl
sub
add
mov
out
or
sbb
icebp
xchg
out
movsl
jnp
cmp
xchg
or
dec
and
aas
xchg
ljmp
xorb
mov
popa
lret
sub
push
or
mov
bound
faddp
push
scas
andl
or
sub
mov
in
cltd
out
jae
add
out
jg
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
mov
mov
mov
mov
movl
movl
mov
sbb
mov
xorl
push
push
push
orl
mov
xor
mov
add
orl
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
jmp
jl
inc
movsb
jecxz
popa
xor
inc
mov
jle
jg
jle
insl
or
faddl
push
xchg
insb
jns
xchg
mov
cmp
pop
or
das
ret
xchg
shlb
cmpsb
lock
push
cmc
or
out
fldt
push
mov
out
push
insl
and
jmp
xor
dec
mov
call
dec
faddl
ss
adc
inc
sbb
arpl
dec
xor
cmp
adc
movsb
and
xor
js
in
sbb
bound
mov
sbb
cmp
icebp
fs
and
or
subb
pop
xor
cli
insb
movsl
cmc
dec
push
pop
sbb
sub
push
arpl
aad
and
add
jno
inc
xlat
scas
cmp
jle
push
inc
lret
cmpsb
ljmp
mov
mov
movsb
sub
sub
outsl
sbbb
cmp
pusha
inc
scas
fsubrs
jg
xchg
inc
enter
inc
lret
leave
dec
lods
dec
push
imul
add
pop
fstps
adc
or
hlt
out
and
sbbb
int3
pusha
mov
add
cmp
mov
ja
push
add
xchg
sbb
push
jecxz
bound
or
out
mov
mov
or
arpl
popf
ja
jo
out
or
mov
dec
mov
mov
xchg
mull
imul
rolb
outsb
sub
adc
or
jnp
push
push
call
inc
adc
adc
jne
xor
aam
push
ficoms
add
cld
xchg
mov
stc
fisubrs
movl
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
neg
movl
mov
or
movl
mov
andl
xor
add
mov
sbbl
movl
sub
movb
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
xor
add
mov
mov
sbbl
xor
sbbl
add
incl
push
xor
xor
xor
mov
subl
xor
orl
add
push
or
mov
orl
xor
notl
add
adcl
push
sbbl
lea
push
decl
pushl
subl
pushl
andl
call
test
je
lea
sbbl
push
movzbl
sbb
mov
jmp
xor
sbb
repnz
jb
inc
orb
jle
push
inc
ja
stos
dec
in
test
icebp
sbb
inc
enter
fisubs
mov
ja
mov
add
adc
add
mov
pushf
mov
bound
fs
xchg
ret
js
arpl
insl
in
xchg
xor
xchg
scas
mov
icebp
das
fcmovnb
iret
adc
cmp
clc
inc
outsl
dec
roll
mov
jb
cmp
add
outsb
jne
pop
shlb
or
fwait
jne
inc
add
stos
cmp
sbb
xor
test
ret
add
mov
add
bound
cmp
jl
mov
icebp
loop
movsb
and
or
adc
push
insl
adc
ret
inc
lock
mov
jg
xor
ret
or
int
lea
pop
ljmp
rorb
in
sti
sub
xchg
pop
js
movsb
arpl
push
dec
popa
sub
adc
adc
fistps
insb
jecxz
lods
icebp
arpl
in
inc
mov
adc
jb
nop
or
pop
cld
test
in
inc
mov
xchg
fcmovu
cmp
jmp
xchg
pop
ds
aam
dec
stos
aad
jg
mov
jg
add
adc
push
xor
dec
xchg
jns
in
data16
push
mov
sub
and
mov
out
ret
pop
mov
dec
pusha
cwtl
loopne
fsubrs
jo
dec
cmp
fidivrs
stos
mov
das
jl
rorb
sbb
cld
out
mov
mov
mov
fistpl
xchg
ret
es
shll
lock
lcall
outsl
xchg
mov
jae
xchg
loopne
pop
stc
or
ficomps
inc
push
pop
jg
jge
add
mov
xor
add
push
mov
add
push
jmp
jne
adc
flds
mov
in
fcomi
pusha
sub
push
jg
jle
inc
aas
pop
iret
cmp
test
scas
xor
insl
xor
cmp
cmpsb
mov
dec
dec
sarl
test
hlt
push
mov
shll
jae
movsb
outsb
mov
cmc
or
movsl
fs
gs
sbb
jle
jo
pop
add
push
inc
pop
jle
mov
shrl
mov
rcll
jl
xchg
mov
lock
pushl
sbb
lock
enter
pop
or
lods
ss
fistps
mov
repnz
cs
inc
inc
dec
repz
sti
aaa
xchg
dec
jne
hlt
sahf
jne
aam
das
mov
cmp
out
lock
addr16
aas
fmul
mov
lahf
or
ds
loop
inc
sahf
sub
add
sbb
mov
out
imul
cs
lea
inc
popf
mull
stos
fidivl
lcall
stos
cltd
sbb
pop
xor
xchg
mov
inc
lcall
fstl
js
cmp
int3
pop
lods
cmp
fcoml
into
inc
insb
or
mov
pop
cmp
pop
cwtl
cli
stos
in
pop
fsubrp
sub
and
mov
xor
push
cmpsl
and
cmpb
mov
and
fs
repz
ss
js
iret
fistl
mov
cmpsl
mov
mov
daa
dec
xchg
cmc
or
sub
xchg
sub
imul
or
add
pop
sbb
push
shrb
cmp
mov
and
in
mov
inc
sub
sub
and
cvttps2pi
mov
mov
pushl
call
mov
cmpl
lea
jmp
xchg
leave
rorl
mov
lods
xchg
pop
inc
aaa
jle
push
jg
jle
imul
shrl
add
xlat
and
mov
int
hlt
push
adc
mov
lcall
or
and
mov
outsl
mov
add
arpl
stos
mov
dec
hlt
negl
imul
sbb
dec
ss
aad
sbb
jns
rcll
ss
jl
sub
cld
xor
nop
cli
dec
pushf
sub
sahf
cwtl
jmp
or
loope
inc
adc
ja
loopne
xor
hlt
in
imul
les
jae
dec
pop
xchg
mov
sbb
loope
add
cmc
sub
fistpl
add
lcall
push
inc
jo
or
shrl
mov
pop
jg
js
push
jl
icebp
inc
mov
or
pop
test
push
in
sbb
int
add
xchg
pop
cmp
push
jmp
or
aam
js
in
stos
xor
add
js
clc
bound
cmp
xchg
std
jmp
sub
clc
pop
aad
push
and
fsubp
and
mov
push
js
mov
ret
lods
jecxz
int3
imul
bound
mov
dec
and
int3
xchg
out
jg
inc
stos
jne
push
std
addr16
roll
jge
dec
jp
inc
mov
xchg
cli
mov
jl
cmp
cwtl
push
dec
int
in
int3
and
pop
sti
fdecstp
lcall
sbb
gs
mov
shl
adc
push
ds
fsubs
das
pop
pop
mov
inc
or
mov
sub
stc
imul
inc
loopne
test
repz
add
hlt
pushf
dec
mov
inc
and
xchg
pop
push
lcall
jle
adc
cmp
cmc
xchg
push
addl
lahf
dec
add
mov
jo
lds
pop
notl
or
adc
hlt
mov
hlt
pop
sbb
imul
mov
aad
cmc
adc
push
xchg
pop
aas
movsl
pop
mov
out
jo
daa
lret
add
rorl
jl
insb
aas
push
or
mov
cld
stc
movsb
mov
loop
xchg
push
data16
out
andl
outsl
call
addr16
sub
adc
fstpt
or
adc
pop
mov
lret
inc
inc
hlt
negb
and
movsl
clc
cmc
xchg
in
rolb
pop
cmc
outsb
mov
jge
inc
adc
daa
std
xor
call
in
mov
mov
in
jne
loope
dec
data16
js
push
insb
ljmp
jecxz
rclb
inc
push
fadd
lods
into
stos
add
in
mov
mov
adc
push
lret
inc
xor
jno
ret
dec
or
dec
icebp
int3
adc
popa
dec
xor
test
jbe
lret
out
mov
sbb
mov
pop
incl
aad
jns
nop
out
dec
xor
adc
ljmp
jae
mov
lods
xchg
outsl
jl
adc
mov
add
je
fs
jb
rol
loop
sbb
xchg
je
or
in
jnp
outsl
mov
xchg
jl
cmc
fwait
aad
lret
mov
loope
cs
repz
adc
jno
rcll
jg
loope
mov
cmpsb
xchg
cmc
push
xlat
ds
sub
add
xchg
js
xchg
int
ja
dec
xchg
lret
test
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
jmp
cmp
loope
jno
dec
add
and
add
icebp
xor
push
jg
jle
clc
push
in
cwtl
addr16
rcr
xlat
push
mov
and
outsl
and
jns
orb
loopne
movsl
pop
ret
stc
mov
mov
jne
mov
mov
loope
mov
movsb
das
mov
sti
call
push
dec
jb
daa
mov
xor
outsb
sbbb
test
inc
test
adc
mov
sub
or
pop
aas
rcll
or
das
lods
stos
mov
ficomps
mov
popa
xchg
hlt
mov
push
call
push
negl
add
and
cmpsl
xchg
or
and
cmp
adc
js
cld
les
or
aaa
mov
das
je
clc
lds
add
mov
and
stos
dec
mov
es
and
idiv
sbb
cs
ret
scas
push
pop
dec
adc
mov
xor
in
sti
outsb
icebp
xchg
add
add
or
in
int
mov
sbb
lret
jo
mov
sub
dec
cmc
aam
jg
leave
mov
fs
and
pop
cli
fcoml
bound
rclb
cmpsb
cmc
insb
adc
add
imul
pop
aam
mov
fwait
mov
jecxz
lret
jno
xchg
in
mov
mov
xchg
popa
add
jae
dec
pop
and
scas
sarb
cwtl
adc
push
pop
mov
divl
data16
aad
or
sbb
inc
xchg
lds
mov
bound
xor
adc
inc
add
sub
cmpsb
and
mov
mov
push
test
sahf
pushl
pushl
jmp
push
mov
dec
sub
enter
mov
aam
jle
push
jg
jle
pop
repz
in
pop
xchg
xchg
push
fadd
jb
xchg
shlb
mov
sub
movsb
rcr
mov
push
jbe
cmpb
adc
loopne
dec
or
mov
push
out
sbb
cmpsl
dec
fidivs
xor
mov
insb
insl
mov
ja
outsb
mov
insb
dec
cmp
enter
mov
sbb
inc
inc
cmc
in
jmp
cmp
aad
mov
jns
arpl
fbld
in
ja
aas
inc
loop
pop
mov
mov
repnz
cwtl
pop
mov
xchg
xor
pop
lods
adc
in
das
nop
and
inc
repz
xchg
and
pop
mov
shrb
add
loop
fdivs
mov
sahf
dec
push
pop
push
movsb
addl
aaa
ljmp
in
icebp
dec
sbb
aaa
cmp
inc
mov
xchg
fs
test
and
cmp
xchg
jp
loope
ljmp
push
pop
cmc
in
mov
mov
mov
cltd
pop
lahf
jbe
stos
xor
push
adc
push
js
xchg
fwait
mov
cmp
test
mov
in
neg
and
icebp
fstpl
pop
mov
icebp
ss
in
out
mov
imul
imul
iret
dec
mov
lret
fwait
xchg
aas
andb
es
and
and
loop
lock
push
adc
out
xorl
add
adc
and
mov
pop
sub
xchg
mov
and
mov
pop
cwtl
adc
and
mov
jae
mov
incl
add
add
inc
in
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
jmp
fwait
imul
shlb
jae
sbb
sub
jle
push
jg
jle
cld
mov
sbb
add
inc
gs
pop
pop
sbb
testl
iret
test
inc
call
aam
jg
movsl
jno
inc
push
pop
xchg
outsb
adc
push
sbb
out
xchg
dec
and
ja
lods
cmp
pop
test
ja
xchg
mov
imul
rol
push
mov
ss
popf
test
cmp
cmp
xlat
and
jmp
sbb
xor
das
std
push
out
orl
out
clc
jo
push
inc
lods
pop
ds
mov
cmp
xchg
sbb
mov
pop
mov
and
and
sub
ja
loope
jo
fistps
dec
jns
daa
leave
mov
call
or
out
add
ja
ret
dec
add
mov
cmpsb
jo
fwait
inc
mov
pop
sbb
pusha
ss
inc
jmp
and
bound
adc
test
push
enter
lret
xchg
js
dec
ja
test
jle
mov
push
push
rorl
aam
adcl
inc
ja
lds
iret
psrlw
sbb
faddl
sbb
aaa
in
fwait
mov
inc
ljmp
and
icebp
into
fistps
pop
je
es
xchg
and
cli
sub
cli
out
mov
lea
jecxz
inc
jmp
inc
pop
add
xor
pop
push
cmp
cmp
add
clc
aam
push
push
and
dec
xor
push
mov
inc
mov
xchg
sbb
pusha
sub
aas
ret
dec
dec
xor
cld
jbe
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
jmp
xchg
lods
sbb
mov
ljmp
push
cmp
jle
xchg
mov
ret
adc
shll
std
push
add
rcr
sub
ja
js
test
dec
into
push
push
or
xor
andb
push
fisubl
and
mov
sub
jle
insl
pop
aam
test
jae
out
add
sub
shlb
sahf
or
pushf
in
mov
adc
daa
lret
inc
into
fwait
inc
movsb
add
mov
jecxz
iret
gs
inc
pop
push
mov
xlat
sub
fisubs
pushf
test
mov
jb
cltd
push
mov
cli
loop
mov
dec
das
stc
sub
ja
mov
stc
out
xor
mov
clc
scas
sub
inc
test
push
fwait
jmp
or
pop
sub
lds
movsb
fmull
jp
arpl
push
iret
add
mov
push
loopne
xchg
cmp
movsl
dec
popa
es
pop
and
inc
push
dec
cld
mov
incb
bound
mov
test
movsl
sub
add
sub
ljmp
cmp
or
adc
test
out
adc
or
mov
and
mov
lahf
hlt
lret
pop
jg
fisttpll
sbb
xlat
ds
mov
sub
arpl
mov
push
clc
cltd
xor
addl
push
fsub
inc
add
or
push
sbb
inc
data16
cmp
adc
loope
cmp
stos
rorb
push
sbb
loop
outsl
lods
fsubrp
xchg
or
fldt
jg
adc
lods
test
ffree
cmp
fcoml
xor
loop
fistps
mov
push
add
and
inc
add
or
pop
leave
ret
push
mov
sub
push
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
add
dec
mov
jmp
movzbl
xor
mov
mov
and
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
call
cmpl
jb
or
movl
movl
cmpl
je
cmpl
jne
call
xor
xor
dec
mov
jmp
sub
movl
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
push
call
jmp
xor
xor
xor
add
mov
movzwl
and
mov
jmp
cld
ss
je
inc
mov
mov
cmpsl
out
cmp
mov
jle
xchg
push
mov
xor
cld
pushf
sub
sub
mov
push
sbb
loop
and
insb
lds
in
into
adcl
shll
mov
cmp
gs
imul
inc
add
inc
aad
pop
ret
lea
scas
mov
sbb
adc
in
lods
fisttpl
arpl
pop
sbb
int3
call
xchg
sub
mov
cltd
adcb
inc
push
and
push
hlt
inc
fwait
js
mov
xchg
and
test
cli
mov
lahf
sub
outsl
mov
insl
hlt
fnstcw
fldt
dec
xlat
clc
icebp
adc
push
pop
jne
dec
std
test
push
pop
xchg
int3
add
pop
fwait
jge
and
arpl
nop
xchg
jnp
ljmp
push
mov
syscall
outsb
adc
jnp
fs
adc
sbb
jnp,pt
xchg
push
sbb
ljmp
pop
jbe
mov
jmp
jne
sub
push
outsb
inc
sbb
mov
pop
mov
or
add
test
jmp
lahf
movsl
leave
sahf
mov
imul
insl
shrl
jmp
daa
inc
std
xor
mov
stos
sbb
shrl
lods
and
movsb
sub
cwtl
xchg
pop
inc
mov
push
lock
xor
je
mov
test
push
mov
lahf
push
call
cwtl
add
loopne
ljmp
inc
arpl
cld
add
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
jmp
xchg
sahf
icebp
jno
arpl
dec
add
jle
mov
jle
std
inc
pop
aaa
mov
pop
jne
mov
rorl
outsl
mov
xor
xor
cltd
and
push
mov
pop
pop
test
mov
adc
fcomi
enter
sti
inc
adc
mov
sti
push
cs
and
cli
shl
insl
add
cmp
movsb
cmp
mov
lock
or
or
data16
ja
adc
lods
jp
bnd
jo
xor
mov
fiadds
mov
jae
push
in
test
out
popf
sbb
out
nop
dec
dec
repz
addr16
stos
aad
outsl
cs
or
addr16
fcoml
clc
cmc
push
xor
sub
pusha
add
fldcw
sub
mov
push
test
add
jecxz
orb
fisubs
xchg
xchg
sub
test
scas
mov
fistpll
fdivrl
pop
jns
aam
lcall
popf
je
mov
aaa
inc
scas
std
sub
and
or
jno
lahf
repz
adc
dec
and
jl
xlat
lods
leave
push
std
sub
fnstenv
jns
xchg
xor
test
in
cmp
cmp
push
ss
add
xchg
repnz
xor
pop
sbb
pop
sbb
and
xorl
mov
jnp
sub
loop
jno
pop
xchg
xchg
mul
cmp
mov
mov
mov
xor
xor
add
xor
jmp
sub
fnstsw
fucomp
sub
cmp
subl
jle
mov
jle
push
int3
jbe
rcl
jl
fwait
jle
leave
rorl
lret
add
push
or
pop
inc
inc
mov
movsl
mov
pop
mov
cwtl
insb
mov
cmp
imul
std
in
pop
repz
or
ljmp
pop
add
lret
mov
mov
addr16
dec
ss
push
mov
dec
pop
shrl
jb
ljmp
les
pop
fisubs
push
enter
gs
iret
or
sub
mov
sbb
imul
enter
dec
jo
popf
jne
inc
jmp
nop
mov
pop
jmp
mov
pop
sbb
mov
mov
push
adc
xor
jae
lahf
movsl
jg
out
in
inc
xor
icebp
and
cmp
push
cli
int
cmp
outsl
sti
cmp
shlb
pushf
pop
xor
push
dec
xchg
in
adc
sub
jecxz
jle
cmpsb
pop
xor
mov
out
mov
push
hlt
jg
push
inc
data16
xchg
or
mov
cmpsl
xor
xor
and
sbb
add
sub
add
bound
mov
or
sub
lret
or
ljmp
ss
add
push
mov
cmpsl
xor
das
pop
add
push
std
cmp
daa
inc
pop
inc
aad
cmpl
inc
add
add
add
or
cmp
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
movl
adc
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
push
pushl
push
push
pushl
push
pushl
pushl
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
movl
movl
mov
xor
add
or
jmp
mov
icebp
inc
jno
mov
add
mov
jle
xlat
ret
jns
lcall
stos
mov
mov
scas
push
mov
dec
shrb
lds
xchg
mov
adc
pop
adc
or
mov
dec
mov
or
mov
xchg
jl
andb
cmp
cmp
sti
std
xor
mov
inc
inc
xchg
mov
jmp
mov
stos
push
sbb
adc
in
stos
inc
adc
mull
fidivrl
xchg
mov
mov
sub
sub
or
pusha
inc
mov
xchg
cli
je
test
cmp
fstpt
cmp
test
xor
out
shl
dec
jg
adc
aaa
xor
mov
dec
mov
inc
insl
ffreep
push
mov
addr16
mov
xor
dec
in
imul
jle
mov
arpl
in
inc
sub
in
es
test
push
add
repz
and
leave
adc
repz
sub
shl
sub
sbb
pusha
or
outsb
int
insb
fwait
add
leave
push
out
cwtl
dec
cld
mov
int
xchg
pop
jo
shr
fisttps
ret
jns
cli
or
movups
pop
lods
adc
push
imul
dec
pop
fadds
fwait
mov
mov
mov
test
sbb
push
aas
mov
mov
orl
add
movl
cmp
movl
jmp
notl
push
jb
out
or
lcall
lds
mov
jle
shlb
dec
jl
mov
inc
mov
push
mov
adc
jle
in
stc
jg
jmp
ja
dec
out
call
roll
inc
pop
loope
cltd
and
out
jne
aam
mov
adc
scas
cmp
out
mov
add
add
or
test
cmp
cmc
xchg
insl
ror
rcr
xchg
aam
inc
aaa
cmpsl
outsw
ror
aas
dec
fsubr
pop
dec
mov
shrl
pop
add
out
pop
and
mov
sbb
mov
stc
test
cmp
mov
mov
adcb
loopne
inc
jae
or
and
mov
sub
pop
lret
lret
jp
inc
push
ljmp
ds
out
jb
sbb
test
xor
push
bound
iret
mov
xchg
in
push
arpl
or
movsl
xchg
jecxz
mov
adc
xor
sahf
and
add
scas
mov
das
sbb
or
js
test
out
push
mov
sub
sbb
add
jg
fwait
and
pop
es
ja
cltd
xchg
cmp
xchg
loopne
xchg
scas
ja
test
addr16
aas
jno
lret
push
jno
mov
dec
gs
hlt
jne
sub
and
fsubrl
xchg
ucomiss
mov
sahf
bnd
push
jmp
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
mov
sub
jmp
or
icebp
jno
out
jns
pushf
out
into
hlt
inc
ret
mov
jle
fs
shr
push
les
stc
dec
dec
or
pop
sahf
cmp
clc
shl
pop
dec
mov
jp
xchg
push
jmp
stc
test
cmp
cmp
rclb
mov
mov
das
shlb
xor
pop
mov
insl
inc
stc
jg
jno
push
pushf
xor
dec
fstpl
adc
daa
ljmp
enter
je
cmp
lods
mov
push
daa
out
dec
or
mov
aam
jecxz
dec
cmpsl
cld
imul
push
das
mov
mov
xor
sub
inc
pushl
pushf
in
jo
les
and
addr16
push
ret
imul
lods
mov
or
outsb
xchg
sbb
push
jbe
out
mov
outsb
rorb
inc
mov
xchg
dec
mov
sub
sbb
nop
jp
mov
call
aad
ret
cld
sub
notl
sarl
mov
xchg
sub
test
cmpsb
push
mov
mov
xchg
inc
js
mov
leave
and
fstpl
int3
cmpsb
fisubs
aad
inc
out
popa
and
jge
jle
scas
aam
xchg
orl
jne
loop
je
lods
dec
popw
sbb
std
mov
test
fdivs
push
mov
adc
push
push
int
lahf
pop
jns
shll
or
pop
mov
sarl
mov
adc
dec
add
xor
add
cmp
movl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
inc
mov
mov
xor
xor
sub
add
add
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jb
imul
mov
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
ret
movsl
shll
dec
pushl
shrl
jg
jle
jge
inc
jmp
negb
out
lds
daa
ss
lahf
iret
dec
push
jns
loopne
sub
xor
and
pop
or
sub
mov
iret
push
pop
cltd
mov
lahf
cltd
and
aam
pop
mov
mov
or
cmp
insb
sub
mov
pushf
mov
inc
mov
push
lahf
fs
inc
jle
out
hlt
test
sub
int
mov
cmc
push
iret
push
cwtl
push
jns
sub
inc
fs
fnstsw
int
or
add
xchg
xlat
add
mov
cli
lahf
mov
xor
ret
ret
add
stc
xchg
dec
dec
jae
cmp
jns
mov
decl
loop
ret
out
sub
xor
mov
aad
jp
daa
mov
fildll
sub
mov
lock
push
test
in
adc
out
fistl
add
push
cmp
or
push
jmp
jns
mov
add
ret
mov
imul
cmp
fcoml
jmp
or
ja
je
dec
movsl
push
sub
sub
hlt
out
idivb
inc
scas
sti
or
fiadds
cmp
pcmpgtb
push
daa
push
iret
jp
mov
or
outsl
xchg
and
das
mov
mov
dec
out
xor
xchg
sub
jns
pop
lock
cmp
ja
mov
jmp
mov
mov
jmp
mov
dec
jno
les
loope
sarl
jg
jle
rclb
movsb
jecxz
in
leave
jmp
push
mov
stos
ret
outsl
add
pop
aam
push
sarl
arpl
aam
push
roll
shrb
mov
loop
sbb
aad
cwtl
mov
movsb
mov
loopne
cs
sbb
adcb
mov
bound
pop
jl
add
fstpl
ljmp
icebp
in
in
xchg
jmp
xchg
aas
dec
fmull
leave
adc
je
sbb
ret
mov
iret
add
shrl
push
insl
inc
sub
outsb
dec
aaa
in
pop
leave
jg
sub
xchg
fstl
cmp
xor
out
cmp
mov
push
mov
stos
sub
stos
nopl
or
addl
pusha
sub
pop
es
movsl
aam
subl
xor
xchg
add
out
sar
and
and
leave
mov
jno
xor
pusha
pusha
int
faddl
popf
roll
mov
shlb
std
outsb
fstpt
jmp
sbb
stos
sbb
jbe
inc
call
inc
xchg
movsl
mov
dec
enter
mov
sub
out
dec
sub
test
inc
mov
xor
add
insb
pop
or
inc
xor
in
dec
xlat
sub
push
xchg
cmpsb
add
clc
es
adc
pop
push
mov
sarb
cwtl
mov
inc
into
xor
xor
add
add
imul
mov
mov
sub
cmp
jmp
imul
mov
jno
loopne
cmp
test
jle
mov
jle
int3
xchg
inc
fidivrs
push
lock
xchg
dec
mov
jnp
in
test
sbb
cmp
mov
mov
add
sub
mov
test
rolb
xor
adc
pusha
dec
scas
adc
ss
dec
xchg
mov
mov
nop
xchg
adc
push
mov
test
popa
test
leave
outsl
sar
mov
cmpsl
xchg
cmp
lods
sbb
call
addl
in
cld
cli
loopne
in
rcl
rcll
mov
mov
into
mov
jae
cmpsl
lock
roll
and
gs
lea
rol
mov
pop
in
pop
and
aas
or
aaa
sub
inc
lret
scas
push
pop
dec
test
enter
inc
dec
movsb
aam
enter
sub
inc
xchg
rorl
adc
mov
ds
mov
stos
sahf
test
push
ljmp
mov
scas
rclb
aaa
fwait
rolb
jb
cmpl
xchg
lcall
inc
nop
mov
inc
pop
add
xor
dec
jmp
mov
outsl
out
sbb
shr
add
mov
xchg
pop
rorb
cmpsl
mov
rclb
ds
insb
mov
jmp
sub
add
cld
jl
inc
outsb
outsl
std
xor
pushf
cmp
movb
push
arpl
ja
mov
jmp
mov
mov
xor
xor
jmp
in
test
call
xchg
and
repnz
jle
mov
jle
outsb
shrb
mov
jo
shll
jns
test
xchg
sub
es
mov
movsb
sahf
jns
test
outsl
xor
or
jmp
sbb
addr16
andl
dec
fildll
inc
jp
xor
adc
xchg
lea
mov
or
scas
js
test
pop
xchg
push
icebp
paddsb
sti
sti
pop
sub
not
int3
mov
mov
fldt
es
out
jnp
dec
out
push
imul
nop
addl
pusha
pop
test
and
push
sahf
cmc
xor
sbb
and
icebp
add
sarl
andl
add
cmp
push
xchg
push
adc
out
mov
mov
sub
inc
push
xlat
negl
ficomps
mov
lret
push
xchg
movsb
and
ret
gs
push
or
out
mov
xchg
add
int3
lret
in
pop
push
sbb
dec
adc
xchg
cltd
jge
outsb
xchg
sub
adc
pop
adc
adc
pop
je
loop
mov
sbb
std
sbb
xchg
in
xchg
inc
scas
sbb
jo
mov
test
mov
ljmp
pop
aad
inc
or
dec
mov
imul
stos
mov
jmp
inc
ror
cmpl
mov
adc
rorl
scas
xlat
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
jmp
jmp
push
mov
out
test
lret
mov
jle
pop
aam
cmc
jbe
fadds
or
mov
mov
negb
and
mov
ljmp
push
add
fnsave
cmp
pop
push
clc
push
shll
add
pop
inc
sub
adc
arpl
bound
mov
xchg
es
je
int3
jnp
and
xchg
xchg
cmc
dec
push
pop
push
loope
add
loope
mov
cwtl
sub
ret
mov
push
test
mov
mov
mov
dec
add
dec
push
xchg
mov
mov
jg
jecxz
sbbl
dec
lea
cmp
lea
int
scas
mov
pop
jbe
repz
jecxz
scas
sub
mov
sub
in
inc
xchg
sub
jne
sbb
test
xchg
into
stc
dec
sbb
dec
out
jae
pushf
dec
adc
xchg
cmovs
jae
movsl
mov
mov
icebp
das
jbe
imul
mov
dec
xor
dec
or
les
addb
dec
push
addr16
xor
cmp
imul
mov
sti
mov
cmp
js
lock
gs
scas
pop
rcll
cmp
aaa
adc
mov
cmp
cmpl
xchg
add
cmp
dec
repnz
sub
sbb
divl
jno
fsubrp
and
fs
js
pop
add
jmp
dec
adc
add
push
push
jl
ljmp
enter
jg
jle
outsl
mull
fistl
add
adc
push
movsl
or
push
cli
dec
loopne
push
pop
or
push
pop
inc
mov
ljmp
fsubrl
mov
and
sub
inc
fcoml
and
nop
inc
js
mov
fidivrl
addr16
xlat
push
mov
outsb
fsubs
sub
cmpsl
adc
in
mov
insb
iret
jo
leave
mov
loopne
arpl
adc
inc
push
outsb
insb
mov
cli
mov
mov
mov
stos
daa
iret
inc
fisttpll
cmpsb
xor
push
and
test
or
jmp
aam
adc
sub
mov
mov
jg
mov
lahf
cmpb
lret
bound
mov
pop
movsb
add
mov
sbb
mov
mov
push
jmp
sub
das
cmp
in
jmp
arpl
mov
loopne
xor
std
jl
lcall
data16
jmp
dec
andl
mov
xchg
xchg
sarl
mov
sbb
out
nop
mov
dec
add
std
jp
cltd
and
jns
gs
pop
sarb
pop
cwtl
inc
adc
jnp
stos
jg
dec
lea
mov
pop
daa
pop
jns
or
adc
scas
cmpsl
sub
repz
xchg
dec
jbe
xor
push
icebp
js
scas
xlat
mov
mov
sub
jmp
and
xor
pushf
out
pop
and
jle
mov
jle
mov
insl
hlt
or
pusha
or
insb
repz
mov
cs
mov
add
mov
or
stc
cld
mov
and
cmp
fstl
mov
sarb
inc
xor
mov
adc
dec
mov
cli
sbb
imul
outsl
orb
je
ffree
lds
xor
fstps
mov
push
xor
ja
and
cmpsl
and
push
xchg
jecxz
aam
pop
js
push
daa
jae
xor
fcmovb
pop
and
xor
dec
cmp
pop
mov
loope
jae
xchg
jns
call
call
std
and
adc
jae
xchg
or
sbb
sbb
repnz
outsb
imull
adc
rorb
add
sub
fsubrs
jne
mov
jb
sub
or
xorl
cmp
and
test
pop
lods
out
sbb
cs
pop
fsubrl
lods
xor
lea
dec
pusha
cmpsb
outsl
ljmp
or
adcl
int3
repnz
sahf
push
and
lahf
dec
mov
jb
or
into
jae
dec
adc
or
push
sarl
mov
icebp
test
push
out
sub
adcl
or
add
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
jmp
add
jne
mov
mov
jle
jg
jle
jb
dec
mov
jns
cltd
pop
push
pop
adc
mov
std
hlt
call
lods
les
outsb
and
stos
mov
jp
imul
add
pop
mov
insl
fmuls
sbb
add
sahf
adc
mov
div
addr16
sub
pusha
popa
or
jg
or
rol
xchg
jae
jg
popa
and
xchg
cmp
add
mov
cwtl
pop
add
push
mov
icebp
fs
stos
jle
mov
sub
dec
and
xor
enter
test
jp
es
dec
pop
loopne
xchg
mov
pop
lea
jno
add
pop
in
lds
adc
fwait
mov
jle
mov
adc
shlb
add
pop
sbb
out
xorl
jle
movsb
xorl
testl
sbb
outsl
test
iret
leave
push
push
mov
clc
mov
imul
bound
jecxz
add
cs
xlat
into
jl
add
loopne
movsl
jge
jg
out
and
pop
xlat
sarb
loopne
sub
jbe
jmp
mov
fdivrs
mov
call
insl
out
and
mov
ret
loopne
jmp
and
dec
mov
mov
push
sub
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
jmp
mov
je
jmp
or
lahf
cmp
mov
jle
movsl
mov
outsl
ljmp
pop
popa
sbb
xor
add
imull
inc
loop
push
push
test
push
mov
xchg
inc
pop
sahf
mov
jae
mov
js
scas
inc
ret
jg
jg
lock
enter
dec
inc
sub
or
jle
pop
jge
mov
add
jo
mov
xor
adc
push
and
rcr
mov
lahf
xor
in
xor
pop
xor
pop
sbb
imul
xchg
mov
sahf
arpl
movsb
gs
jae
cmp
jg
daa
and
and
mov
xchg
or
fisubs
inc
fwait
add
push
mov
push
mov
dec
mov
sub
lcall
xor
repnz
inc
adc
jno
ss
fisubrs
sbb
sbb
icebp
xorb
sub
sbb
lds
loopne,pn
fstl
push
call
bound
mov
adc
icebp
mov
shrb
xor
aas
xor
in
xchg
add
push
bound
stc
add
leave
cmpl
xchg
dec
sbb
aad
cwtl
outsb
or
and
out
inc
mov
push
mov
jno
lods
jmp
mov
cmp
rorl
xlat
adc
cmpsl
cli
lock
mov
mov
sub
pop
lods
dec
pop
add
pop
repz
in
mov
add
imul
mov
xor
sub
jmp
decl
xor
xchg
lea
scas
stc
sarl
mov
jle
out
jae
lods
lods
aaa
addb
pop
mov
inc
sub
cli
mov
inc
frstor
lods
lods
pop
dec
jl
cmp
mov
sbb
leave
fs
xor
and
daa
add
or
pop
sbb
subb
enter
push
out
push
or
inc
mov
leave
shll
adc
inc
in
mov
outsl
inc
popa
pusha
repnz
lahf
and
addr16
pop
ret
cwtl
jle
pop
and
and
inc
flds
aaa
cmc
and
cmp
sbb
mov
leave
scas
jno
bound
lods
sub
test
ja
lret
ja
test
or
lods
mov
jbe,pt
pushf
cmp
das
push
and
mov
mov
fucomip
mov
mov
shll
stos
sbb
mov
mov
lods
subl
add
adc
jge
lock
pushf
xchg
jmp
sub
pop
xor
sub
push
inc
push
and
mov
pop
dec
lahf
push
call
dec
into
dec
xor
cli
aaa
cs
movsb
mov
icebp
jp
adc
cmp
outsl
jns
jne
cmp
addr16
fstp
and
inc
dec
sarl
inc
xor
ja
jl
scas
push
push
and
test
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
jmp
and
inc
xor
ret
das
iret
sub
jle
jg
jle
inc
jle
xchg
xor
lcall
sub
call
fstps
in
and
inc
push
add
push
sub
jae
movsl
jno
and
stc
xlat
mov
pop
pop
out
push
orl
xchg
xlat
icebp
ret
mov
pop
insb
movl
arpl
adc
js
xor
jae
test
adc
cmc
inc
fistpll
sub
lret
lret
or
out
into
fs
dec
push
roll
mov
stos
cmc
mov
lods
mov
imul
into
jns
mov
in
and
cmp
cmc
pop
test
mov
enter
test
sub
call
mov
fs
mov
cmp
lret
das
jge
test
sti
xor
push
and
jb
cmpsb
call
dec
sbb
push
add
loopne
cmpsb
xchg
cmp
out
testb
ret
xchg
pop
int3
repnz
mov
scas
push
arpl
xor
push
sbb
cmp
mov
push
cmp
outsl
adcl
dec
sub
sub
or
je
pop
xorb
pop
loope
lods
call
mov
stos
stos
dec
dec
dec
mov
sbb
cmc
icebp
out
leave
les
xlat
stos
fisttpl
dec
mov
pop
adc
xor
xlat
outsl
adc
mov
lea
mov
mov
xor
mov
sub
add
mov
jmp
adc
das
test
xor
mov
adc
jo
sarl
mov
jle
and
rclb
sbb
ficomps
jo
insb
lea
dec
adc
cs
popa
repz
outsl
test
jne
sub
ss
lret
or
xchg
adc
mov
xor
cwtl
shl
fs
cmp
inc
lret
outsb
arpl
shlb
or
shl
jbe
jae
dec
mov
aad
pop
pop
dec
xor
test
hlt
outsb
or
clc
cmp
push
xor
lret
imul
mov
add
aas
jb
sub
push
add
test
add
idivb
ljmp
mov
and
jne
rclb
clc
lahf
sbb
loope
test
push
daa
arpl
fdivl
in
outsb
int3
repnz
dec
xchg
out
xchg
lea
popf
jle
sbb
lret
sub
in
or
pop
faddl
jmp
in
mov
lds
dec
cmp
mov
cmp
jecxz
bound
cmc
inc
push
aad
mov
aam
mov
add
loope
js
add
mulps
jp
into
int3
test
inc
cmp
push
addb
jmp
and
imul
inc
lret
jle
div
test
push
lea
call
mov
in
jno
inc
nop
pop
mov
adc
or
aad
sbb
cmp
push
inc
pop
out
incb
jmp
mov
pop
mov
xor
jmp
or
addr16
jne
mov
mov
adc
fistpll
mov
jle
in
or
outsb
sub
in
add
sbb
add
adc
mov
sub
jecxz
inc
dec
aad
jg
loop
outsb
add
push
mov
mov
orl
repnz
in
idiv
rcll
mov
clc
push
inc
out
dec
arpl
adc
mov
jecxz
sbb
mov
mov
div
mov
pop
lret
adc
stc
add
push
lcall
mul
movsl
stos
push
pushl
in
cmpsl
movsl
fdivrl
hlt
jmp
cmp
sub
xor
leave
loope
movsb
stos
mov
popf
push
testl
jl
imul
push
xchg
dec
cltd
adc
out
adc
stc
jge
subl
cmp
mov
lahf
call
xchg
xchg
push
mov
add
adc
push
aas
mov
iret
bswap
adc
test
lds
jecxz
dec
push
lcall
add
inc
xor
jmp
dec
xchg
fstpt
adc
xchg
jmp
jp
and
inc
jne
inc
sub
cmp
lcall
sub
hlt
fidivrs
sub
repz
push
sub
pop
add
inc
mov
push
mov
fmull
mov
pop
mov
nop
nop
into
pusha
repz
sub
cmp
xchg
ss
jno
repz
xchg
loop
stos
jl
cmpl
inc
lret
mov
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
call
andl
xor
movl
cmp
movl
jne
cmp
movl
jne
push
call
sbbl
push
orl
call
adcl
test
je
movl
push
xorl
push
orl
call
push
mov
mov
and
mov
movl
adc
lea
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
subl
mov
lea
mov
mov
sbb
mov
mov
mov
mov
mov
and
mov
orl
push
add
mov
adcl
xor
orl
push
neg
mov
subl
add
movl
mov
mov
mov
cmp
mov
movl
je
and
mov
addl
xor
add
orl
imul
mov
jmp
push
call
adcl
test
je
xor
movl
jmp
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
add
mov
mov
adc
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
notl
mov
xor
add
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
xor
addl
add
movl
cmp
movl
jne
sbbl
pushl
pushl
sbbl
call
movl
cmpl
je
cmpl
jne
push
pushl
push
call
mov
dec
mov
jmp
mov
mov
sub
add
mov
mov
xorl
mov
sub
mov
mov
xor
mov
mov
add
mov
mov
mov
movl
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
pushl
pushl
push
push
push
call
cmpl
jb
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
push
call
cmpl
jb
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
push
push
push
call
mov
dec
mov
jmp
mov
or
mov
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
xorl
push
push
mov
xor
xor
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
or
jmp
pop
push
lods
sahf
mov
push
push
pop
jnp
jmp
jge,pn
jle
aaa
mov
xchg
shrl
sbb
jo
mov
jae
rcrl
sahf
dec
cli
or
add
mov
call
test
lret
xor
ret
jo
fisttpll
add
popf
lods
scas
lods
lods
inc
xchg
cli
lods
xchg
jp
lcall
inc
pop
sub
xchg
jae
adc
lret
mov
push
mov
pop
xchg
mov
ret
xor
sarb
bound
add
rcl
stos
add
fisubrl
cmp
mov
inc
cmp
loopne
pop
pushw
push
and
call
pop
push
ljmp
cmp
enter
shr
sub
lods
divl
lret
adc
sbb
adc
std
jnp
cmc
dec
mov
movsl
imul
jns
adc
cmp
mov
push
imul
mov
mov
loopne
pop
fistps
xor
aam
mov
add
sub
adc
loope,pn
ja
outsl
inc
or
mov
das
cmp
dec
and
ss
lea
xlat
sbb
lock
mov
inc
insb
jp
stos
mov
pop
add
out
push
int3
dec
lds
push
test
and
cltd
repnz
in
push
mov
bound
lret
xchg
pop
xor
imul
sahf
fbstp
fisttpll
adc
mov
std
xor
and
imul
jo
enter
loop
mov
test
dec
pop
sub
int
enter
leave
jne
lds
sahf
add
repz
adc
sbb
push
and
hlt
pop
sub
mov
add
roll
pushw
pop
pusha
fsubs
stc
adc
mov
test
inc
mov
pop
add
fsubrp
and
mov
into
insb
mov
inc
xchg
outsl
cmpsl
sub
pop
and
in
lret
and
or
or
mov
or
jp
sub
insb
mov
sub
push
idiv
pop
push
bound
jg
leave
xchg
cmp
call
sbb
inc
gs
sbb
arpl
xchg
dec
ljmp
lcall
add
mov
add
mov
add
test
mov
cmpsb
fstpt
cmp
enter
pop
ds
mov
jns
rclb
les
scas
ss
fisubs
xor
cmp
loope
sub
fmul
jb
call
sarb
ljmp
pop
ss
test
shl
sbb
xor
cwtl
aas
scas
mov
jp
sbb
inc
and
in
in
ret
insb
popa
dec
stos
mov
jae,pt
push
ret
push
push
pop
mov
lret
mov
mov
in
or
mov
or
out
cmp
fldcw
out
add
sbb
mov
mov
addl
lea
sub
mov
movzwl
and
mov
addl
mov
jmp
scas
mov
push
jb
sbb
pop
or
jle
jge,pn
jle
int
push
lock
mov
lea
xor
cmp
stos
rclb
adc
inc
decl
inc
out
popa
xor
into
ss
loop
ret
pop
fisubrs
sub
mov
fistpl
dec
mov
mov
push
jno
jmp
cmpsb
les
pop
testl
dec
dec
jge
dec
inc
or
cmp
cmpsb
pop
xchg
scas
cmp
push
aaa
mov
stos
sub
xorl
aad
cmc
xchg
imul
or
je
sub
les
loop
imul
lret
mov
ds
mov
arpl
mov
mov
mov
imul
adc
jle
jmp
cld
js
lock
sub
sbb
sbb
xor
das
add
add
cwtl
mov
in
lds
jmp
jo
test
dec
sub
and
int
mov
icebp
dec
add
mov
mov
or
mov
cmc
add
pop
adc
dec
insl
inc
xor
push
mov
jbe
aas
xor
jmp
add
cmp
icebp
mov
out
sub
mov
adc
push
rol
aad
mov
iret
addr16
stc
ret
mov
out
sbb
push
inc
or
scas
push
adc
pop
dec
or
sub
pop
push
loope
testl
sbb
lods
andl
clc
lcall
adc
dec
push
and
out
adc
add
adc
filds
cmp
xchg
lahf
dec
xor
push
inc
popa
sbb
mov
pop
cwtl
out
or
cld
mov
out
lahf
jo
jecxz
and
popa
std
shl
and
outsl
iret
loope
mov
and
mov
out
in
mov
pop
sbb
mov
xor
into
mov
lret
xchg
adc
pop
fisttpll
jb
push
cmp
aaa
stos
jo
xchg
cmp
ret
cli
int
inc
push
icebp
sbb
inc
bound
xchg
push
cmc
xchg
xchg
xchg
xchg
int
mov
lods
mov
popf
js
mov
shlb
shll
sbbl
inc
xor
push
std
xchg
popa
gs
inc
sub
push
sbb
xor
xchg
adcb
aaa
mov
adc
decl
or
jmp
into
stc
stc
xchg
inc
or
fcompl
mov
push
dec
loopne
mov
cmp
mov
das
test
loopne
pop
sub
nop
lret
xor
dec
cmp
mov
mov
xlat
and
popa
push
sbb
xchg
clc
pop
push
or
lods
sub
or
mov
pop
fs
mov
clc
sbb
and
pop
inc
xchg
sbb
adc
in
jne
inc
out
push
sbb
and
icebp
jno
jae
int
push
xor
jmp
push
or
int3
popa
hlt
jno
jae
and
inc
sbb
out
jle
jge
jle
insb
rolb
pop
ds
inc
test
jnp,pn
inc
in
push
lret
jae
jmp
jge
dec
outsb
loopne
mov
ljmp
pushf
or
aaa
js
movups
les
mov
cltd
cmpsb
cmp
pop
xchg
cmc
loop
xchg
mov
arpl
addr16
sub
push
enter
dec
xchg
xor
lods
mov
in
mov
mov
jl
xchg
in
inc
andb
test
push
movsb
imul
jl
mov
aam
dec
xchg
add
movsl
and
adc
push
aam
fsubrs
pushf
cli
out
rcrl
addb
dec
cmp
sub
xchg
in
xor
clc
aam
popa
dec
fistpll
sarl
cs
mov
and
andl
cmpsl
popa
jge
call
andl
dec
jge
push
pop
es
sbb
lods
mov
and
lods
and
aad
push
mov
mov
sub
dec
adc
cltd
iretw
push
icebp
jo
cltd
mov
sbb
jmp
xor
xlat
lcall
dec
push
call
cmp
cmp
aas
mov
mov
pop
inc
repz
dec
sub
xchg
insb
addr16
push
sub
jmp
lea
loope
xor
lret
mov
in
xchg
cwtl
iret
add
xor
mull
lret
ss
mov
xchg
shl
mov
mov
or
test
sub
inc
pushf
mov
in
mov
out
sub
mov
jbe
mov
xchg
shll
repnz
push
or
sub
mov
repnz
dec
psubd
sti
jg
ja
dec
mov
mov
or
inc
fildl
inc
lds
sahf
mov
shr
jae
mov
push
inc
add
xor
lods
pop
shrb
psadbw
fsubl
cmp
jp
xchg
cs
pop
jle
inc
xor
repz
clc
sub
add
repz
sub
lock
cmp
jecxz
xchg
pop
sub
fs
gs
hlt
mov
sti
sub
test
cmp
gs
loopne
mov
insl
aaa
dec
daa
pop
cmp
ficompl
sti
xor
addr16
xchg
mov
iret
lcall
dec
push
lds
jl
sub
and
push
cmpsl
dec
mov
add
aaa
fildl
pusha
jo
test
lcall
jle
adc
adc
scas
or
in
cmp
add
sar
xor
cltd
pushf
pop
inc
test
pop
out
xchg
addr16
movsb
jne
movsb
sbb
fwait
and
clc
ss
scas
sti
mov
or
movl
add
fisttpl
sbb
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
movl
sub
jmp
shrb
mov
xor
jne
ss
mov
jle
jge,pn
jle
inc
in
arpl
lret
xor
xchg
pop
xchg
jge
mov
xor
sub
cmp
lea
fcmovbe
push
mov
pop
and
inc
sbb
test
cltd
ret
adc
scas
jnp
shll
fcmovne
jnp
jbe
pop
adc
and
cmp
mov
arpl
fldl
xchg
sbbl
push
ja
and
lods
in
popa
in
mov
fsts
aad
dec
sub
and
loop
lea
dec
adc
push
jl
push
jge
lods
jo
scas
push
pushl
out
sbb
out
inc
jecxz
in
addb
mov
mov
cmpsb
mov
ret
lret
cmp
lea
mov
jbe
or
mov
imulb
adc
xor
mov
jle
push
movsl
mov
test
shll
call
std
mov
pop
addl
inc
es
push
stos
leave
mov
aas
fwait
lcall
mov
pop
test
push
push
pop
cmpsb
int
sub
xor
jl
xor
mov
test
cmp
xchg
lcall
xor
out
push
xchg
mov
stos
jb
sub
pusha
subl
dec
ja
leave
cld
aaa
or
jmp
int3
test
pop
ljmp
mov
push
dec
xchg
out
push
push
cwtl
xor
popf
dec
lcall
sub
fwait
in
aaa
cwtl
mov
push
push
aas
int
xchg
cmpb
nop
inc
push
insl
cmp
das
addl
fcomi
aaa
jns
or
arpl
insb
xor
mov
pusha
add
push
stc
ds
add
xchg
mov
test
nop
pop
pop
arpl
pop
insb
xchg
mov
mov
cmpsb
jns
adc
sub
rcrl
jo
pop
jo
int3
mov
pop
pop
jg
adc
cs
adc
mov
daa
mov
arpl
ja
ja
cli
add
sub
stos
in
add
xorb
mov
xchg
dec
in
out
sbb
sbb
jo
loope
outsl
bound
inc
cs
dec
inc
adc
rol
mov
sbb
in
dec
pusha
std
cmp
cwtl
es
mov
stc
mov
xchg
adc
add
fucomip
dec
scas
pop
sbb
inc
cwtl
fdivr
mov
jne
inc
popf
mov
fs
mov
lods
ljmp
push
repz
lods
or
sarb
ja
loopne
add
movsb
pop
pushf
mov
jmp
cld
or
mov
pop
cli
sbbl
dec
fadd
in
icebp
lock
movsb
pop
jle
mov
ret
rcr
sbb
shl
inc
roll
popf
and
lea
mov
xorl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
mov
xor
addl
add
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
fsubrl
or
pop
or
outsb
cltd
loope
jle
jge
jle
push
stc
jg
sbb
bound
xor
lea
arpl
loopne
mov
jb
mull
leave
jmp
xor
aaa
stc
cmpb
cmp
adc
mov
and
or
mov
pop
pop
mov
mov
dec
inc
inc
and
and
nop
mov
aad
pop
repnz
out
jge
ja
aas
adc
movsl
popa
and
ss
lcall
loop
shlb
out
mov
pop
cli
cld
arpl
fnstsw
xor
inc
imul
cwtl
mov
jp
nop
cmp
sbb
cmp
and
out
popa
sub
push
mov
fidivrs
addb
adc
push
popa
jb
and
cmpsb
lahf
adc
clc
in
xchg
cmc
pop
test
lret
mov
and
shr
es
pop
adc
and
inc
faddl
je
shrd
mov
imul
lock
sub
mov
cmp
mov
pusha
push
shl
test
fldl
and
xchg
inc
xchg
les
mov
repnz
jmp
jo
arpl
mov
ss
ljmp
ljmp
lea
jecxz
inc
push
popf
loope
sbb
imull
pop
shll
stos
loopne
inc
mov
cs
mov
xor
xchg
add
adc
push
std
cmp
iret
jmp
add
pop
loope
lret
or
xlat
mov
pop
cmp
lea
outsl
pop
dec
pop
adc
insl
dec
insl
cmpsb
in
and
mov
dec
cmpsb
popf
insl
or
in
jecxz
jnp
cltd
xorl
inc
push
xchg
rorl
sti
xor
insl
adc
inc
mov
cmc
mov
rclb
jb
pushl
sbb
dec
push
xor
movsl
xchg
andl
inc
pushf
pop
cmp
add
loope
pop
insl
cltd
xchg
push
lahf
fidivl
insb
lret
add
cmpl
sub
lcall
and
push
mov
sbb
sub
dec
xchg
testb
stos
mov
push
pusha
add
gs
mov
or
in
mov
ja
and
push
loopne
pop
mov
sbb
jmp
in
and
hlt
std
faddp
pusha
add
dec
push
hlt
fs
mov
push
daa
sbb
loop
mov
dec
add
test
mov
iret
cmp
add
stos
mul
and
sti
fcomps
bound
call
pop
lahf
andb
aad
lret
jae
xor
pop
imull
aas
sub
int
mov
andl
push
loop
cmp
pop
pop
ds
mov
lahf
push
jl
sub
movntq
add
pop
or
mov
cmp
lret
mov
mov
jmp
leave
inc
mov
inc
xor
icebp
pushf
sbb
jle
jge,pn
jle
pop
mov
dec
js
lret
cmp
dec
out
add
outsl
int3
stos
aad
cld
in
jp
ror
movsb
xlat
fisubl
ret
sbb
jnp
ret
sbbl
pop
pop
jb
or
xor
roll
pop
les
xchg
push
call
popf
mov
out
adc
and
cmp
arpl
mov
pop
aad
jb
shlb
add
adcb
fwait
sbb
and
adc
push
jno
jo
adc
arpl
adc
scas
cmp
pop
out
xor
mov
inc
adc
inc
cmp
icebp
dec
push
adc
inc
jle
scas
jae
dec
or
cs
mov
dec
add
call
pop
gs
and
mov
clc
sbb
and
test
and
push
mov
push
sbb
push
add
push
add
test
pop
jmp
and
in
pusha
cmp
nop
cmpsb
jecxz
imul
rcl
rcl
sbb
mov
popf
mov
mov
dec
out
test
fadds
mov
out
push
lods
adc
inc
dec
xchg
flds
fwait
cmpsb
xor
push
fsubrp
cwtl
xchg
aam
sub
pop
mov
mov
cltd
shll
and
push
mov
mov
push
imul
call
es
jmp
xchg
inc
fcompl
mov
cmp
push
pushf
or
outsl
jae
mov
fdivs
mov
xor
push
movsb
jmp
fildl
into
dec
jle
adc
inc
sub
aaa
mov
mov
shll
xor
adc
push
push
in
pop
mov
mov
stc
addl
mov
pop
in
jge
inc
add
cltd
ret
pop
std
push
ljmp
sbb
add
xor
repnz
out
push
movsb
rclb
outsl
std
xor
ret
iret
mov
cs
pop
jno
xchg
orb
sbbb
push
mov
push
lahf
shrb
arpl
or
sbb
fdivrs
loopne
sub
pusha
sti
push
xor
pop
cmpsb
and
out
aad
iret
dec
negl
rcl
cmp
mov
leave
and
into
xchg
mov
inc
lock
dec
andb
lods
adc
pop
add
dec
inc
pop
mov
bound
jp
mov
mov
xchg
lea
stos
mov
daa
fucomip
fidivrs
and
std
sahf
push
jne
mov
push
push
and
out
add
add
fnstenv
ss
clc
mov
mov
aad
sbb
call
les
mov
and
ds
movsl
push
push
rolb
mov
xchg
inc
inc
pop
sub
adc
test
pop
hlt
mov
mov
movzwl
add
movl
mov
jmp
js
adc
jae
loopne
lfs
or
pop
xchg
lret
jle
jge,pn
jle
loope
daa
mov
sbb
push
std
jno
cltd
call
cld
push
xchg
lea
shll
sub
mov
jle
or
and
int3
mov
push
rcrl
stos
jmp
sbb
sbb
dec
gs
push
mov
push
inc
sbb
jl
xlat
nop
int3
andb
rorb
cmp
test
dec
aas
stos
aaa
sub
outsl
sbb
movsl
addb
jns
mov
aad
xlat
popa
pop
in
jns
mov
imul
and
cmp
test
mov
or
sub
pop
lock
sub
xor
clc
hlt
js
or
or
pushf
adc
in
repz
sub
jg
adc
lea
mov
inc
xor
ds
xchg
aam
inc
add
std
xor
mov
ds
sbb
iret
mov
xchg
sub
adcl
not
add
jecxz
das
jns
jb
repnz
cmp
xchg
adc
and
inc
jno
pop
xor
jmp
add
inc
mov
jmp
or
ret
cmp
pop
lods
int3
lock
stos
cmp
adcl
es
ja
pop
leave
js
leave
push
mov
mov
stc
jbe
sbbl
gs
xchg
mov
lea
ljmp
sbb
stos
sarb
dec
arpl
fwait
clc
pop
sbb
mov
incl
push
jle
cmp
ret
inc
mov
inc
xchg
dec
push
xchg
insb
out
push
jg
mov
ljmp
inc
movsb
pop
cwtl
add
jno
or
sbbl
cmc
shll
adc
stos
gs
mov
xor
jb
fimull
push
iret
movsl
push
inc
loopne
mov
hlt
jmp
pop
mov
xor
jno
out
fbld
test
fmuls
into
aas
xchg
or
jbe
push
jmp
int3
dec
lock
loopne
xchg
std
out
out
lods
sub
lods
mov
xchg
sbb
icebp
mov
push
push
test
xchg
and
or
or
scas
add
push
popf
mov
lods
into
insl
enter
negl
mov
cmp
xchg
mov
mov
xchg
xchg
push
mov
lcall
push
imul
inc
pop
jmp
and
divl
pop
popl
movsb
mov
and
mov
pop
add
cmp
dec
shll
mov
cmp
fidivrl
lods
sub
jmp
ljmp
jmp
and
iret
rcl
xor
jmp
sub
shrb
inc
mov
faddl
cmp
pop
stc
cmp
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
mov
jmp
cmp
pop
dec
push
aam
int3
test
idivl
jge,pn
jle
push
iret
fcoml
ret
jle
push
and
ret
pop
test
negb
iret
adc
xchg
push
xchg
or
cmpsb
cld
test
and
inc
cmp
push
and
scas
push
inc
cmp
xor
xchg
pop
inc
call
mov
data16
clc
fs
aam
nop
push
pop
add
ret
aas
jecxz
xor
bound
mov
inc
jl
xor
sbb
or
inc
mov
es
ds
das
shlb
pop
and
jbe
sub
out
icebp
sbb
scas
popf
loopne
add
pop
dec
int
cmp
and
jge
in
lods
arpl
outsl
inc
push
dec
mov
pop
jo
fisttpl
add
and
in
stc
mov
inc
ret
push
inc
iret
movsl
mov
mov
dec
or
pop
cmp
inc
mov
xchg
fisubrs
mov
dec
and
mov
loopne
mov
fstl
sub
adc
xor
sub
clc
test
mov
adc
lods
push
fbstp
add
mov
scas
loope
adc
scas
cmp
adc
or
stos
fbld
jmp
scas
imul
pop
mov
test
ja
stc
or
jle
divl
addr16
mov
cmp
push
push
fdivrp
sub
mov
aad
daa
fmuls
movsl
add
add
push
movsl
int
jmp
xor
sbb
fdiv
xchg
add
stos
cmpb
dec
add
adc
pop
ffreep
xor
daa
or
movsl
xor
fs
and
and
cmp
fiadds
imul
push
dec
adc
mov
or
cmp
test
or
sub
scas
xlat
ficoms
pop
push
inc
mov
jl
ljmp
xchg
pop
jne
dec
pop
inc
xchg
movsb
inc
popf
sbb
push
loop
sbb
dec
dec
daa
mov
fbld
push
imul
fadd
adc
xchg
iret
cmp
cmp
out
jmp
lea
sbb
mov
or
imul
pop
cwtl
out
stos
jo
aas
dec
lcall
bnd
in
ret
outsl
test
xor
nop
jbe,pt
jno
call
jno
jle
jno
sub
cmp
sbb
xor
push
ror
push
test
inc
daa
gs
mov
push
lds
mov
in
xor
mov
sbb
dec
dec
pop
mov
xchg
lar
hlt
xlat
or
jnp
mov
in
clc
in
mov
jle
adc
xchg
aaa
fdivl
aaa
fbstp
sbb
js
fs
out
loope
and
fwait
ss
mov
jo
xchg
cmpsl
xchg
xchg
xor
dec
test
test
scas
jle
cmp
push
mov
stc
mov
mov
xor
mov
sub
add
mov
mov
jmp
mov
jns
xchg
xor
mov
adc
jmp
bnd
jge,pn
jle
insb
jge
dec
test
les
in
sub
cld
daa
mov
out
iret
shlb
push
loop
push
addb
mov
push
xchg
xchg
push
adcb
je
xor
adc
mov
inc
loopne
mov
cmp
and
push
cltd
popf
rolb
and
cmpsl
mov
insl
cmp
jnp
or
inc
enter
pop
jl
pop
clc
shll
xor
mov
cmp
iret
scas
pop
jo
repz
int3
aam
sbb
arpl
test
push
lcall
mov
pop
cmp
shrb
fdivrp
lcall
pop
push
sbb
mov
adc
jnp
inc
dec
cmp
jecxz
gs
mov
fsubl
int3
and
jne
sbb
lods
dec
shl
or
shll
or
insb
dec
inc
out
mov
jmp
aam
add
adc
jns
ficomps
pop
negb
cli
inc
push
mov
pop
sbb
add
mov
mov
int3
pop
inc
and
out
pop
mov
mov
jo
outsl
xchg
std
adc
sub
sar
mov
jae
xchg
jmp
loop
movsl
fmuls
jbe
sbb
call
test
push
fwait
pop
cmp
push
sti
mov
mov
adc
cltd
mov
cmp
ljmp
push
aas
mov
jnp
mov
add
sbb
xchg
inc
cmc
inc
std
xlat
lods
fstps
addl
cmp
js
movl
ret
stos
mov
sbb
sub
inc
jno
mov
push
pop
mov
jg
aam
sub
mov
inc
daa
sub
or
xlat
xor
jl
and
in
cmp
mov
cmpsl
ret
repz
int3
dec
enter
outsl
sarb
mov
and
mov
mov
sbb
mov
imul
push
mov
cli
neg
scas
mov
mov
pop
dec
jge
enter
in
lret
js
clc
xor
mov
jl
sub
mov
std
push
xor
jae
das
add
mov
push
xchg
mov
or
rorb
rorl
sbb
in
enter
or
scas
adc
sbb
cmp
pop
loope
pop
jle
xor
out
out
inc
pop
filds
jmp
cld
sbb
inc
or
cmp
push
sub
leave
mov
push
and
fistl
ret
ret
lcall
adc
das
or
sub
clc
jo
pop
xchg
pop
adcb
and
sub
mov
lea
dec
dec
shlb
add
je
fwait
in
pop
pop
pop
movsb
add
cmp
xchg
push
sub
sbb
sub
icebp
fdivrl
dec
cld
movzwl
add
mov
mov
jmp
jae
push
lahf
jae
jae
pop
dec
scas
in
dec
mov
icebp
jle
jge,pn
jle
push
inc
pop
push
rorb
mov
adc
cmp
lock
sbb
sbb
lods
out
dec
pushl
mov
je
stc
in
push
cmp
jmp
and
aaa
movsb
andl
int3
pop
sbb
and
dec
idivl
or
push
fistpll
call
sub
sub
in
into
jbe
rcrl
das
sbb
sets
adc
cmpsl
pop
adc
cmc
enter
popf
insb
mov
or
ret
pushf
jl
js
pop
sbb
pop
lock
or
xor
pop
inc
inc
xchg
cmp
mov
or
xchg
stc
push
call
sbb
pop
ja
subb
pop
xorl
enter
dec
jno
lret
sarl
mov
mov
xchg
jecxz
jae
call
cmpsb
push
adc
or
shll
fcmovu
outsb
add
bound
movsl
sub
xor
mov
jle
mov
sub
pop
add
xchg
sbb
std
push
mov
int
sub
xor
ss
push
push
jl
daa
lcall
sub
pushf
jne
lahf
repnz
gs
push
sahf
mulb
mov
out
and
loop
cwtl
hlt
pop
adc
fisttpll
cld
in
push
sub
cs
xchg
outsl
push
xor
sbb
lret
push
and
and
add
nop
adc
jg
pusha
push
mov
dec
jle
cmp
add
xchg
cli
cwtl
cld
xchg
and
sarb
cmpsb
in
xchg
add
sbb
dec
mov
add
xchg
cmc
add
mov
test
popa
xor
mov
vcvttps2dq
into
das
bound
pop
lahf
incl
jns
push
xchg
jae
sub
add
inc
mov
inc
mov
push
das
mov
jl
push
pop
or
and
ljmp
into
ds
dec
movsb
outsl
gs
jne,pt
adc
mov
mov
cmp
inc
fstpt
stos
xor
call
enter
adcb
sahf
sbb
mov
outsl
js
nop
add
xor
cs
mov
call
inc
adc
jb
mov
gs
xchg
xchg
dec
xor
movsl
out
xor
ror
add
mov
aaa
hlt
fists
inc
push
fistpll
adcb
add
rolb
cmpl
loope
cwtl
dec
cmp
in
aaa
adc
pushf
push
add
cmpsl
push
or
cmpsl
push
mov
add
repz
ds
push
repz
test
sbb
das
push
adc
ss
jo
sub
popa
pop
pop
rcll
fisttps
add
dec
inc
jmp
fs
push
dec
aas
pop
dec
mov
insl
inc
ja
sahf
mov
sbb
mov
xor
add
xor
jmp
pushl
outsl
jno
mov
repnz
jle
jge,pn
jle
jbe
push
mulb
inc
xchg
mov
and
sbb
idivl
add
dec
fsubrs
sti
mov
jl
outsb
adc
xor
into
adc
pop
xchg
nop
mov
das
mov
push
jp
mov
xor
sarb
bswap
push
push
pushf
sub
int
jns
or
insl
cmpsb
push
jno
or
repnz
mov
xchg
clc
inc
adc
jg
push
notl
cmp
and
out
xor
xchg
outsb
rorl
mov
add
sub
jmp
sti
aam
stc
xchg
mov
push
aaa
mov
das
data16
icebp
iret
gs
mov
sub
pop
mov
mov
in
movsl
stc
ja
nop
rolb
xor
or
mov
push
ror
xor
fmuls
outsl
out
cld
loopne
mov
push
push
and
mov
insb
clc
mov
movsb
jbe
cmp
push
out
adc
insl
leave
adc
shll
dec
popa
inc
aam
decb
das
shrl
xchg
xchg
mov
out
push
movsl
ficompl
inc
push
jno
inc
mov
sbb
cmp
into
push
jns
add
xchg
add
enter
es
mov
inc
cmpsb
fidivs
movl
hlt
and
jecxz
push
xchg
mov
dec
push
iret
pop
test
cmp
inc
cmp
pop
jle
sbb
shr
or
in
jbe
push
pop
vcvtss2si
pop
jge
shrl
push
dec
push
out
jle
fisubrl
out
addb
pop
in
xor
ja
movsb
cmp
mov
shll
cld
push
lahf
outsl
cs
nop
fcomps
cmc
sti
daa
inc
cmp
std
push
pop
fsts
in
movsl
mov
adc
mov
loope
stos
call
mov
xlat
jo
sub
sub
inc
imul
inc
push
push
dec
addl
fs
rol
aam
mov
test
stc
mov
cmp
bound
fnsave
jl
mov
ss
inc
mov
sti
mov
cmp
les
cs
xor
insl
mulb
pusha
cs
and
arpl
pop
add
sahf
cmpsl
leave
adc
inc
inc
cld
and
in
pushf
mov
fsubs
pop
sbb
sbb
adc
shrl
inc
mov
add
mov
scas
out
ret
pop
adc
cmpsb
dec
enter
or
mov
pop
sbb
in
cs
mov
or
loope
roll
loopne
jmp
add
int3
out
rorb
mov
je
stos
jmp
sub
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
jmp
nop
push
in
shr
jno
push
mov
fwait
scas
test
imul
jle
jmp
into
fs
xchg
inc
adc
pop
lods
subl
lcall
xor
jle
mov
push
imul
push
or
imul
insb
add
inc
cmpsl
jg
fimull
pop
andb
int3
ljmp
cltd
fisubl
arpl
loope
adc
fists
popf
stos
icebp
mov
pop
add
das
sub
aas
push
or
pop
stos
dec
jl
and
loopne
and
push
or
dec
or
fidivs
gs
jbe
scas
movsl
loope
std
arpl
add
call
ds
jmp
or
test
xchg
adc
xchg
int3
xchg
add
sub
bound
fmuls
or
test
scas
scas
gs
mov
iret
fstl
or
dec
lret
cld
mov
aam
mov
loopne
xor
shrl
sbb
std
in
loopne
and
lret
dec
cmp
xor
xor
sub
dec
sub
lods
push
or
mov
in
ficoms
lcall
fidivl
pop
mov
adc
adc
inc
in
pop
jg
lahf
shlb
ss
xchg
jns
jl
adc
inc
pop
in
xchg
inc
and
pop
jg
sub
sbb
mov
mov
push
shll
outsl
sub
inc
push
or
ror
daa
inc
es
cmpsb
out
nop
test
add
jg
jnp
pop
pushf
fcompl
mov
movsb
dec
out
mov
dec
inc
repz
adc
lods
cmpsb
jp
pop
add
pop
rolb
push
jecxz
fs
das
stc
xchg
mov
out
inc
pop
add
popf
andps
pop
cltd
jbe
rclb
or
out
cmp
testb
nop
ja
mov
xchg
sbb
outsl
js
loop
bound
outsb
lret
pop
sbb
fmul
mov
push
mov
imul
outsb
std
cmp
dec
sti
loop
je
pop
pop
fcoms
inc
enter
cltd
xchg
mov
pop
fcompl
mov
pop
popf
push
mov
mov
sub
push
adc
dec
pop
mov
add
pop
pop
js
mov
shl
lcall
lahf
mov
fisubl
addr16
je
cld
inc
dec
lahf
ret
push
mov
pushf
mov
les
push
cmp
lret
fiadds
inc
pushf
or
stc
out
adc
jne
es
mov
cmp
fwait
pop
jns
shll
adc
call
das
lahf
jl
mov
add
sub
stc
fs
mov
cltd
aaa
leave
pop
repnz
std
fldl
xor
xor
sub
aad
jnp
inc
cs
mov
jle
add
adc
outsl
xchg
pop
les
fsubl
jno
inc
in
cmc
negl
jle
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
jmp
ffree
les
xchg
sub
cwtl
cmpsl
leave
sbb
jle
dec
les
es
xor
out
jns
jb
mov
cld
inc
sub
jb
aad
and
dec
xchg
lahf
add
add
notl
xchg
mov
scas
mov
aaa
arpl
inc
cltd
lock
test
adc
mov
xor
and
mov
ret
jno
inc
inc
lahf
add
jne
xor
cmpsl
or
cld
dec
das
aam
add
pop
loope
cwtl
scas
jb
mov
in
push
cmpsl
fadds
fxch
aas
or
iret
xor
cld
aam
dec
push
jb
cmp
jge
adc
scas
push
push
in
sbb
out
test
fldcw
stos
fcmovnb
js
cld
cmpl
call
cmpsl
scas
cmc
xor
js
xor
mov
cmpsl
fcmovb
add
stos
push
jge
jbe
mov
mov
cmp
jg
mov
push
push
push
push
ret
jg
xor
leave
roll
fidivs
mov
lahf
inc
adc
cmp
arpl
pushf
and
in
cmc
push
push
cwtl
out
cmp
push
jbe
out
add
push
adc
xchg
repnz
std
cmpsl
js
cmp
adc
sarb
xor
rcr
pop
test
or
mov
xor
or
or
ret
fdivrl
arpl
lods
mov
popf
sbb
into
cmc
sub
aaa
mov
fmuls
rorb
dec
in
xchg
dec
and
inc
xchg
stos
rorb
stos
push
jae
cmp
mov
fstl
xchg
xor
ja
lds
test
mov
subb
faddl
and
fsubrp
int3
pusha
fwait
jo
pop
mov
xchg
popa
lea
dec
dec
ljmp
loop
xchg
int
lods
in
and
adc
aas
iret
dec
iret
inc
push
push
xchg
sub
cld
lcall
jmp
mov
or
test
pop
adc
cmp
fsubr
jns
adc
mov
ret
jg
xlat
bound
leave
dec
dec
adc
push
jns
dec
adc
rcr
jl
and
xor
js
popa
pusha
lahf
repz
rcl
fcomps
push
fldcw
sub
cmp
sbbb
leave
insb
fisttps
xor
cmpsb
sub
sti
leave
cmp
decl
popf
and
xchg
out
imul
sub
in
shrl
sbb
mov
rorl
leave
lock
out
or
in
jge
mov
xor
arpl
mov
pminub
xchg
nop
jbe
sbb
insb
mov
jb
out
xchg
sbb
jbe
inc
stos
das
jbe
jne
sub
arpl
jae
mov
or
lahf
test
sub
aam
pushf
std
lea
ss
ds
invlpg
std
fstpl
test
pusha
mov
fwait
inc
sbb
adc
shll
mov
fwait
add
dec
clc
mov
mov
mov
mov
xor
add
mov
mov
jmp
mov
inc
inc
orb
data16
push
mov
jle
jge,pn
jle
iret
inc
loop
push
in
cmp
adc
andl
ffreep
add
push
ljmp
test
cmp
stc
hlt
xchg
jo
repz
in
imul
add
pop
cmp
idivl
int3
mov
pcmpeqd
addr16
sarl
cmc
out
push
popf
jle
inc
cmpsl
ds
pop
cmp
push
lods
insb
rorl
ret
adc
and
adc
or
mov
and
mov
mov
inc
outsb
dec
stos
pop
dec
int
dec
sarb
daa
or
push
mov
add
cmp
cmp
mov
sbb
dec
cmc
ficompl
bound
out
pop
sbb
loop
xor
fistpll
xchg
mov
mov
pop
aad
push
pusha
mov
xchg
insb
popa
sub
jae
jb
xchg
sbbb
dec
adc
jb
push
fwait
jmp
mov
inc
sbb
and
out
fstps
xor
mov
push
mov
mov
lret
dec
fdivl
rolb
xchg
test
cwtl
in
mov
inc
in
xor
mov
adc
pextrw
xor
jbe
mov
in
mov
jnp
outsl
mov
cs
in
add
pop
out
jg
sbb
and
fidivs
cmp
idivl
inc
pop
in
insl
inc
stos
and
xchg
out
inc
mov
leave
fidivrl
es
adc
cmp
sbb
nop
movsl
mov
aaa
faddl
daa
adc
cmp
icebp
push
lods
nop
sbbl
fcoml
cmpb
mov
jge
in
lea
mov
push
nop
ds
mov
xchg
arpl
lahf
decb
adc
mov
jnp
cld
mov
ret
or
fwait
cli
out
cmc
filds
out
ret
movsl
xchg
ss
push
insl
aas
gs
jnp
push
and
jb
bound
push
icebp
push
cmp
xor
leave
push
mov
xor
xcrypt-cfb
cmpsl
in
fbld
in
ja
adc
in
in
adc
push
rolb
push
adc
pop
or
sbb
mov
int
jnp
pop
sub
dec
xchg
pop
xor
mov
xor
sbb
mov
sbb
jecxz
dec
adc
fsubrl
dec
mov
xor
adc
test
das
ret
add
cwtl
test
jo
popa
mov
jb
enter
mull
jge
push
jbe
jae
fimull
mov
clc
negb
gs
xor
xor
sbb
mov
test
movsb
nop
mov
sbb
ss
push
mov
sub
mov
sub
outsl
idivb
jo
mov
shrl
mov
in
out
and
sub
int3
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
push
pushl
pushl
pushl
call
cmpl
jb
mov
mov
add
xor
cmp
jne
mov
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
mov
mov
sub
mov
push
inc
mov
orl
xor
cmp
movl
je
mov
mov
sub
imul
mov
and
mov
sub
sbbl
xor
movl
cmp
movl
jne
mov
xorl
add
movl
jmp
sbb
mov
adcl
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
sbb
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
adcl
movl
mov
subl
push
adc
mov
xor
add
mov
add
mov
and
mov
subl
push
push
test
movl
je
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
xorl
mov
movzbl
sbb
mov
imul
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
add
add
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
mov
mov
sub
mov
xchg
mov
xor
sub
xor
movzwl
or
mov
or
mov
sbb
mov
or
mov
mov
xor
mov
xor
xorl
xor
movzbl
or
jmp
adc
addr16
clc
jno
inc
xor
xor
js
dec
stc
cmpl
inc
sub
jl
dec
xchg
mov
jl
cld
addr16
sub
or
shr
adc
lret
cmp
adc
mov
data16
push
sub
lcall
outsl
in
out
adcb
into
jne
std
mov
pop
ss
fwait
dec
adc
jno
jge
lods
xchg
pop
test
ror
bound
xchg
mov
imul
add
mov
dec
adc
or
je
repz
add
mov
dec
xor
ret
mov
jl
mov
inc
dec
je,pn
daa
mov
jne
outsl
sbb
adc
push
push
add
sub
loopne
jecxz
sub
mov
int
inc
xor
stos
sbb
fcmovne
mov
insl
mov
fcmovbe
imul
and
xor
xchg
or
jge
cwtl
inc
inc
cs
popa
enter
in
xchg
mov
pop
fwait
xor
fwait
adc
popl
jnp
xor
add
mov
mov
mov
je
mov
andl
xor
orl
add
movl
cmp
movl
jne
pushl
subl
call
mov
add
mov
add
mov
mov
mov
mov
and
mov
subl
xor
add
movl
cmp
movl
je
sbbl
pushl
pushl
movl
call
xorl
mov
orl
mov
adcl
mov
addl
xor
add
movl
cmp
je
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
pushl
jmp
add
in
jecxz
icebp
adc
push
std
std
lods
mov
and
jle
ficoms
sahf
mov
or
into
lcall
xchg
test
inc
pop
mov
test
cmp
lea
cmp
sti
sub
cmp
pop
push
and
or
cmp
ss
cmpl
push
lods
pop
test
mov
sub
jns
ja
dec
or
xor
add
repz
mov
adc
or
fxch
loop
sarl
jmp
hlt
mov
fs
push
add
cli
in
rcll
and
jno
outsb
gs
cmc
and
mov
xor
or
inc
jne
and
dec
inc
pop
and
inc
aad
lret
lds
xchg
sub
cmp
mov
mov
mov
or
xchg
pop
xor
fsts
mov
adc
dec
orb
call
cltd
stos
or
add
sbb
repz
call
out
xor
mov
and
xor
mov
rcl
fistpll
jne
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
jmp
aad
fstps
push
fsin
cmp
pop
stos
push
jle
and
jle
or
xchg
mov
mov
jecxz
and
xchg
lods
rclb
dec
sbb
into
add
and
adc
aad
sub
pusha
and
push
lret
in
add
inc
pop
lcall
divl
in
jmp
pop
ficoms
repz
cmpsb
das
adc
sub
lds
dec
movsl
push
dec
adc
pop
cmp
scas
mov
sbb
iret
jge
xor
mov
and
xchg
pushf
add
and
xor
pusha
jno
jp,pt
fsubl
repnz
dec
popl
arpl
aad
push
ret
mov
inc
or
mov
mov
mov
rcrb
clc
clc
hlt
xor
jne
fistpll
jno
imul
test
mov
in
movsl
jae
stos
pop
imul
jmp
pop
ljmp
das
xorl
mov
xchg
adc
test
in
adc
dec
out
fnsetpm(287
rorl
add
inc
cld
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
dec
xchg
mov
jae
out
push
mov
scas
shrl
lea
and
jle
and
lds
mov
push
stos
ret
aaa
int
xor
aam
jno
mov
cmp
pop
je
xor
jl
cld
cmp
mov
fisubrs
adc
mov
in
loop
jecxz
aaa
cmp
xor
shll
std
sub
mov
dec
sbb
mov
sbb
push
pop
jae
js
sbb
lods
cltd
iret
xor
or
push
jno
outsl
inc
jo
lea
and
fisubrl
sarb
xor
cmpsl
movb
xchg
movsb
jecxz
test
ds
ss
rcrb
nop
sbbb
nop
pop
sbb
int3
mov
das
mov
mov
idivl
shl
hlt
fcomp
stos
movsl
and
es
pop
aas
jae
dec
pop
fcmovne
in
lods
pop
push
shll
or
pop
jp
push
jmp
ret
pop
lods
movsl
scas
xor
pop
or
loop
jle
push
xchg
imul
adc
adc
sbb
sub
mov
xor
push
inc
pop
push
dec
pop
xchg
sub
jmp
adc
jae
jno
je
adc
insb
sub
xchg
sub
jle
mov
orl
out
push
xlat
adc
push
test
pop
mov
xlat
ljmp
xchg
icebp
jae
jl
call
cmp
clc
pop
fstp
shll
les
xchg
add
and
das
or
shufps
scas
and
cmc
inc
sub
ljmp
pop
adc
push
cmc
fadds
pop
cmp
movsl
mov
rcl
popa
mov
sbb
jp
xor
repnz
pop
xor
cmp
cmpsl
aam
incl
push
dec
scas
adc
mov
insb
xchg
out
xor
sbb
jbe
mov
fnstsw
scas
xchg
dec
test
test
cs
mov
sahf
dec
pop
js
push
xchg
sarl
mov
jnp
and
fldt
xchg
js
loope
push
add
lds
mov
jle
cmpsb
lcall
scas
xchg
push
dec
es
jns
out
loopne
insl
and
cld
out
lods
jns
jae
jle
out
dec
jecxz
stc
adc
jmp
mov
jo
mov
insb
cwtl
push
jle
jg
jle
dec
pop
jecxz
jbe
shrb
jae
push
cmc
mov
pop
leave
lahf
add
sub
inc
add
jge
pushf
ljmp
scas
dec
push
ds
lret
pop
adc
lock
or
imul
pop
jge
data16
das
or
pop
fidivl
mov
jno
mov
jg
adc
pop
addr16
xchg
xor
daa
rcrl
inc
lods
nop
jne
leave
out
jns
add
jecxz
mov
punpckhwd
or
daa
jns
imul
cmc
add
inc
cmp
dec
mov
sub
cld
subb
lret
and
push
dec
mov
iret
pusha
sub
fwait
pop
xlat
repz
lods
test
xlat
jp
xchg
sbb
test
add
or
psubb
rcrb
pop
cmpsl
pop
iret
popa
test
hlt
clc
mov
adc
jle
sbb
or
dec
iret
jae
int
xchg
jmp
fldl
pop
mov
les
mov
push
pop
dec
test
ja
mov
test
test
neg
xchg
inc
in
scas
shrl
mov
mov
mov
xor
mov
add
mov
mov
xor
jmp
fsubs
imul
mov
jle
and
jle
fcompl
pop
and
fdivrs
jb
loopne
jecxz
icebp
into
pop
int3
xchg
out
pop
cmp
mov
mov
pop
mov
fxch
ljmp
data16
add
mov
repnz
daa
addr16
iret
adc
arpl
lods
and
push
icebp
push
stc
insb
push
add
mov
cli
arpl
data16
push
push
add
ret
mov
rcll
sahf
cmp
inc
add
lcall
and
push
xor
test
inc
int3
jmp
in
mov
jnp
sub
mov
xchg
in
ja
mov
outsb
mov
mov
scas
mov
jle
test
testb
pop
sub
add
add
inc
inc
addr16
dec
jo
inc
xchg
cmpsb
adc
cmp
popa
mov
and
jle
or
mov
and
andl
sbb
push
ret
sub
out
ds
and
push
mov
mov
dec
enter
popl
in
xor
popa
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
jmp
cmpsl
scas
and
stos
jp
mov
cmpsl
push
cmp
mov
and
jle
data16
not
mov
mov
out
scas
lds
aaa
ds
dec
bswap
imul
cmp
out
insb
movb
mov
xor
adc
inc
and
and
pop
pop
orb
jns
xchg
cmpsl
out
out
mov
jne
or
scas
bound
pusha
push
and
aas
shll
outsb
scas
xchg
inc
sub
ret
aam
lahf
xor
outsb
mov
push
jle
pop
mov
or
xor
ljmp
loop
or
jae
bound
or
sub
js
clc
cmp
sub
inc
jne
iret
mov
xchg
aad
aad
sahf
movsl
xor
rolb
xchg
ret
add
push
inc
popa
inc
stos
fnstsw
cmp
icebp
fstl
mov
adc
mov
xchg
push
rorl
push
sub
or
push
jno
inc
inc
or
int
add
cmp
push
dec
js
sbb
js
rcll
repnz
sbb
loop
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
jmp
lcall
jno
insl
add
pop
xchg
jle
and
jle
pop
jmp
mov
orb
repnz
xchg
and
ljmp
test
jmp
fs
fsub
rorl
sbb
jbe
xor
jo
rorl
sbb
mov
mov
mov
mov
and
pop
or
mov
lods
movsb
cmp
ret
test
push
pop
fisttps
jecxz
pop
jno
jp
loop
stos
repz
xor
mov
xor
jecxz
push
pop
cmp
sub
hlt
sbb
sbb
cli
test
loope
dec
inc
push
sarl
stc
sbb
dec
scas
xchg
mov
test
pop
add
xchg
aam
les
mov
lds
or
sub
mov
sub
mov
jns
mov
jbe
into
xor
mov
add
and
js
inc
push
xor
shlb
hlt
sbb
lret
js
jno
xchg
pushf
mov
lock
and
mov
cmpsl
or
hlt
mov
xchg
lret
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
loop
ljmp
fsub
add
mov
add
add
mov
inc
push
fisttps
test
out
shlb
jmp
fildl
inc
jle
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
rorb
add
add
xor
mov
cld
jle
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
fwait
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
mov
test
clc
pushf
inc
cmp
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
fwait
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
fwait
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
in
push
mov
gs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
fwait
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
gs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
cmp
pushf
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
fwait
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
in
push
mov
gs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
fwait
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
fiaddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jle
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
lret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
sub
inc
fnstcw
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
fwait
inc
xor
pop
inc
shl
inc
sub
inc
add
add
out
clc
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
enter
lea
mov
mov
in
cmovne
jmp
inc
mov
sbb
mov
add
in
add
sub
add
jle
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
int3
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
call
mov
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
cmp
pushf
pushl
mov
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
cmp
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
fwait
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
xor
jmp
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
cmp
pushf
nop
movl
clc
add
add
or
dec
ret
push
inc
dec
mov
mov
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
cmp
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
call
add
mov
xor
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
fwait
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
fwait
mov
jge
decl
