push
mov
sub
mov
mov
inc
mov
sbbl
sub
push
mov
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jge
push
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
mov
movl
jmp
movl
jle
push
call
xor
sub
and
movl
movl
mov
add
add
add
mov
add
mov
adcl
sub
mov
sbb
xorl
mov
orl
andl
orl
jmp
loop
jns
cmp
lcall
cmpsb
dec
mov
int
adc
das
and
call
push
xor
sub
lods
push
in
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
pop
mov
notl
in
enter
in
repnz
pop
inc
pusha
mov
lahf
enter
cli
popa
dec
adc
xor
testl
ret
add
dec
arpl
add
mov
mov
dec
lods
xor
sbb
cwtl
jl
or
inc
stc
mov
aas
out
mov
add
shll
push
insl
pop
sbb
push
mov
sbb
mov
adc
mov
sbb
cmp
inc
bound
sbb
inc
imul
and
add
inc
rclb
loope
call
fnsave
dec
jb
or
imul
sbb
popa
mov
push
push
add
mov
lods
pushf
mov
mov
aam
in
fmuls
inc
sbb
out
fadd
lea
out
filds
and
mov
pusha
jmp
cs
and
loope
fdivrp
enter
sub
icebp
outsb
in
movsl
inc
pop
mov
adc
xchg
sbb
fistpll
sub
and
push
test
movsl
mov
aam
scas
insb
add
lcall
ja
lret
cld
and
in
mov
loope
iret
adc
cmp
mov
loope
lock
dec
test
push
xlat
sbb
jnp
xor
lahf
xchg
sub
jmp
xor
mov
stos
pop
rcrb
imul
push
xor
dec
pop
pop
adc
cmpsb
pop
jo
ss
or
outsl
mov
lods
in
mov
adc
push
xchg
pop
lcall
subl
adc
mov
rclb
adc
sbbl
pop
inc
je
dec
ret
sbb
andb
adc
sbb
and
sbb
stos
ljmp
das
aam
mov
and
lahf
cltd
push
dec
dec
pop
add
cltd
mov
mov
call
xchg
fsubrl
popf
sub
inc
cmp
shr
push
push
std
testb
xor
dec
xchg
test
aas
sbb
xchg
xchg
mov
mov
test
shll
mov
xlat
ret
xchg
and
rcrl
out
jno
cltd
lods
push
mov
bound
sub
cli
adc
adcl
and
and
sbb
movsb
mov
jle
in
xlat
mov
xchg
movsl
xor
jnp
into
popa
xor
push
and
inc
scas
ret
cmp
push
lret
in
les
mov
movb
pop
ds
sbb
lret
jb
cs
mov
addr16
xor
sub
fnsetpm(287
mov
jg
fmuls
jmp
js
testl
mov
aaa
fisubs
cmp
inc
mov
inc
or
add
push
jns
dec
lea
mov
cmpl
mov
mov
movl
mov
jmp
mov
mov
jne
pushl
push
push
call
and
adcl
andl
xor
or
mov
movzwl
and
mov
and
mov
add
movzbl
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
mov
jb
pushl
call
movzbl
adc
and
sbb
movzbl
xor
mov
or
sbbl
mov
cmpl
movl
movl
jmp
mov
mov
jg
push
push
pushl
pushl
call
sbb
dec
xor
sub
or
mov
sub
mov
add
shrd
shr
and
mov
mov
sub
mov
subl
xor
orl
xor
movl
or
xor
jmp
ljmp
cltd
daa
mov
push
xor
lods
int
adc
int
adc
das
pop
inc
xor
push
and
repnz
repz
fcompp
push
aas
xor
inc
ret
lods
ds
dec
cmp
roll
mov
outsl
stc
ss
xor
adc
xchg
inc
and
dec
addr16
in
cmp
popa
imul
mov
xchg
mull
data16
add
dec
mov
sbb
aaa
out
jnp
pop
test
bound
fdivrl
mov
imul
pop
add
mov
in
in
shl
test
mov
cmp
cmp
xchg
pushf
sbb
jge
lock
mov
mov
cwtl
shll
arpl
mov
rcrb
mov
adc
jg
jmp
shrl
int
cmc
pop
stc
ret
push
fldl
mov
cmp
lods
mov
add
inc
cmp
lcall
cmp
cmpsb
neg
pusha
or
pop
lcall
gs
popl
xor
clc
add
shll
sar
or
adc
cmp
jge
inc
int
shl
inc
outsl
loopne
add
mov
jmp
xor
lds
xchg
inc
insb
adc
scas
dec
mov
mov
inc
add
out
push
fistl
and
sarb
pop
pop
mov
sbb
stos
mov
xchg
cwtl
bound
aam
push
outsb
xacquire
popa
xor
lret
mov
xchg
xchg
and
ret
rorb
mov
imul
xchg
mov
imul
mov
pop
movsb
mov
fwait
dec
dec
push
aaa
mov
jo
lds
mov
sbb
jbe
dec
punpckhdq
mov
pop
ss
dec
bound
sub
lods
rcpps
inc
add
fwait
daa
test
stc
adcb
addl
mov
out
ja
test
outsl
mov
out
fldt
cmc
adc
scas
jl
popf
pop
push
add
and
movsb
cmp
inc
jle
pop
xchg
add
add
or
fistps
shll
mov
xchg
push
dec
fistpl
pop
xchg
ret
pop
test
adc
lret
cmpsl
dec
fsts
clc
in
dec
scas
fisttpll
movsb
sub
pop
in
lcall
enter
daa
add
dec
jns
inc
mov
inc
mov
rorb
repnz
adc
stos
idiv
mov
repnz
cmpsb
push
fimuls
addr16
sti
jl
cltd
xchg
jo
mov
cmp
stc
sub
cmc
pop
jno
rcl
add
rclb
cs
pop
mov
jnp
sbb
iret
jno
sub
push
mov
push
mov
or
or
and
je
scas
pop
loop
aam
lods
clc
mov
jge
aam
adc
adcl
push
mov
adc
jne
push
mov
popa
or
test
inc
xor
arpl
lods
fldl
out
jne
jmp
mov
mov
pop
std
hlt
jg
and
sub
push
jbe
xor
adc
and
in
xchg
jno
push
outsl
mov
xor
xchg
jp
fldcw
sub
adc
mov
imulb
jecxz
repz
cmp
add
adc
movl
movl
movl
jmp
mov
jle
pushl
push
pushl
pushl
push
call
sbb
addl
add
xorl
add
movl
sbbl
movl
sub
movl
xor
xor
and
movl
sub
movl
sub
movl
sbb
movl
sub
movl
cmpl
movl
movl
jmp
movl
mov
jb
pushl
pushl
push
pushl
push
call
andl
notl
andl
orl
addl
sbbl
movl
sbbl
movl
xorl
movl
xor
movl
movl
cmpl
movl
movl
movl
jmp
mov
jbe
push
push
push
push
call
subl
adcl
movl
adcl
sbbl
adcl
movl
sub
movl
movl
adcl
movl
negl
movl
cmpl
movl
movl
jmp
movl
jbe
push
pushl
pushl
call
adc
addl
orl
sbbl
notl
adcl
xor
movl
movzbl
xor
movl
cmpl
movl
mov
mov
jmp
mov
je
push
push
push
push
call
xorl
negl
xorl
subl
andl
adc
sbb
movl
inc
movl
mov
xor
mov
xorl
shl
mov
or
mov
mov
subl
push
xorl
push
adcl
push
subl
push
adcl
call
and
mov
sbb
mov
adc
xor
xor
or
add
mov
mov
xor
sub
mov
adcl
jmp
into
mov
and
or
adc
adc
adc
jno
loopne
js
notl
mov
mov
jmp
push
cmp
xor
packsswb
dec
cmc
cmp
jmp
mov
mov
cmp
mov
mov
sub
sub
call
cmp
pop
mov
out
adc
leave
and
addl
and
and
mov
ljmp
or
and
mov
xchg
or
xlat
add
enter
iret
and
loope
sub
lea
cmp
xchg
and
cmpsb
push
dec
gs
fs
jb
dec
push
sahf
push
aaa
mov
push
fcompl
xchg
std
mov
mov
xor
jns
adc
pusha
pop
pop
pop
jno
insl
jb
mov
inc
loopne
movsb
lds
test
fistpll
pop
rcll
cmp
jmp
insl
cmp
mov
das
cmp
xor
sub
xor
loopne
mov
out
pushf
sahf
in
shll
aas
out
sbb
pop
stc
inc
out
sub
mov
scas
js
iret
cld
sub
push
andb
ds
push
popa
cmp
mov
sub
data16
sub
gs
imul
jle
pusha
add
or
popf
enter
mov
push
ficomps
push
jae
ds
loopne
cmp
inc
sbb
jo
cmpl
add
lahf
xchg
inc
test
fisubrl
popf
cmpsb
xor
or
xor
inc
inc
divb
roll
repnz
cli
xchg
lahf
inc
push
mov
cmp
xchg
aas
dec
mov
fildll
mov
pop
scas
aas
sti
aaa
insb
enter
push
inc
loop
jmp
loopne
lds
mov
aam
and
aad
mov
loop
ljmp
jae
loop
fbld
push
idivl
mov
mov
mov
inc
in
push
test
cli
cwtl
outsl
mov
pushf
dec
sbb
cmp
adc
cmpsl
and
enter
mov
prefetcht0
loopne
xchg
inc
pop
push
mov
lea
jnp
shrb
mov
sbb
push
add
jecxz
xchg
cltd
inc
add
orl
inc
mov
pop
jp
ret
add
xor
and
divb
iret
xor
cs
out
or
jnp
cld
cmp
stos
sub
cmp
movsl
and
ljmp
xor
jb
inc
sbb
mov
sbb
je
subl
imul
in
xchg
aam
out
jmp
add
adc
dec
shl
imul
stc
adc
fs
stc
test
idivb
xchg
adcb
mov
jno
repz
loop
gs
and
ficoms
hlt
xor
and
pop
fisttps
and
shlb
adc
sbb
fidivs
jo
adc
jecxz
add
fs
add
lock
inc
jbe
lods
mov
mov
mov
mov
jge
iret
clc
mov
iret
cld
sub
adc
lea
mov
orl
mov
or
and
xor
mov
or
andl
xor
movl
cmp
jmp
xlat
test
push
xlat
popa
dec
lcall
cmp
adc
int
adc
mov
nop
out
cli
mov
inc
mov
test
cmpsl
add
xchg
pop
push
sub
xchg
cmp
sbb
mov
jbe
test
xchg
pop
push
ja
roll
lret
jo
xchg
jns
xchg
scas
add
sarl
lsl
sbb
xor
addb
dec
mov
cmp
and
adc
mov
and
mov
inc
ljmp
mov
mov
adc
xor
jp
std
loopne
aaa
icebp
mov
hlt
fisttps
sub
lock
lahf
stos
xchg
add
js
lahf
push
adcl
out
mov
jbe,pn
fstpl
out
rcrb
mov
fisubrs
scas
addr16
out
mov
das
sbb
or
cli
and
std
dec
hlt
aad
lock
and
add
fisttpl
or
sbb
mov
mov
sbb
sahf
pop
add
mov
iret
add
or
insl
es
addl
and
mov
mov
or
shrb
imul
bound
add
fwait
or
jg
popa
pusha
mov
mov
cld
fiaddl
insb
rolb
sbb
hlt
pop
jp
inc
test
pushf
fstl
lock
imul
lds
pusha
gs
push
add
xchg
xorl
xlat
inc
and
sub
mov
inc
sub
sysexit
inc
jbe
sub
addr16
inc
adc
cmpsl
push
and
xor
mov
xchg
in
pop
jmp
andl
test
movsl
pop
scas
mov
xor
icebp
jmp
mov
and
rorb
sbb
push
sub
mov
and
sbb
xor
cltd
pop
sarb
outsl
nop
je
std
int3
sbbb
imul
cs
lods
arpl
add
pop
scas
sub
repnz
and
arpl
push
sub
mov
lds
testb
aaa
sbb
mov
and
out
inc
ljmp
xchg
fwait
pop
xchg
mov
add
add
xchg
pop
filds
int
xor
or
ficomps
stc
nop
add
mov
outsl
repnz
sti
mov
mov
aaa
xchg
arpl
pop
jno
sbb
hlt
xor
push
pop
movsl
mov
jbe
xor
jnp
add
addl
jae
sbb
mov
inc
and
js
mov
stc
jne
sub
xor
mov
xlat
enter
in
popa
jb
or
in
movsl
mov
addr16
lretw
jecxz
outsl
ror
sahf
lret
cld
add
adc
arpl
cmpsl
scas
fsubrs
push
mov
nop
pop
into
dec
dec
aad
mov
popa
dec
in
jbe
xchg
and
outsb
negl
push
and
mov
inc
jae
lods
ds
add
cmp
mov
or
and
pop
jb
adc
fcmovb
adc
ja,pn
xor
jecxz
fnstsw
stos
dec
aas
pop
mov
push
lcall
scas
gs
adc
ja
jle
fcoms
int
pop
and
stos
dec
shll
sub
test
pusha
add
add
mov
mov
cmpl
mov
movl
movzbl
jmp
movl
jae
push
push
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
shrd
shr
add
mov
mov
andl
shl
xor
addl
xor
or
mov
mov
movl
cmp
jne
mov
cmpl
not
mov
movl
jmp
movl
movl
je
push
pushl
push
push
call
adc
xor
or
mov
adc
not
decl
xorl
sub
and
mov
sub
cmpl
mov
movzwl
mov
jmp
movl
movl
jle
pushl
pushl
call
sbb
adc
add
sbb
sbb
movl
mov
xor
mov
mov
sub
mov
shrd
xorl
jmp
lcall
add
js
pusha
dec
mov
int
adc
mov
ret
sbb
fdivl
mov
xor
or
fstpl
movsb
sbb
inc
mov
mov
add
adc
sub
int
or
test
sahf
lret
icebp
out
push
fistpll
push
lret
imul
pop
int
sub
pop
and
in
gs
jnp
sbb
and
sub
imulb
mov
jecxz
aad
inc
or
bound
pushf
xchg
dec
dec
xchg
repnz
inc
cmp
pushf
push
imul
out
cmp
outsl
and
push
nop
xor
jp
xchg
es
xor
adc
or
or
add
sbb
mov
dec
push
push
sahf
xor
cmp
mov
xor
push
pop
dec
cltd
mov
sahf
push
dec
xor
jle
xchg
jbe
fyl2x
mov
out
mov
out
in
cmp
jl
addr16
jns
fs
repnz
xor
jbe
pushf
fidivs
movsl
iret
pusha
push
movsb
mov
jge
adc
dec
mov
fmull
or
mov
hlt
imul
mov
add
stos
std
sbb
insl
dec
mov
neg
ja
into
pop
popf
scas
shll
or
inc
xchg
test
and
xchg
sub
sbb
or
cwtl
loop
mov
int
rcrl
push
lods
mov
pop
mov
jecxz
cmc
cmp
mov
lahf
mov
movnti
addr16
inc
aaa
mov
sbb
test
das
stos
repnz
xor
jmp
add
cmc
sub
sub
adc
mov
cld
adc
movsl
mov
mov
int
fnstcw
fadds
rorl
cwtl
pop
pop
insl
mov
loopne
xor
mov
sub
out
cli
sub
push
icebp
lahf
push
lret
or
xor
or
cmp
cmp
pop
test
jnp
or
push
in
mov
xchg
push
cmpsb
pop
mov
mov
sbb
scas
cmp
in
aam
sbb
push
mov
popa
add
loop
sbb
and
xchg
mov
lret
in
and
jge
adc
mov
movsl
std
adc
pop
xor
ss
push
dec
pop
sbb
add
call
imul
xor
mov
in
jecxz
addl
rcrl
loop
ja
pop
add
cmpl
mov
cmp
dec
out
je
jne
fldlg2
adcb
xchg
mov
push
cltd
enter
rcll
jno
cmp
aaa
push
ja
cmp
push
incb
repnz
shrl
fnstcw
ss
jae
lods
insb
mov
inc
loop
leave
mov
jmp
inc
or
cmp
pop
std
jne
jp
loopne
loope
sbb
rcll
js
jg
mov
mov
push
and
inc
scas
dec
aam
push
mov
scas
xchg
jp
fcomps
nop
pusha
fstps
adc
repz
je
adc
cmp
cmp
pop
lret
repz
pop
mov
dec
mov
adc
sti
outsb
xchg
testb
dec
push
js
aad
and
jns
jmp
mov
xor
cmpl
mov
mov
jmp
movl
jle
pushl
pushl
call
sub
add
notl
sbb
xor
dec
sub
mov
xor
orl
shr
sbbl
mov
adcl
xor
andl
or
shl
cmpl
mov
mov
movl
jmp
movl
movl
je
pushl
pushl
call
notl
and
sub
and
not
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
jle
push
pushl
pushl
call
sbbl
adcl
movzbl
sbb
mov
movzbl
and
mov
movzbl
sbb
mov
add
add
mov
mov
mov
shrd
or
shr
cmpl
movl
mov
movl
mov
jmp
mov
je
pushl
call
and
and
sub
or
mov
mov
or
sub
and
mov
mov
xor
shl
adcl
xor
or
xor
mov
mov
shrd
shr
mov
sbb
mov
cmpl
movl
movl
mov
jmp
movl
not
ja
pushl
push
call
mov
xor
or
sub
add
mov
sbb
inc
mov
mov
sub
add
or
mov
sbb
mov
xor
xor
or
andl
shl
lea
subl
mov
mov
andl
shrd
subl
shr
cmpl
mov
movzwl
mov
movl
jmp
mov
movl
jb
pushl
push
push
pushl
call
xorl
neg
or
movzbl
sbb
movzbl
xor
mov
xor
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
je
pushl
call
movzwl
add
mov
add
movzbl
and
or
subl
neg
mov
cmpl
mov
movl
movl
jmp
mov
jge
pushl
call
sbb
xor
inc
mov
sub
mov
adc
adc
cmpl
movzbl
mov
jmp
mov
mov
jl
push
call
movzwl
and
movl
add
sbb
movzbl
sub
sub
xor
mov
xor
subl
or
orl
shl
xor
imul
mov
and
mov
mov
andl
shrd
andl
mov
mov
xorl
xor
shr
subl
mov
mov
sub
mov
xor
adcl
or
sbbl
shl
sub
mov
cmp
mov
mov
movl
jg
or
mov
sub
mov
movl
shrd
mov
xor
mov
sbbl
xor
movl
shl
xor
adcl
or
shr
or
mov
mov
adc
mov
mov
mov
addl
mov
sbbl
shrd
shr
adcl
mov
mov
movzbl
sbb
mov
addl
xor
xor
or
shl
addl
imul
andl
sub
movl
jmp
mov
adcl
mov
notl
shrd
mov
add
mov
addl
xor
movl
shl
xor
or
xorl
shr
xorl
mov
mov
mov
cmpl
mov
mov
not
jmp
movl
mov
jg
push
pushl
push
push
call
xor
xor
xor
sbb
addl
orl
neg
xorl
and
cmpl
movl
movl
jmp
movl
jle
pushl
call
xor
xor
mov
sbb
dec
not
mov
adc
cmpl
mov
mov
mov
jmp
movl
movl
jg
pushl
push
push
push
call
xor
add
or
mov
movzbl
and
notl
adc
or
adcl
sub
mov
shrd
shr
mov
mov
jmp
xchg
icebp
mov
icebp
out
loopne
iret
sub
adc
int
adc
call
fiaddl
sub
scas
lods
push
testl
shll
mov
pusha
rcrl
pop
pop
in
fs
jg
aam
xchg
movsl
stc
jmp
lea
jecxz
mov
sbb
dec
xor
jecxz
fstpt
pop
mov
cmpsw
mov
shll
adcb
movsl
insl
add
leave
sarl
call
inc
pop
mov
cltd
mov
jae
sti
mov
lahf
sub
jb
outsl
jbe
and
or
pop
adc
push
test
dec
sbb
xchg
xchg
dec
mov
adcb
cmp
sub
xchg
cmc
inc
mov
fwait
das
aas
loopne
add
push
cmp
cmp
fstl
mov
sbb
std
out
sub
push
jmp
push
sbb
and
lahf
popl
imul
lahf
sbb
popa
jge
pop
adc
inc
cwtl
mov
xchg
outsb
xor
ljmp
icebp
dec
sub
rol
push
or
dec
outsb
mov
adc
pop
popf
fldcw
into
dec
pop
adc
loope
out
push
mov
or
fdivs
lods
ds
mov
popw
push
pop
xchg
mov
gs
jae
push
lret
cmp
xchg
jge
bound
stc
sahf
mov
mov
mov
and
inc
sbb
fcomps
bound
push
jle
enter
test
cmp
mov
xchg
mov
loopne
cmp
add
aam
cmp
iret
adc
lret
mov
mov
in
ja
aaa
sub
data16
cmp
mov
shll
push
ljmp
push
hlt
por
mov
lret
cmp
lret
sub
std
mov
mov
pop
repnz
dec
ret
popf
inc
popf
hlt
adc
jo
and
xor
push
pop
fs
out
ja
add
fsubl
sub
fldenv
jg
sbb
push
xor
mov
dec
inc
dec
sub
repz
lret
jo
lahf
pop
sub
mov
imul
push
movsb
fidivrs
out
mov
and
into
ror
bswap
pop
pop
mov
mov
movsb
xchg
fwait
push
push
cli
call
ljmp
outsb
jmp
orl
mov
dec
insl
inc
lods
mov
imul
roll
mov
shrb
jb
testb
adc
daa
lds
fldcw
aaa
sub
xor
aas
mov
xchg
bound
add
rcrl
lock
sbb
jae
sbb
mov
mov
xchg
sbb
js
lods
pusha
out
lret
mov
ds
mov
xchg
popa
jae
insl
in
fnsave
mov
pop
pop
arpl
xchg
cmp
popf
inc
xor
je
ja
add
mov
mov
dec
gs
pop
lret
repnz
mov
data16
mov
sbb
orb
int3
shrb
add
sub
icebp
outsb
or
pop
xor
cmp
jne
adc
xchg
xchg
jl
jecxz
movsl
or
sbb
cmpsl
pop
pop
loope
jle
push
lods
xchg
sti
dec
loop
add
xchg
jo
cmp
pop
clc
jae
inc
test
out
dec
movsl
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
jmp
lret
lea
push
push
and
xor
call
lods
push
in
adc
int
adc
cmpsl
inc
xor
mov
push
sahf
movsl
cmpsl
pop
int3
adc
adc
into
add
pop
sahf
and
push
adc
xor
aaa
cmpsb
cld
pop
xchg
inc
arpl
push
pop
inc
pop
sbb
in
orl
dec
icebp
repz
cmp
out
add
mov
push
daa
mov
lcall
inc
das
sub
dec
jecxz
dec
loope
jo
incl
mov
mov
mov
lret
mov
aas
push
mov
sub
aad
lds
pop
pop
mov
push
mov
stc
outsl
rorl
out
into
hlt
cld
scas
lods
in
sub
jns
outsb
sbbb
jmp
mov
cltd
and
inc
jge
lock
jnp
mov
pop
pop
push
imull
cmp
sbb
repnz
adc
push
xchg
loope
pop
cs
pop
add
mov
fidivrs
mov
adc
fdiv
mov
xor
inc
cmp
sub
aad
fldcw
mov
gs
push
add
into
cmpsb
sub
divl
xor
mov
mov
jl
adc
jnp
cld
sahf
pop
jns
cld
push
pop
pop
mov
cmp
fstl
mov
pushf
or
add
jnp
movsl
stos
mov
pop
sub
mov
inc
mov
jo
sbb
icebp
jp
mov
testb
call
in
cmp
xchg
and
xchg
in
stc
and
xchg
adc
int
test
mov
std
aas
mov
xchg
cs
in
xor
adc
mov
cmc
push
std
cld
add
inc
subl
xchg
mov
mov
jae
std
cli
fwait
mov
movsb
pop
mov
mov
adcb
mov
shll
data16
je
inc
in
sbb
cwtl
fucomi
dec
sbb
add
mov
pop
aas
pop
cli
sbb
lds
test
in
sub
xchg
sbbl
out
mov
dec
les
mov
loop
sbbl
clc
cmc
in
jl
and
movsb
stc
pop
fisubl
push
mov
into
fmuls
push
jg
cmp
adc
mov
loop
sti
adcb
es
outsl
dec
ss
add
inc
jo
push
add
arpl
dec
test
mov
mov
push
clc
imulb
mov
pushf
pop
jg
icebp
xor
inc
pop
js
adc
inc
je
decb
popa
enter
subl
sbb
sbb
and
out
jle
shrl
and
cld
adc
xchg
js
enter
lea
lock
test
test
or
mov
into
mov
lss
dec
or
rorl
pushf
movsl
lea
sahf
adc
fyl2xp1
inc
fnstcw
mov
xchg
popf
sbb
fistps
scas
repz
iret
mov
pop
stc
stos
fsubp
movsl
push
or
push
int
stos
sbb
mov
inc
inc
dec
dec
push
pop
test
xchg
sub
jl
call
cmp
in
mov
sahf
das
stos
loop
push
lds
sbb
mov
lahf
ss
lea
ja
push
xchg
pop
mov
movl
mov
movl
mov
mov
mov
shrd
shr
jmp
fsubrs
fldenv
test
mov
adc
adc
adc
or
cmp
out
mov
sti
rorb
shll
and
push
sub
push
and
or
aas
add
jno
cmp
push
xor
test
fidivs
out
fidivrl
xor
cmc
dec
adc
and
aam
add
das
rcl
subb
sahf
inc
mov
cmc
sbb
xchg
gs
cmpb
push
xchg
mov
js
ret
repz
fstps
jle
xchg
jae
nop
imul
ds
stos
cli
pop
inc
outsl
sarl
push
pop
imul
lock
and
adc
jg
xor
mov
jo
pop
dec
sbb
sbb
lds
mov
insb
popf
leave
test
scas
scas
mov
test
xchg
mov
aaa
ss
adc
popa
shll
mov
iret
mov
sub
int
mov
es
inc
sub
leave
loope
jnp
repz
jmp
and
pusha
xor
out
movsb
sub
imul
or
jns
inc
cmp
jae
stc
mov
movsl
sarl
and
cmp
cmc
inc
gs
jno
cmp
in
pop
fstp
cmp
lods
in
mov
andb
jo
das
push
ljmp
enter
dec
inc
jmp
pusha
lretw
sbb
inc
xchg
xor
push
rorl
or
push
pop
mov
and
adc
sub
insb
mov
jno
pop
push
mov
loope
cmp
mov
push
cmp
push
or
sbb
in
imulb
addr16
cwtl
imul
icebp
ja
xor
lods
jp
mov
inc
push
rolb
dec
jbe
subb
add
jg
cltd
mov
inc
sar
ja
sbb
inc
xchg
inc
je
pop
jp
jl
int
in
mov
lahf
es
mov
scas
cmp
je
mov
mull
bound
inc
scas
pop
imul
dec
adc
xor
cltd
push
xchg
shrl
pop
gs
sahf
cmpsl
adc
aam
sub
mov
or
gs
mov
stos
bound
es
xor
ss
jno
cmp
clc
pop
cli
fimull
repnz
and
test
adc
mov
add
mov
mov
fstp
fiaddl
stos
sahf
out
rcrb
ds
lret
or
enter
lahf
cmp
addl
lods
call
xorb
cmp
xchg
mov
cmp
sub
je
mov
pusha
sbbb
sbb
icebp
pop
sub
cmc
test
jb
xor
push
lret
jecxz
adc
ret
movsb
or
test
repz
mov
sti
ds
out
dec
push
mov
flds
clc
in
sbb
iret
cltd
xor
aam
or
xor
cmpsl
in
mov
scas
sub
push
push
mov
mov
add
and
aaa
mov
pusha
pop
out
sub
cwtl
gs
mov
pop
out
fmull
fsubrs
dec
lcall
pop
mov
pop
dec
pop
mov
add
jl
mov
call
fwait
std
push
dec
adc
mov
fidivrl
adc
xchg
fdivrl
sbb
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
jmp
orb
mov
pop
bound
int
adc
aaa
xor
jle
xchg
shrl
jp
icebp
mov
sbb
fistpll
int3
imul
dec
mov
mov
cli
das
movsl
jecxz
lea
lret
call
and
div
add
push
fxch
cs
mov
lret
dec
aaa
decl
mov
cmp
jmp
scas
and
scas
les
jge
insl
orl
cmp
xchg
jno
xchg
mov
lcall
pop
and
mov
shlb
idiv
fucom
mov
add
xor
dec
sahf
mov
bound
js
shl
hlt
xchg
adc
dec
mov
sub
daa
ficomps
jno
inc
loop
cli
pop
movsl
push
cmp
mov
xchg
pop
je
repz
scas
xor
pusha
fstpt
gs
inc
inc
jo
sarb
push
sbb
pop
sub
das
xchg
mov
push
mov
out
test
inc
repnz
push
dec
xlat
mov
lret
nop
iret
cmpsb
inc
adc
in
dec
cmp
sahf
and
pop
ret
das
cmp
add
push
mov
icebp
mov
or
fisubrl
adc
add
jbe
dec
fcoml
xchg
jae
mov
mov
sbb
inc
das
sub
xchg
addb
adc
rorb
xor
sti
fwait
sahf
fwait
test
and
adc
xchg
stc
mov
jb
xchg
std
test
add
cmp
sub
int3
lods
mov
inc
fisttps
scas
out
push
cmp
xchg
out
bswap
sahf
add
mov
sub
jmp
gs
int3
es
mov
cmp
inc
cmp
mov
sub
std
ja
dec
cmpsl
popf
sti
mov
mov
sbbb
dec
inc
jle
fcmovbe
jno
in
push
lcall
xor
js
push
pop
mov
cmp
mov
mov
cmc
adc
scas
inc
mov
loope
imul
outsl
cmp
pop
lret
add
in
dec
lods
fldt
fldcw
push
test
test
jl
repnz
xor
rcrl
or
adc
jp
sbb
orl
stos
outsl
rcrb
jl
xchg
outsb
add
lret
or
mov
sub
sbb
jp
jno
test
pop
push
xchg
xchg
xchg
jge
int
push
and
xor
repnz
sub
mov
cmp
dec
adc
jg
arpl
nop
push
xor
ljmp
ljmp
call
ljmp
push
inc
repz
loope
js
das
test
dec
mov
cmc
and
popf
pushl
cmpsl
repz
cmpsb
push
subl
xor
inc
je
loopne
dec
rcll
sbbl
lods
js
and
shlb
jo
in
mov
xor
pushf
or
or
and
notl
or
arpl
arpl
inc
paddusw
cmpsb
cwtl
gs
inc
mov
jecxz
add
movsb
das
add
jmp
jg
arpl
mov
js
sahf
ret
inc
test
je
mov
pop
addr16
jmp
mov
shl
jmp
fmuls
sbb
jno
insb
insb
jge
adc
int
adc
jno
int
mul
or
enter
ljmp
pop
adc
inc
adc
mov
lret
test
mov
fstl
add
iret
fwait
stc
mov
mov
cltd
mov
xchg
push
add
pop
cs
out
jmp
mov
jg
xchg
dec
mov
inc
xchg
ja
push
mov
lcall
lret
mov
jmp
addr16
mov
jmp
inc
cs
mov
xchg
cmp
add
mov
popa
push
daa
mov
jne
push
pop
int3
pop
enter
sub
js
iret
out
pushf
xchg
mov
outsb
xchg
xor
int
sbb
lods
imul
push
test
aad
push
xor
addl
xchg
cmp
dec
push
mov
push
fldpi
jbe
push
push
xor
or
leave
cmpsl
sbb
mov
in
push
ret
clc
out
cmp
mov
lcall
adc
push
inc
incb
insl
out
sub
inc
inc
jno
push
out
add
adc
test
js
pop
jge
adc
cld
and
pop
or
xchg
xchg
rolb
jo
out
mov
push
negb
dec
jno
jae,pt
push
or
ljmp
dec
or
imul
lea
ja
lea
icebp
xchg
popf
pop
in
mov
movsl
pop
out
idivl
repz
lods
or
xchg
bound
out
insl
adc
lret
add
xchg
sbb
stc
push
fs
mov
aam
loop
loope
lret
mov
out
mov
xor
mov
fisubrl
push
push
rcll
cwtl
movsl
add
cmpsl
cmpsl
jo
out
or
jno
iret
movzbl
lret
push
arpl
jl
out
in
sti
jnp
adc
mov
mov
and
scas
jae
lods
dec
pushl
call
out
and
mov
and
daa
out
mov
adc
call
mov
xor
pop
xor
into
dec
loope
push
mov
cmp
pop
mov
and
inc
ror
stos
mov
shlb
in
addb
enter
cld
dec
pop
jno
add
outsb
or
push
movsl
pop
pop
cmp
aas
pop
fcomip
jmp
shll
jl
sbb
cmpsb
lcall
jg
imul
cmpsl
push
push
aad
insb
ret
mov
lods
and
hlt
in
repnz
aaa
xor
jo
push
ffree
jns
pop
into
iret
fs
in
lods
ja
sub
frndint
jle
fs
or
and
add
aas
push
add
popf
aaa
pop
pop
push
test
stos
push
lret
loopne
jo
push
cwtl
arpl
or
jecxz
rcll
sbb
adc
and
lods
icebp
mov
test
pop
mulb
ljmp
pusha
test
xchg
pop
in
push
jmp
cmp
mov
and
dec
movsb
fisubrl
add
les
mov
imul
inc
stos
push
jmp
in
sahf
loop
pop
dec
adc
test
cld
into
jg
jnp
daa
popf
inc
inc
aas
outsb
loop
mov
sti
jb
sahf
and
inc
sub
loop
ret
in
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
jmp
dec
or
push
sub
loopne
fcoml
push
int3
adc
int
adc
cmp
ficoml
and
ret
mov
add
gs
ljmp
push
js
mov
inc
add
jl
or
std
sub
mov
push
divl
xchg
ror
inc
test
push
and
xor
je
push
add
mov
stos
insb
int3
bound
fdivrs
ret
sti
push
imul
inc
mov
repnz
out
lahf
lods
add
or
popf
mov
sbb
in
xor
shrb
mov
loopne
lfs
insl
push
xchg
lcall
mov
xchg
adc
pop
xchg
clc
xchg
rcrl
jne
mov
mov
iret
and
mov
xchg
dec
scas
or
mov
xchg
xor
add
mov
sti
xchg
sub
test
push
dec
call
cmpsl
bound
push
pop
iret
lea
sbb
std
cwtl
sub
lock
mov
repnz
push
in
in
sbb
lods
cltd
ds
inc
lret
xchg
and
add
sbb
or
daa
or
xchg
inc
int
dec
aad
mov
fstps
jo
push
xchg
movsb
xor
fcmovbe
cld
add
dec
cli
fdivs
mov
push
and
xchg
enter
mov
inc
dec
adc
imul
sub
sub
push
aaa
lcall
fstpl
xchg
dec
and
mov
call
jle
cld
mov
and
fcoms
test
xlat
or
sbb
dec
pushf
cmp
repnz
inc
in
mov
cmp
insl
sbb
pop
push
dec
and
pop
lret
cmpsl
insl
scas
sbb
adc
mov
adc
loope
xchg
insl
lods
jl
enter
repnz
dec
cmp
pop
jns
push
jns
pop
jbe
sbb
adc
push
lahf
pop
mov
stos
xor
mov
sub
push
add
sub
and
icebp
test
cmovo
leave
popa
out
mov
call
mov
in
ljmp
jae
or
lret
clc
fs
cmp
xor
xor
outsb
pop
testb
arpl
dec
jp
jl
andl
cld
loope
outsb
jg
sbb
out
inc
stos
sub
dec
sbbl
dec
cmc
add
mov
mov
insb
lds
pop
scas
popa
mov
pop
cmpsb
shlb
jae
das
inc
cmp
inc
adc
jb
imul
adc
aas
stos
add
jge
iret
mov
in
cld
imul
xchg
push
lods
jne
sbb
mov
push
ss
ljmp
xor
nop
jne
test
jnp
pop
and
insl
incb
int
mov
lds
popf
in
mov
mov
out
jbe
or
fisubs
push
hlt
inc
add
lock
cs
es
jg
jp
cmp
orb
or
frstor
ret
adc
jmp
aaa
aad
fnsave
push
aas
sbb
loope
fsubrl
jge
add
sub
leave
bound
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
jmp
adc
push
inc
daa
sbb
lods
insb
push
inc
xor
int
adc
add
push
nop
aad
insl
gs
push
cld
popf
dec
popf
push
jbe
and
or
rcrb
dec
mov
adc
in
dec
add
inc
jp
ljmp
orl
mov
sbb
xor
adc
cvttps2pi
dec
jp
mov
outsb
inc
and
stc
or
mov
lret
push
fimuls
mov
and
mov
inc
adc
push
cmpsb
inc
lret
jo
stos
lea
lock
xor
push
imul
iret
inc
or
jo
mov
dec
hlt
jge
add
sbb
jmp
sbb
cmpsl
movsb
xor
bnd
cmpsb
dec
or
popa
inc
mov
pop
pop
inc
adc
adc
rorb
push
cmp
out
shr
shrb
cmp
mov
cltd
mov
dec
pop
dec
out
popf
mov
aas
ljmp
push
into
call
dec
int3
push
lahf
das
scas
call
popf
dec
mov
inc
pusha
pop
jmp
ror
gs
and
daa
sub
mov
adc
das
add
pop
pop
mov
xor
hlt
adc
dec
pop
adc
mov
dec
xchg
fwait
jno
mov
mov
lcall
push
sbb
and
std
mov
xchg
xchg
pushf
inc
push
scas
jne
aaa
inc
popa
dec
out
lret
lods
dec
test
pop
dec
out
test
aam
ja
or
add
out
push
aam
mov
popf
xchg
and
divb
stc
insb
mov
mov
test
inc
mov
xchg
pop
pop
or
ret
sti
ret
cmp
pop
xchg
mov
mov
push
fs
mov
ret
testb
lock
jns
mov
sahf
sub
mov
cmp
andb
sbb
mov
rorb
inc
ja
push
adc
imul
ss
test
addb
leave
lods
leave
mov
std
fidivrs
adc
test
adc
jbe
pop
imulb
mov
hlt
addr16
xchg
popl
push
mov
add
push
inc
ret
shr
bnd
or
std
fldt
sahf
xchg
or
in
cmp
xorl
rorb
inc
jnp
or
int
xor
jne
stc
mov
mov
cmpsb
shll
and
lret
popf
dec
mov
test
int
mov
addr16
pop
sahf
dec
xchg
xor
xchg
lds
sbb
ljmp
mov
push
and
xor
hlt
adc
js
data16
or
push
es
loopne
sbb
icebp
movsl
mov
fsubl
push
jnp
shrl
mov
mov
pop
lahf
cli
cmp
jecxz
pop
mov
sbb
inc
pop
push
test
std
cmc
push
cli
and
dec
xchg
aad
repnz
xchg
cmpsb
out
sbb
add
lret
fldenv
ret
into
movsl
xchg
push
inc
sbb
std
lds
ss
das
sahf
ss
or
cmpl
adc
xor
sbb
push
adc
mov
daa
xlat
jp
ljmp
lahf
sbb
jmp
and
sub
lock
test
cltd
movsl
pop
push
jmp
xchg
sbb
dec
loope
addr16
lock
ret
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
jmp
jp
lds
sub
lea
enter
adc
int
adc
add
cmp
xlat
adc
and
aam
pop
jp
push
rcrb
and
loope
push
scas
insl
sti
push
scas
stos
in
icebp
popf
mov
in
stos
lods
add
imul
ss
test
mov
inc
sub
in
das
rol
mov
pop
stc
popa
mov
cs
cwtl
xor
es
sar
or
sub
mov
mov
xor
cmc
insb
stos
push
cmp
test
idivb
mov
xchg
aas
ljmp
icebp
xor
xor
inc
mov
mov
xchg
push
outsb
inc
add
mov
ljmp
mov
xchg
jb
push
loope
mov
pop
int
mov
xchg
dec
out
lret
mov
popf
out
cwtl
cmp
faddl
push
push
push
jne
sub
cmp
mov
mov
lret
xor
pusha
fildll
lcall
out
dec
sub
xor
cmp
mov
push
aam
fbstp
lahf
xchg
roll
mov
pop
test
xchg
fs
stos
out
inc
out
aas
in
xchg
ret
cmpsb
mov
call
fldcw
mov
test
push
jecxz
push
les
repnz
pop
mov
cmc
rclb
mov
cmp
fistps
mov
cmp
inc
ss
pop
mov
mov
call
push
xchg
jbe
mov
jp
cmp
loopne
inc
lock
repz
dec
mov
push
clc
lret
ret
aad
xlat
jl
inc
fcomps
adc
lock
push
cmc
xor
sti
dec
out
cmp
and
lea
imul
lea
imul
movsb
rorl
imul
or
out
sarb
fstl
fs
std
mov
jg
add
movsl
lcall
lods
sub
lret
xorb
or
adc
sbb
mov
dec
cs
repnz
pusha
dec
insl
popf
fwait
mov
pop
pop
jle
pop
mov
data16
imul
aaa
or
or
stos
push
imul
pop
test
pop
out
sbb
cli
mov
inc
xchg
cmp
and
jmp
test
jl
sub
sub
iret
test
fisubs
xor
sbb
loope
out
mov
stos
aas
xor
mov
ret
pop
data16
push
in
cmp
xor
sub
pop
fwait
add
out
movsl
cltd
push
jmp
in
in
xchg
mov
xchg
inc
xor
push
dec
icebp
fisubs
std
pusha
insl
cmpsl
mov
adc
je
fisttpl
fcmove
sub
divb
push
inc
bound
jg
repz
mov
pushf
gs
pop
js
pop
sbb
cmc
xchg
out
jns,pt
lea
out
rcl
xchg
fisttps
loope
mov
notl
out
jno
add
xchg
fdivrs
and
mov
push
outsl
insl
cld
stos
iret
frstor
insl
dec
lea
jle
dec
mov
sbb
mov
add
xor
imul
push
jbe
sbb
push
inc
leave
cmp
and
xor
push
xchg
arpl
clc
in
mov
adc
hlt
mov
fsubrl
in
jp
les
mov
insl
jno
nop
inc
jne
jmp
orb
shlb
rorb
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
jmp
imul
sbb
dec
dec
mov
int
adc
out
inc
call
and
inc
mov
fadd
pusha
and
fnsave
push
sbb
arpl
out
inc
insl
push
push
sbb
sbb
sub
lret
shll
clc
cltd
cltd
enter
outsl
pop
dec
aam
add
adc
cltd
pop
movsl
dec
push
xor
cmp
ljmp
dec
jle
ss
ja
sub
movb
popa
fcmovnb
dec
pop
jnp
popa
mov
xchg
xchg
add
lds
frstor
xchg
aas
jb
in
adc
and
aaa
stc
aas
xchg
lret
adc
out
xchg
jmp
outsb
leave
ficompl
mov
xchg
pop
xchg
mov
xchg
push
call
xor
mov
inc
cmp
jle
jg
incb
adc
lahf
sub
mov
xor
mov
int
pop
xchg
sbb
call
push
addb
fwait
jae
int3
cmp
sbb
pop
push
xor
cltd
push
mov
and
rcrl
aas
aam
cltd
jae
push
push
xor
clc
and
fs
mov
adc
push
rol
fsubrl
imul
push
inc
imul
or
repnz
jae
adc
inc
push
ror
pop
cmpsb
rcrl
sbb
ret
test
stc
inc
and
jge
dec
mov
fidivrs
mov
and
pop
xchg
and
in
dec
les
addl
nop
xchg
scas
adc
jo
pop
lock
adc
xor
stos
adc
xchg
cmp
xchg
stos
lcall
sti
or
lds
mov
cmc
cmpsb
jo
jno
sub
xchg
push
test
movd
pop
mov
fcoml
insl
rcrb
add
mov
sub
or
fbld
es
jge
stos
pop
mov
ja
adc
adc
add
outsb
and
inc
mov
pop
mov
stc
insl
inc
data16
subl
or
adc
dec
mov
lcall
fdivrl
pusha
idivl
and
push
scas
push
bnd
rorl
out
cmpsl
mov
cmpsl
fsubl
inc
and
js
dec
lret
push
rorl
mov
bound
pop
and
andl
lcall
loopne
mov
or
cmp
xor
xlat
inc
aad
push
push
imulb
jo
push
cmc
std
cmpsl
imull
xor
fwait
and
push
xchg
xor
test
mov
movsb
daa
pop
cmp
xor
loope
movsl
ret
jle
cmpsb
jns
cs
and
mov
out
sbb
cli
mov
dec
in
addb
test
sbb
test
jae
mov
mov
in
mov
push
mov
lret
std
cmp
xlat
rcrb
stc
call
in
lods
int
jno
fldenv
jae
jge
repz
imul
notl
inc
push
aad
push
jge
add
or
inc
pop
cmp
in
imull
add
xor
sub
stos
adc
fldt
and
hlt
fisttpll
pop
in
xchg
movsb
dec
or
sbb
add
mov
fisttpl
cmc
xchg
push
subb
hlt
sahf
pop
dec
jnp
mov
pushf
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
jmp
repz
mov
pop
pop
lods
push
lahf
jl
pop
mov
adc
adc
adc
sub
or
mov
imull
xor
pop
mov
push
repnz
mov
mov
cld
in
ds
repnz
mov
aas
and
adc
fldl
ret
in
insb
jp
or
mov
sub
mov
push
bound
aad
inc
fadds
test
xor
fwait
imul
ss
pusha
ret
pusha
cmp
fs
add
not
mov
dec
sbb
xchg
loope
ficoml
mov
imul
or
pop
das
out
adc
sbb
xchg
mov
xchg
push
or
xchg
imul
jp
push
outsb
jne
xchg
cmp
mov
jbe
add
fwait
sub
fistps
push
sbb
cmpsb
mov
stos
xchg
js
imul
mov
inc
lret
mov
call
dec
mov
xor
sbb
inc
movsb
mov
jge
pusha
xchg
or
jno
scas
jne
mov
mov
or
and
or
dec
lods
xchg
testl
xlat
fadd
cs
sub
test
xchg
add
dec
inc
jl
jb
xor
fwait
pushf
push
jp
sub
loope
mov
mov
adc
adc
and
sbb
cli
ja
pop
mov
push
aam
xor
sub
dec
jmp
add
dec
in
loope
cmc
mov
pop
in
push
dec
push
xor
and
out
inc
mov
and
loop
xor
std
xor
inc
data16
and
xchg
add
sti
inc
aam
xlat
push
xor
in
bound
xor
push
sub
dec
fstpt
xor
xchg
cld
cmc
pushf
fisubl
cwtl
aam
sbb
cmp
fsub
scas
stc
mov
push
fsubrs
in
sub
call
ja
mov
xor
pop
xor
dec
mov
stos
sahf
jmp
add
ret
jbe
out
xor
push
cmp
pop
sbb
pop
mov
pop
fwait
adc
mov
push
or
add
js
mov
add
xchg
xchg
ljmp
fcoml
add
push
cwtl
cmp
filds
fstpt
pop
lds
out
pop
movsl
sbb
sbb
std
insb
test
or
shl
dec
scas
inc
fdivs
pushf
dec
inc
pop
test
fs
xor
sub
sub
pushf
jb
cs
fsubs
mov
cmp
or
jge
cmp
jnp
jp
test
mov
repnz
pop
xchg
fsubl
and
add
lcall
je
pop
jns
mov
std
lret
cmp
sbb
cs
sbb
xor
in
clc
ret
es
scas
cmpsl
xchg
mov
add
add
cwtl
lcall
dec
push
outsl
add
inc
fimull
mov
stos
cltd
or
jbe
ret
mov
inc
xchg
loopne
sbb
test
frstor
mov
enter
pusha
mov
inc
ds
inc
adc
jne
mov
adc
dec
add
andb
ret
pop
push
rol
adc
int3
cmp
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
jmp
mov
push
jle,pt
or
adc
adc
adc
mov
daa
jg
call
test
xchg
cmp
lcall
cmp
repnz
push
es
xchg
push
or
and
xlat
xchg
cli
dec
shrb
pop
pop
movsl
in
shlb
ret
mov
loopne
mov
xor
data16
cmp
dec
push
stc
pop
aas
xor
cli
mov
lcall
mov
aad
jb
inc
mov
or
sarb
adc
add
popa
push
inc
pop
inc
dec
ds
jmp
call
mov
aas
inc
iret
movsl
incl
lea
stos
lcall
insb
inc
cmp
jge
inc
loop
xchg
fwait
and
push
enter
sub
xor
jnp
push
adc
jg
div
mov
repz
cmp
movsb
xchg
out
mov
rcrb
in
mov
sti
push
cmpxchg
scas
adc
inc
xor
inc
ds
jmp
mov
mov
push
push
push
jp
xchg
adc
in
xor
mov
dec
inc
repz
out
das
mov
dec
dec
mov
add
jnp
shlb
mov
or
cmp
mov
mov
mov
out
pusha
lahf
push
and
inc
call
fdivrp
fildl
out
xor
jns
xchg
sbb
pop
xor
rcrb
lds
pop
mov
stc
and
ret
scas
sub
stos
mov
lock
mov
pop
xlat
sahf
mov
adc
out
clc
xchg
sub
lods
xor
push
mov
imul
lea
imul
lret
inc
movsb
cmp
pushf
out
repnz
dec
in
cmpsb
repz
repz
sub
push
repz
jb
or
js
lret
out
push
pop
add
push
fistl
mov
insl
in
fstl
add
sub
int
cmp
xor
fdivrs
adc
add
fdivs
sub
jl
and
adc
push
push
pop
cmp
pop
jge
out
xor
call
sub
inc
fnstsw
dec
pop
jg
out
mov
xchg
add
push
add
xor
cmpsb
adc
outsl
data16
jle
sbb
and
into
or
pop
inc
fstps
sahf
xor
fisubl
sbbl
push
lock
jno
jge
out
frstor
into
incb
inc
orb
cmp
push
xchg
adc
mov
mov
out
aas
rcr
adc
int3
mov
cltd
and
inc
pusha
ja
out
mov
fdivrl
and
fisubrs
cs
inc
aas
inc
pop
push
outsb
push
dec
popa
pop
jb
and
jle
popf
xlat
cmp
stos
dec
insl
mov
mov
mov
pop
jmp
stos
scas
into
sub
mov
sub
pop
arpl
hlt
pop
dec
arpl
cltd
stc
sub
ret
push
data16
fimuls
mov
adc
lods
fwait
test
jae
mov
xchg
and
push
imul
lahf
jecxz
sbb
xor
pop
imul
aaa
fsubs
cmp
pop
mulb
sti
push
jmp
push
in
dec
aad
fdivr
aas
push
div
jb
or
add
imul
jne
mov
dec
push
and
xor
test
cmp
push
add
rol
loopne
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
sbb
sbb
out
stos
in
into
pop
lods
je
adc
int
adc
ja
adc
dec
es
jmp
stos
and
test
adc
lcall
mov
push
mov
mov
dec
test
dec
data16
push
pop
repz
repnz
cmp
data16
jo
dec
sahf
mov
lock
outsb
das
xchg
mov
jl
hlt
aad
out
push
dec
scas
inc
jecxz
scas
and
outsb
scas
sbb
push
imul
mov
mov
and
lods
pop
dec
mov
hlt
test
xchg
stos
orb
inc
inc
fimuls
cltd
mov
int3
xor
push
pop
mov
fsubs
jae
sub
lods
test
xor
ljmp
sbb
add
xorb
mov
std
scas
out
jg
pushf
push
mov
popf
loop
xor
in
pop
mov
jae
add
pushf
and
sbb
xchg
sub
xor
gs
fisubs
hlt
xlat
jecxz
in
push
dec
fwait
aaa
mov
leave
arpl
movsl
mov
push
push
pop
adc
mov
pop
cmp
adc
es
loope
inc
inc
lods
fdiv
pop
pop
dec
mov
aam
imul
sbb
mov
push
cltd
rorl
fsubrl
mov
pop
inc
xchg
pop
test
addr16
in
inc
dec
addr16
push
mov
jnp,pn
inc
or
lods
mov
mov
sub
mov
xchg
xchg
xchg
and
ret
xchg
push
imul
dec
cmp
insb
inc
sahf
fsubl
jmp
sub
or
xorb
cmp
mov
gs
cmp
and
out
cmp
faddl
push
lods
std
test
prefetchnta
test
push
xchg
sub
add
adc
mov
hlt
sbb
inc
pusha
or
inc
push
mov
sub
mov
loop
pop
jmp
pop
imul
int
psubsw
fadds
push
leave
pop
mov
ja
clc
dec
sub
andb
adc
mov
or
int
add
repnz
sbb
push
ficompl
stc
sub
mov
ljmp
inc
xchg
or
cmp
cmp
test
test
aam
ret
sbb
push
add
and
sub
mov
mov
test
push
or
das
sub
jnp
sub
inc
and
pop
es
lcall
ret
inc
xor
outsl
sub
xor
push
sub
push
imul
inc
mov
jg
add
jmp
cmp
pop
jp
mov
mov
xor
or
shrl
sti
ret
xorl
xchg
call
ljmp
fidivrs
xlat
jl
mov
in
ss
inc
or
xchg
sub
iret
mov
and
dec
gs
push
mov
add
jecxz
enter
fwait
dec
int3
xlat
je
mov
adc
inc
mov
add
adc
loop
out
xor
push
mov
fldl2e
xchg
xor
cld
dec
cs
add
mov
mov
lock
pop
cmp
pop
lods
mov
int
shll
jb
and
push
loope
mov
inc
inc
les
sbb
add
ja
imul
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
jmp
adc
jmp
repnz
ret
push
mov
push
sahf
adc
int
adc
mov
adc
iret
jae
cmp
jecxz
mov
insl
mov
xor
push
paddq
xchg
or
out
comiss
pop
test
xchg
cli
mov
lea
inc
es
stos
xor
mov
xor
mov
scas
pop
sti
lret
pop
sbb
out
aad
out
pop
mov
mov
xor
fmull
into
fadds
xchg
add
sbb
sbb
or
aaa
dec
std
push
rcll
rolb
sub
ret
inc
sub
lret
js
push
mov
test
dec
and
lds
mov
sbb
rcl
xchg
ja
mov
shlb
insb
out
jge
daa
xchg
in
insl
push
loop
je
int3
push
pop
push
mov
jnp
cmpsb
mov
inc
and
sbb
mov
popa
shll
pop
cmp
shr
xchg
xchg
repnz
rorl
jo
ja
mov
jne
adc
lret
aas
clc
mov
orl
push
jno
lods
shrl
jmp
outsb
xchg
jnp
add
imul
or
aam
pop
mov
mov
pop
xor
add
xchg
imul
add
xor
fs
cmp
int
mov
int3
jne
movsb
fmulp
inc
aad
cmp
mov
daa
pop
adc
xchg
jmp
mov
dec
cs
leave
mov
and
jecxz
mov
jge
bound
mov
fstpl
mov
pop
rorl
cmp
lds
cwtl
inc
adc
add
or
scas
bound
xor
xor
mov
lea
xor
sub
ljmp
pop
add
test
dec
fmul
pop
shll
fdivs
fwait
xchg
loop
orl
add
outsl
mov
jl
negb
or
mov
lods
cmp
xchg
jmp
mov
icebp
pushaw
jge
js
xor
mov
gs
push
fidivrl
mov
clc
movsb
add
push
jns
xchg
leave
adc
pop
leave
shld
add
clc
pusha
sub
inc
pop
jno
add
adc
cs
xor
push
hlt
inc
jnp
cmp
mov
adc
repnz
mov
scas
xor
insb
ffree
ss
in
js
lret
mov
out
dec
cli
ja
inc
or
pop
mov
pop
dec
test
jp
mov
inc
sbb
push
cmp
out
inc
dec
mov
cmpsl
lods
lds
mov
pop
sti
pushf
loope
mov
test
push
leave
push
mov
daa
or
add
mov
fbld
fmull
cld
icebp
sub
and
in
not
dec
push
jb
sub
push
jmp
jecxz
and
mov
or
mov
out
pop
aaa
test
repnz
leave
shll
xor
xor
cmp
sbb
out
imull
xchg
xchg
outsb
ja
dec
cmp
call
mov
xor
andb
shrl
mulb
push
mov
push
cmp
pop
je
mov
xor
cmp
cmpb
adc
pop
xchg
mov
mov
jns
or
pop
std
pop
xor
xor
xor
xor
mov
mov
jmp
mov
jmp
or
jge
pop
push
dec
cltd
cmc
leave
lcall
xchg
adc
int
adc
test
push
loopne
xchg
mov
scas
pop
add
andb
dec
movsb
xchg
xchg
ror
mov
dec
mov
dec
fimuls
mov
lea
jbe
xor
add
rclb
add
pusha
cmp
out
scas
loope
jne
sti
test
xchg
or
jecxz
fcoml
mov
fadd
iret
pop
xchg
sub
out
fiadds
jl
fdivrl
aaa
inc
cltd
inc
cmp
mov
add
push
mov
pop
adc
mov
ss
int
xchg
xchg
xchg
mov
push
loope
test
mov
sti
jge
in
test
mov
test
out
clc
test
mov
mov
jno
testl
jge
mov
sub
jno
pop
lods
mov
imul
stos
cld
into
or
xchg
pmullw
leave
popa
fcompl
cmc
aaa
push
sbb
sub
cmpsl
lcall
icebp
inc
orl
outsb
xchg
xlat
mov
push
dec
and
pop
jge
movsb
push
shll
in
in
in
jbe
xchg
cwtl
fsubs
mov
jecxz
jns
jae
imul
mov
inc
iret
lods
cmp
jg
sub
test
jns
mov
add
mov
jp
push
lcall
cwtl
jmp
outsl
mov
mov
mov
iret
jp
scas
jno
in
dec
js
ret
hlt
es
cs
mov
or
and
and
inc
sbb
mov
loopne
push
addr16
nop
push
scas
hlt
dec
clc
pop
mov
jle
sub
adc
pop
data16
lahf
stos
ljmp
xchg
ljmp
cmp
xchg
cmpsb
sub
lcall
or
rclb
fs
lcall
aad
mov
or
xor
cmc
xchg
inc
jns
sbb
es
lcall
mov
jbe
push
outsb
popa
imul
dec
movsb
inc
push
pop
adc
xchg
fdiv
fdivrp
daa
pop
or
push
and
in
xchg
mov
dec
stos
mov
movsl
mov
push
pop
test
mov
pop
cmc
movsl
les
nop
pop
adc
xchg
cmp
dec
jecxz
and
mov
cwtl
jmp
sub
shrl
out
dec
test
jo
ja
cmp
dec
test
je
xor
push
push
sti
and
out
enter
jmp
push
sbb
xchg
aaa
adc
stos
mov
scas
mov
pop
xor
fdivrs
mov
filds
aad
mov
xor
mov
icebp
dec
ret
mov
gs
les
or
xor
adc
jns
inc
roll
add
scas
pop
loopne
pop
ljmp
jno
pop
mov
add
notl
lods
inc
xchg
cmp
or
fcmovnb
xchg
push
loopne
stc
pushw
insl
add
mov
cmp
fs
clc
idiv
test
dec
push
mov
sub
rcll
lods
adc
mov
pop
push
daa
mov
gs
ja
sub
xlat
bound
lea
scas
fdivl
ret
sbb
pop
and
mov
fildl
inc
cld
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
jmp
stc
sub
xor
xchg
int
adc
mov
mov
inc
dec
arpl
in
or
mov
pop
mov
testb
dec
xchg
insl
mov
jecxz
add
mov
dec
mov
movsl
into
loope
jmp
and
jecxz
dec
push
testl
cmp
aam
inc
cmp
iret
dec
adc
xorb
cmp
cmp
not
out
mov
adc
jb
push
mov
mov
mov
out
out
mov
inc
std
inc
pop
xchg
mov
out
and
jbe
mov
iret
pusha
pop
jmp
inc
clc
shl
icebp
mov
pop
loop
inc
adc
sbb
inc
cmp
shr
mov
lret
roll
jno
xor
xor
pop
outsl
add
sub
divl
or
addr16
daa
bound
xor
xchg
adcl
xchg
hlt
jb
mov
fwait
dec
sbb
xor
add
lds
clc
dec
mov
sub
inc
pop
xchg
clc
inc
pop
jl
pop
sbb
fiadds
add
xor
and
mov
xchg
mov
xchg
cmp
inc
dec
sub
popa
dec
xchg
rclb
sbb
mov
insl
sub
lock
and
add
pushf
inc
mov
mov
cmp
xchg
std
xor
sub
lock
xchg
mov
cmp
in
div
sbb
sub
sbb
pop
pop
sbb
mov
stos
sub
cli
scas
hlt
mov
sbb
cmp
ds
pusha
cmp
sbb
jnp
pop
push
mov
pop
fstpl
adc
shlb
cmovb
idivb
addb
or
pop
push
jb
stc
pop
sub
cld
pop
fsub
lods
jb
bound
orb
rcrb
ud2
xchg
fdivs
out
in
sbb
in
mov
mov
xor
inc
cmpsl
js
xor
ja
cmp
mov
cmp
xchg
gs
mov
or
cld
sub
push
sbb
cmp
pop
pop
fwait
sub
sti
pusha
and
xor
xor
inc
jb
sub
stc
fisubrl
ror
jo
insl
aas
xor
cmpsl
enter
out
xor
inc
cs
hlt
int
jecxz
mov
das
lret
loop
and
mov
das
and
mov
pop
or
lahf
daa
es
sub
lcall
xor
xchg
xchg
loopne
mov
or
push
cmp
call
xchg
lods
addl
les
mov
cmp
repz
push
mov
mov
adc
mov
dec
mov
andb
popa
sub
push
dec
jo
pop
cmp
test
jno
ret
leave
in
call
pop
push
or
addr16
and
fistpl
xor
loopne
add
or
pop
ret
mov
icebp
std
adc
xor
and
dec
mov
inc
in
scas
fcmovnbe
mov
fisttpl
and
daa
adcb
insl
bound
mov
sbb
mov
daa
xor
loopne
adcl
test
aas
mov
xor
int
fcompl
mov
inc
or
enter
add
or
mov
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
jmp
dec
popf
shll
pop
das
popf
ffreep
mov
icebp
xchg
sub
dec
test
adc
adc
adc
lret
imul
gs
and
mov
pop
cli
stos
mov
sbb
jp
mov
and
cmpsb
ret
out
clc
and
inc
sub
pop
mov
sbb
cli
leave
adc
dec
dec
test
int3
arpl
xor
adcb
or
lea
push
mov
pop
test
add
push
fcompl
push
jmp
xchg
lret
xor
mov
pop
xchg
aaa
lds
adc
subb
dec
ds
mov
add
pop
jle
mov
shlb
and
dec
sub
mov
push
xor
in
aaa
hlt
xor
sub
cmp
push
pop
xor
repz
call
ja
mov
std
fldenv
and
fsubrs
aad
adc
imul
jae
flds
ret
sbb
clc
push
mov
outsl
fldt
repz
and
in
repnz
arpl
movsb
inc
mov
fcoml
mov
mov
mov
insl
cs
sbb
xchg
inc
shr
push
mov
dec
pop
xchg
or
xchg
push
push
stos
jns
pop
xchg
jns
xor
dec
mov
xor
aaa
popa
mov
and
dec
mov
jge
dec
addb
mov
leave
pop
test
addr16
stos
stos
js
lods
jo
sub
xchg
push
sbb
repnz
push
xor
aas
mov
mov
scas
insl
jne
add
adc
pop
jb
ret
shlb
push
popa
push
xor
cmp
mov
sbb
scas
aas
push
dec
dec
push
sti
pop
add
aaa
pop
pusha
pop
xor
fcmovnu
and
add
xchg
js
jmp
adc
inc
dec
push
in
mov
mov
mov
test
je
cmp
inc
push
lea
xchg
cmpsl
sub
movsl
cld
jae
mov
mov
add
sbb
fisttpl
sbb
mov
aad
cmp
pop
in
ret
or
xchg
dec
pop
rorb
fwait
das
pop
sub
add
insl
sbb
sbb
stos
pop
sbb
outsb
or
xor
dec
inc
ljmp
rcrb
ficompl
inc
push
fisttps
wrmsr
add
add
mov
and
jl
shrl
cmp
xor
adc
dec
xlat
push
push
jne
sahf
sbb
ss
mov
mov
cli
xor
push
sahf
push
xor
inc
cli
rcrl
mov
inc
idivb
mov
add
je
sbb
rorl
or
sarb
pop
xor
ja
sbb
mov
rcrl
pop
out
mov
dec
loope
loop
sbb
notl
sbb
je
popf
shll
aaa
sbb
jp
stc
pcmpeqw
lods
inc
inc
insl
mov
pop
mov
adc
inc
out
jg
mov
aas
iret
test
xchg
push
or
jb
notl
cmp
mov
mov
fsts
push
lret
test
add
cmc
cmp
shll
into
mov
sti
aam
lcall
push
inc
ss
outsl
test
fimuls
xchg
int
dec
mov
cmp
dec
xchg
sub
and
stos
loope
cmp
test
stos
cmpsb
sub
dec
outsl
sub
pusha
jmp
repz
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
imul
imul
push
jge
js
jl
adc
adc
adc
rcr
out
jae
aas
data16
push
inc
or
xor
mov
fidivrl
and
or
inc
pop
cs
lret
sbb
add
inc
mov
out
add
push
push
jo
sbb
mov
xchg
adc
nop
xchg
xlat
pushf
mov
rcr
leave
jecxz
lcall
stos
lret
adc
xorl
mov
or
cmp
adc
jecxz
sub
test
int3
jg
adcb
testb
andl
fxam
insl
shl
mov
sub
cmp
pop
shrl
pop
cwtl
je
add
aad
sti
inc
mov
les
insl
pop
cli
pop
adc
repz
jl
cmp
or
test
std
pop
nop
mov
mov
insb
push
or
sub
xchg
arpl
fs
pop
xor
mov
mov
scas
sub
pop
pop
adc
fistl
dec
sub
adc
jp
xor
scas
clc
pop
mov
mov
sub
into
push
popf
arpl
shlb
insl
add
sub
insb
stos
and
mov
in
ljmp
aas
frstor
pop
add
add
jp
mov
mov
pop
daa
fldl
jne
adc
loope
mov
inc
xchg
or
mov
mov
adc
add
mov
outsb
pop
dec
jge
xchg
or
xchg
jg
jns
cmp
mov
cltd
adcl
lret
add
mov
in
popf
daa
out
dec
cld
dec
xchg
xchg
push
fldt
cmpsb
leave
clc
and
fcmovnb
push
add
cmp
scas
pop
xor
daa
les
out
mov
pop
jne
cmp
sub
loopne
xchg
xchg
jge
int
gs
stos
push
repnz
pop
cmp
jno
jmp
cmp
and
ret
stc
lret
add
xor
push
sbb
adc
mov
xchg
fs
add
lret
shrb
in
fsubrs
inc
mov
clc
mov
pop
pop
outsl
dec
add
xor
clc
sahf
xchg
dec
jl
movsl
mov
call
lds
pop
ret
scas
ficomps
ret
decb
pop
or
mov
mov
scas
mov
add
repz
cmp
fidivrl
sbb
je
and
cmc
pop
inc
mov
iret
subb
aad
push
aas
movsl
cli
sar
cli
and
jne
rcll
cmp
dec
jae
sbb
lods
sub
mov
inc
pop
or
hlt
les
sub
dec
pop
shlb
rcl
test
mov
cli
pop
sub
mov
push
jp
mov
jl
jb
imul
inc
aas
xrelease
push
or
inc
lods
pop
pop
push
cltd
mov
add
push
sbb
cmc
xor
dec
pop
lret
cmpsl
addb
add
lret
adc
test
fwait
bound
and
inc
or
imul
in
hlt
adc
mov
out
cmp
inc
imul
and
rcrl
lret
ror
mov
inc
mov
icebp
ret
inc
mov
xchg
fwait
pusha
adc
jbe
insb
int
jae
popf
mov
add
pusha
xchg
push
push
or
xchg
mov
mov
push
pushl
push
push
call
mov
jmp
xor
sbb
stos
adc
jle
mov
adc
adc
or
das
repnz
mov
pop
push
ja
scas
rclb
xchg
ljmp
cmpsb
adc
jno
sahf
rep
mov
sbb
xor
inc
ss
das
sbb
or
mov
jo
push
push
loope
andl
xor
inc
ret
dec
stc
mov
cmp
pop
and
int
sub
pop
mov
cmp
mov
dec
addr16
cmp
dec
cltd
dec
fwait
int3
imul
movsb
pushf
mov
imul
push
mov
or
jge
mov
stos
ja
and
and
sub
inc
jmp
xchg
sub
jl
mov
in
pop
shlb
xchg
xor
testl
jne
inc
mov
es
jnp
notb
sub
loope
dec
dec
inc
cmpsb
mov
pop
repz
sbb
sub
test
ret
cmp
jg
outsl
push
fldcw
in
jno
cli
mov
inc
aad
repz
xor
xchg
bts
jp
adc
inc
clc
inc
inc
pop
pop
nop
inc
js
pop
mov
lcall
push
fidivrl
test
and
lret
push
jae
xor
add
pushf
pop
and
sarl
fidivrl
pushl
pop
jmp
pop
or
sub
cmp
in
jmp
jnp
inc
pop
insl
add
xor
push
xor
sub
sub
ret
jo
and
ficoml
jns
inc
sbb
mov
dec
jp
lret
addr16
iret
in
mov
dec
fmuls
jo
cwtl
loop
adc
jo
sahf
daa
mov
jle
ljmp
add
xchg
mov
xor
sub
mov
inc
fildl
sub
test
stos
popa
pop
mov
insb
mov
sub
in
lds
adc
dec
data16
popa
rcrl
dec
sbb
and
jg
nop
aas
adc
loope
lock
pop
int
sub
jno
sarb
push
sub
or
sbb
lahf
ja
adc
lcall
pop
pusha
cltd
sub
es
outsb
xchg
std
fyl2xp1
mov
repz
popf
ds
dec
test
test
insb
and
addr16
and
ret
inc
xor
outsl
mov
adc
and
pushf
sbb
insb
pop
inc
mov
popa
inc
sub
jbe
xchg
mov
cmp
jae
mov
pop
push
or
push
rclb
fwait
and
mov
mov
insl
fsubrl
arpl
mov
test
dec
lock
adc
mov
inc
ret
sub
xchg
ret
jge
inc
push
mov
pushf
mov
lods
jge
aam
sahf
mov
xchg
push
jmp
divb
push
jle
mov
mov
mov
mov
repnz
pop
add
mov
and
adc
sbb
insb
xchg
not
insb
push
jo
scas
pushf
scas
or
cmp
fistpll
cli
mov
in
outsb
rcrl
push
adc
cmp
sbb
outsl
mov
andl
shrd
jmp
ja
jle
sub
xchg
mov
stos
enter
jb
adc
adc
adc
xchg
out
mov
iret
xor
jno
xor
cmpsb
in
inc
pop
cltd
in
fs
je
enter
ret
push
add
pop
cli
cltd
test
aaa
cs
or
jnp
out
inc
aas
push
pop
sahf
cli
cwtl
xlat
ja
and
or
mov
adc
push
mov
pop
push
push
test
cmp
out
lds
iret
cmp
mov
jns
push
lret
int3
cmp
pop
negl
clc
push
gs
adc
ss
and
inc
add
xchg
mov
push
dec
les
sbb
and
rcll
and
jmp
or
mov
addb
mov
xor
pop
inc
clc
imul
mov
dec
add
add
outsb
cmp
sarl
push
xchg
dec
jne
mov
pop
xchg
scas
sbb
testl
icebp
cmpsl
cli
movsl
enter
std
nop
lock
mov
scas
insl
mov
dec
cld
loope
shlb
jne
test
jl
dec
popf
mov
or
mov
ss
push
movsb
data16
popf
fsts
push
movsb
ss
sub
xlat
mov
mov
jg
ja
mov
pusha
cmp
xchg
xor
mov
les
in
outsl
imul
mov
adc
adc
adc
xchg
ds
push
ret
imul
out
aas
sbb
bound
mov
aaa
jnp
or
mov
sbb
pop
in
jno
add
xchg
loop
ficompl
mov
arpl
pop
mov
pop
sub
into
out
push
orl
fdiv
out
pop
mov
pop
jl
out
dec
inc
pop
cmp
int3
std
push
nop
or
sub
aas
xor
repnz
jmp
cltd
pop
cmp
xor
or
outsb
push
aas
jg
in
aas
jae
and
sbb
dec
les
inc
cli
shrb
push
pop
movsl
add
adc
push
bound
push
dec
cmp
stos
arpl
and
cmp
adc
scas
mov
out
movsb
add
repz
aas
push
in
push
fdivs
mov
push
fcoms
sbb
push
jnp
jecxz
jecxz
or
movsl
fwait
mov
add
data16
adc
loop
mov
pop
inc
jne
out
aam
mov
out
dec
jecxz
mov
js
push
test
int
ljmp
mov
jne
jno
dec
inc
cmc
sarb
pop
push
pop
dec
jg
movsl
rcrl
pushf
aaa
sbb
jno
lret
ja
xchg
jb
jge
into
in
mov
xchg
fnstcw
pop
aaa
jb
xchg
dec
cld
or
clc
fisttpl
xor
dec
addr16
xchg
or
push
stos
jp
push
or
mov
outsb
and
push
popf
mov
sub
out
cmp
call
mov
enter
mov
or
or
addr16
mov
or
adc
lcall
addr16
pop
xor
ss
jmp
inc
clc
mov
les
fs
pop
add
sbb
imul
sbb
mov
inc
mov
sub
ds
mov
shr
xor
push
xor
mov
mov
mov
push
jmp
bnd
test
xchg
push
inc
stos
and
adc
int
adc
dec
rep
sbb
jecxz
shll
stos
xor
das
adc
aam
jae
lahf
add
xor
pop
popa
jecxz
pop
and
loopne
xor
imulb
fmull
ss
aas
mov
mov
jno
ljmp
out
call
aaa
or
dec
call
xchg
jae
mov
popf
in
pop
sar
pushl
lds
adc
add
clc
pop
xor
adc
xor
inc
mov
mov
inc
dec
loop
mov
test
in
mov
mov
sub
xor
mov
faddp
fsubs
sbb
mov
or
inc
lods
fisttps
lods
jp
push
ljmp
or
int3
dec
mov
mov
iret
jns
cmp
lret
test
xor
push
xchg
mov
mov
push
shrl
push
in
xor
ds
xlat
addb
inc
xchg
jp
movsb
push
shll
push
lock
or
cmpsb
nop
sbb
rcrl
test
pop
mov
sub
in
fadds
push
push
lods
sub
aam
mov
cmp
and
test
jg
popa
add
cltd
aam
mov
xchg
test
in
stc
xor
dec
inc
nop
jmp
xchg
cmp
lret
dec
fldt
xor
aad
add
sub
cmc
xor
sub
int3
push
in
sahf
popa
test
push
es
jg
in
cmc
and
les
out
popf
hlt
inc
repnz
inc
gs
out
mov
inc
jp
bswap
mov
jge
test
jb
repz
pop
sar
inc
add
inc
test
and
std
insl
and
int3
cmp
fucom
cmp
das
mov
xchg
ret
pop
loope
sti
xchg
lahf
clc
test
in
cli
mov
ror
mov
ret
dec
jle
xchg
es
mov
dec
ret
mov
rcll
test
aaa
jb
lock
cld
mov
fcomps
test
push
xor
xor
mov
or
pusha
mov
pop
push
xor
xor
mov
and
push
test
jl
cli
bound
into
xor
daa
cmp
out
data16
mov
push
dec
cmc
cmp
loop
jno
lods
mov
pop
fldenv
xchg
fcoms
sub
out
in
push
aaa
mov
jmp
test
jle
mov
scas
call
push
ror
cmpb
addr16
mov
or
jle
jbe
cmp
xor
in
shll
aas
xchg
sbb
dec
cmpl
test
pop
pop
jne
mov
dec
xchg
sub
pop
rcrb
test
jg
fsubs
es
dec
stos
dec
in
adc
mov
mov
push
adc
xchg
push
jbe
jne
data16
add
mov
aad
popf
cs
mov
mov
sbb
and
push
cmp
outsb
aaa
lock
ss
jno
into
hlt
mov
mov
jg
out
sbb
and
pop
hlt
inc
push
lcall
mov
sahf
push
dec
inc
mov
outsb
fnstcw
push
cltd
fwait
cmp
cmc
mov
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
sbbl
jmp
test
sub
sub
mov
loop
fisubs
adc
adc
jb
in
sub
aaa
pop
rolb
push
popf
nop
and
ficoms
mul
daa
push
aad
lret
lock
lcall
mov
dec
mov
pushl
xor
jae
pop
sub
and
jmp
add
shrb
or
mov
pop
xor
xor
xorb
sbb
pop
stos
fimull
jbe
fdivl
shrb
in
jno
shr
fidivl
and
popf
inc
cld
dec
and
lret
pop
lods
xchg
arpl
sarb
add
cmp
es
pop
add
add
cmp
das
jecxz
popa
add
mov
pop
mov
xor
mov
sub
sbb
scas
push
cmp
dec
and
or
xor
outsb
add
jno
lahf
rorb
jmp
mov
cmpsb
and
ret
add
ss
test
xor
subl
jl
cmc
xchg
xor
pop
mov
xchg
jmp
sub
test
sti
xchg
jo
hlt
pop
aam
nop
arpl
push
je
mov
clc
inc
aad
mov
sbb
xchg
je
push
outsl
xor
scas
xor
jl
stos
pushf
or
xor
nop
leave
packuswb
scas
dec
lcall
lret
adc
xor
mov
scas
push
sbb
aas
xchg
mov
in
xchg
push
mov
enter
xor
shrb
popw
sti
and
out
cmp
cmp
jle
sbb
cmp
xchg
pop
repz
inc
cs
or
out
mov
pop
xchg
and
test
or
mov
fstl
idivb
ret
jns
push
mov
ljmp
sub
add
sub
add
lcall
xchg
fildl
popa
out
std
pop
sarl
pushf
daa
and
in
adc
inc
mov
out
mov
fs
insb
aam
js
mov
xchg
and
jecxz
mov
add
lret
dec
shr
inc
fdivrp
sbb
sbb
in
outsb
test
jp
fnstsw
out
xchg
dec
jmp
clc
test
mov
mov
es
fcmovu
xchg
popf
sbb
sbb
and
jp
lcall
pop
inc
pop
sti
inc
or
mov
lds
or
out
in
not
and
jge
aam
test
aad
fmull
sbb
stos
into
xchg
push
xchg
mov
int
fiadds
lods
dec
xor
das
adc
mov
out
mov
adc
sbb
add
not
mov
divl
cmp
xor
in
mov
add
inc
cmc
call
mov
cwtl
gs
test
jge
xchg
jae
mov
sti
cmovp
imul
fdivrp
lods
fnstsw
push
and
lret
js
jnp
int3
fcoml
call
xor
xchg
ret
add
sbb
aad
pop
data16
shll
icebp
sbb
push
jnp
test
mov
in
cmc
outsl
outsb
xor
xchg
cs
jnp
inc
mov
mov
orb
rcl
xor
icebp
xor
xchg
sbb
lock
and
push
mov
sbb
cs
leave
bound
pop
repnz
or
dec
mov
scas
test
rclb
stos
out
lods
jo
jae
gs
icebp
fisubl
adc
scas
dec
pop
mov
mov
arpl
in
add
repnz
rol
add
int
add
shr
ret
movzwl
sub
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
add
movl
or
mov
mov
cmpl
mov
mov
mov
movl
jmp
movl
movl
ja
pushl
push
push
pushl
push
pushl
pushl
call
xor
adc
andl
adc
sub
add
addl
movl
cmpl
mov
mov
movl
jmp
movl
mov
jne
call
or
movzbl
sub
mov
and
or
mov
or
xor
mov
or
movl
adc
movl
sub
movl
push
movl
xorl
movl
and
push
sub
movl
sbb
mov
andl
mov
push
push
addl
push
call
xor
mov
mov
movl
push
movl
or
adcl
push
or
xor
xor
push
andl
push
call
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
not
je
push
pushl
push
pushl
push
pushl
pushl
pushl
push
pushl
push
push
pushl
call
orl
notl
adc
mov
sbb
add
and
inc
mov
addl
push
orl
push
addl
push
push
decl
call
cmpl
movl
mov
mov
jmp
movl
jne
pushl
push
call
add
add
adc
mov
xor
add
sub
or
mov
and
mov
mov
or
cmpl
movzwl
movl
movl
jmp
movl
movl
jae
pushl
call
adc
xor
xor
adc
orl
add
mov
add
mov
subl
movl
mov
xor
movl
mov
xor
add
sub
and
movl
adcl
movl
jmp
fcmovne
mov
test
mov
lret
pop
adc
xor
adc
jo
inc
xor
in
mov
daa
inc
xchg
cmp
pop
loop
add
stos
imul
dec
or
aad
movsb
xlat
lret
inc
jb
mull
jecxz
mov
dec
sub
push
xor
insb
leave
cli
sbb
sarl
add
lock
data16
and
out
in
ror
jo
shrl
stc
mov
cmp
fdivr
lock
lea
inc
sarl
xchg
fcomps
iret
inc
push
jno
mov
and
in
sub
pop
lahf
inc
test
ret
xchg
je
push
xchg
push
test
push
fs
sbb
cltd
in
arpl
adc
outsl
aas
jb
mov
jo
jl
in
inc
pop
aaa
icebp
clc
cmp
and
jecxz
ret
fwait
lds
sbb
filds
jns
es
xlat
int3
mov
xchg
lcall
outsb
ja
aad
idivb
push
xchg
lret
add
xor
or
pop
ret
push
sbb
mov
cmpb
fldenv
decl
sub
inc
jl
les
leave
push
loopne
mov
lods
xchg
push
pop
sbb
and
pop
xchg
mov
rorl
xor
jp
addl
test
pop
repz
mov
scas
adc
sar
cmp
testb
test
dec
xchg
stc
cwtl
leave
inc
in
jne
xchg
mov
jb
push
mov
in
add
ret
fdivrp
or
cmpsl
pop
jl
mov
jae
rolb
mov
lds
push
cld
sarl
popa
push
sub
test
movsb
dec
jl
jp
dec
inc
ljmp
push
sub
insl
fistpl
ja
or
fnsave
rclb
rcr
pop
lods
dec
pushf
int
mov
dec
pop
sbb
cs
inc
out
push
cwtl
push
add
and
js
adc
push
xchg
sbb
mov
adc
inc
sub
add
cli
adc
jmp
add
cmp
fnstenv
aas
ja
arpl
insb
mov
pop
xor
jp
pop
push
addb
outsl
out
rcrb
xchg
mov
aad
ret
add
data16
sbb
mov
ret
mov
and
jg
dec
das
addr16
jb
out
adc
stos
pop
mov
sub
repz
addr16
jmp
aam
fistps
adc
jle
pop
xor
cmpsb
aas
loopne
dec
cmp
add
mov
lahf
adc
jmp
in
add
fwait
sub
jno
cmp
xchg
jecxz
outsl
pop
mov
rolb
mov
ljmp
cmp
inc
icebp
sub
mov
ret
mov
sub
ss
sarb
sub
push
mov
sti
cltd
dec
repz
into
ror
ss
push
das
and
add
adc
mov
loope
test
in
and
mov
pop
push
std
inc
sbb
mov
mov
js
dec
mov
arpl
pusha
push
test
adc
js
aad
int
dec
subl
cltd
mov
mov
inc
jle
fdivrl
jmp
test
push
xchg
add
imul
push
stos
ret
mov
adc
ret
lret
stos
test
mov
mov
or
mov
das
jl
mov
aam
int
test
fsubs
mov
sarb
test
sub
pop
test
adc
lock
adc
daa
jge
movl
cmpl
not
mov
mov
movl
jmp
movl
mov
jg
pushl
pushl
call
add
orl
sub
adc
movzwl
add
mov
mov
sbb
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
jmp
in
mov
sbb
sub
jle
ret
xor
adc
adc
adc
mov
jmp
mov
loop
leave
sub
insl
push
bound
lods
jns
xlat
cwtl
jbe
xor
shl
in
ret
pop
pop
icebp
jo
push
sbb
cmp
and
and
push
and
fsubrs
addl
cmp
sti
sahf
xchg
dec
negb
add
dec
add
push
addl
push
cmp
mov
hlt
jmp
ret
pushf
loop
xchg
pop
push
daa
jo
fsubrl
mov
cmp
gs
fstpt
out
addr16
xchg
xor
inc
addb
and
pop
mov
lret
aaa
in
mov
jno
mov
fisttpl
lcall
sub
pop
xchg
stc
push
sub
dec
cmp
sbb
pop
lcall
ss
lret
loop
adc
popa
pop
ja
cmpsl
call
int
daa
fwait
xor
ljmp
scas
mov
arpl
xchg
cmpsb
jbe
jge
xchg
lret
cltd
aad
xor
pop
sbb
bound
mov
repnz
cmc
and
movsb
test
out
jle
out
jmp
loopne
cs
dec
adc
mov
ss
adcb
and
lds
popa
sahf
dec
stos
xchg
lds
sbb
dec
imul
fadd
mov
jo
in
mov
int
xor
outsb
push
xchg
jo
test
rolb
push
out
popf
push
cmp
xchg
lahf
xchg
add
jge
push
pop
push
jae
cmp
or
mov
popa
inc
xchg
cld
xor
scas
pop
mov
rcll
mov
test
jge
out
cmp
push
adc
xchg
ds
pop
push
sub
or
mov
mov
and
mov
xor
jno
push
jbe
es
pand
mov
outsl
imul
sbb
push
loope
jae
dec
int3
imul
mov
mov
fs
cmp
jnp
jbe
in
lods
hlt
dec
sarb
out
call
daa
iret
pop
nop
inc
xchg
inc
or
ljmp
pop
pop
loopne
roll
push
jmp
std
sub
cmp
cmp
in
fwait
pop
lcall
push
sub
xor
cmp
mov
ja
inc
out
hlt
inc
dec
test
adc
mov
inc
xchg
or
movsl
iret
sbb
out
xor
sti
test
xchg
push
jg
pop
int3
inc
and
dec
push
clc
mov
jmp
pop
mov
dec
icebp
int3
outsb
push
add
lods
push
push
repz
mov
pusha
mov
pop
clc
es
dec
mov
inc
sarl
repz
test
sahf
sub
outsl
ja
ja
icebp
or
pusha
repz
cmpsl
cltd
push
pop
stos
sbb
pusha
mov
arpl
imul
sub
mov
test
mov
cmpsb
jne
cli
add
lcall
jl
jbe
gs
in
pop
xchg
mov
stc
repz
push
mov
sbb
pop
mov
roll
fs
bound
addl
lret
es
sub
inc
or
shrb
imul
scas
add
gs
xchg
mov
xchg
jl
cs
push
xchg
sub
cmpsl
cmpsl
lret
loope
cmpsl
addl
jns
iret
sbb
ss
lock
cmp
pop
sti
push
test
pusha
xor
adc
popa
pop
jmp
xchg
adc
jecxz
in
test
sbb
pop
mov
imul
xor
int3
int
add
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
jmp
enter
pop
xor
push
push
sti
jb
inc
dec
adc
xor
adc
out
lahf
loopne
aad
out
inc
pop
js
and
xchg
loope
ret
xchg
push
fisubrl
imul
mov
fdivrs
cmp
sbb
fdiv
in
cmp
mov
jo
or
mov
xor
aam
sbb
daa
icebp
cwtl
rol
jecxz
sar
jbe
rorb
fcomip
shlb
add
pop
jns
pop
xchg
repnz
jg
loop
stos
pusha
aaa
xchg
bound
jo
je
arpl
sub
mov
jno
lcall
cmp
or
and
cmp
in
fildl
cli
and
mov
add
in
outsb
test
sub
pop
std
jmp
or
int
dec
in
jb
inc
pusha
jp
inc
jo
mov
mov
mov
xchg
ljmp
filds
inc
xor
jno
cmp
mov
js
insb
jmp
cltd
scas
xchg
scas
sti
aam
inc
inc
hlt
pop
std
and
fdivp
test
rcll
xchg
andl
sbb
or
test
adc
daa
or
cli
std
adc
ret
xchg
mov
scas
xor
out
in
pop
inc
jb
push
pop
ficomps
jl
pop
popa
mov
outsl
xchg
stos
enter
dec
test
sbb
xlat
sbb
cmpsb
jno
stos
pop
cltd
inc
pusha
aam
iret
jle
cmp
push
cmpsb
jb
aam
dec
bound
mov
mov
pop
js
pop
add
fwait
jae
xchg
mov
imul
int3
xor
mov
xchg
mov
popf
or
movsl
js
xor
loope
cmp
pop
gs
test
jns
fdiv
stc
xchg
stos
cwtl
fdiv
fs
loop
repz
mov
push
rep
loope
xor
jno
lds
jbe
cmp
push
push
repnz
mov
xor
mov
shlb
outsb
cmp
stc
rorb
icebp
cmpsl
addl
aam
inc
out
shll
icebp
mov
das
pop
daa
add
mov
pop
sub
mov
mov
out
andl
pop
jge
sar
sarb
jmp
inc
mov
xchg
push
mov
push
outsb
jno
pop
push
push
addr16
fwait
or
push
mov
pushf
inc
and
xchg
mov
inc
sbb
stc
push
lret
mov
dec
mov
inc
mov
repz
adc
xchg
int
pop
cmp
in
mov
sar
lret
iret
cld
and
adc
clc
outsl
add
jo
or
cmp
and
mov
pop
jecxz
loopne
nop
gs
xchg
pusha
repnz
daa
je
and
push
shrl
nop
adc
into
fisttps
stos
adc
dec
out
add
arpl
xchg
lds
jne
lock
xor
shlb
pop
ljmp
dec
mov
mov
add
pop
mov
stc
mov
test
lret
gs
push
mov
sti
iret
test
int
pushf
enter
daa
sbb
xchg
pop
iret
and
stc
je
cmp
icebp
or
test
out
cmpsb
fnsave
inc
add
in
scas
mov
cmpsb
iret
pop
andl
lret
mov
mov
jge
mov
jo
lock
scas
and
or
xchg
cld
out
cmp
sbb
inc
adc
pop
dec
push
inc
and
fs
pop
mov
pop
cmpsl
outsl
sub
idivb
lods
out
pop
push
out
in
out
jp
cmp
sbb
jo
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
jmp
pushl
and
push
mov
gs
adc
xor
adc
and
xor
dec
push
sbb
aam
and
push
cltd
outsb
adc
or
cmp
jo,pt
mov
mov
mov
xlat
sbb
loope
bound
mov
push
rclb
arpl
loope
pop
jge
in
inc
dec
adc
or
jl
sbb
out
loopne
sub
in
test
popf
dec
js
dec
jne
push
sub
and
les
dec
cwtl
in
stc
icebp
sbb
jo
push
and
scas
movsl
inc
cmp
push
xchg
inc
cmp
outsl
sbbl
inc
repnz
das
mov
es
mov
sbbb
cmpsl
scas
mov
gs
cmp
push
push
push
inc
sarb
jb
sbb
dec
std
mov
pop
into
mov
pop
adc
loope
push
dec
inc
cltd
fstpl
add
das
in
lock
add
hlt
data16
add
bound
and
or
jnp
imul
neg
es
leave
mov
mov
clc
into
push
incb
lods
cmp
push
dec
inc
xor
push
pop
dec
cmpsl
or
push
js
cmp
test
bound
pop
push
int
inc
incb
push
pop
js
dec
lds
fimuls
icebp
inc
fsqrt
cmpsl
test
and
out
push
iret
and
decb
xchg
cmp
aam
add
aad
mov
xor
sub
adc
mov
test
sbb
int
and
adc
xchg
inc
pop
pop
jl
leave
in
inc
mov
jnp
outsl
fmul
lods
dec
outsb
inc
or
cli
in
out
and
xchg
xchg
mov
lret
repnz
jp
and
in
xor
js
movsb
outsb
adc
inc
pushf
mov
inc
xchg
inc
stos
cmpl
loope
cmpsl
push
je
jno
rorl
push
or
mov
scas
mov
sbb
mov
out
flds
nop
push
mov
test
mov
imul
cmp
bound
arpl
inc
in
add
mov
aam
xor
mov
repz
jmp
sub
call
out
shll
stos
jnp
push
mov
sub
cmp
sub
push
scas
pop
push
loopne
xlat
mov
mov
dec
push
inc
xor
dec
ljmp
or
inc
push
sbb
push
sarl
add
aas
imul
mov
inc
lods
jmp
sbb
pop
push
cmpsb
call
mov
hlt
xchg
push
push
mov
sbb
adc
fildll
pop
mov
mov
pop
inc
in
adc
push
repnz
and
jnp
sti
jae
mov
daa
mov
mov
ds
das
fmul
inc
add
mov
lcall
movb
dec
xchg
inc
mov
xor
mov
mov
das
imul
adc
insb
lahf
ja
sbbl
ficoml
dec
outsb
cmc
movsl
popa
cmpsl
sub
out
and
dec
pop
bound
notb
inc
sbb
xchg
adc
lret
jb
jmp
fstpt
sub
ds
cmp
adc
test
std
cmp
lods
je
xor
add
divb
cmp
pop
sbb
icebp
lds
adc
xlat
jle
outsl
test
in
and
enter
imul
mov
pop
or
repz
jge,pt
xor
rolb
inc
jns
out
sbb
icebp
insb
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
jmp
adcl
dec
in
enter
pop
lods
jnp
adc
xor
adc
das
enter
push
call
or
test
xor
test
in
xchg
push
push
repnz
psubb
enter
out
sti
lret
arpl
push
shll
cld
sahf
es
xchg
jp
mov
lcall
mov
rcrl
fimull
sub
pushf
jecxz
mov
cmpsb
pusha
mov
mov
mov
mov
imul
out
xor
xchg
lods
test
inc
sahf
cmpsl
jnp
xchg
js
fstpl
nop
mov
or
mov
loopne
add
lea
push
out
mov
push
pop
inc
dec
add
popf
fnstcw
jg
mov
lcall
dec
sub
aam
cmp
cmp
xchg
jle
inc
bound
repnz
dec
pushf
jge
add
rol
pop
push
in
movsl
jg
mov
jae
nopl
sarl
imul
leave
jns
jecxz
and
shrl
push
cltd
es
in
fwait
sbb
scas
loopne
pop
test
fwait
movsb
ret
inc
cld
outsb
out
dec
sbb
adc
ss
subl
je
cmp
adc
inc
pop
rcl
mov
aas
mov
jnp
dec
ja
fsubl
in
mov
gs
pavgb
sbb
inc
test
push
push
mov
jnp
mov
icebp
sbb
leave
enter
pop
mov
out
sbb
inc
adc
fucomip
sbb
sub
out
es
dec
in
addr16
cli
sti
or
popf
jle
cmpsl
add
movsl
jle
dec
insb
push
pop
inc
idivb
add
add
icebp
arpl
mov
cmp
daa
add
mov
sub
mov
stos
mov
push
lahf
jecxz
cmp
fucomp
jbe
push
dec
dec
js
daa
testl
es
cmp
push
ja
or
in
icebp
outsb
cmp
clc
push
loop
sbb
outsl
jg
cs
jecxz
scas
in
or
inc
cmp
or
jp
push
sbb
mov
inc
jo
pop
push
xchg
push
fs
clc
repnz
mov
cmc
or
stos
adc
scas
dec
adc
orl
xchg
xor
mov
push
adc
fmull
xchg
mov
fisubrl
ss
jl
sbb
jae
or
push
sti
jle
cmp
bound
inc
jns
je
push
pop
push
mov
aaa
jnp
cmpsb
mov
xchg
xchg
cmp
les
and
adcb
pop
cmpsl
ret
xor
cmp
sub
ret
xlat
dec
pusha
pop
jp
sub
xor
fsubrp
sub
in
shlb
mov
pop
cmp
jnp
daa
xor
mov
nop
andb
jns
xchg
mov
jmp
cs
lcall
or
jg
iret
sub
leave
sbb
stos
cmpsl
loopne
push
es
enter
jecxz
lret
or
push
cmpsl
ret
mov
inc
sbb
mov
aaa
inc
les
adc
inc
jb
cmpl
mov
clc
and
and
popa
push
outsl
jns
and
cltd
cltd
or
or
jno
into
outsb
addl
mov
jecxz
push
je
inc
mov
xor
adc
imul
mov
in
push
js
mov
loope
jne
inc
in
push
out
mov
cli
add
es
fimuls
push
popf
jge
lahf
das
orb
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
jmp
js
jb
sub
cmp
mov
mov
xor
adc
adc
adc
outsl
xor
lret
stos
mov
mov
inc
aad
cs
test
add
dec
clc
aas
aaa
ds
sbb
xchg
dec
out
sub
cmp
subb
dec
arpl
int
leave
ds
jl
mov
or
cltd
mov
pushf
aas
popa
mov
mov
test
nop
sti
stc
aam
pop
je
cmpsb
es
test
jmp
push
inc
scas
arpl
sarb
mov
dec
enter
dec
mov
sahf
fidivs
es
movsl
jmp
je
movsb
mov
pusha
test
mov
clc
jns
and
popa
pushl
sub
lahf
ret
xchg
xchg
and
inc
pop
les
push
mov
mov
push
jb
popf
test
pusha
or
xor
jg
xchg
mov
inc
sbb
jmp
inc
push
aam
pushf
sbb
fwait
pop
movsb
cmp
rcll
arpl
inc
jp
adcb
mov
insl
xchg
movsb
roll
fsubs
icebp
sub
dec
shrl
iret
out
stos
std
and
fwait
sub
cmp
and
mov
pop
or
fdivr
mov
mov
push
out
or
xchg
mov
add
or
pusha
pop
mov
sub
push
test
lahf
lret
inc
inc
into
adc
daa
cmp
gs
test
es
ret
mov
ds
jne
push
int3
or
xchg
cmp
cwtl
jle
lds
lret
mov
loope
adc
inc
xchg
repnz
and
sbb
and
sbb
sub
pop
popa
fwait
mov
shl
xor
insl
je
dec
xor
out
dec
cwtl
or
mov
aam
leave
ja
xchg
out
dec
aas
out
aad
cld
mov
cmpsl
adc
cmp
jl
adc
loope
dec
or
fwait
push
cwtl
jno
inc
mov
pop
testb
popf
xor
arpl
ret
fisubrl
dec
out
jmp
pop
ljmp
pop
sbb
fstpt
add
or
add
sbb
xorl
push
mov
lock
out
and
leave
out
cmc
ja
xchg
roll
or
out
mov
mov
movsl
or
aam
fwait
movsb
in
add
mov
adc
loopne
clc
jbe
mov
mov
call
leave
xor
das
add
outsl
fldcw
lds
mov
clc
adc
popa
daa
mov
ret
mov
loope
int
inc
rolb
mov
mov
add
jmp
cmp
js
mov
push
in
loop
nop
hlt
dec
into
scas
and
dec
mov
mov
lock
cmp
andb
sub
dec
aam
les
testb
xchg
scas
mov
inc
jb
test
ja
xlat
push
jnp
and
push
gs
gs
mov
das
sbb
and
fstpl
push
jb
clc
adc
dec
call
sub
stos
add
ds
lock
mov
sub
inc
ret
loope
in
shll
sahf
test
movsb
and
add
in
dec
mov
lahf
cmp
leave
fsubrp
jo
inc
dec
sub
dec
dec
mov
arpl
sbb
stc
sahf
xor
jecxz
test
lret
jns
dec
dec
inc
jl
dec
inc
das
dec
mov
inc
pop
fisubrl
push
repz
cmpsl
sbb
call
pop
push
cmp
pushf
push
pop
shll
xchg
aas
fdivrs
shrd
xor
jmp
mov
popa
lcall
mov
js
sub
adc
adc
adc
sub
or
das
dec
lds
cmc
lret
push
test
cmc
push
pop
divl
scas
mov
shrl
inc
jne
or
mov
insb
pop
shrb
bound
aam
arpl
pop
icebp
shrb
rcll
inc
ror
repz
pop
std
lret
mov
ret
cmpsl
shlb
jns
add
or
iret
jmp
sbb
and
jb
sub
jnp
pop
cmp
push
test
repnz
dec
aaa
sub
jnp
dec
xor
or
imul
mov
sbb
adc
push
nop
fs
pop
imul
push
ja
inc
xchg
in
test
pop
les
cli
adc
in
out
in
or
dec
mov
sub
lds
cmpsb
fimull
xlat
addl
sub
fs
ja
jp
fnsave
or
push
or
outsb
push
pop
xor
cmp
cmp
sub
mov
in
aas
cmp
insl
xchg
in
jb
ja
cli
fldt
add
inc
push
aas
dec
cli
jae
pop
add
push
in
mov
ret
cmc
jmp
popf
jg
dec
push
mov
stc
mov
aad
adc
xchg
ficoms
inc
mov
pop
mov
popf
cwtl
xchg
int
or
lock
mov
cmp
pusha
pop
loopne
mov
mov
adc
inc
pop
scas
arpl
and
enter
in
aam
ss
iret
push
call
pop
jge
pop
pop
icebp
orl
cli
cmp
mov
incb
stos
add
mov
stos
sar
dec
dec
dec
cmp
push
out
scas
hlt
push
push
xchg
cs
rclb
or
stos
fstpt
movsl
bound
push
insl
xchg
in
jbe
mov
push
test
xor
clc
inc
pop
mov
sbb
pop
jno
push
sbb
dec
je
mov
adcb
push
jo
inc
xlat
iret
jne
push
xchg
addr16
aaa
mov
aaa
adc
js
jns
addl
movsl
cli
lods
outsl
sbb
in
clc
fsubs
jno
inc
xor
loop
out
push
pop
scas
mov
popf
out
mov
loop
lods
adc
push
inc
je
scas
sbb
push
lahf
xchg
aaa
lods
std
jp
setbe
xlat
mov
inc
push
repnz
dec
adc
cmp
jl
idivb
adc
shll
lret
cs
xchg
insl
jge
mov
cmpsl
fcmove
mov
mov
andl
lea
rcrb
insb
jae
xchg
hlt
mov
mov
mov
sub
sub
mov
je
inc
sahf
mov
fstpl
push
lock
pop
xchg
mov
add
enter
imulb
and
jno
jg
push
repnz
push
ficoml
daa
push
mov
jg,pn
sbb
out
cmpsl
mov
sub
xchg
mov
jle
aaa
pop
jle
push
jecxz
dec
push
xor
sarb
test
dec
cltd
cmp
sbb
jecxz
arpl
scas
jg
hlt
mov
push
icebp
or
mov
push
fcompl
inc
cmp
mov
cmp
add
cmp
push
push
mov
lret
cld
lret
clc
scas
leave
loope
loope
add
not
addr16
sahf
fwait
pop
push
mov
test
add
jl
pop
mov
andb
mov
or
test
jmp
xchg
test
lcall
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
test
sbbl
pop
sbb
jle
and
push
and
adc
movlps
mov
jge
mov
call
dec
mov
fstl
lcall
add
pop
push
setge
and
push
push
mov
sbb
bound
sub
xor
jg
xor
stc
jnp
pop
push
fs
dec
jno
jnp
mov
test
xlat
jne
inc
mov
jmp
add
xchg
clc
pop
cmp
pop
pop
xchg
cmpsl
arpl
xchg
pop
xor
shlb
out
js
add
sub
adc
cltd
push
jno
push
sub
outsb
je
xchg
movl
sbb
and
stos
xchg
or
lds
push
jg
sar
pusha
ret
lds
out
out
xlat
mov
mov
adc
sub
jae
repz
inc
pop
fcoms
push
mov
push
mov
jo
push
nop
mov
in
dec
dec
push
cwtl
icebp
mov
fucomi
stc
mov
nop
iret
aad
and
jnp
int3
scas
lods
jnp
cmp
mov
xor
stc
dec
jp
cli
lods
test
cmpxchg8b
cli
hlt
data16
in
outsl
xor
adc
mov
sub
test
mov
mov
and
or
fs
push
fstpt
inc
push
adc
and
outsl
dec
or
outsl
mov
jecxz
xchg
and
mov
scas
push
mov
scas
rcll
lret
cmp
push
clc
push
xchg
dec
in
in
iret
mov
shr
pop
fs
es
sub
xorl
dec
shl
rol
cmpsl
sub
mov
mov
jo
addr16
fisubrl
ret
or
shlb
repz
push
sub
and
fwait
push
aaa
repz
pop
es
imulb
sti
push
scas
push
push
fsubl
mov
inc
sbb
mov
lds
out
rcrb
ja
cld
lods
cld
std
lret
jmp
and
test
cld
es
add
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
jmp
xchg
add
cmp
scas
insb
fsubrs
stos
xchg
sbb
adc
movlps
inc
lcall
sub
mov
inc
shlb
push
mov
lret
or
and
out
fcoml
aad
cmp
pop
out
sbb
dec
mov
fimull
xlat
out
xor
lahf
flds
mov
je
fidivs
add
xor
jg
mov
enter
jmp
xsaves
sbb
mov
dec
cmp
xorl
les
dec
cli
sub
mov
push
inc
iret
sub
addr16
les
stos
lods
enter
mov
cmp
outsb
adc
sarb
jbe
test
das
in
inc
test
mov
xchg
jo
sub
cmp
xchg
dec
mov
push
mov
out
jnp
mov
dec
popf
jb
dec
popf
xlat
xchg
push
push
int3
scas
adc
clc
aam
mov
pushf
or
in
js
aas
cli
xchg
shll
dec
mov
and
mov
movl
xor
and
sbb
addr16
test
jecxz
push
cwtl
inc
or
mov
sti
xchg
add
xchg
mov
stos
jne
fsubs
pop
lcall
jg
out
cmp
or
add
test
push
or
leave
xchg
arpl
cli
mov
leave
push
aad
test
inc
xor
or
loopne
dec
mov
add
popa
mov
repnz
sub
sbb
push
mov
sti
sub
insl
lds
and
mov
jge
push
push
notl
fisttpll
cmc
insl
andb
enter
shll
push
fsts
pop
push
sbbl
and
pop
mov
filds
fisubrl
test
ljmp
jnp
and
mov
and
inc
or
repz
pop
add
mov
cs
pop
mov
pop
rorl
pop
add
clc
cmp
add
movl
movl
movl
mov
jmp
outsl
or
or
popa
imul
nop
js
dec
jle,pn
sbb
adc
movlps
stc
or
lods
jne
dec
loope
pop
jle,pn
pop
aad
icebp
bound
lods
jbe
sarb
sbb
mov
cmpps
xchg
lock
and
push
sahf
mov
aaa
mov
test
arpl
aas
mov
adc
jnp
adc
fsubrl
ret
xor
test
inc
dec
outsl
xchg
inc
sub
jno
sub
pop
push
sub
das
xor
divl
es
add
mov
pop
dec
adc
ds
add
adc
jae
ds
ja
iret
int
scas
sar
inc
das
pop
add
inc
ficomps
sahf
add
pop
pop
lret
xchg
pop
mov
xorb
cld
lds
jbe
pop
inc
and
divb
push
int3
cmp
adcl
sbb
data16
lcall
push
pop
decb
lret
mov
sub
adc
fidivrl
test
ficoml
pop
mov
out
gs
or
fisubl
jnp
or
sub
movsl
mov
ljmp
sub
cwtl
imul
pop
fsubr
test
fsubr
pop
dec
and
test
pushf
mov
or
aaa
sub
neg
push
push
xchg
bound
orb
xchg
xchg
sbb
in
jno
pop
dec
inc
ds
jnp
add
test
idiv
mov
sbb
mov
in
ss
lods
pop
jmp
or
xor
lret
ret
or
movsb
loop
mov
mov
icebp
in
adc
jno
lret
pop
sbb
aaa
movsb
je
jns
sub
add
int
mov
cmc
movsl
jae
sbb
pushf
cld
sub
or
es
dec
leave
dec
dec
fdivp
mov
jae
mov
hlt
xchg
xchg
xor
jne
pop
and
xor
pop
cli
out
repnz
xchg
dec
push
mov
push
push
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
jmp
and
cmp
aaa
sbb
bound
sarb
lret
and
movlps
xchg
adc
out
cs
add
dec
fsubs
mov
mov
notb
stos
sbb
js
adc
arpl
cltd
mov
push
lock
push
dec
pop
mov
or
dec
fnstcw
nop
scas
aad
test
lea
fldenv
push
dec
mov
fists
mov
add
aas
xchg
xchg
dec
cmp
test
clc
push
rclb
addr16
rcll
cltd
std
xor
in
inc
inc
add
ljmp
int3
pop
popa
add
adc
inc
push
adc
imul
adc
aaa
sbb
adc
test
popf
adcb
push
jle
xchg
jns
aas
and
loopne
in
jmp
aam
add
jbe
mov
loope
movsl
mov
and
orl
cld
adc
aad
jns
cmp
sbb
push
outsb
sub
in
loopne
stos
les
xor
mov
dec
and
dec
out
bt
bound
xchg
fwait
adc
push
mov
outsb
arpl
aaa
in
mov
mov
dec
cmp
or
or
adc
dec
outsb
jb
jns
leave
cmp
adcb
push
or
xor
rorb
cli
xor
jecxz
jp
loopne,pt
inc
sub
add
pop
sarb
lahf
cmp
mov
jo
hlt
mov
lods
mov
or
mov
push
in
sbb
int
cmc
jp
or
pop
fs
mov
aaa
lret
popa
inc
nop
sbb
adc
mov
movsb
xchg
mov
cmp
cmpsb
mov
push
jae
xor
jl
jle
aaa
cmp
sub
ljmp
mov
popa
in
popa
jne
adc
les
inc
inc
mov
push
ja
call
jno
adc
add
add
enter
pop
mov
loopne
lcall
ss
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
jmp
mov
xor
jns
fldln2
jle
cmc
stos
insb
in
adc
adc
movlps
cmp
xor
mov
fmul
pop
add
in
outsl
push
ret
nop
loop
mov
jecxz
gs
sti
inc
cmp
xchg
xchg
imul
mov
addr16
imul
inc
or
push
push
daa
mov
cmp
loopne
adc
or
xor
int3
dec
mov
dec
rcll
inc
movsb
loopne
xchg
enter
es
sbb
adc
inc
leave
cmp
movsl
push
add
and
fstpt
pop
nop
test
repnz
add
sbb
push
popa
xchg
xchg
leave
mov
dec
lea
push
sub
cmp
inc
push
fisubrs
xor
adc
xchg
fsts
sbb
adc
idivl
lcall
adc
or
nop
cmp
sbb
adc
inc
inc
into
fiaddl
test
add
movsl
cld
fs
sub
add
ljmp
adc
sub
xor
test
mov
mov
push
push
xor
cli
sbbb
pop
cmp
ja
out
push
add
dec
ficomps
xchg
jmp
jae
aam
sbb
pusha
rcrb
lods
cmp
xchg
roll
push
xor
outsb
insl
mov
mov
inc
cwtl
testl
aam
je
mov
icebp
gs
inc
xor
sti
aad
setge
jg
mov
rorl
push
imul
int3
pop
push
imul
xorb
jo
leave
pop
push
das
icebp
loop
loopne
insb
sbb
add
call
lea
leave
pop
inc
jbe
aas
pop
jp
jmp
add
fistl
mov
xchg
inc
jp
add
imull
jbe
or
fsubrl
je
mov
add
roll
int3
jbe
push
lcall
xlat
sbb
inc
es
mov
sbb
jmp
roll
mov
cs
dec
jae
mov
mov
adc
fmull
adc
xchg
test
test
xor
add
xchg
jecxz
test
lahf
loopne
shrb
cmc
xchg
cld
movsb
in
jp
mov
imulb
adc
and
push
pop
in
inc
pop
pop
adc
popf
inc
clc
pop
jg
mov
inc
or
xor
xor
push
call
cmp
mov
add
xchg
pushf
popf
shr
cmp
cmp
dec
xchg
ret
in
cmp
cmc
ds
lcall
imul
sub
and
lret
or
cmp
mov
fistpll
jb
inc
lea
aaa
sub
pop
cltd
ret
cs
into
loope
and
mov
fst
jp
cmpsb
aam
cmp
jge
outsb
lahf
lcall
mov
dec
adc
sub
mov
outsb
cli
sarl
mov
sbb
lahf
imul
push
das
mov
push
adc
cld
jmp
cmp
daa
add
or
xor
notl
into
call
out
lret
outsb
pop
push
lock
das
pop
dec
mov
inc
adc
fstpt
xchg
xchg
jb
sti
test
jecxz
adc
sub
dec
stos
add
push
jno
mov
pusha
xchg
bound
sbb
cmp
out
xchg
inc
mov
frstor
repz
aad
loop
sub
in
cmpsl
pop
ds
add
sub
cs
mov
inc
xchg
or
push
and
aam
das
mov
ret
dec
dec
inc
adc
adc
push
cmc
cmpsb
sbb
popf
std
subl
pusha
sahf
mov
popa
sub
jg
ffreep
cmpsb
xor
lahf
cmp
in
add
lret
repz
pop
inc
add
dec
fwait
pop
mov
test
int
cmp
test
jecxz
stos
xchg
mov
fwait
cmc
pop
int3
aad
xor
lret
or
xchg
aas
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jmp
mov
aaa
cmpsl
sbb
test
xor
stos
jle
adc
fmull
adc
push
mov
cmp
xlat
mov
shlb
or
dec
push
daa
mov
jp
jp
fidivrl
and
aas
in
aad
fstpt
aam
and
adc
fcmovnu
mov
loopne
cld
lea
mov
or
mov
cmp
xchg
mov
out
rorl
dec
mov
fmull
and
cltd
jecxz
inc
push
orb
cmp
leave
stos
in
pop
mov
adc
shrl
pop
in
std
shr
es
in
mov
inc
fstps
repz
sub
dec
cwtl
call
popf
mov
or
lea
pop
sahf
and
mov
repnz
jl
shl
sbb
flds
cmp
jnp
mov
cwtl
cld
out
push
incb
xchg
xchg
int3
cwtl
xor
sbb
lods
jecxz
cmp
cmp
adc
test
jne
popf
sbbl
stos
loopne
lods
dec
sbb
repz
jmp
sub
aas
div
shlb
mov
pop
push
xchg
in
jg
mov
xchg
loopne
inc
rclb
ret
cwtl
xchg
xchg
stos
outsb
xor
nop
mov
jns
icebp
fsubrs
inc
pop
imul
lock
mov
push
in
adc
aad
lcall
add
cltd
cwtl
xchg
nop
enter
lods
cwtl
add
push
imul
stos
adc
loopne
xchg
cld
pusha
imul
sbb
punpcklbw
cmp
push
sbb
sarb
scas
or
mov
ret
mov
ds
and
sbb
jno
inc
mov
out
popf
outsb
cld
jmp
lds
mov
jecxz
xor
xchg
mov
add
push
mov
push
lea
popf
sbb
mov
sbb
xor
popa
inc
and
subl
outsl
jle
sub
arpl
xorl
in
sub
loopne
cmp
add
inc
fdivrl
cmp
add
inc
in
int
add
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
jmp
popa
pop
fimull
dec
sbb
dec
neg
mov
inc
push
adc
fmull
adc
leave
out
fcoms
ds
cmc
mov
lret
inc
mov
or
bound
xor
add
out
push
fnsave
jbe
std
jge
add
fwait
xchg
push
cmpsb
jge
or
dec
sbb
push
mov
cmp
add
jo
out
fdivrl
insb
call
or
xor
cmpsb
lret
popa
shlb
into
adc
or
jae
pop
dec
sarl
and
sub
xor
ja
rcrb
push
rcr
int
aad
stc
insl
pop
clc
mov
dec
rcl
shll
and
addr16
lcall
cmp
jne
sarb
xor
lret
gs
les
add
dec
inc
inc
xor
popf
enter
mov
jg
xlat
mov
in
rcll
fxch
cmpsb
leave
lcall
in
test
push
sbb
popa
mov
cmpb
adc
call
ss
lods
xchg
inc
mov
je
cwtl
int3
pop
fnstenv
lds
mov
test
xor
pop
mov
lods
es
dec
sbb
pop
cmp
insb
hlt
lock
in
or
xchg
xchg
pushf
out
push
les
adc
jp
int
jns
stc
xchg
xchg
adc
dec
cmp
loop
sar
cli
out
cmp
cmp
or
jns
out
adc
fisttps
jge
les
cmc
adc
push
cltd
mov
int3
les
movsb
daa
jo
test
jne
xchg
mov
popa
std
adc
sbb
enter
push
and
push
ror
and
popa
or
adc
jmp
mov
repz
mov
push
pop
movsl
dec
in
xor
sbb
sub
frstor
inc
out
aas
xchg
add
outsb
mov
ja
cmp
mov
dec
jne
pop
div
add
cmp
jb
jmp
add
cmpsb
pop
sahf
aaa
xor
mov
mov
push
add
adc
movlps
test
popf
jne
jl
cmp
roll
push
and
pop
cltd
lahf
jae
mov
xor
push
lret
sarl
movsl
invd
or
xor
adc
out
cmp
lahf
fmul
cmp
inc
les
repz
push
push
ss
push
outsl
andl
sub
imul
jecxz
adc
jl
add
int
sarb
mov
mov
push
mov
fisubl
outsb
or
add
mov
mov
test
mov
sub
or
fidivs
negl
call
add
outsl
inc
jp
mov
leave
mov
shll
inc
in
imul
xchg
cmp
loope
sahf
into
dec
jp
xor
sub
mov
inc
jge
sub
dec
hlt
pusha
loope
xlat
ret
loop
mov
lds
push
clc
loope
push
imul
mov
mov
pop
int3
sarl
push
fs
or
lahf
adc
xor
push
mov
xchg
pusha
push
mov
push
mov
iret
xchg
mov
fwait
lock
pop
xor
jmp
push
cmpsl
push
dec
jecxz
mov
mov
push
pop
inc
cs
adc
adc
and
sub
shll
add
bound
lahf
xchg
lret
xor
mov
push
push
add
andb
cmp
loope
ficomps
jecxz
inc
inc
xchg
add
push
mov
outsl
xor
inc
gs
lahf
push
sub
dec
sahf
divb
notl
pop
pop
repnz
mov
lcall
fwait
mov
aas
sti
pop
icebp
divl
sub
cwtl
cmp
addr16
mov
push
inc
pop
sti
push
sub
faddp
or
rcrb
movb
push
push
cmp
sbb
shll
mov
fwait
push
xor
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
jmp
ja
fistps
pop
ja
outsl
popa
ss
sbb
adc
fmull
adc
inc
lds
inc
jae
mov
rclb
je
flds
jnp
sbb
aad
jmp
xor
add
mov
call
and
adc
mov
in
ss
inc
pop
dec
stc
je
div
in
mov
or
xchg
jle
xchg
fsubrs
out
jmp
dec
push
cmp
adc
and
mov
or
or
pop
sub
xor
mov
in
test
pop
push
call
inc
push
sti
inc
xchg
cmpsl
ret
dec
jns
push
add
mul
push
push
cmpsl
mov
push
arpl
add
loopne
xor
test
dec
push
sub
jmp
push
fs
inc
pop
pop
cmp
jnp
add
inc
cmp
jecxz
insb
inc
and
popa
pusha
popa
mov
movsl
int3
outsl
and
mov
mov
jno
xor
nop
stos
das
add
enter
out
subb
and
rcrb
sahf
jb
xor
add
mov
iret
adc
pop
adc
jecxz
sbb
js
pop
bound
adc
push
mov
cld
aaa
adc
push
push
cmp
lods
stos
mov
dec
and
scas
lods
stc
adc
std
add
sbb
dec
inc
rcrb
or
push
pop
cmpsb
sub
pushf
insb
cmp
push
addl
sbb
imul
ret
ds
shrl
subl
je
dec
push
adc
mov
mov
push
dec
push
jmp
xchg
pop
fisttpl
pop
lock
mov
rol
mov
divb
out
icebp
mov
in
shrb
inc
adcb
and
adc
add
mov
out
sub
movsb
ss
xacquire
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
jmp
lock
clc
test
inc
imul
or
push
adc
movlps
adc
das
movsl
jo
add
imul
ljmp
sbb
sub
mov
ja
lcall
adc
movsb
leave
out
add
loopne
stos
xchg
pop
lret
cmp
fcmovb
cltd
inc
std
mov
rcl
xchg
jle
push
out
mov
lahf
and
in
pop
or
test
jo
mov
lret
xorl
dec
in
ret
ss
jne
or
dec
push
mov
movsb
arpl
lds
fimuls
addr16
xchg
adc
fwait
mov
add
cmpsb
xor
js
add
pop
nop
jmp
fildl
adc
sbbl
ret
addr16
scas
mov
cmpsl
in
aam
and
ret
and
push
xor
out
icebp
add
lods
lea
jmp
inc
out
lret
xchg
sub
pop
cmp
div
pop
mov
push
in
jge
sbb
xor
pop
mov
jae
push
es
jecxz
or
call
aad
inc
insb
jmp
movsb
jmp
and
dec
in
inc
dec
dec
jp
std
sub
mov
cli
into
cli
ds
mov
leave
loopne
mov
mov
cmc
loop
ret
inc
xchg
dec
nop
and
mov
add
loop
loopne
popa
pop
sub
stos
cmp
in
insl
sub
push
xor
pop
xchg
rcll
mov
icebp
jg
cmpsl
jmp
cmpl
scas
testl
mov
clc
insl
pop
pop
pop
cmp
adc
push
mov
out
sub
fs
inc
push
sbb
pop
mov
sbb
dec
mov
fildl
adc
stc
mov
int
popf
jns
mov
xor
mov
scas
add
cmp
cmc
ja
jno
inc
mov
jbe
mov
cmp
jp
les
push
cltd
test
jge
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
jmp
mov
pop
mov
insb
jg
jp
notb
adc
movlps
test
aas
mov
and
push
jmp
in
pop
test
leave
les
add
fnsave
xchg
sbb
fwait
sti
in
mov
repnz
out
test
xor
sbb
mov
mov
lret
test
cmpsb
pusha
out
ljmp
mov
jb
cmpsb
in
jae
out
xor
int3
mov
adc
shrl
sahf
aas
fcomps
jmp
jmp
cmc
mov
or
fcmovnbe
add
shl
cs
jp
and
cli
xchg
andl
out
push
adc
xor
pop
mov
sub
and
shl
xchg
sbb
movsb
add
xchg
pop
mov
push
and
xor
outsb
in
inc
xchg
sbb
jl
cmpsb
pushf
push
test
cmc
sti
mov
push
xchg
lock
pop
xchg
add
repnz
ret
dec
or
std
inc
hlt
lock
and
push
sahf
jo
cld
stos
push
pop
inc
in
mov
sbb
shrb
sub
test
mov
jbe
push
mov
int
mov
sbb
xchg
mov
mov
dec
test
outsb
dec
mov
add
mov
pop
loop
dec
dec
je
nop
sub
repnz
stos
fisttpll
sbb
rcl
stos
push
popf
push
cmpsl
jnp
cli
mov
inc
and
ret
lds
push
mov
das
and
push
mov
lds
fisttpll
jo
xchg
sbb
sbb
sti
fstl
rcrl
aad
mov
inc
shlb
ret
jl
mov
mov
pop
cmp
movsl
mov
sbb
or
push
loope
aaa
push
sub
mov
jecxz
mov
adc
out
add
sub
ljmpw
addb
clc
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
jmp
push
jb
adc
mov
xor
cmpsb
dec
mov
sub
adc
adc
insb
sbb
push
mov
xlat
test
ret
mov
push
sbb
test
lret
lahf
mov
imul
push
out
fbstp
movsl
jns
dec
rcr
popf
mov
insl
cmp
jge
xorb
xchg
sub
push
or
ret
mov
jae,pt
or
test
sbb
lcall
inc
decb
xchg
sub
in
xchg
bound
fdivrs
ds
or
out
dec
jns
faddl
ret
icebp
mov
inc
nop
std
sub
gs
xchg
ret
pop
int
inc
rcrb
jne
push
xchg
and
or
aad
adc
imul
ds
ret
and
fcoml
fcoml
inc
je
cmp
aam
sbb
mov
nop
add
fstpl
sbb
cs
sahf
stos
into
int
out
loop
stc
jl
movsl
aam
test
int3
cmp
pop
pop
dec
scas
int3
dec
fnsave
inc
lcall
jo
inc
lods
dec
sarb
push
mov
jnp
sub
pop
rcr
inc
cmp
cmc
stc
out
cmc
inc
mov
pop
data16
lock
cld
stos
lods
mov
std
in
outsb
pop
inc
mov
fstpl
inc
movsb
je
mov
xchg
and
clc
and
clc
push
test
es
cli
cmp
cmp
sub
jmp
ret
je
es
dec
inc
arpl
mull
mov
stos
popf
adc
outsl
lock
add
push
mov
std
inc
aam
xchg
ljmp
xchg
lods
xchg
jp
add
jae
iret
in
popa
xchg
cmp
js
mov
lret
dec
mov
cmp
in
out
das
inc
mov
add
dec
cmp
xchg
xor
inc
sti
pop
ja
maskmovq
notl
shll
in
and
xor
sbb
xchg
jl
add
aas
test
mov
leave
shlb
mov
xor
or
lret
jecxz
pop
xchg
lcall
shlb
or
ret
out
fistl
mov
jo
xchg
fucomp
imul
call
iret
lahf
xor
in
push
inc
sbb
out
mov
mov
lea
into
pop
icebp
aad
icebp
jecxz
out
int3
xchg
pop
cmp
xor
outsl
inc
inc
jno
in
cmp
imul
in
push
call
inc
pop
int
inc
lods
or
sbb
xchg
jle
jp
xlat
jns
imul
mov
jo
pop
xor
sub
popf
iret
mov
jl
xchg
jae
les
repz
cmp
int3
andb
test
cs
inc
fcomi
fisubs
and
addb
cmp
ds
stos
mov
in
stc
sbb
jae
lret
mov
ss
and
stos
in
cltd
std
jo
jp
aad
adc
cmp
cli
inc
popf
push
dec
lret
ficoml
jmp
popf
iret
pushf
std
mov
add
pop
dec
and
addb
and
cmp
xchg
fdivrs
std
repz
jbe
rcll
add
sarl
enter
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
jmp
imul
in
push
pop
loop
xchg
js
xchg
pop
mov
jo
adc
xchg
lock
mov
jns
sti
xorb
cs
cmp
cmp
cmpsl
int
fsubrp
pop
push
in
into
arpl
mov
lds
cmp
ficompl
mov
cmp
imul
arpl
movsb
push
arpl
sub
insl
das
ja
adc
subb
loop
xor
mov
jmp
or
stos
test
inc
push
cmpsl
xchg
adc
push
add
mov
pusha
adc
addr16
jmp
les
es
cli
imul
lahf
fnstenv
sbb
inc
fstl
pop
sbb
cld
shrl
mov
mov
pop
addb
pop
out
ds
or
in
pop
xchg
push
cmp
dec
push
repz
lret
lock
es
jmp
cmp
cld
adc
cmpsl
jle
loopne
jb
mov
insl
aad
push
pop
lret
sbb
adc
mov
insb
and
cmp
aaa
inc
int
xchg
pusha
sub
and
adc
xchg
add
push
inc
jp
cmp
lock
jns
shrb
stos
mov
movsb
insl
fisttpll
dec
jb
int
and
inc
fnsave
fdivrl
dec
inc
daa
dec
inc
or
aaa
shlb
cmpsb
jp
sub
and
ds
xor
and
and
gs
xchg
adc
popf
sbb
xor
pop
stos
mov
inc
mov
mov
pushf
fdivs
pop
and
insl
hlt
loope
scas
cmc
mov
sub
mov
fldenv
push
dec
mov
inc
es
mov
xor
pop
adc
jmp
cmp
bound
dec
lock
cmp
imul
iret
xor
outsb
fmuls
xor
dec
loope
sbb
add
mov
sub
loopne
fwait
inc
es
out
dec
std
imul
in
daa
mov
push
daa
dec
cld
mov
fwait
std
cmp
push
ja
mov
xor
in
call
daa
pop
push
adc
add
mov
pop
mov
xchg
sahf
std
int
fildl
aaa
adc
or
jae
cld
notl
dec
inc
jnp
push
lret
fistpll
mov
les
sahf
in
dec
pushf
sub
cmp
mov
and
inc
or
ljmp
jg
pop
mov
jno
inc
cmp
push
rorb
loope
cmp
sub
call
inc
mov
pop
xor
mov
jmp
cmp
add
add
lds
sbb
xor
cmp
scas
pop
or
mov
test
ljmp
shll
push
sbb
xchg
imul
push
mov
js
leave
int
jno
inc
outsb
arpl
jg
xorb
jnp
arpl
call
out
ja
jle
cmpsl
test
mov
clc
mov
lea
cmp
sarl
bound
in
xchg
mov
adcl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
jmp
mov
jo
pusha
popf
sbb
mov
stc
push
adc
adc
lret
das
loopne
mov
mov
inc
pop
xchg
cmp
movsb
push
xchg
scas
inc
inc
inc
jns
xlat
pop
inc
push
iret
repz
pop
clc
or
jp
gs
mov
mov
jno
xor
packuswb
jg
or
jbe
mov
aad
xchg
rcrb
insb
sub
sbbl
jbe
insb
aaa
ret
loopne
fwait
mov
cmpsb
mov
push
scas
mov
stos
ficoms
cltd
lcall
adc
cwtl
xchg
test
imul
inc
sub
mov
rorl
cmc
and
test
call
outsb
lock
jno
push
js
les
ljmp
js
jb
adc
leave
mov
mov
ds
mov
orl
xchg
push
in
add
mov
notrack
push
xor
hlt
add
aam
push
popa
lds
inc
cmpsl
cmp
subl
das
xor
lcall
xor
pop
and
bound
call
push
mov
aad
adc
cmp
sub
sub
inc
push
mov
push
dec
mov
daa
mov
scas
and
out
addr16
sub
dec
fildl
scas
insb
mov
and
enter
in
xor
shlb
sub
stc
mov
aam
subl
adc
test
mov
cmp
jecxz
xor
cli
orl
aad
dec
jp
mov
fsubl
test
inc
out
xchg
dec
insl
pop
pushf
iret
sarl
inc
adc
test
pop
idivb
sbb
sub
movsb
sbb
lret
or
add
dec
or
neg
jmp
pop
lcall
sub
cmp
or
lods
push
loop
mov
xor
mov
in
and
add
aas
pop
dec
push
mov
jge
into
mov
or
inc
sbb
sbb
mov
pop
add
js
add
cmpsl
cld
pop
or
clc
rcll
cmp
pop
add
sti
scas
out
bound
cwtl
pop
or
push
or
sub
inc
jmp
ds
jbe
sbb
sub
mov
xlat
dec
movsl
pop
push
lds
mov
cltd
pop
mov
gs
sbb
push
xor
push
arpl
data16
adc
xor
adc
loopne
shll
sub
stc
imul
mov
shl
sbb
stc
add
int
lret
pop
mov
addb
cmp
neg
ret
mov
inc
xlat
cmpsl
push
lret
popa
hlt
int3
loope
cmp
mov
daa
faddp
xchg
ud2
cltd
push
cmp
fistpl
daa
hlt
out
int3
icebp
push
std
fcmovbe
daa
lcall
pop
dec
hlt
mov
pop
ret
xor
jp
shlb
jno
cmpsl
cs
push
pop
push
sti
sbb
xlat
xchg
repnz
in
or
int
je
xlat
mov
minps
xlat
and
mov
aam
cmp
add
inc
cld
xor
add
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
sbb
or
jmp
bnd
jle
mov
jo
adc
iret
ret
pop
loopne
movsl
mov
xor
divb
outsb
adc
repz
mov
mov
das
xchg
cmp
dec
mov
mov
dec
test
pop
add
pop
xchg
or
mov
add
sub
sahf
mov
jg
shll
ds
cmpsl
movsl
and
mov
iret
xor
divl
cli
in
bound
inc
rcll
fdivrs
xchg
stos
xchg
and
clc
cmp
data16
movsb
add
mov
dec
sbb
testb
lock
push
push
mov
shll
cltd
ficoml
clc
fildl
out
in
fbstp
out
std
inc
movsb
fstpt
push
daa
stc
pop
pop
pushf
jne
inc
dec
xchg
fwait
pop
subb
pop
flds
popf
cli
mov
add
or
sti
mov
fwait
rolb
rcl
mov
add
jbe
jne
inc
std
call
or
mov
mov
out
dec
xchg
popa
xlat
add
dec
sti
jmp
sub
sti
cmp
adc
rcrl
mov
leave
pusha
jecxz
cmp
jbe
push
push
mov
mov
dec
xchg
mov
leave
lds
cmp
cld
rol
pop
xor
inc
jle
mov
add
fcmove
jns
xor
pushf
insl
in
pop
xchg
mov
sub
mov
xor
dec
fstpl
mov
aaa
cmc
mov
rorl
fisubrs
ja
inc
mov
rorl
push
jns
mov
sbb
pop
jns
inc
mov
mov
mov
shrl
push
mov
pop
arpl
push
hlt
cmpl
clc
cltd
cli
adc
pop
stos
xchg
icebp
movsb
rcll
pop
sarb
cmp
push
xor
fdivrs
mov
pandn
out
mov
sbb
imul
and
mov
sub
or
dec
or
cwtl
or
mov
pop
lds
cmp
mov
push
inc
movsl
xchg
adc
insb
cwtl
sbb
pop
stos
mov
test
outsb
lahf
sub
fs
xlat
dec
push
mov
jle
clc
int
js
push
ror
fcoms
jecxz
in
cmpsb
inc
mov
lret
fsub
xchg
lret
outsb
movsl
xchg
xor
cmpsb
hlt
call
or
in
popa
loope
xchg
xor
push
cmpl
xchg
add
stos
shrd
ja
mov
leave
mov
imul
adc
fisttpll
imul
insb
push
shrb
rorl
cmpl
mov
stos
test
mov
xchg
out
add
test
or
mov
xchg
xlat
cmpsl
or
outsb
push
divb
stc
add
jb
ljmp
xor
int
xchg
movsl
inc
pop
cmp
pop
aas
adc
lea
leave
add
or
notl
nop
push
mov
mov
ss
mov
xchg
pop
shrl
xor
rol
jmp
aas
popf
push
cmp
movl
mov
mov
jmp
jg
inc
dec
and
cwtl
lods
enter
sahf
aad
adc
adc
pop
cmpsl
cli
xor
sub
mov
ret
fucomip
xchg
int3
pop
push
cmp
dec
push
or
shrb
loopne
sub
movsb
sbb
mov
ja
jae
lods
jb
test
enter
ret
andl
lret
in
imul
pusha
xchg
jne
data16
fildl
scas
sub
aaa
push
ret
cmpb
sub
sub
movsb
adc
hlt
cs
pop
sbb
dec
jnp
lcall
aad
notb
cld
into
xchg
repnz
xor
pushf
cli
xor
push
cmp
movsl
pop
xor
popa
enter
in
lds
nop
mov
loop
stos
fisttps
cmp
filds
and
mov
neg
jne
or
repnz
push
hlt
in
sub
push
test
ret
xlat
sarb
xor
in
or
mov
jge
std
lea
push
pop
sbb
clc
ret
hlt
cmpsl
dec
hlt
movsl
mov
dec
cld
test
push
xchg
insb
adc
negb
or
aas
shrl
adc
les
es
and
inc
add
fidivrs
jle
repz
xchg
loope
pushf
pusha
fidivrl
inc
sub
pop
lods
lock
popl
dec
dec
fst
scas
hlt
inc
cmc
mov
pop
adc
dec
mov
lock
or
push
xchg
sub
stos
pop
xchg
in
cltd
inc
les
test
rcr
xor
out
or
xchg
dec
adc
sub
movsl
dec
and
cmp
in
xor
aas
dec
stos
icebp
or
int3
push
int3
jge
adc
jmp
ljmp
adc
repz
stos
in
cmp
faddl
dec
mov
push
nop
sub
je
pop
xor
jp
insl
and
loop
adc
lahf
jbe
int3
cmp
and
aas
xor
and
es
add
and
push
and
add
xor
popf
and
shll
mov
shlb
in
out
dec
jne
xor
cmp
mov
daa
scas
dec
mov
hlt
adc
cmc
jecxz
sahf
lea
daa
fadd
xchg
adc
lret
sub
mov
push
mov
aas
lods
jns
dec
jl
rorl
xchg
insb
xor
gs
sbb
pop
sbb
andl
sub
pop
and
in
xor
clc
insb
cmp
inc
inc
pusha
push
lds
iret
mov
jne
pop
stc
pop
lods
or
adc
jo
addb
xchg
dec
stc
call
mov
popf
add
shll
xchg
fimuls
andb
push
inc
lea
adc
mov
push
pop
test
rorl
iret
ffreep
pop
test
or
adc
into
mov
dec
dec
mov
cltd
sahf
pop
dec
xor
fcmove
mov
aas
cmp
push
movsl
pop
pop
mov
das
dec
lea
fdivp
cli
mov
adc
popa
push
pop
pop
dec
sbb
repnz
outsb
pusha
arpl
insl
rorb
inc
aad
pop
stc
or
mov
push
xchg
sbb
mov
jp
cwtl
enter
cmp
mov
mov
add
adc
or
mov
or
jmp
xchg
decl
cmp
adc
stos
cwtl
dec
lcall
adc
adc
add
cwtl
sub
out
dec
es
fldl
pushf
mov
sub
dec
adc
cmp
dec
dec
mov
pop
adc
sub
loop
test
or
je
and
push
mov
jge
push
out
or
adc
dec
inc
fs
ljmp
jb
pop
std
loopne
jne
loopne
arpl
add
jecxz
sbb
test
mov
inc
pop
inc
imul
cmc
and
insb
aam
in
push
sub
or
xchg
and
mov
adc
add
insb
jne
sti
or
movsl
rcrl
shrl
shrb
push
xchg
roll
add
jge
iret
inc
insb
loop
sarl
jecxz
xchg
mov
mov
sbb
lret
and
adc
or
sbb
push
xchg
mov
stc
mov
mov
or
jne
sti
ret
iret
pop
mov
les
pop
xorb
cltd
xlat
bound
aam
in
scas
dec
ljmp
aad
dec
pop
stc
inc
daa
jo
inc
icebp
push
or
mov
pop
mov
arpl
js
cmpsb
mov
dec
outsb
jo
lret
lea
mov
xchg
pop
loope
adc
xor
enter
pusha
add
mov
test
les
cli
das
dec
mov
call
cmp
ret
pushl
inc
rcrl
cmp
inc
xchg
fnstcw
scas
test
sbb
sbb
mov
movsb
outsl
std
roll
into
jbe
or
ljmp
add
push
insl
pop
cmp
jp
dec
and
inc
mov
cmp
dec
sub
inc
fcoml
mov
ret
in
scas
jb
outsb
mov
or
or
mov
mov
not
cli
or
aas
mov
pushf
out
jl
cmp
mov
cmpsb
pop
xor
xor
jbe
scas
shr
dec
test
pusha
jns
in
and
inc
fcomps
cwtl
outsl
sub
push
std
push
mov
sub
xchg
xchg
jbe
or
mov
xor
pop
add
dec
addr16
test
mov
xor
jecxz
sbb
std
popa
push
pop
stos
pop
pop
cmp
dec
sti
jne
jo
or
jb
push
cs
sarl
scas
xchg
or
repnz
das
mov
sub
fisubl
or
cmp
or
add
lods
jbe
pop
cmp
clc
mov
in
jl
adc
ljmp
or
in
push
ficoml
mov
sbb
add
sub
test
test
cmp
fidivrs
arpl
or
xor
add
cmpsl
add
cmc
pushf
mov
cltd
fcmove
mov
test
xor
testb
sbb
xchg
push
pop
and
sub
sub
and
or
cmp
or
push
cmp
fwait
loop
js
xchg
cmp
xor
mov
xchg
xchg
pop
xchg
rorb
push
lock
xchg
push
rorl
enter
pop
int3
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
jmp
sub
cmp
mov
push
leave
adc
jo
adc
fucomip
push
xor
les
add
mov
ret
mov
subb
pop
leave
sbb
test
pop
adc
adc
int3
shlb
dec
mov
loopne
adc
push
jne
addr16
cli
loopne
int3
lea
mov
push
mov
inc
lea
mov
out
pop
call
fisubrl
sbb
cld
jge
aad
ljmp
sub
xchg
mov
aam
sub
mov
jle
jl
mov
push
xchg
jb
aam
in
mov
inc
and
loopne
rol
iret
lds
ret
testl
ret
add
lods
cld
jne
lea
dec
pop
mov
out
mov
int
sub
enter
je
sti
ret
mov
adc
cmp
xchg
dec
push
jle
add
cmp
cwtl
std
xchg
dec
jmp
xor
add
pop
pop
test
gs
inc
xor
push
xchg
lea
dec
in
into
sbb
ret
int
ljmp
mov
mov
out
inc
je
inc
in
addb
cmpsl
adc
add
in
add
mov
ds
inc
xchg
cmpsb
in
insb
icebp
dec
jl
cmp
cmp
and
and
xor
sbb
aaa
jne
mov
rcll
js
divb
jge
test
mov
pushl
push
mov
daa
add
jp
and
and
addr16
mov
fsubp
movsb
sub
cld
int
je
push
fistl
xchg
jmp
dec
pusha
xchg
je
test
sarb
add
cmp
push
inc
jecxz
or
lret
mov
nop
pop
int3
mov
lods
cmp
jmp
push
ja
scas
mov
cmp
xchg
imul
leave
arpl
iret
stc
das
fists
test
flds
cli
test
cmc
fwait
shll
insb
or
pop
scas
dec
fisubl
jo
pop
cmc
xor
adc
jecxz
mov
fisttpll
in
pushf
xchg
cwtl
xor
and
push
mov
fmull
and
and
cmp
popa
xor
xor
mov
and
pop
dec
inc
psllq
adc
rcll
or
inc
out
and
pop
ret
ret
test
dec
cli
pop
mov
jb
shl
sahf
in
insl
fisttps
dec
imul
arpl
sbb
out
sub
sbb
stos
dec
bound
mov
aas
xchg
sbb
sub
ja
mov
jmp
idivl
dec
push
loope
movb
mov
mov
scas
stc
push
jp
cmc
inc
leave
js
imulb
dec
or
das
lcall
aad
fidivl
dec
and
push
ljmp
fistl
stc
jg
xor
ret
mov
adc
shlb
sub
mov
nop
dec
in
jge
mov
dec
sub
mov
dec
lods
mov
pop
or
xor
cmpsl
ljmp
arpl
insb
jns
cmp
test
lcall
add
test
call
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
jmp
xchg
xorb
daa
cltd
sbb
inc
cmpsl
xor
mov
adc
jo
adc
cwtl
mov
mov
stos
mov
push
scas
popa
mov
inc
out
xchg
and
std
fcoms
cmp
push
mov
and
roll
push
xchg
mov
je
pop
addb
js
lcall
insl
mov
inc
and
sub
repnz
faddp
bswap
sbb
setp
mov
jmp
push
andb
movsl
stos
stos
out
and
repnz
test
cmp
fildll
add
push
mov
negb
outsl
popf
and
fistpll
sbb
lods
xor
xor
mov
cld
shlb
mov
aaa
fcmove
mov
pop
imulb
cli
xchg
fistpl
sub
mov
xchg
adc
sub
shr
loop
add
and
mov
cmpsl
outsb
inc
jne
imul
xor
mov
or
mov
jae
popl
adc
pop
jno
and
sub
das
lcall
sbb
mov
jp
mov
into
lret
hlt
push
mov
gs
loop
mov
cmpl
mov
scas
and
test
fmull
lret
push
movsl
movsl
adc
sub
dec
jno
js
out
arpl
sub
xor
xchg
xchg
fnsave
sub
je
adc
fstl
adc
aas
jp
mov
mov
scas
add
sub
loope
add
or
add
shrb
mov
cmc
sbb
jns
mov
jo
inc
push
jg
push
loopne
or
int
mov
xchg
xchg
sbb
push
inc
enter
jno
cmp
and
sbb
cmp
dec
dec
or
dec
test
pop
ja
adc
mov
mov
out
aad
das
jne
jl
fldenv
aam
push
andl
and
psrad
dec
je
jo
push
out
mov
and
push
xchg
adc
rcr
mov
mov
and
punpckldq
addb
dec
pop
cli
dec
loopne
rorl
loope
int3
xchg
rclb
call
cmp
sbb
mov
fisubrs
fnstsw
or
push
out
mov
js
int3
dec
sub
sbb
sub
lock
fiadds
sub
inc
pop
push
out
sarb
mov
inc
mov
xchg
sbb
pop
sbb
out
sbb
or
popf
mov
adcl
push
lods
and
rorb
repnz
mov
sbb
add
sbb
pop
xchg
in
dec
mov
ljmp
xor
pop
push
xchg
divl
rcrb
dec
add
inc
xlat
fsts
pop
lods
mov
adcb
xchg
and
mulb
cwtl
mov
cmp
clc
loop
ss
fildl
xchg
pop
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
jmp
jmp
dec
test
lods
js
fs
mov
adc
adc
leave
leave
out
das
std
aad
sahf
pop
stos
dec
scas
cwtl
int
dec
fdivrs
mov
jns
pop
int
jg
cmp
xchg
xor
fistps
push
add
in
sbb
adc
dec
inc
jecxz
and
clc
lahf
and
and
inc
fldenv
sub
sahf
xor
xor
ss
sbb
xchg
mov
xchg
inc
gs
or
repz
cmp
movsl
out
xchg
jl
push
daa
sub
in
jb
fdivrs
shlb
push
ret
insb
pop
repnz
and
out
xor
push
sbb
mov
pop
enter
lahf
into
xor
inc
sarl
arpl
scas
lea
push
lret
adc
scas
hlt
xor
xchg
adc
ret
das
jle
sub
lods
jmp
push
push
movsl
stc
cmp
pop
pop
pop
pop
sbb
int
push
gs
mov
dec
je
out
nop
pop
lock
and
jb
xor
xor
sbb
xlat
inc
pop
scas
sahf
adc
fnstsw
cld
mov
loopne
xor
pop
pop
aaa
sbb
pop
dec
aas
lea
cmp
stc
cwtl
icebp
mov
mov
loopne
mov
add
jmp
sub
out
or
fistl
mov
xor
lret
jne
mov
mov
lods
push
icebp
mov
dec
push
stos
xchg
mov
xchg
inc
or
stos
cs
adcb
icebp
incl
ret
mov
mov
mov
mov
stos
insb
iret
cli
or
insl
mov
lcall
mov
push
movsl
mov
shrb
leave
xchg
xchg
ret
mov
shl
mov
gs
pushf
push
xor
aad
out
xor
mov
adc
in
test
shll
fistps
adc
jl
sbb
movsb
iret
push
adc
addr16
cmc
in
adc
cmp
xchg
or
sub
adc
ljmp
cmp
bound
in
adc
psllq
ret
out
xor
add
xchg
pop
adc
inc
cmp
mull
inc
sti
push
mov
mov
ficoml
fucomip
iret
mov
and
daa
dec
flds
jno
scas
mov
push
fbstp
xchg
xor
aad
das
inc
cmc
insl
in
xchg
and
sbbl
mov
adc
mov
ror
or
fidivrl
inc
pop
add
mov
mov
call
ret
push
sub
stos
lods
xchg
adc
aam
mov
or
ja
add
sub
mov
sbb
fwait
jb
jp
insb
sti
inc
xor
push
mov
jp
inc
jl
push
push
inc
lahf
cmp
aaa
xchg
xor
popf
adc
icebp
ljmp
xchg
cmp
dec
or
fildll
and
lods
fidivrl
mov
imul
addr16
jp
aaa
cmp
je
int
imul
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
jmp
dec
pop
divb
inc
and
mov
imul
nop
out
adc
dec
add
es
dec
jp
sbb
lds
fcmovnbe
movsb
and
mov
daa
xchg
in
lods
or
int
roll
dec
movsb
invd
jp
lahf
ret
lret
or
mov
mov
jb
inc
inc
pop
nop
iret
popa
jbe
jns
ljmp
or
imul
repz
add
ljmp
cmp
cmp
pop
lds
out
sub
mov
push
andb
lods
sub
daa
imul
aaa
arpl
out
test
idivl
mov
mov
fstps
and
or
or
aas
mov
mov
adc
dec
lret
adc
dec
lods
leave
lret
mov
add
fnstenv
and
mov
jo
push
out
inc
lods
dec
sub
and
ret
fld
mov
xor
cmp
rcrl
xchg
xor
jg
xchg
sbb
shl
xchg
lods
dec
cmpb
mov
int
mov
cmpsb
in
push
hlt
push
daa
adc
dec
vsqrtps
imul
ret
jne
outsl
arpl
push
mov
mov
inc
sub
lds
mov
scas
test
jae
into
lahf
dec
or
ss
fnsave
cmpsb
push
adc
inc
fwait
push
xchg
adc
ret
into
push
pop
sub
call
sub
arpl
lret
lds
fucomp
sub
or
push
cmp
lds
out
pop
rcr
mov
or
pop
sbb
add
adc
sbb
mov
andb
je
std
cltd
sarl
int3
int3
sub
cmp
sbb
jg
loopne
call
clc
or
mov
lods
mov
faddp
aaa
in
jl
cwtl
repz
test
out
or
fimuls
adc
repnz
sbb
and
mov
scas
mov
mov
push
push
call
mov
mov
or
or
push
add
push
jmp
push
pop
push
js
scas
mov
imull
adc
mov
or
dec
mov
clc
mov
repz
rorb
sti
outsl
mov
xor
ret
sbb
add
push
lock
orb
aam
sbb
ss
mov
or
imul
or
push
popa
movsl
in
push
push
in
cwtl
movl
mov
inc
stos
fwait
mov
push
add
fisubl
sbb
jnp
enter
fwait
pop
gs
imul
fisubl
fdivl
ffree
xor
insb
andl
ret
outsb
mov
in
inc
aad
inc
fs
lods
aas
out
or
sbb
int3
dec
and
shll
sub
mov
xchg
cmp
mov
push
mov
adc
mov
push
enter
test
es
out
xor
dec
xchg
xchg
jbe
dec
fisubs
pop
loope
and
xlat
fstl
inc
and
rorl
fucomp
mov
add
jb
cs
mov
mov
cmpsl
pushf
cmp
sahf
in
mov
lods
test
clc
fwait
sahf
repz
add
push
mov
in
insb
pop
add
cli
push
dec
lret
lock
repz
aad
xor
jmp
add
mov
inc
sbb
shll
xchg
shl
vandps
aas
dec
imul
pop
rdtsc
divl
sub
add
push
cmp
add
push
lret
jg
clc
imul
fwait
sbb
mov
iret
sbb
dec
ror
cmc
imul
out
mov
cmpl
cmp
xchg
movsb
add
sbb
fcmove
xchg
push
sbb
cwtl
mov
fwait
adc
popa
sbb
arpl
fs
mov
out
lds
dec
sub
stos
ret
mov
xor
movsl
int
arpl
mov
lock
addb
je
xchg
loopne
cli
shlb
mov
out
fs
bound
fistpll
xchg
shlb
sarb
adc
add
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
jmp
cltd
sbb
sbb
cltd
sbb
xchg
bound
mov
adc
stos
movlps
add
mov
add
mov
test
dec
ret
mov
sbbb
notl
ja
testb
mov
lock
inc
movsb
sbb
movsl
movsl
fsubl
dec
icebp
jnp
pop
jae
adc
xlat
and
gs
mov
xor
lret
push
cltd
mov
cmp
in
fwait
stos
mov
aas
int3
dec
fs
xchg
fs
cmc
cld
js
adc
mov
xor
inc
ret
daa
jbe
int3
adc
add
rorl
cmp
xchg
jmp
jo
or
xor
inc
push
ffreep
cli
inc
sub
xchg
mov
push
leave
lds
cltd
cmp
test
inc
mov
push
out
xchg
adc
aad
pushf
mov
or
lret
inc
cmp
add
jl
and
mov
fidivrs
in
cmp
mov
mov
rolb
imul
jg
mov
xor
mov
mov
scas
mov
loop
dec
and
ss
push
in
repnz
pop
pop
mov
adc
repnz
lahf
adcb
jne
sti
in
addl
inc
add
pop
adc
mov
add
xchg
aad
sub
cmp
movsb
mov
or
dec
adc
xchg
or
lcall
fmuls
xchg
stos
pusha
push
ljmp
sbb
div
movsb
dec
ret
add
sbb
xlat
pop
inc
lret
or
adc
sbb
lods
mov
inc
or
pop
pop
dec
les
mov
sub
mov
sub
repz
add
xchg
outsl
mov
cmpsb
test
in
push
lahf
ss
inc
imul
xlat
sub
mov
mov
adc
lds
push
or
mov
push
xlat
frstor
sti
add
cmp
jnp
and
aam
scas
std
sbb
dec
adc
fsts
shll
or
out
jb
mov
lahf
xchg
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
jmp
pop
mov
pop
mov
and
int3
lods
sbb
adc
stos
movlps
sub
xor
subl
les
shlb
xor
cmp
and
xchg
sti
cmpsb
fsubs
scas
rcrl
push
sub
ljmp
xchg
xor
add
push
sub
fldl
std
lds
adc
shlb
inc
cmp
aad
mov
shlb
jne
js
mov
fcmovnu
mov
inc
mov
mov
cli
dec
cwtl
xchg
or
icebp
pop
gs
cmpsb
data16
jb
mov
dec
out
dec
in
dec
ljmp
ja
jge
sub
pop
add
aam
dec
mov
adc
xchg
cmp
popa
mov
xor
lret
add
out
ret
addl
adc
mov
pop
push
stos
inc
lods
xchg
sub
jo
out
xchg
sbb
insb
outsl
push
ss
sbb
inc
xchg
xor
jecxz
sub
out
mov
jno
idiv
push
xchg
push
inc
cmp
fsubr
sbb
bound
test
sbb
xor
cltd
shrb
pop
popa
mov
idiv
mov
into
pushl
inc
adc
mov
lods
fldt
jne
daa
in
mov
dec
dec
push
jmp
rcll
or
shlb
insl
dec
divl
or
cmp
mov
inc
sbb
mov
lds
pushf
insb
pop
stos
lahf
cmc
and
push
shlb
daa
pop
out
outsb
aaa
cmc
add
es
add
mov
jmp
cmp
mov
aaa
call
loop
dec
and
cwtl
icebp
xchg
out
mov
lret
mov
andl
or
loop
pop
cmp
xlat
pushf
or
push
mov
fidivl
pop
push
orb
jg
stc
sbb
dec
sbb
mov
dec
adc
dec
xlat
jecxz
cmpsl
sarl
ljmp
push
add
dec
pop
inc
mov
stc
mov
in
movsb
imul
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
xchg
sub
subl
clc
or
adc
stos
movlps
movl
cltd
push
out
pop
lock
jecxz
jno
xor
inc
sub
and
daa
repz
out
xchg
cmp
sbbl
jle
mov
mov
jp
pop
push
outsb
cmp
jge
ljmp
mov
cs
ficoml
test
mov
push
stos
xchg
xchg
xchg
pusha
insl
mov
scas
push
aaa
pop
lods
push
xchg
or
dec
stc
inc
mov
push
push
push
xchg
fstps
jle
sub
lcall
adc
mov
xor
popf
out
je
lret
outsb
inc
lahf
jmp
pop
bound
sub
pop
jnp
xor
and
lcall
enter
sbb
lret
dec
cmp
std
mov
outsb
dec
mov
mov
jg
out
mov
mov
lahf
aaa
sub
xchg
fstl
jne
jle
lods
dec
and
cmp
push
loope
call
xchg
sti
xor
pop
int3
mov
cld
sub
ss
imul
jne
aad
mov
and
dec
imull
jle
lods
inc
int3
or
dec
inc
addl
adc
xchg
pop
adc
sbb
jg
and
sub
or
lods
fdiv
in
adc
out
cli
rcrl
xchg
hlt
psubd
mov
mov
dec
mov
cltd
xor
lods
mov
xor
scas
push
dec
and
test
sbb
and
andb
sub
adc
mov
xor
jmp
mov
add
push
data16
int3
inc
or
fsts
xchg
cmpsl
xlat
rcrb
xor
mov
mov
outsl
adc
jecxz
les
and
dec
out
mov
pop
cli
les
push
cs
xchg
xor
clc
and
out
jge
out
mov
adc
mov
xor
pop
xor
rcll
pop
sub
fs
mov
nop
push
sbb
adc
data16
in
pop
mov
test
inc
or
dec
or
shrl
sub
or
mov
imul
mov
jmp
loope
mov
and
les
aas
fwait
adc
stos
movlps
mov
sub
pop
mov
idivl
inc
push
add
push
sbb
mov
adc
fdivp
gs
mov
and
rcrl
jne
pop
xchg
sub
cwtl
popa
lcall
pop
sbb
test
mov
cs
std
stos
xor
xor
inc
lcall
pop
nop
in
push
adcb
push
jo
jecxz
gs
fildll
mov
add
into
dec
fidivrs
mov
imul
and
repz
mov
inc
sbb
int3
and
mov
cmpsb
push
js
and
add
add
pop
and
pop
push
xchg
ret
imul
out
js
cmp
or
cmp
xchg
add
jle
popf
xor
dec
mov
xor
or
or
insb
sub
cmp
cmp
adcl
in
lea
dec
aas
jecxz
loop
subl
jns
sbb
mov
scas
test
lods
push
jecxz
icebp
mov
mov
or
lods
push
aad
sahf
add
repz
cs
mov
in
push
inc
add
push
lcall
les
movsb
stc
repz
test
sahf
mov
push
adc
push
dec
mov
aad
addl
fwait
popa
push
push
fnstcw
jne
stos
inc
into
mov
mov
les
loopne
into
cld
xor
dec
xor
stos
cld
xor
mov
ja
shrl
dec
cmp
cmc
xor
and
sbb
xchg
je
jbe
movsb
cmp
inc
das
gs
adc
add
xor
push
popa
mov
xchg
mov
ljmp
mov
sbb
cli
sbb
mov
pop
pop
daa
addr16
mov
js
stc
push
and
fs
mov
ficompl
je
fucomi
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
jmp
inc
or
pushf
ds
fdivrs
cltd
adc
pop
adc
adc
sbb
ret
dec
mov
lret
fsubr
cmp
rcrl
xor
jae
addl
xor
hlt
fcmovnbe
and
pop
push
xor
clc
pop
jge
lret
mov
call
fs
imull
inc
inc
cmp
sub
sub
dec
sbb
mov
xor
dec
sbb
andb
cs
bound
scas
test
mov
mov
xchg
into
nop
xchg
inc
pop
faddp
insl
fwait
nop
fmul
dec
movsb
adc
mov
jae
sub
push
cmc
push
ljmp
les
ds
dec
lea
mov
cmp
dec
mov
movsb
jle
mov
movsl
sub
inc
cmpsb
mov
push
sub
ds
movl
insl
inc
mov
jb
scas
jecxz
dec
mov
xchg
mov
inc
inc
mov
fimuls
mov
fsubr
push
inc
jecxz
into
les
arpl
je
fs
pop
stc
xchg
shrl
mov
mov
push
pop
sahf
jecxz
in
enter
sub
stc
fsubs
adc
jge
rorl
insb
shll
sahf
test
movsb
xchg
jge
inc
mov
mov
mov
aad
push
and
cmp
and
scas
push
xchg
mov
js
repnz
adc
pop
jmp
sub
lea
dec
xchg
faddl
aas
fld
sahf
adc
les
stc
cmc
and
dec
adc
outsb
adcb
cmp
sub
xchg
adc
mov
dec
lods
nop
xlat
out
xor
dec
test
aam
push
or
jb
inc
cmpsl
stos
pop
jle
outsb
push
iret
cmp
mov
outsb
out
lea
cmc
add
add
call
sub
jae
rcr
lahf
mov
fs
mov
sahf
lret
cmp
pop
dec
dec
or
ljmp
sbb
or
ss
into
lods
inc
adc
mov
mov
loopne
daa
jae
jbe
fadds
jb
inc
inc
clc
adc
add
cwtl
and
pop
pop
jecxz
int3
sub
sbb
jmp
ljmp
jle
rcll
je
pushf
push
into
icebp
mov
jb
mov
cmp
sahf
lods
fldt
movsb
dec
hlt
aad
cmpsb
dec
xchg
sti
decl
xor
orl
mov
add
inc
sbb
dec
and
out
mov
fbstp
add
int
nop
pop
xor
pop
sbb
mov
sbb
mov
shlb
shlb
jbe
pop
mov
stos
int3
or
pushf
mov
fcomps
sahf
xchg
or
push
sbb
mov
mov
hlt
sbb
sub
and
nop
jns
shrl
mov
call
cli
mov
mov
jge
leave
jo
xchg
fadd
hlt
lret
pop
test
lret
ja
mov
rcl
rcrl
or
icebp
cli
pop
dec
inc
sub
roll
xor
mov
lds
or
rcrb
pop
inc
cmpl
insb
jnp
popf
push
in
cmp
sbb
mov
mov
cmp
mov
cwtl
popf
sub
icebp
imul
mov
test
inc
jo
test
shr
push
pop
mov
pop
je
mov
lods
push
mov
scas
mov
and
cli
in
in
lret
sbb
inc
push
xchg
dec
icebp
aaa
lds
stos
mov
decl
ljmp
rorb
lcall
icebp
mov
xor
mov
xor
mov
add
jmp
pop
pop
scas
outsb
scas
pop
sbb
cmp
push
push
mov
adc
pop
adc
adc
sbb
jae
adc
test
outsb
dec
pop
jns
call
lcall
mov
insl
into
popa
cmpsb
ja
insb
scas
pop
ret
roll
push
test
cmp
xchg
xchg
cltd
dec
cld
sti
ljmp
into
push
ja
shr
iret
xchg
jl
es
test
cmpsl
mov
jp
adc
shll
inc
inc
inc
push
movsl
inc
and
iret
pop
in
mov
or
inc
jno
inc
ss
leave
gs
bswap
test
push
pop
test
lods
outsl
xchg
test
ds
pop
jo
testl
aas
push
out
mov
fisttps
aad
sarl
stos
jl
pop
in
test
pop
push
push
pusha
mov
add
adc
outsb
add
xor
nop
push
cmp
ret
push
mov
inc
and
sub
mov
pusha
and
mov
aas
cmp
lret
ss
out
jo
push
pop
pop
int
mov
lds
xchg
pushf
sti
push
inc
pop
cmp
mov
mov
cmpsl
fistps
mov
call
mov
jbe
hlt
xchg
enter
push
andb
ss
push
adc
xlat
stc
dec
mov
sbb
les
movsl
add
pop
cli
mov
fdivs
or
mov
push
movb
lret
insl
clc
pop
test
or
into
xchg
inc
addr16
sbb
imul
test
test
jmp
sub
xchg
or
pop
mov
lret
cmp
jns
and
cs
dec
jecxz
lods
push
xchg
or
addl
ret
sub
inc
movsl
stos
xchg
mov
mov
push
lods
lea
mov
pop
or
push
cmp
call
xorl
aaa
test
pop
jge
xorl
shr
add
in
jp
xchg
stos
and
adc
pop
movsb
adc
loope
repnz
icebp
ficoms
inc
xor
dec
and
sub
xor
mov
cs
sub
mov
add
xchg
popa
call
sbb
mov
dec
jmp
jmp
push
adc
ret
test
test
lret
stc
enter
into
xchg
jle
outsb
test
add
inc
xor
push
pop
cmp
push
inc
test
subps
rcrb
jge
dec
popf
xor
sub
lods
cmpsb
cmp
dec
inc
mov
pusha
and
cmpsl
dec
inc
les
fsubrl
cltd
cwtl
mov
jo
jge
push
sub
xchg
lock
fiaddl
xor
mov
xor
cmp
dec
inc
or
mov
pusha
cmpsb
add
insl
mov
fwait
or
fnstcw
cltd
or
push
data16
sbb
shlb
cwtl
test
lcall
test
repnz
call
decl
lods
sbb
scas
and
adc
xchg
and
inc
imul
fidivl
lods
sbb
xor
xchg
jnp
cmc
push
fcompl
aam
test
pop
ret
mov
sti
repz
or
leave
movsl
jno
fsubl
in
mov
mov
xor
xorl
fnsave
inc
lock
inc
repz
mov
test
inc
xor
or
mov
lods
sbb
pop
stc
mov
inc
arpl
in
pop
mov
fstpl
add
and
adc
push
lret
jg
adc
data16
xor
andb
fldl2e
hlt
sub
stos
decb
adc
sbb
pop
push
push
loop
fldcw
dec
je
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
ret
loopne
icebp
xchg
stos
mov
stos
movsb
fidivrs
and
adc
sbb
adc
je
dec
cltd
lock
shrl
mov
cmc
addr16
sub
jecxz
inc
sub
insl
jo,pt
push
pop
inc
test
ja
div
pop
push
xchg
cli
mov
pop
inc
mov
lret
cmp
pop
cmp
or
mov
mulb
out
sbb
cltd
push
loopne
shll
lahf
addr16
mov
ja
je
dec
aad
mov
xchg
jecxz
mov
repz
aaa
fs
scas
sub
std
push
sbb
push
mov
enter
inc
ficompl
pop
outsl
jnp
addr16
aaa
inc
inc
in
xchg
jecxz
sti
fsubrs
mov
xor
loopne
lret
mov
sbb
jno
lods
push
cmp
xor
movsl
mov
mov
add
pop
insl
jno
test
or
fsts
lahf
and
mov
jae
mov
shll
and
xchg
mov
push
jbe
sbb
mov
mov
sbb
decb
and
test
je
jg
stos
xor
mov
clc
subl
xchg
or
addr16
in
test
insb
repnz
lcall
int3
sbb
ss
or
movsl
clc
in
sarl
fsubrl
sub
femms
movsl
shl
push
loope
ret
xlat
lea
sub
call
mov
addl
daa
mov
push
add
and
fisubs
jmp
push
push
popf
ret
mov
cmpsb
xchg
clc
mov
mov
fildl
cli
movsl
mov
xchg
adc
xchg
pop
enter
adc
jae
mov
cmp
into
mov
mov
jno
cmc
daa
mov
nop
cltd
call
aaa
xchg
or
push
enter
enter
adc
sahf
cmp
jg
rcll
push
cmp
lcall
aam
sub
jp
scas
mov
pop
popa
or
and
lock
pop
movsl
adc
loope
bnd
ret
addb
sub
fwait
popf
sahf
sub
test
mov
mov
enter
sub
push
insb
sbbb
cmp
mov
andl
mov
xchg
and
orb
stc
bound
popa
push
test
or
jo
cmp
clc
jno
pop
insl
jo
lods
dec
enter
mov
inc
add
mov
xchg
sbb
imul
je
jae
mov
sub
sub
jb
adc
mov
lret
mov
fsts
in
mov
out
arpl
lea
push
pop
dec
mov
and
test
xchg
or
ss
or
inc
les
add
inc
enter
add
inc
int3
cmp
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
jmp
cmp
iret
sbb
pop
push
lret
test
repz
adc
movlps
adc
ljmp
ret
inc
movsb
clc
scas
dec
inc
push
repz
mov
ds
sub
daa
movsb
jbe
mov
sbb
mov
pop
push
insb
or
inc
cmp
shl
aaa
rol
dec
das
shll
stos
and
ret
add
fistps
mov
int3
xor
not
sbb
mov
jno
adc
aaa
ss
push
int3
mov
mov
in
mov
movsl
pop
xor
xchg
mov
testl
pop
mov
enter
inc
sbb
loop
xchg
in
dec
sub
shll
xchg
imul
push
out
stos
scas
xchg
sub
or
stos
inc
adcl
popa
jae
push
add
add
out
add
jle
js
icebp
dec
lock
jecxz
aas
ret
dec
aad
mov
xchg
mov
in
xor
and
pop
outsl
lods
out
scas
fnstenv
add
sub
jle
icebp
inc
cmp
lock
scas
andl
dec
pop
lcall
ret
mov
jns
neg
fs
lods
int
leave
jg
cmp
mov
pop
mov
xor
inc
xchg
ds
mov
fidivrl
stc
push
test
pop
fcompl
fwait
negb
or
stc
or
push
or
mov
push
jge
fs
out
xor
sahf
inc
std
mov
loop
stos
add
in
std
inc
mov
rorl
or
fcompl
add
pop
and
ss
sub
mov
les
clc
mov
dec
pop
or
shlb
lret
pop
adcb
jno
or
pop
cli
jbe
loopne
mov
ret
lods
enter
push
or
lock
xor
lahf
sar
xor
sub
xor
add
cmc
pop
lods
in
loopne
or
xor
sub
jb
loop
shll
decb
pop
cmp
xchg
sbb
sti
rcr
xchg
es
js
imul
fs
lret
sub
xchg
pop
add
jae,pn
jle
jno
arpl
aam
arpl
fdivrs
push
add
xor
addr16
pusha
imul
fwait
cmpsl
stos
jle
pop
add
mov
mov
xchg
push
push
xchg
adc
hlt
aad
xor
xor
fnstcw
push
int3
mov
pop
jo
dec
cmp
enter
enter
inc
lcall
sahf
outsb
sbb
cwtl
outsl
cmc
push
ja
enter
jns
andl
stos
push
mov
nop
pushf
fwait
fwait
aam
popf
aaa
pop
sub
andb
or
xchg
test
lods
pop
push
imul
push
or
mov
adc
out
push
push
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
jmp
inc
in
sbb
sbb
fisttpl
jmp
add
adc
movlps
and
rorl
in
push
pop
repnz
pushf
add
cmpb
or
lahf
outsb
out
cwtl
mov
out
pop
sub
mov
and
scas
add
mov
add
mov
xor
icebp
xchg
in
in
adc
mov
adc
inc
and
in
xchg
imul
mov
mov
insb
cmp
test
je
test
daa
pop
nop
sar
insb
aaa
push
mov
test
out
aaa
inc
divb
js
jnp
cld
clc
stos
inc
nop
jle
push
bound
idivb
and
in
enter
rcrb
lret
dec
cmp
mov
jle
cmp
scas
out
mov
sbbb
and
lcall
lahf
push
xchg
ret
push
shrl
xchg
mov
divl
mov
inc
gs
aam
cmp
les
mov
xor
dec
ss
jo
and
js
mov
test
jbe
hlt
lahf
sub
pushf
cltd
in
movsb
inc
and
or
xor
mov
dec
daa
add
or
sbb
lds
mov
aam
inc
jne
fidivl
ja
mov
rorb
mov
cmp
inc
shlb
sub
js
cmc
es
cmp
cwtl
pop
jne
cld
cli
fsubrp
ror
mov
sub
imul
clc
xchg
pop
loopne
mov
pop
movsb
hlt
xchg
leave
ret
int3
jle
icebp
lcall
dec
add
mov
or
in
outsb
stos
and
in
sbb
arpl
xchg
dec
inc
push
jbe
stc
jl
insb
icebp
insl
cld
or
push
imul
jbe
xchg
mov
push
xor
cmp
int3
cmc
fs
adc
call
sahf
bound
add
add
fwait
push
sbb
mov
add
loop
mov
dec
mov
or
insl
into
xchg
mov
xor
sbb
pop
xor
stos
stos
jl
scas
add
jge
add
mov
iret
mov
ja
mov
stos
rol
repnz
mov
ret
fnclex
add
xchg
push
movsl
mov
pop
adc
inc
xor
outsl
inc
in
pop
bound
push
jo
mov
sar
scas
push
rorb
sub
mov
pusha
mov
popf
xlat
pop
into
push
scas
fcoms
rclb
mov
push
mov
push
call
sarl
loopne
stc
xor
mov
aad
xor
outsl
ret
out
sbb
inc
jne
fists
mov
popf
sahf
jne
sub
mov
push
inc
daa
or
jmp
cltd
cmp
dec
or
test
rcrb
repz
xchg
or
fcompl
mov
es
cmc
mov
add
enter
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
jmp
and
sbb
loope
stos
xor
adc
or
cltd
aad
jge
mov
adc
jp
ljmp
mov
or
aaa
inc
popf
in
sbb
ror
inc
in
inc
inc
fdivrs
xchg
mov
push
mov
shrl
sahf
dec
jns
nop
push
xchg
subb
lods
adc
cmp
call
mov
inc
jne
jne
inc
lds
lds
xchg
mov
push
cmc
or
sub
ja
push
add
fmuls
xchg
cmp
push
lods
fsub
int3
push
pop
jne
enter
cltd
lret
jb
mov
lock
and
jl
clc
subl
int3
mov
int
dec
or
mov
mov
cs
popf
repz
add
daa
pushf
ja
add
jp
cmpsl
dec
lds
add
add
ret
sbbl
mov
stos
pop
or
cmpsb
pop
jp
imul
push
xor
cmpb
sti
xlat
arpl
loop
jmp
js
dec
das
xchg
mov
sahf
xor
ja
rclb
push
xchg
sub
stc
sbb
out
adc
push
mov
xchg
out
fildl
enter
popf
std
xchg
bound
ss
sbb
mov
mov
lahf
rcll
push
sbb
shlb
jnp
in
pop
in
iret
lcall
incb
lds
jg
push
xor
sbb
add
mov
imul
dec
lea
pop
mov
in
fbstp
cmp
pop
call
sti
fidivl
dec
add
add
sub
fstps
adc
or
les
test
xchg
popf
or
jge
out
sub
or
clc
enter
xchg
mov
xchg
adc
jbe
sbb
xor
out
inc
mov
pop
inc
adc
je
and
fsubs
loope
and
inc
in
pop
jge
mov
popa
aaa
sub
jbe
jl
call
xor
test
dec
hlt
roll
or
adc
add
stos
data16
imul
insb
loope
test
mov
pop
jns
loop
dec
fucom
lret
add
rorl
gs
mov
fsubrl
xor
jo
pop
mov
xorb
adc
aam
loopne
cmpb
in
sti
push
mov
test
daa
iret
ljmp
mov
cltd
mov
push
enter
jbe
xlat
call
aaa
nop
pop
arpl
sub
cmc
and
jo
push
aam
push
adc
push
pop
inc
ds
clc
or
xor
push
xchg
dec
movsl
iret
jl
jbe
pop
mov
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
jmp
push
daa
sahf
xchg
sbb
add
lahf
mov
mov
add
adc
xor
ljmp
jmp
dec
aad
inc
popf
push
mov
mov
add
push
pop
stos
aam
jmp
ds
xor
bound
das
addb
negb
cwtl
dec
and
sbb
adc
mov
pop
add
das
pusha
outsl
xchg
mov
and
xor
jg
push
push
rorl
rorb
lods
lret
cmp
mov
and
xor
push
std
or
cmpsl
nop
lcall
pusha
int3
insl
ss
mov
pop
lock
dec
xchg
mov
into
jnp
add
cli
dec
cmp
pop
into
dec
fiaddl
jae
pop
adc
popf
fld
test
mov
fs
mov
adc
das
jl
fidivs
inc
fwait
pushf
lcall
sbb
fimuls
daa
sahf
shll
mov
iret
cmp
mov
and
mov
mov
push
mov
notb
lahf
mov
jmp
mov
push
mov
push
popf
cmpsl
jbe
imulb
xor
lcall
lock
mov
cld
mov
repz
push
call
movsb
jmp
add
push
sbb
jno
dec
adc
or
adc
cmpsb
pushw
subl
xor
repnz
outsl
in
push
mov
pop
xchg
jbe
push
pushf
pop
jno
mov
addr16
adc
jmp
xor
fmuls
movl
repnz
cmp
jo
test
xchg
and
fstpt
mov
das
xchg
insb
add
fs
pop
lea
or
stc
shl
clc
sub
jl
int3
ret
sahf
mov
push
scas
scas
sub
jbe
add
inc
pop
pop
movsb
in
or
mov
popf
rcll
jl
pop
imul
sti
cld
mov
pop
sub
push
dec
push
mov
or
xchg
call
mov
fisttps
mov
cs
pop
push
pop
and
adcl
cmc
mov
xchg
iret
leave
popf
adcl
cmp
jp
xchg
bnd
and
mov
jge
data16
dec
dec
pop
aaa
sbb
jmp
mov
pop
in
loop
popa
xor
cwtl
daa
cmpsl
adc
cmpsb
loope
lcall
mov
cmp
out
and
inc
add
cltd
cmpsb
jge
dec
adc
pop
mov
movsb
addb
aas
inc
fs
sarb
cmpb
pop
subl
or
cs
ja
ja
mov
jge
mov
or
cmp
and
xchg
or
les
xchg
inc
mov
and
jge
pop
loopne
rdpmc
repz
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
jmp
pop
mov
sbb
sbb
mov
hlt
jl
add
adc
or
adcb
inc
mov
mov
push
loopew
out
pop
xchg
xor
ss
mov
pop
jecxz
iret
pop
stos
std
xor
cmp
inc
xchg
push
add
cs
jp
and
pop
lods
xor
xor
loopne
xchg
pop
sub
push
xchg
jnp
dec
push
arpl
xor
mov
pushf
out
es
in
push
push
cmp
pop
sbb
cmp
pop
lret
outsl
fcomps
stos
movsl
jno
imul
jmp
adcl
inc
or
sbb
in
cli
mov
pushf
test
cmp
xchg
fwait
pop
mov
push
test
mov
jle
mov
std
mov
mov
aad
xchg
mul
and
sub
shll
sub
lret
push
js
dec
xor
aam
add
cmp
aas
rorl
dec
sbb
stc
or
mov
aas
xor
out
xor
pushf
mov
fstpl
fs
inc
repz
lds
sbb
dec
add
in
push
push
jne
cmpsl
stc
sbbb
cld
dec
xchg
mov
ss
jmp
dec
sarb
dec
pop
int
leave
hlt
xchg
push
dec
xchg
fsubs
mov
pop
cmp
and
jnp
push
and
cmp
iret
fildll
ss
xchg
out
and
push
lret
adc
push
xor
and
adc
in
imul
xor
fadds
cmp
cwtl
lock
dec
popf
mov
loope
lock
jge
stos
das
mov
fdivrs
pop
cmc
xchg
pop
and
in
popa
filds
mov
mov
push
bound
and
scas
adc
jmp
mov
ja
clc
sbb
mov
inc
movsb
dec
xchg
cld
xor
lods
mov
push
mov
and
fsubs
pushl
cltd
sbb
rcrb
rcr
jmp
sbb
das
xlat
sti
jo
add
jnp
outsb
rcll
inc
popf
add
in
cltd
jb
xchg
mov
mov
aad
add
sahf
test
data16
outsl
mov
dec
jnp
call
push
enter
lret
fistl
call
divl
jae
dec
cmp
push
mov
inc
shrb
lods
rcll
lea
mov
icebp
lahf
jae
push
aad
cmpsl
test
sbb
xlat
sub
mov
fs
ret
stc
pop
icebp
jnp
dec
xchg
mov
pop
cmp
lds
push
jge
mov
idivl
push
popa
push
jecxz
adc
scas
jnp
mov
pusha
test
rolb
pop
mov
lock
ss
xor
xor
push
adc
jbe
aaa
pop
push
mov
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
jmp
xchg
mov
ret
sub
lcall
adc
jb
adc
shlb
or
dec
xor
push
mov
ja
cltd
pushf
addr16
xchg
mov
sub
loope
cmp
iret
ret
jge
ja
hlt
sbb
outsl
adc
pop
sbb
inc
xor
pop
jg
jp
sbb
cmp
xchg
pop
mov
loope
imul
push
push
or
sarl
jae
sar
dec
dec
xor
lahf
out
sub
les
mov
or
cwtl
and
bound
cmpsb
pop
lock
fs
outsb
aad
icebp
inc
adcb
in
or
in
into
fs
sti
cmp
or
iret
sahf
or
push
mov
mov
outsb
aad
sub
add
clc
push
test
jecxz
inc
movsl
aad
and
stc
or
roll
js
inc
ja
jmp
pop
inc
repz
or
enter
outsb
or
repnz
mov
xchg
mov
jo
adc
cmpsb
movsl
cmc
and
push
inc
icebp
pop
ljmp
enter
addr16
icebp
pop
xchg
fs
jge
pushf
sub
insl
push
or
insb
add
repz
sub
insl
lret
repnz
cmp
lea
ja
js
cmp
xor
into
adc
add
cld
dec
sbb
add
je
inc
stos
ret
dec
xchg
add
out
sub
bound
and
sub
int3
or
push
inc
cltd
lock
xchg
sub
push
fisttpll
imul
xchg
push
mov
xchg
pop
hlt
xchg
mov
inc
cmp
sbb
cmp
jg
cli
and
mov
mov
ljmp
xchg
movsb
cmp
js
and
sub
xchg
clc
sbb
bound
lods
mov
pop
movsl
nop
sbbb
and
pop
inc
fisttpll
fs
push
mov
test
sbb
adc
mov
jle
pop
jg
add
bound
adc
rcrl
adc
jg
jo
stc
sub
test
xor
xor
repz
and
insl
adc
iret
dec
xchg
jo
sbb
sbb
pop
add
add
jae
and
sbb
sub
inc
and
jo
xor
pop
add
mov
mov
iret
aaa
xor
jmp
leave
sysexit
jg
sbb
push
movsl
loope
adcb
loop
ljmp
and
mov
jle
ljmp
and
or
jmp
mov
shll
adc
lret
ret
or
hlt
xchg
out
adc
xor
scas
inc
insb
lcall
jp
xchg
lcall
test
push
imul
in
jle
movnti
jne
out
and
stos
gs
or
jl
inc
mov
dec
jo
ret
mov
jle
repz
cli
repz
dec
cmp
faddl
mov
dec
inc
xor
fisttps
movb
dec
lret
out
popa
ss
xor
pop
iret
test
and
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
jmp
movsb
pop
rclb
push
cmpb
mov
pop
adc
jp
adc
xor
and
lahf
hlt
adc
adc
ss
lret
sub
scas
mov
movsb
aam
inc
js
xchg
add
and
and
push
pop
xchg
push
push
sub
push
in
leave
addb
xchg
and
push
sub
das
sub
jns
or
push
cld
mov
lret
inc
jnp
xor
sbb
push
pop
sub
or
lds
cmpsl
test
mov
dec
mov
loope
leave
mov
mov
push
mov
rcrb
cwtl
ss
jg
cmp
sti
cmp
dec
lcall
shr
sub
nop
mov
xchg
sarl
insl
lcall
jnp
ret
leave
ds
mov
loopne
shlb
rcll
and
xchg
pop
fwait
push
pop
dec
mov
in
add
xchg
jge
jbe
pop
out
stos
cmpsl
lods
pop
sarb
sub
imul
dec
cld
add
imul
lods
inc
test
test
xchg
ret
call
imul
pop
mov
stc
push
push
sahf
outsl
aam
jnp
or
sahf
mov
scas
mov
and
mov
clc
ret
push
insl
pop
movsb
dec
adc
into
leave
fldcw
push
test
pushf
pushf
add
ret
repnz
xchg
ret
icebp
dec
and
incl
mov
or
mov
idivl
mov
cld
cltd
loope
inc
nop
jg
and
mov
inc
and
sbb
sbb
inc
movb
movsl
dec
inc
aam
outsl
mov
rolb
clc
push
bound
lds
mov
lods
lea
lret
ds
lds
inc
jl
sub
xchg
push
loope
imul
jb
mov
into
pop
repnz
stc
rcll
and
push
mov
pop
adc
jbe
xorb
sarb
gs
adc
daa
scas
cmp
or
es
add
mov
or
aaa
aaa
inc
mov
push
jb
gs
mov
nop
cmp
aam
xor
lea
dec
test
shl
xchg
mov
push
and
into
ret
cli
jno
mov
in
and
rorb
push
push
in
and
lret
xchg
fisttpl
sbb
aas
xchg
mov
into
jmp
insb
add
inc
aad
nop
cltd
pop
sub
in
push
cmpb
mov
jns
lock
enter
sbb
jecxz
ds
rorl
int3
jp
lret
inc
pop
scas
rcrl
sbb
push
cmp
mov
call
pop
pop
push
sub
adc
insl
jp
das
testl
pushf
jns
add
jbe
test
xchg
sarl
pop
aaa
and
cmp
sbb
xchg
cs
out
icebp
xchg
mov
xor
mov
pop
inc
jmp
fiaddl
mov
in
cmc
hlt
sbb
icebp
jns
aas
ds
inc
xchg
mov
push
aas
push
xor
scas
xchg
out
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
jecxz
in
bound
pop
jne
inc
stos
jle,pt
pop
adc
jp
adc
sub
xchg
out
cmp
inc
mov
mov
daa
mov
sahf
pop
xchg
pop
pop
add
scas
adc
pop
fcomps
and
push
sbb
cmp
sub
mov
pusha
add
mov
idivb
and
sub
or
insb
or
jb
fiadds
and
mov
mov
xor
mov
in
into
dec
sub
inc
imul
pop
add
arpl
shll
lahf
rcll
inc
xchg
in
rolb
fiaddl
jne
adc
repnz
push
jecxz
aas
push
aas
adc
fisubs
mov
xchg
sub
popf
js
jmp
insb
leave
daa
lret
out
dec
mov
ret
cmc
loopne
sub
rcrl
cmpsb
jecxz
movsl
scas
sub
jno
and
aam
test
adc
mulps
mov
mov
xchg
movsb
add
sub
or
into
fimuls
xchg
lret
pop
sub
je
jmp
sbb
xor
pop
repz
popl
jge
xlat
mov
test
cmp
dec
test
or
popf
jo
mov
in
pusha
cmpsl
mov
or
sub
ja
loope
dec
inc
jno
stc
and
mov
mov
mov
pop
ja
adc
inc
out
mov
daa
ljmp
ja
jmp
insb
mov
mov
lcall
js
add
mov
loopne
cmovnp
daa
push
dec
push
jp
jecxz
shll
cs
jge
fstpl
fstpt
inc
sbb
std
mov
xchg
inc
scas
mov
fs
rorb
lock
arpl
int
inc
xchg
add
mov
js
inc
xor
divl
sbb
or
ss
and
outsb
inc
mov
bound
and
mov
push
add
sub
fisubrs
and
add
or
popa
jp
dec
add
daa
mov
xor
flds
and
das
stc
mov
jmp
fistps
jne
inc
mov
int3
daa
jmp
dec
jnp
add
int3
adc
ret
subl
dec
shl
mov
sub
inc
adc
xchg
inc
jns
cmpsb
mov
ja
mov
sarb
mov
aam
push
or
xchg
daa
and
pop
fcoms
cmpsl
ja
sub
mov
sarb
fsts
aad
and
jns
ret
sub
ds
into
sub
mov
inc
imul
test
sbb
pop
sbb
and
xchg
pop
testb
xchg
add
stos
pop
jb
jecxz
push
and
push
loop
cmp
in
mov
je
lret
dec
mov
ror
mov
test
int
mov
dec
jno
mov
rclb
adc
mov
xor
in
popfw
mov
mov
and
lea
mov
shr
or
mov
jmp
pop
pop
mov
push
fisttpll
push
push
push
adc
jp
adc
cmpl
lret
shlb
cmp
mov
push
testb
cmc
into
xchg
xor
dec
mov
sub
xchg
mov
clc
aad
push
jno
and
stos
cmp
adcb
out
mov
add
push
test
icebp
push
sarl
inc
in
adc
push
ss
imul
push
mov
lret
leave
push
popf
fisttpll
inc
repnz
loop
sub
jecxz
push
pop
and
sti
int3
xor
mov
cmp
rol
fnstsw
into
sbb
mov
add
mov
pop
cmpsb
iret
push
mov
jl
or
xlat
mov
cmp
nop
cmp
adc
jmp
sbb
cmp
nop
add
out
aad
adc
adc
dec
lock
jecxz
push
pop
push
jns
cwtl
mov
inc
aam
mov
fistl
andl
xor
jmp
dec
cmp
push
inc
and
mov
pop
mov
roll
out
mov
push
cmp
cmp
insl
aaa
jmp
mov
int3
pop
repz
adc
dec
lcall
popa
in
divl
adc
cmp
xchg
sbb
repz
xchg
cld
shl
das
push
inc
mov
gs
nop
or
insb
pop
add
aaa
lret
inc
mov
cmpsl
loope
cmpsb
or
sbb
xchg
push
cli
orl
adc
aam
jno
inc
sahf
push
into
lret
push
ficoml
inc
cld
repz
or
mov
loop,pt
xchg
sub
xchg
fnstenv
mov
fcompl
int3
das
jae
or
lods
fimull
insl
mov
mov
jns
je
jle
rcrl
bound
inc
or
pushf
pop
cltd
bound
dec
jno
fsubr
cmp
push
sbb
je
and
repz
outsb
and
pop
outsl
mov
mov
movsl
xor
aam
iret
out
jnp
jb
stc
pop
xchg
aad
push
pushl
mov
mov
out
sub
dec
jmp
enter
push
mov
mov
cld
aad
or
fidivl
mov
lods
int3
xlat
add
xchg
cmpb
push
mov
repz
jno
lds
es
pop
pop
jl
adc
addb
stos
mov
out
sbb
nop
test
movsl
lcall
jnp
icebp
je
cltd
lea
mov
aam
fdiv
lret
out
inc
push
jbe
and
out
shll
aas
in
mov
mov
fcoms
xchg
push
mov
out
adc
mov
and
es
jb
mov
divl
mov
xchg
ds
sbbl
test
lds
faddl
jno
aaa
sbb
cmp
mov
pop
popf
mov
add
cmp
jbe
pop
leave
ret
push
mov
sub
mov
add
push
push
add
push
or
mov
sbb
mov
shrd
cmpl
movzbl
movl
mov
jmp
mov
mov
jne
push
push
push
pushl
push
pushl
call
orl
and
mov
mov
sbb
sub
negl
shr
cmpl
movl
mov
jmp
movzwl
jg
push
push
pushl
call
add
movzbl
adc
mov
adc
movzbl
sbb
xor
xor
xor
mov
sub
sub
mov
adc
mov
movzwl
or
mov
mov
movzbl
xor
xor
xor
mov
xor
mov
or
neg
mov
mov
sbb
shl
mov
sbb
shrd
sub
xor
adc
shr
xor
or
add
mov
jmp
jnp
add
mov
ficoms
push
jo
js
inc
adc
lea
adc
sub
loope
fcomp
mov
fstpt
jb
ss
xor
push
je
insl
jo
or
or
xor
sub
sub
imul
pusha
inc
sub
lret
cmc
and
je
pop
push
pop
sub
mov
add
les
clc
push
push
xor
adc
and
add
mov
jbe
pop
test
repnz
push
xor
mov
mov
mov
sbb
loopne
cmpsb
popf
mov
mov
sbb
mov
sbb
mov
sahf
push
push
lock
jne
ja
lea
es
mov
xor
icebp
fsubs
int3
jae
jnp
adc
movsl
testl
xor
jmp
sub
scas
inc
movsb
in
andl
in
insl
pop
subl
out
jl
insb
add
hlt
or
das
mov
outsl
popa
pop
loop
jecxz
jno
cwtl
call
add
inc
sbb
in
lcall
jbe
jne
jp
fs
dec
xor
push
fildll
in
xor
imul
out
dec
cmp
xlat
jmp
test
jecxz
and
testb
scas
lock
adc
pushf
adc
or
fistps
lods
ds
das
fsub
mov
mov
lret
popa
cmp
push
sbb
loop
jbe
popf
into
mov
scas
int
pop
ds
mov
add
leave
mov
mov
movsl
js
push
push
lds
scas
enter
ljmp
jns
adc
xchg
ret
and
into
stos
ljmp
mov
mov
dec
and
movsb
add
je
addb
fs
inc
xchg
shlb
gs
lcall
sub
adc
adc
stos
adc
or
mov
push
movzbl
add
and
push
jbe
push
xchg
sbb
stc
movsl
inc
mov
rolb
notb
orb
fwait
xchg
lret
aaa
into
std
arpl
fwait
pop
cmp
dec
arpl
clc
cltd
xchg
sti
clc
jl
mov
sti
mov
or
cwtl
mov
aas
hlt
push
addr16
xchg
jmp
push
inc
repnz
cld
mov
and
insl
and
movsb
adc
push
movb
subb
mov
jge
fdivrs
mov
adc
pop
pop
outsl
je
mov
std
daa
push
cmp
mov
fnstcw
pop
add
shlb
add
loope
add
xchg
mov
sub
les
loopne
adc
lea
adc
push
pop
adc
push
pusha
push
pop
pop
dec
xor
sub
popa
push
add
pushf
xchg
cltd
jne
cli
mov
icebp
inc
movsl
sub
sub
or
out
in
ljmp
out
mov
xor
dec
mov
test
fnstcw
adcl
scas
add
fldt
mov
add
pop
push
jbe
mov
inc
mov
negb
add
sahf
jns
out
bndldx
jle
mov
addb
fdivrp
popa
sbb
mov
insl
or
mov
mov
outsb
mov
jp
sub
pop
fsub
out
xchg
push
inc
lock
fisubs
stos
push
mov
mov
cmp
jno
pop
sahf
je
add
ljmp
cmc
ret
mov
mov
nop
adc
mov
push
aad
inc
inc
lahf
and
sbb
popf
dec
pop
mov
cmp
sbb
nop
hlt
mov
push
rorl
lds
xchg
aam
loopne
rcl
pushf
cmpsl
sahf
stos
dec
xor
cmp
sbb
xor
jno
stos
addr16
rcrb
adc
xchg
jmp
and
jo
imul
in
fwait
enter
iret
imul
jo
add
sarb
subl
adc
sub
cmpsl
movsb
fs
ret
mov
jb
dec
clc
out
push
add
adc
xchg
pop
add
ja
popf
pusha
movsl
xchg
mov
out
mov
sbb
mov
push
fidivrs
ficoms
int
insl
inc
sbb
mov
aaa
add
out
inc
es
mov
test
dec
out
mov
cli
xor
je
and
sub
gs
popf
stos
cltd
rcr
jne
mov
sbb
fildl
or
jbe
lahf
leave
stos
push
sub
xor
push
filds
and
in
sbb
jne
nop
dec
adc
mov
ja
mov
int
std
int
and
int3
pop
cmp
stc
lock
stos
or
jnp
push
xchg
cmp
adc
fwait
es
push
adc
imul
ja
sbb
shll
jno
jecxz
cvtpi2ps
in
test
xchg
cmp
pop
dec
and
push
and
pop
shl
jle
cwtl
jmp
push
fldl
jecxz
cwtl
sbb
clc
mov
push
push
xchg
dec
sub
or
insb
xchg
shlb
mov
cmpl
movl
not
mov
jmp
mov
jg
push
push
push
call
sbbl
adc
andl
mov
mov
xor
xor
or
mov
adc
adcl
neg
xor
or
mov
mov
sub
or
mov
mov
xor
or
mov
sub
sub
mov
xorl
mov
or
mov
xor
mov
movzwl
sub
mov
cmpl
mov
mov
mov
jmp
mov
jle
push
call
sub
and
subl
or
or
adc
mov
mov
cmpl
movzbl
mov
jmp
mov
jb
push
push
call
mov
xor
xor
sub
or
xorl
adc
sub
sbb
mov
shl
mov
sub
xor
or
xor
sbb
mov
xor
adcl
shld
shl
mov
mov
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
xor
xor
add
sbb
xor
xor
mov
cmpl
mov
mov
mov
mov
jmp
movl
movl
jg
push
call
movl
and
sub
subl
movl
mov
shld
movl
shl
cmp
movl
jne
movl
cmp
je
and
mov
xor
or
and
mov
push
movl
pop
or
xor
shl
mov
addl
xor
adcl
shr
addl
or
mov
or
mov
mov
mov
mov
cmpl
movzbl
mov
jmp
mov
mov
jl
pushl
push
pushl
push
call
mov
add
inc
mov
and
sub
mov
jmp
add
int3
sub
inc
les
pop
inc
adc
lea
adc
out
sbb
andb
inc
dec
lds
pop
cli
mov
mov
loopne
adc
out
lock
xor
mov
lock
dec
mov
nop
sub
fildl
in
std
sbb
subl
pop
out
jo
cli
sar
fmuls
js
jp
in
push
mov
push
mov
test
cld
jb
jmp
mov
outsb
jne
decl
mull
or
lahf
mov
ds
out
push
imul
pop
aad
sub
int3
xchg
push
add
int
sbb
pop
sbb
sbb
xor
mov
adc
mov
lret
aam
mov
frstor
jg
inc
lock
rcll
jmp
into
and
mov
add
imul
insl
leave
mov
shlb
jge
outsl
or
jno
out
adc
mov
cmpsb
pop
mov
aam
inc
mov
dec
stos
mov
sti
leave
das
enter
icebp
daa
cmpsl
jg
dec
in
dec
or
std
shlb
leave
cmp
xchg
push
imul
adc
adc
pop
repnz
xabort
nop
sub
nop
push
xchg
mov
ror
scas
dec
jbe
inc
inc
push
mov
pop
scas
push
push
je
xchg
add
cmp
fwait
xor
ret
and
bound
sarl
in
lods
inc
push
in
cltd
in
fdivrs
lods
sti
push
aas
mov
ret
adc
and
add
rcrb
xchg
xor
lds
lahf
out
fdivs
inc
test
adc
int
jmp
mov
pop
hlt
int
or
jl
fldl
hlt
pop
fsubl
int3
cs
lods
mov
ja
lock
mov
sub
cmp
mov
mov
cmc
sub
fimuls
dec
jmp
icebp
inc
cmp
pop
dec
je
dec
mov
cmp
enter
movsl
gs
lods
rcrl
or
fwait
mov
shl
and
test
icebp
int3
pop
in
push
xor
and
lea
xchg
mov
xlat
sbb
insb
or
mov
cmp
mov
int3
lods
jno
dec
iret
pop
out
lods
or
pop
call
dec
xor
xor
push
int
repz
mov
pop
mov
mov
stc
lea
adcl
dec
mov
clc
push
pop
sub
mov
subl
add
mov
cmpl
movzwl
movzbl
mov
mov
jmp
movl
movl
ja
pushl
call
or
and
or
xor
mov
adc
adc
mov
xor
mov
lea
andl
mov
addl
mov
xor
mov
xor
xorl
xor
addl
shr
subl
shl
or
mov
movl
add
mov
mov
xor
xor
andl
shr
addl
shl
sbbl
or
subl
push
lea
push
subl
lea
push
call
cmpl
mov
mov
jmp
mov
movzwl
ja
pushl
push
push
call
adc
movzbl
sub
and
mov
xor
adc
or
sub
xor
xor
mov
and
mov
cmpl
movl
mov
mov
jmp
movl
movl
jae
push
pushl
pushl
pushl
call
sbb
sub
adcl
or
sbb
xor
add
mov
sub
and
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
jmp
mov
pop
cmp
shlb
sbb
pusha
js
aaa
adc
lea
adc
cmp
xlat
fucomip
xor
xchg
lahf
pushf
pop
xor
push
dec
ret
mov
andl
push
roll
shr
pop
imul
dec
ret
nop
test
push
or
add
inc
aaa
sub
inc
mov
add
lds
jl
rclb
dec
insl
push
out
xchg
add
cwtl
pop
jb
sbb
in
aad
push
fbstp
out
cmp
push
lods
or
mov
pop
pusha
dec
mov
pop
inc
add
flds
stos
cmpsb
or
pop
inc
sbb
aaa
sarb
cli
nop
mov
cmp
mov
mov
add
inc
fsts
mov
sub
mov
call
pop
or
jbe
enter
xchg
out
hlt
std
and
int
test
jl
or
std
fs
movsl
clc
xor
mov
lock
lret
xor
movb
sarb
dec
inc
sbb
loopne
lds
adc
fs
push
lahf
pop
lea
xchg
cwtl
clc
add
xor
and
mov
test
and
push
popf
jns
mov
lcall
and
cld
add
sbb
dec
orl
and
test
lods
mov
add
addr16
dec
int3
das
pusha
add
jmp
xchg
and
xchg
movsl
push
xor
mov
ret
and
lcall
pop
jbe
aad
xchg
stos
sbb
push
or
push
fiadds
aas
cmp
push
sub
lock
fnstsw
pop
es
sbb
cmp
dec
pop
popf
ds
mov
pop
nop
jle
scas
les
fcomps
mov
fildll
into
fwait
lods
arpl
bound
test
in
jmp
mov
in
pop
push
insl
hlt
mov
jnp
dec
fcmovnu
push
lds
sbb
cmp
cwtl
sbb
cmc
pushf
ja
dec
dec
mov
les
test
jmp
jl
outsb
addr16
dec
sbbl
jl
mov
ja
sbb
dec
fstp
idivl
scas
cmpsl
push
jno
push
mov
cmpsb
inc
dec
dec
mov
jle
jp
mov
xchg
jg
stos
repz
iret
mov
or
dec
sub
aad
pop
dec
ss
xrelease
xchg
lcall
and
sarb
xchg
outsb
aaa
ret
movzwl
inc
or
mov
pop
push
mov
insl
jmp
jmp
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
jmp
xchg
sbb
sbb
bound
xor
adc
shrb
push
ffreep
mov
xor
push
sti
add
out
xchg
dec
in
cmpsb
xchg
outsl
mov
add
or
jb
adc
in
les
mov
xor
jg
xor
out
inc
daa
fildll
jmp
ja
lods
pop
imul
sub
rcrb
xchg
dec
popf
mov
sbb
popf
jl
add
jnp
mov
int
repz
ss
outsb
pop
xchg
cmp
or
adc
lea
into
jmp
test
fs
push
cmp
je
lcall
mov
xor
rcrl
dec
jmp
jno
xchg
insl
popf
inc
les
out
imul
loopne
add
jge
andb
jo
xor
add
loop
mov
sahf
sbb
mov
insb
insb
es
pop
push
or
mov
shr
into
pop
cmp
ss
in
or
or
shr
mov
dec
bound
dec
and
mov
das
xor
jno
add
adc
cmp
stos
stc
mov
sub
test
decb
insb
sbb
sahf
les
insl
adc
pop
daa
pop
inc
arpl
lret
add
jmp
outsl
in
mov
xchg
nop
popf
jmp
mov
mov
inc
call
jo
popa
aaa
jg
scas
jbe
test
adc
bound
jle
dec
dec
push
outsl
stos
mov
push
les
popf
and
fisttpl
push
sbb
mov
aad
aaa
jmp
mov
aaa
xor
inc
pop
in
cmp
pop
pushf
lods
iret
sahf
in
push
adc
add
jecxz
ret
pop
jle
mov
sbb
add
int
fldcw
shlb
inc
mov
mov
or
movsb
pop
pop
and
int3
mov
sub
lret
and
hlt
mov
xor
push
pusha
clc
push
jg
sbb
pop
cmc
lods
sub
leave
mov
mov
repz
in
enter
mov
mov
or
jl
dec
add
jo
hlt
loop
xor
mov
inc
dec
mov
aaa
imul
xor
mov
lret
xor
mov
fiadds
pop
mov
jne
adc
sbb
sub
adc
fs
sbb
push
sbb
sbb
jno
mov
nop
enter
in
sub
or
jnp
lods
mov
in
jae
mov
fcmovnu
out
out
cld
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
jmp
mov
add
sub
jle
sub
and
mov
lea
adc
mov
in
adc
mov
jae
dec
fwait
mov
int
or
ret
std
pop
lret
inc
je
ror
mov
adc
sahf
in
clc
loop
imul
xor
add
std
push
test
dec
in
icebp
cmp
popf
pop
inc
xchg
in
into
mov
sahf
stc
xchg
cltd
and
push
orb
or
sub
push
push
inc
nop
xchg
subl
inc
jl
push
mov
ss
leave
fs
idivb
loopne
push
inc
out
sti
in
or
pop
lret
out
mov
jle
jnp
rorl
insb
ja
adc
cmp
xor
lcall
outsb
les
cmp
bound
cltd
mov
shlb
mov
jb
mov
movsb
xlat
push
adc
jmp
mov
icebp
in
popf
sbb
cs
dec
fcmovne
adc
jge
jno
in
dec
in
out
movhps
rcll
push
test
in
sbb
pop
pop
pop
ljmp
data16
adc
int3
jbe
nop
add
xor
arpl
adc
in
inc
in
out
lahf
ss
ljmp
addb
inc
dec
neg
js
dec
shl
jg
or
pop
inc
and
addb
aam
sbb
mov
flds
hlt
fstpt
inc
or
xchg
sub
shrl
xor
xchg
cmp
pop
and
inc
shlb
xchg
dec
jnp
jno
negb
dec
fldl
jb
mov
mov
sbb
dec
xchg
nop
cmp
or
mov
push
aam
dec
mov
loop
les
or
call
adc
pusha
mov
lods
int3
xor
inc
pop
inc
sti
cwtl
mov
das
cmpsb
sahf
pop
push
jg
mov
insl
mov
popa
or
xchg
jo
test
imul
or
popf
repnz
lods
idivl
ljmp
mov
cmp
or
pop
mov
sub
or
dec
sbb
jle
cld
test
test
out
xlat
xlat
loope
gs
mov
iret
lahf
repnz
mov
jo
loope
push
mov
insb
mov
mov
or
or
stc
xchg
mov
ret
mov
rorb
pop
pop
xchg
inc
repz
stc
mov
repz
ret
pop
pop
test
mov
dec
or
xor
or
push
add
jmp
and
lods
and
js
leave
js
daa
adc
lea
adc
inc
adc
lock
adc
xor
rep
lea
cli
adc
pop
fists
inc
adc
ds
jns
pop
mov
inc
jmp
mov
xor
lret
mov
adc
lret
imul
sub
mov
mov
pop
mov
or
fs
push
adc
sbb
xchg
push
cmp
lret
in
pusha
xchg
fistps
dec
fidivl
clc
lods
push
jg
lds
mov
in
dec
pop
das
mov
ret
out
jmp
cmpsb
into
lods
push
jmp
cwtl
inc
sub
scas
aam
mov
inc
fcomps
outsb
sbb
add
nop
sbb
mov
mov
pop
adc
mov
inc
test
adc
sti
ja
xlat
hlt
cmpb
xchg
or
test
mov
inc
out
popa
sbb
jmp
lahf
jle
pop
and
subb
les
ret
rcll
in
xchg
xlat
cmp
dec
sub
jnp
add
mov
decl
in
cli
js
notb
scas
roll
pop
mov
dec
dec
mov
fsubrl
bnd
adc
mov
out
lods
iret
mov
pmullw
inc
xor
sub
es
xchg
lret
incl
sbb
ja
push
das
pop
hlt
rcrl
cmp
push
push
mov
sub
lret
pop
pop
inc
jg
mov
add
scas
mov
outsl
les
js
dec
std
rcr
insb
jnp
push
test
xchg
jnp
xor
xchg
vpperm
into
andb
sub
in
add
mov
daa
xor
and
fisubrs
insb
out
das
mov
pop
popf
int3
lcall
jae
sub
addr16
mov
out
idivb
lret
adc
das
mov
out
dec
test
cwtl
adc
sub
mov
xchg
sbb
mov
popa
adc
aas
cmpsb
mov
mov
std
mov
mov
push
mov
jl
in
repnz
in
lods
sbb
ja
and
cmpsb
inc
jmp
enter
add
push
popa
das
pop
aas
sub
out
faddl
hlt
adc
or
jns
repz
inc
mov
ret
lret
inc
dec
pop
mov
bnd
ret
les
nop
mov
mov
xor
jno
push
notb
pop
ljmp
lea
push
shl
call
jmp
outsl
xchg
pop
test
add
mov
movlps
jb
fcoml
jg
cmp
jp
int3
push
or
inc
test
or
lods
pop
rorl
sub
lahf
insb
dec
aas
jl
pop
stos
mov
mov
mov
cmp
pusha
ja
stc
mov
or
sbb
add
stos
bound
sub
adc
ja
jo
push
xchg
sbb
cltd
push
adc
dec
stc
mov
mov
sbb
fwait
cwtl
adc
jae
fdiv
cmp
inc
pop
sti
aas
or
cltd
es
lds
nop
push
mov
mov
fmull
and
leave
pop
sbb
or
psubd
loop
dec
ljmp
cwtl
add
out
sub
in
cltd
pop
fstpt
arpl
add
ljmp
int3
cmp
scas
fmul
adc
cmp
cmp
jp
pop
dec
xchg
and
adc
cmp
jl
sub
shlb
cs
fstl
mov
movsb
push
xorl
xchg
insb
xor
mov
sbb
and
mov
loope
jnp
cwtl
cmpsb
mov
xchg
jb
out
sbb
lea
popa
addl
cltd
imul
and
jno
js
cmpb
xchg
subl
mov
fimuls
lds
ret
rcrb
subl
in
mov
lahf
in
rcl
cs
xchg
mov
negl
out
lret
xchg
jp
and
push
dec
jo
xor
lds
das
enter
inc
push
sti
lods
jns
or
les
cld
mov
xchg
movsb
mov
mov
hlt
inc
int
and
inc
pop
lods
pop
xchg
je
out
cmc
add
sbb
fcomps
aad
ret
movsl
sbb
push
test
sub
loop
test
out
pop
or
roll
insb
push
mov
sub
xor
mov
rcll
jl
mov
popf
and
push
leave
test
into
test
pop
jo
aad
mov
inc
jo
popa
test
xchg
push
jle
dec
loope
inc
xorl
cmp
cmp
mov
into
loope
cld
sbb
repnz
out
popa
fs
mov
adc
popf
in
dec
test
mov
imul
cmp
fcomp
enter
loop
inc
cli
pop
adc
es
scas
rcrb
xor
push
pop
repz
fwait
es
push
icebp
dec
mov
cmp
fdivr
xchg
cmpl
add
push
jae
pop
repnz
shll
sbb
dec
or
mov
cltd
cmp
shrl
inc
adc
enter
add
adc
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
jmp
jge
jbe
jne
jge
das
adc
sahf
lods
push
sbb
adc
xchg
adc
or
jbe,pt
jp
xor
mov
and
xchg
dec
leave
or
mov
cmp
xchg
mov
pop
lea
test
lret
jle
dec
out
lret
stc
or
sbb
cmp
xor
fucom
inc
les
xchg
repnz
out
cld
aaa
xchg
inc
loopne
in
loopne
divb
and
lods
mov
pop
std
dec
mov
mov
inc
jne
cmpsl
out
sub
testb
rol
in
inc
inc
add
addr16
popf
and
stc
pop
inc
jb
scas
js
and
sbb
dec
jl
inc
fstpt
xlat
negb
cmc
xchg
xor
jnp
out
jo
sbb
or
jno
sbb
dec
mov
fwait
xchg
test
jbe
add
xchg
fwait
ret
dec
and
mov
mov
or
into
in
xor
xchg
in
cmp
or
and
and
movsb
cmc
xor
aam
ljmp
add
scas
push
jmp
cmp
popf
and
jle
mov
mov
lock
cmp
adc
pop
xor
int
insl
dec
sbb
rcrb
xchg
out
add
push
push
dec
outsl
xchg
stos
pop
sti
jae
mov
pop
cmp
ficoml
popa
testl
repz
imul
inc
loop
mov
loop
mov
mov
mov
movsb
daa
in
jecxz
mov
dec
imul
mov
mov
mov
into
sbb
push
xchg
jle
les
mov
cwtl
push
fwait
arpl
cli
cmc
dec
popf
cmp
cld
jg
adc
push
mov
and
inc
inc
das
decl
lods
loop
mov
dec
push
dec
jnp
cs
subl
mov
sub
jne
popa
fisttps
enter
and
sub
push
mov
sub
es
mov
mov
sub
lock
divl
pop
cmp
iret
mov
pop
fildl
mov
gs
int3
and
fistpll
fcmovb
mov
subb
cwtl
in
stos
sti
adc
mov
fcompl
into
jns
or
inc
jg
in
push
lret
out
test
mov
sub
data16
or
mov
scas
enter
and
ss
inc
aad
mov
mov
into
mov
xchg
das
add
inc
lods
cmp
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
adcl
or
mov
mov
jne
cmpl
movl
movl
movl
jmp
mov
mov
jne
push
pushl
pushl
push
call
adcl
sbbl
add
orl
xorl
subl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
fs
push
stos
sbb
dec
loop
filds
jle
sbb
adc
mov
jmp
xor
cwtl
cmpsl
jmp
or
add
mov
faddl
sbb
sbb
pop
shlb
cmp
insb
xchg
movsl
sbb
lcall
or
xchg
jl
div
sbb
addr16
mov
push
pop
pop
cmc
in
insl
dec
dec
jg
leave
pushf
popf
or
pop
enter
mov
pop
ljmp
cmp
cmp
ss
and
inc
sarb
frstor
sbb
add
mov
xchg
and
or
sbb
add
push
and
lea
jg
out
scas
jae
or
pushf
push
xor
mov
mov
push
pop
dec
or
inc
mov
arpl
sbb
cmp
into
xor
mov
sbb
jo
jl
xorb
pop
insl
ds
push
leave
adc
stos
mov
insl
or
or
ret
movsb
adc
pop
adcl
fs
and
movsl
imul
lods
mov
jo
inc
and
aad
pop
xchg
data16
hlt
cmpsb
jg
in
lods
and
sub
sahf
cltd
adcb
mov
cmpsb
fsubrs
test
fdivs
inc
xchg
into
sbb
leave
cwtl
inc
cs
mov
loope
sbb
mov
ja
push
jge
add
addb
xor
daa
cwtl
mov
jae
ret
rep
nop
add
lret
icebp
idivb
pop
xchg
pop
out
addr16
cmp
shll
inc
enter
jae
cmp
fists
aad
xchg
fstl
lcall
fwait
jl
xchg
aas
pop
jp
dec
push
pop
and
push
sub
mov
addr16
mov
in
dec
scas
test
cmp
add
fcmovu
insb
pusha
int
dec
subl
cmp
in
insl
int
addr16
push
cmpsl
mov
idiv
fidivrs
fnstcw
cltd
cmp
in
outsl
addr16
sbb
das
mov
out
das
fsubl
push
scas
sbb
cmp
jbe
jbe
gs
fdivl
fbstp
nop
sahf
out
push
insb
pop
xchg
dec
popa
mov
xor
push
lret
repz
xor
std
cmp
lods
sbb
sub
cmp
shl
or
sbb
addl
cmpsl
ret
sub
dec
xchg
mov
sbb
inc
jg
shll
cli
sarb
pop
push
or
inc
pop
in
sbb
es
sbb
jg
dec
push
addr16
mov
loopne
cwtl
add
test
and
adc
add
das
lahf
and
loopne
add
aad
add
imul
out
adc
or
jnp
xchg
xchg
inc
fs
cltd
aas
daa
pop
push
jge
push
cld
mov
ret
jbe
add
xchg
pop
jg
jns
adc
jo
xchg
sub
andb
lds
dec
scas
insl
push
mov
and
mov
jae
data16
loope
rorb
push
outsb
adc
or
inc
pop
mov
scas
xor
xchg
xor
push
dec
push
mov
mov
lods
add
fwait
pop
push
int3
shlb
xchg
push
push
sbb
in
push
divl
fnstsw
lret
push
sarb
push
ljmp
push
je
inc
cld
or
add
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
jmp
imul
scas
std
dec
and
roll
unpckhps
mov
fsubrl
inc
pop
xchg
xor
inc
imul
js
std
fldenv
fildl
sbb
add
nop
ljmp
daa
shrl
call
xor
mov
xor
movb
jno
rcrb
xor
mov
ret
xor
mov
adc
sbb
push
mov
pop
push
jmp
sahf
mov
lds
mov
ret
popa
int
mov
mov
repnz
inc
or
or
roll
icebp
mov
ljmp
xchg
outsb
jns
adc
fists
xlat
mov
push
std
jnp
shrl
in
sbb
sbbb
dec
out
and
mov
psrlw
imul
inc
sbb
insl
sub
cltd
cmp
fiadds
aad
lds
call
lret
stos
jg
dec
xor
arpl
cld
ds
or
mov
pop
pusha
pop
add
cmp
jnp
sahf
sahf
pop
repz
xor
mov
aas
pop
gs
jp
cmp
jmp
fimull
sub
pusha
cmp
stos
repnz
xchg
inc
jnp
lea
lds
push
pop
test
fdivs
mov
pop
sbb
cld
in
xor
lahf
scas
cltd
xor
mov
lods
dec
mov
into
dec
arpl
cmp
je
cmp
lcall
jae
or
mov
cmpb
icebp
sbb
stc
sbb
xor
xor
dec
es
jmp
sub
mov
mov
or
jg
mov
jle
sub
fimuls
mov
cltd
cmp
mov
dec
fadds
addr16
xor
inc
movb
iret
jne
les
push
js
dec
enter
xchg
les
adc
leave
mov
xor
in
adc
jg
jno
lods
cmp
and
sub
xor
and
fucomi
popa
jae
cli
xor
push
pop
insb
and
jle
bound
mov
cmc
adc
scas
jp
insb
shr
bound
bound
jecxz
daa
push
cld
lcall
sub
mov
imul
cmpl
leave
cltd
fmulp
pop
shll
loop,pt
fimull
xchg
ret
cmpb
in
add
xchg
scas
or
jmp
fldl
call
rorb
inc
xchg
sbbl
mov
aad
mov
or
pusha
flds
in
sub
outsb
and
xchg
pop
mov
inc
jno
popf
imul
mov
and
jp
stos
mov
jb
push
sub
xor
mov
subl
jo
push
fmuls
xor
jo
and
add
cli
and
push
jecxz
das
sbb
leave
pusha
lock
mov
imul
push
adc
ds
imul
mov
jo
enter
ljmp
sub
sub
mov
scas
pop
dec
push
sbb
pop
insl
sub
call
inc
and
and
rorb
mov
movsl
dec
shlb
push
mov
lods
dec
je
sub
mov
mov
gs
mov
lahf
test
shl
mov
je
popl
pop
lods
repz
mov
leave
jnp
add
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
jmp
lret
lahf
push
pop
sbb
leave
pop
jmp
call
mov
mov
mov
xor
ss
or
sub
mov
adc
mov
enter
jbe
mov
sti
mov
lahf
rorb
pop
and
xor
and
arpl
lcall
aam
iret
or
adc
mov
xor
dec
mov
out
test
scas
hlt
lret
sbb
and
mov
negb
loope
lret
add
pop
cli
dec
or
jl
outsl
pop
jl
into
outsb
adc
enter
test
push
imul
scas
lea
inc
push
gs
lods
pop
ss
fucomi
insl
sahf
sti
rorl
mov
fs
ljmp
loopne
repz
cmp
adc
cli
nop
jno
cmpsb
mov
sub
repz
aad
das
fsubl
sbb
inc
lds
shll
cli
pushf
fsubr
sbb
mov
adc
cmpsl
mov
add
xor
lahf
mov
rol
inc
and
ret
into
icebp
mov
mov
xor
loopne
pop
testl
xor
and
aas
icebp
sti
dec
aad
dec
dec
xor
and
push
inc
mov
call
cld
xor
sahf
roll
popa
mov
sti
sti
inc
mov
sub
aaa
fidivrs
gs
jnp
adc
lcall
sbb
mov
icebp
push
lret
jmp
stos
cmp
shll
xor
mov
adcl
lahf
add
sub
mov
inc
jl
gs
jge
sub
das
outsl
ds
pop
xchg
cs
jbe
mov
xchg
imul
rcll
jge
xchg
dec
lock
and
push
test
cld
outsl
xchg
das
addb
out
into
adcb
pop
pop
mov
dec
rcr
fistpll
stos
sarb
pop
out
jne
push
and
jmp
andb
ljmp
mov
pusha
and
push
sbb
das
lods
arpl
sbb
adc
subl
sbbl
jno
pusha
arpl
adc
dec
xchg
jl
out
or
out
and
or
dec
inc
sub
leave
roll
out
jmp
mov
jne
inc
xor
mov
cwtl
lahf
add
stos
outsb
push
push
jmp
xchg
dec
jne
loope
ror
adc
add
dec
bound
sbb
mov
xlat
adcb
les
nop
xor
ret
jp
cmp
sub
mov
int3
fdivrl
orb
dec
loope
xor
insl
adc
data16
repz
enter
jp
push
lds
pusha
movsl
scas
fisttpl
pop
inc
lcall
sub
andb
rolb
js
xor
movsl
aaa
sub
lock
and
xchg
pop
fisubrs
adc
cmpsl
in
repz
fidivs
in
mov
inc
imul
jbe
mov
adc
jno
bound
in
bound
sahf
iret
jecxz
pop
add
mov
outsb
add
dec
dec
out
push
bound
in
jmp
mov
sahf
frstor
sbb
and
inc
fcmovb
dec
push
dec
js
inc
clc
rclb
mov
lret
mov
imul
aam
push
lock
sub
daa
cmp
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
call
mov
movzbl
push
call
test
jne
xor
jmp
adc
mov
cmpl
movl
movl
movl
jmp
movzbl
jbe
pushl
call
orl
addl
adc
sbbl
andl
mov
xor
mov
jmp
xor
push
or
cli
sbb
cmp
scas
insb
mov
adc
adc
lods
adc
dec
loope
int
dec
mov
dec
inc
testb
inc
rorb
ret
sbb
mov
and
mov
imul
xor
stc
rcll
xor
gs
rolb
sbb
xchg
cmp
addb
pop
cltd
and
cmpb
add
repz
insl
mov
mov
nop
shlb
icebp
movsb
je
pop
stos
push
repz
add
sahf
scas
lcall
dec
fstps
sbb
or
mov
ret
stos
ljmp
push
icebp
gs
sahf
adcl
adc
ljmp
xchg
loop
loop
or
mov
or
sub
testb
roll
jl
or
xchg
sahf
sbb
push
pusha
xchg
xchg
adc
in
push
cmp
cmpsb
int3
push
jo
or
out
test
mov
inc
dec
mov
pop
dec
rol
fimuls
jp
into
fwait
adc
inc
jno
or
adc
mov
aam
test
mov
popf
dec
repnz
xlat
das
imul
pop
or
xor
lds
mov
mov
insl
sub
andb
or
scas
ja
pop
rolb
into
mov
shlb
scas
sub
fcmovnb
je
daa
aas
lret
loop
out
daa
int3
leave
rclb
cmc
or
cli
mov
sub
in
pop
dec
imul
sbb
sub
js
fsubp
and
xchg
ret
bound
cmpl
ficomps
inc
dec
es
pusha
enter
rcl
inc
or
ss
sbb
push
and
sub
outsl
sub
xor
jmp
jmp
xchg
sbbl
test
outsb
pop
mov
fidivrs
imulb
push
sub
inc
pop
fucomi
data16
jmp
xchg
push
stos
mov
xor
push
mov
or
mov
jns
mov
outsl
sub
dec
push
add
cmpsb
stos
aad
push
popf
sub
sbb
in
ret
xchg
ret
mov
push
mov
jl
addr16
mov
shr
push
inc
push
jge
push
ds
inc
dec
or
mov
sar
out
movsl
ss
or
and
fldl
fistpl
mov
mov
cmpl
movl
movl
jmp
movl
mov
je
push
call
addl
subl
and
andl
movl
orl
movl
adcl
push
mov
add
pop
mov
cmpl
movl
movl
movl
movl
jmp
not
movl
jl
pushl
push
push
push
push
push
push
push
call
subl
subl
addl
adcl
andl
neg
mov
xorl
mov
movl
mov
movl
mov
andl
movzwl
or
cltd
movzwl
xorl
idiv
cmpl
mov
movl
mov
mov
jmp
movl
movl
jne
pushl
push
push
call
xor
xor
mov
and
or
mov
mov
sbb
movzwl
sub
sbbl
movzbl
sub
mov
sub
mov
movzwl
addl
or
mov
or
mov
cmpl
movl
mov
mov
mov
jmp
movl
movl
jae
push
pushl
push
pushl
call
sub
sub
adcl
mov
or
addl
mov
mov
mov
movl
mov
mov
adc
mov
sbbl
sub
sbbl
mov
andl
xor
sbb
jmp
mov
sbb
push
mov
insb
or
adc
adc
push
mov
inc
push
jnp
xor
sub
mov
sub
push
sub
jne
cmpsl
xchg
mov
pop
adc
inc
xchg
pop
orl
ficoms
xchg
push
push
or
lods
insl
test
lock
loop
and
cmp
pop
xor
int
push
mov
dec
arpl
mov
cmp
mov
cmp
dec
mov
shlb
outsl
std
dec
scas
push
adc
sbb
stos
pop
pusha
push
dec
hlt
cltd
incb
xor
cmpsl
rdtsc
add
insb
fisttpll
cmp
outsb
mov
sbb
adc
scas
mov
push
int
or
sbb
push
std
jo
mov
lds
and
das
into
xor
xchg
pusha
mov
or
jp
pop
xchg
mov
cmp
sub
or
cmp
in
fcomi
cmp
and
ljmp
jb
pop
mov
incb
in
std
and
es
lret
mov
xlat
mov
or
imul
and
and
scas
fimull
je
leave
mov
fildll
push
int
and
cli
xchg
dec
cmp
push
mov
mov
std
addb
push
paddusw
sbb
jae
xchg
xchg
xchg
sbb
mov
mov
pop
scas
mov
xchg
jns
stos
mov
mov
sahf
ficoms
popa
and
or
dec
out
and
add
cli
aaa
rolb
push
lock
pushf
xchg
dec
leave
test
enter
shll
ret
cmp
pop
push
lahf
fimuls
or
popa
lock
inc
cmp
add
ja
in
or
cltd
push
xchg
jnp
lods
outsb
imul
es
ficompl
mov
dec
test
stos
jno
scas
imulb
push
push
add
jle
data16
jb
dec
xor
dec
or
mov
xchg
mov
das
sub
jb
outsb
sbb
in
xchg
push
sbb
stos
fwait
pop
mov
jecxz
and
mov
dec
out
cmp
stc
and
lock
mov
sahf
test
jl
add
xchg
mov
out
ficoms
sarl
cmp
leave
shll
and
loopne
shl
and
fbld
adcb
xchg
and
inc
push
cli
dec
das
test
fsubs
jne
inc
sub
rcrb
dec
rclb
mov
push
xor
jle
mov
dec
aaa
mov
jecxz
sarl
mov
or
daa
mov
sub
movl
mov
movl
cmp
movl
jb
sbb
movl
movl
movl
cmpl
movzbl
mov
jmp
movl
mov
jbe
pushl
call
sbb
mov
sub
mov
and
inc
movl
and
mov
cmpl
mov
movl
movl
mov
jmp
mov
jb
pushl
pushl
push
push
call
andl
sbbl
mov
sbb
movzbl
or
xor
xor
xor
xor
orl
add
mov
orl
xor
sbbl
div
mov
add
sbbl
and
pushl
pushl
call
movl
movl
mov
adc
movl
cmpl
movl
mov
mov
jmp
movl
movl
je
push
push
call
adc
xor
xor
mov
sbb
xorl
or
mov
xorl
mov
adcl
and
addl
or
mov
subl
and
xor
adcl
pushl
pushl
addl
call
not
pushl
dec
movl
movl
xor
movl
subl
movl
or
movl
cmpl
mov
mov
not
mov
jmp
movl
mov
jl
pushl
push
push
push
push
call
xor
and
sbb
adcl
movzwl
or
movl
movl
xor
movl
mov
dec
mov
andl
sub
sbb
mov
or
orl
and
xor
jmp
or
ja
mov
jle
iret
nop
js
stc
adc
adc
call
xchg
addr16
pushf
mov
test
data16
test
or
xchg
jns
cmp
mov
pop
adc
ret
mov
lret
jae
repnz
jl
lret
in
ja
mov
lret
push
and
xor
jb
in
mov
pop
es
add
cmp
jmp
jg
mov
mov
jne
lods
int3
pop
xchg
or
test
add
mov
pop
aaa
push
adc
test
xor
adc
push
bound
nop
repnz
loop
sbb
into
pop
test
imul
aad
or
test
lahf
push
scas
ljmp
sbb
insb
cmp
push
sbb
push
adc
jbe
push
iret
data16
jle
es
pop
movsl
jbe
ret
pop
lahf
js
lea
rclb
pusha
xchg
in
pop
xor
call
aas
int3
push
lea
or
je
jo
fcom
or
and
jbe
xchg
jecxz
enter
fwait
push
dec
in
push
nop
hlt
mov
testb
push
xchg
jmp
cmp
push
dec
outsb
and
loop
cmpsb
xchg
test
cmpsl
cli
out
test
add
idiv
add
enter
ret
jmp
xchg
jbe
inc
mov
mov
test
jmp
clc
jp
pop
clc
xor
push
cmp
fcompl
subl
xchg
iret
dec
aam
out
pop
push
pushf
mov
pop
and
xor
incb
cmp
lret
sbb
xor
and
and
fcomps
mov
outsl
or
test
jns
and
aad
scas
je
mov
adc
imul
push
mov
lock
imull
cmp
mov
movsl
fdiv
ret
pop
sbb
mov
xchg
push
xchg
dec
out
dec
adc
add
inc
fidivrl
pop
stos
or
mov
and
sarb
fcoms
mov
and
hlt
fistps
adc
jl
rcrl
imul
js
xor
stos
lods
sbb
mov
adc
inc
jnp
or
scas
xor
xchg
lods
sub
scas
sub
aaa
iret
loopne
dec
fwait
movsb
pusha
fbstp
rorb
lock
shl
arpl
idivb
int
in
adc
or
test
pop
and
pop
std
les
mov
jg
jecxz
add
icebp
addb
mov
addl
sub
movl
pushl
xor
mov
mov
andl
add
xorl
and
cmpl
mov
movl
jmp
movl
je
call
or
or
not
or
mov
sub
mov
xor
and
pushl
sub
mov
mov
andl
imul
xor
or
mov
movl
sub
pushl
sbbl
call
adcl
dec
movl
jne
movl
cmpl
mov
movl
mov
mov
jmp
movl
movl
je
pushl
push
call
or
xor
mov
and
mov
sbb
mov
add
movl
mov
mov
movl
mov
xorl
call
lea
mov
cmpl
movzwl
mov
mov
movzbl
jmp
movl
not
jb
call
and
xor
or
sbb
neg
orl
mov
mov
sub
and
neg
lea
mov
mov
mov
sub
mov
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
call
add
xor
neg
xor
add
mov
adc
xor
xor
xor
add
sub
sub
xor
xor
mov
sub
xor
sub
cmpl
mov
mov
jmp
movzwl
movl
jbe
push
push
call
sbb
sub
mov
mov
add
adc
addl
xorl
xor
sbb
xor
add
shl
shr
or
and
mov
dec
mov
orl
mov
mov
sub
mov
xor
mov
mov
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
adc
sbb
sub
adc
movl
mov
adc
mov
mov
xor
orl
xor
or
and
mov
addl
push
xorl
pushl
addl
lea
adcl
push
subl
shl
call
addl
lea
andl
push
mov
subl
mov
lea
push
andl
mov
movl
lea
sbbl
mov
xorl
mov
mov
adcl
push
call
orl
push
sbbl
push
pushl
sbbl
call
and
mov
xor
mov
inc
mov
mov
add
shr
cmpl
not
movl
movl
movl
jmp
movl
jg
push
call
inc
sbb
adc
add
sbb
cmpl
mov
mov
jmp
mov
ja
push
call
and
adc
sbb
sbb
mov
xor
add
sub
or
shl
cmpl
mov
mov
mov
mov
jmp
movl
jne
push
call
add
mov
sbb
adc
sbbl
sbbl
adcl
or
mov
cmpl
mov
movl
movl
jmp
movl
jle
pushl
push
pushl
pushl
pushl
call
adc
xor
xor
add
xor
or
sub
xor
mov
sub
xor
add
adc
and
or
xor
mov
sub
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
jmp
incb
dec
dec
cmp
or
jecxz
js
out
adc
adc
ret
loope
loopne
cmp
cmpsl
adc
sub
hlt
mov
sub
inc
mov
mov
jnp
xlat
pop
aam
inc
add
jl
and
lret
into
mov
cs
dec
add
xor
je
xor
je
or
cltd
inc
repnz
adc
dec
add
arpl
jle
push
repz
and
jl
je
in
cmpsl
scas
dec
fisttps
jae
aad
mov
jae
sbb
dec
shlb
jo
cmp
das
mov
cli
mov
rcr
dec
mov
cmp
in
pop
repz
xchg
xchg
mov
inc
xchg
mov
mov
fisubrl
cmpsl
cmpl
fildll
push
call
movsl
push
cwtl
mov
fwait
xchg
lcall
cmp
test
add
mov
jg
outsl
inc
lcall
arpl
roll
cmc
sahf
jl
inc
ds
enter
inc
setno
sar
add
mov
out
sti
mov
repz
jmp
das
or
pop
nop
push
inc
adc
js
dec
scas
inc
and
sbb
lcall
adc
jo
and
test
adc
jne
dec
shrl
sub
cmp
fisubs
add
js
cmpsl
mov
push
push
pop
mov
jne
inc
inc
inc
test
inc
adc
and
fstl
pop
test
mov
rcrb
cmp
jbe
fwait
or
mov
jle
loope
push
push
adc
or
sbb
rorl
sub
xchg
cmc
mov
sar
mov
cld
mov
xchg
mov
cmc
pop
std
in
inc
addb
pushf
mov
test
mov
addr16
xor
aam
add
xchg
mov
push
inc
sbb
push
lret
roll
push
lods
cmp
sbb
dec
out
ret
mov
imul
std
jge
je
mov
js
pop
dec
imull
jns
push
or
popa
jle
inc
mov
xchg
test
sbb
jge
dec
outsl
mov
test
mov
daa
and
mov
push
fsts
mov
fs
lret
test
adc
mov
dec
leave
enter
mov
ja
add
clc
pop
repz
scas
or
inc
pushf
data16
xor
pop
rorb
std
pop
ficoml
andb
xchg
fists
and
insl
mov
pop
test
fidivrl
jmp
test
jo
mov
sub
adc
and
and
add
dec
and
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
jmp
ss
adc
sub
xchg
mov
loope
mov
adc
fwait
mov
shr
cmp
or
into
mov
loope
pushf
mov
jo
fstpt
sarl
scas
push
add
pop
xchg
das
push
lods
aaa
mov
or
mov
roll
orl
sub
sti
xor
mov
popf
bound
imul
cld
orl
xchg
sti
cwtl
pusha
fcompl
sub
inc
jnp
jl
and
and
sbb
addr16
addr16
fstpl
imul
aam
cmp
repnz
addr16
bound
pop
sbb
imul
or
in
push
outsl
inc
and
jno
adc
in
pop
inc
push
gs
cmp
inc
add
sbb
pop
pop
int3
cmp
jns
add
out
stos
pop
mov
dec
jle
mov
mov
adc
mov
sub
mov
pop
push
cmp
cltd
jecxz
lret
xchg
imul
push
adc
inc
and
mov
pusha
add
fs
in
xchg
jl
call
scas
repnz
stc
pop
mov
and
loope
sub
hlt
das
hlt
out
and
sbb
cmp
ficompl
push
sbb
push
sub
ret
cmp
sub
lcall
jne
in
test
mov
xor
rolb
pop
into
xchg
mov
xchg
push
cli
and
mov
xor
lret
xor
lock
dec
and
rol
loope
orl
cmp
mov
xor
mov
orb
call
pop
ja
adc
sti
sbb
cltd
add
sub
push
push
in
adc
aad
stos
out
mov
inc
xchg
sbb
lock
xor
pop
sbb
mov
push
lods
jp
sub
fwait
sub
icebp
lock
pop
push
test
cmp
mov
pop
sbb
jmp
movsb
enter
addr16
rcrl
test
cltd
stc
out
jge
repnz
out
mov
nop
or
pop
sub
mov
adc
push
xchg
and
repnz
jo
shll
sahf
orl
push
cmp
or
cmp
pop
sbb
inc
lods
and
fcomip
loope
xchg
lds
jl
jecxz
aad
mov
inc
add
bnd
cmp
sbb
cli
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
jmp
cmpsb
xchg
mov
jns,pt
sahf
lods
aam
lcall
movlps
fcoms
xor
loopne
cmpsb
sub
inc
mov
aam
das
outsb
inc
fdivrs
mov
rorb
push
adc
sub
adcb
in
das
or
js
std
das
xlat
je
pop
xchg
pop
and
sbb
push
or
push
in
adc
cmpsl
stos
sti
test
inc
push
jecxz
push
mov
inc
mov
mov
or
das
into
sbb
adc
inc
xor
mov
repz
fnstenv
pop
test
sub
adc
aad
adc
jnp
decb
arpl
loopne
out
addb
push
sub
jo
cmpsb
sbb
xchg
or
fsubl
or
leave
push
cmp
fcomps
xchg
dec
xchg
push
sbb
or
push
aad
stos
daa
xchg
pop
mov
xchg
push
or
subb
and
push
fnstenv
pusha
test
outsb
xchg
xchg
dec
jnp
pop
repnz
fdivs
testl
pop
mov
pusha
stc
xor
loopne
xor
mov
ficoml
fadd
rclb
xorl
sbb
mov
sbb
aaa
xchg
mov
pop
fdivr
lock
mov
lret
inc
cwtl
adc
or
syscall
push
push
jno
iret
js
ror
mov
lahf
out
xlat
in
jmp
add
mov
mov
into
inc
adc
lock
xor
sti
cmp
mov
dec
pop
and
add
sub
adc
and
add
jae
pop
dec
out
sub
jmp
xchg
push
les
sbb
adc
jp
mov
xchg
jge
sub
fcmovnu
sbb
lret
pusha
ds
xlat
loope
mov
mov
and
fimuls
jecxz
cmp
inc
test
movsl
add
shll
jne
mov
mov
jae
into
add
fwait
cmp
daa
ret
frstor
add
shlb
in
mov
jbe
int3
jecxz
or
jae
inc
mov
mov
jp
inc
jmp
mov
adc
shrd
ljmp
sub
into
or
shll
fsub
jmp
add
hlt
les
lret
js
ss
mov
addr16
popa
daa
rcl
aad
adc
sub
mov
push
jmp
sarb
movsb
jb
add
push
loop
xorl
mov
and
dec
and
or
add
cmp
je
mov
mov
mov
xor
xor
xor
jmp
cltd
add
cltd
fstp
jmp
lods
jge
cmpsb
js
loopne
adc
cmc
icebp
loope
lret
mov
cmp
fldcw
xchg
mov
aas
mov
cmpsl
out
pop
repz
jno
add
xor
add
movsb
gs
iret
mov
inc
mov
inc
stc
dec
inc
les
fistpl
sbb
mov
sub
shrb
mov
je
fcmove
inc
pop
xor
lea
sarl
or
mov
enter
adc
jmp
sarl
out
add
cs
mov
cmp
dec
lock
adc
pop
jbe
jg
xchg
test
mov
iret
popa
dec
push
push
xchg
sub
dec
pop
xchg
repz
dec
nop
incb
mov
cs
mov
data16
aam
fldz
stos
or
push
les
xor
xor
sbb
push
imul
shlb
out
loope
sbb
sti
xchg
xor
jbe
dec
jae
xor
call
pop
insl
orb
enter
stos
push
push
lahf
xchg
pusha
cs
and
adc
rcpps
pop
xor
jg
sbb
or
shll
and
jmp
shll
cltd
cmp
scas
arpl
sbb
and
cmp
test
cmp
movsb
decl
mov
in
inc
nop
add
sbb
gs
pop
movsl
jbe
mov
cli
fwait
mov
stos
enter
pop
gs
mov
dec
inc
adc
sbb
outsb
ret
das
imul
sub
scas
jnp
sbb
enter
ja
and
jns
sbb
ret
pop
add
cmpsl
lret
adc
sub
mov
loope
idiv
sub
adcb
mov
mov
cmp
ljmp
pushf
xor
daa
xchg
push
mov
sub
cmp
mov
sbb
inc
ret
fnstsw
jp
aam
adc
inc
outsb
mov
cwtl
data16
out
push
leave
nop
xchg
sub
and
loope
lock
pop
fisttpll
sub
ret
or
mov
out
mov
stos
je
test
ss
and
shll
jg
leave
dec
mov
je
stc
cld
jb
out
aam
fnstsw
in
adc
mov
in
sbb
outsl
cmpsb
xor
insl
arpl
cmp
or
pop
and
sbb
xchg
xchg
insb
jp
xlat
xchg
cmpb
sbb
frstor
lret
dec
jmp
mov
scas
push
jmp
push
xor
arpl
scas
in
inc
pop
push
shld
shl
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
jmp
cmp
cltd
fistps
sbb
js
ficoms
adc
fcmovnu
in
and
dec
adc
imul
push
xor
push
aam
icebp
mov
sub
int
sbb
lods
sub
mov
outsb
gs
inc
ljmp
xchg
xchg
aas
std
negl
dec
cmp
push
out
mov
mov
and
jmp
bound
pop
cmp
lock
inc
or
push
adc
pop
mov
loope
fst
and
mov
mov
cmp
cmp
inc
xchg
test
imul
loopne
ret
shlb
std
push
lret
xlat
mov
push
adc
cltd
out
in
test
into
cmp
or
push
xor
movsl
mov
pop
cmp
pusha
sub
iret
fsubl
into
and
movsb
pop
mov
push
insb
pop
movb
jge
aas
jns
mov
sbb
or
push
inc
jns
or
lea
cld
dec
xor
dec
jns
jo
gs
jb
ret
mov
fs
add
in
add
mov
sahf
ficompl
fildl
xor
fs
jns
mov
daa
push
or
icebp
pop
in
mov
nop
or
fwait
stc
jbe
dec
out
pop
fstpt
mov
dec
mov
or
mov
ljmp
pop
lret
cli
cmpsl
xchg
flds
ss
and
jno
cmpsl
testl
in
idivl
jge
push
es
add
mov
cmp
jnp
cmp
insl
cmp
fidivs
cmc
add
sbb
aad
in
mov
mov
jp
inc
mov
repnz
lds
mov
sbb
xchg
int3
jle
sub
jbe
jnp
mov
loopne
inc
aam
sub
sbb
mov
mov
int
hlt
ss
les
add
pop
mov
sbb
cmp
pop
ja
dec
adc
repz
stos
gs
ss
xor
jecxz
jg
cmp
sub
adc
mov
pop
inc
push
jge
cli
sbb
nop
push
dec
stc
sbb
sub
iret
sub
ljmp
or
shll
fcoms
icebp
imul
pand
jmp
push
vdivpd
sbb
pop
in
push
filds
in
mov
cmp
xchg
lock
scas
dec
pop
xchg
orps
in
xchg
xchg
shl
sub
and
push
repnz
or
xor
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
jmp
pop
xor
jge
cmp
loopne
shlb
jle
aam
adc
das
sub
mov
adc
jmp
loopne
gs
orl
xor
pop
push
aaa
or
out
push
cmc
sbb
pop
push
out
fwait
pop
fsts
lods
jae
inc
and
xor
jo
loop
mov
xchg
jge
sbb
mov
lds
clc
sub
push
decb
jl
mov
mov
sahf
pop
inc
popa
xchg
and
icebp
jnp
mov
sub
sarl
loopne
andb
call
test
das
mov
inc
shlb
pushf
jle
mov
clc
jbe
data16
fistps
and
fwait
and
and
popl
and
scas
push
xor
iret
or
pop
inc
sbb
fdivrp
push
mov
pop
clc
out
xor
add
dec
lcall
push
sbb
jns
cmp
jmp
inc
xchg
addr16
cmc
and
aam
shrl
clc
push
jge
shrl
xor
hlt
or
imul
mov
in
les
mov
in
pop
outsb
in
jno
inc
shll
sub
mov
or
das
and
bound
sub
in
and
inc
push
or
or
into
shll
sub
dec
add
dec
push
es
loop
xchg
aad
adc
cmp
jmp
jle
sbb
jecxz
sahf
xorl
fucomp
or
push
mov
mov
mov
stos
imul
jmp
mov
xchg
enter
sarb
jae
inc
push
lret
sar
movsl
add
jmp
jmp
mov
xchg
pop
xlat
mov
cmp
je
pop
das
test
pushf
dec
pop
test
cld
into
inc
clc
xchg
pushf
dec
or
les
inc
pop
dec
push
icebp
adc
pop
in
jo
test
xor
out
testl
mov
sbb
or
lods
in
cmp
push
fwait
mov
ret
inc
mov
subb
xchg
sbb
out
push
mov
aas
cs
leave
inc
cmpsl
mov
and
decb
data16
dec
mov
push
aad
scas
push
mov
testb
jo
mov
push
mov
mov
loop
sarb
lahf
cmpsb
dec
jle
out
inc
adc
push
lret
lcall
dec
shl
sub
repnz
clc
popf
mov
int
mov
sbb
xor
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
movl
push
mov
mov
and
push
sbb
push
movl
movl
sub
movl
or
mov
movl
mov
xor
andl
div
imul
sbbl
mov
xorl
xor
and
mov
mov
sbb
mov
xor
orl
div
add
sub
mov
movl
cmpl
movl
not
mov
mov
jmp
mov
mov
jbe
push
call
adc
movzbl
sbb
mov
mov
or
and
mov
mov
sub
or
inc
sub
movl
cmpl
mov
mov
mov
jmp
movzwl
ja
call
adc
sub
sbb
inc
xor
movl
mov
orl
add
xor
cmpl
mov
movl
movzwl
jmp
movl
notl
jae
pushl
pushl
pushl
push
push
push
call
or
and
or
incl
mov
mov
and
and
xor
sbb
imul
addl
mov
and
sub
mov
mov
mov
and
movl
orl
movl
adcl
movl
movl
mov
sub
imul
mov
andl
imul
cmpl
mov
movl
mov
jmp
movl
movl
je
push
push
call
orl
xorl
xor
or
mov
or
mov
xor
xor
sbb
mov
jmp
pop
sahf
and
out
scas
sarb
rclb
adc
outsb
loop
push
and
rolb
push
ja
pop
stos
testb
movsl
xchg
mov
cwtl
dec
mov
and
pop
scas
das
jecxz
xlat
xorb
ret
or
cld
mov
xchg
mov
bound
enter
jnp
lods
jo
push
pop
in
cltd
cmp
and
sti
jo
call
fldl
ljmp
cmp
mov
in
test
fidivl
pop
adc
pop
inc
cmp
push
scas
xor
nop
add
fs
mov
movsb
mov
enter
jo
sbb
pop
notb
push
push
fimull
inc
ja
sbb
mov
and
out
das
mov
lahf
loopne
cmp
adc
stc
sahf
pop
popa
scas
cmpsl
into
mov
fisttpl
movsl
lret
pop
popa
mov
inc
gs
ljmp
push
jns
cmp
mov
test
jae
inc
xlat
push
xchg
sarb
insb
cmpsl
fidivrl
mov
or
out
push
enter
in
mov
add
ja
movsl
jg
inc
aaa
cmp
sahf
fxch
xchg
dec
push
sbb
lret
sarb
push
sbb
inc
std
fidivrl
mov
jecxz
and
pop
pop
lret
sub
pop
cmp
sub
mov
inc
aaa
fcmove
xchg
xchg
pop
add
ficomps
test
dec
sbbl
clc
lahf
rclb
mov
enter
mov
lock
sub
and
xchg
jns
nopl
mov
popa
push
cwtl
std
or
add
out
mov
jl
pop
sub
orb
fidivs
dec
daa
xchg
repnz
mov
adc
cmc
mov
in
xor
movsb
loope
pop
out
pusha
ret
xchg
push
push
push
xlat
inc
xchg
mov
pop
cmp
insb
leave
add
cld
scas
inc
and
cmpsl
fldcw
leave
inc
je
add
incl
add
in
add
lret
leave
and
add
xor
mov
subl
xor
cmpl
movzwl
mov
mov
jmp
mov
mov
jg
push
pushl
call
add
adcl
adcl
add
and
mov
add
orl
mov
mov
sbbl
lea
mov
or
movl
movl
sbb
movl
mov
or
xor
cmpl
notl
movl
not
jmp
movl
movl
jbe
pushl
call
or
xor
andl
movl
add
adc
mov
orl
or
and
add
cmpl
movl
mov
mov
jmp
movl
mov
jbe
push
call
and
add
xor
subl
and
add
xor
cmpl
mov
mov
mov
jmp
movl
jb
push
call
add
xor
add
sub
sub
xor
add
mov
add
subl
or
xor
mov
or
add
cmpl
movl
mov
movl
mov
jmp
mov
mov
jge
pushl
pushl
call
andl
sbbl
andl
movzbl
sub
add
adcl
xor
mov
movl
orl
movl
adc
movl
mov
and
add
cmpl
movl
mov
mov
mov
jmp
movl
movl
jle
push
call
xorl
xor
and
orl
orl
inc
mov
sub
mov
subl
lea
movzbl
sbb
mov
or
sub
xor
or
or
mov
mov
movl
movl
mov
or
add
xorl
imul
mov
imul
xor
movl
mov
div
sub
movzbl
or
mov
xorl
movl
sbbl
movl
movl
mov
mov
addl
xor
movl
div
sub
imul
adc
add
mov
orl
xor
xor
sbb
mov
div
xor
mov
movl
cmpl
movzwl
movl
jmp
mov
jge
pushl
call
not
or
adcl
adc
dec
add
movl
and
movl
cmpl
movzwl
mov
jmp
mov
movzwl
ja
push
push
push
push
call
adcl
adc
and
and
addl
mov
mov
sub
movzbl
xor
shr
and
sub
and
mov
imul
mov
subl
and
mov
adcl
jmp
cltd
adc
xor
sbb
js
fisttpl
mov
enter
cmpsl
cmp
jb
lahf
cmc
pop
sarb
nop
jecxz
add
iret
pop
xlat
cmp
jno
push
sbb
in
sub
push
fisubs
cmpsb
test
mov
or
fsts
and
and
outsb
xlat
in
dec
sbb
dec
push
lods
xor
and
subb
aam
adc
push
testl
dec
and
fisubs
mov
mov
rcr
faddp
pushf
sub
aam
mov
ret
loopne
jg
movsl
adc
sub
ja
mov
cmp
add
addl
and
sbb
fidivrs
sbb
ja
dec
in
ljmp
shlb
sub
cs
sub
fs
inc
aaa
lods
cmp
mov
sahf
cmp
cmc
dec
pop
out
rcl
pop
aas
jmp
cs
fdiv
hlt
push
mov
ljmp
and
mov
loopne
test
andl
cld
cmp
pop
or
inc
adc
jp
and
sti
adc
nop
dec
pop
imul
movb
pop
mov
inc
imul
dec
icebp
sbb
cmc
mov
loopne
mov
test
mov
push
inc
test
lret
mov
scas
pusha
out
test
icebp
int3
and
or
pop
rep
sbb
lahf
sub
test
cmp
mov
out
lock
mov
test
shrl
inc
test
jecxz
pop
and
fstpl
std
movsl
add
jg
rorb
popa
xlat
scas
sbb
jno
cmpb
jp
les
les
xchg
call
call
in
and
lret
and
sub
out
add
insl
add
sbb
std
dec
mov
pop
ret
dec
in
mull
in
or
in
xchg
push
sub
stos
inc
push
push
push
xchg
fsubrp
test
out
sub
xor
lahf
sub
and
mov
or
movl
cmpl
mov
mov
mov
mov
jmp
mov
jne
pushl
call
notl
addl
orl
andl
and
movl
mov
sbb
or
mov
or
sub
adcl
mov
cmpl
mov
movl
movzwl
jmp
movl
mov
jg
pushl
pushl
push
push
call
add
sub
adc
movzbl
sbb
adcl
and
or
movl
mov
sbb
movl
addl
movl
cmpl
movl
movl
jmp
notl
jne
push
push
call
sub
xor
xor
mov
adc
or
orl
adc
andl
adc
mov
adc
movl
adc
movl
xor
xor
add
movl
movl
mov
add
or
mov
movl
sub
xor
mov
addl
imul
add
imul
or
mov
or
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
push
push
pushl
push
call
or
or
xorl
sbb
xor
xor
subl
mov
lea
addl
push
call
and
mov
mov
jmp
test
mov
jbe
and
lods
lret
enter
sbb
fcmovne
adc
push
fadds
data16
cmc
xlat
stos
adc
dec
xchg
and
mov
sahf
stos
test
xchg
jae
insb
fs
test
sub
push
jecxz
lcall
out
xchg
testl
out
cmp
repz
mov
ds
out
es
inc
popa
mov
push
sbb
lret
push
rclb
aam
aaa
loop
pop
jle
jae
inc
idivb
pop
paddd
cmp
mov
lret
mov
cmp
add
inc
out
mov
test
mov
and
lret
ret
aad
mov
push
ret
movsl
xchg
pop
cwtl
pop
inc
xchg
repz
popa
inc
testb
mov
push
out
cmp
xor
jo
fs
fwait
jnp
aaa
inc
fcmovnu
enter
cmp
and
push
ret
add
xor
jno
jl
push
fwait
ljmp
rcll
arpl
dec
sub
sub
sub
push
dec
dec
sub
mov
daa
push
repnz
cld
lock
push
movsb
iret
xchg
daa
das
or
test
sub
stos
push
adc
js
add
sub
insb
and
dec
or
ret
sti
push
fwait
jle
xor
jb
pop
imul
bswap
scas
sbb
mov
cmpsb
mov
xorb
test
leave
jmp
int
imul
mov
lret
lods
mov
rorl
outsl
pop
cmpsb
fcompl
mov
sub
jl
inc
inc
xchg
ret
cli
jbe
lret
xorl
rol
dec
jecxz
sbb
push
jb
lcall
push
aas
ret
outsb
jb
mov
or
mov
mov
push
mov
push
adc
mov
pop
push
repz
sub
pop
ljmp
xor
and
pusha
jle
xchg
mov
fdivrl
mov
mov
add
add
cmpl
mov
mov
jmp
movl
movl
ja
push
call
add
add
dec
orl
addl
adc
and
cmpl
notl
mov
movl
jmp
movl
je
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
sub
xor
xor
mov
xorl
div
cmpl
movzwl
movl
jmp
mov
jbe
push
push
push
pushl
call
adc
movl
orl
sbb
adcl
xor
mov
mov
sbb
add
xorl
jmp
pop
and
and
cmpsb
js
scas
fidivrs
enter
xchg
and
cmp
jno
nop
xlat
enter
out
dec
imul
mov
xor
sub
jp
test
sahf
inc
testl
repz
xor
repz
dec
jge
sbb
lcall
cmp
sub
jp
or
inc
pushw
cmpsl
sub
xor
inc
mov
jae
jmp
push
sub
daa
fs
ror
daa
test
daa
mov
fists
sti
xchg
sbb
scas
lcall
inc
add
push
addl
adc
jo
xchg
pusha
mov
push
inc
push
lea
fcmovnu
insb
enter
loope
loop
mov
fildl
xor
cltd
mov
adc
push
divl
sub
imull
js
cli
adc
push
cmp
cmp
sbb
outsb
dec
cld
andl
sbb
gs
in
cmp
cmpsl
inc
loopne
roll
ljmp
rcll
mov
ljmp
push
xor
repnz
mov
push
nop
sub
lret
cmp
arpl
arpl
xchg
ret
js
pop
bound
inc
insb
je
xchg
pop
fmull
orl
enter
outsl
push
jmp
insb
xchg
dec
nop
mov
mov
dec
mov
inc
push
push
jno
imul
repz
push
push
std
adcb
pop
add
lds
or
mov
or
data16
shlb
mov
adc
mov
xor
pusha
push
sbb
pop
jge
cmp
fildll
aas
fs
lret
insl
in
push
inc
insb
in
sbb
out
mov
sub
sbb
jg
loop
mov
sub
fcomip
mov
xchg
xchg
pushl
out
mov
neg
movl
movl
movl
movl
adc
movl
or
movl
xor
movl
movl
xor
add
sbb
mov
movl
cmpl
movl
not
jmp
not
jbe
push
push
call
xorl
or
subl
add
adc
sub
addl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
call
mov
or
xor
sbbl
neg
mov
or
movl
movl
add
mov
cmpl
movl
mov
jmp
movl
mov
jae
push
call
or
movzwl
or
mov
sbbl
sub
inc
xor
add
sub
xor
mov
add
mov
movzbl
or
and
movzbl
sub
mov
sub
sub
jmp
xor
es
and
jmp
js
mov
mov
enter
daa
data16
mov
mov
mov
cmp
out
inc
lea
call
sub
mov
cltd
jb
cmpl
or
roll
add
stc
testl
mov
push
cmp
xor
outsb
jns
dec
adc
mov
mov
mov
mov
mov
mov
addr16
mov
pop
icebp
int
movsl
icebp
add
jp
push
mov
xchg
je
dec
sbb
cli
mov
in
cld
mov
and
sbb
cmc
outsb
jno
int
ret
mov
lret
xchg
xlat
icebp
mov
jl
dec
hlt
xchg
insl
mov
aam
add
ds
sbb
add
pop
ret
push
sub
dec
mov
scas
mov
cmp
adc
rcl
jbe
and
push
xchg
dec
xchg
xchg
out
pop
cmpsl
insl
int3
shl
lahf
movsl
mov
and
imul
aaa
xchg
jb
fs
xor
ret
js
loope
in
fldt
jb
inc
pushf
mov
push
iret
test
cltd
shll
pop
jecxz
je
mov
mov
ja
mov
shrb
ja
xor
dec
int
lods
andb
push
popa
push
pop
sbb
popf
mov
xadd
aas
pop
fstl
and
adc
mov
dec
push
push
repnz
lcall
dec
mov
adc
mov
test
mov
pop
adc
add
push
cmp
dec
dec
jae
lret
mov
xchg
sbb
les
aad
lods
in
pop
lods
mov
xchg
sti
sub
dec
mulw
xchg
outsb
push
lcall
and
imul
mov
pop
and
daa
adc
mov
gs
scas
js
cwtl
repnz
mov
jg
sbb
loope
unpckhps
out
push
push
xor
ljmp
mov
mov
mov
movl
jmp
movl
jle
push
call
and
subl
adcl
movzwl
adc
xor
sub
cmpl
movl
mov
mov
movl
jmp
movl
jb
pushl
push
push
call
sub
and
adc
adc
imul
xor
jmp
nop
push
push
sub
sbb
jle
decb
jge
adc
adc
inc
call
mov
cmpsb
test
mov
xor
js
mov
mov
adc
imul
leave
lret
sbb
mov
cwtl
push
dec
pushf
mov
push
iret
out
sub
sarb
lret
cmp
ja
xlat
shlb
cmp
test
dec
aad
into
sub
sbb
roll
adc
sub
and
stos
vmulps
das
push
mov
cltd
testb
and
dec
pusha
cmp
mov
sbb
rcl
mov
mov
cmp
fs
scas
and
add
rorb
mov
cmp
push
inc
addr16
push
inc
sub
xchg
out
mov
pop
xlat
mov
cmp
mov
icebp
xchg
and
shrl
enter
fildll
icebp
call
out
in
pop
mov
ja
rcl
out
in
dec
sbb
inc
adc
lret
dec
mov
mov
mov
aam
movsb
out
addb
cmp
movsl
inc
push
mov
jo
and
shrb
cmp
ret
xchg
out
sbb
mov
sbb
mov
or
outsl
insl
xlat
mov
mov
mov
add
sbb
add
test
xor
data16
inc
fsubp
mov
cmp
cmp
scas
add
lds
into
adc
daa
jl
fwait
xor
mov
sti
fwait
push
add
push
pop
sub
inc
jmp
jl
imul
aad
jg
xor
mov
dec
lahf
and
fsubl
dec
push
mov
movsl
jnp
cmp
sbb
movsl
xor
xchg
lret
ret
mov
jmp
stc
lods
cmpsl
ja
rorb
fstpl
in
sbb
mov
stos
add
lcall
aas
mov
incl
xchg
inc
ljmp
mov
addr16
jo
incl
testb
adc
test
cltd
jecxz
add
mov
notl
not
jmp
movl
je
push
call
movzbl
adc
mov
sbb
sbb
xor
subl
mov
mov
sub
or
or
mov
jmp
loop
out
cmpsl
inc
sbb
inc
mov
cwtl
lods
xor
adc
pop
and
xor
imul
into
adc
and
xor
xchg
push
jle
dec
jge
adc
mov
xor
or
lods
cmp
xchg
pop
clc
std
in
fsubrl
ja
xchg
in
cltd
jle
sbb
shll
orl
jmp
repz
sub
mov
push
sub
mov
inc
insb
dec
int3
sarb
std
cmp
xchg
cmp
push
test
out
cwtl
stos
fdivs
movsl
mov
xchg
pop
and
mov
add
sub
movsb
pop
fmuls
mov
adc
ds
iret
fcomp
mov
repnz
stos
lods
add
pushf
scas
jae
lcall
mov
add
add
dec
mov
rcl
lea
icebp
sbb
in
adc
sub
xor
out
out
les
dec
jmp
insb
xorb
push
pop
enter
insb
test
out
lea
dec
inc
sbb
add
clc
pushf
dec
mov
jnp
loop
das
in
in
or
test
cld
mov
test
testb
sti
jmp
into
fsubrs
dec
mov
out
negb
nop
add
shlb
aaa
fnstsw
mov
push
hlt
and
test
imul
faddl
xchg
push
dec
data16
test
mov
cmp
rorl
leave
or
push
xchg
clc
nop
mov
pop
xchg
lods
mov
push
loope
mov
pushf
icebp
mov
lods
pop
xlat
fiaddl
inc
cs
jg
repnz
insb
and
jns,pn
pushf
xor
fsubl
dec
fsubs
ficoms
push
jbe
insl
je
and
lahf
int
mov
leave
cmp
push
rclb
inc
mov
cli
or
ret
mov
stc
inc
inc
or
mov
repz
test
js
or
and
lcall
addl
lock
xor
or
add
xor
or
mov
sub
sub
mov
adc
lea
andl
and
movzbl
add
mov
mov
sub
add
mov
movl
adc
movl
cmpl
mov
notl
jmp
mov
jg
push
push
call
sbb
or
or
add
inc
sub
subl
movl
andl
movl
mov
cmpl
movl
movzwl
mov
jmp
mov
jge
pushl
pushl
call
add
xor
xor
and
and
movl
sbb
mov
mov
adcl
xor
andl
xor
xorl
mov
call
mov
mov
decl
mov
addl
mov
addl
xor
xor
adcl
mov
subl
call
decl
or
dec
or
add
mov
sbb
mov
xorl
xor
xor
mov
call
cmpl
mov
movl
mov
mov
jmp
mov
ja
pushl
push
push
push
push
call
subl
mov
or
or
and
mov
xor
or
mov
mov
decl
mov
add
mov
xor
andl
xor
subl
mov
cmpl
movl
movl
mov
jmp
mov
movzwl
jne
push
push
pushl
push
pushl
push
call
andl
subl
addl
subl
sbbl
subl
movl
mov
sbb
mov
notl
mov
mov
addl
call
adc
mov
adcl
or
sbb
mov
addl
or
incl
push
sbbl
push
sbbl
push
andl
push
call
mov
cmp
jne
sub
mov
mov
subl
xor
andl
xor
andl
mov
movl
call
sbb
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
inc
adc
cmp
pop
pusha
js
push
adc
adc
mov
sbb
fstpl
jp
sarl
aad
mov
cmpsb
sub
xchg
sbb
push
insb
aaa
mov
adc
pushf
lret
ret
cltd
jns
in
mov
adc
sbb
clc
adcb
mov
ja
mov
cmp
push
inc
scas
xor
loopne
mov
into
pushf
enter
push
inc
inc
sub
out
pusha
in
cmpsb
xor
add
shr
psubsb
mov
dec
adc
jg
and
ficomps
int
mov
inc
xor
stos
xchg
xor
sbb
repnz
mov
aaa
stos
test
hlt
adc
repz
loope
xchg
jmp
outsl
js
sbb
sub
sbb
cmpsl
loope
mov
xor
inc
jmp
and
sub
clc
ret
in
cmp
in
xchg
fildll
popa
and
stos
push
aad
repnz
xor
out
sub
add
or
push
repnz
int
xor
cs
cmp
xchg
iret
js
mov
sub
xor
stc
mov
sub
jg
xlat
push
dec
inc
adc
push
cld
sarl
addb
dec
inc
push
lock
ret
xor
xchg
faddl
xor
insl
or
or
pop
pusha
repz
mov
outsb
int
ds
pop
sti
xchg
int3
mov
scas
add
xor
aas
mov
movsb
inc
or
jnp
jno
fcomp
add
outsl
adc
out
push
pushf
mov
or
bound
push
mov
mov
pop
orl
jo
push
jmp
dec
lds
data16
mov
pusha
xor
jmp
xchg
add
les
shll
cmpsb
jle
xchg
fsubrp
and
lock
xchg
dec
and
mov
ret
loope
cmp
mov
and
nop
popa
lods
imul
movsl
fldlg2
xchg
xor
mov
xor
fwait
mov
mov
mov
pushf
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
jmp
leave
out
loope
pop
sub
dec
xor
lcall
adc
push
fists
ds
ja
testl
jecxz
push
or
int3
lods
test
pop
jnp
int
sbb
adc
sub
sar
arpl
push
jne
mov
out
jg
mov
jge
sbb
mov
loopne
xchg
add
in
mov
iret
testb
js
cli
sti
sub
push
pop
inc
hlt
or
add
xchg
dec
bound
popa
adc
gs
lahf
mov
sarl
jae
mov
sub
cmp
clc
mov
or
dec
addr16
mov
in
je
mov
clc
int
inc
pop
outsb
out
pop
pop
notl
int3
fidivrs
popf
xor
adc
jbe
test
sub
mov
jp
pop
jae
cwtl
xor
rclb
lods
fistps
pop
push
jbe
cs
xchg
jbe
adc
lds
push
loope
dec
xchg
cld
stos
and
mov
and
into
inc
ffree
int
loopne,pt
push
sbb
lods
sbbb
pushl
popl
scas
clc
mov
idivl
push
pmulhuw
dec
xchg
sub
scas
mov
inc
adc
cltd
sbbb
movsl
xor
iret
int3
inc
dec
sbb
pop
ja
pop
xor
mov
mov
cmpb
push
mov
dec
in
negl
lret
scas
jae
pop
jae
rol
dec
push
fisubrl
jg
out
dec
add
es
outsb
dec
je
insb
lret
shlb
and
pop
xchg
jmp
sbb
movsl
and
adc
adc
jl
inc
push
push
mov
add
pop
btc
into
fmulp
mov
nop
sarb
pop
ljmp
inc
mov
adc
jb
xchg
sbb
test
or
movsb
and
cmp
dec
orb
xchg
dec
dec
pusha
and
outsb
cmp
sbb
xor
adc
mov
sahf
lcall
rorl
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
jmp
mov
popa
sahf
sbb
lods
insb
hlt
inc
cmpb
movlps
push
movsb
popa
loopne
cltd
sub
jl
push
ret
test
inc
xlat
sbb
ficoms
in
xchg
das
ljmp
fwait
jne
aaa
mov
jns
je
addb
iret
cld
popa
inc
mov
lret
cmp
dec
je
shlb
cmpsb
pop
xor
dec
and
ror
add
stc
lds
mov
int3
insl
mov
stos
fldcw
ret
xchg
icebp
or
shl
jecxz
sbb
aas
or
out
dec
inc
mov
jnp
xchg
mov
adc
cwtl
xchg
jno
push
mov
test
jge
push
je
stc
mov
mov
mov
in
rclb
inc
stos
xchg
jecxz
int
jmp
sub
aas
mov
scas
jns
ffree
sub
sub
mov
jbe
jns
dec
fidivrs
aam
adc
ficoml
push
pop
xchg
xor
std
mov
or
hlt
xchg
ljmp
adc
inc
outsl
jns
fisttps
lods
and
adc
loope
dec
ljmp
lret
addr16
jnp
lods
pop
aas
and
pop
adc
iret
movsb
pop
inc
call
mov
inc
icebp
pop
mov
sub
loopne
jge
jns
ja
or
jle
cwtl
and
popf
mov
mov
jnp
dec
test
mov
add
adc
pop
jnp
cmpsl
nop
lds
aaa
inc
arpl
out
add
andb
std
or
cli
faddl
push
hlt
loope
ret
stos
add
aas
dec
pop
adc
mov
nop
xchg
lds
push
jbe
xorb
lret
mov
nop
mov
dec
out
jno
sub
pop
add
add
mov
xchg
xor
xchg
inc
cmp
std
loope
lahf
imul
popf
dec
inc
push
ret
outsl
or
cwtl
cmp
and
push
pop
rclb
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
jmp
add
xor
and
aas
loope
xor
js
bnd
add
adc
rorl
aad
insb
adc
mov
add
es
xor
movb
nop
fdivr
ficoms
fdivrl
fcmovnu
and
inc
cmpsl
jl
push
shl
jmp
adc
cmp
imul
xchg
pop
stos
cli
int
stos
xchg
jmp
neg
std
push
outsl
dec
xchg
fcoml
fstpt
mov
lods
jp
aas
orb
pop
mov
add
bound
pop
int
fldl
daa
sbb
ficompl
mov
inc
cld
mov
xchg
rorb
xor
add
aad
repnz
roll
out
into
adcl
cmc
call
or
mov
fimuls
aam
add
adc
and
sbb
xor
fwait
cmp
insl
dec
add
adc
sub
out
fstps
das
sbb
jmp
sbb
orb
add
xchg
lret
inc
mov
or
pop
dec
mov
jo
mov
push
out
xor
stos
and
jg
push
in
divb
pop
xor
aad
btc
inc
push
gs
hlt
xor
dec
sbb
shrb
imul
cwtl
ficoms
pop
lret
adc
cmc
pop
mov
daa
shrb
push
sbb
es
pop
sbb
mov
jae
pop
incb
shrb
push
lret
mov
mov
loop
cmpsl
jne
and
repnz
cwtl
ss
in
mov
mov
add
push
mov
stc
mov
cli
addr16
mov
loop
sub
stos
jecxz
hlt
add
and
and
adc
jge
loopne
xor
flds
push
pop
lds
testb
and
sub
mov
cld
inc
xor
mov
das
dec
mov
mov
outsb
adc
nop
icebp
mov
xchg
pop
push
sbb
xchg
sbb
dec
adc
push
mov
pushf
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
jmp
insl
xor
jb
push
sub
jns
lods
mov
adc
adc
roll
xor
int3
dec
shlb
dec
pop
lea
gs
shlb
mov
xbegin
pop
hlt
sub
jb
in
sahf
jno
repnz
push
adc
mov
orb
push
imul
in
sub
je
pop
dec
pop
add
test
cmp
les
inc
inc
mov
test
pop
roll
clc
ljmp
fstpt
adc
and
into
mov
cli
pop
push
add
push
pop
inc
add
cmp
and
mov
cmp
das
pop
jne
push
lcall
psllq
and
adc
idivl
cs
mov
lea
or
mov
aam
fs
pop
stos
lcall
addb
mov
pop
jne
int
xchg
lock
rclb
cmc
dec
mov
call
mov
lcall
jle
sbb
lea
test
popf
inc
push
stc
fiadds
lds
test
add
xchg
jl
mov
jmp
dec
imul
jae
or
jno
ja
add
or
out
sbb
xchg
mov
aaa
inc
xchg
dec
movsl
pop
mov
scas
repnz
decb
jo
mov
in
mov
pusha
sub
mov
rcrb
sbbb
and
outsb
mov
push
xchg
jns
mov
sbb
xor
rorl
push
sti
es
dec
xchg
sbb
inc
dec
scas
push
aaa
jns
out
and
add
sbb
adc
pop
and
ret
push
sub
xadd
mov
push
int3
popl
cmpsl
mov
and
push
icebp
pop
fs
cmpl
test
aad
ljmp
push
insl
icebp
add
nopl
jnp
arpl
inc
ljmp
test
jbe
jle
not
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
jmp
pop
cli
xchg
ret
xchg
js
pushf
adc
adc
sbb
out
push
inc
push
push
hlt
xchg
push
and
fstpl
xchg
dec
aaa
shll
jae
in
inc
cmp
and
aam
cmc
cmpsl
stos
lds
and
mov
stos
mov
xchg
iret
jp
pop
add
jbe
movsl
add
mov
push
jmp
dec
mov
repnz
sti
cli
mov
sub
jp
cmpsb
inc
mov
sbb
cld
xchg
aaa
dec
push
sar
sbb
and
adc
lcall
jno
lds
xor
adc
pop
cmp
xchg
pop
adc
mov
xchg
mov
xchg
inc
cwtl
xchg
lahf
dec
jbe
adc
cmp
hlt
mov
cmp
xor
fbstp
cwtl
test
stos
dec
lods
add
cmp
imul
jmp
lret
mov
insb
jmp
pop
xor
lods
ds
pusha
lea
loope
and
test
xor
cmpsl
test
repnz
or
sbb
aas
pushf
iret
mov
out
dec
push
es
lahf
test
sbbb
call
add
sbb
pusha
pop
or
bound
sub
push
lock
clc
sub
mov
mov
xchg
nop
aaa
push
and
pop
test
mov
in
and
inc
or
push
cli
xor
jnp
jns
sti
push
push
icebp
filds
lods
and
xchg
mov
aas
jge
ja
fprem
cld
pop
in
lahf
jp
mov
out
shrl
ljmp
inc
and
fiadds
mov
fcoms
fsubs
fistps
lret
push
fsubrl
xor
cmp
out
cmp
xor
lock
push
clc
or
hlt
sti
sbb
pop
cmp
and
and
jg
movsl
pop
dec
mov
adc
inc
cmp
mov
decl
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
jmp
stos
cmpl
and
sahf
sarb
cltd
inc
stos
sbb
movlps
mov
fs
xchg
lods
push
xor
rcll
leave
cmp
in
sub
mov
jmp
arpl
adc
pop
cmp
dec
inc
aad
mov
ljmp
sbb
fwait
xchg
imul
lret
pop
int
sbb
cmp
shll
xor
jecxz
cmp
dec
xor
cli
xchg
dec
iret
shrl
xchg
xor
sarl
fs
sub
fisttpl
adc
inc
mov
mov
popf
mov
or
xchg
ret
xor
or
pop
aad
dec
les
sub
push
scas
iret
inc
adc
popa
scas
dec
push
and
mov
sti
dec
push
adc
ss
movsb
test
fisubrs
pop
mov
xchg
xlat
clc
mov
and
pop
inc
fdivrp
pop
sbb
adc
xor
mov
lock
out
inc
movsl
stos
xchg
jecxz
les
push
into
mov
and
cs
negl
test
mov
gs
jae
inc
add
hlt
test
out
jp
rol
test
sub
in
xor
cmp
and
inc
clc
inc
loope
lahf
sub
inc
scas
sbb
push
mulb
push
xor
scas
xchg
and
and
mov
mov
les
insl
dec
push
push
push
mov
jno
inc
xlat
xchg
cmc
jo
push
pop
loopne
sbb
shrl
out
adc
xor
ficoms
les
ljmp
mull
fcoml
pop
popa
sbb
mov
inc
je
shll
dec
icebp
pop
or
adc
push
out
popa
pop
mov
das
cmp
lds
jl
push
pop
jg
lods
mov
xor
sub
mov
mov
pusha
and
fisttpl
and
cmp
ret
loopne
jae
sbb
outsb
addr16
mov
xor
jns
ds
adc
cmp
test
jb
aad
push
out
add
inc
adc
push
les
add
decl
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
jmp
and
lret
sbbl
js
dec
fdivrl
enter
ja
push
ljmp
inc
rclb
cmp
repz
cmp
mov
jns
ret
call
adc
mov
repz
in
dec
sbb
adc
loopne
xchg
push
mov
fwait
bound
cmp
xchg
rclb
test
cmp
adc
xchg
pop
pop
les
in
mov
roll
subl
cmpsb
jb
add
lcall
adc
jb
push
cmpsb
dec
push
mov
not
xchg
icebp
arpl
mov
iret
gs
push
or
sbb
sub
jg
jle
mov
dec
hlt
dec
in
adc
mov
pop
div
xlat
out
lret
push
jg
jecxz
out
scas
shlb
and
in
mov
popa
imul
inc
sbb
cmp
add
cltd
sbbb
test
out
xor
pop
adc
jmp
mov
and
dec
xlat
sub
pop
or
adc
ds
clc
jo
jns
data16
jg
std
sbb
lea
inc
in
jecxz
das
jb
sub
cmpsl
or
iret
aad
js
jo
popa
call
cs
fmull
xor
mov
inc
test
sahf
cmp
jnp
xchg
mov
addr16
fwait
xchg
arpl
les
rorb
scas
arpl
or
mov
xor
mov
pop
add
push
outsb
ds
add
inc
fcompl
ret
sbb
push
jg
fld
outsl
clc
and
test
cmpsl
sub
in
jnp
pop
cmpsl
inc
sub
repnz
pop
cmc
push
push
add
ret
xchg
sbb
test
nop
dec
lret
out
mov
lods
sbb
int
je
test
or
xor
in
frstor
jg
andl
push
out
rcr
stos
xor
dec
movsb
clc
scas
scas
addr16
test
lods
out
jecxz
test
xor
jge
pushf
pop
mov
mov
test
pushl
lret
adc
fmuls
and
pushl
imul
fmuls
sbb
decl
decl
decl
mov
and
inc
add
add
pop
lods
mov
and
pop
mov
xor
xchg
adc
popa
push
enter
out
rclb
lcall
jle
jmp
outsl
add
fcoms
hlt
out
popf
mov
jp
aam
jp
dec
inc
mov
xchg
cmpsl
cmp
leave
dec
jo
xor
dec
lods
mov
movsb
jg
xor
push
jnp
lock
test
loop
sti
mov
movsb
das
fsubrp
cmc
dec
add
jne
mov
lcall
pop
lods
outsl
dec
jg
pushf
jecxz
stos
in
cli
pop
sahf
or
mov
scas
loopne
inc
push
ret
lods
cmp
lds
xchg
gs
or
inc
sub
insl
daa
dec
mov
add
in
icebp
popa
jae
dec
inc
pushfw
pop
out
lds
and
and
jae
cmp
mov
fbstp
jbe
jp
shll
dec
and
test
jg
imul
icebp
loopne
pop
and
or
stos
push
gs
pop
mov
xor
jg,pt
subb
jge
mov
cmp
mov
divl
add
sub
push
test
mov
jmp
out
sub
imul
xlat
adc
inc
jmp
mov
mov
or
mov
test
sbb
lret
mov
arpl
mov
js
stc
cmp
and
les
mov
jae
or
dec
sbb
inc
push
adc
jp
jg
lods
outsb
and
pop
pusha
push
lea
ret
insb
cld
lods
push
jecxz
xchg
lret
push
dec
bound
lea
sub
movsb
cmpsb
xor
push
rclb
sub
jb
test
movsl
mov
mov
sti
dec
decl
xchg
ds
xchg
insl
sbb
jne
sub
or
ds
jae
int3
insl
adc
mov
inc
out
lods
into
test
loope
out
lcall
dec
push
pusha
add
ljmp
mov
mov
in
xor
jmp
cmc
inc
bound
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
jmp
dec
sbb
sbb
sbb
sbb
scas
sbb
fwait
stc
mov
adc
movlps
cmp
xorb
push
into
movlps
xor
lcall
les
inc
push
lahf
fsubr
ds
push
xchg
cmp
stc
outsl
jnp
mov
sub
mov
jnp
push
mov
test
rclb
cmpsl
lock
jns
popf
mov
sahf
mov
dec
xchg
inc
stos
mov
je
hlt
push
fiadds
outsb
in
fistpl
cmpsl
mov
cmp
cmp
mov
inc
dec
imull
ja
mov
outsl
cwtl
mov
pop
andl
cltd
imul
sbb
and
xchg
mov
fwait
pushf
inc
sbb
mov
and
sarb
jno
or
lea
xchg
lods
adc
xchg
sbb
test
loopne
popf
xor
or
push
pop
popa
dec
mov
lea
movsl
nopl
pop
adc
shrb
jae
lahf
in
mov
in
cli
xchg
mov
jnp
mov
pop
dec
mov
inc
add
lcall
cmp
pusha
jg
ja
fisubrs
repnz
xlat
sub
lock
mov
pop
sbb
roll
sbb
mov
out
outsb
cmp
push
rcrl
add
xchg
ja
sbb
cld
imul
adc
or
cmp
stos
add
scas
jmp
cmp
xchg
rcrb
scas
das
sub
das
jmp
out
add
pop
push
test
lods
jg
inc
and
pop
add
mov
int3
add
aad
add
sub
in
and
cmpsb
rol
push
cmpsl
xorb
mov
cpuid
push
in
sbb
arpl
arpl
int3
in
mov
out
imul
std
loopne
cmp
shlb
scas
add
pop
outsb
rorb
adc
cwtl
mov
and
fcoms
out
jo
lds
pop
jne
add
lret
pop
imul
lret
fmuls
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
jmp
push
pop
inc
ficomps
clc
les
out
mov
adc
jl
xor
pop
jbe
ljmp
or
add
push
fdivl
inc
mov
imull
push
sub
das
out
jo
int3
pushl
fadd
jo
movsl
sub
rcrb
cmpsb
insl
push
nop
insl
in
xor
xchg
cwtl
jge
rol
add
inc
int
ret
adc
pusha
std
mov
mov
leave
jg
push
lcall
call
outsl
bound
shrl
adc
jne
pop
into
iret
mov
xor
iret
xor
jnp
clc
sbb
push
fbld
mov
sub
loop
call
push
pop
adc
repz
pop
xchg
mov
cmpsl
jo
xor
fs
fcmovb
xchg
lock
int3
sub
call
pop
rorl
push
loop
ret
cmp
ljmp
mov
pop
xchg
xchg
dec
je
pop
arpl
bound
push
je
jle
sub
loopne
les
gs
rcrb
in
push
jns
stos
and
les
leave
es
mov
xchg
into
jbe
jne
rclb
mov
movl
ds
or
jno
mov
jmp
jno
sub
lahf
mov
jl
mov
push
inc
aaa
push
hlt
inc
ja,pn
dec
adc
cli
inc
rcrb
es
ficomps
stos
mov
bswap
fists
fidivrs
cld
pop
popf
pop
jo
aas
cmpsl
ljmp
outsb
jl
push
push
xchg
fsubrl
pop
js
loopne
nop
negl
je
test
push
clc
stos
jl
or
test
rcrl
or
fs
addr16
jae
popf
cmp
jl
sub
sahf
xchg
xchg
scas
mov
jae
mov
in
jge
insl
xchg
sbb
jecxz
xchg
pushf
xchg
rcl
sbb
out
test
mov
mov
dec
test
and
scas
xor
inc
cmpl
xor
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
out
add
popa
cmpsl
aad
stos
add
mov
movlps
mov
ficoml
inc
jo
ds
push
ss
adc
xchg
fwait
shll
fcmovu
out
mov
mov
fcomi
cli
xchg
sub
lods
pop
xlat
scas
stc
test
mov
jb
sub
and
aaa
jae
add
and
xlat
push
outsb
ja
mov
sub
lret
sbb
push
ja
ljmp
jg
addr16
and
mov
fisttps
in
enter
lahf
push
and
je
pop
xor
faddl
sub
push
jle
lds
out
rcrb
dec
mov
cs
je
shlb
bound
adc
inc
push
daa
and
and
mov
out
add
mov
leave
mov
and
adc
inc
mov
jmp
in
mov
inc
adc
decb
das
rolb
inc
pusha
xor
inc
mov
out
lods
or
in
or
sar
xor
jo
xlat
out
adc
inc
lahf
gs
addr16
or
je
jnp
gs
adc
roll
loop
mov
fildl
into
das
xchg
xor
dec
mov
ljmp
insl
fsubp
xor
jle
sarb
dec
les
test
fistpl
notb
sub
jmp
cwtl
xor
idiv
iret
xchg
rcrl
adc
les
jns
sbb
pop
jp
adc
xchg
sub
fdiv
lcall
inc
aaa
sbb
and
loop
mov
xchg
xlat
arpl
push
arpl
xchg
sub
jns
insb
sub
cmp
xor
fists
pop
cmpsl
jmp
sbb
cmp
sbb
sbb
clc
lgs
mov
stos
sar
call
mov
fidivs
lahf
lods
imull
scas
push
cs
popf
adc
sub
nop
sti
enter
test
push
mov
loopne
rcl
ja
mov
loopne
push
jo
adc
xchg
jb
mov
aas
dec
and
movsb
push
mov
and
cli
mov
mov
xor
xor
mov
call
or
jmp
mov
or
mov
push
push
aas
adc
adc
movlps
and
dec
outsl
int3
xor
cmpl
aas
lds
aad
sbb
mov
mov
pop
aas
adc
xor
lea
add
int3
jne
adcb
std
loopne
xor
xchg
test
mov
aaa
arpl
mov
inc
lods
out
xchg
sti
lret
ss
mov
mov
xchg
sub
adc
icebp
andnps
add
mov
outsl
mov
inc
xchg
subl
clc
aaa
pushf
cmp
or
cmp
insl
call
cmp
mov
rcrl
sub
push
int3
aam
dec
ds
daa
pop
jb
xchg
or
mov
xorb
sbb
js
mov
ret
hlt
fisubl
mov
adc
jns
fidivrl
hlt
into
shr
push
push
rclb
repz
push
ja
movsl
inc
into
pushl
push
jo
push
je
ficoml
xchg
mov
jo
loopne
pop
lods
pushl
mov
xor
jne
pop
xchg
or
fists
push
hlt
in
movsb
add
sbb
fdiv
add
cwtl
add
mov
mov
add
loop
mov
das
mov
add
sarl
jns
mov
jmp
xor
sub
lahf
adc
cld
cmp
sbb
adc
out
fdiv
lods
push
sarb
int3
addr16
ret
stc
pop
sbb
icebp
xlat
push
cmpsb
sti
push
jne
mov
adc
or
int
mov
jle
ret
push
jmp
sbb
js
gs
mov
mov
jno
in
loopne
fs
pop
scas
repnz
push
mov
adc
and
pavgb
mov
mov
jg
ret
mov
pop
xchg
xchg
insb
pop
in
jnp
mov
aaa
jmp
adc
iret
xlat
loope
shl
xchg
push
cli
sbb
mov
int3
add
pop
mulb
or
add
mov
mov
cmp
jmp
stos
js
pop
and
mov
push
cmpb
movlps
loop
loopne
push
pop
mov
scas
dec
gs
adc
ds
lcall
pusha
aad
hlt
sbb
jno
jae
daa
imul
and
add
jp
mov
daa
mov
clc
jecxz
outsl
mov
scas
xor
sbb
out
lock
rcll
inc
cmp
xchg
adc
outsl
ficoml
adc
push
fwait
cld
out
lods
js
push
lea
movsl
arpl
inc
dec
add
sbb
ss
lods
and
add
inc
add
rorb
aas
int3
mov
addr16
push
inc
mov
shll
inc
push
pop
ds
mov
pop
ljmp
jb
fisubrl
daa
add
arpl
test
jnp
ficompl
xor
in
fwait
out
mov
js
fistps
movsb
mov
sbb
lea
sbb
mov
movsb
bound
fwait
dec
stos
jecxz
add
shll
jne
xchg
outsb
dec
pushf
dec
sbb
xchg
mov
out
movsl
xor
mov
xchg
iret
fs
frstor
movsl
push
xchg
mov
xor
xor
adc
stos
fildll
clc
ret
or
xchg
hlt
mov
xor
enter
push
push
xor
and
int3
mov
cmp
xchg
mov
cmp
lret
or
loopne
outsl
aad
push
inc
sbb
je
mov
scas
insb
cld
or
cmp
call
pop
cs
stos
dec
cmp
jbe
and
stos
stos
pop
inc
jl
cmp
lret
jo
add
lret
fldl
repnz
aad
mov
fldenv
adc
inc
sbb
aas
in
rolb
push
test
mov
pop
in
cmp
xor
xor
add
arpl
and
les
and
stos
xlat
sub
das
sub
push
xchg
mov
je
mov
mov
movzwl
xor
movzwl
sar
jmp
ds
in
mov
xchg
js
aas
or
enter
dec
stos
dec
ljmp
inc
cmp
mov
cmp
les
mov
outsb
or
aas
dec
pop
adc
bound
roll
fbld
jbe
int3
sahf
call
movb
test
sub
mov
or
mov
sub
cmp
clc
insl
pop
sarl
cltd
fcoml
push
adc
or
mov
daa
rcl
mov
dec
and
scas
and
dec
pop
in
pop
push
scas
movsb
frstor
pop
popf
jmp
mov
outsl
stc
int
andl
pop
cmp
sub
and
out
jecxz
dec
adc
sub
sub
add
hlt
sbb
cwtl
in
sub
jns
jp
pop
ss
rolb
adc
sub
add
and
adcl
or
push
sbb
in
daa
sbb
inc
fnsave
repz
add
push
orl
cmp
out
je
bound
dec
cwtl
ds
icebp
dec
ja
data16
loopne
test
rcrb
rcr
adc
fldenv
mov
lock
sbb
cld
jge
mov
jno
repnz
sbb
lahf
sbbb
outsb
mov
mov
call
or
push
test
fidivs
nop
jne
sbbl
xor
cmp
push
into
cmpb
push
gs
rcrl
arpl
sbb
out
aad
ret
out
test
lods
test
cld
jl
xor
cmc
notl
pop
in
fisttps
push
sbb
repnz
subb
xor
int
iret
and
dec
pop
dec
mov
mov
inc
adc
lahf
lret
scas
mov
mov
jmp
rol
movsl
mov
or
inc
ret
or
adc
lods
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
jmp
jns,pn
xchg
pop
subl
js
ror
lods
jb
adc
adc
inc
xor
push
pop
lret
xor
xor
mov
out
xchg
dec
popf
and
je
mov
or
insl
jae
pop
icebp
sbb
scas
imul
jg
aad
lea
dec
imul
ja
ljmp
addb
push
lea
or
mov
pop
sub
adc
sbb
pop
xchg
aam
int3
sub
fstl
inc
pop
inc
dec
cmp
je
and
nop
or
xor
cmp
aad
mov
xchg
arpl
cmpsb
sub
push
xchg
cld
push
dec
cmp
add
mov
mov
iret
or
adc
pop
mov
jge
cmp
cmpsb
mov
pop
lods
mov
popa
imul
fsub
ljmp
sub
cwtl
mov
pop
out
cld
shrl
fistl
std
aaa
and
mov
mov
nop
imul
mov
xchg
adc
pusha
int3
pop
lea
js
push
arpl
adc
dec
outsb
fndisi(8087
rcrb
aam
jmp
cmpsb
nop
jae
mov
jmp
push
cmp
nop
fistpll
lgs
adc
sub
and
pop
in
imul
cltd
mov
or
push
in
sarb
sbb
mov
or
jns
add
xor
mov
arpl
or
push
push
xchg
or
out
fwait
out
rcll
sti
pop
rclb
lcall
sar
mov
leave
out
adc
rorb
pop
nop
mov
and
or
aam
test
fsubr
or
lods
jecxz
xchg
shlb
and
sbb
test
sub
inc
fimuls
lds
xor
fwait
dec
std
dec
mov
js
and
movsb
mov
loopne
hlt
leave
iret
adc
pushf
jb
popf
enter
mov
mov
mov
mov
jbe
sub
outsb
loopne
add
imul
and
decl
pushl
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
jmp
arpl
or
push
clc
insb
insb
es
adc
adc
leave
lret
das
roll
or
les
cmp
and
js
pop
sub
sahf
imul
lahf
push
sbb
inc
cltd
testb
in
adc
sub
mov
out
xor
push
jp
pushf
dec
or
pop
lods
mov
push
jge
cmpsb
loope
mov
xchg
and
pop
lods
xchg
inc
jo
push
push
push
addb
xchg
repz
mov
bound
cmp
call
loop
mov
ljmp
adc
push
mov
jmp
push
cmpsl
jl
push
pop
imul
jecxz
adc
xchg
mov
dec
loop
lcall
iret
dec
iret
dec
xor
xlat
cltd
mov
pop
pushf
out
xor
test
lds
add
push
sub
in
mov
jo
jle
lea
ja
test
and
push
lock
out
int
sbb
pop
add
ja
mov
push
ret
cld
lods
shr
mov
addl
outsb
scas
test
daa
in
mov
dec
scas
test
fs
loope
pusha
dec
fildll
jecxz
jno
cwtl
imul
ror
jno,pn
outsl
and
imul
into
out
or
or
and
mov
test
clc
aam
xor
int
lock
or
inc
ja
push
in
adc
mov
fstpt
inc
and
pop
popa
std
mov
inc
fnstcw
xchg
dec
mov
mov
addr16
jo
cmc
adc
loopne
sar
jo
loop
test
dec
dec
add
dec
jbe
mov
lret
pop
jmp
mov
sbb
cmc
nop
and
ss
lahf
lock
dec
sub
xor
test
adc
push
imul
lods
repz
jo
mov
xor
mov
ljmp
mull
mov
sti
or
adc
fmuls
decl
pushl
xor
mov
call
or
or
movsbl
cmp
je
jmp
xorl
jns
sbb
pop
lods
stos
cmp
push
adc
jp
and
inc
adc
loope
xchg
test
mov
mov
shl
mov
lea
sbb
lods
add
pushf
pop
mov
mov
or
fwait
int3
lahf
mov
dec
shll
push
pusha
and
push
out
int
sti
clc
fcmovne
call
mov
sbb
add
clc
or
test
adc
enterw
dec
jnp
aaa
pop
shll
mov
push
ret
and
out
jae
adc
add
daa
divl
inc
push
cmp
cmc
push
ja
pop
and
sub
fiadds
lods
adc
mov
mov
mov
xchg
enter
and
lcall
xor
pop
sbb
cwtl
outsl
adc
stc
lods
jo
bound
div
inc
ja
lock
pushf
or
or
xor
xor
shll
inc
fnsave
push
sbbl
inc
in
mov
mov
leave
dec
aam
inc
pop
mov
push
shl
and
cmpsb
pop
sbb
push
push
adc
xchg
jle
lods
jno
ljmp
lret
inc
sbbl
xchg
lods
ljmp
mov
dec
mov
jb
mov
lret
clc
cmp
push
inc
or
mov
filds
jmp
pusha
orl
cwtl
mov
shll
ljmp
fists
push
mov
rclb
pop
movsl
jnp
fldcw
cmp
fs
aas
cld
fidivrl
movsl
in
mov
sbbl
aas
nop
mov
pusha
push
push
inc
inc
lahf
in
and
xchg
cltd
pop
loopne
les
sub
push
jnp
cmpsb
adcl
incl
jg
fdivr
pop
push
ss
mov
imul
push
inc
push
pusha
adc
in
aam
fildll
ret
outsb
xchg
mov
jmp
sub
jge
jno
lock
subl
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
jmp
adc
fldl
out
cli
pop
push
push
adc
movlps
push
ret
mov
mov
cltd
pop
xchg
or
or
xchg
pop
mov
dec
xor
mov
into
ss
mov
add
ja
cmp
pop
fsubs
mov
mov
cmpsl
mov
dec
xor
mov
sti
lods
jnp
lea
rcl
xor
shl
mov
lods
mov
add
je
and
rorl
idiv
shrb
adc
xchg
mov
pop
es
add
aam
mov
stc
and
aam
jl
incb
dec
jnp
fimull
fwait
mov
test
mov
push
jl
xchg
jg
sub
mov
xchg
icebp
cltd
fcmovb
add
cmp
lods
pop
stc
push
insl
lret
mov
jno
adc
jg
shll
dec
cmp
and
jge
cmp
mov
lret
or
lea
push
pushf
es
sbb
in
shll
popf
fxch
shlb
outsb
jle
dec
add
lret
out
sub
dec
hlt
sbb
aad
loopne
push
xchg
sub
jno
lods
icebp
arpl
aad
inc
add
ds
lods
mov
in
xchg
lods
ja
out
and
lret
inc
aad
inc
mov
add
test
lret
adc
jmp
aas
xor
mov
icebp
dec
aam
mov
and
xchg
enter
jne
xor
loop
push
xchg
jns
jae
shrl
scas
out
pop
inc
ja
pusha
cmp
dec
sub
adc
push
jae
gs
ljmp
cwtl
adc
iret
pop
pop
loop
push
call
adc
xchg
in
pushf
bound
shlb
fdivl
jle
test
das
lea
popa
sbb
sbb
push
ss
test
jae
out
xchg
iret
sub
loopne
jns
mov
jg
fmuls
out
adc
sbb
data16
daa
mov
test
fnstenv
in
orl
cmp
xchg
movsb
dec
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
jmp
out
in
in
mov
mov
inc
pusha
adc
adc
roll
cmp
xlat
leave
or
mov
adc
imul
fmul
jl
in
int
or
push
jle
cmp
dec
dec
add
lahf
je
aas
push
jo
dec
pop
dec
popa
push
and
lods
adc
jge
jmp
packsswb
jle,pn
outsb
ljmp
adc
add
xchg
fs
divl
sub
rorl
sti
mov
ret
fldt
data16
in
and
aad
push
loop
std
fnstenv
pusha
addl
rcrl
out
adc
push
mov
das
rcll
pushf
mov
mov
xchg
cmp
or
lret
inc
add
mov
xor
jp
out
jb
xchg
ss
pop
and
xor
mov
and
stos
mov
js
cmp
aaa
mov
ljmp
or
bnd
mov
fldenv
xchg
adc
mov
add
and
and
lock
and
sbb
mov
pop
mov
loop
lock
xor
push
push
rcll
sahf
fbstp
inc
out
add
jecxz
dec
hlt
out
out
popf
mov
jle
incb
lock
pop
add
aam
test
lock
test
out
mov
jle
add
jne
push
stos
jle
enter
inc
add
push
mov
add
inc
inc
mov
push
mov
std
ljmp
cmp
add
inc
add
jge
jecxz
cmp
sub
dec
add
push
sbb
scas
inc
xchg
xchg
in
sbb
lea
cwtl
bound
sub
scas
ljmp
sbb
inc
xor
call
add
cmpsl
push
add
insb
mov
sub
xor
mov
es
or
int
xor
test
add
sub
mov
movl
jmp
adc
add
jnp
bound
ss
incb
cmc
pop
adc
adc
lds
imul
dec
xchg
dec
push
cmp
or
stos
rcl
inc
into
sub
sbb
in
xchg
xor
aad
je
mov
movsl
push
sbb
xor
mov
icebp
sbb
mov
dec
iret
je
mov
dec
in
or
xchg
ss
cmp
inc
xchg
jmp
fcompl
jecxz
aas
push
ljmp
add
xchg
fiadds
ficoms
jne
fdivrl
push
addl
xorb
cltd
jg
inc
jbe
arpl
loope
and
inc
negb
test
out
jge
cmp
jp
imul
sti
mov
mov
repnz
inc
fnstcw
cld
aam
add
and
rdtsc
rcrl
and
fxch
testb
scas
hlt
dec
and
movsl
sbb
mov
mov
mov
aam
or
jge
shrl
jae
add
cmp
jnp
cmpsl
bound
mov
lahf
push
dec
or
adc
fs
xchg
cmp
xor
cld
in
arpl
adcb
dec
int
btr
xchg
lods
int
imul
xchg
inc
mov
aam
mov
sub
mov
push
enter
movsl
nop
outsl
push
leave
jno
adc
jmp
std
outsl
xchg
iret
clc
lds
fcomi
repz
push
xchg
inc
mov
cmp
cmp
ret
iret
push
daa
xor
pop
mov
jb
lahf
in
out
out
in
mov
int3
and
jbe
mov
insb
sbb
les
mov
scas
rorb
mov
bound
lods
iret
or
mov
and
mov
test
mov
xor
sbb
adc
jne
sbb
mov
das
cltd
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
jmp
or
addl
leave
pop
pop
cwtl
cmp
add
js
pop
adc
adc
jne
or
adc
cmp
add
in
dec
dec
xor
dec
out
xchg
xor
cmp
mov
jno
in
inc
test
ds
jmp
mov
aaa
rcl
stos
dec
test
repnz
sbb
mov
cmp
mov
inc
testb
cmc
adc
inc
lcall
xor
pop
out
push
cmp
dec
shrl
testb
out
xchg
lods
dec
xor
pop
dec
jns
imul
cmp
pop
jb
aad
jnp
iret
filds
cmp
movsb
popf
dec
dec
mov
inc
and
sub
icebp
fcomps
ljmp
in
and
aas
ret
scas
icebp
test
std
sub
inc
pop
dec
pop
es
cld
xchg
je
fdivr
in
pop
aas
mov
cltd
test
dec
cld
push
mov
dec
mov
and
mov
fs
push
push
cmpsl
xlat
cli
add
popf
xchg
leave
shl
xchg
push
or
or
xchg
push
cmc
sbb
gs
repnz
and
mov
inc
xor
dec
xchg
clc
adc
or
shrb
pop
or
popf
mov
add
mov
test
mov
jle
repz
adc
std
addr16
sbb
lock
xor
out
cmp
and
xor
outsl
scas
lret
into
pop
insb
and
popa
sub
js
std
mov
loop
test
and
dec
jge
ret
xchg
pop
stos
cmp
clc
out
stc
pop
out
mov
outsl
jl
pop
insl
push
sub
outsl
lahf
lods
pushf
pop
mov
add
xchg
xchg
add
decb
xor
fmulp
testl
xchg
mov
outsb
and
popa
icebp
xchg
mov
fucomp
dec
outsb
sub
cmpsb
push
add
les
data16
fisubs
nop
mov
push
pop
rolb
inc
sahf
xchg
or
ljmp
xchg
xchg
cmp
lcall
mov
push
ud2
mov
jle
xor
imul
jg
ljmp
add
daa
jecxz
mov
mov
sub
scas
sbb
imul
dec
mov
mov
push
push
gs
test
shr
int
ficomps
repnz
bound
mov
jge
repnz
push
jp
pop
xchg
dec
outsl
stos
int
mov
sbb
out
in
mov
xchg
mov
mov
aas
sub
adc
test
and
mov
stos
mov
in
imul
inc
inc
inc
inc
jmp
mov
xorb
adc
xor
imul
jp
fldt
jbe
sar
jnp
cmp
ret
pop
imul
fisubs
cmpsl
loope
aam
gs
push
adc
mov
cmpsb
loop
or
leave
cmp
push
mov
or
movl
jne
mov
xor
mov
sbb
xor
movzbl
adc
div
xor
xor
sub
mov
mov
movzwl
sub
mov
xorl
div
mov
mov
movl
jmp
sbb
mov
xor
mov
mov
add
mov
adcl
shr
movl
rcr
shr
movl
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
movl
cmpl
je
add
jmp
fwait
mov
xchg
sbb
push
js
push
adc
adc
rcl
adc
adc
or
je
dec
mov
jge
pop
sub
mov
outsb
xchg
sahf
fsubl
ds
lods
mull
add
loop
call
or
and
iret
data16
pop
lret
std
xchg
fsubs
sahf
ja
jno
sub
xor
adc
pop
cs
movsl
fistpll
dec
mov
push
mov
outsl
movsb
pop
ret
mov
xchg
dec
xor
outsb
add
jecxz
popa
inc
fwait
cmp
mov
xlat
cld
das
mov
jp
mov
jg
xor
push
inc
fs
pmullw
sbb
add
fcoml
cmp
add
repnz
sbb
push
cmp
in
pushf
iret
inc
fwait
or
notb
dec
mov
insl
fisubrl
or
and
insl
sub
lret
fcoml
xchg
xchg
orl
and
push
rcl
mov
xor
sbb
pop
jno
or
mov
mov
lcall
cmp
shlb
das
or
add
pop
std
bound
scas
sub
pop
dec
and
inc
fs
cs
cs
dec
jno
cmpsb
scas
outsl
fwait
movsl
xor
adc
ret
mov
adcb
test
sbb
xchg
mov
sub
xchg
ret
push
add
push
pop
stos
cmc
push
pop
sbb
enter
mov
jg
and
jno
jbe
mov
pop
les
insb
or
in
iret
mov
pop
and
pop
cli
or
mov
inc
add
cmp
xchg
sub
inc
inc
test
xchg
lds
lret
add
pop
loope
xchg
nop
outsb
and
stc
push
dec
xchg
jnp
sbb
lods
lea
js
jmp
test
int
pop
inc
mov
pop
fsubl
add
int
mov
push
and
inc
rorl
inc
mov
add
lods
add
shl
test
sub
imulb
inc
jecxz
adc
sbb
xor
es
sbb
ss
jg,pn
addb
xchg
dec
mov
sub
in
dec
xchg
addl
xchg
lret
out
add
gs
fstpt
subb
pop
or
sub
mov
mov
out
shr
mov
rclb
lods
outsb
inc
pop
sub
fmulp
lret
sbb
fs
sbb
rorb
adc
stc
fadds
jl
pop
sub
sbb
add
jp
imul
mov
xlat
sub
sub
lcall
sbbl
fs
movsb
or
adc
pop
cmpsb
add
xchg
fldcw
pop
xchg
insl
fcoml
xchg
scas
pushf
fisttpl
dec
xchg
lcall
mov
ds
pop
sub
in
repnz
popf
jle
loope
cmp
pop
outsb
jmp
gs
mov
and
les
aad
test
inc
ret
int3
pop
dec
dec
insb
cmc
es
mov
pop
loope
dec
addb
imul
xchg
out
and
cmp
inc
hlt
inc
daa
cwtl
fimuls
in
jnp
push
or
add
divl
push
rorb
lcall
add
cmp
add
leave
ret
movl
cmp
jae
movl
cmp
jae
sbbl
shld
shl
ret
mov
orl
xor
adcl
and
shl
ret
xor
xor
ret
