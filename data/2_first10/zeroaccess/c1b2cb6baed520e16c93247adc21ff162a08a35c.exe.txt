push
mov
sub
mov
adc
mov
mov
or
mov
sub
push
movl
mov
mov
mov
sbb
mov
and
mov
orl
mov
mov
add
orl
mov
add
mov
jmp
iret
inc
loopne
push
adc
fmuls
fisubrl
ja
lods
or
xchg
mov
jmp
xlat
sahf
push
in
mov
adc
ss
data16
mov
dec
inc
movsl
mov
pop
inc
xchg
mov
fdiv
ret
orl
adc
movsb
jge
dec
mov
and
cwtl
clc
pusha
lds
popf
mov
inc
push
mov
cli
imul
loop
push
stos
xor
notb
out
mov
cmp
xor
sub
jae
jp
call
jle
push
push
jl
adc
or
cmp
lret
xor
mov
aam
jne
push
ret
icebp
sbb
pop
xlat
mov
test
hlt
xchg
push
mov
mov
cmp
loopne
sbbl
dec
popf
pusha
fstps
sti
mov
and
add
add
dec
imul
rcll
mov
test
lret
fdivl
sub
xchg
jle
and
nop
sbb
sbbl
daa
pop
shll
pop
mov
ja
loopne
cmp
jnp
fwait
test
nop
inc
jbe
cli
or
and
cmp
subl
sahf
cld
and
inc
mov
add
jbe
mov
iret
cmp
mov
push
push
testb
cltd
sub
jmp
adc
add
ret
mov
lcall
jnp
and
in
mov
mov
adc
aas
pop
nop
xor
rcll
mov
mov
mov
ds
or
mov
or
jge
sbb
dec
dec
mov
or
ja
orl
adc
out
in
xchg
xchg
jno
adc
or
or
jbe
jg
adc
pop
and
add
mov
jae
dec
mov
mov
dec
fucom
mov
jge
fldcw
insb
leave
mov
push
lds
mov
pop
pop
xchg
inc
lods
cmp
sar
fmuls
cwtl
lods
or
push
mov
ret
xor
jo
pop
shl
jg
test
cmp
insl
jecxz
xchg
xchg
adc
ja
mov
and
adc
aad
testb
imul
cmpsb
cmp
std
dec
jne
repz
mov
mov
lock
out
int
sbbb
mov
mov
xchg
mov
push
xchg
inc
addr16
cmp
out
push
jl
or
xorb
jae
sub
add
inc
rcl
push
repz
daa
mov
lock
jge
popa
mov
jns
dec
mov
sbb
sbb
out
aas
loopne
mov
jns
pop
hlt
loop
fidivrs
clc
out
pop
pop
popf
jno
adc
jno
cmc
pop
dec
subb
cmpsb
mov
xor
clc
inc
xchg
jg
xor
dec
fistl
je
jmp
lret
dec
push
lods
gs
insl
mov
jl
and
xchg
pushf
jecxz
out
mov
les
negb
shll
arpl
jle
clc
popa
shlb
jae
and
clc
or
pop
addb
test
jns
xchg
mov
rcrb
fstpl
fdivr
fsubrl
ret
rcll
scas
cltd
xor
push
pop
mov
jno
ja
lahf
jae
iret
dec
jae
cmpsl
in
pushf
dec
in
leave
push
movsb
stos
sub
and
sub
cmp
push
mov
sub
repnz
inc
dec
and
lcall
or
outsb
shr
or
sub
xchg
call
or
xor
sub
xchg
sahf
mov
mov
ds
or
or
stos
mov
mov
xor
les
in
jmp
insl
dec
cmp
mov
test
adc
stos
inc
inc
sbb
sub
stos
das
lock
jbe
mov
out
popf
cmpsl
mov
adc
jp
push
mov
test
mov
es
mov
mov
or
out
push
pop
xchg
jns
cmp
lods
sbb
push
push
ficoms
push
pop
out
xor
mov
incl
add
int3
xchg
dec
fadd
ljmp
or
jmp
dec
incl
pop
scas
sbb
xchg
ljmp
mov
or
cmpsb
mov
movsb
add
or
fistps
ja
mov
mov
loopne
cwtl
outsb
iret
jmp
imull
popa
adc
fs
xchg
js
or
sub
data16
pop
es
push
xchg
adc
aad
ret
lea
int3
xchg
cmp
push
or
cvtdq2ps
inc
into
orb
inc
aam
sahf
inc
fwait
jmp
inc
lods
jae
pop
sti
ds
sbb
jle
jp
or
testb
mov
imul
dec
into
mov
bound
test
jns
shl
jno
testl
push
xchg
jns
arpl
push
xor
repnz
sbb
imulb
shll
jge
sub
xchg
xchg
jb
sub
stos
data16
pop
inc
pop
into
or
inc
aaa
xor
shll
ds
mov
ficompl
inc
call
iret
add
rcll
cmp
jno
mov
test
cs
loope
stos
scas
loope
and
jmp
ffreep
adc
lea
popl
sbb
setge
adc
nop
push
cld
cmpsl
mov
int3
mull
jp
add
xchg
xrelease
add
mov
ret
int3
sub
dec
in
in
jb
mov
in
ds
push
pop
xchg
cli
xor
or
subb
lods
push
popa
adc
enter
hlt
mov
or
cmp
inc
pop
cltd
dec
ficomps
mov
movsb
mov
cmpsb
mov
xchg
out
cld
inc
cwtl
add
movsl
mov
lea
movsl
shlb
ret
mov
mov
adc
lahf
test
xchg
lar
sbb
add
cmp
push
mov
insl
push
dec
addr16
xchg
adc
sbb
adc
push
cld
jmp
sbb
cld
mov
in
cwtl
jle
std
insb
mov
jmp
cmpsl
sahf
push
mov
andb
sbb
adcb
test
leave
add
daa
pop
iret
jnp
lret
xchg
mov
cld
jp
mov
fsubs
sahf
aaa
inc
icebp
xor
and
sbb
movsb
nop
sbb
shl
and
lods
cwtl
xchg
rcrl
push
mov
out
push
cmc
cmc
push
and
push
xorl
fidivrl
scas
les
dec
and
data16
jne
push
jle
int3
mov
in
or
daa
in
push
out
inc
out
arpl
and
sahf
cmpsb
repz
stos
pop
loop
pop
int3
aaa
or
pop
out
push
xchg
add
into
mov
push
imul
int3
das
ja
jmp
mov
inc
jge
sbb
movsb
pop
into
clc
in
push
push
xchg
mov
fucomi
in
add
repnz
cmpsb
in
inc
test
mov
mov
mov
addl
sub
notl
mov
movl
sbb
add
mov
not
orl
orl
cmpl
movl
mov
jmp
mov
jg
pushl
pushl
call
sbb
sbb
sub
or
orl
lea
adc
mov
or
mov
and
mov
xorl
mov
adc
add
mov
dec
mov
mov
adc
jmp
mov
xor
js
in
fs
add
mov
hlt
scas
xor
xchg
ret
es
test
pop
jmp
jae
jbe
insl
stos
mov
xchg
mov
cmp
mov
cmpsl
imul
sub
xorl
xchg
insl
fsubp
call
mov
and
push
mov
sub
mov
outsl
pop
loopne
mov
xchg
dec
push
addb
cmp
push
fxch
jno
cwtl
jbe
add
push
sahf
xchg
iret
mov
mov
stos
fnsave
insb
cmp
sbb
stos
movsb
fstl
mov
mov
sbb
jae
lahf
in
minps
jp
fisttpll
jecxz
aaa
xor
std
and
and
push
js
loope
popl
cld
daa
shrb
xchg
dec
dec
inc
mov
and
push
std
jge
adcl
sub
xchg
add
or
jbe
cmp
mov
and
mov
scas
add
rorl
cwtl
adc
sub
sub
dec
fisubl
out
jecxz
inc
fwait
movsl
outsl
pop
sub
jb
iret
stos
lret
sahf
hlt
jl
xor
adc
mov
fnstsw
push
scas
and
or
push
sbb
jbe
cmp
inc
pop
bound
xor
cmpsl
orl
test
and
pop
sub
data16
nop
dec
mov
add
stc
pop
jbe
sub
xor
mov
bound
pop
jae
popa
sbb
cmp
dec
cmp
pushf
and
loope
nop
pop
insl
cmp
mov
dec
jmp
testl
lea
bound
jae
fisttps
cmp
inc
jne
xchg
jnp
pop
ret
fistps
fadds
cmp
ja
cltd
es
cmp
mov
pop
mov
cli
cmpsl
add
sbb
popl
data16
push
stos
or
pop
mov
imul
push
js
ret
ret
xlat
insl
rcr
cmpsb
fimull
or
push
aas
jne
shlb
stos
dec
add
call
scas
xchg
mov
mov
daa
incl
ja
mov
add
add
jne
shr
push
inc
daa
arpl
xchg
ja
cld
dec
sbb
pushf
stos
jg
stos
xlat
push
cmpsl
pop
rorl
xlat
inc
jecxz
jp
sbb
xchg
icebp
jmp
add
arpl
push
out
pop
pop
lcall
mov
popa
clc
jp
clc
sbb
shll
sbb
jns
mov
jg
scas
iret
sbb
in
or
ss
sub
jg
pop
test
jg
add
mov
and
or
daa
out
adc
push
push
pop
adc
fcmovu
dec
xor
int3
sbb
jno
push
lods
sub
dec
xor
sub
ljmp
mov
pop
jae
insl
mov
inc
dec
shlb
add
cmp
jge
push
cmpb
sti
cwtl
cmpsl
arpl
daa
mov
shll
adc
and
call
movsb
lods
jbe
inc
out
pop
inc
or
mov
mov
push
add
out
mov
out
push
in
xchg
test
aas
loop
add
mov
outsb
lcall
xchg
imul
outsl
xchg
xor
mov
mov
add
dec
add
lcall
dec
dec
shlb
add
sbbl
loope,pt
popa
add
push
xchg
or
pop
out
fs
mov
mov
test
pusha
push
mov
push
push
lds
xchg
sti
or
adc
stc
ss
aas
les
mov
cmpsb
inc
aad
aaa
or
push
das
jnp
sbb
and
inc
push
lcall
clc
into
sarb
xor
stos
mov
lock
dec
inc
or
addr16
addr16
std
pop
dec
dec
xorl
push
arpl
inc
lcall
dec
cmp
adc
ljmp
repnz
sub
nop
sbb
mov
mov
bound
call
jl
aas
or
xchg
mov
fldenv
ljmp
push
xchg
nop
jb
les
and
add
lods
jno
ret
xor
cmpsb
xchg
inc
cmp
jecxz
call
lock
sbb
inc
mov
xor
loope
sbb
ret
adc
mov
adc
mov
lret
push
xor
and
xchg
dec
lahf
insb
jmp
shll
repz
lods
into
add
cmc
xchg
mov
je
hlt
dec
mov
jo
loope
push
addr16
ss
xchg
pop
call
in
inc
push
test
xor
insl
stos
mov
mov
out
cmp
xchg
pop
pop
pop
loopne
repz
jl
sti
mov
xor
js
or
xorl
aaa
mov
push
and
insb
xor
cs
fdivl
dec
mov
dec
dec
cli
not
jo
gs
mov
out
ret
dec
xchg
or
cmp
jmp
outsl
mov
aam
mov
fs
ret
cmpl
insl
das
mov
scas
dec
das
shll
fmul
stc
push
xor
mov
push
sub
mov
add
cld
rcrb
push
sub
aas
sbb
push
push
jo
push
jbe
adc
inc
scas
arpl
mov
mov
inc
or
mov
jmp
xchg
cmpl
pop
test
dec
xor
jge
aam
lds
in
or
lahf
and
leave
out
pop
shll
mov
sbb
es
lret
mov
addb
and
sbb
fisttpl
sbbl
in
loope
iret
fwait
ds
lahf
loope
xchg
jo
inc
add
jns
movsl
cli
ret
add
repz
scas
negb
mov
push
xchg
fprem
cmp
outsl
fwait
adc
imul
jecxz
bound
adc
pusha
test
popf
out
movl
hlt
fcmovb
movsb
cmp
notl
sub
or
xchg
dec
arpl
dec
inc
lods
pop
mov
push
add
sbb
lock
mov
jns
jmp
shll
dec
fcoms
and
loope
es
out
mov
adc
adc
push
jg
push
cmp
or
push
fsubrl
stc
and
sbb
aaa
mov
stos
add
mov
enter
push
xorb
mulb
aad
inc
out
bt
jecxz
jbe
shl
and
loopne
adc
imul
lea
sub
mov
stos
enter
push
sbbb
jno
cwtl
mov
lret
pop
test
cltd
in
in
dec
fs
test
test
scas
mov
push
mov
and
add
sbb
xor
pop
mov
inc
push
push
arpl
jns
or
leave
jg
cmpsb
mov
shrd
adc
shr
mov
jmp
mov
lock
popf
mov
lret
inc
push
and
ja
dec
loop
bound
inc
mov
test
jnp
out
cli
cmp
rcr
sbb
lcall
mov
je
dec
sbb
jecxz
sub
xchg
jno
mov
aaa
xor
out
or
push
push
sbb
push
inc
mov
in
mov
or
cmp
sbb
jecxz
cmp
mov
rorl
sub
xor
div
adc
rcrb
xor
push
fwait
xchg
cld
pandn
aam
cmpsb
mov
sub
mov
addr16
sbb
pop
sub
lock
push
call
js
cld
mov
mov
dec
lcall
mov
adcb
xchg
sti
ljmp
xor
push
pusha
mov
mov
jbe
repnz
cmp
adc
adc
cli
lea
add
ret
hlt
fbld
cli
mov
cs
pop
xlat
push
nop
dec
mov
push
jns,pt
pop
aad
inc
jmp
scas
add
aam
push
std
imul
std
cmp
xchg
lods
icebp
out
mov
ret
cmpsl
mov
rclb
push
sahf
xor
es
fmull
movsl
sbb
jle
push
jl
ljmp
stos
mov
pusha
ret
pop
jmp
fidivrs
add
dec
and
mov
pop
fsts
jl
fldcw
stc
mov
data16
cmp
ffree
jae
int
fstpt
dec
pop
sbb
nop
stc
adc
hlt
cmpsl
stos
test
jo
mov
mov
mov
test
inc
inc
cmp
adc
pop
dec
pop
dec
push
jmp
sbb
lock
das
mov
je
stc
pushf
and
fs
dec
push
cmp
cmp
mov
stc
outsl
pop
cmp
mov
jae
dec
popa
icebp
add
pop
pushf
stc
xorb
jp
rolb
arpl
dec
je
dec
adc
mov
outsb
cmp
mov
push
and
pop
cli
clc
cld
pop
mov
aaa
add
push
jae
roll
dec
pop
and
scas
pop
inc
lcall
xor
out
dec
aam
add
or
iret
popf
aad
test
call
xor
jbe
mov
xchg
mov
inc
rorl
cmp
je
outsb
loope
mov
sub
rcl
pop
mov
icebp
das
ret
and
mov
inc
xor
xchg
andl
xchg
sub
aad
test
fsubs
cs
scas
mov
icebp
xlat
mov
dec
sbbb
icebp
scas
mov
sbb
jbe
mov
rcrl
mov
loop
dec
filds
cmp
je
mov
jae
and
addr16
cmpsb
xor
ds
adc
gs
dec
mov
mov
mov
scas
xchg
mov
inc
cmp
and
or
mov
cltd
pop
loop
std
lock
shlb
sbb
out
shlb
cmp
push
repz
jo
mov
and
shrl
mov
rcl
mov
ljmp
pop
and
push
push
push
jbe
xor
mov
cmp
pop
pop
pop
inc
mov
mov
in
pop
ja
and
or
push
xor
aam
mov
xor
dec
lahf
inc
cltd
pop
orb
bound
pop
scas
push
popa
aas
hlt
dec
cmpsl
lods
jg
cli
lcall
lods
jo
lods
xchg
mov
push
data16
mov
fimuls
xchg
cmpsb
dec
xchg
jno
add
jg
lret
xor
les
scas
mov
int3
push
aad
inc
js
push
test
xchg
cmp
scas
mov
mov
pop
mov
inc
xor
std
cmp
je
ret
popa
out
mov
sub
add
icebp
sbb
data16
cwtl
pop
fmull
sar
jns
fldt
add
getsec
dec
test
sub
pop
mov
rol
scas
shll
mov
pop
pusha
mov
pop
and
inc
fcomp
adc
sbb
orb
pop
sub
aaa
fistl
xchg
sub
sti
aas
rcrb
lahf
inc
push
aaa
lods
mulb
inc
std
enter
in
add
neg
sarl
movsb
dec
mulb
mov
xor
loope
stos
pop
arpl
out
pop
lock
outsl
sub
pushf
mov
sti
lods
repz
imull
fisttpl
cmp
movsl
mov
push
jmp
out
xlat
mov
lret
imul
xchg
add
adc
xchg
aaa
push
paddsb
bound
repnz
add
mov
ljmp
enter
sbb
test
cmpsb
cmc
ja
mov
xor
xchg
cmpl
sbb
lahf
cmp
dec
add
adc
jo
xchg
pop
int
or
cld
xor
adc
and
cmp
mov
incl
pop
js
dec
jl
xor
out
mov
adc
xor
inc
stos
loope
sub
and
sub
jle
dec
sbb
mov
jmp
aad
bound
jns
push
orb
popa
and
sub
aas
aam
fisubrs
or
addr16
iret
inc
in
fidivs
sub
fisubrs
in
adc
test
push
mov
inc
mov
xchg
sub
lahf
in
sbb
cli
sub
jl
adc
lret
loope
mov
mov
add
cwtl
push
pop
test
and
dec
or
xchg
adc
stos
pop
mov
dec
sub
cld
cmpsb
cwtl
and
adc
fmul
sbb
mov
xchg
decb
je
cwtl
mov
loope
ret
or
adc
inc
cli
aas
sbb
jmp
sbb
pusha
ss
pop
xchg
in
pushf
test
mov
cmp
xchg
mov
dec
or
sbb
cwtl
and
in
stos
jp
add
aam
stos
stos
jae
mov
xchg
mov
ret
xor
cmp
test
xor
lcall
cld
out
je
aas
gs
loopne
incb
clc
bound
push
jmp
mov
cs
shl
ja
and
daa
xor
cmc
adc
or
cmpsl
xlat
jne
xchg
aaa
test
sub
mov
lods
adc
jb
dec
adc
das
jno
rolb
push
outsl
cwtl
ficoms
dec
stos
notl
pushl
mov
insb
jb
mov
inc
bound
dec
xor
xor
sbb
mov
hlt
ss
in
push
xor
movsl
cmc
push
gs
adc
or
nop
fneni(8087
inc
aam
subl
jnp
aas
mov
jmp
iret
xchg
add
fsts
fidivs
in
out
test
aaa
jge
sub
imul
fcmovb
inc
mov
adc
in
andl
push
mov
fmuls
ja
xchg
bound
pop
mov
sub
sub
inc
sbb
lret
adcb
push
sbb
and
pop
cmp
add
movl
add
rorb
rolb
add
movl
movl
movl
jmp
movl
not
jg
pushl
push
push
push
pushl
push
pushl
call
sub
xorl
andl
andl
addl
addl
adcl
movzbl
adc
jmp
sti
loopne
stos
dec
or
xor
dec
outsl
into
xchg
add
mov
push
dec
dec
adc
fmull
mov
inc
daa
jmp
cli
adc
dec
push
imul
insl
fistl
push
fcmovnu
and
adc
xchg
lret
das
pop
pushl
int
xchg
icebp
cmc
sbb
gs
addr16
leave
pushf
sub
jbe
aaa
mov
ja
inc
data16
daa
cmp
outsb
pop
adc
xchg
idiv
push
push
xchg
sahf
jmp
jo
or
add
fimuls
je
das
dec
push
lcall
cmp
mov
ret
ss
in
loop
inc
pop
pop
mov
aas
push
mov
cmc
lods
dec
mov
cmpb
dec
rcrl
pop
add
aam
push
fbld
fldenv
xchg
and
fdivrl
cmovae
pop
cmp
fwait
sub
fadds
xchg
mov
call
cld
out
xor
inc
sub
call
adc
js
push
mov
das
test
fildll
sbb
je
mov
lea
xchg
cmp
or
aas
stos
sub
ret
idivl
aaa
mov
arpl
mov
insl
push
dec
pop
incb
xor
clc
pop
xchg
add
sar
mov
add
mov
outsb
xor
ljmp
mov
adc
adc
mov
ljmp
add
stos
mov
roll
cwtl
xchg
add
dec
pushf
call
leave
mov
ret
test
mov
sarl
int3
arpl
shr
cmp
iret
cmp
ror
out
adc
out
push
or
dec
jecxz
popf
inc
add
xchg
dec
scas
sbb
dec
jns
pusha
cwtl
cmc
out
test
out
adc
or
gs
movsb
test
fs
jae
push
sti
dec
inc
jle
xchg
into
pop
adc
jle
mov
repz
inc
jecxz
ljmp
pop
cli
icebp
cmp
js
je
jo
je
popf
fisttps
outsl
out
sbb
es
jmp
add
popa
fimull
push
jl
xor
inc
sub
fs
adc
inc
mov
xchg
push
jne
pop
in
cmpb
or
aam
hlt
jmp
fistl
or
int
pop
mov
adc
jbe,pn
mov
mov
push
and
repz
iret
inc
ds
sbb
das
and
rcr
jb
mov
xor
cs
ss
es
jle
scas
pop
xchg
jl
mov
pop
mov
dec
pop
sbb
cld
xchg
in
outsb
xchg
adcb
loopne
push
inc
mov
aaa
inc
mov
adc
ss
dec
mov
sti
lods
cs
mov
das
adc
fildll
xor
imull
sbb
in
dec
sub
jle
fiadds
jo
out
adc
add
in
jle
jp
bound
or
xchg
sbb
aam
push
aam
fidivs
add
std
xchg
push
adc
xchg
xor
jns
fdivs
jecxz
sbb
inc
xchg
push
ficoms
lea
cmp
inc
cmpsl
xchg
mull
cmp
fcom
adc
cmpl
mov
adc
and
pop
mov
arpl
jnp
leave
dec
jl
fistps
insl
testl
xor
pop
sub
or
rclb
pop
lods
adc
pop
adc
jb
daa
add
leave
stos
lret
push
xchg
xor
test
xchg
cmpsb
jg
stos
pop
push
aad
inc
mov
or
push
dec
sbb
gs
dec
dec
pushf
out
push
inc
rcrl
loope
jl
xorl
push
pop
outsl
pop
lret
in
stos
movsb
push
insb
lcall
enter
cwtl
cmp
test
in
mov
mov
insl
mov
mov
ss
adc
add
pop
mov
sbb
cli
adcb
sbb
ds
dec
es
xchg
int3
out
scas
das
adc
adc
fcoms
adc
mov
sti
push
shrl
in
gs
test
aaa
lds
in
cmp
outsb
fsubs
or
cwtl
pushw
daa
xchg
ds
or
lds
je
fnsave
xchg
movsb
rolb
jno
subl
in
inc
mov
xor
xchg
or
dec
fucom
enter
ljmp
push
fs
push
fdivrl
cmp
sub
add
in
pop
test
lret
negl
in
movsl
clc
xchg
fadd
sbb
xorb
lcall
ja
ja
scas
subb
pop
jg
pop
outsb
or
xor
mov
pop
add
push
mov
xor
jg
popf
sahf
xor
std
mov
cmpsl
xor
or
add
lock
outsb
mov
loop
jl
or
aad
dec
aaa
add
cli
or
pop
push
js
idivb
roll
fimull
cmp
je
cmp
inc
sub
movaps
sub
imul
cmp
push
inc
xorb
sbb
adc
loopne
xchg
and
xor
push
mov
pusha
cmp
arpl
pop
sbb
pop
dec
xchg
in
cmp
cs
adc
mov
loop
jno
adc
das
jno
ja
lds
aas
sub
pop
pop
adc
sub
orb
cmp
lea
mov
rcrl
mov
dec
in
or
aad
xor
stos
mov
outsb
sarb
test
xor
push
pop
xchg
lret
push
cmp
xchg
jae
bound
pop
fiadds
lahf
jge
fimull
loop
cmpsb
std
int3
and
xchg
adc
mov
sti
inc
dec
and
mov
imul
mov
xchg
stos
push
push
ljmp
inc
test
add
loope
addr16
dec
iret
lods
clc
fldt
push
adc
jp
add
rclb
jle
xchg
in
jg
xchg
mov
pop
mov
and
xchg
and
sub
rorb
negl
sub
pop
arpl
mov
in
mov
adcl
push
rcr
movsb
shl
stos
dec
bound
test
adc
in
in
pop
dec
xchg
and
shlb
mov
dec
mov
inc
sub
mov
cltd
xor
mov
decb
das
into
cmp
test
mov
lods
sub
rolb
stc
leave
data16
adc
or
rcl
test
cli
or
mov
shll
movsl
inc
push
pop
jns
outsl
jb
adc
pusha
aaa
jnp
mov
test
and
xchg
sub
dec
test
pusha
pop
mov
or
movl
movl
sub
movl
movl
and
movl
movl
movl
xor
or
adc
movl
cmpl
movl
mov
jmp
not
jl
push
pushl
pushl
push
call
add
sbbl
add
sbbl
xorl
sbbl
notl
or
movl
addl
movl
movl
movl
mov
or
mov
movl
dec
movl
movl
cmpl
movl
movl
movl
movl
jmp
mov
jge
push
call
movl
orl
orl
add
xorl
xorl
xorl
and
movl
cmpl
movl
mov
jmp
mov
mov
jb
push
pushl
push
push
pushl
push
pushl
push
push
pushl
pushl
call
orl
sbbl
adc
addl
movl
sbbl
movl
add
movl
jmp
and
jnp
sub
mov
xchg
lea
ja
dec
sub
in
add
daa
outsl
and
ds
outsl
and
cmp
lcall
rorb
adc
add
push
push
repnz
notb
shrl
cmp
pop
mov
in
push
lret
cld
ja
xchg
subps
jp
sub
dec
push
lea
pop
pop
mov
sub
es
xchg
mov
pop
pop
mov
frstor
or
cs
arpl
scas
xor
adc
mov
enter
push
in
push
adc
push
std
ret
dec
xchg
pop
fmuls
mov
push
test
pop
repz
and
push
call
test
nop
jno
test
clc
dec
ficompl
dec
push
test
push
xlat
in
jmp
cmpsb
daa
mov
imul
push
mov
lahf
xor
and
pushf
outsb
inc
dec
mov
subl
sbb
push
adc
adc
mov
pop
cmp
sub
sti
cld
mov
adc
push
loopne
mov
inc
push
sub
sbb
sbb
push
sbb
or
jg
sub
pop
xor
xchg
and
mov
gs
pop
setb
jnp
inc
outsl
mov
push
push
xorb
or
movsl
fdivrs
int3
mov
in
loopne
mov
adc
mov
lret
inc
xchg
xchg
jl
xor
pop
add
syscall
mov
lods
insb
lcall
adc
lods
jecxz
pushl
xchg
aas
jecxz
repz
mov
mov
pop
idivl
stos
mov
lock
sub
clc
cmp
sub
mov
cwtl
cmp
ja
jp
jne
jecxz
xchg
xor
adc
insl
frstor
ja
mov
mov
out
fs
outsl
ljmp
nop
leave
lahf
or
mov
and
lret
rcrl
fbld
and
sbb
mov
push
jp
sub
enter
sub
insl
cltd
cmpsb
pusha
stc
add
jmp
cld
mov
sbb
cltd
cmpsl
cltd
shlb
inc
popa
cmp
and
jne
loopne
rorl
loope
les
and
pop
fs
leave
and
repnz
int3
adc
repz
lods
sbb
sub
icebp
add
xchg
int
jne
lds
adc
pop
jge
xchg
jl
hlt
stc
xchg
cmp
lret
lahf
push
sahf
dec
and
jl
in
stos
iret
cmp
outsb
and
clc
mov
jl
mov
test
call
xchg
cli
lret
outsb
sbb
cmp
shl
jp
and
inc
mulb
sbb
addb
lods
in
jmp
out
jmp
repz
es
icebp
mov
or
rolb
and
sbb
aad
jb
xchg
in
pop
jmp
sbb
clflush
cmp
arpl
ret
das
nop
push
xor
xchg
pop
imul
mov
daa
daa
mov
pushw
pop
sbbb
ret
xchg
enter
mov
inc
test
pushl
loop
shlb
sbb
xor
lret
popa
loope
sbb
jnp
cmp
hlt
cmp
push
xor
hlt
xor
insb
push
insl
sub
sbb
mov
hlt
loop
pop
test
cmpb
mov
mov
mov
adc
loopne
sub
sarb
sub
pop
mull
inc
fidivrl
out
lahf
mov
or
xor
lds
mov
sti
cmpsl
in
je
jae
test
aas
es
sub
daa
jae
mov
pop
fisttpll
mov
mov
xchg
fdiv
out
iret
ja
push
test
cmp
ficoms
test
and
js
mov
and
pop
enter
pop
jbe
inc
mov
mov
in
cmc
pushf
cmpsb
push
mov
icebp
popf
inc
sub
popf
jge
xor
sbb
mov
push
icebp
and
stos
push
cmp
loope
and
xchg
arpl
adc
arpl
adc
xor
fldenv
dec
sti
inc
stos
out
add
pop
dec
mov
jge
insl
enter
ljmp
in
out
call
shl
cmpsl
pop
insb
jb
arpl
lcall
mov
jl
loope
cmpl
imul
push
test
xchg
pop
and
hlt
test
insl
inc
dec
lahf
sbb
xor
lock
pop
test
aam
push
jb
push
ja
jmp
pop
push
orb
push
jb
shrb
or
jo
in
sahf
cs
xor
sbb
sti
das
jnp
or
scas
xor
sub
test
fwait
xchg
outsb
lock
fs
pop
ja
sbb
xor
add
pop
adc
je
pushf
xchg
mov
jnp
dec
sbb
ret
ljmp
stos
dec
out
add
in
or
mov
pop
inc
push
jae
inc
jns
add
lcall
or
mov
mov
sar
adc
frstor
lret
test
test
test
les
pusha
movsb
mov
fmull
scas
sahf
loop
insb
adc
lods
lahf
mov
mov
and
shlb
imul
sbb
jne
xchg
loop
into
repnz
daa
pushf
stos
mov
xorl
add
xchg
daa
dec
jo
mov
cltd
adc
and
lock
sbb
add
imul
cmp
cmp
pop
notb
ficoml
mov
subb
push
xor
into
sub
jbe
and
pop
sub
pushf
add
loop
iret
pop
icebp
jmp
imul
inc
int3
push
mov
outsb
fs
mov
xor
int
shr
mov
xor
mov
pop
std
or
jmp
add
push
loop
int
push
xor
aaa
iret
fsub
jbe
jb
dec
xor
and
enter
xor
pop
sub
pop
mov
in
xchg
xor
sbb
adc
push
loopne
sub
loop
icebp
cmpsl
mov
adc
dec
fnstsw
sub
sbb
mov
dec
xchg
fisttps
push
jnp
lret
xchg
mov
sahf
add
arpl
cmp
stos
shl
adc
mov
add
fadd
xchg
scas
bound
out
sbb
adc
sbb
add
mov
pop
jp
lds
inc
jmp
hlt
dec
fisttps
push
nop
idivb
adc
xor
mov
shrb
test
shll
inc
cwtl
ljmp
mov
inc
fisubrl
jg
xchg
cmpsb
rep
jns
pop
in
aad
or
mov
xchg
xchg
stos
jno
fcmove
jecxz
cli
test
pop
addl
xchg
xor
push
lea
ret
les
scas
and
nop
xchg
sub
or
movl
inc
movl
xorl
movl
mov
xor
movl
not
movl
mov
addl
jmp
in
outsl
dec
gs
notb
inc
test
cmpsl
les
ja
lods
rcrb
sahf
and
int3
cmp
in
inc
inc
fnstsw
fildll
test
call
outsb
scas
loop
cmp
mov
rcll
jae
xor
sarb
inc
mov
mov
xchg
xor
mov
cltd
jmp
lret
je
jle
mov
enter
scas
or
lods
imul
cmp
stos
pop
pop
daa
test
ret
cld
or
cmp
inc
inc
mov
out
adc
add
repz
mov
insl
pop
addr16
test
rcll
and
outsl
cmc
push
test
mov
mov
fwait
pop
clc
or
sub
add
sub
mov
out
or
xor
xchg
push
ret
inc
aam
out
inc
pop
sub
inc
sub
add
jns
add
lds
movsl
sti
cmp
adc
xchg
dec
inc
mov
pop
sub
cli
cmp
jg
loope
mov
inc
lret
imulb
sahf
xor
dec
out
sub
sub
mov
test
repz
pop
cmpl
popf
mov
sub
out
sahf
je
call
iret
into
dec
es
pop
dec
negl
mov
into
xchg
add
out
stos
cmp
ficomps
or
sarl
fwait
pusha
inc
dec
jo
inc
pop
pop
inc
jp
fiadds
mov
push
fstl
leave
sbb
xchg
ret
sbb
in
pop
mov
scas
test
xchg
cmp
xlat
jbe
inc
cmc
sar
js
mov
pop
aam
dec
or
cmp
cmc
clc
dec
outsb
in
subb
jae
ss
add
cmp
test
jno
insl
inc
jns
pop
aad
mov
cltd
sbb
xchg
out
test
idiv
pop
lahf
fcmovnb
dec
cmpsl
out
mov
pop
int
stos
xor
inc
sub
lea
nop
or
adc
bound
test
sub
cmp
lock
mov
xorl
cmp
arpl
push
movsl
inc
push
dec
popw
rcrb
or
arpl
scas
inc
out
pop
aas
popa
aad
add
jbe
shr
sub
nop
and
stc
inc
mov
hlt
push
stos
mov
mov
xor
sahf
pop
mov
int3
clc
push
push
add
jp
jno
xor
aam
dec
pop
mov
xchg
sub
mov
mov
or
out
sahf
adc
or
inc
insb
and
popl
jno
scas
shrb
mov
inc
lcall
cmpsb
ret
pop
jle
sahf
es
insl
lahf
lods
xor
cmp
ja
je
clc
ja
pop
stos
rcll
xor
inc
insl
lret
adcb
hlt
in
pop
pop
sti
mov
dec
sbb
rcll
jb
and
fadds
jb
arpl
or
jne
les
js
push
push
push
rolb
inc
shl
lock
cmp
push
and
mov
xor
out
jbe
mov
push
or
cli
jmp
mov
xchg
dec
add
sbb
test
pop
jl,pn
and
push
xorb
cwtl
aam
sbb
jl
fs
sub
mov
fldenv
aam
mov
inc
sbb
xor
xlat
push
clc
fistpl
mov
lods
mov
test
sti
add
ss
inc
dec
mov
out
cwtl
sub
mov
aad
rcll
dec
in
lock
jae
stc
outsl
push
enter
pop
xor
loope
dec
xchg
mov
arpl
std
or
scas
mov
outsl
sub
sub
jbe
sub
mov
in
jne
dec
dec
mov
xchg
in
jle
imulb
imulb
mov
jge
push
push
lods
pop
aad
addr16
nop
sbb
mov
and
push
notl
pop
xor
mov
cmc
pop
xchg
mov
cmc
dec
fs
ss
and
cltd
call
leave
xor
stc
sbb
inc
repz
ja
jb
xor
dec
add
jp
aam
les
jb
sbbb
sub
hlt
stc
push
mov
andl
cltd
and
mov
cmp
lods
mov
pop
add
mov
or
iret
ds
imul
pop
inc
je
sub
icebp
mov
call
or
fs
out
mov
orb
inc
repz
fs
cmp
lahf
xor
push
div
lcall
stos
push
jb
pop
test
lret
xchg
mov
push
fcomps
push
lahf
dec
movsl
loopne
nop
sbb
add
fcoms
push
mov
gs
fwait
xor
xchg
push
ficompl
push
mov
cmp
pop
fs
lret
add
fs
ja
sub
dec
aas
outsl
sbb
shll
inc
sahf
dec
cs
jmp
mov
mov
cmp
jae
fld
pop
mov
cmpb
outsl
sbb
test
lcall
mov
fcoms
xchg
nop
add
lds
std
add
and
dec
rcl
pop
stos
out
out
mov
imul
lods
adc
mov
cmp
andl
inc
shll
in
hlt
sbb
jbe
push
fldl
and
stos
enter
popa
push
jno
inc
jnp
fdivs
testl
pop
int3
out
adc
repz
sbb
mov
mov
psubusw
stos
mov
jge
stc
hlt
mov
jl
xor
dec
addr16
out
adcb
xlat
shll
inc
aas
in
addr16
shll
subl
pop
fisubrs
lock
loopne
push
fs
dec
mov
es
xor
rclb
jle
clc
push
jecxz
push
xlat
shll
aam
cmp
js
into
dec
fnstsw
xchg
jne
aaa
dec
sahf
xchg
cld
push
nop
sub
leave
sub
fcom
mov
jbe
push
push
pop
sbbl
pop
fcmovnbe
outsl
add
aam
test
push
xor
jle
or
test
push
xchg
repnz
fldenv
pop
push
adc
mov
pusha
jo
enter
into
je
mov
cmp
cmp
arpl
test
add
pop
fwait
xchg
mov
push
cltd
out
xor
cmp
clc
push
or
test
push
push
push
cmp
and
mov
int
scas
jno
dec
pop
repz
push
dec
adcl
cmc
mov
outsb
sarl
and
mov
fsubs
sub
mov
jmp
sbb
inc
mov
std
clc
pop
lret
in
xor
flds
ret
jge
out
enter
cmpsb
or
imul
outsl
inc
add
mov
xor
enter
mov
rcll
mov
xor
inc
xchg
sub
mov
xlat
shlb
call
int
shl
mov
orl
push
adcl
push
andl
push
push
adcl
call
adc
mov
subl
mov
xor
mov
sub
mov
movl
jmp
mov
daa
xchg
gs
or
mov
push
mov
ja
test
pop
mov
cld
in
in
dec
addr16
jnp
nop
ret
mov
bound
adcb
dec
std
and
mov
pusha
push
sub
push
nop
js
lds
call
inc
sub
clc
int
bound
inc
pushf
fildl
in
or
jnp
pop
cwtl
inc
jbe
lret
stos
add
pop
movsb
out
imul
rol
xor
sub
test
fildl
adc
stos
xor
and
ss
out
mov
cmp
push
xor
pop
or
pop
out
cwtl
shll
push
adc
into
fs
stos
sub
jge
fsub
movsl
sbb
les
icebp
ret
cmp
or
int
xchg
out
push
leave
xchg
test
pop
fsubs
mov
lock
push
add
inc
loope
fiaddl
mov
mov
hlt
mov
add
or
imul
mov
sub
adc
mov
adc
das
imull
jne
cmpb
cli
and
dec
popa
dec
pop
sbb
sub
loop
movsl
ss
jnp
sbb
ss
addb
enter
or
mov
movsl
mov
out
insb
sbb
fwait
pop
lahf
ss
loope
cmpl
mov
int3
lds
cmp
popf
sub
mov
xor
inc
lret
dec
les
and
push
insb
aas
mov
lock
xchg
mov
pop
sbb
je
inc
mov
add
push
push
sub
xor
adc
mov
addl
push
loopne
push
pop
sub
lret
test
add
sbb
andl
jne
adc
imul
xchg
mov
sti
xor
pop
or
aad
cltd
xor
push
push
xor
xchg
sahf
inc
cs
lods
leave
inc
or
loope
dec
xchg
cmp
arpl
cmp
cmp
jnp
bound
gs
addb
leave
mov
mov
xor
ds
popa
xor
bound
jp
and
popf
jmp
sub
out
sub
aas
jmp
cli
divps
inc
inc
jl
xor
pop
in
xor
lahf
sbbl
aad
lret
loopne
cwtl
cmpsl
enter
clc
dec
jmp
mov
sti
pop
hlt
cmp
push
mov
mov
mov
mov
aaa
es
pop
mov
ret
push
jl
jp
xor
xchg
inc
mov
shl
pop
cmp
imul
or
sbb
fcoms
fistl
out
or
pushf
je
mov
xchg
mov
mov
mov
mov
mov
pop
xchg
or
test
add
sub
add
pushf
sub
xor
sbb
xor
sbb
sbb
pusha
push
aaa
mov
lea
vpcmpgtb
ljmp
into
sti
fcmovb
cmpsb
test
push
jle
cld
out
test
xchg
push
mov
inc
and
xchg
sbb
popf
inc
pushf
insl
sbb
jp
mov
mov
and
test
pop
xchg
rorl
out
mov
add
je
cmpsb
pop
mov
dec
sbb
dec
push
arpl
fcoml
cwtl
adc
orl
icebp
rcll
jmp
mov
je
lret
jmp
stc
leavew
push
into
les
cmp
jp
js
push
lock
bound
daa
sub
mov
ficoml
repz
xor
sub
and
and
jno
icebp
enter
add
mov
cmp
sub
sahf
sub
aam
add
and
inc
mov
lret
int
or
dec
fmull
outsb
js
xor
jle
jnp
dec
jge
xchg
out
push
int3
xchg
ja
jnp
and
dec
int
mov
or
xorb
xor
push
xchg
xchg
andl
and
clc
out
push
push
mov
subl
imul
cmp
cwtl
pop
pop
push
addr16
xchg
push
adc
fsubs
insl
jo
fwait
pop
sub
pop
jo
popf
push
ja
and
leave
aad
cmp
adc
rcl
rcll
out
outsl
das
sbb
push
shlb
sbb
int
test
lods
jbe
lahf
push
inc
pop
jmp
jb
fdivr
das
jns
mov
js
fistps
clc
mov
sub
out
cmc
inc
push
pop
add
daa
xchg
lcall
dec
mov
adc
bound
scas
icebp
jmp
cld
xchg
lock
leave
sub
jae
mov
sahf
sbb
insb
push
pop
xchg
mov
addr16
jb
jne
aaa
dec
fisubrl
sbb
xchg
out
fmul
cmpsb
and
mov
push
dec
pop
jmp
xlat
add
xchg
push
stc
push
cmp
mov
push
inc
lock
ret
lea
mov
sbb
int
or
xabort
aas
outsb
dec
cli
mov
out
add
leave
push
imul
and
cmp
push
jnp
xchg
mov
imul
sbb
fmull
jmp
call
shrl
inc
loope
and
jge
or
sub
and
outsl
push
mov
or
mov
pop
mov
lods
outsb
mov
push
es
jbe
cmp
lret
jne
push
lret
adc
push
jbe
stos
sahf
push
loope
divl
push
repz
fmuls
sbb
into
cs
gs
cmp
mov
sub
sbb
sbb
fisttpl
push
mov
push
adc
popf
out
pop
and
out
jg
lods
sbb
data16
jnp
in
and
pop
add
fidivrl
and
fcomi
dec
jns
adc
push
std
loop
cmpsb
adc
cld
fsubs
ds
mov
cmp
or
lods
rorl
sbb
sbb
mov
jmp
push
cltd
inc
xor
jb
and
or
dec
xchg
xorl
fstp
mov
loop
cld
je
into
mov
test
mov
jecxz
sbb
data16
mov
test
sti
icebp
mov
loopne
dec
xor
std
outsl
lahf
dec
jnp
and
repnz
js
and
lods
popf
pop
pop
push
add
xor
push
xchg
and
sbb
loopne
sbb
pop
mov
inc
repz
int
mov
jns
xchg
test
dec
sbb
cs
pushf
jnp
mov
ss
ds
sub
push
push
jp
call
fstpl
cmp
loopne
pop
int3
cmpsb
lods
cmp
stos
xor
iret
dec
xor
dec
mov
into
jmp
cmp
sahf
adc
dec
popf
aaa
jo
fistl
mov
sbb
sub
or
adcl
lea
mov
mov
or
subl
and
mov
or
adcl
xor
movl
cmp
movl
jne
mov
and
mov
shrd
adcl
shr
adc
mov
mov
orl
shl
xor
andl
jmp
sub
sub
sub
adc
xchg
sub
ja
lds
or
push
cmp
idivb
es
hlt
cmp
pop
cmp
pusha
xor
ret
shlb
adc
shrb
mov
int
roll
pop
add
std
jecxz
sbb
sahf
pop
lahf
call
xor
or
dec
cmp
jo
cwtl
xchg
mov
ja
rcrl
ja
push
dec
lahf
jbe
push
pop
pop
nop
dec
fisttpl
psrlq
orb
lcall
idivb
add
stos
cld
xchg
popl
ljmp
dec
cmp
mov
testl
int
jp
cmp
inc
gs
sub
push
dec
test
stos
int3
loop
lahf
mov
clc
leave
jo
dec
push
xchg
out
nop
inc
aam
pop
lahf
out
sub
sbb
jbe
lahf
push
mov
or
jne
lret
adc
fcompl
mov
cmc
in
aad
orb
push
repnz
gs
lret
pop
loope
inc
push
test
or
sub
inc
stos
rep
aaa
inc
sbbb
loope
inc
jl
sub
addl
je
adcl
ror
outsl
out
pop
xchg
sti
pushf
mov
sub
push
mov
pop
leave
sub
ror
mov
fisttpl
scas
lret
jl
mov
sbb
mov
or
hlt
mov
iret
mov
outsl
subl
inc
mov
es
incl
jbe
inc
out
mov
stc
sahf
pop
sub
mov
out
insl
push
and
mov
xchg
stos
sub
mov
and
xor
cmp
cmp
leave
jae
adc
fadd
pop
inc
mov
push
xor
or
inc
pop
dec
mov
jno
and
xchg
leave
push
or
inc
xor
aaa
ret
je
jns
clc
std
pop
cld
ljmp
shr
cmp
nop
adc
shl
jbe
adc
pop
dec
mov
mov
sub
inc
mov
inc
mov
xchg
pop
jl
out
sbb
dec
shll
test
mov
cmp
xchg
xor
xlat
movsl
out
sbb
push
lcall
adc
cltd
sarl
mov
pop
cmp
aaa
mov
sub
fstpl
add
daa
or
push
mov
sti
dec
push
ljmp
and
loope
inc
sbb
outsb
or
sbb
test
jp
mov
xlat
in
aam
pop
popa
lret
movsb
leave
ljmp
and
mov
adc
mov
in
test
lret
mov
mov
sbb
jno
cmp
pop
lret
inc
out
push
inc
sub
push
in
dec
shl
xor
sbb
or
pusha
pusha
add
pop
jns
aas
adc
pop
ret
xor
cli
jno
pop
sti
mov
and
jl
ja
push
xor
and
xor
xlat
dec
xchg
aaa
cmp
rcll
and
adc
loopne
cmp
jl
ret
mov
jecxz
mov
adc
fldl
popa
push
dec
jg
rcll
fists
jmp
out
mov
stc
adc
fcomps
and
pop
pusha
cld
add
cmp
push
cmp
mov
adc
dec
or
scas
js
cmp
sub
mov
mov
out
jecxz
mov
adcb
lahf
adc
in
cmp
xchg
push
loope
dec
mov
lahf
scas
push
xor
in
fdivl
push
add
rcll
or
cltd
pop
imul
mov
inc
stos
in
int3
sub
loope
jns
xor
ds
mov
sub
dec
cli
pusha
fsts
mov
and
mov
dec
pop
jbe
inc
das
pop
scas
mov
test
mov
mov
cmp
enter
lahf
sbb
and
push
push
stc
in
mov
das
orl
pop
repz
jge
xor
cmp
shlb
call
xor
add
fidivrl
xorb
shll
cltd
mov
es
sti
mov
popf
stos
movsl
lahf
xchg
incb
mov
nop
loop
loopne
movl
iret
mov
stos
popf
xchg
dec
cmp
in
jp
aam
shll
pop
mov
mov
add
dec
inc
pusha
dec
rcrb
test
iret
imul
rcrb
pop
mov
imul
fwait
mov
sub
sub
jmp
movsb
mov
aaa
les
and
push
movsb
cli
xor
sahf
or
testl
or
fucomi
push
pop
dec
xchg
add
in
pop
cmc
pop
or
cs
test
in
adc
sahf
mov
shl
je
add
in
fnsave
xor
in
addr16
iret
inc
dec
inc
mov
mov
sub
je
inc
imul
movsl
in
fcompl
xor
xchg
inc
jae
and
xchg
sarb
sub
cmp
jl
mov
xchg
bound
pop
mov
imul
fstpl
fsubrs
addl
push
mov
int
cmp
pop
aaa
call
test
aam
shlb
loop
pop
gs
mov
aaa
dec
cmpb
and
hlt
mov
imul
call
mov
ljmp
add
cmp
loopne
test
roll
mov
adc
fadds
lret
push
in
add
push
sub
inc
cmp
jns
mov
movsl
loope
gs
mov
jae
sti
je
addr16
jp
aad
push
dec
xor
add
lds
adc
insl
imul
jmp
enter
push
dec
push
xchg
cwtl
ret
adc
adc
loope
mul
in
xchg
xchg
lods
data16
sub
arpl
add
jp
les
sub
lret
push
sbb
pop
enter
call
jge
pushf
or
fwait
mov
loop
add
jae
mov
addb
les
leave
imul
dec
sbb
fwait
loopne
lahf
pop
scas
cmp
adc
imul
ljmp
in
jne
clc
rcrl
mov
xchg
not
add
fsubl
jmp
fildl
test
lds
push
jmp
fbstp
inc
scas
ljmp
insl
outsb
popf
mov
rclb
pushf
shrb
cld
movsb
nop
fst
call
inc
subb
pop
or
adcl
jo
dec
or
sbb
or
pop
jmp
cld
fisttpll
stc
pop
pop
sub
cmpb
sub
or
sbb
testb
lock
jge
fwait
iret
jp
sub
addr16
adc
xchg
repz
inc
fstpl
add
je
int3
push
enter
mov
cwtl
dec
mov
mov
rorl
aaa
inc
add
add
cmp
jne
notl
mov
mov
xor
cmpl
mov
movl
mov
jmp
mov
movl
jl
push
call
xor
or
movl
movzbl
xor
and
mov
xor
mov
xorl
mov
jmp
daa
mov
or
jp
inc
mov
ja
jle
pop
lret
sbb
mov
add
repz
add
mov
lret
and
push
jecxz
and
xchg
push
push
in
mov
xchg
nop
shll
dec
loopne
ret
loop
out
nop
xlat
jbe
in
lcall
lcall
sahf
lods
sbb
mov
sbb
push
pop
push
enter
clc
stos
jmp
clc
loope
mov
mov
xchg
icebp
jne
and
les
push
inc
je
ja
sbb
ja
cmp
jb
cmp
mov
xor
out
inc
incl
mov
dec
int
mov
push
out
mov
xchg
sub
jae
leave
dec
cmp
xor
pop
pop
repz
movsl
cld
mov
push
pusha
xchg
repz
sbb
cltd
jmp
and
mov
and
pop
mov
mov
push
mov
js
xlat
dec
ret
jnp
add
pop
xchg
mov
xlat
andl
mov
push
adc
cmc
xchg
jb
nop
stos
rol
out
pop
adc
rcr
lods
rolb
push
pop
iret
push
aam
movsl
out
les
dec
enter
scas
dec
cmpsb
lcall
and
pop
sbb
rolb
mov
sbb
popf
into
inc
mov
push
push
lods
jae
mov
dec
lret
inc
push
mov
xor
cmp
ficoml
xor
mov
bound
xlat
sbb
or
mov
fiaddl
mov
push
adc
pop
mov
cmp
js
jl
sbbb
push
pusha
xor
inc
xor
mov
or
sub
push
fbstp
push
xor
pop
mov
xchg
clc
ret
in
jnp
out
dec
push
xchg
scas
lock
pop
popa
ljmp
test
es
ds
push
xor
and
fisttpll
inc
jge
into
sub
test
loopne
ss
add
lock
nop
mov
jbe
pop
fwait
dec
jp
out
hlt
inc
cmp
enter
insb
popf
rclb
cmp
xor
setne
mov
fucomp
mov
cmp
inc
cmp
inc
sarl
mov
pop
xchg
push
les
jae
sub
int3
pop
sub
mov
rcrb
arpl
mov
lods
dec
fcoms
shll
lret
lahf
push
loope
xor
insl
aaa
mov
mov
lss
cs
xchg
cmc
faddp
push
fcomps
out
jno
jns
rcr
xor
gs
cmp
out
cmc
push
inc
in
xlat
inc
repz
mov
xchg
in
pop
and
inc
mov
testl
dec
je
pop
adcb
bound
jno
cmp
sub
movsl
neg
or
lret
lea
je
push
cmp
aaa
outsb
xor
xor
push
mov
scas
imul
lds
fdivrs
mov
xor
std
lret
in
scas
mov
mov
sub
mov
mov
es
xorl
fcoms
dec
clc
sbb
mov
and
mov
inc
dec
mov
mov
mov
inc
je
std
mov
ffreep
push
outsl
inc
mov
mov
pop
add
loop
out
sbb
jle
sub
sub
cmp
inc
and
dec
aaa
sar
adc
dec
sar
or
push
scas
int3
xchg
jne
xorb
jo
lods
cmp
loopne
xor
jl
lahf
jg
cmp
addr16
jl
and
jae
inc
cmp
in
dec
ja
jle
jo
add
mov
outsb
xchg
mov
pop
in
pop
mov
cltd
cmp
jl
out
or
test
or
sbbl
dec
popl
fnstcw
push
cmc
push
nop
mov
pushf
mov
loope
ret
sbb
out
outsb
mov
fsts
addr16
fisttps
jmp
push
adc
stos
aam
in
mov
stos
push
cwtl
push
or
cmpsb
pop
divl
or
mov
test
mov
lds
aad
xchg
push
pop
jbe
jb
dec
jecxz
or
out
dec
pop
fsubrl
xchg
in
aaa
orl
loope
mov
shrl
and
lret
pextrw
and
roll
cmp
je
xor
inc
fdivrl
dec
js
test
and
mov
lods
cld
mov
scas
pop
out
scas
and
iret
push
sub
pop
push
sub
aas
inc
fistpl
xchg
sub
nop
xor
xor
add
subb
jge
fldl
xor
inc
dec
idivl
mov
pop
out
mov
inc
xlat
pop
int3
inc
lahf
in
inc
jnp
sub
xchg
mov
int
mov
rcrl
push
adcb
movsl
cwtl
cmp
push
sbbl
add
mov
aas
mov
inc
pop
sbb
aam
push
int3
jg
inc
ficoms
dec
sahf
sub
movl
icebp
arpl
push
loop
lret
pop
jle
inc
loopne
mov
pop
movsl
push
nop
leave
mov
test
jbe
sbb
push
pop
xorb
cmp
lock
std
push
adc
int3
xchg
inc
fidivs
mov
jecxz
mov
fdivrl
cltd
pop
mov
pop
xchg
imul
cmp
aas
pop
cmpsb
inc
sti
subl
call
adc
xchg
fsts
dec
pop
jae
in
jnp
outsl
ret
jb
out
enter
mov
scas
add
ret
scas
xchg
mov
popf
jle
call
pop
pop
cmp
bound
lds
xchg
leave
scas
dec
out
cmp
sub
sub
mov
insb
cmp
inc
pop
mov
pop
add
pop
push
adc
sbb
jae
sub
loope
or
cmp
dec
pop
add
mov
clc
sahf
insl
sbb
aaa
or
loope
in
out
shr
xor
stos
jne
sub
clc
sbb
fisttpl
int3
cmp
push
add
push
pop
jecxz
adc
dec
xor
rcr
das
int
xorl
les
jo
sti
push
jo
or
lret
jmp
cs
pop
lods
add
repnz
dec
mov
popf
inc
aas
ret
mov
cmp
sbb
sti
cmpsb
lcall
mov
std
fwait
call
pop
lret
inc
push
mov
sbb
mov
pop
cmp
pop
sahf
dec
push
imul
je
xor
pop
cmpsb
jnp
xchg
int
sbb
notl
out
sub
inc
fidivrl
insb
pop
test
adc
push
mov
filds
adc
adc
xchg
shrb
pop
pop
roll
mov
aad
xchg
fstpt
or
adc
orl
mov
and
add
notl
sub
sbb
dec
cld
sbb
and
movsb
in
ret
push
add
add
dec
in
cmpl
movl
mov
jmp
movl
movl
jne
push
push
push
push
push
pushl
push
push
call
orl
or
xor
xor
xor
add
adc
adc
sub
add
mov
xor
xorl
shr
xorl
mov
orl
xor
or
movl
shl
cmpl
movzwl
movl
jmp
movl
movl
jle
push
call
not
or
sub
sub
sbb
sub
mov
mov
sub
imul
mov
cmpl
not
movl
jmp
mov
jne
push
pushl
pushl
push
push
call
sbb
adc
neg
subl
adc
mov
mov
not
add
mov
mov
mov
shrd
shr
adcl
mov
mov
xor
add
shl
incl
xor
jmp
jle
jl
dec
mov
push
xor
ja
mov
scas
or
sub
mov
and
in
in
sbb
xchg
mov
jns
xorl
rol
sub
jle
inc
test
ja
or
and
jb
fcomps
push
add
xchg
jge
addl
sbb
daa
aaa
fwait
dec
shll
shrl
andl
cmp
std
sbb
imul
mov
lcall
and
jnp
pop
icebp
xchg
lret
inc
push
pop
push
mov
and
shl
sbb
sub
fwait
ret
stos
mov
mov
push
adc
xchg
cmp
pop
pop
pop
in
xor
xchg
aaa
push
mov
sarb
dec
jnp
push
dec
out
mov
into
cmp
jo
and
sbb
loope
aad
stos
into
fadds
add
pop
fwait
xchg
cmp
cli
jo
and
push
imul
and
adc
int3
dec
repz
push
mov
jecxz
adc
in
or
xchg
and
dec
les
jnp
lds
decl
inc
mov
lahf
lds
andb
mov
loop
std
xor
leave
in
push
xor
xor
mov
push
add
push
sti
jbe
out
lods
cli
mov
or
and
cmp
cmpb
rorb
add
push
lds
pushf
mov
xorb
inc
adc
lea
loope
filds
mov
push
aaa
and
jg
call
in
cmpsl
arpl
cmp
xlat
push
outsl
push
shl
xchg
shl
hlt
and
cmpsl
aaa
loop
mov
in
and
lcall
pushf
rcrl
repnz
xchg
lahf
popf
shlb
push
test
ret
scas
mov
push
xchg
jp
and
jle
push
lock
xchg
or
call
sar
lret
inc
jle
jle
xor
xchg
loope
add
jno
push
jl
xchg
add
icebp
je
test
lahf
push
fcmovnbe
inc
adc
mov
std
ljmp
inc
pop
inc
lds
lea
push
insb
sti
push
jp
jo
out
mov
gs
lds
sub
mov
jbe
add
leave
and
cmp
aaa
sbb
and
dec
dec
and
mov
mov
push
adcb
roll
loopne
or
push
mov
lret
pop
stos
lods
aad
jle
iret
repnz
cmp
mov
adc
xchg
mov
cmp
sbb
mov
dec
aas
mov
rorb
add
pop
sub
or
movsb
or
xor
test
mov
adc
lret
cmp
mov
sub
mov
lods
dec
aad
adc
stos
leave
jbe
mov
cs
jae
mov
cmp
dec
xchg
jmp
pop
add
out
dec
iret
sub
loop
cmc
mov
sbb
arpl
mov
xor
repnz
in
mov
sub
in
jmp
test
add
sahf
mov
mov
stos
push
xchg
into
adc
dec
sbb
inc
ret
push
bound
push
lcall
mulb
out
mov
cs
bound
int
lds
ficoms
mov
sub
mov
gs
outsb
sub
dec
fs
out
in
jg
pushf
fidivrs
and
stos
outsb
sub
sub
stos
sub
popl
daa
cmpsb
cmp
xchg
add
out
stos
push
push
fsubl
jmp
pop
pop
lret
add
jg
cmp
inc
pshufw
adc
mov
xchg
push
mov
shrl
jmp
std
push
cltd
pop
dec
mov
or
insb
push
fcompl
incl
mov
cmc
xchg
mov
lock
scas
movsb
outsl
and
icebp
push
cld
ret
sub
adcb
mov
dec
dec
es
jbe
loop
js
stc
lods
addr16
cwtl
addr16
push
xchg
xor
scas
mov
daa
push
and
int
xchg
xchg
pop
xor
imul
imull
xchg
pop
mov
cmpsl
xor
dec
jecxz
out
test
cmpsl
fs
icebp
inc
inc
lcall
jp
test
cmp
jl
aas
lock
push
mov
lea
sub
mov
push
icebp
add
mov
push
mov
xor
jns
ljmp
inc
lock
add
negl
jb
idivb
aad
and
xchg
pop
and
xchg
inc
mov
loop
mov
test
add
fdivs
imul
pushf
aaa
push
iret
cld
pop
mov
mov
cwtl
iret
pop
icebp
jge
or
adc
loope
sbb
xchg
mov
cmp
sub
jo
or
adc
popf
fdivrs
dec
add
orl
mov
mov
mov
jns
push
sub
roll
pop
in
fdiv
aas
rcrb
xor
in
xor
popa
xchg
add
sbb
ljmpw
jae
js
xchg
adc
xor
pop
fmuls
std
xor
cmc
pop
and
stos
mov
xorl
pop
cmp
lcall
mov
cwtl
ret
lahf
cmp
hlt
pop
sub
jle
mov
xor
movsl
or
out
movsl
jno
and
jno
push
inc
in
fidivs
je
jae
xchg
pop
mov
iret
sti
aam
into
and
xor
mov
cmp
into
fidivs
dec
or
and
test
xor
aas
scas
fwait
popf
test
or
dec
mov
pop
inc
loopne
xor
out
adc
pop
je
outsb
lea
xchg
sbb
out
mov
fisubs
ret
fidivl
ljmp
ja
dec
pusha
push
or
push
dec
dec
movsl
xor
subl
push
inc
pop
stc
call
jb
mov
cwtl
jb
int
push
jns
stos
xchg
mov
les
lret
int3
push
insb
lods
sbbb
es
je
or
push
outsl
roll
mov
lea
fistpll
jno
mov
lods
movsl
clc
mov
jnp
lods
cmp
push
leave
inc
data16
lahf
cld
adc
jo
and
fs
jecxz
mov
xor
mov
push
cmp
cmp
int
bound
or
push
icebp
pushf
ljmp
lods
stc
mov
cmp
pop
stos
test
dec
out
push
adc
and
adc
movsl
adc
sbb
fs
add
jno
jle
arpl
push
fnsave
fsubrl
mov
push
jmp
nop
add
or
cmpl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
xor
or
mov
sub
sub
mov
xor
or
sub
xor
and
xor
or
sbb
mov
mov
add
mov
mov
sbb
mov
mov
incl
shrd
subl
shr
adcl
mov
add
mov
cmpl
not
mov
jmp
not
jne
push
push
push
call
mov
sbb
and
andl
and
orl
sub
or
sbb
jmp
pop
and
push
adc
fsubl
inc
mov
ja
shrl
aad
xor
scas
lcall
ja
fildll
sub
fmulp
arpl
push
fdiv
push
or
jge
scas
mov
out
mov
mov
mov
mov
mov
xchg
clc
scas
mov
fisubrl
mov
cmpsl
fisubs
rcrb
cmp
adc
or
loopne
adc
leave
shrb
adc
cs
push
jnp
add
jb
jnp
push
dec
cwtl
jb
negb
test
xchg
leave
sbb
and
inc
push
or
xor
les
ror
cmp
enter
jno
js
hlt
sub
aad
fnstenv
shrb
cld
and
adc
push
je
sbb
mov
fwait
ret
add
int3
sbb
imul
sub
or
mov
outsb
popf
inc
ss
xor
lock
and
adc
mov
popf
lcall
stos
icebp
jg
bound
cwtl
and
rcrb
sub
aas
stos
xchg
sbb
jecxz
sti
loop
fidivl
pushl
dec
sahf
xchg
scas
inc
cmc
mov
enter
push
cmpsb
mov
cmpsb
jbe
mov
lds
gs
mov
mov
cmpsb
imul
mov
das
mov
jl,pt
pushf
or
push
mov
push
aam
repz
jns
xchg
lcall
mov
int3
pop
jle
cld
pop
mov
cmc
test
addb
lret
xchg
jecxz
loope
pop
sub
cmp
push
adc
push
fsubrp
mov
xor
pop
xor
jecxz
out
push
lret
lret
add
es
popl
sbb
repz
mov
pop
jo
inc
ret
jbe
js
imul
inc
add
xor
cmp
hlt
stos
cmp
rol
mov
andl
in
repnz
mov
and
rcrb
mov
push
int
jnp
insl
sub
sub
or
dec
xor
movsl
pop
sbb
movsl
jbe
in
leave
fnstcw
mov
mov
xchg
fwait
push
jg
pop
cmp
mov
inc
jno
sbb
xchg
mov
stos
or
mov
xchg
jo
jmp
lds
bound
into
cmp
fcmovbe
xor
lds
or
fldl
or
sbb
lahf
sahf
pop
lea
lcall
xlat
movl
out
adc
inc
cmp
cltd
and
test
popf
ret
scas
fwait
bound
adc
and
push
cmpsl
aaa
jle
shll
pop
inc
push
in
stos
xchg
pusha
xchg
scas
mov
test
cmp
and
pop
or
push
xor
repnz
mov
mov
mov
popl
fisubs
mov
arpl
and
mov
pop
dec
xorb
fsts
std
movsb
out
pop
popa
xchg
xlat
pop
or
pop
loope
push
jmp
fiadds
lock
fisubl
dec
shlb
add
pop
adc
js
dec
push
push
je
dec
movsb
xchg
push
jbe
and
or
in
sahf
loop
ret
popf
pop
inc
push
push
out
out
add
lea
cmp
jmp
add
push
pop
or
lea
stos
in
movsb
rolb
jp
stc
jg
inc
adc
jp
in
lret
xor
push
cmp
push
nop
sbb
insl
orb
inc
mov
sub
scas
ret
add
test
sub
imul
loope
jo
xchg
mull
icebp
fildl
aas
sub
sub
dec
pop
pop
je
lret
incb
xlat
icebp
pop
adc
inc
clc
jle
lret
scas
into
mov
adc
xor
adcl
jb
and
test
mulb
and
or
cmp
dec
ret
cmp
out
mov
mov
pop
inc
movsl
pop
dec
cmpsb
jb
js
out
inc
mov
out
and
call
loope
adc
decb
dec
sti
mov
sti
push
sub
cmpsb
loopne
sub
imul
add
xor
in
xor
mov
cmp
loopne
adc
push
lahf
lcall
cmp
dec
insl
mov
adc
es
insb
les
and
loope
ret
mov
in
in
lds
stos
and
sub
mov
jne
and
mov
push
cld
in
mov
int
jae
inc
pusha
lods
inc
inc
imul
inc
pop
mov
out
pop
fs
mov
clc
aas
cli
adc
ja
jnp
dec
ret
scas
jle
push
mov
in
insb
adc
add
call
mov
dec
aam
ret
dec
cmpsl
xchg
mov
cwtl
shlb
pusha
jbe
push
data16
sysenter
mov
dec
mov
fstpl
out
cmpsl
idiv
iret
mov
pusha
push
popa
xchg
mov
mov
movsb
jns
notl
pop
loop
mov
fsubr
adc
test
mov
inc
xchg
fs
jmp
or
in
out
sbb
lret
push
insl
jl
mov
loop
ljmp
test
pop
cmp
fldcw
mov
xor
setp
hlt
ficomps
jp
mov
pop
xchg
inc
cli
les
out
insl
mov
inc
jg
jle
sbb
add
insl
loop
test
insl
xchg
mov
mov
das
or
jno
cmp
aam
inc
fiadds
cmp
push
loope
into
adc
dec
mov
push
jae
mov
jge
jne
loop
mov
adc
pop
imul
mov
jno
push
ss
mov
xor
loopne
aas
shrl
jmp
cltd
sbbl
popf
fisttps
imul
icebp
lea
jecxz
and
sbb
gs
aaa
push
push
jge
sub
fistl
jne
pop
sub
pop
sub
rcrl
dec
nop
cld
mov
lahf
mov
loop
mov
ss
inc
mov
dec
cmp
lret
repnz
mov
loopne
aaa
shlb
scas
xor
xor
sub
mov
push
pop
ror
xchg
or
inc
xor
subl
out
xchg
dec
lock
mov
nop
cs
mov
xchg
dec
push
stos
fnstsw
cmpl
sbb
jp
inc
xchg
add
test
pop
sub
leave
aad
xlat
loop
cmpb
movsb
dec
sbb
icebp
inc
dec
or
adc
sub
inc
bound
scas
xchg
cmp
push
cmpsl
outsl
mov
adc
and
or
add
mov
es
push
cwtl
loope
pop
adc
push
jmp
mov
mov
dec
inc
test
stos
aad
push
repz
sbb
loop
pop
sub
dec
pop
enter
ljmp
mov
add
jge
xor
subl
or
andl
shl
sbbl
lea
sub
mov
cmpl
mov
mov
mov
mov
jmp
movl
jg
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
pushl
push
call
xorl
movzbl
adc
movzbl
add
or
add
movzwl
sub
mov
shrd
shr
cmpl
mov
mov
mov
jmp
mov
jbe
push
call
andl
mov
adc
sbb
movl
mov
mov
or
not
mov
mov
sub
mov
add
jmp
rcrl
cmp
and
and
scas
dec
or
fcomps
ja
cmp
pop
push
pop
push
pop
insb
sub
mov
adcl
fimull
add
and
sub
stos
std
and
ficomps
andl
jae
scas
out
clc
pop
mov
aaa
pusha
cli
mov
cmp
scas
add
int3
and
sbb
scas
rolb
outsb
xor
loope
pusha
ficoml
mov
push
push
sbb
xchg
fisttps
popf
or
and
sbb
scas
sbb
inc
movsb
add
inc
loopne
enter
in
aas
adc
lea
add
lea
pushf
pop
pop
mov
pop
dec
inc
fidivrl
js
imul
shll
ret
loop
push
enter
inc
jns
dec
sbb
call
push
sarb
test
mov
or
movsb
add
int
daa
push
xor
push
add
pop
mov
xor
addr16
sbb
or
dec
stc
aad
adc
mov
stos
gs
lret
mov
fiaddl
inc
and
loopne
cmp
cld
inc
inc
push
mov
mov
pop
lock
jmp
aad
pop
mov
jae
bnd
add
ja
repz
sub
jo
imul
sbb
and
jg
cmp
cltd
adc
into
hlt
or
add
js
push
or
and
cmp
cmp
test
or
add
fstl
mov
popf
add
and
mov
mov
add
nop
adc
pop
adcb
int3
pop
or
lock
shlb
jmp
sbb
mov
dec
hlt
xchg
loope
ljmp
insl
stc
stos
test
sub
adc
in
mov
and
jmp
rep
dec
jecxz
add
pop
ss
push
push
mov
jg
int3
popf
aad
cmp
add
bound
shlb
xor
mov
push
sti
sbb
call
mov
inc
mov
into
cmp
add
mov
xchg
push
inc
es
inc
inc
rcrb
mov
imull
ds
addr16
pop
sbbl
sub
rcl
js
and
adc
testb
or
rolb
add
inc
xchg
mov
cmpsb
pop
inc
loop
mov
mov
divb
mov
std
inc
in
inc
fstl
jnp
cmp
addr16
imulb
fwait
out
jecxz
out
ret
lea
cltd
sub
leave
jg
xchg
and
jge
mov
jp
xchg
xchg
adc
iret
and
mov
aad
in
test
jo
jae
hlt
mov
fidivrl
and
mov
idivb
fwait
repz
mov
movsl
xchg
ret
out
arpl
nop
mov
or
lcall
mov
xchg
pop
mov
fsts
cmp
or
jmp
stos
sbb
sbb
jbe
lea
cltd
push
push
aas
es
jbe
movsb
add
outsb
pop
test
jo
daa
das
sbb
fwait
mov
adc
sub
outsb
sbb
jo
jle
cmp
popa
fwait
push
xchg
es
sbb
arpl
fisttps
out
imul
in
mov
je
push
in
leave
add
lret
adc
sarl
fwait
pop
shlb
xchg
add
inc
xor
add
or
jo
or
push
ss
shll
popa
ljmp
fistl
sbb
mov
lods
data16
xchg
lods
insl
mov
cmp
lahf
jae
lods
bound
out
subl
pop
sbb
es
jb
divl
xor
mov
jecxz
iret
xor
lock
in
sub
roll
unpcklps
loop
jb
rcrb
xchg
xor
rsm
push
jmp
sti
into
and
mov
fmul
add
cmpsb
aad
lret
hlt
out
cld
shlb
mov
int
ss
sub
or
notl
xchg
jmp
popf
adc
cli
ret
cli
xor
test
insb
lret
mov
call
dec
ljmp
fwait
pushf
adc
sbb
rclb
adc
cmpsb
mov
add
test
decl
sarl
dec
dec
aad
outsb
adc
jb
mov
lods
sbb
inc
dec
pushf
test
inc
je
mov
mov
pop
call
test
pop
lock
xchg
mov
cmp
stos
cmp
cmp
mov
and
mov
cli
push
pop
dec
add
and
push
push
xor
xchg
pop
dec
pop
mov
dec
adc
or
mov
or
outsb
sub
mov
inc
sahf
arpl
add
sbb
cmp
inc
add
int3
push
popa
fxch
out
insl
ret
lahf
xlat
daa
mov
xchg
lcall
icebp
out
hlt
in
push
jbe
repnz
adc
fstp
mov
pop
pop
mov
loop
push
pop
xlat
xor
rcrb
daa
dec
sub
arpl
jmp
fwait
push
mov
cli
scas
stos
xor
sbb
sbb
mov
mov
and
mov
xor
jge
insl
notl
mov
fstl
add
lock
mov
shll
jg
addl
mov
add
in
add
das
inc
dec
aas
sbb
jae
cmp
mov
mov
push
int
pop
jns
nop
mov
sti
jl
and
fstl
cmp
jmp
dec
int3
pushfw
shrb
cmpl
adc
mov
push
and
xchg
cvtdq2ps
inc
je
sarl
inc
imul
nop
outsb
add
push
lret
js
add
pop
lods
daa
lods
add
cmp
cs
adc
hlt
insl
mov
inc
mov
xor
dec
xorl
in
stos
inc
fstpt
aaa
dec
fcmovnu
cld
add
mov
test
mov
ret
cmp
rcrb
incl
stc
loop
pop
push
jb
rolb
mov
sbb
hlt
sub
gs
outsl
jnp
test
in
push
movsb
jmp
add
push
mov
loop
ljmp
cli
test
sub
addr16
sahf
int3
hlt
lods
and
clc
cmp
cwtl
mov
cld
or
or
mov
daa
test
cmp
mov
aas
mov
mov
inc
inc
or
fcomps
lahf
mov
into
jl
mov
push
pop
push
insl
mov
out
data16
xor
in
call
adc
dec
xor
sub
inc
sub
aas
lcall
inc
sbb
cmp
xchg
fnop
ret
mov
xlat
push
and
fucom
ljmp
xor
adcl
or
shl
movzbl
or
imul
mov
mov
xorl
shrd
xorl
mov
mov
xor
shr
mov
and
mov
sbbl
xor
orl
or
sbbl
shl
adcl
sub
mov
mov
cmp
mov
mov
jg
xor
add
mov
sub
and
mov
cmpl
movl
movl
jmp
mov
mov
jb
push
push
call
xor
mov
sub
sbb
movzbl
and
mov
jmp
les
cmp
push
mov
mov
movsb
js
lds
mov
ja
cmp
lock
lret
pop
inc
rcrl
mov
cmc
jae
data16
cltd
jg
inc
fidivs
inc
fsub
cs
vpmaddwd
ret
shll
or
cld
mov
outsl
xor
adc
and
and
in
xchg
dec
pop
aas
push
xchg
push
inc
pop
sti
pop
push
shr
cmc
cltd
std
push
adc
nop
bound
adc
lds
es
jns
add
cmp
clc
pop
and
popf
pop
jbe
xchg
sbb
hlt
data16
add
pop
test
push
dec
vmread
sahf
push
cmp
dec
out
shlb
xchg
fisttpll
and
in
pop
data16
xchg
inc
loopne
mov
cmp
inc
mov
dec
int3
ret
adc
xor
or
loope,pn
jle
imul
rorb
add
movsl
mov
adc
xor
outsb
adc
push
inc
cwtl
dec
test
jmp
xchg
daa
and
sbb
shr
aad
into
outsl
lock
mov
cmp
mov
mov
pop
mov
pushf
push
xlat
jge
xchg
icebp
adc
lods
cmpsb
dec
jne
add
dec
cmp
push
iret
mov
addr16
fisubrl
sbbl
je
outsb
psubsw
dec
mov
jns
or
xor
gs
and
xor
shll
out
and
xchg
out
sarb
test
ficoml
in
gs
loop
mov
inc
into
push
les
cmp
mov
push
push
inc
stos
in
or
push
fwait
loop
imul
sub
cmp
xor
fpatan
jle
cwtl
and
aaa
iret
push
add
xchg
das
adc
sub
cmp
roll
std
mov
mov
and
dec
les
cmc
jne
ret
icebp
inc
mov
add
lods
or
adc
rep
mov
cwtl
sar
lods
sahf
pop
cmc
pop
fadd
movl
add
outsb
cmpsb
jp
stos
outsb
jle
cmpsb
mov
and
data16
lock
div
xchg
and
shr
insl
mov
pushf
aam
xchg
pop
out
or
das
adc
ffree
and
fwait
mov
sar
jle
lock
shr
in
xchg
cltd
mov
add
push
mov
mov
fchs
push
ficoms
xchg
xchg
in
cmp
dec
shll
xor
or
leave
aam
mov
adc
sbb
xchg
xchg
inc
or
insl
sar
push
loop
aad
int3
mov
inc
pop
lcall
psrlw
pop
ficompl
xchg
lret
cmp
mov
addl
jmp
dec
mov
daa
shlb
pop
push
bound
and
mov
repz
or
push
movl
push
pushf
inc
push
jnp
mov
rolb
insl
jmp
jae
pop
dec
iret
fs
xor
mov
pop
aaa
push
fcomps
fwait
inc
loopne
push
sbb
ficoml
add
jmp
lock
mov
filds
in
cmc
push
imul
andl
mov
icebp
fdivrs
add
push
aam
sbb
test
es
pop
mov
icebp
jge
dec
push
sbb
inc
dec
pop
or
out
or
popa
push
sub
sbbb
push
ds
fcompl
push
lcall
xor
mov
dec
sahf
xchg
mov
aas
imul
ljmp
ljmp
push
add
dec
xor
mov
insl
scas
jmp
repnz
es
jp
jle
xor
scas
fsubrl
movlhps
sbb
test
fisubrl
int
scas
jbe
out
cwtl
rorl
scas
stc
rolb
leavew
aas
imul
sub
inc
mov
int
inc
push
dec
dec
sti
sbb
in
inc
enter
popa
cmp
and
add
mov
pop
inc
insb
lret
pop
lds
adc
dec
lods
aam
mov
cmpsl
sub
cld
insl
add
movsl
insl
lret
jg
int3
xchg
repz
mov
jb
xchg
jp
xchg
loope
icebp
cmpsl
push
cmp
jne
mov
arpl
xchg
mov
lock
pop
ret
jecxz
aam
add
ficomps
mov
sub
lods
inc
adc
xor
insl
fbld
cmp
mov
stos
pop
adc
xor
pop
into
inc
es
fdivrl
subb
sbb
sub
cli
les
fadd
movsl
lock
pushf
repnz
xchg
jae
jbe
cwtl
mov
icebp
lea
xlat
outsb
xchg
pushf
cmp
iret
add
outsl
pop
pop
add
jle
cmpsb
js
pushl
jns
int
or
popa
dec
stos
jle
xor
dec
sub
ret
sbb
xchg
cmp
pop
das
ljmp
add
aas
push
insb
mov
icebp
arpl
pop
stc
mov
or
daa
or
jns
ret
or
add
pushf
push
adc
or
inc
lahf
or
incb
mov
or
scas
fwait
dec
ds
xor
roll
jae
jl
dec
dec
push
movsl
sub
sub
dec
sub
sbb
testl
adc
or
and
bound
int3
inc
lods
lock
es
jl
xor
mov
pop
fsqrt
mov
cmp
in
mov
sbb
push
js
push
stos
mov
pusha
pop
ret
xchg
push
cmpsl
rol
pop
loope
sub
icebp
adcl
nop
jl
and
dec
jmp
mov
push
ja
pop
movb
fisttpl
dec
dec
xchg
adc
push
mov
mov
inc
js
mov
jecxz
xchg
test
mov
popf
aaa
addl
pop
mov
dec
aaa
pushf
fucomp
xchg
pop
clc
add
int
mov
cwtd
sub
rorb
xchg
sbb
push
hlt
lock
std
cmp
fnstenv
pop
cld
in
mov
leave
jbe
sub
in
pop
mov
sbb
notb
into
inc
icebp
jle
jne
add
adc
push
leave
sbb
std
dec
int
mov
loopne
loope
clc
outsb
or
test
imul
pop
sbb
dec
xor
dec
xor
hlt
push
insb
out
pop
xchg
mov
mov
add
xor
jg
ds
lods
sbb
adc
shl
mov
enter
or
and
mov
mov
setle
push
jns
pop
xor
vcvtpd2psy
pop
sarb
shlb
clc
loopne
test
sar
sub
out
in
fldcw
movsl
or
rcrl
push
cmp
dec
dec
jg
test
cmp
aaa
inc
add
lods
movsl
jecxz
mov
std
fs
and
stos
aaa
inc
add
lods
roll
mov
movzwl
or
mov
adcl
xor
andl
shl
orl
xor
adcl
or
sbbl
shr
and
mov
jmp
mov
mov
or
ja
icebp
insb
pop
sbb
outsl
in
movsl
adc
outsl
in
dec
pop
test
push
jge
repz
jne
sbb
adc
cmpsl
cld
sub
jne
fistl
orl
inc
pusha
xchg
aaa
push
in
sbb
add
das
inc
mov
mov
mov
out
xor
adc
std
pop
repnz
push
test
xchg
sub
ficoml
or
shrl
cmp
jnp
add
lods
xchg
ficoml
xor
mov
jb
pop
pop
not
in
aas
sub
jnp
hlt
or
and
cmp
push
jge
xchg
ret
xchg
int
mov
scas
sahf
pop
jns
in
pop
xchg
add
mov
call
adc
sbb
cmpsl
add
sbb
out
inc
mov
cmpsl
sbb
inc
shlb
rorb
inc
mov
sub
divb
imul
add
mov
js
pop
cld
sbb
ret
fnstcw
decl
mov
fnclex
icebp
mov
xchg
pop
das
test
mov
mov
data16
mov
loop
dec
in
xor
sbb
icebp
andl
push
clc
mov
outsb
and
jno
pop
mov
xlat
push
fst
sbb
push
jmp
cmc
mov
inc
pop
jno
push
and
pushf
pop
or
cli
mov
and
jl
or
mov
dec
add
test
insl
les
daa
lcall
outsl
fsubl
sbb
leave
cltd
pushf
jo
js
loopne
sbb
test
xor
pop
in
shld
iret
sbb
lods
add
jnp
mov
dec
inc
outsb
pusha
int3
lcall
test
aas
push
test
inc
jne
mov
xor
insl
ret
pop
sub
xchg
cmpb
jg
push
mov
pop
popf
mov
cld
hlt
cli
stos
cmpsb
out
pop
mov
adcb
shrl
dec
mov
xor
and
pop
mov
dec
cwtl
jg
push
mov
jno
mov
jg
movsl
sarb
mov
out
add
mov
xorl
push
ret
jle
lds
addr16
mov
pop
aad
cli
inc
sahf
or
add
dec
lret
das
add
scas
test
mov
dec
daa
sub
ja
rcl
repz
jmp
iret
cs
mov
xchg
push
idivb
sbb
cmp
add
out
push
into
addr16
lcall
sub
mov
xor
sub
in
insl
add
ret
gs
cli
push
mov
mov
mov
adc
das
xchg
xor
mov
popf
mov
mov
adc
int
scas
mov
xor
xchg
mov
int
mov
data16
jb
scas
subb
dec
and
mov
xor
and
mov
gs
add
test
jne
jb
nop
inc
loope
add
test
add
mov
push
mov
pop
pop
mov
pushf
jo
xchg
dec
out
mov
xchg
clc
testb
sub
js
inc
cmp
scas
rcr
xor
cli
mov
mov
add
cwtl
push
sbb
punpckhdq
lods
imul
push
es
nop
cmp
xchg
mov
mov
fdivrs
pop
xor
push
sub
and
mov
adc
xchg
sub
int3
in
adc
push
push
ds
pushf
jmp
mov
xchg
imull
mov
jg
inc
mov
sub
int3
push
shr
add
fisubrs
std
lcall
mov
mov
daa
mov
inc
push
sahf
or
fwait
dec
dec
pop
in
jne
mov
gs
subb
or
cwtl
add
rcrb
jmp
aad
xlat
lock
cmp
mov
test
push
push
loopne,pn
jecxz
mov
adc
ja
jnp
test
or
push
repnz
fsubrs
je
ret
cmp
in
push
inc
fnsave
jge
vpaddq
sub
es
jns
and
sub
mov
jnp
mov
add
xchg
call
pop
cld
nop
sarb
adc
bound
call
jo
xor
sub
pop
pop
add
ret
mov
mov
dec
loop
mov
in
fisubrs
xchg
lahf
jmp
cmpsl
stos
fsub
xacquire
ja
je
jl
xorb
mov
repnz
jae
inc
jno
or
dec
mov
out
and
hlt
xchg
fs
stos
sub
cmp
add
inc
xchg
imul
cmp
es
repnz
push
mov
lods
scas
mov
pop
push
push
or
push
or
es
mov
popa
xor
sar
outsb
push
xor
scas
cltd
dec
jmp
call
clc
xor
cmc
aaa
cmp
jmp
mov
jecxz
fadd
jno
sbb
test
push
lods
jo
mov
and
inc
cmpsl
int
mov
jmp
mov
jb
pop
insb
loopne
cmp
mov
and
xor
inc
dec
adc
dec
mov
mov
lock
add
out
add
popf
mov
jp
sbbb
mov
push
cmpsl
pop
stos
les
jecxz
pop
and
xchg
negb
out
jnp
movsb
adc
jmp
ss
cs
hlt
sbb
popf
rorl
cmp
mov
mov
lock
mov
ljmp
mov
std
xor
es
es
pusha
scas
inc
or
stos
not
data16
mov
push
push
cmp
lret
add
push
xchg
lcall
fs
leave
xor
lret
loop
or
add
mov
mov
fs
dec
sub
sub
movsb
lea
lea
or
cmp
dec
inc
mov
mov
jl
pushl
dec
pop
mov
inc
sbb
xor
push
xor
cltd
ficoms
cmp
push
dec
xchg
mov
adc
push
je
lods
cwtl
xchg
test
cmp
dec
stc
ss
out
out
sbb
idiv
xorl
jo
xor
sbb
sub
push
enter
sbb
xchg
and
adc
pop
insb
mov
faddl
mov
cli
lret
divl
lds
int3
out
outsb
fsubrl
mov
imul
cmp
addr16
mov
repnz
mov
cli
es
or
jecxz
mov
daa
fnsave
sbb
inc
aas
mov
mov
or
mov
mov
mov
add
mov
andl
shrd
sbbl
shr
mov
mov
inc
jmp
shll
adc
push
scas
xchg
ljmp
ja
arpl
push
xchg
nop
cmp
or
add
fldl
and
dec
out
movsb
cs
fnstsw
inc
jl
and
pop
fnstenv
push
movsl
je
adc
mov
push
cmc
int
mov
imul
das
mov
enter
xor
sub
daa
adc
push
scas
sti
in
jb
cmp
idivl
in
cmp
pusha
push
out
sahf
adc
arpl
sbb
adc
test
dec
fs
sub
pop
mov
jo
dec
xchg
adc
ds
push
mov
hlt
add
inc
fnsave
xchg
sub
push
mov
fwait
outsl
jnp
fwait
and
shrl
lods
push
popf
into
stos
inc
push
ds
mov
cli
cmp
and
insl
repz
add
mov
inc
mov
scas
adc
or
out
adc
cmp
test
or
les
dec
dec
inc
scas
rcrl
push
or
adc
sub
outsl
js
dec
iret
sub
mov
fistps
loope
imul
pop
xchg
add
rcrl
xorl
sbb
loope
iret
sbb
and
pusha
lcall
mov
add
xchg
movswl
cmp
dec
ret
xor
ret
adc
xor
fwait
andl
mov
pop
dec
inc
sahf
mov
jns,pn
xchg
lret
jle
sbb
xchg
mov
out
inc
dec
and
xchg
fs
inc
sbb
push
xor
push
mov
loop
push
xchg
jl
in
fnstcw
lcall
sahf
test
add
mov
inc
dec
mov
std
sbb
addb
mov
ss
call
mov
mov
aad
repnz
roll
rsqrtps
mov
das
int3
filds
popf
lds
das
shll
and
xor
stos
frndint
inc
cltd
andb
mov
cltd
push
add
movsb
sub
mull
outsl
mov
mov
pop
repz
and
shl
sti
or
or
arpl
data16
sti
push
outsl
imul
jbe
or
inc
add
xor
flds
mov
xchg
lahf
jge
cmp
inc
pause
ss
cmp
cmp
pusha
jmp
push
ret
push
pop
jg
out
stos
jge
out
int
movb
std
xchg
xchg
push
mov
cmp
cltd
mov
dec
mov
cmp
and
xchg
pusha
mov
pushf
jne
ja
or
loope
mov
les
mov
pop
jns
add
adc
xor
mov
lds
gs
push
out
iret
push
dec
insb
in
mov
fsubrp
icebp
test
rcrb
push
fsubr
enter
xor
push
mov
cmp
mov
push
and
js
stos
xor
cmp
adc
or
movsl
lahf
xchg
gs
xor
xchg
scas
mov
movsl
loope
inc
mov
sub
xor
fwait
call
ja
int3
jbe
imul
push
mov
xchg
sbb
dec
rol
mov
sub
test
sub
mov
cmpsb
call
mov
leave
popa
pop
data16
int3
addl
or
fsts
cmp
leave
jnp
sbbb
xchg
imul
out
cmp
lcall
or
rcll
lods
mov
sbb
xchg
lds
jl
sarb
lret
outsb
xchg
test
enter
and
pop
mov
add
and
test
adc
xchg
inc
xlat
ja
fwait
mov
mov
and
iret
das
adc
mov
int3
sbb
add
aas
fs
test
pop
clc
jl
xlat
mov
jmp
jne
mov
loopne
xchg
sbb
xchg
fs
jg
dec
add
sub
mov
test
es
in
inc
mov
fimull
lock
rorl
pop
scas
or
and
popa
mov
adc
mov
xor
xor
les
subl
inc
jp,pn
les
inc
xor
mov
imul
jno
xchg
sbb
cmpsb
push
cmp
xchg
ja
sub
fisubl
sub
xchg
daa
pop
incb
push
dec
sbb
shll
mov
push
sub
out
rorb
ljmp
leave
enter
mov
testl
clc
cwtl
cs
sahf
jno
daa
inc
sti
nop
xchg
push
shll
inc
inc
or
iret
sbb
lahf
sub
lcall
std
sahf
or
nop
inc
out
dec
pop
adc
data16
xchg
int3
lock
movsl
inc
fldcw
scas
nop
sub
pop
rcrl
inc
std
xor
bsr
sbb
sbb
out
jbe
mov
ljmp
pushf
cmpsl
push
dec
int3
repz
cmp
call
clc
cmp
cwtl
dec
ss
xchg
adc
xchg
mov
imul
les
or
adc
sbb
fmull
fwait
ret
jmp
inc
insl
cld
test
mov
mov
pusha
stos
mov
inc
imul
pop
push
test
cwtl
andl
jno
addb
fnsave
loopne
adc
push
push
pop
xlat
push
pop
jns
inc
fisubrl
lret
cmp
lcall
add
mov
ja
cmp
gs
push
mov
xor
andb
cmpsb
repnz
or
cltd
push
out
dec
push
xor
xchg
test
lret
out
cmp
pop
pushf
pop
or
xchg
add
sbb
mov
fwait
int
cmp
out
dec
push
pop
aas
mov
pop
and
push
mov
ret
xchg
sbb
daa
adc
adc
jns
rolb
mov
daa
or
dec
loopne
cmpsb
sarb
adc
mov
leave
jbe
mov
cli
shrd
push
push
std
or
ret
xor
pusha
test
and
sbb
call
push
ds
rol
mov
and
lret
aas
sub
xchg
cmp
roll
mov
jg
push
fidivl
test
in
iret
gs
xorl
sbb
cltd
mov
xchg
dec
mov
pop
sub
in
mov
ficomps
enter
dec
xchg
mov
cmpsl
js
adc
mov
mov
std
pop
stc
mov
out
lea
inc
sub
pop
or
orl
fwait
psrad
or
dec
jne
adc
jmp
mov
test
scas
iret
fnsave
pop
push
mov
cmp
jle
cmpl
inc
add
ljmp
insb
repz
mov
xorl
xor
subl
jmp
scas
popa
inc
jge
sbb
cs
fwait
push
outsb
xchg
negl
ja
adc
out
or
xor
sub
andl
xchg
adc
or
inc
cmpsl
mov
xchg
push
test
push
or
push
and
mov
mov
ljmp
cltd
pop
fwait
in
push
mov
imull
mov
popa
fldenv
mov
int3
insb
lcall
mov
mov
sbb
movsb
pop
mov
mov
dec
and
cmp
jge
stos
pavgw
mov
mov
js
aaa
scas
loop
pop
leave
mov
jae
add
ljmp
sahf
mov
les
in
sub
jno
int3
or
add
icebp
or
and
mov
sbb
sbb
in
jno
daa
mov
ret
repnz
push
and
jl
pusha
push
cmpsl
push
and
inc
mov
clc
je
mov
sub
jge
dec
inc
imulb
xchg
cli
and
popf
popl
repz
jno
mov
pop
and
fwait
rcrb
hlt
iret
inc
movsl
mov
out
stc
nop
lcall
jp
mov
rcrl
movsb
mov
in
in
sbb
and
push
mov
mov
pop
mov
xor
adc
cmp
jb
add
ja
add
jne
jnp
jnp
or
xchg
aam
pop
in
in
pop
outsl
shlb
pop
dec
out
adc
clc
lea
lock
and
int3
imul
dec
jge
xlat
xchg
mov
arpl
adc
lahf
adcl
cmp
dec
scas
ljmp
std
es
jecxz
pushf
push
fidivs
add
pop
pushf
mov
jno
cmp
shll
sub
notb
jb
xlat
jg
jl
iret
testb
out
dec
jns
push
push
lahf
add
test
mov
cmp
lahf
xor
gs
mov
mov
dec
subb
push
cld
ret
lock
cmp
and
popa
add
stc
mov
rcl
sub
enter
inc
xlat
jnp
mov
repz
or
jnp
out
jl
mov
cmp
jmp
negl
jp
out
pop
mov
mov
pop
xchg
neg
xchg
sub
popf
pop
sub
dec
andb
cmp
inc
xor
aaa
xlat
pop
ret
xchg
mov
bound
divb
rcll
je
fistpll
mov
movsb
andl
ljmp
push
cmp
js
mov
cmpb
cmp
xchg
enter
jo
push
add
adc
xor
mov
fidivs
dec
mov
pop
mov
jge
mov
dec
sbb
sub
jnp
adc
iret
fsubrl
repz
push
test
mov
mov
cmp
or
loope
xor
out
xor
jle
loope
xchg
or
ja
imul
pop
pop
js
and
sahf
in
mov
int
pop
xchg
faddl
xchg
adc
jbe
pop
pop
sbb
lea
inc
dec
out
paddsb
push
scas
rcrl
call
in
xor
lcall
xchg
adc
daa
les
repz
dec
sti
dec
push
leave
test
mov
ret
lods
popa
ret
in
jp
in
xchg
divb
mov
jmp
mov
mov
pop
shr
pop
cmp
mov
mov
clc
jle
stos
test
lahf
jge
xchg
ret
sub
mov
or
add
gs
push
aam
pop
inc
jno
sbb
insb
push
sahf
outsl
add
and
into
addl
push
xchg
xchg
xor
inc
mov
in
pop
loope
push
mov
jns
jge
jmp
sub
imul
repnz
jno
push
outsb
dec
or
hlt
xchg
sub
jecxz
or
cwtl
jnp
mov
add
jbe
inc
or
lock
mov
rcr
loop
pmaxsw
ss
mov
xchg
insl
and
inc
xor
cmp
rorb
rcrb
imul
mov
jmp
aaa
push
push
cltd
insb
jge
fldl
pop
lret
push
ret
popf
sbb
cmp
popa
add
add
js
or
pop
sbb
popf
icebp
imul
std
pop
lods
pop
and
push
aam
add
jg
ret
into
fdivp
sub
mov
es
shr
pop
mov
pop
out
sub
ret
xlat
lds
inc
dec
add
mov
cmp
pop
dec
in
scas
mov
out
cmp
xor
sbb
imul
mov
rorb
mov
lea
dec
call
push
pop
in
gs
or
jns
add
sbb
add
sub
push
std
lock
xchg
adc
sbb
or
push
xacquire
decl
add
leave
jg
test
out
jp
inc
out
pop
sti
mov
es
or
jmp
or
cmp
loop
push
jb
fucomi
push
stc
adc
jg
or
in
test
cmp
jo
out
adc
xlat
test
pushf
push
xor
lcall
int3
addr16
gs
popf
insl
jmp
hlt
insb
mov
lods
sarb
pop
jp
mov
inc
pushf
ss
in
lahf
cmc
sub
scas
stos
or
add
push
jge
mov
adc
fcomps
mov
cwtl
leave
push
adc
fsubr
notl
sahf
mov
push
jae
push
loope
lock
insl
mov
push
jbe
scas
jae
ficoml
ret
adc
sbb
or
xchg
test
add
adc
add
push
xchg
or
push
push
jecxz
cmp
data16
mov
dec
notb
stos
add
sti
push
pop
fisubrs
xchg
test
pusha
shll
mov
stos
adc
clc
sti
roll
mov
test
pop
fprem
mov
in
lock
mov
mov
mov
jbe
mov
clc
or
iret
lret
pusha
cltd
lcall
xchg
add
adc
cmpsb
sbb
pop
fmull
sbb
mov
mov
jbe
into
pop
mov
bound
push
xor
stos
add
xchg
jmp
fstpt
xchg
les
insb
jbe
gs
imull
movsb
xchg
and
rorl
or
cmp
pop
lahf
inc
push
jns
lahf
aas
sbb
and
lods
scas
mov
add
fcmovnb
dec
pop
jecxz
and
sub
push
mov
push
push
repnz
cs
aam
out
push
fwait
int
pushf
mov
test
mov
ds
or
addl
shl
imul
jmp
add
or
or
adc
mov
add
jl
mov
inc
dec
cmpb
fsubrp
pushf
in
rolb
dec
sub
mov
adc
rolb
push
xchg
push
push
jg
mov
push
mov
out
xchg
cmpsl
jae
out
stos
inc
cli
inc
add
jno
adc
jg
ret
fsubrl
aaa
sbb
lds
idiv
and
or
out
iret
gs
imul
ljmp
movl
mov
dec
int
stc
adc
sub
sbb
mov
push
cmpsb
inc
add
pop
cltd
fcmove
jecxz
cs
adc
or
out
pushl
push
sahf
aaa
testb
jne
mov
test
cld
adc
mov
popa
sti
mov
xor
mov
in
xchg
scas
push
adc
mov
xchg
ss
mov
int3
cmpsb
stos
sub
out
jl
push
lods
mov
jns
ljmp
xchg
and
or
in
xchg
insb
aas
xor
adc
jle
jp
sub
js
nop
push
fs
sbb
outsl
pop
insb
cmpsl
inc
sub
xchg
cmc
push
inc
jnp
xchg
or
inc
xor
loopne
and
repz
xchg
hlt
inc
test
test
inc
aam
and
test
aad
sub
cmp
adc
mov
dec
cld
rcrb
cltd
and
xor
lds
and
push
xor
push
sub
mov
add
ljmp
fstpl
dec
call
std
frstor
sti
clc
and
cmpsl
pop
aaa
rorl
dec
jl
cmp
mov
push
pop
jl
add
out
or
shll
out
xchg
clc
shll
out
xchg
sarb
xchg
pop
mov
std
inc
fs
adc
shlb
pop
jecxz
push
adc
add
das
sbbb
jbe
ljmp
mov
in
mov
jo
jecxz
outsl
add
inc
sub
xor
push
cmp
lret
xchg
bound
dec
dec
sahf
push
out
lock
dec
roll
adc
leave
mull
push
inc
and
jnp
mov
or
sub
sub
repz
cli
frstor
fmuls
clc
sub
stc
ror
std
pop
cmp
sbb
in
in
sbb
mov
aaa
inc
inc
movzbl
mov
fdivrl
inc
idivl
out
inc
cmp
push
lcall
or
cmp
in
test
jo
jnp
fists
pop
add
lahf
clc
aad
icebp
push
xchg
xchg
add
repnz
lods
stc
cwtl
fdivrs
movsb
mov
xor
jg
nop
mov
mov
dec
mov
jecxz
lret
cmpsb
adc
jl
in
inc
aad
mov
mov
aas
sbb
inc
add
mov
outsb
cmp
fsubl
mov
cmp
rorl
push
push
scas
icebp
pusha
dec
and
pop
adc
cmp
shlb
sbb
andl
les
addr16
sahf
fisubl
out
ja
push
pop
pop
cld
jns
mov
movsb
cltd
mov
stos
inc
inc
dec
pop
aas
ds
fldcw
aam
scas
das
push
aam
in
test
adc
in
xchg
mov
sbb
inc
or
xchg
push
inc
ret
xchg
jecxz
shrl
xchg
xor
sbb
jmp
inc
out
sbb
push
adc
push
mov
sbb
int
imul
stos
movsl
sbb
and
cmp
push
frstor
pop
mov
rcrl
pop
inc
sbb
jecxz
test
add
cmp
mov
int
scas
xchg
mov
pop
and
jbe
lcall
cmc
jb
jge
dec
pop
add
insl
pusha
hlt
cmpsb
addr16
testl
add
push
or
aad
pop
fs
cmp
push
adc
lret
mov
mov
addr16
js
mov
mov
nop
repnz
fdivl
fwait
mov
out
ret
rcrb
cmpl
mov
sub
mov
repnz
pop
stc
xchg
ljmp
scas
jbe
and
push
out
hlt
add
mov
imul
pop
faddp
movsb
iret
clc
popa
xchg
cmpsb
shl
pop
bound
cs
loope
or
cmp
xchg
enter
push
loop
pop
sbb
aad
std
cltd
andb
fistpll
mov
lret
mov
inc
out
iret
or
dec
int3
mov
mov
imul
or
in
mov
sbbb
imul
divl
dec
sbbb
fchs
lret
and
scas
mov
dec
lahf
sbb
mov
xchg
in
loop
shlb
clc
outsl
pop
sti
movsl
test
mov
out
add
jns
mov
test
gs
inc
ss
xchg
jae
shll
movsl
cmp
sbb
in
push
ss
jne
insl
subb
sbb
mov
je
fisttpll
fistpl
cmp
xchg
sarl
jo
xchg
adc
mov
or
xor
pop
outsb
mov
xor
scas
pusha
lea
fnsave
subl
lods
insl
xor
adc
push
push
imul
and
push
out
shrb
cmp
mov
inc
adc
xchg
shl
push
arpl
cli
cmc
sub
jnp
scas
lods
jo
adc
inc
movsb
lods
xchg
mov
cld
mov
mov
nop
mov
sbb
lds
pop
fdivrs
dec
xor
shrb
daa
and
adc
stos
into
stos
enter
pusha
in
lahf
pop
in
mov
les
sti
repz
in
dec
dec
push
or
sbb
sbb
or
mov
mov
fs
in
into
dec
andl
mov
sub
cvtps2pi
xor
xchg
add
in
add
jns
sub
push
vmaxss
adc
icebp
add
jo
pop
repz
xchg
loope
out
sub
pop
cwtl
add
fistpll
cltd
mov
push
xorl
adc
push
fbstp
rcl
sub
xchg
cld
sub
jns
std
mov
mov
push
jbe
lcall
lds
push
repnz
jecxz
cwtl
add
aad
ret
jnp
movl
aad
int3
mov
insb
repnz
repnz
mov
add
adc
jb
pop
cmp
mov
xchg
jnp
inc
call
pushf
jle
mov
int3
sbb
std
sbb
sub
adc
into
test
out
or
sarb
fisttps
mov
adc
or
inc
push
lea
aaa
inc
add
testl
mov
mov
movl
movl
mov
jmp
movl
jle
push
pushl
call
andl
adc
xor
xor
mov
sub
and
not
and
movzwl
adc
cmpl
mov
movl
movzbl
mov
jmp
movl
movl
jbe
push
push
push
pushl
call
add
sbb
sbb
xor
add
mov
mov
shrd
adcl
mov
or
mov
addl
jmp
inc
or
add
cltd
or
lret
test
xchg
or
ja
addr16
pop
mov
sbbl
fwait
nop
jl
inc
fidivrs
shrb
xchg
mov
mov
adc
xchg
insb
cltd
xchg
mov
dec
out
sub
aaa
fmul
push
ret
mov
int
add
and
fmull
into
xchg
nop
jp
outsb
adc
adc
jne
jns
insl
jp
cltd
es
pushf
dec
pop
inc
xorl
xor
inc
std
nop
fucomi
lret
ffree
lea
add
stc
sub
fwait
push
ss
dec
lds
xchg
sub
sub
sarb
xchg
and
pop
pop
sub
sub
xchg
push
mov
mov
xlat
push
rcrb
dec
out
cld
sbb
sbb
push
pushf
jne
repz
pop
and
xor
push
jg
and
mov
jne
mov
adc
sub
xchg
js
jmp
fwait
rcrb
jmp
loope
icebp
cmp
arpl
mov
jg
ds
or
pop
sub
mov
data16
cmpsb
shl
lds
dec
jbe
cmc
push
pop
mov
inc
inc
inc
mov
mov
ret
sub
xor
notb
pop
and
je
mov
cmp
push
push
cmp
cmp
in
cwtl
imul
aam
inc
push
dec
sbb
imull
aaa
cld
mov
push
xor
fstpl
lds
lods
shll
xor
pop
mov
test
mov
push
inc
and
aaa
out
stos
sahf
fisttpll
addb
add
inc
cmp
pop
arpl
dec
fisttpl
mov
mov
and
out
pop
dec
cmp
cmp
std
mov
lea
subb
mov
aaa
mov
mov
sbb
mov
pop
mov
insb
jno
mov
repz
les
ss
xor
pop
icebp
mov
or
aaa
jge
pushf
jp
push
jmp
aad
and
inc
movhps
pop
jge
int3
jp
pop
pop
inc
mov
fiadds
test
dec
xlat
cs
imul
or
mov
add
dec
out
xchg
or
sbb
mov
hlt
aaa
test
out
sbb
pop
xor
inc
movsb
adc
cmc
push
cli
repnz
clc
jecxz
jmp
xor
mov
push
sti
and
icebp
jbe
xor
pop
mov
lcall
mov
cmp
sti
sahf
fucomp
iret
or
sub
push
xor
shll
gs
leave
sub
ss
gs
sub
mov
sub
sarb
sub
ret
popa
mov
gs
mov
push
and
cmp
or
dec
sub
out
dec
je
sar
xor
loop
leave
rcl
fcmovnu
xlat
inc
pushf
in
dec
lea
adc
push
rcrl
sbb
mov
cltd
jecxz
push
push
decl
fnstsw
and
push
mov
filds
movsl
mov
je
or
push
add
jg
sbb
shlb
and
xchg
in
hlt
inc
push
jmp
push
pop
ja
add
out
push
mov
out
or
sbb
adc
push
int
xchg
xor
pop
dec
fsts
cmp
into
mov
call
inc
in
sbb
xor
sbbl
lret
and
ds
dec
mov
test
xchg
jne
or
or
xchg
in
pop
jo
sbb
or
fisubl
sub
push
dec
insl
cmpsb
cltd
and
sbb
inc
push
jo,pn
sbb
lahf
pusha
mov
aad
add
and
jnp
imul
jno
cltd
mov
popa
imul
or
orb
fucomp
jle
jecxz
xchg
inc
cld
and
and
mov
xor
in
inc
xrelease
mov
mov
and
cltd
stc
xlat
lds
dec
jbe
imul
sub
pop
xor
std
repnz
test
outsb
pop
sub
xor
and
push
fcomip
mov
mov
in
or
cmp
jbe
push
jg
jp
cwtl
mov
mov
dec
decl
dec
add
push
xor
les
cli
rcrl
mov
fimuls
sahf
mov
xor
and
stc
repz
daa
cmp
cmp
orl
mov
int3
jmp
lret
outsl
inc
xchg
loope
dec
xor
clc
pushf
fwait
sarb
xor
sbb
mov
pop
imul
inc
hlt
sub
inc
cltd
ror
outsl
shr
lds
sbbb
daa
cwtl
add
bound
enter
dec
sub
in
sub
xor
push
dec
cmp
out
movsl
xor
das
mov
sbb
dec
aas
mov
icebp
test
call
std
xor
xchg
sbb
dec
sbb
push
cmpb
aam
mov
out
dec
mov
enter
mov
lds
popa
jecxz
jae
insb
inc
in
addb
or
out
clc
loopne
xchg
stos
push
inc
repnz
pusha
ljmp
jle
push
or
movsb
stos
loope
gs
inc
inc
gs
cmp
pop
xchg
cmpsl
mov
divl
mov
push
push
clc
inc
ss
idivl
leave
outsb
repnz
pop
inc
push
add
jp
dec
jp
jg
shr
xorl
nop
push
mov
sar
pop
sub
add
iret
rcrb
mov
push
jecxz
sub
inc
xor
out
loopne
stos
aas
je
mov
scas
sub
push
cli
xchg
nop
sub
cmovle
or
cld
dec
out
scas
nop
mov
out
adc
ret
mov
mov
add
out
icebp
sub
add
lret
sbb
aam
pop
pusha
popa
or
push
cs
scas
mov
jl
repz
xor
out
decb
int3
jmp
jo
mov
pushl
mov
stos
enter
inc
dec
mov
lcall
les
test
dec
jge
lahf
movsl
fidivs
push
mov
add
lret
xor
inc
ret
fdivrl
pop
lock
mov
movl
sahf
shr
jp
rcll
add
ja
and
push
or
stos
mov
std
movsb
xchg
or
out
xchg
mov
mov
dec
daa
stos
dec
aam
cmp
xchg
test
sbb
push
mov
or
jg
fcmovnb
inc
mov
lds
aam
mov
xchg
mov
repz
xor
icebp
xchg
fimuls
add
jns
dec
mov
push
ret
mov
sbb
aaa
icebp
mov
dec
lahf
das
xor
push
xor
std
dec
fnstsw
aas
addr16
add
shll
push
mov
sub
inc
ljmp
cwtl
outsl
mov
cwtl
inc
jg
inc
add
fbld
adc
xchg
mov
sti
push
fisttps
fdivs
in
dec
xor
shl
xor
movl
or
shr
mov
subl
mov
mov
addl
mov
adcl
shrd
shr
mov
cmpl
not
mov
movl
mov
jmp
mov
mov
jb
pushl
pushl
pushl
pushl
push
pushl
call
or
adcl
movl
sub
and
subl
subl
mov
mov
xor
xor
adcl
or
adcl
shl
add
add
add
mov
mov
adc
mov
and
shrd
cmpl
movl
not
mov
mov
jmp
movl
movl
jge
pushl
pushl
push
pushl
push
push
call
sbb
add
or
or
xor
or
add
mov
movl
cmpl
mov
movl
mov
jmp
movl
movl
jg
push
push
pushl
call
add
sbbl
mov
adc
mov
xor
mov
addl
sub
shr
movl
mov
or
mov
addl
xor
shl
cmpl
movl
mov
not
jmp
movl
ja
pushl
push
push
push
call
xorl
xor
incl
xorl
subl
sub
xor
mov
sub
or
cmpl
mov
mov
movl
jmp
mov
jl
push
call
addl
adc
xor
neg
mov
mov
add
sbb
and
mov
movl
mov
and
mov
movl
mov
add
movl
mov
mov
adc
jmp
ret
mov
dec
rcrl
xchg
add
bound
mov
hlt
sbb
in
clc
push
or
xchg
pop
adc
pushf
daa
cld
in
mov
cmp
add
enter
mov
cmp
xchg
mov
pop
xchg
int
adc
mov
loopne
ds
sub
dec
sbb
xchg
pop
add
pop
je
mov
sar
mov
and
mov
pushf
lds
lds
stc
xchg
xor
ljmp
and
push
dec
loop
jp
aad
subb
jl
inc
pop
fs
int3
sbb
test
xor
adc
push
call
xor
and
jl
mov
inc
jge
je
sbb
ret
push
mov
or
cmp
stc
dec
sahf
bound
gs
cmp
fwait
iret
push
std
sub
out
xchg
push
xor
jmp
xor
bound
adc
push
or
dec
decb
push
hlt
jmp
pusha
mov
stos
rorl
cltd
jle
xchg
int3
and
mov
dec
jae
adcl
aam
popa
mov
mov
dec
les
sbb
mov
rolb
fildl
jo
arpl
loop
xchg
mov
jnp
dec
or
test
divl
leave
adc
lods
jae
push
loope
inc
lock
adc
fbld
bound
xchg
pop
and
fidivs
aas
pop
fdiv
aas
add
fsubrl
mov
sarb
test
sahf
dec
sub
xchg
adc
fucom
dec
lea
addr16
sahf
cmp
cmc
jno
loope
ffree
cwtl
add
outsl
aam
fmul
imul
enter
cmpsl
push
nop
data16
mov
xorl
popf
in
loop
jge
push
outsb
push
mov
xchg
sbb
lds
idivb
pop
fists
in
push
into
cmc
inc
fs
sbb
pop
sub
insb
outsb
mov
push
in
xor
je,pn
sbb
fsts
or
into
mov
jge
pop
imul
inc
push
jb
rclb
xchg
push
pop
dec
leave
mov
cmp
and
sub
inc
xchg
sbb
call
adc
loope
cmp
or
xchg
stos
lcall
stos
cmp
cmp
dec
cmp
dec
movsl
flds
into
sahf
hlt
mov
cmp
xor
xor
test
push
mov
gs
shrb
outsl
push
stc
hlt
dec
out
lods
pushf
repnz
rcll
lret
mov
adc
mov
push
cld
iret
or
mov
add
mov
mov
ret
orb
xchg
sbb
lock
iret
fdivrs
roll
jno
mov
mov
fistpl
loopne
cltd
add
enter
mov
mov
stc
lds
rcll
insb
xchg
jae
mov
push
jne
iret
lds
push
insl
call
vunpckhps
loope
xor
lret
outsb
add
mov
dec
jns
lcall
xchg
rcrl
add
cmp
mov
jbe
std
data16
mov
popa
mov
aaa
lret
sbb
sub
sub
mov
pop
cmp
in
movsl
mov
fistps
xor
popf
mov
mov
push
les
sbb
clc
int
inc
test
push
mov
bound
ret
cltd
or
or
into
fbld
sub
popl
out
xchg
icebp
xor
aaa
cmp
lods
sub
jg
inc
jne
jae
inc
dec
mov
mov
bound
inc
loopne
insl
push
pushf
in
add
xor
xlat
pop
insb
adc
inc
pop
jg
sbb
nop
scas
jmp
das
test
fistps
mov
sar
mov
out
and
sub
push
add
jge
dec
jae
scas
sbb
inc
icebp
mov
jp
add
hlt
call
xor
jnp
lcall
nop
xlat
rcrl
lea
stos
sub
or
repz
test
arpl
leave
push
shll
rclb
sbb
inc
inc
xor
dec
mov
sti
leave
dec
xor
rcrb
mov
mov
cmpsl
adc
stos
fsqrt
sarl
push
inc
repnz
cwtl
fnstcw
aam
out
lods
dec
fiaddl
movsl
jne
rcrb
sti
stos
popa
fsub
or
pop
dec
xchg
int3
dec
cmp
jbe
pop
jle
in
xor
andb
lret
jns
push
cmp
aad
iret
mov
fadd
sahf
cmp
xor
andl
inc
dec
mov
aad
jb
mov
jb
sub
or
dec
mov
xchg
addr16
fisttpl
xor
gs
cmp
es
in
fstps
int
cmpsb
out
bound
and
outsl
imul
stos
and
dec
or
inc
xchg
pop
push
test
cld
ret
icebp
jae
sarb
clc
rol
sbb
arpl
sbb
sbb
jmp
inc
mov
mov
mov
mov
dec
jle
push
test
sub
and
imul
push
out
mov
cltd
sbb
test
adc
push
js
pop
or
xchg
js
dec
ret
sahf
inc
insb
adc
sub
add
mov
in
pop
in
xor
fstl
adc
scas
inc
cli
xlat
cmpsb
movsb
add
das
xor
inc
rcll
pop
leave
mov
xchg
sbb
popf
jmp
cmpsb
xchg
fsubs
aad
int
inc
mov
add
daa
jbe
popf
sbbl
dec
ljmp
imul
inc
cltd
imulb
aaa
movsb
popf
push
imul
fcomps
je
add
pop
push
imul
notl
dec
or
stc
insb
lret
cmp
lcall
sbb
jp
pop
out
mov
jno
mov
popf
sbb
loopne
imul
std
aas
addb
ds
mov
repz
mov
xchg
push
dec
jl
dec
sbb
fiaddl
xchg
call
cmp
jo
inc
and
pop
adc
cld
pop
addl
mov
test
xor
icebp
add
lret
repz
rcrl
jle
mov
movsb
mov
jae
push
loope
sbb
xor
push
xorl
xchg
aaa
pop
bound
sub
pop
in
cmp
inc
aaa
daa
xchg
pop
test
inc
ret
and
outsl
mov
js
xchg
mov
mov
sbbl
repz
jle
cmp
popa
push
mov
inc
lds
mov
push
mov
loope
mov
mov
xchg
rcl
cwtl
lds
push
neg
roll
xchg
ret
mov
mov
movl
jmp
lods
jp
scas
adc
xchg
mov
pop
fisttpl
ja
dec
shlb
mov
xchg
dec
xor
gs
xlat
in
jg
jnp
popa
mov
xor
mov
and
test
sub
stos
mov
add
add
ss
or
lret
je
cli
pushf
mov
in
lahf
dec
adc
xchg
je
fnstenv
push
dec
pop
cltd
add
mov
mov
lret
mov
dec
and
fcomps
or
jge
push
push
xor
loop
push
or
iret
add
out
sbb
push
imul
push
mov
fcmove
push
cmp
repz
dec
pop
xchg
stos
add
inc
inc
jle
adc
fcompl
movsl
inc
stos
arpl
ss
mov
cvttps2pi
mov
shr
scas
aaa
mov
fs
pop
popa
jo
ret
mov
aas
in
mov
pop
jo
sub
xchg
xchg
je
push
cmpsb
sbb
xor
mov
ret
imul
mov
inc
mov
ss
hlt
enter
dec
nop
xchg
pop
jno
mov
arpl
gs
es
pop
sub
dec
fs
push
mulb
push
add
dec
and
jp
inc
mov
cmp
out
or
icebp
aam
test
stc
pushf
and
jecxz
stos
jle
pop
sub
lds
scas
inc
pop
mov
fsubs
and
fdivrs
ljmp
sti
adc
dec
icebp
jo
enter
js
std
ficoms
sub
scas
push
push
mov
mov
int
and
bound
addr16
scas
mov
lret
fsubr
mov
out
andl
mov
inc
mov
and
pop
insl
filds
mov
cmp
adc
xor
bswap
in
pop
jg
xchg
cmp
jge
fistpl
mov
or
inc
mov
filds
mov
or
in
dec
insb
addr16
call
jno
jb
add
sub
sbb
push
add
and
inc
jg
mov
jge
nop
pop
jae
loopne
jno
push
mov
loop
lods
sbb
loopne
and
inc
gs
cmpsl
pop
cmpsb
add
in
adc
adc
stos
int
enter
xor
popa
dec
mov
pop
jp
bound
jecxz
cwtl
add
mov
push
xchg
shrl
es
inc
mov
lods
outsl
dec
inc
in
sub
jne
jbe
out
stos
add
xchg
mov
fcoms
mov
mov
xchg
int
push
test
movl
mov
aaa
dec
jle
or
push
test
sahf
sti
fs
sub
xor
or
int
mov
std
mov
and
jae
scas
rolb
fwait
or
sbb
icebp
push
dec
iret
pop
sbb
ja
xchg
and
or
sahf
mov
out
call
mov
in
xchg
adc
movsl
cmp
lret
xor
mov
mov
sbb
jmp
nop
shr
push
pushf
sbb
movsb
jp
cmp
cmp
fldenv
aam
andb
lea
xor
cli
stos
xor
and
insb
aad
scas
pop
dec
dec
mov
nop
repz
les
push
loop
es
mov
jnp
inc
inc
jle
stos
dec
dec
mov
sti
ja
sub
repz
adcb
aad
xchg
mov
mov
mov
sbb
sbb
stc
push
repz
fisubrl
push
les
sub
xchg
mov
arpl
aas
lods
test
pushf
or
das
mov
xchg
mov
in
ret
lods
adc
test
stc
fmul
dec
iret
inc
out
test
ss
sbb
adc
and
push
insb
lahf
pushf
int
cmp
stc
mov
pusha
loope
pop
lock
imul
out
xor
mov
cmp
mul
xchg
cmpsl
imul
js
sub
sub
fsts
mov
jb
sbb
sti
rcrb
jno
gs
nop
cmp
xorb
add
aam
sbb
lock
lock
and
inc
cmp
sub
pop
jne
pop
icebp
sbb
or
out
orl
mov
sub
imul
lock
jge
jae
xchg
sbb
cmp
jge
lcall
jnp
aad
xchg
mov
cmc
pop
dec
pushf
or
push
mov
cli
test
mov
into
and
xor
xchg
fsubrs
movsb
loop
mov
outsl
adc
cmp
jp
add
mull
mov
jmp
xor
mov
hlt
push
sub
pop
lea
fisttpll
aaa
sbb
xchg
movsb
imul
push
roll
and
add
aas
aas
mov
jns
and
mov
pop
insb
std
mov
inc
test
pusha
cwtl
aaa
pop
pushf
xchg
push
mov
or
outsl
shl
mov
cmpsb
nop
popf
adcb
cmp
mov
loope
sahf
divl
jmp
fstps
cmpsl
adc
rcl
fdivrl
push
popaw
sub
or
mov
push
roll
not
movsl
in
stc
pop
push
or
aaa
sub
or
dec
mov
ja
jb
repnz
mov
rcr
sub
mov
and
adc
lahf
mov
mov
sub
ja
lcall
push
jbe
stos
rcrl
adc
and
in
dec
xchg
adc
mov
daa
xor
rolb
sub
hlt
dec
bound
sub
xor
bound
xchg
mov
divl
cli
arpl
lods
or
dec
or
cltd
out
fs
in
fisttpl
outsl
out
stc
in
decl
iret
test
sarl
mov
data16
jecxz
fsubrs
mov
mov
mov
jge
and
js
fwait
xor
inc
mov
adc
loop
cmpsb
mov
mov
mov
sub
test
iret
mov
dec
jg
repz
pop
pop
das
mov
sbb
iret
cs
cmp
filds
cmpsl
add
into
xor
jmp
lods
test
jecxz
pusha
in
mov
jb
stos
imul
dec
rorb
in
and
outsl
adc
push
cmp
inc
or
aam
mov
or
and
dec
sbb
iret
lods
sti
test
flds
jmp
dec
push
sbb
push
pop
mov
fdivrl
fwait
inc
ds
xor
jp
out
mov
jmp
enter
fucomip
adc
or
push
pop
movsl
dec
ljmp
in
cwtl
push
dec
imul
cmp
sbb
jns
push
jle
imul
pushf
push
mov
or
xlat
xchg
andb
aam
mov
mov
inc
rorb
enter
pop
add
add
dec
push
adc
call
movsb
nop
push
scas
lret
ja
mov
push
pop
add
js
adc
dec
xchg
pop
dec
lods
mov
add
mov
mov
push
xchg
test
pop
fidivl
int
call
cld
sbb
popa
sub
mov
test
movsl
ret
xor
lcall
and
cmp
insl
scas
cmp
adc
xor
jns
pop
push
mov
xchg
out
add
enter
cmp
loopne
popa
cmp
andb
xchg
jns
roll
sbb
jb
repz
dec
jo
out
adc
fs
adc
mov
fdivr
test
leave
mull
sbb
mov
int3
mov
sub
loop
cmp
mov
ljmp
ja
add
leave
dec
xchg
add
inc
sbb
mov
in
mov
fidivl
loopne
xchg
imul
xor
dec
pushl
repz
iret
pop
inc
stos
fimuls
lahf
pop
inc
sub
lds
cmp
mov
fmull
inc
sti
cld
lahf
mov
pop
pusha
add
lea
add
mov
or
mov
mov
cwtl
adc
popa
add
cmp
inc
in
daa
cli
add
push
insl
xor
sbb
fwait
clc
pop
mov
popa
loop
mov
mov
bound
mov
int
movsl
and
lret
add
adc
in
mov
and
mov
xchg
inc
std
xchg
int3
jo
add
dec
xor
dec
divb
cmpsb
scas
mov
sbb
frstor
cli
cmc
imul
xor
sub
and
scas
or
adc
or
xlat
sbb
les
int
and
cmp
adc
orl
adc
fcompl
mov
xor
mov
ficomps
mov
in
in
outsb
out
stc
jo
sub
iret
mov
or
jg
jge
or
icebp
das
lds
bound
and
fdivl
sbb
sbb
lds
icebp
and
into
inc
aas
push
push
push
sub
dec
ret
mov
movsl
lret
xchg
cmpsl
fucom
lods
shl
or
popf
xor
aam
push
popf
mov
out
shrb
xlat
pop
xor
lahf
hlt
fsubs
sub
lea
add
imul
daa
mov
cmc
loop
push
loop
daa
jne
pop
mov
pusha
mov
sub
clc
cmp
inc
mov
pop
call
inc
cmp
adc
leave
ss
sahf
xchg
xchg
xchg
divl
dec
or
aam
out
orb
lret
sbb
test
flds
push
jb
jmp
inc
test
jo
insb
lret
jp
or
fwait
and
inc
push
scas
xchg
cmpsb
mov
vmwrite
insb
cli
fnstsw
inc
and
mov
and
bound
dec
inc
inc
jg
jne
adc
mov
mov
pushw
ljmp
roll
dec
loopne
xchg
push
mov
mov
inc
int
push
in
rcll
pop
outsl
lret
add
mov
fs
int
jl
mov
or
loopne
out
xchg
mov
mov
push
cmpsb
cld
dec
es
and
or
dec
mov
dec
add
dec
sub
aas
and
movsb
enter
jge
les
mov
int
add
nop
dec
out
lcall
loope
sbb
sub
adc
dec
outsl
sub
sbb
push
adc
bound
fadds
jle
stos
push
sub
in
xchg
popa
roll
xchg
cmpsb
add
mov
scas
mov
and
out
sub
aaa
mov
or
mov
pushf
std
push
sub
out
sub
ja
jne
int
sub
add
cltd
icebp
inc
andb
xchg
test
mov
jl
push
push
and
pop
pop
rol
mov
mov
dec
int3
faddl
jb
repz
mov
jg
xchg
les
aam
pop
vpminub
xor
ret
fmuls
scas
push
push
pop
bound
iret
pop
out
push
sbb
or
xchg
mov
lret
jp
inc
dec
cld
mov
add
sbb
adc
loopne
pop
mov
lret
in
pop
mov
or
push
aad
adc
or
xchg
rcll
xor
lock
lcall
xchg
or
lods
xor
enter
loope
jns
pop
xchg
mov
inc
sub
outsb
or
icebp
xchg
fidivs
imul
clc
adc
xchg
cli
and
push
xchg
inc
and
xchg
sbb
pop
cmp
adcb
outsl
jp
stos
mov
adc
js
jns
test
mov
sahf
les
fnstenv
pop
cmp
sub
mov
outsl
pop
or
fcoms
pop
adcb
je
es
ret
test
out
lcall
nop
mov
xlat
jge
jge
push
ret
notb
clc
pushf
jge
lock
mov
sahf
dec
cmp
into
xchg
das
in
adc
xchg
lock
mov
fmull
imul
retw
loope
jb
js
jecxz
push
dec
inc
push
ljmp
je
int
xor
push
push
loop
jmp
lahf
cmp
adc
or
sub
imul
jne
jge
mov
sahf
daa
lods
cmp
in
ret
dec
add
push
popa
pop
fprem
lods
pop
ror
lahf
xchg
test
fisttps
lds
int
bnd
cld
decl
mov
sub
sbb
or
adc
cmp
cs
dec
push
stc
adc
and
in
cwtl
cmpsb
sub
imul
jo
and
lods
in
mov
dec
es
lock
mov
es
cli
bound
lods
mov
jo
nop
or
lock
sbb
stos
mov
cmp
bnd
movsl
mov
lret
cmp
hlt
popa
imul
nop
fisubs
pusha
mov
cltd
sbb
xor
inc
leave
adc
dec
stos
aad
test
push
or
ljmp
jmp
das
leave
shll
xchg
xchg
and
pop
mov
fcomi
dec
daa
cli
xlat
mov
jge
dec
shlb
pop
icebp
mov
sahf
sub
test
jnp
dec
aaa
jo
xchg
jno
leave
int
clc
pop
mov
outsb
push
cltd
pop
outsl
jge
gs
inc
pushf
test
cmpb
stos
and
pop
dec
cmp
dec
xlat
std
add
xor
sub
add
push
sub
adc
mov
fcomip
sahf
loopne
sub
shrb
mov
outsb
pop
addb
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
jmp
in
in
data16
push
sbb
or
mov
mov
push
xlat
xchg
pop
and
cmpb
bound
es
lret
push
daa
stc
and
push
hlt
rcll
lds
pop
xchg
and
lods
rcrb
andl
sbb
dec
ljmp
fs
jg
and
aam
dec
xor
loop
repz
jl
push
cmp
pusha
jge
cli
jmp
pusha
shrl
sub
jnp
test
sub
int3
push
mov
sub
push
inc
aad
mov
cmp
adc
jmp
arpl
in
and
out
push
mov
xchg
xor
adc
mov
push
jnp
scas
push
inc
lret
adc
ljmp
pushf
dec
jb
inc
cld
pushf
stos
lea
je
shll
call
xor
xor
mov
mov
cltd
ja
loope
jae
imulb
push
rcl
sbbl
xchg
xchg
arpl
pop
rcrl
cmc
push
dec
stos
add
push
imul
mov
lods
sbb
popf
addr16
dec
sub
xorb
out
ret
or
adc
xor
pop
sub
add
pushf
inc
int
pop
pop
in
cmc
jp
in
jns
insb
out
dec
das
pop
fs
xchg
scas
sbb
pop
push
push
cmp
faddl
or
js
das
push
movsl
fiaddl
lret
stos
jb
inc
stc
xchg
xor
or
popf
in
inc
es
adc
push
je
testb
movsb
mov
mov
and
aad
adc
xchg
scas
and
mov
dec
xchg
mov
outsl
xchg
mov
shrl
aad
add
lock
xor
jns
push
dec
outsb
and
dec
mov
jp
into
pusha
outsl
mov
dec
mov
imul
cmp
sbb
add
sub
cli
cmp
mov
xlat
xchg
pop
sub
cmp
lret
pushf
sub
out
jno
jns
push
and
sti
mov
or
sub
sbbb
in
mov
or
jo
cltd
pop
scas
or
cmc
jno
add
mov
push
mov
sub
push
adc
dec
lcall
push
roll
shll
cmp
cs
shrl
lahf
push
and
insb
repnz
fsubrp
ret
jmp
pop
sub
stc
mov
roll
stos
xchg
mov
cli
or
out
jecxz
out
adc
sahf
xor
mov
dec
cmp
aas
into
aas
int3
pop
or
fbstp
ja
push
and
inc
xchg
push
sbb
fucomip
icebp
repnz
fimuls
xor
pop
shrb
or
mov
mov
inc
push
cld
sub
repz
push
scas
cmp
mov
xor
mov
repnz
inc
lds
int3
ja
add
xlat
repz
jecxz
sahf
dec
ja
pop
pop
cmp
xchg
das
dec
mulb
lahf
subb
ss
mov
clc
hlt
divl
or
aas
add
int3
out
loopne
cltd
pop
mov
rcrl
dec
mov
jb
inc
sarb
lret
add
jne
push
cs
xor
jle
mov
jg
pop
and
orl
add
add
leave
repnz
push
xchg
pop
mov
out
mov
lahf
adc
push
shll
pop
popl
sub
and
cs
inc
lahf
test
jne
mov
adc
jmp
sbb
xchg
repz
loopne
dec
cmp
add
jmp
rcl
sbb
or
rclb
xor
lds
roll
and
lret
mov
sbb
pushf
lret
mov
das
sbb
ds
cmpsb
insb
xchg
daa
sbb
mov
or
jp
xchg
jp
xchg
cli
inc
or
xchg
lock
pop
mov
shlb
jns
push
shl
adc
mov
stos
inc
xor
or
fcom
loop
nop
test
hlt
mov
lods
pop
push
jl
cmpsb
add
sub
pop
lahf
adc
out
sbb
loope
sbb
push
jne
mov
jge
pop
adc
inc
outsb
lods
pop
std
jno
sti
js
mov
test
hlt
push
and
andb
in
movsb
les
cmpsb
pop
xchg
xchg
xchg
pop
pop
sub
push
out
cmp
mov
pop
gs
aam
enter
mov
xor
push
push
and
pop
call
outsb
or
fsubrs
inc
je
or
inc
imull
push
pop
repz
bound
pop
aad
int
lea
mov
mov
cmp
mov
push
sbb
mov
jae
fwait
cmpsl
sbb
je
aaa
xor
and
bound
or
loope
or
scas
insb
loopne
jne
dec
hlt
in
jne
adc
lods
push
push
xor
shll
add
cltd
ja
mov
mov
iret
stos
scas
stos
mov
push
push
imul
fs
mov
pop
push
data16
sbb
arpl
ds
inc
mov
xchg
xor
scas
pop
sbb
or
mov
xor
ret
add
adc
leave
jmp
lods
data16
adc
push
add
jb
call
push
sbb
mov
rolb
icebp
aam
mov
adc
pop
push
push
mov
aaa
dec
adc
mov
push
in
mov
mov
dec
inc
and
cwtl
xor
lock
cmp
jecxz
and
aam
dec
mov
sub
jne
xchg
or
loope
repz
or
jnp
jb
rcrb
es
mov
mov
shlb
push
mov
iret
ret
dec
push
xchg
out
cmp
jp
fsubr
jge
mov
daa
push
push
stc
test
jne
fwait
push
mov
adcl
test
lret
out
jp
out
adc
iret
xor
jge
add
push
mov
jae
push
cmp
testl
sbb
mov
out
in
cmp
addr16
js
mov
xchg
or
daa
out
stos
cli
xchg
push
mov
jb
push
mov
mov
scas
and
inc
inc
push
enter
jns
outsb
lret
mov
and
push
dec
push
mov
mov
ret
sti
sbb
push
push
xlat
rcr
fs
popf
xchg
pushf
or
and
adc
loop
into
cltd
jno
iret
mov
shll
ljmp
or
mov
mov
stc
xchg
es
insl
repnz
stos
sbb
dec
jne
orl
dec
clc
fisttpl
ja
mov
mov
movsb
jno
add
mov
test
and
xchg
cmp
arpl
ja
insl
mov
cmp
mov
repnz
pop
packssdw
add
in
movsb
ss
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
jmp
outsb
hlt
xorl
mov
ja
leave
cld
pop
mov
loope
push
movb
mov
push
lock
stos
or
and
mov
jo
sbb
push
inc
aaa
ds
jne
jbe
insb
outsl
sub
iret
add
xchg
inc
fld
xor
mov
call
mov
insl
shrl
xor
push
or
in
lods
ljmp
mov
stc
aad
inc
insb
or
push
sbb
mov
iret
jmp
push
loopne
data16
add
jp
xor
imul
push
add
fprem1
and
jge
push
pop
add
mov
xchg
adc
add
mov
fcoms
outsb
sbbl
popl
aas
jbe
dec
mov
sbb
xchg
sbb
dec
jmp
fstpt
sbb
cmp
incb
decb
outsb
sub
mov
pop
fisttps
nop
inc
jns
and
lea
scas
pop
mov
jbe
add
cmpsb
push
xor
daa
sbb
jnp
xor
repz
jle
push
xor
dec
insb
add
inc
inc
popa
lods
rorl
mov
jo
cltd
jmp
dec
adc
sahf
ds
sbb
jne
idivb
fbstp
gs
lods
out
push
cmpsl
sbb
jmp
insl
lcall
push
xchg
adc
push
fstl
push
mov
pop
cwtl
das
scas
mov
mov
imul
xor
lahf
jo
push
shlb
ficoml
push
xor
int
or
imul
cld
in
orb
cmpsl
sub
int
sti
shlb
addr16
push
push
cmpsl
addr16
fidivrl
scas
add
mov
jecxz
into
xor
out
xor
xchg
sbb
mov
mov
mov
push
sbb
push
mov
mov
into
inc
push
popa
xchg
sbbl
mov
inc
lahf
mov
sbb
ret
push
sti
stos
call
outsl
nop
push
pop
mov
mov
dec
cs
out
add
mov
imul
inc
adc
inc
cld
sub
xor
popf
test
or
and
jne
loopne
dec
cltd
dec
mov
pop
mov
daa
fwait
xor
lahf
jb
mov
jo
pop
cwtl
jp
jne
hlt
inc
adc
adc
scas
test
iret
mov
pop
xor
ljmp
ret
mov
mov
push
psubb
hlt
fistpl
add
negl
popf
pop
add
popf
les
ja
mov
cli
push
inc
sti
sbb
add
cltd
rcll
push
mov
shll
iret
jns
xchg
rcll
pop
adc
fistl
xchg
jns
shrb
and
mov
lock
lods
xchg
mov
stos
sub
dec
bound
movsb
xchg
jmp
scas
lock
jae
loope
dec
aas
popf
sarl
imul
jl
jae
pop
roll
in
daa
sub
pop
nop
inc
dec
push
push
movsb
loope
movsb
pop
mov
xchg
jne
mov
lods
cmp
rorl
sahf
je
xchg
mov
push
scas
jle
aam
adc
je
les
sbb
and
add
jle
jmp
push
insb
pop
and
rcrl
repz
loope
aad
xchg
and
sarb
pop
les
push
out
mov
iret
fld
das
leave
in
ljmp
mov
pop
bound
pop
adc
enter
into
sub
out
xchg
flds
mov
mov
cwtl
pop
xor
adc
jne
and
lock
lret
mov
jae
sub
adc
jae
call
movsl
fbstp
out
dec
stc
flds
pop
jno
imul
pop
sub
fcomip
movsl
or
shlb
jae
repz
adc
jbe
loope
mov
sahf
movsb
insb
test
shl
push
mov
xchg
xchg
insl
add
cmp
jae
dec
das
loop
inc
pushl
das
xchg
mov
mov
inc
in
cmp
call
xor
subl
ficoms
dec
roll
cmpb
or
sarl
popa
cmpsl
add
or
xor
out
push
loope
mov
adc
cmp
xor
repnz
mov
push
lret
xor
push
jbe
push
pop
scas
fbld
xchg
lahf
pop
sub
dec
in
clc
pop
inc
xchg
xchg
lods
jns
push
jl
dec
lock
push
pop
mov
sbb
ret
push
and
aad
sbb
movsb
cmp
test
dec
das
jle
cmc
stc
push
out
pop
cmp
xor
and
ret
pop
mov
xor
mov
cs
cli
fwait
or
pop
outsl
jns
and
lock
loop
xchg
push
int
sub
inc
leave
out
enter
sbb
dec
push
fwait
mov
add
xor
sub
adc
ds
mov
hlt
shrb
pop
add
push
inc
inc
inc
inc
repnz
lods
leave
testb
ret
dec
mov
imul
push
mov
lahf
int3
cmpl
jo
cmp
clc
lret
repz
sub
cltd
inc
mov
push
pop
pop
aaa
ret
repz
mov
xchg
pop
xchg
cld
lcall
inc
sti
sbb
xor
xchg
push
test
je
inc
add
and
pop
mov
mov
mov
sub
enter
scas
dec
pop
daa
sbb
repnz
lret
inc
or
mov
or
pop
mov
inc
stos
lods
push
roll
dec
loope
sti
fstpl
out
addr16
pop
adcl
repz
cmpsb
sbb
out
rorb
jns
inc
mov
out
stos
into
push
mov
sbb
into
in
fistps
pop
push
pop
fcompl
out
scas
out
fisubl
fstl
daa
pop
push
stc
ret
notl
jg
lret
add
cmpl
adc
inc
andb
shlb
repnz
add
push
pop
idivb
or
mov
push
cwtl
mov
jg
xor
add
add
loope
adcl
test
cmpsb
rcrb
fdiv
lods
clc
mov
xchg
and
push
mov
insl
pop
inc
inc
in
dec
mov
punpckldq
sbbl
scas
addr16
mov
aaa
pop
mov
pop
lods
adc
jb
cltd
int3
xchg
jnp
loop
cmp
stos
sbb
mov
insb
jnp
mov
jle
adc
fidivrl
cltd
and
lods
adc
push
mov
jle
jne
out
iret
stc
lea
lds
aad
or
popa
cmp
sti
into
jmp
xor
pop
or
adc
add
mov
outsb
and
inc
inc
jmp
arpl
sbb
hlt
fildl
popf
pop
push
mov
call
add
in
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
jmp
add
mov
inc
push
sbb
ja
popf
lcall
flds
arpl
sbb
mov
std
jo
aad
cmp
inc
es
push
in
cmp
push
inc
dec
outsb
pop
or
adc
mov
gs
test
xchg
push
sub
clc
jmp
std
stc
shlb
cmc
imul
inc
xor
movsl
jl
sub
dec
xchg
outsb
jne
std
stos
lods
out
push
xchg
mov
fcoml
dec
icebp
ljmp
call
out
mov
stos
jo
xchg
lods
orl
inc
pop
xor
jmp
add
and
mov
lods
sub
not
leave
mov
int
add
scas
cmp
out
push
lods
xlat
inc
jge
cltd
jp
mov
xchg
xor
mov
sub
pop
lret
out
lods
mov
sbb
pushf
inc
aam
mov
popf
mov
adc
loopne
and
test
inc
cmp
adc
pop
push
andl
sub
clc
sbb
clc
fcompl
add
or
das
add
pop
pusha
push
mov
cmp
loop
gs
dec
movsb
jecxz
insl
cmpsl
loopne
popf
insl
in
sti
inc
cltd
addr16
xor
mov
mov
cmpb
push
sbb
adc
sbb
jo
adc
and
insb
add
daa
std
sbb
cmc
mov
pop
outsb
mov
daa
sbb
push
movl
adc
sbb
lock
fld
sti
jg
lds
inc
test
cwtl
jmp
jae
xor
sbb
mov
insb
pop
sub
mov
mov
inc
push
jae
add
jmp
aaa
jle
push
ds
push
sub
cs
xchg
test
inc
and
push
mov
es
jmp
aas
ja
ja
out
dec
push
jl
ret
scas
add
mov
rcll
into
inc
fmuls
adc
mov
fsub
loopne
mov
cmp
clc
imul
inc
push
and
inc
fnsave
ret
aam
pop
mov
dec
jg
jbe
popa
xchg
test
jecxz
xchg
push
inc
stos
cwtl
hlt
xor
std
cmp
mov
pop
and
mov
std
stc
fdivrl
and
sbb
cmp
jo
bound
or
repnz
xor
pushf
pop
test
pop
out
movsl
loop
push
jmp
dec
mov
insl
xchg
loopne
pusha
push
inc
ret
int3
xchg
mov
sbb
or
pop
jnp
add
mov
xchg
inc
fsubl
and
lahf
shrb
das
in
out
pop
pop
pop
or
out
add
and
addr16
jnp
les
rorb
pop
outsb
dec
add
std
push
cld
and
pop
xchg
nop
inc
push
mov
xor
mov
js
sarl
sbb
fdivl
test
stc
in
pop
in
ja
sbb
rcll
sbb
xchg
mov
arpl
fsubr
push
push
lods
sub
cwtl
sub
inc
jo
lods
cmp
mov
xchg
aas
jg
add
cltd
movsb
vcvttss2si
pushf
shrb
mov
adc
mov
stos
and
out
inc
mov
hlt
mov
insb
lret
lret
cmpsb
or
push
add
ss
test
xor
cmp
dec
xor
or
mov
sbb
push
sti
sbb
jge
test
xor
cli
cmpxchg
shl
lret
jmp
xor
mov
insb
jp
or
int
or
inc
push
fisubs
and
pop
shrb
ja
jne
inc
divb
mov
push
jae
jb
in
or
adc
add
imul
fdivrs
jae
rcrl
mov
sbb
mov
out
cmpsl
sti
sbb
jl
cmp
das
pop
mov
sti
pop
aas
sub
mov
push
lock
daa
sub
jp
les
jg
sbb
gs
data16
xchg
xchg
aad
mov
nop
sbb
les
xor
jo
testw
push
int3
movsl
negb
pop
jecxz
push
or
pop
std
aas
stos
lahf
cmpsb
cli
fcmovnbe
jmp
cmp
std
inc
cmp
je
jns
jne
mov
je
cmpsl
sub
dec
xchg
aad
cmc
scas
popa
je
imul
outsl
sbb
int3
lret
xchg
mov
outsb
lahf
shr
push
adc
xchg
ds
fisubl
or
jbe
jp
aaa
sbb
sub
mov
das
cmp
aas
pop
xlat
lcall
imul
xchg
mov
jmp
stos
and
mov
xchg
fldt
mov
xchg
outsb
ret
in
or
pop
add
xchg
hlt
mov
es
repz
lcall
inc
call
cs
inc
dec
mov
and
popf
xchg
adc
or
push
stc
ret
inc
or
int3
xchg
mull
mov
cmp
repnz
lahf
xchg
jbe
mov
pop
push
test
jns
lret
sbb
cmp
outsb
movsb
sub
jl
cmp
add
jmp
aad
xor
xor
in
out
mov
jne
sub
push
mov
aaa
and
loop
mov
add
hlt
enter
sub
jecxz
xor
scas
outsl
lds
inc
nop
pop
push
ret
ljmp
push
dec
adc
shr
pusha
call
dec
js
or
push
aam
pop
xor
dec
cmpsl
arpl
jle
push
lret
and
jne
mov
pop
aaa
jnp
dec
testl
aad
sub
xchg
lcall
xchg
addb
out
movsl
dec
insl
mov
or
jecxz
pop
jecxz
mov
or
aaa
push
lods
imul
adc
ljmp
lock
ljmp
es
xor
inc
jbe
data16
popf
jmp
popa
icebp
dec
xchg
sbb
ret
adc
xlat
xchg
jl
sub
mov
jecxz
and
xor
mov
ja
fsubrp
mov
rorl
dec
xor
push
cmpps
stos
jae
inc
stc
push
clc
push
jge
lret
xchg
dec
cmpsl
ja
jb
leave
pop
push
icebp
ret
lcall
test
cs
aaa
jbe
inc
out
in
pop
push
dec
cmpsl
jne
jmp
mov
jne
int
jb
test
jae
sbb
xor
pop
adc
inc
repz
xchg
push
in
fdivl
push
sbb
jne
call
lahf
mov
xor
pusha
adc
mov
cmp
loopne
mov
js
and
and
dec
lods
push
and
sbb
mov
cmp
negl
push
out
cmp
dec
fsts
insl
mov
mov
int
pop
jbe
xchg
or
push
test
xchg
test
fs
cli
push
jbe
cmpl
stos
and
inc
mov
rcl
sub
mov
push
push
cwtl
iret
flds
js
push
mov
aas
cli
mov
adc
pop
pop
and
cmp
js
and
mov
sarl
lods
enter
add
hlt
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
jmp
orl
push
cmpb
adc
cmc
dec
iret
mov
nop
sub
push
aad
mov
outsl
leave
or
or
xchg
jp
lods
inc
in
sub
dec
sbb
aad
jno
sub
or
xchg
in
cld
sahf
inc
mov
faddl
aas
jns
xor
cmpsb
ret
mov
fimuls
mov
lea
in
cmpb
shll
mov
cmp
cld
out
loopne
mov
dec
inc
lcall
mov
mov
push
sbb
xchg
pop
dec
je
dec
loope
mov
xchg
xor
rcrb
xor
xchg
mov
mov
mov
xchg
lret
cmp
jno
out
xor
add
sub
nopl
imul
push
and
faddl
out
into
mov
jg
pop
lock
cli
aas
cmp
cld
enter
test
xor
dec
outsl
cmp
mov
xchg
mov
jp
movsl
inc
jnp
or
rclb
mov
out
leave
push
test
lods
mov
ss
stos
xchg
pop
push
sbb
pop
xchg
jne
and
xor
in
cltd
movsl
popf
fists
mov
mov
xchg
in
push
mov
scas
inc
cmp
mov
sub
xor
pop
mov
enter
lahf
fildll
aad
inc
or
lret
scas
adc
pop
daa
pushf
xor
and
std
rclb
popf
and
flds
cmp
mov
test
ret
xchg
scas
xor
les
mov
mov
lcall
xchg
pop
ja
lods
out
add
lods
xor
jle
pop
xor
dec
rolb
fldcw
jmp
push
lea
arpl
xchg
in
xchg
push
or
loop
cmpsl
mov
sub
faddl
jg
xor
enter
insb
inc
lods
and
mov
mov
inc
lahf
push
pop
pushf
shrl
fisubrl
mov
orl
out
jmp
test
cmp
fcompl
lret
pushf
aas
mov
sarb
fldenv
fists
xchg
aaa
mov
pop
lods
mov
push
mov
mov
lock
lock
mov
push
add
ja
ja
or
mov
and
jns
lds
fneni(8087
clc
insb
js
out
gs
outsl
repz
mov
fidivrl
popa
mov
and
sub
fwait
sbb
pop
aaa
shlb
repnz
push
sbb
pop
fs
xchg
add
jns
dec
xchg
dec
mov
cmp
lea
add
in
mov
sub
fwait
mov
lea
movsb
xorb
pop
lcall
outsl
xchg
mov
dec
or
mov
fildll
ds
fstpl
fwait
mov
pop
cmpsl
fwait
ret
jge
push
mov
les
nop
mov
loopne
cli
xor
scas
or
stos
fwait
jne
scas
sbb
jne
push
and
inc
imul
clc
pop
movsb
mov
imul
fisttps
popw
pop
xlat
jmp
pop
dec
repnz
ds
aad
fwait
outsb
bound
or
sahf
add
pushf
cmp
hlt
pop
jge
scas
test
cmpsl
daa
push
inc
and
add
mov
cld
lahf
lcall
cli
jmp
test
jmp
jg
pop
add
lock
cmpsl
or
adc
pop
mov
leave
outsb
mov
sti
pop
test
cmp
cmp
lret
or
out
fcmovu
sub
mov
lods
push
inc
das
cmp
cmp
cli
repnz
pop
adc
test
out
mov
lock
sti
mov
mov
or
idiv
fdivrl
jp
int
aam
test
adc
jl
jns
pop
mov
mov
es
into
stos
xor
pop
cs
shrb
sub
jno
add
xchg
lret
pop
cmp
call
push
test
jnp
sub
cmpsl
jo
cmp
push
xchg
pop
loopne
mov
pushl
push
cmc
push
xlat
pop
jbe
jg
jp
sub
hlt
inc
mov
mov
xor
mov
inc
pop
stos
nopl
in
mov
mov
pop
mov
mov
mov
fists
cli
dec
int
adc
pop
inc
push
fisttps
cli
sbb
dec
int3
mov
bound
scas
mov
pusha
pop
cld
scas
decb
add
sbb
clc
push
jle
cmpl
stc
bound
jbe
mov
out
loopne
stc
mov
mov
and
or
imul
fs
inc
cld
mov
fnstsw
in
or
push
sti
gs
or
fisttpll
rcr
pop
mov
push
push
cli
popa
ficomps
loopne
dec
mov
fimuls
inc
dec
insb
sarl
clc
jecxz
pavgb
or
push
repz
and
hlt
cmp
call
sbb
mov
fmull
add
dec
ret
jnp
cwtl
pop
add
sbb
cmc
les
in
push
pop
int3
adc
das
sbb
mov
jg
jns
aas
js
mov
out
adc
mov
inc
fsts
test
mov
add
hlt
inc
cmp
pop
sub
aad
mov
sbb
sarb
lcall
pusha
sbb
lods
jnp
loopne
ljmp
into
ret
lcall
pop
inc
adc
outsb
scas
push
adc
cmp
add
js
adc
popf
mov
inc
ret
xchg
loop
lret
cs
push
pop
in
add
movsb
in
sub
or
or
rcl
sti
pop
inc
push
adc
jmp
xchg
repz
aas
push
sub
fsubrs
ss
adc
push
xor
in
into
xchg
arpl
lods
in
jo
pusha
xchg
ret
loop
outsl
sti
sahf
jae
dec
repnz
pop
push
enter
fcom
fsubs
inc
inc
sahf
jno
addr16
sub
xor
sub
es
stos
int3
fistps
in
pop
incl
xchg
cmp
fs
cmpsl
pop
and
cli
xor
ret
outsb
inc
lds
pusha
jnp
push
or
mov
xchg
mov
xchg
int
dec
sarl
add
shll
loop
xor
fisttpl
add
fistps
dec
or
popf
mov
inc
int
sub
adc
cmp
aad
sti
sti
or
or
imul
fnstsw
fsubrl
repnz
rcrb
or
fstpl
pop
int3
es
js
xlat
add
movsb
in
or
inc
pusha
inc
fwait
mov
xchg
clc
stos
jmp
sub
repz
dec
mov
out
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
jmp
mov
and
setns
dec
lcall
ja
sbb
mov
mov
dec
mov
fistps
out
pop
jnp
int
notb
jnp
add
xor
mov
iret
int
or
ss
mov
sbb
adcl
add
pop
sub
lods
sbb
jle
pop
jns
lret
xchg
cmpsb
add
scas
inc
aaa
scas
lock
mov
adc
sahf
imul
lret
popa
dec
mov
pushf
aaa
outsl
stos
repnz
push
jne
into
fiaddl
imul
mov
mov
nop
fmull
cmp
stc
xchg
loopne
inc
insb
xor
ljmp
mov
jecxz,pt
cmp
sti
mov
cmc
iret
shr
clc
fs
clc
fdivrl
clc
ret
push
push
out
add
and
mov
test
into
dec
test
ljmp
jg
pushf
clc
xorb
pop
mov
mov
out
add
enter
fidivs
xchg
push
jbe
or
ret
js
jle
cmp
sub
nop
dec
popf
jo
mov
icebp
movsb
cmpsl
aad
and
enter
pop
loop
mov
jno
adc
push
mov
sub
js
pop
into
les
mov
sub
stos
jns
sahf
pushf
add
jb
xchg
js
inc
inc
sub
int
call
loope
xor
jp
lea
ss
daa
and
inc
std
lahf
testl
add
xor
pop
out
xchg
xchg
and
inc
repnz
cltd
repz
ja
call
sti
icebp
gs
ret
enter
aaa
jle
adc
xor
std
test
js
sbb
fsubl
repz
inc
insb
fiadds
hlt
adc
enter
call
cs
jecxz
filds
mov
push
push
pop
or
and
das
pop
shrb
inc
cmp
popf
andl
aas
or
test
imul
aaa
mov
incl
jbe
add
daa
mov
cmpl
jne
sub
call
popf
cmp
push
filds
mov
sub
lret
jae
aam
jmp
insb
pop
mov
mov
ret
jb
mov
cli
repz
and
pop
loope
js
lods
fldenv
out
add
mov
jecxz
ss
cs
int3
xchg
std
push
fdivrp
scas
insb
ds
or
inc
xlat
pop
push
fisubrl
clc
pusha
divl
rcrl
dec
add
sub
test
lahf
enter
dec
clc
out
xor
push
in
aaa
add
ret
hlt
dec
iret
enter
xor
mov
or
repnz
pop
inc
jns
das
fstpt
sub
push
or
pop
rorl
sbb
dec
xchg
push
sbb
and
cli
icebp
ret
and
mov
add
push
scas
jb
aaa
sbb
mov
pop
ljmp
cmp
out
sub
mov
cmp
fsts
pop
lea
and
mov
cmpsl
cmp
cmp
adc
xor
cmpsl
or
dec
int
sbbl
sbb
push
in
xor
sbb
cmc
inc
inc
mov
cltd
jmp
inc
cld
jns
jp
cmpsb
arpl
cmp
adc
push
orl
push
mov
mov
sub
lods
inc
push
shl
mov
mov
arpl
inc
add
or
sahf
and
pop
aam
pop
call
dec
je
mov
jo
sti
jle
icebp
xor
lds
notb
push
add
dec
inc
loopne
fisttpll
jge
xchg
dec
rcrb
jmp
and
fwait
leave
stc
scas
fdivrp
das
pop
push
jge
subb
pop
cmp
or
incl
sbb
imul
insl
or
jo
inc
pop
sub
push
nop
scas
cmpsl
sbb
inc
test
jbe
fstpt
sbb
push
nop
ss
scas
popa
jb
or
sub
fiaddl
mov
outsl
ja
iret
dec
jge
hlt
les
pop
lret
dec
xlat
mov
gs
push
imul
mov
mov
inc
inc
push
mov
xor
adc
lahf
sub
dec
and
push
int3
cltd
stos
addr16
popf
call
out
mov
cmp
and
mov
push
test
popl
leave
es
call
cmp
jno
mov
push
lcall
arpl
xchg
in
mov
mov
inc
call
or
jg
pop
lods
into
push
xor
pop
pop
div
push
jmp
jmp
loope
fists
icebp
loopne
stc
ret
inc
dec
jns
adc
adc
std
movb
repz
pusha
xchg
pop
cltd
aam
xchg
dec
mov
in
rcll
mov
sub
and
into
pushl
sub
repnz
mov
sbb
dec
call
test
push
or
leave
mov
jmp
lds
xchg
dec
movsb
lds
cwtl
jecxz
lods
rolb
icebp
in
mov
sbb
mov
scas
inc
mov
or
adc
test
cmc
adc
and
dec
jnp
adc
sbb
or
cmp
ds
push
jle
xchg
loopne
xor
mov
or
jmp
xchg
sbb
mov
jbe
xchg
outsb
sbb
inc
fsubs
pop
xor
mov
or
jle
jge
lods
xchg
sbb
stc
ret
cmp
xor
fwait
dec
fcmovu
in
pop
je
adc
push
jl
add
and
and
dec
jo
mov
xchg
mov
xorb
adc
cmpsl
pop
jb
sbb
xchg
sub
sahf
bound
test
xchg
cmp
ficompl
lds
sahf
pop
int
jb
loopne
xchg
fstpt
sub
add
scas
cmp
and
push
fwait
adc
adc
or
pxor
ljmp
xchg
jb
shlb
test
pop
cmovns
jne
sbb
arpl
push
cmpsb
sti
jae
pop
insb
loopne
push
frstor
cmc
outsb
shlb
in
cmp
mov
mov
cmpb
out
vcomisd
stc
inc
mov
std
mov
xchg
lcall
cmc
test
call
add
mov
fs
dec
inc
mov
movsb
sub
mov
pushf
pop
lcall
push
mov
add
mov
xchg
mov
jbe
cs
xchg
inc
dec
icebp
test
dec
pop
test
cmp
lahf
pop
pop
shlb
inc
cmp
out
std
xchg
andl
push
mov
out
adc
loopne
mov
xchg
lods
push
imul
fcompl
rcl
adc
push
lret
mov
pusha
cmp
aam
lret
ret
leave
lds
daa
mov
addr16
mov
cmpsb
jp
adcb
jl
push
fiadds
sbb
aam
push
movsb
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
jmp
ret
fwait
mov
and
int3
rcll
xchg
orl
add
mov
stc
mov
in
mov
pop
ja
push
mov
test
or
mov
loopne
pusha
repnz
inc
fwait
push
inc
shll
jmp
jbe
test
fidivs
enter
lahf
xor
stos
stos
mov
adc
test
int
aaa
adc
jp
add
popf
sub
loopne
lods
push
xchg
push
cmc
xor
jmp
bnd
sub
and
dec
adc
inc
lcall
jl
sarb
mov
push
dec
xor
and
mov
push
mov
dec
divl
mov
xchg
lea
into
enter
jb
pop
mov
outsb
ds
push
xchg
mov
xor
jmp
push
and
xchg
popf
sub
jns
shll
inc
sbbb
add
test
mov
sub
in
mov
sbb
xchg
cmp
inc
jecxz
daa
mov
adc
push
xchg
in
sub
xor
adc
add
test
xor
or
mov
enter
das
out
in
jmp
jno
cmc
add
into
dec
xchg
cmc
outsb
xor
xor
sub
bound
and
mov
fs
mov
mov
inc
inc
adcl
lods
nop
sbb
addr16
in
cltd
add
fstl
inc
cmp
jno
pop
mov
pop
fstpt
call
xlat
insb
add
movb
mov
xor
aas
jl
cwtl
inc
cltd
loop
push
sti
xor
sbb
pop
or
jo
mov
mov
fwait
shrb
aas
mov
ret
jb
push
pop
pop
out
mov
aad
sbb
inc
aaa
shrb
shlb
mov
shl
enter
ljmp
aaa
scas
popf
into
sahf
andl
jb
out
mov
into
mov
arpl
dec
mov
jl
cmp
mov
mov
dec
jmp
or
mulb
push
pop
fstpt
mov
adc
xchg
mov
push
test
mov
push
xchg
pop
js
push
sub
fstps
xor
push
cmc
imul
mov
mov
inc
in
nop
ret
sub
add
pop
adcl
insl
or
add
xchg
mov
xchg
test
test
pusha
add
fwait
xchg
das
fists
xor
out
dec
adc
sub
loop
cmp
push
sbb
clc
std
inc
int
cmpsb
movsl
test
loop
inc
inc
fnsave
stc
fildll
cmpsl
clc
lret
movsl
xor
cmp
in
mov
je
xchg
mov
dec
adc
cltd
inc
lret
or
and
dec
push
xchg
scas
cmp
loope
push
jnp
int
outsb
mov
pop
mov
in
enter
cmp
gs
mov
hlt
fs
pop
sub
insl
ret
or
adc
jne
clc
inc
jo
cmc
pushf
imul
rcrl
mov
stos
sti
jb
or
in
fs
push
jae
outsl
enter
shl
lcall
dec
idivb
or
shlb
lret
xchg
sbb
fldenv
sub
pop
clc
ret
pop
jle
je
pop
scas
leave
rolb
jae
jl
jnp
dec
mov
pushf
xor
push
sbb
nop
pop
push
or
test
clc
gs
pop
sbb
mov
push
lds
cmp
fsubr
sbb
xchg
inc
push
data16
setns
jge
enter
mov
outsb
scas
shl
out
or
jecxz
lret
outsb
repz
xor
mov
push
ret
gs
sub
and
dec
xor
and
push
mov
ret
jnp
dec
inc
fists
sub
mov
stos
cmc
mov
fdivs
xchg
fdivl
push
popf
std
sahf
push
push
int3
data16
xor
or
xor
sub
cmp
pushf
add
popa
or
and
cmp
pop
lea
lods
rolb
mov
inc
jo
mov
or
nop
stos
dec
lret
dec
and
pushf
fidivl
adc
xor
sbb
stos
rorl
jae
dec
enter
imul
loope
in
fcompl
insb
jno
adc
or
test
cmp
dec
pop
xchg
std
jne
mov
jecxz
jae
mov
xor
push
xor
jb
mov
in
loop
mov
loopne
push
inc
test
adc
push
jle
cmpsb
call
inc
test
jne
xor
mov
sub
inc
or
aam
clc
xchg
in
ret
pop
mov
clc
or
add
lahf
pop
or
and
push
out
outsb
cld
out
cmpsb
in
push
xor
aad
test
sahf
icebp
loopne
or
lret
repz
loop
fcomp
aas
sub
sub
int
pop
add
push
mov
pop
jmp
add
lcall
bnd
and
icebp
lret
outsl
sub
ret
icebp
add
scas
mov
insl
xor
std
add
mov
jle
jmp
inc
xor
cli
dec
out
fldln2
inc
xlat
sbb
xor
pop
lret
ret
push
push
fsubrl
push
xchg
inc
iret
inc
fadds
inc
push
pop
cld
nop
dec
lods
popa
ret
rol
pop
jl
or
dec
jle
add
xchg
pop
cmovbe
mov
dec
ret
push
sbb
push
bound
fidivrs
or
push
xchg
and
and
aas
cmp
test
dec
clc
mov
or
push
push
dec
jecxz
gs
cmp
ret
loopne
es
dec
jae
scas
cld
or
cmp
fwait
dec
pop
in
call
aas
add
outsl
mov
xlat
add
mov
inc
add
add
jo
mov
sub
fildll
jo
lahf
cli
cmp
mov
cmpsb
call
mov
js
push
pop
roll
xlat
stc
nop
and
sti
jne
lea
mov
push
frstor
mov
pop
jg
mov
xchg
mov
mov
insl
lahf
push
loop
rorl
iret
jb
sbb
mov
cmp
pop
push
insl
pop
dec
les
xorb
xchg
mulb
pusha
stos
fisttps
or
add
xor
adc
push
repz
leave
push
xchg
rcrl
sbb
push
dec
inc
inc
push
jg
xlat
lahf
or
pop
sbb
psubw
int3
mov
sub
outsl
cli
cmp
mov
daa
xor
stos
add
ds
cmpsb
or
repnz
cmp
mov
pop
sti
subl
mov
mov
jmp
aam
inc
test
addr16
add
sahf
mulb
xchg
ja
jl
xchg
loop
and
cmpsl
pop
mov
pop
cmpsl
fwait
pushf
daa
adc
mov
test
hlt
into
repnz
lret
inc
cmp
push
cld
cmp
negb
imul
call
lret
sahf
jge
int3
xor
mov
dec
pop
setl
mov
cmp
bound
fnstenv
jmp
shl
scas
fwait
sti
jae
add
out
insl
inc
add
pop
inc
sub
inc
or
fucomip
inc
shll
fists
mov
lea
sub
sbb
popa
lcall
dec
mov
stos
pop
jle
in
mov
repz
nop
dec
movsl
and
sarl
in
push
mov
fs
add
mov
mov
inc
jb
or
cs
xchg
add
cmp
pop
clc
push
callw
mov
cmp
push
sub
sbb
add
dec
out
leave
dec
js
dec
lea
jmp
pop
jmp
stos
stos
roll
adc
push
inc
adc
and
adc
cli
lods
movsl
movsb
xchg
pop
icebp
sub
and
out
xchg
outsb
test
aam
idivl
pop
gs
adc
das
lret
jno
xor
fs
out
mov
xchg
adc
aam
jo
scas
add
sub
insl
fildl
jmp
je
sbb
nop
stc
shll
push
shrb
pop
cmpsl
cmp
push
fs
jge
push
push
adc
mov
sbb
test
fisubs
shll
cmp
fwait
mov
dec
mov
stc
adc
stos
pop
xor
sub
jae
imul
xor
xor
mov
mov
je
mov
out
mov
subb
inc
or
pusha
dec
adc
xor
sbbl
add
in
insb
push
orl
xor
xchg
test
pushl
mov
je
xor
outsb
jno
test
inc
ds
adc
call
pop
dec
lahf
mov
jg
nop
mov
push
hlt
aas
push
test
dec
push
push
mov
push
pop
push
jbe
jno
adc
sbb
push
fucomip
mov
jmp
das
push
clc
sbb
jno
sahf
mov
mov
or
cs
sub
inc
mov
es
lds
pop
or
test
inc
lret
ds
lea
insb
inc
out
and
je
pop
lret
add
pushf
xchg
outsl
mov
push
mov
push
mov
adc
lcall
fwait
iret
xor
imul
push
push
xchg
inc
outsb
push
push
jno
push
pushf
cmpsl
pop
lods
subl
cltd
cltd
xchg
jo
gs
mov
add
outsl
outsb
lcall
arpl
add
jbe
or
in
mov
cwtl
mov
frstor
add
imul
push
hlt
mov
mov
mov
cwtl
or
dec
push
out
push
sub
or
ficoms
rcrb
shlb
sub
test
out
aaa
cmp
aad
inc
outsl
lds
adc
jbe
ss
pop
cmpsl
ss
cld
or
push
pop
mov
mov
cwtl
clc
mov
xor
pop
add
fucomi
lods
cmpb
test
fdivs
in
imul
push
pop
pop
pop
cmp
mulps
jns
xchg
xchg
push
dec
lods
jle
dec
ret
xchg
xchg
and
xchg
jge
xchg
xchg
sarb
outsl
mov
inc
nop
fcomp
cmp
stos
jl
cli
sub
in
lods
add
frstor
pop
or
xchg
cmc
xchg
inc
adc
xchg
mov
push
js
aaa
inc
loopne
push
xchg
pop
popa
push
pop
lcall
jne
ja
push
cmp
adc
mov
mov
mov
jp
xchg
aas
dec
mov
aaa
fwait
addr16
loopne
and
sbb
dec
ljmp
test
pop
int3
inc
sub
out
or
inc
mov
pop
dec
adc
leave
mov
jp
lahf
and
or
ffree
shrb
inc
loop
adcl
xlat
adc
dec
mov
outsb
and
clc
push
popa
xlat
xor
es
inc
ljmp
aaa
mov
nop
jg
leave
cmpsl
lds
daa
enter
xchg
movl
outsl
mov
lret
outsl
stos
fldt
lahf
mov
and
fs
in
test
or
lods
and
fs
jne
mov
add
pop
fld
jae
lock
mov
leave
jbe
adc
dec
sub
or
aad
cmp
rcll
jmp
into
mov
sub
cmp
mov
sbb
fiadds
mov
mov
mov
aaa
push
mov
adc
ret
test
int
jecxz
inc
xorb
decl
scas
mov
adc
xchg
into
rcr
inc
loope
cmpsb
fmull
pushl
cmp
dec
inc
repz
jb
lods
mov
xchg
pop
sbb
or
xchg
or
shll
int
cmpsl
popf
outsl
jns
cs
test
popa
in
dec
call
adc
jne
xchg
lds
sbb
pop
fstps
mov
in
mov
jle
sbb
cli
mov
fs
jns
clc
xchg
inc
jmp
xor
ljmp
sub
hlt
mov
sarl
cli
lods
stos
test
addl
dec
xor
mov
jmp
mulb
sbb
sub
fcoms
sbb
testl
or
sub
int
xor
add
xchg
stc
cld
fimuls
insb
adc
or
or
mov
add
int
pop
iret
scas
and
mov
lea
xor
imul
aaa
fcomps
mov
mov
lret
leave
cmpsl
fldl
arpl
mov
mov
sub
pop
sbb
roll
mov
dec
int3
xor
xor
aas
mov
cltd
stos
jbe
cltd
das
incl
lods
inc
fldt
cmpsl
aaa
hlt
push
and
stos
pop
cmp
clc
test
scas
lret
ss
cmpsl
arpl
insb
ss
sub
xor
add
xor
int
lcall
insb
scas
push
jp
xchg
adc
dec
jecxz
adc
nop
mov
lcall
xchg
or
movsb
push
mov
call
jns
adc
mov
std
mov
icebp
in
adc
xlat
call
add
xchg
cmp
pop
pop
movsb
mov
subb
lods
mov
lret
jne
inc
push
aaa
pop
test
cmp
shrl
add
mov
in
jle
xor
jae
or
push
mov
test
adc
pop
je
pushf
test
pop
out
and
insb
xchg
movsl
cmp
cld
mov
sbb
xchg
outsl
mov
loope
lret
push
insb
stos
cmp
xor
out
fimull
mov
push
sbb
or
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
jmp
adc
cmp
ret
aam
mov
rclb
lock
ja
pop
mov
aaa
sbb
out
or
cltd
jns
mov
lcall
jg
das
or
inc
mov
pop
popf
add
or
mov
xchg
xchg
sbb
adc
out
and
rcrb
and
cltd
and
push
mov
or
iret
lock
pop
sbb
ficomps
cltd
ja
add
mov
cmp
cmp
jecxz
outsb
inc
mov
cmovae
lock
mov
xor
lock
aas
lcall
mov
cltd
fistps
shrb
out
cmp
jae
pop
pop
xor
inc
and
push
pop
mov
sub
je
ja
out
loope
insl
lds
cmpsb
dec
pop
and
fs
dec
push
repz
add
sahf
inc
xor
push
out
insl
lock
imul
insb
and
jb
lret
mov
pop
icebp
ret
shrb
mov
pop
iret
and
inc
orl
inc
int
rcrl
out
js
jg
cmc
js
andb
push
incb
mov
pop
or
nop
jb
mov
rclb
and
dec
mov
int
test
pop
les
add
call
imul
inc
xor
addb
mov
pop
xchg
jnp
loop
insb
shrb
push
aas
or
sub
mov
inc
and
orl
cmp
jg
ds
cwtl
push
xchg
jne
subb
adc
push
xchg
mov
mov
or
or
jge
addl
jno
loope
jg
movsl
mov
cmp
lock
data16
outsb
dec
mov
add
leave
jl
adc
mov
mov
sbb
out
xor
ss
dec
leave
xchg
out
fst
sub
push
mov
adc
ret
arpl
fidivrs
jnp
icebp
push
bound
or
or
xchg
xor
sahf
inc
fists
scas
inc
or
jnp
inc
mov
pushf
push
xchg
bound
mov
cmp
mov
scas
xchg
mov
or
cltd
nop
xchg
dec
ja
and
jl
insb
inc
pop
mov
sbb
mov
testb
xor
add
mov
cmp
adc
out
jbe
pop
xchg
mov
loop
rolb
gs
icebp
jp
sub
aad
adc
add
fwait
pop
jo
pop
sub
adc
test
sub
clc
pop
loopne
sbbb
leave
daa
cmpsl
movsb
pop
pop
enter
cmp
dec
mov
or
mov
jae
sbb
mov
repz
pop
push
push
mov
sahf
add
push
loope
loopne
push
xchg
movsb
lock
mov
add
and
fst
sbb
addr16
mov
sbb
data16
add
ljmp
in
jbe
mov
iret
pusha
iret
fst
inc
push
loope
pushf
sti
fcmovb
mov
jne
shlb
pop
lahf
aam
cmp
int
and
dec
out
mov
sub
imul
ror
xor
stos
mov
cmp
mov
pop
sysret
lahf
insl
repnz
sub
aam
xchg
mov
mov
cmp
pop
adc
lcall
fistps
pop
mov
mov
mov
mov
cmpl
ss
por
je
in
or
cmpb
outsb
fisttpl
pop
je
add
incl
out
lock
in
test
test
imul
lods
mov
adc
repnz
loope
loope
inc
stos
int3
popf
cld
repz
pop
test
inc
js
mov
push
pop
adc
mov
mov
push
mov
mov
jne
jp
adc
push
mov
outsb
js
fdivrs
cmp
into
xor
nop
push
xchg
fadds
stos
sub
add
leave
adc
xor
push
xchg
loop
ret
inc
inc
jge
xor
mov
jp
hlt
in
jmp
inc
in
xor
cmp
insb
push
xor
add
push
ljmp
les
dec
sbb
sub
lcall
jmp
mov
cmp
pop
mov
mov
sti
jns
jp
sbb
insl
dec
sbb
xlat
lcall
movsl
movb
dec
gs
sbb
jno
add
xchg
xor
mov
repz
xlat
outsl
pop
daa
shl
sub
pop
xor
jbe
sbb
dec
mov
sub
jno
outsb
jmp
fs
out
cmp
aad
sarl
sbb
shlb
insl
push
xchg
push
mov
fnstcw
stc
clc
mov
pusha
arpl
or
out
add
cmp
xor
xor
adc
gs
sbbb
sub
stos
pop
pop
mov
jbe
jb
das
enter
ret
cmc
and
dec
mov
loope
or
mov
jno
test
dec
jg,pn
sbb
jp
ret
cmp
jg
sbb
adc
pop
fisttpl
or
inc
mov
fisubrl
fdivl
out
in
jl
daa
and
cmp
pop
push
mov
xchg
arpl
repz
ret
outsl
dec
and
lea
loope
inc
add
and
or
inc
lods
jg
push
jb
pop
pop
push
nop
ds
sub
pop
loope
orb
cltd
xchg
adc
call
icebp
sbb
xorl
push
testl
push
fucomi
aam
xchg
mov
pop
jecxz
dec
inc
ja
fwait
sbb
sbbl
insl
xor
movsl
repz
js
pop
stos
out
pop
inc
lahf
cmp
test
mov
xor
sub
lret
push
into
aas
nop
int3
cmp
mov
jp
ljmp
and
cmp
mov
aad
cmp
push
mov
lds
es
fistps
sahf
bound
cmpsl
ret
shl
cs
adc
dec
aam
lea
mov
out
add
lock
xlat
sbbl
ljmp
jge
aad
inc
fwait
in
pop
mov
pusha
mov
sbb
push
pop
adc
mov
xchg
imul
cmp
shrl
into
pop
jo
jo
inc
daa
fstpl
aam
imulb
in
adc
mov
adc
dec
pop
cmc
iret
xor
mov
out
sbb
jbe,pn
adc
fpatan
iret
fcmovnu
cmpsb
mov
cwtl
mov
pop
inc
xor
push
mov
stos
ljmp
xchg
sahf
cmp
add
or
pop
std
inc
add
sarl
mov
adc
mov
sub
add
jmp
enter
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
jmp
sbb
and
shr
adcb
movhps
cmpsl
les
cmp
loopne
adc
pushf
nop
lahf
fildl
int3
stos
insl
fldt
daa
pop
in
cmp
pop
push
mov
and
inc
dec
insb
cld
mov
push
xchg
jno
pushf
or
dec
iret
mov
mov
in
mov
data16
jo
mov
sarl
rol
int
in
inc
data16
movsl
cwtl
push
std
aas
lret
shlb
fwait
scas
pop
or
inc
inc
int3
leave
sbb
lret
shll
lods
insl
mov
inc
test
mov
add
inc
loop
ret
mov
mov
fnstenv
outsl
dec
sbb
subb
imul
popa
shl
gs
ret
or
or
mov
sbb
and
lret
sub
lods
negb
int3
mov
test
cmpsl
jae
rorb
pusha
popa
jbe
pop
lods
nop
cld
cmc
popa
fidivrl
movsb
or
jge
jge
dec
mov
mov
popf
shrd
stos
outsl
in
sti
xchg
sbb
aas
scas
mov
xor
mov
out
imul
pop
nop
fldenv
in
mov
xchg
into
sbb
repnz
fs
cmp
adc
data16
iret
jmp
and
lods
sbb
sahf
loope
incb
pop
mov
sub
mov
cmc
outsl
dec
sub
mov
lret
sbb
xchg
scas
popf
out
fsubrl
mov
into
fistpl
cmpsl
inc
je
add
mov
fs
fwait
push
ds
cs
mov
add
nop
inc
imul
push
sahf
sbbb
pop
jae
ret
push
ret
cs
lret
fcomi
cmc
xor
cmpsl
push
push
jmp
leave
pop
add
int3
mov
add
stos
out
test
add
jle
push
mov
loopne
push
jno
cld
jnp
jg
mov
and
mov
inc
loopne
xchg
push
sahf
mov
push
arpl
pop
sub
mov
pop
inc
mov
ret
hlt
xor
loope
int
mov
inc
idiv
add
lods
imul
bound
cltd
push
sub
or
into
xor
add
in
jns
cmpsl
or
push
shrl
iret
cs
pop
loopne
clc
ficomps
mov
leave
cmp
push
xchg
mov
in
xor
cmc
and
mov
cli
ss
enter
sbb
add
cmp
push
or
add
mov
lret
xor
test
daa
or
cmpsl
xor
insl
negl
mov
lock
dec
add
mov
into
rcrl
movsb
inc
xor
gs
movsl
xchg
mov
and
add
std
lds
jecxz
sub
shrl
sbb
call
xor
jl
inc
push
add
and
mov
cmp
fisttpll
and
add
nop
jl
cmp
xor
addb
sub
std
adc
fpatan
xchg
int3
shll
cltd
clc
xor
pop
and
xor
pop
mov
jg
sbb
les
popa
jle
dec
sub
xchg
mov
push
and
in
mov
mov
add
stc
ds
pusha
rcll
arpl
mov
jae
sbb
subb
add
in
cs
dec
lea
xor
mov
push
sbb
cmp
lds
pop
out
pop
cmp
ljmp
jnp
push
scas
dec
xchg
adc
sub
lds
add
lahf
adc
jno
enter
sbb
add
andl
loop
sub
lret
jle,pt
xchg
out
sbb
ficoml
xor
jmp
cwtl
lods
movsb
bound
dec
stc
mov
clc
xchg
mov
sub
cmc
mov
cli
pop
cmp
outsl
mov
push
xlat
sub
fidivrs
push
fisubrs
push
test
fmulp
xlat
pop
and
pop
popa
mov
jne
xlat
xor
insl
cmc
cld
aad
sbb
pushl
out
ret
xor
faddl
cs
mov
sti
das
xchg
mov
lea
popf
adc
int3
addr16
cmc
xlat
push
cs
xchg
sti
dec
inc
lret
sub
inc
sahf
scas
inc
lods
pop
into
out
test
pop
sarb
call
in
pop
adc
and
outsl
dec
xor
mov
test
std
addl
bound
and
roll
jl
lcall
jmp
jne
into
add
xchg
pop
shll
and
sbb
cltd
test
sbb
mov
std
push
lcall
fsubrp
std
fldl
or
dec
mov
jno
or
in
inc
mov
mov
sahf
push
pop
stos
movsl
pop
jge
sub
sub
mov
lcall
xchg
mov
jg
pop
inc
shrl
je
lds
push
adcb
andb
mov
dec
cmp
cs
arpl
mov
popf
pusha
jnp
xchg
jnp
rcr
inc
enter
cmp
or
int3
push
adc
and
js
cmc
push
dec
xchg
mov
nop
scas
dec
lock
cmc
xchg
push
lahf
in
mov
lcall
scas
dec
cmc
test
test
cmpsl
push
int
mov
mov
pop
cmp
std
push
mov
std
push
push
test
loopne
mov
lock
es
mov
mov
cmp
shrb
ret
xchg
xor
add
and
xlat
iret
imul
jp
out
dec
sub
cmp
fnstsw
jo
inc
pushf
arpl
out
aad
cmp
out
sub
mov
jnp
inc
mov
inc
mov
insb
push
jmp
pmulhw
adc
int3
or
push
test
adc
and
inc
addb
je
push
hlt
and
fsubs
cld
push
movsl
mov
in
idivb
lret
add
push
mov
and
push
aaa
lods
xchg
test
and
inc
push
ret
sub
hlt
xchg
das
xchg
cwtl
test
xchg
xchg
adc
pop
jns
push
cmp
mov
fnstsw
fcompl
fs
orb
out
in
inc
loopne
fisubs
icebp
jle
jmp
xchg
pop
mov
in
cmc
adc
mov
jg
fstps
jecxz
pop
aam
push
iret
outsl
inc
mov
cmp
loop
int
test
push
inc
pop
je
cmp
stc
xor
push
cmp
add
lods
jno
clc
data16
in
pop
aas
cmc
sbb
inc
ret
jno
sub
add
lahf
fucom
dec
das
hlt
mov
call
or
jp
adc
dec
xor
lea
or
and
addl
xchg
movsl
ljmp
push
add
shlb
rol
push
xor
mov
mov
mov
jmp
sti
test
sbbl
out
inc
pop
xchg
aas
ja
out
pusha
mov
fwait
std
sbb
cmc
loop
inc
and
mov
cmp
jb
add
aad
gs
inc
test
sub
or
lea
int
or
das
jl
push
int
lock
in
lret
xchg
loopne
enter
shl
xchg
fs
xor
sub
js
insl
imull
ja
xchg
mov
jg
ds
sub
xchg
popf
xchg
mov
push
rol
or
stc
lods
mov
jne
xor
inc
cmp
insb
push
or
out
mov
mov
imul
xchg
gs
dec
or
pusha
shlb
push
lods
imul
adc
mov
addr16
lods
loopne
dec
fisttpl
fstpl
sbb
pop
addr16
aaa
lahf
sbb
pop
sbb
inc
inc
arpl
push
inc
cmp
filds
movsb
jp
mov
aaa
repnz
out
xor
dec
pop
scas
ja
xchg
fildll
pop
cmp
das
mov
into
pop
xchg
add
repnz
cmc
mov
jl
divb
sbb
sub
outsb
sub
into
jge
pmaxsw
inc
loopne
mov
xchg
cwtl
addr16
addr16
cltd
push
mov
xchg
enter
rorl
lods
mov
pop
dec
insl
adc
addl
sbb
movsb
mov
jnp
cmp
out
negl
cmp
inc
mov
jns
adc
add
out
flds
mov
or
lods
sbb
sti
cli
or
mov
xchg
jmp
jnp
mov
adc
in
divl
mov
nop
addb
mov
adc
into
jns
push
pop
add
dec
or
sahf
pop
or
lret
push
jge,pn
inc
aas
fsubs
nop
xchg
dec
jb
sbb
sti
scas
fistpll
inc
sub
repz
mov
sub
dec
stos
dec
pop
push
mov
xchg
js
aas
inc
call
rorl
mov
jno
leave
inc
jne
ret
fsubrs
push
mov
jg
mov
sbb
pusha
test
mov
mov
sbb
xchg
fistl
mov
or
cmp
test
push
cmpsl
cmp
and
test
inc
mov
jge
jne
ss
iret
mov
stos
adc
mov
int
pop
loope
das
sahf
dec
sub
outsl
fisubl
shlb
mov
push
shr
and
jle
mov
add
lret
enter
movsb
pop
or
cmp
or
inc
cld
mov
push
and
cmc
xor
movsl
hlt
xor
fsubr
xlat
jbe
cmp
test
push
add
xchg
shl
daa
out
jmp
into
insb
cld
sti
push
mov
cmp
rolb
fadds
sub
and
xor
cmp
add
or
mov
insl
push
cli
imul
sub
push
pusha
lahf
in
sbb
jo
lcall
cs
shll
inc
nop
outsl
enter
mov
sbb
jecxz
mulb
cmp
xchg
jmp
aaa
lds
movsb
cld
sbb
fs
sbb
and
mov
pop
out
jle
std
mov
xchg
sbb
js
test
leave
lret
adc
gs
ret
dec
scas
pop
mov
les
cmp
cmpsb
icebp
imul
mov
sbb
loope
mov
cmp
das
iret
and
popl
sub
repz
sbb
xor
adc
mov
and
adc
sub
xchg
pop
hlt
nop
jl
mov
scas
fisttpll
fmuls
inc
pop
out
mov
push
dec
jge
push
fsubp
stos
lcall
cmp
dec
and
out
clc
dec
adc
cmp
xchg
sub
cmp
jno
dec
shlb
adc
dec
test
cmp
iret
pop
call
push
and
test
aad
cwtl
inc
mov
xchg
jg
mov
insb
sbb
xchg
icebp
iret
rcr
dec
lock
push
adc
insl
dec
mov
jne
push
or
adc
jae
push
std
lcall
push
pop
lea
dec
cld
ret
mov
lret
mov
leave
imul
sub
addr16
inc
adc
pop
fs
add
movsb
scas
rcl
insl
cvtps2pd
mov
sub
clc
movsl
push
xlat
insl
mov
addl
popf
dec
inc
mov
outsl
xor
ret
pusha
xor
dec
push
and
dec
rcl
ljmp
adc
sbb
jno
jno
mov
popa
aad
ljmp
vmovaps
jmp
cmpsb
out
sbb
mov
push
push
adc
add
and
mov
pop
stos
adc
xchg
ds
inc
cmp
fidivrl
sbb
loopne
sub
xchg
mov
mov
mov
jno
pop
mov
test
sahf
fbld
push
xor
and
gs
ja
mov
mov
inc
test
stc
inc
mov
aas
push
xor
insb
or
jecxz
dec
jle
ret
ljmp
out
insl
xor
jnp
inc
arpl
cmp
cwtl
cmc
out
cmp
loope
lods
popf
cli
rcrb
cltd
sub
xchg
xchg
xor
sbb
das
cwtl
dec
mov
sbb
popa
mov
dec
inc
pop
and
xchg
subl
insb
inc
leave
xlat
ja
imul
push
decb
inc
outsl
xor
inc
or
enter
mov
ret
or
pop
jle
cmp
sub
aaa
enter
add
jmp
imull
cli
or
fldcw
mov
add
pusha
pop
pop
imul
jmp
cmp
sub
ret
out
lock
dec
ret
mov
mov
adc
mov
gs
cwtl
mov
push
das
dec
orb
test
sub
push
pop
enter
js
mov
lret
std
lods
loop
orl
add
cmp
add
jo
pop
inc
dec
adc
sub
out
stos
lods
jbe
xchg
repz
in
add
out
movsb
ja
repz
dec
mov
fdivrs
addr16
xchg
scas
adc
mov
les
and
rorl
add
test
icebp
jp
fnsetpm(287
nop
pop
push
pop
repz
or
jo
xor
or
xor
jge
add
and
rclb
fldt
jo
fmull
push
sub
mov
pop
and
fsubrl
aad
push
popf
rorl
xchg
mov
test
ljmp
inc
nop
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
jmp
nop
loope
pop
dec
gs
int
xlat
sub
cmp
ja
ja
sbb
pusha
mov
out
mov
mov
fnsave
sub
les
aas
push
addps
sub
fdivs
movsb
and
sbb
in
dec
mov
cli
aad
pop
sub
repz
push
jp
xchg
xor
add
mov
fidivl
aaa
incb
or
pop
cmpb
mov
push
std
clc
pop
imul
das
call
pop
inc
inc
fdivl
icebp
std
mov
pop
xchg
das
push
jae
mov
jg
add
bound
ss
jno
sbb
dec
scas
and
cmp
dec
std
pop
in
fbld
insl
cld
roll
mov
xchg
or
fldenv
push
popa
cwtl
mov
mov
mov
movsb
mov
push
mov
fs
aad
xlat
push
and
xchg
pop
xchg
xor
lret
pop
pop
insb
pusha
push
sub
cmp
enter
aam
mov
rcr
add
cmp
and
icebp
push
sub
inc
stos
inc
inc
xchg
xchg
insb
jp
test
mov
outsw
mov
mov
inc
or
loopne
xchg
jo
es
sbb
in
add
mov
cmpsb
push
dec
in
and
push
sub
ficomps
push
out
jl
pusha
mov
mov
and
insb
ficompl
jmp
mov
sar
mov
scas
cld
pop
pop
fwait
repz
or
movsb
insb
aaa
jp
movsl
xchg
in
sti
sbb
test
pop
decb
sub
or
fsts
mov
lea
mov
or
inc
js
push
sub
pushf
sbb
data16
pop
stos
ljmp
pop
pop
test
test
cli
mov
push
cli
dec
inc
imul
sbb
stos
add
mov
mov
fisttpl
pop
stos
cmpsb
mov
xchg
cmp
xchg
call
in
nop
cmp
push
xchg
push
adc
mov
mov
iret
sbb
aas
popf
jb
or
mov
jmp
pusha
imul
xor
jb
loopne
cmp
out
psubw
xchg
or
pop
or
pop
xchg
sub
push
call
pop
jno
gs
mov
js
scas
out
fistl
pop
sbb
es
int3
pop
dec
das
add
add
jns
mov
lds
scas
xchg
fwait
xor
mov
mov
jne
pop
cmpb
mov
loop
fcomps
sbb
push
jl
movsl
adc
rcl
cmp
test
push
pop
mov
mov
movsb
inc
aaa
adc
arpl
and
lret
andb
add
adc
mov
sarl
in
pop
xor
adc
lods
psubusb
popa
cmp
push
icebp
pop
enter
add
xchg
hlt
mov
add
xor
mov
mov
fldcw
orl
jbe
lret
aam
inc
sarl
repz
int
popa
push
shll
in
pop
inc
push
and
stos
jnp
inc
fldl
jg
aam
push
xchg
test
dec
jecxz
ss
popa
mov
mov
out
insl
push
aam
and
sti
add
xchg
mov
out
fists
inc
int
insb
sub
popf
and
adc
loope
pop
in
sti
jg
dec
repnz
jnp
pop
adc
push
inc
and
jp
pop
xchg
xchg
shl
adc
push
jns
aas
xor
inc
faddl
jle,pt
mov
mov
test
dec
pop
pop
test
xor
push
xchg
inc
or
iret
pop
outsl
add
jge
add
inc
xchg
mov
sub
cltd
sbb
fcompl
jnp
mov
lds
dec
pusha
in
pushf
cld
pop
push
in
dec
mov
sub
out
test
cmp
pop
inc
or
jl
int3
arpl
addb
outsb
movsb
mov
mov
xchg
dec
or
fidivl
cwtl
sbb
jecxz
or
dec
imulb
sub
rcr
or
mov
jmp
je
mov
fldl
stos
mov
mov
pop
stc
dec
xlat
bound
rolb
dec
cmp
hlt
push
push
cli
enter
mov
test
cmp
stc
pop
jmp
mov
shll
fiadds
mov
das
add
xor
lods
imulb
pcmpgtd
sahf
inc
int
lea
pusha
movsb
jge
push
mov
jae
and
cld
rcl
fnstsw
arpl
shrl
mov
fnsave
cltd
mov
les
cmc
mov
and
lret
mov
icebp
xchg
jle
pusha
jbe
sahf
adc
arpl
movsb
push
cmp
jmp
addl
pop
aad
lret
enter
jno
rclb
gs
fcompl
movsb
inc
repz
lcall
and
mov
and
jne
insb
ret
shl
xor
or
iret
enter
mov
mov
dec
fdivl
je
jb
mov
test
insl
xlat
bound
setp
dec
sub
cmpb
or
insb
repz
js
mov
inc
push
mov
push
dec
jns
inc
leave
xchg
sub
fldcw
and
mov
mov
dec
bound
jmp
mov
inc
into
es
mov
pop
out
cld
mov
dec
xchg
or
stc
mov
or
popf
ss
sbb
int
hlt
adc
dec
mov
and
mov
fs
inc
and
cmp
out
push
inc
push
bound
inc
das
cmp
dec
push
repz
ficomps
leave
fadds
jbe
sbb
or
xor
cs
sub
sub
int
push
stos
pop
mov
inc
enter
pop
dec
leave
mov
xchg
mov
in
pop
mov
pop
xchg
mov
aaa
adc
out
mov
imul
aas
sar
sbb
cwtl
push
xchg
rolb
xor
out
repnz
mov
jle
sbb
pop
and
dec
xchg
and
popa
sahf
push
fistl
xor
lods
jbe
das
and
lahf
add
sbb
inc
std
das
or
mov
mov
mov
xchg
and
insl
aad
and
adc
sti
pop
orl
test
cltd
mov
xor
pop
or
push
enter
mov
fidivrl
mov
ret
sbb
push
push
dec
mov
fsubrl
mov
sbb
jmp
and
mov
add
orl
adc
ss
pop
inc
mov
pop
mov
sub
sahf
popf
inc
mov
bound
ret
jbe
xchg
xchg
push
stc
mov
pusha
push
fxch
jno
test
out
pop
arpl
cmp
mov
lcall
mov
push
push
or
mov
stos
repz
add
out
push
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
jmp
dec
loope
lret
sbb
or
mov
adc
setg
cmp
and
aaa
cltd
test
lock
sub
inc
in
mov
rolb
jno
mov
es
add
rclb
cmc
xor
movsb
add
lea
sti
jo
push
xchg
or
push
pop
pop
fdivs
cmpb
inc
cmc
cld
shr
mov
or
push
add
int
outsl
pop
dec
data16
pusha
adc
inc
sub
into
mov
ficoms
xor
shll
call
pop
xor
add
pop
and
nop
movsl
and
out
mov
stc
dec
and
cmpl
ret
push
popa
push
aas
pop
std
movsbl
stos
push
sub
mov
add
or
sti
inc
xchg
lret
rclb
mov
cld
xchg
dec
adc
movsl
stos
or
repz
push
mov
jne
popa
dec
es
xchg
mov
jno,pt
adc
push
jmp
jl
xchg
add
pop
mov
lret
inc
ficomps
in
pop
inc
mov
push
add
je
inc
sub
sbb
cmp
mov
mov
pop
inc
icebp
pop
imul
dec
sub
or
inc
imul
mov
ljmp
int3
out
ss
pop
xchg
xchg
add
and
int3
adc
lods
adc
jmp
xchg
mov
fs
dec
cmpsb
stos
into
adc
in
adc
movsb
stos
mov
mov
adc
xchg
mov
push
scas
mov
movsl
push
mov
cmpsb
stos
lods
mov
pushf
lock
ja
std
xchg
aam
jnp
jne
pusha
cli
enter
je
cs
jnp
cmpsb
loope
jl
pop
scas
mov
stos
mov
xlat
test
sbb
pop
fldenv
sub
arpl
cli
xchg
dec
sti
mov
stc
jb
shlb
pop
push
dec
mov
aam
imul
movsl
das
sub
mov
repnz
xor
lods
addb
mov
or
jge
call
or
movsb
das
cmp
adc
popf
mov
imull
lds
mov
addl
or
es
push
mov
mov
in
mov
or
xor
enter
lahf
push
fucom
mov
fdivrs
push
idiv
sbb
add
cmpsb
lods
in
les
and
pop
movsb
lods
inc
pop
mov
mov
pusha
mov
push
dec
adc
dec
sub
sub
sub
adc
out
hlt
inc
jne
jae
mov
mov
es
call
cmp
mov
mov
fisttpl
and
pop
sbb
leave
mov
nop
jecxz
pusha
adc
inc
jo
dec
das
cmp
aad
mov
mov
push
dec
fsubrp
insl
or
adc
sub
lret
leave
sub
or
divb
mov
xor
cmp
mov
mov
daa
or
js
leave
mov
into
push
mov
and
xor
fisubrs
lods
or
mov
stc
mov
inc
and
mov
jg
or
adc
and
out
lods
loopne
repz
int
cmp
iret
sbb
xor
xor
sbb
push
mov
call
sub
pop
jae
jae
decb
lret
mov
loopne
push
inc
and
cmp
pop
adc
push
xchg
pop
cmp
xchg
stc
jno
push
sti
rcrb
push
push
sub
xchg
nop
adc
cs
xor
mov
cmp
insb
adc
mov
scas
mov
in
pop
into
pop
add
aam
hlt
sub
mov
push
enter
sbb
add
pop
jmp
inc
sbb
outsl
xor
and
ds
and
pushf
shll
fs
aam
jns
inc
jmp
pushf
adc
xchg
insl
add
out
pop
mov
inc
push
aam
lretw
lods
push
mov
cwtl
pop
add
xlat
repnz
xchg
mov
and
jae
bnd
rolb
das
pop
jmp
jae
mov
and
or
and
sar
int
movsl
inc
push
repnz
jg
mov
shll
and
clc
adc
jecxz
jno
dec
or
inc
sbb
movsb
push
popf
and
jmp
mov
xchg
jne
push
jecxz
shll
xor
adc
rcrb
fwait
in
mov
or
pop
push
cli
adc
push
bound
lods
push
pushf
xor
adc
out
movsb
cld
out
outsl
enter
inc
sub
add
mov
sahf
enter
mov
mov
fistpll
xor
int
and
mov
mov
sbb
jmp
jns
stc
push
xchg
cld
pop
test
push
or
xchg
push
scas
int
and
aas
inc
cmp
add
subl
test
add
out
je
mov
mov
shlb
or
mov
dec
push
add
cli
mov
jbe
fstpl
inc
pop
pusha
jmp
or
or
mov
or
lock
fs
add
adc
test
and
cmp
lods
add
imul
xor
cltd
test
mov
out
test
inc
daa
and
and
sti
and
pop
push
cli
fisttpl
lret
movsl
and
mov
inc
sbb
loopne
test
outsl
xor
lcall
push
cmp
push
gs
mov
test
mov
lock
inc
sbb
sbb
cmp
sub
pop
popa
test
addr16
std
mov
addl
hlt
sub
inc
jnp
mov
in
cmpsl
jg
out
mov
hlt
pop
fwait
sub
mov
sbb
cmc
xor
jp
frstor
data16
sbb
pusha
and
cmp
bound
fstpl
cmp
push
jnp
push
int
cltd
shrl
mov
into
gs
mov
stc
shr
inc
out
sar
movsl
inc
testb
adc
ja
jbe
adc
dec
shll
mov
xchg
sarb
jmp
inc
popa
ficoml
mov
rcll
adc
push
pop
jp
je
lods
imul
in
jle
inc
sub
testb
cmp
xor
es
xor
add
mull
sub
call
jecxz
fcmovb
cli
pop
dec
or
ja
jg
jg
pop
and
addr16
leave
adc
aas
xchg
add
stc
mov
add
cmp
int3
cs
pop
outsb
cmovp
xchg
pop
cwtl
xor
movsb
add
in
sahf
or
shlb
int
into
adc
ret
bound
mov
addl
std
inc
and
cmc
xchg
fldt
jbe
rolb
mov
jl
dec
ficompl
test
jp
jle
popa
movsb
out
pushf
lds
inc
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
jmp
cltd
push
in
sub
jno
std
jmp
ja
insb
xchg
mov
lret
inc
lahf
or
cmp
sbb
xor
xlat
push
push
lahf
in
sbb
ficoml
add
fsts
scas
push
dec
sbb
mov
pop
outsl
adcb
das
fwait
pop
xchg
inc
dec
mov
mov
or
outsb
pushf
mov
sti
push
insb
int
push
inc
pop
pushf
jns
sub
sub
xchg
fldl
jge
in
jecxz
push
add
push
loopne
dec
lret
data16
into
dec
hlt
sarl
popf
imul
jle
in
pop
loopne
hlt
out
inc
jns
pop
add
fnstenv
shl
jle
add
sbb
data16
js
and
mov
std
add
jno
pop
cmpsb
add
lods
das
int3
test
and
mov
data16
mov
pop
ss
jmp
inc
stos
sub
or
test
pop
mov
add
fnsave
jb
jne
add
test
xlat
enter
iret
or
push
mov
xchg
out
rol
enter
and
je
daa
xchg
inc
fsts
jo
push
ret
dec
in
adc
push
pop
sbb
outsl
or
jnp
ret
inc
out
das
sahf
xchg
sub
or
dec
mov
mov
mov
xchg
in
lock
cli
fdivrl
adc
sbb
mov
imul
dec
lock
imul
test
les
test
inc
ja
addr16
adc
inc
hlt
cwtl
popf
inc
std
mov
enter
push
xchg
and
mov
arpl
sbb
sbb
and
jns
jmp
flds
adc
aaa
adc
in
pop
pop
cld
decb
into
mov
mov
mov
dec
sbb
stos
cld
mov
jge
cmp
scas
and
jne
sub
dec
fcoms
and
jb
fs
cld
ficoml
add
cwtl
scas
ficoml
aaa
pop
daa
mov
jle
mov
mov
mov
adc
dec
sbb
dec
push
jl
xor
outsb
idiv
lods
clc
pushf
ss
xor
imul
cmp
lods
xchg
mov
sbb
pop
xchg
andl
dec
aas
les
aaa
cli
add
lods
dec
adc
out
pushf
or
insl
and
push
mov
dec
pop
lds
das
test
and
push
rclb
jbe
push
loop
dec
push
stos
scas
outsl
outsl
mov
dec
std
sub
xchg
cmc
cmp
pop
imul
and
in
xchg
inc
dec
scas
jae
test
je
sub
cwtl
dec
aam
cmp
iret
add
pop
cld
mov
mov
std
push
rcll
lret
mov
adc
lcall
imul
std
xchg
xchg
adc
sysexit
inc
icebp
aad
mov
cld
push
inc
scas
shl
cmc
sbb
ret
xchg
xor
es
dec
mov
ret
push
mov
sbbb
sarb
sub
jle
mov
push
jmpw
das
insb
out
fwait
fs
sahf
fnstenv
or
loope
sahf
inc
add
rcr
ffree
vmulpd
and
into
pop
pusha
adc
xlat
test
mov
mov
mov
push
movsl
mov
or
cmpsl
int3
out
mov
fsts
mov
in
mov
mov
popa
movsl
popf
sbb
enter
mov
nop
xor
pushf
jg
popf
xlat
sbb
jnp
lret
push
cwtl
orl
sbb
movsb
and
jge
xor
std
gs
stc
es
sbb
in
push
bound
sti
push
inc
xchg
pusha
loope
or
xchg
sub
test
sub
and
repnz
popf
jp
adc
xchg
xchg
cld
ret
divl
aam
ljmp
jb
addl
test
mov
ss
add
inc
jecxz
fwait
mov
push
push
inc
mov
mov
xor
daa
data16
js
rolb
lret
xor
popa
imul
adc
sbb
adc
pop
lods
add
shll
outsl
xor
jae
or
sub
lods
cmpsl
aam
pop
add
push
scas
fstp
mov
in
mov
test
jecxz
test
xchg
cmp
cmp
push
and
cli
lret
ret
loopne
je
push
and
ss
ret
jle
mov
lods
cmp
mov
sub
xor
movsb
sub
int
test
mov
mov
mov
jg
int3
dec
aam
pusha
decb
push
and
pop
fimuls
push
in
notb
test
adc
push
hlt
movsb
jg
icebp
movsl
dec
rcl
sbb
fwait
movsb
jbe
ficomps
lahf
cmpl
cs
jl
js
xor
mov
bound
or
dec
scas
xchg
mov
addr16
push
cmp
imul
mov
jmp
cmp
dec
test
sbb
xchg
inc
outsl
loopne
fists
mov
pop
add
insl
nop
inc
sbb
xlat
cmp
in
pop
cmpsb
adcl
repnz
mov
movl
xor
adc
xchg
and
or
popf
js
jnp
test
push
fldt
mov
or
mov
scas
repz
mov
cmp
mov
out
out
les
inc
mov
call
sarl
bound
sub
cld
cmpsl
fsts
test
loope
ljmp
jg
xchg
lret
dec
mov
clc
mov
pop
sub
xchg
outsb
insb
popa
sub
xor
scas
add
dec
test
dec
fwait
cmc
jle
mov
add
into
cmp
adc
icebp
cmp
ja
mov
ss
pop
adc
imul
pop
test
stc
push
out
mov
lret
inc
subl
popf
jmp
std
sub
lahf
xor
push
pop
and
addr16
pop
pop
iret
lcall
ret
test
lods
into
mov
push
jnp
loopne
jns
mov
cs
inc
in
or
scas
dec
into
ja
inc
sahf
in
mov
mov
cmp
out
mov
push
sbbl
enter
or
and
pop
mov
gs
loop
mov
es
xchg
sbb
pop
lret
pop
ja
dec
mov
test
push
lahf
shll
sbb
dec
xchg
roll
gs
loopne
pmulhuw
loopw
jmp
scas
xchg
add
or
ss
dec
fistps
test
out
and
cmpsl
or
es
inc
add
cmp
mov
xchg
add
nop
andl
mov
mov
or
dec
mov
xchg
pop
push
xchg
arpl
mov
pop
sbb
pop
xor
rclb
into
lret
push
addr16
outsl
mov
std
sub
loopne
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
jmp
push
mov
adc
xchg
xchg
push
pop
add
ja
cld
int3
mov
or
jl
inc
or
jbe
jle
bnd
inc
inc
xor
fcoml
lods
loopne
sahf
pop
mov
mov
mov
pop
xlat
mov
xchg
hlt
jp
sub
cmpsl
movsl
mov
orb
cmp
lahf
mov
jmp
and
jo
inc
cld
xlat
jecxz
fidivrl
lret
icebp
sbbl
xchg
mov
enter
sub
pop
lods
xchg
test
out
stc
daa
inc
ret
and
pusha
sarl
imul
mov
fcompl
gs
stos
repnz
jae
mov
aas
push
jle
mov
pushf
outsb
xchg
add
jmp
outsb
sub
adc
lret
or
pop
addl
mov
push
fnstsw
icebp
inc
mov
mov
mov
lret
sub
fcomps
cmp
jp
fisubl
sub
cltd
dec
repnz
xor
adc
mov
adc
enter
outsb
inc
mov
inc
fisubs
push
ret
lea
pop
pop
mov
imul
inc
aas
push
fsubr
dec
mov
adc
sahf
cmp
scas
mov
sti
lcall
fwait
xchg
out
or
pop
sub
or
popa
fsubrs
jnp
adc
jg
push
lcall
cld
lea
popf
push
add
sbb
into
inc
daa
sarl
addr16
insl
lods
movsb
xlat
fists
ret
fsubs
xchg
add
das
int3
popl
dec
jle
insb
lahf
add
push
pop
inc
cltd
inc
xor
lcall
out
adc
mov
inc
repz
or
das
lock
xor
cmpsb
push
xchg
aam
call
push
xor
add
mov
mull
call
adc
into
xor
imul
leave
sub
insl
pop
or
jg,pn
sarb
xlat
enter
mov
cmp
jns
test
push
std
and
rorb
push
insb
insl
nop
outsb
cli
scas
push
push
gs
bound
nop
mov
cmp
and
hlt
ds
pop
fs
xchg
pushf
in
sbb
pop
out
iret
and
fiadds
sub
mov
data16
scas
ret
mov
icebp
xor
pop
jne
adc
jno
xor
cmp
outsb
push
mov
testl
scas
dec
mov
mov
inc
sahf
rolb
rclb
pop
dec
rcrl
cltd
aam
pxor
out
or
jae
hlt
xlat
sub
xchg
sub
xchg
cltd
mov
cld
xchg
mov
and
push
and
in
in
add
jo
std
or
arpl
dec
int3
dec
pop
cli
push
call
lea
xchg
stos
cwtl
xor
or
add
push
push
dec
mov
fwait
and
pushl
push
xor
push
jp
movsl
pop
cmp
pop
stos
sbb
ret
rorb
xor
pop
pop
repnz
test
push
jnp
add
adc
into
or
in
xor
mov
inc
sbb
out
dec
mov
push
mov
lcall
mov
sarb
xchg
sub
push
and
lret
repz
fsubl
lret
cmp
adc
ds
fcoms
lods
mov
sbb
or
add
mov
in
push
push
xor
jnp
stos
loopne
insl
bound
leave
sbb
jns
jae
popa
mov
shll
mov
lods
stos
pop
lods
sub
dec
push
and
mov
dec
mov
aad
mov
loopne
cmc
addb
dec
inc
xchg
xchg
call
pop
repnz
xchg
sahf
fists
adc
clc
inc
mov
cmpsb
adc
and
jmpw
push
out
pop
rorb
sbb
jbe
in
test
imul
outsb
test
in
sbb
out
mov
bound
aam
dec
in
hlt
dec
mov
pop
dec
inc
arpl
cmc
cltd
and
orl
gs
iret
aad
push
inc
jecxz
jmp
roll
mov
cmp
adc
repnz
or
sub
add
mov
mov
sbb
push
pop
test
lahf
imul
mov
loopne
jp
arpl
mov
and
cld
rcr
cmpsb
je
sub
jnp
inc
ret
xchg
pop
loope
lret
adc
cmp
dec
cmp
subb
push
push
add
mov
inc
add
insb
cmpb
xchg
inc
ja
movsb
xor
pop
xlat
jo
pop
ret
sbb
scas
sub
pop
lods
push
jge
in
into
mov
lahf
into
sbb
dec
jns
sub
lods
lahf
movsb
jbe
xlat
add
adc
xor
and
mov
mov
xor
xchg
add
insb
addl
fs
test
dec
fmuls
int3
push
add
mov
in
popl
mull
daa
xor
adc
xor
imul
dec
sub
ja
xchg
xchg
or
fwait
popa
mov
mov
push
or
mov
or
add
jp
clc
sub
filds
iret
push
dec
xor
cmpsl
add
lds
cmpsb
jmp
ret
inc
push
repnz
ss
add
jbe
sbb
pusha
std
cmpsl
jno
ljmp
mov
push
mov
imul
push
sub
dec
pop
push
sbb
add
push
out
rorl
dec
in
addl
jns
pop
cwtl
cmp
out
loop
bound
adc
shl
pop
std
mov
insl
mov
loop
mov
arpl
adc
fstl
dec
lret
cltd
mov
fistl
push
mov
iret
mov
and
scas
or
out
jnp
stc
or
rolb
mov
arpl
sbb
data16
dec
push
xor
xchg
in
cmp
pop
shll
scas
out
fmull
sub
adc
sub
jp
shlb
sbb
cltd
sub
dec
add
lret
dec
in
xor
xchg
ss
mov
daa
jo
and
out
movsl
es
mov
pop
cmp
mov
scas
fdivr
mov
ljmp
sbb
jmp
in
or
xchg
cmp
arpl
lcall
mov
dec
in
cld
push
pop
xor
and
scas
xchg
rcrb
out
inc
popa
fidivrl
push
stos
scas
loop
sub
inc
sub
jb
hlt
decl
xchg
mov
sub
fmuls
lock
mov
outsl
ret
out
fs
xor
lret
negb
or
lret
in
lahf
mov
mov
adc
lds
dec
push
cmp
ja
mov
xor
jmp
cmp
adc
mov
test
xchg
repz
xchg
in
scas
pop
pop
dec
adcb
xor
vshufpd
mov
jbe
insl
test
pop
mov
cltd
sbb
sub
or
fldl
in
cmpb
add
mov
sahf
addr16
cmp
push
and
add
les
xor
xor
mov
in
xchg
adc
add
mov
popf
into
and
fdivr
enter
push
or
rclb
subl
cli
cmpsl
xchg
inc
stos
popf
mov
mov
cld
fiaddl
ljmp
stos
fdivrs
arpl
push
fnsave
aaa
and
mov
push
and
lcall
pushf
dec
call
and
movsb
iret
fucom
jle
inc
pop
loope
or
adc
mov
xchg
and
icebp
add
scas
int3
pop
push
movsb
inc
cmpsb
lcall
mov
jae
push
or
cs
shlb
mov
enter
xchg
stc
xor
pop
inc
test
inc
cwtl
std
and
and
xor
xchg
repnz
fs
mov
sub
jb
mov
xor
inc
adc
mov
sti
pop
mov
jp
lret
sub
pop
and
sbb
push
addr16
ret
xlat
push
lret
xchg
iret
mov
cmp
aad
push
push
sbb
mov
mov
pop
sbb
mov
hlt
jae
cmp
jbe
mov
and
pop
leave
dec
outsb
xchg
sarb
mov
sub
jecxz
inc
jecxz
push
sbb
mov
jecxz
imul
pop
sbb
xor
hlt
aam
push
cmp
push
fimuls
or
xchg
or
pop
xchg
and
bound
outsb
popf
and
jns
xchg
mov
lock
push
dec
lcall
xchg
pop
mov
dec
sbb
push
add
adc
or
dec
test
aad
pop
cli
lods
lods
or
cmpsl
pushf
pusha
into
fcom
cmc
in
setg
lock
aad
jnp
insb
call
sub
jmp
sbbl
testl
ret
dec
fldl
or
sbb
out
stos
fldt
lds
mov
ljmp
out
mov
aam
mulb
js
push
ja
lea
xchg
daa
sub
xchg
scas
jnp
jle
sub
aas
xor
fs
sti
cmpsb
lea
adc
cmp
divl
push
sbb
cmp
jp
gs
mov
xor
cmpsb
xchg
dec
arpl
and
test
xor
inc
inc
mov
push
cwtl
loop
lea
lret
fstl
stos
xor
leave
mov
shll
jg
sbb
aas
push
jge
push
push
jo
dec
jl
mov
cmpsb
jp
mov
in
sti
mov
mov
mov
pop
ret
pop
or
leave
inc
inc
dec
and
push
xchg
aaa
cmpsb
pop
lahf
loope
sbb
clc
out
push
in
enter
lods
pop
lds
pop
mov
lods
add
cmp
enter
inc
imul
pop
fs
rcrb
inc
stos
gs
jge
sbb
loope
jbe
aaa
cmc
mov
xchg
std
sbb
lcall
in
shlb
inc
psubsw
ss
aaa
cwtl
or
jle
sti
loopne
mov
push
inc
inc
dec
mov
out
inc
sub
sahf
int
pusha
js
add
pusha
stos
repnz
dec
jns
jns
pop
mov
pusha
mov
cs
mov
lahf
fsts
stos
and
jle
repnz
xor
xchg
xchg
lock
out
mov
nop
add
lods
icebp
sub
addl
mov
lds
mov
test
add
popf
add
adc
inc
cmp
test
ret
lods
xlat
out
dec
bound
pop
pop
bound
push
sbb
loopne
xchg
mov
pop
stos
gs
push
int
sti
imul
or
rclb
lahf
or
fimuls
add
xchg
add
add
cmp
test
loope
sarb
pop
pusha
and
pop
in
sub
xor
repnz
shrl
push
push
js
ret
int3
and
cmp
push
rcrb
mov
push
call
ds
lods
and
stos
adcb
pop
testl
cmp
xchg
pop
jae
addr16
jp
mov
add
push
cmp
clc
dec
xor
test
mov
adc
xchg
imul
popa
icebp
jae
adc
mov
sahf
mov
ds
mov
inc
dec
or
or
inc
dec
and
inc
jbe
sahf
inc
andl
and
insb
mov
jmp
jne
dec
fsubl
adc
cmp
lock
fs
sbb
mov
xor
xchg
add
imul
lds
insb
inc
mov
loope
or
sub
test
ret
pop
sbb
lds
mov
jg
lods
js
sahf
xchg
jo
cmc
push
jl
loop
xchg
insl
xchg
inc
mov
sub
ss
lcall
and
andb
ficoml
out
out
aam
shll
insb
es
mov
es
iret
daa
xchg
mov
call
inc
test
xor
jnp
testb
jne
xor
daa
mov
push
gs
inc
arpl
out
and
xchg
xor
mov
inc
or
push
ret
cmc
data16
ja
add
test
pop
int
in
or
ss
pop
push
mov
int3
shrl
popf
mov
mov
jmp
jo
repnz
hlt
mov
xor
mov
or
pop
sub
testb
fnsave
mov
jl
xchg
leave
insl
or
lahf
call
clc
dec
push
pop
sub
sbb
and
mov
data16
push
pop
daa
jnp
test
stc
push
sub
shrl
stos
push
pushf
movsb
mov
mov
inc
nop
divb
mov
fistps
inc
insb
aam
mov
lods
pop
pop
sar
nop
cmp
jge
repz
mov
dec
push
pop
rclb
inc
sahf
cltd
aad
push
ljmp
insl
call
rep
sbb
out
sbb
sbb
cmpsb
ret
add
addb
in
jnp
outsl
mov
jae
mov
popw
mov
pushf
mov
or
mov
fidivs
xchg
jns
lret
pop
fisubs
outsl
jl
notb
in
jle
or
daa
adc
adc
mov
pop
jle
mov
movsl
mov
sbb
pusha
add
test
jge
adc
push
outsb
push
mov
icebp
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
jmp
cmpsl
icebp
cmp
pop
dec
arpl
xor
adc
xchg
mov
mov
gs
into
adc
rolb
mov
cs
push
pop
mov
sub
ss
mov
mov
cli
enter
adc
sbb
or
pop
ljmp
xor
xor
rcr
inc
mov
dec
fdiv
sub
mov
loopne
sub
sbb
cld
sti
push
or
inc
cmpsb
jb
hlt
jo
pop
rol
dec
scas
scas
jecxz
adc
shlb
popa
outsb
sbb
mov
dec
inc
fisubrl
out
lcall
out
mov
out
add
and
sub
cmpsl
loop
cmp
cwtl
jp
mov
addr16
andl
jge
sub
jbe
pusha
ficompl
repnz
or
shll
out
mov
inc
mov
inc
mov
aad
xchg
cmp
xor
jle
push
movl
lret
or
scas
pop
sbb
stos
xor
xor
jge
mov
pop
push
enter
jle
push
in
aad
jo
out
mov
pop
imul
dec
stos
iret
xchg
xchg
ljmp
xchg
aam
jge
mov
dec
jmp
imull
and
inc
and
xchg
flds
pop
cmp
or
mov
dec
movsl
mov
xor
push
hlt
push
mov
xor
mov
jg
aas
xchg
shlb
outsb
pop
sub
out
push
pusha
push
xchg
push
or
xchg
mov
fs
xor
out
and
int3
fldenv
and
cmc
mov
movsb
in
add
sub
orl
dec
pop
jae
pusha
repnz
dec
and
mov
or
clc
push
sbb
jne
inc
cli
cmc
aaa
xlat
xchg
je
out
lods
cld
adc
mov
mov
cmp
mov
movsl
push
cltd
xchg
cmp
jle,pt
ss
and
cmpsb
adc
aam
subb
insb
adc
cli
xchg
jns
mov
cmp
add
cmpsb
inc
and
dec
bound
daa
hlt
decl
xlat
pop
aad
xor
pop
aas
addb
fiadds
xchg
shr
mov
push
sahf
out
inc
cmp
mov
movsl
fcoms
fadds
mov
or
insb
cli
in
cmpsb
addr16
rcrl
daa
nop
cmc
mov
sub
test
clc
add
insb
inc
add
adc
xor
mov
popa
enter
les
push
stos
outsl
fstl
ror
jnp
shlb
cwtl
clc
aad
and
inc
leave
bound
mov
popa
mov
int3
icebp
pop
cli
push
mov
pop
xor
xor
mov
cmp
or
ja
arpl
pusha
mov
xchg
mov
in
lret
pop
jne
enter
or
jns
nop
in
movsl
loope
xchg
aaa
dec
push
xchg
push
and
fimull
cmp
or
les
iret
and
jecxz
clc
or
add
imul
xchg
les
in
xor
or
std
sbb
fwait
pop
test
fcoml
xchg
outsb
mov
sbb
imul
stc
popa
sub
clc
dec
dec
mov
int
or
sbb
ficoml
pushf
adc
xor
pop
jne
lret
fadds
lahf
cld
and
mov
fwait
out
lea
movsb
nop
cmp
lret
xchg
sbb
push
inc
out
imul
dec
xchg
and
fcmovb
dec
jp
mov
pop
inc
into
hlt
mov
push
jnp
or
cmp
lret
mov
rcr
adc
xchg
repnz
jecxz
sub
mov
dec
into
jge
mov
mov
inc
push
je
cmpb
mov
and
subl
mov
inc
mov
jp
mov
pop
or
mov
cmp
mov
loopne
test
jo
cs
sub
pop
out
jmp
sti
sbb
lock
clc
add
in
mov
test
pop
mulb
jo
mov
fmuls
nop
mov
dec
sub
and
int
dec
dec
pop
sahf
jne
pop
inc
stc
das
xchg
arpl
push
xchg
fstl
sub
xor
pop
or
sbb
sbb
add
icebp
addr16
int
xchg
icebp
jns
mov
push
and
sbb
and
es
or
rcl
xchg
je
fsts
test
mov
lcall
and
jbe
bound
inc
inc
xor
cmp
in
stos
cmpsb
sbb
xor
jecxz
das
or
or
mov
stos
sub
jne
lea
test
lahf
mov
dec
rcll
pop
adc
xchg
jp
or
jmp
adc
in
ljmp
fs
fucom
movsb
xchg
push
push
and
movsl
and
push
dec
out
xor
xchg
xchg
xchg
jmp
xchg
clc
shl
pop
lds
ficoml
pop
dec
out
repz
out
rclb
mov
fwait
nop
lock
xorb
and
pop
dec
into
mov
out
add
sti
xchg
push
push
cmp
xor
cmp
lahf
mov
insb
jb
lock
mov
jl
int3
sub
push
mov
sbb
lahf
xchg
push
sbb
xchg
imul
and
sub
pop
xchg
xor
and
data16
int
mov
mov
and
and
ret
inc
mov
inc
leave
mov
and
fbld
shll
sbb
scas
add
popf
in
jl
or
les
stc
fnstenv
insl
dec
test
ss
idivl
repnz
mov
ja
xlat
sub
jecxz
or
fsubs
aaa
std
out
push
sarb
aaa
aad
or
imul
pop
fsubrl
stos
cltd
in
add
inc
push
fmull
rorb
cltd
cmpsl
mov
sbb
daa
sahf
in
divb
cmp
cmp
push
test
fwait
and
jecxz
push
jns
arpl
dec
dec
push
loop
in
iret
pop
out
rcll
adc
icebp
popl
xor
leave
adc
out
popa
push
add
mov
addr16
mov
leave
and
clc
test
lds
imul
or
xchg
iret
test
cmp
and
nop
cmpsb
mov
mov
push
dec
xchg
mov
dec
xchg
ds
xlat
add
sbb
ficoms
push
cmp
mov
add
xchg
into
scas
fisubrs
fldl
movsb
cmp
cmp
jge
cmpsb
int3
roll
cmp
arpl
loop
pusha
xor
inc
lcall
lods
jecxz
sbb
push
int
insl
cmc
jle
pop
dec
pusha
and
xor
push
dec
test
pushf
push
cmpsl
jbe
xlat
or
jmp
xchg
test
mov
ret
lods
mov
pop
orl
pushf
jae
das
fdivrs
push
test
mov
add
loopne
adc
jne
outsb
test
mov
jmp
ljmp
sub
pop
xchg
icebp
test
adc
xchg
fisttpl
or
lcall
adc
mov
test
aad
mov
xchg
cmc
pop
push
push
push
std
stos
into
sub
notl
fimull
push
fistpl
loope
pop
add
incb
cmp
sahf
adc
mov
addr16
cwtl
push
or
pop
xchg
je
dec
repz
or
test
sub
push
push
fs
fcmovb
dec
mov
pop
push
jp
js
cmp
mov
xchg
fcompl
mov
inc
in
pop
inc
jno
mov
fildl
mov
sbb
and
jg
xchg
mov
cmp
and
mov
inc
pop
pop
xchg
fsubrl
mov
jge
int3
add
aas
lock
or
dec
sbb
out
imul
es
cmp
mov
adc
adc
mov
test
enter
test
or
in
es
mov
rcll
scas
subb
mov
xchg
shll
sahf
lock
push
std
lods
push
jmp
fstpl
fisttps
sub
clc
fidivs
mov
sbb
dec
pop
lods
sub
dec
pop
out
sbbl
call
adcb
outsb
pusha
push
or
pop
mov
xchg
mov
xchg
jbe
data16
data16
clc
repnz
lea
pusha
daa
in
movsl
in
push
dec
fwait
add
and
int3
push
rep
mov
xlat
out
pop
mov
cmp
push
unpcklps
aam
inc
and
es
inc
push
test
mov
push
and
dec
cmpsl
daa
push
sub
xor
rclb
mov
add
iret
adc
or
and
in
jmp
testb
dec
inc
sbbb
clc
add
dec
lds
mov
repz
jle
mov
ds
std
imul
cmpsl
repz
inc
in
push
rcl
sub
call
cmpl
mov
andb
cld
cmp
roll
xchg
popf
or
jae
ret
adc
lret
dec
jle
mov
pusha
push
jle
packuswb
mov
jb
mov
int3
and
mov
cmpsl
xchg
push
fwait
jle
adc
int3
outsl
fwait
aad
mov
lahf
push
jae
cmp
hlt
into
int
loopne
in
jmp
inc
add
rclb
inc
mov
mov
mov
xorb
or
lahf
lret
push
adc
xor
pop
iret
xor
xchg
inc
in
arpl
mov
add
test
fimuls
pop
les
mov
sarb
sbb
les
sbb
fidivrl
bound
lods
inc
mov
mov
xchg
idiv
imul
inc
or
dec
ficoms
ds
mov
cmp
shl
push
fcom
jae
inc
xchg
jle
andb
pusha
and
das
push
and
inc
int
pop
add
negl
add
adc
jns
jp
shl
jmp
push
testl
iret
adc
xchg
mov
outsl
cmp
sbb
push
jns
jns
out
push
cmc
mov
jle
jg
pop
loope
jne
call
clc
push
xchg
hlt
mov
sahf
icebp
sub
pop
les
mov
stc
adc
int
and
fistl
imull
mov
push
mov
out
out
sbb
push
xchg
imul
push
or
ret
popa
sub
fdivrs
mov
xchg
insb
or
adc
nop
insl
cbtw
adc
jns
popa
push
in
dec
pop
fwait
jg
cmpsb
vzeroall
add
and
adc
xor
cmp
push
inc
jmp
divb
in
out
into
jecxz
xchg
push
divl
jle
aaa
xor
mov
sbb
and
dec
loop
add
lds
out
movsb
adc
sbb
xor
xor
push
aam
or
mov
ljmp
pop
push
push
jecxz
mov
int
inc
inc
outsb
call
out
pop
pop
mov
out
sbb
int
movsl
or
ret
outsl
outsl
insl
add
and
aas
pop
jecxz
fwait
bound
jno
cli
ss
popa
push
shll
xor
test
cmp
sbb
jmp
hlt
mov
adc
push
andb
adc
into
jle
sbb
push
xchg
stos
xchg
scas
movsb
cmpl
mov
sbb
jne
jl
lcall
mov
inc
int3
xchg
sub
stos
insb
cli
jg
test
in
cmp
mov
aam
jnp
inc
push
xchg
js
adcl
cmp
sub
adc
jg
pop
mov
mov
outsb
dec
or
js
clc
jnp
hlt
push
fbld
jae
pusha
dec
xchg
push
sti
add
mov
fwait
pop
inc
loope
repnz
addr16
xchg
repnz
mov
inc
loop
mov
fisttpl
icebp
fdivl
inc
bound
push
inc
movsl
or
or
cs
inc
inc
xor
in
add
mov
sbb
aad
adc
sar
and
inc
sbb
and
pop
test
or
mov
adc
jg
das
mov
dec
sbb
pop
push
cmp
outsl
jle
nop
sub
sar
incb
in
js
cmp
bound
push
nop
sbb
mov
inc
push
ja
cltd
or
jge
stc
aad
mov
fs
pop
loopne
and
mov
pop
js
stos
cmpsb
adc
outsl
sub
xchg
aad
call
jbe
xor
xchg
mov
add
stos
push
inc
push
jg
int
addb
jae
xor
mov
adc
lcall
bound
xchg
cs
push
in
sahf
inc
lcall
cmp
add
stos
imul
push
xor
mov
or
mov
jle
mov
lahf
mov
xchg
je
pop
ljmp
es
xchg
fimuls
mov
push
decb
cmpsl
dec
jno
pop
push
les
or
xchg
mov
pop
insb
fbstp
cmp
in
mov
and
cmpsb
jmp
das
dec
push
push
enter
add
add
mov
mov
sub
out
psubsb
fistpl
cmpl
fisttpll
inc
call
inc
out
adc
add
add
dec
jmp
andl
call
sti
stos
push
mov
inc
out
xor
into
jb
rcrl
fnstenv
jmp
mov
adc
sbb
ljmp
jmp
add
std
pop
adc
mov
rcl
aaa
push
jbe
insb
mov
jne
xchg
adc
xchg
cmp
lret
push
outsb
mov
inc
jle
adc
mov
repz
push
nop
mov
jne
sbb
inc
stos
data16
sub
ja
inc
int3
outsl
mov
adc
int3
push
pushl
push
push
call
mov
jmp
push
rcrb
and
inc
outsb
xchg
arpl
aas
mov
xorps
mov
add
xorl
test
stos
adc
test
cmpsb
out
adc
in
cli
push
outsl
add
or
cmp
int
int3
mov
dec
and
loope
daa
icebp
orb
sub
xor
cli
nop
inc
jne
jmp
inc
or
jmp
shlb
dec
lods
xor
imul
sub
mov
mov
mov
ret
cwtl
pushl
xor
call
push
sbb
mov
imul
ds
xor
and
jecxz
cld
and
mov
xchg
fs
xor
adc
sti
fs
pop
addr16
sti
nop
in
sbb
test
mov
xor
insl
xchg
sub
or
sbb
test
xor
fwait
or
add
lret
mov
testb
jl
imul
outsl
enter
mov
lods
aad
jno
add
sbb
repz
int3
jb
imul
sub
dec
push
mov
out
dec
lea
inc
or
push
iret
push
push
test
popf
mov
or
loope
movsb
sub
js
loop
jnp
shlb
mov
mov
xchg
ss
xchg
xor
repz
xor
or
rorl
sub
and
inc
push
cmpsb
push
jecxz
clc
fst
pop
cmpsl
pushf
mov
xor
xchg
or
sbb
dec
cmpb
add
inc
inc
sub
sbb
xor
test
scas
dec
iret
sbb
cld
adc
push
or
stc
test
add
pop
loopne
fucomp
sarl
leave
lret
lret
inc
popf
pop
xchg
inc
cmp
sbb
cmp
or
or
inc
ljmp
mov
cmpsl
test
mov
pusha
push
and
or
enter
mov
add
in
outsb
mov
cmp
sbb
sarl
xor
fimull
aam
mov
xor
hlt
dec
xchg
mov
fisubl
xchg
repnz
xor
imul
inc
lcall
mov
or
insl
jg
adc
jmp
data16
fisubrl
and
xchg
jbe
in
shrb
mov
lods
mov
stos
dec
jo
mov
je
nop
pop
daa
push
dec
mov
and
fstpt
inc
mov
xchg
ret
pushf
sbb
pop
insb
addr16
insl
aaa
mov
mov
cmp
jne
and
out
out
pop
sbb
pop
inc
lahf
xor
xchg
fnsave
ja
sahf
int
mov
xor
hlt
arpl
jge
es
jmp
or
xchg
xor
push
pop
lret
add
and
xlat
or
adc
xor
mov
adc
sbb
bound
add
lea
clc
fnstenv
mov
gs
jne
cmp
ret
aas
push
cwtl
sti
inc
int3
imul
jg
mov
cmp
cmp
insb
push
mov
jne
adc
sbb
push
sarb
ret
int3
inc
in
jnp
insb
sbb
fstpl
mov
cs
adc
daa
in
stos
mov
push
jle
or
aaa
cmp
and
and
mov
xor
sbb
sarb
les
pop
test
out
sbb
in
mov
mov
dec
sbb
cmp
xchg
dec
add
das
pop
gs
test
sbb
mov
dec
mov
xor
pop
fisttpll
xchg
jle
cltd
leave
or
xor
dec
ljmp
sbb
inc
in
jmp
outsl
jno
shrb
stos
add
leave
stc
arpl
data16
fldenv
xor
inc
push
leave
sar
stos
mov
lds
inc
repnz
mov
aaa
scas
idivl
pushf
or
add
mov
and
fistl
ss
scas
into
lea
fwait
cmp
aad
jne
testb
stos
mov
cmp
mov
imul
sti
inc
aam
mov
jp
aad
stc
es
out
pop
leave
mov
shl
mov
mov
mov
pop
or
xor
push
add
lea
sub
arpl
add
mov
ss
pop
fistpl
jns
scas
jp
fdivs
lret
pop
ret
stos
lods
push
xlat
pop
imulb
inc
sub
push
inc
stos
repnz
push
push
dec
push
mov
sbb
or
cmp
ss
cltd
mov
ja
dec
mov
in
loop
xchg
das
out
test
jns
loop
mov
vpextrw
lds
cmp
cmpsl
push
ljmp
push
in
push
idiv
and
adc
cmp
xor
xchg
mov
es
cmp
inc
test
jne
adcl
inc
inc
jns
ret
lret
sbb
jge
sar
jns
mov
mov
xchg
xor
mov
pop
xchg
mov
sub
push
adc
iret
jnp
filds
insb
sbb
mov
je
xor
sub
movsb
lock
and
cmp
lcall
jle
mov
in
and
fnsave
xchg
leave
clc
scas
mov
pop
mov
xor
lcall
dec
loop
push
leave
push
mov
dec
cwtl
and
and
xlat
shl
nop
inc
xchg
adc
or
mov
or
outsb
xchg
bound
sbb
mov
lahf
dec
into
add
push
inc
arpl
sbbb
ljmp
cmpsb
push
ss
xchg
sub
xchg
mov
adc
pushf
pop
test
int
jge
adc
out
add
add
ret
sbb
icebp
js
jp
icebp
daa
pop
sub
mov
jecxz
xor
mov
or
dec
in
sub
lret
mov
sahf
inc
mov
mov
pop
mov
cmc
xor
mov
pop
in
loop
sub
add
jnp
mov
aas
add
bound
imul
xchg
icebp
pusha
out
pop
push
repnz
xchg
push
add
sub
dec
and
jge
mov
test
cmp
lret
jmp
in
mov
imul
int
leave
xchg
arpl
mov
daa
jmp
add
rclb
pop
xchg
inc
daa
dec
sbb
lds
sbb
adc
and
push
jecxz
pop
lods
jmp
jmp
repz
mov
and
loop
sar
in
xor
mov
lods
jg
push
mov
mov
jbe
leave
mov
mov
loope
pop
jno
jno
rcl
push
inc
dec
aaa
pop
adc
mov
cwtl
faddp
inc
lods
ficomps
rcrb
xor
xchg
cmp
xor
dec
mov
hlt
outsb
mov
xor
js
add
mov
inc
and
pop
ljmp
lods
enter
add
ljmp
imul
scas
sbb
xor
nop
bound
ja
into
fisubs
xchg
push
test
shlb
hlt
lods
mov
mov
push
sbb
cmpsl
lea
out
shll
fldcw
mov
sbb
das
stos
adc
cmp
adc
imul
stos
add
dec
mov
lock
mov
call
test
nop
pop
je
loope
xchg
int
movsb
div
cmp
lahf
jb
push
cmp
repz
pop
out
cmp
cwtl
stos
in
pop
fimuls
test
sbbl
lcall
jg
jmp
jl
flds
xlat
stos
rolb
mov
andl
rolb
aaa
or
pop
popa
and
xchg
scas
sub
cmp
and
mov
add
mov
data16
cmpl
push
xor
cmp
loop
lea
add
outsl
clc
jecxz
jge
mov
repz
push
mov
lods
out
mov
test
pop
push
subl
out
inc
sti
and
test
jns
sbb
cmp
jecxz
and
clc
dec
jmp
push
push
jmp
sub
jnp
adc
or
push
fldcw
add
sarl
stc
jo
fs
cmp
add
jge
pop
jmp
aam
sbb
xchg
adc
aaa
dec
test
xor
jl
insb
jg
js
jp
push
mov
sbb
adc
ret
test
sub
out
fstl
adc
xchg
jae
cmp
inc
int3
cmpsl
and
popa
loope
pop
cmp
stos
aad
mov
and
push
in
pop
stc
lahf
or
mov
push
jp
mov
test
xchg
mov
sbb
and
mov
call
out
dec
cmpsl
lahf
or
dec
and
inc
adcl
sub
cmp
pushf
mov
cld
cmpsl
push
mov
fwait
jp
xor
lret
add
jl
cmp
mov
subl
leave
popf
mov
das
fmul
dec
orb
xchg
mov
arpl
popf
xor
cwtl
or
cmpsl
and
cmp
ljmp
sti
test
fwait
sub
test
xchg
mov
sbb
daa
pop
xchg
roll
xchg
subb
js
loope
dec
dec
call
add
add
in
loopne
dec
movsb
loopne
push
jecxz
adc
xchg
adc
xchg
adc
scas
shrl
and
enter
sbb
out
push
out
ljmp
mov
test
loop
loopne
xchg
push
mov
in
cmpb
xchg
inc
or
nop
jbe
dec
orl
mov
test
jge
push
mov
or
and
les
adc
addr16
xor
orl
pushf
cmp
pop
xchg
jmp
and
inc
push
lahf
mov
mov
pop
jp
cmp
inc
fiaddl
jno
lock
cmp
shlb
add
push
hlt
mov
push
pop
dec
movsl
jl
dec
enter
scas
xor
jns
je
dec
ret
sub
aaa
xchg
scas
adcl
mov
pop
fcomi
mov
aam
fsqrt
or
les
pop
jns
imul
push
ss
insl
mov
xor
fimuls
hlt
dec
mov
push
mov
push
addr16
ret
add
fs
test
shlb
xchg
mov
mov
ficoms
movsb
xor
out
aaa
mov
sbb
movsl
sbb
ficompl
das
xchg
les
mov
dec
shr
dec
lret
pop
mov
sbbl
test
cld
cltd
and
leave
add
push
push
sub
popfw
jecxz
sbb
pop
sbb
dec
pop
clc
aaa
repnz
adc
mov
lret
imull
xlat
lcall
add
iret
ficoml
xor
xchg
jns
cmp
sub
xor
call
xchg
lret
or
test
aas
jnp,pn
mov
xor
jmp
mov
push
inc
daa
sub
adc
ja
sti
imul
sti
cmc
pop
jne
sahf
mov
lret
mov
inc
sbb
xor
aam
std
fnstenv
and
movsl
sti
enter
outsb
ret
pop
rorl
inc
daa
push
add
iret
cld
mov
rclb
inc
dec
or
mov
insb
jmp
popf
jns
outsl
inc
and
jp
jno
or
insb
inc
push
ror
push
movsb
rcrb
fists
jne
out
out
stos
jle
in
dec
stc
out
inc
sbb
rclb
pop
xchg
add
mov
fucom
fistl
shrl
mov
inc
addr16
hlt
cltd
sbb
sub
popa
xchg
movsl
clc
icebp
pop
fsubrs
mov
cmp
bound
adc
pop
rcrb
stc
in
cmc
push
jmp
insb
adc
imul
fstps
sti
sbb
push
pop
push
xor
daa
jno
aas
cmp
or
outsb
call
repnz
push
ret
xor
into
cmpsb
into
add
inc
push
js
dec
and
dec
inc
mov
xorb
push
rorb
mov
bound
mov
xchg
cmc
push
loop
cmp
in
cltd
fwait
shl
and
or
repnz
inc
fwait
punpckhbw
xchg
adc
decb
mov
dec
inc
arpl
mov
test
adc
cmp
test
lods
je
daa
aas
pop
pusha
pop
adc
ja
mov
outsl
call
or
notb
lcall
stos
outsl
mov
jb
pop
pop
sbb
adcl
jecxz
push
pop
dec
push
xchg
enter
push
dec
fisubrl
xorl
bound
jnp
mov
stc
lods
mov
lea
test
or
mov
inc
cmc
ror
dec
cmpl
into
xchg
hlt
pop
jecxz
and
out
jno
test
aaa
je
xor
fsubrl
dec
xor
popf
sbb
fcom
mov
lret
mov
and
cmp
call
mov
jmp
mov
mov
in
jnp
xor
inc
xchg
inc
jne
in
jns
sbb
call
cmp
insl
jl
je
cmp
ficoml
push
mov
loopne
mov
or
test
scas
push
mov
xchg
roll
lret
inc
fsubrs
rolb
mov
xlat
push
inc
mov
insl
lock
outsb
dec
ja
pop
inc
sub
dec
xor
test
mov
int3
mov
mov
jle
daa
sub
mov
mov
jle
icebp
scas
negb
sub
cmp
mov
sub
lret
cmp
fdivl
add
sbb
ror
stc
lahf
lahf
aas
jb
dec
adc
inc
add
cmpl
icebp
push
mov
mov
mov
mov
push
push
jmp
push
xchg
stos
les
ret
mov
lcall
loopne
and
jnp
das
ud1
das
lods
hlt
mov
ja
pushf
adc
xor
mov
mov
int3
jb
or
mov
adc
mov
dec
adc
nop
xor
imul
xor
jns
cmp
xchg
inc
rcrl
imul
cmp
or
rcrl
xchg
cltd
loopne
ljmp
in
adc
and
push
push
stc
imull
ficomps
jle
or
sbb
js
stos
dec
fsubr
test
pop
mov
fimuls
xor
dec
add
imul
xor
push
imul
and
aad
xchg
sub
sbb
xchg
fistpll
inc
mov
pop
lcall
dec
and
or
push
mov
xchg
jg
leave
push
fimull
push
add
jecxz
outsl
cmc
cmp
in
sub
xor
jno
loope
xor
pop
mov
cmp
dec
fstl
jle
in
add
or
cmp
jae
ds
pop
mov
aam
mov
jb
xor
fwait
jb
cld
mov
js
jb
sub
jle
in
add
add
mov
jecxz
add
jge
fsubr
pop
sub
addr16
mov
mov
mov
jle
inc
sbb
or
shll
inc
addr16
jmp
and
dec
mov
mov
stos
stos
mov
cmpsb
cwtl
pop
leave
sub
lret
sub
stc
jb
into
ljmp
push
mov
std
inc
idivb
test
js
push
popa
mov
ljmp
arpl
add
inc
imul
sub
pusha
lret
fistl
add
add
adc
pop
out
fiadds
aaa
inc
adc
xchg
xchg
daa
sub
jb
cmp
add
lret
fstl
xor
mov
shll
stos
sub
aas
pop
aaa
sbb
in
adc
mull
xchg
add
jbe
pop
pushf
jnp
push
pop
xor
push
bsr
mov
arpl
jmp
cld
inc
mov
sbb
sub
aam
subl
sahf
xlat
std
fwait
ret
lds
stc
mov
lea
ret
sbb
scas
loopne
inc
pop
sbb
adc
ds
insl
or
jmp
imul
jl
rcrl
mov
in
jae
nop
fistpl
add
in
cs
fnclex
xchg
pop
mov
sub
pop
scas
inc
jmp
fbld
sub
hlt
loop
ret
push
mov
aad
fs
dec
lds
or
aam
push
mov
xor
xchg
aam
call
fsts
add
dec
lds
add
cltd
cmp
daa
data16
adc
sbb
sbb
repnz
and
mov
cs
arpl
push
inc
loope
pop
nop
inc
mov
xchg
dec
or
leave
inc
fwait
pusha
pop
scas
jg
clc
jmp
ja
adc
ss
aam
mov
hlt
out
adc
dec
loop
sub
xchg
sbb
inc
adc
and
in
mov
leave
mov
push
and
add
sub
sbb
aam
push
out
sti
aad
int
cwtl
cmp
int
push
sub
ret
mov
adc
out
inc
inc
mov
and
sub
in
call
add
sahf
fildl
inc
fcoml
fs
push
dec
dec
push
cmp
popa
xchg
test
in
dec
je
lds
push
push
mov
movsb
movsl
and
int3
imul
mov
dec
bound
mov
hlt
and
mov
nop
leave
addr16
cltd
jmp
inc
pop
inc
cmp
mov
fstl
jle
das
popf
lret
jne
xchg
mov
jbe
fwait
pop
pop
rclb
push
and
scas
data16
popf
lods
adc
lock
outsl
inc
adc
dec
cmp
rol
push
ljmp
fidivrs
inc
push
lahf
push
fwait
sbb
jb
pusha
fists
ja
aaa
das
xchg
and
jle
inc
sub
xor
cmp
add
faddl
icebp
notl
addr16
lods
inc
push
jge
aaa
mov
jecxz
or
nop
in
repz
nop
hlt
xor
lret
fs
gs
cmp
mov
in
enter
xor
ds
and
cmpb
jle
stos
dec
xchg
dec
repnz
or
pop
pusha
lahf
aas
nop
jno
mov
dec
dec
mov
xchg
movsb
loop
pop
lds
movsb
loope
stos
loope
shll
push
inc
es
gs
faddp
pop
call
inc
mov
xor
repz
xchg
mov
loopne
icebp
int
cli
jp
arpl
jno
ret
lahf
or
sbb
cmp
outsb
sbb
adc
rorb
lahf
xchg
fimull
jg
adc
pop
jns
xchg
imul
out
popa
jns
les
mov
rcrl
dec
add
lea
fadds
test
jmp
mov
nop
mov
pushf
hlt
mov
jge
pop
sti
ret
mov
ret
fldenv
push
or
mov
cs
addb
out
clc
jae
fdivrs
test
lret
adcl
jmp
lahf
push
sbbb
popf
sub
pop
inc
cmp
and
dec
mov
dec
loopne
dec
imul
pop
int
cli
sbb
ret
mov
dec
xor
insb
dec
push
cmpsl
inc
mov
in
ror
sbb
or
mov
popa
pop
cwtl
fists
cmpsb
fcmovbe
sbb
push
sbb
lods
aad
mov
int
jp
pop
pop
lods
mov
dec
jb
xlat
fisttpll
hlt
fistps
sub
outsl
cs
cmpsb
push
mov
push
xchg
push
ja
and
imul
lods
inc
lahf
adc
fcmovbe
add
pop
popa
pop
mov
dec
fs
je
int3
add
in
es
enter
shlb
movsl
push
add
inc
insb
ss
lods
pop
cli
lret
xor
flds
xchg
out
or
adc
inc
and
notb
imull
iret
insb
inc
lret
inc
popa
into
scas
add
sbb
sub
xchg
and
aas
sbb
add
cld
sbb
dec
sbb
mov
mov
es
add
dec
outsb
pop
dec
cmp
idivl
adc
mov
add
pop
mov
cmp
jle
daa
shlb
ds
mov
add
ss
xchg
fisubrs
dec
xor
daa
jns
inc
aas
incb
test
jns
sub
pop
jg
mov
nop
push
add
sub
shrb
and
popa
fimull
pop
addr16
dec
pop
cmp
push
and
cmp
cmp
inc
lahf
mov
push
leave
arpl
adc
mov
imul
dec
insb
inc
test
jb
cmp
pop
insb
jg
ja
in
lahf
pop
jp
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
jmp
pop
jge
lds
hlt
inc
pop
mov
adc
xchg
inc
scas
mov
jo
inc
pop
mov
icebp
jmp
pusha
movsl
loopew
scas
test
jg
add
das
jne
adc
lods
mov
mov
clc
pop
jns
mov
test
pop
pop
pop
out
les
mov
lret
int3
lock
test
jle
ror
sub
sub
add
cmpsl
daa
outsl
dec
and
scas
push
or
xor
cwtl
push
cmovl
push
mov
cmp
pop
scas
into
jp
fnstcw
arpl
pop
daa
enter
dec
mov
je
inc
jns
dec
mov
xchg
adc
pop
outsb
dec
mov
xor
shll
sbb
fnstenv
mov
inc
jmp
nop
mov
mov
jnp
mov
sub
movsb
shrb
test
push
push
in
cltd
jge
in
jg
xchg
xor
mov
inc
fnstsw
shrl
cli
jnp
xchg
sti
pop
stc
pop
jnp
inc
sub
jp
movsl
nop
std
fwait
aas
jns
repnz
mov
sbb
stos
xlat
push
inc
out
out
setb
les
dec
inc
rcr
mov
add
cmp
xor
mov
xor
daa
fisubl
pop
clc
dec
push
mov
adc
jo
sub
xchg
testb
adcl
cld
adc
pop
xchg
or
test
sub
pop
jge
and
into
es
adc
addr16
lahf
shl
test
mov
lret
adc
movsl
rcl
hlt
pop
dec
or
push
fmull
loopne
xchg
xchg
adc
jno
push
pop
mov
leave
jl
or
dec
xchg
in
pop
addr16
lock
mov
scas
sub
in
imul
mov
fidivrs
and
xchg
cld
or
xchg
pop
imul
aad
pop
in
push
fsubrs
dec
cmc
mov
test
fimuls
stos
jns
cmp
mov
subl
jnp
push
lcall
mov
pop
adc
cmp
ljmp
rorb
ret
adc
xor
sbb
aaa
sahf
jecxz
into
sbb
pop
adc
xor
out
dec
mov
cmpsl
dec
mov
sarl
int3
mov
repz
jge
bound
repnz
lret
cli
mov
add
sbb
or
popf
push
sbb
jp
mov
add
or
pop
popf
fidivl
or
and
and
xchg
nop
outsl
and
xchg
mov
test
pop
in
dec
inc
jg
fsubp
mov
cwtl
cwtl
sub
popf
lds
pop
push
xor
sti
push
jo
fnstenv
cmpsl
push
repz
and
mov
adc
mov
movsb
popf
mov
pop
fildl
jp
ret
out
or
scas
or
xchg
cmp
adc
popf
lock
js
add
iret
xchg
mov
pop
js
dec
lock
jb
dec
jno
jmp
jmp
pushl
pop
inc
xor
pop
adc
pop
in
je
pop
sarb
cmp
lods
lods
fimuls
pop
mov
sub
rcrb
mov
sbb
dec
pop
iret
js
pop
lahf
lret
out
insb
jne
xchg
in
wbinvd
lods
pop
mov
cmp
add
inc
mov
pusha
in
in
adc
rcrb
cli
and
jle
stos
insb
xor
scas
jbe
jle
js
xchg
inc
push
ret
xor
pop
pop
sbb
jne
gs
push
inc
and
pushl
xchg
push
mov
xchg
fdivrl
pmaddwd
push
testb
in
jae
lods
push
mov
orb
push
and
adc
scas
inc
int
push
in
loop
adc
ret
es
mov
scas
popa
std
pop
aad
cmp
cmp
pop
cmp
clc
cmp
test
lret
andl
test
leave
mov
mov
imul
mov
sub
mov
stos
jle
stos
lcall
or
mov
push
repz
insb
jg
cmpsl
test
mov
push
add
lea
push
or
je
xchg
mov
adc
fildl
outsb
xor
cwtl
imul
fstp
xor
cld
imul
dec
push
jle
dec
enter
pusha
fsubl
adc
xor
psllq
in
inc
push
call
sub
das
xchg
cmpsl
adc
das
cmpsl
jle
ds
add
or
xor
or
jp
xor
xor
mov
cwtl
push
xor
cmpsl
mov
sub
mov
and
pop
xchg
xchg
jecxz
ds
mov
fnstsw
movsb
xchg
dec
mov
mov
mov
stos
sub
jbe
or
adc
push
out
xchg
jnp
inc
into
adc
leave
adc
cs
xchg
adc
cmpsb
mov
fidivrs
pop
fsubrs
add
sbb
lods
cmp
mov
xchg
mov
lock
cmp
cmpl
mov
push
out
jmp
fadds
jp
cmp
das
pop
not
push
mov
sbb
mov
dec
push
dec
adc
mov
test
enter
int
mov
sbb
addr16
into
xchg
mov
or
push
mov
mov
fwait
or
push
jp
ret
fimuls
aaa
mov
xchg
cmp
sub
mov
mov
test
fsubs
aam
xchg
pop
push
popa
jno
test
sub
shr
xor
sbb
dec
jnp
adc
es
movsb
xor
jge
fnstsw
cwtl
loop
cmc
dec
clc
cmp
mov
mov
call
cwtl
sbb
fstpl
cmp
aad
xor
bnd
iret
push
out
das
xlat
inc
pop
push
lahf
mov
or
mov
std
out
push
mov
shlb
mov
or
xchg
stos
jmp
test
mov
xor
cmc
rol
mov
add
scas
mov
in
rol
inc
pop
iret
jg
mov
js
neg
xor
das
mov
xor
jecxz
xorl
xor
cmc
arpl
pop
pop
fistpl
xchg
je
aam
int3
and
mov
fstpt
sub
push
les
divb
lret
and
cmc
cmp
and
mov
mov
xor
xlat
stos
add
jbe
test
cmc
jo
movsb
lret
insl
xor
mov
and
dec
int3
push
shrb
sbb
in
sti
pop
out
test
xchg
add
dec
pushf
into
mov
inc
xchg
out
ss
lds
push
jbe
or
mov
lret
cmc
mov
andnps
and
jno
dec
outsl
mov
cli
ljmp
mov
in
adc
sub
push
test
pop
xchg
xchg
lods
cltd
mull
xchg
shrd
shr
jmp
and
add
loop
es
pop
js
lods
enter
adc
xchg
mov
mov
sub
and
cld
lods
ret
xor
sub
sub
out
sub
xchg
cli
into
popf
fdivrl
and
loope
dec
xchg
pushl
setge
cmp
mov
es
test
xor
lods
sbb
lret
jno
adc
repnz
inc
outsb
xor
jne
mov
pop
push
out
dec
sub
xchg
outsl
xchg
negl
xchg
sub
cwtl
cmp
push
test
ja
test
test
push
push
mov
sbb
or
int
lods
inc
cld
out
xchg
sahf
mov
adc
sub
lcall
addr16
add
rcr
jmp
push
xchg
subl
jns
and
pop
es
dec
ljmp
insb
incl
mov
popf
dec
lahf
pop
mov
mov
xor
stos
test
outsl
cmpsb
inc
mov
mov
mov
mov
icebp
cmpsl
clc
test
call
divb
sbb
lcall
pop
addr16
sbb
jg
mov
pop
lcall
sbb
fstpl
mov
push
call
movsl
dec
xor
outsl
push
mov
test
mov
and
ret
xor
fadd
sti
movsb
insb
jo
and
inc
adcb
int
stos
dec
jnp
jns
and
icebp
cli
jle
hlt
insb
insb
mov
fistpll
cmpsl
cmp
fs
icebp
mov
sub
sbb
es
lea
and
sbb
iret
lea
sbb
push
aaa
dec
imull
sub
push
and
xchg
shll
pop
cmp
arpl
dec
leave
loope
mov
ret
inc
jns
cwtl
adc
ret
inc
push
sub
lods
jle
xchg
flds
fildl
xchg
out
and
push
adc
iret
fstpl
xor
stos
std
xchg
push
or
push
fimuls
daa
fsubp
push
inc
es
xchg
adc
sub
dec
rorb
movsl
sub
inc
xor
mov
jmp
pop
jbe
cmp
nop
movsb
js
cli
loope
xchg
in
kmovw
and
sbb
jecxz
sbb
mov
incl
jae
imul
mov
mov
pop
sub
sub
and
in
orl
mov
test
sbb
add
cmp
inc
cmp
sti
pop
xchg
call
adcb
cld
or
or
fnstcw
jp
and
mov
jae
int
mov
pop
and
lahf
pop
dec
aad
add
ficomps
lret
sbb
lods
ja
enter
lcall
xor
inc
repz
sbb
sbb
repnz
aad
daa
daa
mov
inc
daa
in
inc
es
pop
subl
sbb
aaa
cmp
mov
gs
jns
test
lods
xchg
js
nop
pop
sub
push
popf
leave
jbe
dec
add
cmp
jg
jle
shll
xchg
scas
inc
cmpsl
inc
fisttps
cmc
or
mov
mov
sub
into
aam
xor
jl
push
pop
lods
push
and
add
and
inc
jno
aad
in
mov
dec
and
nop
jmp
cltd
ljmp
lret
mov
bound
test
gs
movsl
int
aad
mov
aas
mov
xor
sub
cltd
notl
dec
mov
jns
dec
jge
xchg
jg
nop
lock
stos
lret
mov
mov
jmp
hlt
add
push
sbb
insb
mov
jnp
jle
outsl
nop
insl
lods
xchg
mov
add
inc
cmc
ja
out
outsb
scas
hlt
out
icebp
jmp
in
ror
jecxz
ljmp
pop
fwait
cmp
mov
mov
testl
sub
sbb
icebp
sbb
fwait
jg
adc
push
psubusw
jbe
cmp
mov
xchg
mov
mov
push
fisubrl
mov
movsb
push
push
mov
jo
xor
mov
fdivrs
lock
adc
mov
cmpsb
pop
test
js
ds
mov
int3
dec
mov
lods
addl
test
ss
jbe
sub
gs
enter
lods
hlt
sub
inc
pop
into
jbe
faddl
enter
jmp
jns
push
sbb
fdivr
repz
scas
add
push
or
cmp
mov
or
push
int3
mov
jbe
movb
jmp
lahf
int3
cmp
jecxz
mov
sahf
jns
lahf
cmp
outsl
jmp
out
dec
outsl
pop
add
dec
dec
lcall
leave
gs
add
jecxz
and
das
push
pop
lahf
or
leave
mov
test
cld
or
mov
pop
or
sub
ljmp
ss
jp
mov
add
mov
out
call
and
or
pusha
sbb
ret
push
popa
mov
sub
je
lods
inc
in
sahf
das
rcll
call
pusha
adc
jnp
in
jle
outsl
jnp
adc
shlb
ret
dec
or
xchg
sub
iret
pop
int3
sbb
shrb
mov
mov
std
aaa
pushf
push
xchg
or
cmpsb
je
je
and
jmp
sbb
lahf
cs
shlb
sub
rorb
sahf
xchg
and
mov
imul
jno
dec
mov
loop
ret
into
dec
test
ss
out
and
add
nop
pop
and
shrb
les
call
cld
data16
xor
xor
iret
int
cwtl
cld
xchg
cmc
cmp
ss
adc
xor
push
mov
pop
adc
mov
clc
testl
cmpl
outsl
add
aaa
mov
jae
adc
pop
insb
in
xchg
inc
xor
ror
cltd
mov
dec
cmp
xlat
add
mov
and
add
or
fdivrs
mov
lods
add
fisttps
push
jmp
push
cmc
inc
pop
and
mov
push
add
xchg
dec
dec
inc
jne
sub
leave
ja,pt
sub
inc
shr
nop
into
cmpb
clc
xchg
xchg
xchg
cs
and
stc
push
push
fcoms
and
jle
insl
mov
add
mov
jo
jno
out
cmpsb
aas
or
inc
jno
push
add
fs
xor
lret
into
shr
xchg
pop
mov
sti
mov
rorb
jecxz
and
scas
cmc
sbb
inc
loopne
lods
imul
in
popf
outsl
add
push
cmp
mov
push
push
mov
cmp
cmp
mov
xor
shl
xor
or
jmp
aam
mov
xor
push
mov
push
pmulhrw
sahf
popa
mov
push
in
insb
rcr
mov
jb
jecxz
dec
push
pop
pop
mov
lcall
and
jbe
test
je
push
cli
shrl
nop
xchg
fsubrs
mov
aas
jle
add
adc
ss
push
mov
push
jmp
xchg
mov
dec
icebp
ret
and
jo
jl
hlt
adc
adc
add
rolb
pop
out
adc
mov
mov
data16
mov
pusha
aas
sub
xor
cs
xor
push
mov
test
mov
add
ja
inc
sub
pop
ret
xchg
cltd
mov
add
ljmp
push
ret
outsl
xchg
xchg
icebp
shlb
xchg
or
jl
aad
int
mov
xchg
fistl
jnp
mov
add
push
xchg
jns
scas
jmp
js
add
out
mov
mov
movsb
cltd
push
ret
mov
sub
jbe
xor
push
ss
dec
dec
or
or
lret
daa
dec
pop
cmp
push
push
fsubrl
push
js
lret
or
loope
mov
lcall
mov
imul
mov
push
les
sbbb
fimuls
iret
popf
add
jns
stc
test
movsb
decb
pop
xor
inc
sbb
mov
inc
jne
addr16
mov
mov
jb
pop
xor
lock
push
add
lahf
inc
test
xlat
cmp
sbb
dec
iret
or
mov
out
sbb
int3
lods
ret
dec
mov
xor
cmp
inc
movb
addr16
and
xchg
and
pushf
jg
mov
popf
fsubr
stc
les
adc
sub
icebp
bound
imul
push
pop
lret
std
cmpsb
roll
jmp
mov
and
out
sbbl
jne
loopne
xchg
or
imul
jl
mov
xor
sub
dec
stos
and
jbe
and
clc
xchg
xchg
mov
in
dec
loopne
je
leave
lahf
clc
scas
or
nop
xlat
push
adc
adc
leave
mov
outsl
enter
sub
insl
pop
sahf
and
ja
sub
mov
out
push
das
xor
sub
repnz
add
xchg
xor
push
fwait
mov
sbb
mov
jmp
shlb
cmp
test
aad
xchg
popa
or
cltd
push
inc
cmpb
inc
xchg
call
mov
leave
ss
leave
inc
or
popf
add
add
test
pusha
in
roll
rorb
shll
mov
sub
sub
xchg
test
les
cmp
lret
shrl
dec
push
xchg
cmp
add
test
movd
clc
jmp
rol
bound
jle
inc
pop
lret
cltd
fnstenv
in
aas
hlt
test
icebp
push
test
pop
or
and
stos
cwtl
stos
push
jmp
addr16
pop
push
xchg
sarb
test
icebp
pop
mov
adc
mov
mov
cltd
pop
push
pop
or
pop
fildl
xor
sbb
pop
aaa
daa
mov
cmp
fbstp
mov
scas
adc
adc
les
pop
jbe
pop
mov
mov
loope
repz
pop
dec
push
cli
scas
sbb
xchg
inc
cmpsl
adc
jbe
rcl
push
adc
ds
inc
fsts
xchg
adc
pop
mov
xor
inc
adc
jle
inc
lret
add
push
push
insb
jp
lods
mov
fcompl
repz
xchg
loop
fimull
iret
std
adc
sbb
in
push
jne
nop
lock
sahf
enter
cld
sbb
push
sbb
xor
pop
add
mov
fstpl
or
pop
movsl
and
lea
es
push
outsb
inc
dec
pop
and
cmp
mov
push
jle
aaa
adc
pop
jle
out
cmp
xorl
movsl
or
iret
mov
leave
shrl
add
xor
movsb
imul
int
add
imul
dec
movsl
add
lock
cmp
sahf
pop
mov
add
cmp
jg
cmp
jbe
aam
pop
cmpb
pop
mov
push
movsl
and
mov
loop
inc
aam
insb
mov
and
push
jae
rolb
or
jmp
pop
mov
jl
popf
dec
mov
sbb
jmp
out
xor
bswap
mov
xchg
pop
and
sbb
jns
test
dec
cwtl
daa
mov
jmp
lret
ret
or
inc
pop
add
in
fisttps
xor
inc
lcall
mov
sahf
and
or
idivl
outsl
ret
popa
sbb
pop
mov
dec
ds
push
or
inc
push
lahf
adc
repnz
pop
lcall
xchg
movsb
pop
movsb
dec
outsl
fcom
or
pop
sbb
fstps
shll
pusha
push
sub
hlt
cwtl
rorl
je
lods
imulb
cmpb
clc
shrl
sbb
sub
xor
add
mov
fists
inc
lret
add
mov
push
shll
movsb
outsl
mov
scas
pop
pop
fs
jne
push
inc
iret
popa
ss
lahf
cmp
andl
test
cmpsl
outsb
arpl
xor
sub
out
test
pusha
adc
jns
mov
decb
cwtl
das
and
leave
jl
add
dec
jle
movsl
nop
pop
sub
pop
push
fnstcw
dec
cmp
mov
mov
pop
mov
mov
inc
scas
ss
mov
sar
test
std
out
inc
ret
dec
add
and
push
cmp
mov
adc
add
push
xor
ds
add
jns
jbe
cwtl
jnp
in
stos
popa
ja
cmc
rcrl
fdivs
and
and
sbb
or
loopne
mov
loop
and
jb
aad
inc
insb
cs
out
in
fsts
cltd
fidivl
jg
add
aaa
out
xlat
aas
xor
pushf
shll
stos
mov
pop
sbbb
jl
mov
jb
subl
push
lods
cmp
mov
es
xor
jg
fdivr
push
xor
nop
shl
xchg
mov
rcll
dec
adcb
rolb
movsb
push
and
add
add
adc
push
jp
stos
pop
xor
testl
fidivrs
enter
lret
mov
dec
iret
mov
adc
fisubl
and
and
sarl
adc
mov
jmp
fbstp
or
fadds
add
or
pop
inc
or
and
jo
adc
xchg
sub
daa
outsb
jecxz
cmp
mov
mov
pop
movsb
jmp
dec
add
sub
cmp
std
adc
mov
inc
aas
mov
ds
int
push
pop
arpl
mov
xchg
push
push
add
shl
mov
or
shrl
ds
push
ljmp
bound
or
jp
sub
pop
sbb
lret
cli
repnz
mov
pop
mov
fs
cwtl
out
movsb
inc
insb
fistpl
insb
xlat
lods
dec
outsl
xor
push
fs
push
xchg
shrl
xor
push
movsl
or
fcoml
fcoml
add
loopne
loopne
daa
bound
inc
sbb
dec
mov
pop
add
sbb
cmp
enter
clc
xchg
in
add
dec
nop
fxam
xchg
popa
pop
pop
addb
xor
inc
fimull
mov
negb
xchg
add
and
ljmp
js
mov
int
loopne
add
xor
nop
fisttpl
sub
mov
test
dec
icebp
nop
loopne
sub
in
push
lret
push
jno
test
xor
fstpt
imul
jns
stc
insl
mov
aad
loope
in
push
mov
nop
stos
and
inc
test
and
fiaddl
pop
push
int3
push
arpl
loope
cmp
jg
jg
dec
mov
subl
out
aam
shrb
adc
mov
je
xor
stos
and
shlb
mov
outsl
in
fstps
dec
dec
mov
ja
js
push
push
mov
int3
dec
shll
insb
push
jno
adc
dec
out
fistl
das
pusha
es
xor
add
fcmovbe
cld
and
out
sarb
push
aam
mov
out
xchg
fs
inc
xor
sti
roll
adc
mov
dec
mov
cmpsb
jle
jne
add
test
pop
fs
or
sub
pop
lcall
dec
fnstsw
pop
sub
loopne
cltd
push
aas
fmulp
push
sti
movsb
or
insb
and
lret
daa
add
xchg
in
xchg
add
mov
cltd
mov
iret
cli
mov
mov
out
scas
mov
sub
data16
jns
adc
imul
fsubrp
sti
inc
pop
xchg
jmp
push
dec
mov
adc
adc
repz
dec
sbb
mov
js
mov
jge,pn
insl
xor
dec
pop
scas
shrl
fisubs
stc
jae
sub
mov
sbbl
jb
stos
push
rcr
and
faddl
aaa
push
shrb
daa
movsb
out
rcll
jle
in
movsl
scas
xchg
mov
or
repnz
jle
mov
js
popl
sbb
mov
mov
mov
testl
adc
out
aam
loop
pop
push
cmp
stc
gs
xchg
and
sti
mov
push
hlt
inc
or
add
xor
mov
inc
iret
cmc
in
andl
repz
test
popf
push
inc
call
push
push
fldt
int
cmpsl
enter
ljmp
mov
push
out
subb
data16
cmp
mov
inc
cmp
scas
cmp
or
and
ret
xchg
out
sub
outsb
adc
out
fs
mov
jge
cmp
jge
arpl
fidivs
pop
enter
imul
icebp
popf
xchg
lret
pop
loop
xchg
addr16
insb
jb
test
lahf
ds
cmp
popa
mov
adc
push
addr16
lods
xor
rcll
mov
mov
les
cmp
lahf
fsubl
in
cmpsb
jmp
jle
fdivr
xor
mov
nop
sub
add
cmp
jo
pushf
mov
into
ljmp
inc
mov
ss
pop
inc
xchg
mov
aaa
je
scas
jne
add
cs
inc
push
insl
cmp
stos
jg
push
scas
inc
rcll
push
rcl
dec
fs
mov
incl
lods
mov
cmp
data16
test
enter
push
lret
loope
sub
scas
std
or
jnp
leavew
in
cmpsb
dec
jecxz
or
xor
xchg
sti
push
push
cltd
lds
cltd
xchg
ret
push
lea
sti
push
lods
rclb
aam
jp
jg
mov
shll
lock
cwtl
dec
mov
popf
push
decl
or
shrb
in
cmc
dec
sbb
stc
loope
push
and
adc
addr16
mov
mov
cld
xchg
add
call
lret
xor
inc
mov
or
subl
mov
imul
pop
inc
sahf
ljmp
cmc
add
or
xlat
mov
mov
sub
pop
mov
and
add
inc
divb
pop
fs
cli
ds
or
insb
fsubr
cmpsb
gs
adc
scas
fwait
lods
pop
inc
insl
int3
push
fnstcw
xor
mov
mov
in
addr16
lods
xchg
cli
xchg
mov
dec
cmp
mov
es
mov
cmpsl
or
shr
andb
imul
mov
mov
add
push
push
pop
inc
lods
add
rorb
das
out
and
sub
into
fcom
push
sbb
fmull
pop
push
jmp
aam
mov
int3
lret
lret
fcompl
inc
add
gs
mov
push
sub
lods
inc
test
cmp
es
iret
scas
inc
mov
xchg
cmpsl
sbb
lcall
inc
pop
inc
adc
cmp
jl
xchg
es
aas
add
cmp
xchg
out
xor
dec
pusha
push
add
push
out
sbb
mov
push
cld
inc
push
nop
pop
push
adc
add
cwtl
push
test
mov
pop
jbe
add
jle
add
xchg
lods
push
lea
push
loop
sub
cmp
xor
xchg
inc
xor
and
mov
ret
pop
adc
xchg
aad
cmp
stc
sbb
pop
push
icebp
scas
leave
inc
dec
inc
pusha
dec
lret
push
pop
movzwl
mov
out
loopne
in
hlt
mov
xchg
mov
daa
xchg
popa
sbbb
notb
mov
popf
or
test
push
sub
je
push
movsl
jno
pop
inc
stos
icebp
pop
int3
int3
inc
scas
idiv
enter
mov
jl
mov
out
cmp
das
or
cmp
and
add
lahf
adc
fs
adc
mov
loope
nop
aaa
popa
repnz
inc
cmp
push
sti
fs
sbb
xchg
inc
add
or
xor
cmpsb
or
mov
pop
fcmovne
dec
xchg
mov
incb
xchg
mov
add
mov
scas
mov
mov
ret
je
mov
mov
ficoml
das
addb
out
mov
scas
sub
pop
add
std
sti
sbb
sbb
mov
out
adc
xchg
ja
and
sub
push
fstpt
jns
out
mov
jmp
xlat
push
inc
pop
inc
sbb
lcall
xchg
jl
mov
mov
jl
fcmovb
imul
dec
ficoml
pop
shll
icebp
lods
pop
xchg
jge
rclb
call
pop
shll
push
or
cmp
inc
pop
in
cmpsl
mov
mov
dec
mov
inc
out
push
fistpl
cmp
cmp
scas
push
xlat
cmovge
cmp
sub
pop
mov
loopne
rcrb
jb
cmc
push
mov
dec
enter
jnp
mov
lahf
repnz
loop
push
inc
shlb
in
dec
dec
pusha
iret
and
popf
fadds
or
movsl
aad
cmc
jg
cs
aaa
xchg
lret
pop
lahf
and
shl
hlt
adc
ja
mov
and
and
mov
adc
inc
dec
repz
incl
lds
int3
add
mov
loop
int
nop
pushf
roll
mov
rclb
ficompl
sub
dec
repz
mov
rcrl
cmpb
scas
stos
test
notb
loope
lahf
cmp
xlat
mov
jmp
lock
xor
or
pop
stos
jle
icebp
xchg
sbb
outsb
shlb
jne
mov
mov
stos
dec
aad
out
inc
pusha
jo
adc
xchg
repz
mov
sbb
aas
imul
push
pop
fcompl
push
inc
inc
test
xor
pusha
pusha
push
xor
inc
int3
cld
add
add
sbbl
push
pop
loopne
mull
popa
sbb
movsl
dec
xor
int3
dec
add
jne
mov
adc
and
jge
and
sti
dec
pop
pop
jecxz
mov
xchg
cld
push
lods
aad
pop
mov
je
dec
inc
jge
push
arpl
test
pop
mov
loope
add
outsl
push
shr
ja
pop
push
test
imul
ljmp
addl
mov
sub
pop
je
gs
xlat
out
aad
das
push
sub
add
clc
cmp
in
cli
add
fs
mov
pop
dec
sub
xchg
fwait
dec
dec
jns
jb
pop
inc
lcall
push
pop
xor
jecxz
dec
mov
dec
mov
lret
fadds
pop
ret
sub
repz
cs
push
into
mov
jmp
inc
sbb
jno
adc
cmp
add
jno
cld
mov
xchg
and
test
push
jnp
fnstenv
jo
add
insl
decb
sbb
xchg
loope
aad
sbb
sbb
add
pop
xchg
icebp
pop
add
insl
jmp
sub
dec
outsb
mov
adc
cmp
sub
into
test
pop
jle
int3
out
xor
fs
lock
iret
mov
mov
cli
inc
xor
ds
popf
and
dec
decl
filds
mov
fdivs
cmp
outsl
pop
cmpsl
and
and
or
inc
lock
push
ficomps
insb
jecxz
fstpt
or
arpl
iret
xor
lock
xor
imul
jne
mov
xor
dec
mov
movsb
jns
xor
mov
in
rclb
addr16
add
cmp
dec
stos
lcall
xchg
jne
scas
lret
cmp
sbb
add
xor
jecxz
sub
loopne
sub
pop
sbb
pop
lcall
mov
push
cwtl
ret
in
popa
into
xchg
out
xchg
sub
out
js
mov
jbe
popf
inc
mov
mov
pop
dec
pop
incb
stos
out
mov
adc
push
xor
cmpsb
in
test
aaa
out
fwait
shr
imul
mov
loopne
sbb
pop
insb
imul
popa
pop
insb
adc
int3
inc
push
cli
sub
stos
push
dec
or
imul
in
inc
aaa
sti
repz
mov
adc
movsb
xchg
cltd
adc
mov
shll
add
xorb
mov
and
in
xor
repnz
pop
fdiv
je
push
ficoms
mov
xlat
cwtl
xor
pop
mov
in
mov
movsb
or
nop
sti
setno
test
aaa
lods
sub
mov
vunpckhps
sbb
cmpb
xchg
sub
hlt
xchg
ficomps
jg
ds
jle
push
xchg
outsb
xchg
cmpsl
daa
mov
push
rorb
dec
and
cmp
inc
push
xor
mov
mov
xor
cmp
cmpb
fadd
push
sbb
xor
jb
or
js
repz
push
mov
fmuls
fistl
stc
daa
lahf
sub
cmp
dec
loop
adc
mov
fnstsw
scas
xchg
jo
lock
add
fdivrl
xchg
sbb
mov
ret
adc
pop
movsb
stc
push
mov
imulb
nop
test
pop
sbb
push
cs
dec
outsb
out
push
pushf
inc
pop
mov
orb
jns
xchg
pop
mov
sbb
jge
jbe
and
jg
lods
xchg
cmp
das
mov
cmp
movsb
ss
jne
mov
into
inc
xlat
inc
push
inc
mov
lods
in
push
xlat
cmp
inc
xchg
jbe
pop
mov
loopne
sbb
mov
lret
in
pop
cmp
rcll
pop
push
jb
lea
out
imul
or
and
mov
fcomps
cmpsl
daa
adc
inc
dec
ficoms
mov
or
call
fstps
sub
mov
sbb
push
into
cmp
enter
xchg
out
push
test
mov
ret
clc
leave
das
pop
aaa
push
sbb
lods
inc
aam
cmp
stos
sub
rcrb
lock
pop
notl
ds
movsl
dec
iret
pop
call
mov
sub
inc
cmpsb
aas
mov
cmp
mov
pop
stos
into
jne
int3
pop
test
ficoms
shll
into
call
mov
loop
cld
inc
push
push
movb
clc
inc
and
xchg
outsl
push
mov
sbb
mov
and
stc
sub
sahf
xor
dec
cmp
lret
ljmp
movsb
cmp
int
xchg
out
push
outsl
shlb
mov
push
cwtl
rcr
mov
mov
aam
addr16
mov
out
jmp
test
int
mov
loopne
sub
sar
es
or
sub
out
dec
jl
push
dec
out
sub
in
mov
or
push
loop
cmpsl
imul
js
push
cmp
les
jne
ja
or
push
lret
mov
sub
sub
or
movsb
shrd
shr
mov
mov
xor
shl
jmp
xlat
mov
iret
or
push
mov
lds
js
adc
xchg
stc
mov
das
cmp
mov
mov
imul
pop
nop
je
mov
outsl
pop
out
aad
mov
mov
jp
std
or
fldl
outsl
jne
mov
sub
in
cwtl
addr16
fstpl
insl
adc
stc
addb
xchg
jne
inc
daa
lahf
cmp
add
inc
mov
jmp
jno
and
and
xchg
js
xchg
js
out
or
mov
mov
mov
or
jmp
mov
mov
cld
cmp
es
lods
inc
std
fdivr
xor
divl
sub
lcall
pop
fcmovnu
shll
movsb
lret
cmpsl
jg
add
mov
outsl
in
jp
mov
incb
or
ja
call
pop
push
fstpt
cmp
dec
add
xor
dec
jle
imul
sbb
notb
fstpl
xchg
idivb
sub
push
sub
ds
lock
or
sbb
int3
out
out
rcrb
lret
icebp
sub
rcr
pop
popf
push
lcall
ret
iret
mov
sub
scas
ljmp
sahf
xchg
and
fs
jae
aad
subb
call
push
fldt
sub
jb
dec
shrb
scas
pop
push
repnz
bound
push
jl
inc
push
pop
inc
cmc
mov
fdivl
add
rolb
and
fsubrs
xor
loope
dec
and
pop
jp
pop
xor
pop
into
adc
cmc
jo
pop
jne
into
pop
ret
stos
pop
dec
das
lds
sub
or
inc
jl
pop
jns
sbb
aaa
movups
cli
jg
les
pop
jge
ljmp
xchg
add
cli
aaa
adc
cmp
sub
cmp
shll
loopne
inc
fnstcw
sbb
shlb
lods
mov
fistps
das
in
stos
jae
in
lahf
mov
pop
and
pop
jl
addr16
jmp
or
lock
push
cmp
xor
adc
push
xor
psrlw
loopne
arpl
mov
jecxz
mov
sbb
and
jp
sub
sbb
jne
or
and
sbb
pop
ljmp
mov
popa
ret
xchg
add
sub
cmp
ret
xorl
shlb
jae
xlat
mov
jecxz
movsl
xor
inc
imul
add
xchg
movsb
mov
dec
sub
fs
data16
add
fidivs
pop
mov
data16
notb
jge
fldenv
icebp
stos
aaa
xchg
lods
aam
cwtl
fdiv
cmp
cmp
les
test
lea
repz
ret
jns
mov
int
sub
pushf
pop
pop
rcll
dec
xchg
dec
data16
ljmp
cmp
popa
push
fs
jge
dec
int3
or
jle
icebp
shll
icebp
lahf
xchg
inc
pop
mov
int
push
mov
iret
inc
repnz
outsb
adc
ljmp
shrl
fxtract
push
mov
loop
decl
push
or
jb
jp
mov
sahf
mov
mov
inc
or
fsubp
sbb
ja
movsl
mov
out
addr16
sbb
dec
data16
mov
outsb
push
xor
cmp
pop
sbb
mov
jge
mov
outsl
sahf
pop
popf
stos
cmpl
mov
jmp
into
scas
mov
enter
jecxz
add
mov
in
xchg
and
repnz
loope
shlb
aad
movl
push
sar
lret
adc
add
popf
movhps
inc
sbb
test
fcmovbe
xchg
push
test
adc
insl
aam
aas
mov
test
je
faddl
fsts
ljmp
add
push
inc
add
test
sbb
movsb
das
cmpsl
addl
mov
cmp
push
icebp
xor
add
nop
dec
jbe
push
loopne
pop
cli
jo
cmp
mov
jnp
sbb
sub
xchg
add
mov
mov
nop
mov
dec
jns
in
rcll
imul
mov
mov
fwait
pop
rclb
push
imul
ds
cltd
dec
sub
aas
out
jb
xchg
leave
test
sbbl
sub
out
inc
adcb
outsl
push
sub
leave
push
je
sub
jmp
fdivrs
push
push
xchg
ja
cmpsb
pop
lea
mov
inc
adc
es
adc
adc
pop
and
jb
mov
inc
sbb
movsb
cwtl
sbb
insb
fistl
sti
adc
xor
mov
ror
or
jle
fsubl
ljmp
int
pop
jge
add
ds
ja
das
shlb
adc
dec
incl
incl
es
inc
mov
adc
testl
mov
int
dec
in
mov
daa
cli
aam
xor
stos
jecxz
rolb
push
mov
lods
pop
bound
ds
push
push
in
fcomps
hlt
jmp
jno
arpl
mov
xchg
sub
loope
mov
popf
insb
jb
in
dec
out
mov
pop
cmpsb
shrb
xchg
ret
mov
and
xor
pop
lcall
and
adc
in
adc
cmpb
les
stc
mov
mov
aaa
cltd
outsl
mov
xchg
jge
cmpsb
int3
jl
mov
xchg
stos
add
mov
xchg
cmp
mov
push
or
dec
mov
sbb
pop
sub
mov
and
es
jecxz
repnz
inc
aaa
cli
xchg
fdivrs
cmp
orl
and
mov
jno
mov
js
mov
test
sub
xchg
inc
pop
insl
aaa
push
cwtl
xchg
xor
xlat
sub
fsubs
push
nop
movnti
or
add
scas
lea
pop
aas
pop
inc
add
lret
gs
jno
stos
xor
cmc
dec
mov
lds
push
jp
xchg
lret
jle
or
cwtl
rol
pop
or
imul
sahf
popa
rcl
enter
dec
mov
aas
lods
pop
fs
xor
bswap
rorl
or
call
sbb
push
sbb
and
inc
mov
dec
cwtl
mov
mov
ja
or
push
test
push
cli
lahf
add
fidivrl
dec
xchg
pop
pop
inc
dec
ret
pop
jb
popl
fwait
std
jno
adc
xchg
enter
icebp
arpl
ret
cltd
cmp
cltd
push
mov
into
repnz
mov
jb
jno
les
roll
xchg
jle
mov
mov
aad
xchg
das
or
xor
mov
ret
mov
inc
add
mov
lods
enter
add
movsb
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
mov
outsb
arpl
xchg
and
xchg
inc
mov
dec
push
clc
adc
xchg
mov
add
outsb
in
pop
shrl
cmp
mov
cli
xor
adc
insl
push
add
rcr
push
cs
cmp
jl
inc
loop
jge
xor
xchg
dec
sti
mov
add
lahf
addr16
hlt
push
and
loope
cmp
arpl
and
mov
mov
xchg
dec
loopne
out
pushf
and
cmc
jl
cltd
data16
popf
lcall
lahf
mov
cmp
or
out
cmp
movsl
out
adc
adc
dec
and
ftst
push
inc
adc
cli
inc
fmuls
shlb
in
scas
mov
push
and
out
ret
es
and
pop
add
in
cmc
iret
mov
inc
dec
mov
inc
push
cld
movsb
add
ficompl
or
lock
js
lds
sub
adc
mov
push
push
adc
test
addb
inc
rcrb
gs
adc
stc
inc
lcall
arpl
mov
lret
push
sub
sub
push
jecxz
lret
cltd
sub
insb
je
pop
inc
xor
in
in
inc
test
push
xchg
fimull
scas
xlat
adc
cmpl
sbb
xchg
cmp
push
jbe
adc
xchg
mov
mov
cmpsb
lcall
xor
and
mov
xor
jl
andb
mov
xor
cld
jo
std
inc
mov
cmp
sub
jne
ja
mov
push
cmp
xor
push
enter
aad
dec
inc
inc
insl
sub
enter
ret
cmp
or
xchg
repz
push
js
shlb
movsb
repnz
sbb
or
repnz
push
ffree
bound
aas
notl
mov
dec
sarl
cmp
xchg
iret
inc
dec
pop
mov
mov
mov
lea
cmpb
ljmp
mov
push
fwait
pop
lock
xor
xorl
stc
adc
pop
int3
mov
sub
arpl
mov
jae
mov
clc
sub
addr16
loope
dec
std
lcall
adc
push
lea
ss
mov
xchg
mov
insl
xchg
sub
push
push
mov
pop
fistpl
bound
shll
and
fstpl
pushw
jl
mov
xchg
mov
arpl
xchg
and
cmp
sub
pop
mov
subb
rcrl
and
repnz
sbb
jge
sub
dec
loop
and
les
push
nop
dec
dec
aam
mov
cmpsb
rcrl
insb
push
dec
jbe
pop
mov
pop
mov
rcrb
loopne
enter
test
test
sbb
iret
push
inc
jb
inc
pop
or
icebp
mov
inc
cmc
mov
ljmp
add
clc
sub
sbb
push
mov
cltd
daa
lret
pop
movsl
enter
adc
stc
mov
repz
movsl
xchg
or
rorl
out
push
sbb
add
pop
daa
movntps
cmpsl
ret
pop
int
xor
adc
jno
xor
push
cmp
inc
jle
xchg
subb
in
cli
xor
mov
fdivr
xchg
sbb
xor
iret
int
xchg
lahf
push
xor
repz
or
cmp
ja
stc
int3
inc
cli
xor
or
and
leave
push
leave
xchg
popf
mov
jns
lcall
mov
adc
mov
adc
sbb
push
pop
mov
jl
cli
rol
lahf
outsl
push
jge
xor
in
movsl
movsb
xchg
xchg
imul
movb
not
cld
mov
in
jmp
dec
aad
ss
push
pop
mov
fwait
sti
adc
pop
mov
dec
sahf
inc
gs
lods
adc
or
dec
and
out
mov
in
test
inc
sbb
sbb
mov
pop
pop
mov
int
or
and
jno
aaa
sub
aas
aaa
mov
nop
int
push
pop
loop
jbe
faddl
xor
adc
pmaddwd
xchg
push
xchg
mov
insl
or
clc
mov
rcrb
lea
andb
adc
and
loopne
push
decb
shll
rolb
sbb
sbb
imul
ret
fmuls
cmp
jecxz
lods
inc
shll
fs
cli
std
push
jo
push
sub
inc
jbe
mov
add
dec
inc
push
inc
dec
dec
jns
and
shll
fisttps
out
mov
pop
divb
loope
sbbl
or
mov
pushf
arpl
fdivp
out
mov
push
insb
push
xlat
jnp,pn
mov
add
adc
xor
mov
popf
jb
push
es
cltd
stc
movsl
and
call
cmpsb
ficompl
and
mov
cwtl
popl
gs
jmp
push
push
pop
icebp
pop
ja
mov
sbb
xchg
adc
jmp
scas
cmpsl
mov
sub
mov
repz
dec
mov
pop
push
bound
xor
imul
call
jecxz
js
xor
or
mov
bound
xchg
and
pop
or
ljmp
xchg
imul
sub
ds
mov
fbstp
lahf
push
stos
ret
and
ja
sbb
xor
push
inc
cmpsl
fimull
shll
cmp
sub
or
icebp
sbb
jmp
into
out
out
adc
cmp
nop
pop
adc
fwait
lret
lock
hlt
daa
push
xor
lods
jecxz
test
push
mov
lahf
insb
mov
mov
in
scas
adc
fadds
mov
ret
or
push
aas
add
dec
sub
pop
adcl
aas
pop
ljmp
shrb
out
and
mov
shl
mov
xchg
aaa
loope
into
push
xor
xlat
pushf
cmp
xor
cmp
jbe
push
mov
pop
inc
lds
mov
xor
fs
inc
orb
fmuls
popa
lds
test
in
adc
adc
jge
sub
movb
scas
push
in
xor
in
je
jecxz
cmp
jg
leave
loop
xor
stc
popa
xor
add
add
lcall
aam
sub
xchg
xchg
stos
movsl
or
inc
lds
in
dec
mov
jmp
in
or
dec
outsb
les
xor
aaa
pop
jae
dec
cmc
push
adc
icebp
les
or
shll
movl
inc
pop
jl
cmp
adc
stc
adc
mov
jnp
sti
imul
push
imul
ss
lods
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
jmp
fnsave
push
adc
adcb
adc
xchg
xchg
jo
inc
sbb
in
test
xchg
xor
sbb
mov
scas
sub
xor
cmp
popa
push
mov
lcall
je
ss
push
dec
jecxz
cmp
jmp
clc
mov
daa
push
adc
sub
scas
sbbl
popf
call
shll
ss
dec
jl
adc
inc
xorl
test
dec
mov
or
icebp
xchg
inc
mov
bound
xchg
lods
icebp
mov
sbb
dec
sub
push
notl
in
movsb
adc
jne
aaa
mov
push
lods
mov
sbb
sub
out
mov
mov
cmp
ja
loope
test
cmpsb
out
fisttps
es
enter
fsubr
cmpl
lods
fcompl
call
and
sbb
push
xchg
scas
add
in
sub
pop
into
sub
or
sarb
sub
loop
andl
cltd
or
sbb
sub
cmp
cwtl
insl
loope
sbb
popa
int3
test
lret
add
and
pop
sub
xor
and
push
daa
les
shl
int3
aad
aas
rcll
sbb
sub
mov
push
mov
inc
out
lods
dec
pop
les
insl
aaa
mov
mov
movsb
xchg
inc
pop
cld
sub
lahf
outsl
dec
mov
dec
scas
loope
shll
fidivl
push
and
movb
hlt
mov
aad
xchg
mov
cmp
test
lret
movsl
pop
icebp
jge
xor
aaa
cmpsl
xor
enter
stos
and
lea
or
imul
dec
jbe
xchg
cmp
pop
pop
rcll
stos
mov
sti
idivl
and
mov
adc
xlat
int3
or
shlb
inc
repz
ljmp
int3
int
push
mov
mov
test
jnp
xchg
inc
sub
dec
jo
scas
cmp
xor
mov
sbb
les
jl,pn
sti
mov
dec
cmpsb
dec
xor
pop
daa
sub
push
xchg
shll
das
test
nop
out
dec
adc
adc
in
inc
sub
ret
push
jb
in
icebp
sub
in
nop
push
add
cmp
hlt
scas
sub
fwait
push
aad
push
mov
movsl
addb
dec
outsb
aaa
inc
roll
lds
popa
inc
and
adc
popa
loopne
stos
pop
cmp
test
xor
dec
cltd
mov
enter
jo
lahf
sbb
fwait
mov
mov
rcl
mov
popa
or
stc
mov
popf
cli
jns
mov
mov
out
add
mov
dec
ret
lahf
repz
out
dec
push
scas
dec
mov
xchg
jmp
sub
in
mov
mov
imul
sub
test
lods
std
add
jno
inc
cmp
int3
ret
jns
jl
xchg
aad
aam
xor
sbb
sbb
cmp
scas
mov
push
inc
sub
inc
ret
sbb
push
jo
int3
xor
fistl
dec
cli
inc
mov
es
cld
aas
adc
and
hlt
push
shr
fidivs
push
or
inc
leave
ljmp
je
inc
lock
fcomps
push
outsb
cmp
jbe
adc
mov
and
mov
sbb
xor
xchg
mov
lock
push
test
jecxz
dec
fwait
sub
mov
lods
popa
mov
rorb
call
fnstsw
and
fsubr
inc
lds
scas
push
rcrl
std
mov
mov
in
stc
in
out
sbb
and
mov
and
cwtl
loop
imul
inc
cltd
sub
cltd
push
cmp
pushf
push
push
leave
sub
inc
lret
fsts
insb
fucompp
push
mov
je
jb
dec
add
pop
mov
mov
jnp
jnp
imul
out
je
jno
sbb
xor
lcall
shrb
mov
xchg
and
pop
mov
repz
icebp
ds
pop
push
sub
mov
enter
inc
mov
je
pushl
insb
xchg
mov
mov
lock
push
add
jecxz
or
push
or
gs
mov
push
sbb
cmp
sub
out
push
or
jge
or
sbb
sahf
pop
mov
sbb
movsb
out
daa
mov
jno
int
mov
subb
pushf
and
push
push
dec
push
or
adc
xor
sub
scas
mov
and
pop
addr16
xchg
or
sbb
push
int3
jmp
testl
mov
jle
stos
mov
ss
push
xchg
sarb
outsb
sahf
sbb
add
daa
xor
jl
mov
out
or
or
cltd
and
ret
subl
addr16
or
fisubs
ss
scas
cmp
imul
cmp
pop
jbe
fcomi
ljmp
jle
fst
xor
xor
orl
or
jae
std
mov
imul
lea
je
cltd
hlt
in
inc
in
outsl
cs
rcrl
adc
mov
jp
js
fisttpll
inc
rorl
dec
ljmp
adc
dec
divb
rol
cmp
jns
imul
push
sub
dec
xchg
dec
jle
mov
psubsw
push
fisubl
out
nop
mov
out
xor
jo
mov
sbb
pop
add
call
das
int
cmp
icebp
adc
in
push
lds
xchg
jnp
mov
xor
push
add
imul
int3
xor
movsb
sub
int3
add
fsub
std
lahf
ficomps
jmp
std
cmp
sbb
push
loope
xor
mov
pop
test
aas
mov
arpl
jecxz
lahf
subl
or
add
sbb
aas
pop
movl
cs
sbb
dec
xchg
cmp
jae
mov
mov
aam
and
mov
pop
dec
jae
jmp
stc
push
adc
dec
dec
xchg
ja
test
mov
daa
into
jmp
dec
add
add
pusha
rcr
or
loopne
xchg
jne
outsl
out
test
sub
mov
dec
push
ret
jnp
and
std
jo
mov
dec
mov
jle
mov
out
insl
dec
sbb
inc
xchg
or
pop
mov
daa
shrb
or
in
and
mov
lret
mov
cld
pop
divb
test
or
cmp
mov
imul
mov
fisttpll
mov
loop
push
jae
jp
or
das
or
mov
mov
shl
shl
mov
mov
jmp
test
fcoms
jle
sbb
or
ja
into
xorps
or
xor
testb
icebp
xlat
imul
dec
out
xor
adc
inc
lret
loop
lahf
mov
inc
xor
mov
sub
dec
shr
adc
inc
flds
std
sbb
or
sbb
cld
jp
stos
in
push
push
xlat
cmpsb
pop
mov
dec
mov
add
loope
lods
loope
inc
adc
cmc
idivl
xor
lods
in
and
xchg
adc
cmpsb
jmp
cwtl
out
jno
mov
sub
mov
nop
clc
and
popa
adc
test
data16
lcall
insb
push
adc
pop
push
add
imul
mov
jae
inc
popf
shr
add
nop
lea
jmp
movsb
pop
repz
pushl
imul
xchg
fisubrs
leave
in
imul
popf
movsb
das
push
test
int
xor
lcall
mov
lret
btc
mov
daa
fidivrl
fldt
jmp
add
int
scas
repnz
pop
push
push
pushf
jmp
or
fcompl
push
imul
inc
mov
or
xchg
sahf
pop
es
loop
jmp
xor
cltd
inc
lods
add
in
push
xlat
adc
mov
mov
jb
add
test
iret
mov
test
lea
in
ficoml
ja
inc
jnp
or
inc
xor
int3
lods
cltd
push
xor
cs
jge
in
cmp
repnz
repz
push
pop
out
mov
fcomi
cmp
stos
push
test
ds
jmp
and
mov
lods
xchg
popf
ss
mov
repz
push
sub
dec
into
xor
mov
sti
jmp
aaa
mov
scas
ja
ret
cmp
inc
int
add
jae
cmpsb
xchg
add
dec
lret
mov
mov
adc
jo
lods
adc
mov
aaa
xchg
in
loopne
mov
xor
jns
fnsave
lahf
mov
mov
addr16
int
hlt
popa
loopne
mov
sti
inc
lods
enter
pop
pushl
jle
sub
ffreep
sahf
sub
adc
sahf
jecxz
fists
bound
int
lods
add
lds
ja
cli
in
fldenv
rclb
movsl
loope
mov
fisttpl
in
jmp
pusha
sbbl
adc
sub
imul
div
imul
fdiv
dec
dec
mov
inc
and
sbb
fcmovnbe
out
daa
jmp
lds
mov
cltd
sarb
dec
mov
pop
cli
push
test
pop
int
mov
nop
jp
movsb
jnp
loope
inc
sbb
incb
mov
imul
out
jl
jg
cwtl
fld
aaa
inc
mov
gs
xchg
push
mov
mov
mov
adc
push
ds
test
je
loop
add
cmpsl
push
int
addr16
pop
cmc
push
mov
arpl
ret
cmpsb
push
iret
nop
push
or
stc
push
fs
cmc
outsb
popa
push
adc
scas
subb
jmp
sahf
loope
push
or
push
data16
dec
adc
pusha
push
xchg
mov
andl
clc
sbb
fidivrs
jnp
mov
cs
loopne
push
aaa
test
mov
or
fstl
inc
jo
adc
pop
icebp
push
nop
mov
inc
and
fnsave
outsb
cmp
dec
imul
jp
xor
jle
push
inc
xchg
mov
sbb
out
ss
je,pt
xor
mov
cmp
shll
inc
loopne
push
pop
addr16
testb
mov
adc
adc
mov
jp
les
or
xchg
ret
in
sbb
cs
mov
mov
enter
shrl
jns
jg
xor
insb
aas
mov
sub
sbb
add
or
out
xor
lea
out
push
inc
push
mov
sub
aad
lret
pop
xor
jo
add
aas
or
pop
into
je
adc
stos
mov
inc
repnz
sbb
int
push
jo
mov
jne
xchg
pop
and
jge
bound
jl
push
mov
push
or
movsl
cli
lahf
push
or
idivb
sub
jg
inc
lods
icebp
das
out
and
addr16
add
adc
mov
stc
fisubrs
pop
andl
clc
pop
mov
and
cmc
dec
addr16
mov
jp
sbb
int3
sbb
in
jae
cmc
in
fwait
aam
inc
repz
sti
dec
xchg
lret
jno
inc
or
jmp
rclb
sbb
dec
jge
out
and
fs
les
loop
mov
loopne
dec
imul
popa
sub
bnd
imul
pop
mov
sub
jmp
int
lock
pop
in
cmpsl
jge
es
fdivp
and
popf
pop
pop
fcmovbe
sti
xchg
fmul
push
outsl
xchg
mov
push
dec
imul
out
jae
inc
pop
jb
es
and
rcr
std
and
or
lods
out
sahf
xchg
imul
sub
xchg
movsl
sub
in
xchg
inc
and
mov
inc
xor
out
add
fildl
outsl
jne
sub
out
or
fstpt
lock
push
ret
push
clc
push
and
mov
push
sub
pusha
xchg
push
xlat
cmp
movsl
sbb
push
push
ja
inc
xor
inc
mov
call
push
fiadds
in
sbb
push
mov
xchg
adc
hlt
mov
cltd
mov
inc
cmc
sarl
pop
dec
jl
add
adc
cmp
add
add
adc
repz
shr
push
out
cltd
pop
and
and
movsb
push
popa
sub
push
mov
add
cmpsb
mov
std
mov
lods
fcomi
xchg
inc
and
inc
and
jae
fsubl
inc
add
out
mov
xor
adcl
aam
inc
rorb
loop
data16
ljmp
adc
bound
outsb
mov
stos
mov
fsubrs
sti
xchg
imul
push
xchg
and
leave
iret
xor
out
xchg
cmp
sub
mov
aas
inc
mov
test
mov
push
cwtl
loopne
aad
test
cwtl
lods
jmp
pop
add
inc
mov
inc
cmp
pop
lahf
lds
xor
test
adc
cld
push
dec
pop
mov
xlat
mov
pop
xchg
outsb
pop
data16
jns
ret
shrb
mov
and
add
cs
pusha
ret
sub
push
sub
or
dec
inc
pushf
xor
sbb
inc
push
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
jmp
sti
icebp
lods
mov
outsb
fs
add
rdpmc
testl
mov
cwtl
pop
dec
aas
inc
push
rcrb
call
xor
fidivrs
into
adc
iret
jg
lret
mov
int3
push
cltd
and
and
adc
or
pop
cmp
arpl
aaa
sarb
sbbb
inc
mov
lret
scas
mulb
lods
and
shll
sti
testl
cld
add
lds
daa
test
xor
cld
int3
pop
fistl
or
mov
jg
inc
jge
xor
pop
mov
pop
sub
pop
out
loopne
cmp
push
sub
in
pusha
insb
sbb
jecxz
sub
lods
bound
outsb
inc
clc
inc
pop
iret
popf
test
lods
sub
pop
or
std
daa
lret
fsts
adc
nop
mov
push
pop
std
cmp
mov
in
dec
mov
in
xor
xchg
pop
push
dec
and
cld
xor
sub
or
outsb
dec
mov
mov
lret
popf
xor
pop
xor
mov
sahf
lret
push
sub
inc
sbb
enterw
pop
in
lock
xor
pop
or
rol
out
pop
pusha
stos
loopne
sub
aas
mov
jp
addr16
or
mov
rolb
adc
push
mov
in
lods
mov
fsubrs
je
leave
jno
loopne
aam
das
mov
push
jmp
xchg
mov
in
jp
inc
cvttps2pi
dec
add
outsl
sub
mov
addr16
imul
cmp
sub
xchg
dec
xchg
in
jbe
loopne
jmp
cmc
shrl
sub
fisubrs
out
lahf
aas
add
popf
adc
lret
mov
fisubs
mov
test
xchg
icebp
daa
jb
mov
sub
xlat
push
sbb
sub
test
and
ficoml
mov
dec
inc
test
push
sbb
mov
dec
push
out
jne
jl
or
mov
dec
push
call
jae
push
xchg
fnsave
mov
fwait
pop
ljmp
adc
xlat
xchg
cmp
dec
lea
icebp
js
add
out
pop
movsb
xchg
insl
mov
scas
sbb
pusha
int3
jle
inc
enter
sti
cmp
push
xor
pop
mov
push
hlt
addr16
mov
mov
sub
stos
ror
xor
jle
and
push
test
dec
and
push
xor
rcrl
and
mov
push
dec
mov
pop
or
repz
cmp
or
fwait
mov
mov
jno
in
es
lds
pushf
jecxz
ret
push
aaa
aam
pusha
scas
clc
or
sub
leave
subb
adc
lods
jno
add
test
ljmp
push
mov
arpl
adc
in
in
or
pusha
adc
cld
lock
arpl
scas
je
fisttps
dec
xor
cmc
or
pop
ret
sub
inc
push
jbe
mov
jb
mov
loopne
and
iret
sti
push
pop
mov
cli
mul
xor
sar
mov
fstl
mov
pusha
xchg
fdivrl
inc
rclb
jo
cld
sbb
inc
fwait
push
int
mov
xor
rol
mov
fsubp
cwtl
jle
sti
out
pop
push
push
and
sbb
or
fldl
and
insb
xor
cmpsb
mov
jnp
add
rol
pop
and
jno
push
pop
ljmp
jbe
mov
ficompl
xor
jo
into
jg
fcompl
pop
xor
ja
scas
sub
dec
mov
and
aam
popa
and
xchg
cmpsl
dec
imul
xor
insb
cmpb
add
jle
pop
xchg
nop
shl
test
mov
inc
outsl
shrb
push
sbb
jb
nop
xchg
xchg
mov
push
dec
dec
mov
sti
mov
adc
add
cmc
pop
sar
test
pop
sbb
push
cmpsl
int
les
inc
sbbl
sti
pop
shll
sbb
mov
cmpsl
cwtl
jae
outsb
inc
add
push
fiadds
mov
imul
push
mov
frstor
lods
add
jl
data16
jge
cmpsb
lahf
sub
das
cmpsb
add
cs
cmp
dec
adc
loope
data16
mov
pop
cmp
sub
test
dec
mov
xchg
xor
push
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
cmp
jae
xorl
shrd
movl
shr
ret
adcl
mov
xorl
xor
sbbl
and
shr
ret
xor
xor
ret
push
mov
sub
cmpl
movl
movl
jmp
movl
notl
jle
push
pushl
call
notl
andl
andl
sbbl
adcl
movl
mov
incl
mov
adcl
movl
mov
movb
sbbl
movb
and
movb
adc
movzbl
andl
mov
sbbl
sub
addl
imul
movzbl
andl
push
and
andl
mov
addl
movb
movb
andl
movb
movb
negl
mov
mov
negl
add
adcl
imul
sbbl
mov
subl
or
mov
sbbl
and
mov
movl
cmp
ja
mov
mov
mov
or
mov
mov
cmpl
not
mov
movl
jmp
movl
jb
push
push
call
dec
xor
add
mov
add
adc
xorl
xor
adc
mov
movzwl
addl
movzwl
sbbl
shr
notl
or
sub
mov
subl
movb
notl
movb
mov
orl
mov
xor
xorl
add
mov
or
mov
movzbl
and
cltd
sub
push
cmpl
not
mov
mov
jmp
mov
je
push
push
call
mov
adc
xor
neg
adcl
or
adc
pop
adcl
idiv
mov
addl
movb
addl
movb
xorl
mov
mov
negl
add
movzbl
movzbl
xorl
cltd
idiv
mov
movl
cmp
jae
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
idiv
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
sub
mov
and
xor
imul
mov
push
sub
push
movl
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
or
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
and
add
cmp
jb
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
lea
add
movl
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
xor
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
add
imul
xor
mov
div
mov
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
xor
and
mov
add
mov
add
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
push
push
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
push
mov
mov
mov
push
push
push
call
push
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
push
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
or
xor
mov
xor
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
and
push
cmpl
not
mov
not
not
jmp
movl
movzbl
je
push
pushl
pushl
push
pushl
call
sbb
adc
adc
subl
add
push
adc
mov
cmpl
mov
mov
mov
jmp
mov
movl
ja
pushl
push
pushl
push
push
call
sbb
adc
xor
mov
mov
sub
sub
xor
add
xor
or
sub
and
addl
addl
sbb
mov
shrd
shr
cmpl
movl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
push
pushl
call
addl
orl
mov
add
mov
add
mov
sub
mov
mov
mov
sub
sub
xor
movzwl
sbb
mov
neg
xor
sub
or
mov
mov
cmpl
mov
mov
jmp
movl
mov
jne
call
dec
addl
xor
sub
inc
andl
mov
mov
adc
shl
cmpl
mov
movl
movl
jmp
mov
movzbl
jle
push
push
call
mov
adc
mov
adc
xor
inc
xor
or
or
notl
add
movl
mov
cmpl
mov
mov
jmp
mov
jge
pushl
push
pushl
pushl
call
andl
or
add
xor
or
shrd
xor
orl
shr
xorl
mov
and
mov
xor
or
or
cmpl
not
mov
mov
movzwl
jmp
mov
mov
jge
push
pushl
call
movzwl
xor
movzwl
add
mov
or
mov
sub
or
addl
xor
mov
mov
and
mov
mov
mov
mov
inc
mov
xor
mov
mov
mov
mov
cmpl
mov
movl
jmp
movl
movl
jle
pushl
push
pushl
pushl
call
not
andl
adc
sub
xor
shl
orl
xor
and
shld
sub
shl
inc
mov
orl
xor
addl
xor
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
cmpl
movl
movl
not
jmp
mov
movzwl
jle
push
push
push
call
sub
adc
or
sbb
adcl
sbbl
xor
adc
mov
mov
mov
and
mov
xor
shld
sbbl
shl
xor
xor
cmp
jne
movl
cmp
movl
je
cmpl
mov
movl
jmp
mov
not
jbe
push
pushl
push
pushl
call
xor
mov
add
adc
and
adc
not
mov
subl
mov
cmpl
mov
movl
mov
jmp
movl
mov
jg
pushl
pushl
pushl
call
subl
mov
add
add
add
xor
shl
mov
xorl
xor
shr
adcl
or
mov
mov
movzwl
or
mov
mov
and
mov
mov
cmpl
movl
movl
movl
jmp
movl
ja
pushl
push
call
and
orl
subl
subl
sbbl
orl
and
cmpl
movl
movl
movl
movl
jmp
movl
je
push
call
sbbl
movl
orl
andl
adcl
sbbl
xor
subl
cmpl
movl
movl
movl
jmp
movl
not
jb
pushl
pushl
call
xorl
sbb
add
addl
subl
movl
and
push
pop
sbbl
sub
mov
add
mov
lea
mov
mov
mov
sub
and
mov
xor
or
xor
mov
xorl
xor
xorl
shr
subl
shl
or
add
mov
cmpl
movl
mov
jmp
mov
mov
jae
push
call
add
sbb
or
movl
and
movl
add
mov
mov
andl
xor
movl
shr
shl
adcl
or
push
orl
lea
adcl
push
adcl
lea
push
call
cmpl
mov
movl
jmp
movzbl
jbe
push
push
pushl
pushl
pushl
pushl
call
orl
addl
movzwl
sub
mov
movzwl
sub
mov
sub
movl
sub
mov
mov
subl
xor
subl
shr
mov
xor
shl
or
cmpl
mov
mov
mov
jmp
movl
mov
jne
call
add
sub
add
adcl
mov
or
movzwl
or
push
lea
sub
push
or
mov
mov
sbb
shrd
sbb
shr
xor
add
xor
or
sub
imul
mov
notl
mov
xor
addl
xor
or
xorl
lea
adcl
push
adcl
shl
subl
call
mov
mov
xor
shl
cmpl
mov
movl
mov
jmp
movl
jne
push
push
call
xorl
xorl
add
orl
and
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
push
call
mov
mov
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
mov
rol
mov
xor
mov
cmp
je
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
sub
mov
adcl
or
movl
mov
jne
sub
mov
adcl
mul
ret
push
mul
cmpl
movzbl
movl
push
pop
jmp
mov
mov
je
push
push
pushl
push
push
push
pushl
call
mov
sbb
mov
not
movzwl
adc
mov
mov
add
mov
xorl
sbb
mov
adc
mov
xorl
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
push
mov
and
sub
push
push
push
mov
pushl
call
test
jg
movl
movl
movl
push
dec
movl
mov
xor
mov
andl
push
notl
push
orl
push
call
sbbl
push
andl
push
and
and
push
subl
push
andl
call
cmpl
mov
movzwl
notl
movl
jmp
movl
jbe
push
push
pushl
call
neg
subl
dec
sbb
subl
xor
or
mov
sub
or
mov
mov
xor
or
cmpl
movl
not
jmp
mov
jg
push
push
push
push
call
sbbl
xor
movzwl
and
orl
xor
mov
xor
or
mov
movl
movl
or
movl
sbb
movl
mov
xor
or
sub
add
movl
cmpl
mov
mov
jmp
mov
movl
jg
push
push
pushl
call
dec
xor
inc
adc
movl
xor
add
xor
mov
adcl
movl
cmpl
mov
movl
jmp
mov
mov
jg
push
push
call
addl
mov
sbb
sbbl
mov
mov
sub
xor
xor
or
xor
movl
or
sub
sbb
mov
cmpl
mov
movl
notl
jmp
mov
movzbl
jg
pushl
call
xor
movzbl
sub
mov
mov
sub
add
adc
xor
mov
mov
mov
andl
or
or
mov
or
mov
sub
mov
mov
sbb
or
mov
xor
subl
xor
addl
and
adcl
and
cmp
movl
jne
cmp
jne
movl
decl
movl
xor
movl
adc
movl
xor
or
mov
sub
xor
movl
mov
and
mov
sub
adc
mov
orl
imul
subl
and
notl
imul
mov
xorl
pushl
or
imul
adc
xor
mov
movl
div
mov
xor
cmpl
movl
notl
mov
jmp
movl
je
pushl
pushl
push
pushl
push
call
sbb
adcl
or
mov
sbb
mov
add
cmpl
mov
mov
not
jmp
mov
jb
pushl
push
call
neg
mov
mov
xor
sbb
sub
sbb
cmpl
movzwl
mov
movl
jmp
movl
jl
pushl
call
sbb
or
addl
and
sub
xor
add
mov
sub
dec
mov
sbbl
sub
addl
or
xor
adcl
pushl
pushl
addl
call
addl
pushl
call
movl
cmpl
mov
movl
not
jmp
mov
mov
jge
pushl
call
and
add
adc
xor
movl
adc
movl
xorl
movl
movl
movl
mov
mov
xor
mov
mov
subl
add
movzwl
mov
adc
add
mov
add
adc
and
xorl
mov
orl
and
mov
movl
movl
subl
movl
orl
movl
dec
cmp
jne
and
movl
mov
xorl
mov
subl
movl
mov
subl
call
andl
lea
mov
cmpl
movl
movzbl
jmp
movl
jb
push
call
adc
sub
and
andl
mov
xor
add
sub
imul
xor
sub
lea
mov
sub
mov
sbb
mov
add
mov
mov
decl
xor
shl
and
shr
movl
or
mov
or
mov
mov
cmpl
movl
mov
movl
jmp
mov
movl
ja
pushl
push
push
pushl
call
and
xorl
add
sub
addl
addl
cmpl
not
mov
jmp
not
jae
push
call
adc
subl
and
xor
add
adc
and
mov
cmpl
not
mov
jmp
movl
movl
jbe
push
pushl
call
or
andl
and
sub
adc
mov
and
mov
mov
mov
shrd
shr
and
mov
not
mov
movl
xor
xor
andl
or
mov
sbb
mov
mov
orl
push
addl
pushl
subl
lea
andl
push
adcl
shl
orl
call
addl
lea
addl
push
mov
mov
sbbl
lea
orl
push
mov
orl
lea
adcl
mov
adcl
mov
mov
push
call
subl
push
andl
push
pushl
xorl
call
andl
mov
or
mov
and
mov
cmpl
mov
movl
mov
jmp
mov
jg
push
pushl
push
push
push
call
sbb
xor
or
mov
adc
xor
adc
mov
shr
not
shl
or
sub
mov
or
xor
mov
notl
lea
xor
mov
lea
movzbl
or
mov
cmpl
mov
movl
movl
mov
jmp
movl
movl
je
push
call
or
add
mov
or
mov
xor
inc
add
not
mov
mov
and
mov
cmpl
mov
mov
mov
jmp
movl
mov
jne
push
call
or
sbb
addl
add
orl
mov
mov
sub
sub
movzwl
sbb
mov
and
sub
cmpl
movzbl
mov
movl
jmp
movl
jae
pushl
call
add
add
movzbl
add
add
movl
add
lea
andl
xor
cmpl
mov
mov
movl
jmp
mov
jg
push
pushl
pushl
push
push
call
or
adc
xor
mov
adc
mov
movl
movl
movl
cmpl
movl
not
jmp
movl
not
jle
push
call
subl
not
orl
and
and
mov
or
mov
movl
mov
mov
add
mov
not
mov
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
shr
or
or
mov
mov
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
cmpl
movl
mov
movl
jmp
movl
jbe
push
pushl
push
pushl
push
call
adcl
sbb
sub
adc
mov
xor
mov
mov
mov
sub
xor
movl
cmpl
mov
movl
movl
jmp
mov
mov
jle
push
push
pushl
pushl
call
adcl
notl
dec
add
subl
sbb
not
sub
movl
mov
subl
mov
xor
xor
mov
xor
and
adc
mov
sub
xor
or
and
cmpl
mov
mov
not
jmp
mov
jl
push
push
call
inc
xorl
and
sub
sub
add
mov
add
xor
mov
or
movl
movl
mov
sbb
mov
add
xor
sub
adcl
mov
or
imul
adc
xor
mov
or
div
subl
sub
and
mov
movl
sub
movl
movl
mov
mov
adc
movl
cmpl
movl
mov
movzbl
jmp
mov
movzbl
jg
pushl
push
push
push
call
or
xor
or
or
mov
sub
add
inc
movl
mov
sbb
mov
movl
movl
mov
xor
mov
imul
adc
add
xorl
and
adc
sub
cmpl
mov
movl
mov
mov
jmp
mov
je
pushl
push
push
call
add
adc
neg
and
not
mov
sub
or
mov
mov
cmpl
mov
movl
mov
movl
jmp
movl
jne
push
pushl
push
call
inc
or
dec
sub
adc
adc
or
add
sub
add
mov
xor
adcl
div
not
mov
sub
and
mov
add
addl
mov
cmpl
mov
mov
mov
jmp
mov
mov
jle
push
push
call
add
add
sbbl
subl
xorl
movl
movl
dec
movl
cmpl
movzbl
mov
jmp
mov
jne
pushl
pushl
pushl
push
call
sbb
orl
movzwl
adc
add
mov
mov
add
mov
xor
add
mov
andl
xor
movl
div
add
and
mov
or
cmpl
movl
mov
jmp
movl
movl
jg
push
push
push
call
mov
sbb
mov
add
mov
movzbl
sub
subl
decl
adc
cmpl
not
mov
jmp
mov
movl
jae
push
push
push
push
call
xor
sbbl
mov
sbb
mov
inc
mov
mov
sub
sbbl
cmpl
mov
movl
mov
jmp
mov
movl
jg
pushl
call
mov
adc
mov
mov
adc
mov
mov
xor
xor
or
mov
sub
sub
adcl
mov
and
movl
movl
movl
and
movl
mov
sub
mov
orl
xor
sbb
xor
push
xor
pop
orl
div
mov
andl
xor
div
mov
or
sub
xor
mov
xor
movl
inc
mov
movzwl
sbb
mov
xor
div
imul
adcl
xor
xor
sub
imul
xor
dec
mov
adc
movl
cmpl
movzwl
movl
mov
jmp
movl
mov
jg
pushl
push
pushl
pushl
pushl
pushl
push
push
pushl
push
push
call
adc
xor
mov
adc
mov
mov
xor
mov
xor
or
xor
mov
movzwl
sub
or
or
movl
movl
cmpl
mov
movl
movzwl
jmp
mov
movl
ja
pushl
call
xor
dec
adc
movzbl
sbb
xorl
mov
and
mov
xor
subl
div
mov
sub
mov
orl
imul
xor
add
mov
or
add
xor
sbb
mov
sub
movzbl
or
mov
mov
movl
cmpl
notl
mov
mov
mov
jmp
notl
mov
jg
pushl
call
notl
adc
adc
sbb
movl
mov
or
and
notl
and
or
xor
cmpl
mov
mov
movl
jmp
movzwl
mov
jg
pushl
push
pushl
call
movzbl
sbb
add
negl
sub
dec
mov
movl
movl
movl
cmpl
movl
movl
movl
mov
jmp
mov
jb
pushl
push
push
call
mov
and
mov
neg
xor
andl
and
movl
mov
xor
and
add
xor
add
or
or
cmpl
notl
movl
mov
movl
jmp
movl
jle
push
pushl
push
push
pushl
pushl
pushl
push
call
adc
mov
add
or
sub
neg
sbb
sub
mov
inc
movl
cmpl
mov
movl
mov
jmp
mov
mov
jne
push
pushl
call
decl
decl
sbbl
and
movl
movl
movl
xor
mov
shr
xorl
sub
cmpl
movl
mov
mov
mov
jmp
mov
movl
jbe
pushl
pushl
call
add
xorl
mov
sbb
and
adc
or
xor
mov
lea
sbbl
push
adcl
call
addl
mov
adc
or
cmpl
mov
mov
jmp
movl
movl
jbe
push
pushl
call
sub
mov
xor
or
sub
imul
negl
sbbl
and
mov
orl
or
xor
and
lea
adc
mov
movl
movzwl
xor
movl
movl
xor
xor
or
movl
movl
and
movl
cmpl
mov
not
movl
movl
jmp
mov
notl
jg
push
call
sbb
orl
xorl
add
xor
xorl
xor
xor
xor
mov
sub
or
movl
sbbl
movl
mov
mov
mov
sub
xor
mov
sub
and
cmpl
movzbl
movl
jmp
movl
movl
je
push
push
push
push
push
call
sub
or
notl
sub
xor
add
add
mov
sbb
sub
and
sub
or
mov
sbb
lea
mov
mov
add
mov
add
mov
mov
imul
sbbl
and
cmpl
mov
mov
mov
movzbl
jmp
notl
mov
jbe
pushl
pushl
pushl
push
pushl
pushl
call
xorl
add
movzbl
adc
not
or
imul
mov
lea
mov
addl
movl
movl
movl
movl
mov
sbb
mov
or
mov
movl
xor
andl
xor
sbbl
mov
call
cmpl
movl
movl
movzbl
movzwl
jmp
movl
movl
jb
call
sub
and
and
add
adc
subl
sub
sbbl
mov
mov
sub
mov
mov
adcl
xor
xor
mov
call
xorl
or
or
sub
mov
or
mov
andl
xor
xorl
xor
mov
call
mov
cmpl
movl
mov
movl
jmp
movl
jbe
call
or
xor
inc
or
andl
cmpl
notl
mov
jmp
mov
movl
je
push
pushl
call
mov
mov
and
sbb
not
mov
sub
sbb
or
and
mov
movl
mov
mov
xor
xorl
xor
addl
mov
mov
xor
mov
xor
or
mov
sub
mov
movl
mov
mov
movl
call
cmpl
mov
movl
mov
jmp
movl
movl
ja
push
push
call
and
addl
adcl
movzbl
xor
or
mov
adcl
or
mov
or
subl
push
push
subl
push
andl
push
orl
call
movzbl
mov
cmp
movl
jne
mov
sub
mov
mov
xorl
mov
subl
xor
xorl
xor
mov
call
adc
mov
add
mov
xor
mov
mov
incl
xor
addl
xor
xorl
mov
xorl
call
or
and
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
mov
sub
mov
xor
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
sub
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
or
mov
xor
mov
sub
mov
mov
sub
mov
xor
mov
div
mov
xor
div
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
notl
jmp
movl
mov
jle
pushl
push
push
pushl
call
negl
addl
orl
adc
sbbl
sbbl
not
push
push
not
mov
or
movl
jne
cmpl
movl
mov
mov
jmp
mov
jl
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
sbb
and
or
xor
xor
mov
sub
add
add
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
je
add
mov
mov
pop
pop
movl
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
shld
shl
ret
xor
mov
addl
xor
and
shl
ret
xor
xor
ret
