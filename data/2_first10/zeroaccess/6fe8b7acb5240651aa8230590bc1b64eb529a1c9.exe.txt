push
mov
sub
mov
mov
jmp
adcb
shrl
pop
jle
jle
outsl
jge
jle
xlat
cmp
rol
pop
add
add
rcrb
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
repz
popa
jns
and
rcrl
js
lcall
mov
addl
push
mov
xor
mov
mov
in
xlat
dec
pop
sub
add
lds
and
adcl
sti
sub
adc
es
adc
popf
and
sbb
shll
test
xlat
call
iret
and
int
jmp
push
loop
aad
int
scas
ficoml
inc
inc
out
in
mov
inc
fistpll
dec
adc
mov
or
lock
jbe
inc
repnz
test
daa
pop
cmp
call
adcb
fnstenv
cmp
dec
inc
mov
aaa
jae
xor
pop
inc
mov
cmpsw
and
pop
test
sbb
rorb
inc
push
mov
ret
pop
push
inc
into
xchg
adc
inc
lods
inc
push
in
mov
push
das
jmp
mov
es
sub
push
add
bnd
ljmp
popf
jne
outsb
fcoms
pop
mov
jns
inc
out
ret
fwait
push
adc
push
add
or
mov
movsb
sahf
nop
nop
inc
lock
mov
adc
pop
mov
mov
and
imul
out
cld
jns
jmp
cmp
xor
xor
lods
lds
outsb
sub
loope
xchg
dec
popa
addl
lea
lret
insb
push
into
out
dec
dec
inc
fimull
cs
scas
mov
bound
or
and
xchg
stc
mov
dec
inc
mov
dec
in
mov
lcall
push
cwtl
in
or
imul
cmp
fidivs
pop
ljmp
repnz
add
dec
lea
adc
mov
jns
addl
dec
push
add
fdivl
sub
ds
insl
push
add
sbb
or
xchg
out
mov
dec
dec
or
in
in
cld
inc
mov
pop
sar
xchg
into
into
cmpl
les
stos
fwait
arpl
not
mov
xchg
cmp
xchg
cmc
push
add
push
jno
lcall
pop
call
lods
xlat
in
inc
mov
popf
stc
jmp
mov
std
and
orl
push
add
imul
and
arpl
orl
dec
hlt
push
add
insl
mov
or
mov
roll
jle
mov
fsubrs
into
mov
mov
mov
cmp
and
int3
jg
lcall
add
aad
les
xchg
cwtl
fwait
mov
movsl
in
sbb
push
jmp
mov
sub
int3
sub
insl
stc
ret
aaa
pusha
mov
mov
inc
cmpsl
ret
int3
cs
or
adc
out
test
int
jnp
dec
lret
test
stos
mov
mov
popa
lahf
fsub
push
xchg
out
and
out
cmp
add
lock
pusha
add
movl
adc
mov
mov
mov
or
push
push
sbb
mov
movzbl
sbb
xor
and
push
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
jmp
xchg
mov
push
mov
push
out
xor
jge
jle
jge
jle
push
xorb
mov
and
fcmove
negb
aas
rcrb
xchg
mov
cs
push
adc
lahf
ret
rclb
sub
mov
jecxz
test
pop
xchg
and
idiv
ss
lahf
adc
xor
mov
jmp
mov
jb
aad
loope
aas
rcr
push
pop
das
ds
cmc
sbb
outsb
int3
adc
mov
hlt
fs
mov
sbb
sti
pop
push
scas
sub
imul
sub
movsl
push
stos
adc
inc
mov
and
ds
into
shll
mov
ret
scas
cmp
fisubs
scas
arpl
daa
mov
lret
xchg
push
jnp
jmp
sbb
and
hlt
scas
mov
inc
loop
pushf
xchg
insb
mov
andb
xchg
jns
je
dec
mov
cld
rcrl
je
mov
stc
test
lret
cmp
inc
sub
pop
xor
int3
adc
pop
in
pop
xorb
push
stos
xor
add
pop
rolb
sub
std
push
mov
or
ljmp
test
repz
repz
mov
popf
xor
push
sbb
jmp
mov
mov
movsl
push
pop
add
adc
add
stos
mov
dec
xchg
push
stos
pop
rorl
repnz
xor
and
shrl
pop
and
lret
sub
push
jae
les
cld
mov
int3
imul
push
sub
add
inc
adc
add
mov
cmc
repnz
cltd
jle
in
push
xlat
insl
mov
jne
ljmp
xor
mov
orl
xchg
pop
dec
in
lods
sbb
pop
jne
cli
adc
add
inc
mov
push
das
aaa
insb
jb
xchg
mov
push
pop
mov
jno
out
mov
rclb
xchg
or
inc
sub
pop
cmpsb
jle
cwtl
mov
sbb
add
leave
xchg
loope
data16
test
adc
aaa
and
pushf
add
cmpsb
insb
inc
test
in
pop
mov
or
lcall
lahf
mov
adc
and
push
gs
ljmp
popf
ret
leave
jp
add
sbb
mov
imul
in
jne
pop
adc
pop
out
es
dec
sbb
stc
push
test
popa
pop
and
scas
dec
push
pop
mov
mov
decl
push
aad
and
mov
cmpsl
xchg
inc
xchg
sub
js
pop
push
mov
fiaddl
call
pop
push
shlb
xchg
test
shll
sbb
outsl
cmpsl
dec
cmc
lret
mov
push
leave
loope
rcll
call
sbbb
pusha
mov
call
cmp
leave
div
dec
and
adc
mov
push
push
fisubl
push
test
lods
xchg
inc
push
cmpsb
adc
insl
jne
xchg
shlb
cmpsl
lods
mov
xor
or
cmc
fidivl
inc
lea
mov
insl
sbb
push
adc
mov
out
xchg
imul
jnp
mov
and
out
or
jb
and
outsl
or
jno
sub
push
stos
or
div
dec
js
mov
aas
jae
lret
mov
jbe,pt
and
mov
cmp
hlt
in
mov
adc
repz
and
cmp
fcomi
adcl
push
scas
pop
out
add
fcompl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
mov
movl
movl
or
movl
add
movl
xor
mov
xor
xor
add
mov
movl
sbb
movb
subl
mov
xor
add
sbbl
mov
mov
xor
xorl
add
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
xor
add
not
mov
sub
mov
add
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
xor
jmp
mov
mull
cmp
mov
jle
outsl
jge
jle
ficoml
mov
ret
sbbl
mov
sub
cmpsl
lret
or
aad
cmpsw
jmp
mov
jne
outsl
jns
ja
xor
js
lcall
dec
orb
push
mov
pop
orb
mov
sahf
das
mov
push
out
push
push
pop
aad
dec
push
pop
jbe
jg
aaa
jl
or
sub
xor
pushf
xor
sub
add
div
push
dec
push
sub
out
out
mov
xchg
jns
hlt
aaa
sti
dec
fs
lock
xchg
jbe
jb
and
sbb
hlt
ficomps
cmp
mov
xor
lock
lret
push
popa
pop
push
and
sbb
adc
cmp
js
jbe
pop
popa
cmp
gs
mov
iret
inc
inc
ljmp
jo
movsl
test
adc
inc
test
movsb
pop
ficoms
sbb
mov
add
cli
andl
rorb
push
sub
xor
cwtl
ja
js
in
cld
fs
jp
test
mov
scas
push
push
inc
fidivrl
adc
lock
insl
pop
loopne
not
push
popa
leave
cmc
out
jmp
repnz
cmc
sarb
movsl
test
js
cwtl
push
in
xor
imul
subl
popa
sub
testb
inc
adcb
fists
dec
and
dec
imul
adc
xor
mov
mov
jb
ljmp
mov
add
pop
cmpl
sbb
pop
mov
xchg
scas
mov
loope
mov
cmp
lods
cmp
sbb
lret
inc
popf
mov
pop
lcall
test
dec
lahf
jmp
xlat
jmp
jmp
add
xchg
inc
dec
adc
xchg
mov
and
stos
shlb
cmp
insl
jb
mov
pop
jle
shlb
ficomps
xor
shll
add
js
and
outsl
jl
sti
ljmp
sbb
xor
mov
mov
lock
lds
jb
aas
dec
jg
stc
xchg
push
fisttps
int3
mov
pop
iret
mov
in
mov
dec
ffree
dec
es
mov
jae
jnp
imul
push
sub
push
pop
stos
cmp
lods
mov
mov
adc
test
scas
mov
sahf
inc
pushf
fldl
cmp
adc
dec
lahf
lods
mov
cmp
nop
sahf
sub
repnz
sub
scas
adc
lds
push
in
loope
mov
sub
mov
cmp
add
dec
mov
adc
add
vfrczsd
or
hlt
ss
lods
mov
fldenv
lock
push
sbb
stos
cmp
stos
pop
test
stos
mov
jp
xlat
xlat
lret
jp
jbe
add
push
orl
cmp
shlb
or
mov
sarl
push
push
ss
mov
add
movsb
mov
daa
test
mov
adc
lcall
adcl
jmp
mov
mov
test
imul
pop
xor
test
call
dec
or
mov
push
mov
jnp
mov
xchg
add
xorl
xchg
jle
mov
add
push
jae
sub
stc
lods
mov
xchg
or
in
aad
sub
push
push
mov
mov
mov
sub
add
mov
mov
mov
xor
jmp
lahf
in
leave
decl
imul
add
or
outsl
jge
jle
mov
out
or
sbb
mov
mov
pop
ds
lret
or
mov
or
int
test
stos
push
sbb
repz
test
out
testb
bound
fsubrs
repnz
mov
test
roll
das
ljmp
mov
cmpsl
cmpsb
dec
jb
push
testb
push
cwtl
mov
push
inc
rclb
rclb
push
imul
and
sbb
jae
push
jg
sub
lods
std
outsl
jmp
in
popf
push
inc
dec
sub
ds
mov
insb
loop
mov
adc
and
adc
jl
je
in
scas
add
call
mov
push
add
mov
push
cmp
sub
and
cli
movsb
stos
gs
out
adc
lcall
and
fdivr
jmp
ja
pop
jmp
subb
lock
in
push
xchg
pop
sub
sbb
inc
aam
add
loop
xor
mov
adc
and
andb
data16
pop
sarb
dec
in
jne
movhps
stc
or
lods
out
repz
lahf
or
mov
jmp
and
add
mov
xchg
adc
mov
std
inc
cmpsb
int3
dec
mov
sbb
pop
faddl
ret
xchg
in
sbb
ret
mov
int3
aad
loope
repz
sbb
in
pop
popf
xlat
jp
ret
sub
push
pop
cltd
mov
popa
testl
jge
add
xchg
pusha
sub
push
and
cltd
addl
das
dec
add
inc
mov
in
or
push
ds
out
adc
cmc
cli
xor
jecxz
mov
jge
inc
bound
ret
jecxz
stos
out
xchg
cmp
mov
test
or
movsb
adc
sbb
mov
loop
fsubr
lods
inc
jns
pop
xchg
test
cmp
sbbb
mov
lods
mov
cmp
adc
dec
and
out
cmp
lds
push
add
lret
mov
push
add
into
xchg
xchg
loopne
adc
hlt
jmp
mov
cs
mov
loope
xor
outsl
into
push
or
and
hlt
clc
cmp
out
xchg
cli
and
pop
sbb
hlt
push
out
cmpb
xchg
or
xchg
sub
cli
push
leave
push
dec
jle
divl
js
rcl
push
fs
mov
add
push
cmp
rol
push
xlat
and
sbb
out
mov
and
sub
out
cmp
push
adc
mov
cmpsb
mov
sbb
cmpb
adc
adc
leave
pop
xchg
jmp
js
inc
ret
cmp
push
in
mov
out
pushf
inc
jns
push
pop
adc
xchg
lock
es
insb
mov
lds
fisttpll
pop
jns
shll
xchg
lods
adc
ds
lods
loopne
or
fcompl
pop
lret
out
lret
lds
cmpsl
jnp
jo
hlt
jmp
mov
pop
lret
mov
jbe
test
enter
scas
dec
cmpsb
adc
xor
inc
jne
or
cmpb
push
out
and
push
je
loope
popf
jmp
shl
cltd
push
into
cmp
mov
xchg
inc
mov
daa
mov
xchg
test
fwait
inc
and
inc
pop
jae
push
fdivl
cltd
jne
lahf
xchg
mov
shrb
rorb
mov
pop
xor
jo
in
or
sbb
mov
push
inc
push
jb
add
sub
cmc
cmpsb
rcrb
and
movsb
lea
inc
mov
mov
xor
mov
not
mov
or
mov
and
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movzwl
or
mov
xor
add
orl
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
mov
mov
mov
jmp
rorb
dec
inc
push
push
push
sbb
std
or
jge
jle
repnz
cmp
out
adc
out
mov
and
cmp
mov
dec
mov
adc
bound
pop
stc
xchg
mov
cmp
xor
xlat
je
sub
fcoms
int
pop
pop
jns
add
mov
pop
sub
sub
ss
aad
sub
insb
mov
inc
pop
dec
mov
test
pcmpgtw
outsl
out
sub
shll
or
push
add
cwtl
fstp
inc
push
repnz
and
dec
xlat
fwait
aaa
cmp
mov
out
mov
mov
in
pop
adc
mov
mov
jo
mov
inc
roll
dec
js
xor
into
outsl
ret
gs
repz
scas
add
pop
mov
mov
mov
movsb
loop
or
mov
and
sbb
es
and
imul
notl
jb
add
mov
rcr
add
sbb
fidivl
inc
cmpsb
sbb
aam
idiv
jge
mov
pop
testl
or
addb
cmpsl
xchg
mov
andb
sub
xor
daa
inc
adc
sbb
add
push
lock
repnz
push
movsl
pop
add
jnp
in
jnp
clc
mov
xor
dec
add
pop
mov
ret
stos
push
mov
les
lods
mov
cmp
and
jno
rcrb
xor
fildl
xchg
leave
xlat
adc
adc
sbb
cmp
push
push
lret
fiadds
out
sbb
ret
bound
dec
dec
fwait
in
xchg
outsb
jmp
pop
xlat
fstpl
mov
xor
cmp
jbe
mov
dec
cmp
inc
mov
incb
popf
pop
outsl
xor
sbb
call
loop
fs
je
cmp
add
adc
imul
into
nop
rcl
out
bound
imul
pop
popa
and
jnp
pop
push
xchg
stc
in
mov
stos
cmpsl
std
in
adc
jnp
cmc
jns
and
push
addb
pop
je
cmp
in
push
mov
and
sub
mov
jb
imulb
jp
stos
scas
push
inc
popf
shlb
pop
fnstenv
fiaddl
pop
rcrl
mov
xchg
mov
ret
sbb
mov
fdivs
sbb
leave
or
insl
pusha
mov
outsb
repnz
fstl
mov
add
push
mov
jecxz
and
adc
std
sbb
or
jg
ret
popl
shl
ret
sbb
adc
rolb
pop
and
int
dec
es
lea
out
cmp
shlb
xor
mov
lret
cwtl
stos
add
jp
gs
ror
outsb
dec
in
sbb
shll
xchg
nop
and
leave
call
push
push
fwait
or
ret
loopne
add
cmp
in
add
pushf
scas
mov
fadds
mov
pop
call
sbb
mov
les
out
int
mov
je
pop
aas
jmp
and
repz
jl
cmp
rorl
mov
jge,pn
fwait
or
rcll
out
add
mov
mov
aam
adc
mov
sbb
roll
lahf
lock
cmp
ja
in
mov
inc
inc
aam
adc
mov
mov
testl
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
jmp
xor
mov
mov
mov
sbb
adc
stos
or
jle
fnstcw
icebp
sbb
scas
inc
mov
mov
jge
dec
or
stc
or
cmp
or
xchg
pop
nop
and
mov
push
outsb
inc
fiadds
popf
xchg
lcall
jb
dec
inc
les
outsl
dec
incl
cmp
mov
jnp
ret
jae
sti
int
fists
jmp
aas
or
dec
pop
popf
repz
lcall
out
test
inc
jae
dec
add
mov
sub
mov
out
push
xor
test
lahf
out
popa
mov
mov
daa
xchg
inc
mov
and
fdivrl
fistps
mov
scas
mov
jb
jns
inc
inc
hlt
es
xchg
xor
adc
inc
add
push
fsts
xlat
inc
cmpl
mov
lds
stc
xor
jmp
sbb
shl
sub
outsb
add
push
adc
loop
repnz
push
or
pushf
test
loope
fstpt
pusha
pop
call
movsb
mov
sbbl
sahf
pop
mov
inc
dec
std
add
fadds
out
mov
sbb
repz
sub
push
pop
popf
dec
mov
mov
adc
and
pop
lret
or
pop
out
fiadds
bnd
cli
insb
pop
popf
pop
test
rcr
xlat
push
xor
pop
cld
in
xor
pop
sub
or
aad
mov
scas
gs
sti
mov
iret
rol
ss
lods
aad
and
movb
sub
psubd
into
cmp
xchg
mov
cwtl
jae
call
popf
test
xor
dec
dec
inc
cmp
imul
push
push
addb
mov
mov
loopne
lods
mov
dec
mov
cmp
ss
dec
jge
and
in
jns
cmp
or
xchg
and
lret
imul
ret
jge
pop
fildl
test
out
xchg
jnp
inc
movsl
jecxz
daa
jl
xor
mov
or
push
mov
sarl
mov
outsl
mov
lea
cmp
int3
data16
lahf
pop
ret
out
fdivrs
sbb
mov
xor
jae
xchg
sti
mov
jae
sbb
dec
ja
ljmp
dec
mov
dec
test
jns
loop
fstpt
sbb
nop
adc
dec
out
aaa
arpl
sbb
sub
repnz
sahf
pop
and
xchg
insl
push
push
mov
cmpsl
ret
adc
ret
pop
add
mov
cmpsb
shll
add
pop
ret
pop
pop
or
loopne
dec
out
dec
mov
test
into
and
mov
subb
adc
mov
jmp
call
pop
mov
movsb
in
loop
int3
push
sbb
mov
dec
xchg
add
mov
shl
sti
push
xchg
and
mov
out
push
or
out
int3
ret
jmp
mov
dec
sbb
adc
addb
inc
jbe
iret
sub
aam
xchg
xchg
scas
arpl
cli
aam
xor
adc
fdivrl
mov
dec
sbb
xchg
pop
int3
mov
inc
mov
and
outsl
mov
lcall
or
les
aam
stc
adc
nop
push
sti
or
stos
cwtl
and
adc
mov
xchg
mov
js
arpl
lret
mov
cmpsl
fnstcw
xor
in
inc
loop
stos
add
add
inc
call
add
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
stos
addr16
in
loope
jno
jo
fs
jle
jge
jle
orl
adc
cmp
jnp
aam
jo
sbb
cmp
xor
mov
mov
fiaddl
pop
shrl
mov
xchg
jno
inc
jns
in
and
mov
enter
push
mov
out
fs
adcb
insb
dec
inc
sub
push
fmuls
pop
inc
lret
xchg
loop
jmp
dec
roll
in
sub
push
mov
inc
mov
loop
pop
out
mov
sub
call
lea
sbb
mov
insb
and
cmp
das
dec
jns
add
pop
pop
inc
out
out
mov
lcall
int3
cli
stos
mov
sbb
ret
shl
mov
les
scas
cmp
sbb
out
loop
bound
loope
ficompl
dec
bound
aad
cmp
add
nop
and
pop
adc
outsb
fidivrs
mov
or
incb
mov
jecxz
lcall
aam
in
sarb
and
sub
mov
sub
dec
sahf
cwtl
mov
fnsave
addr16
out
inc
scas
mov
mov
stos
pop
pop
pop
mov
mov
lahf
stos
pushf
jmp
inc
in
mov
fisttps
jg
in
adc
test
mov
dec
test
push
xchg
fisubrl
cmp
data16
pop
imul
test
and
fs
iret
xor
enter
loop
xchg
sbb
int3
mov
cmpl
lods
pusha
stos
or
inc
daa
outsl
lret
pop
out
shrb
jno
xchg
cmp
add
fisubrs
push
lret
shll
mov
mov
mov
test
xor
out
or
orb
das
pop
sbb
xchg
sbb
es
push
jge
iret
xchg
push
jg
push
mov
ss
jmp
jg
pop
clc
in
or
cld
movsl
mov
mov
cmc
cmpsl
or
xchg
or
je
mov
aas
jle
popf
pop
int3
xlat
sbbb
into
fildl
jb
cltd
cli
lahf
arpl
jge
aad
sub
fldenv
pusha
test
push
lds
inc
scas
sbb
inc
popa
jecxz
insl
mov
inc
push
mov
or
adc
push
inc
xor
sub
iret
xchg
add
repnz
sbb
add
pop
jp
add
or
lea
adc
fdivrp
mov
fdivl
pop
push
shrb
stos
mov
lret
loope
sbb
jns
dec
pop
les
test
aas
rol
shr
mov
nop
xchg
outsl
xor
imul
int
xor
mov
push
mov
add
movsb
jne
and
xchg
pop
mov
jg
ficompl
push
xchg
jo
mov
andb
xor
fsts
mov
data16
mov
pusha
repz
ja
outsb
stos
mov
mov
pop
imul
mov
mov
cli
mov
cmp
aad
loopne
add
test
bound
cmp
test
and
jno
pop
push
stc
repz
movsl
nop
mov
xchg
mov
iret
movsl
push
pop
add
add
lcall
xor
sbb
and
sub
xor
add
jns
ja
mov
mov
sub
cli
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
jno
mov
cs
mov
jno
aas
mov
jle
fnstsw
lret
std
push
jns
cli
popa
in
jmp
adc
cmovle
mov
xor
leave
in
test
sub
sbb
xor
lods
loopne
int
mov
imul
imul
or
cwtl
cltd
data16
std
sbb
inc
test
mov
outsb
rorl
in
adc
xchg
xlat
lock
cmpsb
repz
mov
icebp
call
jmp
outsl
inc
hlt
rcrb
mov
test
insb
jnp
fisttpll
test
cmp
push
not
or
push
ja
andl
cmpsb
pop
mov
popf
leave
aad
mov
pop
mov
mov
sbb
mov
call
mov
inc
adc
mov
loopne
and
pusha
sbb
and
mov
lret
fwait
jg
xchg
adc
test
mov
push
cmc
ss
imul
push
jns
mov
daa
loop
stos
push
or
nop
pushf
xor
sub
inc
in
sub
mov
xchg
xchg
jg
cmc
mov
cmp
bound
cltd
pop
jmp
addr16
sti
out
repnz
scas
rcl
pop
insb
push
sbb
lods
or
sarl
xchg
clc
mov
pusha
test
les
fld
jecxz
aad
and
loope
mov
sub
xor
inc
xchg
mov
lods
mov
cmpsb
inc
test
push
inc
les
cli
pushf
and
nop
sbb
jle
jg
cld
mov
push
icebp
ljmp
test
movb
jmp
push
mov
int
push
sub
fisttpll
out
xor
pop
mov
jne
fisttpll
and
test
xchg
es
mov
push
inc
pop
inc
push
push
outsb
dec
inc
mov
shrb
push
mov
add
das
xchg
dec
or
cmp
leave
jo
jecxz
cmp
push
or
cs
and
and
pop
dec
dec
mov
ret
pop
pop
sub
lock
push
loop
mov
mov
inc
mov
cmp
iret
out
dec
and
jb
cltd
ret
adc
adc
jnp
lcall
mov
mov
inc
lds
fsubp
jo
mov
push
popa
inc
mov
ss
and
push
jmp
cs
mov
je
movsl
cwtl
mov
cmc
sahf
dec
add
push
test
sub
xchg
hlt
movsb
lods
cmp
call
pop
in
add
pop
jp
mov
scas
xchg
sbb
and
or
daa
push
fs
pusha
pop
or
mov
outsb
ret
dec
add
mov
jo
and
pop
push
insb
mov
ret
test
ljmp
xor
cmp
test
xchg
and
jecxz
dec
mov
add
pushf
iret
aaa
dec
add
pop
les
rolb
in
or
adc
lahf
test
sub
cli
or
add
shlb
inc
ret
xchg
das
cmp
adc
mov
call
push
add
fwait
mov
fcomps
and
and
xchg
sbb
lahf
mov
test
xchg
jle
cmp
mov
jp
fldl
dec
or
addb
push
mov
xchg
test
cltd
les
mov
mov
aaa
fdivrp
mov
mov
rol
or
aad
lret
inc
xlat
jge
fs
sub
or
sahf
xor
aad
hlt
mov
cltd
dec
cmp
test
clc
mov
mov
mov
test
mov
jne
mov
xor
add
jmp
in
adc
ret
icebp
xor
xchg
sbb
sbb
jle
outsl
jge
jle
push
inc
push
push
mov
fwait
cmp
test
ss
test
scas
ljmp
subb
mov
call
mov
xor
dec
ss
xor
mov
sub
or
or
inc
repz
dec
dec
adc
or
aas
out
add
nop
insl
sbb
and
sbb
outsb
mov
jmp
sahf
pop
jg
divl
enter
aam
push
lcall
mov
and
lds
outsb
or
inc
cmp
add
push
add
loop
cli
arpl
mov
roll
jnp
test
iret
xchg
aas
scas
addr16
mov
push
std
nop
sbb
and
mov
mov
lock
ret
or
lea
mov
inc
mov
and
add
mov
mov
repnz
mov
xchg
xchg
test
xor
enter
mov
divb
fstpt
jb
xor
cwtl
adc
ret
and
loopne
cwtl
mov
je
mov
pop
add
out
add
movsb
jno
idiv
sbb
xlat
bound
enter
dec
cmp
int
mov
mov
les
mov
mov
sub
pop
pop
push
sbb
out
test
and
pop
push
lret
lret
shl
mov
adc
jge
adc
sbb
data16
imul
scas
mov
sti
filds
inc
mov
mov
aas
movsl
movl
aaa
adc
add
mov
dec
pop
add
jo
xchg
nop
mov
xchg
fisubrl
sbbl
test
movsb
cmp
pop
lods
jne
sbb
push
inc
js
pushf
adc
adc
inc
sub
lods
push
mulb
xor
push
xchg
pop
adc
outsl
jns
in
jne
cmp
mov
pop
pop
jge
insl
jns
ja
ljmp
std
adc
push
or
and
add
jmp
jae
mov
xchg
enter
int
lea
pop
stc
and
idivb
leave
aad
xchg
cmpsl
sub
sub
push
js
cmp
xchg
jbe
cld
adc
ret
add
push
aam
lea
not
push
outsb
push
lock
fadd
sbb
push
or
out
sarl
hlt
inc
xor
data16
mov
and
inc
daa
testb
pusha
mov
adcl
aam
pop
adc
inc
inc
out
hlt
xchg
out
sahf
mov
xchg
push
or
mov
pop
pop
in
cltd
cwtl
xor
pop
dec
lock
rol
mov
lret
movsb
sbb
add
and
repnz
addl
inc
xchg
adc
lret
inc
cltd
xor
jae
sbb
test
inc
pushf
adc
add
fwait
dec
sub
and
fisubl
xor
repz
into
stc
ss
xchg
outsl
test
fldt
inc
cmp
push
or
pop
leave
lahf
and
rclb
scas
insl
xchg
cs
lret
push
mov
fsubl
cmpsb
in
outsb
lock
push
pop
stc
cmc
loope
add
lods
out
jmp
push
sbb
sbb
inc
test
push
scas
inc
popa
push
std
call
mov
mov
addr16
mov
ss
adc
jmp
jne
adc
test
sahf
jbe
mov
movsb
xchg
cmp
out
enter
jp,pn
rcll
jb
imul
rclb
fcompl
test
add
add
call
inc
in
movb
push
mov
add
push
mov
mov
pushl
jmp
push
js
repnz
jno
call
add
sbb
jle
sub
and
sub
mov
mov
rolb
in
push
fsubr
in
fwait
sahf
ret
jg
xor
lahf
mull
cmp
insb
movl
mov
popa
sbbl
mov
jns
add
inc
fwait
lret
mov
ret
xchg
imul
add
movsl
out
push
lea
adc
sub
iret
sbb
loop
inc
push
mov
adc
movsl
xorb
lea
push
outsl
or
scas
mov
shlb
mov
loop
lret
mov
js
pop
lods
push
inc
ljmp
repz
fs
mov
out
mov
mov
push
jae
stc
mov
and
sub
lds
mov
movsl
add
cld
rcrl
sub
stc
sti
lds
test
dec
cmp
loop
push
stos
lahf
out
insb
movsl
std
jns
mov
inc
inc
sarb
dec
arpl
push
loope
push
imul
mov
ficompl
mov
inc
mov
bound
rorl
int
or
push
xchg
rorb
and
mov
push
test
mov
dec
cltd
or
stc
push
add
adc
lods
mov
mov
das
fisubrs
add
mov
mov
movl
inc
push
push
sub
add
inc
cltd
xchg
lds
pop
push
jno
fistpl
xorl
insb
sbb
mov
mov
test
rcrl
inc
fwait
dec
push
push
pop
dec
adc
arpl
mov
sub
pop
sarl
inc
jae
incb
out
mov
rcrl
into
sub
stc
ret
cmp
insb
fists
cmc
pop
fidivs
lret
out
sbb
jbe
add
ljmp
jnp
int
pop
imul
enter
sub
inc
cmp
xlat
icebp
fdivl
data16
cld
mov
outsb
test
mov
call
mov
pop
xor
push
ret
push
cltd
inc
jecxz
clc
add
enter
and
je
jnp
aas
jne
sbb
cli
jmp
xchg
mov
lods
xor
sub
scas
out
and
scas
pop
mov
jb
lods
pop
fldl
xor
loopne
aad
jmp
imul
int3
sub
and
aad
cmp
test
dec
mov
jmp
sahf
push
push
or
add
push
mov
sbb
mov
std
je
dec
pop
and
fstl
sbb
test
xchg
dec
mov
push
int
cli
add
mov
xor
sbb
jge
inc
loopne
sahf
pop
repz
mov
arpl
mov
mov
icebp
decb
aad
sub
mov
inc
add
fwait
ret
fsts
or
mov
pop
inc
mov
je
mov
xorl
push
mov
sbb
mov
sbb
std
xorl
add
xchg
sbb
dec
add
das
ljmp
cmp
stc
xchg
pop
out
hlt
out
popa
jb
scas
cmp
mov
jns
push
mov
dec
loop
pop
push
popa
out
leave
pop
xor
xchg
sub
scas
lods
adc
sbb
add
aam
pop
test
mov
inc
mov
mov
ljmp
ds
xchg
xchg
popa
mov
lock
mov
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
jmp
dec
repz
insb
jno
in
sbb
adc
in
jle
outsl
jge
jle
les
outsb
and
jbe
lret
loop
xchg
shll
push
and
xchg
stc
test
pop
jp
insb
ja
mov
ja
push
inc
jae
cmc
fnsave
cmp
xor
addr16
mov
pop
loop
enter
movsl
loope
rcrl
add
xor
push
leave
popa
push
call
xchg
pusha
fadds
sub
cli
adc
loope
int3
lea
jg
lods
out
pusha
scas
dec
fs
pop
lock
and
out
mov
pop
dec
mov
xor
xchg
push
test
mov
mov
pop
out
dec
mov
jns
pop
mov
pop
push
in
add
push
mov
pop
jp
or
and
int
cmpsl
fists
mov
pop
mov
hlt
hlt
xorl
mov
push
cli
and
add
sub
xchg
pop
lahf
jmp
add
mov
inc
sbb
mov
das
clc
jmp
push
cli
or
push
cs
dec
loopne
mov
mov
xor
sahf
sti
push
dec
pop
adc
dec
popf
push
js
inc
push
or
out
mov
pop
into
je
sub
cs
ljmp
shlb
addr16
mov
dec
lea
aad
fdivr
cmp
sbb
inc
mov
shrl
ss
xor
mov
or
mov
mov
mov
insl
mov
mov
xchg
test
xor
lret
mov
ret
rorb
outsb
add
xchg
jae
pop
js
pop
inc
popa
sbb
shr
in
in
push
lahf
sub
insl
negb
push
sbb
gs
sbb
test
jne
stos
divl
shll
add
jge
mov
jle
dec
xlat
or
push
push
out
sbb
jo
rorl
lods
jp
mov
pop
je
cld
aas
shll
xchg
push
dec
sbb
fs
sarl
mov
dec
cmp
mov
ja
subb
xor
sub
fstpt
sbb
xchg
inc
pop
mov
imul
push
js
or
jp
sbb
stos
nop
cld
enter
movsb
dec
sub
or
push
and
mov
cmpsl
sbb
pop
stos
cmpsb
or
mov
decb
adc
inc
or
xlat
clc
ret
andb
fsubs
or
jo
jp
shlb
inc
sub
orl
push
into
and
cld
out
push
shl
lea
lahf
mov
xchg
and
xor
xchg
xor
std
sbb
stc
je
aas
pop
adc
lds
sahf
inc
push
xor
loop
and
orb
psubd
push
jo
loop
add
dec
add
mov
lods
sub
add
xchg
sbb
in
cmp
cmpsb
dec
pop
adc
arpl
nop
xor
test
lea
or
or
add
mov
sub
pop
cli
jge
pop
lretw
xchg
add
out
inc
jg
jmp
rorl
lods
cmpsl
push
insb
sbb
cmp
aad
daa
fisttps
sbb
clc
clc
xchg
adc
adc
mov
call
mov
mov
in
push
lock
adc
shlb
xchg
and
push
xor
mov
mov
arpl
mov
add
cmp
dec
nop
pop
arpl
out
mov
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
jmp
out
sahf
mov
addr16
push
subl
or
aad
jle
outsl
jge
jle
je
out
inc
sbb
pop
icebp
insl
adc
mov
sub
xchg
mov
cmc
sbb
shlb
out
into
hlt
mov
ds
lods
sub
stc
mov
movb
fdivrl
shll
dec
loopne
pop
dec
or
pushf
jno
jp
mov
mov
clc
adc
fwait
mov
popf
sbb
xor
out
mov
fcoms
jmp
sub
xor
pusha
jne
push
add
xor
shl
xchg
jae
popf
push
add
or
sti
cltd
push
mov
cld
push
in
out
xor
dec
push
push
xor
leave
adc
and
sub
es
negb
in
cmp
stos
pop
std
xor
lea
xor
inc
in
in
and
dec
divb
mov
incb
mov
gs
imull
icebp
inc
sar
imul
cmpsl
sbb
mov
xor
aas
adc
das
fs
adc
cli
jle
and
aas
sahf
adc
inc
xor
push
movsl
lock
enter
dec
mov
notb
mov
das
and
into
xor
xchg
mov
pusha
mov
pop
adc
jl
push
repnz
add
push
shlb
fistpl
cli
pop
sbb
clc
jle
int3
sti
rcrb
pop
jo
xchg
jne
sub
rcll
adc
mov
add
lret
pusha
sbb
scas
dec
loop
fwait
jae
rcr
jmp
pop
stos
hlt
mov
mov
add
pop
inc
rcll
sub
push
push
cmpsl
cmpsl
and
arpl
jne
push
insb
stos
int
inc
aad
clc
test
sbb
mov
ljmp
xor
das
cmp
xchg
inc
loopne
sub
in
jno
int
dec
add
xlat
popf
xlat
ljmp
cs
lret
push
in
mov
cmp
pop
push
std
or
movsl
call
sub
je
push
and
mov
test
out
push
inc
xadd
pop
mov
loope
cmc
mov
movsb
mov
adc
push
cmp
cmpl
dec
and
inc
and
jbe
push
xchg
jne
jmp
xchg
and
fistl
mov
insb
shrb
movsl
sub
sahf
sub
add
lods
lcall
add
dec
gs
xor
xchg
or
cltd
inc
and
movsb
inc
call
xchg
xchg
in
inc
je
cmp
bound
std
cmp
xor
inc
out
mov
int
xchg
or
xlat
out
arpl
mov
cmpsl
pop
mov
add
jp
xchg
not
in
jge
ja
arpl
pop
inc
stos
inc
cmp
out
mov
xchg
into
xchg
or
movsb
sbb
arpl
sbb
rol
or
sub
pop
movsl
arpl
sbb
push
pusha
inc
adc
mov
cwtl
mov
push
lods
call
stos
jnp
pop
dec
stc
insb
roll
shrl
mov
mov
les
fcoml
cmp
add
xchg
roll
pop
fmulp
cmp
cld
test
movb
push
test
mov
mov
jle
sub
loopne
repnz
mov
sbb
jmp
inc
gs
mov
into
sbb
int3
and
fistpl
xor
push
out
sbb
lods
imul
xor
jle
enter
mov
clc
push
inc
push
inc
stos
js
mov
rcl
add
mov
pop
xor
xor
add
xor
pop
call
mov
mov
add
jmp
xor
mov
jne
xor
arpl
and
outsl
jge
jle
shlb
pop
fdiv
cmp
popl
movsl
jmp
xlat
shl
mov
jo
pop
sbb
cmp
and
filds
repz
ja
inc
jle
int
lds
mov
icebp
das
adc
pop
dec
and
cwtl
or
xchg
cmc
sti
inc
stos
inc
adc
leave
ret
dec
cmpsb
and
ficoms
add
imul
push
out
mov
dec
sub
or
fs
inc
or
loop
repnz
jne
fsubrs
push
inc
mov
imul
bound
adc
mov
shrl
std
div
jecxz
sub
test
mov
sbb
pop
add
test
push
pop
int3
cwtl
bound
sub
xchg
cmp
imul
aaa
sbbl
lock
xor
loop
push
push
imul
outsb
or
jle
pop
mov
subb
sub
ja
add
ficoml
xchg
es
insb
adc
push
lea
dec
pop
scas
call
stos
fsts
popa
mov
lds
push
cmp
cli
push
loope
rcll
out
and
pop
pop
fwait
mov
mov
and
dec
icebp
outsl
clc
rol
faddl
jge
insb
inc
cltd
roll
sub
mov
pusha
out
repz
mov
addb
cmp
enter
int
jge
mov
sub
xchg
subb
cltd
adcb
data16
pop
ret
inc
xchg
imul
mov
xor
fs
dec
cld
jo
jp
jno
fildll
insl
fcoml
pushf
out
or
movsb
in
clc
pop
add
jle
repz
repnz
mov
inc
push
or
je
cmpsb
std
and
out
insl
dec
mov
and
imul
fsubrl
fcomi
nop
push
outsl
sub
adc
mov
daa
mov
out
xchg
dec
daa
adc
dec
sbb
ret
lods
pop
dec
imul
cwtl
or
xlat
pop
xchg
dec
sbb
mov
repz
nop
push
in
jecxz
stos
push
in
aas
mov
jns
icebp
es
cmpsl
sbb
shl
in
push
pop
push
in
push
sarb
cmpb
push
mov
sub
mov
mov
lock
adc
leave
lret
mov
arpl
jecxz
mov
repnz
mov
ds
mov
push
xor
xchg
mov
mov
int3
sbbb
inc
fstps
in
dec
and
pop
fimull
cld
add
pop
add
lret
adc
pop
sub
mov
pop
sti
mov
pop
fbld
popa
std
popf
mov
push
js
inc
cmpl
mov
sahf
imul
dec
sti
mov
push
sub
out
addr16
sbb
and
jp
adcl
loope
js
inc
jmp
mov
int
push
aas
mov
iret
mov
and
out
xor
inc
std
jp
mov
out
aad
test
adc
xchg
dec
sbb
adcl
fcom
push
je
pop
or
inc
stos
xor
into
pop
arpl
or
add
push
inc
aas
sub
les
jbe
push
push
pop
fwait
cmp
xor
jbe
sarb
dec
lock
cmc
jns
push
imul
fisubs
pop
stc
adc
out
and
jmp
je
iret
or
stc
sub
into
movsl
jp
adc
sahf
iret
ds
mov
enter
jmp
out
inc
popf
mov
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
sub
adc
push
mov
mov
and
mov
adcl
mov
xor
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
push
mov
jno
insl
inc
filds
xor
jle
push
push
test
dec
xchg
inc
mov
mov
pushl
cli
pop
pop
lods
inc
aaa
add
and
push
push
stc
dec
lea
movsl
mov
push
jecxz
mov
jno
push
xchg
push
cld
xchg
nop
jb
ficoms
jne
int3
gs
cmp
mov
insl
sahf
xchg
sub
into
out
dec
pop
xchg
outsb
mov
lcall
sarb
or
sahf
push
addr16
int3
inc
xchg
mov
fadds
push
ss
add
mov
testb
pop
fildl
push
stos
push
fcoml
rcl
jns
and
mov
xor
mov
adc
mov
mov
scas
fnstsw
and
push
mov
push
shlb
sbb
fucomp
lods
outsl
mov
leave
mov
push
movsb
inc
cltd
sbb
lcall
arpl
movsl
mov
adc
fs
cmpsl
popa
xor
xor
dec
jbe
in
push
clc
or
in
push
fs
xor
and
cmpsb
inc
mov
sahf
idivb
in
mov
call
into
and
jge
in
enter
mov
push
xchg
fdivs
dec
sbb
or
cmp
ss
push
jecxz
shrl
lods
sub
cs
dec
sub
insb
out
xor
sbbl
xor
inc
xor
cld
push
pop
pop
ret
cs
jmp
cmc
loop
xchg
xchg
mov
scas
imul
or
mov
inc
pop
mov
popa
pop
xchg
cmp
int3
test
dec
out
sarb
sti
outsl
dec
fimuls
call
ret
into
sbb
in
sahf
movsb
ljmp
mov
and
pop
ljmp
movsb
cmpsl
test
nop
ret
subl
in
jmp
mov
jmp
out
lea
add
daa
or
es
push
push
mov
lret
or
add
pushf
outsl
inc
out
xchg
push
subl
je
inc
mov
paddsw
loopne
roll
fwait
outsl
xchg
scas
bound
mov
xor
fdivrs
push
or
fsubp
pusha
xor
sub
pop
es
sbb
jecxz
outsl
call
sub
into
sbb
psraw
lret
xchg
xlat
adc
pusha
scas
push
jne
mov
add
mov
adc
pop
dec
jbe
sbb
jle
dec
div
mov
lods
vmovss
pop
cwtl
cmpl
fcmovb
lods
fsubr
jnp
aaa
mull
jbe
xchg
addr16
xor
xor
pop
rcr
add
jmp
out
push
stos
std
dec
leave
inc
mov
mov
push
dec
das
mov
cmp
xor
fists
lods
and
jmp
sub
es
sub
aas
subl
xchg
outsb
sub
rcrl
add
mov
mov
xor
adcl
mov
mov
adc
add
neg
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbb
xor
sbb
add
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
movl
xor
movl
movl
sbb
movl
adc
movl
movzwl
and
movl
dec
movl
mov
add
xor
add
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
add
add
mov
sub
mov
xor
add
movl
cmp
movl
jb
mov
mov
xor
incl
xor
notl
add
add
adc
imul
mov
mov
sbbl
sub
movl
cmp
movl
ja
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
sbbl
xor
xorl
jmp
cltd
jp
pushf
insl
imul
out
mov
jle
jge
jle
test
insl
pushf
xchg
insl
js
jp
out
imul
xchg
inc
ja
dec
push
and
icebp
jno
cltd
cmp
mov
lods
add
push
or
dec
mov
xchg
add
cmp
mov
cmpsb
or
mov
xchg
inc
ljmp
add
fmull
adc
sbb
pop
out
adc
icebp
mov
cmp
mov
xchg
cltd
add
xor
js
push
push
xorl
das
imulb
out
mov
es
push
enter
loop
sbbb
ret
sbb
xchg
jae
mov
adc
cmp
insl
xchg
sbb
mov
sahf
icebp
add
in
sub
and
push
and
dec
xchg
out
push
adc
jnp
sti
cmp
les
out
mov
in
repz
xor
les
xchg
xor
lods
inc
in
mov
test
stc
pop
cld
dec
movsl
testb
dec
push
enter
push
lods
test
dec
insl
jbe
das
sbb
rclb
cmp
pop
mov
dec
flds
sarl
icebp
mov
mov
les
sahf
mov
xchg
stos
mov
das
fildll
movsb
add
jle
sbb
inc
mov
mov
nop
flds
in
mov
adc
push
jno
mov
inc
mov
fmulp
push
or
aam
div
daa
jg
in
and
bound
mov
and
jle
cli
or
add
jge
jmp
push
fcompl
jbe
push
fwait
out
aad
push
push
push
cmc
xchg
mov
ljmp
mov
cmp
push
jnp
jae
dec
sbb
and
stos
or
loopne
cmovp
push
clc
ret
cltd
insb
mov
scas
sub
adc
fnstsw
and
cs
and
jns
in
jae
outsl
popa
xchg
lret
das
dec
inc
inc
cli
pop
outsl
or
xorb
daa
sub
cltd
ja
out
jno
ds
cwtl
sub
cs
mov
cmp
pop
je
cmp
xchg
outsl
mov
mov
pop
sub
mov
fs
or
sbb
cwtl
and
xchg
jmp
rcll
fldenv
ljmp
arpl
lret
sub
mov
out
dec
cmp
and
adc
ret
test
xor
and
in
cmpl
shlb
cmp
push
pop
lcall
cmp
sbb
cmp
pusha
imul
dec
mov
pop
fsubs
sbb
push
iret
adc
fmuls
mov
out
fdivp
scas
test
out
aas
popf
jecxz
xchg
pop
cmpb
xchg
or
mov
mov
in
les
and
inc
pusha
mov
xlat
pusha
roll
and
mov
add
jmp
mov
mov
xor
movzbl
or
xor
andl
xor
add
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
add
add
imul
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
pushl
pushl
push
push
call
cmpl
jb
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
pop
jne
loope
clc
cmpsb
dec
push
test
jge
jle
loop
add
inc
jb
dec
pop
in
xor
inc
mov
pop
scas
sbb
mov
cmpsl
lods
mov
cmp
inc
pop
add
push
push
mov
out
pop
or
imul
cwtl
dec
or
ss
cmp
cmp
xchg
and
shlb
cmp
fldt
andl
popa
sbb
mov
lcall
data16
lock
mov
jne
add
mov
pop
adc
or
mov
mov
mov
hlt
and
lret
xchg
inc
ljmp
bound
mov
lods
sbb
arpl
mov
pop
cmp
xor
aad
loopne
pop
out
or
aam
ret
icebp
cmp
stos
mov
fisubs
pop
push
arpl
mov
lods
ret
xchg
or
or
imul
xchg
sbb
mov
lret
rol
sub
pop
mov
aas
xchg
cli
mov
inc
pop
call
sbb
push
pop
pusha
sbb
jne
xor
shll
sub
movsl
aaa
fwait
lds
js
xchg
sbb
roll
repnz
sbb
ret
je
or
rcl
jae
cs
shrl
push
in
cmpsb
adc
or
jo
dec
ss
notl
dec
mov
sub
xchg
clc
jae
cltd
cli
mov
bound
and
in
aaa
adc
aas
push
inc
pop
sub
aad
pop
jmp
shlb
mov
mov
push
addr16
jnp
jno
sub
arpl
fldcw
sbb
cld
jne
push
cmp
xchg
jb
adc
movsb
add
movsl
sahf
je
jo
or
jns
sbb
dec
push
aam
mov
stos
inc
sub
sarb
sbb
dec
sub
lret
pop
push
cmp
sub
jp
sbb
fwait
pop
push
inc
mov
pop
pop
xor
jnp
adc
mov
sbb
mov
or
pop
push
stos
in
adc
pop
mov
iret
call
xor
je
push
fsubr
inc
mov
sub
scas
test
sub
xor
call
pop
jne
push
cltd
add
fisubrs
gs
out
stc
ds
jle
cwtl
adc
arpl
mov
push
cmp
mov
sub
pusha
and
out
call
jge
xchg
jecxz
arpl
jno
pop
adc
mov
or
nop
sub
out
movsl
jg
jmp
shll
push
mov
call
lods
cmpsb
dec
movsl
mov
dec
sbb
xor
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
push
outsb
adc
pusha
cli
sarb
arpl
push
mov
jle
xor
jle
iret
dec
mov
mov
hlt
jle
sub
inc
inc
iret
outsl
js
push
or
ja
mov
mov
inc
ret
xor
leave
sbbl
shrb
adc
test
lods
fsubl
pop
jmp
cs
jbe
add
mov
test
pusha
mov
and
scas
orb
or
or
xorl
adc
adc
ds
fnstcw
jmp
int
dec
pop
adc
sbb
inc
clc
insb
xchg
push
js
mov
sbb
roll
int3
lcall
and
test
inc
xor
lds
dec
xor
inc
bound
mov
int3
xor
in
pop
push
lods
pop
call
xor
cmp
sbb
lock
and
mov
and
scas
push
mov
into
ret
sbb
hlt
call
jmp
push
sbb
test
mov
sbbl
jle
dec
mov
popa
xchg
sub
push
cmp
mov
jl
cltd
xchg
and
sub
stos
jne
aad
xorl
icebp
mov
sub
mov
filds
fnstenv
mov
imul
dec
add
adc
das
pushf
imulb
adc
push
jae
call
sarl
fucom
push
pop
jne
and
ljmpw
test
jb
add
sbb
imul
and
pop
dec
ljmp
out
adc
xchg
dec
push
xor
loop
dec
test
add
jge
clc
vmovaps
ss
lret
mov
and
pushw
popa
or
lret
rdtsc
push
push
into
call
arpl
mov
inc
pop
fistl
fistpl
sar
jns
repnz
cld
in
add
sub
aaa
cmp
roll
pop
push
add
add
or
pop
xlat
push
dec
cmp
jns
and
fdivrs
mov
jno
movsb
addr16
pop
insb
jl
and
and
sub
fs
push
jge
xchg
or
fldt
mov
sub
arpl
sbb
pushf
cwtl
xchg
jbe
nop
lcall
dec
pop
cmpsl
imul
pusha
jmp
insb
popf
or
mov
lret
mov
ja
iret
and
repnz
inc
clc
cwtl
dec
aam
out
push
fadd
xchg
daa
and
arpl
mov
pop
mov
test
add
pop
mulb
in
mov
adc
push
fwait
aas
add
imul
push
scas
adc
loop
mov
cmp
sbb
push
mov
xchg
inc
fistpll
sbb
adc
addr16
loope
call
push
sub
xchg
add
or
cmovno
push
add
mov
mov
xor
xor
add
add
imul
mov
mov
sub
jmp
jmp
xor
les
xorl
dec
das
jle,pt
xor
jle
cmpl
jmp
mov
stos
mov
sbbb
cmp
fucomip
sbb
sahf
insb
pop
icebp
or
mov
sbb
std
imul
or
das
test
ja
mov
inc
cld
add
pop
pop
sbb
imul
mov
movl
iret
mov
and
sub
mov
insb
pop
cli
push
and
mov
daa
ffree
push
movsl
sbb
rcll
jg
mov
movsl
cmp
cmp
jb
or
xchg
add
push
jmp
or
imul
mov
sbb
stc
mov
aas
test
lea
mov
mov
mov
mov
cs
fsts
in
mov
mov
mov
mov
nopl
leave
add
push
pop
sbb
sbb
pop
ja
daa
aaa
vphaddbd
push
stc
push
stos
out
jmp
push
inc
mov
xchg
cmc
add
call
or
xor
aam
jle
int
cwtl
sub
push
push
and
xor
les
cli
out
inc
jnp
cmpsl
loopne
mulb
pop
call
addr16
add
pop
hlt
dec
fimuls
call
stos
add
std
cmp
arpl
in
cmc
push
sub
xor
sbb
hlt
jae
push
fnstsw
mov
insl
mov
mov
mov
out
xlat
cmpsb
hlt
xchg
clc
jno
push
sub
movsb
push
mov
divl
inc
inc
imull
adc
sbb
xor
jno
sti
cwtl
cwtl
pop
pop
roll
fildl
mov
mov
addr16
aaa
jge
push
or
xchg
mov
and
inc
lods
xor
fistps
lcall
inc
test
fiaddl
lret
add
stc
mov
cmp
sub
les
jbe
enter
push
test
push
pop
ja
mov
sbbb
push
add
bound
out
mov
stos
sub
pop
arpl
add
jae
push
in
jecxz
dec
dec
jg
jns
arpl
cmp
jne
xor
sbb
mov
xchg
xor
adc
adc
arpl
jns
movsb
mov
cmp
push
rcll
test
push
das
aam
sbb
iret
icebp
adc
out
iret
mov
aad
sub
ljmp
aad
or
pushf
sub
xchg
fdivs
scas
adc
lds
mov
mov
bound
xor
inc
mov
xchg
pop
pop
pop
push
lret
stos
mov
dec
call
es
mov
push
push
popf
push
sbb
mov
fidivrs
popf
push
mov
sbb
inc
fwait
out
push
adc
jne
mov
mov
xor
aam
shrb
push
aam
push
orl
push
enter
add
test
jno
ja
shrb
insb
mov
jle
jge
jle
shl
mov
push
lcall
dec
push
outsb
ljmp
sub
outsb
faddl
jl
leave
faddl
cmpsb
mulb
sbb
outsl
xchg
sub
ret
sub
popf
cmp
pop
pop
outsl
insb
xchg
outsb
clc
les
or
hlt
adc
outsl
inc
sets
and
sbb
fcmovne
pushw
push
movsl
dec
jl
mov
sub
adc
inc
cmc
out
mov
stc
sub
jb
mov
mov
xlat
dec
icebp
push
xchg
icebp
andl
dec
dec
pop
mov
mov
out
cli
push
fldcw
mov
inc
enter
or
pop
ret
ret
je
jmp
mov
sbb
lret
shlb
das
pop
enter
lcall
out
inc
mov
adc
popa
mov
sti
movsb
cmp
out
mov
arpl
es
mov
fnstsw
pop
stos
les
push
dec
push
negl
cld
jmp
push
adc
ficoml
pop
idivb
in
fnstsw
in
jb
pushf
in
mov
mov
in
jg
dec
outsl
dec
and
pusha
sub
cs
xchg
or
dec
fs
cmpl
pusha
pop
xchg
ja
mov
pop
call
flds
bound
fs
hlt
pop
push
fdivrl
mov
mov
xlat
push
sahf
popa
pop
lret
outsl
cwtl
xor
out
mov
xlat
das
cltd
push
mov
lret
adc
test
inc
or
lock
inc
rclb
xlat
adc
popa
cmp
notl
pushf
movsl
xor
jo
fstp
divl
int
mov
shl
and
mov
lcall
mov
nop
cmp
sub
cld
jl
fwait
xchg
scas
lahf
mov
xor
test
push
inc
pusha
pusha
push
jl
int
mov
je
scas
ja
enter
sarb
push
push
jbe
into
push
ss
pusha
mov
cli
sahf
push
inc
pop
je
push
or
adc
hlt
jp
xor
loop
ljmp
mov
out
iret
mov
sub
mov
inc
push
xchg
mov
xor
lahf
push
push
xorb
add
xor
mov
jns
mov
mov
adc
dec
push
or
cli
or
mov
repnz
mov
adc
push
dec
sbb
mov
out
jne
sub
lahf
aam
xchg
xchg
add
clc
cmpsl
clc
lds
fiadds
jo
and
fldt
out
jg
cmpsl
or
add
xchg
sbbl
pop
int3
aad
or
out
cld
jmp
les
sbb
ret
test
push
inc
inc
leave
aaa
push
sti
aad
cli
stc
xor
into
pusha
fdiv
sub
pop
sub
outsb
jg
push
loop
pusha
adc
rcr
sahf
and
add
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
jmp
pop
xlat
pop
jmp
jae
push
jmp
cmc
pop
inc
clc
inc
ljmp
jle
and
inc
mov
sub
cmpsl
mov
push
or
ret
push
jg
cltd
inc
arpl
fidivrs
mov
ds
fndisi(8087
and
xor
jb
push
inc
cmpsb
stc
sub
loopne
call
fwait
cmp
sub
aas
in
xchg
imul
movsl
rorb
mov
into
adc
mov
shl
cs
sub
cld
int3
inc
std
std
mov
scas
mov
out
cmpsl
aaa
cmp
leave
xor
test
arpl
inc
scas
inc
sub
mov
out
lret
imul
add
test
fmull
in
movsl
rcll
push
or
adc
cmp
xchg
jnp
into
popa
pop
sahf
pop
add
jge
jmp
mull
mov
fbld
mov
sbbb
xlat
cs
lods
push
daa
or
pop
sub
inc
cmp
sbbb
icebp
repnz
mov
fcompl
jmp
dec
in
cmpsl
sahf
dec
out
insb
mov
ret
jbe
cmpb
adc
idivl
mov
sahf
js
jnp
cmp
sbb
test
push
pop
sub
adc
mov
jne
pushf
clc
xor
test
add
fdivrs
sbb
fistpll
fcompl
jge
sub
jmp
call
outsb
sbb
ja
mov
jno
popa
mov
aaa
pop
into
mov
and
pop
mov
inc
cld
dec
sarb
xor
push
sub
sub
jl
cltd
icebp
push
sub
enter
into
das
pop
inc
sub
dec
dec
jne
xchg
or
gs
jb
xchg
mov
push
inc
fcmovnbe
and
xchg
inc
jb
mov
fs
pop
jecxz
fmuls
xor
add
sbb
or
in
insl
ljmp
xor
lret
jl
lock
or
test
mov
jmp
jmp
ficomps
mov
jle
mov
cmovg
fucom
rcl
test
es
mov
mov
cmp
std
mov
and
xchg
sbb
inc
xor
nop
call
jne
or
inc
xor
loopne
mov
rcr
add
inc
cmp
or
leave
lea
cs
push
out
gs
cmpsb
icebp
mov
jl
mov
cmc
in
sbb
fldt
cmpb
cmp
ficomps
out
aas
out
fidivrl
fsts
rorb
test
adc
jns
roll
inc
or
mov
push
enter
pop
mov
fs
adc
pop
push
dec
into
sahf
out
addl
clc
call
roll
sub
mov
mov
and
pop
cmp
mov
cmp
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
mov
sub
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
xor
andl
add
movl
mov
movl
mov
movl
mov
push
movl
movl
mov
mov
movl
cmp
movl
je
andl
mov
xor
subl
xor
lea
xor
cmp
jne
jmp
add
mov
xor
add
mov
mov
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
jmp
gs
jns
dec
jno
xor
into
add
data16
jle
fistpll
mov
cmpsb
dec
sbb
outsl
aaa
dec
inc
or
nop
movsb
and
cmpb
mov
shll
in
cmp
jge
or
ja
lods
out
sbb
xor
out
adc
xor
cmp
xchg
imul
adc
or
mov
mov
mov
aaa
scas
jns
int3
fdivp
ljmp
jecxz
xchg
pushf
loop
lahf
inc
out
add
movsl
arpl
loopne
or
mov
ljmp
pop
loop
mov
fcmove
jae
inc
sub
and
shlb
bound
call
inc
dec
test
jae
scas
mov
and
mov
cmp
push
jg
je
lods
xor
icebp
jno
addl
scas
pushf
mov
stc
adc
sub
shrb
push
or
adc
std
arpl
push
leave
jno
sub
mov
xchg
sahf
inc
fldcw
add
pusha
push
repnz
jmp
inc
or
pop
xchg
and
jo
pop
mov
out
addb
push
ljmp
lock
fcoml
gs
inc
cmp
leave
mov
aas
std
repnz
adc
lock
mov
iret
fwait
sbb
push
loop
inc
mov
rclb
sbb
inc
in
in
shrl
in
adc
push
mov
mov
jnp
jmp
jecxz
sub
enter
shrl
xchg
dec
cwtl
iret
gs
xor
clc
aaa
xchg
or
inc
push
movsb
lret
dec
fwait
insb
and
jno
mov
icebp
lods
mov
jne
mov
out
sahf
pop
xchg
cmp
lret
cmp
stc
add
scas
add
sub
mov
xchg
inc
cmp
inc
adc
jecxz
push
xor
in
lds
hlt
cmp
mov
ror
sahf
out
sbb
imul
incb
mov
xor
ja
xor
repnz
pop
xor
fiaddl
mull
sub
sub
add
jo
adc
test
insl
xor
pop
fsubl
add
push
pop
ret
mov
std
mov
mov
cltd
cmpsl
add
shll
shll
pushf
add
add
xor
pushl
mov
pushl
mov
call
jmp
jmp
push
jo
es
mov
cmp
mov
jle
cld
xchg
ret
jge
mov
pop
xor
loopne
stos
mov
mov
push
mov
sub
pop
xor
sbb
lahf
jns
sub
jge
xchg
sbb
push
rcll
mov
cmp
cmc
cmpsl
xorl
jae
aaa
and
adc
ss
push
pushw
lcall
mov
jl
push
push
add
mov
lret
sbb
jge
daa
mov
call
push
jmp
addr16
pop
scas
cli
sahf
subl
pop
shlb
cli
xchg
std
sub
mov
rclb
pop
sub
fwait
andb
jbe
xchg
mov
scas
jg
test
mov
aad
adc
subl
inc
adc
in
fsubs
pusha
cltd
inc
iret
call
dec
daa
mov
cli
imul
nop
mov
mov
mov
pop
pop
cmp
adc
addr16
movsb
lds
call
push
enter
stc
lods
sbb
fdivs
sub
mov
int3
xchg
mov
daa
or
orb
aaa
out
xor
leave
or
lods
xor
test
shrl
xchg
inc
adc
push
popf
cld
xchg
jns
popf
jno
gs
repz
mov
loop
jnp
sbb
mov
push
ret
add
bound
ss
repnz
insb
inc
xor
fs
scas
lahf
dec
mull
jecxz
stos
mov
jmp
mov
aad
shll
movsb
shl
outsb
je
sub
in
cmc
xor
sub
js
js
xlat
or
xchg
incb
imul
out
fsubl
dec
lods
or
repnz
cmp
rcl
in
ljmp
in
jmp
in
test
xchg
mov
inc
out
fsin
fistpl
add
rorl
mov
inc
leave
notl
mov
dec
push
int3
xchg
pop
cmp
push
lret
inc
add
outsl
mov
out
shr
mov
and
xchg
pop
out
inc
adc
ret
push
mov
sub
movl
push
call
cmpb
movl
je
andl
xor
jmp
push
addl
call
movl
cmp
movl
jl
add
movl
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
adcl
movl
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sbb
lea
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
xor
mov
lea
mov
adc
mov
mov
mov
xor
mov
orl
mov
sub
mov
addl
push
push
sub
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
and
xor
sub
push
xor
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
add
movl
mov
movl
mov
mov
cmp
mov
mov
je
mov
xor
add
imul
mov
jmp
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
mov
mov
movzwl
mov
jmp
shll
sbb
inc
out
jle
inc
movsb
or
jle
and
jle
pop
arpl
ljmp
pop
mov
push
clc
adc
insb
pop
je
jmp
and
stos
dec
jbe
dec
cmpsb
mov
mov
int
movsb
std
pop
popl
mov
popa
add
out
stos
in
push
sbb
iret
sbb
mov
dec
fnstenv
cmc
sub
scas
ret
dec
ljmp
push
jmp
lds
jge
lahf
mov
imul
add
das
mov
enter
out
push
out
int
mov
mull
popa
loopne
inc
push
lods
in
inc
aaa
push
hlt
fdivrl
scas
outsb
jg
int3
push
mov
add
pusha
xchg
jno
mov
icebp
cmp
mov
out
scas
cs
fdivs
pop
add
or
cli
lods
xchg
sti
cmp
adc
out
js
repnz
jb
mov
cmp
jae
jbe
je
fdivl
push
pop
xor
subl
inc
add
push
sti
add
or
and
repnz
dec
fiadds
sub
clc
repnz
fsqrt
imul
jns
push
mov
xor
xchg
cli
xchg
push
jp
test
out
xlat
fnstenv
add
pop
adc
or
jmp
lcall
pop
icebp
cltd
ret
sbb
jle
push
movsl
aaa
movl
or
mov
sti
pop
jp
leave
pusha
roll
pop
dec
xor
in
dec
cmp
push
add
je
cmpsb
sti
pushl
jo
cld
push
mov
push
cltd
add
or
and
clc
pmaddwd
inc
xchg
and
cmp
or
int3
and
jmp
xchg
in
push
inc
sbb
add
cltd
jne
sub
inc
popa
inc
dec
xchg
inc
xor
stos
repnz
mov
int3
inc
loope
loop
cwtl
ds
pop
xor
rcrb
jne
jb
int
in
mov
bound
bound
mov
dec
push
dec
test
push
push
dec
fldcw
bound
push
mov
stc
dec
and
daa
and
out
mov
pop
lods
or
in
movsl
xor
lea
popa
sub
xor
sub
sbb
sub
inc
gs
mov
mov
jo
mov
pusha
push
xchg
ret
hlt
jecxz
sti
mov
pop
lods
out
into
pop
test
fs
push
push
lret
in
aaa
lods
enter
inc
cmp
mulb
lods
loopne
or
in
add
jbe
mov
and
jae
mov
aaa
jne
pop
jp
mov
push
popa
push
adc
int3
adc
mov
xchg
imul
int3
bound
sbb
xchg
add
mov
push
add
mov
pusha
sarb
adc
add
xchg
ret
jg
mov
jp
addr16
vcvtss2si
xchg
lock
jb
jb
pop
div
bnd
sbbb
mov
mov
movl
movl
jmp
out
psubd
push
cmc
mov
loop
movsb
xchg
inc
push
iret
jle
and
jle
les
sbb
fisttps
loop
aad
sbb
rcl
clc
dec
mov
push
mov
jge
xchg
icebp
or
adc
sub
mov
pop
dec
imul
sub
arpl
sahf
leave
pop
push
sbb
and
pop
dec
fistpl
inc
popf
iret
jnp
adc
jmp
mov
les
xor
jnp
inc
pop
mov
mov
pop
or
or
push
cmpsl
sbb
loop,pt
pop
loopne
dec
jo
push
sar
jmp
shrb
cmp
nop
test
push
and
pop
mov
divl
inc
aaa
mov
sahf
jns
lret
inc
jecxz
icebp
outsl
adc
xchg
insb
push
xchg
fs
add
addb
shrl
std
jecxz
fdiv
add
inc
push
lods
and
jl
filds
push
loop
push
aas
cmp
push
sbb
mov
ja
jg
dec
das
in
movsl
dec
pop
loopne
movsl
push
outsl
xor
mul
mov
add
lea
jl
lods
add
adc
pop
sub
mov
mov
ret
mov
loop
fnstcw
ja
pop
es
dec
xchg
rclb
inc
jecxz
loope,pn
push
fcoms
into
xchg
inc
es
xorb
arpl
stos
cmc
cmp
push
iret
pop
xchg
push
or
in
dec
cmp
cmp
dec
mov
mov
mov
mov
or
fcoms
sub
test
pop
lret
nop
rcpps
jae
gs
xor
jl
add
inc
dec
aam
jmp
pop
mov
cmpsl
int
mov
cli
hlt
cmp
jg
fwait
add
aam
test
xchg
fadds
and
adc
xchg
sub
xchg
lods
cs
jge
fidivrs
sbb
js
xor
xor
xchg
adc
out
pop
neg
bound
je
lret
ds
fwait
adcb
int
fstpt
addr16
dec
stc
add
jg
ljmp
xor
mov
jmp
daa
add
adc
inc
add
scas
pop
popf
in
loopne
shrl
aaa
adc
adc
aaa
out
pop
sbb
rcrb
movsb
scas
push
and
adc
mov
int3
hlt
cmp
adcl
push
add
sub
cmpb
insb
xchg
push
jo
jge
loop
lods
pop
sub
ret
gs
jmp
aam
jne
jge
xor
dec
mov
into
pop
insb
mov
xor
adc
and
rorb
or
jns
and
fs
push
test
dec
add
lods
mov
sbb
add
mov
jle,pn
cmc
ret
jb
sub
lret
cmc
cmp
inc
movsb
push
fs
lcall
mov
fwait
inc
cmp
jne
mov
xor
mov
subl
xor
mov
subl
add
mov
movzwl
andl
not
and
movl
mov
movl
mov
jmp
jmp
dec
sbb
jno
push
cwtl
mov
popa
mov
js
jle
and
jle
pop
and
hlt
cld
pop
inc
xor
cmc
inc
push
cmp
mov
mov
jnp
dec
cmpsb
popf
vpmadcsswd
xchg
mov
test
addr16
add
repnz
loope
iret
data16
frstor
ret
call
mov
xchg
mov
xor
std
nop
sub
js
xchg
mov
jp
and
mov
stc
stos
mov
sti
mov
pop
push
push
es
mov
cmc
mov
rcl
andl
inc
cmp
and
jno
cmp
sbb
daa
mov
in
bound
aam
mov
jno
jbe
call
ljmp
mov
mov
jp
xchg
clc
stos
xchg
push
sahf
mov
int3
mov
dec
dec
jl
sub
mov
dec
jge
add
sub
sbbl
or
repnz
xor
push
sbb
cs
in
aad
cmc
fcomip
mov
sahf
xor
jns
pop
mov
xchg
test
xlat
push
shl
cmp
orl
mov
out
lea
popa
add
mov
adcl
pop
mov
call
jl
push
cmp
add
int3
scas
loopne
cmp
adc
sbb
push
jbe
sbb
hlt
or
xor
mov
cmc
loop
fldenv
jb
and
out
mov
repnz
shll
lahf
adc
or
gs
adc
rcr
inc
adc
cld
imul
out
gs
cli
push
popf
mov
cmp
inc
popf
xor
adc
mov
mov
xchg
sbb
inc
ficoms
mov
push
jle
in
dec
jmp
repz
jb
sub
pop
insl
jmp
stc
jl
sub
das
jno
mov
les
stos
inc
jnp
sahf
push
jae
ficoms
rcll
jnp
xor
fwait
shll
pop
and
ficompl
xchg
and
fcmovnbe
pop
scas
lret
or
aas
or
cmpsl
mov
mov
in
push
fsubl
xorb
inc
or
pop
mov
add
pop
popa
iret
lcall
pusha
andb
data16
nop
xchg
arpl
pop
leave
pop
fildl
cmpsb
mov
xor
cld
xor
sbb
mov
jb
test
push
outsb
repnz
lock
xor
pop
outsb
test
mov
xor
sbb
jnp
mov
lds
cs
inc
repnz
dec
insb
insb
mov
fimull
add
lds
mov
dec
xor
stos
push
add
xchg
xor
fsubrs
aas
js
mov
sub
psubusw
adc
mov
pushl
call
test
je
leave
ret
push
mov
sub
or
jmp
outsl
cmpsb
insb
inc
jne
jne
push
push
mov
loope
cld
and
jle
in
jle
int
or
leave
lea
mov
xor
je
pusha
mov
test
sub
inc
das
pusha
mov
push
rcrl
sbb
icebp
cltd
mov
mov
and
sarl
mov
pop
push
lahf
sub
sub
fsubrl
jle
shrl
sub
push
mov
sbb
sbb
in
ds
mov
in
inc
mov
push
aam
or
mov
js
add
xor
sbb
and
outsb
add
outsb
mov
popf
sub
dec
sub
adc
xchg
rcl
js
int
jecxz
mov
pushl
movsb
and
add
or
loop
push
dec
mov
rorb
test
std
inc
xchg
cwtl
dec
leave
mov
addr16
ja
stc
andb
pop
test
dec
and
dec
aam
lea
jle
xor
xchg
jg
aam
fs
pop
nop
outsl
mov
fwait
clc
xor
mov
ret
outsb
push
jae
inc
dec
pop
push
cltd
addb
push
add
arpl
scas
lea
in
mov
sub
xor
xor
mov
cmpsl
test
xchg
outsl
cltd
dec
fdivs
imul
les
movl
inc
movl
mov
mov
xor
mov
incl
lea
mov
sbb
mov
mov
push
movzwl
add
mov
lea
mov
mov
and
push
or
push
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
movl
jmp
xor
inc
arpl
jae
aas
or
cwtl
nop
xlat
jle
in
jle
in
sub
inc
and
pushf
push
or
mov
stc
inc
int
scas
xchg
inc
jnp
dec
jmp
push
sub
cmp
loop
or
popa
xchg
adc
orb
popf
insb
mov
into
push
div
int3
clc
pop
cmp
imulb
std
cld
push
xchg
int
imul
insl
xor
negl
pop
cmovs
std
jne
push
mov
xor
mov
pop
jo
and
cmp
aad
test
addl
xchg
gs
into
jecxz
mov
cs
xchg
push
ds
outsl
scas
rolb
xorl
jo
push
in
in
cmp
nop
pop
shlb
fisubl
jmp
mov
out
mov
sbb
outsl
xchg
mov
aaa
mov
xchg
mov
rorb
mov
stos
mov
pushf
pop
sub
iret
daa
cltd
or
mov
test
xchg
ja
rorb
lcall
push
and
idiv
insl
pusha
or
in
subb
mov
out
mov
dec
loopne
bound
mov
xchg
imul
sbb
xchg
setg
jle
fldl
mov
adc
pushf
and
mov
pushf
dec
imul
mov
xor
andl
mov
addl
xor
xorl
xor
addl
add
add
div
movl
mov
movl
movl
movl
cmp
movl
jmp
or
add
aam
lret
imul
mov
push
aad
jle
jg
jle
push
xor
dec
pop
mov
push
out
sbb
and
imul
lods
push
lcall
fs
or
rcl
xor
pop
adc
adc
movsl
cmp
push
out
popa
test
xchg
mull
mov
pop
scas
jo
xchg
xor
dec
aad
out
or
nop
mov
cmc
mov
mov
aam
hlt
insb
jnp,pt
cmpsb
cmpsb
sbb
jnp
cwtl
sbb
pop
adc
xchg
cmp
fs
mov
sub
ror
mov
inc
pop
cwtl
mov
shll
sbb
aas
rcll
push
cmp
mull
lods
push
ret
mov
mov
sub
or
inc
mov
push
stos
cmp
jo
push
jno
pop
lea
fwait
xor
frstor
lret
adc
jmp
mov
inc
fstpl
inc
ss
dec
cmp
xchg
loope
test
ss
lods
mov
mov
sub
cs
cli
xchg
psubsw
jmp
lret
es
outsl
sub
cmp
fs
jns
pusha
add
push
pop
xor
xchg
insl
xor
dec
xchg
lcall
jno
je
neg
movl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
and
mov
inc
mov
imul
mov
mov
movl
cmp
je
sub
mov
sbb
orl
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
jmp
xor
xor
outsb
fucomi
jecxz
jg
in
sarb
in
jle
sub
jb
or
iret
jmp
scas
sahf
cs
fldt
mov
int3
in
mov
pop
mov
je
mov
loopne
sbb
sub
push
sarb
mov
dec
ds
jecxz
sbb
adc
subl
mov
add
and
jg
adc
jl
repnz
xchg
clc
mov
xchg
mov
addr16
aam
out
stos
mov
fistl
ret
cld
mov
mov
insb
cmpsl
call
in
aam
push
repz
inc
rcr
lret
into
or
cmp
in
nop
in
subl
in
push
mov
dec
and
mov
push
cmpsl
jmp
and
mov
add
dec
push
xchg
jge
cltd
loopne
pop
xchg
sbb
cmpsb
inc
test
xchg
or
jbe
js
push
clc
push
and
outsb
add
test
pop
into
in
or
sbb
rcr
dec
inc
push
push
or
mov
push
cmp
ds
jns
lret
test
pop
push
mov
mov
mov
mov
mov
push
dec
fsts
sub
jl
mov
in
addr16
mov
sbb
jae
adcl
jle
xor
jmp
int
pop
bound
movsb
jbe
inc
clc
xor
add
jmp
adc
test
or
and
sarl
in
jle
lea
repz
mov
insb
mov
pop
enter
push
adc
and
clc
loope
mov
bound
push
loope
mov
sbb
scas
fildl
pop
sbb
rcrl
mov
stc
push
lret
hlt
xor
dec
ret
pop
movsl
and
ficompl
mov
pop
call
xlat
out
jl
lea
xchg
xchg
pushf
inc
adc
or
push
pop
jae
inc
push
adc
int3
idivl
aas
cmpsl
aas
icebp
pop
stos
xchg
or
mov
mov
sbb
imul
lahf
mov
inc
jne
pop
aaa
das
pop
dec
add
nop
aas
ret
pop
js
loopne
aad
enterw
inc
call
mov
cmpsl
jbe
adc
lahf
hlt
cltd
out
pop
fs
bound
dec
mov
fstl
ja
insb
sub
es
jne
shll
test
jns
mov
adc
arpl
or
bound
inc
jg
xor
pop
data16
in
fs
mov
add
pushf
adc
clc
outsb
int3
xor
add
dec
mov
jmp
pop
mov
add
push
movsb
xchg
cmp
shl
dec
in
in
les
sahf
dec
mov
mov
lret
sub
adc
mov
mov
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
jmp
test
loope
jno
jmp
jns
cmp
jle
in
jle
fimuls
xchg
mov
test
pushf
and
shlb
imull
inc
inc
test
cmpsb
adc
iret
add
fisttpll
inc
out
les
lea
test
mov
mov
lahf
outsl
fisubl
cli
mov
jge
jg
fidivl
iret
xor
xorb
popf
ffreep
jnp
in
jbe
icebp
fdivl
sbb
inc
cmp
insb
push
sbb
xchg
or
loopne
push
fldenv
cltd
add
adc
push
insl
pop
or
cmp
sub
xorl
rcl
add
out
xchg
fcoml
pop
icebp
adc
mov
divb
movb
in
push
mov
js
in
jmp
adc
iret
inc
mov
inc
inc
shlb
popaw
cmp
in
xor
inc
jns
pushf
and
jecxz
lods
mov
and
test
dec
mov
jo
inc
adc
nop
inc
jle
push
inc
xchg
rorl
xchg
push
movsb
pop
mov
add
mov
xor
mov
lds
and
mov
roll
mov
cmpsb
inc
pop
xchg
xlat
or
es
push
cmp
xor
into
dec
fs
add
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
jmp
push
adcb
sub
jmp
sub
daa
sahf
scas
fidivrs
in
jle
outsb
mov
fimuls
pusha
add
mov
jg
cmp
aam
stos
sbb
inc
pop
push
cmpsl
test
mov
jbe
les
xchg
in
pop
cmp
dec
jl
pop
lcall
sbb
xchg
jge,pn
mov
push
sbb
mov
mov
dec
xchg
mov
lock
cs
shlb
mov
push
add
sbb
push
pop
les
insl
fcomps
cmp
or
movsl
or
testl
dec
mov
xchg
pop
fimull
inc
or
clc
in
pushf
adc
mov
in
push
sbb
lods
pop
imulb
sbb
sub
xchg
pop
es
les
or
nop
cmp
rclb
sub
sub
push
imul
out
or
in
testl
sbb
cmp
xorl
rcrl
arpl
xchg
jmp
cmp
sbb
fsts
ret
jmp
mov
or
test
outsl
cltd
test
add
inc
dec
xchg
cmp
rcll
jae
sub
mov
xchg
jae
mov
xrelease
aad
insl
mov
sti
dec
xor
mov
xor
enter
scas
xlat
sub
mov
jmp
mov
mov
jmp
test
stc
test
sbb
push
fdivrl
in
jle
adc
jae
or
jns
xor
jp
add
push
mov
cmp
js
stc
in
shlb
mov
outsb
sub
popa
sub
popa
enter
pusha
int3
xchg
push
outsb
xchg
ret
pop
and
push
fistpll
jp
lret
push
jo
xor
mov
xor
mov
xchg
push
popf
sub
and
loop
lea
iret
dec
sub
ud1
inc
loopne
test
lahf
addb
sarl
pop
mov
mov
leave
ljmp
cmpsb
pop
in
cmp
les
xchg
std
pop
out
js
adc
idivl
inc
insl
xor
lahf
insl
in
push
cld
dec
aas
ss
add
pop
push
mov
insl
shrb
ror
lods
fldt
icebp
sbb
and
lret
mov
out
xor
or
sub
cmp
cld
mov
push
clc
sub
xor
fwait
call
jnp
inc
mov
clc
push
fbld
add
xlat
stos
cmpsl
nop
dec
imul
pop
pusha
gs
stos
sub
les
jmp
stos
sub
cmpsb
push
das
int3
mov
mov
adc
ljmp
mov
pop
or
jp
test
decl
add
idiv
decl
add
add
xchg
xor
jmp
cli
fnstsw
in
jle
mov
push
adc
nop
sub
loop
lret
xor
pop
pop
jns
adc
push
jp
xor
xchg
mov
dec
div
mov
repz
ds
jl
xchg
test
repnz
push
inc
inc
push
jns
or
int3
add
mov
movsb
lea
in
pushf
stos
lcall
pop
inc
rcll
fwait
xchg
popf
push
mov
out
pop
int3
push
lret
inc
xor
sbb
outsb
mov
das
sub
sbb
pop
insl
iret
inc
or
dec
xchg
xchg
aam
pop
xchg
jno
xor
mov
shl
mov
lods
ds
rclb
dec
shl
fcomps
push
out
push
jmp
aaa
push
mov
repz
lahf
and
sub
test
cmpsb
mov
outsb
pop
fldenv
sbb
pop
repz
rcrb
pop
xchg
or
arpl
daa
xchg
push
mov
sub
sub
xchg
cmp
sub
adc
ficompl
cmp
daa
mov
nop
ja
dec
push
dec
std
push
repnz
out
pop
imull
xchg
mov
or
leave
adcb
and
repz
aad
pop
gs
push
ret
scas
cli
in
sahf
mov
test
test
inc
xchg
js
cmp
je
mov
jmp
push
mov
sub
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
mov
and
mov
sbbl
push
xorl
push
mov
mov
sub
or
mov
xor
adcl
push
mov
and
add
mov
or
lea
mov
mov
mov
xor
sbb
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
negl
jmp
add
jmp
mov
nop
jae
loopne
fidivrl
jp
jle
lret
lods
sub
rcll
or
test
mov
aaa
iret
stos
stos
sbb
fcomip
lock
pop
idiv
adcl
xor
jmp
lret
or
ss
pop
cmp
sbb
pop
mov
stos
push
push
lcall
inc
aas
mov
fwait
and
adc
ret
loop
sub
push
mov
fsubr
sbbb
xor
sub
or
cmp
fcoml
inc
clc
sub
aam
std
aam
pop
xchg
sbb
cld
xchg
push
pusha
out
je
and
les
rol
pusha
mov
sti
dec
cmp
adc
ds
div
idivl
testl
ljmp
scas
and
cmpsb
add
mov
fsubl
xchg
mov
mov
or
push
stc
out
sub
push
sbb
rclb
push
xchg
mov
adc
push
loop
inc
repnz
adc
mov
repnz
stos
out
ja
push
insl
insl
push
lcall
sub
ldmxcsr
out
jb
movups
rorb
nop
jle
loop
fimuls
popf
pop
inc
inc
sbb
cs
out
adc
cltd
mov
adc
push
xlat
xor
mov
cmpsb
inc
jmp
pusha
sbb
jb
stos
push
cmp
jo
sub
sbb
lods
ret
jmp
mov
push
fnstenv
adc
les
rol
ja
cltd
push
sbb
aas
in
loopne
jne
cli
inc
dec
push
inc
xchg
nop
stos
adc
sub
and
pop
and
mov
and
dec
xchg
in
adc
or
lret
mov
loope
sub
hlt
jno
ds
pop
pop
sub
or
and
call
in
out
mov
dec
jne
ret
jnp
mov
mov
mov
out
xlat
jne
mov
pop
scas
icebp
ss
sub
inc
imul
xchg
shlb
pop
into
lea
bnd
pop
sahf
jp
inc
xor
inc
sarb
add
repnz
cmp
pop
lock
loope
lret
ljmp
sbb
jae
inc
inc
shlb
jp
negb
adc
sub
int3
mov
les
and
pop
jle
mov
int
aas
push
inc
inc
add
arpl
loope
jge
adc
lret
out
inc
stos
cmp
in
dec
fldcw
lahf
add
int
push
bts
dec
pop
stos
lods
les
ljmp
or
dec
test
aad
jp
insb
imul
add
dec
ss
xchg
xorl
arpl
cltd
and
std
add
adc
sub
xor
sub
inc
add
add
add
leave
add
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
push
call
cmpl
jb
sub
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbb
mov
xor
and
add
sub
mov
or
mov
mov
mov
xorl
mov
andl
mov
jmp
jge
mov
mov
ds
mov
fnstcw
jp
jle
scas
loopne
mov
sti
pushf
add
jecxz
push
not
mulb
test
insl
test
into
jp
aam
dec
adcb
pop
das
sbb
sub
fiaddl
mov
ficomps
jmp
pop
rcll
test
dec
mov
cmp
sbb
inc
push
and
shl
fsubrl
cld
sbb
xor
mov
mov
subl
leave
mov
imul
aaa
lret
and
sub
push
aas
pop
cld
rcll
push
sbb
mov
loope
jmp
add
push
inc
mov
inc
cli
stos
fcompl
rcll
fistl
xchg
movsb
dec
xorb
popf
faddl
dec
jnp
xchg
insl
lock
xlat
dec
dec
push
lcall
xor
jno
and
mov
sti
in
dec
cld
test
or
mov
jl
xchg
push
jbe
scas
mov
je
adc
add
cwtl
movsl
insl
push
dec
fistl
sbb
popf
sarl
decb
and
ljmp
lds
and
xor
mov
or
insb
jmp
mov
or
popa
divl
add
xchg
sub
bound
lods
sub
pop
sub
adc
cmc
inc
xchg
insb
cmp
cmp
mov
dec
ljmp
and
neg
mov
jmp
mov
insl
cmpsb
xlat
xchg
push
les
cmc
mov
in
inc
mov
adc
iret
mov
mov
dec
in
inc
mov
repz
pop
xor
push
push
test
xchg
push
jmp
sbb
cmp
xchg
mov
sub
pusha
int
and
add
test
push
sub
push
push
fadds
ss
pop
mov
pop
sub
js
or
fs
adc
lret
imulb
cmc
test
fs
test
sub
xchg
xor
int3
jnp
mov
lret
mul
imull
rclb
divb
push
add
test
push
int
dec
pop
add
xchg
lret
arpl
xchg
jo
cmp
hlt
xlat
int
add
push
clc
push
mov
divl
test
inc
popa
sti
sub
mov
pushf
xor
pop
add
pop
fistpl
xchg
lock
dec
pushf
mov
mov
xchg
pop
lahf
sbb
ds
jno
mov
in
div
ret
cmc
movsb
popa
fwait
cmc
add
mov
sub
pop
xchg
lret
fstpl
scas
mov
pusha
movzwl
sbbl
add
adc
mov
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
cmp
jmp
cmovbe
je
dec
cmc
frstor
in
jle
jge
jle
sub
and
andl
inc
xor
sti
xchg
lret
ljmp
sub
ja
inc
adc
xchg
lods
insb
repnz
outsl
movhps
rcll
ljmp
push
pushf
lock
add
pop
stc
fstpt
idivb
mov
lret
and
and
jo
pop
xchg
stos
inc
mov
imul
jp
lcall
sub
imul
popa
std
sbb
adc
outsb
push
scas
inc
das
outsl
mov
sbb
push
cwtl
idivb
mov
inc
arpl
cwtl
push
insl
shll
or
jp
aaa
mov
mov
lret
push
ja
dec
aaa
xchg
pop
fld
mov
add
sub
mov
and
notl
stos
add
push
movsb
mov
repnz
jg
cmc
roll
jnp
test
push
fwait
xlat
or
push
js
les
xor
into
dec
jbe
in
std
mov
cwtl
mov
in
ffree
jl
push
imul
push
cmovl
sub
mov
mov
xor
or
sub
pop
test
inc
aad
xchg
scas
lret
push
fnstsw
xlat
add
and
push
xchg
aas
inc
movsl
mov
pop
dec
das
aas
dec
fcoms
nop
pop
lret
jmp
das
clc
fs
pop
mov
pushf
cmp
cmpsl
mov
adc
stc
inc
pop
pop
es
xor
clc
lds
ret
outsl
lods
in
jp
push
loop
int3
leave
xchg
add
fsubs
out
ret
lea
and
adc
jmp
jge
mov
bound
mov
lret
mov
stos
sub
sub
push
shlb
loope
jmp
jo
int
mov
mov
mov
xor
jno
stc
xchg
cli
idivb
pop
mov
adc
dec
mov
adc
push
and
jl
pop
outsb
push
push
inc
outsl
fldcw
stc
loop
popf
mov
add
movsl
jo
int3
mov
int
hlt
mov
bound
vhaddps
pop
jno
dec
sbb
mov
pop
xchg
add
test
scas
call
fisubrs
std
inc
pop
add
fdivrs
cltd
inc
fcoms
pop
cmp
add
js
scas
lahf
sti
pop
dec
sbb
pop
jnp
push
mov
dec
inc
cmp
test
inc
ficoml
inc
fiaddl
mov
jp
in
test
cmp
cs
dec
insl
testb
sbb
jns
xchg
fidivrs
out
adc
ret
xchg
movsl
sti
pop
idivl
xor
add
loope
rcrl
loope
sbb
mov
jmp
jns
loop
or
cmp
and
push
add
mov
mov
xor
add
cmp
jne
mov
jmp
inc
aad
shlb
push
out
push
stc
aas
imull
je
jle
jp
jle
into
iret
sub
jecxz
mov
push
mov
pop
shrb
mov
xor
push
out
scas
pop
cmp
inc
dec
jne
cmc
xchg
mov
mov
push
jl
xchg
mov
aad
test
mov
xchg
ret
mov
js
das
and
cmp
xchg
call
lea
scas
nop
sub
xor
fwait
add
sub
popf
sbb
push
daa
xor
stc
testb
add
and
in
js
sub
sbb
fiaddl
daa
mov
insb
pop
sbb
in
movsl
cltd
dec
push
loop
push
shlb
cmpsl
adc
and
mov
imul
xchg
inc
sbb
and
test
mov
jns
mov
out
movsl
inc
push
sbb
mov
inc
dec
pop
or
cmp
sbb
adc
jge
fistpll
mov
fmull
jnp
and
push
mov
jl
inc
mov
data16
es
pop
subl
repnz
call
gs
push
bound
repnz
popf
cld
test
dec
cmp
inc
inc
pop
dec
lret
call
mov
add
jns
inc
sub
pop
fs
call
add
aas
aam
cmp
mov
sbb
roll
pop
sub
pop
fdivrs
repnz
xchg
add
or
cs
jecxz
pushf
inc
mov
pop
xchg
jnp
mov
sub
jno
pop
sahf
dec
leave
ds
nop
xor
jnp
test
es
sbb
lret
movsb
dec
mov
cmpsl
ret
mov
loope
sub
jmp
lock
mov
push
and
xlat
and
xor
jbe
loopne
mov
js
je
mov
or
shll
or
sahf
inc
lret
mov
lea
cmp
loop
fisubl
shl
xchg
bound
sbbl
mov
loop
mov
rclb
jns
faddl
lcall
cmpsb
xchg
mov
es
mov
subl
test
les
divb
stos
adc
jne
sbb
push
shlb
call
inc
or
cwtl
push
mov
push
loop
push
ret
fldenv
and
in
jno
pop
das
lahf
pop
cmc
cmp
push
icebp
xchg
jle
pop
jp
test
inc
cmc
notb
or
aaa
or
cmp
jp
ds
nop
xchg
add
dec
mov
ror
roll
mov
arpl
push
cs
mov
add
jae
mov
xor
add
mov
mov
mov
jmp
enter
enter
sbb
mull
push
jle
jo
jle
jp
jle
mov
pop
orl
cld
sub
or
ja
sub
pusha
add
mov
repz
adc
clc
es
or
pop
dec
xchg
mov
notl
shlb
cmovge
in
hlt
repz
inc
or
mov
scas
loop
sbb
jp
or
test
imul
mov
push
inc
repnz
mov
icebp
push
cs
rcrl
ss
adc
lahf
add
pop
add
fistl
inc
les
pop
and
add
dec
push
fdivrl
gs
push
adc
daa
fdivr
push
sarb
mov
popa
and
mov
and
test
or
call
and
mov
jb
imull
and
jmp
xchg
adc
insl
shl
test
pop
scas
dec
loope
mov
mov
mov
call
pop
push
popw
sarb
or
fsubrp
jno
out
loopne
and
sti
out
inc
inc
and
push
mov
test
push
lret
arpl
pop
mov
inc
mov
add
or
ss
outsb
sub
add
repz
cmc
scas
mov
push
repz
push
cmp
addr16
sarl
and
mov
inc
mov
mov
cld
jmp
xchg
mov
pop
mov
jp
leave
adc
xor
push
loope
or
jle
lret
mov
std
sub
leave
inc
jo
aaa
xchg
test
fisubrs
js
fnstenv
mov
nop
insb
stc
mov
push
outsl
cmpl
imul
jne
shl
adc
xor
mov
pop
pop
add
push
mov
sub
xchg
rcll
fadds
xchg
pop
mov
jg
aaa
pop
inc
add
fisttps
add
jb
mov
cwtl
rorl
lret
push
and
pop
jecxz
sahf
push
ds
jmp
ret
push
fadds
cmpsb
push
or
push
in
inc
orb
mov
mov
inc
xchg
sub
test
xchg
popa
cmovno
inc
sahf
sbb
fwait
mov
jle
cwtl
or
lea
inc
lods
add
dec
lret
mov
inc
sti
pop
xor
jb
push
imulb
push
stos
aad
sbb
dec
loope
outsl
pop
aaa
mov
pop
fdivrs
fsub
adc
push
and
mov
pop
call
daa
js
xchg
mov
xchg
jmp
pop
stos
aaa
call
push
popa
xchg
add
es
mov
mov
adcb
int
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
jmp
lret
out
icebp
jmp
inc
popf
cmpsl
mov
add
jp
jle
pop
push
in
jge
mov
and
repnz
mov
outsb
ja
pop
lds
out
inc
sbb
add
shll
add
cltd
shll
lahf
push
out
dec
mov
jno
shll
mov
lods
insl
ficoms
xchg
das
popl
into
arpl
pop
jns
hlt
inc
push
jge
inc
jmp
test
push
cmp
insl
dec
lahf
lahf
jnp
shrl
insb
lods
push
loop
mov
mov
add
sbb
cmc
sub
outsb
shrl
inc
je
repnz
mov
push
mov
ret
fsubrp
push
fiaddl
and
adc
adc
inc
nop
in
adc
out
and
lret
sarb
ljmp
orl
das
scas
mov
aam
push
cmp
and
mov
lods
lods
test
dec
popa
adc
cmpsb
mov
imul
jmp
pop
nop
push
loopne
vcvttss2si
sub
hlt
push
inc
cmp
decb
dec
inc
pusha
je
lret
lret
pop
jae
cmp
mov
fdivl
insl
lret
loop
adc
jae
push
mov
push
cmp
adc
fidivl
loope
addr16
std
add
mov
ja
mov
fwait
loop
jno
xchg
pop
adc
in
sub
popa
outsw
mov
in
push
jecxz
xchg
inc
rcl
ja
into
orl
xorb
sbb
inc
test
or
pop
scas
push
aas
mov
mov
popf
call
mov
stos
or
add
jle
dec
dec
sbb
xor
lahf
and
test
and
sbb
xor
push
dec
dec
mov
leave
sub
jp
mov
out
add
mov
jae
sub
loope
mov
mov
or
aad
jo
and
xor
stc
lea
mov
mov
subl
push
adc
jmp
mov
xchg
ss
imulb
sbb
push
mov
repnz
test
add
jle
and
cltd
inc
test
mov
jnp
ja
jns
pop
xor
sub
mov
cmp
push
mov
ljmp
dec
xor
imul
xchg
push
lret
test
fisubl
cmp
cmp
cmp
adcb
call
and
pusha
enter
mov
bnd
sbb
lods
shll
mov
fldl
mov
push
stos
sbb
and
sbb
push
cmpsb
ret
add
mov
jbe
movsb
jecxz
dec
test
mov
sbb
inc
insb
andl
add
xchg
notb
sub
inc
xor
js
jle
jp
jle
movsb
jne
add
rol
cwtl
ficoml
bound
mov
or
fsubrp
icebp
outsb
cs
int
faddl
inc
dec
sbb
xor
xchg
add
dec
lahf
cmp
lret
and
adc
hlt
ljmp
aas
or
cpuid
popf
cmp
stc
lods
ret
and
adc
daa
inc
push
bound
cmpsb
idivb
xor
inc
icebp
cltd
sbb
out
adcb
leave
outsb
mov
sbb
pop
jb
sub
mov
data16
jo
jnp
sbb
jno
adc
fdivs
fdivr
adc
lahf
mov
imul
in
and
sub
xor
stc
into
pop
mull
inc
loop
call
in
inc
out
clc
jg
mov
lods
add
cmovo
cmpsl
cmpl
xchg
shl
sub
outsl
and
arpl
mov
out
add
mov
lds
push
sbb
f2xm1
pop
and
js
sub
add
inc
xchg
add
filds
mov
aaa
dec
xor
call
and
mov
lock
dec
call
sahf
std
push
cld
loop
pop
enter
adc
mov
shlb
cmp
mov
and
mov
sbb
out
adcl
ja
stos
imul
and
into
test
add
jg
popa
cmp
mov
in
jb
mov
xor
sbbb
pop
int3
iret
jmp
repz
or
push
sub
aas
xchg
aaa
lret
loop
cwtl
mov
sarl
mov
add
xchg
sbb
or
scas
jae
ret
xchg
pop
test
add
mov
mov
outsl
enter
mov
mov
out
dec
mov
daa
cmc
outsl
lret
rclb
sub
and
jle
adcl
adc
js
sbb
cmp
ja
dec
adc
mov
xor
cmp
pop
call
push
pop
fs
push
push
sarb
cmpsl
cmpl
gs
ret
fstpl
repz
inc
daa
sub
or
shrb
pop
cld
dec
stos
ret
fdiv
and
sub
cmpsb
push
repnz
adc
pop
sub
cmp
push
mov
sbb
loope
jp
mov
xchg
out
enter
popa
cld
jp
dec
dec
jecxz
repz
jnp
cmp
xor
or
out
lahf
cmp
lock
jle
ficoms
sbb
ljmp
push
lahf
leave
shl
rorb
lock
add
cld
dec
daa
orl
mov
test
cmp
je
cwtl
fisttps
test
cmp
pop
xchg
js
add
test
adc
add
clc
mov
mov
lea
jmp
dec
mov
pop
jno
nop
lret
add
add
jle
jge
jle
insl
mov
addl
mov
rcrl
xchg
rcrb
out
push
cs
shrl
dec
adc
adc
sbb
out
test
bound
mov
ja
mov
loopne
sbb
je
dec
sbb
jl
lea
fadds
mov
sub
inc
sub
cli
jae
or
insb
mov
sub
jo
out
sub
jcxz
test
imul
stc
mov
sbb
sub
or
ret
mov
sahf
js
pop
ljmp
push
mov
imul
fs
mov
push
mov
xor
sub
pop
adc
xchg
sbb
push
adc
aam
into
mov
negl
push
lods
push
mov
movsb
pop
and
sbb
ret
sub
xchg
sbb
sbb
iret
jp
out
push
int3
lcall
enter
std
or
jl
jno
jl
jbe
lea
sub
xchg
sub
pop
subb
inc
fiadds
in
sub
mov
add
sub
mov
ss
xchg
or
imul
inc
rcr
or
push
adc
sub
push
mov
stos
cmpsb
pop
outsl
bound
pop
fcmovu
test
jbe
mov
popa
ret
and
pop
push
out
cmp
bound
call
cmp
std
movsb
cmp
lcall
ret
push
sbbb
mov
js
xlat
cltd
imul
push
and
add
or
xor
insl
ljmp
mov
jo
movsb
rcll
mov
jecxz
sbb
jbe
mov
aas
xchg
pop
sub
loop
sbb
stos
adc
loopne
cmc
sbb
cld
dec
add
mov
inc
lods
jno
leave
xchg
frstor
sub
mov
mov
mov
sbb
dec
and
arpl
add
cmp
pop
imulb
cld
in
jg
adc
xorb
enter
cmp
out
mov
jg
sti
popf
push
and
sbb
dec
test
inc
sbb
mov
lods
push
loop
and
or
cmp
out
or
aad
mov
repz
dec
mov
lea
xchg
repz
test
xchg
inc
and
inc
leave
shlb
mov
cmp
mov
push
push
sub
into
rol
mov
rep
inc
daa
inc
xchg
test
xchg
xchg
or
imul
mov
fsts
shrl
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
jmp
adc
inc
sahf
popa
scas
icebp
jno
ficomps
mov
repz
jp
jle
jae
dec
loop
lcall
adc
bound
and
lcall
and
pop
test
pop
xor
add
mov
cli
jnp
xchg
mov
or
or
inc
aam
mov
pop
enter
mov
out
cmp
mov
xchg
dec
xchg
mov
loop
fadds
or
gs
mov
add
sub
cld
inc
pop
lods
pop
loope
fldt
push
dec
jae
mov
popf
add
mov
pop
add
emms
jb
loop
inc
xchg
lea
shlb
pop
inc
sub
fsubrl
fsubs
inc
aad
or
pop
test
or
shr
movsb
mov
sub
or
add
inc
aam
mov
dec
outsl
ss
lods
nop
mov
adc
inc
fisubl
xchg
in
inc
dec
lahf
sbb
testb
daa
and
sub
xchg
repz
outsl
sub
enter
adc
popa
mov
loop
aaa
popf
nop
inc
mov
xor
into
repnz
punpckhwd
add
into
sbb
sti
push
push
push
sbb
out
xor
pop
loopne
xor
idivb
cmp
mov
inc
or
addl
imul
mov
jmp
je
and
data16
jmp
and
dec
cmpsl
adc
pop
fldenv
push
adc
shll
jnp
test
push
mov
test
mov
xor
xor
dec
xor
mov
cmp
or
mov
pop
pop
xor
ss
sarb
bound
push
adc
sbb
xchg
dec
fwait
cmp
mov
jo
adc
scas
sub
or
mov
popa
arpl
jp
imul
or
xlat
or
daa
stos
push
mov
and
xchg
xchg
cmp
std
pop
sub
ficomps
xor
inc
push
jno
lret
dec
and
sbb
loop
add
mov
ret
std
std
cmpsl
outsb
and
cmp
call
inc
xchg
cmp
add
pop
push
add
jle
and
jae
push
leave
xchg
and
sub
cmpb
sub
mov
jno
inc
stos
and
mov
rclb
xchg
pusha
adc
gs
popf
in
mov
xor
cmpsl
mov
cld
jmp
inc
ljmp
jmp
mov
lret
stos
push
mov
xchg
cs
xor
jmp
mov
fisttps
mov
mov
out
jecxz,pt
push
data16
mov
arpl
sbb
and
sbb
mov
xchg
jl
jp
or
mov
sbb
pushf
push
dec
jmp
xor
decl
clc
mov
mov
mov
add
xor
cmp
je
jmp
sarl
mov
mov
shrl
fsubrs
lcall
jle
jge
jle
sub
pop
scas
and
test
testl
xor
cwtl
ret
cmp
cmpb
fisttpl
xor
mov
mov
jg
sbb
xchg
push
in
xor
or
xlat
xchg
cmpsl
mov
sbb
in
add
mov
jge
adc
repz
ljmp
pop
int3
sti
mov
dec
mull
xor
call
cmpsl
cltd
push
jg
xor
aaa
push
fidivs
add
lea
dec
sahf
xlat
sbb
mov
ss
scas
sub
and
stos
inc
test
fildl
jne
dec
lcall
in
subl
mov
inc
lcall
js
sbb
ficompl
xchg
mov
or
or
arpl
loope
xlat
push
fnstcw
dec
jae
fnstenv
xor
jle
pop
ja
frstor
jnp
lahf
insl
lahf
fld
xor
inc
cs
mov
es
lahf
mov
inc
xor
push
push
cli
pop
dec
push
lcall
mov
idivb
xor
inc
mov
mov
jb
cld
insb
inc
mov
mov
insb
lds
or
leave
dec
push
sti
rol
ss
imul
jns
and
mov
insl
mov
ljmp
push
push
ja
aaa
sbb
pushf
test
mov
ret
xor
mulb
movl
adc
mov
inc
das
nop
into
out
je
repnz
pop
jp
rorl
std
push
add
mov
xchg
imul
or
xor
in
dec
repz
mov
in
fs
stos
add
push
int
and
mov
enter
bound
and
dec
pop
jl
mov
cmp
xor
out
pop
les
push
mov
dec
sbb
insl
xor
xchg
jg
adcb
adc
sub
inc
test
pop
or
dec
stc
sub
int
adc
push
pop
test
pusha
mulb
inc
mov
mov
cmp
pop
jmp
ret
adc
jp
xor
mov
mov
aaa
dec
dec
das
dec
cmp
test
jmp
sub
pop
add
es
xor
adc
gs
mov
mov
ret
outsb
lods
inc
ljmp
push
push
sti
lcall
push
lods
jg
or
mov
leave
pop
fisubrl
das
inc
andb
icebp
dec
repnz
cld
dec
xor
or
dec
jg
cmp
jg
jns
and
out
dec
pushf
mov
mov
xor
add
jmp
and
jno
pop
xchg
sar
cmp
or
jle
jp
jle
mov
dec
jnp
rorl
sahf
bound
cmp
inc
daa
jbe
add
loop
nop
in
bound
pop
cmpsl
or
jl
loopne
xor
mov
adc
or
sub
mov
sub
jne
dec
add
sbb
fisttpl
repnz
xchg
xlat
mov
scas
push
and
cmp
adc
adc
add
and
dec
mov
shr
mov
insb
pop
inc
std
inc
cmp
adc
loope
mov
stos
jle
push
or
xchg
jl
jno
jl
mov
mov
cmp
dec
dec
mov
daa
xchg
cmpl
xchg
push
xchg
lods
mov
and
xchg
mov
sets
and
cwtl
dec
mov
in
xchg
or
xor
pop
jmp
je
cmp
mov
test
and
jns
stos
repnz
clc
jo
fidivrs
repz
adc
xchg
xchg
lret
xorl
sub
pusha
cwtl
fisubs
loop
sbb
loopne
bound
fwait
push
jne
adc
fsubrs
dec
mov
cmc
in
mov
cmp
ret
fildll
pop
out
iret
xchg
fstpt
xchg
or
dec
mov
out
pop
dec
orb
mov
inc
leave
or
jbe
jo
jecxz
iret
movsl
aas
xchg
flds
sub
jmp
in
clc
xlat
popf
lret
test
fdivs
sbb
jns
inc
imul
sub
iret
dec
cltd
aad
adcl
scas
std
pusha
aam
int
hlt
sbbl
int3
jo
push
stos
pop
cmp
or
sbb
dec
mov
fldcw
push
jae
dec
mov
sbbb
in
loop
add
stos
cmp
loop
and
ficomps
popa
popf
xchg
mov
xor
inc
cmpsl
jg
pop
pop
enter
mov
stos
mov
stos
sbb
enter
aad
es
mov
mov
mov
in
hlt
mov
jb
add
sbb
stos
pop
rcrb
mov
iret
push
pop
jecxz
jmp
ljmp
mov
cmpb
cld
jp
inc
dec
daa
loop
mov
xor
push
adc
xchg
push
outsb
mov
lret
dec
add
sbb
mov
push
loope
insl
bound
out
cli
sub
stc
mov
push
mov
cmp
mov
fldenv
mov
daa
ret
mov
cltd
xchg
pop
icebp
pop
imul
or
jb
iret
mov
jmp
movsl
jbe
jne
mov
or
xchg
std
mov
jecxz
in
dec
pop
das
inc
lea
mov
jmp
xorl
jmp
jmp
and
jnp
cmp
and
jp
push
mov
rclb
jle
jge
jle
jl
sub
sub
clc
mov
in
sub
outsb
xchg
xor
mov
icebp
dec
xchg
pusha
movsl
and
shll
jae
jmp
push
fidivrl
out
insl
mov
cmc
sub
mov
cltd
sti
mov
sbb
cmpb
jmp
mov
popf
pop
call
mov
jmp
cmp
pop
loopne
and
ja
je
popf
mov
push
roll
and
nop
fidivl
sub
ljmp
insb
xor
in
mov
lods
pop
clc
aad
xchg
mov
js
imul
and
mov
cld
xchg
add
popf
cmc
daa
das
mov
xchg
lock
inc
pop
xchg
adc
lret
je,pn
inc
scas
adc
ljmp
jmp
pop
in
adc
fildl
dec
xchg
dec
incl
adc
and
sub
out
stos
push
lock
xchg
sub
xchg
dec
stc
shll
cmp
into
jp
movsl
jb
lock
outsl
adcl
sub
jg
mov
cmpsb
jb
scas
icebp
pop
or
or
jl
mov
out
fs
jmp
addr16
das
mov
inc
aad
and
cwtl
or
ljmp
arpl
out
mov
in
jns
sbb
js
into
push
je
sub
int
xchg
inc
je
scas
lds
push
sub
jmp
or
jp
push
outsb
pusha
icebp
nop
add
mov
scas
sbb
mov
stc
into
cmc
cmp
stc
push
lea
call
stos
mov
sbb
stc
lds
jnp
pusha
cmp
pop
xchg
fwait
or
mov
pop
push
jo
xchg
adc
push
adc
mov
cld
push
and
sbb
xrelease
mov
daa
outsl
lret
mov
sub
imul
lea
cmp
stos
cmp
sbb
adc
push
fadds
mov
inc
out
sub
in
nopl
sahf
cmp
or
sub
gs
das
cmp
in
or
xor
mov
out
sbb
std
ljmp
cmp
jg
dec
out
sub
inc
push
stos
sub
add
enter
push
pusha
or
decl
lock
push
into
push
cmp
lcall
jecxz
aaa
stos
iret
aam
push
jne
and
lea
test
xchg
call
shl
mov
lods
addr16
cmp
push
insl
out
mov
mov
mov
jmp
xchg
jge
hlt
push
jne
pop
cld
into
inc
cmp
cld
sub
xchg
jp
jle
mov
es
dec
mov
sti
jle
icebp
xchg
push
andb
add
shl
fistpl
and
out
jmp
subl
pop
clc
cltd
adcb
or
int
sahf
lret
mov
mov
and
iret
sti
ret
fstps
sbbl
es
outsl
sbb
lock
rolb
enter
xchg
cmpsl
clc
push
shlb
repz
push
sub
arpl
clc
out
jns
fcmovnb
rcll
fwait
inc
push
add
out
cwtl
lahf
stos
push
cmc
call
lods
mov
fdivrs
clc
push
pop
movl
pop
fistps
cmovne
or
and
mov
mov
callw
loope
push
std
pop
mov
pusha
bswap
out
sbb
ret
inc
fwait
loop
cs
xchg
inc
sbb
dec
xor
dec
test
jmp
ret
sbb
push
pop
repz
out
cmpsb
mov
lahf
mov
fistpl
xchg
fadd
inc
cmpb
mov
and
enter
das
dec
jbe
pusha
aad
inc
insl
push
inc
in
int3
adc
cmpsl
xchg
add
cli
daa
fnstsw
jns
lahf
or
je
and
or
or
into
and
jecxz
xor
rorb
sub
mov
aaa
sti
int
sbbb
lahf
mov
pop
mov
inc
test
popa
jp
adc
nop
xchg
mov
data16
mov
mov
cld
and
fldl
xchg
hlt
dec
shlb
inc
inc
sahf
add
xchg
es
push
inc
mov
call
out
cmc
outsb
cmp
jmp
int
jnp
fs
iret
shl
lock
dec
add
clc
test
sahf
xchg
jle
adc
jp
sub
in
jg
cmc
jns
adc
or
test
push
jecxz
das
arpl
lret
dec
shlb
cs
mov
daa
addl
aaa
repnz
fadds
jno
xlat
mov
subb
insl
cmpsl
test
mov
and
pop
inc
pop
xor
loopne
in
xchg
sbb
dec
inc
cmp
xchg
ljmp
mov
xchg
mov
seto
loope
ja
adc
push
outsb
jge
sub
mov
das
lret
pop
xchg
adc
sub
dec
or
mov
adcb
dec
mov
loope
xchg
adc
fstps
sbb
ret
jb
lret
rcll
repnz
cmp
and
repz
adc
sahf
mov
or
push
lcall
jo
ss
push
cmpsl
clc
fimull
pushf
lods
fdivl
pop
sti
call
lret
int3
xor
mov
xchg
add
arpl
sbb
add
out
xor
mov
loop
into
xor
xchg
sahf
movsl
add
cmpb
jge
jle
sbb
popf
nop
jno
insb
xchg
int
add
xchg
sbb
arpl
fistps
inc
outsb
nop
iret
or
dec
pop
out
mov
xchg
jbe
push
in
jg
notb
inc
mov
push
out
mov
sub
xor
andb
sub
jno
push
mov
add
fisubl
hlt
jg
dec
mov
hlt
sub
xchg
test
mov
or
cltd
push
sub
cmp
sub
adc
fisubl
rclb
lods
lret
mov
aad
pushf
lcall
xchg
inc
push
dec
jns
sub
ret
loope
dec
ret
jno
push
repz
and
mov
sbb
inc
or
sbb
ds
mov
jno
sbb
mov
int3
mov
idivl
loop
xlat
cmpsb
jg
inc
sub
xor
push
cmp
out
inc
out
testl
inc
mov
inc
es
push
aaa
out
loope
in
xor
push
mov
pop
xor
fcomip
and
fwait
lahf
aad
push
stos
push
inc
lock
ljmp
mov
add
xor
push
or
popf
fsubl
adc
outsb
nop
std
inc
jg
inc
or
jecxz
cltd
bound
loope
xchg
cmp
mov
pop
jmp
icebp
enter
xor
lahf
push
dec
pop
fsincos
sti
inc
mov
xor
and
insl
cmpb
sahf
int3
aam
adc
in
push
sub
outsl
push
sub
push
cwtl
das
cmc
sub
jl
xchg
push
jmp
add
in
jne
cmp
or
divl
sub
cmc
out
and
xor
xor
inc
lret
pop
jle
jge
sahf
jecxz
stc
jg
jp
std
test
lds
xorl
mov
into
xchg
mov
nop
ja
addr16
add
je
jle
and
outsl
pop
je
cmp
mov
mov
and
testb
mov
sub
test
mov
or
gs
push
sbb
inc
loop
mov
xchg
popf
mov
add
daa
cs
into
cmpsb
adcl
orb
mov
dec
jns
jno
daa
mov
bound
pop
inc
addr16
ja
stc
xor
jb
push
lock
mov
negb
lret
rolb
add
lock
das
ficoms
xchg
cmpsl
xlat
push
and
daa
mov
scas
or
lea
and
fs
jmp
repz
push
inc
dec
stc
aaa
xlat
xchg
pop
jbe
scas
xchg
test
pop
push
aad
xchg
add
add
cmp
dec
push
xor
inc
or
inc
or
jne
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
adc
movl
xor
or
and
movl
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
push
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
xor
mov
add
mov
movzbl
xor
mov
orl
push
push
test
movl
je
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
jmp
sbb
mov
mov
adc
imul
mov
xor
or
sub
or
mov
mov
mov
sub
add
mov
and
mov
sbbl
xchg
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
neg
sub
adc
xor
addl
mov
xor
mov
or
mov
mov
mov
addl
xor
andl
xor
xor
add
movl
mov
mov
mov
je
sbbl
mov
adcl
xor
sbbl
add
cmp
movl
jne
pushl
call
mov
adc
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
xor
or
and
mov
mov
subl
xor
xorl
add
movl
cmp
je
andl
pushl
pushl
subl
call
sub
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
fs
mov
mov
jle
jge
jle
jns
fninit
jae
mov
add
jg
mov
and
nop
xchg
pop
mov
dec
mov
sbb
pop
mov
jo
and
add
mov
js
jp
pushf
repnz
pop
pop
pop
hlt
mov
out
adc
jmp
lds
push
jge
enter
sbb
dec
int3
mov
add
sbbl
cltd
pop
xor
jns
push
je
loopne
jb
les
js
pop
adc
mov
fs
xchg
xor
in
cld
dec
iret
lcall
cmp
jne
outsl
add
cmpsl
subl
inc
mov
popa
lods
xchg
xchg
insl
cmp
imul
add
xor
mov
xlat
rolb
adc
stc
push
outsl
pop
push
mov
popa
mov
insb
aas
jle
mov
aam
lea
mov
mov
push
adc
xorb
cmp
loopne
dec
dec
cmc
lret
test
mov
in
add
mov
jg,pt
test
push
xchg
lcall
incl
push
test
ja
dec
xlat
sar
fwait
xor
adc
mov
mov
test
pop
icebp
in
push
mov
jno
lods
aam
jnp
pop
or
adc
rcrb
iret
mov
out
xor
pop
inc
repnz
mov
adc
mov
call
outsb
cwtl
push
pop
jno
adc
js
mov
ret
inc
cmpsb
sub
cmp
sti
xchg
movb
dec
pop
popw
cli
clc
loope
sub
mov
arpl
inc
push
insb
dec
pop
push
or
insb
notb
mov
sbb
les
enter
xor
dec
adc
in
jl
loop
mov
push
scas
push
adc
pop
cltd
push
push
cmpl
or
fidivrs
inc
dec
jno
xchg
mov
mov
scas
popa
pop
nop
adc
push
push
stc
push
add
ljmp
adc
push
and
push
rolb
scas
sahf
xchg
lods
dec
sti
setns
push
imul
test
sub
aam
into
out
jns
push
dec
or
sub
out
cmpsb
mov
pop
cltd
inc
jecxz
lock
repnz
lcall
sub
jb
jo
cmp
or
mov
adc
push
loop
out
outsl
inc
cmp
inc
shl
es
pushw
bound
cmp
adc
test
sbb
aad
dec
inc
cmp
fsubp
mov
fstl
shrl
scas
lahf
mov
shrl
xorb
inc
in
mov
add
xor
mov
mov
mov
add
lea
mov
jmp
push
adc
shrl
cs
in
adc
jle
jge
jle
popf
out
frstor
lret
pop
or
and
and
stos
mov
push
fiadds
sarb
stos
add
pop
sbb
shrb
push
cmp
js
sub
sub
enter
xor
pusha
andb
push
lret
aaa
test
mov
sub
jne
sub
jo
je
call
lret
leave
push
jge
stos
icebp
dec
das
sub
dec
movsb
push
sbb
push
scas
add
cmovle
pop
sub
sbb
and
stos
addl
out
movsb
mov
jb
mov
pop
mov
xchg
sbb
mov
pop
fimuls
lret
leave
jl
sbb
in
mov
sub
xchg
call
incl
insl
cld
out
or
ds
sub
push
lods
sbb
movaps
sahf
insl
aad
or
popa
xlat
xchg
leave
fnstenv
iret
add
xchg
cmp
push
loop
xchg
fwait
mov
adc
aas
iret
pop
loope
mov
inc
and
sbb
repnz
shl
push
movsl
aad
aas
sti
push
stos
mov
cld
mov
lds
fimull
dec
movsb
lds
cwtl
test
push
xchg
mov
mov
sub
icebp
aad
xor
jb
stc
ja
pop
daa
fildl
push
stc
mov
xor
pop
int3
adc
push
or
cmpsl
xchg
mov
pop
jo
jae
mov
dec
repz
pop
cmp
or
xchg
dec
push
sahf
pop
out
push
mov
mov
xor
mov
xchg
sbb
in
jle
psllw
roll
aas
jae
xor
fiaddl
and
lret
fnsave
pop
xchg
je
int3
fwait
les
jle
fisubrs
lret
dec
jecxz
test
dec
int
and
or
js
popa
shl
jb
in
insl
repz
stos
leave
mov
add
mov
inc
ret
or
jne
dec
ss
arpl
jb
bound
jl
into
push
pop
mov
iret
cmc
out
jne
in
dec
loopne
out
sub
into
mov
int
out
je
cmpsb
fcoms
rclb
test
es
xlat
inc
xchg
sti
stos
push
fcoms
gs
orb
push
popf
xor
jmp
mov
push
test
inc
ds
sar
aad
outsl
adc
pop
int3
sarl
in
mov
in
lahf
xor
jb
push
dec
sub
or
and
aad
add
fmuls
cmpb
insl
lods
mov
jb
adc
stos
hlt
xchg
movsb
enter
jne
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
jmp
xchg
adcl
and
jle
loop
or
push
pusha
fsubs
jno
iret
popa
or
popf
outsl
andl
aad
lds
in
mov
imul
inc
sub
test
loop
popa
mov
push
test
or
push
mov
mov
pop
lcall
hlt
sbb
xchg
push
pop
cmp
inc
movsl
xchg
not
fsubs
fadd
cltd
shll
push
cmp
dec
and
jne
mov
call
es
iret
dec
in
es
das
mov
xchg
and
add
jg
pop
vmaxpd
inc
mov
shll
test
lret
popf
sbb
movsb
push
add
or
loop
or
int3
scas
fs
stos
sti
push
das
out
dec
mov
pop
hlt
adc
cs
adc
mov
idivb
xchg
frndint
mov
fmul
fmull
xchg
test
call
dec
mov
std
repnz
pop
sahf
xor
push
jge
daa
ds
or
xchg
mov
aaa
and
clc
lcall
inc
in
mov
push
mov
cltd
outsb
mov
mov
push
mov
cmp
xor
mov
xor
or
imul
in
add
and
mov
sub
cli
mov
fidivl
jo
pop
dec
mov
sub
sahf
push
push
inc
pop
pop
in
sbbl
arpl
or
lods
jmp
mov
outsb
mov
fdivrs
or
cltd
jb
int
out
push
add
xor
dec
dec
xor
jne
sub
jl
iret
sbb
out
dec
mov
popa
rcr
xchg
movsb
push
sub
sub
in
fimuls
cli
mov
ljmp
sbb
xchg
mov
fs
push
add
ret
xchg
push
into
cmp
or
push
call
xor
pop
jle
mov
xor
or
xor
mov
adc
pop
sahf
inc
ds
sarb
scas
pop
push
jne
adc
push
icebp
leave
std
ljmp
lcall
push
mov
cmp
hlt
or
jp
and
es
or
pop
imul
or
andpd
add
out
call
jno
sub
cmp
cmp
xchg
inc
das
or
std
pop
jne
xlat
sbb
add
inc
lar
cwtl
mov
js
push
push
cmp
in
aaa
movsb
std
in
sub
xchg
or
gs
inc
or
out
sbb
hlt
xchg
push
jb
mov
push
aas
lock
arpl
mov
push
push
and
or
insl
jno
mov
add
mov
mov
test
je
mov
push
pop
push
dec
jmp
test
jnp
mov
xchg
rcr
sbb
jle
jge
jle
pusha
mov
mov
pop
xor
ljmp
inc
push
xchg
and
pop
inc
in
sbb
push
jle
test
repnz
cmpsl
stc
rolb
sub
inc
jmp
lret
or
das
ja
mov
dec
stc
sbb
xchg
jne
mov
adc
sbb
xlat
in
iret
cmc
movsb
dec
test
add
xchg
cli
and
out
xor
mov
inc
das
sub
push
xor
clc
pop
and
scas
xor
gs
pop
nop
or
and
pop
add
adc
mov
cltd
scas
push
lret
mov
jne
mov
xchg
out
mov
pop
lods
test
out
idiv
call
movsb
push
pop
clc
insb
cmc
inc
jl
je
xchg
inc
fistpll
and
stos
mov
cltd
add
push
and
sbb
incb
sub
inc
lods
xchg
adc
add
lds
lds
mov
jae
pop
mov
std
push
adc
xchg
movsb
and
jp
cmp
shl
or
or
int3
mov
jno
jp
pop
mov
js
pop
push
out
cmc
mov
lahf
cmp
mov
xchg
jne
dec
int3
mul
inc
loopne
out
push
pop
fs
mov
pop
pop
dec
ds
push
sti
sbb
mov
jb
repnz
shll
pusha
in
cwtl
aad
mov
aad
rcrw
lret
daa
jb
cld
nop
aaa
cmp
and
pop
pop
push
lds
cmpsb
lds
pushf
cmp
int3
test
orl
mov
aas
and
in
fisttps
xchg
fs
fisttpll
pop
lret
aas
popa
adc
js
inc
cmpsb
imul
out
andb
shll
movswl
dec
push
push
sub
fwait
inc
imul
adc
and
jnp
mov
mov
xor
rcrb
lret
mov
ds
cmp
dec
test
sub
xchg
push
pop
add
add
push
sbb
cmp
or
cmp
cmp
loope
loopne
add
subb
jno
shll
sahf
lods
mov
hlt
das
dec
data16
or
inc
ljmp
and
push
dec
xor
orb
add
push
ljmp
mov
repz
aas
aaa
push
xor
pop
cld
xor
out
mov
and
push
pop
mov
adc
outsl
aaa
test
repnz
dec
inc
outsl
mov
add
jecxz
rolb
mov
leave
pop
lea
cmpsb
inc
lods
daa
push
shlb
dec
cs
aam
repnz
push
inc
enter
rcrb
lret
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
xor
xor
xor
pop
test
xchg
jle
jge
jle
adc
mov
setg
mov
push
pop
sub
and
mov
xchg
xchg
inc
popa
xchg
add
pop
mov
sub
stc
push
xor
inc
lret
push
jle
jb
and
push
shll
rclb
js
mov
mov
cmp
jl
lea
adc
mov
gs
sub
out
aad
push
sub
mov
ss
inc
leave
push
mov
push
xchg
push
repnz
lret
jecxz
mov
lock
cmp
fimull
aas
in
push
xor
loop
repnz
xor
cwtl
mov
sarb
mov
xor
gs
repnz
ds
into
ljmp
test
bound
out
adc
int
or
nop
std
imul
push
sarb
stos
std
xlat
loope
mov
lock
push
push
xor
nop
popa
into
and
jae
xchg
mov
sub
fwait
mov
sahf
push
mov
inc
inc
or
dec
adc
xchg
mov
jne
cmpsl
fidivrl
loopne
push
mov
jnp
and
jns
pop
xchg
movsb
insl
sub
sbb
adc
add
stos
mov
lea
into
insb
out
xchg
adc
push
xchg
cli
ljmp
push
xor
ficoms
jno
mov
pop
xlat
gs
gs
push
imul
sub
sar
mov
push
push
loope
lcall
mov
jnp
imull
clc
jne
out
mov
or
xor
shr
inc
test
push
or
cli
mov
in
jmp
cmpsb
rclb
xchg
and
into
bound
xor
mov
in
sbb
push
test
aad
arpl
insb
sbb
rcr
outsl
ss
or
pop
cmp
jg
push
js
addr16
and
in
xor
mov
and
movsl
inc
pop
xor
dec
inc
mov
sub
and
cmpsb
dec
out
xchg
jge
mov
fcmovne
xchg
xchg
xor
dec
xchg
insl
mov
movsb
sbb
and
out
stos
mov
and
and
cmp
les
sub
mov
ret
fs
aaa
out
mov
call
xchg
mov
lret
mov
sub
movsl
ror
int
or
in
stos
and
into
js
popf
lret
push
and
xor
sub
rorl
idivb
scas
test
mov
xchg
loop
sbb
rolb
ret
push
sub
icebp
lods
add
enter
push
movsl
mov
xor
mov
jnp
cmp
ss
jnp
cmc
movsl
lds
push
cld
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
jmp
inc
stos
push
jmp
jae
mov
jo
jecxz
inc
pop
lret
jle
jge
jle
imul
push
das
xor
test
dec
testb
icebp
mov
adc
xchg
add
xchg
int
fidivrs
adc
arpl
mov
out
orl
inc
xchg
std
roll
repz
cmp
out
sbb
loopne
adc
inc
inc
fnsave
ja
push
sub
cmp
pop
gs
ret
in
lods
out
lea
movsb
hlt
cmp
fnstenv
push
push
add
ret
or
fcmovb
jecxz
cmp
mov
cmp
hlt
mov
ret
sti
fldl
gs
pop
mov
pop
fistpll
or
cld
je
dec
lods
js
jb
jmp
addb
jp
add
loope
lock
pxor
iret
js
cmpsb
arpl
test
cwtl
and
add
push
pop
dec
cmpsb
int3
xchg
div
lds
dec
cmp
idivb
pop
fsubl
pop
push
dec
mov
sbb
cs
je
and
add
jle
es
jmp
arpl
and
sbb
xor
fs
stos
pop
orb
adc
xchg
flds
mov
test
ficoml
repz
pusha
leave
inc
push
inc
mov
inc
mov
jp
ret
push
mov
cmp
imul
push
pushf
cli
push
into
enter
aad
out
nop/reserved
sub
ja
jge
adc
xor
fiadds
xor
int
mov
pop
xor
lods
sbb
lods
xchg
ja
xchg
pop
lds
imul
pop
xchg
dec
or
ret
cltd
jo
jno
xchg
popa
fimuls
dec
pop
mov
lret
jle
pop
jp
out
mov
inc
sti
push
ja
jne
fwait
xor
repz
fsubl
insb
jle
push
sub
mov
lods
dec
int3
mov
jge
inc
push
inc
loop
hlt
pop
cmp
popf
adc
ret
mov
jmp
mov
mov
add
pop
mov
or
fnstcw
jmp
push
inc
pop
xchg
adc
sbbb
cs
addr16
xchg
sub
ficoms
pop
or
lret
lahf
icebp
aas
mov
leave
push
xor
mov
jl
dec
cmpsb
xor
imul
dec
push
push
inc
jecxz
push
rcll
les
jg
nop
in
xchg
ja
or
jecxz
data16
jle
cmp
jg
xchg
dec
xchg
insl
or
out
mov
fcmovb
lock
jae
push
inc
cmp
jnp
in
mov
scas
in
xor
dec
and
dec
jecxz
iretw
std
dec
jmp
xchg
sbb
icebp
push
sub
scas
push
add
sbb
xor
cmpl
jnp
repz
lea
jmp
das
subb
mov
xor
sbb
lahf
jle
jge
jle
push
sbbl
loope
pop
js
out
jae
out
lret
inc
pop
addl
stos
in
fsubr
test
sbb
outsl
hlt
lahf
fmulp
test
aaa
movsl
pop
test
inc
jmp
movsb
aam
dec
xor
popa
outsb
gs
pop
imul
hlt
in
xor
push
inc
mov
sub
lds
jae
les
jb
cmc
aas
out
fldt
lret
xor
xor
push
xchg
push
inc
inc
leave
sbb
lahf
mov
aas
jno
and
xor
arpl
mov
into
adc
mov
fcoms
jae
push
xchg
fwait
imul
add
insb
cmc
and
in
jbe
ficomps
sbb
aad
cwtl
and
cmp
hlt
stos
in
inc
jnp
jb
pop
fwait
cmp
push
call
or
sbb
cmp
push
sbb
shlb
gs
pop
dec
inc
in
inc
stos
scas
fstl
add
inc
mov
sti
and
xchg
adc
jns
pop
xchg
mov
jns
pop
ret
adc
bound
sbb
cmp
rep
push
rolb
fsubrs
push
push
mov
pop
in
push
ljmp
js
jns
mov
sarb
aam
push
inc
xor
rcrb
push
outsb
xchg
cmp
leave
ss
mov
mov
push
pushf
sti
ss
cli
imul
jne
xchg
xchg
add
test
insl
mov
push
push
es
adc
sub
out
aad
lea
jbe
fbstp
scas
jl
dec
loope
cmp
cwtl
mov
mov
add
push
movl
insl
mov
in
leave
rcr
fdivrs
lret
fwait
outsb
lock
mov
pusha
enter
push
movsl
add
cwtl
inc
gs
loopne
pop
xchg
pushf
pushf
and
lods
push
rclb
sub
push
xor
stos
arpl
adc
xchg
orb
fistl
cmp
aam
sub
mov
jle
bound
sub
cwtl
inc
loop
xchg
push
pop
mov
sub
fistpll
mov
dec
repnz
adc
push
and
pop
push
daa
shrb
loop
fistps
and
mov
test
or
cmp
in
incl
movsl
jbe
ja
inc
push
loop
lcall
or
jp
jb
enter
cmpsb
xchg
inc
inc
std
lds
int
adc
ror
jae
stc
gs
xor
lods
pop
into
sub
fwait
lea
mov
or
mov
pop
cmp
mov
and
not
mov
mov
push
inc
test
jle
sti
mov
pop
test
lret
pop
test
mov
mov
jmp
repnz
adc
aad
fcoms
inc
push
xor
jge
jle
fidivrs
jbe
js
imul
xchg
test
xchg
jae
jne
in
in
iret
scas
adc
mov
sti
jp
notb
fs
dec
pop
cltd
inc
add
lret
pushf
sub
add
sbb
sbb
mov
dec
lret
or
repnz
cwtl
jbe
mov
aas
sbb
out
sti
pop
jl
xchg
daa
sti
aas
fwait
loop
ljmp
test
mov
jb
cmpsb
bound
jl
insb
jae
scas
outsb
add
push
mov
pop
sub
mull
inc
stos
dec
or
and
mov
adc
in
and
jno
sarl
fdivrs
cwtl
test
xchg
lcall
xchg
popf
shlb
xchg
inc
loopne
push
rorb
fdivs
push
lret
out
add
push
mov
stos
cmp
iret
test
lods
outsl
or
sbb
lret
movsb
das
xchg
ds
pop
inc
in
call
cli
adc
adc
gs
dec
pop
icebp
pop
jmp
in
lret
mov
or
pop
push
mov
mov
lock
mov
push
mov
lcall
sub
loop
push
out
sub
mov
inc
out
jecxz
fnsave
push
ss
xor
xor
in
or
imul
movsl
pop
jecxz
jge
jo
outsb
out
ret
jae
cld
fs
sahf
leave
ljmp
call
sbb
xor
in
xor
shll
sub
jbe
pop
xchg
mov
pop
jp
ret
and
sbbb
adc
mov
push
inc
das
repnz
lret
pop
cmp
push
jecxz
add
xor
xor
or
pop
loopne
push
pop
imul
sahf
xor
test
movsb
jecxz
sti
and
ret
rcr
inc
mov
in
ss
mov
mov
ds
popf
and
fistps
add
sbb
cwtl
mov
ljmp
dec
xor
sub
xchg
testb
cs
cmpb
sti
mov
cltd
add
aaa
mov
roll
lret
mov
and
imul
inc
loope
jo
lret
add
or
sbb
loopne
sarb
mov
out
mov
and
in
cli
icebp
push
push
test
lock
int3
loope
je
mov
push
imul
aam
mov
lea
cld
jle
push
sti
insl
addr16
fwait
dec
push
and
dec
inc
dec
xchg
mov
addr16
dec
out
mov
aaa
inc
dec
test
ret
hlt
cli
stos
jecxz
push
pop
loopne
inc
or
scas
addl
push
or
rorl
add
call
roll
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
jmp
lods
and
xchg
jno
jno
add
cs
mov
xor
jle
sub
imul
mov
stc
je
cmp
xlat
nop
es
pop
test
cmpsb
arpl
mov
and
addb
push
out
les
fstpl
addb
push
ss
iret
mov
mov
lods
mov
adc
test
arpl
shrl
in
lods
cmp
sarl
and
xchg
pop
cmp
mov
nop
sahf
test
pop
out
cli
fs
cmp
mov
rcrl
repnz
shlb
pop
lods
xlat
jbe
out
adc
loop
imul
fsubrl
mov
fnstcw
ret
lcall
lock
mov
rclb
push
push
ret
dec
sub
xchg
mov
das
mov
ret
add
push
xor
popa
cmp
xlat
loopne
xchg
mov
push
aad
push
enter
sahf
dec
inc
es
mov
mov
or
clc
jecxz
std
mov
add
and
aaa
daa
lcall
sti
xchg
mov
pop
add
stc
aaa
mov
push
xchg
stos
cld
loope
xchg
sbb
and
ret
xchg
inc
fcmove
pop
add
dec
xor
dec
nop
xor
lea
scas
jno
add
mov
imul
in
ret
pop
mov
jnp
mov
leave
jecxz
ljmp
pop
sub
std
pop
and
mov
cwtl
pop
adc
rolb
adc
cmpsl
pop
pop
arpl
sub
push
scas
cmpsb
cmpsb
es
adc
ljmp
pop
int3
sahf
mov
inc
push
and
in
stos
aad
jnp
mov
cmp
loope
fwait
test
or
in
push
jl
mov
sbb
dec
orl
xor
sub
xorb
inc
mov
lods
lret
insl
mov
lcall
lret
push
inc
popa
jp
stos
lret
push
orl
dec
pop
pushf
xchg
adcl
xor
je
lods
mov
imul
add
outsb
mov
push
sub
fildll
sbb
adc
inc
aaa
add
shll
adcb
jg
xor
das
cmp
sub
imul
lret
sahf
mov
mov
mov
inc
fst
enter
mov
or
or
testl
inc
nop
cs
or
aad
xchg
sbb
cmpsl
push
pop
cli
or
sbb
push
test
dec
pushf
je
fcoms
sbb
push
adc
mov
outsb
mov
mov
inc
jmp
rolb
pop
hlt
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
push
movl
mov
movl
movl
push
movzwl
mov
mov
movl
push
mov
not
mov
movl
cmp
movl
jmp
jecxz,pn
add
push
popf
cmp
test
aas
movsb
jle
push
jg
jle
into
fs
pop
fcmovnbe
rclb
sbb
lret
movsb
test
popf
cmp
mov
mov
mov
xor
lahf
add
jns
mov
imul
div
push
int
cmc
dec
aam
bound
xchg
xor
jne
lods
js
xchg
pop
dec
cmpsb
cmpsl
pop
mov
mov
sbb
adc
sbb
jmp
call
adc
cmp
imul
fimuls
pop
loopne
ljmp
pop
sbb
adc
lods
negb
fisttps
add
jl
jg
mov
cmp
lret
cmp
fnsave
or
jbe
cmp
or
test
pop
stos
pop
sbb
xor
mov
mov
sahf
pop
movsb
pop
sbb
not
pop
pop
ficompl
nop
dec
pop
xchg
mov
or
jnp
jg
inc
lea
adc
insb
inc
or
ja
test
add
add
add
inc
cld
mov
xorl
xor
add
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
mov
sub
xor
dec
add
push
adcl
pushl
or
pushl
mov
call
mov
mov
mov
mov
jmp
jmp
xor
fs
mov
sti
adc
and
movsl
jle
push
jg
jle
mov
lret
cmp
js
stc
out
out
push
mov
sahf
sub
cmpsb
lea
ja
or
mov
fwait
stos
cmp
fisubrl
xor
jle
xchg
ret
loop
xorl
into
mov
xorl
cmc
test
das
push
out
add
pop
out
or
lahf
or
mov
push
xchg
into
or
mov
ds
jmp
sub
int
popa
mov
clc
sub
lahf
pop
push
mov
lods
or
dec
sub
sbb
mov
cmc
push
or
jne
mov
cmp
arpl
loopne
add
pop
xor
cmp
inc
popa
lods
inc
pop
jb
cwtl
mov
mov
xor
daa
dec
loop
mov
pop
mov
inc
arpl
inc
ds
call
call
inc
mov
out
and
push
cmp
scas
lret
cmp
das
mov
insl
sbb
add
test
jno
adc
inc
cld
mov
xor
add
cmp
jne
mov
xor
add
jmp
xor
xor
mov
mov
fbld
jle
jl
and
arpl
idivl
ret
push
rolb
fsubr
arpl
pop
fsubs
ss
jge
call
mov
test
rorl
mov
notb
adcl
ret
xor
sub
stos
into
mov
insb
jnp
aam
dec
loope
inc
jne
cltd
inc
lcall
jo
mov
in
inc
inc
int
in
mov
repnz
filds
dec
jnp
xchg
rcrl
imul
dec
outsl
add
and
scas
add
stos
inc
nop
inc
gs
inc
bound
adc
pop
mov
stos
ss
adc
je
das
add
and
and
inc
mov
ret
rol
mov
enter
loope
sub
daa
ds
out
push
in
lods
rorb
lret
cmc
cmpsl
xchg
mov
aas
sahf
fildll
jl
or
sub
mov
loope
dec
stos
pop
xor
out
mov
fldenv
or
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
subl
push
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
dec
mov
xor
mov
add
andl
push
negl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sbb
mov
xor
andl
movl
adcl
movl
subl
add
movl
jmp
cmp
jne
movzbl
mov
jmp
xchg
inc
jae
push
aaa
mov
fistl
jle
jl
jle
push
sbb
jbe
push
sub
xchg
adc
movsb
loop
or
pop
push
inc
mov
addr16
aas
pop
in
pop
mov
inc
mov
xor
test
dec
into
stos
das
jecxz
fcomp
icebp
shll
sbb
xor
aaa
loope
rorl
dec
lods
jp
nop
sbb
push
daa
dec
and
sub
cmp
push
repnz
pop
push
ffreep
test
mov
and
loope
fimuls
int
or
xor
in
xor
add
adc
dec
inc
lds
sbbl
mov
jg
in
aas
adc
je
repnz
push
daa
mov
pop
mov
fstpl
aas
shrl
cmpsl
and
or
popl
cmp
xor
xor
lcall
xor
pop
rcrl
inc
add
push
sbb
dec
push
xor
cld
leave
testl
xor
ds
mov
mov
add
jne
sbb
cmp
fbld
stos
shr
mov
mov
rolb
mov
lcall
mov
das
or
int3
js
mov
jl
sub
adc
cwtl
ja
fnstenv
mov
cmp
std
clc
loop
add
pop
neg
add
aad
ds
mov
je
clc
dec
adc
mov
xchg
push
push
mov
add
cmpsb
push
mov
adc
stc
push
lea
cmp
loope
setbe
inc
pop
add
fwait
jp
ret
mov
call
pop
mov
sbb
dec
push
adc
ja
adc
add
xlat
mov
and
test
jmp
test
aam
inc
and
cltd
outsb
aaa
inc
in
sti
repz
ficomps
adc
mov
inc
sbb
cmp
mov
movl
mov
movl
mov
movl
mov
movl
mov
movl
jmp
cmp
jne
andl
mov
sub
push
mov
add
push
jmp
es
gs
test
mov
jle
push
mov
imul
push
mov
push
pop
cmc
stos
call
movsl
add
pop
aam
cmp
mov
imul
dec
cmpsb
daa
outsb
stc
xor
dec
xlat
in
lods
sbb
xchg
js
jae
iret
es
clc
pop
jp
je
xchg
jo
mov
jae
dec
aas
pop
push
dec
xor
imul
nop
adc
cmpl
test
inc
pushf
push
daa
sub
jmp
in
lcall
inc
mov
enter
mov
test
std
dec
orb
sub
adc
insl
xor
pushw
dec
lahf
cmp
mov
mov
gs
mov
stos
push
sbb
movsl
in
xor
lods
ret
push
dec
ret
in
fs
dec
cmpsl
fs
insb
out
push
add
shl
dec
lods
nop
pop
add
xlat
stos
ja
push
lea
lahf
mov
mov
movsb
ficompl
dec
loopne
xchg
push
push
outsl
dec
and
insb
movsb
dec
mov
movsl
inc
mov
or
mov
sbb
js
sbb
dec
dec
inc
in
daa
aad
add
mov
push
jne,pn
push
xchg
out
mov
repnz
bound
aas
push
jg
cmp
lds
pusha
test
mov
jl
sbb
pop
and
push
mov
out
xchg
pop
loope
dec
je
popa
cmpsb
out
mov
inc
lret
test
xchg
movsl
and
mov
stos
lds
xor
insb
mov
mov
lock
in
mov
cmp
lea
push
xorl
and
jb
scas
clc
push
rol
xor
xchg
add
dec
cwtl
and
jg
dec
add
jg
lds
in
xor
mov
inc
test
push
pop
mov
stos
mull
jge,pt
adc
aad
mov
mov
call
incl
cmpl
jb
jmp
jmp
lds
imul
scas
jle
push
jl
jle
mov
in
cmc
ljmp
mov
stos
xchg
subb
roll
jge
inc
daa
shlb
shrb
test
jae
inc
push
pusha
mov
cwtl
sti
mov
lods
xchg
testb
js
loope
xchg
pop
sbb
mov
jne
cmpsl
push
sub
insl
add
sub
pop
sub
test
inc
sbb
ret
insb
or
stc
addl
rorl
call
inc
add
les
inc
inc
loop
mov
adc
stos
push
sub
jo
sahf
popa
pusha
xchg
in
inc
ror
outsl
stc
loop
ret
jns
outsl
pop
sub
sbb
stos
insl
lcall
xchg
or
xor
cmp
loop
vmovss
inc
xchg
mov
aad
in
in
mov
es
aas
call
mov
jmp
mov
dec
fdivl
jecxz
mov
idivl
sbb
into
sbb
adc
nop
arpl
adc
pop
cmp
ss
push
sar
xor
or
jnp
jo
and
repnz
bound
ss
mov
sub
outsb
mov
and
cld
cmp
mov
and
add
sti
pusha
stos
in
enter
jecxz
mov
in
mov
inc
pop
cmpsb
int
es
popf
imul
pop
sub
jecxz
xor
mov
add
jle
lods
mov
xchg
mov
pop
stc
mov
sbb
and
push
femms
out
push
push
notl
mull
je
jne
cltd
iret
adc
jne
xchg
out
sub
js
sub
iret
push
push
fnstenv
rcrb
lcall
dec
js
mov
adc
adc
adc
pushf
fwait
idivl
cli
sbb
jns
inc
stos
lahf
xchg
stos
push
aam
pop
cmpl
jmp
test
add
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
jmp
push
mov
jno
scas
out
lds
lahf
lods
jle
push
jl
jle
and
mov
and
ret
pop
decb
push
int
and
jmp
cld
in
mov
sbb
in
fistpl
mov
mov
dec
jb
fldl
sti
and
xlat
or
push
mov
lcall
jb
cmc
aas
sbb
adc
xor
xor
xor
push
cmp
cmp
mov
iret
push
jecxz
or
mov
cmp
mov
xchg
pop
iret
aad
mov
in
cmp
fsubrs
ss
fdivp
leave
inc
pop
mov
push
cmp
stos
ja
jns
mov
fcmovb
int
pop
mov
lods
mov
add
test
loop,pt
sub
ret
mov
inc
fistps
fsin
xor
xor
outsl
mov
int
popf
and
lret
add
push
pushf
sbb
or
inc
and
mov
icebp
mov
mov
ss
ljmp
out
adc
push
sbb
lods
inc
sbb
adc
sar
test
xor
repnz
fcoml
xchg
cmc
inc
sbb
push
mov
sbb
mov
jo
sbb
stos
popf
nop
dec
mov
daa
xlat
nop
mov
sub
sub
add
or
ds
into
out
push
out
mov
sbb
fwait
jnp
fiadds
dec
adc
xor
idiv
pushf
fnstsw
push
les
mov
int
sub
lds
jl
mov
clc
mov
xchg
test
lahf
sbb
fadd
lods
pushf
jle
rcrl
jo
pop
jno
aas
into
je
scas
das
push
xchg
loop
push
mov
inc
lea
int3
inc
xchg
push
cltd
pop
sbb
stos
out
call
stos
fs
pop
lcall
call
leave
ret
push
mov
push
movl
push
xor
movl
jmp
lcall
push
inc
push
dec
movsb
cwtl
jbe
scas
stos
jle
lods
jl
jle
loopne
sub
in
test
mov
mov
fnstcw
andl
pusha
das
arpl
add
cmp
imul
popa
inc
cmp
mov
ret
jg
pop
ja
daa
rcrl
daa
dec
or
jno
shll
cmc
or
pushf
sbb
stc
sbb
dec
push
mov
out
pop
rcll
mov
mov
fwait
inc
jnp
aas
mov
jnp
dec
adc
lock
push
pop
sub
aad
aas
pushf
aad
add
in
mov
loop
lods
lret
loop
cmc
inc
jne
sub
adc
pop
xor
lret
mov
push
fistps
ja
mov
mov
or
fisubl
jmp
xchg
adc
dec
fadds
mov
adc
dec
fwait
stc
fstpt
mov
leave
inc
xchg
or
je
ret
jne
insb
mov
push
rcrl
mov
dec
fstpl
das
bound
test
add
cmpsl
or
lret
lds
lds
adc
inc
or
cmp
push
in
jmp
sbb
aas
lahf
in
clc
mov
adc
and
xchg
mov
notb
push
rorl
fwait
or
je
inc
xchg
pop
pop
add
mov
shll
insb
test
and
rorl
jecxz
sub
pop
dec
fnstenv
cmpsb
fmul
pop
mov
jp
nop
sbb
popa
xchg
rorl
push
loopne
cmpsb
xchg
push
mov
fistpll
add
sbbb
adc
nop
scas
or
pop
adc
call
lcall
insb
push
inc
xchg
imul
push
pop
inc
inc
cli
in
xchg
dec
push
jg
flds
stos
inc
out
popf
push
decb
das
popf
cmp
add
inc
data16
divl
test
ret
lahf
add
in
and
in
call
aad
cmpsl
jecxz
imul
loop
mov
rcll
aad
push
nop
mov
jge
cmpsb
adc
adc
rol
inc
cmp
sbb
imul
test
and
iret
push
inc
pusha
jne
out
lcall
sbb
push
call
test
std
in
data16
nop
lcall
mov
or
lods
ret
jo
in
mov
adc
mov
cld
inc
inc
icebp
ret
cmp
pop
xchg
cwtl
shll
ret
fs
insl
or
aam
jmp
inc
cld
xor
daa
cmp
jb
add
mov
addl
jmp
insb
xchg
xchg
in
or
push
jae
mov
jle
jl
jle
mov
das
pop
jmp
sbb
sarb
loopne
mov
mov
lret
lods
xor
adc
mull
shrb
jb
sbb
xchg
mov
xor
fistpl
and
sbb
add
das
mov
jae
inc
jp,pt
pop
jp
movsb
js
adc
pop
aam
jp
mov
sub
pop
insl
bound
adc
or
jmp
in
jl
repz
stc
cli
dec
insb
mov
jp
sbb
pushl
in
cmp
std
push
adc
sub
inc
pop
pop
negb
push
lret
cmc
adc
adcl
and
and
mov
ret
ficomps
mov
lds
loop
inc
xchg
mov
mov
jae
repz
enter
pop
clc
fsubp
sbbl
iret
sbb
or
xor
xchg
in
pop
mov
and
sti
xchg
loope
ficomps
mov
in
sub
and
mov
inc
cmc
fisttpl
in
jno
out
aas
xor
or
push
emms
rcr
out
push
loope
dec
neg
fdivs
push
xchg
xchg
int3
sub
adc
mov
data16
fs
std
xchg
int
repz
inc
mov
pop
adc
orl
or
mov
jnp
sub
data16
or
loop
cmp
fisubrs
cmc
imull
pushl
dec
jbe
add
push
pop
cmp
std
ds
shll
stc
mov
add
xlat
push
into
mov
pop
xlat
addr16
push
ja
pop
test
push
dec
lea
push
lock
xchg
js
jle
sbb
hlt
subb
fcoml
pop
ja
daa
outsb
xchg
lret
mov
pop
mov
loope
sti
push
movsb
nop
sti
xchg
lds
dec
mov
jb
push
pop
mov
xchg
in
sahf
fsubr
insb
test
fcoms
imul
or
test
sbb
adc
pop
cmp
cmp
ja
inc
xor
imul
jg
cmp
pop
out
hlt
test
shl
adc
out
les
pop
dec
aas
adc
popa
mov
fstpt
xor
cmp
lret
push
inc
in
inc
icebp
jp
jle
or
js
pop
mov
out
or
mov
xor
aaa
sbb
movsb
ret
jae
aam
popf
ljmp
push
adc
mov
movzbl
adc
mov
xor
xor
xor
mov
jmp
mov
jno
jb
inc
pop
outsl
fldcw
mov
mov
jle
jl
jle
testl
pushf
jae
das
mov
xor
mov
cmp
xlat
adc
das
push
js,pn
xchg
mov
jmp
movsl
mov
out
xchg
mov
ret
add
mov
shlb
mov
pop
sbb
and
mov
shll
nop
lret
mov
pop
orl
jbe
inc
mov
idivb
mov
dec
jno
mov
adc
mov
lds
mov
inc
int3
out
inc
pop
xchg
scas
pop
mov
cli
sahf
cmpsb
movsb
sbb
cmp
loope
idiv
xor
or
out
jae
mov
es
scas
ljmp
xor
bound
jno
add
cmp
mov
in
scas
jae
mov
adc
lods
test
xor
test
sub
cmc
rolb
fldt
mov
out
shlb
xchg
adc
xchg
movsl
dec
inc
mov
mov
jnp
mov
mov
xchg
or
pop
cmp
andl
cltd
xchg
lea
imul
repnz
push
stc
in
nop
enter
lods
add
xor
mov
rcll
ret
add
outsb
mov
mov
jb
repz
mov
adc
mov
decb
lock
dec
and
roll
das
xor
jbe
pop
fists
pusha
or
pop
push
cmc
push
lds
xor
lcall
sbb
and
outsl
pop
popa
jge
aas
pop
imul
aas
sub
out
xor
inc
jns
mov
addb
out
mov
mov
mov
mov
sub
mov
jo
imulb
cwtl
es
push
in
shl
orl
inc
xchg
mov
test
mov
shlb
mov
cli
mov
cmpsb
mov
mov
mov
push
icebp
mov
mov
adc
dec
pop
push
dec
push
dec
mov
sub
pop
in
fistl
push
out
fisubrs
les
xlat
pop
test
cmp
aam
push
orl
cmpsb
ss
add
fcomps
cmp
pop
adc
imul
sbb
arpl
push
scas
mov
movsb
in
jno
mov
fiaddl
das
cmp
dec
scas
adc
add
fucomp
je
xchg
pop
push
in
movsb
scas
scas
mov
fsubrs
loope
mov
addr16
js
pcmpeqb
cmp
push
mov
jmp
lock
arpl
sub
scas
ret
rcll
jle
lods
jl
jle
sbbl
es
sub
rclb
in
test
push
mov
xor
scas
mov
sbb
pop
cmp
xorb
push
outsb
xorb
stos
xor
or
cmp
dec
pop
sahf
mov
push
adc
sbb
aas
mov
dec
lea
out
scas
lock
inc
push
push
data16
cmp
inc
imul
jg
mov
stos
mov
lahf
repz
jg
xchg
inc
mov
int
cmp
jge
in
mov
mov
ja
mov
add
test
mov
notb
sbb
ds
push
nop
inc
dec
out
stos
std
scas
xchg
sub
add
sub
pop
sub
ficomps
inc
rcrl
jl
xchg
movsb
pop
lcall
mov
cltd
test
jbe
sbb
stc
sub
mov
jnp
mov
inc
or
lcall
stc
pop
pop
xchg
nop
rcl
and
xorb
mov
popa
cld
std
cmc
cmc
jmp
loop
into
pop
xor
test
adc
sub
dec
iret
dec
cmp
xor
inc
or
lret
add
inc
sub
pop
inc
incl
xor
dec
sahf
pusha
mov
popa
and
stc
scas
aam
push
pop
push
adc
loope
sbb
js
nop
mov
aaa
testb
mov
cmpsb
add
mov
ljmp
lods
pop
sub
fstpt
nop
xchg
ja
cmp
jge
ljmp
shll
and
jae
ja
fdivrl
cmpsl
lock
int
fisubs
mov
ljmp
xchg
add
ret
mov
push
xor
shl
xchg
fildll
jbe
aaa
jmp
dec
mov
sbb
fwait
jp
lret
xchg
repnz
fs
add
fiadds
pop
or
sub
push
popaw
mov
aad
clc
ret
pop
cwtl
das
dec
xchg
pop
jge
int3
call
dec
insb
jp
testb
dec
sub
push
leave
sbb
mov
pop
and
push
ss
insl
adc
mov
jmp
insl
jecxz
imul
push
inc
mov
xor
rclb
cmp
push
add
pop
push
sbb
mov
shrb
orb
mov
xchg
pop
aaa
or
fcom
leave
jne
dec
xor
mov
sbb
jecxz
frstor
sbb
scas
int3
mov
xlat
pop
mov
sub
in
cmpsl
lea
scas
mov
movl
cmp
jne
mov
sbbl
jmp
inc
sbb
test
add
mov
idivl
jle
mov
push
rcrb
dec
jne
inc
pop
xchg
lea
stos
arpl
mov
fwait
jg
adc
fisttpll
jb
push
sub
push
or
les
int3
pop
ja
cmp
rclb
sbb
leave
adc
in
lcall
xchg
pop
inc
jbe
or
xchg
push
shlb
ja
jge
mov
cs
mov
inc
packuswb
cltd
push
das
loopne
push
xchg
mov
aaa
je
and
fs
out
test
test
lds
inc
push
add
xlat
xor
jmp
pop
xchg
cmp
arpl
cwtl
jo
shll
rorb
dec
push
imulb
xchg
stos
mov
fiaddl
cmp
dec
sbb
cmp
mov
cmp
inc
fistl
ret
lods
iret
push
sbbb
push
in
jg
pop
sti
aam
push
cwtl
sbb
scas
stc
data16
pop
mov
and
jmp
subl
push
test
stc
mov
pop
pusha
lret
sbb
mov
imulb
pusha
ret
mov
mov
xchg
sbb
imul
dec
pop
in
xchg
xchg
xchg
lahf
ds
mov
cltd
fstps
aad
cmpsl
pop
cmpsb
js
or
push
repz
std
fldcw
into
jae
test
inc
cwtl
popf
and
sar
jnp
jle
jo
push
push
icebp
or
sub
and
aaa
jmp
dec
outsb
sbb
cmc
pop
aas
fwait
push
outsb
insl
pop
mov
sbb
pop
adc
sub
aaa
sbb
iret
xor
cmpsl
sub
mov
repnz
out
call
mov
dec
test
aam
icebp
adc
clc
add
cmc
adc
imul
pop
stc
in
out
in
loope
icebp
push
mov
daa
std
fisttpl
inc
add
fwait
mov
arpl
sub
aad
dec
sub
push
icebp
add
and
sbb
sub
add
mov
ljmp
das
movsb
jmp
cmpsb
ficomps
pop
jns
push
test
in
test
push
adc
xchg
or
stos
and
insb
lahf
sahf
vfrczsd
subb
inc
adcb
sti
dec
les
cli
mov
mov
dec
aam
add
idivb
lret
or
mov
inc
mov
movl
xor
xor
add
subl
add
imul
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
xor
push
addl
mov
or
mov
jmp
jne
dec
cs
xchg
or
and
jl
jle
lahf
push
mov
lea
repz
arpl
xchg
rolb
or
fs
cwtl
sbb
push
push
jbe
popf
ss
and
pusha
out
dec
fucomp
mov
std
jle
lret
sbb
mov
repnz
add
xlat
mov
mov
inc
push
popf
mov
inc
adc
addr16
cld
add
in
mov
mov
adc
in
repz
mov
jmp
add
pushf
testb
gs
pop
and
jecxz
adc
xchg
aad
push
inc
push
imul
out
loope
mov
adc
iret
jge
nop
sbbl
mov
in
lahf
pushf
test
out
fildll
aam
out
insl
cltd
pop
ss
add
pop
mov
data16
pop
sbb
lcall
call
jp
fwait
xlat
les
fildll
imul
cmpl
pop
test
pushl
xchg
sbb
or
sbb
out
in
add
mov
test
ret
popf
pop
movsb
pop
push
shll
lret
sbb
adcb
ret
pushf
cmc
adc
xor
or
adc
or
fs
xlat
fs
xchg
push
mov
movlps
cmp
pop
xchg
scas
cmp
loopne
nop
int3
popa
cld
movsb
imul
xor
cwtl
mov
sar
mov
mov
int3
clc
xor
jl
fisttps
int3
nop
lds
aas
and
adc
mov
push
repnz
mov
das
and
sbb
ljmp
scas
fwait
and
cmp
dec
xchg
lds
movsb
adc
dec
push
xor
jg
cwtl
movl
sub
out
out
fcomi
mov
cmpb
adc
mov
call
pop
pop
mov
es
in
dec
pop
arpl
lret
cmc
cmp
test
subb
cltd
movsb
jg
cwtl
lret
andl
adc
cmp
fmull
stos
outsl
dec
add
mov
push
push
mov
imul
lds
shll
fildl
mov
add
insb
push
dec
xor
movl
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
or
sbb
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
xor
mov
sbb
xor
mov
adcl
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
jmp
out
adc
adc
ja
orl
icebp
jbe
mov
xchg
mov
jle
in
mov
adc
or
js
repnz
jge
pop
push
cmp
cmp
mov
pusha
popa
jo
mov
lock
call
push
mov
negb
movsl
and
scas
xor
dec
in
shlb
mov
sbb
push
or
xchg
jb
add
out
sub
aad
push
sbb
inc
in
jne
and
fwait
movsb
mov
add
cmp
and
fs
push
int
pusha
stos
adc
lods
inc
mov
jge
aad
inc
in
mov
xor
jl
or
dec
test
pop
jl,pn
sar
cmp
rcrb
in
add
sub
cmp
lret
jbe
pusha
cli
lret
cli
mov
inc
lea
fucomp
mov
mov
adc
dec
mov
stos
pop
cmp
loopne
mov
pop
and
pop
and
mov
outsb
sub
int3
inc
mov
adc
push
jne
xor
mov
jg
aas
adc
jae
xlat
pop
outsl
sbb
mov
scas
frstor
xlat
push
test
insb
xor
sub
out
loopne
sbb
pop
fldenv
mov
out
test
ret
insb
xor
lcall
ja
push
lahf
lcall
inc
cmp
scas
out
pop
xchg
dec
xchg
out
jns
pop
mov
jbe
sti
outsl
adc
inc
fs
mov
jb
sbb
sub
lcall
inc
push
jb
cld
rcrl
inc
enter
jmp
add
popa
or
mov
fwait
jno
cld
jecxz
adc
fsub
xchg
int
cltd
dec
mov
inc
dec
or
insb
imul
push
ficoms
in
std
dec
nop
test
insl
std
aaa
sub
push
daa
ljmp
jae
je
sahf
cmpsl
jb
inc
mov
adc
insl
sub
shl
mov
mov
cmc
std
lret
cmp
stc
xlat
push
mov
inc
pop
sbb
sub
fnstsw
data16
gs
jo
aaa
and
mov
pop
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
sub
xor
mov
movzwl
sbb
mov
mov
xor
andl
mov
add
andl
movzwl
xorl
mov
movb
adc
lea
mov
adc
mov
mov
xor
sub
adcl
mov
xor
xor
sbb
jmp
add
mov
cmpsl
or
xor
or
jg
jle
mov
daa
xchg
mov
mov
call
pushf
in
fwait
test
sti
leave
push
mov
mov
mov
test
pop
mov
ss
lock
and
call
movsb
xorb
sahf
dec
aam
jge
sub
mov
js
int
sahf
push
inc
test
in
pop
movsl
aam
hlt
jp
pushf
cs
fs
stc
adc
fsts
pop
imulb
pusha
stos
out
ss
flds
jle
add
div
imul
imul
and
inc
arpl
rolb
xchg
ja
sbb
adcb
mov
outsl
mov
or
xor
outsb
sub
sbb
mov
xor
test
inc
dec
rclb
cmp
xchg
adc
in
and
inc
and
or
mov
jl
in
imul
iret
sub
jecxz
and
add
in
imul
scas
push
nop
out
push
lahf
sub
clc
sbbl
jnp
ja
sbb
enter
mov
out
adcl
xor
dec
sub
out
sub
xchg
cltd
je
mov
les
popf
mov
cmp
ret
ficomps
inc
jp
inc
sbb
pop
push
mov
fdivrl
movl
or
movl
mov
orl
mov
movl
push
xor
or
mov
add
jmp
mov
mov
movl
inc
movl
cmp
movl
jb
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
addl
xor
sbbl
add
movl
cmp
jmp
adc
in
in
jno
aad
dec
add
xor
jle
jg
jle
pop
hlt
and
sahf
push
and
push
loopne
push
loop
xor
or
jo
mov
std
repz
lds
inc
imul
xchg
bound
loopne
rorb
loop
jb
jne
xor
inc
int
push
pop
lret
arpl
sbbb
push
lea
inc
cmp
dec
xor
cltd
ret
mov
insb
jo
fnstcw
sbb
mov
loop
xchg
popa
ds
xor
in
dec
mov
dec
rolb
ret
mov
sbb
inc
cmp
rclb
jle
je
fsubl
notl
dec
scas
xchg
dec
cwtl
ret
ss
xchg
mov
clc
cmp
fstl
cmc
pop
icebp
dec
xchg
mov
mov
mov
push
jnp
xchg
mov
icebp
mov
pop
inc
jecxz
jno
xchg
popa
mov
sub
adcl
jg
or
rolb
lods
pusha
inc
and
repz
jns
adc
popa
jecxz
pop
insb
xlat
mov
xor
sbb
in
mov
mov
fnstsw
jg
hlt
jbe
ds
pop
mov
sahf
dec
les
lret
pop
jne
jmp
add
jns
dec
xchg
jns
pop
cmpsb
sbb
sar
push
dec
lds
popf
or
dec
jo
roll
adc
mov
or
es
je
xor
add
sub
push
sub
push
movl
cmpl
je
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
mov
xor
jmp
mov
ja
jne
mov
insl
push
push
push
lahf
popa
pop
sub
inc
jle
icebp
jg
jle
push
mov
aaa
mov
sub
pop
stc
js
sbb
dec
call
test
push
push
stc
push
adc
pop
xchg
enter
js
cld
push
jo
or
in
mov
aam
jp
shrb
outsb
mov
jl
mov
adc
add
xor
aam
stos
fwait
jae
enter
cmp
scas
cmpsb
test
dec
pop
mov
add
ss
dec
mov
cmp
in
cs
out
cmp
bound
sbb
dec
dec
xchg
enter
jg
jo
cmp
and
inc
xchg
outsl
dec
hlt
mov
xchg
xor
mov
jb
das
push
or
inc
xchg
aad
pop
fs
jne
rorl
fbld
and
jo
jecxz
sub
pop
enter
jnp
cmpsl
or
clc
inc
cltd
arpl
pop
imul
cli
bnd
ja
fwait
pop
insl
ret
aad
mov
loope
push
mov
leave
xor
pop
mov
setle
movsl
inc
or
push
adc
icebp
mov
inc
push
insb
fsubrl
mov
call
sub
dec
imull
pop
push
xlat
mov
fnstsw
cmp
icebp
lods
icebp
sub
push
add
in
cmp
shlb
movsl
dec
fs
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
jmp
mov
adc
adc
imul
iret
cmpsl
xlat
mov
jle
jg
jle
hlt
inc
out
das
push
std
sub
and
jg
ss
int3
lcall
aaa
lods
bound
jnp
push
test
daa
hlt
mov
jae
sub
imul
in
rcll
push
shll
lods
adc
scas
nop
cmp
repnz
popf
push
es
dec
mov
mov
fs
loope
arpl
popa
enter
jp
out
clc
repz
pop
fwait
sub
aaa
inc
add
iret
lcall
sub
cli
enter
fmulp
lods
sbb
adc
mov
inc
mov
mov
lahf
cltd
adc
leave
pop
fstl
jne
and
mov
xlat
mov
jbe
cld
mov
fdivl
sub
or
jmp
andb
dec
daa
out
sub
pop
pop
les
push
imul
out
jp
xor
push
push
xchg
adc
or
leave
add
add
add
inc
pop
in
xchg
mov
dec
xchg
ja
and
cmp
mov
dec
cmp
xchg
fsubr
xchg
and
out
add
cltd
lock
sub
arpl
ss
aad
movsb
jge
aam
in
mov
mov
fs
jo
xchg
or
popa
aaa
mov
push
fs
mov
or
imul
pop
inc
adcl
jge
lret
pop
fidivl
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
jmp
sub
sub
test
pop
cld
add
jne
inc
jle
icebp
jg
jle
movsb
pop
push
ret
or
fstpl
cltd
mov
icebp
mov
rorl
xchg
xchg
pop
mov
dec
ja
sar
dec
adc
pusha
push
xor
jmp
js
lods
push
sub
or
cli
dec
rol
jle
jae
sbb
dec
fnstsw
inc
sbb
fdiv
test
mov
lret
movsl
mov
mov
xor
arpl
jae
fs
sbb
hlt
std
hlt
stc
daa
cmc
clc
je
roll
js
inc
fisttpl
or
mov
js
push
int3
dec
mov
add
mov
and
pushf
cmp
jp
xchg
and
sti
xchg
mov
aaa
inc
mov
cli
push
mov
jne
icebp
jnp
push
xchg
jge
popf
inc
inc
sbb
es
cwtl
mov
mov
je
cmp
mov
inc
pop
cmp
xlat
inc
lock
cmp
movsb
cli
ficompl
cmp
lock
incb
cld
pop
lods
jmp
and
test
mov
dec
repnz
or
int
xchg
push
dec
cmp
pop
lock
jnp
mov
inc
out
pop
xchg
inc
push
mov
xor
out
mov
xlat
push
fsub
decb
ljmp
lret
pop
push
cli
outsl
sbb
out
mov
xlat
and
pushw
shll
mov
daa
int3
sti
in
add
das
jnp
insb
mov
pop
cld
decl
jmp
ljmp
jo
fidivs
xor
jle
icebp
jg
jle
adc
xchg
pop
cmp
out
popa
imul
dec
loope
aaa
data16
insb
xchg
push
xor
jns
sub
push
xchg
jns
sub
aaa
push
xor
mov
in
fstpt
es
pop
and
mov
and
inc
sub
psubusb
lock
xchg
add
clc
stc
xchg
mov
pop
xchg
or
fdivrs
fnstenv
mov
sub
je
xchg
add
mov
mov
xor
es
pushf
mov
leave
icebp
cmpsl
pop
jne
rcll
xchg
repz
das
int3
test
je
popf
shll
mov
sbb
frstpm(287
cwtl
lds
adc
and
jno
decb
cmp
pushf
lds
cwtl
mov
push
dec
push
lahf
mov
insb
push
mov
cmp
sti
push
imull
out
sbb
stos
stos
subb
push
or
iret
sbb
add
lcall
test
or
adc
es
fdiv
mov
ljmp
popa
fs
sbb
imul
add
imul
xor
cmpsl
push
inc
movzbl
jne,pn
mov
in
fsts
push
into
imul
rcll
mov
add
mov
pop
leave
ret
push
mov
push
neg
movl
mov
adcl
mov
sbbl
add
xor
cmp
movl
jne
and
mov
xorl
mov
add
jmp
jo
sbbl
roll
push
sbb
add
jle
jl
jle
popa
add
adc
bnd
in
dec
xor
cld
sahf
sub
aam
scas
addr16
vaddsubpd
lods
mov
jl
cwtl
gs
shlb
loop
xchg
test
repz
loop
jae
xorl
out
dec
cwtl
outsb
ret
sbbb
mov
into
das
scas
stos
call
out
std
jp
js
hlt
jecxz
mov
cmp
cmp
jae
pop
nop
jp
popa
je
inc
sbb
cmp
loope
fidivl
inc
cmp
sahf
jns
or
xchg
ljmp
push
js
or
xchg
push
adc
iret
test
jbe
leave
pop
je
jns
cmp
sbb
sub
iret
repz
icebp
push
cmp
mov
roll
xchg
outsl
loopne
sbb
push
cmpb
sbb
dec
mov
push
add
in
aam
and
cld
movups
je
lahf
dec
mov
cmp
pop
xor
xchg
pushf
mov
lret
arpl
sub
mov
shll
aas
test
insl
stos
int
mull
mov
pop
ljmp
popl
int
stos
add
inc
movsl
add
es
out
das
xor
lret
cmp
fidivs
sbb
lods
mov
add
lock
sbb
xchg
mov
xchg
adc
and
jbe
popf
push
call
push
push
add
out
popa
das
cltd
fsubrs
loope
movsb
mov
clc
lea
mov
out
shlb
pop
jns
pushl
or
mov
pop
push
hlt
mov
das
and
pop
push
fnstsw
mov
cmp
add
push
xor
aaa
sbb
xchg
dec
jbe
jg
xorl
out
shr
inc
cli
outsb
xchg
scas
mov
pop
xor
fstl
jp
ret
rorb
sbb
pushf
jle
test
add
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
jmp
pop
pop
dec
pop
dec
xor
outsl
aam
stc
aad
and
jl
jle
jecxz
jecxz
inc
cltd
out
push
popf
xchg
loop
stos
add
cmpsl
lds
das
leave
pop
pusha
pop
test
push
mov
cltd
mull
sbb
fildll
fnstcw
inc
cmp
or
ljmp
sbb
or
lea
xchg
lods
adc
or
bnd
sbb
out
adc
popf
and
test
mov
loop
and
adc
jg
xlat
mov
in
out
mov
mov
push
js
pop
cwtl
pop
shl
dec
fimull
into
mov
pop
mov
stos
mov
into
and
cmc
mov
push
repz
jno
mov
iret
aaa
stos
mov
cmp
pop
sub
xor
test
push
mov
inc
test
jg
out
cmp
in
test
lret
stos
mov
cmp
add
fsubrs
nop
cwtl
fisubrl
mov
mov
rclb
sub
dec
loopne
out
jg
mov
or
push
lret
mov
xor
cmp
ficoml
adc
mov
out
sbb
aas
mov
loop
xchg
jge
mov
dec
outsl
adc
cmp
or
sbb
mov
dec
scas
cltd
ljmp
in
inc
sbb
rorb
les
and
xchg
add
xor
repz
mov
ss
mov
ret
mov
rcll
xchg
leave
xchg
lods
jns
mov
stos
loopne
cld
inc
dec
mov
pop
lea
scas
rcrb
out
imul
lret
jo
or
andps
sub
cld
xlat
dec
sub
daa
jo
and
pop
mov
or
mov
inc
push
mov
pop
mov
push
std
aaa
loop
and
fcomi
sbb
shlb
xor
xorb
inc
repnz
add
mov
cli
inc
mov
sarl
rclb
mov
mov
add
jmp
mov
imul
cmp
dec
jle
adc
lock
movsl
imul
or
push
stos
pop
test
in
fsubs
inc
mov
push
shll
ljmp
inc
mov
sub
jbe
jmp
and
jnp
cmp
and
rcrl
std
xchg
xchg
dec
test
aas
lock
fstps
loopne
fldl2t
mov
dec
inc
addw
adc
push
shr
mov
cmp
cli
adc
or
push
lock
xchg
test
lret
cld
and
jmp
in
mov
jg
pop
xlat
test
out
iret
bound
testl
add
mov
daa
dec
xlat
sub
cmp
sub
gs
jae
xchg
orb
popf
inc
or
pop
stc
sbb
cwtd
stc
push
lea
fsubs
and
pushf
push
and
inc
bound
jo
je
out
xchg
stc
test
xor
and
lods
push
add
cmp
pop
xchg
mov
pop
imul
mov
add
test
sub
icebp
jne
xchg
emms
fildl
int
add
sahf
out
fistpl
xor
mov
out
imul
sahf
push
xchg
mov
xchg
xchg
mov
fists
dec
aas
mov
sti
inc
inc
dec
and
imul
dec
aas
pop
pop
iret
ljmp
roll
pop
hlt
cld
push
inc
cmpsb
mov
in
add
fs
lahf
mov
push
es
inc
and
jp
mov
enter
rorb
and
std
lock
adc
jno
std
lcall
loopne
and
dec
inc
psrlq
push
lret
pop
fisubl
adc
sbb
inc
out
pop
in
test
ficompl
fidivs
leave
inc
aad
sbb
push
ja
push
out
insl
je
daa
jns
aam
mov
dec
cmp
mov
add
dec
dec
nop
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
subb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
and
add
sub
add
add
pop
sub
add
add
js
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
sub
add
add
test
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
cmp
add
add
pop
sub
add
add
jl
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
es
add
dec
sub
add
push
add
je
add
test
add
sahf
sub
add
mov
sub
add
out
sub
add
or
add
push
add
xor
add
dec
add
pop
add
je
add
xchg
add
lcall
add
add
fisubrl
add
out
add
cli
add
push
das
add
push
das
add
cs
add
inc
das
add
pop
das
add
outsb
das
add
jle
add
lcall
add
das
add
aam
add
in
add
cli
das
add
or
add
push
xor
add
xor
add
xor
add
add
add
jb
add
jle
add
mov
add
mov
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
xor
add
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
push
xor
add
add
js
add
mov
add
lcall
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
push
xor
add
add
add
cwtl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
add
add
je
add
xorb
xchg
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
push
xor
add
sub
add
ss
add
dec
xor
add
pop
xor
add
je
add
jle
add
mov
add
mov
xor
add
mov
xor
add
fidivs
add
clc
xor
add
or
add
push
add
and
add
sub
add
xor
add
cmp
add
inc
add
push
add
pop
add
fs
outsb
add
xorb
add
add
add
add
fdivs
add
hlt
add
or
add
and
add
add
add
inc
aaa
add
pop
aaa
add
jo
add
jle
add
mov
add
cwtl
aaa
add
movsb
aaa
add
mov
add
les
add
into
aaa
add
fidivl
add
repnz
add
push
cmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
add
add
stos
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
sub
add
cmp
add
inc
cmp
add
add
cmp
add
add
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
ljmp
add
add
add
add
add
sub
add
add
add
ljmp
add
add
add
add
add
add
add
add
jo
add
je
add
js
add
je
add
mov
add
add
push
aaa
inc
inc
js
fs
data16
jo
aas
inc
outsb
gs
je
push
je
je
inc
inc
pop
inc
push
inc
dec
push
inc
inc
dec
dec
push
inc
inc
cmp
add
pop
and
add
add
add
enter
add
add
adc
add
pop
xor
add
daa
add
mov
and
add
daa
add
pushf
add
pushf
and
add
add
add
add
add
aaa
add
push
and
add
sub
add
cmp
add
add
add
cmp
add
and
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
and
add
sub
add
add
pop
sub
add
add
js
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
sub
add
add
test
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
cmp
add
add
pop
sub
add
add
jl
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
es
add
dec
sub
add
push
add
je
add
test
add
sahf
sub
add
mov
sub
add
out
sub
add
or
add
push
add
xor
add
dec
add
pop
add
je
add
xchg
add
lcall
add
add
fisubrl
add
out
add
cli
add
push
das
add
push
das
add
cs
add
inc
das
add
pop
das
add
outsb
das
add
jle
add
lcall
add
das
add
aam
add
in
add
cli
das
add
or
add
push
xor
add
xor
add
xor
add
add
add
jb
add
jle
add
mov
add
mov
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
xor
add
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
push
xor
add
add
js
add
mov
add
lcall
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
push
xor
add
add
add
cwtl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
add
add
je
add
xorb
xchg
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
push
xor
add
sub
add
ss
add
dec
xor
add
pop
xor
add
je
add
jle
add
mov
add
mov
xor
add
mov
xor
add
fidivs
add
clc
xor
add
or
add
push
add
and
add
sub
add
xor
add
cmp
add
inc
add
push
add
pop
add
fs
outsb
add
xorb
add
add
add
add
fdivs
add
hlt
add
or
add
and
add
add
add
inc
aaa
add
pop
aaa
add
jo
add
jle
add
mov
add
cwtl
aaa
add
movsb
aaa
add
mov
add
les
add
into
aaa
add
fidivl
add
repnz
add
push
cmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
add
add
stos
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
sub
add
cmp
add
inc
cmp
add
add
cmp
add
add
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
imul
popa
jae
push
add
push
add
je
arpl
insb
insb
push
outsl
jae
add
fs
imul
add
imul
jb
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
add
mov
imul
jae
bound
push
push
imul
add
push
imul
popa
bound
add
add
outsb
dec
arpl
add
stos
add
fs
jne
jae
jb
add
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
add
popa
jb
jo
gs
add
mov
imul
imul
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
insb
outsl
jae
inc
gs
je
jo
add
add
outsb
dec
outsb
jo
je
gs
je
jo
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
push
gs
outsb
jne
je
insl
dec
outsb
outsw
push
add
adc
gs
jae
inc
inc
add
popa
insb
imul
je
add
arpl
outsl
push
push
outsb
outsl
ja
add
insb
push
imul
imul
fs
gs
outsb
je
cmp
arpl
popa
imul
outsb
add
sahf
add
push
arpl
jo
jns
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
inc
jb
ja
outsb
jne
popa
jb
mov
push
popa
bound
fs
gs
dec
jne
push
add
or
inc
gs
inc
inc
js
jno
push
gs
imul
outsb
add
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
push
add
je
jb
jo
add
sti
add
dec
outsb
push
arpl
push
push
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
imul
jae
addr16
add
xor
jb
outsl
dec
gs
push
add
addb
outsb
data16
popa
je
push
arpl
add
ja
arpl
add
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
inc
add
je
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
fs
outsb
jo
je
mov
inc
gs
jb
insl
gs
jb
arpl
mov
inc
gs
imul
outsl
arpl
add
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
imul
popa
jae
inc
add
dec
add
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
inc
gs
jns
je
insl
dec
outsb
jne
mov
ja
je
je
push
add
loope
inc
imul
outsl
ja
add
inc
jb
popa
je
push
imul
inc
add
add
popa
bound
imul
cmp
inc
push
jo
jb
add
or
push
imul
je
gs
add
add
push
jae
push
imul
arpl
add
aad
dec
gs
popa
addr16
outsl
js
add
add
jae
popa
addr16
outsl
js
js
add
inc
gs
outsl
jo
imul
dec
add
je
outsb
jne
loop
inc
imul
outsl
ja
js
add
fs
outsb
jne
add
add
jae
popa
addr16
outsl
js
add
add
jne
insb
push
arpl
add
outsb
imul
add
inc
gs
imul
js
dec
outsb
addr16
push
add
mov
push
imul
ja
add
add
je
insb
imul
jb
les
dec
popa
jo
imul
arpl
add
fs
je
imul
dec
imul
jne
je
insl
add
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
mov
dec
outsb
je
jb
arpl
arpl
add
je
outsl
jne
insb
gs
insb
imul
add
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
je
jae
outsb
arpl
jns
je
je
add
sub
inc
push
ja
jb
jne
push
add
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
add
popa
jb
outsl
ja
jb
add
and
inc
push
dec
outsb
jne
add
imul
outsl
ja
jo
popa
je
add
mov
imul
movl
imul
gs
js
add
pop
add
je
arpl
jo
jns
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
add
jo
imul
imul
push
jb
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
push
outsb
jne
popa
imul
add
push
gs
arpl
insb
insb
dec
outsb
outsw
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
lahf
add
jo
je
push
popa
addr16
add
sub
jb
gs
push
add
add
popa
insl
gs
arpl
add
data16
je
arpl
mov
dec
outsb
jbe
insb
imul
add
push
gs
outsl
jb
addr16
jne
fs
imul
add
je
arpl
gs
imul
add
inc
push
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
pushf
add
dec
arpl
imul
gs
outsb
jne
je
imul
add
fs
outsb
jne
add
add
imul
outsb
outsl
ja
gs
popa
addr16
add
cmp
push
gs
jne
jae
jb
add
je
gs
popa
addr16
add
inc
outsl
jb
addr16
jne
fs
imul
add
gs
je
inc
imul
jb
insl
push
add
stc
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
inc
push
xor
cs
insb
add
mov
push
gs
outsl
jbe
inc
imul
jns
add
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
pop
add
gs
imul
bound
gs
add
xchg
imul
jne
jb
add
mov
jo
jb
popa
je
add
or
gs
jne
jb
outsb
je
imul
jns
add
cmp
dec
jo
outsb
inc
jbe
outsb
je
add
dec
add
insb
outsb
inc
add
add
je
push
dec
outsl
arpl
add
push
outsb
push
gs
js
gs
imul
gs
add
je
popa
insb
inc
jb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
int
inc
jb
popa
je
inc
jbe
outsb
je
add
movsb
add
outsb
arpl
dec
outsl
add
outsl
add
outsb
insl
popa
jo
imul
insb
add
push
insb
gs
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
je
jb
arpl
fs
jae
add
addb
jb
gs
imul
rolb
inc
gs
popa
je
inc
outsl
jb
popa
je
add
outsl
add
je
imul
popa
je
add
jge
push
gs
data16
gs
imul
push
add
xchg
add
outsl
bound
push
gs
insb
insb
outsl
arpl
fildl
inc
jb
popa
je
dec
popa
imul
in
push
gs
outsl
insl
insl
push
imul
add
gs
jns
je
insl
push
imul
gs
jns
je
insl
inc
imul
jns
add
add
inc
popa
fs
gs
fs
je
add
mov
jo
insb
insb
outsl
arpl
and
inc
outsb
jne
push
gs
jne
arpl
jns
gs
add
push
add
fs
imul
js
add
mov
inc
outsl
insl
jo
jb
push
je
imul
add
gs
jb
outsl
jb
outsl
fs
out
inc
jb
popa
je
push
gs
outsl
je
push
push
add
popl
inc
insb
outsl
bound
inc
insb
popa
addr16
mov
popa
imul
insb
gs
bound
arpl
add
je
jne
bound
inc
outsl
jb
popa
je
add
xchg
add
imul
outsl
dec
jne
je
inc
jns
add
inc
gs
jns
je
insl
inc
gs
jne
je
dec
dec
popa
outsb
addr16
add
test
inc
gs
imul
imul
jns
add
jl
inc
fs
je
insl
inc
add
stos
add
gs
jb
outsl
insl
insl
inc
jb
outsl
jb
add
add
jae
jb
insl
jo
inc
add
add
gs
push
inc
outsl
outsb
je
js
add
repnz
gs
je
push
popa
imul
insl
gs
add
movb
je
arpl
imul
gs
je
inc
imul
imul
jae
jne
arpl
add
add
fs
imul
add
mov
inc
gs
inc
push
add
pop
add
imul
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
inc
push
inc
outsl
outsb
je
add
add
imul
add
add
je
jo
outsb
inc
imul
add
or
inc
imul
push
add
insl
fs
xor
cs
insb
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
gs
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
insl
add
gs
add
pop
pop
arpl
insl
outsl
fs
mov
insl
bound
outsl
ja
jae
add
add
insl
jae
pop
gs
je
add
imul
add
outsb
imul
add
arpl
outsl
imul
xchg
add
popa
insb
outsb
jne
add
add
imul
ja
jae
popa
je
add
add
jb
jo
add
out
jae
jb
outsl
insb
insb
add
add
arpl
outsl
insl
bound
add
arpl
jb
jb
add
ljmp
jo
add
add
jb
push
add
ja
arpl
data16
insl
bound
gs
add
int3
add
outsl
jb
add
add
outsl
ja
outsl
ja
jb
add
insb
outsl
arpl
add
add
jns
je
insl
add
sub
ja
jae
bound
add
add
jae
jo
imul
pop
pop
arpl
inc
imul
jbe
jo
imul
add
jne
arpl
mov
insb
outsl
arpl
je
insl
add
data16
jne
push
ja
jae
push
add
js
je
pop
add
insb
insb
outsl
arpl
add
add
je
bound
add
jb
outsb
je
or
gs
add
cmp
arpl
outsl
jne
add
add
gs
je
add
bound
popa
jb
push
pop
jae
je
jae
jb
popa
je
gs
add
jb
pop
pop
addr16
popa
imul
enter
je
push
push
push
inc
push
push
cs
insb
add
push
add
imul
inc
outsl
outsb
je
outsl
insb
jae
js
add
dec
insl
popa
addr16
imul
fs
insl
popa
addr16
add
adc
inc
jb
popa
je
push
jb
jo
jb
jns
push
popa
addr16
add
dec
add
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
dec
arpl
add
dec
inc
push
dec
xor
cs
insb
add
les
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
add
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
gs
dec
jne
push
add
popa
je
dec
inc
push
add
bound
gs
outsb
add
mov
inc
gs
gs
inc
inc
add
inc
add
je
gs
arpl
popa
jo
add
add
je
imul
jae
movl
inc
inc
add
jne
inc
imul
addl
gs
gs
inc
js
outsb
je
outsl
imul
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
add
gs
je
inc
dec
inc
imul
add
gs
dec
bound
arpl
outsb
add
je
imul
add
gs
je
inc
jb
jae
dec
outsb
imul
add
je
gs
dec
gs
imul
inc
jb
popa
je
inc
imul
add
je
imul
outsb
jae
outsl
outsb
inc
js
add
popa
je
inc
outsl
outsb
je
outsb
imul
iret
add
insb
arpl
insb
gs
gs
add
jne
fs
arpl
add
gs
je
push
outsl
insb
imul
add
add
je
jne
jb
outsb
je
bound
arpl
stos
add
gs
je
push
arpl
outsb
add
add
je
bound
je
jb
arpl
add
add
insb
arpl
imul
add
gs
je
inc
outsl
outsb
je
add
add
jne
inc
outsl
outsb
je
push
add
dec
add
je
outsl
outsb
je
popa
je
add
gs
outsl
inc
js
add
gs
popa
insb
gs
gs
outsb
je
imul
gs
dec
jne
push
add
rolb
push
gs
imul
jae
movsb
add
je
insb
je
add
jae
je
imul
dec
jb
inc
js
xlat
add
insb
insb
push
outsb
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
push
gs
jp
push
popa
insb
gs
gs
add
je
jb
jae
dec
jb
inc
js
mov
jae
je
outsb
add
add
je
jne
inc
add
mov
insb
imul
je
add
inc
inc
dec
xor
cs
insb
add
push
popa
je
inc
imul
outsb
jae
outsl
outsb
inc
add
push
dec
dec
push
inc
push
dec
cs
insb
add
popa
jns
pop
je
push
imul
lcall
add
or
dec
ja
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
data16
pop
cmp
add
inc
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
cmp
inc
add
cmp
mov
inc
add
ds
add
test
push
inc
add
or
inc
add
fisttpll
aaa
inc
add
inc
inc
cli
jne
in
incb
mov
cmp
add
xchg
pushf
clc
xor
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
add
pop
dec
imul
pushf
clc
sahf
jmp
add
push
cmp
pushf
or
jecxz
inc
add
adc
add
add
inc
add
imul
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
dec
dec
imul
inc
dec
dec
inc
dec
jne
dec
dec
push
imul
imul
inc
imul
insb
imul
dec
push
inc
outsl
imul
dec
dec
inc
dec
dec
sub
inc
inc
add
add
fs
addr16
add
dec
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
mov
inc
add
shll
and
inc
push
outsl
push
dec
cmp
add
in
adc
inc
inc
jae
inc
jae
popa
push
pop
pop
outsb
jbe
jns
push
imul
jns
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
popa
push
push
push
dec
je
push
bound
push
arpl
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
js
popa
inc
push
insb
pop
ja
je
add
insb
jb
inc
push
push
inc
insb
add
jbe
push
push
dec
imul
add
in
jnp
jnp
cmc
lcall
and
pop
adcb
add
add
fmuls
fists
or
cmpsl
sbb
pop
in
add
aaa
ljmp
ljmp
jecxz
in
imul
mov
mov
push
in
aad
or
sbb
dec
scas
or
js
inc
sbb
test
sbb
ja
adc
outsl
jbe
int3
or
loope
and
lock
mov
outsl
pop
inc
inc
sbb
xor
ds
loopne
or
cmpsb
jg
dec
jo
mov
or
sbb
push
movsl
fwait
lea
sbb
stos
inc
mov
mov
pop
adc
dec
js
sbb
insb
repz
dec
sub
nop
ret
jp
pop
inc
leave
inc
cltd
or
push
push
lahf
xor
pop
sbb
fisubrs
xchg
dec
sarb
jmp
jbe
inc
std
and
adc
insl
fucomi
cmp
lret
jae
aam
lretw
sub
xchg
loop
and
add
add
push
pusha
in
jle
lcall
cmp
add
add
add
les
iret
dec
lock
mov
add
lret
lock
jp
add
lock
xchg
mov
cmp
aad
outsb
pop
in
mov
dec
std
pop
push
add
mov
push
pop
xor
insl
push
pop
stos
sbb
test
pop
popa
push
cmp
rol
sti
fisubl
cmc
mov
sub
pop
add
push
xor
and
jno
fisubrs
popa
cmp
mov
fldcw
lahf
mov
aaa
jbe
xor
push
loopne
aaa
rol
cmc
push
int3
and
cmc
add
pop
hlt
push
mov
cmp
xor
jns
dec
imul
mov
arpl
push
ja
test
pop
sbb
push
fisubrs
sub
aad
push
or
cmp
fidivrs
pop
movsb
xlat
cld
je
xchg
push
add
xchg
xor
popa
mov
push
push
jl
xor
cmp
cmp
jmp
mov
add
add
mov
push
int3
fldcw
flds
add
add
add
mov
in
dec
idiv
lcall
bound
jbe
sub
es
fcmovnu
shll
aas
dec
aaa
jle
pop
or
xchg
movsl
scas
ret
push
push
xor
or
popa
jbe
fstpt
imul
adc
sti
cmp
sub
lcall
push
out
mov
and
sbb
leave
sets
sti
xchg
xchg
pop
fisubrs
icebp
cmp
mov
lcall
ja
das
hlt
sub
mov
addr16
aad
adc
push
gs
sbb
sbb
loop
mov
sub
nopl
movsl
mov
jl
sqrtps
je
clc
sub
int
push
dec
rol
cltd
test
subl
lods
test
push
mov
repz
cli
add
cs
into
lret
add
add
subl
roll
jbe
xchg
ret
add
add
add
dec
in
add
outsb
push
push
xor
xchg
notl
ss
outsb
mov
insl
cmpsb
stos
shll
enter
iret
idivb
sti
fisubl
jl
popa
in
push
sbb
data16
hlt
sbb
pop
sbb
imul
mov
jbe
ds
mov
or
fwait
out
setnp
xchg
push
mov
or
cmp
imul
cltd
xor
pop
mov
pop
dec
push
push
shrl
mov
sbb
xchg
outsl
jo
fisubl
push
adc
inc
shll
es
mov
jno
daa
arpl
into
inc
lds
cmp
daa
into
mov
or
fcoms
popl
aad
add
add
mov
bound
fwait
inc
pop
mov
ficompl
lock
out
xchg
lock
test
mov
outsb
rorl
call
idiv
inc
pop
jae
or
pop
dec
or
out
mov
fildl
add
add
add
adc
pop
sahf
lahf
popw
sahf
jecxz
repnz
out
test
or
nop
into
and
test
jo
je
jl
fwait
aas
add
mov
setle
sbb
xor
or
les
cltd
lret
push
xor
or
jno
add
rcrl
in
push
pop
hlt
cs
andb
pop
dec
fimull
pop
mov
xchg
scas
mov
fsubl
xor
cmc
into
dec
ja
mov
arpl
mov
in
daa
shrl
cwtl
and
jp
imul
pop
mov
mov
mov
and
fcmovnbe
cmp
jmp
ds
sbb
jns
push
cmp
outsl
sbb
imul
test
mov
in
push
lea
dec
mov
mov
xor
outsb
mull
jns
je
push
test
cwtl
cltd
mov
or
add
roll
mov
repz
in
jno
jmp
add
cmc
insl
cmc
out
lcall
enter
mov
lcall
add
cmp
xchg
sbb
or
jno
mov
loope
popf
pusha
movsl
loopne
lods
rol
loop
test
enter
adcb
pop
xlat
xchg
cld
xchg
test
in
dec
push
sbb
std
adc
pop
mov
and
xchg
popa
test
inc
dec
sbb
pop
sbb
out
sbb
test
push
out
jp
push
xor
hlt
mov
inc
mov
jns
dec
mov
xchg
xchg
es
inc
out
adc
mov
inc
gs
stos
cmp
xor
fistpl
jp
rolb
xor
jl
aad
rolb
loop
jge
jnp
test
push
in
cmp
lret
std
jne
adc
jnp
push
std
sbb
mov
or
mov
clc
jne
jge
ds
aas
jmp
push
pushf
add
lret
jnp
subl
add
jle
add
outsl
jle
aas
mov
cmp
fldl
add
add
add
in
ss
add
mov
mov
adc
add
jno
xchg
pop
popf
inc
out
mov
adc
add
mov
int
rorb
ss
jne
xchg
add
int
mov
ret
add
jge
push
lret
cmpsl
insl
stos
xor
icebp
mov
dec
js
stc
push
aaa
pushf
loop
imul
pop
in
loope
clc
xchg
gs
sub
mov
jb
flds
xchg
das
push
adc
dec
xchg
push
xor
jbe
loopne
stos
fisubs
push
jbe
pop
add
pop
inc
lods
in
aas
fs
sub
mov
jb
push
inc
gs
in
push
dec
arpl
call
nop
adc
stos
ficoms
sti
cmpsl
fdivr
sbb
addr16
xchg
pop
xchg
jl
int3
movsb
pop
push
in
and
jnp
xor
mov
filds
fsubl
add
add
jle
and
scas
sti
jle
pop
push
pop
push
fiadds
add
add
add
lahf
into
mov
mov
jae
sub
bound
testb
ljmp
cs
insl
out
sbb
stos
xchg
mov
mov
adc
ret
subb
shlb
ljmp
xchg
shrl
jb
addb
push
cmpsl
adc
icebp
aas
pushf
adc
mov
dec
js
test
pushf
push
sbb
push
out
adcb
add
xchg
push
mov
mov
push
push
insl
pusha
adc
pop
loop
ss
shr
jbe
repnz
dec
pop
in
scas
sbb
jg
push
inc
ficoml
addr16
dec
xor
sbb
push
adc
addr16
lock
or
pop
out
push
jae
or
test
sbb
cmp
push
sub
mov
mov
movsb
cwtl
inc
mov
lahf
fnstcw
ss
lahf
stc
bound
outsb
icebp
filds
add
add
add
add
js
pop
movsl
or
inc
leave
icebp
fwait
pop
cli
stos
sub
xchg
pop
xor
or
je
mov
jns
addr16
mov
inc
and
arpl
fidivs
mov
popa
mov
icebp
gs
push
push
mov
push
pop
loopne
adc
and
daa
pop
cwtl
loope
sbb
cli
addb
pop
adc
movsl
jg
dec
mov
push
mov
cltd
shlb
data16
addr16
cld
enter
mov
xor
and
rorl
pop
mov
cmpsb
adc
sbb
lock
cmpsb
inc
mov
or
ret
adc
add
fs
fidivrs
ret
mov
xchg
shll
add
adc
fbstp
push
pop
cltd
add
sbb
jae
pusha
pop
push
movsb
rcll
or
add
add
push
jl
jle
insb
out
cs
ret
imul
add
add
sbb
sti
mov
dec
in
lock
mov
mov
in
cmp
pushf
push
dec
stos
mov
mov
ja
sbb
ret
xchg
xor
aas
push
sbb
ja
out
push
test
or
arpl
mov
lea
cld
inc
pop
iret
dec
std
push
and
sbb
aam
xor
cmp
mov
adc
jb
cmp
jne
push
add
jge,pn
popf
jge
pop
lods
testl
ja
add
dec
jnp
push
loopne
inc
out
js
addr16
jle
jne
fs
add
aam
and
pusha
mov
mov
loope
outsb
push
push
stos
adc
bound
out
or
outsb
lods
les
or
pop
loope
xor
fstpt
or
push
xor
mov
flds
sbb
mov
jns
sub
cmpsb
stos
imul
add
or
cmpsb
sbb
cmp
stc
repz
and
mov
add
mov
adc
in
xor
adc
loopew
add
add
add
inc
jl
das
gs
movsb
pusha
ss
push
push
loop
xor
je
test
nop
dec
adc
pop
xor
sbb
cwtl
add
mov
outsl
out
adc
sub
testl
inc
xchg
adc
rcr
mov
pop
cmpl
jg
xchg
adc
mov
lea
arpl
out
nop
push
mov
arpl
pop
rcll
inc
lea
sub
sbb
sub
hlt
dec
dec
rcrb
push
fisttpll
roll
push
jmp
or
jle
sbb
pop
pop
and
dec
push
or
idivb
mov
mov
lret
and
xor
cmp
stc
pop
adc
sub
or
mov
mov
mov
add
test
addb
notb
fsub
into
adc
and
add
aaa
data16
jne
mov
lcall
add
add
add
sub
enter
ret
fwait
pop
not
dec
cmp
ss
enter
sar
fstps
sbb
mov
or
jnp
or
shrb
ljmp
pop
xor
mov
int3
mov
push
int3
fldt
loop
xchg
mov
lods
push
jecxz
xor
mov
push
adcb
jbe
or
insb
mov
repz
push
jns
xor
clc
mov
jmp
or
nop
leave
es
mov
pop
call
jae
cmpsl
fadds
pop
lret
in
loop
adc
sbb
xor
push
or
dec
pop
mov
mov
mov
stos
adc
cltd
or
je
pop
std
mov
mov
dec
lcall
psubd
lods
in
add
sub
repnz
push
jnp
add
jnp
sti
xchg
lahf
mov
or
add
add
add
cmpsl
jg
sub
in
add
loopne
movsb
shlb
sbb
les
cltd
lahf
push
add
fs
push
cmpsl
add
leave
int3
push
dec
mov
popa
mov
cmpsb
xchg
adc
aaa
ja
fxch
shl
sbb
jg
out
pop
test
mov
sub
loopne
adc
sub
push
nop
fnstenv
pop
mov
jno
pop
cmc
pushf
out
adc
aad
jo
mov
sub
xchg
lea
popf
scas
pop
in
aaa
pop
xchg
push
add
lahf
sub
hlt
push
lahf
add
outsb
in
cmpsl
sbb
scas
stos
imulb
sbb
ja
sbb
xlat
leave
add
push
shlb
xchg
adcb
cld
jp
or
inc
xor
mov
and
jp
fsub
scas
cmpsl
jo
stos
mov
and
movsb
add
inc
mov
ds
add
sub
pop
sarl
mov
loop
in
add
add
add
mov
lret
aam
jecxz
cmp
sbb
sbbb
jle
sbb
sbb
xchg
popf
adc
lret
inc
push
dec
and
inc
dec
loope
ja
xor
daa
sahf
dec
or
mov
popa
loopne
sub
lret
jmp
sbb
test
sub
out
pop
in
xchg
leave
es
sbb
or
xchg
mov
jbe
mov
fmull
js
adc
dec
sbb
int3
out
mov
faddl
repnz
or
shlb
in
jecxz
adc
movsb
iret
fidivs
out
fistpll
lock
xor
enter
push
inc
or
in
jg
mov
clc
jl
jg
cmp
adc
jge
cmp
xchg
pop
and
pop
sbb
pop
popf
pushf
adc
push
pop
rorb
xor
or
xlat
out
test
neg
xchg
jmp
jle
stos
sub
ja
insl
lock
std
repz
popa
cltd
mov
add
add
add
cmp
popf
iret
push
dec
pop
out
lock
jnp
jo
in
push
xchg
ret
into
dec
scas
pop
xor
out
push
lret
lahf
bound
jbe
jg
mov
das
shl
int3
mov
enter
xchg
xchg
cmpsl
add
icebp
dec
cli
loop
sub
jne
filds
inc
push
mov
scas
leave
jle
cli
inc
add
push
or
sbb
sub
sbb
adc
sbb
js
mov
sub
bound
js
push
xchg
xchg
mov
mov
movsl
imul
dec
pop
sub
add
add
pushf
nop
jbe,pt
dec
in
testl
test
jp
cwtl
std
das
add
sbb
xchg
push
jne
or
or
sub
push
lahf
rorl
lahf
scas
mov
adc
push
sti
arpl
and
add
add
lock
cmp
arpl
je
cmpsl
leave
pusha
addr16
add
add
add
mov
stc
out
mov
cld
add
call
repnz
and
xlat
sbbb
cmpl
mov
cmpsl
xor
int3
lods
mov
dec
pop
sbb
fdivr
bound
jl
mov
stos
cmp
and
sub
jne
cmp
sub
add
call
out
cwtl
sbb
das
xchg
sbb
sbb
leave
leave
jmp
cmp
and
insb
adc
dec
pop
sub
cwtl
not
xchg
mov
pop
popf
jnp
hlt
cmp
jne
stos
xchg
fimuls
gs
pop
jnp
and
les
testb
das
mov
add
adc
fcmovnbe
dec
mov
mov
jns
sbb
inc
mov
add
test
adc
out
mov
push
push
xor
mov
cmp
jo
inc
jno
pop
das
dec
push
ja
push
out
test
rolb
add
insl
lcall
mov
inc
sub
scas
pop
sbb
add
add
add
orl
shll
mov
ds
add
js
or
clc
stc
mov
add
pushf
inc
imul
dec
shrl
dec
mov
mov
shrl
icebp
out
add
movsl
cmp
sbb
mov
insl
mov
sub
jae
jp
fildl
mov
cmp
clc
out
xchg
or
inc
mov
xor
jg
inc
adc
loopne
pop
icebp
xchg
outsl
xor
adc
int
test
xchg
out
jle
mov
ret
loop
test
xchg
mov
add
add
pop
add
out
sbb
aaa
ja
inc
into
js
cmp
add
pop
mov
sar
push
xchg
aaa
push
xor
push
sub
xchg
mov
fwait
lret
loop
and
jge
arpl
movl
pop
call
aas
lret
xchg
in
mov
incl
rcl
sub
add
add
add
add
pop
jl
mov
add
pop
cmp
jo
stos
push
push
shll
cmp
push
adc
cmpsb
mov
sbb
push
out
out
std
mov
inc
xchg
daa
xchg
xchg
jo
add
lret
jbe
dec
stos
cwtl
ss
add
push
in
aam
add
sub
jp
cwtl
aad
and
mov
scas
jg
jno
push
sub
cmc
clc
adc
mov
movsb
mov
mov
add
push
mov
cmp
fdivrs
mov
inc
sub
mov
icebp
push
jbe
adc
mov
mov
lar
mov
in
fisttpl
outsl
jns
daa
pop
inc
fsubl
lods
insl
daa
sub
xchg
rcl
ficoml
and
sbb
jg
mov
and
repnz
sub
fs
xchg
mov
adc
pop
push
loop
vfrczsd
stos
lret
ljmp
inc
mov
in
negl
sub
movsb
aad
pop
dec
addr16
add
das
insl
push
dec
aas
jp
imul
popf
data16
sti
lret
jp
pushf
xchg
and
icebp
dec
inc
aam
js
les
enter
and
cwtl
es
sbbb
jp
adc
mov
add
pop
repnz
mov
fisubs
mov
sbb
push
cmp
mov
test
sbb
std
mov
fnstsw
stc
dec
inc
xor
cltd
lods
mul
aad
test
stos
out
push
out
mov
fs
mov
cmp
test
inc
dec
xchg
xor
mov
sbb
adc
sbbb
divl
sahf
fptan
enter
jecxz
xor
enter
lds
mov
dec
or
jno
mov
mov
push
inc
aas
filds
daa
leave
add
mov
stos
fdivrl
in
or
jp
pop
xchg
sbb
dec
and
idivl
lock
jecxz
sahf
mov
clc
ret
fwait
sbb
sbb
cwtl
fistpll
stc
dec
push
fdivl
jp
repz
adc
es
les
add
dec
cmpsb
adc
ljmp
dec
sub
lcall
clc
jge
mov
jne
cmp
pop
fstp
push
push
cmp
fmuls
movsl
sub
add
shll
adc
dec
data16
xchg
jb
scas
or
dec
fs
cmp
or
xchg
pop
out
inc
pop
mov
and
sbb
shll
xchg
leave
xchg
clc
mov
popf
mov
les
leave
mov
xchg
or
pop
xchg
cmp
adc
inc
lcall
pop
jmp
iret
es
xchg
jmp
xchg
pop
lock
cmpsl
inc
testl
dec
into
jmp
jnp
stc
xchg
pop
nop
loopne,pt
stos
pop
stos
pop
lcall
and
rolb
xor
fstps
gs
iret
mov
imul
cmp
mov
push
push
push
mov
shlb
add
add
add
je
adc
pop
dec
pop
das
scas
jno
scas
dec
xchg
mov
mov
xlat
push
jnp
leave
sbb
imul
dec
jo
stos
pusha
jge
frstor
push
sbb
jnp
stc
arpl
dec
push
mov
repz
es
add
ss
scas
test
adc
icebp
inc
clc
fldl
cmc
out
shrl
add
cwtl
mov
nop
add
mov
dec
sbb
sarl
jl
scas
setge
xor
inc
dec
pop
test
lods
movb
and
cmp
addr16
adc
cmpsb
sub
lcall
fwait
mov
pop
jnp
mov
aad
sub
sbb
cwtl
push
inc
aas
xor
lods
aad
push
or
cmp
jecxz
std
xor
ds
and
std
in
push
pop
sbb
js
sub
cmc
push
shlb
push
or
int
mov
divl
add
out
repnz
add
pop
lcall
les
shl
addr16
add
add
add
push
pop
xlat
jge
lcall
in
xchg
mov
xchg
subl
xchg
xchg
out
insb
or
pop
sub
add
stos
or
dec
ss
cltd
and
mov
in
adc
int3
dec
dec
jb
popf
push
mov
jnp
lret
sbb
loopne
sub
je
mov
inc
loopne
inc
idivb
repnz
sub
cli
adc
inc
pop
xchg
adc
sub
outsl
subb
pop
inc
push
mov
inc
add
loopne
movsb
jg
sahf
cmpsb
jne
sub
mov
leave
xchg
mov
or
pop
dec
xchg
ss
cmp
lret
leave
push
mov
js
inc
test
push
jno
mov
add
imul
lods
imul
arpl
aaa
mov
rclb
cmp
ss
dec
dec
adc
cmp
out
jg
pop
mov
fisttpl
out
xchg
pop
clc
xor
ret
es
pop
mov
push
decl
inc
std
les
in
add
add
add
add
jmp
enter
inc
cmpl
mov
subb
movsl
mov
jae
cmp
scas
xor
pop
dec
movsb
bound
or
or
adc
rorl
in
jo
cli
sbb
mov
mov
lcall
cwtl
cltd
clc
movb
xchg
dec
and
sbb
mov
fwait
mov
or
scas
fldcw
call
arpl
jle
nopl
divb
rcrl
cltd
fildl
push
clc
dec
sti
adcl
rorb
dec
js
xchg
push
scas
adc
data16
mov
aad
ret
add
stos
xchg
insb
hlt
cmp
clc
stos
xchg
jb
mov
cmc
repnz
sahf
and
movsl
jg
sub
ja
orl
test
jnp
inc
cwtl
cmp
jmp
jge
mov
jno
sub
add
add
jmp
in
push
sub
sub
add
add
add
ds
outsb
mov
push
loopne
enter
and
stos
aas
xor
cwtl
dec
divb
in
fs
lods
ret
add
adc
add
fwait
scas
rclb
and
shl
jle
cli
in
cs
jmp
pushf
adc
pop
repz
or
adc
mov
ret
aas
stc
mov
jno
mov
push
sub
push
nop
mov
inc
repz
sti
lods
faddl
fwait
mov
inc
enter
jg
test
ds
mov
mov
jnp
adc
jbe
test
scas
push
pop
lahf
sub
or
mov
cmp
push
pop
sub
lret
into
dec
fisubrl
or
pushf
adc
sub
test
cs
jmp
cmp
sub
jo
arpl
jmp
jmp
push
lahf
outsb
out
pushf
dec
xchg
flds
add
add
outsb
xor
mov
lcall
out
add
add
add
and
ja
fs
jbe
mov
inc
push
loope
dec
leave
shl
inc
pop
andl
mov
jp
mov
addl
lock
cwtl
add
into
mov
popa
ret
add
inc
and
int3
jle
or
xorb
mov
cs
add
jge
dec
ds
cmp
ss
sbb
or
data16
and
mov
aas
clc
lret
test
fs
ds
test
mov
enter
in
shrl
mov
sbb
add
jge
into
jb
jb
mov
idivb
adc
or
mov
jge
mov
les
mov
arpl
sub
into
fldenv
sub
xchg
cmp
in
mov
int
stc
xor
push
xor
mov
pop
jl
fistpl
repz
ror
lock
jnp
xor
xchg
cmp
push
lock
add
add
sub
inc
pop
sbb
sub
fwait
mov
or
std
fildl
mov
aad
int3
push
jg
shrl
dec
xor
cmp
or
cmpsb
jo
repz
push
push
cld
in
mov
cmc
push
fisubl
pop
aas
xchg
xchg
pop
add
push
lods
pop
adcl
aaa
mov
sub
xchg
sbb
sbb
push
pop
call
add
aad
inc
mov
rcll
mov
sub
sub
dec
cld
repz
mov
cld
jle
ud1
adc
cmp
xchg
cmpsl
mov
jle
inc
jmp
mov
lret
sub
shrl
push
jmp
imul
sarb
jl
pop
sub
xchg
sbb
inc
pop
cwtl
and
sbb
or
pop
mov
adc
pop
clc
in
hlt
and
repz
fisubs
mov
js
icebp
add
add
add
mov
jae
push
adc
push
clc
sbb
mov
shl
xchg
test
inc
add
pop
insl
sub
xorb
cmp
int3
mov
add
adc
and
lahf
xchg
sub
and
arpl
sbb
ja
add
push
movsl
lods
add
test
and
sub
pop
andps
aas
insb
mov
arpl
cltd
aam
lahf
scas
cmc
dec
cwtl
icebp
les
divb
mul
adcb
push
imul
lcall
lret
push
push
pop
mov
sti
and
and
je
lods
cmc
or
push
ja
sbb
testb
call
fdiv
notb
aas
inc
xchg
jns
into
inc
popf
lret
xchg
sbb
jno
sbb
add
and
out
adc
mov
aas
cmp
cmp
sub
out
sbb
out
mov
repnz
add
add
fisttps
mov
int
out
cltd
xchg
xor
int3
aaa
ds
inc
loope
imul
mov
jae
shlb
in
imul
dec
testb
mov
adc
jle
push
adc
out
sarb
fwait
lea
mov
cli
or
cmpsb
sarl
add
jo
divb
loop
or
lea
adcb
jae
lcall
ja
xchg
inc
push
notb
sarl
sub
xchg
and
in
aas
adc
and
add
data16
adc
jmp
addb
mov
inc
sbb
push
dec
repz
and
and
imul
xchg
jecxz
add
cmp
addb
leave
mov
daa
test
adc
out
faddp
mov
jb
imul
or
test
add
shrl
cmc
scas
sub
mov
repz
add
add
fucompp
add
jecxz
jmp
pop
push
jl
pop
outsl
cmpsb
mov
scas
jl
sub
aam
jp
pop
add
gs
aaa
dec
cmpsl
pop
jno
call
or
lods
nop
sub
xchg
jns
mov
in
sub
xchg
mov
data16
xchg
stos
and
stc
les
mov
iret
xchg
xchg
pop
push
addr16
imul
sbb
mov
inc
data16
mov
sbb
mov
xchg
push
pusha
pop
test
cvtdq2ps
adc
mov
jecxz
pusha
mov
aam
xlat
sbb
dec
mov
push
jns
xchg
rclb
lds
dec
jmp
gs
xchg
add
cmp
pop
popa
add
add
testb
pop
dec
test
sbb
jnp
pop
cmpsl
pop
repz
movsb
scas
stos
orl
test
inc
lret
pusha
rorb
cmpsb
mov
lcall
add
add
ss
lcall
mov
sbb
adc
xor
outsb
sub
fstps
sub
popf
lea
ljmp
sbb
pop
sub
mov
gs
daa
xlat
stos
push
mov
lock
testl
icebp
xchg
imul
cmpsl
fs
mov
mov
mov
mov
std
dec
mov
or
cwtl
sbb
add
iret
les
imul
cmp
xchg
pop
fstl
test
sbb
bound
pop
dec
inc
pusha
pop
mov
xchg
adc
xor
pop
inc
mov
cltd
mov
or
add
cmp
jle
xchg
pop
jmp
cltd
fldt
mov
aaa
mov
cmpsb
xor
test
lods
pop
mov
or
loope
jecxz
push
testl
cmp
sbb
cmc
add
add
add
daa
push
push
xor
dec
cmpsb
cmp
and
mov
sbb
jg
jns
into
out
cmp
and
xlat
xor
fdivl
aam
or
je
fidivs
test
movsl
lahf
add
fmul
push
cmp
leave
sub
mov
stos
jmp
push
mov
inc
or
cltd
nop
jmp
popa
orb
xchg
jno
imul
mov
adc
test
iret
or
dec
pop
mov
scas
dec
mov
xchg
jo
mov
pop
inc
es
jmp
jb
fsts
push
cmp
rcl
adcb
mov
faddl
mul
jl
cmp
xchg
out
sbb
lcall
adc
inc
and
adc
lcall
sub
imul
pop
push
push
aas
xor
ljmp
add
and
daa
lahf
mov
pop
das
jo
fldln2
testb
add
add
sbb
enter
inc
xchg
das
pop
push
in
dec
popf
loopew
int
int
stos
xor
push
mov
mov
lock
mov
jp
hlt
pop
mov
call
out
ret
iret
cmp
dec
mov
or
inc
sbb
ret
insb
adcb
lret
daa
dec
stos
inc
mov
xchg
dec
repz
mov
test
sbb
leave
js
mov
push
nop
inc
jnp
cmpsb
pop
in
aad
dec
cld
jge
subb
inc
in
cmp
dec
xor
pop
jbe
mov
dec
lods
lods
inc
test
fwait
in
add
ss
in
incl
jb
sub
cmpsb
pop
in
push
lea
or
dec
sub
sub
mov
cwtl
lret
shr
outsl
cwtl
mov
das
loope
jbe
dec
xchg
pop
add
jo
loop
fadds
mov
add
mov
fucomi
xor
test
testl
add
add
out
jbe
add
jecxz
arpl
repz
mov
sbb
data16
mov
add
fisubrs
test
les
loope
and
stos
sub
or
shl
jmp
mov
shlb
sbb
jecxz
adc
test
xchg
ret
jbe
cmp
testl
mov
fnstenv
cmp
adc
hlt
aas
push
imul
push
pop
sbb
aaa
leave
nop
pushw
mov
push
arpl
sbb
mov
sbb
pop
enter
inc
add
or
mov
jo
push
dec
orl
adc
add
orb
aas
adc
push
ret
ret
sub
and
dec
rcrl
shlb
xor
xor
add
mov
mov
sbb
ljmp
bound
add
add
push
inc
pop
jns
aas
loopne
sub
gs
addr16
add
add
add
into
out
call
pop
adc
xchg
fldt
cmpsb
gs
ljmp
add
inc
xchg
add
xor
in
jns
add
jecxz
dec
out
xor
jg
pushf
out
dec
mov
pop
pop
insl
lret
iret
loop
inc
arpl
or
adc
scas
mov
outsb
jae
arpl
jge
stos
rcrb
add
xchg
sub
sub
addr16
rcrb
sub
dec
mov
adc
je
xor
lock
iret
clc
popf
push
pop
adc
cmp
and
cmp
sub
cltd
xchg
adc
cwtl
imul
into
jle
insb
movsb
aad
xor
and
inc
mov
and
pop
imul
jp
xor
xchg
pushf
rol
or
sbbb
insl
inc
call
cmpsb
sbb
jnp
mov
xor
cmp
addr16
add
add
add
mov
xor
pop
push
mov
stos
and
cmp
mov
mov
push
or
and
mov
jno
int3
pop
mul
dec
test
cmp
push
adc
jns
push
push
or
aad
and
sbbl
dec
sbbl
cmpsb
popa
add
shl
loopne
lea
sub
and
shrb
fcoml
shl
cmp
jl
mov
or
xlat
push
cmpsb
adc
mov
mov
outsl
addr16
daa
or
xor
movsb
sbb
xchg
pushf
lret
mov
xchg
and
orb
push
cs
jae
pop
flds
add
mov
dec
stos
xor
xor
dec
lods
push
or
adc
lret
sub
xor
cmpsb
mov
add
xlat
pop
xlat
jg
mov
test
push
adc
add
add
add
mov
add
jo
mov
dec
stos
daa
cs
mov
mov
cmpsb
add
add
arpl
ja
out
hlt
pop
call
cli
xchg
sbb
js
mov
pop
push
movsl
mov
call
daa
test
jmp
or
loopne
in
adc
xchg
outsb
push
push
push
out
in
cmp
xchg
push
inc
fs
push
lea
loopne
roll
add
jb
sbb
jne
lcall
lahf
jg
xor
imul
lahf
js
push
std
sahf
fistpll
sub
jecxz
int3
push
std
sub
push
xchg
xor
pushf
inc
mov
mov
lods
push
rorl
lds
clc
inc
jmp
test
xchg
jnp
das
pop
jae
push
and
xor
test
repz
add
fdiv
mov
xchg
cmpsb
repnz
add
add
mov
push
enter
sbb
or
sahf
sbb
add
iret
and
push
leave
inc
sub
and
movsb
lods
pop
add
pop
mov
cmpsb
aad
sbbl
xor
and
pushf
push
idivl
test
fsts
cmp
pop
pop
mov
stos
sub
inc
jl
sahf
mov
pop
movsl
lret
pop
fwait
popa
sub
add
jae
sbb
xor
mov
and
and
aad
pop
add
cmp
in
ror
sbb
shlb
popa
push
mov
and
test
cld
lock
push
dec
lcall
movsl
cwtl
divl
das
sub
out
scas
push
jb
push
imul
aam
loopne
pop
sub
out
pop
in
das
repz
cmp
sbb
test
push
aas
cltd
in
push
pusha
sarl
or
test
mov
fidivrl
cld
add
add
add
add
test
sbbl
mov
adc
add
xchg
out
mov
sbb
inc
and
arpl
xor
out
xchg
lcall
les
movsl
cli
adc
inc
popf
inc
movsb
fsubp
mov
mov
jecxz
imul
push
jns
mov
loopne
push
ljmp
jmp
jnp
lea
aaa
shll
mov
jl
test
ljmp
mov
scas
dec
adc
jnp
adc
sbb
push
xor
test
jl
adc
ljmp
and
or
xor
inc
fadd
sahf
dec
imul
mov
push
fs
push
pop
or
dec
pop
hlt
xor
mov
inc
aam
cmp
call
ja
repnz
lock
and
std
sub
add
add
push
pop
push
jmp
sarb
add
add
add
pop
in
mov
or
outsb
fiadds
mov
and
stos
in
dec
aas
cltd
ds
xchg
loop
xor
xor
ret
es
ret
dec
ds
roll
sahf
cmc
call
pop
xchg
aad
mov
xor
push
in
cmpsb
pop
outsb
pop
stos
insl
sub
jge
push
cmp
fst
repz
add
outsb
cmp
mov
or
fcmovnb
into
jne
pop
ja
add
push
scas
clc
pop
pop
inc
es
cmp
dec
ja
jbe
mov
or
hlt
fsubl
xchg
call
mov
adc
dec
sub
dec
xchg
fisubs
add
icebp
sahf
iret
dec
jp
jo
insl
in
adcb
pop
repz
aad
insb
sbb
push
sub
push
cmc
mov
push
and
pushf
inc
jle
sbb
sti
push
mov
cmp
inc
add
jp
inc
dec
mov
ja
sbb
cmp
jp
add
add
pop
lods
pop
cli
cmc
cmpsb
lret
mov
loope
incb
add
add
add
xor
add
insb
dec
jae
cmp
lcall
inc
sbb
dec
mov
xchg
jle
mov
mov
xchg
xor
or
mov
loope
aaa
and
jo
mov
mov
jmp
mov
rcrl
push
ret
mov
aas
int3
xchg
orb
jnp
adc
push
je
add
xchg
aas
rorb
aas
je
leave
cmp
hlt
jl
push
mov
and
hlt
stos
js
mov
arpl
dec
sub
mov
shlb
dec
inc
cmc
jne
and
jns
cmpsb
mov
push
addr16
hlt
pop
mov
mov
out
lcall
sbb
lret
push
or
mov
jne
sti
cmp
iret
repz
mov
inc
cmp
out
int3
lahf
xor
vcvtpd2dqx
ds
ljmp
add
das
stos
cltd
inc
popf
jae
out
xor
incl
add
add
add
loope
hlt
adc
test
std
sbb
push
dec
movsb
into
jb
jp
gs
dec
lock
xor
xchg
lea
dec
sub
ficoml
inc
js
es
aaa
fiadds
jg
test
data16
jle
xchg
add
add
xchg
lcall
mov
push
or
xchg
mov
mov
or
scas
xchg
test
sub
rcrb
pop
jl
lds
movsbl
cli
push
mov
mov
lods
fisttps
pop
sarb
int3
mov
xchg
sub
stos
sbb
jne
les
mov
or
sbb
sarl
psubusb
cld
push
arpl
imul
rcrl
pop
fs
pop
bnd
arpl
jge
cli
cmpsb
cmp
jle
jg
sub
loop
ret
lcall
nop
cwtl
daa
xor
fdivl
dec
xchg
imul
add
mov
nop
test
aam
int
aaa
das
aam
repz
add
add
add
push
jo
adc
inc
jge
mov
cmp
stc
lds
mov
pop
sar
jae
jg
jns
negb
pop
nop
xchg
mov
add
cmp
mov
ds
adc
sub
dec
or
mov
stos
jge
int3
lds
popa
xchg
pop
sub
ljmp
sbbl
jb
or
movsb
cmp
jecxz
adc
mov
andl
mov
lcall
imul
dec
push
add
stos
enter
in
sub
dec
cmc
std
icebp
sahf
stc
dec
repz
loope
fwait
dec
test
lds
lods
in
test
mov
lret
loopne
js
aam
mov
mov
mov
out
pop
ret
add
lods
jl,pt
pop
and
cmp
mov
mov
cwtl
hlt
movb
add
pop
arpl
addr16
sub
stos
int
imul
add
pop
lods
jp
in
jmp
adc
rorl
lcall
pushf
pop
fidivrs
dec
push
iret
ret
dec
in
dec
adc
icebp
lods
add
sub
inc
push
insb
xchg
ja
adc
dec
push
lea
sarl
mov
shrl
loop
stos
xchg
cmp
jno
adc
dec
lcall
add
sbb
lods
cli
out
fdiv
pop
mov
xor
rcrb
jbe
jge
call
lock
lods
insb
leave
cmp
and
mov
pop
aaa
sti
push
mov
mov
cmpsl
jg
sub
inc
xchg
sbb
aam
add
dec
icebp
les
or
add
cltd
or
mov
leave
js
mov
in
dec
aaa
dec
sub
nop
add
outsl
xchg
cwtl
push
sbb
jmp
imul
sbb
gs
vorps
insl
outsb
pop
jp
pusha
mov
lea
and
add
out
out
pushl
xchg
xor
mov
add
add
add
add
push
enter
das
fimull
jl
in
pop
icebp
mov
addl
clc
xor
jo
push
add
add
aad
mov
mov
mov
arpl
jge
nop
scas
pusha
push
loope
jb
mov
jp
adc
cmp
lods
outsl
into
sbb
inc
push
cli
ret
jnp
mov
lea
mov
dec
cmpsb
addl
rolb
jmp
mov
lahf
cmpsl
rcll
aaa
mov
out
xchg
lods
popa
inc
adc
cwtl
pop
cwtl
fildl
aaa
push
or
push
add
add
enter
dec
xchg
mov
fdivl
cmc
cmpsl
dec
jno
push
test
hlt
jo
add
test
out
je
xchg
xlat
sbb
scas
adc
insl
insl
cmp
pop
xlat
dec
pop
test
push
scas
mov
push
les
add
add
add
add
das
push
or
out
or
mov
aad
xor
ja
jp
les
push
lods
mov
xor
imul
jge
divb
aaa
sub
rcr
jbe
push
sub
or
push
lock
xchg
popf
loopne
pop
jae
ret
push
pop
xor
xchg
dec
push
fstps
xor
xor
lahf
es
mov
out
orl
push
inc
sahf
test
test
hlt
cmp
out
or
fcmovnbe
adc
scas
adc
divb
js
dec
xchg
in
pop
jo
stos
es
mov
pop
jle
fisubrs
jp
out
shrb
dec
jmp
fisttps
fwait
jb
testb
daa
ret
in
adc
aad
data16
or
xchg
gs
xchg
ss
sbb
add
rcll
mov
push
insl
and
mov
popa
cmp
outsl
mov
cmp
or
add
xchg
and
movsl
mov
mov
mov
cmp
addr16
add
add
add
pop
cli
scas
mov
test
sbb
push
push
rcl
sub
fmull
jle
or
pop
push
frstor
xchg
xchg
repnz
idivl
adc
dec
imul
xor
insl
cmpb
mov
repnz
clts
push
sub
pop
push
mov
jne
jnp
jl
call
jg
adc
adc
imul
fdivl
dec
adc
mov
ljmp
mov
sbbb
addr16
sbb
aas
aaa
hlt
enter
lea
cmp
sbb
dec
loop
scas
or
rorl
xchg
adc
push
or
cmpsb
loop
mov
mov
xchg
jo
repnz
push
icebp
int
adc
jecxz
mov
mov
cli
cmc
cmp
in
js
das
sub
stos
fdivl
mov
inc
cmp
addr16
add
in
jae
jecxz
mov
ret
pushf
lods
icebp
cmp
mov
pop
rorl
push
scas
aad
shrb
xchg
call
jae
push
add
push
or
stos
sub
shl
mov
jbe
in
mov
mov
mov
cltd
sbb
bound
les
in
jns
mov
cmc
jg
or
std
in
push
inc
outsl
mov
icebp
mov
mov
and
and
dec
inc
in
lea
pop
adc
aaa
loopne
jno
xor
test
gs
push
xor
and
xchg
xchg
lods
jo
sbb
mov
imul
leave
aas
xchg
movsb
sub
or
popf
cltd
cld
mov
movl
flds
rcr
enter
jno
fcomp
fdivrs
cmp
mov
das
jbe
mov
sub
pushf
inc
adc
mov
js
out
pop
mov
pop
xor
cli
shlb
ret
add
inc
stc
mov
mov
lods
imul
pop
or
hlt
addr16
add
add
add
int3
fs
pushf
mov
jb
dec
inc
adc
in
xor
mov
mov
adc
cs
sub
adc
aam
adc
out
push
std
add
xchg
movsb
mov
in
inc
leave
rcrl
mov
in
rcll
jno
push
mov
cltd
xchg
aad
rclb
add
or
aaa
jo
adcb
dec
jno
fdivs
jb
or
mul
aas
and
sbb
push
cld
jb
xchg
sarb
scas
jb
mov
cmp
andl
pop
pop
adc
mov
lret
cmp
sbb
lods
lcall
pop
sub
mov
sti
ret
inc
shl
ret
sub
into
push
rclb
shlb
insl
mov
lcall
sarl
pop
mov
xorb
cltd
gs
outsb
inc
in
std
ret
xor
add
add
mov
cmp
sbb
hlt
les
add
add
add
or
pop
fisttpll
xchg
gs
adc
xor
gs
jge
mov
push
imull
punpckhdq
xor
xor
dec
sub
into
repz
enter
loope
xchg
ret
sbb
and
and
jg
push
scas
xlat
sbb
out
cmovae
fbstp
iret
out
sub
xor
into
cmp
dec
sub
and
pop
adc
inc
jae
loop
push
test
adc
cmp
xchg
mov
and
pop
mov
cwtl
icebp
xchg
push
cmp
cli
dec
jmp
pop
or
mov
push
xor
push
ss
push
cmp
jno
cmc
dec
pop
sub
pusha
mov
add
in
aad
sub
mov
jmp
xor
subl
sub
movsl
dec
pusha
cltd
and
add
jg
push
aas
outsb
cs
fisubs
mov
inc
xchg
enter
push
fbld
xlat
mov
add
add
xchg
int3
lds
push
andb
popa
inc
push
or
cmp
jae
and
xchg
daa
jnp
mov
push
sti
push
push
add
sbb
jge
add
xor
ret
loopne
test
mov
flds
enter
shrl
mov
call
cld
cmp
add
or
test
mov
or
jg
add
lock
mov
fadds
lret
xchg
mov
push
sub
in
or
mov
xchg
mov
fisubs
pop
lahf
movsb
out
lea
push
or
push
xorb
mov
add
enter
jbe
jne
call
cld
lahf
mov
mov
or
insb
call
xchg
movl
out
or
and
cmp
lds
xchg
sbb
stos
daa
jl
aaa
sbb
mov
into
fwait
add
mov
lods
or
add
add
add
push
push
insl
mov
cmp
jno
sub
lock
jmp
pushf
dec
ret
movl
mov
in
pop
mov
and
sub
insb
stos
cmp
pop
hlt
inc
sbb
push
shll
mov
insl
and
lock
pop
in
push
out
test
fadd
or
fsubp
jnp
mov
xor
shlb
mov
xchg
xor
inc
cmp
xchg
push
mov
jp
mov
lods
adc
jae
dec
mov
outsl
adc
pusha
faddl
xchg
test
add
scas
fcmovu
jg
inc
fdivl
fmuls
movsb
rorb
icebp
mov
adc
mov
mov
cmpsb
dec
and
add
dec
mov
and
fistl
add
jl
test
out
mov
pop
sarb
in
loope
mov
add
add
aas
jle
push
dec
mov
mov
add
or
xchg
je
pop
push
xlat
lock
xchg
jo
gs
mov
aas
mov
dec
jne
dec
fcmove
pop
or
repnz
or
mov
rcrl
or
cmc
xchg
insl
in
jg
inc
inc
push
push
inc
cli
mov
fimuls
pop
in
andb
mov
cmpsl
jle
and
clc
pop
in
mov
sbb
stos
repz
int
push
jle
inc
xlat
popf
inc
dec
fxch
imul
pop
adc
mov
mov
icebp
outsb
repz
dec
inc
jae
fwait
es
ja
xor
das
outsl
sbb
jl
icebp
pop
fistpl
sbb
stos
dec
push
mov
inc
gs
stc
jl
gs
shll
push
push
jecxz
mov
mov
rcrb
xor
xchg
xor
cld
clc
inc
push
iret
lret
cmp
lock
xlat
add
popa
inc
popa
sbb
jno
cs
ss
or
pop
jne
add
add
inc
out
aas
mov
shlb
xor
add
add
add
in
ffree
fistpl
jo
jle
paddw
repnz
sub
es
or
outsl
push
loop
fbstp
adc
shll
mov
cmp
cld
pop
xlat
jb
dec
sbb
cmp
push
inc
stos
notb
in
xor
out
sar
push
inc
jle
leave
adc
mov
jecxz
mov
push
pop
das
sbbl
mov
adc
jmp
test
dec
fstpl
scas
jb
push
push
in
imul
mov
adc
jmp
and
aas
adc
out
pop
ds
inc
cwtl
adc
outsl
inc
dec
xor
pop
shr
clc
mov
adc
shll
fbstp
adc
lret
mov
in
sub
sti
into
or
pop
cmp
inc
xchg
stos
push
pop
sub
hlt
repz
cmp
pop
ss
jbe
jle
lret
xchg
cmp
or
add
add
bnd
dec
leave
and
cmp
add
add
add
ljmp
loope
aas
mov
pop
ror
mov
js
outsb
mov
sub
adc
xor
pop
testb
xchg
insb
xchg
fcoms
pop
inc
push
lcall
jo
sub
jle
outsb
pop
fildl
cli
repnz
ja
pop
test
push
cmp
add
mov
test
mov
dec
aaa
stos
push
cmc
xchg
imull
add
fisttpl
sub
inc
leave
mov
pop
arpl
int
cltd
push
lea
movsb
lret
adc
test
cmc
adc
add
jo
fdivs
mov
orb
xor
nop
lcall
rorb
add
push
jnp
mov
xchg
push
lods
sahf
mov
addr16
mov
mov
push
call
rorl
rorb
in
or
aam
daa
dec
ret
mov
cmc
cmp
add
add
in
out
ja
filds
in
xor
addr16
add
sub
adc
mov
and
iret
movsl
rcrb
jo
lea
rclb
fcoms
xchg
insl
mov
das
mov
mov
lret
jmp
mov
and
movsl
test
mov
jg
xchg
rcrl
add
jge
adc
or
xor
imull
adc
jnp
aaa
test
out
out
ja
cmp
sbb
daa
into
test
subb
mov
mov
add
sbb
push
adc
daa
clc
and
adc
cmp
mov
mov
adc
mov
and
fwait
enter
xchg
mov
add
into
cmp
loopne
push
push
sarl
sbb
dec
mov
jecxz
lret
lods
ficompl
daa
mov
pop
mov
jle
cli
rolb
sub
mov
movsb
mov
scas
test
in
inc
push
or
push
add
add
add
es
or
push
and
xchg
xchg
daa
jne
shll
lahf
iret
das
mov
lods
xchg
imul
out
push
pop
dec
hlt
dec
lret
into
out
jns
push
dec
js
icebp
lock
mov
xchg
jnp
xor
cmp
cmc
int3
dec
scas
sub
lret
test
int
loop
mov
inc
mov
js
sbb
jge
stos
xor
testl
and
lcall
cmc
out
loopne
cli
bound
cli
stos
add
lods
aam
pop
xchg
and
nop
mov
out
xor
mov
jl
mov
dec
lea
fiadds
xor
cmpb
aaa
sub
xor
stos
loope
mov
mov
pop
mov
add
pusha
pop
mov
adc
mov
cmp
push
xlat
flds
xchg
test
push
cmpl
fs
cmp
add
insl
xchg
hlt
pop
sub
daa
jb
push
mov
jg
neg
pop
daa
inc
jle
xor
sgdtl
add
add
push
jmp
js
add
jnp
ficoms
inc
sbb
push
mov
pop
mov
xchg
push
mov
adcl
pop
inc
jecxz
jp
sbb
xchg
dec
push
sti
fsubrs
inc
mov
movsb
addr16
mov
inc
push
call
xchg
rorl
or
mov
sbb
mov
jecxz
jns
sbb
xchg
out
aaa
out
lahf
shl
cwtl
lock
pop
xor
fnstsw
jb
mov
add
stos
insl
popa
lcall
mov
inc
mov
ljmp
pusha
scas
pop
pushf
dec
xchg
frstor
xchg
rol
fcomip
xchg
repz
inc
cmp
out
mov
mov
xchg
stos
cwtl
arpl
push
pop
adc
xchg
push
jae
push
mov
mov
les
fidivs
fsubl
ja
push
mov
and
call
adc
or
cmp
sti
jg
cmp
je
mov
add
add
add
xor
pop
stos
xlat
lcall
inc
stos
inc
push
mov
xchg
dec
or
xlat
mov
fs
mov
sbb
out
pop
dec
inc
outsb
inc
scas
lods
or
jns
push
sub
ss
fists
sub
sub
xchg
movsl
movsb
cmpsb
in
pop
push
cmpsb
shr
mov
frstor
sub
lcall
sub
xchg
ret
fisubrl
lret
pop
pop
or
mov
or
fdivl
repz
outsb
xlat
adc
lods
jns
insl
and
fisubrs
incb
xor
mov
lock
mov
mov
or
jle
sbb
push
dec
xchg
pop
cmp
mov
add
jne
rcrl
mov
negl
or
into
fisttpll
mov
mov
add
out
test
xlat
das
adc
and
add
jnp
fstp
fcompl
xchg
jl
test
add
add
add
inc
push
mov
cmpsb
mov
out
xor
and
nop
mov
fisttpl
sub
repnz
ss
cmp
mov
lock
cmp
or
mov
push
pavgw
and
cmpsb
into
push
cmp
std
mov
and
mov
cmpsb
xor
pop
mov
outsb
push
imul
inc
mov
and
pop
and
pop
sbb
loope
rcrl
pop
push
cli
sbb
dec
sbb
js
or
jg
add
adc
loop
repz
mov
cmp
pop
cld
rol
lea
pushf
mov
fwait
mov
push
in
add
leave
dec
push
xchg
ror
jne
jno
mov
ror
xchg
movsl
xchg
pop
xor
in
sub
arpl
cmp
sbb
fs
popa
int
push
dec
in
ret
fadds
add
add
outsl
mov
add
ss
leave
adc
add
add
add
pop
push
dec
jecxz
add
mov
mov
push
cltd
and
jecxz
movhps
enter
loopne
add
into
add
jmp
fcmovne
push
scas
shl
imul
jno
int
push
outsb
scas
mov
in
inc
stos
add
repnz
call
arpl
fstpt
xchg
and
insb
lret
aaa
mov
jl
icebp
popf
in
lret
cmp
imul
sbb
out
scas
shll
sbbl
int3
xor
rcll
xchg
out
out
push
pop
inc
loopne
xor
lret
fbld
stc
int
das
push
and
fisttpl
sub
imul
add
xor
jmp
sbb
pop
mov
sbbl
mov
sarl
mov
or
pop
dec
mov
mov
xchg
jge
ficomps
in
jecxz
bound
sahf
sbbb
loope
jmp
fnsave
sbbb
add
add
cs
mov
stos
hlt
mov
mov
lret
cs
insl
pop
test
cld
pop
lret
aam
int3
sub
outsl
and
call
adc
cmp
fmuls
push
insl
repnz
push
cmpb
inc
clc
mov
ffree
push
pop
inc
rorl
daa
mov
fs
sbb
in
arpl
mov
mov
cmp
dec
mov
adc
fcmovne
inc
inc
mov
out
andb
jl
push
inc
push
in
mov
mov
sti
dec
cli
mov
insl
dec
add
sti
adc
daa
mov
pop
sub
into
lret
adc
mov
mov
lea
cmpl
cmp
enter
fiadds
cmp
dec
loop
push
mov
inc
mov
out
add
ljmp
aad
xor
and
add
add
xor
test
ljmp
add
add
mov
test
add
sti
lret
and
mov
fmull
lods
push
and
leave
gs
cmp
adc
ror
pop
loope
cmp
fs
rcrb
nop
incl
or
adc
mov
xchg
jne
icebp
pop
and
test
xchg
dec
push
mul
jne
pop
xor
cmp
xchg
loopne
and
stc
sahf
lahf
in
es
xor
inc
gs
sub
std
push
fdivr
jle
and
mov
dec
cmp
fistl
push
or
test
mov
and
mov
ss
or
mov
in
lret
lret
orl
push
mov
stos
je
or
es
xchg
jnp
daa
aas
xlat
jnp
ss
jecxz
rcrb
dec
pop
mov
arpl
call
rcll
adc
xor
cld
jecxz
data16
add
dec
cli
inc
jg
int
xchg
lods
or
stos
pop
int3
addr16
add
add
test
call
testb
pop
insb
cs
mov
jns
test
imul
and
cmp
add
and
addr16
push
xor
sub
hlt
test
xchg
push
and
in
dec
imul
push
or
outsl
shll
aaa
popa
pusha
int3
mov
jae
fstpl
lods
sahf
mov
std
or
xorl
fcomps
sbb
sub
test
scas
xor
cmpsl
add
aaa
jge
xchg
popa
push
out
test
outsb
movsb
pop
or
outsl
loopne
lods
mov
fdivrs
xchg
sti
cwtl
das
xchg
dec
xchg
cmp
inc
push
push
inc
sub
dec
sahf
into
in
add
mov
mov
sub
mov
inc
in
je
repnz
rcll
mov
lret
push
jo
out
scas
lock
std
cmp
jle
fistpll
ficompl
dec
inc
dec
addr16
add
add
add
xchg
mov
add
mov
sahf
mov
out
mov
adc
add
cmp
jnp
push
sbb
jl
dec
notl
popa
shrb
lcall
push
testb
idivb
pop
xor
imul
adc
aam
imul
fs
sub
adc
cmp
xchg
mov
pop
or
sahf
add
push
lea
dec
sub
adc
sbb
aaa
arpl
loope
xchg
std
mov
cmp
and
bound
dec
out
aam
mov
mov
mov
jno
xorb
mov
cmp
add
out
or
inc
dec
bound
iret
lds
jl
xchg
mov
les
mov
adc
mov
mov
push
and
test
cmc
pop
cmp
loopne
pop
push
inc
mov
push
cmp
jne
cwtl
xchg
fidivrs
mov
xchg
pop
lds
xlat
ficompl
inc
mov
pop
mov
pop
add
add
add
movsb
sbb
inc
push
fcompl
aas
mull
dec
sbb
inc
dec
jecxz
dec
scas
loopne
andb
addl
inc
jmp
mov
dec
out
xchg
add
int3
cmpl
in
ret
sti
pop
sub
es
push
cli
adc
out
fldt
lods
add
scas
int
scas
dec
or
call
adc
movsb
es
mov
sub
bnd
das
enter
mov
xor
stos
clc
or
cmp
xor
loop
fcompl
jecxz
lea
into
mov
lret
xchg
popf
mov
push
mov
xor
out
fildl
dec
pop
mov
jmp
xor
mov
mov
mov
out
rcl
xor
pushf
outsl
xor
fyl2xp1
fists
dec
xchg
lcall
and
sbbb
les
jns
or
add
add
sub
iret
outsb
jmp
push
test
outsb
pusha
stc
sbb
add
add
add
stos
jl
mov
jae
mov
daa
int3
push
or
mov
iret
mov
push
sub
pop
xor
mov
fs
xchg
nop
outsb
out
sub
insb
repz
jae
fists
test
hlt
and
cmp
push
jmp
sbb
sbb
mov
pop
ja
push
loope
cld
lods
dec
repz
sub
dec
adc
or
and
ret
orb
jno
imul
stos
stc
mull
mov
mov
cld
lds
jg
sti
xor
push
icebp
or
jbe
popf
mov
imul
adc
xor
repz
mov
fldl
icebp
arpl
cmp
inc
mov
int
fildll
mov
mov
add
mov
mov
pusha
lock
lods
es
shll
cli
shrb
sbb
add
add
std
sbb
stc
cld
or
jno
sbb
sbb
add
add
add
xchg
leave
mov
cmp
js
int
in
add
mov
xchg
sbb
int
insl
movsl
or
in
movsb
xor
add
push
scas
or
sub
mov
dec
imul
sbb
out
scas
jno
hlt
jl
arpl
mov
push
ljmp
mov
call
bound
cltd
mov
jne
mov
rcl
or
mov
mov
pop
cmp
je
mov
adc
imul
enter
sbb
and
ret
mov
cli
fnstenv
or
jl
popf
ja
adc
repnz
scas
in
stos
in
dec
pop
pusha
and
cmp
push
mov
xchg
stos
fs
mov
or
sarb
jae
ljmp
scas
mov
xor
ss
shl
xchg
out
insb
mov
dec
mov
push
repz
imul
fiaddl
add
add
pop
test
scas
repz
cld
adc
mov
shll
add
add
add
xor
je
or
jmp
mov
lldt
lods
or
imul
sbb
stc
xor
dec
popf
in
fisubrl
inc
inc
dec
xor
movsb
movsl
pop
sbb
sbb
jmp
adc
push
mov
jae
dec
int
sub
pushw
ret
test
je
fdivrp
sbb
loopne
pop
cmpsl
xchg
out
mov
test
inc
cld
call
ret
and
or
adc
arpl
xor
stos
lea
test
xchg
push
push
ds
or
cmp
mov
scas
xchg
iret
sbb
pushf
sbb
inc
mov
mov
sbb
mov
mov
jecxz
test
xlat
mov
test
fists
dec
xor
movb
ret
sbb
mov
inc
aas
cmpsl
ss
xor
xchg
mov
dec
pushl
and
out
lea
add
add
add
cltd
fstpl
mov
int3
cmp
stos
or
pushf
shr
add
int3
push
adc
subl
popa
lods
mov
inc
aam
cmpb
enter
pop
loopne
or
rorb
cmp
jmp
add
cmp
jns
inc
jo
pop
inc
jbe
push
pop
fstpl
push
aaa
mov
cmpsb
cs
pop
fisubl
loopne
sub
jae
add
push
jae
and
add
cmp
inc
mov
mov
jmp
hlt
mov
in
testb
pop
ljmp
fs
cmp
sbb
mov
push
mov
pop
push
les
push
jae
jge
js
xlat
add
xchg
scas
clc
mov
lcall
stos
push
xchg
in
jp
fnsave
fadds
xchg
lahf
adc
xor
lods
mov
cmp
add
add
inc
ja
pop
aas
dec
push
adc
sbb
add
add
add
scas
sti
ds
insl
je
popa
aam
sub
rorl
mov
jbe
addb
nop
and
jg
sbb
sub
fsubrl
ss
mov
push
push
movsl
mov
jecxz
shrl
dec
cmc
in
cmp
xor
fs
shl
aaa
add
div
leave
jno
or
rclb
or
clc
scas
pop
arpl
popf
lcall
fneni(8087
cmpsb
movsl
imulb
jge
sub
mov
out
stos
pop
pop
dec
jo
insb
push
jecxz
adc
sbbb
xchg
gs
inc
mov
ror
lret
mov
adc
cs
sbb
fs
mov
notl
jbe
push
clc
or
cmp
ficomps
in
push
int
sub
adc
sbb
xchg
sbb
in
popf
mov
dec
imulb
test
sbb
cs
sbb
add
add
xchg
jae
ja
div
mov
xlat
push
pop
addr16
add
scas
add
pop
jl
jb
adc
xchg
in
insb
jo
sbb
pop
mov
mov
fstl
lahf
loope
dec
psubw
and
xor
or
adc
xchg
push
jne
pop
cmpsb
dec
and
fs
inc
adc
xchg
jns
shlb
xor
in
xchg
pop
push
sti
mov
xchg
ficomps
ror
jno
call
xchg
xor
adc
mul
aaa
loop
sarl
dec
inc
loop
cld
sbb
insl
dec
xchg
cmc
xor
mov
fimuls
sub
insl
mov
flds
mov
sbbl
lds
pop
push
roll
cli
stos
out
mov
jmp
imul
jmp
and
pop
mov
testl
cmp
nop
cli
inc
and
or
sub
add
add
cli
std
jg
push
pushf
dec
push
mov
cmp
add
add
add
push
jbe
cli
sub
call
dec
xor
mov
scas
mov
bound
cmp
iret
addr16
cli
roll
lcall
into
jbe
std
sub
dec
mov
push
std
add
gs
gs
mov
shl
repz
movsl
inc
mov
aas
lock
sub
imul
pushf
loope
mov
mov
orl
gs
cmpsb
out
dec
push
sbb
sahf
out
pop
decb
xor
and
insb
mov
dec
cs
stos
divb
out
mov
fbld
xor
das
push
enter
and
insb
out
mov
cli
and
or
aas
push
xor
outsl
jp
loop
dec
es
shrb
pop
aaa
test
dec
int3
xlat
in
dec
jmp
and
adc
inc
cmp
iret
adc
sbb
int
sbb
inc
push
cld
or
add
add
add
mov
std
incl
sbb
fistpll
addr16
add
add
add
fistpll
lods
loope
xor
and
in
dec
dec
pop
shlb
lret
test
push
mov
sub
inc
mov
pop
push
adc
pop
and
cwtl
add
stos
or
xlat
mov
fisttps
add
adcl
stos
or
adc
es
xor
mov
je
outsb
dec
pusha
rolb
sbb
and
outsb
and
js
fldenv
jg
mov
test
into
and
sar
outsb
xor
push
pop
pop
repnz
and
in
xor
shlb
out
push
jg
mov
push
jl
mov
and
inc
mov
mov
iret
and
sbb
pop
jo
mov
mov
js
js
loopne
jb
add
cmp
fdivs
pop
call
insb
cld
out
adc
sub
mov
push
es
jg
pop
or
xor
push
cmp
add
add
add
je
push
sbb
push
test
pop
popf
mov
mov
adc
xor
insl
sbb
sub
dec
lret
and
sti
test
pop
lock
lock
jnp
into
into
jle
adc
subl
mov
pusha
jp
imul
andl
cwtl
les
sbb
mov
fnstenv
shll
mov
and
or
sub
adc
dec
xor
sbb
aas
ss
nop
int3
jge
cmc
popf
xchg
ss
mov
fstpl
cwtl
adc
and
mov
lahf
test
sub
cwtl
int3
int3
pop
jbe
mov
add
cmp
test
lcall
xor
in
push
icebp
xchg
mov
mov
imul
sbb
daa
pop
scas
lcall
mov
cmp
mov
and
mov
loop
mov
cmpsl
es
cmp
add
add
or
dec
push
cmp
and
add
add
add
push
add
cmp
mov
and
xor
push
mov
pop
rclb
in
xchg
mov
test
in
ret
mov
or
fsubrp
cmp
or
xchg
push
xchg
daa
mov
or
out
cltd
mov
fmull
inc
aaa
insl
mov
test
dec
jp
xor
lret
mov
std
leave
fsubs
mov
pop
pop
jnp
mov
idivb
mov
movsl
gs
fs
mov
xchg
sub
scas
fidivl
lods
stos
into
push
push
pop
cmp
shr
out
xchg
adc
inc
pop
cmpsl
add
stos
or
stos
mov
mov
call
roll
sbb
test
mov
xor
test
dec
and
dec
cmpsl
fwait
cmc
mov
push
popf
jle
cs
xlat
icebp
xor
hlt
xlat
inc
into
adc
int
stos
push
lods
out
data16
out
xor
mov
add
add
stc
lods
xor
mov
fadds
add
add
cwtl
lock
adc
cs
clc
sbb
jle
cmp
lods
push
sbb
xabort
stos
push
setae
jmp
popa
jecxz
out
rclb
sub
mov
movsl
mov
mov
ret
rorb
mov
jb
in
daa
push
scas
adc
mov
popa
lret
xlat
sub
imul
out
outsb
jl
sub
add
sbb
out
sbb
rcrl
jle
std
lcall
or
or
clc
bnd
jl
les
pop
push
bound
pushl
xchg
pop
mov
pop
sbb
test
ja
cmpsl
mov
pop
xchg
ds
mov
loope
or
mov
mull
fisubrl
jnp
scas
add
lret
sti
cs
push
dec
and
out
mov
mov
push
push
sbb
xor
ficoms
stos
sbb
call
mov
and
add
add
add
ffree
movsb
imul
jbe
jno
shrb
pushf
dec
in
xchg
divb
push
push
or
mov
jmp
lock
ret
leave
pop
lods
cltd
sub
jbe
nop
sub
arpl
out
fwait
call
xchg
mov
push
jb
sub
xor
sub
rol
or
mov
inc
pop
jo
clc
dec
movsb
push
mov
jl
pushf
punpckhbw
jl
cmp
cwtl
test
mov
jge
sub
into
pop
mov
mov
pop
push
mov
testb
in
dec
mov
fwait
out
lret
push
inc
and
jae
push
pop
sbb
movsb
cmpsb
sbb
lods
inc
cmpsb
sbb
xchg
ret
repnz
or
push
popf
nop
negl
add
sahf
mov
data16
call
add
mov
aad
jne
mov
xorl
add
add
in
out
stos
jge
or
sub
mov
and
add
add
add
mov
inc
adc
jecxz
jl
fldl
ret
clc
rolb
test
mov
mov
cwtl
jne
clc
pop
arpl
ss
stos
repnz
imul
sub
mov
and
push
mov
pop
mov
push
push
outsb
jbe
std
test
pop
pop
leave
rcrl
sub
fwait
scas
sbbb
dec
cli
mov
adc
sub
and
dec
mov
sqrtps
cmp
gs
push
push
dec
jno
daa
lcall
sub
out
push
xchg
dec
icebp
fwait
adc
aas
imul
jns
add
test
push
xchg
ret
hlt
iret
add
lods
movsl
aad
sbb
in
icebp
push
jne
repnz
icebp
clc
aad
sub
adc
cmpsb
xor
xchg
dec
test
pop
unpcklps
cmp
lock
jae
fsubrs
add
dec
or
out
xchg
iret
push
aas
or
enter
add
add
add
and
loop
fisubs
insl
add
mov
lods
or
icebp
push
dec
mov
pop
sbb
and
idivb
repz
push
ret
sbb
xchg
stos
out
paddsw
popf
ja
add
scas
pop
addr16
mov
jmp
cmc
repnz
in
lods
mov
popf
pop
idiv
ljmp
loopne
fwait
sub
cmp
pop
jp
mov
filds
cld
dec
fildll
loope
movsl
sbb
out
jb
adc
adc
je
and
pop
adc
mov
and
xor
jmp
xchg
sarb
call
mov
jb
mov
fiaddl
mov
jbe
test
jmp
mov
fstl
and
cmp
decb
movsl
aas
xchg
movsb
cmp
sti
or
filds
add
in
add
cmp
out
loope
jns
repnz
test
add
add
add
sub
ljmp
ja
push
les
test
jns
into
in
cmp
and
lret
in
repnz
call
out
sub
inc
cmp
into
iret
sub
jmp
inc
aaa
test
sbbb
mov
adc
xor
stos
or
xchg
push
pop
adc
inc
sbb
ds
loope
mov
sbb
imulb
movsl
vpunpckhbw
mov
imul
jb
ret
mov
cmc
adc
es
enter
push
mov
sub
pop
dec
std
xor
ret
pop
arpl
cmp
push
xor
xchg
jae
into
and
cmpsl
cwtl
pop
pop
stc
dec
std
mov
loop
inc
jb
push
dec
loop
inc
cld
xchg
fcmove
inc
mov
push
in
orl
push
out
mov
dec
es
jae
mov
xor
shlb
add
test
sbb
sti
push
mov
stos
sbb
add
add
loope
push
std
adc
jmp
fnsave
xchg
imul
test
outsl
adc
ss
push
mov
jge
or
mov
aas
repnz
xor
dec
stos
rclb
outsl
xchg
iret
jecxz
and
sti
loopne
inc
sti
inc
imul
pop
loope
inc
mov
addl
repnz
loopne
je
inc
pushf
jle
sub
test
and
jbe
dec
push
adc
push
int3
pop
iret
scas
push
test
push
scas
cmp
loope
mov
aam
mov
pop
xchg
cld
sbb
pop
sbb
xor
mov
pusha
xchg
out
rorb
inc
lds
xchg
lahf
xlat
call
push
lcall
std
test
out
hlt
sbb
in
xor
add
dec
dec
pop
dec
jb
aad
stc
fstpl
push
cmp
push
push
and
jl
les
aaa
adc
pop
lret
add
mov
dec
idivl
cld
ret
add
mov
add
add
add
pop
mov
mov
pop
jae
rclb
add
push
movsl
std
nop
fnstcw
imul
dec
in
mov
ds
mov
mov
icebp
xor
jl
xor
mov
in
dec
inc
call
or
push
out
xor
sbb
sub
ss
xchg
sub
cmp
outsb
xchg
pop
out
xlat
push
aas
repz
mov
into
add
insb
stc
sbb
pop
jl
cmp
and
pop
loop
test
leave
mov
dec
mov
or
mov
pop
sbb
pop
loop
ljmp
jge
je
ja
mov
jbe
jmp
sbb
stc
test
lds
mov
data16
dec
lea
inc
outsl
mov
and
and
stc
pop
mov
mov
pop
fcoms
mov
add
ret
mov
iret
mov
cmpsl
xor
cmp
add
add
negl
jmp
sbb
std
sbb
mov
sbb
push
push
inc
xor
stos
mov
pop
mov
mov
hlt
mov
fwait
push
push
xor
int
repnz
lret
add
sbb
inc
inc
adc
push
addr16
sub
dec
pop
fwait
movsl
int
cltd
lcall
repnz
jae
adc
movsl
cmc
sbb
adc
adc
nop
es
adc
xchg
mov
mov
xchg
cmpsl
in
mov
cmp
mov
ja
or
pop
or
xchg
sub
jecxz
sahf
fimull
popf
clc
dec
cltd
jmp
ret
icebp
inc
insl
add
and
test
out
imul
call
test
pop
sbb
or
mov
mov
hlt
out
outsb
xor
dec
mov
insb
lds
mov
sub
jns
or
jg
arpl
push
mov
sub
add
add
add
dec
jge
lods
mov
mov
das
push
pop
cwtl
or
aaa
lahf
insl
test
pop
push
or
mov
out
mov
xor
sub
pop
adc
xchg
in
jecxz
pop
popa
xchg
push
mull
cmpsl
mov
inc
imul
scas
stos
inc
pop
add
rcll
dec
sti
and
pop
hlt
mov
xchg
mov
adc
jae
scas
cwtl
sti
xchg
fstpl
mov
mov
fwait
out
movsb
xchg
mov
jns
pop
sbb
test
test
push
cs
mov
aad
mov
jne
mov
aad
xlat
movsb
cld
cmp
sbb
icebp
pop
mov
rcll
mov
insb
sqrtps
stos
and
icebp
leave
adc
xor
sti
cmp
sbb
xchg
and
push
mov
shrb
into
xchg
push
shlb
cli
clc
cli
clc
sarb
sti
mov
lods
mov
add
add
leave
cmp
shll
jne,pt
outsb
push
outsb
push
pushl
ret
xor
iret
xchg
mov
jno
and
out
mov
pop
mov
or
jl
daa
test
mov
add
sbb
das
xchg
xor
inc
lds
dec
iret
imul
inc
xchg
adc
int
lahf
adcl
jns
movsb
insl
xor
out
add
aad
push
jno
das
sbb
sub
and
dec
out
aam
add
imul
pushf
outsl
pop
mov
pop
in
bound
lcall
sbb
cmc
jb
js
mov
pop
jae
lret
mov
cmp
jle
notl
or
cmc
hlt
add
mov
xchg
lcall
mov
jns
inc
out
add
push
and
out
adc
jae
cwtl
and
movsb
cld
test
imul
mov
inc
je
sub
add
add
add
mov
inc
fnstsw
push
inc
inc
dec
repnz
iret
cmp
scas
inc
jb
xor
or
enter
xlat
clc
faddl
out
sub
imull
mov
mov
dec
mov
popf
sbb
pop
das
clc
movsl
or
ja
add
xor
or
gs
pop
lds
data16
jo
dec
cmpl
cwtl
inc
xor
add
div
ds
es
adc
mov
addb
fcomip
mov
fwait
out
cmpsl
jg
ja
xlat
ljmp
inc
jno
pop
jmp
push
dec
loop
dec
push
add
xorl
rolb
shrb
inc
lds
fs
daa
scas
out
loope
pop
fdivl
pop
rorb
cltd
lret
fbld
out
orl
adc
dec
or
xchg
jns
mov
daa
pop
jmp
and
add
fs
es
data16
insb
daa
mov
push
movsb
ja
addr16
add
inc
cmp
out
loope
add
and
aas
jo
repnz
adc
or
addr16
mov
jle
xor
test
and
push
js
loope
sti
incb
out
int
sbbb
fsincos
jno
stos
inc
movsl
xchg
pop
imul
mov
inc
and
xchg
repnz
xchg
push
sub
and
lret
cmc
testb
arpl
mov
jecxz
lret
roll
sub
xchg
push
sub
icebp
adc
ret
je
and
inc
lahf
in
push
jo
ljmp
daa
call
push
inc
daa
xchg
dec
shlb
mov
cmp
mov
pop
lret
or
call
jl
pop
inc
sbb
js
out
jbe
push
into
xor
movsl
add
mov
clc
mov
fldcw
add
cld
add
add
add
js
ja
add
mov
sub
call
or
pop
and
adc
scas
repz
das
out
xor
jp
xorl
aaa
imul
adc
and
inc
out
jne
or
stos
inc
js
mov
mov
jl
movsb
fisubrs
mov
cmp
jne
or
jecxz
or
enter
lods
ja
shlb
pop
or
xlat
mov
or
mov
call
js
rolb
movsl
daa
dec
jecxz
test
push
scas
stos
sub
add
call
jecxz
imul
cli
adc
cli
clc
fdivrs
jmp
stos
aas
cmp
rclb
mov
sbb
pop
jnp
repz
add
xor
lcall
mov
test
repz
push
sti
cmpsl
enter
rolb
addr16
add
add
add
jecxz
subb
int
cld
fwait
jg
inc
hlt
dec
outsl
and
mov
sbb
adc
push
and
dec
pop
push
and
rcrb
sbb
adc
and
inc
dec
sti
adc
mov
lods
inc
sbb
shll
mov
push
jo
xchg
jg
loop
inc
int3
sub
add
xlat
lods
push
jecxz
cmp
lea
xchg
push
roll
je
jmp
stc
adc
in
scas
push
adcb
xor
sbb
and
ljmp
jnp
pop
adc
or
les
negb
jecxz
and
dec
push
push
adc
les
jae
mov
jns
mov
cmp
push
push
loop
int
aad
mov
arpl
fistpll
js
sub
rcll
movsb
jl
push
and
std
mov
dec
push
xchg
mov
xor
add
add
add
jne
mov
stc
mov
pop
fistpl
cwtl
dec
cwtl
or
and
outsl
and
jnp
mov
lret
aad
jl
leave
adc
or
cmpsb
adc
sub
mov
dec
adc
cmp
scas
mov
xor
or
out
lret
iret
sbb
jno
add
pop
and
std
mov
lahf
pop
jg
shll
sub
push
add
out
jnp
aam
scas
loop
lret
jne
dec
inc
daa
popa
rcr
scas
pop
test
cmc
mov
mov
loopne
xchg
push
push
push
inc
lahf
mov
out
cmp
lea
pop
jno
jae
or
arpl
repnz
mov
or
arpl
aaa
stos
add
or
scas
push
mov
cmp
push
dec
pop
cmpsl
jmp
shl
jg
push
xchg
daa
mov
and
or
or
mov
lds
xchg
and
inc
and
lcall
add
add
add
jae
sbb
xorb
jne
mov
pop
inc
pop
in
aad
mov
shlb
xlat
xor
push
pop
mov
popf
sti
and
xchg
sbb
and
xchg
aam
mov
add
mov
mov
popa
cwtl
cmp
pop
xchg
adc
sbb
call
and
jmp
add
jno
dec
cmp
mov
daa
pop
mov
push
mov
mov
adcl
sub
or
lahf
xor
mov
shll
fistps
add
dec
test
jg
insb
push
push
mov
popf
mov
pop
adc
push
add
decl
xchg
das
fmul
sub
lcall
mov
mov
pop
dec
out
bound
sub
and
stc
pop
cmp
lea
add
add
add
xchg
ficomps
cmp
lahf
clc
stc
xorl
add
add
mov
inc
fiaddl
call
pop
dec
fsubl
addr16
or
rcll
fsubrs
icebp
dec
mov
and
add
mov
jno
in
cwtl
cli
or
lea
lods
lock
mov
mov
mov
push
pop
shlb
cmp
sub
cltd
repnz
xchg
into
mov
or
xchg
sbb
test
cmpsl
add
insl
adc
lret
sub
repz
push
das
lock
sbb
pushf
sub
and
hlt
mov
jno
cli
inc
pop
sti
in
pusha
mov
outsb
mov
outsb
cs
stc
fists
rcrb
cmp
lods
jbe
or
jmp
add
push
clc
enter
and
mov
mov
daa
jge
pop
xor
pop
and
popf
fsubl
rcl
call
or
jl
dec
jb
lds
add
add
lods
xor
mov
cmp
push
dec
movsb
or
add
add
add
jecxz
pop
mov
lcall
stos
jnp
pusha
xor
es
sbb
push
cmpsb
jg
ret
mov
movsb
lret
js
data16
xchg
into
mov
xor
push
pop
roll
popa
xchg
inc
dec
ljmp
nop
xor
sbb
icebp
adc
cmp
dec
push
push
xchg
mov
jae
test
jecxz
sbb
xchg
popf
xchg
adc
fadd
or
lock
mov
call
sbb
mov
push
cmpsl
lea
mov
or
or
cli
data16
or
cmp
mov
add
add
pushf
pop
insb
sahf
fisttpll
push
icebp
push
jmp
sub
adc
decl
mov
push
jp
rcll
add
fldenv
mov
mov
cmp
jbe
aad
mov
mov
in
or
pop
std
pop
stc
mov
sbb
lock
mov
or
add
sub
addr16
add
add
add
mov
cld
adcb
sbb
nop
mov
pop
inc
pusha
scas
and
mov
push
or
stos
aas
add
pop
xor
andb
mov
pushf
ljmp
dec
mov
push
jo
cmc
pop
xchg
mov
sbb
push
out
fstl
test
dec
enter
xchg
pop
cwtd
push
mov
adc
popf
mov
and
ss
les
jns
pop
leave
lods
sti
out
jns
ret
mov
jns
popa
xchg
pop
call
daa
mov
insb
stc
into
pop
iret
or
mov
outsb
mov
ds
jae
jg
mov
push
fnsave
es
push
leave
sub
outsb
in
and
mov
call
jle
cli
les
ss
loopne
repnz
test
adc
inc
jge
mov
iret
and
rol
cmp
add
add
sti
pop
jge
neg
hlt
add
xchg
addr16
add
rol
sub
imul
mov
cld
or
fimull
test
sbb
test
mov
xor
loop
lods
add
add
ljmp
imul
in
mov
mov
jmp
pop
jns
fistpll
mov
mov
ljmp
dec
mov
pop
test
orb
cmc
inc
jge
daa
sbb
lret
pop
mov
jne
movsb
adc
lcall
adc
ficoms
test
sahf
push
inc
pop
clc
jne
lahf
xor
push
adc
jecxz
cwtl
xchg
test
lahf
aad
sbb
cwtl
jge
mov
cmp
test
push
int3
insl
popw
out
or
movsb
and
fcomp
sub
mov
cli
mov
push
insl
repz
repz
fmul
pop
sub
or
ss
sbb
lcall
jp
add
add
fsub
std
in
popf
in
stc
jmp
lock
push
int
add
add
add
insb
scas
inc
insl
loope
shlb
mov
iret
pop
cmp
mov
stos
or
int3
xchg
fidivl
push
adc
adc
mov
xchg
fisubs
addr16
dec
popf
int3
out
mov
sbb
data16
jl
leave
xchg
mov
add
sub
cld
xchg
dec
jg
in
jp
dec
lock
mov
scas
popf
imul
sahf
out
mov
jno
orb
out
repz
xlat
mov
pop
out
lods
out
pop
shlb
jae
xchg
xchg
int
push
sub
iret
out
sbb
xor
sti
and
push
loopne
daa
int3
mov
cmc
or
sbb
add
int3
jbe
lea
pusha
test
mov
xchg
and
hlt
mov
test
clc
dec
jmp
fbld
les
ret
jne
mov
stos
jae,pt
lods
jns
orb
add
add
jp
jnp
sti
xchg
jle
jp
lods
and
daa
addr16
add
add
add
xchg
dec
inc
sub
std
leave
insl
adc
cmp
mov
jbe
or
and
inc
dec
movb
or
sbb
sahf
inc
or
imul
repnz
xchg
adc
jns
sub
rcr
mov
ficompl
ja
push
rcl
jmp
push
inc
mov
insl
lahf
mov
jle
jnp
and
js
and
inc
sbb
cmpsb
xor
adc
lret
pusha
aaa
sahf
jge
xchg
mov
dec
mov
jne
ljmp
std
test
dec
or
and
mov
jle
dec
sub
mov
mov
inc
push
test
mov
mov
imul
sub
insb
incl
xchg
jge
inc
cmpsb
sti
sbb
divl
jnp
mov
icebp
mov
pusha
sub
out
push
rorb
push
jb
jb
jmp
mov
push
sti
decb
mov
xchg
add
add
add
bound
xlat
icebp
out
fimuls
pop
mov
pusha
cld
pop
in
mov
in
sahf
call
xchg
int3
cld
sbb
inc
sub
push
loopne
rorb
dec
mov
adc
jl
cmpsb
dec
sbb
or
add
test
xchg
pop
or
pusha
sti
and
fwait
or
outsb
jl
imul
xorb
add
addl
sub
push
mov
xchg
inc
ret
cltd
movsl
push
cs
and
inc
push
jl
dec
test
xchg
cmp
mov
lods
in
lods
sub
push
inc
inc
inc
lods
or
jp
sbb
sub
dec
adc
mov
push
ret
push
lods
jb
jg
test
mov
add
inc
test
xor
xlat
aam
daa
push
lods
test
jnp
xchg
pop
sti
xchg
cmpl
push
ret
cmp
xor
hlt
inc
mov
add
add
add
jo
daa
mov
cmp
orl
inc
jmp
pop
push
add
sbb
dec
jns
jbe
push
and
xor
adc
xor
dec
mov
aaa
shrl
leave
sahf
hlt
pushf
mov
stos
cmp
mov
fdivr
jg
cwtl
jne
sub
xchg
push
cmpsb
xchg
xorl
lods
mov
xchg
test
jl
insl
or
inc
xor
push
leave
jmp
fndisi(8087
psraw
mov
loop
lock
loope
push
or
mov
push
lcall
clc
lret
inc
stc
mov
out
mov
addl
xor
cmp
sbb
ds
lods
jae
cmpsb
lods
scas
test
push
test
sti
stc
inc
xchg
mov
test
cmpsl
call
rclb
push
call
pop
ds
ja
lcall
pop
popf
je
mov
mov
incb
ljmp
int3
jb
cmp
add
add
add
xchg
lods
in
daa
popa
cli
inc
fsubs
fcomps
and
arpl
xor
mov
repz
inc
xor
nop
out
pop
add
sub
mov
mov
out
xchg
and
add
mov
dec
pop
sub
add
pop
push
jbe
xchg
jge
sub
mov
mov
test
xor
mov
arpl
roll
mov
mov
test
adc
jo
or
fstpt
call
movsl
adc
jb
pop
mov
xor
sub
aad
xor
inc
pusha
cmpsl
inc
xchg
shlb
lods
icebp
sub
fdivrp
xor
fcomps
mov
xor
cwtl
imull
or
sbb
repnz
ficoms
lahf
mov
jae
sbb
out
mov
mov
cltd
fsubl
pop
dec
xor
add
add
rclb
nop
lcall
cmp
add
add
add
ret
inc
push
fnsave
add
mov
cwtl
add
into
jnp
dec
pop
cmp
subb
repz
pop
and
lahf
push
lahf
shll
fwait
inc
lcall
cmpsl
add
fisttps
fldenv
mov
cld
aas
cmpsb
adc
and
pop
cwtl
dec
pop
mov
hlt
gs
xchg
mov
xor
bound
sbb
sbb
push
pop
test
jp
cmp
mov
loopne
orb
jle
out
mov
sahf
push
push
cmp
mov
sbb
fcompl
test
leave
mov
fbld
pop
xlat
mov
inc
es
loope
mov
test
push
mov
adc
loope
es
dec
inc
insb
cmp
lods
push
sti
cmp
sub
xlat
dec
enter
loop
dec
nop
mov
rcr
cs
jmp
sub
and
pop
mov
or
daa
jl
dec
jbe
idivl
or
sub
push
addr16
add
add
add
stos
in
sub
mov
cmp
into
lret
lock
pop
mov
js
aad
lret
push
lahf
out
filds
mov
sbb
mov
aad
imul
xchg
sbb
lock
fcmovbe
xchg
xor
push
dec
sub
or
loope
sub
mov
add
push
and
jecxz
test
ljmp
addr16
add
outsl
lret
cmp
test
cmp
insb
or
jg
les
ret
pusha
mov
test
mov
bound
mov
ljmp
pop
inc
mov
shll
daa
ja
xchg
pusha
push
xor
movsb
cmp
push
test
push
and
mov
sar
in
aaa
add
cs
and
push
lahf
mov
imul
incl
pusha
imulb
cmp
pop
mov
add
jmp
cmp
add
outsb
sub
stos
fs
jmp
leave
aas
pop
and
loop
cmp
add
adcl
mov
dec
lcall
and
and
xor
sahf
push
push
popf
insb
out
pop
xor
outsl
jbe
cli
push
dec
mov
add
js
pop
insl
aad
push
sub
sbb
xor
xlat
loope
and
stos
mov
test
scas
inc
fisubs
jne
xchg
inc
sti
push
jmp
shll
arpl
adc
lods
push
push
push
data16
or
stos
inc
gs
lea
in
daa
and
adc
adc
and
sub
repz
filds
mov
daa
sbb
sbb
inc
minps
cmc
flds
mov
iret
xchg
pop
popa
inc
mov
xchg
xchg
push
cmpsl
ss
or
mov
mov
push
out
mov
out
sub
mov
test
cmc
pop
inc
push
clc
adcl
les
scas
fistpll
outsl
gs
scas
cwtl
sbb
add
add
add
xchg
negb
jne
cmpsb
add
lret
pusha
cmp
popw
sub
xor
mov
int3
jnp
ficompl
jge
sbb
leave
call
call
lret
shll
mov
mov
mov
lret
rolb
mov
jnp
push
jae
cmovs
xor
pop
cmp
lock
xchg
and
orl
or
outsb
dec
adc
out
fidivrl
cmp
scas
movsl
jg
dec
push
xor
xchg
mov
mov
call
mov
mov
scas
jle
aas
shrb
mov
mov
arpl
xor
scas
or
fwait
movsl
or
xchg
mov
pop
jp
les
fdivr
xlat
cwtl
mov
rorb
mov
mov
or
cmpsl
sbb
jnp
jnp
cmp
movsb
push
sbb
sti
pop
shlb
add
add
add
sub
or
mov
sti
loopne
inc
dec
std
and
imul
xor
add
imul
dec
mov
jecxz
sub
push
or
pop
scas
xor
out
addr16
push
xor
pop
xor
loopne
pop
aaa
bound
and
xchg
mov
mov
data16
pop
sahf
push
pop
jns
mov
pop
sbb
sub
sbb
inc
ljmp
adc
pop
jmp
add
and
mov
lods
push
inc
sahf
jge
xbegin
ret
jl
xor
loope
inc
mov
int
cld
jno
repnz
movsb
fdivl
sbb
inc
push
xchg
in
push
int3
dec
das
loop
mov
pop
cmp
repnz
cwtl
das
pop
loopne
jle
pop
popf
or
mov
imul
scas
or
daa
sub
xor
add
outsl
lret
mov
out
jmp
js
out
addr16
add
add
add
mov
cld
out
pop
jmp
ss
popa
into
or
popf
ljmp
loope
and
test
inc
inc
fmuls
add
push
pop
and
scas
ret
cld
adcl
sbb
inc
xchg
int
outsb
mov
repz
lock
pop
sub
imul
scas
adc
jmp
mov
sahf
stos
sahf
push
call
clc
call
cwtl
aas
adc
fs
std
loopne
dec
or
in
out
out
dec
fsubs
mov
jae
das
pusha
in
pop
jb
mov
fdivrl
movsb
mov
push
das
fstpt
sub
test
nop
xor
ret
sbb
outsl
xchg
outsb
cmc
add
out
add
cmp
shrb
xchg
xor
push
dec
adc
je
cwtl
mov
into
dec
nop
vpmullw
add
out
pop
into
ja
dec
and
das
cmp
lods
repz
mov
xlat
sub
stc
addr16
add
add
add
sub
add
nop
ja
out
mov
fstp
cmp
fadd
pop
mov
inc
and
cmc
xor
bnd
cmp
adc
cld
dec
jge
pushf
add
adc
ret
test
movsb
or
daa
or
pusha
loope
or
jecxz
imul
jg
lea
loopne
fs
dec
aad
inc
or
or
jle
mov
leave
outsl
in
xlat
movsl
es
icebp
xchg
imull
aad
mov
imul
in
js
or
pop
dec
jge
adc
in
fwait
or
xchg
rolb
adc
jne
movsl
aas
inc
pusha
jl
lret
je
push
sti
ljmp
mov
out
or
xchg
lcall
cmp
in
sub
xchg
mov
xor
xor
in
imull
mov
in
add
mov
imul
aas
daa
push
cld
push
std
jmp
dec
push
xchg
addr16
add
add
add
std
dec
shlb
inc
or
cmc
fsubrl
mov
test
repnz
ja
out
xor
loopne
shrl
dec
or
cld
cmp
outsb
mov
aaa
pop
push
push
iret
xchg
loope
cmpl
sbb
fisttpll
dec
jge
outsb
dec
mov
movsb
dec
es
ret
scas
jne
clc
lods
xchg
xor
movsb
or
loopne
jl
fisttpll
icebp
cwtl
push
call
fcmovu
outsl
mov
cmp
push
jnp
out
mov
je
dec
vpunpcklbw
sub
dec
scas
xchg
insb
adc
repz
jge
mov
add
addr16
cwtl
out
mov
movsb
imul
mov
xor
repz
jmp
cs
mov
mov
aas
mov
dec
xor
test
jns
xchg
mov
push
enter
pop
cmp
mov
mov
ret
dec
push
add
sbb
dec
push
out
aad
lret
sub
add
add
add
jno
cmpsl
out
and
idivb
or
ss
jmp
gs
sub
push
in
jns
sbb
stc
in
decb
jecxz
mov
xor
aam
mov
jge
mov
pop
adc
test
jle
or
pop
mov
adc
icebp
jle
rorl
popa
adcb
fnstenv
cld
jl
andl
int3
imul
xchg
add
aam
inc
mov
mov
aam
imul
jmp
inc
test
std
xor
ja
inc
xor
xchg
jnp
mov
mov
cmp
and
scas
add
mov
add
pushf
das
mov
cs
xor
int3
outsl
mov
push
stos
int
lods
divb
mov
cmp
iret
stc
mov
and
outsl
call
cwtl
sbb
sbb
addr16
dec
lahf
push
sbb
add
add
stos
add
push
mov
or
aas
sub
addr16
add
add
add
mov
es
loope
mov
call
xchg
rolb
dec
je
mov
dec
push
dec
gs
xor
mov
pop
divb
cmp
pop
js,pt
lea
push
mov
push
cmp
je
push
push
or
mov
add
sbb
add
push
call
and
push
addr16
hlt
loopne
lods
into
cli
push
add
or
lds
rol
push
cwtl
sbb
test
mov
int
sub
or
and
dec
fsqrt
pop
into
loope
or
insl
or
push
sub
repnz
jle
std
mov
dec
inc
nop
cmp
roll
adc
cltd
ds
xchg
jbe
daa
insl
insl
lcall
mov
out
mov
insb
cli
push
outsl
sub
pushf
mov
mov
jmp
jmp
jo
and
inc
stc
lret
fisubrl
or
add
add
jg
xchg
orl
fs
add
add
add
xor
mov
add
insl
insb
shl
rep
lods
mov
xor
cmp
jne
or
aas
rclb
incl
mov
adc
sti
cld
testl
mov
enter
push
lods
das
sbb
sub
pop
addl
stc
inc
pop
push
repz
insl
std
mov
je
lds
ds
adc
fdivs
aad
shlb
scas
dec
imul
popf
push
adc
and
xor
mov
sub
adc
inc
inc
sti
and
sbb
fsubs
js
sub
int3
jge
push
push
xor
jp
imul
aam
lock
aad
je
pop
lahf
daa
lods
inc
sti
aad
lock
xorl
int
mov
iret
insl
aas
repz
mov
mov
push
mov
dec
fistl
sbb
cwtl
leave
clc
fwait
loop
and
sub
incl
add
add
push
dec
lret
jmp
imul
aaa
je
mov
lea
add
add
add
clc
xchg
mov
push
push
xor
ja
mov
lds
and
es
xor
lds
dec
aam
mov
outsb
adc
sti
mov
shll
add
mov
add
bound
jle
push
lret
inc
mov
jp
data16
sbb
and
cwtl
in
subb
adc
bound
and
sub
iret
sti
out
and
cltd
sub
fimuls
mov
xchg
and
rcrl
lds
cs
jne
outsl
outsb
inc
out
stc
mov
dec
xchg
mov
mov
xchg
xlat
arpl
xchg
inc
in
add
arpl
int
insb
and
jg
es
aaa
subb
sub
popa
jmp
les
mov
xlat
and
aad
xlat
test
push
inc
sbb
ret
jge
sbb
dec
scas
sbb
int3
cwtl
mov
lds
cmc
cwtl
xchg
push
sub
daa
iret
jo
inc
add
add
add
inc
pop
imul
mov
or
loop
push
xchg
loopne
dec
or
cli
ljmp
sub
and
test
pop
fstl
test
sbb
xorps
arpl
push
fcomps
clc
cmp
out
sarl
jae
arpl
push
arpl
add
add
or
jmp
imul
xchg
loope
inc
mov
push
ljmp
fdivl
mov
and
daa
outsb
jns
sbb
adc
inc
mov
dec
pop
and
cltd
add
imul
jcxz
std
and
fwait
xchg
cmp
cld
aaa
sbb
sbb
loopne
push
mov
xor
add
dec
jge
lahf
xchg
push
cmpsl
pop
inc
push
cltd
clc
push
pusha
data16
neg
xor
clc
decb
pop
add
pusha
add
pushf
or
pop
sub
jns
xor
jg
loopne
xor
add
add
add
les
ljmp
jne
loop
imul
loopne
mov
inc
jmp
dec
sub
mov
mov
push
jecxz
mov
cltd
sti
cmp
push
cmp
sub
or
in
ret
push
call
push
pop
imul
pop
decl
mov
jg
lcall
popa
pop
dec
scas
out
adc
aas
sub
loope
les
pop
rcrb
rcll
es
divb
push
mov
inc
jl
xchg
mov
jl
repz
xor
push
sbb
rep
testl
jbe
loop
add
pop
fsubrs
incb
push
jb
adc
popf
cmpsb
sbb
enter
mov
cmp
mov
daa
add
in
imul
push
insb
scas
inc
sbb
xchg
das
loope
popf
nop
fists
bound
leave
adc
stos
mov
shl
stc
dec
scas
mov
movb
add
add
ret
jg
decl
rol
popf
push
sbb
add
add
add
and
fisubs
sbb
mov
mov
das
nop
outsb
pop
inc
push
inc
inc
add
loope
xchg
call
mov
add
mov
add
enter
in
xor
jecxz
popa
repz
pop
das
lock
fimull
leave
jns
fsubrs
adc
cmpsb
lret
mov
fcmovnb
and
mov
sub
pop
inc
les
push
xchg
int
xchg
or
insb
sub
jnp,pt
mov
mov
je
insl
xor
push
cs
pop
inc
jle
mov
jo
sub
adc
scas
mov
repnz
push
movsl
and
mov
fisttpl
jecxz
pop
int
call
aad
inc
inc
sbb
lahf
mov
mov
xor
test
call
bound
pop
pop
lahf
or
fbstp
sub
cmp
inc
adc
mov
out
aad
sub
add
add
mov
push
adc
out
pop
es
inc
inc
adc
enter
sbb
hlt
dec
dec
inc
ret
mov
and
enter
mov
out
xchg
mov
jecxz
js
in
pop
and
mov
push
ds
addr16
pusha
inc
pop
pop
and
push
lea
ss
subb
pop
loope
add
data16
hlt
add
dec
mov
mov
lahf
mov
lods
jl
hlt
scas
fdivl
pop
xchg
xchg
push
ret
pop
into
inc
fsubrl
sbb
sti
sub
testb
addr16
stos
xor
push
testb
cli
pop
lret
ds
fs
xorb
mov
jns
jmp
jp
dec
rclb
xchg
pop
in
add
add
cmp
sti
fsubrs
jb
or
cmp
xlat
movsl
dec
out
dec
dec
in
inc
or
mov
scas
imulb
xchg
aad
inc
icebp
hlt
gs
dec
adc
loope
addr16
add
add
add
aam
dec
push
jno
push
fninit
pop
je
cli
cmc
aad
testb
xorl
outsb
pop
mov
lods
jmp
cmpsl
adc
in
sub
loop
stos
and
ljmp
lcall
mov
cwtl
rcrl
jno
push
mov
pusha
mov
fidivs
push
fidivrl
stos
or
adc
jae
add
loope
addr16
jg
out
or
mov
aad
sahf
enter
pop
push
outsb
pop
enter
or
popa
jle
push
and
lds
push
fdivs
mov
xor
mov
xchg
sbb
push
xchg
adc
mov
push
xchg
fs
xchg
pop
sub
pop
lret
lret
mov
mov
shll
rclb
and
out
mov
mov
dec
aam
and
inc
mov
add
aas
gs
pop
repnz
dec
add
add
add
das
pop
jns
icebp
lret
mov
sbb
test
xor
repnz
add
dec
aam
imul
push
mov
ret
daa
call
ret
dec
push
das
push
dec
xchg
pop
sti
in
sub
popf
lret
mov
jp
mov
mov
adc
pop
mov
and
push
int3
push
jo
shll
mov
mov
nop
mov
test
mov
inc
xchg
mov
xchg
or
leave
ljmp
fildll
fldcw
fcomps
add
aam
mov
push
dec
lea
push
jl
loopne
addr16
mov
pop
push
leave
insb
movsl
mov
outsl
mov
lods
aaa
cmpsl
aas
push
out
stos
mov
hlt
ljmp
xor
xor
insl
jp
dec
fimull
xor
lret
and
call
pop
into
xchg
inc
out
sub
add
add
out
fisttpll
lock
insb
cltd
addr16
add
add
add
jp
es
sbb
cs
clc
cwtl
inc
xchg
jecxz
mov
imul
clc
pop
aad
sbb
arpl
cld
jmp
mov
push
stc
sub
pushf
mov
addr16
lea
inc
arpl
sbb
scas
fisubs
adc
fs
ss
adc
int
jns
push
in
lret
leavew
sarb
jno
sbb
inc
jecxz
adc
add
or
xor
mov
ficompl
mov
call
rolb
lahf
popf
jl
icebp
lds
xchg
lds
je
bound
or
mov
push
and
mov
js
mov
imul
ret
scas
mov
xchg
pusha
fldenv
or
aas
enter
bound
and
stos
sub
cmp
mov
insb
outsb
daa
iret
cmp
push
or
mov
sbb
add
add
mov
ljmp
add
add
add
pop
icebp
lock
or
in
cmp
push
mov
std
fiaddl
xor
and
push
or
pushf
mov
xchg
add
xor
xchg
ljmp
lret
jl
aam
ror
push
xchg
in
in
or
ljmp
adc
xchg
insb
sti
xchg
popf
mov
sub
or
rolb
xor
mov
push
adcl
pop
xor
mov
mov
inc
mov
fmuls
or
lods
xchg
pushl
fbstp
push
xchg
popl
mov
xor
lock
dec
sahf
add
das
inc
push
sub
lea
into
mov
cmpsb
push
jo
js
adc
dec
repz
pop
jmp
jae
xchg
pop
pusha
insl
data16
and
daa
pop
jg
push
sbb
jmpw
fnstcw
jo
sahf
jb
cmp
add
add
add
nop
inc
and
jo
add
pop
clc
in
xchg
cmpsl
dec
mov
xchg
dec
sub
popa
stos
mov
clc
dec
bndstx
bound
cld
mov
fisttpll
insb
sahf
mov
fistl
xlat
push
jle
pop
scas
into
cs
fstp
mov
lret
mov
stos
in
mov
pusha
push
in
or
inc
daa
repz
int3
mov
and
cmp
mov
and
repnz
scas
enter
mov
inc
stc
jnp
lret
jl
cltd
cmc
inc
or
mov
sub
into
sti
pop
jg
andl
and
or
xchg
lods
jb
popa
sahf
stos
cmpsl
fs
jne
adc
xchg
adc
add
sub
cmpsb
andl
jmp
lret
or
out
nop
adc
lahf
sbbl
mov
cmpsb
loope
cmpsl
cmp
imul
out
mov
mov
daa
xor
add
add
add
mov
mov
sub
adc
arpl
add
in
mov
cwtl
in
cli
push
or
jle
mov
call
sti
sbb
adc
push
fildl
jb
mov
pop
cmc
sbb
pop
es
mov
dec
jmp
jecxz
mov
gs
cmp
lods
or
pop
test
outsl
popa
jp
imul
jle
leave
aaa
fstl
adc
push
push
test
push
rolb
jno
mov
inc
sbb
jl
sub
xlat
das
imul
stos
in
bound
jne
sar
aad
push
sbb
das
adc
jno
adc
pop
enter
call
mov
or
push
popf
pop
push
add
sbb
lahf
cmpsb
xchg
aam
mov
mov
sbb
ror
lahf
cltd
jmp
clc
test
mov
andb
push
xchg
cmp
xor
add
add
add
dec
stc
mov
ljmp
addr16
add
add
add
cmp
cs
inc
lock
and
lret
test
movsb
add
nop
movsl
fdivr
or
xor
call
aad
xchg
je
ss
mov
enter
xorb
cwtl
iret
gs
jo
sbb
jl
scas
mov
or
dec
inc
add
in
lahf
aaa
push
leave
cmpsb
add
or
xchg
and
inc
bound
dec
arpl
pop
loope
imul
push
js
sub
pop
ja
sub
jecxz
out
loope
push
dec
lods
ja
call
sahf
cmp
scas
outsl
mov
add
test
lds
add
aas
clc
pop
leave
mov
test
and
mov
andb
mov
mov
sub
fdivrp
adc
std
hlt
mov
push
sbb
mov
pop
outsb
ret
test
mov
jnp
xchg
cmp
jle
jg
cld
lcall
mov
push
add
add
add
call
inc
pop
adc
dec
lds
add
adc
aaa
movsb
cmpb
fs
shlb
jle
push
mov
in
rcll
lcall
xor
pop
xchg
enter
int
aaa
sub
pop
mov
ficomps
es
clc
leave
arpl
pop
mov
jecxz
hlt
ds
int
lcall
mov
jbe
call
cmpb
sub
sahf
iret
pop
and
xchg
mov
mov
mov
pushf
mov
pop
daa
mov
and
xor
lcall
insl
xchg
and
loopne,pn
mov
shlb
mov
sub
and
rcll
add
rorb
cli
pop
and
cmp
ja
xchg
jecxz
cmp
shlb
pop
out
outsb
das
out
or
push
lret
daa
jecxz
cwtl
loop
sub
add
xchg
mov
pop
push
sti
jl
addr16
add
add
add
leave
outsl
fcmovne
mov
dec
sub
pop
jne
push
subl
pushf
mov
xor
js
push
lods
and
xchg
sbb
cmp
mov
jns
or
dec
or
inc
std
cwtl
push
movsl
cmp
out
xchg
add
mov
movsb
les
dec
xchg
mov
pop
dec
xchg
pop
adc
fistpll
sti
sub
stc
outsb
mov
xor
lret
fildll
xor
dec
idivb
rcrl
add
stc
dec
push
xor
out
adc
sbb
inc
jb
ret
push
fiaddl
mov
imul
push
or
cmp
cmp
scas
pop
sbb
sub
inc
scas
ret
leave
fsubl
push
xchg
add
xor
scas
das
and
fucomip
sub
repz
pop
cs
cli
stos
hlt
push
inc
in
pop
ss
stc
pop
jae
insl
xor
add
add
inc
mov
push
push
jmp
push
mov
jo
push
add
add
add
mov
push
jmp
adc
sahf
call
nop
adcb
out
shrl
or
mov
incl
pop
ret
leave
repnz
mov
mov
les
add
sbb
lds
sar
in
push
das
fwait
shll
lcall
pop
repz
int
mov
xchg
xchg
data16
aam
add
inc
pop
or
das
fmull
jo
inc
inc
out
repz
pop
push
shl
cmc
rorb
adc
jns
sbb
ret
fdivrs
adc
xor
aaa
les
xchg
add
push
out
lcall
ja
push
shlb
mov
mov
xchg
xor
bound
push
jl
in
dec
pop
xchg
jb
pop
je
scas
int
cmp
test
mov
fwait
add
push
imul
popa
sbbl
movb
add
add
sub
cmp
ret
or
or
jecxz
addr16
add
add
add
sub
or
adc
gs
pop
push
sbb
dec
ret
jno
popf
adc
dec
cmc
arpl
rorb
fbstp
int3
scas
xor
mov
fidivrs
insl
mov
imul
lock
xchg
pusha
inc
push
ljmp
ljmp
popf
and
mov
in
pusha
lcall
push
pop
je
add
ret
shll
mov
push
cmp
xor
cmpsl
stos
fnstsw
cli
test
cmp
and
scas
aam
scas
cmp
lods
mov
push
xlat
jl
and
jge
mov
pop
out
cs
lcall
mov
shll
aaa
les
movsl
jno
lods
xlat
jns
sbb
gs
add
out
dec
jmp
and
pop
dec
add
popa
add
or
in
xlat
xchg
in
push
jecxz
ljmp
flds
add
add
push
shll
out
pop
pop
pushf
push
xor
in
addr16
add
add
add
sbb
xor
xor
sub
pop
sahf
pop
mov
mov
sub
fsts
mov
rorl
push
inc
lds
and
sub
imul
jno
mov
adc
mov
iret
mov
fimull
mov
ret
lock
xor
testl
push
ret
jecxz
or
or
outsb
arpl
push
insl
cmp
pop
scas
jmp
cld
dec
jmp
xor
mov
xchg
mov
lods
and
inc
out
mov
xchg
mov
inc
mov
xchg
and
dec
mov
in
adc
insl
push
stos
and
adc
xor
test
jae
mov
pop
add
std
ret
and
dec
add
cmp
mov
mov
mul
loope
add
je
mov
rcrb
jbe
mov
sub
add
stos
push
lcall
hlt
mov
mov
add
add
add
pop
loopne,pn
add
push
out
mov
mov
sbb
out
test
lahf
mov
dec
mov
add
call
repz
adcl
je
bswap
stos
cli
lods
xor
xchg
cltd
arpl
mov
stos
mov
push
jle
std
xchg
das
dec
mov
mov
pushf
or
lods
xchg
sbb
leave
mov
mov
mov
pop
mov
insl
hlt
jl
push
xlat
leave
pop
or
xor
scas
out
in
stos
or
mov
fldl
push
dec
cmp
rcl
fisubrl
jmp
mov
pop
fisttps
in
jbe
pop
dec
aas
scas
leave
xchg
repnz
das
test
shll
add
add
daa
cld
cmp
repnz
xorl
adc
sub
loop
lea
les
cmp
ss
cmp
jae
arpl
or
bound
imul
sbb
ja
pop
add
add
add
add
arpl
repnz
out
clc
add
and
lods
loope
jno
xchg
hlt
or
enter
aas
jnp
fstpl
mov
inc
or
pop
bound
popa
and
and
push
lods
jmp
sbb
std
push
cmp
ret
sub
xlat
mov
mov
jne
xchg
das
les
xlat
dec
repz
lds
lcall
mov
ja
ljmp
in
dec
fmuls
addr16
mov
pop
push
cmpsb
xchg
jbe
push
lret
adc
lds
aaa
xchg
popf
in
xchg
sbb
stos
add
pop
pop
sahf
mov
pop
xchg
stos
pop
inc
sbb
jb
loop
shll
lock
cli
data16
fstpl
loope
stos
daa
arpl
jno
pop
rcll
xor
iret
jmp
cmpsl
ss
cmc
and
xchg
outsl
outsb
in
cmp
cmp
jl
imull
inc
jae
fwait
cmp
stos
sarb
addr16
add
add
add
jge
femms
add
out
jo
mov
mov
adc
jbe
ffree
loop
int
dec
shlb
mov
mov
lret
inc
xlat
and
popf
inc
repnz
lods
andl
push
sub
xor
lcall
lock
or
push
mov
mov
jg
hlt
icebp
dec
xchg
inc
daa
stos
arpl
xor
std
cmp
dec
loope
mov
jb
mov
mov
push
xchg
cmc
push
sar
jno
lcall
xlat
xor
jnp
fs
int
jge
xor
cld
test
shlb
cmc
mov
or
or
bound
lock
imul
fiadds
lods
xlat
leave
cmp
push
jbe
pop
jae
loopne
and
inc
dec
push
aad
lea
xchg
push
lock
mov
iret
push
cwtl
mov
add
inc
push
clc
mov
and
hlt
scas
jns
addr16
add
add
add
jb
stc
dec
push
adc
sbb
sar
push
lret
jmp
sub
jnp
and
stc
dec
add
xor
pop
in
lret
or
scas
pusha
xchg
jae
andb
sbb
xor
rcr
mov
add
mov
push
mov
pop
pop
xchg
sub
scas
mov
xchg
cs
xchg
dec
sbb
or
mov
mov
in
jbe
xchg
sarb
aas
pop
cmp
movsb
mov
std
mov
pusha
mov
lret
push
add
jne
addr16
xchg
sbb
es
xlat
ret
add
std
icebp
test
pop
bound
in
push
xor
pop
push
and
movsb
adc
pop
pop
mov
mov
decb
test
andb
into
aad
int3
sub
mov
dec
cmp
test
mov
add
addr16
push
mov
bnd
cltd
in
aas
mov
pusha
popf
jb
ret
cmc
inc
cmp
repz
or
add
add
shr
mov
es
dec
addr16
add
add
add
das
test
data16
xor
iret
sbb
scas
xor
xchg
pop
mov
pminsw
fldt
negb
jne
dec
push
cwtl
inc
aas
jp
fsubl
push
xorb
in
and
jo
imul
test
dec
push
jg
sbb
fdivrp
test
jle
sbb
ficoms
mov
loopne
movsl
daa
mov
inc
rorl
fsts
mov
cmp
rclb
jecxz
gs
push
push
stos
lods
rcl
sbb
fstl
stc
add
pop
mov
mov
sti
mov
loop
test
aam
dec
xor
dec
scas
jns
and
or
je
notb
mov
xlat
dec
int3
xchg
gs
out
push
sarl
jge
andl
mov
call
cmp
pop
je
sub
aad
jle
xchg
push
or
rolb
add
add
mov
lds
aad
xlat
popf
lods
hlt
addr16
add
add
add
mov
ss
adc
in
add
jns
incb
mov
lret
jbe
sub
sbb
fistpll
data16
adc
data16
adc
stc
out
inc
divl
in
xor
pop
pop
test
arpl
push
add
dec
movsb
push
sbb
dec
sub
sbb
or
push
cwtl
movsl
inc
push
int
xchg
mov
sub
into
jb
xchg
fisttpll
ret
cmc
mov
aam
dec
pop
mov
scas
lret
xchg
and
xor
bound
inc
ja
jle
clc
movsl
arpl
mov
xchg
pop
test
ret
lods
add
aad
mov
aad
iret
fisubrl
push
add
rcr
lea
cmpsb
test
fwait
ja
adc
dec
adc
jge
scas
cli
popf
lcall
lods
sbb
out
shlb
jge
inc
and
push
xor
sub
out
cmpsl
add
jnp
mov
and
das
cmp
pusha
mov
pop
add
add
add
out
pop
ss
pop
scas
pop
imul
decl
mov
adc
out
mov
out
test
cmp
adc
lcall
and
ror
xchg
cmp
daa
add
mov
fnsave
sub
pop
aas
in
mov
xchg
inc
adc
lods
dec
or
call
std
jecxz
inc
push
xor
test
call
imul
iret
idiv
inc
ret
pop
xchg
data16
jb
stos
xchg
sbb
lods
sbb
fwait
out
hlt
inc
add
and
incl
sahf
xlat
mov
jmp
mov
cmp
or
pop
inc
aad
xor
mov
fidivl
push
outsb
outsb
and
je
je,pn
lods
pop
ljmp
addl
enter
in
mov
pop
out
mov
movsb
and
mov
ret
inc
xor
push
sub
add
add
movsb
jae
jnp
mov
ja
mov
and
xlat
addr16
add
add
add
clc
ss
xchg
aam
fidivs
stos
je
and
cmp
enter
sbb
mov
or
push
adc
scas
ret
outsb
test
pop
jmp
aad
and
sbb
jle
pop
cmp
aad
mov
add
lret
sub
ss
movsb
xor
xor
aam
aaa
rclb
mov
out
in
pop
fisttpl
mov
call
mov
mov
movsb
add
test
gs
jo
das
push
mov
or
fidivl
aas
aam
dec
cld
stos
jbe
inc
mov
push
in
jge
pop
sub
jno
mov
scas
imul
sti
rcrl
into
daa
jl
jle
cmc
fstpl
pop
mov
lock
xor
adcb
xor
not
inc
ds
nop
repz
cmp
mov
sub
xor
fbstp
scas
adc
lahf
xlat
out
cld
or
add
add
add
mov
cmp
xor
xchg
and
ja
cwtl
repnz
jne
push
pop
xor
scas
mov
lret
jge
inc
repz
sarb
repnz
ja
out
fwait
push
mov
mov
inc
rolb
and
mov
xor
ja
bound
cs
mov
stc
scas
ret
push
or
or
addl
mov
les
lret
stc
stos
and
scas
sti
inc
movsb
addr16
mov
mov
sbb
repz
in
sti
jo
stc
mov
out
cmp
daa
push
dec
ret
das
jmp
fimull
add
xchg
xor
cmp
out
xor
xchg
popa
pop
js
test
jp
sbb
arpl
mov
pop
mov
js
andb
clc
cld
dec
cmp
andb
fsub
or
addl
add
mov
mov
in
mov
add
add
add
neg
mov
cmp
add
icebp
jmp
adcb
cmpl
pushf
clc
fisubl
pop
fstl
je
mov
cld
lods
sbb
jg
cli
adc
clc
inc
rorb
in
push
or
adc
mov
mov
sti
pop
and
in
xor
xchg
scas
bound
loop
jns
mov
xlat
scas
fs
xchg
adc
mov
lock
enter
cmp
pop
and
dec
inc
dec
fimull
fsubr
push
mov
in
out
repz
push
push
js
pop
push
test
mov
xor
shll
mov
in
loopne
mov
push
and
push
in
or
cmc
imul
jb
fistpll
inc
mov
lock
orl
jb
jbe
pop
mov
test
push
mov
push
mov
out
into
push
push
inc
lahf
mov
addr16
add
add
add
es
or
jp
gs
jmp
rol
jae
cld
cmp
and
nop
pop
xor
insl
loopne
xor
lret
add
push
loopne
or
jno
cmp
mov
fwait
mov
outsb
cmp
data16
inc
ja
xor
pop
int
sbb
dec
cltd
xchg
and
jl
dec
push
sbb
inc
repnz
pushf
xchg
xor
jl
movsb
jge
das
insb
les
sbb
sahf
inc
lods
aam
insl
ret
mov
fistl
cmpsb
xor
mov
mov
inc
push
and
pop
lds
mov
jnp
adc
jg
jl
ds
mov
test
sub
in
add
icebp
notl
div
pusha
xchg
fprem1
add
popa
or
sub
sar
mov
push
inc
aad
push
jg
loope
and
mov
jg
or
bound
add
add
add
js
out
test
fsts
sbb
call
xchg
mov
sarl
fcmovne
sbb
ds
and
sub
loop
jae
jae
xchg
dec
ljmp
outsl
jmp
outsb
jle
sbb
sti
jge
xor
mov
xchg
mov
fiaddl
fdivrl
inc
jmp
clc
mov
mov
adc
fbstp
mov
daa
cmpsb
imull
or
movsb
in
or
inc
mov
cmp
jle
data16
les
add
dec
xor
imul
rcrb
mov
push
cmpsb
lds
jno
mov
xor
xchg
sbb
or
adc
pop
in
fs
data16
lea
ljmp
bound
test
mov
jle
andb
scas
mov
cmpl
mov
push
lahf
pop
fcmovb
fcmovnb
lahf
pop
cmpsl
jne
mov
pop
xchg
arpl
add
add
add
xor
xchg
in
lock
cmpsb
pop
psrld
mov
sub
dec
or
sub
pop
hlt
iret
mov
dec
mov
push
adc
mov
aas
aam
test
fs
cltd
dec
das
or
add
xor
sub
notb
cmp
pop
lock
xlat
mov
bound
das
es
or
cmp
stos
jo
or
movsl
dec
dec
cmovge
out
out
nop
aas
pop
clc
popa
xchg
jo
lds
xor
xor
xor
add
and
and
lahf
shrl
data16
sbb
fisubl
push
andb
mov
or
sbb
dec
mov
jbe
std
adc
pop
cmp
test
jecxz
inc
sub
xor
push
dec
or
addr16
iret
and
insl
inc
cmp
adc
fnstenv
outsl
push
push
jle
push
cmp
sahf
pop
testl
lret
pop
inc
add
add
add
jmp
test
or
jnp
inc
dec
out
lods
test
xor
mov
adc
ret
iret
adc
aas
fwait
rcrb
adc
cmp
add
out
fldenv
int
mov
mov
or
push
dec
mov
mov
xchg
cmp
movsl
push
ret
ret
adc
int3
into
arpl
dec
in
and
pop
in
cwtl
sub
xchg
sub
and
cmp
and
push
cli
cmc
mov
lds
pusha
into
sub
inc
fimuls
adc
cmp
mov
das
pusha
ficomps
xchg
jecxz
mov
mov
adc
push
daa
in
pop
test
mov
mov
xor
sub
lcall
xchg
and
loope
sub
insl
subb
into
pop
mov
shll
cmpsb
out
and
jge
add
add
pop
mov
fstps
adc
add
add
add
dec
or
movl
and
ror
mov
repnz
pushf
push
push
push
or
and
pminub
fs
sbb
int
in
sbb
pushf
fwait
mov
les
sub
mov
out
int3
add
jle
movsb
jb
lret
popa
mov
mov
adcl
jae
pushf
loop
cwtl
fisttpl
cmp
cmp
or
xchg
cltd
dec
in
cmpsb
test
add
test
jae
mov
dec
andl
jnp
inc
jne
xor
je
inc
pop
ret
outsl
lret
test
scas
mov
and
cli
or
mov
imul
xchg
cmp
pop
xchg
or
jle
xchg
adc
mov
push
loope
push
cmpsb
push
xchg
xchg
dec
outsl
and
nop
and
clc
push
outsl
jp
dec
stc
insl
pop
cmpsb
cmp
addr16
shl
les
add
add
repnz
movsb
jle
arpl
loope
add
add
add
dec
and
out
sub
out
jle
int3
sub
movsl
cwtl
mov
sbb
mov
lcall
repz
xor
cmp
push
aad
push
mov
daa
dec
sbb
push
adc
add
inc
adc
lea
int
cmp
mov
cld
lcall
fildl
leave
push
mov
out
mov
fldt
sahf
stos
icebp
lcall
addr16
js
pop
mov
out
pop
jmp
test
call
xor
sti
aad
imull
sub
fmulp
adc
pop
push
mov
ja
dec
mov
mov
test
dec
and
xor
movsb
rolb
xor
adc
loope
in
push
in
jge
push
sub
pop
sbb
pop
rorb
stos
adc
xor
xor
imull
stos
sub
stos
out
jmp
sub
sarl
andb
add
add
add
adc
mov
enter
imul
jne
mov
pop
outsb
adc
sahf
lods
loop
ror
jl,pt
sbb
lock
add
cmp
movsb
out
xchg
and
and
and
lahf
xchg
jnp
enter
pop
push
sbb
test
push
dec
add
lods
pop
leave
mov
insl
jge
mov
xor
cmp
scas
movsb
testl
push
arpl
xor
dec
dec
xor
xor
arpl
cmc
cmpsl
loop
sub
jns
xor
lahf
repz
and
jle
xlat
jo
push
xor
add
jne
into
test
std
sbb
pop
cmpb
sti
pop
or
bnd
fcom
adc
push
scas
and
jl
xor
mov
std
call
daa
mov
icebp
jmp
cld
shlb
add
add
mov
fnstenv
fs
push
sbb
add
add
push
pushf
daa
aad
add
sub
cmp
in
arpl
add
pop
stos
aas
sahf
daa
pop
and
pusha
subb
xchg
mov
mov
test
xor
mov
daa
xor
stc
sbb
aad
rorb
jno
loopne
sahf
inc
frstor
sti
mov
inc
adc
in
rorl
dec
xor
adc
test
fisttps
lods
lods
jo
movsb
mov
ljmp
push
ljmp
popa
jns
jl
lahf
or
cltd
cmpsl
fisubrs
inc
pushf
popf
pop
inc
enter
stos
adc
imul
fdivrl
mov
pop
pushl
add
xchg
shl
inc
jns
pop
fcoms
jg
cli
lods
push
inc
aam
xchg
add
outsl
std
mov
mov
push
xor
popf
or
clc
pop
jne
outsb
cld
je
jbe
jns
sbb
xlat
addr16
imul
add
outsl
jecxz
pusha
mov
fs
in
neg
push
jbe
fisubrs
pop
nop
lods
pop
cmp
adc
mov
test
adc
mov
sbb
mov
fcoml
push
mov
sub
cmp
outsl
dec
mov
popf
jno
mov
jo
push
pop
xlat
rol
jle
sub
mov
in
and
and
and
sub
lret
mov
sub
les
push
clc
mov
inc
pop
push
ret
mov
outsb
adc
lahf
mov
mov
aaa
xor
cld
das
inc
add
mov
pop
cmp
fiaddl
dec
jo
jb
ret
pop
add
leave
mov
xchg
daa
repz
shll
lcall
std
les
xchg
sbb
movsl
or
mov
scas
jne
mov
push
xchg
sti
fsubrs
out
or
push
cltd
jmp
fildl
or
leave
lret
or
add
add
add
adc
test
imul
lock
je
xchg
mov
jbe
add
in
out
stos
data16
dec
xor
enter
mov
xchg
pop
in
push
in
pop
xchg
and
xchg
sbb
aaa
in
mov
out
xor
xchg
jnp
push
mov
mull
inc
dec
sbb
lret
push
pop
sub
sub
xor
dec
and
xchg
test
shl
jge
and
mov
cwtl
mov
mov
push
pusha
or
popf
inc
hlt
push
fbld
dec
xor
mov
cmpsb
cmp
jg
mov
xor
mov
faddl
xchg
test
jge
hlt
sti
fstpl
xchg
adc
mov
test
loopne
pop
mov
push
ret
xchg
pop
mov
inc
cwtl
outsb
fsubs
imul
mov
push
push
adc
mov
mov
push
jg
dec
xchg
dec
jp
imul
add
add
xlat
mov
dec
lods
or
cmp
dec
and
push
cli
or
fldlg2
bnd
or
and
jl
cmp
in
push
xchg
push
pop
aas
xchg
sahf
pop
mov
add
push
and
pop
push
mov
rcll
mov
push
fisttpll
mov
jae
dec
lcall
sub
add
or
cs
pop
jle
lea
cmp
std
subl
pop
loope
push
aam
mov
mov
mov
mov
ret
aam
adc
mov
dec
in
dec
cltd
lret
arpl
fwait
lods
or
mov
jge
mov
jl
movsl
xchg
fstl
je
push
and
jecxz
hlt
int
daa
jle
add
mov
int3
shll
addr16
repnz
popf
mov
loop
xor
fsubr
cmp
add
mov
fucomip
push
insb
xor
std
in
dec
pushf
insb
add
add
add
iret
stos
sub
test
add
loopne
mov
mov
mov
xor
imul
cmp
and
sahf
ja
mov
xor
jmp
test
dec
outsl
arpl
jns
subl
int3
jle
arpl
push
dec
fisttpll
mov
nop
loop
nop
add
int
and
sub
leave
fisubs
stos
inc
add
xor
sbb
and
sbb
aad
mov
mov
mov
aam
iret
cli
rclb
mov
lock
dec
adc
data16
cmp
sub
out
into
mov
int3
imul
psubusw
in
or
xor
mov
test
notl
in
inc
pop
cmp
movaps
fcmovb
das
or
outsl
outsb
das
mov
aas
sub
pop
jg
movsb
jecxz
loope
popa
mov
rclb
enter
ljmp
mov
add
add
dec
out
iret
jmp
aas
in
push
push
test
add
add
add
outsb
dec
stos
adc
sti
in
sub
inc
aam
add
inc
pop
add
cmc
fcomps
sub
cli
cmp
into
adcb
inc
and
pop
sbb
mov
scas
cmpsl
sti
lahf
dec
test
jns
jl
and
xor
inc
shlb
push
cwtl
xchg
lss
out
cmp
jnp
xor
dec
mov
test
jecxz
dec
imul
xchg
lods
aam
enter
sbbl
pushf
loop
inc
push
cmpsb
add
or
sbb
into
pop
push
fldcw
insl
icebp
out
mov
jno
xchg
and
and
xor
jl
jne
lahf
cwtl
or
cmp
shll
stos
lods
push
insw
pop
sub
jle
movsb
or
fiadds
mov
into
inc
sub
mov
sub
push
jne
movsl
mov
es
aas
pop
or
mov
add
cmpsb
push
jnp
std
cmpsb
pop
dec
sub
sub
test
add
add
add
add
xchg
test
xor
jo
rolb
fdivs
sub
pop
std
leave
jl
and
std
out
insl
loopne
imul
test
jns
subb
sbb
data16
pop
es
lret
cmpl
mov
mov
cltd
lahf
push
call
dec
add
notl
test
mov
xor
hlt
movsl
les
pop
mov
add
jl,pn
push
in
test
jg
stc
cltd
mov
sbb
mov
cli
mov
ss
leave
sub
popl
or
and
mov
mov
cwtl
fwait
xor
xorl
mov
jg
pop
mov
setbe
xchg
xchg
sub
lods
add
sbb
imul
mov
test
sbb
sti
mov
mov
xor
xor
fs
test
mov
xor
adc
add
add
neg
std
sub
dec
push
ja
ret
add
add
add
pop
jl
dec
dec
int
mov
pop
mull
xlat
mov
xchg
pusha
push
and
jl
adc
add
sub
scas
xchg
ret
jge
out
mov
popa
jle
cmpsl
cmpb
dec
or
aas
test
rorb
xchg
push
les
xchg
inc
loop
adc
aaa
add
push
xchg
mov
in
test
mov
inc
repnz
mov
jne
inc
shlb
xchg
mov
repnz
jne
inc
mov
jae
into
lea
push
insb
sub
pusha
add
xchg
or
xchg
pop
pusha
dec
or
mov
xchg
and
mov
dec
addr16
aaa
mov
jle
sub
outsl
xchg
xor
nop
jnp
test
shll
xor
and
lret
inc
sub
in
lcall
cld
cmpsl
inc
bound
add
cs
xor
cltd
jmp
jo
add
add
add
fs
dec
inc
lret
xchg
and
mov
sbb
mov
in
inc
mov
inc
mov
mov
gs
push
pop
sbb
ljmp
cmc
xchg
inc
jnp
or
adc
pushl
scas
fcmovu
push
pop
addr16
sbb
jl
sub
mov
push
inc
test
sub
es
fisttpl
aas
dec
sub
fldenv
loope
push
div
fs
jle
repz
adc
sub
pop
and
jns
aam
pop
test
cmp
ret
loope
xor
rorl
inc
cmc
sub
inc
inc
dec
push
xor
jae
adc
lret
movsl
out
aaa
xchg
or
mov
mov
or
mov
cmp
or
and
push
mov
or
lods
sub
push
sbb
cmpsb
lcall
out
sbb
jns
addr16
add
add
add
popf
jnp
lods
xabort
sub
daa
mov
sub
pop
mov
push
aad
mov
lods
mov
lcall
pushf
mov
int3
icebp
lret
xor
dec
dec
outsl
sbb
shlb
push
and
mov
test
sbb
xorl
mov
js
arpl
sub
in
inc
xchg
jo
xor
dec
mov
push
cmp
fldt
and
iret
aam
flds
jns
cmp
lcall
or
les
dec
rolb
ss
in
sbb
mov
shrl
pushf
inc
sub
add
xchg
xchg
loop
inc
xor
xchg
lock
outsb
mov
cmpsl
sub
xorb
mov
lods
and
add
add
sub
ja
mov
xor
add
add
add
icebp
ficompl
pop
xchg
test
mov
jnp
fidivrs
pop
into
jl
xor
mov
add
test
lret
sub
jb
adcb
cmpsb
mov
mov
pop
in
clc
or
call
xor
aad
test
xchg
xor
gs
cli
dec
cmp
xchg
adc
sbb
movsl
icebp
subb
roll
inc
push
repz
cmp
cmpsb
test
jno
dec
loope
scas
out
mov
icebp
aam
inc
in
add
cmp
ljmp
fbstp
imul
addl
adc
out
inc
dec
mov
or
ss
ficoms
jg
pop
mov
in
and
jae
mov
pop
stc
xchg
mov
pop
movsl
call
into
inc
insb
pushf
mov
cmp
filds
add
add
cmp
jnp
outsl
cmpsb
loopne
sti
es
addr16
add
add
add
ficoms
jmp
cs
popf
cmp
xchg
push
or
lahf
mov
call
loop
jnp
daa
hlt
clc
and
push
lcall
cmpsb
lahf
lea
std
fldt
out
xchg
sbb
outsl
sbb
dec
and
push
cmp
fstpt
inc
sti
aam
movsl
fstps
test
mov
std
push
imul
add
cpuid
jl
inc
loope
clc
inc
sti
fcompl
xchg
sbb
jecxz
xchg
jmp
mov
scas
adc
mov
mov
pop
jmp
or
push
ja
mov
scas
into
pop
pop
shlb
mov
xor
jbe
fmull
mov
test
or
fisubrs
sub
sbb
out
jmp
mov
sub
mov
jge
sub
clc
int
sbb
mov
pop
out
sbb
push
sub
orb
inc
xchg
push
mov
cli
xchg
jle
push
je
sarl
push
inc
addr16
add
add
add
or
insb
cmpsl
jne
pop
xor
scas
lods
loopne
imul
push
xor
dec
pop
aam
mov
add
jmp
jecxz
mov
adc
xchg
je
inc
inc
mov
lods
outsb
int
cltd
fidivl
xchg
mov
or
negb
outsl
fdivp
add
mov
imul
sub
fcomps
adc
pop
outsb
sbb
sub
repz
popa
dec
rcrl
sub
pop
xbegin
outsl
mov
ret
stos
and
repz
add
mov
lahf
std
adcl
je
sub
out
fildl
cmp
call
loope
shll
shlb
test
push
lods
std
cmp
mov
lods
pop
scas
jmp
cmp
dec
pop
mov
std
lods
mov
cmpsl
mov
cmp
roll
outsb
enter
xor
inc
aaa
dec
fwait
jnp
aad
sbb
cmp
addr16
add
add
add
xor
xchg
adc
dec
arpl
test
jl
lds
in
jne
push
mov
mov
mov
pop
xor
gs
jns
sbb
xor
mov
daa
cli
std
cmc
push
in
rcrb
gs
add
ficoml
jns
dec
or
in
insb
jb
in
jb
push
pop
xchg
repnz
push
pop
push
data16
pop
movsb
or
fstpl
aas
pop
add
xchg
mov
movsl
lret
nop
std
jl
pop
mov
roll
cmp
les
leave
insb
addr16
notb
mov
jge
pop
xor
bound
scas
lahf
jmp
imull
xchg
test
inc
add
sub
jbe
shll
out
push
je
cmp
push
add
push
inc
outsl
test
mov
lcall
pop
add
out
inc
repz
imul
push
cmp
call
mov
std
mov
sub
jbe
add
add
add
outsb
sahf
dec
test
pushf
push
dec
adc
adcb
test
inc
push
out
movl
xor
and
jae
fsts
jae
aam
scas
sub
cmc
push
sub
imul
xor
adc
in
repz
mov
or
das
mov
push
and
inc
test
clc
jecxz
in
rcrl
jb
or
cmp
insl
ret
jno
cld
xor
mov
repnz
mov
bound
cmp
mov
sbb
decb
scas
cli
mov
xchg
mov
je
lods
outsl
cmp
lcall
insl
cmpsb
aad
mov
imul
lods
cs
pop
xor
and
outsl
or
push
adc
inc
cmp
adc
enter
jb
sbb
scas
sbb
jns
add
in
sub
out
adcl
xchg
fisttps
mov
loopne
addr16
add
add
add
add
outsl
idivb
out
dec
loopne
pop
and
sti
or
lret
sbb
and
repnz
aad
mov
sbb
test
scas
insl
push
pop
cs
in
test
jo
mov
or
mov
sbb
sbb
imul
dec
xor
cmp
pop
sbb
mov
scas
scas
iret
push
clc
mov
popa
mov
fsub
push
popf
inc
cmp
into
out
mov
rcll
into
lods
ret
and
jb
int
mov
stos
adc
dec
jbe
sub
shll
mov
cld
push
in
xchg
mov
loope
hlt
mov
ucomiss
jno
mov
sbb
stc
push
daa
adc
addb
and
in
and
ret
addr16
loop
jno
out
or
push
inc
in
mov
mov
out
sub
sbb
js
add
add
add
cmc
scas
xchg
mov
loop
cmp
adc
mov
mov
or
mov
movsb
cli
add
popa
addr16
add
xor
rorl
mov
cmp
cmc
mov
int3
xor
cmp
mov
inc
stc
cltd
cmp
jne
xchg
jg
pop
out
pushf
add
enter
outsl
or
sub
insb
mov
push
leave
std
lods
and
inc
or
addr16
arpl
jns
sub
lcall
fidivrl
lods
push
jbe
sbb
adc
loopne
pop
sahf
cmp
cmp
repnz
pop
or
xor
adc
shl
add
out
fmuls
ja
ret
hlt
mov
pop
sbb
mov
inc
sbb
ret
xor
test
pop
fistps
add
sahf
ret
inc
mov
mov
sbb
add
sub
int
pop
push
push
sahf
xchg
add
add
divl
in
sub
addr16
add
add
add
mov
pop
jmp
pop
mov
pusha
adc
xlat
inc
ret
ja
repnz
push
push
popa
or
mov
and
aaa
push
call
mov
pusha
and
ja
and
fldl2t
sub
loope
xlat
pop
scas
xchg
into
xlat
stos
push
arpl
jmp
and
sti
cmp
test
xchg
push
adc
dec
mov
mov
sti
das
mov
filds
inc
adc
lahf
dec
and
jae
clc
dec
cwtl
pop
sbb
int
mov
xchg
cmp
or
test
and
scas
das
mov
aad
aam
sbb
push
jmp
jle
icebp
mov
mov
test
push
shl
jns
xchg
popa
inc
sub
pop
sbb
scas
inc
jno
or
xchg
pop
sahf
test
push
cmp
decl
sbb
dec
clc
fisubs
mov
mov
cwtl
mov
add
add
add
sbb
xorl
xor
sbb
push
jge
inc
not
pop
xchg
jns
test
push
xor
xchg
sub
push
out
dec
push
inc
jne
push
je
add
adc
cmp
hlt
out
sti
push
sahf
popa
ret
jns
inc
arpl
push
xchg
add
add
cmp
in
jg
push
aas
mov
js
int3
xchg
push
clc
lock
in
xor
out
fldcw
jecxz
insl
loop
test
mov
orl
mov
popf
lcall
jb
jo
jmp
fwait
pop
adc
mov
jnp
gs
cmc
adc
xor
daa
mov
sbb
add
or
in
cmp
in
xchg
xchg
sub
arpl
push
jl
xchg
dec
inc
mov
cmp
adc
inc
sbb
adc
shlb
mov
pop
push
std
xor
add
add
mov
push
mov
lcall
add
addps
out
stos
inc
jnp
rcrl
add
dec
jns
addr16
mov
mov
out
pusha
in
mov
fwait
lret
dec
push
iret
lret
fcomps
notb
pop
ret
dec
aas
insl
out
ret
imul
shrb
xor
icebp
pop
shlb
jle
adc
jo
pop
jno
outsb
adc
pop
sbb
jns
daa
xor
adc
roll
stos
sbb
leave
jno
cld
rcll
cmpb
shrl
add
movsl
jns
clc
cmp
adc
ret
cmp
sti
mov
push
push
fucomip
rcll
das
clc
cmp
xor
pop
out
xor
cmp
jmp
mov
cli
sub
mov
bound
push
adc
arpl
ret
mov
cmp
jle
orb
ljmp
jl
mov
jl
add
add
add
and
xor
rcr
push
mov
inc
testl
mov
xchg
shlb
addr16
cmp
imul
adc
jno
fwait
jne
je
pop
movsl
in
shl
jnp
push
das
mov
clc
dec
sub
sub
cmp
test
and
jbe
push
loop
mov
loope
adc
sahf
adc
adc
add
pop
fldcw
out
inc
out
js
fdivrs
cmp
cmpsb
mov
sti
xchg
scas
cli
arpl
int
les
xchg
scas
pop
push
jnp
mov
mov
jmp
clc
jmp
dec
jmp
xchg
mov
cmp
icebp
fisubrs
sub
imul
dec
loope
ljmp
in
or
ret
xchg
inc
xchg
push
xchg
jae
adc
je
dec
mov
leave
sbb
jae
mov
mov
pop
lahf
ja
xlat
in
lret
hlt
into
call
out
add
add
jo
ja
std
stos
sbb
ljmp
add
add
add
or
stos
ret
jg
inc
add
sbb
ror
add
mov
lret
arpl
jbe
xlat
movsl
lret
aas
dec
lret
loope
stc
stc
sarb
adc
push
ja
cmp
and
cmp
cmc
jae
call
pop
adc
cld
je
add
push
push
jecxz
adc
mov
add
ret
dec
cmp
aad
mov
mov
jns
rolb
fsts
pop
push
cmpsb
fwait
int3
jno
xor
xchg
dec
leave
dec
dec
loope
adc
daa
lret
mov
push
or
sti
cmovg
into
fnsave
push
shrb
xchg
xlat
sahf
lods
sbb
mov
mov
add
jno
mov
mov
inc
lods
mov
inc
stos
sahf
mov
daa
fcmovne
loope
fists
push
pop
xor
fwait
and
repz
mov
add
cmp
xchg
adc
test
xchg
mov
cmpsb
push
sbb
shll
add
add
add
shufps
push
pop
lock
rorl
inc
add
out
adc
sub
dec
repz
rcll
xchg
xchg
lock
jge
cli
jo
mov
push
movsb
insb
inc
pop
cmp
les
sahf
jae
xor
adc
xchg
aam
cmpsb
aaa
pop
repz
xchg
loopne
movsl
movsl
ret
pop
fwait
mov
mov
add
outsb
mov
lock
cmpb
inc
xchg
orl
je
xchg
jae
movsl
sbb
ljmp
cltd
xlat
mov
xchg
cmp
lahf
pop
gs
aam
xchg
fists
jo
or
dec
stc
adc
inc
sbb
gs
xchg
mov
aaa
stos
dec
and
dec
jb
mov
lcall
push
mov
inc
fmuls
sub
or
jg
pop
dec
bound
shrl
in
xchg
cld
cmp
jp
decl
jge
repz
sub
lods
xor
cli
mov
xor
addr16
add
add
add
pop
hlt
pop
or
pop
fwait
adc
push
xor
cmpsl
cmp
dec
int3
jecxz
and
les
cmp
jg
popa
dec
cli
sub
mov
fsubrl
xor
push
mov
sub
shlb
aam
push
push
ljmp
sbb
cmp
stc
imul
and
add
ret
push
into
shr
mov
js
and
mov
fs
mov
cli
jnp
pop
pop
sub
rcrb
push
pop
aaa
or
push
cmp
push
ss
xchg
movsl
pop
mov
fdivp
fcoml
mov
cmp
mulb
mov
and
inc
imul
fisttpll
call
jns
xor
or
orl
add
insb
mov
mov
push
loope
ror
and
iret
bound
cmp
loop
andb
add
test
lcall
pop
cmp
add
add
pop
aaa
dec
pusha
push
inc
push
fistl
jbe
or
inc
mov
andb
xchg
add
loope
mov
es
fwait
sbb
cmc
int3
sbb
mov
push
shll
movsb
cmc
les
arpl
or
sbb
outsl
int3
movsb
adc
in
es
in
mov
std
dec
lret
out
or
and
inc
mov
mov
pusha
rclb
loop
int
mov
cmc
ljmp
insl
test
popa
addl
xor
xor
shlb
jnp
push
xlat
or
mov
ret
mov
jmp
cmpsl
push
fwait
mov
pcmpgtb
and
ljmp
and
int3
push
push
inc
push
ss
ret
sahf
clc
dec
or
aas
lods
sub
sbb
lods
out
xlat
push
lret
xchg
rcl
cs
rorb
push
mov
stos
push
mov
add
add
xchg
xchg
jns
jmp
mov
addl
add
jge
in
push
mov
inc
xchg
scas
fptan
jg
push
pop
repz
inc
inc
push
mov
fdivp
mov
rcll
out
std
into
sub
add
adc
add
jne
in
or
clc
out
inc
jle
push
mov
sub
das
mov
sarb
xchg
in
gs
cli
enter
test
int
fwait
call
movsb
gs
std
sub
pop
mov
ss
aam
adc
sbbl
cmp
adc
inc
cmpsb
addr16
cmpsl
fcompl
dec
lds
pop
sahf
mov
leave
pop
or
pushf
and
mov
sbb
adc
ret
inc
mov
lret
fdiv
jnp
add
push
mov
popa
gs
inc
xor
int3
ret
jg
xor
mov
insl
inc
rolb
adc
js
leave
sbb
in
decl
jnp
jns
and
mov
scas
lcall
adc
sbb
and
or
addb
add
add
cmp
mov
out
jnp
xor
ret
dec
mov
xchg
cld
fs
sbbl
inc
mov
pop
mov
cmp
pop
imul
pusha
pop
inc
repz
call
sub
decl
mov
adc
das
pop
nop
cmp
add
mov
incl
jmp
push
jns
lret
inc
ja
fimull
aam
cmp
movsl
dec
enter
pop
stc
push
sahf
add
fnstenv
mov
pop
pop
pop
popa
sbb
lods
mov
push
adc
add
push
data16
xor
rcrl
fwait
out
ds
insl
adc
or
mov
dec
dec
add
push
jne
sbb
iret
mov
stos
movsl
pushf
inc
mov
shlb
clc
sbb
adc
ret
dec
out
js
popf
xchg
ficompl
aaa
pop
mov
adc
mov
mov
mov
jl
cs
idiv
jne
iret
adc
add
add
add
fidivrl
mov
ljmp
mov
subl
jo
jae
mov
push
mov
mov
fcoml
stos
inc
sahf
adc
xchg
movsl
jle
dec
ss
inc
movsl
mov
popf
fcmovbe
fs
lods
sub
add
lret
lds
mov
in
roll
lock
imul
into
sub
pop
pop
inc
bt
hlt
in
pop
and
stos
in
and
add
scas
push
dec
push
sub
outsb
jne
ss
and
sbb
in
and
fcompl
iret
andb
das
pop
imulb
pop
shrb
fisubrl
xchg
inc
lcall
jp
or
push
in
or
push
pop
cld
sbb
inc
cld
cmp
ds
jo
jl
dec
and
sahf
inc
ds
jp
lds
xchg
fcmove
push
xor
lcall
lcall
add
jns
loop
mov
xchg
pushl
sub
or
test
add
add
add
xchg
ja
dec
js
lea
jle
sbb
or
xor
test
pop
lods
cmp
add
or
push
adcl
cs
mov
enter
sbb
pop
xor
decb
pop
push
shlb
gs
cmp
stc
cld
dec
rcr
push
pop
mov
divl
stc
lods
in
jne
ficompl
hlt
push
lds
hlt
les
insl
mov
in
bound
cld
pop
mov
in
fildl
xchg
mov
test
xchg
test
out
pop
adc
push
mov
add
gs
dec
mov
in
push
pop
popf
sbb
aad
pusha
fldl
xorb
test
cmp
mov
loope
clc
gs
popf
pushl
int3
in
mov
cmp
sbb
add
mov
jmp
lea
push
mov
add
mov
jge
std
sti
iret
ss
push
jno
pop
movsl
pop
test
add
add
add
or
sarl
adc
pop
mov
out
cli
lods
jns
inc
jns
or
pop
sub
fsub
pop
cmp
jg
int
inc
mov
inc
xor
fucomip
loope
and
add
jne
ret
add
push
js
push
sbb
mov
jmp
inc
sub
adc
adc
dec
mov
int
fidivrl
test
jne
xlat
orl
lock
fdivp
scas
push
jno
xchg
sar
xchg
outsl
mov
clc
inc
mov
jecxz
mov
sub
pop
sbb
xchg
jae
dec
das
scas
in
push
loop
jmp
pop
xchg
cli
sahf
cmp
dec
daa
cmp
xor
jns
xor
push
aad
lods
mov
int
in
or
mov
mov
jmp
cmp
into
xchg
mov
je
cld
add
add
xor
cmpsl
cwtl
dec
js
and
inc
add
add
loopne
xchg
inc
lahf
sti
hlt
out
dec
roll
cmpsl
mov
xchg
add
add
add
add
les
nop
test
loopne
mov
in
ljmp
fbld
daa
and
test
and
loopne
sahf
mov
or
test
cmp
stc
setg
enter
add
xor
addl
out
into
mov
stc
mov
jmp
xor
aaa
imul
fadds
mov
jle
out
mov
stos
dec
push
adc
fyl2xp1
testl
pop
xor
jg
jo
push
mov
or
sbb
and
push
xor
insl
pop
aad
push
roll
mov
lcall
aaa
sbb
scas
fwait
mov
cmpb
outsb
fneni(8087
call
mov
push
imul
or
add
mov
int
and
js
in
fcoml
movsb
xchg
xchg
xchg
xor
cmc
push
add
add
mov
mov
mov
xchg
add
add
add
and
imul
sbb
fisubl
xlat
inc
dec
and
xchg
test
cld
dec
mov
mov
out
pusha
lahf
mov
out
pop
mov
sti
sub
movsb
xor
loop
adc
xchg
aad
imul
or
sbb
adc
out
in
scas
add
cmpsl
push
aam
ja
lret
test
inc
dec
dec
xchg
jb
je
imul
cs
mov
movsl
push
pop
cmp
fcmovnb
popa
inc
int
mov
loopne
cmp
call
xor
inc
fldcw
push
hlt
jl
lahf
loop
xchg
idivb
inc
lock
insl
inc
adc
mov
popf
mov
mov
or
inc
leave
adcb
pop
mov
bound
or
mov
sbb
push
xchg
sub
lea
mov
add
das
mov
out
daa
mov
or
dec
xor
and
out
ljmp
lock
xchg
inc
cmp
adc
add
add
jl,pt
ljmp
sbb
frstor
cs
push
and
jl
sbb
test
ret
leave
xor
pop
cmp
add
xor
pop
jbe
int3
movsb
mov
in
sbb
shr
mov
inc
scas
add
cwtl
mov
mov
mov
cmp
bound
mov
scas
dec
cmp
ftst
cmpsl
jmp
inc
lock
mov
jmp
mov
arpl
orb
divl
mov
jbe
lahf
xchg
arpl
cs
ja
decl
add
adc
call
sub
inc
xchg
cwtl
sub
es
and
cli
cmp
aaa
lock
push
xchg
fs
or
gs
and
in
add
adc
clc
inc
into
imul
jbe
and
mov
imul
push
jnp
sbb
push
xor
es
mov
add
add
add
aas
imul
sti
or
loope
les
pop
jae
ljmp
movsb
xchg
lret
nop
mov
dec
inc
test
sub
or
sub
mov
mov
lods
pop
add
lea
insb
add
fcompl
arpl
xchg
stc
cmp
jp
mov
sub
xchg
mov
test
mov
outsb
jg
inc
fnsave
add
rolb
inc
cs
cld
pusha
push
inc
push
jl
scas
push
push
push
cmp
dec
inc
ljmp
jl
les
or
push
popf
addr16
adc
loop
pop
ja
and
pop
stos
ds
mov
and
mov
dec
sub
movsb
shrl
jg
mov
stc
in
mov
dec
adc
subl
fldl
repnz
call
or
cli
lods
sbb
xchg
xchg
add
push
aas
or
mov
fs
in
mov
add
add
add
sti
movsb
add
mov
xchg
jb
mov
push
into
push
and
push
insl
jmp
es
mov
mov
mov
ret
and
jne
js
movsl
push
test
mov
lock
push
lds
dec
mov
test
es
jge
or
sbb
out
fisttpll
or
mov
out
mov
and
sbb
jecxz
jle
daa
test
pop
fstpl
les
add
pop
dec
in
sub
pop
xchg
inc
movsl
icebp
js
test
and
mov
inc
js
scas
add
sahf
xor
or
lods
xor
mov
and
movsl
mov
jns
sbb
call
push
sub
lret
sbbl
ss
icebp
int
imul
shll
push
xchg
push
loope
insb
cmc
cmp
lahf
pop
jmp
jl
nop
mov
scas
jne
jbe
add
add
push
outsb
fisubs
test
xor
mov
add
add
add
daa
out
push
fildll
in
cmp
xor
addr16
adc
add
gs
insb
in
dec
mov
fsub
out
cmpl
jbe
mov
mov
xchg
xor
mov
mov
mov
sub
and
pop
xchg
enter
in
pushl
fcompl
stos
lret
cmp
pop
or
lret
scas
out
pop
test
in
sbb
clc
jno
jle
mov
js
sub
xor
xlat
outsb
into
xor
fldenv
or
lods
movsb
mov
mov
inc
fsubl
cli
inc
cs
and
in
inc
lods
lcall
in
jbe
out
xor
in
and
mov
fadds
ja
lret
sbb
and
std
sbb
sti
je
mov
test
in
dec
push
inc
movsl
mov
mov
decl
cmpb
cmp
mov
jns
shll
mov
add
add
add
fcomps
repnz
and
adc
mov
fsubrl
hlt
cmp
jge
mov
arpl
out
mov
sbb
dec
loopne
mov
and
inc
jb
push
sbb
jle
sub
pusha
andb
mov
sar
mov
int3
sbb
hlt
fcoms
ret
jno
popa
jbe
mov
sub
loope
imul
pop
imul
xchg
inc
push
push
fsubr
cmp
fcoml
pop
das
mov
or
inc
in
inc
dec
bound
jo
cmp
pop
dec
sbb
movsb
out
aad
adc
int3
lcall
dec
fs
dec
push
fidivrs
jnp
mov
dec
lea
push
jo
mov
stc
orl
sbb
or
into
insb
int
subl
fs
and
mov
push
adc
les
dec
clc
xor
add
int
fstp
iret
push
cmpsb
fadd
dec
and
cmp
add
add
add
clc
add
outsl
inc
mov
and
mov
xchg
pushl
mov
loop
cmpsb
aas
lock
mov
ret
dec
aaa
dec
cmp
loopne
test
jg,pt
xor
add
pop
adc
out
lret
sbb
clc
jno
mov
sbb
outsl
daa
pop
xchg
mov
cmp
mov
lods
dec
or
cmpsl
pop
std
push
jmp
cltd
add
ss
divb
lahf
into
js
ljmp
in
or
cltd
sbb
mov
insb
xor
adc
and
mov
xor
push
ja
mov
sbb
stos
and
push
in
dec
mov
lods
dec
sub
cmpsb
jo
jecxz
push
sahf
popf
fsts
xchg
lret
mov
mov
lret
sub
or
or
aam
add
add
adc
std
out
ljmp
mov
add
add
add
or
jmp
in
je
test
mov
pusha
push
jbe
mov
and
in
inc
sbb
xor
mov
loopne
xchg
lret
movsl
jg
lret
dec
xor
lret
mov
stos
adc
sub
inc
and
xchg
add
hlt
sbb
adc
test
shll
movsb
ret
pop
mov
add
or
test
adc
mov
test
mov
cmp
aaa
fdivrl
jmp
or
xchg
pushf
mov
xchg
outsl
repnz
out
mov
lret
fs
mov
pusha
repnz
fdivs
testb
push
inc
cltd
mov
jo
xor
jns
xchg
scas
sbb
add
push
aaa
pop
les
ror
pop
fnstenv
cmp
lods
xor
adc
dec
lret
pop
dec
aaa
lods
les
jnp
mov
icebp
popa
inc
or
add
add
xchg
fnstsw
xchg
xorb
cli
int
cli
cmp
movsl
imul
cmp
loop
push
test
neg
add
mov
mov
jb
mov
add
mov
mov
in
nop
and
cmp
ret
pop
or
or
insl
aam
test
daa
aas
push
push
push
into
rorb
cmp
dec
movsl
outsl
test
lea
test
repz
and
adc
cmc
jb
and
arpl
leave
stc
dec
mov
les
addr16
ficomps
pusha
xchg
dec
inc
shll
scas
inc
inc
mov
push
pop
jnp
pop
jo
add
andl
or
xchg
cmpsb
jle
insb
les
dec
add
mov
stos
nop
scas
inc
mov
push
imul
fnstenv
add
xchg
push
popa
data16
inc
cld
lds
sbb
pop
mov
jl
ror
inc
or
test
fcomps
add
or
fsubs
add
add
add
repnz
pop
stos
nop
clc
lods
mov
push
pop
cs
sbb
aad
push
lcall
call
dec
fucom
ja
push
aaa
xchg
push
mul
lods
xor
movsb
pop
nop
lods
inc
es
mul
xor
imul
mov
es
lcall
xchg
arpl
iret
es
sti
push
xor
dec
push
shlb
int
sub
jbe
pushf
ja
lahf
xchg
xchg
jns
mov
or
cmp
pop
out
shll
aad
movsl
push
inc
es
push
inc
mov
and
dec
movsl
or
mov
fsubrs
outsl
int
arpl
pop
push
popa
xchg
cwtl
cmpsl
xchg
add
add
cli
inc
fscale
cld
pop
pop
aad
cmp
adc
inc
lods
jnp
cmp
test
and
lds
xor
dec
iret
xchg
nop
in
xchg
in
dec
xor
xchg
ljmp
dec
mov
data16
add
add
jmp
mov
addr16
mov
fdivrs
push
aaa
in
push
fldcw
jnp
inc
leave
shll
test
add
jnp
xor
aas
mov
sub
stos
push
aam
sbb
mov
xlat
mov
xchg
sbb
jmp
fsubrl
add
pusha
out
push
ss
sub
jns
jae
cmp
sahf
sbb
test
iret
push
outsb
orb
jge
cs
add
mov
sbb
out
call
mov
addl
adc
xor
lods
dec
push
inc
mov
sarl
lcall
jne
call
dec
cmp
inc
mov
lock
pop
idiv
out
xchg
jmp
lcall
cli
and
push
inc
test
les
icebp
mov
test
push
xor
mov
pushl
xchg
lea
push
inc
mov
inc
scas
aaa
shlb
cmc
div
testl
xchg
add
add
add
sbb
lods
sbb
mulb
mov
jns
testl
addr16
sub
lahf
movsb
inc
adc
ss
or
out
repnz
mov
es
fs
cmc
lahf
jge
loope
test
adc
push
or
loope
es
mov
jmp
std
pmaxub
mov
cwtl
shufps
sub
push
loop
xor
push
fwait
arpl
xlat
pop
cmp
xor
in
cltd
movsl
or
xchg
cs
outsl
push
test
outsl
mov
stc
enter
jae
je
aaa
jno
fs
and
mov
les
push
jnp
jmp
push
xor
lcall
add
ret
or
aaa
imul
movsl
inc
xor
add
sub
insb
mov
mov
rorb
mov
adc
mov
scas
push
adc
jecxz
bound
add
add
push
sahf
rcr
pop
adcb
dec
dec
imul
add
add
das
cmpsb
stos
xorps
mov
scas
je
pop
push
js
and
out
scas
jne
iret
inc
pop
or
lcall
lcall
aad
or
shrb
leave
aam
xchg
repnz
loope
cmc
push
shll
pop
sti
bound
pop
fucomp
push
dec
xchg
mov
leave
test
test
lcall
test
cmp
or
stc
mov
mov
add
in
jge
dec
repz
fwait
pusha
insl
push
mov
int3
push
mov
sbb
or
addr16
jg
cli
mov
inc
sub
inc
shlb
scas
pop
pop
mov
mov
test
mov
mov
xchg
cmp
cmc
movsl
sti
mov
mov
sbb
dec
lahf
adc
fidivrl
fwait
stos
mov
inc
mov
cmpsl
xchg
xor
cmp
shll
cmpsb
jcxz
fimull
addr16
add
add
add
mov
dec
fcomip
lea
mov
ficomps
lcall
lods
test
mov
pop
stc
in
push
out
cwtl
lret
in
mulb
stos
shll
lret
lahf
je
stos
imul
iret
lret
pop
xor
jno
xor
sbb
mov
mov
cmp
hlt
test
xor
fldt
and
mov
cmp
outsb
sbbl
in
xor
sbb
in
sbb
fisubrl
mov
call
jno
lea
test
pop
mov
je
les
mov
divl
mov
ret
rorb
pop
jmp
outsl
inc
xor
push
adc
psrlq
xchg
or
fsubs
pop
push
lock
icebp
lods
iret
movsl
xor
fs
cltd
clc
jnp
jg
in
cli
enter
lea
aad
xchg
add
add
add
cmpsb
pop
inc
xchg
adc
nop
lret
cmp
imul
adc
jnp
xor
mov
and
mov
adc
pop
jmp
cmp
xor
xchg
mov
push
sbb
mov
in
xchg
add
or
stc
cld
jl
sbb
ret
and
push
arpl
sti
lret
loopne
xor
add
sbb
push
pop
rolb
shld
sub
lahf
out
stos
mov
push
inc
call
adc
fwait
jp
mov
cmp
jno
cmp
mov
mov
cwtl
call
jl
xchg
pop
out
push
insb
das
adcb
mov
pop
arpl
xchg
push
daa
inc
sti
arpl
clc
repz
imul
push
cmpsl
cli
mov
or
add
in
aam
in
jne
adc
pop
and
push
out
fcmove
adc
sbb
cs
add
ljmp
cld
gs
mov
addr16
add
add
add
imul
xor
lods
mov
das
jno
out
aaa
push
aad
sbb
mov
jmp
hlt
lods
dec
mov
push
xlat
pop
xor
scas
out
and
in
mov
mov
xor
push
pop
fisubrs
inc
cmpsb
add
fwait
les
cli
push
imul
or
adc
jo
pop
out
jl
dec
repz
fsubrl
add
push
or
fwait
push
and
push
or
cmp
in
push
sub
pop
xchg
out
gs
cli
jecxz
jp
jmp
aad
call
push
cwtl
lods
mov
imul
fs
incl
mov
cmp
push
mov
mov
jb
mov
sub
fwait
and
push
and
mov
pop
cmpl
jmp
fdivl
mov
push
into
push
and
ja
rol
add
sbb
test
mov
addl
add
jl
sar
std
jle
pop
popf
scas
cmp
add
add
add
sbb
ret
mov
mov
pop
test
arpl
and
ret
adc
lcall
or
mov
pop
scas
inc
retw
cmp
push
pop
mov
popf
adc
out
ja
xchg
adc
xchg
jmp
movsl
lods
mov
pop
pop
fwait
subb
imul
ret
mov
push
xlat
sbb
jg
mov
sti
jecxz
and
mov
rcll
bnd
sbb
xchg
push
inc
sub
jns
fisubrl
mov
daa
dec
sbb
jle
and
sub
and
adc
andb
in
je
mov
inc
sti
and
mov
fiaddl
ljmp
add
xor
sub
push
test
mov
inc
pop
mov
or
jae
mov
das
pop
pop
rcrl
cmp
cmp
in
and
sbb
add
add
add
cmp
add
mov
or
arpl
out
mov
pop
pusha
xor
lcall
jge
mov
pop
push
es
sbb
test
movsl
sbb
loope
and
cltd
inc
mov
mov
je
cltd
insb
mov
sarl
lds
mov
mov
mov
ficoml
inc
fldt
ljmp
ret
lret
fcoml
xor
jnp
call
inc
lret
repnz
jmp
sub
jns
js
jge
lcallw
ret
or
rclb
ss
cltd
icebp
movb
pushf
mov
push
imul
outsl
mov
aam
daa
xor
push
mov
fstpt
ja
mov
fs
inc
in
nop
mov
outsb
xor
inc
test
loop
mov
cmp
add
outsl
sti
mov
mov
sub
add
add
add
les
scas
das
jbe
fmuls
mov
lds
in
mov
fnstsw
mov
inc
mov
jno
pop
pop
hlt
loop
aas
mov
mov
ret
sbb
out
adc
inc
hlt
push
icebp
or
cmpsl
xchg
add
rcll
lcall
pop
xchg
loopne
jle
popf
xchg
cli
jl
xchg
popa
int
in
in
fcoms
mov
push
jno
sub
xchg
loope
xchg
cmpsl
int
scas
repz
cmp
mov
cmpsb
adc
icebp
les
fdivl
pusha
int3
sub
jno
test
fsub
xchg
push
xchg
dec
mov
inc
fwait
xchg
or
push
gs
cwtl
push
jmp
jl
cmpsb
hlt
xor
movsb
mov
inc
adc
insb
stos
sub
push
xchg
xor
mov
pop
popf
mov
add
scas
fldenv
es
xor
mov
push
sub
jp
xchg
adcl
fists
cli
mov
rorb
mov
jle
push
and
xlat
aas
dec
sbb
or
addr16
shll
dec
jmp
rcrl
ficomps
sbb
mov
iret
outsb
sahf
es
lods
fldenv
push
rorb
lcall
mov
push
jl
xor
xchg
test
fcoms
inc
mov
xchg
xchg
les
push
xlat
leave
adc
or
add
mov
add
fwait
sbb
stc
push
pop
xor
mov
in
pop
sub
mov
push
movsb
cld
or
ficoml
or
sub
push
xor
mov
jl
jno
add
xchg
popa
iret
mov
aam
arpl
pop
pushf
and
add
jb
mov
pop
fstl
outsl
mov
daa
or
adc
sbb
pop
outsl
bnd
push
dec
fsubrp
leave
scas
sub
repz
aaa
ficompl
sahf
ret
sub
es
imul
outsl
vmwrite
aad
fwait
add
add
add
pop
pop
repnz
pop
dec
xor
sbb
adcl
cwtl
loope
xor
jp
pop
or
inc
shrl
sub
bound
xor
in
and
adc
cmp
clc
sahf
mov
sbb
rcr
cmpsl
ljmp
pop
sbb
outsl
int
insl
push
loopne
mov
mov
insl
pop
insb
push
xchg
popf
insl
ja
or
push
ds
sahf
fidivrl
and
adc
mov
mov
cwtl
popa
pop
shll
adc
in
outsl
clc
scas
out
out
icebp
ljmp
mov
aas
adc
aad
std
xchg
dec
outsl
adc
outsl
xchg
ds
outsb
jnp
lret
jecxz
int3
pop
ret
ds
cmp
inc
stc
daa
addr16
add
pop
push
rol
sub
jbe
fs
pop
xchg
fucom
into
in
cs
or
adc
sbbl
popl
sub
add
add
adc
je
push
adc
xor
or
sbb
mov
inc
out
xlat
sbb
mov
in
insl
mov
pop
aad
add
inc
cmp
sbb
aam
add
dec
out
pop
dec
mov
xchg
xchg
mov
dec
push
outsl
ljmp
mov
push
out
sbb
leave
add
shlb
ss
xchg
jmp
and
push
sbb
daa
xchg
dec
data16
mov
sbb
jae
daa
call
sar
xor
cmpsb
mov
les
push
scas
cmp
rol
dec
les
imul
out
xchg
jae
sahf
cld
leave
int3
xchg
jle
jp
pop
fmull
rol
mov
movsl
lea
outsb
push
mov
push
cmc
xor
int3
popa
das
mov
xor
xchg
ja
pop
popf
mov
adc
cwtl
xor
imul
mov
imul
movsb
and
loop
popf
add
add
add
adc
lret
add
sbb
mov
pop
jnp
jae
xchg
inc
sbb
repnz
xor
jle
cld
in
fwait
mov
daa
lods
dec
pop
jne
mov
fsubl
sbb
jmp
stc
sbb
and
jmp
dec
imull
rorb
sbb
aad
cli
out
mov
or
test
lds
jne
pop
sbb
and
cwtl
xor
bound
aam
inc
lock
addr16
gs
xchg
cmc
or
pop
dec
mov
dec
dec
nop
add
push
icebp
push
cmpsb
pop
adcl
sbb
sbb
sti
ret
adc
test
xor
lock
shlb
mov
xor
fistps
clc
add
imul
inc
jge
add
mov
add
and
test
jge
in
sbb
mov
add
mov
sub
lahf
mov
sahf
add
add
add
dec
jmp
add
xor
and
int3
test
pushf
sbb
mov
test
lret
jl
and
sbb
cltd
leave
movsb
push
sub
addr16
cld
pop
push
cld
and
lds
hlt
arpl
popf
inc
fisubrs
mov
std
shl
in
rorl
xor
adc
mov
ljmp
inc
jge
jne
xchg
sti
cmp
adc
lcall
and
or
lahf
mov
push
test
mov
int3
outsb
cltd
mov
out
sub
aas
push
out
lods
mov
mov
inc
out
pop
cmp
pushw
xchg
pop
adc
rclb
test
xor
rclb
xchg
mov
mov
jno
call
movsb
in
fdivrl
mov
cwtl
xchg
mov
out
cltd
jmp
int3
cmc
fstpt
adc
add
xor
cmp
cltd
sub
out
inc
sub
or
push
test
addr16
add
add
add
insb
cmp
sti
cmp
rcrl
clc
repz
adc
aaa
xchg
test
in
push
sahf
arpl
bound
xchg
and
aaa
fdivl
xorb
mov
popa
or
xor
sahf
pop
loope
cmp
nop
dec
lcall
push
jo
call
push
mov
fnstenv
sub
std
inc
das
sbb
lret
pushf
push
cltd
rclb
jo
jb
aas
mov
jb
movsl
cmovns
pop
insb
pop
mov
mov
ljmp
xorb
arpl
adc
addr16
mov
inc
adc
dec
stc
test
imul
fs
mov
mov
lods
mov
out
sti
jns
mov
aad
jg
mov
cmp
adc
fbstp
and
jecxz
jl
movsl
lock
add
add
pusha
test
mov
cld
mov
addr16
add
add
iret
xor
and
icebp
adc
cmpsl
push
mov
into
mov
sub
cltd
je
clc
xor
sbb
les
fwait
add
jbe
out
cltd
mov
shrb
jne
xchg
mov
popf
std
lcall
in
xor
jns
xchg
mov
adcb
jge
dec
mov
sbb
jnp
jnp
sub
add
mov
jmp
push
lret
daa
xchg
into
jg
hlt
cld
cmpsb
lahf
cmc
sahf
fsubrs
jecxz
loop
insb
xchg
cmpsl
jecxz
js
cmpsl
mov
cmp
fld
js
jnp
imul
aas
out
and
xor
iret
xor
xor
cmpsb
popa
xor
cmp
cmc
xchg
mov
lods
pushf
push
jno
and
xor
xor
xor
cmp
push
jecxz
test
enter
add
add
mov
repz
repz
sarb
xchg
addr16
add
add
dec
cli
popa
sub
or
repz
mov
push
push
adc
sbbl
dec
or
test
jl
shll
dec
push
jns
inc
adc
and
mov
push
movsb
jmp
ret
insl
ret
pop
fs
push
jnp
int3
xchg
icebp
out
repz
sub
fimuls
repnz
lahf
lahf
call
inc
stos
sbb
daa
and
and
push
push
fistl
xor
lcall
sbb
repz
cmp
pop
sarl
or
aas
sub
lahf
sub
pop
jge
xor
sub
loop
repnz
pop
adc
lret
in
mov
xchg
fistpl
fimuls
sbb
nop
out
jge
pop
test
cs
sbb
aaa
jle
jle
lcall
xchg
jg
add
dec
inc
pop
leave
mov
cld
cmpb
movsb
mov
mov
inc
inc
add
mov
add
xor
or
arpl
test
loop
adc
mov
xchg
cwtl
cmpsb
jge
pop
dec
inc
xchg
mov
dec
push
movb
inc
popa
aam
mov
pop
sub
jne
xor
mov
icebp
mov
loope
iret
jp
jl
icebp
out
enter
scas
add
iret
sbb
mov
or
push
push
fmuls
mov
hlt
inc
gs
sbb
lock
jno
das
sbbl
xor
lret
cmp
in
jmp
in
aad
iret
clc
mov
fdivrs
fstl
mov
lods
shll
cmc
shrb
call
rcl
fistpll
xchg
rcr
xor
and
and
cli
out
mov
stos
push
loop
int
pop
pop
mov
in
rcrl
sub
fwait
outsl
jp
int3
pop
or
jge
negl
add
add
std
inc
mov
push
addr16
add
add
pop
leave
push
push
mov
sub
push
jl
jge
sub
and
mov
hlt
inc
cmpsl
roll
imulb
inc
popf
add
adc
mov
loopne
xchg
mov
dec
dec
sub
push
mov
in
mov
pop
pop
ljmp
push
fwait
int
stos
mov
xlat
fimuls
enter
fcompl
in
into
xor
aaa
xor
xchg
push
outsl
loop
push
shl
or
or
mov
and
sub
pusha
xchg
mov
xchg
fdivrs
fdivrs
or
nop
into
inc
icebp
adc
or
dec
jbe
cmpsl
movsl
xor
lret
orb
arpl
lcall
int
int3
dec
or
xchg
adc
add
insb
movb
or
dec
and
jge
sbb
les
mov
xchg
test
or
add
add
inc
fdivl
push
dec
mov
movsb
add
add
add
inc
inc
push
lock
push
icebp
dec
push
int3
push
xor
shlb
mov
mov
mov
push
int
cwtl
mov
aad
adc
enter
out
mov
and
sub
loop
inc
sahf
cmp
mov
push
jns
addr16
inc
sub
mov
fildl
sbb
pop
mov
dec
repnz
jns
lret
lcall
nop
adc
inc
mov
or
into
add
push
fdivrs
and
mov
js
test
jns
leave
icebp
rcl
cmp
lock
add
sub
jge
inc
or
xor
iret
pop
stos
mov
ficoms
and
loope
test
enter
aas
ss
xor
push
jne
in
and
cli
xchg
pop
xchg
loop
mov
xchg
movsl
je
out
inc
js
jecxz
je
pop
adc
mov
sbb
movsl
add
add
add
add
xchg
sub
aam
or
or
lret
mov
pop
mov
pusha
popa
into
jae
and
mov
xchg
out
sarb
loopne
push
adc
shll
xchg
ret
pop
rcrb
sbb
std
cmc
and
scas
adc
xchg
nop
cmp
dec
ljmp
fs
lea
in
add
ss
imul
push
sti
int
push
mov
pushf
pop
cmpsb
jle
cmpsb
dec
dec
es
lahf
sahf
cmp
add
mov
arpl
addb
jle
inc
jnp
push
add
pop
sbb
jp
nop
out
mov
lods
pushf
enter
jo
testl
xlat
mov
insl
mov
jle
imul
lock
inc
xor
sbb
mov
and
xchg
adc
lods
pop
ret
ljmp
pop
jge
cmpsb
push
imul
je
add
add
stos
hlt
jmp
cmp
jbe
dec
aas
lahf
daa
cmpsb
add
add
add
sub
ds
mov
mov
dec
sbb
sub
push
aaa
outsb
repnz
mov
lret
xor
add
sbb
out
push
imul
bound
bound
ret
sub
and
ret
push
xor
mov
mov
mov
in
mulb
pop
inc
mov
outsb
inc
cmp
out
bound
push
or
pop
xor
test
outsl
outsb
push
mov
add
imul
cmp
jg
fdivrl
jo
movl
mov
ret
popa
adc
add
imul
sub
inc
fsts
pop
add
sbb
punpcklwd
es
js
mov
mov
movsb
insb
inc
mov
test
aam
inc
mov
and
xor
cmc
push
call
dec
stc
mov
out
ret
filds
cli
and
xchg
repnz
and
scas
cmpsl
hlt
pop
add
out
xlat
out
jg
in
xor
fnstcw
or
cmpsl
add
add
add
push
dec
mov
mov
test
pop
cmp
addr16
fimull
mov
lret
popa
jmp
jns
mov
xor
imul
js
xor
ss
jp
dec
mov
mov
test
adc
aad
shl
adc
test
nop
push
mov
jmp
xor
xor
push
inc
jnp
jge
dec
xchg
push
fidivs
sbb
lcall
icebp
mov
xor
pop
push
dec
dec
or
stc
push
movsl
mov
rorb
push
xor
rorl
adc
jne
jmp
adc
lret
and
aad
dec
nop
aaa
sub
xchg
iret
pop
jne
pop
and
sub
mov
jno
jnp
cmp
lea
fcompl
popa
sbb
sbb
mov
mov
sub
scas
sub
lods
imul
ljmp
sahf
jmp
push
test
sbb
pop
fbstp
fldl2e
test
sbb
add
add
add
adc
shll
push
sbb
stc
sub
push
imul
xor
in
mov
sahf
mov
cmp
aad
push
push
orl
jle
push
lods
mov
xchg
adc
ret
mov
pushf
daa
jmp
cmp
adc
xchg
adc
rclb
shl
loopne
jns
sbb
mov
jmp
push
lea
adc
inc
sub
lds
push
pop
je
add
xlat
std
add
daa
rolb
fidivrl
clc
or
mov
cmpsl
or
jae
mul
sub
add
mov
lret
je
xor
in
sub
push
inc
adc
dec
jle
mov
xor
icebp
dec
addb
and
arpl
jge
int3
sbb
dec
cmpsl
jbe
into
mov
and
pop
xchg
dec
pop
push
push
cmc
in
dec
lcall
std
inc
jne
adcl
add
add
add
jnp
mov
insb
push
inc
dec
xchg
sbb
mov
scas
mov
fisttps
pushf
fbstp
dec
add
loop
add
push
and
je
mov
lock
inc
pop
mov
push
sahf
cmc
fstpl
cmp
ror
cltd
arpl
lcall
icebp
das
mov
in
sbb
call
inc
scas
xor
pop
pop
cli
daa
cmp
in
out
lea
adc
hlt
xchg
imul
fwait
sub
cld
out
imul
cmp
sar
outsl
aaa
jmp
cmp
fldt
movsl
and
mov
in
pushf
jno
pushf
cmpsl
rcrb
xchg
inc
mov
jno
add
jmp
clc
rcrl
pop
mov
cmc
fiadds
mov
ja
jge
push
les
add
lcall
lods
xchg
push
mov
cmpsl
dec
push
xlat
lret
jnp
sti
jmp
push
mov
test
iret
nop
stos
add
add
add
xor
enter
fwait
decb
jl
adc
sub
nop
outsb
ja
daa
ja
mull
aam
mov
test
test
inc
aaa
popa
jmp
mov
mov
clc
adc
stos
rclb
int3
das
inc
jmp
pop
outsl
cmp
cmc
clc
std
push
in
cmc
cmpsb
loope
enter
fidivrs
and
scas
outsl
sbb
fists
stc
test
lods
cmpb
jnp
cmp
adc
adc
inc
clc
mov
stc
inc
sub
or
inc
mov
add
loop
jl
dec
or
adc
loopne
pop
jecxz
lods
xor
out
xchg
dec
or
imul
dec
inc
test
inc
mov
enter
pop
fwait
aas
mov
aas
jbe
pop
int
mov
test
mov
mov
add
add
jecxz
lock
insl
push
stos
add
add
add
sub
fldcw
or
or
aaa
nop
int
inc
dec
xchg
or
push
push
dec
in
aad
xor
xor
inc
dec
test
pop
xor
sahf
xchg
xchg
into
bound
jg
inc
xchg
jno
ret
mov
push
mov
aaa
adc
xor
int3
movsl
xlat
nop
dec
cmp
xchg
jp
scas
mov
mov
or
repz
inc
aam
push
insb
mov
sbb
or
inc
ret
lret
cmp
sbb
addr16
pop
push
cmpsb
inc
test
push
sub
inc
or
aad
and
aad
jge
out
icebp
popf
int
xchg
push
popa
aad
mov
pop
mov
or
es
pusha
xchg
jp
xchg
push
cltd
sbb
mov
into
jb
sub
xlat
test
into
in
punpckhdq
loopne
cmp
jbe
and
pushf
push
movsb
jae
movsb
paddb
jg
push
fldl2e
lea
adc
add
add
cld
mov
leave
orl
add
add
add
push
test
mov
xchg
sub
lods
shl
xchg
xlat
fstpl
adc
sub
mov
imul
test
inc
nop
sub
inc
mov
fcmovnb
fdivs
cmpsb
xchg
push
adc
add
xor
push
mov
int
and
dec
pop
loop
out
push
movsl
adc
mov
xchg
mov
stos
pop
cmp
cmp
push
xor
in
mov
addb
pop
cmp
push
shr
jp
popf
xor
adc
cltd
cli
jae
push
mov
lret
pop
bound
into
adc
bound
cld
xor
inc
test
sub
inc
adc
sbb
jns
sub
dec
or
jmp
ss
test
notb
sbb
mov
jge
lahf
inc
mov
add
enter
add
out
cmc
mov
xchg
pusha
push
mov
lods
add
add
add
cmp
sbb
aaa
push
xor
movsb
dec
mov
lds
add
jge
dec
cmp
jl
sbb
lods
add
ficomps
fcomps
lret
fcmovbe
mov
arpl
push
sbb
xchg
mov
jmp
push
movsb
movsl
mov
and
sbb
mov
jg
jl
dec
stc
pop
movsb
fadds
mov
add
mov
and
xchg
pop
lcall
add
mov
leave
or
inc
mov
jnp
mov
pinsrw
mov
sub
and
mov
jo
data16
fistpl
je
adc
leave
in
jnp
loopne
sarb
fmuls
mov
or
jae
inc
add
dec
jnp
mov
imul
movb
stos
sbb
orl
cmpsl
aam
mov
hlt
dec
fldl
fucomip
std
dec
std
pop
lcall
xchg
pop
push
mov
scas
add
add
add
mov
mov
sbb
inc
fidivrs
sbb
sub
test
insl
enter
add
test
insb
aas
pop
nop
inc
add
sub
pop
fdivrl
enter
jae
iret
inc
arpl
xchg
dec
neg
aad
lret
daa
notb
adc
rcr
adc
xchg
cli
mov
inc
push
sub
mov
push
push
add
pop
adc
add
orl
std
ficoml
mov
sbb
nop
pop
and
lods
jp
xchg
fildll
sbb
ljmp
mov
test
imul
adc
in
xlat
sbb
stos
lods
mov
movsl
push
adc
push
and
xchg
jno
mov
outsb
rolb
add
test
push
cmpsb
add
mov
aas
inc
mov
popa
jne
sti
outsb
pop
mov
add
add
fidivs
loop
ljmp
mov
in
push
scas
add
add
add
out
sub
fsubrs
xor
or
out
xchg
das
pop
fistps
sub
ret
adc
out
cmpsb
cltd
or
mov
sub
adc
pusha
push
dec
pop
xchg
daa
addb
stc
sbbb
cld
pop
leave
aam
mov
js
sti
xchg
dec
leave
cmp
pop
imul
mov
mov
iret
aas
mov
imul
out
lock
inc
mov
mov
repnz
es
call
mov
cmpsb
dec
dec
pop
icebp
sub
aam
sbbb
out
clc
aaa
jbe
dec
insb
andb
cmpxchg
nop
inc
shlb
rorl
sub
test
or
cmp
test
mov
sub
pop
mov
ja
lds
dec
xor
add
stc
mov
mov
mov
mov
sub
jg
ljmp
faddl
add
add
xchg
jg
jmp
std
mov
imull
addr16
add
add
add
cltd
les
insb
xchg
or
mov
adc
sbb
mov
pop
xchg
cmpsb
lods
out
pop
mov
xchg
jnp
out
shrl
andb
dec
push
or
dec
xchg
mov
test
xchg
xor
roll
push
dec
test
icebp
rolb
mov
pop
mov
mov
add
mov
xchg
mulb
mov
inc
dec
push
pop
jg
pop
iret
ret
xchg
out
jp
sbb
enter
rorb
lret
jb
movsl
sbb
test
cltd
push
outsl
and
idivl
movsl
add
out
mov
jmp
push
pop
mov
icebp
into
add
mov
pusha
shl
inc
sub
ret
xchg
mov
sub
inc
movsl
pusha
scas
xchg
mov
jg
mov
or
rcrb
loop
cwtl
jecxz
push
loopne
push
divb
inc
mov
gs
add
add
loop
stc
out
mov
pop
bsf
xor
out
mov
ficoms
sti
js
jp
jno
adc
out
rcrb
and
inc
push
in
push
test
rorl
in
pop
jp
push
scas
sub
popf
into
push
adc
test
decl
sar
mov
out
imul
mov
mov
push
loope
cwtl
fisubrl
sub
aam
scas
cmp
inc
or
stc
jecxz
jle
rcr
into
jno
xor
adc
inc
sarl
lret
sbb
xchg
dec
push
jne
adc
ret
ud0
hlt
jg
enter
cmp
ljmp
clc
push
sub
into
repnz
es
lds
jge
out
pop
cmc
or
loop
mov
jecxz
sub
cmp
cli
ret
push
xchg
lods
add
les
ret
popa
decl
andb
push
pop
xor
cmp
inc
call
lahf
addr16
add
add
add
stos
pop
ja
jmp
repz
jno
inc
enter
subb
push
xchg
bound
fwait
aam
adc
pand
mov
iret
adc
iret
xor
xor
mov
add
cwtl
shll
pop
push
cs
loop
and
xor
insl
adc
mov
cmpl
fs
or
aad
xchg
mov
andl
insb
test
clc
push
cmp
sub
or
adc
in
cmp
and
fsub
aam
pop
int
loop
daa
in
mov
adc
pop
iret
test
call
ss
add
or
jle
in
jmp
addr16
adc
shlb
or
lods
lahf
inc
dec
xchg
cld
sahf
ds
xchg
mov
xchg
mov
ret
pusha
cmp
mov
fucomip
mov
inc
lods
scas
xchg
fdivp
adc
add
add
jp
les
mov
arpl
insb
je
mov
add
add
add
arpl
pop
ljmp
repz
scas
jg
loop
popf
insl
mov
pop
enter
les
and
mov
jno
cmpb
add
mov
cmpsb
inc
and
pop
bound
ret
faddl
pop
or
stos
mov
dec
scas
rcrb
or
inc
js
enter
fstl
test
popf
jl
jno
inc
pop
push
mov
fidivs
dec
mov
adc
rcrb
inc
in
mov
pusha
nop
inc
outsl
mov
xchg
mov
add
out
cmp
daa
mov
shlb
pop
aad
add
sbb
and
and
xchg
inc
out
push
js
ret
pop
adc
jne
pop
xchg
repz
and
push
repnz
ss
in
cltd
xor
inc
xor
sahf
pop
repnz
loope
add
add
clc
pop
stc
out
push
pop
bound
cmp
add
add
add
xchg
inc
pop
ret
dec
rcll
xchg
sub
mov
imul
dec
pop
imul
cs
pop
fsubr
leave
out
adc
dec
mov
test
imul
pop
jle
mov
pop
lcall
lock
jbe
pop
shlb
sbb
sub
cmp
loopne
shlb
push
pop
test
xor
push
sar
xchg
pop
jmp
dec
sub
jo
and
and
rcr
icebp
lods
shrb
jb
std
pop
add
jne
insb
mov
jbe
mov
xchg
movsb
rcl
cld
outsl
clc
sti
jl
mov
push
add
add
idivb
adc
dec
stos
scas
xor
clc
fcomps
xchg
out
pop
jae
loope
stos
mov
push
sti
lahf
out
int3
imul
pop
dec
jecxz
jecxz
mov
and
dec
cmp
cli
int3
xchg
or
cld
push
shrb
pop
lds
cli
lcall
push
addr16
add
add
add
mov
push
hlt
xchg
loopne
add
inc
pop
xor
lret
jns
mov
in
or
test
adc
lea
xor
mov
aad
add
lret
pop
es
rcrl
ret
adc
fnstsw
mov
adc
pop
jns
inc
jmp
ds
cs
jno
fldl
stc
ficoml
js
repz
pop
pop
jecxz
cltd
add
mov
inc
xchg
xor
imul
sahf
sbb
or
inc
adc
negb
adc
adc
pop
lods
adc
lock
jge
mov
adc
sub
lods
stc
popa
mov
lods
xor
call
jmp
jmp
movsb
ljmp
fcmovb
add
cmp
stos
xor
xor
ds
and
mov
adc
push
pop
shl
push
mov
mov
mov
popa
ljmp
add
add
jne
mov
int3
insb
lret
sbb
add
add
and
add
repz
out
pop
cwtl
sub
cmp
clc
rclb
pop
dec
mov
rcr
inc
sub
out
addr16
test
pop
cld
push
data16
jbe
pop
mov
repz
mov
sbb
adc
xchg
out
sbb
mov
inc
pop
pusha
in
adcb
rcll
add
pusha
pop
and
inc
cs
and
add
sbb
aaa
fadd
dec
pop
mov
mov
sub
lcall
xor
push
adc
push
xchg
mov
xchg
fcompl
jge
xchg
cld
lcall
inc
ret
nop
test
xchg
push
movsl
cmp
daa
adc
inc
lret
xlat
clc
daa
mov
stos
daa
jns
mov
lds
sbb
pushf
push
or
leave
xchg
mov
fdivr
loope
add
add
pop
sbbl
fstp
rorl
daa
mov
add
add
ret
or
scas
xlat
call
xchg
cmpsl
and
imul
scas
cmpsb
sbb
sub
pop
in
mov
adcb
nop
test
mov
loop
push
jns
out
inc
out
out
mov
push
mov
jmp
push
dec
inc
and
push
ret
mov
sbbl
adcl
idivb
stc
data16
loop
push
in
xchg
push
jnp
daa
adc
imul
mov
mov
adc
sub
cli
add
add
push
std
sub
out
cli
mov
movsl
lcall
inc
jg
lahf
xlat
out
ja
pop
or
je
data16
sbb
sub
sarb
imul
push
int3
or
inc
sub
xchg
mov
gs
inc
push
mov
mov
mov
jo
sbb
mulb
dec
aas
mov
test
jne
pop
loopne
lods
flds
add
add
in
mov
jecxz
out
mov
fadds
addr16
add
enter
pop
pop
push
lock
sub
and
push
mov
push
dec
xor
jae
shlb
inc
popa
add
push
cmp
cmp
xchg
loope
sbb
inc
add
xchg
sbb
std
sbb
icebp
push
das
sbb
xchg
mov
dec
pop
pop
fsubrl
pop
pop
jbe
adc
sub
dec
pop
inc
mov
rolb
dec
jge
jp
mov
sbb
mov
inc
pop
clc
sbb
adc
test
sbb
push
inc
mov
jge
add
roll
pop
mov
or
ss
cltd
cmp
adc
push
and
mov
mov
jle
iret
jp
jmp
cli
test
fcompl
call
movsl
add
fs
shl
lods
mov
jb
sub
jbe
xor
int3
adc
sub
or
xchg
adc
fisubrs
and
inc
push
xchg
test
jg
into
lret
orl
add
add
pushf
js
outsl
fsubp
push
cs
sub
push
leave
addr16
pop
sbb
lcall
mov
xorl
repnz
fnstcw
leave
jl
jl
or
jecxz
rcrl
mov
inc
ja
jmp
jmp
xchg
hlt
jne
adc
push
hlt
or
test
in
push
mov
add
mov
cmc
test
scas
push
mov
inc
ljmp
fnclex
mov
sub
pop
pop
jge
xchg
cmp
shrb
jnp
aaa
lods
jecxz
cmpsl
or
loopne
pusha
js
divl
push
cli
and
pop
adc
mov
inc
iret
jecxz
mov
dec
mov
clc
xchg
js
mov
scas
cmp
arpl
lock
pop
inc
or
cmpsl
jecxz
inc
pop
lea
cmp
imul
push
push
xlat
lock
in
lcall
jae
dec
mov
mov
addr16
add
stos
or
sti
mull
sarl
fs
sbb
adc
ds
or
push
add
aaa
divb
sub
fistpl
inc
sbb
jle
pop
fnsave
lods
push
iret
push
xchg
loope
movsb
inc
mov
movsl
add
and
cmp
call
test
repnz
gs
aaa
cmp
mov
adcl
or
cmpsb
mov
adc
loopne
push
std
adc
mov
in
adc
sbb
add
xchg
lods
rcll
inc
pop
testb
leave
test
inc
jmp
push
add
in
jg
arpl
dec
cmp
call
fnstcw
sbb
adc
xchg
jmp
xor
sti
cwtl
or
jp
ds
adc
std
cmp
jno
aas
and
cmpsb
hlt
pop
or
and
inc
add
dec
jbe
or
mov
dec
or
jg
dec
arpl
int
mov
add
gs
push
dec
aad
xor
stos
dec
jae
mov
fidivs
mov
rclb
xchg
sbb
mov
movsb
scas
ret
shl
push
mov
ljmp
inc
xchg
mov
pop
aaa
test
cmc
adc
inc
dec
out
dec
sub
xchg
je
dec
pushf
sub
xor
sub
or
sti
test
neg
or
cmpl
cli
and
ret
xor
mov
pop
dec
neg
dec
mov
loope
xchg
mov
repz
xchg
cmp
into
jp
pop
mov
mov
pusha
pop
pop
cmp
cmp
xor
fsubrl
lods
loop
lcall
lock
inc
rclb
dec
cmp
insb
in
fidivrl
mov
enterw
lret
test
lods
mov
pusha
dec
xchg
cmp
add
add
out
idiv
outsl
mov
xchg
sbb
addr16
add
scas
dec
pop
cmp
bound
push
xor
cld
dec
or
push
mov
and
mov
mov
imul
mov
aam
nop
pop
cmp
sub
cs
xchg
and
popf
push
jp
iret
push
add
cmp
int
push
stos
scas
sbb
inc
std
pop
in
sbb
out
imul
pushl
shlb
sbb
lret
out
cmp
enter
data16
int
lds
and
mov
hlt
mov
jbe
pop
sbb
and
clc
ljmp
mov
cmp
lret
lea
xchg
push
pop
cmpsl
mov
out
sbb
subb
jno
mov
push
je
sti
pusha
ljmp
pop
cmp
add
fstpl
scas
push
sub
stos
mov
dec
pop
loope
lea
mov
mov
sahf
popa
mov
in
cwtl
mov
xor
mov
pop
gs
fcomps
mov
add
rcll
and
jns
mov
add
mov
aas
and
popf
sarb
xchg
addr16
sbb
adc
sub
inc
out
sub
outsl
push
mov
jns
test
mov
xchg
cmpsb
stos
int
jae
pop
push
rcr
test
aam
pop
cltd
push
xor
sbb
sub
dec
decb
gs
pop
mov
repz
xor
cs
cwtl
xchg
xor
lods
out
or
cmp
es
divb
xchg
sub
fwait
enter
popa
pop
mov
mov
repnz
dec
sbb
push
rcrl
xor
xor
cmp
cmp
call
or
lods
call
xchg
push
add
jmp
rcl
add
pop
mov
jge
cltd
push
xchg
inc
ror
in
in
repnz
and
push
push
call
mov
mov
add
add
mov
jle
mov
test
xchg
lock
xlat
xchg
test
xchg
mov
repz
jg
mov
jecxz
sqrtps
sub
popf
jg
dec
frstor
out
out
outsb
and
and
add
std
mov
jae
push
cmpsb
and
sub
pop
cmp
in
js
xor
xor
dec
cmpsl
push
fbld
scas
push
fidivrl
loop
xlat
fwait
pop
mov
mov
jg
mov
mov
andl
inc
outsl
mov
lods
andl
test
aad
into
sbb
pop
jnp
dec
fadds
jns
jg
btr
jmp
into
add
ds
xchg
pop
xor
cmpsl
inc
sbb
mov
outsb
mov
push
lret
loopne
repz
cwtl
add
add
into
std
sti
leave
sti
iret
jmp
fldcw
adc
add
add
add
push
outsb
push
xor
imul
jbe
repnz
fldt
aas
jmp
leave
in
jecxz
mov
in
cmp
pop
ja
loop
mov
xlat
sbb
sub
mov
imul
fwait
mov
mov
sti
shlb
push
hlt
jnp
jnp
jl
loope
dec
mov
popa
or
mov
outsl
cli
pop
mov
ret
mov
int
adc
cmpsl
inc
add
scas
and
outsl
movsl
dec
cmp
cmp
cmp
sub
add
xchg
add
std
fwait
xor
inc
hlt
fdivrl
mov
mov
adc
aas
jns
sbb
bound
jge
xor
or
cmp
lds
dec
test
cmc
mov
xor
ja
inc
push
sub
pop
push
lahf
loope
in
fdivr
dec
jno
mov
mov
mov
xor
mov
add
add
add
mov
pop
push
and
dec
sar
in
aaa
mov
pushf
lods
into
out
ror
fadds
in
test
sbb
out
mov
push
jns
cld
fisubrl
fnsave
cltd
xchg
sbb
push
push
xchg
shlb
xchg
hlt
mov
insb
adc
stos
pop
pop
mov
mov
xor
shll
sub
mov
cwtl
pusha
mov
popa
test
inc
and
mov
and
int3
adc
cltd
clc
jecxz
xchg
test
mov
xor
pop
mov
call
jno
jae
lret
addr16
inc
out
cs
and
sbb
xor
mov
xchg
sub
push
leave
ja
fisubl
pop
pop
leave
cmpsl
pushf
and
sti
mov
je
add
sub
mov
push
sbb
aas
popf
stc
imull
ror
mov
aas
jp
cmc
jb
addl
add
add
jg
mov
sahf
loop
lea
or
add
add
add
dec
sub
jge
mov
mov
stos
loop
lea
inc
mov
rcrl
shl
mov
or
mov
fldcw
je
add
sbb
std
in
jmp
rorb
inc
lea
sbb
pusha
adcb
mov
inc
jge
testl
dec
les
jmp
jae
push
aad
jecxz
enter
jbe
mov
sbb
and
add
adc
sbb
mov
movsl
cs
loop
in
xor
sbb
or
test
imul
jne
loope
fdivr
mov
aas
pop
pop
sahf
out
lock
jo
int
pop
xor
mov
pop
in
les
outsl
outsl
sbb
jns
cltd
mov
les
ja
sub
xchg
rol
insl
push
or
sub
push
sub
out
cmc
xor
push
cld
pushl
cld
sbb
addr16
add
add
shrb
mov
pop
mov
sub
push
xor
xchg
push
xlat
jecxz
iret
xchg
ds
movd
xchg
pop
lret
cmpsb
insl
add
cltd
out
mov
addl
jl
xor
sbb
mov
xchg
xor
std
sbb
sbb
dec
pop
popa
loope
icebp
movsb
and
scas
les
loop
or
jb
inc
dec
outsl
sarl
stos
test
dec
mov
jp,pt
in
mov
sbb
sub
enter
sub
addr16
sahf
clc
test
dec
repz
or
xchg
adc
xchg
jo
or
cmp
arpl
mov
xchg
dec
lret
test
adc
lds
jl
mov
sarb
into
dec
push
adc
push
mov
stc
mov
test
sbb
out
lea
in
std
pushf
repz
add
ss
adc
and
lock
xchg
mov
jno
add
add
pushf
shrb
lcall
or
in
addr16
add
add
add
push
xor
into
std
mov
sbb
dec
cwtl
dec
adc
pusha
outsl
xchg
stc
cwtl
xor
fsts
enter
xor
repnz
mov
fbld
testl
jae
loop
xchg
call
add
ret
adc
dec
cmp
lods
mov
lods
daa
xchg
cmp
xor
or
adc
shll
add
scas
inc
push
push
cld
dec
or
cmp
movsb
loop
clc
mov
add
fwait
xchg
test
fistpll
jno
dec
inc
fwait
mov
mov
mov
in
mov
cmp
push
or
lret
jl
mov
mov
decl
sbb
popa
lret
sahf
fimuls
adc
or
add
jmp
or
adc
push
or
jbe
scas
sub
loopne
test
lcall
shll
aad
push
sub
scas
mov
aas
scas
fsts
test
in
les
add
add
add
rclb
xchg
xchg
jne
insl
inc
ja
ss
stos
leave
cmp
lahf
pop
popf
mov
fstps
sahf
call
sahf
arpl
cld
inc
das
repz
and
or
cmpsl
int
mov
fildl
shl
fstpt
je
xchg
xor
and
mov
shl
pop
sti
adc
insb
jmp
mov
test
ret
cmp
add
xchg
or
fsts
push
in
mov
push
push
lret
cmpsb
call
cmp
cmc
cmp
pop
divl
mov
push
push
test
xlat
push
push
jle
int
ficoml
jecxz
shrl
loope
repnz
dec
test
adc
or
dec
or
jne
jo
and
jne
xchg
jp
mov
decl
mov
sbb
jle
xchg
mov
pop
dec
jg
jne
jne
jg
loop
mov
in
lds
add
add
add
adc
xchg
xor
pop
fistps
jle
mov
out
aaa
subl
xchg
int3
sub
aaa
jmp
jo
or
andl
xchg
andl
outsb
pushf
pop
insl
stc
ret
rorl
outsb
ret
mov
sub
xchg
ret
fildl
sub
fs
cmp
sub
pop
out
jb
out
mov
ja
and
dec
and
adc
idivl
fmuls
jle
jp
mov
mov
mov
rcrb
sub
mov
or
sti
or
fucomp
jne
mov
and
mov
loopne
sahf
sub
cmp
sbb
arpl
vmwrite
jnp
cli
imul
stos
rcr
inc
cmp
sub
dec
pop
pop
xor
xor
loope
lea
xorb
cmp
fmull
add
jb
jbe
decl
add
add
dec
pop
mov
cmc
mov
ret
add
add
add
cmpsl
or
test
cmp
push
push
int
adc
cmc
jle
or
bound
jo
test
inc
js
mov
adc
sbb
pop
adc
cwtl
dec
cltd
add
push
sbb
lea
adc
xchg
and
test
ss
lods
bound
mov
push
and
xchg
imul
adc
jo
outsb
sub
add
pop
lcall
int3
mov
fs
xchg
js
test
xor
sahf
fs
test
cmpsb
inc
sub
xor
stos
subb
pop
insl
mov
fsts
addr16
jb
leave
pop
push
or
or
and
sub
sub
cmpl
imul
sbb
fildll
loope
add
mov
fadds
ja
imul
je
add
add
outsb
jle
lods
testl
movl
add
dec
iret
jl
inc
ljmp
nop
imul
cmp
cld
div
sbb
repz
and
loopne
stc
ds
sbb
cmp
ficomps
out
out
cltd
cli
sbb
push
xor
loopne
pop
cltd
sub
lock
js
inc
and
dec
cmp
in
or
fidivs
mov
ret
sbb
stc
imul
repz
push
pop
jo
mov
jnp
test
lds
int3
pushf
cmp
mov
je
mov
loop
inc
repz
dec
mov
test
nopl
imul
mov
pop
aad
cmpsl
lret
icebp
cmp
xchg
movsb
fdivs
adc
xchg
mov
jecxz
aaa
std
jmp
rcrl
iret
dec
pop
mov
mov
lea
int3
loopne
popf
sub
fists
out
pop
mov
mov
add
add
mov
xchg
insb
cld
divb
add
add
add
sbb
dec
sbb
push
in
test
mov
mov
mov
mov
test
jmp
fwait
or
cli
movsb
aaa
inc
in
dec
negb
dec
stc
pop
scas
and
lock
out
mov
add
mov
jne
leave
or
fs
test
shl
xchg
pop
aaa
add
lcall
or
imul
fsts
dec
faddl
adc
mov
mov
pusha
push
lock
cmpsl
pop
cltd
in
pop
testl
mov
outsb
jo
insl
xchg
adc
mov
mov
xor
and
fs
xchg
mov
incb
stc
mov
ret
iret
xor
mov
into
adc
insb
lret
aas
lods
sahf
sbb
in
jmp
jp
imul
pop
mov
cmp
loop
lea
fnsave
jnp
adc
rcrb
add
add
out
sti
xlat
in
aad
mov
pop
aad
leave
add
add
add
jmp
repnz
push
cwtl
aas
and
arpl
lret
stos
sub
repz
loopne
xchg
gs
push
cmpxchg
xor
xchg
add
push
movb
in
or
xor
shrb
add
lods
xchg
fisubs
in
add
jecxz
hlt
inc
loope
mov
push
add
xor
sub
cmp
data16
mov
mov
mov
mov
jb
cmpsl
das
push
sub
clc
mov
ds
mov
sbb
ret
mov
mov
push
mov
push
cs
mov
or
hlt
bnd
imul
out
std
out
mov
xor
lods
and
jae
mov
outsb
in
jg
fistpll
aam
push
or
movsb
cmp
push
ds
sub
cmp
jg
and
mov
mov
lret
add
add
and
mov
repnz
sub
popf
fidivrl
xchg
mov
fildl
mov
subb
adc
sub
insb
push
mov
out
sbb
fdivs
jecxz
cmp
jo
add
aam
test
es
jg
lcall
pop
sub
insb
jge
sahf
mov
mov
mov
sbb
jp
testb
movb
pop
cld
pop
pop
cmp
dec
xchg
leave
mov
and
loop,pn
cmpsl
pop
cltd
add
arpl
xchg
repz
ret
cli
and
mov
mov
cmp
jb
and
enter
sbb
push
sub
imul
add
mov
pop
cs
inc
jne
cli
inc
inc
andb
icebp
xor
or
addb
out
call
sarb
mov
mov
xchg
pop
stos
jmp
ds
repz
fcoms
in
adc
add
add
add
xor
fiaddl
es
xchg
dec
adc
adc
mov
dec
hlt
jle
cmc
fstl
and
jmp
rclb
shll
add
mov
test
pop
pop
jmp
cwtl
ds
cmp
inc
xchg
cmpsl
mov
out
dec
stos
inc
jge
pop
xor
push
xchg
mov
cmc
mov
lret
dec
ds
fimuls
cld
jnp,pn
inc
or
test
repz
adc
mov
decb
push
lcall
nop
jno
in
and
fwait
jb
lret
bound
xchg
ja
adc
call
lcall
fs
xor
ljmp
pop
mov
cmp
mov
cld
in
and
aam
cmpsl
js
std
and
pop
sbb
and
and
mov
jne
dec
dec
in
pop
test
pushf
adc
inc
push
mov
mov
mov
mov
mov
int3
add
add
add
xchg
push
sar
xor
or
xchg
cmc
pop
cwtl
jge
xor
push
pop
cmpsl
enter
mov
shl
int3
adc
loop
inc
out
pop
daa
inc
pushf
leave
sbbl
or
sbb
std
mov
xlat
dec
call
jae
mov
sbb
dec
sbb
fadd
jp
popf
cmp
cld
stos
mov
jecxz
or
mov
or
sbb
xor
inc
ucomiss
dec
jbe
outsb
and
jbe
dec
xchg
jno
mov
imul
jg
dec
lahf
mov
std
pop
in
popa
add
mov
mov
jl
or
sub
or
movsb
cmp
stc
xchg
das
fbstp
cltd
test
pop
es
int3
jae
pop
fs
aam
repz
insb
test
out
or
lock
mov
add
add
enter
in
sbb
push
inc
shl
aaa
sub
add
add
add
out
sahf
sbb
dec
rcrb
mov
stos
outsl
daa
xor
push
inc
ljmp
lods
mov
inc
dec
mov
sub
sbb
out
sub
ljmp
jae
add
dec
push
inc
addr16
xlat
mov
dec
sbb
fistpll
dec
psubsb
ret
push
fsts
ss
mov
lds
mov
bound
jp
jmp
imul
pop
call
in
and
add
xchg
ss
xchg
xchg
shlb
cmp
stc
inc
aaa
mov
inc
push
sub
mov
shr
jb
pop
pop
or
imul
dec
cwtl
push
loop
inc
fldenv
inc
into
sub
jle
fbld
lcall
rolb
mov
adc
cmp
mov
andl
push
jne
imul
cmc
call
inc
push
popa
mov
call
add
add
add
popa
mov
mov
mov
das
xor
insl
jnp
xchg
xorl
out
add
ret
cmp
loope
or
pop
std
lcall
iret
lock
push
xlat
jmp
mov
adc
xlat
mov
push
mov
out
push
arpl
jnp
fwait
mov
adc
aas
adc
je
inc
and
je
in
loopne
addr16
inc
movsb
jno
mov
or
jle
popf
xor
les
aad
pusha
adc
mov
fcompl
testb
cs
inc
push
pop
outsl
xchg
pop
jl
enter
insl
fstpl
in
fsts
and
popf
int
lret
inc
lahf
push
sti
shrl
dec
aad
adc
fwait
push
xchg
cmpsb
rol
jp
sbb
std
push
repnz
cld
jbe
and
push
pop
int3
in
fwait
and
bswap
sarb
or
addb
add
add
ja
iret
sub
mov
lock
add
add
add
xor
ss
jp
sub
nop
into
addr16
test
gs
addb
mov
stc
dec
lret
add
ds
aas
scas
mov
jo
fdivrp
add
add
ja
and
push
and
and
ja
jecxz
adc
jno
and
cmp
orb
fdivrs
scas
fldcw
aaa
jbe
int
cmpsb
aad
test
push
rorl
adc
pop
xor
lret
subb
je
lods
pushf
insl
xor
test
cmp
mov
test
mov
pop
ds
out
cmp
cwtl
jmp
adc
lods
sbb
xor
jmp
icebp
std
lahf
scas
cmp
inc
pop
ret
sbb
sub
push
mov
jnp
push
xor
jb
ret
mov
xor
mov
ds
inc
jb
lahf
mov
dec
out
in
push
mov
out
out
out
into
gs
cld
test
adc
rolb
add
add
add
jmp
cmp
lods
and
cmp
enter
call
add
std
cwtl
mov
mov
fists
rcrl
dec
jmp
cmp
cmp
ds
mov
sub
and
mov
lds
out
pop
xchg
fdivrp
and
fcmovnb
repnz
mov
aaa
rcrl
aas
pop
pusha
pop
out
jecxz
gs
sub
xor
xor
inc
les
jmp
add
loope
cmp
lret
dec
cwtl
lock
xor
out
pop
push
out
jmp
test
mov
std
cmp
bound
or
add
mov
ds
data16
popf
dec
adc
adcb
cli
mov
ret
xor
roll
shll
or
cmp
or
push
ss
je
test
mov
pop
mov
adc
and
cmpsb
jae
pop
pop
xlat
leave
flds
add
add
xchg
and
je
out
mov
mov
roll
add
add
add
push
mov
mov
jb
pop
fiaddl
movsb
imul
ja
sar
insb
jg
xlat
cmpsl
dec
adc
xlat
jge
add
mov
jmp
test
mov
mov
mov
cmp
lods
push
movsb
orl
fcmovnbe
pop
cwtl
fwait
jecxz
mov
ss
mov
andb
cwtl
push
sub
adc
rorb
pop
data16
sbb
outsb
cmp
fsubr
push
lock
movsl
adc
mov
pop
clc
data16
pop
aad
inc
movsl
pop
inc
pusha
iret
mov
pop
jo
stos
dec
daa
xchg
jg
lret
inc
shlb
inc
dec
inc
inc
cmp
mov
mov
sti
cltd
movsb
inc
push
xor
test
repnz
dec
mov
and
jno
icebp
xchg
loope
bound
mov
insb
lea
pop
cmp
test
add
daa
repz
and
fs
xor
popf
lods
jb
add
add
dec
daa
dec
das
outsb
imul
push
xchg
sub
push
rolb
add
add
add
or
addr16
rcr
adc
inc
mov
xchg
enter
repz
jnp
sbb
call
sbb
dec
loope
jp
insl
jle
xchg
or
les
inc
repz
xor
mov
sub
xorb
pop
rdpmc
sbb
aad
scas
out
mov
mov
ret
stos
mov
or
xor
xchg
ret
mov
out
pop
xchg
lock
adc
cmp
int3
daa
sub
and
jmp
add
lock
je
jne
mov
cmp
push
lahf
add
inc
adcb
stos
sbb
fidivl
imul
mov
sbb
test
jne
adc
and
int3
jecxz
push
dec
xor
insb
loopne
loop
jl
repnz
fcompl
outsb
jg
cltd
jmp
pop
push
jo
add
add
add
add
add
popf
mov
lahf
ret
or
add
add
add
inc
sub
jmp
add
hlt
sahf
xchg
xor
adc
pusha
imul
lret
pop
in
xor
mov
inc
dec
pop
mov
pop
in
adc
push
dec
mov
sti
inc
scas
add
mov
fimuls
mov
je
pop
ja
aam
push
xchg
imul
icebp
les
jl
mov
jbe
outsb
xor
and
mov
mov
out
notl
and
scas
pushf
mov
adcb
data16
jns
fdivrs
es
mov
mov
sub
movsl
loope
cmc
je
out
lods
cmp
xchg
and
add
cmp
aaa
subb
push
fbstp
leave
or
mov
dec
push
gs
in
pop
int
or
in
lret
mov
ja
xchg
punpckhwd
mov
add
add
neg
outsl
push
xchg
or
add
add
add
pushf
pop
test
scas
es
ret
xchg
ljmp
fisttpll
jb
scas
inc
daa
dec
add
sahf
mov
dec
mov
jno
in
fbstp
xor
xchg
mov
jecxz
sub
push
cmp
cmp
add
jae
jno
xlat
fisubs
or
int3
gs
mov
stc
sbb
and
push
lods
out
mov
cwtl
mov
cwtl
ljmp
push
jbe
mov
dec
add
sub
out
mov
sub
test
ret
fldt
dec
inc
clc
mov
inc
outsb
xor
test
dec
push
sbb
mov
pushf
pop
mov
push
dec
notl
lret
sub
nop
fidivrs
or
iret
int
push
pop
icebp
push
popf
jb
sbb
ret
jo
jecxz
xor
dec
xor
add
sbb
sub
dec
ret
cmp
aad
add
add
add
sbb
jge
or
push
lea
sti
fistps
cmp
push
add
mov
rorl
pop
push
mov
daa
les
or
in
or
sbb
xchg
aaa
inc
xchg
fdivl
xor
xlat
sbb
cmp
sbb
outsl
rcrb
pop
mov
mov
aad
xor
enter
push
xor
mov
sub
stc
wrmsr
push
mov
pop
dec
hlt
jns
out
add
scas
rcl
xchg
push
xchg
or
pop
nop
cmp
or
sbb
lds
sub
rdtsc
push
mov
jo
sarl
xchg
mov
pop
mov
rcrl
lea
xchg
lds
insb
lahf
xchg
sub
lods
leave
adc
arpl
cwtl
sub
cmpsl
push
cmp
sub
sarb
pop
xchg
mov
negb
dec
dec
clc
jl
inc
popa
sbb
out
xor
leave
mov
mov
hlt
int
icebp
test
mov
pushf
adc
ds
jae
in
mov
add
add
add
pop
mov
mov
gs
clc
lds
es
sub
and
stc
mov
pop
bound
loopne
sub
xchg
push
xchg
cmp
bound
adc
inc
jae
arpl
je
jnp
andl
pop
mov
test
mov
xor
and
orb
xchg
loope
in
push
mov
out
sub
jae
lcall
leave
das
lcall
in
jle
aaa
insb
jnp
cmp
fistl
jge
push
pop
shlb
roll
sub
xchg
inc
sbbl
and
cmp
sub
lahf
dec
push
mov
add
icebp
fwait
jb
lds
dec
pop
subb
jnp
cmp
cld
pusha
xor
cmp
pop
mov
or
push
aaa
push
lret
test
pushf
and
je
xchg
and
idiv
lahf
insl
mov
jmp
add
add
add
aas
subl
sarl
mov
or
cmp
sbb
cmpl
int
mov
xor
fsubs
xchg
int
cwtl
adc
or
pushl
popf
orl
addb
jle
adc
ret
dec
or
and
and
outsb
icebp
aaa
mov
into
das
jno
out
outsb
adc
xlat
fldl
push
jne
mov
inc
push
push
enter
lods
pop
add
mov
adcl
inc
cmp
xor
lret
push
xor
test
imul
xchg
mov
popa
mov
lods
data16
and
scas
sub
push
xchg
addr16
push
jmp
cmc
sub
loopne
pusha
xchg
mov
movsl
push
iret
xor
gs
mov
lret
inc
fildll
or
sub
inc
pushf
xchg
xlat
stos
inc
mov
adc
fdivrp
andb
add
cmp
jg
leave
or
arpl
arpl
fadds
add
add
add
sbb
inc
inc
sub
mov
rorb
jnp
stos
mov
dec
jge
mov
inc
inc
rclb
sbb
dec
push
arpl
imul
in
stos
mov
jne
outsl
inc
arpl
addr16
rolb
add
inc
pop
xchg
stos
xor
repz
popf
add
mov
pop
inc
movsl
inc
xor
pop
add
push
adcb
adc
sbb
mov
cmp
ja
dec
jecxz
repz
gs
and
rol
dec
cmp
inc
jecxz
or
sbb
test
inc
leave
dec
push
add
mov
ficompl
rorb
inc
gs
addr16
mov
outsl
stc
mov
pushf
sahf
stos
lea
icebp
arpl
ficompl
add
into
xor
sub
xchg
jecxz
xchg
hlt
xchg
das
outsb
and
in
push
lea
add
add
int
out
out
imul
nop
xchg
movsb
sbb
out
flds
add
add
add
mov
cld
mull
into
pop
dec
outsl
test
pop
mov
jecxz
mov
cmp
xchg
dec
mov
pop
pop
push
out
ds
mov
and
das
xor
sub
cli
andb
or
cmp
shlb
js
imul
lea
sbb
xlat
pop
scas
cli
mov
adc
movsb
mov
mov
dec
jg,pn
pop
mov
sbb
cmpsb
fs
pop
jo
insl
xchg
sub
xor
mov
arpl
or
roll
inc
add
sbb
mov
dec
mov
sub
into
aaa
scas
mov
je
pop
add
stc
ret
xor
push
dec
add
out
add
aad
ja
mov
out
into
adc
xchg
or
pop
fists
add
add
psubusw
push
in
sub
adc
add
add
add
jmp
lock
xor
flds
dec
inc
fbstp
repnz
push
push
pop
int
lret
ja
out
sbb
pop
jge
inc
cmpsb
jb
mov
xchg
loop
cld
pusha
insb
or
mov
psrld
bound
push
sub
or
add
outsl
dec
fstpt
stc
in
and
xor
stos
push
mov
ficompl
cltd
xchg
mov
push
xchg
push
mov
or
xor
ss
or
pop
fnstsw
lahf
test
xor
mov
filds
dec
cmp
push
pop
popa
fwait
shlb
adc
mov
lods
inc
daa
mov
das
js
clc
popf
mov
lock
push
xchg
bnd
int3
cli
enter
fsubrs
movsb
ja
in
pop
or
mov
xchg
inc
mov
mov
sbb
inc
testb
filds
fwait
gs
and
frstor
and
add
add
sbb
sahf
cmc
fsubrp
jnp
sti
enter
or
add
add
add
aaa
into
and
mov
inc
push
sub
mov
into
nop
out
in
xchg
fadd
xchg
fs
out
mov
fbstp
and
xchg
xchg
xor
ds
leave
xchg
imul
aaa
adc
std
lods
imul
test
sub
adc
cmp
repz
push
xchg
andl
cld
pop
mov
cmp
add
dec
movsb
jnp
mov
repz
xor
cld
jle
loop
imul
xor
push
sub
adc
daa
or
lret
aam
test
scas
into
add
sbb
pop
cli
mov
mov
dec
push
iret
inc
cmpl
out
test
sbb
lret
mov
inc
inc
sub
outsl
es
ds
imul
out
adc
dec
pusha
rclb
out
mov
inc
xchg
sbb
pop
dec
jle
jg
std
fstpt
add
add
add
add
int
inc
jae
lods
mov
mov
inc
pop
inc
sub
jge
fs
mov
es
jno
fcoms
mov
out
out
insb
fistpl
ljmp
inc
pop
mov
cld
int
adc
pop
inc
test
loope
inc
adc
lret
pop
sahf
iret
mov
lods
pop
cli
xor
xor
ja
inc
sub
adcb
sbb
cs
into
xor
loope
out
movsb
imul
and
popa
push
jg
fistl
sub
xchg
popw
stos
es
xchg
test
out
or
stos
movsb
dec
out
call
pop
mov
add
push
outsb
cwtl
or
cmpsb
lret
add
xor
xor
ror
push
pop
sbb
add
sbb
stc
outsl
xchg
sbb
cmpsb
into
sbb
mov
mov
cmp
ljmp
jbe
call
fldl
add
add
add
dec
lahf
pushf
xchg
sub
or
in
xchg
cmp
daa
movsb
scas
divb
addr16
push
les
jns
repz
das
popf
jb
sbb
ret
pop
pop
stos
cmpsl
inc
mov
shrl
cmp
adc
mov
pop
lret
ljmp
and
push
in
push
aad
add
orb
xchg
xorl
fistps
aas
xor
pop
imulb
push
inc
out
rcrb
lcall
mov
xchg
arpl
push
lock
push
adc
hlt
mov
pop
xchg
jg
fs
sub
fwait
outsl
pop
fscale
adc
aas
maxps
add
push
outsb
push
adc
int3
sbb
popf
in
popa
into
std
jns
mov
ret
mov
std
sbb
aaa
push
insb
cld
ret
add
push
xor
es
inc
xchg
ss
adc
std
add
movsb
cwtl
mull
enter
xor
adc
leave
jmp
scas
inc
call
fiadds
add
add
add
cmp
jecxz
or
inc
mov
ret
and
cmpsl
test
test
xor
arpl
insl
sbb
daa
ljmp
mov
jmp
push
jno
inc
sub
lahf
ror
hlt
sbb
data16
xchg
lods
and
sub
adc
add
lret
out
std
fldcw
sbb
and
loop
mov
inc
imul
dec
in
sub
fnsave
addl
and
sbb
adc
add
jmp
jne
mov
jb
insb
mov
insl
mov
mov
aam
xchg
test
ja
cs
pop
mov
fs
dec
dec
jg
ret
cwtl
mov
and
mov
push
ds
jmp
call
mov
fdivr
cmp
push
pop
jp
mov
add
add
push
out
faddl
shlb
add
add
add
rcll
call
mov
mov
nop
and
into
aaa
shrl
cmp
pop
shr
dec
jp
iret
lea
es
mov
cs
adc
lods
mov
mov
jns
mov
adc
mov
aam
or
mov
sbb
dec
xchg
pop
hlt
pop
mov
pop
idivb
arpl
mov
jno
inc
filds
fsts
dec
inc
mov
mov
dec
dec
mov
push
mov
aad
jmp
rdpmc
jecxz
lods
inc
mov
xchg
push
lds
notb
lret
xchg
mov
loopne
push
div
aaa
dec
mov
mov
pop
pop
push
mov
dec
push
mov
data16
in
mov
shrl
xor
and
inc
or
mov
cld
sub
ljmp
mov
jmp
dec
add
pop
mov
into
out
push
incl
roll
add
add
mov
lcall
fisttps
or
loopnew
add
add
add
in
add
mov
and
lds
testl
repz
mov
lcall
mov
dec
loope
push
cltd
fwait
lods
shrb
js
dec
pop
jns
sub
or
sbb
and
ds
jb
xlat
add
test
lea
gs
push
mov
xchg
mov
lcall
jmp
je
ret
leave
sahf
outsb
mov
test
scas
inc
cmp
pop
cwtl
test
dec
push
in
into
adc
dec
mov
jnp
cli
pop
mov
cmpsb
adc
call
and
xchg
add
arpl
pop
xchg
movsl
sub
dec
xchg
icebp
mov
imul
mov
call
int3
cmc
mov
pop
mov
jne
imull
adc
test
repnz
mov
push
outsl
sbb
jns
xchg
xchg
mov
shl
sbb
add
add
add
dec
cltd
inc
sti
shl
xlat
inc
or
mov
mov
pushf
inc
cmpl
xchg
popa
xor
andl
sub
enter
jp
mov
jae
mov
push
jecxz
shl
sarl
inc
inc
pop
jl
int3
inc
mov
pop
inc
jb
mov
subl
sub
mov
jae
jge
xchg
mov
or
xorb
push
cmp
add
jp
sbb
lods
cmp
adc
fisttps
and
push
mov
xlat
jnp
cwtl
sub
jg
fdivl
pop
push
scas
test
mov
aad
lock
ds
inc
mov
inc
lret
das
test
jge
pop
outsl
enter
inc
adcb
mov
jno
pop
mov
icebp
mov
ss
loope
rcrl
add
pop
loopne
ds
jg
sti
xchg
sarb
aas
and
add
add
fadd
fsubp
jnp
or
cld
les
jecxz
loopw
add
add
add
sbb
jno
mov
add
pop
jecxz
cmp
dec
cmpsb
aam
in
insl
in
pop
fiaddl
sub
ss
fldt
mov
movb
xor
or
sub
xor
add
sbb
ja
cmpsb
int3
mov
popf
sub
in
call
test
xchg
sbb
shl
mov
dec
xlat
ds
mov
stos
lret
cmpl
sub
jle
scas
enter
mov
in
cld
cli
cmpsb
mov
inc
xor
xor
sub
pop
or
dec
push
rcl
inc
ljmp
popl
xor
xchg
cmc
cmp
lret
jle
adc
lret
int
popa
sub
mov
mov
jns
fwait
sbb
shrb
push
xchg
fld
rolb
lahf
std
push
push
dec
ja
and
ljmp
add
add
sub
cld
cli
jle
dec
nop
xor
jae
jns
jecxz
add
add
add
subb
mov
dec
adc
inc
fcmovnb
push
sub
je
inc
xchg
adc
add
push
fidivl
pop
insl
mov
sub
xchg
push
pop
scas
mov
sub
movaps
jl
repz
fsubrs
push
push
jbe
call
cltd
loopne
add
jl
xor
and
inc
std
leave
cmp
mov
mul
mov
lret
dec
add
jbe
or
mov
out
adcb
xchg
xor
gs
add
lods
sub
xchg
arpl
xchg
or
xlat
mov
bound
mov
loop
test
jae
out
jbe
mov
jge
and
push
push
pop
mov
ficoms
enter
sub
add
arpl
sub
mov
adc
ss
shr
mov
xor
std
out
jle
leave
sub
lea
pop
jbe
ja
sti
aaa
out
ja
sub
pop
addr16
add
add
add
cwtl
mov
jg
sub
lock
fiadds
outsb
mov
mov
mov
adc
pop
cmp
push
jb
and
loopne
test
inc
loop
in
dec
lcall
imul
xchg
cmpsl
inc
icebp
in
into
movb
sub
cmpsl
sbb
xor
outsl
aad
mov
and
out
or
mov
ja
jbe
jb
xor
ljmp
inc
xchg
out
fmul
sahf
dec
xor
mov
mov
lcall
dec
cmp
cmc
and
jmp
cmpl
xor
mov
pop
out
dec
or
icebp
in
in
pop
mov
sbb
push
addr16
inc
aas
cmp
add
adc
xchg
pop
mov
add
and
test
repnz
cs
inc
stc
decb
aas
repnz
cmpsb
adc
test
ror
cltd
outsl
mov
aaa
pushf
aam
popl
add
add
pop
jnp
movsb
cmp
or
outsb
pushf
inc
and
clc
rcrb
jns
out
dec
scas
inc
arpl
dec
mov
xor
or
test
sbb
repnz
subb
add
pop
rcl
add
movsb
jle
popf
add
mov
ret
mull
icebp
adc
dec
inc
pop
test
cmp
xchg
movsb
push
out
sbb
mov
iret
mov
cmp
xchg
mov
mov
lcall
out
imul
lret
outsl
outsl
pop
inc
negl
mov
shrb
ljmp
int3
sub
push
cmpsl
fbstp
jl
sub
imul
pop
pushf
and
dec
and
dec
jle
push
push
cmpl
or
shll
test
push
mov
jne
push
or
add
add
ja
lcall
mov
test
add
add
add
aad
pop
hlt
stos
cmpb
sub
mov
mov
xchg
clc
xor
mov
xor
mov
or
mov
sub
jg
inc
add
cmc
idiv
scas
mov
gs
inc
aaa
xchg
fdivrp
lds
add
loopne
and
scas
shrl
out
lcall
ds
arpl
loop
xor
adc
cmp
push
sbb
into
mov
or
xor
jmp
call
hlt
mov
imull
or
mov
call
and
mov
xor
sub
gs
push
movsb
mov
pushf
clc
xor
push
sub
and
push
mov
gs
xor
jmp
jp
icebp
movsb
push
loop
xor
mov
xor
mov
push
mov
sbb
and
iret
repz
lock
jg
in
and
ss
stc
addr16
add
add
add
xor
jp
nop
dec
scas
mov
jmp
ret
add
loope
sbb
popf
xor
jo
mov
cwtl
test
mov
or
mov
cmc
mov
mov
xchg
sti
jae
and
add
mov
push
repz
adc
out
rsqrtps
mov
jp
lock
int
pop
jecxz
or
movsb
mov
inc
lret
fiaddl
jbe
mov
es
dec
inc
jmp
add
cmp
daa
mov
sub
fs
bound
aaa
mov
inc
fcmovb
mov
pop
adcb
in
mov
pop
jbe
mov
fdiv
inc
scas
dec
mov
and
and
call
xchg
mov
test
push
ror
outsl
dec
dec
icebp
add
or
jle
mov
arpl
and
fwait
adc
ss
inc
call
fs
ljmp
add
pop
xlat
fistpl
cmpsb
les
addr16
add
xchg
outsl
pop
jae
xchg
pop
xor
stos
mov
adc
ds
push
or
push
insl
pop
mov
out
in
das
or
and
push
cmp
imul
jmp
lcall
movsb
mov
push
and
aad
enter
rcrb
xor
jb
sbb
mov
mov
dec
shlb
xchg
out
mov
and
sbb
push
add
lahf
daa
xlat
xor
push
dec
dec
sub
lret
les
jns
data16
loope
loop
call
sahf
mov
fucomp
lock
mov
nop
stos
and
dec
fldcw
dec
jae
rorl
std
leave
add
test
push
mov
call
mov
xor
push
pushf
xorb
dec
mov
cmp
mov
mov
add
popa
shlb
dec
cmc
add
xchg
sti
shl
jae
jno
add
add
mov
dec
js
stc
mov
dec
int
xchg
pop
adc
addr16
add
pop
push
xlat
lock
or
ret
repz
push
xchg
loop
sub
pop
rorl
dec
ret
xor
ljmp
arpl
sub
and
imul
je
dec
jb
pop
stos
insb
lcall
mov
pop
cli
push
scas
testb
jmp
rolb
pop
out
repnz
je
imul
jbe
daa
mov
ljmp
inc
pop
repz
test
mov
inc
insl
adc
rolb
adc
iret
movsb
lock
lds
xchg
mov
mov
repnz
cmpsb
mov
dec
jmp
out
aam
sbb
push
mov
pop
mov
xor
xor
call
fwait
mov
dec
push
arpl
or
je
mov
pop
sti
inc
push
negb
mov
movsb
pop
stc
rcr
sti
jmp
mov
mov
pop
insb
fildll
fwait
jns
jns
add
cmpsb
addr16
xchg
pop
out
inc
dec
aaa
cmpsb
lods
jb
add
call
arpl
pop
int3
mov
loop
lahf
xor
and
push
dec
lock
int
lcall
mov
xlat
inc
cmp
mov
pusha
gs
fxtract
dec
test
sbb
andb
mov
xchg
lock
mov
test
jno
bnd
inc
nop
jbe
push
pop
dec
sbb
adc
testl
mov
lods
fldl
lods
roll
lods
out
mov
in
xchg
mov
jo
pop
faddl
push
imull
rcrb
mov
add
push
inc
loopne
into
inc
fldcw
es
into
xchg
sbb
subb
loope
add
jbe
jecxz
sbb
add
fisttpll
mov
mov
orl
and
fidivrs
pop
mov
cmp
and
xor
jnp
cwtl
hlt
shlb
shrb
mov
add
cmp
jnp
adc
jne
mov
pop
mov
jmp
add
add
add
popl
jmp
shll
mov
xlat
aaa
cli
enter
mov
sbb
outsb
in
outsl
addl
icebp
insb
shlb
ja
add
mov
jno
inc
jno
add
cli
cmp
adc
mov
aad
sub
xchg
mov
out
mov
lods
cs
pop
out
shlb
mov
dec
lea
adc
lahf
pushf
decb
shl
mov
push
repz
aas
adc
or
add
stos
mov
pop
cmp
pop
jnp
add
add
adc
xchg
arpl
ja
xorl
sahf
cmp
enter
xchg
jnp
scas
sub
mov
push
xor
mov
lret
ja
loop
jns
call
aad
add
cs
and
push
jle
mov
inc
movsb
out
lods
xor
aas
xlat
fistl
das
scas
leave
test
addr16
add
add
add
loop
loopne
jo
push
pop
sarl
mov
bswap
push
pusha
pusha
dec
push
scas
sub
sbb
ljmp
aaa
inc
stc
in
jg
sub
dec
mov
stc
cmp
scas
cmp
jo
sbb
out
inc
sbb
dec
ja
sti
push
lds
xchg
pop
jo
fwait
pop
loopne
lods
call
xchg
mov
jg
dec
aaa
and
inc
adc
enter
sbb
xchg
dec
loope
pop
jge
pusha
add
pop
fistl
push
xchg
pop
shrl
sub
insb
push
mov
mov
inc
mov
dec
out
jp
aas
test
pop
sarb
cmp
or
sbb
inc
shrb
insb
or
decl
test
dec
in
cmp
fcmovbe
dec
mov
sub
lret
adc
fnstsw
mov
sarl
mov
pop
pop
pop
js
leave
fdivrs
cwtl
add
jb
scas
decb
fisttps
xchg
mov
add
add
add
or
xchg
sub
shrb
inc
mov
dec
push
jp
sub
scas
push
aam
lods
or
in
lea
lahf
scas
rcrl
and
subl
xchg
sbb
hlt
mov
xchg
pop
orb
lods
cld
sbb
sbb
mov
mov
mov
push
push
cmpsb
inc
lds
daa
sub
xchg
insb
aaa
cmp
in
cmp
insb
cmp
leave
int
jo
popl
sti
aad
adc
icebp
pop
add
xchg
cld
sub
out
bound
mov
out
mov
mov
out
stos
repnz
fstps
mov
xsaveopt
outsl
pop
cld
enter
sbb
or
xorb
jae
mov
jecxz
shlb
int
push
mov
xchg
xchg
pop
inc
inc
pop
sub
or
pop
pop
insl
cmpsl
and
add
add
xlat
mov
xchg
addb
add
add
add
push
adc
pop
mov
cmp
frstor
gs
js
xchg
xlat
or
das
je
fstl
mov
stc
into
mov
jmp
outsb
inc
cmp
loopne
scas
cmp
xor
jnp
aas
add
in
hlt
inc
ret
pop
xchg
sarl
jg
pop
les
adc
xchg
xchg
stc
dec
int
rorl
pop
dec
inc
cld
sub
sub
mov
lods
dec
jecxz
sbb
out
in
add
push
jno
fldcw
into
lcall
pusha
cli
cli
or
das
sub
and
lods
popf
popa
adc
or
xchg
mov
pop
mov
push
mov
sub
sub
out
and
hlt
fs
mov
sti
pop
repz
dec
loop
cli
out
loope
inc
sbb
adc
push
loope
adc
lods
cmp
lods
aas
mov
ss
pop
addr16
add
add
add
shlb
inc
xchg
pop
push
push
xor
mov
lret
jno
testb
hlt
inc
call
sub
leave
test
pop
xor
or
lcall
push
xor
pop
mov
lods
add
aad
push
jp
lock
mov
mov
int3
fistl
push
fidivrs
icebp
add
adc
lods
cmp
and
cmc
arpl
dec
dec
xchg
test
xchg
mov
add
or
pop
movsb
int
mov
pop
out
inc
cmp
test
add
ffreep
jg
test
lcall
mov
je
jp
repnz
pop
or
pop
inc
mov
dec
lcall
xchg
rcr
mov
popa
leave
stc
addr16
dec
jne
aas
add
cmp
and
jnp
sti
dec
movsl
add
ret
lcall
or
in
cltd
xchg
es
sarl
icebp
shll
into
imul
add
loop
fadd
sti
mov
mov
and
lock
add
add
and
or
or
scas
stc
adc
push
xchg
and
stos
inc
xchg
aaa
cmp
mov
sub
push
add
cs
dec
add
adc
aas
lahf
mov
ja
add
int3
mov
test
cmpsb
mov
arpl
sub
push
adc
xlat
pop
push
and
mov
sar
mov
js
outsb
mov
aas
lahf
cmp
imul
iret
pusha
movsl
and
jmp
jge
outsl
add
in
jae
cmp
adc
pop
iret
stos
mov
cli
pop
xor
and
and
aam
cmp
cwtl
div
mov
out
rcrl
cmp
add
imul
pop
pop
push
pop
push
inc
dec
push
std
movsb
loop
or
jno
loop
cmpl
push
mov
into
ret
add
sbbl
add
push
cmp
adc
neg
jge
xchg
jns
dec
or
and
add
add
add
cmpsl
notb
sar
repz
xchg
push
xchg
and
sbb
and
dec
pop
andb
xor
fs
and
mov
vcvtps2dq
sub
lods
movlps
dec
test
cmpsl
lods
test
aaa
lds
or
and
jbe
sub
aam
aaa
jae
data16
call
pushf
adc
push
sbb
stos
cmp
scas
stos
movsl
dec
lock
xchg
shll
sarl
loope
cltd
les
repnz
ds
sbb
jae
mov
outsb
mov
xor
lcall
mov
mov
xchg
mov
dec
xchg
jg
sub
int
ss
xchg
js
nop
push
xchg
pop
xor
shll
xor
data16
sti
arpl
cmpsb
pop
add
mov
cwtl
xchg
daa
push
fisubl
mov
xchg
cmp
ss
cmp
pop
cmp
outsl
jg
jg
sub
fisubrl
enter
add
add
add
movsb
cmpsl
xchg
or
inc
mov
add
add
mov
stos
cmp
xor
sub
pop
push
cmc
outsl
adc
leave
out
out
arpl
mov
sub
push
mov
cmp
imul
mov
mov
mov
mov
xor
pusha
push
push
mov
mov
sbb
and
pop
xchg
jmp
mov
mov
out
or
pushf
jmp
aas
dec
cmpl
imul
pop
or
adc
mov
pop
lret
ljmp
test
jge
mov
or
icebp
adc
repnz
sub
add
addr16
shll
test
or
aam
adc
movsl
lret
inc
cli
outsb
jbe
loop
fcomp
cmp
std
adcb
nop
fdivrl
fadds
add
insl
cs
loopne
sar
test
lds
mov
cmp
add
add
ja
and
aaa
divl
pop
jae
repz
add
add
lods
cmp
in
mov
hlt
sbb
lea
add
inc
add
and
and
insl
inc
mov
into
jne
stos
xchg
ss
cmp
cmp
pop
mov
sbb
pop
in
pushf
and
or
push
xorl
mov
push
out
hlt
addr16
mov
mov
dec
sub
jbe
pop
push
loope
lahf
push
in
add
sarl
mov
add
and
ret
jle
lea
xchg
mov
out
ja
loope
ja
sub
fmull
fldt
dec
adc
push
fildll
fisttps
pusha
arpl
adc
add
sbb
xchg
stos
jp
dec
and
mov
ffree
push
adc
jno
mov
mov
mov
mov
mov
lcall
push
adc
jns
lret
add
das
push
lsl
fiaddl
add
add
mov
cmc
mov
cmp
dec
leave
addr16
add
add
add
inc
lock
in
aad
jae
jl
in
xor
aas
and
sbb
daa
xor
sbb
imul
pusha
in
lea
test
push
les
mov
add
fsts
mov
sub
lret
pop
push
xlat
scas
bound
nop
sbb
bound
xchg
test
sub
xchg
fildl
mov
sarl
jecxz
dec
fisttps
lds
cwtl
pop
or
mov
mov
add
dec
out
shl
testl
js
xchg
shll
mov
xor
sbb
inc
pop
fbstp
in
adc
xchg
test
movsb
sub
add
ficoml
mov
xchg
sbb
push
push
inc
loope
and
iret
call
lahf
outsl
lret
xor
xor
mov
loope
fwait
cmc
sarl
jle
jne
pusha
popf
pop
sbb
cmc
add
add
add
psllq
js
pop
sbb
dec
dec
add
outsl
aas
jl
fisubrl
mov
cltd
jmp
xchg
and
push
js
andb
inc
inc
add
xchg
cs
lret
nop
loope
cmp
add
popa
sbb
mov
rcrb
push
jecxz
mov
or
xchg
xchg
loope
ds
dec
mov
stc
stos
aam
adc
lea
filds
add
sub
pop
inc
and
test
sbb
mov
in
aas
out
outsl
fwait
sub
ds
lahf
xorb
push
or
jo
pop
mov
cmp
cmp
pop
mov
cld
dec
ja
std
mov
pop
xor
flds
out
cmpw
loop
sbb
shll
xchg
in
aaa
xor
das
xchg
cli
xchg
jae
xchg
push
mov
repnz
xor
add
add
imulb
mul
xor
adc
add
add
add
pop
sub
jl
lock
fcmovu
hlt
pop
push
lahf
mov
push
es
cmp
push
or
and
in
xlat
xor
fstps
sbbb
jge
jp
mov
rclb
inc
cltd
xchg
lods
mov
and
mov
pushf
sarb
inc
add
jbe
cmpsb
push
movsl
dec
lods
jae
adc
pop
pushf
enter
jge
andw
loopew
orl
popa
loope
rclb
outsb
andl
add
pop
jno
mov
dec
sbb
test
std
ret
add
pusha
or
jne
adc
fs
add
pop
sub
js
pop
xor
iret
jge
or
cmpsl
xor
jg
sbb
add
and
cld
mov
inc
das
sub
cmpsl
loopne
jmp
add
aad
out
jecxz,pt
ret
add
xor
jb
jae
div
pop
xor
add
add
mov
fnstcw
xor
add
xchg
add
sbb
jo
clc
jns
mov
std
mov
cwtl
mov
xor
inc
xchg
xchg
out
inc
mov
arpl
jle
xor
cmp
sub
subl
xor
push
daa
jg
aad
hlt
inc
sbbb
xchg
pop
pop
jo
or
leave
movsl
movl
sub
ret
lcall
mov
in
lds
xchg
ja,pn
dec
cli
or
pop
mov
mov
pushl
sub
xor
mov
ficomps
movsb
xchg
clc
pop
mov
pop
mov
ljmp
xchg
dec
icebp
aaa
es
xor
xlat
jb
mov
pop
cmpl
mov
cmp
cli
jge
pop
js
test
pop
sub
repnz
xchg
mov
push
inc
data16
int3
adc
je
sar
int
lods
cmpl
add
ds
in
idivl
js
mov
ss
fsubr
addr16
add
add
add
cmp
push
xchg
cmp
loopne
inc
mov
pop
cs
in
dec
pop
in
add
loope
and
and
aam
push
adc
adcb
dec
addr16
lods
cmp
and
push
mov
shl
and
addr16
sahf
and
inc
lock
insb
loop
rorl
inc
mov
inc
test
pop
mov
sub
and
mov
jnp
stc
jmp
cmp
push
push
inc
enter
or
shlb
sbb
orb
repnz
mov
mov
test
clc
or
test
iret
push
xor
ret
ss
and
lods
mov
lar
das
stos
jae
cmp
pop
inc
add
xchg
dec
jge
xchg
sbb
scas
insl
fs
pop
mov
dec
xor
bound
inc
movsb
pop
lds
sbb
call
sub
pusha
daa
inc
in
ja
fcmovb
pop
jmp
lods
cmp
out
adc
jne
lret
cmp
in
dec
mov
add
pop
es
inc
cli
aas
into
lret
int3
pop
sbb
addr16
add
add
add
outsb
fcmove
pop
and
pop
loope
in
pop
dec
jg
sub
sub
fdivs
aaa
mov
push
pminsw
jle
xor
push
stos
mov
push
mov
into
call
inc
cmpsb
xchg
test
subb
ljmp
push
jnp
inc
or
jae
lds
sbb
fdivl
mov
and
mov
xchg
or
cmpsl
push
mov
hlt
and
call
pop
and
pshufw
lcall
mov
inc
xlat
das
jno
sbb
sbb
xchg
repz
imull
and
aam
xchg
les
std
add
lea
cmp
mov
pop
push
mov
lret
jecxz
rolb
aam
div
jl
jp
loope
lea
pop
sub
xchg
insb
or
in
mulb
jl
out
mov
cmp
je
and
mov
lcall
rcll
in
insl
addr16
add
add
add
push
push
add
adc
mulb
adc
enter
lods
cmp
mov
push
push
cmp
bound
bound
xorb
jne
fildll
fwait
mov
dec
subl
push
jl
jp
or
add
adc
cmp
cld
lea
xchg
cmp
aas
test
cmpsl
stos
xor
bound
test
loop
push
mov
push
and
jg
shll
movsl
sbb
or
mov
fsts
test
jecxz
aas
cmp
shll
lahf
shrb
cmp
pop
repz
scas
mov
in
loopne
jmp
add
xchg
setbe
push
xchg
bound
daa
fistl
and
adc
mov
in
mov
and
jp
ret
aaa
jae
cltd
dec
mov
jno
dec
jmp
add
add
add
jo
fs
std
jg
outsb
dec
insb
inc
pop
clc
in
mov
xchg
push
mov
lds
hlt
popa
rolb
fsubs
ret
pushf
add
mov
stos
mov
pop
push
add
adc
cld
push
loop
std
cs
loope
je
lahf
mull
cmp
dec
mov
inc
filds
adc
icebp
push
loope
fsubrl
lods
dec
lret
hlt
mov
mov
inc
leave
cmp
arpl
mov
push
mov
out
inc
dec
aas
add
sbb
inc
push
adc
in
popfw
dec
push
js
icebp
daa
jo
das
jnp
xchg
mov
or
mov
inc
or
push
pop
adc
fmuls
xchg
ret
test
out
enter
or
sbb
jl
sbb
dec
cs
dec
repnz
out
lret
jae
lods
mov
mov
in
jno
pop
ljmp
jbe
add
mov
ds
into
nop
out
cwtl
jle
push
sub
dec
inc
andb
add
add
dec
mov
dec
stos
adc
rcrl
nop
inc
in
cmp
insb
aad
out
insb
popf
adc
outsb
cmp
and
sub
dec
sub
addb
push
xchg
pop
adc
mov
int3
aad
mov
jg
cmpsl
inc
sub
lods
jecxz
and
push
push
shll
cltd
sbb
stc
push
sub
xchg
lods
pop
call
sarl
sbb
fs
xchg
mov
aad
cmp
cmp
xorl
out
mov
lods
decl
das
pop
out
xor
aam
and
pop
roll
inc
dec
mov
aas
xchg
mov
pop
inc
dec
pop
jae
xchg
and
nop
into
adc
and
push
mov
dec
mov
pusha
mov
std
std
pop
test
push
mov
and
add
nop
or
mov
daa
xchg
pop
cs
dec
bound
jno
test
jg
push
pop
push
mov
addr16
add
add
add
lahf
adc
je
test
add
push
fldt
rolb
fistpll
lret
xchg
fadds
dec
dec
outsb
ja
imul
mov
mov
imul
je
lcall
xchg
or
mov
rolb
mov
out
cltd
adc
push
inc
in
push
jo
stc
xor
ss
clc
pop
mov
loope
pop
or
xor
cmp
cmp
lret
movsl
arpl
jge
jo
mov
nop
push
fimull
pop
push
call
dec
and
mov
ret
mov
stos
or
aas
mov
inc
push
cmp
pop
mov
sti
insb
mov
fdivl
jle
sub
ret
ja
mov
repnz
mov
lahf
imul
sbb
or
or
mov
sarb
mov
xor
fadds
into
adc
movsb
push
in
cmc
jne
sbb
js
cmp
add
add
push
int
sub
hlt
dec
addr16
fstpt
dec
pushf
sbbb
rorl
xchg
popa
outsl
decb
sub
cmpsb
cltd
std
push
jnp
adc
lds
rcr
sub
jbe
jns
testb
daa
int3
push
and
fsubrl
xchg
adc
sbb
loop
mov
sbb
inc
gs
imul
sti
xchg
out
and
es
xchg
sarb
adc
inc
loop
cmp
out
inc
xchg
jo
out
lret
insb
or
mov
movb
loope
gs
mov
mov
mov
inc
xchg
xchg
mov
mov
mov
or
sahf
data16
shll
pop
je
repnz
out
sbb
adc
testl
mov
mov
mov
and
lea
and
andl
dec
sahf
jmp
cld
stc
daa
add
sbb
shlb
aas
out
int3
mov
mov
test
incl
add
add
add
loope
xchg
sarl
push
pop
rcll
iret
mov
push
cli
xor
adc
cmc
add
sbb
jle
imul
push
data16
mov
jbe
out
mov
insl
dec
in
cmp
ret
icebp
push
pop
adc
sbb
mov
dec
mov
js
std
or
pop
push
aad
sbb
mov
loopne
loopne
xor
xor
lcall
mov
popf
nop
mov
sub
xor
rcl
push
jg
sbb
in
in
jge
add
jbe
fimull
sbb
in
mov
push
jno
push
push
aad
cmpl
orb
cmp
gs
das
fcmovnu
or
shll
in
jecxz
inc
ja
rcrb
aam
adc
std
fbld
or
es
fstpt
add
cwtl
or
mov
and
mov
add
add
add
out
sub
xchg
jmp
cmc
imul
insl
dec
out
fdiv
or
or
xchg
movsl
xchg
scas
adc
int
mov
mov
add
fcmovne
test
adc
sub
fists
js
aam
jae
out
push
sub
mov
sub
shr
adc
xor
ja
jl
lcall
notl
sbb
inc
and
mov
insb
mov
sbb
mov
cmpb
clc
lock
pop
inc
xchg
push
mov
punpckldq
mov
jns
cmp
pop
mov
mov
push
jb
pop
lods
xor
push
outsl
gs
movsl
out
lock
jno
mov
xorb
cltd
or
mov
push
pop
mov
and
mov
xor
mov
ret
adc
int
lahf
pop
loopne
push
leave
cmc
xchg
into
mov
add
xchg
sub
std
xchg
dec
rol
lret
clc
cmc
inc
stos
repz
ja
inc
add
add
add
add
enter
js
fcoms
mov
mov
jmp
lock
and
scas
jge
xchg
mov
and
rorl
jge
out
inc
sahf
mov
fnstcw
push
lds
stc
adc
ret
xchg
mov
mov
fimuls
popa
lcall
adc
mov
mov
xor
ret
jge
adc
cmp
mov
aam
sbb
arpl
in
popf
orb
lret
movsl
jae
xchg
jno
jecxz
lods
addl
fists
stc
xor
leave
loopne
mov
xchg
mov
jnp
dec
fsts
adc
fwait
shl
xor
test
or
pop
out
pop
fcmovnu
shld
sbb
test
adc
lret
rorb
adc
mov
das
pop
popf
int3
int
inc
mov
sbb
mov
add
std
aaa
mov
shll
sti
add
add
add
add
jp
das
pop
inc
mov
mov
inc
xchg
inc
imul
insb
jae
aad
xlat
data16
outsl
repz
add
movsl
mov
xchg
repnz
insb
in
push
movb
jnp
fs
ret
cmp
int
push
xor
in
divl
push
dec
jg
ss
dec
mov
pop
cld
enter
fildll
cmpsl
lret
imul
and
cmp
add
fmuls
neg
xor
mov
or
pushf
push
jl
loop
in
jmp
mulb
idiv
daa
pushf
jle
xchg
cld
mov
jb
jns
mov
ret
idivb
dec
pop
dec
lahf
cmpb
push
stos
stc
mov
call
adc
rorl
iret
div
dec
popf
adc
adc
addr16
fwait
jne
mulb
insl
ss
int
ret
cltd
and
insl
aam
mov
scas
add
aam
movsb
add
add
add
dec
fisubl
mov
adc
mov
jecxz
imul
dec
loope
adc
and
dec
mov
jne
jle
mov
dec
and
push
adc
pop
add
test
mulb
add
add
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
bound
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
call
add
add
test
wrmsr
ja
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
inc
push
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
ljmp
movntq
movl
test
jmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
jle
dec
mov
mov
add
mov
test
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
sarb
sub
add
mov
inc
push
mov
shrb
ret
add
mov
cld
test
inc
xor
push
mov
inc
enter
mov
or
add
add
add
incl
cld
mov
mov
xor
and
sub
mov
test
add
xor
add
cmp
jne
mov
pushf
add
add
or
fwait
jne
xor
incl
add
orb
add
orl
gs
je
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
inc
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
sub
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
xor
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
fwait
clc
xor
inc
xor
pushf
mov
test
clc
dec
inc
mov
xchg
inc
inc
aas
mov
test
clc
pushf
inc
decl
push
movb
add
mov
mov
les
adc
dec
add
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
rorl
test
test
cmp
pushf
xor
add
inc
dec
mov
test
cmp
fdivl
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
fwait
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
fwait
lret
xor
mov
lea
xor
add
inc
dec
mov
gs
inc
sub
inc
xor
push
mov
add
inc
decl
add
inc
mov
fwait
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
test
fwait
add
jmp
mov
add
mov
jmp
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
xor
shrb
clc
add
xor
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
call
in
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
addb
mov
cmp
je
incl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
pushf
movl
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
adc
pushf
inc
add
movsl
test
clc
incl
cmp
pushf
inc
push
movsb
jne
push
clc
test
lcall
test
cmp
pushf
add
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
xor
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
xor
pushf
xor
rdmsr
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
fwait
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
fwait
xor
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
jmp
mov
mov
mov
clc
scas
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
scas
loopne
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
pop
mov
clc
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
call
and
call
addl
clc
pushf
decl
jmp
and
and
or
decl
and
pop
cli
in
ret
add
mov
or
jl
adc
dec
push
and
xor
mov
add
or
cmp
sbb
or
xor
or
test
dec
adc
adc
add
jae
add
pop
adc
fidivl
add
movups
popf
push
adc
insl
or
add
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
cmp
add
adc
sub
adc
push
adc
mov
adc
adc
cmp
adc
addr16
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
pop
adc
jle
adc
cld
dec
adc
add
adc
push
insl
adc
fs
add
jge
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aas
adc
jne
adc
fldenv
adc
xchg
push
add
pop
adc
in
adc
leave
sbb
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
cmp
mov
adc
add
adc
dec
insl
adc
mov
adc
mov
adc
rorl
adc
pop
inc
adc
daa
cmp
sub
inc
add
cmp
xor
inc
add
cmp
cmp
inc
add
cmp
inc
cmp
dec
ss
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
pop
add
add
push
add
dec
add
add
dec
add
xor
pop
add
dec
add
cmp
pop
add
cmp
add
push
add
push
add
dec
add
dec
add
inc
add
dec
add
add
add
push
add
pop
add
add
push
add
add
dec
add
pop
add
push
add
xor
xor
pop
add
add
add
add
add
pop
add
dec
add
dec
add
add
push
push
inc
push
xor
xor
lea
inc
lahf
xchg
inc
cmp
add
add
pop
js
insl
arpl
addr16
pop
inc
inc
dec
bound
popa
push
bound
popa
bound
jo,pn
bound
