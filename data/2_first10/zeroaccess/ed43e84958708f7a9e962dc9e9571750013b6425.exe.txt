push
mov
sub
sbb
mov
mov
mov
add
mov
decl
mov
sbbl
push
push
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
xor
push
mov
mov
sub
imul
mov
adcl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
or
jmp
test
push
movsb
jb
jl
pop
or
inc
cwtl
jle
jle
mov
jle
into
xlat
cmp
pop
add
or
xor
int3
and
sbb
inc
fs
out
mov
es
test
call
add
dec
stos
push
sub
sarb
mov
stos
push
rcl
test
pushf
mov
dec
out
dec
call
mov
and
jnp
ret
xchg
sub
loopne
cld
ljmp
sub
add
sbb
outsl
insl
add
cmp
jno
ds
or
adc
jge
inc
dec
aaa
adc
ja
sbb
ds
hlt
enter
push
aad
add
shlb
test
movsb
leave
push
pop
pop
fmulp
mov
push
sub
call
cmp
fsubrp
push
orb
stc
adc
int
pop
loope
inc
orl
or
adc
inc
int
push
sbb
fs
imul
fbstp
icebp
aad
dec
sbb
xor
movsb
js
or
out
ljmp
adc
cld
adc
mov
in
jge
push
pop
orb
clc
ret
inc
addb
enter
push
and
loopne
add
inc
lds
pop
movsl
stc
cltd
sbb
sbb
xchg
outsb
fisttpl
insb
add
xchg
sbb
shl
ffree
cmp
or
adc
popa
jae
jg
fisubrl
test
stos
jecxz
dec
iret
roll
jmp
lock
push
stos
into
daa
pop
and
add
inc
cmp
cld
fsub
imul
add
add
incl
add
push
add
mov
adc
mov
orl
mov
xor
xor
neg
add
mov
movl
lea
sbb
mov
mov
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
xor
add
mov
decl
mov
mov
mov
sbbl
mov
adcl
mov
xorl
movzwl
add
mov
jmp
fisubl
addb
lods
gs
aam
dec
xchg
jg
jle
jg
jle
or
fstpt
pop
int
xor
rcl
sbb
jecxz
or
sub
inc
sub
push
js
sub
pop
inc
aas
mov
mov
mov
adc
arpl
cmp
fsubs
movsl
test
xchg
jge
sub
sub
je
and
in
jmp
and
shll
cli
push
xorb
addr16
mov
negb
mov
lds
mov
fcomps
sbb
pop
es
neg
hlt
pop
fwait
or
packuswb
xchg
pushf
nop
movsb
jl
xchg
fdivs
inc
shll
sbbl
adc
sti
mov
scas
jae
ret
imul
push
mov
push
inc
cmp
dec
xchg
lods
imul
aaa
pop
les
mov
xchg
shll
xchg
sub
mov
push
inc
js
lahf
je
mov
dec
or
sarl
mov
adc
sub
mov
mov
movsb
and
sbb
and
gs
mov
orl
add
adc
pop
push
xor
dec
xchg
fcoml
adc
jl,pt
mov
in
jmp
push
mov
jp
fs
mov
cmp
pop
dec
cmp
lret
push
and
push
cwtl
xor
xchg
sub
js
mov
cli
push
xlat
in
test
lea
sbb
add
test
icebp
jo
test
jge
mov
in
subl
or
add
or
mov
xor
addl
add
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
or
mov
sub
and
mov
mov
addl
xor
orl
add
movl
cmp
jmp
cmp
sub
mov
jl
jns
in
jns
jle
jg
jle
ss
and
mov
mov
sub
ret
mov
or
add
addr16
ret
inc
arpl
in
bndldx
xchg
rcr
jbe
jecxz
mov
jb
sbbl
lock
and
cmp
iret
sub
jbe
bound
test
cmpb
gs
ret
push
cmpb
xchg
push
in
movsb
adc
ja
shlb
cltd
dec
mov
lret
enter
mov
adc
fnstcw
ja
inc
cmpsl
shr
in
pop
pop
jmp
clc
es
pop
mov
iret
es
dec
jmp
in
aas
out
jp
pop
sbb
cld
or
cld
cmp
mov
adc
arpl
cmp
jg
sbb
iret
jecxz
sub
fcompl
cmp
and
shll
and
and
or
movsl
outsl
das
sbb
cmpsb
pop
push
push
out
lock
or
jle
fucomip
int3
mov
fimull
xor
orb
fstps
cmp
or
mov
aam
mov
jb
push
inc
jmp
mov
jecxz
ret
loop
jb
push
cmpl
in
adc
cmp
pop
xor
xlat
clc
scas
pop
sub
dec
mov
aam
stos
xchg
sub
dec
push
pop
in
fs
mov
lods
mov
jp
out
outsl
jnp
xor
cwtl
ds
cli
adc
pusha
push
inc
fistl
mov
xchg
push
sbb
icebp
push
movsb
bound
or
jne
mov
or
jmp
or
popa
sbb
jnp
jle
jg
jle
mov
stc
subl
repnz
cmp
faddp
mov
cmp
sub
sti
pop
mov
adc
inc
inc
push
test
inc
or
cmp
inc
add
int3
sbb
jle
sbb
mov
mov
push
cmp
mov
inc
mov
pop
mov
pop
mov
pop
pop
jge
xchg
call
mov
cmc
pop
outsl
pop
outsl
jmp
xor
fsubs
pop
fbld
mov
clc
mov
lcall
push
ljmp
call
in
push
scas
xchg
push
jmp
repnz
sub
inc
ja
push
andl
or
dec
call
push
in
inc
mov
shlb
imulb
loopne
in
inc
sub
pop
mov
fidivl
inc
push
pop
subb
jae
pop
ja
scas
popf
xor
mov
mov
or
jmp
ljmp
mov
pop
leave
push
mov
je
fistl
xchg
shrb
aam
jge
cmp
shlb
xchg
jns
mov
aad
cmp
pushf
arpl
cmp
jo
fisttpl
xchg
aaa
xchg
sub
sub
sahf
cmpsl
and
dec
dec
xlat
lock
rcrl
lods
cmpsl
test
cwtl
mov
hlt
rorl
icebp
sti
xchg
xchg
outsb
retw
out
insb
push
ret
rolb
jl
ficoml
ret
sbb
loope
outsb
mov
scas
mov
int
pop
mov
loop
in
adc
push
lcall
dec
inc
inc
add
add
add
add
or
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
xor
add
mov
mov
mov
xor
mov
sub
add
jmp
icebp
jmp
imul
and
push
add
jle
jg
jle
push
cmp
ret
fs
fisttps
jno
xor
sbb
in
aam
pop
rcrb
mov
sbbb
lock
hlt
inc
xchg
or
sbb
pop
pop
sbb
out
sub
sahf
push
aam
pop
cmp
cmpsl
imul
sub
lock
or
popa
mov
jnp
mov
cmp
inc
fsubs
jne
xlat
rol
sub
xchg
divl
cld
cmp
cmp
negb
push
mov
mov
repnz
pop
ret
mov
iret
mov
frstor
leave
lods
pop
mov
push
fidivs
test
lods
push
ret
sbb
fwait
mov
lahf
adc
dec
je
cmpsl
push
lods
push
orb
imul
xchg
pushf
push
push
jecxz
jb
inc
xchg
mov
inc
aas
sbb
mov
rorl
push
leave
xchg
out
add
cmp
adc
sub
test
test
push
and
xchg
fsubrl
cltd
xchg
ja
sbb
imul
filds
pushf
cmp
fsubrp
xchg
and
scas
ja
xchg
sub
mov
flds
loope
mov
aam
xchg
pop
cmpsl
cmp
push
sbb
cmp
inc
inc
inc
pop
xchg
cli
negl
mov
mov
pushf
inc
mov
dec
or
pop
leave
inc
jp
and
and
rcrl
push
out
adc
push
call
insl
imul
jno
mov
dec
inc
add
cld
movzwl
add
jmp
push
mov
test
icebp
pop
adcb
jg
jle
xchg
xor
mov
shll
mov
jnp
hlt
and
sti
mov
orb
xchg
aam
out
mov
jnp
gs
dec
mov
push
add
mov
dec
jg
cmp
xor
outsb
fnstcw
stc
sti
scas
sub
xchg
and
push
cmp
pop
add
daa
jmp
add
adc
ds
int
cwtl
xchg
push
sbb
or
dec
sub
push
rolb
mov
jo
aas
cmc
paddd
repz
mov
leave
mov
xchg
mov
push
subl
cwtl
loope
or
cld
sbb
inc
inc
movsl
jge
lods
dec
mov
fistl
out
or
adc
imul
jg
mov
nop
mov
add
cld
sbb
adc
and
and
decl
dec
fdivrl
or
das
paddusb
movsl
nop
and
lock
fdivrl
je
out
and
push
gs
in
popf
xchg
jbe
xor
pop
clc
xorl
popa
mov
and
outsl
fs
mov
push
sbb
mov
pusha
jns
sbb
jo
cmpsl
sarb
push
or
fcmovne
lret
xchg
jo
jg
cli
mov
adc
loope
inc
xor
mov
fwait
insb
sbb
xchg
pushl
data16
test
jecxz
mov
sbb
and
mov
jb
or
fnstenv
pop
shrb
xchg
or
jl
cld
xchg
mov
call
dec
or
movb
xor
sub
jmp
xchg
sahf
loopne
icebp
jo
popa
mov
cmp
fnstenv
lock
jle
jg
jle
nop
pop
ljmp
int3
sub
push
test
cmp
xchg
mov
pop
fdivrl
mov
cmpsl
jne
and
push
loopne
cltd
popa
sub
fisttpll
and
arpl
test
add
push
mov
fcoms
insb
jp
mov
mov
push
test
fcomps
push
mov
and
into
adc
ret
outsb
sbb
dec
add
int3
jne
enter
jmp
inc
sbb
mov
cltd
sub
inc
rclb
mov
pop
fsts
popa
lahf
lahf
adc
dec
adc
negb
add
lcall
cmp
loop
xchg
negb
mov
sbb
xor
insb
pop
or
addr16
loop
std
shl
mov
lcall
pop
sbb
sub
xchg
inc
xor
push
sub
and
inc
ret
aas
jns
popf
sub
xchg
xchg
outsb
ja
adc
pop
push
bound
dec
cli
lahf
hlt
push
iret
mov
adc
jo
xchg
std
lahf
or
jecxz
mov
inc
add
push
aaa
inc
jmp
inc
xchg
adc
dec
sbb
pop
rorl
xchg
lods
movsl
mov
adc
adc
mov
dec
loope
sub
sub
in
daa
data16
cmpsb
daa
aam
mov
dec
mov
mov
mov
inc
xchg
jmp
test
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
jmp
pop
sbb
cmp
push
popa
movsb
insl
std
and
push
or
jle
mov
jle
sub
and
lea
adc
sub
fisubrl
mov
in
loope
mov
in
call
loope
int
imul
dec
adc
test
inc
sbbb
push
loope
adc
enter
sub
mov
jns
mov
imul
aas
xchg
mov
push
mov
mov
rcr
adc
leave
ja
cmpsb
jae
sub
cmpl
push
mov
dec
aam
xor
lahf
jl
sub
push
sub
push
cmp
xor
fdivl
push
mov
movsl
lods
dec
adc
lahf
dec
mov
inc
adc
dec
fwait
jmp
mov
mov
in
push
push
add
repz
fildl
pop
pop
imul
xchg
adc
pop
fwait
lods
xor
mov
sub
xchg
scas
sahf
cmp
lods
and
pop
jno
rcrb
out
and
les
push
addr16
jne
stc
mov
sti
inc
jmp
jg
pop
adc
fimuls
push
or
xor
movsb
or
nop
mov
xchg
jg
incb
pop
lcall
sub
stos
sub
add
pop
test
mov
lds
mov
pop
push
jbe
jle
fbld
sbb
mov
adc
and
push
sbb
sahf
and
jo
mov
je
sub
leave
inc
add
rcr
in
add
cld
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
jmp
je
int3
xchg
int
jne
jae
paddusb
push
mov
jle
mov
jle
dec
testl
jae
je
in
das
inc
push
ret
sbb
push
mov
imul
inc
fadds
pop
cmp
sub
pushf
out
call
loope
pop
pop
and
xchg
dec
mov
daa
mov
mov
pop
stos
and
cmp
les
inc
fwait
les
xchg
jle
ror
xchg
hlt
or
push
fisttpl
mov
out
mov
clc
jmp
iretw
jo
sbbl
xchg
popa
lret
aaa
mov
out
imul
jae
nop
repnz
outsb
xchg
filds
fidivl
dec
test
lods
cmp
or
in
clc
sbb
xor
test
jmp
int3
dec
sub
jnp
pushf
pushf
mov
jp
mov
sub
jmp
adcb
sub
std
mov
xchg
jg
ljmp
jmp
xor
adc
test
sub
mov
pop
push
bound
fsubl
or
rcll
xor
adcl
lcall
mov
adcl
mov
adc
push
loop
pusha
mov
mov
outsb
hlt
xor
std
out
int3
xor
imul
mov
aam
xor
sbb
sub
aaa
andl
pop
sbb
enter
xor
mov
mov
stc
outsl
ljmp
fwait
ds
faddp
cs
cmp
mov
outsl
cmp
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
jmp
xor
inc
pop
pop
jge
arpl
outsb
dec
or
in
or
jle
out
cmpsl
jmp
pop
aaa
adcl
mov
in
lret
sub
xor
insb
or
scas
dec
sbb
and
adc
mov
xor
int
rolb
sbb
cld
jge
stc
mov
int3
pop
andb
ds
jb
pop
cmp
ss
mov
pop
cmpl
mov
les
cmp
or
repnz
pop
mov
sbb
cli
inc
ss
mov
arpl
mov
scas
ja
outsl
shrl
xchg
jecxz
pop
shll
int3
lea
test
ljmp
cmpsl
pop
mov
adc
cli
adc
sub
and
pop
int
dec
bound
jns
je
sub
mov
lea
cmp
sbbl
pop
push
rorb
push
movsb
daa
cmp
jg
adc
cmp
sbb
mov
mov
pop
repnz
adc
cwtl
xchg
aam
in
mov
pop
dec
decl
push
imul
pop
lret
cld
mov
jb
pop
sbb
shl
push
les
ficoms
adc
incl
dec
inc
test
jnp
mov
test
or
fwait
mov
fldl
es
xchg
inc
mov
xor
push
ja
inc
sbb
sti
clc
dec
es
add
cli
mov
popf
push
mov
insb
cmpsb
xor
fmulp
imul
sub
push
fmul
cmc
and
in
push
xchg
clc
mov
xchg
xor
inc
loopne
dec
clc
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
jmp
insb
jo
arpl
jge
jno
adc
mov
shlb
mov
jle
mov
cmp
pop
shlb
test
std
addr16
mov
test
cmpsl
dec
stos
shl
cs
hlt
iret
sbb
mov
stos
add
dec
nop
jne
shll
add
test
nop
paddsw
loopne
add
int3
stc
mov
mov
lret
lretw
shlb
pop
fistps
xchg
or
pop
int3
adc
inc
fistpl
adc
out
out
jo
aaa
adc
hlt
fstl
xor
mov
lods
jg
jae
pop
addr16
jge
pop
outsl
ffreep
popa
xor
fisubrl
push
outsb
and
out
add
xchg
xor
gs
out
test
push
ds
movsb
lods
adc
test
or
lahf
cmp
push
sbb
into
aad
pop
insb
in
sbb
daa
sub
pop
jae
insl
add
mov
stos
stc
inc
mov
daa
jo
stos
js
push
pop
subb
scas
scas
or
stos
into
cli
sub
dec
jno
movsb
scas
addr16
sbb
dec
daa
fsubl
fcmove
in
and
fmuls
lcall
scas
pop
in
movl
rol
ret
push
mov
xchg
daa
mov
push
push
dec
test
adc
mov
dec
sbb
aaa
mov
outsb
mov
scas
xor
mov
shr
in
cmp
loopne,pt
pop
add
es
data16
int3
les
add
popa
adc
add
ffree
push
aam
cmpsl
mov
jns
add
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
sbb
jge
fidivrl
pushl
push
push
jg
jle
test
mov
fsubs
dec
popf
mov
shrl
in
mov
xor
mov
sbb
ljmp
jno
mov
andb
out
and
dec
inc
pop
gs
lock
add
add
ret
ljmp
jo
xor
addr16
fcmovne
test
mov
cmp
lret
pop
xchg
fwait
pop
cmp
ja
imul
out
cmp
adc
movsl
xchg
cltd
enter
xchg
movsl
mov
sub
cmpb
sbb
xchg
sbb
adc
shll
xchg
lcall
aas
xchg
add
cld
pop
jmp
outsb
frstor
test
pop
push
fsubrl
adc
pop
xchg
jno
lea
lock
lods
mov
add
add
cmp
mov
rorb
pop
ja
cmp
adc
jge
cmp
notb
and
add
add
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
jmp
xorl
push
sbb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
add
movl
mov
push
mov
or
mov
xor
mov
push
add
mov
sbbl
jmp
pop
imul
xchg
sub
mov
jle
push
jg
jle
cltd
pop
or
sbb
cwtl
mov
pop
cmc
xchg
or
lcall
data16
out
pushf
dec
ja
je
add
mov
ficoms
aad
sub
jecxz
and
push
cld
inc
jne
cltd
xchg
ror
mov
mov
out
test
dec
jl
xchg
sar
inc
lock
pusha
movsl
pop
std
ss
fs
outsl
xchg
ja
mov
stos
fucomi
shl
jg
shr
push
add
sbb
or
and
jbe
or
fs
dec
ljmp
and
mov
cmp
xchg
adc
or
and
mov
mov
push
xor
fwait
les
mov
mov
pop
sar
aam
cld
scas
call
add
leave
fiaddl
aad
imull
adc
inc
mov
push
popa
add
and
mov
aam
sti
leave
or
stc
scas
test
sbb
orb
iret
lods
push
xor
xchg
mov
cli
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
mov
mov
xor
mov
xorl
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
jmp
push
nop
outsb
stos
jae
push
jo
sub
lods
scas
fistpl
adc
jle
push
jg
jle
adc
pop
dec
lds
or
les
mov
xchg
popa
or
pop
clc
xchg
stos
jmp
jmp
and
subb
out
xor
xlat
out
sub
ret
insl
or
test
adc
in
test
mov
aaa
pop
pop
jl
adc
rcrl
std
shrl
inc
pop
aas
scas
mov
sbb
popa
mov
push
xchg
stos
outsl
mov
dec
mov
mov
lret
les
push
cmp
insl
xor
fstpl
ret
pop
cli
pop
mov
das
call
sbb
sub
mov
int3
aaa
or
sti
jnp
cmp
adc
inc
mov
in
ret
push
inc
dec
out
call
andb
insb
xor
lds
pop
pop
cmp
jns
es
adc
ja
lea
and
mov
pop
andl
adc
outsl
and
loopne
in
xchg
mov
mov
xchg
xor
pusha
sti
mov
imul
mov
dec
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
sub
and
mov
jmp
inc
dec
fwait
imul
add
jle
push
jns
jle
ss
and
adc
incb
sub
mov
lods
and
sti
dec
sbb
mov
mov
xor
addr16
jp
fsubl
int
mov
cmp
jno
jb
fxch
mov
stos
js
xchg
adc
aaa
cs
lock
mov
js
out
inc
sub
mov
repnz
mov
div
pusha
inc
xchg
scas
mov
xchg
mov
lock
movsl
mov
jb
cli
cs
icebp
ja
and
cmp
stos
xor
dec
cmp
mov
dec
sbb
jns
stc
or
loop
aad
andl
xor
sub
sbb
inc
xchg
imul
lahf
pusha
push
mov
cmp
cmp
lods
mov
jp
push
sarb
inc
popa
and
mov
popa
and
cmp
lods
jge
insl
shll
daa
movsw
filds
add
shl
dec
inc
mov
in
ss
mov
mov
lea
rclb
mov
dec
lret
in
mov
cli
cwtl
subb
cld
adc
jmp
dec
pop
jnp
xor
in
fsubl
xchg
jb
mov
lods
inc
into
adc
cmpsb
jae
scas
dec
and
rcll
jne
fidivl
push
push
ret
nop
mov
jecxz
cmp
inc
repnz
stc
insl
out
xor
orb
dec
or
sub
jns
addb
lods
push
aaa
clc
subl
ds
sbb
scas
aad
insl
or
cltd
jl
xchg
sbb
adc
and
xchg
fildl
es
sbb
cmp
sub
fildl
lret
pop
push
bound
push
imul
popa
xchg
and
out
mov
cmp
shlb
ret
push
push
cmp
sbb
outsb
decb
scas
xchg
loope
push
out
jae
pop
add
fstl
lahf
mov
pop
xchg
dec
int
pop
or
int
cmp
sbbb
cmp
lods
xchg
lret
cmp
addr16
shrb
jns
mov
mov
arpl
jp
frstor
in
loopne
jo
cmc
mov
or
loopne
les
fdivrl
push
aam
add
xchg
mov
notb
sbb
fwait
jmp
adc
push
pusha
mov
sub
jbe
out
inc
gs
inc
aad
loop
and
dec
adc
mov
jne
vandps
test
insl
jno
mov
ss
in
cmpsl
pop
pop
jecxz
aaa
loopne
mov
add
lods
loopne
jno
std
mov
cltd
mov
rcrb
mov
or
xchg
dec
ftst
mov
mov
sub
adc
xlat
xor
inc
mov
mov
pop
lds
mov
jge
fisttps
adc
cmp
lret
nop
pushf
xchg
push
push
mov
push
xchg
pop
shr
shl
es
add
jl
std
adc
sub
mov
in
mov
outsl
es
notl
lret
sarl
mov
insl
ror
pushf
aad
mov
aad
cmpsl
loope
jo
test
lahf
arpl
js
je
or
dec
or
fwait
aaa
mov
sub
push
xchg
adc
fldcw
inc
out
ficompl
cmc
mov
xor
sbb
inc
fsubs
mov
adc
adc
lea
and
and
pop
and
leave
roll
cmpsb
dec
ljmp
lea
push
popf
push
mov
mov
dec
mov
xor
mov
andl
add
mov
xor
mov
movzwl
mov
xor
mov
mov
sbb
mov
movb
lea
orl
mov
and
jmp
jo
inc
xchg
jo
jne
xchg
or
adc
push
jns
jle
xchg
rcll
jle,pn
xor
jbe
shll
mov
outsl
jl
pop
mov
jns
mov
aad
test
gs
dec
and
loope
mov
adc
fwait
divl
clc
fwait
xchg
mov
dec
push
add
sub
sbb
out
in
fcoms
mov
shll
fcoml
out
and
add
pop
aam
mov
mov
iret
cmp
movsb
jbe
std
rcrb
loopne
cmc
sbb
adc
lea
out
and
mov
sarb
push
call
cmc
or
jle
pop
jecxz
scas
ret
stos
test
xor
mov
xor
int
add
mov
pop
adc
xor
dec
and
bnd
inc
inc
sub
push
mov
mov
je
xchg
push
jl
push
mov
mov
pop
xchg
rorl
adc
jmp
ljmp
jne
xchg
add
test
inc
pop
jbe
mov
fdivs
xchg
or
daa
out
sbb
gs
inc
mov
sti
jo
adc
adc
jle
cmp
mov
das
add
shlw
mov
add
mov
push
fidivs
test
mov
sub
mov
xor
pavgb
dec
test
enter
sub
adc
scas
adc
hlt
pop
mov
jg
lea
sub
dec
add
imul
jb
sub
arpl
pop
aad
push
mov
jb
nop
mov
mov
inc
push
pop
aad
jne
pop
cwtl
xchg
out
push
and
shll
fbld
mov
and
sbb
test
dec
jb
pop
pushf
bound
or
cmp
push
andl
xorl
sub
adc
lds
or
lahf
test
lret
sbb
mov
add
mov
sub
insl
inc
xchg
mov
xchg
loopne
jo
arpl
loopne
sub
das
adc
pop
inc
outsl
into
bound
insb
rolb
out
lahf
pop
stc
faddl
and
rclb
pop
mov
mov
in
aas
dec
push
sub
sub
xor
daa
and
ss
fiaddl
lret
loope
mov
xchg
pop
mov
cmp
leave
adc
mov
fisttps
pop
mov
jb
js
in
aad
mov
loop
or
push
xor
mov
and
sbb
popf
stos
cmp
repz
mov
or
inc
cs
test
push
or
dec
push
aad
mov
test
xor
cwtl
mov
js
insb
add
sbb
sahf
mov
ret
mov
xor
mov
hlt
sbb
xor
xor
insb
ljmp
xor
mov
ja
dec
and
mov
shrb
dec
loopne
ss
loope
push
mov
push
dec
jbe
addr16
shlb
lds
int
jp
decl
lret
sub
icebp
enter
in
rclb
lret
or
imull
or
mov
add
mov
das
inc
pop
inc
xchg
dec
dec
jno
cld
ja
cs
dec
pusha
mov
fldt
subb
clc
es
mov
addr16
popa
arpl
stc
cmp
ljmp
out
cmp
imul
sbb
mov
mov
sbbl
xor
addl
sub
orl
mov
xor
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movl
adc
mov
mov
push
adc
xor
incl
mov
subl
add
jmp
notl
mov
mov
movl
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
jmp
sbbl
jae
out
xchg
xchg
push
lahf
mov
jle
push
jns
jle
lds
jo
in
arpl
jl
negl
fsubrs
xor
pop
stc
scas
mov
push
push
roll
mov
sub
push
rorl
inc
andb
mov
and
adc
sbb
push
cmp
sub
mov
mov
dec
icebp
mov
std
xchg
mov
test
inc
pop
fwait
mov
sub
pop
adc
fdivrs
test
and
lods
pop
sti
and
pop
call
jmp
push
rcll
sbb
cld
jbe
out
cmp
repnz
sar
add
jne
cmp
shrl
jns
push
rorl
mov
sbb
out
sbb
decl
imul
scas
mulb
sti
enter
lcall
jo
or
or
arpl
aas
insl
xor
jmp
lods
shll
mov
xchg
dec
or
sub
cmp
les
cwtl
ds
sbb
sub
pop
daa
mov
idivb
and
mov
mov
ret
mov
sahf
stos
xlat
es
inc
clc
xor
fistps
mov
sbb
das
inc
sub
test
sub
test
dec
pop
testb
pusha
xchg
test
mov
adc
cld
lods
adc
dec
xor
xor
pushf
mov
jo
pop
inc
push
xor
xor
dec
mov
lahf
hlt
lret
pop
insb
ss
mov
push
jne
sbb
cwtl
filds
fucompp
sahf
test
or
in
bound
rolb
push
mov
mov
in
outsl
cld
cltd
dec
fadds
inc
hlt
es
sub
dec
or
mov
lods
sahf
lret
stos
sub
jge
fildl
lds
int
sarl
addb
pusha
push
jae
ss
inc
lahf
imul
sbb
add
stc
or
xchg
inc
jge
fcoms
jne
lret
fwait
mov
icebp
xorb
xor
or
idivl
cmp
insb
lods
loope
mov
push
jmp
push
pop
push
xor
push
fwait
mov
ret
lret
push
fdivrp
movl
fcomps
push
mov
cld
sub
imul
std
loop
mov
orl
je
je
inc
xchg
pop
ret
sbb
xor
mov
ss
call
pop
jo
nop
inc
test
mov
in
adc
cwtl
push
push
push
not
out
or
fcmovnu
push
inc
bound
aad
sub
daa
inc
sbb
cmp
mov
adc
fs
add
ss
mov
sbb
aam
pop
in
inc
repz
pop
and
push
bound
sbb
add
test
cmp
jns
dec
xchg
mov
icebp
lret
mov
or
pop
mov
mov
pop
test
pop
push
es
mov
inc
insl
pop
and
push
popf
pop
add
push
pop
sub
push
movsb
fadds
push
push
jae
push
loopne
aad
and
stos
popf
rorb
add
test
jnp
push
enter
subl
inc
mov
jmp
cltd
mov
pop
rdpmc
fidivrl
inc
jg
jns
xchg
repz
inc
pop
or
adc
out
or
jb
dec
xchg
mov
add
xchg
push
cmpsl
xchg
pop
data16
inc
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
jmp
mov
or
push
jge
inc
xchg
add
mov
jns
jle
test
sub
test
lret
int
cmpsl
jnp
add
ss
jp
fnstsw
in
sbb
inc
sarl
cmp
leave
xchg
call
or
fldl2t
addr16
lods
pop
cmp
loope
fcmovu
xor
xlat
xchg
aad
sbb
mov
mov
adc
jno
sar
push
fwait
lret
fmulp
fsubl
icebp
outsb
stos
pop
cmp
jle
and
jae
cli
or
jmp
cmp
jns
idivb
inc
inc
pop
add
test
push
mov
jl
mov
add
in
xchg
sbb
dec
sti
xchg
test
sbb
aam
int3
notb
jmp
sbb
cltd
inc
cmc
mov
and
xor
dec
imul
push
enter
ficompl
repnz
dec
int3
leave
jge
sbb
rorb
dec
dec
imul
sbb
pushf
dec
testb
inc
icebp
xchg
sub
push
inc
fs
insl
lea
pop
lret
xchg
push
pop
pop
mov
xor
mov
repnz
lret
xor
inc
cli
xlat
jo
dec
dec
jo
dec
clc
aad
and
dec
sub
jbe
and
jno
xchg
pop
rolb
pop
sbbb
xchg
stc
push
push
jg
fisttps
adc
faddl
cwtl
cmp
popf
push
mov
jne
icebp
std
cmp
cmpsb
push
sbb
incl
mulb
xchg
or
and
fcomi
int
dec
out
out
inc
mov
xchg
lcall
es
xchg
test
enter
pop
sub
cmp
out
test
movsb
out
and
lds
jne
insb
scas
rol
cmp
sbb
inc
push
xor
inc
and
stc
scas
in
mov
adc
xor
and
in
push
fdivrs
mov
jo
lods
into
add
or
xor
and
lret
lods
out
cmp
cmp
or
jle
cmp
cmc
pushf
fiaddl
xchg
ja
in
rcr
inc
sub
test
into
lret
and
leave
sti
adc
push
or
ljmp
xchg
xchg
mov
adc
shll
cmc
mov
xor
jmp
and
gs
push
mov
in
gs
in
jae
pop
in
aas
adc
xchg
clc
cli
add
push
push
aas
mov
popl
test
pushf
jae
stc
mov
movsl
mov
gs
cmc
dec
mov
add
imul
and
outsb
or
and
scas
ss
popa
or
les
jp
std
adc
popf
pop
cld
dec
insb
out
push
testl
into
es
and
jns
mov
inc
daa
into
push
or
mov
pop
shlb
mov
fists
int3
lock
jne
mov
imul
pop
inc
fldenv
push
sahf
mov
cmpsl
fstpt
sbb
std
dec
push
hlt
pop
push
movsbl
fldt
xchg
jle
xchg
mov
mov
movsb
jmp
mov
mov
mov
push
gs
fstpt
insl
jg
mov
enter
add
fistpl
in
mov
pop
mov
push
insl
push
xor
adc
leave
jo
and
call
xlat
int3
or
sub
xchg
ret
mov
into
loope
add
pop
adc
test
ficoml
mov
in
sbb
mov
stos
mov
das
insl
mov
sub
in
call
jb
inc
clc
xor
add
mov
mov
jmp
pop
ret
jge
insb
jae
test
and
jns
jle
or
sbb
adc
mov
dec
sbb
mov
sbb
shrl
push
and
loopne
mov
movsb
lahf
mov
mov
push
mov
pandn
xchg
lds
gs
adc
in
jns
mov
pop
adc
mov
ds
mov
aas
lret
ljmp
ds
or
or
test
cvtps2pi
push
fadds
fcompl
std
cmpsl
ljmp
inc
mov
xor
rorl
sbb
aas
sbb
push
adc
insb
movsb
push
adc
jno
cmp
ret
fstl
jbe
or
shrl
clc
pop
and
jle
cmp
mov
arpl
or
and
iret
aas
pop
ficomps
fwait
ljmp
rorl
ficomps
jbe
sbb
mov
addr16
add
push
cmp
clc
pop
add
scas
mov
movsb
sub
add
ja
js
cmp
in
repnz
aad
or
out
sbb
jle
jp
adc
sbb
out
mov
push
test
sub
dec
pop
testl
int
lds
pusha
add
ljmp
les
out
push
std
and
adc
push
int
fnsave
and
enter
cmp
jne
sub
dec
inc
inc
fiadds
imul
push
sahf
fxch
adc
xor
shl
add
imul
and
mulb
pop
dec
lds
out
mov
sbb
andb
mov
inc
arpl
pop
repnz
clc
clc
rolb
push
lret
arpl
shr
jo
arpl
xchg
push
ror
or
sub
cli
add
push
fdivr
notl
hlt
scas
xor
aad
mov
mov
scas
movl
pop
fsub
pop
call
mov
xchg
xchg
xlat
movsb
movsb
mov
jae
out
and
stc
xchg
jg
pop
in
mov
iret
push
push
and
sarl
inc
xlat
out
fistpl
jbe
mov
cwtl
cmpsb
sub
pop
icebp
lds
aad
xchg
jo
jo
dec
mov
and
loop
fcoml
rorl
mov
jl
fdivrl
mov
mov
int
sub
or
inc
aas
test
push
mov
les
xchg
sbb
sub
pushf
pop
xchg
loope
fistl
or
ficomps
mov
xchg
aad
sbb
mov
adc
xlat
das
pop
push
jne
sbb
xlat
mov
loop
in
xor
mov
jmp
outsb
fsubs
add
adc
fs
push
scas
or
inc
or
mov
dec
stos
xchg
cmc
ds
jae
int3
cwtl
xchg
repz
dec
mov
mov
les
dec
pop
enter
movsl
sti
mov
testb
fsubl
jp
inc
cmp
mov
pop
outsl
mov
aas
adc
pusha
and
nop
cmp
test
jnp
out
adc
jp
xchg
repnz
inc
notl
sahf
popf
int3
cmpsb
sub
and
xchg
mov
je
pop
and
out
sarl
mov
imul
lcall
adcb
nop
inc
inc
lock
xor
out
pop
rolb
add
add
inc
add
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
jmp
enter
cmc
jne
mov
cli
mov
jle
push
jns
jle
aam
stos
mov
push
mov
mov
inc
push
mov
aad
int3
jge
imul
mov
push
cmp
xchg
ret
or
push
xor
ja
and
aas
dec
xor
jnp
lea
mov
lcall
lahf
in
add
lea
andb
cmpb
fisubs
push
pop
lcall
push
repnz
xchg
fcoms
sbb
or
mov
adc
negl
push
inc
dec
aam
add
mov
mov
lret
fs
push
push
sbb
xchg
aaa
arpl
stos
push
arpl
call
push
lods
cmpsl
pusha
dec
xor
sti
push
push
sbb
mov
aas
ret
sub
xor
in
rcll
or
lahf
mov
add
aam
insb
jl
cli
dec
loope
sbb
and
cmpsb
jnp
or
push
xlat
inc
mov
mov
jb
pop
push
cmovo
cmpsl
mov
mov
ret
xor
jle
jl
inc
dec
mov
mov
push
jmp
lea
pop
sub
inc
cmp
push
mulb
jno
pushf
popf
nop
sub
call
ret
out
inc
in
push
jo
lret
out
xlat
hlt
xchg
aam
lds
cmpsl
in
dec
push
sbb
and
sub
sbb
sub
add
xor
adc
adcl
cmpsb
out
outsb
or
or
mov
in
sti
movsb
in
fwait
outsb
cltd
pop
mov
cmpl
stos
cltd
mov
scas
testb
xor
pusha
mov
sbb
leave
lea
incb
xor
test
sar
rcrb
lcall
pop
shrl
mov
jmp
cmp
push
xor
add
jo
cli
sbb
in
dec
add
cs
xlat
clc
js
xlat
jno
es
push
js
cmp
imul
sbbb
cmpsl
jl
sub
std
mov
or
jl
fnstenv
mov
iret
push
je
int3
rcl
xchg
enter
xchg
loopne
pusha
pop
mov
pand
lods
ss
xchg
ja
cwtl
mov
lea
or
ret
addr16
test
orl
push
ret
sbb
enter
jp
pop
push
mov
fwait
aas
pop
das
sbb
inc
incb
xor
imul
xlat
or
xchg
sbb
mov
mov
jb
fwait
mov
lds
popf
test
fsubs
and
rcll
sbb
rcll
or
dec
cmpsb
sbb
inc
divl
sub
jecxz
jmp
mov
fistpll
mov
xor
outsb
mov
repz
addr16
sub
clc
dec
mov
cwtl
mov
and
jle
cmp
decl
sub
in
mov
aam
mov
aaa
add
scas
mov
dec
insl
mov
jb
shl
popa
cld
jb
in
sbb
in
and
insb
fsubrp
and
pop
icebp
and
or
insl
shrl
add
lahf
mov
insl
fisubl
sarl
dec
ficomps
xorb
and
or
insb
shrb
add
mov
out
inc
pusha
fcomp
xchg
and
fcoms
in
sub
scas
imul
cmp
std
sarl
test
in
imulb
dec
pushf
shrl
pop
jmp
popa
xor
add
cmp
je
movl
lea
mov
jmp
push
fdivp
imul
mov
cmpsl
dec
jnp
ret
and
push
jns
jle
xchg
mov
jge
xchg
xchg
dec
push
shll
jl
fiaddl
fmulp
jae
cmp
cli
push
push
sub
jbe
xchg
dec
insl
xor
js
xchg
cmpsl
cmp
add
std
rolb
clc
push
neg
mov
xchg
std
jmp
inc
xorl
add
lret
xchg
dec
fidivrs
or
dec
mov
adc
clc
add
push
divl
pop
outsl
repnz
test
nop
aaa
adc
adc
jle
dec
sub
scas
adc
cmpsl
jl
dec
inc
xor
dec
cmp
enter
mov
popf
or
jle
cmpsb
out
mov
cmp
adc
adc
pop
outsl
test
cmp
jns
push
lret
sahf
mov
mov
mov
daa
mov
cmp
repz
xor
dec
cli
jnp
xchg
xchg
imul
mov
add
adc
jne
out
jno
iret
push
neg
out
lea
add
inc
xchg
test
pop
push
rolb
ljmp
mov
mov
xor
imul
outsl
cli
js
cmc
cmp
rcll
add
pop
scas
or
push
clc
add
mov
testl
and
aad
sahf
push
or
ljmp
jg
jmp
xchg
add
xlat
fstpl
pop
add
scas
sbbl
stos
adc
fidivs
or
lret
mov
mov
sub
lods
rcrb
jmp
movsl
jge
es
sub
test
insl
adc
into
or
daa
pop
inc
xchg
fsubr
inc
push
sub
add
shrb
icebp
mov
or
arpl
inc
mov
add
jbe
jmp
cmp
test
addr16
mov
push
xor
cmpb
pop
jp
fdivrs
xor
or
mov
and
insb
shlb
mov
ficoml
cmp
movsl
repnz
push
xor
xchg
insb
cli
cmp
xchg
iret
adc
das
xchg
pusha
mov
jge
add
cs
ret
add
sub
fucom
pop
sub
fsub
movsb
lcall
adc
jp
pop
pop
jp
xchg
movsl
scas
sbb
xor
lret
mov
fs
mov
in
test
cmp
or
int
repz
data16
sbb
mov
ja
adcb
fsubrs
lret
adc
mov
ret
dec
lahf
xor
pop
daa
mov
add
das
in
fnstenv
cmpl
cmp
push
pushf
fsubs
adc
testb
jl
dec
fisubrs
dec
lds
xchg
call
into
push
in
out
enter
jmp
imul
mov
aaa
or
xchg
and
push
cmp
test
lret
inc
testl
push
inc
xor
cmpsl
js
mov
inc
loope
pop
push
xor
jbe
jmp
inc
pop
fisttps
cmp
inc
lcall
push
mov
inc
mov
sahf
sbb
sahf
cmp
adc
jp
cmc
pop
push
push
je
mov
pushl
xchg
pop
in
shrl
and
push
mov
sub
mov
push
das
int3
sbb
pop
ljmp
nop
out
leave
aam
jle
sub
int
shll
je
mov
insb
shr
loop
fldenv
mov
insb
mov
stc
jno
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
sub
jmp
pop
mov
and
jno
dec
call
push
and
sbb
jle
pop
jg
jle
inc
outsl
adc
in
test
pop
sti
pop
pop
and
repz
mov
cli
push
and
or
movsl
and
xlat
mov
test
ret
clc
mov
inc
cltd
xor
add
scas
fsub
aam
hlt
mov
jecxz
cmp
jmp
mov
in
pop
cmp
sub
push
imul
pusha
scas
cmp
lods
xor
movb
das
lock
and
mov
mov
mov
xor
clc
mov
idivl
mov
insl
pop
sbb
jae
or
xchg
fldt
fcomp
cmc
dec
cmp
aas
jl
dec
mov
scas
sub
loope
in
aaa
iret
arpl
inc
aas
test
jge
loope
jg
jp
mull
pop
xlat
cli
bound
std
arpl
mov
xchg
inc
mov
fs
jge
pop
cmpsl
negl
mov
ja
cmpsl
mov
fucom
add
add
sbb
shrb
imull
js
nop
stc
subl
mov
push
loope
clc
lret
pop
and
adc
fnstcw
mov
ss
dec
inc
lods
add
mov
ret
aam
or
enter
jmp
fldenv
mov
sub
jge
or
rorl
add
leave
repnz
jne
ficompl
pop
shr
xchg
test
mov
stc
xor
jle
leave
lods
pop
inc
adc
xor
mov
xchg
mov
loop
repnz
imul
mov
popa
jnp
inc
data16
sbb
es
je
xchg
subb
mov
loope
or
in
ret
dec
lds
in
pop
xchg
jg
push
or
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
pushl
call
mov
dec
mov
jmp
movl
mov
xor
push
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
inc
mov
incl
mov
xor
xor
mov
add
xorl
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
jmp
imul
jge
push
pop
loopne
lea
jle
jg
jle
xor
jb
mov
jecxz
es
push
mov
loop
arpl
xchg
mov
andl
and
adc
test
sub
lret
mov
xchg
fdivl
sbb
xchg
pop
nop
mov
jbe
daa
or
sbb
pushf
repz
push
jl
in
sub
fiaddl
pop
je
cli
fimuls
mov
jns
dec
add
pop
inc
lahf
cmp
add
popa
xchg
sub
dec
pop
lds
xchg
das
aad
cmp
cmp
xchg
inc
sbb
fsubrs
jmp
mov
adc
pop
ror
pop
mov
cmp
mov
lret
in
sub
mov
das
cmp
aad
imul
stos
scas
cli
xlat
push
lods
push
xor
in
add
shrl
lea
lcall
psubq
mov
xchg
out
int3
lahf
xchg
dec
imulb
adc
jp
and
push
adc
mov
add
or
imul
loope
test
ret
sbb
lea
dec
mov
mov
repz
mov
jmp
push
int
jbe
sarl
clc
loopne
add
mov
call
xor
dec
loopne
mov
jmp
cwtd
jg
fisubrl
or
cmc
repnz
in
pushf
or
mov
or
enter
sub
push
pop
and
ficomps
insl
loop
mov
pop
loope
out
inc
lahf
mov
pop
mov
stos
xor
sbbb
in
mov
lcall
jge
data16
push
xchg
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
jmp
sahf
jb
push
pop
jl
jb
ret
mov
xor
jle
les
jle
cli
push
clc
aas
pop
xor
scas
idiv
pop
imul
cmp
mov
add
cwtl
sub
test
mov
stos
aaa
filds
divl
sub
push
rclb
test
es
or
in
pop
jecxz
xchg
bound
inc
lea
xor
pop
mov
pop
mov
pushf
hlt
insb
in
out
lods
mov
scas
sub
pop
das
hlt
ds
pop
pop
mov
sbb
mov
in
mov
gs
pop
push
into
sbb
iret
movl
push
mov
adc
push
fs
cmc
test
sub
dec
push
pop
jno
adc
mov
fs
xchg
xor
imul
in
mov
fwait
sti
ss
push
cs
xor
popa
mov
test
out
mov
mov
in
mov
inc
mov
adc
iret
in
sbb
cmp
lea
cmpsb
sbb
rclb
fstl
sbb
addr16
dec
xor
lret
add
sub
mulb
inc
aaa
add
shrl
mov
push
je
or
and
mov
scas
ss
mov
push
popf
mov
jno
or
mov
out
pop
mov
and
mov
xor
jo
xchg
sub
or
xchg
adcb
mov
aad
sbb
test
dec
push
or
dec
sub
and
mov
or
adc
cmp
pop
dec
enter
jle
jb
test
stos
leave
out
mov
fsub
sub
insl
sbb
jl
repnz
xchg
inc
jns
jl
mov
fcompp
adc
cmpsb
out
push
pop
and
or
xor
lods
push
outsl
mov
dec
inc
add
lods
cld
fidivrs
aas
cmp
lds
bound
out
mov
repz
or
sub
mov
adc
out
addl
add
mov
enter
inc
inc
xchg
ljmp
cld
or
mov
add
sbb
ficoml
mov
pop
gs
xchg
jae
xlat
aas
lods
adc
jae
arpl
shrb
sbb
lods
cmpsl
ret
cmp
sar
adc
fisttpll
adc
jne
leave
cld
leave
iret
adc
dec
jb
push
repz
cli
sbb
sub
es
out
cmp
stc
in
cld
xchg
and
fistpll
ja
cld
test
sub
dec
xchg
sbbl
or
jne
inc
jae
push
xchg
subb
add
or
push
popf
jae
jo
call
fsts
enter
sbb
mov
inc
daa
sahf
andb
sti
dec
push
push
fcompl
lods
fs
sahf
adc
iret
push
mov
xchg
jb
sti
mov
ds
fiaddl
lahf
cld
mov
movl
mov
jmp
xchg
jb
jg
dec
mov
cs
ss
les
jle
pop
ljmp
xor
inc
js
scas
mov
add
scas
pop
ret
jne
mov
xor
inc
arpl
xchg
inc
jnp
icebp
fdivrp
fwait
int
mov
xchg
pop
test
es
pop
cmp
sub
pop
adc
stos
mov
invd
pop
xchg
mov
scas
push
push
aad
dec
add
sub
mov
mov
test
mov
xchg
jge
test
ljmp
sbb
and
sub
pop
fidivs
shlb
mov
xchg
shll
icebp
dec
xchg
xor
mov
xchg
mov
fs
ljmp
sbb
ret
lea
adc
mov
stos
mov
pop
jne
movsb
adc
jmp
in
cmp
jg
xlat
mov
int3
inc
and
pop
lock
and
mov
push
pop
nop
loop
mov
mov
divl
mov
js
rep
clc
mov
roll
imull
xchg
mov
ret
or
popf
mov
fidivs
and
sti
das
ret
add
vcvtsi2ssl
pop
fs
jo
cmpb
push
cltd
aaa
scas
xchg
insb
mov
icebp
mov
loope
subb
test
or
add
ss
rorb
sub
lcall
ret
add
push
xorl
ret
or
insb
test
in
testl
cmp
mov
jg
sub
pop
test
and
loope
push
push
cmpsb
icebp
outsl
lahf
xor
or
mov
inc
push
divl
sub
adc
push
sti
sbb
lahf
inc
mov
mov
push
mov
fsubl
imul
pop
fisubrl
les
mov
stos
cmp
inc
pop
or
or
and
mov
aam
data16
rol
xor
out
test
nop
mov
mov
stos
jecxz
das
inc
inc
lods
gs
cmp
and
jbe
dec
test
jo
cmp
add
cmpsb
pop
gs
repnz
mov
out
push
sarb
dec
cmp
sub
fisttpl
pop
daa
dec
dec
out
jo
push
mov
daa
mov
sbb
and
cltd
clc
xlat
into
pop
stc
js
ss
rorl
out
xlat
inc
and
dec
sahf
dec
jge
notb
popa
adc
in
fsub
jge
adc
inc
mov
cld
js
pushf
push
jno
mov
cmp
xchg
ss
adc
sub
xor
jne
dec
out
stos
xchg
and
dec
dec
or
jno
mov
mov
addl
lods
and
ret
mov
rcll
inc
push
insb
negb
aad
jp
jb
cmp
pushl
dec
jbe
dec
cmpb
mov
add
jmp
mov
mov
jle
add
cmp
push
movl
movl
jmp
mov
pop
arpl
mov
cmc
mov
les
jle
insb
and
add
xor
lcall
mov
dec
add
inc
shl
test
hlt
xchg
mov
dec
pop
int3
test
pop
dec
push
sub
mov
pop
iret
shl
lea
push
jnp
mov
xor
or
pop
mov
pop
fdivrs
cmp
lea
dec
cmp
mov
loop
pop
pop
dec
jnp
shlb
movsb
mov
sub
add
loope
mov
jne
add
test
and
pop
mov
fdivrs
filds
add
and
cs
pop
sub
loop
neg
cmp
dec
imul
scas
nop
iret
cld
test
push
aad
or
sbb
xor
out
mov
lods
sub
sbb
push
in
in
fs
aam
cmp
andl
xlat
adc
cmp
jno
and
aas
iret
ljmp
fcomps
inc
xchg
push
inc
add
loop
ja
shlb
outsl
in
sbb
xor
xchg
popf
inc
lret
dec
in
mov
pinsrw
insb
movsb
call
fldenv
scas
int
push
rorl
jne
mov
lret
repnz
mov
in
sbb
cmp
cmp
scas
shlb
bound
jg
hlt
jecxz
mov
into
sbb
movsl
sub
daa
adc
xchg
pop
fbld
sub
dec
cs
das
mov
mov
js
xor
shlb
inc
xchg
enter
ljmp
cs
hlt
jae
inc
mov
add
mov
push
mov
xchg
inc
repz
movsb
dec
loope
incb
pop
xchg
nop
inc
rorl
mov
dec
shl
scas
repnz
ss
ds
outsl
xor
or
adcb
shlb
cwtl
loopne
xchg
mov
and
mov
xchg
mov
adc
std
xor
jbe
mov
lea
roll
ret
leave
xor
add
mov
rcl
push
xor
jb
in
inc
in
mov
add
orl
sbb
leave
sub
insb
push
pop
ds
sbb
dec
lcall
in
jo
adc
and
mov
mov
ljmp
test
mov
iret
sub
test
pop
popf
es
aas
shrb
fsts
stos
out
roll
and
push
out
inc
inc
dec
mov
xor
add
cwtl
test
mov
and
inc
mov
repz
fiaddl
push
sbb
xchg
ja
mov
notl
inc
mov
cmpsb
mov
iret
test
rclb
lret
daa
xlat
repnz
fwait
sub
fmuls
mov
add
lahf
sahf
loope
pop
das
dec
cwtl
push
andb
cmp
jne
add
mov
andl
mov
subl
xor
or
mov
andl
add
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
jmp
movsb
jb
push
cld
pop
gs
call
jno
mov
jle
les
jle
lret
and
sub
mov
push
mov
jo
mov
popa
pop
ret
adc
pop
clc
inc
mov
lahf
insl
sub
cwtl
pop
mov
insl
out
cltd
xchg
pop
in
daa
sbb
lods
pop
push
mov
clc
inc
sbb
pop
lods
rcrl
ficoml
sbb
loope
ss
aas
lret
xchg
push
and
xor
stos
add
dec
outsl
and
jmp
test
xlat
bound
in
loop
out
sbb
add
jbe
or
and
jl
inc
scas
jbe
xchg
cld
jle
enter
push
jae
mov
and
cli
leave
or
pop
aam
jae
xlat
in
jb
call
xlat
inc
fnsave
dec
dec
mov
cli
cmp
cld
addl
outsb
and
jno
add
mov
or
int
test
or
push
adc
fbld
mov
imul
mov
mov
sbb
fldcw
insb
xlat
les
dec
adc
sbb
xchg
mov
pop
add
xor
jns
shll
xchg
xor
cld
ret
mov
mov
jno
mov
and
lcall
lds
std
popa
xor
and
jbe
xor
outsl
pop
scas
push
scas
fdivs
xchg
loop
cmpsl
fcomi
xchg
inc
sbb
xor
test
xor
push
and
daa
in
sti
dec
mov
jne
and
push
and
sbb
fs
sbb
jp
or
mov
movd
lahf
dec
add
xchg
xor
xchg
mov
outsb
mov
jo
mov
dec
iret
lea
inc
jp
pop
shl
cmp
xchg
inc
lret
cmp
xor
adc
push
xchg
sbb
push
shlb
adc
outsb
ret
mov
and
in
sbb
test
dec
sub
pusha
cmp
fisttps
or
or
enter
jmp
jb
enter
jl
mov
lea
hlt
cmp
sbb
in
pop
mov
pop
sub
aas
xchg
jnp
int
enter
in
test
imul
scas
bnd
daa
inc
pop
sti
in
aas
inc
aaa
clc
ror
into
mov
mov
cmp
and
push
mov
and
sub
xor
in
jmp
inc
push
push
sub
sub
in
jne
mov
test
out
in
repnz
shlb
out
icebp
ds
pop
loopne
jl
adc
push
push
mov
xchg
andl
mov
mov
rcl
lret
xchg
jbe
push
enter
pop
pusha
in
int3
nop
ja
cltd
mov
rcrl
lock
idivb
push
sbb
in
adc
mov
mov
insb
mov
repz
pop
fcoml
loop
je
leave
ret
push
mov
sub
movl
movl
mov
mov
sub
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
jmp
and
ss
cmc
lock
sahf
rol
scas
lods
mov
jle
dec
jns
jle
insb
test
out
dec
push
imulb
sub
in
xor
and
add
test
xor
cmp
mov
das
mov
ficoml
xor
daa
or
mov
dec
xchg
mov
stos
sbb
in
mov
jecxz
out
dec
shll
leave
mov
fs
inc
ds
or
pop
in
sub
cmp
lret
movsb
ret
testb
sbb
mov
pop
sub
fcoms
adc
jbe
in
jns
xor
jg
mov
js
mov
out
or
shlb
adc
sbb
mov
add
add
cmp
stos
repnz
adc
std
popa
call
xchg
mov
pop
mov
add
arpl
pop
sbb
jg
test
add
sti
push
repz
icebp
addb
mov
cmp
test
incl
jl
fildll
sbb
dec
sbb
int3
push
mov
push
cmpsb
and
xchg
or
mov
cli
lods
cmpsl
popf
adc
aaa
das
adc
jge
dec
andl
in
add
sbb
cltd
inc
pop
jmp
push
repz
mov
ffreep
or
mov
dec
sbb
fbstp
inc
mov
mull
jl
push
mov
push
repnz
bound
cmp
and
lret
mov
and
xchg
or
icebp
movsl
and
jp
test
js
ds
cmp
adc
inc
inc
decl
sub
or
popa
add
xchg
xchg
dec
adc
cli
leave
add
push
jp
bound
scas
mov
dec
pusha
pop
dec
adc
addb
jmp
repz
adc
or
arpl
dec
mov
jae
jle
je
push
xchg
rorb
aas
out
cmp
dec
out
mov
mov
rorl
adcb
mov
rolb
movsl
jecxz
repnz
lea
gs
xchg
cld
jbe
iret
jo
sub
stos
pop
mov
lret
inc
ljmp
insb
idivl
dec
dec
xchg
fs
pop
mov
divl
or
xchg
imull
pop
fisubl
popa
mov
cmp
mov
mov
pop
mov
mov
xor
jnp
loope
jecxz
push
jne
sub
in
push
lret
loopne
or
mov
scas
cltd
ret
xchg
cmp
inc
xchg
adc
mov
cmp
jle
dec
xchg
aam
xor
add
pop
inc
sbb
sbb
scas
std
cmp
lods
mov
ret
dec
inc
repz
ja
cwtl
cmc
ljmp
cld
pop
or
movsl
loop
ljmp
mov
scas
jnp
int3
sub
adc
insl
mov
repz
fadds
ret
aaa
adc
mov
adc
cltd
inc
cs
cs
cmpsb
test
xor
bound
mov
js
inc
or
je
mov
or
jne
les
and
mov
jmp
ss
in
push
call
mov
loop
inc
lahf
sub
pop
movsb
ds
pop
mov
into
inc
ds
cmpb
dec
jno
insl
jno
nop
cmc
mov
cmp
dec
cmc
lds
jnp
lea
movzwl
and
mov
mov
adc
mov
sbb
mov
push
sub
lea
mov
xor
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
jmp
call
mov
dec
mov
push
inc
pop
xchg
lods
rorb
jle
jns
jle
scas
mov
or
test
and
xlat
sbb
outsb
fidivl
test
xlat
dec
fmul
aaa
jne
mov
std
cmpsb
cmp
ja
dec
push
out
je
iret
ja
mov
scas
in
cli
inc
mov
mov
sub
outsl
or
out
test
sbb
mov
loope
dec
pop
inc
icebp
push
adc
insl
push
andb
pop
or
leave
dec
dec
jbe
pop
insl
inc
outsl
pushf
popf
cmpsl
jnp
clc
sbb
scas
insl
in
faddl
mov
mov
sbb
lock
xor
movl
mov
iret
xchg
lcall
cmp
fadds
daa
jp
sub
bound
bound
aam
ss
mov
cwtl
jae
push
mov
inc
bound
hlt
xchg
jmp
pop
adc
push
icebp
inc
rcpps
ficompl
jge
jae
cs
or
mov
test
fidivrl
jbe
dec
jb
xor
ja
xor
mov
xlat
inc
lods
xor
ss
add
test
insb
stc
inc
ljmp
out
stos
adc
xor
lret
in
mov
or
repz
les
andb
or
addr16
out
loopne
test
in
mov
jb
dec
aad
insb
dec
fs
xchg
cwtl
jns
xchg
sti
cwtl
lock
mov
stc
cs
fdivrs
mov
mov
inc
pushf
or
out
add
roll
fsubrs
and
xchg
cmp
iret
ret
test
movsb
dec
mov
sub
out
insl
mov
inc
and
inc
inc
lds
popf
xor
arpl
sub
inc
ret
sbb
in
js
out
je
lods
out
jmp
push
hlt
mov
into
push
jl
or
mov
inc
xchg
xor
mov
cmpsb
or
mov
cli
lods
insb
cwtl
out
pop
lods
scas
push
and
negb
xor
sbb
mov
adc
fcmovnu
shll
pop
pop
mov
adc
icebp
shrl
aam
dec
scas
bswap
mov
imulb
ret
mov
fwait
cmp
sub
arpl
dec
in
test
inc
push
jnp
xchg
lret
dec
fldl
int
jmp
xchg
arpl
adc
push
int
xchg
stos
jbe
jb
out
push
dec
call
jle
lods
and
pop
pop
jne
jge
or
cld
aam
test
repnz
ficomps
stos
clc
mov
sbb
aam
fdivrs
loop
orl
sbb
xchg
repnz
enter
xchg
fcoms
jb
push
push
das
or
xor
icebp
gs
inc
cmp
cmp
add
or
or
mov
push
aad
and
int3
popf
sub
jg
bound
repnz
cmpsb
xchg
vmread
jo
stc
cmpsb
arpl
push
lret
out
sub
adc
xor
mov
mov
mov
cltd
lock
scas
mov
pop
push
dec
int3
es
mov
out
lock
or
inc
adc
loopne
cmpsl
es
data16
lods
sub
inc
mov
nop
jns
arpl
xor
sarl
arpl
pop
int
mov
es
dec
xchg
adc
jl
in
push
cmp
aad
data16
mov
mull
insb
push
xor
dec
insl
cli
enter
jl
mov
add
repnz
inc
pop
push
iret
pop
daa
mov
xor
mov
mov
mov
mov
xor
mov
xor
sbb
mov
xor
addl
xor
add
sbbl
add
div
mov
jmp
inc
push
sti
sbbl
mov
mov
dec
jns
jle
sahf
add
lcall
add
arpl
and
jl
test
out
loopne
test
mov
les
in
aas
mov
jge
push
insl
and
or
mov
fcmovbe
ljmp
fwait
cld
out
pushf
jg
int
cmp
std
push
lock
fimull
pop
xchg
int3
sbb
dec
pop
sub
mov
negl
jmp
sub
rcrb
mov
and
sbb
adc
or
repz
fidivrs
addr16
cld
jp
add
repz
fisubl
pop
loopne
mov
in
and
jecxz
cmp
arpl
jbe
insb
ja
data16
push
and
jmp
test
lahf
fadds
sahf
xor
push
mov
xor
out
scas
adc
pusha
bound
xchg
into
in
enter
pop
add
and
sub
iret
sarb
pop
cwtl
push
pop
cmpsl
jnp
push
sub
xor
push
fimuls
popf
daa
aas
xchg
push
dec
mov
fisttps
aad
into
je
jl
push
cwtl
mov
ss
mov
xlat
jp
or
xchg
mov
invd
jg
outsb
xchg
push
sarb
mov
imul
outsb
mov
inc
add
lsl
xor
les
push
popa
xchg
push
xor
iret
in
xchg
in
movsl
aad
lret
je
rcll
ss
call
xchg
stos
dec
mov
cmp
ret
mov
shll
push
inc
lods
mov
and
int
inc
test
imul
insl
test
pop
outsb
jl
clc
loope
js
push
loopne
pop
cmp
add
xor
pop
jg
cld
jbe
sub
fstpl
fstpt
lea
pop
in
xchg
jae
aaa
and
stos
and
adc
hlt
or
add
sub
stos
sub
mov
mov
lock
cmp
mov
in
xchg
and
cli
xlat
or
mov
mov
lret
push
insl
mov
aas
fisubrl
pushf
popf
scas
scas
or
pop
lahf
or
pop
imul
add
or
sbb
fdivrl
popf
sbb
mov
mov
xchg
ret
xor
mov
or
and
dec
or
out
ret
jle
jg
insl
mov
cmp
xchg
out
sub
test
jge
aad
fidivrl
ss
lret
cmp
in
jle
lahf
int3
adc
dec
sbb
dec
jnp
pushf
pop
sbb
lock
pop
pop
push
xor
into
pop
mov
add
mov
adc
out
mov
mov
sub
adc
cmp
xor
rolb
push
in
jno
and
imul
jl
inc
in
les
sahf
subb
pop
push
and
jb
pop
jg
shr
out
sub
divb
test
test
fwait
test
sub
lods
lock
nop
pop
xchg
cmpsb
aaa
rcrb
incl
and
lret
out
cmp
mov
aaa
loop
icebp
or
mov
frstor
mov
xor
xchg
pop
dec
inc
jecxz
mov
and
cmpsl
out
mov
or
les
testl
jb
cmpsl
inc
lret
imul
mov
movl
jmp
xchg
mov
jae
popf
cld
ja
or
out
ret
jle
dec
jns
jle
push
int
fucomip
mov
dec
sti
sub
aas
je
das
xorb
test
shrb
scas
addr16
and
insb
je
sbb
mov
push
addb
and
lock
jg
push
mov
addr16
or
sbb
stos
xchg
mov
pop
ret
mov
cmp
mov
add
mov
inc
sti
inc
out
aad
dec
test
fcomi
repnz
inc
hlt
in
movsb
pop
ret
mov
jne
lcall
push
xchg
jg
jne
xor
pop
fistpll
outsb
mov
xlat
mov
shrd
pop
shrl
mov
scas
bound
add
jbe
shlb
mov
cmpl
cs
aas
je
iret
pop
adc
xor
inc
jmp
leave
pop
ljmp
mov
jge
push
rolb
inc
mov
pop
push
nop
inc
pop
enter
sbb
shll
cmp
cmp
sub
xlat
test
or
sbb
mov
jae,pt
or
jmp
test
sbb
jns
sahf
popf
inc
out
addb
insl
sub
stos
inc
lcall
push
stos
mov
jg
inc
rcl
jp
cmp
mov
test
addr16
lds
dec
or
mov
lret
or
in
sbb
cmp
movsl
andl
pop
mov
xchg
mov
lods
xchg
xchg
add
xchg
mov
jns
dec
mov
gs
xchg
div
outsb
jecxz
pop
or
loopne
mov
lcall
call
mov
xchg
lahf
rcll
cmp
or
jbe
outsb
fs
and
popa
push
loop
mov
xchg
rclb
or
insl
ret
mov
sub
pop
imulb
gs
jne
push
xor
ja
mov
xchg
adc
lret
mov
and
outsb
ss
mov
jnp
inc
insb
ret
addl
jl
push
push
pop
fbld
mov
bndldx
insl
add
sub
mov
pop
xor
cld
and
das
push
fstpt
dec
mov
lds
push
bound
nop
or
pushl
xor
add
iret
test
xlat
ret
mov
shlb
jbe
ret
out
in
mov
mov
daa
push
xchg
xorl
pop
push
mov
pusha
mov
or
lods
nop
stos
dec
sub
and
sbb
mov
and
leave
lock
jecxz
hlt
push
mov
adc
sbb
fdivrs
sbb
inc
jne
adc
mov
jg
cli
dec
jnp
movsl
imulb
pop
xor
test
mov
cmp
jp
add
lods
sbb
andl
cli
fsubrs
insl
subb
sub
add
das
sti
xchg
adc
cs
dec
adc
xor
scas
dec
out
xlat
dec
mov
lahf
in
mov
fs
xorl
fnstenv
in
or
pop
xchg
je
jns
test
enter
les
jns
xchg
inc
xchg
xchg
loop
xchg
xchg
lea
dec
sbb
inc
pop
xor
jmp
push
push
cmp
enter
mov
pop
jno
mov
sbb
movl
movl
cmp
movl
je
movl
lea
addl
mov
xor
mov
not
mov
orl
imul
movl
mov
movl
mov
cmp
je
mov
mov
sub
sub
mov
orl
mov
xor
add
pop
pop
jmp
pop
add
or
add
push
ret
sarl
iret
jle
dec
jns
jle
mov
xchg
cltd
sub
inc
xchg
jbe
sbbl
mov
movl
xor
fcoms
leave
lds
loope
idiv
xchg
adcl
call
dec
popf
mov
movsl
hlt
es
inc
push
xchg
rcll
mov
jle
lcall
mov
outsb
pop
out
ret
lods
xor
test
ljmp
cmp
enter
stc
sub
out
movsl
xchg
pop
and
loop
or
inc
mov
pop
pop
aaa
add
mov
and
mov
adc
push
push
mov
loope
and
or
mov
inc
or
sbb
mov
jb
fistps
popf
aam
jle
xchg
outsb
adc
flds
pop
outsb
and
xchg
fwait
pop
popf
shll
inc
mov
fidivs
adc
out
xchg
mov
sbb
cmpsl
icebp
sbb
in
idiv
or
mov
loopne
ja
xor
lods
test
cmp
stos
testl
inc
fsubl
add
mov
in
leave
shll
xor
pop
xlat
sbb
es
jns
cmc
in
push
dec
aas
sbb
dec
out
push
fnstcw
mov
leave
push
flds
or
dec
xor
test
aad
les
idivl
adc
mov
or
bound
or
lahf
inc
clc
js
imul
mov
add
out
movsb
pushf
outsb
jns
sub
loop
scas
add
xlat
add
jo
test
roll
mov
pop
inc
loop
lods
ja
or
and
mov
jge
pop
jmp
mov
les
inc
into
jp
pop
test
aad
mov
push
pop
cmp
hlt
popa
mov
adcl
xor
adc
fisubs
fmul
cs
push
mov
rcl
fildll
daa
cmc
outsl
aaa
push
lcall
shlb
movb
mov
jno
mov
push
inc
adc
xchg
fwait
loope
gs
or
dec
int3
adc
mov
push
pop
inc
xor
mov
lods
and
jle
adc
or
gs
pop
mov
adc
push
bound
jb
pop
or
aad
flds
push
cmp
int
xchg
sahf
push
adc
pop
mov
dec
sar
dec
inc
sti
mov
push
jo
fwait
or
inc
cmpsl
push
int3
cld
cs
jp
gs
mov
mov
rolb
outsb
dec
je
cmp
clc
fnop
lcall
sub
jno
xchg
pop
repnz
xor
mov
jmp
add
nop
or
mov
imull
fs
mov
sbb
leave
adc
xor
shrb
and
add
out
add
loope
repnz
cli
sbb
adc
jl
in
sbbl
pop
cwtl
cs
aaa
push
imul
repz
jg
pusha
sub
aas
mov
fmuls
filds
pop
lods
xchg
pop
add
push
divb
out
dec
push
push
cmc
push
and
movsl
out
aam
xchg
cwtl
test
nop
shlb
ds
ja
addr16
mov
xchg
addr16
sbb
adc
pop
xor
nop
pop
cmc
icebp
dec
inc
mov
dec
xor
std
jns
cld
add
sbb
mov
rcr
or
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
jmp
ret
or
insl
pop
jmp
pop
sbb
or
jle
dec
jns
jle
iret
fisubrl
out
es
incb
iret
dec
sub
ds
mov
addr16
push
and
iret
in
inc
mov
subl
mov
rolb
lods
dec
push
and
dec
mov
orl
xor
mov
js
aaa
icebp
cmp
mov
pop
scas
in
and
jmp
rcrb
mov
xchg
xlat
loope
sub
stc
roll
mov
jle
test
xor
fmuls
int
push
push
inc
cltd
stos
repnz
fistl
sbb
or
sub
addr16
mov
add
out
shlb
in
jae
xor
xchg
jl
or
push
ljmp
movsb
imul
cli
mov
aas
sbb
cmp
push
mov
nop
xrstor
xchg
sbb
lods
inc
fcmovbe
stc
jg
dec
cld
mov
adc
sbb
mov
mov
cmp
movsb
hlt
jg
int
mov
mov
cli
insb
mov
std
add
pop
fisubs
add
cmpsl
sti
cmp
or
inc
js
movsb
shl
pop
mov
mov
shr
pop
in
cmp
shl
daa
push
jecxz
inc
rcl
jge
testb
mov
arpl
push
testb
pop
pop
ljmp
dec
and
push
jae
mov
fldenv
pop
int
mov
insl
jns
xchg
mov
es
jl
hlt
fistpl
lret
adc
mov
and
add
mov
xchg
cmc
and
sbb
ds
adc
mov
aad
cwtl
hlt
mov
mov
das
pop
scas
lret
add
cltd
adc
sub
sbb
or
movsb
dec
cli
int
in
dec
sar
mov
mov
pushf
sub
adc
add
jne
dec
xchg
inc
arpl
adc
insb
lcall
inc
cmpsb
out
rclb
lretw
ds
loop
push
mov
xchg
push
add
cmpsb
jge
dec
push
xchg
std
sbb
call
push
xchg
testb
popf
scas
fisubl
iret
and
mov
stos
subb
aaa
mov
loop
xchg
pop
jne
dec
out
mov
aad
sbb
and
pushf
push
adc
mov
icebp
idiv
out
xor
into
test
add
cld
fmull
xor
add
xchg
ja
int
jo
cmp
stc
sub
sbb
push
or
nop
dec
cli
int3
hlt
push
sbb
jecxz
or
bound
mov
into
xchg
movsb
or
and
xor
add
outsl
xchg
inc
movsb
pop
dec
xorb
fmuls
xor
test
sbb
adc
mov
xorb
movsl
fprem
sub
aaa
pop
stos
mov
xor
insb
aad
insb
xchg
mov
dec
mov
mov
stos
pop
in
xchg
movsb
jae
mov
cmp
repz
bound
aaa
mov
push
sbb
mov
xor
stos
mov
sbb
jbe
imul
enter
and
mov
mov
lcall
sub
mov
dec
add
jle
fucomi
fdivrl
in
data16
int3
and
jbe
mov
mov
imul
pusha
jne
out
scas
in
jo
jmp
jge
and
jecxz
stos
rcrl
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
jmp
int
adc
push
pop
dec
xchg
leave
mulb
xchg
jle
dec
jns
jle
cmpsb
add
mov
movsl
adc
fisttpl
jmp
cltd
mov
iret
fsubp
popf
jle
pop
out
sub
lds
daa
rcrb
lods
sub
mov
mov
test
jg
fmulp
inc
mov
jmp
cs
sub
mov
sub
sub
push
dec
insl
xchg
icebp
test
cmp
mov
jbe
outsb
mov
xlat
fwait
mov
pushf
daa
add
xor
inc
ss
pop
loop
sbb
xor
sub
aad
in
movsb
adcb
push
outsb
inc
xchg
mov
cmpsb
scas
stos
mov
adc
popf
pop
outsl
add
lret
ret
lret
mov
mov
in
mov
rcll
mov
dec
cmp
int
mov
add
push
outsl
push
cli
dec
rclb
out
inc
sbb
vunpcklps
leave
cmpsb
lods
adc
dec
cmp
and
test
ja
inc
das
imul
and
repz
mov
push
xlat
mov
inc
xchg
xchg
rolb
sbb
lds
cltd
cltd
mov
inc
inc
lret
mov
add
scas
nop
dec
cwtl
pop
or
nop
popa
out
cmp
into
mov
jbe
rcrl
cmc
and
mov
push
je
xchg
fdivs
dec
push
sbb
inc
sub
inc
cmp
jae
lea
add
lcall
nop
add
jge
and
int
gs
sub
xchg
lock
or
aas
in
xor
mov
repnz
sub
jbe
test
jle
ds
movsb
sti
or
jno
icebp
aad
pop
enter
jge
fs
jns
in
aaa
xchg
sub
bnd
xlat
cs
test
stos
jp
out
insl
pop
pop
aas
test
bswap
dec
lock
aad
lahf
xor
insb
and
loop
test
pop
in
test
and
in
repz
test
dec
orb
xchg
ret
call
mov
leave
push
pop
pop
popf
pop
mov
fisubrs
inc
or
ret
pop
dec
rolb
lods
test
add
iret
dec
mov
cmp
fstl
shlb
gs
int
hlt
sarl
mov
mov
add
ljmp
dec
adc
pop
mov
mov
and
out
into
push
stos
and
in
mov
mov
lods
or
aam
lods
fdivrs
cltd
xchg
scas
stos
cmc
xchg
push
mov
cmpsl
or
push
jl
or
add
fcomps
adc
aam
mov
dec
testl
gs
lock
jl
cli
das
lods
mov
dec
mov
mov
sbb
sub
roll
pop
cs
mov
arpl
jg
ljmp
in
loope
mov
icebp
lret
popa
inc
dec
loope
mov
pop
loop
fdivrl
iret
add
das
std
stos
lea
xchg
aad
fcmovnb
in
cmp
push
outsb
loope
xor
and
fs
and
cmp
cmp
jnp
mov
div
xchg
push
xchg
inc
scas
cld
dec
mov
rep
mov
mov
push
cmp
mov
mov
jbe
sti
shlb
dec
fldenv
dec
mov
pop
inc
xchg
pusha
aam
leave
or
inc
xchg
mov
clc
adc
mov
inc
sahf
adc
adc
xchg
add
adc
pop
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
jmp
fadd
test
rorb
insl
pop
jl
sub
imulb
jns
jle
or
stos
or
fadds
data16
sbb
xchg
pop
mov
lea
jo
xor
sbbb
rcll
cmpsb
and
sub
mov
aas
dec
shrb
mov
xor
shlb
in
push
sbb
push
mov
dec
outsl
sbb
dec
sbb
test
aaa
data16
mov
lods
cmpsb
fdivrs
call
mov
lods
dec
pop
add
mov
mov
xchg
lea
sub
sahf
stc
pop
pop
inc
divl
cmp
lods
mov
call
dec
mov
and
dec
add
sub
mov
sub
sbb
push
rcrl
rcll
cmp
mov
push
or
jp
ds
int3
or
and
pop
jnp
icebp
call
lret
aad
jg
mov
mov
mov
inc
cmp
std
cmpsb
cmpsb
jmp
fwait
or
dec
sar
mov
pusha
test
push
jbe
mov
loope
call
jp
icebp
loopne
insb
mov
sahf
and
loopne
lea
loopne
adc
push
loope
adc
ljmp
test
bound
outsb
jecxz
push
int
jg
mov
ret
xor
ret
stc
movsl
and
mov
mov
ja
faddl
mov
mov
pusha
xchg
cmp
dec
xor
mov
in
and
addl
pushf
jbe
jnp
ret
cmp
jb
jnp
pushf
les
inc
fcoml
jns
xor
push
push
jbe
nop
pop
cmp
rcll
push
sti
and
hlt
sarb
adc
push
mov
gs
cmpb
addl
xchg
inc
mov
mov
movsb
mov
jno
outsl
fstp
dec
jle
loop
stos
rclb
dec
in
sbb
mov
int
push
cmpsl
jae
dec
mov
fdivs
pop
filds
mov
mov
fs
iret
cmpsb
dec
inc
or
arpl
and
pop
movsl
fstps
inc
xchg
or
mov
idivb
adc
test
leave
in
nop
mov
shlb
lahf
mov
test
aad
sub
imul
xchg
int3
daa
xorl
shrl
inc
imul
mov
push
sahf
lods
mov
dec
shll
int3
and
mov
cmpsb
xor
cmp
ror
mov
addl
loop
sub
test
jae
aad
jge
jo
mov
aad
add
aad
sbb
and
nop
jp
sub
leave
aam
or
ss
lea
mov
jmp
int
popa
push
push
push
int
mov
dec
and
mov
subl
pop
cmp
add
mov
sub
rcrl
lods
fnstenv
aad
dec
xchg
in
pop
pop
std
cltd
sbb
movsl
ret
dec
jmp
mov
xlat
pop
sbb
gs
addr16
mov
inc
mov
xor
pop
rcr
mov
mov
cmp
mov
push
cwtl
push
cmp
aam
in
and
mov
test
mov
and
es
out
int
sub
pop
mov
dec
std
jne
jle
pop
hlt
aas
test
in
push
orb
push
repz
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movzbl
sbb
mov
sbbl
push
xor
or
sbb
push
jmp
jmp
lahf
xchg
mov
sbb
cmpl
jle
js
jle
push
push
push
xor
mov
lock
into
xchg
hlt
xchg
cmp
fiaddl
repz
ret
int
pop
mov
inc
mov
xchg
inc
orb
jns
jb
pop
dec
xor
inc
add
daa
lret
push
sbb
insl
mov
dec
cmpsl
inc
fprem
sub
add
mov
sub
jl
divl
and
cld
out
and
inc
and
cmp
jbe
jge
insl
and
xor
inc
add
and
or
pusha
adc
dec
ror
pusha
cltd
jo
scas
xchg
jmpw
mov
hlt
jae
add
fcompl
sub
jo
cmp
and
outsl
clc
adc
movsl
ret
gs
out
fsubr
ljmp
clc
sbbb
arpl
das
out
fs
and
ljmp
adc
inc
mov
test
addr16
fistpll
xchg
dec
lods
add
pop
or
mov
movl
add
pop
jge
pop
test
lock
ljmp
repnz
sub
xchg
cs
dec
dec
mov
dec
int
scas
pop
std
fsubrs
popa
sti
push
xchg
cmp
and
pop
js
movsl
cmp
int
ret
add
gs
sub
jecxz
pop
in
ret
lods
jbe
xchg
cmp
xor
sub
jb
arpl
cmp
cmp
sub
push
push
mov
rorl
rorb
das
add
sti
arpl
ljmp
sub
scas
shrb
movsl
lahf
out
inc
incl
lods
xchg
imul
cmpsl
lds
adc
push
scas
inc
dec
hlt
daa
inc
daa
push
les
mov
jo
mov
add
mov
pop
xchg
lock
enter
push
push
ljmp
push
adc
dec
and
popa
dec
ret
insl
in
jne
inc
push
jo
inc
pusha
mov
aad
push
push
scas
jno
movb
xchg
ret
mov
inc
push
pushf
pop
pop
push
sub
push
loop
mov
mov
sbbb
inc
cmp
or
mov
xchg
push
mov
movsb
xor
pop
add
hlt
jae
loope
cltd
test
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
or
mov
add
push
sub
mov
xor
jmp
push
ja
push
aaa
push
jo
mov
fwait
outsb
fdivrs
loope
jle
cmp
xchg
push
sbb
adc
out
ljmp
clc
pushf
nop
dec
imul
stc
stos
xchg
clc
movb
jne
add
lods
pop
inc
out
mov
cmp
movsl
dec
inc
mov
cli
sub
jne
inc
lods
push
or
sar
hlt
push
mov
xor
and
les
dec
leave
incl
loop
lods
fsubl
push
aas
inc
cmp
mov
pop
push
lcall
dec
cmp
movsl
dec
aam
dec
arpl
loopne,pt
ds
scas
cmpsb
stos
dec
pop
pop
xchg
loop
out
and
sbb
pushf
or
mov
ss
sbbl
rcl
repnz
pop
sub
adc
test
pop
fidivrs
test
lea
rclb
loop
lock
fnsave
nop
ret
sti
cltd
jns
adc
pop
cmp
inc
call
popf
lahf
jecxz
inc
push
je
inc
fsubl
out
pop
mov
lret
sub
sub
das
out
jl
pop
jb
mov
and
test
ds
jne
jecxz
ret
in
dec
or
lret
jno
repz
add
xlat
daa
cwtd
fs
push
xchg
pop
dec
jnp
lea
or
or
stos
mov
cltd
sub
insl
or
ss
outsb
xor
push
shrb
dec
in
adc
repnz
mov
sub
mov
xchg
push
jae
mov
ds
mov
push
xchg
mov
addr16
in
mov
in
pop
add
sub
push
jbe
jns
push
nop
ja
hlt
mov
pop
sub
xchg
mov
nop
imul
mov
or
dec
arpl
lock
push
int3
in
movsl
sub
pminsw
js
ja
pop
mov
cmpsb
xor
mov
sub
inc
mov
adc
rcrb
mov
cs
outsb
xchg
scas
mov
pop
call
test
addr16
push
adc
push
mov
add
cli
cmpsl
decb
scas
insl
in
dec
negb
ja
clc
dec
mov
dec
orb
lret
inc
fwait
xchg
lods
ds
insl
or
jbe
stos
mov
jge
xor
notl
movl
movl
add
jmp
cmp
jmp
adc
sbb
xchg
pop
adc
cmp
in
rcr
jle
loope
jle
pop
sub
test
xlat
xor
push
fld1
xor
popf
inc
repz
or
inc
sbb
cmp
xor
stc
cmp
faddl
dec
xchg
addr16
incb
cmpl
or
cmpsl
popf
adc
pop
test
xorb
aas
push
lods
pusha
mov
xchg
ss
into
rorl
xor
addl
cli
mov
jecxz
js
or
cmc
sub
in
in
pop
and
xchg
sti
mov
cmp
js
rorl
ss
ret
mov
leave
call
stos
or
lods
stos
mov
aas
mov
lods
jno
jmp
mov
dec
pop
je
test
fstp
test
bound
daa
mov
mov
push
loop
out
push
mov
xchg
in
test
mov
cmp
les
xchg
jnp
push
xchg
test
add
lahf
jp
and
loop
jnp
dec
ljmp
ret
in
mov
pop
jp
xchg
pop
and
clc
lods
xchg
mov
roll
dec
jbe
insb
adc
test
cmp
fwait
dec
push
pusha
daa
outsb
adc
int3
add
xchg
fmuls
push
and
fldt
stos
mov
sub
aad
add
push
in
mov
pop
mov
mov
pop
sti
cmpsl
mov
and
outsl
xchg
pop
imul
cmp
cmp
xchg
sbb
push
call
gs
xchg
jae
hlt
dec
fistpl
push
dec
sub
ljmp
sub
es
sub
iret
adc
push
jnp
ficoml
aaa
add
jg
inc
push
and
sub
xor
lods
fldt
cld
xor
add
mov
cmc
inc
das
mov
dec
fwait
subl
mov
add
or
sub
cmp
scas
inc
mov
lods
fldt
dec
pop
lret
inc
inc
inc
jge
mov
mov
cmp
das
jbe
in
add
mov
popf
pushl
xchg
iret
xchg
mov
leave
test
push
dec
pop
dec
mov
mov
test
add
mov
mov
movl
mov
mov
movl
mov
movl
mov
movl
jmp
movl
cmp
movl
jne
jmp
call
je
fnsave
inc
leave
in
mov
jle
js
jle
mov
enter
mov
sbb
push
mov
push
lcall
adc
pop
hlt
mov
add
aam
add
psubsw
and
or
insb
and
out
mov
ret
enter
fisubrl
and
or
das
mov
inc
ja
pop
nop
arpl
test
std
pushf
sbb
test
inc
push
mov
aam
out
orl
jl
insl
loope
out
mov
adc
push
xchg
in
out
lcall
testl
inc
cmpsl
sti
sbb
addr16
enter
jg
jecxz
inc
pop
fsub
insb
xchg
xchg
mov
insb
mov
adc
roll
jmp
rcrl
adc
insb
sbb
sub
arpl
ret
inc
xlat
aaa
divl
pop
sbbb
loope
push
add
dec
je
cmpsl
lods
scas
adc
mov
hlt
cmp
rol
enter
cmp
mov
negb
push
enter
lods
inc
aas
pop
cmp
sub
stos
fwait
xchg
adc
ljmp
cmp
insb
dec
cmpsl
nop
xchg
mov
xchg
inc
adcb
mov
cld
addr16
clc
jnp
in
xor
sbb
movsb
enter
rcrb
popf
fisubrs
cmpsb
nop
push
push
sbb
push
jmp
repz
pop
dec
and
xchg
fdivs
or
sbb
inc
cmp
cli
mov
adc
push
fidivl
test
xchg
nop
cld
pushf
icebp
cmpsb
movsl
movsb
dec
je
inc
pop
outsl
das
add
pop
in
outsl
lods
mov
inc
xchg
mov
movsl
sub
inc
sbb
sbb
or
mov
sub
pop
cs
adc
pop
aaa
loop
outsl
jl
add
jns
jmp
inc
les
xchg
or
je
lea
and
sahf
mov
lds
jne
js
mov
sub
fucomip
push
daa
and
les
jge
loop
mov
popa
cmp
fdiv
imul
scas
jne
sbb
xor
or
mov
orl
sub
push
mov
or
mov
addl
add
subl
push
decl
call
movl
incl
cmpl
movl
jb
jmp
cmp
jne
movl
mov
mov
mov
mov
mov
jmp
mov
xchg
jno
jno
out
fisttpl
das
loopne
jle
js
jle
mov
jle
xor
sub
in
or
ss
in
ljmp
or
sub
jp
movsb
sbb
or
loopne
mov
xor
cmpsl
sbb
test
sub
pop
push
out
ds
mov
popa
pop
dec
jg
mov
jp
fucom
or
lahf
lahf
add
cmp
sahf
mov
in
mov
xchg
mov
mov
cmp
mov
aam
hlt
fcmovbe
js
stos
ja
out
hlt
out
je
cmp
shlb
xchg
sti
jp
cmp
inc
lods
lret
inc
fistps
pushf
xor
fstps
mov
add
sub
pop
repz
arpl
sub
repnz
test
cltd
inc
add
aas
inc
sbb
xchg
pop
cli
jmp
jbe
xor
jbe
imul
negb
pop
or
push
jg
pop
iret
xor
jo
inc
xchg
test
xor
stc
cmp
xchg
xchg
and
sub
out
into
test
mov
setge
stos
sahf
aad
pop
filds
repz
sub
jmp
or
push
and
outsl
push
or
fiaddl
test
outsb
lcall
jmp
addr16
inc
mov
push
imulb
jmp
add
sbb
cld
and
pop
cltd
scas
dec
add
scas
fcomi
adc
and
xchg
mov
gs
subb
xchg
movsl
enter
int
mov
xor
in
imul
cmp
leave
push
add
addr16
or
lock
adc
and
scas
push
cmpsb
add
fdivs
outsb
adc
mov
jmp
in
jg
mov
add
xchg
jmp
jb
push
out
adc
push
test
outsl
dec
mov
subl
pop
mov
fiadds
pop
xchg
mov
jb
sub
lahf
loop
rorb
mov
shll
jnp
xchg
sbb
fisubs
call
dec
stos
push
scas
inc
jmp
sar
test
into
lret
push
fwait
test
pop
xchg
sbb
mov
push
pop
negl
sub
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
sub
push
adc
mov
mov
andl
jmp
jns
out
std
jge
or
clc
mov
loop
jle
jns
jle
mov
cs
cmp
ficompl
lods
popa
adc
popa
cmp
pop
hlt
adc
adc
addr16
pop
sbb
jne
add
in
sahf
jge
movsb
fldcw
idivl
lahf
pop
icebp
shlb
jns
push
and
push
jb
in
shr
push
pop
mov
adcb
lods
inc
testb
fnop
inc
pop
in
jo
cli
and
lcall
inc
out
addr16
add
daa
out
fidivs
arpl
pop
mov
lcall
mov
push
or
mov
cmp
arpl
inc
sbb
shll
or
push
ljmp
xchg
sbb
mov
xchg
xor
cmp
dec
lahf
pop
jnp
stos
xor
push
in
cwtl
stos
pop
cmpsb
fisubrs
mov
sbb
xchg
xchg
pop
cwtl
pop
push
lret
ret
jae
jle
pop
lret
inc
pushf
andl
push
jecxz
movsl
jp
sbb
or
sub
jnp
ret
or
push
jmp
push
pop
out
out
mov
popa
add
or
jl
insl
mov
jo
add
push
push
icebp
lock
mov
and
xor
or
mov
xchg
xor
push
jecxz
fstps
mov
ficoml
lahf
xor
leave
cmp
mov
adc
test
and
adc
dec
jnp
dec
shl
iret
pop
xor
jno
fmul
pop
nop
shlb
ljmp
or
dec
call
fdivs
dec
pushl
and
fxch
fldenv
ret
jb
mov
sub
sub
mov
mov
ljmp
shll
stos
mov
sarb
mov
stc
inc
mov
pop
hlt
test
nop
jns
or
movsl
mov
pop
jecxz
jmpw
fstp
jp
xchg
adc
pop
imul
out
mov
adc
jle
outsb
push
outsl
and
push
hlt
into
movsb
mov
or
cmc
ja
movsl
popa
xchg
mov
pop
lods
scas
xchg
sar
shrb
cs
mov
mov
inc
jne
out
stc
inc
mov
into
xchg
cmp
or
aaa
fldl
shrb
dec
dec
fiaddl
or
out
nop
jae
add
push
jge
shlb
orl
iret
repz
inc
and
out
scas
fldt
add
push
repnz
push
mov
das
jbe
and
or
sbb
and
in
cmp
sub
icebp
arpl
jb
pop
cmp
call
outsb
sub
dec
test
push
push
pop
adc
add
xchg
out
mov
hlt
dec
sarb
xlat
and
xchg
push
enter
sbb
test
mov
mov
push
sbb
dec
cmp
sub
xchg
pop
push
xchg
test
dec
jle
push
movsl
push
mov
push
xor
int
in
dec
jae
ds
and
in
push
mov
jae
mov
fwait
push
sub
stos
cmp
sbb
cld
fldenv
add
add
and
inc
dec
cmpsb
mov
hlt
mov
sbb
adc
sbb
push
mov
stos
jnp
jmp
pop
adc
loopne
or
sbb
lahf
sbb
sub
mov
mov
out
xchg
push
or
lcall
push
out
push
shrl
mov
and
imul
mov
mov
or
movl
xor
movl
movzwl
add
mov
mov
jmp
jmp
or
std
fdiv
sbb
jae
push
sete
jle
jo
jle
xor
or
sar
pop
hlt
cld
cmp
cmp
mov
fmull
adc
mov
dec
popa
andb
dec
mov
xchg
mov
andb
dec
in
filds
xchg
cltd
ret
xchg
movsl
fisubs
sbb
push
in
cmpsb
sub
hlt
cs
inc
dec
test
xchg
fcompl
paddsw
mov
jno
mov
mov
and
arpl
pop
jecxz
push
out
push
cmpsl
xor
dec
lahf
inc
add
mov
shll
cmp
aaa
movsl
mov
ds
pop
mov
push
sbb
fsubr
xlat
mov
cli
fstpl
jle
inc
mov
int
mov
addr16
add
inc
test
inc
jns
push
push
jae
out
mov
mov
push
add
test
ficoms
outsw
inc
loope
cmpsb
jo
jns
stos
cmp
sbb
mov
push
jmp
jb
mov
cs
insb
sbb
mov
lea
cltd
jge
into
sarl
clc
call
adc
sub
pop
fmulp
nop
push
push
xor
dec
adc
mov
flds
jae
sub
insl
pop
add
into
and
push
repnz
ret
add
int3
jne
and
push
insb
mov
mov
decl
xchg
stos
jnp
mov
mov
sbb
ror
fisttps
and
dec
in
les
sub
mov
mov
sub
fildll
insl
out
jecxz
push
scas
cmpsb
cmp
out
out
cmp
pop
cli
cmp
bound
scas
cli
sbbb
test
aas
or
add
push
push
pop
or
jnp
jg
pop
ret
ret
cs
add
pop
fdivrs
in
scas
int3
loopne
xchg
inc
lds
sub
mov
adc
cmc
push
add
mov
hlt
dec
out
push
punpckldq
cmp
call
cmc
or
call
pop
or
popf
ret
sub
mov
dec
cmpsb
out
adc
push
int
fwait
repnz
mov
subl
les
fisubs
je
inc
jae
stc
je
in
gs
push
jmp
jecxz
jbe
push
adc
int3
outsb
add
or
jl
pushf
dec
dec
jge
fsubl
inc
xchg
mov
jbe
or
dec
ficoms
gs
les
jns
je
mov
xchg
mov
or
push
push
add
push
jae
mov
and
lods
daa
xchg
pop
dec
scas
inc
popa
dec
mov
and
lock
mov
xchg
leave
mov
cwtl
lahf
int
jb
in
sbb
mov
je
sbb
pop
test
pop
mov
adc
mov
jae
xor
push
pop
flds
add
hlt
jge
pop
jns
sub
loope
mov
add
cmp
cli
push
or
repnz
dec
inc
jbe
daa
pop
es
out
mov
mov
fsts
dec
jg
xor
imul
pop
mov
push
das
mov
pop
jge
dec
xchg
aam
leave
bound
movsb
add
xor
iret
pop
dec
push
movsb
in
lret
in
insb
aad
loopne
add
xchg
lsl
ficompl
popl
sub
insb
cltd
in
inc
imull
pop
insb
jge
mov
dec
and
xchg
out
aam
xor
test
jp
xor
stos
pop
sbb
push
mov
cmpsl
jmp
jp
dec
push
cmpsb
ds
push
pop
pop
jbe
ja
jge
fdiv
rcrl
mov
nop
mov
sub
mov
mov
or
xor
xor
add
xor
mov
add
mov
inc
mov
xor
add
mov
movl
mov
mov
sub
add
jmp
xor
xchg
mov
stos
cs
mov
ljmp
push
clc
pop
jge
sub
push
int3
es
insl
pop
clc
sub
xchg
pop
mov
jg
mov
xor
cmp
rolb
ds
and
xchg
jae
push
clc
neg
push
cld
jo
push
inc
cmp
cmp
lea
je
mov
arpl
outsl
push
pushf
push
or
fsubr
loop
je
shr
call
or
insb
fcmovnbe
push
addr16
scas
add
inc
inc
cmpsl
fildll
pop
xchg
pusha
into
and
arpl
jg
loopne
rcrl
and
call
mov
mov
in
adc
pop
call
mov
push
pop
test
mov
mov
fs
cmpsb
dec
clc
mov
or
and
sahf
mov
lret
sahf
shl
lret
scas
jb
rolb
mov
push
arpl
dec
lock
add
mov
lahf
add
and
add
outsb
jl
sbb
shl
pusha
mov
movsl
scas
mov
divb
add
test
out
test
mov
fisttpll
sti
cmpsl
cli
inc
mov
and
add
fidivrs
movsb
enter
cltd
cli
mov
pop
lret
iret
out
push
xchg
outsb
les
decl
jns
stc
push
push
lret
imul
clc
or
pop
lock
inc
or
lret
js
sub
ljmp
fadds
das
movups
jmp
push
or
loope
mov
ret
inc
mov
cmp
in
push
pushl
in
jp
sub
add
mov
iret
xor
sbb
data16
mov
pop
or
add
add
test
out
inc
cmp
push
xchg
mov
aam
or
and
into
jne
gs
ljmp
aas
sub
cmpsb
stos
mov
dec
sub
aas
arpl
out
stos
push
xchg
sub
sub
or
loope
jle
mov
push
mov
or
jbe
rol
push
ja
cs
add
test
mov
mov
add
add
popa
and
xor
mov
test
xor
mov
mov
out
fsubrs
pushf
int
mov
in
pop
filds
int
sub
sbb
cli
cmp
out
xor
dec
das
rcll
inc
test
push
pop
fsubl
pop
sti
push
mov
cmpsb
shl
adc
cmc
push
subb
or
loop
ret
lods
mov
insl
enter
cmp
mov
dec
js
pop
icebp
xor
lahf
cs
jecxz
stc
sbbb
xor
or
mov
xchg
sbb
mov
inc
gs
push
mov
and
push
insl
jle
add
pop
out
dec
mov
jecxz
inc
jg
sti
cmpl
lods
mov
or
ss
sbb
aas
gs
dec
ja
test
repz
xchg
pop
es
movsl
rcll
jp
stos
pushf
cli
test
lds
add
lods
imul
or
pop
repz
addb
repnz
stos
loopne
sbb
sti
mov
pop
push
ja
mov
and
or
cli
sbb
push
dec
lock
pop
sub
shlb
cwtl
push
push
push
inc
shlb
ror
sbb
sub
insl
push
rep
jns
adc
test
push
sub
andl
out
movsl
es
jp
or
cmp
pop
mul
dec
xchg
fwait
test
sahf
cmp
pop
pop
leave
push
cmp
cmp
or
fdivrs
test
add
add
in
cld
popf
popa
imul
push
fnstcw
aas
addb
jle
cmp
mov
mov
pop
test
mov
data16
cwtl
ljmp
add
clc
cmp
es
or
stc
repz
jg
mov
fcoml
stos
mov
fwait
arpl
cmpl
and
fistl
fstpt
out
sbb
sbb
push
into
cmp
xchg
cld
pop
ret
sbb
fbld
dec
pusha
mov
mov
mov
or
fs
into
push
sarl
mov
outsb
lds
dec
pop
xchg
xorl
pop
out
imul
sbb
push
stos
shl
or
jge
adc
into
ds
in
clc
adc
cli
divl
sub
rclb
pop
mov
leave
xchg
lahf
movsb
sub
push
in
outsb
in
add
insb
xchg
bound
jo
ljmp
xor
sub
lea
mov
mov
xor
push
pop
aaa
nop
leave
in
popf
rol
loopne
cmp
mov
sbb
mov
in
adc
and
jne
sbb
xchg
lock
fld
lock
es
mov
mov
xchg
sub
push
add
stc
cs
cmp
int3
call
dec
push
jb
inc
adc
mov
lcall
lahf
cmpsl
in
and
in
scas
call
xchg
insl
stos
lock
int3
dec
insl
xchg
stc
stos
cmp
jno
push
add
dec
add
out
js
mov
push
add
cltd
inc
mov
in
sarl
sahf
icebp
jmp
scas
dec
in
outsb
push
mov
jmp
push
sarb
sahf
inc
cli
sub
jns
fimull
xchg
es
push
jecxz
loop
jmp
mov
mov
push
stos
insb
inc
jmp
fidivrs
fsubrs
inc
push
leave
pushf
mov
and
xchg
mov
push
mov
pusha
daa
lret
sub
pop
jmp
ret
inc
mov
push
mov
sub
mov
or
pop
jb
addr16
cmc
lret
syscall
sub
lock
daa
fs
fildll
aas
push
xchg
lock
jnp
jnp
cmpsl
stos
rep
iret
xchg
test
xchg
pusha
dec
xchg
movb
aad
aaa
push
xor
and
les
fistpll
xor
mov
cmp
mov
and
xorl
xor
ret
sahf
adc
or
inc
dec
push
or
aaa
scas
ficoml
xor
adc
rclb
xchg
push
movsl
cs
popl
jns
test
roll
shl
pop
pop
jne
popa
or
sahf
clc
add
xchg
cmp
mov
dec
clc
int3
sub
dec
jb
incl
dec
aad
push
xchg
cmp
pushf
into
xor
xchg
pop
cmc
outsl
sbb
jmp
pusha
adc
cwtl
sbb
cmp
pop
mov
lds
pushw
imul
out
sbb
iret
mov
xor
arpl
xchg
sub
push
push
test
adc
lahf
jne
or
lcall
stc
clc
or
dec
dec
call
cli
sub
aam
cwtl
inc
cli
lcall
inc
popa
add
mov
adc
aas
add
push
and
lds
pop
mov
shll
fisubrs
scas
in
cmp
lods
pop
jge
call
add
lret
push
fnstcw
push
adc
or
out
loopne
js
inc
xor
gs
lods
aam
imul
aam
test
test
int3
cmp
cmp
movl
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
pushl
push
call
cmpl
jb
or
movl
sbb
mov
xor
sub
mov
orl
add
cmp
je
movl
push
jmp
xorl
mov
add
mov
addl
sub
movl
mov
andl
xor
addl
add
movl
cmp
movl
jb
mov
mov
sub
xor
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
inc
xor
sbb
add
or
add
imul
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
and
mov
sub
cmp
movl
ja
xor
add
add
mov
orl
jmp
xchg
dec
in
in
test
out
repnz
jle
jns
jle
dec
cmp
lahf
adc
sti
jge
ja
adcb
inc
lea
lahf
or
jnp
pop
dec
in
fcompl
xor
and
cld
bound
shl
fsubrl
imul
inc
lcall
lds
mov
pop
gs
cmpsb
mov
push
stos
mov
pop
call
movsb
push
nop
xchg
lods
xchg
or
xor
lea
jg
xor
pop
ja
roll
inc
int3
mov
das
gs
repnz
pop
xor
dec
xlat
addb
lods
push
ss
addr16
testl
and
add
fidivrs
dec
xchg
and
imul
test
leave
sub
adc
int
inc
daa
ss
mov
dec
and
shlb
jne
mov
loop
cmp
mov
stos
jne
xchg
pusha
and
dec
xor
push
pop
mov
xor
mov
xchg
and
xchg
inc
and
test
push
xor
mov
mov
inc
xor
mov
mov
imul
out
mov
mov
push
push
and
push
add
pushf
fiadds
cmp
stc
adc
shll
imull
rcl
jbe
enter
in
scas
sti
sbb
push
pusha
shrl
pop
repz
push
cmpsl
sbb
add
dec
rol
add
sahf
iret
test
imul
lock
rorb
leave
xor
out
aas
in
mov
jl
dec
out
and
add
out
arpl
test
bound
jne
test
pop
std
push
push
sub
loope
arpl
pop
test
mov
aas
xor
or
minps
hlt
in
in
xchg
pushf
or
inc
adc
outsb
adc
loope
mov
pusha
ss
dec
mov
xor
or
mov
aaa
outsl
mov
out
into
ss
and
loop
mov
mov
or
push
iret
sub
shrl
outsl
push
loope
lods
mov
les
mov
cmpsb
add
iret
pop
pop
mov
out
movsl
and
movsb
scas
fsubrl
or
sub
ss
pop
cmp
fistpll
jp
arpl
test
dec
imul
test
push
andb
jno
insb
sbb
fsts
les
out
mov
dec
in
push
mov
pop
lods
pop
imul
and
xchg
insl
adc
pop
sbb
or
push
push
pop
pop
dec
xchg
scas
and
scas
rcrl
fwait
out
popf
and
cs
clc
cwtl
push
das
clc
ds
dec
fs
mov
jmp
xor
les
cwtl
xchg
jle
int3
and
xchg
ret
insl
lea
mov
mov
test
inc
negb
and
cmpsb
ss
fs
in
add
jae
adc
rcrb
dec
cmp
stos
sub
movsl
push
in
rorb
aam
std
std
test
pop
mov
cmp
inc
cmp
test
xchg
cmp
dec
in
sub
dec
adc
and
pop
cwtl
adc
popa
sbb
fimull
ja
inc
cs
xchg
push
mull
das
test
clc
movsl
addr16
mov
sbb
push
xchg
jb
mov
mov
pushf
cmp
subb
mov
daa
subl
test
popf
repnz
push
push
iret
mov
push
test
call
mov
xor
push
adcb
adc
incl
add
shr
jno
add
mov
subl
mov
mov
sub
mov
xor
xor
or
add
adc
jmp
test
jne
xchg
in
in
insb
and
xchg
cld
jle
jo
jle
fildll
mov
sarb
pushf
sub
pop
and
push
cmp
repnz
scas
ja
lock
xor
lods
push
pop
inc
aaa
fimull
or
arpl
lods
push
mov
inc
push
xchg
sti
sbb
xor
add
outsl
xchg
adc
sub
mov
jge
sbb
lret
mov
sub
push
cmp
jg
add
bsf
add
push
mov
add
rorl
xor
aam
add
add
push
dec
inc
in
repz
pop
xor
rcrl
jno
mov
orl
xor
pusha
sahf
jle
aaa
xchg
or
add
add
mov
in
cli
ret
push
and
sbb
mov
and
inc
loop
jle
int3
icebp
aaa
mov
mov
or
add
jl
push
repz
sub
lods
pop
lret
push
add
push
imull
cwtl
int
sub
add
and
cs
or
test
aaa
sub
xor
cmpsl
sti
mov
adc
call
push
dec
adc
call
mov
sub
arpl
pop
in
jmp
dec
dec
cwtl
lcall
dec
in
popa
cli
cmp
mov
jge
aas
daa
sub
push
rol
jg
mov
and
push
cmp
orl
and
add
sub
mov
popa
arpl
pop
orb
mov
or
loopne
adc
push
fs
push
outsb
out
loop
hlt
xchg
mov
cmc
iret
loope
pop
mov
test
jl
xor
adc
push
mov
mov
inc
test
dec
stos
push
mov
sub
lock
notb
lods
push
or
pcmpgtb
lock
xlat
movl
enter
xor
or
pop
out
adc
jg
jns
push
jbe
loope
movsl
pop
leave
out
mov
lahf
sti
mov
push
pop
jnp
jmp
test
add
or
dec
dec
mov
ret
mov
lea
stc
int3
lock
movsb
out
hlt
sti
in
lret
aad
mov
mov
lods
jb
fstps
insb
leave
mov
mov
in
and
aaa
pop
jno
adcl
sahf
pusha
shl
jmp
stos
in
or
dec
int3
pop
ljmp
aas
pop
pop
and
lcall
push
and
rcr
xchg
xchg
cli
je
mov
nop
out
gs
adc
inc
jge
insb
scas
or
xor
xlat
cmp
cmc
cmp
clc
mov
in
or
xor
loope
jg
nop
fwait
int
je
iret
cmp
cmc
int
rclb
jge
sub
clc
inc
fadd
xchg
sbb
pop
or
mov
insl
xchg
xlat
loop
ret
sub
repnz
loop
mov
mov
cmp
test
xchg
fistpll
sub
fcmovnu
dec
jmp
leave
in
shll
subl
imul
lea
push
mov
or
jle
mov
idivl
je
adc
mov
mov
sti
jns
out
jae
into
adc
fimuls
in
or
mov
push
xor
xor
lret
enter
sub
and
rcr
lret
lret
decw
repz
add
insl
fstpt
sub
leave
mov
out
dec
mov
pushl
jae
cs
xchg
rol
mov
jge
adc
jg
fdivp
push
cmpsl
push
call
xlat
xor
mov
mov
xorl
sub
movl
cmp
movl
ja
mov
mov
movl
jmp
sub
mov
add
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
call
jmp
xor
xor
xor
add
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
push
call
cmpl
jb
add
imul
mov
mov
jmp
aas
andl
push
repnz
pusha
push
adc
idiv
jle
jo
jle
and
js
aas
jns
insl
cmp
popa
mov
rcll
mov
xor
jl
and
push
aad
and
aas
shll
xor
inc
sub
das
sbb
pop
pop
cmpsl
sub
loope
or
jo
cld
pop
xor
and
pop
push
sbb
sub
adc
sbb
inc
rclb
call
int
dec
adc
aam
leave
push
shrb
push
mov
push
xchg
lret
pop
cltd
out
jp
pop
xchg
sbb
ds
mov
icebp
push
lods
pop
sbbb
push
aas
in
orb
cld
adc
insb
sub
jbe
and
sbb
sbb
into
aaa
mov
xor
dec
loopne
aas
leave
dec
jns
aaa
sarl
mov
sti
xchg
cmp
jp
add
je
outsb
xchg
int
mov
nop
test
mov
push
sub
or
mov
sbb
xor
movsb
leave
jb
cmp
add
rcll
rorb
stos
inc
ds
fsts
and
push
or
mov
cwtl
ficompl
inc
out
mov
out
data16
test
inc
les
add
fmulp
leave
xchg
inc
add
leave
adc
dec
dec
mov
lcall
add
pop
mov
mov
cmp
jo
push
sbb
push
and
xchg
inc
lock
mov
test
sub
aas
and
inc
push
cmp
inc
inc
push
mov
jne
repz
cltd
out
dec
test
mov
xor
test
dec
imul
fidivrs
in
push
enter
jae
js
cmp
enter
pop
call
and
sub
insb
loope
subl
jb
inc
jle
xchg
test
xlat
mov
fwait
lods
fidivrs
aad
mov
sbb
mov
pop
jnp
mov
cltd
cmc
gs
inc
xchg
push
addr16
sbbl
dec
mov
inc
fldenv
mov
and
xor
add
lds
add
cmc
add
pop
mov
mov
add
stc
pop
cli
pushf
in
pop
sbb
cmpsb
leave
pop
adc
sbb
jno
fidivrl
aas
cmp
push
les
push
push
cwtl
xor
inc
cmp
mov
in
mov
stos
xchg
popf
ja
dec
push
fstps
arpl
xchg
pop
xor
pop
movsbl
loopne
mov
mov
lret
add
imull
insb
dec
rcrl
jmp
jl
xor
imull
mov
fcomi
push
sahf
inc
lock
adc
sahf
xor
dec
fwait
mov
cmpsb
adc
xchg
sub
and
bound
mov
push
mul
jns
and
test
pop
add
fdivs
fidivrl
jge
pop
add
push
mov
andb
dec
sahf
mov
pop
mov
jge
cmp
out
cmp
inc
adc
sbb
cs
loop
pop
lret
ss
sub
mov
push
das
es
cmp
cltd
pop
and
es
sub
add
xor
or
xchg
andb
orl
xor
mov
sub
cmp
mov
mov
xchg
std
jo
mov
dec
mov
fnstsw
gs
cmp
ja
mov
jmp
jmp
rorl
aam
pop
rcll
xchg
mov
cmp
push
call
jns
jle
dec
dec
int3
aad
cmpsl
jb
inc
mov
mov
sti
in
or
xor
std
ficoml
cli
adc
jl
stos
mov
outsb
sti
aas
or
je
and
test
sahf
pop
clc
inc
xchg
addl
or
lahf
xor
push
into
pop
mov
lret
leave
mov
test
andb
loopne
mov
or
xchg
add
push
dec
rorl
mov
and
or
mov
xor
xchg
cmpsb
sub
and
inc
popf
pop
ret
lcall
and
jp
sbb
sub
sub
icebp
cmp
ds
cs
sar
xchg
movsl
add
sub
mov
enter
jge
pop
fstpt
fists
test
shl
icebp
mov
data16
jp
pop
xchg
decl
lret
std
and
xchg
aad
inc
pop
sbb
in
divb
cmp
stc
mov
sub
out
cmc
test
xchg
rclb
xchg
jmp
jecxz
cmpsb
cli
inc
cwtl
popf
mov
xchg
inc
or
mov
into
insb
and
and
and
jo
and
pop
lahf
cmp
fisubrl
jmp
mov
jns
imul
lods
fwait
in
sbb
mov
insl
jne
lret
dec
cs
pop
mov
sub
add
fwait
in
push
frstor
ljmp
cltd
inc
aam
fidivl
cmp
ljmp
or
daa
cmp
es
push
leave
sbb
hlt
rcrl
xorb
pop
mov
add
loop
lds
popf
scas
add
inc
imul
inc
popa
testl
jmp
or
rsm
scas
fadd
jb
push
ss
shr
push
in
push
popa
stc
sbb
sbb
dec
push
mov
and
and
repz
cmp
dec
inc
and
jp
les
sub
fbstp
and
fcomp
stc
nop
push
inc
push
int3
xchg
cmp
out
jnp
mov
adc
jbe
mov
cmpsb
sbb
int3
aaa
mov
bound
pop
test
mov
xchg
jle
mov
aam
dec
mov
mov
cmp
aam
adc
lods
leave
push
daa
xlat
add
mov
int
test
or
daa
ret
popf
daa
sbb
in
sub
push
or
pop
sub
movsl
xchg
in
push
lahf
fnsave
xchg
jb
subb
xchg
push
imul
mov
bound
and
dec
hlt
and
mov
sahf
push
jle
xchg
dec
pop
sub
movsl
jbe
dec
addr16
xchg
stos
mov
mov
out
std
cmp
adc
iret
movsl
insl
dec
xchg
pop
pop
sahf
push
jnp
push
popf
sub
add
mov
mov
push
fwait
inc
mov
rcll
pop
bound
out
mov
dec
xorb
xor
fldcw
jae
leave
repz
pop
repnz
cmp
or
add
cmp
mov
mov
pop
inc
lea
xchg
out
icebp
bound
xchg
fildl
in
ja
scas
push
roll
jp
jnp
sbb
dec
test
xchg
xchg
js
das
sbb
push
sbb
xchg
dec
or
dec
mov
les
mov
test
jp
fisubl
push
cmp
mov
cmp
sbbl
subb
fxam
clc
mov
inc
add
popa
stc
adc
popf
sub
inc
fs
lea
rcrb
push
push
insl
jmp
jno
jnp
mov
orb
mov
aaa
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
xor
outsl
jne
std
inc
sbbl
xchg
out
je
cmpb
jns
jle
mov
ds
sbb
push
mov
outsb
xor
push
xchg
cltd
mov
xor
and
mov
push
sbb
out
jle
and
xor
aam
add
xchg
sbb
cs
sub
call
inc
repz
xchg
cmp
sbb
stos
jnp
testl
call
adcl
mov
jns
push
pop
cmp
lahf
scas
inc
pushf
gs
push
cmp
repnz
je
sbb
xchg
test
and
pop
pop
fldt
push
lret
mov
lea
outsl
insl
fnstcw
lods
sub
cwtl
inc
enter
xchg
test
enter
mov
push
clc
or
sub
lcall
dec
inc
mov
lods
ss
cmp
xchg
inc
mov
and
sti
gs
pop
sbbl
sub
cmp
inc
cwtl
xor
sbb
add
pushl
sbb
leave
cli
pop
dec
outsb
inc
outsb
dec
jl
insb
inc
mov
ja
sbb
arpl
jns
add
push
divb
sub
mov
scas
movsl
sar
jns
cmpsb
inc
jnp
mov
add
inc
pop
xor
xchg
xor
int3
jl
ljmp
hlt
xchg
cs
hlt
cmc
cmc
inc
cmp
jge
dec
in
sbb
push
bound
addb
mov
outsl
pop
out
jl
xor
mov
pop
mov
xor
inc
mov
xlat
movb
mov
dec
sbb
jae
jnp
add
pop
sub
pop
inc
mov
subl
inc
xchg
cmpsl
arpl
pop
outsl
imul
or
pop
push
inc
test
cmp
mov
push
jmp
sbb
jg
sbb
pop
and
call
nop
scas
push
cmp
sub
fidivl
xor
or
inc
dec
push
xchg
fdivrl
cmp
pop
inc
or
dec
mov
lahf
aaa
mov
lret
enter
lods
and
loopne
pop
mov
shlb
and
mov
and
out
push
mov
sbb
in
out
aam
push
xlat
pop
fimuls
pop
imul
sub
mov
push
mov
addl
or
arpl
outsb
loop
mov
es
lcall
fstps
data16
mov
fstpl
pop
scas
mov
cmpsb
stos
scas
es
inc
sbb
push
aaa
and
imul
enter
sahf
mov
mov
pushf
int
mov
test
addr16
mov
pop
push
push
xor
int3
test
pop
inc
out
jge
mov
ds
sbb
movsb
add
inc
addb
adc
adc
adc
mov
mov
mov
gs
inc
enter
adc
dec
add
push
push
mov
add
add
out
scas
scas
lret
cmp
mov
and
jle
enter
jge
jno
cltd
inc
in
outsl
test
in
mov
lcall
test
jns
sbb
jle
lock
hlt
je
inc
or
stc
in
cld
outsl
das
dec
cld
lahf
fucomp
mov
cmp
mov
inc
xor
sub
cmp
std
sbb
scas
xor
aad
inc
daa
out
mov
push
notrack
xchg
dec
enter
sbb
imul
aas
pop
test
clc
sub
jmp
int
mov
xchg
sub
ja
pushf
leave
jmp
dec
jmp
push
push
fistpll
fimull
add
add
mov
mov
xor
xor
jmp
test
rolb
dec
pop
repz
lahf
push
xorl
jns
jle
mov
lds
sbb
js
lods
and
hlt
mov
ret
dec
out
fiadds
dec
xchg
dec
jbe
add
imul
jbe
xor
lahf
stos
iret
jae
jns
clc
mov
lds
push
lock
mov
push
lock
in
xor
pop
and
mov
cli
repz
jecxz
roll
jmp
lcall
dec
ret
jb
imulb
xchg
ja
sub
jg
out
jb
in
xchg
jmp
fldt
add
jle
jle
cmp
sbb
mov
cmpsb
sbb
push
cmp
test
aam
int
ss
mov
aas
xor
sub
sbb
mov
inc
sub
xchg
out
dec
cmp
sbb
or
nop
mul
cmpsb
inc
push
jns
lods
popa
lret
in
ret
adc
and
repz
pop
jmp
or
xor
cmp
lret
jnp
popa
jb
test
cli
pop
mov
mull
push
test
je
out
mov
faddl
sti
fisttpl
cmp
lret
xchg
call
bound
push
ss
pop
outsb
into
int
movsb
dec
dec
dec
mov
js
xor
popf
cmp
sub
jae
add
add
clts
add
or
rcll
pop
addr16
fisttpl
push
jbe
mov
lds
outsl
dec
scas
xor
sub
add
jo
int
xchg
push
adc
ret
dec
mov
sub
xor
mov
into
enter
shll
sub
dec
xor
and
push
sbb
out
repnz
jo
jns
sbbl
adc
cmc
jns
hlt
negl
inc
pop
mov
fwait
mov
fdivp
call
jnp
hlt
popa
cmc
jmp
rolb
fistpl
ds
rcrl
and
fucomp
inc
sub
ja
jmp
daa
jb
pop
pop
and
aam
mov
push
dec
mov
xchg
sbb
sub
mov
movl
in
xor
data16
add
jo
icebp
xchg
arpl
cld
bound
mov
mov
sarb
mov
and
movsb
repnz
dec
nop
add
sub
push
jne
push
or
rcrl
ret
inc
cli
les
std
or
call
pop
test
cmpsl
mov
push
jne
xchg
sbbl
add
div
add
shrl
dec
add
mov
stos
sub
lcall
fadds
pop
jmp
addr16
adc
stc
jne
sub
repz
xchg
insb
and
cwtl
jae
sbb
push
or
xor
jne
clc
filds
flds
adc
pop
add
out
pop
jbe
xor
lcall
jb
add
xor
out
xchg
lods
scas
mov
call
imul
xor
push
mov
mov
test
add
daa
push
shlw
pop
mov
aad
loop
scas
pop
test
shll
mov
push
addr16
add
push
dec
xchg
push
push
lret
sub
iret
inc
mov
jg
arpl
or
xor
cmovo
rcll
roll
hlt
and
leave
and
and
dec
daa
adc
je
test
cli
mov
xchg
pop
push
aad
dec
rorb
pop
rcr
cmpsb
sti
ja
lds
mov
loop
jecxz
add
add
jmp
cmp
dec
mov
rclb
sahf
fimuls
jle
loop
jge
hlt
sub
insb
mov
ds
aad
sbb
xchg
xor
dec
mov
xchg
test
xor
pop
push
cmpsb
aad
addr16
add
sbb
add
cmp
mov
stos
pop
out
and
or
mov
or
stos
inc
stos
int3
xchg
lret
ret
imul
cmc
mov
ret
jmp
lea
rcrb
je
sbb
sub
dec
arpl
mov
aam
push
and
or
es
pop
add
xchg
mov
push
imul
pop
cmp
dec
inc
cmc
icebp
sbb
push
push
fldl
mov
jl
gs
mov
add
sub
imul
cmpsb
movsb
sub
jns
cmpsl
sbbb
repz
pop
mov
loop
mov
shll
dec
scas
sbb
mov
fs
jl
mov
sbb
and
clc
cmp
jle
mov
arpl
mov
rcl
aas
push
pusha
and
ret
jmp
adc
inc
xchg
dec
sti
orb
les
mov
or
mov
repnz
adc
push
in
test
andl
into
xchg
cs
lea
cltd
cmp
push
xchg
xchg
or
lcall
mov
add
insb
sti
scas
loope
jae
lds
jge
loopne
add
inc
and
jnp
and
and
inc
in
inc
xchg
dec
lret
aas
and
js
jae
imul
xchg
stos
dec
lds
out
and
into
ret
inc
mov
sub
or
lret
and
or
push
xchg
adc
xor
sub
pop
sbbl
mov
setbe
out
pop
inc
mov
push
gs
inc
lock
jne
fiaddl
movsl
ds
loop
lahf
aas
scas
jmp
ds
aad
pop
push
jae
or
xor
ja
lret
test
movsl
outsl
rorb
mov
push
insl
sahf
or
sahf
and
movsl
pop
lods
jge
loopne
aam
pop
xor
xchg
push
jge
push
sub
test
pushf
mov
adc
sub
sbb
fnstenv
in
push
sub
unpcklps
sub
std
rolb
jbe
sub
arpl
pop
mov
mov
repnz
adc
fiadds
add
sbb
out
mov
push
loope
and
or
mov
cmp
cwtl
pop
sti
sub
insb
dec
cmpsb
fwait
stos
repnz
dec
xor
repz
sub
scas
sbbb
cmpsb
mov
cmpb
xchg
mov
cmpsl
ja
xchg
xor
and
jge
cmp
fildll
addr16
jmp
inc
insl
xchg
popa
test
std
pusha
sub
test
jl
aas
mov
sub
and
xchg
popf
daa
lods
shrl
jl
sbbb
loope
in
pop
outsl
add
mov
loope
in
cs
test
mov
fs
shl
add
lods
jbe
cltd
loope
jae
adc
das
pop
stc
dec
pop
test
mov
dec
xor
lcall
gs
and
sbb
pop
cmp
mov
mov
or
jp
push
lods
dec
mov
lahf
cmp
mov
and
in
add
xchg
jbe
insl
out
sbb
clc
cmpsl
sti
test
sbb
jecxz
inc
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
jmp
sub
inc
dec
idivl
jmp
xchg
jle
jo
jle
mov
add
xor
adc
out
jp
and
idivb
mov
jp
or
je
pop
insl
cmpsl
arpl
mov
pop
out
dec
xchg
mov
cmp
mov
jge
add
je
jne
out
xor
sub
popl
icebp
xchg
xchg
outsb
add
js
lods
xchg
neg
js
cmp
enter
out
add
bound
pop
mov
cmp
cmc
jge
add
add
cmp
es
test
xorl
xchg
clc
pop
jmp
adc
pop
or
push
movsb
int3
iret
mov
push
lcall
xchg
outsb
dec
das
jle
jnp
dec
add
push
jnp
fucomi
mov
test
or
dec
push
jbe
adcb
jmp
ss
rol
ja
mov
mov
lahf
jo
pop
rcr
sbb
mov
sahf
enter
out
fistpl
cli
movsl
stc
js
sub
roll
cmp
jge
mov
cmpsl
and
in
mov
es
movsb
pop
mov
fstl
mov
push
mov
pop
mov
mov
adc
cld
lea
pop
sub
je
pop
pop
pushf
sahf
sub
xor
adc
push
inc
push
and
sub
es
sub
js
adc
cwtl
sub
push
or
cmovl
addr16
pop
fwait
ret
jp
xchg
lock
cs
pop
inc
lods
mov
push
dec
ret
lods
sub
loopne
pop
andl
jp
test
pop
sti
jns
js
xchg
add
data16
pop
xor
inc
ja
sub
call
fdivrl
mov
dec
test
in
nop
mov
or
push
or
lret
stos
push
cmp
sahf
dec
dec
loope
out
das
lret
icebp
adc
push
loopne
push
lds
cli
ds
lahf
aad
sbb
jmp
dec
cmp
and
pop
xchg
aaa
jge
mov
es
pop
test
imul
bound
push
out
in
push
adc
sub
stos
in
scas
fstps
sub
pop
jmp
loopne
pop
je
jne
scas
sub
sub
or
sub
jmp
push
pop
dec
adc
jl
loop
xchg
lea
mov
and
push
cwtl
out
xor
cmp
cmp
mov
insl
jl
jmp
shll
iret
stc
push
loopne
aaa
aaa
add
add
fstp
mov
shlb
jno
popa
xchg
xor
adc
and
stos
jne
jne
push
xchg
and
repz
lcall
daa
fwait
xor
cs
ljmp
mov
push
lret
mov
int3
cmp
addr16
mov
test
cmp
sub
dec
dec
and
inc
xor
iret
pop
xlat
sti
iret
jb
xchg
mov
mov
cmpsb
outsl
and
add
mov
stc
xor
adc
mov
lcall
dec
test
ljmp
cltd
sbb
test
cmp
pop
pop
inc
in
xchg
mov
dec
mov
enter
jmp
xchg
icebp
or
in
aad
stos
push
sbb
xchg
out
and
lods
push
ret
aaa
cld
dec
nop
sub
cmpsb
dec
mov
push
inc
scas
outsl
cmpsl
mov
mov
xchg
imul
jbe
call
inc
pop
xchg
xchg
adcb
cmp
xor
xchg
es
pusha
mov
or
xor
inc
mov
sbbb
in
xchg
cmp
push
jnp
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
jmp
and
mov
mov
jne
psubusb
jp
xchg
jle
jo
jle
filds
xor
pop
xor
push
add
aas
xchg
mov
das
enter
pop
lcall
cmp
sarl
int
mov
lret
shll
shrb
pop
sbb
fsubl
adc
out
je
jb
bound
add
movsb
mov
push
std
mov
jne
or
imul
scas
mov
jp
xlat
push
pop
std
adc
lods
cltd
leave
cli
xchg
xor
push
xchg
sbb
mov
push
dec
inc
sbb
push
sub
push
xchg
sub
pop
jnp
xor
and
xchg
lods
jae
lret
mov
cwtl
scas
cld
scas
dec
arpl
repnz
js
fisttpl
pop
pushf
mov
fadds
and
pusha
popf
in
into
xor
jae
mov
call
or
mov
mov
mov
sub
pop
adc
adc
loopne
and
dec
aam
jns
sti
data16
and
push
enter
out
dec
pop
test
out
inc
scas
xor
add
cmpsl
dec
inc
xor
outsl
cmp
mov
in
sarl
shll
dec
scas
jne
dec
fsubl
inc
repz
mov
push
ss
shll
pushf
insb
and
arpl
pop
into
mov
roll
bound
cmp
push
sub
iret
test
incl
mov
cld
js
mov
jnp
ja
xorb
and
dec
int
adc
push
inc
pushf
lds
jge
mov
cmp
sub
das
sar
int
sub
popa
cmpsb
push
inc
jb
call
shlb
jbe
addr16
movsb
sub
ret
and
mov
jne
sub
push
hlt
dec
xchg
adc
inc
shl
insb
fisttpll
popl
ds
push
lret
mov
repnz
adc
inc
sub
jbe
ret
mov
movsl
jmp
lcall
jle
stos
inc
inc
jne
outsl
iret
pop
xor
loope
hlt
mov
out
pop
xor
dec
push
sub
jl
daa
sub
mov
dec
sub
aaa
push
addl
in
clc
mov
test
jle
lret
mov
pop
fidivrs
adc
xor
xchg
sbb
pop
xchg
pushf
in
jno
imul
enter
adc
inc
or
fdivs
outsb
mov
aas
jl
mov
cmc
jno
cmpsl
dec
sbbl
add
ljmp
lahf
and
fcompl
cmp
mov
pop
or
jo
xor
cmp
aaa
out
mov
dec
ret
push
jb
icebp
ja
scas
pop
jae
adc
lret
fidivrs
sbb
mov
mov
cmp
mov
sbb
rcl
ficoml
jae
cli
fucomp
add
adc
pusha
cmp
pop
pusha
inc
shrl
xchg
std
scas
and
ficomps
int
arpl
mov
lds
fists
pop
pop
fs
sub
xchg
adc
push
and
pop
push
xlat
cs
mov
xor
inc
repnz
cmp
std
pop
popf
or
aas
adc
adc
cmp
sub
subb
ja
test
mov
and
pushf
mov
sarb
in
xchg
imul
jo
addr16
adc
mov
test
xchg
negb
push
pop
test
jb
sub
in
cmp
sbb
dec
xor
xor
mov
cmp
xor
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
jmp
push
and
jl
jge
movsl
sbb
ret
mov
sahf
jle
jo
jle
push
in
and
outsb
push
loopne
xchg
cmp
das
pop
mov
rcr
int
inc
sbb
addr16
ss
clc
aaa
adc
jg
aam
dec
nop
adc
in
enter
lock
and
inc
decl
lods
call
jg
int
xor
push
dec
repnz
ficoms
adc
and
xchg
mov
dec
into
in
insb
imul
subb
imul
cmpsl
clc
xchg
sahf
xchg
inc
bound
clc
jl
mov
gs
xchg
push
fbld
xchg
mov
pop
fildll
gs
and
aad
js
or
lods
sub
insb
loope
lcall
add
shll
wrmsr
and
test
dec
mov
dec
into
daa
std
out
add
cwtl
xor
xchg
call
shlb
in
flds
aad
ficoml
xor
rorb
loope
cmp
dec
scas
mov
inc
fidivrs
push
mov
loopne
fndisi(8087
ljmp
mov
loop
insl
push
jbe
xchg
popa
call
pop
iret
aam
subl
std
ljmp
fdivr
outsl
add
add
out
into
and
out
lods
push
stc
in
and
cmpsl
push
rorb
xor
fidivl
sub
inc
pop
pop
loop
mov
sub
add
cwtl
push
and
sbb
stc
mov
add
in
dec
add
cmpsb
push
xor
scas
xlat
jno
push
push
out
jns
loope
popl
shll
rolb
in
push
push
cmp
roll
push
or
stc
iret
out
adcb
aas
shll
clc
rcll
out
dec
cmp
add
les
or
or
cmp
int
mov
push
sub
addr16
sahf
jne
pusha
xchg
andl
cmpsb
sbb
inc
lret
jge
cld
xchg
xchg
jne
jo
out
or
add
or
insb
pop
lret
notb
mov
gs
mov
std
ret
dec
jne
in
dec
ja
pop
fwait
aas
xchg
mov
cli
inc
add
add
pop
pop
outsl
inc
pop
fisubrl
lret
js
sub
in
dec
fs
xor
scas
leave
sbb
pop
movsb
and
arpl
add
scas
mov
xor
or
loopne
push
ja
icebp
in
imul
xor
mov
xchg
jg
cmp
push
mov
aaa
dec
sbbl
jae
cmp
fld
mov
stc
cwtl
je
scas
lods
pushf
cvtpi2ps
enter
test
in
lcall
repnz
daa
repnz
stc
push
lea
mov
mov
imulb
lcall
cs
cmp
loop
movsl
das
outsb
adc
lahf
sti
mov
push
xchg
aaa
test
sbb
inc
or
push
cmp
cmp
xchg
daa
popa
pop
sub
adc
mov
aam
sub
ret
lds
sbb
mov
xlat
aam
test
lret
mov
lea
sub
fildl
stos
cmp
mov
add
cmp
cld
dec
push
xchg
push
push
inc
jg
mov
lods
xchg
inc
xchg
sbb
in
mov
psrlq
mov
dec
dec
inc
xor
sub
addr16
sbb
mov
in
aad
lret
cld
mov
cmp
shr
pop
test
dec
sbb
ja
jnp
and
mov
sbb
scas
sbb
das
hlt
ret
cmp
into
in
out
ss
int
and
jne
pusha
push
push
cld
sub
iret
pop
repnz
mov
add
dec
push
lcall
out
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
jmp
pop
in
add
insb
xor
fcmovb
mov
lcall
shr
sbb
aas
fildll
push
and
fimuls
clc
xor
pop
lahf
xchg
jge
lods
cmp
adc
jg
xchg
sahf
ret
es
or
daa
cli
fsubl
das
ret
add
or
cmpsl
scas
jg
mov
jnp
rcrl
sbb
push
fstl
sbb
cltd
dec
cwtl
clc
out
mov
fwait
xor
push
jns
ret
rorl
cli
push
sbb
sub
xor
dec
sbb
push
mov
jb
add
call
push
pop
dec
sbb
push
mov
es
fnstenv
jge
xor
jg
lea
icebp
daa
and
aas
pop
adc
and
iret
cmpsl
sub
xchg
out
sahf
test
setns
scas
or
test
push
lret
lods
dec
xchg
idivl
add
sub
push
dec
pop
aas
push
jns
pop
pop
xor
mov
es
and
xchg
add
cmp
cmp
fwait
iret
mov
xchg
push
aad
mov
sbb
jns
movsb
ror
popa
je
inc
nop
sub
xchg
mov
cmp
jg
lret
aam
cld
cmpb
inc
xchg
sbb
test
or
jnp
aaa
inc
push
xchg
push
sbb
jmp
inc
jle
daa
cmp
lock
fiadds
mov
les
idivb
lods
sub
inc
test
test
xchg
adc
pop
out
push
incl
mov
dec
cs
push
sbb
sti
movsl
icebp
movsl
pop
jno
add
xlat
pop
adc
or
or
inc
in
dec
add
inc
stos
and
or
cmc
cmp
std
cmc
add
add
pop
in
xchg
std
icebp
mov
dec
jle
mov
enter
int
cmp
fcompl
adc
dec
arpl
jl
ret
imul
arpl
dec
mov
push
push
aaa
jecxz
aam
push
ds
fwait
mov
pop
adc
push
cmpps
aam
stos
push
sub
xor
lret
add
mov
cmpsl
bound
mov
cmp
jl
orl
inc
test
push
ret
stos
outsb
fdivr
sti
stos
sub
movsb
push
cmp
or
dec
sbb
jp
pop
dec
mov
xor
int3
das
fsubr
push
sub
cwtl
iret
packuswb
sti
inc
call
jae
push
icebp
int
iret
adc
xor
push
xchg
mov
ret
cmpsl
sbb
sub
dec
mov
mov
aas
inc
sti
outsb
jp
js
push
fcmovnu
mov
lret
jecxz
jecxz
lret
mov
xchg
pop
pop
into
cmpsl
mov
int
lret
mov
sti
scas
mov
das
adc
loope
cmp
add
pushf
xor
outsb
inc
dec
inc
lcall
inc
inc
push
and
mov
sbb
jle
dec
cmp
mov
jge
jle
mul
ss
mov
mov
jp
lock
push
pop
cld
mov
lods
popf
jg
add
mov
dec
push
sti
mov
aam
daa
cltd
dec
xchg
push
adc
sti
mov
sub
mov
dec
mov
push
popf
ljmp
or
idivb
mov
adc
sarb
adc
sbbb
popa
mov
test
cs
das
pop
push
dec
outsl
imul
xchg
sbb
mov
inc
mov
lods
jmp
mov
iret
inc
mov
inc
daa
mov
cld
scas
jmp
xor
loop
push
jp
imul
notl
adc
into
icebp
imul
jmp
loopne
fsubrs
rorl
xor
cmp
jbe
mov
mov
xor
add
imul
mov
jmp
pusha
jecxz
jge
icebp
insb
fwait
mov
mov
cmpsb
jle
jo
jle
out
dec
lea
adc
mov
test
fwait
sbb
loope
sbb
mov
cmp
pop
aad
xchg
cmpsb
mov
xchg
stos
insl
cmpsl
push
jge
pop
add
int3
lret
mov
and
cmpl
int
push
movsl
repnz
add
pop
int3
or
into
test
xor
addr16
inc
ficoms
xor
pop
and
jnp
sub
frstor
sub
or
stc
jb
rcrb
mov
cmpsl
aaa
cs
cmp
sbb
ret
and
jno
mov
mov
cmp
or
sbb
in
out
test
std
add
mov
ret
sti
scas
sbb
cmp
adc
mov
ret
inc
outsl
out
cli
sarb
inc
xchg
sbb
jmp
sub
xchg
ljmp
icebp
stos
and
mov
add
hlt
inc
mov
in
inc
test
test
lret
call
or
sbb
xor
inc
xchg
cltd
mov
lret
shl
push
das
jle
lahf
cmp
sti
jmp
imul
dec
aas
and
sbbl
add
cmc
enter
loopne
add
jl
outsl
fcoml
xor
mov
sub
fisubl
lods
popf
test
cmpordps
lret
sbb
shlb
and
mov
enter
repnz
xor
adc
add
dec
int3
and
fisubrl
testl
xor
xor
add
xchg
push
test
jp
push
mov
popa
out
mov
mov
loop
or
nop
jno
add
jecxz
xchg
xchg
pop
push
push
xchg
addr16
mov
pop
push
jle
pop
pop
rclb
fwait
hlt
push
rol
dec
mov
lea
into
push
xchg
mov
mov
push
mov
adc
sub
ds
popa
call
fdivp
inc
add
fs
dec
jb
add
pop
adc
cmp
movsl
push
imul
subl
xorl
sub
xchg
pop
imul
rcrb
notl
inc
lods
cmp
in
add
enter
add
enter
into
or
ja
pop
or
push
xor
aam
std
dec
decb
and
xchg
and
insl
dec
push
adc
scas
mov
popa
cmpsb
gs
sarb
sub
aaa
call
sbb
xchg
loope
adc
scas
shlb
addb
pushf
mov
dec
add
sbb
fcmovne
ret
or
das
cltd
dec
mov
jmp
xor
mov
jmp
je
aaa
out
dec
inc
sbb
cmpsl
dec
mov
and
leave
pop
rcrl
push
fdivl
jae
aad
push
daa
push
int
jmp
cld
inc
mov
fadd
in
xor
movsb
mov
ljmp
push
pusha
fmuls
mov
pop
push
fdivs
bound
inc
mov
pop
ja
enter
inc
jp
jecxz
mov
dec
mov
xchg
aaa
xor
add
lcall
adcb
cmp
sub
xchg
fcoml
cwtd
or
lret
nop
push
ja
sbb
fdivp
stos
call
sub
sbb
subb
add
sbb
and
std
test
pop
sub
mov
das
sub
inc
cmpsl
or
pop
or
or
data16
icebp
leave
movsl
or
push
pop
xor
add
mov
lea
jmp
outsb
xlat
shlb
mov
pop
out
mov
repnz
jle
cmp
sub
adcb
cld
setae
mov
add
and
mov
xorb
adc
cwtl
rcrb
sub
mov
push
sbb
mov
push
sub
test
sbb
pop
push
push
cmp
push
xchg
iret
bnd
jns
and
add
iret
push
mov
inc
or
xchg
aaa
sbb
push
subb
mov
jnp
in
icebp
pop
cld
ljmp
xchg
icebp
sub
mov
xchg
xchg
adc
sarl
shl
or
add
lds
mov
mov
daa
push
out
push
jae
xlat
dec
cmp
loop
push
add
add
inc
nop
outsl
andnps
add
xchg
add
scas
push
mov
push
add
jns
imul
arpl
mov
mov
jne
mov
sbb
dec
repz
pop
mov
add
mov
jg
cld
lahf
jecxz
cltd
dec
testb
sub
mov
out
mov
out
ja
call
jne
iret
aas
out
out
inc
inc
out
call
push
sbb
mov
push
sbb
int
xor
test
sub
jl
xchg
out
dec
adc
mov
decl
pand
push
mov
and
test
mov
into
repz
lods
rorb
and
mov
dec
pop
mov
cmova
adc
sbb
push
pop
or
sub
or
loop
pop
jbe
clc
cmp
aad
and
mov
popf
mov
mov
cmp
adc
jecxz
cmp
fidivs
subl
jp
cmp
jl
dec
psubq
push
xchg
ds
adcb
mov
pop
mov
mov
cmp
insb
or
lret
repnz
inc
daa
inc
inc
hlt
jecxz
fs
scas
cmp
xorb
push
cld
jb
push
dec
xor
dec
sahf
jmp
push
pop
cltd
xchg
push
mov
aad
loopne
cmp
jp
add
out
insl
and
cmp
adc
stos
cmpsb
imul
mov
movsb
jg
mov
xor
scas
pop
xor
add
mov
dec
mov
out
sti
push
fcmove
fucomi
ds
add
lods
into
or
enter
cltd
scas
push
outsb
xchg
xor
sbb
inc
jl
ds
icebp
loop
idivl
sub
cmp
imul
push
jmp
cli
jmp
roll
add
mov
adc
jae
into
imul
mov
in
inc
lods
dec
pop
ja
sbb
inc
jae
sub
in
mov
pop
in
mov
cwtl
xchg
rep
js
shr
mov
sub
push
sub
and
dec
pusha
mov
mov
and
push
add
sbb
dec
jge
dec
ljmp
fildll
int3
mov
rolb
sbb
mov
dec
dec
sbb
cmp
mov
adc
dec
inc
insl
dec
out
jno,pt
or
es
and
call
push
lret
mov
jb
es
dec
ror
sbb
scas
aam
pop
xor
pop
mov
adc
add
fimull
stc
gs
xchg
push
or
push
adc
dec
cmp
pop
lods
cmc
pop
mov
cwtl
leave
add
call
shr
pop
mov
xorb
push
ja
arpl
mov
mov
xor
mov
jmp
sahf
lcall
adc
and
add
jno
xor
jle
jo
jle
xchg
in
orb
xor
sub
mov
addl
mov
pop
mov
fwait
popf
test
fistpl
mov
and
lcall
dec
test
std
pop
and
jb
dec
inc
sti
jbe
jnp
adc
xor
xor
mov
scas
or
sbb
std
cltd
cmp
or
ss
inc
mov
adc
in
xor
fisubrl
std
jmp
add
imulb
fisubrs
fildl
nop
daa
int3
sub
cwtl
aam
stos
pusha
aas
cmp
leave
in
pop
movsb
cmpl
cmp
int3
movsl
lcall
xchg
mov
test
cmpsl
inc
xchg
or
xlat
repz
into
lods
pop
dec
aam
xchg
or
sub
jno
fsubrl
sbb
sbb
sub
sub
mov
shll
xor
push
in
lock
rcrl
lods
sub
int
loope
inc
bound
outsl
mov
stos
inc
shrl
gs
leave
adc
mov
sub
adc
xchg
pop
dec
sbb
aas
xor
in
addr16
fimull
push
pop
lods
daa
daa
mov
xorl
ljmp
mov
call
xchg
inc
dec
mov
sub
pop
mov
ret
stc
xor
filds
cmpsb
dec
jp
imull
pop
add
cmc
cmp
stc
ss
adc
sub
mov
paddsw
dec
mov
lcall
es
mov
dec
inc
into
dec
out
sbbl
pushf
call
imul
cld
and
daa
rol
mov
fcomi
hlt
mov
je
popf
and
sysexit
mov
push
sub
dec
or
inc
int3
repz
lret
push
push
fwait
lock
arpl
inc
out
orl
mov
and
sub
inc
xchg
add
call
fbstp
add
repz
or
testb
xchg
hlt
jp
push
mov
add
xor
jge
jle
jbe,pn
icebp
in
std
pop
pop
sbb
sub
es
mov
and
sti
mov
ja
hlt
rolb
inc
sub
jo
inc
js
rcrb
imul
in
enter
sub
jmp
sub
scas
aam
stos
and
call
js
mov
divl
inc
adc
xchg
hlt
push
mov
mov
or
rorb
sub
lods
inc
or
adc
imul
mov
jp
aam
sub
inc
mov
aas
imul
lcall
sbb
hlt
xchg
adc
xchg
test
push
push
adcl
sbbl
sarl
stc
adc
out
enter
xchg
add
push
adc
movsl
in
sti
adc
xor
jle
jae
or
pop
add
mov
mov
sbb
adc
and
repnz
cmpsl
xor
in
sbb
jbe
or
add
inc
fnstsw
or
inc
mov
aas
pop
xchg
jo
call
mov
aas
cmp
idivl
int3
and
cmp
add
cltd
cmp
sbb
lods
test
out
sbb
js
arpl
lcall
cmp
ljmp
add
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
jmp
mov
xchg
imul
dec
sub
cs
jle
jo
jle
movsb
sub
out
ret
lret
clc
mov
add
test
fbstp
jl
loop
enter
add
cmp
mov
jle
cmp
das
clc
dec
jmp
lret
sbb
jecxz
push
fs
adc
mov
fucom
jne
lahf
add
or
std
div
fwait
mov
lahf
cmp
xor
adc
xor
das
ds
xchg
iret
cli
je
mov
adc
mov
out
bound
pop
fisttps
stos
xchg
push
imul
lahf
cmc
aad
insl
mov
in
out
jp
insb
pop
out
shl
fnstenv
inc
jne
and
cmp
adc
in
add
mov
mov
stos
push
jne
pop
mov
jmp
inc
xlat
mov
and
cmpsl
push
push
in
mull
mov
cmc
pusha
sub
inc
nop
rcrb
popa
dec
out
cmp
lahf
jb
out
imul
aam
xlat
and
push
shlb
stc
addb
mov
pop
frstor
inc
jnp
inc
mov
loopne
mov
and
push
ljmp
add
add
pop
push
scas
das
adc
dec
dec
dec
adc
xchg
loope
inc
inc
sbb
jecxz
arpl
sbb
pusha
adc
out
fldcw
sbb
int3
pop
dec
popf
popa
mov
push
bound
lods
add
test
shrb
adc
jmp
fldl
adc
cs
pop
mov
out
xor
loopne
push
cmp
lret
mov
dec
jne
in
loop
push
out
cmpsl
popf
xor
cli
sbb
add
and
xor
and
in
pushf
dec
int
adc
xchg
fs
lcall
jb
mov
int3
mov
movsb
ss
jmp
jecxz
add
jecxz
and
xchg
jge
movl
fldenv
inc
mov
sti
in
dec
xor
stc
xchg
leave
inc
xchg
pop
sub
shrl
enter
push
ja
aam
mov
mov
les
repnz
scas
jnp
add
sub
aad
inc
lock
inc
xor
add
decb
pushf
dec
cs
sub
jge
and
cmc
mov
inc
fisttpl
lock
nop
addr16
add
xor
in
or
pop
ja
lcall
out
test
mov
insb
push
mov
add
xlat
push
rorl
les
cli
mov
xchg
lret
leave
fcoms
xor
adc
mov
adc
fs
mov
mov
jne
imul
lds
rolb
adc
das
sub
dec
in
add
pop
cmpsb
xchg
xor
inc
xchg
dec
adc
lahf
adcl
jl
pop
mov
in
jg
cmp
push
mov
rorb
mov
cli
or
in
mov
arpl
cmp
loope
pushf
stos
xor
xchg
push
or
lea
sub
mov
popf
andb
cmpsb
sbb
and
out
leave
js
and
push
xchg
imul
push
sysret
mov
ret
jge
pop
in
jl
jns
ljmp
cmp
loope
enter
dec
jnp
xor
fs
rolb
xor
add
in
sub
mov
sbb
fcompl
pop
imull
sti
icebp
mov
cmp
dec
cwtd
pop
ret
xchg
add
call
cmp
call
insl
adc
dec
divb
faddl
lcall
adc
dec
cmpsb
daa
sub
xlat
inc
imul
sub
sbbl
push
sbbl
push
incl
push
andl
push
adcl
call
test
movl
je
adcl
xor
inc
movl
jmp
add
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
sub
movl
sbbl
lea
movzbl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
sub
lea
mov
adc
mov
mov
xor
or
sub
or
mov
mov
mov
sub
mov
mov
or
mov
mov
andl
xor
sbb
mov
xor
add
mov
mov
movzwl
cmp
mov
movzbl
mov
je
sub
mov
xor
add
sbbl
imul
movl
mov
movl
jmp
addl
xor
sbbl
add
mov
movzbl
sub
mov
xor
adc
add
not
mov
mov
mov
xor
xorl
add
movl
cmp
jne
sbbl
push
movl
pushl
sbbl
pushl
adcl
call
and
mov
mov
and
mov
sub
mov
neg
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
or
sbb
mov
mov
mov
or
movl
or
mov
movl
xor
mov
and
mov
and
mov
orl
xor
subl
xor
adcl
add
mov
adcl
xor
xor
adcl
add
movl
lea
movl
mov
movl
cmp
movl
ja
jmp
adc
mov
addl
mov
xor
xorl
lea
push
andl
xor
or
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movzbl
adc
mov
mov
xor
movl
lea
subl
push
and
mov
adcl
pushl
call
mov
mov
mov
or
xor
lea
mov
or
mov
subl
xor
xorl
xor
add
mov
andl
xor
movl
lea
movl
mov
movl
cmp
movl
jbe
movl
mov
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
add
mov
inc
mov
subl
pushl
orl
sub
subl
pushl
adcl
xor
mov
pushl
call
sub
adc
xor
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
repz
jae
hlt
aaa
scas
aad
and
or
mov
jle
jns
jle
xchg
jnp
jns
pop
xor
sarl
mov
pop
add
insb
out
jmp
mov
and
inc
inc
int3
pop
cmp
xlat
and
and
lock
and
jne
dec
push
fcompl
ss
daa
and
inc
xor
test
mov
or
push
sbb
pop
xorb
int3
pop
pop
es
roll
mov
pushf
movsb
xchg
jge
pop
cmp
xor
mov
xor
mov
enter
inc
add
cmp
push
popf
jl
orl
add
in
inc
out
cli
inc
lock
dec
inc
dec
out
mov
pop
stc
ja
cmp
inc
add
sarl
test
push
or
std
stos
aad
in
inc
jns
fildll
call
xor
mov
mov
cli
xor
sbb
sub
mov
fs
mov
clc
or
jle
sti
dec
adc
add
outsl
fldenv
rol
jo
ds
inc
push
gs
ljmp
jmp
call
pusha
jne
inc
imul
mov
mov
xchg
push
sub
stos
push
flds
loope
mov
outsb
movsb
cmp
jl
popa
pop
testl
push
lret
pop
push
aas
or
mov
nop
bound
in
pop
adc
icebp
shl
cwtl
repnz
fdivr
loope
push
loop
xor
jl
and
inc
dec
push
and
stos
dec
sbb
dec
sub
out
out
pusha
lods
add
loop
sbb
out
xchg
dec
pop
mov
or
cltd
jg
mov
mulb
xchg
dec
mov
std
xchg
fisubrl
xchg
aaa
adc
es
rcrb
or
sbb
push
push
push
jbe
push
fidivl
out
inc
in
lock
push
pop
fbstp
dec
jne
das
inc
mov
sbb
jo
filds
lret
add
pop
mov
xchg
or
repnz
out
mov
dec
or
movsl
jnp
xor
and
out
mov
mov
jle
sub
notb
mov
add
inc
aad
fnstenv
push
inc
das
inc
inc
std
sbb
inc
xchg
ret
stos
or
mov
sub
lock
pop
into
loopne
lock
or
rolb
xchg
pop
xchg
jp
xchg
pop
adc
outsb
or
jle
insl
mov
push
push
adc
and
dec
movsbl
add
aaa
sub
xor
hlt
cli
loopne
mov
mov
cmpsb
jp
pop
ss
cmc
or
imul
mov
inc
push
mov
adc
test
out
dec
xchg
addr16
mov
stc
xlat
call
adc
cld
xchg
int
xchg
cmpb
add
pop
filds
fdivl
xchg
mov
callw
add
adc
push
jbe
ja
inc
popf
mov
pop
cmp
push
inc
out
mov
pushf
xchg
rorl
push
xor
xchg
cmpsb
sti
pop
imul
inc
xchg
in
cmp
faddp
cld
mov
and
adc
pop
enter
sbb
cmp
mov
movl
movl
push
mov
mov
mov
movl
push
movl
mov
movl
mov
movl
cmp
je
or
jmp
cmc
pop
inc
gs
jge
pop
push
add
adc
inc
sahf
mov
jle
jns
jle
cmpb
mov
jl
sahf
mov
lds
shlb
sbb
ss
or
in
loope
jno
dec
jmp
mov
jno
insb
jg
cs
sub
rcll
xor
jg
xlat
in
sub
flds
sbb
jbe
dec
shll
imul
dec
pop
jb
mov
hlt
je
mov
push
jg
std
mov
mov
ret
rcl
fbstp
sbb
lret
mov
jmp
and
aam
je
jp
and
push
insb
adc
push
or
mov
inc
pop
or
popf
test
xchg
xor
shrb
ficompl
leave
int
ja
fwait
inc
pop
mov
xchg
inc
dec
and
stos
out
loop
xor
mov
imul
loope
dec
push
mov
lods
pop
mov
jmp
adc
inc
rorb
mov
out
sbb
adc
movsl
or
ljmp
sub
les
mov
mov
repnz
mov
adc
mov
jno
outsl
call
daa
outsl
icebp
test
or
or
push
xchg
mov
test
mov
jmp
pop
imul
lcall
mov
imul
sbb
xor
or
push
gs
mov
movb
jge
add
imul
stos
jo
inc
or
xor
aad
push
aad
idiv
in
adc
cltd
enter
xor
jne
adc
pop
push
push
mov
movsl
pusha
test
bound
inc
or
pop
mov
mov
movsb
or
pop
sarb
mulb
fbstp
aad
xchg
cwtl
rclb
jne
or
sub
test
sbb
into
push
aas
movsb
aaa
in
add
pop
in
adc
pushf
idivb
test
mov
add
add
mov
inc
sub
mov
addb
cmp
push
test
inc
ss
xor
lahf
push
push
ja
call
popf
and
roll
xchg
repz
mov
mov
pop
insb
push
into
cmp
jne
jmp
xor
lock
sti
call
lods
jbe
popf
mov
adc
or
jbe
inc
mov
inc
inc
pop
loope
xor
loop
sub
ja
sub
jbe
push
cmpsl
mov
inc
adc
adc
xchg
shrl
and
or
jns
dec
lods
add
or
add
add
out
cltd
jne
sarl
dec
pop
and
sti
sub
ret
test
sahf
in
pop
daa
xchg
sbb
xor
adc
aaa
in
idiv
aaa
repnz
fwait
int
mov
sbb
add
or
ret
pop
cmpsb
add
pop
ljmp
push
movl
inc
leave
and
sub
rcll
mov
addr16
and
adc
adc
ds
mov
mov
leave
mov
mov
icebp
test
mov
hlt
rclb
ror
pusha
fstpt
or
jne
push
sub
dec
sub
push
lcall
mov
xorl
xor
add
movl
cmp
movl
je
and
mov
mov
xor
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
and
add
push
pushl
pushl
mov
jmp
pop
pop
cld
sub
mov
push
in
jae
sbb
hlt
jns
jle
mov
push
mov
xchg
sbb
add
mov
enter
lcall
jnp
push
movsl
out
movsb
pushf
mov
mov
outsb
add
cmp
jle
mov
cld
cmpsl
sub
xchg
lods
pop
inc
jb
lahf
mov
pop
dec
fadd
gs
data16
out
pop
fists
xchg
push
test
fisttps
das
nop
movsl
mov
inc
sti
jl
xor
mov
mov
int3
das
int
mov
daa
add
xchg
out
xchg
ja
stos
inc
lret
fcoms
je
jns
or
mov
xor
ss
jmp
insl
fsubrl
xlat
dec
popf
mov
jbe
pop
push
pop
xchg
add
push
int3
repz
adcb
pop
mov
imul
cwtl
inc
scas
and
outsl
outsl
and
stos
sbb
pop
filds
sub
push
testb
jbe
pop
fisttps
pop
pop
xor
sbb
jae
mov
xor
aad
jg
sub
outsb
fimuls
mov
or
lds
mov
inc
mov
adc
sub
fstpl
cs
inc
mov
out
cmp
xor
jbe
xor
xor
outsb
jg
out
in
dec
lea
sub
push
les
sbb
cmp
cld
mov
adc
lret
pop
push
sbb
insb
sbb
stc
insl
lret
mov
or
imul
dec
mov
fistpl
mov
fimuls
or
push
scas
imul
rcrl
mov
fyl2xp1
jb
inc
repnz
jp
inc
loop
jmp
ret
fcmovne
sub
ss
rorb
jbe
mov
mov
xor
jp
cmp
push
jl
mov
mov
sti
gs
sub
es
outsb
mov
out
lods
sbbb
out
stc
mov
pop
mov
xor
cmp
icebp
jbe
pop
jbe
sbb
pop
pop
out
mov
push
jge
pop
mov
call
jno
shl
push
pop
aas
call
jle
pop
jb
xchg
inc
inc
mov
repnz
imul
lcall
lods
mov
aaa
sbb
dec
gs
sub
leave
xchg
mov
or
out
jb
cmp
jnp
js
lahf
stos
dec
bnd
sbb
mov
adc
xchg
push
cltd
push
jne
ss
dec
popa
je
sbb
mov
mov
cwtl
in
xor
push
jp
pop
mov
sbb
outsb
dec
cmp
iret
int3
and
jl
or
sarl
mov
mov
int
addr16
pop
push
mov
imul
mov
dec
aad
jo
arpl
int
xchg
sbb
cmp
mov
and
pop
jno
insl
jbe
sbb
cmp
jnp
push
movsl
push
mov
popf
rcll
repz
repz
imul
fs
stc
mov
cld
shlb
inc
dec
popf
and
aad
loop
cmp
pushf
jmp
stos
cwtl
dec
push
pop
mov
ss
xchg
into
call
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
jmp
in
ss
xor
icebp
add
sbb
je
mov
jle
push
add
pop
lret
jmp
jne
lds
mov
pop
adc
repnz
icebp
jecxz
pop
mov
jle
iret
jb
fstps
xchg
mov
cmpsl
push
adc
stos
scas
pop
lcall
pop
ljmp
rcrb
cli
adc
test
adc
or
repz
into
fcoml
xchg
jg
loope
dec
rcrb
pop
cltd
in
xor
pop
and
dec
sbb
ret
mov
and
aad
mov
dec
fidivl
popf
rolb
xor
pusha
inc
push
out
fdivrl
testl
pusha
mov
fnstsw
test
adc
add
loopne
movsl
mov
jae
sbb
add
and
sub
jp
add
shlb
jno
push
inc
lods
outsb
mov
jne
outsb
out
mov
and
dec
mov
inc
stc
jnp
pop
movl
dec
add
mull
jle
cmp
push
out
es
add
arpl
or
dec
or
and
movsl
push
mov
into
sub
test
cld
adc
or
push
mov
enter
adc
call
mov
xor
mov
in
push
jno
sbb
inc
and
aad
mov
mov
lret
sbb
jecxz
pop
das
sbb
pop
mov
mov
push
dec
ror
lret
pop
and
mov
cmp
mov
lcall
pop
int
adc
dec
sub
or
push
rcll
daa
jns
cmp
lock
sti
mov
loope
cs
jb
jmp
sub
push
xchg
xchg
cmp
dec
scas
loope
inc
mov
and
sub
inc
test
std
xchg
fs
inc
and
hlt
fbld
out
cs
int
cmc
xor
cmp
fists
xchg
push
mov
sbb
cmp
mov
enterw
and
and
sti
shrl
inc
addl
mov
test
frstor
push
push
sbb
push
sbbl
add
notl
inc
jmp
add
mov
dec
push
cmc
pop
push
xor
sbb
mov
cmc
xchg
out
rolb
fnstsw
fidivrl
add
fnstcw
mov
lahf
push
imul
addr16
add
xchg
bound
push
sbb
add
cmp
jno
es
inc
push
cld
pop
fstsw
lds
and
xchg
pop
push
stos
mov
inc
sbb
and
sahf
xchg
mov
xlat
push
test
ret
jge
sub
fildl
jge
xchg
mov
ret
or
inc
repnz
js
aaa
mov
jae
or
cmp
add
mov
popa
popa
cwtl
bound
inc
adc
xor
push
mov
and
push
push
xor
pop
int3
and
and
inc
xchg
aaa
xchg
sti
add
xchg
and
test
inc
scas
ja
nop
sbb
fdivrl
jle,pn
lret
adc
mov
fmulp
das
mov
inc
cld
xor
pop
jmp
push
clc
clc
mov
test
adc
test
jle
hlt
jns
jle
jge
xor
lcall
aam
mov
lret
pop
jp
test
cmpsl
pop
loop
loopne
subl
cmpsl
jg
push
cs
dec
or
movsl
out
push
adc
sub
xchg
or
mov
mov
jbe
cmpsb
sbbb
jg
cmp
adc
add
int
aam
lahf
inc
xor
movsb
sub
cltd
dec
aaa
daa
in
mov
nop
int3
sti
cwtl
pop
mov
lods
ret
leave
xchg
in
pop
xor
je
fbstp
jb
fwait
jne
ret
movsl
icebp
adc
loop
cmpsb
jl
lea
fstl
mov
arpl
mov
sti
cmp
ret
sti
sbb
sub
pushf
adc
jecxz
scas
or
out
mov
out
mov
mov
adc
imul
push
add
cmp
into
idivb
std
adc
jns
movsb
cmp
dec
xor
int
filds
testl
mov
jle
mov
sbb
add
dec
movsb
adc
nop
cwtl
inc
add
les
pop
pop
sbb
dec
dec
jle
shll
out
mov
js
lea
mov
incb
mov
das
cmc
movsb
add
mov
fdivrp
aas
and
or
stc
leave
shlb
cmp
or
or
push
ffreep
or
outsl
das
inc
xchg
or
mov
out
dec
repnz
add
lods
hlt
push
lahf
adc
mov
out
popf
mov
in
shl
pop
jnp
add
adc
rcrl
lods
cltd
pop
xchg
orb
mov
push
push
mov
out
fld
xor
cmp
mov
sbb
mov
les
aas
adc
xchg
xchg
mov
add
fisttpl
mov
xlat
push
les
inc
aad
or
pop
imul
loopne,pn
mov
xchg
outsb
mov
cmp
mov
push
lock
repnz
iret
or
push
or
aad
jo
dec
xchg
shl
aas
cmpsl
into
push
sbb
jmp
out
test
cli
adc
adc
lds
inc
dec
fdivr
cld
ret
or
or
test
xchg
scas
inc
cltd
lds
sbb
mov
add
pop
pop
mov
aaa
stc
inc
adc
fistl
dec
and
fsub
mov
push
nop
dec
rcrb
adcl
sbb
pushf
aad
jns
ret
jno
insb
fildl
push
mov
stos
xchg
push
ljmp
push
push
jp
pop
sbb
mov
jmp
mov
xchg
in
push
aas
jno
out
rorl
mov
push
mov
mov
sub
lret
inc
sahf
inc
lods
insl
les
mov
rorb
cmp
xchg
shll
call
pushf
mov
test
sti
or
push
movsb
xor
xchg
lret
cli
or
xchg
aaa
call
aas
xchg
xor
sub
ficoml
roll
stc
pop
fnstenv
fs
xor
mov
out
add
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
xor
mov
andl
mov
add
xor
cmp
movl
jne
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
jmp
mov
jae
mov
sub
loope
inc
mov
inc
jle
pushf
jg
jle
xlat
jp
out
sti
add
or
add
mov
xor
mov
push
pop
mov
add
and
iret
lea
pop
mov
dec
ret
sti
enter
lods
mov
adc
aam
adc
testl
push
sbb
mov
xchg
incl
cmpsb
jmp
push
xor
pop
cmp
in
cs
or
out
dec
sbb
cld
sub
gs
imul
lds
fsubs
imul
xchg
enter
insl
cmp
cld
cli
pop
rcrb
or
add
adc
cmpsb
std
xor
aas
mov
fstp
popa
ficompl
jl
and
fwait
push
in
insb
and
xor
mov
xor
lcall
mov
xchg
cmpsb
inc
in
inc
in
dec
mov
fldcw
fwait
mov
adc
sbb
pop
add
cmp
hlt
daa
int
mov
or
jnp
or
repz
fbld
push
jbe
iret
mov
ja
scas
jno
and
mov
inc
pop
rol
pusha
and
fisubs
clc
ljmp
out
sub
sti
push
into
and
xchg
adc
mov
xor
js
negl
add
jbe
xchg
mov
pop
inc
add
js
mov
push
dec
lods
pop
sub
or
inc
inc
aas
inc
sti
aaa
cmpl
xchg
mov
mov
jmp
cmc
mov
enter
cmpsl
mov
addr16
jle
pushf
jg
jle
push
dec
pop
inc
sti
inc
xlat
flds
test
test
sub
cmp
hlt
lret
les
add
mov
dec
loop
je
push
sub
in
movsl
dec
into
dec
cmpsb
xor
test
imul
adc
arpl
push
push
add
xor
adc
sbb
scas
cmpsl
arpl
pop
outsl
out
movsl
cmp
aad
repz
mov
ss
out
jg
inc
sub
adc
gs
loopne
inc
movb
stos
jmp
add
scas
mov
testl
xchg
ljmp
sbb
push
aas
or
xchg
jle
push
fcompl
adc
leave
dec
mov
jno
pop
outsb
jge
pop
push
push
nop
lret
jb
and
push
lock
mov
lahf
push
ffree
call
aas
nop
fbstp
in
lds
inc
scas
xchg
and
insb
mov
jecxz
mov
arpl
ljmp
clc
out
aam
ds
push
cmpsl
movsl
imulb
jbe
xchg
mov
jo
je
lods
movsb
lret
xor
jg
call
mov
adc
fst
aam
popa
insl
sahf
push
fistps
mov
popf
jl
nop
dec
icebp
or
loopne
xor
std
push
push
into
dec
rcll
xor
mov
bound
cmp
jmp
sub
pop
xchg
add
inc
mov
pop
test
addr16
mov
add
gs
inc
lea
push
mov
xchg
mov
push
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzbl
adc
mov
andl
xor
add
movl
jmp
cmp
arpl
mov
arpl
lds
js
inc
jle
popf
js
jle
inc
mov
mov
mov
dec
cmpsl
mov
and
mov
dec
stos
pop
add
cld
jecxz
cmpsb
xchg
push
ret
mov
lcall
adc
sub
fwait
out
sub
idivl
ds
add
push
jae
int
and
repnz
xlat
loopne
jl
mov
stos
shll
adc
sub
adc
in
imul
push
xchg
push
jne
mov
sbb
inc
cmp
fstpt
cmpsl
pop
push
lock
sbb
adc
mov
xchg
cld
sub
imul
popa
add
cmpsl
rcrb
or
mov
insb
pop
add
mov
mov
mov
rcrb
pop
adc
mov
fdivs
jl
add
test
push
jle
xlat
mov
movsl
jle
divl
je
push
ds
scas
inc
jnp
inc
push
cwtl
mov
cwtl
mov
jne
mov
sbb
push
stos
icebp
inc
nop
mov
rolb
inc
jbe
xlat
push
xor
scas
cltd
add
and
pop
mov
fs
jmp
xor
iret
adcl
or
mov
sub
sub
adc
daa
xor
test
dec
and
shl
mov
std
ljmp
push
inc
scas
dec
imul
test
mov
dec
clc
stos
or
popl
and
lds
out
push
xchg
fs
push
push
xchg
leave
dec
xchg
arpl
push
fwait
scas
inc
lods
cmp
xchg
jns
ja
test
rclb
repz
js
or
push
nop
jle
in
mov
in
dec
aad
adc
adc
cmpl
lock
and
mov
insb
mov
punpcklwd
addr16
jg
nop
fiadds
cmpl
dec
test
stos
push
push
mov
fmull
sqrtps
js
scas
mov
xlat
xorb
xchg
mov
jp
xor
lock
inc
adc
lods
aad
jp
rclb
mov
adc
dec
fcomps
mov
lds
cwtl
adc
test
sbb
cs
and
arpl
dec
adc
add
inc
or
inc
cld
cmp
or
mov
push
movl
mov
mov
cmp
movl
je
mov
xor
subl
xor
xorl
lea
xor
cmp
jne
movl
jmp
jmp
inc
lods
xchg
addr16
mov
leave
dec
jle
popf
js
jle
jl
loope
rol
fidivrl
inc
mov
cmp
push
mov
add
fmuls
mov
inc
add
lret
rolb
adc
pop
sbb
je
lea
call
call
loopne
mov
push
dec
lock
or
mov
out
mov
cmp
jle
icebp
in
push
adc
xlat
push
or
dec
dec
cld
pop
ds
jmp
pop
shll
inc
popa
fs
inc
push
lret
or
pop
cld
xor
jle
or
arpl
and
ss
adc
aaa
push
filds
loop
push
fcomp
fldl
cmp
jecxz
pop
jns
fimuls
imul
insb
fcoml
sbbb
pusha
mov
ja
leave
mov
cli
dec
lret
movsb
bnd
inc
xor
sub
or
js
adc
decl
dec
add
leave
ss
mov
scas
jae
push
enter
fsubl
cmovg
xorl
mov
mov
jnp
mov
mov
repnz
jmp
insb
cmpsl
es
aam
es
and
icebp
movsl
add
xchg
xchg
loop
mov
xor
aad
dec
cmp
in
mov
push
mov
test
add
fldcw
jle
bound
adc
insb
stos
aam
jae
bound
xchg
test
jnp
cmp
scas
orl
add
hlt
sbb
mov
outsl
mov
jbe
loope
dec
fistpl
psraw
lods
addl
add
lret
push
popf
shl
mov
mov
lea
mov
inc
and
fucomp
stos
shrb
rcrl
int3
insl
cmp
out
mov
bound
cltd
jg
js
pop
lea
inc
xchg
dec
push
mov
mov
addr16
mov
pop
fnstenv
xchg
add
dec
shll
cld
add
mov
scas
icebp
xchg
pop
xchg
dec
subl
xchg
out
sub
adc
test
mov
add
mov
pushf
mov
mov
ds
mov
clc
adc
push
fwait
and
push
out
lahf
cltd
fs
sahf
inc
push
test
enter
cmpb
cmp
cltd
and
add
mov
out
jp
push
pop
mov
jecxz
push
dec
ds
mov
xor
add
mov
mov
xor
jmp
jo
rsqrtps
pop
jge
pop
mov
shll
js
jle
sub
leave
gs
fmull
inc
push
xchg
sub
pop
outsl
mov
or
leave
es
pop
daa
xchg
filds
cld
pop
subl
sub
mov
test
pop
jnp
daa
fs
inc
jg
enter
outsb
push
dec
cmp
mov
adc
inc
repnz
lea
icebp
mov
pop
addr16
loope
mov
inc
shl
jb
std
loope
dec
or
sub
popf
sub
daa
fbld
aad
dec
xchg
add
fstps
mov
inc
insb
stos
in
sub
sub
push
fiadds
movsl
or
es
in
push
lcall
mov
mov
leave
mov
pushf
mov
xchg
lds
adc
stos
cltd
test
mov
sub
add
fxtract
mov
mov
cmp
add
daa
sahf
scas
inc
jp
dec
adc
push
xchg
in
inc
clc
dec
movsl
jg,pn
movsb
push
xchg
or
or
or
inc
push
or
sbb
pushf
aaa
out
add
mov
jg
popf
push
fstl
aad
mov
cld
cwtl
mov
gs
out
andl
stos
aam
insb
inc
adc
clc
jnp
imul
xor
arpl
mov
cmpsb
out
sbb
mov
add
jo
sbb
shll
cltd
jg
lea
jo
loop
js
aas
mov
pop
es
xchg
out
notb
push
stos
sub
mov
mov
cli
lcall
aam
push
cmp
dec
mov
int3
stc
jnp
fstp
cmpsb
out
je
sub
test
fisttps
bound
hlt
cmpsb
xlat
add
sarb
xor
mov
mov
or
pushf
jns
aam
out
dec
sub
push
inc
stc
mov
xchg
xor
sub
fstl
push
popa
scas
mov
push
dec
sbb
cmp
add
scas
jp
push
out
sub
mov
or
push
in
shlb
stc
jmp
push
sarl
loopne
mov
lods
or
dec
rcr
cmpsl
fcoml
inc
xlat
and
sysenter
loop
mov
ud1
xchg
add
add
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
movl
mov
xor
movl
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adcl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
mov
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
adc
mov
xorl
add
orl
mov
sbb
mov
xorl
push
movl
push
sbbl
test
je
mov
sbb
mov
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
imul
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
add
jmp
roll
std
mov
xchg
inc
jg
iret
and
pop
jg
jle
xor
aad
jb
xchg
jle
std
or
jmp
leave
mov
or
mov
and
mov
mov
stc
sub
shrl
call
or
into
jbe
sbb
fldl
inc
leave
and
fsts
or
cmp
inc
sbb
sub
mov
enter
push
sarl
sbb
cltd
and
mov
xor
adc
sub
sbb
popa
scas
iret
addr16
fisttpl
push
adc
mov
bound
pop
mov
adc
inc
mov
xchg
popa
insl
add
inc
movsl
lds
cmp
repz
cwtl
fs
ret
xor
cs
sbb
mov
sbb
mov
xor
jg
jbe
rorl
or
pop
mov
xorl
test
cmc
fisttpl
lea
shlb
sub
scas
popa
testb
cmp
dec
addr16
sahf
xor
popf
push
inc
push
pop
pop
aaa
dec
lret
push
arpl
push
dec
pop
fsubrl
fld
sbb
add
and
dec
jp
fdivrp
sub
and
out
or
push
es
mov
add
cmp
pop
xor
xchg
and
xor
cmp
or
int3
sbbl
mov
mov
jb
pop
fsubp
sbb
jns
mov
fcmovnbe
shlb
jno
shl
mov
lahf
sub
push
aaa
popa
xor
insb
push
int
pushf
xchg
stc
fwait
ljmp
sub
push
cmp
cli
dec
jnp
test
in
repz
in
jns
add
or
mov
jmp
lret
outsl
dec
jne
stos
movsb
loope
lods
fists
aaa
ljmp
jle
push
iret
inc
sub
cld
sbb
dec
adc
rorl
pushf
and
mov
dec
loop
jp
imulb
mov
stc
mov
jno
xchg
xor
cmpsb
mov
mov
nop
dec
or
push
mov
inc
sahf
push
mov
mov
fimuls
scas
mov
adc
aas
and
enter
push
ret
jle
jno
pop
ret
sub
daa
out
xor
cmp
fimuls
hlt
faddl
cmp
mov
jl
popa
je
data16
repz
das
pusha
in
push
jbe
lock
out
int
adc
js
mov
xchg
out
add
iret
xchg
jo
insb
ds
sahf
and
into
cmpsb
add
popf
mov
orl
adc
in
xor
in
arpl
aad
push
xchg
push
xchg
mov
inc
daa
adc
lahf
enter
repz
mov
out
imul
pop
je
dec
mov
in
mov
test
sub
add
xchg
push
icebp
fcoml
jo
shlb
sbb
push
insl
mov
or
dec
stos
or
pop
dec
stc
in
mov
mov
cmp
push
and
iret
sub
call
add
repz
rep
in
xor
adc
push
negl
xor
cmp
add
ds
repnz
pop
and
gs
int
add
loope
mov
pop
shll
jmp
les
test
or
shld
add
inc
pop
xchg
loope
repnz
loopne
into
sub
xor
xor
adc
mov
mov
decl
mov
mov
mov
addl
xor
xor
add
mov
mov
mov
movl
je
adcl
mov
adcl
xor
orl
add
movl
cmp
jne
sbbl
pushl
orl
call
and
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
xor
add
cmp
je
orl
pushl
pushl
subl
call
movzwl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
jmp
scas
repz
add
push
out
sub
inc
mov
jle
pop
jg
jle
and
loop
popf
sbb
mov
pop
and
push
pop
in
lcall
xor
sbb
inc
mov
movsl
hlt
loop
scas
pop
sbb
dec
push
pop
pop
loop
mov
jae
mov
test
jbe
movsl
hlt
test
aas
pop
leave
cmp
addl
data16
stos
pop
aas
in
mov
mov
mov
fs
cmp
fwait
ss
sub
setb
leave
out
ret
pop
jmp
les
inc
xchg
cmpsl
stos
or
ss
rcl
mov
gs
ljmp
in
loope
in
insb
outsb
stos
cld
sub
js
cmp
aas
sbb
mov
lds
sub
pop
in
mov
dec
mov
push
add
shrl
aam
fucomi
leave
jbe
dec
dec
add
enter
dec
sub
mov
xchg
mov
nop
mov
hlt
adc
pop
addl
mov
loope
int
sub
mov
dec
and
xrelease
mov
mov
pushf
sti
push
call
sahf
cld
cmp
scas
sbb
adc
mov
movsl
or
adc
ret
leave
aam
lock
rcll
subl
cmp
adc
movsb
mov
test
xchg
lret
jns
ret
fdivrl
adc
jl
stos
arpl
push
sarb
pusha
sahf
push
push
jb
pop
xchg
shlb
sbb
xor
cmp
or
jmp
cmp
mov
cli
mov
js
xor
loope
scas
xchg
cs
in
out
movsb
cmovp
adc
add
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
jmp
lret
dec
add
je
jge
xchg
jle
jg
jle
dec
outsl
pushf
fidivrs
add
mov
icebp
test
bound
das
jmp
mov
xchg
or
xchg
movsb
or
aaa
lock
lods
gs
sub
aad
or
popa
rcrl
test
fld1
imul
mov
pop
test
jb
daa
mov
mov
inc
arpl
inc
std
inc
and
push
push
mov
jae
loop
sub
imul
lea
push
fwait
insl
call
xlat
xchg
lahf
xlat
jne
or
sub
mov
mov
stc
mov
sub
xchg
inc
dec
stos
mov
dec
mov
xor
aaa
packssdw
aaa
mov
outsb
insb
fadds
mov
xor
rcr
cmc
inc
lret
bnd
imul
sbb
mov
pop
inc
adc
jl
mov
mov
mov
rorb
fwait
push
push
jno
pop
popa
sub
std
les
mov
lcall
in
scas
arpl
pop
popa
stos
int
fldt
inc
adc
or
jnp
cmc
in
cltd
jno
lahf
popf
push
jecxz
xor
shrb
dec
push
adc
jb
in
cmp
pop
inc
dec
daa
lds
dec
push
pop
cltd
lds
xchg
cmp
sub
faddl
jl
pushl
mov
aad
dec
aaa
mov
jge
fstps
push
imul
push
xchg
jns
fcmovb
sbb
mov
iret
sahf
enter
out
or
xor
test
pop
inc
mov
pop
mov
out
mov
cmp
jl
int
repnz
movsb
add
std
dec
add
int3
ljmp
sub
cmp
jne
xchg
mov
mov
push
jle
pop
jg
jle
xchg
rclb
add
xlat
jo
xchg
dec
mov
xor
xchg
lcall
push
mov
inc
sbb
mov
imull
cmpsl
and
leave
movsl
rcrl
je
and
scas
or
jmp
pop
out
mov
in
movsb
jmp
pop
inc
or
loop
aam
stos
daa
jmp
bound
movsb
ret
pop
xorl
ss
subb
rcrb
movsl
lea
dec
mov
lods
mov
sub
rcrb
movsl
add
mov
sub
cli
mov
xor
fisttpl
lods
adc
fistpll
dec
jnp
mov
inc
outsb
fdivrp
and
ror
scas
fidivs
and
mov
mov
pop
adc
and
movsb
cmp
iret
imul
adc
clc
lret
inc
repnz
add
lods
and
cmc
lock
ret
push
add
jb
or
adc
jbe
adc
insl
imul
xlat
push
lods
mov
mov
xor
mov
sub
data16
adc
jo
sbbl
pop
aad
inc
sub
jge
mov
fwait
enter
jecxz
imulb
dec
dec
xchg
divb
mov
add
in
or
xchg
cmpsl
out
mov
jnp
or
sub
stc
sub
xor
adc
sub
test
pop
push
push
test
add
mov
sarl
outsl
repz
adc
mov
push
lcall
mov
xor
mov
and
and
out
inc
or
inc
cld
mov
xor
add
cmp
jne
mov
xor
jmp
mov
jmp
xchg
aam
jne
xchg
in
sub
jns
jle
jle
pop
jg
jle
pop
and
inc
mov
mov
mov
pop
mov
adc
mov
inc
in
and
mov
fcoms
sahf
dec
int
pop
cmpsl
push
add
jnp
test
xor
jns
out
ss
dec
insl
mov
movl
push
pop
xor
test
ficompl
ret
in
aaa
add
dec
nop
aad
aas
inc
add
popa
testl
cltd
mov
jle
scas
push
pushf
mov
addr16
pop
add
jmp
cmp
movsb
iret
xchg
out
cmp
xchg
sbb
call
mov
mov
mov
daa
fwait
popf
pop
cmp
jns
daa
dec
stos
adc
pop
sarl
out
out
cmc
rorl
enter
rcrb
sbb
and
ja
fbstp
mov
pop
daa
sbb
mov
xor
adc
jns
jge
add
js
jo
sahf
or
push
jl
les
add
lea
bound
fwait
push
stos
ret
cmp
jmp
jns
ss
push
enter
cs
outsl
jns
sbbb
xchg
hlt
lret
inc
inc
mov
adc
dec
adc
shll
lret
mov
jle
pusha
data16
test
push
stc
jg
loope
loope
or
inc
xchg
aas
inc
xchg
cmp
ret
mov
xchg
stos
shr
std
cwtl
add
outsb
out
push
inc
subl
inc
ja
ljmp
jp
fxch
insb
push
stc
pop
mov
and
popf
out
adc
cmp
std
adc
xchg
daa
icebp
mov
in
push
mov
xchg
xor
imul
inc
lock
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
jmp
inc
mov
pop
push
outsb
outsl
stos
mov
pop
jle
pop
jg
jle
testl
sub
adc
in
icebp
jle
push
call
rorb
js
xchg
fcoms
or
ds
fisttps
add
insb
fwait
fs
inc
xchg
loopne
ds
sti
icebp
pop
pop
divb
in
cmp
jge
test
mov
add
in
lea
cmp
mov
fcoms
or
xchg
fmulp
cmp
pop
dec
or
lock
mov
dec
xor
lock
sbb
cs
jp
jb
mov
mov
movsl
ret
sbb
in
mov
mov
inc
into
push
aaa
push
imul
sbbb
jp
adc
lock
rorl
nop
xor
mov
js
adc
adc
test
aad
inc
dec
orl
decb
jae
mov
mov
sbb
jnp
push
lock
mov
and
add
andl
sti
push
mov
mov
divl
jbe
cmp
out
scas
add
lock
aaa
pushf
xor
adc
dec
sub
out
je
sub
dec
push
js
add
aas
adc
cmp
and
or
xor
je
adc
pop
dec
sub
loopne
push
sub
jmp
pop
fucomip
daa
rorb
in
inc
pop
ds
xchg
loopne
add
mov
insl
jno
or
hlt
cmp
in
out
scas
lret
les
inc
stc
dec
jb
dec
add
stc
push
adc
outsb
jne
cwtl
cli
sarb
into
cltd
adc
cmpsb
inc
pop
scas
xor
jns
push
xlat
push
stos
mov
jmp
pop
xchg
data16
repz
add
shr
add
add
cmp
cltd
int
jno
ja
loope
and
push
add
jle
jg
jle
loopne
fdivs
cmp
jb
imulb
scas
daa
out
cmpsl
pop
les
arpl
fwait
mov
lahf
pop
es
add
inc
push
push
inc
lods
call
jb
fimull
fistpl
add
mov
das
mov
scas
dec
push
sahf
dec
and
test
sbb
sahf
mov
dec
or
mov
xchg
fistpll
and
adc
add
ss
shlb
add
adc
mov
cmp
jmp
push
test
lock
aaa
cmp
mov
or
cld
daa
scas
sub
shlb
mov
and
out
push
dec
push
int
les
mov
push
adc
cli
jg
movsl
je
outsl
mov
xchg
in
dec
mov
je
fadds
xor
insb
sub
insb
cmp
mov
mov
inc
cltd
out
shr
mov
mov
xor
test
mov
push
or
sarl
test
fldl
ss
sub
test
sub
out
lea
cs
outsl
js
push
imul
repz
stos
subb
je
pop
inc
jno
or
rclb
xchg
push
mov
jmp
jo
loop
popa
in
int3
popa
lret
sub
xchg
pop
xlat
lret
mov
jae
mov
cwtl
movsb
jo
push
xor
jl
pop
xor
or
dec
icebp
dec
in
xchg
arpl
xchg
jb
jg
pop
pushf
popa
or
ljmp
test
test
repz
int3
aam
mov
push
sahf
fxch
xchg
dec
jmp
fwait
inc
push
repnz
andl
jb
and
scas
add
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
jmp
ljmp
popa
cmc
xchg
fsubrs
add
cmpsl
pop
jle
pop
jg
jle
push
cwtl
jle
fucom
inc
lock
cmc
jnp
movsl
sbb
mov
gs
inc
or
push
jno
xor
add
mov
in
loope
sti
ljmp
mov
xchg
sbb
lret
xchg
clc
sub
or
repnz
fistl
dec
lret
or
and
or
test
mov
std
pop
pop
adc
push
xchg
and
pop
pop
aas
jge
pushf
sbb
cmc
arpl
jae
lods
mov
pop
divl
imul
mov
xchg
xor
int3
mov
addl
fsubrl
not
jl
icebp
lock
adc
and
inc
mov
mov
ja
add
cmpsl
lds
add
mov
cmpl
push
hlt
pop
mov
jmp
insl
xchg
jb
shlb
xlat
add
cltd
add
adc
mov
fsubp
mov
enter
lods
ljmp
sbb
pop
push
rorl
aam
adc
in
push
or
sub
sbb
push
test
adc
mov
and
adc
adc
pop
lret
insb
test
inc
andb
jae
jp
mov
popa
orb
lcall
int
adc
push
cmovp
fwait
pop
jo
lcall
mov
xchg
cmp
sub
mov
add
and
in
xor
sub
pop
nop
dec
dec
push
js
repz
scas
cli
jne
gs
mov
jge
ret
ss
ljmp
lds
imul
cwtl
xchg
push
decb
dec
ss
cmpl
push
test
imul
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
xor
add
inc
cmp
add
add
add
add
push
add
jl
add
xchg
add
xchg
cmp
add
add
mov
add
les
add
into
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
xor
add
cmp
add
dec
cmp
add
add
pop
cmp
add
add
add
test
add
mov
add
cwtl
cmp
add
cmp
add
add
enter
fdivrl
add
out
add
repnz
add
cmp
add
cmp
add
cmp
add
add
add
cmp
add
add
pop
cmp
add
add
je
add
nop
cmp
add
add
int3
cmp
add
cmp
add
cmp
add
cmp
add
add
sbb
add
cmp
add
cmp
add
add
pop
cmp
add
add
js
add
xchg
cmp
add
add
ret
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
sub
add
cmp
add
pop
cmp
add
cmpb
add
cmp
add
ljmp
add
add
sbb
add
sub
add
cmp
add
dec
add
pop
add
insb
add
jl
add
mov
add
cwtl
add
lods
add
mov
add
fidivrl
add
lock
add
push
aas
add
sbb
add
sub
add
cmp
add
dec
aas
add
bound
add
outsb
aas
add
js
add
xchg
add
xchg
aas
add
movsb
aas
add
mov
add
enter
fidivrl
add
in
aas
add
clc
aas
add
or
add
inc
add
xor
add
dec
inc
add
pop
inc
add
fs
add
je
add
addb
cwtl
inc
add
lods
inc
add
mov
inc
add
loopne
add
lock
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
push
inc
add
pusha
inc
add
jo
add
test
add
inc
add
scas
inc
add
mov
inc
add
call
inc
add
push
inc
add
sbb
add
inc
add
cmp
add
add
pusha
inc
add
add
add
addb
cwtl
inc
add
scas
inc
add
mov
inc
add
faddl
add
inc
add
clc
inc
add
push
inc
add
sbb
add
add
xor
add
add
push
inc
add
pop
inc
add
outsb
inc
add
test
add
add
mov
inc
add
fiaddl
add
inc
add
clc
inc
add
or
adc
add
and
xor
add
inc
inc
add
pop
inc
add
inc
add
jbe
add
mov
sahf
inc
add
scas
inc
add
movb
inc
add
in
inc
add
clc
inc
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
dec
inc
add
pop
inc
add
add
add
jbe
add
mov
add
inc
add
lret
add
inc
add
in
inc
add
add
add
inc
add
sub
add
inc
add
dec
inc
add
pusha
inc
add
insb
inc
add
addb
xchg
inc
add
mov
inc
add
ret
add
inc
add
call
inc
add
incb
add
inc
add
and
add
cmp
add
add
add
push
add
jle
add
xchg
inc
add
mov
inc
add
int3
inc
add
faddl
add
inc
add
push
dec
add
sbb
add
dec
add
cmp
add
add
push
dec
add
outsb
dec
add
mov
add
dec
add
mov
add
rorb
dec
add
add
add
lock
add
decb
add
dec
add
push
dec
add
cs
add
add
add
push
dec
add
stos
inc
push
dec
add
add
add
add
cmp
dec
add
inc
cmp
add
add
add
add
add
add
add
add
add
add
pop
xor
add
add
fs
add
sub
add
add
add
jb
insl
pop
dec
outsl
imul
ja
imul
fs
gs
outsl
popa
jb
dec
gs
inc
pop
inc
pop
inc
cmp
add
add
add
xor
add
add
add
and
add
add
add
aam
add
je
add
mov
add
nop
aaa
add
insb
inc
add
jo
add
dec
cmp
add
dec
add
sub
add
adc
add
inc
dec
add
hlt
xor
add
add
bound
add
add
xor
add
inc
cmp
add
add
add
add
push
add
jl
add
xchg
add
xchg
cmp
add
add
mov
add
les
add
into
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
xor
add
cmp
add
dec
cmp
add
add
pop
cmp
add
add
add
test
add
mov
add
cwtl
cmp
add
cmp
add
add
enter
fdivrl
add
out
add
repnz
add
cmp
add
cmp
add
cmp
add
add
add
cmp
add
add
pop
cmp
add
add
je
add
nop
cmp
add
add
int3
cmp
add
cmp
add
cmp
add
cmp
add
add
sbb
add
cmp
add
cmp
add
add
pop
cmp
add
add
js
add
xchg
cmp
add
add
ret
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
sub
add
cmp
add
pop
cmp
add
cmpb
add
cmp
add
ljmp
add
add
sbb
add
sub
add
cmp
add
dec
add
pop
add
insb
add
jl
add
mov
add
cwtl
add
lods
add
mov
add
fidivrl
add
lock
add
push
aas
add
sbb
add
sub
add
cmp
add
dec
aas
add
bound
add
outsb
aas
add
js
add
xchg
add
xchg
aas
add
movsb
aas
add
mov
add
enter
fidivrl
add
in
aas
add
clc
aas
add
or
add
inc
add
xor
add
dec
inc
add
pop
inc
add
fs
add
je
add
addb
cwtl
inc
add
lods
inc
add
mov
inc
add
loopne
add
lock
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
push
inc
add
pusha
inc
add
jo
add
test
add
inc
add
scas
inc
add
mov
inc
add
call
inc
add
push
inc
add
sbb
add
inc
add
cmp
add
add
pusha
inc
add
add
add
addb
cwtl
inc
add
scas
inc
add
mov
inc
add
faddl
add
inc
add
clc
inc
add
push
inc
add
sbb
add
add
xor
add
add
push
inc
add
pop
inc
add
outsb
inc
add
test
add
add
mov
inc
add
fiaddl
add
inc
add
clc
inc
add
or
adc
add
and
xor
add
inc
inc
add
pop
inc
add
inc
add
jbe
add
mov
sahf
inc
add
scas
inc
add
movb
inc
add
in
inc
add
clc
inc
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
dec
inc
add
pop
inc
add
add
add
jbe
add
mov
add
inc
add
lret
add
inc
add
in
inc
add
add
add
inc
add
sub
add
inc
add
dec
inc
add
pusha
inc
add
insb
inc
add
addb
xchg
inc
add
mov
inc
add
ret
add
inc
add
call
inc
add
incb
add
inc
add
and
add
cmp
add
add
add
push
add
jle
add
xchg
inc
add
mov
inc
add
int3
inc
add
faddl
add
inc
add
push
dec
add
sbb
add
dec
add
cmp
add
add
push
dec
add
outsb
dec
add
mov
add
dec
add
mov
add
rorb
dec
add
add
add
lock
add
decb
add
dec
add
push
dec
add
cs
add
add
add
push
dec
add
add
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
arpl
insb
outsl
arpl
add
data16
outsl
outsl
jb
push
add
arpl
push
add
outsl
ja
outsl
ja
jb
add
gs
popa
jo
pop
je
jo
add
in
jae
jb
push
add
jo
pop
insw
outsl
fs
int3
add
outsl
jb
add
js
imul
imul
popa
add
fwait
add
jo
pop
arpl
insl
outsl
fs
sub
arpl
arpl
add
data16
add
or
je
ja
jo
gs
add
data16
je
add
outsb
jbe
add
arpl
imul
add
jo
imul
add
je
push
add
je
add
mov
outsl
ja
add
test
jae
popa
arpl
add
add
outsl
insb
outsl
ja
jb
fildl
pop
popa
insl
jae
pop
gs
je
add
add
imul
add
outsb
imul
add
jae
bound
gs
add
push
add
arpl
inc
imul
jae
jb
arpl
add
add
insl
outsl
jbe
add
cld
add
jb
outsl
insb
add
and
insb
outsb
add
and
pop
gs
je
call
js
je
add
jo
arpl
call
arpl
add
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
repnz
jb
arpl
add
imul
add
ja
je
jo
add
mov
insl
popa
insb
insb
outsl
arpl
add
pop
pop
addr16
popa
imul
add
ja
arpl
data16
push
inc
push
push
cs
insb
add
xor
dec
outsb
jne
je
insl
dec
outsb
outsw
push
add
sub
inc
gs
popa
jae
inc
arpl
gs
outsl
jo
jo
add
add
outsb
fs
imul
inc
add
dec
imul
add
inc
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
jne
insb
push
arpl
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
imul
ja
jb
insl
push
outsl
imul
push
imul
ja
add
fs
outsb
jne
add
add
popa
bound
arpl
insb
insb
inc
popa
jb
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
add
outsb
fs
imul
rolb
dec
gs
popa
addr16
outsl
js
js
add
outsb
fs
gs
popa
addr16
add
outsb
imul
push
outsl
imul
inc
gs
imul
add
outsl
ja
arpl
insb
insb
inc
popa
jb
mov
dec
outsl
popa
fs
insl
popa
addr16
add
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
add
jo
imul
gs
add
sbb
push
gs
outsl
jbe
push
jb
jo
add
gs
jo
popa
je
push
outsb
add
add
push
imul
popa
jae
inc
add
add
je
insb
addr16
je
insl
push
gs
inc
add
ja
outsb
jne
popa
jb
sub
inc
gs
outsb
jne
repnz
jae
dec
gs
popa
addr16
add
push
add
je
insb
addr16
je
insb
dec
inc
add
mov
push
imul
push
arpl
push
add
sbb
inc
gs
arpl
dec
outsb
outsw
add
add
jo
imul
imul
inc
push
js
push
add
add
outsb
fs
gs
popa
addr16
imul
add
add
popa
jb
outsl
ja
jb
jne
push
add
insl
add
je
imul
outsb
addr16
add
mov
push
popa
imul
jne
dec
fs
add
movl
imul
gs
js
add
cmp
arpl
popa
imul
outsb
add
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
into
add
jae
popa
addr16
outsl
js
add
add
je
gs
popa
addr16
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
aad
dec
gs
popa
addr16
outsl
js
add
add
je
outsb
jne
je
imul
add
fs
outsb
jne
add
gs
jns
je
insl
dec
gs
imul
push
outsb
fs
gs
popa
addr16
add
aaa
add
je
outsb
jne
je
je
add
mov
inc
jb
ja
arpl
add
xchg
add
je
outsl
jns
jne
jae
jb
add
inc
fs
jae
push
imul
arpl
pop
add
je
jns
inc
outsl
insb
outsl
jb
jle
dec
imul
jne
je
insl
add
or
inc
jo
outsb
fs
outsb
jne
add
inc
push
outsb
jne
popa
imul
add
push
je
imul
push
arpl
insb
insb
push
imul
xor
inc
push
gs
add
push
gs
jns
inc
outsl
insb
outsl
jb
add
sgdtl
je
insb
addr16
je
insl
add
dec
add
je
outsb
jne
je
insl
inc
imul
or
inc
gs
gs
je
jo
imul
inc
add
je
popa
jb
outsb
je
movb
outsb
fs
popa
jae
add
inc
jb
popa
je
dec
outsb
jne
add
add
je
popa
jb
je
outsl
jae
sub
push
outsb
fs
gs
popa
addr16
add
test
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
inc
add
je
outsl
outsb
imul
push
add
add
jo
imul
gs
add
out
inc
jb
insl
gs
arpl
add
popa
bound
outsb
jne
je
insl
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
mov
outsl
ja
jb
insl
push
outsl
imul
jb
ja
outsb
imul
arpl
and
push
arpl
insb
insb
push
imul
add
pop
add
je
arpl
add
je
insb
addr16
je
insl
dec
outsb
je
or
imul
add
pop
add
gs
je
dec
arpl
dec
outsb
imul
dec
add
je
outsb
jne
je
insl
dec
outsb
outsw
push
add
pop
add
je
arpl
insb
insb
dec
outsb
outsw
add
add
popa
jb
outsl
dec
gs
inc
add
sub
fs
outsl
je
data16
gs
popa
addr16
add
sti
add
je
insb
popa
jae
dec
popa
insl
gs
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
push
jb
outsl
jb
add
push
gs
imul
js
inc
add
add
popa
jb
outsl
ja
jb
add
xchg
dec
outsb
jae
jb
dec
outsb
jne
add
add
jo
outsb
fs
outsb
jne
add
inc
gs
imul
add
push
gs
arpl
jo
jns
add
inc
gs
jns
inc
outsl
insb
outsl
jb
jb
jae
add
jg
push
push
outsb
outsl
ja
add
inc
push
dec
outsb
jne
add
add
insl
push
outsl
inc
push
add
push
jo
popa
push
add
xchg
push
jns
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
imul
popa
jae
push
add
addb
push
outsb
outsl
ja
jae
outsb
arpl
mov
jb
outsb
je
inc
add
push
gs
imul
outsb
addr16
add
test
push
ja
je
push
imul
ja
add
add
jo
imul
add
inc
imul
jae
popa
addr16
add
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
jne
inc
push
imul
add
inc
push
xor
cs
insb
add
lods
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
je
inc
jb
jae
dec
outsb
imul
add
push
imul
iret
add
insb
arpl
insb
gs
add
popa
je
inc
dec
inc
imul
add
jae
jp
push
popa
insb
gs
add
gs
outsl
inc
js
add
popa
je
inc
outsl
outsb
je
outsb
imul
mov
imul
inc
gs
gs
inc
inc
add
aad
inc
js
push
gs
dec
jne
push
add
popa
je
inc
imul
add
arpl
jae
bound
int
inc
jae
popa
jo
add
faddl
push
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
jae
je
imul
dec
jb
inc
js
and
inc
gs
imul
jae
mov
inc
gs
gs
dec
bound
arpl
mov
popa
je
dec
popa
je
push
push
inc
jb
popa
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
addl
imul
add
add
je
imul
jae
lods
add
insb
jns
gs
gs
add
add
je
bound
je
jb
arpl
add
jae
je
outsb
add
push
imul
add
popa
je
push
outsl
insb
imul
add
push
gs
dec
gs
imul
inc
gs
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
dec
inc
push
add
add
insb
arpl
imul
add
je
imul
outsb
jae
outsl
outsb
inc
js
add
add
je
jb
jae
dec
jb
inc
js
into
add
insb
arpl
push
arpl
addl
gs
gs
inc
js
outsb
je
outsl
imul
xlat
add
insb
insb
push
outsb
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
je
imul
add
je
je
arpl
bound
arpl
cmp
inc
gs
jne
jb
outsb
je
bound
arpl
jno
inc
gs
dec
push
xor
stos
add
gs
je
push
arpl
outsb
add
push
je
jb
inc
outsl
arpl
jbe
inc
imul
add
imul
mov
insb
imul
je
add
inc
inc
dec
xor
cs
insb
add
inc
imul
je
imul
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
add
inc
gs
gs
inc
imul
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
insb
dec
popa
insl
gs
imul
add
gs
jb
outsl
jb
outsl
fs
pop
add
je
gs
jo
imul
add
cmc
add
gs
je
push
popa
imul
insl
gs
add
pop
add
outsb
fs
imul
gs
add
test
dec
gs
jo
outsl
arpl
add
jbe
inc
imul
jns
add
rolb
inc
jb
popa
je
inc
imul
outsb
addr16
add
adc
dec
outsl
arpl
push
imul
gs
push
popa
je
dec
popa
insl
gs
add
dec
outsl
fs
gs
popa
outsb
fs
gs
add
mov
je
inc
imul
outsl
bound
push
imul
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
push
add
jmp
inc
gs
imul
bound
gs
js
add
mov
gs
jbe
outsb
je
add
push
insb
gs
js
int3
add
jae
jb
jo
outsb
push
add
add
gs
je
inc
jbe
outsb
je
add
push
add
je
jns
je
insl
inc
imul
jns
add
push
gs
gs
outsl
outsb
imul
imul
add
fs
imul
js
add
pop
add
insb
jae
gs
popa
insb
jne
add
add
inc
popa
fs
gs
fs
je
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
gs
jae
jb
gs
jne
je
popa
outsb
addr16
inc
add
adc
dec
outsl
arpl
dec
outsl
arpl
mov
jbe
jb
inc
gs
jne
je
outsl
arpl
add
incb
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
loopne
inc
jb
popa
je
dec
jne
gs
add
adc
inc
imul
outsl
dec
inc
dec
add
xor
inc
jae
popa
jo
inc
outsl
insl
insl
inc
jne
arpl
outsb
add
ss
gs
push
inc
outsl
outsb
je
js
add
sub
dec
outsl
jbe
inc
imul
add
je
push
dec
outsl
arpl
add
push
outsb
insb
outsl
arpl
imul
fs
je
insl
push
add
push
add
je
jns
je
insl
push
imul
jae
insl
outsb
je
mov
popa
imul
je
jo
gs
bound
arpl
add
inc
gs
gs
jo
popa
je
inc
add
out
add
je
imul
movb
je
arpl
imul
outsl
bound
inc
jb
add
roll
inc
jb
popa
je
inc
imul
outsb
addr16
add
cmp
dec
jo
outsb
inc
imul
dec
inc
dec
xor
cs
insb
add
push
add
imul
js
add
add
addr16
gs
jo
insb
addr16
add
add
outsl
outsl
jae
inc
outsl
insb
outsl
jb
add
or
inc
gs
imul
push
add
add
je
popa
jbe
inc
imul
add
arpl
fs
xor
cs
insb
add
inc
add
je
inc
imul
jae
add
dec
push
inc
push
dec
cs
insb
add
push
dec
push
jne
mov
inc
add
dec
inc
add
or
dec
ja
cmp
dec
jb
xor
dec
ss
jnp
sub
dec
sub
push
pop
push
xor
dec
cmp
dec
cmp
dec
jb
xor
dec
ss
popa
dec
sub
dec
sub
bound
arpl
dec
jno
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
jb
jae
addl
jo
jno
aas
dec
jbe
cmp
dec
ds
dec
dec
xor
dec
xor
dec
push
sbbb
setae
nop
jo
jno
aas
dec
jbe
cmp
dec
ds
dec
dec
xor
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
mov
add
aas
dec
pusha
dec
cmp
dec
cmp
dec
pop
dec
xor
dec
xor
mov
ret
add
jo
jno
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
ret
psrlq
shlb
jno
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
cmp
dec
cmp
dec
cmp
dec
push
loop
jecxz
repz
jo
jno
jo
jno
ds
jg
cmp
dec
cmp
push
ds
dec
dec
xor
dec
xor
add
adc
adc
jno
aas
dec
add
xchg
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
mov
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
test
mov
add
or
inc
add
fstpl
inc
add
inc
inc
mov
jne
mov
incb
mov
dec
inc
add
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
ds
pushf
clc
and
pushf
clc
ljmp
add
inc
add
imul
pushf
clc
popf
jmp
add
jbe
inc
add
adc
pop
and
add
add
dec
add
add
add
dec
add
inc
add
insb
add
inc
add
add
add
push
add
dec
add
add
dec
add
inc
add
imul
insb
popa
imul
dec
dec
inc
inc
insb
imul
imul
insb
jae
push
insb
imul
imul
imul
jae
imul
imul
dec
dec
inc
inc
push
outsl
imul
push
fs
imul
insb
imul
push
jne
jns
imul
jne
fs
push
data16
add
add
add
xor
inc
add
pop
dec
dec
dec
dec
dec
pop
dec
push
dec
or
dec
add
push
dec
pop
dec
push
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
push
dec
push
dec
inc
dec
pop
dec
dec
dec
push
dec
cmp
add
add
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jno
mov
outsb
jae
bound
add
mov
mov
inc
aaa
inc
jle
jno
mov
imul
inc
xlat
leave
xchg
inc
adc
jge
faddp
leave
xchg
fs
dec
leave
sbb
jno
rorb
add
shlb
xor
inc
push
outsl
push
push
inc
add
dec
inc
add
add
imul
pop
outsb
jbe
jns
push
imul
je
jp
arpl
push
imul
push
imul
push
jb
add
insb
pop
ja
je
bound
in
jnp
jnp
cmc
pushl
sar
fsts
shrb
add
add
icebp
push
in
aas
pop
xchg
fsts
xchg
lcall
jle
and
sbb
imul
pop
nop
fsubrl
mov
movsb
and
jg
rolb
mov
rcrb
ds
push
pop
jb
test
push
aas
cmp
mov
mov
push
add
pop
sub
ss
fildll
loope
lahf
aad
shll
cmp
sti
rolb
adcb
sub
or
pop
push
cwtl
cs
sbb
pusha
and
mov
subl
imul
push
orl
mov
mov
mov
sub
repnz
aam
test
cmp
cmc
and
repz
fimuls
xchg
fsubs
daa
xor
cmp
push
xor
shlb
pop
ficoml
in
jle
cs
pop
ret
into
mov
testb
add
popf
mov
cmp
lods
shlb
cmp
cmp
out
cmp
insl
lods
sarl
out
pop
inc
in
mov
enter
inc
fnstsw
mov
xor
insl
jnp
add
arpl
push
adc
sbb
dec
rclb
mov
and
jecxz
repnz
sub
jmp
into
dec
outsl
cmpsl
mov
or
fwait
pop
or
andl
mov
jl
ds
or
jb
inc
das
xchg
and
and
in
pushw
jecxz
adcb
pop
into
cmpsb
adcl
aas
es
in
inc
push
push
popf
imul
sti
push
jnp
cmp
xchg
mov
aas
shlb
int3
call
inc
xor
push
cmp
pop
push
dec
imul
insb
sbb
add
add
add
adc
lret
out
add
add
add
stos
mov
jl
mov
adc
xor
faddl
movsb
jl
test
xor
enter
jl
mov
inc
hlt
or
neg
or
punpcklbw
out
nop
lret
jno
popl
push
adc
inc
out
adcb
das
dec
stos
sahf
mov
pusha
movb
cs
dec
dec
test
or
push
andps
dec
pusha
push
push
fldcw
add
pop
and
dec
jmp
sbb
test
sti
fnstcw
jbe
sbb
jle
and
js
mov
icebp
sbb
push
cmpsb
cmpsb
in
dec
test
mov
inc
nop
test
clc
lock
mov
or
js
addb
loopne
stc
mov
pop
inc
pop
dec
aad
loopne
in
jns
pop
adc
mov
mov
fs
mov
add
add
mov
stos
dec
out
cs
or
call
add
roll
mov
ja
push
ljmp
fstps
aaa
adc
jns
cli
stc
mov
mov
cmp
mov
repnz
or
es
xchg
cmpsl
jb
push
fildl
rolb
mov
cmp
loope
jmp
jp
incl
pop
and
js
pusha
xchg
fists
mov
add
push
sub
into
inc
fisubl
inc
jbe
int3
jp
gs
sub
add
mov
pushf
pop
sbb
ret
cmp
and
jbe
pop
pop
test
fimuls
and
shl
clc
push
mov
mov
cs
jecxz
push
push
pop
daa
les
hlt
pushf
ds
stos
icebp
daa
sub
es
into
dec
push
xor
fimull
sbb
and
ds
dec
call
add
inc
or
leave
bnd
addr16
xchg
fs
add
lock
inc
test
jb
xor
sub
cs
mov
jl
jns
adc
scas
mov
add
pop
mov
mov
push
sub
jno
cmp
clc
aaa
scas
cltd
outsl
cmp
jae
aaa
inc
jo
in
cs
add
sub
ret
push
mov
mov
xor
mov
in
mov
imul
or
ret
scas
insb
ret
jbe
jne
pop
jb
bound
in
push
and
or
add
xor
mov
adc
pusha
aaa
jb
lret
sarl
leave
pop
jnp
mov
adc
sub
fisubs
lods
mov
adc
movsl
pop
push
notl
and
hlt
out
in
test
push
inc
aas
js
je
scas
pop
loope
pop
incl
add
jg
cmc
insl
cmc
out
lcall
sub
pop
lret
pop
ljmp
rcl
imul
mov
add
rcll
adc
adc
cmp
or
in
inc
cmp
loopne
cwtl
mov
jae
push
loopne
call
scas
inc
and
mov
mov
inc
xchg
mov
jb
and
out
sbb
out
and
sub
and
pop
push
icebp
jae,pt
mov
push
test
gs
mov
pop
or
outsb
jge
mov
cmp
cmp
dec
inc
xchg
xor
test
pusha
cmp
imul
icebp
in
setae
xlat
out
adc
xchg
aam
mov
loopne
aam
pushf
aam
ja
or
in
sbb
jmp
adc
xor
repnz
outsl
and
repz
add
add
outsl
jle
dec
xchg
call
rclb
add
testb
add
add
cmp
push
mov
jns
xchg
dec
add
mov
incb
shl
mov
mov
dec
lahf
incl
xchg
lea
les
dec
sti
push
add
scas
xlat
test
loope
push
lret
xor
mov
push
mov
int3
xor
enter
and
js
arpl
repz
pop
je
push
imul
push
movsl
mov
sub
and
or
add
xor
je
lods
dec
push
dec
movsb
gs
jmp
movsl
pop
fdivs
out
push
stos
ret
ljmp
mov
adc
push
insb
std
mov
fcmovnb
rcrb
or
lcall
adc
pop
cwtl
aad
scas
in
bound
gs
dec
inc
mov
aad
test
pusha
fcomi
repnz
add
add
jle
and
scas
sti
jle
inc
sbb
imul
add
orl
ljmp
aad
cmp
sbb
xchg
js
dec
cmp
ret
shlw
stos
in
push
repz
andl
push
mov
cli
ret
add
mov
data16
sbbl
pop
ja
pushf
xchg
rorb
ljmp
inc
cmpsl
test
mov
jne
xchg
sbb
mov
imul
jmp
sar
mov
xchg
sbb
ja
cmpsb
jle
les
pop
loope
mov
enter
xor
test
and
aad
inc
nop
pop
outsb
rclb
mov
push
lea
pusha
cmp
insl
sahf
filds
xchg
andb
int3
pop
jne
push
hlt
cli
out
shrl
inc
and
mov
push
pop
pop
lods
add
lahf
fnstcw
ss
lahf
stc
inc
jb
lahf
pop
imul
add
add
add
imul
lret
loop
jmp
popf
repnz
clc
push
or
pop
jmp
scas
dec
pop
pusha
and
clc
sbb
pusha
outsl
dec
cmc
outsl
stc
bound
sbb
mov
test
test
pop
popf
jp
sub
inc
das
dec
cltd
mov
push
std
sbb
jae
jle
or
adc
mov
dec
mov
std
in
mov
push
fadd
shrl
ja
push
imulb
mov
test
hlt
mov
xor
mov
xor
or
pop
lret
add
pop
mov
push
dec
xorl
jecxz
inc
push
dec
mov
fbld
inc
sarl
std
loopne
xchg
inc
add
mov
iret
add
pop
lcall
dec
mov
jnp
add
mov
data16
sub
pop
rcr
mov
bound
out
stos
mov
pop
mov
sbbb
scas
pop
add
xor
push
jl
jle
insb
pop
decl
add
add
testb
add
inc
xchg
gs
jno
and
cmp
dec
pop
movsl
mov
push
pop
pop
in
pop
xchg
jecxz
adc
inc
aas
in
adc
xchg
test
mov
push
dec
push
add
xor
test
lahf
xor
and
and
dec
sub
cld
mov
aam
test
shlb
and
lahf
jecxz
dec
aam
cltd
scas
cli
mov
sahf
das
jb
inc
mov
jle
pop
jg
lds
dec
or
mov
out
aaa
mov
dec
or
jge
jns
xlat
aad
fxam
push
jno
xchg
iret
or
mov
test
pop
jle
pop
xor
mov
jp
xchg
xor
push
aad
nop
inc
xor
aam
clc
inc
ljmp
mov
sub
mov
shl
or
inc
xchg
js
add
fwait
mov
pop
ljmp
sub
add
testb
add
push
add
jmp
ja
mov
imul
stos
mov
inc
pop
popa
shrl
xor
iret
and
cltd
shll
rep
cld
movsl
mov
sub
pop
mov
movsb
bound
iret
xor
mov
stos
fwait
add
hlt
xor
loope
push
pop
repnz
lds
mov
sahf
add
and
inc
std
mov
xor
and
inc
insb
mov
out
xchg
or
sub
fsts
mov
aam
and
rcr
xor
int
ret
jg,pt
xchg
test
xchg
add
or
jge
loope
or
push
insb
or
movsb
mov
outsb
pop
xor
dec
imul
insl
ret
pop
call
mull
jnp
sub
push
xor
imul
mov
add
data16
jne
mov
gs
push
call
push
lock
testb
add
jl
sbb
out
cmp
leave
int
negl
mov
sbb
repz
mov
pop
pop
or
cmp
mov
ja
bound
sub
cmp
call
daa
xchg
dec
mov
nop
lcall
ja
iret
ds
call
xor
sub
push
dec
lods
jecxz
popa
gs
mov
leave
clc
ret
sub
inc
fsubrs
stc
pushf
dec
pminsw
mov
rclb
push
cmpsb
arpl
jo
daa
push
inc
mov
cmpsl
inc
mov
lcall
sub
into
sahf
test
sub
pop
xor
repz
int3
mov
adc
rorb
fsubs
fadds
jg
adc
sbbb
cltd
cld
mov
dec
ljmp
cli
add
mov
jmp
rcll
xor
add
add
jnp
sti
xchg
rol
imul
dec
gs
add
testb
add
mov
out
adcb
xchg
popf
adc
repnz
mov
out
mov
stc
dec
pusha
jae
push
xlat
adc
lock
push
xor
and
or
mov
call
mov
mov
dec
jmp
inc
cltd
mov
test
xchg
fnsave
test
insb
sub
and
insb
movsb
fdivrs
or
das
mov
stos
mov
out
out
aad
out
rorb
loop
xor
dec
xor
push
popa
cli
inc
lret
xchg
in
xor
mov
int
imul
jp
cmp
mov
push
ljmp
fwait
dec
xor
add
pop
cmp
pop
sbb
inc
xchg
inc
scas
xchg
test
shrb
mov
mov
icebp
imul
aam
xor
out
test
cmp
sub
sub
pop
sarl
test
sub
inc
out
or
add
testb
add
mov
add
adc
lds
pop
push
push
data16
in
and
daa
ss
xor
shll
bound
mov
test
hlt
adc
mov
and
mov
push
cmp
add
pop
div
xchg
jmp
add
sbb
adc
ja
mov
cmc
sbb
in
imul
leave
orb
adc
cmp
jmp
lcall
int
mov
pop
out
or
push
rcl
push
dec
push
mov
xchg
jnp
add
mov
std
insb
in
das
aas
jge
imull
or
adc
sarl
je
stc
push
cmc
test
leave
xchg
jle
mov
jmp
xchg
adc
lock
cmp
inc
mov
sbb
sbb
add
repz
std
repz
xchg
scas
fstp
fstps
add
add
testb
add
ss
hlt
movsl
cmpl
xchg
clc
mov
aad
cmc
movsb
pop
ss
jmp
xchg
or
dec
pop
shlb
inc
push
popa
mull
ss
xchg
lods
mov
mov
out
insb
adc
jae
lock
popf
outsl
ljmp
pusha
inc
cmc
inc
push
imulb
aas
sub
and
addr16
push
lea
cwtl
pop
pop
pop
mov
movb
or
add
ja
daa
lcall
enter
or
sbb
hlt
std
xchg
fadds
mov
push
jb
bound
adc
idivb
out
icebp
daa
jl
add
inc
mov
call
ret
lcall
jg
cmove
xor
shlb
add
add
lock
cmp
or
push
xor
div
add
testb
add
mov
add
hlt
cli
and
and
insl
jnp
xchg
adc
xchg
arpl
stos
inc
push
mov
les
aad
dec
fisubrs
push
shll
out
mov
push
pop
clc
mov
dec
stc
daa
cwtd
clc
add
adc
push
pop
pop
jge
cmp
mov
repnz
mov
ret
sbb
push
shrl
stos
jecxz
imul
jecxz
or
inc
add
out
pop
or
jp
mov
sbb
add
iret
subb
adc
cmp
insb
in
sub
adc
mov
neg
jge
movsb
test
xlat
aam
jg
imul
je
subb
dec
xchg
dec
push
vphsubwd
jo
or
movsl
stc
data16
mov
mov
push
pop
mov
and
add
mov
mov
jne
icebp
int3
in
hlt
add
testb
add
push
ret
mov
ret
or
mov
movsb
cmp
test
jo
test
pop
inc
push
xchg
loopne
sub
int3
sbb
das
sti
adc
mov
and
cmp
stc
sahf
cmp
adc
cmp
test
mov
in
inc
sarb
adc
js
lds
mov
popl
es
inc
in
ljmp
push
mov
mov
in
xchg
das
push
sub
sbb
sub
out
mov
bound
arpl
adc
into
sub
out
aad
data16
xlat
push
pop
clc
mov
sbb
into
mov
jae
mov
adc
mov
sti
cmp
aad
scas
sub
push
sbb
adc
mov
push
jnp
cs
test
sbb
xchg
push
cmp
push
repz
xor
or
lret
xchg
in
mov
pushl
comiss
jl
sbb
cmc
add
testb
add
stc
or
push
sarl
iret
shl
fmuls
aaa
cmpsb
or
xchg
fucomp
jns
jae
push
push
push
fldcw
call
ss
cmp
jmp
sub
hlt
xchg
in
pop
mov
push
data16
inc
mov
insb
inc
outsl
repz
and
mov
dec
cwtl
fisttpll
enter
cmc
je
sbb
sub
imul
scas
fistps
out
ja
lods
pop
jg
aas
mov
pop
add
ficomps
mov
push
dec
out
fisubrs
sbb
addr16
pop
push
outsl
xchg
insl
jge
shl
notb
push
jno
lds
add
faddl
pop
mov
lea
dec
inc
pop
icebp
pop
dec
mov
addr16
adc
xchg
mov
cmp
lcall
jno
dec
shll
add
inc
mov
in
negl
push
inc
push
xor
addr16
sbb
add
testb
add
shl
lea
push
xchg
cmp
mov
lods
int3
flds
arpl
mov
pop
arpl
lret
addr16
lods
mov
jbe
push
std
adc
cwtl
divb
sbb
adc
xor
pop
inc
sub
inc
sti
rorl
lea
jle
ret
test
out
shlb
xor
stc
flds
xchg
lds
nop
fwait
mov
sub
mov
adc
cmp
sub
cmpsl
mov
ja
adc
and
sub
mov
lret
clc
and
dec
push
sub
sub
pop
xor
sub
fcomps
fwait
ja
lret
mov
jmp
test
loope
pop
jnp
and
jae
or
sbb
mov
sbb
lret
call
and
shrb
loope
add
mov
add
add
mov
nop
fmull
loope
testl
add
insl
arpl
les
jle
mov
add
repnz
mov
ficoml
mov
repnz
xor
jb
xchg
pop
jp
loope
mov
sub
neg
test
jp
pop
aam
ret
test
mov
shr
sbb
jecxz
mov
mov
mov
addr16
fcmove
mov
mov
lcall
add
pushf
scas
rcrl
js
pop
lahf
xor
out
loope
aas
jne
mov
mov
jbe
ret
hlt
sub
pop
inc
or
xchg
bnd
mov
dec
ret
dec
iret
xchg
cmp
xlat
add
or
neg
jmp
push
cmp
sub
out
xor
xchg
int
out
in
inc
sbb
call
xchg
repz
inc
add
cmp
mov
push
add
adc
ja
clc
add
testb
add
mov
imul
fsub
test
sub
mov
pop
sub
test
daa
in
repz
gs
sahf
test
icebp
cmpsb
sbb
inc
push
xchg
sbb
mov
adc
fstl
popa
mov
js
push
mov
or
rcr
lret
sti
inc
bound
sub
cs
gs
scas
add
mov
sub
xchg
lcall
fistpll
mov
sbb
xor
jle
jo
xchg
xchg
push
pop
jo
hlt
subb
inc
add
into
xor
mov
xchg
pop
shlb
test
lea
int3
pop
or
push
add
adc
add
cmp
movsb
sbb
adc
xchg
inc
mov
fmulp
or
ljmp
ja
dec
add
iret
and
test
add
out
repnz
add
pop
inc
xchg
pusha
push
mov
add
add
je
dec
das
pop
pop
xchg
notb
push
push
fdivs
sub
lds
je
jmp
enter
jmp
add
pop
push
add
sbb
and
xor
std
adc
inc
add
inc
cwtl
cli
scas
mov
dec
xor
jge
cmpl
jle
scas
mov
nop
ffree
pop
fdivs
push
out
cltd
xchg
neg
dec
push
scas
mov
jo
mov
and
pop
adc
inc
scas
call
inc
adcb
pop
jae
gs
xchg
push
stos
jns
repz
sbb
xchg
jg
adc
mov
push
in
scas
mov
inc
cmp
mov
jo
sti
dec
push
xchg
inc
dec
add
jecxz
add
lods
inc
test
cmpsb
pop
sub
mov
rcll
int3
mov
dec
sub
and
xchg
test
sub
mov
lcall
ret
shl
push
pop
repz
add
mov
push
decl
sbb
cli
add
testb
add
adc
rorb
inc
adc
imull
xchg
fiaddl
dec
aas
int
mov
cltd
faddp
fmul
mov
ret
int3
pop
cmp
dec
xchg
mov
xor
adc
das
lock
mov
jno
mov
adc
fcomps
ljmp
mov
push
loope
js
loope
adc
in
inc
push
add
jecxz
xchg
inc
decb
cmp
in
xor
pop
dec
mov
xlat
sbb
sbb
inc
cltd
cmp
or
sub
sub
lock
out
or
and
push
jns
rorb
or
stc
xor
imul
jne
xor
repz
and
dec
js
jp
cwtl
lret
jl
inc
dec
push
ficoms
leave
lahf
jb
sub
adc
pop
jp
sub
add
and
cmp
sti
fsubp
decl
ret
sbbl
lret
sti
add
testb
add
std
out
cmpsl
outsb
cmpsb
cld
dec
ljmp
frstor
leave
inc
pop
in
xor
fists
into
jge
dec
scas
int3
xlat
xchg
sub
cwtl
arpl
into
sbb
jl
int
sub
jnp
sub
jo
mov
mov
xchg
xchg
jnp
xchg
stos
sbb
movsb
xor
ret
xor
cmp
aaa
and
ss
mov
sarb
sbb
js
dec
and
mov
cmp
sarb
repnz
jne
push
adc
xor
imul
sbbl
movsb
sti
fildll
jno
cmp
sahf
fstpt
fucompp
out
js,pt
call
pusha
mov
in
fisubrl
add
cwtl
stos
int3
lea
out
cld
shl
mov
call
and
cmc
add
and
and
or
data16
out
cld
add
testb
add
pop
xor
test
mov
push
aas
mov
mov
into
jnp
adc
nop
adc
jo
cmp
pop
or
lret
xor
inc
inc
nop
inc
inc
dec
mov
pop
cmpsl
xlat
inc
pop
or
jg
and
sbb
adc
xor
xchg
or
scas
popa
mov
in
lret
sub
ficoms
cmpsb
dec
sbb
cmpsb
sub
dec
or
push
cmc
ror
and
enter
fstpl
sbb
in
and
fs
sbb
orl
xchg
shll
enter
mov
mov
mov
inc
push
push
and
cmpb
pop
add
mov
xchg
fs
daa
sahf
call
sbb
stos
cld
jg
jo
call
add
add
inc
ror
lock
jnp
jmp
sbb
sti
jae
xchg
std
add
testb
add
mov
shrb
cmp
sbb
icebp
lret
mov
adc
outsl
push
sahf
lds
decb
mov
cld
or
mov
loopne
loope
xor
ret
push
out
movsb
in
sbb
faddl
mov
sbb
and
inc
mov
mov
dec
imul
and
aas
adc
push
xchg
adc
and
pop
fsub
insl
pop
xchg
in
test
rcll
rcr
ret
pop
mov
sbb
jmp
inc
inc
rep
mov
int3
adc
dec
sahf
mov
jns
les
and
mov
jo
pusha
lock
push
cmp
loopne
js
ret
xor
mov
mov
push
push
xor
in
clc
pop
mov
or
push
scas
add
push
push
or
aam
cmpsb
adc
or
aam
inc
add
and
repz
fimuls
mov
xchg
mov
add
testb
add
pop
and
das
arpl
ss
cmp
push
cmp
lea
push
add
pusha
pop
pop
inc
cmp
lea
je
rol
mov
sbb
push
es
nop
jle
sub
das
sub
popa
cmc
adc
xchg
add
or
xchg
adc
xchg
xchg
and
loope
inc
repnz
xor
add
xchg
ds
lea
ret
sar
cmp
outsl
add
mov
mov
mov
jecxz
sti
push
je
add
xchg
jnp
or
fadds
pop
je
out
jns
mov
pop
lcall
sub
lret
mov
inc
pop
incl
dec
shlb
sbb
es
jae
xchg
into
outsl
jmp
jns
add
ja
push
xchg
mov
ljmp
and
call
cli
cwtl
aad
add
out
xchg
jns
jno
adc
jle
add
testb
add
andl
je
adc
shll
cmpsb
pop
mov
sti
cli
aaa
scas
gs
ljmp
pop
sbbl
inc
pop
xorl
push
fstpt
xorb
xchg
mov
lcall
test
arpl
enter
popf
jne
incl
and
loopne
dec
lock
cmpsb
inc
stos
sbb
pushf
mov
add
sbb
mov
mov
inc
pop
pop
dec
dec
int
mov
inc
push
jmpw
sbb
dec
movsb
outsl
popf
dec
mov
rorb
ret
imul
add
mov
push
cli
jae
mov
out
push
out
bound
ljmp
push
loopne
cltd
scas
sarl
out
popa
xchg
stc
xchg
and
pop
or
xor
ffree
mov
add
shrl
cmc
scas
mov
inc
push
fnsave
add
add
add
or
pop
lock
jge
js
icebp
xor
icebp
pop
in
mov
cmp
push
roll
adc
adc
scas
insl
cmp
aam
inc
inc
xor
xchg
sub
xor
popf
loopne
fistps
sbb
imul
sub
loopne
xchg
push
pop
scas
dec
insl
or
decb
in
aam
outsl
push
and
out
jle
test
inc
xor
cmc
out
aam
fstl
jecxz
mov
mov
lods
and
dec
aaa
sti
shrl
dec
jp
mov
out
test
test
sarb
jmp
pop
pop
lret
fidivrl
and
lret
cmc
xor
pop
mov
dec
pop
xor
sbb
fmulp
mov
das
xchg
sarb
add
aad
out
rorl
fwait
aam
aas
pop
add
lret
pusha
rorb
lea
pop
movsb
push
add
testb
add
shl
sbb
push
push
in
mov
loopne
loope
arpl
es
jmp
mov
mov
mov
ds
in
jmp
test
adcb
in
imul
jb
mov
sbb
ljmp
jae
xchg
add
ljmp
ljmp
sub
dec
xor
data16
stc
jmp
inc
pushf
fiadds
xchg
cmc
insb
fdivrs
push
mov
cli
jg
es
jne
adc
mov
sub
add
loop
mov
mov
push
xchg
lret
ja
push
loope
ret
jbe
pop
inc
cltd
mov
push
pop
fs
mov
lcall
pop
sbb
cwtl
dec
stos
push
int3
loope
in
in
fst
jp
push
pushf
insl
in
lcall
jl
add
jecxz
push
testl
clc
in
pusha
add
add
add
add
arpl
jle
sbb
sbb
testl
jmp
push
or
push
add
push
add
fs
jne
lds
sub
or
mov
cwtl
dec
sub
loop
in
cld
mov
loop
inc
push
in
push
incb
add
stos
and
mov
cmp
and
lcall
test
in
mov
pop
mov
das
xchg
push
test
mov
pop
mov
adc
push
std
shll
das
mov
les
pusha
test
pushf
mov
aam
adcb
ja
lret
scas
xchg
dec
jo
test
in
jg
cmp
jae
mov
or
adc
dec
pop
xor
add
xchg
mov
jle
sbb
scas
mov
testb
add
adc
mov
push
mov
stc
xlat
jecxz
je
and
dec
in
out
mov
inc
sbb
mov
mov
adc
push
xchg
jne
add
push
jo
sbb
aaa
mov
sub
sub
je
mov
push
dec
push
add
in
jge
out
and
call
dec
fidivrl
inc
scas
enter
and
mov
cmp
push
sbb
es
icebp
addr16
loope
mov
dec
xor
scas
testl
insb
or
inc
gs
test
cli
lret
xor
mov
cltd
cmp
insb
ljmp
imul
dec
iret
ret
cwtl
int3
int3
jg
shlb
sub
mov
dec
sub
sahf
push
or
aas
repz
into
icebp
call
nop
negb
sub
loope
add
mov
xlat
aam
cmc
stos
jns
dec
add
add
add
add
pop
add
sarb
cmpl
mov
dec
cmp
rorl
popf
mov
jmp
xchg
iret
sbb
sbb
mov
bound
xor
cld
or
bound
dec
push
shl
push
sub
filds
mov
adc
rcrb
mov
sub
std
push
lds
cmpl
cwtl
movsb
dec
or
addl
ljmp
jno
add
sbb
sub
outsl
std
sbb
ds
shld
sbb
xchg
test
jp
ret
into
call
jge
push
imul
push
mov
cmp
mov
jno
or
mov
or
sub
dec
push
stos
mov
mov
pop
jecxz
xor
sbb
mov
cld
dec
sub
add
push
inc
pop
jns
aas
fisttpl
inc
ret
jge
add
add
cmc
and
inc
push
dec
mov
add
adc
jp
xchg
xchg
fcoml
jb
stos
loope
mov
jns
stos
out
mov
xchg
mov
and
mov
setle
xchg
sahf
call
xchg
mov
and
mov
push
addr16
iret
sub
iret
std
xchg
stos
xor
adc
and
jae
dec
xchg
jg
ds
and
sbb
cmpb
fs
adc
mov
cmp
out
dec
push
ret
mov
rcl
push
jbe
cmp
push
icebp
out
fs
pop
in
xchg
push
sbb
add
add
jnp
xorl
dec
pop
rorl
sbbb
jle
popa
xor
jp
dec
xchg
cli
notl
adcl
je
xor
mov
in
mov
push
inc
lret
sub
pop
or
add
add
cmpsb
sbb
jnp
mov
jg
shl
cmp
add
testb
add
cmp
loopne
pop
dec
mov
mov
fwait
test
sub
push
dec
into
xor
adc
fadd
ffreep
pop
mov
faddl
jo
out
cli
ss
cltd
stos
xchg
jmp
inc
dec
out
sbb
cmp
pusha
jecxz
and
pop
jmp
or
pop
and
adc
lret
hlt
es
cmp
jp
insl
push
outsl
sub
mov
pop
jns
mov
aaa
inc
jb
mov
cld
and
inc
in
push
test
fbld
mov
js
cmp
xchg
dec
add
cmpsb
mov
popa
jecxz
mov
push
test
mov
inc
out
decl
mov
rcrb
push
xchg
cmpsl
fldl
or
pop
out
mov
xor
fwait
dec
mov
inc
inc
cltd
pop
fcompl
in
fdivrs
scas
fildl
insl
rolb
add
xlat
pop
xlat
jg
mov
xchg
adc
push
cs
add
testb
add
sub
mov
lea
sub
fwait
outsb
jge
and
pop
mov
sub
push
add
jb
sbb
stos
popf
insb
or
fdivs
mov
xchg
xchg
das
or
jge
ds
mov
jg
pop
push
loop
jecxz
cmovp
add
pop
dec
or
jmp
clc
mov
dec
xor
jge
outsl
gs
mov
rcrb
fistpl
jnp
pop
mov
imul
fsubs
inc
mov
sub
gs
sbb
xchg
lods
out
fwait
push
out
sub
outsl
adc
in
movsb
cld
jb
ja
fdivl
cmp
stos
es
add
fstps
pop
jns
mov
mov
inc
sbb
es
add
shr
jge
pop
mov
insb
shrl
mov
xchg
mov
mov
push
inc
std
fdivs
add
fdiv
mov
xchg
xor
add
add
add
sub
in
call
lods
lea
mov
mov
fstpl
jno
jno
fstp
xor
push
or
cmpsl
leave
xor
sbb
fstpt
ret
bound
push
and
pop
xchg
or
inc
shll
int3
and
inc
test
fs
jno
fs
xchg
shlb
or
and
popa
icebp
mov
jne
psubsb
jae
sbb
jo
lds
mov
mov
sahf
ljmp
push
int3
in
pusha
and
mov
ds
push
mov
gs
push
pushf
jbe
clc
es
mov
push
pusha
pop
out
loopne
cmp
aad
in
gs
daa
in
pop
sahf
sub
ljmp
in
dec
rcl
cli
shrd
daa
fstpt
lret
icebp
inc
xchg
pusha
fcomps
add
add
mov
stc
out
sbb
add
testb
add
xchg
stos
lea
push
xlat
ffreep
in
or
mov
lret
dec
cwtl
sub
sarb
xor
dec
jl
mov
movsb
inc
outsl
dec
pop
in
mov
dec
jnp
or
add
div
mov
stos
add
or
push
sahf
mov
dec
out
xchg
inc
pop
lock
cwtl
or
mov
sarl
mov
arpl
iret
adc
inc
add
movl
push
sub
lcall
cmp
clc
sbbb
push
addl
into
lods
cmpsb
dec
fld1
cmp
jns
sub
sbb
cmovge
adc
adc
cs
cmp
cmpsb
adc
inc
inc
mov
cmp
inc
daa
repz
fidivrs
aam
addl
mov
mov
in
aad
add
jmp
imul
pop
sub
mov
cmp
or
add
add
add
scas
cmp
dec
test
cmp
aaa
jmp
mov
es
fldcw
pop
cmc
mov
sub
sbb
add
out
dec
cs
fildll
jno
add
cmp
pop
data16
pop
mov
enter
popf
fiaddl
sub
mov
jae
fisttpl
mov
jbe
push
mov
in
and
cmpsl
xchg
subl
fisubrs
in
aad
push
mov
and
out
fbstp
cld
adc
in
in
sub
out
movsl
adc
roll
pop
adc
mov
xor
dec
jg
aad
jmp
sar
cmpsb
cmp
in
mov
cmp
inc
ret
jbe
iret
cld
jo
inc
loop
or
cmp
pushf
inc
jmp
outsl
scas
jns
jecxz
mov
push
add
pop
inc
pop
lods
pop
cli
cmc
inc
mov
sub
or
add
add
add
popf
lods
lock
dec
sti
push
and
lret
push
adc
mov
add
bswap
hlt
push
jle
das
das
adc
sbbb
dec
jb
mov
outsl
icebp
pop
push
xorb
in
adc
shrb
mov
add
pop
shll
xchg
adc
adc
mov
movsb
push
mov
int
push
data16
pop
cmpsb
cld
pop
insb
lcall
mov
aam
daa
sub
inc
into
stos
lea
xchg
iret
cmp
test
test
jne
dec
inc
pop
movsl
cs
leave
lds
ds
leave
mov
mov
mov
mov
push
in
ret
andl
imul
push
scas
jp
das
aam
in
or
push
sbb
adc
mov
out
stos
nop
jle
jle
fwait
xchg
cmc
aam
add
inc
ljmp
lds
daa
outsb
add
das
stos
cltd
inc
popf
jae
out
inc
dec
clc
mov
out
stos
cld
or
add
add
add
dec
fs
outsl
adc
jne
cmpsl
or
xor
add
push
or
add
mov
inc
jb
pop
jg
mov
call
lock
push
dec
insb
in
les
call
push
fisubrs
aad
mov
push
xorl
daa
addr16
inc
pusha
and
sbb
loop
loopne
nop
into
dec
cmp
test
insl
and
faddp
scas
add
outsl
loope
frstor
subb
dec
mul
cmp
int3
dec
pop
mov
imull
into
add
in
jno
pop
jae
jp
pushf
icebp
and
imul
xchg
into
cmp
or
in
jg
lods
or
std
adc
pop
adc
add
pop
mov
call
push
sub
shrb
xor
rolb
ret
out
mov
incb
lock
nop
and
mov
scas
jo
imul
inc
cmp
mov
add
mov
nop
test
aam
int
xchg
clc
fwait
movsb
icebp
add
or
add
add
add
and
subb
mov
mov
cwtl
xorb
xor
and
cmpsb
scas
arpl
adc
inc
pop
cmp
jge
cs
mov
mov
jo
xchg
jns
addl
push
fistps
xor
lret
xchg
jmp
cmpsl
dec
iret
mov
adc
dec
nop
xor
fimuls
imul
mov
xchg
call
and
adc
mov
daa
sahf
int
scas
aas
ror
dec
movsl
arpl
test
es
mov
in
mov
or
or
push
movsb
cwtl
mov
fstps
std
ja
lock
sub
repz
jno
jle
gs
sub
es
insb
dec
push
push
push
fcmovnb
or
mov
or
dec
ja
movsl
pusha
mov
ljmp
lret
sti
xchg
dec
xlat
test
add
add
arpl
addr16
inc
jmp
pop
call
add
add
add
xor
push
dec
aaa
lret
cmp
jmp
push
push
testb
xor
adc
inc
mov
mov
test
in
test
cmp
and
mov
cmp
subl
in
mov
and
add
push
aam
adc
int3
scas
lods
dec
andb
xor
ja
out
test
inc
ss
aad
and
sub
dec
sahf
pop
xchg
or
cmp
stos
add
subl
push
sub
in
jg
xor
cmpsl
adc
and
aaa
insb
jae
mov
xchg
rcll
test
and
fiaddl
loopne
xor
mov
pop
out
fistl
por
push
lret
cli
jno
push
xor
test
mov
ja
jecxz
repz
inc
ficomps
push
xchg
cmp
add
add
out
out
pushl
jecxz
inc
dec
ret
adc
push
add
testb
add
cmc
jo
scas
leave
test
push
sbb
pusha
es
mov
pop
iret
sbb
mov
pop
push
mov
mov
xchg
shrl
cmp
jo
out
and
arpl
pop
and
fisttpl
adc
stos
pop
xor
mov
out
mov
fldt
jge
xchg
lcall
scas
xor
inc
xor
mov
push
das
sub
cwtl
push
aam
mov
in
outsb
fwait
and
ljmp
pop
ljmp
loop
das
and
xchg
xor
xchg
outsb
sub
lret
jbe
scas
cli
int3
jno
pop
mov
aas
xor
in
leave
sbb
add
push
out
mov
push
stc
inc
xchg
lret
pop
fildl
mov
xlat
loope
repnz
mov
jl
or
jl
andb
pop
add
cwtl
push
xchg
add
push
scas
out
mov
rorb
sgdtl
testb
add
hlt
gs
mov
sbb
jle
ficoml
sbbl
shlb
mov
insl
xor
nop
in
lret
sub
popf
push
pop
mov
inc
jne
sub
mov
jo
jg
jg
xchg
int3
dec
push
inc
data16
fwait
lret
and
cwtl
repz
je
mov
pop
xchg
inc
cmp
mov
adc
pushf
add
mov
cmp
fadds
pop
mov
push
lcall
push
adc
stc
push
test
inc
push
xchg
sbbb
imul
inc
jne
add
jnp
xchg
cmp
out
mov
pop
jb
scas
mov
in
push
lahf
and
rclb
hlt
add
fwait
pop
pop
lcall
in
inc
sbb
incl
outsb
int3
fadds
fs
xor
aam
lcall
out
dec
pop
into
or
adc
add
add
xchg
and
movsl
mov
mov
cmp
scas
pop
jl
popf
lret
add
add
add
push
cmp
hlt
mov
imul
push
cmp
into
or
iret
jle
outsb
sub
mov
cld
mov
push
xchg
rcrb
aas
sbb
and
xchg
movl
jnp
aas
out
sbb
clc
push
xchg
xchg
movsb
mov
adc
mov
sub
adc
hlt
sub
push
push
incb
push
jg
fisubl
mov
push
jmp
mov
in
sbb
mov
jne,pn
mov
dec
pusha
jno
jmp
mov
push
adc
or
inc
pop
ss
outsl
and
xchg
lahf
pop
inc
cs
mov
lods
das
and
adc
gs
inc
mov
int
ret
push
jp
pushf
bnd
inc
mov
xor
push
inc
addb
cmp
rcl
cmc
lcall
fdivl
mov
fdivs
add
testb
add
push
or
push
cmpsb
cwtl
inc
out
mov
jle
or
sbb
sub
jle
into
dec
and
mov
insb
push
or
loop
pop
cmc
push
sub
dec
test
dec
or
or
xchg
push
and
jno
dec
and
jb
es
xchg
stos
mov
aam
sub
adc
mov
add
inc
sbb
nop
bound
fs
xchg
xor
in
das
in
jae
pop
ljmp
pop
jns
rol
fs
sbb
lahf
test
movsb
andl
inc
jne
dec
cmp
jns
mov
das
pop
mov
xlat
mov
dec
lods
cmp
je
push
mov
jecxz
mov
lods
push
xchg
push
inc
xchg
sub
mov
jb
jle
mov
mov
mov
rcrb
push
cmp
add
inc
stc
mov
mov
fidivrs
xor
mov
add
testb
add
out
and
inc
xchg
pop
in
aam
in
or
nop
enter
bound
lret
jp
addr16
gs
rorb
aam
push
mov
aaa
adc
gs
les
push
or
adc
or
loop
loopne
lods
inc
and
xchg
or
xchg
xchg
scas
hlt
es
daa
jmp
jmp
outsb
add
shlb
push
out
das
adc
lcall
xor
lahf
lea
pop
or
leave
mov
adc
fdivl
jecxz
add
inc
adc
or
lret
jae
sbb
sti
cmp
jo
jne
sti
xor
hlt
test
je
nop
inc
int3
mov
push
call
scas
test
lcall
mov
mov
loop
dec
xchg
shll
mov
mov
lcall
add
xchg
sub
scas
jbe
or
lods
adc
add
add
add
mov
stos
push
clc
jae
push
push
inc
cmp
xchg
addr16
or
hlt
ljmp
test
push
cmp
xor
jg
adcl
pushf
cs
imul
cmpsb
int3
loope
pop
loope
add
roll
push
cmpsl
decb
sub
lods
test
test
loopne
sti
adc
cmp
rorl
aas
dec
insl
pop
cmp
sbb
inc
jecxz
repnz
cmc
in
dec
inc
es
fsub
jg
int3
mov
jg
pop
cmpsb
xchg
xchg
adc
cmpb
push
cmp
jne
movsl
cmp
in
je
mov
mov
adc
sub
pop
loopne
or
sbb
xchg
es
insl
idivl
scas
in
cmp
mov
jnp
aad
dec
add
xchg
enter
push
fists
imul
adc
add
add
add
jge
aam
xor
sarl
nop
imul
mov
or
mov
cmpsb
popa
aam
adc
sub
cmp
pop
dec
or
cmp
dec
mov
and
out
inc
ret
subl
stc
fnstenv
push
lods
stc
add
movsl
push
add
inc
insb
mov
ja
inc
add
roll
dec
jnp
sub
jns
pop
into
lea
pop
dec
dec
mov
xor
les
scas
leave
jb
movsb
stc
sahf
mov
enter
stc
cwtl
push
fidivs
add
stc
mov
test
iret
loope
adc
insl
clc
scas
fists
nop
mov
loope
fidivrl
mov
out
inc
jle
sub
lahf
sbb
frstor
pusha
pop
cmpsb
dec
mov
mov
fimull
xchg
mov
xchg
jmp
hlt
clc
xchg
jmp
sub
add
mov
into
fwait
testb
or
adc
add
sbb
inc
inc
push
inc
addr16
push
jbe
xchg
andb
inc
mov
inc
cwtl
mov
pop
inc
hlt
cli
sbb
mov
cmp
icebp
les
adc
fldt
out
cs
jmp
mov
xor
cmp
cmp
insb
lret
or
mov
lods
mov
divl
inc
adc
cmp
sub
data16
je
pop
push
lret
mov
jge
xor
mov
daa
inc
enter
add
mov
or
mov
outsb
inc
test
jecxz
aam
shrl
or
xchg
in
inc
push
jecxz
fwait
dec
call
repnz
cmp
jmp
loope
cmpsb
sbb
sub
in
leave
sahf
xchg
fbld
cld
dec
cmpsb
xor
test
data16
sbb
outsb
lret
nop
loope
andb
repnz
jl
test
out
mov
pop
mov
sub
add
testb
add
push
xchg
sub
sub
xor
mov
dec
pushf
push
push
lea
inc
test
pop
push
jne
idiv
xchg
fbstp
ljmp
cmp
je
mov
sbb
xor
clts
notb
fisubrl
xchg
aas
inc
mov
mov
add
bnd
push
popa
lock
int
ret
push
and
ret
ja
jbe
xor
pop
xchg
je
sbb
iret
add
jg
xchg
popa
iret
inc
pop
mov
fistps
inc
pop
add
movsl
loop
test
enter
fwait
jcxz
pmullw
add
das
notl
and
cmpsb
mov
int
imul
adc
add
xor
xchg
push
jl
cld
js
out
sub
aad
xlat
or
gs
imul
cmp
xchg
sbb
add
inc
out
aas
mov
sub
mov
outsl
test
add
testb
add
test
push
sar
movsl
ja
repz
scas
adc
stos
lods
test
jp
imul
popf
push
push
fldt
fistl
dec
sti
jle
stc
or
mov
mov
shl
jae
fwait
dec
cmp
mov
mov
arpl
les
pusha
mov
icebp
pop
or
fs
lds
jnp
std
imul
dec
test
lret
dec
outsl
sarb
xchg
je
dec
fsubs
sbb
inc
test
out
data16
cld
jecxz
fistpll
outsb
xor
cmp
ficoml
cmpb
mov
cmpsl
das
jb
sbb
aas
pusha
and
mov
aas
lahf
xchg
dec
and
popf
insl
mov
or
in
sbb
clc
jge
xchg
jge
scas
hlt
imul
out
jns
or
push
add
add
bnd
jp
xchg
inc
stc
fadd
mov
testb
add
sub
fldt
lcall
sub
jns,pn
cli
aaa
mov
aas
sub
push
lahf
sbb
mov
push
mov
cmp
mov
sti
cld
xchg
inc
mov
pushf
pop
pop
cmpsl
scas
mov
pop
cmc
mov
mov
cmp
imul
jecxz
cltd
shlb
subl
hlt
lea
mov
lods
fdivrl
dec
sbb
lcall
lock
pop
int3
xchg
xchg
mov
rorl
dec
xlat
aad
pop
int
adc
mov
push
outsb
movsb
xor
xchg
push
jl
sbb
or
popf
cmp
sub
out
movsb
mov
dec
xchg
sub
sub
aad
in
sub
incb
fnsave
push
pop
inc
and
sarl
add
add
xor
pop
lahf
dec
in
mov
add
mov
jae
inc
mov
push
pop
mov
jb
add
sbb
in
out
ja
fbstp
fmul
add
add
testb
add
ss
loope
stc
add
movsb
repz
sahf
push
cmp
dec
test
out
movsb
loop
push
in
jge
xlat
ds
pop
and
in
fildl
insb
pop
das
repnz
fstl
or
adc
jns
shrb
int
xor
jp
jle
js
cmp
dec
insl
jne
or
shll
push
adc
fdiv
or
mov
cmp
and
cli
mov
test
imul
or
sub
or
or
loopne
sbbb
decl
lea
mov
jne
inc
in
sarl
in
mov
loope
lods
sbb
push
cmp
xchg
imul
mov
shlb
jge
dec
push
ja
xchg
sbb
test
sbb
adc
mov
mov
cld
mov
add
scas
test
in
std
dec
data16
add
add
add
push
hlt
dec
ds
lods
subb
mov
mov
mov
flds
push
outsl
std
test
add
sub
fidivrl
jecxz
jmp
stc
fwait
mov
and
testl
loop
cmp
mov
sub
out
dec
cmc
stos
inc
pop
xor
pop
xor
sub
das
js
movsb
clc
push
fdivs
sub
xchg
xchg
ss
mov
sbb
push
andb
jmp
or
adc
push
push
loopne
daa
ret
inc
add
push
mov
rorb
mov
mov
lea
mov
add
add
and
cmp
notl
push
in
sbb
shlb
out
in
add
adc
mov
add
add
jg
imull
push
not
push
jnp
pop
sbb
add
add
add
sbb
xchg
mov
int
ja
dec
jo
push
mov
in
pop
mov
into
inc
das
nop
outsl
dec
mov
divl
icebp
insb
cs
adc
dec
leave
pop
scas
pushf
cli
mov
jmp
sbb
sti
adc
cmpsl
es
mov
in
test
bound
sahf
das
lock
jmp
or
out
dec
mov
jne
mov
iret
mov
xchg
das
iret
test
inc
inc
push
sbb
mov
mov
call
dec
fwait
jae
daa
je
jge
popf
and
je
gs
in
push
sbb
dec
dec
aaa
inc
or
fcomip
out
test
enter
das
hlt
xlat
mov
jl
leave
mov
decl
gs
scas
or
das
mov
aam
imul
mov
pop
pop
sub
aaa
out
pop
and
add
cmp
sti
jg
and
mov
sbb
add
add
add
sbb
mov
lret
fstps
dec
xor
fwait
sbb
cmpsb
enter
inc
push
xchg
out
fwait
scas
sub
pop
jmp
pop
fidivrl
sbb
sarb
and
testl
jb
cmp
dec
in
dec
inc
fsubrl
or
mov
out
cmp
mov
sbb
sub
icebp
fwait
gs
jae
cmp
jl
roll
mulb
xor
push
mov
pop
cld
into
cld
mov
ret
adc
imul
mov
pop
xchg
pop
and
cli
pop
mov
xor
daa
add
lcall
mov
and
in
dec
pop
mov
repz
stos
push
mov
loope
icebp
popa
sahf
push
jnp
jnp,pt
cwtl
int3
ljmp
dec
inc
sbb
add
scas
aam
jnp
fldl
cmp
xor
add
testb
add
cltd
xchg
negl
jne
push
xchg
mull
fiadds
imull
imul
in
out
out
ficoms
adc
jp
pushf
xlat
mov
mov
jns
mov
add
test
mov
mulb
mov
shlb
insb
inc
lret
lds
out
lea
lahf
or
sub
testb
push
mov
jmp
repz
pop
jl
cwtl
mul
das
sti
in
pop
pcmpeqb
and
and
inc
add
scas
out
fdivrs
int
out
es
imull
xor
lret
jge
rol
scas
lock
sub
cmp
call
popf
inc
fildll
cmc
dec
stos
aad
jbe
fisubrl
sbb
sbb
adc
jl
mov
mov
out
mov
jb
jp
bound
dec
scas
and
mov
add
mov
jno
std
outsl
mov
xchg
pop
cltd
mov
insb
or
ds
add
testb
add
xchg
push
rdmsr
mov
mov
ret
adc
out
outsb
out
inc
add
or
xor
je
jb
fidivrs
jmp
loopne
bound
pop
cli
sti
loopne
push
les
aad
xor
inc
stc
lods
iret
or
jno
cmc
xchg
sbb
xchg
sbb
data16
xchg
es
cli
adc
repz
lock
push
adc
aaa
inc
movsb
push
or
ret
or
es
xchg
xchg
jp
add
testb
mov
test
or
pop
cwtl
jmp
ja
pusha
push
cs
std
lahf
pop
xor
orb
dec
mov
push
fildl
in
pop
call
in
cmp
shrb
mov
push
cmpb
outsl
jne
pop
adc
sbb
and
sbb
xorb
add
jmp
loop
cld
add
xor
add
testb
add
dec
push
dec
adc
inc
push
or
push
fidivs
shl
sub
cmpsl
xlat
push
add
adc
daa
movzwl
xchg
flds
mov
mov
cmpsl
fsts
inc
movsl
jbe,pn
lcall
mov
stos
xchg
test
mov
cmp
pusha
xchg
jne
add
push
daa
test
je
add
inc
dec
xorb
fcmovnb
in
lahf
test
and
int3
xor
imul
dec
dec
pop
aas
pop
jmp
shll
dec
push
into
lock
cmp
mov
push
mov
jle
lea
add
movsb
mov
mov
mov
ret
data16
in
ror
cmp
nop
aam
dec
cmp
or
js
mov
adc
out
xchg
add
jecxz
sarb
add
add
xor
idivl
mov
add
testb
add
lods
mov
or
jne
push
adc
push
inc
mov
test
mov
fmuls
mov
inc
cs
inc
pop
push
lock
add
int
mov
mov
jle
jns
outsb
shl
and
arpl
and
out
test
jno
js
fwait
into
push
adc
add
or
scas
orb
or
das
shrl
cld
mov
aad
xchg
mov
mov
rcr
rcrb
enter
xor
push
sub
das
outsl
lds
inc
test
dec
xchg
jecxz
mov
jmp
pusha
or
add
imul
js,pn
mov
push
iret
lds
sbb
push
push
sbb
lea
mov
lods
test
into
js
fsubp
ret
sub
cmp
xor
outsl
mov
pop
pop
xlat
ret
add
cli
inc
jg
int
pop
sbb
mov
add
testb
add
xchg
jge
lea
cmp
pop
lock
fsubrs
ljmp
bound
sti
push
sub
roll
push
pop
lret
mov
push
shrb
mov
sub
dec
xchg
pop
push
push
std
das
inc
iret
sahf
out
mov
mov
fcoms
leave
cli
ret
push
jle
lret
pop
xchg
nop
sub
mov
or
test
mov
ja
leave
fmuls
scas
or
bound
add
mov
sub
xor
shrl
repz
shlb
aas
aaa
xor
xor
inc
scas
test
cmp
aas
adc
jmp
data16
pushf
pusha
cmp
out
insl
push
add
adc
bound
dec
and
ds
jmp
gs
add
lock
std
cmp
jle
fisttps
cmp
int3
push
and
add
add
add
aad
into
sbb
jp
insl
in
je
adc
loop
inc
mov
movsl
gs
sbb
dec
je
xchg
dec
out
fucom
data16
jae
mov
cmpsl
in
lods
mov
clc
add
rcrb
dec
pop
inc
aas
cmp
lea
jb
jmp
push
pop
and
cmp
add
cli
test
subb
add
fstpl
sub
movsl
cltd
and
mov
mov
shll
pusha
mov
or
fbld
or
jecxz
and
add
repnz
mov
in
movsl
cld
in
mov
jecxz
cmp
fists
xchg
das
leave
pop
sahf
mov
add
scas
xor
mov
adc
out
movl
imul
cmp
imul
imul
test
ds
pushf
jmp
push
sbb
mov
add
xchg
pop
lds
xlat
ficoml
loopne
bound
add
testb
add
adc
sbb
xchg
pop
pop
pushf
pop
sbb
orb
cmpsl
and
adc
cmp
data16
hlt
and
outsb
inc
adc
enter
xorb
push
add
pusha
push
lea
shl
lock
push
pushf
jno
pusha
rorb
inc
fs
and
sbb
mov
push
outsb
jb
jle
xor
xlat
cwtl
icebp
cmpsb
out
sbb
in
stos
mov
xchg
data16
mov
sub
arpl
cmp
cmc
leave
shll
or
pushf
xorb
and
and
add
adc
push
push
adc
pop
or
mov
xchg
mov
sub
das
jns
shl
jg
inc
cmp
scas
push
push
inc
sbb
xchg
mov
notl
mov
jo
add
sub
iret
outsb
jmp
rcll
pushf
arpl
and
add
add
add
movups
mul
or
inc
cmp
scas
cmp
mov
loope
dec
lds
sub
nop
pop
adcl
ds
int3
push
testl
and
pop
xor
lods
subb
mov
jp
leave
pop
test
rol
rcr
mov
dec
jl
or
pop
push
push
aaa
push
out
add
subb
and
or
jno
das
mov
xor
icebp
and
cmp
add
fdivrs
popa
adc
adc
mov
dec
inc
lds
dec
sbb
lods
xchg
jmp
divl
inc
sahf
cmc
mov
mov
ljmp
and
fsubs
push
inc
lods
scas
push
xor
lods
xchg
aaa
enter
stc
cs
and
push
aas
push
cmp
imul
push
insl
rcrb
pop
add
sbb
std
sbb
stc
cld
or
cmc
pop
dec
test
testb
add
jp
scas
imul
mov
add
aas
xor
cmpsb
push
inc
ds
mov
add
addr16
iret
lods
mov
shrb
xor
push
mov
mull
cmp
out
dec
dec
mov
mov
test
or
or
xchg
mov
int3
cmp
sub
int
in
imul
sub
pop
test
mov
out
push
test
and
mov
cmp
enter
dec
push
js
jae
push
fnstenv
movsl
xchg
or
mov
aad
fwait
sbb
pushl
pop
cltd
orb
adc
movsl
jle
cld
ljmp
cli
xorl
sub
adcb
sbb
push
ret
pusha
incb
add
lret
xchg
inc
jg
cmpsb
repz
negl
adc
out
jl
and
mov
out
and
add
jge
addb
jns
sub
dec
arpl
fwait
inc
mov
mov
add
cld
jae
mov
mov
sbb
sbb
call
push
daa
or
pop
aad
jge
outsb
loopne
pop
add
cmp
ficomps
das
les
or
push
adc
pop
idivl
pop
out
cli
dec
repz
adc
mov
and
jae
fcoms
jbe
sahf
das
leave
inc
cld
in
stos
mov
dec
xchg
sahf
mov
xor
rcll
cmp
sub
xchg
movsb
cmp
add
outsl
pusha
es
sub
mov
push
sub
jns
int
xchg
cmp
xchg
adc
pop
xor
sbb
xchg
pop
ficomps
test
add
push
add
mov
dec
pushl
adc
out
in
add
testb
add
cmp
int3
inc
in
or
cmpsl
cmp
mov
aas
pop
and
pop
insb
insl
loopne
movsb
rcll
leave
jl
out
mul
sub
sbb
pop
ret
hlt
hlt
sub
repz
mov
jae
xor
jno
pop
popa
pop
adc
inc
mov
or
inc
in
xchg
xchg
arpl
dec
lock
popa
push
out
add
pusha
mov
jl
push
sbb
rep
cmp
dec
pop
cmc
sbb
imul
mov
adc
cmp
xor
mov
mov
dec
les
ficompl
ljmp
add
inc
mov
imul
rep
imulb
or
clc
arpl
ds
mov
mov
mov
js
shl
sbb
daa
adc
push
mov
mov
sbb
lret
push
cltd
fidivrl
jle
dec
in
jp
add
inc
ja
pop
aas
pop
pop
inc
adc
cltd
sahf
push
fisubl
add
testb
add
ja
mov
ds
js
cltd
xor
cmp
or
xchg
shlb
dec
or
adcl
dec
adc
push
mov
xor
enter
push
mov
callw
adc
imul
nop
lods
in
sub
add
cmp
push
inc
nop
scas
es
sarb
cmove
dec
push
xchg
or
lcall
mov
hlt
mov
mov
jl
lret
cli
add
inc
lret
add
iret
call
pop
xor
cmc
dec
push
cld
push
or
iret
fldt
aam
xchg
adc
inc
adc
adc
popa
dec
std
into
xchg
cli
jb
xor
in
sbb
add
xchg
mov
rcrl
xor
push
mov
imull
xchg
cmp
movsl
les
jnp
add
repz
jae
ja
div
dec
lods
push
mov
sub
add
add
add
add
pusha
fcom
mov
mov
adc
in
cmp
push
in
jg
imul
test
fiadds
outsb
mov
pop
iret
fisttpll
push
stc
mov
mov
fmulp
ret
jae
inc
and
mov
shl
shrb
movsb
aad
lods
out
mov
ss
scas
and
and
xchg
ds
xchg
cli
mov
add
inc
cmp
lock
jae
pop
sbb
push
dec
inc
loope
outsb
sbb
inc
std
mov
daa
adc
add
cmpsl
mov
xchg
outsl
ja
xchg
sub
sbb
ja
cmp
add
inc
or
inc
rolb
lds
mov
gs
dec
out
add
add
cmpb
movsl
pushf
push
mov
fstps
cmp
fists
mov
add
cli
std
jg
into
jno
jnp
mov
add
add
add
vpshufd
ret
dec
je
movsl
stc
into
mov
xor
adc
jmp
mov
xor
jb
push
push
in
in
in
jae
ret
lock
jb
xor
repnz
inc
jne
dec
xchg
cmpsl
xchg
mov
push
pop
test
dec
lea
xorb
fs
mov
in
pop
or
pop
push
imul
stos
rolb
test
push
repnz
xor
fldt
orb
pop
adc
movsl
arpl
rol
aad
sti
je
mov
ret
pop
aam
push
inc
push
dec
fldcw
sbb
out
jno
das
add
push
nop
pop
aas
rolb
lcall
je
push
icebp
mov
adc
mov
cmpb
sub
add
inc
outsb
pop
stos
shll
mov
lahf
push
sbb
fbld
jge
or
add
add
mov
std
incl
sub
pop
mov
sub
add
add
add
mov
nop
imul
push
xor
jecxz
cmp
cltd
adc
mov
mov
or
lea
xchg
stos
ljmp
cld
rep
out
xchg
repz
mov
inc
jae
gs
jo
sbb
imul
push
add
xchg
mov
xor
cmc
std
in
push
mov
in
inc
popa
mov
sbb
lret
mov
lea
pop
cmp
pop
or
xor
addr16
jno
out
mov
cli
push
imul
pop
xchg
repz
rorl
in
add
sbb
je
pop
or
push
int
dec
inc
inc
sub
std
cmp
jg
add
and
push
shl
xchg
iret
jp
or
jnp
jl
stos
lock
iret
sub
jp
in
popf
std
mov
fbstp
movsb
cmc
mov
mov
xor
mov
add
add
es
jg
pop
xorl
push
sub
mov
add
testb
add
jecxz
cwtl
and
ja
frstor
push
and
addr16
pop
int
scas
mov
ja
pushf
cwtl
mov
imul
divl
imull
sub
scas
popf
out
mov
stos
es
negl
xor
dec
dec
stos
pop
lahf
std
xchg
cmc
xchg
hlt
mov
mov
std
es
jno
les
pop
add
mov
pop
adc
cmp
jmp
enter
inc
dec
or
mov
fsubp
popf
add
ds
lahf
xchg
aaa
push
outsb
xor
add
daa
push
aaa
and
lahf
inc
adc
ljmp
jb
mov
xchg
mov
shrb
cmpsb
add
jg
popl
std
test
mov
sub
or
insb
xchg
lret
pop
sub
add
add
dec
lods
jnp
ret
test
daa
rolb
sbb
lods
repnz
add
push
clc
or
cmp
cli
jno
test
add
testb
add
cmpsl
push
repnz
mov
imul
call
dec
fdiv
ja
adc
add
sti
jecxz
ficomps
daa
push
xchg
aaa
leave
jg
sahf
sbb
dec
mov
mov
js
dec
cmpsl
insb
mov
out
push
jp
dec
test
iret
pop
in
ljmp
pop
jmp
mov
test
orb
cmp
xchg
pop
aad
sti
and
pop
mov
push
nop
ret
call
inc
cwtl
lods
add
pop
mov
out
xlat
mov
fildll
repnz
ljmp
lcall
jb
dec
push
enter
rcr
cwtl
lcall
adcl
fbstp
mov
pop
mov
mov
dec
add
jmp
or
jg
xchg
sbb
out
das
add
xor
ja
add
add
add
add
dec
add
lcall
dec
mov
pop
mov
not
call
stc
lret
pop
insl
iret
arpl
mov
xor
inc
sub
adc
xor
clc
ja
add
push
out
mov
xchg
fstps
and
jl
movsb
mov
iret
cld
fisubrl
int
push
xchg
shl
and
sbb
cmc
stos
ret
cmp
aam
data16
hlt
cld
inc
movzbl
cmp
inc
sub
inc
xchg
dec
pop
sbb
dec
repz
inc
jmp
inc
andl
fcoms
push
ret
icebp
cmpsb
test
pop
int3
jecxz
lahf
loop
jne
sub
xor
cmp
lods
in
aam
fiaddl
jns
jg
push
ss
mov
mov
fldl
add
negb
adc
add
ficoms
stos
sbb
ljmp
mov
add
testb
add
repnz
inc
ffree
rolb
xor
mov
mov
and
and
imul
mov
sbb
test
rorb
imul
xlat
mov
xor
jbe
js
cmp
imulb
dec
imul
ficoml
or
mov
and
jmp
mov
add
fisubrl
and
cmp
push
cltd
mov
add
mov
add
daa
aad
jge
xchg
imul
enter
lock
aas
addb
jb
sub
sbb
ja
jl
cmp
xchg
pop
sbb
inc
xchg
add
iret
ds
pop
cmp
push
or
jp
push
aas
mov
inc
scas
bound
xchg
pop
dec
adc
push
out
jns
subb
add
popf
add
push
cmp
cmp
test
sbb
add
in
out
sbbb
sbb
mov
add
testb
add
mov
movl
jge
inc
sti
ljmp
sbb
push
jl
enter
pop
repnz
xchg
sbb
shll
loop
insl
in
ds
jb
cmc
pusha
test
js
mov
jp
xor
inc
jp
add
or
xchg
sti
popa
pop
and
cmp
mov
push
and
add
add
xchg
pop
je
and
cmpsb
and
sub
push
push
insb
xor
addl
mov
push
sbb
aaa
jge
pop
mov
pop
and
pusha
push
pop
ret
jmp
add
pop
scas
sahf
lea
pop
decb
jo
cwtl
loopne
mov
add
cmp
or
jne
dec
push
jns
mov
jle
inc
ret
xchg
cltd
icebp
sub
shlb
cmp
add
add
sbb
out
aad
jo
mov
xor
add
add
add
data16
stos
lahf
push
inc
insl
cmp
stc
mov
ja
xchg
fdivrp
outsb
push
cmc
dec
xchg
inc
mov
lret
sbb
dec
and
mov
fdivl
mov
and
xchg
cmova
shlb
aas
inc
std
mov
cmp
aad
fmull
cmp
sbb
jns
dec
in
adc
dec
lea
out
test
push
cmp
aam
inc
mov
adc
inc
fdivrl
test
sete
insl
sub
xchg
xchg
xchg
jg
sbb
mov
loop
bound
xchg
leave
popf
pop
inc
pop
xchg
and
test
add
or
mov
aas
dec
ror
mov
in
outsl
out
ljmp
inc
cld
pusha
inc
mov
pop
mull
add
in
add
cmp
out
dec
lret
fstpt
jbe
add
testb
add
lahf
out
add
int
test
lcall
mov
inc
inc
cmp
push
test
out
ret
and
nop
in
scas
push
mov
mov
cltd
and
bound
aas
out
jnp
out
pop
xlat
ds
sbb
in
pop
inc
mov
pop
inc
mov
mov
xlat
xlat
mov
pushf
in
aas
in
cltd
xchg
xchg
push
lcall
std
sbb
sbb
cmp
int3
jbe
push
mov
sbb
jne
nop
or
outsb
lret
stc
mov
jae
mov
cmpsb
int
test
cmp
pop
filds
cmp
and
mov
out
jb
ret
stc
daa
mov
or
ja
insl
xor
sub
stos
or
lods
dec
sti
add
test
sbb
out
add
lods
arpl
add
testb
add
and
mov
test
scas
add
add
cmpsl
jb
adc
push
and
jge
or
cld
xchg
xchg
jno
sbb
dec
leave
bound
xor
and
scas
cmp
cwtl
lret
hlt
lret
xor
fbstp
or
outsb
cmpsb
jmp
in
std
push
xchg
adc
ret
adcl
lods
dec
inc
jae
and
xor
rorl
xrelease
pop
mov
dec
out
fcoml
stos
aaa
out
test
pop
and
mov
xor
mov
push
shr
jne
and
adc
test
lret
mov
adc
inc
movsb
imul
test
mov
and
mov
and
fwait
gs
ret
sub
xor
sub
mov
mov
jns
adc
imul
add
jg
cld
add
adc
bound
add
testb
add
enter
lea
gs
int
fcmove
repnz
out
pusha
icebp
in
mov
js
shl
xchg
scas
int3
pusha
mov
lahf
add
fisubl
adc
mov
xor
jno
adc
lret
cmp
mov
not
xchg
mov
xchg
pusha
addr16
movsl
fstp
insl
mov
enter
inc
push
icebp
mov
movsb
out
xlat
leave
fists
shr
lea
repz
fists
mov
movl
mov
cmp
mov
cmp
xor
vmovaps
mov
sarl
mov
dec
shl
push
rclb
add
inc
lock
jl
cmp
add
lret
fadds
ficoml
and
fincstp
jo
adc
xchg
test
ret
add
ret
mov
iret
mov
cmc
mov
pop
xor
add
add
add
mov
push
ret
subl
sub
sbb
jae
idivl
mov
pop
push
pop
lahf
sbb
xchg
xor
pushf
enter
lret
icebp
xchg
ss
imul
ss
shll
push
sub
jne
mov
xorb
fcmovne
rcll
movb
insb
mov
shl
push
xor
cmovne
sbb
xor
addl
in
xor
mov
mov
nop
jecxz
sub
mov
xchg
pusha
adc
or
popa
movsl
mull
stos
std
dec
mov
pop
loop
and
pushl
mov
jno
cmp
xchg
daa
orl
in
dec
sbb
cmpsl
inc
sub
xchg
add
test
mov
mulb
scas
add
insl
je
call
add
mov
sbb
xchg
cmp
dec
xor
add
inc
in
adc
daa
test
sbbl
cwtl
mov
pop
xchg
dec
sahf
enter
sub
mov
ficompl
and
push
cwtl
add
jl
dec
rcrl
or
mov
mov
rcl
fldl
mov
xor
mov
adc
and
sub
jnp
dec
insb
sysenter
xlat
jns
jo
psrlw
and
fnstcw
mov
ja
pusha
call
ret
scas
aaa
inc
ss
sub
stc
std
mov
xlat
xor
inc
imul
cmp
shll
popf
inc
fcomip
adc
leave
mov
jb
lcall
mov
mov
pop
pushf
loop
push
jno
jo
sbb
push
mov
insl
pop
int3
push
mov
add
xor
clc
cli
clc
sarb
repnz
inc
aam
xor
stos
inc
add
testb
add
jecxz
cld
add
cld
aas
clc
movsl
adc
dec
add
divb
push
sub
inc
mov
or
pop
fcomp
sbb
into
cmpsb
stos
into
ljmp
daa
lret
lods
mov
lds
push
inc
sbb
mov
mov
push
adc
mov
fs
mov
push
das
cltd
pop
stos
jl
lods
mov
popa
inc
mov
in
xchg
pushl
xchg
xchg
inc
lock
cltd
xlat
cmc
push
mov
inc
faddp
pop
xchg
fimull
mov
fwait
hlt
insb
push
rorb
stc
cmp
fldt
cmpsl
aas
or
in
movsb
lea
cmp
lcall
jle
jmp
mov
in
jle
sub
add
fisubs
dec
icebp
sbb
popa
outsl
popa
add
test
imul
push
lcall
cmp
add
testb
add
xchg
call
leave
fs
and
icebp
icebp
or
pop
and
push
xchg
dec
push
fimuls
outsb
dec
jecxz
pushf
movsb
and
lahf
lods
sub
sahf
adc
lods
cli
mov
add
sbbl
push
pop
inc
rcrb
cmp
cmp
jnp
cmp
xor
xchg
mov
mov
movsb
outsl
and
ffreep
mull
jo
inc
dec
popa
dec
movsl
sti
stos
lcall
and
xor
outsl
movsl
push
jb,pt
mov
icebp
rcll
mov
out
stos
cbtw
js
dec
shrb
cmpsb
cmp
adc
mov
scas
iret
fnsave
and
dec
xor
dec
int3
cmpsb
vmread
xchg
movb
lods
xchg
sub
or
cmp
repnz
mov
daa
bound
jnp
add
fs
es
data16
cmc
jle
dec
ds
xor
add
testb
add
repz
fisubrs
gs
fldl2e
in
cs
lods
mov
imul
adc
shlb
lea
imulb
jg
call
dec
sub
sarl
imul
bound
cmp
adc
ja
adc
outsl
xchg
test
roll
mov
jp
jb
sbb
loop
out
mov
out
imul
dec
rcrl
jle
or
cli
push
xor
leave
mov
mov
fstl
test
xor
inc
cltd
mov
out
sub
xchg
dec
negl
ljmp
sub
and
xor
in
and
adc
rclb
mov
fcom
jo
pop
rcrl
sub
rcll
xchg
adc
and
mov
add
dec
mov
imul
lahf
lcall
add
subl
stos
push
shrl
push
adc
fs
out
cli
inc
pop
cmp
mulb
dec
dec
nop
mov
stos
or
imul
lods
out
inc
cmp
sbb
add
imul
mov
or
jecxz
mov
pop
mov
mov
sarb
and
sahf
jbe
nop
push
mov
jnp
xor
sarw
outsl
jno
aad
sbbb
or
sahf
mull
cld
in
xor
jg
leave
sbb
test
fnstenv
sbb
mov
pop
add
lods
lcall
push
pushf
add
in
mov
add
lods
xchg
andb
lea
pop
mov
jl
insl
xor
jbe
cwtl
jle
addr16
aaa
sbb
fbstp
shll
shll
repz
push
sti
cmpsl
pop
push
jo
xchg
lods
test
add
add
add
int
dec
sub
fisubrl
and
or
mov
cmp
mov
cltd
fidivs
pushf
mov
mov
das
jns
mov
dec
cmp
test
cltd
dec
call
inc
and
sti
insl
out
push
imul
movsb
mov
inc
pop
or
sub
call
mov
testl
dec
dec
es
jp
mov
mov
inc
mov
adc
in
mov
rorl
xchg
scas
ja
sub
pop
xorl
iret
test
imul
hlt
fcomip
stc
mov
add
out
cwtl
inc
shrl
fsubp
insb
les
and
pushf
icebp
jnp
sbb
xor
push
rolb
xchg
pop
sbb
add
and
cmpsl
mov
mov
int
mov
mov
decb
add
push
and
std
cmp
pop
in
and
add
add
add
xchg
cs
outsl
inc
je
push
jp
cmp
pop
faddl
cmp
inc
xchg
ret
push
data16
adc
sbb
push
sbb
sub
cmp
cmc
push
cld
ljmp
nop
sub
pop
into
cmp
xor
mov
dec
and
call
push
test
cmpsb
imul
mov
xlat
push
fwait
lret
xor
fadd
shlb
and
rclb
xor
in
loop
xchg
or
das
and
mov
and
loopne
fldt
pmaxsw
lcall
xorl
dec
adc
pop
dec
add
stc
shrl
mov
push
xor
rorb
cmpsl
ja
pop
shlb
not
push
outsb
jno
aad
mov
sub
fnstcw
daa
wrmsr
add
lds
xchg
and
push
or
or
add
add
add
testl
adc
mov
or
daa
es
faddl
mov
mov
out
lcall
xchg
inc
int
mov
in
adc
jbe
fdivs
xchg
outsb
out
mov
out
mov
push
icebp
and
mov
cld
cld
es
dec
icebp
outsb
xorl
mov
lods
mov
mov
nop
push
loope
movaps
pop
inc
leave
mov
sbb
mov
jbe
jp
dec
push
add
and
sub
sbb
movl
push
shlb
or
aas
loopne
mov
sbb
out
inc
push
sbb
and
pop
out
push
xchg
xor
xchg
fs
sub
adc
jg
stc
mull
movsl
outsb
push
cli
cwtl
outsb
ja
inc
aas
and
fs
mov
aad
add
fiaddl
ret
ficomps
push
xlat
je
cmp
add
add
add
pop
mov
lea
test
push
jne
sbb
add
add
xchg
lret
call
push
popf
and
xchg
pushf
iret
sub
cli
mov
in
subl
cwtl
lcall
movsb
icebp
aad
lea
arpl
clc
jne
dec
mov
insl
rcrb
scas
inc
mov
aad
dec
stos
mov
pusha
fsubr
cmp
leave
adc
inc
test
ret
and
inc
add
pop
mov
or
fistpl
dec
add
test
aaa
ds
sub
pop
imul
cwtl
pop
jp
fbld
popl
mov
aas
leave
jmp
dec
subb
push
sti
out
pop
mov
scas
pop
xchg
adc
popf
pop
and
shrl
mov
xlat
jnp
jb
dec
scas
jg
adc
sarb
inc
test
fldl
sbb
dec
add
arpl
ja
repnz
add
mov
add
add
add
incb
test
xor
add
sub
mov
push
and
sub
cmpsl
xchg
xor
xlat
gs
addr16
xchg
fdivl
and
xor
mov
addr16
lret
hlt
adc
pop
dec
in
mov
adc
nop
adc
in
sub
pushf
and
jne
push
popf
mov
outsb
push
push
pop
cltd
cs
vmovdqa
xlat
inc
lds
call
jae
hlt
testl
pop
mov
xor
and
pop
pop
int3
in
stos
insl
adc
add
incl
dec
jge
cld
cmp
inc
fdivrs
repnz
aam
fs
adc
scas
test
mov
sar
test
aas
mov
addb
and
xorl
jecxz
inc
adc
mov
repnz
std
jbe
repz
lock
mov
cwtl
sbb
daa
ljmp
add
sbb
andl
or
lock
sbb
cmp
add
aad
in
xor
jo
repz
nop
push
jecxz
xchg
imul
jecxz
inc
fs
add
xchg
ja
jg
mov
shll
daa
fucomip
pop
pop
or
jg
mov
loope
gs
dec
test
in
push
add
dec
daa
leave
cmpb
inc
lahf
mov
test
repnz
push
adc
out
or
scas
xchg
jecxz
xor
out
add
add
sub
into
sar
je
push
into
xchg
inc
fbld
out
inc
stos
negl
rorb
jbe
aad
sbb
jmp
sbb
stos
cltd
inc
or
test
mov
popf
cmp
inc
or
mov
pop
jo
push
add
js
lret
push
adc
loope
lret
nop
testl
add
sti
pop
jge
div
cmp
mov
aas
add
testb
add
hlt
jnp
arpl
xchg
fidivl
scas
xchg
pop
mov
pop
sti
xchg
les
sbb
aad
xor
stos
je
out
sahf
sbb
sub
dec
scas
pop
shll
stc
ret
mov
movsl
push
xchg
mov
sbbl
and
mov
pop
in
mov
inc
mov
cld
shlb
ret
lea
adc
rcrb
xchg
pusha
cmp
push
sub
int3
dec
dec
sbb
pop
jg
fldcw
into
outsb
mov
sub
sub
jp
ret
push
dec
xchg
lods
dec
cmpb
xchg
xor
test
mov
cmpsl
and
cld
mov
sub
and
mov
filds
cmc
and
iret
int3
mov
aaa
fwait
lods
jo
jb
sub
and
dec
out
inc
scas
cmp
pop
mov
sbb
pusha
sarb
add
pusha
cltd
fsub
std
in
popf
jle
es
cmp
inc
add
testb
add
adc
jnp
sti
ss
and
jge
sub
jp
dec
loope
add
or
lahf
imul
out
lods
aaa
adc
lahf
sahf
inc
adc
jae
insl
lahf
in
std
mov
mov
adc
sub
and
adc
mov
scas
in
inc
cmp
aad
out
inc
adc
xor
lods
pop
sub
rcrb
imul
js
fisttpl
rorb
movsb
sti
mov
xchg
xchg
lea
out
push
cmp
ror
ret
loop
xchg
push
movsl
stc
arpl
js
mov
or
mov
mov
pop
dec
cmp
aas
js
stos
xor
dec
mov
ret
pop
imul
xor
cmc
data16
pop
jp
jnp
sti
xchg
jle
popf
loopne
mov
mov
add
add
add
fcoml
and
lretw
rcl
cmp
or
cmpsl
adc
pop
mov
shl
xor
aas
adc
test
fdivs
daa
fbld
outsb
push
mov
add
cltd
pop
push
les
jbe
sbb
ss
jle
and
jp
inc
pusha
out
pop
mov
adc
imul
sub
outsb
adc
push
aad
and
xchg
dec
or
shl
scas
lea
push
test
add
orb
test
or
lret
je,pt
inc
and
cmp
xor
subl
icebp
pop
xchg
mov
or
mov
ret
add
ret
aam
cwtl
cmpsb
stc
push
jb
jns
xchg
pushf
cmpsl
fistpl
push
push
aas
jp
cmpl
xchg
and
fwait
pop
lret
or
add
push
sti
loopne
cmp
jbe
jle
ret
add
add
add
push
push
xor
in
addr16
sub
dec
and
or
adc
mov
mov
jb
push
insb
in
adc
jb
jmp
fs
fnsave
mov
lods
loopew
jle
jo
adc
mov
mov
xor
add
cltd
jo
cmpb
adc
insl
and
inc
cmp
sahf
mov
xor
adc
cmp
out
test
xor
and
jmp
fildll
test
lods
sbb
in
mov
lcall
ret
mov
xlat
inc
outsb
cli
test
mov
push
fwait
pop
mov
cmc
fnstenv
or
adc
mov
rolb
adc
xor
sbb
or
push
loope
incl
gs
dec
mov
aaa
cmovs
out
sbb
cli
xchg
cmp
sub
lds
add
cmp
and
push
dec
jae
mov
add
add
add
pop
scas
jle
mov
or
fstl
sbb
dec
movl
or
jle
test
adc
or
addr16
test
push
xor
fs
sahf
lcall
cmp
data16
pop
xlat
in
fiaddl
push
int
sbb
pop
ss
popf
or
xchg
aad
and
je
aas
lods
inc
xor
add
mov
arpl
call
divb
sbb
dec
mov
iret
sub
adc
cmp
cld
popa
stos
imul
sahf
lds
ret
inc
xor
in
notl
shrb
movsl
int3
inc
or
xor
cli
push
jbe
sub
pop
movsl
xor
int3
loopne
adc
pop
mov
and
mov
mov
pusha
mov
cmpsl
or
add
incb
ljmp
fcomip
mov
scas
inc
add
testb
add
outsl
ss
jmp
mov
xchg
add
jbe
add
clc
and
or
mov
into
int
leave
sub
add
shl
adc
notb
scas
cmpl
mov
and
sbb
mov
and
or
xor
pop
roll
sub
cmp
pop
or
pop
fadds
xchg
jmp
cli
mull
mov
push
fstps
and
test
sbb
pop
mov
in
or
std
fcompl
cwtl
lock
jo
das
dec
loop
or
leave
mov
xchg
add
shlb
push
imul
bound
dec
mov
jns
dec
fldl
in
lcall
or
js
jnp
cld
dec
and
sub
std
imul
jne
and
jp
imul
stos
add
divb
rclb
mov
and
movsb
inc
add
testb
add
cmp
insb
pop
mov
subl
dec
dec
ljmp
dec
scas
xchg
mov
sti
xchg
add
scas
sbb
sub
icebp
imul
fists
fidivrs
xchg
xchg
mov
sub
add
test
insl
in
mov
sbb
lods
ljmp
int3
xor
sub
pop
mov
scas
outsb
sub
jno
clc
add
dec
cwtl
ret
call
pop
push
test
mov
sub
out
add
aas
cltd
sub
sarl
dec
in
pushf
cmpsb
pop
or
nop
outsb
test
xchg
adc
fnstenv
sbb
jmp
xchg
mov
addb
stos
xor
jge
jne
les
loop
cmp
sub
adc
xchg
push
repnz
sub
jbe
sbb
xchg
cmpsl
clc
adc
add
jl
dec
jbe
idivl
ss
repz
and
inc
add
testb
add
cltd
ret
dec
cs
aas
cmp
cmc
sub
jmp
cwtl
movsb
jb
push
in
xchg
xchg
lds
push
adc
sbb
aaa
or
test
sbb
lea
push
or
fisttps
push
ljmp
mov
inc
int
push
mov
inc
out
mov
or
cmp
mov
jecxz
or
and
and
or
inc
test
stos
leave
push
imul
scas
mov
mov
dec
daa
lea
or
lock
xor
inc
aaa
mov
pop
mov
cwtl
mov
mov
ret
sub
push
dec
jb
leave
jae
lret
into
in
mov
xchg
dec
push
jg
push
jb
xchg
or
ja
aad
fwait
lret
or
push
imul
out
jbe
jno
insb
fildl
add
and
outsb
sub
stos
fs
cmp
xor
nop
inc
add
testb
add
dec
adcb
popa
test
inc
mov
in
jp
or
dec
ret
int3
pop
aad
ficoms
shr
lods
add
cltd
int3
stos
scas
sar
shlb
out
insb
decl
cmp
lret
movsl
push
cli
sub
cltd
push
stc
cli
fstpl
cmp
int
stos
adc
adcb
ret
dec
insb
cwtl
test
test
into
shlb
xor
pop
mov
shll
cmpsb
dec
lock
ja
clc
mov
lahf
repz
dec
bnd
lcall
in
pop
cmpl
lcall
jnp
jb
inc
arpl
ja
popf
xor
scas
repnz
lods
outsb
cmp
mov
fnstenv
xchg
sub
int3
rorb
cmpl
dec
xor
insl
aaa
je
sbb
pop
jp
sbb
cmp
xor
les
scas
fistpll
loop
or
scas
mov
testb
add
das
imul
push
cmc
sarb
nop
insb
imul
fcmovb
jbe
sbb
jnp
jg
push
flds
sbb
jbe
lock
int
adc
sub
roll
arpl
enter
and
clc
xor
xor
pop
cmp
sub
out
pop
mov
ljmp
push
ret
inc
lea
test
adc
and
leave
xor
enter
cmc
js
imul
mov
xchg
arpl
cmp
or
outsl
subb
iret
sbb
fsubrl
add
cmp
dec
sub
adc
bound
push
mov
lock
sahf
lock
addr16
cld
dec
call
mov
xor
add
cmp
les
dec
add
testb
add
roll
mov
orb
cwtl
mov
mov
adc
sbbb
ljmp
popf
add
fwait
push
es
dec
mov
cmp
mov
mov
sbb
push
daa
cmpsb
and
mov
dec
scas
cmpsb
insb
addr16
repnz
shrl
pop
xchg
repnz
mov
sbb
jne
and
out
loop
sub
ret
sbb
inc
test
cmpsl
mov
dec
jg
lods
imul
aaa
inc
mov
fmul
cmpsb
add
add
sub
dec
movsl
mov
mov
arpl
sbb
cmp
movsb
jb
fnstsw
jle
std
lds
pushf
sub
jo
dec
cmpsb
add
xchg
mov
pop
movsb
inc
fdivr
in
xchg
fbstp
fld
das
add
jle
cmp
add
adc
incl
arpl
repnz
add
testb
add
mov
mov
cmpsl
mov
push
jnp
and
hlt
icebp
adcb
cmp
push
add
es
xchg
dec
sbb
sahf
mov
movsl
imul
sub
sbb
lods
inc
pop
push
inc
mov
icebp
nop
outsb
inc
in
cwtl
ret
xchg
les
pop
fildl
cmp
orl
add
jecxz
arpl
pop
shl
adc
jg
add
mov
ds
xlat
push
shlb
add
xchg
int3
out
xchg
popa
sub
mov
cmp
jae
jb
inc
ljmp
push
mov
pop
mov
rorl
test
pusha
inc
test
jno
or
push
insb
and
in
je
sub
mov
sbb
out
xchg
sbb
popf
lods
mov
cmc
mov
and
imul
out
fwait
xor
mov
and
das
cmp
lods
repz
in
pusha
out
adc
add
testb
add
dec
pop
push
xor
mov
bound
and
sbb
jne
add
rorl
out
stos
bound
xchg
lret
jbe
ss
mov
out
roll
movsb
imul
push
in
cmpsl
in
leave
pop
add
pop
loopne
in
mov
jmp
fiadds
gs
fcomip
test
adc
pop
popf
addl
lcall
mov
jno
mov
ds
lahf
sub
testl
insb
lods
jne
test
pop
push
cmp
out
mov
lret
cli
loope
mov
subl
int3
stc
xchg
aad
push
sub
xor
add
pushf
push
cmp
stos
nop
int
xchg
stc
mov
cmc
pop
jl
shr
jo
xchg
mov
stc
xchg
adc
aad
movsb
shlb
bound
mov
xor
push
add
aas
daa
push
cld
push
std
jmp
push
jg
push
lods
mov
add
testb
add
fucomip
xchg
dec
xchg
push
les
aad
lods
mov
mov
pop
test
mov
outsb
test
test
mov
cmpb
push
adc
jg
jnp
dec
scas
lret
sti
mov
adc
cmpsb
dec
out
arpl
inc
in
jl
xor
ror
or
bound
mov
xor
imul
mov
pop
stc
hlt
loopne
je
stos
jb
jmp
les
push
jno
and
ss
fsubrl
call
pop
les
mov
test
or
and
aad
popf
mov
test
subl
stos
or
cli
cli
jnp
and
fsubrs
push
enter
lock
or
dec
inc
mov
in
dec
sbb
adc
xor
jmp
sti
jmp
mov
add
add
add
sbb
dec
push
cwtl
adc
push
inc
mov
testb
add
movb
add
add
sbbb
and
out
sub
or
sub
test
rcrb
aam
fwait
jmp
decl
sub
adc
pushf
add
mov
jns
cmpl
mov
test
clc
popa
mov
ja
xor
sbb
sbb
xchg
aam
push
enter
sub
mov
xchg
pop
fcmovnb
daa
and
enter
jo
xor
lock
cld
jnp
jnp
aam
mov
mov
loop
sti
out
outsb
mov
mov
dec
mov
push
into
pop
and
mov
inc
and
and
xchg
or
sub
mov
cmpsl
test
inc
pop
adc
cmpsb
jno
adc
add
idivl
mov
mov
dec
dec
add
testb
add
xor
or
stos
mov
std
movsl
push
data16
adc
pop
xchg
nop
stc
icebp
push
pop
out
push
cmpsl
mov
pop
sbb
jg
aad
cs
test
and
pcmpgtw
xchg
xchg
insl
mov
cs
mov
mov
jmp
push
or
mov
addr16
sub
or
mov
mov
es
pop
pop
in
ret
popa
push
in
stos
pop
sub
mov
or
cli
lret
scas
adc
call
cmc
enter
std
adc
pop
bound
sbb
repnz
insl
ss
mov
aam
addr16
sahf
outsb
xor
in
push
pop
jbe
les
inc
jmp
inc
fsubrl
push
sbb
jle
jae
mov
out
imul
sub
repz
pop
push
movsb
jl
mov
into
mov
aas
mov
inc
mov
or
add
jg
xchg
lcall
xchg
add
testb
add
fwait
shl
or
insl
aam
inc
inc
jle
loope
js
rolb
and
enter
js
into
xchg
fmuls
cmp
mov
dec
or
adc
dec
push
xor
pop
pop
leave
aad
adc
sub
jp
rep
adc
shll
xor
out
cmp
mov
or
or
rcl
jg
fld
je
or
cmp
pop
les
push
mov
mov
sbb
popl
cwtl
in
dec
add
jp
ret
test
pop
or
sahf
push
inc
xor
xchg
sub
sub
dec
jnp,pt
push
inc
mov
dec
cwtl
insb
and
mov
out
sarb
shl
fbstp
ror
lods
rcll
jb
xorl
dec
xchg
and
cld
add
and
dec
lret
jmp
imul
xchg
aad
push
pop
pop
ss
add
testb
add
sub
cmp
and
cmpsl
and
fidivs
vmovlpd
shll
jnp
fsubl
push
pop
movsb
pop
xchg
lock
cli
movsl
subl
cmpsb
mov
mov
mov
loope
stos
movsb
outsl
jo
fimuls
outsb
sbb
stc
adc
inc
call
sbb
inc
and
insb
jns
lds
mov
or
add
gs
push
fsubrl
loopne
fistps
sbb
out
lahf
notb
sub
push
idiv
ds
aad
aam
sarb
mov
dec
ret
xchg
sbb
lret
rorb
fwait
sub
clc
fidivl
cmp
jge
shl
aam
dec
scas
out
js
int3
dec
popa
aam
cld
lret
mov
xor
xchg
mov
or
sub
nop
rol
loopne
pusha
shlb
cmp
mov
loopne
add
lds
cmc
cwtl
and
jp
fildll
add
testb
add
xor
stos
pop
adc
aam
in
sahf
outsb
fcoml
nop
mov
xor
stc
mov
xchg
adc
enter
mov
call
push
mov
add
push
gs
xchg
jmp
imull
adc
jle
cmp
sub
mov
fimuls
sbb
xchg
pop
hlt
inc
push
gs
outsb
ljmp
fildl
jecxz
fisubrl
mov
cli
call
xchg
lret
sub
pusha
mov
sbb
in
jns
jb
aaa
or
xor
jl
xor
pop
mov
cmp
mov
dec
xor
cmpsl
push
arpl
out
adc
xor
pop
out
es
mov
out
cwtl
jbe
dec
fs
jne
jno
fnsave
out
inc
ja
push
mov
mov
int
ja
loopne
sub
test
xor
add
jns
clc
mov
stos
sbb
xchg
and
add
add
add
cmp
leave
dec
pop
sbb
lret
das
or
sub
mov
gs
or
fucomp
rcll
enter
insl
aaa
mov
fwait
adc
ret
jge
xlat
loop
jmp
movsb
in
negl
push
fiaddl
jge
dec
daa
mov
cmp
dec
and
pop
andl
push
inc
and
sub
addr16
popa
and
xor
es
lahf
incl
add
test
dec
pushf
mov
push
mov
js
mov
pop
cs
icebp
mov
inc
jo
jl
jnp
loope
shll
cltd
pop
mov
aaa
mov
addr16
fmul
icebp
fidivrl
stc
jp
inc
bound
adc
in
pop
lahf
xchg
shll
mov
xor
cmp
mov
scas
pop
mov
cltd
sbb
adc
fldl2t
add
js
ret
jg
mov
insl
outsb
daa
sbb
add
add
add
dec
mov
cli
sub
aaa
jns
and
dec
or
pop
fs
xchg
dec
mov
sarb
nop
repnz
cs
imull
add
subl
push
or
lock
lods
mov
mov
pop
mov
fistl
and
adc
jns
mov
jmp
jns
push
cli
sbb
arpl
fmulp
mov
add
cmp
push
insb
movsb
repnz
lods
jnp
inc
mov
mov
mov
xchg
in
aam
xor
sbb
daa
into
mov
or
cmpl
mov
jae
test
std
push
inc
pop
fsubl
repnz
mov
aaa
out
and
pusha
inc
nop
addr16
clc
mov
lods
fidivl
adc
popf
insb
xlat
add
adc
mov
cwtl
out
daa
subl
mov
push
add
testb
add
lcall
sahf
out
mov
lcall
sub
xchg
fisubs
cmp
ss
cmp
aaa
adcl
xor
pop
test
cs
cmpb
or
lret
inc
loop
out
mov
arpl
inc
dec
je
stos
jo
nop
cltd
sarl
pop
add
push
nop
test
and
pop
xor
adc
clc
xlat
popf
js
js
sbb
jne
rcrl
das
aaa
movsl
add
outsl
loop
sbb
into
arpl
mov
sbb
inc
repnz
pushf
dec
push
cmc
add
xchg
call
adc
clc
or
push
movsl
push
dec
jg
lods
clc
xor
in
les
ss
fbld
fidivrl
iret
clc
sahf
cld
jle
stos
into
test
cmpsb
fwait
and
pop
lea
pop
add
add
inc
icebp
hlt
gs
push
sub
movsb
enter
add
add
add
arpl
imull
sbb
pop
adc
inc
and
dec
int
fadds
or
xor
fs
xor
sbb
int
push
fs
int3
cmp
cmc
cwtl
outsb
push
or
leave
cld
mov
in
mov
scas
scas
mov
inc
rorb
dec
sbb
out
ljmp
xchg
mov
outsb
push
xchg
ljmp
lret
out
ljmp
jge
dec
loope
fildll
std
push
and
pop
jne
lcall
pop
icebp
insb
shr
out
xchg
out
lcall
scas
jbe
lahf
dec
lcall
test
and
repz
pop
pop
sbb
or
add
in
in
mov
push
cmp
sti
repz
divl
movsb
and
cli
dec
ficoml
sbb
dec
and
cmp
add
add
aas
gs
repnz
and
inc
pushf
dec
ja
push
add
testb
add
test
in
out
gs
data16
call
pushf
pop
loope
outsb
cmp
cmp
fsubl
idivb
pop
sti
push
and
pop
insb
sub
mov
and
add
cmp
cmp
ja
test
imul
cmp
adc
int3
add
xchg
mov
push
push
addl
mov
cld
sahf
push
cli
adc
into
push
or
xchg
xchg
clc
dec
sbbl
pushf
and
mov
in
or
nop
stos
sbb
inc
mov
push
fcompl
xor
dec
pop
test
ljmp
fisttps
sub
xchg
push
aad
push
loope
push
bnd
or
sbb
testl
cwtl
mov
scas
scas
ja
sti
setns
enter
cmp
mov
je
std
mov
sti
mov
sbb
mov
mov
imul
add
out
fisttpll
mov
lock
add
testb
add
dec
leave
enter
pusha
cs
add
scas
push
rcrb
mov
dec
cltd
xor
stos
adc
pop
lock
pop
js,pn
imul
imul
sti
mov
pop
lcall
pop
pop
or
xor
pop
lcall
sbb
add
mov
aad
fsubl
jae
loope
push
fsts
cmpsb
aaa
movsl
push
and
in
cmpsb
and
sub
cmp
lret
sti
sub
xchg
add
jmp
les
xlat
jmp
mov
or
aad
jnp
fcompl
fcoml
or
inc
sub
push
mov
jecxz
xchg
adc
xchg
mov
test
sahf
repz
jecxz
in
fnsave
cmp
call
loope
jnp
add
mov
arpl
out
add
testb
add
adc
jl
outsb
lock
shl
dec
jae
mov
or
icebp
push
fisubrl
jae
stos
imul
into
and
lea
ficompl
adc
fmuls
mov
dec
movsb
arpl
add
jl
dec
popf
xor
je
out
xor
imul
jne
xor
out
shrb
das
imull
lcall
dec
sahf
in
jae
push
fisubs
inc
fistl
cli
fildl
mov
and
inc
addr16
jnp
add
scas
xchg
or
int
cltd
cmp
jge
or
inc
es
push
inc
jbe
mov
test
push
jns,pt
push
sahf
arpl
or
mov
clc
leave
jl
cwtl
popa
fs
sbb
in
icebp
inc
jle
mov
lea
les
pop
shrb
jae
mov
add
add
jmp
out
aas
mov
mov
add
add
add
cmc
xchg
fcmovnb
insl
or
arpl
ss
cmc
sub
aam
lea
aam
testb
ret
fcmovu
and
cwtl
je
ljmp
cmp
adc
cmpsl
ficomps
mov
push
xor
insl
pop
or
ja
or
dec
das
add
mov
scas
pop
adc
fisubrs
ja
mov
sub
sub
out
dec
je
lret
and
jb
movsb
push
jmp
mov
mov
jnp
in
outsb
das
xor
jmp
fs
mov
cli
enter
pop
xchg
aas
inc
gs
dec
mov
fsubrl
push
xorb
jp
fldenv
jl
sbb
popa
mov
inc
push
mov
or
or
cmp
xchg
stos
sub
loope
add
imul
out
mov
arpl
pop
add
testb
add
cld
sbbb
test
jge
ja
xchg
ljmp
aas
clc
sub
repnz
sub
in
push
xchg
rorl
dec
outsl
divb
dec
lahf
or
sub
das
xor
mov
sbb
mov
aas
inc
idivb
in
movsl
or
xor
in
inc
enter
cmp
mov
test
pop
out
mov
dec
mov
pop
mov
das
cld
aas
data16
mov
sub
push
test
repz
push
push
movsb
jo
inc
lret
mov
push
nop
call
lcall
test
int
mov
and
inc
fs
out
sub
inc
shrl
fs
mov
pushf
cmpb
lahf
xchg
adc
inc
push
in
movsb
or
in
int3
daa
ljmp
push
and
fistl
cmp
push
sub
add
js
add
dec
stc
mov
clc
add
sub
cmpsl
out
enter
testb
add
add
xor
xchg
jnp
das
jg
jo
xchg
and
aas
inc
mov
mov
rcl
jecxz
cmp
mov
and
fadds
and
lcall
and
mov
add
testl
sbb
jecxz
mov
outsl
xor
cs
mov
cltd
pop
orl
inc
test
cmp
ss
add
pop
nop
fildl
in
decl
mov
stos
les
and
fwait
and
icebp
inc
mov
sti
jb
fisttpl
fbstp
mov
int
xor
mov
xchg
xchg
jge
fwait
outsl
iret
cmpsl
js
gs
icebp
fldln2
pusha
mov
push
out
cmpsl
xor
jle
out
add
out
xor
sbb
and
mov
add
pop
sbb
mov
sub
add
xchg
cmp
jle
jg
cld
jo
hlt
leave
arpl
adc
testb
add
mov
mov
xchg
nop
clc
iret
loope
addl
pop
aas
cmp
inc
and
mov
sub
nop
push
hlt
sarb
xor
subb
and
add
mov
pop
pop
dec
push
addr16
mov
pop
cmpsl
xor
shll
pusha
mov
inc
or
mov
repnz
pop
mov
test
lds
loopne
mov
mov
bswap
mov
pop
cld
movb
insl
cmpxchg
add
dec
enter
fistpl
and
dec
cmpl
pop
sarl
pop
mov
aam
pop
popf
ja
scas
fisttpll
shrl
xchg
inc
test
or
aaa
icebp
cmc
outsl
mov
pop
cmp
arpl
insb
mov
hlt
mov
add
add
xchg
mov
mov
inc
lret
pop
add
testb
add
test
lea
outsl
xlat
or
fistps
fdivl
repnz
inc
scas
jns
icebp
shrl
push
sbb
sbb
scas
push
adc
outsb
aam
inc
aas
call
sbb
mov
lods
negb
dec
lahf
das
arpl
std
ret
ljmp
dec
lret
int3
pop
dec
add
data16
orl
push
hlt
xor
icebp
je
fistpl
mov
adc
mov
dec
sbb
js
mov
or
push
popa
pop
jp
push
rcrb
xor
loop
mov
cmp
dec
jg
out
mov
addr16
stc
out
pop
push
repz
aas
and
or
aam
in
out
jge
jp
dec
dec
push
mov
adc
icebp
adc
aas
test
test
pop
addr16
inc
sub
inc
pusha
mov
stos
fst
jp
cmp
add
or
mov
rcrb
dec
stos
pop
add
testb
add
lret
jecxz
cs
mov
or
out
dec
dec
rorl
pop
push
sbbl
addb
cli
pop
mov
ljmp
in
out
mov
insb
mov
push
pop
or
or
xchg
inc
push
sbb
dec
sbb
dec
fsubp
rol
lcall
push
jl
loop
fsubrs
je
push
div
outsb
cltd
dec
loopne
pusha
insb
or
fwait
lret
mov
ja
xor
xor
push
mov
enter
jo,pn
push
sbb
in
sub
push
sti
sbb
inc
daa
jle
push
dec
push
adc
repz
jb
inc
imul
fists
movsb
mov
cmovle
or
pop
in
add
jp
mov
inc
les
jno
es
stos
jae
push
mov
lcall
loope
add
fsubrl
mov
out
cmp
dec
movzwl
lahf
lret
add
testb
add
push
xchg
fwait
iret
and
cli
nop
js
clc
in
mov
pop
cmpl
cld
cmp
cwtl
dec
pop
mov
xchg
sub
repnz
pop
outsl
mov
mov
pop
add
test
daa
arpl
mov
pop
shlb
jo
lahf
mov
inc
data16
mov
mov
cmp
dec
add
push
out
inc
push
out
sub
jbe
add
dec
lea
add
lret
xor
sbb
test
fisttpl
and
inc
dec
popf
negl
mov
outsl
fisubrl
jecxz
xor
jne
jp
mov
mov
lea
notl
pop
push
jb
aas
in
out
adc
loopne
pop
imul
cmp
push
mov
loopne
popa
divps
xchg
fldenv
add
or
push
shll
out
xchg
inc
push
sbb
add
add
jg
int
call
xchg
mov
icebp
call
cli
jg
rclb
out
jle
cmp
insb
testb
jo
repz
xchg
sub
in
xchg
lahf
ret
loop
dec
fdivrp
fstl
or
adc
xchg
or
and
and
roll
mull
call
aam
push
mov
scas
sub
and
sub
sbb
add
dec
stc
leave
mov
mov
push
cmp
lcall
and
cmp
icebp
sbb
int3
lods
pop
dec
shll
or
fs
jae
xchg
cmp
xchg
pop
mov
cmp
pop
stos
sub
mov
je,pt
lds
rol
ror
push
mov
sub
mov
insb
aam
pop
sarb
pushf
add
insb
mov
add
out
lcall
inc
and
lcall
add
add
add
negl
sar
ds
mov
push
inc
jp
loope
xor
loop
pop
cmp
stos
push
mov
add
roll
xchg
mov
shl
movsb
ljmp
fcoms
and
add
cmpsl
daa
cmp
ds
push
mov
inc
test
fucom
push
mov
pop
jns
ror
jnp
data16
jb
xor
mov
adc
xor
enter
inc
movsb
mov
mov
push
psllq
dec
or
push
xchg
or
xchg
enter
stos
imul
outsl
rol
inc
fwait
iret
xchg
mov
xor
xchg
dec
cmpsl
dec
xchg
fists
pop
scas
rcll
repz
xchg
es
push
daa
fbld
cmp
and
cmp
inc
dec
test
pop
and
add
bound
imul
xchg
andb
testb
add
add
out
cmpsl
jnp
push
jp
ja
pusha
adc
jl
and
out
pusha
push
dec
push
pop
jp
andl
dec
test
mov
jo
xchg
data16
add
inc
and
jno
imul
mov
ret
lock
js
inc
lcall
int
cli
js
movsb
int
ja
xor
push
sbb
or
push
in
sti
cmc
cmp
lret
lds
out
xchg
ljmp
shrb
loopne
mov
sub
lods
jnp
rorl
pop
pop
into
sbb
rcrb
pop
adc
fbld
push
dec
mov
mov
push
rorb
mov
and
add
xchg
mov
js
xchg
cmp
imul
mov
movl
fwait
cmc
std
xor
cs
ret
neg
sarb
push
fisttpl
int3
add
jae
fwait
cmp
dec
data16
pop
mov
js
add
testb
add
out
push
scas
jne
mov
xlat
jno
jg
sbb
and
mull
push
test
aaa
jl
imul
jge
subl
push
cwtl
scas
out
and
push
push
setno
ja
mov
mov
insl
add
adc
adc
aam
pop
pushf
mov
icebp
sub
cmp
dec
sti
movsl
mov
mov
adc
sbb
hlt
jbe
inc
pop
lock
lcall
jo
mov
pushf
lahf
insb
sub
fstl
push
in
adc
jbe
or
out
xchg
jns
hlt
dec
inc
xor
pop
push
add
xor
icebp
es
add
inc
dec
add
cmp
mov
mov
test
cmp
sahf
fcoms
add
inc
push
clc
mov
or
and
add
testb
add
rcr
xchg
mov
mov
xlat
push
scas
or
xchg
xor
jl
xchg
stos
push
aaa
decl
outsb
mov
insb
add
aaa
test
test
push
sub
dec
inc
shll
jnp
lahf
and
inc
cmpsl
mov
es
addr16
aas
clc
inc
lret
push
or
mov
es
add
cmp
movsl
fcmovne
push
jne
leave
xchg
mov
test
rcll
xchg
mov
std
into
popa
xchg
sub
sub
mov
fcoms
add
jle
adc
adc
jecxz
mov
sub
out
pop
fs
jbe
fstl
mov
out
add
stc
cmpl
int
cmp
outsb
mov
ret
insb
jb
add
fstps
lcall
mov
add
shr
mov
cltd
xor
fs
testb
add
cmpsb
sbb
mov
mov
addl
adc
pop
addb
add
push
and
test
and
in
in
outsb
dec
loope
leave
mov
xor
and
out
xlat
popa
andl
arpl
cwtl
pop
cmp
add
movsb
xor
and
sub
std
adc
call
xor
push
mov
aas
or
in
int
and
out
push
jge
std
xchg
leave
dec
rcrb
jp
ds
adc
sbb
gs
jb
aaa
clc
pop
pop
data16
inc
xor
jae
filds
daa
iret
and
roll
movsb
fcoml
fs
aam
pop
cli
inc
sahf
jo
push
ficomps
mov
and
out
mov
cmp
imull
add
test
or
fdivs
test
pop
stc
pop
add
testb
add
outsb
add
dec
loopne
test
lods
cli
repnz
stos
cs
cmpsb
mov
cmp
push
cmpsb
cmp
mov
test
or
cwtl
stos
pop
dec
lcall
nop
and
pop
mov
mov
jbe
sub
ja
mov
mov
and
sbb
shlb
sahf
test
clc
fcomps
pop
scas
cmpsb
xlat
cwtl
mov
inc
add
push
test
pop
sub
imul
or
inc
fidivrl
and
dec
dec
gs
cmp
inc
clc
xchg
test
enter
mov
mov
mull
mov
mov
popf
into
dec
pop
and
sub
mov
cmp
and
mov
xor
cmp
daa
outsl
jg
sub
mov
xchg
jmp
pusha
jmp
int
jmp
dec
add
mov
and
das
lret
cmp
add
testb
add
lret
fiadds
rdpmc
iret
push
daa
cmpsl
jno
iret
mov
jecxz
out
cli
sub
data16
cmp
std
sbb
mov
pop
sbb
add
inc
pop
cld
repz
sbb
xor
jl
ficoml
cmp
push
cmp
mov
out
js
out
cmp
sub
int3
in
push
rclb
cmpsb
xchg
movsl
jne
jg
rcll
inc
ror
js
mov
pop
inc
das
pop
int
fiadds
popf
popf
div
add
jbe
add
inc
pop
es
fisttps
dec
and
aam
addr16
scas
xor
pop
ss
adc
mov
and
cmpsb
in
lahf
inc
cltd
xchg
xor
cli
das
inc
sub
lods
mov
xlat
addr16
mov
lahf
mov
out
shlb
cmp
inc
or
dec
jbe
loop
mov
loopne
xor
add
add
movsb
jae
jnp
mov
lods
push
adc
add
testb
add
out
ret
and
ds
std
fwait
xchg
xchg
xor
test
dec
cld
add
pop
push
jg
push
int3
push
jl
loop
cmp
mov
xor
xor
divl
test
adc
mov
jae
repz
int
cmp
jl
dec
push
xchg
push
mov
daa
sub
movsl
mov
mov
repnz
or
frstor
fucom
enter
call
mov
mov
pop
sti
sarb
pop
ds
lret
push
cmc
inc
and
sbb
sti
ljmp
cmp
xor
push
enter
out
ja
push
ret
leave
loope
arpl
xor
sbb
cmp
stc
jne
jb
inc
ja
sub
lret
or
popf
jo
inc
andb
or
adc
add
add
fbstp
scas
adc
lahf
mov
and
cmp
add
testb
add
fdivl
cmp
pop
clc
lock
addr16
mov
adc
scas
lock
xor
xchg
movsb
pop
add
jmp
popa
cmp
push
pop
adc
test
and
mov
mov
out
int
adc
dec
rclb
cmp
mov
fs
into
leave
push
rcrb
push
sti
mov
mov
add
ja
jmp
lock
iret
inc
jle
or
popf
inc
cs
lahf
ds
sbb
jnp
sbb
arpl
xor
push
or
daa
cmovge
pop
popa
and
jmp
imul
in
and
xchg
or
xor
shlb
lods
dec
in
jl
mov
dec
xor
rol
xchg
jae
mov
mov
pop
lret
xchg
addr16
fiaddl
in
add
mov
mov
sub
ja
xor
add
add
add
in
add
popa
ljmp
add
fsubs
push
pop
xor
add
int3
lds
sbb
stos
mov
fsubrl
lods
sbb
lods
cmp
sub
jg
inc
sbb
mov
scas
ss
ret
and
xchg
xor
out
push
test
aad
mov
repz
and
insl
xchg
sub
out
jo
mov
add
lea
xor
sahf
mov
push
clc
lods
adc
test
imul
mov
sub
aaa
xor
and
fstp
cmp
mov
jns
imul
out
repz
mov
mov
push
pop
out
lret
mov
xchg
adc
fcoms
xchg
jecxz
addr16
mov
int3
push
popf
push
add
out
into
push
cmp
sub
pop
inc
sub
add
add
das
mov
mov
mov
push
orb
pusha
divb
fwait
mov
cmpsb
jg
mov
cs
cmpsl
arpl
sbb
fs
out
push
fldenv
adc
in
jl
mov
popa
pop
test
ret
xchg
jmp
push
sbb
ficomps
add
push
cmc
rcrl
pop
in
aaa
mov
xchg
and
aad
inc
xchg
pop
fnstcw
jl
lock
add
insl
mov
xchg
sub
mov
jecxz
shrb
or
and
mov
push
enter
imul
and
jno
and
popl
cmp
or
push
and
iret
shr
mov
xchg
popa
xor
mov
aam
jg,pt
jbe
xchg
add
xchg
les
inc
aam
pop
inc
and
sahf
xchg
jge
cld
stos
lea
and
xchg
or
aam
lock
add
xchg
inc
shl
xlat
mov
fisttps
jo
rorb
push
imul
testb
add
jl
xor
inc
std
out
mov
rorb
loope
xchg
mov
or
sbb
imul
enter
lock
shr
jmp
cmpl
lods
shll
in
ljmp
pop
or
xchg
cmpsl
cmpsb
jecxz
cmc
jnp
xchg
pop
aad
add
fldenv
icebp
mov
sbb
pusha
cwtl
xor
mov
stc
inc
ret
cwtl
repnz
je
shlb
lcall
fldt
sahf
pop
xor
insb
push
mov
xchg
loopne
xchg
out
test
mov
xchg
addb
add
out
arpl
add
lea
arpl
loopne
sbb
in
fstpl
cs
pop
fldcw
or
lds
lea
lds
lret
lock
dec
add
lahf
pop
fcmovb
fcmovnb
lahf
pop
bnd
mov
adc
add
testb
add
jecxz
setne
mov
push
xor
popf
cmp
jns
rcrb
xor
jl
fisubl
orl
xor
lret
hlt
mov
adc
push
inc
jecxz
jmp
or
sub
pop
mov
cmc
dec
les
or
fcmove
xor
sbb
push
outsb
ror
je
test
pop
sahf
fimuls
sub
jns
inc
cmpsl
dec
int
jbe
push
fadd
dec
xor
clc
ss
fs
jbe
xchg
adc
fmull
leave
xor
fucomip
dec
testb
mov
jbe
or
push
mov
in
xchg
add
xchg
xor
sub
into
aam
iret
sub
xchg
xchg
cmpsl
and
scas
fcoml
hlt
adc
mov
push
insl
je
outsl
mov
xor
add
sahf
pop
testl
cmp
add
testb
add
mov
adc
mov
incb
icebp
into
and
pop
out
test
push
inc
push
mov
ljmp
add
inc
cmp
icebp
lods
cmc
or
lods
ds
jnp
sbb
mov
cmp
jo
sbb
sti
push
mov
ds
lods
pop
cltd
push
not
pop
pop
pop
pop
std
mov
xor
data16
dec
sub
and
clc
mov
aam
ljmp
outsl
arpl
and
adc
jp
mov
stos
xchg
cmpsb
lea
sub
xor
jp
stc
js
fsubs
jmp
add
dec
mov
mov
mov
adcb
int3
imul
jp
in
data16
data16
hlt
adc
sbb
shlb
ss
into
add
inc
pop
mov
movsb
inc
gs
or
add
add
add
add
xor
push
fwait
sti
dec
in
mov
mov
lcall
jecxz
in
cmp
xor
mov
inc
adcl
fldenv
pop
lcall
xlat
push
popa
mov
push
push
mov
pushf
fiadds
sbb
pop
ret
data16
push
xchg
mov
loop
dec
test
std
sub
test
and
das
inc
cs
jmp
cmp
sbb
fistpll
sbb
inc
outsl
xor
sub
cmp
xor
mov
mov
adc
xor
pop
inc
addl
test
mov
insl
cmc
xor
push
pop
inc
mov
xor
and
inc
xchg
ret
jp
add
sbbl
fwait
jg
add
inc
xlat
ja
hlt
cmp
mov
add
mov
fwait
sub
mov
xor
add
repnz
movsb
jle
mov
mov
imulb
add
add
add
clc
mov
sub
popf
cltd
sarl
mov
mov
push
inc
mov
in
enter
sbb
loope
jge
jbe
gs
inc
in
add
mov
ss
mov
adc
and
pushf
inc
jmp
sub
push
sub
inc
fsts
shrl
jl
pop
add
pop
jne
dec
lea
popa
xchg
push
and
mov
pusha
out
lahf
xchg
jge
and
pop
or
rep
pusha
xor
xor
sbb
mov
ret
fdivrp
hlt
insb
mov
fisttps
stos
stos
and
and
in
push
jo
add
loope
out
lret
mov
cmpsl
jo
outsl
movl
outsl
std
xor
addl
jno
shll
add
stos
sub
stos
out
jmp
sub
inc
das
xchg
testb
add
sub
push
in
ds
and
dec
mov
hlt
popa
mov
fidivl
xor
int
adc
movsb
ss
iret
push
into
push
mov
xchg
jl
pop
and
xchg
mov
sub
lret
adcl
xchg
stos
cmpsb
in
inc
iret
jge
adcl
and
push
push
adc
and
jl
sti
cli
es
rolb
fcmovu
sahf
stos
sbb
cmp
fmull
jno
sub
pop
ljmp
xlat
test
scas
es
sub
test
fwait
out
pop
icebp
add
mov
cld
push
pop
bound
add
cmp
and
cli
dec
insb
lods
sbb
adc
daa
lods
cmpsb
fs
stos
mov
add
cmp
mov
rcr
sub
lea
mov
shll
fnstenv
mov
jo
add
add
add
pop
pop
push
and
push
mov
int3
or
push
add
outsl
mov
je
clc
push
pop
mov
fmull
xor
testl
xchg
and
orl
pop
and
lea
or
pop
adc
lods
mov
out
fxch
jb
pushf
xor
jge
cltd
dec
daa
jmp
push
shrb
fisubrs
pushf
stos
sti
and
xor
clc
push
jg
jo,pt
mov
mov
dec
push
xchg
push
mov
lret
pop
jecxz
mov
or
inc
dec
jbe
sbb
fisubs
mov
xchg
scas
pushf
jb
scas
call
das
loopne
es
mov
and
pop
mov
pop
xchg
push
jb
push
ljmp
xchg
xchg
add
cld
je
jbe
jmp
lea
xchg
loope
sub
add
add
add
xor
mov
mov
jle
popf
push
jge
mov
ljmp
jae
addr16
dec
mov
push
xor
and
lods
outsb
popa
fdivl
jl
xlat
cmp
and
outsb
les
lsl
arpl
popf
lret
call
lcall
or
nop
inc
mov
mov
ret
push
popa
jmp
add
popa
mov
adc
stos
and
fs
adc
and
mov
add
cmp
repz
or
scas
mov
cld
fs
dec
sbb
pop
inc
ret
jb
dec
pusha
or
les
popa
push
clc
push
xor
jno
insl
or
add
syscall
inc
rorb
mov
push
ret
cs
mov
fistpl
xor
hlt
push
test
pop
outsl
shrb
add
push
cltd
jmp
fcmovnbe
cld
xor
aas
call
jb
add
add
add
imul
out
loope
mov
adc
push
popf
mov
js
gs
cmpsb
inc
dec
sbb
ficoml
jo
flds
lret
push
mov
pop
mov
xchg
jno
mov
mov
in
xchg
sahf
inc
popf
imul
add
push
mov
mov
jg
mov
jecxz
out
mov
xchg
xchg
scas
cld
shlb
jmp
lock
inc
mov
mov
push
lret
in
sbb
jl
lds
test
inc
daa
xchg
icebp
mov
sbb
or
arpl
mov
inc
ffreep
sbb
dec
mov
push
xor
ljmp
jne
mov
push
mov
out
lret
add
stos
in
pop
nop
or
inc
xchg
add
mov
push
xor
add
adcb
add
mov
mov
push
jg
pop
jne
mov
jae
add
add
add
adc
push
ret
pop
int3
cmp
xor
pop
nop
jmp
push
pop
outsl
mull
and
fwait
jl
lods
and
lock
int3
xor
les
test
arpl
cld
inc
das
dec
xchg
jae
add
mov
fcoms
pusha
pop
aad
push
mov
pop
es
iret
push
gs
test
cld
sbb
cmp
daa
xor
rcr
imul
or
call
cwtl
mov
add
pop
lds
adc
fcmovnbe
lea
pushf
sub
adc
mov
test
fisubl
xchg
mov
sub
jle
cmpsb
mov
jg
cmp
xchg
jb
sbb
cmp
or
xchg
fldl
hlt
inc
jb
nop
xor
jb
test
push
jl
insb
bound
add
mov
add
add
mov
fucomip
addr16
jmp
mov
add
add
scas
push
lock
xchg
dec
aaa
repnz
mov
fmul
sub
mov
sbbb
sub
jl
push
push
ljmp
and
in
add
xor
out
push
leave
mov
mov
pop
movsl
aas
add
cmp
push
in
lar
mov
repnz
std
fwait
push
into
push
jmp
fwait
addr16
bound
jmp
std
stc
loopne
mov
jl
pop
xor
mov
imul
fistpll
xchg
push
cmp
jmp
aas
mov
mov
insl
adcb
jp
imul
daa
fldcw
enter
adc
int3
xchg
fstl
push
imul
repnz
or
andb
int
pop
xchg
lock
or
clc
outsb
cmpl
cmp
cwtl
loopne
add
dec
out
iret
jmp
cmpsb
addr16
sbb
dec
mov
add
testb
add
adc
sti
in
jmp
pop
mov
pushf
adc
adc
push
sahf
test
mov
adc
fnstsw
push
andb
lods
call
sbb
popf
dec
loopne
pop
cwtl
mov
out
idivl
shrb
mov
lods
mov
sub
out
jmp
nop
push
loopne
mov
aas
mov
jb
or
inc
mov
inc
fwait
mov
in
sub
mov
mov
or
push
shrl
jge
mov
mov
adc
popa
mov
in
mov
mov
int
popf
data16
repnz
bound
popf
or
das
xchg
inc
in
scas
iret
pushf
jecxz
jp
xorb
inc
std
cmpb
xchg
pop
fcmovb
outsl
sub
sbb
or
int3
test
add
cmpsb
push
jnp
std
cmpsb
pop
lods
jne
xchg
inc
iret
dec
data16
jbe
add
add
add
repnz
pop
push
adc
cmp
mov
sarb
xor
jl
adc
mov
mov
sub
sti
mov
adc
loope
hlt
mov
mov
inc
pop
repnz
aaa
stos
bound
lods
repz
cmp
jp
jp
arpl
inc
or
ficoml
frstor
xchg
imul
jl
stc
ret
mov
dec
pop
pop
mov
stos
mov
or
fmull
jns
dec
inc
leave
mov
xor
jp
je
sbb
cmp
dec
push
xor
in
into
add
xchg
jg
lods
outsb
adc
jmp
imul
mov
sahf
ret
mov
popa
inc
mov
int3
mov
mov
mov
sub
mov
lods
test
sbb
imul
imul
imul
or
add
in
lods
imul
neg
std
stc
idivl
pop
pushf
ja
add
add
add
cs
mov
cmp
adc
popf
mov
sub
or
fsubrp
push
fdivrs
jmp
push
imul
shlb
movsb
out
pop
xchg
gs
bound
pop
xor
repnz
fst
pop
dec
jno
daa
in
ret
mov
cmp
add
jp
aas
daa
rorl
pop
mov
inc
clc
jp
xchg
mov
mov
inc
hlt
mov
addr16
jecxz
mov
ljmp
loopne
movsb
loope
sub
jnp
je
lret
add
push
dec
sbb
cmpsb
and
mov
insl
cmpsb
xchg
sub
in
insb
add
xchg
jne
xchg
jl
icebp
repz
rclb
dec
jl
add
pop
sub
fwait
or
xor
int
andb
pusha
xor
adc
vpsubusw
pop
js,pt
test
add
add
cs
mov
ss
xchg
js
add
add
add
test
in
push
inc
mov
cltd
push
test
scas
mov
fwait
push
xor
jp
push
sahf
roll
idiv
data16
xchg
inc
in
outsl
sub
cmp
sub
test
mov
or
cmp
jo
xchg
jl
xchg
xor
push
sub
xchg
and
out
pop
adc
mov
xchg
and
cmp
dec
xchg
xor
test
sar
xchg
cwtl
into
js
mov
mov
push
or
jecxz
into
fadd
cli
lret
push
outsb
lcall
popf
rorl
mov
push
sarl
clc
dec
pop
mov
int
or
xchg
xor
mov
andb
jbe
rcrb
adc
xor
nop
test
out
push
mov
lods
adc
call
jae
gs
add
lcall
out
dec
jg
aad
sub
stc
mov
add
add
add
xchg
jnp
adc
lcall
push
push
lods
fdiv
insl
repz
das
mov
mov
inc
int3
popf
jae
jecxz
ret
shll
or
test
dec
mov
inc
push
into
pop
stos
mov
loop
adc
mov
js
nop
pop
add
mov
in
ja
push
xchg
int
dec
dec
xchg
js
add
dec
mov
negl
popa
mov
test
jp
enter
or
add
push
filds
sbb
lret
mov
pop
inc
mov
and
rorb
hlt
arpl
hlt
mov
mov
mov
or
push
cmpb
insb
addr16
scas
mov
lods
in
pop
mov
mov
dec
dec
jns
clc
mov
cmp
lea
pop
ret
jne
rcl
daa
enter
popf
inc
add
daa
sub
ja
mov
paddq
out
das
jle
add
testb
add
add
and
cmpsl
lret
jge
in
xchg
shrb
call
cmp
sbb
cltd
or
sub
stc
out
stc
or
lds
std
in
in
jecxz
ret
aad
cli
outsl
out
ret
push
add
outsl
das
jmp
add
push
clc
mov
jne
mov
int
les
ds
loope
clc
hlt
push
lea
notl
cmp
jmp
jnp
sub
arpl
popf
cmc
aaa
outsl
mov
xorl
mov
arpl
cld
sub
ljmp
aaa
loope
in
lea
push
pop
mov
vxorps
jl
loop
jnp
test
cmp
dec
push
jecxz
push
xchg
jb
ret
addl
rcll
subl
repz
adc
or
add
cmp
jnp
jge
xchg
jle
xor
testb
add
stos
pop
sub
sbb
pop
lea
sub
mov
xchg
sti
xchg
dec
mov
fstps
cmpsl
int
enter
cltd
sub
dec
push
pop
add
int
or
mov
jp
pop
bound
sti
sbb
pop
push
dec
adc
inc
push
cli
xchg
nop
add
fwait
push
rorb
and
inc
sub
adc
mov
sahf
outsl
mov
jbe
hlt
adc
fiadds
cmpsl
movsb
inc
outsl
movsl
xor
adc
cmpsb
fdivrp
mov
jmp
jge
out
or
adc
push
aad
inc
in
aam
loopne
and
std
dec
scas
jle
loope
xor
mov
rcl
mov
inc
mov
jbe
cwtl
mov
mov
sbb
pop
ds
int3
dec
xor
jnp
jl
pop
or
mov
add
xchg
push
mov
cli
xchg
jle
mov
mov
addr16
jl
add
add
add
ds
dec
addr16
int3
movsl
aas
jne
or
sbb
fwait
mulb
enter
dec
adc
push
cwtl
dec
pop
shll
cltd
push
or
xchg
hlt
xor
nop
scas
adc
jle
inc
and
jae
inc
lds
add
dec
dec
sub
and
in
sarb
adc
jbe
cld
aam
cs
push
add
fs
mov
int3
xor
fadds
jecxz
pop
xchg
imul
ret
pop
rclb
pop
pop
jle
jp
mov
lret
mov
stos
unpcklps
mov
les
pop
cmc
mov
xor
xlat
sub
jmp
cmpsl
pusha
push
insl
stc
pop
xchg
out
subb
cmc
inc
add
fucom
lock
mov
popa
xchg
dec
mov
and
into
cwtl
xchg
out
xchg
in
lods
es
mov
adc
mov
cmc
jne
xchg
add
inc
aaa
dec
fwait
jnp
aad
gs
into
add
mov
add
testb
add
iret
cmc
sti
sbb
inc
push
dec
xchg
pop
into
std
outsb
movsb
push
xchg
or
pop
fst
and
pop
movsl
test
movsb
xor
insl
push
sbb
dec
mov
popa
pushf
sub
data16
push
dec
cli
out
stos
inc
or
hlt
lock
push
insb
sti
lret
pop
bswap
add
clc
pop
jmp
mov
pop
cmp
jl
jg
lock
mov
sub
repz
push
sbb
shlb
movsb
sbb
and
sbb
iret
jno
add
jg
jne
pop
push
aam
lock
push
test
fwait
jmp
and
in
and
mov
aas
and
fdivl
mov
jno
int
fs
pop
addr16
mov
jecxz
and
inc
xor
sbb
bound
mov
cmpsl
ficoms
add
mov
std
mov
enter
or
jle
add
add
add
jp
ret
add
testb
cmp
in
int3
in
scas
sub
inc
inc
mov
mov
das
int3
neg
xchg
dec
out
dec
cmp
shr
add
dec
dec
push
shrb
adc
ret
not
jns
roll
out
lods
leave
mov
mov
pop
push
xchg
ret
loop
xchg
dec
cmc
or
sub
pop
add
ds
inc
lret
iret
xor
jge
lea
xor
movsb
adc
cmp
les
imul
shll
inc
fmull
enter
repnz
mov
insb
mov
cmp
js
lcall
push
fwait
cmc
divl
sbb
sarb
xor
pop
mov
cmp
pop
imul
enter
dec
ret
add
mov
xchg
lret
pop
js
clc
cmp
lret
les
add
fstl
out
add
add
testb
add
and
das
into
call
fisttpl
aaa
fdivrl
ljmp
or
sub
inc
adc
lret
push
ret
inc
pop
mov
mov
test
data16
push
call
mov
out
fs
adc
mov
jb
mov
ljmp
add
cmp
mov
pop
push
popf
cmpsb
and
pop
std
inc
sub
fisubs
sbb
int3
jl
popa
out
daa
in
xchg
pop
mov
sub
lahf
fidivrs
int
sbb
inc
icebp
and
xor
das
push
push
mov
sbb
loop
dec
push
mov
mov
push
push
pop
jp
pop
das
outsl
enter
lock
out
xchg
insb
ficompl
jae
shlb
fdiv
leave
pushf
jmp
mov
scas
sbb
xor
aaa
jbe
lods
sbb
inc
in
mov
mov
out
in
pop
test
mov
add
testb
add
mov
or
shrl
jg
cmp
test
movsb
cmp
cld
clc
inc
jmp
mov
and
push
cli
fdivrs
fisubrs
cmp
mov
divb
cmp
popf
popa
ja
pop
cld
je
stos
fcomps
je
gs
xchg
push
xchg
aas
pop
cmc
add
ljmp
fdivs
push
fcomps
jmp
pop
fidivrl
sub
xor
jmp
cmp
addb
in
sub
aad
movsl
scas
cmp
jno
cmpl
sbb
jp
mov
cmp
xor
jmp
mov
fnsave
mov
jo
dec
icebp
aad
into
push
push
mov
leave
and
cmpsl
lahf
pop
inc
mov
or
add
sbb
mov
popa
push
xchg
sbb
stos
add
cmp
add
divl
bound
add
testb
add
insb
mov
insl
push
mov
js
lret
mov
cwtl
in
insl
in
mov
xchg
jmp
out
mov
iret
push
int
mulb
add
iret
push
mov
fisubl
mov
movsl
and
test
adc
jge,pt
setb
into
in
fcmove
xchg
xor
push
xor
jg
sub
push
je
test
sub
pop
addl
xlat
outsb
jae
adc
xor
mov
add
inc
popa
push
or
pop
aad
mov
into
shlb
outsl
imul
push
mov
mov
into
leave
mov
bound
mov
std
cmpsb
pop
movsl
sub
gs
mov
pop
mov
pop
adc
ljmp
push
into
aam
std
xchg
cmp
add
add
fisubs
mov
push
mov
add
add
testb
add
test
xor
arpl
pop
shl
cld
jmp
loopne
push
lret
stos
ja
daa
rcll
mov
addr16
jmp
mov
xor
push
push
add
pop
mov
push
push
mov
mov
aaa
pop
pop
out
fadds
addl
jge
scas
jne
push
adc
xchg
and
xchg
repz
rolb
adc
xchg
aam
data16
or
push
popf
aad
push
push
push
minps
xlat
data16
jg
sbbb
push
cmp
repz
mov
icebp
call
or
xor
cld
or
lahf
mov
or
addr16
int
mov
and
cmp
xchg
dec
add
jbe
loop
dec
xchg
dec
jbe
xchg
std
cltd
mov
add
shlb
mov
shl
stc
in
and
add
testb
add
dec
into
adc
hlt
mov
iret
mov
adc
outsl
pop
stos
push
out
call
out
lods
aas
or
push
mov
leave
rol
dec
lds
mov
jg
aad
ljmp
ljmp
cwtl
mov
cwtl
and
or
in
pop
xchg
cmp
sbb
xor
push
dec
mov
xor
xor
xchg
mov
jmp
push
adc
or
mov
imulb
push
and
adc
or
sub
pop
push
jae
mov
jbe
in
mov
out
or
mov
punpckldq
mov
cld
xor
notb
ja
push
ja
emms
sub
pop
daa
mov
jecxz
push
sub
in
pop
xor
sub
les
orb
jle
insb
xor
test
add
add
add
push
ljmp
test
mov
fbstp
aad
sbb
xchg
push
mov
add
das
pop
ret
hlt
lea
aam
aaa
and
mov
dec
in
cmp
jecxz
outsb
sbb
stos
or
icebp
std
xor
pushf
cli
test
aaa
out
mov
rclb
ss
add
dec
jo
and
pushf
loope
jl
pop
fsubs
in
xor
lods
lea
mov
pop
loopne
sbb
push
scas
xor
loopne
sub
push
pop
sbb
cwtl
cli
in
mov
outsl
pop
sbbb
fists
hlt
int3
xlat
pop
xlat
icebp
and
jae
xor
imul
mov
mov
lret
sarl
shl
lods
movsl
pop
mov
test
or
lea
lea
jl
jecxz
cmp
ljmp
push
jae
imulb
mov
cmc
push
xchg
lcall
add
xor
jo
ja
std
stos
lods
and
fnsave
test
add
add
add
sarl
fimuls
lret
or
cs
sbb
hlt
dec
cmp
out
outsl
mov
sbb
daa
pop
mov
fdivrs
cmc
stos
add
int3
add
cld
out
popa
lcall
mov
fnstcw
xor
mov
leave
mov
push
shl
nopl
jae
pop
xchg
insb
idivb
add
mov
pop
mov
fidivs
pop
call
int3
dec
lret
iret
add
push
cmpsl
repz
adcb
pop
and
dec
pop
jno
dec
sub
loopne
fimuls
rdpkru
mov
cmp
loop
bound
add
cmpsb
fs
and
inc
jnp
fildl
loope
imul
lods
and
mov
adc
and
std
clc
out
mov
popa
mov
cltd
lret
xlat
ds
add
mov
cmpsb
arpl
je
dec
xchg
xchg
add
add
add
rorl
mov
sbb
insl
mov
testb
push
xchg
mov
inc
lahf
and
mov
adc
aas
cmpsb
pushw
push
in
jb
mov
cmp
je
inc
dec
cmpsb
mov
xchg
and
pop
add
pop
xchg
push
inc
test
fwait
std
or
pushfw
andl
inc
jo
popa
mov
hlt
sub
add
frstor
jecxz
adc
lret
xor
mov
out
pop
or
pushf
or
aaa
and
adc
pop
inc
xchg
mov
mov
xchg
sbb
sbbb
or
out
lret
aas
in
lods
jecxz
add
push
lods
and
lds
sbb
xchg
pop
or
jp
hlt
sub
fisttpll
lcall
lods
call
addr16
cmp
xor
cli
mov
pop
push
mov
add
add
add
lock
inc
or
and
xchg
mov
movsb
cld
sub
push
and
aam
mov
test
fldcw
xchg
ja
adc
push
jle
inc
clc
es
xor
sub
mov
in
pop
pop
push
xchg
data16
jns
jp
xor
mov
mov
aas
lds
mov
mov
outsb
push
jmp
mov
xlat
pusha
sub
inc
bound
inc
aas
ja
movsl
out
inc
mov
or
push
adc
leave
pop
cwtl
adc
pop
outsb
mov
inc
xchg
and
jne
xchg
mov
push
insb
sub
mov
xlat
pusha
in
dec
sub
out
inc
stc
cmpsb
jne
ffree
fld
repnz
push
push
and
or
mov
push
lcall
ja
cs
mov
jns
nop
fldt
xor
add
test
ljmp
pusha
cwtl
pop
xacquire
add
add
add
imul
sbb
sbb
bound
adc
sbb
ljmp
mov
sbb
mov
xchg
jae
cs
popa
dec
andl
stos
and
std
roll
adc
icebp
les
test
pusha
jae
cli
adc
sub
xchg
andl
arpl
ds
loop
mov
loop
lds
xchg
enter
push
test
mov
xchg
pop
popa
call
xor
out
int
cmp
xchg
push
push
jae
stos
push
shl
inc
dec
ja
and
bound
div
dec
adc
jl
dec
data16
and
sub
mov
and
dec
sbb
ljmp
pop
fistpl
in
cltd
cmp
jbe
jnp
push
repnz
out
lahf
sub
js
outsl
or
add
add
xchg
xchg
jns
incl
mov
call
add
add
ja
mov
lods
mov
sbb
cmp
cs
ficomps
movsb
dec
dec
and
sub
mov
addr16
andb
ss
jp
inc
xchg
in
dec
xchg
lock
adc
movsb
cs
bound
fadds
loope
or
cmp
mull
insl
in
lahf
adcb
push
mov
fbstp
push
enter
adc
mov
mov
mov
cmc
dec
and
cmp
int3
pushf
adc
js
out
or
mov
jno
xchg
jo
cmp
dec
rol
pop
scas
nop
dec
pop
pop
mov
pop
pop
sti
lret
sbb
mov
pop
repz
mov
inc
mov
loope
dec
adc
icebp
dec
cmpsl
nop
clc
rclb
test
jno
mov
and
add
lcall
sarl
add
testb
add
outsl
xor
fstps
lods
mov
cld
adc
pop
in
adc
push
outsl
lret
repnz
lods
push
daa
nop
addl
mov
jno
sub
xchg
jl
xorb
popf
mov
cmp
jge
xchg
addb
jae
inc
push
arpl
cltd
dec
fs
outsb
mov
stc
xor
loop
sub
push
add
bound
adc
vpshaq
imul
call
sub
dec
jmp
leave
aam
jl
mov
mov
lret
push
mov
adc
mov
mov
sub
push
xor
and
pop
xlat
xchg
stos
mov
sbb
xchg
add
scas
in
psubq
gs
pop
jb
mov
cmp
aas
push
push
adc
mov
sti
in
pop
mov
out
mov
ss
fldl
add
mov
idiv
fst
inc
sahf
pop
sub
daa
aam
add
testb
add
mov
cmp
fcomps
inc
insb
repnz
add
rol
ds
push
jle
push
bound
jecxz
imul
lcall
hlt
filds
push
test
jo
sbb
xor
clc
stc
sbb
push
jg
or
fisttpll
jae
in
lods
pop
cmp
aas
movsl
inc
adc
or
fimuls
ljmp
and
mov
out
or
mov
xchg
pop
insl
mov
sbb
hlt
mov
adc
pop
push
jbe
adc
sbb
and
add
daa
lods
mov
out
pop
out
jne
cmpsb
mov
jge
cmp
inc
sub
int3
hlt
push
roll
js
cmpsl
xchg
mov
or
push
sbb
lods
inc
and
lret
add
call
and
cli
lea
testb
add
popl
inc
sub
sbbl
sub
andl
pop
inc
push
mov
ja
cmp
mov
mov
sub
lds
mov
mov
mov
into
mulb
hlt
jmp
sbb
mov
xchg
and
xchg
push
gs
xor
inc
push
dec
xchg
cmc
adc
incl
xchg
fs
out
and
fbld
iret
lret
push
mov
insl
adc
cmp
into
lcall
fiadds
mov
jo
notb
gs
cmp
add
fwait
shrl
pop
add
addr16
mov
stc
loopne
xlat
push
loop
xchg
ss
ds
and
insb
adc
push
pop
out
jle
xor
lret
gs
xchg
faddl
xchg
fadds
aam
cmpsb
push
xor
xor
pushf
out
xlat
pop
xchg
jg
sbb
or
fcompl
add
add
sti
iret
and
repnz
mov
add
add
add
push
negb
inc
test
mov
adcb
cmp
mov
lea
jne
testb
jnp
pop
adc
loope
inc
push
and
inc
dec
mov
or
add
cmp
addr16
push
cltd
lret
xor
lock
sbb
inc
add
mov
lcall
cmpsl
mov
lods
mov
pop
in
sub
sbb
aad
gs
enter
or
xchg
int3
xorl
mov
xchg
iret
shlb
fwait
mov
call
pop
pop
adc
add
push
mov
sbb
and
insb
cltd
outsl
cmp
mov
je
nop
or
adc
sti
sub
push
pop
adc
inc
popa
repnz
push
cmp
fs
mov
ret
dec
inc
add
loopne
xchg
inc
lahf
sti
hlt
out
cmp
loop
cli
add
mov
add
testb
add
and
sbb
bts
cmp
pop
test
cwtl
pop
loop
adcl
dec
insb
ret
fsin
mov
into
lods
orb
andl
stc
mov
lcall
mov
lods
insl
aas
fistps
out
rolb
ret
in
repnz
arpl
jb
push
and
mov
cmc
or
push
cmp
into
clc
pop
notb
ret
push
icebp
jb
aam
mov
inc
in
dec
xchg
hlt
pop
mov
inc
mov
mov
lods
xchg
pop
jno
lods
sbb
and
pop
jg
xor
das
divb
lods
std
adc
push
push
fimull
jecxz
or
imul
popf
imul
dec
add
add
sub
fs
ljmp
add
mov
into
out
or
lods
mov
add
add
add
sub
addr16
and
mov
in
fcomps
sahf
pop
cmp
ss
leave
adc
fst
sbb
sbb
call
push
mov
push
in
pusha
aaa
sbb
mov
adc
outsl
rcll
mov
js
xor
scas
ret
pop
mov
sti
iret
ja
and
cmp
pop
adc
jge
jo
loop
or
in
xor
fwait
sub
rorl
push
cltd
cmp
out
ficomps
mov
movsl
cmpsb
shll
jmp
sbb
mov
popf
int
jno
dec
jbe
push
inc
xor
insb
pusha
adc
and
sbb
dec
mov
mov
lock
or
cmp
jge
cwtl
imul
mov
pop
mov
jl
outsl
mov
adc
add
and
out
ljmp
jp
cmp
insb
sahf
cs
mov
add
add
vpacksswb
lret
or
push
div
sbb
adc
leave
data16
lock
stc
sarl
outsb
xchg
pushf
sub
mov
add
fists
loop
mov
or
into
int
add
dec
in
push
lahf
js
repz
jae
jl
push
pop
in
lea
ljmp
xchg
and
pop
ret
test
mov
xchg
pushf
mov
lahf
xchg
and
sbb
adc
aam
cld
js
inc
test
in
xchg
loopne
roll
jns
shl
cmpsb
lahf
sub
test
xchg
das
add
fucomip
or
jne
adc
jne
cmp
push
push
xor
movl
in
cmc
and
sti
cli
push
mov
pop
mov
std
cmp
loope
and
stc
add
cli
sbb
fildl
push
add
imul
push
jnp
sbb
xchg
sub
mov
xlat
sub
testb
add
mov
pop
jae
sti
inc
and
inc
ss
fistpl
jns
xor
and
cmp
add
and
out
push
and
push
fdiv
cmp
push
mov
je
xor
stos
or
push
outsb
lea
mov
mov
stos
adc
xchg
fmul
inc
mov
jnp
scas
mov
popa
xchg
mov
push
scas
cmp
iret
pusha
in
testb
or
aas
jno
or
push
sbb
movsl
xchg
pop
or
push
lds
fwait
add
push
jmp
inc
icebp
sbb
or
and
movsl
pop
xor
adc
or
sub
stos
sub
fdivs
xchg
mov
cs
jnp
mov
movsl
dec
loopne
or
xor
xor
fistps
push
aas
or
mov
add
xchg
add
testb
add
mov
pushf
pop
inc
je
jb
mov
lret
pop
sbb
dec
pop
mov
ja
jnp
lds
jge
mov
data16
aas
icebp
fs
loopne
int
es
dec
jg
lret
inc
cltd
mov
sub
jb
jb
cmp
jmp
dec
sarb
and
stos
into
jo
jp
loopne
psadbw
divl
repnz
mov
shlb
and
movsb
inc
mov
push
lret
aam
ljmp
sti
cmp
or
pop
cmc
addr16
cmp
mov
xchg
pusha
xchg
int
mov
xchg
das
sub
test
out
xchg
xor
dec
sahf
sbb
sbb
pop
inc
hlt
and
mov
fwait
hlt
int
mov
mov
sub
inc
mov
add
push
outsb
fdivrp
sub
lcall
add
testb
add
sbbb
stc
cmp
xor
or
insb
mov
mov
gs
mov
sub
test
cmc
imul
push
ss
add
gs
jbe
arpl
push
mov
adc
out
and
stos
xchg
jecxz
jnp
imulb
fwait
repnz
outsl
ljmp
push
fxch
jae
jle
xlat
into
call
scas
inc
int
fisubrs
adc
and
adcl
ljmp
inc
and
dec
push
push
pop
pop
popa
stos
xor
aad
push
popa
inc
mov
pop
insb
leave
imul
dec
jmp
sbb
inc
sbb
jmp
lods
sbb
scas
fld
and
ficoml
sbb
xor
shrl
xor
xor
cmp
add
add
mov
in
dec
je
jne
xchg
add
testb
add
test
rolb
push
int
aaa
lods
sahf
lcall
xor
mov
jle
movsb
fs
lock
fcomps
xchg
cmp
jge
sub
call
jno
inc
mov
push
inc
scas
sti
rcll
nop
inc
dec
xor
xchg
sub
add
nop
fdivs
cmp
mov
ja
cli
inc
mov
push
mov
xlat
lret
mov
push
adc
or
fcom
xchg
mov
imul
lret
sub
mov
mov
enter
pusha
adc
inc
mov
and
repnz
jne
sbb
xor
sub
cmpsl
cld
das
cmp
mov
lock
cmc
mov
gs
in
test
call
ja
cmp
fiaddl
dec
cs
lret
dec
cmp
filds
add
int
fstp
iret
push
lock
jmp
mov
add
testb
add
or
pushf
cmpsl
mov
fimuls
pop
push
enter
jno
out
sbb
or
lods
or
rcrb
arpl
mov
inc
dec
in
insb
jbe
insb
addl
out
mov
adc
jmp
test
pop
into
lcall
stos
mov
or
mov
cmp
fwait
roll
aam
incl
aaa
jno
sbb
loop
cmp
push
loop
cmc
inc
shlb
adc
lahf
in
sub
insl
scas
rcrl
rcrb
clc
pop
adc
push
loop
mov
dec
stc
pop
xchg
imul
push
push
dec
push
add
rcpps
and
outsl
arpl
inc
jp
push
fdivrs
inc
sub
sbb
sbb
mov
jmp
mov
xchg
outsl
popa
sub
roll
add
adc
std
sub
pop
mov
xchg
add
testb
add
lods
repnz
and
pushf
pop
aam
stc
inc
mov
jmp
movsb
sbb
mov
mov
add
in
sub
or
in
sarl
or
psubsb
sbb
ret
leave
xchg
dec
pusha
cli
cwtl
mov
out
les
ss
xchg
aam
inc
pusha
cwtl
test
xchg
adc
xor
or
pop
sti
dec
cli
cli
xchg
cmpsb
lods
adc
xchg
ret
sbb
lods
pop
pop
outsb
adc
mov
xchg
mov
jnp
icebp
mov
cmpsb
loopne
nop
dec
test
je
int
das
icebp
mov
mov
mov
jge
loopne
jo
imul
in
fucomp
push
dec
dec
cs
ret
pop
mov
mov
cwtl
mov
jo
mov
pop
aas
leave
lret
daa
nop
push
pop
add
xchg
mov
xchg
and
fistpll
lods
les
jnp
mov
push
jle
stos
pop
xchg
add
testb
add
sub
dec
dec
mov
dec
dec
inc
les
sbb
fidivrs
dec
dec
pusha
sub
mov
jmp
adcl
fcompl
fisttpll
lea
cmpsb
ss
push
mov
and
out
clc
mov
or
jecxz
sbb
in
mov
lods
cmc
enter
inc
push
movsl
popa
sbb
movsl
xor
adc
or
xor
sbb
call
mov
mov
mov
lahf
jle
in
dec
pop
jle
sub
push
cmpsb
movsl
lea
das
mov
lahf
add
or
or
loop
dec
mov
mov
aad
mov
push
inc
sti
imul
pop
sbb
jns
fmulp
add
mov
sub
add
add
les
mov
or
xchg
add
testb
add
repz
int3
std
xor
notl
es
inc
inc
test
cmpsb
sub
or
icebp
dec
imul
mov
or
or
push
push
add
cmp
push
jmp
push
sbb
pop
loopne
sub
push
cltd
xchg
jge
int
jbe
ljmp
ret
jp
mov
lret
ss
int
cmp
add
adc
arpl
inc
mov
das
or
jl
push
jae
xor
test
mov
pop
cld
pop
div
push
sbb
das
push
cli
mov
mov
and
mov
add
jecxz
into
fcomps
mov
hlt
jg
xlat
jne
rclb
cwtl
movsb
jno
xlat
cmp
in
or
push
mov
sub
stos
add
popa
inc
loop
xchg
not
pop
pusha
movsl
outsl
jae
adc
cmp
test
xlat
xchg
fcoms
add
ljmp
loop
dec
pop
aaa
add
dec
cwtl
add
testb
add
mov
sub
lahf
out
cmp
lcall
shrb
jne
push
rep
jbe
push
xor
mov
in
inc
push
frstor
jo
xrelease
addl
xor
mov
mov
jp
pop
fimuls
push
addr16
push
adc
dec
bound
jae
test
jne
sbb
push
xchg
dec
leave
jp
lret
popa
popa
fnsave
mov
lret
mov
mov
loopne
push
sub
adcb
stc
inc
mov
out
jbe
mov
frstpm(287
sbb
je
inc
mov
fimuls
popf
int3
adc
or
cmp
sahf
shlb
push
cmp
inc
inc
add
xchg
mov
mov
movsl
lcall
rolb
ffreep
push
add
aas
add
lods
xchg
fistpll
add
aaa
shlb
cmc
div
rcl
inc
pop
insl
lea
add
add
add
mov
pop
sahf
ret
int3
sar
xchg
pop
mov
push
mov
inc
ljmp
mov
or
inc
xorb
push
addr16
leave
mov
pop
push
xor
jbe
je
jecxz
sahf
push
push
cmp
fbstp
push
lods
insl
or
ljmp
sbb
cmp
stos
ret
add
xor
fwait
jmp
aad
stc
jge
or
frstor
lcall
mov
ja
je
pop
lahf
fcoml
loop
xlat
fidivs
popf
cmp
sbb
stos
pusha
inc
int3
xchg
dec
xor
aam
push
lea
xchg
test
or
jmp
mov
cmp
mov
mov
inc
daa
sub
daa
add
mov
jecxz
scas
fsubp
mov
dec
or
fcoms
dec
out
mov
lock
test
add
add
push
sahf
rcr
pop
test
adc
add
testb
add
mov
push
fdivr
das
aaa
adc
frstor
cmc
lret
pop
push
cld
xor
insb
fiadds
cmp
xorl
push
mov
test
jecxz
aas
xchg
mov
outsb
in
push
xchg
pop
fistl
and
jns
test
xchg
add
cmp
std
pusha
or
lea
cmp
mov
imul
aas
jg
pop
mov
stc
adc
fsubl
pop
pop
mov
cmp
cmpsb
shlb
shrl
push
xor
jecxz
and
ja
pop
stc
addl
add
mov
lcall
pop
push
cmp
and
sarl
dec
pop
and
mov
sub
dec
xchg
fwait
icebp
mov
in
jmp
push
cmp
mov
inc
and
sub
jl
xor
mov
jno
filds
add
shll
cmpsb
jcxz
jne
push
inc
in
pop
sub
fwait
add
testb
add
mov
xchg
mov
sub
xorl
fstpt
hlt
hlt
push
cmp
scas
cmpsl
mov
push
jmp
push
inc
add
andl
movsb
fs
pop
cs
dec
cwtl
call
popf
pop
mov
out
negl
mov
jnp
mov
movsb
or
adcl
sbb
xchg
sbb
or
clc
test
xchg
mov
test
cmp
lods
xchg
dec
fldl
pop
lret
je
mull
mov
mov
insl
inc
jne
data16
and
fwait
shll
mov
mov
inc
neg
pushl
fwait
pop
jle
nop
sti
inc
outsl
cmpb
push
dec
in
es
lahf
cltd
mov
popa
shrb
inc
cmp
stc
into
pop
rcr
push
cmp
fmuls
out
icebp
pushf
sub
add
clc
jnp
jg
in
cli
cwtl
inc
mov
iret
fst
ljmp
add
sub
xchg
adc
std
xchg
dec
xchg
and
pop
push
add
inc
vmovd
aas
stos
add
xor
call
inc
xchg
cmpsl
xchg
repz
push
out
sar
sub
scas
imul
mov
and
mov
iret
dec
scas
lods
das
imul
scas
sbb
lds
pop
nop
mov
push
jecxz
repnz
lods
mov
pusha
movsb
xor
mov
push
add
xchg
push
fs
lcall
je
push
xorl
mov
add
xorb
xor
adc
ret
pusha
bound
jb
iret
jne
xchg
mov
pop
cli
xlat
push
lea
ficomps
in
mov
pop
andl
das
mov
cmpsb
mov
outsl
cld
xor
cmp
leave
mov
pop
ljmp
xor
pop
mov
add
ljmp
cld
inc
push
cltd
das
arpl
ja
push
popf
add
testb
add
mov
or
sbb
mov
xchg
jp
jp
inc
push
adc
daa
mov
pop
dec
adc
rclb
jnp
xor
xchg
fwait
out
pop
pop
inc
out
outsl
out
sbb
test
jle
testb
pop
ret
js
sahf
and
pushf
sub
sbb
fsts
pop
add
inc
mov
add
adc
adc
mov
sub
mov
idivb
nop
push
adc
sbb
pop
push
mov
lods
lret
sbbl
pop
push
xchg
mov
pop
in
insb
inc
jl
lcall
es
pop
add
test
fnstenv
stc
test
inc
mov
cmpsl
lods
xchg
xlat
inc
fldcw
xor
int
mov
mov
xor
int
aam
add
jl
sar
std
jle
loop
push
xchg
mov
sahf
add
testb
add
mov
imulb
pop
mov
or
jae
sub
ja
cmp
add
jns
push
mov
or
jbe
xchg
out
ret
lea
outsb
pusha
lret
incb
xor
sbb
pop
mov
stos
daa
and
mov
mov
xor
in
pop
sub
push
and
inc
sarb
dec
je
std
aad
scas
mov
jns
std
pop
clc
in
jo
jb
and
sti
mov
or
mov
sbb
stc
iret
xchg
aas
jmp
loop
cmp
sahf
lea
lcall
jbe
ja
ljmp
lcall
pushf
hlt
loope
jl
jnp
fcmovbe
cli
mov
ds
add
ja
shrb
in
pcmpgtd
adc
pop
jecxz
je
test
and
cmp
add
cmp
cmp
pop
sub
rcrl
lahf
add
testb
add
lods
push
in
jbe
in
sbb
dec
scas
test
pop
mov
cmp
pop
jl
imul
mov
jae
adc
out
and
lods
xchg
jns
xchg
ljmp
stos
shlb
add
jae
jno
mov
dec
jbe
adc
inc
and
sbb
and
pop
das
pop
pop
lcall
aas
into
dec
icebp
fidivrl
pushf
jae
jecxz
ds
cld
sub
jns,pt
jo
mov
popf
dec
stc
cmp
insb
sbb
xchg
jne
mov
mov
pop
mov
and
pusha
inc
orl
and
push
stos
jb
pop
inc
adc
fisubl
dec
insb
shrb
lea
cltd
jp
leave
popa
adc
xchg
je
pop
cmp
arpl
mov
mov
mov
iret
in
fyl2xp1
dec
fstps
add
outsl
sti
into
aad
aam
mov
add
testb
add
jmp
movsb
aaa
xchg
mov
xor
fnstsw
out
mov
xchg
dec
loope
in
and
jne
imul
pop
mov
loope
xor
arpl
xchg
rcll
cmpsl
insb
movsb
inc
ss
dec
xchg
jns
jecxz
ret
inc
xchg
mov
jns
or
and
mov
movsl
mov
mov
outsl
outsl
xchg
lea
xor
jecxz
aad
pop
shlb
mov
out
pop
loop
xchg
cld
fs
mov
mov
aad
sbb
xor
inc
adc
cwtl
inc
scas
shll
xchg
dec
xchg
and
or
jle
sbb
add
rclb
pop
ret
mov
dec
fldcw
xor
adc
dec
xorl
pop
add
push
and
xlat
aas
jle
ds
out
mov
add
out
cmp
daa
test
or
outsl
sbb
sbb
inc
push
dec
inc
test
sub
inc
loopne
add
mov
stos
mov
into
subl
cmp
adc
sbb
and
sbb
and
andl
fnstcw
fldl
loope
scas
mov
dec
jb
mov
pop
pop
fistl
enter
sahf
cmp
adc
jmp
popf
je
mov
push
and
ds
lock
shll
iret
popa
and
in
dec
pop
pop
cmpsl
mov
lock
rorb
int
pop
adc
gs
push
pop
pop
cli
rclb
int
cmp
xor
mov
xchg
ret
cltd
sub
call
and
adc
cli
and
pop
jp
jo
push
ret
scas
cs
mov
sub
xchg
pop
jo
fmuls
pop
dec
jne
add
mov
mov
jmp
ljmp
add
testb
add
and
fldt
test
pop
bound
shlb
jl
xchg
dec
rorb
fidivs
mov
shr
jb
sub
daa
sbb
push
jp
sti
scas
in
fcoms
hlt
dec
push
push
insl
jge
mov
or
dec
adcb
pop
or
cmovs
dec
jne
sub
lds
les
xor
fs
jge
lret
push
imul
lret
icebp
xchg
pop
pop
popf
push
inc
pushf
hlt
mov
in
sbb
sub
call
mov
mov
sbb
in
jl
ret
push
adc
ret
shl
ljmp
movsl
mov
mov
rol
jne
or
cmp
and
cmp
scas
sub
pop
dec
int
mov
sbb
out
xchg
mov
mov
adc
sbbl
mov
mov
add
testb
add
pop
pop
push
or
jns
sub
mov
call
addb
daa
add
push
flds
xor
inc
mov
mov
lock
cmp
out
xor
mov
pop
fs
mov
out
dec
push
std
ja
ficompl
jmp
mov
loopne
inc
popa
repz
jns
notl
adc
xchg
cmp
arpl
mov
cmpb
ja
jge
daa
nop
icebp
arpl
mov
xchg
daa
ds
aad
lods
je
and
outsb
inc
xchg
fdivr
cmpsl
mov
jb
inc
pop
std
jns
jge
mov
jge
push
adcl
dec
xchg
add
cmpsl
jae
in
call
jb
fists
push
xor
fdivl
andps
cmp
cli
sti
and
pop
outsb
pop
mov
mov
imul
and
or
xchg
in
mov
add
ret
daa
mov
xchg
fwait
cltd
xlat
notl
ljmp
sub
popa
pop
dec
cmp
pop
sbb
xor
adc
out
jns
cwtl
add
test
push
bsr
adc
mov
sub
push
lock
lock
popf
testb
in
jmp
in
pusha
fmul
adc
mov
dec
subl
int
inc
scas
pop
and
dec
and
mov
stos
ret
add
mov
and
ficoml
js
movsl
xchg
cli
int
es
and
je
repnz
or
add
xchg
pop
jb
mov
repnz
xor
cld
cmc
movsb
mov
test
hlt
jnp
sti
cltd
fstl
add
stos
psrad
inc
adc
mov
pop
mov
sar
add
mov
add
mov
dec
mov
xchg
adc
movsb
add
testb
add
inc
lahf
outsl
mov
xor
inc
mov
dec
mov
push
enter
mov
push
sub
jo
lcall
lods
sahf
mov
mov
std
subb
dec
mov
mov
test
andb
xor
jmp
lods
jecxz
xchg
lock
inc
orb
fdivs
xchg
es
cs
or
out
mov
ret
push
sbb
adc
cmp
or
xor
add
mov
pop
mov
roll
sub
pop
es
xchg
lods
and
into
iret
push
in
xor
mov
sub
lea
jle
add
fldt
and
jmp
xlat
xchg
popa
xchg
je
inc
and
aad
adc
pushf
xor
cltd
sub
out
das
mov
aam
repnz
out
mov
add
add
test
xor
pop
cltd
push
decb
dec
cmp
fcmove
jbe,pn
dec
cli
jne
loopne
outsl
scas
std
into
mov
je
jo
push
test
and
adc
scas
inc
dec
xchg
cmp
cld
test
cmp
push
pop
mov
fnstsw
ds
mov
in
jle
or
push
push
lret
xchg
add
xchg
pop
popf
les
in
jle
xlat
pop
clc
add
jg
jge
es
movsl
pop
mov
add
ja
pusha
fs
push
xchg
std
pop
jns
xor
add
mov
push
add
outsl
nop
sbb
loopne
and
dec
ljmp
aas
mov
aas
jle
add
fnstcw
lea
pop
mov
mov
jecxz
jbe
adc
xor
push
dec
sub
add
fidivrs
add
push
add
loop
test
mov
mov
add
testb
add
inc
jb
pop
loope
add
adc
fsubrl
mov
cmp
push
int3
jecxz
jo
fisttpl
inc
cwtl
in
aad
icebp
pop
inc
cli
pop
inc
pop
stos
add
insb
pop
cmpsb
into
test
rcrb
mov
cmp
jle
fstpt
into
les
jb
lret
push
push
push
jbe
test
pop
push
ljmp
pushf
sbb
dec
stos
fwait
inc
les
cmpsb
xchg
jge
inc
xchg
push
add
data16
mov
sub
pop
cltd
test
pop
dec
inc
hlt
std
lahf
cmc
sub
mov
lret
lret
xlat
push
sub
clc
pop
jno
cmc
mov
mov
add
push
in
sub
fnsave
imul
jo
aam
mov
add
xchg
add
mov
iret
test
push
add
or
lcall
xchg
add
cmpsl
add
testb
add
stos
fimuls
int3
test
xchg
into
jecxz
nop
dec
mov
aad
cmp
fsub
xchg
rorb
fisubrl
in
cmp
push
xor
mov
lahf
test
push
push
mov
dec
test
or
mov
mov
je
and
cmp
in
add
nop
or
popa
or
mov
jnp
push
lods
push
in
pop
in
push
iret
imul
shrb
xor
imulb
fs
inc
xchg
aad
in
jnp
dec
icebp
dec
ss
add
cld
stc
mov
js
inc
add
ret
ficoms
lcall
cmp
test
dec
push
call
adc
lahf
enter
mov
xlat
loopne
mov
push
sbb
pop
jbe
in
pop
stos
dec
outsl
xlat
adc
xchg
leave
dec
test
jno
pop
insl
lret
add
jecxz
xchg
adcb
adc
add
add
mov
mov
cmp
insl
cmp
sahf
test
add
add
add
cmc
std
js
stc
cmp
insl
aam
out
sbb
adc
test
adc
xor
xor
test
jp
aas
mov
mov
xchg
xchg
xor
int
cli
sbb
ja
int3
inc
jle
xchg
push
popf
cmp
or
lds
cmp
adc
rcl
scas
test
inc
push
mov
dec
cld
ficompl
jecxz
ljmp
stos
mov
mov
lds
stc
xor
cltd
imul
xchg
jle
mov
cli
mov
int
lods
mov
ret
int
aam
stos
inc
pop
daa
jae
push
xchg
ret
dec
es
lods
mov
add
inc
sub
inc
imul
into
mov
mov
jb
mov
xchg
shlb
sub
dec
cli
decl
outsb
fdivs
pop
movsl
fcomps
push
xor
push
jno
test
add
or
sbb
mov
xchg
test
add
fdivrl
jnp
pop
jg
push
aaa
xchg
jb
lret
lods
cmp
adc
mov
dec
dec
dec
push
lret
sarb
je
iret
ljmp
xor
sti
jmp
adc
push
loopne
dec
push
mov
mov
mov
mov
in
dec
jmp
scas
imul
rcrb
stos
mov
sub
push
negb
int3
lahf
dec
sbb
pop
ret
adc
scas
cmp
gs
mov
xchg
sbb
push
cmp
fmull
jge
xchg
push
inc
jg
shr
repz
aas
les
es
movsl
scas
cld
dec
sbb
das
lret
and
pushf
outsb
inc
and
aaa
ret
push
cmp
dec
sub
mov
sbb
jmp
pop
scas
sti
mov
mov
daa
jno
int
movsl
inc
mov
rorb
call
inc
leave
adc
pop
push
inc
cld
test
and
ja
add
inc
fdivl
stos
push
sbb
add
add
sub
mov
pop
lea
out
adc
movsb
mov
adc
std
pusha
lods
cmp
fnstsw
pop
mov
and
loop
into
xchg
mov
pop
lcall
daa
lock
in
push
lods
rcrb
add
addb
push
or
xchg
loopne
lret
fadd
push
lahf
and
add
bound
xorb
addb
pop
xorb
nop
mov
lcall
int
stos
push
popl
sbb
fisubl
mov
loope
inc
jp
rdmsr
xchg
sbb
adc
xchg
fwait
daa
and
xchg
and
xchg
aad
loope
mov
lcall
loop
mov
and
psubsb
outsb
dec
dec
or
ficoml
movsb
enter
lds
add
sbb
mov
pusha
fucomp
cs
subb
add
mov
out
add
sub
fwait
dec
mov
dec
push
cmpsl
adc
mov
loop
mov
inc
rcl
sbb
xor
fisttpl
add
adc
add
es
incb
in
imull
sub
and
push
and
js
fs
in
negl
call
movsb
jecxz
fsubrp
dec
pop
jle
jecxz
add
jecxz
sub
pop
loop
lods
decb
loopne
lsl
cmp
add
xchg
js
pop
imul
fstps
sbb
mov
int
scas
push
adc
cltd
inc
xor
mov
sahf
loopne
add
shrb
mov
xlat
test
loop
pop
inc
cmp
sub
hlt
add
or
fstl
cmp
push
mov
adc
add
add
stos
hlt
jmp
ljmp
push
add
testb
add
cmc
std
add
cli
adc
insl
stos
sbb
jmp
xor
mov
xlat
roll
pusha
test
jl
fs
hlt
js
enter
cs
popf
xor
enter
push
imul
movsb
push
cmp
imul
ja
sbb
aas
outsb
testl
in
movsl
push
jp
xlat
mov
cmp
xchg
adc
pop
jno
pop
sub
aaa
test
push
pop
mov
inc
test
in
loope
jmp
call
push
into
ja
ret
popf
sub
ds
add
mov
push
decb
sub
sub
mov
cmp
movb
cmp
inc
andb
cs
lock
bound
mov
cmp
lahf
arpl
pop
sub
stos
outsl
int
mov
adc
dec
sub
ss
add
add
out
xlat
out
jg
dec
cmp
push
push
lahf
cmp
add
add
add
out
adc
jle
movsb
popa
test
ret
data16
ds
xor
sub
pop
ror
fbld
sbb
push
or
fcoms
or
in
dec
stos
push
aam
dec
and
pop
leave
adc
and
fstpt
cltd
icebp
sbbl
imull
call
jno
cmpsb
loope
pusha
pop
jae
fildl
push
cmp
dec
xor
xchg
xor
or
daa
js
and
bound
xor
shll
lcall
js
inc
pop
movsl
int3
leave
mov
scas
fwait
jmp
inc
fwait
insb
mov
rcrl
das
dec
mov
inc
mov
jbe
push
movsl
lahf
xchg
and
out
divb
daa
jle
pop
add
addr16
insl
inc
std
jns
jl
ret
cmp
fisttpll
push
add
sbb
pop
fbstp
mov
notb
add
add
mov
fmull
test
jecxz
adc
adc
das
jne
xchg
imul
lahf
ljmp
stc
lods
scas
test
cltd
and
dec
imul
jp
jp
leave
and
adc
out
mov
lods
mov
push
xchg
jp
cld
adcb
sbb
push
cltd
xchg
addr16
cmpsl
sti
dec
and
jp
xchg
insl
pusha
das
inc
popa
jg
sarl
xlat
jo
enterw
cli
dec
jae
pushf
icebp
or
push
jo
xchg
lret
jl
inc
push
mov
scas
pop
push
andb
and
insl
es
daa
ljmp
xor
jne
dec
int
cs
adc
or
in
cltd
mov
sbb
fstl
out
xor
hlt
sub
rcll
sbbl
add
lcall
std
clc
jns
ljmp
add
testb
add
adc
pop
cmp
in
jg
mov
fs
int
in
movsb
push
or
data16
arpl
xchg
sub
jp
sbb
pusha
iret
jne
cmp
cltd
push
imul
enter
xor
push
and
add
pop
js
jae
or
sti
jbe
shll
cmp
mov
int
or
movsl
push
aad
xchg
xchg
push
fldt
adc
and
cmp
mov
dec
scas
fdivrl
sbbb
push
cmp
mov
sarl
in
dec
jle
das
int3
decl
sbb
xchg
push
aas
xor
fstpl
jae
test
mov
insl
adc
or
loope
mov
xor
dec
mov
loop
imul
mov
call
lret
jnp
sti
jmp
xchg
sub
shll
testb
add
jb
jg
mov
cmpsb
ds
insl
mov
sbb
cmp
dec
sahf
mov
sti
inc
cmp
aaa
xchg
xor
das
sub
and
das
rclb
or
xchg
dec
fs
lds
icebp
mov
imull
dec
aam
jle
shll
mov
push
pop
aaa
leave
mov
lds
repz
mov
lahf
loope
dec
les
and
or
and
sbb
mov
or
bound
or
aas
push
jmp
stc
jl
movb
into
pop
push
mov
out
sbbb
xor
mov
outsb
test
mov
dec
xchg
or
iret
ficoml
test
aad
cmpb
enter
hlt
scas
add
inc
pop
data16
iret
js
jne
or
xchg
addr16
jne
cmp
ficoms
pop
cmp
mov
jbe
pop
add
mov
jecxz
lock
jae
pop
inc
mov
add
add
add
xchg
push
xchg
dec
sbb
push
pushf
fdivrl
push
cmp
iret
push
rcll
cmpsb
push
std
push
mov
ss
fnstcw
jp
lret
or
jo
add
out
cli
xor
insl
int3
or
jbe
inc
rcrb
jg
aad
dec
mov
mov
sbb
jbe
int
call
out
xchg
sbbl
xor
rorl
inc
lret
repnz
in
dec
mov
and
jo
and
js
push
xchg
xor
add
insb
shl
das
cmp
mov
fpatan
and
fimuls
shlb
fwait
xlat
sti
mov
sub
cmp
jmp
lds
loope
add
fdivrp
adc
push
int
repnz
lods
push
xchg
xor
mov
dec
xchg
and
mov
and
daa
push
sub
add
cld
mov
test
cmp
add
mov
pop
fwait
push
popa
hlt
jbe
inc
lds
mov
mov
pop
popa
bound
cmpsb
mov
lret
arpl
bound
push
xor
adc
mov
cmpsl
sti
mov
pop
dec
test
or
or
dec
jecxz
adc
sub
lods
mov
pop
push
cs
or
fbld
les
and
or
jbe
pop
mov
mov
cmp
xchg
fbstp
mov
jmp
sub
inc
sbb
sbb
jae
movsb
xor
fldenv
das
mov
xchg
imul
pop
mov
roll
out
cltd
push
insl
aas
adc
push
push
push
xchg
xchg
data16
cwtl
in
in
mov
ret
push
xchg
stc
xchg
adc
lds
clc
daa
outsl
sub
lret
jae
xchg
cli
arpl
lds
es
add
out
cmc
mov
push
pop
and
testb
add
in
out
mov
pop
mov
movb
pop
fistps
int3
push
fdivrs
fmull
test
jg
sub
mov
adc
addr16
xor
outsl
movsb
pop
inc
xchg
push
xchg
insb
cmp
dec
sub
dec
mov
nop
push
js
jae
mov
dec
push
outsb
stc
xchg
lds
addr16
mov
xchg
push
inc
mov
in
mov
lds
movsb
fisubs
jmp
sbb
bound
dec
dec
push
pop
in
stc
xchg
xor
pop
pop
push
mov
jl
stos
and
adc
mov
adc
cli
xor
lds
add
jecxz
sub
cmp
ss
loopne
fistps
out
mov
movsl
add
lds
add
out
std
dec
std
pop
mov
arpl
add
add
add
inc
inc
adc
and
pop
mov
std
mov
mov
push
aad
adc
sub
xchg
roll
les
mov
idiv
ret
imul
mov
cmp
lock
scas
dec
add
or
push
cmpsl
lcall
jmp
pop
xor
scas
xor
mov
dec
lcall
mov
stos
mov
mov
aam
out
mov
out
adc
dec
or
loope
jl
movsl
and
inc
clc
mov
les
mov
cmpsl
mov
cmp
push
push
cmp
stc
or
in
mov
cmc
xchg
dec
insl
or
mov
cmpsl
push
dec
imul
ret
es
or
lret
xchg
test
sub
es
das
mov
loop
add
fidivs
loop
ljmp
mov
mov
mov
add
add
add
fmull
mov
xor
or
nop
aam
iret
cld
in
mov
jecxz
dec
clc
and
addr16
fwait
bound
cwtl
jp
push
lahf
and
sub
loop
inc
sti
mov
dec
and
out
xchg
pop
dec
pusha
inc
jge,pn
and
xlat
push
lods
and
sbb
leave
popf
shll
daa
sbb
sbb
push
out
adc
in
jl
repz
sub
cli
dec
add
pop
hlt
add
inc
js
icebp
sub
pushf
xchg
xlat
cmpl
mov
add
int3
loop
out
push
ja
repnz
movsl
ja
fs
mov
out
push
mov
jae
mov
mov
mov
jae
leave
pop
mull
add
push
pop
add
rol
rol
lcall
mul
sbb
pop
lcall
jo
add
xchg
jg
jmp
std
jge
in
xchg
loopne
popa
adc
add
inc
jne
pop
xchg
jne
sahf
in
and
cmp
je
lcall
fiaddl
sbb
rcl
mov
shl
push
add
xchg
stc
popa
pop
inc
adc
cmp
lock
xchg
dec
xchg
adc
and
test
jae
xor
push
loope
xchg
out
in
inc
fisubrs
cmp
add
cli
roll
mov
mov
js
jge
shl
imul
lea
lock
je
stos
pusha
add
mov
aaa
push
and
mov
cld
xchg
dec
shlb
xor
fnsave
lds
cmp
mov
cli
test
repz
icebp
inc
cmp
mov
orl
pop
out
lea
pusha
cltd
jmp
jo
cli
sub
dec
hlt
jle
into
je
jmp
add
inc
imul
add
xor
std
cmp
cmc
popa
or
add
cltd
jbe,pn
mov
xchg
mov
js
sub
jg
xchg
xor
loopne
pop
or
icebp
adc
jb
jg
jo
aas
dec
loope
loope
jmp
sub
pop
pop
shl
or
out
jp
cmp
orb
je
je
and
lret
movsl
add
sub
repnz
sahf
or
pop
xchg
mov
leave
pop
call
sbb
xchg
movl
push
jae
jnp
sub
mov
rclb
adc
pop
mov
inc
sub
cltd
jecxz
jae
pop
loope
fdivrs
xor
test
dec
and
repz
testb
shll
lods
in
add
aam
ret
lock
jle
call
xchg
test
shlb
adc
mov
and
loope
ss
fnstsw
in
mov
xchg
sahf
stc
cmpsb
mov
mov
mov
xlat
stc
loope
pop
add
push
pop
xor
cmp
ficoml
sbb
mov
add
add
add
fdivrs
xchg
add
sti
cli
xlat
add
dec
sahf
dec
cmc
sub
les
stos
push
inc
std
jae
xor
xor
xchg
pop
leave
jns
out
sub
into
or
incb
lahf
push
push
add
push
icebp
inc
faddl
lods
aam
cs
mov
jmp
xchg
lahf
dec
or
sbb
nop
sub
jp
cli
inc
lock
xlat
push
nop
mov
add
xchg
test
mov
fmuls
mov
test
shrb
scas
xor
sbb
lods
lods
mov
int
sub
cli
xor
cmp
stos
inc
std
mov
pop
cld
inc
aaa
cli
out
pop
nop
xchg
mov
pop
jmp
jne
jns
loope
inc
fimuls
cli
mov
jecxz
stos
orl
sub
in
out
fwait
cs
scas
add
es
les
mov
push
push
adc
dec
in
hlt
mov
add
cmp
insl
jge
sub
mov
jp
mov
mov
push
sub
sub
cmp
sub
pop
lock
inc
sub
dec
mov
fcoms
ja
negl
sbb
ds
cmp
shrl
mov
loop
jl
incb
cmp
sub
cmp
xor
xlat
push
push
xor
jae
das
ja
fisubrl
repz
push
movsl
jecxz
xchg
lock
lret
jecxz
popf
movb
and
pop
cwtl
jno
decl
or
jns
cmp
lock
inc
lahf
jae
pop
cmpsb
mov
out
or
pusha
xor
sti
loope
cs
pop
cmpsl
in
lret
clc
call
fcoms
cmp
lods
pop
or
xor
lds
sahf
xchg
movsl
mov
xchg
xchg
les
loopne
std
push
lods
xchg
cmp
or
add
dec
or
pop
stc
out
push
insb
xchg
cld
sub
and
add
add
add
mov
mov
pop
jnp
xchg
mov
test
into
pop
adc
mov
mov
add
fwait
js
jo
push
cmp
jb
sbb
sub
into
mov
popa
adc
pop
or
sti
lcall
pop
movsl
xor
pushf
fisubl
mov
adc
dec
inc
cmpsb
ret
jle
push
sub
iret
fnstsw
and
mov
test
dec
sahf
mov
out
jl
outsl
pop
push
aad
dec
jne
je
cmpb
add
mov
and
std
and
xchg
pop
push
jl
pop
or
icebp
repz
pusha
aas
loop
sbb
dec
sub
scas
xlat
push
ret
lds
sti
and
lahf
clc
in
cli
gs
sub
mov
adc
stos
dec
add
lds
cli
lcall
ret
push
insb
loopne
add
testb
add
test
daa
jp
adc
push
push
ret
cmp
in
fucom
mov
and
test
cmp
aaa
cmpsb
sbb
stos
fsubrl
jmp
jne
push
ss
int
fdivs
in
mov
out
push
out
addl
push
adc
aam
inc
jo
xchg
in
fistl
pop
jg
mov
sub
pop
adc
push
push
idiv
and
pop
add
xorl
cmp
stos
add
add
adc
repz
sbb
mov
mov
jnp
mov
or
and
push
push
mov
mov
pop
in
mov
or
mov
pop
repz
jbe
fldl2t
or
fxch
mov
fstl
enter
pop
cmp
jge
movsl
test
sub
sbb
fs
outsb
ret
mov
je
xor
add
xorl
insb
scas
mov
or
mov
add
ret
jp
fstps
xchg
lcall
movsl
cmp
repz
pop
les
scas
adc
inc
xor
add
cli
xchg
jns
xchg
rorb
sub
add
cmp
inc
lods
xor
insb
mov
stc
xlat
fs
xor
jnp
mov
call
mov
nop
sbb
xchg
pop
sub
ror
lds
adc
out
and
test
pop
stc
leave
xor
and
or
sub
arpl
or
lahf
mov
cmp
lret
repnz
roll
dec
push
lret
cmp
ss
xor
and
pop
je
enter
shrl
cli
dec
gs
fistl
mov
adc
dec
and
popf
jle
push
jo
and
fsubr
cmp
dec
in
sti
shrb
xchg
xor
dec
pop
pop
sbbl
fstpl
dec
ljmp
add
add
and
xor
push
jge
xor
dec
jae
dec
les
movsb
add
stc
fisubs
xchg
jns
and
andb
mov
sub
inc
fucomip
sahf
xor
repnz
in
movsb
adc
sub
fmull
div
sbb
movsb
mov
lds
mov
shlb
add
repz
cli
push
movsb
adc
jb
sub
push
clc
daa
jge
cli
mov
leave
stos
add
jnp
je
imul
jmp
sarb
ljmp
xchg
xchg
fidivl
popf
ds
pop
das
add
add
ss
cmp
mov
fwait
cmp
mov
loopne
xchg
inc
mov
sahf
lcall
addr16
scas
add
inc
push
ret
mov
divb
rolb
inc
mov
cwtl
popf
pushf
mov
add
in
mov
jecxz
out
sub
cli
in
mov
add
sbb
sbb
and
push
arpl
dec
push
scas
and
fistps
adcb
mov
dec
fsubrs
inc
and
fistl
cmpsb
add
scas
add
out
mov
adc
shrl
and
test
pop
les
cmp
in
frndint
and
dec
and
fs
push
arpl
xor
in
int
test
cmp
sbb
dec
std
std
hlt
xchg
imul
pop
ret
sbb
pusha
xchg
mov
mov
xchg
xor
fiadds
cmp
aad
push
jle
pop
daa
mov
fs
push
mov
nop
adc
xor
add
inc
insl
into
adc
inc
mov
loope
cmova
or
jbe
lock
sub
repnz
add
std
test
jg
jbe
movsb
add
testb
add
orb
lods
fucom
mov
xchg
jnp
loop
enter
or
cld
rclb
ds
lods
mov
sub
lods
mov
xchg
or
aad
rcl
push
fstl
je
fwait
loopne
mov
fstps
aam
pop
sbb
into
sub
adc
bound
jbe
xlat
jns
negl
jo
ja
fmuls
ffreep
imul
mov
in
orb
adc
lea
mov
adc
iret
jecxz
adc
mov
mov
inc
or
pop
int
mov
and
arpl
jns
cmpsl
fprem
dec
test
jae
jl
adc
sub
lods
dec
push
cld
push
adcb
add
aaa
mov
and
push
mov
and
dec
mov
loope
cltd
fsubs
mov
test
sbbl
jns
sub
add
add
adc
in
lcall
xor
and
lcall
add
adc
lahf
or
movsl
pop
and
pop
leave
cmp
scas
adc
push
mov
mov
pop
push
or
jbe
add
sbb
loope
enter
clc
mov
xor
call
xchg
add
push
clc
js
or
mov
adc
fwait
movb
push
adc
sub
xchg
outsb
jecxz
in
pop
ljmp
or
fsubr
repz
jmp
cltd
jb
int
sbb
shlb
jl
je
cmp
adc
fidivrs
mov
in
sub
jg
mov
sub
cmp
pusha
sub
jl
pop
rcrb
movsl
je
mov
arpl
sub
xchg
in
pop
les
test
imul
pop
jle
mov
and
jno
mov
add
sub
jg,pt
stos
dec
push
jo
inc
xchg
rolb
testb
add
aaa
mov
mov
inc
hlt
mov
notb
mov
jno
xor
out
mov
xor
out
push
popl
jae
inc
repz
push
push
lcall
in
mov
loopne
mov
xchg
pop
mov
sbb
mov
sub
push
test
pop
jle
movsl
fldcw
decb
in
mov
cmp
jecxz
jecxz
inc
adc
sbb
sub
andb
pop
out
ficoml
ss
cmp
pop
add
push
fsub
adcl
mov
and
das
and
pop
mov
pop
jle
mov
movsb
adc
lret
jl
pop
dec
scas
mulb
loopne
dec
icebp
jne
scas
movsb
icebp
nop
ret
daa
mov
adc
pop
sub
lea
and
int3
push
add
insl
sbb
outsl
mov
jg
repz
roll
testb
add
and
ret
cmp
jno
ret
mov
add
dec
pop
pop
pusha
push
mov
inc
mov
arpl
sub
cli
mull
push
jge
inc
cld
adc
ret
imul
add
aad
in
pop
pop
loope
cmp
nop
dec
addr16
cltd
inc
loopne
xchg
push
inc
sbb
popa
inc
test
sub
repnz
int3
repnz
je
dec
lret
fisubrl
pop
and
xor
mov
in
sub
aaa
loop
sahf
andb
popl
aad
sub
mov
push
mov
sti
push
jp
mov
push
cltd
imul
fisttpll
adc
fidivrl
fsub
fadd
das
aaa
mov
cld
rcll
cli
pop
push
loop
aaa
pop
sub
and
jmp
mov
cwtl
imul
aas
stos
pop
addl
add
inc
fbld
mov
cltd
push
lret
nop
ret
testb
add
je
popf
and
in
not
xor
and
popa
leave
lret
push
sub
scas
nop
push
mov
dec
sbb
pop
clc
lock
pop
mov
jnp
je
and
mov
loope
sahf
arpl
int
xchg
xchg
ja
in
test
jp
cltd
lret
andb
pop
cli
mov
leave
rcrb
cmpsb
push
adc
sub
cmp
in
jmp
addr16
rorb
mov
jmp
sar
cmp
dec
test
iret
hlt
call
mov
aas
lahf
test
jo
dec
cmp
addr16
pop
call
push
cltd
lods
xchg
jecxz
pop
lds
or
in
push
jb
push
shlb
adc
push
outsl
jno
jbe
add
hlt
sub
test
mov
ljmp
hlt
subl
mov
out
mov
jp
add
push
push
call
cmp
ja
ret
add
testb
add
imul
pushf
sbb
dec
in
rol
jne
jae
jbe
insl
jle
add
jns
aaa
push
shll
push
sbb
in
pusha
xchg
idiv
sub
mov
clc
mov
in
sar
leave
xchg
das
movsb
mov
sub
adc
or
xor
movsl
aaa
std
jns
xor
leave
inc
add
sub
movsb
sahf
xor
and
inc
adc
ficoml
jl
mov
ja
cmp
es
pop
ds
xor
pop
sub
loopne
or
xor
stos
mov
lods
addr16
xchg
je
jmp
cmpb
mov
dec
mov
xor
xchg
push
stos
sbb
sbb
into
fs
lods
push
int3
jp
xchg
je
mov
icebp
jb
jns
enter
pop
gs
sub
add
into
std
sti
leave
sti
iret
ljmp
stos
enter
add
testb
add
xchg
decb
inc
enter
lea
in
mov
xlat
cmp
add
pushf
cmp
xor
add
mov
pop
rorl
push
mov
shr
test
cwtl
into
sahf
mov
cmp
add
adc
sbb
xlat
icebp
icebp
mov
cmc
mov
js
stc
or
adc
sub
pusha
nop
add
fs
aad
push
rclb
lret
fisttpll
sub
mov
enter
movsl
iret
mov
jb
test
fucom
and
dec
push
dec
sbb
icebp
sbb
mov
and
scas
inc
aas
test
je
mov
dec
fmuls
sub
ds
jge
inc
xor
jl
push
cld
lock
mov
add
mov
lods
dec
in
sbb
subb
mov
lcall
mov
and
add
mov
mov
es
pop
in
movsb
jb
add
testb
add
push
fsts
loop
imul
adc
mov
mov
xchg
add
loopne
ss
xchg
or
add
mov
rclb
mov
add
mov
mov
loop
inc
fbstp
mov
mov
mov
cmpsb
int
mov
push
cmpsb
fsubl
dec
jl
fnstcw
scas
mov
dec
nop
addr16
mov
fidivrs
andb
stos
cwtl
push
sub
xchg
xchg
xor
add
add
sarl
push
shr
xchg
and
add
lock
push
cmp
lret
je
cmc
es
or
pushf
sbb
add
ljmp
push
imul
or
xchg
insl
and
or
xorl
inc
test
data16
xchg
or
out
pop
decb
add
jg
mov
sub
mov
jl
push
add
add
jno
ja
into
jbe
insl
push
adc
fistpll
adc
loop
enter
in
test
mov
adc
dec
add
jge
lret
xor
cltd
jmp
sti
xchg
jl
and
push
jp
out
sahf
or
mov
or
sbb
mov
mov
loopne
push
and
or
push
add
into
add
jg
mov
jns
pusha
out
es
inc
xchg
lods
call
cld
sbb
in
and
iret
js
pop
xchg
lret
pop
dec
push
jecxz
xchg
imul
cmp
lcall
sbb
xor
inc
or
cltd
lret
cmp
sar
add
fdivrl
test
fsubrp
aam
xchg
les
aam
iret
ret
adc
jb
jl
mov
dec
sbb
add
xor
push
cld
pushl
out
adc
mov
movl
add
mov
jns
jp
sub
add
pop
lods
inc
mov
mov
mov
rorl
dec
shl
sub
mov
sbb
and
jb
out
fcoms
aas
sti
mov
inc
xchg
lcall
test
mov
loopne
cltd
add
sbb
add
lods
into
push
mov
mov
cmpsb
call
fstpt
mov
push
repz
pop
xlat
ficoml
mov
lods
out
pop
dec
stos
movsb
pop
push
sub
test
mov
lret
test
gs
mov
xchg
testb
xor
and
xor
push
test
stc
ljmp
loope
rclb
sub
jae
jo
mov
insb
pop
stos
jmp
loopne
lock
inc
ss
shrb
or
add
dec
mov
fnstcw
jle
add
xlat
pushf
shrb
jb
ret
xchg
push
enter
add
add
test
adcb
dec
xlat
gs
fwait
in
xchg
pushf
aad
loope
les
lret
fucomp
sbb
dec
xchg
stc
pop
test
and
aas
cmpsl
stc
dec
push
sbb
inc
sbb
movl
repnz
xor
jmp
out
adc
dec
int
cmp
loopne
mov
lods
mov
sbbb
xchg
loope
ds
jnp
ja
idivb
repz
data16
shlb
imul
dec
jecxz
push
arpl
mov
and
movsl
jmp
stos
dec
pop
out
pop
pop
dec
cmc
push
icebp
cmpsb
xor
dec
fnclex
dec
lods
and
lcall
inc
push
in
popa
js
in
xchg
cwtl
cmp
outsb
lock
add
aad
icebp
sub
pop
xor
cmp
mov
outsl
adc
add
add
test
mov
xchg
push
outsl
jmp
leave
add
testb
add
fdivrl
into
or
push
movsb
movsb
adc
test
add
push
cmp
rcrl
add
hlt
and
mov
lret
add
xchg
mov
test
push
pop
sub
pop
sub
pop
popf
adc
push
xor
push
mov
and
and
mov
test
mov
movsb
pushf
xor
aad
adc
lret
or
xchg
mov
cmp
sahf
or
cmp
cmp
cmp
and
adc
pushf
addl
movsl
mov
push
imul
mov
pop
pop
lods
icebp
mov
bound
test
repz
push
sbb
add
xchg
data16
mov
lea
fldcw
aad
push
pop
cli
mov
fists
stos
jl
lods
cs
test
sbb
sbb
add
jg
jne
jne
jg
out
and
ficoml
inc
lret
testb
add
lds
push
out
jg
leave
jns
and
pop
fstl
fildll
out
loope
subb
or
cltd
cs
xor
ljmp
je
sbb
ds
pushf
xchg
jmp
dec
rolb
bound
lret
ficoms
arpl
and
mov
mov
dec
inc
aad
das
movsb
cmpsl
xchg
pop
mov
shrl
daa
in
sbb
sahf
pop
xchg
add
jmp
adcb
jmp
subl
jg
je
aam
scas
test
add
dec
nop
mov
lret
insl
notl
pusha
cmp
leave
sbb
mov
push
ss
jp
dec
test
push
mov
jbe
add
mov
inc
mov
sahf
sub
fstpt
cmp
jns
add
dec
pop
mov
cmpsb
fstpl
mov
mov
testb
add
popf
enter
shl
jmp
jmp
inc
inc
xchg
aad
push
int3
mov
pushf
mov
fstpl
rcr
mov
inc
push
es
dec
sbb
sub
sbb
sub
xchg
bnd
xchg
mov
dec
fsubrs
in
or
fwait
push
and
inc
nop
xor
imul
inc
sub
adc
pop
xchg
insl
sahf
js
jb
mov
sub
cld
ss
or
sub
scas
push
pause
fldl
push
shlb
clc
insl
add
dec
data16
jo
cmp
imul
mov
push
ret
das
jbe
dec
repz
xchg
push
aam
adc
clc
rorl
clc
in
cwtl
xorb
iret
and
sti
lret
stos
incb
jmp
sahf
shlb
fsubs
xchg
in
jo
jbe
popa
mov
add
and
outsb
jle
lods
not
mov
add
int3
add
testb
add
sub
test
sbb
mov
lret
fldcw
jecxz
mov
ficoms
push
xchg
fists
or
mov
mov
out
out
rcrb
xor
push
mov
jecxz
sbb
jge
or
and
push
mov
negl
sti
xchg
jle
iret
pop
in
pop
xchg
outsb
jmp
push
pushl
adc
jno
xor
shl
inc
push
mov
rolb
inc
ja
push
hlt
in
inc
inc
js
inc
divb
pop
mov
mov
cld
xchg
test
movsb
adc
or
imul
dec
adc
xor
dec
loopne
xchg
inc
lret
dec
aaa
movsb
fisttps
add
mov
jo
cli
or
or
in
xchg
push
test
jg
bswap
push
in
pop
mov
push
mov
xchg
shr
jg
adc
rolb
add
mov
xor
and
add
testb
add
in
pop
daa
mov
add
xchg
popa
test
jge
inc
mov
lcall
cmp
xchg
scas
iret
ds
fdiv
sti
mov
outsb
cli
ds
push
lcall
lods
in
mov
cmc
lods
es
das
mov
es
add
es
push
sub
inc
push
xorl
mov
push
loope
dec
pop
or
stos
pop
push
out
push
push
inc
mov
pop
scas
imul
pop
ret
mov
or
dec
call
push
push
and
mov
cmpsl
stos
das
stos
in
jle
cld
cs
cltd
jmp
sub
xchg
pop
ja
test
es
pusha
aaa
inc
js
scas
xchg
and
jmp
ud1
sbb
popf
sahf
push
es
xlat
mov
add
test
sbb
xlat
ss
inc
movsb
sub
stc
sbb
add
testb
add
pop
lret
js
cmovb
mov
xor
mov
push
inc
lock
sarl
inc
jns
and
std
mov
cmpsl
jne
pop
mov
rclb
mov
dec
xorl
push
repz
sub
pop
sub
movsl
inc
movsl
insb
inc
pop
aad
xchg
jg
mov
nop
push
stc
dec
jo
mov
mov
test
insl
pusha
daa
pop
cwtl
mov
insl
inc
push
xchg
cmpsb
loop
cli
fwait
pop
pop
popf
data16
lds
into
mov
lret
or
test
and
mov
testl
push
imul
push
cs
and
mov
pop
pop
or
mov
jle,pn
xchg
add
cld
xchg
xor
xor
das
xor
icebp
mov
dec
mov
xor
roll
dec
and
sub
sub
in
xor
push
push
ds
sub
cmp
jg
cmp
cmp
testb
add
pop
lods
aaa
or
or
xchg
jecxz
dec
sub
aas
cmpsl
mov
rorl
sahf
or
in
movsb
dec
pop
pop
jne
push
loop
loop
cmp
or
cmp
mov
xchg
mov
mov
ljmp
insb
insl
stos
bound
ja
jp,pt
jg
mov
fidivrs
lods
push
scas
xchg
cwtl
or
inc
sub
xchg
push
repnz
fisubrs
in
lds
xorb
xchg
push
mov
jg
mov
orl
sub
push
lock
mov
mov
dec
pop
mov
mov
jno
mov
mov
jb
mov
jmp
out
jb
loopne
xchg
call
and
sub
mov
mov
adc
das
pop
mov
or
cmp
push
push
adc
xchg
add
jmp
ds
repz
aam
insb
js
add
add
testb
add
mov
mov
das
jl
xchg
mov
fwait
aaa
cmp
jns
push
mov
add
fwait
pop
sbb
inc
jo
sahf
imul
addr16
xchg
std
lret
or
mov
imul
outsl
std
pop
sarl
xchg
or
sbb
mov
es
loopne
flds
out
nop
sub
aas
or
add
xor
and
push
mov
inc
add
and
sub
or
cmpsb
arpl
jmp
ds
jp
jae
insl
mov
rcl
push
cmp
mov
cs
in
out
out
mov
push
nop
or
sub
xor
xchg
test
cmp
dec
movq
popa
sub
mov
lea
add
mov
jne
call
rolb
add
add
add
ja
das
xchg
mov
pop
cmpxchg
cmp
in
push
insb
scas
out
pop
xor
xchg
lea
ljmp
cltd
jnp
dec
test
std
arpl
sbb
or
outsl
or
pop
pusha
fmull
and
or
add
loope
xchg
dec
nop
xchg
pop
sahf
pop
int
stos
cltd
pop
imul
xor
in
jns
xchg
jnp
movsb
jnp
xchg
adc
mov
mov
xchg
xchg
xchg
jecxz
imul
leave
pop
and
scas
or
fldenv
cwtl
dec
pop
push
dec
push
enter
mov
jecxz
repz
inc
xor
lea
repnz
dec
movsl
push
push
cmp
mov
jp
inc
aam
mov
xlat
sbb
jbe
je
lods
dec
aas
call
loopne
jl
add
enter
in
out
mov
dec
cmpl
roll
add
add
add
hlt
cmp
lods
push
inc
bound
shlb
push
stos
scas
arpl
call
xchg
lahf
and
inc
lret
ret
cmp
adc
fidivrl
loopne
jno
xor
in
fs
scas
sub
fsubl
jno
sbb
fwait
inc
addl
cmp
cmc
cmp
cmpsb
aad
xchg
pop
lahf
mov
lock
adc
mov
mov
ljmp
das
in
dec
xlat
xchg
pushl
push
mov
and
inc
sbb
mov
cmp
cmpsb
xor
sbb
das
enter
out
repz
adc
add
and
dec
mov
and
adc
fisttps
sbb
xchg
push
and
cli
inc
dec
loopne
mov
xor
mov
out
mov
fs
stos
popa
add
jne
imul
cmc
call
mov
out
add
testb
add
jae
adc
mov
adc
adc
gs
jp
dec
mov
sarb
loope
scas
imul
xor
add
or
pop
push
jb
cmpsl
jnp
ds
push
jg
loop
cli
enter
bound
mov
in
icebp
out
and
fisttps
pop
dec
push
or
pop
push
and
push
dec
icebp
sti
jp
ds
inc
inc
xor
mov
inc
lret
push
add
test
into
loop
mov
jns
js
rol
and
leave
push
subl
and
mov
dec
jmp
ds
mov
xchg
imul
movsl
popf
add
inc
es
in
lcall
lret
add
pop
daa
and
xor
mov
sub
cmp
movsl
mov
iret
xchg
xor
es
add
add
add
mov
ja
int3
mov
jmp
adc
mov
mov
fnsave
jmp
pop
add
push
loope
xor
mov
test
dec
stos
or
cmp
mov
jbe
xor
cli
xor
jecxz
sahf
out
push
mov
cmp
pop
mov
repz
xchg
xor
push
pusha
add
scas
insl
xchg
mov
cmpl
jp
add
mov
in
jl
sub
push
or
dec
dec
inc
mov
push
adc
ljmp
je
pop
aaa
mov
add
inc
cli
mov
xchg
or
cmp
ret
loop
inc
cli
mov
mov
xor
lock
scas
and
xor
es
stos
das
inc
sbb
shrd
sub
add
out
into
gs
fsts
cmpsb
test
rcl
add
testb
add
test
std
aam
add
js
in
lahf
hlt
xchg
fdivl
rorl
mov
lds
loopne
imul
flds
int3
push
shl
lcall
iret
inc
sti
jns
push
scas
ljmp
xlat
je
jecxz
notb
aas
ss
int
pushl
lret
pop
addr16
ljmp
push
cs
shl
adc
mov
into
cmp
cwtl
jnp
fxch
inc
push
sub
dec
or
xchg
lock
jecxz
pop
xchg
push
pop
sub
or
mov
incb
xchg
mov
mov
push
mov
out
mov
lret
imul
jg
xor
xchg
scas
loopne
leave
cltd
push
sbb
lret
cmp
data16
dec
pushl
leave
scas
arpl
add
xchg
and
je
out
mov
mov
dec
movsl
enter
testb
add
add
enter
out
movsl
fwait
mov
repz
addl
mov
mov
mov
ja
cli
push
test
in
lcall
dec
adc
cmpsb
jp
inc
aaa
mov
test
jb
adc
jae
ss
dec
icebp
push
and
icebp
cmp
incl
repnz
out
jg
dec
jg
imul
adc
sub
push
add
xchg
arpl
enter
xor
xor
inc
cmpsl
addr16
es
sbb
addl
dec
pusha
fstpt
mov
leave
adc
jl
xchg
sahf
shr
add
jecxz
insl
jae,pt
inc
pop
inc
inc
outsb
movsl
pop
mov
dec
and
mov
enter
test
in
xor
stos
in
xchg
js
pop
fldenv
pop
add
dec
inc
dec
daa
dec
das
outsb
imul
enter
cld
test
add
add
xchg
cmp
mov
jns
pop
ffreep
test
js
xor
fimull
bound
lock
jl
push
or
scas
mov
dec
sbb
sbb
pop
jns
lret
lods
es
outsb
mov
lea
into
xchg
mov
pop
imull
test
mov
lahf
jge
test
lahf
push
xchg
scas
rcll
and
push
add
filds
xchg
out
rcrl
and
inc
xchg
add
mov
mov
mov
outsb
pop
enter
mov
shrb
and
add
lea
ret
mov
jne
mov
mov
jae
mov
dec
pop
jae
lret
mov
in
in
xchg
sahf
jb
outsl
scas
cmc
arpl
cmp
pop
int3
or
js
push
mov
add
call
out
lahf
or
fdivs
mov
add
testb
add
push
jae
lea
movsl
pop
sbb
mov
fildll
je
aaa
pushl
sub
cmp
ret
mov
popa
push
inc
xlat
mov
fldt
pop
cli
cmp
mov
sub
arpl
test
mov
lret
fidivrl
dec
jb
mov
cmpb
in
push
and
outsb
cmp
push
shrb
cli
repz
and
jne
sbb
mov
push
leave
dec
pop
sarl
call
out
xlat
jns
mov
inc
push
ret
pop
or
sub
fnstcw
xor
sbb
ljmp
mov
push
mov
jbe
and
inc
adc
icebp
jle
xchg
cld
test
mov
je
bound
mov
pop
sbb
push
push
ja
mov
sbb
clc
orl
outsl
add
mov
mov
mov
ficoml
fisubs
mov
add
add
add
or
mov
cmp
mov
sub
enter
sahf
movsl
cmp
sub
shl
and
xor
xchg
fwait
adc
nop
jns
push
or
mov
lods
in
jg
pop
cmpsl
test
dec
inc
lds
adc
in
movb
xchg
mov
lds
in
xor
js
lcall
gs
push
dec
or
ficoml
fists
scas
pop
and
sahf
test
addb
jbe
inc
into
cmp
mov
dec
mov
je
xchg
push
loop
add
push
mov
cmpl
jl
shr
in
into
dec
ljmp
mov
push
lock
cmp
pop
mov
pop
xor
jno
jle
daa
pusha
jno
cmpsb
mov
add
xor
add
sbb
sbb
jno
xlat
pop
mov
add
add
add
mov
data16
jmp
sub
and
adc
jp
notb
cmp
enter
cmpxchg
inc
movl
mov
je
pusha
loop
xchg
push
jae
mov
jl
jg
push
js
fwait
lea
imul
andl
jl
test
fsubrl
int3
pop
clc
and
call
or
loope
pusha
imul
or
dec
jge
jnp
jge
xchg
push
push
push
inc
icebp
mov
test
sti
lret
xchg
adc
in
pop
test
and
add
mov
in
xorl
lock
enter
out
out
push
add
xchg
mov
inc
add
outsl
adcb
pushl
sbb
push
or
add
ds
sub
pop
insb
xchg
fiaddl
add
add
add
jge
sub
mov
fimull
stos
aam
cs
pop
jno
add
les
pop
ss
mov
add
jne
add
cwtl
shlb
testb
jmp
in
out
fldt
mov
add
dec
cmpsl
sbb
enter
lahf
cmp
repnz
xchg
fwait
pop
xor
cmp
pop
or
pop
lods
jnp
push
mov
out
xchg
push
inc
insl
push
lcall
das
or
or
cmp
je
inc
stc
xor
jae
inc
mov
pushf
and
daa
sub
aad
ret
dec
inc
mov
dec
sbb
das
pop
lea
xchg
aas
and
dec
imul
jp
inc
push
push
push
mov
les
jo
enter
test
call
sbb
mov
mov
je
int
push
sub
push
pop
dec
jmp
adc
rdpmc
jl
add
lcall
sbb
fildl
add
add
add
adc
sub
inc
dec
sahf
mov
imul
xor
pushf
nop
xchg
fcmovu
sub
jge
fstl
cmc
lods
fwait
ret
lret
lea
nop
mov
stos
aas
in
cmp
fisttpl
pop
aaa
movsb
cmpsl
cmc
and
and
fs
lret
cmp
sti
xor
jmp
push
push
mov
dec
mov
lods
adc
xor
or
lret
cmpl
lea
push
sub
or
adc
mov
icebp
aam
add
mov
rcl
add
jge
cld
jne
xor
in
lret
push
sbb
or
push
push
pushfw
test
push
dec
and
pop
dec
dec
int3
push
scas
pop
xchg
xchg
out
mov
add
jge
lahf
cltd
repz
insb
nop
add
add
imulb
add
add
out
fiaddl
add
xchg
ja
push
jg
loope
cs
stos
cmp
sbb
add
add
add
sub
ljmp
sarb
lea
push
xlat
cmpsl
int3
aas
jns
and
in
sbb
push
cmp
jle
jb
jl
das
ds
sub
test
jbe
pop
or
pop
adc
fimull
popa
mov
xchg
into
outsl
shlb
popf
and
add
jbe
addr16
lods
xchg
mull
repnz
nop
loopne
lcall
movsl
pop
lods
pop
push
rorb
mov
fisubs
insl
push
dec
sbb
pop
ds
cwtl
pop
sub
vorps
mov
cmp
fadds
je
cltd
cmp
dec
mov
stos
in
jl
mov
mov
xchg
pop
outsb
pop
jbe
xor
sub
mov
pop
mov
mov
mov
rolb
pop
push
mov
or
push
aad
xchg
and
add
int
out
out
imul
cltd
xor
gs
add
testb
add
cmp
mov
into
jbe
in
push
jne
mov
out
mov
inc
mov
xchg
lcall
or
jo
filds
cltd
jbe
test
cmp
adc
cmp
inc
mov
or
mov
push
icebp
int3
call
test
pop
add
test
jl
mov
inc
inc
pop
adc
pusha
test
adc
sub
ljmp
lds
sar
cld
jmp
jo
cmp
pop
stos
push
xchg
jnp
and
fwait
test
sbb
and
jle
push
xor
cmp
cmpl
fstps
push
lahf
mov
movsb
cmpsb
adc
imul
les
cmp
dec
pop
cmp
and
mov
mov
dec
iret
mov
daa
push
or
push
push
loopne
repz
lret
aad
mov
add
add
psubusw
push
xchg
fsubrs
insl
imul
fiadds
add
add
add
jne
push
in
xchg
push
scas
mov
mov
fwait
push
mov
aad
mov
int
leave
jle
or
mov
popa
mov
fcmovnbe
xchg
sub
popf
notb
repnz
dec
in
add
pop
and
out
fnstenv
lock
add
das
test
nopl
or
in
loope
pop
repz
dec
fs
xchg
add
push
fmul
mov
sub
stos
shlb
daa
shll
shrb
fwait
aad
add
daa
movsl
dec
mov
pop
and
push
dec
or
pop
push
lret
cmc
ss
push
sbb
xchg
mov
fsubs
fistpll
imul
xor
pop
push
nop
fldl
enter
cmpsl
popl
and
jge
sub
jg
cwtl
std
mov
push
sbbb
jp
push
movsb
push
mov
add
add
sbb
sahf
cmc
fsubrp
jnp
mov
mov
add
add
add
cmp
out
adc
cltd
inc
filds
sbb
jbe
shlb
icebp
fcmovu
fdivs
data16
add
push
mov
gs
mov
push
jp
jne
sub
sbb
xchg
mov
xor
repnz
inc
pop
sub
aam
or
lods
loope
je
ss
out
addr16
mov
cmp
inc
cmp
cmp
out
cld
inc
test
sti
inc
aam
pushf
add
or
xchg
or
subl
in
iret
int3
cmp
popf
xchg
mov
mov
outsb
test
mov
icebp
pop
ja
aaa
and
hlt
fwait
or
and
or
bound
in
pusha
xor
fists
adc
das
jmp
inc
arpl
jecxz
cltd
mov
out
mov
cmp
dec
cmpsl
notl
add
jle
jg
std
fldt
cmp
add
pop
cmpsb
pop
loopne
add
add
add
int
and
insb
add
insb
lret
js
dec
xchg
push
dec
or
outsb
dec
push
lds
jae
xor
dec
scas
pop
sti
inc
fs
sub
outsl
adc
jecxz
mulb
das
push
adc
mov
mov
push
jns
test
sbb
sbb
inc
push
repz
and
mov
mov
ja
mov
faddp
pop
jmp
lcall
mov
dec
add
mov
sub
lahf
jnp
stc
lret
adc
jecxz
add
fists
jns
mov
push
aad
stos
xchg
adc
shlb
fcmovbe
cli
mov
jecxz
jbe
or
pop
jl
pop
popa
xchg
mov
cmpsl
in
inc
testb
repnz
and
push
pop
push
stc
inc
push
xrelease
cmp
ljmp
ret
fists
add
testb
add
fsub
fnstcw
mov
movsl
sub
or
cwtl
jbe
jo
aam
clc
int
mov
add
je
cmp
repz
xor
iret
pop
fwait
push
aad
dec
inc
lea
rcl
dec
pop
lret
mov
stc
add
mov
sahf
mov
cmp
jno
cmpl
xchg
fxam
out
dec
lea
repnz
test
push
cmp
aad
xor
mov
in
mov
ds
push
push
jo
jecxz
inc
ja
cmp
rcrl
adc
test
imul
adc
mov
push
stc
adc
lock
push
xchg
dec
lcall
xor
pop
adc
xchg
mov
in
mov
movsb
pop
popa
mov
loop
jae
ja
add
dec
addr16
out
mov
add
sbb
jmp
mov
inc
add
add
add
add
test
jae
out
lock
jl
outsl
inc
xchg
enter
and
or
in
xor
inc
mov
cwtl
das
pop
pop
out
push
outsb
mov
imul
testb
cli
push
dec
add
push
sahf
and
mov
js
jecxz
push
mov
pop
mov
adc
ret
lods
xor
sarl
bound
push
jae
xor
pop
leave
sti
jb
ficompl
sti
popf
ljmp
mov
xchg
cmp
push
repnz
mov
cmc
mov
or
fimuls
jns
stos
xchg
repnz
cmp
jo
pop
divl
push
mov
jae
sub
stos
movsl
mov
pop
cs
add
mov
dec
mov
push
dec
pop
sbb
js
js
mov
mul
dec
test
pushf
pop
lock
add
add
push
out
jp
dec
nop
push
pop
int
jecxz
add
add
add
xor
xchg
pop
and
lods
xchg
gs
inc
add
and
fs
jbe
loop
imul
and
xor
sbb
cmp
loope
test
cmc
push
inc
xchg
and
hlt
cld
xchg
mov
scas
js
test
or
fnstenv
jb
popa
xor
sub
add
sbb
lahf
popa
inc
gs
mov
aas
mov
jp
repz
mov
pop
jp
sbb
cmp
aaa
push
cmp
fsubrl
pop
mov
or
movsb
test
push
adc
test
je
jo
je
idivb
pop
xchg
jae
fcoml
cmp
sbb
lods
xor
gs
inc
cld
out
xchg
sub
jp
jne
icebp
mov
xchg
popf
call
xchg
shl
outsb
iret
sbb
xor
popa
ljmp
add
add
mov
lcall
mov
or
in
add
add
add
fdivrp
rol
ljmp
mov
aaa
xchg
lods
sbb
fbstp
pop
mov
mov
js
adc
sti
mov
stos
stc
dec
push
cwtl
mov
aam
jge
add
mov
js
or
adc
in
or
push
xchg
sbbb
pop
lods
adc
push
enter
imul
pop
fbstp
call
mov
das
or
pusha
sub
dec
pop
mov
push
dec
jmp
cmp
loopne
inc
xor
cmove
xchg
mov
in
js
in
mov
mov
inc
into
pusha
jnp
ss
mov
out
dec
insl
mov
sub
cli
call
push
push
push
mov
data16
cld
sbb
mov
test
fmul
jne
shll
push
fnsave
lock
sbb
popa
ja
cltd
xchg
pusha
mov
add
mov
jns
daa
data16
sub
add
testb
add
inc
xchg
mov
cmc
enter
push
ljmp
push
scas
mov
imul
and
movsb
xchg
lahf
jp
cmp
push
rorl
cmp
push
lods
fstpl
addr16
jg
jle
pop
stc
mov
sub
pop
sbb
in
loope
mov
or
mov
lea
in
lods
pop
and
or
enter
add
std
repnz
call
xor
sarb
fildl
add
sub
shl
dec
and
in
xor
mull
cmc
adc
xor
movsb
mov
pusha
pusha
pop
cmp
cmp
xorl
cmpsb
int3
sub
lahf
inc
dec
cld
adc
mov
pop
pop
mov
bound
jo
repz
ret
add
repnz
jg
test
dec
test
mov
xchg
nop
pop
sub
add
fadd
fsubp
jnp
push
xor
pop
push
out
add
add
add
sbb
dec
mov
lcall
xor
xchg
sbb
xchg
pop
cmc
testl
loop
dec
lahf
mov
loop
mov
inc
fidivs
sub
push
js
add
xchg
mov
inc
mov
mov
jmp
lea
inc
das
mov
dec
xchg
jbe
or
imul
in
sbb
movsl
cmp
sbb
pop
dec
mov
stc
pop
subb
insb
int3
add
frstor
clc
push
into
out
mov
in
mov
xchg
subl
xchg
pop
scas
shrl
xchg
ret
sbb
adcl
cli
pop
jnp
aaa
std
lock
fistl
cmp
rcrb
pop
pop
or
dec
jmp
subb
jnp
scas
in
jmp
stos
push
dec
pop
lahf
shld
clc
pop
mov
add
push
cmp
sub
cld
cli
jle
addb
adc
add
testb
add
stos
fucom
je
inc
cli
mov
push
cvtdq2ps
push
push
push
inc
lods
inc
cmpl
shl
mov
add
sub
stos
push
xchg
ret
push
adc
pop
or
mov
jnp
pop
jl
popa
mov
daa
inc
std
rolb
pop
popl
aas
enter
sub
mov
shr
repz
or
xor
push
cltd
mov
dec
jns
stos
mov
cmpsb
cmp
cmp
lret
cli
movsb
lcall
sbb
lds
mov
pop
cmp
jnp
push
add
cli
mov
imul
loopne
mov
out
dec
cs
dec
or
popf
enter
les
rcrl
es
dec
xor
in
sub
or
insb
pop
jns
fcomi
out
and
and
aaa
add
lea
pop
jbe
ja
sti
dec
push
sbb
ja
call
add
icebp
sbb
das
aas
dec
mov
and
jl
dec
loope
in
pop
and
lahf
push
jmp
lds
data16
mov
cmp
fstl
xchg
repnz
or
cmp
cltd
test
xor
jge
push
mov
lds
sbb
not
xchg
cwtl
jno
push
shrb
sti
jbe
nop
xor
mov
leave
mov
faddp
push
je
mov
ss
mov
pop
loope
jmp
aam
roll
cltd
jp
xorl
mov
adc
rcr
push
dec
cmc
filds
cli
rol
shrd
fisttpl
nop
and
ja
push
pusha
jo
in
data16
pop
pop
aad
jle
in
xchg
push
ja
fnstcw
mov
sub
cmp
fists
or
or
cld
xchg
adcl
pushf
in
repz
xchg
add
into
arpl
inc
push
cmc
or
pop
in
add
add
testb
add
outsb
icebp
xchg
or
fnstsw
mov
push
sub
add
and
out
mov
pop
call
lret
aas
aaa
mov
xor
xchg
sub
test
jne
xchg
add
in
pop
movsl
lock
insb
add
dec
sbb
ss
ds
sbb
push
or
je
mov
or
push
outsb
or
push
mov
jbe
test
inc
inc
push
push
add
repz
in
inc
aam
insl
cmovns
fists
or
pushf
addr16
std
and
js
and
sub
sub
mov
pop
sbb
dec
in
fcmovnb
push
jb
or
dec
cltd
ret
out
lods
mov
push
inc
insl
push
das
jg
fs
into
cli
sti
movsl
es
xchg
xor
add
cltd
cmc
adcb
fcos
pavgw
mov
imul
add
testb
add
cmp
mov
pushf
dec
cmp
pop
scas
add
out
push
xor
xchg
cmp
adc
dec
js
sbb
cmp
mov
mov
jg
pushf
adc
cmp
ss
adc
inc
and
adc
xor
mov
mov
ret
imull
inc
cmp
fstps
popf
dec
js
ljmp
scas
adc
fbstp
les
jnp
vsubss
insl
mov
adc
jge
cmpb
mov
adcl
lods
inc
mov
mov
sbb
dec
cmp
pop
fnstsw
sbb
clc
xchg
lods
push
enter
ja
and
cmp
jne
popf
sub
sbb
ljmp
mov
ficomps
aaa
loopne
test
add
repz
lock
jg
mov
sbb
ljmp
add
add
dec
out
inc
mov
jnp
cmpsb
imul
mov
int3
jmp
dec
and
aaa
cmpsb
lret
dec
in
roll
cltd
mov
lods
jmp
faddl
fdiv
inc
mov
inc
jge
out
pushf
mov
mov
mov
dec
jg
lock
jmp
push
xor
and
xchg
rolb
ljmp
fisubs
or
sub
xlat
insb
jl
fmull
sti
add
adc
mov
ss
push
jp
jecxz
and
daa
ret
push
dec
insl
jne
lea
xchg
dec
bound
sub
orl
xor
adc
ret
ror
mov
adc
jg
inc
daa
pop
test
arpl
and
pushf
jmp
sbb
xor
ds
mov
sbbl
mov
imul
inc
loope
add
xchg
fwait
cwtl
pop
popf
pop
xlat
fisttpl
mov
loop
add
testb
add
jno
cltd
icebp
xor
insb
sbb
add
cmpl
dec
fstpl
push
adc
sub
aam
aad
cmp
cmpsb
xor
js,pn
loop
xchg
sub
jne
pop
movsl
cmp
push
test
iret
popa
and
hlt
xor
lcall
push
adc
xchg
mov
mov
add
popa
out
push
pop
ja
notb
xorb
dec
push
add
adc
push
cmpsl
lock
pop
fcmovbe
adc
push
movb
sbb
fldt
xor
faddp
xchg
and
cs
outsl
js,pn
stos
stos
dec
das
cmp
cmp
pop
xchg
mov
es
and
mov
xlat
icebp
add
outsl
fmulp
shr
push
cmp
mov
loop
loop
mov
in
pop
pop
add
stc
mov
dec
js
stc
mov
push
nop
aad
push
mov
fsubr
add
testb
add
cmc
jnp
pop
and
shll
mov
rorl
cmp
push
or
imull
pop
dec
sub
das
rcr
fidivrs
mov
and
hlt
jae
mov
jge
pop
jbe
ret
sub
and
xlat
lcall
jp
addr16
mov
xlat
rorb
lds
mov
cwtl
mov
rcr
cmp
outsl
call
sti
pop
stc
call
les
mov
dec
cmp
outsb
adc
dec
dec
aaa
dec
sub
cmc
scas
mov
imul
xchg
adc
cs
mov
scas
xor
ja
js
mov
jg
bound
jae
jnp
dec
stos
lds
add
ds
sbb
insl
jp
das
ljmp
add
jl
inc
adc
inc
neg
addr16
cmp
adc
ret
inc
add
mov
pop
insb
fildll
decb
add
mov
sbb
add
add
inc
hlt
xchg
mul
pop
dec
repnz
inc
scas
xchg
stos
cmp
and
loope
lods
inc
dec
pop
cmp
jecxz
outsb
in
pop
xor
sub
push
push
sahf
pop
push
mov
and
dec
dec
outsl
dec
mov
sub
cli
cmp
add
cwtl
mov
sbb
push
clc
scas
xchg
sbb
popa
adcl
cmpsl
test
mov
scas
mov
repnz
xchg
addr16
cmpsb
pushf
repnz
movl
out
mov
sahf
mov
cmpsb
loopne
xchg
leave
in
push
or
cmpsb
mov
push
ror
sbb
sbb
mov
jge
mov
adc
push
mov
orl
push
dec
xchg
ja
divl
inc
sbb
mov
mov
out
add
cmp
jnp
sbb
pop
out
add
testb
add
add
shrl
jnp
xchg
jmp
stos
mov
xor
add
sub
fwait
stos
gs
jo
fwait
mov
xor
push
jbe
test
mov
movsb
inc
or
or
xchg
rcrl
inc
adc
inc
jle
jecxz
arpl
ret
mov
enter
cmpsb
or
xor
daa
in
cmp
cmc
mov
ljmp
jmp
out
icebp
iret
sub
rcr
lahf
cld
jp
aad
out
jb
inc
add
jne
stos
mov
mov
std
cwtl
fcoml
test
xchg
xchg
sub
push
decb
sbbb
sub
scas
fwait
test
mov
dec
mov
and
cld
gs
sub
js
sbb
jb
sub
popf
add
out
lods
xor
aas
xlat
jmp
popa
test
mov
add
add
inc
sbb
nop
in
aam
jb
xchg
xchg
mov
mov
cld
cmp
mov
addr16
in
push
sub
ds
mov
clc
sbb
jl
push
movsl
or
lahf
addr16
jmp
xchg
pop
xchg
lock
test
popa
ljmp
jne
add
dec
or
cmp
push
sub
lret
jne
fadds
movl
cmp
mov
imul
pop
mov
cmpsl
dec
lods
mov
movsl
ret
jns
mov
rcr
cli
ficompl
cmp
mov
imul
adcb
sub
ss
pushf
lea
daa
in
mov
fwait
popf
inc
xchg
xor
pop
jns
std
push
enter
cmp
int3
and
aaa
xor
push
jno
push
sub
adc
add
jb
scas
cmp
int3
repnz
xchg
adc
add
add
add
adc
or
repnz
xchg
int
stos
shr
jecxz
into
addr16
pop
pusha
fsubrs
ds
mov
fists
sub
lret
dec
in
cmp
jl
lods
std
mov
mov
lret
sub
cmp
push
and
fisttpl
js
test
cli
push
imull
pop
mov
or
dec
sahf
xor
roll
fwait
nop
jns
sahf
aaa
adc
outsl
inc
loopne
movsb
mov
out
sbb
out
insb
mov
aam
daa
aam
int
rclb
or
hlt
jle
or
inc
scas
sbb
add
push
adc
lds
sarl
ljmp
stc
jmp
pop
lea
adc
lret
jge
out
inc
push
mov
mov
adc
xlat
push
enter
rol
cmp
pop
test
mov
mov
xlat
mov
in
mov
testb
add
in
aaa
popa
in
push
cmpsb
sub
sub
repnz
int
lahf
push
mov
mov
data16
sbb
sub
sbb
inc
dec
js
hlt
cs
loope
cmp
lret
xor
cmp
xchg
dec
mov
fildll
lock
mov
int
xchg
in
push
mov
data16
mov
push
fdivs
mov
outsl
jge
mov
cmpsl
cmp
push
inc
loope
je
mov
filds
out
mov
enter
add
mov
nop
dec
repnz
dec
or
loope
push
and
cmp
mov
fsubs
popf
pop
push
cmp
stos
loope
and
mov
and
outsb
es
jb
pusha
mov
decl
icebp
cwtl
ficompl
lret
inc
fcom
jl
lea
sbb
push
pop
pop
addb
in
sub
add
mov
aas
jp
int3
icebp
test
mov
add
add
add
bound
mov
lods
or
jle
mov
sub
bswap
loope
sub
xchg
out
loop
pushf
je
mov
dec
leave
and
push
mov
mov
pop
icebp
ss
mov
push
movsb
pusha
stos
std
ret
sub
mov
addr16
ss
pop
insl
adc
xchg
push
jnp
insl
sti
in
xchg
je
stc
lahf
loopne
jo
and
cmp
aas
das
fwait
adc
loope
push
sahf
shll
sub
sbb
les
xor
sbb
bound
bound
test
push
push
push
add
mov
jbe
outsb
cld
push
call
or
cmp
cmp
adc
dec
xor
andl
js
xchg
mov
movsb
and
jne
in
addl
lods
pop
pop
outsb
aad
sbb
mov
lret
dec
and
add
loop
fadd
sti
mov
adcb
xchg
repz
testb
add
in
cmp
jge
mov
mov
cmpsb
dec
ss
sub
sub
shrb
outsl
ret
or
not
cmp
fiaddl
cmp
mov
push
and
sbb
or
mov
jmp
lods
push
push
xchg
jmp
inc
lcall
or
mov
or
ret
mov
fisttps
mov
xor
test
fxch
jae
push
lea
sub
in
ljmp
mov
fdivs
add
mov
arpl
nop
shlb
sub
sub
mov
xchg
mov
adc
and
or
dec
sub
lock
xor
movsl
rcl
xchg
dec
loope
in
xchg
stc
stc
inc
or
mov
dec
xor
cmp
add
into
adc
neg
jge
push
xchg
sbb
testb
add
add
push
mov
ret
push
ss
jbe
push
scas
out
jmp
lret
sbb
adc
shll
sub
xchg
jbe
ds
ds
cmc
dec
clc
xchg
adc
addr16
adc
cmp
xchg
das
add
pop
mov
push
add
pop
call
int
inc
lods
daa
movsl
mov
mov
jp
mov
rcl
lock
aad
or
xor
add
ret
dec
dec
scas
enter
jns
test
decb
add
sub
loop
sub
movsl
in
push
cmpsb
xlat
out
inc
ljmp
movsb
movsb
pop
fisubl
adc
lods
xchg
sub
mov
jg
dec
daa
mov
and
jnp
sbb
inc
insl
jae
in
xchg
popa
push
cld
sub
arpl
push
dec
add
pop
cmp
outsl
jg
jg
mov
xor
cmc
add
testb
add
aaa
fimuls
sbb
push
add
data16
movsl
add
cmpsb
icebp
add
pop
aad
lret
cli
loop
ja
daa
mov
cmp
mov
out
orb
int
lret
adc
sub
jmp
imul
push
arpl
test
jb
mov
pop
scas
fildl
mov
pop
pop
mov
pop
push
popa
sub
leave
lret
xorb
push
sahf
jmp
fst
stos
lods
sub
movsl
cld
push
mov
jmp
jne
mov
bound
and
mov
fildll
cs
sahf
lods
cmp
dec
out
add
out
sbb
das
shlb
mov
fisubl
movsb
cwtl
pop
jp
mov
ret
leave
push
inc
cmpsb
pop
xchg
xor
push
js
test
and
in
jnp
rorb
add
ja
and
aaa
negl
mov
mov
testb
testb
add
subl
inc
mov
movsb
mov
inc
push
dec
faddl
jnp
mov
mov
adc
mov
bnd
neg
inc
adc
aaa
push
outsb
mov
xor
mov
inc
roll
add
in
add
testb
insb
sub
in
inc
nop
std
mov
mov
lret
mov
lock
test
pop
lock
adc
mov
jns
push
sbb
pusha
loopne
dec
inc
pop
jne
push
insl
add
clc
and
mov
mov
leave
setb
lods
mov
imul
fistpll
cwtl
dec
adc
sbb
loope
sbb
inc
adc
cli
mov
push
leave
mov
ret
daa
ljmp
out
pop
arpl
mov
and
adc
fisubl
outsl
daa
add
out
pop
pop
add
in
xchg
jecxz
jmp
mov
add
xchg
cmp
add
testb
add
pop
adc
pop
cwtl
movsl
adc
push
push
push
nop
not
mov
out
daa
movb
dec
test
push
pop
rcrl
xor
repnz
mov
in
lods
or
fidivrl
jb
nop
mov
cmc
cli
push
xchg
mov
in
stos
and
jne
es
sahf
jbe
mov
push
and
repz
leave
adc
mov
push
in
and
movsb
out
adc
insb
dec
jnp
mov
and
adc
adc
xchg
add
mov
out
andb
call
cltd
cmp
jmp
aam
and
fwait
loopne
mov
mov
insl
mov
outsl
mov
insb
inc
rdtsc
sbb
jns
orl
cld
inc
cmp
pop
adc
mov
sbb
pop
jnp
sbb
lods
clc
add
jle
jne
cmp
pop
inc
inc
cmp
pusha
clc
add
testb
add
sub
mov
aaa
mov
jp
je
push
pop
jp
dec
add
cwtl
hlt
and
in
jmp
sub
mov
cmpb
cli
xchg
mov
dec
sub
pushf
nop
andb
fs
sub
and
sarl
roll
mov
cmp
and
int
sbb
insb
jne
sbb
adc
push
movsb
or
or
pushf
cmp
fsts
inc
test
fists
cmp
add
sbb
push
xor
je
call
lret
cltd
mov
mov
cmp
aaa
cmpsl
in
fcomps
hlt
push
and
repnz
add
bswap
into
mov
xlat
in
test
pop
jmp
mov
xor
aas
mov
mov
cmp
test
nop
orl
inc
icebp
mov
lcall
mov
sub
scas
fdivr
fnstcw
cmpl
and
add
testb
add
lret
mov
cmpl
icebp
int
scas
xor
clc
inc
cld
xchg
xchg
xor
mov
mov
xor
mov
xor
je
in
mov
out
mov
movsb
add
add
jle
xchg
ja
je
fsubr
jno
int3
adc
fs
jo
rclb
adc
inc
adc
or
icebp
mov
or
bnd
push
sbb
push
cmp
popa
repnz
pop
fnstcw
jae
push
aam
push
test
add
and
xor
and
loope
mov
push
addr16
in
sub
xor
hlt
scas
daa
mov
test
insb
add
stos
dec
inc
repz
jle
bound
mov
pminsw
imul
nop
pop
aad
cli
test
mov
enter
insb
add
ret
add
xor
xchg
fwait
bound
stos
fxtract
insb
dec
cli
add
testb
add
stos
loop
fists
je
inc
in
sti
and
movsl
sub
inc
jno
sbb
movsl
jbe
xchg
pop
notl
push
dec
call
mov
ljmp
mov
sub
sub
js
adc
inc
xchg
push
mov
mov
cld
jne
sbb
fisttpll
outsl
and
or
xor
adc
push
sti
out
sub
mov
lret
dec
mov
mov
hlt
or
dec
daa
cmp
xor
push
or
add
mov
inc
mov
and
sbb
adcb
inc
xor
outsl
xchg
stos
xor
int3
xor
jg
scas
fs
cld
dec
negl
dec
add
out
bnd
cmp
rcr
add
sbb
jae
cmc
movsb
sub
bound
xor
outsl
outsb
add
adc
int
in
idivl
pushl
sub
daa
inc
sti
add
testb
add
pop
mov
jae
xchg
cmp
inc
fwait
mov
outsb
mov
fstl
mov
cmc
js,pn
sub
and
dec
cmc
xor
std
jae
dec
lock
add
pop
orb
xlat
sbb
add
fucomp
mov
into
sub
fistpl
outsl
mov
xchg
hlt
xor
fnstcw
mov
stos
jmp
jne
cld
xchg
pop
mov
pop
add
cs
aaa
xlat
push
dec
pop
ret
outsl
or
mov
ret
push
pop
sub
addb
push
mov
pop
mov
mov
xor
jne
iret
flds
loop
scas
jno
push
clc
add
lret
and
adc
cmpsl
lods
push
push
mov
notl
pop
fbld
mov
mov
sub
ficompl
sbb
jmp
add
pop
es
inc
cli
aas
push
ljmp
cmp
add
testb
add
sbb
pop
test
pop
lret
rclb
pop
sbb
mov
insb
repz
push
jmp
cmpsl
add
aam
ret
mov
sub
adc
jo
frstor
int
dec
hlt
push
inc
pushf
adc
adc
sub
daa
mov
mov
repnz
xchg
aas
or
sahf
in
out
repnz
and
mov
mov
and
int
jne
sti
xor
dec
mov
xchg
or
mov
sbb
sbb
pop
jb
adc
imul
lods
dec
sahf
cmpsb
pop
lret
in
jl
adc
cmpsl
dec
cmpsb
xchg
or
ljmp
jo
roll
jmp
xor
xor
push
lret
add
shrl
divb
popa
push
rclb
jge
dec
add
xchg
enter
add
mov
lcall
ret
dec
cs
add
testb
add
roll
jle
lret
mov
aam
ret
rorl
adc
mov
mov
lret
data16
test
aaa
loope
pand
inc
push
push
cs
mov
xchg
adc
clc
addl
jp
inc
sub
aaa
cmp
scas
push
xor
jbe
xchg
jae
jmp
stc
pop
push
add
cli
jp
ljmp
fs
mov
inc
push
loop
sbb
insb
mov
dec
xchg
push
imul
mov
push
cmp
sub
pop
je
mov
xor
shld
test
mull
mov
cltd
repnz
mov
xorl
in
arpl
ret
and
xor
dec
test
daa
fdivs
cmpsl
std
push
xor
into
push
ljmp
aaa
jae
cltd
dec
mov
fs
add
testb
add
jmp
add
or
sbbl
mov
ret
aam
xorl
pop
cmp
lret
fildll
int
bound
or
and
lahf
xchg
adc
aaa
add
fcmove
into
inc
loopne
cmp
add
mov
xor
mov
hlt
pop
inc
outsb
aaa
clc
adc
pop
lahf
stos
sar
call
pop
adc
fdivrs
adc
jg
lods
sub
lds
sar
pop
int
sub
shrl
jmp
push
add
stos
sub
dec
test
loopne
mov
mov
cli
mov
mov
cltd
ja
and
test
es
aas
dec
cmpsl
es
aam
arpl
jecxz
bound
push
aam
pop
enter
in
mov
mov
mov
imul
out
xchg
mov
pop
cmc
loop
cmpsl
xchg
xorl
das
cmp
ds
into
nop
out
cwtl
jle
xlat
movsb
add
subl
add
call
or
pop
sub
adc
test
adc
insb
test
push
ret
test
mov
cli
add
lahf
bound
in
mov
sub
test
jbe
jb
sti
inc
insb
fistps
sbb
cmp
jmp
xor
bsr
insl
jecxz
in
pop
call
add
imul
out
ss
jg
jg
in
lret
insb
repz
insl
pop
pop
push
fwait
mov
iret
mov
sub
pop
enter
push
lea
ret
roll
hlt
jge
cmp
jo
icebp
push
cmpsl
addb
in
lods
addr16
loope
into
aad
jo
pusha
daa
imul
mov
jo
sbbb
push
add
and
in
sti
scas
push
jnp
and
repnz
jg
ret
hlt
lret
icebp
dec
jno
xchg
add
test
jg
xor
or
fmuls
add
add
add
add
lock
add
pop
outsb
hlt
mov
add
mov
aaa
test
dec
or
mov
sar
jno
push
jp
aam
dec
push
or
loopne
push
push
mov
mov
add
cmpsl
mov
cmpsb
arpl
xor
jne
jl
pushf
cld
mov
jg
sub
in
inc
mov
int3
jge
dec
mov
cmp
xor
xchg
stos
gs
inc
pop
add
add
xchg
dec
loop
loopne
int3
cli
nop
pusha
iret
dec
lock
lahf
jno
imul
sbb
subb
dec
in
and
mov
adc
mov
xor
mov
scas
pop
sbb
adc
add
pop
dec
es
pusha
cltd
fidivs
adc
add
js
lahf
mov
mov
std
cmpsl
divl
mov
xor
adc
add
adc
movsb
push
in
cmc
jne
pop
adc
pop
shlb
add
add
add
adc
iret
rcll
or
in
mov
pop
out
sbb
mov
data16
mov
mov
jge
mov
dec
sbb
push
mov
or
pusha
xor
fmuls
cmp
testb
mov
fidivl
or
aam
xlat
lods
call
inc
sbb
fimuls
mov
lret
cmp
sarl
mov
int3
lret
cmpsl
fnstcw
sbb
loopne
fwait
inc
shl
xchg
ret
ret
aaa
popf
inc
cmp
cs
testl
dec
xor
int
xchg
and
mov
push
xchg
add
loopne
stos
sahf
mov
jp
cld
xor
lret
dec
ret
negl
adc
push
cmp
adc
cwtl
xor
imul
xchg
pop
fimuls
push
lods
sub
in
fidivrl
or
add
sbb
shlb
aas
out
fwait
aaa
call
pop
cld
add
add
add
add
int
es
nop
mov
lahf
cmc
pop
jae
into
inc
gs
sub
sbb
or
mov
stc
xor
dec
push
and
mov
pop
dec
inc
xchg
mov
jbe
adc
xchg
xchg
sbb
repz
xchg
jg
adc
in
cwtl
push
adc
rolb
xchg
pop
jo
pop
arpl
dec
pop
bound
mov
push
outsl
xor
xchg
sbb
loopne
xchg
in
add
or
ljmp
popf
ds
in
or
xchg
add
repnz
xlat
add
push
imul
popf
les
lock
xor
sar
adc
data16
stc
out
cmc
ret
enter
sbb
sbb
push
xor
lods
scas
sbbl
mov
adc
shll
and
xchg
add
mov
lcall
sub
testb
add
sub
fisttpll
in
mov
imul
les
or
es
dec
fmull
sub
lods
jecxz
xchg
idiv
mov
add
enter
in
loopne
add
pop
repz
cld
jae
sbb
daa
push
mov
jg
jne
push
push
imul
lret
stos
fistpl
mov
aaa
int3
sub
gs
jne
cmp
xor
add
std
hlt
and
cmp
dec
nop
cld
xchg
ljmp
jnp
xchg
pop
outsl
add
mov
xor
aas
cwtd
dec
push
and
inc
push
fisttpll
shlb
mov
outsb
add
test
jb
push
ja
lock
xchg
loop
sub
stc
mov
or
or
sbb
aaa
adc
push
idivl
leave
cmp
dec
fldt
daa
jo
rorl
add
ret
bnd
rorb
cltd
jl
fisttps
add
add
add
mov
sub
popf
mov
pop
iret
dec
pop
movsl
ja,pn
xchg
xchg
shrb
test
roll
lret
sahf
inc
lds
jmp
mov
std
mov
and
xlat
dec
aam
lret
mov
dec
outsb
adc
loope
mov
mov
in
mov
cmpb
int
sbb
rcrb
xchg
and
jne
push
ret
dec
sub
in
ds
sahf
or
nop
dec
mov
and
loope
jg
push
xchg
cmc
inc
xchg
sbb
xorb
outsb
lret
push
xor
fildl
mov
mov
inc
int
cwtl
test
pushf
addr16
jg
add
mov
shlb
adc
sub
sub
mov
popa
or
sti
bound
ret
repz
mov
mov
add
add
std
aaa
mov
lret
jne
imul
fiadds
add
add
add
adc
inc
inc
mov
push
aaa
sbb
sbb
cmpsl
mov
mov
sub
pop
jb
jbe
aaa
push
addl
addb
pushf
adc
jb
fnsave
pop
cmp
outsl
mov
scas
sahf
cmc
imul
add
jle
or
inc
stc
orl
sub
or
pushl
mov
push
daa
repnz
push
adc
mov
jle
adc
push
ret
lods
push
xchg
fisubl
cmp
call
leave
mov
add
mov
jae
ret
loope
cld
dec
daa
jnp
and
mov
add
xor
jne
mov
popf
popf
and
mov
add
pop
xchg
mov
rcrb
sub
cmpsb
xchg
cmpl
dec
in
add
add
mov
mov
or
dec
add
add
add
movl
add
lret
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
cltd
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
test
inc
aas
inc
lea
inc
mov
mov
call
out
fisttps
jecxz
call
lea
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
lea
pusha
push
incl
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
ljmp
movntq
movl
test
jmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
jle
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
cltd
mov
or
rorl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
addr16
je
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
aaa
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
and
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
ss
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
cltd
clc
xor
inc
cmp
pushf
mov
test
clc
dec
inc
mov
or
test
clc
testl
enter
ss
pushf
inc
decl
push
xabort
add
mov
mov
les
adc
dec
add
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
mov
test
cmp
pushf
xor
add
inc
dec
cmp
sarl
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
cltd
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
cltd
lret
xor
mov
lea
xor
add
inc
dec
mov
addr16
inc
sub
inc
xor
push
mov
add
inc
decl
add
inc
mov
cltd
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
test
cltd
add
jmp
mov
add
mov
jmp
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
mov
ret
xor
add
ss
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
call
in
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
adc
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
les
inc
push
aas
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
ss
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
pushf
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
xor
inc
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
cltd
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
cltd
cmp
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
nop
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
std
mov
clc
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
jmp
mov
jle
inc
nop
in
inc
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
leave
add
and
inc
jne
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
jmp
jge
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
cmc
or
out
mov
pop
push
cmp
sar
incl
inc
in
jle
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
mov
mov
push
insb
push
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
ss
lea
mov
fadd
dec
lds
out
inc
lea
inc
dec
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
jmp
addb
mov
sub
add
js
data16
idiv
inc
fadd
mov
andl
flds
pop
push
jmp
push
jmp
addl
mov
inc
out
add
mov
outsb
inc
jle
idivb
mov
orl
jb
decl
mov
test
inc
rorb
adc
mov
mov
cmp
test
pushl
mov
add
jmp
pushf
decl
add
data16
add
add
test
inc
mov
mov
inc
cmpb
mov
add
push
mov
call
mov
data16
test
out
lea
test
inc
ljmp
decl
test
incl
test
rclb
test
inc
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
std
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
cwtd
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
jmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
add
lea
push
rolb
xor
lea
test
decl
mov
dec
clc
call
lea
lea
test
popf
push
add
xor
cltd
mov
incl
push
push
inc
shlb
lea
call
test
incl
clc
call
jmp
inc
jae
add
mov
mov
data16
inc
lea
test
inc
dec
test
pushl
jnp
mov
mov
lcall
incl
pop
mov
mov
decl
mov
mov
test
incb
incl
ss
pushf
inc
mov
hlt
test
cmp
lock
test
clc
mov
lahf
lret
mov
add
add
rorb
mov
incl
cld
mov
add
jge
test
sbb
xchg
call
push
inc
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
cld
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
cltd
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
out
adc
jne
mov
fcomps
add
incl
mov
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
add
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
cmpl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
ss
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
cltd
pushf
xor
jne
mov
icebp
icebp
shl
mov
inc
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
cmp
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
testb
dec
mov
mov
xor
mov
in
jge
mov
dec
inc
xor
inc
hlt
ss
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
ss
fdivl
test
push
add
cmp
setns
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
push
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
in
and
or
in
xchg
add
add
push
inc
xor
add
push
push
inc
jmp
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
rol
call
jne
mov
inc
and
fs
bswap
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
cmp
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
idivb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
data16
pushf
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
sti
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
cltd
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
data16
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
jle
popa
data16
into
addr16
add
cmp
add
cld
add
cmp
pop
or
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
pop
mov
je
xor
mov
xor
pop
cmp
jne
mov
cld
push
pop
inc
stc
aaa
test
clc
test
xor
fs
or
decb
lret
aaa
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
data16
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
push
add
add
add
lret
lock
lret
cmp
pushf
jge
aaa
cld
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
cmp
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
cmp
add
data16
dec
fisttps
add
ret
lea
add
ss
call
clc
inc
shll
cltd
push
xor
inc
cmp
jbe
mov
or
inc
test
cmp
in
hlt
push
push
push
push
mov
cltd
cltd
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
cmp
pushf
jb
add
inc
daa
inc
inc
xor
dec
cltd
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
cmp
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
ss
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
ss
pushf
pop
mov
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
incb
cmp
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
ss
pushf
push
movl
inc
cmpb
pushf
addr16
shl
dec
xchg
jmp
aam
test
mov
or
add
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
ss
pushf
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
clc
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
dec
pushf
mov
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
mov
push
ret
call
call
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
cltd
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
leave
call
call
in
jmp
and
call
pushf
inc
mov
pop
push
in
ret
and
mov
and
mov
or
lcall
or
decl
jl
adc
dec
cmp
mov
and
xor
test
jge
push
jmp
adc
dec
pop
ret
push
jmp
mov
add
adc
or
add
add
adc
std
dec
adc
outsb
adc
sahf
xor
add
adc
fs
add
inc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
inc
add
adc
adc
add
push
adc
roll
int
adc
mov
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
push
adc
sbb
adc
mov
dec
adc
inc
or
add
adc
mov
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
imul
sahf
push
adc
jle
adc
jbe
adc
cmp
add
adc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
adc
dec
dec
adc
dec
popa
adc
adc
add
push
adc
hlt
pop
adc
dec
pop
adc
ja
inc
add
inc
add
inc
add
inc
inc
add
inc
inc
add
push
xor
cmp
push
add
push
xor
xor
push
add
inc
pop
dec
push
push
add
pop
aaa
xor
xor
inc
pop
add
cmp
push
cmp
add
cmp
cmp
pop
inc
dec
inc
push
add
xor
xor
inc
xor
xor
xor
dec
xor
add
inc
pop
ss
pop
inc
push
dec
add
push
pop
inc
push
push
push
dec
add
inc
pop
xor
push
pop
pop
xor
push
push
pop
xor
push
dec
xor
xor
xor
inc
pop
pop
xor
push
dec
push
xor
pop
push
xor
inc
add
push
cmp
pop
inc
xor
aaa
xor
pop
inc
cmp
dec
pop
dec
add
pop
push
push
aaa
dec
pop
xor
dec
dec
add
xor
push
pop
push
inc
inc
inc
add
inc
cmp
push
push
pop
dec
inc
push
pop
inc
add
inc
pop
push
inc
pop
inc
ss
push
inc
dec
inc
add
inc
xor
dec
pop
cmp
cmp
push
pop
push
pop
dec
push
dec
dec
inc
pop
dec
xor
push
inc
pop
xor
add
push
pop
inc
push
dec
xor
pop
dec
xor
inc
inc
dec
pop
push
dec
xor
dec
ss
aaa
aaa
dec
dec
add
ss
inc
inc
xor
dec
ss
pop
dec
dec
inc
inc
dec
xor
xor
add
add
add
add
inc
add
dec
add
add
inc
add
add
xor
xor
pop
add
xor
dec
add
pop
add
add
dec
add
add
dec
add
dec
add
xor
xor
pop
add
inc
add
add
push
add
add
pop
add
xor
add
add
dec
add
add
pop
add
pop
add
add
add
add
xor
xor
pop
add
pop
add
pop
add
add
add
dec
add
add
add
push
add
pop
add
xor
inc
add
add
add
add
cmp
push
add
add
dec
add
add
dec
add
inc
add
add
xor
pop
add
add
add
add
add
push
add
xor
pop
add
inc
add
add
push
add
add
xor
xor
xor
xor
pop
add
add
add
inc
add
add
dec
add
add
add
add
add
add
cmp
dec
add
add
pop
add
dec
add
add
dec
add
dec
add
add
inc
push
sub
push
add
mov
fmull
sub
sub
add
add
pop
popa
jbe
jns
dec
jb
pop
bound
gs
arpl
js
je
jno
jno
bound
jo
bound
