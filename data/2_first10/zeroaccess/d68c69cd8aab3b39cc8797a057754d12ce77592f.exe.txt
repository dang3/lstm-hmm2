and
xchg
jmp
mov
adc
lfs
hlt
sbb
or
push
xlat
mov
test
jbe
scas
cli
jl
leave
leave
nop
dec
jg
fstpl
fs
in
addr16
orb
fcoms
ficomps
push
les
sub
cmc
sub
mov
mov
xchg
mov
cmpsl
in
jbe
mov
inc
fmuls
add
mov
push
or
iret
jbe
jo
mov
in
add
sub
shrl
cmp
ret
jne,pn
in
pusha
repz
sbb
fstps
jno
xchg
adc
ja
repz
mov
dec
lret
aaa
mov
stos
cmp
into
mov
notb
ret
add
adc
inc
hlt
and
jl
cmpsb
jns
imul
loop
mov
stos
push
mov
and
mov
add
push
add
enter
pop
push
nop
jg
xor
xchg
xchg
call
push
hlt
movsl
mov
cmpsb
imul
sub
jecxz
repz
jp
mov
lahf
sbb
add
sbb
jae
mov
mov
cwtl
outsl
fdiv
and
fwait
pop
xchg
pop
test
mov
sbb
pushf
in
inc
cmc
push
popf
into
cs
push
or
cmp
lret
hlt
in
cmp
sub
lahf
into
push
in
and
pop
in
mov
mov
push
push
jne
cwtl
ss
cmp
add
inc
pop
sbb
pop
test
adc
xchg
out
or
dec
inc
outsb
push
or
out
in
push
stos
rol
sbb
mov
dec
add
mov
push
mov
xor
loope
adcl
nop
js
in
xchg
inc
fnsave
cmpsb
shll
in
mov
mov
mov
jne
imul
fisttps
pop
and
inc
mov
or
xchg
outsb
repz
adc
imul
sbb
shr
imul
sbb
push
xor
scas
jns
test
mov
mov
push
repz
roll
in
rorl
imul
jb
pop
mov
cwtl
aam
push
mov
outsl
jns
mov
xlat
mov
gs
std
stc
les
dec
popl
xor
xchg
jle,pn
or
enter
je
subl
enter
fistpl
xor
movsl
push
pop
outsl
push
loop
sti
sbb
dec
adc
xchg
pop
daa
rcr
test
lret
insl
in
jbe
cwtl
pop
decl
dec
repnz
xlat
and
xchg
sbb
insb
loop
mov
push
or
aad
adc
popa
xchg
push
outsb
insl
xchg
push
outsl
mov
out
jp
andb
dec
mov
rcr
jo
sarl
ljmp
fcmovne
pop
xchg
test
add
mov
push
xor
dec
aas
je
and
adc
jle
sub
popf
and
int
sbb
inc
nop
push
mov
mov
jb
jge
add
iret
pop
mov
cmp
lods
dec
movsl
dec
ret
pusha
xor
jo,pn
mov
cwtl
jbe
cld
inc
dec
pop
inc
mov
mov
jae
push
cmp
cmc
lods
lret
adc
addl
adc
sub
vmovsd
adc
sub
push
dec
push
add
jge
mov
sbb
jmp
and
pop
jns
in
adc
lock
out
stc
dec
repz
stos
pop
push
adc
mov
xchg
iret
or
mov
cmp
inc
jl
add
sbb
sti
imul
sbbl
xor
cmp
sbb
add
sti
mov
lods
stos
inc
push
ss
cmp
movsl
or
in
jle
dec
adc
dec
pop
icebp
bound
imul
icebp
pop
popa
dec
mov
mov
sbb
mov
push
ja
adc
dec
pop
movsb
cltd
idiv
ret
mov
mov
mov
gs
scas
jle
xor
mov
cmpsb
fcmovne
call
and
ret
jo
add
fldenv
inc
add
fwait
push
fcomps
add
add
int3
loope
cmc
pop
push
js
xor
add
sub
push
test
and
lcall
jo
xlat
or
xchg
jo
sbb
mov
jb
or
sbbl
mov
std
xchg
fisubrl
data16
call
cmp
pop
test
lea
pop
mov
add
inc
in
adc
sbb
les
xchg
jle
xlat
jmp
pop
xchg
jl
inc
pushf
fldt
push
cmp
xor
push
pop
and
or
add
jecxz
imul
idivl
xchg
pop
cmp
or
test
rclb
inc
mov
cmpsb
test
lret
outsl
or
sbb
mov
lods
mov
xor
jmp
xor
mov
mov
cwtl
pop
jmp
dec
xchg
rorb
lds
xchg
sti
das
or
inc
xor
mov
out
mov
jge
popa
mov
bnd
xchg
jnp,pt
aas
mulb
aas
inc
loop
mov
std
js
pusha
xor
and
xor
or
shlb
adc
int
fdivr
add
insb
ljmp
sbb
sub
push
popa
scas
fs
xchg
fisubrl
dec
outsb
push
cmp
jecxz
subb
mov
popa
fsubl
aaa
push
add
rorb
inc
sbb
adc
in
leave
mov
sbb
xchg
lcall
bound
clc
cld
mov
leave
mov
sbb
push
stc
aad
lods
pop
cmp
bound
mov
xchg
ja
ds
push
sub
movsb
loopne
jae
jne
mov
pop
jp
shlb
pop
pop
fdivrs
repnz
xchg
ja
int3
xchg
mov
jmp
fsubr
js
sub
repz
fcoml
and
and
push
mov
push
sub
inc
lods
inc
pushf
iret
xchg
das
jecxz
cli
inc
test
cld
mov
out
loop
xor
ds
jl
shl
dec
xchg
jecxz
nop
xlat
xor
insl
cmp
aam
decl
repz
neg
cmc
mov
adc
sbb
mov
in
std
dec
int
jae
fnstcw
shl
insl
cmp
mov
add
add
ljmp
test
shll
sti
jp
aad
movsb
fdivl
in
xchg
jbe
aaa
push
mov
mov
lret
mov
xor
stc
cmp
in
or
sbb
pop
push
into
sbb
ja
xchg
mov
mov
sub
xor
mov
popa
sub
iret
sub
sbb
movsb
and
cld
addr16
lret
add
jge
add
shlb
mov
lahf
push
sbb
add
jecxz
lock
testl
inc
test
lret
sbb
iret
dec
xchg
imul
jo
cmc
pusha
out
xor
push
pop
lret
into
mov
inc
add
jno
sub
movsl
rcrb
imull
arpl
or
daa
jnp
xchg
nop
push
inc
fsts
jmp
mov
pop
shr
mov
ss
xor
aaa
int
movsb
pop
movsb
lahf
jne
shlb
cld
sbb
xchg
push
mov
aas
fdiv
inc
repnz
mov
orl
scas
out
mov
jne
cmp
dec
call
dec
fwait
push
xchg
into
push
ja
xchg
ss
mov
xor
fsubr
cld
data16
mov
sbb
std
jg
clc
stos
cltd
xchg
sub
and
jno
sub
mov
icebp
fnsave
mov
push
push
push
push
mov
lods
rorl
push
xchg
mov
pop
push
lock
or
add
push
push
jecxz
stos
cmp
cmp
mov
xor
std
cmc
adc
mov
mov
push
cmp
fisubrs
test
dec
das
xchg
mov
add
push
mov
cmp
or
add
pop
add
xchg
xor
out
int
ret
std
sub
lea
push
push
push
add
and
jae
mov
icebp
mov
xchg
je
loopne
pop
dec
pop
adcl
and
repz
test
sahf
sahf
add
add
sub
int
ret
pop
pop
dec
sarb
inc
and
inc
arpl
xor
mov
fstpt
mov
int
inc
pop
fisubrs
mov
mov
movsl
push
repz
cmpsl
shrl
sub
hlt
in
cmp
cli
adc
inc
and
xor
mov
jg
sti
inc
push
pop
mov
lahf
data16
popa
push
and
inc
lcall
mov
push
ss
fcmovne
jge
fldl
jge
mov
sti
div
jecxz
push
inc
sti
jge
pushf
xor
fstl
mov
call
arpl
dec
or
fistpl
jmp
push
in
push
fmull
pop
and
sub
add
or
adc
icebp
les
sbb
add
push
clc
or
int3
xor
aam
sahf
mov
scas
js
call
jp
xchg
std
mov
mov
mov
fwait
mov
scas
out
pop
mov
cmp
insb
xchg
in
test
mov
mov
movl
inc
push
mov
das
bound
push
xchg
aad
mov
jo
scas
leave
hlt
fdivrl
adcl
cmp
lcall
and
push
xchg
stc
scas
data16
das
je
xor
repz
mov
adc
aam
mov
or
xor
sub
movl
pop
inc
in
xor
popa
mov
xchg
lods
sarb
mov
cmp
or
xchg
xorl
sahf
imul
adc
cmp
arpl
sbbb
out
mov
popa
outsb
daa
push
sbb
bound
leave
push
fwait
es
sub
mov
xchg
loopne
out
mov
dec
iret
push
mov
xor
gs
or
and
dec
cwtl
sub
xor
imul
fisttpl
shrb
mov
fdivr
dec
dec
mov
int3
jmp
movsl
cmpsb
out
adc
and
enter
push
cmp
mov
dec
cli
in
jo
outsb
pop
call
or
stc
xlat
xor
leave
js
jl
jb
xchg
pusha
shll
xor
loop
inc
add
cs
leave
stc
lods
sahf
aaa
pop
test
lret
jb
mov
shrl
push
push
push
aaa
dec
sbb
pop
mov
imul
lcall
sub
xchg
ja
xchg
push
sbb
divl
lret
mov
xlat
fcomip
pop
mov
into
inc
lcall
pop
mov
ja
push
movl
icebp
in
scas
dec
dec
xchg
ret
decl
jp
insl
push
push
lods
mov
pop
test
int
aaa
adc
inc
adc
mov
push
int3
pop
jnp
in
arpl
xor
cmpl
orb
mov
inc
or
jnp
pusha
pop
dec
sbbl
pop
test
inc
rcll
andl
inc
icebp
lea
mov
dec
sub
inc
fnsetpm(287
xor
and
shrl
push
push
lret
mov
xchg
jno
cltd
pop
loopne
xor
push
mov
cmp
lds
jb
cmp
addl
jecxz
inc
mov
fidivl
jns
andl
fst
or
push
fsubs
pop
jg
mov
push
cmp
mov
xor
jae
movsb
mov
sahf
mov
out
mov
shll
jecxz
bound
mov
xchg
and
or
daa
inc
into
fsubrs
hlt
pop
in
sub
into
jge
xchg
scas
xchg
push
sbb
test
mov
scas
pop
push
and
jmp
je
push
cli
or
mov
cmc
fldcw
arpl
cwtl
test
pop
repnz
jnp
adc
daa
cmp
roll
and
sub
sbb
gs
inc
add
cli
jnp
push
je
dec
mov
inc
std
roll
push
push
inc
ljmp
push
mov
shrb
mov
pop
or
xor
cmpsl
xor
cs
pop
lods
cmp
xchg
inc
pop
nop
inc
cmp
or
sub
jmp
adc
inc
fcoms
aam
and
mov
inc
stos
xchg
sbbb
lcall
orl
sub
dec
adc
daa
inc
ljmp
jns
mov
mov
adc
cwtl
mov
pop
out
push
xchg
and
mov
adc
loopne
jne
xchg
or
push
mov
cmp
push
push
and
fisubl
inc
aaa
enter
cmpsb
test
sahf
pusha
dec
add
adc
popl
xchg
std
dec
outsl
shr
fs
int3
and
loopne
xchg
or
dec
jmp
loop
dec
jne
sbb
mov
jne
rol
es
in
jle
jmp
dec
sub
int
lods
add
xchg
xchg
and
loop
xchg
cmpsb
or
mov
dec
and
mov
xor
mov
fldl
add
jmp
test
cmp
push
push
pop
scas
push
mov
bnd
dec
sbb
sbb
fisubrl
outsl
mov
out
pop
in
pop
add
sub
mov
add
sub
pop
push
je
sub
add
add
sub
jo
pop
loope
sub
add
sub
loop
add
pop
mov
out
cwtl
jl
add
add
enter
pop
adc
pop
out
stos
scas
mov
and
sbb
sbb
push
adc
divb
adc
sub
iret
jo
adc
push
and
sbb
add
add
daa
xor
sbb
add
or
leave
mov
mov
mov
push
cli
int
mov
mov
xchg
rclb
insb
add
iret
mov
mov
arpl
inc
ret
mov
add
mov
fisubrs
andl
add
clc
lods
inc
fldt
inc
add
mov
sahf
ret
je
push
push
fldt
scas
mov
jne
and
jns
lods
cli
jbe
es
js
and
pop
cli
jns
cmp
sbb
fisubrl
inc
jnp
sub
xorb
add
fwait
pop
jns
es
jge
cmp
ja
ss
ljmp
sub
cld
aas
cmp
sub
jbe
sub
sub
addr16
add
add
sbb
add
add
subl
mov
xor
jae
sub
outsl
mov
in
cli
jo
cmp
sbb
sub
je
mov
add
int
fisubrs
js
fstpl
js
out
ss
sub
jns
mov
addb
xchg
cmp
add
and
js
daa
add
add
and
add
xor
push
and
shl
add
cmp
and
scas
jae
sub
je
sub
jne
sub
incl
scas
nop
jno
out
inc
stos
add
jae
out
incl
sub
jae
sub
dec
ret
pop
sub
adc
cli
jae
sub
jae
sub
xor
jb
sub
jb
cmp
jb
inc
add
cli
jb
and
jae
sub
jb
sub
jb
sub
adc
sub
pop
pop
pop
jb
dec
roll
add
fbstp
xlat
add
pop
jne
mov
jne
jns
jno
out
and
out
incb
sub
in
movsb
add
pop
dec
ja
pop
adc
inc
popf
and
jne
sub
hlt
sub
and
mov
jne
sub
mov
sub
jne
dec
mov
add
je
and
jns
aaa
mov
ja
add
pusha
jb
lods
cli
imul
je
sub
xor
sub
add
and
in
incb
sub
or
mov
add
sahf
je
in
inc
dec
sub
or
and
jmp
pop
ja
and
jo
xchg
incb
sub
and
jnp
aam
std
jne
out
mov
jne
and
jae
sar
je
and
sbb
sub
lods
adc
je
and
jbe
sarl
jb
das
add
xlat
cli
imul
mov
jb
sub
jb
in
incb
sub
in
and
outsb
pusha
fildl
add
js
and
inc
sub
pop
jbe
daa
lea
int
lret
test
inc
sub
in
cld
outsb
cwtl
push
movsb
jb
scas
incb
sub
add
pop
jp
adc
jne
sub
jne
and
jne
push
cli
jbe
and
jne
and
jns
and
add
cli
jbe
and
jp
sub
js
cli
imul
mov
jb
sub
add
push
jle
in
inc
push
sub
int
int
inc
xor
add
inc
push
add
jnp
incb
sub
leave
lea
fisttpl
stos
xchg
incb
sub
outsb
lds
ja
aad
jne
adc
test
add
sub
outsb
loope
js
xchg
aam
jno
out
mov
jne
and
jns
shl
jns
imul
sbb
mov
mov
push
and
inc
pop
add
and
jge
xchg
add
adc
cli
je
ds
in
mov
inc
or
add
xchg
and
xchg
outsb
gs
pop
add
jg
shlb
pop
xor
scas
jge
sti
addr16
stos
aad
dec
jnp
mov
add
ds
jb
cld
outsb
subb
lahf
cld
push
mov
mov
mov
add
push
std
add
imul
ja
cmc
xchg
imul
jbe
hlt
add
and
out
ljmp
jbe
cmp
sub
icebp
sub
lret
cli
sbb
jge
inc
scas
dec
mov
xchg
mov
aas
sti
push
insb
rorl
jg
insl
xor
push
das
popf
xor
jae
imul
add
add
insb
add
lret
rcl
add
into
stos
jb
cmp
es
sub
add
jbe
adc
push
sub
jge
sbb
add
add
bound
lods
je
push
adc
fisubs
test
add
ss
mov
mov
mov
icebp
pop
mov
inc
push
mov
and
inc
loopne
mov
add
pushf
sub
cmpsl
cmp
aam
leave
insb
cmp
fcomps
iret
pop
scas
jecxz
adc
jle
sub
outsb
pop
dec
pop
icebp
dec
cmpsl
add
add
jae
insb
sbb
mov
jmp
pop
add
xor
mov
pop
insl
fsubl
sar
fwait
inc
adc
xor
and
jo
jp
aad
jo
add
cmpsl
adc
pop
repz
push
inc
out
add
cmpsl
lock
jo
xlat
xchg
xchg
push
xlat
xchg
xor
jnp
inc
mov
xor
fisttpll
aad
dec
push
add
shll
inc
fmuls
push
insl
ss
lods
pop
jmp
scas
imul
pop
add
add
pop
add
push
cli
xchg
daa
mov
sub
xchg
sub
and
lods
add
out
stos
sbb
push
stos
pop
data16
inc
pop
add
mov
es
mov
mov
movsb
add
loopne
fistl
sub
movb
xor
xchg
push
fisttpll
push
dec
add
in
sti
jmp
push
push
stos
and
adc
cmc
xchg
inc
inc
add
popa
mov
pop
push
and
popa
in
xor
push
xor
mov
add
mov
add
out
out
or
ds
je
lock
test
jbe
jne
loopne
test
add
in
xchg
push
pushf
jle
add
push
pushf
cli
inc
lods
cmp
dec
test
movl
mov
push
js
push
add
ss
imul
rolb
push
in
push
push
fsubr
rcrl
icebp
pop
sbb
ret
movsl
pop
pop
popf
add
les
add
into
add
jmp
xchg
push
cmp
and
xchg
dec
sub
jle
pop
faddp
fcomip
push
add
jmp
xorl
add
mov
jbe
add
dec
sahf
jmp
push
push
dec
dec
jg
add
add
mov
mov
mov
aaa
and
sti
iret
aas
lods
pop
mov
cmp
xlat
mov
sub
test
pop
pop
fistpll
cmpsl
add
xlat
icebp
push
xor
es
pusha
or
add
cmc
add
push
xchg
push
test
lret
mov
add
out
and
adc
cmpsl
lock
das
loope
push
lods
pop
aam
and
jnp
ret
jecxz
pop
in
insb
test
add
inc
out
cmp
adc
inc
mov
add
jl
push
xor
sbb
and
or
add
test
mov
jno
fistpl
hlt
test
insb
cs
push
aas
out
into
aas
pushf
pop
icebp
das
gs
into
add
dec
inc
test
jb
popf
sub
insl
cmp
jl
into
aad
add
add
xchg
jo
enter
clc
dec
dec
push
loope
movsl
sub
add
cmp
bound
js
pop
cs
test
jb
jns
push
cmp
sbb
sarl
xor
movsl
push
push
fistl
add
add
push
daa
push
add
add
adc
mov
push
mov
enter
insb
mov
add
mov
jg
mov
in
and
xchg
push
jecxz
and
add
mov
repnz
jl
and
in
or
cmp
mov
aaa
movsb
stos
mov
xor
sbb
xlat
lret
fstpt
jbe
stos
cmpsb
or
push
mov
push
mov
les
add
add
sbb
xchg
aas
push
pop
mov
in
iret
pop
ret
xlat
outsl
test
xchg
add
jo
add
mov
loop
xchg
add
ljmp
je
add
add
push
jne
mov
push
sub
inc
scas
jb
js
dec
ss
aas
push
add
test
mov
inc
or
xchg
push
jnp
ss
sub
xor
imul
lods
aas
xchg
sarb
and
push
jb
fs
in
jae
or
sub
outsb
push
dec
mov
lea
jne
inc
shll
cmp
mov
sub
pusha
add
cmp
pop
jae
mov
jmp
sahf
jmp
je
es
out
mov
arpl
add
stos
clc
enter
push
mov
mov
inc
mov
in
and
mov
mov
push
jne
inc
ret
mov
add
or
add
sub
movsb
sahf
in
ss
and
mov
mov
and
pushf
mov
pop
xchg
mov
jg
mov
add
xor
incb
add
lea
add
stc
loop
or
imul
add
enter
cmp
pop
mov
add
mov
les
out
and
mov
aad
ret
shrl
inc
mov
add
sub
scas
je
or
mov
add
jp
data16
add
mov
shlb
mov
and
mov
sbb
ret
push
out
loopne
mov
rclb
cli
gs
sub
add
sbb
rcrb
aad
js
mov
cwtl
adc
mov
add
mov
push
add
das
orb
dec
fs
pop
pop
and
movsb
mov
in
xor
test
add
inc
sbb
xor
mov
test
add
jbe
xor
and
imul
lds
cmp
push
jo
les
sub
or
add
jb
enter
aas
lea
ret
push
call
bound
inc
das
add
and
jno
lcall
jbe
push
dec
mov
jp
fistpll
push
aaa
scas
add
add
and
mov
add
mov
mov
into
rcrb
mov
fstpl
daa
call
test
fsts
rcrl
je
inc
mov
sub
aaa
ret
dec
jae
mov
mov
push
and
jb
sub
mull
jns
in
sub
ja
xor
add
dec
movsl
push
in
popl
mov
mov
add
divl
and
cmpsb
mov
pop
add
add
and
cmpsb
adc
mov
jmp
pop
xchg
cli
ds
daa
jecxz
div
jle
xchg
and
jb
popa
add
nop
adc
fldcw
mov
inc
mov
mov
inc
out
add
call
cmp
inc
pop
add
adc
rclb
push
push
pushf
lret
std
mov
in
mov
and
add
mov
dec
aaa
lret
fcmove
or
add
mov
pop
pop
mov
imul
mov
mov
add
dec
scas
cmpsb
incb
loope
popf
ljmp
outsb
mov
mov
ret
mov
xlat
fidivs
pop
movsl
inc
xlat
cmp
add
inc
or
sbbb
push
out
mov
mov
add
in
fldl2t
xor
jno
dec
add
add
add
sarb
cltd
xchg
rolb
xor
push
jo
dec
and
adc
cmp
fildll
xor
mov
or
scas
fisttps
cli
icebp
inc
push
add
jnp
jns
and
xchg
adc
or
add
add
lea
mov
add
sbb
arpl
pop
sbb
cmpsl
add
sub
aas
add
test
mov
loop
fiaddl
sub
js
nop
cmp
add
adc
or
mov
mov
lea
test
add
clc
cmp
outsb
mov
shlb
out
jnp
mov
add
fldt
es
jge
iret
inc
imul
xchg
aas
inc
pop
cmp
mov
xor
inc
test
add
and
inc
mov
add
sub
pop
imul
lahf
out
cmp
sub
out
xor
push
movsb
add
cwtl
testl
cwtl
push
xor
out
jmp
sti
xor
repnz
jae
xor
stc
adc
pop
mov
dec
and
cmp
xchg
out
out
push
fldcw
ja
cli
clc
xor
dec
stc
test
add
add
add
or
xchg
je
je
add
daa
xor
and
jge
mov
and
fildl
add
xchg
dec
fcoml
jae
add
inc
add
cs
and
repz
add
sub
push
and
add
fistl
pop
lret
jmp
sub
xchg
mov
inc
jbe
out
pop
xchg
add
add
mov
outsb
clc
adc
add
jns
sbb
jns
mov
sbb
into
loopne
stc
lods
mov
cmp
and
cwtl
cwtl
call
cmpsb
dec
mov
add
or
add
push
lock
add
xchg
xchg
pushf
dec
popl
add
jle
xchg
aaa
cmp
add
pop
sub
sbb
dec
lcall
sbb
les
mov
add
inc
mov
sub
mov
pop
lcall
aaa
aad
lods
add
insb
pusha
inc
sub
cmp
jno
jmp
sub
add
add
movsb
popf
sub
out
cld
and
jl
or
aaa
cmp
add
gs
cmp
test
and
push
aas
lret
pop
push
std
pop
or
add
mov
xor
jge
push
add
mov
add
mov
mov
data16
add
cmp
aas
dec
insl
scas
dec
shll
fistpll
or
mov
adc
inc
jl
add
xor
mov
add
sub
add
pop
stos
scas
daa
pop
imul
repz
es
call
cs
and
add
ss
cmp
jge
cmp
mov
mov
add
add
incb
add
pop
sbb
jl
add
add
paddd
lea
pop
push
outsl
add
enter
cmp
or
add
int3
xchg
add
cmp
cmp
lcall
inc
incb
add
lds
jb
sar
mov
pusha
addr16
fs
sub
inc
push
mov
pop
aas
int3
es
fsin
aad
mov
lock
mov
mov
sub
mov
lea
movl
push
call
dec
jne
push
call
cmp
jne
push
push
call
test
je
lea
mov
addl
mov
push
call
mov
leave
ret
lcall
or
add
repnz
fiadds
jb
jle
inc
dec
add
jbe
fwait
aas
cld
pop
push
jl
sub
add
mov
and
add
jbe
add
cmpsb
fisubl
loope
pop
call
mov
lretw
add
dec
mov
xchg
shll
in
sub
lods
sbb
dec
push
add
les
add
cmpb
pop
add
in
les
add
and
in
outsl
js
add
add
arpl
or
add
add
hlt
imul
push
mov
dec
jo
enter
cli
push
ja
out
dec
jno
and
loopne
xor
push
and
popa
cltd
mov
jne
sbb
mov
gs
xchg
lahf
retw
add
call
je
mov
popa
inc
inc
loop
ss
js
js
out
and
loopne
ss
jnp
xchg
jnp
dec
lods
out
xor
stos
das
in
add
mov
stos
add
repnz
aas
xorl
jbe
lret
push
iret
mov
sbb
cld
sub
inc
mov
ja
bound
add
and
xor
ljmp
and
int
mov
out
pushf
add
in
mov
jb
cwtl
stos
add
push
and
out
or
movsl
adcl
jg
or
lret
fwait
ret
jb
int
ds
xchg
or
popa
xor
adc
add
add
add
push
fidivrl
inc
aas
add
pop
sbb
dec
ja
lds
mov
xor
test
add
adcb
xor
mov
stos
cmp
pop
test
cld
inc
iret
add
and
popa
and
mov
lods
sbb
xor
aaa
mov
jg
or
add
xor
inc
dec
add
stos
cmpsb
mov
jg
int3
xor
add
jb
mov
sbb
cmp
xor
and
and
inc
dec
add
mov
sub
or
add
mov
mov
and
mov
sub
in
jae
testb
sub
icebp
and
add
jae
rcll
arpl
xchg
xchg
lea
out
sahf
add
push
mov
add
mov
mov
xor
repz
stos
or
add
icebp
xchg
insb
xchg
xor
arpl
je
and
xor
insb
add
and
push
mov
and
pop
dec
mov
jne,pn
mov
add
mov
push
dec
mov
notb
into
and
inc
pusha
add
jb
rorl
push
cmp
dec
mov
loop
sahf
sarl
cmp
jg
es
push
ljmp
add
and
mov
mov
shrl
je
or
adc
incl
xchg
and
lea
cmpsb
addr16
jae
inc
push
and
popa
bound
movsl
xor
adc
xor
add
imul
mov
daa
data16
dec
pop
jb
je
inc
sbb
add
test
add
es
ja
jle
aas
outsb
and
jb,pt
inc
sahf
adc
popf
mov
es
mov
imul
push
aam
pop
in
dec
mov
add
sbb
add
jb
jle
and
mov
ljmp
xor
cwtl
push
jge
adc
test
xchg
stos
dec
xchg
push
cmpb
cmc
xlat
xor
out
sbb
cmp
mov
adc
add
daa
inc
or
mov
add
jno
jno
into
inc
movsb
push
and
mov
add
popf
popa
mov
and
fiaddl
add
in
jns
adc
pop
jo
ja
stc
mov
pop
cmp
leave
push
sub
inc
ret
idivb
mov
addl
hlt
xor
insl
add
jns
jae
getsec
add
jae
add
mov
cwtl
mov
outsb
mov
lret
clc
ja
sbb
add
sahf
hlt
shl
addr16
xchg
push
imul
cld
mov
inc
cmp
loop
iret
pop
adc
add
sbb
cmp
adc
leave
icebp
pop
mov
add
and
in
inc
mov
lahf
das
and
cmp
mov
enter
shrl
fwait
add
scas
inc
iret
pop
xor
pop
aaa
test
outsb
setae
pop
stos
shll
dec
inc
xchg
add
xchg
mov
add
push
pop
cmc
mov
sbb
cmp
out
jne
in
mov
mov
shlb
xchg
mov
popa
add
jns
cs
jbe
jge
cmc
outsb
mov
add
jne
imul
mov
add
pop
ja
out
xor
fs
xor
jecxz
jge
fcoml
and
mov
int
adc
sbb
xchg
ja
lds
jmp
mov
cmpsl
clc
aad
xor
or
add
sbb
push
adc
push
out
pop
stos
cmp
pop
or
jae
jae
mov
adc
add
lea
mov
addr16
divb
push
fldenv
add
and
cmp
sbbb
jb
nop
pop
js
psubusb
xchg
xor
les
add
mov
outsb
dec
fldl
add
add
std
add
shrl
movsb
cmp
fwait
inc
push
cmp
xor
subl
fxch
test
add
add
mov
and
push
hlt
out
je
insb
sbb
dec
stc
fnstenv
jae
popf
push
imul
test
lcall
stos
loop
dec
fadds
add
jp
ficoms
aas
imul
or
dec
lods
mov
inc
jp
and
sbbb
rcrl
mov
cmpsl
add
and
jmp
push
add
mov
out
mov
add
mov
add
lret
inc
imul
nop
sub
add
lahf
mov
inc
aas
add
xchg
icebp
push
sti
jae
filds
add
and
mov
inc
push
mov
stos
insl
pop
outsb
out
lods
test
jne
pusha
mov
outsb
popa
movb
cltd
aam
lock
xchg
pop
inc
js
roll
xchg
and
std
sub
xchg
mov
cmp
jae
ss
mov
cmp
repz
push
sub
int
inc
out
sub
or
jae
or
leave
jl
xchg
cmp
loopne
add
fxam
push
mov
out
dec
out
shlb
cmp
inc
fwait
mov
mov
imul
insb
int3
fadds
add
cmp
dec
lret
mov
pop
sub
js
movsl
insb
fwait
jecxz
cmp
movsb
cmp
dec
aaa
add
orb
xchg
sub
jns
push
pop
out
in
sbb
pop
sbbl
loopne
dec
or
add
loope
popf
xchg
leave
int3
pop
add
jno
loope
or
outsl
lret
adc
push
fucomip
gs
jo
xchg
test
add
add
ss
outsb
xchg
outsb
add
js
leave
cmpsl
dec
inc
xchg
jp
and
xor
test
add
shr
add
shll
aas
arpl
pop
stos
mov
iret
hlt
xlat
push
mov
jg
dec
sarb
jge
and
mov
inc
add
mov
aam
js
sar
stos
lods
dec
lret
push
mov
movb
popf
push
xor
add
jnp
mov
jno
sti
and
push
inc
out
add
sbb
dec
outsl
data16
jmp
es
or
add
fildll
mov
rolb
add
add
repz
test
sub
in
add
in
jo
mov
cmp
loope
pop
add
add
adc
data16
sub
aaa
dec
ja
pop
mov
mov
mov
pop
rclb
xchg
jge
rcrb
pop
push
cli
mov
xor
arpl
rolb
add
imul
dec
leave
cmp
mov
loopne
mov
xchg
push
je
fwait
add
sub
inc
jg
es
mov
jle
and
dec
mov
add
lret
insb
jg
andl
mov
psraw
daa
add
add
jecxz
and
sub
ss
mov
inc
test
and
lock
pop
sub
cltd
out
jbe
inc
test
add
and
movsl
and
or
sti
and
test
push
cwtl
pop
sub
mov
outsb
add
xor
add
jp
inc
iret
add
push
xlat
sti
mov
daa
or
add
adc
add
sti
push
stos
pop
or
push
stos
insb
xor
lret
cmc
inc
popa
add
xchg
jno
lea
and
movsl
sbb
in
lret
push
sub
dec
jb
pop
std
fildl
je
movsl
cli
lock
cmp
ja
inc
cmp
xor
sbb
insl
pop
fstps
and
nop
ja
cmp
cwtl
int
xlat
int3
mov
add
out
movsb
leave
cmp
pushf
or
add
inc
add
mov
add
jb
sti
add
loop
adc
mov
jbe
adc
repz
xor
xlat
std
loop
shlb
ret
and
ss
add
adc
fcoms
insl
mov
push
int3
test
add
xchg
fidivrs
lods
cwtl
out
sbb
dec
jmp
mov
sub
add
xchg
scas
mov
add
cltd
imul
bnd
xor
rcrb
fsubs
stos
adc
ret
mov
mov
aas
lods
scas
jno
lahf
jbe
cltd
pop
xchg
jae
sbb
fs
ds
add
mov
and
fdivrs
popf
popa
ret
jb
pop
clc
arpl
out
loop
push
pop
jl
gs
test
adc
cmp
inc
scas
inc
and
daa
les
add
jne
cmc
or
testl
ja
movsb
ret
adc
pop
xor
inc
std
sti
push
mov
add
sub
and
addr16
inc
pop
add
push
icebp
push
and
int
push
pushf
and
jae
jbe
pushf
jge
adc
xchg
add
push
lea
and
ja
xlat
add
xchg
sub
insb
adc
in
push
stos
mov
jno
outsl
ja
push
mov
mov
sahf
add
and
or
add
fiaddl
add
push
out
and
in
lret
testb
pop
xchg
push
and
sbb
mov
int3
xor
add
jb
faddl
add
sti
jns
and
clc
and
daa
sub
push
and
fistpll
and
jo
popa
jae
inc
lock
mov
jecxz
jno
es
mov
add
nop
gs
loope
shl
stos
sbb
mov
lock
insb
add
pop
add
add
jae
call
and
push
in
sbb
movsl
sar
and
cmp
inc
ficoml
jae
std
push
lcall
lds
jnp
jb,pt
inc
mov
add
movl
outsb
movsl
jl
mov
cmp
test
sub
inc
xchg
mov
iret
lods
pushf
iret
mov
pop
mov
add
pop
ret
and
xchg
loope
jb
jg
pushl
daa
add
add
cld
mov
fwait
xor
pop
add
out
repz
and
je
fsin
mov
push
cwtl
ss
roll
movsl
sahf
adc
in
xchg
jae
mov
andb
inc
insb
add
push
mov
incb
es
jns
into
fisubrs
add
outsl
out
cmpsb
push
lcall
insb
js
popa
stos
jp
push
adc
or
add
loop
mov
add
sub
aad
add
into
out
and
pop
jns
and
jne
cmp
repz
adc
xchg
xor
lds
add
rolb
add
incb
jle
cmc
xchg
push
mov
xchg
in
pop
mov
cs
aad
movsl
jmp
pop
into
addl
pusha
xor
and
imul
add
test
ljmp
mov
or
push
push
push
or
or
add
cltd
test
inc
aas
shl
add
mov
add
out
pop
inc
subb
cli
jne
cmp
daa
pop
daa
cld
xor
mov
add
fidivl
push
cmp
jbe
mov
xchg
out
fdivrp
js
push
repz
cli
and
pop
cmpsw
dec
or
add
push
mov
add
or
add
outsl
xchg
jns
cltd
jmp
push
and
jl
mov
out
add
pop
lea
add
es
push
push
jge
mov
xchg
sub
repz
sbb
mov
xor
add
jge
add
add
mov
mov
insb
mov
mov
sbb
push
and
mov
mov
repnz
xchg
mov
lods
lret
mov
movsl
xchg
out
sbb
mov
in
rcrb
add
sub
aaa
mov
outsb
push
loope
imul
mov
add
xchg
mov
add
je
or
add
mov
das
testb
fdivl
pusha
fcomi
xchg
mov
cld
mov
jo
in
adc
add
sub
jmp
repnz
jbe
mov
push
into
lret
cmp
add
pop
cs
sarb
mov
in
xor
cmpsb
shlb
imul
pop
push
jl
xchg
movsl
adc
mov
cli
icebp
push
loopne
insb
incb
mov
outsl
jae
cmp
xor
jb
int
test
add
xor
sbb
add
or
clc
cmpsl
mov
and
int
loop
or
add
add
out
dec
test
popa
jg
sub
out
mov
lock
mov
sti
call
mov
mov
lods
js
pushf
mov
cmpsb
push
xchg
adc
inc
mov
inc
pop
add
xchg
adc
pop
adc
mov
fwait
jbe,pn
push
inc
pop
mov
cli
movsb
lahf
cltd
sbb
enter
sbb
add
imul
movsl
cmp
call
mov
fimull
inc
mov
push
es
push
xor
lods
jnp
cmp
mov
out
cmp
add
out
push
scas
aas
fs
data16
jnp
test
add
cmp
pop
test
dec
fisubrs
mov
nop
data16
icebp
movsb
and
andb
xor
iret
icebp
push
lret
mov
mov
add
xor
jmp
dec
stc
bound
xchg
pop
fistpll
mov
inc
stos
xor
inc
adc
push
ja
iret
xor
es
into
lahf
xchg
shll
xor
shrb
inc
sub
mov
aam
outsb
test
stos
cs
mov
push
push
out
and
add
xchg
test
sbb
cli
pop
push
or
sbb
push
mov
pop
fwait
dec
mov
loop
mov
mov
inc
xchg
idivl
or
pusha
xor
fwait
fwait
or
aad
mov
adc
cmp
inc
hlt
add
xchg
inc
or
mov
dec
mov
add
xor
sahf
jmp
mov
xchg
jno
push
std
or
sub
jecxz
xor
add
inc
inc
inc
cmpsl
adc
cli
inc
mov
sbb
or
in
or
or
push
adc
or
jo
andl
lds
scas
mov
jo
adc
aam
cmp
stos
adc
cli
scas
stos
addb
pusha
push
push
or
pop
shrb
and
cmpsb
add
sub
in
ljmp
neg
push
fdivl
js
cmp
and
sbbb
out
shrl
mov
pop
xchg
out
pop
es
pop
movsl
repnz
sbb
mov
add
pop
cmp
adc
leave
icebp
jmp
jbe
jo
and
cmp
adc
fs
scas
dec
int3
mov
add
or
inc
jo
dec
or
jo
or
add
xor
clc
hlt
sbb
int
dec
nop
add
cltd
test
xor
push
daa
mov
add
pop
push
ret
aas
cmc
inc
xchg
add
inc
sti
add
sub
mov
std
jle
pop
cmp
adc
add
pusha
negl
mov
fwait
cmp
push
dec
cmp
push
push
lea
xor
add
std
sahf
xchg
in
jae
push
and
repnz
push
loop
jecxz
lods
add
mov
inc
xchg
add
inc
pop
fdivrl
mov
pop
adc
or
sbb
jno
pop
pop
mov
into
fnsave
push
push
fs
add
add
scas
outsb
dec
bound
nop
int3
sldt
rolb
add
test
xchg
xor
add
out
stos
mov
lds
add
jns
sub
inc
shl
push
into
cli
out
nop
inc
into
add
lods
jno
push
ja
jge
loop
jg
js
mov
xchg
jl
sti
mov
pop
and
add
stos
in
mov
push
ror
add
int
adc
xchg
inc
jae
adc
icebp
int
and
insb
das
cmp
mov
pop
xlat
das
cld
push
pop
jmp
inc
inc
adc
add
mov
aas
fs
xor
jnp
inc
sub
push
sub
pavgw
and
jne
sub
call
out
or
jle
cmpsl
cmpsb
addb
cli
int3
dec
add
cld
push
cmp
pop
fbld
std
push
js
icebp
and
mov
std
mov
push
inc
jl
push
addb
es
xor
push
add
scas
sti
cmpsl
sub
dec
add
jg
push
movb
add
fstpt
loop
add
imul
add
mov
ljmp
mov
fidivl
jmp
pusha
mov
das
mov
mov
mov
fisubs
mov
add
aam
and
mov
cmp
xor
sbb
or
add
sub
es
jecxz
or
xor
add
pop
fcmovu
cmp
xchg
mov
mov
jns
pop
mov
push
fsubrl
mov
test
xor
aas
jl
hlt
push
lds
lock
push
jbe
shlb
mov
cld
xchg
js
js
and
loopne
sbb
jne
cmpsl
lds
popf
cld
ds
iret
mov
add
pop
adc
cli
mov
inc
and
arpl
sub
jne
xor
movsl
add
addl
leave
lret
enter
inc
jno
push
mov
add
test
xlat
sub
popa
xor
add
dec
je
cs
jno
push
xor
push
and
mov
pop
int3
inc
add
aad
pop
add
jb,pt
sbb
xor
mov
pop
out
incb
xchg
popa
lcall
mov
sub
jae
sbb
test
add
sbb
mov
test
jae
out
and
mov
mov
clc
js
mov
bnd
jp
xchg
cmpsl
adc
test
adc
mov
popa
test
outsl
xlat
aaa
sahf
test
xchg
mov
adc
loope
pop
dec
mov
and
pop
jno
je
jbe
cmp
mov
das
cli
push
dec
sahf
jp
jl
cmp
mov
add
jge
les
add
nop
mov
and
into
cmp
mov
add
cmpsb
mov
cs
das
jns
xchg
sti
fimull
shll
aad
add
dec
lret
nop
mov
jns
adc
add
or
dec
fnstenv
sub
xchg
add
ss
push
movsb
cmp
mov
lock
pop
fiadds
add
add
lret
push
stos
repnz
sub
sub
aam
rdtsc
int
lea
imull
cmp
push
xor
ss
cli
xlat
fimull
loopne
mov
arpl
andl
test
lock
jae
mov
add
aaa
sbb
aas
and
sbb
popa
mov
add
push
jle
pusha
ret
ljmp
add
mov
add
and
and
add
jecxz
stos
int
fwait
scas
mov
mov
add
imul
fs
add
test
sahf
test
xor
movsl
jns
or
add
xchg
pop
stos
add
and
add
add
push
fimuls
lea
and
cmc
data16
jb
and
out
pop
cmp
sub
add
cmp
jge
sar
cmp
mov
add
sub
rorb
mov
cld
cmp
sub
lret
mov
add
jp
mov
fimuls
addr16
jge
mov
lods
ja
es
add
fadds
test
and
xor
cmp
addr16
sbb
and
add
xor
or
add
mov
in
popf
jns
stc
int3
sbb
add
xchg
cmp
push
ja
fstpt
sbb
dec
insb
add
xchg
mov
test
bound
xor
sbb
add
aad
int
rorb
arpl
lock
ja
cmp
lret
mov
rorb
mov
mov
mov
sti
fldl
out
ja
dec
and
je
nop
lahf
push
fnstcw
mov
push
pop
outsb
jg
lahf
pop
cmpsl
add
adc
cmc
jnp
loope
sub
add
mov
xor
daa
in
movsb
xchg
jmp
mov
jno
sahf
add
add
lret
xor
ss
push
xchg
push
repz
mov
or
lea
loop
ljmp
sti
add
pop
mov
adc
inc
rcr
cmp
cmp
push
imul
mov
cmp
std
sbb
add
cwtl
ret
je
push
aad
mov
out
ficomps
push
lods
dec
mov
cmp
testl
push
daa
cli
insl
insl
add
fisubs
and
xchg
or
fistl
sub
loop
imull
cli
insl
pusha
cmp
push
inc
mov
inc
lods
fdivrs
pop
xor
add
movsb
cld
mov
adc
das
and
mov
fidivrl
jecxz
cs
mov
add
lds
add
jge
test
mov
scas
jo
ds
es
sbb
dec
xor
add
push
repz
jl
lret
mov
push
cmp
mov
jl
ljmp
sub
mov
aas
xchg
rclb
add
sub
xchg
sbbb
sarb
pop
pop
and
fcmovnbe
pop
jmp
lret
lods
fucomip
into
cmp
cmpl
add
icebp
cmp
or
add
xor
mov
add
pop
sarl
adc
add
xor
icebp
inc
cmp
add
jle
dec
daa
mov
add
shll
add
xchg
add
incb
add
mov
ds
fcoms
jae
mov
test
add
mov
add
ret
inc
add
adc
dec
and
pop
lods
pop
ss
nop
cld
stos
dec
mov
add
xchg
out
bound
inc
repz
jecxz
bound
into
sbb
jo
lcall
add
insl
add
lcall
push
jne
mov
pop
add
add
sub
pop
and
mov
add
push
dec
pop
add
movsb
xchg
ds
push
mov
sbbb
leave
or
add
pushf
adc
jle
xor
leave
sub
rolb
scas
call
rcrb
mov
mov
stos
xor
add
in
pusha
mov
into
lcall
mov
sub
pop
insl
jg
imul
cmp
out
mov
add
stos
xor
and
add
sub
mov
lock
sub
icebp
dec
test
sarl
push
in
repnz
aas
mov
mov
and
into
sbb
or
mov
lods
test
add
dec
bound
pushf
and
jmp
sub
push
ds
add
push
mov
aas
push
fstps
sub
shl
push
adc
push
imul
push
lea
dec
sub
add
jp
loop
das
mov
fiaddl
add
arpl
jne
add
jae
xor
mov
jmp
jecxz
mov
stc
mov
test
stos
sahf
jae
xor
cld
sub
rclb
loop
adc
add
add
out
inc
hlt
add
jbe
shl
push
cmp
rolb
add
push
cmp
add
jae
inc
and
lock
in
loopne
or
push
dec
shll
insl
cmp
inc
xor
add
push
hlt
pop
push
lods
mov
sbb
das
inc
add
add
push
mov
inc
and
pop
pop
adc
and
adc
push
pop
mov
sti
add
imulb
and
addr16
aam
add
arpl
jl
ds
jns
mov
rcrl
pusha
mov
add
add
mov
das
out
lds
mov
cmpsb
inc
cltd
testb
xchg
jmp
adc
div
movsb
fs
jae
rep
aad
inc
add
into
testl
addr16
mov
loop
add
imul
out
adc
push
imul
daa
dec
mov
loop
cmp
jb
cs
jge
jne
stos
mov
lret
jbe
cmc
out
and
addr16
cmp
mov
test
add
pop
data16
xor
pusha
popa
xchg
das
jmp
mov
cmp
add
dec
mov
test
lret
add
sub
cmp
add
hlt
dec
dec
add
test
leave
inc
ljmp
dec
add
sahf
aaa
xor
je
and
scas
in
add
cmc
stos
js
aaa
add
xor
rcll
pusha
aas
aas
out
and
sub
cmc
aas
fsubl
jbe
out
hlt
aad
sbb
inc
add
mov
mov
outsb
stos
cltd
push
mov
daa
pop
stos
mov
mov
stc
push
mov
out
push
xchg
dec
mov
add
jns
or
xchg
mulb
leave
lea
mov
insl
roll
adcb
cmp
in
inc
mov
scas
movsl
cli
cmpb
int3
int3
add
int
aad
add
movsl
rorl
add
out
aad
add
cmp
daa
repz
xchg
into
nop
sbb
inc
arpl
mov
std
bound
sub
inc
and
in
sbb
mov
mov
sbb
clc
cmpsb
lret
pop
icebp
int3
add
add
mov
loope
push
and
js
imul
sbb
add
gs
pop
xor
and
lea
out
cld
inc
je
add
add
in
rclb
push
and
test
cmp
add
mov
xchg
add
add
push
sub
fldl
sub
mov
in
cmpsb
out
mov
sub
loop
and
jl
sub
and
push
sub
cmpl
sub
xor
lea
inc
in
add
aaa
pop
xor
mov
ret
adc
pop
jbe
mov
add
add
imul
push
and
in
pop
sti
jp
in
xor
data16
mov
ja
lods
lret
xorl
sbb
mov
add
mov
dec
mov
add
pop
fwait
jle
in
cmpsb
pop
mov
pushf
cld
sub
cmpsb
shll
rcrb
aas
pop
jl
sbb
cmpsl
pop
outsb
jle
popf
xor
cmp
xor
cmp
hlt
loope
sbb
and
jnp
sbb
xchg
jge
scas
pop
push
lret
in
stc
fisttpll
sub
cmp
in
test
add
cmp
and
cwtl
je
jns
outsl
shrl
jle
sub
int
mov
int
push
dec
insb
add
repz
xchg
pushf
shlb
add
add
pop
cmp
sti
daa
mov
in
pop
scas
or
sub
pop
cmpsb
sti
int3
pusha
add
jae
sbb
ss
movsw
out
sbb
jg
jp
rclb
add
xchg
push
imul
add
add
loopne
imul
pop
lea
ss
arpl
fcoms
jns
xor
pusha
add
inc
dec
add
mov
imul
aad
les
add
pusha
jle
mov
jb
rolb
std
aad
daa
movsl
push
sub
repz
dec
shrb
add
es
jb
mov
add
adc
jecxz
mov
cmp
lock
sbb
stc
lds
jae
add
mov
int
mov
add
cmp
add
push
mov
jmp
fisubrs
stc
imul
aaa
pop
mov
loope
cmp
adcb
xchg
push
dec
mov
out
push
push
out
adc
add
sti
out
cmp
neg
or
add
sbbl
test
mov
dec
mov
out
in
cli
inc
gs
add
jbe
sahf
bound
adcl
movb
mov
nop
or
lea
jecxz
xor
xlat
xchg
je
in
lds
or
and
lods
shrl
mov
xor
outsl
shrb
add
das
add
sub
mov
lret
je
fwait
stos
inc
sub
add
or
test
dec
xchg
add
dec
test
jge
imul
mov
add
pusha
add
inc
pop
add
mov
mov
fdivrl
xor
mov
adc
mov
out
sbb
out
mov
sub
add
imul
mov
cmp
sbb
mov
es
faddl
add
loopne
cmp
add
orps
out
hlt
call
cmp
aam
jle
pop
test
imul
or
xchg
jg
mov
push
push
and
call
loope
lds
out
jno
pop
dec
jbe
pop
fcom
and
xchg
mov
xor
in
pop
imul
mov
into
or
add
mov
mov
loop
gs
mov
outsl
mov
dec
sub
es
sub
fildl
cmp
mov
sbb
lods
jecxz
mov
ss
inc
add
add
stc
shrl
movsl
dec
mov
inc
add
jge
sub
addr16
mov
fbstp
mov
xchg
xchg
shl
add
jb
add
sbb
inc
cld
pushf
jl
pop
dec
sbb
add
xchg
aas
push
xor
int3
jbe
add
mov
add
pop
mov
mov
add
or
add
cmp
push
inc
ret
stos
dec
insl
cmp
ret
xor
inc
je
out
jge
cld
add
mov
mov
xlat
mov
add
xor
cmp
adc
jne
mov
int
xor
aam
aaa
mov
loope
inc
mov
cmpsl
jne
pop
movsb
and
add
pop
loop
jmp
add
xor
lods
add
add
mov
push
adc
ret
adc
adc
notb
jne
pop
clc
mov
in
mov
out
jne
stc
int3
jge
add
add
lret
pushf
insb
cmp
aad
jle
add
add
mov
add
push
rcll
jno
mov
dec
and
push
mov
dec
mov
fcomps
mov
add
out
push
xlat
or
xchg
add
jb
into
add
add
daa
jp
out
push
sbb
push
push
and
incb
add
pop
sbb
xor
test
sahf
adc
int
mov
jecxz
outsl
bound
xor
stc
inc
cmp
pop
add
out
mov
adc
mov
push
add
rep
push
and
push
sahf
inc
sbb
jbe
scas
movsl
lds
lcall
push
call
mov
jmp
gs
je
pop
imul
cmp
in
in
push
sub
nop
dec
xchg
aad
movsb
add
lret
mov
and
in
pusha
enter
mov
jns
dec
out
push
adc
pop
test
mov
add
mov
sbb
xchg
std
fs
cmp
loopne
add
push
cwtl
aad
das
jle
mov
dec
insb
xchg
pop
xor
xchg
pop
inc
loop
int
imul
push
lods
inc
pop
add
xchg
jb
or
jno
cmp
add
add
add
aaa
xchg
insl
add
push
int3
xor
add
add
pop
fsub
pop
cmp
adc
cwtl
out
jge
rclb
sub
dec
jp
cmp
idivb
aaa
pop
cmp
pop
xor
movsl
lea
imul
stos
leave
push
cmpsl
add
add
pop
xchg
jno
push
stos
insl
lock
xchg
into
test
out
or
add
jle
ds
push
aaa
jo
mov
push
les
jbe
or
add
mov
add
loope
dec
xorb
mov
fnsave
mov
cmpb
mov
add
test
cmp
add
cli
mulb
inc
jge
sbb
and
mov
add
ret
scas
hlt
daa
dec
cmp
mov
rcrl
sbb
add
nop
cmp
mov
cmpsb
in
les
add
aad
lds
pop
loopne
jns
pop
xchg
push
lret
cmp
lds
add
add
out
int3
add
lock
mov
sbb
xchg
mov
push
jo
lock
and
add
out
cmp
xor
add
add
cmc
lds
pop
icebp
lock
rorb
pop
leave
rcr
in
stos
add
rcrb
pusha
cmc
jns
add
test
add
add
rclb
out
inc
add
jp
mov
cwtl
add
lcall
xchg
lea
push
stc
into
lahf
enter
sub
add
mov
in
mov
in
xor
cmp
jmp
test
icebp
addr16
bswap
imul
lods
xchg
mov
or
xor
je
jmp
sub
dec
jnp
sub
sbbb
xchg
movsl
jne
loopne
mov
mov
inc
xchg
sarl
xchg
xchg
int
and
aam
adc
cmp
repz
pop
xor
add
dec
jb
sahf
out
add
movb
mul
add
xor
outsl
xchg
leave
push
adc
add
add
test
pop
popf
or
ja
jl
inc
js
pusha
sub
fwait
aaa
pop
loopne
ds
or
pop
outsb
pushf
xchg
scas
jl
xlat
add
stos
and
in
and
lret
sub
into
lret
xchg
or
pop
xor
iret
dec
add
add
and
in
adc
mov
xor
dec
inc
hlt
sbb
xchg
add
pop
dec
repz
mov
fcoms
fldcw
jbe
std
add
dec
mov
sub
jle
mov
fwait
cmpsl
push
lea
jle
mov
jl
ret
inc
into
sub
mov
insl
fst
mov
push
insl
and
dec
inc
inc
aad
add
add
jge
dec
xchg
mov
add
ds
sahf
cmp
js
ds
dec
clc
mov
cmp
lcall
fs
cmpsl
stc
and
mov
stc
or
add
jg
mov
or
repz
hlt
dec
loop
mov
xlat
mov
jns
add
mov
mov
add
jp
adc
mov
sbb
ja
aad
sti
mov
xlat
mov
int3
xor
add
out
int3
jmp
add
jg
mov
lcall
sbb
adc
fcom
jno
lock
add
aam
cmp
imul
ds
testb
mov
out
in
push
jge
clc
mov
cmpb
addb
stos
div
bnd
mov
lret
or
sbb
rorb
repz
jo
mov
mov
add
dec
and
int
jg
int
sub
mov
lock
cmp
sbb
lock
rorb
dec
add
inc
add
mov
out
xchg
jle
cmpsl
fwait
ljmp
mov
push
dec
frstor
jl
push
je
hlt
in
rcr
or
mov
lcall
ror
fstpt
add
cli
dec
imul
int
loopne
int3
das
add
mov
das
fidivl
push
cld
jmp
mov
and
repz
dec
mov
sar
pop
lahf
mov
in
add
daa
aas
adc
jmp
and
cmpsb
scas
jne
or
sub
sbb
cli
jae
mov
lret
dec
pop
pop
xchg
rolb
add
dec
cwtl
pop
and
xchg
dec
ss
cltd
stc
push
mov
popa
sub
mov
jge
xchg
mov
sarb
pop
jne
mov
pop
add
aas
data16
cmp
xchg
mov
outsl
outsl
mov
jae
mov
cmc
insb
loopne
out
testb
lahf
cmp
fs
pop
push
mov
push
add
mov
aas
pop
adc
inc
incb
add
mov
add
xor
add
jb
in
jno
mov
xor
xchg
cs
stc
and
decb
add
cmp
movsl
jmp
add
add
sbb
mov
sbb
subb
lahf
dec
std
add
add
push
xor
gs
mov
js
add
icebp
lds
pusha
cmpsb
lds
clc
mov
add
lds
xchg
jmp
cmpsl
inc
outsl
add
jnp
mov
loopne
incl
add
aad
jle
mov
pop
add
repnz
sbb
add
mov
scas
filds
sti
mov
and
xlat
dec
sahf
mov
lock
repnz
sahf
cmp
stc
mov
xchg
shr
push
pop
and
jg
roll
add
incb
add
icebp
adc
or
fdivrp
xlat
xorb
jno
add
dec
mov
jg
fcoms
fcmovnb
inc
pop
mov
add
xchg
scas
andb
jnp
sub
adc
jae
mov
repnz
cmc
andl
icebp
inc
stos
add
add
ljmp
inc
scas
ja
add
out
cmp
rorb
add
mov
mull
aam
xchg
mov
pop
dec
sub
enter
mov
push
incb
dec
cmpl
into
mov
movsb
or
add
mov
sub
push
fs
jbe
inc
jno
add
or
add
inc
fldl
add
sbb
add
mov
lret
dec
or
add
mov
xchg
add
or
inc
dec
xchg
sti
jp
xor
add
add
insl
gs
movb
or
push
fmuls
out
inc
xor
test
add
push
ss
in
pop
lcall
sub
xchg
clc
cmp
mov
data16
add
roll
add
adcb
xchg
popl
inc
sti
add
mov
jmp
ret
jno
pop
cmc
add
mov
repz
xchg
add
aad
fwait
data16
dec
push
add
ja
xchg
jbe
ja
insl
imul
ror
repnz
push
add
cwtl
std
jno
mov
mov
add
jae
outsb
test
jnp
add
pop
jae
xor
fildll
or
ss
pop
push
lods
enter
das
sub
hlt
or
rorl
add
rclb
add
in
add
enter
xor
roll
mov
adc
or
add
xchg
jp
jg
dec
and
add
jnp
je
cltd
add
leave
jge
adc
jbe
add
xchg
mov
leave
aam
mov
sub
pop
dec
sbb
fcoml
jle
sub
cmp
mov
add
mov
jo
sbb
mov
adc
outsl
je
mov
xchg
mov
mov
add
xchg
ja
ss
mov
pop
jbe
clc
pop
mov
das
jge
xor
lods
xchg
jnp
and
cmp
dec
rorl
push
jnp
test
or
lret
add
cmp
sub
in
in
or
and
mov
call
popfw
testb
add
inc
js
cli
add
sub
cld
jns
fcomp
fwait
or
add
pop
cltd
test
push
jp
push
jnp
ret
add
loop
or
js
pop
push
sub
testb
movsl
ljmp
push
out
inc
dec
add
add
push
add
popf
adc
ror
jns
inc
add
stos
call
xor
add
gs
sub
cmp
rolb
add
sbb
adc
add
enter
xchg
enter
test
and
subb
mov
js
je
std
ret
xchg
jg
insb
idivb
mov
in
enter
adc
in
je
dec
xchg
add
or
movsb
mov
dec
andl
repnz
shl
adc
mov
mov
cli
mov
fs
mov
mov
imul
xor
push
jecxz
mov
leave
pop
and
mov
out
sub
aad
int
loop
xchg
sub
push
sbb
xchg
cmp
cli
xor
adc
repz
add
in
outsl
dec
xchg
xchg
in
mov
sbb
add
mov
push
xchg
cmp
or
into
jle
fiadds
add
mov
mov
or
add
mov
imul
shl
add
and
push
loopne
cmpsb
xchg
and
jge
add
jae
and
aaa
inc
add
addl
pop
call
mov
js
cmp
shlb
and
inc
mov
mov
mov
push
pusha
subl
repnz
cmc
mov
scas
mov
fwait
jns
lods
add
cmp
lds
add
cmp
jl
mov
mov
and
cmp
repz
adc
add
mov
xor
into
stc
cwtl
clc
mov
add
lret
jbe
movsb
sub
repnz
add
int
mov
sub
movsb
pop
jp
sub
push
loope
cmp
lods
pop
or
xchg
js
jbe
jle
mov
add
add
cwtl
fildll
jns
shrb
mov
lea
lods
cmp
popa
das
scas
push
sbb
aas
movsb
mov
in
pushf
cmpsb
fimull
add
xchg
add
add
mov
cmc
add
sbb
arpl
jmp
dec
nop
jne
or
cwtl
and
cli
rcll
or
add
jmp
add
pusha
cwtl
lea
arpl
test
cltd
add
mov
loop
adcl
ja
inc
scas
outsb
jle
cmp
jge
adc
sub
cltd
add
lods
arpl
or
add
push
inc
mov
loopne
in
add
xor
int3
add
add
test
and
push
sarl
fists
mov
orl
add
pop
and
nop
sub
or
je
mov
sub
insl
popf
dec
dec
add
pop
cmp
push
daa
jg
jp
jbe
dec
cmp
hlt
pusha
mull
dec
jno
mov
sub
in
mov
inc
xchg
mov
je
sahf
jg
pushf
popf
adc
lods
daa
repz
or
add
jae
out
and
iret
add
add
imul
jmp
repz
cmp
fcmovnbe
mov
movb
loope
push
fmull
push
push
and
xor
mov
push
mov
jg
mov
add
repnz
jno,pn
std
add
cmpl
push
testb
add
mov
movsl
sub
cmc
jns
cltd
pop
pop
cmp
xor
lods
jne
icebp
cmpsl
cld
in
mov
pushf
daa
xor
out
les
add
lcall
ficomps
call
repnz
cmp
fincstp
xor
out
bound
cmp
cwtl
push
hlt
sub
xlat
sub
arpl
in
jg
aas
sbb
inc
sldt
aas
dec
lcall
jne
int
inc
xchg
ljmp
out
addr16
xor
sub
mov
js
pop
das
pop
add
clc
test
add
pusha
pop
sub
xor
rorb
dec
add
mov
js
xchg
es
xor
pop
clc
or
cwtl
xchg
ljmp
pushf
cmp
adcl
mov
sub
add
sbb
mov
daa
sbb
push
popa
popf
out
aas
cmc
imul
nop
not
int3
cld
add
sbb
sub
ss
nop
push
out
cmp
push
sub
lcall
shll
xor
xor
or
dec
push
add
inc
or
sub
or
add
fdivl
cmpl
pop
out
xchg
cmp
pop
pop
jo
mov
add
popa
inc
cmpb
mov
lock
cmp
sahf
mov
and
and
shll
movsb
push
out
jle
imul
dec
cmpsl
js
push
adc
cmp
xorl
jbe
dec
outsl
add
std
or
add
sub
cs
subl
add
jno
sub
or
int3
rolb
add
jle
imul
jle
icebp
gs
repz
sub
inc
jp
jg
push
sbb
pop
xor
fsts
cmc
daa
ret
mov
iret
cmp
add
aam
xor
imul
dec
jg
push
inc
jg
dec
mov
mov
inc
pop
add
aad
shrl
mov
add
cmp
xor
or
add
xor
or
add
movb
gs
stos
mov
mov
add
inc
movsb
mov
cmp
push
hlt
fstpt
push
mov
inc
add
xchg
jecxz
push
sbb
sbb
incl
addr16
jp
adcl
add
jbe
lock
xchg
shl
cmp
xchg
int
icebp
jp
pop
mov
sub
ret
sub
je
cli
fstp
js
fnstenv
pop
fisttpl
add
jmp
xchg
add
bound
add
pop
cltd
mov
add
dec
aam
call
insl
lahf
call
add
js
movsb
and
bound
jmp
add
sbb
out
ss
iret
and
sub
xor
negl
mov
ljmp
int3
xchg
add
iret
cwtl
dec
push
mov
imul
jne
repz
js
test
movsl
jo
fbstp
pop
mov
cmpsb
fwait
stos
addb
add
into
cltd
mov
dec
jnp
add
scas
jnp
push
fiaddl
lret
or
mov
add
xchg
add
sbb
adc
mov
push
daa
and
in
mov
add
dec
roll
add
fsubrl
and
idivb
sti
pushl
rcll
mov
jl
int3
inc
add
push
mov
mov
pop
movb
add
jnp
sub
jo
ficompl
jge
cmpsl
push
or
call
push
les
lock
push
add
cmpsb
dec
sub
add
inc
sahf
jge
bound
xor
add
lock
inc
imul
in
dec
sahf
cmc
stos
rolb
mov
add
jbe
loopne
add
add
jnp
mov
out
dec
lea
cmp
adcl
xor
or
out
pop
stc
ja
jmp
sub
add
push
and
insb
jo
lock
es
pop
add
cmp
pop
dec
bound
add
lock
and
inc
scas
inc
add
add
out
iret
repnz
mov
push
xlat
jo
inc
add
push
es
outsb
pop
sbb
sahf
ret
push
repnz
call
pop
jne
mov
add
sbb
jnp
hlt
lds
daa
adc
sarl
mov
fucompp
push
sub
loopne
lret
or
add
sbb
mov
adc
or
add
repnz
mov
addl
xchg
adc
pop
mov
sbb
mov
pop
mov
adc
jge
push
sub
pop
push
sbbl
das
aam
push
jno
adc
aas
add
push
data16
aam
sbb
imul
outsl
push
push
mov
andl
test
push
xchg
jb
mov
xor
sub
add
cli
jo
int
push
push
push
xchg
push
sbb
lds
push
pop
std
jbe
shlb
jne
add
mov
mov
add
fs
divb
add
adc
fdivr
dec
inc
mov
add
ja
pop
testl
push
lock
dec
or
cmp
scas
dec
or
add
es
add
mov
inc
push
cmp
xor
jge
add
lret
imul
mov
push
lods
popf
mov
aam
and
add
inc
xor
sbbb
rolb
add
add
add
add
and
in
add
add
aad
fs
xchg
sbb
aas
out
and
out
add
rclb
add
add
jb
dec
xor
add
js
rcrb
add
add
add
mov
test
inc
pop
add
loop
sbbl
add
or
ror
jecxz
mov
pop
inc
cmp
and
into
mov
jp
and
ret
je
xlat
lods
push
sub
mov
into
jns
cli
jbe
test
cmp
clc
and
add
or
mov
jae
add
cmc
sarl
add
add
sbb
pop
mov
ret
pop
iret
dec
mov
xor
hlt
jbe
inc
testl
push
and
mov
lds
add
outsl
fidivl
or
add
add
add
add
add
add
loope
adc
addr16
fists
pop
jb
pop
jg
int3
icebp
add
jae
cmpsl
mov
cld
je
cld
or
add
test
cmp
xchg
icebp
loope
inc
jo
sti
fstpt
mov
pop
mov
mov
repnz
mov
dec
mov
push
mov
cltd
mov
or
push
sti
xor
leave
test
imul
add
add
add
mov
or
add
jae
sub
dec
daa
ja
mov
cmp
scas
add
cmc
sbb
and
add
sti
add
js
rcrl
jae
pop
js
mov
lret
aad
in
repz
shrl
cmp
inc
rolb
add
add
ret
icebp
test
or
mov
add
mov
jbe
mov
dec
bound
lds
cmp
push
add
add
add
leave
or
xchg
je
subb
sbb
cld
and
xchg
mov
inc
dec
in
add
int3
jbe
add
jnp
popl
add
fs
sbb
roll
add
lea
xorl
scas
movsl
add
mov
adc
add
fwait
dec
test
je
xchg
repz
je
ja
lock
stos
cltd
ror
cmp
jbe
ja
mov
mov
dec
mov
arpl
test
aas
sar
sbb
sub
xchg
clc
orl
iret
aas
gs
outsb
stos
push
add
pop
das
movsb
push
scas
jle
cmpsl
test
dec
push
xchg
rorb
adc
jb
add
incl
add
mov
aas
cwtl
inc
scas
add
adc
add
pop
dec
mov
add
stos
dec
cmp
dec
aas
xor
xchg
dec
adc
push
in
push
jle
ficomps
jmp
cmp
cmovne
dec
addb
pop
adc
cld
pop
add
sub
add
daa
add
cld
lahf
enter
sub
sbb
mov
ss
cmp
jbe
add
and
cmc
sbb
and
imul
pop
xchg
pop
leave
stos
or
and
sahf
sbb
sub
add
xor
add
inc
pusha
push
sbb
mov
mov
add
or
sldt
and
push
add
push
into
popf
adc
cwtl
pop
sub
lret
sbb
mov
add
or
loopne
cltd
pusha
sub
sbb
fs
jo
dec
add
and
jo
push
int
push
into
jp
inc
push
cmp
add
xchg
cmp
jne
sbb
pop
cmp
pop
fidivrs
pop
mov
cwtl
mov
sarb
punpckhdq
add
std
mov
add
sub
mov
stc
adc
insl
clc
or
mov
lods
fs
add
adc
sub
cli
sbb
add
mov
andl
sub
add
popf
je
je
iret
imul
jb
sbb
adc
ss
xor
jmp
ss
aas
and
out
add
repnz
roll
add
add
add
fisttpl
push
xor
mov
add
xor
das
add
sub
mov
in
clc
add
les
add
and
es
adc
lods
dec
shlb
fdivrl
add
add
das
into
xchg
popa
pop
push
or
inc
jp
pop
mov
and
push
punpcklwd
mov
xor
add
insb
ss
mov
add
push
mov
loope
mov
dec
push
imul
xor
ret
movsl
lods
and
mov
add
je
sub
je
add
into
dec
jg
jecxz
inc
add
mov
stos
decb
js
movsb
mov
movsb
mov
lcall
dec
and
aad
pop
or
add
ret
loope
lds
andb
ds
jo
mov
mov
mov
notl
stos
xchg
fistpll
or
clc
aas
clc
and
dec
or
add
push
ljmp
pop
mov
stos
rorl
mov
inc
mov
add
push
ficompl
std
add
add
inc
cli
add
push
or
cmp
inc
cmp
cli
mov
add
xor
lods
push
xchg
sub
inc
mov
sub
popf
mov
and
xor
add
out
mov
icebp
sahf
repz
jmp
lahf
or
lds
cmp
pusha
pop
clc
cltd
sub
xor
sub
movsb
les
add
push
mov
dec
mov
add
add
mov
scas
loope
leave
inc
add
mov
out
and
push
iret
and
sbb
push
jb
cmp
repz
mov
add
add
js
mov
jge
cmc
aad
fmuls
jnp
inc
sti
aam
hlt
mov
and
adc
xorl
cmp
mov
jbe
xorl
add
rcrb
push
cmp
xor
mov
add
mov
and
mov
xor
inc
add
ret
push
sbb
sbb
jmp
inc
xor
and
in
fwait
sub
inc
jg
jno
in
mov
sub
add
loope
les
add
xchg
ret
mov
push
push
icebp
out
sub
push
mov
js
cmpsb
pushf
pop
bound
jg
and
cmpsl
add
iret
in
jle
inc
add
sahf
arpl
lods
xchg
aas
sub
sbb
adc
add
add
sbb
push
or
loopne
sbb
adc
cli
pop
xlat
push
adc
inc
cs
stc
xor
jecxz
xor
scas
cmp
add
mov
in
mov
fimuls
add
out
shll
xor
lret
rorl
adc
bound
frstor
inc
xchg
or
add
add
add
add
cmpsb
sbb
enter
icebp
bound
pushf
mov
push
sbb
and
ss
jnp
jp
mov
sahf
sbb
push
ret
xor
inc
dec
mov
fldl
xchg
lds
sub
mov
movsl
mov
fisubl
lods
test
add
out
dec
lret
mov
pop
sbb
sub
push
sub
fildll
mov
cmp
mov
add
fisubrl
fstl
add
add
xchg
pop
in
inc
scas
add
jo
addr16
fdiv
dec
hlt
add
scas
stos
clc
xchg
and
js
mov
mov
add
add
sbb
hlt
mov
int
popf
call
ficoms
iret
ja
insl
cmc
mov
filds
add
mov
lcall
outsl
add
inc
dec
add
dec
inc
xor
add
movd
or
add
outsb
push
pop
in
and
in
mov
loope
adc
aad
aam
cld
stc
xor
test
add
dec
cmp
and
add
jge
fists
cmp
sbb
lock
popa
jno
mov
cmc
sbb
add
int3
sbb
lret
call
push
pop
jg
ja
add
rcrl
jp
pop
mov
loopne
add
int
add
hlt
add
and
or
repnz
jne
add
sbb
add
xchg
test
xor
dec
pusha
pop
push
sti
shlb
ljmp
add
push
lret
in
ds
inc
stos
pushf
out
lock
xor
add
clc
popf
repnz
inc
xchg
add
scas
mov
add
movsb
neg
or
shl
insb
or
leave
int
scas
cmc
xchg
mov
dec
mov
pop
fxch
pop
in
repz
sbb
jae
jge
hlt
xor
test
cmpl
push
add
ljmp
shl
add
add
sub
in
cli
inc
insb
add
in
sbb
cli
sbb
outsl
add
add
mov
add
out
adc
xchg
add
imul
xchg
rolb
add
clc
push
dec
mov
add
fstpl
add
divb
cmc
mov
add
imul
int
nop
out
mov
pop
aas
jo
lahf
out
out
and
call
add
xchg
xchg
pop
dec
ret
adcl
mov
or
sub
inc
mov
fnsave
cmp
aad
xor
push
xor
enter
xchg
daa
stos
sbb
inc
ss
hlt
in
dec
add
clc
cmove
add
enter
movsb
imul
rclb
arpl
por
test
pop
cmp
mov
mov
xchg
aam
rcrb
insb
jp
lods
add
mov
or
dec
iret
mov
repnz
push
xor
pop
mov
cmp
push
and
push
dec
and
clc
mov
mov
xchg
mov
push
mov
and
add
lahf
daa
fsubrl
mov
std
or
add
xchg
mov
cmc
push
mov
mov
daa
or
add
xor
dec
adc
hlt
mov
pusha
dec
or
add
mov
mov
fnstcw
xor
sbb
or
je
mov
dec
add
add
or
or
out
lahf
mov
hlt
mov
jnp
shl
inc
sti
add
mov
rorb
add
and
mov
mov
leave
ret
mov
mov
mov
jmp
pop
out
insl
push
inc
ret
pop
sub
cmp
inc
icebp
cmpsl
cli
out
divl
push
xor
push
xor
stc
rcl
out
test
cmp
test
sub
mov
inc
aad
subl
xchg
sbb
dec
mov
push
jbe
xor
lret
mov
add
jns
test
bound
cmp
test
mov
ss
mov
add
xor
jo
icebp
add
add
stos
adc
mov
cmp
mov
sti
or
repnz
and
sub
xor
mov
repz
cmp
mov
push
repz
xor
cmpsb
in
pop
and
or
sahf
cmp
adc
add
cmp
mov
add
adc
rep
pop
xchg
xchg
inc
adc
add
repz
jns
cmp
stos
xor
notb
add
arpl
lea
add
dec
idivb
sbb
mov
icebp
pop
shr
mov
add
sahf
xchg
fmull
inc
loope
mov
mov
ja
repnz
mov
lret
mov
dec
jbe
mov
add
adc
adc
mov
mov
add
into
adc
cmp
test
jge
roll
es
mov
js
add
add
xchg
or
add
add
loopne,pn
add
push
mov
addl
repnz
ss
jns
ja
iret
iret
xor
mov
add
cmpsb
xor
jns
mov
test
add
add
in
cmp
add
add
jp
adc
repnz
mov
mov
cmp
mov
movsb
push
mov
inc
cmc
mov
lret
add
out
loop
jmp
add
in
dec
and
jnp
test
ret
pop
inc
xchg
ss
sbb
cmp
mov
cli
gs
add
inc
mov
push
xchg
or
jno
xlat
add
or
add
mov
mov
inc
add
pop
fisttps
add
push
cmpsl
cmp
fs
pop
cmc
lods
push
xor
jb
clc
mov
cmc
pop
daa
sub
add
sbb
into
jg
out
xchg
sub
add
inc
and
add
notb
cld
sub
mov
cwtl
mov
cmp
adc
add
mov
je
or
add
out
clc
subl
sub
dec
shll
and
add
mov
repz
jae
icebp
dec
mov
shrl
lods
add
cmp
iret
add
scas
out
dec
pop
mov
push
pop
lret
mov
jb
insl
add
jns
pop
cli
jns
in
icebp
jmp
std
test
lret
inc
inc
mov
add
fdivr
js
cmp
mov
mov
add
jp
int
mov
imul
push
pop
and
xchg
cmpsb
xor
mov
jbe
dec
sbb
int
pop
xchg
sub
and
mov
pop
ja
jo
xchg
add
and
int
cmc
js
mov
pop
lds
jbe
clc
mov
push
sbb
and
cs
jno
bound
lods
bound
outsb
mov
jo
leave
insl
sub
add
andb
add
jg
pop
je
jle
inc
add
inc
jg
ljmp
ret
je
bound
aas
mov
in
xchg
je
data16
sbb
cwtl
pop
cmp
jbe
fdivs
into
add
xor
rolb
subl
lock
rolb
add
xchg
mov
popa
cmp
add
add
cmc
pushf
int
loope
cmp
jne
mov
int3
cmp
add
xchg
mov
add
sti
jb
in
inc
lret
add
sbb
add
int
push
add
inc
add
add
leave
xor
mov
add
in
repz
add
jno
ljmp
inc
dec
add
in
cmp
stos
xor
mov
cmp
add
mov
cmp
ret
negb
mov
filds
add
pop
cmp
ret
or
add
jg
mov
mov
add
push
pop
cmc
cmp
out
xchg
dec
jb
xor
lock
add
lea
cmc
ss
test
add
add
jo
int3
mov
add
ja
inc
push
add
add
in
inc
stos
mov
mov
aad
add
inc
into
add
aam
cmp
movsl
mov
sahf
add
or
shr
scas
add
lret
addr16
in
and
add
ss
mov
inc
inc
addr16
clc
sbb
add
jb
cmp
pop
xor
clc
mov
xor
cmp
fs
mov
int
sahf
leave
xchg
lock
xor
sub
jnp
std
sbb
cmc
jno
sbb
adc
int
mov
push
cmp
push
ror
pop
insb
sbbl
sbb
out
add
cmp
xchg
add
addl
insb
insb
or
pusha
loope
mov
dec
sbb
int
testl
add
xchg
loopne
mov
xchg
jge
std
jns
sbb
ret
sbb
or
pop
add
mov
xor
daa
sbb
add
test
add
popa
ret
xor
add
mov
xor
mov
xor
ret
lods
lahf
sub
xor
mov
lahf
popa
ret
call
lahf
leave
mov
xor
lahf
push
mov
jne
add
mov
add
mov
mov
add
jne,pt
or
add
in
mov
add
mov
inc
mov
test
add
cmp
jne
enter
and
icebp
movsl
mov
pop
gs
jo
daa
pop
mov
jmp
mov
mov
icebp
lea
mov
scas
jge
and
add
icebp
cmp
scas
iret
jl
sbb
jge
sbb
mov
sbb
mov
sbb
mov
push
ljmp
aaa
mov
add
jp
xor
xor
addr16
mov
or
add
ja
lret
mov
aaa
mulb
ret
add
cmp
scas
jbe
jne
mulb
push
mov
jg
add
test
mov
mov
jg
sub
daa
cmpsl
movsl
jnp
mov
jnp
mov
mov
jns
cmp
lods
mov
daa
mov
mov
mov
daa
add
add
or
ljmp
jecxz
mov
out
shrl
repz
mov
call
out
mov
icebp
mov
fcomip
pop
mov
imulb
icebp
adc
scas
sti
cli
mov
push
sti
jmp
hlt
stos
jnp
adc
daa
inc
sub
pop
inc
ja
pop
icebp
movsl
aas
repz
sub
jnp
push
inc
sub
mov
or
push
xchg
mov
cld
mov
sti
adc
cmp
stos
mov
hlt
add
movsl
mov
orb
hlt
dec
mov
cmp
cmpsl
lods
fucomip
mov
sbb
jne
addr16
cmp
stc
lock
sti
cld
jmp
idiv
cmc
pop
aaa
aaa
inc
mov
add
movsl
sbb
shll
fcompl
adc
add
jge
aad
scas
clc
int3
sbb
add
and
popa
add
mov
int3
pop
add
lock
add
add
add
jmp
add
adc
pop
add
add
pusha
jge
data16
decl
add
popa
lods
sti
out
mov
jg,pt
fadds
stc
mov
add
mov
jmp
mov
xchg
jne
jl
mov
xchg
sbb
jmp
mov
insb
add
repnz
mov
add
add
cmp
add
addl
ss
es
insb
inc
sbb
mov
mov
mov
xlat
add
pop
decl
mov
mov
mov
push
pushf
add
xor
add
and
leave
es
jecxz
ljmp
int3
sbb
add
movsb
mov
movsb
adc
ja
dec
and
faddl
add
xchg
stos
xor
xchg
hlt
rol
sub
mov
xchg
lea
movsl
add
enter
mov
xchg
mov
hlt
add
inc
lods
inc
call
fnstenv
lock
loopne
and
jns
push
aad
xor
divl
popa
les
add
pop
inc
add
xchg
adc
add
add
insb
das
decb
fadds
add
je
sbbb
jne
out
and
jne
jae
jne
outsb
and
fstps
jge
ficoml
fcom
mov
jle
add
mov
sahf
stos
lret
pop
xor
or
mov
mov
aas
imul
aam
ret
les
add
cmp
or
pop
mov
push
icebp
imul
jae
outsl
popf
dec
mov
sub
add
outsb
adc
xchg
fiadds
jle
fsubs
test
addl
or
hlt
pop
scas
in
jg
mov
jg
jbe
push
push
and
pop
add
movsb
push
dec
rorb
pop
adcb
or
add
fimull
add
jecxz
addb
push
add
or
leave
adc
push
sub
ret
jno
outsb
inc
cwtl
outsb
push
and
inc
dec
pop
add
sbb
mov
jne
enter
xor
mov
cli
cld
shlb
lea
imulb
scas
mov
insl
ja
add
add
push
decl
sbb
add
push
mov
mov
dec
shlb
sti
xor
mov
add
add
cmp
call
test
xor
repnz
scas
add
iret
push
rolb
sbb
adc
pop
push
or
add
ja
push
enter
cwtl
aaa
repnz
or
dec
push
lods
aaa
shrb
add
pop
rcrl
jmp
jno
insl
sbb
lea
add
mov
incb
add
sub
scas
push
mov
add
arpl
iret
addb
add
jle
push
bound
adc
lock
mov
add
add
scas
cli
xor
push
mov
and
push
cmpsb
das
into
popf
push
or
stc
cs
mov
and
sbb
adc
mov
aam
lds
rolb
pusha
dec
ret
mov
pop
add
ds
add
and
mov
sub
inc
mov
pushf
out
inc
adc
add
fs
pushf
loopne
cmpsl
and
ret
mov
jns
sbb
xor
sbb
adc
xchg
std
lds
fnstcw
loopne
sar
add
add
je
je
lds
sub
mov
add
mov
mov
dec
sub
add
ror
add
movsb
xchg
out
outsb
pop
mov
mov
popa
aaa
rolb
in
popa
decb
sbb
aad
out
std
push
add
add
outsb
pop
lcall
out
faddl
out
incb
add
mov
inc
pop
push
mov
loopne
add
nop
add
pop
inc
fldenv
fmull
add
push
and
jp
add
hlt
push
into
and
enter
test
add
test
lods
xorb
nop
stos
jno
mov
rol
jge
fisttpl
push
inc
inc
add
lods
xchg
mov
pop
addr16
xchg
shr
imul
dec
repz
dec
mov
bt
cmp
lcall
shr
add
xlat
jl
shll
xor
or
dec
inc
mov
pushf
idivl
outsl
dec
xchg
add
push
es
push
stc
cmpb
loopne
mov
outsl
pusha
icebp
stc
addr16
add
das
int3
data16
mov
push
jle
jns
int
pop
mov
or
insb
in
loop
dec
add
sub
add
jne
add
out
pop
pop
pop
shlb
mov
add
outsl
mov
xchg
push
out
and
mov
sbb
sarl
xorb
dec
mov
lret
subl
jl
das
mov
add
in
popa
xchg
inc
insb
mov
and
jbe
mov
and
movsl
jb
and
add
adc
mov
das
daa
cmp
lods
jo
dec
jecxz
xchg
jecxz
ret
cwtl
and
addr16
mov
add
popa
inc
insb
add
into
adc
cmpsl
or
test
add
adc
sbb
int3
adc
add
xchg
mov
and
pop
jbe
movsl
pusha
out
mov
add
sbb
and
adc
jecxz
movsb
lods
jge
icebp
inc
adc
jp
adc
data16
jnp
dec
push
fwait
nop
jo
push
dec
xchg
push
mov
add
lret
xchg
push
jno
js
jp
out
mul
out
bound
stos
lds
cmp
xor
mov
xchg
int3
push
add
cmpsb
cld
arpl
std
push
mov
mov
pop
jle
or
add
aad
mov
imul
sbb
mov
cmp
add
aas
sbb
rolb
into
and
pop
sub
shll
test
in
push
rol
cmpsl
xor
mov
adc
mov
jne
ja
mov
xchg
std
jge
add
lret
out
or
add
jl
mov
jl
ds
jns
mov
fwait
movsb
adc
mov
test
add
stc
shrb
add
fsubrl
mov
cmpsb
mov
cmc
jns
add
add
add
icebp
cld
sub
adc
fsubs
jns
enter
cmovg
inc
adc
add
add
lods
and
xor
sbb
jae
lock
or
xchg
pop
sub
lock
add
add
pop
push
dec
adc
add
mov
rcrb
sbb
fisubl
mov
mov
call
dec
les
or
fcomp
rol
jmp
sub
add
sub
cmp
xchg
in
scas
add
jge
add
stos
xor
mov
mov
lcall
mov
cwtl
sbb
cmp
loop
xlat
add
lods
add
xstore-rng
cmpsl
add
out
mov
or
mov
xchg
imul
mov
xchg
subl
xchg
mov
shrl
insb
into
shll
je
fdiv
jl
xor
out
add
push
inc
and
mov
cmpsl
popa
sub
mov
rcrl
add
fimull
add
add
cmp
shl
jp
push
xchg
test
push
lret
jmp
adc
lock
pop
push
int3
nop
add
sub
pop
mov
mov
mov
pop
adc
jns
add
outsb
inc
mov
lcall
add
add
loop
out
addr16
neg
leave
jb
fisubrs
xchg
dec
mov
xor
adcl
es
xor
inc
mov
add
adc
mov
add
mov
inc
addb
arpl
ficoms
pop
testl
pop
jb
dec
and
gs
cld
adc
inc
outsl
add
mov
das
lret
out
in
in
cld
es
jmp
cmpsl
xchg
xchg
jno
cmp
inc
dec
add
adc
ja
ret
add
aad
xchg
push
dec
cmpsb
add
inc
mov
pusha
mov
lods
jo
sbb
mov
xchg
push
jnp
aam
jnp
aas
xchg
fimuls
add
fidivrs
outsb
add
jl
cmovl
loopne
mov
jg
cmpb
lret
test
sbb
arpl
add
jle
jp
dec
inc
jge
inc
mov
add
add
daa
adc
jnp
cmp
cmpsb
pop
mov
sub
sub
add
daa
sub
adc
cmpsb
sahf
mov
sbb
inc
repnz
mov
mov
pop
jns
fadd
xor
add
into
dec
roll
add
cmp
dec
xor
shrl
daa
push
cmpsl
aam
ljmp
xlat
les
add
dec
cli
adc
add
xor
cmp
cmp
add
lahf
dec
mov
idivl
mov
aad
mov
js
jecxz
ret
sub
fistl
sbb
fisttpll
add
dec
xchg
add
in
out
jg
fists
mov
subl
jmp
imul
fists
xchg
in
push
pushf
mov
lahf
ja
inc
addl
and
mov
inc
xor
add
fmull
add
inc
cmovne
add
fstpl
or
lret
mov
jmp
xchg
bts
sub
sbb
rol
xchg
jno
or
add
stc
insl
inc
and
pop
push
sbb
add
sub
dec
incl
add
repz
pop
add
js
loope
icebp
mov
add
or
add
add
push
mov
pop
enter
popa
jp
out
mov
adc
fcomi
adc
add
pop
push
jge
sbb
fwait
adc
cvtps2pi
repnz
jmp
add
popf
mov
xchg
fiaddl
cli
pop
push
mov
add
aas
sbb
cmp
inc
add
mov
inc
rclb
and
jnp
cmp
inc
aam
pop
rorl
je
sahf
push
cwtl
mov
push
fisubrl
cltd
sbb
adc
int
push
shll
push
gs
repz
cwtl
fs
testl
jle
lds
jnp
cmp
fs
push
cmp
faddp
push
add
push
push
jae
ret
repnz
push
cmp
and
sbbl
sbb
popf
or
add
jmp
lock
int
push
add
sbb
inc
cmp
daa
push
and
insb
xor
hlt
jle
movq
cmp
cmpl
mov
inc
push
sub
mov
ljmp
add
add
inc
sti
divb
inc
or
cld
es
lret
push
cmpsl
cmp
negb
xor
push
rclb
fstpl
inc
mov
pop
add
add
test
adc
and
hlt
rclb
in
roll
mov
mov
scas
xchg
xor
das
xchg
push
jne
sbb
hlt
imul
pop
cs
jno
pop
addr16
lods
xor
aad
mov
outsl
push
add
xchg
jge
xor
mov
adc
cltd
test
fincstp
fidivl
mov
cmc
ja
xor
addr16
enter
stos
cmp
popf
add
add
sbb
add
xor
loop
push
sbb
dec
mov
add
mov
push
jns
out
ljmp
add
sbb
insb
subb
movsb
insl
cli
fsubrs
ljmp
cmp
out
xor
mov
subl
and
add
mov
lds
incb
test
mov
or
add
sbb
pop
js
out
std
sbb
and
lahf
sbb
xchg
repnz
add
lods
mov
orl
pop
or
inc
dec
push
push
jne
xchg
sub
push
add
add
data16
push
mov
xlat
xchg
pop
shlb
mov
lahf
dec
nop
repz
xchg
jb
push
jg
add
add
shrb
push
lahf
clc
push
add
push
mov
test
add
mov
push
sub
dec
pushf
mov
mov
hlt
hlt
or
in
mov
or
add
mov
add
ror
xor
rcl
dec
dec
pop
add
and
pop
cwtl
mov
fwait
inc
push
mov
loope
cmc
xor
lods
test
stc
mov
add
in
dec
bound
lods
popf
mov
mov
enter
sarb
add
xchg
inc
arpl
in
ja
mov
mov
jp
inc
sahf
nop
int
jnp
add
das
ljmp
jnp
mov
dec
pop
add
out
jmp
jae
lods
push
pop
dec
inc
add
push
iret
ret
ret
call
xchg
xor
iret
stos
mov
movsl
mov
lret
cs
mov
and
jnp
mov
out
or
add
jecxz
stos
pop
repz
add
cmpsb
cmpsb
cmpsb
test
add
inc
cltd
add
aad
out
dec
dec
pop
add
aad
clc
and
xor
int
lods
jmp
insb
lret
pushf
fdivs
shlb
inc
xor
dec
jbe
out
cmp
std
xor
stc
mov
js
negb
jmp
push
push
cmc
movsl
push
push
cmp
data16
add
add
and
ss
mov
es
and
fldl
sbb
mov
add
dec
imul
dec
in
add
into
sbb
aaa
jge
cmpsb
int
mov
mov
jbe
notb
cmpsl
mov
xchg
push
add
add
push
nop
jne
negl
stos
cs
imul
pushf
lea
orb
add
add
sbb
out
scas
xchg
push
mov
pop
add
push
scas
sarb
out
aas
out
push
shrl
scas
cmpb
sbb
frstors
add
imul
lahf
pop
pop
movsb
or
jmp
adc
ret
imul
fsubrs
scas
jl
rcl
cmc
inc
es
dec
lea
nop
orl
sbb
mov
jp
add
ficoms
ret
adc
filds
add
push
pop
popa
jne
xchg
test
push
fcmovbe
jg
xchg
ret
mov
mov
push
add
insb
pop
add
insb
aad
dec
mov
cmpsb
jmp
xor
adc
dec
and
jb
gs
es
ja
xchg
or
xchg
xor
imul
popa
jecxz
pop
xor
dec
les
add
hlt
mov
xchg
mov
and
adc
or
dec
test
xchg
leave
mov
jbe
jge
sub
dec
xchg
ds
xor
jg
add
mov
das
inc
pop
lock
mov
fnstenv
inc
nop
add
and
mov
cltd
mov
pop
mov
add
loope
mov
cmp
mov
int
xorl
add
add
xor
xor
xacquire
mov
aas
adc
xchg
insl
pop
les
add
cltd
outsl
aaa
jmp
mov
sub
add
xchg
les
add
lods
out
cmp
or
gs
out
xchg
call
xchg
lods
pop
imul
test
pop
popf
jne
in
icebp
cmc
add
add
aam
test
ss
mov
jge
insl
adc
cmpsl
sbb
or
inc
add
mov
add
or
push
std
outsb
xchg
mov
fldenv
hlt
lock
xchg
add
andl
pop
xor
out
sub
andb
add
shlb
pop
cmpsb
cmp
popf
pop
cmpsb
pop
sbb
dec
jge
ret
cmp
scas
jb
inc
pop
cltd
mov
add
out
mov
and
mov
pop
xchg
mov
out
pop
mov
push
xor
cltd
adc
add
in
cli
clc
fwait
dec
xlat
add
test
arpl
cmpsb
sarb
or
aas
xchg
inc
jmp
add
and
loopne
into
sbb
jae
cmp
out
add
sbb
add
imul
imulb
into
scas
jmp
or
add
stos
ljmp
in
adc
add
dec
insb
adc
sbb
add
jp
xchg
jae
add
arpl
add
xchg
pop
mov
fwait
jb
lods
mov
inc
mov
add
pop
test
and
andl
sub
cmp
xchg
fs
dec
xor
sbb
jnp
mov
and
in
mov
fstl
scas
jns
test
add
js
xchg
add
clc
imul
push
stos
add
orb
pop
add
sub
inc
mov
pop
push
fs
into
ljmp
sub
addl
mov
aam
push
lea
sti
cmc
test
mov
lahf
pop
negb
lcall
jge
test
aam
jns
pop
dec
push
sub
mov
rorb
adc
sub
add
lret
rorl
xchg
scas
or
add
cmpsb
add
mov
movsl
add
imul
jp,pt
xchg
add
push
stos
pop
insb
je
jae
cs
sbb
add
mov
adc
pop
add
mov
cmp
jmp
xchg
mov
dec
mov
mov
fs
jg
repz
cmp
fimull
mov
imul
add
pop
sub
add
insb
xor
jae
cmp
mov
jecxz
or
insl
mov
jo
les
aas
add
imul
mov
or
mov
inc
outsl
mov
mov
out
es
jae
mov
add
and
icebp
cmpsl
popa
and
xor
xor
mov
andb
fadds
add
std
xchg
xchg
sub
hlt
xchg
sub
dec
call
add
sbb
add
jmp
mov
ja
aas
ret
push
jbe
inc
add
or
add
neg
push
cltd
ret
ja
cmp
sub
cmp
add
pop
push
pop
loop
lods
xchg
stos
inc
sbb
add
insb
outsb
scas
pop
es
xchg
sti
pop
mov
addb
data16
push
push
fmul
adc
add
pop
mov
add
lret
fiaddl
add
loopne
mov
mov
add
into
add
xchg
mov
mov
jl
cs
cmp
aad
or
add
cmpsb
sub
adc
stc
lcall
jo
sar
add
imul
dec
xor
dec
sub
jbe
dec
add
add
jecxz
pop
sbb
clc
mov
xchg
mov
add
xor
in
xchg
jns
in
dec
cmpsl
in
push
dec
sti
decb
add
sti
in
sahf
or
add
mov
pop
pushw
lock
sub
add
scas
hlt
sub
stos
pop
sub
rorl
scas
fistps
repz
mov
fs
gs
rcrb
inc
outsl
add
pop
mov
or
add
pop
cld
ja
jnp
icebp
dec
js
andl
adc
scas
sub
pop
or
add
cmc
sbb
aas
mov
add
add
in
inc
mov
rcl
add
mov
mov
xorl
clc
cmpsl
je
adc
mov
mov
arpl
fwait
out
ror
in
movsb
int
ret
adc
mov
sbb
sahf
mov
cmp
mov
add
stos
repz
pop
cld
or
inc
jl
hlt
mov
aad
sti
add
pop
mov
dec
add
adc
inc
sahf
mov
cwtl
push
stc
outsl
test
fwait
mov
ljmp
dec
mov
add
jae
mov
aas
cmp
add
fs
imul
cli
jnp
mov
mov
push
mov
and
add
cmpsb
fsub
test
imul
iret
cld
rcr
xor
xor
and
mov
out
cli
pusha
scas
xchg
stos
push
rcrb
lret
rcrl
jbe
std
inc
adc
popf
cmp
add
ljmp
push
mov
add
pop
mulb
sbb
jb
mov
sti
in
xlat
sub
dec
movsl
mov
fs
or
arpl
setbe
dec
inc
jae
pop
stos
int
pop
add
mov
mov
push
adc
js
das
add
aaa
imul
inc
add
cli
xlat
cmp
pop
ret
push
add
sub
cmc
sub
or
add
sbb
adc
clc
lret
jne
arpl
sbb
or
add
jmp
push
mov
fnsave
sbb
mov
add
xor
shl
add
nop
mov
xor
add
idivl
in
fs
jns
gs
imul
push
cmp
sub
push
testl
mov
popl
add
sbb
loop
test
add
push
push
mov
add
and
repz
les
add
cmp
jmp
add
test
pushf
cmpb
sti
pop
movsb
lret
push
or
sar
add
scas
sbb
xlat
lock
xor
pop
dec
data16
mov
add
fistpll
mov
out
xchg
or
out
dec
filds
add
into
and
pop
inc
sbb
clc
push
enter
xor
dec
mov
add
push
stc
pop
push
adc
repz
insl
repnz
aas
add
daa
push
mov
mov
add
xchg
push
mov
dec
xlat
test
rcr
in
mov
lds
lcall
or
add
or
add
hlt
scas
ret
scas
addl
pop
inc
test
mov
add
cmpsb
in
and
pop
dec
xlat
mov
inc
add
fwait
add
sub
add
add
sarb
cmpl
pop
inc
out
shrb
nop
xchg
inc
push
add
call
cltd
ljmp
stc
in
adc
adc
ds
cmp
and
ss
xor
push
decb
maxps
mov
add
aad
into
sahf
testl
hlt
out
add
outsl
mov
mov
add
mov
xor
outsb
xor
xor
adc
xchg
cs
dec
sbb
add
or
add
and
test
add
rolb
add
sti
pavgb
testl
mul
push
stos
das
ror
scas
repnz
out
mov
mov
loope
add
add
xor
dec
jne
mov
add
cmc
sbb
fstps
xor
mov
aaa
mov
cmp
mov
jne
fcomip
mov
jbe
data16
fdivl
lea
push
lock
adc
std
or
aam
sbb
or
pop
cmpsb
jbe
jp
iret
mov
loopne
xchg
mov
add
imul
les
add
adc
jle
testl
movsl
jae,pt
pusha
popa
pop
add
shll
jo
and
cmp
push
xchg
inc
mov
mov
pop
outsb
jb
shlb
repz
mov
xor
add
fiaddl
mov
xchg
popf
push
push
adc
jne
test
mov
call
sahf
xchg
pusha
mov
lret
xchg
jle
pop
cli
stos
imul
ret
lods
pop
inc
test
sub
xor
arpl
stos
and
or
add
mov
sub
shrb
inc
push
loop
dec
out
add
cwtl
or
add
stos
sub
iret
rcll
adc
in
loopne
add
jecxz
or
data16
orb
mov
test
out
les
add
jo
inc
pushf
add
inc
fwait
add
mov
shl
test
or
mov
add
mov
ficoms
movsl
adc
mov
add
testl
mov
add
jns
xchg
jg
or
add
int
lret
xchg
stos
sub
push
mov
cmpsb
xlat
sbb
mov
sbb
rcl
add
aas
aam
inc
pusha
inc
cmc
int
sbb
sub
xor
xchg
nop
repz
and
push
addl
cmp
dec
push
test
push
cltd
mov
sub
fs
fiaddl
dec
inc
lret
xchg
cmp
push
shlb
add
adc
stos
adc
incb
add
and
into
push
icebp
or
pop
arpl
je
push
arpl
cmp
dec
push
dec
ds
inc
inc
mov
add
aaa
out
sbb
mov
int3
jae
add
jae
xchg
lock
mov
add
xchg
pop
jno
in
in
outsl
mov
lods
inc
outsb
add
je
pop
imul
mov
jne
ret
or
enter
in
scas
fstl
or
fsubl
pop
outsl
clc
jge
shll
out
daa
mov
imul
scas
inc
xor
cmp
test
add
pop
adc
loop
shrl
aaa
mov
test
fs
into
add
push
sub
push
in
xor
or
sub
outsl
mov
insl
cmp
cmpsl
nop
lock
add
in
mov
sbb
mov
adc
mov
js
add
push
xchg
pop
daa
ffree
mov
das
xor
repz
in
out
scas
cld
rcl
sahf
test
hlt
inc
adc
pop
adcb
cmp
xchg
clc
mov
fstpt
jle
aas
or
add
add
pop
int
les
jb
mov
dec
popa
aad
sbb
testb
pop
rcl
add
in
outsl
add
push
outsb
jg
xlat
sbb
rolb
mov
add
ss
imul
ja
jae
pop
or
add
xor
pop
vpmacssdql
and
xchg
or
sbb
into
pop
clc
sub
jle
add
scas
or
add
in
cmp
nop
add
scas
and
push
out
mov
imul
add
inc
mov
ss
or
add
jg
daa
sbb
inc
cltd
xchg
out
push
xor
jae
adc
pop
dec
mov
or
fwait
pushf
popa
push
cmp
cmpsb
out
stos
lods
pushw
cs
out
mov
icebp
or
add
cmp
dec
sbb
add
mov
xlat
jb
jno
pop
dec
fisubs
aad
orl
add
mov
std
or
in
push
jecxz
jo
dec
je
and
sbb
add
sub
jbe
adc
inc
dec
add
jge
or
mov
push
xor
push
je
stos
or
sti
movsl
movsl
fwait
mov
adc
fs
jo
iret
pop
sub
aam
adc
add
push
aaa
rorb
add
sbbb
mov
or
cld
sbb
roll
pop
subb
mov
inc
shl
mov
gs
cmp
xor
add
mov
movsb
add
cli
fwait
enter
imul
sub
xlat
sbb
mov
xchg
pop
outsb
ja
out
add
cwtl
in
sbb
and
aaa
test
rcll
and
lods
loope
clc
mov
dec
pop
add
les
add
sub
xchg
pop
jecxz
and
mov
repz
movsl
test
push
add
pop
out
and
insl
outsb
mov
add
je
cmc
movsb
or
mov
dec
outsl
fldl
shrl
adc
cmp
push
mov
inc
adc
add
cmpsb
jmp
rol
ss
and
pop
add
and
jns
out
jae
jg
pop
add
add
movsb
insl
xchg
and
push
add
fdivs
dec
ja
sub
push
cmc
pushf
fcom
repnz
mov
scas
or
inc
addl
xchg
mov
xchg
sti
xchg
jl
inc
push
int
and
push
pop
lods
lahf
mov
insl
jb
xchg
adc
aas
aaa
fidivrl
add
add
and
dec
mov
push
sbb
cwtl
cmp
scas
pop
jae
and
pop
stos
mov
or
add
lahf
loop
push
ds
jle
ja
dec
es
adc
dec
in
add
ds
mov
rep
shl
push
pop
mov
pop
lods
jne
mov
stos
pop
and
arpl
aaa
imull
ljmp
addr16
xor
xlat
or
mov
add
cmpsl
push
dec
and
test
lods
mov
fcmovu
minps
sbb
mov
popa
mov
add
push
mov
add
jb
int
add
mov
movsl
or
push
mov
pop
ret
addr16
fidivl
cmpsl
pushf
out
loop
mov
faddl
add
or
flds
add
add
insl
pop
fcoml
aaa
movsl
mov
outsl
cmp
jbe
and
mov
ret
ror
or
dec
sti
popf
filds
lahf
and
cmp
mov
in
add
xchg
or
sbb
fadd
or
pop
inc
pop
adc
add
fmuls
movl
push
mov
rcll
sarb
pusha
xor
int3
cmp
add
int
cmp
xchg
out
push
push
in
decb
add
xchg
inc
clc
or
loop
add
lcall
add
clc
xor
pop
cmp
dec
lods
mov
sbb
int3
test
add
add
leave
loop
cmp
gs
add
add
xchg
mov
icebp
or
add
push
sbb
je
jae
ljmp
push
mov
in
clc
xor
push
sub
inc
subl
mov
pop
xchg
pop
sub
jmp
je
imull
and
add
icebp
mov
daa
out
add
fdivs
cmp
add
sub
mov
fsub
stc
mov
inc
nop
add
pop
inc
xlat
or
gs
lock
scas
adc
jnp
dec
push
add
loope
sub
jbe
idivl
jb
enter
lods
xchg
ficoml
sub
rcl
ret
push
or
lods
popf
flds
ljmp
jg
mov
jb
or
in
in
mov
add
ja
jnp
inc
add
mov
cmc
add
sub
sbb
sahf
mulb
mov
nop
sti
xlat
pop
sub
mul
lcall
xchg
pushf
add
in
lods
inc
idivl
mov
sbb
cmp
lret
pop
mov
mov
inc
ds
decb
add
xor
movsl
push
inc
ds
pop
xchg
sub
add
or
pop
push
dec
pop
test
sbb
lcall
mov
mov
fdivrs
data16
test
add
mov
mov
pushl
idivl
sti
mov
dec
mov
test
aad
inc
pop
in
inc
aam
add
stc
stos
pop
out
sahf
mov
mov
js
out
pop
cltd
sub
dec
or
mov
fldenv
loopne
pusha
pop
push
mulb
mov
inc
jge
add
add
pop
jmp
dec
bound
add
fnstsw
js
movsb
stos
or
push
sahf
fwait
cltd
ret
mov
dec
mov
loop
mov
add
add
sub
or
add
dec
test
insl
arpl
pushf
arpl
cmc
pop
iret
xor
add
or
xchg
leave
es
jo
fisubrs
ret
lods
jecxz
scas
push
pusha
mov
jge
leave
mov
add
pop
testb
fildll
cmp
sbb
orl
dec
cld
jb
push
add
mov
clc
mov
movsb
add
test
inc
dec
lds
add
and
sbb
mov
or
mov
inc
stc
jge
outsl
add
das
orl
sbb
mov
sbb
jle
outsb
ss
adc
in
in
nop
in
popf
xchg
cmp
add
and
add
loope
icebp
inc
data16
jecxz
jno
cmpsb
popa
cmpsb
xchg
xor
push
jo
and
lret
jo
lea
push
ss
xchg
bnd
adc
loope
jge
sahf
jne
push
cs
xchg
bnd
sub
mov
lahf
cs
jl
push
cs
lea
xacquire
es
mov
adc
mov
loop
in
add
add
pushf
andw
popf
jae
mov
mov
mov
add
and
add
mov
mov
loope
mov
mov
andb
mov
or
jl
mov
push
es
mov
jge
jle
or
jge
adc
or
mov
testl
add
add
push
mov
adc
mov
mov
jle
inc
ret
repz
nop
ss
lea
xacquire
ds
scas
inc
and
cs
add
push
pushf
andw
popf
jae
sub
push
inc
mov
or
mov
inc
mov
fsubl
add
dec
test
or
jge
and
cmp
pop
pop
mov
nop
ss
jle
or
jle
jle
dec
addr16
test
add
fsub
icebp
sti
je
push
ss
cs
xrelease
bnd
and
dec
aas
call
repnz
adc
test
jle
adc
mov
pop
rcll
adc
adc
mov
int3
int3
int3
add
add
jne
pushf
andw
popf
jae
cld
loope
fimuls
mov
scas
mov
pushf
andw
popf
jae
dec
mov
mov
xorb
mov
mov
cld
bnd
mov
fidivrs
mov
mov
jl
dec
mov
xchg
je
push
nop
repz
nop
xchg
repz
push
mov
mov
test
add
sbbb
andw
popf
jae
jle
mov
mov
rcll
inc
mov
scas
lahf
cmpsb
leave
repnz
sbb
mov
mov
adc
mov
cs
fimuls
and
shlb
andw
popf
jae
mov
mov
mov
dec
jge
adc
sub
and
aam
mov
pushf
andw
popf
jae
mov
mov
dec
push
and
mov
andw
popf
jae
and
or
sbb
ret
nop
pushf
andw
popf
jae
lahf
or
addr16
and
addr16
add
nop
cs
mov
dec
insl
loope
test
dec
sbb
adc
mov
nop
ds
mov
insl
addr16
jge
cmpb
mov
or
add
rolb
jmp
addb
addr16
inc
and
addr16
mov
and
and
incb
popf
jae
and
loope
lahf
and
andb
cld
push
int3
int3
int3
add
add
jne
cs
shll
or
and
addr16
test
sbb
pop
imul
lea
xacquire
cld
ret
mov
dec
mov
sub
pop
scas
and
flds
add
test
push
add
pushf
andw
popf
jae
adc
mov
sbb
shr
push
ds
xchg
cld
ret
mov
insl
jge
loope
lahf
icebp
imul
add
mov
and
mov
mov
pop
mov
and
adc
add
in
idiv
push
add
cld
repz
xchg
bnd
mov
and
dec
cmp
jbe
pop
push
nop
ss
adc
and
mov
scas
inc
mov
jl
mov
push
push
cld
es
cld
xchg
cs
jge
mov
mov
cld
addr16
int3
int3
add
add
push
bnd
mov
mov
cld
mov
mov
inc
jl
mov
adc
scas
push
addr16
pop
pushf
andw
popf
jae
cs
jl
addr16
mov
mov
lods
add
movswl
cld
bnd
jge
or
mov
loope
fisubrs
lahf
ficomps
sub
repz
push
and
test
sbbb
mov
mov
sub
insb
loopne
mov
repz
fidivs
jle
mov
scas
jl
lahf
inc
adc
mov
pushf
dec
je
pushf
andw
popf
jae
and
sub
push
mov
scas
dec
test
lret
add
bnd
orb
and
mov
and
mov
in
mov
pushf
andw
popf
jae
test
and
jge
mov
mov
pushf
andw
popf
jae
adc
and
lahf
mov
shll
scas
inc
inc
push
ds
xchg
cld
ret
ficoms
test
or
jns
jmp
push
cs
xchg
nop
ret
loope
rorl
mov
scas
insl
jle
cmp
cld
nop
es
or
xorb
mov
mov
sbb
bnd
adc
sub
adc
push
mov
dec
mov
sub
decl
repnz
jmp
adc
jge
mov
pop
mov
push
mov
pop
and
rcrb
repz
jl
mov
jl
or
jge
or
and
pop
mov
pop
ret
ds
mov
fidivs
dec
jle
dec
andb
pop
dec
loope
pop
int3
int3
int3
add
add
add
add
adc
cld
cs
xrelease
repz
adc
sub
pop
and
pop
bnd
mov
dec
and
mov
mov
mov
shll
mov
dec
sbbb
dec
adc
add
add
test
sbb
mov
and
add
add
add
or
loope
mov
rcrl
inc
mov
int3
int3
add
add
shl
jmp
mov
mov
jge
and
mov
and
test
loope
int3
int3
int3
add
add
loopne
add
pushf
andw
popf
jae
mov
mov
shll
or
and
bnd
mov
mov
inc
popl
adc
mov
or
pushf
andw
popf
jae
and
jl
cld
mov
mov
test
add
jne
pushf
andw
popf
jae
dec
mov
sbb
mov
aad
test
cld
ss
jmp
mov
or
jl
rcll
cs
lahf
roll
fisttpl
andl
xorl
add
adc
fidivs
mov
xchg
mov
add
pushf
andw
popf
jae
mov
mov
insl
mov
cld
fidivrs
mov
repnz
jmp
dec
jle
pop
mov
push
scas
or
fdivrp
dec
andb
or
add
add
mov
mov
and
add
pause
jmp
jle
sbb
dec
cs
dec
inc
lahf
dec
adc
pop
jno
pusha
pushf
andw
popf
jae
mov
mov
sbb
mov
sub
test
push
cld
ss
xrelease
es
mov
scas
push
and
adc
sahf
push
push
ds
mov
xchg
es
mov
dec
scas
and
lahf
mov
or
and
cld
es
dec
mov
sub
mov
sbb
and
popl
aas
mov
push
ds
cld
xchg
ss
sbb
dec
adc
sub
dec
xor
add
cs
mov
mov
jge
and
test
push
pushf
andw
popf
jae
insl
cs
and
shll
push
mov
mov
rorb
andl
sbb
add
dec
sbb
mov
fidivs
ds
mov
scas
mov
mov
inc
sub
mov
mov
lahf
and
pop
add
andl
addl
add
insl
mov
cs
lahf
mov
or
add
es
cs
ficomps
loope
xorb
addr16
fnstsw
dec
add
push
cs
xrelease
ss
sbb
cmpb
jl
push
pushf
andw
popf
jae
test
mov
jge
mov
loope
mov
andw
popf
jae
dec
andb
adc
mov
mov
dec
mov
dec
into
int3
int3
int3
add
add
push
cld
es
xacquire
ss
mov
addr16
mov
mov
adc
and
je
ds
or
or
push
fsubp
and
insb
out
add
pushf
andw
popf
jae
mov
scas
fimuls
shll
pop
mov
jmp
and
incb
popf
jae
cs
dec
lahf
or
mov
adc
add
pushf
andw
popf
jae
pop
mov
sbb
shll
fidivrs
xor
lret
pop
push
cs
lea
nop
xchg
repz
mov
scas
mov
mov
dec
add
add
divl
es
mov
cld
dec
dec
jle
scas
sbb
dec
mov
addr16
inc
push
ds
cld
xchg
bnd
mov
faddp
sbb
or
or
mov
nop
repz
cld
loope
and
or
and
pop
cld
ds
mov
adc
test
addb
mov
andb
out
pushf
andw
popf
jae
dec
cs
adc
and
cmpb
dec
rorl
andw
popf
jae
mov
and
and
push
mov
pushf
andw
popf
jae
inc
insl
jge
sbb
or
mov
daa
int3
int3
int3
add
add
mov
pushf
andw
popf
jae
orb
mov
dec
dec
jle
mov
cld
cld
jmp
sbb
mov
mov
adc
orb
loope
mov
sub
rorl
and
ds
jmp
sarl
mov
loope
and
addb
outsl
inc
repnz
jmp
insl
cs
mov
mov
loope
scas
sub
cld
jge
and
addr16
std
mov
or
rclb
cs
cld
xchg
ds
adc
mov
adc
pushf
andw
popf
jae
scas
lahf
test
cld
rorl
jl
sub
and
out
test
cld
cs
sbb
dec
dec
dec
mov
and
dec
and
mov
pusha
nop
bnd
addr16
cld
mov
test
and
jle,pn
mov
mov
bnd
sbb
mov
or
and
loope
sub
pop
push
nop
repnz
cld
xchg
repz
mov
jle
lahf
sbb
call
pushf
andw
popf
jae
dec
and
dec
jle
mov
addr16
ret
push
ds
repz
nop
xchg
repz
mov
jl
mov
adc
pushf
andw
popf
jae
insl
and
jge
mov
adc
shll
std
call
cs
xacquire
ss
sbb
pop
mov
loopne
add
sbb
shl
cs
sub
adc
dec
sbb
dec
or
mov
mov
lds
shl
pushf
andw
popf
jae
adc
insl
and
adc
cld
sub
int3
int3
int3
add
add
repz
and
or
and
insl
scas
mov
dec
and
or
mov
push
cld
repz
xrelease
ss
lahf
test
insl
dec
and
push
loopne
andw
popf
jae
jge
cld
lahf
mov
and
test
repz
adc
dec
jl
lahf
loope
and
sbb
cld
mov
jle
pushf
andw
popf
jae
mov
mov
pop
insl
dec
and
mov
notl
cld
ss
jmp
loope
fidivs
pop
dec
dec
mov
mov
mov
mov
jg
test
and
add
bnd
cld
mov
mov
scas
mov
cs
addr16
int3
int3
int3
add
add
and
incb
popf
jae
scas
mov
mov
addr16
lahf
loope
shll
lods
push
cs
xrelease
es
addr16
test
cs
ret
ss
jmp
mov
addr16
lahf
and
shll
loope
sub
mov
mov
and
es
pop
and
mov
mov
mov
mov
mov
inc
adc
andw
popf
jae
mov
mov
sub
push
and
fld
mov
push
es
repnz
xacquire
cld
ret
movb
dec
mov
dec
add
pushf
andw
popf
jae
xorb
cld
mov
dec
push
mov
cwtl
in
mov
push
cld
ds
cld
xchg
repz
addr16
and
adc
nop
repnz
cld
xchg
ds
cld
mov
mov
pop
sbb
sbb
xor
lods
pushf
andw
popf
jae
and
addr16
scas
cld
cs
pop
mov
adc
scas
jge
adc
test
es
lahf
mov
cld
fimuls
mov
jge
scas
or
cs
cmp
sti
push
push
ss
ss
nop
xchg
nop
ret
loope
mov
insl
addb
jle
cs
scas
jl
mov
mov
or
insl
mov
mov
pushf
andw
popf
jae
and
jl
test
mov
mov
scas
jle
mov
leave
int
int3
int3
add
add
les
ds
mov
adc
push
scas
fimuls
subb
adc
lahf
es
pushf
andw
popf
jae
pop
loope
mov
and
sbb
movl
ds
mov
or
scas
mov
ficomps
pop
xorb
mov
andw
popf
jae
dec
and
mov
adc
loope
loope
scas
cs
ss
mov
or
sbb
jl
out
int3
int3
add
add
pushf
andw
popf
jae
and
mov
mov
mov
mov
andw
popf
jae
scas
loope
addr16
cs
rol
addr16
scas
sub
push
cs
jmp
scas
mov
mov
jge
or
xorb
jo
daa
mov
push
ds
ds
cld
xchg
nop
ret
mov
push
jl
mov
cld
test
nop
cld
lea
xchg
cs
adc
and
adc
shr
stos
nop
nop
cs
inc
mov
or
insl
mov
mov
mov
dec
mov
add
add
add
mov
cs
or
mov
scas
mov
push
mov
cld
and
rcrl
out
outsl
ss
adc
mov
sub
sbb
insl
and
test
add
div
movsl
pushf
andw
popf
jae
mov
test
mov
and
sub
mov
mov
sub
add
add
sbb
sub
adc
mov
pushf
andw
popf
jae
mov
jle
inc
and
addr16
mov
push
pause
cs
mov
push
mov
mov
mov
mov
mov
sub
mov
cs
icebp
cs
loope
push
mov
xorb
cs
and
test
ds
rorl
mov
mov
jge
sub
fidivs
jge
andb
add
andw
popf
jae
jle
dec
and
jl
jl
inc
mov
repz
nop
xchg
bnd
loope
mov
mov
pop
mov
push
mov
pushf
andw
popf
jae
mov
and
mov
mov
test
in
lcall
add
add
jge
push
jle,pn
fidivs
sub
repz
jmp
scas
dec
shll
mov
insl
mov
or
or
add
sbb
jmp
test
cld
dec
fimuls
and
loope
and
jne
cld
ds
mov
dec
adc
dec
or
pop
fisubrs
rep
bnd
jle
mov
jge
and
mov
fisubs
mov
addr16
mov
xor
pushf
andw
popf
jae
sbb
shrl
adc
mov
fimuls
cmp
inc
adc
add
add
add
and
or
push
mov
mov
xlat
mov
push
cs
mov
cld
xchg
repz
orb
sub
clc
cmpsl
mov
pushf
andw
popf
jae
fidivs
rcll
mov
adc
out
mov
es
es
push
mov
cld
adc
lahf
inc
mov
mov
mov
push
push
cld
repz
xchg
es
dec
or
and
mov
adc
andl
addl
add
mov
jge
insl
mov
cld
ss
cld
xchg
bnd
and
and
push
pushf
andw
popf
jae
mov
pop
and
fiadds
repnz
pushf
andw
popf
jae
dec
test
sbb
mov
cmp
notl
pause
es
and
sub
mov
adc
and
mov
mov
test
push
lahf
test
es
cs
lahf
dec
and
sbb
cld
mov
mov
dec
mov
push
inc
int3
int3
int3
add
add
mov
push
es
lea
cld
xchg
repz
pop
insl
and
lahf
dec
repz
nop
repz
mov
cld
fimuls
mov
sub
andb
sub
or
ss
mov
mov
mov
insl
dec
push
sub
mov
jle
pop
mov
or
nop
nop
cs
jl
orb
cs
scas
cs
cld
jl
mov
mov
popa
pushf
andw
popf
jae
scas
mov
cld
dec
mov
scas
mov
mov
incl
andl
andl
mov
loope
and
push
and
bnd
lahf
mov
jge
mov
sbb
insl
mov
insl
or
sub
add
add
add
andb
insl
lahf
scas
mov
mov
jmp
jp
ss
jmp
and
inc
and
mov
mov
push
scas
push
mov
sub
xor
cs
mov
or
and
inc
adc
mov
xor
nop
repnz
lahf
mov
cld
mov
test
jge
jge
sub
mov
add
ss
mov
mov
insl
scas
mov
adc
jge
push
mov
jle
and
mov
add
add
es
mov
inc
mov
adc
addb
sbb
mov
push
pushf
andw
popf
jae
and
sub
mov
or
mov
dec
cld
mov
jne
mov
nop
ds
loope
faddp
adc
mov
dec
or
mov
and
test
bnd
cld
orb
mov
movb
add
ds
lea
xrelease
cld
ret
addr16
mov
rorl
addr16
xor
int
push
push
es
fisubs
jge
mov
jge
loope
jle
cld
push
insl
mov
fidivs
add
add
add
add
adc
orb
dec
cmp
call
out
call
ds
mov
xchg
ss
sbb
insl
sub
jne
cld
bnd
addr16
push
sbb
mov
mov
jge
and
mov
nop
cs
mov
faddp
pop
push
adc
mov
mov
or
and
push
push
nop
cld
repnz
xacquire
repz
test
mov
mov
push
push
mov
std
out
test
cs
mov
pop
mov
and
sbb
add
add
test
shrl
scas
and
dec
mov
jl
sbb
mov
bound
cs
pushf
andw
popf
jae
mov
or
and
mov
cld
mov
cld
xchg
cs
loope
mov
scas
adc
cld
or
jne
push
repnz
xchg
nop
ret
test
push
cld
pop
mov
pushf
andw
popf
jae
mov
adc
and
mov
rorl
shr
pushf
andw
popf
jae
jle
sbb
jl
loope
mov
jge
mov
push
repz
nop
xchg
ss
mov
lahf
lahf
lahf
roll
std
xchg
fidivrs
push
cld
cld
ss
xchg
cld
ret
lahf
mov
mov
mov
or
pushf
andw
popf
jae
mov
and
adc
mov
mov
int3
int3
int3
add
add
je
jg
push
nop
cld
ss
nop
xchg
nop
ret
pop
sbb
inc
fisubrs
mov
rcl
sub
pushf
andw
popf
jae
sbbb
lahf
insl
mov
pop
addr16
jl
mov
push
ss
nop
xchg
cld
ret
xorb
sbb
bnd
scas
mov
mov
addr16
mov
cld
lahf
dec
mov
rorl
pop
adc
std
scas
decl
push
ds
xchg
cld
ret
and
fiadds
sub
adc
add
andl
subl
mov
mov
and
shll
cld
cld
lea
xchg
es
adc
mov
lahf
jle
lahf
fs
jecxz
inc
xor
push
ds
xrelease
ds
cs
adc
jno
test
ss
jl
mov
sub
lahf
xorb
and
mov
icebp
pop
int3
int3
int3
add
add
cmc
bound
add
add
mov
ficoms
scas
or
test
add
pushf
andw
popf
jae
roll
mov
dec
ret
int3
int3
int3
add
add
add
and
incb
popf
jae
mov
fidivrs
cld
cld
sub
jl
rcll
dec
test
mov
pushf
andw
popf
jae
cld
jl
scas
cs
mov
mov
push
or
add
or
and
incb
popf
jae
jl
mov
jl
mov
test
addr16
insl
sbbl
add
dec
mov
ss
insl
adc
or
loope
jge
mov
jl
mov
or
sub
inc
jl
or
add
jmp
nop
cld
repz
inc
and
push
dec
loope
cld
cld
mov
jl
adc
mov
nop
cld
jmp
mov
pop
lahf
mov
test
and
jge
push
fcoms
mov
add
add
es
mov
sub
mov
and
sbb
mov
push
fsts
sbb
andl
and
add
mov
jge
fidivs
test
andw
popf
jae
mov
adc
adcb
jle
sbb
jbe
lret
jmp
mov
and
inc
and
mov
dec
mov
insl
mov
xor
repz
mov
sub
cld
faddp
sub
cs
push
add
push
ss
nop
xchg
ss
push
mov
jl
mov
mov
add
add
mov
pushf
andw
popf
jae
and
mov
fisubs
and
sub
test
push
add
pushf
andw
popf
jae
loope
jge
scas
loopew
dec
loope
int3
int3
int3
pop
add
jne
call
bnd
inc
mov
or
mov
mov
sbb
scas
add
es
lahf
adc
dec
jl
sub
and
adc
int3
int3
int3
add
add
jp
add
add
pushf
andw
popf
jae
lahf
mov
jl
or
sbb
mov
mov
ds
push
mov
mov
addr16
cld
sbb
mov
mov
divps
bnd
pop
mov
inc
mov
pop
mov
scas
loope
adcb
inc
dec
cmp
add
and
push
cs
cld
xchg
cs
mov
adc
adc
adc
or
cld
bnd
rcl
mov
sbb
adc
adc
or
cs
mov
sbbl
pushf
andw
popf
jae
adc
lahf
sbb
insl
mov
add
add
mov
andw
popf
jae
adcb
mov
and
jle
daa
imul
cld
cld
repz
mov
or
movb
dec
dec
inc
mov
xor
pushf
andw
popf
jae
and
dec
rcr
and
and
sbb
enter
xor
icebp
cs
or
cld
and
mov
mov
mov
sbb
int3
int3
add
add
sbb
pushf
andw
popf
jae
jl
mov
mov
mov
loopew
test
cs
pop
or
mov
and
mov
and
push
pushf
andw
popf
jae
test
dec
test
jle
insb
xor
sub
mov
pushf
andw
popf
jae
adc
xorb
mov
mov
fadd
mov
and
andw
popf
jae
mov
push
mov
inc
mov
mov
aaa
push
push
ds
cld
xchg
bnd
jge
dec
mov
jle
sub
int3
int3
int3
add
add
ja
aaa
add
add
repnz
xacquire
es
adc
dec
test
dec
and
icebp
add
jl
pop
ss
inc
mov
test
test
test
mov
mov
mov
mov
bnd
mov
and
mov
and
scas
mov
fisubs
or
fadd
call
pushf
andw
popf
jae
inc
loope
scas
lahf
mov
mov
pop
adc
add
add
ljmp
dec
sbb
pop
dec
or
dec
int3
int3
add
add
pop
push
repz
nop
xchg
es
and
sbb
shll
mov
cs
cld
mov
cld
xchg
es
adc
addr16
lahf
and
mov
repnz
jmp
mov
loope
sbb
mov
and
mov
jl
pop
jge
repz
pushf
andw
popf
jae
or
dec
insl
mov
mov
lahf
mov
add
pusha
sub
andl
adcl
add
and
subb
mov
and
mov
es
sbb
adc
mov
jle
and
rol
andb
jl
add
push
repnz
ds
xrelease
bnd
mov
mov
pop
dec
test
or
ja
pushf
andw
popf
jae
or
push
mov
jle
rorl
lcall
add
decl
jle
scas
and
mov
out
xor
pushf
andw
popf
jae
insl
pop
or
mov
ja
inc
sub
es
xacquire
es
or
jge
and
dec
mov
add
pushf
andw
popf
jae
mov
mov
dec
mov
mov
dec
and
repnz
fidivs
jl
jge
dec
adc
loope
inc
or
add
repnz
jmp
dec
test
adc
mov
jle
lahf
mov
jl
cs
mov
pushf
andw
popf
jae
dec
sub
mov
sub
cs
mov
mov
jmp
pushf
andw
popf
jae
fiadds
cmpb
sbb
iret
or
mov
nop
xchg
cld
ret
mov
mov
mov
repnz
xchg
bnd
loope
jl
mov
sarl
insl
lods
or
add
data16
int3
int3
add
add
or
iret
pop
push
cs
ds
xacquire
es
mov
or
cld
jle
mov
dec
jmp
pushf
andw
popf
jae
mov
jge
mov
mov
jl
push
dec
jne
bnd
dec
and
cs
addr16
jle
dec
mov
dec
mov
ds
jmp
pop
mov
cs
dec
mov
loope
mov
scas
mov
mov
pushf
andw
popf
jae
mov
mov
inc
jle
sub
test
jge
outsl
int3
int3
int3
add
add
jmp
mov
mov
and
mov
insl
mov
addr16
or
repz
cld
xchg
es
mov
jl
or
or
int3
add
add
jb
push
cs
xchg
repz
sub
adc
shll
dec
cld
mov
mov
and
incb
popf
jae
jl
mov
loope,pn
dec
cs
mov
mov
sbb
in
lcall
add
incl
and
xor
pushf
andw
popf
jae
and
scas
sbb
jl
xchg
add
nop
cs
jmp
dec
push
dec
jge
sub
loope
mov
and
mov
xchg
fisttps
andl
subl
add
cs
addr16
mov
out
and
repnz
nop
jmp
or
insl
jge
mov
mov
inc
dec
dec
mov
shl
ss
jmp
jl
sbbb
adc
test
mov
add
pushf
andw
popf
jae
scas
dec
dec
sbb
adc
or
outsb
jmp
pause
mov
xacquire
ds
and
mov
mov
add
fs
nop
ds
mov
nop
xchg
ss
adc
jl
or
and
xor
cs
jmp
sbbb
mov
mov
mov
mov
and
jne
pushf
andw
popf
jae
insl
inc
mov
and
test
dec
inc
jae
int3
int3
add
add
lcall
add
add
jl
jge
fimuls
iret
popa
pushf
andw
popf
jae
mov
mov
insl
mov
adc
adc
test
pushf
andw
popf
jae
push
jge
mov
jge
adc
mov
lahf
sar
inc
ss
jmp
adc
insl
jle
mov
and
lahf
jle
or
mov
addr16
mov
andl
andl
insl
dec
insl
and
shll
mov
call
push
ss
xchg
ss
push
jge
lahf
or
scas
push
shll
push
cs
lea
nop
xchg
repz
mov
mov
jge
pop
sbb
ret
nop
ds
pop
cld
and
mov
mov
addr16
pop
xorb
incl
add
test
ss
mov
pop
jle
jle
mov
mov
rcrl
shll
mov
nop
cs
jmp
mov
and
scas
and
and
adc
sub
mov
cs
scas
loope
jl
mov
inc
push
fidivrs
sbb
shr
push
pushf
andw
popf
jae
adc
mov
mov
or
mov
jb
insb
cs
adc
mov
scas
dec
or
mov
mov
cs
adc
jo
add
es
sbb
mov
mov
pop
mov
sub
addr16
insl
dec
int3
int3
int3
add
add
push
fs
call
pushf
andw
popf
jae
push
and
dec
lahf
subb
mov
pushf
andw
popf
jae
sub
jle
sbb
loope
push
inc
mov
pusha
repz
insl
and
push
mov
loope
lahf
jle
mov
cs
and
andw
popf
jae
mov
mov
mov
adc
cld
fwait
int3
int3
int3
add
add
add
cmp
lods
ds
sbb
lahf
dec
jge
insl
jl
and
jl
sarl
or
lret
rep
pushf
andw
popf
jae
adc
mov
jl
mov
mov
call
pushf
andw
popf
jae
popl
inc
mov
loope
loope
test
inc
loopne
andw
popf
jae
inc
cs
insl
inc
sbbb
test
push
repz
es
xchg
cld
ret
dec
shll
sbb
and
pushf
andw
popf
jae
andb
cld
mov
test
ficoms
adc
sbb
stos
push
ds
xchg
cld
ret
dec
shll
jl
mov
cld
cld
jmp
jl
adcb
lahf
adc
lahf
sbb
adc
and
nop
sahf
fwait
pause
jmp
adc
dec
lahf
rorl
mov
dec
push
and
test
add
imul
cld
jmp
mov
mov
test
mov
scas
or
or
cld
ds
mov
mov
xorb
push
push
sbb
push
call
push
nop
cld
repz
xchg
es
cmpb
mov
and
xor
ds
jmp
inc
cs
jge
insl
push
and
or
cld
scas
mov
cld
mov
mov
sti
cs
insl
insl
mov
mov
adc
cs
or
push
mov
test
ds
mov
mov
addr16
mov
adc
jle
cs
mov
imul
test
hlt
call
loop
decl
inc
dec
inc
cs
mov
mov
push
ss
xchg
ds
mov
lahf
insl
pop
rcrl
stc
lcall
add
call
push
cld
cs
rcll
and
add
add
aas
push
pushf
andw
popf
jae
jge
mov
mov
scas
fimuls
dec
and
inc
jge
push
pushf
andw
popf
jae
mov
scas
test
cld
cs
mov
mov
push
repnz
nop
xchg
repz
pop
mov
test
lahf
adc
xor
push
repnz
nop
xchg
cs
insl
adc
mov
jl
sub
add
int3
int3
int3
add
add
js
add
dec
add
ds
ss
and
mov
mov
or
or
xorb
cmc
decl
mov
or
or
dec
mov
addr16
popa
rcrb
outsb
jne
pushf
andw
popf
jae
loope
insl
mov
mov
int3
int3
add
add
mov
push
ss
ds
xchg
bnd
sbb
dec
dec
in
jb
push
nop
es
xacquire
repz
insl
sbb
mov
mov
pushf
andw
popf
jae
and
jge
scas
jle
mov
mov
mov
es
rorl
sub
fidivrs
jl
mov
inc
and
loop
cld
nop
cld
lea
xchg
cs
mov
ficoms
mov
mov
sbb
add
pushf
andw
popf
jae
and
jge
dec
pop
sarl
int3
int3
int3
add
add
and
incb
popf
jae
mov
orb
or
mov
mov
or
bnd
and
adc
scas
inc
mov
adc
scas
mov
scas
lahf
lods
out
cld
ds
and
inc
cmpb
addr16
loope
sub
and
clc
nop
ds
test
mov
sbb
and
dec
dec
scas
inc
cmp
bnd
dec
and
lahf
adc
dec
mov
jl
sub
int3
int3
int3
add
add
call
cs
jmp
adc
adc
mov
loope
and
insl
test
push
or
sub
inc
sbb
incl
dec
pop
popl
lahf
adc
roll
pop
push
repz
cld
xchg
repz
addr16
scas
mov
cs
cs
insl
jl
cld
push
repnz
ss
xchg
repz
mov
mov
scas
or
roll
loope
sldt
pushf
andw
popf
jae
mov
jle,pn
mov
fidivrs
and
incb
popf
jae
mov
or
jge
jl
dec
or
leave
jge
pop
dec
flds
add
push
cld
es
xorb
scas
mov
roll
and
mov
test
jne
pushf
andw
popf
jae
fidivrs
roll
mov
pushl
cld
bnd
sbb
dec
inc
jl
fidivs
jmp
pushf
andw
popf
jae
dec
shll
and
push
pushf
andw
popf
jae
lahf
or
mov
dec
jle
push
sbb
and
pushf
andw
popf
jae
pop
test
and
dec
mov
je
dec
rep
pushf
andw
popf
jae
test
addr16
jle
mov
mov
addr16
mov
add
popa
cld
ss
jmp
mov
or
pop
push
dec
mov
loope
inc
loope
mov
dec
inc
mov
push
pushf
andw
popf
jae
or
mov
cmp
dec
fs
pause
es
loope
adc
and
mov
jl
inc
or
iret
jmp
pushf
andw
popf
jae
adc
and
scas
lahf
jl
and
popa
repz
jl
mov
mov
or
and
and
mov
mov
adc
and
incb
popf
jae
mov
adcb
sbb
mov
pop
pushf
andw
popf
jae
jge
loope
cs
fimuls
mov
insl
scas
insl
sbb
add
ds
mov
inc
cmp
pop
pop
insl
scas
mov
mov
and
outsl
loopne
ss
nop
mov
xchg
cld
ret
mov
mov
dec
test
xor
rcrl
popf
jae
jge
jl
jge
mov
lahf
sbb
push
push
repz
lea
xchg
ss
pop
mov
jl
lahf
mov
jle
sub
add
add
pushf
andw
popf
jae
test
sbb
mov
mov
repz
cld
jmp
scas
or
fidivs
sub
mov
mov
lret
pushf
andw
popf
jae
cld
jl
mov
cs
mov
loope
cld
sub
push
pushf
andw
popf
jae
adc
insl
addb
rorl
int3
int3
add
add
push
pushf
andw
popf
jae
mov
dec
and
mov
mov
adc
pop
pushf
andw
popf
jae
mov
rcll
adc
dec
mov
mov
push
test
push
ss
mov
mov
and
mov
inc
sub
or
scas
lret
push
pushf
andw
popf
jae
pop
insl
scas
sub
mov
subb
popl
mov
pushf
andw
popf
jae
mov
push
sub
sar
adc
mov
dec
push
and
and
push
add
addr16
mov
xorb
adc
mov
mov
pop
cld
test
pushf
repnz
nop
jmp
scas
loope
scas
loope
mov
mov
jl
insl
adc
dec
mov
mov
movsb
das
add
es
dec
jge
cld
or
and
mov
mov
add
ret
adc
repz
mov
sarl
mov
dec
test
cmpsl
pop
cs
loope
test
mov
mov
cld
mov
or
sbb
andl
adcl
add
push
or
lahf
cs
test
jle
xchg
andl
xor
add
sub
dec
cs
or
dec
cld
mov
insl
pop
add
nop
repz
mov
pop
mov
mov
fisubs
sub
adc
dec
mov
mov
andl
cmpl
jge
push
sub
mov
and
mov
int3
int3
int3
add
add
enter
mov
add
cld
es
jl
andb
jle
scas
mov
mov
mov
and
pause
cs
fidivs
mov
insl
dec
addr16
and
inc
int3
int3
int3
add
add
add
add
cs
mov
cld
xchg
ds
push
shll
test
push
es
jmp
and
mov
mov
mov
insl
mov
lahf
lahf
mov
and
int3
int3
int3
add
add
rep
push
es
xrelease
repz
adc
cld
sbb
adc
scas
xchg
test
repnz
bnd
dec
sub
inc
mov
jge
and
adc
sbb
clc
pop
ds
cs
mov
mov
fisubs
sbb
and
addr16
and
ss
lahf
and
mov
dec
mov
and
push
insl
push
adc
and
ret
pushf
andw
popf
jae
or
insl
dec
and
sbb
sarl
pushf
andw
popf
jae
mov
mov
pop
mov
adc
shr
ss
lahf
mov
lahf
push
mov
or
and
mov
add
andw
popf
jae
dec
mov
mov
adc
adc
pop
andb
jge
das
add
pushf
andw
popf
jae
mov
jge
cld
jge
dec
mov
add
xchg
je
cs
jmp
mov
mov
mov
jle
inc
jl
movb
repnz
cld
xchg
ss
scas
or
mov
inc
and
nop
pushf
mov
clc
ljmp
insl
dec
addr16
sbb
adc
scas
mov
nop
repz
mov
mov
cld
sar
mov
lahf
and
nop
insb
imul
sldt
nop
es
or
adc
scas
mov
adc
insl
and
jl
dec
pop
jle
clc
push
ds
ss
xchg
bnd
insl
loope
and
insl
loope
mov
and
andw
popf
jae
and
adc
mov
mov
test
sbb
testb
jmp
inc
adc
adc
jl
andb
popl
test
push
repz
mov
xacquire
ds
sub
mov
and
and
add
pushf
andw
popf
jae
test
adc
sub
sub
sub
lods
fcmovne
int3
int3
add
add
rcrb
and
add
add
or
loope
mov
push
dec
fdivrp
jne
pushf
andw
popf
jae
lahf
cld
fisubrs
dec
inc
dec
test
lahf
and
mov
jmp
addr16
mov
sbb
mov
sbb
int3
int3
int3
add
add
ret
loopne
and
add
call
mov
sub
dec
scas
mov
pop
je
mov
xor
aas
inc
cld
ds
and
mov
and
dec
mov
mov
insl
and
mov
aas
pop
ss
and
or
mov
pop
adc
or
and
cs
mov
mov
push
repnz
mov
xrelease
cld
ret
pop
mov
jle
or
sub
dec
inc
testl
ss
jmp
dec
ficoms
sub
inc
mov
scas
scas
adc
xor
pushf
andw
popf
jae
mov
sub
mov
mov
mov
mov
dec
mov
pushf
andw
popf
jae
adc
mov
mov
jle
lcall
test
pushl
dec
or
mov
cld
mov
test
mov
adcb
popf
pushf
andw
popf
jae
rorl
insl
mov
test
fidivs
je
pushf
andw
popf
jae
mov
adc
push
mov
pop
pusha
pushf
andw
popf
jae
push
loope
mov
insl
sbb
mov
jle
mov
pushf
andw
popf
jae
inc
loope
adcb
and
lahf
inc
addr16
xchg
pushf
andw
popf
jae
jle
jle
and
pop
and
fisubs
jmp
sub
dec
or
mov
jl
cs
mov
dec
test
mov
pushf
andw
popf
jae
sub
or
pop
sbb
mov
lret
int3
add
add
test
bnd
push
insl
mov
mov
test
mov
mov
and
loope
scas
test
ret
pushf
andw
popf
jae
mov
fimuls
pop
mov
and
sbb
fldenv
add
add
dec
cmp
es
mov
sub
mov
scas
jle
jge,pn
mov
cld
mov
mov
int3
int3
int3
add
add
ds
lea
nop
xchg
bnd
or
mov
mov
mov
jne
cs
or
mov
mov
mov
orb
push
cs
mov
xrelease
bnd
or
mov
sbb
mov
pushf
andw
popf
jae
adc
rorl
shl
mov
fiadds
inc
xor
push
cs
nop
xchg
cs
sbb
insl
addr16
push
cs
repz
sbb
test
addr16
mov
mov
jl,pn
loope
inc
push
add
push
cs
xacquire
ds
mov
mov
mov
repz
andw
popf
jae
cs
jge
jl
fsubp
subb
pop
pop
pushf
andw
popf
jae
and
adc
mov
dec
sbb
mov
icebp
jno
jmp
ds
loope
adc
adc
mov
sub
mov
addr16
mov
insl
inc
call
push
repnz
xrelease
bnd
mov
dec
and
test
cs
int3
int3
add
add
and
incb
popf
jae
mov
loope
cmpb
jle
scas
and
add
add
repz
insl
inc
mov
cld
sub
popl
mov
scas
scas
addl
xor
or
adc
rorl
and
lahf
push
lahf
dec
dec
and
push
pop
mov
aam
cmpl
ss
ds
jge
adc
mov
or
dec
sub
mov
dec
fiadds
push
nop
ds
nop
xchg
cld
ret
dec
or
or
or
repnz
mov
pop
loope
scas
dec
or
adcb
pushf
push
push
cld
cld
bnd
mov
adc
adc
and
adc
or
and
incb
popf
jae
dec
and
scas
or
or
mov
push
ss
mov
xchg
nop
ret
fidivs
jle
mov
mov
pop
pushf
andw
popf
jae
adc
jl
addr16
mov
inc
test
loope
sti
push
push
es
xchg
ds
cld
lahf
loope
mov
mov
jmp
nop
cld
jmp
jl
mov
test
inc
pop
loope
mov
sbb
add
add
push
cs
bnd
adc
and
and
insl
and
scas
mov
mov
adc
pop
pushf
andw
popf
jae
and
mov
mov
mov
and
mov
inc
push
ds
nop
mov
cld
xchg
es
pop
mov
scas
lahf
and
sbb
push
ss
xchg
es
and
jle
scas
and
int3
int3
int3
add
add
lock
int3
int3
add
add
sub
push
or
test
cld
mov
mov
scas
loope
loope
jle
mov
outsl
call
pushf
andw
popf
jae
loope
sbb
jge
adc
outsb
pusha
ds
lahf
mov
mov
mov
or
pop
mov
dec
mov
sbb
and
mov
nop
jmp
ficomps
adc
jl
mov
mov
fisubrs
jmp
and
jl
inc
test
pop
push
mov
mov
insl
or
test
or
add
add
add
mov
and
jge
and
add
ss
and
sarl
mov
sub
inc
lahf
mov
mov
repz
push
inc
insl
mov
or
or
cld
and
sub
pushf
andw
popf
jae
mov
jge
push
and
pop
adc
dec
mov
into
stos
pushf
andw
popf
jae
and
sub
pop
adc
sbb
add
pushf
andw
popf
jae
and
adc
test
jge
mov
add
es
and
inc
scas
mov
mov
test
ja,pn
int3
int3
add
add
popa
pushf
andw
popf
jae
loope
mov
push
sub
pop
mov
mov
lret
add
pause
jmp
sub
fidivs
and
jl
adc
in
call
cs
mov
mov
or
mov
push
mov
jge
dec
push
add
pushf
andw
popf
jae
adc
and
jl
add
pushf
andw
popf
jae
insl
sub
dec
mov
and
dec
adc
loope
push
pushf
andw
popf
jae
mov
push
mov
dec
adc
shrl
mov
dec
add
push
pushf
andw
popf
jae
and
mov
inc
fiadds
sub
mov
shrl
sub
andl
cmpl
adc
and
lea
and
ds
fidivs
mov
or
sub
push
test
mov
int3
int3
int3
add
add
and
incb
popf
jae
xorb
or
mov
or
jmp
mov
cs
adc
mov
jle
insl
mov
dec
cld
sbb
int3
int3
add
add
sub
pause
jmp
and
mov
test
mov
mov
inc
rcr
mov
loope
jbe
pushf
andw
popf
jae
mov
cld
jge
or
scas
mov
bnd
mov
or
popl
mov
sbb
cld
dec
shr
cs
ds
mov
and
dec
jge
lahf
mov
adc
mov
ja
dec
push
cld
nop
jmp
cmpb
jge
scas
or
jl
mov
jge
mov
cs
cs
jle
push
test
xorb
inc
mov
movzwl
ss
and
fisubrs
ficomps
or
or
rcrb
add
pushl
jle
dec
sbb
fidivs
sub
mov
jle
pushf
andw
popf
jae
scas
mov
mov
test
mov
test
out
sar
pushl
pop
adc
dec
subb
scas
fisubs
adc
orb
insl
cwtl
lahf
mov
ds
ss
jge
mov
lahf
jl
mov
fisubrs
adc
insl
fs
int3
int3
add
add
popa
push
ss
xchg
es
shll
or
sarl
add
ds
sbb
test
mov
pop
mov
mov
inc
fidivs
nop
bnd
and
mov
mov
or
and
mov
mov
incl
pushf
andw
popf
jae
mov
rcr
mov
jge
and
mov
push
cs
cld
mov
cld
xchg
ds
mov
adc
test
jge
pushf
andw
popf
jae
mov
mov
jl
or
mov
dec
mov
adc
lea
repz
xrelease
cld
ret
mov
and
cs
pop
add
int3
int3
int3
add
add
pushf
andw
popf
jae
mov
mov
mov
addr16
mov
pushf
andw
popf
jae
jge
lahf
mov
mov
jge
scas
inc
add
pushf
andw
popf
jae
inc
and
mov
cmp
es
lea
xchg
ss
push
scas
mov
cld
or
adc
push
nop
repz
xacquire
ds
push
adc
scas
inc
test
add
add
ds
pushf
andw
popf
jae
shll
mov
inc
rorl
mov
ficompl
nop
repnz
xchg
ds
mov
cld
mov
mov
int3
int3
int3
add
add
int3
int3
int3
add
add
add
repnz
xrelease
ds
mov
jle
mov
jl
mov
mov
push
ds
repz
xchg
repz
mov
dec
and
mov
movsb
add
push
push
pushf
andw
popf
jae
mov
mov
mov
loope
cs
mov
or
int3
and
add
pop
mov
push
repz
nop
xchg
ds
mov
mov
mov
and
insl
mov
adc
add
leave
push
ds
xacquire
repz
mov
mov
mov
and
cs
mov
fisubrs
adc
sub
mov
lahf
mov
xorb
pushf
andw
popf
jae
jle
insl
shll
and
mov
push
cld
cld
jmp
adc
inc
inc
lahf
test
dec
sbb
addr16
test
and
cmp
andw
popf
jae
pop
mov
adc
fimuls
jle
dec
mov
mov
ret
ss
jmp
cs
test
mov
insl
adc
dec
mov
scas
addr16
adc
mov
add
pushf
andw
popf
jae
push
or
adc
push
addr16
jle
mov
repnz
cld
ss
lahf
jl
addr16
or
pop
addr16
mov
xchg
dec
sub
ds
mov
loope
mov
adc
or
lahf
mov
pop
cld
mov
test
ss
jmp
or
adc
jl
mov
mov
mov
and
add
int3
int3
int3
add
add
pusha
pushf
andw
popf
jae
addr16
jle
jl
mov
sub
cld
adc
adc
hlt
lcall
add
pushl
mov
lahf
adc
xor
push
cld
nop
es
xrelease
es
mov
dec
addr16
shrl
push
jne
es
mov
and
and
adc
scas
mov
dec
pop
jge
and
negl
cld
repnz
xrelease
cld
ret
sbb
and
jmp
push
cld
repz
nop
xchg
ds
mov
scas
mov
jl
mov
mov
cld
repz
cs
orb
lahf
adc
cld
dec
or
cld
mov
or
xchg
ret
pushf
andw
popf
jae
movb
mov
and
cld
cmpb
pushf
andw
popf
jae
mov
mov
mov
fs
push
cld
repz
xchg
bnd
push
or
jle
adc
int3
int3
int3
add
add
out
int3
int3
add
add
xor
add
push
cs
lea
xchg
es
mov
jle
fisubrs
loope
xchg
xor
nop
ds
pop
adc
fidivs
and
xorb
test
pop
push
push
repz
repz
xchg
bnd
and
mov
mov
add
mov
bound
pushf
andw
popf
jae
mov
adc
push
adc
mov
nop
cld
ds
or
pop
mov
mov
jge
cmp
push
ss
lea
nop
xchg
cs
adc
dec
pop
or
add
add
and
add
jge
roll
adc
dec
dec
pop
insl
cmp
pushf
andw
popf
jae
lahf
mov
addr16
jle
addr16
mov
push
inc
adc
add
lcall
push
addr16
jge
dec
pop
cmpsb
cmp
repnz
jmp
mov
test
mov
and
scas
mov
loope
scas
cld
incb
cld
cld
mov
xrelease
cld
ret
adc
mov
push
insl
mov
loope
jbe
int3
int3
add
add
ss
cs
adc
mov
cs
mov
cld
dec
mov
int3
add
add
ss
xorb
adc
mov
mov
insl
mov
mov
mov
mov
repz
shll
dec
mov
sub
test
or
mov
dec
mov
mov
add
nop
cld
lea
cld
xchg
es
push
and
mov
add
pushf
andw
popf
jae
cld
adc
dec
and
fisubrs
nop
jmp
mov
pop
adc
and
pop
fdivrp
dec
or
add
pushf
andw
popf
jae
sbb
mov
mov
mov
je
scas
je
cs
mov
dec
mov
test
or
jle
test
mov
pushf
andw
popf
jae
or
loope
dec
jge
jge
cs
push
cld
repz
xacquire
repz
and
mov
mov
scas
jle
dec
ja
jmp
and
incb
popf
jae
lahf
or
cld
mov
or
mov
push
mov
nop
nop
bnd
and
adc
cld
and
mov
test
ss
shll
push
ficomps
fidivs
jl
sub
jge
add
add
add
dec
cld
ds
cld
push
pop
or
mov
inc
mov
mov
mov
push
lahf
mov
push
pause
es
or
test
mov
jge
dec
mov
mov
mov
es
xchg
bnd
mov
or
pop
pop
mov
scas
mov
cs
jmp
sub
insl
jge
mov
insl
and
xorb
or
xorb
int3
add
add
je
add
push
repnz
xchg
ss
push
cs
and
insl
scas
mov
pushf
andw
popf
jae
addr16
loopew
sub
shll
popa
push
repz
mov
xrelease
bnd
sub
push
pop
sub
jle
sbb
push
pop
pushf
andw
popf
jae
insl
and
mov
mov
loope
mov
adc
or
je
sub
repz
jmp
jge
mov
mov
or
scas
fimuls
jle
sub
jbe
inc
and
ss
or
rcrl
mov
mov
in
jno
push
push
es
xacquire
cs
scas
mov
addr16
mov
dec
or
or
int3
add
add
andw
popf
jae
lahf
jge
mov
mov
or
dec
int3
fldl
add
jne
push
repz
dec
mov
adc
jge
scas
insl
sbb
fisubrs
or
iret
sar
push
and
jge
jl
mov
mov
and
int3
int3
add
add
push
loopne
andw
popf
jae
pop
or
mov
sbb
mov
in
lea
lret
push
ss
lea
xrelease
repz
or
inc
insl
mov
mov
or
pop
pushf
andw
popf
jae
and
mov
mov
push
cld
or
mov
ficoms
pop
push
push
repnz
xrelease
cs
ficomps
sbb
mov
pushf
andw
popf
jae
mov
cld
mov
jle
mov
and
das
mov
pushf
andw
popf
jae
dec
insl
and
addr16
mov
pop
adc
stos
add
pushf
andw
popf
jae
scas
and
and
loope
pushl
ds
dec
jge
mov
pop
mov
jl
sbbb
insl
loope
movswl
pushf
andw
popf
jae
and
mov
mov
insl
dec
cs
fwait
add
pushf
andw
popf
jae
scas
adc
mov
pop
mov
mov
inc
call
fcomi
pushl
sub
ficomps
test
sub
fisubrs
jge
adc
xor
add
decl
push
cs
cld
lea
nop
xchg
es
mov
scas
inc
and
inc
pushf
andw
popf
jae
mov
and
mov
or
mov
mov
jle
add
pushf
andw
popf
jae
adc
insl
mov
jle
addr16
insb
loope
add
add
pop
int3
int3
int3
add
add
jb
andw
popf
jae
loope
jge
sbb
mov
int3
int3
int3
add
add
call
ds
mov
test
and
jl
scas
push
and
ds
cld
xchg
ds
insl
insl
insl
test
or
test
push
es
pop
dec
and
or
xorb
mov
mov
ret
cs
jmp
sub
push
pop
addr16
inc
mov
or
loope
adc
decl
push
cld
cld
cld
lea
nop
xchg
ss
push
jl
or
addb
pop
ret
int3
int3
int3
add
add
add
pushf
andw
popf
jae
insl
mov
mov
jl,pn
scas
jl
nop
pushf
andw
popf
jae
sarl
mov
sub
mov
inc
lahf
jle
dec
aad
pop
cld
cld
jmp
mov
vpmacsdqh
mov
sbb
insl
mov
cld
jge
pop
sbb
adc
add
es
mov
rcll
addr16
mov
and
adc
adc
xchg
add
pushf
andw
popf
jae
mov
addr16
jge
loope
rep
repz
sbb
jle
adc
pop
adcb
pop
sub
rorl
mov
andw
popf
jae
or
cs
dec
insl
mov
mov
addr16
push
ds
cs
adc
test
or
or
mov
push
add
add
std
in
add
pushf
andw
popf
jae
dec
push
mov
pop
adc
addr16
scas
inc
or
les
cs
addr16
pop
insl
adc
fidivrs
or
mov
and
int3
push
add
lock
xchg
xlat
pop
pushf
andw
popf
jae
or
sub
pop
cs
scas
mov
mov
andl
cmp
pushl
jle
or
push
mov
sahf
imul
pushf
andw
popf
jae
adc
mov
mov
addb
call
pushf
andw
popf
jae
dec
loope
push
mov
jge
adc
enter
ds
nop
xchg
ds
or
loope
mov
adc
inc
sbbl
andl
adcl
add
sub
insl
test
mov
pusha
ds
sub
rcr
and
movb
sbbb
jecxz
jge
pushf
andw
popf
jae
or
mov
test
adc
scas
push
mov
add
xor
add
push
es
xchg
ds
sbb
mov
addb
ss
mov
mov
mov
mov
jle
mov
or
jl
mov
pop
test
cld
repz
xorb
adc
fdivrp
inc
scas
pop
cld
loope
addr16
loope
add
dec
pop
add
pushf
andw
popf
jae
lahf
scas
pop
and
adc
dec
push
dec
ja
enter
and
incb
popf
jae
addr16
mov
or
or
cld
fcmove
int3
int3
add
add
test
mov
push
ss
xchg
ds
and
mov
adc
dec
push
pushf
andw
popf
jae
sbb
shll
mov
mov
cmp
mov
pushf
andw
popf
jae
mov
push
jl
dec
adc
shll
rep
bnd
cs
push
lahf
adc
adc
cld
andb
loope
mov
or
add
ds
insl
push
mov
shll
loope
mov
mov
inc
xorb
andw
popf
jae
sub
sub
mov
and
int3
int3
int3
add
add
add
inc
aaa
fcompl
or
lret
and
xor
cmp
insb
cmpsl
nop
call
out
sti
repz
mov
pop
mov
mov
into
inc
mov
add
cmp
int
daa
sub
push
dec
mov
push
add
add
repnz
and
and
sbb
call
and
mov
pop
sti
fs
iret
fcom
filds
jns
inc
cmp
add
pop
popa
iret
in
jge
into
adc
clc
xor
rorb
lret
mov
add
mov
cmp
gs
arpl
loope
dec
lahf
add
sub
pop
adc
sub
inc
xchg
cmp
and
jns
fstps
ja
dec
xchg
cmp
stos
stos
pop
jno
shrl
mov
movaps
dec
jbe
sti
rsqrtps
fidivl
pop
es
stos
fildll
int3
fildl
add
mov
pop
and
repnz
inc
cmp
or
cltd
sub
sti
ficoml
mov
add
cmovge
sbb
pop
sbb
repnz
adc
add
push
push
lods
scas
das
push
cs
cmpsb
test
add
inc
mov
add
faddl
fmulp
mov
mov
scas
mov
xor
add
cmp
test
add
and
js
loope
rorb
push
fwait
adc
in
inc
es
nop
dec
jmp
mov
add
push
add
add
out
sub
mov
cli
mov
leave
jmp
repz
ret
ret
push
ss
xchg
add
add
ljmp
add
add
cmc
nop
adc
or
add
or
dec
cmpsl
add
lcall
movsb
sub
add
loope
jge
imul
dec
jne
sti
push
xchg
xchg
add
add
dec
adc
push
add
inc
std
and
mov
cmpsb
aas
insb
ret
push
mov
pop
mov
repz
cmp
add
jle
jge
das
in
inc
rdtsc
xchg
cmpsl
fstl
or
xchg
adc
cltd
and
add
xlat
insb
in
mov
xchg
cmpsl
shrb
imull
sti
in
cmpsb
lret
fidivs
pop
pop
inc
xor
push
sahf
repnz
hlt
daa
es
cli
into
inc
push
add
add
xchg
jmp
jg
mov
aam
xchg
lods
call
jg
std
rclb
mov
push
mov
dec
cmpsb
mov
add
pop
jne
scas
add
sub
imul
loopne
jns
mov
mov
pop
test
add
imul
in
add
push
dec
aaa
lcall
sbbl
jle
test
imul
cmpsb
fnstenv
mov
dec
ret
push
jl
rolb
mov
xor
or
xchg
cli
bound
dec
push
repz
mov
mov
mov
pop
cmpl
mov
loope
imul
iret
pop
sarb
pop
in
popa
stos
cld
lea
cmp
adc
es
mov
in
push
sti
inc
push
fstps
in
push
add
xor
add
sub
mov
add
fwait
rolb
add
addl
sub
mov
mov
out
add
mov
inc
negl
das
lahf
xchg
and
jmp
mov
gs
pop
jmp
iret
pop
jnp
xchg
mov
or
cmp
icebp
xchg
mov
push
jmp
cmp
mov
add
add
je
sbb
xor
pop
xor
mov
out
xorb
sub
pop
push
mov
push
je
jge
cmp
add
mov
jne
call
imul
jo
sbb
adc
add
fdivrs
sub
das
cwtl
sarl
call
push
fbld
sahf
lock
jl
addr16
add
add
sbb
orb
add
sbb
sbb
sub
mov
push
adc
fsubl
cli
add
clc
inc
test
adc
add
jecxz
ret
out
je
and
fs
ss
cwtl
add
sub
enter
orb
aam
out
push
add
and
movsb
xchg
mov
lret
repnz
lret
and
fsts
xchg
inc
push
stos
jbe
sti
cs
addr16
lcall
inc
and
stos
jnp
xor
sbb
scas
mov
push
int
push
loop
push
dec
ljmp
rcrl
push
mov
push
jl
test
add
cmc
xchg
sahf
push
test
jle
out
lret
inc
push
add
jp
lods
cltd
dec
hlt
pop
jmp
add
add
fwait
and
stos
in
ljmp
scas
out
mov
fadd
std
lds
test
add
sbb
cmp
fld
out
add
dec
mov
add
xlat
mov
add
lret
lahf
ss
xor
add
xchg
cmp
fdivl
fsubs
pop
pop
movsb
cmc
lock
add
and
scas
aaa
insl
into
scas
pushf
and
add
ss
pop
push
sbbw
ss
out
or
push
insl
leave
inc
stos
add
xchg
dec
in
imul
mov
add
rolb
iret
int
jbe
jne
jge
aad
out
mov
add
repnz
jmp
and
add
add
add
mov
aaa
popf
inc
inc
fiaddl
add
movsl
repnz
add
cmp
push
sysret
in
out
cmp
mov
imul
add
roll
add
std
movsb
xchg
js
bound
loopne
stos
arpl
fmulp
or
dec
adc
cmc
sbb
xchg
adc
pop
das
mov
cmpl
stos
out
jbe
mov
inc
and
push
mov
add
mov
lods
daa
fdivr
clc
xor
rcll
add
inc
mov
xlat
ja
mov
push
nop
xchg
loopne
aaa
inc
sbb
add
push
mov
jl
mov
add
pusha
add
popa
rcll
ror
sti
xchg
pop
cmp
add
inc
mov
xchg
pop
cmp
jo
fwait
mov
clc
jo
add
inc
mov
repz
aas
sub
movsb
jns
test
test
add
jmp
in
mov
add
add
negl
mov
push
inc
dec
repnz
fsubs
cwtl
sahf
push
pop
mov
int3
dec
add
rorb
or
add
scas
mov
add
icebp
pusha
aad
pop
stos
dec
jmp
add
sahf
aaa
or
std
les
add
cwtl
push
pop
xchg
mov
inc
in
mov
add
jno
push
add
add
sbbb
cmpsb
scas
mov
maskmovq
sbb
clc
add
pop
push
sbb
jb
sbb
les
add
dec
mov
xchg
pop
sahf
sbb
lock
push
jns
mov
add
push
jo
mov
add
add
in
xlat
sbb
adc
mov
push
cmpsb
in
push
mov
push
xchg
push
cmp
push
int
jecxz
xor
sub
sbb
add
mov
idivl
out
xchg
sahf
cwtl
nop
inc
add
sbb
mov
in
outsb
push
or
push
add
dec
stos
cmc
and
add
ror
add
mov
add
and
mov
add
fistl
add
jmp
add
dec
sarb
daa
mov
int3
and
add
out
adc
add
add
subl
ret
insl
cmp
add
push
shrb
dec
or
add
push
add
add
add
adc
add
dec
jbe
das
cmp
and
pop
pop
sub
add
loope
mov
xchg
fstl
in
sub
add
xchg
ds
push
jp
mov
push
test
push
mulb
arpl
mov
mov
add
jae
out
insl
xlat
in
fnstsw
xchg
mov
dec
mov
push
fs
stos
xor
jae
sub
les
add
add
jae
popa
and
xorb
cmp
movsl
sahf
sub
mov
dec
or
add
aad
aam
sub
pop
imul
or
cmp
cwtl
cmp
in
repnz
mov
cmpsl
inc
out
mov
add
jno
inc
or
add
pmaddwd
dec
add
push
cwtl
lds
mov
sub
add
add
cmp
imul
add
mov
mov
outsl
mov
mov
inc
add
movsb
jno
lret
pop
mov
push
lret
mov
ds
cs
jb
iret
mov
shll
addr16
les
add
pop
dec
or
add
xchg
idivl
in
cld
dec
fsub
ss
pop
add
scas
les
imul
mov
mov
mov
cmpsl
add
pop
and
in
add
add
jmp
repz
fbld
stc
in
mov
add
dec
lock
mov
and
cmp
xor
jp
inc
jl
lahf
insb
rclb
adc
mov
les
mov
imulb
or
add
test
adc
outsb
xchg
into
aas
mov
out
mov
outsb
test
add
mull
test
addr16
dec
and
add
mov
mov
in
lcall
out
inc
mov
jne
add
lock
push
adc
lret
sbb
push
mov
ret
hlt
imul
xchg
icebp
fdivrl
or
pop
lcall
adc
add
cmp
sub
test
xchg
add
leave
pop
and
add
subb
jle
add
neg
and
inc
push
mov
add
je
inc
add
add
lret
loopne
push
mov
mov
add
mov
lcall
pop
dec
icebp
incl
out
add
add
add
cmp
sub
add
ss
popl
add
pop
or
jl
add
add
fldl
add
add
pop
test
scas
push
or
inc
cs
fstpt
xchg
repnz
je
jmp
dec
and
sti
pop
inc
dec
in
jne
xchg
and
inc
sbb
add
fnstsw
scas
jg
push
enter
stc
mov
inc
or
scas
popa
sbb
add
imul
ret
div
lret
jo
xchg
leave
add
test
divl
mov
xchg
cmc
or
xorl
add
xchg
mov
nop
push
lods
mov
aaa
icebp
and
popa
test
pop
xchg
sub
in
mov
hlt
pop
sub
loope
call
imul
sbb
and
add
movsb
push
dec
mov
ret
xchg
push
loop
sbb
add
lcall
dec
add
mov
add
xor
mov
mov
add
inc
loop
add
imul
sub
das
add
push
push
jb
jmp
call
add
pop
adc
dec
add
add
cmc
sub
mov
data16
push
leave
xor
es
cmp
push
into
int3
in
add
xor
pop
mov
das
test
pop
add
mov
add
ljmp
lahf
xchg
loop
xor
mull
jae
aam
jno
add
cmp
jle
inc
fwait
add
dec
in
add
aaa
rcr
xor
mov
lss
add
lods
inc
cmp
mov
jmp
mov
mov
popa
add
push
insl
sarb
push
add
ljmp
mov
into
or
add
jno
sti
loope
out
push
add
mov
inc
fadds
add
mov
push
mov
repz
adc
add
out
add
repz
movsl
pop
sub
lret
aad
test
das
cmp
enter
movlps
roll
mov
add
ljmp
jle
add
ja
or
inc
gs
lahf
or
sub
jmp
movsb
and
in
xor
add
push
subl
add
mov
add
jb
popa
pop
dec
stos
test
sub
add
add
out
add
or
add
add
add
add
mov
add
js
mov
pop
stos
into
and
add
addb
ljmp
adc
insb
stos
mov
int
inc
cmp
add
out
test
popa
cmp
add
xchg
mov
pusha
call
pop
icebp
push
fs
mov
orl
lds
adcl
add
jmp
push
into
test
movsb
sbb
xchg
fstl
mov
adc
adc
rol
inc
add
sub
or
push
fucom
mov
jnp
and
mov
dec
pop
sub
add
mov
mov
lcall
push
imul
jnp,pn
outsb
sbb
add
mov
add
push
xchg
sub
push
jecxz
out
add
hlt
mov
and
test
daa
add
stos
pop
cmpsl
adc
stc
add
add
adc
out
movl
cld
adc
pop
fisubl
xchg
into
dec
pop
fwait
scas
int
in
loop
mov
mov
add
stc
jbe
push
jne
mov
add
add
int3
mov
or
add
add
jecxz
mov
mov
mov
mov
add
sbb
push
mov
fs
xlat
or
add
push
test
pop
pop
adc
ja
xchg
pusha
xor
cmp
add
sbb
jmp
sti
movsb
push
cmp
icebp
outsb
sahf
jbe
repnz
dec
xchg
lcall
cmp
mov
jae
push
sbb
xor
push
xchg
adc
fldt
scas
push
push
ja
and
add
pushf
add
xchg
adc
stos
add
or
add
pop
fmulp
fcomps
cs
scas
in
mov
jae
add
fwait
add
and
ja
dec
mov
cli
daa
xchg
mov
fildl
add
inc
rorb
out
iret
lods
daa
mov
push
xlat
call
aad
pop
jbe
daa
ds
sar
add
cmp
and
add
mov
xchg
add
in
mov
xchg
dec
push
mov
jecxz
aam
dec
testl
dec
mov
mov
sti
rolb
cs
mov
jnp
mov
mov
xchg
add
movsl
out
add
clc
pop
nop
xor
popa
xchg
inc
and
dec
insb
insb
sti
nop
lahf
je
popf
outsb
into
mov
stos
mov
jge
add
stc
movsl
cs
pop
popa
gs
inc
add
les
add
xorb
repnz
push
or
les
test
shll
ljmp
or
adc
add
loop
or
push
cwtl
aam
dec
int3
filds
add
daa
sub
into
loop
xor
push
lock
rorb
adc
dec
icebp
add
jbe
js
shll
or
out
cld
and
rorb
hlt
add
scas
test
je
jno
in
add
movb
mov
into
and
and
shrl
dec
aas
mov
and
aaa
movl
icebp
lret
mov
imul
scas
mov
rcll
push
repz
in
sahf
outsb
movsl
mov
js
into
test
add
dec
add
insb
out
pushf
out
lret
sub
shr
xrelease
inc
sahf
xor
mov
xor
sahf
in
int
outsb
adc
bound
push
add
mov
ficompl
add
rclb
add
test
add
lock
cmp
add
shrl
mov
jle
add
inc
inc
add
mov
push
add
mov
push
mov
and
lods
push
jno
mov
add
add
add
push
cmp
add
int
jnp
adc
add
xchg
inc
pop
add
push
lods
push
call
lods
imul
mov
fldl
mov
pop
out
lods
int
outsl
dec
std
mov
cltd
add
push
xchg
and
mov
add
cmp
pop
xlat
mov
xor
lret
stc
cmc
fs
in
js
out
or
add
sub
pushf
pop
pop
mov
or
orl
imul
add
test
pop
xchg
mov
jecxz
popa
cli
sub
add
add
and
mov
adc
pop
add
pusha
lods
iret
push
cmpsb
lret
das
in
and
test
sahf
cltd
xchg
lret
xchg
or
add
sbb
arpl
add
shrl
xchg
in
mov
xlat
mov
add
fbstp
push
cmpsl
add
lcall
push
add
repz
xor
scas
in
paddusw
add
add
mov
repnz
sub
mov
and
add
and
inc
test
mov
jecxz
insb
int3
incl
add
cmp
imulb
test
pop
lds
sti
jne
lret
pop
add
lahf
sub
adc
mov
xor
lods
jo
addl
outsl
push
push
mov
out
xchg
pop
lahf
pusha
pop
push
test
add
mov
loopne
mov
pop
mov
push
bound
lock
mov
add
lret
dec
mov
stc
sbb
xor
cmpsb
dec
or
mov
mov
sbb
add
add
hlt
andb
ss
divb
add
xchg
pop
lds
jne
cltd
es
add
subb
jl
cmp
push
test
ds
sti
icebp
ja
mov
push
push
sti
ljmp
sub
push
mov
imul
bound
add
shll
test
add
add
add
push
fisttpll
test
enter
pop
cmp
sbb
outsl
arpl
and
fisubrs
push
sbbb
xor
and
fildl
add
hlt
hlt
jp
testl
cmp
sbb
aad
inc
movsb
mov
fbstp
ljmp
shll
jl
and
pop
out
inc
mov
add
mov
or
lock
jnp
mov
mov
add
and
sbb
add
push
sbb
int3
out
add
jo
cwtl
sbb
adc
add
sahf
adc
xor
test
ss
jae
fmulp
inc
add
insl
nop
mov
jge
inc
roll
add
inc
hlt
push
mov
dec
dec
insl
inc
pop
lret
mov
imul
fs
mov
rorl
test
mov
inc
xchg
fcoml
push
inc
lds
add
mov
fisubl
inc
xor
mov
xor
sub
lcall
andl
add
insl
xchg
ret
sar
movsb
xchg
pop
push
pop
lcall
sub
mov
add
sbb
mov
aam
dec
enter
in
or
imul
push
and
ror
cmp
jo
add
add
lret
adc
fildl
add
imul
jne
les
popf
xchg
push
rcrb
int3
jno
add
pop
es
push
xchg
std
cmp
add
test
fwait
inc
nop
xchg
lret
popf
jnp
sti
fildl
pop
dec
dec
add
push
and
xchg
bound
pop
fcmove
cmp
hlt
cmpsb
jno
sbb
add
mov
aam
in
adc
out
pop
add
sbb
push
sub
jo
dec
add
mov
gs
push
adcb
add
pop
push
sti
jecxz
insl
sub
leave
sub
call
xor
cmp
test
addr16
add
mov
int
ficompl
out
lret
iret
xchg
push
test
xlat
push
push
or
mov
inc
sub
add
aaa
ret
lods
xchg
pusha
js
mov
xchg
movsb
imull
in
jmp
jge
shlb
mov
jmp
insl
movsb
ret
bound
in
movsl
mov
lahf
cmp
clc
lock
add
cmp
xor
es
aaa
xchg
fisubs
add
fsubl
inc
ja
stc
add
or
inc
lds
add
jg
jns
add
movsl
hlt
sbb
add
jg
dec
in
add
bound
in
add
loop
pop
xchg
push
movsl
cld
rcrb
add
jge
push
fwait
inc
fs
add
aad
add
inc
add
add
push
test
xor
add
add
lahf
lret
scas
aad
xor
out
mov
sti
add
xor
add
sub
ljmp
fwait
cmc
mov
jmp
mov
add
stc
jae
pop
dec
cltd
xchg
test
add
jne
pop
rcrb
jnp
or
add
js
mov
dec
sbb
dec
ljmp
fisttps
es
mov
xchg
dec
xlat
add
or
add
aam
adc
sub
add
dec
lock
popf
aas
lods
movsb
outsl
xchg
cmc
bound
and
cltd
les
mov
push
mov
mov
cmp
addb
outsl
cltd
xlat
push
jbe
bound
inc
pop
insb
rorw
out
or
and
enter
ret
add
xchg
fldcw
pushf
xchg
push
mov
add
fstpt
and
pop
xor
push
mov
sarl
fadds
cmp
pop
jle
push
push
pop
xchg
inc
inc
jg
adc
mov
sarl
mov
cld
fadds
jae
gs
or
add
mov
stos
push
pop
push
sbb
aad
lret
dec
push
movsb
push
cli
cltd
repz
jno
repz
pop
ret
jmp
mov
sbb
rcrl
bound
dec
mov
or
arpl
outsl
ljmp
mov
sub
hlt
add
lods
adc
ljmp
mov
and
cmpsl
cld
add
mov
cli
dec
mov
fidivl
cmp
sbb
push
shl
mov
mov
jbe
and
jge
sub
add
negl
inc
lock
sub
mov
inc
sbb
xchg
pop
and
mov
add
cs
pop
dec
in
dec
or
add
xchg
mov
ficoms
or
leave
add
add
jmp
or
and
jp
push
movsl
push
test
add
xchg
mov
push
jnp
jge
add
sub
cmp
stos
sub
call
out
mov
add
pop
adc
cltd
cs
inc
lods
add
pop
dec
iret
mov
adc
xchg
mov
popf
xchg
or
jle
mov
repnz
pushf
cmc
call
jp
pushf
adc
repz
or
sbb
loop
xor
mov
rolb
push
jne
xchg
testb
add
int
aaa
cmp
mov
pop
mov
dec
add
add
gs
inc
aad
sub
leave
movsl
in
outsl
add
cwtl
mov
mov
add
mov
add
test
ja
fwait
inc
dec
mov
jle
and
sbb
adc
dec
stos
add
dec
pop
add
rcll
stos
test
mov
jecxz
cmp
in
movsl
insl
mov
aas
push
fwait
mov
orw
push
mov
notb
std
sti
cmpsl
ljmp
add
cmp
xchg
mov
xchg
push
mov
rorb
nop
sub
mov
lahf
add
test
cld
sahf
sahf
shrb
sub
jle
outsl
nop
pop
cltd
push
mov
sbb
lods
mov
dec
std
add
pop
push
outsl
lea
jnp
out
inc
cmp
add
lods
jp
bound
icebp
mov
fnstenv
jl
add
bound
icebp
add
xchg
mov
js
add
lret
fs
mov
sub
dec
fs
push
insl
add
jecxz
ret
mov
fimuls
cmp
repnz
jb
xchg
push
aas
fistpl
pop
icebp
xchg
cli
xchg
push
int
add
mov
daa
outsl
jp
sar
sbb
in
and
icebp
dec
ljmp
loope
xchg
jb
data16
repnz
pop
dec
popa
les
mov
add
ljmp
mov
xchg
cmp
add
sbb
into
outsb
push
dec
push
or
add
mov
push
ja
mov
jp
add
xchg
or
add
add
push
xor
daa
push
or
add
jb
cmp
sbb
push
sub
lret
adc
add
mov
push
insb
jle
in
add
mov
dec
jl
ljmp
push
out
aas
fsubrs
hlt
jp
mov
testl
jae
int3
add
pop
fcmovbe
push
fs
lock
add
cmp
xchg
inc
iret
jns
adc
add
fucompp
sub
dec
cmp
add
pop
sub
into
jecxz
sti
popa
dec
push
add
out
xor
test
cmp
inc
jle
add
add
pop
out
push
push
sbb
lret
pop
aam
add
in
cli
jecxz
pop
je
loopne
daa
push
push
pushf
push
out
data16
lods
mov
fcmovnu
ror
add
jg
roll
lahf
ja
mov
sti
cmp
mov
je
fsubrl
in
jne
inc
jae
out
addr16
and
push
icebp
aas
push
push
insl
shl
add
fstpl
mov
mov
test
movl
aam
add
pop
insl
test
add
fnstcw
or
lock
fidivs
xor
mov
pusha
jb
jbe
jp
and
push
xchg
les
push
rsqrtps
mov
lock
stos
dec
nop
add
int
jl
mov
out
stc
cmpsb
dec
xchg
pop
je
jmp
jp
rol
cld
add
mov
lret
add
add
enter
gs
fldcw
cltd
xchg
or
jmp
aas
out
lcall
mov
in
and
add
data16
mov
and
sbb
ret
pop
cwtl
and
inc
nop
add
int
pusha
pop
inc
push
outsl
lahf
mov
iret
xchg
orl
push
fsubl
jae
jmp
leave
adc
jb
call
fld
outsl
add
add
add
icebp
or
add
add
jo
imul
jbe
cmpb
add
add
dec
dec
xchg
add
xchg
mov
jnp
mov
inc
pop
push
push
mov
dec
or
add
mov
adc
add
xchg
stc
xchg
mov
cld
mov
add
xchg
adc
loopne
mov
or
xor
stc
jno
icebp
sbb
pop
sub
fnstenv
sub
push
mov
enter
add
jns
push
inc
xor
lds
arpl
pop
push
enter
pop
push
lcall
clc
je
mov
push
mov
ja
jle
add
cmp
adc
and
mov
les
add
cmp
add
dec
add
loope
jmp
mov
inc
arpl
add
push
xor
imul
push
cmp
outsb
mov
dec
je
lret
add
mov
mov
neg
mov
dec
mov
adc
push
xor
cwtl
jle
push
add
dec
into
sub
jmp
stos
out
and
xor
add
xchg
add
lds
fs
mov
int
adc
pop
jb
inc
mov
lods
outsl
neg
xchg
popa
jno
add
add
xor
add
and
clc
ljmp
inc
sub
rorl
pop
sbb
sub
or
ss
dec
inc
push
mov
fiadds
jno
add
xor
call
or
mov
jae
sahf
add
add
cmp
popf
jmp
rolb
fs
imul
data16
aam
lret
outsl
aad
sub
dec
add
add
cmp
sbb
dec
test
mov
les
add
sbb
les
in
in
loopne
mov
mov
aas
xlat
aad
sahf
mov
insw
mov
sub
inc
inc
subl
sub
ret
adc
std
adc
add
cmp
pop
pop
dec
jp
add
jp
out
mov
pop
divl
cmp
dec
mov
lods
test
xchg
pushf
cmpsb
mov
dec
cmp
and
push
cli
out
jnp
clc
pop
outsl
xchg
int
sub
addl
and
fs
jl
clc
pop
lods
jb
aas
fadds
inc
pop
pop
jo
imul
fisttpll
inc
sahf
add
sub
xchg
std
fstpt
pop
push
inc
addb
fiadds
push
cmpsb
in
das
mov
repnz
pushf
add
and
ja
in
cmp
fwait
xchg
int
pop
mov
push
dec
lock
xchg
insl
sub
mov
cmp
lret
mov
jo
roll
imul
movsb
shll
cmp
pop
out
sbb
mov
dec
repnz
jp
push
add
scas
jbe
dec
mov
add
push
sbb
jge
mov
loop
cltd
test
add
inc
sub
mov
sbb
adc
gs
ficoml
sbb
repz
out
pushf
loopne
sbb
add
insb
fsubrl
add
popf
nop
inc
sbb
test
sub
push
add
popf
mov
mov
ror
es
xor
dec
pop
jno
fstpt
mov
mov
dec
dec
scas
shll
mov
push
aas
mov
add
push
push
xchg
sbbl
std
push
pop
insl
pop
lods
dec
pop
mov
add
stc
icebp
push
dec
jg
lcall
push
cmp
adc
pop
lcall
add
cmp
test
xor
add
cmp
jnp
jb
sbb
jmp
push
and
in
ret
xor
lret
mov
push
inc
push
daa
fs
sub
ret
scas
ret
dec
popa
add
cmp
test
add
jecxz
pop
into
out
inc
jl
fwait
clc
js
mov
add
insl
add
mov
xchg
cli
movsb
cwtl
dec
mov
add
sub
jnp
dec
gs
iret
test
lods
mov
pop
or
sbb
ret
gs
xor
adc
and
das
or
cmp
icebp
pop
je
lret
dec
dec
mov
add
sahf
inc
ficoms
ja
sti
rcr
dec
sbb
add
in
jo
add
loopne
mov
notb
repz
mov
adc
xchg
mov
ret
out
or
xchg
lods
mov
mov
sbb
xlat
fsubs
xor
dec
mov
or
add
mov
add
push
pop
pop
dec
dec
es
dec
pop
repz
cmp
add
xchg
cmpsl
push
test
cs
lock
and
push
or
add
insb
mov
add
in
inc
mov
call
ja
xor
cltd
int3
out
add
sbb
jmp
sbb
cmp
cmc
jle
push
mov
movsb
stc
cmp
pop
dec
mov
xchg
shlb
and
inc
mov
add
mov
add
lock
imul
cmpsl
mov
mov
mov
int
test
mov
notl
in
out
out
pop
pushf
jl
dec
test
movsl
stos
mov
adc
imul
push
jns
cli
xor
arpl
nop
sub
sub
adc
addr16
sub
jae
push
xlat
sahf
shlb
pop
jle
nop
sub
push
andb
fdivp
xchg
int
je
popf
fdivrs
das
add
int3
cmpsb
add
std
jbe
xchg
and
inc
bound
dec
sub
mov
mov
sbb
inc
enter
dec
pop
adc
aas
jl
addl
pop
add
xchg
ja
dec
mov
fldl
add
inc
sti
add
sub
int3
xchg
add
adc
adc
mov
inc
scas
add
and
lds
scas
movsb
xor
add
mov
push
mov
add
mov
stc
stos
in
xchg
lods
clc
insb
ret
ret
push
cmp
add
dec
movsb
push
fistpl
add
mov
pop
jp
jg
push
aad
sbb
les
push
hlt
cmp
lods
fstps
adc
and
xchg
test
sbb
jne
negb
adc
pop
repnz
jge
pusha
or
and
fucom
imul
add
add
jb
icebp
cmp
test
xchg
ss
scas
lods
add
xchg
ret
cmp
imulb
and
fists
lcall
das
sti
sar
rorb
add
jg
inc
adc
pop
stos
adc
dec
popf
pop
push
inc
cmpsl
mov
popa
lods
cwtl
pop
mov
xor
add
xlat
pop
sbb
cwtl
inc
xor
xchg
cmp
test
xchg
jp
jecxz
les
mov
test
push
adc
fxch
mov
add
sahf
add
scas
push
push
ret
jns
inc
dec
dec
add
mov
lods
daa
dec
mov
add
and
roll
add
mov
into
pop
push
xchg
scas
jne
cmpsl
add
iret
sbb
mov
test
jmp
addr16
mov
sbb
insb
sbb
xor
and
out
int
cs
cmp
es
out
add
adc
add
add
xchg
or
add
dec
addb
add
inc
sub
xor
pop
xor
aad
add
add
movb
stos
or
dec
lcall
push
into
test
inc
mov
stos
cmpsb
mov
cltd
rclb
lahf
mov
jl
sub
dec
adc
stc
or
lret
addr16
pusha
lahf
out
pop
ja
mov
cmp
jne
ds
shr
xlat
dec
mov
rorb
test
jns
out
lcall
shll
hlt
push
lret
jecxz
jns
xadd
add
or
add
jg
fdivrs
cmpsl
int3
or
add
imul
fldt
scas
lock
push
leave
aad
roll
lock
lret
rcr
in
test
xor
and
clc
mov
and
lds
xchg
insl
mov
xchg
add
cmp
loop
inc
dec
add
loopne
call
imul
inc
adc
imul
sub
cs
add
inc
inc
add
ficomps
push
add
lret
movsb
scas
sbb
lock
test
scas
shll
adc
push
or
in
outsb
jmp
pop
inc
pop
add
adc
fistl
xchg
dec
daa
nop
scas
jae,pt
out
mov
call
pop
loope
hlt
mov
test
add
add
sub
dec
sahf
stos
dec
lods
add
loope
mov
mov
add
mov
add
hlt
dec
push
add
into
sti
rclb
dec
pop
or
add
jl,pn
das
push
int3
push
add
jg
gs
mov
sub
add
add
movsl
jbe
in
add
cmpsl
mov
inc
movsl
scas
adc
out
inc
pop
add
lret
into
push
fsubp
es
clc
and
push
pop
orl
sarl
rolb
add
xlat
xlat
aaa
aas
in
sbb
add
mov
push
popf
push
push
bound
fmul
call
xchg
out
mov
mov
into
cld
xchg
or
add
in
cmp
aam
fbld
and
pop
push
fs
iret
rcl
mov
add
outsb
and
cmp
dec
sub
xchg
mov
and
stc
ljmp
cmp
add
lods
sbb
mov
xor
add
lds
and
sub
gs
ret
shl
loopne
movsb
mov
subb
lcall
roll
roll
pusha
mov
cmpsl
pop
das
lods
push
add
jbe
loope
iret
stc
in
mov
pop
int
dec
sbb
cmp
cmc
xchg
loope
mov
bound
stos
or
js
and
jecxz
popf
dec
and
lcall
subl
mov
ret
jb
mov
pusha
add
dec
jmp
sub
out
cltd
fildl
scas
jnp
ficomps
cmc
stc
ja
sbb
sub
add
add
popa
pop
push
sub
mov
adc
sub
jle
mov
stos
call
add
out
lret
inc
add
aad
out
scas
add
add
lcall
pop
test
dec
dec
add
das
or
movsb
push
jno
insl
push
xor
in
dec
adc
in
and
loopne
pop
or
sbb
lods
pop
adc
das
cmp
aad
add
pusha
test
add
daa
pop
cmp
add
pushl
in
add
lcall
add
incl
add
addr16
mov
mov
loopne
cmpsl
icebp
jl
mov
sub
movsb
loope
adc
nop
xorb
aaa
fists
fisttps
add
inc
inc
and
sub
mov
pop
or
add
mov
daa
dec
mov
add
jl
movsb
mov
loopne
jb
pop
adc
mull
js
ret
les
or
push
std
in
cmc
xchg
jb
ja
sub
mov
ja
mov
ss
pop
stc
fiaddl
xchg
xchg
mov
xchg
jo
test
add
mov
rcrb
adc
loop
fucom
jae
flds
add
sub
pusha
jb
mov
xor
cld
mov
stos
xorl
das
add
mov
scas
xchg
pop
filds
mov
or
inc
data16
popa
in
push
cmpsb
rorb
add
mov
ret
push
inc
and
ljmp
add
mov
pop
imul
jg
xchg
cltd
testb
std
shl
fmuls
or
add
jp
push
scas
mov
cmpsl
jl
movsb
add
aaa
int3
daa
add
test
add
shll
jmp
jo
or
inc
dec
fildl
add
jg
push
jge
sbb
daa
lret
in
lret
jae
inc
xor
add
mov
mov
jle
call
xor
rorb
add
ret
or
add
sub
add
dec
jnp
fsts
fisttpl
iret
mov
xchg
stos
mov
cld
add
scas
lret
mov
add
in
mov
and
je
cmp
ret
movsb
lret
leave
add
lcall
daa
mov
iret
xorb
add
inc
mov
imull
popa
mov
ror
roll
mov
adc
cmpsb
idiv
rcll
add
mov
out
ja
mov
add
cmpsl
push
insl
sarl
enter
popf
stc
das
push
es
sar
into
push
pop
mov
mov
mov
add
ds
aam
loope
loopne
and
pusha
int
mul
cmc
rcrb
cmp
push
imul
add
sub
cmpsl
shll
call
lock
sub
sub
and
or
mov
into
adc
add
inc
push
loopne
mov
call
bound
jns
dec
shrb
in
add
sbb
imul
sub
mov
add
sarl
push
jb
jno
ljmp
ret
call
sub
mov
and
xlat
jp
cmp
cli
cld
enter
adc
adc
addr16
inc
add
inc
aas
add
sub
push
add
repnz
test
dec
jae
out
dec
inc
les
add
adc
test
rcr
lret
and
ljmp
add
mov
add
aaa
bnd
mov
mov
shl
xor
push
movsl
add
push
aam
inc
mov
jge
popf
out
popa
mov
jg
dec
shl
filds
mov
lret
lahf
mov
out
sub
or
add
fwait
loopne
in
repz
and
add
add
pusha
and
test
aad
loopne
adc
add
xor
xchg
repz
and
outsb
in
shrl
pop
sub
xlat
cmp
sub
xchg
dec
or
lock
lods
pop
cltd
div
mov
shlb
inc
jae
add
and
mov
stos
sbb
pop
push
push
nop
xor
clc
mov
sub
mov
add
xchg
aaa
enter
daa
out
imul
jo
push
das
dec
jmp
add
ljmp
add
add
mov
push
shll
in
sahf
cld
fs
inc
es
mov
ljmp
repz
pop
scas
inc
iret
jp
xchg
xchg
scas
lcall
push
loop
dec
popf
inc
dec
dec
xchg
ret
push
push
add
pop
adc
pop
mov
or
add
insl
dec
sub
pushf
adc
pop
jnp
aaa
std
mov
mov
dec
cmp
inc
out
and
insl
xor
orl
push
mov
scas
add
mov
mov
push
out
jmp
add
addr16
add
add
push
and
fadd
or
sahf
pop
adc
cmp
add
add
gs
add
mov
jecxz
inc
roll
add
in
mov
mov
add
or
mov
add
sahf
cli
imul
push
sbb
nop
loopne
sbb
js
iret
xor
add
pop
xchg
insl
repz
mov
out
pop
mov
test
add
xchg
push
jp
add
sbb
ljmp
mov
add
fsubr
shlb
add
popa
inc
and
cmp
js
fnstenv
xor
sbb
jne
out
xchg
insl
pop
inc
rorl
pop
into
sub
pop
addr16
das
sbb
subl
xchg
es
outsb
mov
dec
push
mov
pop
pop
hlt
mov
or
and
push
jmp
push
or
jne
sub
mov
f2xm1
push
xor
lret
push
mov
mov
loopne
add
inc
dec
add
rcrb
pop
dec
andb
add
sub
xchg
mov
sbb
push
fwait
out
nopl
shll
mov
mov
xor
rorl
pop
xor
aad
imull
xchg
mov
je
cmp
push
xchg
test
mov
icebp
cmp
sub
xor
cmp
loope
pop
stos
mov
adc
adc
dec
fwait
inc
daa
leave
nop
lcall
test
icebp
or
push
jp
scas
sub
push
cmpsb
sbb
mov
jno
xor
add
mov
jb
mov
inc
mov
inc
rcll
or
mov
push
out
ror
pop
es
jle
cmc
scas
int3
inc
add
imull
fwait
cli
pop
dec
scas
lea
std
lret
fstpt
sub
mov
add
xchg
add
stc
xchg
repnz
add
xchg
sbb
jo
xchg
pop
aam
pop
jle
push
and
xchg
jne
inc
xchg
stos
nop
pop
dec
call
arpl
aam
add
xor
jmp
lret
ja
xchg
or
or
jmp
sbb
push
into
out
ret
test
out
dec
or
iret
mov
js
cmp
add
fdiv
es
jecxz
xor
push
int3
in
add
push
add
sub
sarb
fisttpl
gs
mov
add
lods
stos
inc
cli
add
xlat
call
movsl
mov
ffree
daa
sarb
add
sbb
pop
insl
lods
into
add
add
daa
adc
or
adc
jns
insl
fwait
cvtpi2ps
popa
add
xchg
imul
movsb
add
sub
lods
call
call
xor
ret
lock
jg
fidivs
js
mov
mov
inc
pushw
sbb
enter
test
add
jbe
push
lea
nop
mov
push
xchg
xor
or
mov
mov
dec
add
xchg
add
pop
adc
jle
push
push
cwtl
cmp
add
in
scas
xchg
sub
dec
cld
add
call
add
je
mov
stos
insb
sub
jge
inc
xor
push
scas
movsl
sbb
ljmp
add
lret
mov
das
pop
mov
les
add
mov
add
loop
xor
add
jnp
mov
sbb
push
mov
inc
popa
test
add
jbe
jp
add
fwait
pop
gs
push
ret
jge
in
gs
out
mov
ficompl
add
into
jnp
adc
jns
inc
mov
xor
push
add
or
add
xchg
ja
popf
fs
jnp
iret
mov
jge
test
or
inc
inc
push
in
or
add
inc
push
add
mov
lcall
es
xchg
mov
xchg
inc
add
add
xchg
sub
mov
mov
xor
arpl
imul
add
mov
in
xor
add
mov
lahf
xchg
xchg
sti
push
push
mov
sub
add
xchg
mov
jno
xchg
cmp
push
mov
adcl
or
add
stc
mov
das
push
out
mov
rolb
xchg
mov
add
fisubrs
xor
cmc
mov
add
ss
adc
pop
es
enter
inc
roll
add
and
jge
push
jbe
loope
sub
add
xor
add
mov
ja
sbb
ljmp
test
add
pop
adc
sub
movsl
mov
enter
xor
mov
dec
fsubl
push
or
outsb
clc
enter
sub
push
push
jb
rolb
addb
popa
pop
add
add
mov
xor
nop
les
push
add
lret
adc
adc
push
push
decl
mov
fnstcw
pop
fstps
mov
fsts
test
add
xor
rcrl
and
fsubrs
sub
lds
pushf
add
mov
jecxz
jnp
lret
add
adc
push
sbb
mov
xor
cmp
add
dec
sub
push
push
lret
arpl
into
add
cld
std
or
add
xor
pop
dec
mov
add
add
mov
dec
in
pusha
ja
dec
push
stc
adc
lods
add
add
fildl
add
stos
dec
lds
lods
inc
mov
sub
add
fsubl
xchg
xchg
gs
ss
movsb
and
mov
rcll
setg
xor
xor
jg
insb
mov
sti
sub
rep
insl
movsl
mov
xchg
xlat
add
jae
pop
push
cwtl
or
add
insl
mov
out
mov
add
movsb
mov
jp
or
data16
std
sub
rolb
movsb
cwtl
outsl
pop
mov
das
sbb
insb
jbe
out
cmp
ja
pop
lret
add
cs
shll
xchg
daa
xor
pop
cmp
adc
sub
xor
pop
mov
adc
rcrl
push
xchg
push
lret
lods
adc
add
xor
aaa
fidivrl
dec
push
add
jg
cwtl
lret
call
add
aam
xlat
adc
roll
xchg
push
cli
jne
mov
sbb
cmc
not
in
jae
sbb
cmp
lcall
test
out
loope
adc
push
pushf
xchg
xchg
dec
cmp
outsb
int
sti
add
sbb
pop
test
mov
outsl
mov
jnp
mov
push
xor
jecxz
lahf
lahf
lahf
sbb
add
aaa
out
and
neg
sbbb
test
outsb
add
mov
xchg
aad
jle
sti
mov
stos
add
sbb
adcl
pop
jecxz
mov
xchg
dec
ficomps
jge
mov
repz
stos
jl
into
insb
xlat
cmc
in
pop
shlb
lods
add
sub
fisttps
daa
jns
mov
add
outsb
iret
inc
xchg
add
mov
sub
mov
add
pushf
jns
popa
in
call
sahf
popa
fstps
add
add
and
and
imul
jnp
inc
cmc
add
or
sbb
pop
cmpsb
std
add
jmp
push
dec
sahf
aam
jge
mov
lret
sub
cwtl
push
or
push
cmp
sbbl
jne
inc
push
add
jb
imul
in
sti
jno
lods
faddl
add
sldt
xchg
aas
xor
add
inc
leave
mov
jnp
jmp
pop
das
sub
clc
es
movsl
add
xor
lret
pop
repz
inc
pop
adc
push
adc
popa
mov
add
or
xor
mov
pushf
push
icebp
adc
addr16
xchg
push
mov
sbb
xchg
ss
in
ret
addr16
add
lahf
loopne
les
add
iret
xchg
mov
out
shl
mov
jg
mov
add
dec
sub
xchg
add
aaa
jg
shll
jae
psllq
cmp
out
fmul
add
dec
jge
jmp
cmp
sbb
dec
jne
ret
mov
lea
imul
xchg
jbe
test
stc
mov
in
fstps
adc
jl
or
sub
icebp
xchg
jecxz
dec
add
push
in
js
mov
loop
int3
les
add
inc
lods
xchg
mov
xchg
and
int3
bound
add
out
loopne
sbb
cmp
icebp
sbb
add
mov
mov
repz
sbbl
xor
shll
xorb
add
stos
push
aaa
sub
mov
pusha
sbb
mov
sbb
add
adc
ret
jno
xlat
adc
stc
add
arpl
lods
add
mov
icebp
fwait
mov
mov
fcmovbe
scas
cmp
out
or
sub
lret
ljmp
cld
inc
aad
jge
and
scas
pop
shrb
repz
pop
sar
ljmp
add
add
into
out
xorl
in
stos
sbb
sbb
insb
add
dec
js
std
mov
add
sbb
jge
sub
and
sbb
std
jle
mov
fisubl
push
ja
test
mov
out
addr16
lods
bound
sub
mov
or
add
imul
addr16
xorb
cld
int3
lds
add
hlt
clc
pusha
sbb
repz
or
pop
push
pop
jle
jl
jl
es
add
push
mov
push
add
les
add
out
sbb
sbb
dec
mov
fadds
add
or
add
xor
lret
pop
je
mov
add
sbb
cli
cmp
add
push
push
movsb
mov
andb
add
lcall
stos
es
int
test
cmp
mov
dec
inc
je
xorb
add
popa
popf
mov
inc
push
add
add
mov
add
int3
mov
dec
les
add
hlt
add
and
adc
stos
or
add
loop
outsl
mov
jge
or
add
mov
add
push
mov
test
add
enter
sbb
scas
push
add
add
push
push
cmp
cwtl
mov
xchg
mov
push
cld
mov
add
add
inc
push
stc
pop
push
dec
and
add
je
pop
jl
ljmp
pop
mov
xchg
mov
mov
and
cmpl
stos
xchg
rol
pop
fimull
sbb
fwait
aas
testb
lock
stc
pop
fildl
notl
in
inc
mov
lcall
daa
add
sbb
mov
jnp
add
cmp
clc
cmp
mov
cli
lret
aas
push
cs
fiadds
add
sbb
in
xchg
mov
add
mov
in
mov
cmp
clc
sub
sbb
add
xchg
jbe
or
add
xor
lret
cmp
arpl
movsl
sahf
and
pop
icebp
ja
xlat
xchg
out
incb
add
test
pushf
mov
xchg
sbb
and
xchg
add
insb
xchg
movsl
mov
shlb
xorb
push
jecxz
scas
cmp
xlat
dec
mov
insb
cmpsl
lahf
xchg
xor
call
mov
out
pop
jmp
cvttps2pi
clc
je
push
add
test
xchg
fldcw
out
or
cmp
arpl
lock
xlat
ja
cmc
stos
nop
jne
mov
add
mov
cmp
inc
jo
dec
scas
pusha
dec
loopne
mov
add
fisttpll
or
add
jmp
add
mov
in
sub
add
loope
insl
add
xor
rolb
mov
add
cld
xchg
pop
stos
mov
jp
jnp
sub
xchg
das
cmp
or
sbb
push
lcall
add
call
add
dec
add
add
sbb
cmp
inc
rolb
add
cmc
or
or
sbb
cmpsb
cmp
dec
and
mov
sub
aaa
add
add
lods
sub
roll
xor
pop
in
cmp
fisubl
mov
xchg
aam
nop
xor
fstpt
rolb
int3
into
add
movsl
cld
jmp
stc
cld
out
xor
pop
and
add
add
sbb
mov
add
es
add
arpl
xor
inc
jg
adc
inc
pop
inc
dec
jl
add
int3
dec
add
mov
jge
xchg
xchg
sti
xor
add
std
sbb
mov
jle
add
mov
jb
lret
rorl
mov
rolb
add
stos
shll
add
pop
icebp
sbb
jnp
pop
inc
push
add
out
mov
clc
cs
dec
nop
add
jge
xchg
adc
mov
jae
and
test
add
js
mov
outsb
shlb
test
ss
inc
hlt
cld
leave
cmp
out
fldcw
cmp
push
ds
loopne
or
add
repnz
adc
pushf
outsb
das
cmp
outsb
jmp
cli
mov
dec
mov
sbb
lret
pop
pop
pop
mov
cmp
add
cltd
jb
xlat
cmpb
push
jmp
into
les
adc
add
inc
add
fwait
jmp
lret
out
scas
add
add
dec
jno
add
adc
push
pushf
test
lds
dec
data16
out
call
mov
xchg
push
hlt
mov
add
or
js
or
shll
add
pop
aad
out
jno
out
mov
xlat
test
sbb
dec
mov
xchg
jno
into
add
or
outsb
push
push
arpl
out
mov
cli
sub
and
dec
push
push
xchg
and
and
xchg
loope
add
insb
push
mov
test
add
dec
pop
jmp
lods
sti
lods
mov
jge
mov
dec
inc
loopne
and
mov
xchg
imul
out
in
mov
xor
test
add
dec
std
ja
add
add
movsl
xchg
sbb
sbb
fwait
inc
xchg
out
add
fcomp
out
sub
mov
inc
in
inc
inc
add
outsl
or
mov
add
or
jle
adc
sbb
adc
mov
push
jno
add
add
notb
aam
mov
add
dec
pop
jae
and
test
lahf
mov
or
cmp
in
mov
xchg
add
add
add
ljmp
pop
sub
jnp
add
in
je
popf
inc
jnp
je
lcall
ror
add
cli
pusha
fsubs
lret
push
aaa
nop
push
xchg
dec
or
add
and
inc
xor
mov
mov
jb
js
out
es
cli
and
jp
stos
ljmp
fidivs
xchg
push
xor
and
dec
mov
fldcw
shl
xor
push
dec
negl
cmp
add
enter
fwait
imul
cmp
mov
andl
shll
fidivl
int3
mov
add
pop
add
mov
add
xor
xlat
add
dec
sbb
add
add
mov
xchg
xchg
pusha
call
shrb
dec
push
xchg
aaa
lods
xorb
aam
fdivrs
call
jb
fnsetpm(287
repz
ret
divb
jle
jb
inc
movsb
add
mov
add
nop
mov
push
dec
sbb
adc
sbbl
mov
lret
mov
add
addr16
mov
mov
out
ds
xchg
add
lds
add
add
fucomi
adc
jge
ret
dec
jnp
adc
bound
add
dec
xchg
test
pop
ljmp
cmp
xchg
and
mov
cmp
add
aas
dec
jo
test
mov
mov
dec
pop
mov
dec
add
add
scas
ds
inc
rcrl
inc
add
sub
enter
push
jae
pop
mov
ficompl
aas
popf
cmpsb
cmpsb
xlat
xor
add
pop
or
add
popf
jmp
es
xchg
cld
and
sbb
add
add
and
xchg
fs
pusha
divb
dec
scas
lcall
add
cwtl
push
jns
nop
add
add
fimull
jmp
sbb
jle
leave
jno
adc
add
and
clc
movsb
xor
ja
into
test
into
sub
pop
add
push
mov
lret
cli
fistps
inc
test
daa
fcmovne
cmpsl
popf
mov
je
and
dec
data16
push
add
push
add
add
stos
cli
jmp
pop
cmpsb
std
inc
jno
add
imul
adc
add
add
add
popf
push
push
addl
test
inc
pop
pop
mov
add
call
repz
sub
addr16
add
mov
pop
push
sub
sub
icebp
cld
aas
enter
not
mov
repnz
xchg
in
ficomps
mov
lods
mov
add
mov
je
add
or
add
xor
loopne
and
ret
add
cmp
aas
mov
lea
sub
add
fcmovnu
and
fs
push
pop
cmpsb
inc
add
add
add
das
fdivs
jae
andl
jg
add
add
rcll
mov
add
pop
fimull
add
fnstsw
add
mov
jo
mov
add
fldcw
cmpsl
dec
pop
add
rep
fs
jecxz
push
daa
jo
lods
xchg
jmp
fisttpll
imul
xchg
jbe
cmp
add
outsb
pop
sbb
not
scas
jle
fstpt
mov
push
inc
das
push
jo
mov
inc
test
add
add
call
add
add
sbb
mov
mov
mov
inc
inc
push
jno
mull
add
popf
push
sub
dec
sub
add
add
in
push
aam
call
mov
fld
cltd
test
pushf
les
add
mov
adc
nop
sbb
and
mov
push
sti
mov
aad
stos
stos
dec
mov
add
lret
add
add
fiaddl
dec
lcall
lcall
dec
jns
fbld
flds
arpl
add
add
rcrb
xlat
xor
test
fcomps
mov
add
mull
cmc
add
icebp
pop
sbb
or
in
cmp
add
mov
inc
cltd
add
ljmp
or
pop
lods
pop
xchg
fdivrs
pop
mov
out
add
or
push
sbb
push
stos
xchg
ljmp
push
dec
dec
pop
mov
bound
jle
add
fdiv
popf
push
fistps
loopne
push
sub
jle
jnp
into
push
imul
lds
outsb
xor
jmp
mull
sub
sbb
add
add
pop
shrb
je
add
add
out
mov
pushf
lret
daa
sub
int
add
test
xchg
fidivl
jnp
popl
and
cmc
loopne
je
add
inc
fsubr
aas
xlat
mov
testl
push
jl
push
inc
jp
add
inc
leave
add
add
add
stos
cmc
into
fwait
add
dec
and
lock
pop
pop
shll
add
sub
push
jo
push
ja
sbb
mov
lds
clc
loopne
popa
insb
rolb
dec
fs
scas
dec
lock
das
xchg
test
mov
inc
sub
insb
fistps
xchg
iret
mov
xor
scas
cltd
push
jb
dec
xor
addb
mov
rolb
add
and
add
mov
jno
rcr
mov
add
out
fsubl
ds
enter
es
subl
add
scas
lea
or
add
stos
xchg
out
outsb
lds
orl
add
das
push
std
and
sti
testl
or
test
sbb
mov
shrb
push
sbbb
mov
or
add
xchg
add
outsb
push
stos
int3
pop
add
cli
out
dec
xchg
jmp
add
ja
sub
add
jnp
xor
push
aas
cmpsb
mov
or
int3
fadds
add
shrl
cmc
mov
push
gs
or
add
inc
add
add
add
fwait
mov
mov
popa
clc
clc
fbstp
mov
push
je
mov
add
arpl
push
cmc
xchg
insl
xor
loop
repz
and
mov
xchg
pushf
add
nop
and
add
jo
je
push
ret
test
in
aad
lock
add
pop
dec
adc
mov
pop
xchg
cmp
icebp
sbb
dec
loop
mov
pop
bound
loope
push
pop
iret
dec
mov
add
pop
or
mov
pop
icebp
hlt
pop
ljmp
push
adc
cs
lock
push
aaa
pop
lods
push
insb
pushf
stc
push
lods
fnstsw
sbbl
dec
pop
loop
out
call
add
jbe
pop
add
add
jmp
je
movsl
or
fbld
add
push
addr16
out
or
adc
mov
inc
cmp
xor
pusha
fbstp
or
inc
imul
arpl
mov
add
xor
add
push
mov
push
stos
sbb
fsubs
imul
add
fadd
inc
push
add
adcl
inc
push
mov
pop
repz
sub
outsb
jle
cmpsb
popl
mov
mov
stos
xor
adc
xchg
pop
fbstp
pushw
mov
push
fwait
loopne
inc
mov
add
cmp
sub
outsb
sti
addb
inc
pop
add
data16
lcall
and
sbb
dec
mov
in
cwtl
stos
pop
mov
add
aas
sub
hlt
lret
test
add
arpl
push
xchg
mov
sbbb
add
mov
insb
mov
add
add
push
test
add
xorl
jg
je
das
adc
out
mov
dec
test
add
insb
outsb
dec
xor
add
cmpsl
cmp
cs
aaa
testb
add
add
lods
inc
and
icebp
xchg
cmp
dec
addl
add
sbb
aam
or
jns
lahf
in
dec
incb
add
push
cmc
xlat
into
push
cwtl
into
dec
mov
mov
push
divb
add
fistpll
dec
fwait
add
shll
xchg
call
aaa
xchg
add
xchg
lahf
pop
adc
jge
scas
or
jne
add
aas
hlt
fdivrl
sub
das
mov
mov
mov
mov
lea
dec
mov
add
mov
or
add
push
dec
cmp
add
pop
adcb
mov
mov
out
data16
mov
add
adc
dec
jmp
xor
imul
mov
adc
aaa
add
shll
add
xlat
mov
mov
xchg
leave
sub
add
jne
movsb
mov
mov
add
loop
dec
xchg
jno
dec
and
dec
in
sbbl
jmp
mov
icebp
xchg
dec
jg
lds
adc
mov
ret
cld
xchg
add
ret
out
shll
out
out
adc
xchg
push
sldt
out
inc
sahf
add
lahf
mov
mov
xor
or
push
cli
mov
rcrb
xor
sub
push
gs
push
lahf
sbb
pop
fldl
add
enter
cmpl
add
daa
std
cmp
push
cmp
add
ficoml
jne
push
iret
in
mov
lods
imul
mov
add
addr16
or
add
and
dec
or
add
arpl
sbb
lret
jp
sub
dec
push
add
test
pop
inc
cmc
push
int
mov
add
clc
fwait
sti
push
stos
pop
ret
stos
xchg
xchg
add
loope
mov
xchg
xlat
dec
push
add
cld
push
inc
push
jne
xchg
and
sti
adc
test
jg
cmp
mov
add
pusha
mov
flds
add
mov
shlb
sbb
testl
add
nop
aam
lret
mov
add
xor
and
outsl
in
adc
add
dec
jns
add
mov
aam
add
dec
imul
lds
mov
out
rcll
cmpl
push
mov
fwait
leave
inc
insb
jae
push
dec
dec
int3
or
jle
mov
mov
cltd
and
sbb
adc
mov
fimuls
add
rcll
out
xchg
pop
adc
popf
add
roll
xor
add
addr16
hlt
loopne
int3
mov
add
test
out
ret
in
call
or
jmp
mov
bnd
jns
jno
and
inc
xchg
je
jo
mov
xlat
mov
dec
lods
add
mov
faddl
add
adc
inc
inc
xor
push
dec
aam
add
lcall
outsl
add
leave
jge
and
stos
in
ds
lea
xchg
mov
arpl
movq
ds
mov
stc
cmp
mov
push
rorl
xor
dec
sub
add
idivl
cmc
mov
leave
icebp
sub
adc
jbe
pop
push
xchg
mov
clc
xchg
push
adc
add
add
add
xchg
xchg
addr16
mulps
fldl
cmp
cmpl
mov
add
jp
and
push
xor
fnstsw
js
addb
add
insl
mov
inc
sub
xor
add
bound
add
or
add
ffreep
gs
add
gs
shrb
pop
mov
aam
and
iret
and
bnd
dec
mov
or
mov
jp
push
dec
or
add
xlat
jae
fbstp
cld
inc
mov
testb
pusha
or
adc
pop
scas
repz
add
flds
add
leave
xor
or
add
cmp
and
pop
addl
dec
xor
mov
jns
cmp
fldl
add
stos
add
inc
out
add
mov
das
scas
jns
std
push
cmp
jo
jo
mov
jecxz
add
stc
mov
movsl
rolb
add
aam
xchg
and
leave
dec
sub
mov
ljmp
sar
or
push
out
int
outsb
jnp
mov
int3
dec
add
scas
xchg
sbb
stos
loope
cmp
dec
movsb
sti
adc
sub
add
add
adc
sub
addr16
js
lods
add
mov
insl
mov
push
shrl
adcb
dec
jbe
mov
inc
xlat
mov
add
dec
xor
pop
arpl
pop
popa
insl
or
lret
loope
xchg
not
pop
push
rclb
movsl
mov
arpl
jge
add
sbb
lret
das
mov
adc
add
out
je
or
add
cmpsl
cmp
in
xchg
int
ficoms
add
add
xchg
mov
lea
adcl
pop
and
daa
mov
and
xor
int3
xor
add
mov
add
shlb
add
add
xchg
add
cwtl
popf
xor
mov
or
cwtl
stos
fs
mov
add
mov
sbb
or
add
and
pop
mov
add
sub
pop
cmp
cmpsb
jle
lcall
pop
add
adc
jl
rclb
xor
add
aaa
jmp
and
scas
nop
mov
call
pop
push
pop
mov
mov
push
pusha
dec
cltd
addb
add
cmpsb
insb
xor
mov
add
sbbl
imul
movsl
xchg
xchg
aad
cmp
xchg
mov
lea
ljmp
mov
in
mov
int
add
lods
add
mov
mov
pop
insb
and
add
add
repz
jg
inc
jle
xor
mov
push
xor
roll
add
mov
sub
lea
shl
jae
sbb
jns
push
jae
fdivrl
add
fs
or
cld
test
call
pop
or
repz
fnstcw
stos
pop
push
in
sub
enter
pop
xchg
cmp
mov
cmp
jno
mov
add
adc
bound
push
pop
fistps
stc
clc
hlt
mov
pushl
add
add
ds
sub
data16
jae
cld
add
gs
pushf
xchg
sub
xchg
rcrl
sub
lret
int
inc
xchg
add
pop
and
int3
lret
add
jle
repnz
adc
add
xchg
ljmpw
xchg
push
add
lds
cmp
mov
add
or
test
cmpsb
add
add
and
cmp
mov
clc
ret
clc
fsubrs
aaa
fdiv
ret
jbe,pt
lods
xchg
xor
sub
xchg
xchg
daa
cmc
aas
daa
sahf
cmp
mov
int
cs
xor
test
movsb
ljmp
stc
push
push
pop
cmp
aad
sub
add
in
jl
and
iret
test
xchg
add
lock
add
in
lahf
loope
in
cmc
daa
in
test
add
imul
js
add
add
jb
adc
mov
icebp
push
push
ficomps
push
jmp
inc
adc
decb
add
jp
sti
push
ja
pusha
add
cmp
in
add
mov
adc
add
or
adc
inc
je
nop
movsb
mov
das
stc
mov
push
and
lods
addb
push
rcrl
cmp
add
fisubrl
sbb
add
pop
xor
std
jae
add
xchg
add
xor
xor
inc
stc
add
dec
push
decb
or
call
cmp
clc
cmp
rorl
repz
js
mov
insb
pop
out
sar
xor
cli
repz
imul
jne
clc
loopne
movsb
divb
aas
xchg
mov
lea
sub
dec
sti
inc
ror
push
xchg
xlat
pushf
in
mov
xchg
sbb
jb
aad
and
add
pop
lock
sbb
aam
jns
fmul
pop
dec
loopne
jg
lea
xchg
sub
shrl
pop
in
neg
mov
jns
fidivrs
cmp
es
lods
cmpsb
xchg
push
xor
push
xor
int3
xlat
add
adc
push
xchg
ficoms
push
cmc
or
mov
into
outsl
sub
inc
mov
ror
aad
add
push
pop
and
mov
sti
js
add
push
jne
jae
sbb
and
mov
add
add
ljmp
sbb
mov
jl
mov
jecxz
ffreep
out
cmc
mov
add
movsl
dec
inc
add
add
mov
add
xor
cmp
ja
jge
xchg
mov
in
mov
cmpsl
and
aad
imul
shld
sarb
push
aam
insb
mov
add
fldl
and
scas
pop
or
add
mov
add
add
mov
aad
and
repnz
jge
les
add
ret
nop
ret
mov
jecxz
insl
out
aas
xlat
iret
jbe
roll
jle
xor
fadds
add
aas
add
add
add
add
or
push
fs
repz
stc
push
notb
into
mov
xor
dec
fistpl
imul
lahf
movl
lds
lds
insb
adc
inc
pop
add
add
clc
cmp
jmp
daa
cli
sub
cltd
cmp
sbb
jne
adc
ret
cs
pop
loop
fstpl
push
jmp
jnp
fbld
mov
or
sbb
add
addr16
lods
cmp
lods
cmp
out
fisubl
aam
add
add
and
cmp
arpl
jnp
adcl
push
cmc
cltd
call
scas
andb
fucomp
mov
dec
add
add
lret
push
add
or
mov
add
mov
aas
pop
vpmulhuw
sbb
testl
mov
sbb
pop
adc
inc
mov
add
pop
ret
sbb
cmp
add
das
mov
or
push
add
sbb
mov
add
add
mov
pop
and
add
add
sub
cmpsb
enter
lods
insl
in
cli
xor
addl
pop
test
fwait
icebp
and
sldt
xor
add
sbb
das
xor
subb
or
add
jne
out
jb
rcll
jae
fiaddl
add
jg
ljmp
xor
add
xchg
dec
daa
add
aad
jle
loope
mov
add
cwtl
adc
jge
data16
mov
fistpl
in
cmp
mov
cmp
cmp
call
jb
insl
jno
rep
popf
sti
shrl
andl
mov
mov
add
adc
fdivs
inc
data16
int3
and
inc
cmp
and
jb
int
jo
pop
out
jns
out
bound
xchg
add
push
add
scas
add
push
out
popa
aas
test
in
cmpsb
pop
lods
and
xor
add
xor
add
add
jbe
push
lret
cli
inc
loope
push
aam
shr
push
cmp
cmp
pop
aas
mov
add
add
or
add
lret
insb
dec
xchg
arpl
or
movsl
and
push
out
popf
jnp
cmp
test
icebp
push
ljmp
or
add
cmc
or
mov
stos
push
mov
andl
or
sbb
sub
xor
add
in
jp
pop
pop
xchg
dec
insb
add
jo
and
in
or
add
dec
xchg
in
ja
je
add
xor
or
add
mov
bound
add
jmp
cmp
add
dec
stc
repz
popa
and
jl
mov
add
pop
add
or
shl
push
add
pusha
push
daa
pop
mov
cmp
fsts
loopne
add
xchg
dec
movsb
scas
imul
jno
push
push
pushf
xchg
stc
mov
add
in
jns
inc
jmp
mov
in
outsb
sbb
add
sbb
and
xchg
add
add
les
add
aam
cs
mov
mov
xchg
sbb
ficomps
iret
lahf
mov
ljmp
sub
ss
cltd
dec
adc
mov
push
fadds
add
push
incb
lods
inc
cld
add
adc
jae
jecxz
pop
cmc
inc
imul
xor
rcrb
ret
xor
ret
ret
push
and
imul
pop
ret
xchg
aaa
push
call
cmp
xor
std
jnp
mov
aaa
sbb
test
testl
sbb
sbb
ja
xchg
jne
stc
jg
mov
pop
pop
stos
mov
shrl
add
nop
cmpb
add
mov
lcall
and
push
ja
cld
or
fidivs
xchg
push
or
add
ret
mov
stos
notb
insl
andl
add
mov
jge
aam
adcl
add
or
add
and
pop
xor
aam
ret
xchg
inc
repnz
inc
jb
adc
outsb
cmpsb
pop
data16
xor
pop
dec
or
add
pop
adc
cmpsb
and
adc
dec
ljmp
mov
imul
xchg
loopne
cmp
aad
cmp
lods
les
cmc
hlt
dec
push
pop
xlat
repz
int
fdivrs
pop
push
mov
jns
add
mov
push
xchg
rcrl
bound
dec
add
cwtl
ret
pop
xchg
jo
cmc
add
hlt
test
fdivrl
sbb
lret
add
sbb
push
lret
test
ja
or
add
fstl
mov
faddl
sbb
gs
icebp
cmp
lret
out
rclb
fidivrs
push
adc
iret
lods
pop
stc
loopne
jo
add
mov
ret
int3
rolb
jecxz
insb
mov
add
vpsrlq
je
enter
adc
je
incb
mov
add
into
mov
jmp
cmc
add
mov
add
add
add
fsubrs
mov
lods
add
add
adc
add
add
xchg
lods
popw
flds
cmpsl
in
negl
push
pop
ficoms
mov
fwait
test
add
xchg
iret
jns
mov
add
xor
push
mov
jo
jne
xchg
sub
xor
mov
imul
add
cld
test
xor
push
sbb
sahf
add
mov
not
testl
mov
fsubl
dec
loope
add
add
mov
repnz
lock
ljmp
sti
mov
sub
or
xor
pop
movsl
sarl
loop
add
xor
cli
mov
insb
mov
push
sahf
sub
mov
sbb
sbb
xor
xchg
loop
xorb
add
jo
addr16
mov
int
inc
and
add
rcrl
mov
add
xchg
and
sbb
std
mov
fadds
popa
je
int
ds
inc
mov
cmp
or
dec
sbb
add
movsl
cwtl
cmp
bound
add
ret
adc
sbb
xor
jle
adc
mov
cmp
fcmovu
fnsave
in
adcb
and
dec
pcmpgtw
mov
mov
sbb
icebp
jnp
mov
add
stc
cmpsb
sub
jno
add
cmp
lea
add
pop
rol
adc
add
imul
jno
dec
cmpsb
cmpsb
mov
sbb
dec
addl
or
cltd
jg
std
loop
and
xor
add
rcll
sbb
dec
dec
inc
jnp
jae
sbb
ljmp
pop
insl
insl
dec
insb
clc
popl
fisttpll
add
stos
push
ss
mov
sub
lock
inc
adcb
jns
sub
daa
fnsave
int
pop
lcall
loope
in
mov
leave
gs
lcall
add
or
test
xor
sbb
xlat
movsb
aas
or
add
adcl
add
jle
add
faddl
dec
add
cltd
stos
cmp
lds
sahf
sub
bound
add
fs
xchg
jle
ret
cmp
jecxz
scas
pop
imul
and
stos
pushf
jge
es
sarl
leave
push
and
out
adc
nop
jb
mov
add
pop
jae
das
add
add
adc
pop
rcll
jae
inc
jno
add
push
jmp
jmp
les
add
pop
out
cmp
adcl
push
js
xchg
and
sub
loop
subb
sbb
or
div
insb
sub
pop
loop
fnstenv
mov
xchg
cwtl
add
pop
jge
das
push
lcall
cmpsb
test
sub
jb
dec
add
xlat
jp
push
cmpsl
out
lahf
jmp
sbb
fsubs
xchg
mov
xchg
sub
iret
out
out
sbb
cli
lods
fs
mov
add
insl
push
mov
push
enter
mov
add
fsubr
mov
add
mov
mov
add
out
enter
push
pop
aas
mov
mov
pop
inc
push
test
add
mov
mov
rcr
je
shll
jne
add
jnp
gs
pop
xlat
cmpsl
inc
scas
in
push
push
movsl
int
sbbb
out
das
add
testb
xor
loope
sbb
adc
add
push
mov
les
add
ljmp
inc
enter
addl
pop
icebp
aad
and
jp
cmpsb
lea
bound
ret
jnp
xchg
sbb
add
push
cs
in
daa
add
add
add
push
loop
sarb
int3
or
add
pop
add
rcrb
add
dec
xchg
loopne
adc
call
sub
push
add
add
loope
cmp
jmp
xchg
imul
lcall
mov
sti
ds
cmc
xchg
jl,pn
std
mov
pop
inc
incl
add
sarl
out
sub
stc
jmp
add
and
fcomip
or
sub
sbb
ret
jno
push
dec
testl
adc
outsl
fisttps
sldt
inc
pop
les
add
negb
outsl
ljmp
sahf
pop
cmp
stos
xor
lds
inc
inc
xor
insl
sahf
xor
ds
ljmp
fdiv
mov
add
movsl
sub
jl
pop
jmp
sbb
jg
push
lret
add
xor
add
jecxz
fstpt
xchg
je
orb
fs
adc
add
add
xlat
cmp
jmp
repz
cmc
imul
fidivrs
xlat
out
add
ret
cmp
adc
or
add
in
push
xor
sub
pop
adc
add
shrl
adcl
mov
mov
leave
mov
and
mov
mov
add
inc
and
sbb
add
adc
add
add
and
movsb
cmp
icebp
rep
popl
add
mov
je
loopne
sub
data16
add
daa
push
or
add
xchg
dec
popa
rcll
aam
xlat
setae
sahf
sahf
xor
cmp
inc
pop
test
add
sbb
std
xchg
mov
xchg
dec
pop
add
out
ret
mov
cs
loope
rolb
add
setp
sahf
add
xchg
psubsb
dec
cli
xchg
dec
dec
lahf
jge
sub
mov
frstor
outsl
jb
sub
push
nop
in
and
cmp
fimuls
adc
jp
ljmp
mov
in
and
out
xchg
clc
and
sub
jo
and
dec
add
add
mov
hlt
adc
or
jnp
cmp
add
enter
sbb
cmp
lock
mov
rol
push
sbb
movsb
pop
pushf
pop
into
movsl
jns
pushf
dec
in
in
xchg
movsb
lret
cmp
test
xor
xchg
xor
add
sti
and
add
inc
roll
cmp
add
push
jp
dec
mov
scas
mov
aaa
neg
mov
aad
testb
cs
xchg
xchg
in
inc
popa
cmovl
add
in
mov
pop
add
adc
mov
xor
in
sahf
shrb
stc
inc
lock
sub
pop
repnz
jg
add
add
add
lods
int3
add
add
adc
inc
pop
add
jno
xor
adc
fidivs
dec
inc
xchg
leave
nop
pop
andb
sbb
ret
out
pop
ficoms
cmp
cmc
cmpb
out
xchg
cmpsb
call
inc
mov
stos
cli
xor
lea
inc
add
push
cld
pushl
xabort
int3
pop
add
adc
and
cmp
lock
call
fbld
bound
fimuls
mov
push
sbb
sub
fwait
push
push
fistpll
add
xlat
ljmp
std
dec
push
add
xchg
add
mov
add
jb
add
add
sub
add
pop
jae
test
add
movsb
add
mov
roll
pop
call
add
xor
or
add
xchg
popa
cltd
sub
mov
outsb
rcrb
pop
js
jge
add
add
push
xlat
cmp
cwtl
repnz
ret
adc
xchg
add
mov
scas
shlb
dec
test
add
add
out
lds
add
mov
daa
mov
add
add
add
xor
or
add
test
and
dec
add
cmp
add
add
repnz
aaa
loope
add
dec
pop
lods
adc
nop
packuswb
test
push
dec
in
movl
cmp
adc
insl
mov
mov
subb
mov
push
add
add
sti
adcl
cmpsb
xchg
inc
sbbl
add
out
push
mov
hlt
add
jecxz
mov
add
daa
mov
scas
inc
ret
shlb
mov
add
sbb
add
add
push
add
ss
adc
mov
sub
sbb
jo
std
js
or
add
sub
jns
push
dec
xlat
repz
call
sbb
out
add
xor
push
pop
jns
cmpl
cmp
pushf
nop
and
dec
fistpl
sahf
das
pop
repz
arpl
mov
movsl
out
push
outsb
or
add
cmc
cmpsl
iret
stos
fdivrl
lret
jae
aad
ljmp
mov
add
cmc
pop
sbb
fsubl
mov
xor
dec
add
xor
add
int
or
add
jp
cmpsl
test
cli
call
outsb
imul
add
pop
xor
fs
add
in
xchg
popf
leave
clc
inc
sahf
rcll
hlt
nop
add
add
jns
mov
jge
in
outsl
out
pop
cmp
gs
mov
clc
pop
cmpsb
inc
cltd
icebp
loope
cwtl
push
jne
adc
push
add
inc
leave
out
test
je
rcll
jo
and
inc
cmp
add
pop
push
mov
add
pushf
mov
rcr
test
push
shrl
and
lcall
imul
mov
loope
add
or
sbb
add
in
xchg
iret
and
fistl
lea
add
in
arpl
gs
adc
mov
daa
movsl
sub
out
outsb
fdivrs
and
dec
lahf
lret
cltd
xchg
and
push
push
dec
lods
xchg
push
push
iret
push
ss
arpl
clc
sbb
push
int
mov
adc
test
pop
push
cmp
mov
add
mov
jno
outsb
inc
mov
jmp
addr16
cmp
aad
roll
int3
mov
cmp
sbb
sbb
add
fsubp
ret
cmp
inc
xchg
add
sub
jno
cmp
sub
dec
pop
xchg
movsb
iret
cmp
lret
add
cmp
pop
js
gs
pop
inc
pop
sub
push
pop
movsb
cltd
mov
mov
pop
jge
mov
sub
xor
add
pop
adc
out
in
cmp
add
movsb
clc
sub
in
arpl
mov
rcrl
ss
dec
dec
add
mov
sbb
shlb
mov
add
arpl
sbb
add
cs
jnp
and
ljmp
test
inc
sarl
fwait
lss
adc
sbb
xchg
push
push
enter
sub
push
stos
pop
lcall
mov
add
add
sbb
mov
add
cmpsb
sub
js
mov
xchg
cmpl
or
add
add
gs
clc
movsl
popa
pop
stc
int
sub
mov
fs
dec
push
add
dec
imul
pop
or
pop
cmp
push
dec
les
add
push
scas
mov
adc
add
frstor
mov
mov
jcxz
pop
loop
and
pop
sub
cmp
sarb
fdivrs
out
push
xor
add
inc
pop
lahf
fldenv
fstps
adc
fisttps
daa
add
pop
sub
push
push
xlat
mov
lret
loopne
ror
adc
fbstp
lock
inc
add
sub
sahf
sbb
jp
push
add
stc
adc
les
sahf
stos
cmp
xor
add
adc
rorb
insl
cmp
roll
enter
lret
out
sbb
sbb
lcall
add
fbstp
hlt
repz
fidivrl
imul
sub
cmp
jae
xchg
pop
adc
add
mov
push
imul
add
add
ret
or
int3
in
add
flds
xchg
sub
mov
cli
dec
negl
out
das
or
add
scas
xchg
adc
movsl
out
inc
notb
xor
cmp
add
dec
push
sbbl
loope
mov
pop
clc
dec
or
xor
mov
sbb
add
pop
inc
adc
pop
add
sarb
xor
or
stos
in
pop
cmpl
push
sahf
mov
cltd
jle
pusha
cs
xlat
shll
cltd
xlat
adc
cs
aad
add
insl
cmpb
xor
mov
cli
xor
adc
lret
roll
in
cmp
jae
xchg
insb
fimuls
pop
add
rorb
add
pop
or
cmp
pushf
adc
add
xchg
mov
stos
outsl
jmp
daa
data16
mov
sub
mov
mov
xlat
nop
inc
mov
add
in
or
adc
enter
call
add
inc
inc
mov
add
cs
jae
out
icebp
daa
rorb
add
add
subb
jbe
movsl
fstpl
xor
fcompl
mulb
push
push
outsb
in
int
mov
inc
push
add
add
add
pop
adc
fnstsw
fnstenv
mov
lock
lcall
daa
decl
add
xchg
pop
mov
pop
push
lea
adc
out
std
aam
call
xchg
cmp
inc
or
mov
jmp
jae
addr16
cmpsl
out
inc
mov
fdivs
push
mov
add
insl
jnp
bound
xchg
sub
rolb
fiadds
testb
test
mov
xchg
call
into
pop
gs
mov
push
and
jbe
pop
cmp
scas
pushf
scas
mov
jle
daa
notl
cmp
lock
add
in
push
outsl
push
daa
fimuls
test
ds
mov
and
xchg
mov
pushf
dec
and
add
outsl
mov
add
sarb
in
data16
imul
cmpsb
jnp
lahf
add
in
in
mov
adcb
dec
cld
clc
sub
in
pusha
jno
cmp
and
cmp
inc
ds
dec
jmp
xchg
jb
lds
add
sub
cmp
or
add
aas
push
lcall
loopne
xor
jae
test
adc
add
add
mov
sbb
mov
add
xor
lock
in
scas
dec
arpl
stos
sahf
je
sti
std
mov
movntq
outsl
aas
test
lret
jl
mov
add
or
scas
movb
adc
push
nop
jge
sub
in
orb
add
xor
ret
cwtl
cmpsb
into
dec
cmc
fisubl
adc
push
std
test
jne
sub
dec
bound
adc
jmp
jnp
and
add
push
ret
push
mov
push
add
lods
mov
xchg
xchg
mov
mov
jmp
and
push
sbb
jmp
and
add
call
lods
shrl
sbb
mov
idiv
test
nop
dec
mov
inc
dec
and
and
mov
outsb
add
ljmp
fwait
sub
adc
add
add
fcmovu
xchg
adc
data16
test
pushf
icebp
pop
mov
mov
pop
cmpsb
xchg
or
and
dec
sbb
clc
or
dec
xor
push
enter
xchg
fistps
cld
xor
xchg
sbb
add
inc
iret
mov
inc
sbbl
add
xlat
mov
xor
mov
jl
sub
add
mov
mov
rolb
imul
fwait
jge
mov
add
mov
add
push
scas
push
pop
in
dec
inc
add
sbb
jmp
add
jecxz
adc
jge
adcl
fistps
pop
or
add
jae
push
sub
aas
mov
push
xchg
mov
add
scas
and
aas
add
and
mull
jge
pop
mov
out
bound
xchg
mov
add
test
movb
int3
call
jecxz
cmp
cltd
cs
or
add
sbb
add
mov
add
inc
aam
add
iret
gs
js
jno
arpl
xor
push
daa
loop
out
xchg
mov
cmp
pop
aam
lods
add
and
jecxz
add
ss
jecxz
adc
xlat
add
fdivrl
das
sbb
stc
lcall
sar
jno
lods
loop
pop
nop
mov
filds
add
cmp
cmpsl
push
pop
sti
inc
mov
add
orl
push
mov
movb
mov
add
lret
add
add
push
fs
or
sub
data16
incl
mov
fs
sti
cltd
jmp
dec
iret
add
jne
shl
add
stc
insb
sahf
lods
jns
sbb
and
add
xor
int3
incl
add
in
insb
add
sbb
rcrb
loopne
outsb
mov
push
mov
cmpsb
jae
mov
add
fists
lods
mov
in
getsec
mov
xchg
add
cmc
add
or
add
add
inc
mov
push
xor
or
ljmp
ss
mov
nop
leave
xchg
leave
jbe
fisubs
dec
cmp
ds
mov
adc
cmp
loopne
xchg
sub
loope
out
sub
cmp
movsl
fstpl
cmp
dec
push
inc
mov
repz
mov
lock
cmpsl
cli
aam
add
add
push
lahf
arpl
lods
or
cltd
notl
xor
add
popf
aam
jnp
stc
imul
and
inc
cmpsl
adc
jo
repnz
mov
add
cltd
mov
stos
insl
loop
insl
jle
fsub
into
push
arpl
jp
out
bound
lcall
pop
cmp
pop
rcl
push
movsb
and
fmul
sbb
jge
mov
ss
push
sbb
jg
sub
mov
mov
add
add
rcrl
ja
mov
or
sbb
cs
ds
push
icebp
sar
add
aam
mov
mov
shll
out
mov
lret
pop
push
cltd
lea
or
stos
scas
fmull
adc
add
jmp
dec
scas
cmp
loopne
push
add
pop
fildll
lret
int3
test
add
lret
cltd
cmc
rcrb
in
lods
sub
notl
jb
pop
sbb
stc
iret
jecxz
sub
xor
testl
pop
scas
enter
push
sbb
sbb
cmp
xchg
jle
in
dec
rorl
mov
add
xchg
adc
std
mov
jo
cmp
pop
loop
xchg
popf
rclb
sbbl
add
jmp
or
jg
add
push
inc
ret
inc
negb
adc
cmp
jns
sahf
fs
push
sub
popl
jp
data16
imul
mov
sub
loopne,pt
mov
add
xchg
imul
jbe
push
sub
arpl
sbb
sbb
aam
cvtdq2ps
jae
sub
cmp
cmp
mov
and
lret
and
push
xchg
ljmp
or
add
cmc
adc
imul
cld
testl
mov
stc
nop
push
jb
enter
fs
mov
xchg
sbb
shlb
xchg
add
add
pop
ret
pop
add
add
int
and
mov
adc
test
bound
jno
in
ja
and
add
or
push
clc
scas
pop
xchg
test
lret
and
inc
stos
add
cld
std
lock
cmp
mov
xlat
add
add
imul
lods
shlb
mov
add
add
je
pop
pop
inc
adc
add
out
fcompl
int3
sti
add
dec
popa
dec
iret
pop
cld
add
push
add
stos
imul
aas
xchg
mov
test
add
mov
cmp
lret
in
lods
out
jae
xchg
sti
jnp
call
add
dec
jbe
add
sbb
add
adc
adc
adc
mov
fdivr
insb
sbb
add
insl
ffreep
insl
add
xchg
fisubl
jbe
in
dec
in
add
outsl
xor
sbb
mov
stos
pop
stc
jmp
or
add
mov
add
xchg
mov
sti
movsb
xchg
pop
dec
mov
in
mov
pop
icebp
cmc
pop
call
lds
mov
or
sub
je
push
jecxz
push
add
sub
mov
lret
pop
out
leave
test
mov
out
out
pop
aaa
dec
jmp
sub
add
jo
dec
repz
addr16
into
push
notb
mov
sbb
out
notb
add
push
insl
shl
jl
cltd
shll
dec
test
lock
inc
mov
add
ds
dec
cmp
daa
jmp
push
pop
fidivrl
xorl
lock
dec
insb
push
cmp
cltd
pushf
sti
fs
inc
jp
push
out
cwtl
or
jb
in
cld
adc
sub
mov
mov
lcall
aaa
dec
shl
add
bound
rcll
jnp
sub
bound
sbb
dec
xchg
jp
dec
jbe
add
cmpsb
xor
add
xor
add
add
mov
add
mov
lock
jo
inc
in
pop
pop
or
sti
sub
adc
out
add
loopne
lods
stos
inc
mov
rcll
mov
push
jl
mov
jg
add
sub
bound
call
mov
inc
dec
or
add
icebp
adc
arpl
dec
das
add
cmp
cmp
sub
jbe
aaa
arpl
hlt
and
dec
aaa
pop
cmp
hlt
shll
xchg
adc
pop
fisubrl
outsb
dec
js
add
xchg
fdivp
sbb
in
repz
fwait
cmovne
filds
xchg
mov
add
out
sub
scas
into
lea
jnp
sldt
add
jnp
add
scas
pop
fisubrs
push
xchg
lods
push
push
xor
sbb
sub
jns
test
add
sub
pop
inc
pop
pusha
mov
aam
fwait
xchg
mov
add
addl
push
cltd
and
test
push
lods
nop
loope
fsubrs
fnstcw
mov
fs
fnstsw
and
xchg
mov
pop
xor
imul
mov
add
and
jns
add
jnp
inc
negb
push
push
cltd
jno
ja
mov
test
push
push
and
nop
aam
add
icebp
js
mov
mov
mov
push
repnz
add
int3
incb
add
inc
clc
in
iret
shrb
idiv
cmp
push
rclb
add
incb
mov
pop
test
xchg
inc
xor
push
push
mov
xor
out
dec
jae
mov
imul
add
add
add
ret
int3
add
inc
xor
add
subb
adc
lock
jp
xchg
cmp
outsb
stos
rorl
adc
add
xor
cmp
movsl
out
mov
in
in
jle
adc
mov
int
fistpl
mov
push
adc
add
bound
add
fcomi
adcl
xchg
xchg
mov
pusha
repz
addl
jmp
pop
inc
mov
inc
jg
jp
or
clc
xlat
jae
mov
inc
xchg
lock
inc
sub
pop
mov
test
mov
push
jge
add
out
pop
test
add
test
mov
cmp
and
adc
push
int
sub
inc
testl
outsl
cmp
lahf
cs
dec
xchg
add
cmp
incl
orb
cmp
mov
cmp
fmulp
fisubs
add
or
add
mov
push
xor
mov
and
sahf
pop
das
es
push
xchg
lret
xchg
xor
loopne
push
pop
mov
add
inc
fadds
add
dec
jl
in
mov
in
or
add
out
loop
out
xchg
mov
mov
jo
out
pop
mov
jb
arpl
jns
int3
sbb
add
mov
or
add
loopne
mov
add
lea
mov
into
xchg
sub
fwait
inc
inc
bound
mov
dec
mov
icebp
sbb
sbb
lods
aad
icebp
push
ret
dec
add
add
repnz
push
imul
add
sbb
sbb
repz
repz
rorl
add
repnz
dec
xchg
or
dec
pop
movb
cmpl
mov
inc
add
add
jl
jnp
mov
sub
sub
add
xchg
add
add
sahf
fadd
je
sbb
arpl
jbe
dec
gs
sub
jl
lret
mov
dec
lcall
add
push
loop
jb
lods
add
and
adc
cmp
pop
and
xchg
adc
stos
scas
ljmp
int3
or
add
fcmove
sub
adc
ret
out
push
add
pop
loopne
pop
cmp
scas
cmp
push
jmp
cltd
int
mov
popf
into
outsl
pop
cmp
outsb
or
add
jne
jno
lock
xchg
pop
idivb
lret
pop
pop
cmp
fldenv
pop
jb
fstpl
jp
cmp
push
mov
fneni(8087
adc
jmp
or
add
jl
cmpsl
xchg
cmpsl
sahf
pusha
dec
pushf
cmc
and
lea
or
add
jae
and
or
pop
or
add
add
into
cmp
sarl
jo
scas
add
mov
mov
jecxz
cmc
in
loop
xchg
mov
fs
cltd
xchg
xchg
mov
or
pop
add
movsl
pop
test
adc
sub
sbb
dec
rolb
roll
xchg
daa
dec
or
add
xlat
inc
and
add
xor
pop
push
xchg
aam
mov
add
add
add
test
cmovp
inc
aad
add
cmp
call
dec
sbb
lock
daa
cmp
js
adc
jle
xchg
push
mov
xchg
fs
add
add
mov
add
pusha
jae
ret
xor
sub
add
cli
add
push
scas
sbb
push
mov
sbb
xor
inc
or
repnz
aas
enter
and
pop
mov
clc
lods
hlt
pop
add
push
and
and
xor
out
pop
add
add
gs
cmp
popa
adc
mov
xchg
xchg
mov
add
jp
or
ljmp
jl
pop
dec
and
mov
aaa
cmpl
push
jo
jecxz
jae
repz
dec
add
lret
mov
sub
mov
hlt
mov
add
mov
add
ficomps
mov
jge
rcrl
cmc
cmpsb
cmc
fnstsw
pop
test
jle
rorb
jno
xor
mov
push
adc
hlt
add
ljmp
add
divb
dec
imul
loopne
testl
cmpsb
pop
enter
jo
int3
pop
add
add
add
mull
add
faddl
pop
ret
fs
push
rclb
add
push
ljmp
xchg
mov
cli
mov
je
adc
leave
fildl
sbb
clc
and
sub
and
inc
lods
fimull
out
xchg
lret
not
push
or
add
mov
jmp
xor
ds
dec
incl
add
mov
into
mov
loop
push
loope
jmp
adc
insb
pop
and
lods
dec
hlt
adc
pop
das
cltd
js
xchg
pop
push
xchg
cli
dec
inc
test
add
add
xchg
bound
stos
or
pop
loop
fcoms
inc
clc
das
popa
mov
stos
mov
shll
mov
mov
add
add
mov
add
loope
dec
push
add
jnp
vpxor
and
add
xor
mov
cmp
add
mov
inc
jno
mov
subb
push
sbb
stc
jo
sbb
sbb
lds
xchg
mov
jae
xor
mov
loope
dec
push
dec
testb
leave
mov
xchg
add
push
repnz
cld
pop
insl
rorl
mov
add
dec
adc
add
cltd
mov
popa
lcall
das
jae
hlt
jne
cwtl
test
add
les
add
pusha
arpl
mov
cmp
ret
push
pop
aam
and
sbb
inc
fiaddl
add
stos
popa
rclb
repnz
dec
cmp
inc
ljmp
jl
aas
push
aaa
cltd
repnz
cmp
rclb
add
add
mov
mov
enter
loop
dec
repz
jo
mov
add
scas
iret
mov
add
lock
lds
icebp
push
aam
aad
loopne
add
add
dec
in
xor
das
sub
sub
andl
movsl
xor
jmp
push
add
jnp
mov
add
mov
add
call
mov
dec
leave
int3
jl
add
mov
cmpsl
add
mov
inc
gs
xor
mov
adc
loopne
adc
xchg
xor
out
mov
add
jle
dec
in
cli
lret
push
repnz
daa
test
add
pusha
movsb
in
xor
pop
testl
xchg
or
cmp
add
pop
cmc
outsl
mov
loope
movsl
lods
or
data16
add
sub
add
xor
dec
pop
lret
dec
es
pop
insl
ss
jb
aas
dec
in
add
sbb
cmp
add
xchg
into
jle
add
add
test
pop
jb
push
stos
leavew
out
cli
inc
lods
cmp
add
adc
cmp
fmulp
push
add
push
or
inc
in
add
testl
movsl
push
outsb
clc
outsl
lods
stc
outsl
add
fwait
add
push
int3
scas
add
imul
mov
jno
dec
lcall
add
loope
add
xor
fldl
add
mov
add
js
negb
and
loope
gs
inc
lds
add
mov
add
lahf
xchg
popa
outsl
inc
mov
jne
xchg
jnp
dec
test
xchg
pop
push
leave
out
movsb
add
fs
out
add
push
dec
or
add
mov
jbe
xchg
out
inc
sbb
push
ljmp
fstps
gs
and
lcall
add
xchg
movsl
sbb
out
ret
xor
inc
mov
or
scas
lods
xchg
les
dec
xchg
ficoml
adc
inc
jg
out
mov
add
sbb
cmp
xor
out
sub
popa
adc
xchg
cmp
in
lods
jo
adc
dec
fidivrl
aas
outsb
jbe
lods
and
aam
jns
outsb
movsb
adcl
movsb
or
add
ds
mov
push
xlat
and
gs
ja
add
mov
pop
and
add
add
jns
push
insl
push
outsb
pop
xchg
push
jb
mov
test
xor
add
mov
sbb
cmc
enter
push
in
or
xor
pop
and
iret
cwtl
pop
ljmp
mov
cmc
dec
ret
xlat
xor
jecxz
and
add
add
decb
add
xchg
das
and
stos
push
cs
faddl
add
aaa
out
or
add
cmp
ja
les
mov
xchg
jmp
pop
add
mov
pop
push
daa
cltd
sub
mov
pusha
ljmp
sbb
mov
out
popf
mov
dec
fstl
inc
and
adc
dec
cmp
shrl
sub
mov
popa
and
add
jmp
jne
rcrb
fisubs
lods
cmp
lahf
dec
adc
add
iret
xchg
fsubs
inc
cmc
adc
sub
movsl
call
mov
loopne
xchg
xchg
push
test
xchg
mov
add
test
push
mov
iret
in
enter
aam
aad
lock
add
mov
xor
mov
pop
mov
and
push
jae
insl
sub
fwait
movsl
add
add
sub
sarb
bound
mov
loope
push
jbe
jo
ljmp
pop
mov
aaa
mov
scas
add
les
add
fisubrl
push
push
in
ja
test
adc
jae
sub
in
add
popf
outsl
jmp
jns
jne
xchg
outsb
test
sub
call
test
add
mov
pushf
ret
addl
cmpsl
xor
xchg
xor
xchg
push
leave
pop
mov
and
add
lods
add
adc
addr16
bound
aam
adc
lea
add
sub
add
out
movsb
mov
stos
stc
inc
cmc
inc
scas
add
std
jmp
lahf
lds
pop
sub
cmp
mov
adc
scas
sub
ss
sti
into
fiaddl
cwtl
hlt
mov
enter
and
lds
push
add
add
mov
adc
sub
call
adc
into
xor
cmp
je
cwtl
call
jg
adc
sarl
mov
aad
add
imul
add
enter
or
mov
out
inc
mov
mov
pushf
frstor
popf
sub
mov
movsb
pop
and
and
add
mov
mov
lea
add
movsb
inc
or
rep
jno
pop
push
je
dec
xchg
cmp
dec
sbb
or
add
xchg
xchg
mov
jp,pn
xchg
jecxz
mov
add
neg
nop
data16
in
outsl
push
test
pop
mov
add
shrl
xchg
cmp
nop
call
add
sub
push
dec
jmp
mov
stos
ret
pop
mov
notl
fwait
sbb
outsl
or
push
es
sub
add
jge
jo
ret
mov
mov
pop
jge
inc
out
add
jmp
test
mov
add
movsb
xchg
imul
sub
mov
add
les
add
shrb
jns
ss
xor
jne
pop
mov
in
pop
mov
cmc
stos
adc
sti
sbb
or
shl
repnz
cltd
cmp
pop
mov
int
and
js
push
mov
test
and
jle
cmp
fisubrs
test
jmp
pop
mov
rcr
and
in
add
add
lds
and
mov
add
xor
int
mov
sub
add
add
pop
fnstenv
imul
int
push
push
insb
fwait
lea
imul
jmp
jecxz
lret
and
inc
pop
add
test
mov
sub
add
lds
mov
ret
cmp
jae
and
daa
xchg
or
add
scas
or
add
ret
dec
fdivrs
mov
xchg
push
ds
inc
fistps
test
push
adc
imul
dec
mov
add
xchg
scas
retw
mov
pop
dec
je
cmp
inc
add
xchg
loop
jle
add
inc
adc
xchg
shl
mov
add
add
add
mov
pop
and
sub
fnstsw
add
jb
push
popf
ss
mov
rorb
dec
dec
pushf
jecxz
mov
fdivl
ja
insl
cmp
test
dec
xor
pop
mov
fidivrl
pop
adc
xlat
inc
inc
or
add
inc
es
mov
pop
fs
jb
pop
adc
push
sub
push
add
stc
test
lea
xchg
les
add
mov
add
push
add
xchg
hlt
adc
jge
mov
sbb
hlt
repnz
sub
adc
pop
inc
std
jne
test
add
add
dec
xchg
sahf
jmp
adc
icebp
lds
push
mov
lea
cltd
lret
xor
inc
mov
cmp
sarl
sub
fs
in
in
cld
aam
add
add
inc
cmc
into
jns
jb
test
pop
mov
add
fstpt
xchg
push
cmc
stos
daa
bound
insl
jecxz
and
mov
andl
add
fsubrp
fistpl
inc
inc
sldt
add
scas
xchg
jle
mov
pusha
sbb
mov
loop
add
inc
sahf
bound
jl
mov
and
xchg
jg
loop
cwtl
out
mov
add
add
popf
jne
cmp
loope
jecxz
xor
add
repz
mov
xor
jne
addb
idivl
xchg
add
add
adc
sti
pop
sbb
adc
push
clc
sbb
mov
mov
cli
leave
scas
push
xchg
xor
loop
imul
adc
das
xchg
push
and
ret
jecxz
repz
fisubl
mov
sub
sar
jne
es
bound
xor
fcmovbe
pop
mov
cmp
xchg
sbb
xor
lods
xor
mov
lods
and
lahf
in
ja
test
pusha
movsl
stos
pop
mov
leave
add
mov
push
inc
xor
clc
mov
mov
ret
mov
out
jo
add
add
pushf
popf
xchg
pop
popa
aam
adc
push
andb
test
add
pop
sbb
push
mov
add
fwait
add
repz
sbb
mov
add
push
add
add
leave
cmp
call
pop
in
xor
sbb
add
pop
fcompl
jbe
inc
testb
push
out
sub
in
sbb
add
cmc
mov
fyl2x
pop
orb
adcl
sar
pop
out
cmp
xor
aaa
jecxz
fistps
add
aas
in
mov
int
in
xor
cmp
pop
pop
or
xor
frstor
ss
or
jb
sbb
add
jo
cmpsb
icebp
inc
pushf
call
rorl
ljmp
negb
mov
mov
jns
fdiv
push
dec
inc
add
push
addl
out
add
jmp
add
sub
sbb
cmpsb
add
xchg
sbb
jmp
sbb
add
add
scas
and
pop
sbb
sub
ljmp
sbb
shrb
add
cmp
rcr
xorb
add
pop
sarb
loop
stos
add
mov
or
shrl
mov
pop
inc
out
cltd
aaa
ret
fdivr
aaa
xchg
fs
push
push
test
fcmovnb
in
add
jae
icebp
mov
jno
pop
xor
mov
mov
fbstp
hlt
mov
xchg
cmp
add
nop
rolb
push
and
push
pop
push
lods
roll
mov
clc
jecxz
mov
add
mov
mov
mov
roll
jl
outsb
xchg
shll
add
mov
dec
mov
mov
adc
add
add
gs
mov
mov
testb
add
jae
jge
xchg
cmp
mov
add
cmp
rolb
add
push
sbb
adc
mov
cmp
lcall
imul
jp
cmp
push
or
add
inc
jbe
add
push
ja
sub
sub
jle
fisubs
or
add
les
add
cmp
mov
jnp
fbld
xchg
xchg
clc
sub
test
dec
add
in
sbb
adc
pop
add
xor
add
or
adc
imul
in
sub
jg
pop
test
das
lahf
xor
sub
testl
fistpll
add
mov
adc
xchg
test
fstl
lret
add
jl
sub
sub
add
out
push
push
mov
xchg
mov
daa
call
sub
cmp
add
lret
mov
shl
inc
xchg
push
cmpsl
roll
add
lods
add
add
push
xlat
out
sub
sub
sbb
inc
xchg
xchg
cli
inc
enter
cmp
enter
mov
add
inc
jns
inc
add
test
mov
xchg
gs
pop
add
cmp
mov
stos
scas
dec
das
inc
into
push
xor
sub
aad
and
test
ret
mov
dec
jg
test
push
sub
sbb
add
add
insb
insb
xchg
fs
filds
add
push
mov
add
fadds
mov
pop
fnstenv
push
sub
sar
add
add
jmp
adcb
lcall
jl
pop
cld
sarl
mov
fsubp
int3
and
add
mov
dec
aaa
add
add
xchg
add
add
jmp
mov
jmp
ret
stos
add
dec
mov
pop
jnp
data16
into
inc
sub
push
inc
push
add
jb
scas
and
inc
cmp
push
in
mov
push
push
pop
and
ss
jecxz
xchg
add
pushw
xorb
add
scas
aad
push
aas
xor
add
mov
rcll
pusha
in
stos
adc
sub
fs
inc
jae
and
ja
xchg
int
dec
push
pop
in
out
add
das
inc
mov
add
pushf
mov
jne
hlt
stc
mov
pop
or
add
mov
add
lea
push
int
int3
imul
mov
rcl
xor
add
inc
test
and
in
mov
mov
cmp
cmc
xor
add
mov
pop
and
push
cli
lock
outsb
add
add
sub
xor
push
xchg
mov
jo
add
int3
sbb
cmp
xor
jbe
iret
iret
add
pushf
sub
dec
lods
and
add
sub
adc
adc
sub
sahf
xor
ljmp
je
lcall
push
cmp
pop
pop
adc
lret
mov
repnz
cld
mov
bound
jp
cmp
add
mov
mov
movsb
pop
negb
iret
cmp
rcrb
data16
mov
mulb
push
es
inc
cmp
add
add
in
dec
aas
adc
sbbl
add
imul
mov
add
jecxz
shl
out
ss
icebp
cli
jmp
aam
or
jp
xchg
fidivrs
dec
fldenv
or
sbb
xlat
xchg
imull
leave
push
ja
std
sub
push
add
sbb
push
cwtl
jl
fimull
xchg
and
cmp
dec
xchg
adc
add
fildl
aam
dec
adc
mov
in
and
mov
out
ja
dec
mov
jbe
imul
push
cs
pop
lea
cmp
sti
loope,pn
hlt
jg
push
mov
add
sub
repnz
int3
add
sahf
pop
or
pop
push
mov
add
ds
sahf
mov
lods
cmp
add
push
jmp
ror
in
xor
add
add
push
add
sbb
xchg
and
divb
xor
in
or
add
push
xchg
call
mov
add
add
mov
popl
add
pop
cmp
add
jmp
push
test
repnz
mov
push
in
push
inc
sub
lahf
add
jne
jmp
out
mov
lahf
dec
cmp
add
mov
faddl
push
out
js
pop
mov
and
pusha
movsb
mov
arpl
sub
mov
pop
in
stos
jmp
sub
mov
lret
rcrb
add
lds
das
mov
or
pop
into
adc
jnp
or
or
add
push
add
and
ljmp
or
add
ret
jp
rol
xchg
inc
and
xchg
hlt
mov
push
jl
xchg
adc
call
imul
pop
lods
ja
sub
aaa
add
cs
or
add
xchg
and
sbb
cli
pop
test
add
xor
dec
movb
repnz
jo
xchg
push
sub
add
andl
loop
jl
dec
cld
cltd
xchg
mov
pushf
ds
jo
lahf
scas
repz
dec
push
add
aaa
mov
mov
into
into
aam
sbb
jae
leave
in
test
clc
dec
movb
rorl
add
push
sti
sbb
jle
rolb
les
sub
hlt
push
inc
xchg
xchg
rcrl
sbb
nop
test
and
les
add
mov
fcomps
js
push
lods
push
cld
or
xor
nop
or
adc
pop
pushf
movb
jmp
xchg
mov
add
sbb
add
inc
mov
pop
pop
jle
push
aam
out
fstpl
mov
mov
fisubl
ljmp
negb
in
xchg
xchg
xchg
inc
daa
mov
mov
mov
add
aam
mov
inc
jmp
int3
lahf
add
xchg
fidivl
inc
inc
dec
add
adc
nop
ljmp
stos
ja
mov
inc
add
dec
ror
add
pop
data16
jl
fs
clc
xchg
pop
jecxz
xor
cli
cmp
fwait
inc
or
sub
add
mov
mov
mov
mov
out
movb
fs
js
fidivrl
jle
lcall
or
cmc
cmp
negb
adc
add
inc
pop
add
lret
popa
mov
lods
fisubrl
bound
rcr
das
icebp
imul
flds
sub
stos
add
outsl
xchg
xor
icebp
lahf
push
inc
das
adc
mov
dec
xchg
xlat
xor
pop
add
adc
mov
out
xor
into
xor
nop
xchg
in
jp
cli
mov
loopne
sbb
sbb
add
stos
lcall
pusha
pop
pop
fbld
mov
outsb
call
data16
add
enter
mov
repz
cmc
adc
mov
insb
add
xchg
mov
jmp
mov
into
pop
mov
js
mov
add
jns
xchg
push
add
add
jmp
ret
repnz
pop
loopne
xchg
lret
xchg
add
add
in
or
inc
cwtl
xor
and
push
inc
cltd
jno
lea
andl
add
add
add
adc
add
inc
out
hlt
in
add
add
mov
fistps
push
add
gs
outsb
cmpsl
mov
mov
dec
pop
scas
cmp
inc
xchg
add
fisubl
pop
das
add
subb
jbe
inc
ret
xchg
add
cmp
and
xor
mov
adc
xor
mov
clc
std
dec
addb
push
or
mov
sar
add
mov
dec
add
test
ret
dec
push
cmp
xlat
xchg
jb
lcall
stos
add
mov
repz
aam
cli
std
iret
push
outsb
cltd
mov
shll
cltd
push
insl
cmp
gs
outsl
and
mov
push
and
push
rep
jb
mov
xlat
pop
in
lahf
pop
icebp
ficomps
xor
loopne
cltd
jle
cltd
add
push
into
lea
add
call
add
inc
mov
mov
or
hlt
dec
xchg
imul
scas
jnp
outsl
or
add
lea
mov
mov
xor
into
dec
sti
imul
lret
push
mov
mov
fmull
or
mov
mov
add
xlat
sbb
pushfw
push
rcrb
arpl
loopne
xor
xor
add
push
fsts
lods
dec
push
adc
xchg
pushf
jnp
aam
pop
movsb
notl
sub
das
mov
js
divl
ljmp
mov
aam
dec
cli
jns
and
fiaddl
xchg
mov
lcall
add
std
clc
or
add
and
push
pop
jno
lods
imul
adc
nop
cmp
or
test
add
cld
jl
or
add
rcl
add
stos
pop
xchg
mov
in
pop
mov
cmp
test
mov
daa
mov
add
add
add
adc
add
ljmp
aas
stc
mov
fsubrp
mov
adc
lcall
in
lods
sub
mov
add
cs
xorl
sub
cmp
xchg
pop
ffreep
adc
add
add
add
push
dec
fcmovnu
jecxz
mov
outsl
xor
xor
dec
rdtsc
cs
add
mov
sub
ret
mov
pop
adc
in
rcrl
add
aaa
push
das
inc
xchg
add
jo
aas
push
mov
xchg
inc
stos
jmp
add
push
addl
daa
inc
cmp
add
add
jae
jle
decl
pop
sub
loopne
and
popf
rolb
mov
jge
outsl
ljmp
push
nop
dec
test
jecxz
enter
sti
mov
add
sub
inc
add
add
inc
ljmp
mov
scas
jp
rolb
test
push
orb
sbb
pop
or
add
sbb
mov
pop
loope
aad
jmp
inc
mov
call
jb
cmp
out
dec
shl
aam
in
cld
cmpsl
sub
sub
lret
mov
js
mov
loop
lock
cmp
push
repnz
outsb
push
xchg
cmp
popa
push
cmpsl
cmpsb
data16
movsl
fabs
test
test
sbb
sub
and
stc
insl
inc
in
lea
loopne
add
add
xor
movsl
adc
jnp
movl
pop
outsl
lds
mov
or
add
mov
sbb
mov
mov
pop
jecxz
jns
dec
scas
add
inc
dec
cmpsb
add
cwtl
adc
jae
fwait
jae
mov
mov
cmp
and
jp
and
adc
cs
incl
add
ret
dec
fwait
jg
andb
ljmp
imul
xchg
add
mov
movsl
rol
je
nop
lret
mov
nop
xchg
rorl
inc
rcrl
add
lahf
popa
push
cmp
sbb
add
add
lds
ficoml
scas
dec
in
not
cmp
add
xchg
cli
inc
pop
mov
mov
pop
or
shrb
xchg
push
fstpt
cs
mov
push
push
jle
pop
aas
mov
andb
decl
dec
mov
xchg
test
stos
mov
enter
xchg
sbb
ret
aas
dec
lea
cmp
add
jb
inc
xchg
notl
add
cwtl
cmpl
sldt
stos
pop
and
inc
mov
dec
cmp
mov
adc
or
daa
add
rcll
pop
adc
or
add
add
jno
faddl
mov
and
jecxz
add
add
or
xor
test
adcl
mov
mov
cmpsb
add
jbe
addl
mov
add
mov
fisttpl
iret
add
mov
out
pop
arpl
leave
jbe
mov
add
gs
push
xchg
aas
xor
push
adc
mov
mov
inc
fldenv
lock
dec
inc
out
add
scas
fstpl
dec
jge
hlt
push
sbb
add
add
movl
mov
ja
adc
sub
add
das
gs
inc
repnz
dec
mov
leave
sbb
sub
shll
jmp
loopne
mov
mov
add
fucompp
inc
addr16
notl
add
test
cmpsb
lret
add
test
add
call
or
lods
in
xlat
xor
test
add
add
dec
xchg
fldl
push
and
cld
add
sub
add
nop
inc
add
mov
push
inc
and
add
mov
xor
add
xor
inc
mov
add
ljmp
sub
jno
cmp
dec
mov
sbb
add
add
out
aas
pop
cmpsl
mov
lret
sub
repz
or
add
leave
sarb
cmp
pop
ss
xchg
add
jle
mov
out
jp
add
enter
lods
sub
fmuls
popa
sbb
xor
and
push
jae
lret
add
mov
add
cmpb
jne
pusha
add
and
repz
inc
add
mov
movsl
xchg
ljmp
push
mov
xor
adc
mov
xor
xchg
or
cld
add
or
add
lcall
mov
stc
jg
pop
lret
add
mov
add
test
in
jecxz
add
xchg
add
fdivrl
data16
sub
int3
and
add
addl
daa
xchg
adc
stc
lods
lcall
add
cmp
fmuls
fsubr
subl
sti
adc
mov
add
adc
xchg
add
push
xchg
ret
aas
ja
dec
jge
rolb
add
mov
rol
lcall
add
call
dec
pop
add
and
sbbb
cmc
cmp
add
cld
xor
cmpsl
xor
cmp
repnz
lds
and
sbb
lcall
sti
into
movb
daa
jns
sbb
jbe
pop
fdivr
test
imul
and
rolb
xor
pop
adc
sub
sub
pushf
xor
xchg
in
adc
add
xor
add
popa
add
push
leave
mov
add
lret
imull
bound
icebp
or
add
rolb
leave
lods
or
add
mov
push
fisubs
add
add
int3
aas
add
and
add
add
loop
negb
std
loope
push
stos
push
sbb
ficoml
shlb
add
sbb
add
stc
xchg
pop
xchg
les
add
repz
in
mov
cmp
mov
and
js
inc
test
stc
pushf
out
test
arpl
sti
dec
lret
or
mov
add
sahf
movsl
shlb
das
jmp
xchg
outsl
xchg
loope
sub
and
js
pop
add
add
or
jbe
or
dec
push
andl
mov
mov
inc
jecxz
add
add
add
shrl
add
insl
gs
push
test
imul
in
xor
sarb
cmc
dec
imul
sbb
mov
push
lods
pop
lahf
adc
pop
cmp
mov
mov
jo
int3
cli
add
aad
cld
or
add
xlat
je
in
loope
push
shll
inc
and
fsubrs
test
add
filds
xchg
sbb
add
push
aas
lcall
fbstp
imul
mov
xchg
sub
lods
mov
and
jo
lcall
sti
cltd
fcoms
jecxz
mov
add
add
cmpsl
clc
and
gs
inc
push
daa
xchg
pop
xchg
insl
inc
iret
mov
jmp
adcl
mov
sub
mov
outsb
add
sbb
dec
scas
out
inc
roll
repz
inc
adcl
mov
inc
xchg
and
sub
jle
out
and
inc
fs
mov
cmp
xchg
repz
mov
fisubs
addr16
add
cli
mov
and
cwtl
or
aam
add
push
imul
xor
dec
outsl
jp
mov
add
ss
cmp
add
xchg
lret
add
push
pop
jne
nop
mov
mov
cltd
sub
mov
xchg
addr16
and
mov
pushf
and
add
mov
add
adc
int
mov
xchg
fbstp
mov
fisubl
push
cmpsb
bound
loop
daa
add
das
addl
cld
stos
dec
mov
add
or
sti
xor
es
and
out
adc
or
sub
cmp
xchg
add
cmpsl
mov
mov
adc
aam
in
add
add
add
std
lcall
imul
mov
push
les
add
movsb
add
lret
dec
ja
iret
inc
sub
test
add
jno
imul
xchg
cmp
sti
mov
sbb
add
or
cmpsb
push
scas
add
negb
popf
jge
popa
into
lds
adc
loop
sub
arpl
popa
je
pop
xchg
jae
cmpsb
jp
jbe
js
push
ret
mov
std
rorl
pop
xor
mov
iret
jmp
fists
jne
ljmp
shlb
call
fs
push
push
add
fmuls
add
je
pop
xlat
loopne
clc
mov
jp
add
idivb
cmc
add
push
ljmp
cwtl
add
scas
push
bound
scas
sbb
add
add
xchg
cs
push
sub
sub
and
ss
sub
add
test
adc
test
add
lcall
stos
xlat
cld
pop
push
push
sub
add
jnp
mov
sub
in
faddl
fnstsw
cli
add
push
mov
add
aam
insb
jecxz
mov
sbb
ds
mov
ja
push
lcall
adcl
shl
mov
mov
mov
rorb
and
into
pop
push
cld
rclb
jae
enter
mov
sbb
or
sbb
mov
xchg
mov
fwait
sub
xchg
aaa
push
jns
and
sbb
mov
xchg
jb
popa
push
pop
imul
jp
push
dec
xchg
add
jge
lret
aaa
add
sbb
add
jg
push
jmp
cmc
ror
rsm
xchg
pop
das
push
cs
daa
mov
btr
scas
push
jge
das
xor
jbe
push
xor
movsb
std
pop
adc
call
and
and
add
cmp
mov
mov
add
xchg
push
frstor
adc
inc
xor
ss
scas
shlb
add
scas
insl
push
movsl
bound
sbbl
mov
lea
fstpt
cmp
nop
dec
jns
cli
xorl
mov
dec
mov
add
sub
pop
xchg
hlt
pop
icebp
and
xchg
push
movsb
cs
push
cmpsb
jl
cmpsb
push
sbb
fwait
push
mov
add
into
das
adc
sahf
imul
fisubrl
xchg
fists
jbe
insl
cmp
aam
and
add
mov
mov
mov
add
inc
inc
test
je
push
add
repnz
add
add
test
popa
cli
aas
jnp
loopne
fcomip
push
or
xchg
mov
jle
add
mov
bound
inc
mov
add
push
sahf
xor
inc
jne
fidivl
sahf
rcrb
clc
cmc
stos
lds
add
jae
popa
add
pushf
nop
pop
pushl
insb
add
mov
lods
mov
jbe
add
add
ret
gs
mov
sub
cwtl
push
cltd
lret
and
pop
fldt
sti
xchg
aaa
push
in
cwtl
jmp
cmpl
repz
pop
inc
add
mov
bnd
sbb
aam
out
das
push
push
add
dec
adc
dec
arpl
add
sub
shrb
lods
mov
lcall
add
add
rorb
jbe
ficoms
lods
test
lock
or
inc
mov
mov
sahf
inc
adc
jo
jb
xlat
mov
jae
adc
aas
pop
fidivl
mov
jo
in
add
lcall
mov
sahf
xor
orb
add
jo
outsb
pop
icebp
add
xor
mov
scas
dec
ja
pause
pop
test
lret
popa
icebp
mov
roll
in
push
xor
jno,pt
cmp
subb
sti
pop
xchg
in
lds
stos
add
push
notb
dec
adc
and
roll
add
push
mov
add
push
iret
mov
add
pop
test
inc
adc
add
jns
xchg
inc
outsl
jecxz
pop
dec
incl
add
inc
mov
sahf
add
pusha
sbb
mov
xchg
mov
testl
pop
mov
jno
push
sbb
push
add
pop
clc
push
in
ret
pop
popa
stos
arpl
sub
push
add
call
fs
push
cld
or
pop
adc
fidivrl
xchg
fstp
and
mov
add
mov
fbstp
cmp
dec
push
add
add
adc
xchg
pop
je
sahf
sub
negb
fidivrl
mov
cmpsl
cltd
sbb
lds
sti
add
mov
add
jae
pop
push
add
add
add
add
add
std
aas
out
push
shlb
add
call
test
cmp
or
or
add
icebp
orb
ret
fs
lret
es
xchg
mov
add
cld
mov
lods
inc
jge
add
pusha
lcall
ja
test
enter
sub
loopne
daa
xchg
icebp
add
std
pop
popf
cmpsl
shlb
jns
loop
mov
cmovge
push
movb
cmp
add
sbb
add
sub
add
testl
scas
test
cmp
sub
outsl
sub
and
fwait
cmp
clc
add
mov
cmp
jne
aas
jmp
inc
push
push
push
mov
and
mov
inc
fwait
ret
lods
add
mov
add
outsl
test
mov
inc
mov
add
adcl
add
or
push
sbb
xor
mov
popf
xchg
xlat
insl
sahf
jl
push
sbb
xchg
mov
scas
push
cltd
shrb
test
add
xchg
push
bound
test
shll
dec
lahf
add
loope
mov
xor
jne
push
arpl
xchg
and
std
push
mov
xchg
decl
ja
and
xor
pop
mov
mov
jg
sub
ljmp
test
lret
mov
fs
mov
cwtl
cld
adc
cmpsl
popf
les
add
popf
mov
sub
inc
aad
add
cmc
add
pop
sub
xchg
cwtl
aas
inc
int
add
or
add
outsl
pushf
push
push
ret
in
xchg
xchg
je
cmpsl
into
addr16
stc
dec
push
cli
mov
add
imul
push
orl
pop
add
pop
loopne
loop
and
int
call
push
mov
xchg
mov
nop
loopne
test
inc
mov
mov
pop
jl
ss
fwait
jl
inc
mov
ret
rcr
or
call
mov
or
fldt
sbb
sbb
shll
push
adc
sbb
lret
mov
cmp
pushf
fnsave
sbb
in
lahf
cmpsb
mov
add
mov
pop
stc
jne
popa
push
lods
int
jae
add
add
sbb
add
and
pop
hlt
mov
dec
popf
xchg
repz
mov
movsb
outsl
sarb
add
cmp
add
xchg
out
mov
and
jbe
cltd
mov
lock
dec
aas
xchg
inc
mov
sub
sahf
stos
xchg
xorb
push
inc
and
jg
add
mov
mov
dec
dec
add
jmp
inc
dec
add
fwait
addb
add
jno
rorl
push
mov
cmpsl
mov
cmp
add
into
movsb
ret
xlat
mov
sub
adc
add
ja
loop
lods
xchg
jecxz
sti
pop
cmp
or
rcrb
mov
lods
mov
xchg
jge
sbb
jecxz
add
push
add
cltd
dec
dec
pop
add
iret
jne
mov
add
outsb
dec
fsubr
sbb
cmp
out
pop
aas
jmp
xlat
pop
test
jmp
cmc
mov
add
jbe
xchg
stc
or
loop
and
xorb
mov
sbb
mov
shlb
add
popa
test
add
lea
inc
nop
pop
cmp
or
enter
xchg
out
fmuls
roll
add
add
mov
lret
cmp
icebp
je
adc
ret
mov
or
add
clc
mov
xor
or
add
data16
sub
jle
dec
dec
test
xchg
and
add
sbb
push
adc
pushf
mov
loop
xlat
inc
dec
push
mov
popa
lock
cmpsl
pop
mov
adc
cmc
cmpsl
imul
pop
xchg
test
iret
shl
call
add
and
int3
push
add
out
sub
cmc
mov
faddl
inc
stos
add
call
daa
sub
mov
inc
rcl
ja
repz
aad
cld
pop
mov
data16
icebp
push
mov
std
adc
mov
mov
add
add
add
mov
pop
dec
fnstenv
push
mov
ss
out
fsubl
adc
fdivrl
push
cmc
movsb
mov
cltd
jle
cmp
jmp
and
loop
mov
mov
das
push
sbb
lahf
pop
js
popf
fstl
incb
mov
outsl
pop
data16
aaa
sbb
adc
mov
jp
jno
fidivrs
xlat
pop
lcall
lahf
or
aam
repnz
cmp
icebp
in
push
mov
inc
add
mov
loop
mov
add
xchg
icebp
gs
cmpsl
test
ret
andb
dec
getsec
es
inc
ret
ficomps
loope
shll
aas
inc
pushf
add
pop
pusha
pop
mov
movsl
add
inc
pop
mov
negl
push
adc
shr
aam
push
dec
insl
jge
xchg
push
gs
adc
ds
cmpsb
inc
cwtl
add
cld
leave
pop
adcl
notl
cmp
pop
add
jnp
jp
add
xlat
push
push
out
imull
mov
mov
and
pop
out
or
add
mov
arpl
shll
bound
pop
shll
push
push
push
xchg
adc
addr16
add
or
add
pusha
push
nop
leave
out
xchg
ss
shll
push
mov
sub
fnstsw
mov
push
aam
aas
scas
in
push
or
jecxz
test
rcll
push
dec
pop
add
loopne
mov
add
das
sub
mov
rorl
sub
add
mov
inc
jl
adc
and
adc
pop
into
rcpps
and
daa
add
movsb
imul
add
daa
clc
incb
add
xchg
mov
add
movsl
decb
imul
fcom
push
js
mov
pop
rcrl
or
push
sar
ja
aaa
imul
and
xor
add
data16
xchg
fnstenv
fcompl
lcall
bound
xchg
stc
nop
arpl
sbbl
incb
cmp
stc
xchg
hlt
call
les
add
or
add
stc
cmp
push
xchg
mov
nop
xchg
adc
add
in
xor
cmc
orl
add
ret
push
aad
dec
sbb
filds
pop
xchg
jp
jl
sbb
mov
inc
inc
add
scas
pop
mov
push
popl
lea
add
leave
lock
imul
filds
cmpsl
or
add
inc
icebp
mov
xorl
hlt
inc
fsub
sbb
fwait
mov
das
add
pop
dec
inc
test
out
or
sbb
in
stos
pop
mov
ja
xchg
bound
xchg
ss
cmp
mov
ficompl
out
lret
into
xchg
aas
pop
das
add
scas
mov
sub
rolb
add
push
add
clc
movsb
inc
test
scas
into
or
mov
in
and
sti
jbe
sbb
stos
push
ret
jl
xor
hlt
cld
outsl
inc
das
add
mov
cmp
mov
in
push
xor
or
fisubs
mov
adc
lret
mov
add
add
add
xchg
into
sbb
imul
jbe
testl
in
mov
sbb
loopne
mov
out
lods
in
push
stos
mov
add
aam
cmp
add
push
mov
add
adcb
sub
sub
bound
jno
add
inc
roll
in
orl
adc
sbb
lock
sbb
cmp
adc
pop
and
add
dec
or
add
mov
repz
mov
inc
mov
add
inc
pushf
inc
mov
xchg
xchg
stos
mov
dec
mov
mov
adc
add
push
data16
cmpsl
cmpsl
xor
into
clc
ret
repnz
test
fsts
mov
add
sub
add
add
les
add
pop
fstl
push
mov
inc
nop
dec
scas
add
and
sub
sub
fwait
scas
xchg
insb
jb
pusha
enter
mov
push
lds
jbe
sahf
jbe
fpatan
fdivr
and
fidivs
mov
add
gs
loop
repnz
inc
sbb
subl
jg
mov
add
pop
nop
rcl
push
pusha
in
inc
test
xchg
dec
daa
out
fcomp
imul
add
xor
add
inc
imul
mov
and
mov
and
add
movsl
dec
roll
add
add
add
clc
inc
repz
lahf
inc
incl
add
sub
mov
aaa
stc
cmp
sbb
scas
pop
jne
sbb
insb
or
addb
push
xor
sub
test
add
hlt
add
test
test
cwtl
sub
mov
dec
sti
add
pop
pushf
mov
mov
or
xchg
lods
xchg
loopne
fidivrl
xor
ljmp
jo
mov
sbb
sbb
dec
daa
fiaddl
sbb
inc
dec
cmpsl
cmpsl
inc
mov
add
sbb
add
sbb
enter
xchg
mulps
pushf
add
cmpsb
scas
pop
fucom
scas
in
cmp
cli
lds
inc
add
xchg
pop
xchg
repnz
jge
xchg
shrl
xor
inc
lea
scas
xchg
fs
mov
cmc
in
push
xor
pushf
push
fucomi
cmp
xchg
stc
xchg
jnp
jg
scas
mov
add
aam
sbb
clc
jge
imul
push
test
add
mov
add
dec
jae
adc
cli
inc
pop
enter
xchg
and
dec
jnp
cmpsb
mov
xor
leave
xchg
nop
inc
lea
call
imul
fisubl
sbb
jmp
lret
sub
scas
pop
fistps
inc
dec
dec
sub
adc
xor
pop
mov
xor
xor
add
bound
jl
subb
add
sahf
lds
rcr
lock
int
cmp
cmp
lea
rcrb
add
adc
insb
lret
lret
mov
scas
test
lea
add
iret
stos
push
cmpsb
xor
frstor
lods
sahf
addr16
int
and
add
enter
fisubrl
popa
pusha
push
fcompl
cmpl
adc
add
ljmp
sub
lods
xor
and
imul
pop
lods
add
stc
lock
add
add
xchg
movsl
and
fs
orl
add
pop
xchg
dec
subl
dec
lods
add
addr16
lods
lods
lcall
mov
mov
leave
sbb
test
test
mov
aaa
out
ret
insl
pop
cmpsl
subb
add
notb
outsl
mov
loopne
and
into
or
lea
fstps
pop
jb
imul
mov
cmp
out
ret
mov
cmp
pop
cmp
add
fstpl
mov
cwtl
jge
or
add
xor
in
sti
inc
out
or
add
repz
subb
xchg
aam
jbe
pop
jp
xchg
insb
xchg
dec
leave
pop
mov
pop
rcr
sub
sub
sub
shl
loop
hlt
add
cmc
inc
xorl
add
and
inc
pop
mov
mov
jge
mov
test
in
jl
add
shrb
in
cmp
fists
mov
test
and
adc
lds
sbb
rcrb
push
inc
xchg
xor
adc
sarb
lret
adc
scas
xlat
std
iret
add
ja
out
add
pop
xchg
adc
push
or
inc
sbb
lods
or
dec
fdivrl
cltd
mov
ss
xchg
jno
jmp
mov
stos
or
add
andl
insb
pop
cmp
sub
stos
mov
add
push
and
icebp
dec
cmp
das
inc
or
add
xor
aas
stc
inc
adc
mov
xor
imul
push
pop
pop
enter
scas
stos
push
mov
add
mull
sub
add
add
adc
jge
or
add
and
shlb
shlb
ret
inc
mov
js
adc
aaa
add
in
mov
add
adc
cld
jno
dec
ss
push
add
cmp
add
mov
ja
jnp
add
movsl
repz
or
pop
test
add
lods
pop
lahf
popf
and
xchg
inc
xchg
jl
and
sbb
ret
push
out
sbb
pop
jmp
sub
push
pop
enter
xor
push
add
lock
mov
and
pop
xchg
call
stos
cli
dec
and
insl
push
sbb
xchg
out
jnp
or
in
push
and
cmpsb
push
cmp
cmpsl
iret
stos
sbb
mov
mov
mov
add
adc
out
test
cmp
xor
out
shll
xchg
add
inc
dec
add
dec
inc
adc
pop
aad
sbb
add
xchg
jbe
arpl
add
pop
cmp
lcall
insb
idivb
fsubrs
inc
cmp
add
icebp
inc
push
mov
inc
push
stc
ja
jb
add
std
inc
lds
sub
roll
cmpsl
push
cld
mov
pop
pop
mov
adcb
outsl
sub
mov
pop
add
jae
imul
add
jmp
sbb
adc
add
adc
xchg
add
addl
lret
inc
loop
add
xor
add
add
movsl
adc
cmpsl
jge,pn
jp
push
int
imul
adc
mov
add
add
fdivrs
pop
sbb
sbb
leave
adc
jb
mov
mov
int3
rolb
add
sbb
arpl
add
imulb
ljmp
sbb
mov
add
ds
cmc
sbb
add
add
push
push
mov
fmul
insb
add
outsl
cmpb
inc
jnp
add
ljmp
mov
cli
sbb
add
sbb
das
test
into
pop
sbb
into
jno
add
mov
add
shll
nop
xor
add
fcomi
adc
aaa
and
cmp
imull
orl
stos
sub
push
xor
mov
imul
scas
rclb
out
add
add
ljmp
stc
cltd
rcr
fstl
mov
jp
add
test
mov
lahf
pop
inc
les
add
pop
mov
or
ljmp
dec
fxch
fs
and
in
int
add
lods
loope
jnp
adc
add
cmp
cmp
dec
inc
sbb
add
loopne
ja
mov
cmc
iret
push
out
sbb
push
addr16
loopne
and
jmp
hlt
fwait
xlat
add
mov
xchg
loope
jg
or
pop
cwtl
cs
add
or
into
sbb
add
int3
repnz
push
nop
inc
popf
adc
mov
mov
jnp
scas
std
xchg
nop
clc
lds
add
aam
xor
js
add
add
lret
cmp
add
add
inc
cltd
cmpsb
xorl
push
pop
cmp
inc
arpl
addb
lcall
mov
add
mov
int3
incb
add
or
fnstenv
add
lret
dec
pop
cmpsl
or
hlt
mov
sbb
sbb
cmp
lods
out
mov
fbstp
cs
sahf
mov
out
xor
lock
add
fwait
ljmp
nop
int
leave
fnstcw
loopne
shll
mov
sub
sbb
stc
jmp
imul
rcl
jp
gs
sub
adc
mov
adcb
mov
sbb
pop
mov
cmp
aad
push
dec
shlb
xorl
push
int
cli
add
adc
inc
xchg
aaa
fmuls
mulb
scas
mov
add
jg
and
mov
and
or
sbb
insl
stos
nop
and
pop
or
addb
inc
daa
add
lcall
add
pop
add
adc
adc
bound
add
testb
add
dec
idivb
scas
out
repz
jns
mov
adcb
orb
pusha
aam
jmp
ret
and
jge
dec
ret
loopne
push
cmp
xchg
or
add
nop
cmp
mov
es
push
sub
add
push
out
dec
leave
add
rcl
outsl
dec
mov
fwait
push
ss
adc
or
ljmp
cmp
mov
or
add
xchg
inc
jno
icebp
jnp
das
add
mov
push
mov
push
mov
jle
into
cmpsl
jmp
icebp
pop
iret
int
cld
cli
lcall
jns
sbb
movsl
test
add
xor
push
out
mov
fldcw
jle
mov
out
out
test
xlat
aad
sbb
fmul
ljmp
xchg
mov
jno
leave
mov
int
inc
and
push
sbb
sar
add
arpl
cmpsb
pop
push
mov
sahf
cmp
sub
sub
push
ffreep
addb
jp
add
push
je
int3
add
sub
add
jg
xorl
mov
push
dec
jno
add
sahf
test
test
add
clc
adc
add
sbb
mov
icebp
outsl
sub
add
sub
mov
data16
imul
add
popf
stos
repz
mov
add
push
xchg
out
loop
jb
push
sbb
add
std
adc
xchg
mov
cmp
aaa
push
insl
das
mov
inc
iret
dec
mov
mov
mov
add
shrb
popf
inc
jge
push
sub
sbb
mov
push
inc
movsl
stos
fildll
outsb
add
xlat
inc
mov
add
add
add
stos
sbb
add
and
enter
mov
addl
add
ljmp
inc
cs
push
aam
movsl
inc
aaa
cmpsb
jmp
add
mov
subl
or
add
je
int3
mov
add
outsb
xor
int3
rolb
pop
outsl
leave
xchg
push
mov
sbb
lret
jg
push
add
add
xlat
cmp
xchg
testb
sbb
jle
sub
lret
je
ret
add
mov
jl
rcll
int3
leave
add
in
aaa
mov
adc
add
lods
xchg
fcmovne
lret
lahf
xchg
fisubs
cmpsb
add
and
inc
lahf
leave
xor
add
add
in
and
rep
sbb
cmp
cmp
mov
inc
mov
jmp
add
nop
scas
into
xchg
xchg
xor
dec
add
adc
in
test
add
iret
jne
jge
int
lds
jb
jle
xlat
jbe
push
test
add
inc
mov
pop
scas
dec
and
lds
movb
push
sbb
add
mov
add
subl
mov
in
sub
imul
xor
add
or
add
test
adc
ljmp
adc
rcrb
sti
add
je
ds
or
add
mov
cmpb
mov
sbb
inc
call
jp
lcall
pop
ss
in
xor
dec
xchg
mov
jno
cltd
js
cmp
inc
mov
pop
lcall
outsl
adc
add
adc
pop
aaa
mov
sbb
rcrl
bound
rcrb
mov
xchg
add
pop
and
add
pop
clc
repnz
mov
sub
add
cmp
adc
stc
insl
inc
mov
or
add
mov
mov
xor
fimuls
and
fcoml
cs
fidivrl
inc
mov
add
mov
je
add
fisttpll
cs
adc
pushf
push
sbb
add
inc
cmpl
addb
xor
and
add
push
xor
mov
jmp
loope
add
test
cli
cmpl
or
jmp
test
jb
cmp
jb
sbb
pop
push
fs
mov
mov
sbb
xchg
call
sbb
jnp
adc
ja
mov
loope
je
mov
mov
out
jle
jl
add
add
testl
sbb
popa
insb
mov
xchg
jnp
icebp
mov
shrb
data16
ljmp
xor
js
and
stos
pop
lds
push
add
lahf
inc
stos
add
mov
mov
push
fwait
int
shl
add
dec
cmp
insb
or
mov
mov
mov
repz
add
mov
test
pop
push
or
cli
push
mov
pop
and
add
mov
ret
stos
lods
mov
push
xchg
sbb
test
add
out
xchg
dec
mov
add
sti
rcrb
cmp
adc
dec
insb
sbb
jo
insb
fistl
dec
cmp
mov
jle
push
pop
aam
js
sub
dec
int
arpl
dec
fwait
dec
lds
add
sbb
push
lods
nopl
call
jns
rcrb
movsb
loopne
push
ds
jnp
test
xchg
adc
add
cmp
iret
mov
xor
in
pop
outsb
aad
xor
inc
mov
add
pop
adc
faddp
sub
xchg
shl
or
add
sti
xchg
xor
xchg
ror
mov
icebp
pop
inc
sbb
cwtl
add
inc
dec
cmpsl
or
or
scas
sti
out
sbb
mov
or
aas
and
and
sar
adc
addb
xchg
add
pop
add
mov
repz
leave
push
jle
or
dec
sbb
add
fdivr
xchg
pop
sbb
outsl
xchg
rcrl
adc
movsl
mov
and
or
lret
dec
jge
add
repnz
or
add
lods
adc
and
mov
adc
inc
mov
outsb
icebp
push
jl
pop
lods
jle
mov
cmp
or
add
test
es
test
add
mov
inc
pop
pusha
js
or
subl
out
jno
adc
incb
add
sbb
rolb
sti
out
les
xor
pop
iretw
sub
ds
out
cmc
loope
adc
add
jo
addb
add
mov
outsl
fdivrl
stos
push
and
es
icebp
add
cld
inc
cwtl
push
xlat
jnp
fwait
dec
push
cltd
jbe
cmp
sbb
lock
cs
mov
mov
not
adcb
xor
adc
stos
push
sub
pop
fwait
mov
leave
add
add
add
adc
or
add
js
repnz
sahf
adc
add
dec
xor
bound
outsb
add
divl
adc
stos
jnp
fldl
fcompl
addr16
add
cmp
in
popf
or
add
mov
test
test
popa
rolb
push
add
imulb
lock
repz
xchg
subb
fwait
mov
xchg
sbb
outsb
pop
xlat
inc
dec
mov
sub
pop
xlat
or
xchg
xchg
ficoms
add
mov
jne
les
add
mov
leave
xchg
fisttps
add
mov
in
movsb
jmp
jo
insb
xor
dec
in
aam
mov
pop
movsb
pop
sub
xor
cli
jb
pop
sti
imul
orb
fdivrs
cltd
clc
js
mov
daa
add
lods
roll
pop
lcall
inc
adc
cld
imul
xchg
addr16
call
add
pop
clc
sbb
cmc
dec
das
add
cmpsb
sub
adcb
sarb
jb
add
xchg
push
adc
cmp
push
mov
mov
dec
sahf
cmp
and
stc
cmpsb
pop
pop
por
lret
call
sbb
dec
jae
out
mov
dec
aaa
lret
push
mov
add
mov
mov
mov
aam
add
insb
mov
popf
xchg
sub
inc
xor
push
cs
dec
adc
sbb
add
loop
jne
popa
sbb
sahf
inc
jns
or
aas
pop
xchg
iret
push
sub
lods
rcrl
fnstsw
enter
mov
fcmovne
lahf
add
cld
lods
jnp
or
outsl
sub
lret
mov
fdivl
mov
jbe
and
mov
rolb
add
add
sub
jg
ja
jg
out
push
mov
xchg
sbb
or
add
adc
scas
sar
arpl
out
add
pop
cld
or
adc
mov
aaa
xchg
cmc
push
sbb
int
mov
je
mov
pusha
out
xchg
mov
add
adcb
mov
add
add
cmpsl
nop
rorl
inc
pop
mov
pusha
add
hlt
push
mov
mov
push
xor
jg
inc
push
add
push
fisubs
pop
jnp
xor
xor
notl
dec
test
adc
mov
outsb
pop
pushf
ds
inc
cmp
add
inc
scas
push
leave
cmp
shlb
loopne
pop
fdivp
or
call
daa
mov
jae
out
scas
dec
fisubrl
inc
add
stos
dec
lcall
mov
ds
hlt
and
pop
push
adc
dec
pop
inc
insl
repz
pop
sbb
mov
pop
aaa
pop
pop
mov
subb
add
test
add
jmp
mov
jbe
mov
add
inc
pop
dec
jbe
add
sub
inc
repnz
fadd
sub
sbb
fstps
shrb
popa
orb
add
loope,pn
test
xor
push
popl
insb
cmpsb
aaa
in
out
imul
jmp
hlt
add
push
jo
adc
cmpsl
cmpsl
test
stos
add
insb
sbb
loopne
pop
push
fwait
mov
add
xchg
adc
cmp
add
ljmp
add
xchg
sahf
xor
inc
cmpsl
push
aad
push
fnstsw
lahf
dec
pusha
and
push
std
sbbb
mov
jno
jmp
adc
scas
int3
pushf
add
outsb
pop
cmp
adc
adc
clc
stos
lods
out
jb
jo
repnz
mov
lret
shlb
imul
movsl
cmpsb
arpl
add
lods
aaa
fwait
xchg
inc
hlt
cmp
mov
xchg
cmp
div
js
fistl
mov
jmp
inc
stos
add
adc
push
hlt
int3
pop
add
xchg
mov
mov
jb
xchg
jmp
mov
cmp
add
rcl
fcmove
xchg
out
cmp
movsb
push
dec
loop
add
mov
xor
sbb
scas
sbb
into
push
ret
movsl
dec
stc
xchg
mov
cmpb
ljmp
push
inc
add
call
push
cmpsl
aaa
jmp
xchg
js
xchg
movsl
xorl
pop
pop
lds
addb
add
ja
sub
sbb
add
aam
dec
fsubl
rorl
stos
ret
xor
mov
jecxz
popa
aas
xchg
push
cs
lods
mov
out
push
mov
or
add
mov
xchg
insb
call
add
dec
jg
jg
stos
cs
lock
and
test
incl
cmp
scas
inc
push
add
repnz
sbb
ds
xor
mulb
js
lds
add
jno
xor
out
cmp
add
lret
add
mov
add
and
mov
sub
orb
add
pushf
icebp
fstpl
addr16
fs
lret
push
ret
add
std
loop
push
cwtl
popf
out
adc
lds
sbb
push
lcall
fucomp
adc
inc
cli
pop
icebp
movsl
stc
out
hlt
nop
jno
mov
fisubl
in
and
leave
mov
dec
pop
mull
xchg
add
xchg
xchg
mov
insb
movsl
mov
scas
push
into
aas
push
sbb
clc
fldt
incl
add
add
push
std
test
add
adc
outsb
fistps
mov
into
pushf
inc
shrl
dec
ss
cmp
add
lea
add
fidivrl
imul
add
movsl
ljmp
mov
testl
lret
sub
sub
add
jmp
popf
jecxz
icebp
pop
and
xchg
pop
xchg
push
cwtl
addr16
bound
in
xor
sbb
mov
shll
stos
add
mov
call
and
subb
add
inc
push
add
pop
insb
test
je
add
adc
mov
or
push
shrl
mov
pop
add
push
enter
cltd
push
add
add
jle
mov
add
dec
scas
pop
jmp
dec
adc
stos
shlb
cmc
mov
pop
xchg
inc
dec
scas
jg
push
sarb
jns
insb
pop
fnsave
xchg
mov
and
aaa
cmpsb
cmp
xorl
cmp
je
fadds
nop
jo
inc
stos
insb
rcrb
out
sbb
add
add
dec
je
test
mov
gs
dec
stos
add
push
push
sbb
std
out
div
fisttpl
xchg
mov
cltd
jmp
and
out
andb
adc
jns
add
call
pusha
out
mov
fildll
popa
sbbb
lcall
js
stc
sub
xchg
mov
xchg
arpl
push
sbb
outsl
shll
pusha
aad
addr16
jae
or
add
add
pop
pop
adc
cmpsb
or
mov
push
mov
inc
sbb
pop
jo
stos
test
cwtl
data16
push
add
jge
icebp
ret
mov
loopne
jge
add
test
dec
adc
adc
popl
mov
lret
push
and
lcall
out
pop
mov
sti
add
push
jno
add
add
out
inc
faddl
add
push
mov
cmp
frstor
pop
push
jl
push
add
adc
xchg
and
ficompl
das
test
add
add
aaa
push
mov
repnz
mov
daa
adc
dec
cmpsl
add
jmp
add
movsl
shrb
inc
adc
sahf
add
and
or
mov
add
faddl
aam
sub
inc
xor
adc
repz
add
lret
push
mov
add
jnp
lea
mov
fdivrl
dec
xchg
inc
dec
xchg
mov
or
fwait
cmpsl
jno
xchg
loop
adcl
sbb
in
jmp
and
sarb
add
pushf
xchg
jp
je
add
xchg
mov
mov
sbb
mov
add
dec
or
add
enter
xchg
repnz
repnz
cmp
call
xchg
dec
dec
jns
push
push
aad
inc
jno
movsb
push
mov
in
mov
dec
cmc
aad
fstl
scas
pop
xor
sbb
lahf
mov
add
xchg
inc
aam
iret
sbb
xchg
or
enter
sub
int
add
lods
scas
ret
pop
cmp
push
movsb
jnp
or
add
loope
add
in
lret
fldl
add
xchg
aas
arpl
push
and
lahf
xchg
mov
enter
or
shlb
cmpsl
hlt
fdivr
mul
in
icebp
adc
add
dec
add
push
ds
add
loop
ja
outsl
mov
xchg
lock
mov
fdivrl
les
cmp
ljmp
pop
lret
imul
mov
bound
cmp
adcb
pop
xchg
jge
imul
dec
cmpsb
andl
xor
sar
repnz
adc
arpl
sbb
jmp
das
add
fwait
lahf
push
inc
adc
sub
scas
add
or
add
push
lahf
mov
lcall
xchg
popa
jb
sub
lods
add
aas
loopne
cmpsb
dec
outsb
mov
sbb
mov
sbb
add
rol
fiaddl
add
enter
xchg
cmp
inc
mov
ds
out
push
xchg
add
pop
testl
je
mov
insl
pop
dec
mov
push
xor
sbb
sahf
test
add
stos
cmp
add
push
xchg
push
sahf
lods
inc
lods
add
roll
cmp
add
das
pop
lods
mov
adc
and
xor
and
xorl
push
inc
and
dec
ret
cwtl
add
pushf
pop
into
shrb
out
or
add
mov
add
xchg
daa
and
fwait
sbb
mov
add
add
mov
iret
lahf
sbb
into
jl
mov
inc
out
cli
add
cmp
cld
in
mov
add
mov
sti
rorb
ljmp
xor
lret
fisubrl
sbb
mov
nop
xchg
mov
ds
mov
adc
mov
lea
mov
push
push
push
jb
cmp
add
adc
push
loopne
mov
push
mov
dec
insl
pop
push
push
sbb
pop
mov
sub
sbb
fisubrs
sub
xchg
fsubrs
jmp
or
andb
add
mov
lock
imul
and
add
fisubs
shrl
jnp
pop
lahf
js
bound
push
xchg
xchg
out
or
iret
mov
add
add
mov
add
fdivs
push
sbb
mov
and
in
xchg
pop
jle
fiadds
add
aas
sub
addr16
jne
add
jns
sbb
in
jecxz
push
jnp
xchg
xchg
or
add
xchg
mov
nop
insl
aas
mov
add
add
pushf
push
xor
test
adc
sbb
nop
xchg
test
movsb
jg
xor
sub
dec
push
pop
or
xorl
and
add
sbb
nop
add
add
lods
andb
add
dec
fistpll
add
jbe
cmc
and
mov
add
push
ret
xor
add
addb
aas
aad
leave
movsb
outsl
inc
mov
add
mov
and
fldenv
cmp
clc
fisubrs
rorl
add
out
sti
adc
pop
xchg
fstpl
add
popf
xor
pop
inc
addr16
aad
cltd
sahf
and
mov
frstor
jecxz
std
add
or
sar
fdivr
xchg
sbb
sub
and
je
xor
lcall
imull
xchg
add
push
popl
mov
and
add
add
jmp
inc
sbb
stc
jae
imul
mov
mov
mov
loope
lods
iret
adc
add
xor
dec
movsl
call
cmp
mov
fs
add
xabort
lea
sub
push
orb
lret
add
pop
xchg
or
popa
or
icebp
pop
lock
clc
xor
add
pop
xor
inc
stos
mov
mov
jge
icebp
push
push
add
lock
jb
jne
test
mov
jmp
cmp
cmp
mov
fwait
outsl
push
cmc
sub
cmp
sbb
sbb
inc
add
pop
arpl
adc
sbb
xor
stos
mov
mov
sti
gs
insl
es
lcall
divb
inc
icebp
dec
addl
xchg
gs
aam
popa
imul
imul
inc
dec
add
mov
pop
push
inc
pushf
jo
lods
fildl
cmpl
mov
pop
jnp
dec
jns
add
cmpsl
sub
inc
add
aaa
cmp
sub
xor
dec
mov
and
loope
ficoms
mov
sbb
add
cmpsb
fs
into
sbb
mov
iret
sbb
test
push
pop
add
or
add
and
pop
imull
add
insl
mov
jle
pop
add
loop
sub
divl
push
jb
cltd
stos
sbb
push
dec
outsl
push
push
loopne
mov
insb
scas
jb
mov
jmp
cmp
out
mov
cmp
pop
outsb
push
inc
mov
inc
and
jo
mov
sub
push
xchg
call
sbb
add
cmpsl
fisubrl
test
add
jmp
aas
es
cmp
jle
test
xchg
push
xchg
cwtl
in
cltd
cmp
xchg
dec
mov
push
pop
xor
xchg
lahf
push
inc
dec
fldl
sub
jae
idivl
jnp
inc
rcrb
xchg
mov
or
test
pop
sub
cmp
in
popf
je
sbb
or
add
pop
xchg
sub
xlat
punpckhwd
stos
mov
push
mov
push
cmp
pop
int
out
pop
and
pop
loop
pop
dec
fildl
add
pop
popf
xchg
and
test
inc
fisubl
scas
xor
adc
sbbl
out
add
lea
add
das
xchg
pop
adc
arpl
add
iret
hlt
fs
orb
add
xchg
cmp
push
and
xlat
mov
adc
and
inc
and
xchg
inc
and
lret
jmp
xchg
in
or
add
cmpsl
repnz
add
fisubl
and
jno
mov
test
pop
fmul
push
leavew
mov
add
fadd
popa
add
mov
movsb
ss
and
in
int
out
add
mov
int
mov
cli
rolb
pop
jg
sbb
aas
push
sbb
and
sti
inc
mov
add
pop
aas
in
push
and
ret
mov
sbb
jmp
add
faddp
outsb
sbb
mov
sub
add
popa
mov
add
add
push
and
out
lahf
rcl
xchg
mov
add
push
jl
movsb
inc
push
loop
in
out
mov
push
or
lahf
outsb
adc
cltd
loop
push
jo
hlt
jb
and
fs
repz
in
mov
dec
lret
scas
fwait
jp
test
xlat
mov
mov
out
loopne
push
sub
insl
add
aad
adc
sbb
mov
mov
insl
pop
jle
mov
sub
add
out
xchg
in
xchg
test
leave
fidivrl
out
sbb
ds
rorb
add
push
fnsave
and
jmp
outsl
lret
lods
dec
roll
add
maskmovq
idivl
jle
dec
xorl
dec
adc
pop
testl
cs
std
enter
and
and
or
mov
mov
enter
fiadds
add
adc
jg
das
add
loop
data16
sbb
xchg
sbb
mov
aam
jno
sub
cmp
add
and
insb
iret
jb
lret
mov
unpcklps
ficoms
fstp
pop
jl
xchg
mov
mov
fnstsw
fstps
out
push
add
subl
shlb
lcall
xor
gs
add
add
outsl
dec
adc
push
mov
add
pop
cmp
pop
mov
sbb
add
sbb
xchg
cmpsl
cmpl
dec
mov
mov
cmc
adc
dec
and
popf
pop
shlb
jge
cmpps
xchg
flds
pusha
stos
cs
add
adc
jg
xchg
scas
je
ja
stc
push
stc
lock
outsb
mov
leave
cmc
cmp
pop
in
cmp
and
outsl
jae
add
sahf
aad
push
sbb
roll
add
movaps
xor
inc
add
imul
ss
mov
mov
push
push
pop
mov
stos
bound
add
add
adc
pop
or
fs
cmp
and
cmp
lods
hlt
cmc
xchg
mov
inc
lcall
fninit
mov
inc
cmp
daa
std
cmp
inc
pop
mov
out
add
jecxz
adc
sti
inc
xchg
add
jp
insb
add
bound
push
imull
mov
test
add
jnp
and
add
sbb
or
add
add
xor
sub
add
add
ret
loopne
xor
dec
inc
call
shlb
mov
add
mov
or
nop
pause
mov
out
sub
repnz
add
add
shr
add
in
add
mov
mov
xchg
roll
ljmp
add
js
adcb
hlt
ljmp
lahf
xchg
add
add
add
cmp
cmp
dec
jle
or
jns
out
and
nop
push
mov
cmp
sub
add
clc
sbb
aaa
cmpsb
or
mov
jl
xchg
dec
sbb
pop
addl
fidivrl
je
pushf
dec
repnz
mov
push
leave
mov
scas
aad
push
decb
xchg
jmp
xchg
push
sub
mov
ret
lds
lret
in
fwait
pop
fcom
pushf
sbb
mov
sbb
movsb
rcr
and
negl
mov
inc
pop
add
insb
test
add
mov
dec
insl
icebp
xchg
ja
add
pop
addr16
sbb
fcomip
mov
pop
xor
cmp
ret
xor
mov
out
add
mov
test
xchg
pop
call
cmp
in
lahf
xor
pop
cmp
cli
int3
push
add
std
jecxz
adc
xor
push
sbb
cmpb
adc
jnp
fld
iret
ss
mov
add
jp
pop
lods
mov
ficompl
add
jne
mov
add
fiadds
jns
aas
push
ljmp
enter
pop
call
mov
jb
and
or
jmp
iret
push
sbb
cld
ljmp
xor
xor
inc
leave
add
push
fisttpl
add
push
xchg
aam
mov
xor
add
add
add
xchg
outsb
test
gs
sub
daa
fimuls
fwait
xchg
mov
xchg
adc
popa
rcl
mov
dec
mov
add
adc
fnsave
stos
jecxz
or
add
xchg
mov
add
pop
es
inc
dec
add
add
je
cmp
fistpl
mov
add
bound
add
mov
lods
cmpsl
mov
jns
cmpsb
lds
add
test
les
fidivl
lds
pop
xchg
test
add
add
inc
das
orl
addr16
push
lcall
sub
add
pop
out
out
movsl
movl
xchg
add
add
sub
mov
fdiv
jae
inc
mov
icebp
leave
jl
dec
xor
add
pop
sbb
xor
shr
test
add
loop
ret
dec
ljmp
mov
xor
dec
pop
jecxz
adcb
fwait
jb
cld
repz
cwtl
xchg
inc
mov
ds
addl
in
xlat
jl
dec
popa
add
fiaddl
xor
cmc
cmp
inc
es
or
add
adc
leave
add
pop
addr16
test
add
mov
jle
sbb
and
jno
icebp
fiaddl
jne
dec
nop
dec
or
add
xchg
subb
pop
pop
cli
movsl
push
xchg
out
xor
icebp
ds
leave
mov
lea
pop
cmpsl
shrl
lods
lds
mov
jle
xor
sub
addr16
xor
movsl
rorb
shrl
add
or
addr16
ret
hlt
push
cmpsl
inc
test
add
ljmp
inc
adc
mov
pusha
push
lea
add
add
dec
popa
outsb
movsb
lcall
sbb
pop
das
adc
repnz
add
jg
fidivs
lds
mov
mov
mov
mov
test
aad
rcrl
mov
aad
movsl
add
inc
fsincos
cmc
jno
sbb
push
fisubs
push
push
data16
adc
lret
add
in
jg
and
in
fwait
and
jl
add
push
fwait
pop
adc
nop
jb
sbb
shr
ds
int
int3
and
add
pop
pop
in
outsb
mov
sub
sbb
aaa
iret
fildll
mov
or
in
or
ret
add
jnp
cmp
in
jae
mov
push
mov
lcall
or
add
cmp
imul
jae
adc
jbe
pop
leave
cmp
mov
add
bound
ret
pushf
mov
mov
int
loop
mov
inc
fxtract
add
add
cmpsl
inc
inc
nop
in
pusha
jge
popa
add
mov
gs
movsb
push
add
adc
add
xor
repz
jns
cltd
test
test
lods
or
jg
rcll
dec
jp
ds
xchg
call
push
ljmp
add
jle
in
shrl
cld
lahf
nop
jne
andb
add
add
mov
inc
insl
scas
jne
stos
mov
and
sti
jle
in
lret
dec
cmp
decb
push
add
pusha
loop
insb
xchg
mov
xchg
lret
clc
repz
xor
pop
aam
cmp
jo
cli
xchg
ficoml
pushf
adc
enter
jge
xor
xchg
xor
sbb
xor
insl
aaa
pop
mov
mov
push
adc
sahf
jmp
xor
addb
push
add
or
xchg
add
jae
hlt
rclb
popa
jge
pop
dec
inc
cmpsl
mov
inc
int3
jbe
add
mov
inc
add
pop
cmp
mov
cmp
add
sbb
adc
cmpb
jle
pop
push
cmp
daa
imul
mov
sbb
repz
add
xor
pop
dec
pop
dec
rolb
add
inc
jmp
add
jp
or
mov
call
insb
push
adcb
imul
sub
xlat
mov
cmp
ja
insw
fwait
cmp
out
pop
fstpl
cmp
cwtl
xchg
bound
stc
cmp
inc
mov
jb
adc
lea
mov
push
and
push
int
mov
push
aaa
addr16
add
stc
loopne
xchg
or
add
inc
jb
push
jmp
add
outsl
and
movsl
movaps
movsb
lods
dec
roll
add
mov
or
add
mov
adc
mov
xchg
in
jb
mov
inc
fists
sbb
das
add
mov
xor
cmpps
cli
sti
cmp
mov
iret
cli
pop
in
out
ret
addl
jbe
pop
sarb
add
add
add
and
ret
push
push
lods
leave
xchg
imul
push
cwtl
adc
dec
pop
scas
ja
addl
aam
in
inc
mov
add
mov
jnp
push
setbe
add
mov
sbb
sub
ret
stos
pop
stos
cmp
addr16
or
jne
mov
cmp
dec
lret
add
sbb
jle
push
jbe
stos
and
fwait
test
xchg
jbe
test
lods
incb
add
add
xor
lods
sub
mov
mov
pushf
jle
sub
add
xor
ja
jmp
add
call
inc
add
lcall
in
ret
mov
dec
dec
add
arpl
add
xor
mulb
cltd
pop
mov
pop
add
mov
inc
inc
add
cli
and
or
jle
int
outsb
cmp
adc
fmuls
sub
dec
aam
add
addl
stos
std
fistpll
out
mov
add
fildl
jae
imul
fdivr
pop
popa
push
pop
std
inc
lret
jns
cmp
mov
and
je
sarb
movl
cmp
and
dec
in
loop
or
xchg
add
mov
xchg
pop
es
lret
cltd
subl
leave
adc
pop
test
je
into
mov
enter
sbb
inc
push
add
mov
je
mov
add
xchg
pop
loope
aam
cwtl
cmp
xor
movl
xor
add
mov
sbb
sbb
or
add
fisttpll
loopne
adc
dec
stos
add
sub
sub
imul
rcrl
shll
scas
movsb
mov
sub
xor
pop
dec
jb
add
data16
xorl
sbb
jnp
add
rcrl
and
jecxz
xchg
mov
stos
inc
out
push
mov
sti
popa
inc
cli
lods
lret
sub
add
cmp
icebp
imul
inc
mov
cs
mov
imul
xchg
lds
fmul
jbe
test
add
test
and
adc
loopne
add
dec
push
popa
mov
lds
add
inc
incl
pop
jo
lret
adc
sbb
scas
xor
dec
addr16
and
mov
lods
add
push
add
outsl
sub
or
faddl
add
mov
mov
iret
pop
notl
mov
xor
jg
push
ss
sbb
add
cmc
push
in
insl
addr16
add
mov
add
jmp
mov
jg
aad
fucompp
inc
lcall
mov
pop
lahf
cmpsl
es
xlat
add
in
imul
push
iret
imul
dec
mov
cwtl
cmp
mov
addb
rorl
shrb
inc
add
frstor
jne
lock
arpl
ret
call
in
push
imul
int
adc
push
cmc
pop
sbb
jo
test
dec
adc
xchg
sub
add
loopne
in
adc
popl
jp
pushl
add
arpl
or
add
loop
mov
les
mov
cmpsl
shll
out
repz
in
sub
lret
int
and
add
mov
mov
inc
mov
adc
inc
push
andb
bound
std
push
jge
scas
nop
mov
adc
jl
xchg
mov
mov
and
mov
stos
push
aas
cltd
xor
push
mov
sarl
enter
fldpi
in
xchg
iret
stos
adc
xlat
mov
push
jbe
pop
rorl
nop
lock
mov
add
movsl
call
in
std
jle
jecxz
imul
xor
cmp
adc
or
in
gs
mov
add
sahf
insb
jge
rcr
fistl
dec
loope
mov
xchg
shrl
mov
add
xchg
inc
xor
add
xchg
mov
add
mov
sahf
xorb
jo
leave
pushf
mov
mov
pop
jo
cmp
xorb
fimull
inc
subl
testl
jae
cmp
add
add
add
lock
movsb
dec
push
add
sahf
mov
mov
pop
call
inc
jmp
xor
jb
jl
push
roll
push
inc
pusha
push
cli
xchg
sti
sub
out
ljmp
xchg
mov
mov
add
lock
es
xchg
xchg
scas
xor
or
insl
and
add
pop
add
out
jp
lea
nop
loopne
mov
imul
add
dec
imul
cmp
xlat
les
add
add
push
es
pusha
sbb
aam
testl
mov
out
or
nop
jle
lds
cmpsb
jle
sbb
dec
jmp
xor
test
add
mov
add
add
icebp
pop
cltd
mov
shrb
inc
mov
xor
inc
jbe
aas
or
xor
xchg
rorb
nop
push
je
gs
sbb
sbb
lods
imul
orl
add
cld
and
jnp
das
mov
imul
add
jmp
add
loopne
es
add
mov
add
mov
filds
push
jno
sbb
add
mov
leave
jl
ret
push
jnp
sbb
push
and
xor
add
in
jg
xchg
aad
jo
cmp
add
loope
jmp
push
cmp
pop
repnz
sub
jl
ja
or
lahf
cmp
test
inc
add
sbb
lahf
or
dec
je
add
cltd
or
dec
jg
jo
imul
add
adc
mov
sub
int
or
leave
imull
mov
or
add
hlt
mov
pop
arpl
testl
xchg
add
add
fs
xorl
pusha
sub
jo
sbb
mov
push
mov
repz
pop
das
jne
sbb
xlat
push
inc
jns
test
popa
ljmp
add
arpl
cmp
test
cwtl
mov
ret
jl
int
pop
add
mov
jle
cmpsl
sti
int
lcall
repnz
es
icebp
xor
cmp
push
jb
add
add
testl
mov
sub
int
lods
mov
leave
dec
frstor
xlat
cmc
mov
sub
pop
in
out
add
xchg
enter
ret
add
lods
sar
lds
imul
push
xchg
push
insb
jo
and
xor
inc
jl
adc
imul
mov
lods
std
dec
or
push
idiv
pop
movsl
add
add
sub
pop
scas
add
adc
add
adc
jge
adc
je
leave
or
gs
mov
lds
sarb
cmc
add
hlt
pop
dec
cmp
addr16
mov
leave
jg
adc
and
imul
std
lea
add
mov
pop
sub
xchg
add
jmp
imul
add
out
add
add
or
push
cs
fistl
paddsw
fs
fstpt
iret
cmp
jnp
mov
add
inc
stc
imul
mov
xor
sbb
adc
add
adc
pop
out
mov
add
add
fs
jg
push
cwtl
adc
mov
cmpsb
push
enter
out
push
add
add
mov
cli
and
cmpsl
adc
push
in
inc
inc
jmp
add
fbld
notb
cld
mov
add
lods
test
push
faddl
test
mov
add
mov
pop
adcl
stc
stc
fstp
jo
and
fisubs
add
xor
xor
add
xor
repnz
xchg
or
cmp
mov
adc
add
sbb
push
fldl
add
je
testb
sbb
add
mov
sub
add
xchg
lcall
dec
cmp
stc
xchg
arpl
add
mov
mov
add
fsubs
or
sbbl
aad
xor
pop
add
add
mov
pop
sbb
dec
es
lds
in
aaa
out
jle
cltd
mov
loope
mov
lods
push
loopne
jo
add
and
add
mov
or
sti
fdivs
cmp
sub
cmp
push
inc
sbb
and
push
sub
into
repz
xlat
adc
jae
cmc
insb
push
mov
add
loopne
dec
fsubs
mov
or
scas
xchg
rcrb
scas
sub
inc
push
iret
enter
dec
or
xchg
jnp
pop
decb
leave
and
inc
or
add
lret
jp
iret
subb
add
add
add
mov
add
add
int3
roll
add
popf
mov
in
and
aas
xor
mov
jne
mov
nop
fstp
sahf
shrl
dec
cmp
inc
sub
jae
fs
add
sub
push
enter
orb
repnz
jmp
dec
cmp
xchg
in
fldenv
out
jo
adc
pop
lret
negb
mov
add
lret
cmp
adc
fstl
bound
or
out
inc
mov
add
adc
add
sbb
imul
fcompl
cwtl
dec
es
lret
jne
out
dec
dec
add
int
notl
in
mov
jbe
jae
or
xchg
or
mov
ds
adc
call
or
add
inc
mov
shlb
pop
cmp
fcomi
xor
hlt
xchg
sub
sbb
out
and
and
pop
lahf
cmp
push
lfs
mov
jecxz
int3
mov
pop
jmp
xchg
outsb
xchg
hlt
push
stos
xchg
fsubs
mov
xchg
fisubrs
imul
cmpsb
jo
out
aaa
std
cli
fildll
inc
fildl
data16
sub
test
add
aam
add
ss
or
add
outsl
lods
data16
add
inc
and
jns
xchg
setnp
xor
add
add
pop
and
jmp
cs
add
xor
xchg
cmp
add
xor
push
push
jle
js
fstps
aad
rorl
divb
adc
hlt
inc
outsb
aas
cmc
jp
add
push
xchg
jge
repnz
and
sbb
sti
add
call
xor
mov
push
inc
cmp
xor
add
jns
imul
test
add
icebp
sahf
clc
out
aam
insb
mov
ja
mov
pop
mov
push
ss
jo
enter
fsubrs
dec
push
lock
push
cld
jns
jbe
xor
inc
mov
add
lcall
add
pop
mov
pop
cltd
loop
adc
xor
add
add
fwait
jmp
mov
int3
lods
add
fstp
ljmp
or
sub
jg
lods
dec
pop
add
jne
lds
icebp
addl
sub
sbb
sahf
sub
sbb
and
stos
inc
pop
add
xchg
cltd
xchg
jp
mov
stos
stos
sti
push
cmpsb
dec
aad
pop
js
push
add
je
pusha
add
dec
jns
cld
arpl
xchg
sbb
jge
push
cld
jmp
push
inc
mov
mov
stos
pop
std
lods
add
aaa
and
gs
arpl
cmp
jbe
mov
add
push
jg
fcoms
loop
add
subb
mov
jnp
lea
scas
lds
mov
cli
or
add
push
xor
mov
dec
sarb
outsb
sbb
lods
and
pop
add
movd
push
jge
pop
add
push
mov
inc
pushf
repz
arpl
sub
add
push
dec
sbb
sbb
ljmp
adc
lods
mov
ffreep
pop
and
add
xchg
imul
or
cld
add
xchg
xchg
pop
sti
jmp
cltd
ficoms
xchg
adc
mov
pop
jns
xchg
ljmp
sub
mov
push
pop
xorl
mov
mov
jbe
pop
add
cmp
sub
fs
adc
int
mov
ljmp
xchg
cmp
xchg
ss
iret
bound
cs
fdivrl
dec
dec
add
lcall
jmp
add
add
jecxz
in
sub
cmp
add
cli
movsb
pusha
js
pusha
mov
pop
mov
or
repz
mov
sub
sti
xor
mov
popf
cs
xor
add
inc
jp
mov
pop
jnp
adc
push
sbb
pop
jp
mov
cmp
mov
out
arpl
cltd
mov
cwtl
mov
xchg
lea
test
les
mov
lcall
jmp
clc
pop
xchg
inc
icebp
rcrl
add
add
xlat
dec
adcl
xchg
fcmovne
in
pushf
add
add
into
repnz
dec
in
es
cmp
mov
pusha
mov
lahf
dec
sub
cmp
aas
push
jne
push
das
daa
daa
mov
fidivl
pop
jnp
jb
nop
mov
inc
adc
out
pop
jne
dec
stc
mov
add
pop
add
insb
jmp
sarl
mov
imulb
jne
test
jp
int
push
cmc
push
scas
std
jg
adc
adc
mov
cmp
ja
in
outsl
adc
ss
mov
pop
cmp
push
and
arpl
iret
pop
and
mov
iret
add
xor
add
fimull
jecxz
mov
add
cli
push
mov
iret
mov
jo
add
mov
vcvttps2dq
mov
out
sub
add
inc
add
loop
pop
mov
adc
cmpsw
orb
lret
clc
inc
stos
add
test
xchg
aas
nop
and
in
loopne
leave
test
in
mov
lea
sbb
daa
sbbb
ljmp
mov
dec
test
lods
cmp
fwait
xor
push
ljmp
pop
and
repnz
dec
jno
add
fwait
xchg
repnz
hlt
test
out
jl
arpl
mov
add
fwait
imul
pmulhuw
and
mov
inc
cs
add
add
lds
add
ss
aam
push
add
jbe
bound
xchg
jl
jae
sub
xor
sbb
sbb
rclb
insl
and
cmpsb
lock
rolb
xor
outsl
push
adc
cmp
subl
arpl
sbb
or
add
jmp
fcmovnbe
ror
xchg
dec
mov
jno
fwait
and
push
add
xor
pop
loope
push
xchg
mov
mov
add
loope
mov
sbb
pop
sbb
push
lods
xchg
and
cmp
mov
push
push
loop
mov
add
add
roll
les
imul
je,pn
dec
and
lret
xor
sbb
push
xchg
push
sbb
jecxz
push
add
jmp
mov
lret
xchg
add
rolb
dec
add
cmp
icebp
jns
ret
arpl
xlat
xor
loop
lret
icebp
fs
shr
inc
xchg
add
sub
test
add
movups
shrb
add
dec
pop
fs
xor
dec
testb
mov
xlat
jno
fcomps
into
dec
mov
test
add
mov
cmp
push
xchg
inc
mov
cmp
push
push
xor
pop
jmp
imul
test
add
jo
mov
mov
rolb
in
shll
adc
jge
test
jge
and
sub
mov
dec
cmc
ljmp
and
stc
dec
int3
fldl
add
mov
popa
xor
dec
roll
cmpsl
repz
icebp
push
ficoms
xor
lea
add
and
dec
mov
add
cmp
add
add
mov
shl
jbe
push
mov
push
sbb
cmp
lahf
lods
sub
add
pcmpgtw
xchg
and
cld
icebp
pushf
fsubl
fildl
cmp
add
jo
dec
xor
leave
imul
fsubp
cmpsl
mov
daa
jecxz
dec
xchg
inc
push
add
ljmp
inc
roll
in
call
mov
adc
lret
cmovns
add
icebp
jnp
and
pop
pop
psrad
std
jecxz
add
cmp
cmc
sub
inc
std
sti
aas
jmp
lcall
xor
fnsave
fimuls
int3
xchg
add
insb
mov
fst
fidivrl
mov
add
ja
mov
sbb
loopne
cmpsl
inc
mov
inc
sub
add
roll
out
das
push
jbe
and
xor
add
outsb
stc
decb
dec
and
add
add
addb
jae
das
mov
imul
sub
mov
push
push
arpl
xorb
dec
sbb
jle
and
in
pushf
add
xchg
xchg
cld
jl
sub
ljmp
add
sub
cmpsl
mov
pusha
and
roll
mov
jg
push
dec
cmp
rcr
jg
mov
orb
add
push
mov
add
fwait
inc
lret
mov
mov
in
ficompl
jge
arpl
jmp
jmp
pop
out
mov
add
loopne
lret
stos
lret
jno
lcall
out
arpl
add
lret
std
gs
sarb
xor
aam
mov
mov
inc
cmp
add
jbe
filds
mov
mov
dec
mov
add
stos
dec
test
pop
roll
add
add
add
sub
add
data16
scas
fucomp
adc
jg
in
and
add
ljmp
js
dec
inc
dec
imul
fimull
add
enter
cltd
or
add
fs
mov
sbbb
popf
fisubs
cmp
lret
inc
fbld
lahf
mov
loopne
out
xor
fldenv
test
add
shrl
adc
push
pop
outsl
pop
inc
sti
add
fistpl
pop
and
push
loope
sbb
mov
mov
hlt
jg
adc
mov
jb
dec
addb
out
sbb
add
add
lcall
inc
mov
add
push
les
lods
xchg
mov
enter
mov
jmp
adcb
add
sbb
jmp
cmp
cmp
fdivrl
dec
insl
add
add
shll
scas
push
orb
out
add
dec
add
testb
ja
cmp
or
add
or
add
pop
jns
adc
jno
in
mov
adc
lret
stos
popa
mov
add
xor
mov
daa
cmp
xchg
cmp
add
pop
call
out
out
xchg
into
outsl
test
xor
cmp
ljmp
aas
adc
push
rorl
xchg
jb
sbb
sarb
mov
adc
xchg
sbbl
mov
lods
and
pusha
inc
mov
or
mov
popf
add
mov
xor
clc
add
adc
xchg
mov
int3
ljmp
insl
xchg
sub
out
xchg
mov
lods
mov
pop
fcmovb
jb
cmpsl
cmp
cltd
push
into
andl
and
bound
push
mov
aad
mov
mov
pushf
out
add
dec
daa
add
bound
mov
mov
sbb
mov
add
inc
adc
add
pop
hlt
xor
scas
nop
pop
inc
js
dec
aam
add
mov
mov
jle
mov
add
sbb
fsubr
out
dec
fists
testl
repz
loopne
fwait
repz
aaa
cli
arpl
icebp
aad
sbb
repz
iret
xor
divb
add
rcll
lds
hlt
pop
cld
std
adc
sub
popfw
mov
sub
mov
jns
add
add
mov
add
adc
add
sbb
rcrb
scas
pusha
lret
pop
dec
cltd
inc
or
add
xorb
in
mov
mov
fwait
add
or
add
push
xchg
jae
cld
add
mov
mov
add
cmpsb
push
movsl
inc
out
sub
ss
sbb
adc
bound
or
add
je
sbb
dec
jl
out
pop
jge
and
sbb
xor
sarb
sbb
and
les
and
lret
orl
add
fimuls
call
add
cmp
aad
enter
js
sbb
add
mov
add
outsb
add
lods
lock
mov
jnp
xchg
adc
inc
jbe
add
cmp
xor
or
mov
add
add
call
addl
jmp
dec
sbb
enter
cs
stc
test
push
add
mov
push
fidivs
add
and
or
ficompl
jne
scas
inc
mov
push
movsl
xor
in
xchg
mov
jl
dec
adc
add
mov
jg
dec
mov
repnz
leave
sarb
add
xor
add
push
and
popa
push
cmpsb
stos
adc
xchg
or
mov
adc
mov
test
adc
mov
loop
es
and
sub
inc
or
add
movsb
inc
sbb
jns
icebp
add
xor
imul
cmp
mov
add
das
adc
mov
test
add
inc
xor
and
stos
jp
xchg
loopne
cmpsl
add
adc
lcall
add
or
add
addb
mov
hlt
sub
mov
dec
pop
pop
and
jle
cld
jecxz
jb
jle
add
fcmovnu
fisubs
mov
jmp
jns
lods
mov
popa
test
jnp
pusha
xchg
add
push
adc
push
imul
sahf
cmpsb
push
in
ret
xchg
or
daa
rcrb
cmp
movsl
fwait
movb
clc
push
jne
sbb
mov
mov
add
push
mov
shl
mov
sbb
add
sbb
es
cmp
std
rorl
shrl
add
cmp
lahf
imul
fldl
xchg
flds
add
mov
mov
out
add
add
outsb
jbe
pavgb
xchg
popf
pusha
pop
stos
sub
dec
addl
xor
add
adc
jge
sbb
add
dec
frstor
data16
call
mov
jns
aam
neg
nop
add
add
mov
incb
pop
cmp
add
pushf
mov
jns
add
add
push
mov
pop
adc
outsl
fisubrl
and
lods
scas
rcl
add
xchg
lret
xor
out
mov
mov
jg,pn
push
add
jp
push
aam
out
sbb
das
icebp
shrb
push
add
popa
test
add
mov
mov
xorl
fld
fs
jne
cmp
sub
lcall
das
jmp
jnp
adcb
pushf
add
div
jmp
js
fs
shll
dec
jb
add
in
gs
cwtl
inc
mov
cltd
bound
pop
add
add
dec
clc
mov
out
jno
dec
xor
loope
jl
adc
into
inc
xor
xor
aas
pop
xor
iret
and
sub
pushf
sbb
icebp
adc
fldenv
out
lods
pop
xor
iret
je
mov
add
scas
lock
add
ss
mov
push
pop
scas
xor
push
test
cld
outsl
add
add
leave
or
int3
ja
add
lea
iret
sti
mov
mov
sub
out
fmull
pop
loopne
icebp
lods
mov
add
ss
imul
test
add
cmp
sub
push
inc
adc
xor
add
ja
stos
push
lcall
mov
jmp
call
adcb
and
out
out
sub
lahf
sub
rol
add
out
add
add
cld
inc
andl
js
insb
aad
sub
push
dec
push
pop
dec
push
adc
dec
and
add
add
sbb
lods
lea
mov
mov
aam
outsb
js
out
and
subl
and
test
xor
js
cltd
jl
ja
dec
and
call
pop
scas
mov
pop
pop
negb
lahf
mov
mov
add
add
ss
lahf
pop
push
cwtl
jmp
fs
sti
fwait
lcall
jmp
add
add
pop
imul
add
adc
push
iret
mov
loopne
mov
push
es
outsl
repnz
enter
movl
xor
js
fimull
dec
jmp
xchg
add
mov
or
clc
lods
jp
scas
std
imul
sti
jle
gs
data16
xlat
das
add
add
mov
add
neg
aaa
sbb
movsl
jle
adc
add
data16
jl
xor
pop
xchg
pop
adc
add
add
add
test
mov
popa
sub
jg
push
add
dec
mov
aaa
nop
je
scas
ret
hlt
outsl
pop
jbe
in
add
into
fldenv
mov
aad
xchg
jmp
movsl
jecxz
pop
into
xchg
jbe
jae
and
add
push
fs
pop
xlat
pop
jl
mov
jle
jl
mov
add
mov
cld
and
add
pushf
test
sub
ret
push
dec
fiadds
add
lods
dec
int3
add
bnd
jae
push
sbb
mov
push
hlt
push
pop
jle
iret
fwait
mov
mov
add
pop
addr16
loopne
xor
pop
inc
inc
add
out
lcall
pop
mov
into
adc
into
xor
jno
mov
movsl
repz
testb
inc
clc
pop
fidivrl
adc
or
loopne
cmp
lcall
insb
test
add
int3
imul
pop
ljmp
inc
jnp
pop
cmp
test
or
add
cmp
ror
add
jl
jp
into
sub
add
add
test
int3
fildl
add
ret
aas
sahf
sub
push
ja
fs
mov
push
pop
push
mov
sti
add
or
add
in
mov
add
xor
and
xor
inc
or
add
cmp
test
add
cmp
mov
inc
mov
ret
shlb
push
push
out
cmp
es
dec
push
pop
aad
imull
shrl
sbb
out
mov
leave
cwtl
sub
imul
pop
pop
ret
sub
mov
add
xchg
ja
mov
loop
cwtl
add
sbb
mov
inc
test
mov
pop
insb
ret
pop
mov
add
lahf
sub
mov
out
mov
negb
out
das
in
xor
jb
aas
adc
add
lds
add
adc
fiadds
add
add
testl
lret
daa
je
repnz
popf
fldl
std
out
fdiv
popf
dec
xor
add
push
sbb
mov
mov
out
leave
push
jae
cmp
cwtl
stc
les
add
and
add
mov
adc
sub
std
rclb
sbb
pop
mov
sbbl
add
mov
das
add
out
loopne
enter
jp
xchg
pushf
pusha
pop
or
lds
add
xchg
out
sub
sbb
std
jle
fldt
push
sbb
mov
fistpl
cld
cmp
bound
jnp
add
push
mov
idivb
pop
mov
mov
sub
mov
jne
inc
bound
add
out
loope
js
loopne
push
outsl
in
inc
js
and
adc
fsubrs
push
dec
xlat
cmp
std
ficoml
jbe
xor
adc
repnz
xor
jecxz
mov
lret
add
jmp
aad
dec
int3
hlt
add
ss
inc
adc
add
fcmovne
push
dec
xor
add
add
push
les
jae
and
xor
repz
jge
cmp
add
sti
xchg
sub
outsb
push
mov
mov
imul
inc
xchg
add
mov
push
sti
xchg
sahf
rcrl
pop
add
add
aad
fstpl
push
add
push
in
loopne
imul
clc
cmp
sub
aaa
insb
mov
stos
mov
mov
add
add
cwtl
mov
repnz
fadds
cmovno
sub
sahf
push
lret
mov
or
jno
and
mov
add
mov
mov
arpl
jnp
pusha
add
add
mov
push
xchg
jae
fwait
jno
cmpsl
push
cmpsl
fstpl
rorb
incb
push
popa
cs
pop
and
addr16
push
in
addb
mov
add
js
push
scas
lret
icebp
lcall
lods
test
add
cmp
je,pt
xor
add
sbb
mov
or
addb
stmxcsr
ljmp
imul
ljmp
push
lods
adc
movsb
lahf
jg
and
add
add
cmp
push
imul
ret
sbb
sbb
loope
adc
mov
add
mov
repz
mov
push
repnz
adc
aam
vdivpd
dec
sub
push
test
add
out
dec
dec
lea
dec
jbe
add
and
add
stos
popa
fs
pop
add
add
dec
sub
add
cmp
xor
jmp
add
add
cmpsl
shl
push
xor
jb
mov
add
sar
pop
out
stc
and
stc
and
mov
jne
aas
and
scas
sub
xor
les
add
pop
adc
inc
es
jg
jae
add
jecxz
sbb
hlt
push
roll
cmp
dec
faddl
jmp
rcll
or
add
clc
leave
dec
dec
add
and
ja
jo
sti
jl
jle
push
pop
insb
and
icebp
add
adc
inc
xchg
add
and
orl
sub
in
test
push
mov
paddsw
jae
mov
add
adc
add
shl
pop
mov
ljmp
leave
push
jmp
inc
mov
add
pusha
mov
in
in
or
add
lea
ret
add
push
add
jb
imul
add
imul
enter
jmp
dec
pusha
add
leave
jne
xor
sbb
arpl
push
movsl
sbb
addr16
or
out
insl
add
mov
add
pop
test
mov
xchg
sahf
popa
inc
pop
add
or
add
ret
cmpsl
cmpsb
movsl
mov
add
inc
sbb
jo
or
daa
js
sti
jle
xchg
movsl
shlb
jle
ja
mov
mov
and
push
sub
jl
add
and
xor
xchg
inc
or
daa
mov
mov
insl
sbb
ret
insl
aad
dec
inc
mov
mov
fisttps
push
push
out
and
and
test
arpl
mov
mov
add
adc
or
shll
mov
mov
loopne
in
cmc
nop
mov
cmp
icebp
mov
add
jb
pop
enter
scas
sbb
add
dec
flds
add
cld
jbe
xchg
into
dec
lahf
inc
cmpsl
fld
ficoms
xor
jl
mov
xchg
pop
inc
or
cmpsl
idivb
cwtl
sbb
mov
icebp
inc
fdivs
fbld
jne
cmp
pop
pop
xor
shll
add
cmp
mov
popf
data16
hlt
add
scas
pop
or
adc
xchg
add
xchg
cli
or
pop
shrb
into
inc
push
jmp
stos
fildll
mov
add
jmp
dec
mov
cld
mov
repz
xchg
lods
pop
ds
decb
inc
push
clc
loopne
outsl
lds
push
xchg
xchg
ficoml
push
xor
mov
cmp
or
add
lcall
jmp
lahf
arpl
or
jo
ljmp
add
loope
shrl
scas
fistl
addl
movsb
test
inc
stc
add
stos
scas
lret
mov
int
xacquire
push
iret
imul
movl
push
jnp
out
inc
movsb
add
ret
popf
es
movsb
enter
or
sbb
sbb
cmp
add
add
mov
cmp
lret
xchg
pop
in
mov
cmc
dec
adc
insb
mov
popa
cmp
std
xchg
or
sbb
add
jnp
sub
mov
test
add
pop
push
repnz
push
iret
pop
inc
push
and
sti
jg
sarb
push
add
cltd
pushf
pop
mov
outsb
xchg
dec
mov
add
add
data16
lods
inc
scas
rcl
xchg
cmp
xchg
ss
dec
jo
mov
loopne
add
xor
add
nop
adc
imul
adc
or
add
aas
push
rclb
xorl
subl
mov
mov
inc
add
pop
inc
mov
add
add
insb
mov
leave
dec
mov
and
pop
jp
bts
stos
sysexit
cmpsl
scas
stos
inc
lods
add
fs
jecxz
arpl
notb
cmc
jb
xchg
pop
and
cwtl
add
mov
lret
add
push
or
mov
fwait
push
xor
add
test
add
je
stos
shrb
push
or
add
pop
leave
dec
in
roll
dec
jle
add
in
sahf
pop
sub
je
mov
add
outsb
in
call
add
lret
leave
inc
sub
dec
inc
and
movl
jne
sbb
fdivl
rcr
mov
add
lret
xchg
fidivl
mov
sub
ss
ficomps
and
fildl
add
mov
ljmp
loope
xor
dec
dec
xchg
and
mov
add
or
outsb
add
pop
jno
outsl
mov
pusha
mov
iret
iret
jo
gs
pop
mov
jnp
sbb
repz
sub
dec
stos
ds
push
inc
inc
and
scas
mov
add
pop
in
inc
add
lcall
mov
adc
outsl
repz
notb
mov
stc
jno
stos
mov
push
xchg
sub
adcl
popf
sbb
mov
add
sub
jmp
sbb
cld
sbb
loopne
add
xor
jg
adc
add
add
je
leave
sub
mov
adcl
or
fcomip
cmp
xchg
nop
fneni(8087
mov
cmp
lods
cmpsl
sbb
insb
int3
out
add
lret
call
mov
jo
movsb
cli
in
sti
push
imulb
stos
daa
call
add
adc
rcrl
insl
mov
pop
mov
jmp
scas
xlat
mov
push
ret
or
popa
add
cmpsb
outsb
xlat
cmp
js
cmp
add
ds
loop
repnz
dec
rolb
shrl
cli
mov
mov
in
out
cmpsb
aas
push
mov
js
cmp
mov
sbb
mov
xchg
jmp
xchg
stos
dec
adc
adc
arpl
pop
fs
ret
ds
jge
andb
add
jae
sbb
in
mov
test
add
cmpsb
out
cmp
pop
dec
mov
add
or
out
arpl
or
add
pusha
mov
sbb
adc
fildll
mov
hlt
mov
les
add
jg
shlb
fisttps
cs
xor
sbb
add
out
imull
gs
cwtl
mov
stos
imul
jb
int3
xchg
add
popf
pop
test
incl
add
xor
leave
sbb
or
ret
mov
daa
mov
cmp
test
xchg
xchg
cmp
inc
push
ja
sbbl
out
out
test
lahf
jmp
mov
add
mov
mov
xchg
pushf
ffree
mov
add
sub
arpl
mov
icebp
cmc
ficomps
add
loop
add
lcall
imul
lret
add
xchg
je
loope
push
movsl
xor
mov
dec
add
cmp
ja
bound
insl
inc
mov
add
mov
repnz
ret
aad
arpl
in
test
stc
popa
xchg
jecxz
mov
fistpll
imul
js
cmp
add
arpl
test
add
call
sub
out
cmovae
push
inc
js
pusha
cmp
dec
cmp
push
sub
inc
fadds
add
fists
push
fstpl
gs
jmp
mov
rcrb
dec
test
cld
sbb
enter
or
add
pushf
inc
fs
or
into
xlat
push
push
pop
enter
test
jg
fsubrs
sbb
out
je
pmaxub
fcomip
cmp
push
xchg
sarl
inc
xchg
xchg
inc
aaa
jp
es
add
jno
lods
insl
xor
inc
rolb
aaa
ret
loop
clc
xchg
scas
cmpsb
mov
or
add
lods
lods
out
adc
cld
popf
mov
xchg
pop
mov
add
jle
shr
jno
jbe
add
add
icebp
xchg
mov
jl
scas
fs
dec
jnp
and
sbb
add
inc
jo
pop
mov
imul
shlb
repnz
sahf
imul
pop
lds
add
jecxz
push
mov
xor
imul
jmp
repnz
push
mov
stos
mov
cmpsl
lods
int
cmp
mov
pop
mov
xchg
or
add
jo
cmp
scas
fldenv
std
sbb
pop
gs
jp
sub
inc
jno
test
add
push
mov
add
cli
scas
push
push
gs
add
or
stos
mov
sahf
mov
dec
add
dec
sar
adc
add
js
ds
orb
andb
mov
cmpsl
shrb
dec
push
repnz
mov
sub
lcall
push
pop
adc
lea
jne
scas
mov
sub
mov
nop
xor
in
mov
push
adcb
pop
pop
mov
stos
test
push
shll
cmp
ljmp
xor
pop
inc
nop
add
stos
repnz
insb
jmp
adc
mov
add
xchg
xor
popf
push
rcrb
add
mov
gs
add
inc
std
add
gs
gs
cmp
bound
jmp
jno
add
dec
js
dec
insl
mov
push
mov
add
inc
jo
add
pop
loop
rcr
dec
sbbl
push
out
out
add
insl
pusha
xor
outsb
jge
mov
int
jne
arpl
lock
add
mov
aam
inc
mov
sub
add
jl
andb
je
pop
pop
imul
fldl2t
outsb
cli
or
add
testl
xchg
aaa
xor
in
mov
loopne
aas
scas
push
insl
mov
xchg
loope
or
add
cltd
mov
stc
mov
adc
aad
mov
jne
jmp
pop
rcr
xor
jno
dec
mov
mov
ss
int
sbb
add
repnz
mov
daa
stos
imull
xchg
loope
push
sub
mov
jns
add
jge
lods
std
cmc
and
jecxz
cs
sub
mov
add
push
sub
inc
xchg
sub
fcompl
lods
cmp
jbe
outsb
dec
pushf
add
pushf
into
adc
add
add
or
add
xor
aaa
add
dec
mov
add
push
stc
mov
mov
mov
jne
lret
xor
repnz
arpl
xchg
and
popf
and
mov
sub
aaa
ljmp
add
push
lcall
loope
adc
dec
pop
push
xor
mov
inc
movsl
lods
cmp
xchg
push
sub
xchg
clc
xchg
int
data16
repnz
roll
sbbb
add
dec
sarb
sbb
mov
mov
mov
jg
mov
lds
pop
repz
pop
jl
int
dec
outsb
add
xchg
dec
push
out
mov
icebp
cltd
clc
arpl
fwait
xchg
adc
cmp
sarb
sarb
and
rclb
jmp
and
mov
das
push
push
jl
out
les
mov
xchg
push
daa
mov
add
in
outsb
cwtl
jmp
add
arpl
test
mov
add
mov
pushf
jno
sub
test
sbb
rolb
add
push
sub
xchg
int3
sldt
lock
sub
add
fistps
push
inc
iret
add
fmuls
mov
add
jmp
add
dec
lock
push
ds
pop
xchg
insl
das
repnz
arpl
push
das
push
int
mov
bnd
or
add
test
test
inc
adc
jae
jl
push
push
xor
push
push
xor
test
dec
insl
out
hlt
push
adc
add
icebp
andb
out
inc
adcb
repz
xchg
mov
adc
stos
inc
clc
mov
dec
and
add
inc
test
jno
or
add
repnz
out
add
mov
clc
sbb
pop
imul
push
cmp
lods
pop
jns
into
sub
pushf
add
add
mov
mov
cmp
ror
add
out
into
in
js
movsb
fwait
cmpsl
and
add
xorb
adc
packsswb
aaa
lods
or
add
xor
dec
xchg
inc
ret
jecxz
mov
imul
cmp
mov
ret
add
enter
lods
push
stc
push
or
mov
add
xor
mov
pushf
pop
jmp
imul
out
inc
test
mov
add
pushf
test
stos
sub
inc
adc
add
inc
pop
test
add
xchg
cmc
dec
push
dec
ljmp
and
in
mov
add
icebp
cs
xchg
mov
inc
jmp
jg
sub
mov
mov
cltd
out
mov
add
jb
dec
pop
jge
loop
js
loopne
add
add
int3
imul
pop
mov
jns
xor
add
and
push
repz
add
xchg
ror
mov
add
adc
shlb
add
sub
adc
cmp
ret
mov
cmp
mov
lock
inc
faddl
add
sub
into
and
cltd
out
shlb
xchg
and
fs
cmpb
xor
movl
jns
sbb
cld
push
push
and
loopne
iret
lret
mov
add
add
loope
jmp
add
inc
in
ss
cld
fisubrl
mov
clc
add
dec
fstl
fdivl
icebp
push
add
add
in
jp
add
inc
xor
fnstsw
dec
das
add
mov
and
les
add
mov
decb
jecxz
add
hlt
add
cld
add
add
jbe
mov
shlb
or
add
out
rorb
add
fsubrs
and
sahf
stos
inc
and
add
push
fisubl
jo
cltd
inc
clc
imul
add
jae
fs
adc
pop
push
push
xchg
fistl
out
pop
fsubr
and
rolb
add
dec
or
add
cli
dec
mov
add
insl
fnsave
and
repz
enter
sahf
js
dec
filds
add
xor
xor
popa
out
out
jbe
or
add
mov
add
jb
insl
add
ljmp
nop
xchg
sbb
xchg
or
add
out
or
in
and
clc
add
mov
add
pop
sarb
jmp
xchg
jns
mov
inc
add
inc
out
ret
movsb
adc
rolb
add
push
push
aad
sti
jae
lods
stos
repz
out
mov
int
jge
add
add
fmulp
sub
adc
rolb
add
add
movsl
pop
out
fiadds
adc
adc
inc
push
or
inc
add
mov
push
mov
enter
xchg
jns
dec
sbb
add
je
inc
add
mov
add
rcrb
or
add
ja
xchg
push
xchg
andb
adc
mov
xchg
jecxz
hlt
leave
inc
pop
mov
das
aad
and
push
pop
enter
lcall
push
ret
adc
mov
push
outsl
popf
jmp
loop
xchg
rcrb
pop
fdivs
sub
add
les
add
jle
scas
dec
pop
icebp
jp
stc
fld
mov
sbb
add
pop
cltd
xor
add
lahf
lcall
jae
pop
mov
xchg
cld
cmp
fimuls
jns
loop
jecxz
mov
in
cmpsl
popf
xor
lret
in
jmp
mov
loop
push
and
sub
and
and
cltd
or
mov
ss
jae
adc
push
mov
das
filds
add
divb
push
in
clc
and
jecxz
jne
dec
out
add
les
add
jecxz
in
js
cmc
lock
adc
in
test
add
icebp
add
or
add
mov
pop
xlat
xchg
js
ret
xor
sbb
xchg
mov
imul
int3
mov
add
add
push
pop
fstl
pop
pop
push
xor
add
test
push
xchg
jp
aad
sub
dec
or
add
mov
push
add
mov
and
mov
add
sub
add
dec
dec
testl
or
or
iret
fsubs
mov
sbb
imul
sbb
fiaddl
add
repz
pop
cmp
mov
cs
push
jae
fwait
sbb
xchg
sbb
fadd
icebp
add
cmp
sub
mov
mov
and
lods
pop
mov
add
cli
nop
insb
ja
in
aas
pop
push
out
add
add
fwait
lret
add
jp
pop
stc
mov
mov
das
jnp
jl
inc
roll
add
cmp
add
add
add
push
dec
hlt
loope
call
sbb
add
loope
into
dec
pop
add
inc
ror
add
int
push
fldl
imul
adc
add
add
add
sbb
xchg
filds
add
loop
out
or
add
rolb
stc
or
add
jb
adc
add
loope
mov
mov
into
loopne
inc
push
add
xchg
ja
dec
cwtl
add
ror
add
fstp
mov
popa
sarl
enter
mov
sarl
repnz
fnstsw
xor
mov
aad
out
push
and
jns
push
add
in
ret
jo
pop
into
jo
je
sar
add
mov
lret
add
adc
out
xchg
imul
in
sbb
xchg
and
ljmp
pop
inc
iret
mov
xor
sbb
out
mov
scas
in
push
loope
loope
leave
sbb
sub
add
iret
gs
sahf
dec
divb
mov
mov
cmp
cli
test
mov
pop
clc
or
leave
and
jecxz
cmc
pop
adc
sub
loop
into
or
add
out
adc
dec
pushf
stc
push
mov
outsb
push
and
jmp
cmp
push
ljmp
insl
or
rorl
push
dec
ds
or
movsl
dec
aas
fwait
cmc
xor
or
cld
loop
lds
add
add
js
mov
inc
cmp
lds
jbe
xlat
fsts
xchg
mov
inc
xor
sbb
add
inc
enter
cmp
and
add
repnz
stc
push
or
add
xor
mov
lret
mov
push
or
jne
and
add
les
add
push
dec
cmpsl
xchg
xor
add
xchg
repz
jle
sbbl
jo
jne
jmp
push
stos
jecxz
sbb
push
outsb
inc
add
add
sbb
sti
aaa
test
add
or
cltd
cmpsb
out
cld
sub
and
ja
add
jb
cmp
das
cmc
sarl
imul
sub
popf
jnp
repnz
push
cmp
cli
dec
push
xchg
xchg
shlb
std
leave
mov
add
cmp
add
je
lea
jb
push
push
shlb
add
mov
add
std
add
lahf
dec
out
add
or
xor
stos
dec
cmp
jl
xchg
out
incl
add
add
mov
fcmove
mov
sbb
jle
loop
inc
xchg
mov
xchg
sbbl
mulb
clc
mov
cmp
test
add
adc
js
pop
aam
cmpsb
ret
cmpsl
test
ret
and
aas
clc
pop
jle
cld
dec
roll
js
mov
pop
add
inc
mov
lret
mov
insl
or
addb
adc
popf
dec
movsl
add
setnp
mov
dec
push
xchg
imul
or
add
push
ja
loope
cmpb
rorl
add
orl
dec
movsb
add
fs
int
sub
movsl
inc
xor
mov
stos
movsl
fimuls
jnp
ficompl
pop
in
sub
mov
imulb
pushf
arpl
pop
xchg
ret
fiaddl
insl
xor
stos
popa
push
mov
fldcw
sysenter
push
test
sahf
mov
fwait
xor
mov
cltd
or
dec
ljmp
cmp
xchg
shlb
inc
mov
adc
cltd
or
pop
sarl
xchg
cltd
sub
faddl
add
ss
sbb
fwait
je
sub
push
jg
xor
sub
adc
enter
ret
or
add
aam
xchg
mov
adc
jg
add
mov
jno
xor
bound
xchg
repnz
lods
cmp
mov
xor
in
jo
les
add
mov
imulb
push
popa
cmp
cs
les
add
add
push
ja
cmp
adc
xchg
mov
inc
ja
mov
sub
stos
inc
outsl
add
dec
popa
and
sahf
fiadds
js
mov
into
out
xorb
loop
xor
aaa
cmp
mov
lds
add
lds
xchg
pop
adc
pop
inc
loope
dec
fistps
je
rolb
add
repz
mov
dec
ret
add
stos
dec
fldl
add
hlt
and
in
test
add
add
mov
popf
outsb
hlt
mov
daa
sahf
pop
cmpsb
in
jbe
dec
sbb
repnz
xchg
lods
add
cwtl
adc
sub
hlt
ret
cmpsb
mov
add
out
jae
nop
add
add
cmp
icebp
push
rcrb
jge
psllq
mov
pop
lret
mov
add
inc
iret
cld
inc
aas
add
icebp
dec
push
fsubl
xor
add
fwait
jmp
add
pop
add
sbb
lds
add
sub
sub
mov
daa
sub
sti
pusha
sbb
sbb
add
pop
lock
lret
test
xor
add
inc
jno
add
out
mov
mov
xor
sahf
repnz
xchg
pop
mov
mov
add
and
sbbl
adc
mov
pop
mov
outsb
pop
arpl
test
mov
stos
xor
mov
ret
add
add
mov
inc
into
loop
dec
inc
add
push
cwtl
mov
jmp
add
cmpb
scas
aas
xorl
mov
ss
or
cli
rorb
inc
jae
add
cmpsl
cmpsl
imul
iret
mov
out
cmp
jecxz
mov
pop
test
mov
mov
lods
fstps
mov
sub
aad
je
lahf
push
mull
stc
sti
mov
arpl
add
adc
push
movsb
add
inc
cmp
loop
dec
movl
stc
icebp
and
out
mov
mov
xchg
mov
dec
mov
jno
dec
outsb
or
push
fldt
and
jnp
jg
in
add
push
sbb
data16
sbb
loope
adc
jle
outsl
xchg
xor
test
add
shlb
in
jecxz
or
add
fbld
sub
add
push
add
pop
or
add
ds
dec
mov
inc
adc
inc
mov
mov
imul
scas
jmp
jne
xchg
stos
xor
je
test
add
cmpl
add
jmp
push
and
sub
in
lds
test
mov
int3
dec
add
mov
sub
aad
add
mov
adcb
pop
or
add
pop
push
push
adc
dec
mov
mov
push
fisttpll
xor
pop
add
stc
mov
add
mov
leave
roll
push
push
ud0
sbb
sub
aaa
and
cmc
xchg
loop
xor
add
clc
adcl
aam
and
sbb
jmp
mov
xor
add
scas
pop
in
call
lods
aad
pusha
arpl
xor
add
dec
pop
push
mov
dec
pop
jl
mov
int
cs
stc
stos
push
outsl
lock
lock
fiadds
add
mov
sbb
aad
cmp
add
iret
pop
imul
out
out
aaa
mov
add
jo
lcall
mov
add
dec
or
add
fs
std
lahf
hlt
jmp
fs
imull
push
lods
and
ficompl
add
iret
es
mov
or
fdivrl
jle
jle
dec
add
jle
rol
pop
mov
jae
xchg
jns
xor
lretw
repz
jns
leave
mov
jae
fildl
add
mov
sbb
jae
getsec
mov
mov
sub
jp
push
mov
add
lcall
inc
add
cmp
xchg
mov
cmpsb
or
scas
insb
loopne
mov
add
in
pmulhuw
sub
adc
or
push
shl
fst
add
inc
inc
jp
pop
dec
or
add
cmp
push
add
inc
jg
add
mov
xor
add
add
cmp
push
test
ret
out
lods
lcall
out
jecxz
fisttps
mov
inc
add
ror
add
add
adc
imull
aad
lcall
jg
pop
int3
add
xor
inc
loop
lahf
xor
push
xchg
push
adc
aaa
jne
fwait
xchg
push
rorb
bound
pusha
inc
notl
inc
xchg
add
bound
out
jbe
lret
lock
sub
sub
and
fistpl
cmc
aad
xchg
sub
sub
dec
ljmp
fistps
jb
xchg
adc
nop
pop
jno
ret
push
inc
add
xor
ret
fwait
ljmp
add
add
push
inc
and
pop
cs
iret
in
mov
add
cmp
mov
add
or
add
loopne
jnp
adc
sub
mov
add
aaa
std
es
cld
or
add
shll
or
add
negb
sub
add
add
mov
inc
pushf
mov
out
add
pop
cmp
fsts
lret
push
rol
add
bound
or
add
push
sub
imul
mov
iret
add
in
out
rol
out
insb
push
add
pop
add
mov
pop
fdecstp
je
orl
lds
repnz
icebp
xor
add
add
mov
xor
xchg
cli
push
jne
pop
xor
mov
or
add
pop
jl
in
ss
inc
mov
pushf
in
mov
inc
jp
push
and
xchg
push
mov
push
loope
lea
xor
loopne
mov
into
mov
mov
pop
xchg
push
notb
pusha
mov
pop
repnz
insl
xor
ljmp
jmp
dec
jnp
test
dec
movsl
add
mov
fwait
out
push
jl
pop
cli
arpl
adc
mov
add
ret
or
add
cltd
daa
mov
incb
lret
jl
cltd
xor
mov
aam
pop
enter
popf
push
jmp
and
enter
movsb
enter
push
cli
dec
mov
or
lea
rcr
push
adc
mov
adc
stc
pop
push
cmp
pop
in
mov
pop
ja
cld
mov
add
aas
pusha
imul
add
add
movsb
mov
jle
mov
add
add
add
push
imul
sub
adc
iret
add
sarl
push
in
sub
mov
dec
enter
xchg
test
js
xchg
dec
pushf
dec
aas
add
or
add
mov
shll
int
repz
lahf
or
add
add
fdecstp
adcb
push
push
push
icebp
divl
mov
in
adcb
and
sub
inc
inc
mov
cmpsb
or
add
dec
mov
shll
insb
jnp
clc
mov
shrd
xchg
mov
jnp
lds
sub
add
aaa
call
mov
push
jmp
push
push
lcall
pop
and
add
jno
push
push
or
pop
vmread
mov
js
pop
mov
xor
enter
pop
xchg
test
jmp
or
cmpsb
hlt
jge
mov
dec
inc
dec
xor
fldl
sbb
add
adc
sbb
and
add
ret
cmpsb
xchg
cmpl
popa
or
jmp
push
outsb
mov
adc
xchg
sub
daa
xor
fiadds
add
stos
xchg
insb
call
bound
add
mov
add
add
rol
mov
add
pop
sub
std
add
mov
sub
shl
stc
out
jno
push
lret
mov
inc
sti
add
fcmovnu
fcomps
bound
add
sbb
mov
sbb
jno
fisttpll
data16
in
add
add
mov
sbb
pop
insl
out
outsl
jle
push
pop
mov
adc
add
push
push
jne
or
repz
popf
fldt
jmp
inc
cmc
in
push
pop
pop
sbb
mov
xchg
jecxz
ficompl
push
and
push
mov
xchg
add
outsb
cltd
bound
cmp
and
dec
in
pop
jg
sahf
in
xchg
aam
add
inc
into
add
jp
pop
adc
arpl
cmpsb
cmc
fsubrl
push
stc
out
or
add
xchg
cli
mov
jnp
movsl
nop
mov
xchg
lds
mov
push
imul
push
movsb
stos
ficompl
push
adc
xor
mov
add
dec
lret
scas
adc
mov
add
sbb
push
leave
adc
pop
jmp
xor
sbb
xchg
outsb
add
mov
mov
add
pop
std
sub
inc
test
aad
das
stos
jns
insl
push
addr16
in
lcall
pop
inc
int3
add
mov
push
xchg
adc
xchg
int
das
lock
cmp
mov
roll
mov
add
dec
outsb
add
mov
add
stos
push
fmull
dec
jb
pop
std
adc
or
les
add
fwait
repnz
and
push
inc
push
repz
test
arpl
fistl
xchg
push
orl
fadd
jne
adc
aam
dec
cmp
aas
mull
dec
clc
cmpb
sub
jb
add
jg
aam
sbb
ffree
and
mov
lods
repz
call
fisubl
inc
sbb
cmp
sub
outsb
rorb
add
add
in
push
cmp
inc
mov
fldenv
push
into
mov
dec
push
xchg
dec
ja
push
mov
inc
mov
mov
inc
les
test
out
js
icebp
add
stos
add
add
cltd
shrb
add
adc
add
xchg
mov
bound
mov
stc
lods
dec
sbb
mov
imul
xor
cmp
ret
sbb
add
icebp
push
pushl
add
dec
out
add
out
dec
mov
jp
cltd
xchg
push
and
jg
mov
add
loope
fcmovu
adc
xchg
adc
add
out
in
add
ja
cmpsb
cltd
mov
add
into
ss
pinsrw
mov
inc
push
add
int3
dec
add
lods
cmp
dec
lcall
adc
xor
fldl
jno
add
nop
fcoms
add
mov
mov
and
movsl
cmpsl
inc
xor
cwtl
mov
scas
roll
sub
xchg
inc
mov
ret
xchg
jnp
test
add
xor
add
cmpsb
mov
xor
jno
imul
frstor
leave
pop
outsl
adc
add
int
pop
dec
jns
xor
cmp
inc
ret
inc
jmp
add
inc
add
imul
add
lahf
inc
mov
lcall
in
loopne
lods
sarl
repz
jge
mov
add
pusha
sbb
sub
daa
ljmp
add
add
jl
int3
jecxz
add
ja
mov
ret
mov
clc
es
imul
repnz
jbe
scas
out
shlb
pop
in
in
mov
xor
pop
dec
movsl
and
or
addr16
pop
mov
decb
in
xor
into
nop
cld
cmpl
cmp
sahf
dec
jmp
loopne
roll
das
dec
imul
test
add
jnp
xlat
xchg
xor
mov
inc
ds
mov
add
add
fisubl
fidivrs
mov
insl
sub
adc
mov
mov
add
popf
xchg
cli
cmp
push
mov
add
out
fstl
xor
cwtl
push
addl
jle
push
in
nop
dec
leave
outsb
xchg
dec
dec
add
dec
or
mov
sarb
xor
js
inc
icebp
xchg
add
push
xchg
mov
add
ret
or
aam
mov
mov
inc
dec
add
rcll
lret
shlb
or
xchg
lcall
push
fadd
push
sub
mov
into
sub
fcomps
pop
add
xlat
add
mov
add
xchg
xchg
pop
or
mov
or
cmp
rolb
cmp
mov
and
add
mov
add
push
xchg
insl
popf
mov
aad
das
test
sub
into
lods
dec
aam
add
pop
sbb
sub
jmp
push
sub
cmp
jg
out
add
jbe
push
xchg
or
mov
xchg
mov
add
mov
pop
es
sub
loopne
test
sbb
dec
xchg
add
ficoml
cmp
sbb
jmp
mov
cmp
adc
mov
adc
xor
pop
pusha
add
add
pop
cmpsl
xchg
jmp
out
out
xchg
daa
retw
sub
icebp
mov
stos
sub
imull
mov
cli
add
or
out
inc
xchg
in
push
and
mov
mov
adc
mov
fsts
jmp
sub
fildl
add
imul
dec
jns
and
int3
jb
add
scas
js
sub
adc
sbb
icebp
imul
aam
pop
lret
roll
or
add
ret
inc
addb
mov
cli
push
aaa
pop
leave
inc
outsb
test
cmp
cs
push
cmp
cmpl
or
mov
rolb
stos
test
push
dec
leave
add
pop
loopne
jne
xor
push
mov
sbb
xchg
sbbb
add
sbb
push
divb
mov
mov
repnz
add
inc
push
or
mov
js
add
add
sub
push
or
add
jl
dec
and
sbb
sub
popf
xor
test
in
insl
xor
std
xstore-rng
cmpsl
les
add
mov
sub
sbb
faddl
add
sbb
out
add
fdivr
mov
mov
cwtl
pop
lahf
inc
test
adc
stc
jne
xor
or
add
addb
ss
push
out
pop
jmp
push
xchg
ret
aas
mov
add
stc
pushf
fistps
pop
cmp
xlat
ljmp
mov
dec
lea
enter
mov
enter
inc
movsl
cld
jle
int
cwtl
or
add
inc
mov
cmp
add
mov
aaa
dec
jnp
adc
adc
ds
add
js
bound
sbb
mov
mov
insl
scas
jp
sbb
push
nop
test
add
das
inc
pushf
inc
mov
cli
int
mov
cltd
xchg
repz
ds
outsl
outsb
icebp
clc
fwait
inc
leave
cmp
lock
mov
mul
loope,pt
sub
ja
jne
inc
dec
rolb
xchg
int
xor
jb
leave
test
lea
add
add
pop
test
dec
mov
add
loop
inc
push
add
mov
shl
rorb
xor
insb
sub
pop
std
scas
and
xor
mov
adc
fucomi
scas
insb
lods
out
push
lcall
shl
aas
mov
sub
add
les
add
jle
addl
or
add
in
lea
mov
add
sbb
xor
call
pop
loope
int3
sbb
les
add
mov
cld
movsb
mov
pop
rclb
icebp
jl
lds
dec
cmp
add
inc
add
add
inc
movsb
add
push
shrb
sub
mov
mov
xchg
xor
mov
dec
arpl
add
outsl
shl
ret
dec
iret
ficoml
push
rcll
xlat
call
add
sub
or
fiadds
add
cs
cltd
mov
add
xchg
icebp
dec
cmp
mov
in
std
sub
inc
pop
add
jb
push
or
jp
insb
iret
mov
sar
pop
pop
mov
aaa
jp
dec
orl
aad
adc
and
out
out
rolb
add
xchg
cmc
and
or
pushf
sub
shr
repz
stc
lock
xchg
push
movb
adc
fwait
pop
pusha
cmp
loopne
in
dec
add
adc
rol
jmp
mov
test
arpl
add
jg
dec
jg
xor
sub
aam
outsb
inc
or
add
flds
scas
add
mov
dec
les
repnz
add
jbe
or
ret
xor
dec
pop
mov
daa
es
dec
add
jmp
std
mov
add
sbb
or
xchg
dec
pusha
jecxz
pop
mov
add
out
mov
add
add
outsb
je
aaa
cli
je
sbb
ljmp
adc
stos
das
mov
repz
push
mov
push
mov
js
and
fidivs
stos
sti
loop
das
repnz
lret
outsb
test
xor
sbb
out
clc
addr16
pop
mov
cltd
aam
les
popf
push
jle
mulb
push
sbb
loope
pushf
not
rcl
add
ljmp
jl
inc
add
add
push
rorl
push
xor
adc
and
bound
sub
fucomi
xchg
pop
ss
mov
mov
mul
cmpsb
in
pop
xchg
in
add
dec
cmp
mov
pop
mov
jecxz
pop
add
push
out
xchg
pop
das
dec
fiadds
add
int3
sahf
add
pop
lret
add
fbstp
push
into
mov
test
add
dec
sub
mov
add
cmp
lcall
pop
in
ja
popa
add
int3
filds
add
inc
ret
mov
jb
add
enter
out
in
je
popa
pop
cs
sbb
and
sbb
or
add
mov
add
imul
cmpsl
mov
pop
add
add
outsb
push
loope
jbe
push
push
jl
lea
notl
cwtl
lret
popf
mov
mov
push
out
sub
jg
cmp
dec
in
cmc
mov
jbe
mov
popf
dec
xchg
into
jo
sbb
hlt
cmp
insl
xchg
shlb
adc
jns
lahf
subl
add
push
xor
inc
lods
rolb
lahf
push
pop
adc
sbbl
sub
mov
sbb
add
mov
insb
aas
mov
lcall
sbb
out
xchg
and
dec
std
add
ret
mov
fimuls
jl
add
mov
fmul
mov
add
dec
ret
add
shrb
or
add
pop
in
repnz
jae
loop
adc
jg
cmpl
cli
rcrl
dec
nopl
pop
xchg
jecxz
sub
hlt
mov
test
sub
push
movsb
jle
mov
movsl
mov
sbb
pop
ret
je
sub
lahf
dec
jo
out
outsb
xchg
iret
mov
arpl
aad
inc
push
dec
pushf
add
xchg
dec
mov
sub
xchg
mov
add
inc
add
add
inc
mov
jle
sbb
incl
sbb
xchg
loope
mov
enter
dec
mov
es
dec
xchg
cmc
push
mov
lea
jecxz
mov
pushf
bnd
mov
inc
in
add
mov
or
mov
cs
popa
xorl
mov
lds
hlt
mov
popa
add
addr16
mov
mov
cmp
outsl
aaa
outsb
lock
cmpl
sub
and
rolb
aas
in
or
inc
out
ljmp
repz
xchg
dec
ja
lret
inc
jmp
and
xchg
rcl
sarb
add
popa
cmp
pop
rorl
add
in
xor
sbb
lock
lar
stos
je
bound
add
pop
mov
imul
inc
mov
add
pop
lcall
lods
addr16
inc
arpl
xchg
mov
add
dec
jb
fbstp
iret
cs
and
daa
fadds
add
add
jecxz
scas
lret
jae
xchg
fiadds
mov
cmc
add
cmpsb
pop
push
jmp
add
jge
or
add
out
lret
sahf
leave
test
add
xor
or
xchg
imul
dec
and
sbb
rolb
add
aas
inc
rcrb
test
jns
push
scas
and
out
in
mov
push
and
push
sub
jl
push
scas
cmp
insb
scas
movb
add
enter
fsubrl
jg
imul
in
enter
or
mov
jo
nop
add
and
mov
movsb
dec
imul
adc
xor
sub
loope
add
mov
inc
rol
add
into
mov
add
je
aam
or
add
in
add
cmp
add
sbb
aad
inc
mov
mov
mov
mov
inc
mov
push
add
int
mov
cli
js
hlt
jbe
pop
cltd
lock
lea
add
mov
adc
inc
dec
add
add
adc
popl
aaa
and
push
cmp
adc
or
add
testb
cmp
add
add
adc
mov
jnp
push
jo
lcall
or
add
xchg
ja
aam
cld
popa
pop
aad
ja
sbb
jne
push
jmp
jns
pop
jg
rcl
int
insb
rcrb
test
outsb
addl
enter
fsubl
cmc
adc
mov
popa
dec
push
dec
fs
lods
cmp
fsubr
cwtl
jge
and
add
lock
andb
mov
mov
add
sub
ds
mov
dec
add
sbb
pop
sbb
aad
aas
and
cmp
mov
adc
add
ss
fbstp
sbb
jno
xchg
repz
iret
add
dec
repnz
daa
or
out
push
adc
sbb
lea
add
in
jne
insb
or
mov
lods
lock
push
ret
jle
add
rol
outsb
cmp
int
cmpsl
lret
outsl
mov
dec
pushf
add
sbb
add
xchg
push
xchg
xchg
pusha
xchg
pop
dec
xchg
int
push
xor
or
test
or
add
lock
out
scas
pop
stos
push
push
ss
pop
mov
add
sti
mov
repnz
test
pop
push
add
dec
add
dec
sub
cmp
out
aam
push
test
sbb
add
movb
mov
cmp
add
mov
fildll
push
xor
jne
cld
dec
fadds
mov
aam
xorl
add
xor
add
and
mov
and
jecxz
shlb
ret
fbld
sbb
xor
sbb
push
nop
cmp
inc
push
push
into
cmp
mov
stos
jge
lcall
xor
cmpsl
imul
add
and
cmpsl
cmc
cmp
xor
adcl
add
inc
mov
clc
lret
cmc
push
sbb
dec
mov
add
fdivs
aas
stos
les
add
push
out
movsl
lods
pushf
lock
out
daa
sarl
jl
adc
inc
js
mov
rcpps
flds
add
mov
shlb
cs
dec
and
jb
mov
mov
pop
mov
xchg
addr16
push
les
add
stc
push
test
cmp
mov
les
es
mov
cmp
and
out
jmp
add
jl
test
pop
out
fisubrs
test
lds
call
mov
cli
pop
xchg
mov
inc
sub
lock
andl
adc
sbb
pop
xchg
cmp
adc
add
pop
mov
add
cmc
xchg
sbb
sbb
lods
lret
mov
add
mov
sbb
push
fnstenv
pop
mov
pop
addr16
popf
fcompl
repnz
and
negb
call
xchg
fmuls
xor
loop
pop
or
repz
adc
and
fists
pop
inc
push
and
xchg
stos
outsb
ja
sbb
cmc
notb
cwtl
sub
push
push
pop
sub
lds
das
ret
jecxz
xor
add
inc
add
add
sbb
xor
lock
add
mov
add
jl
test
mov
int3
or
add
cwtl
fdivrl
data16
das
inc
push
and
jecxz
adc
dec
js
icebp
mov
mov
or
dec
mov
lcall
lea
int
jb
or
add
mov
jl
lret
push
jle
pop
iret
jle
jle
or
cltd
call
cs
fbld
add
aam
insb
cmp
jecxz
or
add
xor
das
gs
ja
pop
add
jl
cmp
add
or
xchg
jmp
cmp
xor
push
pop
inc
mov
add
ljmp
lock
push
and
adcb
dec
push
add
push
in
negb
push
or
or
out
lds
inc
outsb
lcall
jle
gs
fs
mov
pop
sub
mov
push
mov
push
lret
sldt
sub
xor
int3
daa
add
cwtl
imul
sub
idivl
fsub
fildll
sbb
outsl
adc
ja
pop
inc
bound
push
jp
or
add
jge
mov
cmpsb
xchg
mov
aad
sub
scas
enter
lea
repz
sbb
repnz
ss
addb
xor
jle
adc
add
cmp
ret
lods
mov
in
add
sbb
jl
dec
mov
add
mov
mov
sti
xchg
lret
cmp
push
inc
mov
lods
xchg
syscall
stos
inc
fmuls
popa
add
mov
les
add
gs
push
xchg
and
cmp
incl
add
hlt
jecxz
adc
icebp
add
pusha
fs
and
test
add
dec
and
lret
adc
and
or
add
daa
outsb
ljmp
xchg
mov
add
jecxz
daa
sbb
pop
mov
cmp
shl
or
add
add
add
js
xchg
push
mov
aad
cmp
or
dec
mov
and
stos
jge
jns
jg
add
sti
daa
repz
and
jo
adc
aad
xchg
fs
jmp
mov
sub
add
xchg
fiadds
add
aaa
repz
dec
jmp
mov
add
add
adc
inc
lea
push
and
jno
outsl
and
jbe
clc
fsts
sbb
add
and
popa
iret
cmpl
xchg
mov
int3
addl
sahf
pop
cltd
lods
hlt
fsubrl
pop
insb
xchg
mov
cmp
test
add
pop
mov
ret
inc
imul
mov
jecxz
mov
sub
inc
or
add
push
jecxz
mov
lds
add
jno
add
and
jbe
jnp
mov
fwait
push
add
add
and
fsubr
xchg
push
mov
xor
arpl
xchg
aas
push
add
add
jne
lret
pop
pop
adc
dec
aam
add
and
add
add
daa
stos
frstor
nop
mov
sar
add
xor
inc
out
movsb
test
push
leave
push
rclb
xor
repz
push
jecxz
mov
dec
inc
add
push
data16
or
or
jo
in
rclb
dec
insb
or
addl
sti
sbb
or
add
xchg
add
mov
adc
add
imul
add
mov
add
gs
or
mov
lcall
add
pop
adc
dec
loop
and
add
xor
daa
hlt
or
add
xchg
push
and
add
stos
add
xchg
cmp
in
sbb
jae
jmp
mov
inc
cmpsb
add
mov
imul
cltd
hlt
inc
lcall
lahf
push
mov
imul
pop
jl
push
add
add
stos
xchg
cmpsb
sbb
loop
aam
into
mov
jnp
mov
fnsave
sub
jmp
sub
and
add
jns
pusha
bound
push
cmp
leave
movsl
out
pop
push
mov
je
add
addl
pop
mov
and
inc
repz
int3
mov
dec
out
xchg
popa
pop
aas
xchg
fadds
add
push
jns
sbb
lea
sub
add
cs
stos
cli
pop
mov
mov
cwtl
jg
sub
and
xchg
sub
pop
lahf
and
xchg
xor
push
cmp
xor
aas
xor
dec
lcall
jecxz
jle
add
add
sbb
xchg
lock
push
fwait
outsb
or
add
pop
pop
mov
dec
adc
das
scas
sub
je
dec
add
fwait
push
jle
adc
push
pop
fsts
lock
pushf
aaa
shl
add
xchg
loope
mov
or
add
rorl
roll
add
jno
cmp
add
add
xchg
or
je
xor
incb
mov
fs
rorl
fimuls
or
cmp
leave
sti
mov
jbe
fldt
icebp
sar
subl
xlat
dec
test
jg
add
add
inc
mov
in
cmp
pop
sbb
add
call
fsubs
cli
pop
movl
pop
add
popf
adc
mov
imul
loop
add
scas
xchg
xor
cmp
mov
mov
mov
mov
cmpb
add
imul
or
add
push
add
out
out
ret
cmp
pop
call
pop
jne
pusha
hlt
adc
sub
adc
inc
or
add
push
jbe
inc
pop
push
inc
fadds
add
stc
add
xchg
mov
mov
mov
movsl
adc
mov
mov
or
add
xorl
sbb
xchg
add
jo
dec
pop
rorl
xchg
add
jnp
stos
inc
mov
mov
add
cmc
push
sarb
insl
fstsw
cltd
andl
stos
xchg
mov
dec
pop
jge
push
iret
movsl
je
popf
addr16
cmpsl
mov
pop
add
sbb
add
dec
ss
add
mov
das
push
push
xchg
hlt
scas
sti
push
and
mov
push
jge
adc
out
repz
insl
mov
jne
mov
mov
add
iret
mov
int3
fiaddl
add
push
lock
dec
aad
addr16
add
xor
mov
cli
int3
clc
add
or
or
pop
xchg
inc
stos
inc
xor
add
icebp
push
or
push
mov
inc
iret
fiadds
add
mov
push
mov
pop
sub
sbb
clc
stc
inc
addr16
loop
repz
vorps
mov
push
aad
adcb
mov
add
mov
add
xchg
in
scas
jnp
mov
mov
jecxz
int
in
adc
loope
add
add
jge
test
add
inc
push
add
sub
int3
insb
add
mov
mov
mov
sub
xchg
dec
adc
test
sub
addl
popa
xor
sub
add
int
add
add
or
jmp
xchg
pop
cmp
sub
sbb
add
sub
push
sti
xchg
lahf
cmpsb
add
sub
pop
ret
out
fistl
dec
outsb
xor
call
inc
popa
sub
pop
sbb
inc
icebp
stos
add
or
and
and
sbb
pop
dec
mov
push
mov
mov
push
enter
cmpsl
sahf
jp
ret
ret
and
xchg
pop
fiaddl
push
xchg
mov
pop
cltd
aaa
repz
int3
addb
add
inc
js
mov
cmp
add
add
add
adc
fld
cs
mov
mov
sbb
out
out
aas
mov
dec
test
add
cmpsb
mov
mov
repnz
data16
loopne
add
jge
mov
pop
mov
add
jge
nop
push
enter
mov
out
add
movsl
add
mov
add
int3
stc
add
mov
jecxz,pt
sbb
push
mov
shlb
xchg
in
psubsw
lods
add
aam
pop
xor
out
jmp
sub
push
xor
add
andl
in
pop
lods
into
or
adc
xor
xchg
sub
dec
and
push
dec
insl
cmp
imul
cli
pop
mov
mov
insl
shll
xor
sbb
popf
jg
pushf
fildl
xlat
adc
mov
cmp
insl
call
add
stos
scas
adc
out
mov
push
add
xor
in
pop
pop
test
das
shlb
add
test
imul
add
outsb
les
mov
xchg
cmp
scas
mov
pop
cltd
pop
pop
jnp
cmp
sub
push
xor
add
mov
mov
pop
loope
cltd
dec
jl
je
into
mov
mov
loopne
or
hlt
gs
dec
push
push
push
mov
shl
sbb
pusha
add
in
sbb
push
les
push
jle
or
or
repnz
aaa
int
add
add
push
mov
adc
addr16
frstor
movsb
add
mov
das
cli
out
imul
test
add
xchg
xor
push
stc
pop
leave
adc
add
add
and
xor
addb
and
sub
fsubrs
sti
cwtl
push
lret
dec
sub
add
add
dec
lahf
push
adc
fdivs
push
ja
xorl
pop
mov
iret
into
icebp
inc
pop
outsl
daa
ret
out
adc
cld
cmp
or
test
add
cmp
push
bound
rcrb
cmp
repz
ret
loop
aam
mov
jmp
lahf
cmpl
xor
push
in
sbb
mov
push
std
xchg
out
pop
lods
je
cld
aas
and
cmp
in
add
leave
jmp
scas
imul
sbb
inc
pop
cmpsb
xchg
lods
mov
add
mov
jle
test
stc
out
jo
je
jmp
stos
pop
shrl
push
shrl
nop
test
add
inc
inc
in
sbb
pop
add
sub
jne
jb
ret
and
ja
sub
sti
fs
inc
mov
add
test
pop
jbe
fistpl
rorb
sub
xchg
xchg
xchg
enter
push
pop
fwait
nop
out
cmp
cltd
dec
push
sub
push
mov
xchg
aad
dec
xor
fdiv
push
fimuls
add
loope
push
dec
stos
add
dec
addr16
lcall
add
sub
or
imul
dec
jne
cmpsl
ds
jle
add
or
psraw
mov
dec
and
cmp
fdiv
into
dec
pop
arpl
mov
aam
test
add
dec
faddl
add
pop
hlt
mov
cltd
cmp
jg
adcw
add
sub
cmc
enter
inc
jb
adc
add
add
jmp
xlat
push
icebp
add
sub
push
insl
fdivs
bound
jge
out
add
inc
lret
ss
movsl
mov
cmc
icebp
into
xor
lock
out
ds
js
add
xor
inc
popa
add
lcall
add
add
call
out
stos
mov
mov
and
sbb
xchg
mov
mov
fsubrl
xchg
mov
pop
and
imul
arpl
jo
pop
dec
out
add
bound
outsb
inc
sub
mov
fnsave
dec
inc
cmp
and
clc
mov
mov
jp
dec
xchg
jae
cld
sbb
mov
rclb
or
inc
push
add
aaa
fmuls
leave
sub
jae
aad
les
sbb
clc
les
pop
jno
insl
aas
mov
in
add
add
cmc
loopne
fsubl
test
jp
outsb
add
adc
lea
in
add
add
in
mov
sbb
add
mov
pusha
int3
jnp
add
or
xchg
xor
lods
out
lods
mov
cld
shl
xchg
fsubrs
cs
subl
add
sarl
push
push
pop
gs
cmp
push
jle
insb
xor
ret
jno
mov
add
ds
jae
andl
out
ret
pusha
addr16
or
adc
rorl
xor
clc
add
add
jl
test
fcomp
jo
jb
popf
js
int3
cmp
add
das
daa
push
test
add
cmpsl
mov
loop
dec
add
and
cwtl
cmpsb
pop
pop
jbe
enter
popa
aad
iret
pop
and
and
sub
in
cld
into
inc
push
adc
push
out
je
sbb
xchg
repnz
enter
adc
mov
mov
xlat
idivb
pop
xchg
loope
add
add
nop
mov
dec
stos
add
xchg
xchg
dec
xchg
add
xchg
sub
add
or
add
imul
jbe
es
scas
and
mov
jge
clc
shrl
popf
xchg
out
mov
call
inc
push
mov
xor
add
add
loopne
mov
push
cs
add
add
inc
das
andb
in
push
in
out
mov
loopne
repz
cmp
adc
inc
or
add
fwait
call
addb
lods
loopne
stos
add
xor
movsb
sbb
cmp
subb
add
and
inc
mov
add
inc
add
xchg
xor
sub
iret
leave
mov
pop
call
inc
dec
jle
add
out
mov
add
fistl
sarl
cmpl
add
mov
add
mov
add
es
inc
lods
pop
sbb
js
out
or
push
mov
ret
cmpsb
add
sub
scas
adc
xchg
ds
mov
sbb
shl
fwait
lahf
mov
aad
mov
sbb
cmp
movsbl
out
pop
test
push
por
cmpsb
mov
andb
mov
jl
lret
nop
jge
icebp
push
mov
cmp
or
xchg
or
add
pop
xor
ret
xchg
mov
ret
cltd
lcall
jmp
or
add
test
mov
or
pop
sbb
push
and
add
cltd
sbb
adc
pop
cmp
int
cli
jnp
fisubs
add
repz
mov
in
idiv
fldenv
xchg
or
ret
mov
push
stos
frstor
mov
inc
add
fsub
pusha
push
das
xor
lret
jno
daa
sbb
pushf
loop
mov
scas
dec
je
int
cmp
add
ljmp
add
add
ret
int
mov
shll
mov
or
add
pop
xchg
sub
arpl
push
icebp
pop
fsin
lods
xor
sbb
adc
ljmp
sub
iret
xchg
push
mov
sbb
inc
fidivl
enter
jnp
sub
add
xor
lods
add
jp
cltd
ljmp
add
and
jmp
add
rorl
movsb
je
cltd
insb
lods
mov
add
imul
xor
mov
mov
add
xor
sub
aad
aas
add
mov
inc
mov
sbb
adc
loopne
js
mov
add
fisubl
mov
outsb
pop
and
orl
imul
out
add
daa
jg
addb
add
add
int
cmp
outsb
push
fs
fwait
mov
pop
mov
xlat
xchg
scas
push
jle
jge
mov
add
jge
test
and
cmp
xchg
scas
sbb
adc
mov
or
pop
add
pop
outsb
loopw
dec
fists
or
in
dec
insl
dec
push
ja
pusha
shlb
xor
out
mov
add
scas
lods
enter
adc
mov
inc
xchg
add
js
les
mov
push
add
repz
dec
les
loop
daa
cmp
xor
jmp
jbe
cmp
lahf
pop
inc
lret
fs
popa
mov
lock
das
push
out
jp
testb
pop
xchg
adc
or
in
push
fs
and
pop
fsubrl
enter
adc
rcrb
outsl
add
add
add
push
xchg
push
add
xchg
add
loopne
mov
mov
aas
push
ss
test
mov
sbb
adc
xchg
stos
cld
jle
std
add
cmpb
aad
into
cwtl
test
add
xor
mov
int
xchg
mov
add
inc
add
jns
in
clc
push
test
add
mov
sbb
ljmp
mov
add
das
or
push
dec
ljmp
jge
outsb
lods
dec
push
movsb
lret
in
adc
out
mov
add
push
or
add
ljmp
inc
or
add
ss
cmp
add
jns
adc
leave
daa
sub
add
scas
das
sahf
nop
test
xchg
add
cs
mov
outsb
fiaddl
cmp
sub
lret
lds
or
pop
mov
add
mov
add
sbb
cmpsb
add
add
mov
add
pop
je
fld
test
add
daa
mov
mov
pop
mov
pop
add
je
sbb
stc
nop
imul
inc
test
add
cmp
sub
mov
subb
add
add
add
std
divl
add
paddusw
mov
movsb
push
iret
lea
add
adc
mov
sub
insb
pushf
adc
cmc
test
add
mov
sbb
fsubrs
data16
adc
sbb
cli
loopne
nop
cs
xchg
call
inc
xchg
push
fdivl
sub
cmp
into
gs
dec
sub
add
mov
sub
jno
enter
jb
call
xor
ljmp
fldenv
cmpsl
dec
jae
into
adc
add
loope
pop
test
arpl
push
je
stos
pushf
stc
lret
imul
push
inc
mov
add
fsubs
in
lea
data16
into
xchg
xor
jge
cli
dec
insl
cmp
loope
fiadds
idivl
pop
cmp
into
add
test
and
add
pusha
mov
ljmp
iret
mov
sub
xchg
stc
xor
pop
xchg
fisttpll
xchg
jle
or
jns
sub
jne
mov
data16
pop
jg
test
loope
hlt
sbb
dec
xchg
pop
add
jo
jae
lea
sbb
jecxz
or
add
sbb
mov
in
add
shll
ffree
and
add
push
inc
push
xor
push
enter
cmp
aaa
push
lcall
xchg
mov
add
push
movsb
push
test
add
ljmp
cltd
cmpsb
cld
sbb
push
inc
insb
sbb
sbb
add
mov
add
je
mov
pop
les
add
into
jp
ss
fdivl
jbe
es
cltd
orb
ja
mov
cmp
and
add
sub
add
mov
xlat
shll
std
mov
faddl
add
test
dec
scas
mov
mov
fsubrs
ret
add
fldl
stos
cmp
mov
or
mov
and
jmp
rcll
cs
in
push
mov
add
les
in
jge
imul
mov
sub
imul
lds
dec
ficoms
fld
fnstenv
adc
fldcw
xchg
inc
sbb
sub
test
or
adc
add
adc
fcomi
cmp
ret
adc
mov
inc
dec
enter
mov
pop
repnz
adc
add
add
mov
add
xchg
out
cmpsl
pop
and
add
loop
push
andl
push
push
inc
push
jmp
inc
addr16
and
imul
mov
dec
xor
cwtl
int3
je
add
std
push
lret
rolb
add
repnz
andps
adc
mov
mov
insl
adc
add
popf
mov
lock
pop
aad
je
add
add
jecxz
movsl
inc
or
add
inc
lods
pop
mov
and
add
inc
mov
push
xchg
or
add
lea
test
add
push
inc
xor
fadds
push
pusha
cmp
lcall
mov
xchg
movl
and
test
inc
and
add
js
add
sub
scas
mov
aad
out
test
jge
adcl
adc
int
push
dec
xor
add
lods
fsubrl
loop
lcall
in
int
mov
or
add
mov
xlat
push
or
add
into
jl
mov
mov
enter
sub
cmp
add
add
push
jnp
adc
js
inc
cmp
scas
sub
adc
loope
and
pushf
adc
push
and
xchg
pop
pop
addr16
dec
jne
lds
mov
xchg
ret
gs
jl
inc
mov
xlat
out
in
es
lock
jb
xchg
dec
jnp
ret
test
add
add
jns
mov
dec
mov
xor
dec
lea
add
cmp
mov
sbb
lret
mov
and
fnstcw
int3
xchg
add
push
push
mov
cmp
add
or
add
insb
pop
mov
pop
pop
mov
mov
ljmp
in
in
outsl
stos
add
add
insb
out
in
xchg
jmp
mov
lret
fs
inc
pop
mov
mov
sub
cmp
add
cmp
dec
mov
ljmp
add
fs
mov
and
cmp
lret
js
sbbl
jecxz
mov
add
add
flds
add
add
push
inc
push
rcr
lock
cmpsl
sbb
pop
ds
xor
stos
jbe
inc
and
inc
dec
icebp
sbb
sub
mov
popa
cmp
push
les
add
jnp
loopne
push
in
arpl
test
add
sub
add
es
enter
mov
add
add
add
and
add
inc
rcl
stos
push
dec
add
add
inc
inc
cmp
andl
xor
into
add
cli
imul
mul
nop
shr
add
loop
in
add
sub
mov
mov
test
ret
lcall
push
std
jle
jo
orl
clc
fistpl
add
add
push
outsb
pop
pop
test
mov
mov
mov
in
mov
pop
outsb
xchg
lds
cmp
xor
mov
int
add
add
les
int3
mov
fldl
add
popf
mov
out
pop
pusha
jb
out
pop
cltd
insb
sbb
stc
jmp
dec
inc
mov
add
pop
in
into
cmp
ss
popa
mov
std
push
mov
jne
add
fs
mov
xor
cmpsl
repz
cmpsb
enter
push
lock
enter
icebp
jae
fcomp
aas
outsb
add
add
enter
fdivl
lds
xor
xor
add
inc
or
icebp
cmp
xchg
aas
cmp
loopne
js
mov
add
loope
pop
mov
push
lods
or
xorb
jecxz
mov
vcvtpd2dqy
and
mov
cwtl
add
add
call
xchg
idivb
mov
jle
rcl
inc
fidivs
sarl
mov
xchg
addr16
arpl
and
cltd
push
in
or
mov
xchg
enter
and
mov
ds
mov
inc
pop
sbb
cmp
loope
adc
int3
adc
add
cwtl
rclb
ret
xchg
je
mov
aad
out
push
ret
clc
ss
add
insl
pop
repnz
mov
sti
add
push
sti
outsb
jo
and
adc
add
icebp
mov
pusha
jns
cltd
mov
sbb
outsb
les
jg
arpl
inc
fwait
jb
xor
orb
leave
lret
dec
out
add
jl
jg
mov
sti
xor
cmp
add
ret
ds
sbb
shlb
aad
inc
les
add
mov
decb
and
jl
ret
and
fmul
stc
popf
js
adc
pop
push
xchg
pop
sbb
xor
mov
lods
mov
or
mov
stos
add
pusha
sahf
pop
jmp
enter
sbbl
out
pop
out
insb
mov
addr16
push
stos
jbe
je
mov
lret
xchg
dec
fwait
add
sub
xchg
add
aad
mov
add
das
pop
mov
push
loopne
nop
xchg
lahf
ss
push
jnp
mov
mov
sbb
pop
aaa
ds
sub
mov
add
mov
gs
nop
fwait
dec
scas
mov
cmpsl
leave
ret
sbb
sti
cmpsb
mov
add
cmc
jl
push
push
lret
in
mov
mov
outsl
cmovno
add
xlat
cmc
out
jbe
loope
add
nop
testb
fidivrs
popa
ret
jo
negl
arpl
mov
jg
mov
xchg
lret
sub
xlat
or
pushf
test
add
sub
jg
add
sbb
add
test
lsl
ja
xchg
push
shrl
lock
pop
cmc
test
cmp
addr16
scas
jecxz
mov
jle
push
jns
ret
add
add
aaa
add
mov
adc
and
imul
xchg
pop
nop
and
sbbl
jne
icebp
fsubl
cmp
movsb
clc
insb
sbb
add
pop
out
inc
nop
pop
push
sub
jnp
cmp
push
jmp
add
aaa
or
jbe
shll
xchg
mov
mov
add
adc
xchg
lds
jp
adc
icebp
pop
cltd
pop
gs
or
sub
xor
sahf
push
cld
jns
test
add
mov
into
xor
mov
add
fdivrp
jg
in
xor
add
add
int
push
or
cli
mov
mov
scas
lods
sub
xchg
mov
sub
dec
cmp
addl
repnz
jns
mov
lahf
inc
movsl
add
repz
addr16
cmpsl
and
push
add
rcrl
sub
mov
in
cmp
lea
ja
enter
lea
fmuls
add
dec
xchg
add
add
arpl
xor
xchg
jp
mov
pushf
jg
pop
dec
loopne
jecxz
cwtl
test
cs
mov
les
add
idivl
add
inc
mov
pop
jl
mov
cmpsb
pop
dec
lcall
add
mov
cs
in
xchg
loop
fcomi
mov
cmc
test
fdivp
adc
dec
add
push
xlat
mov
add
lahf
jno
pop
or
add
loop
inc
jg
mov
mov
pop
lea
je
adc
outsl
popa
shrl
orl
js
and
or
add
add
sahf
sahf
sahf
test
add
jg
dec
ljmp
add
mov
ret
popf
jno
dec
xchg
add
add
add
cld
xchg
dec
icebp
jae
ja
nop
inc
into
ja
data16
and
mov
push
lds
cwtl
mov
sahf
idivl
dec
fwait
add
mov
pop
aam
aam
cmp
fcomps
mov
fmuls
aad
and
adc
xchg
cmp
jmp
gs
insb
sbb
push
push
stc
inc
adc
mov
pop
dec
jbe
push
in
daa
mov
aas
scas
inc
adc
les
or
inc
add
stos
rolb
add
shrl
icebp
push
sbb
ret
cmpsl
sti
std
clc
scas
ljmp
push
dec
dec
xor
add
inc
insl
loop
fidivrl
and
add
ret
insl
xchg
scas
ljmp
push
jecxz
fprem1
rclb
jg
xor
add
and
add
cmpsb
addr16
dec
cwtl
into
addr16
add
fs
jo
mov
or
lahf
nop
fstpl
xchg
and
and
das
test
fisubs
cmp
clc
mov
and
mov
and
xchg
in
xchg
mov
add
jne
cmpsl
xchg
add
inc
test
cltd
adc
ret
push
sub
or
imul
xlat
dec
xor
add
push
add
call
shl
add
add
mov
mov
add
sbb
mov
xchg
in
inc
addr16
adc
aad
roll
add
jg
int
testl
test
jecxz
cli
test
add
cmp
sub
or
add
daa
mov
sahf
bound
mov
lahf
push
data16
arpl
push
dec
mov
icebp
sub
jns
iret
insl
iret
aaa
add
add
fucomp
into
rol
nop
in
data16
xchg
test
push
js
jmp
sub
add
pop
hlt
mov
push
dec
mov
outsb
and
dec
sldt
inc
lods
add
movsb
push
les
mov
pop
sbb
pushf
or
lret
cmc
push
sub
lret
mov
rorb
inc
aam
add
xor
clc
add
gs
mov
xor
add
mov
add
jl
sbb
imul
andnps
pop
cmp
push
inc
roll
add
add
out
jnp
imul
jecxz
jae
pop
daa
pop
xchg
repz
idivl
xchg
in
std
xchg
mov
sub
and
mov
fildll
sbb
xchg
rcll
pop
imul
and
fs
mov
mov
fldt
clc
in
gs
add
add
pusha
jle
inc
sbb
ret
sbb
and
add
lods
mov
mov
inc
add
add
inc
hlt
mov
pop
inc
xchg
push
mov
movsl
out
mov
add
and
sahf
pop
stos
test
fnstsw
shl
nop
dec
test
add
outsb
fiadds
add
add
cld
jp
dec
aam
add
cli
jl
fcmovu
in
aad
sti
std
jmp
stc
or
add
or
jae
sub
mov
jno
cmpsb
fisubrs
or
add
shll
sub
sbb
std
or
test
pop
out
fsubrs
movsb
xchg
dec
push
add
adc
cli
hlt
dec
dec
fdivs
test
adc
add
and
add
mov
add
mov
or
scas
out
stos
mov
sti
bound
bnd
shlb
fists
xor
mov
imul
dec
dec
das
int
inc
js
stos
xorb
pop
adcl
iret
insb
mov
out
add
add
jae
jecxz
sub
aad
xor
fs
cmpb
sbb
mov
aaa
jl
ds
cli
sti
movsb
adc
or
dec
int3
cmpsl
add
iret
cld
movsl
shrb
jne
loopne
aas
add
add
inc
xchg
add
jnp
inc
mov
in
popf
mov
xor
hlt
ja
and
xor
in
push
add
fimull
pop
in
test
push
loopne
rolb
jecxz
loopne
push
add
mov
test
inc
and
test
mov
add
outsl
outsl
and
int
loop
mov
add
test
pop
pop
lcall
lret
xchg
xor
mov
xlat
inc
xor
mov
imul
movsl
lods
mov
inc
lcall
cmp
mov
inc
out
in
lea
xor
testl
out
mov
lret
in
xchg
xchg
aas
mov
add
or
add
stos
fdivrl
jae
sub
add
notb
jne
jg
jb
jns
inc
movl
cwtl
sub
test
es
mov
pop
add
lods
dec
stos
fwait
push
out
push
sahf
call
js
lock
lods
int3
fildl
add
or
mov
outsl
sub
fstp
imul
xor
test
dec
clc
xor
cmp
xchg
iret
out
inc
ja
pop
rorb
das
mov
data16
add
sbb
add
add
pop
cmp
cmp
sub
add
push
cmp
add
inc
test
push
stc
cmpsb
gs
sub
movsb
pop
cwtl
dec
or
sbb
in
test
mov
fcomp
out
not
dec
xor
out
xor
popl
cmc
pop
add
adc
inc
adcb
jg
pop
mov
data16
cmp
jbe
xchg
add
xlat
and
add
movsb
push
mov
femms
out
outsl
add
sti
into
dec
stc
adc
sub
xor
jecxz
pop
and
xor
in
mov
hlt
lretw
orl
repz
add
repnz
mov
pop
negb
or
add
jno
pop
ds
std
sarl
jnp
add
add
mov
jecxz
xor
aas
xchg
cmp
jle
in
jnp
cmc
add
jecxz
push
mov
add
loopne
cmpsb
pop
sti
in
push
stos
sbb
mov
add
dec
pop
add
pop
addr16
inc
jne
xor
and
xchg
in
lea
aaa
fidivs
mov
push
xor
orb
jl
adc
clc
leave
aas
mov
lds
pop
fbstp
inc
inc
clc
ficoms
loope
fdivs
ds
fadds
add
in
outsb
mov
stos
cmp
leave
dec
cmpsb
add
call
add
inc
push
imul
fisubl
call
inc
fnstcw
repz
pop
loope
int3
movb
add
mov
pop
and
jecxz
pop
mov
push
and
or
out
dec
aas
sbb
and
pop
dec
mov
inc
stos
add
add
xchg
sbb
fsts
pop
adc
inc
bound
mov
push
mov
cmp
fcoms
add
xor
sldt
or
jge
popf
ds
mov
leave
sbb
sbb
rcrb
xchg
in
cmpsl
push
mov
fwait
insb
enter
sub
or
xchg
jbe
lock
lret
jo
enter
gs
mov
and
xor
push
iret
push
xchg
adc
repz
popf
pop
dec
or
in
add
lcall
add
push
add
jno
loop
cmp
cmp
pop
aas
ja
in
jb
addl
enter
dec
adc
lret
or
add
jnp
pop
sbb
aad
jge
inc
js
bound
mov
clc
jmp
loope
push
xor
cmc
arpl
inc
sbb
gs
cmp
jae,pn
jne
out
adc
movsb
into
or
lock
inc
shlb
test
mov
add
repz
sbb
lcall
xchg
add
pop
jmp
dec
and
daa
dec
sbb
sbb
icebp
push
cmp
ds
stc
add
pop
sub
cmp
fwait
das
jo
jns
add
jno
cltd
in
or
add
lahf
paddsb
add
hlt
dec
jge
push
mov
cmp
out
push
ret
add
outsb
xchg
xchg
pop
add
data16
outsl
dec
enter
jns
stos
hlt
inc
pop
add
lds
xor
xchg
pop
iret
inc
xlat
add
rorb
out
xor
shr
dec
bound
xor
insb
jge
jle
jo
inc
sub
int
inc
adc
and
shrb
pop
jmp
cmp
adc
lea
add
aad
and
or
popa
adc
fsub
pop
dec
insb
js
pop
mov
mov
fs
push
in
push
xor
testl
dec
ud1
mov
add
inc
xor
pusha
sub
jle
mov
sbb
cmp
popf
xorb
add
xchg
add
add
sbb
and
sbb
jg
push
inc
fiadds
add
mov
add
push
add
push
jp
pop
fwait
adc
mov
pusha
sti
dec
add
add
pop
or
shlb
loop
mov
pop
jo
insl
gs
loopne
add
sbb
add
add
in
cmpsl
adc
push
call
or
xchg
mov
js
mov
iret
cmpl
add
jle
push
push
mov
mov
pusha
pop
lret
jge
xchg
addr16
rorl
sub
mov
add
iret
xchg
inc
insb
xchg
xchg
fsts
jae
xchg
inc
aaa
pop
rcl
bts
mov
add
mov
pop
pop
xor
es
cmp
lods
and
sub
in
fbstp
inc
sahf
add
hlt
insl
dec
jno
jle
xchg
pop
loopne
mov
movzwl
test
aad
pop
fwait
mov
jbe
mov
ret
test
adcb
add
imul
sbb
push
lcall
pop
mov
add
test
xchg
rcr
mov
add
jne
jge
add
xchg
xor
int3
fadds
add
std
imul
das
scas
xor
inc
cltd
enter
cmp
push
and
cmpsb
leave
int
cmp
jg
imull
ds
xchg
stos
ss
rol
in
testl
add
hlt
sbb
jnp
dec
pop
add
mov
mov
mov
lea
nop
push
mov
add
add
and
xchg
mov
mov
cmp
adc
adc
xchg
in
sub
loopne
pop
pop
or
add
or
sbb
xor
add
adc
push
xchg
mov
popa
xlat
mov
adc
movsl
add
icebp
repz
divl
aaa
pop
pop
enter
jo
cmp
add
mov
test
add
xchg
dec
sbb
add
and
add
sbb
addr16
xchg
add
arpl
add
outsl
stc
jne
pop
mov
aas
xchg
das
test
cmpsb
xchg
mov
ljmp
or
mov
out
push
add
add
ds
pop
daa
inc
jle
add
xor
add
push
mov
sbb
pusha
daa
pop
lea
icebp
mov
mov
add
in
int3
into
add
les
xchg
in
xor
mov
add
sarl
mov
fisubrl
sbb
fbstp
test
test
ss
dec
xchg
and
enter
mov
jp
adc
inc
inc
pop
test
lds
add
subb
xor
push
sub
fisubrl
add
or
add
and
in
scas
add
push
psubw
jl
mov
es
scas
je
call
inc
adc
add
and
or
sub
mov
or
push
fucomip
sub
push
mov
insb
and
cltd
adc
pop
lret
addl
xor
popl
cmp
ja
xchg
stos
outsb
adc
xor
test
jo
pop
jae
scas
std
pop
jge
fs
mov
add
sub
repnz
pop
rol
leave
adc
inc
orl
arpl
or
out
pop
adc
mov
add
insl
xchg
leave
pop
or
push
and
mov
inc
mov
shlb
loopne
add
add
mov
xor
leave
loop
xchg
lret
inc
in
add
sbb
add
movl
js
jmp
divl
hlt
int
test
push
jge
fsubp
inc
xlat
sarl
mov
sub
xchg
pop
fcmove
int
add
lret
orb
mov
adc
add
hlt
stos
mov
sub
frstor
cmpsl
imul
or
adcb
add
fistl
mov
lcall
dec
test
add
add
cmp
add
cwtl
add
fs
add
dec
push
add
mov
sbb
mov
je
inc
pop
pop
test
xor
dec
cmpsb
aam
ljmp
xchg
xchg
ret
jecxz
and
icebp
push
out
mov
cmc
imul
push
sbb
cs
or
mov
rcrl
add
xchg
mov
add
jle
arpl
movsl
es
push
push
mov
pop
jne
stos
clc
popl
xor
cmp
adc
xchg
mov
mov
nop
add
xorl
pop
addl
shlb
aad
das
mov
cmc
xchg
in
test
add
pop
sahf
notl
add
add
rcr
cwtl
fcoml
in
stos
cmp
xor
cld
push
mov
mov
in
add
pop
mov
pop
insl
sbb
scas
jae
daa
sbb
out
jae
dec
out
add
leave
jb
cmp
sbb
mov
repnz
add
or
fmuls
jle
pop
jb
into
movsl
cmpsl
and
cltd
inc
pop
mov
push
mov
mov
fiaddl
add
into
inc
loop
push
in
mov
adc
repz
movsb
xor
cmp
xor
inc
sti
fcompl
lcall
mov
test
fs
push
mov
pop
push
shlb
js
adc
out
inc
xchg
add
ds
into
or
add
inc
ret
popa
rclb
in
mov
js
sub
inc
add
adc
xor
cmp
decl
clc
cltd
sub
ret
xchg
add
mov
xchg
fistl
jb
scas
ljmp
jl
iret
cltd
stc
inc
fcmovnbe
stos
out
cmp
insl
adc
jne
push
fmuls
outsb
in
inc
sbb
jb
mov
jb
and
add
jmp
cmp
addr16
sub
add
push
jae
xor
adc
mov
inc
in
add
push
add
add
lock
fs
out
add
in
add
push
jge
stos
mov
add
add
push
movsb
les
dec
dec
popa
add
nop
sarl
xchg
mov
fwait
mov
pop
les
add
inc
xchg
mov
fucomi
lods
pushf
fwait
arpl
rolb
jnp
adc
pop
insl
std
test
sub
sbb
ja
xchg
es
fcompl
dec
pushw
mov
arpl
push
imul
movsl
mov
aad
inc
xor
cwtl
lods
into
inc
lods
stc
sub
rolb
repz
fs
sbb
movsb
movsl
push
fidivl
sbb
add
mov
add
xor
mov
add
clc
xchg
dec
jp
jnp
jge
pusha
fsts
dec
add
jno
movsl
mov
aaa
pop
xchg
pop
pop
rcl
sub
cmpsl
sbb
add
sub
pushf
push
outsl
pushf
adc
stos
jb
lcall
jne
mov
jb
and
popa
adc
fistpl
jns
sbbb
push
ror
add
push
xlat
mov
scas
or
sub
ss
std
bound
dec
fmul
cli
and
pop
push
ret
mov
mov
insb
mov
inc
jecxz
add
or
lcall
loop
push
sbb
add
insl
xchg
adc
sbb
sbb
data16
adcl
mov
mov
cltd
xchg
int
cmp
add
cltd
jle
cwtl
dec
push
add
mov
add
jns
mov
roll
add
cs
pop
push
leave
and
sbb
mov
ror
lcall
or
add
sti
cmp
es
ret
add
jmp
add
add
dec
mov
jbe
lcall
testl
adc
push
cld
push
adc
orl
mov
lret
cmpsl
sbb
inc
xor
icebp
pop
fisubl
mov
call
outsl
add
or
xchg
sub
mov
mov
je
inc
and
fisubrs
jae
outsl
aas
cmpsl
push
fildl
add
push
sub
aad
add
loope
jae
lods
lret
fcompl
out
mov
and
and
and
jo
fnstsw
xchg
fldl
xchg
xchg
xor
sarl
cmp
push
mov
insb
pop
add
movsl
rolb
inc
fwait
add
cmpsl
icebp
int3
sub
add
mov
jae
jbe
std
cwtl
ret
and
or
or
and
add
stos
ret
or
fsubrl
add
add
mov
cli
push
aam
divl
jp
pop
fidivrl
je
jns
sub
jle
inc
push
inc
sldt
and
add
inc
mov
fbstp
aas
mov
insb
jecxz
icebp
jb
and
jmp
push
nop
and
push
inc
js
add
sti
loopne
sbb
into
imull
push
enter
cwtl
mov
add
and
out
scas
cltd
push
ds
imul
cmp
cwtl
xchg
test
cmp
cmp
sahf
repnz
test
add
add
les
out
popa
xor
push
test
data16
xor
jle
xor
and
iret
pop
sub
xlat
sarl
pop
cmpb
test
insb
les
add
mov
jbe
test
add
xchg
add
lret
outsb
loope
inc
add
cmpsl
outsl
jl
popf
out
push
shr
inc
mov
cmp
pop
jmp
lds
add
jge
ds
dec
mov
shll
pop
gs
pop
aad
in
xchg
pop
rclb
add
xchg
fisubs
stos
adc
sub
push
add
jo
test
jmp
loope
mov
arpl
push
jns
loopne
push
xorb
aaa
jae
mov
mov
and
subb
pushl
xor
call
or
lret
xchg
xchg
pop
lret
dec
mov
fisubrl
mov
cmpl
js
out
cmp
mov
add
out
loopne
mov
mov
shll
testl
inc
adc
imul
cld
es
stos
popf
sbb
fdivl
jno
ret
jo
mov
jb
pop
or
icebp
push
daa
mov
add
inc
mov
call
lea
lock
jnp
imul
arpl
or
adc
fiadds
lret
test
rorl
fs
imul
add
iret
stos
pop
outsl
pop
sbb
sbb
aad
out
mov
sub
gs
dec
pop
cmp
insb
pop
sbb
xchg
enter
xor
mov
fsubrs
inc
sbb
cs
sub
mov
jb
push
sbb
mov
jo
aas
push
aaa
or
add
or
inc
sti
inc
mov
rcrb
ret
jecxz
loop
and
add
dec
pop
dec
jge
fnstcw
add
jns
std
pushf
insl
ret
jmp
loop
pop
mov
and
inc
fiadds
add
int3
and
add
sub
jne
mov
inc
mov
aaa
xchg
push
jnp
xor
rclb
mov
inc
sub
add
add
and
add
mov
jmp
add
cmpsb
xlat
in
inc
lea
push
fisttpl
jo
std
add
push
imul
push
pop
addr16
stos
xor
jno
mov
lret
mov
cmovle
add
add
inc
ja
divb
test
and
dec
add
je
sbb
fsubrl
out
shlb
add
sarb
mov
stc
inc
adc
add
add
pop
mov
pushfw
stc
push
sub
cmc
add
add
add
movsl
sbb
lret
mov
daa
adc
add
movsl
rclb
cs
add
popf
pop
call
in
and
add
ss
pop
jmp
loop
mov
add
roll
lea
xor
dec
int3
aas
add
cmpl
mov
xor
add
add
jmp
add
inc
sbb
in
out
add
inc
in
loop
gs
shlb
rorl
sbb
add
pop
lods
fmuls
out
cmp
adc
cmpsb
pop
mov
lods
imul
inc
and
out
jle
xor
jecxz
ret
dec
sub
sub
mov
mov
sbb
add
pop
js
jae
add
imulb
xor
pop
push
adc
das
lds
push
dec
xchg
add
add
pop
aas
sub
repz
roll
push
in
out
js
outsl
mov
push
loopne
mov
js
mov
jno
mov
aaa
pop
data16
aam
sti
into
mov
into
add
rcll
dec
add
xchg
iret
lret
inc
xchg
add
sub
mov
dec
mov
stos
pop
xchg
lret
add
xor
aam
push
jmp
sbb
or
add
leave
inc
lock
cmp
sbb
into
cmp
pop
test
xor
add
jo
sahf
cmpl
add
dec
or
in
push
sub
mov
and
ljmp
cmpsb
out
lea
add
mov
mov
roll
jge
add
push
mov
cmovp
cs
jns
push
mov
mov
push
mov
add
scas
pop
loop
fildl
fcmove
jp
pop
arpl
mov
sbb
sbb
jp
adc
inc
mov
add
cmp
insl
add
add
pusha
pop
or
add
or
add
jns
push
pop
aas
sbb
adc
jmp
pop
in
lret
xchg
inc
add
mov
add
in
adc
iret
push
clc
jl
xor
aas
and
fmuls
iret
dec
fdivs
adc
out
lds
or
add
test
fcompl
das
pushf
arpl
dec
mov
add
or
add
fcompl
pop
or
mov
jo
in
dec
mov
imul
pop
xchg
or
push
fadds
daa
jmp
cmc
iret
shlb
add
or
add
lea
xchg
scas
scas
test
add
and
dec
push
gs
out
jno
xor
popf
jecxz
icebp
xchg
test
lea
dec
sbb
add
jecxz
mov
arpl
or
iret
or
mov
mov
loope
cmp
clc
pop
push
out
cmpsl
inc
xchg
adc
fisttpll
lods
roll
xchg
sbb
add
mov
xlat
call
dec
sub
xlat
and
ljmp
pop
and
xchg
popf
or
ja
sbb
xchg
cli
rorb
jge
leave
outsl
sbb
sbb
push
adc
div
mov
hlt
je
mov
add
add
add
add
jae
int3
jl
add
sbb
sbb
insb
sbb
data16
add
add
adc
in
pop
dec
or
add
dec
stos
je
jne
out
rolb
pop
icebp
es
insb
sahf
mov
adc
arpl
pushf
xchg
movsb
pop
pop
jbe
xchg
testb
or
idivl
clc
dec
leave
fdivr
pop
data16
or
add
outsl
pop
outsl
rorb
aaa
mov
es
jbe
and
adc
sbb
jge
xor
add
push
movsl
cmp
push
push
cli
in
and
cmp
fwait
xchg
lds
roll
xor
insb
sub
mov
add
lcall
testb
sub
jbe
movsb
mov
jmp
sbb
lahf
add
jle
xor
add
pop
sbb
push
push
dec
push
jmp
dec
and
add
data16
adc
sbb
mov
add
jmp
mov
sbb
mov
and
ds
xchg
mov
mov
sbb
add
les
and
jecxz
push
loop
sbb
scas
sbb
jl
add
add
sti
xchg
adc
loope
ret
mov
add
cmp
sbb
cld
mov
add
mov
jns
pop
lods
cmp
cs
fwait
dec
jg
clc
adc
pop
inc
repz
dec
stc
add
in
xlat
add
ficoml
cmp
xor
cltd
inc
jge
adcb
add
push
es
add
out
push
add
stc
mov
sahf
enter
int3
repz
hlt
pop
call
or
add
outsl
cmp
push
push
stos
test
push
and
inc
call
loopne
add
add
xchg
ret
ja
pop
cmp
mov
add
inc
adc
add
mov
mov
mov
push
inc
pushf
push
test
jge
mov
add
shlb
iret
xor
adc
imul
mov
sub
out
test
and
adc
mov
les
pop
loopne
cwtl
scas
lods
in
dec
je
jae
pop
fisubrl
aaa
ret
or
add
sbb
decl
inc
mov
add
add
lret
sbb
add
dec
in
add
flds
add
xor
in
sbb
lahf
mov
rolb
add
add
outsb
mov
out
or
add
div
xor
rolb
or
sbb
xchg
js
pushf
aas
sbb
add
and
jge
cmp
jno
sti
adc
add
adc
outsl
add
sti
dec
mov
out
imul
clc
xchg
dec
push
cmc
stos
mov
cs
inc
push
and
aas
and
incl
ret
or
fisubs
jae
lods
pop
push
lret
xchg
and
mov
jle
jg
cwtl
pop
scas
rorl
sbb
je
sub
jb
mov
add
std
and
adc
or
add
inc
out
mov
cld
mov
add
add
movsb
in
shll
add
xor
and
js
mov
icebp
cmp
add
insl
fs
dec
lods
addr16
js
or
sarb
mov
insl
sub
cmp
add
jl
dec
fimuls
adc
lock
xchg
inc
xchg
xchg
ficompl
add
ss
pop
scas
push
jo
or
leave
clc
sub
add
add
stc
shrb
fisubl
pusha
fs
mov
jl
sbb
out
push
xchg
outsb
sbb
andb
lcall
adc
arpl
pop
jbe
pop
nop
mov
and
cltd
mov
ds
icebp
add
mov
add
out
subl
loope
imul
or
add
and
push
out
push
push
pop
cmp
fs
stos
pop
adc
cmp
jle
cmc
cltd
jns
inc
lret
scas
lock
lcall
ljmp
stos
xor
std
push
adc
fdiv
xchg
mov
movb
call
mov
mov
cwtl
xor
lret
pop
mov
sub
add
shl
jmp
push
push
imulb
jecxz
xor
aaa
push
mov
lahf
sahf
xchg
out
imul
in
aad
repz
push
mov
sbb
pop
jbe
insl
mov
fcoms
xor
cs
xor
push
push
mov
add
pop
pusha
inc
push
mov
add
add
notl
pusha
xchg
cwtl
mov
and
das
mov
dec
pop
add
fs
addl
sub
add
pushl
repz
sbb
scas
add
inc
in
add
add
xchg
imul
mov
das
mov
test
add
mov
add
push
adc
and
mov
or
add
mov
enter
fdivrs
add
cmpsb
xchg
das
dec
imul
mov
aad
inc
xchg
movl
pop
jne
paddusw
mov
xchg
or
movsb
sub
or
add
adc
add
stos
pop
lds
or
mov
push
fstpt
push
insb
loop
popf
sbb
das
jo
ret
inc
xor
repz
mov
arpl
xchg
jmp
scas
addr16
scas
rcl
pusha
outsl
lahf
mov
or
add
dec
rcrb
add
or
sub
bound
imul
and
mov
add
xchg
xchg
loope
or
add
pop
repnz
mov
cvttps2pi
out
cmp
pop
out
fcoms
in
adc
dec
stos
test
mov
jno
jmp
rcr
loopne
or
out
add
outsl
push
and
rolb
mov
add
dec
int
outsb
add
dec
imul
add
dec
stos
inc
scas
or
add
rcl
adc
cld
cmp
pusha
pushl
jbe
int3
sub
jg
pop
jl
adc
add
mov
add
movsb
and
mov
out
pushf
and
ds
adc
imul
ret
and
push
cmc
test
push
xchg
mov
daa
and
cmpsl
jne
pop
sti
out
cwtl
loope
add
cmp
fldenv
mov
add
mov
dec
push
push
jae
xchg
in
leave
fwait
cmp
mov
inc
in
fwait
std
aaa
ss
push
mov
cmp
orl
mov
add
cmp
mov
xor
int
fwait
ds
mov
cli
add
jmp
inc
addl
or
push
jb
das
mov
popa
in
xchg
push
ja
int3
add
inc
ret
and
xor
sub
clc
ds
cmp
cmp
mov
bound
lods
mov
push
mul
mov
cs
mov
add
add
inc
into
add
inc
adc
mov
inc
pop
add
test
js
mulb
xor
xchg
xchg
es
jmp
and
mov
sbb
xlat
mov
jae
aad
scas
push
push
adc
aad
adc
fisttpll
lods
and
das
stos
xor
add
test
iret
jae
pusha
sbb
ss
outsl
inc
aam
cmp
or
adcl
xor
lods
xor
add
add
push
cmp
jbe
sbb
nop
std
addb
dec
pop
add
cmp
pop
and
mov
jp
lods
add
pop
lods
jmp
ret
icebp
arpl
fs
jp
mov
jno
push
das
cltd
pop
cmc
and
das
faddp
hlt
test
je
out
mov
add
cmp
loope
push
incb
xchg
je
dec
je
getsec
arpl
dec
xor
das
pop
cmp
nop
mov
push
inc
sti
mov
xchg
add
int
jge
and
popa
sbb
fsubs
dec
sbb
add
lret
dec
push
pop
js
jmp
and
mov
mov
aad
jecxz
inc
adc
push
ja
inc
push
xor
xor
leave
fidivs
mov
adc
xchg
scas
dec
imul
dec
sahf
add
jecxz
clc
and
data16
cmp
xchg
jns
pop
xchg
iret
dec
popf
cs
out
cld
mov
popa
mov
aad
iret
test
inc
jb
inc
fsubs
mov
out
es
cmp
inc
and
dec
xor
or
out
push
xor
ret
in
pop
cmp
jmp
cmp
add
add
mov
dec
push
mov
cltd
out
cltd
jp
cmp
cld
sbb
mov
sub
add
aam
lahf
xor
sub
aam
dec
loopne
test
push
mov
add
xchg
das
test
mov
add
mov
add
fnsave
adc
pop
pop
into
test
push
mov
push
enter
das
or
add
xor
mov
aas
imul
add
add
ljmp
mov
loope
add
add
insb
add
scas
push
test
cmpl
dec
dec
sti
push
pusha
lea
jae
out
lock
add
or
xor
lock
adc
mov
mov
mov
ret
add
sbb
std
add
mov
inc
cltd
jl
ret
add
lds
rolb
push
add
in
pop
enter
cmp
and
mov
add
add
imul
push
loope
adc
pusha
sahf
in
sbb
arpl
jb
das
cmpsb
aaa
sub
inc
loopne
add
in
pop
cmp
mov
subl
ds
add
add
out
add
jb
xchg
sbb
add
sub
dec
aaa
pop
inc
ror
cmpsl
scas
addr16
lcall
fimuls
push
int3
testl
add
cmpsl
repz
inc
inc
in
sub
adc
test
or
add
aaa
sub
inc
mov
push
adc
xchg
pop
out
push
dec
daa
fistpll
xchg
pop
subl
ja
imul
pop
int
xchg
pop
lret
mov
jae
mov
add
pop
insb
sbbl
int
iret
fisubs
ljmp
inc
nop
add
aaa
fs
jp
or
sbb
mov
mov
add
xor
adcl
scas
add
cltd
sub
loope
pop
mov
scas
push
jno
shr
aaa
push
insl
pushf
dec
push
clc
mov
aaa
mov
fsubr
aaa
mov
stos
push
fdivs
andl
mov
add
das
mov
pop
push
ljmp
sahf
testl
movsl
mov
nop
push
pop
xchg
out
test
out
iret
add
loopne
outsl
ret
addb
fnstcw
sysret
nop
and
jae
fwait
sub
dec
js
out
add
mov
add
pusha
int3
cmp
add
pop
clc
cmp
dec
repnz
cs
xchg
adc
rcr
inc
out
lret
fs
add
inc
push
push
sub
jmp
add
add
mov
hlt
mov
add
cmpsb
jge
inc
lock
mov
or
or
add
xchg
in
arpl
mov
add
add
ljmp
mov
or
add
mov
xor
and
mov
cmp
clc
ret
jne
jg
outsb
insl
mov
inc
xchg
add
push
sub
mov
inc
sub
nop
scas
icebp
add
repz
xchg
add
adc
mov
xchg
jb
aad
and
ss
mov
sub
push
add
es
loope
pop
push
inc
jb
mov
add
sub
sub
mov
mov
add
sbb
hlt
cld
fimull
inc
dec
das
jno
cli
sub
xlat
clc
in
inc
add
mov
add
stc
dec
add
add
mov
int
les
add
inc
inc
or
cmp
cli
mov
bound
cwtl
popa
test
add
cmp
mov
xor
dec
movsl
mov
pop
mov
add
sub
cmpsl
jne
mov
sbb
and
add
data16
mov
out
call
insb
pop
sub
push
xchg
xchg
mov
mov
out
xchg
xor
pop
stos
inc
outsl
dec
fistpll
xchg
mov
and
hlt
push
out
cmpsl
sbb
or
sbb
add
push
sub
inc
sbb
data16
jno
add
add
icebp
push
nop
and
loope
cs
add
orl
outsb
aaa
out
test
adc
and
push
xchg
aam
xor
adc
add
fwait
imul
xor
cmp
test
inc
out
mov
fs
imul
sbb
push
xchg
push
mov
cmp
push
sbb
adc
push
xchg
jns
sub
or
add
rol
inc
and
add
das
shlb
mov
jecxz
scas
out
xchg
dec
push
push
cld
sub
aaa
jb
cli
mov
add
add
lds
mov
notl
mov
sub
and
cld
or
add
lret
jne
add
into
cli
loope
es
mov
popa
outsb
mov
dec
dec
add
pop
jbe
pop
add
add
mov
out
push
and
mov
rcl
push
hlt
fisubl
mov
or
mov
sbbl
add
push
xchg
test
adc
shll
xchg
jns
mov
adc
sbb
hlt
sbb
push
mov
rolb
add
pop
sahf
into
push
add
sti
data16
mov
xor
pop
lcall
leave
cs
cmp
testb
adc
rolb
in
mov
add
fisttps
xchg
push
xor
adc
fs
pop
xor
sti
pusha
sub
or
cmc
lcall
movsl
int3
pop
add
je
mov
add
inc
jmp
cmp
pop
test
cmc
sarl
in
mov
iret
push
push
out
or
add
enter
test
add
fucomi
and
fs
sbbl
mov
mov
xlat
add
pop
movq
push
add
decw
add
xor
xchg
push
test
sbbl
lcall
mov
push
pop
pop
mov
push
jp
es
sahf
fimull
pusha
jp
fldl
mov
add
pop
sub
mov
add
roll
fwait
icebp
lret
std
loope
cmp
addl
cltd
subl
add
insl
lods
push
jl
pop
lods
pop
jne
int
jecxz
mov
add
arpl
sbb
jmp
inc
add
lea
popf
add
lcall
cli
pop
notb
adc
and
jno
fstpl
hlt
mov
out
mov
out
mov
push
and
outsl
xchg
fcompl
enter
sub
xchg
xchg
ja
add
sbb
loope
cli
jnp
ret
leave
inc
repnz
add
add
sub
cld
pop
out
movsb
inc
outsl
push
push
dec
or
or
add
movb
pop
ret
add
xchg
out
xchg
add
repnz
dec
out
iret
or
add
scas
icebp
nop
mov
add
push
ret
fsubl
leave
cld
and
xchg
add
add
and
int3
mov
add
aas
push
adc
ja
or
bound
fmuls
addr16
mov
push
and
iret
stc
loopne
das
xchg
dec
push
add
inc
sarl
clc
fs
xor
loope
arpl
popa
fiaddl
push
dec
aaa
repnz
add
xchg
clc
cmp
je
popf
mov
test
in
int3
add
add
adc
dec
mov
add
fbstp
gs
cmpl
inc
sub
pop
pushf
iret
mov
or
out
push
adc
pop
lock
sbb
insl
push
and
jbe
pop
pop
gs
inc
jge
incl
add
push
xchg
jl
xor
cmp
push
dec
and
aam
cmpsl
insb
and
aam
bound
or
lret
cmp
fs
stos
stos
jl
xor
xor
test
ficoml
and
dec
jb
sub
scas
add
inc
mov
in
and
sbb
loop
mov
mov
aam
adc
std
add
add
ljmp
mov
popf
sbb
inc
add
imul
jp
sub
out
mov
push
ja
call
add
dec
mov
fists
or
add
and
mov
add
out
mov
and
mov
add
ficomps
test
sub
add
cli
xchg
inc
sbb
add
mov
mov
mov
jae
test
push
mov
jg
mov
and
movsb
sub
add
jb
pop
add
stos
inc
dec
loope
std
inc
xor
clc
cmpsb
js
xchg
out
out
mov
sti
mov
xor
mov
push
add
js
add
adc
fwait
jnp
dec
ss
and
and
popa
inc
cmpsl
mov
mov
sbb
cmc
jae
loope
jge
fmul
in
outsl
push
shl
test
adc
push
inc
push
add
gs
push
ret
or
add
mov
int
das
cmp
scas
push
lods
arpl
pop
shl
and
add
add
xchg
sbb
ja
dec
int3
jns
add
pop
push
stc
or
ljmp
lret
mov
loop
add
ljmp
lahf
jmp
test
pop
sub
mov
and
xor
sbb
or
add
repnz
lods
adc
mov
and
fadds
add
cmc
jge
mov
xchg
xchg
inc
inc
push
scas
xchg
bswap
fiadds
add
imul
orl
ret
roll
fsubr
jnp
xor
arpl
push
loope
jnp
cli
les
add
popa
dec
or
xchg
es
xor
mov
push
push
xchg
lods
inc
adc
push
test
add
add
dec
or
ljmp
mov
in
mov
and
stos
leave
stos
aaa
cmp
addr16
subb
cmc
mov
test
add
mov
push
gs
mov
mov
test
pop
or
cltd
rcr
mov
jo
dec
rolb
gs
xchg
or
add
add
jbe
ret
xor
push
das
mov
int3
push
add
adc
rclb
add
sbb
mov
fwait
jl
xchg
mov
js
or
add
cmpb
lock
leave
inc
xchg
inc
pop
lret
xor
fwait
outsl
jge
lods
mov
xor
aas
lret
add
daa
lods
push
in
hlt
cmpsl
cltd
mov
add
xor
data16
ror
add
xchg
lods
sub
nop
outsl
call
push
decl
mov
adc
lret
fldl
add
add
std
inc
sarl
les
add
ljmp
testb
fistpll
das
add
fdivrl
mov
inc
cmp
cmp
add
inc
repz
add
and
xchg
int3
movsb
add
arpl
pop
jo
lock
loop
roll
add
add
pop
add
aaa
jge
cmp
jno
sarb
add
mov
add
and
daa
xchg
das
nop
addb
call
loop
sbbb
push
call
imul
dec
sbb
repz
fwait
adc
int3
mov
pop
dec
lahf
xchg
incb
cld
mov
nop
in
xchg
jg
push
movsb
or
mov
shlb
lcall
roll
jnp
loop
add
add
push
add
jne
add
cmpsl
andb
adc
jp
mov
cmp
jmp
leave
jl
sbb
add
pop
xor
mov
pop
dec
lea
xchg
add
push
pop
and
jg
sbb
gs
mov
add
push
lock
inc
jge
les
and
insl
cltd
lock
xor
divl
fsubrs
stc
mov
inc
ficompl
je
sbb
daa
or
add
cwtl
fstl
out
outsb
aas
je
cli
push
es
add
scas
push
subl
xor
jp
out
bound
fidivrl
stc
inc
dec
and
jecxz,pt
cld
and
jmp
mov
and
dec
hlt
add
clc
sbb
cmp
cmp
adc
loop
mov
mov
in
xor
mov
imul
jno
push
aas
scas
dec
test
sub
je
sbb
mov
popa
sti
jno
sahf
jae
inc
or
add
mov
mov
add
xor
sbb
xor
dec
int3
add
mov
xor
jle
imul
sub
add
pop
add
inc
and
enter
clc
sbb
add
cmpsl
pop
sub
add
pop
add
popf
movsl
xor
jge
pushf
bound
xor
add
into
jns
les
add
lret
ret
push
cmp
insl
xor
mov
sahf
mov
pop
loopne
out
test
leave
stos
sbb
cli
fwait
dec
outsl
pop
fs
sbb
imul
aad
adc
fstl
pop
cmp
mov
ljmp
inc
aad
add
ret
loope
faddl
rcrb
fs
lcall
add
out
sti
addr16
xchg
push
pop
xor
push
pop
adc
into
mov
rcrb
sbb
popf
xchg
sub
xor
push
or
add
mov
test
movsl
in
adc
dec
nop
mov
push
insb
into
in
and
xchg
jge
sbb
sarl
shlb
xor
push
and
and
shr
dec
adc
les
add
push
jbe
and
jle
jg
jno
and
sbb
nop
inc
arpl
add
frstor
sti
add
adc
cltd
ja
lods
fisubl
imul
movsl
mov
imul
dec
repz
dec
mov
out
mov
add
add
xchg
xchg
dec
js
mov
comiss
xor
push
arpl
test
icebp
xor
loopne
loop
int3
sldt
push
pop
and
sub
add
pop
dec
stc
js
inc
inc
in
icebp
push
add
stos
mov
and
push
js
fs
addr16
inc
pop
je
xchg
inc
xor
outsl
sbb
inc
inc
push
lret
xchg
or
add
jmp
incl
add
mov
fnstcw
sbb
lcall
inc
testl
add
add
xchg
fsubl
mov
xchg
inc
scas
add
imul
push
std
je
xor
daa
xor
leave
cltd
mov
or
lret
std
loopne
shlb
repz
negl
std
sti
aam
addl
gs
xchg
andb
add
add
inc
sub
or
add
mov
clc
gs
dec
leave
push
stos
in
jecxz
mov
add
add
mov
mov
sbb
add
cmp
out
test
push
mov
adc
and
fwait
mov
jmp
pop
push
and
cmp
movsb
jg
in
test
lret
add
stc
scas
add
add
mov
int
cmp
bswap
pushl
shlb
add
inc
fildl
add
dec
sub
xor
dec
insb
add
gs
add
xor
clc
mov
or
dec
lret
jge
adc
mov
pop
xchg
pop
cwtl
adc
mov
add
jb
mov
out
inc
sbb
pop
xor
add
add
xchg
xchg
add
and
and
mov
pop
std
push
es
fstps
inc
addr16
sbb
xchg
insl
and
leave
daa
mov
jmp
je
lcall
rcll
mov
add
lods
mov
fadd
mov
out
push
dec
iret
lret
iret
sti
loope
dec
js
jge
hlt
or
pop
in
push
iret
inc
pop
add
jp
mov
adc
add
leave
xor
jae
lock
xchg
jno
cmp
sbb
pop
call
push
movsl
pushf
lds
fistpl
lods
xchg
sub
jmp
clc
mov
adc
push
rolb
enter
cs
dec
leave
jmp
aad
sub
stc
popa
repnz
negb
lds
scas
pop
pop
punpcklbw
mov
mov
cmpsl
in
stos
adc
add
shrl
push
or
add
sub
ret
add
sub
adc
clc
fs
bound
mov
add
push
fsubl
arpl
push
arpl
fdivrp
jae
ret
dec
xchg
loope
lret
jl
fnstsw
mov
add
in
xchg
rcr
add
scas
xor
scas
xlat
xchg
cmp
or
push
xchg
fnstcw
mov
add
or
ss
sbb
xchg
das
jmpw
nop
sbb
sub
add
mov
imul
xchg
pop
mov
lods
inc
xchg
es
jne
into
mov
sbb
jmp
push
mov
or
cmpsl
xor
add
in
mov
lahf
mov
cmc
inc
xor
out
gs
fs
jl
pop
xchg
mov
inc
jbe
int3
add
or
add
in
dec
testl
sbb
dec
dec
insb
lods
ret
add
pop
out
mov
lds
and
cli
add
sti
cltd
xchg
cmp
inc
out
add
mov
test
add
insb
lock
jnp
imul
lcall
cmc
lcall
lret
test
add
push
movsl
stc
mov
pop
mov
pop
loopne
cmpsb
in
call
or
add
jno
lea
sbb
and
popf
div
lret
pop
jbe
jae
push
mov
lret
add
add
add
add
add
sbb
out
or
add
add
in
cmpsb
adc
inc
leave
sbb
pushf
xchg
pop
jge
xchg
jg
adc
jp
fwait
andb
test
out
fisubrs
cmp
lods
rol
add
cs
add
sbb
jb
jp
outsb
mov
test
jnp
mov
add
add
mov
sub
jmp
scas
sbb
pop
cmp
test
stos
in
aaa
jb
pop
sbb
fldl
add
ret
test
out
mov
insl
xchg
cmp
and
lds
add
imul
std
push
inc
imul
aaa
fldt
inc
dec
add
test
push
mov
ret
cli
sub
popf
xor
inc
ljmp
cmc
or
push
sahf
enter
add
xchg
pop
mov
data16
test
gs
into
hlt
test
inc
ss
arpl
push
adc
cmc
aas
out
pop
xchg
dec
push
add
cmpsb
je
add
add
jns
and
jnp
inc
rolb
add
popfw
cmp
dec
aam
in
mov
nop
push
gs
subl
xchg
cmp
shlb
adc
lock
push
repz
xchg
push
movsb
add
add
sub
insb
out
mov
add
repz
fadd
pop
lods
repz
cli
dec
dec
fnstcw
nop
imul
push
cli
lock
ja
leave
mov
jae
add
push
sbb
or
lret
leave
mov
mov
jecxz
outsb
cmp
add
dec
or
jecxz
pop
jnp
sub
adc
ficomps
js
cmpsl
add
jge
out
int3
std
add
mov
add
or
or
xchg
mov
mov
stc
xchg
idivl
daa
test
sarl
inc
clc
add
jbe
das
add
sahf
sub
aad
mov
add
jg
and
inc
add
mov
jne
jne
pop
cld
rol
xchg
lds
mov
add
ret
in
and
repz
fld
lret
aam
imul
xorl
rolb
add
mov
imul
add
mov
sbb
das
adc
int
add
stc
add
jmp
mov
es
xchg
cmpsb
inc
lods
add
fs
dec
iret
sub
add
arpl
and
dec
add
and
jae
popf
add
imul
xchg
mov
in
fmul
adc
add
sbb
loopne
movsb
mov
test
or
je
inc
add
in
cmp
ds
fdivrl
pop
les
add
lock
pushf
test
pop
mov
mov
sbb
cmp
dec
xorl
mov
push
add
pusha
cmpb
stc
jb
mov
sbb
jb
push
cld
xor
out
roll
decl
fstl
cli
push
add
mov
ret
add
add
fildl
add
push
pop
in
cwtl
pop
clc
adc
cmp
add
pusha
add
int3
inc
add
mov
push
stc
sbbb
and
pop
in
jne
test
sbb
add
mov
add
pop
cmpsl
or
add
sarl
out
jo
insl
popf
ljmp
jp
pop
jo
cmp
add
push
scas
push
lcall
stos
jae
dec
mov
ret
hlt
mov
inc
repnz
addl
fildl
inc
lcall
xor
add
mov
shrl
sub
push
or
add
repz
push
cmp
in
jl
ret
inc
mov
lret
add
or
add
int
adc
rorl
push
add
shrl
adc
push
xchg
push
pusha
and
mov
cmp
jp
dec
lock
sub
decb
add
add
sbb
push
hlt
ss
push
jno
rcrb
mov
jo
addr16
mov
fcoml
mov
and
imul
fmull
push
clc
add
add
cmp
mov
bnd
mov
add
outsl
ja
dec
popf
cmp
jae
push
stos
sbb
xor
int
add
add
sbbb
jp
xchg
add
mov
xchg
mov
rcrl
xlat
cmp
xchg
adc
push
adc
arpl
add
pop
testl
push
mov
jp
mov
add
and
cmp
fbld
ret
fsubs
scas
fs
movsb
outsb
int
mov
out
in
jo
or
and
js
loopne
sldt
nop
test
testl
or
add
push
cmp
adc
mov
add
sub
and
xor
pop
sahf
in
inc
cmp
add
out
icebp
mov
jno
popf
fmuls
add
and
mov
gs
fisttpll
add
das
pop
pop
lret
or
sahf
into
pop
jns
pcmpgtw
incb
mov
add
pop
add
add
jge
xor
mov
icebp
lods
push
stc
push
adc
dec
pop
fwait
mov
rorb
adc
scas
xor
xor
icebp
test
add
nop
push
sub
leave
addb
dec
loop
or
insl
adc
sbb
dec
pop
add
stos
cmpsl
insb
cmp
sbb
jns
add
add
cmc
gs
idivb
add
iret
rol
movsl
add
xor
add
lea
mov
loop
push
cmp
mov
and
shl
push
adc
imull
div
insb
push
mov
jb
push
sahf
cld
mov
mov
iret
popf
popa
movsl
fdivp
out
movl
mov
cmp
cmpsb
aaa
sbb
or
repz
iret
lret
mov
adc
pop
xchg
hlt
jecxz
sub
and
fdivrl
pop
iret
sub
add
add
mov
mov
leave
xchg
push
mov
mov
pminsw
sub
sbb
xor
fsubrl
loop
mov
adcb
add
pop
test
incb
add
ret
jge
push
pop
ret
leave
scas
sub
add
repnz
pop
bound
movsb
fwait
into
rcll
js
int
mov
xor
ds
pop
mov
das
add
ret
jo
jmp
mulb
sub
mov
add
push
das
sti
and
xchg
and
add
add
xorl
add
push
and
into
insb
shll
test
cmc
int3
call
cmpsl
repnz
adc
arpl
insb
cmp
and
push
dec
ja
ret
aas
ljmp
add
movsl
fidivs
stos
push
into
mov
xchg
xor
jl
add
cli
xchg
lret
adc
add
loope
lcall
add
popa
imul
not
in
xorl
je
faddl
out
sub
mov
nop
xor
add
ljmp
add
mov
rcll
sub
push
sub
mov
stos
mov
xchg
dec
fprem1
ret
out
xchg
adc
cmc
jns
add
add
inc
cld
add
cmp
rolb
add
scas
sbb
add
dec
dec
cwtl
mov
and
push
mov
hlt
inc
loopne
dec
dec
fwait
lahf
std
in
pop
push
mov
rolb
cmc
push
sub
sub
pop
mov
rorb
rolb
ds
popl
movb
out
inc
test
add
outsb
loopne
jp
mov
lret
shll
push
add
add
xchg
lret
add
adc
lahf
loop
dec
xlat
cmp
je
pusha
ret
and
add
mov
enter
fsubp
xchg
mov
cmpl
pop
fidivrl
outsb
or
add
shrb
in
mov
addr16
bound
movsb
iret
negb
test
ret
jnp
ja
mov
dec
mov
add
jmp
imul
and
mov
dec
jb
sub
out
movsb
idivl
in
addb
cmp
pop
jns
push
xchg
cwtl
mov
sub
mov
pop
add
fs
add
push
add
test
add
mov
shr
push
dec
push
and
add
mulb
sub
add
fxch
repnz
sarb
aad
add
mov
jmp
test
mov
add
cs
cmp
cmp
pop
mov
aaa
je
pop
inc
nop
add
add
ds
fstl
fdivrp
notl
add
icebp
in
push
aas
loope
jne
mov
cmp
repnz
leave
addr16
hlt
add
mov
pop
mov
add
outsb
pop
cmp
aaa
testl
xor
cmpsb
add
jecxz
inc
add
and
stos
and
iret
jne
xor
add
mov
into
mov
int3
mov
add
stc
arpl
add
mov
vmptrld
cmp
add
enter
dec
cmp
mov
mov
stc
in
adc
stos
add
add
cmp
lock
add
pushl
xor
push
dec
mov
jne
mov
push
daa
dec
add
add
push
or
outsb
mov
mov
add
mov
inc
mov
addr16
pop
test
push
add
fs
hlt
mov
xlat
inc
jns
mov
popa
cs
xchg
scas
ror
add
inc
dec
mov
add
lcall
add
insb
or
mov
add
sub
dec
pop
jge
ficoms
pop
ja
test
mov
xor
cwtl
lret
mov
inc
mov
inc
xchg
push
mov
sbb
clc
fstpl
sub
movsb
mov
fiadds
test
push
xchg
adc
lods
or
lret
ja
pop
movsb
mov
ss
shr
int3
jp
add
lcall
and
jnp
fstpl
jg
push
and
int3
cwtl
add
add
lods
push
enter
pop
orb
inc
addr16
or
fldln2
inc
push
test
add
pop
insl
insl
mov
sub
and
add
out
inc
les
add
fs
fidivrs
sbb
pop
cli
sub
sub
shl
jno
stos
mov
adc
sub
divl
fisttpl
add
lods
sti
lret
ret
cld
fcomip
outsb
and
jnp
mov
add
andl
push
add
and
rolb
aas
imul
call
sub
mov
mov
imul
sarb
sub
xor
push
inc
insl
add
dec
mov
ja
mov
push
fwait
sti
int
in
call
jb
cwtl
mov
add
dec
cmc
es
pop
fisttpl
rcrl
ds
fimull
sti
out
mov
es
cmpsb
pop
jns
fcomp
imul
xor
dec
push
pop
jmp
pusha
scas
push
rol
cmp
add
mov
and
loope
and
jmp
loop
enter
pop
mov
mov
xor
and
jnp
les
add
vphsubwd
daa
imul
outsl
ret
aam
jl
xchg
adc
jo
cli
pop
add
orl
add
xor
aam
and
cmpsb
scas
sbb
push
mov
sub
cli
lret
orl
popf
cmc
out
cmp
mov
jb
mov
popa
dec
data16
sbb
pop
jne
test
lods
add
aam
cmp
adc
cmc
fucomi
add
into
mov
nopl
xchg
int3
mov
pop
cmp
sbb
ja
clc
insl
insl
lahf
into
adc
add
fcoms
out
add
add
fsubrl
pop
sbb
cmp
dec
scas
add
mov
push
inc
aas
add
adc
bound
add
cmp
xchg
jl
cmpsb
sub
jae
xor
xchg
xchg
push
mov
fsts
dec
and
mov
mov
sbb
pop
mov
lea
adc
add
insl
add
sub
add
mov
cmp
jle
mov
lods
enter
ret
test
cs
mov
icebp
icebp
mov
fstps
fs
es
or
add
cmp
cmpsl
adc
ret
sarb
out
mov
or
inc
adc
and
push
or
cs
leave
outsb
fst
imul
fsub
lods
lret
push
mov
popa
adc
xlat
add
sbb
cmp
mov
cmpsb
test
inc
stos
pop
xor
mov
inc
xchg
jl
and
push
je
push
fcmovnu
rep
xor
icebp
fildl
xchg
add
add
mov
mov
push
cmc
hlt
loop
push
push
or
xchg
inc
clc
jo
call
add
jg
add
cltd
and
push
dec
shll
andb
pop
xchg
out
fmul
xlat
xor
xchg
mov
mov
rcll
add
fldl
push
xor
out
mov
pop
in
xchg
paddd
call
icebp
mov
mov
test
xlat
xor
dec
add
xor
outsb
sub
xchg
push
add
or
xchg
jns
fcmovnu
sub
add
add
pop
add
xor
add
mov
add
add
sbbl
cmp
dec
add
sub
jecxz
popf
out
and
add
sbb
fmulp
push
add
adc
add
bound
aas
adc
pusha
in
scas
nop
movsb
fs
and
xchg
jle
divb
stos
mov
cmpsl
in
add
jbe
pop
adcl
add
add
jo
test
es
push
add
fsts
push
xor
mov
ret
jae
xor
cwtl
in
sub
push
mov
jae
mov
add
push
shlb
lret
imul
repnz
pop
adc
pop
scas
jo
cmpsb
push
xchg
push
and
mov
add
pusha
add
jp
jl
xor
add
outsl
pop
pushf
test
sarb
and
pop
jmp
jbe
sub
and
cs
cs
sub
jbe
sti
jecxz
inc
rorl
js
sub
add
add
or
add
sub
cli
adc
repnz
inc
pop
push
xchg
aaa
sbb
jp
fwait
and
add
ss
push
imul
pop
pop
push
nop
push
push
mov
aas
cmpsl
mov
and
insb
add
mov
popa
pushf
or
sub
in
mov
xchg
adc
daa
pop
jbe
leave
lea
xchg
push
sbb
std
and
sti
les
add
lods
rcrb
lock
movsb
bound
test
mov
jge
mov
pop
movsb
jmp
mov
repnz
sbb
sub
or
push
fdivrs
xchg
inc
popf
arpl
xchg
add
out
adc
into
out
xor
mul
sub
lods
cmpsl
je
std
inc
stos
dec
adc
add
add
add
lds
loopne
out
jnp
sti
sub
lea
loopne
ret
sub
push
sbb
adc
xor
add
mov
jge
mov
imul
add
add
lods
push
pop
div
sub
or
add
xchg
pop
sub
jmp
shrb
and
xor
in
vmread
or
add
dec
sahf
add
add
lock
jae
xchg
pop
jb
into
add
lcall
mov
add
add
test
inc
adc
xchg
add
add
aaa
and
rcl
div
cs
dec
add
outsb
fistpll
enter
push
clc
mov
outsb
fs
jp
add
jge
imul
imul
jmp
subl
adc
add
adcb
cmp
mov
aad
mov
lret
les
mov
lock
ds
test
or
add
jecxz
mov
mov
ja
xchg
sarl
and
xor
mov
je
adc
cwtl
ja
ljmp
jbe
out
push
add
xor
jne
and
imul
das
mov
cld
loope
shlb
xor
add
xchg
jmp
push
xor
jl
dec
mov
pushl
cmp
add
xor
inc
lds
notl
add
test
xchg
jbe
pop
and
inc
mov
adc
add
add
imul
sub
inc
push
mov
divl
loope
insl
add
std
jb
inc
xor
ret
xchg
sbb
shrl
movsl
insl
xor
jp
js
dec
rolb
add
inc
jl
xchg
add
lods
cmp
mov
or
iret
out
pop
dec
imul
les
mov
scas
lahf
sahf
sbb
mov
add
add
cmp
ds
movsb
in
sbb
push
mov
xchg
rorl
stos
fidivrl
loopne
loop
push
cmp
dec
scas
add
sbb
jb
inc
jecxz
jne
pcmpgtd
int
dec
xor
mov
lahf
pop
cs
adc
xchg
dec
fisttpll
nop
in
add
jae
jecxz
dec
ss
mov
test
add
imul
loopne
xlat
jg
fdivr
pop
jae
xor
arpl
add
dec
outsb
pop
add
std
mov
add
or
push
pop
xor
pop
xchg
orb
outsl
mov
inc
add
loope
fs
in
cmpsb
sti
roll
add
or
jns
pop
xchg
mov
xchg
lcall
push
push
shl
enter
fcoms
mov
les
add
jns
adc
movsb
and
inc
mov
add
fisubs
in
loope
cmp
push
adc
insl
xorb
test
xor
push
test
add
out
push
or
out
sub
add
addl
xchg
add
push
shrl
inc
add
jae
mov
push
add
test
imul
pop
add
adc
cwtl
sub
add
mov
mov
xor
add
sbb
incb
add
inc
dec
das
add
xchg
inc
ja
lods
sub
js
rcrb
add
push
leave
sub
aas
testl
mov
pop
or
outsl
mov
add
cwtl
sub
push
lahf
insl
jmp
stos
lea
add
out
jecxz
popf
stos
xchg
or
dec
xchg
xchg
sbb
stc
add
inc
jle
out
push
loop
cmp
dec
out
push
xor
fdivrl
pop
push
enter
movlps
int3
mov
and
mulb
add
xchg
notl
fwait
mov
add
or
pop
add
mov
cmpsl
lret
in
cli
dec
insl
cmp
add
push
and
addl
das
inc
outsl
add
movsb
xchg
aaa
mov
adc
add
add
cmp
enter
push
mov
sahf
pop
ficoml
imul
popa
sbb
outsl
daa
cmpsb
xor
mov
pop
fisttpl
dec
adc
xor
add
mov
ljmp
add
sub
mov
mov
pop
mov
dec
div
mov
lret
mov
sub
adc
imull
popf
sub
adc
aam
or
add
in
dec
mov
add
psubd
sti
shrb
add
add
test
mov
fs
shrl
xor
xchg
xchg
popl
mov
jae
insl
add
mov
aad
add
cmc
and
pop
imul
mov
pop
jno
fdivrs
call
scas
lods
out
fcom
fidivl
insb
lret
bound
cmp
inc
or
adc
cmpsl
insb
fsubl
test
add
stos
movsl
cmp
lea
mov
pop
push
push
adc
adc
adc
in
ret
and
dec
std
in
test
aad
icebp
sti
pusha
insb
leave
xchg
pop
mov
in
sbb
dec
rolb
out
out
add
xchg
jl
mov
ror
xlat
lret
lds
jecxz
pop
xlat
fcomps
sbb
mov
ja
and
add
shll
frstor
dec
fstl
ja
loopne
xchg
mov
popf
adc
stc
rcrb
andl
push
into
mov
inc
add
push
adc
or
fistl
frstor
or
in
mov
add
fwait
adc
out
or
mov
and
sub
inc
leave
push
add
frstor
cld
cmp
jmp
arpl
push
aam
inc
incb
add
inc
aas
repz
shll
mov
rolb
data16
rol
cwtl
push
jae
roll
add
sub
push
iret
sub
lods
inc
rolb
add
jp
cs
test
jge
mov
lret
sbb
dec
aas
add
mov
fistl
sbb
dec
lods
and
push
ret
jge
clc
push
icebp
or
mov
xor
fwait
dec
or
jmp
dec
test
dec
add
mov
inc
push
adc
sub
into
sub
push
movsb
pop
call
add
jnp
shrl
fimuls
add
popf
mov
imul
insb
mov
add
and
rclb
repnz
and
push
gs
mov
idiv
roll
push
add
inc
loope
ret
fwait
xor
jo
and
add
in
adc
inc
inc
dec
add
outsl
jae
loop
lock
jmp
lods
repz
xchg
cmp
and
lret
xor
rorl
dec
add
insb
fs
aam
or
mov
add
xor
cmp
or
add
dec
or
mov
add
add
movzbl
jp
dec
stos
add
test
xchg
adc
adc
test
daa
out
and
mul
xchg
add
xchg
inc
sub
pop
in
into
pushf
mov
push
and
sub
xchg
dec
inc
add
add
outsl
icebp
pusha
jb
pop
arpl
pop
mov
dec
add
std
test
mov
in
dec
add
add
sbb
add
gs
ja
inc
data16
sbb
inc
xor
add
pop
inc
sbb
inc
aaa
js
pop
stos
out
xchg
add
in
pop
jp
xor
jp
push
and
add
add
ret
je
xchg
jno
cmpb
fstl
jmp
aas
insl
pop
push
jns,pn
xchg
mov
or
enter
push
add
mov
dec
faddl
add
adc
fcos
sub
add
add
add
mov
add
ret
cs
jmp
imull
push
mov
mov
add
cmpsb
lods
jl
mov
add
test
add
int
add
ret
sbbl
fiaddl
add
test
dec
incl
add
js
cmpsl
jge
pushf
cmc
je
mov
cmp
lahf
nop
cmpsb
outsb
xorb
fldt
outsb
cmp
out
jne
push
pushf
jns
add
jns
xchg
jno
aas
add
lahf
dec
add
addb
add
cli
test
arpl
rorb
addr16
jne
xlat
scas
jns
loope
sub
add
add
lds
add
add
test
add
cmp
add
add
add
fimull
add
jno
fisubrl
jb
test
mov
jno
jne
flds
add
bound
xchg
push
outsb
movsl
fistpll
xor
jbe
shrb
cs
jno
fbstp
xchg
outsl
outsb
lret
fidivl
sub
add
xchg
jne
sbb
jl
test
add
test
inc
andb
add
or
cmc
fidivrl
addb
movsl
push
movb
add
xchg
mov
cmpb
jae
sbb
jb,pn
movsb
add
test
jge
lock
imul
subb
xchg
subl
pop
sub
test
popf
push
sbb
outsb
sub
jne
cld
fldt
outsb
fcompl
mov
jno
sbb
lods
test
add
fidivl
jb
aad
outsb
arpl
movq
test
imul
add
add
test
add
test
inc
addb
add
add
test
add
sbb
inc
cmpb
jae
rorb
mov
sbb
mov
jge
stc
shrb
outsl
pop
test
test
mov
imul
es
aam
jnp
sbb
sbbb
or
icebp
jnp
sarb
sbb
jae
pop
add
xlat
jne
add
scas
jb
shr
jle
scas
scas
insb
pop
popf
xchg
insl
mov
jae
imul
fisubs
jb
aam
jb
ret
and
add
inc
jns
pop
imul
pushf
mov
insb
arpl
data16
mov
jbe
aad
jne
shrl
dec
lcall
fstps
sub
sahf
rcll
jb
fidivl
xor
jo
pop
js
sub
aad
or
add
or
test
add
aad
jae
aam
outsl
pop
fwait
pop
fwait
cltd
insl
scas
aad
jae
aam
insb
xor
and
getsec
jp
test
add
rorb
jp
cwtl
add
aam
jo
roll
sbb
add
aad
jne
rcrb
xorb
inc
add
jae
fldl2e
jae
fwait
sahf
jo
aad
addb
fcmovnbe
mov
add
lret
jae
pop
mov
jae
aad
jo
aad
jb
aad
jae
aad
jae
idivl
jae
aad
jae
aam
jae
lock
movb
jb
aad
jae
aam
jae
negl
jae
cmp
cmp
add
aam
jb
aam
jb
aam
jb
xlat
pop
jno
aam
jb
aam
jne
aam
jb
dec
jne
xlat
inc
incb
add
in
je
ljmp
xlat
xor
popf
jne
out
add
jp
push
popf
jo
fidivl
cwtl
popf
jo
xor
add
jp
and
jge
in
fidivl
xchg
jge
push
fstpt
ds
pop
je
adc
jo
pop
jo
fistpl
cmp
mov
in
jb
sub
ss
aam
jb
aam
rclb
add
add
xor
aam
sarb
and
or
aam
je
in
push
jb
aam
jb
or
pop
jno
repz
aam
jne
sbb
out
add
rclb
jne
jae
sbb
js
sbb
outsl
les
jo
fwait
and
jno
sbb
jns
rcrb
jnp
shlb
flds
add
rcr
add
int
ret
jns
xchg
jno
dec
je
cltd
pop
js
shl
jae
aam
rorb
add
or
aam
jns
sub
roll
add
sub
mov
cmp
sarb
ror
add
sub
jp
jmp
mov
pop
aam
jns
fdivrs
xor
jge
adc
jge
loopne
jle
push
fwait
pop
jno
aam
jb
fcomp
je
fcmovne
je
out
dec
cmp
add
aam
jne
lea
jb
aam
jl
jmp
outsb
rcl
add
outsl
ja
cs
pop
add
leave
aad
jne
rorb
clc
imul
add
orl
shrb
push
mov
lods
or
jmp
imul
sub
jg
sub
shrb
add
aam
jno
fwait
sub
aam
jno
pop
icebp
push
mov
pop
add
insb
bnd
pop
add
add
jb
adc
jb
fwait
or
add
insl
andb
insb
sub
cwtl
and
rolb
add
pop
cmpsl
jno
scas
test
sbbb
sbbb
add
jle
mov
outsl
out
jl
pop
cmp
ret
add
les
add
mov
pop
push
sarb
ja
push
rolb
mov
add
mov
add
sub
pop
add
ljmp
mov
add
xorl
shlb
add
sub
rcrb
add
push
aaa
rol
add
push
aam
adc
outsl
adc
add
xchg
sub
jb
cwtl
popa
imul
jo
mov
fcom
mov
sbb
jbe
push
xorl
std
jno
jb
jae
push
lret
lods
pop
jbe
pop
outsl
dec
es
leave
ja
xchg
pop
test
mov
dec
jp
jg
hlt
fsubrs
pop
mov
pop
inc
dec
insb
bound
jns
dec
nop
outsl
imul
add
outsb
add
add
fldl
add
sub
les
add
pop
fmuls
rorb
xchg
sub
jne
push
js
xor
jbe
push
fnsave
mov
lods
cmpsl
outsb
jg
sub
shll
cwtl
test
sub
insl
mov
or
incl
add
pop
cmp
inc
xor
xchg
incl
add
bound
add
cs
je
adc
jns
jge
xlat
add
shrl
mov
push
mov
shr
add
add
push
cmpsl
pop
jae
test
jns
sub
push
subl
subb
out
add
mov
add
or
add
data16
cmp
xchg
push
xchg
stos
pop
push
mov
cltd
jle
sbbb
xchg
adc
flds
add
cltd
adc
mov
pusha
cwtl
xchg
jl
and
or
add
ficomps
fsubrl
test
add
xchg
or
lahf
pusha
or
add
pop
insl
cmp
jne
in
push
in
lcall
inc
loopne
icebp
out
push
faddl
add
sarl
out
add
add
pop
cmp
jo
stc
js
dec
and
mov
cltd
mov
cltd
ficoms
sub
add
jb
jnp
add
sbb
pop
sub
mov
orb
out
pop
xchg
sbbb
leave
bndstx
fucomp
adc
stc
add
add
cmp
movsl
aaa
repz
aaa
ficoml
push
lea
add
xchg
dec
dec
inc
loope
je
jmp
cmpsl
lret
out
dec
jmp
loopne
mov
into
xchg
js
push
out
outsl
jecxz
loopne
pop
dec
or
add
insl
loop
outsb
in
loopne
jecxz
insb
pop
push
jb
js
inc
repz
out
setns
pop
lret
lret
in
test
add
mov
call
testb
add
sub
call
jmp
in
mov
mov
add
jo
mov
add
int3
lcall
fs
test
fsubrl
and
icebp
js
push
js
repnz
add
add
jo
push
js
add
add
sub
enter
push
fs
mov
inc
lahf
add
dec
xchg
sub
enter
cmp
sub
mov
inc
dec
outsb
mov
dec
test
add
jns
pop
gs
ret
arpl
jp
sub
pop
ficomps
fcmovnu
inc
ja
lret
push
sbb
jns
add
fwait
mov
jne
adc
jno
push
call
dec
cmpb
std
sub
pmaxub
imul
test
movsb
das
mov
xor
jne
aam
js
push
fdivr
push
fdivp
mov
mov
add
mov
push
imul
mov
add
ret
sub
inc
add
fisubrs
lea
sub
pop
aad
outsl
push
and
lcall
add
inc
sub
add
mov
jne
rclb
and
sub
jb
mov
and
hlt
push
mov
sbb
data16
lods
jne
cmpsl
push
pop
jbe
xor
rorl
dec
push
jns
dec
add
adc
movsl
outsl
out
push
jno
push
shr
add
dec
aad
lds
jmp
imul
add
add
sub
cmp
add
sub
push
out
pushf
inc
lahf
pop
jae
pop
add
sbb
ret
fists
add
add
ret
imul
add
xchg
and
nop
js
out
aas
jne
aam
flds
add
dec
cmpsb
push
xchg
pop
outsb
test
add
xchg
mov
jb
xchg
in
jno
rcrl
cmpsl
sub
jne
aam
cmp
iret
fdivs
push
push
jns
call
cs
add
pop
jne
aam
xorb
lcall
mov
mov
add
xchg
dec
add
add
add
cltd
sub
add
xor
add
add
push
xchg
jnp
sub
jb
sub
jae
test
add
and
sbb
add
inc
cmp
add
push
jbe
ficompl
addr16
sub
dec
lods
jb
outsb
test
add
jne
push
xor
aad
jb
adc
outsb
jl
mov
es
mov
and
stos
outsb
dec
push
int3
sbb
adc
mov
daa
push
mov
pop
xchg
push
mov
jb
push
jmp
jge
cltd
pop
xorb
jb
push
jns
xor
add
outsl
insl
shrb
mov
jl
addr16
pop
imul
shll
jno
ret
jno
add
jb
adc
mov
cmp
pop
bound
into
jae
pop
out
jb
push
push
imul
insl
in
insl
es
push
jbe
fcoms
addb
jno
push
mov
add
jbe
das
or
push
add
insl
es
sbb
sub
iret
rol
jae
dec
test
add
push
jb
inc
xor
imul
add
jnp
arpl
dec
jb
cltd
xor
cltd
inc
jb
inc
jb
rclb
ja
pop
pop
jno
xlat
shll
lret
push
push
stos
insb
inc
pop
add
adc
jae
xlat
and
sub
fdiv
jae
shll
outsb
in
ja
pop
sbb
jb
xchg
mov
out
imul
jp
into
pop
int
call
insl
outsb
out
mov
jae
push
pop
jb
pop
jb
pop
movsb
push
fidivs
jb
je
sub
pop
jb
mov
addr16
sbb
pop
mov
pop
cmp
jb
xlat
sub
daa
stos
jae
xlat
or
add
jne
xchg
add
jns
lahf
xlat
xor
adc
je
sarb
bound
je
xlat
or
mov
out
xlat
jp
or
add
aam
jae
xlat
pop
jb
xlat
adc
jo
xlat
loope
cmp
pop
jb
adc
inc
out
add
aam
jb
or
jae,pt
xlat
inc
rolb
jb
dec
jnp
pop
jp
ljmp
jb
jno
or
shll
jne
std
add
mov
je
rcrl
je
sarb
je
push
mov
je
rorb
je
xlat
mov
pop
shrb
je
push
outsl
jl
fbstp
sarb
je
push
ja
js
lcall
shl
imul
dec
mov
add
pop
pusha
jns
shrb
add
add
add
or
sub
inc
pop
add
jb
dec
or
dec
add
jbe
outsb
in
and
sarl
inc
enter
jno
sub
jne
aam
mov
add
movsb
mov
add
add
xchg
mov
add
in
mov
xor
jae
sbbl
je
test
add
push
sbb
xchg
add
cmp
xorl
sti
push
inc
dec
ret
shll
jb
mov
push
data16
in
add
jb
dec
cmp
loopne
or
shll
repnz
add
pop
jb
jmp
sahf
insl
into
rolb
jb
mov
jp
cs
insl
lret
and
add
dec
mov
sbb
leave
cld
ret
and
dec
add
add
sahf
insb
add
ret
sar
jbe
inc
test
jecxz
pop
jle
sub
jne
pop
movsl
outsl
or
add
mov
mov
add
jge
out
ret
sar
imul
and
add
js
les
add
adc
testb
or
cs
jg
inc
ret
dec
add
add
jb
inc
and
add
jae
mov
jle
sub
add
pop
add
into
add
cmp
faddl
jg
jmp
outsb
stos
pop
add
add
jb
inc
outsl
outsl
or
add
xor
mov
mov
cmpsb
fcmovb
jne
rclb
add
add
pop
andl
add
pop
cld
jno
pop
cmp
pop
add
sub
inc
ret
xchg
cld
js
dec
cmp
jbe
add
add
xor
sarb
add
pop
cld
je
dec
cmp
dec
add
aaa
dec
sub
mov
add
movsb
add
add
cld
movsb
in
out
test
inc
push
add
movsb
lods
addr16
add
mov
add
add
push
dec
scas
add
js
pop
add
or
ja
push
add
inc
add
add
rol
add
cmp
stos
pop
js
mov
or
add
pop
add
add
dec
add
popf
pop
cmp
sahf
pop
js
popf
push
pop
outsb
and
rcrb
jbe
inc
and
add
jb
inc
pop
jbe
push
sbb
hlt
inc
aad
add
jbe
sar
js
dec
cmp
jb
sbb
into
pop
ror
add
dec
pop
add
mov
add
ja
sarb
inc
adc
scas
jnp
das
ret
jbe
push
scas
outsl
mov
add
jg
sub
inc
add
in
add
add
arpl
das
shlb
inc
cld
add
dec
pop
add
lods
out
adc
inc
testl
or
scas
pop
jne
inc
add
aam
add
adc
shlb
add
outsl
xor
add
pop
add
add
cmp
add
xor
jbe
adc
pop
inc
pop
jbe
pop
sarb
add
pop
cld
jae
sub
xorb
ret
ja
and
cmp
pop
sbb
mov
add
inc
cld
dec
inc
inc
cmp
lock
pop
rolb
cld
insl
in
add
pop
cmp
push
add
jecxz
sbb
fwait
add
push
repnz
add
flds
add
cmp
mov
add
pop
jns
push
outsl
insl
push
add
loopne
add
pop
or
sahf
scas
insl
lret
fadds
add
adc
add
mov
addr16
xchg
js
sub
add
pop
pop
js
pop
add
add
rolb
add
cmp
cwtl
inc
js
popa
pop
pop
imul
shl
add
pop
cld
ja
xchg
add
inc
pop
and
pop
shlb
ja
mov
xlat
add
cmp
dec
sbb
add
leave
add
ja
inc
cld
jo
pop
cmp
mov
rol
add
push
cmpsl
insl
push
lcall
rolb
add
and
add
and
inc
or
add
add
jo
add
pop
or
and
inc
add
cmp
dec
push
add
data16
aad
pop
mov
ss
adc
fcmovne
sbb
into
mov
inc
pop
push
inc
jae
add
shr
add
outsb
pushf
movups
add
add
lret
pop
pop
ret
sub
cmc
sub
mov
and
sbb
inc
and
add
test
push
hlt
test
add
add
xor
aaa
loop
cmc
ss
pop
fs
xchg
into
jns
or
rolb
add
mov
mov
add
gs
outsb
jns
hlt
fdivrs
repnz
mov
add
fimull
fwait
add
je
cmp
test
add
xchg
fmull
add
das
movl
das
mov
add
fildll
and
add
imul
ljmp
add
vmovapd
and
imul
mov
add
cli
ret
add
cmp
push
push
pushf
pushf
sbb
xchg
add
sbb
add
cmp
or
add
stos
idivl
shll
loope
movsl
pusha
sbb
fisttpl
scas
jg
arpl
sub
add
popf
jo
cld
mov
add
xor
fwait
sarb
jg
add
or
ret
pop
inc
fwait
sarb
add
xchg
adc
jbe
rcr
dec
add
and
frstor
xor
jne
adc
pop
lret
insb
loope
iret
and
xchg
lods
cmp
roll
jge
push
push
xor
stc
leave
arpl
mov
orb
add
in
push
cli
aam
test
imul
int3
stos
add
jne
rcll
push
or
mov
mov
or
cmp
mov
iret
pushf
cmpsl
lds
add
add
sbb
add
inc
mov
icebp
add
int3
movb
insl
xchg
xchg
pushf
in
ret
sbb
inc
dec
add
push
clc
rcrl
pop
push
adcl
lds
cmp
adc
adc
mov
jne
fnstsw
rcll
pop
outsl
and
add
mov
lods
or
mov
mov
add
shll
aas
adc
xchg
mov
orb
add
nop
jge
xchg
push
std
jecxz
and
int
jns
int
adc
dec
add
pop
cltd
and
ret
pop
push
int3
dec
add
jns
mov
ja
popa
outsb
sub
repnz
and
jecxz
adc
testb
push
push
push
jne
addb
fs
inc
add
add
lahf
fsubrs
icebp
insl
shll
movsl
fsts
add
sub
outsb
sub
lds
adc
fnstenv
insl
lret
icebp
gs
movsl
push
aas
mov
fisttpl
popa
push
or
jno
pop
mov
push
adc
mov
jae
in
xor
fcmovu
adc
add
xchg
das
push
xchg
ret
add
adcb
pop
scas
les
add
lds
add
adc
int
jne
push
xchg
pop
inc
fistps
push
add
clc
pop
push
push
xor
cltd
push
insb
pop
and
outsl
scas
lret
fwait
cmpsb
inc
lock
and
lds
mov
data16
lods
adc
ret
push
cmp
faddl
push
int3
mov
add
inc
fwait
mov
addb
add
sbb
mov
add
cmp
adc
jbe
xchg
add
jno
ret
cmp
je
sbb
pop
jno
mov
jo
push
sub
or
inc
popa
add
cmp
ret
jl
icebp
rorl
out
adc
push
push
lret
test
add
repz
insb
pop
ror
pop
add
add
xor
imul
sub
sbb
into
sbb
jne
test
add
subb
and
add
das
adc
mov
ret
arpl
sbb
sbb
cmp
add
pushf
push
sbb
lret
dec
xchg
push
pop
or
inc
arpl
add
pop
loope
jbe
jne
pop
jnp
inc
sbb
call
cltd
mov
xchg
jae
or
out
es
and
sub
outsb
or
adc
enter
je
lods
adc
jae
jns
fiadds
or
sbbb
add
dec
add
fisubrl
xor
mov
add
pop
ret
add
pop
push
sub
sahf
add
add
fldenv
sbb
xor
push
jae
das
je
sarl
adc
es
ja
ds
dec
mov
add
jg
dec
push
ror
stos
jns
mov
enter
fxch
and
xchg
jb
jge
lret
xchg
adc
fdivrl
jb
rcll
shll
cmp
add
lret
push
mov
test
add
addr16
rorb
pop
insl
fists
loop
jns
sbb
push
pop
sbb
push
iret
aas
add
cmp
push
cmp
jae
sbb
add
iret
mov
jmp
out
outsb
push
idiv
sub
jnp
adc
int3
fiaddl
add
inc
xchg
add
out
sub
test
fs
cmp
movsl
jo
fistpl
xor
int3
xor
loopne
pop
sbb
jae
jbe
aam
sbb
test
add
arpl
fs
fiadds
int3
mov
add
fnstenv
sub
pop
clc
adc
push
push
and
enter
pop
jb
enter
leave
or
cmp
fistpll
ds
jne
add
add
adc
cld
jns
call
in
das
or
rcrl
mov
xor
inc
incl
add
out
ja
scas
xchg
cmp
mov
push
call
mov
xchg
pop
jns
movsl
jge
fiadds
push
fisttpll
add
mov
lret
stos
insb
sbb
pop
xor
push
les
add
adcl
imul
test
add
add
cs
adc
jecxz
fs
inc
xor
ss
incb
add
adc
fsts
ljmp
shlb
add
fs
add
jne
fmull
jo
cmp
imul
enter
xchg
sbb
fmull
mov
jb
jecxz
scas
adc
lds
pop
les
add
inc
mov
add
mov
sub
add
mov
or
mov
es
sbb
add
cmp
enter
pusha
fs
test
sbb
sbb
fsubrs
std
cld
mov
pop
imul
fiaddl
add
roll
addr16
jnp
jmp
test
lds
roll
xor
sbb
mov
in
pop
lods
xchg
sbb
ficoms
add
outsb
push
leave
jnp
mov
add
add
aam
scas
insl
gs
pop
push
and
pop
icebp
jae
rclb
mov
das
pushf
adc
adc
imul
icebp
add
add
ret
movsb
or
add
sbb
xor
es
adc
add
jl
adc
jns
adc
add
jmp
pop
out
das
sbb
lcall
je
dec
xlat
add
xor
leave
xchg
insb
repz
fcom
or
jae
xchg
mov
add
jnp
xor
jae
pop
iret
mov
aam
mov
cld
scas
lock
add
or
add
inc
fadds
add
outsl
inc
sti
ljmp
pop
icebp
inc
fs
imul
cltd
imul
adc
sbb
ret
aaa
out
jl
rolb
xchg
es
pop
mov
cld
fcoml
lret
dec
or
add
xor
push
hlt
add
sbb
or
add
mov
add
aad
daa
sbb
mov
or
add
sub
movsb
adc
into
mov
in
add
cs
emms
shll
or
add
fnstenv
cmp
add
or
test
jns
jnp
adc
pop
push
xorb
add
filds
add
push
xchg
shr
dec
add
fistpl
mov
outsb
jnp
dec
cli
dec
sub
add
add
pop
pushf
lret
pop
jmp
sahf
or
jl
out
fdiv
out
dec
adc
add
push
imul
out
cld
xchg
arpl
pop
inc
movsl
add
lds
std
or
mov
add
jle
add
cltd
loop
lods
inc
add
loopne
push
enter
jecxz
and
mov
repnz
fldcw
push
jle
or
pop
jnp
fstpl
pop
mov
and
cld
add
int3
loope
add
jne
inc
or
add
andl
push
cmp
add
push
into
jg
adc
jle
gs
enter
mov
shrb
add
aaa
andb
pop
in
mov
jl
pop
sub
pextrw
addr16
ret
loop
push
es
pushf
adc
add
ljmp
xchg
shll
out
movsl
mov
ljmp
sti
pop
ret
aaa
push
mov
sar
jmp
aaa
std
xchg
into
cmp
ret
aaa
jle
aaa
into
jno
lret
into
inc
std
sbb
jbe
je
push
addr16
cmp
add
jge
imulb
imul
and
mov
mov
xlat
cmc
in
sbb
xchg
aaa
js
jge
sub
add
add
outsb
pop
dec
add
add
jne
sub
push
or
or
shlb
scas
popf
stos
fdivs
in
ficoms
sbb
add
stos
ja
xchg
mov
jae
jl
xchg
sbb
stc
js
mov
mov
add
mov
repnz
aad
pop
jne
push
add
adcb
sub
or
or
add
ficoms
into
dec
cmc
in
or
add
loop
lret
repz
in
out
cli
add
inc
cmc
in
or
add
js
iret
nop
lds
cli
add
inc
cmc
lds
push
add
out
jns
lret
adc
jne
in
movsl
jno
push
add
in
jo
xchg
movsl
add
add
and
shll
movsl
lcall
enter
add
movsl
enter
ds
hlt
add
pop
push
cmp
pop
loop
jl
in
jne
in
vandps
cmp
sbb
in
aaa
cmc
add
sub
cmc
pop
lret
idiv
in
repnz
into
sub
in
sar
jns
sar
in
into
in
add
and
adc
scas
in
jo
adc
into
and
int3
or
add
sarl
stos
in
jbe
push
sarb
add
in
aam
and
pop
jge
in
jne
push
shlb
jne
in
movsl
jp
sbb
add
add
xchg
loopne
outsl
push
sbb
adc
add
in
movsl
outsl
cmp
cmp
in
lds
std
rolb
jmp
enter
sti
jmp
inc
pop
cmc
add
or
std
pop
add
loopne
add
in
sar
add
or
in
int3
filds
add
jns
mov
in
scas
clc
add
add
fildl
add
jns
stos
out
add
add
xor
les
add
nop
jns
mov
ror
add
lods
aam
add
jge
and
jne
insb
rol
add
lods
hlt
jne
lods
cmp
daa
pop
jns
test
add
add
lods
movsl
insb
sbb
adcb
fbld
lds
rolb
les
nop
cmp
daa
in
fisubs
add
daa
in
shlb
pop
orb
mov
in
mov
add
daa
in
aam
jns
mov
add
dec
add
daa
mov
test
jns
outsl
sub
jb
push
add
daa
jl
nop
idivl
sub
and
xchg
jb
push
fs
push
pop
jp
sub
repnz
add
shl
insb
cld
insb
cmp
and
rclb
cmp
clc
inc
cmp
push
lds
daa
sarb
lds
daa
cmp
daa
pop
xorb
js
add
daa
pop
cmpb
pushf
adc
xorb
push
test
add
jns
jae
in
outsb
sub
sbbb
insl
push
or
add
jo
xlat
add
nop
jnp
pop
icebp
les
push
inc
xorb
test
add
ja
das
clc
data16
add
mov
add
add
