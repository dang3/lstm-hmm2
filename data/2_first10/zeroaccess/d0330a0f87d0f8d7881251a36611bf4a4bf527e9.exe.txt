mov
mov
ret
mov
mov
ret
cmp
movl
jmp
xor
sbb
sbb
nopl
jmp
mov
xlat
les
inc
in
mov
in
data16
ljmp
push
aas
inc
adc
rolb
dec
ret
clc
loopne
jmp
jbe
cwtl
lds
and
out
mov
mov
jge
mov
loop
stos
xor
int
popf
inc
idiv
sbbl
out
stos
xchg
pop
cmpsl
cmp
or
sub
jae
adc
dec
ss
mov
jne
lret
push
outsb
aam
jle
mov
cwtl
pop
idivl
addr16
mov
xchg
xchg
cmc
cmp
stos
fnstenv
adc
dec
clc
insl
jns
cmp
mov
add
movsb
mov
lods
pop
gs
mov
add
mov
cs
jne
mov
pop
cmpsl
cld
pushf
pushf
bound
sub
iret
pop
push
adc
test
mov
xchg
shl
push
push
adc
aad
xchg
or
dec
mov
loop
das
pop
add
mov
imul
movsb
scas
imul
adc
les
iret
std
jb
sbb
test
ror
adc
or
inc
sbb
jmp
bound
xor
test
dec
xor
vcvtsd2si
jnp
dec
and
xor
and
xor
sbb
cmp
insb
sub
out
ret
cmpsl
cmp
xchg
js
dec
or
stos
fldt
adc
push
sub
and
pop
arpl
add
sub
gs
xchg
roll
xchg
adc
or
loopne
inc
xor
jne
or
adc
pop
out
ret
andb
enter
cmp
adcb
sbb
dec
adc
out
or
bnd
faddl
dec
sub
sbbb
cli
test
inc
cmpsl
xchg
shll
shll
inc
je
mov
popa
lcall
ja
or
aaa
inc
and
jo
or
mov
hlt
jecxz
enter
sub
mov
int3
lret
arpl
in
mov
fmul
loop
outsl
shlb
xchg
cmp
add
inc
stos
mov
cmc
pop
xchg
in
xor
mov
inc
test
scas
add
test
or
das
dec
jg
outsl
clc
mov
pop
fimull
lods
inc
mov
stc
sbb
mov
idivb
dec
loope
rcll
mov
mov
cmpsb
test
test
adc
xor
and
insl
into
popa
and
fld
arpl
imul
xchg
adc
outsb
je
cli
mov
sub
and
jnp
jecxz
and
pop
out
shll
xchg
jg
test
inc
in
loopne
fsubl
js
arpl
xor
mov
test
push
sub
loop
inc
cmpsl
lock
sub
mov
shr
xchg
es
test
loop
or
mov
ret
fisttpl
iret
pusha
bound
push
ja
into
sub
xchg
mov
sbbl
out
pop
fwait
pop
cltd
cmpsb
ret
inc
sarl
cld
inc
jle
xacquire
mov
mov
addr16
pop
xchg
out
cltd
lds
enter
fistpll
popf
jge
xchg
fnsave
das
xor
int3
enter
out
jp
dec
insb
aam
mov
add
sarl
add
nop
fdivs
aad
xchg
push
mov
mov
imul
pop
adc
inc
andb
mov
jns
popf
mov
pop
sub
xor
cmp
sti
test
mov
int3
adc
xor
inc
inc
sarb
ss
in
aas
lcall
lcall
jae
les
repz
jo
jno
or
inc
jecxz
mov
mov
out
insb
ja
aaa
xchg
loop
sbb
fsubrs
xor
sub
std
stos
sbb
mov
push
repnz
arpl
jae
icebp
and
cmp
cld
pop
mov
mov
ret
sti
outsb
inc
fs
xchg
aad
cmpsb
mov
mov
jl
daa
fcoms
push
xor
jl
cmp
cmc
add
or
fnsave
test
std
repnz
repnz
sub
mov
and
pop
test
cmp
mov
ja
xchg
imul
jge
jle
int
inc
push
mov
arpl
xor
lds
aam
fwait
cmpsl
mov
adc
inc
repz
cltd
ret
push
xchg
sbb
jl
or
and
loope
fwait
data16
pushf
xchg
push
bound
mov
jecxz
negl
sbb
cmpsb
xchg
lock
sbb
push
test
xchg
cmpsb
or
mov
test
jnp
pusha
pusha
jb
inc
sbb
clc
jnp
stc
in
hlt
pusha
xor
jle
pop
xor
push
fldcw
lahf
push
pop
cmpsb
cmp
ret
adc
cmpsl
jae
dec
ja
xchg
bound
movsl
in
cld
lret
in
or
xor
aaa
xchg
clc
jnp
pop
inc
push
cmc
push
je
xor
loop
add
mov
mov
sub
in
outsl
and
push
sti
jmp
notl
rcrb
dec
ljmp
xchg
scas
jb,pt
hlt
xchg
push
inc
sbb
popa
addr16
out
out
jno
xlat
xor
lods
dec
lods
or
inc
add
push
sbb
dec
mov
inc
push
filds
loope
jno
cld
fcompl
add
fwait
push
xchg
mov
jne
test
adc
mov
sub
mov
jae
insl
cmp
mov
fnop
sbbb
sbb
inc
clc
call
repnz
in
ds
and
fnstcw
ds
call
sbb
sub
lret
push
shlb
pop
es
test
into
in
repnz
fidivrs
jp
jns
icebp
sar
xor
mov
add
mov
dec
cmpsl
sub
jns
push
ljmp
inc
push
inc
stos
js
les
fwait
icebp
add
xchg
das
in
stos
push
lret
sbb
ds
pushf
xlat
jmp
in
aad
shlb
les
cmpsb
loopne
pop
hlt
jp
cmc
loopne
and
xchg
rcrl
xor
pop
aas
fnstenv
testl
dec
mov
sub
jp
nop
mov
xchg
mov
gs
mov
sub
push
je
aad
dec
sbbb
add
scas
mov
gs
push
sahf
outsl
rorl
nop
inc
rcll
or
sbb
sub
ljmp
add
movl
cmp
movl
jae
adcl
shrd
shr
ret
inc
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
movl
movl
movl
movl
movl
jmp
cld
xor
test
mov
mov
push
add
movaps
cld
ret
fsts
mov
mov
adc
xchg
mov
sub
les
cli
mov
inc
or
push
adc
stos
push
sarb
or
or
sti
test
adc
mov
leave
mov
xchg
iret
xlat
cwtl
lret
mov
cmp
lock
shlb
enter
out
mov
mov
stos
mov
pushf
or
cmpl
icebp
pop
movsb
lea
fs
test
add
lea
lods
jo
int3
aas
stos
imul
push
cmpsl
fidivl
mov
pop
in
insb
iret
mov
push
pop
xor
call
jge
pop
inc
push
jg
cmc
pop
push
cmp
fwait
mov
mov
mov
and
fwait
rcll
and
dec
insb
movsl
mov
fcompp
add
jbe
sti
stos
jg
repnz
mov
sbb
pop
sub
lgs
lds
jno
push
add
stc
ja
into
jb
orb
xor
clc
pop
adc
jb
out
mov
xchg
sarl
add
int3
pop
inc
es
jmp
adc
mov
lcall
and
xor
mov
outsb
push
xchg
inc
push
mov
ret
lret
or
loop
sub
mov
mov
push
mov
mov
pop
loope
mov
int
jmp
sub
sbb
ret
in
movsb
rcl
test
bound
mov
and
and
outsb
loopne
mov
neg
es
jg
loope
or
xor
testb
shlb
fs
xchg
cmpsb
fs
out
jl
push
inc
xor
mov
js
out
lret
fmull
je
fcomip
addl
pop
je
and
stos
out
ja
sub
fchs
dec
xor
mov
adc
pop
cmpsl
sbb
out
adc
jne
stos
xchg
shll
fsubr
jno
lret
test
mov
aas
xchg
clc
mov
imul
stc
imul
cmp
and
sub
jecxz
pop
sbb
dec
adc
popa
adc
daa
iret
jp
shll
rolb
out
mov
jb
or
jge
scas
dec
sahf
fnstenv
aam
mov
jp
imul
xchg
xchg
fisttps
mov
popf
inc
cmc
rclb
mov
or
sbb
lret
sub
out
pop
xchg
fsts
scas
mov
in
push
mov
jl
clc
jbe
adc
cs
lock
mov
rol
jle
pushl
push
pop
add
out
add
jg
push
dec
xor
sub
mov
vcvtpd2dqy
pop
jl
xchg
sbb
cmpsl
xchg
loope
sti
pop
and
jge
mov
mov
inc
shlb
and
mov
in
xchg
repz
mov
sub
sti
xor
mov
mov
ljmp
fsubs
jae
jle
cmc
xor
push
lret
popf
es
ret
add
xchg
dec
push
nop
fcmovb
addr16
test
mov
push
or
hlt
mov
push
lock
or
push
in
dec
inc
jnp
test
pop
hlt
or
int3
insl
shll
dec
mov
mov
andb
jle
int3
jle
cmpsb
sub
imul
sbb
dec
repz
jp
mov
and
insl
push
popf
jno
mov
cmp
inc
clc
xchg
ljmp
das
pop
fwait
pop
dec
and
cltd
lods
sub
bound
icebp
sbb
dec
sub
popa
mov
and
cltd
sbb
add
or
stos
je
imul
and
popa
sub
ds
pop
add
stos
add
sbb
inc
or
sub
xchg
jl
sbb
sbb
push
jne
mov
inc
push
sarl
fldl
fmull
mov
insb
lods
cmpsl
adc
subb
adc
mov
insb
mov
subl
out
mov
lcall
push
mov
mov
sub
insb
add
inc
push
ds
ret
dec
sti
push
push
adc
xchg
leave
sbb
scas
jne
nop
pop
mov
push
movl
mulb
in
adc
iret
scas
add
push
and
adc
add
enter
add
mov
out
addr16
hlt
mov
std
or
scas
xor
pop
into
sbb
out
int
pop
mov
stos
xchg
lcall
push
pop
lea
xchg
jo
jbe
push
btc
dec
mov
xor
lcall
inc
jl
xor
dec
jmp
lret
in
fiadds
mov
outsb
nop
xor
cmc
xchg
dec
lods
push
fs
lcall
inc
ds
in
dec
adc
sbbl
gs
loop
ja
adc
xchg
push
pop
pop
dec
push
xchg
loopne
lcall
adc
add
xchg
xchg
jbe
jns
sub
scas
js
mov
mov
xchg
or
nop
push
jo
mov
mov
rol
lret
mov
in
cld
cmp
int3
lea
or
pop
pop
out
sbb
jae
mov
push
pop
leave
shrl
testb
xchg
xchg
dec
ror
mov
push
lret
je
cmpsb
pop
loop
xlat
mov
jecxz
jecxz
pop
or
int3
loop
jne
mov
pop
out
sub
shll
adc
push
movl
movl
movl
movl
jmp
lds
mov
inc
xchg
inc
inc
das
ljmp
loope
pinsrw
pavgw
push
sbb
lcall
mov
jp
mov
push
insb
sbb
icebp
fs
pusha
adc
cmpsb
lods
xchg
push
fnstcw
ret
xor
into
fimuls
mov
sti
jge
add
sbb
ret
xchg
jno
je
xchg
jge
mov
sbb
cmc
mov
arpl
test
adc
inc
xchg
sbb
push
testb
out
xchg
idiv
push
push
and
dec
lods
adc
adc
jp
pop
mov
inc
addr16
int
dec
fmul
aaa
lods
test
cltd
fsts
mov
push
cmpsb
jmp
inc
out
jns
shr
xor
mov
jle
xor
mov
push
cmp
scas
pop
shll
ret
mov
ret
jne
mov
shlb
stos
sti
jmp
add
mov
addr16
fistpll
sbb
sub
movb
loope
mov
and
lds
push
sub
sbb
cmpsb
adc
in
test
in
leave
sbb
imul
mov
dec
aas
xor
in
or
pusha
xlat
loop
cmp
cwtl
es
mov
jge
daa
mov
gs
pop
ficomps
and
pop
fcompl
repnz
ret
js
fstpt
fistpl
jmp
or
cli
insb
outsl
cmp
insb
add
cmp
shlb
inc
cmp
adc
jne
shr
mov
pop
xchg
push
mov
pop
mov
xchg
sub
inc
adc
push
enter
push
cwtl
je
add
rorb
lret
imul
pop
fwait
aad
fwait
stc
ds
pushf
sbb
fmull
lret
sub
sahf
adc
mov
and
jns
imul
lods
shr
or
sahf
ss
mov
je
movaps
pop
pop
mov
cmp
test
incl
ret
das
stc
aas
test
je
enter
rcl
cld
mov
ret
mov
js
dec
cmpsb
jo
sub
popa
inc
add
aaa
xlat
cmc
fidivs
jno
dec
ss
popa
xchg
aam
insb
shrl
push
stos
adcl
mov
stos
cld
notl
fwait
stos
or
push
lret
call
js
inc
pop
dec
nop
fldcw
or
test
cmpsb
push
mov
iret
loopne
repz
cltd
out
sti
cmc
test
loop
cs
lret
or
mov
mov
xchg
xor
orb
popf
cmp
and
push
xchg
jl
ds
movsl
xor
aas
call
cs
leave
call
add
or
or
clc
pop
jb
daa
out
frstor
out
mov
sar
stc
daa
xor
inc
cltd
jl
sub
and
inc
test
dec
fwait
loopne
sbb
lods
insb
add
outsl
push
and
cwtl
shrb
movsb
pop
pop
add
repnz
push
scas
xchg
repz
dec
sarb
jecxz
shr
mov
sbb
mov
jbe
ror
lds
inc
jo
ret
data16
lea
aas
fwait
adc
pushf
xchg
dec
dec
add
mov
in
adc
mov
mov
jo
pop
mov
cmc
mov
push
pop
movsl
pop
test
inc
jae
push
pusha
imul
pusha
mov
dec
lds
mov
mov
je
add
sbb
imul
xor
mov
xchg
shlb
and
push
sub
cmp
sbb
cmpsl
ja
inc
sar
out
popa
les
jnp
dec
inc
fists
mov
pusha
jne
sub
ss
jb
jmp
fistps
sub
dec
jg
mov
pusha
jbe
sub
rcrl
push
lahf
mov
mov
cmp
mull
subl
dec
mov
pop
outsb
mov
mov
inc
aad
sbb
dec
aas
iret
push
repnz
xchg
xchg
jge
getsec
les
mov
inc
inc
pop
and
movsb
mov
and
mov
push
aad
adc
sub
fwait
ss
inc
jl
push
mov
insl
mov
sub
dec
out
mov
and
add
std
jbe
in
sub
aam
std
push
push
sbb
iret
adc
cld
dec
nop
cmc
inc
sti
leave
popf
pop
sbb
and
mov
inc
mov
mov
fldcw
lods
lock
mov
dec
adcb
xchg
iret
lods
add
jns
pop
add
mov
cmpsb
imul
int3
sti
jle
out
rolb
cmpsb
test
adc
movsl
daa
ljmp
inc
imul
sub
test
test
je
fwait
decb
dec
shlb
push
jl
sbb
push
or
mov
xchg
or
les
xorl
test
jne
and
add
jle
shl
or
icebp
stc
add
sbb
pop
popa
out
mov
dec
shll
mov
and
mov
push
xchg
push
ret
cmp
insb
lret
lods
loop
inc
and
sub
fcoms
sub
dec
orl
pop
faddp
mov
insl
in
cs
bound
mov
lods
push
pop
stos
mov
pop
sti
xchg
sarb
test
in
push
pop
fsubl
sti
imul
aaa
lcall
push
add
push
jl
pop
aam
jl
jmp
jg
lret
jae
pop
jo
jle
mov
jo
lret
loopne
jge
add
sub
mov
jl
test
push
mov
lods
mov
movsl
movl
movl
mov
mov
jmp
pop
inc
sti
and
jbe
pop
js
pop
stc
mov
add
psubusw
mov
adc
sahf
xchg
pop
dec
cmp
xor
iret
adc
sti
push
jg
cmpsl
fldl
dec
adc
pop
je
mov
movsl
aaa
push
mov
lcall
or
imul
jno
leave
dec
lods
arpl
les
xchg
dec
insl
or
ja
fwait
push
pop
insl
jmp
enter
fimuls
push
in
mov
pop
fstpl
pop
jo
add
jmp
sti
sbb
lds
cmpsl
sarb
aam
push
jbe
sub
popf
pop
daa
cld
inc
fldenv
repnz
test
fs
mov
mov
pushf
jl
cltd
cmp
push
rorl
sub
mov
and
mov
nop
mov
leave
lcall
orl
iret
shlb
jg
mov
ficompl
add
fcmovnu
das
les
adc
movsb
dec
cmpsb
sbb
xchg
jno
out
jo
push
adc
mov
and
cld
adc
into
jg
add
push
fidivs
push
push
ror
mov
faddl
and
jo
pop
insl
mov
stc
popf
jb
int
mov
shll
rolb
push
imul
insl
pop
shlb
sub
aas
jo
dec
mov
and
fldcw
dec
sbb
adc
mov
loope
sub
inc
xlat
adc
jp
rolb
and
sub
push
repz
cmp
cmp
jno
mov
xlat
movsl
mov
mov
mov
xchg
icebp
mov
pop
outsl
ror
push
mov
addl
inc
xchg
outsl
loopne
dec
outsl
dec
fsubr
jae
frstor
int
pop
sahf
repnz
mov
sbb
jae
je
cmp
push
popa
push
cmpl
lds
xor
cmp
outsb
jp
clc
mov
dec
cs
xchg
repz
lea
stos
mov
int
xchg
pop
testl
push
divl
mov
and
mov
cmp
and
sbb
sbb
push
in
test
jl
hlt
repnz
jo
test
sbb
stos
mov
movsl
imul
popa
inc
pmullw
xor
scas
lret
mov
fwait
cld
xchg
adc
and
jbe
rcrb
mov
sbb
mov
cmp
mov
sub
ja
cs
dec
cmp
fildl
repz
inc
dec
into
xor
xchg
test
mov
push
pushl
nop
xor
popf
push
pop
sahf
ds
data16
sbb
pop
jo
ja
in
lahf
xchg
in
or
syscall
imul
test
or
lret
mov
push
xor
sub
popf
pop
negl
xchg
mov
xchg
adc
nop
or
lods
jl
mov
sub
sbb
dec
scas
mov
out
es
mov
sub
xor
jge
mov
sar
fsub
sbb
xor
mov
push
iret
sbb
jns
cmpsl
rclb
push
mov
dec
xchg
add
jbe
daa
aas
repnz
mov
xor
xor
gs
mov
jmp
cmp
arpl
inc
movl
sti
or
ret
xlat
sub
pop
lahf
aaa
scas
pop
xchg
sbb
ja
add
add
xor
xchg
cmp
rol
nop
ljmp
pop
sub
lahf
xchg
adc
xchg
mov
sti
dec
fcoms
ss
cmp
mov
xchg
sub
mov
sub
cwtl
scas
pop
pop
emms
cmp
jecxz
cmpsl
mov
mov
and
mov
mov
xor
mov
push
daa
fcoml
xchg
dec
nop
pop
ret
cltd
xor
xchg
add
loopne
fldenv
lret
pop
in
das
push
xchg
push
mov
dec
aad
out
sbb
jb
in
xlat
xchg
lahf
gs
adc
ss
pop
btc
sub
cmp
push
pop
cmp
fstpl
and
movsl
push
xor
and
lea
pop
xchg
fsubrs
sbb
ja
inc
das
lahf
in
lahf
repnz
adc
pop
ret
jg
sbb
xor
loope
adc
pop
int
cmp
movsb
idivb
pop
scas
fwait
dec
arpl
add
pop
lods
call
les
pop
rclb
dec
lea
dec
or
popa
xchg
mov
andl
out
in
dec
xchg
popa
mov
into
inc
fdivrs
sub
ret
pop
add
movsb
outsb
cmc
sub
fisttpl
lret
jae
lret
aam
pop
mov
mov
cwtl
adc
outsl
push
or
mov
xor
sarb
retw
lret
add
inc
and
mov
add
xor
mov
in
lds
ret
adc
xor
jg
filds
xchg
sti
or
loopne,pn
adc
mov
cwtl
pusha
loope
stos
push
or
mov
xchg
cld
pop
pop
push
mov
sbbl
lods
les
fstl
adc
movsl
push
imul
cmpsb
cmp
test
das
sahf
cmp
in
int
data16
mov
int3
adc
divl
aam
add
cli
jmp
aad
xchg
pop
push
mov
mov
popa
mov
mov
popf
nop
insb
pop
xchg
xchg
int3
es
and
or
mov
and
xor
imul
mov
push
sub
push
movl
jmp
ljmp
stos
lea
jbe
xchg
icebp
lods
xchg
cmp
pinsrw
jl
cli
test
mov
mov
dec
pusha
dec
or
dec
add
lea
jb
subb
cli
cmp
cltd
pop
jae
lods
push
push
pushf
jns
fsub
fdivs
gs
mov
mov
add
dec
jmp
adc
lret
and
push
jb
lahf
loopne
jmp
inc
xor
adc
pop
arpl
inc
enter
sbb
mov
fs
pop
aam
cmpsb
fwait
xchg
push
enter
jmp
dec
and
xor
aaa
adc
pusha
cwtl
push
cmp
and
sub
push
or
loopne
aad
or
inc
aam
push
sarb
int
mov
sub
ss
jbe
int3
out
mov
jae
es
sbb
icebp
ja
dec
mov
clc
iret
mov
jg
repz
addb
hlt
adc
mov
sbb
nop
int3
test
xchg
cs
pop
or
pop
xchg
mov
mov
pop
and
orl
adc
lret
jae
push
jae
scas
sbb
mov
mov
in
jbe
pop
push
adc
jl
negl
cs
ds
test
cs
pusha
lds
inc
mov
cli
cmp
mov
outsl
xchg
and
or
sahf
push
lret
mov
es
push
cltd
mov
and
ljmp
mov
jge
or
adc
imul
sub
mov
pop
inc
mov
repnz
stos
xor
adc
inc
out
push
repnz
inc
pop
push
and
jne
jae
insb
enter
jo
in
test
fstps
inc
rorb
adc
push
popa
cld
add
fs
push
vcmpps
jecxz
aas
push
push
jge
scas
aaa
dec
bound
aaa
sti
out
cmpsb
psrlq
outsb
and
es
es
and
mov
les
mov
test
and
lret
jle
inc
xor
mov
negb
fsubs
and
xchg
daa
dec
xchg
sub
cld
es
push
lret
cmpsl
cmp
adc
cmp
lahf
xlat
cmc
dec
ja
cmp
dec
adc
fs
lods
les
mov
mov
push
sub
int
repnz
push
aaa
addr16
orl
xchg
cs
mov
test
or
dec
xor
and
andb
nop
push
pop
incl
int3
mov
xorl
add
test
pop
aad
aad
mov
out
lret
das
daa
lock
jp
or
pop
inc
rcrb
rclb
dec
lea
push
push
rorb
mov
dec
shl
adcl
ds
push
imul
xor
xor
lds
pop
adc
cmp
mov
mov
and
mov
stc
xchg
or
push
pop
mov
int3
mov
ja
mov
orb
fs
pop
pop
movsb
fidivs
pushf
js
rorb
and
fisttpl
xchg
jl
sbb
fucomp
jmp
mov
pop
mov
or
xchg
dec
iret
fdivrl
dec
cmp
cmp
jae
and
xor
lock
out
pop
sbb
dec
mov
mov
push
mov
sbb
rclb
imul
pop
xor
xor
ror
sbbb
dec
dec
add
mov
and
sarb
inc
cmp
mov
or
lcall
cmpsb
push
popf
iret
sar
insl
push
and
and
pop
lods
push
inc
jge
in
dec
loopne
pop
mov
sub
int3
mov
mov
divl
or
test
je
push
xchg
xlat
dec
sbb
dec
daa
mov
adc
dec
movsb
ret
adcb
shlb
movsl
mov
int
pop
imul
xchg
sbbb
ficoml
jns
stos
icebp
std
dec
mov
test
or
push
mov
fistl
stos
popa
pushf
leave
jl
inc
out
div
sbb
mov
cmp
rorb
mov
orl
mov
shrb
es
push
inc
adc
pop
fsubrl
push
mov
scas
movl
sub
mov
mov
ror
cmpsl
lea
sub
dec
or
mov
aad
stos
jae
inc
loope
add
dec
fldenv
pop
ja
push
popl
mov
loop
out
inc
push
pop
out
shl
mov
dec
pop
pop
lods
mov
test
data16
jnp
inc
push
pop
cmpb
inc
mov
adc
and
mov
cmp
inc
dec
push
sbb
and
out
test
cs
fimull
sbb
inc
cmp
and
int
adc
sub
pop
mov
hlt
sarb
insl
fisubs
jmp
jae
add
decl
sub
xchg
stos
popf
aas
aad
dec
push
inc
out
lea
mov
xor
pop
mov
fstl
adcl
enter
sub
les
pop
clc
jmp
xor
cmp
jl
fnstsw
mov
sahf
add
sbb
sbb
hlt
in
adc
or
sub
mov
lock
dec
lock
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
jmp
xchg
mov
imul
lret
rorb
pinsrw
sysexit
in
decl
inc
movsl
cli
mov
dec
repnz
xor
dec
dec
mov
cmp
loope
and
mov
mov
pop
clc
daa
push
aad
mov
das
lock
call
je
fistl
mov
incl
bound
cmp
sbb
jmp
inc
jp
addr16
enter
xchg
xlat
ss
popl
jp
add
fbstp
pop
movsb
mov
in
xchg
jle
adc
loope
mov
sub
sbb
jb
xlat
sub
lea
jp
jne
mov
mulb
mov
hlt
sub
sub
inc
sbb
xlat
leave
jp
jmp
pop
adc
out
sub
cmpsb
pop
call
jns
pop
test
loopne
aad
sub
mov
shlb
push
cwtl
fisttpll
push
adc
clc
notl
sbbb
or
hlt
ret
xor
sub
pop
inc
aaa
int3
and
xchg
add
inc
int3
lods
add
ljmp
mov
and
mov
push
or
daa
mov
or
jle
xchg
cmp
outsb
fwait
mov
cmc
iret
cs
je
int
mov
enter
xor
mov
and
ss
xchg
cmpsb
pop
test
aad
fsubr
aad
dec
dec
outsl
repnz
cmc
lds
popf
cmp
jbe
add
insl
inc
iret
jne
imul
mov
test
and
jo
dec
jle
push
dec
sbb
ss
mov
lret
shll
lds
mov
lods
push
mov
push
pop
in
mull
and
xorb
dec
adc
ss
idivl
add
mov
fs
cmc
repnz
movsb
mov
pop
xor
xchg
sub
inc
push
ficoms
aad
int3
stos
loopne
mov
mov
mov
dec
popa
cmc
xlat
or
mov
imul
mov
fisubl
sbb
mov
xlat
imul
das
mov
and
pushf
xor
lret
imul
push
je
call
push
dec
add
push
dec
adc
shl
jl
add
pop
sub
sbb
js
stos
cld
cmpsl
inc
pop
inc
enter
mov
es
xchg
ds
xlat
repz
pop
pop
mov
sub
gs
cmp
cmp
negb
xchg
inc
xor
push
mov
movsl
adcb
adc
mov
push
cmpsb
lock
and
push
lods
xor
jo
cmp
mov
scas
popa
sub
outsl
cmc
leave
add
xor
jne
sub
mov
cmp
sbb
call
sub
rcll
pop
jae
jle
cli
xor
loop
jge
xchg
mov
jge
outsl
inc
xchg
insb
aam
push
jecxz
pop
or
insb
daa
scas
xbegin
push
xor
cmpsb
clc
cmp
mov
inc
rcl
mov
mov
sub
stos
nop
pusha
clc
and
sub
clc
fstpt
xor
inc
in
adc
push
addl
popa
or
inc
pop
cs
xchg
adc
enter
lea
inc
cmp
mov
cs
rcrb
shlb
fidivrs
jb
jb
jl
cltd
in
dec
lds
add
scas
xchg
mov
dec
mov
out
popf
das
leave
push
jns
sub
add
rolb
aad
fisttpll
adcb
ror
daa
dec
test
sbb
iret
and
xor
lock
lret
cli
mov
out
in
mov
lcall
dec
cmc
popf
aaa
std
in
push
pop
das
mov
out
xor
loopne
mov
shlb
out
leave
jg
mov
popf
insl
cmc
mov
mov
imul
push
in
xor
jmp
mov
cltd
incl
cmpsl
out
pop
cld
pop
les
lahf
pop
mov
repnz
repz
lcall
add
andl
adc
add
add
inc
and
adc
xchg
loope
and
sbb
cmp
jle
inc
loopne
ljmp
inc
daa
lret
or
leave
ja
push
in
clc
mov
int
js
je
mov
dec
or
sub
insb
shrl
imul
lret
dec
fiadds
ds
pop
in
lds
push
outsl
mov
push
inc
orb
incl
imul
jl
sbb
adc
xor
sbb
jmp
dec
prefetch
test
inc
int3
sbb
cmp
xor
clc
rcll
or
lret
lret
loop
push
or
aad
or
xor
sbb
nop
stos
aaa
or
push
add
out
aas
inc
in
adc
mov
pop
mov
mov
sub
mov
scas
loopne
pop
dec
nop
shll
test
fdiv
pop
cmpsl
pop
and
cs
js
movsb
lods
cmp
cmc
push
loope
daa
mov
rcll
push
mov
scas
mov
or
loopne
adc
xlat
sahf
cmp
in
loope
insl
inc
outsb
or
adcl
fwait
and
in
adc
mov
dec
xchg
imul
pop
push
jns
mov
hlt
stos
pop
out
repz
repz
lods
enter
insl
adc
or
lods
ds
inc
stos
and
dec
fs
aaa
jg
sbb
mov
pop
mov
jle
pop
dec
out
js
outsl
sub
cwtl
or
and
shrb
pop
or
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
jmp
push
fadds
sub
push
and
cmp
dec
mov
pinsrw
setle
push
dec
stc
push
shrb
or
dec
pop
mov
mov
das
adc
cs
pop
xor
inc
inc
in
pusha
out
mov
into
dec
mov
cmp
sub
int3
pop
stc
cmp
fs
mov
es
icebp
aaa
pushf
sbb
lret
enter
imul
out
pusha
gs
orb
enter
rorl
cmpsl
add
loope
ret
test
push
jne
fs
inc
mov
insl
in
lahf
stos
mov
iret
dec
popa
adc
sub
sbb
shll
dec
and
dec
aaa
jne
fstpt
inc
mov
sub
or
andb
int
subl
mov
push
stos
repz
inc
adc
cmpsl
fidivl
out
mov
pop
add
and
sub
int3
push
mov
adc
add
jge
in
sbb
add
push
mov
add
mov
lods
dec
inc
les
xchg
push
add
jo
dec
pushf
lcall
cs
outsl
xchg
mov
xchg
fucomp
dec
add
push
sub
cltd
in
jb
insb
sub
popf
jns
call
cwtl
push
mull
inc
iret
sub
pushf
mov
in
loope
ret
movsl
hlt
jae
addb
mov
loop
popf
xor
and
mov
mov
pop
mov
xor
jnp
aaa
testl
dec
in
jp
faddp
int3
enter
orb
repnz
jmp
xchg
shll
jecxz
scas
cmp
mov
rcll
ja
jl
push
pusha
mov
sub
push
mov
lahf
jg
push
repz
in
test
add
cmp
mov
jno
test
mov
inc
xchg
adc
mov
xchg
insb
aas
add
jnp
jno
cli
push
pushf
mov
loop
ficoml
push
push
pop
orb
and
sbb
sub
loopne
xlat
xchg
sbb
xor
shlb
or
jp
lret
ljmp
int
loop
inc
mov
jg
mov
enter
sbbl
lret
int
xchg
mov
dec
add
add
ja
fisubrs
inc
sub
daa
leave
jne
add
pop
ds
push
mov
cwtl
cmp
icebp
adc
das
inc
out
mov
xchg
mov
sub
mov
ljmp
cmp
sarb
mov
sbb
jg
mov
out
out
stos
je
scas
or
dec
imul
out
adc
andb
xor
pop
sbbl
pop
insl
mov
mov
in
inc
add
mov
pop
enter
dec
cli
cltd
jne
add
loop
adc
lods
mov
bound
pop
enter
faddp
pop
fsubrs
popf
pop
and
pop
and
scas
das
mov
loopne
mov
mov
rorb
aad
or
stc
mov
jbe
lret
cmp
nop
ret
mov
jle
fwait
imul
inc
and
test
add
cmpsl
loop
jmp
or
lds
adc
xchg
test
jnp
cmovp
dec
dec
ficompl
jg
iret
push
clc
inc
xor
call
adc
lods
add
dec
and
repnz
sar
lahf
mov
xchg
jmp
shrb
jbe
xor
adc
mov
mulb
dec
sbb
and
push
fistpl
pop
and
test
cmp
jge
inc
jne
jle
jp
sub
xchg
hlt
adc
xchg
push
not
push
jg
stc
push
sbb
leave
xor
ljmp
jle
popa
in
push
jp
in
test
popf
fimuls
inc
bound
mov
pop
in
std
fildl
jns
or
or
mov
adcl
push
xor
jge
mov
push
inc
mov
sub
jne
dec
pop
jbe
inc
inc
rorl
jae
lret
iret
dec
cmp
lret
shrb
mov
cmp
xchg
or
xchg
loopne
out
add
cmpsl
les
sub
int3
push
xchg
aad
lret
hlt
xlat
data16
jge
sub
lcall
lahf
gs
inc
insl
add
xor
xchg
daa
popf
add
and
dec
ret
sub
cli
test
xchg
cmp
sub
mov
xchg
arpl
lret
mov
cmp
adc
adc
jno
add
popf
mul
push
cmc
jle
jle
push
icebp
je
cmp
lds
imul
movsl
loopne
clc
sahf
mov
in
fcomp
sub
movsl
test
ja
cmpb
dec
jecxz
or
loopne
aaa
jb
pop
sbb
addr16
mov
lret
pop
dec
add
lock
add
push
hlt
pop
adc
and
jl
inc
mov
push
dec
mov
cmp
shll
adc
fisttpll
xor
pushf
das
aaa
push
adc
and
pop
aas
mov
shlb
add
mov
call
lret
mov
jae
hlt
pushf
fisubl
scas
inc
repnz
movsl
inc
into
mov
xor
sbb
mov
sbb
imul
fisttpll
orb
aad
add
sti
movsbl
out
popa
pop
mov
sahf
test
or
sub
and
add
cmp
jb
movl
movl
movl
movl
jmp
xorb
ret
xor
xor
mov
test
pinsrw
setae
sbb
mov
cmc
fldt
jae
xor
sub
pusha
rcrb
filds
pop
jb
icebp
cmp
pop
adc
and
xchg
add
mov
mov
subb
sub
rolb
or
push
shll
mov
jmp
pusha
dec
cmc
shr
cld
and
repnz
xor
jg
inc
bound
dec
sti
fdivs
imul
pop
or
ljmp
loope
jecxz
hlt
jge
xchg
dec
notl
aas
jno
cmp
jbe
jmp
shll
into
leave
fadd
mov
cmp
adc
cltd
push
les
push
inc
mov
aaa
leave
or
jno
jbe
jno
add
shlb
cltd
add
stos
scas
adc
and
mov
jo
popa
lea
adc
mov
jns
mov
aam
out
ret
je
pop
push
sahf
leave
pop
lea
jae
addl
dec
testl
jecxz
fimull
xor
movsb
sub
sbb
outsb
jne
insl
add
stos
and
xchg
inc
mov
push
pop
loopne
lods
sarl
ret
jecxz
imul
mov
and
lcall
sbb
mov
sub
leave
std
push
jno
dec
add
cltd
jge
push
dec
add
stc
es
sbb
xchg
int3
xor
sub
mov
add
jl
push
in
xchg
xor
loopne
xlat
fs
mov
add
xlat
cmc
sbb
mov
cmp
mov
dec
cs
popf
cld
jge
inc
fidivrl
mov
adc
cmp
insb
aad
scas
push
call
nop
mov
test
xchg
in
arpl
adc
push
cmp
xor
js
mov
icebp
jg
pop
loop
inc
dec
imul
ret
popf
sti
sti
sarb
outsl
dec
mov
loop
inc
popf
xchg
icebp
push
ret
jns
fwait
push
and
repz
push
pop
sub
mov
push
test
repz
xchg
pop
roll
sub
xor
div
lock
jne
cmp
out
mov
mov
in
adc
sub
cld
inc
dec
pop
pop
sbb
push
adc
sub
push
das
stc
dec
hlt
fdivs
sbb
sub
arpl
je
mov
mov
cwtl
dec
jmp
iret
and
hlt
outsl
cltd
pop
inc
jg
jmp
sti
jp
js
jmp
scas
scas
cli
cmp
fs
xchg
dec
dec
mov
xor
xchg
js
inc
add
pushf
push
xor
jp
mov
or
lahf
adc
je
push
clc
xor
pop
mov
test
icebp
or
jmp
cmp
dec
shlb
jb
aam
cmp
mov
pusha
cld
pusha
ljmp
repz
ds
xor
adc
inc
in
inc
xchg
sub
jl
call
fisubs
les
sbb
and
jle
inc
and
lock
pop
mov
ficoms
movsl
fcoml
sub
pop
pop
lea
jo
pushf
mov
adc
add
xchg
das
mov
les
dec
ss
dec
inc
test
cwtl
mov
mov
jle
test
mov
adc
push
or
js
inc
in
mov
push
insl
fdivrp
jns
cmp
adc
jae
mov
nop
clc
push
cmc
out
sub
mov
xor
sub
xchg
xor
jae
scas
xor
mov
push
fwait
ret
add
cmpsl
dec
fldenv
dec
mov
iret
in
mov
jae
push
push
test
inc
inc
push
testl
dec
push
jne
cltd
shl
ja
jno
and
xor
in
adc
pop
sub
mov
cli
xlat
inc
push
mov
movsl
dec
mov
inc
mov
mov
dec
pop
dec
mov
dec
mov
adc
mov
mov
cltd
jno
jne
cmp
icebp
fcompl
insl
add
jecxz,pt
insb
popf
xchg
shlb
lret
and
pop
testb
shl
daa
push
repz
scas
loopne
lret
jno
bound
and
jecxz
cld
lahf
andb
insb
add
push
rcl
ret
mov
jnp
jno
inc
cmp
xchg
rcrb
scas
adc
imul
push
dec
pop
sub
mov
lea
daa
mov
mov
std
jae
data16
mov
pushf
adc
scas
sahf
adc
stc
cltd
sbb
pusha
xlat
add
ret
es
enter
push
lret
xor
mov
out
pusha
cli
mov
rcll
rol
or
pushf
pop
mov
mov
jg
into
pop
xchg
test
repz
inc
scas
jns
push
mov
sbb
test
ficompl
in
pop
xchg
movb
jb
aaa
jp
nop
fidivl
js
xor
xchg
pop
mov
shlb
lcall
js
fiaddl
push
or
mov
popl
cmpsl
cli
mov
enter
icebp
int3
xchg
int3
fsubrl
int
mov
sbb
in
inc
cmp
mov
and
mov
pop
xor
faddp
xchg
xchg
test
jp
addl
ds
inc
push
push
icebp
rol
js
jbe
mov
cmp
fldcw
sahf
dec
jge
test
pusha
inc
add
inc
hlt
rcll
add
inc
lock
inc
in
sbb
add
movl
movl
movl
mov
mov
or
lea
add
movl
jmp
add
inc
sti
daa
push
cs
inc
lds
pinsrw
pmaxsw
xchg
movsb
xchg
adc
shll
sti
or
aas
pop
mov
sbb
fs
inc
sub
xchg
push
xchg
faddp
dec
add
sbbl
addl
adc
jp
mov
fdivr
je
enter
and
push
dec
push
cmp
jmp
jo
fwait
xorl
sarb
and
lods
sbb
mov
inc
dec
xor
scas
push
ja
lods
mov
lods
and
fisubrs
cmc
lds
mov
fcmovnu
je
out
push
add
je
push
pusha
sub
inc
push
and
and
jns
ret
daa
int
mov
xor
movsl
insb
push
cmp
adc
mov
pop
fldcw
cltd
xlat
imul
es
xor
hlt
cli
aam
mov
mov
test
cli
xor
or
adc
dec
loop
mov
or
xchg
aam
adc
pop
inc
and
testb
cmpsl
mul
add
xlat
mov
jno,pt
lcall
ret
ja
mov
cmp
adc
sbb
dec
aaa
repnz
and
cmp
imull
negb
hlt
ja
cmp
pop
or
out
lock
cmc
inc
fnstenv
mov
pop
rorb
mov
push
sub
sub
inc
int3
jo
insb
repnz
pop
daa
fstps
adc
cli
std
fs
jne
sbb
jle
call
adc
shrl
inc
dec
fwait
insl
adcl
test
pusha
into
insb
icebp
rolb
dec
cwtl
aas
jb
stos
adc
push
pop
cmp
push
movsl
jge
jge
negl
cmp
xchg
dec
cs
pusha
into
push
loopne
stos
sub
mov
rolb
mov
dec
pop
push
xlat
pop
je
bound
rcr
push
pop
fsubs
and
pop
jno
xchg
insl
sub
je
ss
jmp
mov
cmpb
ds
jns
dec
adc
mov
pop
std
addl
xchg
add
mov
mov
sub
insl
and
sbb
aad
adc
mov
outsl
fbld
xchg
movswl
pop
lahf
xor
repz
shlb
pop
mov
lahf
pop
cmpsw
rcl
mov
jecxz
stc
jae
mov
lret
xchg
cld
out
rorb
in
mov
jle
sub
mov
and
jbe
xor
mov
repz
adc
inc
mov
iret
pop
xchg
dec
addb
cmc
rol
pop
iret
xor
jbe
mov
in
pushf
stos
test
lock
lahf
sub
sub
push
je
pop
sbb
cmp
xchg
mov
adc
psubusb
mov
out
aas
push
jnp
jns
cmc
push
sar
leave
add
or
pop
lahf
test
lock
lret
into
and
cltd
xor
inc
into
xchg
mov
addr16
add
or
cwtl
adc
xor
push
xchg
movsb
adc
and
mov
mov
mov
sahf
push
sarl
fstpl
adc
jge
ds
in
adc
out
int3
stc
jns
xchg
repz
xor
dec
push
push
cld
imul
sbb
pop
xor
not
xor
iret
mov
std
loope
lea
sub
mov
sahf
and
push
clc
cld
inc
hlt
xchg
cmc
les
jecxz
xchg
int3
push
add
ds
xor
insl
and
or
rcl
jnp
aam
lea
pop
add
insl
fiaddl
cmpb
lea
sahf
inc
out
fsts
xor
loope
mov
inc
lea
adc
aam
fldt
roll
sbb
jp
jecxz
int3
ds
pop
pop
jae
fcoml
sbb
stc
shld
mov
sbb
addr16
sub
out
leave
xchg
mov
or
daa
lret
les
push
loopne
mov
aas
xor
rclb
and
jecxz
out
fists
pop
fistpll
into
adc
lcall
fstps
shl
dec
and
add
push
or
es
pop
scas
mov
add
xchg
jbe
repnz
lods
adc
mov
sub
in
stos
pop
adc
aad
mov
dec
imul
mov
push
rol
push
ja
fcoms
or
add
aas
jge
imul
rorl
and
es
pop
lahf
loopne
jle
add
imul
jp
jno
shrb
inc
push
movsl
push
lods
nop
cwtl
mov
std
loop
out
lahf
jb
js
jg
test
xchg
and
mov
push
popa
mov
das
jl
xchg
mov
aaa
lods
hlt
lahf
xchg
cmp
xor
or
ret
test
xor
hlt
mov
cmp
popa
sbb
ret
mov
lret
loop
dec
or
push
mov
scas
fists
add
dec
mov
orb
daa
jno
ljmp
sahf
mov
shll
sbb
call
push
lret
sbb
sti
inc
int3
out
jo
mov
jbe
inc
lods
mov
mov
dec
popa
push
sbb
mov
pop
jl
sub
lcall
and
popa
adc
lcall
ja
addr16
xor
sub
in
aas
sub
add
fnsave
rolb
push
or
cmp
lcall
add
cmp
repz
in
xor
outsl
shl
dec
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
jmp
aad
sub
ss
adc
xchg
pushf
ja
xchg
add
paddusb
sub
pop
jns
sarl
jno
repz
fistpll
test
outsl
aas
and
jne
sti
add
mov
cmp
or
jle
mov
sub
inc
pop
mov
push
mov
xchg
cltd
shlb
jne
mov
out
scas
inc
sbb
push
xchg
test
leave
jle
or
cli
je
outsl
mov
imul
xchg
jbe
xor
xor
cmp
mov
mov
ret
sub
cmp
clc
dec
das
test
pop
shlb
outsl
enter
jge
cmp
mov
xchg
lods
and
lock
daa
mov
inc
sbb
ss
dec
adc
xchg
dec
sbb
mov
sarl
push
dec
push
jmp
pop
xor
push
sub
iret
or
movsl
xchg
mov
enter
push
and
in
aas
add
mov
mov
mov
xlat
cmp
popf
and
insl
push
outsb
cmpsb
jmp
mov
push
push
sbb
lods
outsl
push
or
pusha
sbbb
xor
in
add
test
shll
fisubrl
rcl
jge
rcll
aas
xchg
aaa
sbb
push
in
sbbl
mov
loop
insb
dec
nop
sub
jecxz
lahf
popf
in
aaa
andb
jo
xor
or
inc
mov
lahf
mov
dec
adc
mov
sbb
movsl
addr16
xstore-rng
cmpsl
lds
mov
and
and
xchg
xchg
cmp
cmp
cli
inc
push
jo
lock
dec
sub
test
sbb
sub
adc
js
mov
gs
mov
lods
xchg
iret
scas
test
mov
scas
addr16
lea
imul
lret
out
mov
mov
mov
test
push
adc
sbb
std
adc
jl
cmp
rcl
and
sub
xchg
ss
cli
jno
stos
push
pop
or
add
sub
pop
sub
pushf
pusha
icebp
rcrb
jbe
dec
adc
sub
pop
addr16
js
mov
jg
repz
cmp
dec
add
mov
sti
out
mov
ja
les
lahf
addb
push
push
sahf
pop
cmp
out
movsl
int
pop
aad
cmp
call
addr16
fcmovnbe
push
push
fstpl
pop
sbb
mov
rclb
dec
pop
ljmp
orl
add
dec
stos
fsubrs
cmpsb
jp
or
jo
mov
loopne,pn
cmp
ljmp
rolb
mov
jo
xor
lods
fisttps
pop
aad
lock
inc
sub
out
pop
leave
rol
and
mov
jns
addr16
out
dec
or
fstl
cli
inc
xchg
adc
aas
or
pop
scas
daa
jmp
mov
jecxz
xor
lock
pop
inc
mov
stos
and
arpl
push
scas
xor
xchg
cmp
icebp
rol
push
xchg
inc
mov
ret
mov
xchg
xchg
push
repz
push
jo
adc
xchg
sbb
sbbl
dec
inc
jl
repz
out
xchg
mov
add
insl
push
adc
mov
orb
stos
lcall
arpl
lcall
or
and
push
push
sbb
mov
mov
dec
gs
scas
sbb
adc
sahf
jmp
add
clc
cmc
push
and
add
sbb
xchg
mov
in
sub
loopne
movsb
test
roll
icebp
jl
fidivrs
and
jns
aad
inc
xchg
lods
fmull
add
xlat
hlt
fwait
sub
add
test
iret
push
mov
ret
pop
sbb
add
sbb
cli
je
push
jg
in
jno
aaa
in
dec
popf
mov
int
imul
sub
dec
xchg
xchg
bound
and
adc
or
mov
dec
outsl
sbb
lods
std
xchg
int
aam
mov
ret
cmpsl
inc
inc
and
fists
jg
xor
dec
jecxz,pt
or
pop
dec
sub
fs
cmp
scas
mov
xor
test
inc
pop
cmpsl
cmp
and
mov
mov
arpl
les
sbb
jmp
aaa
ds
pop
int
loop,pn
mov
pop
aam
sub
push
shrb
iret
out
sbb
sbb
dec
dec
sub
clc
mov
fistl
sbb
bound
das
sbb
adc
adc
stc
mov
mov
mov
lock
nop
inc
nop
cmp
test
sub
xchg
xor
push
pop
pop
inc
sbb
in
adc
sahf
mov
or
cmp
lods
and
fwait
andb
les
psubw
or
mov
lds
inc
push
scas
divl
jle
loopne
cmc
bnd
lret
rcl
pop
xchg
jb
aaa
nopl
pop
aaa
ja
sbb
daa
mov
sbb
mov
fildll
dec
mov
hlt
fistpll
add
push
lods
mov
mov
push
inc
cld
pop
daa
push
fwait
jp,pn
adc
mov
inc
mov
dec
cs
imul
adc
andb
mov
mov
push
mov
scas
jbe
cmp
fldenv
in
mov
cli
shrb
js
add
sub
fildl
cmp
inc
lock
or
cmp
lods
sub
mov
inc
jg
mov
into
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
jmp
out
aad
aad
aad
adc
xchg
push
pinsrw
cmovb
ret
gs
push
sti
dec
lret
popa
scas
jecxz
sahf
mov
pusha
xchg
popf
test
cs
rcr
add
lcall
loopne
xchg
push
in
sbb
ret
xchg
test
push
sahf
sbb
stos
imul
mov
mov
je
push
pop
or
mov
aam
int3
mov
leave
dec
je
loopne
push
jmp
dec
xor
das
cld
mov
push
mov
daa
and
data16
jo
shlb
jl
inc
xor
mov
lahf
and
inc
pop
stos
xor
xchg
cmpsb
out
push
cmp
into
xchg
out
xor
lret
or
dec
inc
dec
sti
mov
std
setb
mov
pop
call
add
jo
dec
add
mov
movsb
push
in
xchg
mov
xchg
or
mov
push
cmp
sub
xchg
push
xchg
jbe
jo
sub
add
stos
ss
gs
cmp
icebp
cmp
in
mov
test
inc
int
stos
lds
test
adc
pop
es
insl
inc
int3
push
mov
cmp
cmp
mov
cmpsl
pop
cltd
jp
aam
mov
cmp
fs
jns
in
mov
mov
jae
in
sbb
push
pop
or
inc
jbe
jo
rolb
jns
iret
lea
sbb
push
xchg
popa
outsb
mov
cmp
xor
cmp
in
or
or
lods
nop
lcall
into
js
adc
pop
dec
mov
inc
inc
cmpsl
repz
jns
fcoms
xchg
pop
inc
rolb
ss
loop
out
cmp
insb
sub
loopne
hlt
jns
and
add
mov
cmpsb
xor
ficompl
imul
mov
lock
sbb
sbb
aam
xchg
lods
ret
daa
mov
cmc
das
ds
xor
cmp
dec
mov
lahf
adc
test
inc
mov
sub
lds
add
cmc
insb
filds
jg
and
mov
inc
roll
adc
clc
sub
and
aas
push
cs
jnp
xchg
xchg
and
mov
mov
cltd
int3
jno
mov
inc
mov
push
arpl
lcall
inc
popa
lods
and
pop
fists
jmp
rcr
psllq
enter
dec
pop
test
xor
and
xorb
or
push
mov
ret
inc
or
add
int3
fisttpll
fidivrs
add
arpl
call
lods
jmp
cwtl
stos
inc
inc
into
push
cmp
jbe
pop
out
sbb
mov
xchg
push
ret
xor
pop
add
sub
popl
mov
or
sbb
mov
stos
sbb
mov
and
out
test
mov
push
inc
shl
fidivl
or
push
imul
pop
ja
cmpsl
xor
cld
jne
mov
das
jno
jb
inc
in
jnp
mov
mov
aad
shll
les
push
in
movsb
adc
mov
adc
jne
or
xlat
jb
loop
shl
adc
int
loope
add
ss
xchg
das
lods
stc
ret
test
xor
not
sbb
iret
jne
mov
sbb
jnp
in
xchg
loop
rolb
xchg
adc
xchg
std
jb
or
repnz
sti
sbbb
push
ljmp
push
pop
aaa
ret
push
push
xchg
dec
and
fwait
jo
jno
inc
cmc
xor
test
imul
jns
aam
xchg
sub
inc
pop
aad
lret
xlat
pop
stos
jns
insb
sbb
push
jb,pt
jo
cs
jge
xchg
sar
xor
xlat
mov
and
push
mov
inc
xor
repnz
push
xor
sahf
lods
bound
cmc
mov
fs
xor
pop
clc
or
fidivs
mov
xchg
add
sub
pop
ja
and
outsl
lods
pop
and
repnz
pop
daa
in
ljmp
inc
orl
inc
jecxz
push
lcall
or
pop
roll
and
fidivl
mov
out
scas
stos
aas
iret
enter
shll
aad
cmc
loopne
jg
jo
pop
mov
iret
sar
mov
xchg
mov
dec
popf
stos
dec
sahf
clc
xchg
ja
inc
dec
dec
sbb
jne
sbb
cmp
pop
mov
pop
or
enter
inc
movsb
or
stos
xchg
dec
orl
jne
pop
divb
jle
xchg
ret
lods
cmp
sahf
orl
jnp
pop
pop
aas
out
jmp
push
ljmp
sahf
fbstp
mov
mov
loop
ret
add
stos
leave
pop
inc
scas
sbb
cli
sbb
stos
cwtl
dec
in
fwait
cmpsb
aaa
pop
mov
ss
in
arpl
sbb
ja
and
mov
add
add
pop
push
ud2
fdecstp
dec
pop
and
mov
jl
sub
imul
pextrw
sub
movsl
imul
loopne
pop
pushf
lock
jge
xor
enter
and
mov
int
inc
testb
dec
add
cld
cmp
or
fisubrs
jne
scas
lds
fiaddl
and
xchg
dec
xlat
add
push
mov
aaa
scas
aaa
xchg
bound
leave
gs
repnz
push
incb
ret
hlt
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
push
movl
movl
jmp
imull
xchg
xchg
aam
mov
add
repz
or
icebp
sub
out
add
push
js
sahf
cmp
or
mov
imul
aaa
imul
test
jne
or
data16
hlt
nop
mov
adc
adc
add
stc
aas
push
das
inc
adc
in
push
lcall
stc
xchg
mov
xor
add
fnstsw
popa
adc
jle
popa
into
lods
sbb
mov
jno
lods
push
sub
cwtl
aad
jecxz
loope
xor
add
fisubrl
sahf
pushf
sbb
add
dec
pop
aaa
enter
pusha
dec
mov
imul
sub
daa
push
inc
shll
add
mov
fisubl
mov
out
jle
call
pop
int3
dec
stos
push
xchg
sahf
sbb
mov
or
cli
xchg
test
or
cmp
sub
pop
fldcw
inc
fisttpl
xorl
sti
jg
outsl
mov
cmp
aam
add
sub
dec
int3
stos
pushf
xchg
ja
pop
jecxz
sbb
mov
xchg
out
lods
sti
push
or
xor
addl
ret
adcb
enter
mov
shll
out
jmp
or
inc
rcll
mov
ficomps
jno
jecxz
lret
fidivrs
sbb
mov
mov
test
test
mov
mov
daa
sbb
f2xm1
mov
mov
test
ffreep
sahf
cmp
push
mov
lods
adc
call
xor
sub
pop
sbb
fnstenv
rcll
out
out
shlb
pop
pop
or
leave
push
jb
add
add
cmp
imul
mov
xchg
mov
sub
inc
mov
or
and
push
push
adc
pop
int
push
xor
dec
movsb
gs
outsl
in
ficoml
insb
add
rorb
test
pop
pop
push
cs
pop
push
adc
loop
es
or
mov
fwait
lock
jmp
das
mov
push
sti
jl
push
pmaxsw
mov
mov
adc
mov
cmpl
push
dec
fdiv
addb
imul
out
div
push
add
jb
dec
repz
rcr
jl
xchg
mov
fcmovnbe
fsubr
movb
dec
mov
das
repz
lods
xor
adc
inc
movsb
fwait
cld
xchg
mov
mov
push
jnp
popa
daa
fdivrl
pop
pop
shrb
fadds
sbb
in
jle
loop
xchg
aam
cltd
dec
insb
xchg
cmp
movsl
pop
iret
xor
mov
outsl
pop
lods
ss
cmp
fs
xchg
popa
enter
mov
sub
push
mov
xchg
dec
popa
xchg
push
jle
adc
sbb
clc
xor
sbb
xchg
sti
outsb
mov
and
cmp
movsl
add
cmp
ja
stos
stos
sub
add
pop
jge
rcrl
jge
clc
push
sub
orb
inc
push
iret
rcll
test
and
or
xor
pop
ret
push
fcomp
pop
popa
pop
adc
adc
rcll
mov
and
xchg
sbb
loopne
xorps
ds
mov
or
pop
pushf
test
rcll
out
push
mov
mov
fs
and
inc
fiadds
sub
lret
jg
mov
push
push
ret
add
scas
popf
stc
adc
lahf
int
xlat
add
add
inc
into
loopne
add
cmpsl
sbb
xor
cmpsb
cli
pop
aas
and
and
lods
mov
movsl
mov
sahf
mov
lods
sti
add
or
movsb
in
rorb
imul
scas
dec
divb
lds
xor
jmp
pushf
filds
add
aad
fwait
and
mov
pop
and
push
dec
xchg
push
je
mov
mov
in
jmp
sbb
test
bt
push
mov
negb
and
popf
or
mov
jp
lds
rcl
pop
or
popw
mov
imul
cmpsl
icebp
mov
cmp
mov
xchg
out
imul
add
pop
inc
jne
out
push
mov
mulb
lahf
push
add
add
inc
into
pop
xchg
in
adcb
mov
aad
ds
leave
and
iret
les
or
push
cmp
dec
cli
decl
cwtl
and
inc
and
mov
movsl
cmc
push
xor
xor
inc
push
or
test
movsb
clc
outsb
repnz
and
scas
sbb
cmp
pushf
sti
push
loopne
add
test
xchg
add
stos
fs
mov
shrb
iret
int3
mov
stc
xor
mov
xor
gs
adc
adcl
daa
int3
lret
cs
pop
mov
mov
pop
sub
add
jae
jg
into
push
jo
stos
sbb
push
inc
xor
mov
out
loop
sub
adc
lods
pop
xchg
mov
roll
lds
inc
inc
fsubrl
flds
ds
xlat
andl
gs
sarb
ja
push
pop
test
arpl
movsl
cmp
std
inc
movsb
ret
test
mov
fldenv
scas
and
dec
adc
pop
push
shrb
jg
xchg
repz
in
cmc
adc
mov
cwtl
mov
xor
or
pop
pusha
arpl
arpl
sbb
xchg
jnp
test
inc
scas
int
cmc
and
mov
cmp
mov
shlb
pop
cmovs
mov
iret
fsts
subb
mov
xchg
xor
mov
mov
cwtl
mulb
les
mov
inc
loope
xchg
in
pop
push
data16
repnz
fistl
pop
clc
push
imul
jo
popa
push
mov
int3
sbb
pop
test
cmc
ret
xchg
std
mov
sbb
xchg
jne
xchg
add
push
and
pop
adc
ficomps
pop
loope
mov
pushf
lea
jo
in
sbb
jne
mov
xlat
mov
inc
mov
pusha
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
pop
fdivl
jo
push
push
mov
dec
test
repz
pi2fw
in
adcb
pop
xchg
xor
lret
imul
pop
in
aam
inc
sbb
mov
dec
stos
sbb
push
push
outsb
cwtl
adc
add
loop,pn
mov
cwtl
inc
test
sub
xchg
shl
dec
aas
leave
add
xor
into
in
outsb
xchg
fsts
cmp
jne
sub
or
mov
inc
repz
shlb
stc
jle
inc
sarl
xchg
adc
jmp
xchg
popf
adcb
dec
out
in
cmp
lock
insb
lds
sub
ss
cmp
xchg
loopew
pusha
loop
push
aaa
mov
xor
aad
cmp
jl
and
and
and
movsb
or
idiv
xchg
pop
loopne
popf
ds
inc
pop
xor
scas
test
iret
ja
mov
dec
pop
dec
lret
ljmp
in
bound
push
or
mov
test
pop
cwtl
ret
mov
or
je
aaa
mov
and
sub
insb
lret
fists
data16
cmc
mov
daa
jmp
dec
ja
push
ss
out
cwtl
cmp
in
arpl
test
test
mov
mov
jno
testl
sub
push
mov
int3
dec
push
bound
pop
dec
lea
sbb
js
movsb
pop
sub
std
jg
push
adc
add
adc
je
das
sub
es
mov
mov
xor
mov
lea
xchg
jnp
xor
ficompl
out
outsb
fmul
or
loope
mov
mov
imul
arpl
xchg
add
cmpsl
jno
or
shlb
shrb
scas
outsl
push
jns
mov
imul
in
push
xchg
repnz
or
and
lret
nop
clc
inc
sub
adc
fsubl
push
push
in
inc
daa
pop
inc
jmp
mov
mov
js
adc
mov
nop
iret
cmpsb
out
cli
in
jg
dec
data16
xchg
bnd
pop
ret
stc
daa
push
sbb
aas
sub
inc
mov
push
shlb
or
mov
es
dec
adc
stos
add
dec
inc
sub
inc
inc
jb
outsl
xor
mov
ss
push
cmp
cmpb
adc
scas
xchg
sarl
roll
xor
mov
fldcw
mov
or
mov
push
imul
jnp
lcall
aam
icebp
in
sub
test
dec
lahf
insl
das
bound
xchg
insl
pop
inc
cmp
mov
lcall
clc
mov
fs
mov
inc
dec
sbb
push
and
dec
push
pop
daa
mov
xor
and
push
sub
divb
pop
lcall
push
inc
cli
xchg
jns
jle
pop
pusha
push
xchg
clc
push
mov
jne
inc
outsb
add
mov
fwait
dec
pop
je
gs
ret
mov
out
xchg
les
push
cmp
jl
std
out
or
adc
dec
xchg
cmc
xchg
imul
and
cmp
inc
test
cmp
xchg
jge
push
push
in
shlb
outsl
roll
cmp
push
icebp
pusha
mov
push
inc
push
push
xchg
iret
sbb
push
stos
pop
aas
mov
inc
cs
int
jae
mov
mov
shlb
xchg
xor
rcr
or
jno
jno
fidivl
push
stos
leave
push
xchg
stos
dec
xchg
mov
cmp
divl
cmc
xchg
sbb
jo
repz
mov
cmp
cmpsl
pop
pushf
imul
add
aad
call
test
and
push
mov
and
cmc
pushf
jge
imul
ja
cmp
pop
mov
inc
mov
push
adcl
leave
insl
xchg
repz
xchg
dec
pusha
sbb
stos
xor
loope
pop
jbe
outsb
repz
loope
adc
and
jo
sbb
lret
idivb
inc
nop
imul
pop
scas
enter
addb
lcall
mov
fdivrl
jns
push
je
in
sbb
pop
mov
dec
scas
loope
mov
push
push
adc
sbb
enter
mov
dec
in
inc
sbb
notl
push
add
pop
iret
or
pusha
or
rolb
adc
mov
dec
pop
push
or
iret
mov
xor
cmp
sbb
jno
aaa
mov
pop
and
jno
hlt
jb
xor
mov
loop
jb
adc
pop
inc
sub
pop
test
push
in
or
mov
testl
dec
or
add
cltd
sub
cli
push
push
fadds
fs
sbb
push
iret
cmp
push
sarb
mov
push
out
outsb
icebp
mov
leave
add
jnp
arpl
es
cmp
inc
sub
pop
mov
cltd
in
dec
out
inc
mov
inc
ja
int3
or
xchg
lcall
ss
mov
add
mov
imul
lods
arpl
inc
jl
arpl
push
fdivrs
into
movsl
and
es
fisttpll
je
xor
jg
mov
lods
mov
jl
or
mov
in
fs
xchg
fcompp
and
outsl
adc
add
xchg
inc
shll
pop
push
and
sub
pushf
lret
add
cli
sbb
sbb
adc
lods
inc
sub
icebp
jo
jmp
push
std
loope
inc
and
cmp
fwait
loope
cmp
mov
imul
push
push
out
pop
cs
inc
ja
dec
dec
fcmovu
roll
sahf
pop
data16
cld
adc
and
repz
push
xchg
or
inc
aas
out
cmp
cltd
insb
inc
inc
adc
xchg
mov
cmpsb
pop
xlat
xchg
and
lods
js
rclb
xchg
sub
shld
cmp
sub
addb
jne
dec
in
das
movsl
leave
push
pushf
mov
loopne
inc
enter
or
out
int
sub
mov
cmp
imul
aam
sbb
jae
insb
sbb
loope
dec
mov
jmp
sub
cmp
ljmp
xor
sub
xor
push
jne
addr16
inc
xchg
dec
fucomp
pop
test
je
call
inc
add
mov
mov
mov
mov
push
add
push
adc
jmp
lcall
xor
dec
dec
data16
pop
add
inc
mov
lea
int
cmp
sti
mov
ja
ja
push
sbb
fs
adc
cmpsl
int
test
mov
filds
sub
pop
fstpt
fsubl
xor
inc
sub
jbe
push
xchg
subl
push
cmc
adc
popf
pusha
daa
add
cmpsb
dec
and
jae
dec
inc
pushf
das
xor
rolb
shrl
js
sahf
or
push
mov
sub
pop
int3
fmul
outsb
cli
lret
rorl
or
aam
adc
sti
lds
leave
stos
repz
insl
ljmp
aad
mov
fs
enter
pop
push
xor
xor
sti
movb
push
xor
clc
lods
in
cld
fnstsw
mov
lcall
lret
in
imul
lahf
shlb
cmp
frstpm(287
into
push
dec
xchg
jae
daa
push
mov
iret
cmpsb
push
mov
lock
int
sub
fs
sbb
sbb
mov
or
jle
mov
xchg
mov
cli
clc
jae
inc
insl
cmp
or
or
lods
test
lods
cmp
lock
and
cmp
call
add
int
xchg
cmp
xor
mov
ja
bound
xchg
bound
loope
outsb
mov
push
sub
and
jmp
jnp
jmp
mov
fbld
jae
les
std
out
cli
shrb
ds
outsb
dec
mov
cmpsl
repnz
mov
add
xchg
into
and
andl
dec
jne
icebp
nop
inc
xchg
sub
call
aad
jnp
cld
or
test
stos
fdivrs
out
popa
in
inc
or
shlb
insl
jecxz
mov
rep
inc
dec
sbb
push
imul
or
mov
scas
jmp
dec
in
je
sahf
addb
cmp
push
push
hlt
out
into
out
xchg
xor
xor
mov
pushf
insb
or
iret
add
mov
test
int
push
sbb
subl
and
stc
push
int3
dec
cmp
xchg
jmp
cwtl
mov
mov
mov
imul
shlb
add
in
ljmp
sbb
shll
add
lds
push
sbb
mov
lahf
mov
sbb
cmp
pop
mov
and
adc
pop
cmp
pop
mov
adc
sub
jmp
xor
andl
and
movb
or
xchg
stos
jb
loopne
loope
nop
aas
xor
inc
aad
aas
jno
push
xor
or
ret
mov
outsb
and
test
nop
insl
dec
movsbl
inc
jle
cmpl
lods
cwtl
cwtl
add
out
lret
ret
ret
push
repz
add
cmp
pusha
ja
push
xchg
xor
test
lds
cld
cli
xchg
push
pop
push
sbb
mov
rorb
mov
mov
and
mov
adc
in
daa
out
cli
lcall
sbb
push
xor
push
stos
out
mov
xor
sbb
enter
xchg
cli
inc
pop
mov
gs
xor
bnd
cltd
lcall
push
or
dec
das
mov
popa
les
sbb
inc
enter
pop
jbe
push
push
xchg
and
pusha
pop
sub
push
adc
mov
mov
and
push
arpl
cmc
ret
mov
xor
sbb
nop
fwait
adc
in
ljmp
adc
out
ret
and
xor
cli
es
push
loopne
mov
xchg
outsb
and
lahf
xor
cmp
push
mov
fmuls
push
xor
cmp
fdivrs
aam
int
jns
fsubrl
movhlps
pop
fistl
mov
outsl
out
push
mov
movsb
xor
repz
mov
dec
nop
leave
push
xchg
daa
cwtl
imul
jecxz
sahf
or
mov
out
fidivs
push
pop
fsts
mov
aas
lahf
aad
mov
inc
xchg
cltd
xchg
mov
sub
ljmp
xor
ret
ss
mov
cli
or
mov
push
inc
pusha
stos
jno
jns
pop
pusha
sbb
in
in
push
test
cmp
mov
adc
xor
mov
lcall
cmpsl
and
test
ds
dec
in
push
fwait
mov
pop
push
cwtl
scas
out
add
lods
pop
sub
lret
sbb
leave
or
xchg
rcll
and
in
add
pop
dec
daa
sub
inc
mov
das
fisubrl
cmpb
ljmp
loope
jb
mov
aad
cs
dec
cwtl
popf
jnp
out
daa
sub
insl
cwtl
and
xchg
cmp
pop
push
clc
fwait
ret
push
xor
adc
ret
add
xor
inc
sbb
aaa
xor
and
sbb
in
inc
fisubrs
xor
stos
mov
pop
mov
pop
mov
or
dec
dec
das
movsb
inc
and
enter
xchg
ss
xchg
mov
xor
lahf
out
lret
pop
or
jge
xchg
lret
mov
ret
jl
xor
mov
stos
mov
lds
fstpt
xor
jb
repz
test
pop
mov
cmp
dec
into
push
aaa
lea
ficoml
loopne
orb
call
jl
jne
pusha
imul
pop
cwtl
scas
inc
sbb
sbb
loope
or
rcl
mov
test
sbb
mov
ljmp
repz
mov
sbb
cmp
fbstp
cmp
lods
dec
test
and
mov
sbb
mov
cmp
sbbb
imul
add
or
in
pop
xchg
lock
frstor
push
xchg
or
jp
mov
sbb
xchg
dec
xor
xor
sahf
mov
fnop
pop
xchg
adc
cli
xlat
push
inc
popf
icebp
loope
stos
xor
fwait
mov
mov
mov
xchg
or
sbbl
call
sbb
mov
in
mov
adc
push
call
mov
mov
sub
mov
jmp
mov
and
cwtl
sub
inc
xor
and
push
add
push
pop
and
or
fisubl
je
loope
push
jp
repz
sub
out
imul
and
scas
and
inc
or
loop
mov
cmp
in
into
je
push
mov
outsb
xor
xorl
hlt
adc
popa
mov
push
jge
cmp
or
push
adc
adc
cli
mov
out
pop
jbe
repnz
test
cmp
fscale
out
out
xor
fmul
ja
dec
inc
leave
divl
ljmpw
outsl
xor
push
push
aas
or
push
pushf
push
mov
dec
cwtl
inc
mov
std
pop
setno
sbb
sub
lds
lods
xor
lret
loope
mul
out
mov
int
out
call
jns
mov
dec
test
into
lock
fnstenv
scas
repnz
jno
cmpsb
jge
roll
std
imul
mov
addr16
inc
sbb
push
out
mov
jp
into
sbb
inc
and
or
cmp
jle
and
jns
std
pop
cli
fucomip
mov
enter
xchg
aaa
imul
pop
popa
adc
xlat
mov
in
adc
mov
sbb
dec
outsb
push
mov
jnp
xchg
mov
inc
cli
mov
inc
outsl
idiv
sbbb
or
adc
rcl
push
mov
and
cmp
ja
sbb
pop
clc
add
add
mov
mov
lret
sub
pushf
inc
test
push
mov
sarb
dec
fcmovu
imul
cmc
aaa
add
ss
push
mov
cmp
ret
lret
push
mov
push
out
stos
dec
push
insl
push
lea
repz
sbb
lcall
xor
testl
mov
sti
sbb
dec
pop
jmp
icebp
rorl
inc
iret
andb
jg
insb
xor
mov
scas
ds
adc
mov
outsl
add
in
ja
push
or
or
sti
nop
cmp
mov
dec
pop
add
out
popa
insl
stc
jecxz
adc
sahf
scas
and
roll
insl
pushf
sub
inc
mov
std
bound
fucomi
bound
pop
or
jmp
in
std
fs
jmp
inc
and
stos
mov
lea
mov
dec
xor
pop
xorb
xchg
loope
imul
xchg
pop
out
sbb
ret
insb
frstor
xor
cld
loope
aad
scas
lea
fcoms
dec
or
jmp
push
add
stos
shll
xor
xchg
xor
loopne
out
mov
sarb
dec
mov
pusha
ja
inc
loop
jmp
add
repnz
push
divl
movsl
pop
cmpsl
cmp
sub
cmp
adc
out
xchg
inc
aad
test
or
inc
sub
roll
jecxz
pop
loop
notb
mov
outsl
pop
rorb
addr16
movsb
ljmp
pop
cmpsb
fidivl
imul
outsl
jo
push
add
fs
add
add
mov
lahf
pop
mov
lahf
pop
fisubrl
cmp
jge
stc
or
cli
pop
push
not
gs
mov
or
dec
jns
mov
sbb
aaa
daa
pusha
inc
mov
xlat
mov
test
sbb
xchg
inc
cmp
dec
push
and
mov
xor
rorl
iret
cmpsb
sahf
in
dec
sub
adc
inc
push
sbbl
fwait
arpl
jnp
hlt
sbb
cmp
fwait
stos
je
lock
cmp
leave
or
and
push
int
call
je
adc
inc
mov
pop
sbb
mov
hlt
push
adc
ret
push
arpl
dec
or
rclb
xor
push
fidivl
push
fstpl
movsl
fldln2
cmc
sti
test
jo
push
xchg
xchg
cmc
xchg
pop
xlat
dec
xchg
mov
inc
or
xchg
fsub
rclb
nop
mov
int3
cmpsb
pop
movsb
mov
pop
les
dec
faddp
adc
test
xchg
stos
mov
jmp
ja
xor
jp
test
sub
push
mov
fdivrl
xlat
push
in
rcrb
sarl
pop
xchg
negl
ljmp
pop
xor
adc
adc
mov
dec
inc
or
sub
push
cmp
push
stos
mov
pop
inc
xchg
int3
int3
mov
rorl
outsl
sbb
mov
fistpl
outsb
int
cld
repnz
add
fsubs
std
testb
xor
mov
icebp
popa
std
add
lods
mov
xchg
add
addr16
cld
cmp
xorl
pop
leave
pop
mov
push
xchg
js
jnp
dec
cs
out
scas
mov
movsl
psubsw
xor
push
sbb
ds
xchg
sti
in
pop
mov
icebp
pop
sub
pop
in
out
adc
pop
sbb
subb
xor
out
or
cwtl
or
mov
xchg
adc
call
pop
iret
out
adc
or
cmpsl
popa
cmp
cmpb
inc
loope
testl
mov
fmuls
pop
aaa
rcll
xor
bound
in
mov
mov
inc
in
es
xor
into
cmpsb
adcb
int
sbbl
int
xchg
shr
push
add
jnp
bound
add
stos
lods
pop
fwait
rcrl
and
movsl
mov
cmp
push
cmp
shrb
je
out
mov
cmp
sbb
ret
scas
xor
pop
into
adc
gs
ret
or
fstpl
and
cmp
fmuls
adc
incl
gs
nop
cmp
sti
mov
sbb
mov
imul
dec
dec
mov
dec
sbb
mov
mov
xor
jl
mov
sbb
call
xchg
test
popl
out
cmp
aaa
ret
mov
cmpsl
sub
push
rol
pusha
or
lods
mov
jmp
sbb
ret
jb
jp
or
xor
mov
pop
mov
je
mov
loop
shll
ret
pop
dec
daa
inc
sub
cbtw
fdiv
jg
dec
adc
aaa
test
or
mov
arpl
mov
mov
cmp
ja
arpl
push
cmpsl
int
addr16
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
jmp
lcall
or
mov
add
dec
push
in
popa
fs
fimull
cmp
jb
dec
enter
sub
lret
ret
addr16
dec
jecxz
andb
pop
cmpsl
sbb
xlat
pop
movsl
jo
push
dec
mov
mov
mov
ror
push
sarl
mov
out
repz
cmp
mov
dec
es
aas
mov
and
xor
out
xchg
jbe
lahf
outsb
idivl
jmp
iret
jmp
or
movsb
ficomps
pusha
and
rolb
test
jp
cmp
out
or
icebp
pop
rol
jle
sub
xchg
add
sub
adc
push
cmp
pop
repnz
jae
mov
ss
sbb
xchg
fdiv
loope
pop
jl
xchg
mov
pop
unpcklps
jmp
cli
lock
mov
and
js
adc
movsl
lret
fnstenv
xchg
jle
xor
pop
or
or
cs
adc
icebp
loop
fisubs
cwtl
or
cmp
pusha
lret
pop
jo
out
sub
hlt
ljmp
adc
int3
stos
push
push
pop
test
dec
push
aas
sub
xchg
jae
mov
outsl
xor
jbe
out
lods
rorl
pop
es
inc
imul
shlb
loope
test
cmc
pop
and
jns
xchg
push
test
fs
cmc
pop
adc
out
lea
es
push
ret
mov
inc
loope
inc
inc
mov
dec
test
add
push
jge
jl
test
lretw
cmp
xchg
lcall
mov
fs
mov
in
xor
and
mov
xchg
js
dec
cwtl
xchg
repz
loop
cmp
dec
out
inc
and
dec
add
jns
fsubrl
jb
popa
mov
aas
mov
xor
adc
add
pop
adc
and
arpl
pop
int3
inc
xor
or
jg
inc
dec
sub
jbe
inc
std
jp
ret
mov
roll
mov
jnp
jo
enter
nop
push
or
lahf
and
xlat
cltd
mov
pop
into
pop
iret
into
mov
mov
shlb
cwtl
mov
xor
popa
cltd
icebp
and
cmpb
mov
ficoms
aas
cmp
dec
jno
cmp
sahf
divb
sbb
lock
outsl
xor
cmp
push
xchg
inc
sbbl
inc
mov
xchg
int3
insl
nop
lea
fstl
sti
std
adc
das
sub
and
scas
inc
add
cmp
mov
jns
aas
jge
test
jl
adc
imul
scas
test
ret
mov
add
subl
adc
mov
jnp
popf
in
repz
mov
push
pop
out
jle
rcrb
fidivs
sbbb
mov
jb
inc
inc
fwait
adc
jl
and
xchg
mov
xchg
shlb
sbb
xor
mov
sub
fstpl
mov
cli
sbb
sbb
xchg
pop
xchg
data16
test
jno
aad
loopne
mov
sub
lcall
call
add
push
pop
in
mov
xchg
push
out
xor
hlt
fsubl
sbbb
or
lret
outsb
push
pop
pop
mov
out
mov
jno
mov
sbb
lret
xchg
out
jl
aam
pop
mov
cmp
or
cli
lea
and
sub
adc
xchg
js
lods
cmp
xchg
jge
aad
dec
sbb
adc
mov
cld
and
dec
lahf
std
arpl
mov
fisttps
jmp
jle
mov
ja
adc
add
or
icebp
rorb
xchg
incl
jmp
pop
add
xor
xor
jge
or
push
sbb
jg
sti
push
mov
aam
pop
inc
pop
test
xor
mov
mov
rclb
add
imul
mov
or
mov
test
lock
leave
dec
jns
les
popa
or
mov
lods
or
push
repz
jne
inc
es
test
jl
rorb
mov
cmp
mov
sarb
or
loopne
mov
sub
out
dec
jg
mov
mov
in
xchg
test
xchg
adc
outsl
jbe
adc
popl
dec
ret
push
xor
mov
daa
cmp
lea
out
lds
xchg
stc
push
pop
cmp
sti
rclb
push
mov
leave
inc
xchg
jle
lcall
xchg
shl
xchg
rolb
out
jbe
cmc
add
addl
fstl
mov
clc
testl
jg
cmp
fwait
cmp
pop
sbb
cld
shl
xor
aaa
and
clc
imul
das
cld
mov
jne
cwtl
push
sar
jno
dec
lods
rorb
adc
cwtl
xlat
cmpsl
into
add
adc
dec
xchg
aas
mov
movsl
xorb
jg
insb
sub
jmp
fisubrl
sub
pop
js
sahf
out
mov
mov
sub
mov
cmpsl
sahf
cmp
push
or
imul
repnz
and
imul
xchg
in
sbb
dec
inc
dec
jae
mov
arpl
lret
in
dec
sbb
addb
in
movsb
nop
fwait
stos
pop
mov
add
xchg
roll
aas
imul
lods
dec
cmp
mov
xor
adc
sub
shl
stos
ljmp
shrl
xor
mov
mov
out
in
pop
mov
stos
mov
push
cmp
or
jbe
mov
lods
fdivp
aad
and
add
sti
out
mov
ret
in
mov
mov
icebp
mov
jmp
xchg
push
lcall
sub
push
das
sub
jne
mov
aam
push
lods
ljmp
insb
out
push
stos
mov
imul
add
popf
mov
cmp
sbb
fbld
lods
mov
mov
arpl
jnp
inc
xchg
xlat
aam
mov
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
jmp
mov
sbb
popf
or
ret
outsb
xchg
in
inc
add
cmp
ss
jns
and
or
cmp
xlat
sub
ds
rorb
mov
cwtl
mov
cwtl
fisubrs
int
hlt
and
cs
js
xor
scas
push
mov
std
fwait
sbb
loopne
pop
or
jo
or
mov
xchg
xchg
mov
repz
xchg
test
sub
popa
push
int
pop
mov
in
push
les
mov
es
bound
lret
xor
and
and
fxch
cli
dec
add
add
mov
std
inc
out
and
mov
mov
enter
cli
mov
leave
sbb
push
gs
add
jl
mov
jae
mov
sbb
loope
pop
clc
jecxz
lahf
cmc
or
out
adc
insb
xchg
pop
push
cmc
mov
jle
mov
mov
or
lds
fisttpl
nop
enter
std
pop
out
push
lods
push
xchg
and
ds
sbb
adc
loope
mov
aam
jb
lret
inc
xor
cmpb
mov
imul
jo
cmp
cwtl
push
dec
lret
ret
push
mov
imul
fwait
ljmp
dec
dec
adc
adc
fisttpll
mov
outsl
inc
pop
and
in
inc
mov
cmp
xchg
loopne
pop
adc
mov
notl
mov
adc
push
in
jno
adc
mov
jo
cwtl
sbb
mov
push
mov
add
hlt
popf
in
mov
mov
divl
aam
fnsave
nop
cs
out
pop
shrb
sbbb
dec
fwait
cmp
xor
mov
enter
inc
xchg
xor
cld
cmp
mov
sbb
nop
lret
repz
cmc
pop
fs
pop
lock
lods
inc
aaa
fistps
fistpl
dec
xor
pop
dec
cmp
orb
push
fsubrs
negl
push
cmpsb
iret
insl
inc
movsb
xor
loop
ljmp
push
shll
scas
shll
mov
cld
and
push
icebp
mov
push
mov
xchg
in
out
sub
xchg
movsl
adc
pushf
adc
mov
loop
outsl
aad
int
add
xchg
cld
insl
stc
or
add
stc
movsl
outsb
sbb
cmp
cmp
js
lret
push
xchg
push
dec
lock
in
mov
or
push
mov
lret
pop
movsb
dec
lahf
rorl
rorl
add
lret
cmp
divb
inc
add
hlt
xchg
ds
idivl
outsl
dec
adc
insl
and
ja
out
loope
jo
sub
or
mov
lret
ret
in
inc
pop
inc
dec
bound
and
lcall
fwait
pop
lret
addb
ja
and
loope
clc
cmovne
aam
imul
gs
mov
dec
sub
aam
movsb
jb
repz
sub
loope
xchg
mov
dec
in
ja
adc
ret
mov
jecxz
stos
scas
imul
push
lcall
xchg
in
cltd
jmp
rcrl
push
push
shll
inc
cmc
add
nop
aam
inc
jo
out
not
pop
dec
sahf
pop
int
push
mov
xchg
addr16
in
xlat
aam
jb
sub
sub
jge
lret
mov
pop
dec
cmp
fcmovu
aad
jbe
lods
jns
jp
cmp
inc
mov
xor
out
mov
imul
out
xor
fnsave
test
in
mull
cld
fwait
dec
xchg
cs
call
mov
shll
mov
jo
or
add
and
loop
lret
pop
or
inc
fwait
hlt
adcb
leave
xchg
and
cmp
jecxz
pop
inc
mov
adc
ret
sbb
inc
call
arpl
add
cmp
aas
push
jg
sub
hlt
mov
cmovg
pop
pushf
xchg
or
mov
pop
and
mov
cltd
pop
inc
aam
xchg
mov
or
jb
mov
in
mov
jne
insl
lret
negl
xor
sarl
sbb
or
pop
loop
mov
xchg
pop
lods
dec
and
aaa
adc
mov
in
dec
jno
mov
mov
adc
adc
ljmp
adc
pop
shll
dec
mov
loopne
repz
push
pop
mov
jle
xor
add
insb
jnp
cmc
fidivl
xchg
push
sub
rol
jne
cmc
fidivl
fnstsw
add
cmc
fwait
daa
insb
jb
sahf
inc
loopne
icebp
inc
pop
or
insb
and
shll
sbb
inc
xchg
sar
pop
shl
std
push
push
ljmp
movb
inc
dec
js
je
lods
pushf
insb
xor
ds
addr16
jmp
cmp
sbb
roll
add
mov
rcl
xchg
or
mov
shrb
and
stos
add
mov
add
sbb
inc
outsl
es
adcl
or
out
das
and
xchg
adc
and
jl
dec
cmp
jnp
popa
pop
mov
lret
ja
arpl
add
out
mov
push
mov
into
inc
and
add
jne
fdivs
ret
fisubrs
jp
shl
inc
outsb
xlat
xchg
lock
cmp
push
xor
and
and
js
sbb
fldt
pop
xchg
pop
add
fbld
push
cld
pop
movswl
js
int
jae
add
fsubr
and
incb
in
mov
dec
rcll
aad
bndstx
outsl
adc
or
inc
mov
xor
sbb
in
lret
fdivrs
xor
cmc
push
inc
shll
xor
scas
lea
mov
stos
jns
add
pop
fimuls
mov
addr16
pop
imul
out
out
cld
data16
pop
outsl
mov
dec
sub
shlb
dec
mov
and
rorl
imul
add
leave
xchg
sub
cmc
jge
ds
mov
lods
out
ret
out
jmp
mov
test
clc
scas
jl
bound
inc
push
push
cmp
sub
subb
je
sub
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
jmp
mov
xchg
adc
mov
ret
ss
add
gs
fistps
call
test
cmp
imul
scas
iret
rcrl
mov
lea
adc
xchg
aas
loope
cmp
push
stos
dec
call
in
cmp
stc
mov
cmp
or
mov
and
mov
stc
out
xlat
scas
sti
mov
pop
add
add
outsb
pop
add
and
fimuls
sti
das
add
lods
push
dec
jb
cmp
addr16
jnp
push
test
mov
dec
mov
notb
out
and
rclb
push
add
ljmp
sbb
inc
pop
ret
lahf
lods
inc
rcrb
or
or
sbb
jns
add
push
fimuls
out
cmp
stos
mov
xor
hlt
push
stos
xor
mov
scas
xchg
mov
jno
imul
ficoms
and
sbb
mov
sbb
and
dec
imul
xchg
pop
xorl
test
inc
sti
sbb
or
mov
out
adc
test
enter
inc
dec
call
jo
sbb
fldl
pop
das
adc
xchg
sub
insb
decb
cmp
in
in
xchg
cmpsb
mov
xchg
mov
mov
add
mov
cmc
cmp
fucomp
cld
sbb
jmp
cmp
aad
lret
popf
jb
roll
inc
push
das
jg
js
dec
inc
sbb
mov
lret
aad
or
mov
xor
jo
cltd
aaa
jge
push
cmc
and
in
loope
clc
dec
sti
insl
daa
fistps
mov
enter
dec
fistpl
xchg
dec
mov
sub
sbb
pusha
jno
sub
mov
jp
pop
aad
xchg
xor
pop
int
mov
cmpsl
scas
dec
aaa
and
pusha
stc
dec
xchg
test
or
test
loope
imul
or
out
movsl
es
add
add
xlat
mov
das
call
add
fdivl
lahf
xchg
cmpxchg
push
mov
mov
call
dec
add
sub
inc
mov
lea
pop
mov
push
sub
out
mov
inc
out
jno
cmp
aad
rcrl
jo
jmp
cmp
jp
xor
cmpsl
ljmp
ret
xchg
jne
mov
mov
clc
in
push
xor
mov
repnz
jo,pn
dec
mov
mov
cmpsb
daa
adc
mov
mov
clc
popa
sbb
pop
aad
andl
push
push
rclb
mov
push
and
xchg
es
xchg
dec
push
pop
test
insl
cmp
or
cmp
fbld
out
or
leave
stc
inc
xchg
pop
adc
cmpsb
inc
inc
and
and
test
cmp
dec
mov
in
mov
xchg
push
ds
xchg
xor
negl
in
mov
mov
test
call
sbb
inc
inc
shrl
fdivl
mov
aas
adc
mov
inc
nop
mov
stos
ja
cld
xor
xor
mov
sbb
adc
loop
pop
or
icebp
lods
cmp
dec
scas
daa
push
cmc
pop
push
mov
inc
push
dec
out
dec
shl
cmc
das
sub
lds
insb
rcrl
ljmp
scas
stos
xchg
sahf
add
bound
cmpsb
adc
adc
addr16
push
cmc
adc
and
xor
cmpsb
scas
cmp
inc
jl
xlat
jae
add
and
mov
inc
mov
sub
xchg
dec
sarl
movsl
hlt
lea
sbb
cmc
or
out
or
ficoml
xchg
dec
cmp
imul
xchg
scas
enter
cli
movsl
inc
sbb
push
fldenv
pop
leave
mov
lods
lds
in
push
and
lods
rcrl
xchg
notl
push
iret
daa
int3
pop
cli
test
and
ret
fstps
rcr
push
push
leave
cltd
and
adc
adc
lea
in
add
repnz
mov
or
inc
test
and
and
mov
xlat
pop
pushf
cmpl
and
insl
adc
inc
mov
fldcw
jnp
fsub
lock
daa
mov
xor
push
pop
xor
arpl
xor
outsl
lahf
xor
cmp
in
xchg
fstpl
cmpsl
out
dec
dec
cmp
pop
push
dec
pop
xlat
adc
call
pushf
cld
xchg
stos
mov
xor
mov
pusha
adc
enter
lahf
popa
lret
add
out
gs
daa
or
jae
in
jno
xor
or
enter
add
loop
jmp
pop
hlt
test
mov
push
add
out
mov
inc
push
mov
pop
push
sbb
xlat
mov
repz
popf
mov
test
mov
mov
aaa
jno
mov
adc
fcoml
and
fisubrl
loop
stos
test
pop
adc
dec
fcmovnu
scas
outsl
lods
inc
or
sbb
sub
xchg
dec
xor
das
pop
cld
sbb
pop
inc
cmpsl
testl
es
jle
inc
shrb
sub
push
xchg
adc
mov
nop
dec
out
pop
bound
fildll
mov
push
es
push
mov
shr
adc
or
jns
mov
int
dec
js
int
mov
scas
or
sub
btc
roll
mulb
into
mov
pop
dec
adc
sub
cmc
xlat
cld
call
push
rorl
push
jo
pop
push
cmp
mov
adc
jae
std
push
mov
addb
inc
or
or
xchg
ss
mov
mov
jbe
aas
imul
mov
popa
arpl
xor
test
sub
push
out
fadds
xchg
dec
test
dec
pop
and
xchg
gs
push
xchg
fiaddl
push
ret
aaa
std
mov
rorb
mov
xor
hlt
cmpsl
jmp
mov
xchg
test
int3
out
test
movsl
nop
add
cmp
fcompl
ds
stc
add
sbb
jae
jg
pop
jecxz
pop
push
push
cmp
pop
push
cmc
cmpsb
push
mov
mov
mov
push
push
push
jmp
dec
js
gs
push
pop
cmp
xchg
sahf
xchg
jg
add
mov
fistps
and
mov
pop
push
fdivr
fnstenv
sbb
test
je
xchg
jg
lods
outsb
adc
mov
shll
mov
mov
movsb
sub
jb
js
add
cmp
fmul
fwait
js
cmc
aam
std
std
int
sarb
in
mov
pop
inc
sbb
push
rcrl
rorb
xrelease
in
xchg
outsl
fidivrs
mov
push
add
add
push
add
xchg
mov
mov
push
jae
add
iret
jl
sub
sbb
addr16
add
outsb
or
xchg
je
inc
pop
xchg
mov
xor
stc
sti
push
loopne
jne
and
adc
cs
push
das
test
or
rcrb
sti
and
into
cmp
xchg
xor
mov
mov
pusha
stos
or
icebp
cmp
test
and
inc
addl
cmpsb
xchg
xchg
or
test
cmp
sbb
pusha
jne
jl
xor
cmpsb
lret
popf
and
sbb
and
cs
jne
fwait
pop
push
int3
dec
cmp
ret
bound
push
sbb
popa
mov
cmpsb
repz
mov
push
inc
ffree
mov
cmpsb
dec
xchg
jne
pop
push
sub
mov
inc
mov
jo
cs
cmp
into
or
repz
cmp
mov
dec
outsb
or
xchg
add
fidivrl
mov
adc
sbb
jns
fs
fildl
in
xor
jp
ret
pushf
and
leave
jb
adc
xchg
adc
lea
ds
ds
cmp
lea
es
cmc
mov
dec
sub
xchg
cmp
sub
jae
ror
jb
stc
add
lcall
jb
in
dec
add
dec
push
push
xchg
sbb
xchg
addr16
std
xor
jae
repz
andb
shlb
mov
and
insb
lret
push
or
aaa
dec
jp
mov
mov
cmpl
jno
dec
imul
inc
mov
repz
lea
mov
push
dec
pop
fs
xchg
xlat
gs
arpl
xchg
test
pop
pop
and
and
int
roll
out
push
ds
push
mov
es
xlat
mov
out
loopne
or
cmpsb
push
in
gs
inc
inc
xlat
js
jne
jbe
xchg
push
movsb
stos
insb
aas
pop
push
push
aas
je
test
pop
jnp
mov
fwait
loope
jbe
arpl
stc
lods
xchg
add
cmp
push
inc
faddl
push
jmp
jl
es
jle
pop
insl
bound
adc
sbb
dec
dec
int
pop
xchg
sbb
loope
bound
lahf
xchg
mov
popa
fdivrs
imul
mov
jae
xchg
fwait
stc
int3
pop
push
xchg
mov
in
cmp
insb
add
inc
push
inc
lods
sub
fimull
sub
rorb
xchg
loopne
jae
or
or
ret
sbb
lret
adc
inc
shrb
xchg
fwait
and
add
xchg
mov
les
mov
mov
add
popa
adc
mov
cmp
mov
int
add
jnp
jbe
js
mov
movsl
dec
pop
xchg
or
gs
jl
pusha
mov
cmpb
add
or
test
test
jp
mov
cwtd
adc
jno
dec
xchg
cmpsb
adc
insl
push
mov
movsl
sbb
add
or
xor
dec
das
or
repnz
push
mov
dec
popf
and
xchg
push
xchg
stos
arpl
cwtl
enter
cli
sahf
and
mov
jmp
addr16
iret
and
into
ljmp
sahf
and
push
scas
data16
insl
sti
addl
test
outsl
ret
and
lcall
and
cs
imul
sbb
movsb
cmp
pmaxub
rcrl
fadds
add
insb
iret
or
add
mov
iret
lds
jo
fidivs
jnp
and
fidivrl
ss
and
lahf
cmp
inc
dec
lods
clc
outsb
sub
ret
pushf
push
rcl
sub
orl
fisttpll
pop
dec
jmp
pushf
test
mov
inc
lods
mov
mov
xchg
cmp
out
cmpsl
mov
xchg
ds
imulb
mov
xor
clc
inc
stos
test
ficoml
push
dec
push
sbb
xor
push
push
dec
push
nop
mov
push
rol
mov
cmpsb
sub
enter
and
nop
pop
push
push
mov
cmpsb
cmp
jg
or
out
push
hlt
jle
mov
pop
cmp
sbb
push
ljmp
xchg
jl
push
sub
or
in
test
leave
pop
and
adc
cmp
out
mov
push
push
iret
mov
repz
pop
inc
mov
mov
xor
lret
scas
imul
mov
jae
push
dec
sbb
rorl
sub
repnz
call
lret
mov
jmp
imul
jl
movsb
or
push
loop
loopne
pop
xchg
lret
jge
arpl
pop
xchg
daa
add
push
adc
jmp
jb
mov
out
popf
imul
xchg
test
enter
ljmp
hlt
scas
loopne
cwtl
in
inc
mov
xchg
stos
sub
sub
scas
clc
stos
test
psrld
sub
lret
or
mov
sub
pop
xor
ds
xor
mov
xchg
mov
aas
pop
repnz
xlat
add
jle
testl
inc
pop
jo
and
cmp
addr16
cmp
popf
shl
ja
sub
or
push
call
jo
sbb
lea
dec
cmpsl
stc
loope
push
sbb
sbb
jo
aad
jo
pop
xchg
cmp
mov
packuswb
xchg
jae
clc
inc
push
pop
jns
ret
mov
dec
pusha
fmuls
xlat
lret
xor
ffree
lahf
cs
fadds
call
test
out
lret
and
pop
mov
and
cmpb
jl
inc
and
test
jp
push
ret
mov
mov
or
sub
loop
call
push
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
jmp
fnstenv
inc
mov
mul
push
push
inc
or
add
push
jno
xchg
mov
pop
cmp
sbb
push
in
add
mov
add
clc
or
cltd
lret
in
xor
insl
xchg
lds
lret
idiv
mov
add
test
cmpb
outsl
jo
add
inc
jle
je
jne
rolb
ror
enter
std
mov
nop
clc
out
jge
jo
in
pop
sub
xor
push
lods
sbb
xchg
xor
push
sbb
adc
cmc
dec
inc
cmp
cmp
imul
fs
ret
xchg
sar
jle
test
mov
push
dec
js,pt
leave
leave
lods
fcmovbe
cmp
xor
popa
lret
rcrb
dec
xor
jmp
cmp
data16
mov
divb
out
jmp
pop
loope
push
nop
aad
lahf
jg
mov
pop
xchg
test
dec
fsubp
popf
orb
or
scas
jbe
xchg
mov
jne
mov
xchg
sub
sbb
sub
arpl
ds
movl
jge
jnp
in
push
idiv
fistpl
ss
bnd
ds
mov
sbb
jns
cmpl
lcall
in
xor
dec
or
cld
hlt
jo
ret
clc
sub
cmp
push
enter
clc
rorb
out
dec
adc
out
push
mov
fisttpll
fmuls
hlt
pop
outsb
lock
jae
test
test
bound
dec
mov
ret
icebp
loope
mov
call
popa
cmc
mov
out
push
jb
ja
movsl
repnz
or
test
adc
fucomip
jae
cmp
cs
add
addr16
fistpl
xchg
mov
cmpsb
hlt
mov
mov
jb
and
pushf
and
push
pop
call
cwtl
fs
jp
cli
cmpl
xchg
inc
iret
stc
adcb
mov
mov
test
xchg
in
int
jecxz
or
push
cld
or
popw
dec
mov
xchg
and
xchg
adc
push
in
or
mov
loopne
lods
insb
sbb
rolb
push
jbe
mov
lea
lock
ret
cwtl
push
ss
xor
push
insb
mov
jae
clc
jb
pushf
out
fld
inc
or
mov
push
xchg
mov
jmp
in
enter
mov
dec
jb
sti
ds
add
gs
mov
mov
loope
adc
stos
rcrl
push
mov
push
fwait
lods
mov
call
cmp
dec
shl
iret
dec
jo
cmpl
xor
push
mov
call
pop
xchg
dec
sub
mov
inc
mov
movsb
mull
xor
sbb
test
out
push
jecxz
ret
cli
jp
push
adc
out
jne
pop
shl
dec
mov
std
icebp
cli
push
sub
call
or
mov
push
xor
mov
add
xchg
pop
cmp
pop
les
xor
dec
push
adc
pop
mov
dec
jo
cmp
sub
inc
bound
add
cmpsb
dec
cltd
lret
xor
clc
ss
adcl
mov
sarl
jno
adc
xchg
sbb
jnp
mov
incb
push
push
xor
and
jl
cmp
insl
or
dec
and
mov
pop
repnz
rcl
xlat
pop
add
xchg
lea
and
mov
jne
stc
sbb
mov
xchg
inc
add
popf
jmp
xor
xor
xchg
mov
pop
inc
mov
mov
int
dec
push
push
xchg
xchg
sub
arpl
nop
lret
xor
inc
jnp
mov
lret
adc
shrb
sub
in
pop
cmp
sbb
pop
xchg
fidivl
add
push
fdiv
jnp
jl
mov
enter
data16
jp
jae
ficompl
stos
cli
xchg
call
add
push
and
int
popf
lods
mov
orl
sub
lret
in
cmp
notl
popf
adc
and
and
mov
pusha
xchg
xor
je
and
arpl
int3
into
jle
outsl
dec
in
clc
sbb
out
inc
fmull
dec
xorb
mov
aaa
inc
fdivp
lock
mov
dec
jge
and
dec
add
jb
jmp
repnz
jle
enter
dec
test
and
test
jl
mov
push
imul
insb
inc
lahf
jno
repz
sbb
out
ss
xor
bound
jb
dec
pop
sbb
movsb
es
es
push
popf
lods
inc
shlb
rorl
aaa
jp
or
test
sub
mov
popf
mov
mov
xchg
jns
ja
lock
cmpsb
sarl
dec
cmp
cld
or
sbb
jl
jno
adc
pop
or
cli
addr16
add
mov
push
sbb
push
mov
movsl
xchg
loopne
test
int
vmaxps
cmc
ret
rorl
or
jns
inc
dec
outsb
mov
stos
mov
and
xorb
movsl
dec
sarb
sbb
inc
push
in
jmp
jg
xor
jge
mov
mov
sbb
fisttpll
testb
cmp
inc
ja
and
dec
xorl
sub
xchg
in
out
pop
stc
mov
or
outsl
push
adc
jmp
fbstp
lea
popf
inc
add
xchg
aas
adc
mov
add
in
mov
repz
inc
xchg
call
push
in
pop
popa
cld
pusha
xchg
sarl
pop
cmp
jae
mov
out
dec
mov
stc
mov
dec
mov
pop
aam
in
cmp
mov
inc
push
pop
xchg
divb
pop
test
jae
xchg
inc
cmp
ja
rcr
lret
ss
lds
fsubp
mov
fists
inc
add
or
sub
cwtl
subps
jmp
add
sub
jmp
cmp
xchg
push
sti
int
in
mov
or
dec
push
and
jno
call
aad
adc
pop
das
sbb
push
jecxz
outsb
xor
add
mov
push
loop
xchg
mov
mov
and
int3
mov
aas
inc
cwtl
or
jno
mov
out
fiaddl
stc
push
in
inc
cmpsb
cmp
scas
jo
add
pop
add
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
jmp
out
fisubl
push
jne
lret
sti
xchg
in
movb
add
out
pop
lods
popf
or
or
rcl
jo
xor
stos
adc
stc
sahf
subb
jae
rolb
and
mull
xchg
inc
push
xchg
outsb
lahf
push
into
cli
adc
out
je
sub
fucomp
push
and
push
shrl
mov
push
les
xchg
sub
add
scas
adc
add
fwait
xor
in
pop
and
movsb
xchg
cmp
fcmovb
mov
rclb
cmpsl
ret
aaa
cld
lret
inc
cmp
jbe
inc
and
jmp
add
or
pop
mov
in
jp
movups
pop
ret
add
loopne
test
jne
xor
sahf
sbb
jbe
push
rorb
xchg
push
mov
xor
mov
popa
shrl
and
mov
add
dec
mov
xchg
les
add
or
or
dec
jne
jb
push
arpl
test
cmp
xor
push
push
aaa
int3
por
loop
loope
out
lock
or
xchg
inc
lea
jo
jl
xor
sbb
mov
loope
or
in
push
push
icebp
icebp
add
sbb
dec
cmpb
cmp
mov
ret
insb
test
fmuls
inc
inc
mov
sbb
inc
lret
or
mov
loope
cwtl
push
push
or
push
xchg
test
xor
adc
fisttpl
out
xchg
std
aaa
mov
mov
fiaddl
push
insb
iret
sbb
pop
sub
sti
addr16
adc
xor
ja
in
xchg
cmpsb
cmp
aaa
lods
push
mov
clc
inc
inc
ds
push
test
loop
xor
in
mov
movnti
jecxz
pusha
jmp
xor
jmp
and
movsb
sbb
nop
dec
xchg
aas
xchg
jmp
push
sub
mov
jg
rcr
xchg
cmpsl
jp
jl
sbb
xchg
sbb
cwtl
lcall
cmp
xchg
pushf
push
subl
mov
jnp
lods
jbe
adc
xchg
pushl
popf
pop
jecxz
cli
das
aam
insl
bound
push
mov
cs
pop
xchg
xchg
scas
adc
stos
scas
frstor
xchg
inc
movsb
repz
push
outsl
sbb
shlb
out
xlat
loope
sbb
ror
lret
mov
add
fldt
sbb
pop
pop
cmpsb
popa
in
aas
add
stos
mov
test
cmp
shlb
push
mov
pop
lods
lds
mov
hlt
xor
and
mov
push
std
sub
mov
sub
lahf
or
ret
aam
push
mov
inc
push
aam
pop
lea
loopne
push
mov
jg
mov
inc
mov
inc
inc
and
xchg
pop
cld
jns
loopne,pt
cmp
lods
daa
test
and
sub
jne
pushf
lock
insl
js
cmp
mov
hlt
inc
jle
push
jmp
int3
dec
cmp
mov
fwait
loop
jmp
movsl
outsl
pop
mov
scas
fwait
push
ret
and
mov
cmp
xchg
xchg
inc
repz
test
lret
cmp
loopne
scas
push
repz
mov
push
addr16
inc
std
lea
in
fildll
sub
out
xor
xchg
pop
pop
sbb
jmp
js
lds
daa
lcall
xchg
mov
lret
inc
cmpsl
cmpsb
add
push
push
adc
loope
imul
lcall
pop
push
jnp
inc
push
pop
int3
pop
pop
out
data16
or
cmp
shll
dec
inc
push
jno
testl
and
int
sbb
cli
sbb
cmp
ret
dec
pop
add
mov
cld
popf
jmp
imulb
out
inc
xor
aas
cmp
ficompl
xor
mulb
xchg
arpl
pop
sub
dec
call
cld
cltd
idiv
mov
mov
scas
nop
xor
jge
push
cbtw
dec
std
and
insl
shlb
js
jle
pop
fisubrl
pushf
and
dec
jg
outsb
mov
adc
cmp
lea
mov
clc
sub
xchg
fnstcw
pop
jl
outsb
sbb
mov
mov
push
ljmp
mov
cld
cmp
ret
xchg
adc
adcb
es
fwait
aas
cld
repnz
jl
sti
sub
xor
ljmp
sbbl
xor
xchg
sbb
pop
sbb
sahf
test
and
out
mov
push
dec
aam
xchg
out
movsb
xchg
lret
or
sbb
dec
inc
fstl
insl
aam
adc
pushf
les
repnz
mov
scas
arpl
jl
mov
xchg
test
mov
cmp
adc
fcmovb
mov
mov
insl
icebp
push
pop
pop
mov
cmp
int3
and
mov
mov
pop
xchg
sahf
mov
fsubs
sahf
inc
test
mov
repnz
cwtl
sub
push
ja
fnstsw
xor
loop
rolb
popa
or
int3
sbb
js
mov
xor
sbb
mov
inc
std
cmpsb
inc
ja
scas
fdivs
loopne
scas
aaa
std
jg
mov
shrb
imul
jp
or
loopne
push
aad
push
rcll
push
clc
or
sub
cmp
xchg
jg
mov
mov
out
mov
mov
mov
jg
sti
imul
mov
adc
xchg
inc
mov
adc
jge
das
add
lcall
cmp
adc
dec
test
add
pop
cmp
lret
sahf
je
or
push
fdiv
jg
jmp
pop
inc
fst
mov
lcall
mov
sbb
and
push
mov
aaa
sahf
inc
lret
cmp
outsl
insb
and
lahf
adc
lsl
lret
jg
loopne
xchg
mov
in
lock
xchg
xchg
fstpt
and
mov
aaa
cmpsl
jle
mov
sub
mov
xchg
mov
lock
les
jae
or
xor
mov
xor
mov
push
push
push
push
call
push
push
jmp
add
lds
jmp
call
cmovnp
imul
dec
repz
adc
mov
nop
leave
cmp
in
mull
mov
jbe
sub
nop
xor
lret
lods
rclb
rclb
scas
pop
xlat
repnz
out
popf
push
mov
mov
push
add
popf
rcrb
imul
xor
movsl
or
inc
cs
sti
push
stos
decb
xorl
jb
icebp
sub
add
adc
in
test
mov
sbb
push
clc
mov
sbb
hlt
sub
and
dec
push
add
fisubl
lods
push
dec
loopne
xchg
popa
pop
iret
push
jecxz
outsb
dec
cmp
idiv
inc
inc
and
ficoml
cs
or
fadd
jp
pusha
cmp
pop
pop
jecxz
aas
sbb
push
out
mov
adc
sbb
mov
imul
in
int
pop
jl
pop
xchg
sti
jne
cmp
add
jae
dec
mov
cs
iret
into
push
mov
dec
loope
lods
int
leave
dec
aaa
imul
jecxz
outsl
fsubl
dec
push
inc
inc
sub
cmp
mov
jecxz
xor
xor
mov
dec
in
in
hlt
cmp
outsl
cmp
shrl
cmp
or
addr16
icebp
xor
adc
cmp
sub
negb
outsb
mov
addr16
sub
ja
divb
sti
xchg
jnp
xchg
sbb
in
fsubs
stc
sub
dec
sbb
add
mov
adc
mov
pusha
leave
fmuls
imul
int3
adc
pushf
xor
or
sub
mov
stos
fmuls
cs
jnp
xchg
int3
arpl
gs
or
hlt
popa
add
mov
xchg
pop
dec
pop
pushl
push
add
loope
and
mov
or
pop
out
cmp
repnz
cmp
dec
or
pushl
aaa
or
xchg
out
mov
jp
xlat
push
push
pop
xor
insl
notl
dec
rolb
mov
xchg
or
mov
adc
jo
jno
push
push
mov
cltd
mov
cmc
push
aam
ljmp
mov
out
dec
push
jmp
pop
cld
jno
mov
adc
outsb
jecxz
and
and
sbb
add
inc
add
pushf
movsb
add
call
mov
push
mov
mov
pushf
rol
pop
dec
sbb
add
or
pop
jo
outsl
frstor
cwtl
add
mov
or
cmp
in
cmp
int3
lret
fimuls
fistps
pop
stc
push
push
push
xor
arpl
cmp
mov
and
cmpsb
fdivs
stc
shl
mov
imul
xchg
loope
push
outsb
mov
lds
xlat
xchg
add
dec
sub
add
inc
lcall
jns
xchg
cmp
dec
sub
push
cmp
pushf
ds
fidivrl
and
mov
mov
cli
daa
xchg
arpl
loope
fldcw
mov
int
fsubr
cld
xchg
dec
inc
jno
ret
insl
jae
lahf
inc
push
push
and
mov
inc
xor
dec
pop
lcall
xchg
xor
sahf
cmpsb
popf
mov
or
xchg
pop
movsl
mov
jmp
jno
xchg
cmp
adc
mov
push
popf
mov
jg
scas
and
les
fbld
in
out
xor
test
addl
mov
dec
insl
xor
mov
es
fidivrl
std
clc
dec
sbb
scas
loopne
mov
aam
nop
lods
scas
cwtl
and
in
mov
adc
xchg
sub
imul
iret
popf
movsl
inc
call
jo
mov
aam
cmp
iret
iret
rcr
popf
xor
ljmp
inc
mov
call
xor
sbb
mov
jno
call
mov
sbb
jl
mov
mov
cmp
test
shlb
ja
mov
mov
adc
pop
stos
fs
sub
mov
mov
insb
sub
inc
ret
out
xor
jns
leave
scas
xor
pop
ja
mov
sub
stos
movsb
jecxz
xchg
cmc
scas
sub
mov
xchg
sbb
jl
data16
and
sub
rol
mov
pop
add
rcr
mov
cs
xchg
mov
cltd
subb
jmp
lock
pop
mov
in
clc
add
ja
mov
jb
out
dec
push
jg
addr16
icebp
int
mov
dec
fwait
jge
pop
xor
push
lds
xchg
jle
sub
lret
shl
fcmove
dec
jnp
popa
jbe
jnp
cmp
mov
xchg
loope
mov
push
das
test
dec
inc
mov
xor
adc
adc
sbb
push
add
ret
add
cmpsb
sahf
fsts
cmp
push
xlat
jmp
xchg
shr
stos
ljmp
push
lcall
pop
cmp
jmp
pop
iret
jno
daa
add
and
dec
es
dec
xor
mov
arpl
add
cmp
std
jb
call
shrb
add
xchg
std
cmp
sub
inc
xor
push
iret
clc
mov
pop
aad
ja
cmp
push
inc
sti
lods
dec
clc
xor
xor
pop
jg
movsb
repz
scas
repnz
xchg
outsb
pusha
or
add
and
jge
cmp
js
shl
outsb
in
in
psraw
int
inc
pop
jmp
add
stos
sub
mov
ja
xchg
jno
lods
nop
xchg
hlt
jmp
inc
pop
sbb
fistpll
int
cmc
ficoms
idiv
sub
add
push
xor
nop
mov
xor
bound
pop
add
push
lcallw
fcomip
pop
cmp
and
or
push
imul
mov
repz
scas
gs
jmp
xchg
inc
js
sbb
dec
jge
inc
or
mov
sahf
add
in
inc
ret
inc
xchg
outsb
inc
adc
inc
cmpl
lds
cmp
add
cmp
inc
sbb
pushf
test
aaa
add
jmp
icebp
xchg
stos
popa
int3
cmp
mov
ret
mov
outsb
add
mov
in
xchg
sbbb
aad
mov
dec
repnz
pop
repz
mov
or
and
stos
aas
mov
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
adc
movl
mov
sub
mov
xorl
mov
addl
movl
orl
jmp
sti
out
out
jo
jo
pop
inc
push
push
mov
js
invd
add
addps
or
bound
jbe
ljmp
and
packssdw
scas
xor
popf
sbbb
lret
scas
sbb
je
xchg
dec
inc
jo
inc
outsl
mov
jno
dec
scas
aas
test
imul
insw
movsb
rorl
cltd
lcall
shufps
mov
es
std
jmp
test
fstpt
pop
rolb
ljmp
sbb
loopne
or
inc
call
in
ret
sti
push
push
mov
jns
sbb
push
fnstsw
xchg
sbb
out
jbe
dec
daa
imul
shlb
push
sub
outsl
leave
loop
and
xchg
push
fs
pop
inc
mov
imul
cmp
jbe
push
xor
mov
xchg
fs
lret
dec
out
jo
push
or
lcall
mov
mov
test
andl
cld
sub
mov
ja
jmp
xchg
lahf
nop
imul
inc
cmp
dec
jp
lahf
add
xchg
outsb
int3
sbbb
mov
mov
add
sub
into
bound
je
pop
testb
xchg
stc
jp
adc
test
add
sbb
adc
repz
inc
add
addb
ds
daa
fiaddl
pop
outsb
lret
sub
xchg
sub
mov
ds
dec
cs
cs
lahf
jbe
sbb
push
push
mov
shll
in
aaa
sbb
pop
mov
movsl
inc
push
in
movaps
or
in
adcl
sar
call
push
fiaddl
fidivrl
roll
dec
scas
fiadds
jns
inc
in
std
mov
ja
mov
jnp
nop
push
mov
cmc
popa
aad
sub
jp
mov
xchg
and
jl
mov
sbb
xchg
adc
jo
mov
xor
push
xchg
push
hlt
in
sahf
std
add
xor
add
daa
lods
pop
in
mov
push
cmp
ret
loop
arpl
mov
push
ror
stos
sub
in
xchg
divb
data16
fisubs
jb
insb
dec
cs
cltd
push
add
jp
popa
js
repz
lods
pop
outsb
push
sbb
lcall
mov
push
dec
xor
mov
dec
add
adc
push
or
mov
int3
push
mov
push
cs
jg
shl
push
xchg
pop
jl
fldpi
in
into
ret
outsl
pop
and
jns
cmpsb
cs
cmp
jl
mov
push
mov
into
and
xor
xchg
loope
decb
pusha
sub
mov
int
mov
loopne
sbb
push
mov
sbb
jge
mov
loopne
scas
pop
dec
or
mov
jp
sbb
mov
and
inc
and
xchg
addl
mov
fs
lcall
push
push
inc
gs
mov
testl
jl
test
or
and
cmpsl
ja
or
push
sub
cld
add
mov
movsb
js
xlat
mov
mov
lahf
into
loope
test
bound
inc
add
imul
pushf
xor
dec
cmp
sbb
add
jbe
rcrl
out
mov
mov
pop
fists
or
mov
mov
insl
xchg
insb
subb
scas
insb
push
pop
xchg
es
sarl
dec
fldenv
jnp
ss
cmpsb
sti
subl
sub
dec
jge
aad
es
scas
xor
lcall
xchg
sbb
push
adc
cmp
push
inc
and
sti
dec
sub
test
rorb
push
jmp
lods
cmpsb
add
stos
mov
arpl
sbb
cmp
or
add
push
sbb
hlt
push
lods
pop
inc
movsb
popa
cmp
std
mov
push
xchg
push
stc
push
movb
aad
jmp
sahf
sbb
pop
hlt
rolb
adc
inc
dec
mov
inc
jae
pop
dec
sub
testl
in
jo
fdiv
xchg
mov
cmp
push
pusha
stos
push
inc
outsb
push
push
sahf
fstpl
push
data16
xchg
xchg
fldt
jge
test
sub
gs
mov
cmc
cwtl
jmp
insl
clc
jnp
fwait
inc
out
shlb
xor
lea
mov
inc
lret
jge
dec
popa
cmp
arpl
hlt
xor
js
stos
ja
jp
daa
add
push
mov
fmuls
cmp
dec
sbb
dec
add
inc
mov
cmpsb
frndint
dec
pusha
ret
fldpi
stos
jne
clc
add
or
cmpsl
dec
test
lea
mov
nop
in
lea
es
ja
sbb
sbb
adc
rorb
adc
nopl
sbb
pop
les
mov
jne
in
inc
ror
or
enter
in
adc
pop
push
xchg
addb
jl
out
dec
arpl
mov
jp
scas
xchg
es
pop
add
scas
lods
inc
jno
fidivrl
gs
push
or
into
jno
inc
std
and
mov
js
std
pop
out
outsl
push
mov
ds
aaa
sub
push
mov
push
pop
push
jle
pop
xor
sar
shl
insb
adc
adc
cmp
dec
movsl
fcom
outsb
push
sbb
push
into
andb
push
cmp
les
jle,pn
mov
movsl
push
jmp
xchg
in
mov
in
popa
sub
push
xchg
sub
arpl
push
pop
push
jno
out
inc
push
test
into
enter
rorb
xchg
rcrb
in
sbbl
mov
imul
or
xor
xor
xor
pop
jp
jl
inc
in
movb
movb
cmpl
jbe
andl
adc
jmp
pushl
call
movb
movzbl
mov
sub
imul
mov
or
movzbl
push
orl
and
mov
movb
movl
movb
subl
movb
movb
orl
mov
orl
mov
subl
add
adcl
jmp
ret
sub
shlb
mov
xor
mov
les
invd
add
bswap
lret
fcmovnu
mov
dec
jp
dec
mov
dec
mov
call
clc
or
pop
ror
sbb
add
mov
hlt
push
and
sub
mov
xor
and
cltd
xchg
xor
ds
push
rorl
push
sub
push
test
aad
aaa
mul
ds
mov
xor
push
xchg
in
test
dec
xchg
idivb
movsl
push
push
lock
rolb
hlt
pop
jne
clc
enter
sub
xor
in
sbb
pop
adc
dec
stos
fistpll
pusha
iret
and
add
add
jmp
inc
aaa
inc
lds
pop
in
sarl
mov
pop
test
xchg
out
pop
int
movsb
or
test
sub
xchg
and
adc
mov
push
pusha
mov
mov
xchg
sbb
aad
lcall
mov
xor
dec
ss
ficoml
int3
xchg
cmp
mov
pop
leave
cmp
jp
mov
jle
jns
lods
stc
add
inc
mov
por
and
cmp
push
xor
cli
fnstcw
adc
sbb
adc
push
out
or
mov
mov
inc
idiv
adc
fnclex
sbb
out
bound
ret
add
sub
xor
xorb
sbb
shrb
push
aas
mov
cmp
scas
mov
sbb
lds
xorl
pop
mov
nop
push
out
xchg
out
sbb
std
xchg
pop
cmp
or
sbb
test
mov
int3
mov
push
push
inc
pop
fsubl
aaa
pop
mov
push
in
jl
data16
xor
push
cli
xor
or
orl
scas
jae
in
lods
mov
push
iret
loopne
stc
push
pop
lods
mov
inc
je
fstps
push
push
int
lret
adc
adc
movsl
std
push
push
lock
imul
push
and
loopne
fwait
xor
out
pop
lods
push
addr16
xor
pusha
cmpsl
cmc
call
lods
xchg
mov
dec
movsl
pop
jb
pushf
outsl
pop
mov
sbb
and
pop
fisubrs
adc
movsl
pop
ds
and
outsl
jg
mov
sti
mov
imul
stc
test
js
fadds
fwait
pusha
iret
cwtl
mov
cmp
push
xor
inc
xchg
jecxz
xchg
mov
fcoml
jo
xchg
ljmp
dec
adc
or
out
stos
jmp
lods
cltd
cmp
movsl
xchg
sbb
jns
push
push
adc
mov
push
icebp
insb
mov
inc
adc
dec
xorl
in
inc
jnp
xchg
cwtl
or
sahf
mov
nop
ds
dec
ficoms
pushl
stc
add
adc
lds
int
xchg
push
pop
out
lods
les
icebp
roll
push
lds
pop
mov
and
cmp
hlt
test
out
sub
ja
mov
pushf
mov
xor
or
add
xor
lret
sbb
sub
test
mov
les
cwtl
xchg
aad
popa
mov
adc
fistl
jecxz
sub
lds
cmp
lods
test
shl
dec
sub
rol
cmp
xchg
jp
out
movsl
inc
test
cmp
cli
and
cs
test
xchg
lret
mov
xor
int3
or
pop
and
mov
aam
test
gs
dec
loop
mov
mov
repz
and
scas
fiadds
aam
mov
nop
lret
push
push
lods
popf
inc
bound
xchg
in
and
or
add
ja
cmpsl
cmp
insl
and
mov
or
lcall
mov
in
xor
lret
fsubs
fsubrs
mov
pop
adc
test
cltd
arpl
cmp
cmp
fisttpll
negb
sahf
mov
popa
and
and
jbe
pop
lds
rol
sbb
pop
addr16
insl
push
test
outsl
and
push
jecxz
add
push
repnz
xchg
out
and
ds
cmp
das
cmp
pusha
xor
aas
cmp
xor
inc
sbb
in
fimuls
pushf
popf
fcomip
push
in
sub
inc
pushf
and
pop
xlat
fneni(8087
fst
sub
push
mov
xor
or
and
dec
jb
hlt
cmp
mov
push
scas
cmp
jbe
clc
push
fldl
sub
sub
adc
and
cwtl
mov
rclb
enter
and
push
adc
gs
addr16
sbb
sub
jnp
xchg
movsb
xlat
icebp
adc
pushf
xor
add
add
mov
push
rcrl
dec
dec
clc
sahf
sbb
add
icebp
dec
out
mov
sub
ss
int3
jb
inc
decl
cli
aaa
sahf
cli
aaa
inc
xor
in
daa
lock
dec
push
sub
insb
js
mov
shr
insb
outsb
dec
push
mov
cwtl
outsb
jmp
cmovb
jecxz
pop
mov
dec
add
or
xchg
sbbb
daa
aaa
imul
or
mov
data16
faddp
ret
int
scas
xchg
or
jl
xchg
pop
cltd
and
xor
lods
jecxz
push
push
sub
push
cmp
push
or
cmpsb
jo
test
aam
shll
incl
test
das
les
push
inc
ss
xor
iret
jecxz
push
mov
mov
loop
mov
rcll
shll
push
dec
fistpl
dec
sbb
and
lret
out
push
push
repnz
xchg
mov
lcall
fsubrl
pop
jp
add
je
stc
imul
mov
addl
or
addl
mov
subl
and
movl
jmp
mov
hlt
add
sbb
loop
mov
invd
add
unpcklps
popf
clc
cltd
fiaddl
loopne
repz
aas
inc
push
dec
popf
icebp
dec
cmc
cwtl
aam
cmp
sub
repnz
mov
cmp
xor
sti
shrl
mov
push
inc
int
push
mov
scas
ret
or
jle
cmp
mov
mov
mov
sbbl
movsl
movsb
sub
stos
and
jo
ljmp
in
clc
addl
cmp
mov
sbb
jl
mov
add
push
sarl
xchg
outsb
out
mov
stc
ficoms
fimuls
sbb
sbb
inc
add
es
pop
lcall
push
movsb
loop
jmp
mov
test
sbb
in
mov
iret
or
xchg
or
out
jg
cmpb
jb
arpl
cmp
xchg
cmp
cltd
dec
mov
pushw
shr
mov
fadds
push
sbb
or
push
rol
cmp
enter
outsb
sbb
sub
jl
mov
xchg
jl
or
iret
ds
repnz
fsubrs
cld
imul
and
mov
cmp
popf
push
mov
pop
mov
movaps
pop
sbb
fidivrl
push
xchg
popa
dec
data16
add
out
je
sbb
loope
call
push
rcr
scas
fcmovnbe
xor
in
mov
xor
xor
inc
jmp
int
filds
xchg
cwtl
xor
jmp
cmp
xchg
mov
xchg
mov
insb
or
mov
int
lods
xor
push
dec
jle
je
inc
mov
fiadds
push
das
in
cs
clc
fstpt
sbb
pop
xchg
popf
es
xchg
mov
fs
sbb
lods
imul
cmp
aaa
out
add
pushf
fisubs
push
mov
mov
pop
mov
shrb
push
dec
js
int3
mov
movsb
push
stos
mov
sbb
cmp
and
lock
jl
and
subb
repnz
int3
mov
jae
mov
popa
sbb
out
cs
cmc
lret
add
inc
aam
dec
imul
sub
fxch
push
mov
add
notl
shlb
adc
sub
jp
iret
sub
jl
or
sti
sub
mov
clc
leave
adc
jmp
fdivp
fildl
loope
jb
mov
shrb
flds
xlat
sub
push
jbe
lock
divb
stos
adcb
je
dec
xchg
dec
popa
mov
mov
or
add
push
in
in
jbe
js
ss
stc
sbb
stos
and
outsb
adc
xchg
xor
gs
cmp
sbb
sbb
xchg
pop
sub
in
jnp
in
xor
and
xor
xor
lds
dec
mov
int3
les
mov
dec
pop
icebp
mov
fisubs
mov
cmc
in
jle
ss
addr16
insl
sub
xor
or
mov
sti
les
neg
mov
pop
and
mov
enter
and
dec
cltd
mov
push
fsts
xchg
lret
inc
test
push
lea
cld
sbb
ret
roll
xchg
add
rcl
and
loop
xor
lcall
lock
push
jmp
cmp
popf
jl
rcrb
jne
or
push
cs
xchg
cmp
dec
or
mov
push
jns
cmp
test
loope
cmc
fldcw
sbb
push
in
test
fstp
mov
das
mov
lret
insb
sbb
push
pop
mov
mov
sub
mov
xchg
push
push
lds
fstps
insb
mov
push
adcl
ja
inc
adc
jmp
cli
clc
aaa
sbb
test
stos
out
ja
jo
enter
in
ds
test
insb
ljmp
pusha
push
cmc
aas
fcomip
insb
bnd
or
mov
adc
aas
pop
mov
outsl
repz
insb
in
stos
xor
push
pop
lods
mov
out
cld
mov
mov
or
dec
loop
mov
mov
mov
pop
outsl
or
xchg
lock
ret
mov
mov
mov
mov
sub
rorb
inc
scas
pop
cmpsb
repnz
inc
test
popa
mov
and
mov
inc
jns
in
dec
pop
dec
push
int3
sti
dec
or
iret
mov
insl
xchg
je
orb
aas
jae
stos
jbe
inc
cmp
sar
dec
rol
sub
pop
cltd
jecxz
lret
shrb
arpl
data16
adc
push
fmull
rol
test
das
out
sarb
cmp
insl
aaa
cmp
push
leave
test
fsts
push
cmpsl
or
adc
jb
stc
jp
sbb
rorl
aas
and
cwtl
dec
sub
adc
sarb
ret
jne
mov
jne
add
lods
rolb
push
and
sbb
mov
mov
dec
mov
int3
vshufps
sbb
mov
xor
xchg
sbb
push
mov
ret
aas
sbb
xor
pop
stos
push
rcl
pop
lds
cmpb
adc
pop
push
fldl
fists
inc
adc
and
outsl
inc
mov
adc
stc
sbb
inc
xchg
test
xor
xchg
lock
dec
push
adc
addr16
dec
addl
add
mov
sti
mov
subl
jno
nop
clc
cwtl
pop
push
je
aas
add
sub
mov
outsl
or
push
addr16
xchg
cmp
ja
mov
mov
sub
mov
cmpl
jl
andl
mov
and
jmp
push
push
push
call
mov
mov
movzwl
movzwl
shr
addl
or
sub
movl
mov
orl
movb
movb
sbbl
mov
mov
xorl
xor
addl
add
xorl
movzbl
movzbl
sub
cltd
mov
adc
mov
jmp
mov
pop
push
and
sub
mov
mov
lahf
ret
invd
add
pand
icebp
and
je
shrl
inc
mov
lods
cmp
dec
insl
loopne
sbb
jb
fcmovnb
in
cmp
stc
xchg
es
fimull
sbb
ds
addr16
cld
mov
mov
push
jge
push
mov
leave
pop
int
and
orb
scas
repnz
syscall
sarb
js
stos
mov
mov
inc
mov
scas
pop
sub
pusha
push
fwait
xor
pop
xchg
pop
xor
in
push
mov
xlat
cmp
ds
nop
inc
push
addr16
popf
mov
test
mov
aaa
add
or
subps
cs
rolb
inc
pop
int
add
aam
insl
aaa
xor
pushf
leave
xor
ret
mov
adc
lret
push
movsl
or
add
jnp
daa
les
pop
push
lret
scas
sbb
or
dec
enter
sub
inc
les
sbbl
inc
mov
add
aaa
outsl
mov
pop
inc
dec
mov
out
push
iret
mov
pop
mov
push
outsl
mov
out
arpl
push
or
xlat
ljmp
mov
sti
adc
or
loope
das
pop
mov
or
fcom
cmp
jle
cmpb
stc
cli
xchg
mov
aas
mov
dec
rol
add
and
mov
mov
jge
fnstsw
add
pop
dec
aad
testl
mov
aam
mov
in
xchg
fcomps
mov
xlat
insl
mov
es
add
das
push
icebp
enter
negb
lods
add
stos
mov
push
and
pop
or
cltd
mov
test
popf
bnd
lods
int3
mov
shrb
outsl
arpl
inc
sub
jno
mov
loop
stc
ljmp
jne
fdivr
mov
leave
rorl
adc
rolb
push
call
fistl
leave
jb
mov
dec
jno
dec
in
icebp
push
jns
loop
xchg
lret
push
pop
jecxz
std
cmp
and
mov
pop
xlat
mov
ret
leave
pop
or
mov
or
cmovae
pop
out
pop
jg
scas
sub
or
pop
idivb
mov
push
and
stos
inc
orl
mov
xchg
sahf
fnstenv
pusha
hlt
movsl
jo
out
push
push
imul
cwtl
lods
repnz
ret
sub
lret
jbe
imul
leave
mov
xchg
push
xchg
dec
mov
std
xor
popa
inc
adc
add
cmp
cld
in
cmp
push
inc
or
push
adc
mov
fmuls
add
mov
into
xchg
sbb
out
xchg
xlat
add
repnz
pop
lods
enter
jge
push
mov
mov
in
or
jo
push
test
push
loopne
dec
push
wrmsr
cmp
mov
and
in
divl
jnp
or
movsl
push
xchg
arpl
mov
push
inc
inc
push
cmc
mov
xor
xor
test
push
mov
dec
call
inc
xchg
inc
push
pop
scas
pop
push
dec
cmp
test
adc
cmp
stc
xchg
and
aas
ljmp
fisubs
pop
add
pop
pop
ds
movsl
cli
mov
mov
lahf
fmull
outsl
mov
movsb
rol
inc
inc
loope
inc
repnz
lret
hlt
cmp
fcmovnbe
pop
data16
outsb
lea
int3
iret
sbb
test
cmpsl
pop
cmp
push
cmpsb
inc
and
mov
rolb
insl
jl
jge
xchg
pop
xor
mov
adc
adc
push
insl
int3
in
xor
mov
push
jmp
lods
mov
stos
hlt
test
out
out
movb
xor
lds
sub
jbe
cmp
push
ds
pop
mov
es
pop
andb
cld
mov
cmpsb
pop
inc
adc
je
out
daa
xlat
sbb
jns
dec
jne
popf
je
pop
sbbl
sub
mov
pop
and
int
sar
jge
mov
sub
cltd
xor
pop
push
loope
or
dec
les
iret
imul
mov
loopne
out
pop
mov
push
xor
xor
iret
and
cmp
lods
jno
mov
sub
inc
dec
stc
and
mov
mov
mov
mov
divl
aas
popa
pop
lret
cmp
lods
test
sub
scas
inc
roll
dec
mov
mov
cmp
sti
out
inc
lahf
cmpb
sbb
jp
addr16
es
stc
addr16
mov
mov
loop
movb
pop
lods
xchg
sub
xchg
mov
and
imul
push
sti
subb
inc
jmp
js
and
fs
mov
xchg
daa
sti
xor
pop
je
jg
out
mov
add
je
iret
popf
gs
insl
xlat
mov
adc
jnp
lods
sbb
shrl
out
data16
mov
lcall
fcmovnu
movsl
movsl
in
and
lods
push
jecxz
cmp
xchg
out
adc
pop
aas
into
mov
xchg
pop
mov
lar
ficompl
sti
lods
mov
lret
sub
push
adcb
testb
mov
pop
in
pop
dec
push
sarl
cmp
daa
mov
pop
or
rcrb
mov
xchg
cmp
sbb
pop
test
lret
outsl
push
xor
icebp
inc
xchg
mov
jns
sbb
adc
mov
and
rcrl
lods
mov
cwtl
or
test
mov
mov
subb
pop
in
pop
ds
stos
dec
xchg
mov
fiadds
pop
jo
dec
arpl
mov
mov
push
mov
andl
mov
xchg
jg
cmp
add
mov
or
jmp
push
call
jmp
sub
push
xchg
jne
jle
cli
cmp
invd
add
andps
jae
ds
jns
loope
out
xchg
out
sub
fmul
add
fwait
jecxz
push
pushf
cmp
sbb
xchg
mov
xchg
pop
sbb
sub
xchg
dec
jl
cmp
pop
ret
ret
add
and
push
bound
sub
int
add
xor
inc
dec
push
xchg
cmp
sbb
inc
into
insb
jo
jae
xchg
scas
popf
popf
out
test
out
fs
movsb
cmp
outsl
xchg
xor
sbb
rcrb
and
add
in
test
fiadds
add
scas
leave
fisttpll
pop
sbb
adc
xchg
dec
sub
jmp
mov
adc
add
jb
mov
mov
imul
mov
pusha
mov
inc
and
lret
push
jns
jne
or
cld
or
cmp
out
mov
jno
add
or
sti
cmp
mov
adc
cmp
insl
lret
das
bound
mov
or
dec
xor
inc
pop
into
rcll
pop
aaa
push
mov
cmp
push
idivl
add
jmp
les
in
sbb
xor
jnp
mov
cltd
clc
mov
cmp
stc
pop
cmp
pop
adc
sbb
push
sub
inc
mov
fdivs
fs
sub
jo
aaa
mov
js
fwait
shll
cwtl
fdivl
mov
rcll
xchg
les
sti
or
addr16
sbb
lcall
je
xchg
leave
push
sub
out
call
add
das
pop
xlat
jae
sti
mov
add
clc
lods
xor
ljmp
jg
mov
lcall
mov
aam
mov
xchg
aas
inc
sbb
lea
sub
jmp
sub
cmp
push
ja
int3
push
icebp
in
insl
fidivs
and
adcl
xor
mov
pop
loopne
xchg
pop
fstpl
cmpsl
incb
jl
inc
stos
in
cmc
mov
sbb
out
std
in
rorl
add
xchg
or
mov
push
iret
icebp
loopne
fnsave
repnz
sub
push
xchg
test
sub
lds
movsb
xlat
stos
stc
inc
sti
ja
call
xor
fwait
jnp
movsl
or
addr16
sub
iret
push
mov
pop
xorb
xchg
sbb
ds
ds
or
xchg
xlat
mov
out
pop
sub
icebp
push
xchg
sarl
jbe
cmp
mov
cmp
jo
add
jle
mov
fildl
in
or
pop
in
push
sti
adc
aam
adcl
aaa
mov
mov
aam
mov
push
sub
ljmp
testl
enter
push
sarb
iret
or
add
fidivrl
rclb
push
push
cld
xchg
or
fildll
xlat
sbbl
ret
mov
ret
sbb
cmp
fld
lcall
mov
pop
loope
jo
push
inc
mov
push
mov
fstl
daa
popf
jl
and
cwtl
mov
jnp
test
add
out
pop
arpl
ja
cmpl
xor
xor
js
sbb
sub
add
inc
ret
ret
fldcw
push
jle
push
mov
xor
or
imul
mov
jecxz
sbb
cld
jae
adc
mov
and
and
jp
fnstsw
mov
xchg
adc
ret
popf
pusha
xlat
cmp
mov
inc
jmp
aam
iret
shll
test
mov
ret
sbb
xchg
mov
mov
push
or
insl
push
fwait
out
mov
add
sub
fcmovnu
mov
aaa
sub
ljmp
pop
cld
cmp
movl
mov
dec
xor
insb
arpl
lahf
loopne
dec
sbb
sbb
mov
pop
xchg
jmp
ljmp
xchg
pop
mov
and
outsl
and
addl
stos
enter
lods
sti
call
mov
scas
fiadds
pop
subl
inc
rcrb
mov
xorb
and
stos
xor
mov
scas
movsb
fidivrl
mov
sbb
lcall
dec
pop
fstps
bnd
nop
mov
mov
ja
dec
and
push
jmp
in
sbb
xchg
push
inc
or
test
inc
les
lcall
fildl
mov
push
add
clc
repz
icebp
outsb
dec
push
push
cmp
cmp
mov
jae
lea
mov
ret
pop
jb
out
subb
pop
arpl
addr16
mov
fistpl
rcpps
imul
adc
add
fdivl
das
mov
xor
sub
push
icebp
rol
xor
xchg
ja
mov
sub
sbb
aas
jno
adcl
es
sbb
push
clc
push
adc
int
jl
iret
dec
or
mov
xchg
aaa
jne
or
mov
xor
or
jo
icebp
lock
outsl
ret
sti
ljmp
movsl
jmp
adc
cld
adc
and
push
xor
xor
mov
fidivl
cmpsl
adc
fidivs
icebp
call
inc
sub
das
movsb
xchg
insl
dec
into
mov
xchg
mov
data16
mov
mov
pop
or
ret
adc
push
or
add
sub
cmp
sub
out
and
stc
jmp
mov
xchg
mov
pushf
push
xchg
add
setno
scas
sarl
inc
cmp
push
adc
movl
cld
push
fisubl
cltd
mov
sub
mov
cmp
hlt
add
mov
stos
outsl
jo
out
mov
aas
pop
cltd
idiv
cmp
rclb
fdivrp
dec
cmc
cmp
fldl
movsl
std
cs
pop
shrb
cmpsl
daa
fsubrs
jno
add
cltd
pusha
xor
dec
add
mov
jmp
mov
dec
sbb
ret
xor
mov
inc
fwait
push
cwtl
movsb
push
imul
sbb
pop
iret
aad
mov
lret
and
sbb
cmpsb
xchg
jbe
ja
sub
jae
mov
orb
xor
mov
mov
mov
xor
cmc
adc
push
loope
insb
inc
sarb
ret
push
sbb
sub
jmp
shrl
sbb
in
daa
xor
mov
sbb
ds
stc
pop
jo
es
mov
cmp
adc
imul
push
pop
test
cmp
stos
out
data16
cwtl
mov
and
adc
aam
adc
push
inc
jecxz
jne
sbbb
rcr
pop
mov
cmp
clc
push
stc
and
xchg
xor
test
cmpsb
or
add
cmp
sti
dec
xchg
mov
in
insl
leave
lea
push
jae
jnp
lea
repz
daa
pop
pop
ficomps
pop
xchg
jbe
aam
cmpl
ja
mov
jl
jo
push
cltd
xor
add
stos
jmp
xor
icebp
mov
je
add
imul
leave
inc
or
ljmp
icebp
and
cwtl
loope
jmp
movsb
outsb
sbb
lds
mov
inc
pop
push
mov
mov
ljmp
mov
inc
imul
lret
mov
mov
or
std
mov
daa
mov
cs
push
xor
mov
outsb
mov
mov
lds
int
mov
xor
mov
xchg
sub
add
jne
lods
enter
das
dec
out
lcall
sub
fstpl
imul
es
or
xchg
xchg
lret
nop
out
mov
and
jb
mov
imul
mov
cli
mov
movsl
inc
jecxz
and
fldt
cmpsl
jge
sbb
out
or
push
ja
test
jmp
dec
push
pop
xorl
jl
mov
sub
test
jae
loopne
ret
in
adc
scas
mov
xchg
aas
xor
push
or
leave
push
loop
aad
test
fs
leave
sub
addr16
mov
loopne
and
lahf
mov
and
adc
cmp
cmp
insl
pushfw
xlat
inc
loop
sahf
push
inc
or
insb
dec
daa
outsl
add
je
jb
cmpsl
aad
mov
add
jo
divl
jl
data16
lcall
lret
in
pop
idivl
pop
xchg
movb
push
scas
lret
sub
pusha
jno
sbb
xor
insb
adc
lahf
test
push
movsb
fsubrs
sti
nop
add
rcrl
mov
xchg
push
pop
mov
out
adc
enter
or
add
sarl
mov
inc
pop
cmp
push
jne
mov
js
int
mov
call
push
sbb
mov
pcmpgtw
xchg
add
pop
fwait
xchg
and
cmp
clc
and
xor
loope
fildll
push
mov
pushf
inc
push
inc
mov
lds
scas
mov
into
sub
stos
fbld
cwtl
shrl
mov
add
add
jp
mov
jbe
jecxz
cwtl
sti
mov
cmpb
loopne
stos
fs
jo
fwait
xchg
insb
jnp
enter
dec
jo
aaa
sar
pusha
lods
push
das
cmp
sti
push
into
iret
xchg
mov
xchg
and
cmp
mov
push
sbb
inc
jbe
icebp
jo
mov
shll
stos
aad
sti
insl
dec
lock
jl
mov
adc
sti
push
das
pop
push
std
xor
mov
sub
repnz
sbb
out
inc
adc
pop
mov
mov
xchg
mov
pop
jns
adc
lea
mov
paddsb
or
movsl
sti
leave
bnd
mov
xchg
sub
repnz
push
adc
cmp
xor
sbb
push
inc
xchg
jno
pop
xchg
ljmp
dec
and
and
fucomi
pop
mov
xor
inc
ja
and
jge
lret
aad
cld
or
jns
test
rcrl
dec
push
pop
out
imul
in
pop
imul
test
std
lds
scas
sti
add
mov
add
in
mov
jmp
adc
mov
outsl
cmpsl
jmp
bound
gs
into
dec
sbb
stos
sub
testl
mov
sub
adc
pusha
mov
dec
repnz
push
insb
sub
xor
add
sub
mov
rolb
gs
repnz
outsb
push
push
xor
jns
pop
push
and
in
arpl
jl
lea
cmp
inc
sbb
pop
sarb
stos
aas
pusha
insb
repnz
jge
and
sbb
sub
imul
mov
es
scas
cmp
inc
test
sub
repz
sbb
dec
add
fst
dec
sarb
stos
xor
xchg
stos
dec
cld
mov
push
xrelease
insl
cltd
enter
test
mov
lret
jns
push
mov
cmc
dec
mov
sub
push
data16
fstl
ret
adc
es
jbe
xchg
nop
mov
icebp
add
inc
out
cmpsl
mov
andl
jmp
dec
mov
aaa
es
mov
js
mov
invd
add
psrlw
lcall
or
ljmp
imul
inc
insl
lock
add
loope
daa
test
ret
cmp
dec
test
mov
aam
leave
push
int3
push
inc
mov
jnp
popa
mov
ficompl
test
xchg
fimull
lock
nop
add
mov
int3
int
mov
je
push
mov
add
lret
aas
mov
xlat
scas
insb
into
dec
cmpsb
ror
in
pop
push
bound
stos
inc
cld
shlb
movsb
pop
arpl
icebp
jge
arpl
adc
ljmp
push
movsl
sub
icebp
mov
xchg
or
arpl
sub
dec
subl
add
pop
sub
out
repz
lahf
xchg
movzwl
outsb
push
popa
repnz
and
xchg
insb
int3
outsl
adc
gs
fsubrs
sbb
mov
mov
sti
inc
subl
jbe
out
cli
jmp
cmpsb
in
add
adcb
pop
call
mov
cmp
push
xor
mov
cmpsb
pop
pop
adc
cltd
pop
sti
and
andb
out
sub
xchg
jns
sbb
inc
adc
sub
mov
mov
mov
cmpsl
mov
push
cmpsb
jp
add
test
add
xchg
ss
les
mov
sub
ds
nop
andb
xchg
les
inc
mov
jne
add
jns
inc
lret
out
int
icebp
add
sahf
subb
stos
aaa
xor
dec
inc
xor
jmp
adc
pop
cmp
mov
pop
ret
addr16
std
add
paddusw
and
or
out
push
aad
lock
fwait
xchg
jl
dec
flds
lds
cwtl
sub
or
shr
stc
sbb
jne
cmc
sbb
add
jmp
loopne
push
insb
aaa
out
adc
add
aas
add
dec
inc
aad
decl
pop
into
add
out
lret
mov
ret
out
insb
in
inc
call
mull
call
repz
add
xchg
or
ljmp
movsl
sbb
or
aam
pop
cmpsb
ficomps
jne
outsl
fistps
mov
dec
xchg
push
mov
mov
cmpsb
inc
inc
fsubrl
and
in
sub
lea
out
aaa
mov
push
cmpl
push
movsb
or
fld
scas
mov
mov
xchg
shll
mov
pushf
cmp
sbb
lods
into
mov
loopne
cltd
stc
imul
cmp
out
aad
sub
sub
pop
loop
cmpsl
cmp
movsl
addr16
pop
test
mov
cmp
movsl
cmpsb
jmp
jg
clc
pop
adc
dec
add
sbb
stos
in
pusha
mov
cmp
mov
cmp
aas
movsb
hlt
jg
push
pop
pushf
in
mov
outsl
ja
adc
adc
rolb
fcoms
stc
add
fbld
mov
xchg
cmp
push
pop
sub
out
and
lea
dec
dec
out
jns
add
xor
int3
xor
mov
adc
mov
pushl
xor
out
out
ljmp
xor
add
insl
sbbb
loope
sbb
je
pop
cltd
divb
adc
sysenter
or
jne
push
arpl
sub
sbb
xlat
mov
add
movsb
push
xchg
in
or
aaa
hlt
cmp
lahf
js
or
imul
fsubrs
bound
lcall
jbe
sahf
mov
pusha
je
shll
sbb
add
dec
pop
in
mov
pop
cmpsl
dec
inc
imul
std
out
aad
mov
xchg
mov
insb
sub
mov
jmp
nop
insl
inc
stos
jmp
push
cltd
adc
loopne
fdivp
adc
es
cmp
xchg
inc
decb
mov
scas
xchg
mov
cmp
push
notl
pop
aas
mov
cmc
mov
push
sbb
mov
loope
nop
inc
pop
movsl
out
loopne
insb
inc
fadd
scas
pop
push
pusha
stc
mov
mov
push
xchg
jp
xchg
jecxz
fmull
call
stc
push
push
inc
movsb
and
xchg
lcall
sub
jge
cmpsl
cwtl
mov
rolb
stos
mov
aam
dec
out
fmul
cwtl
push
jno
daa
xlat
cmp
adc
lods
xlat
jo
push
push
dec
or
sub
adc
mov
repz
imul
and
mulb
or
xchg
push
cmp
jg
rcrb
imull
inc
mov
out
test
adc
repnz
je
fmul
ja
cmp
mov
lea
or
sub
loop
jmp
jbe
scas
nop
cmp
mov
test
xchg
and
mov
mov
dec
iret
fxch
adc
out
sub
aaa
testb
pop
push
imul
push
jb
test
in
cmp
cmc
dec
inc
push
cmp
icebp
popa
mov
dec
orb
push
jb
mov
stc
scas
aam
and
or
jg
or
movsl
jns
sub
jle
cmp
mov
iret
sub
sbb
or
xchg
mov
loopne
mov
div
and
rdpmc
loop
jns
lret
das
mov
adc
movsl
xor
jmp
fadds
sub
popf
cmovnp
jbe
in
jl
mov
xor
insl
mov
fldenv
cltd
sbb
dec
movsb
push
pop
pusha
stos
jg
lods
push
cli
ljmp
cmpsl
xchg
mov
mov
dec
clc
pop
pop
fisubrl
add
fnstcw
lret
mov
cmp
and
sbb
lock
xor
xor
lea
stos
aad
out
shll
cmp
mov
aaa
cmp
jmp
lret
mov
das
lods
mov
dec
insb
lea
mov
call
jno
mov
orl
add
movzbl
movzbl
orl
jmp
insb
lods
push
repz
je
xor
or
sbb
xchg
add
movzbl
mov
popf
jno
mov
mov
pop
cwtl
sahf
push
test
addl
mov
test
adc
and
pop
data16
sbb
mov
mov
cmp
rcll
mov
mov
ljmp
and
push
in
int
aad
fcomp
and
out
fwait
push
inc
xchg
lret
lods
dec
mov
push
and
cmp
lret
fidivs
loopne
fistl
aas
pop
cmp
mov
sub
adc
jmp
and
and
ds
lods
idiv
xchg
xchg
sbb
or
aaa
jno
xor
mov
push
test
push
and
int3
arpl
mov
pop
fldt
mov
fiaddl
fdivs
enter
icebp
std
and
into
xor
and
aaa
gs
popf
mov
cmpsb
and
adc
scas
cltd
mov
mov
cmp
aas
fists
pop
xchg
xchg
mov
or
mov
sbb
cmpsl
sub
mov
xchg
insl
sbb
aas
ret
mov
fs
xchg
repz
mov
dec
int3
sbb
lds
mov
gs
inc
cwtl
stos
mov
ret
add
insb
scas
addr16
in
xor
cmpsb
pop
insl
imul
cld
cmp
push
pop
push
sub
ret
xlat
lock
and
test
scas
fldcw
sub
xchg
xor
inc
bswap
lods
push
hlt
jno
sub
ljmp
and
outsl
pop
rol
mov
jnp
fs
lret
sbb
enter
dec
xchg
cld
test
push
mov
cmp
std
lds
and
sbbl
mov
cmp
out
pop
push
das
mov
ss
sahf
mov
or
push
jle
test
lock
sbb
adcb
xchg
push
mov
mov
cmc
push
push
test
push
repz
lret
out
sub
xchg
inc
xor
dec
mov
xchg
in
adc
cmc
and
sub
orl
movsb
pop
mov
push
inc
cld
push
and
test
push
mov
test
call
xor
js
lea
call
mov
mov
xchg
jge
adc
cmp
shl
insb
bound
test
mov
or
adc
xchg
fisttps
and
xor
xor
stos
insl
jns
mov
sbb
into
aad
orl
push
sbbb
mov
stc
inc
cld
jl
mov
movsb
cmp
popf
and
lahf
clc
pop
insl
int
int
sbb
push
jl
mov
test
inc
lock
stos
push
movsl
and
icebp
inc
push
pop
loop
cmp
mov
shll
push
add
lret
push
sbb
push
pop
lock
loop
enter
push
inc
test
or
xchg
mov
fsubrl
inc
jge
fwait
mov
sbbb
pop
andb
jne
ficoml
add
xor
lea
mul
xlat
dec
sbb
and
pop
mov
icebp
shll
gs
in
jae
mov
iret
into
mov
sub
jg
adc
aaa
xor
xchg
mov
in
xor
loopne
into
sbb
xchg
lods
addb
cmp
outsl
out
add
call
inc
sub
shrb
jge
bound
out
mov
fcomip
lods
fidivs
lock
fdivr
dec
adc
jl
popa
mov
push
push
int
and
adc
mov
cmc
test
sub
aaa
sub
mov
loope
idivl
push
popf
sub
jbe
aaa
rol
or
mov
or
and
lret
xor
test
xor
or
scas
imul
pop
inc
jmp
dec
push
lcall
xchg
test
xor
out
adc
cmpsl
fsubrp
movsb
shlb
xchg
subb
push
push
sbb
or
inc
fldcw
aaa
add
pop
fldl
cltd
movsl
and
adc
icebp
das
pop
int
into
add
push
jge
out
and
inc
enter
dec
push
push
dec
ret
int
mov
lcall
add
mov
movsl
sbb
js
lcall
pop
add
xor
cs
into
mov
lods
mov
les
and
insb
and
fs
cmp
mov
movsl
fmull
cmc
xchg
sahf
jg
sahf
mov
femms
insl
lret
shr
mov
jb
jl
in
in
add
mov
or
inc
xor
push
xchg
add
mov
xor
shll
negb
mov
pushf
mov
loop
pop
movl
cmc
xchg
test
mov
mov
mov
ja
fists
dec
mov
mov
arpl
imul
jle
fcmovne
inc
int3
lods
sbb
cld
cmp
js
sbb
cmc
call
js
xor
lcall
pop
stc
cs
mov
ds
pop
mov
lods
clc
push
sbb
cmpsl
scas
or
imul
xor
mov
clc
mov
cmp
add
push
and
push
dec
add
push
fdivrl
push
or
mov
stos
dec
movsl
ss
cs
adc
or
cmp
and
push
cmp
repnz
or
out
gs
mov
cltd
xorl
idiv
movl
mov
movl
cmp
movl
jmp
fidivl
push
or
fmuls
xchg
xchg
add
bound
and
rcll
call
xchg
push
pop
stos
inc
push
jge
adc
jne
mov
notb
xlat
jge
or
dec
mov
cld
stos
mov
cmp
das
loopne
or
push
cs
out
movsl
std
cmp
repz
lret
shrl
mov
sbb
xchg
mov
cmc
mov
leave
inc
stc
icebp
sbb
lcall
stos
and
mov
xchg
fisubrs
cmp
lahf
call
inc
iret
and
scas
mov
fistl
xchg
lcall
pop
bound
in
mov
and
jge
sub
sub
push
test
fwait
jg
push
fscale
scas
push
push
xor
lcall
rcll
sub
inc
int
mov
dec
inc
ja
sbb
pop
leave
popf
and
loope
int
cli
cmpsl
nopl
lahf
mov
inc
cmp
inc
in
es
jb
aad
dec
cmp
loopne
sub
or
jle
scas
daa
popa
aam
in
pop
loopne
mov
gs
je
and
ds
cmpxchg
xor
push
pop
push
dec
lods
dec
js
es
daa
js
inc
adc
and
pop
sub
test
loop
inc
push
mov
xor
cmpsl
push
mov
pop
mov
lods
mov
jno
js
jno
add
aam
add
outsl
adc
daa
or
sbb
nop
mov
sub
movsl
jae
add
jne
jns
adc
push
cmpsb
mov
loop
jmp
movsl
add
mov
cmp
flds
stos
out
xchg
jns
loopne
or
push
in
jns
and
call
repz
ror
test
jge
sub
mov
iret
fsubr
sbb
pop
cmp
jbe
test
lcall
cmp
fcmove
fidivl
ljmp
xchg
mov
push
push
test
mov
dec
stos
xor
lods
aad
and
sub
pop
mov
cmp
fisubrl
add
pusha
arpl
mov
xlat
call
cli
rolb
adcb
sbb
inc
leave
in
leave
mov
and
roll
xor
loopne
push
pop
add
popf
ret
cltd
outsb
push
mov
mov
push
and
push
stos
faddl
fmuls
jno
stc
aam
mov
pop
in
push
les
rorl
loop
mov
push
pop
jbe
fsubr
or
mov
jne
sbb
inc
adc
push
mov
fidivrl
stos
int3
rolb
dec
jnp
lods
pop
int
inc
int
movsl
mov
ficomps
fs
stos
mov
jb
call
xchg
out
push
mov
mov
jnp
pop
cli
xor
dec
xchg
jae
mull
fldt
js
mov
rcll
cmp
test
icebp
pushf
insl
pop
add
adc
insb
inc
inc
add
lahf
mov
sbb
or
pop
inc
add
xchg
or
cmc
out
mov
out
out
std
lods
pop
outsb
or
cld
mov
mov
jp
push
pop
and
fstl
test
cmpsb
push
stc
mov
insb
jg
out
xor
test
mov
push
mov
mov
xor
jns
inc
push
xchg
movsb
test
push
popa
or
fs
sbb
add
xor
rol
iret
shrl
cmp
adc
sbb
fisttpl
stc
pushl
jnp
pop
mov
je
sbb
mov
rolb
add
jno
push
je
addb
loope
jmp
xlat
adc
imul
mov
add
leave
js
mov
das
adc
cmp
inc
push
imul
fisttpll
sub
push
jno
cld
xchg
int
mulb
leave
shld
jo
imulb
sti
mov
jno
jb
rcrl
mov
push
lods
out
popa
loopne
inc
mov
ds
inc
push
push
aad
test
and
mov
cld
mov
jne
jb
adc
lods
push
sub
adc
adc
cmp
or
sar
aad
popf
pop
xchg
xchg
decb
xor
sbb
or
fnsave
pop
sbb
scas
imul
lret
mov
push
sub
xchg
add
mov
bound
int
ss
or
in
adc
xchg
sbb
fs
or
call
jge
adc
mov
repz
fs
or
cwtl
repnz
xchg
lods
jae
rcll
dec
xor
xchg
push
mov
call
add
push
lcall
sahf
hlt
loopne
mov
mov
test
movsl
insl
jmp
pop
push
push
mov
inc
push
add
out
mov
mov
mov
dec
jmp
xorl
std
testl
xlat
sub
and
lahf
inc
pusha
pop
pop
jne
add
cmpsb
loopne
push
ja
xchg
dec
push
cs
jb
hlt
loope
add
cmp
xchg
out
ss
jge
std
scas
bound
or
push
fmulp
popf
xchg
call
pop
cwtl
imul
pop
mov
xchg
add
pusha
push
pop
xor
inc
mov
pop
xor
in
pop
sahf
jo
gs
sub
ret
sub
nop
or
xor
into
popf
pop
and
adc
fisttpll
jno
adc
adc
xchg
xchg
or
cmpsb
clc
bound
mov
sbb
out
pop
sbbl
cmp
arpl
scas
adcl
push
bound
fs
sub
scas
inc
sahf
sub
mov
fiaddl
sbb
imul
push
cli
mov
jae
xor
movl
cmpl
jb
mov
sbb
jmp
push
call
movl
mov
mov
push
push
adcl
push
push
andl
call
xor
xorl
xor
orl
or
or
movl
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
dec
and
xchg
sub
push
mov
iret
imul
paddusb
cmp
int
xor
push
adc
leave
movsl
push
push
sub
icebp
xchg
xchg
xchg
out
jb
mov
cmp
scas
and
in
mov
sarl
and
push
notb
cmpsl
fldenv
js
sti
hlt
mov
ret
ljmp
cltd
clc
inc
or
jbe
push
rol
fdiv
push
jge
xor
fstps
mov
cmp
loop
dec
mov
jnp
mov
fsub
dec
stos
and
cmp
rorb
in
or
push
and
jge
clc
data16
daa
ds
sti
push
and
fsubl
sbb
jo
repz
ret
test
or
loope
das
mov
bound
fdivp
add
dec
fcomp
xchg
cmp
xchg
insl
pusha
add
xchg
fstl
mov
mov
sub
push
ljmp
jb
imul
push
inc
or
sub
add
mov
sbb
xor
lods
gs
pusha
repnz
and
mov
mov
mov
enter
push
repz
push
dec
mov
sub
daa
cmp
inc
ds
adc
add
aam
xor
movsb
data16
ljmpw
pop
stos
test
cmp
add
add
mov
sub
pushf
jnp
mov
xor
xchg
mov
call
mov
dec
lret
mov
stc
repnz
js
sub
mov
and
push
call
mov
lret
sub
jmp
and
xchg
out
dec
fs
cmp
lahf
insb
int3
mov
or
add
cmp
dec
test
inc
pop
ret
bnd
cmp
mov
das
pop
inc
mov
dec
cmp
fcoms
je
jo
jne
sbb
rcl
adc
or
dec
adc
mov
inc
jge
cmp
or
push
inc
sbb
fsubr
in
fstl
movsb
add
and
push
int3
out
sar
mov
sti
cmp
fs
js
mov
bound
and
inc
mov
or
fdiv
dec
mov
mov
mov
sub
dec
icebp
jne
mov
test
xor
jp
sbb
add
mov
inc
stos
adcl
icebp
inc
popf
cmp
cmp
inc
dec
loop
sub
push
je
and
fwait
xchg
xor
scas
mov
sti
mov
pushf
push
adc
insl
inc
or
iret
push
outsb
clc
pop
in
cli
out
dec
arpl
fiaddl
push
adc
sbb
cmpsb
mov
mov
out
pop
xchg
imul
xchg
movsl
push
add
hlt
mov
test
xor
inc
inc
jbe
stos
fucom
mov
rorl
mov
push
adcb
aas
negl
loopne
stos
enter
pop
aad
ljmp
pop
movsb
sub
lcall
push
daa
popa
jnp
mov
jae
fimuls
push
fadd
pop
ret
das
ss
push
xor
push
inc
xlat
scas
into
loopne
insb
xchg
in
jmp
lahf
push
push
sarb
and
sbbb
push
bound
in
add
xchg
jecxz
push
add
jp
fwait
mov
outsb
aas
mov
rorl
ljmp
sub
jns
in
movsb
add
fildl
cmpsb
rolb
movsb
inc
aas
lock
push
repnz
xchg
push
call
incl
lret
pop
dec
imull
lods
int
lods
insl
into
mov
xchg
enter
fisubrl
stos
in
stos
cmp
movsb
sbb
stos
jns
pop
push
cmpsl
mov
ds
push
lds
or
mov
mov
out
jno
or
enter
or
shl
mov
xorl
je
adcl
addb
stos
scas
pop
sbb
repnz
sbbb
sub
lock
outsl
jl,pn
push
test
push
call
test
imul
pop
cmp
xchg
in
mov
adc
xor
lret
int3
lock
cmp
sbb
mov
or
pushf
adc
add
addr16
push
mov
ljmp
fisttpll
lcall
jge
gs
loop
ja
pop
in
push
and
sbb
mov
call
push
pop
sub
movsb
scas
movsl
insb
fsts
fistpl
std
and
je
shlb
sub
fmul
mov
imul
int3
push
pushf
mov
lock
rorl
inc
push
stos
out
scas
sbb
div
movsb
dec
mov
mov
stos
out
mov
int3
inc
jp
cmpl
out
xor
push
xchg
mov
ss
lret
adc
push
or
adc
xor
ret
xlat
enter
xchg
loop
push
and
repnz
pop
roll
inc
fs
mov
inc
push
mov
dec
jno
xchg
add
stos
loope
incb
xchg
scas
nop
aaa
mov
repnz
push
cmp
fistps
fdivr
clc
add
jo
jle
add
adc
sub
jle
mov
aad
aad
filds
adc
xor
sahf
sub
ficoms
pop
add
cmp
xchg
inc
stos
outsl
xchg
pop
lcall
iret
push
sbb
mov
pop
jge
mov
mov
cmp
jmp
ret
push
lods
into
arpl
test
pop
imul
jns
imul
or
jbe
push
enter
fsubs
add
jge
cmp
mov
xlat
loope
pop
mov
cld
fisttpll
lods
push
and
sbb
jo
ret
adc
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
jmp
jb
ffreep
push
aad
push
dec
mov
mov
fimull
push
invd
add
jae
sub
inc
mov
sti
pop
cmp
add
mov
sbb
fmull
and
xorl
test
xor
int3
add
ret
and
fsubr
aas
inc
mov
jae
jns
rcll
adc
lock
imul
sbb
cld
dec
pop
xchg
gs
sub
lock
out
xchg
mov
and
jae
cltd
dec
outsb
push
push
sbb
fistl
mov
outsb
fldcw
xchg
inc
imul
dec
ljmp
daa
fdivrl
or
or
push
in
test
ret
iret
js
test
adc
mov
xor
cs
inc
ret
jnp
xchg
push
les
test
mov
mov
mov
fistpll
jno
mov
gs
dec
add
lret
push
dec
xchg
cwtl
das
mov
movsb
ss
fsubs
sub
xor
mov
jmp
aad
cltd
inc
movsl
sti
fs
dec
les
into
xchg
ret
and
ficompl
rorl
lcall
push
pushf
mov
jle
mov
mov
fistpll
in
jle
loopne
push
xchg
jmp
aaa
dec
inc
adc
ffreep
rorl
inc
xchg
cmp
jge
ljmp
xchg
mov
cwtl
xchg
das
arpl
addr16
cmp
lret
scas
stos
ret
mov
jmp
scas
jecxz
sbb
repz
push
test
adc
and
in
lds
shrl
pusha
loopne
sahf
xor
lds
int
inc
add
pop
and
sub
popa
inc
fdivrl
push
fs
mov
mov
nop
inc
jb
adc
xchg
mov
aam
mov
dec
cwtl
sbb
pop
adc
lock
lcall
lods
mov
add
adc
inc
lcall
ljmp
mov
clc
pop
or
shrb
mov
shrb
mov
mov
clc
addr16
sub
push
rolb
jbe
fimuls
es
mov
pushf
ds
lock
cmp
data16
xchg
inc
dec
and
jnp
xor
addl
inc
repz
sahf
mov
add
int
dec
inc
jl
mov
jne
add
pop
push
mov
out
nop
movsl
jp
xchg
ds
adc
mov
sbb
out
xchg
loopne,pt
sub
ret
daa
shl
mov
aad
imul
adc
sub
dec
into
mov
fwait
mov
and
jp
data16
jg
sbb
dec
adc
cmp
daa
aam
add
mov
xor
int
out
std
pop
imul
adc
mov
xor
xor
pushf
or
jecxz
inc
fsubs
loope
sub
sbb
or
xor
cmp
in
int3
js
inc
xor
jg
pusha
jl
out
dec
jne
pusha
arpl
sub
pop
adc
aam
mov
das
icebp
xchg
push
mov
mov
push
xorb
iret
pop
xchg
rcrb
sti
mov
mov
outsl
add
int
and
xor
shrl
nop
movb
out
outsl
into
cmpsl
jae
fldl
adcl
cmp
cltd
dec
jecxz
loop
jo
mov
test
daa
shrl
inc
push
fdivl
dec
fsubrp
cmp
mov
shlb
or
jnp
cmp
xor
xlat
inc
jge
pop
push
mov
movsb
mov
test
mov
ds
mov
jo
pop
mov
push
add
les
jmp
cmp
pop
push
adc
and
push
dec
cmpsl
aad
out
lea
jb
movsl
cltd
mov
shll
pop
cmc
xor
dec
push
arpl
sahf
or
adc
sub
mov
mov
mov
faddl
pushf
mov
mov
stc
jne
stos
cmp
insl
xor
pop
xlat
int3
xchg
add
xchg
mov
mov
movb
sub
inc
dec
xorl
add
cmp
push
cld
shrb
call
xchg
adc
stc
test
adc
cmc
ret
testl
pusha
out
sbb
loop
jns
push
imul
mov
add
ds
mov
data16
in
aaa
xor
hlt
ja
mov
mov
inc
adc
xor
daa
dec
popf
mov
add
je
fisttps
jmpw
dec
loopne
popa
sub
mov
push
push
insl
andl
push
push
jmp
gs
es
rcrb
pop
mov
ja
shll
lret
das
pop
or
jne
outsb
incl
xchg
insb
pushf
inc
inc
loopne
fldcw
lds
inc
nop
int3
loopne
std
cs
inc
loop
cmpsb
gs
repnz
cwtl
fildl
xchg
les
cltd
aas
cmpsl
pop
lea
scas
cmpsl
mov
inc
ja
pop
sahf
adc
ss
jge
jmp
pop
addl
mov
jae
jp
or
jl
aam
jns
mov
inc
cmp
adc
fstl
dec
mov
cli
or
xor
pop
jecxz
scas
fcmovnbe
pop
push
push
setno
cmpsl
out
jb
cmpsl
data16
iret
jecxz
xor
add
inc
outsl
mov
xchg
or
subb
clc
ret
jg
pop
adc
mov
pop
outsl
and
mov
mov
repz
lahf
or
mov
flds
adc
fcmovnb
dec
test
jge
div
sti
stos
jge
push
jmp
insl
insl
and
push
idiv
jmp
pusha
lahf
aas
sti
aas
pop
or
ss
out
push
xchg
mov
or
pfcmpeq
insb
imul
push
rcrb
in
and
in
and
cmpsb
cmp
or
jns
jo
cmp
mov
cmpsb
pop
xlat
fcmovnu
cli
inc
inc
dec
mov
pop
push
push
adc
stc
add
mov
and
dec
fwait
enter
movl
mov
adc
pop
out
out
in
cmp
mov
fldenv
nop
adc
clc
aam
push
pop
xor
mov
fldcw
test
lods
jmp
adc
inc
add
add
mov
mov
ljmp
int
addb
int
jns
arpl
bound
cmpb
inc
and
lret
lock
jne
mov
lds
cmp
or
sub
test
or
jno
test
xorb
ds
hlt
pop
in
loop
addb
jmp
and
xchg
shll
cmpsb
inc
out
iret
jmp
mov
adc
mov
and
arpl
aaa
call
inc
aaa
mov
scas
and
push
mov
push
push
add
es
adc
outsb
gs
call
pop
xchg
mov
mov
sub
push
das
or
popf
xor
pushf
rcrl
adc
and
xor
in
lock
in
mov
or
and
fdivrl
sti
push
and
scas
push
sub
jno
add
and
mov
dec
push
jo
data16
mov
lock
and
adc
mov
jge
in
jmp
inc
fnsave
out
lods
xor
cmp
push
mov
data16
adc
test
jl
mov
mov
mov
testl
test
xchg
sbb
and
insl
sahf
frstor
stos
test
addr16
mov
ficoms
incl
loope
or
push
stc
pop
shrb
dec
inc
inc
subb
testb
adc
es
iret
xchg
mov
pop
mov
sub
xor
mov
sbbl
popa
add
call
outsl
mov
lahf
cmp
inc
dec
xchg
lahf
lock
rcrb
mov
xchg
push
lahf
gs
sahf
fsubrl
adc
jbe
push
mov
adc
push
jne
add
or
dec
scas
ret
sarl
mov
aam
mov
sbb
or
das
push
or
and
fldl
pop
fists
adc
pushf
and
enter
fistpl
push
int3
out
push
sub
dec
jae
jp
icebp
icebp
jae
dec
jo
pop
or
jp
add
xchg
std
add
aam
enter
ss
jle
xor
mov
xor
mov
jge
out
insb
inc
cltd
and
sub
loop
test
aad
mov
add
icebp
jg
divl
ja
js
cld
cmc
gs
out
cli
std
mov
aam
addr16
jmp
shrb
xchg
addb
push
rclb
in
jp
pop
sbb
add
in
aas
jmp
out
or
sbb
inc
push
loop
and
or
mov
enter
mov
jae
lea
enter
ret
stos
jae
cmp
and
cmp
dec
add
jb
gs
or
mov
mov
jge
scas
stos
xchg
test
adc
fcmove
push
gs
jne
add
lods
test
inc
dec
cmp
cmc
scas
or
outsl
fs
cmpsl
ret
popf
lods
mov
adc
xchg
int
or
fdivrl
xchg
jg
pop
insl
inc
fisubrl
scas
dec
fiadds
sbb
inc
js
fs
mov
xchg
es
outsb
ret
mov
inc
js
enter
icebp
cmpsl
stos
inc
push
std
je
xchg
sbb
xchg
mov
xlat
mov
xchg
mov
mov
push
cmp
mov
insb
insl
sbb
push
cmc
sahf
cld
lret
sbb
out
out
and
ja
xchg
std
adc
stos
out
xor
push
rcl
mov
cmpsl
dec
jo
xchg
inc
pop
jmp
ret
sbb
mov
js,pt
pushw
scas
test
cmp
mov
jae
mov
inc
icebp
pop
ret
shlb
mov
jo
stos
in
pop
sbb
outsl
ror
or
sbb
xchg
test
fwait
lods
mov
xchg
loopne
and
je
sti
add
test
xchg
mov
xchg
sbb
xchg
dec
fisubl
inc
jl
add
sahf
mov
xor
add
dec
xchg
mov
shl
out
fbstp
aad
aaa
data16
rcrb
jne
imul
ljmp
imul
xabort
mov
jge
ficompl
mov
loopne
sub
test
push
inc
sub
dec
cld
out
xchg
jmp
mov
sub
jl
cwtl
pop
lock
cld
mov
notl
ljmp
in
jle
mov
movsb
pop
push
or
int
pop
sub
lret
ljmp
in
testl
mov
ss
pop
movsb
sub
ss
push
or
xor
push
scas
cmpsb
or
adc
jae
sub
cmp
dec
sub
mov
mov
lahf
jecxz
in
push
push
jo
js
lods
cld
mov
xor
push
fucomp
leave
mov
and
mov
jg
fnsave
or
xchg
insl
cmc
mov
jno
jb
cli
push
jmp
insl
repnz
fsubl
cmpsb
int3
sbb
jae
loop
or
call
mov
mov
and
fnsave
repnz
mov
leave
xchg
dec
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
jmp
xor
xor
or
fcoms
invd
add
paddq
and
data16
add
ja
mov
jmp
into
mov
dec
loop
xor
jle
add
mov
push
add
arpl
sbb
jbe
mov
lret
dec
jnp
clc
leave
mov
imul
xchg
adc
aam
aaa
mov
mov
lret
sbb
in
jns
es
movsb
test
adc
lds
xchg
xchg
outsb
push
mov
stos
xor
xchg
popa
in
adc
les
das
push
call
sbb
test
add
jmp
push
inc
mov
xor
mov
push
mov
fs
enter
sub
inc
adc
fnstenv
movsl
jne
or
dec
jl
push
cmp
fistpl
jge
pop
pop
mov
or
aaa
sbb
xor
aad
out
sbb
push
cmpsl
imul
cltd
test
or
insb
sbb
dec
xlat
xorl
xor
aad
dec
push
inc
sub
shrl
dec
push
xchg
decb
push
mov
push
out
dec
inc
fbstp
imul
and
add
int
popf
in
inc
xchg
xor
flds
lret
cmp
inc
cmp
or
pop
mov
ja
inc
or
inc
xchg
jnp
jno
pop
icebp
sbb
fisubs
inc
jns
pop
pop
mov
adc
movsl
dec
cmp
scas
lock
mov
pusha
negl
outsl
fisubl
add
test
movsl
lods
pop
imul
sbb
inc
xchg
push
pop
outsl
push
mov
insb
bound
pop
in
rolb
mov
clc
jmp
sbb
and
test
ja
call
clc
das
mov
xor
xchg
mov
mov
add
cwtl
stc
sub
in
sahf
jo
lret
cwtl
dec
cld
dec
push
xor
mov
and
in
xorl
adc
mov
inc
mov
mov
lods
insb
mov
mov
cmpsl
loopne
cmp
sub
movsb
push
dec
add
loope
subl
lock
dec
jl
push
push
data16
dec
adc
push
mov
lret
icebp
pushf
push
pop
cwtl
inc
xchg
or
push
out
bnd
sbb
sub
scas
lds
icebp
js
push
shlb
cmc
ja
dec
js
jns
mov
pushf
stc
aad
dec
clc
or
jge
in
jge
fwait
ret
add
xchg
pop
repz
mov
ficoml
cmpb
jg
in
dec
mov
inc
dec
mov
or
dec
sub
adc
add
add
add
mov
mov
pop
mov
inc
push
shlb
lds
mov
pop
jle
dec
pop
jns
push
mov
popa
mov
leave
aas
and
push
or
gs
popa
jbe
ss
test
gs
mov
out
xlat
push
xor
clc
popf
scas
mov
iret
mov
nop
mov
lahf
lock
jg
and
test
xlat
or
xor
sbb
xchg
inc
sbb
ds
dec
call
adc
movsb
rcrl
jp
icebp
mov
push
movsl
enter
cmp
fnsave
pop
mov
mov
dec
and
sbb
fsubl
loop
sub
cwtl
scas
mov
pop
movsb
loop
leave
mov
out
or
mov
and
das
test
aas
inc
jns
je
popf
je
orl
fwait
push
jecxz
adc
scas
xchg
hlt
dec
jge
je
loope
fldl
lret
push
cli
or
push
je
mov
mov
mov
xor
push
sbb
dec
add
pop
mov
scas
std
inc
int
push
imul
call
xchg
lret
inc
faddl
xor
fimuls
mov
les
push
xor
cld
jge
sbb
or
test
adc
daa
es
jne
ret
xchg
cld
xchg
cmpsb
mov
mov
or
in
lods
in
xor
dec
gs
add
leave
fisubrs
pushf
push
rclb
nop
sti
stos
data16
movsb
add
mov
jl
mov
fs
inc
add
dec
mov
adc
ret
pop
mov
scas
lret
and
jns
andb
pop
sub
cmp
aad
cmpsb
xchg
jae
mov
xchg
jp
mov
xchg
lret
push
sbb
out
ret
popa
popa
stos
push
push
pushf
xchg
fwait
out
rcrb
mov
ret
mov
std
adc
cmpsl
out
mov
rorl
mov
pushf
inc
lcall
mov
mov
rcl
sub
sbb
dec
cmp
in
lods
cli
sub
push
push
sbb
fs
pop
cmpsl
sarb
and
push
mov
jg
jbe
adc
notl
cmp
inc
adc
jecxz
xchg
cmpsb
orb
adc
add
loope
aad
stos
lea
lea
repnz
xchg
int3
sub
mov
bnd
je
fstps
mov
inc
and
cwtl
inc
sti
int
adc
jo
jp
insb
mov
mov
mov
sbb
adc
mov
pushf
pop
pop
pop
mov
push
sub
adc
xor
daa
sub
das
inc
add
ds
scas
fidivrl
fsubs
dec
adc
add
pushf
movsb
out
ffreep
and
std
icebp
lcall
out
push
adc
add
jne
mov
push
add
sub
insb
mov
jno
loopne
pusha
xor
aad
jle
mov
dec
aad
das
pop
mov
lret
mov
xor
shl
jmp
push
mov
cli
sbb
fnstenv
dec
pusha
pop
insb
xchg
lock
invd
add
push
in
push
or
mov
das
xor
mov
jl
mov
loope
lcall
sub
mul
and
cs
pop
sub
add
add
loop
clc
cwtl
or
lcall
cmpl
dec
fwait
mov
cld
xor
dec
mov
dec
and
xor
mov
inc
ljmp
add
icebp
and
jecxz
add
add
js
jmp
push
outsb
pop
cltd
andl
popa
outsb
mov
adc
jl
lods
cwtl
in
push
adc
adc
insl
cmpb
add
decl
or
add
sbb
add
adc
inc
push
hlt
push
call
cmp
add
popa
out
xchg
jg
pop
stc
stc
out
cwtl
jns
mov
dec
cmp
inc
and
cmpsb
aas
inc
inc
scas
icebp
jp
dec
fisttpl
adc
pop
pop
lods
or
sbbl
fsin
mov
jb
bound
jne
test
daa
aas
cmp
imul
xchg
and
dec
jbe
sbb
lock
fimull
inc
jecxz
mov
lock
cmc
movsb
fsubl
push
or
push
ret
clc
scas
inc
pop
mov
rclb
mov
sub
or
sbb
pop
mov
outsl
test
lea
cltd
inc
push
and
cltd
mov
out
lods
scas
lret
loope
fwait
test
or
test
add
insl
sub
iret
push
enter
jbe
cltd
outsb
sub
xor
daa
ret
add
push
imul
dec
pop
js
imul
jge
sub
les
add
and
fsubrs
ss
sub
push
pop
jle
enter
add
insb
or
pop
inc
dec
ret
xor
mov
cmp
enter
jmp
adc
pop
add
mov
mov
jle
xor
arpl
jo
add
sahf
out
cmp
loopne
mov
mov
push
mov
imul
pop
jb
fdivp
jb
lods
inc
xlat
mov
pop
daa
cli
aam
in
repnz
push
cmpb
adc
daa
adc
addr16
mov
sbb
pushf
dec
inc
inc
mov
sarl
rcll
into
inc
jg
xchg
push
mov
xor
cld
sti
shl
cmpsl
aas
repz
xchg
add
mov
fmull
push
pop
pushf
rolb
out
lret
mov
shrb
mov
jbe
aam
inc
stos
adcl
xor
mov
enter
jle
jbe
test
jb
dec
repnz
cmp
jl
ljmp
cli
jne
push
and
push
jmp
lea
scas
lret
ljmp
call
pop
cmc
cmp
push
mov
adc
scas
sbb
repz
xchg
ss
jbe
ret
mov
enter
xchg
lock
adc
push
dec
cs
mov
jbe
adc
fiadds
inc
hlt
xorl
les
out
rorb
jmp
in
std
aas
fstpt
ja
in
pop
fistl
push
mov
rolb
inc
insb
push
jb
mov
and
sub
rorl
imul
jle
cmc
fcompl
mov
cmc
test
cmp
movsl
lods
sub
outsb
in
fcomip
jecxz
mov
insl
lock
jno
scas
mov
imul
and
dec
jo
cmp
inc
test
loopne,pn
mov
lock
movsl
dec
xor
sub
jl
scas
sub
addr16
addl
sub
js
lock
lds
insl
adc
and
outsb
popa
out
jbe
pop
inc
lds
fwait
lcall
movb
je
scas
mov
fldl
inc
cmp
xor
adc
ds
das
popf
addr16
test
cmp
cwtl
scas
xchg
lret
insb
filds
std
xchg
out
fnsave
mov
fisubl
lahf
gs
sub
jp
cmp
repnz
jge
jecxz
and
icebp
cmp
push
fstps
cmp
rcrb
movsw
or
pop
mov
scas
jmp
mov
inc
dec
cmp
in
mov
test
adc
fstl
pop
adc
adc
xor
xchg
adc
hlt
cwtl
jns
mov
pop
std
js
fwait
pop
xor
inc
dec
rorb
icebp
sub
mov
arpl
rorl
insl
inc
hlt
jno
fxch
orl
in
movsb
dec
and
push
and
dec
out
xchg
je
push
dec
shrl
aas
pusha
dec
mov
inc
jne
push
cmp
outsl
inc
test
sub
insb
push
ret
lds
in
mov
aaa
inc
push
jle
aas
dec
stos
xor
inc
test
push
add
ret
aaa
call
iret
das
shlb
es
ss
aam
inc
pop
sub
pop
mov
fucomp
pop
aas
sbb
mov
sbb
or
popf
adc
js
ret
add
pop
sbb
lahf
loope
xchg
dec
mov
inc
push
cs
cmpsl
popf
in
cmpsl
pop
lahf
dec
aam
or
arpl
xchg
ja
pop
pop
jle
sub
cmp
shlb
es
pop
cmc
pop
xor
cmp
or
adcb
lret
push
shlb
xor
xor
andb
sbb
call
inc
das
sti
out
mov
imul
adc
push
rcr
mov
push
xor
inc
ljmp
shr
xor
rsqrtps
xchg
mov
sub
or
mov
dec
enter
cmp
test
sti
jns
pop
xor
dec
cwtl
cwtl
adc
and
sbb
mov
sub
rcrb
pop
out
insb
hlt
mov
mov
sbb
sub
mov
mov
mov
mov
pop
leave
ret
mov
mov
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
mov
or
mov
mov
mov
mov
pfrsqrt
repz
mov
push
dec
insb
sub
sti
ja
xor
popa
jecxz
pop
in
push
ss
xor
scas
fwait
popa
pop
shll
adc
pop
pop
pop
test
and
push
push
flds
popa
xchg
mov
ss
mov
mov
or
sbb
mov
inc
xor
sub
adc
xor
pop
sbb
bound
lahf
jl
cmpl
adc
shlb
out
inc
add
pop
push
out
push
int3
mov
push
pop
daa
mov
push
or
dec
seta
rcrb
aam
ret
lds
mov
stc
mov
daa
daa
or
bound
aam
jge
pop
add
cmp
gs
jb
mov
mov
test
shlb
cmp
mov
ss
inc
jle
mov
lcall
adc
and
jne
and
xchg
mov
pop
shl
xchg
rorl
or
inc
nop
xor
and
adc
pop
jbe
push
adc
push
add
pushw
test
and
xchg
rcrb
icebp
xchg
int
and
cmpsl
inc
in
push
and
enter
jne
js
aad
xchg
aaa
ss
dec
out
push
cld
push
fdecstp
das
xor
xchg
fsubl
jbe
mov
and
scas
inc
mov
imul
cmpsl
stc
or
pop
mov
jmp
mov
sub
push
jnp
divb
lock
pop
aaa
fwait
mov
jmp
pop
shrl
push
adc
rcrl
jp
jne
pop
scas
int3
cli
cltd
test
scas
pop
push
jb
or
sar
popa
pop
xor
jne
inc
jp
inc
sub
mov
lods
orb
pushf
sbb
es
pop
xor
or
or
in
stos
xor
gs
mov
test
mul
cmp
xchg
sbb
mov
sub
aad
xchg
and
cmp
leave
inc
xchg
repnz
mov
int
and
xorl
dec
push
push
pop
mov
mov
jae
das
xchg
mov
mov
fwait
and
bound
dec
jecxz
inc
jnp
fnstsw
or
jne
in
jne
push
and
mov
adc
dec
cs
int
repz
std
nop
add
int
ss
pushf
cs
fmull
jno
adcb
inc
int
mov
mov
std
je
dec
jbe
iret
push
cmp
mov
adc
inc
js
lds
mov
xchg
xor
js
xor
mov
or
add
icebp
loopne
dec
repz
dec
cmpsw
lods
mov
xor
into
adc
sub
jnp
mov
outsl
jae
mov
mov
xchg
jg
inc
fs
cmovbe
mov
fs
shll
sub
cmpsl
es
xlat
sub
repz
nop
cmp
ja
adc
xchg
das
add
ss
xchg
cltd
in
mov
sbbb
lds
arpl
aam
sti
rcrb
mov
std
or
int
dec
lcall
jb
sarl
push
push
hlt
imul
sbbb
mov
int
test
out
xchg
rcrb
xchg
mov
and
repz
push
push
jecxz
add
push
push
lret
mov
pusha
lret
push
scas
cmpsb
jne
dec
sahf
or
cli
add
add
aaa
popf
mov
fnsave
pushl
lret
mov
adc
adc
push
or
jle
movsl
popa
data16
lods
pusha
adc
shlb
and
mov
ret
lock
inc
pop
cmp
push
enter
adc
sbb
test
test
jecxz
lock
pop
push
jle
bt
jmp
scas
outsl
sahf
pop
lret
cmpsl
mov
and
cltd
jge
movsl
push
dec
lock
sub
dec
ja
bswap
sbb
outsb
push
cmp
cmpsb
scas
pop
repnz
lret
cmp
and
inc
mov
popa
push
push
cmp
stc
jl
es
in
pop
test
shll
inc
outsb
or
pop
ret
lret
movsl
xchg
insb
fstps
mov
lcall
jg
pop
out
xor
pop
rorl
stc
and
adc
insb
movsl
or
jnp
mov
orb
insb
pop
inc
mov
xor
popf
vpcomb
out
push
in
mov
fsubl
inc
bound
dec
inc
lea
adc
mov
data16
ret
dec
mov
daa
lcall
sub
adc
mov
fincstp
je
pop
clc
or
jae
not
cmp
lret
das
jo
aaa
push
sub
jae
push
push
rcrb
add
pop
jmp
pop
xchg
xlat
in
je
out
fcompl
insl
mov
mov
bound
pop
sub
test
scas
loop
jmp
sarl
or
repnz
lret
imul
push
mov
add
scas
sub
repz
xchg
test
aas
cmpsb
sub
imul
jmp
adc
fcomp
jnp
xchg
cmp
push
xchg
push
xor
pop
add
dec
or
dec
pop
fs
dec
mov
add
xchg
cmp
imul
iret
jne
dec
icebp
aam
pop
push
jns
inc
add
or
lds
and
push
pushf
in
mov
jl,pn
cmpsl
mov
sbb
ss
repz
fs
ficoml
inc
cmpsb
or
hlt
das
ret
pusha
adc
addr16
stos
int
dec
cmp
dec
stos
daa
fbstp
pop
adc
xor
mov
fwait
aad
xor
jbe
orb
mov
xchg
movsb
xchg
or
dec
ljmp
fdivrl
xor
mov
lea
fildl
xchg
mov
fisubrs
dec
sbbb
hlt
loope
jb
xchg
popf
jg
leave
or
adc
xchg
jp
repnz
add
ja
lods
or
outsb
adc
sbb
push
mov
test
rorb
jno
mov
xchg
inc
dec
and
dec
out
lret
inc
out
add
mov
call
fdivs
fmuls
movsb
push
jmp
and
dec
jmp
shlb
in
mov
adc
loope
cmp
cs
jle
ror
ja
ret
in
in
int
scas
icebp
mov
pop
sub
adc
add
fmuls
shrb
jb
test
clc
dec
jecxz
and
ret
std
aad
fnstcw
aad
cmp
loopne
push
mov
iret
ret
push
clc
outsb
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ret
mov
adc
cmpsb
js
repz
xchg
sbb
mov
pfcmpgt
outsb
xor
inc
jno
in
lock
ret
cli
cmp
mov
mov
add
test
dec
outsl
mov
adc
push
pop
scas
dec
dec
xor
or
lret
jo
out
sub
addb
push
add
and
jp
bound
jbe,pt
imul
test
xlat
jg
loopne
mov
lods
cwtl
not
or
dec
mov
mov
lcall
lods
dec
and
inc
enterw
sub
jbe
clc
jl
inc
xorb
daa
movsl
cmpsl
arpl
inc
ljmp
push
inc
rorl
xchg
xchg
add
push
xchg
xor
rcrl
jp
mov
inc
and
adc
push
mov
in
xchg
ret
out
add
hlt
ja
cltd
shrl
push
jg
cmpsl
or
out
dec
int
dec
lods
lods
add
sbb
xchg
inc
jl
adc
dec
dec
mov
sbb
test
inc
mov
jne
lock
push
add
and
and
dec
in
aad
push
lahf
push
mov
cmp
or
ja
pop
inc
inc
xchg
call
popa
pop
leave
jecxz
les
xchg
pop
xchg
xchg
xchg
sbb
pop
pushf
push
ror
jo
stos
adc
dec
cmp
and
inc
out
mov
outsb
push
std
jl
pop
into
in
jge
fsts
pusha
enter
enter
and
sbb
or
lahf
int
inc
test
scas
add
xor
mov
mov
mov
sub
inc
lods
cli
icebp
and
jo
dec
jnp
mov
pop
push
dec
cmc
pop
pop
add
inc
xchg
test
pushf
pusha
push
sub
sbb
imulb
pop
sbb
xchg
test
xchg
pop
jbe
add
dec
xor
add
xchg
add
adc
insb
movsb
push
xchg
adc
inc
inc
mov
cwtl
loope
push
sub
inc
dec
cwtl
jnp
ds
jmp
lahf
inc
push
inc
or
daa
loopne
clc
or
sahf
cmp
jmp
ljmp
or
in
aaa
inc
cmp
dec
mov
mov
out
jb
mov
adcl
mov
or
test
inc
pushf
out
and
sti
mov
filds
xchg
sbb
mov
es
adc
lock
sub
xchg
cmp
jmp
out
aam
inc
insl
push
cmc
fldt
fucomp
sub
hlt
imul
mov
mov
int
push
movl
outsl
lret
push
jb
push
xor
lcall
cwtl
int3
filds
mov
jo
cmp
cmc
adc
push
int
movsb
xor
es
ss
icebp
lcall
sub
mov
aam
lcall
dec
xor
xor
pop
sbb
pop
pop
fnstcw
hlt
dec
ret
jnp
out
jge
push
jg
shr
pop
pushf
push
jl
xor
and
jae
add
scas
cltd
sbb
xor
push
xchg
in
fwait
xor
xchg
push
push
mov
sub
dec
out
pop
std
js
and
push
aad
out
cmpb
sub
test
mov
push
out
mov
out
js
adc
or
mov
jecxz
movsb
sub
dec
les
adc
cmp
cmpsl
jne
or
js
mov
rorb
psrlw
sub
mov
pushf
and
cmp
xchg
sub
pop
pop
outsb
add
inc
out
test
clc
jmp
mov
ljmp
and
push
xor
mov
daa
test
shll
mov
mov
addb
fcomps
movsb
testl
xor
pop
cmpb
jo
repnz
mov
cli
sub
imul
cmp
adc
scas
add
out
jo
xchg
lock
xor
loop
jno
rcl
mov
dec
dec
sahf
jg
and
inc
lcall
mov
aaa
shlb
out
sub
sub
mov
in
leave
jp
push
jecxz
lea
ljmp
add
and
lret
sbb
ror
mov
inc
xchg
cmpb
insb
jo
js
je
sbb
fcomps
lods
fsubrp
push
ja
fmul
push
and
pop
test
adc
push
movsb
cmovle
push
cmp
outsb
or
fwait
popa
sub
adc
stos
xlat
jbe
mov
mov
jbe
shrl
mov
roll
pushf
addb
mov
mov
jae
daa
or
filds
jmp
out
adc
xchg
mov
mov
hlt
jnp
or
loope
cmpsb
sub
cmp
xor
sub
xchg
pusha
fcomi
mov
inc
xchg
aaa
xchg
jns
add
dec
push
cs
add
loope
mov
lock
mov
add
xchg
jl
push
mov
popf
mov
mov
rcrb
xor
dec
xor
jno
mov
in
push
mov
mov
jns
xchg
mov
jno
dec
fnstsw
or
decl
sbb
cmp
inc
int
aad
loop
sub
std
andb
lahf
xchg
ficoml
mov
push
sub
mov
gs
pop
sbb
sub
push
pop
xor
addl
xlat
mov
add
outsl
dec
sub
fcmovu
push
add
sub
inc
cmp
fisubrl
bound
in
mov
sar
addr16
mov
in
inc
pop
movsb
sti
push
sub
sti
pop
movsl
shrl
nop
movsb
adc
into
mov
xchg
lds
pop
mov
xlat
dec
jg
out
or
popa
imul
orl
inc
sub
push
and
sbb
xor
pop
imul
repz
rorl
cwtl
sbb
das
loope
mov
xchg
lahf
ret
popf
mov
add
lret
sub
inc
push
test
out
sub
xor
push
jne
adc
test
sbb
fnstenv
pop
mov
scas
movsb
ficoml
sti
ds
jb
aas
les
mov
push
and
imulb
js
in
and
cmpsl
jnp
push
mov
ret
daa
mov
or
add
jne
aad
jo
cmp
js
loopne
lea
and
cmp
in
jle
pusha
loop
push
insl
fwait
sbb
lock
mov
fwait
add
mov
cmp
in
mov
jb
lods
add
rcll
popa
fisubs
add
into
cmp
add
inc
aam
add
add
inc
fsubs
add
int3
mov
mov
add
jmp
pop
sbb
dec
mov
or
xor
sbb
pop
mov
jle
lahf
data16
sbb
je
lcall
mov
xor
xor
jg
inc
sbb
dec
mov
in
dec
cmp
inc
repz
ret
pop
mov
sarl
js
int
aad
mov
mov
jno
add
test
out
fisttpll
add
mov
or
movsb
inc
daa
lds
lock
mov
fnstcw
mov
cwtl
xchg
xchg
cli
mov
lret
cli
mov
dec
mov
jge
mov
adc
lds
mov
out
sarb
add
mov
mov
mov
and
xchg
lahf
lods
dec
jae
adc
mov
mov
sub
movsl
jne
jnp
aad
stos
xchg
rep
mov
jmp
or
test
push
shrl
xor
xor
jno
inc
stos
xor
stos
mov
mov
mov
fisttpll
jl
aad
shr
adc
cmp
ret
jne
inc
jp
sbb
ret
pop
arpl
and
neg
push
shl
repnz
pop
inc
xchg
mov
ffreep
dec
push
mov
je
in
hlt
push
jge
mov
insb
lret
adc
add
aaa
lods
out
ret
mov
and
jecxz
in
stos
lods
loop
add
fildl
ja
cmp
and
mov
mov
imul
mov
cmpsl
mov
popa
shl
xchg
lock
ret
sub
cmp
pop
adc
xor
mov
ror
pop
pop
xchg
aaa
and
cmp
outsl
or
fdivrs
stc
sub
xlat
jmp
mov
sbb
push
push
ja
ja
inc
dec
inc
sar
dec
mov
stos
push
sub
sub
leave
pcmpeqd
push
pop
push
mov
rorb
sub
pushf
jno
lret
cmp
mov
fcompl
or
and
faddl
xchg
test
dec
mov
pushf
push
cmp
add
inc
pop
inc
das
sub
cmp
movsl
xchg
setp
lahf
cmpsb
dec
jbe
add
cli
pop
jle
mov
into
imul
mov
imulb
int
add
rcr
mov
popl
sahf
jo
inc
test
add
cltd
or
jo
push
or
xchg
and
adc
ret
clc
jnp
and
fcoms
into
sbb
xor
mov
insl
cmc
mov
ficomps
push
in
orl
or
pop
mov
mov
push
test
in
das
push
inc
dec
jbe
icebp
lds
inc
mov
ficomps
xchg
mov
sbb
sub
adc
or
jae
mov
xchg
movsb
push
loop
in
pop
mov
ret
push
add
mov
mov
imul
jle
ret
inc
jns
test
insb
jmp
mov
and
sub
dec
nop
sti
mov
xchg
fsts
scas
repz
xchg
push
lret
jne
std
insb
xchg
lcall
les
out
adc
ret
cltd
push
scas
cltd
add
popf
lea
stc
lcall
dec
sub
jns
inc
mov
mov
xchg
and
stc
stc
stos
aaa
pop
subl
rcll
sbb
es
xchg
ret
dec
mov
dec
dec
jbe
dec
hlt
clc
ss
rcr
ljmp
dec
jne
mov
shlb
ja
or
clc
fwait
push
or
lcall
push
lea
loop
jge
enter
xor
mov
cmpsl
jl
gs
clc
repnz
ljmp
xchg
mov
adc
jmp
jae
jle
cmp
and
pop
rclb
fstpt
arpl
xlat
and
adc
lahf
scas
push
inc
shll
jl
pusha
and
leave
test
cltd
push
push
cmpsl
int3
xchg
dec
xor
sub
mov
mov
imul
and
test
inc
sub
mov
fisttpll
pop
das
mov
mov
nop
sahf
roll
pushf
out
insb
push
mov
sbb
xor
sahf
iret
inc
rorl
lods
xor
push
or
adcl
mov
mov
in
inc
lret
fmuls
adc
push
mov
mov
mov
sbb
and
and
cmc
sub
push
inc
mov
pop
mov
mov
and
addr16
mov
iret
and
mov
pop
dec
push
fsts
cltd
dec
pop
scas
inc
xchg
push
aam
sahf
pop
mov
out
in
xchg
out
into
addr16
sbb
pop
mov
subl
add
rclb
or
mov
adc
dec
xor
xor
adc
dec
lock
inc
imul
test
xchg
or
mov
xchg
bound
cmc
icebp
add
mov
push
ja
or
cld
mov
dec
test
fidivl
shll
gs
mov
pop
cs
xlat
lcall
xchg
sbb
mov
mov
and
mov
cli
mov
add
add
sub
and
cmpsb
out
sarb
xor
ljmp
push
pop
jo
cwtl
test
rol
jbe
sti
lds
jno
cmpsb
sub
aas
int
dec
rolb
pushf
insl
inc
xorb
jae
mov
in
stos
call
xchg
inc
and
or
mov
sbb
inc
aam
add
add
andl
jno
bound
rcll
xchg
stos
xor
push
mov
push
ljmp
cmc
gs
stos
jno
xor
cmp
ljmp
xchg
lods
fwait
push
je
xor
push
push
mov
inc
dec
repz
push
nop
xor
out
lret
xor
scas
cmpsb
loopne
mov
adc
sub
insl
out
das
adc
aas
ljmp
out
je
clc
test
pop
xor
and
xchg
gs
loope
jmp
les
out
int3
lock
adc
xchg
push
adc
jnp
inc
test
out
lock
je
fiaddl
fs
mov
jle
ret
insb
jno
jp
mov
push
dec
cmpsl
ljmp
roll
mov
jle
push
mov
cmpl
sti
xor
arpl
lret
dec
mov
cmp
pop
shlb
pusha
dec
push
sub
pop
add
xchg
pop
sti
mulb
mov
cmp
aas
xlat
mov
pop
pop
subl
xchg
inc
xor
add
cmp
mov
shll
repnz
jmp
into
add
or
adc
adc
and
and
iret
cmp
dec
fimuls
add
or
sahf
ja
dec
outsb
lds
imul
jb
pop
mov
jp
in
add
mov
imul
push
mov
enter
fsubrs
insb
dec
adcb
mov
testl
imul
es
mov
sub
jne
cmp
es
lret
cmp
mov
jg
lds
dec
xor
and
scas
push
cmp
xor
lods
mov
xor
ret
mov
ret
mov
xchg
add
cmp
stos
cmp
ljmp
adcl
leave
pop
in
xchg
jns
xchg
mov
mov
pop
fistpl
jg
add
push
sbb
push
std
fcoml
push
inc
sbb
movsb
ret
xor
cmpsb
push
sti
pop
inc
scas
loope
sti
mov
int3
jmp
sbb
sahf
pop
pop
sub
rcrl
dec
mov
cmp
stos
pop
in
inc
hlt
and
dec
pop
iret
movsb
mov
mov
sub
test
adc
push
dec
dec
mov
loopne
sbb
xchg
or
xlat
pop
repnz
xchg
adc
lret
fsubl
sbbb
inc
sub
mov
insb
gs
imul
adc
movsb
rorl
sbb
dec
pop
test
dec
jg
int
xchg
push
pop
jno
lret
sbb
jne
stc
lcall
fcomi
push
xor
loop,pt
jae
ja
xchg
out
aad
aam
loop
cs
rorb
jns
int3
mov
xchg
mov
popf
pop
push
or
add
add
dec
arpl
pop
jg
out
in
dec
pop
jb
jno
aas
push
mov
jge
add
aam
cmc
jo
in
sub
fwait
pop
push
dec
ds
popa
daa
pop
dec
lods
jno
pop
call
pop
cmc
popa
adc
cmp
mov
jnp
sahf
sub
cmpsb
out
fstps
add
jae
push
mov
xchg
test
xor
sub
xchg
adc
cmpl
in
xor
jge
leave
sub
pop
push
jp
pop
rclb
dec
xchg
int3
xchg
mov
bnd
jge
sub
push
out
daa
frstor
inc
movsb
call
movsl
cmp
rorb
push
lea
sarb
mov
ss
lea
sbb
sub
mov
cmpsb
jb
insl
cmp
and
dec
gs
sub
sub
xchg
dec
and
inc
jbe
call
mov
fsubs
loopne
sbb
sub
daa
add
push
jl
dec
push
addr16
jne
push
and
fisttps
adc
mov
mov
sarb
push
mov
and
gs
mov
or
jae
das
adc
out
jecxz
push
mov
jmp
outsb
imul
testb
sahf
jne
ret
mov
cmp
fisttpll
lret
and
test
inc
je
negb
movsb
add
cmp
sarb
dec
pop
stos
out
jbe
jo
out
xchg
and
pop
xchg
cmp
adcl
lahf
and
push
mov
mov
fiaddl
into
movsl
pusha
outsb
insb
mov
jb
pop
push
dec
xor
notb
adc
cmp
jecxz
mov
gs
cmp
ja
out
push
xchg
or
adc
outsl
out
jl
sbb
in
clc
and
inc
push
push
dec
cmp
mov
in
test
sbb
jle
mov
push
mov
sbb
mov
pop
jae
push
test
cmpsb
test
sbb
push
ret
adcl
es
mov
scas
or
int
xchg
scas
lret
es
xchg
stos
addb
inc
jbe
mov
pop
cmpsl
mov
es
or
jp
xlat
xor
stc
sbb
fadds
cmp
fistps
ljmp
fildl
pop
dec
das
and
ret
adc
mov
push
jg
lods
outsl
je
stos
mov
mov
pop
pop
xchg
xchg
jecxz
dec
fstpl
insb
mov
hlt
aaa
xchg
outsb
ret
addb
ret
mov
rcr
jns
push
mov
sub
loopne
int
cmpsb
mov
int3
mov
pusha
inc
sub
sub
mov
arpl
das
xchg
dec
popa
xchg
and
adc
adc
imul
push
push
negl
test
xor
aaa
rcl
aas
daa
aaa
sbb
or
or
inc
mov
add
loop
or
xchg
mov
popf
fsts
imul
push
enter
testb
inc
leave
pop
pop
rcrb
add
or
pop
out
mov
and
xor
dec
dec
sbb
mov
cwtl
orb
daa
or
mov
mov
inc
cltd
sbb
bound
cld
xchg
jmp
add
and
inc
rcrb
xchg
lea
aaa
lret
nop
aas
hlt
adc
loopne
sub
outsl
jbe
mov
fsubrs
mov
loop
in
arpl
mov
cmp
std
or
rorb
adc
xor
dec
push
jmp
repz
jno
jg
dec
xor
push
sbb
and
negl
add
pop
incl
aad
nop
inc
imul
pop
lcall
into
sub
rcr
xchg
sbb
sub
and
jmp
scas
pop
gs
mov
mov
pop
mov
fiadds
shlb
data16
mov
data16
scas
dec
cld
push
or
lds
push
inc
dec
xchg
enter
pop
ljmp
xchg
orl
cmc
or
cmp
cwtl
sar
mov
lds
leave
js
xorb
test
mov
mov
adc
je
jns
adc
repz
imul
jb
push
loop
adc
or
xchg
sub
fstpl
mov
or
mov
push
aaa
jle
int3
in
cmp
add
test
mov
push
insb
or
add
stos
into
hlt
adc
cmp
ss
dec
iret
mov
and
cli
pop
lret
push
jl
loopne
enter
movswl
iret
mov
sub
test
xor
bound
jo
push
xchg
leave
adc
lret
cmp
sbbl
sti
lock
cmpsb
sbb
sbb
out
sbb
mov
xor
or
testb
popa
cmc
mov
lea
in
int3
div
stos
pushf
or
mov
and
add
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jmp
pop
cli
pop
sub
or
dec
pop
nop
push
lcall
mov
jp
cmp
pop
xor
xor
or
enter
xlat
jmp
in
pop
xor
into
imulb
mov
nopl
andb
aam
mov
sbb
mov
mov
xchg
sbb
xor
nop
jle
xor
repz
push
inc
fcmovb
leave
inc
jmp
push
xor
movsl
stos
sub
cmpsl
jl
inc
jecxz
xchg
or
aaa
inc
fstpt
dec
loope
mov
jg
cmpsl
loopne
lret
lea
xor
jecxz
cmp
cmp
loop
out
ja
push
lahf
fldcw
and
xor
fucom
mov
mov
es
mov
cmp
out
xorb
xchg
inc
pop
mov
adc
xor
fsubl
sbb
filds
fildll
out
cmpsb
or
int
cwtl
jae
and
dec
imul
jnp
aaa
and
cmp
fwait
popa
xor
loop
inc
inc
inc
std
fistpl
mov
cmp
dec
add
dec
int3
xchg
outsl
or
pushf
popa
inc
and
pop
imul
jns
and
inc
std
pop
dec
jmp
movsl
or
dec
dec
sahf
and
lock
adc
out
cmp
add
in
ds
pop
test
imul
mov
mov
test
push
cmp
dec
incb
into
into
mov
subb
cmc
btcl
jmp
xlat
jecxz
xchg
lcall
imul
lock
mov
popa
stc
ja
mov
dec
fsubrl
xor
add
adc
out
fnstcw
scas
shr
rcrb
jge
aaa
mov
sub
mov
cmc
out
dec
push
dec
push
clc
stos
sbb
loope
jl
inc
adc
push
and
and
xor
mov
roll
add
test
xchg
sbb
dec
inc
test
inc
push
xor
mov
add
pop
push
xchg
lods
aas
mov
daa
add
ja
addl
add
inc
mov
adc
dec
iret
lret
fdivrs
jl
leave
stc
rcll
fs
cli
jg
inc
bound
mov
mov
mov
mov
mov
loop
mov
ret
cmpsl
sub
imul
xchg
dec
in
add
fadd
push
cmc
and
and
in
cmpsl
in
hlt
pop
adc
int3
sub
movsl
push
lahf
test
sub
push
outsl
sbb
pushf
aas
xorb
je
cmpl
sub
movsl
push
loope
shlb
repnz
int
ljmp
adc
or
xor
loop
push
stos
dec
sbb
ret
out
mov
add
inc
dec
jns
clc
sahf
fsubrl
repz
cli
mov
adc
mov
lret
xchg
jae
adc
xchg
lret
outsb
push
dec
xor
inc
and
mov
mov
lret
test
adc
add
sbb
cld
and
xchg
mov
aaa
in
repnz
popf
or
int3
ret
or
or
test
and
lds
mov
sub
movsb
xchg
mov
aas
sub
shrb
xor
pop
or
jle
in
jne
daa
addr16
mov
ja
and
xor
sub
imul
lcall
jno
imul
mov
xor
sbb
jp
mov
pushf
nop
mov
push
mov
mov
int
cmpsl
in
pop
sub
pop
cli
add
xchg
repz
psrad
test
dec
je
out
js
sar
add
add
mov
mov
loopne
jge
in
icebp
and
ljmp
mov
stos
lods
push
xchg
push
inc
xor
imul
test
pop
ret
cmp
sub
scas
cltd
cmp
orl
aam
repz
xor
push
fcom
push
lret
inc
mov
pop
mov
lret
out
sub
pop
fcmovne
outsb
mov
or
dec
and
call
pop
dec
sahf
dec
mov
add
insb
das
push
cmp
jecxz
repz
add
outsl
les
adc
mov
jae
cli
cltd
testl
outsb
sub
lock
adcl
aaa
lahf
fnsave
add
mov
cmp
xchg
in
fisubrl
popa
nop
repz
mov
daa
mov
sbb
or
pop
and
stc
xor
repnz
push
outsl
icebp
cli
xchg
add
pop
adcl
adc
jg
pop
popf
cmpsl
test
imul
lea
clc
xor
popa
xchg
xor
dec
sti
mov
lret
or
test
int
jl
pusha
xor
adc
pusha
pop
xor
mov
adc
sbbl
in
dec
pushf
ljmp
add
mov
sbb
pop
pop
shrb
adc
aaa
test
adc
test
pop
pop
inc
aaa
pop
cmp
arpl
pop
pop
jecxz
sub
lret
movsb
ret
fisubrl
pop
fsubl
stos
stc
es
dec
sub
push
mov
jl
mov
stc
adcb
or
in
pop
subb
push
jb
lret
les
xor
clc
fbstp
sbb
fisttps
enter
shlb
push
mov
out
aam
into
fisubrs
subb
test
cmp
stc
mov
out
ja
cwtl
mov
inc
frstor
dec
sbb
loopne
xor
mov
xor
push
jns
xchg
je
pop
lret
inc
rcr
add
adc
sbb
mov
cmpsb
mov
out
jae
daa
mov
adc
xchg
ljmp
adc
push
adc
arpl
sbb
xor
push
or
adcl
jnp
ret
cmpsb
xchg
dec
or
repz
lea
arpl
mov
xchg
movsb
in
push
in
push
loopne
imul
inc
outsb
pop
add
out
dec
add
xor
sub
test
movsl
shlb
cmp
and
and
lahf
and
sub
mov
cli
mov
cmp
clc
mov
dec
call
xor
in
aam
add
dec
cmp
out
cs
stos
ss
and
decl
sbb
lcall
lret
addl
divl
and
xor
inc
mov
adcl
push
add
sbb
aas
xorb
pop
sbb
mov
mov
pop
testl
test
add
mov
add
imul
xor
mov
div
jmp
lret
pop
cmp
adc
test
adc
and
xor
push
arpl
push
cwtl
jns
xor
xor
ret
adc
jle
xchg
cld
push
mov
xor
jns
lcall
stos
sub
clc
stos
or
jae
addb
or
nop
cmc
popf
int
xchg
xchg
outsl
adc
cmpsl
test
addb
xchg
push
stc
and
mov
bound
xor
push
gs
out
and
mov
je
out
repz
loop
lcall
daa
cmp
inc
adc
lret
mov
xchg
xchg
daa
mov
inc
inc
mov
mov
ja
int3
mov
push
lret
aad
xor
mov
mov
and
cmc
sub
rcll
shlb
add
or
and
in
ss
add
inc
cwtl
hlt
jl
out
aas
scas
dec
mov
in
sub
mov
push
mov
repnz
xchg
and
int3
in
xlat
mov
jl
in
icebp
add
fcmovnbe
jmp
jp
in
das
sahf
cmp
lret
out
jp
shrb
or
sbb
jl
in
mov
fcoml
jo
pop
pusha
mov
cld
mov
cmp
xor
jl
jnp
mov
lahf
sub
jb
sub
adc
jo
pop
cmp
adc
imul
cltd
adc
notb
rclb
push
in
jecxz
or
testb
sub
lret
adc
xchg
add
insb
call
mov
sbb
jg
jnp
fildl
mov
cmpb
mov
hlt
imul
aaa
and
mov
xchg
cld
jge
lcall
shlb
fisttps
jnp
bound
pop
mov
or
jmp
push
dec
jge
inc
aad
add
sub
cmp
mov
fidivrs
leave
in
and
pop
cmp
outsl
inc
int
cmp
add
jmp
mov
mov
cwtd
push
inc
aam
inc
stos
add
imul
pop
add
and
nop
ffree
data16
mov
jbe
sahf
stc
repz
sub
imul
and
push
scas
aam
sub
jg
fbld
nop
pop
pop
movsl
ss
mov
js
mov
push
dec
inc
adc
and
hlt
notl
call
gs
jns
fcos
and
mov
out
cwtl
mov
sub
paddw
outsl
and
enter
std
xor
lahf
lock
dec
inc
arpl
or
outsb
sub
add
inc
mov
div
add
cmc
test
or
mov
ja
iret
xor
ret
in
insl
add
add
aaa
ljmp
rclb
jmp
stos
les
ljmp
or
enter
movsb
mov
sarl
inc
rcl
xchg
cmpsl
stos
add
rorb
add
push
push
jp
mov
insb
sub
test
xorl
popa
xchg
or
dec
cmp
mov
int3
pop
pop
dec
adc
loope
xorb
fdivr
scas
ss
cmc
sbb
imul
dec
lock
sbb
pop
inc
popa
outsl
iret
jp
mov
inc
jecxz
mov
adc
fstps
cmp
les
leave
adc
or
fidivl
mov
mov
inc
cmp
bound
ds
shll
fwait
push
xchg
xchg
adc
ret
sub
push
int
push
sbb
lock
in
lock
dec
ret
in
add
int
inc
popf
cmp
pop
dec
ja
add
in
and
jg
rclb
sbb
test
mov
lea
adc
inc
cmp
into
dec
je
inc
std
mov
ds
out
out
xchg
test
pop
mov
test
lret
sub
cmp
loope
sbb
lret
xchg
cs
push
lods
andl
adc
pop
add
jmp
pop
lds
add
insl
lds
js
aad
sahf
sahf
pusha
es
lds
int3
inc
ds
mov
in
lret
pop
dec
nop
push
jg
pop
mov
adc
lret
addb
pusha
push
lds
pop
inc
lods
inc
xchg
inc
push
es
xor
arpl
xor
mov
imul
and
int
out
loopne
std
xor
or
jg
lahf
mov
cmpsb
loopne
push
js
dec
cmp
jno
xchg
or
aam
mov
dec
sub
cli
sbb
mov
adc
jecxz
xor
sbb
add
inc
cwtl
std
stos
int
testl
mov
stc
fcmovb
and
mov
jo
jns
adc
ret
sarl
fwait
push
pop
pop
mov
mov
lods
mov
out
fidivl
ljmp
dec
enter
mov
mov
xorb
sub
fcompl
jg
mov
jl
sbb
adc
adc
cld
enter
in
jns
xchg
cmp
and
cmp
add
and
insb
xor
push
push
adc
imul
lret
mov
or
or
gs
fcoms
mov
cli
mov
mov
gs
lcall
enter
js
cs
loopne
outsl
pop
xlat
repz
mov
mov
dec
inc
mov
sub
or
pop
roll
aam
hlt
xor
aas
data16
imul
ja
push
insl
insl
adc
push
lahf
sub
and
mov
sub
lahf
sub
clc
pop
jge
les
jle
mov
add
push
sbb
ret
sar
insl
rcrl
les
ja
jbe
sub
aam
mov
pop
ss
jp
icebp
inc
cmpsb
pop
repnz
rcll
ljmp
push
stc
in
clc
leave
dec
or
lea
mov
or
fildll
xor
loope
test
mov
scas
sahf
ljmp
loop
xor
jb
cmp
push
cli
rcrl
das
fsubrp
ja
cmc
stos
test
imul
hlt
gs
jge
mov
mov
rclb
dec
xchg
data16
or
dec
sbb
out
jge
cmp
imul
andb
push
or
test
add
xchg
jp
xor
fcmovu
into
fldenv
sbb
adc
lods
xor
pop
mov
cmp
nop
jne
mov
lea
jo
push
mov
sub
hlt
inc
inc
add
nop
pop
add
cmc
xchg
cmp
push
mov
adc
scas
inc
mov
adc
and
mov
mov
lcall
fcoms
push
mov
mov
jne
lock
dec
imul
pop
test
jns
jbe
sbb
popa
pop
shrl
sub
add
out
std
sub
push
mov
outsl
imul
loopne
jbe
pop
mov
lods
inc
inc
pop
dec
adc
outsl
out
cmp
ss
addl
gs
repz
mov
es
and
or
cltd
insl
jg
cmp
lahf
push
out
mov
iret
inc
mov
mov
xchg
in
movsl
xor
xor
sub
jno
sbb
inc
push
jecxz
das
test
mov
insl
jb
ds
in
jb
repz
rcl
cli
sahf
inc
mov
add
xchg
pop
std
mov
int3
dec
or
cmpsl
clc
push
nop
add
cmpsl
push
lahf
mov
movsl
testl
movsb
xchg
xchg
inc
es
adcl
dec
push
xor
data16
pop
and
xor
cmp
js
leave
sub
in
repnz
mov
or
out
loopne
xor
ljmp
inc
jmp
push
xor
loopne
std
cli
push
sti
mov
dec
js
imul
imulb
jbe
cld
cmpsl
sti
insb
pushf
int
movsb
imul
cmp
cmp
imul
push
jo
outsl
cmpsb
das
jp
inc
adc
fnsave
lods
sub
xchg
push
out
popa
xchg
pop
pop
pop
std
getsec
movb
imul
sub
push
cltd
adc
rcll
int3
lahf
add
pop
loop
dec
pushf
lock
fbstp
sub
negb
inc
and
arpl
subb
cmp
mov
mov
sbb
adc
daa
xor
out
test
les
inc
and
icebp
push
or
icebp
pop
loopne
inc
dec
fwait
xlat
test
popf
into
cmp
pushf
sub
enter
enter
out
pop
jp
negl
pop
jp
xchg
mov
push
dec
inc
push
sti
push
loopne
mov
jnp
aam
xlat
adc
dec
sub
jg
add
les
sub
xchg
jne
stos
scas
xchg
jmp
push
xchg
mov
mov
icebp
sbb
movsl
jl
adc
subl
mov
pop
loope
cmp
faddl
xchg
xchg
xchg
test
pop
not
outsb
jns
ljmp
in
jg
jge
xor
sbb
or
add
pop
movsb
fs
imul
add
subb
mov
xchg
dec
dec
jg
lods
scas
imul
repnz
lcall
mov
int3
in
xchg
lods
jo
push
and
rclb
shll
andb
jp
faddp
add
inc
aad
jge
out
mov
test
mov
inc
push
xor
dec
mov
xchg
lret
repnz
les
ja
popa
adc
cmp
mov
addr16
ds
ret
ret
inc
xchg
insb
jnp
insl
fcmovne
js
nop
cmp
or
in
cmpsl
icebp
inc
adc
lret
mov
pop
scas
cmpsl
jnp
out
shl
or
in
ret
mov
mov
sub
out
popf
fs
fldenv
lea
pop
sub
in
adc
in
int
in
sbb
inc
loop
mov
lcall
and
jnp
mov
leave
mov
add
jl
and
jmp
sub
fwait
sbb
sbb
jle
fdivrs
add
fisubl
addr16
pop
fcompl
mov
mov
lds
fstl
adc
sbb
push
lret
in
xlat
mov
sbb
dec
cwtl
popa
call
stos
and
push
or
sbb
xor
push
xor
jno
mov
lahf
inc
nop
jl
sbb
push
ds
pop
jne
stos
std
fcomi
mov
outsl
nop
outsb
pop
mov
adc
jge
or
mov
int3
int
test
int
out
leave
adc
sbb
push
or
pop
mov
lret
enter
add
dec
ljmp
testb
addr16
xchg
into
xor
mov
mov
mov
leave
and
pop
jns
and
sub
sbb
iret
sub
adcb
fists
out
fisubl
push
jae
pop
cmpsl
nop
insb
mov
aad
clc
and
imul
xchg
lods
mov
into
repnz
pusha
loopne
sbb
pop
and
adc
jb
aad
push
or
sbb
jno
sub
bnd
into
aam
push
mov
popa
stos
scas
and
sarl
out
cmp
adc
dec
jp
xlat
jl
out
mov
fildll
fildl
sbb
push
lds
scas
lret
dec
push
lahf
lahf
dec
test
imul
xchg
arpl
shrb
int
mov
cs
mov
mov
sub
add
jp
xchg
stos
shlb
add
or
loopne
inc
sbb
pop
aam
call
stos
jae
jb
xchg
icebp
pop
mov
xchg
xor
ret
pop
mov
or
inc
test
outsl
sub
scas
adc
pushf
push
std
arpl
pop
jb
je
sbb
clc
enter
scas
adc
add
push
stc
add
pop
push
clc
pop
mov
xorb
mov
ret
cmpb
jnp
test
addl
add
or
xchg
shll
jmp
cmp
lods
mov
xor
inc
fs
cmp
enter
xlat
mov
inc
leave
pop
xchg
add
jp
sbb
sbb
pop
or
mov
add
roll
jp
addr16
add
push
sub
push
sbb
push
loopne
je
mov
pop
int3
insl
fwait
mov
arpl
or
sahf
stos
loop
scas
imul
repz
add
jmp
das
push
jmp
les
jge
mov
dec
adc
jle
daa
dec
scas
ljmp
insl
xor
inc
addr16
or
mov
xchg
jle
sub
ficoms
mov
test
adc
sbbb
lcall
mov
stos
jo
lret
jmp
and
cmpsl
jnp
dec
push
sbb
lods
sub
inc
scas
xchg
int3
xor
inc
fucomi
xor
insl
cmp
test
or
or
in
sub
andl
add
xor
sbb
sti
out
mov
shrb
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
jmp
scas
fldl
movsl
jl
stc
mov
cwtl
js
mov
setbe
inc
mov
lret
inc
jmp
lds
dec
out
test
jbe
rol
dec
int
xchg
or
pop
xorl
xchg
push
xchg
jg
sub
mov
cmc
int3
mov
out
push
pusha
aas
inc
inc
pop
fiadds
daa
inc
call
outsb
hlt
sub
aam
pop
push
xor
call
dec
cwtl
out
dec
pushf
or
jmp
mov
mov
add
in
rcrl
leave
fdivrs
jo
rorl
arpl
push
adc
js
imul
fsubrp
pop
cli
fisttps
xchg
xor
stos
lea
loope
fcmovne
hlt
adc
or
jl
bswap
sbb
stos
incb
cmpb
jle
jns
mov
push
and
and
push
arpl
or
push
pop
imul
pop
inc
int
mov
dec
inc
ljmp
dec
add
xor
negl
mov
and
or
xorb
jg
dec
add
clc
test
dec
inc
pop
insl
mov
stos
adc
loope
add
adc
add
dec
shlb
sub
lods
movsl
mov
jns
push
or
dec
mov
push
imul
ret
xor
lds
cmp
ret
orl
mov
pop
ror
mov
mov
ds
and
in
loop
pop
fidivrs
fbstp
push
mov
ljmp
sbb
mov
inc
pop
call
shrl
add
xchg
stc
int
and
rorb
js
jecxz
push
dec
data16
or
cmpsl
xor
jmp
repnz
jnp
lcall
addr16
icebp
fsubs
pop
scas
xchg
out
adc
cmpsl
mov
imul
ret
or
lea
inc
hlt
xor
push
aad
cmp
adc
add
xor
dec
add
loop
push
jg
pop
jmp
jle
mov
in
adc
push
ret
test
pusha
add
insl
test
mov
and
inc
and
shlb
sub
sbb
xchg
sub
inc
mov
or
das
ljmp
cmp
je
scas
or
jecxz
roll
cmpsb
mov
out
xor
push
popf
mov
int3
push
mov
sbb
mov
mov
out
aaa
xchg
rclb
sarl
je
adc
xor
cmp
jg
push
jnp
std
sahf
xchg
pop
push
dec
jb
es
cmp
xchg
fnsave
frstor
mov
lret
push
xor
xchg
mov
ss
fadds
sbb
out
frstor
out
push
push
int3
push
sub
movsl
mov
add
sbb
ja,pn
inc
aam
xchg
cltd
ja
sbb
into
fiadds
inc
cmc
push
stos
out
outsl
dec
or
mov
outsl
fbstp
je
icebp
cmpsb
je
test
fcomip
add
mov
in
fdivrp
fwait
dec
pop
or
pop
cs
cmc
jg
dec
mov
push
fistl
cli
sub
ja
pop
pop
xor
sub
push
push
sbb
mov
inc
xchg
popa
ljmp
jae
aaa
test
stc
lea
shld
shrb
fstps
insl
adc
inc
mov
inc
ss
sub
dec
jno
pop
test
xchg
xchg
mov
daa
add
cmpsb
imul
add
pusha
or
xchg
jno
ja
mov
arpl
ss
arpl
mov
xchg
mov
out
iret
pop
cmpsb
sub
fdivs
fldcw
mov
xchg
cwtl
pop
push
cld
jl
sarl
stc
push
cmp
aad
jl
dec
mov
dec
bound
add
jne
mov
mov
imul
and
nop
add
dec
loop
fnstcw
cmp
xchg
mov
leave
shll
loope
shl
mov
pop
dec
dec
cs
clc
cmp
aas
mov
inc
stc
jg
mov
mov
mov
daa
leave
out
outsl
andl
push
pop
rcll
jp
out
mulb
dec
add
pop
push
mov
xchg
sbbl
cmp
pop
push
lahf
stos
in
xchg
fidivrl
cmp
scas
out
cmpsl
insl
jl
push
mov
scas
xor
or
push
mov
xor
pusha
fcmovne
fsts
dec
pusha
imul
inc
adc
dec
jg
cmpsl
shlb
or
xor
add
jl
stc
out
xlat
cmp
ret
sbbb
jmp
ret
pop
call
push
into
pushf
shl
push
imulb
nop
sub
aas
push
sbb
je
arpl
rclb
insl
adc
sub
rolb
cmp
push
test
shll
sbb
es
int
jae
imul
mov
lcall
and
mov
rolb
sbb
pop
sub
int
sub
pusha
mov
mov
jp
jnp
dec
adc
imul
xchg
into
sub
orb
movsl
sub
icebp
push
ret
out
mov
and
dec
inc
jecxz
popa
mov
in
pop
les
sbb
iret
cmpsb
sbb
sub
lods
add
jmp
mov
adc
push
fistpl
or
jle
inc
sub
inc
test
xchg
sub
mov
enter
xor
loopne
mov
aas
or
add
sub
out
mov
jge
shll
jg
popa
xchg
or
adc
mov
mov
and
jno
xor
cmp
inc
jne
int3
mov
mov
in
aas
mov
in
xor
cmp
mov
sub
push
push
inc
in
out
in
cwtl
pop
fcoml
pop
sub
or
xchg
out
mov
sub
cmp
test
movsb
xchg
lods
repnz
and
ljmp
iret
outsl
sub
jae
rorb
sub
and
cmpb
cmp
into
cmp
or
jp
xlat
test
mov
fdivs
dec
inc
cld
fdivrl
pop
xchg
xor
and
push
cmp
imul
inc
aas
xor
sbb
cmp
cmp
mov
std
fs
ss
mov
aas
iret
ds
sarb
cmp
pop
data16
cmp
insl
lds
stos
and
hlt
lret
rol
pop
and
jle
popf
je
mov
cmc
out
loope
test
fidivrs
fs
xor
vmaxpd
movsl
ficompl
scas
pop
int3
cmp
jbe
push
pop
xchg
sub
rcl
pop
dec
mov
or
sbb
into
lret
and
and
mov
dec
inc
adc
xor
and
jmp
jne
add
subl
xchg
add
ret
and
jne
and
test
ret
pop
movsb
xor
cmpb
dec
ljmp
sbb
jbe
lods
xchg
stos
inc
ja
add
loopne
fistl
xor
std
add
sub
aaa
pop
repz
mov
bound
inc
mov
cwtl
js
add
xor
add
sub
dec
lods
dec
filds
dec
xchg
pop
xchg
mov
pop
outsl
pop
inc
fcomps
popf
jp
fs
stc
push
fistl
cmp
sti
in
jle
xchg
cmp
out
sbb
cmp
or
lahf
filds
mov
out
hlt
lret
pop
outsl
sahf
clc
pusha
jb
leave
xor
fcmovnbe
cmp
mov
outsl
sbb
mov
lds
jmp
fs
cmp
mov
rcll
push
insb
push
push
mov
pusha
andb
ljmp
xor
orb
aam
stos
test
popf
movsl
or
adc
jmp
pushl
es
jno
js
fsqrt
dec
pop
jecxz
cmp
cmp
cmp
push
mov
popa
pusha
mov
xor
insb
fdivs
dec
les
or
and
shrb
add
xchg
xchg
mov
stos
mov
insl
xchg
cli
pop
xor
adc
hlt
push
cmpsb
mov
in
lock
adc
inc
xor
mov
repz
cltd
push
movsl
mov
push
out
shrb
jp
xor
mov
mov
inc
mov
pop
lahf
test
sbbb
ljmp
mov
mov
push
sarl
mov
jmp
jl
aad
inc
dec
pushf
cmpsl
mov
jne
std
pop
cmp
xchg
daa
aad
dec
mov
fdivrl
pop
pop
dec
sti
pushf
push
jg
faddl
test
push
cmp
inc
pop
dec
daa
outsl
cltd
xchg
inc
jnp
mov
bound
inc
push
push
and
xchg
add
cld
sbb
pop
and
pop
aam
arpl
fmulp
je
test
out
push
adc
ret
repnz
inc
sbb
mov
arpl
inc
inc
lret
cmp
pop
lods
in
mov
or
out
in
ret
in
fwait
push
lods
jecxz
imulb
cmp
sub
xchg
mov
pop
bound
stc
fnstsw
outsb
jle
stc
stos
addr16
and
and
pop
sbbl
imul
sub
mov
das
clc
dec
andl
mov
push
mov
adcb
stos
add
lret
dec
into
jge
int3
adc
sbb
fwait
mov
sub
cmpsb
shlb
push
ljmp
mov
and
aaa
pushf
cmp
pop
fdivl
cmp
mov
roll
lods
dec
lcall
aad
sub
sbb
arpl
arpl
sbb
inc
dec
sarb
divl
sahf
add
stos
out
push
outsl
fcomps
les
mov
popa
sbb
or
or
jecxz
sbb
outsb
repz
gs
in
shrb
sarl
dec
xlat
jb
mov
mov
adc
dec
jle
orl
std
jmp
jns
loope
pop
xchg
es
nop
mov
sub
or
rcr
mov
arpl
mov
xchg
jle
jo
fcoms
cltd
jp
mov
lahf
aam
lea
popa
push
mov
lea
pop
jno
jecxz
or
ja
lock
cld
mov
xor
lret
and
xchg
push
movsl
sahf
dec
fstl
mov
dec
outsb
ffree
push
arpl
mov
mov
outsl
sahf
adc
add
add
push
out
in
inc
and
jmp
xchg
negl
lgs
loope
insb
mov
enter
nop
ss
xchg
sbb
cmp
fstl
cld
jne
push
lods
inc
and
es
cmpl
into
or
test
adc
add
mov
sbbl
mov
jno
je
pop
test
scas
mov
lret
xchg
fidivrl
imul
call
lds
out
dec
pop
aad
cltd
movsb
fs
sbb
gs
stos
sbbb
into
or
or
mov
xchg
push
lea
mul
cmp
cmpsl
push
and
pop
xor
mov
push
lock
mov
repz
icebp
iret
add
aad
fnstenv
xor
jno
sbb
adc
mov
cld
addr16
movsl
loop
lods
cmp
adc
xor
int3
scas
xchg
dec
mov
mov
into
movsb
mov
lcall
cmp
push
jae
insb
daa
inc
faddp
add
sub
ja
mov
inc
push
clc
or
loope
sub
loopnew
mov
movsb
inc
push
sub
mov
or
cli
and
das
ret
out
fidivrl
jge
pop
or
sub
enter
or
mov
cmc
push
setbe
mov
lret
jmp
inc
inc
adc
xchg
jecxz
cmp
nop
adc
mov
jbe
push
enter
pop
loope
adc
xor
mov
call
mov
lret
mov
cwtl
cmp
pop
and
mov
daa
or
or
jno
cs
fbstp
push
mov
lret
jmp
and
inc
icebp
lahf
fs
imul
jbe
cmp
inc
lret
sub
and
mov
cltd
add
push
leave
pop
test
cmpsl
jecxz
cwtl
inc
xchg
xor
push
cmp
add
inc
sub
js
loopne
aam
iret
sub
ficoml
xchg
xor
mov
xchg
inc
hlt
test
cwtl
shll
aad
ret
rcr
sbb
stos
adc
loope
dec
sub
test
cmc
mov
divb
lods
mov
dec
dec
sub
int3
push
jne
push
in
roll
mov
cmp
push
repz
jae
inc
cmp
test
data16
lret
in
and
aam
cmp
es
ja
andb
jmp
arpl
mov
mov
dec
mov
fimull
test
xchg
xlat
push
dec
push
mov
pop
daa
repnz
inc
ljmp
xor
add
xor
adc
out
jnp
dec
rcll
cmp
popf
jge
je
add
cwtl
inc
addr16
iret
cmpsl
in
clc
sub
and
test
mov
sbb
dec
aas
mov
test
pop
sub
mov
out
shlb
std
or
add
dec
lret
in
aad
cmp
insl
loopne
xchg
and
adc
incl
enter
add
jmp
nop
shrb
sub
addr16
sub
inc
outsl
mov
adc
and
movsl
icebp
loope
pusha
popf
fldcw
push
dec
push
inc
clc
jbe
inc
mov
push
in
shr
shrb
lods
fimull
jb
lret
mov
or
addr16
sbb
cmp
test
notb
xchg
popf
inc
xchg
and
pop
btr
xchg
and
xchg
cmp
dec
cmp
scas
mov
xchg
cmp
lods
pop
inc
faddl
xchg
dec
sbb
fucomip
inc
incl
pop
jmp
pop
test
xchg
insl
and
addr16
repz
sub
xchg
dec
mov
cmp
aaa
pop
aaa
mov
pop
add
sbbb
std
push
and
push
add
nop
mov
push
mov
dec
sahf
in
and
lcall
addr16
hlt
nop
in
repz
mov
arpl
addr16
movsl
jecxz
jno
cmp
ret
cmpsb
lds
sub
scas
movsl
addr16
pusha
xchg
sbb
xor
mov
ret
shll
divb
cmp
sub
adc
int3
mov
lods
fcmovu
out
jge
not
add
cmp
scas
jno
push
dec
cmc
cmp
lret
cmpsl
arpl
into
std
scas
test
inc
dec
sbb
add
push
mov
inc
xchg
jnp
jle
jno
cs
outsl
test
cmc
pop
sbb
pop
rcrb
push
js
cmp
fldcw
cmp
adc
dec
std
imul
xchg
xchg
ret
leave
pop
je
or
inc
sti
mov
test
cmp
pop
int
sub
in
mov
clc
popa
loopne
xor
mov
sub
shll
inc
xlat
add
push
xlat
mov
addr16
inc
pop
jae
add
lcall
adc
loopne
in
pop
mov
push
nop
add
dec
sbb
aam
push
inc
sbb
mov
fisubrl
sub
lret
mov
test
mov
push
xchg
mov
mov
sbb
mov
repnz
dec
cli
ss
mov
js
dec
jbe
std
daa
lds
and
pop
dec
aam
lea
jo
addr16
lods
xor
loopne
mov
sti
jne
pop
divl
mov
fnstenv
inc
aam
mov
add
fldcw
push
shrl
popf
mov
mov
inc
adc
dec
mov
fiaddl
push
xchg
jns
aaa
push
xor
cmp
push
in
mov
sub
mov
mov
cli
scas
mov
mov
xlat
stc
mov
add
pop
xchg
lcall
mov
dec
mov
or
enter
pop
fs
sti
mov
andb
loop
roll
adc
pusha
xor
push
xchg
rcrb
fwait
sbb
mov
lret
addr16
int3
shlb
aaa
mov
xchg
ja
mov
mov
gs
jl
psrad
stc
add
and
jns
jns
or
scas
jp
pop
stos
dec
xchg
sbb
hlt
mov
rclb
fcompl
test
sahf
xor
push
aas
sbb
sbb
sbb
rolb
lahf
test
test
sbb
pop
test
dec
bound
insb
push
imul
jp
dec
cli
mov
out
hlt
aad
shlb
popaw
mov
cmp
cmc
fsubl
repnz
nop
in
bound
or
and
js
xor
sub
cmp
sub
xor
inc
cmpsl
jecxz
mov
xchg
test
inc
in
out
dec
pop
and
and
cmp
imul
xchg
clc
popf
sti
lcall
cmp
jmp
repnz
outsl
xor
icebp
push
jno
sbb
scas
cmp
inc
dec
lcall
push
mov
or
adc
sbbl
adc
jmp
arpl
pop
stc
in
push
std
and
xchg
imul
dec
jle
aaa
cmp
cmovp
sub
lods
iret
add
mov
add
iret
mov
sbb
stos
cmpsl
add
loope
bound
mov
push
cld
loope
imul
push
or
sahf
sub
pop
outsl
mov
gs
add
out
lds
or
fnstsw
xor
mov
cmp
adc
loope
adc
icebp
push
repnz
xchg
cs
push
fidivrs
loope
lea
idivb
mov
insl
faddl
fnstcw
cmp
lods
sub
adc
push
cmp
sbb
nop
lea
inc
xlat
xor
inc
adc
ret
cmc
add
or
inc
xor
jae
adc
ss
lock
push
int
pop
inc
xchg
loopne
lods
cmp
int3
dec
arpl
jns
jb
add
es
and
inc
out
shrb
jle
dec
mov
test
test
jg
ret
insb
leave
adc
jns
sbb
add
fbstp
jb
add
test
enter
push
adc
add
mov
in
xor
fidivrs
fcmovb
xor
xor
aad
mov
outsl
adc
repz
in
pop
test
aas
add
leave
pop
cmp
inc
xchg
out
mov
xchg
xchg
mov
add
in
daa
push
xchg
dec
lcall
add
adc
sub
cmc
push
imul
std
dec
jnp
xchg
cmc
mov
test
pop
push
push
inc
pop
hlt
jno
mov
js
test
jne
push
ds
bound
aam
bound
pusha
movsl
sub
aas
mov
and
daa
xlat
stos
fwait
mov
mov
lds
pusha
es
test
mov
and
push
push
addr16
inc
out
lods
ljmp
loop
fwait
mov
std
push
call
mov
sti
lcall
xor
mov
xchg
arpl
jno
dec
incb
adc
aaa
pop
sahf
push
fsubp
adc
and
lcall
shlb
sub
pop
cmc
mov
lea
xor
mov
test
outsb
icebp
jg
add
orb
int3
std
cmp
lret
mov
dec
and
in
loop
push
iret
and
cwtl
std
imul
mov
in
loop
mov
popa
clc
ret
and
sbb
pusha
adc
subl
mov
push
ja
inc
inc
fwait
bsr
ret
mov
popa
add
mov
pop
test
cmp
pop
stos
push
js
mov
test
or
not
sub
fistpll
imul
rcl
sbb
in
lods
xchg
mov
add
mov
xchg
std
mov
bound
pop
fildl
pop
sub
push
mov
inc
dec
jmp
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
jmp
push
gs
pop
out
dec
push
push
add
mov
mov
xchg
bndldx
movsb
jle
aam
popf
sarb
mov
cld
xchg
jle
sti
mov
adc
fstpt
lcall
cmp
arpl
push
das
push
xor
daa
imul
push
push
or
jae
ss
cli
xor
loope
dec
ja
dec
xchg
mov
cmp
inc
mov
rcr
scas
push
xlat
lret
mov
call
nop
popf
dec
mov
roll
lods
mov
movups
cwtl
and
jo
jb
mov
cmp
xor
fucomi
xchg
sbb
out
mov
out
dec
in
mov
je
mov
push
sbb
mov
xchg
outsl
mov
pop
cmp
sbb
mov
popf
jl
mov
add
jp
sahf
divl
lea
movsb
ret
mov
push
loop
fmull
ds
bound
in
repnz
icebp
dec
adc
adc
dec
pop
xchg
mov
inc
rol
lods
stos
xor
sbb
aaa
push
fdivrl
in
mov
jo
sbbl
cmp
ja
shl
test
je
mov
aas
scas
pop
jbe
mov
pop
ss
mov
adc
xor
lret
mov
pop
imul
cmp
mov
push
rolb
xchg
in
roll
inc
subb
inc
aam
lea
mov
push
test
or
in
testl
and
mov
dec
add
jmp
mov
stos
add
mul
test
repz
jmp
ret
pushf
adc
pop
arpl
mov
jecxz
insb
adc
jno
lret
in
pop
mov
aas
dec
inc
pushf
or
ja
nop
addr16
inc
repnz
repz
test
ljmp
xchg
add
dec
inc
push
out
jmp
shrb
push
jmp
and
xchg
lock
xchg
add
jmp
in
es
es
stos
pusha
iret
clc
xlat
inc
gs
cmp
inc
std
ss
sbb
movsl
mov
fcmovu
xchg
and
out
test
rsqrtps
and
dec
mov
add
mov
jnp
into
mov
ret
lods
cmc
inc
dec
lahf
stc
xchg
dec
popa
add
pop
adc
xchg
fs
push
sbb
fwait
outsb
pop
arpl
sub
lds
mov
dec
add
xor
sbbl
mov
lock
cmp
jecxz
xor
inc
mov
inc
mov
lret
scas
mov
incb
cmp
mov
pop
iret
outsl
stc
or
lret
sub
fisubrl
or
cld
cmp
mov
pop
xchg
adc
xlat
adc
mov
push
shr
jns
mov
xor
pop
pop
adc
flds
dec
cmp
loopne
jmp
dec
add
lock
mov
insl
mov
nop
cmp
loop
test
sub
vmovmskps
imul
or
mov
movsl
cmpsl
stos
inc
iret
arpl
mov
sub
addr16
push
xor
test
add
push
sbb
fldt
push
jmp
das
scas
xor
xor
fstps
adc
or
stos
push
pop
pop
xchg
es
xor
outsl
ficompl
add
daa
jle
lret
notl
cmc
or
jbe
in
xchg
mov
sub
cmp
jae
xorb
idiv
sbb
hlt
push
fadd
push
bound
sti
in
or
or
and
es
into
jae
popf
daa
enter
sarb
sti
fucom
mov
idivb
loopne
mov
aad
mov
rsm
sbb
movsl
loope
into
outsb
jl
mov
mov
sbb
mov
sarl
push
sub
cmp
insl
pop
jmp
adc
adc
mov
jb,pt
and
mov
cmp
fldl
stc
in
cli
shl
nop
xor
sahf
add
jge
je
shlb
jp
fiadds
mov
imul
insb
cmpsl
popl
repz
inc
in
push
out
xor
mov
fdivl
xchg
inc
popa
out
fmulp
in
jmp
pusha
or
sbb
inc
lods
push
leave
xchg
jp
xchg
xchg
push
pop
pop
pop
cmp
inc
mov
dec
sub
lds
xchg
in
sar
sbb
xchg
cltd
sub
stos
hlt
scas
jae
addr16
mov
hlt
jecxz
cld
test
ficomps
push
pop
js
push
pusha
testl
push
sub
stos
jns
inc
push
push
cmpsb
inc
pop
out
dec
sbb
xor
lods
mov
fcompl
push
mov
ret
adc
lret
je
je
outsb
test
push
ljmp
xor
ficomps
xchg
cwtl
jnp
pusha
scas
mov
mov
xchg
jmp
test
mulb
pop
ret
mov
inc
pop
sub
ljmp
sbb
test
inc
mov
xor
aad
test
cmpsl
gs
ljmp
pushf
push
loope
xchg
je
pusha
xor
clc
aam
or
mov
outsb
dec
mov
dec
fisttpl
xchg
icebp
pop
or
cmp
and
popf
addl
jo
fwait
mov
pop
subl
cmc
icebp
push
cmp
shrb
mov
push
imul
in
jmp
jle
inc
mov
popl
test
cwtl
stos
lods
rorb
mov
aam
in
lret
insl
cmp
dec
in
pop
mov
dec
adc
push
fcomps
ss
js
cltd
mov
lds
jno
sbb
xchg
mov
test
jmp
js
cmpsl
sbb
sub
inc
push
jns
jg
xor
scas
shl
std
pop
xchg
mov
sub
xchg
sbb
popa
imul
xchg
pop
sub
or
push
sub
sbb
jnp
sub
or
xchg
cltd
fnstcw
add
repnz
loop
hlt
lahf
insb
incl
mov
xchg
jno
out
mov
test
jle
mov
inc
decl
aaa
stc
hlt
sbb
jecxz
add
insb
xchg
jge
inc
sbbl
imul
call
push
push
or
mov
mov
push
les
add
mov
iret
notb
aaa
test
sbb
mov
into
lcall
mov
cmpsb
mov
jge
fsub
pop
test
cld
mov
loop
loope
jnp
icebp
dec
mov
roll
mov
cld
mov
jmp
jnp
cld
inc
adc
mov
sub
sub
push
hlt
test
fldcw
int3
jno
jno
and
lds
push
in
fwait
cmp
inc
les
sub
jno
insb
out
pop
add
aaa
leave
bnd
mov
fndisi(8087
mov
inc
loop
jno
dec
cli
adc
pop
add
sbb
push
adc
xchg
int3
xchg
nop
adc
and
cpuid
or
dec
jl
cmp
addl
shlb
dec
js
stos
dec
jne
fidivs
push
adc
dec
call
mov
lock
cmp
hlt
mov
add
cmp
mov
mov
fistpl
into
cmp
xchg
int
fisttpl
inc
push
pop
filds
pop
push
mov
or
jmp
cmpsl
jo
fcompl
jecxz
test
dec
and
popf
adc
jg
fnstsw
and
std
lcall
sbb
loopne
jae
fadds
fcompl
pop
fwait
add
lahf
out
lcall
push
xchg
cld
push
sub
loopne
adc
loopne
inc
fiaddl
pop
pop
push
inc
scas
mov
loopne
mov
xchg
js
unpcklps
and
int
mov
xchg
dec
xchg
aad
adc
icebp
repnz
popf
sbb
fnstsw
push
xor
out
mov
mov
sahf
fwait
inc
cmp
push
sbb
fisubrs
lds
sahf
outsl
sub
hlt
add
xchg
sub
into
xor
cmpsl
int3
stos
cmp
outsb
imul
negb
and
testl
gs
xchg
lds
mov
jb
xchg
jp
jns
inc
sub
repz
outsl
ret
push
loope
lods
pop
pop
sbb
add
adc
cmp
xor
mov
sarb
push
mov
sti
cli
imul
sbb
push
dec
xchg
cmp
push
pushf
mov
ljmp
scas
dec
adc
xor
mov
mov
ret
mov
pop
int3
sub
xor
stc
call
out
push
movl
mov
pop
ret
mov
scas
mov
add
mov
sahf
jp
push
addl
xchg
xchg
stos
cmp
xchg
pop
idiv
push
pop
pop
nop
movsl
test
sbb
inc
std
outsb
jecxz
shrl
add
popa
sbb
dec
pop
jno
push
fnsave
int
mov
xchg
iret
or
dec
dec
xor
adc
and
outsb
cli
sbb
dec
and
inc
lret
push
xchg
std
sbb
test
pushl
inc
inc
jge
repz
pop
outsb
jne
call
pushf
loopne
out
adc
push
ja
fstps
xchg
pop
sbb
sub
add
adc
mov
xor
in
sbb
sub
xor
lds
leave
mov
or
cmpsl
jnp
bound
nop
iret
pop
lods
cmp
sub
scas
ret
xchg
cmc
push
loope
mov
aam
repnz
cmp
jb
xor
lret
pop
xchg
shlb
aas
lret
xchg
inc
adc
sub
or
ret
into
outsl
lret
mov
rcll
loope
jge
add
nop
orb
insb
lcall
and
incl
mov
sbb
popf
dec
lea
inc
cli
std
scas
loop
sub
jno
imul
xor
push
stos
call
and
and
fisubl
popa
cmp
cmp
and
sti
push
or
out
ret
bound
sub
and
mov
shll
jmp
in
out
push
mov
out
mov
sub
pop
icebp
addr16
or
adc
jg
pop
jne
loope
adc
shlb
imul
jnp
mov
das
cwtl
push
fisttps
mov
adc
pop
fs
mov
dec
push
xchg
mov
mov
stos
es
pop
sub
fdivrs
or
cltd
mov
ja
in
icebp
aam
mov
xor
std
inc
mov
mov
jb
mov
out
ret
xchg
mov
push
inc
movsb
stc
les
ja
arpl
mov
loopne
imul
adc
add
popa
call
gs
sahf
int
pushf
outsb
add
push
int3
cwtl
out
cmpsl
mov
cwtl
fsts
movsl
leave
cmpb
and
cs
pop
enter
jne
mov
jecxz
jb
inc
pop
cmpsl
aam
xlat
in
jecxz
mov
sub
sbb
mulb
and
inc
loopne
pusha
mov
fildl
add
movsl
repz
jge
adc
xchg
inc
aaa
jnp
pop
movsb
cmpsl
xchg
movsl
jmp
es
cmp
push
lcall
ret
decb
cmp
inc
adc
lahf
pop
lods
add
jmp
rcr
lcall
scas
scas
mov
pop
repz
mov
inc
mov
sarb
adc
jns
jp
lahf
test
nop
sbb
jns
adc
scas
arpl
sbb
sbb
and
fmull
mov
popf
test
push
jg
mov
imul
and
add
cmc
inc
mov
inc
pop
sti
mov
mov
insb
dec
jecxz
popf
repz
push
rcrb
add
pop
adc
adc
lods
mov
ss
cmp
jae
adc
xor
sub
mov
mov
mov
je
or
xor
rorb
cmpsb
fisubl
inc
sub
in
jmp
jl
loope
loop
add
outsb
jno
xchg
adc
repz
jb
or
cmp
scas
or
jp
push
cld
pushf
shll
mov
rcr
jne
adc
mov
push
lods
ljmp
sbb
pop
jmp
roll
cltd
cmp
sbb
out
ret
dec
sub
inc
mov
sbb
xor
pusha
inc
mov
adc
cmp
test
xchg
jg
scas
or
pop
fdivrs
les
pop
popf
loop
inc
cmp
mov
cmp
insb
sahf
dec
mov
sbb
testl
mov
xchg
fidivrs
mov
mov
mov
and
jns
adc
or
sti
sbb
pop
inc
das
inc
adc
ljmp
ss
jecxz
fs
and
inc
rcrl
sarl
dec
xchg
or
lea
mov
arpl
mov
inc
loope
stos
pop
dec
hlt
pushf
adc
mov
nop
mov
sub
sahf
adc
jno
in
shll
test
leave
ret
adc
pop
xchg
xchg
fisttpll
pop
jne
xchg
popf
daa
adc
add
xorb
pop
andw
pop
and
imul
hlt
xchg
movsl
jle
repnz
mov
pop
jge
inc
testl
mov
cld
push
cmp
pop
sti
push
lods
pusha
stos
jno
test
sbb
xchg
testb
lret
add
xor
add
insl
add
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
cmpl
jg
mov
add
jmp
pushl
call
push
jmp
addb
add
mov
mov
jno
popf
in
inc
inc
and
mov
cmp
xchg
stos
jge
jbe
ret
lcall
or
push
jae
mov
pop
scas
dec
int3
pop
sti
xor
xchg
stos
dec
out
dec
xchg
int3
push
inc
movsb
pop
jmp
imul
and
mov
jle
cmc
and
push
cmpsb
xchg
idivl
nop
repnz
fmull
ret
dec
cmove
xor
mov
movsb
fcomps
ja
jae
insb
push
or
inc
cs
lahf
adc
xchg
test
pop
xchg
in
mov
hlt
xchg
bound
push
sbb
andb
incl
push
push
lock
xchg
aam
sub
mov
and
adc
jmp
nop
pop
in
mov
or
in
lahf
call
sarl
leave
inc
mov
push
add
xor
sub
es
fcompl
xchg
dec
jns
push
testl
dec
das
sbb
push
xchg
mov
sbb
add
stos
inc
cmpsl
mov
adc
inc
icebp
xorl
cmp
idivl
and
popf
jle
push
mov
rorl
clc
lahf
adc
pop
in
negb
rcl
loope
popa
divb
xchg
out
lahf
addr16
les
push
xchg
xor
fcomps
mov
jg
stc
dec
sbb
cmpsl
outsl
into
inc
lds
adc
subl
pop
lods
and
clc
adc
pop
adc
push
jne
cld
lahf
jl
shrl
pop
leave
mul
dec
lcall
and
mov
pop
aad
xchg
mov
fsub
pop
mov
ret
sub
fcoms
cmp
sbb
xchg
mov
push
push
iret
mov
into
jle
xchg
call
add
flds
push
or
cli
imul
sub
xchg
mov
cld
mov
and
or
xlat
loopne
inc
mov
les
push
jno
insb
xor
js
popa
test
cli
fpatan
pop
xor
jo
cmp
movsl
ljmp
bound
fdivrl
xchg
popf
xchg
mov
std
popa
mov
out
popf
adc
fldl
setg
aad
shrl
leave
adc
loopne
and
imul
sbb
inc
mov
dec
lret
push
add
shlb
jae
mov
jp
shll
mov
push
sub
jg
bound
xor
in
jae
push
push
mov
aaa
sub
outsb
ficomps
xor
sbb
fsubr
int
xor
lret
ja
dec
stc
rcrl
mov
loope
das
pushf
sub
jge
sub
movsl
fcompl
rolb
jg
fidivs
sahf
pusha
out
jg
ret
movsb
mov
sarl
mov
xchg
jae
incl
pop
jo
int
jnp
lahf
test
dec
pop
push
sbb
loopne
and
mov
out
call
js
and
xor
shrl
les
mov
std
js
xlat
fdivl
adc
cmp
popa
mov
adc
inc
stos
push
es
fnstsw
inc
push
mov
dec
mov
fiaddl
inc
pusha
loopne
mov
xchg
arpl
dec
push
xchg
or
fnstenv
fwait
jo
jecxz
stos
clc
or
jns
les
arpl
push
pop
lds
and
lods
std
and
inc
imul
sti
orb
sub
test
test
and
fdiv
mov
push
xchg
and
and
iret
sbb
mov
sahf
and
push
xor
popf
or
gs
dec
push
aaa
inc
ljmp
scas
es
cmp
or
out
cmp
cmp
inc
arpl
pop
nop
sbb
xchg
in
mov
inc
arpl
jg
sti
scas
pop
out
mov
mov
dec
or
lock
inc
adc
imul
sub
push
jmp
addl
pop
fwait
cmpsb
add
add
movsl
stc
bound
outsl
or
sub
in
push
push
dec
stc
jb
loopne
pusha
icebp
inc
mov
sbb
xchg
addr16
fwait
mov
enter
cwtl
js
mov
in
cmp
stc
mov
lea
loop
mov
pusha
fwait
mov
repnz
xor
cli
scas
pop
aas
mov
aad
dec
test
shll
pop
mov
out
cmc
sbb
push
cli
ficompl
aad
inc
sbb
xor
xorb
add
inc
adc
bound
es
mov
adcb
scas
mov
mov
lock
ja
movsb
pop
sub
xor
mov
fsubl
in
inc
scas
mov
cmp
cmp
fbstp
arpl
xor
js
sbb
push
jbe
pop
cmp
fnstcw
test
sub
mov
sub
sahf
add
rcll
mov
xchg
mov
out
push
shlb
mov
je
test
lcall
lds
loopne
inc
lock
jnp
mov
pop
pop
aad
jmp
inc
adc
xor
xchg
addb
inc
push
pusha
ja
lcall
jno
popa
xchg
sub
loopne
pop
adc
les
fidivrs
stos
pusha
data16
sub
call
in
push
mov
into
push
xchg
jl
adc
adc
sub
and
adc
jnp
dec
dec
and
jl
idivb
jle
loope
scas
push
mov
ror
jno
in
sub
stos
xor
ficomps
andb
arpl
cli
fnstenv
dec
mov
xchg
sti
jge
enter
push
test
inc
or
mov
mov
or
out
cmp
cltd
mov
in
add
outsb
xlat
mov
mov
ja
gs
rcr
adc
into
shll
jp
sbb
cmp
lcall
cmp
cmp
iret
test
stos
pusha
fwait
sahf
mov
movsl
aas
ja
call
push
mov
stos
dec
aam
ljmp
shrl
lahf
lea
les
push
xor
cmp
mov
push
sbb
addl
pop
pop
rclb
push
or
push
push
jp
add
cmp
fistl
push
repz
dec
xor
sub
jns
adc
pop
scas
push
out
inc
inc
inc
add
int3
adc
mov
mov
adc
out
xlat
test
cmp
dec
mov
repz
mov
mov
add
rcrl
adc
out
shll
mov
jae
arpl
push
loopne
stos
movsl
divl
cmp
or
xchg
jo
pop
loope
into
cld
adc
nop
addb
jnp
add
jbe
mov
sahf
xor
imul
jns
add
ds
stos
movsl
mov
int
cmp
insl
aad
xor
fs
aaa
fstpl
insb
jne
dec
xor
add
mov
mov
mov
cmpl
jge
movzbl
add
adc
jmp
push
push
push
pushl
call
shrd
jmp
outsb
fwait
push
movsl
or
movsb
js
add
dec
sbb
jno
loope
xchg
cwtl
fs
add
jmp
mov
shll
out
in
out
lcall
sub
aad
jae
rorb
mov
mov
dec
jno
push
scas
ljmp
jmp
fwait
aam
popa
add
push
in
fcompl
dec
mov
sub
shl
push
jbe
out
test
jl
add
and
add
cmc
pop
div
sub
mull
repz
into
and
or
in
stc
adc
repz
popf
popf
mov
mov
lods
add
or
fwait
mov
inc
int
mov
mov
push
sub
sub
lret
sub
daa
fsts
jg
nop
mov
or
jbe
mov
leave
jnp
aam
aam
scas
sub
stos
mov
fs
fs
pop
test
icebp
fmuls
stc
cli
sbb
scas
push
aaa
sub
xor
cmp
repnz
rorb
out
xor
and
inc
sbb
das
lea
mov
out
stc
or
movsl
mov
xchg
int3
stos
mov
jecxz
xchg
test
in
and
push
mov
out
mov
pop
add
cmp
jbe
addl
flds
mov
cld
repnz
mov
sahf
test
in
mov
xor
mov
adc
mov
in
sub
adc
or
add
lret
push
scas
daa
or
mov
jge
lods
mov
mov
inc
and
pop
mov
xchg
daa
xor
pushf
and
fcoml
jo
dec
or
jno
nop
fstpl
lods
sub
out
ja
repnz
xor
movsl
jmp
sahf
popa
ljmp
insl
mov
aad
ret
sbb
and
mov
sub
inc
jno
fnstsw
pop
cmp
sahf
cs
rcr
sar
das
xlat
rclb
push
pusha
popa
ljmp
xor
movaps
cmp
scas
and
xchg
mov
jmp
and
add
xchg
xor
repz
add
xor
xchg
mov
push
and
push
sbb
xchg
xor
push
xchg
and
mov
push
lret
inc
test
ja
ficomps
outsb
push
pop
fsubrs
mov
add
dec
jp
adc
cld
lods
xchg
mov
insb
pop
arpl
xchg
mov
xor
testb
cld
mov
and
push
into
out
repz
sbb
nop
mov
adc
jle
jne
fidivrl
movsl
stos
mov
xor
lret
call
mov
in
dec
repnz
or
test
and
aad
jnp
pop
out
subb
inc
push
arpl
and
xchg
nop
imul
adc
sub
and
adc
les
pop
inc
repz
push
repz
test
jb
pusha
fidivrl
ljmp
mov
sbb
and
std
push
fidivrs
out
mov
cli
sub
imul
lret
or
test
pop
loop
cld
gs
cmp
leave
int
sbb
xchg
pop
scas
jno
and
test
daa
cwtl
and
sbb
rcrl
mov
lcall
movsb
mov
ds
mov
fwait
movsl
out
lock
cmc
dec
xlat
ss
movsl
iret
dec
inc
inc
insl
xor
outsb
add
or
addr16
notl
lcall
enter
add
outsb
addr16
pop
inc
xchg
jnp
cwtl
and
or
mov
stos
sbb
dec
dec
xor
cmp
sahf
fldl
js
cmc
lret
pop
dec
dec
push
add
sbbb
xor
outsb
ret
cmp
dec
leave
leave
cmpsl
add
mov
xchg
mov
or
popa
or
inc
rclb
pop
subl
loope
cmc
movsb
pop
jl
adc
hlt
out
dec
mov
std
outsb
mov
dec
fidivrl
push
mov
push
std
adcl
pop
add
sbb
mov
sub
loopne
mov
fiadds
inc
push
inc
or
push
sbb
dec
cmpsl
push
add
aad
inc
xlat
add
or
mov
cmp
xchg
xchg
sbb
add
mov
mov
lods
sub
sbbb
push
ja
xchg
jno
movsl
bnd
adc
incl
sub
dec
in
push
arpl
rcrb
nop
xor
xor
jp
ds
out
sub
push
ds
fs
xchg
inc
pusha
bound
sub
mov
dec
mov
loop
fidivl
pop
xchg
lahf
inc
cmp
jl
repnz
mull
jae
mov
in
dec
repz
mov
out
lret
mov
cmp
insl
data16
dec
iret
sbb
adc
js
mul
xchg
and
ret
mov
xchg
mov
movb
icebp
outsl
and
sbb
push
push
test
mov
outsl
icebp
sub
and
mov
shrb
cli
sbb
cs
fnstsw
addr16
xor
sbbb
sbb
leave
sbb
adc
cmp
dec
dec
jns
cmp
dec
cmpsl
sbb
stos
insl
movsl
dec
idiv
lret
sahf
or
scas
sub
jne
scas
add
jnp
mov
test
xor
test
fidivl
xor
in
rcrb
xor
pop
sbb
shl
or
ret
xlat
ss
sbb
push
cmpsl
add
sbb
push
mov
movsl
inc
mov
inc
lret
mov
fistpll
jno
adc
cli
addl
pushf
dec
lods
add
mov
and
mov
mov
mov
inc
pop
test
mov
mov
fisttpl
xchg
int3
mov
test
arpl
jp
pushf
popf
xchg
test
inc
xor
test
inc
loope
push
mov
int
in
faddp
cltd
pop
and
rcrl
lds
cwtl
mov
adc
jns
das
push
pop
call
sub
pushf
jmp
dec
adc
push
mov
lahf
shll
sar
leave
dec
insb
aam
push
inc
mov
fs
adc
pop
stos
call
mov
push
mov
push
push
pushf
add
cmc
aas
sar
mov
pop
aas
ja
lock
insb
mov
insl
ret
mov
in
ror
out
mov
js
sbb
cmp
xorl
in
jg
outsb
pop
insb
lock
pop
jge
push
sbb
pop
xorl
pop
js
jb
leave
cmp
je
mov
mov
adc
jge
inc
add
xchg
xchg
cwtl
push
out
push
cmp
insl
ret
pop
sub
aam
mov
xor
xchg
pushf
stos
out
mov
lahf
mov
subl
je
outsl
dec
cmp
pop
fwait
loope
in
enter
mov
mov
adc
xor
and
mov
sbb
xor
sbbl
or
mov
sub
mov
mov
subl
shl
mov
and
mov
mov
shrd
movl
xor
addl
shr
mov
mov
sbb
mov
mov
mov
mov
sub
sub
xor
decl
or
orl
jmp
cli
int
lahf
push
or
inc
cmpsb
ss
pop
or
jno
js
loop
dec
pop
ret
add
push
daa
insl
arpl
out
lahf
xchg
pusha
push
cmp
out
and
enter
mov
fstps
sarb
inc
je
divl
scas
mov
fucom
loop
cmovb
mov
jbe
mov
sbb
adc
xchg
sbb
or
xchg
dec
pop
push
push
jo
mov
jg
cwtl
test
aam
addl
sbb
es
addps
mov
lahf
flds
enter
jmp
xchg
sub
and
mov
loope
sarb
test
lcall
mov
lods
lret
add
aam
mov
ret
mov
dec
stos
xor
pop
sub
loopne
pusha
dec
cmp
jo
or
add
std
addl
imul
sarb
adc
int3
or
pop
scas
cli
sub
rcrb
sbb
sbb
loope
push
stos
mov
mov
mov
push
xor
mov
cli
jne
add
mov
xchg
inc
jb
adc
fcmovnb
cmp
jge
jo
lcall
test
mov
scas
xlat
jmp
pusha
mov
push
xchg
incl
shlb
sbb
xlat
fwait
push
ret
ljmp
xor
xor
enter
pop
cmp
mov
sbb
jp
sti
dec
pop
mov
icebp
sahf
and
lcall
ds
mov
sbb
or
jbe
ja
jns
push
pop
xchg
push
clc
inc
pop
pushf
call
mov
sub
push
mov
mov
mov
push
jge
sub
push
push
pop
out
lea
sbb
add
dec
adc
add
cmpl
repnz
push
nop
pushf
stos
jb
sar
fwait
psubsw
dec
daa
add
cmp
jno
scas
xlat
addr16
lret
sbb
jmp
adc
fsts
push
mov
jg
and
inc
lea
add
inc
fstps
insl
cmp
adc
pop
mov
and
jg
mov
mov
daa
scas
aas
mov
xchg
fnsave
decl
ljmp
jp
sbb
xchg
adc
scas
mov
cwtl
cmp
and
xchg
ror
jmp
pop
into
cltd
mov
nop
mov
fisubrl
or
movsb
mov
dec
xchg
mov
sbb
shlb
mov
scas
dec
fxch
xor
inc
jbe
dec
hlt
outsw
dec
dec
sbb
mov
inc
push
lock
movsl
cmp
mov
aam
sub
call
sbb
mov
cmp
inc
push
fdivrs
bound
xor
inc
cmc
and
push
push
fcomps
xor
lahf
jle
lcall
test
or
dec
mov
mov
xlat
mov
dec
aaa
sbb
lret
fwait
in
xorb
adc
sbb
xchg
xor
inc
roll
dec
mov
jmp
push
pop
clc
xlat
andb
fldcw
addr16
dec
insl
mov
popa
mov
mov
popa
js
out
xchg
add
xchg
jmp
test
cmc
pusha
sbb
cld
sub
cmpsb
out
test
roll
add
stos
sbb
xor
outsb
xchg
mov
push
lahf
mov
xchg
fbld
mov
stos
hlt
lock
hlt
mov
nop
int
push
xchg
adc
jno
test
outsl
cmpsb
inc
adc
mov
ret
inc
lea
dec
stc
mov
cld
mov
push
dec
or
aam
dec
dec
dec
jns
shlb
lods
lods
or
xor
mov
je
inc
in
out
loopne
imul
mov
bound
sti
test
out
in
dec
lds
iret
hlt
adc
xchg
pop
cmp
test
xchg
rorl
and
lea
insl
fld
int3
add
std
mov
and
push
add
icebp
push
push
inc
lret
sbb
cmp
cmpsl
std
sti
fwait
testl
es
clc
push
and
mov
jmp
or
data16
iret
iret
in
push
addl
sbb
jg
xchg
jge
xor
lret
mov
mov
sub
fwait
cmc
movsb
cs
cmp
push
push
xchg
fcomps
mov
cld
fsubrs
shlb
fs
sub
jae
jle
push
xchg
adcl
pop
movsl
jne
in
jle
xor
int
scas
mov
xchg
test
pop
gs
gs
lock
insl
xor
repz
jl
or
add
mov
aaa
inc
sbb
dec
add
sub
aad
outsl
add
and
fwait
jo
inc
xor
pop
fstl
cmp
sub
clc
jno
sbb
aad
inc
loope
mov
in
cwtl
jne
push
mov
pop
lock
stos
push
adc
test
xor
insl
and
dec
push
fbstp
lcall
cmp
pop
push
adcl
cmp
and
jmp
scas
mov
xlat
bound
movsl
icebp
mov
sar
fsts
jne
cmp
sub
aas
and
les
pop
adc
or
pushf
lret
mov
dec
push
lods
cmpsb
xlat
sub
pop
stos
sahf
imul
pop
xchg
daa
xchg
xor
add
dec
jnp
push
ljmp
or
lahf
ret
mov
cmp
or
or
mov
pop
pcmpeqw
jno
mov
adc
sti
push
dec
cmpl
mov
outsl
pop
and
test
push
in
xor
push
inc
lret
push
lret
fs
aaa
pop
push
sbb
ror
add
cmp
mov
sub
lcall
repz
sub
in
sti
mov
push
shr
out
jmp
push
mov
add
mov
addl
cs
jnp
sbb
add
dec
adc
idivb
popl
mov
and
push
xchg
xor
out
js
scas
loopne
repz
pop
mov
inc
repnz
mov
ja
arpl
jg
jl
sbb
in
and
mov
in
sbb
pop
xor
int
adc
adc
jae
jmp
cmc
push
jbe
sti
fsubl
popa
sti
shl
dec
jg
imul
cltd
inc
mov
popf
or
andb
daa
mov
adc
pop
jnp
sar
jmp
xor
dec
cmp
sarb
imul
mov
es
xchg
ret
and
rclb
pop
imul
push
faddl
loop
data16
int3
pushf
jle
push
pop
leave
movsb
add
les
ja
imul
and
inc
inc
std
mov
sti
dec
dec
test
stc
ja
in
mov
test
test
incl
sbb
mov
xor
or
mov
adc
mov
jmp
movsb
dec
dec
jo
gs
adc
push
int3
xchg
lcall
add
scas
and
aam
push
scas
jge
movsl
mov
cmpsl
js
sbb
inc
adc
popf
pop
jne
cmc
or
pop
sbb
rcl
cmc
jbe
jp
imul
mov
hlt
repnz
cmp
xchg
xor
daa
dec
mov
fists
and
js
imul
pop
dec
int
repz
push
cltd
negb
adc
push
adc
test
out
inc
inc
mov
jbe
testb
imul
inc
add
daa
call
pop
mov
fwait
stc
fisubrl
mov
jb,pn
sub
lds
fwait
aad
pop
sahf
xor
jecxz
push
nop
sub
cld
jae
leave
jno
dec
sahf
iret
sub
sub
fsub
fmuls
in
lock
inc
adc
pop
dec
pop
xor
insb
mov
enter
or
stos
or
lahf
ds
adc
inc
jge
roll
jns
lea
xor
mov
xor
cmp
fstl
icebp
mov
add
mov
mov
leave
test
xchg
les
addr16
add
jne
bnd
dec
and
arpl
push
push
xor
and
flds
cmc
dec
pop
aaa
insl
jne
add
mov
pushf
test
mov
xor
pusha
xor
test
xchg
mov
aaa
and
jbe
dec
push
std
adc
rclb
xor
adc
mov
sbb
mov
dec
push
push
bound
xor
lret
mov
add
ss
sarl
je
sub
push
dec
dec
sub
out
mov
cmp
cmc
aas
in
pop
cmc
lret
jmp
lcall
out
sub
or
sbb
fisttps
loope
pop
xchg
stos
js
mov
inc
inc
xor
js
movsl
xlat
enter
pop
xor
jecxz
pop
out
or
and
dec
jnp
popa
inc
cltd
xchg
pop
or
push
sub
subl
pusha
psubusw
imull
sub
cs
inc
sahf
jnp
mov
stos
and
insb
xlat
jae
subl
or
pop
or
movb
fisttpll
pop
test
mov
inc
pop
ds
fcoms
aam
enter
cmp
lods
ret
jne
push
mov
and
jae
rcll
test
inc
jp
mov
mov
xlat
dec
adc
ret
adc
xchg
adc
mov
shll
dec
out
stos
imul
xor
ret
pop
imul
jecxz
mov
push
jbe
cmp
movl
out
kandnw
inc
jae
ss
fistl
ljmp
dec
cs
lock
movsb
lea
jp
mov
adc
shlb
cmpsl
clc
fidivrs
and
loope
xor
sbb
and
push
mov
and
popf
les
cmp
aad
jmp
and
pop
adc
mov
sub
pusha
mov
push
sbb
mov
mov
pop
lods
les
outsl
cli
sub
mov
pop
mov
dec
sbb
jae
xchg
sub
ds
shlb
aaa
mov
ret
and
and
stos
ljmp
cltd
js
loopne
movl
pop
lock
imul
sbb
mov
adc
push
ss
push
cli
cmp
andb
int
lods
test
ja
pop
pusha
in
fsubr
mov
imul
inc
cmpsb
jb
sbb
or
mov
rclb
sub
cmp
jge
pop
and
in
aaa
clc
adc
mov
sbb
pusha
or
adc
adc
push
out
movsb
xlat
addr16
pop
cmpsb
shlb
mov
dec
push
pop
or
adc
mov
icebp
and
pushf
movl
pop
sbb
stc
ljmp
shrl
mov
inc
je
mov
loopne
ret
jo
mov
push
loope
scas
sub
cwtl
push
adc
or
lods
pavgb
fbld
fidivs
sbb
int
adc
add
mov
std
sbb
hlt
jl
mov
fdivl
cmp
adc
add
notl
jge
div
lods
mov
enter
jo
repnz
in
pop
xchg
and
fldt
rcrb
popa
rorb
xchg
cmp
fwait
cmpsl
pop
or
xchg
mov
xor
or
lds
dec
push
std
jmp
cmpsl
mov
lods
inc
clc
imul
ds
cmp
xorb
negb
inc
sbb
sub
inc
xchg
iret
mov
js
std
ja
inc
push
rcr
aam
xor
cs
and
and
movsb
jb
es
mov
jnp
loope
pop
sbb
daa
adc
dec
cmp
pushf
shl
pop
xor
cltd
ret
test
jo
mov
push
imul
fildl
fsubrs
mov
popf
push
xor
cmpsb
mov
sti
add
push
push
mov
data16
mov
push
ret
test
std
in
dec
cmp
xchg
xchg
popf
int3
pushl
adcl
adc
rolb
sbb
mov
jp
dec
and
mov
pop
arpl
dec
mov
nop
sbb
in
jae
in
mov
xchg
pop
ret
mov
xchg
push
je
roll
repnz
loope
sbb
add
iretw
adc
cmp
fnstcw
mov
sub
aas
stos
fld
repz
xchg
push
sub
push
mov
pop
nop
xor
mov
cld
sbb
jp
dec
jbe
pop
test
jle
jge
insb
inc
lea
mov
sub
imul
sbb
lock
nop
jge
sbb
bound
idiv
mov
ss
pop
xchg
xchg
xchg
mov
cmp
mov
jl
icebp
xchg
push
lret
jb
cmpsl
push
jp
nop
roll
pop
jg
dec
test
cmp
and
jl
int
xor
stc
push
push
jo
inc
lds
fwait
insb
pushf
jle
xor
and
dec
jnp
mov
push
cmp
enter
out
cli
stos
stos
je
push
cmc
inc
aas
cmpsl
movl
jecxz
lods
xchg
cwtl
xor
ljmp
in
idivb
loop
jo
sti
mov
jmp
js
lds
jmp
test
mov
and
iret
addr16
pop
rcrb
adc
inc
cld
arpl
loop
subb
sbb
adc
stos
push
adc
mov
ds
and
add
add
lfs
lods
cmpsl
dec
cmp
push
ja
add
mov
test
jo
out
in
ss
or
adc
jno
xor
iret
xchg
into
jnp
xchg
mov
add
xor
push
and
loope
test
mov
cmpl
jl
subl
jmp
pushl
pushl
call
mov
mov
mov
mov
mov
mov
shl
xor
shld
cmpl
jg
dec
jmp
pushl
call
shl
mov
xor
xor
movl
movl
movl
cmp
movl
jne
movl
cmp
je
subl
mov
mov
cmpl
jg
add
jmp
pushl
push
pushl
push
push
push
push
pushl
call
mov
mov
xor
shld
shl
xor
addl
xor
movl
cmp
movl
jne
cmp
je
mov
mov
shl
mov
xor
movl
shr
or
sbb
mov
cmpl
ja
and
jmp
push
push
pushl
call
mov
mov
mov
mov
mov
jmp
bound
clc
xchg
xor
xchg
outsl
inc
adc
addl
xchg
fcomps
dec
addr16
adc
aam
xchg
and
add
jb
push
mov
xor
dec
fimuls
orl
sbb
and
jmp
lret
mov
and
cmp
lock
jmp
mov
or
loope
or
in
sar
mov
push
push
dec
mov
xchg
or
push
sbbl
dec
cld
inc
mov
pop
enter
cmp
add
aas
inc
mov
inc
lock
xor
or
pop
pushf
adc
sbb
xor
adc
dec
mov
hlt
jecxz
das
mov
outsb
jb
mov
int3
ja
or
xlat
jecxz
sahf
paddb
fstpl
clc
rolb
mov
xlat
subl
les
fcomip
addr16
adc
xor
add
test
pop
cwtl
ljmp
testb
imul
jecxz
mov
sub
out
push
xchg
gs
xchg
and
outsb
int3
lret
and
jl
inc
jle
repz
repz
jg
daa
out
mov
dec
xor
xor
push
sbb
push
aas
push
fcmovnbe
dec
int3
jnp
inc
fs
mov
ss
sub
xchg
das
sub
nop
add
push
lods
test
cmp
js
fs
push
push
lahf
vmaxpd
loop
cmp
mov
mov
arpl
push
pop
popf
xchg
clc
xchg
adc
ftst
adc
xor
mov
sub
add
mov
adc
negb
lods
sahf
cltd
je
cmpsl
imul
jns
arpl
push
push
mov
pop
xchg
mov
mov
jbe
jbe
sbb
adc
rclb
xor
ficoms
mov
sbb
add
and
orl
test
jo
xchg
movd
dec
idivl
ror
jo
jno
xchg
jno
ljmp
mov
mov
inc
loope
mov
adc
mov
lock
sub
inc
sub
inc
push
push
gs
loop
lds
add
jbe
sahf
dec
push
pop
mov
add
rolb
pop
xor
push
push
cmp
test
int
pop
scas
push
pop
xor
push
cs
mov
repz
ljmp
rclb
xchg
sti
test
sbb
xchg
or
jl
test
and
cwtl
pop
adc
rorl
enter
jmp
lds
fcomip
rorb
xor
loope
mov
push
repz
xchg
int
ljmp
es
lods
pop
inc
das
insl
gs
dec
jp
inc
jl
int3
jne
stos
dec
paddsw
icebp
roll
add
psllw
mov
stos
or
or
std
and
das
lods
aaa
mov
dec
sub
repnz
into
dec
psubsw
fcompl
push
aad
sar
shlb
cwtl
mov
lods
push
sbb
push
fs
mov
movsb
jge
clc
ja
jns
inc
mov
cltd
cmp
xorb
mov
dec
loopne
arpl
and
lods
inc
aam
sub
jl
arpl
movb
adc
sub
push
out
mov
ja
js
loopne
outsb
pusha
push
out
cmp
jnp
pop
std
ror
push
mov
dec
and
clc
cld
pusha
xor
fucomip
mov
cmp
pop
sbbb
xchg
inc
shrl
push
add
mov
test
push
mov
or
pop
and
lgs
faddl
cmpsb
addr16
sarb
push
repnz
shll
mov
add
pop
test
xor
sarb
test
pop
sbb
sub
mov
xlat
inc
pop
into
cs
push
icebp
cmpsl
adc
dec
sti
dec
movsl
push
add
sub
fidivrl
adc
push
push
push
mov
sahf
dec
sub
mov
rolb
test
syscall
add
mov
xchg
fwait
push
ds
add
sub
popf
xor
push
cmp
mov
mov
aam
mov
inc
sub
mov
pop
ljmp
inc
xchg
push
fsubrp
adcb
jae
fwait
inc
adc
aaa
dec
cmpsl
call
mov
arpl
test
movsb
loope
clc
pop
std
and
mov
leave
daa
cmpsl
fdivr
cmp
lret
cmp
mov
mov
out
das
inc
sahf
sbb
sub
pop
and
push
repz
stc
out
push
mov
push
loope
loope
fisttpll
pop
push
aaa
adc
xlat
cmpsl
es
aaa
pop
jbe
mov
aad
jns
outsl
cmp
js
sahf
imul
pushf
pushl
icebp
sbb
pop
sub
pushf
fwait
pop
sbb
scas
push
pop
arpl
ss
data16
decb
je
jno
movhps
dec
jb
rol
ds
cmp
push
xor
mov
cmpsl
bound
ret
push
jbe
mov
arpl
adc
xchg
int
xor
cmc
xchg
out
jno
adc
ja
sub
aam
leave
xchg
and
sbb
aas
scas
adc
dec
sub
push
outsb
pushf
or
call
sub
mov
gs
inc
and
jmp
mov
repz
cmpsb
or
mov
xor
clc
xor
sbb
mov
add
xor
shlb
sub
sahf
and
movsl
mov
cmpsl
mov
ret
add
jno
jns
bound
jae
push
xor
int3
xchg
ljmp
cli
in
mov
jp
lret
sarl
xchg
and
push
stc
clc
in
inc
mov
lea
add
and
inc
cmp
inc
out
xchg
enter
fidivrs
xchg
xchg
mov
mov
cmp
dec
stos
mov
test
cmp
and
mov
arpl
push
mov
out
or
in
cmp
cmp
push
aam
lds
ret
xchg
stos
inc
cmc
je
incb
adc
xchg
push
cltd
movsb
push
mull
out
mov
ja
lea
ret
and
mov
shlb
dec
pusha
cmp
mov
ljmp
mov
cmp
mov
mov
sub
push
jle
jg
jl
das
sbb
int3
dec
sahf
mov
imulb
lret
leave
push
aaa
in
add
out
dec
aam
jns
add
test
push
lds
jb
gs
lods
pushf
mov
mov
aam
leave
push
mov
repz
outsl
fsubrl
sbb
adc
into
add
xchg
mov
mov
push
xchg
ljmp
outsb
pop
incb
movsb
shrl
int
out
push
bound
push
mov
inc
cmp
jno
enter
aaa
inc
push
and
inc
inc
jmp
pop
sbb
call
fstps
lock
sbb
jp
mov
push
nopl
jg
jbe
jmp
sbb
imul
jbe
adc
das
mov
cmp
negl
pop
xorl
sub
mov
add
mov
lea
mov
xor
mov
mov
mov
adc
jmp
fbld
and
jbe
out
loope
adc
addl
mov
out
bound
inc
int3
add
stos
xor
mov
cwtl
lcall
inc
dec
sbb
jnp
ret
inc
sub
inc
mov
pop
js
leave
pop
hlt
add
daa
pop
movb
aad
dec
data16
arpl
lcall
mov
mov
inc
jbe
add
cltd
out
cmc
adc
mov
testl
and
adcb
lahf
xor
adc
adc
pop
icebp
jecxz
lock
add
add
lds
adc
cmp
sbb
cmp
dec
test
cmp
adc
xchg
cmpsl
out
cltd
push
inc
jo
mov
out
inc
sbb
and
fisubrs
fidivs
cmp
lds
stos
sahf
xor
aad
add
xchg
fsubrp
scas
and
inc
loopne
cmpsb
dec
dec
push
jne
lret
pop
sti
lea
shll
push
repnz
cmc
mov
push
xor
cwtl
cli
inc
xor
pop
sub
insl
repz
je
jle
xchg
mov
or
jne
stos
outsb
pop
popf
lods
mov
bswap
jne
fsub
jge
dec
pop
pop
loop
addr16
adc
in
test
shrd
xor
xor
into
pop
lret
fnstcw
jae
aas
repnz
jp
xor
pop
inc
push
mov
shll
sub
je
std
dec
push
cmp
and
nop
xor
stos
sub
fs
adc
adc
cmp
outsl
ja
cmp
imul
mov
aas
lahf
ss
xor
jecxz
fcoms
and
mov
mov
in
cmpsl
push
arpl
cmpsl
ds
adc
inc
imull
and
or
xor
mov
inc
mov
imul
jne
jb
mov
lcall
imul
hlt
je
xchg
sub
add
jp
xor
outsb
in
ss
xlat
in
scas
repz
test
pop
inc
cltd
pop
out
push
andl
add
push
test
and
es
mov
out
jmp
sbb
jmp
daa
sub
xor
pop
mov
mov
pop
cmp
xchg
mov
push
inc
daa
pop
or
inc
outsb
repz
cwtl
xchg
ljmp
lods
scas
or
mov
and
xor
jle
adc
popa
pop
out
mov
das
pop
sbbb
call
inc
mov
mov
sbb
out
mov
adc
push
dec
jae
call
pop
out
cs
enter
xor
fldenv
sahf
or
dec
loopne
popf
lahf
out
jnp
fcoms
in
jp
xor
into
mov
xchg
insl
je
orl
or
jg
push
jge
arpl
mov
out
lcall
push
sbb
in
xchg
negl
je
mov
cmp
loop
insb
movl
push
or
jns
nop
mov
jl
push
sbb
iret
scas
pop
xchg
imul
inc
dec
xor
xor
inc
push
or
cmc
cli
imul
lret
pop
sbb
fsts
aas
mov
push
adc
sahf
pusha
adc
mov
stos
clc
call
sub
jg
sub
mov
outsl
sbb
adcl
push
mov
mov
jmp
inc
mov
sbb
and
mov
fsubr
cmp
out
add
test
dec
add
hlt
iret
insl
push
adc
mov
sub
es
sbb
pop
stc
adc
cmp
dec
add
xchg
adc
into
mov
lcall
jecxz
cmp
or
int
jne
mov
in
rcl
inc
xor
repnz
es
lret
mov
rcl
sub
test
and
jp
mov
dec
mov
mov
dec
sahf
xlat
aam
adc
xor
or
in
loope
adc
inc
inc
cltd
fidivl
pop
fiaddl
out
dec
sbb
mov
push
jmp
add
icebp
imul
push
add
add
rorb
adc
xor
iret
dec
repnz
sbb
inc
fwait
cmp
inc
inc
inc
addb
mov
test
and
mov
adc
jbe
cmp
jae
test
sbb
aas
jecxz
decl
mov
out
divb
jno
dec
imul
fcmovnb
or
mov
ds
and
mull
inc
sub
lock
cmpsl
push
xchg
push
mov
dec
dec
es
mov
push
shlb
sub
movsl
mov
xlat
jmp
in
imul
stos
mov
push
inc
add
fistpll
ret
es
mov
std
lret
aam
sahf
cmp
sub
xor
xchg
mov
icebp
xor
sub
and
or
js
xor
lea
mov
pop
dec
xlat
dec
adc
subl
push
out
sbb
cwtl
jl
aas
dec
rclb
aad
pop
nop
jbe
lea
jns
push
jb
repz
iret
repz
in
jae
inc
inc
shll
movsb
push
mov
push
add
adc
pop
push
ds
mov
mov
mov
xchg
test
xchg
mov
test
mov
movsb
sbb
mov
mov
fisubrl
xchg
in
jl
mov
mov
rcrb
add
xchg
pusha
lret
dec
pop
mov
inc
or
lret
push
out
or
shlb
js
push
daa
mov
mov
inc
mov
xor
ja
xchg
fisubs
test
hlt
mov
sar
pusha
cs
xchg
popf
or
push
xorl
cs
cmpsl
cld
leave
add
in
loope
sub
or
sub
repnz
and
and
push
xchg
dec
add
cmp
sub
movhps
pop
lds
jnp
mov
and
xchg
jne
in
mov
jle
daa
add
fnstsw
lea
jl
and
mov
sub
xchg
jl
dec
push
add
push
gs
mov
fdivrl
fwait
adc
sbb
mov
jbe
enter
loopne
mov
mov
mov
mov
or
das
aas
mov
ljmp
loopne
std
bound
sbb
fbld
das
jae
stos
sahf
rcrb
loopne
mov
int
cwtl
jnp
les
xor
mov
imul
jo
xor
push
xor
xor
lcall
daa
shrl
bnd
jno
sbb
dec
mov
cmp
jle
dec
int3
xchg
jecxz
jl
in
cltd
leave
scas
pop
add
sbb
mov
fisubrs
negl
dec
cld
orl
xor
orl
shr
xorl
shl
adcl
or
movzbl
sbb
mov
mov
mov
and
movl
sub
mov
neg
mov
xor
shr
negl
shl
or
subl
push
lea
sbbl
push
lea
orl
push
call
and
mov
cmpl
jb
jmp
push
push
pushl
pushl
call
mov
xor
shr
shl
or
push
lea
push
mov
sub
mov
shrd
shr
cmpl
jg
xor
add
mov
sub
imul
jmp
push
push
push
call
mov
mov
movl
xor
addl
xor
or
andl
lea
push
shl
movl
call
mov
sbb
mov
sub
xor
shl
adc
shr
or
mov
sub
push
sub
lea
push
orl
mov
inc
mov
incl
shrd
shr
or
mov
mov
sbbl
xor
shl
xor
movl
or
adcl
lea
push
call
and
mov
or
mov
cmpl
jl
mov
and
xorl
jmp
pushl
call
xor
shl
shr
or
addl
jmp
xchg
adc
inc
adc
xchg
popa
aaa
repnz
cmp
adc
addl
jg
mov
jne
inc
lret
shll
jo
xchg
add
pop
sub
test
das
xchg
jp
mov
xchg
jecxz
cmp
mov
sbb
and
jg
dec
mov
mov
mov
cmp
mov
out
sbb
cmp
int
addb
popa
inc
mov
jmp
test
imul
xor
push
fs
in
jne
ret
sbb
pop
loopne
mov
ja
mov
and
mov
cmp
aad
shl
push
adc
mov
xchg
mov
es
push
incb
fstl
xchg
pop
mov
mov
pop
pushf
aam
adc
fcomp
pop
jmp
stos
sub
fcoms
rclb
or
data16
mov
jb
mov
rclb
loopne
stos
dec
mov
jl
jg
jle
xor
mov
call
cmp
push
scas
pop
popa
adc
jae
mov
xchg
jno
sbb
or
push
hlt
outsl
lock
adc
data16
insl
lret
arpl
push
mov
mov
std
lret
and
mov
icebp
jo
dec
xor
dec
mov
xchg
shlb
add
addr16
sub
imul
mov
inc
mov
jbe
in
mov
dec
cli
aaa
and
insl
inc
add
xchg
insb
cmpsb
push
add
mov
adc
adc
push
mov
or
jl
mov
hlt
add
sbb
dec
cmp
cmp
or
test
loope
mov
ljmp
lds
cltd
icebp
movsl
roll
pop
addb
nop
jmp
jno
mov
fucomi
xchg
or
jmp
sub
out
adc
clc
inc
add
pop
pop
pop
daa
mov
lret
push
das
sub
mov
push
push
movsb
pop
pop
inc
test
ss
inc
int3
in
cmp
xor
xchg
jmp
addr16
fcmovnbe
add
and
mov
int
ja
lea
test
jae
fmul
loopne
outsl
push
mov
cmp
lahf
cli
ficoml
in
cmp
repz
into
xor
push
adc
idivb
mov
pop
int
mov
jge
mov
icebp
or
aad
icebp
daa
pop
push
mov
pop
hlt
pop
in
and
test
mov
mov
out
xchg
loope
jp
adc
sbb
int3
dec
add
cmpsb
add
mov
ja
xor
sub
xlat
stos
sbb
and
adc
adc
ret
adc
mov
in
lahf
iret
cltd
lock
sbb
sbbl
dec
sub
mov
repnz
xchg
addr16
and
cmp
dec
mov
adc
pop
push
scas
testb
lock
testl
inc
gs
pop
jae
jl
or
sbb
push
into
imul
jmp
or
push
ret
popf
jecxz
test
cmpsl
inc
negl
lahf
sub
push
test
mov
mov
fadd
out
fwait
iret
js
pop
or
scas
lret
mov
rclb
cld
and
pop
and
sbb
mov
dec
sbb
push
outsl
mov
inc
aaa
pop
jecxz
scas
movsl
pop
rorb
xchg
fisubrl
filds
test
aam
jge
inc
xor
xor
stos
mov
cltd
add
xchg
cwtl
adc
ret
add
ds
pop
orb
and
xor
xchg
ja
pop
mov
lock
cld
xchg
adc
cmp
aas
xchg
jl
mov
outsl
sub
and
dec
lret
dec
fs
add
add
cld
inc
sub
lcall
cmp
pop
push
mov
dec
sub
or
aam
in
ret
ret
mov
stos
adcb
pop
and
fisubrs
fsubl
mov
int
jns
sahf
test
in
js
jle
sbb
add
or
stos
mov
insb
mov
dec
int
cltd
orb
popl
mulb
push
mov
outsl
imul
test
out
push
iret
sub
in
test
fs
sbb
lahf
cli
mov
cld
or
lds
in
insl
jns
and
cmp
imul
fstpt
sbb
out
int3
push
push
ss
or
fwait
into
ret
fdiv
sbb
cld
xchg
fildl
mov
mov
adcb
xor
cwtl
jl
negb
push
cld
rcrb
aam
or
pmullw
xchg
mov
and
sbb
ds
push
cmp
sub
cmp
imull
push
repz
jnp
jge
int
fidivs
push
push
add
mov
adc
pop
int3
hlt
mov
dec
mov
adc
pop
adc
mov
adcb
fdiv
stc
decb
push
aad
mov
ja
cwtl
inc
lds
push
orb
movsb
lret
repnz
outsl
or
xchg
shlb
repz
mov
in
cwtl
mov
pop
and
and
mov
mov
push
adc
jp
sub
sti
aas
cmc
lock
sub
es
loop
jmp
std
daa
mov
or
clc
inc
adc
cmp
rclb
mov
test
add
in
rclb
aas
stc
xchg
iret
adc
hlt
mov
jae
mov
cmp
inc
pop
pop
dec
mov
test
xchg
mov
lahf
clc
cmpsb
enter
ss
cltd
adc
add
push
xchg
add
mov
test
pop
cs
pop
xor
dec
jne
test
jo
imul
out
mov
pop
fstpt
mov
inc
leave
xchg
outsl
push
pop
xor
xchg
stos
addl
imul
xchg
pusha
xchg
idivl
movsb
mov
pop
cs
and
ljmp
shlb
aaa
add
test
int
popa
and
add
adc
mov
mov
testb
lret
dec
push
shll
or
ljmp
xlat
xchg
xchg
mov
stos
adcb
jne
popf
sbb
xor
movsl
xchg
sub
psllw
scas
xor
ret
lods
mov
xchg
xchg
or
lret
pop
int3
adc
iret
mov
cmpsb
jno
hlt
or
lock
popa
clts
out
out
lock
add
cmpl
je
aaa
mov
cld
call
xchg
xor
mov
cmp
or
xor
xor
mov
xor
insb
pop
mov
out
jmp
movsb
sub
and
sarb
xorb
mov
mov
mov
mov
repnz
lods
pop
test
addb
daa
scas
dec
cmp
push
lea
sbb
push
adcl
mov
sub
mov
shrd
and
shr
mov
mov
adc
xor
xor
subl
or
shl
mov
sub
mov
movl
shrd
shr
adcl
mov
mov
xor
jmp
adc
sahf
dec
push
rcrl
bound
jno
mov
enter
sbb
gs
inc
jnp
lock
mov
push
inc
in
add
and
mov
mov
ficoms
sbb
leave
adc
mov
mov
clc
loope
inc
add
adc
clc
adc
cld
addr16
jle
pop
dec
xchg
mov
arpl
jnp
cmpsb
add
push
or
add
idivb
lahf
inc
sbb
jb
inc
mov
cmp
ficomps
cmp
lea
aas
mov
add
mov
cmp
daa
mov
std
add
cmpsb
xor
popf
rcrl
test
sub
jl
adc
popa
test
mov
arpl
jg
xor
in
jb
repnz
mov
sub
adc
jle
ss
test
repz
cmc
inc
add
dec
push
xchg
push
mov
jecxz
jbe
mov
push
in
xor
fdivl
fs
shrb
stos
andb
sbb
xor
cmp
jmp
sahf
cmpsb
inc
aad
iret
dec
mov
fiaddl
fcmove
imul
fbstp
pop
cmpsb
push
pusha
nop
dec
call
sub
arpl
or
push
mov
xchg
fsubrl
mov
dec
mov
sub
inc
enter
cld
push
stc
mov
ss
adc
jg
addl
jg
inc
dec
xor
push
inc
mov
ret
cld
sub
mov
xchg
sbb
popf
xor
aas
imul
add
mov
aaa
pop
xchg
xchg
xor
adc
jmp
out
jns
leave
repnz
mov
mov
cmp
mov
cltd
jp
xor
pop
sub
in
push
je
shrb
cwtl
add
sub
sbb
mov
add
and
arpl
aam
hlt
jge
rcr
aaa
lret
ljmp
jp
cmp
xadd
test
testb
ds
mov
xchg
xor
sbb
jbe
pop
dec
mov
divb
inc
xchg
jp
adc
ja
add
cmpsl
mov
dec
xchg
adc
xchg
cmp
popa
insl
xchg
jnp
into
gs
je
dec
jne
mov
aam
xchg
fidivrl
mov
insl
jno
pop
fistps
mov
jb
icebp
jb
ds
jno
inc
mov
lds
enter
clc
call
mov
jnp
push
mov
ds
add
loop
popa
sub
fistps
sub
xchg
jo
mov
and
aas
popf
inc
sahf
adc
cmpsl
cmp
scas
jo
sub
shl
inc
jbe
push
in
imul
mov
adc
dec
cmp
xor
insl
imul
adc
push
outsb
into
imul
cmp
lds
xchg
or
xor
mov
clc
cmp
inc
outsl
jne
dec
mov
sbb
arpl
mov
ss
pop
inc
mov
ljmp
inc
xlat
push
mov
in
jecxz
cmc
mov
push
ss
or
inc
adc
ss
jmp
call
rorb
cld
sbb
pop
roll
xchg
sub
into
scas
jns
call
outsl
xlat
cmp
and
mov
das
mov
xchg
gs
lods
jmp
movsb
fsubs
jae
xor
das
jns
sub
jle
sahf
test
and
xor
sar
jbe
or
movsb
xlat
test
adc
movsb
jmp
and
jbe
pop
ret
jb
mov
cmpsl
lock
movsb
dec
test
stos
inc
pop
imul
ss
rol
int
mov
dec
pop
icebp
sub
cwtl
push
in
call
jle
and
stc
fnstsw
pop
sahf
inc
sbb
sbb
and
or
jb
fidivrs
rorl
rol
add
push
mov
xor
aaa
orl
hlt
xchg
hlt
aam
add
fldt
fsts
jecxz
shr
adc
arpl
mov
nop
pop
icebp
popf
call
mov
pop
push
subl
mov
test
cmp
push
adc
lcall
dec
insb
and
cmpsl
add
adc
loopne
xchg
dec
or
mov
cmpsl
sub
pop
or
push
ret
and
jge
dec
ja
push
pushf
mov
push
aam
jne
cmp
add
jp
sbb
filds
add
pushf
xchg
push
in
lcall
mov
sbb
jns
inc
ljmp
ficoms
sub
jecxz
outsb
mov
jns
lea
adc
in
popf
push
into
arpl
out
ljmp
and
bound
pop
mov
mov
popf
dec
xor
cmpsb
enter
iret
iret
and
cmp
cmpb
mov
cmp
mov
das
jle
sub
loope
sub
test
aam
out
pushf
lret
cmp
xchg
packssdw
lea
mov
in
outsb
or
push
cmp
punpcklbw
or
inc
ret
mov
sbb
inc
popa
adc
pop
les
cmp
cs
int3
adc
adc
out
dec
push
add
xchg
std
xor
inc
cmp
push
push
rcrb
pop
fistpl
int
push
scas
dec
lods
cmp
xchg
sub
adc
nop
std
arpl
gs
fs
cwtl
mov
into
pop
mov
adc
ljmp
and
outsl
aaa
imul
mul
pop
mov
dec
adc
pop
scas
jne
std
fwait
movsl
lcall
xor
mov
cld
xor
xchg
addl
cmp
cli
hlt
xor
or
leave
mov
cmp
decb
mov
inc
dec
addr16
cld
repnz
cmpsl
repnz
outsl
repz
aad
mov
lret
lret
int3
lea
lods
pop
jne,pt
inc
rol
mov
out
loopne
push
test
xor
pop
inc
inc
insl
fiadds
or
sahf
popf
in
mov
push
imull
lahf
call
in
sub
ljmp
mov
shll
inc
data16
outsl
jp
nop
bound
lods
or
aaa
es
filds
dec
lahf
mov
nop
lods
scas
sarb
imul
jl
in
leave
test
mov
pop
xor
nop
andl
or
mov
shrl
add
imul
add
inc
push
subb
sub
add
adc
ljmp
cwtl
dec
dec
mov
xchg
jmp
push
push
push
dec
or
jae
cwtl
and
add
scas
sub
push
cmp
xor
loopne
cmpsb
pop
inc
pop
and
mov
negl
jle
xor
subl
or
add
lea
adcl
push
xorl
shl
call
mov
cmpl
jg
sub
and
jmp
pushl
push
call
mov
shl
xor
shr
or
push
lea
sub
push
cmpl
jg
xorl
jmp
push
pushl
pushl
push
push
push
call
mov
mov
shrd
shr
mov
mov
sub
xor
mov
adc
shl
mov
mov
mov
sbb
xor
or
mov
and
shrd
adcl
shr
adc
mov
mov
orl
xor
xor
andl
or
cmpl
jg
jmp
call
add
mov
shl
mov
shrd
shr
mov
adcl
mov
xor
xor
sbbl
or
notl
add
lea
push
shl
xorl
call
mov
xorl
mov
cmpl
jg
jmp
push
pushl
call
xor
shr
jmp
notl
notb
sub
xor
fs
cli
adc
scas
adc
bswap
adc
ss
lahf
xchg
out
scas
mov
and
js
lods
add
lods
outsb
movsl
std
ficoml
ror
fucomp
jle
mov
inc
or
popa
xor
xchg
dec
into
addr16
stos
dec
loopne
adc
fstl
repz
sbb
outsb
imul
fnstenv
cmpsb
jbe
or
fldl2e
pushf
outsb
jnp
imul
push
or
negl
pop
and
xor
add
test
dec
sahf
lods
sbb
mov
out
les
dec
clc
push
dec
push
repnz
push
call
es
loopne
in
jecxz
sub
and
mov
test
in
push
mov
pop
lea
jmp
xor
sar
push
fistpl
and
push
aam
sbb
rolb
push
stc
imul
repz
adc
nop
mov
fbstp
in
and
ret
push
int
adc
sbb
clc
cmp
mul
loopne
add
cld
negl
mov
ss
fldcw
cmpsl
jo
test
sbb
cmp
pop
dec
dec
cmc
xchg
push
inc
pop
mov
mov
push
jg
or
add
test
cmp
jg
xor
and
roll
cmpsb
pusha
out
shll
shr
arpl
pop
xchg
gs
jmp
sarl
jmp
fstpl
push
push
mov
xlat
out
dec
cmp
mov
push
or
mov
lea
push
cmpl
ja
and
jmp
push
push
push
pushl
call
mov
mov
shrd
shr
mov
mov
addl
xor
neg
xor
or
push
sbb
mov
movzbl
and
mov
mov
push
orl
pushl
subl
shl
call
lea
xor
add
add
push
add
mov
mov
cmpl
jbe
adc
or
jmp
push
push
push
call
shrd
shr
mov
mov
xor
xor
or
addl
push
adc
mov
push
adcl
pushl
subl
shl
call
cmpl
jge
sbb
jmp
pushl
pushl
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
sbbl
mov
rol
mov
adcl
xor
movl
mov
movl
cmp
movl
je
or
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
push
mov
sub
not
mov
cmpl
jb
jmp
push
call
mov
mov
sub
push
mov
mov
sbb
mov
adc
orl
orl
add
mov
mov
add
mov
cmpl
ja
sbb
inc
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
sub
mov
sbb
mov
cmpl
ja
or
jmp
push
push
push
call
orl
orl
lea
mov
mov
mov
not
mov
sbbl
add
neg
mov
mov
adcl
mov
mov
neg
shrd
cmpl
ja
or
jmp
push
push
push
pushl
push
call
shr
mov
mov
xor
xor
or
cmpl
jb
jmp
pushl
push
push
pushl
pushl
call
mov
movl
movl
movl
movl
movl
movl
xor
movl
movl
mov
add
movl
movl
cmpl
jge
adcl
adcl
jmp
pushl
push
push
call
movl
movl
movl
movl
movl
dec
movl
sbbl
movl
movl
movl
cmpl
ja
xor
add
sub
mov
jmp
push
push
push
call
movl
movl
movl
mov
shl
mov
andl
push
addl
push
push
push
andl
call
xorl
mov
xorl
mov
mov
mov
add
xor
add
mov
mov
sub
sub
mov
sbb
lea
and
mov
cmpl
jg
jmp
pushl
pushl
push
call
mov
or
and
mov
or
xor
cmp
movl
jne
not
mov
mov
shrd
cmpl
jbe
adc
jmp
push
pushl
push
pushl
pushl
call
shr
mov
mov
shl
xor
xor
subl
or
mov
mov
cmp
movl
jne
mov
add
mov
neg
xor
xor
or
sbb
mov
cmpl
jbe
jmp
pushl
call
mov
mov
shrd
mov
mov
xor
shr
cmpl
jbe
xor
jmp
push
push
call
mov
xor
or
shl
sub
mov
andl
mov
mov
add
adc
mov
and
mov
adc
mov
shrd
negl
shr
sub
mov
mov
cmpl
jg
add
jmp
pushl
pushl
pushl
pushl
pushl
call
xor
shl
xor
or
mov
mov
subl
shrd
shr
neg
mov
cmpl
jbe
adcl
jmp
pushl
pushl
pushl
call
mov
mov
xor
xor
or
shl
incl
lea
mov
cmpl
jl
dec
jmp
pushl
call
mov
shrd
shr
mov
mov
mov
adc
xor
cmpl
jbe
and
jmp
call
mov
xor
or
shl
imul
mov
dec
mov
sbbl
shrd
mov
or
mov
xorl
xor
orl
shr
mov
mov
addl
xor
subl
or
shl
sub
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
jb
jmp
pushl
push
call
mov
shrd
mov
mov
xor
shl
xor
or
shr
subl
mov
sub
mov
mov
adcl
mov
subl
shrd
adcl
shr
add
mov
cmpl
jg
sbb
jmp
pushl
push
call
mov
mov
xor
xor
or
shl
orl
imul
addl
sub
jmp
mov
or
mov
mov
cmpl
jl
or
jmp
push
pushl
call
mov
shrd
mov
mov
xor
shl
addl
xor
adcl
or
andl
shr
cmpl
jg
jmp
pushl
push
push
push
call
mov
mov
mov
mov
shrd
shr
mov
cmpl
jg
mov
adc
or
jmp
push
pushl
pushl
pushl
pushl
push
call
mov
mov
xor
xor
or
shl
mov
mov
adc
add
add
xor
xor
adc
mov
mov
xor
add
adc
shrd
or
shr
movzbl
adc
mov
mov
xor
sbbl
shl
xor
movzbl
adc
or
neg
mov
add
movl
mov
mov
sub
imul
mov
cmpl
ja
or
jmp
push
pushl
pushl
pushl
call
mov
movl
mov
movl
mov
movl
adc
mov
xor
mov
cmpl
jbe
jmp
push
push
push
pushl
call
mov
shrd
shr
mov
mov
xor
shl
adcl
xor
or
movzwl
sbb
mov
lea
cmpl
jbe
and
jmp
pushl
push
pushl
pushl
call
mov
mov
mov
shrd
shr
mov
adcl
mov
subl
shl
adc
mov
xor
xor
sbbl
or
sbb
mov
or
mov
xor
cmpl
jl
jmp
push
push
push
call
mov
mov
shrd
shr
mov
mov
xor
shl
xor
adc
or
adcl
lea
mov
or
mov
cmpl
ja
add
jmp
pushl
pushl
push
call
mov
mov
shrd
shr
mov
mov
subl
shl
and
mov
xor
adcl
xor
xorl
or
cmpl
jle
inc
decl
jmp
push
call
mov
mov
or
mov
mov
shrd
notl
shr
mov
sub
mov
xor
addl
shl
addl
xor
sbb
or
lea
mov
mov
addl
mov
shrd
shr
xor
add
mov
sub
xor
mov
mov
addl
xor
shl
adc
mov
xor
addl
or
mov
sbb
mov
or
add
cmpl
jle
sub
negl
jmp
push
push
call
mov
mov
shrd
shr
mov
cmpl
jge
neg
jmp
pushl
push
push
call
mov
xor
xor
or
lea
mov
cmpl
jge
jmp
push
push
push
pushl
push
push
push
pushl
push
pushl
push
push
push
pushl
call
mov
shl
mov
shrd
shr
mov
mov
addl
xor
orl
xor
subl
or
xor
mov
shl
incl
mov
adcl
mov
orl
mov
addl
or
xor
mov
mov
andl
shrd
shl
sbbl
shr
mov
mov
or
xor
mov
xor
orl
or
mov
dec
orl
not
xorl
and
xor
or
xor
mov
xor
and
mov
cmpl
ja
sub
jmp
push
push
push
call
mov
xor
or
mov
mov
shrd
shr
mov
sbb
mov
mov
adc
mov
mov
xor
xor
xor
adc
mov
addl
xor
andl
shl
subl
mov
addl
or
mov
mov
cmp
je
xorl
mov
xor
add
mov
sub
and
sub
cmpl
ja
add
jmp
pushl
push
pushl
push
push
push
call
mov
mov
mov
shl
xor
mov
mov
mov
subl
xor
adcl
xor
sbbl
shrd
shr
xorl
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
xor
xor
mov
sub
xor
push
push
movl
movl
mov
and
movl
movl
mov
mov
and
sbbl
mov
xor
inc
and
and
add
cmpl
jle
xor
sub
jmp
pushl
call
xor
mov
movl
movl
mov
cmpl
jb
xor
jmp
pushl
call
xor
sub
mov
imul
xor
mov
movzbl
sub
mov
div
mov
xor
or
sub
xor
sub
mov
cmpl
jl
sbb
jmp
push
pushl
pushl
call
movl
movl
movl
movl
movl
movl
sbbl
mov
xor
or
adc
mov
sub
imul
xor
add
mov
sub
or
add
or
and
cmpl
jge
xor
xor
mov
and
and
jmp
push
call
sub
mov
sub
add
mov
mov
orl
sub
or
add
cmpl
jg
mov
sbb
mov
adc
jmp
pushl
call
mov
xor
div
xor
mov
xorl
sub
mov
andl
add
sbbl
mov
movl
movl
not
movl
or
mov
sbb
xor
and
add
add
mov
xorl
xor
subl
div
and
mov
or
sub
cmpl
jl
jmp
push
push
push
push
call
mov
movl
movl
movl
movl
mov
mov
orl
xor
cmpl
ja
jmp
pushl
pushl
push
pushl
push
pushl
call
xor
push
pop
div
mov
xor
div
mov
or
cmpl
jle
or
jmp
pushl
push
push
push
push
call
sub
mov
movl
mov
mov
xor
sbbl
div
cmpl
jg
jmp
push
push
call
imul
xor
xor
imul
xor
mov
movl
movl
movl
mov
and
mov
orl
xor
adcl
div
mov
imul
add
xor
and
mov
sbbl
sub
mov
sbbl
movl
mov
mov
sbb
and
xor
and
sub
or
cmpl
ja
jmp
push
pushl
call
xor
mov
movl
movl
movl
mov
and
or
add
xor
add
or
andl
or
dec
sub
cmpl
jg
inc
mov
sub
jmp
pushl
call
mov
movl
movl
movl
and
mov
shr
sub
cmpl
ja
mov
and
jmp
push
push
call
xor
mov
lea
push
call
mov
or
or
mov
add
or
add
and
lea
adc
mov
and
movl
movl
movzwl
adc
movl
sub
movl
mov
sbb
mov
movl
subl
movl
movl
mov
mov
sub
imul
movl
mov
orl
mov
and
sub
mov
lea
adc
mov
mov
cmpl
jbe
sub
adc
jmp
push
push
pushl
pushl
call
mov
mov
imul
and
imul
or
mov
lea
mov
movzbl
xor
movl
movl
movl
and
movl
or
mov
mov
mov
sub
or
mov
mov
andl
xor
xorl
xor
adcl
mov
subl
call
xor
or
or
mov
mov
mov
mov
cmpl
jle
xorl
jmp
pushl
pushl
push
call
mov
xor
xor
mov
call
or
cmpl
jle
jmp
push
push
pushl
call
or
mov
mov
xor
xor
mov
call
or
mov
cmpl
jb
jmp
push
call
mov
mov
mov
xor
xor
mov
mov
addl
mov
mov
mov
andl
call
mov
adcl
or
mov
or
subl
push
adcl
push
andl
push
addl
push
addl
call
mov
mov
cmp
movl
jne
mov
mov
xor
xor
mov
call
xor
mov
mov
sub
mov
adc
mov
addl
xor
xor
andl
mov
call
or
movl
or
add
mov
adc
mov
xorl
xor
xor
mov
adcl
call
sub
mov
mov
xor
mov
mov
mov
sbb
mov
mov
xor
subl
xor
mov
mov
xorl
mov
decl
call
adcl
or
movl
mov
andl
or
push
subl
push
push
addl
push
xorl
call
mov
movl
jmp
jmp
cmpl
jg
add
jmp
push
call
lea
mov
mov
movl
mov
xor
cmpl
ja
jmp
push
call
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
movl
xor
xor
mov
sbbl
call
neg
mov
mov
adcl
mov
xorl
mov
andl
xor
adcl
xor
mov
movl
call
or
and
or
cmpl
jge
orl
movzbl
xor
jmp
push
push
push
call
mov
mov
xor
xor
movl
mov
subl
call
sbb
mov
sub
mov
xorl
mov
mov
subl
xor
subl
xor
mov
mov
mov
mov
incl
mov
call
sbb
mov
addl
or
sub
mov
or
push
subl
push
addl
push
push
sbbl
call
mov
cmp
movl
je
cmpl
jbe
jmp
push
push
call
mov
mov
xor
xor
mov
call
mov
mov
cmpl
ja
jmp
push
pushl
push
call
mov
mov
xor
xor
mov
call
or
or
sbbl
mov
imul
cmpl
jle
not
decl
jmp
push
pushl
push
pushl
push
pushl
call
add
mov
mov
mov
jmp
movl
jmp
cmpl
jb
xorl
jmp
push
call
mov
mov
xor
xor
mov
call
mov
xor
mov
mov
mov
xorl
xor
addl
xor
adcl
mov
call
subl
or
or
adc
mov
mov
xor
adcl
xor
mov
call
adc
mov
cmpl
jb
jmp
pushl
call
mov
mov
mov
xor
xor
mov
mov
mov
orl
call
or
or
mov
or
push
push
negl
push
push
subl
call
movl
mov
jmp
movzbl
adc
mov
mov
and
mov
xor
andl
xor
movl
mov
addl
call
add
mov
mov
mov
mov
sub
mov
cmpl
ja
movl
jmp
pushl
push
call
mov
xor
xor
mov
call
or
or
mov
movl
jmp
mov
cmpl
jl
jmp
pushl
push
push
call
mov
xor
xor
mov
call
mov
mov
sub
mov
xor
or
or
mov
xor
xor
subl
mov
call
xor
or
xorl
or
xor
mov
mov
add
mov
xorl
xor
sbb
mov
sub
sub
sbb
mov
xor
xor
or
xor
movzwl
and
add
cmpl
jge
jmp
push
call
mov
movl
movl
movl
movl
movl
movl
and
movl
xor
movl
cmpl
jl
mov
mov
and
adc
jmp
pushl
pushl
pushl
push
pushl
pushl
push
push
call
mov
add
mov
sub
cmpl
jbe
jmp
push
push
push
push
call
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
dec
or
sbb
mov
cmpl
jg
orl
jmp
pushl
pushl
call
xor
mov
sub
mov
mov
sub
cmpl
jle
xor
jmp
push
push
pushl
call
mov
xor
mov
div
mov
xor
sbbl
div
orl
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
and
sub
push
push
push
mov
pushl
pushl
call
test
je
movl
movl
movl
push
movl
adc
mov
andl
mov
andl
push
addl
push
push
adcl
call
push
subl
push
xorl
and
sbbl
and
push
push
orl
call
xor
xor
and
mov
cmpl
jbe
and
jmp
call
mov
xor
or
mov
xor
or
notl
mov
xorl
movl
movzbl
and
mov
movl
add
movl
movl
sub
movl
adc
movl
cmpl
jb
adcl
jmp
pushl
push
push
push
call
mov
mov
mov
mov
or
mov
or
mov
mov
sbb
mov
adcl
sub
mov
movl
sbb
mov
xor
xor
subl
and
sbbl
and
cmp
movl
jne
movl
cmp
movl
jne
sub
movl
sbbl
movl
adc
movl
cmpl
jl
sbbl
xor
jmp
push
push
pushl
pushl
push
pushl
call
movl
movl
mov
mov
sub
adc
mov
subl
imul
adcl
and
negl
imul
mov
addl
pushl
imul
incl
xor
mov
adc
mov
sbbl
div
xor
mov
adcl
xor
sbb
mov
sub
or
xor
sbbl
pushl
addl
pushl
call
andl
pushl
call
andl
movl
movzbl
sub
movl
cmpl
jge
negl
jmp
pushl
push
push
push
call
movl
movl
movl
movl
mov
mov
sub
mov
mov
add
mov
adc
cmpl
jge
and
jmp
pushl
push
pushl
push
pushl
push
call
mov
add
adc
and
mov
and
orl
mov
movl
decl
movl
addl
movl
xorl
movl
subl
dec
cmp
jne
movzwl
or
movl
mov
xorl
mov
movl
addl
mov
call
xor
lea
mov
mov
sub
sub
mov
lea
adc
mov
mov
cmpl
jbe
jmp
pushl
push
push
call
mov
mov
mov
xor
shl
shr
or
xor
mov
add
mov
or
mov
and
mov
xor
or
xor
or
sub
sub
mov
cmpl
ja
andl
jmp
push
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
subl
xor
sbbl
xor
xorl
or
cmpl
ja
subl
jmp
push
push
pushl
push
pushl
pushl
call
mov
push
pushl
lea
push
shl
call
adcl
lea
subl
push
mov
mov
andl
lea
andl
push
adcl
mov
subl
lea
notl
mov
mov
orl
mov
push
xorl
call
xorl
push
addl
push
pushl
addl
call
mov
cmpl
ja
mov
xor
jmp
push
pushl
push
push
push
push
call
mov
mov
mov
shr
shl
or
mov
mov
sub
sub
mov
xor
xor
mov
or
xor
mov
lea
mov
cmpl
jle
adc
jmp
pushl
push
push
call
lea
mov
mov
sub
lea
xor
sbb
movl
movl
mov
sub
movl
movl
orl
mov
adcl
mov
sub
add
mov
mov
movl
adc
xor
cmpl
jb
and
jmp
push
push
push
call
xor
and
mov
and
mov
movl
movl
movl
movl
sbb
movl
add
movl
andl
mov
sub
mov
adc
mov
cmpl
jl
and
jmp
push
call
mov
push
push
or
or
push
addl
push
xorl
call
mov
negl
mov
sub
mov
movl
sbb
mov
mov
cmp
jne
cmp
je
and
movl
movl
movl
xor
add
mov
sub
xor
movl
mov
mov
sub
xor
mov
mov
mov
cmpl
jb
jmp
pushl
pushl
pushl
push
pushl
call
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
and
movl
sub
movl
cmpl
jl
add
jmp
pushl
call
movl
movl
movl
mov
mov
push
push
xor
adcl
xor
push
push
call
addl
mov
andl
mov
push
push
push
sbbl
push
call
cmpl
jl
subl
jmp
call
mov
mov
push
push
push
push
andl
call
mov
sbb
mov
mov
mov
andl
add
movl
mov
adc
mov
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
addl
xor
adcl
shld
mov
and
shl
mov
mov
sbb
mov
sbbl
xor
subl
xor
mov
movl
cmp
movl
jne
movl
cmp
je
mov
mov
cmp
je
cmpl
jl
sub
jmp
pushl
call
mov
mov
mov
shl
xor
mov
mov
cmpl
jle
and
jmp
pushl
push
push
call
mov
xor
xor
shrd
xor
shr
or
or
mov
movl
mov
movl
cltd
movl
cmp
movl
jne
cmp
movl
jne
movzwl
add
movl
cmpl
jge
mov
add
jmp
push
push
call
movl
mov
mov
mov
xor
orl
shld
adcl
shl
movl
mov
mov
xor
sbbl
xor
mov
cmp
jne
movl
cmp
movl
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
addl
xor
and
shl
ret
xor
xor
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
negl
subl
movl
cmpl
movl
je
cmpl
jbe
xor
jmp
push
pushl
pushl
pushl
push
push
push
pushl
push
push
push
push
pushl
push
call
add
mov
mov
pop
pop
pop
leave
ret
mov
mov
ret
orl
mov
mov
notl
or
mov
movl
jne
mov
sbbl
mul
ret
xorl
push
mul
and
mov
add
mov
mull
add
mov
mul
add
pop
ret
incl
push
mov
sbb
push
mov
andl
or
movl
jne
mov
mov
sub
imul
mov
mov
xor
div
andl
mov
and
mov
movl
div
not
mov
jmp
and
mov
andl
mov
movzbl
xor
mov
cmpl
jge
jmp
pushl
pushl
call
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
