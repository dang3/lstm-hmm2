mov
mov
ret
mov
mov
ret
cmp
movl
jmp
xor
sbb
mov
nopl
jmp
mov
xlat
les
in
mov
in
data16
ljmp
push
aas
inc
adc
rolb
dec
ret
clc
loopne
jmp
jbe
cwtl
lds
and
out
mov
mov
jge
mov
loop
stos
xor
int
popf
inc
idiv
sbbl
out
stos
xchg
pop
cmpsl
cmp
or
sub
jae
adc
dec
ss
mov
jne
lret
push
outsb
aam
jle
mov
cwtl
pop
idivl
addr16
mov
xchg
xchg
cmc
fdivr
mov
popf
push
xor
lods
sub
outsl
xor
shlb
scas
jg
xlat
or
ss
test
incl
xchg
pop
mov
sbb
push
add
stos
xchg
popa
movzbl
loop
cld
shll
iret
into
pushf
pop
ret
dec
pusha
mov
pop
pop
cmp
lret
jmp
pop
mov
pop
pushf
rcrl
imul
sbb
stc
icebp
in
pop
mov
cld
push
xor
mov
mov
shll
sahf
pop
or
scas
std
imul
cmp
and
or
movsl
adc
je
or
pop
test
inc
push
nop
rcr
or
leave
ret
ret
xchg
pop
jae
adc
pop
mov
mov
cmp
dec
stc
cmc
int
sbb
dec
out
icebp
pop
stos
mov
sahf
adc
mov
sub
mov
xor
or
xor
inc
sahf
dec
sti
iret
es
push
pop
repz
adc
movb
ret
fisttpll
push
sbb
rcrb
pop
xor
mov
rcrb
je
cmpb
cmpb
push
sub
adc
lret
shl
loope
jne
pop
mov
arpl
dec
pop
mov
adc
jne
insl
mov
cmp
mov
sbb
sbb
cmp
in
ds
loop
xchg
inc
aad
lret
mov
cmp
cmc
xchg
pop
jl
test
loope
fiadds
cld
sbb
xchg
and
add
xor
in
repz
ja
fisubs
pop
iret
das
btr
sub
xlat
in
out
test
insl
mov
fs
fmul
int3
incl
ret
mov
stc
push
icebp
jecxz
ret
sub
and
xchg
mov
mov
and
pop
xchg
insb
dec
dec
rclb
mov
hlt
mov
add
stos
lret
add
mov
out
sarb
pusha
scas
and
lods
ljmp
lods
pop
shr
movl
jne
mov
pop
clc
out
addr16
mov
pop
push
or
lret
leave
inc
xchg
pushf
push
xchg
stc
dec
cmp
fbstp
dec
xor
inc
cwtl
sub
mov
push
adc
cmp
in
jle
insl
jbe
xor
xor
repz
faddl
inc
shl
xchg
fistpl
xchg
sahf
adc
and
cmp
rcr
in
mov
lods
jo
mov
xchg
jmp
sbb
pusha
cmp
out
addr16
xchg
sbb
fildl
add
mov
ds
push
clc
loope
push
imul
adc
mov
xchg
dec
pop
mulb
jge
mov
andps
fstl
cmp
pop
sbb
js
lea
add
lods
inc
in
sbb
jo
jle
imul
test
mov
mov
mov
sub
mov
adc
sub
pushf
fldenv
js
jae
cmc
imul
imul
jo
jp
mov
xor
icebp
test
or
sub
pop
mov
ret
pop
stos
push
or
cmp
outsb
pop
rorl
add
pushf
cs
inc
test
push
cmp
xchg
xlat
or
popa
mov
aam
and
inc
dec
xchg
jge
js
mov
cmpsb
cmp
test
arpl
cmc
jo
pop
sbb
lds
mov
rorl
lods
lret
dec
das
mov
push
popf
jnp
cmp
dec
outsb
shlb
das
cs
sbb
fcompl
shll
out
push
ret
pop
xchg
inc
aaa
pop
pusha
xor
mov
stc
sub
mov
cmpsl
push
lods
pop
push
popf
inc
sbb
push
addr16
inc
cmp
les
lcall
mov
mov
in
fnstenv
nop
leave
cld
mov
shl
lock
in
stc
add
je
fucomip
dec
mov
test
enter
push
scas
jae
mov
cmp
or
inc
adc
scas
es
dec
sbb
dec
mov
mov
outsb
daa
ficoml
add
dec
lahf
add
test
push
mov
out
dec
xchg
ret
jl
jne
in
jecxz
test
int
popa
jg
roll
xor
test
es
mov
mull
sbb
stos
leave
fiadds
fldt
mov
in
imul
xchg
nop
nop
dec
inc
cmp
std
cmp
cwtl
pusha
cmp
lods
mov
inc
sub
cmp
jae
adc
fwait
ret
aas
mov
sbbl
popf
aaa
or
and
lret
cs
gs
push
cwtl
push
inc
mov
movsb
sar
stos
bound
imul
push
push
fmuls
aas
sbb
pusha
fs
jl
and
fsubrl
mov
and
and
in
cwtl
cmp
push
stc
je
pop
mov
aam
xchg
jle
cwtl
jg
xlat
xchg
aad
mov
icebp
xor
repnz
add
push
jne
fisubl
xlat
add
dec
lret
lret
ficomps
pusha
jmp
into
and
sub
add
cmp
push
xor
adc
bound
inc
or
bound
arpl
pop
out
ret
sub
inc
imul
pop
icebp
cmpsl
or
mov
adc
jo
leave
inc
pop
xor
inc
mov
pop
arpl
test
sti
mov
imul
xchg
sbb
rcrl
push
sbb
mov
jmp
jbe
in
cltd
dec
mov
xchg
imul
push
xor
add
mov
jno
sbb
clc
je
call
lea
mov
adcl
dec
cmpsl
jo
jns
pop
xor
scas
js
pusha
iret
mov
mov
sbb
test
lret
test
test
jae
movl
cmp
movl
jae
adcl
shrd
shr
ret
inc
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
movl
movl
movl
movl
movl
jmp
cld
xor
test
mov
mov
push
add
sysexit
push
ljmp
sbb
das
xchg
lahf
push
lds
jns
mov
jae
jl
pop
ljmp
cltd
es
add
inc
imul
clc
adc
jne
mov
push
hlt
sbb
jecxz
xor
adc
leave
sub
rcrb
in
lret
pop
pop
out
test
je
aas
dec
cli
lods
dec
in
loop
adc
xchg
sub
xchg
push
push
pop
out
rclb
popf
or
scas
int
pushf
mov
in
dec
dec
cltd
sub
mov
lea
inc
addr16
pop
and
in
xor
ja
and
imul
jle
cltd
repz
lods
jae
push
mov
fdivr
cmp
xchg
in
lock
data16
fucomp
xchg
popa
sbbl
mov
jbe
push
sbb
mov
dec
roll
fmuls
dec
in
and
and
sub
mov
in
inc
lcall
pop
sahf
and
and
cmp
jb
ds
test
jbe
imul
test
lea
adc
jnp
sbb
gs
push
test
jecxz
jbe
sarb
gs
rclb
mov
aam
lea
mov
push
mov
mov
les
sbb
jo
neg
jp
outsl
insl
inc
xor
xchg
sbb
jne
stos
incl
push
inc
loopne
dec
sbb
jno
pop
push
xor
out
sbb
dec
fdivrs
mov
fs
and
pop
cmp
je
dec
std
popa
jle
lods
push
sbb
or
out
test
cltd
fistps
pop
dec
cld
mov
or
aaa
mov
or
xchg
mov
stos
add
stos
mov
jl
subl
dec
mov
adc
push
jb
adc
and
mov
out
out
aam
cwtl
aaa
js
fisubs
aas
sbbb
jo
sbb
outsl
and
cmpl
xchg
cld
lods
stos
outsl
roll
dec
mov
xchg
lcall
jge
cmp
sub
mov
sbb
mov
nop
cmp
dec
lods
dec
xchg
loope
roll
sub
pop
mov
daa
call
insl
ret
mov
into
sti
xchg
test
add
call
orl
in
aaa
jb
and
sub
inc
adc
test
addr16
sbb
testb
mov
pop
aad
fcmovu
call
dec
pop
jp
daa
mov
adc
xchg
daa
ds
dec
mov
cmp
lcall
loopne
dec
xchg
leave
scas
dec
out
das
pop
stc
push
xchg
mov
push
call
jae
daa
jne
inc
aas
aam
cltd
cmp
mov
scas
lret
or
pop
lds
mov
mov
xor
mov
push
jle
clc
cmpl
lods
mov
bndldx
mov
add
filds
mov
neg
sbb
and
cmp
push
pop
push
inc
shl
or
gs
jge
in
fsubrp
frstor
adc
js
push
push
mov
or
imul
xor
scas
jle
sub
add
pop
mov
sbb
ja
sub
ss
sbb
sbb
dec
rep
sub
fucomp
into
xchg
sub
sbb
in
shr
pop
push
xorb
jb
ss
fwait
mov
adc
cs
push
xchg
ret
jne
mov
pop
out
fmull
ficomps
mov
pop
dec
mulb
push
jne
es
mov
arpl
out
push
fdivr
sbb
int3
sub
stos
cmp
shll
in
sti
jns
mov
stos
setno
ss
fsubr
mov
sbb
xor
fadds
mov
aam
fidivl
gs
fildll
mov
icebp
xor
mov
add
dec
jle
dec
test
mov
frstor
lea
lock
jl
jg
loope
stos
sbb
adc
faddl
inc
outsl
xor
std
push
sbb
sub
popa
imul
dec
pushl
pop
loope
loope
jno
inc
dec
push
adc
fldt
mov
shll
add
inc
into
mov
push
mov
pusha
mov
subb
pop
sti
lahf
in
xorb
in
fs
fs
lret
add
pop
fisubl
cmp
xlat
ja
add
mov
mov
mov
cmp
xchg
cmpsl
mov
and
popa
out
in
pop
pop
imul
cmpb
sub
divb
jp
andl
test
sub
repnz
cmp
outsl
sbb
nop
lcall
int3
sbb
jg
mov
movsb
mov
pop
add
cmc
fld
outsl
inc
jae
push
mov
adc
addr16
cmp
and
rcr
lcall
add
sub
push
in
arpl
mov
inc
test
xorb
outsb
into
fcoml
dec
stos
es
jbe
and
dec
call
out
mov
ds
out
nop
aas
mov
loop
adc
sbb
js
cmp
jmp
sbb
dec
rolb
sbb
jbe
adc
pop
xchg
movsb
aaa
addr16
cltd
in
ja
pop
inc
mov
mov
fwait
jp
add
add
inc
ds
out
xchg
in
hlt
iret
sub
movl
movl
movl
movl
jmp
lds
mov
inc
xchg
inc
inc
das
ljmp
loope
pinsrw
push
ret
push
inc
mov
leave
mov
ljmp
repz
add
jo
lahf
add
adc
xchg
ljmp
das
sbb
inc
push
fiaddl
subb
xchg
pusha
sub
inc
pop
add
mov
data16
adc
lret
mov
negl
push
test
or
push
cwtl
lods
mov
and
push
lds
mov
mov
dec
arpl
jae
pop
dec
ror
stos
dec
cmpsb
pop
lods
out
cli
sub
mov
xchg
scas
ljmp
cwtl
pop
mov
call
rorl
or
mov
dec
popa
ret
pop
and
push
lret
fs
jbe
in
enter
inc
add
dec
sub
mov
mov
push
cmp
outsl
fsubr
out
jp
mov
mov
dec
adc
insb
mov
or
cli
add
sub
inc
test
sub
loop
push
into
mov
jo
or
adc
call
mov
jb
daa
adc
jp
or
leave
sbb
loope
sub
or
je
in
inc
ja
mov
mov
leave
fldl
ss
dec
or
push
jmp
and
aaa
jge
push
mov
std
push
test
in
jbe
inc
pop
shll
lahf
dec
mov
sbb
or
push
jmp
lret
outsl
mov
add
sbb
xchg
mov
aas
movb
mov
rorl
lods
icebp
push
fs
jnp
aam
add
lcall
loop
or
cltd
dec
pop
adc
and
ds
jecxz
shl
or
sub
adc
sbb
bnd
inc
lahf
fbstp
xor
out
fistpl
mov
std
js
jne
leave
jns
xchg
or
fwait
enter
inc
push
dec
inc
iret
mov
pop
in
in
jmp
xchg
mov
lahf
or
aam
gs
xor
jo
mov
mov
dec
mov
imul
sub
cmp
pusha
and
test
pop
jae
in
adc
push
dec
mov
in
movsb
cmp
fnsave
dec
and
into
test
fstl
sbb
rclb
aas
repz
sbb
sbb
orb
xchg
dec
out
mov
push
popl
mov
sti
int
and
inc
aam
inc
and
inc
mov
shll
xchg
aaa
int
mov
inc
hlt
cmp
fadds
jmp
arpl
aam
ret
add
ficompl
inc
add
outsb
mov
subl
dec
pop
xlat
ficomps
or
mov
add
rcll
xchg
pop
dec
jg
movsl
sub
push
stos
icebp
and
mov
mov
mov
loop
mov
add
mov
fisubrs
dec
sub
inc
push
idivl
int
dec
lret
subb
xor
loope
xor
sarb
xchg
xchg
lock
jne
popf
and
xchg
out
mov
dec
xor
dec
incl
sahf
cmp
mov
scas
and
xchg
dec
test
fwait
mov
mov
push
test
sarl
inc
js
aas
mov
inc
bound
test
das
inc
in
mov
sub
stos
sar
push
sub
pop
jo
and
mov
xlat
sub
sub
incb
cltd
jl
daa
loop
mov
nop
push
xchg
ss
out
cmpsb
insl
stc
mov
daa
sub
lret
dec
pop
or
jo
dec
sub
sub
inc
pop
inc
in
scas
call
lahf
mov
int
adc
push
mov
pop
jge
inc
mov
sar
imul
int3
shll
rcr
adc
inc
sbb
icebp
mov
lods
pop
movsl
int3
xor
cltd
cmpsb
cmp
fcomps
jle
cmp
decb
shlb
rcrl
add
popf
xchg
arpl
xchg
pop
add
fsubrp
or
dec
mov
mov
inc
cltd
jo
xchg
divb
das
repz
movsb
pusha
outsl
sahf
adc
jge
movsl
dec
push
das
scas
push
jp
pop
push
sub
dec
mov
xchg
in
test
pop
xchg
sub
bswap
cld
or
scas
cmpsl
mov
mov
and
sbb
addb
add
pop
inc
mov
xchg
mov
nop
dec
jb
dec
xlat
fisttps
movsb
mov
std
inc
mov
cmp
pop
adc
and
pop
xor
jmp
sub
fidivl
push
sub
mov
fstp
into
fstpt
dec
xchg
imul
jb
inc
stos
test
cmp
mov
negb
adc
iret
mov
push
mov
mov
icebp
cmpl
imul
in
cmp
pop
in
fimuls
mov
mov
dec
shr
and
or
rcll
dec
cmp
aas
nop
or
push
xor
movsb
dec
fidivrl
dec
cmp
cli
out
mov
dec
cmpl
push
test
xor
sub
jl
sub
hlt
or
mov
push
adc
mull
mov
movsl
sub
rorb
cmpsb
jecxz
outsb
inc
ljmp
adc
cs
push
notl
xchg
pushf
lret
inc
movsl
mov
rcr
in
cmpsl
shlb
mov
ss
aaa
cld
pop
sbb
div
rol
jb
push
mov
mov
or
inc
jp
mov
sti
movl
movl
mov
mov
jmp
pop
inc
sti
and
jbe
pop
js
xchg
fmuls
fimuls
pinsrw
nopl
push
inc
xchg
add
incb
mov
or
and
ret
in
pop
jno
push
outsl
jmp
movsl
cld
mov
sbb
dec
push
adc
pop
xchg
xchg
shrl
dec
rol
and
dec
jb
jg
enter
jno
int3
add
iret
cwtl
jp
sub
jl
push
ret
lock
sti
cwtl
leave
xor
xchg
pusha
aad
stos
sub
lcall
jg
pop
stos
mov
imull
jbe
repnz
dec
jl
push
fs
pusha
adc
not
jmp
push
sub
nop
repnz
xchg
jmp
pop
aas
fistl
je
cs
push
daa
loope
push
or
cwtl
ljmp
stos
pop
mov
leave
sbb
pop
inc
mov
sahf
xor
movsl
cmp
bound
or
das
hlt
popf
lahf
push
adc
les
push
jo
fwait
in
add
movsl
sahf
push
adc
stc
fwait
outsb
push
push
cmp
in
cmp
sbb
jnp
pusha
push
aas
cmp
mov
inc
icebp
xchg
in
lahf
sarb
call
and
in
nop
and
fs
add
ret
inc
xor
dec
ljmp
rorb
or
and
inc
orb
adc
dec
mov
pop
enter
subl
lahf
xchg
pop
loope
imul
sbb
push
xor
inc
cli
sub
fidivl
or
insb
popf
lds
push
test
sbb
stos
mov
scas
addr16
ss
inc
xlat
fildl
int3
sub
sahf
ds
ja
popa
fisttpll
enter
ja
mov
rcrb
fwait
adc
rcll
outsb
es
cwtl
push
sub
pusha
pop
push
loop
mov
or
rcl
push
pop
inc
xchg
movsb
call
fisubl
jo
adcb
ror
orl
jae
les
cmp
jge
in
mov
push
mov
jle
and
add
push
in
inc
sbb
jbe
sub
and
ja
mov
jmp
adc
xchg
sti
pop
sbb
pop
pop
cmp
dec
mov
stc
xchg
cwtl
pop
or
aaa
shl
add
iret
cmp
or
jne
fld
in
inc
clc
daa
cmp
test
addb
mov
shll
adc
loopne
mov
cmpsb
cmpsl
xchg
add
popf
int3
nop
inc
sbb
sub
call
push
pop
fwait
outsl
adc
mov
sahf
push
loopne
arpl
pop
push
pmullw
inc
or
sbb
arpl
cwtl
inc
sub
mov
scas
jp
dec
sub
in
insb
mov
push
cmp
or
ds
loope
in
outsb
cmpsb
inc
sub
retw
xchg
or
aad
gs
sbbl
out
aam
fsub
xor
push
xor
hlt
and
push
fnstsw
ds
fisubrl
xchg
aam
jns
adc
mov
or
jo
jnp
frstor
mov
or
mov
xchg
xchg
mov
iret
xchg
outsb
nop
xor
lret
sub
mov
lods
mov
pop
xchg
adcl
and
add
push
sub
sbb
sbb
out
cmp
movsb
lret
and
scas
fisubs
jg
inc
js
mov
int3
mov
inc
jo
fidivl
jp
xchg
dec
inc
inc
dec
mov
nop
int
dec
mov
jb
jmp
les
mov
or
movsb
pop
stos
dec
push
pop
add
in
adc
jmp
pop
sahf
jge
popf
aas
mov
push
jno
mov
mov
lcall
mov
aad
shlb
dec
push
xchg
cs
inc
inc
imul
add
xor
jp
fisttpll
inc
push
and
pop
movsb
cmpsb
pop
mov
loopne
test
fucompp
mov
jb
push
jbe
xchg
lea
es
hlt
jle
fisttpl
jmp
xor
xor
jecxz
xorb
arpl
cmpsl
js
or
insl
pop
enter
fldl
lds
outsl
out
inc
test
js
xlat
adc
daa
ja
loope
inc
push
cld
adc
out
cmp
mov
jo
push
ficomps
adc
mov
pop
lcall
loope
pop
sti
aaa
sub
flds
xchg
fwait
ret
setno
aaa
jb
adc
jge
push
jns
clc
aas
pushf
adc
aaa
pop
sbb
test
insb
pop
test
jl
dec
push
outsl
jmp
movsb
mov
dec
cli
stos
push
jmp
add
pop
push
sbb
mov
mov
pop
das
popf
daa
dec
push
push
fldl
sbb
lods
mov
or
fistpll
mov
lcall
adc
js
jno
nop
aam
fsubrp
imul
sub
inc
lods
inc
xchg
mov
out
cltd
lds
xor
push
push
mov
xchg
lret
in
call
adc
shlb
mov
push
pop
push
outsl
adc
mov
idivb
sub
push
les
xchg
jb
imul
jmp
dec
mov
inc
pushf
dec
cmc
add
movsb
shrb
mov
pop
out
push
adc
popf
sub
fnsave
and
out
mov
jb
and
sbb
mull
mov
pushf
jns
lcall
fsubs
int
jne
imul
out
xor
dec
mov
mov
scas
dec
nop
sarb
shr
fdivs
push
bound
stos
adc
sub
mov
and
xor
imul
mov
push
sub
push
movl
jmp
ljmp
stos
lea
jbe
xchg
std
adc
cmp
pinsrw
cpuid
jle
sub
outsl
scas
daa
and
or
xchg
lahf
int3
fildl
fnstsw
jno
mov
aad
stos
lea
push
popa
pushf
xchg
stos
mov
pop
jg
or
jge
push
dec
movsb
sub
push
mov
aaa
leave
xor
sahf
mov
sbb
mov
sbb
cltd
lcall
insl
in
jmp
and
hlt
and
lock
lock
jge
xchg
int3
lret
int
xchg
lds
cltd
push
scas
cmp
push
out
cwtl
or
mov
and
mov
pop
pop
scas
add
adc
stos
shrl
cmpsl
fldl
clc
sbb
jne
in
outsb
popa
push
mov
push
inc
push
fisttps
int3
jb
lds
push
push
inc
xor
sbb
jmp
jb
pop
cmc
or
mov
sbb
aas
and
push
fisttpll
and
addl
leave
in
sub
pop
in
jle
mov
lock
aaa
xchg
xchg
sub
and
xchg
dec
pop
leave
jp
xchg
lods
sbbb
dec
xor
bound
loop
xor
btc
ret
mov
lahf
rolb
jp
cmp
inc
insl
pop
aas
adc
loopne
push
sbb
mov
sbb
push
lds
push
leave
mov
loopne
fidivrs
in
mov
std
aas
es
jbe
in
je
vpaddb
lret
or
jp
loope
into
and
mov
loope
in
ret
pusha
xlat
jo
loopne
cmc
testl
xchg
pop
push
jp
mov
ss
int3
aad
or
mov
dec
dec
fnstsw
inc
sub
xchg
mov
and
mov
out
scas
inc
mov
xchg
or
push
sbb
mov
inc
cmc
adc
pusha
push
movl
adc
scas
dec
push
cmp
push
cli
pop
push
mov
leave
mov
mov
sbbb
push
mov
jo
stos
sub
lea
sub
dec
mov
fimuls
dec
aad
jns
or
jnp
xchg
mov
dec
sbb
add
fs
cmp
sub
pshufw
in
movsl
aad
sub
movsl
lret
push
in
pop
inc
cmc
mov
pop
fadd
scas
dec
jo
mov
push
jecxz
push
add
rclb
mov
add
sar
adc
pop
or
fistl
mov
in
aaa
adc
outsl
or
xchg
aam
test
jbe
bound
jp
ds
imull
mov
jb
test
sub
inc
mov
xchg
ret
test
xchg
push
inc
xchg
xchg
and
jbe
jbe
xchg
and
cli
shlb
pop
dec
cmpsl
pop
pop
fnstsw
scas
dec
xor
pop
xor
mov
xorb
int3
mov
pop
outsl
or
outsl
stc
stos
and
outsl
or
and
enter
sub
adc
aad
xchg
sbb
imul
mov
jmp
inc
xchg
out
les
push
mov
loope
xchg
mov
mov
addb
mov
fmuls
mov
cmp
adc
jecxz
cs
adc
pop
ja
push
xor
sahf
or
jbe
cli
jmp
or
adc
mov
stc
clc
or
imul
xchg
sub
sub
pop
addb
repz
cld
mov
mov
lods
pop
push
xchg
dec
icebp
clc
das
xor
int
outsb
push
dec
ficomps
je
lock
pop
xor
xor
pop
push
out
mov
in
fisttpl
cmp
lret
cmp
popf
leave
test
ret
jae
xor
stc
aam
push
imul
add
pop
cltd
push
adc
cmp
fimuls
adc
icebp
add
or
mov
inc
pop
lods
push
stos
adc
mov
or
repz
pop
gs
add
enter
nop
scas
sbb
push
sti
dec
sub
pslld
imul
sbb
sub
insl
in
cmp
lea
sub
mov
and
cmp
xor
fistpll
add
or
lds
sub
les
int3
xchg
dec
call
lcall
pop
mov
cmpb
sti
adc
jbe
push
stc
inc
outsb
adc
gs
jp
add
dec
insl
pop
xchg
movsb
mov
popf
pop
sbb
or
adc
xchg
push
ret
shl
push
std
mov
rorb
push
sbb
loop
lret
jmp
and
cmpsb
fdivs
mov
cmp
xchg
into
std
cmpsl
ds
dec
mov
loopne
jno
lock
in
pop
xchg
jmp
jecxz
subl
inc
mov
ret
scas
mov
sbb
adc
or
mov
shlb
adc
inc
xchg
loop
jae
jno
sbb
and
les
jb
cmpsb
aaa
cmp
mul
xor
daa
mov
arpl
stos
and
ds
insb
insl
dec
push
pop
push
xchg
bts
or
mov
mov
cld
jg
xor
pop
aas
dec
outsb
add
fstps
jmp
ds
and
sbb
mov
mov
pop
lea
cltd
mov
adc
add
jne
rorb
fistl
repz
add
movsb
add
adc
fcoms
aas
xchg
jg
fists
xor
mov
xor
push
daa
mov
fnstsw
xor
push
fwait
call
js
push
xlat
fisttps
add
sbb
rcrb
push
shrl
hlt
inc
sbb
add
inc
in
sahf
add
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
jmp
xchg
mov
imul
dec
mov
les
maskmovq
shll
std
or
loop
xchg
cmpsb
jp
xor
pop
mov
dec
push
and
jmp
cmp
adc
add
xchg
xchg
stos
pop
mov
shrl
jne
mov
jp
mov
jl
cli
jbe
popa
mov
out
pop
dec
xchg
sub
out
and
shlb
adc
leave
daa
gs
psraw
mov
iret
and
nop
push
xchg
lret
idiv
mov
adc
in
sub
add
aas
xorl
nop
decl
jl
add
inc
jb
adc
adcl
inc
inc
lea
cwtl
mov
mov
fwait
cld
xlat
push
sub
push
or
notl
test
or
inc
jecxz
cli
jb
pop
and
jae
std
sbb
leave
sahf
mov
nop
mov
stos
fisttpl
insb
cmp
loop
jns
out
lret
add
pop
jle
divl
pop
rorb
out
ror
aaa
fbld
add
test
iret
dec
ds
sub
mov
out
pop
xchg
jnp
test
sar
pop
inc
mov
insb
inc
push
inc
das
cmp
jle
test
mov
mov
cmpsb
xor
xchg
clc
xchg
jo
hlt
outsb
mov
int
mov
fcoml
cmp
push
dec
xlat
clc
daa
adc
xchg
jle
xchg
lret
cwtl
adc
enter
in
mov
mov
mov
jge
test
mov
inc
aam
push
sub
xchg
adc
imul
pop
test
inc
test
fdivl
dec
jno
or
push
fwait
jne
rclb
jo
inc
push
sbb
sbb
push
aas
or
xchg
orb
fmull
xchg
push
mov
sbb
shl
cld
pushf
add
cwtl
out
dec
add
test
fsub
inc
lds
je
jle
mov
inc
repz
fdivl
shll
cmpsl
cmp
jle
das
popf
adc
ljmp
inc
push
cmp
out
or
jg
and
cmp
cmp
sbb
inc
xor
int
aas
inc
je
pop
sub
out
lret
pop
mov
cltd
jbe
test
mov
out
and
rcll
jg
push
test
je
jnp
loopne
ljmp
mov
xor
movl
rolb
lea
cli
add
daa
push
loope
dec
notb
out
or
cmp
xor
pop
sub
insb
adc
cmp
ds
mov
or
ds
pop
jge
mov
dec
jno
or
xchg
cmp
push
scas
shr
sbb
mov
ds
das
cmp
push
sub
mov
jg
lret
mov
lret
adc
addr16
rorl
shrl
shrb
test
mov
push
aad
addb
out
mov
lahf
mulb
cmp
out
jmp
pop
xchg
mov
test
das
and
or
xchg
jmp
push
ja
imul
xor
roll
jl
and
adc
testl
in
jecxz
jle
xor
push
test
fucomp
cmc
pop
dec
pop
fdivs
sub
cmovnp
adc
cmc
inc
adc
and
pop
push
pop
fnstcw
pop
inc
in
adc
mov
jl
adc
rcrl
dec
adc
dec
or
sub
jo
dec
aaa
mov
jmp
push
inc
cld
jno
or
mov
or
sbb
pop
jno
dec
aas
adc
incb
lret
xchg
mov
shll
aas
loopne
pop
lahf
pop
loopne
inc
ret
mov
xor
mov
jae
xchg
mov
sbb
scas
push
lock
lret
nop
cmpsl
dec
mov
hlt
aas
mov
sti
mov
out
lcall
shlb
xor
xor
jno
pop
cmp
dec
out
sub
jno
repz
arpl
xchg
dec
sub
insb
dec
adc
mov
and
cmc
mov
xchg
and
pop
movsb
sahf
cs
xchg
lahf
cli
vorpd
xor
push
inc
add
mov
pop
hlt
and
rcrl
jmp
pop
stos
mov
test
popa
loope
sbb
jmp
cmp
jne
mov
call
insl
stc
iret
xchg
jo
cmp
adc
cmp
mov
inc
pop
jns
lret
sbb
jp
mov
data16
aas
movsb
out
mov
push
inc
sti
out
out
dec
sub
inc
clc
add
int
filds
xchg
pop
xor
mov
cmpsl
xlat
mov
rcll
mov
popa
pusha
dec
add
mov
or
dec
je
jne
inc
int3
push
cld
mov
xor
push
push
lcall
xchg
sbb
cltd
push
sbb
add
cmp
addr16
or
daa
roll
fimuls
and
mov
pop
mov
and
loop
les
decb
push
cmpl
loope
rorl
repz
repz
or
and
mov
or
mov
and
mov
dec
mov
adc
je
cli
add
stos
aam
lods
insb
stos
fiaddl
fidivrs
pop
test
xchg
add
movsl
or
jle
aad
push
movb
es
pop
add
mov
sbb
inc
mov
add
ret
loopne
scas
ret
add
ss
inc
fmull
ret
aam
jne
or
xor
div
mov
jmp
push
fadds
sub
push
and
cmp
dec
xchg
hlt
xchg
les
shld
adc
add
outsl
and
jnp
push
push
jae
xchg
stos
adc
cmp
sub
scas
pop
mov
mov
xor
mov
fisubs
dec
cmpsl
ljmp
xchg
pushf
loope
in
jl
fisttps
repz
movl
das
je
mov
shrb
rcr
lods
out
cmp
cmp
mov
sbb
xorb
jae
add
enter
mov
and
push
mov
lea
mov
or
mov
push
pop
je
xchg
jl
add
ss
cwtl
pop
cmp
xchg
jbe
cltd
into
cmc
mov
jl
fsubr
xor
pop
mov
pop
push
push
enter
out
mov
insl
or
or
push
sub
sar
or
ja
xchg
loope
or
lahf
arpl
cmp
and
jecxz
jg
jae
lock
out
mov
lock
shll
jno
imul
push
inc
repnz
jmp
addr16
add
lret
pop
fldl
xchg
in
cmp
lods
cmpsb
sbbl
and
cmp
enter
in
and
sub
jne
or
mov
jbe
inc
fisubrl
or
stos
and
data16
dec
loope
arpl
bound
mov
xchg
jge
mov
lcall
out
popa
jecxz
xchg
shrl
gs
popf
jae
leave
lea
xor
add
xor
rorl
jbe
cs
fcoms
repnz
pop
jnp
aam
cmc
mov
dec
mov
add
xlat
decl
je
lods
ljmp
ja
orl
notb
adc
ss
push
inc
lea
pusha
xor
mov
push
pop
dec
fcmovbe
and
sub
jmp
jecxz
imul
xchg
jbe
mov
sti
xchg
pushf
flds
xlat
es
xchg
lahf
leave
cmp
xchg
pushf
sub
sarb
mov
inc
outsb
lret
xor
movsb
and
in
jae
call
fidivrs
cli
dec
dec
enter
cmpl
cmp
mov
cs
fcmovbe
mov
jae
mov
and
mov
popa
push
jae
enter
sbb
and
repz
jo
add
imul
lcall
sub
out
adc
ret
or
sub
je
fisttpll
add
sub
xchg
test
rorl
repnz
add
mov
cs
jge
xor
cli
addr16
jecxz
sub
cmp
xor
sub
shll
add
mov
loope
pop
add
fcoml
jmp
mov
inc
cmp
cwtl
or
push
sahf
shl
xor
push
adc
push
xchg
lea
pop
outsl
mov
or
ret
cmp
xchg
arpl
ret
or
nop
ds
call
sub
addr16
jnp
cmc
jo
jmp
add
or
jno
ja
aas
add
in
push
lock
jb
jge
stc
mov
lcall
push
fisttpl
adc
jl
mov
in
shll
popl
shr
jmp
iret
mov
jge
xchg
les
jmp
xchg
mov
dec
hlt
sub
adc
push
pushf
pop
cmp
fdivl
insl
ror
in
cs
aam
or
sbbl
cmpsl
mov
aaa
cld
sub
sahf
xlat
ss
add
ss
ret
xchg
lcall
mov
dec
mov
data16
call
add
mov
aas
push
xchg
fisubrl
and
xor
mov
push
sbb
inc
and
push
imul
cmpsb
sahf
inc
into
xlat
js
ljmp
jg
iret
mov
lret
add
inc
xchg
mov
xchg
adc
arpl
fisttpl
mov
bound
xor
sub
inc
mov
dec
add
cmp
ja
flds
adcl
push
gs
add
cld
sub
fmuls
shr
push
dec
lods
into
std
addr16
or
scas
fcomps
and
mov
mov
mov
pop
fists
insl
mov
jle
dec
adc
cltd
popa
mov
adcl
dec
out
push
les
cmc
out
movsb
mov
jl
xchg
push
mov
lods
mov
divl
sahf
decl
mov
jns
mov
pop
add
stc
iret
int3
pop
fistpl
into
andb
dec
or
jecxz
nop
mov
or
or
mov
lahf
lock
xlat
lahf
add
xchg
daa
jle
dec
inc
dec
jo
xchg
daa
inc
into
std
add
inc
lcall
cli
jne
and
adc
push
js
in
fisubrl
pop
out
mov
out
shll
arpl
add
push
es
cmp
push
in
xchg
cli
int
jg
cmp
jno
pop
add
sub
adc
test
and
or
jnp
into
push
inc
fildl
jecxz
push
xlat
hlt
jne
sbb
sbb
wrmsr
stos
adc
sbb
call
inc
testl
shld
and
test
sub
jo
stos
loop
je
mov
ret
dec
add
cmp
jb
movl
movl
movl
movl
jmp
xorb
ret
xor
xor
sbb
test
pinsrw
stos
cmp
jecxz
cmpsl
or
push
dec
push
mov
icebp
mov
push
push
or
test
mov
aam
fstpt
fmull
filds
in
sub
test
fwait
sub
repz
cmp
stos
dec
pop
fwait
js
jno
and
lods
into
push
cmp
out
mov
gs
xor
push
loopne
dec
ds
pop
test
or
dec
cmp
fistl
push
jge
cmc
pop
mov
jne
es
inc
push
pop
inc
sbb
mov
es
push
bound
jle
and
shl
in
sbb
rcl
and
je
pop
ja
mov
repz
test
outsl
jne
add
out
pop
sbb
dec
mov
sub
mov
idivl
les
lret
mov
xor
jo
or
inc
jnp
push
cld
lds
pop
in
and
push
xor
xchg
adc
or
subl
mov
mov
std
lret
stc
push
data16
shrb
add
jmp
les
jnp
aad
hlt
sub
sbb
ja
test
ret
xchg
pop
mov
andb
nop
dec
sti
je
call
pop
xchg
imul
dec
arpl
ret
sub
jne
add
push
pop
popf
cltd
ror
sbb
mov
stc
push
lods
jg
push
clc
lahf
fcmovu
jb
inc
mov
loop
popa
mov
push
mov
mov
xlat
push
jg
fcomps
mov
inc
dec
mov
or
lret
adc
out
fisttps
scas
jne
shl
jnp
ror
xor
and
jle
dec
aad
pop
test
in
insl
mov
pop
jle
mov
pop
fnsetpm(287
add
xchg
cmp
pop
push
out
fistps
push
popf
pslld
xor
daa
or
cmp
int
aas
jns
jmp
sbb
push
dec
aad
pushf
pop
lods
pop
test
jno
je
loopne
inc
sub
jmp
cmpsl
xchg
adc
adc
add
adc
and
fcmovnu
data16
pop
jae
xchg
adc
sbb
fimuls
mov
insb
cmp
xor
in
mov
pushf
sbb
mov
mov
jmp
aam
jmp
lret
repz
cmpsb
xchg
xor
sub
imul
in
jecxz
in
mov
mov
pop
xchg
dec
mov
or
stos
daa
mov
fsubrs
mov
data16
je
push
sti
loopne
cmp
jo
jbe
mov
stos
test
aas
mov
test
int3
xchg
push
stos
adc
adc
mov
sub
adc
popf
pop
scas
icebp
test
clc
leave
in
cmp
xor
loop
hlt
lret
in
rorb
jecxz
mov
sub
rcrl
sbb
adc
insb
test
xchg
es
push
mull
mov
jb
and
or
jno
int
mov
push
push
insb
lret
pop
incb
cmp
mov
iret
dec
lahf
aad
cltd
dec
add
fsubrl
fcmovnbe
sub
xchg
out
xor
lcall
dec
dec
mov
jae
mov
xchg
fsub
or
mov
pop
and
or
bnd
icebp
jg
lcall
push
pop
cmp
in
pop
jae
clc
cmp
shll
mov
add
test
fnstenv
loop
sub
sub
lds
push
clc
popa
xlat
add
outsb
and
lahf
fadd
mov
push
out
pop
adcb
sub
andb
inc
mov
out
pop
test
imul
jae
adc
add
daa
mov
mov
popw
repz
or
out
bound
pop
lea
test
aaa
cmc
mov
fbstp
push
test
pop
lods
sahf
repnz
push
inc
inc
popa
xchg
pop
sub
adc
dec
or
bound
and
add
cld
je
mov
aaa
mov
jb
call
scas
jnp
sub
inc
lods
push
test
test
loopne
gs
inc
mov
mov
push
aaa
add
test
es
pop
cwtl
sub
data16
mov
lds
sbb
div
jb
adc
mov
add
push
imulb
mov
fdiv
xor
mov
sbb
push
stos
add
xchg
pop
aas
sbb
push
call
jne
xor
fists
es
mov
pushf
dec
and
testl
push
jge
ficomps
int
sbb
subb
les
pop
or
sti
jne
inc
xchg
fcmovb
in
inc
adc
mov
cltd
mov
xchg
adc
sub
add
xor
andl
in
lea
pop
sti
lods
add
imul
sahf
pop
and
push
sub
sbb
jo
or
mov
stos
negl
aad
push
adc
test
add
std
int3
lret
hlt
dec
rdmsr
jns,pn
sbb
push
sbbb
cwtl
inc
jmp
ficoms
test
movsl
adc
clc
xchg
imul
mov
mov
out
mov
pop
fcompl
lods
adc
negl
dec
cmp
mov
stos
scas
dec
sbb
mov
data16
mov
leave
cmc
out
ret
mov
test
movl
movl
movl
movl
movl
movl
mov
mov
or
lea
add
movl
jmp
add
inc
sti
daa
push
cs
mov
pushf
pinsrw
punpckhdq
add
sbb
xorl
mov
sbb
add
xor
xchg
andl
rcrb
cmp
iret
and
cmp
sbb
and
sub
push
out
jno
inc
dec
mov
xor
lret
pushaw
xor
mov
lret
mov
dec
std
add
add
cmc
pusha
jecxz
mov
mov
iret
cmc
jns
inc
in
out
pop
push
xor
sub
jge
mov
push
lock
jne
push
mov
mov
xor
xorl
lods
inc
adc
xlat
rol
call
add
les
sub
push
inc
xchg
add
pminsw
pop
and
rolb
mov
sub
out
xor
adc
movsb
popa
pusha
dec
adc
loop
dec
mov
lahf
sub
jnp
adc
insb
add
scas
sarl
test
cmp
push
mov
push
in
xchg
mov
xchg
loopne
xor
jnp
add
int
lock
adc
jecxz
sbb
mov
cmpsl
push
inc
daa
push
repnz
out
sbb
roll
cmc
cmpsl
cmpsl
or
jmp
out
es
sarb
aad
stos
adc
inc
mov
orb
xlat
ljmp
adc
in
inc
lahf
fs
loopne
jge
jge
f2xm1
insb
jle
dec
push
jle
ret
and
cld
jbe
cli
dec
inc
or
add
mov
sahf
mov
and
stc
jae
and
cmp
std
add
int3
push
fcmovnu
loope
addr16
std
mov
lret
push
movsl
scas
dec
ret
rolb
pop
in
or
sbb
repz
add
sub
dec
repnz
fiaddl
or
decl
insl
xor
insl
mov
movsb
scas
fildl
cmp
and
mov
cmp
fbld
mov
add
cli
push
and
in
jo
add
pusha
movl
cltd
xor
xchg
movsl
or
sbb
adc
orl
imulb
movsl
mov
int
movsb
test
clc
push
hlt
rcrb
jno
test
xchg
popf
out
icebp
add
and
lods
inc
jecxz
mov
jecxz
popa
aaa
popa
inc
mov
jno
jge
pop
loop
scas
lock
shll
mov
in
cld
mov
xor
mov
jne
fdivr
enter
and
fisubl
aas
fstl
in
sub
mov
xlat
fmull
adc
cs
mov
xchg
push
outsb
cmpb
cmpl
xor
and
popf
loopne
adc
outsl
add
subl
xor
mov
repnz
inc
shlb
aam
daa
repnz
dec
mov
mov
mov
jmp
jge
push
xchg
add
sub
fdivs
pop
imul
insb
test
popf
sahf
adc
ret
adc
xchg
clc
int
and
push
lret
lret
xor
ja
push
inc
push
test
mov
adc
pop
pop
mov
inc
or
pop
fld
in
iret
jb
das
cwtl
mov
jne
jnp
push
fmuls
bnd
scas
sbb
sbbb
cvtps2pi
pop
mov
push
cmp
push
in
sub
push
in
popa
rclb
shr
dec
addr16
ror
mov
aas
repz
rcrl
andb
stos
and
xor
stos
faddl
mov
shl
dec
int
push
mov
adc
or
daa
add
js
push
outsl
xchg
xchg
mov
test
xchg
inc
xor
xlat
ss
rcrl
or
repnz
dec
addr16
adc
outsb
out
aam
xchg
cmp
outsb
call
inc
fst
xchg
iret
xlat
dec
fwait
test
fsub
mov
orl
shl
mov
inc
std
sbb
stc
inc
movsb
int
fsubl
pop
popw
inc
popf
jp
pop
jle
xchg
std
mov
mov
sbb
xorl
bound
jae
inc
rcl
and
lahf
bound
xor
mov
cmpsb
popf
sti
fiaddl
arpl
pop
mov
daa
les
subl
pusha
cmc
pop
lods
data16
pushf
jo
lods
pop
shll
sub
adc
adc
push
pushf
and
and
xor
sub
mov
pop
push
push
ljmp
outsl
mov
aaa
popa
add
mov
stc
sbb
dec
jmp
jb
aam
add
sub
xor
mov
mov
fdivs
jge
inc
int3
adcl
mov
or
imul
jnp
adc
sub
pop
push
sub
jmp
test
and
mov
and
push
mov
test
jae
xor
loope
insl
out
hlt
aaa
scas
push
dec
dec
jbe
xor
fcomi
fs
mov
pop
nop
adcl
cli
inc
ss
mov
and
pop
enter
stos
mov
and
push
out
and
dec
mov
fs
das
pop
xchg
lcall
sub
xor
scas
jae
pop
mov
in
jecxz
mov
dec
sbb
mov
inc
outsb
and
and
shll
xor
lahf
add
scas
pop
mov
mov
pop
sub
push
mov
orl
and
lret
fwait
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
jmp
aad
sub
ss
adc
xchg
movsb
ja
xchg
mov
add
movlps
in
clc
xchg
jae
stc
push
maskmovq
stc
adc
imul
rorl
arpl
rorl
push
movsb
pop
xchg
cmpsb
mov
out
xchg
mov
fildl
popf
add
xchg
sub
dec
clc
push
fsin
fwait
stos
sbb
sahf
ret
mov
xor
fistpll
out
imul
dec
add
push
fstps
mov
add
jns
push
loop
out
push
pusha
sti
data16
aam
and
cli
std
mov
ret
xor
imul
cmp
push
xor
sub
shr
sub
push
mov
popa
shrl
mov
movsb
mov
or
and
add
dec
outsb
imulb
sbb
inc
push
inc
mov
cmp
jmp
and
scas
sarb
cltd
lods
jns
nop
inc
push
ds
or
pop
xlat
push
daa
cmpsl
ds
jae
scas
mov
jne
jl
mov
test
jge
sub
and
roll
jae
or
lock
cmc
int
xor
mov
cwtl
mov
inc
jnp
xlat
pop
adc
ds
jl
mov
leave
mov
fisttpl
or
cmpsb
cmp
pop
sbb
dec
adc
mov
mov
fistps
cmp
jbe
lock
mov
aad
pop
sbb
mov
mov
pop
call
mov
mov
lcall
pushf
icebp
sub
sarb
push
mov
aam
out
pusha
adc
mov
loope
icebp
pop
insl
pushf
pop
pop
stos
dec
push
mov
clc
mov
xchg
leave
ret
ss
popa
int3
push
fsubrl
movsl
ja
mull
xor
fstps
pop
clc
mov
xchg
mov
xchg
push
xor
adc
cmp
lcall
popa
cmc
movsb
out
push
lcall
clc
sub
mov
lds
sbb
inc
daa
imul
adc
mov
cmpsb
insl
arpl
aad
pop
sti
or
sub
dec
clc
push
dec
idiv
xor
mov
sbb
jne
add
pushf
pop
insb
pushl
dec
mov
lea
sarl
inc
pop
sbb
mov
out
adc
lret
dec
lock
mov
xchg
scas
call
pop
mov
mov
in
frstor
sbb
ds
xor
mov
in
ret
sbb
lock
cltd
jo,pt
adc
fbld
adc
js
pop
or
cs
lretw
dec
adc
fdivrs
mov
push
mov
repnz
mov
jge
pusha
sbb
cmp
push
xchg
sbb
mulb
sub
lods
je
pop
cmpsb
add
push
sahf
xor
movb
nop
out
pop
scas
cli
xor
mov
loope
inc
add
inc
mov
sbb
dec
xchg
cs
adc
sbb
cli
adc
mov
mull
rcll
ss
push
fcomps
call
jle
lcall
rcrb
jno
push
mov
xchg
ss
fwait
gs
daa
les
fidivl
mov
push
out
fists
mov
lahf
xchg
cmp
push
in
jmp
pusha
mov
dec
stc
stos
mov
pop
test
daa
xor
add
ret
mov
in
mov
add
mov
leave
int3
lahf
fsub
pop
sub
inc
sub
ds
mov
lahf
clc
mulb
fyl2x
shrb
sbb
lods
mov
dec
cmpsb
cmpsl
aaa
scas
sbb
gs
cmp
sarb
repnz
xchg
test
cmc
add
sar
fcoml
inc
scas
cmpsl
inc
jns
fdivl
leave
cmp
inc
fdivr
test
mov
mov
add
mov
loopne
pop
push
cmpsb
movsl
mov
ret
push
push
xor
fisttpl
out
into
push
mov
fstpl
gs
inc
add
mov
xlat
or
mov
int
push
or
sub
pushf
outsb
in
dec
jo
fdivl
cli
lods
pop
dec
xchg
dec
cmp
enter
sbb
loop
arpl
mov
outsl
push
xchg
lret
sub
sbb
ret
lea
in
rcr
push
les
mov
xchg
xor
outsb
jo
jae
clc
pop
int3
leave
jp
xor
leave
test
lahf
repnz
out
hlt
push
mov
pop
rorb
loope
xor
jle
cmp
push
popf
fisubrl
mov
mov
pusha
daa
jb
xor
push
add
cmpsb
add
rorb
mov
pusha
inc
out
and
out
sbb
lds
pop
movsl
lods
and
push
fwait
data16
sarl
imul
cmpsl
daa
out
cltd
icebp
pop
mov
cmpsb
js
mov
or
scas
popa
repz
pop
adc
or
mov
sahf
push
jle
fsubs
inc
pminsw
and
mov
mov
add
push
jge
mov
and
mov
pop
pop
cmp
shll
mov
mov
mov
sbb
mov
jae
xchg
aas
push
dec
jnp
add
lea
xor
add
inc
ror
cmpsl
fs
rorl
inc
sbb
and
cwtl
push
or
mov
mov
push
das
xchg
mov
mov
xchg
mov
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
jmp
out
aad
aad
aad
adc
psubq
les
cmovle
call
pop
adc
fs
adc
pop
int
sub
fwait
sbb
in
adc
ljmp
hlt
or
lea
cmp
jecxz
ret
jno
mov
jp
and
mov
ds
es
cmp
pop
nop
sub
pop
jl
lahf
mov
xchg
mov
sbb
add
add
cli
xor
scas
inc
add
adc
sti
dec
int3
push
jp
pop
add
enter
sbb
sub
mov
mov
xchg
outsb
imul
das
push
cs
std
inc
stc
mov
ss
adc
adc
mov
xor
xorl
dec
pop
push
mov
mov
ja
pop
dec
sub
aaa
xlat
sbb
xchg
movsb
push
dec
mov
lods
and
sbb
add
add
sub
clc
std
sti
adc
pop
pop
stc
mov
stos
pop
test
in
mov
mov
adc
cmp
jecxz
stos
xchg
stc
push
or
dec
push
ss
ss
loopne
mov
add
xchg
and
jne
insl
addl
cld
xchg
jo
lret
dec
add
nop
and
dec
cld
push
pusha
loopne
lahf
push
pop
xchg
cmp
xor
push
ljmp
outsl
pop
repz
sub
dec
mov
xor
pop
arpl
cmp
inc
loopne
jae
push
in
lret
or
add
jecxz
xchg
movl
daa
popf
stos
sbb
inc
cltd
loopne
call
sub
or
bound
push
addl
les
sub
aas
add
insl
outsl
icebp
pop
mov
inc
and
ret
sti
jbe,pt
inc
loop
ret
xchg
loop
jnp
push
test
jl
xor
dec
sbb
pop
outsl
aad
es
xchg
pusha
je
scas
mov
stos
cmp
es
and
adc
cmp
xchg
push
mov
orb
clc
mov
sbb
xor
pop
inc
fcompl
inc
cmp
roll
or
jl
xor
ret
cmc
and
sahf
fstl
daa
push
pop
test
int
cmp
pop
sub
jnp
mov
iret
inc
std
std
iret
call
inc
mov
fnstsw
pop
pop
ds
mov
cltd
mov
xadd
arpl
pop
jge
repz
lods
push
xor
jge
nop
sti
or
lea
sar
ss
and
mov
sub
and
and
iret
adc
shll
inc
leave
lahf
push
push
xlat
movsb
outsl
leave
jae
adc
push
pop
fidivrl
enter
in
mov
cmp
out
pop
xor
cld
sbb
hlt
xor
test
xchg
pop
dec
jno
jp
pop
inc
sti
dec
jl
mov
out
jmp
push
inc
and
test
std
dec
sub
push
movsl
out
xor
sub
adc
jg,pt
pusha
pop
sub
bound
sbb
add
pop
lea
popa
xchg
test
fisubrs
push
xor
add
mov
push
stos
and
in
cmp
aas
scas
or
lcall
shll
xchg
popf
mov
aas
xchg
xlat
scas
mov
jae
cmp
test
mov
scas
lods
fsubs
xor
and
lods
jbe
pop
imull
push
enter
mov
sti
jl
stos
mov
jp
subl
mov
push
shrb
mov
lods
inc
cmp
sbb
sbb
dec
or
stc
inc
loopnew
movsb
mov
push
add
sbb
mov
in
dec
cmp
out
xchg
sub
jnp
push
mov
std
dec
jbe
aas
xchg
int
subl
out
fs
lods
mov
in
int3
xchg
sbb
insb
push
les
dec
lea
pusha
sbb
sbb
int
ljmp
int3
add
pop
jbe
adc
enter
jmp
cmp
pusha
ret
pop
jbe
mov
sbb
sbbb
incb
adc
and
in
cltd
sub
ds
test
cld
into
in
pop
lea
jge
and
sbb
jle
ret
sbb
or
add
cmp
scas
dec
sub
xchg
inc
call
or
or
inc
in
pop
push
cmp
cltd
es
cltd
dec
dec
notl
jmp
add
dec
mov
aad
cmp
fisubl
mov
pop
mov
jg
and
insb
mov
mov
pop
xor
pop
cmp
push
or
sbb
or
movsb
cmovg
sbb
dec
std
or
hlt
aas
test
pop
jo
mov
mov
pop
pop
mov
pop
loop
jle
int3
sti
cld
add
arpl
cld
lea
lret
test
cmpl
lods
inc
popf
mov
or
cmpsb
loop
rolb
sub
add
cmpsl
andb
jno
js
arpl
mov
jecxz
out
lods
inc
xor
xchg
lcall
inc
pop
mov
pop
or
lds
push
pop
faddl
push
jp
mov
xor
push
pop
or
and
or
and
cltd
lret
cmp
jns
push
shll
imul
inc
cmp
xchg
inc
rolb
incb
ret
hlt
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
push
movl
movl
jmp
imull
xchg
xchg
aam
loope,pt
js
js
add
data16
data16
movsl
sub
mov
int
out
and
repz
mov
clc
fdivrs
sub
mov
fxch
pop
jmp
adc
xor
popf
and
push
mov
push
cmc
ja
add
lods
repnz
mov
jl
fists
dec
daa
push
popa
repnz
pop
test
sti
lods
mov
loop
lcall
mov
orb
negb
or
jmp
inc
mov
inc
push
or
imul
adc
sbb
add
pop
push
sti
pop
xchg
add
jbe
ret
adc
cs
adc
xchg
lea
repnz
mov
das
pusha
sarb
push
inc
push
pop
mov
shr
push
in
mov
inc
daa
cltd
movsl
push
xor
mov
jbe
pop
mov
cld
xchg
mov
fisttps
in
push
pop
das
sahf
int
test
popf
jno
xchg
and
mov
jae
pop
jmp
sub
loop
mov
fstps
sbb
push
jae
add
push
ds
cmpsb
xchg
rol
pop
mov
xlat
and
mov
cmc
and
sbb
out
daa
addr16
repnz
outsl
imul
add
mov
xor
push
jge
jge
push
sub
aas
xchg
cmpsl
dec
je
sbb
andl
push
push
push
cmpsb
pop
popf
cltd
cli
add
or
jae
sar
roll
popf
mov
xor
aaa
mov
pusha
or
scas
sbb
adcb
jo
mov
sbb
jo
inc
xchg
popf
fiaddl
movsl
push
data16
scas
jns
insl
decl
sbb
ret
sahf
adc
xor
mov
mov
loop
lods
cmp
xchg
push
nop
xchg
aam
cmp
jp
push
sbb
test
fildl
push
jp
adcb
sbb
lahf
icebp
fistpll
push
jmp
dec
pop
cltd
outsl
sbb
xor
jno
cmp
cmpsl
std
mov
xor
mov
sahf
mov
out
jg
push
xor
jne
cmp
movl
cmp
mov
popf
mov
mov
and
daa
lret
mov
pop
jnp
push
cmc
mov
mov
fdivl
and
inc
xchg
cli
cmp
mov
orl
into
insl
ficoms
into
lcall
inc
mov
mov
ret
iret
lret
cmp
sub
push
xor
dec
sbb
repz
pop
dec
gs
adc
pop
ja
iret
push
add
xor
or
xchg
loopne
pop
in
push
push
mov
cmpsb
xor
in
cld
lret
jbe
sbb
jae
das
fdivrl
sub
arpl
imulb
push
dec
and
into
cld
loopne
jnp
jno
fwait
adc
push
xchg
jge
pop
jle
dec
lds
les
push
mov
cmp
pop
std
mov
adc
test
xor
mov
inc
outsb
push
out
adc
adc
inc
mov
jl
xor
mov
jne
add
out
cmp
jg
mov
dec
mov
jns
lds
negb
push
into
jns
clc
aad
jb
test
push
lret
data16
mov
je
das
je
mov
repnz
xchg
jl
out
or
pop
les
loopne
stc
movsb
out
popa
ret
cli
aam
mov
movsl
mov
and
push
arpl
jae
ffree
ret
mov
pop
push
stos
mov
xchg
xchg
ds
call
mov
pop
mov
fisubrl
lret
divb
notb
pop
repnz
add
loope
adc
ds
testb
in
pop
lock
xchg
xor
push
dec
adcb
lcall
xchg
or
imul
gs
and
ret
dec
repz
repnz
int3
or
movsl
mov
rorl
sub
sub
inc
fdivrp
in
lret
pop
xchg
in
jb
nop
sbb
into
jae
pop
bound
xor
pop
mov
in
mov
jge
mov
pop
mov
ja
jmp
dec
or
mov
add
out
cmp
imul
sbb
adc
xchg
outsl
icebp
mov
fsubl
cmp
lods
dec
setne
adc
xchg
adc
push
arpl
imul
fisubl
fildll
frstor
test
fstp
int
lret
xchg
inc
xchg
inc
popa
shlb
or
inc
fdivs
jmp
xor
push
loope
test
inc
lret
insl
pushf
arpl
sbb
lret
mov
xor
in
inc
pop
shl
mov
mov
jnp
dec
cld
push
mov
cmp
hlt
clc
rcr
daa
mov
sub
jl
jmp
inc
out
jecxz
xor
popf
loopne
aaa
insb
mov
call
notl
sbb
sahf
and
xor
dec
xlat
fxch
or
imul
es
aam
cmp
aam
adc
scas
add
sub
jp
lret
push
add
pusha
pop
out
jecxz
icebp
lcall
int
pop
xor
loope
pop
call
mov
lahf
push
add
mov
test
sbb
call
cmpsl
out
cli
add
out
push
rcrl
fld
jb
stos
data16
mov
mov
jg
inc
and
and
xchg
jbe
xchg
pop
lahf
fsubrl
sbb
movaps
jo
or
fnsave
xchg
xor
dec
xchg
pop
call
add
sti
adc
mov
pop
mov
int
je
sbb
mov
cmovg
aad
mov
inc
cmpsb
xchg
cmpsl
mov
push
test
negb
stc
add
jnp
jecxz
mov
mov
data16
add
arpl
dec
jae
pop
jp
mov
ljmp
fdivl
fstps
lret
xor
xor
push
and
sbb
mov
daa
nop
faddl
xor
push
or
ret
lods
pop
js
pop
addl
rcrb
add
addl
cld
cmp
jl
cmp
imul
cmp
sysret
aas
popf
xchg
mov
push
dec
sub
and
cmpl
mov
cmp
push
sub
nop
adc
cmp
aas
mov
mov
inc
push
jno
test
movsl
fs
fidivl
push
mov
repnz
xchg
mov
inc
mov
pusha
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
pop
fdivl
jo
push
push
mov
faddl
repz
psubsb
popf
sub
mov
jecxz
xor
pop
dec
scas
jne
add
popf
cmc
sti
lahf
sbb
aam
adc
ss
out
mov
lret
lds
lock
inc
sbb
clc
push
dec
push
dec
push
push
lds
pop
sbbl
adcl
fs
and
cmpsl
xchg
mov
dec
pusha
ret
sarl
in
push
stos
mov
mov
pop
xor
inc
std
sub
mov
data16
cmp
sub
adc
popf
out
imul
jl
rorb
in
sbb
std
xor
xchg
nop
jns
repnz
sar
fdivrs
std
aam
mov
jbe
pop
mov
test
lock
add
pop
mov
and
push
mov
jno
iret
dec
and
dec
sbb
out
shll
ret
pop
in
aas
vpsllq
leave
push
scas
mov
repz
cltd
mov
int3
jae
mov
data16
xchg
into
mov
sub
leave
scas
and
cmp
mov
push
cs
add
out
cltd
mov
mov
pushf
xor
push
xchg
mov
int
test
mov
rorl
loope
aam
or
xor
or
dec
lock
bound
sub
mov
jp
cltd
ja
mov
mov
movsb
dec
or
adc
mov
stc
lahf
lods
lahf
sub
loop
lds
test
jo
add
xor
pop
jne
ret
cwtl
xchg
dec
xchg
cmpsl
xchg
xchg
mov
in
fwait
ljmp
dec
in
dec
and
and
push
test
jmp
xchg
mov
scas
fistps
addr16
add
mov
cmp
mov
xor
xor
jl
arpl
lods
lods
loopne
add
call
test
pusha
mov
pop
aaa
loope
mov
xor
pop
test
das
xlat
sbb
aad
lret
push
mov
scas
adc
ret
xor
addb
aaa
sti
sbb
inc
jl
loopew
dec
jno
pop
roll
stc
test
popa
movsb
enter
cmp
push
ss
pop
loopne
mov
mov
loope
roll
fisttpll
mov
not
test
dec
js
mov
outsb
js
push
mov
test
inc
and
jo
ja
dec
lds
in
mov
test
cmpb
pushf
stos
xor
add
inc
ficomps
push
add
sbb
and
push
pushf
ret
mov
arpl
js
fstps
cmpsb
inc
into
pop
cmpsb
pop
add
out
pop
push
pusha
lcall
cmp
dec
repz
push
push
ss
and
adc
aam
jmp
push
pop
cmp
in
mov
push
xor
adc
and
lahf
incb
arpl
int
push
pop
fists
and
and
insb
out
jg
ret
aam
sti
jmp
push
xchg
and
ret
out
jmp
test
add
aaa
xchg
xor
repnz
pop
jmp
shl
jno
jmp
in
sbb
ret
push
shlb
mov
insb
xchg
fildl
mov
add
cli
and
xor
pop
or
inc
dec
lea
and
js
push
dec
out
popa
mov
fidivrs
dec
dec
mov
repz
sub
pop
mov
rcll
and
mov
fabs
jl
enter
mov
xchg
frstor
fwait
scas
adc
or
leave
push
mov
dec
push
test
jmp
pop
into
int
stc
sbb
pop
lret
loop
sub
sbbb
cltd
push
in
cwtl
push
inc
sub
add
cli
int3
imul
pop
sbb
mov
mov
adc
std
add
and
mov
out
sub
shll
div
pusha
test
mov
add
fnstcw
xchg
sub
jecxz
adc
dec
xor
leave
xor
or
aas
mov
and
aas
xchg
inc
scas
popf
push
mov
les
fiadds
lods
mov
rclb
mov
push
mov
lcall
out
cld
push
in
iret
fstpt
repz
xor
jno
stc
out
in
push
inc
mov
jmp
mov
jge
xlat
jle
xor
dec
or
stos
mov
in
outsb
fwait
into
int3
enter
pop
jg
into
mov
cli
and
rcrb
test
ret
lret
je
scas
addr16
js
xchg
pop
pop
sub
pop
push
cli
pop
add
xor
les
cmp
xchg
outsl
mov
mov
int
loopne
mov
pushf
cmpsl
lret
or
test
les
mov
xor
sti
fildl
xchg
sub
adc
adc
or
cmpsb
orb
mov
mov
xchg
insl
loope
add
jg
fnsave
push
loopne
rclb
xlat
adc
push
sarl
jmp
daa
pop
jle
push
jae
inc
sub
andl
cmpsb
sbb
cli
lods
in
push
jno
pop
movsl
mov
rorb
ror
imulb
aas
jb
ficoml
je
inc
jae
lahf
add
stc
sbb
cmp
jge
inc
push
rcr
dec
pop
lcall
add
into
sub
incb
sub
mov
cld
cmp
in
pop
mov
mov
repz
movsl
loop,pt
lea
lret
enter
push
mull
popa
mov
adc
in
mov
fnstenv
dec
int
lods
fadds
mov
dec
js
adc
lds
xor
or
pop
in
cmp
push
cmp
add
mov
cltd
popf
pop
sbb
sti
repnz
inc
sbb
xchg
add
add
push
outsl
ss
mov
mov
sub
sub
adc
adc
jle
cmp
imul
adc
in
xor
cmpsb
push
lcall
jg
aam
mov
fadd
mov
push
push
sbb
sbb
xchg
fsubrl
les
sub
popa
movsb
lods
pop
pop
adc
out
inc
test
lods
mov
sub
not
mov
lods
inc
xor
test
xor
repz
cmp
mov
xchg
mov
fsubl
ja
loopne
shrb
push
mov
movl
mov
mov
mov
mov
push
add
push
adc
jmp
lcall
xor
xlat
stos
sub
pop
add
xor
push
fwait
test
xchg
inc
or
add
faddp
fisubs
push
cli
add
negl
mov
repz
mov
test
clc
lods
jno
and
mov
fisttpl
je
dec
pop
popf
push
mov
xor
arpl
lret
sbb
jnp
ret
pop
mov
imul
sub
sbb
js
sub
push
jno
pop
cli
lret
lret
adc
or
cmp
rcrl
insl
or
ret
popa
adc
or
adc
add
cmp
mov
test
sahf
add
test
repz
pop
jp
adc
push
out
pop
jnp
mov
ds
pop
add
cmp
adc
scas
jb
movsb
dec
outsb
jne
aas
loopne
jnp
push
popf
dec
dec
jbe
jo
iret
pusha
int3
test
imul
inc
mov
adc
out
insl
dec
sbb
scas
push
rolb
jg
push
xchg
push
std
sbb
jmp
jg
jne
pop
pop
cld
repnz
jge
mov
xchg
fwait
daa
rorb
in
orb
imul
mov
mov
jmp
xchg
popa
ds
mov
mov
mov
cmp
xor
lods
loop
test
lock
pop
lods
insl
fnstsw
add
mov
pop
aas
sbb
xchg
or
scas
jno
pop
lock
xchg
jb
add
pop
xchg
sbb
ljmp
xchg
mov
sbb
ret
mov
push
adc
add
mov
xchg
mov
mov
test
daa
mov
lcall
push
pop
lret
xchg
ret
arpl
mov
pusha
cmp
loope
mov
add
push
sub
shll
xchg
lods
jb
cmp
fs
outsl
fisubl
imul
mov
jle
popa
mov
lret
push
cmp
int3
sarl
dec
xchg
ljmp
push
ja
cmp
or
outsb
mov
xchg
and
stos
inc
shr
shll
jmp
and
cltd
cmc
gs
adc
xchg
ret
outsl
aad
or
xchg
dec
imul
mov
out
in
jb
popf
pop
fisttps
dec
arpl
out
cwtl
xchg
iret
cli
add
dec
mov
pop
mov
shr
mov
inc
pusha
dec
jp
sbb
shrb
lret
in
fwait
push
pushf
and
test
test
cwtl
lret
shll
mov
and
call
push
pop
add
pop
divl
cld
pop
add
push
or
pop
or
xchg
jno
stos
mov
push
outsb
ss
adc
dec
fcoms
push
cmp
jp
xchg
fsubl
popf
pop
mov
inc
xlat
lahf
stos
push
das
es
lea
or
sub
push
mov
xchg
mov
jo
cmc
mov
sbb
xchg
aas
jnp
cli
popf
js
aaa
mov
notl
push
mov
push
mov
mov
mov
inc
push
mov
es
sbb
loopne
fs
in
jge
mov
fsubs
and
xchg
int3
ja
push
pop
dec
test
mov
stos
ss
jno
pop
jo
and
inc
lods
mov
push
mov
mov
and
pushf
sub
andb
repnz
and
in
push
icebp
popa
pushf
outsb
mov
xchg
fsub
pusha
xchg
pop
fidivrl
movsl
mov
in
pop
mov
test
pop
int3
push
mov
dec
xchg
dec
hlt
xchg
mov
jns
sub
pop
repz
push
jb
fs
and
cli
cltd
dec
int3
pop
lret
mov
inc
pushf
or
add
mov
adc
cld
lds
out
scas
mov
and
icebp
push
inc
rcl
and
mov
lret
add
add
in
into
stos
dec
cmp
pushf
jno
lock
adc
daa
mov
scas
test
cmpsb
ret
and
popf
pop
xchg
call
xor
lds
call
inc
mov
adc
push
inc
faddl
mov
cmp
xor
mov
scas
xor
or
cli
xchg
arpl
push
push
xchg
cmpsl
out
and
sbb
pushf
out
xor
lcall
and
mov
dec
cwtl
lahf
jp
test
fistps
loop
icebp
adcb
pop
or
xor
jecxz
loope
loop
fwait
fwait
mov
std
jne
out
pop
hlt
add
xchg
dec
xorl
leave
jp
outsl
cld
mov
dec
pop
mov
in
test
shrl
inc
repnz
push
jg
jns
popf
jle
mov
lds
in
mov
dec
jae
mov
push
xor
lahf
push
xorl
test
sub
repnz
sub
dec
mov
adc
xchg
imul
aas
pop
xchg
jg
lret
pop
fld
sbbl
aaa
lahf
inc
aaa
test
sti
jbe
orb
popa
cmpsb
cmpsl
add
ss
cmpsl
jecxz
pop
cmp
scas
xor
add
pop
test
sbb
xor
int3
div
pop
rcrl
adc
pushf
lock
out
test
push
scas
jl
mov
xchg
fcomp
ds
fisttpll
jns
mov
pop
jno
inc
stos
rcr
xor
outsl
stc
xchg
jmp
std
in
xor
mov
in
fsubrl
int
movsl
adc
inc
dec
loope
leave
jae
mov
ja
pop
aam
ss
or
lods
xor
xchg
sub
mov
icebp
es
dec
sub
aad
cmp
inc
repz
mov
cld
mov
out
pop
rcrl
stc
mov
mov
jbe
xchg
mov
inc
mov
loope
int3
mov
mov
cmpsl
rcr
out
dec
sub
gs
add
bound
sub
cmp
xor
mov
adc
cli
xor
pop
rcrb
sbb
dec
ja
les
fidivs
mov
jnp
xchg
in
icebp
sahf
fdiv
jecxz
sbb
ficomps
xchg
rcrl
incb
push
dec
xor
cld
xchg
xchg
cli
sbbb
movsb
mov
stos
out
inc
sbb
add
jl
inc
shll
cmpsl
sbb
ret
jbe
dec
add
mov
cmpsb
fstpt
sub
arpl
xor
out
pop
mov
nop
mov
push
les
push
push
push
call
mov
mov
sub
mov
jmp
mov
and
cwtl
sub
inc
movb
mov
add
inc
sarl
jnp
cpuid
cwtl
jecxz
fcomi
stc
push
into
das
sub
sbb
aaa
adc
and
movq
jno
pop
xchg
lret
das
sbb
mov
mov
jg
push
testl
and
or
aaa
cmp
push
imul
rcrl
xchg
sub
pop
and
insb
inc
lea
sub
pop
jno
xor
ja
inc
pop
popf
in
mov
inc
leave
mov
mov
jo
std
or
and
jle
in
jmp
cld
in
xor
mov
add
lahf
data16
test
mov
xchg
xchg
sbb
lea
stos
scas
xchg
aad
out
push
add
in
xor
call
mov
and
subl
or
aam
mov
xchg
jp
xchg
outsl
lret
enter
insl
push
lret
jae
in
pop
nop
cwtl
and
jae,pt
mov
mov
ljmp
fidivrs
pop
xchg
repz
inc
mov
xchg
cltd
mov
cmp
lret
xor
mov
pusha
ja
in
dec
xchg
test
imul
notl
shlb
xchg
stc
add
push
inc
or
and
dec
call
cli
hlt
mov
fmuls
or
lea
test
lods
repz
mov
enter
in
xchg
ljmp
cmpsb
mov
xor
add
mov
push
sub
jecxz
fucomip
aad
or
orl
inc
jne
loope
mov
and
mov
std
mov
pusha
inc
mov
cmp
jp
pusha
jno
pop
adc
dec
push
sbb
xor
ss
pop
iret
imul
je
rcll
push
inc
stos
dec
sub
mov
ficoml
cli
lret
lock
mov
hlt
clc
lds
mov
jmp
andl
cmp
lahf
sti
inc
pop
lcall
xor
rcll
outsb
mov
inc
leave
ss
aam
popa
loope
push
push
or
fisttpl
push
mov
sar
xchg
push
dec
test
inc
lds
mov
loop
jnp
repnz
xor
jbe
arpl
scas
je
jp
rcrb
movsl
lock
mov
jmp
push
loopne
nop
pop
rcrl
add
iret
xor
mov
jb
pop
negb
sbb
jge
pop
sbb
jb
int3
gs
xor
dec
and
es
or
mov
add
call
cmpsl
pushf
insb
jl
fadds
xchg
insb
mov
test
aad
enter
fnstcw
mov
xchg
psubusb
das
imul
lock
roll
test
cmp
into
xchg
mov
stos
iret
mov
inc
jle
psrlw
add
lods
mov
or
adc
ds
sbb
fs
or
cmc
pop
hlt
lahf
pop
pop
dec
mov
out
mov
pushf
mov
push
pop
out
outsb
test
xlat
jp
shrb
bound
sub
ja
sub
popfw
sub
out
pop
inc
and
pop
out
lcall
mov
xchg
jg
xor
xchg
fsub
jno
cmpsb
pop
adc
enter
rorl
icebp
mov
shlb
dec
xchg
movsl
push
aas
sub
call
lea
dec
or
inc
jl
lahf
repnz
sub
fs
add
fwait
test
dec
cmpsb
dec
push
repnz
aam
mov
imul
imulb
sbb
sbb
mov
enter
bound
mov
or
jge
sbb
push
add
call
mov
rcr
push
jmp
outsl
inc
imul
inc
pop
in
adc
and
adc
cs
or
and
jle
sbb
ljmp
mov
incl
out
imul
pop
dec
inc
push
bound
pop
fprem
repnz
mov
push
cmpsl
adc
dec
insb
ss
add
lahf
jecxz
pop
insb
fistpl
sub
inc
lcall
pop
es
movsl
outsl
and
jnp
cmpsl
cmpb
cmp
dec
mov
mov
add
loope
mov
lret
push
rcrb
into
pop
jle
cmp
push
xacquire
cwtl
push
cmp
mov
adc
mov
movsl
outsb
mov
push
addr16
int
push
cmp
mov
je
jge
test
scas
addb
sbb
enter
push
lock
mov
fdivp
fdivrs
aad
or
mov
lret
mov
fcomi
stos
mov
pop
push
cmc
adc
push
lods
gs
pop
xor
jbe
loop
mov
jb
pop
js
mov
fwait
push
fcompl
das
dec
rcrb
call
fisubrs
movsl
push
adc
sbb
dec
adc
cld
cpuid
in
inc
lods
aaa
pop
scas
jmp
stos
shrl
aas
cs
inc
pusha
repnz
lcall
jo
lods
cmc
mov
mov
mov
insb
movsb
xchg
les
dec
shlb
jge
and
and
rcrl
stos
std
cli
sub
mov
pop
js
ja
pusha
cmpsb
jl
dec
jle
or
lcall
push
push
xor
or
mov
movb
data16
hlt
sbb
outsb
jnp
outsb
imul
sbb
fnstsw
movsb
test
push
nop
xchg
js
lock
inc
std
mov
cmpsb
mov
dec
inc
fwait
adc
aam
mov
sti
dec
rdtsc
jp
test
repz
xor
dec
push
xchg
sbbl
aad
push
lods
add
xor
cwtl
mov
sahf
fnstcw
adc
inc
sub
loop
sbb
lds
sbb
jne
stos
aaa
lret
push
pop
mull
fdivs
mov
push
sbb
cmp
xchg
push
loop
out
std
push
cli
adc
push
cmc
lahf
aam
lea
out
add
xor
into
sbb
cmp
push
es
inc
mov
xor
je
daa
dec
int3
push
nopl
push
ja
sbb
cmp
aaa
jmp
nop
in
adc
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
jmp
lcall
or
stos
dec
mov
add
js
and
clc
out
sti
fyl2xp1
xchg
inc
nop
push
maxps
xchg
rcrl
stos
push
xchg
aam
dec
adc
cld
inc
cmp
add
sub
xor
scas
mov
jecxz
mov
les
ljmp
xorb
sbb
lret
or
jnp
cmp
mov
inc
mov
aad
je
xchg
sbb
xchg
jns
das
inc
cmp
mov
cmp
pushf
loopne
test
leave
xchg
dec
mov
push
pop
sbbl
jle
jp
xorl
push
into
sti
inc
outsl
and
aad
loop
mov
jp
insl
out
imul
iret
aas
cmp
stos
int3
and
daa
dec
repnz
shrb
aad
xchg
inc
es
stos
daa
cwtl
shrb
fdivs
iret
bound
mov
sbb
imul
add
push
cmpsb
xchg
sbb
adc
imul
frstor
das
jg
mov
cs
jle
insl
jg
ss
sub
mov
mov
lds
test
mov
push
mov
scas
aas
mov
push
pushl
push
push
pop
cld
jae
mov
shlb
mov
pop
js
insb
popa
pop
cmp
adc
jg
int
sbb
inc
out
sbb
pop
ljmp
les
testl
cmpsb
inc
movsb
or
sti
es
adc
cs
jo
or
rorb
dec
movl
mov
adc
mov
bound
adc
jno
cltd
xchg
ret
sub
jns
sub
or
dec
mov
lahf
and
pop
lea
push
jno
pop
mov
jg
mov
or
push
mov
filds
xor
repnz
and
pusha
emms
sbb
xchg
jmp
cmp
push
push
mov
adc
push
mov
sbb
pop
xorb
insb
popf
fldlg2
mov
rolb
js
push
insl
mov
out
icebp
jle
mov
out
or
mov
test
dec
jge
inc
pop
rcl
subl
pushf
nop
fdivr
sahf
mov
movsb
adc
mov
pushf
and
push
aam
frstor
xchg
jne
dec
aam
in
in
test
ja
mov
add
stos
mov
leave
test
inc
inc
imul
inc
mov
out
daa
mov
jg
dec
popf
ds
and
testl
cmp
inc
ds
cld
ret
roll
or
push
in
fistpl
mov
outsl
jb
dec
pop
repz
mov
sbb
ja
loop
xorb
mov
and
mov
ret
dec
mov
scas
add
aaa
push
mov
mov
pop
lea
push
or
push
pop
or
repnz
mov
movsb
push
add
jle
test
mov
sub
pop
cmp
or
sti
adc
mov
sarl
ljmp
push
push
add
loope
scas
pop
push
inc
incl
pop
mov
cmp
sbb
mov
mov
pop
jmp
addl
xor
lock
sub
dec
fs
xor
js
int3
jno
test
mov
insb
fnstcw
fwait
push
inc
mov
fwait
je
xchg
out
loopne
xor
or
popf
xchg
dec
das
sbb
enter
mov
cmp
je
pop
jge
decb
dec
in
or
sbb
cmpsl
add
fwait
xchg
rcrl
test
jbe
cli
popf
pop
pushf
jne
push
ret
shlb
inc
imul
inc
adcb
dec
pop
xchg
insl
scas
push
testb
daa
mov
insb
jle
pop
add
out
outsl
call
inc
sub
mov
mov
xlat
or
sub
ja
sub
push
cmpsb
popf
js
mov
xchg
pushf
mov
cmp
neg
and
cmpsl
scas
repz
mov
xchg
rcrl
movsb
out
cli
out
outsb
fwait
dec
jecxz
xchg
push
inc
xor
sti
test
jp
ja
out
jp
std
aad
sarb
lahf
cmp
mov
jge
xchg
or
test
lcall
jmp
frstor
xchg
adc
pop
sarl
mov
add
inc
scas
outsb
mov
popf
pop
fwait
push
lcall
and
sbb
or
fwait
cmp
test
xchg
pop
xchg
dec
add
xchg
ljmp
sub
push
fidivrl
mov
cld
scas
pop
stc
out
push
add
push
and
in
repnz
insb
mov
ror
pop
dec
enter
mov
mov
out
sahf
add
dec
and
ret
or
sarl
push
iret
sbb
lds
std
mov
sbb
es
dec
pop
test
mov
lods
dec
pop
or
movsb
sbb
frstor
icebp
inc
cmovne
jnp
mov
adc
dec
dec
shrl
ds
aas
cli
je
mov
add
cmc
in
push
jg
dec
inc
loope
mov
pop
add
push
arpl
jno
loop
push
movsl
shlb
jo
push
ja
pop
ljmp
idivl
add
adc
xchg
cmp
rcr
push
loop
push
fldcw
push
or
push
xchg
and
jne
mov
dec
inc
arpl
test
cmp
movsb
sahf
cmpsb
jno
mov
cmp
jne
push
sbb
in
jmp
and
lea
xchg
aam
sub
rol
testl
xchg
sub
ss
adcl
push
mov
enter
sbb
bound
push
pop
jns
mov
xchg
dec
adc
sahf
sub
nop
cmpsl
mov
adc
and
and
insl
loopne
mov
push
push
in
ljmp
fwait
dec
out
pop
mov
gs
cmpl
andl
xor
mov
and
es
push
popf
and
repz
mov
bound
and
in
or
mov
aaa
mov
pop
adc
add
xchg
add
lahf
out
pop
sti
push
shrb
sub
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
jmp
mov
sbb
popf
or
dec
repz
in
inc
add
cli
mov
sub
fs
sti
mov
push
mov
ret
sti
cmp
jbe,pt
out
test
lock
sarb
mov
jmp
ds
aad
mov
outsb
jmp
outsb
adc
dec
cld
stos
fimuls
mov
push
clc
cmpl
and
xchg
out
pop
out
cmp
and
pushf
xchg
and
lea
mov
adc
inc
inc
jne
adcl
mov
push
sti
push
dec
adc
faddl
clc
inc
mov
xchg
shl
sbb
fsubrs
addb
or
xor
inc
inc
cmp
sub
in
xchg
pop
xchg
push
cmp
xor
or
jbe
cmp
and
adc
adc
sub
mov
mov
cmp
or
xor
pop
and
fisubl
cmpsb
push
jmp
xorl
jp
pop
stc
adc
inc
push
outsl
pop
data16
fildll
jg
adc
nop
pop
push
xchg
sbb
xchg
cmp
mov
mov
and
pop
in
push
nop
lods
loop
out
mov
mov
cmp
cmp
or
pusha
mov
adc
insb
sbb
and
xor
in
jnp
sub
aas
lods
xor
jno
call
notl
or
divps
mov
mov
fdivrl
or
pusha
mov
shll
scas
scas
jmp
ficoml
dec
mov
pushf
in
sbb
and
xor
xchg
jl
add
sub
mov
mov
sub
pop
pop
xor
clc
jl
mov
sti
movsb
js
ret
ds
clc
cmc
inc
or
fs
lock
ss
jo
divl
mov
aaa
adcb
imul
mov
sub
xchg
push
xchg
sbb
jle
sub
jne
bnd
pop
pop
sbb
cld
clc
das
push
cltd
jae
cmp
nop
imul
in
pop
popf
imul
mov
mov
rcrb
loope
clc
jecxz
ljmp
stc
inc
pop
fcomp
idivl
inc
and
cwtl
jp
aam
hlt
sub
cmpsl
jle
mov
jns
mov
or
lcall
aad
jg
sti
fmull
insl
mov
dec
xchg
repnz
jne
imul
lret
jg
sub
pusha
mov
mov
jge
ljmp
scas
xchg
loopne
test
movsb
dec
lock
icebp
mov
or
mov
hlt
aad
data16
mov
mov
aas
sub
leave
insb
psllw
fiadds
fdivs
xor
xor
pop
mov
mov
xor
push
loopne
sub
adc
jnp
test
pop
inc
imulb
out
inc
xchg
notb
xor
mov
cmp
sti
and
jecxz
cwtl
cmp
in
inc
lret
pop
mov
xlat
add
fmuls
js
rcrb
mov
sub
mov
xchg
add
stos
sub
push
pop
pop
call
stos
nop
outsl
jmp
or
lea
sub
dec
into
hlt
jle
rorb
mov
es
mov
adc
stos
addb
addl
aad
loopne
addb
jns
mulb
test
dec
mov
xor
jns
jb
or
mov
push
bound
and
insl
and
das
clc
out
push
mov
sbb
andb
add
inc
mov
and
adc
pop
jp
rclb
xor
or
pop
stc
jne
insl
push
xor
cmp
mov
push
pusha
adc
cmp
adc
inc
std
sbb
ret
shl
jmp
inc
cmpsb
xchg
xor
or
insb
push
sbb
nopw
push
mov
and
push
lcall
lods
sub
push
mov
test
adcb
jo
jg
je
std
test
sub
push
negb
js
lret
push
and
loop
xor
sbb
imul
or
sahf
jb
mov
sbb
mov
cmp
cmpsl
gs
ss
pushl
push
sbb
movsb
mov
mov
jecxz
jle
sub
imul
xor
and
sub
dec
lods
ja
sub
outsl
lret
sahf
mov
mov
testb
lcall
pop
lahf
mov
and
sbbl
push
aas
mov
stos
or
lcall
push
in
adc
push
add
pop
data16
out
sbb
inc
push
rol
sub
ss
stos
xor
cmp
sar
inc
cmpsl
pop
loopne
insl
jo
pop
jb
lea
inc
fldl
mov
mov
mov
mov
outsl
adc
mov
push
jne
mov
or
fdivrs
cmp
lret
cmp
lret
xor
cmp
mov
lea
inc
hlt
repnz
xchg
jne
mov
in
in
add
lock
fildll
stos
outsb
mov
mov
cli
pop
enter
mov
pop
add
add
push
xor
mov
sub
or
divl
test
orl
and
pop
out
dec
js
sahf
repnz
popf
push
pop
out
cltd
hlt
xchg
pop
dec
jecxz
stc
cmp
sub
xor
dec
mov
cmp
lds
mov
sbb
mov
out
and
mov
jmp
lds
sbb
pushf
dec
ja
int3
mov
outsb
ret
dec
and
xor
pop
enter
or
xchg
out
mov
in
hlt
add
sub
pop
nop
mov
cmpsl
stos
or
into
js
shrb
sarl
push
cli
shl
enter
test
mov
mov
ret
sub
subb
aaa
mov
mov
push
cwtl
xchg
mov
fisubl
xor
test
cmp
lret
dec
jecxz
movsl
and
inc
in
cmc
icebp
movsl
adc
outsl
movsb
jp
lret
dec
test
popa
aaa
arpl
mov
in
imul
sub
sub
add
or
mov
fildll
cmp
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
jmp
mov
xchg
adc
mov
push
or
shll
add
lods
addr16
outsl
ss
mov
and
sub
loop
cmp
dec
and
outsl
pop
add
pop
xchg
mov
sahf
divb
ljmp
xchg
sti
lock
scas
add
mov
lcall
dec
addb
push
cmpsl
mov
fwait
or
and
int
cmp
dec
add
dec
inc
lcall
ja
mov
rcrb
mov
jb
mov
fldt
movsb
pop
leave
lock
push
int
and
ja
ret
and
add
mov
out
mov
sbb
push
mov
xor
push
fs
inc
sub
lcall
lahf
stc
pop
cmpsb
mov
scas
jae
fcomps
stc
cmp
fisubl
je
inc
cli
mov
fmul
inc
bound
mov
adc
jmp
add
outsl
mov
dec
loopne
and
pop
rorl
test
shr
ret
lock
sub
mov
std
jbe
lds
adc
clc
call
das
jge
add
push
inc
lahf
enter
test
inc
icebp
enter
adc
insb
shl
stos
mov
into
mov
stc
add
test
in
cmp
fcompl
jecxz
cmp
and
fcmovb
xchg
mov
xchg
ja
pop
dec
xchg
iret
xor
cmc
into
or
popf
xor
loopne
inc
pop
test
mull
pop
mov
mov
add
and
aam
push
andl
call
cmp
jge
out
mov
in
cli
int3
cmp
push
inc
mov
pop
sub
push
pop
push
lret
mov
clc
mov
push
pop
cmpsl
mull
ljmp
jge
fimull
or
fcom
xor
ljmp
es
es
out
cmpsb
cmp
lcall
in
inc
dec
cmp
pop
push
adc
ss
rcl
dec
jp
out
test
push
lea
adc
add
cwtl
and
loop
mov
call
aam
pop
fnsave
inc
adc
jo
mov
clc
dec
push
sbb
sbb
inc
mov
imul
aam
rclb
add
imul
add
cltd
loopne
adc
sub
dec
movsl
push
sbb
daa
aas
pop
out
scas
xor
pop
mov
fisubrs
mov
sbb
xchg
cld
stos
add
add
retw
mov
mov
scas
xor
jge
sub
adc
add
mov
orl
sub
xor
mov
xchg
push
pop
enter
jno
xchg
stc
cmpsl
pop
push
arpl
inc
lods
inc
hlt
push
sbb
inc
aaa
pop
movsb
adc
cld
dec
loope
add
pop
sarl
push
xor
adc
aad
scas
ret
icebp
movsb
add
fwait
mov
push
pop
rcrb
out
repnz
leave
clc
push
and
popf
xor
fimuls
mov
cmp
push
xchg
cwtl
xchg
test
or
shrb
imul
pop
lret
mulps
mov
dec
dec
test
push
ljmp
es
aas
dec
and
or
or
idiv
and
orl
fsubrs
aad
cld
in
mov
or
mov
addr16
lods
pusha
push
filds
stos
fldlg2
inc
int
movsb
fwait
adc
mov
sbb
rorb
or
add
fwait
div
loop
ltr
ss
shrb
test
mov
push
mov
aam
loopne
mov
popf
or
lcall
dec
rcrl
cmp
xorb
testb
imul
mov
lock
or
or
mov
mov
dec
mov
sbb
jecxz
dec
ja
nop
sub
xor
cmp
pop
cld
scas
or
jne
nop
shlb
pop
sub
add
adc
aam
jno
fdivs
push
aas
insl
adc
scas
xor
mov
hlt
mov
jns
add
stos
fldcw
in
sahf
dec
mov
mov
push
aad
dec
mov
std
push
xor
xor
aam
lret
mov
pop
lods
add
xchg
pop
jg
jl
shll
popa
popf
or
add
les
xor
jae
shlb
addr16
inc
lea
xchg
xchg
call
nop
mov
pop
imul
sbb
mov
cmp
bound
pop
cli
mov
jnp
dec
cmpsl
dec
inc
lods
or
aaa
pop
out
cmp
scas
mov
mov
cwtl
fwait
gs
sahf
pop
jl
mov
stc
push
shlb
cmp
pushf
xchg
lock
cmp
and
or
mov
loope
mov
or
in
inc
ds
fnstsw
push
data16
inc
cmp
fs
cmp
inc
cmp
cmp
inc
in
and
jnp
or
xor
mov
cltd
mov
stc
push
mov
repz
or
aad
pushf
jbe
aad
or
xor
sub
xor
rcl
shrl
outsb
sbb
cmp
ljmp
cmpsb
call
push
mov
jmp
fs
cmpl
outsl
insl
orl
aam
jb
aam
push
jl,pt
jae
fisubs
inc
cli
divl
sbb
xor
aad
adc
sub
out
xor
jge
loope
aaa
popa
mov
stos
sahf
dec
mov
mov
cmp
es
gs
mov
test
flds
push
xchg
scas
sbb
pop
cmp
mov
movsb
xor
insb
jl
idivl
lds
push
sbb
sbb
scas
xchg
loopne
js
clc
cld
jbe
into
out
imul
leave
in
xor
sbb
xor
icebp
pop
stc
gs
mov
iret
icebp
cmpb
aam
mov
add
xchg
loope
fdivr
cmp
push
ret
ds
and
outsl
stc
dec
test
sbb
aad
pushf
sbb
dec
xchg
xchg
out
adc
es
daa
jl
inc
jo
dec
hlt
add
ja
hlt
cmp
add
aam
push
xchg
xchg
and
test
dec
loopne
sti
fcom
inc
cmp
mov
pusha
adc
dec
movsb
fistps
sbb
add
fmuls
pop
add
push
push
jmp
dec
js
gs
push
pop
cmp
xchg
in
add
add
jnp
push
pop
push
shr
and
hlt
adc
movsb
jp
push
fsubrl
fs
xor
mov
push
nop
dec
in
js
sbb
sub
xor
in
bound
sti
clc
pop
sbbl
test
inc
mov
xorl
or
ds
jb
das
sbb
and
mov
push
fisubs
popa
stos
sub
and
loop
jmp
jmp
mov
cmpsl
adc
adcb
fstpl
divl
ret
pop
sbb
cmp
mov
sbb
inc
in
cltd
cmpsl
test
jae
loope
gs
jne
icebp
lock
push
out
xchg
jne
cmp
dec
iret
jp
in
xchg
int3
enter
push
push
sub
sbb
jmp
xchg
int3
and
or
cld
in
ljmp
xchg
mov
lock
std
mov
rclb
stos
jne
cwtl
outsb
mov
inc
movsl
mov
ljmp
cmp
mov
testl
out
imul
out
cli
sub
cmp
repz
dec
jae
ljmp
mov
popf
push
int
test
js
push
pop
mov
sbb
loopne
lret
sub
imul
aaa
fimull
outsl
es
and
push
lea
out
xor
xor
imul
stos
xchg
call
add
loop
rorl
hlt
mov
sub
pop
jnp
roll
mov
push
out
jge
test
jmp
and
mov
insb
loopne
in
cmp
adc
pop
mov
xor
add
stos
mov
sbb
xchg
pusha
pop
repz
hlt
test
mov
fiadds
or
test
fdivl
sub
lret
loopne
fucomi
and
xor
shlb
dec
shrb
xchg
nop
into
shr
sbb
dec
jb
sbb
hlt
iret
xor
div
shrl
mov
inc
repz
jno
nop
mov
add
stc
imul
pop
lea
pop
fwait
dec
cmp
pop
test
fmuls
outsl
sti
cmp
out
push
or
or
in
and
nop
jb
cmc
adc
mov
pusha
in
leave
cmp
adc
icebp
mov
mov
aam
stos
scas
mov
lods
out
imul
test
or
jnp
ds
stos
shll
mov
es
fldt
hlt
and
pop
mov
aad
push
dec
or
cmp
pop
aam
cmp
outsb
out
inc
inc
test
sbb
dec
test
or
jg
pop
jge
cltd
cmp
add
cmp
sbb
ljmp
out
xchg
sbb
popf
sub
xchg
int3
dec
cli
lods
aas
popa
scas
mov
daa
nop
add
and
js
jl
push
lahf
xor
lds
pop
sbb
or
call
sub
dec
cli
or
mov
xchg
rolb
mov
nop
adc
imul
data16
out
mov
mov
jge
inc
jg
xchg
pop
lret
fdivrl
sbb
xchg
mov
push
in
adc
inc
cmp
push
test
push
adc
cmp
jae
aad
cli
pusha
jle
jmp
cmp
push
cmp
sahf
rcr
test
push
in
mov
mov
pmulhuw
daa
test
insl
mov
jmp
addr16
xlat
pop
xor
xchg
loope
push
int
mov
and
mov
push
adc
orl
add
adc
xchg
insl
dec
ja
sahf
mov
pop
sub
int
xor
adc
in
pop
stc
subl
dec
stos
mov
xor
lods
cmp
dec
fists
cltd
adc
popa
xor
out
leave
icebp
int
jo
outsl
push
mov
and
inc
sbb
jae
leave
cmc
inc
lcall
cmpsl
and
rorl
nop
ret
dec
or
xchg
pop
js
out
adc
sbb
adc
lea
gs
cmpsb
cmpsl
dec
lea
inc
pop
aaa
pop
add
xlat
xor
fmull
retw
repnz
ds
cltd
adc
xor
sub
loope
xchg
test
loopne
stos
iret
ret
jmp
jle
lret
dec
rcrb
add
sbb
lcall
mov
rol
aas
test
push
adc
test
mov
mov
lret
ret
hlt
mov
scas
jmp
int3
push
mov
std
movb
sbb
movsb
inc
daa
jmp
mov
lods
lret
std
push
sbb
stos
or
test
jecxz
inc
jge
pop
pop
push
pop
fcmovu
push
jp
adc
jp
or
pop
loopne,pt
mov
mov
sbb
icebp
imul
adc
fsubs
repz
jge
pusha
sti
mov
arpl
in
pop
adc
cs
in
cmpsb
lret
mov
xchg
or
aam
pop
addr16
push
popf
inc
int
cmp
push
pop
xor
out
subb
stos
gs
leave
jge
xor
int
fwait
mov
jmp
inc
nopl
insl
adc
pop
clc
cmpsb
mov
aas
or
pop
push
mov
mov
add
and
mov
into
and
lret
inc
int
inc
ss
int3
or
and
lea
rorl
out
and
inc
lea
push
xchg
sarb
lods
xchg
jle
jge
es
je
test
mov
out
push
sbb
push
jae
icebp
lock
jg
xchg
scas
test
das
inc
jae
inc
jae
ds
jmp
daa
pop
sub
shll
sahf
pop
stos
sub
sar
xor
loopne
push
sbb
mov
pushf
mov
cmp
sbb
cmp
seto
imul
out
adc
xor
cmpsb
imul
lret
xchg
fstpl
leave
fwait
imul
mov
jbe
dec
pop
loopne
mov
movsl
or
add
xchg
sub
popf
mov
push
push
xchg
xchg
das
jbe
or
stos
mov
test
push
fdivs
mov
mov
dec
sahf
xor
jns
test
pop
lock
xorb
lods
add
xchg
mov
out
rcr
aaa
rorb
cwtl
fdivrl
scas
jg
insb
dec
sbb
lea
imul
xchg
and
add
pop
add
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
jmp
fnstenv
inc
mov
mul
push
push
inc
or
add
pop
or
dec
fs
gs
out
dec
mov
add
aaa
push
gs
dec
pop
aad
adc
adc
fildl
add
fmull
push
in
daa
xchg
xchg
cld
push
xchg
movsl
xor
out
je
dec
sbb
or
jl
mov
pop
pushl
mov
sbb
and
xchg
adc
mov
jecxz
movsb
popf
jl
and
jae
xchg
cld
pop
inc
adcl
xchg
stos
insl
scas
sbb
stos
sbb
je
adc
sbb
jb
push
popf
add
pop
xor
push
je
xchg
fbstp
loop
sbb
push
mov
outsb
sub
jae
jae
cs
mov
cmpsb
mov
xchg
insb
mov
mov
push
cld
mov
inc
mov
xchg
push
in
cs
jmp
cmp
mov
aad
in
and
in
pop
imul
push
pop
popf
out
pop
lahf
dec
add
outsb
inc
imul
inc
out
pop
ret
imul
and
mov
int3
dec
inc
andl
jle
and
repz
shll
jns
pop
call
test
pop
enter
cmc
daa
rcr
push
mov
loop
jns
lahf
mov
negl
xor
stos
mov
inc
pop
pop
roll
xor
dec
dec
pop
or
inc
xchg
sti
cwtl
add
test
inc
mov
dec
sbb
gs
pop
xchg
insl
leave
xchg
mov
ficomps
xchg
fprem
jnp
push
addb
insl
push
js
cltd
stos
mull
dec
sbb
sub
cmc
mov
sti
pop
cmpl
and
popf
push
fwait
addb
jge
and
pop
jnp
push
cmpsl
aas
mov
push
push
dec
mov
dec
adc
cmp
inc
test
add
inc
pop
sub
rcrb
add
testb
sbb
push
mov
push
lods
mov
sbb
xchg
mov
or
stos
je
adcl
jmp
push
dec
insb
in
pop
adc
dec
adc
es
mov
popf
mov
adcb
int3
adc
rcll
mov
push
andl
pop
call
jp,pt
cld
sti
mov
or
aas
or
xor
or
pushf
inc
dec
mov
push
fs
pop
and
cld
repz
idivb
adc
xchg
mov
das
ja
and
inc
push
popf
incl
in
add
lret
add
push
pop
insl
and
pop
mov
scas
inc
arpl
cmp
repz
leave
mov
adcb
imul
scas
dec
or
test
mov
cmp
cmp
in
xor
pusha
out
jl
mov
rcrl
push
lods
sbb
ss
arpl
sarl
adc
push
sub
xchg
scas
inc
xlat
mov
push
pop
cmp
and
fbld
jge
in
xchg
outsl
in
push
push
out
leave
mov
sub
ss
pop
sti
daa
mov
lock
push
outsl
xabort
aaa
pop
fildll
sahf
xchg
mov
dec
mov
mov
rcl
xlat
dec
push
sub
mov
mov
add
jecxz
test
lock
adc
clc
fsubrs
gs
jl
xor
imull
or
in
mov
sbb
sub
ret
std
and
push
push
inc
jne
push
or
negl
push
outsb
cld
lret
int3
addl
fwait
notb
pop
in
jae
dec
movsl
cmp
jmp
rol
stos
in
jg
subl
inc
push
dec
sub
xor
inc
dec
jmp
jns
xor
loope
xchg
call
clc
push
fisubrl
cwtl
cmp
mov
mov
sbb
hlt
pop
sbb
dec
jmp
ret
cs
lock
mov
ss
aas
mov
out
insb
aad
inc
xor
adc
xchg
mov
push
nop
mov
push
push
and
add
adc
jb
test
cmp
xchg
cs
scas
cmp
pop
xchg
mov
hlt
dec
outsb
push
fistpl
movsb
lods
leave
mov
lret
sub
bound
pop
inc
inc
movsl
mov
and
mov
inc
sbb
mov
mov
stos
mov
mov
daa
mov
mov
jp
jo
or
out
in
movsl
jnp
add
pop
xchg
mov
stc
test
adc
enter
int
cs
xchg
mov
lahf
xchg
ret
xchg
cmpsb
push
idivl
xchg
sub
push
std
xor
in
aaa
cs
sub
xor
out
popf
xor
lahf
push
push
and
in
sub
rcrl
jg
and
js
adc
mov
sti
add
into
rorl
nop
and
lock
andb
sahf
cltd
int3
in
sub
push
movsb
repnz
aaa
dec
bound
test
adc
pop
repz
sti
inc
mov
jne
push
lods
adc
dec
dec
jae
lods
inc
cmpsb
cwtl
jecxz
call
cmp
rorl
mov
ljmp
out
xchg
lock
fcmovb
inc
lea
outsb
fildl
adc
mov
sbb
mov
sub
das
inc
mov
or
jg
xchg
mov
xor
pop
in
sub
test
inc
sbb
pop
mov
in
push
jns
adc
in
add
xchg
sbb
pop
cmp
test
aaa
fdivl
pusha
add
out
jo
dec
dec
mov
lods
cmp
out
mov
and
dec
mov
xchg
les
mov
adc
jle
insl
sbb
fdivl
jp
stos
insb
push
push
add
pusha
mov
loop
ljmp
les
fdivrp
cmc
sti
int
rclb
das
or
fists
add
push
cmp
push
or
sbb
leave
ret
or
adc
in
jb
xor
lods
test
cltd
cld
jl
mov
xor
xor
movsl
dec
cmp
inc
xor
pop
mov
dec
bswap
insl
in
stos
gs
leave
lock
sub
mov
mov
idivl
rolb
cmovle
dec
dec
jmp
mov
addr16
loopne
cmp
sbb
sbb
adc
int
stc
push
daa
adc
or
fists
push
push
xor
inc
adc
adc
pushf
fstpt
xor
xchg
push
fs
push
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
jmp
out
fisubl
push
jne
lret
sti
xchg
dec
add
add
cmp
add
icebp
sti
or
add
icebp
xor
xor
int3
call
loopne
inc
ret
cltd
ljmp
test
cmp
fsubr
daa
dec
cmpsb
sbb
push
xchg
add
mov
xchg
mov
les
sbb
mov
and
cmpsl
fstp
daa
fildl
adc
sahf
cmpl
cmp
popf
pop
cmp
cwtl
push
lahf
add
fs
xchg
xor
push
sub
jae
or
xchg
test
bound
pop
add
cmp
and
sbb
pusha
mov
rcrb
cmp
adc
adc
fnsave
xchg
or
scas
aaa
cmp
inc
out
sub
sbb
cmp
mov
pop
cmpsb
cmp
addb
mov
jno
loope
jnp
shrb
sub
pop
jg
fimull
cmp
sub
test
lahf
inc
loope
fs
lret
sub
pop
inc
cmp
and
dec
sbb
iret
lret
lcall
pminub
rorl
inc
lods
ljmp
adc
sbbb
or
mov
inc
es
mov
imul
test
xorl
sbb
jmp
cmp
cmp
mov
adc
push
lret
mov
gs
mov
xchg
pop
ret
dec
dec
lods
stos
bnd
scas
shlb
sbb
int
xor
rcll
movsl
js
dec
inc
cmpsl
mov
jnp
aas
jg
dec
push
and
test
xchg
repnz
in
repz
call
pop
imul
test
add
jb
sbb
mov
sbb
adc
lods
add
nop
xchg
lcall
cwtl
mov
sub
in
inc
loopne
and
dec
outsb
jne
inc
loop
sahf
pop
enter
xlat
mov
push
and
mov
out
xor
xchg
loope
arpl
pop
std
pop
fwait
das
lock
pop
or
push
lock
int
fucomp
sbb
and
xlat
mov
inc
popf
stos
xchg
aas
jmp
jnp
iret
orb
xchg
and
sub
add
xor
roll
aaa
or
in
dec
push
inc
mov
cmp
in
jmp
pop
mov
dec
inc
push
out
inc
xor
xlat
in
push
fcmovbe
jge
jge
notb
mov
and
inc
enter
insl
pop
adc
lods
rcrl
aam
daa
jle
cmpsb
lods
ds
add
push
outsl
cmp
lds
aas
subb
adc
fs
xorl
std
push
and
loop
aad
insl
nop
push
sub
mov
inc
mov
cmp
leave
fiadds
out
pusha
movsb
inc
hlt
sbb
mov
dec
push
push
mov
inc
pop
push
push
and
aaa
push
jl
push
fs
dec
ljmp
sti
inc
sbb
out
add
push
sbb
jne
dec
cmp
xlat
stos
xlat
ljmp
shlb
lcall
dec
xchg
pop
adc
test
add
inc
cmp
pushf
outsl
fstpt
xchg
jp
mov
sarl
mov
cli
sbb
dec
or
inc
pop
jb
push
or
lret
cmp
insl
jb
stc
xor
mov
setle
test
or
mov
push
in
pop
xchg
add
push
sub
mov
push
cmpsl
aaa
lods
sub
inc
mov
fwait
pusha
fists
jne
adc
and
mov
inc
test
xor
sub
fwait
movl
xchg
out
push
xor
leave
push
push
mov
popf
jge
orb
sbb
jg
ja
jp
inc
sub
dec
movsl
pop
and
lods
aaa
push
dec
mov
pop
cli
sub
or
popf
mov
repz
xlat
iret
bound
add
repz
mov
cld
cmp
rclb
or
add
fisubl
test
orb
cltd
scas
lea
fs
test
push
push
jbe
add
dec
gs
sarb
movsb
outsb
icebp
icebp
mov
insb
jg
ds
push
loop
adc
lret
pop
mov
testl
ljmp
cmc
sbb
xrelease
add
jbe
mov
fistpl
fsubr
pop
jge
inc
sub
cltd
fstpl
sub
sub
cmpl
jg
or
mov
and
push
lret
incb
sub
dec
dec
mov
pop
or
sbb
push
cmpsl
test
sub
pop
xor
and
lock
xor
cwtl
add
xchg
xor
test
enter
mov
call
push
cs
push
movsl
push
dec
dec
sbb
inc
fidivrs
sbb
sbb
add
jo
jnp
dec
xchg
sub
dec
pop
jl
aad
lods
and
lahf
sub
ret
idivb
dec
dec
add
mov
fmul
cmpsb
fadds
pop
in
popf
inc
xor
iret
or
into
shl
les
icebp
and
cmc
sbb
bound
jno
cwtl
mov
popa
mov
push
stos
mov
mov
mov
sti
jo
out
xchg
fmuls
cmp
movups
dec
mov
adc
fidivs
insl
sbb
and
adcl
out
xor
cmp
call
shrb
cmp
lcall
cmp
or
cwtl
pop
int3
inc
divl
sti
ss
mov
mov
arpl
roll
pop
mov
stos
aas
adc
lock
or
mov
ljmp
popa
fucomip
pop
das
and
popa
mov
lcall
xchg
add
pop
lods
sarb
pop
jp
mov
xchg
cltd
xor
jnp
leave
mov
push
mov
lock
jmp
xchg
add
mov
push
inc
rorb
push
and
jg
lcall
dec
fstps
sub
mov
push
mov
sbb
js
ja
push
data16
shr
pop
sub
mov
dec
dec
adc
push
jg
mov
cs
popf
adc
inc
xor
add
ret
test
into
mov
push
push
push
push
call
push
push
jmp
add
lds
mov
and
add
cmpsl
mov
jno
sub
iret
stc
mov
jmp
xchg
jno
xor
dec
pop
cmpsb
and
fisttps
lret
xor
pop
push
outsb
or
shlb
or
in
pop
call
sub
xor
push
dec
xlat
into
xchg
iret
sarl
fisubl
int3
lock
lock
outsl
std
jmp
mov
push
orl
inc
jns
push
femms
mov
or
test
push
mov
repz
scas
sbb
add
push
or
lods
xchg
pop
lods
jmp
orb
imul
ss
lret
test
and
and
sbb
sub
jne
fildll
xor
cmp
sub
test
repnz
sub
push
stos
lods
sahf
push
sbb
push
push
dec
aas
dec
outsb
std
mov
or
ficomps
adc
sbb
add
cmpsl
xchg
je
adc
leave
inc
mov
xchg
es
mov
sub
in
fnstsw
dec
xorl
xor
add
retw
les
sub
lcall
leave
sbb
hlt
rorb
fwait
add
dec
in
push
dec
stos
or
fs
mov
inc
or
inc
dec
or
outsl
scas
out
clc
iret
fs
cmp
ljmp
aam
xchg
repz
add
pushf
mov
xchg
xchg
leave
add
mov
mov
js
xor
adc
cmp
cmp
pop
jno
dec
cmpsb
xor
ja
mov
mov
sub
adc
push
ds
cwtl
cmp
out
cmp
inc
in
xchg
sbb
pop
jne
jb
bound
cmpsb
clc
je
arpl
pop
mov
imul
and
clc
fbstp
pop
in
mov
or
pop
call
push
orl
pop
jns
push
or
push
push
test
mov
dec
lds
and
xchg
not
scas
aas
dec
shlb
inc
ret
ljmp
movsl
insl
imul
std
add
push
xor
out
and
arpl
bound
xor
or
jecxz
mov
dec
xor
pop
mov
dec
xchg
jecxz
sbb
repnz
adc
jg
leave
cmp
sub
xchg
mov
pop
push
jl
inc
cmp
sbb
jg
inc
sbb
push
adcb
adc
adc
fs
jbe
and
aaa
lds
leave
push
mov
dec
stc
mov
mov
insb
insb
or
scas
mov
or
xor
cmp
fiaddl
pop
mov
mov
inc
stos
pop
or
xor
stos
ret
xor
out
and
lods
mov
dec
iret
cmpsl
aad
sub
adc
ss
sbb
leave
or
pop
dec
pop
add
dec
jle
fidivs
pop
xorb
jne
movsl
out
jo,pn
ja
cmpsb
pop
and
lahf
ret
into
xchg
adc
aas
divl
test
xchg
roll
shlb
jo
rcl
adc
movsb
push
lea
cmp
mul
int
jecxz
stos
push
jg
into
mov
pop
dec
frstor
mov
xor
outsb
jae
sti
stos
jb
into
out
ljmp
and
dec
scas
shrb
notb
lds
inc
jmp
push
rcr
xchg
mov
sbb
cld
push
icebp
fimuls
insl
sub
mov
lods
fisubl
sti
push
sbb
sarb
and
loop
clc
dec
mov
mov
mov
or
jg
jle
add
cmpsb
sbb
aaa
repnz
jnp
sbb
mov
pop
push
push
icebp
mov
xor
mov
test
and
fildl
mov
or
mov
adc
xor
adc
mov
rcrl
sub
lock
mov
mov
or
and
cmp
inc
lods
aam
mov
lret
mov
aaa
xchg
hlt
cmpsl
pop
push
dec
or
push
mov
aas
fistpll
notb
in
inc
mov
dec
popl
stos
cmpsl
jl
insl
les
mov
inc
sub
xchg
push
pop
icebp
cs
pop
pop
out
dec
mov
add
cmc
sbb
mov
mov
gs
shlb
imul
aaa
xor
popf
push
or
and
movsl
mov
xchg
mov
jb
movsb
adc
stc
cs
xchg
xchg
dec
cs
es
jbe
es
fists
daa
xchg
mov
and
inc
or
or
cs
imul
jae
mov
pop
repnz
out
mov
inc
nop
arpl
rorl
lret
fisubs
lcall
xlat
and
mov
jno
push
sar
jae
aam
lret
cmpsl
fists
mov
cmp
lock
mov
mov
dec
pop
inc
test
push
push
xchg
sub
js
out
xchg
mov
mov
mov
lret
and
nop
popa
insb
ja
dec
outsb
adc
sbbl
dec
add
xchg
ret
fs
sarl
ds
jle
in
pushf
cmp
mov
cmpsl
cs
dec
ljmp
imul
out
mov
hlt
repnz
push
jmp
gs
rcl
push
pop
mov
or
pop
jmp
adc
repz
sahf
stos
scas
jno
rcr
sub
sbb
and
popf
sti
cld
mov
lds
add
scas
or
xor
ljmp
jp
sub
sub
xchg
inc
lds
push
jmp
pop
stc
addr16
fimull
dec
sub
add
lea
jbe
push
jle
xchg
bound
aad
mov
pop
sarb
dec
sbb
lods
mov
popa
adc
xlat
xor
mov
aaa
sub
add
pop
mov
movsb
lcall
push
add
lods
in
imul
sti
fcomp
je
sti
cmp
add
fdiv
lock
es
adc
das
cld
out
loop
sub
cmpl
and
and
lock
push
pop
js
pop
cmp
int
dec
nop
fs
sbb
inc
int3
push
mov
push
dec
xchg
cmp
aaa
push
xchg
cmp
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
adc
movl
mov
sub
mov
xorl
mov
addl
movl
orl
jmp
sti
out
out
jo
jo
pop
inc
push
push
mov
js
invd
add
bswap
mov
data16
es
dec
cmp
lock
or
mov
bound
popa
and
decb
push
xor
imul
xor
add
enter
pop
dec
rcl
mov
mov
inc
adc
sahf
dec
mov
mov
push
adc
push
pop
sub
cmp
mov
pop
jl
inc
jecxz
outsl
jo
cmc
adc
fldt
fldcw
test
push
and
orb
subl
out
adc
jb
dec
clc
dec
mov
jp
adc
xor
mov
fcmovu
jle
ja
pusha
out
out
xor
cmpl
das
sbb
xlat
pusha
cli
mov
adc
xchg
sbb
in
jle
pop
inc
cmpl
pop
call
xor
rorb
pop
jp
sbb
stos
sbb
push
cmp
ljmp
sbb
push
jne
test
in
mov
test
pop
icebp
adc
mov
sbb
lret
jge
daa
aaa
mov
daa
push
jg
push
add
es
pop
mov
dec
roll
fadd
stos
adc
inc
mov
mov
or
aam
and
cmp
cmp
stc
mov
ja
lds
lahf
lret
iret
test
ljmp
std
sbb
test
and
in
xchg
rcll
push
mov
dec
mov
xlat
insb
int3
add
mov
call
cmc
push
pop
cltd
mov
hlt
imul
stos
cmp
aaa
add
sub
fst
mov
sbb
adc
push
adc
repz
aam
or
stc
dec
xchg
jo
inc
pusha
dec
test
add
repnz
lcall
add
jmp
pop
jb
lahf
jae
jne
xlat
or
fwait
adc
pop
jmp
mov
into
mov
fisttpl
imul
addb
nop
mov
lret
lcall
das
sub
mov
in
dec
fsubrs
mov
sahf
add
test
or
test
sub
stos
les
pop
rcrb
lods
xor
pusha
cmpb
cmc
aad
fwait
push
xor
js
les
test
ret
adc
jnp
test
sbb
sub
fnstsw
jg
imul
xor
movl
loope
jge
mov
sbb
mov
and
sbbl
jb
adcb
and
aas
inc
sbb
and
rcl
jae
loopne
xor
movsl
dec
iret
ss
lea
roll
loopne
lret
xchg
aaa
out
sbb
xchg
into
mov
jge
sbb
nop
lahf
sbb
lcall
enter
bound
fisubrs
call
or
push
push
pop
test
sbb
mov
or
adc
mov
push
add
inc
jnp
jns
stc
lea
shrb
mov
dec
mov
adc
mov
out
mov
sar
dec
popa
mov
pop
sahf
orl
add
and
std
dec
xchg
mov
pushf
fwait
cli
push
dec
xchg
push
dec
cld
and
jae,pt
inc
lret
cmp
fwait
xor
outsb
rcrl
xor
imul
adc
mov
lock
mov
sbb
lea
lock
jmp
popa
pop
and
sbb
ret
cltd
mov
dec
jnp
sub
dec
popf
xchg
fstl
lds
inc
jns
int3
sub
sub
dec
xor
xor
insl
repz
mov
lret
xchg
or
cwtl
test
movsl
fbstp
test
lea
je
insb
inc
and
cwtl
fcom
mov
mov
cwtl
mov
les
xor
jecxz
xchg
lds
scas
or
stos
mov
dec
frstor
sbb
sbb
cmp
add
enter
mov
sbb
push
fldt
icebp
outsl
mov
stos
or
mov
push
in
xor
adc
daa
shll
push
jae
and
imul
dec
adc
cmc
cmp
lret
inc
addb
movsl
ja
ds
je
gs
insb
fiadds
jmp
out
ljmp
popa
leave
iret
mov
shll
es
pop
ror
repz
popa
mov
cmp
fistps
sbb
dec
and
out
and
shrb
imul
stos
fdivrs
inc
push
cmpsb
lods
out
iret
pop
sub
and
inc
sbb
les
cli
or
jg
jp
cltd
jns
jns
cmc
pushf
and
add
jecxz
inc
pop
test
dec
mov
jbe
mov
flds
mov
cli
lds
aam
xor
add
cli
scas
imul
sbb
int3
rolb
add
xchg
scas
or
adc
inc
fstpt
aaa
jecxz
mov
push
jle
sub
insl
outsl
into
leave
ds
mov
es
jb
mov
or
add
mov
ja
push
or
xor
xchg
cltd
pop
clc
enter
fcompl
dec
shll
add
fcmovnb
insl
jo
jb
arpl
sub
scas
ret
dec
cmp
cmp
sub
scas
fwait
ljmp
iret
adc
lret
inc
cmpsb
cmp
mov
pop
mov
aam
out
add
mov
enter
ror
pop
sub
mov
outsb
scas
ss
and
sub
push
fwait
xlat
iret
adc
xor
mov
pop
xor
xchg
das
fisttpl
jno
cli
orb
dec
aaa
mov
iret
jmp
test
mov
loop
addr16
inc
in
movb
movb
cmpl
jbe
andl
adc
jmp
pushl
call
movb
movzbl
mov
sub
imul
mov
or
movzbl
push
orl
and
mov
movb
movl
movb
subl
movb
movb
orl
mov
orl
mov
subl
add
adcl
jmp
ret
sub
shlb
mov
xor
mov
enter
loope
invd
add
btcl
add
and
cmp
add
cmc
sub
shr
mov
out
push
movsb
lods
adc
stc
mov
cmc
in
mov
dec
cmp
fiaddl
xchg
mov
pop
stos
sub
fmull
fwait
sbb
add
sbb
add
inc
xor
mov
test
imul
mov
cld
lcall
test
sbb
andb
jae
xchg
xor
cmp
in
mov
push
test
fstpt
xchg
adc
test
sbbb
pushf
dec
cmp
jne
and
std
or
les
lahf
icebp
aam
in
adc
and
inc
jle
out
call
push
sbb
or
xor
add
imul
icebp
or
fwait
int3
fistpll
ret
dec
test
arpl
pushf
scas
shlb
cwtl
cs
fldt
xor
xchg
mov
andb
sti
push
sbb
xor
sub
ljmp
xchg
mov
iret
loopne
rcll
and
sbb
jge
int3
into
push
xchg
dec
lret
mov
or
stc
stos
dec
adcb
pop
xor
and
push
sbb
add
les
in
xor
movb
sahf
movsl
ja
rorl
xor
sub
sbb
and
test
stc
cltd
lahf
sub
jge
push
outsb
mov
xor
cwtl
push
lds
fdivl
jne
popa
xor
cli
into
fidivrl
fs
mov
adc
mov
cmp
and
insb
inc
sbb
mov
mov
gs
lods
cmp
mov
mov
ret
pop
and
pop
psllq
daa
inc
mov
push
adc
adc
stos
push
sar
das
aam
lahf
shlb
les
movsl
mov
fiadds
cltd
enter
sub
mov
mul
push
lods
push
xchg
sub
gs
scas
std
push
cwtl
dec
mov
cmp
jnp
loop
mov
lahf
stos
shll
rcll
push
lcall
sbb
insb
mov
ror
fwait
clc
fstpl
mov
add
ret
js
sti
fld
xchg
and
aam
push
in
enter
mov
push
mov
and
insl
lock
into
jo,pt
jle
sbb
mov
push
mov
and
arpl
pop
rcrl
rcll
jecxz
out
dec
stc
mov
out
and
xchg
mov
test
popa
call
hlt
fcoml
sbb
jmp
outsb
inc
cmc
mov
jo
out
pusha
sets
inc
aas
xor
repz
xchg
mov
xchg
xor
fidivrl
pushf
mov
mov
fmuls
test
jge
pop
mov
pop
pop
stos
jmp
cltd
dec
outsl
push
inc
add
rcll
clc
or
mov
int3
movsb
lods
dec
mov
cmp
aad
mov
stos
jmp
in
fwait
inc
xor
adc
stos
movb
cmp
dec
mov
pop
dec
ret
loop
leave
addl
xor
insl
mov
data16
jp
aam
pop
es
aaa
call
ret
pusha
ljmp
push
pop
std
dec
fsubrl
stc
dec
nop
lock
dec
xchg
out
fldt
je
fstl
jno
sbb
cmpsl
mov
int3
xor
pop
into
pop
push
fildl
enter
ret
xchg
or
jg
pop
ss
rclb
sbb
pop
mov
pop
pop
repnz
popf
hlt
cli
push
inc
sti
ret
sarl
push
pushf
rcrl
insl
mov
mov
cltd
push
fcmovnbe
dec
ror
mov
mov
push
pushl
adc
test
rclb
fdivrl
out
push
outsl
fdivrl
mov
sbb
jle
divb
test
shlb
dec
lret
fistl
inc
push
xlat
adc
mov
lds
dec
in
sar
add
xchg
cwtl
dec
mov
jmp
xor
xchg
xchg
pusha
lods
fidivrl
bound
repz
jmp
adc
pop
cmp
lods
in
xchg
out
ja
jge
jbe
shrl
mov
jbe
fimuls
push
and
popa
icebp
fdivs
inc
xchg
ss
push
lds
mov
lahf
pop
cmpsl
lret
mov
lret
or
dec
aas
scas
mov
cmp
aaa
and
sahf
mov
bound
movsb
popa
cmc
in
add
cli
mov
mov
inc
or
cli
std
jmp
loopne
insb
mov
jg
mov
xchg
test
xor
dec
sbbb
es
rcll
lock
push
das
xlat
movsb
inc
pop
xor
mov
pop
mov
pop
add
dec
jecxz
addr16
and
ds
stos
sub
clc
cmp
cli
test
lret
out
imul
mov
push
xor
dec
loop
jo
mov
adc
movsb
shll
cmp
out
mov
jnp
adc
ljmp
pop
repnz
mov
ds
lds
cmp
sub
aas
mov
or
lds
xor
data16
mov
lahf
inc
push
mov
add
hlt
mov
lock
incb
fisttps
aad
mov
ret
lods
or
pop
sbb
sbb
xor
inc
mov
fwait
cmpsl
pushf
cmpsl
dec
mov
dec
pop
pop
push
jo
lods
cld
adc
or
test
pop
pop
inc
xor
dec
out
jne
out
and
mov
icebp
insl
fildl
out
fists
sub
lods
pop
pop
push
es
dec
cltd
push
fsts
divl
cmpsl
fbstp
mov
cmpsb
pop
push
sub
pop
push
cmpsb
movsl
inc
cmpsl
jecxz
add
pop
mov
or
imul
mov
addl
or
addl
mov
subl
and
movl
jmp
mov
hlt
add
sbb
mov
mov
invd
add
bswap
sysexit
mov
in
enter
mov
or
dec
mov
icebp
loop
mov
cmp
fcmovbe
dec
shl
cmp
mov
out
add
jo
add
add
push
idiv
out
pop
mov
in
pop
push
or
decb
ret
ja
sub
popa
sahf
mov
jb
mov
mov
fdivrs
jns
les
jns
mov
adc
cmovb
stos
icebp
sti
jle
push
push
xor
inc
dec
clc
add
fsub
push
mov
xchg
pushf
lretw
sub
mov
adc
push
movsl
pop
inc
push
cmpsl
or
mov
out
cmp
cmp
cmp
addb
jo
sbb
sub
inc
dec
mov
inc
mov
scas
jg
insl
mov
sub
imul
pop
sbb
stc
je
fcompl
repnz
in
movsb
enter
in
or
call
xlat
push
and
push
shll
daa
insb
mov
ds
push
sub
imul
lods
and
andl
xchg
shl
cmp
lret
enter
pop
div
call
in
faddl
xchg
pop
and
insb
std
icebp
push
mov
xchg
aad
scas
add
inc
add
jmp
mov
and
cltd
pop
cmpsl
mov
test
lahf
cli
int3
push
adc
mov
mov
cmp
sarb
cmc
fucomip
leave
pop
sub
repnz
es
sub
int3
pop
sbb
push
inc
mov
in
mov
jae
and
stos
popf
and
mov
mov
xor
ss
xchg
outsl
dec
out
and
cmp
mov
mov
push
mov
bound
push
cmp
inc
cmpsl
sub
mov
rcrl
adcl
icebp
imul
jae
sub
dec
fs
mov
and
jae
hlt
test
lret
adc
dec
or
mov
or
pop
sbb
xchg
imul
cmp
scas
mov
pop
addr16
les
mov
xor
stos
fdivr
mov
sbb
add
adc
pop
mov
addl
mov
mov
xchg
mov
cld
outsb
ja
push
mov
lahf
add
adc
testb
or
fldenv
cmp
mov
cld
scas
xchg
stos
fnstenv
jnp
sub
fiaddl
call
pop
mov
mov
das
cmp
push
mov
cmp
adc
add
adc
cmpsl
gs
popa
cld
lds
enter
inc
xor
scas
shl
jg
stc
sahf
add
scas
popf
repz
imul
jmp
pop
cmp
or
fildl
sti
fisubl
std
cmpsb
lods
sbb
inc
mov
orl
popf
aaa
push
xor
lahf
dec
aad
sbb
xchg
out
cmp
jbe
mov
mov
xchg
es
push
inc
loop
mov
pop
in
fwait
aas
mov
rolb
stos
or
mov
sub
les
rep
mov
pop
stos
test
dec
dec
mov
sub
loope
push
rcrl
pop
js
mov
push
pop
xchg
dec
and
clc
mulb
lea
sub
mov
lahf
outsl
jo
pop
into
cmp
lods
fs
fisubs
inc
sarl
dec
insl
mov
call
pop
in
dec
shlb
out
xor
mov
arpl
mov
add
bnd
lods
add
fwait
sbb
mov
dec
mov
fsts
pop
inc
fsubrs
push
mov
mov
fstp
insl
out
ss
cmp
dec
lret
data16
fsubrl
lahf
or
daa
ret
sbb
in
jns
stos
das
jbe
fidivl
jle
jg
cld
cmc
mov
outsb
loope
in
test
cmp
stos
pop
sbb
push
lret
or
hlt
sbb
imul
push
push
jp
je
ja
mov
sbb
xchg
mov
out
push
mov
int
xlat
fldcw
js
push
repnz
or
pop
lret
cmp
xchg
lret
jne
fwait
jmp
shlb
fwait
xchg
inc
or
pusha
sbb
addl
xchg
mov
shll
xchg
loope
or
sub
test
and
mov
outsl
jno
push
xlat
mov
ficompl
sbb
mov
mov
sbb
dec
aas
or
pop
xchg
ss
jmp
cld
fwait
in
call
sub
hlt
pop
test
aaa
dec
lods
mov
lcall
sti
jb
adcb
loopne
ret
pop
add
popa
cmc
cs
jb
push
mov
or
ds
sub
push
jne
int
sbb
add
dec
pop
dec
in
fcoml
les
in
push
mov
rol
dec
xchg
flds
or
aas
jno
jmp
lcall
or
mov
add
data16
roll
js
inc
test
pop
sub
mov
sbb
jno
rolb
lods
pop
xchg
in
cmpsb
outsl
mov
mov
stos
popa
arpl
adc
sub
pop
sbb
ss
loopne
lods
rep
dec
testb
cwtl
sbb
sbb
jb
rcr
cmp
das
ret
xlat
jecxz
and
outsl
lea
xchg
testb
ret
out
fstpl
xchg
push
adc
mov
fstpl
fcmovu
test
loop
repnz
dec
test
ret
cmpsb
jns
sub
shlb
leave
xor
ljmp
lods
cmp
pop
pop
xor
and
jo
or
scas
loopne
stos
pop
stos
lcall
pop
jns
cmpsb
mov
cmpsl
popf
dec
mov
cmp
ja
mov
mov
sub
mov
cmpl
jl
andl
mov
and
jmp
push
push
push
call
mov
mov
movzwl
movzwl
shr
addl
or
sub
movl
mov
orl
movb
movb
sbbl
mov
mov
xorl
xor
addl
add
xorl
movzbl
movzbl
sub
cltd
mov
adc
mov
jmp
mov
pop
push
and
sub
mov
mov
lahf
ret
invd
add
jne
adc
push
xor
xor
cs
mov
in
test
mov
nop
gs
pop
ret
hlt
adc
fsubr
and
imul
mov
stc
loop
pop
loop
xchg
aaa
dec
xchg
imul
mov
sbb
jecxz
mov
lret
mov
sub
ljmp
xor
lods
repnz
pop
mov
push
cwtl
pop
mov
mov
cwtl
imul
ficoml
xchg
cltd
gs
mov
loopne
sbb
daa
add
inc
mov
sbb
ss
arpl
push
mov
sbb
or
sub
ror
or
enter
hlt
sub
mov
mov
dec
imul
add
inc
xchg
stc
addl
or
fistps
sbb
add
test
outsb
mov
push
mov
jnp
cmpsl
xor
stos
jg
inc
lea
push
nop
adc
mov
sbb
push
jle
inc
xor
mov
mov
lahf
jp
icebp
imull
cwtl
shrb
sbb
mov
pop
sbb
loopne
cmp
adc
cmpsb
aad
mov
gs
outsb
jl
dec
js
jae
mov
sbb
clc
pop
cmp
ljmp
mov
out
jno
aaa
and
lcall
push
aaa
mov
js
pop
pop
pop
inc
in
nop
add
fsubrl
mov
rcrb
shlb
ss
fldcw
adc
pop
out
sub
dec
or
adc
xchg
aas
xchg
dec
out
or
jmp
in
stos
fimuls
mov
shl
jnp
fnstcw
xor
mov
add
arpl
xchg
scas
cwtl
nop
cwtl
rcrl
loopne
inc
jae
adc
sbb
loopne
dec
mov
lods
in
add
sahf
xchg
cmp
adc
inc
decb
jae
inc
fucomp
lods
dec
push
cld
pop
repz
std
pop
add
cmp
add
or
mov
scas
xchg
sbb
aam
sub
mov
not
sub
pop
or
mov
xchg
pop
pop
movsl
push
sbb
and
dec
push
stos
divl
xchg
fistpl
ljmp
xor
xor
xor
ja
sarb
sti
push
xor
xchg
jle
mov
ss
hlt
push
popa
and
add
mov
push
or
aam
push
mov
xchg
movsb
mov
cmpsl
mov
pop
xchg
les
sub
popf
push
mov
inc
push
ret
push
inc
xchg
jb
add
lods
jno
outsb
scas
mov
adc
fsubl
mov
dec
mov
lcall
fmuls
inc
dec
push
pop
aas
in
xchg
gs
mov
fdivrs
jl
ret
inc
mov
dec
dec
or
test
or
test
sbb
test
jb
push
adc
mov
jb
pop
loopne
cmovb
mov
out
subb
mov
sbb
cmp
jno
call
sub
movsb
pop
arpl
push
ret
mov
push
lret
cwtl
dec
xchg
cmp
push
pushf
sub
pop
sahf
jecxz
fisttps
and
mov
shl
call
ljmp
inc
sbb
movsb
dec
fdivrl
or
cs
and
fs
in
dec
mov
or
fidivs
lret
xchg
sub
jmp
ror
aaa
sbb
mov
enter
ret
push
dec
out
sbb
and
in
gs
pop
decl
mov
dec
xor
jmp
daa
cmc
sahf
in
xor
ljmp
fcompl
jmp
jns
in
shrw
dec
clc
rcr
fsubrl
inc
in
fsubl
or
jo
mov
xchg
iret
roll
arpl
sbb
cmp
push
or
pushf
or
adc
fisubrl
jns
aaa
cmc
mov
pop
fwait
ljmp
pop
push
jbe
inc
dec
outsb
mov
sbb
mov
jo
pop
mov
shl
out
inc
adc
xchg
dec
pusha
dec
ror
sub
pop
mov
das
inc
clc
jg
jp
lret
xchg
xchg
in
lcall
shrl
inc
pop
mov
dec
mov
loope
push
es
cmc
rcll
sarb
push
sahf
xor
sbb
mov
lcall
jmp
loop
cld
mov
cmpsb
jecxz
xor
fwait
mov
les
test
in
test
out
int
nop
addl
xor
or
jg
in
push
push
cli
pop
imul
addr16
and
call
shl
repnz
mov
mov
outsb
imul
pop
pusha
inc
popf
jns
jae
ljmp
nop
imul
shrb
popa
push
lcall
roll
mov
mov
jecxz
lods
subb
push
imul
fmull
dec
sbb
jmp
jmp
insb
add
add
insl
mov
adc
aaa
cvttps2dq
adc
xchg
ljmp
xor
les
cli
dec
and
push
mov
and
fidivs
and
sbb
cs
ss
xor
sub
in
clc
fists
into
pop
pusha
cmp
mov
call
xor
test
mov
in
mov
pop
pop
xlat
mov
ret
ss
ss
mov
pop
add
push
sti
add
or
push
or
dec
mov
xchg
fwait
inc
data16
xchg
add
inc
xchg
jl
popa
push
enter
scas
add
inc
pop
nop
adc
cmp
push
lods
mov
push
mov
dec
jl
hlt
xor
clc
jmp
pushl
ja
js
adc
idivl
sbb
test
add
add
jl
and
jmp
push
call
jmp
sub
push
xchg
jne
jle
push
ds
push
cwtl
test
prefetch
sbb
xchg
cmp
cltd
or
mov
repz
ljmp
aaa
jp
xchg
sbb
xor
imul
add
ds
sbb
movsl
je
scas
lods
push
scas
jecxz
ror
enter
or
cmpsl
scas
mov
ja
and
dec
adcb
jl
pop
xchg
pop
cli
stos
or
inc
cld
pop
xchg
jb
shrl
cmc
in
fcomps
pop
test
pop
fnstsw
jns
mov
outsb
sbb
sti
out
loop
jp
iret
pop
mov
adc
jg
adc
cli
in
pop
ret
sbb
bnd
insb
sti
je
insl
jbe
dec
sti
inc
add
call
je
dec
xor
mov
popf
add
js
sbb
push
mov
push
or
clc
cwtl
mov
jmp
dec
or
popf
testb
out
popl
sbb
sbb
xlat
sbb
pop
mov
inc
or
pop
mov
jg
loop
push
fucomip
mov
ja
mov
fdivrl
mov
js
mov
mov
out
aad
cmp
adcb
add
mov
ret
bnd
jge
icebp
push
mov
mov
fwait
leave
in
cmpb
and
mov
cmp
lods
push
push
add
mov
mov
rcrb
lods
lea
jmp
ja
sbb
mov
enter
sbb
cltd
inc
sbb
adc
inc
or
shr
sbb
mov
mov
jb
loop
mov
dec
jmp
xor
fcmovnbe
shlb
idivb
cld
cmp
jns
addr16
icebp
jp
movsl
push
int
mov
pop
lret
sub
test
push
or
cmc
dec
dec
les
or
pushf
movaps
vphaddbq
sub
add
filds
mov
into
lahf
subl
pusha
aas
cltd
mov
dec
add
pop
sbb
adc
inc
repz
pop
lret
in
mov
decl
cmp
ficoms
xor
fdivr
lahf
push
ljmp
jne
and
enter
and
xchg
ds
mov
repz
test
out
lods
ret
push
sar
dec
test
cmp
sub
push
stc
xor
sub
stc
dec
mov
incl
adc
jae
push
jge
in
mov
stos
jae
outsb
xor
mov
fcoml
jne
or
sbb
ja
loopne
jns
jne
icebp
lret
jge
scas
cli
adc
cmc
adc
cmp
push
xor
mov
inc
fwait
push
lahf
dec
fcomps
mov
jge
loope
movsl
jg
ficoms
or
add
pop
arpl
push
cli
inc
and
xor
jae
hlt
fistpll
sub
or
sub
cs
clc
and
and
in
sub
rol
or
test
sbb
pop
mov
mov
sbb
movsb
jp
insl
xor
aas
enter
js
inc
jl
cmp
mov
cs
notb
sub
or
repz
pop
adc
daa
add
pop
loope
add
out
in
mov
in
insl
adc
adc
dec
mov
imul
mov
addr16
js
aaa
inc
mov
sets
xor
pop
push
iret
ljmp
and
lods
mov
idiv
lock
adc
loope
popf
faddl
fstpt
and
ficompl
cs
xlat
repnz
movsb
sbb
adc
pushf
in
jnp
jge
push
adc
adcl
les
loope
cmp
mov
dec
inc
jne
and
push
out
jnp
jmp
nop
jmp
dec
push
stos
pop
adc
outsl
aad
aad
pop
pushf
sahf
int
cltd
rolb
fwait
cmc
mov
sbb
jp
loope
fimull
dec
popa
jecxz
or
cmpsl
mov
jecxz
xchg
outsb
mov
mov
out
ljmp
pushf
fcoml
push
adc
add
push
dec
push
shll
push
leave
push
aad
lods
xor
lds
popf
push
add
inc
movsw
jb
mov
movsl
outsb
cmp
dec
xchg
sub
ret
mov
jne
push
cli
push
mov
push
dec
es
pop
and
adc
jl
cmp
cmp
cmp
pop
insl
xchg
addb
sub
pop
push
adcb
cltd
clc
faddl
sub
fsubrs
xlat
jne
mov
mov
adc
test
dec
scas
lcall
movsb
xor
dec
xor
daa
lret
cli
adc
pop
repnz
test
and
or
aam
mov
cmp
rorb
jmp
int3
cmp
xor
pop
pop
mov
shll
test
push
pop
sbb
std
lcall
mov
pop
andl
rcrl
insl
jno
in
cmp
shll
mov
xchg
cmp
mov
clc
aam
sub
mov
sbb
rcl
outsl
mov
lds
shr
icebp
out
dec
fs
out
pop
pop
js
jo
cltd
mov
cltd
push
push
dec
out
idivb
lcall
cmp
fisttpll
stos
mov
push
dec
pop
js
negb
mov
lcall
divl
jbe
mov
idivl
sbb
inc
inc
inc
cltd
and
mov
xchg
mov
mov
test
loopne
mov
stc
sbbb
jb
mov
jne
and
mul
mov
in
stc
xchg
mov
sahf
out
xor
lret
mov
xchg
adc
aam
jp
xchg
ss
sbb
add
add
xchg
ja
jns
pop
idiv
jmp
mov
xchg
mov
out
push
scas
popf
invd
add
xorps
cmp
je
bound
and
mov
push
mov
sbb
cwtl
pop
mov
mov
push
dec
pushf
xor
cltd
inc
xchg
mov
cmpsb
mov
idiv
cwtl
push
test
subb
orl
push
std
pop
jl
and
push
or
xchg
push
inc
test
push
and
add
dec
test
insl
je
loope
sbb
mov
mov
scas
insl
xor
mov
jp
sub
out
pop
push
std
mov
loopne
shlb
sbb
inc
push
inc
outsb
movsl
or
jg
xor
mov
int3
call
stos
sbb
pop
sub
push
int
cmpsl
dec
push
fwait
popf
repnz
push
in
sbb
cwtl
pop
shrl
movsl
inc
outsl
push
gs
inc
adc
dec
adc
adc
sub
mov
pop
add
js
pop
inc
fsts
mov
mov
xor
fwait
xchg
jo
outsl
add
mov
loope
lods
cmp
test
mov
inc
jp
adc
les
xchg
push
xor
mov
pop
fisubl
bound
cmp
pop
ffree
nop
in
imul
mov
xchg
xchg
sub
ds
push
pop
clc
add
sbb
mov
out
jge
jb
pop
or
fwait
xchg
nop
ljmp
inc
push
fs
inc
popa
mov
mov
push
push
dec
jle
add
jmp
inc
xor
and
ret
and
bound
pop
xor
jg
jge
ja
sub
and
or
mov
stc
testb
pop
stos
mov
cwtl
mov
rclb
ficomps
cwtl
inc
aas
sbb
movsl
testl
mov
push
mov
mov
inc
xor
pop
jge
sub
fnstsw
mov
add
jbe
sarb
stos
das
xorl
out
popa
or
addr16
jo
xchg
sbb
das
insl
inc
in
add
arpl
inc
or
xchg
cltd
lods
addr16
and
loop
add
cmp
stc
shrb
dec
cwtl
pop
fldlg2
insb
sbb
lods
mov
push
xchg
or
mov
jmp
mov
xchg
scas
addr16
pop
cmp
mov
aam
js
lahf
mov
lock
mov
repnz
and
movl
es
inc
pop
stos
fcomps
sub
and
test
mov
ret
xchg
sarb
dec
shl
mov
test
mov
sbb
clc
test
stos
mov
mov
push
push
inc
in
fldt
lahf
sbb
outsb
push
xchg
outsb
and
insb
inc
out
out
lea
stos
xchg
sbb
mov
push
ja
pop
sbb
aas
xor
mov
std
mov
mov
arpl
test
push
and
rcr
mov
hlt
ret
aad
cli
rorb
or
das
add
sarb
lea
mov
scas
in
cltd
loopne
mov
push
bound
insb
or
xchg
pop
sbbb
fsubl
mov
daa
add
sti
inc
ja
rol
enter
fstpl
xlat
inc
and
gs
addr16
mov
cmpsl
pop
insl
sbb
scas
jmp
shlb
fwait
mov
mov
jns
adc
mov
add
bound
pop
adcb
dec
jmp
cwtl
mov
jl
jge
and
aad
je
jmp
out
mov
aam
push
add
mov
lds
rorl
adc
bound
loope
xchg
mov
pop
cmp
mov
mov
xor
and
divb
jno
pop
mov
mov
jmp
jno
jno
and
mov
test
out
test
xor
or
lea
push
adc
popf
and
fnstcw
loopne
into
fnstcw
fstpl
stos
aas
add
cmp
ljmp
pop
lods
sbb
into
and
push
fiadds
in
sub
sub
or
lea
pop
mov
testb
flds
push
pusha
pop
pop
add
rcr
loopne
pop
idivl
push
mov
cmp
add
out
aam
adc
push
out
mov
or
nop
xchg
lret
mov
mov
push
icebp
jecxz
pushf
xor
sbb
pop
jle
lea
jmp
cmovg
aad
mov
or
test
lret
lock
imul
mov
pop
dec
adc
pop
inc
push
pop
mov
pop
xchg
lods
cmp
and
iret
daa
fucomip
clc
loopne
add
jmp
sbb
mov
imul
int3
imul
data16
sti
mov
sti
inc
dec
sub
ss
test
sub
rcr
jecxz
mov
pop
sub
mov
sbb
lods
lods
xchg
subl
repnz
imulb
jo
cmp
negb
loop
push
and
fwait
dec
fcompl
fildl
add
fstl
pop
div
push
loopne
jbe
out
dec
dec
inc
jb
xchg
fadd
xor
inc
push
mov
sahf
fwait
cld
insl
jbe
push
xchg
mov
mov
push
popa
popa
pop
jbe
mov
jns
fdiv
dec
pop
cmp
jb
push
lea
adc
xlat
push
inc
inc
push
enter
jl
adc
lret
pop
jo
sub
pop
clc
fsubrl
cmpsl
jmp
jno
jge
mov
jg
cli
jno
push
shl
movsb
fwait
or
popa
aas
or
popf
cs
movsl
int
js
jbe
jns
jge
stos
stos
mov
cmp
icebp
add
inc
out
cmpsl
mov
andl
jmp
dec
mov
aaa
es
mov
dec
test
invd
add
pcmpgtd
fwait
mov
imul
mov
or
sub
ljmp
mov
dec
push
pop
pop
adc
pop
inc
xor
les
bound
mov
gs
xchg
addb
sub
xchg
jp
inc
mov
pop
daa
jnp
pop
int3
inc
adc
dec
sbb
test
popa
push
hlt
xchg
sahf
lods
xor
push
mov
push
pop
pop
or
nop
addr16
sbb
fistpl
sbb
add
push
imul
cmpsl
fsubrl
xchg
rol
mov
adc
repz
out
faddp
imul
mov
test
scas
push
dec
cs
cmp
inc
add
xchg
cld
ret
fadd
fs
test
fdivr
and
lret
and
dec
lods
mov
jae
sbb
inc
adc
cs
mov
repnz
loopne
or
mov
bound
in
lea
shlb
pop
pop
push
push
decl
sbbb
shll
xchg
ficompl
add
or
jns
cli
dec
push
sub
push
std
repz
xor
mov
in
pop
cltd
lea
or
test
push
or
test
popf
mov
or
dec
aad
sub
push
daa
or
enter
test
jo
or
inc
data16
push
xchg
and
ljmp
jp
in
xor
adcb
das
scas
push
mov
adc
repz
xchg
xchg
jp
xchg
ret
test
and
ficompl
hlt
loopne
sarb
test
clc
shll
or
popf
test
push
dec
mov
fiaddl
add
xchg
loop
out
or
dec
lock
popf
xchg
lret
xchg
pop
xor
fdivrs
jmp
cmp
rcrl
dec
or
movsl
adc
ja
sbbl
out
dec
cmp
int
mov
cltd
xchg
sar
dec
add
leave
sub
mov
fwait
out
fsubl
cvtps2pi
mov
fistps
inc
or
mov
add
and
cmpsl
add
lods
shlb
add
int3
cmc
enter
aam
xor
ljmp
jl
sbb
scas
mov
jns
adcl
mov
andl
sbb
sbb
mov
cmp
movsl
cmp
and
scas
fidivs
inc
mov
jmp
and
mov
sahf
pop
lret
add
cmp
inc
pop
adc
sub
cwtl
push
inc
jo
push
lahf
lcall
arpl
movmskps
std
in
ljmp
rol
scas
mov
loope
aam
decb
pop
stc
mov
xchg
lahf
lods
inc
cli
or
fildl
je
imul
and
les
pop
xor
shll
inc
insl
pop
dec
xchg
scas
scas
mov
and
jmp
orl
rorl
mov
das
pop
arpl
jns
mov
push
enter
add
lret
add
nop
pushf
lret
sbbl
and
leave
xor
mov
imul
jge
into
dec
mov
and
insl
or
jmp
push
add
and
dec
sbb
cltd
nop
lret
in
and
inc
sub
jg
fiadds
or
dec
cmp
lds
add
mov
pop
add
jnp
sbb
imul
inc
mov
mov
mov
movsl
jmp
or
add
aaa
scas
test
dec
sbb
mov
cmc
push
enter
pop
mov
stos
fisubs
out
jnp
mov
popa
mov
xor
data16
or
hlt
or
dec
inc
mov
rcr
cmp
iret
scas
cli
cmc
dec
iret
sub
lds
xchg
mov
aam
clc
fsubr
inc
pop
addr16
sbb
cwtl
sysenter
fs
push
iret
ret
dec
xchg
int
inc
scas
jge
cmp
icebp
imul
notl
push
xor
les
inc
xor
mov
push
gs
repz
sti
int3
cmp
mov
lock
loope
test
sub
push
inc
aad
xchg
dec
jl
jo
hlt
lcall
notb
and
mov
jne
inc
cltd
popa
pop
lock
addl
jp
or
out
add
lock
fdivs
outsb
test
leave
fstl
pusha
les
dec
sbb
mov
mull
les
sbb
mov
jge
lods
ljmp
jge
xor
das
ljmp
or
subl
out
jo
dec
fcoml
fsubl
frstor
jge
repnz
mov
std
pop
out
dec
mov
fs
or
push
les
lds
adc
sarl
or
aad
pop
adc
ret
pop
push
pop
inc
mov
dec
dec
xor
mov
mov
mov
imul
out
xor
jbe
into
sub
loop
lret
adc
test
push
loopne
mov
pop
add
lock
scas
push
test
je
lea
jns
test
pop
loopne
dec
stc
outsb
mov
cmpsl
aaa
cmpb
aas
dec
sub
icebp
negb
cs
repz
or
scas
shll
repz
fdivl
push
add
cld
and
and
push
inc
pop
add
pop
inc
sarl
fldcw
adc
sti
sbbb
call
cld
popa
dec
mov
das
lahf
mov
in
cmp
mov
or
ss
mov
orl
add
movzbl
movzbl
orl
jmp
insb
lods
push
repz
je
xor
or
clc
mov
invd
add
bswap
push
call
push
jb
inc
push
mov
adc
and
dec
push
mov
test
cld
pop
sbb
jnp
outsb
and
mov
mov
mov
mov
mov
jge
jbe
xchg
lock
lret
subl
inc
std
or
ja
imul
pop
mov
mov
cmp
sbb
mov
mov
mov
adc
and
mov
xchg
or
inc
addr16
call
push
add
inc
rcrl
stos
in
dec
xchg
jb
lret
adc
test
popa
bound
lret
subl
jmp
int
div
inc
and
push
mov
sbb
stos
shll
das
stc
adc
movsb
mov
mov
cmpsl
and
dec
dec
lret
imul
push
xchg
cs
sbb
ret
hlt
repnz
movsl
push
jne
pop
imul
mov
pop
loop
jmp
in
xchg
movsl
mov
dec
test
dec
cmp
push
or
cs
aas
int3
lcall
out
pop
jmp
and
jle
push
jl
inc
xchg
mov
xchg
cmp
je
dec
test
push
insb
and
lds
and
leave
jo
fcmovne
je
fs
dec
out
jnp
sub
pop
frstor
and
jno
mov
xchg
mov
ds
xlat
jl
rdmsr
pop
into
out
jmp
push
inc
sbb
mov
mov
mov
pop
xlat
fnstsw
and
lods
push
popf
mov
scas
lods
mov
ja
xor
icebp
stc
push
inc
mov
scas
lret
lret
add
faddl
mov
sub
push
push
test
jl
stos
fisttpl
mov
sarl
subl
mov
push
mov
jge
leave
xlat
mov
jb
cmpsb
mov
and
push
xor
ja
inc
jbe
int3
mov
dec
push
pop
or
mulps
call
or
and
pop
jo
je
pop
jle
pop
lahf
and
ljmp
push
jle
xchg
repnz
shlb
xchg
jmp
das
out
inc
xlat
js
imul
in
xchg
mov
xorl
mov
xor
jbe
inc
in
cli
aas
sub
jl
pushl
jle
push
sub
mov
pop
out
outsl
cltd
mov
aaa
popf
sbb
loopne
jmp
sub
xchg
je
and
loop
ror
int
push
dec
insb
rcrl
mov
jg
mov
call
aaa
sub
add
dec
fisttpll
cmpsl
std
les
in
or
mov
adc
cs
gs
xchg
xor
adc
mov
inc
xchg
ja
pop
sahf
stos
push
test
hlt
add
int
loope
ret
repz
mov
or
popf
call
adc
cmp
push
or
fists
xor
call
jmp
aam
mov
xlat
out
sub
mov
or
pop
call
push
aaa
in
mov
stos
adc
subb
xchg
fwait
outsb
andb
movsb
push
pop
sti
cmpsl
icebp
insb
push
rcl
ret
repnz
test
incl
int
mov
in
mov
xor
outsl
fnsave
sbb
inc
cs
dec
adcb
mov
or
lods
push
lods
call
jne
jecxz
pusha
faddp
cmp
mov
mov
xchg
cmpsl
jecxz
push
je
mov
add
pop
xchg
insl
lods
repnz
sarb
adc
popa
les
fldt
pop
das
cmc
fistps
push
push
pop
data16
data16
dec
cmp
enter
and
pop
and
rcll
arpl
pop
and
popf
mov
mov
adc
cmpsl
mov
rorb
lcall
lods
les
mov
jbe
jmp
shr
lcall
movsb
lea
mov
sub
add
xchg
js
dec
pop
arpl
cmp
jb
pop
xor
mov
dec
push
rcrl
mov
sbb
push
les
out
dec
int3
push
scas
inc
mov
push
mov
addl
xor
loope
inc
cmpl
subl
in
sub
xchg
orl
and
mov
jle
push
repz
sahf
xchg
in
dec
out
push
arpl
mov
mov
repnz
iret
inc
mov
mov
mov
fldt
fnstsw
dec
xchg
pushf
xchg
and
in
sub
mov
je
int3
in
sbb
xchg
sub
mov
ds
jmp
jl
push
sbb
push
in
leave
lock
fsubrp
mov
sarb
mov
dec
ds
ds
mov
xor
imul
cmpsl
push
inc
ja
add
bound
and
or
scas
and
xchg
ljmp
lods
sbbb
jb
ljmp
push
fistps
cmp
pop
fstl
sbb
xchg
sbb
jmp
test
es
xchg
fabs
pop
fidivrl
jl
pop
iret
iret
dec
xlat
sbb
fsubr
add
popa
mov
addr16
pop
dec
pop
mov
jne
lods
and
sbb
xorl
sbb
test
xchg
inc
ss
inc
fucomi
dec
movsl
inc
jne
inc
jno
xchg
cltd
cli
jle
sub
mov
ss
aam
inc
mov
popa
insb
or
loop
push
bound
dec
jecxz
xchg
dec
cmp
jnp
in
dec
arpl
xor
pop
sub
dec
aas
cmp
adc
pop
int3
lcall
das
mov
lea
sbb
xor
cltd
xorl
idiv
movl
mov
movl
cmp
movl
jmp
fidivl
push
or
fmuls
xor
mov
add
lfs
cwtl
idivb
sti
ret
out
xlat
into
ss
mov
inc
push
cmc
outsl
iret
sbb
push
or
push
sbb
dec
and
push
fmul
dec
add
jno
xor
ljmp
sbb
loop
divl
mov
fwait
nop
lock
adc
add
cmp
stos
pop
loope
pop
and
push
out
addr16
adcl
adc
inc
sbbb
mov
es
das
jge
xlat
mov
lret
lods
xor
sub
loopne
enter
movsb
push
test
mov
or
ljmp
or
and
or
rorl
push
sbb
test
add
into
gs
loop
aad
out
push
mov
fsubr
bound
cld
in
adc
clc
jo
and
inc
repz
jp
daa
leave
ds
aam
cmpl
sub
jl
test
mov
sahf
jmp
jg
or
cmp
jb
lahf
cld
mov
lods
int
lahf
mov
shll
outsb
ror
clc
out
test
scas
pop
pop
lret
je
out
addb
pushf
dec
ljmp
or
test
arpl
out
ret
add
adc
adc
shl
dec
mov
daa
outsb
adc
dec
js
lret
rol
inc
pop
pop
clc
and
pop
or
test
xchg
imull
outsb
or
cs
jo
mov
icebp
cld
cld
decl
fnstenv
lock
push
jp
div
lret
enter
sub
call
aad
in
pop
xor
mov
mov
imul
push
loop
out
xchg
ja
nop
es
add
mov
pop
mov
in
idivb
cmp
mov
shlb
sbb
inc
xor
mov
inc
cmpsb
out
add
add
call
or
jle
xlat
in
dec
inc
cmpsl
and
xchg
out
loopne
adc
notl
sbb
fldcw
out
xlat
ds
mov
ja
sbb
mov
jno
fstps
pop
std
cmp
mov
pop
fisubrl
sti
pop
mov
insb
fwait
mov
hlt
dec
or
out
push
mov
cmc
movsb
push
sbb
add
jnp
inc
int3
mov
add
in
xor
stc
insb
out
xor
sti
xorl
stos
fdivrs
aas
push
or
shlb
inc
cvtdq2ps
mov
sar
sti
int
arpl
push
sub
push
push
neg
outsb
sub
aam
sbb
mov
mov
es
push
out
adc
adc
loopne
fidivrs
xchg
cmp
adc
sti
pop
pop
pusha
and
jmp
hlt
in
xor
fisttpl
dec
add
jbe
push
ja
popf
outsb
fcmovb
push
mov
jg
mov
fadds
jne
rcrb
daa
orl
mov
popf
fdivs
push
pop
lahf
push
lds
push
pop
ja
shl
sub
pop
das
les
inc
add
push
lods
sub
add
fbstp
ds
in
in
cmc
fwait
dec
insl
pop
in
xchg
sub
push
inc
divl
inc
inc
dec
mov
push
addr16
mov
cld
movsb
add
stos
xorl
dec
mov
push
andb
rol
add
or
xchg
mov
lods
push
ss
xchg
cltd
lret
adcb
subb
jle
ficoml
cmp
int3
mov
push
mov
or
dec
aam
sbb
adc
jno
in
negb
bound
insl
fiaddl
or
jmp
leave
lcall
jae
push
out
sahf
mov
adc
aad
call
push
xchg
add
xor
mov
fnstenv
sbb
xchg
push
fsubp
out
mov
jnp
mov
ljmp
les
fcmove
xor
pop
mov
lcall
int3
mov
adc
aaa
sbb
gs
mov
fsubr
popa
lods
mov
not
or
fmul
into
insb
repz
aas
mov
adc
fcmovnbe
sbb
push
cmc
dec
mov
push
mov
sbb
bound
cmpsl
xchg
into
clc
pop
or
sub
sub
in
inc
lea
dec
or
cmc
iret
test
gs
push
mov
mov
pop
jg
cmc
mov
inc
call
sahf
mov
sahf
pop
repnz
popl
xor
pop
mov
xchg
add
push
dec
cmp
movl
or
cmp
pop
mov
ja
push
pusha
add
add
test
outsb
xor
cld
and
test
das
add
les
jns
adcb
clc
pusha
or
fnstenv
imul
outsb
jmp
mov
add
add
fsubrp
cltd
aaa
or
in
pushf
or
mov
loop
leave
xchg
jne
loopne
add
mov
loop
mov
jae
dec
jno
icebp
xchg
add
cmpsb
int
outsl
mul
insb
push
xor
push
ret
frstor
pop
movsb
push
test
fadd
xor
adc
leave
out
xor
sub
in
adc
dec
jb
ret
pop
jae
xorl
test
jecxz
cwtl
xchg
mov
xor
je
jmp
lret
adc
fcoml
cmp
or
and
mov
xor
jg
jecxz
loop
jmp
add
outsl
mov
rol
xchg
mov
stos
testb
or
mov
jl
and
sub
push
je
dec
sbb
fisttpll
jns
add
sub
dec
in
xchg
and
pop
mov
push
ret
ret
push
aas
and
or
sbbl
movl
cmpl
jb
mov
sbb
jmp
push
call
movl
mov
mov
push
push
adcl
push
push
andl
call
xor
xorl
xor
orl
or
or
movl
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
dec
and
xchg
sub
push
mov
iret
imul
setg
clc
leave
idivb
inc
inc
outsl
cmp
cmpsb
test
adc
xchg
dec
and
orl
or
push
mov
mov
fcmovnu
ljmp
scas
mov
subl
fstpl
roll
in
mov
jne
rclb
xor
fidivs
lods
inc
sub
ret
xchg
inc
imul
xor
push
mov
int3
scas
cmp
add
xchg
mov
into
dec
bound
aad
jmp
push
addr16
in
pop
pop
loope
mov
mov
push
daa
test
xchg
pushf
cltd
enter
inc
xchg
es
js
cmpsb
mov
push
js
and
std
rcl
lret
push
pop
jns
out
ljmp
mov
sbb
jns
jne
mov
push
fnstsw
add
iret
bound
bound
clc
jnp
sahf
jne
xchg
or
or
xor
xchg
pusha
es
cmp
or
stos
mov
or
jo
insl
and
sbb
jb
push
mov
popa
in
pop
adc
mov
push
movsb
shl
pushf
enter
jecxz
push
cmp
cmp
xor
push
dec
sbb
or
cwtl
test
cltd
xlat
sti
or
loope
mov
movsb
mov
or
leave
jae
adc
lret
jb
fldenv
imul
ror
mov
out
cmp
dec
xlat
xor
xlat
dec
xchg
outsl
mov
or
js
lock
inc
stos
out
fwait
iret
int3
mov
push
das
shr
ds
lods
cmc
call
cmp
fsub
mov
dec
lds
add
mov
insl
lea
cs
mov
xchg
out
test
daa
jg
push
add
add
inc
iret
insb
mov
jbe
movsl
cmp
lea
jle
xor
mov
mov
mov
or
stc
adc
cmp
cmp
xor
xor
fidivrl
jbe
ret
sahf
add
loop
nop
sub
jne
jg
mov
sbb
mov
jl
sbb
test
adc
stos
lock
iret
xorb
adc
popf
jo
dec
into
inc
and
negl
mov
jg
iret
xor
lahf
sub
out
sub
lods
lret
xor
sbb
sub
xor
mov
xchg
aas
scas
sub
les
or
sbb
mov
fstps
sti
pop
cwtl
or
jge
scas
cltd
in
mov
push
mov
or
sbb
fwait
dec
lods
mov
xor
lods
imul
sub
adc
aaa
pop
fsubp
repz
mov
rcrb
test
jmp
mov
js
lret
fcomi
xchg
or
loope
aad
idivl
xor
fs
rol
rorl
mov
pop
movsb
push
ret
fsub
jae
pop
inc
sahf
push
sub
das
in
aaa
add
lods
addl
xor
mov
pop
lret
and
test
cli
lcall
sbb
shlb
repz
lock
push
jp
adc
lahf
aas
stos
iret
and
cmp
dec
out
imul
inc
ja
fcompl
repz
lcall
les
xchg
shl
xchg
fidivrl
sbb
inc
std
outsb
jno
xor
out
leave
lds
lods
stos
push
clc
inc
add
sarl
mov
mov
lock
add
cmp
das
jg
sbb
add
add
inc
mov
cmp
rcr
xlat
test
pop
xchg
fcmovnu
in
cld
pop
jmp
push
cmp
sub
inc
inc
jne
xor
sbb
jbe
mov
ret
push
movsl
shrb
cltd
xchg
aas
mov
xlat
sbb
or
dec
sbbl
xchg
fs
cmp
xlat
test
outsb
ds
call
jmp
bound
pop
pop
test
xchg
inc
notb
mov
cltd
xor
and
xor
lret
lds
into
pop
dec
insb
mull
push
xchg
xchg
mov
dec
xchg
or
and
jne
dec
cld
in
shrl
push
movsl
push
js
dec
out
pop
andl
into
js
mov
or
popf
into
jnp
lahf
mov
test
xchg
mov
mov
mov
movsl
dec
mov
subl
fldcw
into
adc
call
jno
leave
ficomps
movd
shll
xchg
inc
in
push
ds
sbb
fidivl
lea
daa
mov
adc
mov
or
jecxz
xorl
adc
pop
mov
hlt
fwait
or
mov
ret
sbb
and
or
mov
push
fwait
and
push
cmp
and
pushf
pushf
add
pusha
cmp
movsb
jns
enter
icebp
xorb
cmpsb
pushf
xor
mov
pop
stc
mov
push
pushf
popf
jne
sub
fcmovb
outsl
test
psubq
jb
mov
and
hlt
in
inc
fdivl
mov
and
stos
loop
sbb
out
incl
out
les
outsl
outsb
and
push
or
pop
xchg
cmpb
add
mov
mov
push
rorl
push
aad
cmp
mov
aam
inc
xor
addb
mov
pop
daa
std
das
push
adc
xchg
sub
sub
insl
fildll
ret
out
jmp
int3
js
mov
mov
mov
mov
incl
insb
mov
mov
ret
aaa
sbb
int
addr16
jo
or
outsb
lahf
adc
inc
jb
ror
rol
mov
cmp
jb
cmp
leave
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
jmp
jb
ffreep
push
aad
push
dec
mov
xor
dec
mov
or
punpckhwd
mov
jg
sbb
push
push
cld
mov
outsl
adc
inc
inc
sub
repz
sbb
rcr
jl
mov
fsubs
push
movsb
and
jp,pn
add
mov
push
and
push
dec
mov
in
inc
pop
out
jl
pusha
daa
pusha
shll
aas
rorb
dec
ret
aas
mov
pop
fs
loop
in
shl
insb
pop
sbbb
mov
bound
rcr
mov
orl
adc
gs
sbb
and
insl
roll
fldenv
test
inc
jbe
xor
dec
or
xor
inc
and
add
dec
inc
sub
ds
xor
mov
out
aam
adc
das
insb
push
mov
cld
mov
loopne
adc
call
mov
mov
dec
ss
or
inc
xor
jb
rcrl
or
or
jecxz
mov
test
fwait
and
std
rcrl
adc
iret
mov
stos
xor
movsl
ss
icebp
mov
sub
lock
bound
push
xor
jmp
pushf
mov
dec
mov
dec
lcall
xlat
ds
inc
inc
mov
lret
inc
sbb
dec
fdivrl
adc
in
add
xor
clc
sbb
lds
jp
mov
call
pop
mov
jge
cmp
enter
cltd
pop
test
in
jg
repz
js
in
dec
inc
push
xor
shlb
cmp
mov
or
rolb
sbb
cmp
sub
jle
push
push
in
addr16
scas
dec
sub
push
push
test
mov
fcmovbe
in
mov
mov
jb
sbb
and
loopne
scas
inc
test
pop
xchg
loope
je
mov
or
js
outsl
loop
xor
push
sbb
bound
jmp
push
ja
fs
sarb
mov
rol
scas
push
repnz
push
pop
adc
out
cmp
mov
xor
scas
popa
addr16
push
out
loopne
cli
or
je
lea
js
shrl
enter
jb
mov
xorl
enter
jno
jno
cmp
mov
push
fwait
mov
subb
pop
pop
inc
xor
cmpl
addr16
sti
aam
xchg
pop
sub
inc
push
scas
sbb
inc
push
pop
lahf
jle
mull
imul
inc
leave
mov
out
or
cmp
sub
mov
xor
inc
jne
mov
sbb
and
cmpsl
movsb
out
cld
leave
mov
test
loopne
cwtl
repz
scas
es
mov
shll
lret
pop
shlb
mov
incb
call
xchg
push
or
arpl
push
pop
adc
sub
ljmp
add
out
xchg
je
icebp
std
fmuls
jns
jnp
aaa
in
mov
mov
mov
lds
gs
jg
jo
jge
xchg
xor
outsl
jl
je
sub
clc
push
fwait
rcll
inc
test
add
stos
ret
enter
and
dec
repz
jl
mov
mov
aas
add
push
int3
daa
add
mov
stos
daa
je
sti
into
cwtl
int3
or
divb
test
jmp
lret
sbb
mov
mov
arpl
in
jp
and
jle
movsl
add
clc
ds
lahf
out
or
and
or
mov
mov
pop
insl
dec
loope
xor
pop
sbb
mov
add
sub
repz
push
push
mov
push
mov
movsb
push
lahf
sar
sub
std
lods
adc
xor
fsubs
sub
cmp
fstpt
les
mov
hlt
addl
cwtl
pop
xor
ficoml
sbb
in
loop
xor
into
mov
sbb
sub
adcl
push
loopne
push
cmp
ja
scas
cmp
sbb
sarb
gs
scas
arpl
pop
fnstsw
xlat
adc
adc
ljmp
lods
or
jmp
sarl
xchg
xor
roll
pushf
loop
adc
cs
cltd
imul
xchg
inc
js,pt
arpl
jnp
inc
out
mov
pop
or
fistpl
cmp
jnp
lods
subb
dec
sbb
aaa
jbe
rcll
hlt
inc
xchg
icebp
imul
mov
add
test
inc
push
fwait
sahf
inc
call
dec
lahf
dec
lret
push
shrb
push
out
add
arpl
sub
or
test
out
scas
pop
cmp
ret
call
mov
ss
xchg
pop
sbb
mov
mov
pop
jb
movsb
mov
push
push
clc
push
ret
enter
mov
mov
addr16
and
cmpsb
mov
add
idiv
std
jo
sub
ret
les
test
jecxz
or
fwait
pop
xchg
in
adc
xchg
mov
pop
mov
test
add
mov
xchg
shr
gs
mov
stc
add
jmp
sub
and
insb
aad
icebp
adc
jge
cli
int
outsb
and
je
sub
das
test
aad
mov
mov
mov
xor
int
mov
mov
mov
add
popa
cltd
ljmp
mov
test
call
into
aaa
jp
cmp
xor
sub
mov
insb
aam
loopne
inc
sbb
jge
xchg
fs
outsl
arpl
or
sbb
xorb
in
xor
xor
cmp
add
test
popf
jle
roll
and
lret
ffreep
daa
lahf
std
add
scas
idiv
jmp
pusha
lahf
aas
sti
aas
pop
or
ss
insl
xor
invd
add
pminsw
popa
mov
lds
pop
push
test
cmp
push
or
call
stos
fiadds
cmp
outsb
mov
mov
cmp
das
movsb
push
cmp
mov
or
add
xchg
xor
xchg
das
push
sub
out
xor
movsl
push
and
stc
mov
lcall
lret
sub
or
mov
inc
inc
mov
orl
rcrb
mov
sub
lret
imul
pop
mov
insb
adc
fstpl
mov
jb
mov
sbb
aad
icebp
mov
stos
and
fnstenv
insb
sub
adc
jnp
sbb
xor
push
xchg
out
lds
sbb
test
xlat
and
icebp
ficoms
cmp
roll
dec
decl
push
cld
ret
iret
je
sbb
jecxz
cwtl
dec
cmp
sti
fxam
in
jp
fdiv
xchg
jg
jecxz,pt
call
xorl
movsb
inc
push
aas
mov
movsl
out
cmovae
std
add
loop
jmp
xor
in
je
dec
mov
jl
mov
lock
insl
inc
xlat
mov
je
movsl
scas
push
fcmovbe
or
mov
add
in
dec
inc
outsb
mov
jno
insl
mov
sub
popa
movsb
cltd
push
xchg
test
cmp
mov
push
clc
xchg
or
paddusb
mov
add
stos
and
or
scas
mov
scas
gs
aaa
into
dec
dec
jg
ds
lds
push
mov
mov
mov
call
fnsave
test
xchg
mov
add
pusha
ss
jmp
pop
jb
test
mov
mov
sbb
xor
test
cmp
pop
lret
out
je
imul
test
jle
pop
sbb
and
cmp
push
inc
cmpsl
or
out
shrl
inc
mov
mov
pop
scas
xor
popf
and
daa
pop
sti
sti
orb
add
adc
dec
and
jp
mov
add
rorb
xchg
xchg
mov
or
xor
push
sub
dec
test
aas
or
jns
push
iret
scas
mov
or
sbb
xlat
or
pusha
fwait
cmpsb
sbb
or
push
adc
test
adc
xchg
jl
loope
mov
test
dec
data16
mov
mov
test
sahf
mov
mov
fdivrl
or
inc
sub
cli
bound
jecxz
test
mov
push
loopne
and
movsl
pop
mov
ret
dec
test
sub
or
ficoml
daa
mov
push
movsb
cmp
les
rcrl
mov
and
fwait
xchg
stos
xchg
lock
xchg
test
loop
in
inc
pop
sarb
cli
push
sub
fbstp
test
pop
sbb
push
popa
xchg
pushl
mov
cmpsb
xchg
repnz
dec
loope
in
iret
fnsave
dec
jno
mov
popa
jo
loope
mov
adc
jbe
scas
out
xchg
or
mov
mov
and
ret
call
adc
daa
rcl
cmp
jne
into
cmp
scas
mov
imul
jno
mov
mov
arpl
push
push
add
lods
jle
push
dec
xor
call
out
lds
mov
mov
ficompl
sbb
pusha
sbbb
dec
mov
sub
cmc
mov
dec
movsl
push
jmp
cmc
nop
xchg
or
sbb
cli
jno
pop
dec
and
mov
stc
lods
mull
add
int
push
mov
and
cs
loope
in
mov
imul
dec
lret
shll
shll
js
xor
in
sbb
push
push
and
bound
jae
gs
cwtl
enter
scas
std
xchg
push
cltd
hlt
notb
divl
mov
sub
push
mov
jb
inc
mov
lea
fistps
xor
push
sbb
popf
cmp
rcrb
iret
nop
xchg
in
jecxz
sbb
push
push
popf
negb
add
in
add
cmp
leave
test
lret
add
push
int3
cmc
push
xchg
je
fisubl
fimull
aaa
jecxz
xor
jmp
fists
mov
movsb
or
mov
pop
cli
sub
xor
or
add
push
mov
jecxz
cwtl
out
aas
pop
dec
jo
stos
shll
jnp
pop
mov
sarb
xchg
mov
or
sahf
mov
mov
mov
jno
pop
arpl
cmp
cmp
xor
push
xor
pop
mov
pop
mov
leave
jmp
imul
and
push
hlt
inc
ds
jg,pn
stos
cmp
inc
scas
insl
jp
addr16
push
xchg
scas
les
mov
rcll
push
cs
pop
cmp
add
pop
or
pushf
and
scas
ret
pop
mov
lret
pop
int
adc
jmp
push
mov
and
leave
and
in
xor
sahf
xor
pop
data16
lods
popa
in
bound
push
repz
enter
pusha
jbe
jnp
xor
jno
shl
aam
pop
jg
push
or
adc
and
or
add
in
mov
push
stos
jmp
inc
mov
pusha
jle
mov
inc
jo
aam
lahf
movsb
xchg
sbb
mov
jbe
arpl
sbb
jg
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
jmp
xor
xor
or
fcoms
invd
add
punpckldq
jl
idivb
das
sahf
add
and
jns
rcrl
pop
into
xchg
cs
and
divb
pop
rcr
cmp
add
and
cmpsb
lods
cmpsl
enter
insl
sub
dec
aaa
pop
jae
push
insl
aas
test
setae
push
cmp
in
xor
xorl
xchg
lea
dec
in
fnsave
fistpll
mov
mov
cmp
sub
mov
mov
sub
aaa
add
pop
xor
out
adc
hlt
sub
pusha
fpatan
mov
jle
add
xorl
mov
mov
hlt
mov
sub
dec
pop
int3
sbb
gs
inc
nop
iret
cwtl
cli
add
testl
movsl
jl
fsts
scas
sub
lods
int3
mov
fwait
pop
dec
xchg
lock
movsb
inc
aas
push
lret
mov
adcl
cwtl
inc
orl
pop
andb
stc
out
adc
lock
pop
inc
daa
neg
test
inc
sub
mov
add
xchg
push
mov
mov
dec
sbb
push
lret
inc
mov
dec
sbb
sbb
add
dec
cmp
ja
subl
mov
js
xchg
in
xor
cmpsb
add
aaa
repnz
push
xor
leave
pop
adc
leave
lods
sbb
push
jne
pushf
out
inc
sar
in
insl
mov
fisttpl
nop
mov
sub
es
repz
and
inc
cmp
pop
out
sarb
lea
jns
lea
test
sub
xchg
sub
mov
sbb
cmp
xchg
addl
mov
test
mov
rcrl
xchg
lock
dec
lret
fstps
mov
fcoml
and
dec
xlat
adc
xchg
sbb
sub
cmp
sub
adc
dec
add
outsb
jp
cmp
imul
add
adcl
out
inc
mov
inc
mov
add
fcompl
sbb
outsl
push
fistpl
jle
sub
aad
xchg
addr16
outsl
iret
pop
fwait
sub
adcb
sbb
pop
fisubl
inc
test
repnz
cmp
or
mov
pop
daa
mov
mov
xchg
test
pop
rcll
push
and
popa
jg
push
mov
cltd
movl
sti
jmp
insb
sahf
or
jne
lahf
hlt
or
int3
popf
lods
jo
jnp,pn
push
js
push
outsl
fildll
mov
cmp
pop
add
xchg
mov
test
mov
push
push
or
pop
inc
enter
lcall
iret
xor
fdiv
daa
push
scas
outsl
pop
adc
adc
test
pusha
stos
mov
shr
pop
xchg
sbb
push
jmp
add
sub
mov
scas
mov
test
add
mov
rcrl
inc
add
out
push
mov
push
push
or
jae
lock
daa
and
stos
imul
dec
outsb
push
cmp
out
fdivrl
adc
out
outsb
stos
sub
pop
xor
sbbb
push
pop
gs
dec
clc
fs
dec
inc
insl
inc
xchg
xchg
das
and
dec
sbb
adc
sbbb
movsl
fcomi
movsl
scas
ja
scas
lds
leave
jmp
jne
repz
cltd
jbe
dec
mov
sub
xchg
movsb
and
push
hlt
sbb
outsl
aaa
insl
stc
jge
cmp
pushf
lods
pop
dec
mov
or
inc
mov
or
test
cmp
daa
fidivl
enter
ss
inc
cmc
adc
leave
dec
push
push
out
add
cmp
jne
out
mov
ret
mov
pop
xchg
fisttps
lahf
adc
lahf
cld
loop
lock
pop
std
lds
push
scas
das
aas
xor
pop
dec
clc
imul
in
ds
jmp
or
xor
add
or
aas
test
outsb
jo
push
jp
xchg
push
pop
push
loop
ret
jae
andl
dec
clc
dec
dec
ficoml
lock
iret
cmp
pop
aaa
jbe
adc
xor
inc
mov
loope
fimull
xchg
mov
xor
cld
mov
fwait
xchg
inc
jne
xor
inc
cmc
xlat
sbb
inc
arpl
mov
repz
fsubrs
fstpt
push
adc
inc
add
cmc
mov
popf
add
fmul
or
jp
aam
mov
aaa
andb
cltd
js
outsb
inc
xor
pop
and
mov
sbb
clc
cltd
cmp
bound
mov
in
pop
push
cmc
add
leave
xor
sbb
lahf
call
pop
push
movsb
xchg
in
loop
lret
enter
sub
jge
cmp
std
sub
repz
fwait
sti
stos
mov
mov
cli
mov
jnp
jbe
pop
push
xchg
mov
out
rclb
xlat
dec
mov
sbb
mov
sub
xchg
in
push
inc
sbb
mov
aas
push
fwait
cmpsl
dec
fisubl
push
cmp
xor
mov
xchg
testl
jo
mov
push
je
testb
enter
xor
bound
and
int3
hlt
psraw
aam
test
inc
addr16
inc
mov
sbb
test
ja
data16
test
and
aam
shl
or
roll
pop
test
mov
lds
add
push
les
inc
sbb
gs
mov
jle
das
and
mov
mov
mov
jae
lahf
sub
sbb
push
pop
paddd
lds
xchg
sbb
mov
sbb
xor
out
mov
xor
shl
jmp
push
mov
cli
sbb
fnstenv
dec
jmp
lcall
add
nop
push
add
sub
scas
mov
setbe
loope
cmp
test
mov
jnp
insl
out
push
inc
ljmp
add
xor
les
aam
xchg
jecxz
fwait
lret
addr16
shlb
pop
sti
push
stos
xchg
aas
data16
into
dec
mov
mov
xchg
mov
fstpt
arpl
xlat
mov
lcall
fwait
or
lret
jmp
inc
xchg
sbb
add
fcomps
jns
adc
or
xor
insl
inc
out
mov
insl
outsb
jmp
xchg
mov
mov
and
mov
pop
test
mov
dec
and
btr
dec
iret
xchg
and
pop
and
xchg
addr16
into
mov
test
inc
jmp
mov
mov
xchg
xchg
sbb
mov
mov
add
cltd
xor
mov
aaa
mov
fcoms
and
inc
mov
xchg
and
cmp
lret
or
pop
pop
jo
mov
mov
scas
jae
xchg
xor
mov
movsb
add
pushf
cli
push
sbb
jne
in
jb
cmp
push
lock
add
divl
mov
cmp
push
lahf
mov
push
push
push
mov
dec
push
aas
call
shll
xchg
sub
adc
enter
xchg
push
aas
test
mov
adc
mov
int
test
mov
push
add
add
and
int
dec
cmovb
cmpsl
test
inc
shr
idivl
jl
setl
xchg
fdivp
push
shlb
mov
push
push
or
stc
jns
cmpsl
mov
ljmp
mov
cmp
mov
pusha
cltd
movsl
sbb
jb
push
mov
movsb
lea
repz
sub
push
adc
mov
add
sbb
xor
ret
clc
filds
jae
push
push
add
jmp
jb
aas
mov
call
lds
mov
add
imul
push
ss
fmuls
sub
sub
mov
mov
pop
insb
in
xor
sub
mov
rcrl
outsl
jp
ror
and
jecxz
loope
add
andl
jae
popl
push
scas
mov
mov
inc
xor
dec
cmpsl
stos
ffree
outsb
daa
jecxz
shlb
add
xchg
and
sub
inc
fsubrs
in
divb
fbstp
lods
add
mov
out
pop
xchg
mov
icebp
daa
cwtl
loopne
mov
add
sbb
cmp
sbb
ljmp
adc
push
xor
in
cmp
xor
into
and
push
sbb
sti
cltd
xor
gs
or
cld
xor
ficoml
cwtl
mov
pusha
lods
fsubl
mov
cmpsb
push
inc
fsub
out
jne
mov
into
xchg
mov
pop
and
lahf
and
arpl
loope
or
ja
jle
mov
and
popf
and
adc
in
cmpsb
loope
jno
iret
or
push
outsl
pop
pop
sarb
pop
cmp
push
push
int
std
int
inc
mov
inc
and
sub
das
lea
jno
lret
ljmp
fwait
mov
jecxz
outsb
jo
andb
int3
lea
ret
sarb
mov
xchg
adc
mov
xor
cmp
insl
lahf
jl
push
rorl
adc
ljmp
mov
pop
insl
pop
jle
movsb
cmpsl
movsb
fwait
lcall
jp
fidivl
cmp
popf
xor
decl
sti
mov
cmc
jns
cmp
adc
mov
xchg
enter
repz
cltd
mov
test
ret
adc
jb
xlat
jnp
push
ret
insl
add
hlt
cmc
cs
lcall
mov
in
push
cmpsl
inc
insl
icebp
roll
mov
push
std
testl
sub
and
or
negb
mov
adc
test
lcall
cwtl
repnz
lret
leave
jae
pop
cmp
add
stc
adc
sbb
mov
js
push
inc
jnp
dec
xchg
mov
dec
xor
sbb
push
addr16
mov
jnp
int
lret
outsb
or
jge
shrb
sub
lds
es
adc
rclb
pop
push
out
in
mov
mov
clc
mov
aaa
or
mov
popa
xchg
fidivrl
jl
pop
xchg
pop
cmp
add
mov
sub
sub
inc
xchg
cmc
cmp
jbe
inc
sahf
mov
insb
lret
ss
sub
or
daa
xor
and
cmc
adc
jb
add
push
stc
shlb
push
sub
lcall
popa
cld
loop
sahf
imul
pushf
roll
out
std
pushf
in
call
movsb
notrack
cmp
lods
or
jecxz
sub
mov
jo
dec
mov
dec
shll
aas
dec
inc
mov
xor
adc
pop
and
jns
lea
jno
cld
dec
jnp
dec
xor
cli
adc
and
mov
sbb
cld
sub
sub
fsub
or
add
sbb
xor
stos
inc
fstpt
jae
mov
lods
jae
sbb
push
mov
mov
loopne
mov
pop
push
pop
adc
clc
inc
repz
roll
cmp
jo
test
jle,pn
mov
icebp
flds
push
mov
enter
adc
addl
sbb
pop
loopne
sub
movsl
jp
into
or
lcall
scas
adc
in
xor
inc
inc
add
ret
mov
mov
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
mov
or
mov
mov
add
out
mov
cvtdq2ps
fwait
bound
imul
mov
out
sahf
ljmp
ficoms
pop
fidivrl
je
sbb
and
push
jbe
ljmp
push
lods
outsb
insb
push
jg
mov
adc
jno
fstps
adc
xor
sahf
mov
dec
add
mov
into
popf
addl
ljmp
xchg
data16
ja
popf
addl
movsb
pop
xor
dec
popf
shlb
pop
fildl
mov
int3
or
dec
and
pop
lods
add
daa
mov
mov
jecxz
add
pop
mov
out
push
out
les
mov
fwait
pop
add
mov
mov
mov
or
cmp
int3
popa
jb
adc
and
je
fildl
pushw
pop
icebp
pop
das
inc
pop
divb
in
insl
loope
add
subb
enter
gs
cmpsl
push
out
lea
ss
in
xchg
push
dec
and
les
test
xchg
xor
inc
sbb
sub
popf
ret
test
outsb
insl
clc
movsl
sub
ljmp
movb
je
mov
add
adc
jns
sbb
shl
mov
pusha
cmp
and
sub
aas
ficomps
cwtl
mov
pop
fsubr
lods
outsl
mov
cmpsb
dec
movsb
push
push
dec
ret
push
pop
out
push
dec
push
xchg
ljmp
cmc
fldcw
aas
fdiv
sub
clc
cmp
jmp
sti
leave
in
lcall
test
pusha
add
mov
nop
aaa
mull
pop
push
outsb
loop
cmpsb
mov
icebp
or
cmpsl
test
jmp
dec
stos
cmp
inc
insb
sarl
add
fidivrs
ret
movsb
xchg
push
call
ret
mov
sbb
js
scas
test
adc
int3
jl
xchg
sub
arpl
into
cltd
movsl
stos
xor
jle
push
and
pop
clc
imul
fiaddl
cmpsb
in
cs
sahf
cmp
sub
push
add
cmp
add
subl
orl
out
movsb
rolb
fstpt
stos
mov
pop
xor
sahf
test
test
xchg
push
lock
or
loop
ds
xchg
xor
imull
cmp
insl
loope
mov
inc
and
lahf
repz
lds
orl
mov
ds
add
mov
enter
imul
in
or
pusha
loopne
cmpsb
inc
mov
or
mov
xor
mov
jmp
and
cmpsl
and
cmp
push
adcb
lods
or
fcmove
scas
and
je
adc
xor
push
mov
addr16
or
push
aas
push
add
cmp
cmpsl
cwtl
into
das
mov
jo
or
inc
cmp
fistps
inc
xchg
jb
loope
push
dec
mov
push
mov
shrl
scas
int
adc
xchg
pop
jmp
flds
mov
inc
mov
dec
push
stc
scas
mov
rolb
out
inc
das
cli
sub
add
and
scas
inc
cmp
xchg
addr16
aam
adc
sub
sahf
stos
push
pop
fxch
movsl
outsb
adc
loopne
scas
outsl
pop
hlt
inc
add
add
sub
mov
clc
pop
xchg
cli
scas
add
pop
add
or
lcall
push
cmp
adc
enter
jns
cli
aad
loop
jecxz
cmp
inc
xchg
xlat
pop
sbb
pop
xor
fwait
test
cmpsb
and
jecxz
popf
mul
bound
jno
je
dec
out
lcall
iret
xchg
adc
cld
and
xchg
stos
xchg
dec
push
xchg
into
clc
push
cli
int
ja
pop
repz
pop
sub
jge
add
jb
je,pt
into
dec
pop
in
mov
adc
mov
or
mov
pop
mov
rcll
stc
out
out
and
stos
fdivrp
push
ret
js
or
repnz
aad
js
and
cmp
cmc
mov
scas
lock
add
adc
cs
or
enter
and
lcall
xor
mov
cld
lahf
pop
mov
pop
and
mov
add
cmpsl
fwait
in
jg
jl
push
fiaddl
sub
mov
sbb
insb
icebp
jnp
and
sub
pop
pop
cmpsl
test
mov
xlat
push
or
fisubs
sub
icebp
jg
jb
addl
les
insl
push
sbb
pop
lret
andl
mov
out
fidivs
jp
add
int3
adc
jnp
lods
ja
stos
out
push
out
fs
sbb
mov
xchg
call
dec
mov
push
inc
cltd
nop
loopne
shr
subb
dec
mov
sub
xchg
loope
daa
jecxz
enter
mov
sti
sub
mov
push
xchg
cmp
xlat
and
inc
out
mov
pop
iret
ficoms
xor
mov
xor
or
outsl
mov
hlt
imul
fwait
jo
in
cmp
scas
pop
inc
cmp
cmp
lea
mov
cmpsl
lock
out
mov
enter
enter
mov
sbb
mov
scas
inc
xor
sub
mov
xchg
inc
cmc
mov
inc
or
cltd
addr16
fiaddl
push
cli
jae
fidivl
in
stc
call
xchg
pusha
pop
sti
xlat
test
dec
add
into
jae
inc
sbb
push
cmp
mov
xor
push
out
cmpsb
icebp
repz
nop
inc
mov
mov
push
push
jno
lcall
int3
das
lret
sbb
movsl
or
scas
nop
sub
dec
xor
pop
xor
xchg
mov
inc
or
and
jno
icebp
popf
mov
xchg
mov
adc
call
test
test
adc
test
cs
inc
xchg
pop
sbb
outsb
icebp
lods
aad
pusha
leave
in
dec
jecxz
add
shlb
dec
sub
push
popa
cmp
jno
cld
outsb
test
cmp
sbb
es
outsl
mov
rcrl
mov
mov
int3
insb
rorb
or
icebp
lret
adc
dec
sbb
les
mov
add
mov
sub
push
ret
in
push
imul
call
lock
jge,pt
lods
cld
mov
lock
push
adc
rorb
mov
push
xor
xchg
arpl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ret
mov
adc
cmpsb
js
imul
and
roll
jmp
inc
xor
lds
dec
push
dec
mov
xor
inc
adcl
scas
mov
and
shrb
or
add
mov
adc
jle
inc
fsubrl
mov
mov
test
fists
in
shlb
sub
flds
incl
xchg
mov
push
or
dec
or
inc
icebp
pushf
sbb
push
dec
mov
negb
add
daa
test
push
pop
pop
lods
cmc
aad
out
push
inc
fwait
jb
push
leave
inc
jbe
mov
arpl
ljmp
ret
mov
fs
add
cld
add
js
jne
push
jo
or
or
nop
sar
xchg
fnstsw
inc
dec
mov
jmp
out
jo
sub
int3
gs
adc
xchg
pop
jb
add
xlat
stos
push
mov
xchg
and
cltd
enter
pop
fs
stc
es
loopne
int
jno
movsl
mov
jp
sbb
ret
movsb
loop
fstl
mov
subb
jns
or
add
adc
outsl
and
and
xlat
ljmp
lret
aam
xchg
push
sbb
testb
rcl
jg
xchg
cli
inc
je
test
test
stc
xor
movsl
inc
and
adc
aaa
mov
jmp
aam
jbe
jns
icebp
jecxz
jg
lds
aad
cmpl
dec
ja
mov
mov
aas
movsl
cmpsb
fisttpll
cmc
imul
mov
jno
rol
aad
aam
push
or
out
mov
out
stos
arpl
push
sbb
icebp
cmpsl
imul
pop
or
aam
dec
xchg
je
jmp
aaa
inc
ret
test
sbb
popa
outsl
xchg
fstps
push
in
insl
pop
rolb
push
add
addr16
mov
add
loop
sti
cmp
dec
or
jne
xor
sbb
pop
test
inc
hlt
mov
mov
inc
pop
in
pop
aad
cwtl
and
cmp
idivb
push
mov
faddp
pop
xchg
mov
int3
pop
sbb
outsl
sti
ret
inc
sbb
dec
jnp
ljmp
mov
or
rol
inc
or
mov
cmp
dec
rorl
mov
lods
cmp
xor
dec
shlb
sub
fidivrl
std
inc
sbb
cmc
enter
movsb
mov
sbb
pop
and
dec
je
sbb
cmp
jae
lcall
cmp
and
mov
ret
push
mov
neg
int3
mov
cmc
les
aaa
cld
iret
sub
dec
mov
aas
pop
xor
jne
loope
sti
andb
int
add
adc
les
aam
push
imul
mul
xorb
mov
iret
sub
cmpsb
stos
adc
xor
fisttpll
lcall
andnps
mov
xchg
or
ret
pop
jp
popa
sbb
and
or
jne
pusha
mov
xorl
inc
mov
icebp
xchg
push
outsb
fldcw
push
push
xchg
mov
mov
xlat
out
mov
mov
xchg
mov
loop
mov
jp
into
outsl
or
sahf
lea
cmpsb
xchg
and
fs
cmp
push
sub
stc
xchg
stos
add
test
and
sub
jnp
or
inc
mov
adc
and
sub
outsb
test
lods
arpl
sarb
and
rorb
pop
add
adc
pop
dec
ljmp
jnp
cmpsl
shrl
sub
mov
adc
push
mov
cs
std
loop
scas
mov
push
adc
adc
push
in
mov
cwtl
adc
iret
hlt
repnz
mov
pop
out
xlat
or
push
add
sbb
sar
xor
shl
or
push
mov
scas
lods
ds
hlt
ret
sahf
repz
outsl
xchg
cwtl
mov
scas
aas
cmpsb
fisubrs
nop
xor
or
mov
cmpsl
add
xor
mov
push
imul
sarl
js
fdivrs
shrb
inc
mov
insb
popf
lds
in
inc
mov
lret
pop
xchg
xchg
repnz
test
or
pop
repz
data16
xor
dec
negb
imul
dec
adcl
mov
dec
jnp
mov
nop
sahf
or
fcomps
add
cmp
sahf
movsb
and
aam
ret
adc
iret
pop
std
pop
add
mov
in
jecxz
sub
jns
mov
pop
ret
xchg
mov
lcall
aad
mov
jl
imul
call
sarb
ss
mov
inc
inc
sahf
addr16
sbb
cmpsb
jecxz
scas
inc
and
jl
lods
cmp
jl
repz
push
mov
je
outsb
or
stos
jmp
push
orb
mov
fsubs
push
mov
jp
xor
mov
mov
mov
xlat
mov
dec
out
mov
inc
les
sub
cmpsb
inc
sbb
dec
popf
xor
dec
aaa
adc
mov
sbb
xor
push
cmp
push
pop
shrb
push
gs
out
fdivrs
jmp
add
ret
or
xor
or
cmp
pop
loop
xchg
jge
xor
jbe
xchg
dec
push
in
roll
sub
lea
test
sub
lds
and
mov
aas
jg
pop
pop
mov
pop
icebp
xchg
leave
push
fsin
popl
in
sbb
xchg
in
cld
mov
xchg
dec
push
add
pop
push
nop
push
jns
imul
push
movsb
sbb
int
inc
aad
add
push
or
dec
dec
pop
mov
das
test
push
lods
xor
shl
int
cmpsb
cmp
push
ret
fwait
jo
add
sbb
mov
stc
cmp
cmc
bound
int3
push
dec
out
xor
ljmp
icebp
ret
push
cmp
popa
and
adc
mov
mov
jmp
into
pusha
add
int
xchg
sub
rcll
pop
and
lret
cmp
dec
jge
pop
jg
mov
scas
mov
imul
mov
dec
pusha
cmp
adc
xor
add
mov
fsts
test
pop
mov
mov
adc
fldenv
lock
loope
notb
push
mov
and
adc
shlb
stos
add
in
cld
movl
movl
movl
mov
mov
mov
mov
add
jmp
pop
sbb
dec
mov
or
push
lock
movb
mov
psrld
jb
lret
adc
std
inc
add
clc
and
xor
xorl
push
fbstp
ds
xchg
pop
inc
frstor
sbbl
rcl
pop
in
mov
mov
mov
loope
fldl2t
rclb
or
adc
mov
bound
les
outsl
pop
in
push
sti
and
xor
insl
rol
shlb
jmp
inc
scas
test
cli
cmp
sbb
js
fists
test
or
inc
xchg
mov
test
rclb
push
outsl
in
pop
xlat
out
hlt
cmp
aam
sub
jmp
imul
fmuls
or
push
aam
cs
sub
stos
pop
mov
cmp
insb
adc
repz
jle
test
mov
adc
insb
pop
dec
xor
jne
cmp
inc
fwait
ret
lods
lock
lods
push
sbb
outsb
jge
in
cmp
pusha
jne
push
lods
jmp
icebp
push
pop
mov
inc
xor
aam
das
js
mov
nop
ja
rcrl
or
sbb
das
cmpsb
mov
xor
lock
or
or
inc
xor
movsl
mov
mov
shll
aam
stos
and
dec
jle
push
lds
xchg
icebp
into
incb
jne
and
mov
mov
test
xchg
test
scas
int3
shll
daa
outsl
imul
pop
je
divl
fisttps
jbe
std
mov
xlat
lds
in
jb
js
int
inc
mov
adc
pop
dec
insb
aad
sub
push
pop
xchg
in
test
push
jns
sub
cld
rcll
sti
mov
nop
push
cwtl
pop
fiaddl
jb
scas
mov
pop
rorl
in
sub
sahf
and
sarl
std
out
mov
mov
mov
loopne
arpl
sti
xor
mov
inc
cltd
jmp
rclb
xchg
mov
std
shlb
and
cmp
pop
mov
mov
in
or
fdiv
ret
mov
push
jg
mov
inc
xchg
cmp
cmp
and
cs
scas
adc
xor
shll
out
push
adc
jmp
xlat
sub
ljmp
movsb
xor
outsb
out
inc
adc
or
std
mov
scas
jae
inc
sub
add
mov
pop
jo
mov
stos
push
xchg
mov
add
int3
leave
insb
insb
dec
push
dec
adc
push
movsl
test
xor
clc
mov
xchg
jecxz
ror
jo
iret
arpl
dec
cwtl
out
add
push
outsb
inc
or
push
in
pusha
pop
sub
push
mov
out
jno
sbb
out
scas
rcrb
cmp
inc
cld
rcrb
shrl
cmp
adc
push
sbbl
jg
jae
inc
in
dec
ss
xor
ret
jne
outsb
mov
mov
sbbl
add
mov
mov
std
mov
jp
xchg
add
cmpsb
adc
xchg
cmova
pop
add
xlat
popa
mov
sarl
cs
mov
popa
inc
push
aam
xchg
out
imulb
mov
aaa
vpunpcklbw
sub
inc
fnsave
out
mov
lcallw
sahf
sub
repz
test
jle
adc
jb
sbb
push
cmpsb
ret
and
sub
in
or
gs
fidivrl
mov
xor
lcall
mov
fdivs
ss
fiaddl
das
pop
cmc
clc
sbb
dec
out
aas
rcr
pop
pop
cmp
lods
cmp
add
or
out
cmp
nop
rolb
jg
cmp
cmp
xor
cmp
in
mov
fisttpll
push
jns
and
cld
push
pop
nop
fisttps
popa
gs
jno
sub
pop
mov
iret
sbb
mov
fincstp
sbb
cmpsb
in
sbbb
jp
sub
pop
in
jmp
jae
push
enter
mov
mov
push
imul
call
lret
arpl
cmp
inc
mov
stos
push
mov
cmp
ret
dec
add
rcrl
es
notl
out
add
cmp
sbb
xorl
das
inc
shlb
hlt
mov
call
xor
lods
inc
fwait
lods
sbb
loop
mov
bound
outsl
aaa
or
lock
or
aas
add
pop
dec
xchg
js
push
outsb
mov
cld
cmp
add
cmp
jb
mov
sub
or
xchg
mov
fsts
ja
jecxz
mov
cmp
mov
data16
xchg
push
push
iret
lahf
pusha
ds
pushf
leave
mov
sbb
mov
or
out
out
adcl
int3
aam
cmp
divb
dec
and
mov
lret
push
ds
sti
xchg
cmp
cmc
fiaddl
ret
jl
inc
add
repz
mov
sub
cld
mov
xor
insl
bound
mov
xor
pop
int
dec
test
push
mov
push
mov
mov
out
adc
repz
test
cmp
sub
test
jg
pop
bound
jne
ret
pop
scas
add
daa
jp
nop
call
mov
loope
xlat
lret
and
jmp
mov
xchg
ficomps
xchg
pusha
push
jge
or
sbb
jp
repz
inc
iret
cmc
sbb
adc
pop
jmp
cmpsl
mov
xchg
sub
leave
xor
lret
sbb
js
mov
sti
loopne
pop
xor
shrl
out
ror
jmp
pop
jmp
xchg
pop
aad
out
dec
icebp
shlb
jns
cld
dec
enter
repnz
enter
xchg
jmp
fisttpl
in
jle
push
movsb
mov
jmp
push
sbb
shrb
push
mul
push
pop
loop
loop
inc
add
in
movl
lods
test
negl
sbb
push
pop
xchg
out
xor
push
fwait
dec
fcmovnu
aam
jbe
test
jle
hlt
cwtl
shll
push
bound
out
hlt
js
pop
push
fisubrs
jae
cmc
popa
and
dec
sar
mov
adc
dec
into
std
push
xor
cmpsl
pop
pushf
sahf
and
in
jp
cwtl
jge
sti
pop
inc
sbb
addr16
mov
xchg
cmp
mov
sub
push
add
jmp
mov
out
out
cmpsb
push
or
fldenv
adc
mov
fwait
xchg
testb
mov
nop
cmpsb
or
xchg
dec
aaa
mov
ret
mov
pop
pop
dec
cmpsl
or
addr16
sbb
imul
lock
lcall
ds
lock
arpl
mov
jecxz
repnz
jmp
into
add
or
push
test
sbb
adc
and
xchg
push
xchg
pop
inc
xor
xor
ljmp
pop
mov
pop
cmp
push
test
lock
fs
popf
sbb
mov
data16
add
push
jp
xchg
push
or
jo
pop
mov
popa
mov
mov
xchg
add
push
cltd
fcomps
in
and
sub
jle
cmp
outsl
xorl
mov
sti
xchg
jp
shlb
inc
push
lea
testl
jbe
push
les
aad
fldl
lds
cmpsl
call
aas
aas
jbe
and
or
cmpsb
faddl
or
pop
mov
pop
push
xor
xor
mov
fcoms
scas
pop
jns
stos
test
mov
and
sbb
pop
mov
inc
inc
xlat
aas
cmpsb
mov
call
sti
rol
out
sahf
sbb
add
mov
pop
lds
mov
or
test
and
and
jmp
and
clc
xchg
je
imulb
sub
adc
and
ficoms
push
fimull
or
xor
lret
pop
push
mov
pusha
push
test
inc
sbb
cs
test
mov
shr
mov
push
hlt
fnop
loopne
test
cmp
mov
sub
dec
int3
jecxz
jmp
insl
test
push
das
adc
jne
push
ja
mov
pop
mov
mov
mov
mov
push
xor
pop
xor
dec
divb
mov
mov
xor
sub
stos
dec
mov
push
add
xor
mov
mov
xchg
subl
dec
es
lret
xor
mov
cld
inc
lds
in
mov
jns
dec
mov
mov
js
pop
xchg
fadds
and
xchg
cmp
dec
mov
xor
jae
fldcw
jae
sub
jns
dec
xor
push
cltd
or
or
mov
test
adc
outsb
lods
push
rolb
or
xor
add
shl
imul
mov
pop
stos
mov
ss
jo
test
fs
gs
or
out
push
aas
cmp
inc
mov
pop
leave
mov
push
push
mov
or
adc
and
jbe
cltd
daa
lds
nop
mov
sahf
dec
je
ret
std
daa
xor
mov
mov
add
lods
xchg
fistps
sbb
cltd
push
mov
mov
and
inc
jb
sbb
inc
test
idiv
pop
pop
cs
lcall
hlt
daa
fdivrl
fwait
mov
ljmp
fistps
les
jmp
pop
dec
mov
sti
mov
in
cmp
jmp
aas
fs
cmp
imul
adc
cwtl
mov
inc
xchg
push
fwait
orb
shll
dec
popf
nop
jno
insb
ss
scas
mov
mov
dec
pop
inc
mov
shrb
sub
clc
insl
subl
inc
cmc
jecxz
sub
popf
mov
in
jns
fldt
lret
xor
jb
mov
into
repz
sbb
xor
sbb
push
stos
aad
negl
add
js
negl
lods
dec
xchg
js
dec
mov
insb
add
incb
mulb
inc
push
adc
repnz
movsl
rcrl
inc
loopne
inc
fcomps
xchg
jne
push
inc
ror
test
pop
std
or
jecxz
shl
lahf
fisttps
sar
andl
popa
push
adc
inc
sbb
cwtl
inc
mov
pop
popa
lds
lds
mov
xor
xchg
test
int3
outsl
jge
outsb
iret
ljmp
imul
push
sub
jns
cs
aad
mov
push
dec
rcll
test
or
es
sub
loop
or
xor
xor
push
test
ror
and
pop
loopne
stos
sbb
mov
sbb
push
pushf
adc
bound
and
gs
pop
pop
xor
sbb
popf
sub
outsl
or
jge
lahf
xchg
scas
sbbl
rolb
scas
and
cmp
out
add
hlt
lea
inc
les
push
popf
cmp
jge
dec
repnz
xorl
sbb
mov
pop
out
add
addr16
jge
rclb
outsl
test
lret
sbb
pop
mov
and
mov
dec
cld
inc
pop
mov
jo
xor
fistps
inc
sub
fldenv
xchg
stc
xlat
int
inc
dec
push
in
xor
xor
xor
sub
test
and
cmp
cmpb
js
jb
out
cmc
add
aam
sbb
jmp
lea
daa
shrl
mov
dec
movsl
cmp
xchg
js
mov
or
repnz
inc
jns
push
mov
jp
inc
and
xlat
jl
xlat
mov
jp
dec
clc
outsl
dec
jno
cwtl
and
cmp
mov
push
fxch
inc
sub
dec
movsl
call
and
or
rclb
pushf
mov
and
sarb
push
mov
movsl
out
ja
mov
inc
adc
je
js
sbb
shl
pushf
fidivrl
mov
sbbl
dec
dec
lret
into
jo
fs
sub
sbbb
rcrb
outsb
mov
mov
int3
jmp
cmp
mov
mov
xor
xchg
std
add
insb
pop
cmp
leave
cmpsb
cmp
sbb
cmpsl
mull
sbb
in
xor
ljmp
inc
lahf
or
and
in
movsl
dec
xchg
push
lret
pop
cmp
cs
cmp
rcrb
pop
fdivr
mov
fcomp
cwtl
rcll
sbb
repz
insl
scas
imul
pop
sarl
sbb
mov
jbe
lcall
push
cmp
xor
insl
add
movsb
jb
dec
loop
and
repz
mov
add
aad
out
push
out
sub
and
adcl
adc
call
add
ds
dec
cli
loope
or
in
add
lahf
jbe
pop
dec
push
dec
lds
lret
out
shrb
jb
inc
mov
push
xchg
lock
insl
movsb
hlt
je
test
movsb
push
lea
and
sbb
loope
jle
movsb
push
insb
jae
jae
xor
lcall
lods
aaa
mov
xchg
movsb
pop
repnz
jecxz
xor
incb
cld
inc
sti
lods
lods
lcall
jle
sbb
add
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jmp
pop
cli
pop
sub
or
dec
pop
nop
push
dec
ror
daa
in
adc
and
push
or
xchg
mov
inc
shll
push
fwait
jae
xchg
into
inc
jg
lret
mov
dec
mov
insl
lock
scas
loopne
in
jnp
cli
mov
jb
out
xchg
lret
dec
lods
movsb
xchg
jl
push
pop
lock
inc
es
repnz
incl
cmp
cwtl
lret
mov
loope
std
sbb
pop
and
std
popa
or
jg
push
push
inc
fidivrs
pusha
mov
pop
ret
sbb
out
pop
rcr
das
insb
push
xor
dec
ss
dec
jg
rorl
mov
xchg
and
and
sub
add
pop
mov
add
lods
mov
inc
adc
adc
jb
fistpll
ret
jg
and
cmp
xchg
test
pop
adc
cmpsb
dec
cmp
roll
add
pop
xchg
in
mov
cmc
push
adc
pop
mov
ljmp
xor
inc
sub
in
pop
adcb
push
xchg
aam
inc
push
loope
insb
shlb
jae
add
out
add
pop
popf
or
dec
int3
sti
and
mov
xchg
sub
add
dec
cli
pop
cmpsb
imul
push
fxch
mov
test
and
add
xchg
vmulpd
cmp
add
out
mov
sub
lret
jae
ret
pop
or
mov
sub
mov
pop
scas
test
fsubrs
sub
jmp
inc
mov
xchg
aad
jnp
fisttpll
or
fwait
leave
ret
ds
lret
xor
lret
subb
mov
out
mov
ja
lea
adc
xor
mov
mov
scas
and
lcall
repnz
es
outsl
pop
push
add
dec
andl
out
fdivs
or
pop
xchg
scas
call
out
dec
push
out
inc
jge
mov
cmc
jmp
jl
lret
loopne
cmp
daa
pop
dec
and
mov
jo
test
mov
mov
in
cmp
outsb
push
addr16
out
add
fwait
jmp
push
dec
mov
les
mov
testb
mov
loope
loope
sarl
adc
jl
mov
mov
dec
jo
jmp
hlt
add
push
dec
movsl
or
cltd
or
insb
rclb
xchg
jp
fnstcw
ss
and
mov
lahf
mov
roll
jl
or
aaa
cltd
repnz
mov
dec
add
inc
adc
cld
in
fs
xor
popf
xor
sub
fwait
or
pop
test
lock
cmp
movsb
loop
cltd
sub
gs
fbld
pop
push
out
pop
push
cld
dec
fdivrs
xor
add
loop
sub
cmp
adc
add
sub
lahf
gs
outsl
aas
fisubrs
movsl
cmp
mov
sbb
leave
add
sub
pop
pop
outsl
lock
enter
mov
sbb
push
jbe
hlt
pop
test
aam
jns
dec
lret
scas
mov
std
cmpsl
aad
mov
jg
loope
sbb
loopne
adc
mov
push
fwait
add
add
xchg
jns
mov
out
icebp
int
dec
pop
lahf
loop
cmovno
je
add
sbb
cmp
adc
cmp
and
jnp
in
aas
add
cmp
jge
popf
inc
bound
clc
cmp
fwait
pop
mov
push
mov
shrl
cs
je
rorl
movsb
arpl
and
fldl
jo
insb
gs
call
pop
push
enter
icebp
in
adc
sub
jmp
push
xchg
syscall
cmpsb
push
mov
es
shl
push
jl
cmp
insb
jnp
movsl
and
fmuls
stos
ret
cli
movb
lahf
shll
adc
cmp
mov
jle
dec
test
jg
int
add
push
or
in
daa
lock
ret
pop
sbb
add
add
push
imul
inc
repz
and
arpl
iret
xchg
push
jo
std
jo
mov
adc
and
iret
mov
aam
xchg
dec
inc
bound
mov
jb
loop
mov
mov
jnp
lods
movb
add
lds
cmpsb
in
icebp
aam
jg
pop
jo
dec
in
add
or
mov
data16
pop
rorb
test
dec
mov
mov
pushf
pop
adc
std
mov
sub
cmp
push
popa
push
ss
pop
and
cwtl
fbstp
inc
xchg
loope
rcll
mov
sub
fimull
inc
rorl
aam
jns
and
add
pop
lods
shll
inc
push
pop
adcb
mov
into
jg
pop
fdivs
jo
in
dec
jbe
lock
cli
insl
imul
mov
dec
jae
xchg
das
jmp
popa
push
leave
call
arpl
dec
popf
cmp
mov
testl
not
pop
mov
fdivrs
js
cmp
pop
into
and
inc
cltd
dec
nop
sub
sbb
fcomip
push
mov
sub
js
test
leave
xor
and
in
dec
repnz
add
sub
cmp
xor
xchg
cmp
popa
jnp
push
leave
es
aad
jge
scas
pushf
int3
les
inc
cli
fldlg2
js
cs
and
loope
cmp
in
cmp
aam
movsl
aaa
stos
lods
out
pop
adc
insb
or
iret
mov
dec
stos
repnz
popa
mov
rcll
sub
pop
xor
jmp
int
popa
mov
cs
add
cld
or
das
adc
mov
inc
pop
fistl
test
sub
and
outsl
push
push
arpl
add
jne
fisubl
dec
fwait
aad
cmp
pop
push
es
loope
rep
push
xchg
adc
scas
andl
add
ljmp
sarb
out
jl
cmp
sub
lods
mov
push
lret
xor
cli
stc
add
inc
sbb
adc
int
aad
rcrb
dec
lea
test
sti
push
xchg
jl
ljmp
dec
fidivs
sbb
mov
pushf
adc
mov
add
fmuls
out
nop
int
jl
pop
push
jl
xorb
cwtl
ret
rorb
sbbb
imul
inc
cld
add
imul
xor
mov
div
jmp
lret
pop
cmp
adc
nop
mov
cmp
adc
and
iret
mov
inc
mov
int
nop
mov
and
dec
das
lods
hlt
stos
mov
xor
imul
leave
das
mov
jne
rep
jg
sub
cmp
mov
fndisi(8087
mov
sub
fcmovnb
aaa
out
cmp
mov
cwtl
arpl
mov
inc
pop
pop
add
pop
xchg
jle
cmp
xchg
and
lea
cmpsl
aam
dec
pop
leave
aam
adc
cmp
pop
push
jg
jnp
nop
sub
mov
dec
mov
xchg
mov
fisttpl
into
and
push
inc
outsb
std
stos
testl
jmp
aaa
jno
sub
psubq
aad
xor
add
inc
stos
push
sub
fbld
or
adc
or
pop
data16
sbb
adc
xchg
add
dec
or
out
fcoms
push
mov
inc
push
adc
js
dec
outsb
ret
add
loop
lock
clc
sbb
and
sub
mov
cmp
dec
scas
or
gs
push
push
movsl
push
dec
leave
pop
pop
mov
dec
sub
adc
xchg
aad
mov
pop
xor
add
fiadds
xchg
push
xchg
dec
mov
fsts
push
mov
mov
inc
jbe
cmp
xor
xor
mov
or
cmpl
pop
sti
gs
je
decb
stos
orl
leave
dec
lret
fsubl
arpl
scas
or
lret
outsb
pop
cwtl
cmp
cs
dec
xchg
enter
add
xchg
lods
xor
jg
push
pop
cmp
xchg
xchg
das
lods
adc
cmp
fadds
je
gs
fs
jge
and
in
mov
mov
cmp
insl
inc
pop
hlt
daa
mov
jb
into
or
push
mov
mov
sbb
mov
inc
dec
aas
push
inc
inc
es
add
arpl
movsb
dec
mov
mov
daa
inc
mov
mov
mov
jecxz
je
xchg
push
loope
or
add
fwait
jo
xchg
orl
int3
shl
leave
mov
adc
push
enter
xchg
dec
cmp
jle
push
fsubl
aad
xor
clc
pop
mov
mov
and
movsl
xchg
sbb
mov
cld
add
add
test
or
lahf
test
xchg
loope
mov
jnp
dec
cmp
add
sti
and
rorl
ss
or
jno
addr16
cmp
fildl
test
out
gs
mov
pop
test
add
push
popf
jae
mov
dec
inc
test
mov
inc
xchg
sti
jbe
adc
jge
sub
push
out
or
int3
cmp
lock
arpl
loope
mov
push
or
iret
lret
pop
push
adc
clc
fcomps
jbe
xor
shlb
cmp
sbb
es
leave
cmpsb
push
jp
mov
and
jae
lret
mov
std
sbb
sbb
ljmp
dec
or
and
push
dec
pop
cmpps
in
mov
insl
cmpsb
inc
outsb
fnstenv
mov
add
sbb
cmc
adc
sub
fmull
dec
pop
jmp
leave
int
mov
inc
dec
rcll
xlat
outsb
cmp
mov
xchg
add
icebp
lds
pop
fadds
in
mov
mov
cmp
daa
and
push
adc
sbb
pop
lods
sub
add
rcr
inc
loopne
ja
sbb
cwtl
jp
mov
into
xorl
sub
cmp
push
aas
jecxz
into
xchg
mov
mov
arpl
cmp
push
mov
jnp
xorps
int
mov
pop
inc
xor
fisttps
xor
xor
sub
sahf
repnz
pop
adc
inc
fimull
lcall
fstps
and
pop
repz
push
jns
ss
push
out
lret
jno
adc
das
xor
jle
adc
push
push
jl
lahf
mov
movsb
cs
ljmp
cmp
mov
fdivl
sbb
or
push
and
and
mov
pop
dec
mov
dec
or
repnz
jmp
dec
clflush
dec
push
scas
or
or
ljmp
repnz
js
mov
xchg
cmpsb
inc
shlb
xchg
sbb
cmp
jle
xchg
stc
cmc
mov
popf
fs
dec
aam
mov
mov
cltd
incl
addl
dec
pop
cmc
sub
test
les
or
inc
ja
cmp
int
cmp
fiaddl
and
xor
inc
std
insb
out
orb
sbb
nop
sti
xor
test
lcall
les
imul
push
ljmp
and
lret
shrb
jecxz
cmp
dec
adc
fsubrs
in
inc
mov
sub
push
sbb
pop
int
inc
mov
push
dec
jo
push
push
push
or
insb
inc
testb
and
push
dec
sub
in
es
xchg
pop
dec
xor
popa
push
test
push
loope
cmp
lret
mov
push
movsb
or
repnz
mov
xor
or
out
lret
scas
push
int3
or
push
rolb
arpl
subb
aad
negl
cwtl
pop
out
push
popf
push
jno
into
push
loopne
jno
pop
out
outsb
out
movsl
xchg
cltd
sbb
dec
aaa
call
idiv
and
scas
pop
sbb
cmpsl
out
adc
push
cli
xor
int3
or
popf
cmp
inc
outsl
sub
sub
popf
jge
shll
xchg
mov
sbb
repnz
out
or
dec
sub
inc
xlat
outsl
aad
pop
xlat
addr16
out
mov
call
mov
es
sbb
mov
pop
adc
cmp
mov
sub
inc
sub
push
inc
scas
lahf
jnp
jns
sarb
pop
fcomps
dec
sbb
mov
inc
mov
adc
mov
mov
pop
shr
mov
arpl
shrb
jp
mov
pop
fwait
inc
xorps
push
and
mov
arpl
sub
add
enter
or
test
add
lods
jmp
mov
dec
sub
xor
jb
and
inc
mov
mov
in
adcl
push
jae
ret
and
push
das
jg
inc
mov
push
mul
in
push
mov
add
iret
hlt
push
mov
test
sbb
adc
add
adc
sbb
addb
cmp
je
pop
lahf
add
ficoms
mov
jmp
cmc
xchg
cmp
push
mov
adc
loop
xchg
adc
and
inc
and
and
out
es
loopne
fistpll
cmp
inc
lcall
fisubl
ljmp
push
ret
aad
xchg
popf
sbb
cmp
enter
jecxz
cwtl
cmp
sarl
push
adc
and
mov
sbb
mov
shl
jmp
inc
insl
aad
or
dec
in
stos
sub
sbb
out
add
inc
in
frstor
ds
or
xchg
dec
jns
pop
sbb
clc
xor
xorb
cmp
mov
xor
dec
fildll
ss
pop
jnp
arpl
cmp
movl
lods
lock
inc
cmc
dec
pop
scas
shll
cltd
stos
jle
ja
test
sub
pop
das
jbe
iret
jmp
in
xchg
leave
xchg
in
je
cltd
jbe
dec
jge
and
out
js
mov
cmpsl
js
out
cs
xorb
iret
cmpsb
jns
sbb
push
cmpsl
bound
movsb
fstp
inc
imul
ds
sar
out
mov
sub
cmp
pop
nop
lods
out
and
test
push
adc
pop
mov
mov
enter
mov
cmp
fisttpl
lods
cwtl
dec
adc
insb
pop
bound
imul
ret
cmpsl
inc
dec
mov
out
xor
push
shll
and
mov
cmp
int3
xor
repnz
cmp
sbb
call
loop
add
jnp
cmp
dec
and
pop
pushf
pusha
mov
mov
push
shll
movsb
fnstenv
ds
inc
pop
lds
sti
push
mov
mov
scas
sarl
xchg
popa
xlat
pop
es
mov
stos
sti
cmp
xchg
cmp
mov
sbb
jp
out
jne
stos
jle
cld
and
sub
imul
cmp
ret
cmp
das
rcrb
sahf
test
xchg
ljmp
pop
mov
mov
cmp
xchg
push
icebp
mov
xbegin
shrb
ljmp
dec
sub
lods
or
data16
and
ljmp
mov
add
push
xor
or
cmc
xchg
and
push
hlt
adc
mov
cs
adc
xorb
dec
push
xchg
stos
das
pop
mov
mov
test
ficoml
mov
inc
in
jg
popa
mov
cmp
out
punpckhbw
loopne
jge
mov
or
push
sub
in
jg
push
scas
sub
mov
outsb
inc
xchg
idivb
arpl
fcompl
insl
inc
mov
sub
roll
adc
out
mov
jmp
mov
lds
sub
push
inc
pop
filds
aam
xchg
and
fdivp
sbb
sbb
xchg
rolb
pop
fsubp
stos
sub
adc
push
out
and
mov
jno
mov
faddl
dec
dec
sbb
sub
and
clc
stos
xchg
jne
fisubl
mov
push
mov
loopne
repz
pop
dec
adc
mov
out
push
subb
xchg
bound
repnz
mov
mov
movb
cmc
pop
push
in
in
stos
out
pop
sahf
add
mov
add
pop
inc
lds
fdecstp
mov
mov
xchg
popa
mov
mov
push
xor
sti
or
jno
inc
add
mov
adc
ret
scas
push
stc
es
inc
fldt
mov
aas
sbbl
popa
mov
cmp
mov
mov
xlat
mov
mov
dec
cmc
cmp
sub
daa
test
fbstp
adc
sbb
cmpb
add
daa
and
xor
dec
xlat
cmp
lret
xchg
fdivs
je
test
mov
sub
icebp
cmpl
pushf
rolb
xchg
inc
xor
in
pop
ss
pop
arpl
jbe
movsl
dec
in
jmp
mov
loopne
aaa
adc
imul
push
xchg
push
pop
jge
aam
push
in
sbb
cwtl
xor
dec
jmp
jge
loope
inc
sbbb
shl
pop
sub
mov
call
push
jmp
mov
jl
add
icebp
mov
adc
ljmp
inc
inc
jno
fdivr
out
jns
mov
and
sub
sbb
sti
into
scas
jno
push
sub
bound
xor
mov
and
push
filds
mov
inc
xchg
mov
sub
stos
dec
pop
mov
or
les
mov
mov
jae
dec
jno
imul
jo
ds
sahf
jo
jge
daa
enter
jb
stc
stos
cld
movsb
icebp
ret
mov
dec
cltd
rcrb
mov
cmp
repnz
out
leave
pop
dec
loope
fsts
sub
ret
jecxz
or
or
int
gs
cld
cmpsl
test
inc
test
xor
jno
aad
adc
or
cmp
push
mov
bound
dec
jmp
call
ret
push
mov
sbb
loope
ss
testl
xlat
or
les
jns
dec
cmc
popf
mov
xchg
sbb
aad
push
rcr
dec
mov
imul
cld
xchg
js
or
pushl
pop
mov
push
jne
dec
and
pusha
mov
inc
fmuls
or
sub
jns
sbb
lahf
sub
ljmp
cli
repnz
test
sbb
jo
cwtl
inc
sbb
dec
int3
nop
add
fisubrl
jne
and
loopne
pop
push
mov
in
cmpsl
mov
imul
icebp
ret
and
pusha
xchg
adc
mov
dec
mov
insb
push
nop
push
jl
jl
jg
mov
adc
out
jp
mov
jnp
mov
daa
mov
in
icebp
enter
pop
jmp
xor
cmp
fildll
inc
loopne
dec
cmpsb
xchg
outsb
cwtl
into
cwtl
loopne
inc
mov
repnz
movzwl
mov
data16
fs
ljmp
sbb
or
aas
jg
xor
sub
insl
inc
pop
ret
jbe
pop
sarb
loop
daa
dec
bound
stc
push
jnp
pop
test
je
adc
xor
loopne
dec
imul
es
cmp
out
add
push
stos
lods
push
fwait
out
push
push
or
mov
mov
js
add
adc
dec
cmpsb
xor
fsubs
push
mov
out
xchg
push
adc
pop
add
rdpmc
shrb
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
jmp
scas
fldl
movsl
jl
stc
mov
dec
lods
xchg
pop
mov
pop
dec
sbb
pop
jae
sub
sarl
je
jecxz
or
jmp
cltd
jecxz
lahf
jne
imul
fisubrl
jns
rcrb
or
adc
cwtl
add
push
stos
mov
jnp
mov
xchg
cmp
and
push
lods
ret
or
imul
jp
loopne
or
fs
movsl
out
xlat
sti
cwtl
je
inc
loope
push
push
test
pushf
pushf
sbb
cmc
sbb
cs
mov
pop
inc
pushl
into
daa
lcall
jmp
in
cmp
xor
inc
sub
push
mov
xchg
xlat
and
int3
es
jmp
cmpsl
and
fistl
mov
call
shlb
or
cmpsb
or
pop
test
int
xor
xchg
xor
pop
push
push
insb
pop
inc
jg
adc
mov
jae
mov
and
mov
or
iret
cmp
orl
mov
jnp
xchg
in
shll
notb
pop
push
mov
push
movsb
in
dec
movsl
push
and
sbb
fistpll
movsb
adc
std
xchg
test
xor
mov
adcl
or
inc
mov
mov
repnz
out
ret
aad
xorl
push
mov
sbb
xchg
pop
add
fldenv
out
pushaw
out
pusha
fsubs
cmc
jo
pop
in
and
fcompl
std
addr16
xor
jge
negb
add
nop
pop
add
sub
mov
enter
or
mov
aaa
lret
pop
and
jns
jmp
mov
out
test
daa
pslld
sti
test
in
sub
mov
popa
lret
loope
repnz
mov
cld
jns
push
dec
ficoms
in
add
or
ret
lds
xlat
dec
mov
mov
idiv
rcl
push
das
popa
mov
sbb
lods
jns
mov
ret
into
mov
loop
ret
inc
mov
or
loopne
xchg
jno
outsl
shll
orl
jbe
xchg
dec
pop
lds
int3
pop
mov
cmp
xchg
inc
aad
arpl
push
les
add
lock
scas
push
mov
fcoml
popa
out
dec
pushf
testl
lods
gs
and
mov
data16
repnz
dec
xchg
cli
mov
lret
add
jl
movsb
sbbl
mov
mov
out
repnz
je
test
clc
xchg
push
lret
stos
subb
cmp
inc
pop
out
jno
mov
lret
fnstenv
arpl
push
xor
notb
iret
jno
mov
sbb
dec
mov
mov
jmp
mov
push
mov
push
pop
test
push
jmp
pop
and
jbe
xor
mov
arpl
mov
xchg
enter
dec
rcll
sub
cmp
loop
pop
xchg
or
mov
pusha
scas
cltd
jecxz
imul
adc
cmp
mov
xchg
jge
rolb
mov
push
sub
stos
jp
inc
mov
jge
adc
mov
lock
xchg
scas
fidivrl
out
jae
lret
aad
add
add
lcall
sti
mov
ja,pn
enter
pop
in
pop
adc
cwtl
stos
pop
sub
mov
repz
movsl
movsl
sbb
or
jnp
int3
cmpsb
push
cmc
outsl
out
adc
mov
int3
mov
hlt
sbb
inc
sbb
ret
fadd
mov
mov
cli
jmp
mov
dec
xchg
dec
mov
dec
mov
mov
mov
repnz
outsb
mov
stc
enter
sub
pushf
cmc
fwait
add
popa
cmp
es
and
es
jno
mov
push
xlat
pop
cmp
inc
xlat
jp
add
pop
dec
loopne
fdivs
xor
cmp
jbe
mov
xlat
mov
xor
insl
jg
push
or
lods
call
pop
icebp
dec
mov
imul
pusha
cmc
add
push
inc
mov
lret
pop
add
jne
fwait
iret
xor
sbb
arpl
cmc
cmp
jns
cmp
add
repz
stos
inc
mov
scas
push
mov
rcr
jbe
sarb
mov
push
dec
into
ret
shl
pop
jb
pushf
out
ja
mov
test
xor
mov
cs
mov
push
push
or
dec
test
out
and
xor
push
pop
mov
sub
incb
mov
mov
mov
push
mov
popf
stc
push
call
out
xchg
push
xchg
enter
sbb
add
adcl
jp
lret
stos
jno
fstl
xor
mov
mov
mov
mov
insb
jecxz
mov
mov
fcomps
jo
mov
es
add
pushf
cmp
loope
push
movsb
mov
pushf
cltd
push
push
xor
cwtl
out
add
dec
ror
mov
inc
in
and
mov
or
sbb
out
cwtl
popa
cmp
inc
push
mov
shll
and
sbbl
std
mov
test
push
jbe
je
and
push
insb
dec
lahf
mov
mov
sub
dec
mov
outsb
jns
pop
xchg
inc
fucomp
or
lock
and
repz
sub
pop
cwtl
mov
mov
jb
cmp
and
sahf
dec
jae
jg
push
es
in
and
add
movsl
jo
cmp
push
cmp
sahf
add
mov
fucom
iret
mov
loopne
pop
movsl
push
pusha
test
inc
shrb
lcall
decb
add
imul
mov
pop
je
rcll
jle
mov
mov
mov
pushf
adc
ja
test
mov
out
xor
sub
into
xor
fisttps
in
dec
jp
push
xor
aaa
xor
test
dec
out
in
test
scas
lods
add
movsb
ror
pusha
mov
xchg
xchg
nop
jge
in
mov
adc
jecxz
sub
je
sbb
outsb
push
cwtl
repz
inc
xor
out
or
sbb
orl
mov
shlb
mov
xchg
fdivrl
push
sbb
cltd
and
pop
lcall
pop
loop
push
movsl
push
shr
mov
daa
cs
push
je
mov
mov
xor
movsl
out
mov
inc
inc
cltd
sbb
inc
pop
out
mov
dec
fcmovb
add
cmp
fildll
or
xchg
enter
rorb
sbb
xor
and
jmp
jne
add
subl
xchg
orl
mov
pmulhuw
jae
xor
jo
mov
ret
mov
enter
rcrb
dec
cli
or
add
mov
adc
mov
jno
int3
dec
mov
and
test
mov
jecxz
out
comiss
cmc
loope
std
rol
out
jns
ja
jbe
xor
fstpl
clc
aas
call
icebp
push
cmpsl
into
adc
mov
add
fnstcw
mov
test
inc
jnp
mov
es
xchg
sti
cmp
push
movsb
fsubrl
xlat
lahf
outsl
sub
inc
aad
sub
push
jmp
sub
xor
xchg
outsl
add
add
and
lods
rcr
push
or
cmp
push
movsl
inc
inc
out
push
iret
jp
stos
imul
mov
jge
out
or
or
or
mov
adc
mov
out
xor
cs
pushf
fldt
adc
sub
jl
pop
jecxz
sti
mov
jle
and
xchg
xchg
cmp
clc
rcll
xchg
mov
mov
jmp
push
inc
mov
pop
repnz
mov
xor
fisubl
and
jmp
cltd
popf
nop
mov
lock
sbb
lods
jo
sti
push
ds
fucomp
fisttpl
arpl
dec
rcrl
jp
mov
mov
and
dec
aas
xchg
fmuls
inc
and
bound
push
mov
add
and
push
sbb
and
push
cmp
push
xor
in
push
out
ret
stos
jg
aam
dec
xchg
inc
pop
pop
mov
test
xlat
mov
sbb
cmc
test
and
mov
loop
jg
mov
test
dec
push
or
mov
cmc
ljmp
idivl
clc
add
mov
or
add
fiadds
cmp
sub
test
push
adc
jns
add
into
mov
iret
adc
nop
out
ds
movsl
mov
push
cli
and
xchg
mov
xor
xchg
lret
pop
mov
jne
je
mov
or
int
rolb
push
rorl
into
mov
or
cmp
jecxz
sahf
dec
loope
js
or
jne
or
push
inc
lock
jb
mov
and
movsl
bound
and
xchg
xchg
jle
adcb
and
or
mov
js
xor
shll
stc
lahf
lods
xchg
incl
aaa
dec
pop
into
dec
stos
mov
xlat
pop
mov
repnz
fdivrs
imull
add
scas
cmp
adc
sahf
push
insl
into
mov
mov
roll
mov
sahf
xor
jns
std
push
mov
div
mov
pusha
loop
cmp
orl
push
dec
ljmp
nop
cmpsl
sub
icebp
jno
dec
loopne
push
or
mov
std
pop
inc
fdivp
out
aam
push
adc
cmp
push
or
cmp
jg
sti
mov
leave
mov
mov
xor
es
std
lahf
jle
pop
movsl
push
fnsave
out
push
mov
stos
lea
negb
test
mov
shll
xchg
and
lock
jne
out
mov
ret
data16
pop
inc
pop
into
push
movsl
out
popa
outsl
jle
push
xchg
inc
loopne,pt
mov
push
fbstp
and
mov
adc
je
sub
test
mov
lods
test
mov
arpl
mov
xchg
jno
inc
and
ret
xor
and
inc
fistpl
call
in
sti
sub
cmp
sahf
xor
mov
int
pop
rclb
xor
repz
dec
insl
std
mov
cmp
mov
and
movsl
iret
imul
in
add
adc
push
and
jecxz
xchg
repnz
in
xchg
inc
clc
jb
cwtl
clc
and
subb
fwait
xchg
notl
loop
mov
jb
hlt
xor
sarb
pop
outsl
mov
dec
leave
mov
mov
repz
icebp
lcall
fadds
inc
xchg
fisttps
bound
inc
jae
sub
adc
insb
or
xchg
insl
test
add
imul
shl
stos
in
lods
sbb
into
mov
and
fcompl
stos
xchg
pop
lock
mov
test
sbb
xor
mov
push
sub
add
call
cwtl
insb
dec
sbb
frstor
sti
jmp
fimull
movsl
jmp
pop
das
mov
out
les
loop
mov
das
scas
sbb
dec
sub
sbb
adc
scas
and
mov
subl
pushf
cmp
mov
outsl
pop
mov
add
mov
imul
jnp
jne
or
adc
ljmp
lahf
jmp
cltd
add
idiv
in
scas
push
pop
lds
xchg
repnz
jle
loope
jae
push
xor
jge
push
jae
flds
mov
in
jo
xor
cmp
das
int
push
lret
lods
test
pop
dec
pop
inc
or
scas
dec
inc
or
mov
jne
push
lret
shlb
push
or
inc
xchg
adc
shrl
adc
out
es
enter
and
loopne
sti
out
jmp
mov
xchg
sbb
cmp
leave
invlpg
cs
aad
and
fisubl
push
mov
call
int3
in
jo
sub
inc
add
sbb
mov
lahf
shlb
sub
popa
scas
outsl
xor
sub
mov
hlt
rorl
mov
das
xchg
dec
or
push
jns
mov
jno
xor
cld
lcall
pop
imul
xlat
inc
xchg
cmp
mov
cmp
xorb
insb
or
in
ss
jbe
mov
bound
test
pushf
std
sbb
mov
insl
test
add
aas
push
in
pusha
jo
add
push
and
cmp
push
jo
and
or
jle
add
pop
cmp
cmc
add
repnz
lods
and
fimull
pushf
pop
jge
fs
cmp
cmp
in
sub
add
daa
sbb
push
sbb
pop
xchg
push
pushf
sbb
mov
xchg
adc
sbb
jns
add
repnz
push
lcall
orl
stos
mov
call
xchg
and
je
push
push
lret
xchg
add
lea
and
jnp
jns
call
pop
lret
rorb
adc
incl
enter
add
jmp
nop
shrb
sub
addr16
sub
repz
adc
and
dec
add
ljmp
push
sub
scas
mov
push
jae
mov
sub
push
scas
lcall
push
call
fs
pop
cmp
mov
pop
lods
or
xlat
ds
std
mov
int3
cld
in
mov
xchg
lods
jne
adc
les
dec
push
xor
mov
out
roll
popa
cmpsb
ret
bound
andl
jne
mov
gs
sarl
push
cwtl
cmpsb
cmp
dec
cmc
jg
and
lret
loope
xchg
ret
aam
push
stos
cmp
into
stos
mov
fsts
cmc
adc
fstl
jl
push
test
mov
lret
push
xchg
jno
int3
call
mov
shlb
jge
lahf
mov
insl
dec
ljmp
pop
and
popf
loopne
or
push
fcomps
xchg
fcomps
repnz
mov
jmp
outsl
stos
inc
cmpsb
lock
ret
aas
sub
push
push
and
pop
inc
aaa
cli
lea
mov
lods
jno
sti
in
inc
fdivl
adc
jmp
adc
mov
in
mov
into
cltd
push
pop
ficoml
shlb
iret
fldcw
ss
jnp
ficompl
out
ret
and
mov
divb
les
and
adc
ds
int
aam
fbstp
sub
mov
and
jg
test
rolb
mov
test
inc
movsl
lret
stos
xchg
sub
cmpsb
sbb
mov
test
gs
mov
insl
testb
fmul
in
mov
sbb
push
and
cmp
push
mov
and
dec
add
xchg
fnstcw
test
test
pop
out
push
mov
lods
adc
clc
adc
aas
popa
ljmp
into
into
call
leave
pop
and
push
je
pop
pop
pop
scas
xchg
xor
jmp
mov
xchg
jb
xchg
fcomps
movsb
fidivrl
shl
movsb
icebp
mov
sub
push
inc
out
jg
in
pop
lods
orb
fstpt
pop
lock
inc
sbb
dec
pop
xchg
pop
mov
imul
jno
or
ss
daa
out
push
push
push
fnstsw
sub
repz
jne
aas
ret
out
repnz
cs
xchg
jg
pop
push
adc
xchg
out
mov
mov
imul
andl
xor
mov
pop
adc
out
mov
add
jp
in
add
jae
and
mov
mov
lds
ja
xor
adcb
inc
xchg
movsl
test
rolw
lret
ret
das
adc
mov
lods
jns
das
xchg
jbe
mov
pop
xchg
mov
popf
or
pop
cltd
movsl
sahf
test
sub
fs
in
js
fldl2t
and
std
xchg
ja
sti
sub
stc
mov
dec
ret
sub
pop
pop
sarl
popa
inc
enter
sub
adc
dec
adc
xchg
leave
rclb
adc
rolb
inc
mov
ljmp
lret
hlt
in
insl
mov
jecxz
in
insb
mov
adc
and
es
mov
add
and
inc
xor
jmp
fdivs
xorl
jo
call
lods
xchg
push
cld
daa
jno
lret
cmp
leave
ss
mov
roll
lods
push
mov
mov
push
mul
clc
mov
cli
in
cmpsb
pop
dec
sarb
sub
cmp
scas
lcall
jge
or
scas
pop
rolb
jae
jecxz
fwait
push
fs
pop
inc
cmc
mov
lret
scas
xor
cmp
jmp
or
mov
xchg
insl
xor
insb
outsl
fcomp
cltd
push
pop
cmp
adc
or
std
xchg
mov
push
and
in
ds
stos
in
xchg
xchg
shl
andb
mov
inc
mov
icebp
push
idivb
cmpsb
inc
mov
mov
add
stos
inc
inc
jo
lods
xor
sti
xchg
sahf
inc
pop
pop
pop
cmpsb
fimuls
cmpsb
pop
add
push
pop
jge
push
sbb
jmp
push
inc
pop
mov
add
out
addl
xchg
enter
xchg
push
inc
ss
sahf
stc
mov
into
jno
fwait
addl
outsl
dec
adc
out
outsl
xchg
adc
subb
fwait
and
sub
lds
popf
lret
cld
dec
in
xchg
push
xchg
test
push
scas
fbld
mov
xor
lcall
jno
cmp
and
popa
fldenv
sub
ret
mov
adc
dec
test
sbb
sbb
std
mov
push
popa
mov
jp
ret
add
insl
popf
inc
aam
dec
add
dec
pop
sbb
sub
dec
push
jbe
clc
xchg
ja
mov
jmp
xchg
xchg
fs
stc
pushf
pop
adc
nop
push
pop
dec
mov
or
ret
dec
jb
icebp
inc
cmp
xor
in
call
cmp
in
notb
sahf
mov
lea
dec
inc
pusha
inc
jmp
cmp
gs
mov
fdivrs
push
or
notl
cmp
jmp
sbb
pop
cmp
or
and
xchg
push
jl
dec
pop
shlb
xor
jl
or
jne
scas
pop
xor
sub
xchg
fwait
fwait
test
ss
sbb
adcb
daa
icebp
inc
push
idivl
sub
jo
testb
in
mov
insl
les
outsl
and
fwait
push
xchg
and
xchg
pushf
mov
pop
or
test
leave
sub
es
fcmovnbe
dec
mov
rcrb
jno
cmc
mov
dec
xor
cs
inc
jb
push
bound
cmp
or
test
sub
pop
jmp
xchg
or
mov
mov
mov
inc
call
mov
lahf
xchg
ret
shrb
push
or
loopne
mov
xlat
repz
push
mov
ret
clc
xchg
in
sbb
loopne
aam
jno
xchg
adc
jb
sti
push
stos
inc
lds
xor
mov
andb
sahf
mov
jns
cmc
dec
dec
pop
mov
hlt
jne
int
out
xor
scas
mov
ret
lret
iret
jle
ficoms
adc
pop
sbbb
sub
sub
xchg
outsb
sbb
mov
sbb
adc
dec
sub
lea
mov
mov
sti
std
sbb
mov
push
fdivl
ret
push
add
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
jmp
push
gs
pop
out
dec
push
push
add
mov
out
xchg
movups
rcrb
dec
mov
loop
lcall
lcall
lahf
movsl
push
jge
adc
int3
inc
mov
or
lock
mov
in
sub
pop
sahf
or
push
pushl
cmpsl
adc
cwtl
test
push
sbb
aad
jae
fistpll
dec
fldenv
ljmp
ja
cmpsb
fstl
fwait
outsl
hlt
inc
outsb
sbb
mov
movsl
jne
xor
mov
sbb
in
ret
add
lcall
gs
sahf
push
jbe
aaa
sar
inc
push
sub
cs
mov
mov
push
stos
adc
fsubs
aam
ret
lds
adc
lahf
stos
fldenv
pop
push
stos
cmp
mov
out
dec
fisttpl
ret
push
mov
test
and
sbb
push
aam
icebp
sahf
mov
pop
sub
loopne
int
aaa
ss
adc
sbb
xor
loope
dec
fsubrs
pop
aad
push
mov
stc
mov
inc
fadds
sub
xchg
and
pop
icebp
push
or
aam
in
out
bound
lret
fwait
mov
fmuls
dec
mov
outsb
sti
add
fisubrs
int
loope
je
xlat
into
aam
adc
loope
dec
pop
xchg
sub
orb
shlb
hlt
xchg
cmp
lret
mov
jnp
pop
push
sbbl
jne
insl
sub
aaa
ljmp
push
jl
pop
mov
jno
pop
jo
add
sub
sti
loop
nop
pop
pop
push
lock
cmp
mov
fnstenv
mov
test
add
fadd
add
ret
dec
addr16
and
mov
cmc
sbb
outsl
pushf
scas
leave
aaa
add
das
inc
test
cmpsb
and
add
adc
mov
adc
add
out
mov
fiaddl
push
imul
out
xor
push
xor
daa
adc
adc
shlb
daa
jp
pop
rorb
and
ret
out
or
add
inc
push
enter
mov
cmpsb
adcb
mov
rol
xchg
jmp
pushf
or
pop
mov
push
inc
pop
enter
sub
fidivl
jge
bswap
out
ds
adc
inc
sahf
or
into
andl
adc
push
xchg
pop
outsl
add
scas
jmp
rclb
rolb
push
loopne
cmp
inc
fidivrs
add
or
pop
xchg
pop
call
sub
xchg
add
and
in
popf
lahf
pop
gs
inc
xor
outsl
shll
dec
mov
popa
out
nopl
xchg
and
xorb
out
insl
add
mov
popa
dec
out
lock
xchg
dec
out
ljmp
js
add
pop
std
fs
in
xchg
inc
call
popf
rorl
push
icebp
clc
mov
xchg
xchg
decb
idiv
leave
je
ret
lods
adc
or
sbb
inc
adc
popa
inc
out
in
popa
not
imul
xor
in
add
mov
out
push
mov
ror
loope
mov
fcmovne
es
add
jae
xchg
jbe
mov
xor
das
adc
add
xchg
or
dec
mov
sbb
dec
jbe,pn
arpl
cmp
pop
mov
push
arpl
scas
nop
xor
jge
lret
cmc
iret
negb
imul
rclb
pop
jo
or
scas
in
push
add
je
rcll
lret
sbb
mov
sti
out
es
sbb
add
leave
in
xor
outsl
or
sbb
dec
inc
cltd
and
jg
ret
inc
std
ret
jb
jae
adc
pop
ret
das
ja
scas
scas
sub
scas
mov
adcl
sub
push
xor
or
inc
push
adc
pop
insl
and
bound
inc
icebp
mov
jb
out
sahf
mov
movsl
push
push
and
push
sarb
or
les
jbe
repnz
adc
add
rcll
cmp
fistl
pop
je
out
mov
fmul
sahf
frstor
jp
jne
push
pushf
test
cmp
add
imul
jmp
pop
ret
xchg
push
in
loopne
popf
xor
push
mov
sub
sbb
and
xor
adcb
insl
movlps
cli
mov
adc
jns
loope
mov
lods
inc
adc
push
xchg
and
and
or
mov
fbld
pusha
shl
push
jge
pop
jae
inc
call
inc
pop
je
decl
dec
inc
dec
xor
mov
icebp
sub
popa
inc
test
mov
test
mov
frstor
mov
and
das
addr16
das
or
and
fisubrl
cmpsb
orl
add
xchg
cmpsl
pop
faddl
or
mov
fwait
push
mov
in
clc
sub
pushf
pop
outsb
fimull
sub
xchg
push
inc
or
inc
ljmp
jg
lret
rcrb
jmp
popa
cltd
inc
xor
xor
aas
bnd
loope
or
jge
ficomps
sti
add
gs
jle
call
pop
insb
dec
iret
dec
ret
xchg
rclb
dec
rcll
lcall
pop
popa
lret
pusha
pushf
sti
inc
or
ficoms
test
inc
ss
dec
shll
sub
dec
rcl
jno
sbb
or
int3
idivb
call
cmpsl
cmp
es
pop
cmp
push
sub
adc
add
or
mov
or
add
jmp
hlt
dec
test
push
and
mov
jg
push
fsubr
xchg
int3
pusha
outsl
jno
lret
mov
int
xchg
push
xor
inc
outsl
lods
nop
out
cmp
add
js
sbb
das
add
hlt
inc
push
cmp
cli
dec
jbe
imul
pop
xor
jge
fists
leave
push
out
adc
inc
push
lea
sub
cwtl
xor
add
je
fucomp
es
lahf
fdivrl
aas
std
lret
add
lcall
repnz
cmp
push
ss
sbb
rcll
xor
adc
call
push
mov
add
popf
jb
adc
jg
mov
ss
mov
mov
adc
dec
jb
mov
les
cmp
scas
pop
cmp
adc
mov
add
sub
notb
cmpsl
push
xor
mov
pop
add
sbb
push
adc
xchg
int3
xchg
popf
push
xchg
add
mov
inc
xchg
mov
sbb
xchg
cld
inc
cli
push
add
push
cmp
jg
int3
nop
into
mov
out
fists
out
setg
hlt
adc
xchg
stos
addr16
xchg
loopne
sahf
fs
into
enter
xchg
out
sbb
js
pop
and
gs
xchg
pop
pop
mov
add
xor
les
pop
push
sub
scas
iret
xchg
push
push
xchg
test
aad
repnz
pop
pop
cmp
lock
pop
dec
mov
cmp
xor
rorl
call
fs
sbb
rclb
shrb
scas
jp
sbb
pop
mov
push
or
mov
lods
inc
and
stos
es
sbb
mov
nop
jmp
test
daa
ljmp
push
ja
in
stos
and
mov
cmpsb
inc
jae
jp
sub
and
mov
shrb
ljmp
test
ret
scas
xchg
sti
push
int3
in
xor
add
mov
push
test
cmpsl
sub
pop
fcomip
adc
fwait
dec
dec
fdivrs
icebp
ret
outsb
daa
lds
xchg
int
loop
mov
popf
loope
jmp
mov
lea
mov
ficomps
dec
pushf
xor
mov
xchg
cli
sbb
test
lds
inc
inc
leave
mov
lcall
or
movsb
pop
mov
lret
xorl
add
pop
jp
push
stos
mov
lea
dec
mov
in
and
mov
mov
aam
adc
jmp
mov
xor
arpl
fsts
and
lock
loope
aam
jp
leave
pop
adc
pop
add
sbb
bound
sbb
outsb
cmp
data16
jno
or
mov
imulb
repz
jp
adc
dec
loope
popa
xlat
jg
pop
inc
lock
in
cli
xchg
hlt
push
mov
es
pop
out
jne
jb
orb
loope
aas
in
lret
lds
add
jmp
movsb
lds
shrb
adc
test
or
fdivl
mov
pop
dec
jo
fsts
in
fisubrl
cltd
test
lcall
sbb
cmp
jo
ror
dec
cmp
je
adc
mov
push
and
push
ficoml
sti
inc
inc
mov
repz
pop
sub
adc
cld
jl
mov
enter
ret
mov
inc
push
add
cmp
popf
cltd
in
loopne
fdivrs
imul
jae
or
test
sub
push
sub
icebp
inc
aas
fsubl
lock
movsb
jns
push
scas
add
roll
push
pop
sub
fcoml
push
push
lret
dec
inc
and
cmp
leave
jle
mov
cmp
pop
je
inc
xor
inc
mov
lret
and
mov
cmp
arpl
scas
sub
stos
cmp
mov
loope
add
inc
mov
pop
xchg
mov
add
repnz
cmp
dec
cmp
or
or
inc
jne
cmpsb
pop
loope
and
dec
jno
bound
cmpsl
addr16
cmp
rol
jmp
jg
inc
fldcw
lods
jle
inc
imul
or
mov
inc
xor
mov
pop
rcll
aaa
sbb
out
je
and
shr
outsl
sub
cmp
les
pop
or
jns
inc
pop
fistpl
data16
mov
jne
mov
dec
test
inc
fwait
jle
movsl
ljmp
pop
inc
push
fldl
les
mov
hlt
clc
lret
sub
rol
xchg
dec
cli
ret
out
data16
mov
sbb
mov
shll
insb
pop
loope
xchg
jecxz
jno
roll
loope
scas
mov
xor
les
mov
imul
sbb
test
je
inc
ljmp
pop
push
jo
jle
lret
inc
or
sub
mov
and
lret
scas
cltd
test
mov
sub
dec
subl
xor
lret
xchg
push
or
and
ja
mov
or
movsb
push
rcll
aam
loope
pop
cmp
xchg
das
adc
movsl
aas
fistpll
cmp
test
cmp
flds
aad
or
mov
mov
mov
mov
enter
mov
je
out
and
jl
inc
sbbl
dec
dec
inc
push
mov
fstps
push
fildll
pop
dec
fs
dec
inc
insb
add
fsubs
out
jnp
push
lcall
cmpsl
push
cmpsl
movl
popa
cli
stos
jmp
push
lods
sub
mov
insb
ss
cmp
fisttps
jecxz
mov
mov
shll
adc
push
out
sbb
pop
dec
or
stos
jmp
inc
mov
xchg
orb
aaa
sbb
cmpsb
push
sub
cmp
jnp
jo
mov
fldcw
cmp
adc
jg
push
mov
insl
pop
add
ss
adc
dec
loope
push
out
enter
xor
mov
add
jp
call
mov
pop
notl
pushf
dec
subb
sbb
test
mov
adc
push
sti
leave
mov
jp
mov
outsb
fldcw
ss
inc
xchg
sbbb
or
mov
jb
inc
imul
aaa
rol
cwtl
xor
mull
clc
push
es
xchg
sub
pushf
cmp
add
fucomp
and
dec
cld
iret
cld
sub
cwtl
pop
jecxz
popl
movsb
pop
outsb
pop
mov
sub
sub
les
nop
imul
and
push
mov
sub
mov
jl
or
rorl
mov
mov
insb
movsb
push
push
test
in
cmp
pop
lret
pop
aad
push
ficoml
or
hlt
jbe
test
data16
inc
mov
adc
dec
fldenv
int3
into
cmp
cwtl
popf
lret
or
dec
stos
inc
inc
or
insb
pushf
shll
xchg
cli
repnz
out
mov
gs
call
test
popl
std
mov
jae
sbb
mov
mov
jns
jge
push
and
add
inc
div
sbb
and
maxps
fwait
jecxz
es
insl
movsb
loop
and
push
add
std
or
pushf
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
cmpl
jg
mov
add
jmp
pushl
call
push
jmp
addb
add
mov
xchg
jno
mov
pop
das
aaa
mov
and
cmp
rolb
or
lahf
push
xor
lret
aaa
inc
fstpl
pusha
pop
adc
and
jne
mov
js
lds
add
call
data16
imul
div
gs
xor
out
mov
negl
pusha
popa
cld
rcrb
dec
or
std
fcomps
or
push
jle
mov
addr16
mov
dec
shrl
loopne
dec
stos
jno
pop
pop
and
inc
bts
jl
inc
sbb
cmpsl
lret
sub
dec
xchg
call
cmpb
jne
or
iret
push
andl
add
inc
and
and
js
cmpsb
pop
addr16
or
xchg
or
push
mov
adc
or
arpl
add
inc
pop
sahf
fwait
push
insb
xchg
inc
dec
mov
js
inc
inc
xor
adc
fistpll
test
shrl
ds
mov
data16
mov
bound
mov
sbb
cmc
xor
ror
pop
out
ret
pop
cmp
loop
jl
mov
push
adc
xor
sti
pop
pop
fidivl
stos
aaa
cmp
add
fidivrl
cmp
scas
repnz
mov
or
in
add
imul
xor
push
leave
inc
jae
inc
inc
test
mov
dec
sub
jnp
stos
push
push
pop
sub
lret
and
mov
pop
jns
pop
loope
xor
aad
jl
scas
jp
push
jb
adc
jg
pop
add
sahf
imul
enter
xchg
inc
sbb
jnp
push
and
aad
stos
dec
inc
add
fs
inc
xor
add
inc
out
pop
in
push
add
jge
ror
adc
movsb
mov
or
jecxz
inc
cmp
cmp
aad
xchg
cmp
mov
hlt
inc
push
notl
adc
mov
adc
in
pop
push
pop
fidivrl
bound
cmpsl
dec
pop
stos
test
in
mov
fldl
jp
dec
lea
int
xchg
and
and
int3
daa
xor
int
aam
rorb
pop
stc
mov
ret
call
add
sbb
lds
out
iret
iret
pop
push
dec
not
add
hlt
rcrb
sbb
lock
sbb
and
or
idivl
fiadds
adc
jg
test
xchg
lods
shll
xchg
lahf
aam
sbb
incl
xor
in
jmp
jge
jmp
mov
xor
shll
lahf
fdivrl
inc
clc
inc
pop
sti
test
xchg
inc
jno
stos
js
mov
pop
std
cmc
inc
adc
push
jle
in
push
popa
sbb
push
lret
or
loopne
ds
or
mov
push
xor
dec
or
xchg
scas
sub
fidivrl
imul
sbb
push
xchg
push
loope
in
cmp
clc
subl
mov
mov
and
inc
xlat
add
adc
or
push
lods
inc
arpl
into
and
pop
dec
cld
repz
sub
pop
adc
lods
test
push
hlt
icebp
sbb
popa
lcall
jno
lahf
dec
mov
dec
add
inc
pop
inc
int3
shrl
out
daa
lahf
dec
mov
or
ret
movsb
test
fdivs
stc
adc
leave
inc
mov
adc
inc
cs
int3
cmp
popf
xor
outsl
jbe
fucomi
lds
enter
mov
mov
dec
inc
dec
jp
and
shl
inc
xor
pushf
scas
sbb
out
or
mov
xlat
push
push
loop
mov
rorl
pop
xchg
or
sbb
andl
shl
push
neg
push
insl
fistl
es
in
gs
dec
sahf
mov
and
inc
xchg
mov
xor
cltd
jl
mov
xchg
mov
mov
or
out
adc
and
pop
fdivrp
xchg
dec
jp
enter
out
pop
popa
stos
mov
lods
out
jnp
shrb
add
jecxz,pn
cmpsl
adc
fbld
les
lock
mov
push
gs
jbe
stos
out
push
mov
into
xchg
inc
mov
mov
xor
pop
mov
icebp
inc
rcrb
mov
lcall
js
xor
jp
icebp
out
mov
popa
daa
jnp
lret
test
adc
leave
dec
shlb
sbb
repnz
mov
sub
jp
adc
jp
dec
or
int
pop
mov
mov
insl
sub
jne
sbbl
test
shl
rcr
cli
push
out
xlat
xchg
cltd
dec
add
mov
push
xchg
cld
mov
dec
xchg
adc
stc
rorl
push
sbb
nop
fs
stc
push
stc
jns
mull
mov
aaa
jne
pop
arpl
jg
or
inc
imul
mov
add
sub
xor
loope
adc
mov
pop
add
aam
sub
lock
mov
lret
pop
nop
pop
cltd
push
mov
cs
pop
push
sbb
mov
scas
out
pop
daa
lods
aad
xchg
push
divl
ljmp
jb
mov
jecxz
fs
cli
js
packssdw
dec
fistl
lock
xlat
rolb
aaa
cmpsb
add
or
or
cmpsb
cltd
sub
sub
or
add
xor
sub
orb
out
sbb
rcll
pop
loopne
adc
testb
call
insl
out
loope
adc
jae
outsl
clc
test
cmp
rclb
lahf
das
fwait
xchg
push
add
les
aad
mov
or
pop
cmpsb
mov
pop
adc
aas
imul
je
or
hlt
push
xchg
insb
imul
outsb
dec
add
adc
enter
fmuls
jo
into
into
sub
bound
das
dec
stc
lret
cmpsb
add
enter
addl
outsb
ficompl
push
mov
sbb
stos
loopne
mov
imul
xchg
push
xchg
adc
aaa
pop
and
push
add
push
imul
xlat
ficoml
imul
jle
shrl
fidivs
pushf
add
idivl
push
sti
push
daa
shlb
into
in
mov
mov
loope
and
dec
sbb
dec
lret
rcll
push
sbb
das
jmp
xchg
nop
push
sbb
push
mov
popa
xchg
lods
jns
add
lods
sbb
sub
mov
xlat
jne
mov
adc
jle
repz
mov
cs
ss
mov
mov
adc
cmpsl
sbb
es
stos
jnp
pop
aad
sti
ljmp
jle
xor
inc
mov
xchg
or
ja
sbb
cld
and
jl
sbb
mov
dec
mov
or
scas
inc
inc
add
jge
movzbl
add
adc
jmp
push
push
push
pushl
call
shrd
jmp
outsb
fwait
push
movsl
or
movsb
js
lock
jno
cli
inc
and
fisttps
negb
les
test
insl
hlt
sahf
dec
into
jecxz
test
cmpsl
rcl
cmp
push
adc
and
xor
out
mov
lods
lahf
gs
scas
sbbb
sbb
push
xchg
or
lods
aas
xor
inc
popa
stc
mov
xchg
or
pop
xchg
cmp
insl
movsb
lahf
pop
sub
adc
jge
xchg
pop
jae
shl
add
and
push
dec
adc
mov
fidivl
cmpsb
mov
ja
push
adc
andl
xor
in
cmc
xchg
cmp
cli
loopne
push
adc
enter
je
sub
je
jae
jge
sti
jecxz
int3
pusha
inc
sbb
pop
outsb
xor
or
adc
mov
jne
out
imul
sbb
dec
addb
addr16
mov
iret
aas
mov
push
push
add
pop
dec
push
sbb
jge
xchg
push
aaa
cmpsb
xor
mov
scas
popf
jo
scas
fstl
out
xchg
sbbb
fisubrl
pop
scas
repnz
rorl
daa
sub
cmp
imul
cwtl
xor
das
adc
jge
cli
sub
stos
lahf
pop
cmpsl
sbb
lds
rorl
sub
call
cld
mov
dec
adc
lret
or
gs
cmpsb
mov
inc
add
mov
and
and
adc
mov
stos
loopne
push
call
ret
cwtl
xor
cwtl
fdivl
sbb
sahf
lcall
movsl
std
mov
insb
in
cwtl
mov
imul
pshufw
and
gs
pop
xchg
leave
and
jle
je
sbb
jae
jb
incb
jbe
sub
sbb
or
daa
into
mov
fsts
test
insb
push
aam
add
push
adc
push
insl
mov
xchg
mov
incb
jnp
dec
add
push
pop
daa
leave
stos
sbb
js
int3
jo
pop
push
lods
lret
cmp
xchg
pop
xor
push
out
aas
cmc
push
inc
loope
mov
mov
inc
push
or
into
mov
pop
imul
arpl
cmp
scas
mov
iret
in
xchg
xlat
and
icebp
test
mov
dec
stos
jge
inc
xor
xchg
xor
shlb
iret
out
je
faddl
adc
lcall
ror
inc
jl
sbb
push
in
fnstenv
dec
lea
fwait
ss
movsb
mov
cmp
popf
cld
stc
sahf
mov
arpl
mov
fwait
dec
dec
in
adc
repnz
xchg
or
jl
imull
adc
mov
fsubs
push
les
clc
add
inc
shr
jmp
jno
cltd
pop
aaa
xchg
ss
rcrl
fdivrs
les
ss
daa
and
test
test
mov
dec
mov
repz
and
mov
nop
out
xor
dec
dec
mov
cmpsl
add
dec
cmp
xor
popf
inc
cmpsl
cmp
push
mov
loope
shl
cmpsl
fnstenv
and
jne
push
jb
ret
push
jg
xor
sbbl
das
sub
ja
das
pusha
hlt
cmp
sub
fcoms
sbb
push
je
sbb
jb
xor
push
mov
xor
push
add
dec
fincstp
inc
dec
push
cmpsl
sti
int3
std
pop
lret
mov
sub
push
mov
push
cvttps2pi
ljmp
lcall
imul
sub
and
outsl
inc
lea
xor
daa
push
testb
add
sbb
inc
add
maxps
test
pushl
adc
lret
add
push
jne
sbb
fs
and
popf
xchg
aad
into
sub
addr16
dec
push
decl
stc
cmp
cmp
je
scas
dec
xor
cwtl
xor
sti
ss
mov
in
ja
xchg
mov
ret
mov
inc
sarl
leave
push
xchg
lahf
jo
inc
lds
mov
mov
out
jae
divl
push
adc
ja
dec
mov
enter
mov
rcrb
inc
pop
jge
out
mov
cmpb
add
dec
adc
pop
cmp
leave
push
in
loopne
and
lret
mov
xchg
pcmpeqd
inc
sbb
pop
rclb
sbb
popa
jmp
stc
inc
aas
push
stos
mov
repz
cmc
sub
ret
pop
ljmp
pop
mov
in
xchg
int3
dec
icebp
dec
loop
pop
and
jns
jb
add
cltd
loope
dec
fildll
inc
mov
and
test
rclb
push
dec
data16
rcl
and
movsb
pop
xchg
pop
dec
push
mov
mov
xchg
lret
in
cmp
xor
mov
inc
arpl
mov
cmp
lods
dec
xor
mov
les
out
mov
pushf
in
dec
add
inc
sub
enter
or
jmp
pop
cmpsl
cmpl
mov
std
xor
adcl
inc
mov
push
fldt
cs
dec
dec
popf
jae
call
pop
add
sub
cmp
push
nop
add
or
pop
or
icebp
fcoms
iret
shll
mov
jns
cmpsb
dec
add
inc
nop
xchg
sub
into
mov
xor
and
push
xchg
stos
sbb
and
in
ret
aaa
pop
mov
movsb
test
jns
jbe
push
mov
xor
enter
sbb
in
push
cmp
stos
mov
jo
inc
pop
add
xor
cltd
inc
xor
mov
sbb
out
fcomps
sarb
stc
insl
repnz
adc
sahf
pop
inc
stc
addr16
fadds
add
leave
push
out
pop
pop
ror
or
shll
mov
stc
fpatan
pop
nop
xchg
mov
pop
mov
or
shrl
mov
sub
adc
jecxz
inc
insl
imul
mov
dec
je
cmpsb
jp
or
inc
enter
cmp
and
rclb
repz
aaa
push
cs
push
pop
and
pop
clc
mov
pop
push
and
dec
inc
mov
daa
pusha
cli
jp
sbb
mov
inc
pop
mov
pop
dec
repnz
scas
add
xchg
roll
push
in
lds
xor
stos
jb
jge
push
movsb
add
mov
subb
and
dec
dec
fnsave
out
sbb
mov
adc
aas
xchg
xchg
ret
adc
push
add
test
cli
xor
jne
lods
test
adc
enter
lcall
xor
push
in
loop
dec
jge
movsb
jecxz
dec
mov
hlt
mov
rsm
loope
adc
or
inc
jg
push
outsb
dec
faddl
jne
xor
xor
movsl
bswap
inc
cs
or
push
test
or
and
lret
push
sbb
adc
xorl
add
or
sti
xor
and
mov
sbb
xor
sbbl
or
mov
sub
mov
mov
subl
shl
mov
and
mov
mov
shrd
movl
xor
addl
shr
mov
mov
sbb
mov
mov
mov
mov
sub
sub
xor
decl
or
orl
jmp
cli
int
lahf
push
or
inc
cmpsb
ss
mov
adc
addl
pusha
ljmp
stc
push
out
sbb
dec
mov
aas
xor
test
push
mov
and
xchg
in
aad
sub
xor
loope
mov
inc
out
aaa
inc
jecxz
icebp
add
les
rcrb
js
pop
xorb
jge
push
loope
mov
cmpsb
cwtl
les
xchg
adc
add
dec
aad
dec
sub
cmp
xlat
out
mov
xchg
mov
pop
inc
ss
add
bound
mov
sahf
into
imul
xor
push
loopne
rolb
push
bnd
lods
sahf
push
cmpsb
dec
pushf
shll
jmp
or
adc
cmp
lds
xchg
mov
addl
cmpsb
push
sahf
std
sbb
cmp
fwait
adc
cmpsb
mov
scas
sbb
cmc
cmp
insl
bnd
jg
lret
pop
data16
mov
or
cltd
pop
std
xchg
fisttpl
sub
xor
iret
mov
outsb
in
push
push
add
add
mov
in
out
inc
dec
cmp
fbld
repnz
pop
out
mov
test
dec
jle
ja
test
scas
ljmp
mov
adc
js
cmp
outsl
leave
lods
lret
pop
pop
sbb
movsb
push
fbstp
mov
pushl
and
xor
call
mov
pop
cmp
aad
enter
out
add
cmp
dec
xchg
dec
rolb
mov
mov
adc
push
or
xchg
repz
mov
dec
clc
cmp
frstor
lcall
test
mov
xchg
cwtl
sub
cli
jl
jge
push
shlb
jle
or
gs
sbb
adc
mov
cs
insb
ffree
test
inc
mov
call
lds
fwait
sub
sbb
mov
loope
insb
add
sbb
ljmp
icebp
call
es
push
sahf
cltd
aaa
push
push
add
lret
sbb
mov
in
xor
outsb
mov
inc
fwait
and
or
into
jmp
sti
imul
cmp
mov
dec
sub
loopne
push
mov
inc
cmp
cmpsl
jg
aas
mov
bound
pop
push
in
xor
jl
mov
sbb
dec
mov
mov
push
stc
sbb
mov
push
mov
js
push
testl
fnstsw
pusha
push
dec
inc
rorb
pop
inc
pushl
fsubs
sub
push
int3
jmp
imul
mov
imul
inc
jae
fists
xchg
popa
push
mov
pop
mov
ja
pop
ds
fxch
add
mov
sbb
cwtl
mov
es
gs
out
shlb
imul
outsb
loop
ljmp
insl
cmp
les
mov
in
repz
shl
test
add
fwait
inc
sti
test
push
enter
ret
in
test
adcl
test
jmp
mov
sub
or
test
and
dec
and
push
dec
popa
or
incb
cmp
dec
sub
jnp
ljmp
fimull
mov
push
xor
or
mov
adc
cmp
in
xor
pop
push
mov
inc
lods
pop
inc
fmul
cld
rcll
mov
xchg
mov
pop
mov
cmp
xchg
ss
mov
iret
adc
cmp
das
in
ljmp
fsubrl
jp
or
mov
lock
jecxz
movsl
cmp
mov
mov
scas
mov
paddsw
xor
stos
sub
mov
inc
push
sahf
adc
push
out
imul
fisttps
sar
xor
mov
rcll
icebp
mov
jne
dec
sahf
movsb
mov
stos
pop
push
or
in
movsb
mov
andb
xchg
mov
pop
adc
fwait
std
pop
ret
xchg
fcomip
sub
cmp
sub
dec
inc
mov
inc
pop
xor
jb
pusha
shlb
das
int3
repz
test
dec
test
mov
push
pop
xchg
mov
ljmp
fdivrs
repz
xor
mov
cmp
jno
nop
pop
mov
cs
jae
sti
xchg
xchg
loope,pn
mov
call
out
ret
cmp
mov
filds
stos
pop
in
jne
xor
in
mov
mov
push
divb
je
dec
repnz
pop
push
mov
jecxz
loopne
js
jne
fdiv
lods
mov
jecxz
pop
jecxz
add
into
insb
pop
test
push
out
inc
enter
jmp
arpl
sbb
xchg
sbbl
dec
popf
pop
or
sub
mov
fs
addr16
sbb
xlat
loope
fidivs
cmp
mov
inc
lock
pop
jecxz
inc
cwtl
and
pop
push
jmp
je
adc
push
jae
in
leave
adcb
push
adc
scas
xchg
cltd
push
fiadds
mov
jl
fadd
sbb
test
xor
roll
mov
out
and
sbb
fistpll
pusha
pop
cs
idivb
test
xchg
lds
iret
push
pop
cs
push
scas
cmpl
mov
lea
pushf
fistl
leave
pop
mov
mov
mov
jecxz
rcrl
scas
cbtw
aaa
mov
popa
insb
xchg
je
sbb
inc
pop
jecxz
inc
lock
out
out
movsb
out
movsl
loope
out
andb
or
mov
jl
fwait
cmp
ret
sahf
sbb
xchg
mov
lea
pop
jmp
add
repnz
movsl
dec
xchg
xchg
in
ss
inc
mov
outsl
sbb
pcmpgtd
xchg
pop
cmp
sbb
outsb
sbb
aam
rep
add
sbb
jg
jle
imul
mov
popa
xchg
lret
movsl
orl
cwtl
cmpsb
dec
mov
mov
addl
arpl
xchg
jl
mov
aas
xchg
xor
pushl
lret
jne
xlat
add
xlat
mov
dec
cld
mov
cmpsl
jno
je
in
fs
nop
mov
sub
jb
push
in
cltd
outsb
jg
jg
std
xor
repnz
imul
popa
subb
out
mov
and
test
stc
push
cmp
pop
repz
xchg
jns
sarl
mov
or
xor
jmp
stos
into
and
inc
mov
push
arpl
mov
out
mov
jmp
stc
dec
jno
add
movsb
js
mov
movsl
rol
pop
jnp
jle
push
fisubl
cld
icebp
mov
mov
cli
mov
inc
or
mov
mov
out
inc
int3
pusha
push
notb
xor
movsl
mov
int
add
xchg
push
pop
mov
das
pop
mov
sahf
jmp
in
cmc
scas
add
insl
in
sbb
incl
sbb
mov
xor
or
mov
adc
mov
jmp
movsb
dec
dec
jo
gs
adc
push
int3
xchg
push
adc
addl
vmread
mov
testl
ja
inc
cmp
scas
mov
dec
pop
out
rol
loopne
mov
pop
mov
xchg
and
or
mov
push
loope
int
sbb
inc
sahf
mov
pushf
mov
jbe
xchg
and
loopne
mov
ret
jmp
nop
mov
push
dec
fsts
pusha
mov
enter
aam
mov
sbb
dec
cwtl
cli
adc
xchg
mov
int
scas
rolb
pop
cmp
sar
lds
scas
push
test
shll
pop
sbb
lods
cld
cltd
ret
inc
or
push
mov
sbb
mov
roll
push
addr16
cmp
push
xchg
cmpb
push
mov
sarl
fsubrl
xor
lahf
call
jb
insl
dec
mov
add
dec
in
pop
push
lods
xor
mov
mov
mov
clc
imul
push
and
jecxz
pop
adc
subl
into
sahf
hlt
hlt
jp
mov
repz
fistps
gs
test
push
lret
xor
adc
in
pop
adc
mov
mov
enter
jnp
mov
push
xor
aaa
jbe
push
and
jo
cmp
enter
add
mov
cld
repz
push
add
clc
aad
inc
ljmp
pop
movsl
inc
in
sbb
inc
pop
lahf
inc
jecxz
push
jmp
mov
mov
in
imul
lret
enter
add
sub
sarl
inc
sbbl
mov
inc
das
pop
jns
and
shlb
addr16
xchg
pop
loope
das
cld
stc
jmp
pop
mov
adc
push
aas
imul
push
cwtl
xor
imul
dec
insb
mov
and
test
sarb
mov
sti
cld
jge
inc
lds
inc
andl
xor
nop
xchg
dec
imul
mov
lock
pop
xchg
push
lea
mov
lods
imul
jmp
ljmp
das
sbb
stc
pop
mov
cmp
pop
std
cwtl
mov
mov
mov
jle
fwait
xor
test
cwtl
sbb
mov
js
arpl
xor
aad
xor
in
mov
push
fisubs
in
dec
adc
stc
fsubrl
sbb
xor
push
jae
rolb
orl
inc
ret
push
lret
jnp
mov
lds
jg
and
mov
mull
mov
pop
enter
shll
imul
adc
insl
and
in
mov
fdivrs
hlt
xchg
sbb
mov
mov
aad
call
pop
mov
clc
enter
lock
sbb
cwtl
outsl
pop
inc
movsl
jg
sbb
aam
imul
in
push
pop
ret
dec
imul
test
inc
andl
test
repz
ficoms
je
imul
sbb
cmp
jno
mov
addb
test
xlat
scas
jmp
pop
sub
inc
dec
push
jno
mov
inc
fwait
cld
rclb
test
pushf
mov
fwait
mov
mov
cmp
pushf
mov
cmp
or
xor
int
sub
xchg
dec
mov
xchg
shll
out
pop
imul
mov
dec
aaa
dec
pushf
stos
pop
pop
mov
push
sbb
pop
mov
cmpsl
pop
xchg
xchg
icebp
scas
mov
dec
call
push
mov
sbbb
xor
mov
pop
push
fiaddl
es
sub
xchg
mov
scas
cmp
inc
push
xor
mov
aad
int
insb
dec
cld
cwtl
loop
jae
inc
call
jb
xor
inc
jae
mov
stos
dec
cmp
in
cmpsb
js
outsb
lock
cmp
push
and
ss
repnz
cwtl
dec
xchg
aas
sahf
push
pop
imul
movsb
cmpsl
push
jno
lahf
std
and
or
mov
outsl
jge
pop
jg
cwtl
inc
popa
pop
cmp
daa
enter
rcll
xchg
xchg
add
push
das
mov
pop
or
stos
rol
rcl
cmp
imulb
les
add
mov
ret
xor
adcb
mov
sbb
push
addr16
lret
clc
imulb
fucomip
add
push
push
movsb
push
mov
add
mov
mov
clc
inc
or
add
jno
lahf
add
pusha
out
sar
push
xor
cmp
stos
aas
adc
cmp
sub
ffree
mov
cltd
les
dec
dec
adc
xor
sar
jnp
out
mov
lret
push
jmp
mov
jge
outsl
aaa
cmp
xlat
add
aam
insb
test
js
das
in
int3
lea
mov
rcl
jns
orl
std
cli
mov
cwtl
push
and
test
mov
test
movsl
aad
pop
aam
daa
popa
or
cwtl
jle
dec
jbe
rolb
decl
jp
pop
test
mov
mov
cmp
sub
cmp
mov
insl
pop
rcl
cwtl
push
into
push
ret
cmp
movsl
push
adc
and
and
lds
data16
add
mov
imul
decl
jge
shlb
add
sub
call
lcall
jb
sahf
jae
movsb
test
out
insl
add
into
insb
jl
sbb
cwtl
jecxz
sub
xorl
in
sub
or
je
jns
aad
cmc
jmp
insb
ret
mov
mov
loopne
xchg
pop
les
cmp
xor
cmp
arpl
arpl
cwtl
mov
ret
push
loopne
test
xor
xchg
adc
ret
adc
sub
xor
rcrb
fsubrs
mov
pop
jo
jb
xchg
sub
jne
pusha
push
call
inc
xor
test
mov
mov
sbb
dec
lahf
mov
in
jo
hlt
daa
or
ret
leave
ror
pop
aam
cmp
push
dec
sysenter
and
cmpsl
add
sbb
cmc
mov
jge
mov
dec
dec
xor
aaa
fwait
cmpsl
and
sub
push
mov
push
mov
inc
sbb
lahf
std
dec
sti
adc
or
mov
cmpsl
movsb
cmp
cmp
pop
mov
inc
mov
les
push
sub
icebp
or
push
cld
pusha
mov
shll
xchg
cmp
jmp
inc
or
jmp
push
inc
push
shll
movsb
arpl
sbb
in
in
mov
xchg
fwait
mov
int3
repz
add
or
rol
out
xchg
jne
dec
sub
inc
mov
mov
adc
mov
cmpl
jl
subl
jmp
pushl
pushl
call
mov
mov
mov
mov
mov
mov
shl
xor
shld
cmpl
jg
dec
jmp
pushl
call
shl
mov
xor
xor
movl
movl
movl
cmp
movl
jne
movl
cmp
je
subl
mov
mov
cmpl
jg
add
jmp
pushl
push
pushl
push
push
push
push
pushl
call
mov
mov
xor
shld
shl
xor
addl
xor
movl
cmp
movl
jne
cmp
je
mov
mov
shl
mov
xor
movl
shr
or
sbb
mov
cmpl
ja
and
jmp
push
push
pushl
call
mov
mov
mov
mov
mov
jmp
bound
clc
xchg
xor
xchg
outsl
inc
adc
addl
xchg
push
icebp
sbb
push
movsl
mov
mull
pcmpeqd
std
movsb
mov
xor
frstor
call
add
leave
cmc
mov
pushf
or
and
dec
aaa
mov
add
mov
outsb
mov
clc
cmp
je
leave
mov
cs
shrb
pop
mov
sbb
xor
lods
dec
xchg
dec
fildll
mov
jge
sbb
jmp
imul
mov
repnz
and
adc
aaa
inc
sbb
fidivrs
cmp
mov
or
mov
popa
mov
in
test
pop
adc
and
divb
jbe
add
fldcw
movsb
outsl
or
or
push
dec
outsb
pusha
fildll
mov
pushl
lahf
in
in
nop
out
hlt
rorb
sbb
rolb
mov
mov
out
cmpsl
sbb
in
test
scas
aam
push
mov
push
mov
cmc
push
inc
dec
jle
in
xor
mov
subb
sub
gs
inc
pop
loopne
mov
sub
pushf
push
or
xchg
shll
addr16
jne
xchg
or
and
loope
mov
jge
add
dec
popa
mov
sub
cmp
jb
iret
xlat
cmp
cld
xchg
pop
sub
das
out
inc
je
hlt
jge
pop
add
int3
es
push
idivb
fst
mov
ret
faddl
pop
sub
cmpsb
push
adc
arpl
shlb
push
outsl
lcall
clc
jmp
push
mov
xchg
add
sub
stos
fwait
sub
fildl
mov
dec
jle
popf
cmp
pop
orb
xor
popf
or
loope
mov
mov
loopne
sub
xchg
cmpsw
repnz
jl
and
push
xchg
fdivs
cmp
mov
or
adc
test
jo
mov
xchg
mov
popf
subl
push
js
jle
divb
push
xor
aad
aaa
scas
push
test
mov
mov
nop
jns
jle
mov
daa
pop
push
bound
xor
lea
test
mov
adc
xlat
mov
int3
in
pop
rcrb
xchg
out
inc
cmpsl
out
scas
fimuls
sbb
xchg
stos
sbb
dec
repnz
arpl
mov
cli
sbb
sti
mov
sbb
jnp
cs
popf
xchg
mov
test
and
sub
xchg
pop
int
lcall
popf
in
sti
xchg
addr16
pop
arpl
movsl
or
push
sub
ret
adc
lcall
ret
aam
push
popa
dec
movsb
cmp
sub
mov
test
adc
out
dec
mov
mov
test
dec
dec
out
subl
xchg
ljmp
mov
ja
push
inc
cmp
cltd
pop
cmpsl
mov
pop
sub
mov
jp
bound
aaa
or
add
mov
loop
fcomp
push
in
loop
out
push
popa
call
mov
push
mov
enter
sub
xchg
xchg
inc
loopne
in
add
fcmovnbe
nop
adc
into
pusha
faddp
dec
hlt
stos
sahf
notb
or
imul
xchg
jnp
shll
mov
insl
xor
stos
push
cmpsb
ss
jecxz
cmp
or
lret
sbbl
lods
add
fsub
mov
cwtl
and
lret
mov
fwait
sub
mov
imul
subb
lock
outsl
xchg
xlat
adc
pop
adc
stos
adc
sbb
mov
mov
hlt
inc
inc
subl
jno
push
dec
lahf
xchg
add
mov
inc
mov
adc
addr16
pop
movsb
inc
clc
jp
shr
dec
adc
je
add
leave
movsb
icebp
mov
or
add
call
push
xchg
rorl
addr16
inc
in
cmpsb
push
out
testl
xor
lds
jne
xor
sub
repz
mov
enter
push
dec
inc
int
mov
stc
mov
inc
lock
idivb
adc
sti
mov
or
out
bound
lods
push
xchg
push
jmp
je
cld
leave
lods
fisubrl
pop
fisttps
lock
arpl
mov
sub
sub
outsl
xchg
nop
mov
jne
outsb
or
adc
or
jg
mov
mov
fsubrl
ret
subl
lea
insl
jae
sbb
fdivrs
mov
push
xchg
fidivrs
or
or
pop
in
mov
mov
cmc
andb
cmp
lods
nop
jb
lret
jae
xchg
inc
xor
mov
jae
lcall
jno
pushf
and
mov
mov
lret
pop
stos
js
xor
add
lret
pop
or
jg
test
jnp
jno
and
push
outsb
xor
lret
jmp
int
pop
cmp
out
dec
rcrb
insb
divb
add
test
xchg
ljmp
mov
mov
repnz
sbb
popf
and
mov
out
mov
or
subl
mov
pop
imul
loope
les
aas
lea
lock
mov
add
int
lret
pop
add
arpl
inc
add
aad
add
into
mov
cmp
lods
sbbl
pop
and
repz
es
lret
mov
adc
adcb
movsb
inc
pop
popa
out
lcall
aas
mov
clc
dec
popa
or
insl
shr
add
dec
je
mov
jmp
clc
bound
jb
mov
xor
insb
mov
bound
inc
mov
ret
jbe
sbb
test
loopne
sub
jns
iret
test
or
fwait
stos
out
insb
push
mov
jmp
dec
xchg
loope
into
ret
cmpsl
int
and
adc
and
mov
stc
or
jmp
aad
mov
dec
enter
or
mov
in
jle
fists
sub
lock
outsb
xchg
je
pop
cmpsl
xor
imul
mov
inc
incl
jmp
dec
xchg
push
or
sbb
leave
dec
and
fs
shrb
dec
call
aam
cs
mov
push
enter
or
cmc
add
ljmp
addr16
cld
mov
xor
mov
cmp
fdivrs
cmp
mov
in
adc
mov
lods
adc
xchg
add
xor
pop
inc
inc
add
rorl
dec
rorb
mov
xor
mov
mov
mov
adc
jmp
fbld
and
sbb
dec
mov
addl
add
fdivrs
xor
scas
adc
sbb
and
subl
push
nop
push
aad
insl
add
inc
aam
fisttps
or
sbb
sbb
jecxz
mov
int
jmp
lahf
insl
cmp
inc
cli
xor
cmp
pop
popa
pop
push
aaa
aad
sysenter
icebp
pop
mov
fld
cmpsl
aaa
jg
mov
ret
sti
lret
xchg
mov
scas
jne
movsl
mov
cmp
sbb
iret
mov
ror
pop
xchg
jmp
movsb
ds
and
jns
mov
decb
dec
test
push
int3
mov
pop
mov
sub
sar
dec
test
bound
loope
mov
ljmp
adc
jle
push
pusha
adc
fsubrs
lret
sub
mov
adc
cmpsl
shll
test
push
cmp
jo
es
jnp
jno
push
or
fisttpl
addr16
xchg
lods
dec
ror
test
in
add
rclb
jmp
pop
popl
sbb
outsb
imul
test
or
inc
xchg
adc
push
stos
in
aad
push
inc
cmp
data16
pop
dec
adc
sub
lcall
mov
out
mov
dec
jns
push
lcall
xor
mov
mov
pushf
in
cmc
push
jnp
or
mov
xlat
inc
and
pop
jbe
cmpsl
xor
fcompl
jne
pop
jp
test
aaa
imul
push
clc
jb
and
jns
stos
jl
and
sub
mov
outsl
adcl
dec
lods
ja
rcpps
inc
shrl
jno
cld
aas
dec
rcr
push
pop
leave
add
and
xchg
lock
xor
ret
gs
sbb
neg
jg
cmp
mul
jg
data16
push
enter
and
pop
push
pop
and
loopne
scas
ljmp
dec
jl
jne,pt
xor
stc
jge
lods
movsb
mov
or
loopne
fnstsw
pop
adc
add
xor
dec
xchg
cmpsb
xor
movsl
repnz
mov
xchg
and
repnz
shll
sbb
xor
cmp
jns
mov
sarb
or
frstor
gs
xchg
lock
stos
out
in
aam
xchg
cmp
jl
imul
rorl
arpl
fcmovnu
es
xlat
in
ret
pop
jmp
add
jno
cmpsb
repnz
fisttpl
push
dec
out
jns
dec
mov
dec
pop
daa
ss
movsb
jbe
push
test
rcr
roll
mov
push
gs
and
lock
add
jmp
or
xorb
jb
pop
push
dec
push
nop
xchg
adc
repz
sbb
and
mov
mov
add
mov
icebp
adc
and
sahf
xchg
sbb
or
data16
and
mov
stos
loop
das
jmp
cld
cltd
add
mov
pushf
ja
pop
pop
mov
pop
in
cltd
addr16
mov
pop
lods
lret
lods
jnp
sub
out
repnz
jmp
out
pop
leave
out
int3
lods
sbbb
mov
xor
or
sarb
cwtl
or
cmpsl
jl
insl
jge
mov
lds
cmp
shlb
mov
imul
xchg
mov
push
sub
jbe
sbb
cmp
test
lcall
clc
xlat
pop
or
data16
mov
nop
mov
cmp
sbb
out
test
sub
inc
jmp
ret
cmpl
sub
jb
fwait
sub
pop
mov
inc
mov
sub
sbb
rcrl
leave
mov
nop
mov
sti
cltd
pop
and
popf
sub
mul
mov
and
orb
sbb
or
add
sub
cmpsl
mov
push
mov
xchg
in
cmp
cwtl
push
jmp
mov
std
in
mov
andl
lret
xor
fsubrs
scas
fstp
fsubs
lods
push
xor
stos
dec
cld
inc
fcoms
popf
mov
inc
sub
mov
and
adc
es
std
js
cmp
cld
xchg
mov
or
sub
dec
fidivrl
dec
or
les
dec
lahf
adc
xchg
mov
mov
cmp
or
aam
push
sbb
cmc
jmp
movsb
mov
lret
xchg
movsb
in
insb
sub
mov
lods
les
or
pop
lret
mov
push
imulb
push
repnz
lock
xchg
adc
and
bound
pop
popf
pop
fwait
jns
cltd
jns
mov
sti
mov
shll
inc
and
outsl
lcall
or
mov
aaa
repnz
data16
cld
notb
cmp
sti
xchg
mov
xchg
adc
je
movsl
mov
push
and
jmp
pop
add
jg
clc
aas
pop
pop
lods
dec
pop
mov
fisubs
adc
pop
std
xor
jp
cwtl
xlat
add
push
mov
pop
and
jge
mov
xchg
jl
pushf
xlat
cltd
ljmp
rol
or
arpl
out
xchg
fistpll
pop
adc
add
das
cmp
out
adc
add
lock
xor
cli
movl
call
mov
leave
or
add
repz
xorl
iret
std
sub
xchg
pushl
pop
out
cmc
andl
std
or
inc
pop
jnp
add
inc
and
push
rcrl
cmpsb
scas
xor
add
push
roll
repz
dec
insl
nop
aad
xchg
in
lods
clc
add
in
cmpl
leave
adc
jno
pop
inc
popf
push
sbbl
insb
xor
dec
xchg
call
shl
xchg
es
mov
inc
sbb
add
mov
in
out
xchg
mov
mov
mov
or
in
pop
cmp
mov
lods
cmp
lods
pop
or
adc
ret
jmp
mov
cmpsl
lock
lahf
and
jg
std
cmp
xchg
xchg
and
arpl
adc
mov
cmpsl
xchg
inc
sbb
cmp
jge
iret
xchg
leave
scas
mov
rcrl
fwait
jmp
cmp
pop
mov
jp
lock
sbb
xchg
add
scas
fistps
and
je
pop
mov
lret
sti
cmp
pusha
push
stc
push
lods
sub
mov
mov
in
jae
add
ds
mov
sti
cmp
fnstenv
xchg
stos
lods
out
inc
sbb
lea
mov
pop
sub
dec
lcall
js
rcrb
mov
orl
xor
orl
shr
xorl
shl
adcl
or
movzbl
sbb
mov
mov
mov
and
movl
sub
mov
neg
mov
xor
shr
negl
shl
or
subl
push
lea
sbbl
push
lea
orl
push
call
and
mov
cmpl
jb
jmp
push
push
pushl
pushl
call
mov
xor
shr
shl
or
push
lea
push
mov
sub
mov
shrd
shr
cmpl
jg
xor
add
mov
sub
imul
jmp
push
push
push
call
mov
mov
movl
xor
addl
xor
or
andl
lea
push
shl
movl
call
mov
sbb
mov
sub
xor
shl
adc
shr
or
mov
sub
push
sub
lea
push
orl
mov
inc
mov
incl
shrd
shr
or
mov
mov
sbbl
xor
shl
xor
movl
or
adcl
lea
push
call
and
mov
or
mov
cmpl
jl
mov
and
xorl
jmp
pushl
call
xor
shl
shr
or
addl
jmp
xchg
adc
inc
adc
xchg
popa
aaa
repnz
cmp
adc
addl
dec
jmp
in
cmpb
or
xchg
add
mov
fisubs
pop
cmp
pop
push
fwait
jne
mov
cmp
in
jns
enter
mov
sub
call
push
jg
jmp
xchg
dec
mov
jl
ss
lock
dec
dec
jbe,pt
pop
cli
add
sarl
and
pop
xchg
mov
out
cltd
lcall
sbb
pop
jno
sbb
mov
mov
repnz
xchg
inc
and
mov
jg
cmp
cmp
insb
mov
inc
aaa
xor
cmovno
imul
fnstsw
push
jns
sbb
dec
ror
push
pop
in
add
out
pusha
push
push
lret
test
adc
and
push
pop
xchg
cmp
or
mov
pushf
cwtl
mov
push
and
xor
mov
xchg
adc
jns
cmp
ret
xor
sub
test
mov
test
dec
lods
popa
xchg
xchg
mov
mov
imul
cmpsl
mov
pusha
lods
xchg
sar
xchg
push
mov
jnp
movsb
adc
xlat
es
cld
mov
and
rorl
and
and
pop
mov
cld
pop
or
sbb
sub
push
xchg
fdivrp
mov
push
sub
push
xor
dec
adc
insb
jne
flds
push
scas
add
sbb
fdivrl
js
mov
pop
daa
mov
rcll
sbb
cmc
pop
fwait
pushf
xchg
xchg
daa
add
sbb
pushf
mov
xor
scas
lods
dec
ficompl
xchg
lods
lods
into
into
stos
and
addr16
stc
xchg
ret
mov
xor
sub
inc
inc
xchg
in
xchg
push
sub
or
fstpt
xchg
inc
push
loop
push
enter
sub
lds
clc
add
add
mov
std
xlat
mov
mov
ret
xchg
inc
sbb
psubw
and
repz
sub
jmp
loopne
in
cmpsb
ljmp
inc
mov
aaa
fdiv
jae
aad
jge
aam
out
adc
mov
sub
jecxz
ss
test
sbb
jmp
mov
dec
loope
aas
out
pop
adc
cmp
lods
mov
push
ret
or
scas
test
and
hlt
hlt
lret
xor
out
mov
push
pop
adcb
inc
and
xchg
jns
arpl
xchg
cwtl
xor
outsl
nop
rclb
lea
sub
mov
push
pop
lds
shlb
jns
push
shll
jne
fs
mov
pop
jne
mov
fwait
test
xchg
push
jmp
mov
inc
ds
emms
mov
stc
xor
adc
mov
pop
in
int3
mov
xor
gs
incl
push
test
push
or
adc
loopne
cli
cltd
cmpsl
sbb
repz
push
pop
and
stos
pop
mov
push
or
push
xlat
jge
mov
js
pop
es
lret
mov
sub
and
push
fs
lock
out
test
leave
imul
mov
rorb
cmp
flds
mov
jnp
add
pop
test
mov
sub
les
jg
arpl
pop
mov
jbe
mov
jb
mov
outsb
mov
sub
inc
push
sti
repz
adc
cli
pop
mov
push
and
mov
inc
push
adc
loop
fwait
into
outsb
cmp
pop
add
xchg
push
mov
sub
mov
fistpll
pop
pop
outsb
adc
bndstx
mov
scas
sbb
test
pop
jo
leave
fs
rclb
mov
mov
xor
aam
movsb
inc
stc
call
mov
xchg
fnstcw
loope
cmp
xor
sarb
or
adc
mov
ret
dec
ljmp
inc
arpl
in
iret
out
ss
bsf
ss
enter
cld
push
mov
mov
in
sbb
cmp
jg
adc
fsubs
jecxz
inc
iret
lods
add
insb
pop
cmp
rcll
test
jb
jecxz
clc
out
pop
mov
ret
outsb
dec
xchg
and
lret
cwtl
mov
mov
jo
call
lods
xorl
sbb
in
dec
sub
stos
aas
in
cltd
mov
addr16
lahf
jecxz
push
loopne
sub
xchg
xchg
sub
and
cmp
push
jmp
xlat
iret
mov
call
pop
push
call
out
xor
sub
sub
rolb
jmp
lret
xorb
sub
mov
jge
icebp
sub
shlb
dec
push
aam
lds
add
cmpsb
cwtl
cmp
and
lret
sub
frstor
jl
pop
jmp
movl
pop
js
arpl
outsl
inc
aam
lret
mov
pop
mov
add
mov
mov
out
push
mov
idivb
xchg
stc
pop
je
inc
mov
pop
in
js
imul
addb
cld
mov
nop
jp
fimuls
cmp
xor
rcl
add
ret
cmp
xor
ret
pusha
mov
jne
jge
call
out
ucomiss
cmc
jecxz
vrsqrtss
mov
cltd
stos
push
js
lods
jb
ja
imul
xchg
out
movb
mov
pop
leave
scas
jns
inc
dec
cwtl
pop
xchg
push
adc
dec
insb
cmpb
jae
cltd
arpl
jl
je
out
dec
lds
push
dec
pop
insb
and
aam
push
stos
jne
adc
mov
inc
int3
ja
mov
cmp
or
inc
mov
xlat
xor
inc
mov
add
push
push
pushf
out
in
sub
sbb
jecxz
insb
cmpsb
cltd
jl
pop
sub
cmpsb
xchg
scas
cltd
in
xor
mov
addr16
jmp
jmp
sti
pop
stc
mov
adc
sahf
in
add
clc
lahf
adc
test
and
mov
popf
adc
cmp
repnz
popa
cs
sub
add
fnstsw
popa
repnz
adc
ljmp
xlat
dec
out
push
in
scas
popa
pop
push
clc
add
mov
aaa
and
xchg
std
xchg
lret
inc
stos
ljmp
loopne
push
sbb
addr16
lret
sbb
xchg
popf
int
mov
stos
and
lods
and
push
stc
mov
data16
in
add
insl
mov
jbe
jmp
nop
pushf
jno
es
arpl
pop
pushf
jo
cltd
mov
jp
inc
int
pop
adc
out
jle
or
jae
jmp
sub
sbb
movsb
jns
ret
or
jnp
cld
adc
sub
mov
jo
loopne
popa
dec
xchg
es
popf
jmp
je
aas
aad
lea
sbb
push
adcl
mov
sub
mov
shrd
and
shr
mov
mov
adc
xor
xor
subl
or
shl
mov
sub
mov
movl
shrd
shr
adcl
mov
mov
xor
jmp
adc
sahf
dec
push
rcrl
push
out
scas
adc
jno
int3
lret
adc
add
jecxz
and
push
arpl
jle
jmp
sbb
xlat
arpl
rorl
test
lret
addr16
call
repz
xor
sti
loopne
imul
bound
or
aas
add
rorl
fwait
enter
bound
jns
or
sub
mov
sub
add
aam
clc
xchg
testb
cmp
scas
sbb
scas
pop
mov
inc
sbb
repnz
adc
push
and
cmp
mov
push
insl
in
fidivl
pop
ljmp
icebp
and
jbe
sbbb
xchg
test
mov
out
scas
es
adc
inc
mov
xchg
jg
stos
sbb
scas
and
js
stos
rcrl
jge
cli
pop
in
pop
hlt
cltd
and
shrl
and
jp
jb
sub
lea
test
mov
in
std
push
jp
lods
jnp
jno
aad
jp
add
adc
in
rorb
dec
rcll
subb
adc
xor
dec
test
mov
add
pop
loope
push
xchg
xlat
cmp
sahf
int
mov
adc
or
add
cmp
ret
pop
mov
push
iret
insb
popf
cmp
inc
aad
insb
xchg
shlb
pusha
ja
dec
fldenv
or
scas
adc
jo
js
mov
mov
push
xchg
push
mov
fistpl
xchg
fs
scas
pop
neg
lcall
push
fisubrl
popa
ljmp
ds
outsl
cmp
icebp
xchg
scas
pop
loope
adc
cmpb
nop
cltd
fmul
mov
lds
sahf
ret
mov
xchg
add
sbb
sbb
jae
lcall
int3
and
adc
ret
pop
std
mov
xchg
sub
dec
insl
inc
inc
dec
cmp
je
mulb
and
adc
outsb
adc
jb
fsubr
lods
rcrb
dec
js
or
mov
pop
lcall
lds
dec
cmpl
aas
fidivl
adc
and
xchg
mov
push
clc
sbb
cmpsb
sarl
push
nop
jle
test
sbb
cmc
cs
sbb
jno
mov
pop
xor
std
ss
sbb
mov
adc
mov
cmp
mov
ljmp
clc
mov
lahf
push
and
mov
nop
js
push
int
mov
lea
stos
ficompl
mov
rcr
shlb
mov
stos
xchg
movsl
and
push
cli
xor
stos
cmp
int3
aam
or
and
leave
sbb
xchg
aaa
lea
imul
fldenv
cmp
and
test
pop
inc
fsubr
aaa
pop
test
jne
dec
movsl
sbb
icebp
lea
fsubrs
fbstp
cmp
mov
cmp
lahf
jae
push
ret
das
jae
and
cli
sbb
movsb
mov
mov
push
mov
fcos
shlb
mov
add
pop
dec
out
insb
into
mov
jne
xlat
push
dec
sub
mov
mov
lea
sbbl
loopne
popf
mov
cmp
jmp
pop
fwait
les
and
push
in
cli
ret
test
test
adc
xor
push
jmp
addr16
lea
mov
ficoml
lods
into
jmp
aad
dec
inc
les
mov
fildl
shrb
inc
push
fsubl
call
cld
pop
lods
ljmp
push
dec
cmpsb
fcomip
stc
into
push
mov
cli
push
fcomip
iret
mov
dec
mov
mov
stc
or
xor
fcomi
lds
or
dec
sbb
mov
ss
insl
dec
and
les
xor
push
xor
in
mov
sub
popa
into
pop
xchg
mov
and
in
pop
in
add
xlat
fadds
add
leave
outsb
iret
adc
cmp
add
add
into
insb
push
sub
inc
adc
push
popa
or
jns
lds
inc
outsl
inc
lods
and
loope
sbb
dec
add
call
je
cmc
std
out
inc
mov
xor
jg
cmp
jns
hlt
ss
xchg
mov
or
cmp
mov
push
js
sbb
decl
scas
fnstsw
mov
lods
sahf
rcrb
mov
add
inc
pop
ret
xorl
bnd
test
fnstsw
pop
mov
inc
dec
pop
divb
popa
cmp
cwtl
iret
and
and
outsl
jb
inc
test
insl
mov
jnp
in
mov
mov
or
cmc
mov
jno
sbb
imul
mov
dec
add
xchg
inc
pop
lahf
inc
popf
lea
jmp
inc
add
inc
out
ffree
pop
sti
movsl
mov
xchg
int3
int3
lea
xchg
sub
es
hlt
bound
dec
dec
imul
fidivl
loopne
stos
mov
and
out
lret
add
sti
push
xor
sbb
and
popa
shlb
dec
sti
icebp
insb
pushf
and
sbb
dec
jnp
dec
add
dec
outsb
xchg
adc
iret
imul
cld
popa
inc
and
add
fwait
outsb
or
lret
arpl
jg
or
sub
sti
push
dec
lock
inc
push
fmuls
nop
outsl
loop
popa
sar
inc
movsb
int
or
xchg
or
add
loope
mov
mov
jns
and
cmpsb
cmpsb
int
cwtl
enter
cmpsl
dec
pop
mov
pusha
aas
mov
sbb
sbb
pop
mov
cli
mov
pop
xor
sbb
gs
int
cmp
mov
repnz
movl
out
push
add
add
lock
add
pushf
push
insl
ss
jle
outsb
adcl
in
loop
scas
xor
lahf
jle
add
xor
cmp
xlat
outsl
dec
mov
cmp
or
data16
xchg
dec
xchg
stos
inc
iret
push
insb
jecxz
data16
cmp
test
xlat
inc
inc
mov
jp
fdivrs
add
xchg
stos
or
movlhps
shr
in
aaa
mov
adc
inc
mov
nop
xchg
xorb
fwait
lahf
mov
mov
push
add
push
loop
notb
in
in
cli
stc
shlb
fwait
sbb
cltd
stc
cwtl
and
cs
add
xlat
add
adc
mov
jg
mov
and
lret
sub
into
mov
xorb
out
ja
pushl
and
out
jne
movsb
xor
push
cmc
jmp
push
enter
adc
xor
subl
or
add
lea
adcl
push
xorl
shl
call
mov
cmpl
jg
sub
and
jmp
pushl
push
call
mov
shl
xor
shr
or
push
lea
sub
push
cmpl
jg
xorl
jmp
push
pushl
pushl
push
push
push
call
mov
mov
shrd
shr
mov
mov
sub
xor
mov
adc
shl
mov
mov
mov
sbb
xor
or
mov
and
shrd
adcl
shr
adc
mov
mov
orl
xor
xor
andl
or
cmpl
jg
jmp
call
add
mov
shl
mov
shrd
shr
mov
adcl
mov
xor
xor
sbbl
or
notl
add
lea
push
shl
xorl
call
mov
xorl
mov
cmpl
jg
jmp
push
pushl
call
xor
shr
jmp
notl
notb
sub
out
ret
pop
cli
adc
popf
adc
jl
popf
push
aas
cwtl
shll
xchg
adc
in
pop
outsl
mov
sarl
push
int
adc
xlat
in
aam
fisubl
adc
mov
movsb
movsl
xchg
aam
pop
sarb
pop
cltd
mov
sahf
cmpl
mov
xchg
shl
sbb
push
stos
loopne
add
out
jns
cs
add
xor
and
xchg
enter
cmp
sbb
mov
cmpl
push
push
inc
lcall
mov
mov
ds
cmp
jo
mov
xor
inc
cs
cmp
fsubrl
call
mov
xor
sbb
lcall
scas
or
lods
sub
gs
push
mov
and
sbb
add
clc
cmp
jae
hlt
cltd
inc
cmpsb
xor
insl
pop
repnz
sub
jmp
lret
shrb
jecxz
insb
and
ret
jge
insl
test
xchg
cmp
arpl
xor
test
ss
pop
adc
icebp
fisttpl
jp
test
mov
cmp
inc
lds
test
xchg
inc
test
in
dec
ljmp
cmp
dec
xchg
pop
inc
mov
notb
sub
outsl
imul
loop
mov
rcll
mov
mov
mov
movsl
sub
jo
sbb
push
mov
pop
sahf
gs
js
fidivrs
sbb
sub
ret
loopne
loope
or
mov
lea
push
cmpl
ja
and
jmp
push
push
push
pushl
call
mov
mov
shrd
shr
mov
mov
addl
xor
neg
xor
or
push
sbb
mov
movzbl
and
mov
mov
push
orl
pushl
subl
shl
call
lea
xor
add
add
push
add
mov
mov
cmpl
jbe
adc
or
jmp
push
push
push
call
shrd
shr
mov
mov
xor
xor
or
addl
push
adc
mov
push
adcl
pushl
subl
shl
call
cmpl
jge
sbb
jmp
pushl
pushl
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
sbbl
mov
rol
mov
adcl
xor
movl
mov
movl
cmp
movl
je
or
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
push
mov
sub
not
mov
cmpl
jb
jmp
push
call
mov
mov
sub
push
mov
mov
sbb
mov
adc
orl
orl
add
mov
mov
add
mov
cmpl
ja
sbb
inc
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
sub
mov
sbb
mov
cmpl
ja
or
jmp
push
push
push
call
orl
orl
lea
mov
mov
mov
not
mov
sbbl
add
neg
mov
mov
adcl
mov
mov
neg
shrd
cmpl
ja
or
jmp
push
push
push
pushl
push
call
shr
mov
mov
xor
xor
or
cmpl
jb
jmp
pushl
push
push
pushl
pushl
call
mov
movl
movl
movl
movl
movl
movl
xor
movl
movl
mov
add
movl
movl
cmpl
jge
adcl
adcl
jmp
pushl
push
push
call
movl
movl
movl
movl
movl
dec
movl
sbbl
movl
movl
movl
cmpl
ja
xor
add
sub
mov
jmp
push
push
push
call
movl
movl
movl
mov
shl
mov
andl
push
addl
push
push
push
andl
call
xorl
mov
xorl
mov
mov
mov
add
xor
add
mov
mov
sub
sub
mov
sbb
lea
and
mov
cmpl
jg
jmp
pushl
pushl
push
call
mov
or
and
mov
or
xor
cmp
movl
jne
not
mov
mov
shrd
cmpl
jbe
adc
jmp
push
pushl
push
pushl
pushl
call
shr
mov
mov
shl
xor
xor
subl
or
mov
mov
cmp
movl
jne
mov
add
mov
neg
xor
xor
or
sbb
mov
cmpl
jbe
jmp
pushl
call
mov
mov
shrd
mov
mov
xor
shr
cmpl
jbe
xor
jmp
push
push
call
mov
xor
or
shl
sub
mov
andl
mov
mov
add
adc
mov
and
mov
adc
mov
shrd
negl
shr
sub
mov
mov
cmpl
jg
add
jmp
pushl
pushl
pushl
pushl
pushl
call
xor
shl
xor
or
mov
mov
subl
shrd
shr
neg
mov
cmpl
jbe
adcl
jmp
pushl
pushl
pushl
call
mov
mov
xor
xor
or
shl
incl
lea
mov
cmpl
jl
dec
jmp
pushl
call
mov
shrd
shr
mov
mov
mov
adc
xor
cmpl
jbe
and
jmp
call
mov
xor
or
shl
imul
mov
dec
mov
sbbl
shrd
mov
or
mov
xorl
xor
orl
shr
mov
mov
addl
xor
subl
or
shl
sub
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
jb
jmp
pushl
push
call
mov
shrd
mov
mov
xor
shl
xor
or
shr
subl
mov
sub
mov
mov
adcl
mov
subl
shrd
adcl
shr
add
mov
cmpl
jg
sbb
jmp
pushl
push
call
mov
mov
xor
xor
or
shl
orl
imul
addl
sub
jmp
mov
or
mov
mov
cmpl
jl
or
jmp
push
pushl
call
mov
shrd
mov
mov
xor
shl
addl
xor
adcl
or
andl
shr
cmpl
jg
jmp
pushl
push
push
push
call
mov
mov
mov
mov
shrd
shr
mov
cmpl
jg
mov
adc
or
jmp
push
pushl
pushl
pushl
pushl
push
call
mov
mov
xor
xor
or
shl
mov
mov
adc
add
add
xor
xor
adc
mov
mov
xor
add
adc
shrd
or
shr
movzbl
adc
mov
mov
xor
sbbl
shl
xor
movzbl
adc
or
neg
mov
add
movl
mov
mov
sub
imul
mov
cmpl
ja
or
jmp
push
pushl
pushl
pushl
call
mov
movl
mov
movl
mov
movl
adc
mov
xor
mov
cmpl
jbe
jmp
push
push
push
pushl
call
mov
shrd
shr
mov
mov
xor
shl
adcl
xor
or
movzwl
sbb
mov
lea
cmpl
jbe
and
jmp
pushl
push
pushl
pushl
call
mov
mov
mov
shrd
shr
mov
adcl
mov
subl
shl
adc
mov
xor
xor
sbbl
or
sbb
mov
or
mov
xor
cmpl
jl
jmp
push
push
push
call
mov
mov
shrd
shr
mov
mov
xor
shl
xor
adc
or
adcl
lea
mov
or
mov
cmpl
ja
add
jmp
pushl
pushl
push
call
mov
mov
shrd
shr
mov
mov
subl
shl
and
mov
xor
adcl
xor
xorl
or
cmpl
jle
inc
decl
jmp
push
call
mov
mov
or
mov
mov
shrd
notl
shr
mov
sub
mov
xor
addl
shl
addl
xor
sbb
or
lea
mov
mov
addl
mov
shrd
shr
xor
add
mov
sub
xor
mov
mov
addl
xor
shl
adc
mov
xor
addl
or
mov
sbb
mov
or
add
cmpl
jle
sub
negl
jmp
push
push
call
mov
mov
shrd
shr
mov
cmpl
jge
neg
jmp
pushl
push
push
call
mov
xor
xor
or
lea
mov
cmpl
jge
jmp
push
push
push
pushl
push
push
push
pushl
push
pushl
push
push
push
pushl
call
mov
shl
mov
shrd
shr
mov
mov
addl
xor
orl
xor
subl
or
xor
mov
shl
incl
mov
adcl
mov
orl
mov
addl
or
xor
mov
mov
andl
shrd
shl
sbbl
shr
mov
mov
or
xor
mov
xor
orl
or
mov
dec
orl
not
xorl
and
xor
or
xor
mov
xor
and
mov
cmpl
ja
sub
jmp
push
push
push
call
mov
xor
or
mov
mov
shrd
shr
mov
sbb
mov
mov
adc
mov
mov
xor
xor
xor
adc
mov
addl
xor
andl
shl
subl
mov
addl
or
mov
mov
cmp
je
xorl
mov
xor
add
mov
sub
and
sub
cmpl
ja
add
jmp
pushl
push
pushl
push
push
push
call
mov
mov
mov
shl
xor
mov
mov
mov
subl
xor
adcl
xor
sbbl
shrd
shr
xorl
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
xor
xor
mov
sub
xor
push
push
movl
movl
mov
and
movl
movl
mov
mov
and
sbbl
mov
xor
inc
and
and
add
cmpl
jle
xor
sub
jmp
pushl
call
xor
mov
movl
movl
mov
cmpl
jb
xor
jmp
pushl
call
xor
sub
mov
imul
xor
mov
movzbl
sub
mov
div
mov
xor
or
sub
xor
sub
mov
cmpl
jl
sbb
jmp
push
pushl
pushl
call
movl
movl
movl
movl
movl
movl
sbbl
mov
xor
or
adc
mov
sub
imul
xor
add
mov
sub
or
add
or
and
cmpl
jge
xor
xor
mov
and
and
jmp
push
call
sub
mov
sub
add
mov
mov
orl
sub
or
add
cmpl
jg
mov
sbb
mov
adc
jmp
pushl
call
mov
xor
div
xor
mov
xorl
sub
mov
andl
add
sbbl
mov
movl
movl
not
movl
or
mov
sbb
xor
and
add
add
mov
xorl
xor
subl
div
and
mov
or
sub
cmpl
jl
jmp
push
push
push
push
call
mov
movl
movl
movl
movl
mov
mov
orl
xor
cmpl
ja
jmp
pushl
pushl
push
pushl
push
pushl
call
xor
push
pop
div
mov
xor
div
mov
or
cmpl
jle
or
jmp
pushl
push
push
push
push
call
sub
mov
movl
mov
mov
xor
sbbl
div
cmpl
jg
jmp
push
push
call
imul
xor
xor
imul
xor
mov
movl
movl
movl
mov
and
mov
orl
xor
adcl
div
mov
imul
add
xor
and
mov
sbbl
sub
mov
sbbl
movl
mov
mov
sbb
and
xor
and
sub
or
cmpl
ja
jmp
push
pushl
call
xor
mov
movl
movl
movl
mov
and
or
add
xor
add
or
andl
or
dec
sub
cmpl
jg
inc
mov
sub
jmp
pushl
call
mov
movl
movl
movl
and
mov
shr
sub
cmpl
ja
mov
and
jmp
push
push
call
xor
mov
lea
push
call
mov
or
or
mov
add
or
add
and
lea
adc
mov
and
movl
movl
movzwl
adc
movl
sub
movl
mov
sbb
mov
movl
subl
movl
movl
mov
mov
sub
imul
movl
mov
orl
mov
and
sub
mov
lea
adc
mov
mov
cmpl
jbe
sub
adc
jmp
push
push
pushl
pushl
call
mov
mov
imul
and
imul
or
mov
lea
mov
movzbl
xor
movl
movl
movl
and
movl
or
mov
mov
mov
sub
or
mov
mov
andl
xor
xorl
xor
adcl
mov
subl
call
xor
or
or
mov
mov
mov
mov
cmpl
jle
xorl
jmp
pushl
pushl
push
call
mov
xor
xor
mov
call
or
cmpl
jle
jmp
push
push
pushl
call
or
mov
mov
xor
xor
mov
call
or
mov
cmpl
jb
jmp
push
call
mov
mov
mov
xor
xor
mov
mov
addl
mov
mov
mov
andl
call
mov
adcl
or
mov
or
subl
push
adcl
push
andl
push
addl
push
addl
call
mov
mov
cmp
movl
jne
mov
mov
xor
xor
mov
call
xor
mov
mov
sub
mov
adc
mov
addl
xor
xor
andl
mov
call
or
movl
or
add
mov
adc
mov
xorl
xor
xor
mov
adcl
call
sub
mov
mov
xor
mov
mov
mov
sbb
mov
mov
xor
subl
xor
mov
mov
xorl
mov
decl
call
adcl
or
movl
mov
andl
or
push
subl
push
push
addl
push
xorl
call
mov
movl
jmp
jmp
cmpl
jg
add
jmp
push
call
lea
mov
mov
movl
mov
xor
cmpl
ja
jmp
push
call
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
movl
xor
xor
mov
sbbl
call
neg
mov
mov
adcl
mov
xorl
mov
andl
xor
adcl
xor
mov
movl
call
or
and
or
cmpl
jge
orl
movzbl
xor
jmp
push
push
push
call
mov
mov
xor
xor
movl
mov
subl
call
sbb
mov
sub
mov
xorl
mov
mov
subl
xor
subl
xor
mov
mov
mov
mov
incl
mov
call
sbb
mov
addl
or
sub
mov
or
push
subl
push
addl
push
push
sbbl
call
mov
cmp
movl
je
cmpl
jbe
jmp
push
push
call
mov
mov
xor
xor
mov
call
mov
mov
cmpl
ja
jmp
push
pushl
push
call
mov
mov
xor
xor
mov
call
or
or
sbbl
mov
imul
cmpl
jle
not
decl
jmp
push
pushl
push
pushl
push
pushl
call
add
mov
mov
mov
jmp
movl
jmp
cmpl
jb
xorl
jmp
push
call
mov
mov
xor
xor
mov
call
mov
xor
mov
mov
mov
xorl
xor
addl
xor
adcl
mov
call
subl
or
or
adc
mov
mov
xor
adcl
xor
mov
call
adc
mov
cmpl
jb
jmp
pushl
call
mov
mov
mov
xor
xor
mov
mov
mov
orl
call
or
or
mov
or
push
push
negl
push
push
subl
call
movl
mov
jmp
movzbl
adc
mov
mov
and
mov
xor
andl
xor
movl
mov
addl
call
add
mov
mov
mov
mov
sub
mov
cmpl
ja
movl
jmp
pushl
push
call
mov
xor
xor
mov
call
or
or
mov
movl
jmp
mov
cmpl
jl
jmp
pushl
push
push
call
mov
xor
xor
mov
call
mov
mov
sub
mov
xor
or
or
mov
xor
xor
subl
mov
call
xor
or
xorl
or
xor
mov
mov
add
mov
xorl
xor
sbb
mov
sub
sub
sbb
mov
xor
xor
or
xor
movzwl
and
add
cmpl
jge
jmp
push
call
mov
movl
movl
movl
movl
movl
movl
and
movl
xor
movl
cmpl
jl
mov
mov
and
adc
jmp
pushl
pushl
pushl
push
pushl
pushl
push
push
call
mov
add
mov
sub
cmpl
jbe
jmp
push
push
push
push
call
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
dec
or
sbb
mov
cmpl
jg
orl
jmp
pushl
pushl
call
xor
mov
sub
mov
mov
sub
cmpl
jle
xor
jmp
push
push
pushl
call
mov
xor
mov
div
mov
xor
sbbl
div
orl
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
and
sub
push
push
push
mov
pushl
pushl
call
test
je
movl
movl
movl
push
movl
adc
mov
andl
mov
andl
push
addl
push
push
adcl
call
push
subl
push
xorl
and
sbbl
and
push
push
orl
call
xor
xor
and
mov
cmpl
jbe
and
jmp
call
mov
xor
or
mov
xor
or
notl
mov
xorl
movl
movzbl
and
mov
movl
add
movl
movl
sub
movl
adc
movl
cmpl
jb
adcl
jmp
pushl
push
push
push
call
mov
mov
mov
mov
or
mov
or
mov
mov
sbb
mov
adcl
sub
mov
movl
sbb
mov
xor
xor
subl
and
sbbl
and
cmp
movl
jne
movl
cmp
movl
jne
sub
movl
sbbl
movl
adc
movl
cmpl
jl
sbbl
xor
jmp
push
push
pushl
pushl
push
pushl
call
movl
movl
mov
mov
sub
adc
mov
subl
imul
adcl
and
negl
imul
mov
addl
pushl
imul
incl
xor
mov
adc
mov
sbbl
div
xor
mov
adcl
xor
sbb
mov
sub
or
xor
sbbl
pushl
addl
pushl
call
andl
pushl
call
andl
movl
movzbl
sub
movl
cmpl
jge
negl
jmp
pushl
push
push
push
call
movl
movl
movl
movl
mov
mov
sub
mov
mov
add
mov
adc
cmpl
jge
and
jmp
pushl
push
pushl
push
pushl
push
call
mov
add
adc
and
mov
and
orl
mov
movl
decl
movl
addl
movl
xorl
movl
subl
dec
cmp
jne
movzwl
or
movl
mov
xorl
mov
movl
addl
mov
call
xor
lea
mov
mov
sub
sub
mov
lea
adc
mov
mov
cmpl
jbe
jmp
pushl
push
push
call
mov
mov
mov
xor
shl
shr
or
xor
mov
add
mov
or
mov
and
mov
xor
or
xor
or
sub
sub
mov
cmpl
ja
andl
jmp
push
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
subl
xor
sbbl
xor
xorl
or
cmpl
ja
subl
jmp
push
push
pushl
push
pushl
pushl
call
mov
push
pushl
lea
push
shl
call
adcl
lea
subl
push
mov
mov
andl
lea
andl
push
adcl
mov
subl
lea
notl
mov
mov
orl
mov
push
xorl
call
xorl
push
addl
push
pushl
addl
call
mov
cmpl
ja
mov
xor
jmp
push
pushl
push
push
push
push
call
mov
mov
mov
shr
shl
or
mov
mov
sub
sub
mov
xor
xor
mov
or
xor
mov
lea
mov
cmpl
jle
adc
jmp
pushl
push
push
call
lea
mov
mov
sub
lea
xor
sbb
movl
movl
mov
sub
movl
movl
orl
mov
adcl
mov
sub
add
mov
mov
movl
adc
xor
cmpl
jb
and
jmp
push
push
push
call
xor
and
mov
and
mov
movl
movl
movl
movl
sbb
movl
add
movl
andl
mov
sub
mov
adc
mov
cmpl
jl
and
jmp
push
call
mov
push
push
or
or
push
addl
push
xorl
call
mov
negl
mov
sub
mov
movl
sbb
mov
mov
cmp
jne
cmp
je
and
movl
movl
movl
xor
add
mov
sub
xor
movl
mov
mov
sub
xor
mov
mov
mov
cmpl
jb
jmp
pushl
pushl
pushl
push
pushl
call
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
and
movl
sub
movl
cmpl
jl
add
jmp
pushl
call
movl
movl
movl
mov
mov
push
push
xor
adcl
xor
push
push
call
addl
mov
andl
mov
push
push
push
sbbl
push
call
cmpl
jl
subl
jmp
call
mov
mov
push
push
push
push
andl
call
mov
sbb
mov
mov
mov
andl
add
movl
mov
adc
mov
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
addl
xor
adcl
shld
mov
and
shl
mov
mov
sbb
mov
sbbl
xor
subl
xor
mov
movl
cmp
movl
jne
movl
cmp
je
mov
mov
cmp
je
cmpl
jl
sub
jmp
pushl
call
mov
mov
mov
shl
xor
mov
mov
cmpl
jle
and
jmp
pushl
push
push
call
mov
xor
xor
shrd
xor
shr
or
or
mov
movl
mov
movl
cltd
movl
cmp
movl
jne
cmp
movl
jne
movzwl
add
movl
cmpl
jge
mov
add
jmp
push
push
call
movl
mov
mov
mov
xor
orl
shld
adcl
shl
movl
mov
mov
xor
sbbl
xor
mov
cmp
jne
movl
cmp
movl
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
addl
xor
and
shl
ret
xor
xor
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
negl
subl
movl
cmpl
movl
je
cmpl
jbe
xor
jmp
push
pushl
pushl
pushl
push
push
push
pushl
push
push
push
push
pushl
push
call
add
mov
mov
pop
pop
pop
leave
ret
mov
mov
ret
orl
mov
mov
notl
or
mov
movl
jne
mov
sbbl
mul
ret
xorl
push
mul
and
mov
add
mov
mull
add
mov
mul
add
pop
ret
incl
push
mov
sbb
push
mov
andl
or
movl
jne
mov
mov
sub
imul
mov
mov
xor
div
andl
mov
and
mov
movl
div
not
mov
jmp
and
mov
andl
mov
movzbl
xor
mov
cmpl
jge
jmp
pushl
pushl
call
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
