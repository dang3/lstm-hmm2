push
mov
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
adc
push
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
pushl
pushl
push
call
xor
or
dec
mov
jmp
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
and
mov
sbb
andl
or
movl
xor
or
xor
movl
mov
add
mov
add
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
orl
xorl
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
subl
xor
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
mov
xor
mov
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
jmp
out
add
outsb
sbbl
hlt
sarb
bound
pop
bound
sub
pop
add
jne
inc
xor
iret
lret
hlt
inc
aam
cltd
add
pop
jno
mov
daa
mov
shrb
adc
and
dec
fbstp
mov
jo
dec
pushf
pop
jae
sti
push
push
pop
cmp
add
push
jge
mov
mov
stc
inc
popf
xchg
in
fstpl
jg
cmp
mov
dec
loop
inc
orb
inc
pop
mov
xor
sbb
inc
add
dec
nop
xchg
dec
mov
pop
les
sub
vpsubusw
mov
test
bound
in
push
subl
imul
xchg
cmpsb
gs
js
pop
mov
push
pushf
int3
mov
pop
nop
call
rcrl
imul
mov
outsb
hlt
pop
inc
xchg
jmp
incl
pop
rcl
fldcw
mov
sub
int
std
test
ss
sbb
mov
sahf
lea
jmp
mov
jne
sti
add
jb
pop
xor
cmp
xchg
or
loopne
cmc
dec
mov
pop
test
in
and
xor
push
xchg
imul
mov
pop
test
xchg
sbb
bound
and
rcrb
adcb
mov
add
sub
add
and
pop
mov
xchg
push
inc
cmpsl
inc
adc
cmp
stc
gs
cmp
loopne
scas
mov
push
add
sbbl
pop
out
movsl
pop
pop
mov
outsl
sbb
movb
mov
js
mov
sbb
mov
scas
dec
and
mov
aas
in
inc
mov
mov
insl
loopne
scas
cmp
int3
adc
xchg
inc
or
std
std
imul
cmp
cmc
imul
bound
cmp
push
aaa
or
nop
dec
loope
mov
pusha
cwtl
push
test
ret
test
fmull
xchg
cmpsb
test
sub
hlt
push
mov
scas
mov
ds
adc
cs
cli
clc
pop
mov
add
pop
mov
ret
jmp
mov
ds
mov
ret
inc
sub
jle
cmpsl
in
add
xchg
push
ja
daa
mov
pop
out
icebp
negl
push
jmp
or
outsb
cmp
dec
les
aad
cwtl
sbb
pusha
jnp
addb
pop
jmp
lds
mov
adc
xor
cmp
mov
jmp
test
jns
rolb
stc
jne
lods
cmp
jmp
mov
sub
dec
inc
pop
lea
mov
fsubr
mov
inc
xor
enter
popf
add
ret
adc
cmp
push
xchg
pop
arpl
xchg
dec
lcall
fnstenv
dec
jge
jnp
jb
jl
or
jo
sub
add
or
xchg
inc
ret
pop
fcmove
lds
fcoms
loop
pop
xorl
fstps
repz
stos
dec
push
pusha
ss
cmpsl
rol
cltd
fwait
adc
mov
cwtl
dec
shlb
and
cmp
mov
xchg
jne
int3
lahf
cmp
in
fwait
or
in
sub
cmpsl
cmc
and
add
stos
shr
sbb
popf
or
push
ss
push
pop
inc
mov
mov
sub
and
rcr
adc
std
mov
ss
movsl
lret
scas
scas
les
jb
sub
outsb
loopne
aam
jb
sarb
push
int3
loope
add
and
daa
and
js
xchg
jmp
xlat
push
jl
loop
pop
fcoml
nop
int3
jb
mov
int3
neg
mov
xchg
xor
rolb
xor
rcl
and
stc
sub
mov
pop
or
aaa
stos
pop
and
ret
xor
mov
in
cwtl
xchg
repnz
movsl
movsl
mov
push
push
cli
sbb
sub
jp
loop
jo
inc
push
out
add
imul
mov
or
jne
mov
int
shlb
int
dec
xlat
dec
jns
rclb
and
rcll
test
jl
popl
adc
cld
jo
mov
lds
add
mov
and
ficoms
sbb
mov
mov
lret
inc
push
sub
inc
add
dec
push
rcl
cli
loopne
mov
mov
adc
inc
or
push
mov
repnz
xchg
pop
lahf
adcl
sub
xchg
sbb
and
jb
std
imul
mov
inc
lahf
iret
cs
jge
ss
call
les
cld
imul
xchg
mov
fildll
bound
mov
les
into
loop
mov
or
jo
jle
test
mov
pop
mov
mov
lret
mov
jne
mov
mov
outsb
cmp
imul
cmp
xchg
and
test
push
xchg
pop
imul
push
fsubr
test
sbb
sub
xchg
or
xor
inc
jne
and
jbe
push
add
xchg
dec
xchg
ret
shll
pop
sbb
ficomps
ja
sub
push
adc
neg
ret
or
lods
adc
inc
int
jge
xor
cld
es
add
sub
jbe
flds
mov
sub
push
movsb
imul
push
pop
pop
js
fmull
push
jns
cmp
lret
in
mov
shl
jg
inc
and
jmp
mov
xor
sbb
shrl
push
cmp
leave
dec
cmp
cmp
in
adc
push
jnp
mov
cmp
dec
je
popf
cmpsl
or
mov
xor
in
sbb
push
popf
inc
pushf
xchg
or
push
cmp
das
sub
pop
jae
and
inc
jns
mov
inc
out
sbb
mov
pop
cli
pop
or
add
test
adc
enter
pusha
fists
mov
cmpsb
xchg
fiadds
sbb
push
push
sub
mov
dec
arpl
mov
inc
nop
bound
jp
cmc
shrl
cmpsl
mov
jb
push
ja
test
loopne
pop
out
cmp
xchg
out
or
mov
inc
and
sub
cmp
mov
cmpsb
push
jbe
lock
jg
mov
adc
adc
mov
call
sbb
dec
data16
adc
loopne
mov
sub
mov
test
jp
dec
cmp
popf
push
add
rol
andnps
mov
inc
xlat
mov
pushf
scas
lret
jecxz
scas
pop
xor
leave
or
cltd
push
mov
fnsave
mov
fs
fs
outsb
adc
cmp
scas
xor
mov
mov
xor
ja
fldt
adc
daa
xchg
mov
fs
push
stos
outsl
inc
jle
ds
mov
idivl
lret
movsb
push
inc
push
cmc
cld
arpl
rorb
mov
pop
ficoms
xchg
xchg
sbbb
jb
pop
jg
add
mov
jle
push
jo
in
mov
hlt
or
pop
mov
out
and
cli
testl
icebp
repz
sub
pop
std
ficoms
aaa
adc
ret
push
dec
cltd
ss
out
dec
pop
jmp
sbb
xor
xor
cmpsl
dec
push
sub
mov
inc
outsb
jnp
bnd
pop
clc
cmpsl
popf
out
xor
inc
lods
push
jb
cmp
xchg
repnz
andl
lea
test
mov
and
push
cmp
insl
iret
pop
inc
dec
xor
jl
jl
jnp
mov
xor
insl
iret
lcall
adc
mov
int3
rcrb
pushf
mov
jecxz
xchg
loop
lcall
pop
stos
fisttps
push
sbb
sub
inc
push
dec
pusha
dec
bound
add
scas
dec
push
jge
adc
stc
push
clc
mov
push
add
lret
data16
add
adc
push
imul
daa
dec
stos
and
jne
xor
jae
pop
out
dec
lcall
fadds
fisubs
lods
jle
subl
cld
dec
stos
mov
pop
mov
jp
mov
imul
jnp
lret
mov
data16
jae
movsb
and
mov
jmp
fmuls
imul
addl
mov
xor
xchg
xchg
pushf
fcompl
or
pop
mov
xchg
lods
aaa
inc
das
dec
pop
add
cli
adc
movsb
jmp
out
testb
cs
mov
cs
into
aas
inc
adc
inc
sarb
aaa
addl
and
fwait
ja
jg
pop
int
push
mov
mov
jb
fs
push
pop
popa
mov
jp
or
mov
pushf
mov
mov
stos
xor
sbb
sahf
cwtl
adc
pop
mov
mov
mov
pop
push
ficomps
xor
and
subb
fs
std
into
gs
fs
stos
dec
sbbb
push
push
xchg
xor
mov
sub
jb
dec
in
sbb
outsl
jmp
mov
je
insl
addr16
fistl
es
mov
pushf
call
daa
imulb
pop
dec
cmp
cwtl
jle
cmp
inc
mov
js
and
sti
cmp
adc
scas
xchg
sbb
mov
orb
mov
hlt
lret
rcrl
aad
shlb
and
mov
cmp
jne
and
jnp
leave
fldenv
add
jbe
mov
jle
jne
dec
inc
push
sarl
cld
push
xor
les
data16
push
sti
aaa
lods
fcomps
nop
or
jmp
in
and
sub
mov
test
negb
pop
data16
cmc
mov
fldcw
lods
dec
sub
pop
loopne
lcall
ffree
imul
push
dec
inc
sub
mull
dec
sti
inc
dec
js
mov
cmp
mov
cmp
scas
repz
jl
push
dec
scas
pusha
jbe
push
enter
xor
dec
cmpsl
js
sti
sti
inc
out
mov
arpl
pushaw
jp
out
sub
add
mov
mov
pop
pop
add
mul
pop
out
out
je
jl
and
push
jb,pn
hlt
lcall
daa
mov
mov
push
mov
loopne
bnd
jp
ror
sub
dec
jo
mov
add
fisttpll
imul
mov
dec
lret
mov
adc
fildll
inc
jle
orl
pop
or
adc
sub
mov
lods
xchg
jnp
ja
sbb
xor
xchg
add
cld
xchg
iret
pop
xchg
shll
dec
mov
test
mov
fstpl
mov
in
mov
jle
cmp
xchg
jbe
or
mov
push
add
cmp
jnp
pop
js
add
shlb
fld
jnp
lds
cmpsl
push
push
sbb
sbb
data16
jno
lds
or
sub
push
add
mov
xchg
fdivs
push
and
arpl
in
out
ss
cmc
mov
sub
xchg
icebp
dec
jmp
in
mov
sub
loopne
stos
xchg
ja
scas
aad
push
cli
pop
shlb
lods
push
ret
mov
and
lahf
jnp
inc
das
mov
subl
aam
or
movsl
xor
ret
sbb
je
or
or
mov
andb
xor
mov
shll
fs
aaa
dec
ljmp
jae
popf
arpl
jbe
movsb
jnp
xor
sbb
jns
insl
stos
ljmp
shll
ret
clc
and
int
xchg
sarb
mov
inc
das
ljmp
mov
mov
clc
ljmp
sub
jno
jbe
dec
push
arpl
push
lds
mov
mov
jo
jl
inc
js
adc
fldl
inc
nop
jl
in
cld
mov
in
xchg
scas
lds
mov
xchg
inc
lock
xchg
mov
movb
insb
mov
test
dec
icebp
jmp
ja
es
add
push
js
pop
sub
pop
or
xor
mov
repnz
icebp
je
pop
fnstsw
push
int
and
inc
lahf
jp
pop
xchg
cwtl
out
mov
cmp
jne
insb
ret
dec
or
in
jbe
movsl
nop
add
popa
outsb
xchg
dec
pop
js
push
popa
rorl
add
jecxz
or
in
and
shlb
jbe
fcmovnb
sbb
popa
add
push
ljmp
or
in
cwtl
popf
movb
add
and
and
fldenv
push
add
repnz
mulb
pop
imul
inc
in
movsl
dec
add
arpl
outsb
cmpsl
push
pop
int3
push
inc
popf
dec
push
xchg
dec
add
aam
cmpsb
and
push
ds
pop
push
mov
rol
std
fwait
sbb
sti
sbb
arpl
fstp
shl
inc
pop
outsl
aad
pop
inc
scas
arpl
add
bswap
mov
mov
imul
mov
or
testb
fisttpll
sbb
aaa
mov
pop
pop
popl
pop
fwait
into
mov
sub
mov
push
popa
xchg
subl
push
jae
fidivrl
movsl
jp
mov
roll
adc
pusha
sahf
pop
push
sub
in
jbe
mov
pop
xchg
cli
lret
lock
inc
lods
or
pop
push
leave
scas
inc
out
pop
cmc
or
scas
mov
adc
out
test
push
xor
add
mov
jl
fdivrl
and
add
cmc
ret
and
aad
mov
pop
jp
jo
les
mov
xor
sub
push
dec
cmpsb
or
xor
je
xchg
enter
xorl
xor
push
adc
xchg
mov
push
cmp
into
xor
aas
mov
into
push
sbb
inc
cltd
fcmovbe
xor
stos
addl
shll
cwtl
aas
fadds
push
push
dec
adc
cli
cmpsl
add
out
pop
mov
jbe
push
insl
cmpsb
xchg
es
mov
inc
and
or
cmp
push
mov
bound
inc
arpl
jnp
xlat
add
jp
or
in
adc
lret
inc
xor
mov
dec
jns
jecxz
sti
leave
inc
ljmp
push
lods
pusha
inc
adc
out
sub
mov
stos
inc
lods
and
dec
ljmp
inc
mov
testl
aad
stc
add
ss
xchg
and
fiaddl
dec
lahf
outsb
mov
out
mov
int
xor
mov
popf
xchg
push
mov
nop
inc
jge
mov
jl
cmpsl
pop
movsl
mov
mov
xor
and
out
inc
sbb
mov
cli
mov
shlb
jle
jo
pop
lods
ss
mov
or
or
das
insl
xchg
jnp
and
sbb
pop
cmp
xchg
ja
into
in
cmp
and
pop
into
sbb
sub
icebp
icebp
mov
movsb
adc
xchg
movsb
and
loope
dec
lods
lret
scas
outsb
hlt
cmp
jmp
push
pop
std
xor
jne
outsl
fistpll
mov
or
push
sub
insl
xchg
std
xor
inc
jbe
in
lds
and
xchg
aaa
push
xchg
popa
sub
out
mov
and
flds
inc
stc
or
and
dec
aaa
inc
and
mull
outsl
cwtl
push
outsl
fnsave
mov
into
rorl
in
popf
insl
test
mov
je
mov
add
rclb
mov
mov
pop
and
in
pop
pop
add
mov
jnp
enter
je
push
sub
pop
sbb
xor
lahf
xor
sahf
sbb
sbb
push
mov
jl
or
sub
cmp
loop
xchg
mov
push
xor
bound
push
mov
jecxz
sahf
xor
mov
mov
outsb
mov
cmp
mov
xchg
inc
mov
and
icebp
rorb
or
sahf
rclb
aam
inc
jo
sbb
sbb
and
push
pop
and
mulb
push
cmp
jle
jae
inc
fdivrs
repnz
add
sahf
sub
jns
add
cmp
mov
cli
xor
fdivp
pop
jle
out
cmpsl
sbb
inc
js
jne
push
loope
outsb
icebp
jnp
dec
popf
push
dec
xlat
ss
cmp
pop
adc
mov
cmp
insl
outsl
push
pop
sahf
cwtl
mov
xor
adc
adc
push
divl
and
movsb
leave
pop
inc
insb
xor
push
sub
pop
fdivl
jo
jnp
js
or
mov
testb
or
addr16
cmp
adc
stos
xor
andl
push
iret
inc
insb
sbb
sub
lret
mov
pusha
dec
int3
dec
xchg
or
push
add
or
loop
imul
call
iret
int
adc
push
test
loopne
push
dec
mov
test
sbb
shl
aad
out
ss
out
ret
cmovnp
sahf
fbld
xchg
add
jno
cmp
outsl
jmp
sbb
mulb
adc
push
jns
add
mov
cmpl
mov
imul
push
cmp
and
mov
incl
mov
popa
xchg
or
dec
popa
int
shr
sbb
push
test
add
imull
les
cmp
mov
leave
dec
sbb
jmp
mov
add
push
rcll
xchg
imul
xchg
std
mov
or
xchg
mov
out
call
xchg
aad
shrb
xchg
adc
inc
scas
lahf
mov
mov
jg
add
loopne
jmp
mov
inc
add
cmp
push
jl
xchg
push
xorl
inc
cmpsb
outsb
movsl
fisubrs
lcall
div
stos
inc
add
orl
pop
jo
mov
mov
roll
ret
in
push
jnp
dec
test
mov
gs
mov
push
jg
jle
pushf
push
ss
cmp
cmpsb
or
les
jp
iret
sahf
xchg
in
ja
pop
inc
fildl
push
rorb
pop
sarl
out
ds
fsubs
xchg
xchg
mov
xchg
hlt
int3
addb
push
jae
cmp
adc
aaa
jb
in
or
hlt
pop
sahf
arpl
adc
aad
cmp
imul
xchg
daa
leave
xchg
sbb
adc
xchg
lock
imul
mov
int
sarb
ret
inc
loope
push
dec
add
test
daa
and
fsubrl
jae
lcall
repnz
aaa
xchg
dec
xchg
dec
jle
sahf
sub
iret
xchg
jp
std
bound
in
lcall
aaa
jp
and
pop
sti
mov
pop
stos
jg
sti
mov
pop
icebp
jmp
pop
sbb
push
mov
pop
mov
sub
push
mov
outsl
push
push
ret
lcall
pop
sahf
popf
pop
pop
stc
js
js
orl
inc
adc
rorl
push
sub
and
sbb
add
out
ret
ficoms
inc
sbb
ss
mov
in
lea
out
cmp
xor
or
push
xchg
movsl
aaa
cmp
lcall
bound
add
cltd
jmp
pop
cwtl
jmp
jp
cmp
cltd
sub
iret
nop
mov
mov
adc
fsubrl
pusha
je
cmpsb
sub
cmpsb
sub
js
bound
push
xor
fnsave
gs
cmp
ret
je
sbb
mov
sbbb
mov
add
inc
fdivrp
stc
sahf
addl
insb
pop
cmp
lds
adc
mov
mov
jns
popa
leave
in
cmp
cli
test
mov
xchg
pop
in
or
xchg
lods
popf
pop
fs
fucomp
ja
std
insb
xor
mov
shrb
mov
xor
cmp
push
jl
lea
aaa
adc
lea
mov
inc
mov
and
push
sub
in
aam
mov
int
push
inc
imul
add
lds
dec
xor
jbe
icebp
jmp
jp
mov
ja
mov
cmp
rcrb
jne
mov
inc
sub
lods
cli
aad
mov
sbb
imul
fildll
ljmp
inc
cmp
lods
mov
xchg
out
lods
jne
arpl
xchg
lret
popf
sub
pop
sub
gs
je
fiaddl
jle
testl
xorb
in
in
test
add
dec
push
in
mov
jg
rclb
add
rcrb
jp
add
pop
je
cmp
sub
frstor
mov
pop
int3
xchg
add
ds
push
sbb
stos
jno
cmp
je
push
movsb
push
mov
mov
xchg
mov
insl
jge
xor
and
mov
push
lcall
and
rorb
add
push
fldcw
pop
sbb
cmpl
std
call
cmp
or
mov
jnp
ret
iret
dec
xorb
fldt
xor
leave
fisttps
xchg
sti
popf
clc
jns
test
dec
cwtl
cld
jb
aaa
or
or
push
leave
mov
lock
andb
arpl
sub
pop
push
pop
outsb
arpl
subl
arpl
shrb
pushf
into
icebp
mov
loopne
push
sbbb
in
mov
jne
fwait
push
and
add
aas
sbb
lods
mov
adc
inc
cmp
mov
cmp
push
ret
push
cmp
or
sbb
xchg
cmp
mov
cwtl
je
adc
loope
mov
and
mov
xchg
add
xchg
sarb
jl
cli
sub
mov
vpaddw
addr16
test
mov
add
adc
aam
sbb
lret
sbb
sub
int
cmp
or
and
dec
cmp
cmp
jne
pop
loope
rcr
lods
cmpsb
sub
movsl
jno
rorb
daa
into
mov
adc
pop
out
xchg
stc
cmp
sbb
pop
fs
jns
xchg
pop
cmp
cld
pop
arpl
add
add
outsb
xchg
mov
cmp
cli
stos
inc
cli
fcmovne
test
inc
fcmove
stos
gs
jl
dec
loope
adc
aam
insb
fdiv
add
loopne
and
jge
test
insl
mov
inc
adc
pop
shlb
jmp
aad
dec
hlt
rcrb
sub
es
pop
sbb
lahf
xchg
hlt
pop
iret
push
test
js
in
pop
imul
adc
xor
add
mov
sbb
icebp
cltd
mov
push
inc
mov
sbbl
mov
add
int
movzbl
and
popa
inc
push
orb
xchg
cmpsl
xor
jmp
adc
mov
mov
mov
popa
imul
jmp
fstl
shll
js
mov
mov
pop
orl
lret
into
stos
aad
mov
cmc
mov
push
subl
dec
cmp
mov
xchg
cmpsb
dec
push
popf
flds
loop
push
mov
mov
popf
mov
pop
xchg
in
test
push
addb
lahf
xor
push
shlb
or
xor
mov
jl
dec
out
xor
mov
jns
lock
cmp
adc
jbe
cmp
sbb
arpl
pop
jne
addl
cmpsl
dec
push
inc
adc
xor
xchg
xchg
mov
push
sub
xor
daa
and
xchg
sbb
xlat
sahf
cli
and
add
mov
fsubrs
lcall
mov
mov
rol
imul
jno
lcall
shll
xchg
leave
stos
sbb
dec
pop
xor
roll
inc
lmsw
push
js
mov
aam
je
and
xchg
jbe
mov
popf
inc
test
cmp
mov
and
sti
das
in
and
fdivrl
mov
out
popa
add
in
gs
iret
xor
aam
scas
test
int
and
add
mov
adc
int
test
shlb
mov
pop
pop
icebp
pop
inc
cltd
aam
jns
add
jle
add
xor
fidivrs
jp
inc
fimull
xor
mov
fdivl
rcll
cs
dec
pop
add
sti
or
xlat
js
mov
icebp
pop
in
mov
jnp
cmp
sbb
call
lea
push
fnstcw
sahf
sbb
xchg
sarb
insl
mov
aas
fisttps
pushf
and
sti
xchg
jg
rol
in
loopne
add
loop
arpl
into
ret
mov
sbb
adc
sarb
xchg
pop
jecxz
mov
mov
bound
psraw
bound
jg
xchg
add
pop
jo
fsubs
xchg
jne
out
cmp
adc
icebp
xchg
jo
cltd
mov
adc
mov
dec
pop
pushf
shrl
pop
jbe
aas
sbb
xchg
test
cmpsl
test
push
xor
mov
cs
inc
push
or
sbb
cmpsl
stos
cmp
jb
push
push
or
dec
out
ja
insb
repnz
and
call
ljmp
sbb
add
ljmp
add
add
sahf
pop
insb
outsb
jge
sbb
inc
addb
int3
xor
adc
ficoms
push
imul
aas
fisubs
scas
sarb
movsb
sub
xor
orb
pop
adcb
push
dec
cmc
out
sbb
dec
pop
sub
mov
push
iret
loope
sub
scas
adc
fsub
iret
jmp
int3
xor
ss
xchg
sbb
icebp
adc
jp
ret
bnd
add
dec
mov
cmp
imul
test
orb
inc
std
sbb
je
sahf
jnp
sub
mov
int3
or
xor
and
jl
out
adc
jmp
mov
andb
push
mov
mov
jno
pop
or
int3
mov
leave
or
or
lock
push
fs
adc
int3
dec
mov
jmp
add
in
jo
mov
cmp
push
sarl
ds
pop
andps
mov
xchg
or
inc
inc
pop
dec
jno
inc
pop
jnp
stos
rcrl
pop
into
mov
mov
mov
leave
inc
pop
jecxz
daa
adc
rclb
jp
je
jmp
pop
std
push
dec
dec
inc
shll
scas
dec
popf
or
ret
mov
dec
cmp
xchg
mov
xchg
cmp
cwtl
cmp
mov
push
pop
push
mov
pop
outsl
lock
mov
sbb
outsl
repnz
jnp
int
xchg
rcll
out
jno
dec
inc
inc
flds
sar
mov
push
pop
pop
in
nop
xor
sbb
pop
or
fadds
xchg
les
dec
dec
cmp
push
data16
jle
and
in
add
test
sub
adc
cmp
cmp
lock
push
xchg
cld
out
inc
inc
mov
dec
jecxz
mov
mov
sub
in
inc
mov
fnstenv
adc
jbe
test
dec
adc
sbb
jo
mov
enter
stos
mov
insl
push
xchg
lahf
jp
arpl
cmp
and
cmp
div
aam
sbb
push
das
ds
xchg
cmpsb
bound
les
sub
xor
into
cvttps2pi
mov
push
add
data16
mov
shll
enter
mov
push
xchg
push
lods
in
ret
push
dec
sub
jecxz
xorb
std
push
call
cmpsl
xchg
cmc
xor
mov
and
stc
mov
imul
in
mov
ret
xchg
jno
jnp
mov
out
dec
sub
and
or
and
and
sub
mov
pop
mov
push
add
jb
loop
mov
popa
dec
push
test
inc
xchg
popa
inc
mov
sbb
clc
and
lods
sbb
daa
jae
mov
jno
repnz
sbb
daa
sbb
leave
mov
js
mov
inc
inc
sar
andl
inc
rorl
add
or
xor
lret
int
test
dec
mov
ficoms
sub
rclb
pop
mov
jl
pop
flds
pop
jb
lock
outsl
jae
and
or
inc
push
out
clc
jmp
ja
in
fistpl
mov
loopne
in
lds
push
mov
mov
cli
cli
cmpsl
mov
loope
mov
test
aaa
out
fwait
ret
and
push
adc
fucomp
mov
lods
push
jne
pop
or
inc
jbe
mov
loopne
dec
inc
pop
test
xchg
xor
xchg
sbb
push
xchg
push
cmp
mov
sbb
in
insl
cmp
or
fucomip
dec
pop
push
ror
test
inc
adc
mov
pop
imul
and
insb
and
pop
jbe
scas
andl
jb
iret
lret
inc
gs
fstpl
sbb
pop
jnp
jns
sti
rcrl
sbb
testb
jle
sarb
pop
in
popf
popf
sbb
lret
aas
mov
lret
aad
xlat
xchg
add
imul
jnp
mov
lods
cmp
aas
aas
xchg
cmp
dec
and
data16
jp
pop
mul
jp
mov
icebp
mov
inc
sarl
jbe
xor
mov
mov
lcall
lods
repnz
clc
repnz
pop
mov
cmpsl
mov
dec
push
adc
jle
pop
mov
sub
push
push
lods
push
pop
lea
push
cmp
push
loopne
cli
xchg
pop
cmpsl
dec
aam
xlat
inc
add
and
mov
xchg
imulb
mov
iret
ja
les
push
arpl
add
cmp
cs
cmpsb
in
pusha
std
imul
outsl
in
add
imul
and
sub
xor
jl
insl
mov
push
mov
scas
dec
mov
rol
rdpmc
or
mov
out
and
ss
jl
icebp
popf
add
nop
or
nop
insb
imul
mov
cmp
fbstp
dec
xchg
ret
push
stos
jecxz
scas
or
and
jnp
mov
or
mov
xchg
pusha
rcrl
ja
jl
mov
xchg
xor
rol
cmp
data16
ljmp
mov
pushf
loop
cs
fistl
add
fistps
and
out
fisubrl
insb
xchg
sbb
mov
pushf
aam
out
sbb
jmp
fmull
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
jmp
fnstenv
xchg
gs
test
sbb
hlt
inc
lret
lret
bound
adc
aad
dec
mov
inc
out
push
fcmovb
rcll
xor
and
test
add
dec
cmp
sahf
ret
mov
adc
fwait
pushf
inc
push
xor
inc
movsl
xchg
jno
or
cltd
dec
cli
bound
mov
mov
push
pop
repnz
clc
pop
mov
push
xchg
orb
xchg
add
xor
jge,pt
int
jns
xchg
into
cld
mov
mov
in
sti
inc
test
lods
stos
jge
pop
in
and
js
jecxz
nop
in
in
es
jecxz
add
sub
adc
add
xchg
sti
ja
addl
mov
adc
mov
lahf
and
cmpsl
dec
gs
ds
iret
or
sub
pop
faddl
inc
ja
nop
jle
iret
fisubs
dec
adc
or
xlat
aas
inc
lret
loopne,pt
mov
push
adc
fisttpl
mov
mov
das
mov
lds
stos
cmp
xchg
inc
jno
fsubl
adc
dec
pop
loop
test
jae
adc
adc
call
enter
sub
outsb
shrb
and
lods
pop
adc
sbb
jnp
shll
stos
and
push
mov
je
sub
pop
dec
dec
xor
neg
and
loope
mov
jbe
jle
mov
jbe
cmpsb
sbb
push
and
jl
inc
je
decl
and
je
sbb
push
lds
ljmp
jno
inc
mov
sub
xlat
and
das
fcomps
mov
fnstsw
in
jle
and
dec
sub
mov
int
pop
shlb
stos
aaa
adc
orl
pop
or
mulb
notb
sub
adc
filds
jle
mov
mov
pop
insl
int3
pusha
adc
mov
clc
add
sub
imul
inc
mov
adc
in
hlt
iret
lods
sub
xchg
adc
ss
xchg
lods
jmp
jns
je
popa
push
cmp
xor
arpl
xor
xor
or
pop
inc
shll
cltd
pop
test
addr16
adc
mov
xchg
sbb
mov
and
push
movsb
in
mov
gs
icebp
adc
loop
in
pusha
mov
sub
mov
sbb
lods
adc
mov
aad
xor
cld
loope
ljmp
dec
cmc
rolb
cli
push
cli
push
loope
test
fwait
sahf
adc
adc
fmull
xchg
push
mov
arpl
dec
add
aam
aad
in
lret
popa
inc
sub
lcall
mov
sahf
out
mov
cmpsl
call
xlat
repnz
les
addr16
ret
pop
in
sbb
cmc
clc
pop
insb
std
imul
ret
in
xor
adc
outsl
dec
push
fistps
sarb
lods
arpl
rdpmc
outsl
incl
mov
add
sub
or
push
jmp
inc
or
test
cwtl
lds
insl
push
xchg
sahf
ja
imul
dec
pushl
or
jl
jnp
push
cs
and
pusha
sub
call
leave
sub
sbb
sub
mov
dec
dec
call
xor
cmc
jmp
in
gs
jb
insb
jae
sbb
adc
cmc
jae
lock
pop
popa
pop
or
shr
xchg
gs
and
lock
leave
dec
ret
jp
or
gs
repnz
mov
cli
cmp
mov
adc
mov
rdmsr
enter
and
pop
push
or
sti
xchg
dec
xchg
ds
xchg
int3
pop
sbb
cwtl
mov
cmp
jae
addr16
pop
xor
stos
js
xchg
ficoml
cmc
mov
add
fisttpll
test
pop
xchg
clc
test
bound
add
mov
loopne
nop
cli
xor
idivb
aam
adc
lahf
and
std
insl
fcomi
or
js
and
adc
dec
dec
mov
lea
mov
push
repz
push
xchg
dec
mov
in
adc
pop
dec
jp
mov
sahf
in
jnp
shll
xchg
or
mov
mov
das
push
sub
push
sbb
leave
bswap
iret
or
pop
or
icebp
add
in
pop
push
xlat
inc
jl
xor
mov
push
and
xchg
call
fwait
push
ret
imul
add
subb
lds
inc
pop
xor
pop
shr
mov
sub
jb
inc
fldcw
fisubl
jno
std
jecxz
mov
pop
add
js
dec
out
andb
lret
iret
es
outsl
adc
mov
dec
fadds
fistl
aad
jnp
ds
inc
push
and
cs
pop
popf
xchg
gs
xchg
imul
and
insb
jmp
fwait
sub
imul
mov
sbb
dec
rep
jl
ss
and
jns
stc
nop
cmp
je
jno
pop
push
fiaddl
std
hlt
outsb
inc
xchg
adc
xor
mov
stos
mov
std
mov
cwtl
adcb
push
nop
or
lcall
aaa
pushf
iret
fmuls
in
inc
inc
jno
bound
insl
dec
jg
loopne
adc
adc
sbb
jp
sbb
insb
mov
jmp
out
movsb
sbb
ds
jg
xchg
cmc
cld
movsl
pushl
push
pop
mov
repz
inc
jae
addr16
push
pop
push
push
jecxz
fdivrs
xchg
xchg
jbe
int3
mov
jo
mov
decl
outsb
or
lock
movsl
mov
xchg
ficomps
aam
jmp
popa
adc
push
push
pop
dec
push
fldt
enter
rcl
cmc
adc
xlat
rclb
jno
lret
fsubr
cmpsl
cmp
dec
push
fcompl
dec
xor
dec
aas
inc
shll
in
pop
hlt
pop
data16
dec
pop
fwait
ret
add
add
mov
mov
out
outsb
mov
xor
mov
fists
lds
sub
nop
flds
jp
cmp
lret
cmp
fdiv
mov
lea
adc
push
adc
sahf
or
jne
cmp
jecxz
dec
stc
pop
in
out
arpl
in
lods
xchg
push
jg
pushf
jno
jbe
push
lahf
sti
add
insb
int
dec
add
das
mov
and
push
jae
aam
roll
inc
mov
jmp
cmp
aad
mov
adc
rorb
lret
es
int3
in
aas
adc
cli
jno
xor
pop
std
xchg
mov
add
adc
movsb
push
mov
outsl
adc
pop
push
sbb
aaa
fsubr
fsubs
pop
lret
add
test
std
aas
sbb
jnp
add
jg
lods
mov
popa
cmpsl
mov
mov
clc
ja
loop
or
test
xchg
push
loop
lods
das
push
iret
push
leave
fnstsw
int3
inc
scas
enter
add
xor
fcmovbe
xor
and
xchg
mov
or
cmp
loopne
sub
xchg
xchg
jno
inc
adc
push
mov
push
lcall
mov
call
or
daa
loopne
pminsw
nop
outsl
pop
inc
sti
roll
cmp
xchg
mov
xchg
sti
aad
mov
js
ja
cmp
negl
ljmp
cmovno
lods
ret
add
push
inc
adc
sub
js
jno
mov
ret
das
fwait
mov
in
shr
fidivrl
ljmp
sub
addr16
jno
ret
inc
jns
fwait
inc
add
inc
bound
inc
fwait
lods
mov
xchg
pop
sbb
lods
sub
loope
or
mov
sub
popf
sti
adc
popf
and
push
leave
sbb
decb
xor
int
inc
push
cmp
clc
js
shrb
mov
stos
mov
mov
es
sarb
jbe
mov
inc
mov
xchg
hlt
notl
aaa
rcrl
and
fisubrs
sahf
pop
mov
inc
test
pushf
lock
cmp
xor
mov
cmpsl
arpl
shlb
cmp
movsb
push
mov
es
je
mov
add
xchg
cmp
ret
push
xchg
pop
ret
aaa
mov
insb
filds
rolb
repz
push
pop
pushf
lret
cwtl
into
and
repz
push
fldenv
mov
ljmp
arpl
sub
fbstp
sbbl
adc
pop
pusha
in
add
inc
out
bound
aam
xchg
jae
cli
in
jb,pt
jg
cltd
testb
xor
sarl
hlt
mov
movsl
test
inc
outsl
insb
loop
dec
fists
hlt
stos
pop
sbb
insb
lret
and
popa
jne
into
inc
fistl
add
xchg
or
fcompl
and
push
jno
in
and
test
xchg
mov
or
frstor
cmpb
pop
sbb
shlb
leave
sbb
insl
adc
mov
jge
call
notb
xor
adc
stos
dec
mov
or
imulb
xchg
xchg
xchg
inc
cmpsl
sub
ds
dec
or
cwtl
cmp
ja
add
mov
test
fdivrl
cs
lret
sbb
ds
popa
out
loope
push
and
es
sbb
daa
pop
fwait
xor
cmp
test
icebp
nop
popf
stc
jge
pusha
mov
xor
sarb
lahf
popa
mov
or
fistl
inc
arpl
jno
add
add
fwait
dec
pop
xor
or
mov
addb
shlb
pop
adc
addr16
inc
dec
mov
pushf
dec
les
mov
add
movsb
dec
dec
dec
out
mov
lock
aaa
add
mov
inc
lock
je
sub
cs
sbb
aad
jbe
lcall
xor
rorb
imul
out
and
jp
add
jo
scas
and
lahf
jge
xchg
pop
ds
scas
mov
inc
test
mov
daa
fsubl
out
in
sub
imul
in
sbb
jg
clc
add
ljmp
and
and
xor
call
sub
or
xor
in
jg
cmp
decb
ret
push
popf
lahf
xor
xchg
or
xchg
dec
int3
xchg
mov
js
jl
mov
std
sub
fistpl
push
mov
cmp
imul
gs
dec
push
mov
jge
mov
jne
icebp
push
pushf
cmp
mov
push
imul
dec
mov
push
sbb
jg
inc
fisubs
cmp
stc
mov
adc
daa
or
enter
pop
mov
inc
push
adc
mov
jmp
lahf
or
ljmp
ficomps
adc
repz
jp
sub
xchg
push
xor
mov
dec
push
daa
and
dec
imul
xor
aam
cmpsb
cmp
popf
jl
in
jl
jmp
mov
lods
cmp
test
ljmp
xchg
mov
mov
mov
mov
push
pop
xchg
rcrl
push
mov
push
dec
je
into
and
iret
adc
inc
stc
xor
shlb
jg
mov
int3
loop
mov
loop
inc
cmp
sub
mov
in
xchg
ja
xor
xor
mov
incl
inc
and
inc
punpckhdq
test
mov
xor
or
scas
pmuludq
mov
fsubl
lcall
cltd
in
pusha
sti
movsb
add
mov
testl
add
mov
jle
mov
pop
ljmp
lods
lock
inc
mov
rclb
scas
cmpsl
call
scas
dec
jle
bound
in
fsts
jecxz
out
adc
pop
push
push
dec
ja
aas
xchg
pop
sbb
and
jo
into
les
push
inc
cli
pop
cmpsl
push
or
pop
in
mov
test
jns
cltd
xor
mov
jge
or
add
in
test
jo
cmp
call
out
fiaddl
shr
add
rorl
pop
and
jg
inc
aad
loopne
cmpb
rcll
jmp
out
outsb
pop
mov
mov
xor
sahf
xchg
insl
jecxz
xchg
out
sahf
mov
cmpsl
fistl
sbb
jl
mulb
mov
imul
or
sbb
cltd
ss
je
cmp
mov
or
bound
ret
xchg
push
push
push
sub
dec
aas
bound
leavew
aas
push
sti
add
mov
out
dec
daa
sarl
dec
lea
fidivs
cmpsb
pop
jb
scas
imul
push
mov
mov
loope
rcr
hlt
push
mov
imul
insl
mov
jecxz
mov
mov
cltd
pop
sbb
loopne
push
dec
faddl
movsl
lods
repz
xor
jno
cltd
test
out
sbb
es
xchg
push
int3
loopne
push
push
jnp
int3
sbb
jno
das
insl
dec
push
or
add
mov
sbb
adc
je
gs
loopne
outsl
shll
scas
sbb
out
int
divl
into
pop
pushf
lock
mov
jmp
dec
add
pop
cmp
pop
and
or
sub
daa
lock
push
push
adc
xchg
mov
jno
xor
jl
sahf
push
pusha
adc
dec
out
lahf
inc
aam
and
call
mov
shrl
test
inc
out
xor
and
std
sub
lock
in
iret
adc
sarl
mov
stc
in
inc
mov
hlt
jb
ss
call
js
inc
testb
out
test
lea
mov
pop
pusha
mov
adc
or
lods
fnstsw
int3
inc
mov
mov
jle
imul
nop
add
fs
pop
pop
fdivrl
pop
cmp
movsb
sahf
and
mov
adc
fbstp
xor
nop
cmp
fcompl
xchg
lcall
imul
call
lds
stos
shll
fldcw
push
aam
cli
inc
pop
addr16
and
push
push
mov
out
int
mov
or
outsb
sbb
enter
sbb
sbb
or
ret
xchg
jmp
sti
insl
jnp
bnd
sub
mov
fimuls
xchg
js
and
xor
push
and
movsb
leave
jecxz
cmp
sub
rcrl
add
jnp
mov
jne
roll
loopne
fdivrs
arpl
fdivs
mov
ds
nop
loopne
jns
inc
std
and
int3
in
or
lods
mov
stos
or
mov
mov
pop
inc
addl
outsb
cs
cmpsl
ss
les
adc
mov
sbb
in
pop
fs
out
jp
push
inc
cmpsl
ret
sahf
aam
sbb
subl
leave
enter
sub
or
stc
jg
icebp
push
lret
or
je
mov
pop
jne
pop
xchg
cmpsb
out
cwtl
insl
lfs
push
jnp
rorl
and
mov
fidivrs
cli
mov
arpl
ss
add
movsb
lock
or
add
mov
rcrl
or
dec
push
push
mov
fstl
enter
and
sbb
adc
scas
add
sub
dec
jg
fisubrs
gs
push
mov
ret
rcl
in
xor
call
fimuls
mov
daa
imul
or
pop
dec
add
sbb
dec
enter
lods
push
sub
sub
cwtl
subl
cld
mov
pop
repnz
test
dec
mov
movb
lcall
push
or
inc
sub
cld
pop
and
movsl
lds
push
fcmove
jne
insb
mov
push
jbe
jnp
sub
int
cmpsb
push
imul
push
mov
cld
mov
int3
jnp
fists
dec
arpl
aam
repnz
cli
mov
scas
push
push
mov
lock
in
in
std
push
mov
and
je
mov
add
mov
stos
sub
mov
outsb
fisubrl
sub
sahf
imul
bound
xor
je
subl
dec
push
mov
mov
xor
dec
xchg
test
pop
rclb
aas
popa
test
mov
mov
testb
or
jb
std
dec
stc
lret
fstpt
jecxz
cmpsl
fldl
push
cld
jns
repz
data16
fildll
pop
mov
bound
add
lea
jae
jmp
inc
jbe
nop
mov
stc
sbb
int
fchs
cmpsl
rorb
aad
aas
and
cmpsl
add
fisttps
jo
fistpll
inc
ljmp
outsb
cmp
out
sti
jl
push
adc
fistpll
add
inc
shlb
cmpb
mov
test
add
rcll
sbb
xor
lds
mov
insl
std
int3
shlb
pop
push
popf
xchg
inc
adc
mov
out
arpl
mov
fs
mov
aad
popf
lahf
into
sub
fnsave
push
pushf
test
ror
jmp
add
jns
xchg
cwtl
shrb
mov
adc
jns
lret
dec
movsb
cmp
fcmovnb
jmp
lock
jle
cmc
mov
sbb
add
testb
ljmp
push
aaa
sbb
pushf
sarb
pop
pop
push
andl
loope
scas
and
jecxz
adc
pushf
dec
mov
pop
pushf
or
fwait
andb
in
jnp
popa
inc
xor
dec
adc
jg
movsb
negl
or
lds
sub
aas
add
and
iret
mov
push
sbb
or
push
ja
inc
shl
dec
out
fidivs
mov
pop
adc
orl
into
dec
push
jl
mov
dec
inc
notb
fcoms
and
jg
inc
fucomi
insl
ss
test
in
test
pusha
xchg
sub
xorl
out
mov
idivl
cmp
testb
pop
inc
sbb
sub
je
loopne
adcb
out
fldl
and
xchg
adc
mov
inc
std
mov
dec
pop
xchg
cmp
lock
ficompl
jl
xchg
ret
jmp
cmp
and
inc
fisttpl
imul
in
xlat
les
pushf
icebp
sub
in
bswap
notl
into
repnz
dec
sahf
xchg
lret
or
aaa
pop
dec
xor
xchg
push
ss
mov
enter
push
lods
arpl
sub
cmp
mov
daa
mov
pop
cwtl
inc
pop
outsb
addr16
nop
mov
mov
push
fs
int
or
and
adc
jmp
stc
mov
and
mov
adc
gs
aam
sbb
ja
pop
stc
inc
sbb
lahf
xchg
sti
mov
sub
pop
aad
push
push
jo
add
int
jmp
scas
adc
push
stos
jecxz
jnp
and
sub
cmp
xor
or
add
in
sarb
push
sarb
xchg
jb
xlat
cmp
loop
js
cmp
out
mov
dec
iret
or
sbb
ficompl
inc
orb
or
cwtl
ljmp
lea
in
mov
lret
out
inc
negb
fisttpl
inc
sub
jmp
das
inc
jmp
push
pop
mov
sbb
push
or
xlat
dec
fs
inc
lods
out
pop
mov
iret
std
pop
cmp
popa
imul
iret
aas
dec
add
mov
lods
repnz
or
xchg
xchg
les
xlat
aaa
comiss
jge
dec
mov
mov
lods
out
repz
ret
sub
rorl
jg
fistl
fwait
adc
bound
std
pop
mov
xchg
fs
cmpsl
fidivrs
push
lock
enter
scas
add
call
inc
in
pop
std
test
jge
outsl
add
mov
cli
dec
pop
loopne
call
dec
xchg
ds
clc
lods
xor
adc
push
xchg
dec
and
scas
add
sti
andl
fdivrp
mov
dec
stc
rcrl
test
mov
cli
dec
jnp
jb
xchg
arpl
mov
mov
std
popf
mov
cltd
adc
nopl
fcoml
and
outsb
test
roll
data16
popa
push
addb
xchg
test
mov
dec
xchg
mov
jae
pushf
in
cmp
out
jb
popa
jbe
and
out
outsb
add
xchg
out
cmpsl
sub
stos
cmp
mov
push
lret
daa
or
or
inc
mov
movsb
and
pop
jnp
xor
out
dec
pop
jbe
je
jae
arpl
jbe
jne
or
mov
pop
sub
arpl
js
jbe
stos
mov
ror
mov
add
push
dec
sub
pop
sti
popl
pop
fnstenv
pop
orl
sub
sbb
xchg
jo
iret
adc
push
fs
mov
mov
jo
or
cmp
sub
pop
fs
add
pop
xor
cmpsl
xor
jae
cmp
pop
xchg
jl
sbb
add
pop
xor
fisttps
test
sti
sbb
ss
mov
sbb
std
lea
cmpsb
in
mov
or
mov
popf
and
inc
xchg
cmp
loopne
dec
popa
jae
cmp
push
sahf
ret
dec
out
pop
ret
loopne
cmp
pop
pop
cmp
jmp
jmp
decl
leave
and
outsb
add
mov
adc
or
sbb
push
pop
and
call
int
mov
jmp
jno
pop
mov
xlat
mov
push
lahf
fcmovbe
pop
xchg
test
rcrl
movsb
xchg
lahf
out
stos
movsw
call
pop
adc
in
cmp
jp
outsb
sbb
adc
xchg
xchg
adc
adc
sbb
or
push
xor
fcomp
sub
fsubs
aaa
jo
imul
mov
cmp
js
daa
pop
fdivrl
mov
pop
shl
cmpsl
mov
pop
jb
lahf
sti
push
lds
sbb
loop
mov
xor
cmp
cmpsl
mov
sbb
push
pop
adc
in
push
mov
scas
movsb
add
outsl
lock
cld
out
lds
es
mov
sbb
mov
test
popf
mov
inc
jl
nop
xorb
mov
pop
stc
enter
cmp
jg
cli
jae
pop
movl
xchg
push
sbb
or
push
adc
xor
fs
loope
mov
mov
cmp
and
pusha
xchg
clc
mov
jle
inc
add
repnz
cli
cmp
xor
pusha
addr16
jg
mov
xor
mov
clc
movsb
add
out
lahf
test
movsl
mov
lock
jo
enter
push
mov
mov
cmp
in
mov
fdivrp
mov
pop
out
push
addr16
aam
mov
push
test
or
push
add
mov
cmp
inc
jp
lods
movsb
mov
lods
jle
and
add
mov
pmaxub
iret
cli
xlat
mov
xor
mov
fimull
arpl
sub
push
lds
lock
mov
loopne
cmp
push
lret
lcall
lds
or
add
pop
or
call
shlb
jp
and
sbb
in
push
add
fucomi
dec
hlt
fildl
or
xchg
repz
pop
jp
outsl
lock
cmc
sub
sbb
in
pop
push
jge
xchg
adc
jb
movsb
push
pop
jns
lods
lods
in
push
out
cmc
jne
insb
push
leave
cmp
dec
and
hlt
inc
inc
sbb
mov
pop
leave
pop
xor
mov
lods
insl
xlat
push
rolb
sub
xor
test
jp
addb
mov
xor
aam
xchg
xchg
adc
inc
push
ss
icebp
mov
lcall
sti
std
xor
test
inc
cli
jecxz
inc
push
push
outsl
jne
aas
mov
retw
mov
cwtl
or
sbb
fisttps
jns
push
jo
out
test
cmp
xchg
fnstsw
jne
icebp
mov
lea
out
push
mov
fwait
insl
mov
mov
mov
scas
cmp
test
sbb
bound
sbb
cmp
push
insb
ss
or
pop
xor
pushf
jb
ret
rolb
sbb
insl
cmp
into
fs
mov
clc
out
ja
out
dec
pop
fwait
xchg
cs
popf
stos
and
and
xchg
pop
push
jge
xchg
into
test
mov
out
out
push
jmp
sub
mov
mov
and
mov
cwtl
int
hlt
loope
jns
jae
movsb
aad
mov
pop
repnz
lcall
jbe
cmp
fdivl
mov
mov
pop
xchg
sub
out
adc
jp
pop
dec
out
adc
push
mov
jae
ljmp
push
and
imul
adc
out
sbb
adc
std
and
cld
sbb
xor
cmpl
call
movsl
sbb
fsubp
sub
test
mov
jg
jle
cld
repnz
hlt
adc
adc
sub
lock
cmpsl
into
cmpsb
daa
push
scas
lds
add
xorb
imulb
cmp
lcall
xor
pushaw
inc
xchg
push
add
sub
cmp
lods
loop
add
test
fistps
xor
loopne
pop
rol
rcrl
rolb
pop
mov
lods
dec
hlt
lds
mov
mov
cmp
mov
xchg
lods
xor
mov
out
jno
in
shl
mov
push
adc
mov
xchg
push
mov
ss
cltd
icebp
icebp
iret
inc
fdivl
mov
nop
vpmadcswd
stc
mov
lods
fidivl
ljmp
jo
or
add
jp
sub
cmp
mov
pop
popa
or
push
xchg
repz
jne
xor
xchg
push
je
xchg
mov
cmp
inc
xchg
mov
aad
mov
adc
hlt
das
sub
jmp
push
push
into
inc
pop
mov
sub
lock
lds
xchg
rorl
jecxz
xor
imul
adc
fisttpl
leave
sbb
daa
out
sub
ljmp
push
xlat
mov
cmp
test
lods
pop
andb
jmp
outsb
in
dec
cli
add
ljmp
push
jae
repz
add
loope
push
xor
xor
add
stc
push
scas
jle
pop
push
imul
out
lds
cli
pop
fisubrs
mov
add
cmp
xchg
add
outsl
add
xor
fnstcw
mov
scas
jo
outsb
lods
xchg
test
decb
or
cmp
xlat
movsl
mov
into
jo
pop
in
jp
sbb
or
cmp
push
stos
int
mov
movsl
cli
das
pop
cmp
jmp
addr16
inc
add
insl
test
jg
emms
pop
stos
out
cmp
sub
sbb
dec
xlat
and
mov
nop
sub
pop
dec
push
into
cmc
mov
outsl
lds
and
movsl
movsl
mov
fisttpll
dec
jmp
int
das
jge
or
cmp
stos
push
adc
jecxz
mov
je
pop
pop
mov
and
cmp
jne
pop
pop
sub
movsl
aas
push
xor
shrl
inc
xor
sbb
mov
dec
xchg
decb
lds
addl
xchg
jge
daa
xchg
pop
and
imul
fbld
insl
imul
in
mov
mov
les
and
fwait
rol
repnz
rorl
imul
into
jno
test
ja
imul
leave
lcall
jbe
fiaddl
mov
int
rolb
test
mov
pop
call
imul
jb
sbb
movsl
pop
xlat
icebp
xor
ret
cmp
pop
sbb
fnstcw
or
mov
mov
fstpl
fldln2
jg
psubsw
mov
dec
add
cs
sbb
ret
mov
add
mov
sub
scas
cmp
jg
imul
sub
pop
mov
loope
mov
xor
lcall
mov
lods
test
icebp
xchg
jge
jne
pop
lds
cltd
je
int3
cmpsb
mov
lret
inc
mov
sbb
push
repz
cli
and
jl
add
addr16
outsb
rolb
cwtl
and
and
shrl
mov
ja
out
shll
sub
lahf
mov
mov
push
outsl
pusha
push
aas
mov
push
sub
icebp
jl
jae
sbb
lahf
cmp
orb
cmp
or
mov
sub
mov
js
sub
inc
xchg
mov
xchg
adc
jp
push
mov
pop
and
cmp
push
cltd
xor
jecxz
xor
shll
jno
push
push
mov
test
in
xor
push
lcallw
xchg
stc
sbb
or
mov
test
aad
fldt
cmp
mov
push
lret
jae
outsl
dec
adc
jp
xchg
adc
lret
sbbl
push
add
leave
pop
jb
sbb
ret
push
jecxz
and
jge
sbb
cmpsb
xchg
xor
call
lahf
fiadds
pusha
imul
sbb
xor
adc
lods
dec
popa
fwait
xchg
push
add
into
cmpsl
enter
mov
adc
xor
daa
mov
adc
rclb
shll
xlat
sbb
or
cmc
out
sub
cmc
clc
ja
jb
out
mov
outsb
dec
fisubs
xchg
sbb
fldenv
scas
jg
dec
ret
sbb
cmp
dec
cmc
cltd
pop
jo
jmp
ja
aaa
jecxz
lea
lods
push
xchg
xor
outsb
push
mov
dec
or
push
jnp
test
dec
adc
jo
push
cmp
ret
mov
fisubl
loop
adc
mov
add
cmp
inc
lret
shll
add
divl
push
sub
sub
lds
nop
out
push
int3
stos
enter
xchg
popf
stos
xchg
inc
out
sarb
popa
push
mov
mov
mov
or
gs
jbe
xlat
sbb
sub
xorb
lcall
imul
and
inc
pop
sub
add
mov
rcl
xchg
dec
dec
pop
inc
fisubl
sbb
jae
lods
std
das
ret
leave
sub
and
repnz
rcll
pop
pushf
daa
aam
sti
das
jge
hlt
xchg
mov
test
adc
pop
addr16
mov
mov
in
or
sub
dec
jno
add
mov
adc
push
and
jl
leave
jg
ss
xchg
pop
cltd
popf
sahf
jmp
fsubrl
mov
pop
clc
rolb
repz
iret
loop
pop
leave
ret
push
mov
sub
addl
push
adcl
push
push
andl
push
lea
push
adcl
push
subl
call
call
andl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
movl
mov
mov
xor
or
mov
add
subl
mov
mov
movl
test
movl
je
subl
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
imul
mov
orl
add
sbbl
jmp
jecxz
cmp
sbb
filds
push
cmp
negl
bound
out
add
out
movsb
fdivs
push
or
pop
xchg
in
sub
sbb
mov
adc
push
daa
daa
movsb
push
fadd
das
das
xchg
rcrl
cltd
xchg
sbb
out
push
or
ds
pop
fistl
cltd
popf
dec
add
pop
dec
push
inc
je
iret
sbb
push
jl
push
cmpsb
arpl
push
pushf
pop
cmp
inc
es
insb
sub
and
in
adc
jg
push
jle
sti
cmpsl
daa
fwait
jbe
outsb
inc
sbb
ret
rorl
xchg
cmp
or
sysenter
dec
enter
dec
sti
hlt
adc
cmp
cwtl
sbb
push
test
xlat
sbb
sarl
mov
dec
and
push
xor
cs
andl
mov
ret
mov
xlat
shrb
cmp
xchg
fisttpl
movl
cmc
and
mov
int3
popf
mov
lss
push
jbe
adc
add
out
or
sbb
ret
das
inc
sti
adc
inc
xor
inc
js
adc
xchg
xor
xchg
popa
pop
cmp
dec
popa
out
mov
dec
xchg
pop
shlb
out
jge
loop
stc
idivl
pop
ja
lods
sbbb
and
add
popa
or
call
mov
mov
cmpsb
mov
inc
inc
mov
dec
xor
mov
imul
xchg
jmp
lret
es
push
clc
outsb
enter
pop
rcrl
mov
inc
in
repnz
pop
imul
orb
xorl
clc
push
xor
add
dec
mov
test
loop
jge
mov
dec
lahf
inc
cmpsl
or
push
orl
in
inc
je
lods
jo
xor
mov
out
jo
pop
mov
lds
scas
sub
fwait
mov
add
out
dec
cmc
mov
jne
xchg
aad
vpcomud
adc
fistpll
test
sbb
in
mov
test
push
fdiv
cs
bound
mov
mov
cmpsb
rep
xchg
loop
mov
clc
dec
insb
xchg
insl
sub
addl
outsl
int
int
sbb
push
arpl
addr16
shrb
xor
mov
ds
dec
sbb
pop
loope
inc
test
xor
mov
les
mov
push
out
loopne
inc
pop
push
in
arpl
es
and
repz
mov
mov
mov
mov
in
test
sbb
int3
gs
add
repz
mov
sbb
pop
sbb
mov
xchg
cmpb
push
clc
repz
xchg
out
cmp
in
jne
inc
mov
mov
pop
adc
jp
lcall
jmp
mov
mov
or
ss
data16
lds
test
rorb
call
adc
inc
push
pop
dec
icebp
cmp
aad
jmp
mov
dec
fwait
and
add
sbb
pop
sbbb
mov
idivb
int3
add
iret
xchg
repz
push
add
jge
jecxz
enter
outsl
and
mov
popa
and
cmp
xor
jle
sub
xchg
sub
or
xor
or
add
and
pop
xchg
jl
dec
push
aad
out
jbe
fcomps
xchg
pop
xorb
dec
out
cmp
xor
jmp
push
push
xor
int3
push
mov
mov
dec
inc
sub
outsl
jl
jmp
ss
xor
jae
ss
pop
sbb
push
ja
pop
mov
sbb
daa
mov
in
xor
outsb
shlb
and
loope
xchg
ss
lods
lock
sbb
push
outsb
popf
jecxz
ss
mov
push
insl
jecxz
in
ja
inc
xor
pop
pop
aam
rcrb
xchg
movsb
testl
vpunpcklbw
mov
jno
shrb
movsl
shlb
sahf
xchg
lock
cltd
int3
push
fisttps
std
aad
jb
mov
sub
lret
mov
clc
jmp
aaa
mov
test
in
test
add
jge,pn
fistpll
or
inc
and
jmp
pop
arpl
sub
adc
and
pop
or
gs
lods
jne
lods
jle
jo
jg
js
cmc
loopne
mov
dec
jns
fisttpll
pop
aad
imul
dec
ret
cmp
mov
pushf
fmuls
movsl
mov
adc
call
shrl
pusha
fisubl
lds
sub
call
and
sbb
cld
clc
ljmp
pop
mov
call
jmp
mov
jge
hlt
and
adc
add
push
repz
shll
inc
inc
sub
in
jns
stos
xor
sbb
adc
ds
xor
sbb
js
adc
push
push
mov
adc
pop
repnz
repz
push
dec
call
or
xor
pop
pop
jns
stc
xchg
xchg
cltd
jmp
pop
mov
test
sub
int3
dec
and
movsb
test
push
jns
inc
rcl
inc
push
sbb
fidivs
mov
push
cld
jle
pop
xchg
jnp
shl
and
lds
int
fisubrs
or
imul
jmp
or
mov
inc
xchg
xlat
pushf
bound
push
ss
sahf
xchg
mov
xor
mov
cmp
imul
aad
out
call
scas
adc
or
inc
jnp
jmp
cmp
push
sbbl
nop
and
ror
vmovntps
aas
mov
add
lcall
and
rolb
iret
xor
push
gs
jae
sti
xor
hlt
sahf
inc
jl
jno
jle
push
inc
or
mov
pop
lret
jg
fs
call
jmp
jo
mov
fsqrt
inc
in
push
stos
mov
pop
pop
not
cwtl
dec
jecxz
lock
xchg
cmp
jne
popa
xor
sub
xor
fwait
inc
pop
mov
test
lret
icebp
movsl
pop
nop
data16
nop
add
inc
movsb
xor
or
arpl
push
shrl
cmp
or
add
add
adc
popa
pop
mov
sbb
jnp
neg
cwtl
incl
or
cmpsb
stc
test
fisttps
mov
ss
inc
negb
ret
mov
popa
xlat
ffree
lcall
mov
mov
xor
lock
je
out
test
dec
sbb
ss
or
mov
xlat
mov
lock
mov
mov
popa
dec
repnz
bound
or
cmp
insl
js
add
imul
roll
xchg
repnz
mov
leave
jo
and
pop
inc
jo
adc
lret
arpl
out
loope
imul
lcall
or
mov
fisubl
arpl
lea
inc
xor
adc
enter
mov
ja
xor
push
mov
test
push
fwait
test
aam
in
sarl
inc
mov
cli
mov
push
movsl
cli
jmp
lods
cmp
push
outsl
push
or
nop
out
mov
and
cmp
scas
add
or
pop
aam
lock
in
adc
mov
std
scas
xor
push
push
mov
mov
pushf
sub
add
leave
push
mov
dec
adc
out
pop
mov
and
pop
aaa
pop
mov
cmova
cmp
mov
inc
lock
adc
and
push
cmp
xchg
out
mov
sbb
das
loopne
xchg
mov
mov
es
push
xor
es
daa
mov
sbb
add
dec
push
lods
jno
bound
fistpl
bound
push
xchg
push
inc
stos
inc
push
jbe
data16
ret
insb
in
mov
mov
sub
mov
dec
mov
jo
sbb
and
mov
cld
mov
jecxz
int3
scas
inc
or
movsl
or
stos
jo
aam
and
xor
daa
add
fisttps
rorb
push
jo
arpl
call
xchg
ja
mov
or
pusha
push
add
cmp
rorl
dec
aas
ja
and
out
mov
push
fistpl
push
fbld
push
aaa
or
in
aam
shlw
mov
imul
cmc
es
cmc
repnz
push
int3
mov
jmp
xchg
or
repz
add
xor
pop
mov
je
mov
mov
adc
mov
push
or
push
adc
popa
loope
rorb
sbb
xor
sbb
adc
movsb
cmpsb
mov
call
mov
sbb
repnz
cmp
je
dec
sub
scas
in
lahf
aas
push
mov
xchg
mov
mov
std
push
mov
sub
add
imul
imul
cmpsl
mov
push
ret
test
lret
sub
xor
test
mov
int
pop
pop
stos
push
leave
mov
add
das
inc
hlt
in
push
sbb
mov
xchg
outsb
stos
sahf
push
push
loope
xchg
sub
adc
in
loop
addr16
jle
push
pop
mov
lods
push
mov
pop
mov
or
mov
pop
adc
sarb
shll
imul
jno
xbegin
ss
aas
js
mov
adc
mov
jb
shl
out
or
pusha
aaa
out
cmp
jge
xchg
mov
jb
adc
add
or
insl
pop
mov
cli
imull
in
mov
xor
mov
aas
adc
ljmp
lret
mov
test
jns
or
cs
inc
and
mov
adc
jbe
into
xor
test
imulb
add
xor
addb
std
xor
jmp
jge
jne
mov
jmp
lock
das
fst
insb
test
jle,pt
in
mov
xchg
ja
sahf
sbb
scas
fcompl
lcall
dec
pop
aas
ds
xor
fxch
ret
xchg
shlb
mov
adc
popf
inc
dec
mov
mov
arpl
ds
push
outsl
inc
cmc
das
in
add
enter
repnz
mov
icebp
mov
push
add
leave
push
mov
cmp
mov
xor
loope
ljmp
dec
jp
jmp
and
lods
sti
and
ds
fldenv
or
loope
add
sahf
jae
add
adc
xchg
out
adc
xchg
inc
fmul
pusha
fstps
outsl
shll
mov
cmp
shr
pop
lret
cmp
pop
sbb
js
cli
ss
nop
and
dec
fwait
bound
dec
fildl
cwtl
adc
xchg
ljmp
iret
lds
lock
push
push
xbegin
or
mov
in
push
decl
popf
pop
int
stos
test
pop
mov
pusha
adc
popf
cmc
xchg
inc
pop
push
in
std
dec
jmp
outsb
xchg
lods
dec
push
lea
mov
push
loope
mov
std
xor
mov
xchg
push
loop
or
dec
or
xor
imul
dec
xor
das
out
jne
test
loope
je
xlat
cmp
loop
sti
pop
mov
adc
ja
das
adc
fsubrl
jno
cmp
loopne
mov
add
xor
ret
cmp
jne
mov
addr16
inc
sub
shlb
pop
out
jp
cmpl
orb
sahf
sahf
adc
dec
push
jae
and
testb
push
adc
movsl
sahf
in
outsl
mov
push
outsl
xor
dec
and
sbb
sub
and
nop
cmp
adc
dec
pusha
arpl
mov
add
sarb
and
int3
sub
jb
outsl
out
test
adc
in
mov
xor
es
rcrl
push
lock
pop
push
push
shrl
xor
call
adc
movsl
xor
pop
mull
mov
daa
nop
dec
jle
addr16
insb
cmp
mov
sub
das
ja
mov
adc
pop
add
and
stos
fs
lock
sub
cmp
adc
xchg
dec
xchg
sbb
mov
adc
insl
ret
adc
lock
push
pop
incb
in
es
lret
mov
addb
es
mov
jns
das
or
in
repz
mov
loope
mov
mov
scas
sbb
mov
xchg
xchg
fstl
leave
sbb
movsb
clc
jae
mov
daa
lock
mov
push
push
push
out
cltd
jbe
xor
adc
movsb
jnp
rcr
pop
pop
pop
sub
and
out
mov
clc
imul
xchg
dec
imul
pushf
or
lahf
subb
pop
xchg
jl
xchg
or
icebp
jp
sbb
cli
mov
rcrl
sub
push
inc
or
mov
test
dec
lock
test
or
push
enter
out
mov
in
and
xorb
jle
std
lret
xchg
or
jo
sti
enter
sbb
xchg
pop
inc
dec
inc
in
mov
out
jo
or
jle
leave
loopne
lods
pop
mov
pop
pop
dec
fnstsw
and
repz
dec
add
mov
inc
bound
mov
mov
leave
jge
sarb
pop
dec
rcll
sti
xchg
mov
sbb
int3
es
sbb
add
inc
orb
fiadds
ss
sub
mull
lahf
fdivrs
subl
mov
pop
jae
cmp
fwait
pop
adc
enter
xor
iret
lret
test
stos
cld
sub
sub
movsb
bound
xchg
cmpsl
adc
aaa
aaa
pop
adc
dec
leave
popf
push
cli
mov
mov
imul
dec
clc
push
in
push
cwtl
insb
in
aad
push
mov
int
mov
aam
mov
jl
or
dec
test
sbb
adc
xchg
dec
ficoml
je
add
gs
scas
test
inc
mov
pusha
pop
pop
xchg
not
cmp
push
sub
xor
ret
or
outsb
ror
inc
bound
jnp
sahf
xor
jne
inc
cmp
dec
xor
aas
ja
xchg
shl
and
pushf
adc
mov
jae,pn
daa
sub
in
jae
fidivs
and
push
loop
cwtl
mov
int
fisttpll
add
rcl
dec
lcall
jb
fstps
pushf
lcall
pop
push
fimull
mov
lock
or
les
adc
es
sbb
shrb
xor
inc
push
std
mov
mov
inc
out
jae
jge
sub
sbb
mov
xchg
sbb
cli
test
movsl
sub
jns
movsl
adc
or
cmpb
push
mov
enter
test
cmp
inc
sarl
loop
test
aam
mov
inc
pop
add
xchg
in
xor
lret
addr16
push
lret
push
dec
rolb
jb
psubw
and
into
push
data16
aaa
dec
dec
pop
push
ja
repz
pop
cmp
xor
mov
inc
xor
push
ret
stos
mov
insl
sub
clc
hlt
inc
aas
mov
fs
cmc
shll
cmp
and
outsl
das
loope
or
fwait
scas
fisubs
inc
push
inc
cmpsl
sbb
push
push
mov
in
ljmp
push
ds
inc
inc
xchg
add
inc
mov
das
adc
int3
test
aaa
mov
jl
test
fimull
jle
lods
and
cmp
imul
jp
sbb
test
stc
or
sbb
loope
fildl
xor
fildl
sub
nop
dec
fwait
sar
sub
mov
cli
lock
push
or
and
lahf
xchg
pop
fwait
xor
stos
xchg
mov
xchg
xchg
test
push
and
inc
and
fbstp
ret
cmp
scas
push
xchg
sbbb
mov
sub
or
mov
js
mov
and
rolb
lahf
pop
std
cs
inc
mov
int3
ret
and
icebp
leave
xchg
inc
clc
push
fwait
lock
into
fisubs
jecxz
stos
nop
mov
lcall
hlt
mov
jns
es
pop
mov
fsubrp
push
jmp
loop
in
insb
dec
mov
call
push
inc
outsl
mov
adc
aad
sbb
sbb
aam
shrl
push
rorl
cmp
adc
loope
cwtl
scas
ss
push
adc
pop
mov
jo
aad
mov
add
aad
add
out
das
pop
rcll
inc
aaa
xor
sbbb
roll
mov
mov
dec
pop
std
lds
adc
pushl
inc
and
jecxz
push
xchg
cs
out
lods
fistl
inc
js
push
loopne
sub
push
push
std
repnz
lock
pop
fadds
lea
add
enter
test
hlt
xchg
dec
adc
mov
dec
jmp
push
sbb
aad
aad
mov
xchg
sbb
imul
lret
mov
iret
dec
mov
jae
pop
loope
fdiv
pop
nop
stc
inc
call
rorb
xchg
mov
subl
cmp
xor
mov
xor
clc
aam
pop
xor
outsl
lahf
sarl
cld
repnz
cmp
aam
hlt
cmp
cmpsl
int
aad
int3
adc
je
mov
sub
pusha
cmpb
movsl
ds
sbb
gs
or
pop
jecxz
sbb
push
test
addl
loopne
sti
jo
inc
addr16
cmp
scas
xchg
lds
scas
outsl
in
mov
jecxz
jmp
aaa
cmpsl
inc
shr
bound
iret
call
lahf
inc
jo
cmp
lcall
frstpm(287
cmovae
cmp
xor
jb
jg
push
inc
pop
pop
cmp
aad
pop
mov
aas
jno
cmp
outsb
add
push
or
pop
dec
push
sub
popa
scas
pop
mov
fisubrl
adc
cs
popf
out
popf
in
adc
es
imul
pop
xchg
sbbl
das
sbb
or
xor
mov
cmp
cmpsb
dec
pop
lcall
mov
push
shll
rcrl
pusha
mov
jno
imull
lret
mov
icebp
jbe
mov
ret
push
adc
mov
out
je
in
cmpsb
inc
lea
cmp
push
negl
fwait
inc
lods
sbb
push
push
dec
imul
imul
in
in
sbb
daa
movsb
mov
sub
call
mov
xlat
in
pushf
and
aam
outsl
daa
int
push
sbb
scas
push
jmp
dec
insl
or
notl
mov
filds
sbb
addb
shll
and
cmpsb
jle
jno
clc
lret
js
or
xchg
icebp
and
inc
popa
loop
push
mov
dec
dec
data16
ljmp
test
push
xchg
mov
lret
mov
icebp
lock
cs
or
or
xchg
push
push
icebp
push
mov
ljmp
rcrl
data16
insb
add
rcll
cmp
mov
les
mov
sbb
add
sarl
xor
popf
cmc
inc
or
inc
sbb
adc
ror
pusha
or
mov
sbb
push
nop
pop
inc
ss
les
inc
xchg
push
adc
dec
jl
insl
xor
inc
sub
xchg
imul
inc
and
jno
jno
sbb
pushf
out
imul
je
or
mov
scas
jb
cmp
mov
jge
add
add
mov
subb
cmc
ds
std
stos
inc
cmp
in
xor
push
sub
xchg
inc
mov
xchg
filds
iret
or
inc
movb
pushf
jb
add
mov
push
sbb
add
stos
and
dec
add
lcall
imul
out
lahf
jg
inc
pop
pop
ret
sub
call
sti
jo
mov
insb
cmp
das
addr16
iret
push
js
cmpxchg
mov
and
ljmp
pop
mov
cmp
and
mov
ret
mov
testl
ret
call
xor
mov
mov
push
dec
inc
mov
xchg
cld
lahf
xor
imul
push
sub
ljmp
lods
outsb
push
call
inc
in
add
mov
add
fs
mull
cmpsl
jmp
into
inc
lea
jne
add
int3
stos
roll
push
neg
push
js
inc
test
fs
xchg
aas
cmp
test
ret
pop
and
mov
pop
dec
mov
push
cmpsb
fsub
mov
and
sbb
or
scas
push
or
push
push
aad
test
bound
out
push
or
fsubs
cltd
adc
push
push
test
adc
mov
fbld
xor
and
lds
inc
pop
pop
jmp
pushf
call
add
sub
sbb
lcall
ficoml
enter
mov
mov
jo
aad
leave
out
mov
insb
hlt
lcall
pop
outsl
lret
fldl
shll
jp
sub
dec
dec
jmp
dec
lcall
cmp
jg
out
movsb
mov
out
loop
mov
push
les
push
sti
jmp
jmp
lcall
adc
jp
mov
adc
ds
push
add
iret
jecxz
aaa
cltd
pop
lds
lret
pop
or
cmpsb
dec
cmp
cmp
and
dec
sub
mov
stos
scas
cmpsb
cmp
inc
in
repnz
cmpsl
pusha
ljmp
and
loop
nop
cmp
jne
sub
dec
or
jns
mov
sbb
mov
push
movsb
aad
shll
test
cmp
aaa
mov
imul
popa
aad
imul
lret
mov
pop
ret
enter
ja
jae
pop
mov
mov
lock
int
sbb
jb
test
pop
push
aas
in
mov
mov
gs
clc
aad
adc
push
pop
stc
adcl
xchg
and
negl
ret
pop
dec
rclb
mov
and
fldcw
outsb
std
sub
hlt
popa
dec
mov
jno
js
sbb
push
loope
push
mov
push
add
jmp
out
test
jno
xchg
xor
cmc
or
cmp
sub
repz
cmp
adcl
mov
enter
mov
add
mov
pushf
or
add
mov
adc
test
in
insl
push
test
cld
in
fwait
mov
and
arpl
pop
cmovo
sbb
gs
loopne
push
jns
jge
fisttpl
xchg
insl
xchg
cltd
push
rcl
das
adc
jecxz
das
xorl
pop
cmp
xchg
clc
test
gs
sub
and
push
enter
jp
inc
lahf
movsl
inc
int
ds
cs
xor
lea
imul
and
jg
out
and
sub
into
bound
xchg
loopne
inc
sub
and
inc
push
fdivrs
mov
clc
mov
cmpsl
push
loop
ss
hlt
xor
sbb
repnz
add
add
adc
sbb
xor
fs
pusha
inc
mov
out
cmp
jg
mov
xor
movsb
dec
adc
jmp
punpckhwd
insb
and
jmp
inc
sub
pop
pcmpeqw
dec
std
ja
sub
cs
mov
mov
gs
pop
add
adc
and
xor
mov
jne
es
daa
loopne
push
insb
mov
jb
or
adc
adc
mov
fadds
scas
pop
pop
cwtl
stos
xor
movsb
lret
xchg
mov
ud0
lods
jp
push
xchg
jg
mov
call
shr
sub
dec
inc
lds
add
das
pop
fsubl
je
sub
mov
addb
loop
pop
add
sbb
test
push
fs
cmp
out
test
fstpl
pushf
pushf
sbb
fwait
cmp
lahf
mov
loop
ljmp
aam
mov
pop
dec
xchg
enter
adcl
fistl
add
dec
das
insl
jmp
dec
push
or
movsb
jne
cmp
and
cwtl
adcl
cmpsl
xor
std
pop
push
mov
jne
mov
xor
jl
pop
add
and
sub
sbb
das
jle
subb
lret
out
cmp
jecxz
nop
push
xchg
ja
das
pop
xchg
and
inc
fs
test
fnstsw
out
mov
mov
push
popf
xor
loope
sub
das
mov
sub
stc
fsubs
mov
dec
repz
out
shlb
xor
and
add
push
xor
aad
lea
aaa
or
fdivrs
outsl
into
mov
xlat
mov
and
gs
shrl
es
test
bound
lds
sub
and
enter
call
ds
shl
cmc
mov
mov
loopne
push
xchg
fcmovne
mov
xchg
ret
loopne
pop
dec
push
je
addb
sahf
dec
pop
push
imul
mov
cmp
adc
aas
xor
fs
xchg
sbbb
and
aad
imul
pushf
lret
aaa
jns
ja
insb
outsb
sarb
out
popa
scas
inc
jbe
aas
and
mov
mov
xchg
jle
mov
adc
mov
test
in
push
insb
out
je
pop
jge
ret
dec
adc
xor
pop
lret
movsb
movl
cmpsl
stos
bound
aam
mov
jl
leave
lock
test
pop
int3
xchg
pop
dec
scas
inc
fstpl
rcl
push
mov
sbb
xchg
cli
jge
jg
adc
dec
sbb
mov
lret
mov
sub
add
in
ljmp
pop
cmpsl
and
dec
das
dec
mov
inc
fmull
inc
roll
or
aam
sbb
imul
ljmp
dec
and
insl
les
testb
or
arpl
outsb
bound
imull
clc
sub
add
mov
negl
daa
jp
into
iret
xchg
push
mov
push
loop
sub
sbb
jne
jecxz
arpl
dec
adc
mov
sub
add
mov
je
jns
pop
mov
rolb
pop
adc
adc
cmp
arpl
inc
dec
jo
mov
int
and
cmpsb
fmulp
xchg
dec
lods
pop
jne
jl
aad
aad
addr16
repz
testl
cltd
loopne
lock
rcl
xchg
mov
push
push
rorb
data16
aaa
mov
jo
loop
daa
and
rcrb
pop
arpl
pusha
jmp
mov
cmpsb
in
xorb
je
pop
aad
hlt
xor
cmpsb
pop
pop
jnp
add
bnd
cld
repz
imul
sub
aaa
mov
adc
fildll
scas
test
hlt
pop
dec
push
lcall
sar
xchg
movsb
jle
sti
test
cmp
lods
pushf
cwtl
lods
jo
jo
mov
mov
xchg
xlat
jmp
jbe
push
fidivrs
movsl
lahf
inc
push
cmc
sarb
enter
ja
cmp
outsb
or
adc
enter
sub
inc
push
test
mov
out
inc
jae
js
inc
test
inc
pop
jl
pushf
mov
push
lds
pushf
xchg
aad
jns
andb
test
sahf
inc
int3
push
inc
jne
xor
jmp
mov
jmp
jg
ljmp
jp
insb
adc
inc
rolb
addr16
cli
shlb
shll
jnp
lcall
xchg
std
xchg
jle
xlat
rcr
adcb
loope
mov
pusha
lahf
scas
dec
inc
mov
xchg
xor
push
sbb
ret
pop
xchg
int
das
xchg
push
rcll
sbb
pop
std
ja
andb
jmp
and
sub
xchg
xchg
xorb
or
pusha
clc
xlat
lods
fstpt
jno
cwtl
in
cs
gs
ret
xor
mov
filds
jns
sbb
inc
sbb
loope
mov
gs
and
jge
adc
inc
and
mov
sbb
pop
aad
lock
hlt
sbb
dec
imul
out
stos
outsl
stc
lret
cmpsl
cli
pop
pop
imul
negb
mov
xchg
pop
ror
popa
and
out
xchg
pop
jne
adc
pop
jge
cmc
roll
pop
mov
xor
xor
enter
pusha
iret
scas
mov
inc
out
pop
ljmp
cmp
and
rolb
push
mov
add
ja
or
jle
jns
lods
ja
arpl
aam
jns
gs
dec
push
cmp
jo
fidivl
jae
and
in
cmp
adc
pop
add
add
add
loop
and
jo
mov
sbb
pop
imul
hlt
daa
ja
and
or
adc
lea
js
push
orb
push
mov
sub
movsb
xor
dec
mov
and
xor
out
inc
pop
pop
sub
cld
mov
jg
repnz
and
mov
push
or
lods
mov
jecxz
sub
std
inc
fidivrs
lea
xlat
enter
mov
pop
push
mov
iret
or
xchg
test
les
mov
mov
sub
sub
lods
push
add
mov
loop
test
or
sub
inc
popf
mov
mov
adc
cmp
mov
mov
std
lcall
push
pop
leave
jge
jmp
jne
cwtl
mov
and
sbb
sub
pop
pop
arpl
fdivl
hlt
rcr
push
fisubl
lea
dec
pop
xchg
fisttps
sbbb
mov
push
push
push
push
imul
pop
sbb
adc
or
out
movsl
sar
int
cwtl
cmpb
stc
xor
xor
add
xchg
xchg
or
sbb
test
cltd
xor
out
add
es
sub
inc
fwait
and
loope
pop
cltd
aaa
xor
stos
aad
mov
mov
rcrl
gs
es
repz
adc
fdivrs
jle
out
mov
xchg
cmp
sar
sti
aaa
sbb
ljmp
adc
mov
add
adc
lret
cltd
or
push
fisubrs
enter
mov
add
mov
into
xor
mov
sub
andl
mov
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
and
xor
add
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
xor
add
add
mov
adc
mov
xorl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
push
pushl
call
cmpl
jb
movzwl
sub
mov
add
mov
sub
lea
xorl
xor
subl
xor
cmp
movl
je
xor
mov
xor
orl
add
cmp
movl
jne
addl
pushl
call
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
addl
mov
subl
add
movl
cmp
movl
je
pushl
subl
pushl
andl
call
sub
mov
xor
xor
xor
mov
mov
xor
add
cmp
je
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
mov
xor
mov
mov
addl
add
mov
sub
mov
mov
addl
add
mov
inc
mov
subl
mov
orl
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
orl
xor
addl
inc
ret
push
mov
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
add
mov
and
cltd
push
mov
add
add
adc
push
push
mov
mov
sub
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
mov
xor
xor
xor
andl
add
adc
xor
xor
cmp
jne
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
push
mov
mov
add
movl
mov
adcl
mov
xorl
add
sbbl
xor
movl
cmp
movl
jne
andl
mov
dec
mov
and
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adcl
movl
mov
mov
and
lea
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jb
xor
add
adc
mov
lea
dec
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
inc
mov
negl
xor
add
andl
mov
mov
mov
sub
and
mov
incl
mov
andl
mov
andl
add
movzbl
or
push
add
mov
movzwl
sbb
mov
andl
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbbl
add
movl
cmp
je
mov
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
mov
cmp
jne
sbb
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sbb
mov
movl
mov
sbbl
xor
addl
add
movl
mov
sbb
mov
xor
inc
push
xor
mov
mov
add
addl
mov
mov
mov
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
push
neg
jmp
mov
enter
imul
clc
mov
cmpsl
sbb
or
int3
test
push
ljmp
sub
ret
jecxz
sbb
cmc
dec
testb
out
pop
repz
call
or
mov
mov
sti
popa
out
bound
xchg
mov
mov
test
add
das
hlt
pop
and
xchg
add
shrl
rcrb
aas
rcll
jle
ss
ds
and
add
pop
jb
xchg
push
ret
inc
fs
add
push
aas
cli
sub
cwtl
cmp
dec
push
imul
out
sub
push
stos
pop
xor
push
not
xchg
loopne
cmp
pop
cmp
sub
cmpsl
mov
mov
fdivs
add
jmp
cmp
jbe
add
push
cltd
ds
cld
inc
xor
addr16
sbb
fs
mov
sarl
adc
fists
dec
inc
sahf
pop
subb
add
dec
repnz
mov
shl
add
out
cwtl
std
mov
and
jbe
or
jmp
dec
dec
push
insb
and
int
imul
idivl
jle
leave
jmp
jge
lods
xor
fst
pop
sarl
in
xor
xchg
ja
mov
int3
rcll
pop
es
arpl
sub
cld
dec
mov
adc
rolb
jl
push
lcall
add
xchg
xor
xlat
out
subb
stc
mov
jg
dec
outsb
mov
lods
fsts
test
jg
xorb
mov
sub
dec
mov
faddl
push
arpl
and
cmp
stos
or
xchg
mov
insl
xchg
xor
xchg
test
movsb
mov
cltd
dec
std
fiaddl
lods
pop
inc
ss
and
dec
push
inc
out
or
push
stos
sub
test
pop
jecxz
mov
push
lock
mov
jl
add
and
pop
dec
jo
fs
popa
jns
sbbl
mov
out
imul
adc
adc
xchg
cmp
cld
dec
xchg
mov
stc
call
pop
dec
and
fs
leave
iret
cmpb
test
push
xchg
out
dec
xchg
push
imul
mov
mov
xchg
or
add
sbb
pop
je
out
xchg
xchg
inc
ja
stos
mov
sbb
sbb
loope
or
dec
out
pop
mov
jmp
stc
ret
lret
ret
or
aad
jmp
popf
sub
xor
rcl
jge
mov
mov
mov
pop
inc
mov
ror
aas
fimull
push
dec
loop
aad
aad
jns
and
ret
xor
inc
test
fdivr
in
inc
sub
mov
cmp
mov
mov
fimuls
adc
inc
in
outsb
cmp
popa
das
mov
mov
push
mov
sti
aad
add
and
fcomps
xchg
jb
pop
icebp
fadds
leave
frstor
imul
int
xchg
nop
or
jecxz
mov
sar
nop
fadds
lods
push
cwtl
inc
popa
shlb
or
das
scas
pop
or
out
dec
in
add
sahf
cmp
int
mov
adc
push
dec
incl
sub
and
rcrb
lcall
push
lea
xchg
lcall
xchg
lods
sbb
sub
out
add
aad
mov
je
fisubrs
or
xchg
cmpsl
mov
ds
out
and
jg
fs
addr16
mov
lds
stc
call
inc
addl
stc
iret
cmpb
mov
mov
stos
dec
xchg
lods
or
sub
jmp
jns
xor
out
xor
xchg
orb
jl
rorl
xorb
xlat
mov
or
subl
cmp
jp
jo
out
fistps
adc
cmp
mov
leave
jl
cld
mov
fdivr
rcrl
pop
mov
add
push
loop
out
mov
pop
mov
out
mov
lock
outsb
or
and
lods
sub
xlat
adc
mov
or
jnp
stos
inc
sub
repz
add
fcom
push
shll
and
leave
cmp
pop
rcr
inc
xchg
adc
pop
inc
insb
sti
mov
xchg
mov
lret
rorl
add
shlb
sbb
cmp
lahf
negb
mov
fcompl
rcll
stc
sub
push
and
or
iret
jns
iret
mov
mov
outsl
int3
jae
insb
mov
sbbl
dec
hlt
aam
mov
jg
es
adc
ja
fcomp
rcl
jle
xorl
gs
lahf
cmpl
jo
rclb
adc
and
popa
rcr
adc
and
mov
stc
daa
add
loop
inc
test
push
stos
mov
cwtl
or
in
or
lret
sub
fcomi
ret
idivb
mov
inc
push
js
stos
lret
push
repz
sbb
lcall
leave
je
sub
lahf
rorl
nop
movsb
jecxz
pushl
dec
nop
cwtl
in
jp
test
fmull
mov
mov
mov
dec
ret
loope
mov
inc
dec
out
iret
mov
add
xchg
inc
es
add
frstpm(287
xor
push
lret
and
xor
sahf
std
push
mov
out
dec
mov
cmpsb
mov
stos
cmp
xor
popa
sbb
xor
sub
mov
cmpl
xor
dec
ja
dec
add
adc
insl
jmp
test
clc
clc
cmpsb
insl
mov
add
dec
loop
loopne
rcr
adcl
shll
shl
popf
stos
movsl
loop
loop
and
dec
stos
mov
sub
sbb
and
lods
lods
pop
push
push
and
mov
pop
add
push
inc
into
les
fdivp
cli
sbb
mov
into
mov
pop
test
fistpl
pop
repnz
loope
pop
lcall
mov
es
and
push
and
jg
xor
sbbb
inc
in
adc
mov
and
cld
js
sub
mov
mov
mov
sbb
icebp
aam
out
notb
jmp
adc
push
mov
push
fdivrl
test
mov
fldt
lret
cmp
sbb
cmp
mov
hlt
sub
sarl
dec
stos
icebp
jbe
leave
xchg
popa
xor
icebp
pop
push
imul
push
std
xor
mov
push
sbb
xchg
out
lahf
push
lea
out
fidivrl
gs
and
cmp
jge
add
sahf
cmp
ljmp
adc
fcmovne
add
iret
xchg
aad
inc
int
fsubp
adc
mov
add
pop
cmp
imul
aad
mov
push
mov
cltd
out
jnp
out
sbb
jo
jmp
loope
jns
mov
ljmp
mov
dec
popa
sub
mov
test
out
out
enter
sub
mov
repnz
jo
inc
jl
movsb
xorb
dec
popa
dec
adc
xor
and
int
xchg
cmp
movsb
popf
cld
nop
scas
mov
into
insb
loope
mov
mov
rcrl
call
out
jle
fiadds
push
mov
mov
xlat
rcrl
je
popf
lea
fidivrl
dec
cmpsb
mov
mov
inc
loop,pn
outsb
inc
pop
sub
sti
movsl
jg
jb
lock
and
xor
mov
es
add
hlt
fldt
mov
add
adc
push
pop
pop
cld
xchg
xor
popa
cmc
mov
bound
or
and
icebp
mov
sbb
aas
fiadds
mov
push
dec
scas
push
out
movsb
mov
fmuls
inc
loope
imul
and
and
mov
in
inc
sbb
mov
or
jns
push
xor
aad
jb
into
ljmp
aaa
nop
cmpsb
mov
mov
scas
adcb
xchg
mov
jne
bound
and
and
fisubrl
nop
repz
cmp
dec
mov
out
push
push
push
cli
jbe
mov
out
adc
xchg
pop
lds
fs
xor
push
cld
rolb
iret
cwtl
mov
mov
and
dec
jne
sti
inc
aam
in
push
out
mov
mov
and
inc
enter
imul
push
dec
dec
and
shl
xchg
arpl
call
jb
aas
or
test
out
ficomps
dec
js
cltd
mov
mov
lahf
mov
or
dec
inc
push
mov
xor
aad
ret
fiaddl
or
stos
push
clc
inc
xchg
pop
cmpb
frstor
and
cmpl
mov
out
pop
lahf
xor
mov
mov
jl,pn
aam
add
repnz
mov
iret
movsl
lahf
fwait
xchg
loope
cmpsb
rcll
daa
enter
push
inc
xchg
adc
js
fnstsw
jp
xchg
cmp
mov
pop
shlb
or
or
pop
jmp
cmp
rclb
aaa
push
test
cmpsb
ja
mov
cltd
cmp
es
jge
inc
dec
xchg
out
dec
mov
dec
xchg
pushl
bound
mov
in
int3
jp
adc
push
aam
jno
aaa
sbb
jle
pushf
jle
test
cld
iret
push
shrb
sub
mov
mov
add
pop
push
xchg
mov
mov
sub
rcl
pop
lea
aaa
repnz
mov
in
cmp
pop
xor
negb
ljmp
jle
mov
dec
sbb
mov
inc
adc
sub
je
pop
jg
adc
push
out
push
mov
test
insl
cltd
pop
jae
daa
pushf
dec
aam
es
loope
xor
arpl
int
xchg
mov
mov
or
test
leave
fsts
mov
mov
idiv
cmpsl
inc
hlt
pop
pop
fldt
insb
mov
aaa
push
int3
pop
int3
mov
xor
in
add
add
pop
cmp
jnp
push
mov
mov
lret
mov
jge
mov
sub
mov
push
pop
push
sti
sub
or
fstps
divb
mov
movsb
sub
lds
push
sbb
push
ret
movsb
cmp
decb
jns
iret
pop
iret
addr16
in
push
push
jge
data16
mov
ret
stos
mov
sarl
pop
movsb
fdivs
push
cld
cmp
pop
add
pushf
out
psubw
rcrl
dec
sarl
dec
sbb
pushf
aam
push
lods
pop
xor
pusha
dec
add
inc
fldl
out
pop
xor
xor
loop
loopne
das
xchg
dec
jl
out
sub
sub
or
xchg
out
sub
jo
or
inc
ja
movsb
and
push
and
jbe,pn
xchg
inc
outsb
sub
jle
pop
xchg
push
lea
sub
xor
call
xor
lea
jne
add
dec
mov
xchg
mov
enter
aam
jae
add
inc
push
sub
cmovg
xor
ret
outsl
fiaddl
pop
in
ret
stos
cmp
insb
gs
xor
dec
lret
ja
push
sub
fdivs
es
pop
jnp
mov
pop
leave
mov
dec
pop
jp
or
loope
cld
outsb
push
fs
sbb
leave
ljmp
push
ljmp
jo
sbb
xchg
push
pusha
xchg
xchg
iret
mov
or
jg
jle
out
cmp
sub
or
jno
rcrl
mov
orl
xchg
hlt
mov
sarl
cmp
ss
pop
dec
out
insb
fidivrs
sub
repnz
imul
adc
jge
lds
in
cmpsb
mov
jno
pop
mov
push
cmpsb
sub
stos
jg
repz
or
lods
in
jbe
in
mov
jnp
jle
scas
shl
mov
pop
aas
mov
mov
xor
and
adcb
mov
cmc
mov
hlt
pop
fildl
push
and
sbb
sar
imul
mov
imul
ret
es
pop
jbe
cli
lods
jne
jb
mov
xchg
xchg
mov
push
repnz
les
pop
adc
add
scas
adc
xorb
push
cmp
cmp
pop
cmpsb
push
mov
in
aaa
arpl
mov
inc
movsb
rol
aad
sbb
xchg
pop
jno
rol
mov
push
or
sub
xchg
dec
pop
sub
pop
mov
bnd
aad
iret
mov
out
aad
lock
lret
aam
lret
sub
xchg
cltd
divb
mov
push
sub
inc
mov
mov
mov
mov
push
pusha
in
inc
push
sub
mov
add
data16
adc
ljmp
jno
mov
xlat
mov
into
bswap
ret
fstl
ljmp
jmp
into
sbb
incb
cmp
inc
push
icebp
xchg
inc
mov
sub
out
repz
push
nop
mov
leave
xchg
jo
std
sbb
or
in
out
xchg
push
jbe
mov
stc
fildll
lods
ss
lea
test
adc
mov
in
or
mov
xor
push
jl
sub
repz
clc
xor
movsl
sub
or
xor
fsts
pop
mov
xchg
push
pop
fdivrl
dec
jmp
test
psadbw
mov
mov
jmp
nop
lcall
adc
mov
push
repnz
js
int
loop
push
int
mov
into
lcall
xchg
test
call
push
lods
xchg
loop
movb
repz
stc
push
or
gs
scas
addr16
xchg
movsb
sub
repz
sbb
inc
sub
pop
adc
jge
test
popa
gs
push
roll
xor
movsb
dec
mov
sub
test
mov
out
adc
push
mov
sub
sbb
sub
jae
dec
cmp
xor
jno
xorb
inc
leave
outsl
mov
pusha
pushf
bound
jp
sarb
jmp
push
or
sbb
in
and
add
jp
cmpsl
pop
mov
inc
dec
cs
mov
addb
mov
shrb
jnp
lahf
lret
xor
nop
fsubrs
adc
push
pop
mov
xor
movsl
add
push
cmp
jp
stos
pop
inc
std
xor
mov
jg
push
mov
lock
dec
or
add
out
fsubl
insl
mov
sbb
lcallw
in
push
rcrl
ss
dec
jl
mov
hlt
inc
xor
jno
cmc
sub
dec
dec
cmc
cmpsl
daa
sub
pop
imul
aad
or
insl
mov
mov
js
and
lods
or
jmp
dec
fucomip
cmp
mov
mov
imul
pop
icebp
cli
sub
add
cmpsl
add
aad
xor
out
scas
cmp
mov
mov
cld
gs
rolb
cmp
lods
test
sbb
xor
mov
xlat
out
adc
dec
shrb
loopne
cmc
cmpsb
mov
inc
mov
jno
or
dec
xorl
add
fmull
lods
jne
sub
sub
push
mov
test
mov
xlat
add
stc
or
aam
ljmp
iret
cmpsb
adc
test
cmp
mov
fsts
xor
add
enter
ret
mov
das
shll
fdivl
xchg
mov
adc
xchg
pop
sub
jp
pop
adc
subb
pushf
test
arpl
mov
mov
punpckhwd
loopne
dec
test
dec
mov
xor
push
adc
jecxz
lahf
jmp
popa
push
das
popa
lret
stos
push
cmp
shl
jle
movsb
loopne
lea
stos
push
call
xchg
daa
mov
push
fistpll
movsb
mov
add
outsl
xor
lret
cwtl
arpl
fbld
int
inc
add
mov
in
jecxz
into
stc
jl
mov
pop
bnd
xchg
pop
sbb
addl
pop
mov
xchg
popf
xchg
in
xor
or
jb
ljmp
ds
int3
aaa
and
je
push
cmp
fnstenv
mov
or
fbstp
sub
jb
cltd
popa
ds
push
xchg
mov
push
and
dec
jne
aaa
cltd
sbb
call
movsb
outsb
std
dec
ret
std
mov
aad
arpl
lret
aaa
add
fs
js
jecxz
adc
add
jno
add
push
jmp
sub
adc
lods
inc
xchg
sub
mov
lcall
push
mov
xchg
jno
inc
shrb
je
fldcw
sahf
test
push
ret
insb
loope
xchg
das
in
push
xrelease
add
js
std
jns
mov
mov
repnz
add
hlt
jmp
nop
enter
add
call
push
lods
ror
mov
out
loop
sub
rorl
pop
inc
jge
fprem
in
orl
pushf
pop
loop
lret
out
or
notb
imulb
aam
mov
leave
xchg
sub
int3
sbb
mov
sbbb
pop
mov
sbb
jbe
or
movsb
xchg
daa
test
jmp
imul
nop
mov
pusha
push
scas
lret
xor
xorl
sub
icebp
cmp
jle
stos
scas
ret
or
fucomp
in
and
jbe
fucomi
int3
push
push
mov
femms
pop
push
arpl
sar
je
inc
adc
punpckhwd
mov
addr16
push
mov
icebp
fwait
jne
xor
movsb
test
pop
sbb
js
xchg
imul
sub
lods
adc
nop
and
mov
xlat
mov
cmpsb
mov
mov
rol
into
push
icebp
daa
mov
mov
hlt
dec
fisttps
sahf
mov
cmp
mov
fiaddl
sub
ficoml
mov
outsb
loope
adc
or
or
sub
xor
push
out
adc
inc
loope
adc
lcall
negl
lret
gs
or
adc
std
mov
scas
sar
cmc
aas
mov
push
adc
mov
xchg
xchg
xlat
dec
lods
lds
inc
repnz
sub
cwtl
cmpsb
ss
mov
or
insl
ret
xchg
outsl
pop
insb
jae
adc
mov
pop
repz
fsubl
jmp
jg
jmp
imul
add
nop
sub
or
lods
mov
jmp
mov
xchg
popa
pusha
arpl
pop
xor
xlat
pop
repnz
inc
jno
insb
pusha
push
jns
and
jns
lds
and
and
add
cmpl
mov
insb
lret
nop
ss
cli
std
ss
mov
or
xchg
cmp
xchg
std
xchg
jp
inc
and
lods
inc
xchg
push
stc
aaa
sahf
sbb
decb
and
lds
push
mov
cmp
sub
fimuls
and
dec
adc
sti
outsl
stos
xor
sub
dec
sub
add
xchg
adc
fidivrs
inc
xchg
xchg
mov
adc
push
xchg
mov
pop
pusha
jg
dec
popa
fldt
push
pusha
sbb
fisubl
sbb
test
lods
fwait
sbb
cmc
xchg
add
stos
push
push
jns
push
scas
and
lock
push
ficompl
sti
pop
pusha
push
jbe
push
call
fwait
or
jbe
leave
sub
into
aam
add
push
mov
sahf
lods
out
das
pop
cmpsl
xchg
mov
lods
mov
and
or
cmp
lods
adc
jg
sahf
or
jo
insb
stos
mov
or
mov
xor
mov
movsb
push
cmpsl
lret
cmpsl
sahf
int3
mov
pop
sbb
sbb
push
dec
pusha
adc
push
fistpl
mov
jno
in
sub
pop
adc
andb
xchg
das
subl
inc
fidivrs
ss
movsl
lret
test
es
jecxz
xchg
sbb
mov
scas
int3
test
bound
mov
fs
cmp
shl
js
ljmp
xor
sub
lods
gs
or
ljmp
adc
imul
mov
xchg
mov
mov
push
sbbb
sbb
cmp
dec
sbb
std
out
sub
xchg
jle
adc
or
cmp
outsl
es
mov
andl
xchg
and
sbb
cmc
fcom
push
xor
pop
sub
jo
aaa
das
ljmp
and
jecxz
lret
lret
in
pushl
sbb
shl
xchg
xchg
mov
mov
jnp
mov
xchg
insl
xchg
inc
sbb
pop
mov
mov
or
cmpsl
sbb
mov
mov
xor
fistps
push
lea
mov
ret
in
dec
or
and
adc
sub
push
clc
aam
aam
inc
inc
aaa
pop
outsb
ja
sbb
and
pop
pushf
stc
jp
mov
inc
daa
adc
xor
hlt
pushf
sbb
int3
outsl
outsb
out
cmpps
mov
push
mov
je
arpl
rcrl
and
push
xor
cli
clc
fnstcw
push
dec
mov
data16
fcoms
add
mov
popf
mov
cmp
fmul
or
cmpsb
in
pusha
lret
push
cld
les
test
popa
push
inc
jg
daa
mov
and
add
sbb
push
cmp
inc
mov
out
inc
test
stos
inc
push
aas
jne
into
jecxz
xchg
aad
out
or
stos
clc
mov
cli
out
int3
mov
mov
dec
sahf
jg
xchg
data16
xchg
xchg
pusha
stc
pop
test
lret
fiaddl
daa
sarl
and
lea
push
fwait
pop
sub
xchg
cli
stc
adc
dec
push
adc
nop
dec
push
stc
cmpsb
add
dec
push
mov
dec
add
arpl
es
cli
aas
pop
ja
mov
cmp
repnz
push
mov
mov
mov
push
pusha
lahf
mov
cmp
inc
jmp
aam
xchg
mov
sti
dec
push
mov
xchg
push
dec
mov
fcmove
inc
sbb
shlb
or
jl
icebp
jg
mov
leave
mov
lds
mov
sbbb
xchg
pop
mov
cli
inc
mov
hlt
popl
add
cmp
das
dec
out
dec
insl
push
mov
iret
jo
mov
add
test
int
ds
dec
sbb
icebp
sti
mov
in
push
flds
inc
push
add
adc
pop
sub
push
fcom
in
in
shlb
aad
mov
add
or
repnz
pusha
das
mov
rcl
orb
xchg
je
dec
jno
lods
cmp
mov
scas
lahf
stos
mov
cmovnp
and
in
dec
cmp
add
add
mov
mov
aaa
pop
sbb
imul
ja
mov
sbb
jne
gs
mov
push
pop
addr16
loopne
lcall
adc
into
out
cmp
dec
xor
lds
push
scas
mov
jo
add
aam
jmp
int3
out
lods
mov
and
out
cmp
dec
mov
xchg
push
scas
jecxz
shr
cld
out
imulb
or
and
ficoms
scas
aad
jns
inc
mov
scas
xchg
sbb
popf
filds
stos
xor
add
sbb
sahf
jns
mov
ljmp
xchg
and
jae
xor
hlt
jg
jg
in
mov
jp
dec
negb
movsl
rolb
loop
stc
mov
cmp
ret
push
mov
cmp
add
add
and
dec
add
push
sbb
sub
adc
sbb
inc
stc
out
or
mov
push
adc
sbb
xor
adc
pop
mov
mov
movsl
mov
xchg
popa
out
dec
sti
mov
mov
sub
out
test
aas
fcmove
mov
addr16
add
int3
ret
dec
repnz
mov
scas
popa
cmc
or
lahf
push
jne
dec
cmpsl
cmpsl
dec
push
xlat
jae
clc
mov
fs
sub
jns
xor
in
aas
xor
movsb
mov
xchg
scas
cs
inc
ljmp
idiv
mov
dec
pop
out
push
mov
imul
mov
lret
shlb
dec
inc
daa
gs
cmp
xchg
push
dec
cld
push
mov
cmp
push
loope
cli
mov
pop
les
cmp
mov
es
xor
into
cmp
dec
lret
insb
mov
jcxz
adc
aam
mov
shll
lcall
mov
imul
push
push
mov
push
arpl
repnz
cmp
leave
mov
in
inc
movsl
mov
jp
dec
lret
dec
xchg
cmp
xchg
mov
xor
mov
into
inc
mov
mov
out
lods
xchg
and
sbb
sbb
mov
mov
jno
in
in
arpl
scas
movsb
lods
test
push
sub
sarb
sbb
sbb
pop
jmp
inc
jecxz
pop
lds
pop
in
or
adc
lret
inc
movsl
rcrl
addr16
cmp
leave
inc
repnz
mov
push
fwait
fwait
lret
loop
jb
insb
mov
cmc
iret
js
cwtl
fsubs
push
xor
repnz
sbb
and
or
lret
shll
lret
xchg
mov
push
pop
outsb
jmp
or
add
sbb
fs
or
mov
mov
push
mov
int
push
pop
into
mov
mov
adc
test
ret
xchg
mov
shlb
dec
enter
cmp
cmp
sbb
lock
add
loopne
mov
xor
pop
xor
mov
dec
mov
xorb
sbb
mov
loopne
sbb
pop
out
xchg
inc
xor
mov
nop
xor
push
sbb
pop
push
in
lock
icebp
iret
push
pop
jmp
cwtl
cmc
fdivr
cs
dec
pop
rcr
and
scas
jno
int
popf
push
or
repnz
add
insb
fidivl
adc
fs
lahf
inc
mov
push
jg
pop
or
sub
mov
stos
dec
xchg
ljmp
pop
jb
sbb
ds
leave
add
or
pop
fnstcw
adc
cli
into
jno
sub
gs
dec
sahf
sbb
lock
xor
dec
xchg
mov
mov
stos
mov
gs
mov
pop
in
ja
push
jle
repnz
cltd
adc
adc
loop
mov
ficoms
dec
leave
iret
fisubrs
dec
dec
cmpsb
insb
mov
and
fisubrl
dec
xor
mov
cli
addb
ret
jge
mov
and
xor
jnp
ja
mov
adc
push
xlat
mov
jl
cwtl
sbb
xchg
xchg
stc
jb
and
sbb
or
mov
and
xor
aad
pop
loop
add
ficoml
pop
sub
fistl
mov
lret
inc
aad
pop
sbb
mov
dec
or
or
sti
sub
sub
ljmp
sbb
cmpsl
rolb
add
loop
pop
mov
ljmp
sub
mov
sub
mov
je
xor
mov
push
cmpb
lock
rorl
lods
sti
andl
mov
jg
imul
addr16
xchg
cmpsb
jecxz
in
iret
xor
dec
push
imul
push
xchg
jae
dec
bnd
pop
dec
popf
rcrb
nop
js
loope
push
xor
sbb
andb
dec
and
inc
arpl
and
sbbb
or
ss
imull
add
lock
push
stos
mov
sbb
cmpsb
ss
dec
imul
push
and
mov
fcompl
mov
shrb
pop
xor
inc
lds
sahf
in
mov
push
push
lock
adc
leave
jbe
lds
iret
scas
sbb
pop
or
cli
cltd
aam
mov
mov
out
inc
xor
insb
mov
test
cmp
push
imul
bound
push
cmp
ljmp
test
jecxz
pop
and
pop
dec
bound
jbe
dec
mov
jnp
sbb
xchg
push
sbb
push
add
lret
or
pop
dec
mov
ja
add
scas
loopne
sbb
xchg
or
mov
cmpsl
js
xchg
gs
pop
das
xor
pop
stos
cmp
xchg
inc
stos
fwait
sbb
fistpll
push
addr16
or
and
mov
dec
sub
out
inc
test
iret
dec
cmpsl
scas
js
outsl
mov
pop
xor
mov
ja
into
into
dec
cli
mov
jns
sbb
sarb
imul
pop
fs
pop
lods
push
dec
jns
loop
mov
rclb
movsb
add
push
sub
mov
pop
hlt
rcr
ss
ds
and
mov
lods
adc
cmpsb
sub
pop
mov
lret
jae
and
push
psubb
es
or
push
xor
xor
or
arpl
jbe
xor
loopne
dec
in
jmp
test
sub
mov
lods
cltd
mov
test
mov
xchg
add
mov
int
repnz
cmp
push
push
addb
sti
shlb
push
push
or
mov
jbe,pt
out
adc
imul
fs
or
mov
jge
ja
cmp
inc
dec
stc
outsb
or
sbb
into
int
lcall
xchg
add
push
icebp
mov
mov
and
dec
mov
push
in
pop
aad
das
call
mov
outsl
jbe
inc
js
dec
or
xor
dec
out
adc
mov
sub
push
add
xor
xchg
mov
adcb
das
and
adc
movsl
jo
mov
arpl
xchg
cs
iret
jge
xor
cmp
aaa
int3
nop
out
out
xchg
mov
pop
jns
cmp
add
daa
fidivrs
rorb
fstl
push
int
push
add
push
sub
orb
xchg
xchg
and
scas
iret
dec
xchg
sbbl
hlt
aaa
mov
int
fisubrl
inc
jecxz
pusha
sbb
std
cs
fucomp
pop
loope
add
inc
inc
pop
or
imul
mov
or
mov
jle
mov
shll
xchg
jge
lahf
mov
mov
in
andl
xchg
mov
jge
fcmovne
xchg
aaa
or
fbld
imul
adcb
mov
or
mov
or
xor
mov
add
subl
mov
mov
mov
and
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
movl
mov
xor
add
sbbl
mov
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
decl
push
and
pop
sbbl
sub
xorl
add
movl
adc
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
mov
dec
mov
mov
addl
mov
xorl
xor
add
mov
lea
orl
mov
mov
xorl
xor
xorl
add
andl
mov
andl
lea
adcl
push
movzwl
add
mov
xor
addl
add
subl
push
mov
adcl
push
andl
pushl
addl
call
or
mov
and
mov
subl
mov
sbb
mov
jmp
cmpsb
or
imul
inc
jecxz
hlt
bound
pop
bound
sti
ljmp
xchg
mov
adc
inc
nop
xor
jp
loopne
ds
inc
hlt
jbe
adc
insb
imul
test
stc
push
mov
movsb
popf
fistl
lcall
fidivs
gs
push
xchg
mov
mov
xlat
sub
mov
clc
psadbw
and
push
mov
fiaddl
fisubs
fsub
fisubl
sbb
stos
stc
sub
in
or
push
lar
shrl
sbb
add
sub
call
dec
adc
fiaddl
adc
pop
movsb
daa
mov
aad
into
mov
dec
stos
pusha
stos
fisubrl
addb
ss
aaa
mov
sarl
mov
jns
mov
adc
ja
pop
mov
lcall
cltd
push
test
repnz
mov
jnp
es
cmpsb
dec
inc
int3
andb
lods
out
and
cmp
faddp
fwait
ret
cld
leave
adc
adc
xor
movsl
xor
aaa
lea
push
jnp
ficoml
shrb
or
lock
or
mov
cmpsl
xchg
xor
popl
movsb
imul
add
andl
push
adc
pusha
mov
push
adc
es
stos
push
push
loop
sub
sub
out
dec
push
sahf
stos
aad
ret
push
push
jge
or
enter
add
bswap
dec
sbb
aad
sbb
jge
jp
testb
movsb
xchg
mov
loope
cltd
mov
mov
ds
aas
and
mov
fadds
pop
scas
dec
test
xor
repz
out
out
test
clc
xor
ds
xchg
movsl
cmp
fdivr
pop
daa
add
mov
movsb
test
lcall
adc
sub
mov
stos
mov
mov
subb
pop
and
push
mov
lods
inc
xor
shll
or
pop
sbb
fsub
pop
jnp
xor
das
jbe
fdivrl
sub
jecxz
xchg
insl
xor
fnsave
push
mov
mov
cli
icebp
pop
out
lret
or
out
test
push
pusha
or
fs
jnp
xchg
imul
das
imulb
in
adc
push
pop
jmp
pop
add
sarl
jmp
push
inc
mov
push
jle
xor
das
lcall
or
push
cmpsl
aaa
sbb
testl
and
add
fdivrs
stc
mov
push
and
add
fdivr
push
mov
fisttps
jp
es
sbbb
lock
cltd
ret
fs
mov
mov
xlat
push
fnstenv
lahf
lods
in
imul
sub
dec
sub
aam
les
js
add
aam
inc
aaa
arpl
fbstp
addr16
and
add
xor
mov
jae
mov
mov
imul
out
cld
cwtl
mov
sbb
mov
jge
roll
lock
std
loope
jb
andl
and
leave
mov
sbb
sahf
mov
das
sub
inc
movsl
add
jb,pn
adc
cmpsl
sub
dec
fwait
jno
pop
sti
das
inc
cmpsl
mov
add
ja
cmp
xchg
clc
aam
cli
pop
adc
jp
pop
iret
xchg
xchg
inc
lods
add
sub
sahf
cmpsb
ds
adc
xor
jns
lahf
cmp
imul
mov
inc
cmp
call
inc
mov
jl
ja
inc
and
pusha
and
jge
adc
pop
sbb
fs
push
ret
jp
rolb
mov
cmp
dec
sbb
jb
jo
fs
mov
mov
xchg
inc
imul
es
adc
sub
mov
out
imul
daa
fdivrs
cmpsb
into
adc
inc
scas
gs
outsl
sub
loop
gs
ja
pop
aad
loope
xor
adc
inc
xor
sub
push
pminsw
aad
cmc
dec
cmp
adc
push
jo
inc
or
or
repnz
ret
bound
inc
test
dec
add
je
idivl
je
mov
push
lcall
sub
dec
jg
mov
sahf
fwait
inc
push
int
mov
gs
inc
jb
cmp
arpl
or
cmpsl
mov
pop
imul
popf
pop
pop
sub
icebp
cmp
movsl
sahf
mov
push
cmp
push
lret
orb
js
es
push
and
xchg
lcall
inc
fucomp
pop
mov
sub
subl
pop
inc
and
aaa
fwait
es
test
lahf
pop
mov
inc
mov
lods
pop
pusha
shll
mov
pop
out
mov
fwait
cmp
xor
or
jb
aam
nop
in
pop
testb
pop
or
repnz
fnsave
cmpsb
pop
das
into
loope
nop
mov
in
mov
pushf
xchg
inc
push
test
call
jnp
adc
jecxz
jno
and
lret
cltd
cmp
gs
ds
lea
test
or
and
shll
fwait
pop
js
fisubrs
mov
insb
jle
mov
sub
popf
hlt
call
fldl
inc
pop
stos
add
test
lret
xchg
xchg
pop
pusha
jle
mov
dec
xor
xor
cmc
notb
cmp
lret
gs
js
cmp
lods
stos
mov
pop
jno
push
data16
ljmp
in
gs
and
lea
push
in
push
shr
data16
lahf
subl
mov
or
mov
dec
pusha
jo
out
jle
rol
scas
popf
test
mov
add
shlb
jle
repz
lret
adc
xchg
or
pop
das
decl
and
sbb
jns
jmp
pop
and
xor
cwtl
popa
rcl
or
movnti
add
mov
jo
sbb
test
fisttps
nop
pop
ret
push
addl
jl
js
mov
gs
xor
fcoml
cmp
inc
enter
into
and
fiadds
aaa
adc
dec
hlt
mov
int
je
sbb
add
mov
pop
das
ljmp
add
pop
and
pop
pop
mov
lods
imul
leave
cmpl
insb
jae
test
pushf
lock
mov
loop
dec
add
adc
push
cmp
sub
or
xchg
cmp
xor
repnz
es
jp
xor
mov
pusha
or
inc
inc
pop
jno
xor
stos
popa
mov
cwtl
scas
out
add
pop
mov
jg
mov
jecxz
hlt
es
es
jne
xor
cs
cmp
jns
cltd
mov
inc
je
mulb
inc
mov
inc
xor
mov
mov
mov
cmp
sahf
ja
jmp
mov
mov
mov
into
xchg
cmc
aaa
roll
movsl
sahf
xorb
sub
jb
inc
sti
mov
lret
mov
cltd
jge
arpl
pop
dec
ja
icebp
mov
icebp
adc
cltd
ja
dec
repnz
or
jp
push
cmp
dec
jae
add
sub
loopne
popa
pop
ljmp
cmp
mov
jle
pusha
mov
mov
arpl
lcall
adc
add
sub
push
lret
xlat
mov
notb
outsl
or
fsubrs
push
in
push
fiaddl
loopne
pushf
outsb
sub
jne
daa
jb
add
aam
stc
aas
lea
ljmp
pop
push
jbe
sub
in
mov
mov
mov
insb
jns
int
push
test
mov
xor
test
mov
and
mov
jmp
cmpsl
lret
mov
test
fsubp
mov
inc
jb
mov
mov
dec
pop
fsubrp
leave
and
push
cwtl
mov
cli
ret
out
jl
and
pop
lcall
sahf
dec
lods
std
cwtl
inc
aaa
adc
inc
ss
adc
jge
or
icebp
pusha
sbb
hlt
and
hlt
xor
rcl
push
mov
imul
jmp
mov
rcl
leave
ffreep
cwtl
xor
andl
es
cmp
data16
xchg
add
sbb
adc
add
in
nop
ret
ljmp
daa
icebp
movsb
inc
cmp
je
into
out
mov
mov
sub
daa
icebp
aam
jne
fistl
mov
jg
mov
inc
sbb
loope
outsl
or
push
xchg
xchg
addr16
mov
inc
cld
es
dec
push
adc
push
pop
add
or
and
and
int
mov
xchg
ret
rorb
aaa
bound
testl
jle
jb
mov
dec
sbb
cwtl
leave
out
xchg
lods
sub
addb
adc
mov
mov
jecxz
cmp
in
mov
mov
push
and
jecxz
push
fisttpl
stos
test
ret
jno
jge
mov
mov
bound
add
push
jmp
adc
adc
push
xor
in
dec
mov
mov
inc
adc
cmc
ljmp
fs
fidivl
mov
mov
in
cltd
mov
fstl
outsb
inc
cltd
pop
arpl
mov
ret
daa
arpl
xor
xor
aas
out
int3
dec
pop
mov
je,pn
xlat
cmp
jb
push
inc
iret
ds
ljmp
or
dec
inc
push
out
mov
push
mov
push
mov
iret
movsb
jl
cmp
test
movsb
mov
shlb
lret
in
and
aam
dec
mov
orb
push
loope
add
cmpsl
pop
fisubl
jbe
sub
mov
pop
sub
mov
loop
jbe
xchg
shrb
ficomps
lret
adc
xchg
dec
test
in
ret
or
xchg
fiadds
xchg
xchg
fwait
push
inc
adc
lcall
and
lret
fidivrl
mov
test
mov
fnstsw
pop
test
mov
sub
jmp
inc
icebp
xchg
push
or
aas
aad
out
mov
test
and
xchg
add
jmp
sysenter
mov
fsubrl
rcl
out
inc
cmp
adc
add
xor
hlt
push
cmp
repz
lods
cmp
xor
mov
pop
jge
popa
inc
loop
cmpsb
push
push
into
sub
aaa
test
loope
dec
mov
xor
lret
mov
inc
movsb
pop
mov
test
movsl
mov
dec
inc
vpcomud
inc
mov
clc
jl
nop
ret
add
push
push
inc
pop
ss
sti
cmc
lock
sbb
arpl
daa
ret
xchg
mov
mov
pop
mov
lahf
lret
leave
or
pop
mov
or
pop
cmp
testl
cmpsb
or
sahf
dec
repz
mov
mov
movsl
jbe
push
xchg
lds
popa
movsl
aad
aad
xchg
push
pop
daa
cmc
addb
fxch
outsl
xchg
sub
sti
test
or
es
xchg
lods
push
test
fucomp
into
jbe
divb
ficoms
cmp
xor
out
add
lock
nop
mov
jecxz
clc
out
dec
ficoml
xchg
push
pop
and
dec
sbb
gs
iret
mov
push
adc
or
push
loop
cmc
shr
cmpb
sbb
cltd
xor
and
lret
and
int3
incl
and
jmp
jbe
scas
repnz
push
mov
mov
push
dec
call
nop
add
loopne
fcoms
aam
cmp
imul
mov
adcb
xchg
repz
out
dec
ja
in
sbb
int
pop
jns
loop
jae
stc
cmp
lock
mov
test
in
mov
mov
inc
in
cmp
xor
pop
aaa
mov
mov
cmpsl
push
mov
aaa
call
adc
mov
sbb
lods
or
xchg
mov
add
lods
mov
mov
mov
stos
adc
mov
jbe
int
sarb
mov
out
xchg
mov
or
jb
push
rclb
das
fwait
ret
mov
cmc
jg
add
xor
shlb
sub
repnz
sub
adc
bound
lea
or
xor
shll
pop
mov
mov
imul
mov
cmp
inc
mov
xchg
xchg
gs
sub
aas
push
aam
mov
cmp
xor
out
rolb
cmp
dec
out
jmp
push
ficoml
leave
xorl
cmp
push
sub
jmp
faddl
push
dec
dec
shrb
cmp
repnz
or
loop
sub
xchg
cwtl
push
clc
adc
push
sbb
jmp
jmp
fwait
aad
addl
mov
out
mov
aam
stos
cmp
lret
cmp
int
cltd
jns
movsl
ret
inc
mov
js
imul
cmp
movl
sbb
loop
xor
in
mov
sbb
out
inc
rolb
jle
daa
sbb
test
sti
daa
lea
inc
push
stos
mulb
mov
xchg
cltd
xchg
mov
pop
adc
test
jae
jb
push
enter
movsl
fcompl
mov
lret
pop
add
mov
nop
and
js
jnp
inc
dec
cmp
cmpsl
mov
std
mov
adc
lret
clc
mov
jle
cltd
inc
in
out
push
lahf
add
repnz
pop
aad
loop
addr16
lahf
pop
mov
add
scas
jmp
inc
mov
push
daa
inc
jne
pop
aam
mov
movsb
popf
outsb
push
mov
pusha
lcall
add
addb
push
arpl
repnz
in
xchg
xor
sbb
jmp
jl
dec
popa
pop
sbb
lcall
fnsave
in
inc
mov
stc
push
addb
lds
int
push
cmpsb
jecxz
jmp
pop
pop
jp
mov
inc
cmp
jp
ja
and
mov
add
int3
stos
jns
mov
push
cmpb
jle
mov
pop
imulb
push
mov
pop
insl
pop
rclb
jg
sub
dec
jo
jecxz
sbb
aaa
lahf
mov
fldt
sbb
lcall
fs
nop
repnz
push
imul
cmpl
mov
mov
jecxz
out
mov
dec
jne
jo
pushf
lods
in
test
jno
lea
sbb
mov
cmpsl
adc
lahf
sbb
adc
cmp
out
push
jle
aam
inc
jae
and
sub
pop
mov
mov
jb
stos
pop
cmp
xchg
jmp
or
jbe
outsb
out
sbb
mov
in
xchg
cmp
push
adc
push
jecxz
jg
sti
pop
sarb
jp
xchg
jno
lods
mov
mov
and
push
xchg
and
xlat
cs
mov
jbe
add
loope
dec
dec
adc
lods
mov
mov
test
mov
sbb
pop
mov
cld
dec
cmc
adc
nop
repnz
and
mov
xchg
and
mov
rcl
and
xchg
mov
and
inc
inc
push
insl
dec
xchg
push
sbb
pop
and
out
insl
dec
dec
insb
out
icebp
cmp
insb
xor
pop
adc
cld
or
pushf
pop
jne
sti
cmp
dec
xor
adc
ret
adc
aam
pop
lcall
cmp
dec
lock
inc
popf
sti
cmp
push
mov
fistpl
mov
js
out
aam
int3
jmp
xor
add
sbb
adc
jp
fistpll
jnp
sbb
in
xor
call
mov
sbb
insl
and
sbb
sbb
mov
dec
je
sbb
nop
les
shlb
stos
inc
aam
inc
dec
sub
mov
xchg
leave
rcrl
mov
je
shlb
cmp
add
push
aaa
jmp
adc
fldcw
jb
cmp
xchg
std
jo
xlat
movsl
or
jle
stc
xchg
sub
fmull
pushf
fwait
add
mov
sub
jge
in
faddl
adc
push
add
mov
je
mov
hlt
out
std
jmp
jno
jo
sub
fisubrs
and
or
call
push
push
and
push
sahf
je
out
jns
mov
and
in
addr16
jge
mov
mov
dec
jg
jae
aas
xor
add
sub
ja
add
jge
push
aas
mov
xor
or
add
cs
sub
or
pop
addr16
cld
out
lret
sbb
cmpsb
and
pop
stos
and
push
inc
xchg
jl
push
call
sub
popa
sahf
pop
roll
mov
mov
mov
pop
insl
iret
inc
test
push
fidivl
inc
rcrb
mov
ljmp
insb
loope
add
pop
mov
cmp
adc
aaa
xlat
sub
jge
xlat
into
int
jge
add
or
fisubl
loop
dec
fnstsw
jb
inc
jl
nop
insb
fs
in
inc
jge
sarl
push
movsl
xchg
addr16
add
mov
scas
xchg
inc
sbb
add
adc
xor
sarb
xchg
adc
mov
sub
dec
subb
mov
mov
ss
push
scas
ficoms
pop
jecxz
aad
pop
push
ja
outsb
add
outsb
dec
in
dec
jne
mov
movsb
dec
cmp
xchg
js
movsb
aad
or
sub
pop
hlt
filds
add
add
mov
lock
sar
inc
sub
dec
in
mov
mov
mov
xlat
mov
cmpsb
cmp
inc
aas
jns
es
add
jo
inc
pop
and
test
push
mov
sbb
mov
shll
cmc
add
cmpsl
icebp
jg
mov
mov
jmp
loop
iret
push
movsb
adc
xor
xchg
adc
mov
pop
add
sbb
lea
shr
jb
ret
imul
sbb
imul
or
push
mov
outsl
xchg
adc
mov
adc
repnz
int
lock
ss
loop
mov
sbb
imul
dec
std
dec
lahf
or
cmpsl
pop
jle
test
cwtl
jge
scas
pop
adc
in
dec
dec
jp
sbb
jae
push
fstpl
and
cld
or
xor
adc
adc
pop
pop
lds
xor
cmpsb
or
cmp
and
mov
in
jge
mov
lret
xlat
cmp
inc
in
adc
shll
push
sub
das
adc
test
mov
push
fstps
push
cmp
mov
sbb
jne
mov
mov
push
jb
movsl
lret
jle
idivl
fistl
cmp
xor
xchg
push
lock
xchg
test
imul
sbb
fsubrl
mov
iret
and
stos
shrb
and
xchg
sbb
mov
cmp
fs
gs
in
add
shrl
testl
cmp
nop
pop
outsl
dec
mov
add
push
sbb
inc
jno
ljmp
jae
js
jp
dec
aas
test
jno
cmp
cs
mov
lock
push
sarb
inc
jg
fdivs
imul
or
pop
dec
test
movsl
out
sysenter
inc
movsl
cmp
and
dec
inc
insl
ljmp
mov
lret
add
dec
xchg
lods
add
mov
mov
popf
loop
iret
cli
in
dec
sub
sbb
mov
fcoml
ja
xchg
fs
dec
insl
fildl
out
jae
popa
bnd
xchg
cmpsl
sub
nop
ds
or
or
or
inc
jmp
inc
jnp
rcrb
test
push
lods
fnstenv
jg
pop
sbb
push
dec
fldt
push
imul
adc
fnsave
in
ret
pop
flds
in
push
sbb
cmp
gs
pop
inc
add
mov
adc
add
add
dec
pop
aad
data16
mov
outsl
cmpb
add
int3
fs
je
and
sahf
mov
jmp
lods
push
fidivs
rcr
sbb
adc
xlat
mov
and
jbe
fucomi
xchg
dec
push
adc
in
mov
ret
rorb
inc
int
push
pop
sub
out
jle
jbe
push
rorl
and
push
cmc
std
adc
test
fidivl
ficompl
call
addr16
jg
sahf
addr16
cld
fwait
dec
xchg
fld
rclb
imul
push
add
cmp
push
jle
int3
in
mov
js
loop
cmp
int
push
clc
mov
in
mov
pop
push
sbb
inc
xchg
call
pop
push
loope
xchg
or
jecxz
int3
pop
cmpsl
mov
add
addr16
cmc
pusha
mov
dec
stos
xor
add
xor
in
int
jl
sbb
mov
dec
jo
cmp
push
psrad
test
enter
mov
mov
sub
mov
jmp
add
js
ret
mov
aad
int3
cwtl
andl
cmpsb
fdivl
mov
stos
adc
or
scas
adc
fiadds
cmp
mov
cmp
sbb
les
mov
out
inc
in
mov
jmp
fs
sub
mov
cmpsb
add
sti
cmpsl
aas
xor
int
pusha
test
pop
je
xchg
jp
adc
xchg
add
add
sub
mov
pop
pop
or
mov
je
mov
sbb
add
or
cmp
inc
nop
mov
or
ja
daa
enter
incb
sub
mov
mov
add
pop
in
xor
imul
mov
loopne
push
ljmp
data16
pop
enter
jae
mov
fcoms
adc
mov
ss
mov
fldt
fs
repnz
outsl
mov
dec
xchg
fwait
lods
mov
les
lahf
add
pop
mov
loope
inc
sub
fisttpl
or
jno
rcll
in
test
out
mov
cmp
popa
and
out
push
fcoml
out
ja
aad
fisttpl
sub
sbb
pop
pop
and
push
push
add
aam
adc
adc
orb
xchg
jp
shr
mov
add
outsl
lea
popa
fdivr
push
inc
push
sub
pop
stc
out
ljmp
mov
mov
stc
inc
cmpsl
or
dec
ss
pop
int3
test
outsl
xor
or
test
mov
push
sarl
daa
xor
or
inc
in
imul
adc
push
imul
add
popf
cltd
pmaddwd
inc
jmp
or
or
out
sbb
popa
and
fcompl
xor
sbb
pop
loop
imull
or
movsl
xor
lahf
mul
leave
js
pop
add
mov
ds
jmp
adc
fdivrl
in
test
and
xchg
fs
add
or
pusha
push
adcb
jne
dec
icebp
ljmp
adc
jbe
cwtl
das
repnz
mov
testb
mov
cmpsl
jno
aad
cmp
imul
stos
sub
lret
movsb
call
mov
outsl
ljmp
stos
ja
fcomp
stos
mov
jmp
inc
clc
inc
or
lahf
pop
jp
jmp
pop
fildll
pushf
add
test
test
nop
mov
sbb
sub
jo
dec
adcl
fnstcw
inc
rcll
sub
pop
imul
jo
insb
pop
out
shr
pop
gs
test
fstps
xchg
jle
inc
lret
sahf
inc
fmul
inc
aad
xchg
mov
xchg
shlb
subb
fiadds
adc
or
and
call
add
dec
sti
jne
push
mov
cs
lods
fsubrs
mov
mov
repnz
das
sbb
test
mov
pop
repz
cmc
sahf
add
int
cmp
inc
and
cld
inc
fidivrs
push
cld
mov
xorb
call
cmp
sub
adc
in
jle
sti
mov
adc
mull
imul
std
les
jae
cmp
inc
mov
push
enter
std
mov
mov
lret
shll
and
push
dec
inc
push
data16
rorl
or
arpl
inc
scas
sub
sub
lods
jp
inc
cmp
es
xor
fcmovnbe
lret
add
daa
lcall
and
in
inc
daa
inc
test
cmp
mov
adc
xor
mov
jno
aas
pop
stos
pop
outsb
adc
mov
push
mov
xor
shr
mov
inc
push
xor
test
cmp
xchg
jbe
xchg
mov
pop
add
xchg
adc
addr16
dec
les
iret
pop
push
leave
pop
jp
in
scas
adcb
ret
lds
addr16
mov
mov
xor
int3
mov
or
imul
iret
cmp
daa
sub
jns
ret
cmp
shrb
pushf
lock
sbb
push
inc
movsl
inc
push
movsb
xlat
mov
mov
mov
inc
test
dec
fwait
jg
mul
mov
imul
sub
ficoms
push
cwtl
test
mov
add
push
movsb
mull
mov
iret
and
ret
in
lock
in
negb
insl
xlat
ret
shl
and
movsb
push
mov
pop
cmp
mov
jns
fs
shrb
mov
subl
lock
fwait
mov
into
outsl
jns
push
movsb
pcmpeqw
in
adc
dec
jge
iret
roll
push
mov
loope
loope
lea
scas
add
push
cwtl
mov
fmuls
sub
or
pushf
cmc
inc
clc
stos
adc
ret
mov
repnz
shll
pop
mov
pop
jb
dec
daa
ret
push
pop
pop
sti
into
push
xchg
out
fwait
aam
leave
fdivl
adc
or
inc
jb
pop
jb
mov
add
mov
push
jl
xor
push
xor
loop
cltd
mov
dec
sbb
mov
inc
xchg
pushf
jl
cmp
enter
mov
addr16
ss
jns
bound
sbbl
cmp
pop
imull
adc
test
adc
inc
or
or
dec
xchg
in
outsl
push
xorb
add
adc
frstor
mov
sbb
gs
div
inc
jb
push
pushf
mov
cmc
adc
sub
decb
fcomp
or
adc
or
jl
leave
mov
dec
add
pop
adc
loopne
push
jge
shll
jle
sub
xchg
add
fistl
pop
shll
les
repz
mov
shrl
sbb
psraw
je
mov
cmp
mov
push
sub
aaa
push
imul
pop
lods
xchg
push
rclb
cwtl
mov
xchg
and
fsub
inc
mov
jg
dec
mov
xchg
fdivp
pusha
xchg
sbb
mov
jne
imul
and
push
sub
xlat
cli
cmp
inc
in
push
jle
ds
outsl
push
arpl
mov
jns
xchg
push
cmc
push
cmp
lret
jae
in
sub
jmp
insl
sbb
rcrb
repz
add
out
divl
test
dec
add
add
pushf
push
mov
mov
loop
push
pop
cmc
insb
cmc
mov
cmpsl
add
mov
addb
xchg
jnp
stos
iret
fisttpl
adc
push
inc
sahf
negl
push
inc
insb
lahf
push
or
mov
fsubrl
dec
dec
fwait
sub
push
ja
aas
ljmp
jmp
mov
sbbl
ror
cwtl
pop
adc
jmp
mov
lods
call
push
sarb
jp
jmp
mov
push
lahf
mov
ret
rorl
fists
scas
xor
test
dec
and
fistpll
mov
mov
dec
dec
cmp
and
lods
call
sarb
xor
repz
daa
dec
cmp
insl
xchg
mov
xor
jae
pop
ja
jno
adc
insl
shrb
and
scas
ljmp
fstpl
or
mov
pushf
mov
jne
addl
jbe
imull
test
lret
cmpsl
push
fstps
aam
and
push
dec
sub
movsb
mov
dec
jge
out
or
dec
push
aad
dec
adc
xchg
scas
leave
rcrb
nop
seta
cwtl
insl
cmpl
jne
in
mulb
lahf
or
out
test
xchg
cmp
or
pop
pop
sbb
int3
jb
dec
mov
lods
adc
adc
xchg
or
add
add
cmp
mov
lods
adc
repnz
add
and
adc
cmp
cmp
mov
cmpsb
cmpb
dec
test
mov
dec
sbb
subb
mov
jo
pop
mov
dec
pop
seto
sbb
pop
xor
rclb
sub
fistpl
inc
mov
lret
adc
adc
or
pop
rcl
add
das
out
cli
adc
jbe
xchg
push
xchg
push
jmp
in
xor
add
ds
push
sbb
cmp
sbb
test
and
sub
xor
in
mov
sahf
inc
xchg
jl
jge
inc
hlt
pop
inc
ficomps
jecxz
sbb
push
and
push
and
push
lahf
test
stc
icebp
xchg
nop
out
jle
roll
test
ljmp
push
ret
adc
std
leave
xchg
out
add
and
cld
xchg
mov
pop
fnstcw
add
xor
dec
push
mov
mov
iret
adc
insb
add
mov
push
push
mov
xchg
mov
mov
mov
addr16
loope
xchg
xchg
test
mov
inc
cs
fwait
dec
ss
scas
rclb
cmp
mov
jnp
mov
xor
sti
jmp
in
andl
mov
push
int3
in
add
cmp
scas
xorl
or
push
push
sbb
inc
sbb
adc
xchg
jl
inc
sub
jecxz
add
cmp
aaa
cmpsb
mov
sbb
mov
ss
dec
or
xor
adc
pop
cmp
adc
xor
cwtl
dec
xor
dec
lock
add
pop
shlb
mov
pop
ret
jno
cmpb
mov
int3
add
in
jbe
mov
jp
out
addr16
mov
jge
repz
xlat
add
lahf
pop
add
std
mov
push
jmp
add
xor
addl
mov
add
jmp
sub
lea
mov
mov
mov
add
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
mov
and
mov
not
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
pushl
push
pushl
call
xor
add
dec
mov
jmp
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
jmp
and
scas
jecxz
arpl
jns
cmp
sahf
mov
push
pop
shll
or
bound
add
hlt
ret
inc
sub
jg
stos
aaa
inc
inc
adc
out
cld
cmc
rcl
sbb
push
dec
inc
shlb
sbb
dec
xor
inc
cmp
fcom
jno
shl
mov
xor
jg
mov
adc
ret
movsb
call
clc
movsl
shlb
xor
adc
pop
cmp
out
rol
pop
in
cmp
inc
out
jecxz
sub
push
je
fstl
xchg
in
or
test
cld
fs
sbb
lahf
pop
pop
dec
jne
fistpl
jae
cmpsl
repnz
xor
xchg
test
daa
mov
xchg
cmpl
cmpsl
cmpsl
nop
mov
lret
xchg
mov
inc
add
fdivrs
out
mov
mov
mov
loope
div
push
out
pop
and
sub
mov
and
das
mov
mov
call
xor
mov
push
in
addr16
popa
pop
xchg
pop
pop
or
int3
popa
int
and
jbe
cltd
fldenv
inc
imul
stc
cmc
sub
mov
iret
jmp
mov
mov
jo
rol
pop
cli
inc
lret
jmp
cmp
dec
and
and
mov
insb
xorl
dec
dec
aam
xor
es
shrb
in
ret
in
mov
mov
sub
and
or
adc
adc
shlb
sub
fcoml
sbb
aaa
stc
pop
in
mov
add
int
dec
or
fimull
out
arpl
push
inc
fdivrs
test
mov
lds
adc
repz
mov
lods
xchg
inc
loopne
adc
pop
jo
mov
ss
mov
pop
outsb
shlb
sbb
aad
mov
dec
popa
stc
lahf
mov
mov
xchg
pop
test
mov
jnp
sbb
add
sbb
mov
in
out
sbb
inc
into
and
std
cltd
test
mov
mov
sbb
rclb
in
pushf
and
and
jmp
adc
dec
insb
sahf
pop
xchg
rclb
cmp
rclb
push
icebp
dec
push
in
mov
clc
adc
out
mov
mov
bound
mov
xchg
movsb
xchg
in
fistps
not
rol
je
rcrl
insl
and
jle
ljmp
xor
mov
lret
in
xchg
adc
sahf
fsubl
or
rol
repnz
cmp
xchg
fildl
adc
and
dec
lahf
xchg
xchg
jp
leave
sub
insb
dec
in
mov
leave
fstpl
adc
mov
mov
lods
mov
clc
stc
icebp
jmp
divl
cltd
jg
and
fmull
xchg
mov
cmpsb
fstl
sti
lock
xchg
call
adc
push
int
inc
sbb
inc
scas
sub
sub
inc
xchg
add
jg
push
sub
movsl
xchg
cmp
mov
and
add
dec
ror
test
aaa
jns
mov
je
add
ljmp
lcall
xchg
dec
pop
cmp
loopne
sbb
pop
push
mov
aad
aaa
clc
mov
into
jg
mov
cmc
mov
inc
mov
nop
push
ret
repnz
xchg
scas
adc
mov
adc
movsb
mov
xor
sbb
arpl
push
loope
dec
xor
imul
jp
xor
outsb
lcall
dec
add
sbb
ljmp
cmpsl
cli
xor
cmp
mov
sub
jge
and
pop
cs
lea
and
jl
fimuls
lea
stos
ljmp
movsl
add
cmpsb
mov
pop
xor
cmpsb
adc
out
inc
or
cli
mov
lret
enter
ja
and
lods
push
mov
mov
mov
lds
push
jl
mov
and
js
sahf
mov
push
es
cmpsb
jae
or
ficoml
loope
mov
or
sbb
movsl
xor
icebp
popa
hlt
daa
in
mov
arpl
call
sbb
add
scas
imul
daa
lret
mov
pop
mov
js
jg
pop
xor
xchg
cmp
and
je
jecxz
cmc
dec
inc
cwtl
ret
mov
je
cmc
out
ljmp
inc
fsubrl
dec
or
add
cli
shll
fiadds
insb
stos
mov
add
push
call
push
xor
jg,pn
loope
xchg
into
nop
and
movsb
jmp
movsl
aas
sub
xchg
mov
pop
dec
and
je
lahf
jp
xor
and
dec
and
popf
mov
sti
stos
cmc
push
mov
shlb
or
in
jne
mov
jbe
cmpsb
aaa
insl
leave
xor
dec
xor
les
and
int
sub
or
xchg
lods
mov
mov
or
mov
cmpsl
int3
in
push
div
paddusb
es
ljmp
xchg
ja
jmp
cwtl
jle
xchg
test
scas
add
icebp
pop
sbb
popa
xchg
ja
and
dec
ret
loopne
fidivrl
ss
mov
lods
pop
xor
mov
mov
push
xor
jbe
add
dec
aad
sub
stos
out
mov
insl
inc
sbb
xor
inc
pop
insl
fcmovu
outsb
xchg
xor
out
test
call
push
push
xchg
das
cmp
je
stc
addr16
mov
test
sbb
cs
enter
inc
cmp
dec
cmpsb
repz
push
push
adc
add
in
jo
add
movsl
in
inc
popf
xlat
dec
cmp
jle
fwait
pop
jbe
lods
mov
jo
fiadds
jno
xor
cmp
push
imul
dec
popa
mov
pop
lret
or
pop
cs
inc
shrd
inc
inc
inc
add
jns
addr16
mov
test
mov
xor
lds
lds
adc
lea
imulb
sbbb
dec
pop
scas
and
dec
fildl
pop
pushf
fcoml
dec
out
xchg
popf
insl
popa
sbbb
lods
cld
fs
push
dec
stc
lahf
mov
cmc
mov
ffree
xor
pushf
in
lock
sbb
push
mov
test
js
sbb
andb
jp
in
cmpsb
bound
push
xchg
mov
jno
scas
jp
int3
imul
pop
adc
outsl
xchg
das
xchg
or
xor
and
pop
inc
orl
call
sbb
dec
mov
mov
adc
lret
push
shrb
dec
ss
or
pop
pop
lret
les
lret
test
ret
push
mov
mov
lcall
lcall
mov
movsl
adc
jmp
addr16
xchg
fnsetpm(287
cmc
and
js
lahf
or
jl
insb
add
add
inc
dec
hlt
dec
sbb
inc
add
scas
cmp
fimull
sahf
loopne
test
and
push
or
sahf
xchg
out
cld
sbb
hlt
fadds
mov
jl
adc
inc
jp
or
pop
fnsave
setae
leave
testb
add
subb
je
mov
push
cltd
imul
mov
hlt
mov
imul
cmpsl
or
add
and
add
fsubp
add
jno
jl
jbe
daa
jne
push
aas
mov
out
mov
adc
movsl
sahf
es
inc
and
or
lods
scas
adcb
adcb
cmp
clc
xchg
std
pop
ficoms
xor
jne
lea
sub
xchg
xchg
dec
lds
imul
lea
int
add
push
lods
sbb
push
nop
sbb
or
mov
push
stc
dec
jnp
ret
sbb
mov
sti
sbb
or
imul
cmpl
push
jle
lret
test
xor
sub
sub
mov
lea
xor
cmp
daa
push
das
cmp
pop
cmpsb
lock
pop
push
cmp
mov
inc
data16
cmp
push
xlat
mov
adc
mov
push
cltd
and
fistpll
xchg
inc
test
out
andl
cmp
bound
sbb
xchg
movsl
stos
dec
data16
mov
cmp
daa
mov
sbb
jo
mov
int3
xlat
and
paddq
xor
or
ljmp
out
dec
xor
xchg
pusha
fs
mov
xor
jp
mov
xor
xor
lret
cs
sbb
push
test
rcll
mov
lcall
fmulp
add
cmp
mov
arpl
fs
inc
fildl
adc
xchg
cmp
test
add
xchg
outsb
and
mov
add
cmp
rclb
jne
or
inc
dec
loope
and
js
out
add
mov
popf
insl
jo
inc
mov
mov
into
sbb
cltd
push
mov
sub
mov
and
inc
push
idivb
imul
arpl
inc
out
fimull
mov
or
cmp
cltd
inc
and
loopne
mov
pop
xchg
nop
ror
jmp
sbb
push
jns
pop
ror
jnp
cmpb
mov
pop
outsb
or
imul
bnd
cmp
pop
stos
cmp
test
loopne
and
enter
outsb
popf
push
jns
pop
js
xor
lahf
mov
test
into
push
insb
fmuls
fwait
push
sbbb
dec
sub
leave
out
add
arpl
pop
rclb
jae
push
pop
fcoml
icebp
bound
xor
lods
xor
out
lods
les
inc
push
xchg
push
ffree
pop
xchg
cmp
jle
popa
xor
sbb
dec
push
push
insl
inc
test
or
cmp
orl
je
scas
mov
pop
mov
mov
jmp
dec
cmp
adc
lcall
lds
scas
dec
jae
mov
dec
cmp
jae
push
xor
jl
aam
mov
ljmp
jno
mov
jns
les
xchg
fimuls
cmp
mov
divl
in
shll
mov
jecxz
inc
out
jg
decl
loop
push
mov
push
push
sub
cld
add
jge
lret
scas
push
popa
test
adc
aaa
cwtl
and
dec
push
xchg
out
pop
cmc
mov
std
shlb
and
inc
imul
repnz
repnz
fucomp
mov
pop
cmp
mov
inc
test
fstl
icebp
jo
pop
dec
xor
dec
aam
fstpt
cli
mov
jp
xchg
mov
mov
pop
int
jmp
aad
jg
dec
lcall
mov
dec
cmp
mov
scas
dec
jg
cmc
xor
mov
sub
subl
fmuls
popa
jo
lcall
cmp
movsb
cmp
push
mov
sub
rcll
les
xchg
cmp
lods
jmp
mov
and
pop
sub
lock
pop
jmp
cwtl
dec
xor
pop
mov
fwait
xor
inc
jno
sahf
outsl
dec
imul
mov
xor
jg
add
in
gs
lock
fildl
push
outsl
inc
dec
jecxz
add
iret
sbb
push
mov
lock
js
push
hlt
pop
push
xchg
or
cltd
xchg
arpl
aam
jns
adc
jge
fbstp
xchg
jns
iret
cmp
pop
test
pop
pslld
fimull
xlat
and
cmp
cmp
mov
cmpsb
inc
push
test
inc
jo
int3
in
sbb
pusha
add
loopne
pop
jne
popf
add
ja
es
mov
fsubl
sub
and
pusha
hlt
pop
into
mov
mov
cwtl
xchg
mov
xor
test
movsb
add
out
sub
adc
cltd
push
cmpsl
xor
mov
xorb
pop
push
mov
insl
or
push
cli
sub
ja
aas
test
pop
test
mov
test
mov
push
sbb
das
or
inc
lret
pop
mov
adc
push
dec
inc
cld
sub
cmp
push
push
outsl
and
ljmp
popf
xchg
dec
sbbl
sub
aas
adc
and
negl
nop
jle
mov
dec
lock
subb
sub
sbb
pop
sbb
jne
sbb
cli
xchg
mov
notb
sbb
out
lret
xchg
out
lahf
stos
dec
nop
cmp
jle
fcmove
or
jl
imul
mov
inc
mov
pusha
rcll
adc
pusha
dec
add
lods
sbbl
je
xlat
lods
mov
jmp
cmp
ja
push
sub
mov
push
inc
and
call
call
icebp
int
and
test
out
inc
repz
arpl
mov
cmp
repz
and
mov
adc
jle
jmp
or
push
pop
xchg
scas
push
flds
cmp
sbb
xlat
and
stos
icebp
aaa
jns
sub
cmp
in
mov
mov
sbb
mov
and
mov
push
and
push
jp
fadds
fistps
loopne
adc
jecxz
stos
mov
sbb
shr
imul
or
push
mov
push
movl
and
outsl
sbb
out
jmp
fsincos
mov
push
inc
movsl
outsb
scas
inc
adc
cmp
andl
mov
dec
inc
aad
out
lret
mul
inc
cli
into
mov
iret
lods
das
and
enter
mov
hlt
xor
and
fld
into
insb
mov
out
out
mov
add
fs
stos
and
push
adc
pop
dec
push
lret
lret
xchg
pop
xchg
pop
stos
popf
divl
lcall
in
xchg
repnz
jno
sbb
in
enter
dec
cwtl
mov
fistps
nop
les
gs
roll
and
jecxz
mov
fimuls
push
push
scas
ds
das
popa
ss
pushf
int3
add
dec
pop
mov
shrl
aaa
jg
jmp
jecxz
sbb
test
lods
int
fsubs
jae
aad
sbb
jmp
pop
fbld
push
jg
adc
insl
movsb
mov
jno
push
sarb
add
sub
push
int3
mov
jo
mov
ja
addr16
loop
jg
les
jl
pop
xor
push
fists
sbbl
mov
call
cs
cli
or
cltd
in
fmul
iret
and
fadds
or
inc
leave
dec
jb
js
jg
pop
cwtl
sahf
or
mov
gs
cmpsb
adc
jae
inc
sbb
add
mov
aaa
add
mov
int3
scas
fsts
dec
dec
push
sub
in
loopne
into
add
cmc
js
jns
sbb
rol
fsubl
movsb
and
fcompl
insl
data16
enter
movsb
xlat
push
sub
cmpsb
sbb
lods
aas
aaa
inc
add
insl
jae
or
fadd
xchg
fndisi(8087
adc
lret
arpl
xlat
mov
cmc
jecxz
les
out
jmp
fmull
jb
hlt
or
lcall
xchg
popl
jae
add
hlt
lods
daa
push
mov
call
adc
or
cli
xchg
mov
mov
or
jns
sbbb
jo
sbb
cmp
cmp
loope
xor
add
test
cld
jge
dec
popf
popa
stos
adc
rcrb
inc
cs
sbb
popf
lea
sti
xchg
insl
frstor
mov
inc
mov
lods
add
notl
bound
jnp
dec
mull
scas
inc
inc
jbe
lods
dec
ljmp
mull
adc
sbb
ljmp
movsl
shl
test
jecxz
loop
inc
test
inc
or
and
jo
mov
mov
ret
pmullw
sbb
pop
jp
mov
add
inc
or
js
adc
mov
sahf
mov
adc
idivb
sub
fldt
mov
ljmp
or
xchg
push
cmc
int3
dec
adc
pop
dec
lcall
and
cld
xor
pop
int3
push
popf
push
pusha
adc
add
ret
pop
xor
fldl
cmp
je
push
dec
mov
shrl
ss
js
lea
mov
rcll
sarb
pop
lahf
xchg
lret
fisttps
push
jns
nopl
fs
and
mov
pop
mov
dec
mov
dec
in
in
mov
popa
jb
jnp
sbb
mov
in
aad
stos
ljmp
inc
mov
jecxz
push
popa
cmp
adc
pop
cli
roll
jg
dec
in
xchg
and
mov
int
xchg
fs
mov
xor
outsb
addb
sbb
cmp
xchg
pushf
hlt
xor
out
lret
sub
and
mov
rcll
lds
movsb
mov
shll
in
ja
outsb
mov
push
loop
scas
inc
xchg
add
sbbl
cmpb
cli
xchg
lcall
dec
leave
pop
push
sahf
test
push
cltd
pop
cmp
xchg
push
pop
jae
ss
mov
fnstenv
xchg
movsl
ss
dec
dec
fwait
ret
sbb
lahf
inc
cmp
jle
or
cmp
orb
push
rcll
movsb
dec
je
push
lock
pop
jl
pop
in
fcmovnu
jg
mov
aam
sbb
adc
mov
scas
out
bound
in
adc
add
jbe
int3
es
pop
imull
roll
shrb
and
jno
mov
scas
aad
push
arpl
jno
stc
rcll
pop
xor
sahf
std
push
mov
movsl
stos
push
sub
rcrl
test
out
sarl
mov
fbstp
mov
call
scas
mov
push
jne
xchg
pop
sbb
adc
sub
mov
pushf
mov
cmp
in
in
mov
daa
sub
sbb
icebp
fwait
and
cltd
or
into
movsl
in
jne
popf
inc
stos
cmpsb
aas
cltd
out
sub
enter
pop
sub
xchg
mov
test
dec
xchg
xchg
loope
add
loop
and
jne
xchg
sub
adc
in
sar
adc
xlat
fiaddl
and
cmp
mov
jmp
xchg
lea
dec
in
and
pop
idivl
gs
mov
pusha
gs
mov
loopne
loope
and
mov
push
cmpsl
loop
mov
test
mov
dec
xor
push
and
lahf
xor
call
notl
xchg
imul
xchg
sahf
mov
stos
cmpsl
xchg
push
cmp
and
daa
and
sub
notb
cmc
test
adcl
dec
sub
imulb
sbb
xchg
and
pushl
pop
sub
add
stc
stos
pop
fidivrl
fldt
test
add
cmp
mov
mov
dec
out
sub
cld
ret
aam
test
movsb
mov
push
call
ss
inc
or
sbb
mov
xor
lret
mov
cld
imul
pop
dec
arpl
andl
cld
and
pop
inc
aam
mov
rcll
ss
aaa
test
ljmp
ds
cmp
jno
stos
dec
lcall
mov
leave
inc
or
pop
divl
dec
mov
inc
sbb
xchg
mov
sbbb
ss
movsb
xchg
xor
and
and
add
rolb
push
nop
sbb
sbb
sub
add
fs
popf
jbe
push
adc
inc
cmp
jne
mov
or
and
outsl
mov
or
mov
inc
sub
jge
cmpsb
clc
jns
out
adc
xor
cmp
movsb
sub
dec
xor
les
jb
adc
jne
ror
adc
ljmp
aam
jb
cmp
or
scas
adc
insl
loope
in
out
or
xchg
mov
test
sbb
es
or
je
loope
movsb
fsubrl
dec
fdivrs
iret
cmp
jp
aam
or
fidivs
add
lahf
rolb
shrb
imul
xchg
outsl
icebp
dec
and
cmc
dec
or
filds
push
loopne
mov
clc
fiaddl
mov
xchg
das
inc
into
stos
fdivp
mov
push
push
test
insl
loopne
dec
dec
mov
adc
push
test
lret
movb
add
aaa
mov
add
jle
outsb
into
push
test
jge
stos
out
jge
test
xchg
dec
push
hlt
add
rorb
or
lds
insl
repz
mov
iret
jne
jmp
lea
push
scas
lret
fs
popf
jle
aaa
inc
jno
or
jle
mov
mov
or
bound
mov
repnz
dec
stos
xor
push
shr
lea
enter
xor
push
add
movsl
or
lods
ja
imul
lods
jmp
inc
push
out
inc
mov
fwait
sbb
lcall
dec
fmul
mov
lahf
nop
sub
mov
xor
push
je
inc
add
pop
lds
pushf
js
push
cmpsl
pop
push
shll
das
movsl
push
addr16
add
stc
fcompl
insb
push
mov
repz
push
fsubrs
pop
imull
mov
call
in
aad
pusha
jo
test
ror
jmp
cmp
pop
add
jb
ds
lods
lret
outsl
into
mov
lods
shrb
jb,pt
cs
mov
mov
jmp
arpl
cwtl
mov
pop
xor
fldt
jle
xor
add
cmpsl
pop
or
inc
ror
jno
sub
cmp
mov
and
outsb
aas
sub
dec
out
mov
and
sbb
mov
ds
ret
call
iret
cmp
out
inc
data16
fucom
push
xor
out
pop
daa
lds
leave
lcall
jb
int
outsl
jge
cmc
sbb
jge
enter
movsb
or
pushf
movsb
lds
ljmp
out
jo
dec
je
gs
pusha
inc
mov
or
xor
sub
fcomps
out
mov
iret
mov
mov
arpl
arpl
xor
out
mov
inc
es
dec
ficompl
mov
pop
cmp
or
das
notl
or
push
lahf
test
fsts
and
gs
dec
xchg
std
push
dec
das
movsl
pop
outsb
xchg
xor
rol
mov
das
data16
roll
pop
hlt
cmp
inc
dec
push
cli
inc
xchg
fwait
sbb
xlat
repnz
lods
or
daa
sbb
push
pop
shl
in
insb
out
push
or
add
loopne
dec
fcom
in
lods
sub
pop
adc
xor
fsubs
mov
movsl
dec
cmpsb
jp
cmp
insl
lret
mov
pop
and
sub
std
inc
inc
outsb
testb
leave
dec
cmpsb
add
insb
mov
lret
xchg
xlat
in
sbb
pop
jl
sub
jnp
cmp
pop
mov
sub
xor
dec
push
inc
xorb
cmp
jno
sub
mov
ret
push
xchg
lods
call
jne
stos
punpcklwd
fldenv
pop
bound
mov
imul
jo
stos
lret
lret
adc
ja
les
pop
in
mov
inc
lahf
bound
dec
inc
cmc
aaa
inc
pop
fcompl
sbb
add
push
mov
arpl
and
xlat
in
int
push
and
xchg
and
jne
lret
adc
xchg
lret
stc
pop
add
xchg
add
mov
pop
sub
mov
push
mov
and
xor
out
and
leave
mov
sbb
out
shlb
or
fs
outsl
push
loopne
and
call
sbb
insb
xlat
scas
or
sub
cmp
xchg
int
mov
adc
push
push
icebp
jmp
push
rcrl
mov
movsb
stos
mov
pusha
xor
sbb
sub
fsubr
add
daa
repnz
lods
mov
mov
test
add
insb
push
cmp
mov
push
cmp
outsl
outsl
xchg
add
add
bound
stos
mov
loopne
sub
xor
dec
leave
nop
xchg
aad
aaa
cmc
lea
adc
and
cmp
jne
pop
testb
xlat
and
repz
incb
inc
pop
orb
sbb
dec
ds
xchg
cmpsl
mov
cmp
jge
add
call
cmp
adc
mov
jbe
cltd
enter
mov
push
mov
add
out
pop
inc
lret
jbe
cmp
out
movsb
pop
jg
xor
shrl
bound
cwtl
ja
push
je
jnp
dec
lret
repz
cmc
rcr
pop
nop
test
data16
jnp
pop
jp
mov
adc
js
mov
inc
aam
dec
sub
lock
mov
pop
cmpb
add
xor
cmp
dec
xchg
data16
or
lock
mov
pop
push
add
or
bound
ficomps
push
mov
movsl
dec
pop
sti
shl
cmpsl
sti
add
add
and
sbb
jmp
cld
flds
aad
mov
xchg
sub
dec
xchg
dec
les
enter
sbb
cli
dec
and
cltd
pop
mov
imul
mov
mov
sbb
cli
ljmp
pop
push
and
jle
in
mov
adc
cltd
out
xlat
mov
mov
push
test
fnstenv
add
sahf
jle
push
icebp
leave
jl
adc
and
push
jp
xlat
lret
add
cs
adc
int
mov
movsl
scas
sub
cltd
mov
inc
cmc
mov
xor
sbb
idivl
loop
imul
or
mov
jl
lds
sbb
xor
pushf
lock
sahf
jle
push
cmc
inc
add
lds
imul
aaa
xchg
decl
jnp
mov
negl
test
lret
cwtl
jle
aam
and
xchg
fstl
outsl
and
inc
mov
ret
loope
icebp
out
xor
jns
inc
sbb
and
push
jbe
mov
test
movsb
mov
xchg
push
fiadds
xchg
shlb
jnp
and
ljmp
pusha
sub
insl
mov
imul
cmpsb
push
pop
sarl
pop
mov
cmp
test
sub
inc
orl
fcmovb
or
mov
sbb
test
pop
xchg
dec
push
and
xchg
xor
sti
pop
jl
push
pop
sbb
into
jmp
xor
je
or
dec
jo
shlb
push
sbb
sub
or
jns,pt
sbb
imul
out
mov
jecxz
mov
out
sbb
test
sarb
lea
add
shll
out
fiaddl
xchg
xchg
les
das
xlat
and
bound
inc
jo
push
sbb
jg
imul
xchg
xchg
into
jo
popf
dec
cmpsl
dec
cmp
sbb
pop
ret
adc
lock
lock
push
lea
popf
cmc
leave
or
inc
jbe
das
ret
inc
adc
xor
faddl
pop
test
push
js
jbe
jl
jnp
pop
popa
mov
mov
push
cmp
inc
xchg
mov
sbb
or
in
lret
and
dec
jecxz
aaa
dec
insl
xchg
sbb
sub
lcall
add
outsb
outsb
jo
roll
mov
or
xor
mov
test
insb
lods
iret
mov
mov
inc
ja
inc
mov
push
jnp
je
push
cmp
cld
sbb
mov
push
sbb
adc
mov
and
inc
mov
mov
inc
pushf
mov
xor
cmp
cmp
xor
ds
out
cmp
cmp
mov
loope
cld
push
cmp
adc
mov
and
jmp
mov
dec
mov
adcl
jg
test
insb
movsb
iret
pop
outsl
inc
sbb
dec
push
sbb
iret
xchg
out
stos
add
jle
sub
dec
sbb
dec
repz
jle
lret
loopne
hlt
sbb
sbb
cs
dec
or
jl
pop
and
pop
aas
add
stos
push
jge
pop
jb
mov
cli
pop
fndisi(8087
and
jle
jno
ss
cli
adc
rcll
out
dec
insb
cwtl
push
out
fildl
aaa
sbb
pop
adc
faddp
add
jg
loope
data16
into
push
outsl
jns
sbb
cmc
fimuls
mov
adc
mov
push
push
adc
shll
mov
dec
je
xchg
ja
fnsave
popl
lret
mov
cmpsb
insl
imul
fwait
xchg
xor
sub
mov
push
add
and
xlat
pop
cmp
rcl
scas
and
jo
ljmp
mov
mov
or
inc
pop
cmc
mov
lds
popf
mov
outsl
nop
mov
mov
add
xor
pushf
in
mov
pop
lock
adc
mov
add
jb
pop
push
sub
outsb
pop
pop
sbb
sbb
xor
sbb
out
ret
jge
cli
das
sub
popf
js
jg
jne
fdiv
mov
movsb
push
repnz
daa
test
xchg
pop
dec
push
fistpll
dec
fcmovu
cld
dec
cli
jo
test
mov
adc
js
inc
inc
or
out
aas
lahf
cmp
sahf
push
cmp
lods
movsl
cmp
mov
add
insb
ja
cmpl
adc
and
add
aas
sarl
push
pop
pop
mov
negl
mov
jecxz
loopne
jmp
inc
loopne
int3
outsb
sub
mov
sub
cmp
mov
stos
rcrl
mov
lcall
add
lds
dec
or
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
mov
xor
xor
lea
mov
xor
div
mov
xor
add
cmp
mov
mov
jmp
lods
jbe
loop
jmp
into
xchg
add
bound
pop
bound
dec
in
sbb
sub
push
sbb
dec
fisubrl
shlb
loopne
inc
xchg
shlb
dec
das
rcl
sbb
push
sbb
and
insl
stos
nop
sub
loop
xlat
lds
push
sbb
mov
rcll
jae
push
les
loopne
mov
cmp
aaa
outsb
jecxz
lcall
shll
or
les
movsb
js
dec
xor
data16
cmp
mov
hlt
into
test
push
das
js
push
ret
nop
inc
bound
add
jp
sbb
add
lret
push
push
nop
jnp
ror
out
dec
xchg
aam
int
scas
mul
pop
inc
xchg
test
cli
cmp
adc
das
jo
push
inc
xor
stos
jbe
es
or
ret
cmc
ja
cmp
xor
pop
sbb
xchg
push
add
inc
aaa
nop
inc
cmpsb
jb
in
add
fisubrs
sahf
lods
stc
ret
pop
fisubrl
pop
cmp
in
das
int
xchg
insl
xlat
sbb
xchg
push
fmul
sbb
push
add
xor
out
rcrl
or
push
cwtl
mov
xchg
cmc
pop
adc
xchg
arpl
iret
repz
mov
or
pop
jecxz
hlt
mov
movsb
in
sbb
cmpsl
mov
fists
mov
jno
repz
push
jecxz
dec
fdiv
xor
cmp
mov
mov
lea
inc
addr16
xchg
inc
add
dec
push
out
test
mov
or
sub
shl
std
xchg
cltd
sbb
mulb
mov
negb
jl
cmp
cltd
test
jmp
test
xorl
mov
add
out
and
mov
rcll
pop
push
or
iret
sub
cli
rcr
sub
add
aaa
divb
adc
rclb
push
mov
int
jp
mov
cmp
sub
bound
push
enter
xchg
stos
dec
test
push
adc
int3
data16
out
stos
ljmp
dec
dec
repnz
sar
fwait
inc
movsl
rorb
push
sbb
lea
push
lea
insl
push
popa
mov
sti
aad
sub
dec
and
inc
lcall
jb
fwait
subl
gs
lods
xchg
call
push
mov
out
in
popf
inc
dec
pop
jb
jae
mov
dec
adc
rorb
add
js
fildll
shll
jno
arpl
iret
andb
and
ss
sub
jns
push
fisubrs
es
aam
adc
xor
jbe
rcrl
push
fs
pop
jo
negl
or
adc
push
out
mov
test
push
inc
or
adc
cmp
cmp
or
fisubrs
insb
int
adc
call
in
pop
xchg
data16
push
jnp
xchg
lahf
sti
inc
xor
xchg
faddl
cmpb
xchg
fwait
adc
call
sub
repnz
jp
and
jl
mov
ret
sub
pusha
sbb
inc
cmpb
pop
jne
dec
shll
sbb
dec
sarb
les
fs
ret
es
popa
sbb
sti
push
popa
data16
fs
adc
cmpl
jae
lahf
imul
push
jp
sti
mov
jmp
mov
outsb
dec
xchg
clc
mov
cmp
insb
mov
add
jecxz,pt
push
mov
into
leave
or
or
in
jle
cmp
cltd
push
icebp
ss
in
adc
dec
push
mov
pop
sub
jo
xchg
jl
popa
insb
cltd
movsb
insb
adc
dec
push
js
fnsave
out
and
cmp
add
mov
cs
lcall
and
je
pop
sahf
and
push
ljmp
xchg
js
jp
mov
cmpsl
adc
cmp
in
roll
shld
mov
cmpsl
xchg
cmp
sbb
sub
cmpl
movsb
sub
popf
out
mov
mov
dec
mov
loope
push
xor
add
dec
leave
ret
add
sub
in
adc
pusha
cwtl
fistpll
repz
cmpsb
loope
bound
lds
mov
mov
cmc
in
aam
lods
hlt
mov
fisttps
sahf
pop
xchg
xor
pop
push
push
mov
orl
jg
testl
jle
inc
push
fisubrl
lret
add
lret
mov
mov
jmp
in
add
inc
xchg
imul
and
push
push
pop
pop
imul
movsb
std
hlt
xor
jnp
mov
cmpxchg
fdiv
mov
and
mov
add
popa
xchg
ljmp
sbb
lret
push
aam
mov
and
test
in
sub
push
lret
sahf
fisubl
pop
inc
xchg
sbb
aad
sbb
test
or
in
mov
jmp
fwait
pop
cli
dec
test
add
cli
lahf
add
outsb
mov
push
or
pop
and
xchg
add
adcl
xchg
xchg
sbb
add
aad
out
or
or
jne
push
repnz
push
mov
ljmp
pop
or
push
lods
mov
dec
xchg
daa
mov
mov
xor
xlat
iret
lds
mov
xor
imul
push
push
in
aas
add
fcompl
in
dec
inc
cs
and
cmp
sti
test
push
xor
or
sub
cltd
sub
adc
jmp
repnz
xchg
outsl
or
dec
add
add
cmc
mov
fwait
jbe
lret
aas
mov
icebp
mov
or
lods
cs
push
fld1
popa
je
and
fwait
jb
jmp
std
cli
insl
ja
push
mov
movb
xlat
idivl
insb
mov
mov
lret
or
inc
fisubrs
lds
punpckhdq
fstps
jl
enter
rcrl
xchg
es
test
adc
add
cltd
xchg
aad
push
inc
jmp
movsb
outsl
lods
and
push
and
loop
mov
ljmp
sbb
adc
adc
mov
dec
mov
xchg
ret
imul
jae
adc
and
lea
enter
fsub
mov
mov
lods
ret
out
xor
sub
xchg
ljmp
mov
icebp
cmp
aaa
xchg
std
rcl
out
fwait
push
mov
shll
and
mov
pop
cmp
mov
lret
pop
or
es
fmull
insb
and
rorl
xorl
adc
loop
jnp
sub
push
roll
cs
pop
cli
inc
cs
pop
lret
adc
xchg
jne
dec
ret
cmp
fwait
adc
ss
or
pushl
mov
sbb
int3
es
enter
dec
mov
clc
sbb
adc
push
outsb
mov
dec
sub
mov
xchg
push
aad
push
lds
and
mov
pop
xlat
loopne
scas
xor
cltd
adc
and
les
ficoml
sti
xlat
or
pop
push
mov
pop
decb
hlt
mov
fiadds
iret
pop
push
mov
mov
mov
push
xchg
pusha
addr16
xchg
leave
into
fidivl
dec
sbb
loop
jnp
cmpsl
mov
getsec
or
add
dec
adc
lock
cmp
pop
xchg
sub
icebp
add
add
jno
lret
sub
mov
dec
imul
jp
sbb
fstpt
aas
dec
mov
lret
mov
pop
mov
das
jno
xor
loope
or
std
scas
adc
push
pop
cmp
adc
outsb
aaa
dec
adc
xor
and
fmul
test
cld
nop
test
fsubl
sbb
out
xchg
ja
or
imul
mov
mov
sbb
dec
or
adc
icebp
clc
push
xor
test
shrb
push
fcmovnu
sbb
repz
or
les
jl
shll
xchg
fcoml
fs
xor
push
mov
lret
push
in
add
pop
flds
mov
or
cltd
idivl
and
imul
fs
mov
inc
fs
jno
add
into
mov
dec
mov
xor
pop
loopne
pop
xchg
leave
adc
aam
add
mov
jle
and
xor
add
push
mov
mov
sbb
into
or
cmc
hlt
jns
daa
sub
mov
cmpsb
scas
add
pushf
les
mov
sbb
hlt
inc
mov
and
imul
js
in
adc
fnsave
mov
sub
mov
stc
cmc
jne
lahf
mov
jp
icebp
arpl
cld
shr
insb
pop
sub
je
pop
clc
mov
jl
pop
sbb
and
sub
push
push
lds
js
xchg
arpl
cli
mov
in
jl
ljmp
std
xor
or
jbe
adc
imul
pop
dec
in
int
andb
xor
mov
mov
xchg
cmp
sti
sub
inc
adc
sarl
les
jecxz
mov
adc
cmp
mov
aas
jecxz
test
fsubrl
test
mov
adc
es
or
and
push
dec
mov
sub
repz
mov
in
outsb
clc
mov
mov
icebp
mov
push
fnstenv
pop
fwait
aam
xlat
sbb
mull
scas
add
clc
xor
stos
fcoml
inc
nop
sbb
out
out
xor
xlat
rorb
pop
mov
rorb
insl
xchg
xchg
jecxz
rcrb
pop
mov
cmpsb
xchg
pop
fdivrs
int
fstp
push
push
add
fcmovb
xor
jmp
xchg
adc
rcll
push
push
mov
mov
in
push
xor
loop
mov
int3
cmp
push
clc
xchg
ja
iret
stc
push
cltd
int
adc
or
out
dec
inc
lea
stos
in
call
in
xlat
or
jne
inc
enter
daa
outsb
mov
test
data16
fimuls
mov
roll
ja
xchg
jno
daa
int3
iret
mov
jnp
add
xor
cltd
lea
adc
shll
mulb
imul
inc
nop
mov
xor
inc
outsb
movsb
xor
cld
flds
sbb
outsl
rorl
outsb
ret
outsb
cmc
js
ret
mov
es
dec
and
push
dec
jge
test
das
push
outsb
popa
aaa
cmc
into
int3
insl
insl
or
xor
scas
xor
mov
ja
sbb
mov
incb
add
js
fcompl
and
push
popa
fcmovne
sbb
fwait
adc
xchg
xor
fistl
or
xor
stos
movsl
xchg
dec
jp
jb
jmp
scas
pop
repz
std
fimuls
scas
cwtl
in
mov
inc
or
loop
add
inc
sarl
push
sahf
or
pop
in
fimull
out
insl
scas
mov
mov
ror
repz
and
and
mov
sbb
subl
add
daa
lret
sti
mov
pop
pop
inc
mov
loope
shrb
or
jle
inc
xchg
outsb
or
les
loop
daa
int
into
test
flds
aaa
mov
insb
mov
in
movhlps
dec
cmp
mov
sbb
stos
and
rcll
mov
push
pop
pop
out
loop
cs
sub
es
mov
jl
test
jmp
mov
sbb
dec
shlb
push
push
scas
repnz
leave
cli
inc
sbb
outsl
stc
lsl
xlat
loop
push
push
divl
into
dec
pop
hlt
dec
cwtl
lret
pop
mov
push
loop
movsl
dec
xchg
inc
xor
pop
adc
int
jg
scas
dec
jb
test
pop
idivl
fsubs
xchg
or
mov
scas
push
jp
test
loope
xchg
mov
sti
rclb
test
pop
mov
add
cwtl
xor
je
jl
and
push
jl
lahf
out
cmp
xlat
inc
scas
cmp
mov
daa
xchg
aam
addr16
je
xor
lods
in
push
inc
hlt
shll
dec
fstp
cs
iret
mov
inc
test
je
test
jae
fiadds
push
pop
xchg
lret
scas
ja
dec
xchg
aaa
push
fwait
aam
add
ds
xlat
inc
push
lahf
pusha
mov
pop
mov
aas
mov
fadd
popf
sarl
notb
fcompl
icebp
pop
dec
mov
imul
add
inc
lods
dec
clc
aam
jns
arpl
push
sbb
fadd
mov
mov
dec
and
xchg
mov
xchg
mulb
jp
sub
push
add
jmp
adc
xchg
clc
subl
int3
push
leave
push
mov
mov
orb
or
pushf
xlat
ja
loopne
sbb
jno
mov
sub
mov
subl
dec
jns
icebp
sub
xchg
mov
inc
sti
imul
mov
stos
jge
hlt
fucomip
ficoml
and
cwtl
dec
outsb
xor
mov
es
xchg
jb
mov
xchg
dec
imul
dec
pop
call
es
or
les
dec
lock
ds
adcl
lret
jae
enter
popf
jae
adc
xor
pop
adc
jp
ror
or
jne
xchg
out
roll
jmp
stos
cmp
ljmp
int
mov
cli
push
dec
cmpsb
stos
out
push
mov
xchg
and
enter
in
adcb
fwait
sahf
xchg
push
rcrb
dec
in
aam
fcmove
adc
shlb
lret
add
xlat
fcomp
pop
and
adcl
add
addr16
xlat
adc
pop
pop
jnp
or
xor
shlb
bound
sub
js
ret
stc
push
fnsave
lods
push
gs
inc
push
into
jmp
pop
pmaxsw
or
scas
sub
fxch
xchg
cld
pop
sub
lahf
int
jae
jge
dec
and
add
arpl
pop
lcall
xchg
inc
dec
jp
gs
cmp
sub
jns
or
inc
adc
scas
xchg
pushf
inc
popf
js
test
pop
or
xor
loopne
mov
rorb
test
jmp
fmuls
in
mov
push
mov
adc
add
mov
in
inc
test
cwtl
mov
pop
filds
test
cmp
loopne
es
aaa
dec
xor
test
mov
adc
cli
adc
xchg
add
outsb
pop
mov
repnz
pop
sbbb
clc
xchg
int3
call
pushf
jo
fdivrp
es
jns
jae
inc
lea
xor
iret
shl
ffreep
jmp
cld
lods
push
movsb
jo
inc
xchg
and
lods
mov
mov
movsl
xor
jno
inc
xor
and
stc
aas
sbb
in
sarl
jb
jmp
popa
rcr
in
xor
jb
add
ficoms
jmp
jp
jns
arpl
or
aad
inc
jle
aas
shll
ret
stc
jge
adcl
ss
outsl
sub
mov
iret
sarl
mov
sub
mov
push
mov
adc
add
fcmovu
lods
push
inc
cmpsl
xor
ror
sub
inc
or
push
pop
je
daa
dec
into
ret
cmp
daa
pop
add
lret
mov
mov
jmp
iret
dec
or
sbb
and
jmp
mov
repz
jns
cmp
pop
adc
cmpsl
clc
inc
ss
lret
lock
lods
dec
inc
inc
jge
lret
cmp
fcomip
ret
into
xchg
mov
sub
jo
stos
test
add
arpl
test
ja
or
enter
sti
imul
or
dec
shrl
mov
divb
xor
inc
pushl
lcall
sbb
mov
and
les
sub
sub
xchg
cmp
or
adc
add
and
popa
out
js
ja
or
inc
add
daa
into
cmp
xor
xchg
xor
jge
into
iret
mov
pop
fwait
mov
mov
in
test
sbb
outsb
fbstp
mov
push
mov
pusha
flds
add
adc
mov
ffree
inc
cmpsl
cmp
pop
cmp
ret
or
pop
pushf
pusha
outsb
jbe
js
jle
icebp
and
rcr
sub
adc
stc
in
push
cmp
leave
jnp
aas
adc
xchg
jg
popf
inc
je
gs
cmp
mov
or
cmpsb
and
leave
imul
pushf
sti
sub
rorl
loope
js
mov
pop
cmp
leave
ret
out
movsl
das
dec
outsb
jmp
movb
popa
adc
mov
dec
xchg
xchg
bnd
insl
iret
imull
adc
in
leave
out
stc
pop
shld
rorl
pop
imul
xchg
out
cs
das
lds
push
ljmp
iret
or
mov
cmpsb
xor
dec
lret
or
mov
jl
pop
int
rolb
cmp
arpl
std
scas
pop
dec
int
daa
cltd
daa
dec
fnsetpm(287
in
add
les
jle
imull
rcrb
jmp
jg
lret
add
cmpsl
pusha
dec
icebp
push
or
jo
push
repnz
xorl
jge
adc
mov
addr16
adc
in
inc
xchg
sbb
adc
insl
lret
ret
push
addl
xor
lret
push
mov
and
sbb
aas
scas
jnp
call
pop
push
outsl
loop
mov
inc
loopne
mov
adc
repnz
lcall
adc
adc
hlt
mov
adc
out
movsl
outsb
scas
js
jns
ror
xchg
popa
xchg
mov
dec
pushf
outsl
insb
mov
shlb
lcall
pop
xor
insl
or
cmpsb
rcl
fs
sub
xor
sahf
dec
jle
add
add
jne
add
outsb
xor
flds
int3
or
xor
jae
outsl
jbe
xor
xor
dec
pop
and
enter
push
movsl
test
lock
cwtl
dec
fldt
pop
int3
jle
fidivrl
cltd
stos
pop
push
mov
leave
push
jmp
xchg
xor
add
gs
inc
cmpsl
repnz
jmp
movb
adc
pop
pop
adc
add
push
pop
sarb
sbb
lds
clc
add
and
jbe
scas
aaa
mov
sub
dec
sbbb
es
cmp
xor
pop
lock
movsl
pop
test
shrl
orb
sub
sti
xchg
mov
rclb
dec
mov
mov
loop
push
pop
xor
out
jns
lods
repnz
jae
and
lea
mov
cs
sub
fsqrt
or
jae
pop
mov
mov
testb
pop
test
sbb
cmpsb
jmp
and
pop
cld
or
fmuls
cmpsb
jecxz
sub
push
dec
scas
cmp
push
xchg
in
out
xchg
jno
aas
aad
insl
out
lea
add
pop
xchg
cmpsb
dec
push
push
pop
popf
mov
inc
push
dec
or
leave
mov
fmull
shr
loopne
repz
jno
rcll
fcomp
dec
add
cmp
aas
or
jp
inc
mov
mov
repz
enter
push
sti
outsb
and
jl
out
icebp
mov
aaa
int
outsb
lcall
xchg
and
enter
or
lock
sarb
inc
aam
pop
adc
jmp
inc
mov
int
xchg
jg
testb
idiv
mov
mov
scas
push
push
ret
add
inc
cld
outsb
aaa
jb
cmp
nop
test
loope
aam
mov
and
aaa
mov
call
and
int3
cmp
cmp
pop
sub
sub
lock
lcall
mov
popa
xchg
pusha
push
cmp
cmpsl
daa
jae
and
mov
jno
mov
mov
in
enter
cs
movsl
push
dec
inc
in
out
pop
mov
xor
dec
mov
hlt
sbb
ret
cwtl
pop
imul
xchg
push
inc
ss
add
and
bound
out
push
add
ret
rorb
or
mov
xchg
sbb
aam
adcb
ds
push
push
mov
mov
sub
jmp
push
imul
push
mov
iret
mov
xor
cmp
pop
sbb
pusha
flds
xchg
push
push
sbb
inc
mov
outsb
or
ficoml
cmp
dec
mov
test
push
mov
int3
into
mov
es
adcb
push
pop
pop
stc
int3
mov
jbe
sbb
in
pusha
mov
test
jecxz
cmpsb
arpl
icebp
dec
faddp
push
adc
dec
sbb
sbb
rclb
or
lcall
jecxz
push
lret
lods
inc
sub
cmpsl
cmpsl
jns
jbe
je
cmp
adc
dec
aam
hlt
jno
fwait
or
in
pop
scas
jg
cmp
shll
push
jno
lahf
mov
adc
mov
jnp
sbb
loop
addr16
jmp
pop
pop
cmp
jle
aad
sahf
mov
cltd
hlt
xlat
jecxz
mov
loopne
scas
out
cld
xchg
call
insb
cltd
loope
cs
shlb
ret
mov
fcmovb
add
rcr
rcr
push
scas
hlt
pop
fmull
mov
ljmp
or
adc
mov
rcll
jmp
iret
or
xchg
mov
lahf
test
sti
ss
push
push
inc
outsl
jecxz
jl
cmp
and
in
leave
mov
std
insl
fisubl
pop
xchg
mov
sbb
bound
dec
xchg
mov
cmp
lahf
sti
push
mov
dec
add
sarl
out
movsl
mov
mov
es
jecxz
orb
fs
xchg
mov
mov
roll
lret
add
shl
lret
adc
in
or
aas
cmp
mov
push
mov
push
xchg
and
repz
xorl
gs
jmp
add
out
xor
data16
add
repnz
xor
xchg
pop
dec
or
stc
sbb
cmp
add
insb
sbb
out
pop
pop
mov
xorl
roll
insb
mov
add
adc
cmpsb
cli
mov
scas
scas
fdivrl
mov
lds
fisttpll
mov
and
mov
sbb
sbb
rcll
cmp
mov
fsts
fwait
das
pop
adc
jno
xchg
int3
cmp
and
sbbb
pop
in
xchg
scas
sub
sbb
hlt
push
sub
lret
les
push
dec
push
pop
test
lahf
or
jne
pop
mov
xchg
fdiv
cld
mov
in
inc
dec
dec
arpl
fwait
or
xchg
nop
and
addr16
or
jmp
call
stos
push
test
faddl
xor
or
jne
ret
xor
sbb
fs
dec
shlb
inc
daa
and
jle
or
int
je
sbb
mov
adc
sbb
jo
add
fwait
test
adc
fidivl
pop
rcr
dec
test
lods
je
mov
jb
xchg
clc
repz
cmp
and
pop
inc
not
lods
cmpsl
lcall
pop
xchg
push
sahf
pusha
and
add
add
loopne
jge
loopne,pn
or
andl
xchg
sti
fmul
and
aas
pop
outsl
push
or
jecxz
push
sub
icebp
sahf
divl
cs
fucomi
dec
lea
cwtl
push
lret
int
adcb
lahf
mov
call
cmp
lods
sbb
xchg
push
xor
jmp
push
push
je
pop
jnp
mov
fnstcw
xor
mov
imul
cmpsb
jle
sbb
sub
stc
adc
inc
jnp
test
dec
jne
in
int
sahf
push
jb
hlt
jmp
repnz
out
dec
xchg
jl
pop
cs
mov
fldl
out
xchg
cmp
cmp
das
movhlps
int3
add
repnz
idivb
scas
xchg
fs
mov
orl
adc
jae
in
jmp
fiadds
push
or
pop
test
ja
or
cmp
or
inc
or
lret
ljmp
dec
or
jb
sbb
sbb
fistpll
ret
mov
ja
sahf
cmc
and
pop
shl
addb
pop
fsubrl
xchg
rorl
icebp
pop
je
adc
pop
and
adc
lods
xchg
add
popa
fistl
push
fs
inc
fidivs
ret
jne
add
mov
into
sbb
add
cmp
cmp
dec
adc
stc
mov
fucomi
jns
sbb
xchg
lock
dec
adc
stos
lret
sub
data16
inc
dec
dec
jmp
mov
pop
sbb
jmp
insb
mov
ljmp
js
fiadds
dec
ret
xor
adc
rol
xor
xchg
push
pop
ja
addr16
addr16
enter
and
mov
mov
mov
mov
jb
inc
subb
mov
cmp
bound
repnz
fiadds
mov
lods
pop
lret
dec
push
inc
mov
ja
or
mov
aam
insl
imul
sbb
fstp
push
push
push
hlt
lret
insl
scas
xlat
pop
ja
out
dec
adc
movsb
mov
scas
cld
push
dec
popf
push
in
std
fisttpll
dec
push
sti
xor
mov
inc
cmpsl
inc
or
imul
mov
adc
movsl
or
inc
out
stc
add
out
or
clc
icebp
lods
lds
push
je
xlat
je
mov
rcrb
dec
dec
xchg
dec
cmpsl
xchg
sbb
sti
mov
sub
mov
adc
pusha
pop
jbe
insl
cmp
cli
cmp
and
in
xchg
pop
sub
xchg
int
jno
shr
out
out
movsb
shl
rorb
jp
out
outsb
inc
adc
cmp
sahf
jg
adc
dec
or
or
cmp
cli
pushf
in
mov
je
je
test
shlb
aam
push
enter
adc
cmpb
push
or
xchg
mov
mov
sarl
xor
push
fs
in
jbe
into
lret
jp
mov
jae
push
mov
jmp
push
adc
dec
lret
jg
mov
scas
jp
das
dec
test
popa
cmp
repz
aas
mov
add
andl
jns
cmp
mov
je
add
pop
or
cwtl
jns
ret
xchg
or
push
cmp
xchg
jbe
add
lret
mov
jp
ja
and
mov
mov
mov
jle
ja
inc
mov
mov
mov
in
add
outsb
pop
push
mov
and
mov
popf
je
push
sahf
repnz
es
mov
sub
lods
jo
outsl
jne
cmp
cmpsl
enter
jle
sti
sbb
add
je
push
dec
inc
adc
daa
adc
cmp
xor
xor
fmull
stc
mov
pop
rcll
add
mov
push
sub
mov
cwtl
xchg
loop
xchg
jbe
stos
jnp
fs
xchg
inc
push
in
pop
jmp
sub
enter
insb
inc
jne
jns
mov
idivl
jnp
mov
dec
mov
nop
int
adc
xor
jae
imul
jns
bsf
mov
stc
add
or
mov
mov
cmc
out
inc
testb
stos
pushf
imul
mov
ds
mov
cmpsb
xlat
pop
cmp
adc
push
mov
sub
pop
pop
dec
add
out
daa
push
xchg
sbb
xchg
dec
movsb
xor
inc
loop
std
pop
lcall
aam
push
loop
xor
pop
xchg
jnp
add
cwtl
mov
aam
pop
icebp
fsubs
cmc
mov
fisubrs
lods
jl
clc
or
repz
nop
out
js
inc
ficoms
pop
add
loopne
xchg
cmpsl
mov
cmpl
adc
test
sub
push
cltd
hlt
pushf
jno
ret
shrl
xchg
orb
pushf
movsl
push
mov
xor
out
fs
idivb
xchg
pop
in
nop
cmpsb
xor
sbb
mov
adc
push
add
addl
lret
jae
ret
insl
mov
arpl
adc
mov
sbb
std
pop
mov
sub
outsl
lods
in
clc
mov
loop
or
or
shrb
sub
in
lods
adc
xchg
lahf
jp,pt
cmpsl
aad
xor
cmc
push
movsb
cmpsl
lods
jp
sbb
push
mov
xchg
push
mov
mov
add
pop
sub
jle
pop
xor
fwait
jge
mov
aas
dec
adc
mov
push
cltd
cmp
les
mov
mov
adc
scas
push
mov
call
mov
sub
scas
adc
shrl
int3
out
cmp
rcll
cmpsb
sbb
and
shrl
std
inc
push
and
xchg
ss
sub
jmp
sbb
repz
sub
idivl
insb
fwait
add
jo
cmp
outsl
mov
mov
xchg
nop
bound
xchg
jg
mov
add
sub
inc
pop
movsl
iret
xor
out
inc
sub
inc
leave
cmpsb
and
pushf
es
xchg
nop
lahf
icebp
push
fcoml
mov
and
add
data16
lock
loop
xchg
cmp
and
add
xchg
sbb
sub
inc
or
add
cmpsl
and
push
jbe
pusha
fs
into
mov
daa
repnz
inc
rcll
xor
push
jecxz
xchg
repz
lret
add
pop
mov
mov
stc
in
push
repz
int
cmp
sub
das
dec
jecxz
xor
xchg
push
mov
adc
sub
mov
ss
xor
add
mov
mov
or
ret
pop
loopne
sub
aas
add
cmpsb
fstpl
cmpsl
dec
push
pop
or
and
push
sbb
xchg
outsl
stos
dec
test
jle
mov
fsubs
mov
dec
lea
xchg
outsb
xor
push
outsb
fbld
out
inc
dec
fsubrs
jbe
lahf
sbb
callw
sub
les
ret
clc
adc
sub
inc
mov
cmpsl
mov
popl
adc
sbb
mov
test
adc
incl
pop
scas
xchg
enter
adc
sbb
or
insl
ret
jne
xor
add
imul
mov
movzbl
mov
jmp
xor
add
imul
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
jmp
sbb
sbb
push
mov
mov
and
bound
pop
bound
or
dec
les
lods
les
jg
mov
mov
lcall
sub
cmp
mov
cmpsb
enter
and
jae
dec
push
hlt
dec
or
sti
bound
outsl
add
jge
insb
mov
push
and
cmp
imul
xor
jne
fs
push
cmc
out
or
xlat
andl
int3
cmp
dec
push
in
adc
int
push
cmp
sbb
ja
test
cmp
mov
pushf
xor
jge
jb
xchg
clc
and
mov
jmp
inc
jmp
xchg
jae
xor
sahf
mov
leave
pop
add
mov
leave
test
lods
js
jns
jae
mov
addl
cmpsl
push
inc
jge
gs
pop
dec
mov
fldenv
sbb
adc
test
aad
push
mov
repnz
lret
inc
std
jne
mov
popf
dec
fisttps
push
ljmp
je
add
cmp
sbb
mov
clc
xchg
scas
test
ljmp
lods
into
enter
outsl
jne
jbe
push
sub
inc
xor
sbb
pop
sub
jno
pop
inc
cltd
add
sahf
pop
jae
outsb
dec
popa
adc
ret
ljmp
js
mov
xchg
jp
out
and
lahf
dec
fs
sbb
inc
adc
std
push
jp
xlat
pop
mov
mov
inc
mov
and
mov
fnsave
jo
ja
push
mov
cltd
gs
imul
in
scas
fadds
cmc
stc
divb
sub
repnz
test
jmp
add
mov
ret
jp
and
cli
pop
cmp
mov
or
pop
push
xor
cmc
notl
icebp
mov
push
xchg
out
mov
cmpsb
aad
loopne
adc
jb
lds
adc
jb
or
xor
in
pop
mov
mov
push
sbb
sub
or
frndint
fsubr
jo
mov
push
push
test
addr16
and
push
mov
pop
or
pop
mov
sub
ss
out
pop
sub
ljmp
mov
ljmp
nop
hlt
test
fldcw
add
rclb
inc
cld
std
sub
inc
cmp
loope
jp
cmp
jae
sbb
aaa
jb
rcll
cmc
adc
xchg
cmpsb
pop
mov
call
fsub
jg
and
pop
insl
jnp
rolb
jne
loopne
mov
inc
outsl
cmp
mov
add
notb
ss
cwtl
jnp
mov
and
and
sub
mov
rcr
dec
fnstenv
pop
dec
push
jae
les
push
shrb
sub
in
lods
clc
push
fnstsw
xor
mov
in
loopne
pop
mov
out
push
inc
in
or
push
cmpsl
mov
jbe
mov
test
lret
rcr
mov
imul
pop
mov
mov
dec
xchg
enter
xor
jmp
mov
sub
jmp
ss
cld
jne
fdivs
out
mov
int3
jb
sbb
jne
xchg
cmp
cld
xchg
xor
xchg
aam
mov
pop
add
xchg
nop
into
jno
enter
fisubl
inc
ror
jbe
mov
push
jmp
pop
andb
imul
add
mov
dec
aas
shlb
inc
dec
clc
or
rol
fwait
xchg
outsl
push
and
inc
or
and
mov
mov
outsb
dec
push
and
sbb
xchg
push
into
mov
ficomps
lea
shlb
and
and
sbb
xchg
mov
xor
arpl
and
loop
lods
sub
jae
adc
dec
lret
fisttpl
scas
icebp
mov
push
and
stc
cmc
fists
in
ret
int3
test
test
or
fsubl
jge
in
cmp
add
add
mov
dec
xchg
jecxz
dec
subb
mov
insb
jbe
test
mov
push
sub
push
mov
add
jb
clc
jae
movsl
jp
fmuls
sub
inc
popa
push
xchg
adc
push
roll
daa
sarb
repz
cmp
xor
jl
adc
xchg
xchg
into
cmp
cmp
jns
mov
mov
inc
mov
xor
mov
icebp
xchg
pop
insl
cwtl
imul
jae
inc
pop
sbb
mov
xchg
mov
sbb
or
cmp
jg
sub
lret
fisubrl
xchg
lds
les
push
or
enter
outsb
inc
pop
lds
loop
mov
fidivs
xor
jne
iret
rorb
pushl
xor
bound
ds
cli
addr16
inc
pop
xchg
jbe
outsb
sub
mov
or
jb
inc
hlt
pop
adc
xchg
lahf
mov
or
neg
and
pop
mov
test
outsl
outsl
xor
scas
dec
mov
loop
das
inc
and
or
icebp
into
dec
dec
or
push
scas
mov
xchg
fistpll
jnp
inc
mov
cmp
js
push
push
mov
sarl
sbb
sbb
inc
and
roll
pushf
jo
std
ds
in
push
mov
pushl
test
std
hlt
xor
cs
sbb
lods
mov
test
or
jl
xchg
shl
dec
or
cmp
jae
mov
lods
stc
dec
pop
test
mov
or
push
js
repnz
dec
pop
aaa
imul
es
cltd
test
sbb
mov
stos
pop
xchg
sbb
and
mov
jnp
movsb
jae
xor
daa
xlat
push
dec
hlt
cli
and
xchg
pop
out
mov
call
test
jnp
jmp
mov
inc
or
les
lock
ret
insl
outsl
inc
push
adc
add
dec
inc
sbb
push
out
sti
out
jl
mov
or
inc
fists
pop
xchg
push
fistpl
sahf
jb
push
fistps
xchg
std
adc
jno
gs
pop
pop
jbe
in
dec
sbb
mov
rsm
cmp
ret
cld
cmpsl
mov
sbb
aaa
push
jp
push
aad
dec
mov
in
addr16
mov
mov
jp
js
sbb
fistps
inc
adc
push
ror
mov
pop
cmp
nop
mov
adc
paddw
mov
push
jge
dec
xchg
push
pop
loope
in
pop
int3
sbb
pop
xchg
inc
xchg
jne
push
mov
lds
sbbb
pop
in
loopne
xchg
dec
cmp
push
imull
push
nop
or
pop
mov
into
or
sahf
dec
xor
cmpsl
mov
pushf
jb
adc
dec
jne
add
aad
ljmp
jns
push
fs
pushf
mov
dec
mov
pop
cmpsb
and
mov
imul
cltd
mov
mov
imul
cmp
notl
loop
stos
jg
lods
fadds
cmp
stc
inc
dec
pop
xlat
loope
lcall
sti
mov
mov
lods
ret
lds
mov
stos
mov
cltd
cmpb
fisttpll
out
xor
push
push
jne
loop
adc
in
cs
pop
icebp
xchg
mov
sahf
in
jp
cmp
repnz
fistpll
sub
xor
mov
cmpl
pop
xchg
jnp
sbb
adc
imul
insb
xchg
push
ret
mov
lods
sub
mov
loopne
add
cwtl
inc
push
aad
xor
push
inc
stc
popf
mov
jmp
ret
push
sub
mov
popf
jge
es
ret
fs
fnstsw
in
fucomp
dec
fsub
outsb
push
cli
insl
in
iret
les
xchg
iret
xchg
jo
idivb
mov
cwtl
stc
mov
sub
pop
mov
jno
push
lds
inc
enter
push
mov
shlb
xchg
insb
jno
dec
addb
in
adc
insb
dec
add
or
sbb
ds
dec
xchg
jmp
sahf
mov
xor
jno
ja
int3
push
fcoml
jmp
mov
dec
and
cmp
stos
sub
jg
out
scas
dec
cmc
icebp
add
in
mov
push
lcall
inc
add
fiaddl
jno
dec
jge
loope
repz
jmp
sub
enter
inc
dec
shl
inc
add
test
add
inc
mov
in
add
mov
loope
pusha
cmp
dec
dec
xor
mov
aas
and
jae
cmpl
fisttpl
xchg
sti
test
popf
je
push
pushf
aam
add
pushf
xchg
pop
xor
dec
mov
es
lea
sbb
jo
std
aas
mov
lret
mov
xchg
jp
jle
sub
ret
test
insl
xor
sti
lret
cmp
imul
std
cmpb
cmp
fldcw
inc
daa
ss
cmp
cmp
imul
or
add
scas
dec
pop
push
es
push
push
xchg
test
into
test
mov
mov
xchg
cmp
in
mov
mov
mov
std
sbb
das
jbe
xor
sbb
testl
pusha
push
cld
repz
push
shll
push
in
je
xor
andb
pop
sahf
mov
cmpsl
and
push
cmpsb
sar
scas
sub
test
mov
imul
cmp
pop
shll
stos
sub
adc
jecxz
sbb
shl
xchg
push
popa
dec
outsb
xor
ljmp
or
loope
mov
sahf
push
in
adc
xor
into
mov
or
cmp
and
mov
cld
out
js
mov
rorb
xor
ret
push
push
fistps
mov
mov
jnp
or
push
test
pusha
aam
sbb
stos
xor
lcall
iret
insb
std
out
mov
jno
nop
xchg
or
test
jl
popw
outsb
jbe
pop
lds
andl
subl
xorb
mov
insb
addr16
ror
push
cmp
stc
imul
mov
add
out
pusha
mov
sub
or
fsubs
xlat
push
mov
and
loope
outsl
stos
and
inc
pop
out
cmp
aad
sbb
jns
push
out
popa
push
mov
aad
and
aas
and
jno
popa
adc
arpl
mov
and
mov
and
sub
imul
and
push
enter
imul
hlt
sti
push
dec
cwtl
jbe
push
xlat
bound
movaps
loope
dec
lret
and
cmp
inc
fisubs
cli
mov
sub
testl
jb
sub
in
sahf
dec
out
push
sub
out
sbb
mov
enter
add
mov
push
fwait
leave
mov
pop
jp
int3
sahf
decl
leave
mov
insl
xor
sbb
xchg
xor
pop
sarl
pop
lds
cmpsb
into
pop
ja
fmuls
sub
push
adc
jecxz
call
xchg
fs
sub
fs
pushf
fwait
sub
outsl
inc
xchg
cmpsb
xor
popa
push
lods
xchg
adc
rol
popf
cmp
imul
jnp
mov
lds
push
aad
negl
daa
rclb
dec
cmp
xchg
push
adc
pop
sbb
movsl
ret
les
lds
movsl
or
push
sub
cmp
int3
pushl
mov
scas
push
mov
mov
out
mov
lret
daa
out
cmpsl
push
mov
pop
adc
add
push
jo
ja
arpl
and
inc
adc
rep
or
int3
xchg
jae
and
adc
fs
adcb
leave
add
xchg
jne
sbb
dec
into
push
popa
adc
sbb
cmp
and
push
jns
pop
in
adcl
arpl
popa
and
lods
or
inc
pop
adc
jnp
push
jmp
sub
pop
and
push
inc
js
adc
call
into
push
js
fmuls
dec
js
decb
je
push
andl
mov
cmp
push
push
jne
das
cmpsb
inc
sbb
or
inc
jno
cltd
sbb
mov
cmp
sbb
out
je
lea
popa
nop
sub
cmp
dec
add
lock
loop
jno
lahf
hlt
clc
movsb
leave
cmp
ss
mov
push
call
jmp
shlb
pop
arpl
es
loop
data16
adc
lods
sub
or
insb
xor
push
dec
out
testb
inc
scas
sub
xchg
fiadds
mov
and
je
xor
sub
lret
xor
dec
pop
push
roll
lcall
or
push
mov
adc
pop
sub
bndstx
jg
insb
movsl
shrl
pop
in
gs
cmp
lods
mov
inc
jne
xchg
js
mov
gs
fldt
mov
jno
iret
dec
mov
cli
jne
sub
jmp
dec
mov
xchg
mov
nop
inc
dec
daa
add
addr16
js
add
jbe
enterw
out
ds
inc
jecxz
out
push
test
pop
or
dec
arpl
loope
push
mov
sbb
inc
out
arpl
lret
mov
jp
mov
xlat
sbb
cmpb
fiadds
lcall
enter
cmc
mov
repz
push
inc
data16
adc
fstps
dec
adc
pop
pop
bound
cmpsb
popf
rorl
outsl
insb
push
jae
push
adc
push
repz
or
inc
les
lcall
outsb
xchg
aas
xchg
cmp
inc
adc
movsl
mov
ret
mov
pop
popf
movsb
push
out
loope
dec
jmp
mov
xchg
add
negl
xabort
lret
dec
mov
mov
push
addr16
clc
jmp
or
add
and
add
or
orl
hlt
hlt
push
les
jne
fs
fbld
unpckhps
aaa
out
sbb
add
push
ret
mov
mov
inc
xchg
into
jl
lret
pop
loope
add
cmp
popf
push
and
sbb
mov
push
imul
xchg
stos
arpl
adc
pop
push
jl
stc
or
mov
inc
scas
xor
test
outsb
in
jo
sub
jnp
and
xchg
jne
and
xor
push
pop
js
adc
aaa
jle
cmp
enter
cs
mov
je
gs
clc
lods
sbb
sarl
cli
fcompl
xor
aaa
loope
ja
in
icebp
aam
xchg
jle
inc
out
pop
mov
orl
add
pop
adc
pop
jb
and
mov
incb
lds
xchg
test
dec
mov
lcall
push
xchg
mov
or
loopne
cwtl
ficoml
sbb
addr16
lcall
inc
outsb
fs
or
push
inc
and
repz
mov
jle
sti
mov
and
adc
shrb
popa
mov
sarb
out
inc
add
push
stos
adc
push
rcl
jl
cmovp
push
add
out
aas
pop
out
test
lds
mov
jbe
inc
add
aam
inc
cmc
xchg
mov
mov
loope
xlat
jp
movsb
pusha
out
iret
pop
jbe
xor
outsb
and
sahf
cmpsb
mov
fucompp
push
cs
xor
or
ficoml
xchg
movaps
mov
jge
mov
ss
push
xchg
dec
fnstenv
cmpsb
mov
fiaddl
lahf
aad
call
or
adc
pop
in
rcrl
xchg
iret
lret
inc
rcrl
add
xchg
push
in
insl
stc
imul
add
push
and
cmp
and
inc
mov
jecxz
mov
ret
out
pop
scas
xchg
jbe
lret
pop
leave
mov
or
loop
adc
repnz
les
lods
mov
xchg
testb
dec
in
js
mov
and
cmp
cmp
loop
jnp
cmp
push
adc
shlb
adc
xchg
faddl
xchg
iret
ja
or
mov
xchg
fists
mov
getsec
add
jbe
movsl
test
cmp
ficoml
ficoml
add
aad
out
js
mov
shrl
inc
mov
push
fadd
test
add
call
jns
and
ret
sbb
outsb
push
fbld
out
mov
xor
out
sub
fcoms
and
in
add
pop
mov
stos
pop
mov
icebp
dec
mov
mov
sub
cmp
mov
jg
in
mov
lret
mov
and
push
fadds
push
dec
add
mov
lea
pop
clc
mov
hlt
jb
call
rdpmc
and
das
test
shrb
test
aaa
sub
sub
or
jle
daa
adc
loop
adcl
shll
lahf
push
data16
xor
sub
mov
mov
mov
mov
in
enter
andb
imul
loop
jmp
push
mov
ljmp
jbe
dec
fwait
jo
push
mov
add
jne
lods
out
sub
rolb
pop
push
jno
inc
cmp
xchg
insl
add
adc
pop
cwtl
loopne
xchg
xor
dec
mov
andb
popa
xor
xor
scas
xchg
shl
adc
aaa
mov
leave
xor
aas
push
aad
aad
cmp
ljmp
mov
sbb
out
loope
aam
test
sub
cmp
ss
cmp
xchg
push
mov
push
mov
into
imul
inc
pop
jbe
xchg
push
mov
sub
imul
scas
xchg
fisubl
mov
aaa
notb
dec
insb
jecxz
out
sbb
out
push
hlt
cmpsl
xchg
mov
rorb
cmp
loope
pop
pop
cltd
popf
mov
jnp
das
andb
incl
and
sbb
lods
sarb
pop
mov
push
add
aam
adc
lret
pop
fisttpl
and
scas
or
sar
cs
iret
cmp
mov
xor
aam
xor
jb
cmp
jl
dec
add
jbe
lds
rcrl
fs
xchg
shr
out
sbb
in
sbb
fimuls
shrl
icebp
mov
cmpsb
mov
inc
and
xchg
scas
scas
inc
or
call
ds
imul
in
dec
inc
push
das
cmp
pop
stos
push
fmulp
xchg
bound
mov
and
fisubl
fisttpll
jp
push
adc
lcall
outsb
in
xlat
push
and
outsb
mov
insl
inc
and
sub
nop
sub
mov
xor
sub
popf
stos
fisubrs
xor
pop
pop
call
fstl
cmp
jno
sub
sub
insb
dec
or
add
and
dec
std
push
push
pusha
mov
or
jp
js
lods
jmp
cmp
aaa
imul
and
imul
insb
icebp
lahf
adc
imull
xor
test
mov
add
mov
lret
sub
mov
jae
notb
aad
inc
arpl
ss
cwtd
dec
je
sub
divb
and
lahf
cmpsb
xchg
jne
stc
pusha
inc
subl
dec
mov
pusha
mov
popa
lds
pop
or
add
jmp
movsl
inc
inc
out
push
cmp
adc
push
notb
in
jmp
mov
mov
lret
sbb
lret
ret
not
rolb
outsb
cmpsb
dec
mov
movsl
ss
aad
push
sub
lds
fbld
pop
sbb
pop
cmp
mov
mov
nop
inc
sub
orl
dec
sbb
sbb
clc
and
cwtl
das
xchg
inc
sar
mov
mov
jecxz
loope
dec
add
xor
mull
xor
jmp
clc
fistpl
lds
lock
insl
adc
inc
rol
in
and
xchg
movsl
pop
push
mov
pusha
jnp
add
push
popf
fcomps
adc
cmpsb
sub
je
aad
xchg
mov
and
dec
js
aaa
sbb
xor
outsb
or
dec
xchg
pop
add
push
jl
ljmp
ss
push
es
call
mov
lods
sbb
inc
mov
fwait
pop
rorl
mov
or
lahf
jecxz
add
ret
sbb
mov
inc
push
fsubl
and
adc
sbb
ret
imul
and
scas
push
push
and
outsb
cmpsl
push
mov
push
dec
lods
dec
icebp
mov
add
mov
adc
ja
pushl
jg
adc
cmc
call
loopne
pop
mov
dec
ljmp
cmp
stos
imul
test
test
cmp
fwait
sti
cmpsl
mov
jg
inc
fwait
push
imul
les
pop
sub
scas
imul
push
divl
pushf
add
mov
cmpsb
stos
nop
dec
repz
andb
jne
cmp
daa
pop
mov
xchg
dec
movsb
and
mov
and
push
pop
cld
cmp
subb
call
cwtl
sbb
movsb
lock
mov
rcr
cmp
xor
je
pop
out
jmp
inc
cwtl
adc
jp
aaa
xchg
popa
nop
inc
shll
data16
jle
sbb
movsb
push
rcrb
mov
insl
add
sub
sbb
pop
or
cltd
fmul
lret
je
mov
jae
push
xchg
int3
addr16
je
scas
push
push
fmull
pusha
xor
out
stos
mov
aam
filds
sub
out
pop
add
mov
inc
inc
outsl
or
mov
cmp
and
mov
lret
repnz
push
pusha
pop
and
inc
fildll
fs
push
sub
dec
stos
mov
mov
mov
fiadds
clc
fiadds
inc
sbb
jae
out
lret
fsts
inc
loopne
test
lcall
mov
je
and
push
mov
aam
sbb
pop
inc
sbb
loope
loopne
xchg
sbb
out
jl
jg
cmp
cwtl
and
push
cli
gs
hlt
nop
push
out
cld
lcall
xchg
ds
add
dec
mov
nop
lds
cs
rcrl
in
stc
addl
mov
sub
cli
clc
int
xchg
out
lret
inc
cli
imul
iret
mov
add
jmp
inc
and
inc
out
push
mov
mov
mov
add
sbb
into
adc
shlb
jle
mul
sbb
shll
mov
cs
clc
cwtl
pop
icebp
ret
add
add
lahf
cltd
inc
cmpsb
and
pop
insb
ret
addr16
cltd
leave
xchg
test
push
mov
sbb
cmp
lret
mov
push
dec
adc
sub
out
sub
test
pop
aas
ret
out
ljmp
ret
mov
cmp
and
inc
pop
dec
outsb
mov
out
push
or
add
sbbl
cld
into
cmp
sbb
out
mov
push
pop
xlat
xchg
iret
sbb
pop
stos
out
mov
pop
mov
lret
cmp
cli
call
movaps
xor
pop
es
addr16
les
pop
icebp
into
pop
jg
dec
cmp
hlt
cmp
lret
test
push
scas
and
mov
push
add
pop
aaa
in
scas
jno
sbb
mulb
pop
out
clc
push
adc
pop
iret
lcall
aad
pop
pop
or
rcll
decl
fidivl
movsb
pop
push
push
mov
outsl
push
sub
mov
cwtl
mov
clc
lret
mov
aaa
inc
mov
lret
sbb
inc
cmp
add
or
adc
shlb
mov
cmp
mov
shrd
push
jle
pop
push
out
inc
xor
mov
or
cmp
hlt
clc
lods
in
fmull
lret
xchg
fstps
xchg
or
insl
out
jne
mov
ret
and
test
cmp
mov
jle
jg
stos
nop
in
aam
insb
subl
mov
push
outsb
outsl
xchg
sub
jae
test
jb
cli
xor
and
mov
inc
daa
inc
popl
sbb
ret
mov
dec
mov
mov
mov
movsb
push
adc
and
mov
ret
and
sub
inc
mov
incb
push
mov
daa
fstpt
pop
adc
lods
in
std
xchg
ret
mov
jbe
inc
fnstenv
push
shl
add
lods
jp
add
imul
std
adc
fwait
js,pn
add
push
push
adc
push
push
mov
jbe
fiaddl
jb
daa
pop
cmp
jns
adc
shrb
stos
mov
in
lock
mov
cmp
pop
xchg
fimull
or
jg
data16
sbb
pop
mov
jne
int
loop
cld
cmpsb
das
mul
fwait
rorl
int3
push
pop
mov
mov
ret
ficomps
cmp
insl
pop
cmp
sbb
ljmp
std
fldenv
sti
fwait
clc
cmpsl
adc
push
xorb
in
dec
adc
imul
xor
mov
mov
fs
into
cmc
les
gs
fidivs
into
sub
cmpl
mov
sbb
sub
mov
cmp
int
push
jb
cmp
push
jl
xor
inc
xor
sbb
scas
push
mov
jo
push
mov
or
push
pop
in
clc
jg
and
push
loop
das
icebp
jle
shlb
jno
leave
or
in
cmpsl
cmpb
shll
mov
nop
dec
std
sub
lcall
loop
xor
or
mov
dec
push
sbb
pusha
addl
cmp
mov
ss
rorb
divl
jns
and
int
mov
inc
sub
jge
adc
dec
leave
std
mov
popf
mov
aam
push
stos
dec
mov
sub
dec
rorb
sarb
loop
jmp
das
pop
fiaddl
daa
pop
jmp
inc
xor
xchg
and
dec
clc
inc
dec
jnp
arpl
sbb
mov
pop
mov
dec
push
mov
aaa
add
stos
mov
xchg
xchg
stc
add
leave
popf
adc
mov
xchg
iret
xchg
jmp
lods
pop
mov
shll
outsb
mov
popf
bound
int
xchg
hlt
cs
je
push
stos
inc
test
mov
pop
sub
push
mov
dec
sub
add
mov
inc
rcrb
call
add
adc
mov
add
cmp
dec
iret
or
sub
or
cmpxchg
hlt
cwtl
pop
mov
gs
adc
ret
push
cmp
shll
xchg
arpl
dec
pop
dec
pop
out
movsb
and
cld
cltd
push
outsb
or
ja
sbb
stos
insl
ljmp
mov
imul
enter
cltd
cmpsb
stc
xor
lods
or
fstl
dec
cs
or
mov
xchg
sarb
es
loopne
lds
cmp
and
xchg
stc
imul
imul
or
push
scas
xor
dec
xchg
cmp
loop
popf
push
scas
out
inc
notl
pushf
in
rorb
add
jbe
fdivrl
mov
dec
mov
cmp
loopne
sub
iret
dec
sbbb
cmp
and
dec
and
or
and
clc
adc
outsb
lret
mov
cmp
int
sbb
rolb
and
xchg
mov
mov
nop
or
jecxz
or
push
adc
push
push
xchg
mov
stc
cmpl
push
test
lret
test
xor
shrl
pushf
jne
mov
fisttpl
push
addr16
mov
and
add
leave
je
das
rcl
pop
leave
and
mov
and
mov
and
daa
pop
add
pop
stc
lahf
mov
dec
sbb
aaa
cs
call
aas
mov
mov
aad
cmpsl
mov
test
and
out
leave
rorb
xchg
mov
sbb
inc
out
sbb
xchg
pushl
dec
and
int
cmc
mov
jg
lahf
mov
mov
stos
inc
icebp
loopne
lcall
mov
pop
int
xchg
repnz
dec
or
ret
andl
lods
cmp
inc
sbb
int3
and
roll
leave
mov
sbb
daa
aas
pcmpgtw
loopne
lock
inc
pop
add
addl
or
lea
mov
adc
testl
ljmp
divb
push
arpl
pop
adc
fdivl
lahf
popa
push
aas
mov
into
adc
sbb
lcall
sbb
ss
leave
jge
push
fists
out
rdtsc
mov
cmpsb
test
pop
insb
mov
dec
pop
mov
rcrl
enter
add
ficoms
je
mov
cmc
dec
push
repnz
sub
xchg
popf
dec
test
enter
lock
push
jp
test
mov
nop
pop
jg
movsl
sub
in
jbe
movb
xchg
xchg
ret
cwtl
add
call
add
add
loop
scas
sub
mov
push
cmc
dec
int3
inc
inc
xlat
enter
and
lods
cmp
hlt
lds
addr16
pusha
xlat
mov
es
mov
lods
in
inc
addr16
into
adc
sub
cmp
dec
test
xor
bnd
mov
fidivl
daa
sub
jmp
aas
repnz
push
dec
fs
aam
repnz
jl
push
dec
test
pop
sbb
gs
cmpl
imul
mov
mov
push
jb
adc
imul
loop
dec
mov
push
sub
push
sbb
xlat
and
into
adc
enter
mov
cmp
aam
xchg
pop
mov
cmp
fsts
dec
loope
je
inc
das
inc
stos
call
jne
pop
test
lock
mov
sahf
adc
mov
push
dec
cmp
pop
add
xchg
xchg
push
out
jo
out
cmp
addr16
sahf
or
lret
orb
das
pop
leave
xchg
cmp
sbb
fimuls
mov
mov
and
add
push
in
jmp
cmpsb
xchg
lret
dec
mov
movsl
xchg
dec
mov
outsb
sub
out
inc
popa
bound
pop
bound
ss
cmp
cmp
movsb
arpl
inc
leave
jo
pop
mov
iret
add
cmp
stos
fwait
sbb
xor
cli
arpl
mov
jle
movsb
int3
mov
fldl
adc
add
xor
stos
inc
mov
or
mov
or
push
pushf
andb
lahf
lret
push
inc
push
xor
aam
sbb
push
mov
mov
inc
loop
lahf
jp
mov
stc
mov
adc
aas
in
sub
jo
mov
int
adc
shlb
cmp
inc
rolb
in
mov
mov
lcall
out
mov
mov
jns
pop
pop
push
pop
cmp
hlt
arpl
jne
dec
mov
sbb
in
jmp
xchg
les
out
xchg
adc
mov
daa
sbb
dec
cmpsl
mov
hlt
jb
jmp
xchg
mov
jns
fwait
mov
fiaddl
lret
pop
fisttpl
pop
add
jns
lret
jp
mov
sti
jge
test
or
pop
xchg
mov
iret
mov
shr
ds
cltd
ret
in
ja
mul
cmpsl
andl
int
fistpl
pop
aas
sbb
rolb
iret
call
mov
movsb
mov
cltd
dec
mov
imul
shl
push
dec
cmp
loope
lcall
cmc
sbb
clc
xor
ret
sbb
hlt
fcomp
xchg
subl
clc
arpl
cmc
jnp
pop
mov
fcompl
cmp
inc
pop
repnz
das
pop
out
push
add
imul
inc
or
pushf
push
inc
js
roll
fwait
xor
movsl
mov
outsl
cmp
mov
push
fwait
pop
insl
fneni(8087
push
and
sbb
and
arpl
imul
test
add
call
clc
or
push
xchg
jne
call
add
out
cmc
jmp
or
ss
mov
dec
xchg
lea
lock
adc
jl
lock
mov
mov
je
inc
sub
stos
adc
cmc
xor
lods
jmp
ljmp
add
pop
or
cs
add
mov
sub
shlb
xchg
test
inc
pop
outsb
lock
mov
cmp
and
add
sbb
fmuls
mov
lret
pop
jne
insb
push
fldl
xor
shlb
xchg
fldt
es
sbb
cmpsb
imul
ds
arpl
cwtl
out
push
xchg
dec
movb
jnp
insb
in
cmc
mov
push
call
cs
lock
push
jb
bound
in
ss
imul
std
fxch
scas
or
xchg
outsl
data16
jl
pop
test
and
cmp
icebp
in
mov
mov
rclb
xor
in
incl
fdivrl
scas
jne
sbb
je
imul
mov
push
stos
arpl
inc
pmulhuw
test
cmpsl
test
inc
mov
lods
iret
pop
testl
adc
pop
rolb
lcall
cmp
sahf
movsl
lret
hlt
das
sti
out
adc
int
mov
subl
into
int
add
std
and
negb
adc
xor
lahf
xchg
js
xchg
mov
lret
dec
fisubrl
mov
pop
inc
pop
cltd
sbb
pusha
fsts
jp
jb
cmp
out
shr
add
lock
sbb
or
and
mov
jae
stos
sub
sub
push
js
pusha
and
or
out
lods
rcrb
and
fcmovu
stos
fmuls
jp
mov
lret
xlat
pop
pop
aam
sbb
jno
aam
mov
fists
sbb
mull
cmp
vpavgb
push
fdivp
out
in
test
pop
inc
gs
mov
aas
aaa
mov
cmpl
pop
adc
pop
mov
call
shll
jne
lret
mov
inc
leave
adc
shlb
adc
icebp
adcl
arpl
xor
out
retw
clc
scas
xchg
ja
out
cltd
sub
mov
imul
add
mov
scas
sbb
lds
fcmovb
xchg
add
jl
scas
mov
xchg
fwait
icebp
pop
int
jae
ljmp
imul
sbb
xor
je
ficomps
pop
movsl
inc
cld
in
imul
cld
push
addr16
pop
xlat
xorb
xchg
pop
cmpsb
adc
mov
push
movsl
fidivrl
add
movsb
xor
fwait
jl
mov
push
xchg
test
cmpsl
dec
mov
sub
mov
jnp
or
movsb
lahf
mov
xchg
bound
adc
xchg
ds
mov
ss
inc
inc
out
int
push
shlb
mov
addr16
sahf
jnp
int3
lahf
arpl
jmp
pop
mov
iret
fmull
aad
jno
aam
mov
mov
cmp
ret
push
pusha
xlat
add
andb
xor
cmpsl
inc
sub
call
mov
scas
loopne
jbe
xchg
je
inc
imul
xchg
jno
jle
jnp
mov
aam
xor
inc
mov
sub
dec
push
adc
add
pushf
inc
bound
or
stos
add
push
movsb
out
stos
cmp
cs
adc
or
push
idiv
sbb
mov
movups
dec
dec
into
sub
sbb
loop
pop
popa
xor
and
cmp
imul
and
rcrl
pop
push
idivb
push
outsb
push
ffreep
adc
xorl
jne
arpl
and
push
out
add
int
lods
push
pop
xlat
out
out
jp
inc
pop
dec
ja
xlat
lods
ret
cs
data16
movsb
mov
pop
fcoml
mov
out
repz
or
imul
adc
mov
inc
movsb
pusha
and
mov
fldt
push
dec
push
push
push
push
and
std
mov
movsb
lahf
xlat
cmp
out
jb
rcrb
aam
dec
fisubrs
insb
and
xchg
leave
dec
or
xor
scas
scas
das
xchg
js
mov
push
xor
cmp
enter
call
cmp
mov
in
fbld
sub
push
repnz
lret
lds
das
mov
mov
ja
and
int3
test
subb
inc
test
sahf
or
test
add
adc
repnz
fsubrs
cmc
push
repnz
repnz
adc
pop
cltd
dec
push
jae
mov
lret
popa
stc
sub
mov
jnp
push
into
shl
in
inc
jae
and
aad
mov
pop
mov
test
push
aam
sbb
xor
and
sbb
test
xor
push
test
add
sbb
into
cmp
out
sbb
jne
push
add
cmpsb
push
cmp
cltd
adc
push
out
xchg
aad
add
sti
inc
test
xchg
movsb
fcoms
nop
mov
add
t1mskc
mov
movsl
outsl
out
fisttps
mov
cld
enter
xchg
push
movsb
fistps
outsl
cmpsb
movsl
xchg
into
push
in
dec
sahf
mov
adc
inc
pop
test
pop
dec
scas
sub
add
fstps
push
cmp
orb
les
mov
out
shlb
cmp
cld
stos
mov
fdivrl
hlt
pop
scas
pop
ficoml
mov
movsl
mov
dec
lret
push
inc
shll
les
loop
int3
jbe
fdivrl
sahf
jne
cwtl
pop
pop
out
add
les
inc
cwtl
subl
cmpsb
jl
jbe
int
in
and
xor
jae
add
cmpsb
imul
push
mov
xchg
jmp
or
sti
push
bound
imul
loope
outsb
cmc
inc
pop
xor
xor
cmp
scas
std
jl
out
cmp
push
icebp
cmpsb
pop
mov
mov
jb
call
jae
xor
cmp
dec
es
bound
xchg
iret
iret
jmp
div
loope
je
sub
leave
adc
or
mov
std
adc
xor
push
shl
push
cli
arpl
pop
jae
xor
int3
repnz
cwtl
mov
push
push
inc
test
push
aas
data16
movsl
jp
xchg
in
mov
mov
push
cmp
xor
aaa
jl
cli
adc
push
xchg
adc
inc
mov
in
scas
push
ret
stos
addr16
jnp
fwait
std
and
mov
push
test
inc
insb
cli
push
cs
lea
jno
cltd
enter
dec
dec
ja
push
dec
push
cs
mov
push
jge
adc
cmp
xchg
cli
cmp
mov
inc
mov
pop
test
sbb
adc
test
sbb
sub
jl
xchg
fildl
pop
ret
mov
push
in
cld
pop
sbb
and
insb
or
adc
into
dec
push
sahf
adc
add
imul
scas
sti
xchg
in
in
in
sti
call
mov
push
mov
push
sahf
mov
push
les
mov
mov
lods
add
lret
pop
or
fmuls
mov
lret
stos
or
sbbl
popf
into
in
in
mov
inc
daa
cltd
xchg
push
sub
ljmp
enter
jb
ja
dec
inc
mov
mov
mov
adc
outsb
mov
jbe
mov
mov
push
into
fwait
add
std
adc
sbb
and
or
cmp
fiadds
gs
mov
push
push
push
out
or
cli
aam
and
orb
push
push
pop
pop
mov
daa
ss
mov
inc
sub
lret
push
sahf
jno
push
or
sub
or
mov
clc
or
dec
mov
sub
cmp
xchg
daa
dec
cmp
xchg
addr16
dec
push
pop
out
jne
icebp
repz
mov
icebp
out
ds
nop
inc
sbb
stos
ljmp
movsl
adcl
push
sub
sub
dec
insb
out
aaa
dec
pop
mov
mov
ljmp
sbb
push
sbb
inc
add
or
sub
pushf
dec
pop
ds
jp
add
inc
or
sbb
pop
leave
or
bound
jle
push
adc
add
jne
mov
loopne
lret
addr16
dec
pop
pop
lret
test
sarl
cltd
sub
mov
insl
mov
lock
adc
and
sar
cmp
push
clc
movsb
aad
pop
std
stos
hlt
insl
mov
push
cld
add
test
mov
jbe
sbb
mov
mov
and
and
into
pop
cli
mov
loop
aam
and
push
xor
ja
repz
ljmp
lock
aad
jg
xor
pop
fidivrl
data16
dec
xchg
movsb
pop
and
or
test
mov
mov
push
and
sub
insl
jb
xchg
ljmp
pop
add
inc
cmp
push
pop
out
add
sbb
lcall
jne
xor
cli
shrl
in
add
jge
add
aad
jnp
shll
adc
pop
inc
add
data16
mov
ljmp
stc
popf
aaa
add
jge
push
lahf
push
mov
cmpsl
mov
inc
ja
scas
jae
pop
test
xchg
jecxz
scas
jmp
add
pushf
cwtl
adcb
lcall
inc
or
stos
cmpsl
push
in
ja
lea
add
mov
repz
fld
mov
je
cmp
and
xchg
je
aam
push
sub
in
fwait
popa
mov
mov
hlt
mov
or
lret
out
sub
in
pop
jmp
and
scas
mov
out
hlt
icebp
ret
shll
cmp
xchg
icebp
shll
loop
jl
xchg
push
jns
push
mov
ss
loope
mov
mov
test
adc
rcll
or
jns
dec
add
mov
aam
iret
pop
iret
aam
fdivp
sbb
lock
jne
mov
stos
gs
sahf
and
sub
loop
add
xchg
lods
mov
sub
ja
sbb
out
ror
test
mov
push
cltd
dec
rcl
push
leave
xor
pop
jae
or
and
adc
fwait
mov
sbb
mov
shl
out
imul
pop
dec
cwtl
fwait
popa
xchg
movb
cmp
rorb
push
adc
pop
push
lcall
orl
rcrb
pop
mov
add
add
cmpsb
clc
lcall
pop
push
fstpt
or
jle
mov
mov
in
and
xchg
cmc
pop
addr16
rcpps
mov
mov
jp
dec
aaa
xchg
dec
xchg
pop
jle
clc
call
mov
inc
cmp
jmp
sbb
inc
lds
push
sbb
cmp
enter
pop
leave
sar
cmc
lahf
jmp
pop
lret
xlat
in
mov
jp
lcall
stc
jecxz
adc
mov
lcall
mov
push
cmp
inc
cs
ficompl
or
xor
pop
xlat
pop
negb
rcrb
jecxz
in
or
jecxz,pn
lret
push
jbe
xchg
or
or
pusha
outsl
fcomip
inc
inc
sahf
xchg
arpl
sub
idiv
dec
arpl
pop
push
mov
in
or
insl
out
sbb
shlb
mov
adcl
cmp
sub
mov
adc
out
cwtl
jp
je
xchg
hlt
test
jecxz
push
xchg
out
lods
lock
or
clc
loope
ror
fidivrl
add
lods
loopne
and
stc
add
sbb
data16
mov
data16
minps
add
sub
dec
ljmp
cmp
inc
gs
xchg
mov
sub
imul
loope
fwait
jle
adc
test
xor
adc
out
ja
lret
xor
lock
cmpl
push
addl
mov
in
cltd
ja
xor
shr
pushf
sbb
xchg
in
dec
pushf
inc
and
scas
rcr
loopne
lret
cmp
or
in
lcall
call
jo
lret
xchg
push
es
cmc
sti
adc
pop
out
adc
dec
nop
cld
pushf
arpl
mov
push
mov
lcall
pushf
and
cmc
jbe
add
cmpsl
shrb
add
or
cmp
inc
and
cld
test
loop
mov
xlat
inc
push
into
leave
mov
pop
adc
dec
push
inc
int
into
mov
xor
outsb
les
dec
or
icebp
xchg
outsl
jno
mov
push
xor
adc
xchg
pop
mov
cli
or
sub
enter
push
mov
xlat
add
loop
cmp
fdivrs
mov
rorl
jp,pt
imul
xchg
jnp
int3
enter
jns
das
jae
adc
xor
fs
mov
xchg
inc
stos
fs
or
xor
out
sub
or
mov
popa
hlt
loop
loopne
mov
das
or
imul
mov
dec
daa
ret
pop
movsb
out
repz
xlat
je
jge
ljmp
lahf
out
xor
movsb
scas
icebp
or
push
and
imul
pushf
mov
es
push
adc
loopne
jo
nop
addr16
ja
loop
les
pop
int3
push
ret
push
sbb
cli
cmp
pop
and
outsl
inc
in
loop
addl
das
loopne
scas
fnclex
jnp
xchg
out
mov
sub
pop
inc
sar
hlt
xor
and
mov
lock
loop
test
lds
jle
xor
xchg
imul
lss
pop
lds
cltd
mov
jae
ret
and
popf
jo
mov
lods
mov
hlt
xchg
adcl
adc
or
push
mov
aaa
jg
std
xchg
bound
ds
mov
aas
jo
negb
ljmp
frndint
fldl
cmp
out
sahf
push
mov
adc
addl
add
push
mov
and
xor
loope
dec
inc
sub
rorb
insl
sbb
bound
push
inc
push
jb
push
ds
mov
cld
loope
sub
cmp
aad
sbb
dec
mov
outsl
test
lret
jp
or
ljmp
and
xchg
scas
mov
data16
imul
push
lcall
cltd
xchg
roll
aas
lods
sub
loop
jne
or
mov
add
loope
xchg
xchg
shlb
fisubrs
jp
fiaddl
aas
push
sbb
sarl
pop
or
cwtl
fisttpll
push
mov
push
in
outsb
mov
adc
sbbl
imul
hlt
push
rcr
push
jne
push
jns
popa
ljmp
fwait
xchg
in
loop
adc
dec
cmp
lcallw
pop
fwait
enter
jno
dec
aam
cmp
repnz
adc
cltd
sbb
cmc
pop
sub
or
mov
shll
daa
sbb
aam
and
add
lock
or
inc
loopne
cmpsl
jns
sbb
jns
inc
sub
es
push
push
jne
adc
push
pop
sub
push
push
sbb
cmp
mov
sbb
test
xor
push
loope
cwtl
out
pop
jecxz
int
in
inc
out
dec
imul
adc
cmc
add
sub
stos
pop
sbb
inc
rol
int
shrl
out
xlat
ret
je
add
gs
out
ljmp
cmpsb
or
iret
cmp
mov
cmpb
pop
push
stos
insb
dec
jo
push
hlt
mov
and
pop
xor
mov
cmp
out
inc
xor
shrl
insb
lock
fdivl
das
push
test
aam
push
pop
mov
popl
les
call
push
or
add
add
out
fdiv
mov
idivb
sbb
in
pop
movsb
pushf
movsb
inc
xchg
loop
mov
loope
jge
int3
loop
jbe
out
stos
mov
jg
jmp
iret
inc
iret
insl
and
dec
notl
dec
mov
mov
mov
ret
insl
in
xchg
imul
mov
test
into
push
mov
sub
jp
adc
mov
cmpsb
fldenv
adc
out
mov
bound
mov
mov
lahf
leave
xor
hlt
dec
loopne
sub
jb
pop
xchg
pop
and
adc
loope
imul
jl
dec
subb
leave
jbe
sbb
push
js
mov
sbb
push
or
add
arpl
stos
movsl
stos
ljmp
sub
enter
or
mov
sbb
leave
ds
insl
pop
sbb
mov
jmp
inc
cli
and
sbb
in
cld
fmull
xchg
sbb
jno
nop
mov
dec
dec
adc
pop
inc
sub
ds
repnz
pop
movsl
mov
xlat
add
mov
xor
jmp
pusha
subl
mov
xchg
dec
mov
add
shl
jns
imulb
push
out
aad
mov
lods
jl
jle
pop
pop
jno
pop
out
cmpsb
sbb
pop
fs
pushf
push
dec
sbb
in
repnz
out
hlt
adc
divl
ror
sbb
cmp
nop
gs
insb
and
sahf
fsub
test
loopne
mov
pusha
mov
insb
jns
jge
inc
fs
add
int
sti
les
inc
xor
out
jnp
and
sub
sahf
dec
push
add
jle
shrb
adc
jno
pop
lret
jbe
loop
aad
push
lea
mov
push
inc
repz
sarb
xor
adc
cmc
xchg
cmp
outsb
jp
shll
rolb
push
mov
test
mov
repnz
cmp
pop
cmp
dec
jle
test
mov
cmp
adc
lea
mov
add
into
inc
test
dec
rep
inc
out
out
inc
leave
push
mov
mov
sahf
leave
clc
add
loope
mov
out
scas
jp
inc
jg
xchg
test
fwait
scas
andl
xchg
pop
xchg
int
or
dec
lret
cmp
or
sbbb
pop
hlt
aaa
or
lods
jmp
xchg
xor
xlat
jmp
add
lret
cli
and
inc
cmp
push
jbe
cmp
mov
lcall
jne
bound
mov
cld
mov
xor
insl
add
cld
xchg
dec
data16
jne
lret
xor
sub
shrb
pop
fadd
mov
test
dec
xor
push
fistl
arpl
adc
adc
loopne
or
pop
sub
dec
add
cmc
lds
js
ja
scas
xchg
imul
fisubrl
inc
mov
fadds
mov
xor
or
push
aad
sbb
ftst
or
enter
aaa
out
ljmp
and
mov
loop
movsb
cmp
sbb
sahf
sub
jl
repz
outsb
xor
push
je
mov
fisttpl
iret
xor
bound
jns
aad
stc
mov
push
mov
or
xor
outsl
xchg
fnstenv
add
fmul
test
cs
into
dec
mov
and
fwait
lahf
xchg
or
dec
xchg
add
ret
iret
xor
xor
mov
iret
mov
mov
pusha
sub
adc
jecxz
outsb
into
iret
std
xor
add
add
fistpl
stc
mov
js
sub
insl
add
movsb
cmp
icebp
stc
pusha
dec
inc
dec
enter
mov
jle
syscall
xchg
sub
ss
cmp
jmp
mov
dec
pop
leave
adc
mov
cmp
push
xor
adc
scas
adc
sbb
lock
outsl
in
cmpsb
adc
test
outsl
dec
push
movsl
rolb
test
fs
xchg
fsubl
sbb
in
shrb
and
insb
jns
rcl
xchg
inc
xchg
das
push
inc
test
mov
mov
push
xchg
and
fdivrl
in
or
mov
adc
push
fisubrl
imulb
stos
cmp
pop
stc
fsts
imul
cltd
jb
insl
out
push
je
mov
test
jo
dec
pop
jle
loopne
mov
sub
jp
push
pop
jmp
loop
xchg
cmp
out
mov
popf
inc
inc
pop
arpl
push
pop
add
out
xor
push
scas
jg
dec
sub
jl
mov
dec
in
repz
xor
push
add
mov
inc
mov
sub
mov
or
lcall
and
push
insl
xor
cmc
nop
clc
rcrb
mov
push
pop
mov
or
sub
xchg
dec
int
push
or
push
sub
inc
xor
jne
lea
sub
xorb
aas
stos
ss
mov
mov
cmpsl
push
sub
pop
test
sub
mov
sbb
lret
and
negl
sub
icebp
scas
test
mov
pusha
and
shlb
inc
scas
xchg
push
fnstenv
lahf
js
mov
aad
jmp
xor
testl
mov
xor
jo
cmp
sub
movsb
mov
push
add
pop
pop
dec
repnz
sbb
pop
xlat
cwtl
push
sbb
cli
jae
test
pop
and
aam
jmp
popf
mov
or
insl
call
mov
gs
imul
add
sbb
adc
je
test
out
ret
mov
ja
add
daa
push
add
pop
sbb
mov
fst
jo
and
add
dec
jmp
icebp
mov
inc
test
dec
jno
inc
pop
mov
dec
cmp
bnd
and
in
mov
push
test
add
lcall
jb
mov
or
jno
popf
mov
lock
sub
pop
fldenv
push
js
test
mov
sbb
popa
mov
das
jns
aas
lcall
adc
lds
dec
and
shr
mov
into
cmp
dec
mov
adc
xchg
inc
adc
repz
push
xor
push
mov
pop
out
push
addr16
in
daa
aad
sbb
inc
pop
stos
mov
cwtl
or
imul
bound
movsl
adc
mov
scas
insl
mov
add
shl
icebp
repz
and
shrb
dec
lods
sub
push
pop
aas
cld
mov
sbbb
lods
cmp
sbbb
in
fwait
push
or
std
cli
sbb
lret
nop
add
lock
cmp
jns
scas
jge
mov
add
adc
xchg
inc
lock
push
clc
push
movsb
dec
xchg
outsb
sbb
fxch
hlt
cmp
mov
pop
out
popa
jno
shll
shll
repnz
jo
mov
fnstenv
mov
ret
mov
pop
xchg
in
sbb
imul
sbb
mov
mov
dec
adc
rcl
pusha
fistpll
outsl
imulb
mov
fadd
je
ja
xchg
mov
adc
imul
mov
out
cmc
pop
adc
mov
jg
mov
ret
fsubs
shrb
add
or
add
popa
mov
aam
std
sub
add
sbb
xor
lds
ret
test
pop
jno
inc
test
mov
int
or
int3
and
movsl
mov
push
lahf
je
in
negb
arpl
sub
add
dec
cmc
test
movsl
mov
sbb
xchg
outsl
add
imul
imull
sub
jecxz
pusha
mov
addr16
jl
inc
cmp
sub
dec
ja
xor
sub
leave
mov
fwait
and
aad
cmpsb
push
mov
popfw
pop
fiadds
mov
push
loopne
add
cmc
cltd
mov
mov
adc
test
cmp
xchg
test
stc
adc
loop
or
push
andl
out
test
xor
lcall
mov
stos
or
jno
or
and
dec
inc
sbb
sub
add
arpl
xor
aam
inc
sbb
sbb
call
pop
test
add
mov
push
mov
cmp
repz
lods
xchg
mov
jne
mov
jmp
in
fwait
add
or
xchg
aas
mov
adc
mov
aam
sub
scas
xor
dec
push
sbb
cmp
test
push
cmp
xlat
mov
call
sub
sub
les
dec
jmp
int3
cmp
add
aam
mov
mov
lret
jmp
pop
and
frstor
mul
mov
inc
pop
bound
pop
ljmp
shrb
xor
lcall
xor
inc
lret
iret
dec
add
call
mov
mov
movsl
inc
mov
ret
inc
jl
mov
hlt
inc
xchg
push
pop
cmc
sbb
mov
xchg
mov
and
push
fstsw
pop
cmp
shlb
push
sbb
cmp
inc
je
mov
sarl
push
pop
int
aaa
sbb
insb
lods
icebp
ljmp
mov
lret
mov
jmp
xchg
lods
push
xor
lea
xor
xlat
mov
jo
ret
fs
pop
dec
pop
je
dec
call
or
jb
jge
cmp
cs
js
imul
cmpsl
inc
cmpsl
dec
dec
mov
ss
xchg
sti
bswap
aaa
jb
mov
lock
adc
cmp
insl
fists
cltd
subl
jns
in
aam
pop
jg
insb
sub
ljmp
cmp
rcrb
aas
push
sbb
cmpb
cmp
movsb
ret
or
es
lock
mov
and
sbb
imul
add
outsl
lods
pop
insb
jae
test
pop
or
xchg
daa
pop
loopne
jne
sbb
jle
pop
sub
out
pop
add
pop
in
mov
add
mov
xor
loopne
movsb
sahf
outsl
cmp
addl
or
adc
or
or
xchg
testb
dec
popf
out
mov
pop
mov
sbb
out
xchg
les
xchg
lret
out
out
lea
cs
push
repnz
xchg
mov
repz
popf
and
inc
fstps
sbb
out
mov
les
mov
out
mov
data16
in
arpl
mov
and
std
pop
mov
mov
sub
sbbl
sub
orl
or
add
ds
push
pushf
mov
dec
jae
mov
sub
jge
rcr
test
es
fwait
int
cwtl
or
xor
icebp
or
inc
adc
adc
popf
icebp
scas
jecxz
inc
cli
jae
dec
jecxz
mov
pop
fucomp
data16
mov
pop
mov
jae
cmp
and
idivb
add
mov
push
in
sub
inc
mov
xor
jbe
pop
pusha
push
outsl
into
ret
sub
sbb
xchg
sbb
in
push
inc
xchg
jne
sub
ds
leave
inc
xor
stos
shlb
or
sti
mov
inc
jmp
sub
call
dec
bound
in
xchg
loopne
clc
aaa
ds
cmp
sahf
ficoml
daa
pop
push
rcll
pop
mov
add
adc
mov
int3
stc
int
mov
xchg
and
mov
mov
fsubr
jae
jno
mov
pop
mov
ret
fbstp
adc
das
ds
scas
xchg
popa
push
movsl
sub
test
adc
jmp
fists
and
push
add
sub
dec
bound
decb
cmp
and
push
add
mov
xor
stc
jns
mov
and
test
test
add
add
imul
add
mov
mov
mov
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
jmp
push
ja
cmp
add
adc
xchg
push
mov
loopne
mov
and
bound
pop
bound
xor
xchg
xchg
int3
adc
mov
jmp
daa
aad
mov
fidivrs
xchg
mov
loope
cmp
lcall
lret
scas
nop
push
add
adc
aam
jp
sti
push
mov
inc
enter
dec
jns
call
mov
lds
xor
pop
ret
add
push
imul
rorl
mov
add
mov
jo
into
cmp
jmp
lahf
jne
hlt
jp
imul
push
popa
rolb
hlt
repnz
sbb
fcmovnu
mov
cmc
xchg
add
dec
push
in
hlt
fiadds
mov
or
mov
and
push
push
pushf
sbb
mov
scas
mov
xorl
je
mov
jg
scas
jae
xor
aaa
cld
mov
inc
ljmp
out
push
stos
and
stos
xor
jo
push
xchg
inc
js
cmp
outsl
inc
xor
sbb
add
pop
aas
int3
push
pop
repz
je
xor
dec
inc
jp
stos
xchg
roll
enter
sub
rolb
inc
test
mov
dec
mov
dec
push
jmp
sbbw
xor
inc
push
inc
fs
pop
xorb
int
sbb
test
ffree
mov
aad
cmp
mov
cld
xchg
icebp
dec
jo
leave
scas
call
int
push
stc
mov
stc
adc
sbb
scas
call
lret
push
add
xor
jmp
sahf
xchg
clc
push
cli
out
xchg
push
push
inc
ret
push
inc
outsl
es
js
mov
rcll
repz
xchg
xor
sub
pop
xchg
mov
orps
inc
lods
cmpsl
stos
add
mov
mov
popl
popf
xchg
das
call
pop
adc
call
or
mov
lock
in
add
popf
shll
and
les
ficoms
fwait
daa
rorl
ja
cmp
mov
scas
movsl
mov
aam
push
movsl
dec
jnp
test
imul
in
scas
ret
adc
dec
addr16
clc
sbb
clc
xchg
enter
hlt
out
or
mov
repz
ret
icebp
cmpsb
jns
push
dec
inc
mov
lret
out
fsubrs
scas
jecxz
add
xor
test
scas
lcall
xor
cmpsl
ret
gs
je
adc
mov
push
lock
call
inc
scas
call
testb
les
mov
push
ret
dec
jae
and
pop
test
int3
aas
gs
push
outsb
pop
rep
mov
inc
popa
stc
or
test
lock
dec
cmp
stos
or
inc
adc
sub
mov
push
mov
imulb
adc
shl
stos
lret
scas
mov
lret
cltd
jecxz
mov
add
cs
imul
xchg
mulb
mov
mov
mov
fstcw
xchg
outsb
orl
hlt
pop
cli
mov
insb
jge
adc
cmp
inc
popa
xor
rep
or
insl
lea
push
cs
inc
int3
adc
adc
scas
or
into
cmc
mov
and
mov
int
ret
pop
cmc
aas
lds
cmp
lods
sub
mov
enter
lcall
adc
mov
aam
or
mov
sbb
test
push
cmc
cwtl
mov
push
pop
mov
pop
jns
loope
das
lods
enter
add
gs
xor
and
sub
push
fucom
pop
popa
fcomps
fcompl
movsbl
fsubrp
test
fisttpl
fwait
push
fimuls
or
push
mov
mov
sub
lcall
jl
lret
mov
insb
into
cltd
in
bsr
cs
push
test
lods
xchg
mov
roll
jb
cld
inc
out
daa
out
cwtl
cmc
data16
pop
ficoml
pushl
jnp
xor
push
cmpsl
dec
sbb
inc
push
std
cmp
les
icebp
outsl
shll
sbb
ss
xchg
filds
or
pop
jp
mov
cmpsl
outsb
or
jle
cmovge
or
shrl
inc
movsb
cwtl
push
ss
mov
fwait
jle
jl
or
inc
std
or
push
jb
cld
mov
jl
notl
inc
or
dec
push
jne
cli
mov
sub
ja
mov
jecxz
sub
adc
cld
lock
cmp
dec
or
inc
subl
push
xlat
cmpsb
xchg
ja
or
push
mov
and
and
push
sbbl
push
inc
aam
and
dec
out
or
dec
xchg
xchg
push
stc
sbb
push
ret
dec
jge
mov
scas
dec
test
out
push
and
dec
jle
inc
popf
inc
mov
fwait
add
movb
mov
mov
dec
inc
adc
sub
push
cmp
das
popa
nop
jne
loopne
and
pop
pop
das
inc
rcrb
mov
xchg
dec
jo
mov
jle
lret
pop
mov
jns
out
pop
mov
addr16
ds
jo
cmp
mov
pop
loopne
xchg
sub
jnp
out
xchg
iret
pop
mov
adc
jb
push
scas
dec
jmp
push
idivl
cmp
xorl
xor
icebp
ret
fwait
out
add
pop
aaa
cmp
pop
pop
inc
xchg
and
dec
pushf
loop
lret
movsb
andl
popl
cmp
inc
fs
lret
enter
ds
ds
adc
fisubrl
dec
popf
sub
stc
jo
in
lret
mov
xchg
pop
push
cmp
ret
push
xor
xchg
xchg
lahf
orb
rcrb
cmovl
not
test
pop
inc
sub
jmp
jns
add
push
adc
inc
lcall
sbb
mov
sub
or
mov
inc
sub
xchg
xchg
loopne
icebp
pop
enter
fdivrp
frstpm(287
jns
mov
lcall
fisttpll
mov
adc
xchg
lcall
fucomi
adc
inc
js
imul
mov
sbb
or
cmc
xchg
mov
in
rolb
aaa
pop
mov
out
lret
cmp
inc
push
fcomps
cld
cmp
or
loop
or
cmp
mov
adc
das
inc
pop
jecxz
jb
pop
out
aad
inc
jmp
test
cmp
sbb
and
fwait
cld
out
jg
test
fldcw
push
cmpl
sbb
push
repnz
mov
insl
and
inc
pop
inc
loop
jbe
lods
test
push
popf
adc
jg
in
cmp
lock
adc
lods
and
cmpsl
inc
leave
dec
lods
inc
cli
jge
mov
jle
mov
mov
add
loop
cmp
pop
fucom
jnp
sub
pushf
ja
test
mov
and
jl
cmc
test
jae
addr16
xchg
stos
repnz
call
xor
loope
or
jne
lret
jmp
loopne
adc
and
adc
daa
jle
jb
jno
mov
sarl
das
in
jl
push
add
call
add
add
sub
xchg
loope
mov
xor
divb
jno
bound
cmc
lods
aad
push
loope
test
dec
jmp
icebp
push
daa
mov
jmp
aad
out
lods
test
aaa
dec
test
push
add
movsb
push
in
cltd
jne
mov
stc
add
mov
jg
loop
les
mov
dec
sti
push
imul
pop
ret
mov
ret
cli
fdiv
dec
add
xor
xor
mov
cld
or
cmp
ss
add
in
xchg
or
in
repz
sbb
pushl
or
sbb
mov
mov
pusha
xchg
jecxz
sub
iret
scas
mov
inc
mov
dec
cmp
cmc
mov
cld
adcl
add
xor
iret
inc
daa
pop
push
mov
jns
enter
mov
jmp
xchg
inc
dec
std
and
test
jecxz
rorb
add
xchg
mov
lds
jl
mov
xchg
insb
mov
mov
push
pop
enter
jmp
rcrl
out
cwtl
cmpsb
and
adc
aam
mov
pop
shlb
and
insb
pop
jp
fwait
pop
cld
movsl
jp
jecxz
push
les
fisttps
adc
sub
sub
cmpsb
test
mov
rclb
rcrb
fbld
pop
icebp
cmp
and
outsb
adc
rcrl
inc
in
loopne
push
or
orl
push
xor
cmp
imul
sbb
jmp
cs
pop
or
or
jns
cmp
gs
jecxz
mov
testb
scas
sub
and
jnp
mov
lret
dec
imul
push
ret
sub
loopne
sub
outsb
insl
pop
ljmp
ljmp
inc
das
lods
insl
fwait
add
lahf
into
xor
jbe
push
loopne
pushf
push
cmpl
sar
movsb
jge
pushf
and
js
pop
add
mov
xchg
mov
mov
adc
test
and
into
add
lock
sbb
jmp
dec
push
push
mov
jae
iret
mov
add
mov
cwtl
inc
imul
jmp
and
or
aaa
pop
inc
jg
cmp
dec
mov
inc
xor
jbe
lods
and
dec
or
dec
sbb
rcll
scas
cmpsl
lret
aaa
aas
or
adc
dec
mov
sub
or
int3
xchg
pushf
and
aas
adcl
dec
dec
in
add
inc
inc
in
lsl
xchg
stos
loop
jne
int
jbe
sbb
jle
mov
fnstcw
sub
inc
or
mov
and
data16
fwait
push
rolb
cli
push
cmp
mov
pop
lds
ret
xor
push
cli
dec
xchg
push
mov
jae
repnz
jno
fdivl
jbe
mov
daa
push
add
lods
xchg
pop
add
fbld
adc
shll
lcall
vphaddubw
iret
xor
mul
lcall
cmpsb
aam
sub
pop
out
dec
fs
sar
xchg
rcr
mov
or
sub
pop
add
lods
les
iret
cmp
arpl
sub
sbb
outsl
lds
cs
pop
repz
adc
dec
cmp
cwtl
sbb
pop
outsb
mov
mov
or
gs
daa
in
or
jb
adc
enter
jecxz
into
out
out
subb
scas
dec
repnz
out
xor
push
out
sbb
cmp
lea
jne
adc
sbb
xchg
cmp
cwtl
int
jns
int3
lret
lds
cmp
jae
mov
mov
add
sbb
adc
decl
gs
adc
or
adc
cld
das
jle
call
hlt
imulb
mov
xchg
adc
and
imul
add
das
lret
imul
push
xchg
mov
adc
xchg
and
lahf
push
or
add
hlt
data16
sbb
push
jno
jb
lcall
xchg
arpl
mov
mov
xchg
gs
dec
scas
pop
in
pop
xchg
fwait
stc
jns
movsl
push
xchg
es
loope
pop
mov
int3
mov
or
mov
dec
aas
cmp
sbb
bound
add
call
std
sbb
jmp
jecxz
inc
sti
dec
jbe
xor
sbb
call
and
xor
movsb
mov
pusha
inc
jns
push
sub
popf
pop
xchg
mov
flds
pop
adc
outsb
out
daa
xor
test
sbb
bound
out
and
int3
push
mov
mov
mov
pop
mov
adc
mov
cmp
push
inc
sub
rclb
and
pop
and
in
dec
mov
jb
sub
imul
sarl
data16
lods
imull
jo
stos
xor
hlt
jns
cltd
ret
rcl
mov
shlb
xchg
sub
push
xchg
into
add
and
repz
sbb
test
iret
mov
mov
xchg
das
std
clc
dec
add
add
popa
fcom
adc
sbb
or
in
sbb
jge
into
rolb
push
sti
push
pop
sub
or
jnp
cmp
nop
nop
adc
dec
push
pushl
jmp
xchg
test
mov
xor
jno
sbbl
push
push
push
ret
sbb
stc
sub
addr16
sahf
push
mov
dec
xchg
add
in
out
fstps
mov
ss
pushf
push
addl
jecxz
adc
push
aas
in
cld
popf
mov
inc
aad
ljmp
or
xlat
add
cmp
mov
imul
sti
jecxz
ret
jp
repnz
ljmp
sahf
pushaw
adc
fldl
mov
shlb
mov
gs
loop
stos
js
movsl
adc
out
fwait
mov
jmp
mov
into
or
dec
xchg
xchg
ss
arpl
adc
fistpl
dec
les
lret
jbe
jl
mov
push
sbb
jmp
jl
inc
out
mov
scas
mov
in
cmpsb
jmp
mov
imul
inc
add
pop
xchg
insl
and
cltd
mov
lret
dec
pop
pop
ds
ret
imulb
jno
adc
imull
and
popa
test
xchg
jnp
ficoml
or
dec
inc
or
lahf
popa
cld
add
stos
out
xchg
sti
movsb
push
nop
xor
jo
scas
fisubrl
pop
mov
pop
jl
or
int3
inc
sub
pop
and
jmp
test
mov
cltd
lret
gs
xchg
mov
js
repz
push
stc
dec
test
aam
mov
sbb
xchg
inc
push
lods
in
mov
xchg
pop
mov
push
sub
inc
aad
cli
sub
xor
pop
jb
inc
mov
cltd
sahf
fsts
xor
mov
clc
pop
std
arpl
pop
lock
mov
xor
mov
icebp
nop
les
mov
aam
clc
push
jg
xchg
orb
push
mov
fmuls
mov
shlb
pop
xchg
push
pop
sub
sub
jle
movsb
xor
pop
push
push
movsl
filds
jl
hlt
adc
add
cltd
pop
je
imul
dec
rcr
fidivrl
mov
sbb
ja
mov
in
inc
inc
cmpsl
aam
dec
and
out
push
push
in
rclb
mov
mov
movsl
arpl
repz
push
mov
mov
sub
mov
sub
adc
add
dec
cld
cmp
sub
inc
mov
out
sub
cmpsb
adc
mov
pop
cltd
xchg
sarb
push
and
mov
xchg
scas
mov
push
les
adcl
push
clc
int3
sbb
and
aad
repnz
and
or
movsl
mov
inc
lret
add
sbb
add
push
orb
mov
scas
jo
xchg
adc
mov
xor
mov
push
insb
dec
clc
cmp
cmpsl
jmp
int
dec
and
stos
pop
das
mov
mov
pushf
jmp
cs
jb
movsl
add
push
cwtl
pop
iret
sub
cmp
adc
sub
sahf
fdivs
stos
cmp
out
xor
push
lds
scas
jl
add
dec
mov
pop
rorl
sbb
jns
fcomps
add
sbb
push
pop
dec
pop
addr16
pop
bswap
adc
jg
pop
scas
cmp
test
repnz
jo
sub
flds
pop
cwtl
repz
inc
es
scas
and
aam
cld
je
mov
add
stos
sub
rclb
or
int
ljmp
dec
insb
testb
mov
push
add
fbld
mov
mov
xorl
push
jle
add
push
in
mov
ret
or
mov
decl
sbbl
jnp
adc
xor
inc
xor
cmp
repnz
mov
inc
aad
sub
cmp
inc
fmuls
or
add
jo
imul
ja
rcrb
sbbl
das
inc
daa
jnp
ljmp
fwait
xchg
push
stos
mov
lds
cmpsl
std
outsb
movsl
sub
jnp
loop
imul
adc
dec
mov
gs
or
gs
scas
inc
mov
jae
and
imul
pop
repz
cmp
aad
arpl
push
ds
sub
and
imul
lods
repz
mov
cmc
push
mov
mov
subb
sub
adc
jg
and
adc
xchg
cltd
or
call
sbb
jp
iret
lcall
xor
or
out
leave
cmp
fdivrs
mov
imul
enter
call
and
out
add
or
clc
sti
scas
add
cmpsl
daa
inc
popa
movsb
lods
sti
mov
or
nop
and
in
data16
sub
cltd
lret
imul
jle
push
data16
fidivs
fldt
or
loop
std
jae
dec
xor
mov
cmp
cmp
arpl
and
or
mov
bound
inc
push
mov
arpl
fidivrl
cmpsl
sti
gs
xor
out
adc
jge
stos
pop
insl
dec
lods
jo
cmp
sub
dec
xor
jge
pop
xor
stos
and
fdivrs
xchg
fidivrs
dec
xchg
sub
jnp
lret
int3
lods
stos
mov
xor
movsl
aam
test
pop
aas
xchg
cs
jae
jbe
inc
sub
pushl
hlt
in
movsl
lea
sti
pop
rclb
mov
and
jbe
inc
daa
bound
pop
adcb
jmp
cmpsb
mov
pop
out
into
push
dec
aam
into
jo
scas
aad
jl
fldt
xor
or
pop
and
sub
lods
dec
and
xchg
aaa
in
sbb
sbb
push
nop
sbb
std
mov
push
jp
nop
inc
fildll
add
pop
mov
inc
push
and
aas
es
in
mov
sarb
mov
push
sub
mulb
add
cmpsl
mov
faddl
lret
dec
aaa
or
sbb
lret
cmpsl
push
lret
dec
mov
lods
cmp
push
cmp
sbb
lock
and
repnz
in
lds
outsl
popf
or
mov
js
jle
or
and
xchg
sarl
xor
cmp
nop
enter
mov
dec
ds
sub
xchg
mov
das
add
xlat
xor
aas
dec
and
insl
dec
add
dec
repz
icebp
cli
mov
insb
dec
xor
pop
loope
pop
mov
movsl
xor
aam
sub
or
or
cmp
out
xor
mov
xor
aam
fwait
add
std
scas
xchg
cmpsb
or
cmp
and
jge
mov
shlb
mov
mov
call
sbb
into
shrl
xchg
jmp
sub
or
loop
xchg
or
dec
jmp
mov
enter
dec
mov
testb
adc
push
jl
ja
xor
shrb
cli
call
cli
pop
push
rol
push
fsubs
in
xor
stc
cs
dec
aas
shll
test
pop
sbb
shll
add
cs
stos
fdivrl
sbb
insl
test
jb
jl
in
inc
lods
mov
outsb
lcall
push
rol
scas
pop
xchg
pop
or
js
lret
lea
repz
lahf
cmpl
repz
xor
scas
cmp
mov
pop
shrb
push
mov
mov
lret
xor
fists
pop
mul
cmp
into
cmp
jmp
and
pop
in
jbe
movsb
mov
sub
mov
popa
andl
and
int3
adc
adc
and
idivb
xor
xchg
aad
jae
mov
je
cmpsb
arpl
add
inc
aad
adc
outsl
sti
jns
pop
jno
pop
lock
hlt
testl
or
jne
jmp
in
xchg
sbb
rolb
inc
mov
dec
adc
adcb
insb
mov
lds
mov
negb
jne
inc
adc
mov
jge
sbb
jecxz
sub
stos
cmp
sbb
or
icebp
or
cmp
pop
push
inc
icebp
add
pop
popf
adcl
sub
mov
xor
rcl
xor
in
in
push
and
nop
fiaddl
mov
aas
in
gs
insl
fistpl
mov
in
pop
xor
stos
mov
lea
push
xchg
outsl
push
mov
addl
loopne
cmp
adc
bound
mov
jmp
sub
and
out
mov
shll
mov
or
fimuls
add
repz
test
std
or
sbb
fdivs
cltd
decb
nop
jge
cmp
jns
push
lock
in
push
loope
pop
xor
jo
test
ror
dec
arpl
jle
inc
add
jecxz
xor
cmc
mov
pop
dec
sub
add
cmc
push
pushl
mov
jle
scas
or
out
mov
xor
inc
inc
jns
out
cli
movsb
adc
push
jae
and
inc
pop
mov
jp
xchg
mov
push
cmp
or
cwtl
aas
cmp
je
pop
rcl
ret
push
sub
pop
lods
lds
or
or
fdiv
cmpsb
into
fimull
daa
pop
push
fstps
sarb
ss
pop
in
sbb
mov
divl
dec
cwtl
jnp
insl
adc
dec
push
jae
pop
jae
ret
mov
pushf
mov
lret
pop
insb
inc
sub
enter
jg
mov
and
pop
adc
iret
cmp
push
popf
fisubs
push
mov
xor
dec
cmpsb
adc
xchg
sti
adc
inc
dec
pop
cmp
je
sbb
sbb
daa
mov
popa
cmc
pop
cli
loope
sub
cli
imul
jmp
mov
push
mov
cmp
cltd
and
enter
movd
pushf
xor
fs
mov
into
rclb
insl
and
popf
sub
arpl
dec
mov
pushf
mov
xchg
negb
sub
or
push
sub
push
adc
sbb
ljmp
cli
test
fnstcw
jns
les
dec
or
nop
adc
pusha
in
js
popa
dec
ljmp
arpl
xchg
mov
push
fisubl
das
cmp
mov
pop
xchg
mov
pop
cmp
push
lds
test
push
push
fsubl
jge
xchg
insb
add
bound
dec
push
cmp
je
repz
dec
sbb
push
pop
shrl
push
mov
pop
xchg
test
mov
sub
ljmp
xchg
mov
or
ret
and
inc
push
inc
stc
push
dec
cmpb
pop
adc
inc
add
jg
jecxz
in
lret
push
into
movsl
push
ds
daa
mov
jle
cmp
add
cld
ret
or
out
cmc
and
int
jnp
std
aam
int
addr16
mov
sub
lret
sub
cmc
xchg
or
mov
ljmp
add
adc
int
aas
cltd
pop
push
lahf
data16
in
shlb
test
push
mov
push
aam
xor
mov
insl
out
dec
loop
push
pop
push
mov
repz
out
xchg
add
lcall
xchg
lahf
mov
sbbb
pop
movsl
gs
es
js
inc
pop
movsb
loopne
mov
pop
and
daa
adc
mov
testl
das
push
int
push
sbb
mov
lock
sub
imul
mov
ficoms
cmp
out
stos
jnp
pop
jg
sub
mov
sbb
in
mov
ret
adc
jmp
jp
test
pop
movsb
sub
repnz
std
fbld
jg
push
je
sarl
hlt
lcall
cmp
xor
mov
xchg
xchg
movsb
sub
dec
repnz
outsb
mov
cmp
sub
or
push
mov
mov
sbb
jnp
scas
xor
push
lds
ficompl
fdivp
cwtl
pop
push
aam
push
dec
pop
imull
mov
es
clc
inc
cmp
cmp
push
syscall
daa
mov
xchg
sub
pop
dec
popa
cwtl
push
push
xchg
insb
push
cmp
aas
push
bound
fadd
mov
adc
daa
call
int
rorl
outsl
imul
roll
out
aam
hlt
lea
pusha
cmp
sbb
lds
shll
hlt
fstps
inc
xor
data16
jecxz
sahf
sbb
xchg
pcmpeqd
daa
jo
sub
pop
arpl
pop
mov
pop
ret
dec
jo
push
xor
fprem
shll
cmpsl
dec
scas
jb
dec
cwtl
pusha
lods
sbb
pop
lea
inc
mov
pop
cmp
mov
inc
sbb
inc
sub
mov
stos
xchg
movb
pusha
push
sub
enter
sub
add
insl
gs
sti
jb
out
cltd
aam
out
ror
and
dec
movl
adc
mov
arpl
mov
sti
cld
repz
dec
mov
xchg
add
xchg
adc
cmp
repnz
jecxz
mov
insl
sti
cmp
mov
push
and
mov
cmp
inc
lcall
pop
inc
sbb
test
std
shll
adc
and
pop
cmp
insb
mov
in
nop
insl
xchg
cmpsl
popa
mov
xchg
cmpb
mov
xchg
or
int3
mov
in
jg
ret
xchg
stc
dec
sub
gs
mov
lea
mov
fwait
jle
xchg
sub
fisubrl
dec
das
push
leave
hlt
cmc
sbb
jge
mov
cli
cmpsl
xor
daa
sbb
fwait
mov
cmp
xor
test
aam
push
sahf
and
mov
jo
push
jge
movsl
xor
stos
fs
xchg
fisubs
div
in
out
cmp
icebp
xchg
repz
insl
scas
push
push
fmuls
cmp
movb
sahf
movsb
pushf
das
adc
fldcw
cmc
mov
lods
jbe
icebp
mov
push
in
rcll
or
push
jmp
push
mov
test
ret
repz
out
push
cld
mov
jno
js
jnp
fcomps
xchg
dec
sbb
das
imul
push
pop
ret
add
rcll
pop
pop
or
or
movl
pop
and
pop
mov
shrb
loop
mov
mov
out
lock
pop
in
jb
mov
xchg
mov
lock
rorb
mov
popa
fistpl
pop
rcrb
lret
sbb
mov
lods
repz
fsub
loop
sub
movsl
movsb
jmp
xchg
fdivs
imul
ror
or
cld
xor
push
jne
pop
xchg
pop
sbb
push
jp
jne,pn
lds
mov
jg
out
ss
cmp
lahf
mov
cmp
nop
imul
mov
sub
testb
dec
fucomi
cmp
lret
sub
add
rorb
mov
add
cmp
jmp
fs
pop
mov
mov
stos
jbe
and
xchg
adc
xor
data16
in
adc
leave
sub
mov
decl
testl
decb
je
mov
cmp
jle
xchg
test
xchg
lock
cmp
xor
add
test
loopne
and
dec
sub
xor
jno
pop
ljmp
jl
and
xor
jae
xchg
mov
add
adc
add
push
mov
int3
xor
xchg
adc
fs
jle
popl
aad
divl
push
cmpsb
aas
outsb
addr16
pusha
or
filds
outsl
push
pop
imul
insl
js
es
hlt
cmp
mov
sub
jecxz
enter
or
jp
jecxz
mov
inc
lods
clc
mov
sub
int
lahf
iret
shll
or
add
pop
lcall
fldenv
testl
inc
push
xchg
mov
xchg
cmpsl
sub
adc
inc
xchg
aas
xchg
cmp
out
sahf
in
cmp
mov
jns
addr16
sub
add
sub
je
and
sub
test
aas
insb
ret
pop
repnz
ss
into
sbb
lea
hlt
mov
and
mov
loopne
lock
pop
mov
inc
in
inc
in
lods
cmp
repnz
aam
sub
rcrl
jno
add
cmp
cwtl
test
dec
iret
sbb
cmp
scas
into
adc
sbb
and
or
xor
ss
push
sub
adc
aaa
or
enter
scas
add
aad
ja
mov
sub
jnp
fdivs
jl
sub
fcmovu
or
dec
dec
pushl
cmp
pop
out
jns
pushf
test
cs
dec
and
sbb
movl
mov
push
loopne
sub
std
jge
jmp
js
sbb
jp
es
lds
outsb
mov
sti
mov
sbb
sub
imul
shl
les
in
mov
add
lods
stc
or
insb
xchg
inc
in
lcall
mov
mov
fstpt
push
clc
sub
xchg
cmp
int3
rcrl
dec
mov
cmpsl
pop
or
bnd
fimull
pop
mov
lods
pushf
cmp
jecxz
mov
fnstenv
imul
sub
aas
sub
xor
js
bnd
andl
dec
or
push
mov
inc
xchg
lret
sti
adc
in
mov
add
xor
out
push
fwait
mov
aam
leave
cmpsb
jbe
call
jae
push
imul
mov
icebp
daa
fs
xchg
push
imul
cld
and
test
ljmp
push
imul
popf
and
push
in
mov
dec
pop
and
or
ret
push
leave
out
testl
pushw
pop
inc
fnstsw
or
push
mov
ficoml
dec
movsl
sub
dec
movsb
notb
mov
cmp
jmp
ja
dec
fisubrs
jb
test
dec
shlb
add
xor
jle
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
movl
pop
jmp
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
push
movzbl
and
movl
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
push
adcl
mov
mov
xor
mov
and
xor
mov
mov
sbb
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
dec
mov
mov
adcl
push
call
adcl
push
push
sbbl
push
movl
push
andl
push
push
orl
call
orl
push
andl
call
push
call
movzbl
mov
mov
movl
cmp
movl
jne
movl
adcl
pushl
andl
pushl
pushl
orl
call
xor
mov
or
mov
mov
mov
sub
movl
lea
mov
adc
lea
notl
mov
mov
mov
sub
and
mov
mov
mov
and
mov
mov
xor
mov
add
movl
mov
movl
mov
movl
cmp
movl
jne
orl
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
sbb
mov
andl
mov
movzwl
add
xor
add
andl
xor
or
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
and
mov
adc
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
orl
add
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jb
mov
andl
xor
xor
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
mov
mov
mov
xor
add
mov
sub
add
mov
notl
mov
mov
neg
mov
sbbl
mov
sbb
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
inc
mov
subl
xor
xor
andl
add
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xor
xor
add
mov
subl
xor
orl
xor
add
movl
lea
mov
mov
mov
cmp
ja
or
mov
add
xor
lea
addl
mov
adc
mov
inc
xor
lea
xor
add
mov
or
mov
mov
mov
movl
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
decl
mov
adc
movl
adc
mov
mov
sbb
mov
xor
sbbl
add
cmp
movl
je
mov
movl
mov
xor
orl
xor
subl
add
sbbl
add
adc
xor
sbbl
xor
mov
mov
or
mov
xor
mov
add
adc
xor
xor
movl
mov
movl
mov
movl
cmp
jne
mov
cmp
movl
je
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
add
adc
xor
mov
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
je
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
mov
mov
mov
xor
lea
xor
add
adc
xor
mov
xor
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
addl
mov
sbbl
xor
sbb
mov
add
not
movzwl
mov
movb
sub
lea
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
push
pushl
pushl
pushl
call
mov
dec
mov
jmp
sub
mov
xor
adcl
sub
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
inc
push
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
movl
sub
mov
xorl
push
andl
mov
xor
mov
push
add
jmp
movl
mov
movl
mov
inc
movl
cmp
movl
jb
sbb
mov
decl
xor
add
movl
jmp
mov
jmp
ud1
mov
std
mov
xchg
jge
add
add
bound
cs
loopne
mov
cltd
addr16
iret
inc
cmc
ficoml
dec
push
out
xor
ja
xchg
mov
cmp
push
sub
hlt
add
push
push
in
and
movsl
jl
cmc
dec
jmp
add
pop
cmp
xor
clc
lahf
js
cltd
mov
sarl
push
sub
outsl
sub
fwait
sub
lcall
mov
addr16
out
push
xor
sbb
pushf
xchg
into
mov
jp
xchg
movsl
dec
xor
and
inc
cmp
mov
mov
jne
stos
mov
xor
dec
jge
pop
cmp
inc
xor
xchg
ljmp
add
fwait
out
out
loopne
call
repz
jge
aad
xchg
popa
pop
cmp
ds
push
fdiv
mov
push
jo
or
push
shlb
mov
jecxz
fwait
or
in
mov
adc
cmp
xor
loop
mov
dec
aam
push
dec
icebp
frstor
aam
adc
xchg
and
or
mov
sbb
lahf
ja
jmp
mov
dec
dec
je
cmp
test
mov
daa
mov
rcll
out
xchg
movb
stos
mov
pushf
js
xchg
arpl
test
mov
xchg
cmpsl
pushf
cld
dec
push
sbb
or
and
dec
sbb
mov
mov
mov
cmp
dec
nop
push
dec
xchg
in
pop
dec
or
sub
jae
int
mov
xchg
test
push
cmp
stc
mov
mov
mov
dec
clc
call
fucom
aam
adc
dec
pop
xchg
pusha
ret
jge
lock
xor
ja
adc
insb
cmpsb
cltd
leave
aam
lret
fwait
mov
adc
repnz
add
and
sbb
mov
and
lcall
sbb
cli
fdivrl
pop
in
jns
jbe
std
lock
js
push
in
xor
addl
scas
test
mov
sbb
xchg
ficoml
mov
addb
mov
je
incb
ret
into
mov
mov
stc
cmc
aaa
test
or
push
dec
inc
rorb
dec
jo
push
cmp
pop
pop
mov
xchg
ja
pusha
adc
fisttpl
fdivrs
enter
int3
data16
inc
mov
sub
sub
lea
inc
xor
push
mov
pextrw
das
mov
xor
loop
lcall
push
push
mov
scas
sub
dec
aam
out
nop
jns
sbb
xor
pop
jecxz
and
cmp
dec
pop
test
stos
jecxz
and
and
jp
shl
inc
jns
sub
jbe
clc
jae
inc
lret
pop
inc
cli
aam
xor
jbe
xlat
dec
xchg
and
pusha
jbe
sbb
jae
lods
pop
mov
sub
iret
jecxz
imul
sub
arpl
mov
xor
in
jle
sub
fsubl
loope
pop
pop
and
dec
sub
das
mov
mov
or
inc
pushf
into
mov
cmp
rolb
sub
test
shrb
and
xchg
dec
dec
lcall
decb
dec
or
loop
gs
outsl
aad
push
cli
sbb
sahf
jge
out
aaa
jg
mov
repnz
fsub
rcl
int3
cmp
test
shl
and
cli
icebp
sbb
fdivrl
xor
mov
notl
loop
and
movsl
ret
data16
pop
adc
sub
xor
inc
sub
inc
jl
inc
lahf
pop
xchg
push
mov
or
xor
out
push
jl
inc
sub
xor
and
pop
xchg
cmpsl
loop
cmp
xor
scas
mov
addr16
movsl
or
mov
xchg
sti
pop
fs
sub
adc
pop
mov
gs
stos
daa
adc
push
push
daa
xchg
push
dec
movsl
mov
nop
aaa
ss
std
mov
aad
add
mov
fildll
jbe
xchg
in
shrl
add
jmp
adc
push
int
rorl
cmp
mov
shll
mov
fcoms
cmpsl
mov
sub
fcmovnb
in
mov
pop
cmpsb
pop
pop
movsb
or
aas
leave
daa
sbb
test
or
or
adc
jl
jecxz
push
mov
add
xchg
mov
mov
outsl
je
lea
lret
scas
jg
bound
orl
mov
mov
mov
mov
cmp
mov
xor
das
cmc
dec
push
ja
movl
xchg
enter
inc
jmp
mov
jp
es
fimuls
jge
fbld
fisubs
jge
out
inc
xchg
rorl
and
cmp
cmc
adc
rol
dec
sbb
fsts
mov
dec
sub
out
xor
das
mov
mov
xor
lock
xlat
inc
in
cmp
xchg
jle
add
push
ret
push
push
notb
fildll
xor
aam
cmpsb
insb
ss
or
lret
dec
sarb
push
popf
mov
inc
sbb
into
and
adc
and
xor
push
and
and
pop
repz
add
mov
stos
adc
dec
and
jl
inc
out
ret
repz
push
dec
add
icebp
sbb
push
ret
adc
pop
inc
lock
dec
stc
add
mov
push
mull
adcb
leave
mov
fidivl
add
lcall
mov
xor
xchg
cwtl
jae
adc
ja,pn
adc
xor
aaa
cmp
ljmp
enter
dec
es
pop
jge
int3
inc
iret
stc
scas
cmpsb
sbbb
imul
fwait
loope
cmpsl
push
add
pop
shll
inc
xor
mov
sub
push
push
cmp
movsb
adc
rcrb
jg
or
mov
lds
xchg
sub
insl
add
scas
dec
pop
push
lret
cmpsl
inc
sbb
mov
outsl
das
cmp
out
sbb
cwtl
pusha
js
mov
pop
sti
outsl
dec
dec
mov
sbb
or
pop
inc
jne
xor
shl
mov
jge
sub
and
sub
lods
pop
in
out
xchg
jb
or
or
jl
lods
and
int3
inc
jmp
imul
outsb
push
outsl
adc
pop
fistpll
pop
sbb
loopne
pushf
lcall
or
add
or
repnz
mov
cli
in
imul
jg
xor
loopne
loop
sub
inc
fnstenv
push
and
movsl
pop
and
inc
cmp
or
cmc
shrl
mov
lods
repz
pop
inc
xchg
shrl
xor
nop
mov
ss
int3
lods
scas
into
xchg
fistpl
or
rolb
lret
cmc
xor
pop
mov
or
mov
int
pop
inc
ljmp
mov
cmc
repnz
shlb
mov
fdiv
jecxz
adc
and
stc
pop
push
mov
push
lods
jecxz
adc
mov
push
int3
jg
rorl
mov
int
cli
insl
and
into
imul
ds
cmovge
sub
cmc
push
lcall
inc
and
sbb
push
xchg
jno
popa
insl
int3
scas
push
xlat
shlb
adc
imul
sar
sub
sub
test
or
sbb
sti
or
mov
lods
jecxz
hlt
repz
mov
testb
int
bnd
sbb
pop
dec
call
xor
jb
sahf
xchg
xor
jb
iret
dec
mov
and
cwtl
mov
insl
loop
xor
fnsave
enter
push
cld
push
adc
popa
push
fstpt
pop
jb
ja
out
xchg
lea
dec
loop
inc
jmp
jg
mov
jne
sub
sbbl
mov
add
cwtl
bound
mov
push
sahf
sbb
es
mov
add
xchg
sbb
loope
outsl
loope
cmp
jae
enter
fwait
out
dec
mov
adc
fsubrs
xchg
cmp
arpl
sub
scas
inc
pop
and
into
iret
xchg
cmp
fdiv
jne
cwtl
jmp
adcl
enter
mov
inc
push
add
in
pop
cmp
sub
jb
in
ret
mov
sub
add
xor
lods
cmp
dec
sbb
hlt
insl
jb
jae
out
jb
mov
push
imull
stos
push
xchg
sub
ds
jmp
test
dec
call
xchg
test
lods
sbb
aam
arpl
lods
and
fsubs
hlt
adc
inc
shr
mov
int3
pop
sbb
mov
inc
mov
fstps
push
jmp
idivl
or
mov
sub
add
fcompl
xor
xor
and
mov
jg
sub
rcll
push
inc
sbb
mov
shl
inc
imul
loop
mov
add
mov
pop
pop
and
dec
mov
or
negl
pop
push
mull
imul
mov
cmp
adc
inc
xor
mov
dec
cltd
fld
push
sub
adc
call
mov
das
sbbb
xor
in
aad
movsl
test
dec
push
lods
adc
mov
push
test
fmull
xor
sub
fstpt
cmpsb
mov
je
xchg
fcomps
in
roll
cmp
xchg
inc
add
je
leave
mov
outsb
ret
push
push
inc
jecxz
lods
sbb
in
cs
cwtl
xchg
cld
fptan
fucomi
jns
push
lret
mov
movsb
aas
addr16
flds
xchg
decb
mov
in
enter
jecxz
clc
inc
fisubs
mov
aaa
sti
sub
jecxz
inc
add
sub
pop
xor
add
scas
sbb
mov
dec
lods
cmp
or
fsub
test
repz
push
xor
loope
sub
cmp
ret
dec
cmpsb
inc
mov
mov
pusha
cs
shlb
jno
leave
test
sbbl
push
movsl
lret
arpl
xor
loopne
sub
xchg
or
pusha
hlt
and
je
jle
xor
dec
fldcw
mov
lret
push
push
mov
scas
xchg
in
arpl
mov
lret
movsb
fcmovbe
xor
insl
fisttpl
div
xchg
adc
jno
sub
stos
sahf
jecxz
sub
pop
and
xchg
pop
mulb
add
push
xchg
sub
xchg
cld
loopne
inc
fimull
lret
xor
je
mov
incl
mov
adc
stos
inc
mov
sti
lds
aaa
sti
lcall
pop
std
or
shr
in
out
pop
mov
rcrl
mov
jp
adc
pop
out
pop
xor
cltd
pop
dec
jmp
push
xor
fidivl
mov
loopne
jnp
push
sub
mov
push
adc
rcr
dec
mov
xchg
jne
sbb
mov
mov
or
stos
and
pop
add
test
imul
add
loopne
pop
shl
dec
aam
mov
dec
xor
nop
xchg
icebp
cmp
dec
fisubrs
jae
ret
xor
or
mov
mov
fcoml
loop
movsb
mov
mov
push
jle
icebp
mov
icebp
aas
out
push
dec
dec
lret
pop
aaa
pop
lea
stos
mov
cmpsb
sub
jp
jno
adc
jo
or
lock
addr16
sbb
orb
mov
lods
movsl
xor
aas
out
test
cmp
or
lods
mov
dec
pop
push
mov
js
cwtl
js
fildll
xlat
hlt
shll
sub
inc
cmpsb
sub
mov
inc
inc
cmp
adc
fmull
das
cmp
mov
sbbl
cmc
stc
shrl
mov
sbb
ss
into
xchg
push
js
jl
jns
add
jecxz
jb
pop
mov
test
jg
ljmp
add
out
pop
sub
sbbl
mov
ja
mov
pop
cmp
add
in
jge
cmp
roll
xchg
leave
jnp
sbb
jmp
leave
jmp
inc
cld
push
roll
xchg
mov
fwait
inc
lea
negb
sbb
mov
pop
and
dec
prefetchnta
and
scas
cltd
nop
xchg
out
daa
push
pop
ret
cmp
jae
in
lea
push
jmp
je
lods
cld
js
push
jnp
mov
iret
fdivrl
xchg
sub
cli
into
push
and
rorb
cld
fstps
mov
adc
xchg
loopne
and
inc
repz
mov
push
ja
test
xor
sub
hlt
or
inc
pop
xor
mov
inc
xor
push
jmp
add
push
or
push
repz
sahf
fistpl
lock
loop
pop
jle
adc
adc
add
xor
call
bound
fcoml
fisubs
andb
dec
in
sub
out
jmp
mov
arpl
inc
cmc
xlat
inc
pop
xchg
xlat
add
push
mov
xchg
pop
jo
fsubs
ret
test
pop
cmpsb
ja
pop
out
push
stos
mov
scas
rcrb
mov
rol
xchg
ret
mov
out
mov
dec
orl
arpl
lea
adc
rclb
jecxz
dec
mov
sub
scas
cmc
rcrl
sbb
jmp
xor
sbb
or
test
mov
lret
push
sbb
inc
lcall
pop
loope
lds
out
fs
mov
lods
imulb
incb
inc
test
loope
and
pop
sub
pop
xchg
xorb
testl
aas
flds
mov
jecxz
imul
xor
xchg
out
addr16
jecxz
cmp
inc
adc
sbb
and
cli
mov
sbb
in
jp
ret
js
jne
inc
sarl
mov
cmp
jbe
xor
fisubrl
push
cmp
clc
push
ljmp
nop
into
pushf
mov
pop
dec
push
or
ret
sbb
pushf
repz
inc
fisubs
loop
dec
jle
cltd
mov
mov
or
mov
test
add
orl
sub
add
inc
in
test
mov
insl
pop
push
inc
pop
pop
cmp
lea
bound
rcrl
xor
mov
cmpsl
sub
out
outsl
icebp
sarl
dec
jp
pop
aaa
testb
js
rcl
mov
movsl
int
call
movsb
jmp
fcomps
sbb
lcall
ficoml
or
or
dec
frstor
int
push
pop
and
jp
push
xchg
arpl
ss
push
ret
push
mov
insb
stos
dec
std
cmp
xchg
inc
jle
out
mov
mov
jecxz
xchg
mov
add
cld
loopne
insb
scas
scas
popf
outsl
sahf
test
add
adc
mov
add
push
adc
sbb
out
xchg
outsb
stos
je
sbb
in
ret
mov
adc
setnp
ljmp
cmpsl
xor
cmp
dec
push
out
lods
cs
or
inc
dec
test
pop
scas
adc
adc
inc
and
cltd
cmc
movb
xchg
loope
fwait
push
pop
pextrw
jnp
add
movsb
xchg
mov
push
lahf
jb
leave
cmc
imul
or
scas
xor
jecxz
std
dec
idiv
aam
push
pop
or
mov
sbb
dec
or
mov
ret
push
adc
aad
cmp
insb
xchg
ret
in
mov
mov
test
pusha
mov
add
loope
js
sbb
cmp
jb
int
sub
sbb
push
test
push
es
das
insl
lret
inc
pop
imul
sbb
lcall
pop
pushf
pop
lahf
lahf
fsubl
lods
fisttpll
mov
xchg
cmp
movsl
ljmp
popf
ficomps
fnstcw
mov
int3
lcall
in
push
call
push
mov
jne
dec
stos
inc
mov
popf
or
jo
push
fildll
shlb
jb
in
stos
cmc
dec
aas
or
test
jns
or
push
dec
jno
xchg
imul
loope
or
add
jae
imul
or
sbb
mov
leave
mov
or
xchg
or
sub
leave
lret
es
in
adc
ss
insl
out
out
xchg
dec
pop
dec
jno
pusha
sti
mov
in
jg
mov
push
cli
push
or
out
sbb
adc
inc
or
lret
xchg
adc
enter
lock
pop
loop
std
and
frstor
xor
fdivl
lods
pop
insl
rorl
push
mov
fisubrs
adc
leave
outsl
dec
add
ret
adc
xchg
sub
lock
in
mov
jmp
mov
or
push
outsl
push
jbe
fnstcw
xor
inc
xchg
leave
js
dec
mov
mov
sbb
inc
out
and
add
insb
or
add
scas
les
fidivs
out
ljmp
fldl
cwtl
push
test
not
inc
test
push
pop
sbbb
push
inc
daa
rcl
lods
rcrb
pop
push
nop
jns
cmc
popf
sbb
and
hlt
lcall
mov
xchg
icebp
jns
mov
mov
test
stos
mov
push
jg
push
dec
jae
lods
mov
add
xchg
mov
daa
mov
pop
push
iret
jmp
sbb
xor
popa
dec
lock
adc
jmp
jb
dec
rclb
and
cmp
inc
xor
jmp
xchg
movsl
loop
push
les
stc
mov
popf
jmp
inc
xor
dec
lret
aad
sahf
jnp
and
jmp
daa
xchg
mov
jb
lret
cmpsb
inc
out
or
out
jl
and
call
repnz
dec
push
push
xor
cmp
push
cli
jne
push
xchg
std
mov
insb
xor
scas
sub
out
mov
cltd
rorb
in
sbb
mov
or
loopne
cmp
scas
inc
in
lret
xchg
jb
push
int3
jne
les
xor
xor
cmpl
adc
adc
push
dec
loope
test
loopne
mov
adc
pop
jp
ss
ret
mov
push
shll
mov
test
pop
insl
jecxz
fcoms
or
test
fistpl
sahf
popa
xchg
bnd
in
mov
add
fmull
in
mov
push
shrb
sub
inc
cmpsl
xchg
jmpw
xor
mov
mov
out
sti
and
stc
mov
ficoms
jmp
cli
call
adc
rcrb
lcall
aam
mov
dec
mov
roll
clc
lds
fwait
ljmp
das
fs
push
dec
sub
inc
sti
or
mov
andb
std
lock
jbe
xor
stc
sbb
adc
aas
add
into
mov
in
mov
and
out
stos
cmc
lock
ficoml
adc
je
pop
mov
push
cmpsl
into
cmc
stos
xchg
jae
jmp
adc
dec
xor
fnstcw
mov
inc
cmp
inc
ffree
xchg
sbb
mov
stos
stc
pop
loopne
mov
dec
leave
in
test
scas
sahf
mov
cmpsb
push
sahf
orb
std
fidivs
rcrl
push
lret
pushf
sub
jp
cmp
in
sub
xchg
and
ret
idivb
pusha
test
cli
adc
mov
repnz
lcall
push
mov
push
mov
sub
mov
stos
in
inc
out
pop
cmp
xchg
push
xchg
in
xor
mov
ss
xlat
gs
push
or
adc
add
jg
push
jg
add
test
call
mov
cltd
nop
xchg
pop
aad
pop
dec
dec
loopne
xchg
sub
dec
xor
push
cmp
jb
push
cmc
dec
pusha
xchg
ljmp
jecxz
push
pop
insb
aad
mov
imul
and
sahf
xlat
inc
bound
movl
pop
cwtl
or
ret
mov
adc
inc
stos
mov
cmpsl
xchg
pop
shll
js
das
in
sub
inc
pop
stos
or
cmc
xor
xor
nop
ret
mov
xor
in
mov
jmp
sub
sub
xchg
aaa
cmpsb
in
cmp
aaa
cmp
adc
mov
nop
push
or
jl
mov
mov
push
ficomps
push
or
dec
sbbl
pop
dec
dec
stc
lret
mov
clc
xor
cwtl
decl
je
fwait
push
mov
sbb
and
rcrb
int3
jne
es
movsl
ret
mov
out
adc
hlt
popa
xchg
or
cli
out
xor
xor
lret
fsubrs
xor
data16
sub
loop
adc
ret
lea
sbb
stos
mov
sbb
in
mov
push
stos
cmp
stos
push
jmp
and
mov
clc
sbb
adcl
sub
fwait
int
pop
sbb
adcb
shl
cmp
mov
xchg
add
popl
repz
dec
out
iret
sbb
stos
cld
add
bound
xor
xchg
cld
sub
test
pop
ret
adc
bound
stos
adc
scas
xchg
lret
divl
add
fcoms
insl
pop
aaa
imul
dec
cmp
popa
adc
push
dec
in
adc
push
adc
sbb
jo
cmova
pop
imul
jne
popa
add
lret
jne
pop
cmc
andb
test
sar
pop
inc
pop
cli
movsb
xchg
cmp
jecxz
sub
lret
lock
cmc
add
sbb
ss
mov
lret
leave
push
adc
loope
mov
sbb
xchg
sbb
add
mov
cmp
iret
cmpsl
dec
or
dec
pop
sbb
aad
cmp
mov
je
ret
pop
test
scas
loop
jp
pop
outsl
mov
xor
addr16
out
jbe
pop
mov
fcoml
xchg
cmp
lahf
outsb
imul
cmpsl
lret
sbb
repnz
push
mov
out
mov
mov
repnz
in
add
test
enter
push
subl
ja
jge
fwait
cmc
mov
or
call
sub
repnz
push
sbb
mov
lret
out
fwait
push
fmuls
rcll
xchg
add
push
adc
mov
pop
push
xchg
push
pop
mov
xchg
insl
xor
xchg
sbb
and
inc
out
fs
in
fsubp
repnz
scas
add
gs
mov
fs
and
mov
xchg
pop
pop
push
jno
pop
cwtl
push
fwait
sbb
das
addl
ljmp
cmpb
push
lret
adc
sti
sub
mov
enter
addr16
shlb
imul
dec
xor
xchg
lds
pop
xchg
in
mov
out
inc
and
mov
cltd
xchg
adc
cmp
push
nop
movsl
sbbl
popa
push
fists
mov
inc
mov
mov
pop
xor
stos
sti
jp
or
sbb
dec
sub
dec
pushf
or
push
mov
or
or
fiadds
sub
sbb
mov
js
push
aaa
lods
mov
das
jno
pop
mov
stc
shlb
push
push
jmp
xchg
mov
lea
scas
stc
sub
xchg
andb
jecxz
jg
inc
add
addl
jbe
cmp
jb
jmp
std
sbb
outsb
fidivl
ss
scas
xchg
and
popa
std
pop
dec
xor
mov
pop
dec
lret
pop
push
icebp
sahf
add
pop
adc
mov
adc
into
int3
mov
xchg
popl
and
mov
sub
pcmpeqb
jb
pop
or
imul
mov
nop
lock
loope
out
rclb
jl
xchg
fldcw
xchg
jg
pop
adc
aam
rclb
dec
jnp
sbbl
adc
cli
pop
mov
pop
sub
js
pop
adc
imul
pop
inc
push
mov
add
or
dec
in
ret
rorb
es
movsb
jmp
mov
shrl
aaa
sbb
negb
and
mov
inc
add
add
das
ret
ss
iret
xchg
lcall
push
inc
jge
clc
cwtl
jmp
cmp
or
push
mov
push
mov
addr16
int3
xlat
lea
stos
adc
movsb
js
cld
stos
jle
iret
movsb
jae
fcoml
out
and
xchg
test
mov
repnz
jbe
mov
push
sahf
negl
lock
call
push
fbld
add
sub
jg
rolb
lock
nop
push
push
push
inc
arpl
xor
mov
ret
std
outsl
sbb
mov
or
enter
cmpsl
repnz
mov
outsb
jmp
jg
in
mov
dec
data16
psubb
jbe
mov
les
sbb
shll
pop
xchg
cs
ficoml
enter
loopne
mov
je
ds
or
jae
int3
call
sub
nop
cmp
int3
or
add
pop
aas
cmp
xor
cmp
adc
sub
cmpsb
sbb
jae
call
and
mov
pop
lods
fdecstp
loope
div
jge
jl
lret
filds
and
mov
dec
lret
int
xchg
jo
pushf
loope
out
mov
daa
test
push
or
mov
jne
jge
cmpsb
lret
mov
lahf
or
jb
mov
fmul
jae
loopne
movntq
out
std
gs
dec
mov
testl
shlb
sub
mov
cmp
inc
lret
pop
les
jne
es
outsl
ret
add
nop
xor
cmp
jle
pop
orl
ret
cli
div
jne
push
into
inc
push
mov
push
jecxz
sbb
sar
push
cli
fbld
lret
fisubs
and
cmp
xchg
push
pop
dec
popa
lahf
in
lock
dec
jecxz
ja
mov
ss
mov
rcr
or
test
scas
call
or
or
pusha
das
sub
mov
out
addr16
jae
jae
and
xor
addr16
push
cmp
sbb
xchg
data16
stos
mov
pop
xor
sbb
in
test
sub
sub
repnz
push
into
mov
cmp
jo
ret
test
dec
cmp
mov
aaa
mov
mov
faddl
jp
mov
stos
inc
sbb
add
xchg
leave
decl
inc
lret
jmp
shlb
cltd
mov
push
es
jge
jle
out
pusha
mov
dec
cmc
test
inc
mov
test
cwtl
scas
adc
dec
jge
icebp
push
xor
jmp
xchg
insb
jmp
sbb
pop
push
jo
add
jo
push
cmp
cwtl
pop
ret
js
mov
inc
flds
mov
movsb
inc
clc
lret
por
push
lods
xchg
xchg
or
aad
out
or
ror
sti
and
push
fwait
mov
fsubrl
nop
jl
xchg
xor
mov
add
ds
pusha
out
lea
popa
fldl
adc
or
les
ljmp
xchg
mov
aas
orb
inc
leave
xchg
gs
or
dec
jge
outsb
iret
ficomps
jne
pop
les
stos
mov
push
movsb
loopne
xor
lods
cltd
or
stos
jbe
jne
dec
pop
pop
outsl
dec
add
fldenv
hlt
mov
repz
inc
sbb
sti
filds
or
loope
jecxz
ret
in
push
xchg
sbb
aad
cltd
mov
push
out
mov
mov
mov
jnp
cmpsl
lret
add
cwtl
mov
push
mov
xor
movsl
imul
enter
lahf
push
mov
push
enter
xchg
pop
sbb
stc
xchg
out
popa
ret
test
and
test
rcr
and
jecxz
fcompl
lret
push
inc
pop
stos
repnz
in
ficompl
out
dec
pop
stos
int
ret
aad
or
sbb
jmp
sub
movsl
mov
outsl
out
ljmp
mov
scas
adc
in
push
fwait
xchg
adc
mov
xchg
repnz
filds
cmp
xor
lock
js
jecxz
in
and
push
cmpsl
and
out
js
lock
in
arpl
xchg
sbb
test
test
stos
icebp
lods
data16
push
fwait
int3
inc
xchg
push
xchg
test
or
xchg
dec
mov
andl
mov
xor
andb
cmp
pop
pop
addr16
pop
xchg
add
scas
jo
test
negl
cmp
adc
das
and
imul
or
in
test
lods
mov
mov
mov
dec
ljmp
out
push
mov
sti
jg
pop
imul
jecxz
push
jmp
pop
hlt
pop
or
orl
lods
mov
pop
dec
mov
mov
pop
iret
or
addr16
jb
dec
cwtl
pop
inc
jo
cs
rcrb
sbb
mov
add
adc
xor
cmp
fucom
jo
aaa
inc
into
repz
xor
lds
insl
push
pop
ss
cmpsb
movsb
mov
or
pushf
mov
xor
dec
mov
jecxz
lahf
in
xor
jge
push
cmp
outsl
sub
inc
jmp
and
sahf
lds
test
sbb
out
shlb
mov
icebp
mov
xchg
ror
out
mov
mov
rclb
pop
js
movsb
es
pop
loop
pop
in
rorb
pop
test
sub
sbb
fsubrp
mov
stc
xchg
push
aam
sahf
jae
xlat
jle
push
pushf
mov
hlt
xlat
mov
call
lret
call
dec
call
push
sbb
or
push
add
dec
cmp
hlt
ss
in
imul
ror
das
xchg
dec
shrb
dec
xchg
inc
cmp
test
mov
jne
adc
pop
out
jge
xchg
and
cmpsb
lock
inc
sub
call
adc
mov
mov
or
push
dec
mov
loope
hlt
popf
sub
fstpl
sub
cmp
ret
jnp
fidivl
cmp
sbb
xchg
dec
mov
sbbl
xor
andl
mov
addl
add
andl
movzwl
notl
mov
and
mov
movzwl
xor
add
mov
mov
mov
inc
movl
mov
movl
cmp
movl
jne
mov
add
mov
xor
addl
add
mov
or
mov
xor
add
mov
movl
movl
movl
movl
movzwl
mov
mov
jmp
mov
add
mov
sbb
mov
orl
xor
xor
adcl
sub
adc
sub
movl
xor
mov
and
mov
or
mov
lea
mov
orl
mov
movzbl
xor
mov
lea
not
mov
xor
or
adc
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
pushl
pushl
call
cmpl
jb
orl
mov
sbbl
lea
and
mov
and
mov
mov
movl
lea
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
adcl
lea
mov
not
mov
mov
and
mov
mov
sbbl
lea
orl
mov
mov
xorl
xor
sbbl
add
jne
jmp
xor
add
mov
sub
and
mov
subl
mov
xor
orl
xor
sub
sub
xor
mov
mov
mov
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
pushl
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
xor
add
adc
mov
mov
mov
sbb
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
jmp
rcrl
imul
jp
jae
std
popa
bound
bound
sub
adc
int
pop
mov
jmp
in
loop
add
iret
mov
sbb
sbb
enter
mov
ficompl
loope
addr16
dec
cmp
dec
mov
xor
mov
push
popa
jmp
ss
mov
jns
into
inc
insb
cmp
clc
enter
jb
xor
leave
shlb
cltd
shrb
push
sub
outsb
ret
cmp
movsl
or
sbb
lret
sbb
test
testl
stos
mov
inc
dec
push
add
clc
inc
pop
notb
into
xor
and
lea
jnp
stos
lods
fmull
hlt
lret
imul
and
movsl
aad
data16
xchg
lret
jns
xchg
adc
jnp
stos
frstor
fimuls
call
mov
or
dec
pop
sbb
cmp
lods
xchg
fs
cli
sub
fistpll
pushf
cmp
enter
repz
in
cmpsb
jl
fsubrl
mov
in
push
leave
inc
cmpsb
sub
lods
mov
push
sarl
inc
and
jae
cmp
testl
sbb
mov
xchg
popf
jle
lods
imul
rclb
jle
aaa
aam
iret
sub
push
fs
inc
inc
test
ss
lods
and
ds
sti
fs
fsubr
pop
ljmp
pop
cltd
lea
cmp
iret
xchg
psrld
mov
fcomps
addr16
xor
push
fdiv
adc
adc
loopne
xlat
iret
cmp
les
std
push
leave
mov
push
lea
dec
mov
sbb
push
stc
movsl
mov
inc
dec
rol
ljmp
jmp
pop
sti
add
sub
jae
mov
push
in
int3
fadd
fsub
sub
cmpsl
xor
add
cmc
xchg
test
adc
lods
daa
pop
sub
test
sbb
mov
rolb
nop
in
in
addr16
push
std
or
or
xor
push
fadds
negl
das
aam
imul
push
std
in
sbb
sbb
jl
dec
inc
into
leave
insb
std
test
aaa
adc
mov
cmp
xor
xchg
sub
bound
cmp
jns
adc
fs
mov
movsl
push
xchg
pushf
icebp
xchg
inc
enter
cmp
int3
xlat
in
pop
pop
pop
inc
mov
dec
js
jg
inc
iret
fwait
cltd
repz
mov
fcmovnb
ja
aam
lods
addb
jl
sbb
mov
adc
pop
inc
rclb
or
sbb
mov
sbb
mov
mov
js
ret
xchg
pop
dec
and
icebp
lds
cmp
ret
jge
lret
insb
ret
dec
shrl
rcr
fmull
stos
mov
jecxz
sarb
ds
mov
sbb
data16
push
xor
mov
jl
loope
sahf
and
mov
or
jmp
sub
scas
shld
mov
dec
inc
push
push
outsb
jle,pn
scas
in
hlt
js
inc
sub
stc
inc
mov
bound
and
inc
push
adc
mov
mov
xchg
arpl
mov
xchg
es
and
sbb
or
pop
xor
subl
std
xor
push
xchg
scas
mov
es
pop
fwait
cmp
add
and
bound
mov
jle
test
dec
xor
mov
loope
push
mov
mov
rcrl
rcl
movsb
xor
xchg
mov
mov
xor
pop
icebp
call
ss
cmpsb
jmp
shrb
fwait
mov
aaa
lret
scas
dec
jl
hlt
dec
test
mov
jns
les
arpl
fwait
mov
sub
adc
inc
mov
jmp
and
mov
test
sarl
ss
and
ss
add
movsl
and
inc
shlb
icebp
jb
sub
push
mov
fisubs
and
movsl
movsb
add
mov
jmp
xlat
repz
lret
adc
pop
call
rorl
jp
xor
jp
scas
out
cmp
cmp
jp
sti
inc
mov
std
lret
mov
movlps
adc
jg
or
jl
insl
sbb
insb
imulb
inc
add
jo
cmp
xchg
jno
and
xchg
int3
mov
fsub
xor
lds
cld
add
test
adc
aaa
jecxz
jmp
repz
cmpsb
xor
xchg
and
pop
jae
stc
inc
push
jge
jae
test
jp
sbb
pop
shll
fisttps
inc
or
scas
shlb
or
out
jmp
xor
xor
pop
lods
push
push
dec
ds
xchg
lret
insl
dec
sub
jno
cwtl
cmp
or
xchg
or
inc
movsl
pop
sahf
xrelease
push
mov
xchg
repz
rorl
jecxz
mov
ss
mov
push
cmp
add
pop
or
gs
xchg
imul
lds
sub
pop
stos
or
lea
add
mov
sti
in
rcrl
pcmpgtb
aas
stos
fstps
mov
stc
test
ljmp
inc
pop
sub
pop
imul
loop
sbb
inc
mov
push
ljmp
icebp
push
pop
addr16
mov
cmc
mov
sbb
rcl
fdivrl
dec
enter
test
pop
jmp
dec
jne
lods
test
xchg
cmpb
mov
scas
cld
sub
mov
mov
testb
or
cmc
test
inc
rol
movsl
add
fwait
jecxz
data16
ret
xchg
sbb
add
add
pop
aas
lret
push
pop
mov
in
ret
jo
out
rcrl
push
jns
add
sbb
sbb
and
movsb
pusha
divl
mov
scas
fadds
jg
or
push
ret
add
jl
je
imul
fsub
outsb
dec
dec
fmuls
in
xor
or
xor
inc
mov
std
mov
imul
shll
fcompl
or
aaa
call
test
cli
fwait
ret
leave
imul
lret
mov
xor
aam
mov
adc
das
cmp
loope
inc
je
not
loopne
insb
fwait
and
arpl
mov
mov
pop
notb
add
lret
nop
push
daa
call
pushf
inc
mov
jne
dec
push
mov
test
movsl
mov
add
pop
dec
dec
mov
mov
mov
push
xchg
push
and
out
ljmp
hlt
or
cmc
and
fs
arpl
test
cmp
push
into
push
sbb
jae
lds
sarb
mov
cmp
mov
cld
jo
pop
add
les
or
mov
cltd
lret
out
popa
pusha
xor
jmp
ret
enter
and
shlb
inc
and
sbb
pop
jg
insb
repnz
jae
mov
inc
sub
mov
jns
xchg
or
jnp
mov
jns
ret
mov
jp
test
or
gs
mov
sbb
dec
mov
cld
movsb
push
mov
cmp
jno
jnp
sbb
mov
gs
mov
lret
mov
or
movsb
sub
sarb
and
lea
movsb
adc
cmc
sti
adc
xlat
cmp
sbbl
imul
incl
jle
xchg
push
mov
mov
cmp
xchg
lahf
dec
or
addr16
rclb
data16
push
and
scas
test
test
in
inc
test
sbb
or
je
popa
ja
xor
das
sbb
cmpsb
sahf
aaa
fidivrl
fdivrl
xchg
xchg
mov
sub
add
insb
mov
xchg
cwtl
pop
mov
dec
cltd
or
sub
cwtl
rclb
inc
movsl
mov
enter
sub
mull
out
xlat
mov
mul
adc
in
cmpsl
xchg
jecxz
cmpsb
add
jge
xchg
dec
xorps
push
pushfw
pop
adc
mov
push
sub
or
sbb
push
std
jno
fnstsw
mov
outsl
push
lret
in
adc
cwtl
insl
sub
and
dec
add
enter
mov
leave
mov
out
subb
stos
or
add
adc
nop
ret
jae
scas
ret
sti
cmp
pop
mov
sbb
jb
cwtl
push
push
rcrb
push
aam
xchg
fdivs
movsb
out
lea
jmp
mov
mov
loopne
mov
les
repz
insl
mov
pmaxub
dec
mov
repnz
mov
es
lcall
mov
test
lahf
sub
mov
nop
inc
leave
add
or
out
push
lret
cmp
mov
jecxz
mov
out
cmpsl
push
sbb
rep
fists
sbb
sub
out
mov
lea
push
mov
xchg
mov
xor
mov
mov
inc
mov
sbb
cmpsb
shlb
adc
inc
jne
pop
repnz
and
pushf
jne
in
adc
fs
shlb
adc
stos
dec
loop
xor
into
inc
or
in
mov
pop
test
and
xchg
lods
jae
push
dec
dec
decl
addr16
aaa
mov
cmp
mov
pop
jns
gs
addr16
int3
cmp
and
ret
inc
dec
mov
dec
pusha
daa
rorb
xor
loop
xor
lcall
lcall
dec
cwtl
and
mov
dec
adc
std
clc
pop
out
popa
inc
fisttpl
test
push
test
iret
int
lods
pop
add
imul
sti
cli
out
xor
imul
add
xor
mov
dec
andb
ds
push
xchg
repz
mov
jmp
pop
jg
and
cmpsb
out
lods
movsb
repz
push
clc
mov
jb
bound
fld
mov
mov
add
mov
pop
outsb
mov
test
faddl
addr16
jg
and
out
data16
and
jecxz
outsl
loop
cmpsb
push
ljmp
stos
sahf
sub
popa
pop
adc
xor
jae
mov
vcmpps
sub
sub
xlat
push
test
mov
sbb
jno
cmp
test
fisubrs
push
fnstsw
mov
xchg
gs
push
inc
cmc
dec
stos
adc
aad
add
aas
subl
xor
cmp
cmp
inc
cwtl
lods
js
aaa
rorl
adc
mov
xchg
arpl
inc
fcoms
in
aad
cmc
pop
inc
int3
adc
mov
and
les
and
out
stos
lret
movsl
imul
int3
sbb
xor
lahf
out
mulb
cli
xchg
push
push
mov
add
movsl
xchg
xor
push
lds
js
mov
xchg
xchg
nop
aad
lock
sub
test
mov
sbb
jb
ljmp
pop
jne
iret
fsub
pusha
loope
add
push
call
pop
and
rcr
shlb
mov
jbe
push
lea
and
xchg
xchg
or
xor
cmp
jl
and
jnp
fimuls
std
pop
pop
mov
mov
sub
and
push
xchg
push
pop
push
movsb
loope
xchg
cmp
fisubs
pop
pop
pop
mov
xor
sbb
cmp
fimuls
inc
mov
nop
outsb
aaa
ljmp
or
addb
cmpb
add
cmp
out
pusha
test
mov
cmp
sbb
mov
pusha
mov
add
mov
mov
inc
les
push
out
sub
pop
xchg
loop
cltd
ret
push
and
xchg
pusha
lret
lret
jne
fstpl
xchg
and
shll
aas
dec
adc
jle
mov
inc
lea
mov
ds
jge
push
dec
jns
lea
adc
dec
mov
popf
data16
fs
mov
pop
fld
test
push
in
xchg
rcr
in
or
sahf
jle
icebp
popf
inc
mov
add
mov
add
mov
lods
sbb
hlt
pop
pusha
sub
stos
adcl
fisubl
adc
mov
rolb
adc
insb
mov
lods
dec
push
lds
lods
xchg
lea
lods
and
ds
dec
xchg
sar
popa
jle
sub
ljmp
cltd
inc
inc
insl
repnz
push
push
idivb
pop
movsl
lock
jbe
cmp
es
cs
mov
out
sbb
daa
into
shrb
and
in
xor
out
cmpsl
test
mov
js
pop
and
mov
js
sub
jle
lods
stc
ret
and
aad
dec
adc
jg
subps
push
sbb
arpl
cld
jle
cltd
aam
jae
cmc
xor
jb
pusha
shll
sub
mov
cmpl
mov
cmp
rcll
test
cmpsb
adc
push
std
cmpl
mov
jg
sarl
mov
cwtl
mov
push
jnp
mov
popa
jns
pop
jl
clc
inc
cmc
mov
lds
jmp
add
sarb
mov
mov
mov
es
jne
lret
adc
ja,pn
mov
popa
jmp
mov
jae
mov
insb
scas
lret
jmp
sub
mov
xchg
push
sub
and
xor
aam
sbb
adc
cmp
into
push
add
inc
fcmovnbe
or
or
xchg
or
pop
imul
sub
loop
es
mov
mov
jecxz
push
xchg
inc
lret
lds
fwait
xchg
stos
test
fwait
push
repz
xchg
sarb
into
mov
insb
and
adc
in
push
repnz
mov
xorb
fcomps
jae
aaa
shl
loopne
repnz
pusha
inc
pop
xchg
xor
dec
imul
rorb
bound
fiadds
pushf
sub
ret
push
cmp
arpl
cmpsl
or
xor
lahf
or
sub
jbe
int
cli
test
push
push
sti
xchg
in
or
lods
sbb
mov
xchg
adc
je
sbb
mov
mov
js
xor
pop
rcll
pop
aaa
add
movsb
xchg
inc
sahf
pop
mov
lea
adc
ds
pusha
mov
ja
jge
xchg
mov
pop
add
sarb
enter
es
inc
lahf
mov
dec
or
stc
mov
jmp
sbb
xchg
out
jmp
mov
insl
jb
movb
and
bnd
push
push
les
jmp
stos
push
lea
outsl
sub
or
lret
dec
pop
sbb
test
and
stos
popa
mov
movsl
int3
cmpsl
sarb
lret
sub
hlt
sbb
pop
cmp
jns
inc
loop
push
inc
lret
and
in
loopne
xor
jb
cld
cmp
xchg
movsb
dec
sub
andb
inc
jns
aaa
das
dec
adc
int
adc
bts
call
fcompl
cmp
pop
ljmp
je
inc
repz
ret
repnz
iret
xor
rorl
fwait
in
pop
decl
dec
fiaddl
or
xlat
mov
out
sub
xchg
jp
mov
adc
cmpb
push
test
lcall
jmp
add
inc
scas
sbb
xchg
cmp
cmp
fadd
out
les
into
bound
outsl
dec
sar
fdivs
loop
push
ret
push
xchg
lods
mov
sub
icebp
and
clc
loop
push
test
cmp
cmp
pop
in
fistpl
popf
sarb
mov
push
aad
loope
xor
inc
sub
sub
out
push
pop
lcall
xor
sbb
and
cmp
and
test
xor
repz
inc
sbb
mov
xchg
mov
sbb
and
add
lcall
insb
js
lret
mov
scas
jmp
cmpb
dec
dec
xchg
lods
jns
cli
lds
xlat
shl
adc
mov
ljmp
sub
loop
jge
push
hlt
mov
movsl
addr16
lea
ret
mov
or
fcomip
fnsave
xchg
sarl
xor
jae
stos
fisttpll
mov
mov
rorb
cmp
sub
or
mov
imul
cmp
lds
movsl
or
data16
mov
jae
scas
sbb
ja
std
dec
popa
loope
sub
sbb
mov
jp
je
aam
xchg
xchg
rcrl
hlt
aaa
lods
adc
push
mov
out
ret
shl
mov
jae
leave
and
out
add
loop
cmp
pop
pushf
xor
mov
and
xor
xlat
mov
adc
cwtl
in
cli
dec
mov
movsl
cmp
jnp
fstpl
xchg
lock
dec
repnz
and
std
mov
lds
leave
icebp
popf
movsl
add
push
outsb
or
mov
adc
xor
imull
and
mov
adc
xchg
dec
jge
xchg
insb
rol
xor
outsb
push
or
and
xchg
mov
pop
scas
js
insl
xchg
fmul
pop
js
std
rcrl
push
fbld
mov
testl
mov
pop
movsb
or
mov
adc
int3
push
lods
movsb
push
ds
pop
and
rcll
mov
jle
pop
or
and
or
adc
jmp
xchg
xor
mov
loope
xor
adcb
mov
push
lahf
int3
push
pop
dec
sub
outsb
aas
mov
sbb
clc
lea
sahf
arpl
rcll
push
mov
lret
lock
xchg
into
adc
cltd
mov
lock
ljmp
es
jno
insb
arpl
insl
in
ds
push
mov
push
mov
fcmovnu
rep
cs
sbb
cmpsl
sub
js
cmp
dec
rolb
pushf
sub
lret
out
inc
push
inc
cmp
mov
js
imull
movsl
cmp
cmp
roll
push
mov
dec
cmpsl
mov
xor
jle
mov
aaa
pop
sbb
xor
cs
jge
jno
mov
mov
mov
inc
sbb
mov
inc
popa
out
xor
mov
cwtl
and
cmpsl
inc
arpl
dec
ficompl
je
ret
or
mov
pop
mov
dec
sub
push
push
aas
out
fcmovnu
aam
test
push
push
not
cwtl
lcall
addr16
ret
lock
jne
cmc
cmpsl
iret
sbb
xor
cmp
out
incb
pop
hlt
fnsave
or
jp
sub
jne
push
sub
sbb
mov
jecxz
insl
xchg
je
mov
push
cwtl
cld
popf
cmc
in
push
pop
cwtl
hlt
aas
hlt
push
jl
mov
mov
push
mov
pusha
jb
arpl
mov
lods
ret
insb
hlt
pop
sub
outsb
dec
lret
outsl
pusha
dec
cmp
icebp
pushl
push
enter
pusha
push
lret
inc
lods
bswap
cmp
das
punpckldq
pop
or
ss
iret
adc
mov
loopne
pop
push
mov
mov
dec
push
daa
xchg
add
fsubrl
and
testb
dec
adc
icebp
mov
hlt
jg
ljmp
lret
push
mov
dec
popa
xchg
repnz
mov
rcll
sub
or
jo
or
fdivs
mul
js
adc
sub
pushf
out
aad
mov
and
icebp
sbb
fiaddl
int
add
das
mov
shlb
fwait
mov
test
xchg
dec
mov
mov
jnp
aas
clc
dec
push
mov
fisubl
int
test
aas
xor
sub
sbb
fcomp
out
fdivrl
popf
dec
mov
shll
bound
test
mov
inc
sti
test
adc
roll
dec
popa
and
insl
xor
orl
xchg
pop
or
andps
out
jnp
jo
inc
mov
sbb
cmp
dec
fsubrs
sahf
lock
push
xchg
iret
xchg
rorl
fisubrl
and
es
push
ret
push
push
inc
xor
pop
out
mov
push
je
sbb
push
xor
xor
mov
cs
int3
popa
pop
pop
jae
jg
lock
xchg
pop
mov
jle
xor
mov
rorl
je
popf
mov
fsubs
xchg
popf
push
mov
sbb
inc
jb
test
jp
ss
mov
cmp
xchg
jl
push
xorb
jmp
adc
test
shl
clc
cli
mov
sbb
pushf
lcall
in
inc
cli
mov
inc
push
popa
or
adc
mov
ret
cld
pop
add
dec
test
and
xor
rcll
jmp
gs
repz
hlt
inc
xchg
les
adc
loop
jb
lea
test
paddsb
insb
rorb
test
pop
shrl
xor
dec
mov
aad
pop
scas
data16
or
push
test
dec
pop
stos
pop
sbb
outsb
cmp
ss
popf
cmpsb
xor
lea
mov
lea
pop
inc
cmp
push
test
shrb
xchg
das
xchg
sbb
pop
fsub
out
add
push
dec
mov
jle
ljmp
out
inc
dec
cmp
mov
cs
mov
add
scas
popf
int3
enter
mov
push
stos
cmpsb
stc
cmp
sahf
addl
es
lea
fstpt
repnz
xchg
jae
and
out
inc
adc
push
jecxz
pop
jle
push
les
hlt
fidivs
jb
inc
and
fsubs
inc
imul
movsb
add
mov
sbb
push
orb
call
xchg
xor
dec
mov
imul
incl
jp
add
dec
sub
cmp
push
test
loopne
pop
int3
and
rcrl
fisttpl
test
xor
lcall
mov
jecxz
or
ljmp
and
dec
sti
adc
fsubl
xchg
imul
imul
dec
mov
mov
xor
mov
aad
rcr
jnp
inc
push
stc
jns
test
cmpsb
inc
pushf
xchg
sub
cmc
xchg
cmp
jecxz
iret
add
adc
jbe
mov
xlat
and
and
leave
enter
mov
sub
mov
push
repz
into
loop
subl
or
lret
pop
in
jbe
out
dec
addr16
mov
xor
xchg
sbbb
clc
jns
sub
subl
in
outsl
push
out
jnp
mov
ret
adc
negl
xchg
fists
hlt
or
sbb
pop
and
sub
mov
lods
mov
lds
pop
rclb
cli
bound
sar
mov
pop
mov
add
sub
push
add
mov
imul
inc
jmp
inc
add
lock
lods
adc
add
cld
lods
pop
test
mov
scas
pop
pop
leave
sahf
inc
mov
jmp
clc
imulb
add
out
dec
dec
scas
stc
mov
sarl
jl
rclb
adc
mov
sahf
por
ljmp
lret
lods
in
lahf
ds
cmp
lret
dec
nop
pushf
std
mov
jp
lahf
dec
jns
mov
inc
je
icebp
xor
adc
mov
fadds
insl
das
xor
and
inc
add
mov
in
inc
js
rcrb
add
pavgw
xor
push
push
sbbb
xchg
or
fs
pusha
aam
jns
mov
xor
mov
mov
xchg
mov
mov
ret
cmp
lret
mov
xchg
int
xchg
cmpsb
jne
cmp
loopne
movb
popf
cs
mov
xlat
stc
stos
adc
sub
and
mov
icebp
sbb
test
fbstp
enter
push
lods
push
mov
rclb
sahf
ds
outsl
mov
jmp
jge
inc
sub
mov
mov
or
sub
xor
jp
ficomps
pop
xor
insb
lods
repz
in
pop
mov
ja
push
cwtl
xchg
or
sub
std
mov
rcll
mov
push
outsb
jecxz
insl
mov
out
xchg
jbe
test
cmp
and
pop
das
inc
jmp
je
mov
lods
jae
inc
inc
xchg
xorb
les
cmp
jnp
inc
cwtl
iret
clc
stos
lret
inc
pop
jnp
sub
jne
leave
or
push
cmc
sbb
testl
push
pop
loop
in
jnp
mov
stc
push
jae
sub
xor
test
nop
ret
shl
cli
or
adc
add
cmpxchg
push
adc
addb
push
in
sbb
push
push
xor
fnsave
sub
xor
mov
jl
insl
xor
xor
test
addb
loope
dec
shrb
scas
xlat
xchg
std
into
out
add
xchg
xlat
mov
push
mov
dec
or
sbb
sub
sub
gs
fsubrl
push
cli
outsb
xchg
pusha
shll
cmp
and
cli
mov
sti
iret
popf
adc
jmp
xchg
mov
ss
cmc
mov
and
inc
inc
adc
jge
cmp
xchg
imul
mov
aad
push
movsl
push
mov
xchg
push
xchg
add
xchg
xor
xchg
pop
mov
add
jge
cmp
xor
jle
mov
testl
or
fdivrs
jg
addl
test
push
int
inc
std
mov
xchg
aaa
popf
mov
leave
xor
xchg
jbe
jns
sahf
sbb
sti
xor
leave
xchg
les
lcall
jae
lock
add
push
mov
jmp
and
mov
insl
pop
stos
lret
mov
repnz
lds
dec
pop
jns
cmp
call
cmpsl
fstpt
dec
test
add
cmp
push
jg
mov
sbb
mov
test
push
mov
in
xchg
push
pop
mov
mov
jge
cmp
bound
mov
xchg
sbb
lods
es
cmp
dec
popa
dec
push
inc
lea
push
and
and
and
sti
inc
xchg
insl
mov
ljmp
jnp
jge
inc
dec
mov
lcall
jmp
and
icebp
add
notb
dec
jb
pop
fsubrl
pop
insb
movsl
adc
push
imul
scas
adc
scas
pushf
and
add
push
xlat
loop
and
js
andl
stos
jg
dec
adc
push
mov
dec
mov
mov
add
jl
or
ret
scas
lds
and
jbe
data16
movsl
lcall
mov
jae
pop
cmp
movsl
push
push
popa
dec
mov
popf
fnstsw
jno
dec
dec
cmp
sbb
fnstenv
jge
mov
push
pop
je
mov
insl
nop
push
dec
stos
fstps
out
fcmovne
push
xor
loop
mov
mov
dec
in
outsl
pop
rol
aaa
jo
imul
sahf
xchg
test
inc
fcomps
jb,pn
or
aas
bndldx
arpl
push
or
mov
je
push
adc
push
push
xchg
scas
xchg
cmc
aaa
xchg
push
ds
xchg
shr
cmp
adc
repz
dec
imul
sahf
cwtl
repnz
cmp
pop
or
imul
jecxz
fsts
outsb
cmpsl
lods
enter
mov
insl
dec
hlt
jg
popf
mov
cmp
mov
lret
push
sub
fucomip
and
test
sub
xchg
mov
outsl
and
inc
adc
fsubrs
cs
scas
dec
adc
call
fsts
arpl
mov
andl
imul
xchg
jl
and
in
ret
mov
in
stc
push
cmp
push
or
and
pop
aas
dec
cld
fstpl
add
add
ljmp
mov
push
mov
or
je
sub
mov
adc
test
inc
cmp
sbb
mov
sarb
cmc
mov
mov
adc
stos
into
jg
dec
add
xchg
or
cmp
je
idivb
sbb
fsub
loopne
dec
and
addr16
stos
xor
inc
fs
add
aad
xchg
xor
mov
inc
or
jle
xchg
test
jns
sbb
cmpb
fwait
adc
xor
shlb
sti
mov
pop
inc
out
imul
xchg
sbb
pop
sub
jno
iret
xor
push
mov
dec
xor
xchg
cli
xchg
pop
push
xor
cmpsl
xchg
sbb
lods
rclb
repz
jae
sbb
xchg
or
je
pop
pop
in
adc
fbld
adc
fidivrs
daa
andl
data16
pop
movsb
xlat
cmp
and
dec
aam
lods
push
push
add
cmp
push
dec
stos
cmpsl
pusha
cmp
jmp
fwait
mov
repnz
lods
test
jnp
add
daa
push
js
xorl
das
pop
xor
test
sbb
xchg
hlt
clc
pop
push
ja
mov
movsb
dec
je
ret
cmp
shr
lea
inc
int
mov
addr16
jb
hlt
xchg
and
lock
cmp
decb
xor
push
jno
leave
test
mov
xor
sub
sub
or
push
addr16
shr
mov
inc
repnz
mov
imulb
sub
test
xor
mov
stos
mov
pusha
add
aad
int
ja
in
pop
dec
incl
adc
add
dec
lds
and
repz
xor
mov
scas
scas
sub
xchg
je
xor
fists
adc
les
je
in
inc
mov
xor
fiadds
jecxz
mov
out
inc
jecxz
mov
push
mov
cli
xor
outsb
dec
cmp
jmp
into
test
xchg
sbb
sbb
push
jp
cmpsb
dec
push
add
out
cmpsb
imul
loop
ret
mov
xchg
ficoml
mov
js
add
inc
xlat
jne
jge
out
flds
lahf
outsl
mov
and
mov
xchg
jbe
lahf
sub
or
cmp
into
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
jmp
dec
xor
test
mov
pop
jle
sbb
bound
bound
rorl
mov
mov
fsubl
and
push
inc
repz
mov
jb
xchg
xor
outsb
ljmp
pushf
jecxz
in
push
inc
pop
mov
cmpsl
icebp
aad
lods
or
lds
add
hlt
ljmp
in
mov
push
xchg
or
fstps
jge
sub
jge
dec
adc
sbb
dec
std
aas
jne
nopl
mov
push
and
dec
inc
popa
movsl
mov
sti
sub
push
mov
xchg
mov
lret
les
cmp
jno
fisttpl
jmp
push
jo
in
addr16
jecxz,pt
test
cmp
jl
sbb
pop
ljmp
add
loopne
out
aam
cli
jae
cwtl
cli
outsl
dec
push
shll
rclb
sarl
mov
testl
int
daa
movsl
or
imul
sbb
cmp
cmc
rorb
sbb
adc
cmpsb
xchg
imul
and
pop
pop
repnz
or
iret
sbb
js
inc
xchg
xchg
sbb
push
das
xlat
push
je
shl
xchg
les
jbe
or
mov
sti
mov
in
bswap
mov
push
cmp
insl
mov
dec
dec
cmp
subb
push
subb
jmp
sub
fldl
int3
lds
xor
jp
xchg
sub
int3
fcmovnu
or
ja
dec
sti
pop
push
cli
sbb
mov
mov
stos
movsl
or
xchg
fstpl
mov
jo
push
adc
sub
roll
pop
int3
adc
or
test
nop
pop
out
enter
fwait
or
pop
mov
xchg
negl
sbb
sub
movsb
sbb
push
ret
loope
mov
push
dec
repz
and
adc
mov
lahf
mov
cmpsl
test
xchg
xor
mov
mov
movl
js
int
test
sbb
pop
ja
inc
aas
insl
mov
adcb
lret
mov
dec
fistps
pop
stos
lcall
addl
inc
icebp
mov
insl
cmp
cmpl
xor
and
cmpsb
push
mov
cmp
xor
iret
ror
out
and
pop
cmp
jno
mov
add
fs
int
push
movsl
dec
cmpsl
imul
pop
push
push
stos
sub
ja
jo
sti
add
out
jne
pop
xor
aaa
jmp
mov
cmp
fsubl
cmp
popf
push
adc
jp
imul
lret
mov
or
and
jo
lods
mov
adc
sub
in
jne
fdivp
xchg
lods
pop
dec
cmp
dec
fwait
cs
push
loope
inc
push
lods
addr16
push
scas
mov
jge
repnz
sub
jmp
call
jns
lret
ljmp
xchg
inc
leave
orb
mov
sbb
mov
sahf
and
mov
push
inc
push
dec
fucomi
cmpsl
and
bound
aad
push
rol
insb
mov
pop
loopne
inc
push
mov
aas
mov
repnz
xchg
cmpsl
jmp
push
test
subl
mov
sub
ss
mov
adc
adc
push
inc
pop
push
aas
inc
testb
xchg
mov
out
mov
xchg
js
lock
sub
mov
mov
jp
insb
icebp
shlb
push
sub
jl
fcmove
xchg
pop
adc
and
out
lret
inc
adc
scas
or
adcb
int3
sbbl
subb
dec
xor
adc
inc
nop
sbb
pop
bound
scas
and
push
push
mov
scas
dec
push
lds
sbb
sbb
xor
daa
fnstenv
imul
and
xchg
repnz
or
cmpsb
movsb
ret
filds
sub
bound
testl
add
xchg
mov
mulb
popl
ficoms
mov
lret
and
jbe
int
pusha
jl
xlat
popf
cld
jecxz
popa
incb
jne
add
jg
shrb
jg
and
in
cmpsb
sub
or
mov
xchg
pop
sub
dec
xor
inc
ljmp
xchg
push
jle
aad
cs
jbe
loopne
repnz
fwait
cmpsl
xchg
imul
flds
lods
cmpsb
filds
aas
cmc
mov
cmp
push
and
test
pop
sbb
out
fildll
stc
lock
stc
nop
iret
inc
add
out
outsl
adc
repnz
inc
shrl
sub
xor
xor
dec
inc
inc
mov
js
sub
pusha
mov
mov
ja
mov
fbld
iret
jl
add
sbb
or
xor
push
in
shl
inc
popw
pop
add
inc
dec
and
fcomip
mov
adc
push
sbb
add
lcall
cltd
mov
xchg
xlat
std
jmp
leave
sbb
out
lock
cmc
sbb
jne
mov
xorb
dec
lods
dec
fbld
lret
lcall
in
inc
jo,pn
pop
jns
push
inc
dec
and
loop,pn
jg
adcb
cwtl
and
mov
push
test
aam
sbb
sub
mov
sbb
lret
xchg
clc
cli
dec
sub
pop
addb
mov
xor
loope
jp
dec
xor
or
jle
cmp
dec
test
xor
xchg
or
push
lods
ja
or
xchg
dec
inc
test
out
dec
rcrl
jecxz
cmp
xchg
pop
push
jne
lods
repz
outsl
xchg
pusha
in
pushf
dec
nop
decl
call
gs
mov
jmp
mov
jp
out
sbb
aam
jbe
cmp
test
pop
push
pop
ror
lods
repz
lcall
cmc
xchg
push
insl
rol
fnstsw
xchg
sbbb
lock
xchg
sub
sbb
mov
or
xchg
mov
frstor
pusha
cmc
xchg
les
dec
add
aas
xor
push
loope
out
int3
ss
dec
jno
mov
fldcw
sub
cmp
sbb
mov
fs
push
stc
and
add
cs
outsl
mov
add
dec
arpl
rcrl
and
enter
ret
jns
in
mov
leave
lock
jmp
cli
in
incl
arpl
xchg
pop
jmp
xor
cmp
xor
pop
movsb
jo
mov
cmp
mov
push
fcoml
xor
xchg
mov
xchg
xchg
add
lea
sbb
clc
cli
pop
repnz
pop
dec
and
mov
shl
mov
pop
mov
xor
mov
sbb
jecxz
sub
dec
xor
shl
jae
xchg
and
cmp
js
fisubrs
xchg
call
in
sub
insl
lods
aas
jecxz
rolb
adc
dec
cmp
push
out
hlt
outsb
icebp
gs
mov
push
loope
test
push
push
data16
dec
or
xchg
mov
and
scas
or
pop
sbb
or
xor
jnp
pop
mov
or
mov
jle
mov
cmp
or
stos
dec
popf
add
fucomp
out
push
aad
mov
ljmp
xchg
repnz
jo
mov
xor
jnp
and
test
or
jg
data16
cmp
sbb
outsb
mov
sbb
fwait
ret
xor
dec
inc
push
pop
mov
lcall
dec
push
addr16
jo
pop
insl
je
cld
in
push
sub
popa
pushf
mov
popa
movsl
and
xor
jecxz
inc
and
inc
sub
repnz
sbb
iret
inc
jle
sub
cli
bnd
test
frstor
shr
jp
sti
ja
aad
cmovle
mov
mov
pop
fcomip
addb
gs
stos
movsb
lret
xchg
pop
popa
sub
mov
adc
andl
sbb
cltd
cmc
jbe
push
test
cltd
push
into
pop
rcrl
pop
in
or
nop
test
repz
scas
out
in
das
inc
in
xchg
mov
je
mov
add
call
imul
std
dec
mov
int
inc
mov
in
mov
shrl
outsb
lret
lock
sub
cltd
push
cltd
xchg
outsl
scas
fcompl
pop
rorl
mov
bound
aas
rorb
push
pop
call
mov
jnp
push
add
sbb
xchg
xor
push
out
loopne
mov
inc
fmull
fs
mov
ret
addr16
mov
jmp
imul
rcrl
and
shlb
or
pushf
jo
jmp
sub
test
dec
icebp
cwtl
xlat
push
lea
popf
sub
mov
das
mov
mov
sbbb
enter
mov
ds
imul
jns
negb
repz
pop
dec
cmp
inc
inc
and
cmc
loope
idivl
jecxz
inc
outsb
pop
add
push
arpl
aaa
loopne
push
add
sub
mov
cmp
aad
lods
aam
sbb
xor
into
int3
adcb
sti
mov
jp
popa
nop
xor
pop
mov
insb
adc
or
and
mov
adc
jmp
mov
cmc
mov
or
hlt
arpl
adc
and
mov
adc
out
stos
leave
pop
sub
sub
mov
push
xchg
lret
jmp
out
mov
aas
int
adc
mov
or
inc
insl
push
mov
mov
std
adc
inc
mov
pop
test
addb
mov
dec
mov
fcmovnbe
cmovns
add
out
xchg
mov
cli
sbb
jo
in
cs
or
lods
int3
sub
rcl
and
sub
xchg
dec
mov
push
fimull
fistps
push
shr
div
sahf
jbe
ljmp
mov
mov
xchg
inc
fucomip
imul
in
add
sbb
mov
out
jecxz,pt
push
std
inc
jne
scas
adc
mov
mov
jmp
jg
sbb
add
ficoml
out
adc
cltd
jge
std
scas
and
pop
mov
push
ds
movsb
and
inc
cmc
mov
lcall
xor
repnz
repz
pop
loope
mov
push
lea
popf
inc
mov
inc
imul
in
out
xchg
jb
sbb
cmpsb
mov
lcall
push
push
dec
js
push
stos
jle
clc
shlb
loop
arpl
idiv
cmp
test
test
mov
cli
pop
adc
pop
cli
repnz
arpl
xchg
imulb
xor
cs
xor
mov
roll
insb
movsl
rorb
mov
ret
xlat
out
fldcw
std
aam
pop
mov
and
fcmovnu
sahf
push
sbb
js
gs
inc
xor
fs
mov
push
imul
push
mov
mov
and
rol
and
push
and
stc
add
mov
cmp
jecxz
outsb
jns
mov
shl
hlt
test
in
fsubs
adc
pop
or
stos
xchg
xor
stc
push
push
loopne
add
dec
ss
test
sti
pusha
out
pushf
or
hlt
inc
inc
mov
fs
xchg
mov
aad
shll
mov
out
jno
hlt
xchg
xor
and
aad
lock
inc
or
sub
shr
mov
in
hlt
xchg
mov
adc
int
mov
test
outsb
mov
repnz
pop
mov
dec
mov
mov
pop
es
roll
mov
sub
cmpsb
jmp
mov
and
mov
lock
nop
ds
xchg
pop
stc
jle
mov
push
divb
gs
ja
cmp
jmp
loopne
insl
mov
loopne
idivl
adc
adc
cmp
shrl
mov
xchg
out
pcmpeqd
push
mov
mov
fildll
mov
bound
xchg
fists
lret
pushf
push
scas
sahf
push
push
insb
lret
inc
notb
lcall
cwtl
divl
movsl
add
xchg
sbb
call
mov
cmp
sbb
stos
mov
dec
sbb
pop
out
adc
std
ja
lret
xlat
dec
ss
dec
xchg
call
cmp
or
dec
xchg
repnz
or
aaa
adc
xchg
xlat
movsb
std
lcall
decl
mov
imul
out
imul
jno
data16
and
pop
jg
xor
and
mov
push
das
xor
shrb
push
ljmp
xchg
push
loope
sbb
test
jge
sub
leave
push
jecxz
aas
fbld
add
adc
xchg
add
jae
pop
fldcw
fcompl
shlb
mov
mov
dec
push
clc
call
dec
ficomps
jg
dec
subps
rorb
call
popf
adc
vprotb
cwtl
loope
cmc
vmovd
mov
mov
jno
push
out
mov
push
lock
cwtl
or
sbb
das
push
jecxz
jo
adc
push
outsl
aam
mov
mov
popf
mov
dec
aad
and
fcoml
loop
movsb
imul
and
or
test
pusha
and
mov
dec
jl
xchg
sub
insl
mov
dec
les
inc
sub
fildl
movsb
lds
mov
push
sub
in
ss
and
pop
cltd
mov
in
daa
dec
cld
mov
sub
pop
dec
sbb
inc
jecxz
ja
test
nop
sbb
xchg
cld
cld
mov
lret
mov
inc
mov
jbe
call
jmp
and
dec
aaa
mov
gs
cmp
pop
enter
xchg
xchg
test
push
pop
adcl
jg
jae
lret
call
popf
popa
enter
and
pop
push
aad
jnp
xchg
jnp
jno
jae
lcall
mov
int
mov
fwait
push
lods
inc
mov
stos
loopne
inc
int3
mov
pop
mov
cli
inc
mov
testb
cmp
idivl
jmp
cmp
imul
lods
add
pusha
cmp
daa
cmp
leave
or
pop
enter
fwait
inc
outsb
jge
std
inc
insb
xor
lods
data16
cmp
mov
in
cwtl
push
adc
or
lret
aas
pop
xchg
in
ljmp
jnp
push
outsb
adc
dec
push
xchg
lds
and
shr
andb
scas
aas
xor
dec
sub
sub
andl
mov
mov
xchg
jmp
xchg
and
add
test
inc
jg
lock
xchg
pop
pop
cmp
rolb
xor
lahf
lods
pop
test
test
dec
mov
lret
outsb
divl
xchg
fs
fsts
sahf
cmp
xor
inc
cmp
repz
dec
data16
push
mov
xor
jae
stc
sbb
cmp
fnstenv
jl
aaa
cmpsb
xor
push
jl
mov
js
xor
sub
pop
stos
cmp
push
int3
std
jne
sub
jnp
imul
out
add
cmpb
push
rorb
fbld
sbb
sub
scas
rcl
inc
pop
nop
sti
mov
xchg
pop
pop
mov
call
push
jbe
inc
push
jbe
test
push
sbb
push
roll
pop
fadd
pop
xor
lock
aaa
aam
mov
xor
ficomps
mov
data16
orl
adc
lcall
mov
test
das
pop
jl
fst
inc
rep
das
jns
sbb
cmp
divb
push
es
cmp
cld
cs
in
xchg
sbb
movsl
fidivl
push
adc
enter
xchg
mov
sub
mov
cmp
cwtl
add
mov
fwait
xchg
pop
into
push
jne
fstl
jg
ds
sub
cltd
cmp
popa
or
mov
sub
push
imul
dec
or
insl
js
sbb
jl
lcall
xchg
or
push
mov
cmpsl
aaa
out
inc
lock
cld
out
movsb
in
ret
outsb
sahf
jge
inc
lret
enter
pop
pop
negb
pop
sbb
push
das
jl
cmc
cli
fs
mov
inc
fnstcw
stos
or
xchg
mov
mov
mov
adc
mov
mov
jecxz
xchg
push
cmc
jp
xor
mov
xorb
loop
fbld
cmp
inc
call
cmp
push
push
in
add
imull
test
xchg
mov
sbb
push
push
adc
or
mov
sub
mov
shl
lret
mov
stos
repz
aam
int
or
or
push
and
inc
xor
fs
and
jmp
or
hlt
les
movsb
std
mov
dec
popa
out
fldenv
or
push
cmp
adc
jle
fsin
pop
test
cmp
push
iret
inc
fcmovne
mov
pop
pop
fwait
dec
cmp
sbbb
push
push
std
ja
mov
das
repnz
lds
repz
imul
xchg
movsl
fldenv
in
dec
inc
loope
or
nop
ja
sbb
popa
add
jno
dec
mov
addb
mov
imulb
jb
mov
je,pn
fsts
mov
mov
lret
sub
push
add
fstl
test
mov
cmp
hlt
aam
ficompl
nop
outsb
sub
mov
sbb
outsb
pop
push
ds
sbb
or
lret
xchg
ret
rcrb
das
lods
push
ret
push
jb
xor
stos
mov
push
pop
sbb
dec
inc
mov
in
or
mov
pop
cmpsl
jge
adc
loopne
sub
insl
cs
ss
jmp
setge
xchg
fisttpl
lret
mov
mov
push
and
mov
scas
lds
adc
dec
scas
cld
jl
out
movsl
jns
jecxz
dec
add
jnp
fcomi
or
mov
scas
ljmp
sub
sbb
outsb
dec
in
cwtl
cltd
lds
jno
mov
lods
cmc
popf
sub
jl
stos
push
popa
inc
cmp
xorl
mov
xor
popf
push
jmp
add
in
incb
rorl
or
bndldx
subb
orb
mov
cmc
and
outsl
mov
xlat
xor
jmp
fisubs
sub
dec
js
inc
mov
push
dec
mov
in
arpl
mov
ja
pop
mov
outsb
ja
pop
dec
out
jle
sub
fnsave
fsubrl
mov
jp
dec
jns
jno
faddl
dec
add
hlt
adc
inc
fistpl
push
or
add
dec
and
addr16
outsb
outsb
sub
dec
sub
xchg
and
into
mov
mov
cmp
push
push
cs
cmpsl
jmp
add
cmpsl
mov
rorl
mov
stos
scas
data16
push
mov
dec
imul
adc
fs
cmpsb
lds
sub
dec
mov
in
mov
pop
sbb
stos
sbb
mov
shll
ljmp
xchg
and
rcrl
fwait
out
push
cmpsb
mov
scas
test
ret
adc
rcrl
xchg
movsb
sub
dec
ret
jg
imul
jg
cmp
add
jno
jp
add
mov
stc
mov
or
xor
negl
lds
jecxz
aad
in
out
or
push
dec
pop
rclb
push
loopne
in
aaa
inc
scas
addb
xor
into
loope
mov
adc
and
mov
push
jae
dec
int3
negb
dec
mov
pop
dec
xchg
mov
shlb
xor
push
mov
mov
sub
in
mov
mov
push
mov
mov
dec
push
sub
rclb
push
insb
inc
fisubrl
dec
pop
stc
lret
xor
cmpl
shrb
adc
lock
mov
stos
jo
mov
pop
jp
mov
pop
add
mov
push
sbbb
subb
sbb
es
sahf
ja
inc
xchg
sbb
fstpl
cmp
adc
imul
push
arpl
add
xor
fnstsw
insl
bound
xchg
pop
cmp
pop
dec
mov
pop
popa
push
test
pop
out
ret
movsb
pop
pop
fwait
xlat
dec
js
push
cwtl
push
cmpsb
das
mov
pop
dec
push
or
jecxz
test
inc
mov
aad
sub
or
into
fiadds
jbe
push
or
in
or
notl
cmove
addr16
insl
mov
out
mov
dec
out
cltd
mov
sbb
pushf
and
fwait
std
dec
jl
push
lahf
loopne
jnp
fxch
lods
xchg
outsb
xchg
sub
repnz
pushf
pop
dec
popa
ret
pusha
sar
xor
mov
xor
in
push
loope
mov
in
into
ret
mov
mov
aas
pop
inc
lods
pop
mov
dec
jle
iret
sub
lock
filds
repnz
xor
push
sub
or
aas
test
lret
adc
push
sub
adc
cmovs
push
cmpsb
mov
jb
add
cld
daa
dec
adc
sub
call
pop
push
outsb
and
and
test
mov
aam
popa
jecxz
or
mov
jo
les
cmp
mov
xor
cmpsl
pop
rorb
lret
or
mov
dec
pop
ror
mov
xchg
xor
loopne
cmp
inc
pop
mov
inc
lret
mov
or
xor
fmuls
fdivrs
dec
dec
movsb
push
imul
jne
jns
jne
cmp
add
jle
or
push
mov
mov
leave
gs
subl
xchg
and
mov
sub
pop
cmp
lods
in
jns
mov
xor
mov
mov
les
das
stc
aas
popf
xchg
xchg
int
cwtl
fdivrl
clc
lret
lods
pop
dec
mov
stos
mov
dec
mov
adc
mov
fsts
or
roll
lock
and
arpl
mov
xor
inc
inc
and
xchg
lds
pop
stos
mov
sbb
cld
rcrl
pop
shll
xchg
cmovo
sarl
sbb
frstor
ss
hlt
dec
mov
sbb
es
cmp
rcrb
xchg
xor
jle
jbe
lods
push
stos
fbstp
ljmp
pusha
in
ljmp
and
or
daa
addr16
pop
pop
xchg
dec
mov
ds
outsb
lahf
dec
mov
fwait
stc
insl
rcll
movsb
les
inc
dec
data16
push
dec
out
lock
fcoms
negb
mov
or
cmp
ud2
or
jo
lds
inc
icebp
xor
fadds
into
icebp
xchg
call
cwtl
cmpsb
dec
loopne
xchg
cltd
push
mov
dec
add
and
mov
mov
and
mov
lods
sub
das
adc
scas
adc
fs
add
mov
mov
or
fs
scas
add
push
xchg
insl
outsb
out
cmpsl
push
mov
icebp
sbb
jmp
and
jmp
call
cmp
daa
insb
lahf
sub
xchg
adc
sub
pusha
pop
filds
dec
sub
adcb
or
dec
test
je
test
sbb
add
and
je
sbb
mov
in
test
xchg
das
cmp
cmpsl
adc
jbe
add
pushl
stos
imul
mov
pop
or
xor
sbb
xchg
fisubrl
shr
ljmp
fsts
mov
and
mov
divl
adc
jo
into
dec
xchg
sub
cmpl
js
jp
push
fwait
adc
or
lds
scas
stc
push
sbb
sbb
inc
xchg
int
cmp
data16
sub
int
cld
fisubrs
inc
rcll
stos
fcoms
movsb
mov
es
mov
sbb
jbe
in
adc
mov
pop
xchg
pop
xor
push
repnz
jno
push
ja
popf
push
xchg
ljmp
fisttpll
dec
xchg
shll
jp
imul
mov
mov
xor
push
and
mov
fidivrl
add
mov
cwtd
imul
sub
dec
je
outsb
xchg
jle
int3
call
adc
inc
or
subl
mov
push
xor
cs
jecxz
enter
test
ror
repnz
in
aas
insl
dec
inc
mov
inc
and
or
cmp
pusha
in
xor
mov
arpl
loopne
cmp
jno
mov
stc
arpl
scas
sub
sbb
xchg
in
sbb
cmp
cld
movsb
cmp
rcrb
jo
enter
mov
pop
lret
sub
mov
xchg
mov
adc
mov
xor
jnp
xchg
cmpb
inc
out
cmp
test
dec
ret
jmp
fisubl
push
loop
and
sahf
cmc
ja
push
xchg
cltd
gs
gs
and
punpcklbw
jmp
mov
out
mov
in
test
mov
jne
sahf
mov
fsubrs
jge
sub
stos
cmp
dec
mov
or
mov
nop
mov
int
sti
int3
mov
push
adc
lods
push
data16
out
inc
ja
and
mov
sub
fnsave
sub
popf
cs
adc
jecxz
adc
repz
mov
mov
or
jnp
fwait
pop
dec
subb
scas
clc
push
mov
es
adc
push
push
iret
scas
mov
mov
mov
call
mov
jge
rolb
insl
mov
loopne
mov
pop
cmpsb
inc
subb
add
out
xchg
inc
cmpsb
std
movsl
pusha
mov
int3
loopne
out
dec
frstor
inc
int
add
or
dec
sbb
mov
and
sahf
push
cwtl
icebp
leave
insb
mov
cli
sbb
push
jecxz
mov
cmp
pusha
jmp
nop
out
test
call
mov
and
inc
fsubrl
dec
cmp
sbb
enter
pop
imul
sbb
mov
cmp
mov
mov
jbe
lcall
cwtl
push
and
push
outsl
pop
mov
cmpsl
mov
sub
jp,pt
pop
xor
dec
bound
pop
jp
xchg
loopne
mov
xchg
dec
das
inc
in
mov
dec
and
int3
cli
cmp
sub
xorl
fisttpl
adc
sub
test
outsl
data16
ja
mov
sbb
scas
and
in
in
aad
icebp
ds
or
cwtl
dec
xor
test
push
ret
or
mov
orb
sub
arpl
in
adc
xchg
sbb
push
or
lods
mov
xor
push
cld
out
inc
cmp
sbb
insl
mov
rorb
lret
loope
enter
inc
imul
loop
cmp
test
ds
mov
je
out
scas
pop
xchg
jnp
push
test
push
bound
imul
pusha
cld
sub
sarb
scas
push
mov
in
fsubl
or
out
xor
add
sub
rcr
dec
out
mov
cli
ret
add
lods
or
jecxz
mov
mov
je
jbe
insl
dec
aad
cmpsl
fsubl
mov
in
sub
push
lret
xchg
test
cmp
cwtl
jne
mov
pop
lahf
push
ljmp
ret
loop
shl
fidivrs
dec
push
sahf
cltd
cmc
loopne
hlt
add
iret
call
mov
jmp
mov
nop
pop
xchg
arpl
mov
int
jno
cwtl
add
pop
enter
cltd
lret
popa
or
and
mov
outsb
sub
fs
xor
mov
adc
fisttps
cmpsb
inc
sub
frstor
out
and
scas
pop
call
in
daa
loop
lahf
mov
mov
adc
movsb
mov
sub
test
xor
shrl
inc
dec
jo
sub
inc
lret
cs
cmp
fcmovnbe
movsb
jnp
add
imulb
std
dec
jp
and
push
rorb
jno
add
mov
mov
sub
mov
movsl
jp
insl
sbb
cmp
orb
mov
bound
xor
cmpsl
aam
xchg
push
notl
adc
jnp
mov
mov
push
std
mov
jmp
lock
jg
add
lock
dec
inc
daa
iret
ljmp
jecxz
pushf
push
sti
jecxz
out
inc
and
jns
sub
inc
arpl
roll
movsb
sub
and
sbb
or
mov
xor
idivl
pop
in
sub
pop
mov
mov
jl
movsl
clc
addb
sbb
sub
push
imul
jnp
jp
inc
mov
ja
cmp
push
add
add
and
pusha
aas
push
gs
mov
mov
filds
mov
sub
je
rclb
jp
fcomp
mov
mov
xor
sub
dec
mov
repnz
daa
pop
into
mov
adcb
push
rorb
out
imul
fstpl
push
xor
xlat
pop
loope
je
xlat
lods
insl
sbb
dec
shrb
in
popa
nop
cmc
pop
xlat
jbe
into
xor
sub
jecxz
or
scas
sub
push
cmp
mov
xchg
mov
rcll
sbb
push
dec
repnz
dec
push
hlt
and
mov
dec
fsubrs
leave
and
test
data16
into
or
arpl
cld
into
lock
shrl
dec
lock
imul
mov
push
or
into
xorl
sub
dec
loopne
mov
cmp
das
xchg
and
movl
popf
scas
ret
iret
pop
pop
cwtl
cli
add
adc
jmp
sarl
shlb
sbb
inc
mov
xchg
lea
neg
add
shl
ret
pop
or
test
shlb
push
jle
scas
imul
sbb
sbb
sbb
push
inc
loopne
mov
sbb
xchg
sbb
ret
test
fnsave
scas
popa
insb
scas
loop
push
xchg
icebp
das
ret
stos
pop
lret
sbb
pop
hlt
aad
push
inc
dec
vmovdqu
inc
call
sbb
xchg
cld
inc
fdivs
js
jg
in
in
mov
sbb
ds
aaa
sahf
push
js
pop
sbb
insb
mov
adc
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
pop
mov
pop
add
add
daa
pop
push
dec
dec
call
in
insl
call
in
repz
push
or
sahf
mov
cmp
daa
mov
in
sbb
mov
xchg
mov
pop
xor
ljmp
jmp
and
out
ds
mov
adc
push
test
add
sub
adc
cmp
out
pop
xchg
push
xchg
int3
add
pop
add
add
sub
out
subb
in
push
loope
inc
xor
int
int3
jbe
xorl
aaa
sub
in
push
jb
or
cltd
adc
and
dec
mov
mov
aas
jmp
das
and
inc
cmpsb
xchg
in
xchg
cmp
xor
xlat
adc
push
fwait
mov
sbb
add
sub
sub
addb
int3
add
pop
add
add
pop
shll
aad
xchg
lds
cmp
jl
aas
imul
inc
sub
xor
jp
lret
sub
xor
inc
jae
push
mov
cwtl
cmpb
addr16
add
xor
inc
inc
push
out
in
fbstp
pusha
shll
das
and
aam
aam
ljmp
je
add
add
pop
add
add
ja
jo
sub
sub
daa
loopne
loopne
cmp
dec
push
nop
push
test
mov
mov
push
push
sub
cmp
icebp
mov
mov
inc
adc
pop
xchg
fcomi
rcll
jo
push
jmp
sub
push
out
mov
push
lret
dec
jle
sti
cmpsl
mov
dec
mov
movsl
int
add
add
mov
mov
leave
lods
scas
pop
loope
mov
mov
dec
icebp
pop
sbb
das
mov
dec
jns
jmp
cmp
shl
dec
and
popa
or
push
fs
cmc
mov
cmpsl
xor
jge
insb
xchg
xor
ficomps
loop
xor
pop
add
out
lods
cmp
stc
stc
hlt
outsl
fildll
pop
add
add
insl
xchg
into
mov
ss
push
out
outsl
mov
imul
jp
out
fs
xchg
push
in
mov
pop
inc
jmp
hlt
addr16
ret
or
add
cmp
arpl
xor
add
dec
ss
fsub
mov
imul
sbb
add
push
xor
gs
aaa
push
sub
pop
into
add
pop
add
add
shrb
pop
jecxz
pop
ret
inc
shr
mov
xchg
jle
jne
adc
ss
call
lcall
jge
lods
ficoml
mov
inc
cli
cmp
dec
cmc
ret
aaa
and
pop
mov
add
add
mov
push
adc
cwtl
out
into
dec
adc
filds
add
add
lods
cmp
pop
and
inc
insl
lret
fidivl
cli
cmpsb
xor
mov
xor
lods
cltd
repz
mov
jo
push
ret
cmp
adc
test
push
xchg
dec
mov
fmuls
adc
stos
mov
pop
xor
add
add
dec
inc
sub
das
jle
jg
imul
jp
movsl
mov
pop
add
add
jne
xor
xorl
fwait
imull
sub
mov
sbb
popa
fnstenv
sbb
in
test
out
aas
sbb
add
testl
and
out
out
cltd
test
loope
arpl
mov
or
addr16
and
mov
mov
jo
inc
loopne
add
add
xor
inc
mov
push
pushf
jl
mov
stos
adc
data16
cmp
mov
nop
testb
or
push
loopne
cmp
mov
lods
xor
lods
jmp
xor
xor
test
cmpsb
test
cmc
jno
inc
add
dec
bnd
jmp
add
add
or
ret
lods
sub
mov
push
pop
add
add
dec
fwait
in
jo
mov
cmp
jbe
push
or
or
mov
inc
push
fistpl
mov
jge
mov
in
inc
sbb
xchg
pop
fcomps
test
inc
adc
mov
adc
ss
and
ljmp
inc
add
fld
add
ror
outsl
clc
shlb
xorb
add
add
hlt
add
out
pop
outsl
sbb
push
rorb
inc
bound
shll
test
sub
mov
pop
cltd
hlt
and
aad
nop
jo
outsw
je
adc
je
add
enter
mov
out
popa
outsl
add
push
mov
sub
mov
call
and
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
insb
jp
jbe
ja
js
jno
inc
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
push
arpl
sbb
jp
inc
add
sbb
out
or
dec
xchg
dec
scas
dec
ds
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
ficoml
inc
add
sbb
sbb
jle
inc
add
sbb
outsb
sbb
mov
inc
add
sbb
push
sbb
or
mov
inc
add
sbb
ret
add
sbb
or
inc
add
pop
inc
add
sbb
sbb
inc
add
test
ficomps
inc
add
push
orl
add
cmp
ds
insl
push
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
add
jbe
mov
pushf
clc
sbb
push
pop
dec
or
add
pop
inc
add
or
insb
inc
inc
add
add
add
push
add
push
push
add
push
push
add
add
push
add
add
inc
add
dec
cmpsb
dec
lahf
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
inc
inc
add
jp
mov
sbb
or
adc
imul
insb
push
imul
push
jp
dec
push
arpl
dec
dec
data16
imul
inc
push
jb
inc
je
inc
jae
dec
gs
dec
dec
pop
jp
jbe
pop
jo
inc
gs
dec
js
inc
js
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
je
bound
jns
bound
dec
ja
dec
inc
inc
push
add
outsl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
bound
pop
outsl
push
dec
insb
inc
push
inc
jo
add
add
je
insb
jae
inc
insl
je
push
push
addr16
jo
js
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
fisttpll
mov
js
inc
cmp
aad
add
add
daa
mov
call
mov
lock
cli
rol
mov
sub
ds
sarb
xor
insl
loopne
fs
xor
jmp
pop
xchg
sub
pop
and
inc
push
pop
inc
dec
outsb
bswap
xor
add
pop
sub
arpl
aaa
adc
mov
lret
adc
icebp
cli
add
sub
cli
jl
xlat
push
jnp
cltd
fbld
add
pop
add
add
roll
jecxz
pop
icebp
cmp
cmpsb
jno
dec
addl
scas
js
inc
cmp
add
jmp
mov
fnstcw
shlb
mov
and
adc
inc
pop
xchg
les
imul
fisubl
arpl
leave
pop
rolb
add
mov
jg
ljmp
push
cmpsb
mov
add
add
outsb
jnp
loope
enter
mov
adc
push
pop
jmp
xchg
dec
add
imull
pop
ret
outsb
stc
fstps
movsl
cmp
test
jae
jne
sub
lcall
out
sti
ljmp
test
or
or
mov
das
add
add
cmp
cmp
in
fimuls
scas
dec
cltd
adc
add
add
es
je
std
sbb
push
fnsave
pop
jecxz
push
and
hlt
mov
imul
rcr
jbe
loope
add
jp
jns
xlat
lock
clc
sbb
sarb
je
adc
mov
mov
test
fs
lods
push
jge
mov
add
add
fnstenv
std
negb
sub
out
adc
pop
add
add
imul
aad
dec
lahf
xor
inc
rcl
inc
cld
cmp
cmp
dec
sbb
mov
sbb
mov
jmp
bnd
out
push
push
into
es
pop
mov
mov
lcall
jno
lds
out
rcrb
add
xor
jb
inc
mov
lcall
add
lret
adc
data16
test
xor
mov
xchg
inc
xchg
dec
sbb
dec
sbb
pushf
and
ja
inc
out
sti
hlt
mov
xlat
test
push
cmp
jne
mov
popf
pop
lock
jp
xor
inc
bound
push
add
dec
in
fwait
scas
fdiv
pop
sub
dec
and
add
pop
add
add
lret
mov
movsb
adc
aam
mov
ss
mov
inc
shrl
add
stc
push
cltd
push
push
push
xchg
ja
das
lcall
les
sub
leave
sub
add
out
lret
and
push
imul
inc
data16
xor
mov
add
mov
aam
xor
and
jge
add
pop
add
add
int3
mov
call
scas
xchg
cwtl
jno
loope
fwait
adc
xchg
dec
addr16
and
mov
or
sub
nop
inc
out
cmp
xor
lret
push
shrb
scas
inc
fcomi
gs
pop
or
test
pop
and
mov
ds
mov
insb
pop
add
cmp
add
mov
out
out
inc
pusha
xlat
xlat
add
pop
add
add
sbb
fs
pop
pop
gs
xlat
xor
push
xor
dec
cli
jmp
mul
icebp
xor
mov
jp
dec
jecxz
lds
sbb
adc
jecxz
dec
cwtl
mov
pop
adc
mov
lahf
mov
scas
mov
pop
in
xor
add
jmp
repz
fimull
mov
fadds
add
add
mov
mov
in
jae
and
test
xor
fcomps
xchg
je
pop
daa
shll
popf
or
sbb
jb
mov
mov
add
cwtl
call
movsb
cs
js
pop
test
xor
or
mov
jne
rorb
pop
inc
pop
iret
pop
aad
ss
dec
cmp
xchg
add
add
push
sbb
pop
popl
sub
hlt
mov
das
sub
dec
ret
popw
movsl
and
sahf
in
push
adc
pop
mov
daa
call
or
mov
jp
sub
sub
iret
lea
enter
lcall
fldt
mov
add
fwait
test
jg
jmp
fadds
add
add
daa
lock
xchg
int3
sub
push
adc
mov
ds
dec
add
jmp
icebp
pop
ficomps
lods
test
lret
and
imul
andl
sahf
es
xchg
sub
cmp
andb
xchg
add
mulb
inc
dec
aad
add
lock
jle
repz
dec
mov
pop
add
add
test
sahf
xchg
jae
sub
jl
xchg
fs
test
mov
lds
and
pusha
xor
xor
cmpsb
fdivrp
xchg
pop
mov
insb
push
roll
mov
add
aaa
pop
lahf
jnp
stos
pop
jne
imul
mov
xchg
rolb
cmc
adc
adc
mov
lds
cltd
flds
add
add
xchg
dec
mov
jbe
sbb
ljmp
fisubs
jmp
and
fldl
imul
mov
repz
add
pop
sub
jmp
jno
arpl
push
bound
mov
jae
ret
pop
mov
sub
sar
sar
cli
add
sahf
jb
cmp
add
mov
lock
mov
sarb
xor
add
pop
add
add
xchg
ds
jmp
push
mov
jb
and
gs
call
sbb
ffreep
lcall
jae
pushf
sti
and
loopne
faddp
mov
dec
jp
sbb
jl
adc
fildll
xchg
std
dec
out
loopne
mov
cmp
mov
jecxz
add
sqrtps
cmc
das
sbb
xchg
iret
inc
out
sub
add
pop
add
add
push
inc
pop
xchg
add
cmp
mov
add
lcall
in
and
dec
xor
cmpl
out
addr16
rolb
aas
or
mov
or
pop
cs
jg
cld
xor
jae
dec
xchg
loopne
mov
popa
add
int
xchg
inc
cmc
sti
fildll
dec
pop
lods
andl
sub
icebp
andl
add
repz
adc
int3
test
mov
push
loope
pop
add
mov
test
aad
mov
and
daa
sbb
stos
ss
xchg
gs
xchg
mov
jmp
sbb
pusha
test
adc
testl
pushf
sbb
fildl
add
add
pop
imul
mov
pop
mov
dec
lret
or
xchg
cmpsb
sahf
ds
pop
clc
or
addl
rclb
in
nop
sub
mov
jae
nop
loopne
loopne
es
lock
push
fildl
mov
xchg
dec
jmp
and
mov
add
jne
jg
clc
cs
push
mov
add
pop
add
add
sbb
mov
jae
aad
es
pop
pop
cmpsb
push
dec
repz
jecxz
inc
add
or
xchg
fmuls
inc
into
mov
das
repz
and
imul
iret
loopne
mov
js
ret
out
int3
imul
aaa
lea
add
or
dec
mov
je
lcall
add
pop
add
add
imulb
aam
js
mov
mov
dec
scas
pushf
ret
mov
lods
mov
shll
fstpl
lea
popf
and
dec
adc
sub
xchg
in
xor
sbb
lock
pop
or
stc
xchg
ret
iret
mov
mov
add
fists
dec
mov
xchg
adc
hlt
fcomps
add
add
inc
ljmp
test
in
loop
sbb
mov
repnz
scas
or
in
cmp
pushf
jbe
xchg
aam
cmp
stos
addb
jl
test
push
imul
fisubl
out
rcrl
or
outsl
fwait
std
push
arpl
xor
mov
or
add
fisttps
push
pop
mov
scas
ror
add
add
pop
lods
dec
jbe
ret
test
xlat
pop
push
fnstsw
xor
xchg
js
or
push
mov
sbb
jecxz
in
mov
nop
mov
add
dec
lods
dec
add
mov
mov
sbb
in
pop
xor
push
js
jg
push
pop
insb
stc
in
outsb
xchg
pop
xor
add
jle
out
sbb
mov
rolb
add
add
push
lea
inc
jp
sbb
jno
mov
jl,pt
lret
stc
mov
cs
pop
icebp
mov
pop
cmpb
push
fstp
ret
jne
or
mov
fwait
lods
rcr
sarb
pop
xor
pop
les
jp
shlb
sbb
es
imull
repnz
or
add
jo
and
cmp
ficoml
rolb
add
add
fldl
push
daa
in
dec
je
xor
push
push
mov
mov
mov
fists
shl
dec
stos
pop
mov
fimull
ljmp
popl
xchg
loope
xchg
data16
stos
in
sahf
iret
mov
sbb
and
clc
mov
pop
xchg
dec
sub
stos
dec
add
xchg
nop
ffree
popf
aam
sbb
hlt
iret
rolb
add
add
and
das
lds
repz
inc
insb
jmp
dec
insl
fidivs
xor
dec
pop
pushf
data16
push
and
cmp
mov
jno
jmp
or
fwait
inc
fnstcw
icebp
call
pop
push
jbe
iret
rcrl
js
jnp
jle
inc
jl
sbb
loop
and
clc
insb
bnd
stos
add
hlt
mov
jbe
hlt
mov
and
cmpsb
dec
jge
pop
sub
add
pop
add
add
mov
insl
adc
jecxz
outsb
mov
or
dec
sbb
inc
out
mov
add
dec
cmp
push
mov
lcall
push
rcrl
cmp
or
cmp
or
add
add
mov
pop
jl
mov
setb
popa
test
xor
into
mov
sub
out
adc
push
adc
add
add
icebp
xchg
decb
push
imull
xchg
push
cmp
fdivs
xchg
addr16
add
lods
pop
or
pop
jo
stos
scas
cmp
loope
rclb
add
jge
jge
pop
jb
movsl
add
xchg
or
fldcw
roll
fucomi
outsb
and
pop
mov
fst
add
pop
add
add
xchg
dec
adc
adcb
fdivr
xchg
stos
bound
int3
or
pop
xchg
sub
push
cwtl
cmp
js
inc
xchg
xchg
fistps
das
sarl
xor
lcall
and
fs
push
or
jecxz
jo
outsb
xor
mov
nop
xchg
inc
enter
mov
add
add
mov
and
out
rolb
add
add
push
lock
outsb
add
hlt
jge
jo
xlat
sub
test
ret
sbb
mov
jae
mov
fnstenv
mov
stos
nop
cmp
cmp
xchg
push
lcall
mov
jne
push
pop
inc
aas
xchg
roll
gs
and
pop
ds
pop
sbb
cmp
ss
hlt
add
mov
and
jg
call
into
inc
mov
cwtl
data16
pop
add
add
cmp
add
jmp
xor
xchg
insl
sarb
xchg
mov
jns
pushf
mov
cmpsb
xlat
rcrb
cltd
xchg
xor
divb
sbb
mov
jg
xchg
rclb
xchg
into
add
outsl
enter
adc
mov
add
fisubrs
cwtl
sar
repz
xor
push
push
jmp
add
pop
add
add
les
pop
int3
ljmp
sub
inc
mov
push
sbb
ljmp
mov
or
dec
int3
push
mov
jno
fidivrl
or
adc
jno
imul
pop
insb
push
and
int
inc
dec
adc
test
add
add
int3
sbb
out
loopne
lods
inc
mov
inc
roll
add
add
jle
faddp
iret
xchg
addr16
cmpl
or
inc
and
sti
incb
xor
adc
add
lret
repz
push
dec
test
and
mov
jb
jne
pop
or
jle
sbb
dec
shll
das
add
push
test
fildll
es
or
roll
add
add
mov
jle
popa
shl
xchg
xchg
dec
ret
and
jno
jecxz
in
adc
push
xchg
test
and
adc
loop
xchg
mov
pusha
mov
loop
mov
push
mov
dec
push
in
cmp
lcall
jb
cmp
add
fwait
loope
sub
sarb
add
cmpsl
mov
add
add
ret
push
mov
fcoml
addr16
sti
mov
pop
stc
jg
mov
mov
mov
test
hlt
xchg
jnp
xorb
out
sub
test
int3
in
mov
mov
stc
pop
adc
cli
ljmp
rol
push
mov
je
loop
arpl
cmpsl
call
add
or
ja
dec
cmp
dec
addl
add
js
sbb
sub
js
xchg
aas
mov
mov
fstpt
sub
xor
sbb
bound
loopne
loop
insl
and
xchg
sbb
ret
mov
jle
jae,pt
cmp
pusha
push
aaa
ss
call
sbb
add
add
arpl
jge
mov
daa
es
pop
lods
aam
add
add
pop
lds
adc
pop
test
dec
mov
and
es
inc
cmp
in
mov
mov
pop
mov
mov
into
mov
arpl
hlt
push
dec
mov
and
sub
push
loopne
pop
add
insl
lea
mov
scas
arpl
movsb
lea
add
push
imul
movsl
ss
mov
pop
add
add
stos
cmc
and
jae
mov
daa
mov
xor
mov
cmpsb
sbb
cmp
notl
adc
mov
test
stos
insl
sbb
push
fisttpl
shrb
lcall
inc
push
enter
rolb
daa
ss
xor
and
lods
dec
mov
add
pop
add
add
into
sub
add
fisubrl
ret
pop
add
push
mov
gs
out
pop
pop
dec
jge
and
or
mov
int
mov
mov
xor
clc
add
aam
cltd
mov
out
enter
inc
in
sti
lods
test
push
cmp
flds
add
out
mul
aaa
cmc
xchg
lcall
paddusb
add
add
or
add
pushf
mov
fsubrs
cwtl
jo
cltd
pop
fcomi
xor
sahf
out
scas
jle
dec
ret
xor
push
icebp
stos
and
cwtl
stc
es
xchg
xor
pop
popa
fdivrs
and
add
das
ja
lahf
call
xor
pop
pop
cmp
add
aad
out
fucomip
ss
cmp
scas
movsl
imul
add
stc
push
jo
iret
xor
mov
iret
pop
push
pop
lea
aam
add
stos
iret
ret
or
mov
inc
mov
jne
cmp
mov
fwait
mov
ljmp
pushf
jp
icebp
and
std
fxam
aas
dec
enter
push
clc
sub
in
jb
inc
mov
add
in
cld
fisubrl
sbb
sub
faddl
add
add
dec
outsl
dec
push
inc
pop
ds
mov
mov
imull
cli
mov
inc
jb
xor
repnz
fmuls
push
adc
divb
ss
xchg
jnp
ja
lahf
jns
add
cmc
dec
sbb
pop
stc
cmc
xlat
push
push
pop
lcall
addb
aaa
jae
gs
mov
add
jbe
add
push
les
in
lahf
sti
ja
rcll
xchg
add
add
push
cld
ret
mov
mov
cs
int3
shll
xchg
outsl
loop
mov
out
and
xlat
jmp
enter
les
pop
pop
inc
adc
cmp
dec
in
and
jge
movsb
add
fnstcw
mov
aaa
jle
mov
xchg
cmpl
push
loopne
lcall
add
pop
add
add
sub
xchg
in
insl
push
ds
mov
imul
push
dec
xchg
mov
xor
test
test
cwtl
ret
lret
test
jbe
lcall
stos
shll
or
mov
cmp
adc
add
test
and
pop
dec
out
inc
mov
pop
add
add
add
jb
jbe
push
xchg
stos
shrl
sbb
jge
rolb
shlb
fidivrs
xor
in
mov
ret
xor
mov
mov
mov
arpl
gs
repnz
mov
sub
mov
sbb
pop
cwtl
inc
adc
add
aam
fnstsw
out
fcmovu
in
flds
jmp
pop
add
add
sub
jge
bound
clc
outsl
inc
mov
mov
jge
and
mov
mov
lock
xlat
mov
rcl
aam
inc
xchg
dec
pop
sub
lret
mov
and
or
imul
shrl
stc
sbb
inc
jecxz
mov
int
sbb
test
add
pop
add
add
sub
aas
fidivs
test
sbb
push
jmp
pop
dec
cmpsb
pop
mov
test
pop
pop
std
mov
or
mov
roll
add
mov
jbe
arpl
data16
repnz
mov
mov
add
mov
icebp
and
add
add
pop
add
add
mov
xchg
mov
std
cld
popa
push
sahf
dec
pop
iret
dec
rcrl
insb
repnz
push
in
dec
cmpsb
and
dec
lds
push
jns
mov
jae
pusha
inc
hlt
gs
clc
stos
outsl
pop
mov
dec
test
out
adc
inc
in
adc
cld
arpl
adc
out
aam
inc
aas
ja
fst
in
out
or
add
adc
repz
das
cli
fists
dec
es
and
sbb
filds
add
add
sahf
js
sub
cmp
in
xor
push
ficomps
dec
and
in
insl
xchg
inc
imul
loopne
adc
inc
movsb
pop
inc
xchg
mov
sub
orl
insl
jl
push
sarl
hlt
sub
dec
fstp
scas
mov
add
inc
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
inc
cmp
pop
ss
pop
cmp
inc
inc
dec
pop
pop
push
dec
inc
add
xor
cmp
xor
aaa
add
xor
push
inc
dec
push
pop
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
pop
pop
dec
push
xor
add
dec
xor
ss
xor
xor
push
push
add
push
pop
push
cmp
xor
pop
dec
dec
push
cmp
dec
xor
xor
xor
pop
add
pop
inc
xor
push
xor
inc
add
xor
xor
pop
dec
dec
xor
add
pop
aaa
push
dec
push
pop
inc
add
dec
pop
inc
dec
xor
xor
push
pop
push
inc
inc
pop
cmp
push
pop
push
inc
add
pop
pop
dec
inc
inc
add
inc
pop
xor
dec
cmp
xor
ss
pop
dec
pop
add
push
xor
pop
xor
pop
xor
xor
push
push
inc
add
push
xor
xor
pop
ss
cmp
pop
xor
xor
push
push
xor
push
pop
inc
xor
push
inc
aaa
inc
add
ss
dec
pop
pop
inc
push
pop
push
dec
inc
add
xor
dec
add
cmp
xor
inc
add
inc
add
add
inc
add
add
add
add
cmp
dec
add
pop
add
push
add
xor
cmp
pop
add
add
inc
add
add
xor
inc
add
push
add
add
add
dec
add
add
add
pop
add
add
add
add
dec
add
add
pop
add
add
add
add
xor
add
add
push
add
cmp
pop
add
add
add
add
inc
add
add
inc
add
push
add
cmp
push
add
pop
add
add
add
add
dec
add
pop
add
add
dec
add
add
add
xor
dec
add
add
add
add
add
dec
add
add
inc
add
push
add
add
add
dec
add
add
push
add
xor
pop
add
add
dec
add
xor
pop
add
add
add
dec
add
xor
pop
add
add
xor
dec
add
add
add
xor
pop
add
add
push
add
add
inc
add
push
add
add
inc
add
pop
add
add
push
add
add
add
add
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
add
add
add
xor
ja
add
add
repnz
add
add
add
add
add
add
add
call
aaa
add
lock
add
daa
mov
add
aaa
add
add
push
outsl
jb
push
imul
aas
inc
outsb
jne
push
imul
popa
je
outsl
outsb
jae
je
.byte
