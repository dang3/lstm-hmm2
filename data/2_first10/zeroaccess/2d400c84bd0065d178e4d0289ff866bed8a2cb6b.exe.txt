push
mov
sub
xor
jmp
into
rcr
aad
mov
mov
jle
js
xlat
cmp
fld
pop
push
or
bswap
and
sbb
inc
bound
mov
or
mov
and
lods
fadds
pusha
out
outsl
adc
sahf
add
dec
lods
pop
sub
mov
lds
adc
xchg
icebp
dec
loopne
dec
call
mov
sub
sbb
xchg
sub
repz
out
cli
in
xchg
cmp
jbe
xlat
sub
add
sbb
xor
adc
fisttpll
cmp
arpl
rclb
fistpl
and
inc
push
aaa
adc
fstpt
dec
repnz
pushf
lret
pop
push
rep
inc
icebp
pop
jmp
dec
mov
jmp
int
xchg
push
fmull
stos
stos
out
sbb
femms
stc
js
push
mov
xchg
add
add
lods
mov
popf
lret
or
hlt
dec
xor
cmp
das
mov
ds
fs
xchg
imul
xor
inc
das
pop
mov
jns
sbb
mov
movsl
aad
cld
jl
fs
sahf
les
inc
mov
aaa
scas
rolb
cmp
mov
stos
jb
out
dec
mov
into
cmc
and
out
leave
adc
es
push
or
xchg
ljmp
jnp
push
or
movsl
in
mov
mov
dec
pop
jo
rcrb
xor
xchg
push
mov
lods
dec
scas
or
adc
sarl
lret
ret
lret
dec
cmp
sbb
repz
test
or
jbe
dec
pop
and
mov
mov
ljmp
add
or
cmp
neg
fsubrs
stos
aad
rcll
sti
pop
fsubrl
xor
fsubs
imul
adc
cmpsl
and
push
sbb
add
xchg
aas
enter
inc
jae
jbe
mov
je,pn
sub
aaa
and
cwtl
out
jbe
cld
mov
dec
ss
or
fistpl
cmp
stos
sahf
mov
jg
xchg
in
jo
mov
jbe
out
mov
and
mov
inc
out
sbb
je
ret
xchg
jae
or
aam
repnz
popa
dec
mov
mov
repnz
arpl
push
mov
push
test
fwait
or
push
xchg
cli
pushf
push
inc
adc
pop
ss
clc
mov
xor
mov
mov
or
mov
movl
mov
mov
push
or
push
add
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adcl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
sub
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
jmp
leave
rol
leave
int
fimull
leave
rclb
loope
adc
jle
js
mov
add
mov
sub
inc
icebp
mov
cld
mov
pop
push
xchg
adc
in
xchg
and
push
mov
jo
roll
test
mov
mov
mov
stos
jp
or
ja
cmp
mov
testl
fucomp
in
xor
sub
sub
mov
cmc
fdivrl
icebp
jb
mov
inc
add
testl
sti
cld
rclb
sbb
addr16
scas
test
jge
dec
iret
jo
sarb
cwtl
pop
and
dec
jno
or
xlat
mov
out
mov
xchg
jnp
or
scas
fldenv
scas
or
loopne
das
or
repz
fcmovbe
lea
jmp
sub
dec
mov
lret
cmc
pop
rcr
out
dec
stos
outsl
xchg
push
dec
pop
xchg
lods
loop
stos
or
rclb
dec
out
sub
lds
xor
in
imul
popf
pop
gs
and
xchg
aad
lds
ds
fldcw
out
jmp
ss
sti
fldt
xchg
mov
dec
imul
push
or
loopne
std
test
lods
je
adc
mov
mov
push
mov
arpl
fldcw
insb
jecxz
lea
xlat
mov
sti
and
loopne
jp
xchg
pop
popa
lahf
or
test
es
sbb
scas
bound
mov
push
add
adc
mov
mov
and
cmp
mov
push
xchg
push
jns
xchg
stos
imul
loope
insb
shlb
mov
repz
pop
pop
mov
mov
cmp
xchg
xor
cmp
cmp
popf
lods
sub
jp
adc
push
pop
inc
sub
push
movsb
lds
lret
dec
rol
dec
jb
push
xchg
fwait
outsb
bound
fistl
xchg
add
aaa
sbb
ljmp
jmp
stos
mov
xorb
cld
dec
rcrb
fnclex
pushf
sbb
hlt
loope
ss
sub
sub
pop
repnz
les
push
out
int3
mov
pop
push
pop
add
cwtl
mov
je
inc
sbb
enter
mov
mov
dec
pop
fiaddl
cli
and
fcmovb
imul
enter
push
xchg
add
xorl
mov
adc
lea
orl
mov
xor
mov
neg
mov
xor
jmp
ret
ret
leave
lret
ret
out
repz
mov
js
jle
js
dec
sahf
sbb
nop
adc
xor
push
xorb
mov
pop
popf
cmp
and
xor
call
mov
fsubrs
out
xchg
xchg
les
in
sub
cmp
dec
int3
fmuls
dec
mov
arpl
lahf
dec
cwtl
mov
push
mov
dec
scas
ds
add
call
lods
mov
rcll
xchg
repnz
lock
das
xor
jg
rorb
in
jae
mov
cmp
js
pop
mov
mov
xor
mov
pop
in
loop
sub
or
sub
out
push
pop
or
pop
inc
negl
mov
sub
push
and
or
stos
aam
mov
mov
dec
lds
jae
fsubs
outsl
ja
in
sub
jp
xchg
int
aas
fwait
inc
push
movsb
fisubs
dec
enter
mov
mov
or
out
fxch
aaa
and
mov
fistps
int
mov
push
dec
pop
cli
lahf
call
inc
gs
mov
push
cwtl
pop
jns
mov
and
dec
push
push
and
mov
dec
pop
mov
pop
inc
mov
jns
aaa
into
cs
stos
pop
loopne
test
int3
mov
push
fistl
inc
mov
inc
mull
inc
jbe
mov
cmp
jae
aam
cmc
ja
adc
push
cs
lock
mov
aaa
imul
adc
pop
shrl
mov
out
lock
push
or
js
cmp
sbbb
sbb
mov
lret
fcmovnbe
xor
jge
pop
pusha
push
fbld
std
xchg
mov
sarl
jbe
in
push
add
fimuls
ret
mov
lea
xchg
das
sahf
test
jmp
cmp
loopne
cmpsb
xor
push
xchg
out
dec
xor
xchg
jp
sbb
add
push
lahf
jbe
hlt
dec
mov
mov
in
test
or
shlb
mov
clc
call
inc
mov
cli
test
jl
push
pop
mov
push
out
jmp
mov
aam
jmp
ficoml
call
movsl
xchg
add
mov
sbb
movl
lea
jmp
xlat
ret
ds
fcmovnu
loope
xchg
fldenv
int
addb
js
jle
js
adc
mov
cwtl
mov
sti
js
call
pop
xchg
jmp
adc
mov
pop
jb
call
pop
dec
push
adc
daa
mov
leave
ja
adc
addr16
call
clc
shll
push
mov
lods
imulb
dec
rcrl
fdivr
imul
xchg
xlat
dec
add
pop
jo
and
lods
mov
adc
arpl
pop
les
mov
inc
les
xor
out
outsb
jecxz
shr
jnp
xchg
adc
in
pop
inc
sub
mov
jl
jle
adc
aaa
push
xor
fsubr
cmpsb
int3
jmp
repz
fsubl
enter
aaa
cmp
int
stos
inc
pusha
pop
dec
mov
enter
rcrl
dec
adc
cmpsl
push
mov
xor
pop
scas
in
pusha
push
mov
xor
or
dec
testb
stos
add
movsl
push
outsl
inc
adc
into
popa
pop
shll
sub
je
push
ret
inc
nop
sbb
push
jnp
push
scas
cli
jecxz
and
dec
inc
das
pop
hlt
cmp
dec
imul
loope
pushf
and
add
cmpsl
movsb
out
dec
mov
nop
test
mov
pop
stos
mov
pusha
push
mov
mov
test
out
push
imul
xchg
xor
aaa
cmc
daa
xor
movsb
dec
xchg
pop
jo
fildl
mov
fists
and
push
aaa
pop
in
daa
aas
movsl
pop
or
jl
scas
xor
movsl
sbb
mov
mov
lret
pop
loopne
shll
mov
inc
add
aam
repnz
dec
shll
adc
xor
push
jo
nop
mov
movsb
sbb
and
nop
bound
add
mov
mov
mov
mov
stos
sbb
aam
mov
stos
adc
push
xchg
ret
outsb
lods
lahf
mov
pusha
xor
xor
jo
xor
adc
gs
sbb
mov
xchg
jno
dec
lcall
cmc
test
mov
adc
jnp
stc
rcr
mov
lds
xchg
jbe
les
add
cmp
pop
lret
shll
loopne
and
add
add
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
sbbl
mov
decl
xor
add
mov
movzwl
and
mov
mov
mov
adcl
mov
xorl
mov
mov
movzwl
jmp
lret
iret
cmp
aam
leave
fldcw
lret
or
add
js
jle
js
sbb
inc
jge
iret
je
test
stos
jbe
in
jge
jp
ret
xchg
dec
mov
subl
sub
mov
and
pop
add
mov
push
jnp
mov
loop
cmpsb
dec
out
subb
in
test
adc
ret
dec
push
outsl
je
ret
or
pop
inc
in
xchg
xor
nop
lahf
mov
movl
sbb
jne
mov
mov
mov
sbb
dec
hlt
jg
roll
mov
and
jmp
gs
cmpsl
sub
enter
inc
ja
daa
mov
adc
aam
call
inc
inc
stos
je
dec
adc
into
ret
popa
aaa
mov
mov
ja
aam
and
sti
cmpsl
cltd
sub
or
jbe
int
insl
adc
xchg
and
fcoms
aas
sti
nop
pusha
adc
jecxz
jecxz
sub
fidivrl
sub
push
mov
cvtps2pd
cs
cmpsb
xlat
mov
loopne
xor
aas
jo
push
sti
outsb
push
lahf
push
lahf
push
popf
enter
jmp
xor
test
orl
sbb
and
in
imul
xchg
lds
xchg
mov
in
xchg
insb
lcall
pop
push
jne
mov
loope
push
mov
pop
nop
fcom
test
daa
sarl
xor
ret
imul
inc
jbe
subl
das
pushf
sarl
gs
gs
mov
jmp
aad
inc
sub
dec
dec
in
inc
cmp
mov
jae
pop
cmp
mov
sub
cltd
addr16
push
popa
popa
js
and
sarb
sbb
filds
daa
cmc
mov
dec
jbe
jmp
scas
adc
cmp
mov
sub
and
rcl
mov
adc
adc
pop
push
add
dec
or
test
test
and
call
or
xchg
or
sub
idiv
sbb
inc
push
sahf
cmpsb
sbb
mov
fnsave
jnp
push
pop
arpl
mov
inc
lods
xchg
add
dec
sti
mov
xchg
cwtl
jg
mov
inc
jmp
adc
jle
dec
loop
lcall
pop
lcall
das
nop
sbb
pushf
data16
xor
add
and
mov
mov
addl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
mov
jmp
rcl
ret
fld
aam
push
shl
cmp
sub
xchg
js
jle
js
mov
int
fildl
pop
xchg
pop
repz
jl
insl
ret
in
push
lret
adc
adc
stos
or
movsb
daa
nop
cmpsb
add
sbb
pop
sbb
imull
leave
into
imul
in
push
mov
test
cmpsb
xchg
jp
push
andb
mov
leave
dec
jecxz
jle
mov
jb
push
std
in
rcll
test
sub
mov
stos
popf
inc
mov
scas
in
cli
enter
and
outsl
test
mov
fdivrs
xchg
sbb
sbb
adc
and
dec
pop
das
int
pop
mulb
push
fimuls
sbb
add
loope
dec
push
or
adc
ds
xor
lock
xor
adc
repz
pop
push
popa
mov
movsb
or
scas
mov
mov
sub
loope
je
cli
cmp
in
inc
rol
mov
movsl
add
or
inc
bsr
es
loopne
lock
push
push
pushl
push
sub
push
add
aad
insb
xchg
sub
and
sbb
xchg
mov
sub
gs
sarl
mov
sbb
ret
out
ret
dec
jp
cmp
inc
sub
leave
pop
mov
cmpsb
mov
or
mov
cltd
jns
mov
in
and
cmp
pop
sbb
cmpsl
ds
mov
outsl
loope
jg
out
aaa
arpl
daa
push
aas
insb
test
jp
sbb
imul
pop
mov
add
xchg
pop
or
xchg
pop
mov
lods
fs
or
lds
dec
dec
repnz
push
add
mov
pop
xchg
popf
adc
inc
jmp
inc
andb
mov
xor
fistpl
rorl
xchg
fmuls
or
outsl
mov
enter
inc
sbb
and
xchg
push
adc
pop
adc
xor
adc
hlt
or
mov
loope
and
jb
push
xchg
mov
or
cmp
sbbb
lcall
out
push
mov
or
jmp
mov
insb
pop
mov
cmp
mov
popf
mov
test
andl
add
cmp
jne
mov
mov
sbbl
xor
add
jmp
xlat
cmp
fxch
mov
outsb
cwtl
enter
js
jle
js
jo
les
sub
or
sub
mov
loopne
cmpsb
sbb
xchg
fistpll
jle
in
push
add
jo
sbb
fidivs
loope
scas
push
ljmp
push
pop
in
xor
daa
aaa
pusha
movsl
or
dec
jb
pop
mov
outsl
leave
xchg
inc
mov
mov
movsb
lock
or
cmp
insl
test
popa
ret
push
stos
mov
addr16
jno
mov
mov
stos
mov
push
in
pop
pop
xor
add
ljmp
mov
xor
fcomps
inc
sbb
fsts
add
fs
scas
cmp
push
add
lods
test
inc
clc
sub
insl
out
insb
clc
shll
mov
mov
bound
mov
sub
cmp
movsb
stos
xchg
or
lret
jnp
push
mov
push
push
and
push
rcr
dec
jae
popa
cli
sahf
dec
jge
movb
pop
scas
shrb
fsqrt
jmp
mov
pop
out
nop
xorl
inc
xchg
pop
pop
pop
sbb
decl
pop
pop
fwait
mov
mov
aas
mov
push
addr16
inc
cmp
or
ljmp
mov
or
sub
into
xchg
sub
push
and
pop
mov
std
stc
sbb
pop
or
leave
out
dec
mov
fisubs
push
bound
or
sub
mov
mov
jno
movsl
in
cwtl
cmpsb
lret
in
fistpl
movsl
and
jle
loop
mulb
loop
adc
notl
pushf
ja
popf
ljmp
and
xor
inc
ds
fistpll
jecxz
pop
jmp
sub
in
aad
xchg
aaa
mov
lods
out
xchg
jg
test
mov
and
cmc
ljmp
pop
lea
cmp
xchg
bound
and
jno
adc
add
into
sub
lock
imul
aas
repz
jnp,pt
fnsave
pop
icebp
mov
clc
scas
addb
fcompl
jb
mov
lea
or
popf
dec
test
lcall
add
add
lock
add
mov
jmp
aas
lret
ret
aad
flds
inc
jnp
push
mov
jle
js
dec
fiadds
je
and
and
ds
std
cwtl
jnp
sbb
stc
inc
addr16
je
stc
vpcmpeqw
pop
mov
cmpsb
sbb
popa
add
ja
in
or
and
pop
add
adc
test
push
int
push
mov
inc
icebp
add
cmpsb
cwtl
adc
xor
dec
xlat
jne
into
mov
adc
out
ja
push
xor
fidivl
leave
xchg
jge
mov
jmp
sub
ret
outsl
arpl
push
jae
push
sti
cmpps
sbb
or
movsb
sub
jl
cmp
cwtl
repz
je
or
adc
push
popa
add
pop
pop
push
mov
popa
aas
sbb
inc
das
loopne
into
test
jmp
or
xor
push
int3
push
sub
cmpsb
adc
push
mov
lret
jecxz
shll
xor
adc
push
lock
outsb
inc
int
pop
stos
les
jecxz
sbb
add
jecxz
dec
xchg
mov
add
insb
fisubrl
adc
pop
pop
shr
xor
aad
decb
xor
cmp
je
xor
cmpsb
cmpsl
imul
int3
push
mov
ljmp
adc
fsub
and
scas
ret
sbbb
dec
push
xchg
jp
fdivrp
adc
hlt
or
jo
fistpll
or
insl
xchg
pop
dec
cmp
pop
xchg
mov
mov
sub
inc
ficoml
fs
jae
push
rcll
fmul
mov
xchg
inc
and
xchg
sub
rorl
or
jle
repz
shr
scas
sub
lods
adc
pop
iret
hlt
out
mov
lahf
repnz
pop
aas
idiv
dec
adcl
jnp
push
idiv
dec
popf
add
arpl
outsl
subl
jp
jb
outsb
mov
dec
shrb
lret
scas
mov
ss
icebp
stos
enter
scas
arpl
push
icebp
into
xchg
mov
or
sub
lods
xor
imul
fbld
inc
ret
dec
push
xlat
fwait
adcb
xor
sbb
sbb
rcll
and
inc
xchg
ret
xchg
pop
in
iret
movsl
ljmp
daa
popa
xchg
scas
xchg
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
jmp
ret
ror
into
fcmovnbe
out
dec
stos
loopne
and
or
js
jle
js
mov
dec
mov
jecxz
ljmp
pop
insl
negb
stc
jl
inc
inc
jne
leave
push
xlat
shll
mov
aas
rcrb
mov
sbb
mov
jp
pop
int
cmpsl
sub
pop
inc
adc
xor
movsb
hlt
xchg
repnz
inc
aas
iret
push
fwait
and
fnstenv
cmp
pop
in
or
mov
or
fcmovnb
mov
fucomi
push
adc
mov
push
inc
add
fcoms
push
sub
xor
cmpl
adc
testb
mov
outsb
test
test
mov
mov
cmc
mov
cwtl
subl
xchg
mov
push
ss
in
idiv
rcl
add
das
insl
out
cmp
cmpb
dec
mov
jne
and
or
lods
out
in
out
mov
bound
xor
xor
shrl
add
pop
into
pop
add
mov
inc
std
adc
and
daa
add
test
cs
lea
sbb
push
lea
fbstp
push
imul
mov
sub
movsb
push
and
leave
push
lods
sbb
inc
lock
jl
test
xorl
cmp
mov
mov
mov
xor
cmp
mov
mov
test
push
push
aas
mov
mov
or
stos
pop
mov
xor
insl
lods
xchg
popa
mov
xchg
stc
fistl
dec
rcrl
in
jl
mov
in
sti
mov
pop
decb
push
test
addb
push
add
mov
sub
cmpl
orb
mov
pop
mov
push
jne
xlat
mov
inc
inc
xlat
cmc
repz
cmpb
popa
mov
fcoms
inc
cmp
push
sub
nop
mov
xchg
cmp
cmp
mov
sub
push
mov
inc
and
jae
dec
sbb
xchg
lret
nop
out
mov
outsb
lret
or
adc
out
or
xor
push
mov
mov
cmp
addr16
inc
sbb
bound
fisubrl
popf
cmp
pop
xor
mov
jmp
ror
int
rcr
aad
bound
or
mov
jle
js
fisubs
add
fimull
mov
cmpsb
jo
mov
cmp
pusha
fbstp
bound
inc
mov
sub
xor
or
loopne
stos
mov
inc
outsl
adc
add
dec
mov
stos
daa
loop
test
mov
adc
insl
repz
dec
jo
fbld
loopne
pop
repnz
mov
cmp
pop
call
fadd
or
jo
jne
mov
cli
mov
mov
xchg
movsw
inc
aas
xchg
and
rolb
movsl
pop
jo
hlt
sbb
js
out
cmp
mov
test
jno
cwtl
jb
fsub
push
icebp
xor
or
outsb
idivb
jp
mov
in
inc
addr16
inc
jne
ss
mov
inc
push
cwtl
xor
jg
pop
xor
ja
xor
addr16
mov
sbb
inc
cmp
shrb
mov
mov
inc
mov
push
xchg
cmc
js
xor
xchg
ds
mov
stos
xchg
lods
popf
iret
and
ret
lds
addb
dec
add
cmpsl
ja
push
dec
dec
adc
in
mov
movb
adc
jnp
add
xor
out
call
mov
js
push
ret
cmp
pop
cmp
fistl
push
popa
in
xchg
sbb
stos
push
cmp
daa
mov
and
mov
mov
adc
mov
and
in
or
push
xor
dec
cmp
sti
nop
hlt
cmp
andb
fcomps
xchg
xchg
fnstenv
pop
sub
mov
test
xor
cmp
aad
mov
mov
jmp
addl
pop
leave
inc
aam
stc
pop
imul
push
cli
shl
pop
cmc
sahf
sub
mov
nop
jb
subl
mov
lret
jne
sub
inc
jg
sbb
pop
jge
jmp
test
pop
stos
lock
js
fimuls
sub
shl
mov
and
repz
test
fucomp
inc
data16
sbb
in
movsb
daa
in
xor
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
jmp
leave
vpsubusw
leave
repnz
cld
rcll
or
js
jle
js
mov
divl
xor
dec
mov
inc
adc
cmpsb
jge
hlt
xchg
jne
cmp
scas
sbb
cmpsl
mov
stc
out
push
je
add
jbe
pop
pop
xor
lret
xor
pop
jae
push
jbe
push
jmp
js
jo
and
scas
aas
adc
imulb
mov
mov
adc
or
inc
dec
add
sub
jnp
arpl
in
xchg
sub
ds
pop
push
xchg
inc
and
hlt
jmp
mov
testl
mov
jnp
add
cmp
repnz
sbb
xor
dec
imul
push
jmp
popf
mov
mov
dec
push
pop
inc
mov
push
out
arpl
mov
in
mov
cld
mov
push
adc
pop
divb
lods
insb
flds
sub
lods
mov
data16
repz
ss
leave
out
int3
add
js
int
scas
mov
repnz
push
jl
mov
push
push
mov
shlb
pop
fiadds
sbb
inc
and
in
fmuls
incb
test
cli
stc
pop
or
inc
cmp
sbb
jecxz
mov
int
inc
scas
leave
icebp
mov
bound
inc
les
mov
leave
mov
push
push
dec
inc
ds
inc
push
pop
mov
xchg
test
mov
inc
popa
aaa
push
sub
out
push
flds
jge
add
cs
cmp
mov
lcall
stos
shll
jp
nop
loopne
test
sbb
stos
push
dec
imull
ja
divb
adc
and
je
addr16
push
push
push
stos
fdivrp
xor
imul
xchg
or
adc
and
dec
xchg
jecxz
and
mov
adc
sbb
sahf
frstor
mov
jnp
cmp
es
dec
mov
insl
dec
jae
inc
mov
dec
adc
gs
stc
pop
inc
lods
shll
sar
popf
lret
enter
or
fisttpll
inc
adc
push
dec
ret
push
inc
pop
jne
hlt
or
dec
cmp
rcrl
in
dec
xlat
loopne
push
jecxz
mov
push
mov
xchg
out
fs
jp
lock
pop
pop
imul
dec
mov
mov
jmp
ror
ror
ror
test
xchg
push
mov
adc
js
insl
xchg
xchg
inc
outsb
inc
pop
popa
jmp
fidivl
mov
aad
ja
shl
fcomp
outsl
pop
pop
sbb
in
jns
push
lea
push
insb
sahf
sbb
jg
jne
and
push
sub
mov
fimuls
push
jo
jnp
fildl
jp
mov
inc
loope
adc
sarl
lret
icebp
dec
test
in
int
fs
inc
add
lods
es
fists
mov
mov
add
ret
jnp
fldcw
stos
pop
sahf
stos
cmp
test
in
ds
mov
movsb
sbb
dec
add
or
add
lret
in
mov
in
jbe
cmp
sti
bswap
incb
xchg
sbb
enter
cmpsb
fsubs
cwtl
adc
mov
jo
mov
jge
xor
jb
das
incl
xchg
xor
lods
fcoml
pop
cmp
inc
mov
sahf
sub
out
xor
shr
call
cwtl
or
int
fwait
das
mov
mov
jae
pop
cmp
dec
hlt
movsb
or
test
in
dec
inc
sbb
sub
ffree
xchg
lods
sarl
out
mov
push
je
jge
aam
xchg
xor
mov
add
sbb
aas
xor
xchg
pop
mov
sbb
jmp
inc
mov
hlt
scas
data16
fildll
push
xchg
mov
xor
or
call
sub
cmp
cltd
fdiv
sahf
outsl
fdivs
add
sbb
inc
iret
imul
test
push
fisubl
sbb
ss
add
xchg
mov
sub
lock
fbld
or
faddl
mov
stos
test
push
insb
push
pop
jle
mov
xchg
lcall
mov
leave
jg
or
mov
add
pop
and
xchg
inc
out
ret
jnp
ret
mov
add
sub
lods
pop
repz
adc
lds
lret
mov
pop
or
mov
sub
sub
sti
sbb
mov
push
rorb
and
ret
jno
shll
hlt
sub
inc
or
add
lcall
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
cmp
cmp
rcr
fidivl
sahf
mov
js
jle
js
imul
sub
pop
frstor
jge
into
lock
sub
add
push
pusha
testb
jl
ret
pop
sbb
das
mov
daa
dec
shl
dec
mov
scas
shlb
mov
fs
loop
sub
shrb
icebp
fildl
aaa
sub
and
inc
cltd
mov
arpl
sbb
arpl
inc
imul
push
fs
mov
pop
mov
or
push
sbb
test
jne
inc
aad
xor
mov
into
fisttpl
xchg
push
sbb
push
cld
shll
inc
pop
loopne
push
mov
sub
test
xor
fs
dec
pusha
in
push
mov
and
or
inc
jge
cmp
jge
or
jl
sub
xor
add
lods
imul
out
jno
outsb
ss
fistpll
sbb
sbbb
lea
pop
loopne
cmp
pop
add
push
xlat
and
bound
call
push
filds
call
shll
ja
mov
cld
outsb
xor
push
mov
mov
sbb
mov
lahf
sbb
loopne
movsb
adcl
in
out
fisubs
cmpb
fistpll
sbb
push
mov
data16
leave
fcmovne
add
pop
aad
femms
adc
cs
mov
jb
sub
mov
or
loopne
xor
outsb
into
mov
pop
mov
and
jmp
imul
push
xchg
nop
xorl
mov
cmp
cltd
inc
jg
movsb
ljmp
jo
cltd
jne
push
ret
movsl
jg
rcrb
inc
mov
loopne
scas
inc
in
cmpsb
mov
inc
les
xorb
pop
inc
cmp
mov
add
push
add
outsb
imul
cltd
test
repz
fldt
mov
mov
jae
testl
and
hlt
je
mov
add
shll
ret
cmpsb
cld
ret
idivl
dec
lods
cwtl
jno
cmpsl
xchg
mov
inc
fistps
cmc
movsl
fldl2e
sbb
push
xchg
inc
arpl
popa
or
mov
ljmp
es
imul
and
cmp
shl
push
push
aam
repz
call
inc
iret
nop
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
jmp
xlat
aas
mov
fwait
clc
movb
sbb
jle
js
lret
jg
jno
pop
iret
inc
pop
loop
cmp
mov
mov
ljmp
push
arpl
mov
add
ljmp
pop
dec
fmuls
clc
xchg
fs
push
mov
pushf
inc
and
insl
orb
dec
add
in
insb
xchg
or
cs
mov
mov
or
call
dec
daa
cld
iret
shlb
aas
stc
sub
repz
clc
and
fdivrp
mov
fldlg2
add
inc
mov
or
jne
pop
adc
pop
jmp
mov
lret
and
popf
sbb
insl
cmpsb
push
and
dec
inc
and
and
lahf
loope
call
insb
mov
frstor
jmp
jno
push
imul
pop
dec
scas
adc
les
sahf
mov
stos
add
sarb
inc
cwtl
lods
loope
sahf
popf
jne
cmpsl
jns
or
jo
lds
mov
fnstsw
mov
out
shlb
xor
roll
jno
test
push
fwait
push
pusha
xchg
dec
ss
mov
js
add
xor
jbe
mov
push
outsl
jle
push
add
mov
popf
sahf
inc
xor
mov
sbb
aas
imul
cmpsl
in
fldcw
lea
repz
insl
addr16
jp
mov
mov
mov
into
sbbb
mov
dec
mov
push
jae
cmp
add
sarl
xor
add
push
and
jle
lahf
aad
les
xor
call
test
mov
sbb
ret
adcb
and
ret
add
or
mov
push
fadd
mov
mov
stos
push
mov
sub
cmp
and
negl
jbe
imul
cmpsb
gs
nop
pushf
mov
aas
out
pushf
arpl
xchg
js
push
push
lcall
dec
inc
push
dec
cwtl
adc
test
xchg
xchg
daa
mov
aaa
adc
clc
sbb
lret
sahf
mov
into
push
push
mov
stc
push
loopne
mov
push
test
sbb
fildll
dec
test
scas
mov
outsl
dec
mov
inc
insl
fst
xchg
cmp
or
decl
popf
mov
add
add
rol
ror
mov
sahf
jbe
adc
js
jle
js
cmp
mov
jle
sarl
inc
pop
inc
cltd
or
pop
loop
nop
scas
into
sbb
gs
mov
cwtl
lods
scas
lahf
jp
jb
nop
js
ret
inc
mov
pop
movsb
mov
and
les
pop
fsubr
int3
xchg
dec
jbe
add
push
sbb
cmpl
ds
and
rcl
fsts
xchg
dec
xchg
lea
push
cmp
jns
sub
shll
pop
xor
scas
cmp
sub
and
daa
cmp
sbb
mov
iret
mov
pop
mov
in
mov
xchg
fiadds
dec
sub
cmp
push
mov
mov
ss
jmp
jp
arpl
test
jns
insl
cmp
outsb
scas
push
pop
gs
jo
add
xor
mov
xchg
cld
push
cmc
xor
inc
nop
xchg
aaa
in
or
pushf
jl
jle
cmc
sar
mov
outsl
mov
cs
and
mov
lret
mov
mov
push
mov
dec
in
push
call
xor
cli
add
test
aaa
fcmove
aaa
out
adc
and
xorl
stc
mov
repnz
xor
xor
push
xchg
cmpsl
jecxz
repz
mov
push
insb
cmp
mov
and
or
sbb
icebp
popa
cltd
rcl
sub
and
out
int
inc
in
maskmovq
divl
or
sbb
je
cltd
fsubp
dec
dec
xchg
inc
test
jbe
mov
aaa
push
fimull
add
pop
faddl
or
add
xchg
or
in
and
nop
bound
lahf
jge
pop
mov
lods
lret
shll
push
neg
fcomp
inc
movsl
mov
in
push
cli
negb
lcall
pop
jo
lds
lahf
mov
mov
mov
push
dec
cmpsl
or
xor
pop
arpl
fiaddl
idivb
and
or
jbe
repnz
mov
mov
neg
fisttpl
icebp
sub
gs
adc
inc
out
into
push
leave
rcrl
xor
aas
xor
inc
jno
push
mov
cmp
cmp
je
jmp
leave
rol
rcr
rcr
ss
fwait
push
jno
and
jle
js
imul
cmp
ja
out
and
xchg
xlat
daa
lods
test
mov
cmp
cmp
push
inc
add
lret
jnp
loop
test
insb
rcr
dec
adc
add
cmpsb
aaa
out
inc
in
dec
rcrl
xchg
push
mov
shl
dec
push
pop
les
inc
add
mov
pop
sub
test
jae
add
sub
and
cli
inc
push
into
aam
mov
sbb
in
jbe
xor
mov
cmp
dec
xlat
js
mov
lods
out
jno
pop
and
jae
pop
push
or
mov
mov
fwait
lret
es
lds
pop
sbb
sub
int
xchg
int3
dec
aad
cmp
fisubrs
dec
dec
outsl
lock
addr16
pop
inc
push
or
mov
pop
and
sbb
inc
push
mov
add
mov
cltd
push
leave
inc
sub
cmp
cmp
pushf
gs
xor
data16
cmpsb
xor
lea
mov
iret
imul
cmp
popa
xchg
leave
pusha
cmc
icebp
mov
es
stc
movsl
xchg
pushf
ret
fmulp
es
popa
pushf
jae
dec
out
cmp
and
xchg
les
enter
mov
orl
jmp
xchg
into
popa
push
dec
mov
sub
loop
mov
std
fwait
add
test
gs
andl
idivl
lret
jae
repnz
scas
xchg
push
dec
stos
loop
scas
push
sti
xchg
xchg
xchg
sbb
sbb
push
jne
adcl
imul
stos
jg
or
mov
fs
push
pop
sub
xlat
dec
leave
sub
mov
hlt
mov
cltd
test
out
jno
xchg
gs
inc
ret
jg
and
out
adc
jbe
loopne
mov
in
ret
addr16
jno
mov
or
add
pop
xchg
add
xchg
dec
adc
dec
sub
dec
aaa
in
sarl
inc
testb
mov
xchg
xor
mov
jbe
lcall
and
or
jns
cmp
jp
movsl
add
idivb
insl
jl
mov
mov
xor
add
mov
jmp
jmp
ds
lret
fldenv
addr16
sbb
js
jle
js
jl
repnz
add
mov
icebp
pop
inc
imul
sti
dec
enter
iret
pop
xor
mov
or
flds
fs
sbb
adc
xchg
add
cmp
lret
xchg
push
out
out
jae
mov
jns
mov
ja
push
adc
jmp
add
hlt
pop
movsb
arpl
cmc
scas
dec
sbbb
sub
jg
bound
sbbl
jb
nop
sarb
cli
cwtl
sbb
add
mov
sub
leave
add
adc
out
jl
xor
int3
mov
iret
add
je
imul
aas
mov
sub
hlt
movsl
lsl
leave
pop
and
out
pusha
rcrb
mov
ret
fisubl
popl
pop
add
hlt
cli
mov
test
xchg
dec
mov
cmp
mov
push
loopne
incl
xchg
xor
ret
movsb
sbb
lret
nop
cli
adc
sti
mov
bound
int3
ret
pop
repz
in
pop
jne
jnp
cmp
dec
roll
sub
neg
pusha
std
jbe
push
adc
adc
movsl
ljmp
dec
pop
add
dec
sbb
testl
or
rclb
test
imul
xor
mov
or
mov
pusha
rol
ds
mov
mov
mov
in
ja
loopne
mov
mul
aas
cmp
mov
add
test
jnp
lea
lret
xor
add
xchg
lock
jns
adc
add
neg
dec
shll
xchg
cmp
jmp
xor
xchg
sar
test
fcompl
sub
shrl
dec
test
inc
fwait
adcb
jne
push
pop
mov
mov
sti
push
fildll
dec
sbb
sbb
jnp
sub
fs
xchg
pop
lcall
xchg
cmpsb
or
jge
cltd
outsb
mov
xchg
mov
imul
jnp
sahf
daa
ffreep
adc
add
sub
mov
jno
cmp
jne
mov
add
add
mov
mov
mov
jmp
aas
leave
enter
fxch
mov
dec
xlat
fcomps
jle
js
js
decb
insb
vmovapd
movsb
outsl
add
jo
or
cmp
and
je
push
movsl
inc
enter
mov
jp
pop
inc
adc
jp
xchg
std
lahf
cmp
push
xchg
test
and
adc
mov
push
dec
pop
dec
test
movsb
mov
mov
les
cs
notb
xchg
addr16
xorb
sbbb
loope
xchg
or
cwtl
ret
push
shll
sbb
bound
pop
mov
mov
in
popa
mov
shll
test
idivb
aam
pop
push
data16
xchg
pop
inc
lret
mov
inc
inc
call
jl
jbe
mov
push
test
xchg
std
loope
pushl
dec
push
and
ss
test
icebp
pop
sub
nop
jae
mov
adc
dec
in
jl
sti
xor
jo
popf
xchg
into
mov
pop
jne
add
pushf
push
pop
roll
out
xor
jl
sub
xlat
mov
push
add
sub
inc
adc
loop
mov
xor
sbb
xchg
add
mov
sub
jg
sbb
aam
xchg
aas
fisubrl
pop
ret
cmp
lahf
in
sub
sub
and
in
mov
arpl
pusha
and
mov
fbstp
pop
sarb
adc
ljmp
stos
aam
negb
jg
std
mov
pop
pop
lret
mov
sarl
sbb
dec
push
jge
in
mov
lods
or
jg
loopne
adc
jl
int
mov
pop
lcall
xchg
daa
xor
mov
xchg
lods
shlb
push
xchg
lret
or
push
dec
xchg
xor
nop
aad
jge,pn
jno
test
push
in
dec
xchg
std
inc
pop
addr16
mov
and
in
shrb
add
sub
sbb
incb
pop
lods
repnz
cs
fstps
std
sub
and
lcall
daa
inc
add
pop
and
cs
and
mov
push
inc
int3
pop
mov
mov
fcmovb
xlat
pop
fsubrl
ljmp
int
loop
cmp
lea
addr16
std
test
mov
push
push
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
mov
add
push
xor
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
decl
movl
mov
not
jmp
rol
lret
leave
lret
leave
lds
dec
inc
insb
aas
xchg
ja
sub
dec
jle
js
cltd
outsl
mov
js
mov
or
pop
daa
push
lcall
sahf
mul
sub
in
pop
push
data16
dec
int
xchg
xchg
movsl
ljmp
push
dec
ret
ficompl
test
adc
pop
inc
repnz
sub
daa
pusha
test
jnp
call
jp
adc
movb
test
mov
repnz
push
push
in
cli
fstpl
popf
inc
inc
sub
push
or
inc
inc
sbb
push
shlb
and
imul
add
jg
xor
adc
mov
push
cwtl
mov
mov
insl
xchg
and
fdivs
iret
adc
pop
pop
pop
cmp
shll
push
addr16
cmp
jb
test
jmp
int3
out
outsb
lahf
push
pop
push
mov
cmp
or
adc
and
cwtl
ret
jmp
ss
push
loope
or
pop
ja
xor
or
cmp
jb
push
inc
outsb
mov
test
mov
shlb
out
lock
jecxz
mov
lea
in
and
popf
xchg
push
xchg
xchg
pop
fnstsw
out
lcall
or
lret
and
mov
scas
xor
adc
adc
out
imul
fildl
push
sub
repz
ds
pop
adc
pop
cli
ja
jne
dec
sti
push
int3
pop
mov
in
and
nop
add
adc
dec
stc
mov
cmc
inc
mov
rcr
push
mov
es
push
lea
cwtl
imul
lret
push
fiadds
sbb
and
out
pusha
add
movsb
jnp
xor
shlb
jo
cmp
leave
clc
dec
imul
pop
adc
scas
adc
jnp
jge
xchg
adc
aas
and
ret
push
bound
mov
idiv
std
or
cmp
inc
xchg
fucom
add
adc
push
jg
test
jo
addr16
sub
popl
xchg
ret
testb
adc
adcl
inc
insl
gs
into
outsb
xchg
aaa
xchg
les
iret
mov
jno
loope
sub
mov
incb
daa
loop
mov
rorb
dec
pop
sbb
jae
ret
movsl
mov
pushf
pop
repz
fwait
repnz
dec
je
pop
je
push
test
xor
orb
lds
pop
xchg
movsb
push
mov
inc
dec
inc
fs
aad
mov
or
sub
jl
adc
and
lahf
xchg
and
add
add
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
push
push
push
call
jmp
xor
jmp
rol
int3
pop
test
in
jno
js
dec
jle
js
jo
test
inc
mov
cmpsb
pop
jg
daa
push
xchg
mov
into
push
jo
mov
cmpsl
bound
xchg
pop
lods
jge
add
sbb
jmp
int3
imul
and
enter
cmp
ret
nop
cmp
imul
syscall
push
popf
push
and
outsl
xor
aad
xchg
xchg
adc
aam
sbb
jne
scas
sbb
mov
dec
test
lret
sbb
popf
push
int3
cli
addps
mov
mov
push
pop
sahf
jnp
xor
enter
movsb
fwait
ret
inc
arpl
or
stos
iret
cltd
jge
mov
loopne
mov
mov
ds
out
repnz
scas
insl
jne
pushf
inc
shr
sub
mov
or
clc
std
ret
mov
push
push
xorl
sarb
out
ljmp
dec
pop
xor
or
xor
rorb
movsl
push
cmpsb
pop
jb
or
cmpsl
mov
or
and
jl
lcall
push
push
addr16
dec
scas
add
add
daa
xor
iret
mov
cmp
ret
and
imul
mov
mov
push
jnp
call
push
adc
adc
shll
mov
mov
sbb
mov
xor
iret
rcll
mov
xchg
inc
rcll
popa
add
lea
lret
test
mov
xchg
dec
aam
mov
push
insl
fcoml
xchg
mulb
movsl
mov
jo
dec
inc
push
in
mov
pop
jg
pop
mov
stos
jo
decb
leave
xor
xchg
jo
js
add
mov
push
clc
xchg
pop
outsb
push
cmp
or
jecxz
mov
push
rcll
fisubrs
popf
ja
outsb
jp
or
cmc
and
fs
pop
mov
outsl
and
cwtl
or
imul
mov
loopne
xor
dec
sbb
rcll
push
mov
sub
gs
fimuls
lcall
mov
mov
jl
lcall
pop
pushf
or
jae
out
cwtl
pushl
in
outsb
jo
mov
sbb
cltd
jb
rcll
add
insb
pop
pusha
cmp
mov
movsl
sbb
negl
ljmp
dec
push
ds
loopne
mov
sbb
cmp
xor
jbe
xorl
mov
out
add
jns
add
cmovno
ja
dec
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
jmp
enter
aam
mov
int3
push
subl
js
jle
js
inc
mov
lret
aad
mov
and
jge
aas
inc
or
xor
dec
mov
imul
data16
scas
or
popf
data16
push
sbb
jbe
mov
mov
pop
das
idivl
cmp
call
jp
mov
ljmp
adc
xchg
sbb
ret
or
popf
inc
push
shlb
xchg
movsb
mov
inc
xchg
shl
lcall
xchg
push
pop
pushf
test
out
stos
cmp
push
sub
ljmp
lea
jno
in
and
and
repz
cmc
sahf
cmp
xchg
adc
dec
in
mov
call
pop
push
mov
test
jp
or
outsl
cwtl
fnstenv
jb
cld
call
sbb
xor
or
xchg
lahf
mov
and
mov
or
push
jb
mov
divl
sub
leave
insb
sti
cmc
mov
pop
jae
ficomps
mov
stos
mov
inc
xchg
inc
pop
jae
nop
or
test
es
cli
sub
adcb
dec
mov
loopne
push
push
sahf
shll
addr16
mov
xchg
add
iret
lods
js
std
or
pop
out
cmp
in
data16
pop
xor
lahf
inc
mov
fidivl
cmp
sub
cmp
sub
ret
sub
addr16
xor
jne
mov
rol
add
das
dec
fdivl
push
add
jl
push
in
add
ret
movsb
pop
scas
fidivl
enter
mov
sub
fs
leave
or
adc
nop
mov
subb
pop
push
jg
fs
loopne
test
stos
push
cld
jle
mov
xchg
and
mov
data16
test
imul
arpl
pop
mov
in
pop
xchg
ljmp
sbb
hlt
out
repz
btcl
cwtl
pop
flds
in
fxch
aad
orl
pushf
or
cmpsb
adc
mov
mov
hlt
dec
jle
mov
dec
xchg
and
dec
xor
add
pop
out
jns
arpl
xchg
mov
test
mov
jg
push
jo
lcall
adc
adc
fistpll
add
mov
add
inc
loopne
sbb
sahf
sbb
fbstp
stos
inc
xor
and
mov
in
int3
lret
push
adc
js
mov
xlat
test
sbb
mov
test
dec
sti
fildll
sub
stos
das
lret
ljmp
cmp
je
mov
mov
xor
jmp
rcl
leave
aad
xor
or
xor
dec
jle
js
push
cmpsb
sub
aad
mov
mov
rcl
cmc
and
xchg
sti
pop
sub
sbb
adc
cmp
pop
out
in
or
mov
pop
xchg
mov
aam
rep
add
cmp
xor
or
mov
aas
xchg
and
lock
je
es
stc
lcall
popa
in
sbb
lea
test
ja
mov
cmp
fs
add
mov
add
adc
es
sbb
into
cld
or
jns
sbb
lds
lret
dec
mov
adc
jle
jg
and
loope
mov
aam
nop
xor
and
mov
add
cmp
inc
faddl
or
imul
scas
dec
sbb
iret
ss
mov
daa
cmp
pop
out
fsubs
inc
scas
xchg
es
adc
mov
mov
jmp
jge
sub
movsl
or
jno
add
gs
xor
je
jge
or
and
pop
mov
mov
outsl
inc
cmc
call
mov
mov
adc
jmp
pop
aam
cmc
and
inc
add
mov
xor
mov
add
fdivs
and
pop
cmp
pushf
sti
movsl
push
push
jp
inc
inc
cmp
mov
xchg
enter
jo
pop
mov
dec
sub
stos
push
out
xchg
fidivl
mov
jne
stc
sbbl
xchg
imul
inc
mov
outsl
pusha
lret
cmp
mov
push
push
or
mov
mov
or
stc
xchg
sub
dec
dec
push
lret
inc
aam
lock
lods
xchg
and
loopne
adc
ja
mov
mov
mov
in
pushf
out
and
dec
mov
mov
push
push
notrack
lods
add
sbb
sub
lret
xor
jl
adc
lds
add
outsl
xacquire
jg
popf
pop
xchg
daa
adc
inc
xchg
add
add
cmp
dec
xor
loope
or
mov
xorl
adc
int
das
icebp
test
xor
sar
nop
cmp
sub
into
lock
jmp
jae
hlt
xor
adc
sbb
xchg
push
xchg
popf
jle
pushf
mov
imulb
xor
dec
adc
sub
popf
popf
adc
lea
testb
adc
ss
jne
or
mov
out
mov
xlat
pushf
mov
dec
gs
mov
int
sub
add
xor
add
cmp
ja
push
jmp
mov
jmp
aas
rol
int3
aad
dec
sub
sub
xor
dec
jle
js
cmpsb
leave
xor
test
lret
xchg
in
cmp
aam
mov
aam
lahf
dec
push
or
dec
lock
stc
jbe
push
push
push
adc
call
push
push
xlat
mov
movsb
mov
jb
cmpb
xor
cmp
inc
jbe
into
nop
aaa
or
jb
pop
sbb
outsl
pop
scas
push
divl
mov
xchg
outsl
mov
push
test
push
mov
rcrb
mov
out
lcall
push
and
xchg
test
sbb
sar
mov
dec
out
fisttps
out
sub
movsb
mov
into
xor
incb
push
pop
fldenv
adc
sbb
adc
enter
out
mov
mov
pusha
mov
adc
int3
and
mov
inc
cmp
sbb
inc
push
push
jae
jo
lods
dec
mov
outsl
jnp
std
int3
sub
push
in
mov
das
xchg
lods
xchg
and
dec
notl
outsb
sbb
mov
aaa
sub
ljmp
bound
mov
cld
jg
jbe
push
mov
mov
cmpsl
push
adc
and
fmulp
inc
aas
adc
loope
pop
outsb
jbe
ss
outsl
cmp
dec
shlb
mov
aas
sbb
scas
out
lcall
push
push
sar
jnp
scas
mov
mov
sub
sysenter
inc
adc
lods
data16
push
jbe
sbb
push
xchg
ljmp
daa
cli
mov
lret
out
cmp
mov
cmp
push
xor
repz
sub
adc
mov
dec
fnstcw
repnz
sub
add
icebp
addr16
push
add
add
testl
inc
xchg
cmc
fs
stc
adc
adc
and
or
sbbb
shlb
and
cld
addr16
in
enter
out
lcall
sub
or
popf
inc
adc
packuswb
inc
sbb
jnp
mov
sub
fsub
imul
std
shlb
cli
nop
test
loopne
ret
or
xor
insl
cmp
cmpsl
popf
test
jg
xor
lret
jno
out
shll
dec
sub
push
lahf
out
cmp
fwait
pop
sbb
adc
jmp
or
cli
dec
mov
out
call
jecxz
mov
popa
pop
aam
leave
mov
jnp
es
cltd
adc
cld
mov
cmp
mov
pop
mov
jmp
int
rol
ror
aad
inc
jecxz
fcompl
mov
cmp
jle
js
jnp
clc
cs
fistpll
out
adc
xor
sbb
mov
add
and
dec
cmpsl
das
aam
jnp
dec
add
andb
imul
scas
sbb
xor
mov
cvtdq2ps
popa
mov
xchg
imul
mov
jp
mov
or
lret
es
pop
or
mov
xor
stc
rcrl
je
sar
enter
jge
iret
pop
fisttpl
and
shll
inc
mov
sub
repnz
dec
push
leave
inc
add
cmpsl
mov
js
imul
call
jp
add
pop
std
in
adc
fldl
cmp
adc
mov
repz
mov
mov
or
mov
sbb
adc
int3
out
imul
mov
ds
frstor
inc
mov
pop
jno
inc
ficoml
mov
sbb
inc
and
cwtl
push
sub
cmp
aaa
mov
lcall
pavgb
out
stos
shrb
dec
cmp
mov
pop
ret
and
xchg
xchg
int3
std
mov
lds
fsub
lock
imul
jnp
lret
or
sbb
shl
mov
mov
int
jg
sub
addr16
in
mov
inc
fdivr
cmp
popf
xlat
push
call
sbb
cs
out
mov
or
mov
add
nop
sbb
cmp
fdivl
pusha
xlat
cmpsl
xlat
mov
test
adc
enter
inc
aas
mov
shrl
stos
jg
andps
leave
and
movsl
mov
adc
lahf
dec
out
lcall
insb
mov
loop
push
adc
sbb
dec
push
cltd
icebp
bound
repz
pop
stos
clc
dec
xor
or
adc
decb
aaa
mov
mov
mov
cmpsb
dec
int
push
sbb
in
xchg
push
jle
loopne
shlb
sub
xchg
pop
sbb
out
or
and
push
aam
pushf
adc
cmp
in
pusha
in
xor
in
shlb
or
jns
popf
mov
out
repz
movsl
and
fnstcw
sbb
lret
sub
lds
and
xchg
push
cmp
repnz
xchg
jnp
pop
xchg
cmc
mov
xor
pop
test
or
mov
xchg
std
mov
lea
pop
in
jnp
ret
mov
mov
pop
scas
popa
popa
inc
out
popf
jecxz
mulb
jge
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
jmp
rol
lret
ret
shrl
insb
mov
jg
adc
js
dec
jle
js
jmp
xor
mov
call
dec
adc
or
fcoms
jo
test
and
inc
sbb
jns
mov
lret
sub
cmpsl
fwait
jbe
cmp
out
mov
xchg
adc
adc
jg
adc
pop
mov
ret
dec
jp
jne
mov
push
rolb
mov
mov
notl
adc
daa
fbstp
push
mov
jbe
cwtl
int3
nop
inc
mov
and
and
push
insl
xchg
pop
mov
scas
or
dec
mov
daa
jp
test
inc
push
orl
iret
mov
test
adcb
out
and
push
push
xor
subl
lahf
xchg
pop
mov
outsl
or
add
rol
repnz
dec
inc
add
gs
xchg
jecxz
cmpsb
into
out
jae
pop
movsb
xchg
and
sbb
popf
mov
inc
fs
inc
mov
loopne
xor
add
imul
divb
das
inc
shrl
dec
testl
mov
enter
mov
push
and
xchg
adc
ficoml
sub
mov
sahf
pushf
mov
add
mov
adc
dec
mov
int3
pop
arpl
out
push
sbb
jae
xor
les
cmc
cmp
stos
pop
add
enter
sbb
dec
dec
shrb
push
xchg
mov
fmuls
jns
inc
inc
cwtl
push
dec
push
pop
in
punpckhbw
mov
loope
jge
sbb
addr16
inc
outsl
test
xchg
stc
pop
cli
jno
std
mov
movsl
jp
add
popa
sbb
inc
insb
add
cld
push
push
inc
movsb
jmp
into
insb
loopne
or
rcrb
std
mov
jp
mov
cmp
mov
xchg
sub
mov
cmp
and
mulb
add
push
mov
daa
sbb
xor
pop
and
shr
shr
stos
mov
mov
adcb
popf
sub
enter
into
rclb
mov
pop
sub
and
mov
sarb
dec
aad
cli
outsb
sub
insb
lea
cs
mov
lret
jb
mov
rolb
divb
mov
enter
sub
cwtl
lds
mov
lods
aad
mov
je
clc
mov
mov
xchg
sbb
outsb
dec
dec
sub
cmp
popa
and
sar
inc
or
mov
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
jmp
cmp
fnstcw
jecxz
or
adc
js
dec
jle
js
data16
popa
mov
mov
pop
cmp
push
inc
inc
repnz
mov
dec
movsb
jle
sbb
push
mov
xchg
mov
and
mov
push
es
out
push
imull
add
out
mov
and
mov
jo
push
popa
popf
scas
mov
pop
pop
mov
in
push
mov
icebp
mov
leave
lcall
xchg
pop
push
sbb
xchg
mov
sub
jge
sbb
inc
outsb
add
mov
sahf
push
adc
movsl
mov
gs
ja
dec
repnz
cmp
out
ficoml
inc
xchg
cmp
das
sbb
ret
push
adc
out
adc
out
mov
push
enter
repnz
lock
add
not
inc
or
mov
inc
push
ljmp
test
jnp
pop
inc
mov
stc
xchg
int3
sub
or
mov
or
lds
pop
sbb
dec
aam
push
pop
jmp
rol
mov
fcmovne
daa
mov
pop
pop
ret
movsl
cmp
sti
lock
icebp
rolb
xchg
sbb
repz
pop
es
cmp
stos
and
adc
mov
pop
in
add
inc
aam
stos
mov
scas
inc
xchg
inc
push
bound
or
sbb
mov
and
in
ret
adc
mov
mov
dec
popa
sbb
push
cld
cltd
sbb
orl
mov
push
nop
mov
out
xchg
aas
icebp
mov
xor
fldenv
and
sub
push
les
jns
ficomps
aam
lock
rcll
lock
cld
loope
das
cmpsb
fdivs
sub
or
pop
or
cli
out
outsb
insl
sbb
arpl
mul
rorl
mov
sub
filds
pop
push
std
mov
mov
add
mov
mov
mov
mov
idiv
adc
or
mov
mov
scas
stos
xchg
out
dec
test
xchg
xchg
std
fcmovu
dec
mov
xor
insl
mov
cmc
lret
inc
jae
push
loopne
jbe
fxch
and
pop
xlat
cld
mov
test
lock
inc
cmpb
adc
lods
push
sub
and
mov
addr16
repz
sbb
insl
adc
adc
pop
stos
xchg
test
aaa
mov
std
les
xlat
sbb
lret
or
mov
jnp
mov
stos
sub
test
shr
jmp
add
rol
ror
leave
rcr
aaa
mov
add
cmp
js
shl
out
das
imul
and
dec
mov
rorl
inc
clc
out
xlat
cld
jle
loop
inc
add
outsb
push
cmp
xchg
mov
sub
fistpll
jno
xlat
rorl
and
jge
nop
scas
add
jp
cmp
adc
pop
jbe
push
out
xor
mov
test
mov
or
and
daa
xchg
test
loope
stc
shrl
dec
push
xor
in
aas
fisttpl
ljmp
test
aaa
sub
push
enter
and
xlat
std
sbb
pop
adcb
push
out
jecxz
push
pop
mov
dec
shl
pop
cld
testl
dec
mov
xor
mov
and
sub
mov
das
xchg
dec
push
sub
lcall
insb
aaa
mov
ja
jne
scas
fsubrs
xchg
in
xlat
into
mov
adc
mov
push
cltd
movq
push
pop
xor
xchg
adc
add
pop
pop
dec
fiaddl
fidivl
ja
mov
push
int3
xor
xor
sub
daa
aam
test
sbb
out
ds
stos
sub
loopne
pop
xchg
push
inc
ss
iret
test
cmp
fidivs
inc
mov
and
jnp
arpl
out
stos
lret
mov
jmp
pop
mov
mov
mov
call
cmp
or
jmp
mov
fistps
test
xor
dec
sub
dec
add
xchg
sub
mov
add
lret
add
aas
ljmp
cmp
cmp
cmp
push
call
outsb
cmp
mov
adc
outsl
push
test
mov
mov
inc
aad
into
jmp
cs
pop
mov
or
pop
add
add
outsb
adc
mov
aam
push
fwait
cmp
ret
and
inc
jl
roll
push
insb
mov
and
les
jns
scas
fbld
push
push
add
lret
add
mov
sbb
inc
test
jo
outsb
lret
and
int3
adc
inc
pushl
pop
jle
push
push
lea
clc
pop
pop
std
sbb
aaa
mov
fadds
cmp
test
ret
lret
outsl
pop
xchg
fwait
test
xchg
cwtl
jecxz
dec
adc
xor
fsub
mov
mov
stos
ds
repnz
dec
mov
ror
repnz
add
inc
push
sub
ss
jmp
iret
rcl
lret
ror
xlat
lods
and
cwtl
insb
enter
js
dec
jle
js
pop
ret
jae
sub
jg
shrb
push
sbb
fdivrs
sahf
xor
xchg
movsl
and
jl
push
mov
mov
out
sbb
xor
cld
rorb
out
je
mov
fcomi
test
popf
in
jnp
addb
jae
adc
out
inc
mov
fwait
mov
shlb
push
iret
and
push
xlat
mov
into
out
dec
fidivs
ret
mov
int3
adc
mov
ret
mov
pop
jmp
mov
pop
inc
imul
scas
pop
mov
or
pop
mov
cli
movsl
sub
mov
sbb
adc
push
sbb
imul
les
mov
jmp
pop
popl
repz
pop
repnz
call
mov
into
cmpsb
into
jne
jne
cwtl
mov
xlat
pushf
cmp
mov
adc
shr
xchg
pop
cmp
dec
jl
or
fs
xor
dec
arpl
shll
addr16
mov
xchg
mov
fisubrl
or
test
sub
fwait
and
dec
stos
fsubl
push
flds
fnsave
pop
daa
call
pop
sbb
jecxz
enter
orl
loopne
or
or
add
or
mov
shll
imul
fnstenv
push
and
mov
jno,pn
jmp
mov
lret
xor
std
frstor
fwait
xor
lahf
leave
xor
sti
outsb
and
jecxz
jo
add
fwait
xor
mov
loopne
ds
fists
mov
mov
mov
push
call
pop
outsb
int3
rcl
popf
and
stc
mov
int
popf
xchg
ret
pop
subl
mov
cmovl
aam
iret
fildl
push
or
jle
sti
js
insb
inc
pop
xor
es
push
fildl
rclb
sbb
cmp
aas
rolb
sbb
loop
jno
call
data16
ret
cmc
inc
sbb
pop
adc
cwtl
jnp
scas
push
aas
adc
xchg
aam
ss
popf
sahf
xchg
notl
in
imul
les
push
int3
adc
call
stos
jle
mul
test
test
ja
lods
lds
pop
sbb
subb
mov
test
xor
nop
cmp
cmp
xlat
test
scas
insb
xchg
arpl
scas
xor
push
mov
dec
jg
and
je
sub
cmpsb
popf
xchg
xchg
div
mov
jmp
aas
ret
rol
sbbl
test
js
dec
jle
js
push
push
or
xchg
sbbl
dec
xchg
jmp
xchg
cwtl
sarb
sub
pop
pop
into
jmp
imul
cmpsl
pusha
fcoms
mov
add
jmp
test
dec
pop
push
pop
jno
int3
mov
mov
cmc
jnp
and
pushf
xlat
or
popa
mov
mov
shl
add
es
push
xor
sub
jae
scas
inc
movsb
bound
nop
mov
fsts
adc
lret
or
inc
mov
ljmp
mov
push
inc
xor
jmp
xchg
cmp
arpl
sub
call
lret
insl
xor
jb
cld
lock
pop
mov
cwtl
sub
mov
enter
int
rclb
cltd
add
sub
or
adc
mov
sbb
imul
jb
mov
dec
or
pop
pop
or
setp
insb
adc
sbb
imul
add
or
cmp
test
movsb
jo
sub
clc
adc
xchg
roll
in
jp
add
lds
cltd
mov
jno
mov
loope
in
scas
adc
inc
push
repz
sbb
cmpsl
cs
sbb
sub
pop
stc
sub
icebp
faddl
loop
mov
movsl
rorl
mull
add
pop
loopne
aam
mov
fists
mov
sub
das
lods
mov
jecxz
sbb
sbb
mov
mov
sti
xor
cs
aas
sbb
loope
push
pushf
dec
cltd
scas
incb
pop
jae
hlt
inc
enter
cmp
pushf
in
mov
jl
jae
leave
stc
ds
andb
lret
xor
sub
and
or
mov
mov
in
sbb
adc
jbe
inc
xor
sub
push
insl
ret
jb
cld
int3
adc
mov
xchg
fildll
sar
loopne
mov
mov
push
inc
add
mov
iret
data16
xchg
mov
aas
adc
add
pop
pop
push
inc
adc
cmpsb
gs
jmp
lcall
xchg
mov
outsl
or
decl
or
dec
in
into
add
xor
adc
jg
in
fiadds
jl
add
jg
push
dec
dec
pop
mov
dec
cmp
mov
js
or
iret
jp
xor
mov
mov
inc
test
outsl
push
movsl
xchg
push
in
leave
idiv
iret
stos
int3
stos
mov
enter
sbb
jmp
ds
cmp
mov
adc
mov
les
dec
jle
js
hlt
inc
xchg
xor
dec
fstl
fcompl
xor
imul
les
cs
or
mov
jmp
add
orb
fcmovbe
xchg
lods
mov
mov
js
jmp
adc
popw
cwtl
in
fcomi
adc
fwait
in
insb
das
lcall
sbb
xor
add
fisttpll
xchg
bound
scas
pop
push
mov
mov
pop
int3
or
sbb
jnp
jg
push
aad
mov
lret
and
sti
sbb
inc
ret
test
mov
push
out
xchg
popa
cmpb
push
loopne
scas
push
adc
or
fidivrl
inc
inc
fnsave
dec
jmp
loopne
inc
hlt
dec
invd
daa
sub
data16
xlat
lret
push
push
icebp
jo
nop
dec
pop
out
out
pop
jno
fwait
mov
xchg
sbb
pop
js
stos
jo
adc
cmpsb
mov
dec
clc
test
test
dec
movsl
testb
fisubl
cmp
mov
sbb
sub
inc
aaa
lods
jg
jl
xchg
xchg
inc
xchg
pop
pop
and
fldt
pop
xor
repnz
fsubs
icebp
mov
adcb
je
xchg
call
pop
mov
and
test
test
enter
push
inc
pop
jle
pop
test
push
pop
ret
mov
inc
xchg
sbb
jl
pop
int
rorb
fisttpl
shr
div
sbb
add
loope
outsb
in
and
xor
fwait
mov
lds
outsl
daa
gs
and
pop
xchg
inc
xchg
leave
dec
xchg
repz
sub
dec
lods
add
int3
lcall
mov
dec
mov
out
js
mov
loopne
icebp
or
cmpsb
movsl
test
fistpl
dec
cld
iret
ficoml
mov
push
packssdw
mov
mov
mov
push
pop
dec
ficoms
movsb
lret
sbb
testb
sub
iret
rcll
je
sub
inc
insl
sbb
shrb
adc
lret
aad
js
xor
push
mov
push
mov
loope
movsl
and
mov
loope
push
stos
mov
push
jnp
enter
jmp
dec
outsb
jge
sub
mov
mov
rsm
cmp
ss
dec
mov
push
sbbl
or
fnsave
jmp
rcll
fdivrl
movsb
cwtl
sub
mov
adc
pop
pop
hlt
dec
enter
inc
xchg
nop
mov
pop
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
and
mov
jmp
int3
vpmovmskb
fcmovnu
leave
in
loop
out
bound
outsb
add
js
fs
js
scas
add
add
outsl
nop
jg
adc
jb
pop
outsb
mov
out
lods
xor
add
int3
xor
test
and
ljmp
cmp
adc
outsb
push
scas
pop
filds
inc
mov
lahf
js
xor
mov
mov
push
pop
add
je
push
lret
je
mov
pop
or
inc
outsb
lods
cmpsb
pop
jae
push
and
mov
int
dec
std
divb
push
lcall
das
icebp
lods
and
xchg
shrb
mov
subl
and
test
inc
add
pop
cmc
cmpsl
jnp
dec
fdivrs
pop
jecxz
mov
add
in
pop
es
push
jbe
fistpl
shlb
movsl
adc
cltd
xchg
fimull
xor
xchg
ret
xchg
mov
xchg
sbb
push
arpl
mov
out
sti
pop
cwtl
outsl
mov
pop
adc
lods
mov
pop
mov
shll
loopne,pn
xchg
adc
test
dec
dec
mov
inc
imul
and
xchg
mov
test
imul
mov
cmp
cmp
add
add
fistpl
sbb
add
test
mov
xor
inc
repnz
out
imul
divl
orl
adc
or
rdpmc
or
imul
data16
inc
notl
out
fistpll
pop
movsl
adc
stc
int3
sbb
std
inc
push
mov
lcall
test
mov
lret
mov
and
jb
push
ret
iret
jecxz
clc
cli
mov
sbb
cmpsb
inc
and
cmc
xor
mov
jne
rcrl
inc
cwtl
and
inc
lock
jbe
cmp
sbb
aam
xlat
adc
mov
fdivr
popf
cmp
push
pop
sbb
pop
hlt
mov
adc
mov
inc
in
mov
js
mov
mov
xchg
outsb
mov
xchg
testb
inc
mov
ljmp
inc
mov
pop
pop
enter
dec
xchg
mov
inc
sti
jno
push
imul
sbb
xor
mov
clc
sub
in
xchg
dec
fsubrl
xor
mov
sbb
sbb
out
add
xchg
hlt
pop
jp
push
and
fcmove
pop
cmp
cwtl
insb
sbb
xchg
jno
and
push
movsl
ds
pushf
les
mov
xor
mov
xor
mov
inc
dec
fildl
inc
pop
inc
xchg
aad
add
stc
jne
or
sub
movsb
bound
loop
add
cmp
bound
mov
xor
mov
add
add
dec
add
xor
subl
mov
xorl
jmp
rol
cmp
aam
rol
mov
and
jp
aaa
insb
iret
js
fs
js
stos
sub
lret
out
cwtl
das
adc
decb
les
in
add
out
push
dec
inc
sub
jmp
xchg
lahf
sub
fnstcw
andl
pop
lock
popf
lcall
push
in
pop
loope
insb
pop
xor
push
and
int3
je
lds
push
leave
cmp
sbb
jmp
mov
sub
jl
pop
xchg
in
clc
mov
dec
rclb
push
clc
adc
add
movaps
and
incb
loope
sbb
xchg
jp
cltd
subb
cmp
cmpsl
or
jle
add
mov
dec
rcll
mov
das
push
dec
mov
xchg
xor
movl
lcall
in
shll
je
sub
gs
mov
inc
mov
adc
out
cmp
xchg
gs
cltd
out
testb
cmp
dec
iret
mov
in
test
add
cmp
jge
repz
xchg
xor
adc
sub
cld
js
int
clc
popf
sbb
xchg
or
popf
jl
stos
les
lods
fs
out
cmp
sbb
shll
outsb
jnp
cmp
mov
push
lea
jno
jbe
xor
in
xchg
outsl
in
into
movsb
sbb
popa
mov
inc
add
pop
xchg
nop
out
cmpsb
fs
mov
push
mov
clc
ja
test
pushf
shll
lret
popf
ret
cmp
dec
jl
mov
icebp
jecxz
imul
xor
inc
out
imul
scas
call
test
mov
and
fwait
addr16
cmpsl
call
fdivl
daa
inc
mov
lea
or
addr16
cmp
outsb
ret
mov
push
xchg
mov
jmp
data16
xchg
shrb
mov
xchg
fbld
and
sub
sub
and
iret
mov
sahf
cmpsl
js
mov
stos
pop
loop
inc
sub
and
push
js
repz
xchg
xor
es
cmc
fcmovnbe
cmpsl
mov
fsts
xorl
jg
in
xchg
repz
cli
call
add
push
mov
inc
xor
adc
pusha
push
test
out
subb
xchg
pop
fdivrl
jo
mov
xchg
outsl
fmull
jns
enter
imul
std
jmp
fidivl
addb
cmp
pop
mov
cmp
push
and
dec
es
push
cmpsb
in
test
lods
loop
ret
ret
mov
insl
mov
lods
inc
ljmp
les
aaa
add
ja
fldl
or
movzwl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
adc
mov
xor
add
sub
jmp
cmp
rcl
rol
ficoml
out
push
insb
pop
pop
int3
js
fs
js
out
jg
jno
dec
in
sbb
pop
cmp
movsl
rcrl
cmp
in
xchg
or
lods
jbe
sub
out
fucomip
outsb
std
outsb
sbbl
jg
fmull
cli
insb
out
mov
fwait
sahf
push
hlt
xchg
dec
mov
jmp
in
cmp
mov
sti
lds
sub
imul
mov
or
test
jmp
scas
sub
insl
xor
ja
popa
subl
gs
jp
adc
push
sti
add
cmpsl
arpl
pop
dec
inc
out
pop
pop
xor
lods
mov
lret
mov
in
cmpsb
pop
pop
push
push
cmpsb
dec
mov
adc
clc
add
dec
shll
cmp
shlb
jno
lret
popf
and
jle
inc
stc
lea
paddsb
frstor
lods
in
loop
je
je
dec
xchg
pcmpeqw
notl
pop
xchg
test
jmp
inc
dec
cmp
xchg
orb
int
push
xchg
repnz
dec
or
jmp
mov
xlat
idiv
push
jmp
shl
scas
ret
or
fs
mov
imulb
movsl
xchg
clc
xor
das
and
mov
dec
sbb
and
add
stc
leave
repz
lcall
lods
xor
pop
inc
mov
pop
xchg
sbb
or
addr16
clc
div
cs
test
cmp
cltd
xor
loop
insl
mov
pop
sbb
fdivl
adc
arpl
cmp
test
and
int
sub
mov
loope
cmp
scas
nop
call
push
dec
les
neg
sub
push
fimuls
nop
rorb
cmp
sbb
push
and
sbb
movsb
jp
push
in
sbb
mov
adc
jecxz
call
dec
push
rcr
aam
inc
jmp
pop
xchg
mov
push
adc
popf
sub
push
add
cmp
scas
stc
sbb
movl
lret
fs
xchg
jno
lcall
pop
mov
ret
flds
insb
cmc
mov
fdivl
push
idivl
sbb
fdivs
add
push
mov
cli
mov
mov
jmp
mov
inc
sysret
in
mov
mov
mov
or
stos
dec
push
addr16
pop
jg
jmp
in
push
mov
mov
int3
pop
inc
mov
sbb
test
in
pushf
lahf
jecxz
cs
sub
sbb
mov
bound
fs
or
lods
push
cmp
ss
aad
dec
fs
or
movsb
mov
pop
and
dec
cmp
xchg
xor
dec
jle
hlt
scas
add
loope
mov
jg
inc
incl
add
add
add
or
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
jmp
iret
lret
aad
in
mov
inc
sarl
fs
js
jns
les
mov
mov
sub
jecxz
sub
and
pop
mov
cs
aad
shrl
call
in
fs
std
imul
data16
add
jle
mov
ja
push
out
lret
insl
and
cmp
dec
pop
mov
sbb
into
jae
push
dec
or
dec
fwait
iret
setno
xchg
jb
dec
push
xor
mov
dec
inc
or
xlat
jp
adc
sbb
testl
push
pushf
aas
or
jbe
jb
sahf
fstl
push
aad
movsl
mov
cmc
dec
and
arpl
mov
or
inc
sbb
divl
sbb
mov
jmp
andl
pop
pop
and
leave
fisttpll
xchg
cmpsl
mov
scas
aad
into
subl
xchg
int
adc
sbb
and
xchg
jle
and
pop
xchg
shrl
mov
pop
fidivrl
movsb
add
imul
push
adc
jno
pop
jl
sub
mov
pop
fs
add
jle
leave
leave
lock
and
ret
pop
push
or
aam
lods
jbe
imul
sub
push
daa
lods
add
loop
dec
cli
int3
adc
add
rcrb
inc
ret
dec
arpl
in
xchg
push
rcl
push
sti
or
jp
ja
loopne
ret
add
jne
jle
lds
mov
dec
scas
dec
xorb
aad
cmp
cmp
dec
cwtl
js
add
sbb
sub
fldcw
pop
lahf
xor
mov
mov
mov
pop
stos
repz
cld
push
pusha
in
insb
aas
gs
dec
arpl
shlb
fwait
test
inc
push
push
les
mov
xchg
iret
outsb
push
icebp
or
jns
flds
cmc
lds
fdivs
sub
sti
lds
add
repnz
lods
cld
shrl
mov
test
jo
cmp
cwtl
std
dec
out
adc
loope
sbb
jae,pn
pop
add
inc
ret
inc
push
dec
mov
iret
add
dec
lea
outsb
xlat
outsl
or
adc
in
bound
in
sub
aad
mov
enter
fimull
xor
ja
out
push
xor
jo
jmp
pop
push
adc
aaa
pop
cmp
jg
shll
popa
and
out
sbb
into
fldcw
das
ret
loopne
cwtl
sbb
insl
out
dec
xor
push
fstps
arpl
test
das
inc
leave
or
mov
push
push
mov
mov
inc
mov
fs
and
andl
lret
lret
insb
xchg
ret
pop
mov
mov
mov
orl
mov
xor
sub
sbbl
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
mov
push
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
jmp
cmp
cmp
ret
shll
cmp
loopne
js
fs
js
jge
inc
ret
mov
adc
stos
test
jle
xchg
sbb
adc
sbb
or
inc
aad
addr16
cli
rcrb
insb
push
fwait
mov
push
cmp
outsb
ja
call
xchg
jecxz
or
dec
push
fldl
in
test
sbb
div
es
sbb
push
sub
jecxz
sub
dec
mov
adc
xchg
jns
pop
lret
mov
fwait
and
in
loope
jge
fisubrs
sti
fisttpl
shlb
inc
sub
push
dec
clc
mov
int
mov
mov
test
push
sub
popa
push
and
mov
or
arpl
popa
data16
out
pop
nop
dec
inc
mov
adc
mov
ror
scas
push
fwait
add
or
mov
fistpl
adc
xchg
scas
jno
fwait
pusha
dec
jne
or
leave
shrb
into
add
pop
lods
pop
iret
in
fisttps
sub
mov
push
cmp
adc
and
adc
cmp
mov
enter
xchg
inc
inc
jns
dec
adc
inc
inc
push
dec
jno
outsl
pop
jmp
fbld
jnp
test
inc
push
pop
or
cltd
push
pop
aas
cltd
push
inc
inc
mov
out
arpl
mov
enter
xlat
leave
mov
call
dec
aam
sbb
jp
xor
aad
sub
das
jmp
loop
mov
loopne
or
sbb
cli
jmp
jne
into
lods
mov
data16
daa
xorb
and
test
iret
in
ljmp
pop
cmp
pop
dec
mov
imul
ss
leave
cltd
mov
cltd
in
loop
pop
add
mov
mov
loope
inc
sahf
imul
out
jbe
sarb
in
dec
fsubrl
push
iret
clc
nop
xor
call
in
enter
xor
sbb
inc
out
mov
insb
adc
mulb
xor
sbb
lea
xchg
shrl
loopne
lea
sbb
fcoml
inc
lahf
xchg
lcall
push
pop
sub
jb
rcr
out
pushf
jmp
cmp
xchg
shrb
inc
xchg
push
push
inc
and
out
or
jbe
sahf
fs
js
and
sbb
int3
scas
xchg
xchg
jge
sahf
imul
lahf
in
ret
aas
mov
cltd
mov
inc
hlt
ljmp
adc
pop
inc
jns
cmp
repz
mov
dec
xchg
call
ljmp
push
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
jmp
ror
lret
fcmove
rcl
adc
xchg
xchg
mov
pushf
fstpt
fs
js
sub
push
stos
out
xor
scas
push
xor
dec
sub
sbb
addl
xor
inc
sbb
insl
dec
mov
mov
cmc
push
add
in
popf
test
jb
push
pop
test
and
lods
inc
mov
ja
mov
leave
std
cmpsb
pop
push
inc
mulb
ss
xor
icebp
and
or
push
jno
aas
sub
jp
xchg
xor
aam
inc
and
fcoms
mov
mov
call
jb
outsb
jl
dec
pop
xor
push
leave
out
rorb
mov
pop
sbb
adc
cmp
gs
mov
dec
pop
cs
leave
adc
leave
sub
xchg
imul
out
rorl
or
in
mov
xchg
aam
push
cmp
pop
pop
in
and
adc
flds
int3
sbb
dec
hlt
jg
mov
scas
sub
cmp
pop
jnp
mov
cmpsb
xchg
xchg
movsb
inc
lods
insl
aad
jbe
pop
scas
sub
mov
push
xchg
adc
jle
orps
push
lret
push
lods
push
and
jmp
inc
outsl
es
push
and
mov
fcmovnb
addr16
sahf
add
lret
or
xchg
mov
ljmp
xor
inc
movsl
jb
pop
test
jo
gs
push
and
jae
ljmp
pop
dec
das
and
popa
popa
jg
adc
dec
cmpsl
sub
ja
mov
outsb
dec
jmp
data16
jecxz
leave
dec
in
adc
jb
fbstp
out
mov
inc
dec
out
out
sbb
or
call
lds
and
jmp
adc
daa
ret
aas
or
int
push
dec
cmp
or
dec
jae
xchg
xor
jns
sub
add
subb
add
shl
nop
aaa
inc
shrb
sub
mov
sub
andb
add
add
add
push
add
sbb
lds
fidivrs
mov
lret
cmp
adc
std
jge
rcrl
add
iret
mov
sub
inc
outsb
pop
adc
push
cs
mov
pushf
repz
lods
pop
movb
adc
xor
aas
fstpl
xor
add
inc
andl
mov
repz
std
cmp
insl
inc
inc
mov
das
dec
scas
imull
push
pop
pop
ficomps
enter
out
sbb
sub
inc
es
xchg
shll
jmp
jne
pop
pop
mov
mov
jmp
lret
ret
fld
add
fcom
fsubr
popa
mov
js
fs
js
adc
xor
dec
mov
arpl
add
idivl
mov
adc
xchg
in
clc
inc
mov
lock
mov
jnp
mov
lret
insl
and
xchg
mov
insl
mov
rclb
fsubs
push
jmp
push
add
mov
push
nop
mov
iret
loope
out
jo
and
mov
cmp
fstl
push
addl
sbb
movsb
pop
sub
aad
lret
cltd
int3
jnp
mov
ljmp
jns
fiaddl
push
pop
fs
gs
jg
inc
xchg
test
insb
rorl
loopne
push
xlat
sbb
inc
dec
or
and
fsubl
jge
mov
icebp
add
ja
pop
and
mov
lds
mov
ret
sbb
ret
mov
out
sub
insl
jg
aas
cmpsl
fwait
jo
xor
hlt
xor
xlat
xchg
sub
add
popa
lods
add
push
or
jns
xchg
test
int
xchg
aaa
sti
pop
push
imul
lcall
rolb
dec
mov
dec
fcmovne
xchg
fsts
or
push
std
xchg
pop
lods
jp
mov
lds
inc
xchg
das
sbb
mov
das
add
int3
js
push
int3
pop
int
int3
sbb
add
rorb
scas
mov
jmp
ss
mov
xchg
mov
xchg
dec
xor
and
xchg
pushf
push
test
dec
cmp
sub
cmp
lret
and
xchg
dec
add
jne
pop
push
test
cwtl
int
or
sub
mov
pop
cwtl
inc
adc
push
mov
mov
mov
inc
movsb
dec
fisttpl
inc
clc
add
xor
inc
imul
and
mov
sbb
jns
or
sbb
xor
cmc
adc
mov
xchg
inc
dec
testl
or
push
push
ss
pop
add
pop
add
stos
mov
movl
test
lea
cmp
ja
pop
ds
inc
or
jle
or
cmc
cs
mov
sahf
cmpsb
ficoms
fnstsw
jns
or
jb
pop
repz
outsl
lret
leave
mov
ret
insl
sub
std
std
in
lds
test
sub
adc
fimull
mov
adc
xchg
inc
aad
imul
pop
sub
imul
lret
mov
sub
lods
loop
or
jmp
xchg
xor
add
mov
mov
xor
add
mov
mov
jmp
ret
ror
rcr
rcl
push
add
sahf
hlt
fnstsw
fs
js
cmp
sti
mov
sti
insb
ficompl
adc
in
jmp
in
jp
xchg
pop
outsb
loopne
or
push
lods
or
cmpsb
jp
mov
les
addb
xor
sbb
push
int
outsl
aam
cld
insl
ljmp
lret
test
ljmp
pop
les
nop
mov
lcall
mov
inc
les
aas
invd
pop
enter
mov
push
mov
or
cmp
push
cli
mov
stos
dec
aam
repnz
popf
push
and
jnp
pop
inc
out
adc
xchg
rorl
or
int3
std
sbb
sbb
enter
push
mov
jnp
ret
rol
dec
xor
gs
test
xor
mov
fcmovne
mov
movhps
into
pop
jo
int3
adc
xchg
jo
ja
and
dec
enter
sti
negb
push
inc
jo
std
ret
mov
add
pop
adc
push
xchg
outsl
xor
iret
jle
and
mov
sti
mov
cmp
mov
mov
imul
cmpsl
and
mov
dec
loop,pn
out
dec
push
mov
ret
or
roll
adc
das
subl
mov
rcll
cli
bound
pop
push
mov
jmp
sbb
push
notl
divb
fdiv
xchg
imul
es
sub
or
pop
inc
lret
jne
xchg
push
inc
lret
js
movsb
mov
or
xchg
movsl
sbb
mov
adcl
jecxz
cmp
dec
test
insl
jmp
xor
ret
es
pushf
mov
sbb
cmp
push
sub
mov
mov
xor
test
inc
shll
jae
dec
pandn
jae
xor
jg
rorl
cwtl
paddsb
imulb
fldt
stos
jp
sbb
nop
outsb
lret
lods
sub
cmpsb
lds
lahf
or
push
jle
sub
iret
lock
jp
xor
loop
std
bound
jbe
ja
scas
or
outsl
mov
sub
bound
out
push
movb
popf
push
jmp
sub
jns
and
and
repnz
pop
andl
hlt
sbb
push
lods
adc
es
dec
lods
sbb
pop
stc
lret
cld
movsl
fldt
nop
jecxz
mov
add
stc
and
sub
stos
adc
mov
in
test
push
lods
push
andl
mov
sbb
push
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
jmp
cmp
rcl
fcmovu
into
leave
xchg
loopne
js
fs
js
and
dec
and
mov
xor
dec
arpl
dec
lods
xchg
imulb
push
iret
je
mov
cmovg
addr16
ljmp
push
mov
sub
xchg
sub
mov
je
je
cli
or
jo
mov
sbb
jl
sbb
push
popf
stc
mul
adc
dec
xor
lock
mov
jecxz
mov
and
jp
sub
and
push
add
out
push
rorb
and
or
cmp
bnd
js
and
cltd
push
addr16
fs
mov
call
and
pop
sbb
dec
mov
lea
push
cmp
fsubl
mov
mov
cli
add
cwtl
jle
push
and
cmp
or
mulb
jae
inc
mov
insl
insb
cmp
lret
outsl
sbb
add
hlt
xor
xor
repnz
rclb
adc
adc
in
pop
sbb
in
test
cmp
xor
or
dec
cltd
jecxz
subb
das
dec
dec
inc
fbstp
pop
push
insb
push
mov
leave
xchg
arpl
mov
scas
jno
mov
loope
sahf
stc
inc
in
mov
scas
lock
push
int3
hlt
sti
xor
scas
dec
push
push
lret
es
out
std
dec
out
fldt
int3
iret
fmulp
stos
mov
dec
pop
jb
addr16
or
dec
pop
lods
xor
dec
inc
loope
sub
adc
jecxz
xor
gs
fbld
stos
sbb
inc
out
adc
cwtl
ss
xchg
add
push
mov
lret
adc
sub
sub
clc
add
pop
xor
mov
gs
notb
jnp
pop
in
jns
rcll
sub
mov
into
cmpsb
andl
adc
fs
ljmp
push
cmc
sub
pop
insl
push
filds
cmpsl
lret
jge
mov
pushf
lret
push
dec
mov
xchg
push
mov
testb
mov
enter
ret
outsb
mov
xchg
xchg
inc
ss
push
add
inc
pop
pushf
jl
outsb
xor
xor
sahf
repz
arpl
pop
push
bound
into
or
ret
out
in
cmpsl
sub
mov
bnd
dec
notb
mov
aad
stos
nop
test
fsubrl
scas
pop
dec
push
bound
dec
xchg
or
fnstsw
xchg
dec
and
xor
sub
popa
jge
ds
mov
inc
rolb
insl
idivb
int
inc
call
inc
in
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
jmp
aas
fld
add
sahf
fldenv
js
jle
js
mov
aas
mov
jae
xchg
sbb
push
dec
lods
dec
sub
xlat
adc
outsl
inc
test
cli
daa
adc
jl
lret
or
adc
push
add
push
and
sbb
jae
fs
sub
je
sbb
inc
push
add
mov
jmp
xchg
jle
mov
sbb
icebp
pop
pop
xlat
inc
lock
xor
pushf
test
or
stos
add
leave
or
ljmp
gs
push
in
jo
loopne
sbb
std
cli
mov
or
and
add
inc
clc
daa
xchg
jge
inc
stc
popa
in
ja
mov
mov
repz
subl
imul
rcrb
iret
fldcw
pop
ds
pop
cmp
in
mov
or
pop
push
jmp
and
pop
mov
sbb
xchg
rolb
mov
push
add
xchg
in
inc
pop
dec
sub
mov
adcl
adcb
xor
mov
mov
repnz
cmp
dec
call
xor
xorb
dec
cmp
nop
xchg
jg
es
bound
lds
and
popa
push
stos
jmp
mov
addr16
scas
adcb
movsb
std
sti
push
ja
cmpsl
popa
out
cmpsb
mov
repz
mov
insl
icebp
add
std
or
imul
sub
insb
pop
in
mov
or
mov
xor
movsl
mov
mov
fs
imul
add
xor
pushf
push
or
aaa
arpl
out
stc
dec
sub
push
push
push
mov
imulb
and
mov
cmp
push
push
sahf
or
ret
jnp
rclb
xchg
jbe
enter
and
popl
bound
mov
mov
xchg
push
jg
mov
ljmp
in
mov
jmp
je
fwait
cwtl
and
popa
cwtl
mov
arpl
and
xchg
rsm
inc
mov
outsl
mov
int3
adcb
xor
push
pusha
call
jmp
pop
push
and
add
mov
jge
lock
pop
cmpsb
jl
xlat
xlat
mov
cmpsb
xchg
push
js
cmc
push
mov
mov
dec
dec
rcll
inc
jns
js
mulb
imul
pop
inc
jbe
mov
bound
mov
or
cmc
shrb
xchg
xor
jecxz
xchg
popf
rcrl
push
fisttps
out
jmp
push
sub
push
leave
in
outsl
inc
cltd
aaa
data16
xor
addr16
pusha
mov
lret
jecxz
lahf
pop
or
pop
leave
ret
push
mov
push
xor
push
jmp
cmp
aad
mov
adc
sbb
in
js
jle
js
xchg
icebp
push
loop
xchg
mov
mov
lcall
and
mov
mov
xor
dec
lahf
mov
mov
fimull
and
mov
xor
popa
push
jmp
xchg
mulb
xchg
mov
ret
xor
insl
mov
outsl
inc
imul
inc
shll
push
int
mov
iret
hlt
popa
pushf
pop
mov
xchg
sbb
pop
sbb
jo
inc
cmp
mov
fsub
es
les
daa
dec
jbe
hlt
ljmp
loope
int
jmp
cs
adc
mov
aad
and
xor
pop
divl
je
int3
adc
xorl
mov
mov
or
xor
mov
mov
loopne
vandps
or
sti
insl
fsts
adcl
jmp
aaa
mov
push
subl
mov
push
aam
jecxz
and
in
jg
scas
or
adc
repz
mov
jae
outsb
orps
push
inc
sbb
scas
push
nop
dec
push
rclb
or
xor
fmull
stos
adc
outsb
movsb
sub
push
rcl
dec
incl
fcoms
inc
pop
fs
mov
pop
or
repnz
or
adc
popf
pop
cs
scas
add
notb
testw
insb
xchg
xchg
lahf
dec
arpl
sub
pop
dec
mov
leave
pop
adc
sbb
mov
add
sbb
mov
jmp
js
sbb
rcr
aam
fbstp
xor
jp
and
into
imul
repnz
shlw
jg
sbb
call
pop
in
xchg
cmp
lock
in
popf
inc
add
les
dec
inc
xor
jb
in
adcl
movsb
ffree
js
xchg
negl
repz
stos
mov
adc
test
rcrb
loopne
push
movsb
daa
add
adc
imull
clc
mov
rcrl
pusha
es
mov
mov
loopne
pusha
pop
leave
rcll
push
dec
inc
lahf
or
cmpsb
xchg
sbb
clc
out
ss
cmp
push
mov
or
mulb
push
push
mov
scas
xor
sbb
fucomp
jg
xchg
addr16
mov
in
inc
clc
cmp
cld
cmp
cld
add
push
mov
mov
add
mov
mov
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
mov
orl
add
add
xorl
imul
mov
jmp
cmp
lret
stos
adcl
icebp
lock
cmpsl
jle
js
jge
push
mov
cmpsb
inc
js
push
sbbl
js
les
pop
dec
mov
push
sub
out
out
psrlw
or
ret
pusha
stc
xchg
ret
fistpll
push
jmp
div
dec
mov
ja,pn
sbb
mov
fsubrp
sub
inc
dec
and
jl
ret
lret
arpl
imul
sahf
sbb
daa
sti
xor
popf
fcomps
mov
jmp
push
gs
int3
push
xchg
cltd
into
bound
dec
mov
in
cmpsb
sbb
inc
lcall
and
lahf
push
pop
insl
negb
xchg
add
lcall
popa
xor
cmp
pushf
pop
cmp
inc
mov
leave
in
adc
mov
shrl
mov
mov
int
sub
cmc
jbe
cwtl
gs
mov
mov
in
xchg
repz
sbb
and
ret
outsl
xchg
daa
add
in
pop
xor
popa
pop
test
push
arpl
andb
es
pop
cmp
xchg
add
mov
dec
pop
pop
cmpsl
jp
nop
addr16
mov
loopne
mov
sti
add
inc
mov
repz
xchg
aam
bound
inc
ret
xor
xchg
sbb
dec
xor
cmp
jecxz
and
sub
push
mov
jge
xor
inc
xchg
dec
sub
fcmovb
fld1
add
nop
clc
hlt
push
rcrb
jle
call
sti
or
sbb
inc
cltd
xchg
into
sub
jecxz
add
jnp
push
test
cmpsl
std
dec
mov
lret
mov
xor
sub
enter
sbb
cltd
push
fldl
push
out
fstps
jle
out
jp
mov
repnz
repz
je
xchg
jle
jp
shl
fstl
jp
xor
aaa
rcrb
loopne
pop
dec
and
and
cmp
repnz
icebp
popa
stos
aad
dec
pop
inc
push
xchg
pop
jnp
sub
das
in
cmp
rolb
mov
addb
movsb
cmp
jge
sbb
cmpsl
fs
mov
mov
inc
and
rorl
ljmp
xorb
std
xchg
jg
lret
or
sbbb
jecxz
inc
into
push
loopne
xlat
rclb
xor
add
pop
add
inc
pop
fldenv
adc
add
les
arpl
cmp
movl
jne
jmp
lret
cmp
mov
js
cmp
cmpsl
jle
js
and
add
pop
icebp
push
pop
fdivr
mov
mov
arpl
sbb
out
lods
out
sbbb
fwait
ret
lds
lret
xlat
xor
addl
iret
cmp
and
push
mov
sub
cltd
repnz
push
mov
mov
push
mov
jecxz
cmc
lea
enter
out
xchg
fdiv
xchg
ficompl
loop
inc
mov
sti
sub
and
push
xchg
mov
lds
fcmovnb
addr16
mov
cli
cmp
or
es
shlb
add
xor
mov
push
mov
inc
and
jp
push
stc
mov
xchg
push
cmpsb
shrl
add
loope
mov
sub
jle
mov
cmpsl
inc
in
pop
jmp
xchg
stos
testl
nop
jns
and
or
fwait
push
pusha
shll
aam
cmpsl
in
out
mov
push
int3
add
inc
sbb
repnz
jno
je
sbb
jp
xlat
jo
jnp
mov
int
lods
xchg
aas
jp
xlat
sub
sub
push
js
cmpsl
movsb
mov
xchg
mulb
xchg
push
sarl
xchg
popf
sub
or
into
add
sub
out
adc
add
jo
add
out
mov
sub
ljmp
inc
and
sub
nop
inc
loopne
adc
sub
and
pop
out
pop
push
dec
roll
dec
push
dec
roll
aam
fidivrl
shl
jle
inc
leave
outsb
das
lods
negb
or
gs
adc
mov
out
hlt
push
roll
inc
stos
lahf
and
adc
push
lock
out
pop
lock
lock
cmp
test
out
inc
add
mov
lcall
mov
cli
in
adc
inc
ljmp
js
sub
jmp
xor
int
mov
jbe
cmpl
push
mov
inc
cli
inc
dec
lahf
mov
dec
push
jge
add
andb
dec
jb
sub
int3
jmp
mov
mov
mov
mov
jb
sub
cmp
ret
in
cmc
xor
add
push
push
cmp
xchg
cld
repz
outsb
jae
push
jno
xchg
pushaw
sbb
in
push
or
dec
sarl
loope
sbb
iret
push
push
ja
inc
cld
addl
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
jmp
xlat
leave
lret
aad
leave
adc
mov
js
jle
js
mov
mov
icebp
add
inc
push
bound
cmpsb
insb
gs
movsb
xchg
pop
jmp
mov
jle
aad
inc
loop
lcall
push
adc
roll
add
lcall
hlt
out
pop
fsubrs
push
xchg
sub
pop
inc
shlb
and
sub
hlt
adc
fs
nop
or
icebp
bnd
xchg
sbb
je
mov
scas
pop
push
ret
movsl
aad
mov
sub
aam
fistpl
popf
mov
and
jb
je
pop
pop
xchg
push
fisttps
push
test
arpl
jg
xor
sbb
jno
mov
arpl
test
nop
dec
cwtl
shl
mov
lret
test
fadd
in
stc
push
inc
das
loope
add
and
cmp
mov
icebp
int
xor
sub
sbb
cltd
inc
and
add
ss
shrl
xor
dec
mov
stc
aas
or
lcall
cmpsb
outsl
test
andb
pop
int3
inc
or
addr16
lods
repnz
inc
sbb
aam
shlb
daa
xorb
xchg
sub
jb
or
cmpb
mov
nop
adc
outsl
rcrl
jbe
cld
cmp
or
mov
jecxz
cmpsb
push
int3
in
stc
neg
push
aaa
ss
push
fildl
aas
or
push
aad
aas
loope
inc
in
jnp
es
lahf
iret
jp
cmp
jo
cltd
dec
and
inc
int3
xor
and
orb
enter
fidivrl
adc
bound
adc
loop
fnstenv
sahf
lcall
xchg
adc
lcall
cmp
cmp
sahf
daa
add
arpl
mov
or
push
sbb
mov
cmp
jge
add
dec
jmp
je
mov
lcall
mov
or
jl
pop
subb
mov
bound
inc
icebp
mov
jnp
hlt
pop
adc
ret
push
fstl
push
cwtl
ljmp
fcos
pop
push
mov
xchg
xchg
int3
iret
loop
pop
adc
test
fstpt
sbbb
out
and
pop
or
enter
sbb
shr
stc
aas
int
mov
sub
add
sbb
mov
or
jb
push
outsl
loope
imul
push
repz
mov
ret
js
pop
fcomi
dec
bound
mov
or
test
cld
pushl
ret
mov
imul
add
mov
mov
pop
leave
ret
push
mov
jmp
leave
enter
xlat
enter
fnsave
js
jle
js
add
or
xchg
and
inc
add
pop
push
inc
mov
mov
bnd
push
gs
stc
rcrl
les
adc
mov
enter
pusha
or
mov
das
rclb
rorb
and
jle
push
or
incl
repz
lret
jl
rcrb
inc
xor
xor
adc
aad
dec
push
das
clc
push
pop
sub
jge
mov
add
ret
cltd
inc
arpl
cmpl
stc
dec
adc
bound
sub
or
bound
clc
add
jne
push
pop
sbbb
ret
ficompl
cld
repnz
jle
or
pushl
pop
adc
and
sahf
add
ret
sarb
imul
shlb
mov
cmp
shr
les
fdivp
jp
pop
add
out
adc
frstor
out
nop
loope
dec
jle
repz
sbb
clc
and
mov
ljmp
out
mov
inc
mov
popf
out
imul
dec
adc
loopne
popa
stc
sub
sbb
sub
push
loope
push
adc
into
aas
test
adc
scas
fs
adc
insb
pop
push
movsl
loopne
nop
mov
rol
lret
dec
movsl
popf
bound
cmp
out
inc
das
xor
mov
cltd
pop
jo
stos
xor
ficoms
sbb
push
movsb
cmp
adc
cmp
sar
mov
adc
cmc
jge
icebp
mov
push
sub
mov
cld
cmp
sbb
das
dec
push
cmpsb
add
mov
xchg
sahf
ret
fld
or
jle
cltd
pop
and
cli
cld
ljmp
les
mov
sub
xchg
push
adc
mov
loop
jle
dec
xor
roll
icebp
inc
inc
pop
add
mov
jo
leave
sbb
mov
lret
int
vxorps
movsb
dec
push
sub
emms
push
add
cmp
mov
cmp
cwtl
xor
test
mov
pop
cmp
mov
imul
shll
mov
fstl
push
fldt
xor
jle
jnp
jbe
add
mov
mov
imul
push
jae
add
imul
stos
mov
sbb
mov
sahf
repz
mov
sahf
dec
jecxz
loop
jg
push
pop
enter
and
lods
cli
testb
cld
mov
adc
push
mov
movl
mov
mov
mov
movl
movl
cmp
jne
xor
jmp
lret
rcl
xlat
fxch
fsts
daa
int3
shll
jle
js
int3
jo
andl
fisubs
dec
test
stos
sub
cmc
movsl
aad
shl
mov
dec
dec
or
cmpsl
sahf
jno
in
mov
not
push
sub
nop
scas
jo
lcall
xor
jl
in
jns
jbe
cmp
push
push
push
add
lcall
repnz
pop
sub
in
test
outsl
call
push
mov
push
jnp
cmp
xchg
and
jmp
adc
pushf
adc
add
pop
loope
insb
cmp
jno
dec
adc
and
mov
int
call
cli
add
inc
xor
stos
push
clc
adc
and
scas
int3
xchg
or
lods
scas
scas
lods
lret
popf
cld
mov
lahf
aaa
mov
sbb
in
fdivr
pop
adc
push
fwait
fs
cmp
test
xchg
ror
fcmovbe
pusha
push
jo
adc
cmp
sbb
jo
movsb
push
mov
push
in
cmc
jmp
movsl
jne
loopne
mov
cmp
punpckhwd
adc
inc
lea
lock
mov
fcoml
xchg
aas
pop
int
es
add
adc
repz
or
mov
hlt
out
sbb
sbb
jge
leave
push
insb
pop
imul
ljmp
jne
pop
mov
ljmp
cs
ljmp
int3
stos
int3
jb
jno
or
xchg
push
jmp
jne
imul
xchg
outsl
dec
arpl
arpl
adc
fs
adc
fnsave
dec
mov
pop
ds
sahf
nop
iret
out
push
jo
idivl
push
mov
test
cmp
popa
xor
xchg
pop
out
push
xchg
adc
gs
mov
sub
fldcw
sbb
js
test
cmp
inc
lods
inc
fsubrl
dec
cmp
xchg
pop
inc
and
xor
repz
push
xorl
mov
dec
lcall
inc
inc
push
xlat
call
adc
sbb
cmp
out
lea
ja
xchg
bswap
ss
loope
es
pop
adc
out
mov
xor
xchg
ss
cld
or
or
loope
loop
ja
mov
lods
popf
add
loop
mov
push
fucomp
imul
xchg
mov
loopne
inc
xchg
or
ss
sub
sahf
mov
ljmp
sub
sub
cmp
mov
xchg
sbb
mov
loop
sbb
inc
repz
inc
add
mov
add
roll
mov
add
neg
mov
orl
movzwl
sbbl
not
xorl
and
jmp
ret
int3
leave
rcr
sahf
inc
imul
hlt
js
push
jle
js
cmpsb
sbb
fidivrs
vpmulhuw
fsubl
xchg
rclb
push
sub
ret
cwtl
xor
loop
stc
pop
jmp
inc
cmpsb
daa
pop
sub
out
pop
mov
push
pushf
cmp
stos
cmp
xor
push
push
fistps
mov
fldenv
mov
mov
clc
pop
mov
cmp
bound
fmul
fidivrs
lcall
mov
cmp
mov
mov
enter
popa
jp
cwtl
cmpb
daa
lret
sub
pop
adc
out
adc
sbb
push
dec
push
push
fnsave
push
jo
addb
ret
inc
in
stos
xor
movl
push
fs
dec
out
sahf
sahf
push
call
dec
mov
mov
sbb
test
jl
movsb
adcb
jp
sub
pop
fistpll
push
stc
lds
jne
aad
add
rcrb
lods
dec
aam
leave
or
xchg
fimull
sbb
aas
ja
push
popa
and
adc
in
fst
xor
std
and
in
cmc
movsb
shlb
and
aad
push
sbb
adcl
out
sahf
mov
pop
outsb
push
fisubl
lcall
xor
stos
add
shrl
or
jne
pop
loopne
ret
dec
ljmp
loopne
out
or
mov
iret
xchg
xlat
scas
or
push
inc
popa
sbb
ret
inc
outsb
roll
push
repz
sbb
dec
push
jne
sbb
xor
cmpl
out
mov
mov
or
sbb
mov
jecxz
sar
icebp
mov
lods
sub
xor
push
push
movb
jmp
cld
stos
and
pop
dec
decl
inc
xchg
shll
push
pop
loop
pop
and
in
lock
cs
test
push
in
popa
popf
mov
in
mov
js
fdivp
fnstenv
cmpsl
pop
sbb
iret
insl
cmp
push
outsl
xor
pushf
pop
insb
in
out
loopne
sbb
into
jecxz
mov
stos
andb
add
add
aad
jnp
xchg
test
sbb
xchg
add
loope
push
sub
add
sbb
or
sti
mov
arpl
repnz
sbbb
stc
pop
lcall
inc
loop
dec
sbb
addl
sbb
out
in
std
ss
xor
out
lret
repz
xchg
xchg
dec
mov
test
rorb
js
sbb
fwait
repz
dec
or
add
xorl
mov
pushl
call
test
je
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
mov
sub
xor
movl
mov
xor
or
sub
imul
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
add
jmp
cmp
ret
ror
into
jge
enter
cmpsb
and
stc
js
je
js
mov
in
adc
push
jnp
and
js
adc
xchg
outsb
test
adc
mov
or
mov
jne
testl
sub
addb
ljmp
or
mov
xor
sbb
cld
fs
pusha
insl
stos
add
mov
sbb
jno
jo
inc
dec
xchg
xchg
aaa
push
inc
cmpsb
xchg
lret
repz
pop
xchg
neg
and
into
dec
icebp
insb
cmp
inc
mov
popf
add
push
xor
lret
fildl
sbb
cmp
add
xor
stc
sbb
sbb
fdivs
sub
jle
fsubrs
jnp
push
out
rolb
iret
mov
je
repz
xchg
mov
adc
mov
leave
arpl
lods
test
repz
mov
fs
cmc
mov
stc
loopne
pop
and
or
jne
ficomps
jno
lret
outsl
in
push
shl
cmp
in
arpl
jecxz
inc
fs
pop
cmp
push
in
and
cli
mov
stc
sbb
and
or
mov
sub
mov
pop
and
ds
lahf
int
push
mov
out
fbld
aam
push
sub
out
xchg
or
push
mov
sarb
or
mov
xchg
pop
adc
adc
lods
test
add
inc
fsubs
mov
or
adc
xlat
add
into
cmp
bound
popf
adc
roll
mov
dec
ja
dec
add
cmp
insl
mov
add
leave
pop
xchg
inc
mov
es
dec
lahf
adc
les
fsub
scas
sub
xor
ss
mov
jge
imul
push
daa
ret
outsb
cmp
add
outsb
and
testb
cwtl
shlb
xchg
inc
lods
adc
lret
leave
ja
addl
cli
or
push
pop
add
arpl
fisubrl
add
add
aad
cs
int
add
jl
mov
mov
lds
mov
sub
push
cmp
pop
sub
or
lret
jo
shlb
mov
mov
pop
icebp
fdiv
pop
notl
sbb
jle
fistpl
ret
mov
add
fmull
dec
adc
fadd
imul
lods
sub
out
cmp
jmp
loopne
mov
and
js
dec
push
stos
nop
inc
lea
andl
mov
subl
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
lea
mov
mov
sub
and
mov
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
push
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
mov
jmp
ror
int
dec
xor
inc
or
js
jle
js
jns
fcmovne
mov
xor
push
mov
daa
xchg
clc
pop
clc
push
dec
sbb
sbb
test
hlt
pop
xchg
imul
jecxz
cld
dec
into
lcall
pop
out
lods
lea
mov
jge
cmp
divl
mov
pushl
popa
cmpsb
inc
inc
mov
jns
out
repz
add
aaa
xchg
push
test
jno
cmpsl
aad
fisttps
movsl
xor
icebp
mov
or
pop
or
xchg
xor
cmp
mov
mov
ljmp
xchg
xor
mov
test
test
push
mov
jle
rorb
push
mov
out
push
in
jno
dec
fnstenv
push
cmp
push
shrb
jg
jmp
fwait
testl
adc
adcl
or
repnz
dec
and
dec
stos
inc
in
mov
dec
jns
mov
sbb
scas
jae
out
rcl
int
cmp
jno
jl
pop
cmpsb
push
pop
push
outsl
xor
out
xchg
pop
cli
andl
scas
nop
mov
adc
sbb
jbe
mov
dec
adc
mov
mov
shlb
in
data16
mov
leave
popa
ljmp
int3
stc
cmc
mov
popa
sbb
subb
mov
push
psrlq
xchg
sbb
and
xlat
mov
orl
inc
mov
dec
xchg
cmp
aam
sbb
inc
test
into
inc
ja
xchg
push
push
fldenv
nop
sbb
fidivl
ret
inc
and
fs
xor
cmp
ret
je
ficoml
and
cmp
push
add
movsl
insl
popf
xor
fsubrl
cmp
or
cmp
loope
in
sahf
or
jae
xchg
adc
cs
jns
push
mov
stos
sarb
es
sub
addl
stos
scas
ret
lea
mov
mov
dec
cli
ja
js
data16
cmp
xchg
pop
mov
dec
in
ss
push
mov
mov
repnz
xor
loopne
dec
lea
stc
nop
mov
test
jne
sbb
test
mov
and
ljmp
cld
or
test
loopne
mov
dec
sbb
sub
aam
enter
sub
dec
cltd
movsl
or
and
cmpsb
sub
les
andb
mov
and
test
subl
lds
outsl
push
mov
mov
mov
mov
xor
mov
jmp
xlat
rcl
aad
vmovapd
outsl
aad
cmpl
jle
js
jae
cmp
jns
sub
pop
pop
jl
test
les
mov
lods
loope
adc
add
and
testb
imul
push
pop
inc
rolb
cmc
mov
mov
jge
in
jb
cmp
push
pushf
mov
jnp
rol
sti
sub
xor
imul
pop
pop
xchg
or
imul
fs
or
inc
dec
int3
movl
push
jbe
cli
push
cmp
adc
xor
loopne
and
push
fnstsw
jnp
shll
sbb
inc
fistps
xor
mov
pop
dec
leave
cs
mov
mov
fdivs
nop
adc
jns
lock
xorb
test
mov
movsl
sbb
push
cmp
inc
lods
xor
cmpsb
mov
cli
andl
jne
xor
pop
int3
iret
testl
pop
in
dec
push
pop
std
xor
inc
stc
mov
push
jnp
call
sbb
adc
fiadds
jecxz
adc
adc
mov
inc
and
xchg
into
xor
jnp
or
push
push
out
cmp
mov
imul
test
movsl
fwait
mov
mov
dec
mov
mov
sub
inc
sub
xchg
sbb
xchg
pop
dec
sbb
push
sti
and
shrl
mov
mov
mov
jle
pop
xchg
push
mov
ror
inc
jecxz
pop
imul
mov
pop
movsb
push
mov
enter
in
xchg
aas
outsb
rol
fidivs
or
pushf
adc
mov
cmp
imul
ljmp
cli
jmp
inc
out
testl
adc
fnsave
lcall
mov
notl
pushf
fcomp
lds
cmp
mov
push
mov
rcl
sub
lods
or
adc
cs
fst
sbbb
inc
mov
inc
sbb
mov
in
mov
mov
adc
stos
rcr
xchg
mov
dec
sub
orl
mov
aam
sub
in
dec
aam
out
jne
insb
stos
or
call
fwait
insl
ss
sti
iret
sbb
push
pop
sti
add
mov
jbe
jl
loop
nop
out
pop
xor
insl
or
in
push
xchg
out
pop
loopne
inc
jne
dec
movsl
lret
jle
scas
rclb
pop
decl
popf
int3
hlt
or
outsl
jge
pop
arpl
test
dec
push
and
lock
fimuls
hlt
fwait
xor
jg
dec
xor
into
std
ljmp
sub
ror
lcall
mov
mov
fnstenv
rolb
movb
div
mov
movl
cmp
je
movl
lea
mov
mov
jmp
aas
aas
iret
iret
xlat
xlat
fists
push
pminsw
jbe
cmpb
jle
js
leave
mov
movsl
into
xchg
push
out
dec
popf
in
xchg
popa
xlat
inc
mov
add
sahf
mov
ljmp
adc
ljmp
sti
cmp
jl
sub
sahf
adc
aas
repz
imul
jnp
arpl
dec
aad
cwtl
mov
cmp
fldt
rcrb
outsb
cmp
inc
aam
cmp
and
mov
xor
test
mov
mov
mov
lea
xor
mov
mov
xchg
shrl
inc
stos
lcall
mov
into
stos
mov
push
sarl
add
sar
rorl
ret
mov
or
lcall
mov
sbb
jmp
mov
mov
fidivrl
fbld
jnp
nop
rcrb
xor
jne
aas
cld
aas
push
pop
adc
pop
test
js
andl
sti
ss
lahf
or
push
push
inc
mov
sbb
mov
mov
and
and
mov
ss
and
jb
imul
std
xorl
add
mov
clc
out
inc
ret
mov
jo
or
add
dec
push
scas
repz
sahf
popa
or
push
add
out
dec
cmp
cmp
cltd
cmpsb
jle
jecxz
enter
cli
or
xor
cmp
cmpsb
std
popf
fisttpl
jp
dec
pop
int3
xchg
mov
sbb
sub
push
pop
scas
pushf
stos
ret
sbb
inc
cmp
and
sbb
shlb
xor
add
addr16
testb
test
push
dec
dec
daa
fimuls
xor
jecxz
cmpsl
popf
pop
lock
inc
jl
or
sarb
fmuls
stos
add
imulb
int
adc
sub
jne
xchg
adc
iret
out
rcrl
out
clc
pop
cmp
push
add
insb
and
pop
cld
add
aad
xchg
pushw
dec
xchg
cmpsl
pop
adc
push
or
stos
mov
in
jne
sbb
adc
test
push
mov
push
nop
hlt
into
mov
jle
orl
sub
mov
mov
call
inc
adc
test
and
pop
mov
aam
aam
xchg
adc
int
xor
push
out
mov
aad
icebp
daa
es
inc
jb
mov
mov
and
outsl
fmul
shrl
and
imul
fists
les
xor
xlat
jge
sub
lahf
pop
jmp
cmp
mov
imul
mov
mov
jmp
sarl
fcmovne
mov
fsubr
into
stos
mov
test
je
js
xchg
lock
mov
push
mov
fidivrs
in
movsl
dec
ja
pop
int3
divl
lods
js
adc
fisubrs
push
loopne
addr16
ret
xor
stc
gs
scas
mov
cld
pop
lahf
hlt
mov
push
cmp
rcrb
aas
das
inc
iret
daa
xor
ja
dec
and
mov
mov
cmp
cmpl
out
pop
dec
leave
das
sub
orb
leave
fisubrl
cmp
adc
dec
mov
notb
fstps
gs
jne
pop
and
pop
arpl
cmp
cs
fbstp
gs
mov
iret
mov
movsl
dec
out
push
outsb
mov
sub
jne
jne
in
das
insl
jle
adc
lea
movd
cli
mov
xor
divl
scas
data16
loope
sub
push
xor
xchg
cmp
inc
xor
xchg
push
adc
mov
xor
pop
enter
pop
sbb
je
inc
mov
sbb
outsb
add
xchg
xor
pop
in
into
or
adc
cwtl
std
sbb
bound
jb
mov
mov
fsubs
loop
xchg
nop
popa
jecxz
repz
xchg
xor
dec
out
movaps
xchg
jmp
inc
ljmp
cmc
pushf
inc
mov
lret
sbb
ljmp
stc
ss
mov
arpl
jns
mov
or
pop
or
popf
sub
sarl
orb
stos
imulb
cs
adc
pop
cmp
jns
lds
fadd
inc
mov
and
adc
jb
arpl
dec
lcall
roll
xchg
fstpt
shl
fbld
jne
call
arpl
outsb
xlat
fdivrs
stos
pusha
pop
add
xor
mov
sahf
shl
mov
movsl
addr16
xor
push
xchg
and
jnp
es
fstpt
sbb
pusha
adc
sub
xor
mov
xor
sub
mov
add
hlt
add
mov
ljmp
aaa
ja
aam
je
insl
sbb
int3
mov
cmp
jp
push
cmc
je
push
movsl
or
xor
sub
sub
mov
in
ds
push
ljmp
fwait
dec
mov
test
out
push
shlb
sub
cmp
mov
int
mov
int
sbb
jp
dec
pop
push
jg
adc
mov
es
imul
xor
lahf
mov
mov
cmp
loop
ds
jl
dec
js
add
xchg
mov
sub
jns
ja
pop
pextrw
subl
cmp
jmp
rol
leave
fcmove
rcl
pop
mov
xlat
js
je
js
sbb
mov
loopne
inc
sub
and
inc
xchg
sub
std
and
lock
out
out
fwait
dec
inc
repnz
xchg
jecxz
jns
pop
jnp
push
in
pop
jecxz
xorb
stc
dec
aad
push
jne
bound
mov
jbe
icebp
in
adc
xchg
xchg
std
lds
xchg
gs
pop
notl
xor
fmull
idivb
mov
dec
or
push
or
inc
popf
jo
sub
mov
adc
sub
dec
push
scas
fldenv
test
das
sub
in
arpl
inc
inc
inc
jecxz
int
stos
adc
insl
sbb
std
lods
aaa
add
pusha
mov
fs
xchg
xchg
loop
inc
mov
jno
add
mov
repz
jne
pop
cli
imulb
inc
or
js
loope
cld
pop
mov
xchg
aas
rcr
pop
sub
cmp
leave
aam
pop
sbb
negl
pop
dec
fisttpll
push
daa
push
pop
mov
cwtl
rol
adc
push
or
loop
xor
xchg
add
in
pop
and
or
cmp
scas
mov
lock
movsl
and
aas
push
lods
shrl
dec
mov
in
icebp
sub
hlt
sub
outsb
or
push
js
mov
jle
fnstenv
adc
jnp
xor
out
aaa
mov
ret
inc
adc
stos
int
push
lahf
sbb
jg
xchg
xchg
arpl
mov
mov
ret
and
push
in
pusha
fdivl
cmp
push
xchg
idivl
loope
add
add
sub
orb
cmp
jne
cltd
and
add
leave
cld
mov
sub
xchg
outsb
add
push
push
push
outsl
iret
popf
xchg
push
pop
fsubrl
jmp
loope
ret
adc
sahf
mov
rorl
sbbb
jmp
bound
bound
jne
std
fwait
gs
inc
jp
dec
mov
pop
mov
fxch
pushf
pusha
test
sahf
bound
out
mov
jne
push
dec
fcomps
adc
push
out
xchg
mov
inc
pop
int3
mov
loop
test
cs
sub
and
incb
sbb
aas
std
pop
sbb
test
sahf
xchg
jae
mov
fmuls
stc
addr16
insb
push
inc
or
rcll
mov
sub
or
xchg
mov
inc
add
int
jecxz
xorb
jmp
es
mov
push
sub
dec
std
aad
add
subl
fwait
or
cmp
mulb
shll
mov
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
jmp
leave
xlat
ret
rcl
leave
fldcw
or
js
jle
js
and
sbb
dec
jmp
bound
mov
ds
nop
pop
push
jmp
mov
or
sub
imul
lcall
sbb
or
adc
faddl
adc
fs
daa
push
mov
mov
fwait
inc
sti
clc
jl
push
repz
lods
popf
test
mov
sub
fnstcw
cmp
jge,pt
addl
sbb
fidivrs
sbb
lea
sbb
jp
jno
in
xor
sub
sub
scas
mov
push
daa
push
xchg
push
fldl
bound
das
leave
test
dec
push
cltd
sti
xchg
xor
pop
decl
dec
pop
mov
adc
sbb
movb
cltd
jae
jns
mov
test
clc
fnstsw
addl
lock
fadds
test
addr16
das
insb
mov
mov
mov
mov
sub
cltd
stc
push
pop
das
mov
push
jl
andl
mov
in
lcall
repz
shll
lock
pop
inc
shll
cmc
pop
loop
scas
sti
data16
xor
shlb
add
out
or
pop
stos
inc
std
stos
aam
jg
cmc
sub
scas
stos
dec
adc
jo
mov
sbb
cmc
cmp
in
lahf
inc
sbb
pop
cli
add
arpl
adc
pop
push
testl
ret
push
int3
mov
inc
lret
sbb
sbb
pop
fistpll
lcall
aaa
movsl
movsb
roll
dec
sbb
gs
lock
iret
cmp
dec
test
test
lahf
mov
inc
out
and
xchg
outsl
mov
jecxz,pt
pop
inc
decl
ret
fabs
cmp
sub
leave
mov
jg
stos
out
cmc
or
pop
jb
fmuls
mov
push
pop
iret
and
roll
ficoms
ljmp
xor
and
jae
out
mov
xchg
cld
ss
je
stos
cmp
sarl
fadds
adc
shrb
pop
dec
ficomps
out
jp
std
iret
push
mov
scas
mov
sub
mov
test
push
xor
cmc
xor
clc
xor
arpl
adc
adc
imul
insb
pop
sbb
cmpsl
in
mov
inc
les
adc
icebp
sbbl
dec
psubusb
mov
rcrl
cmc
mov
rol
leave
push
faddl
lcall
imul
jb
mov
cltd
jge
or
pcmpgtw
sarb
movsb
ss
jo
fwait
je
iret
addr16
addr16
sub
dec
lret
push
mov
cmp
pop
sbb
pushf
cmc
test
mov
adc
jnp
test
add
add
sbbb
jmp
into
aas
ds
rcl
add
stos
rorl
arpl
je
js
push
dec
sti
xor
out
and
pop
lock
fs
add
cmpl
jae
es
mov
jne
arpl
push
xlat
js
into
les
push
das
nop
ret
jg
js
jle
jmp
hlt
or
movsl
test
xorb
lcall
fists
cmpsl
popa
dec
loop,pt
ja
xor
adc
xchg
xlat
out
daa
inc
lret
call
adc
add
add
jne
push
iret
in
divb
push
notb
ljmp
add
jle
sbb
je
out
lret
mov
xchg
out
dec
inc
sti
insl
in
test
inc
mov
jo
fscale
insl
xor
lret
xor
dec
xchg
es
rorb
mov
fwait
pop
lret
mov
mov
push
pop
inc
imul
sbb
add
push
lock
fwait
test
jge
shl
and
aaa
in
sub
sub
sbb
pop
push
rolb
ficompl
mov
shrb
jnp
repz
icebp
jmp
movsb
add
incb
mov
xchg
pop
cmp
sbb
fbstp
push
mov
cs
clc
data16
fbstp
add
xchg
fcmovbe
stos
jne
xor
inc
shlb
sbb
cwtl
jne
mov
pop
mov
fmul
jecxz
out
cmp
mov
cmpsl
and
sti
movsb
xchg
mov
sub
mov
js
adc
das
dec
dec
pop
and
repnz
lcall
loopne
mov
test
ret
pushf
in
jl
cmpsb
addr16
fmuls
add
das
imul
std
and
leave
and
cmp
mov
push
push
sbb
sahf
adc
inc
jno
xor
je
je
hlt
sbb
lret
enter
mov
mov
insb
dec
jmp
arpl
roll
scas
inc
inc
xor
and
sbb
inc
adc
mov
scas
popf
int3
aam
arpl
cmp
enter
and
push
out
add
int
in
std
loop
cmp
xlat
in
faddl
push
adc
mov
mov
iret
cwtl
mov
daa
into
pop
out
imul
ja
notl
fs
jns
notl
cwtl
dec
push
fsts
lods
sti
outsb
rcrb
insl
and
test
jle
mov
dec
mov
jns
sti
add
lahf
bound
test
sbb
push
mov
cmpsl
jae
lahf
sbb
and
push
es
pusha
cmpsb
push
fnstcw
stos
loopne
insb
cltd
inc
ss
scas
outsb
cmp
pop
addr16
fcoms
xor
xor
jne
movsl
in
test
aaa
sub
and
or
inc
hlt
mov
or
cmp
je
mov
xorl
jmp
mov
jmp
ds
ror
rcl
fisubrl
xchg
jge
jmp
dec
ret
js
jle
js
insb
sti
sub
adc
cs
mov
xchg
lds
or
negb
sti
cmpsb
testl
fdivr
scas
inc
filds
ljmp
and
call
das
int3
in
lret
test
je
pop
lret
pop
lret
inc
mov
iret
push
fdivrs
iret
adc
insl
cltd
scas
mov
fisubrl
stos
add
in
fildll
test
jno
subb
lret
mov
add
xor
sbb
inc
jg
roll
insl
cmp
sub
cmp
xchg
and
adc
add
and
push
dec
jp
in
mov
sbb
dec
cmpsl
jo
ret
mov
inc
js
scas
aad
ret
push
inc
pop
mov
loope
mov
mov
jmp
in
pop
fsubrs
cmp
push
fucomp
popa
mov
xchg
inc
data16
pop
sbb
inc
cmp
mov
jns
and
rcrl
cmp
mov
pushf
ret
jno
mov
adc
pop
pop
sbb
cmpb
stos
xchg
loop
mov
inc
inc
jnp
mov
xchg
bound
push
call
std
cmp
dec
mov
pop
int
sbb
fwait
insl
mov
leave
jns
iret
lds
enter
pop
xor
lahf
add
cmc
fldl
inc
or
add
negb
jp
mov
stos
pop
mov
pop
mov
outsl
jo
sub
in
xchg
in
ret
test
pop
jnp
testl
dec
mov
push
cmp
das
les
or
pop
jb
mov
ljmp
ficoms
mov
fnstcw
jb
xchg
pop
dec
lds
cmp
xchg
add
mov
popf
subl
xor
fbld
adc
in
xor
int
nop
js
stos
aam
and
fucomp
jmp
lahf
mov
mov
ja
dec
nop
ljmp
dec
mov
negl
pop
aad
pop
loope
call
push
jb
jns
mov
push
xlat
addr16
cmp
jge
push
fcoms
add
pushf
fcomp
popf
cmp
mov
outsl
dec
jb
cmpsb
out
icebp
sbb
fimull
inc
gs
das
inc
lock
out
inc
iret
into
rcr
pop
addr16
gs
fisttpl
insl
icebp
lock
cmp
dec
ja
sbb
mov
shll
fbstp
aad
mov
jnp
ljmp
es
fdivp
sub
sub
iret
add
andl
cmp
aaa
sbb
aad
push
mov
push
mov
aam
les
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
jmp
int3
into
lret
ror
ficoml
cmc
mov
push
sub
xchg
js
je
js
mov
mov
aad
fbld
aas
in
sbb
adc
dec
jb
enter
cmpordps
jg
sub
push
cmp
push
popa
aad
in
fldenv
les
lea
lahf
divb
ljmp
sbb
add
repnz
popf
or
mov
push
push
or
in
in
mov
sub
nop
test
mov
loopne
adc
mov
adc
jl
cld
test
cmp
add
fcoml
mov
push
add
imul
cltd
pop
aaa
jmp
lock
xor
je
dec
pop
pop
dec
outsl
sbb
aad
pop
test
xor
sahf
dec
in
in
shlb
mov
outsb
pushf
inc
pop
not
jbe
pop
push
sub
js
movsb
push
jecxz
and
mov
lret
xlat
stos
lock
push
push
jae
cmpsl
jg
rcll
cld
jne
es
sbb
dec
jmp
push
sbbl
aam
inc
int3
push
mov
jne
jne
pop
cmp
ja
dec
cwtl
shll
push
repnz
enter
nop
inc
mov
push
dec
sbb
jns
ds
fwait
sub
pop
mov
cmp
cs
jl
stc
jb
cli
cld
adc
add
lea
mov
mov
mov
xor
add
lret
or
add
dec
pop
pop
jle
inc
mov
outsl
dec
nop
dec
mov
jmp
jnp
aaa
daa
data16
pop
push
fisubrl
out
cld
das
jl
jae
popf
mov
jns
push
sub
insl
cmp
mov
inc
inc
stos
and
adc
lahf
scas
test
sbb
inc
pop
pop
decb
pop
inc
std
repnz
inc
mov
shlb
fs
cmp
xorl
fcompl
add
decb
fwait
xchg
or
aad
sbb
sbb
and
out
sbb
inc
ret
ret
push
push
push
shrb
pop
push
adc
push
subl
dec
lcall
in
pop
mov
xchg
movsb
inc
inc
dec
push
mov
fisttps
movsb
arpl
cmpsb
mov
dec
xchg
sbb
mov
and
loope
xchg
sub
mov
out
mov
dec
mov
adc
jmp
adc
iret
jno
imul
sbb
push
cmp
xchg
push
movsb
call
fsubp
mov
push
inc
popa
mov
jno
dec
cli
xchg
cli
fmull
pop
out
sahf
loop
aas
lret
stos
flds
lea
mov
movb
in
fcomps
fwait
arpl
push
mov
repnz
mov
mov
jmp
xlat
cmp
ds
js
adc
repz
js
jle
js
into
jo
push
pop
faddp
xchg
mov
cmp
xchg
and
jp
mov
xchg
mulb
std
dec
jb
push
stc
loop
fistpl
lea
jb
out
nop
mov
jg
incb
repnz
cmp
loopne
loopne
data16
jg
fs
shlb
lds
sub
stos
mov
mov
pop
xor
xchg
lcall
xchg
bound
inc
repnz
jg
push
dec
setl
cmpsl
inc
les
jbe
mov
cmc
test
push
xor
sub
push
orb
adc
lods
jb
andl
xor
mov
addr16
fisubs
or
fucomp
mov
and
and
dec
std
lret
mov
pop
fsubrp
repnz
xchg
add
outsb
push
dec
insb
cmp
in
push
bound
fnstenv
mov
fisttps
testb
jecxz
es
out
loope
cmp
xor
pop
add
inc
xchg
into
mov
cld
mov
jge
rol
pop
std
sub
or
incl
dec
sbb
pop
std
clc
push
stos
enter
mov
les
pop
mov
dec
pusha
into
sti
fiadds
mov
js
in
lods
sbb
shl
mov
add
cmpsl
lods
nop
iret
dec
cmc
ret
sbb
lahf
outsl
pop
mov
nop
and
outsb
ds
pop
movsb
pop
mov
sub
mov
out
into
or
cmp
add
les
mov
xchg
jns
faddl
scas
cmp
inc
and
lret
fildl
pop
inc
mov
outsb
out
test
dec
xlat
lahf
hlt
ret
cmp
fs
pop
fadds
out
xor
pop
mov
jge
mov
iret
pop
lods
imul
xchg
mov
mov
add
mov
lock
adc
fwait
mov
std
fildll
inc
xchg
ljmp
mov
pop
cmp
push
test
push
mov
mov
xchg
add
mov
add
cmc
test
push
gs
adc
addr16
jg
adc
ret
nop
mov
dec
aaa
in
or
fdivs
jl
mov
add
xor
int3
aad
dec
cs
aas
jmp
shr
mov
dec
loopne
jl
shl
mov
in
or
mov
jecxz
lret
mov
lods
xchg
insb
lock
inc
adc
pop
jmp
iret
cmp
mov
lock
jge
push
sub
loope
out
jb
adc
pushf
push
cmp
sbb
idivb
imul
clc
mov
dec
inc
xchg
mov
ljmp
je
or
je
lret
dec
inc
stc
xor
add
movzwl
mov
xor
lea
add
jmp
cmp
fcmove
stc
mov
ss
js
je
js
ss
lods
jnp
mov
bound
or
in
test
movsb
inc
sub
dec
jge
int
xchg
sub
jnp
cmp
cmpl
clc
adc
aad
sbb
out
sub
push
lahf
mov
andl
cmc
pop
dec
push
xlat
xchg
rcll
xlat
mov
loop
xchg
fwait
stc
push
xchg
xchg
and
shlb
in
lret
adc
popa
ret
iret
stos
adc
mov
jg
lods
or
xor
jp
sub
mov
inc
cmp
add
ja
testl
inc
cmc
xchg
xor
cmp
cs
jo
sti
daa
xor
cmpsl
lods
pop
sub
decl
sti
xchg
mov
xchg
or
dec
adc
push
test
lcall
xchg
ret
push
push
int3
jl
push
xor
mulb
stos
xchg
das
in
sub
popa
arpl
lock
or
ljmp
and
xchg
lret
int3
lahf
sub
enter
push
dec
jmp
rcrl
arpl
fstpt
jle
adc
movzbl
dec
sub
adc
sub
xor
cld
loopne
lock
int3
roll
jge
daa
pop
bound
sub
addr16
stc
out
mov
pop
mov
lock
roll
sbb
push
sub
les
clc
mov
test
fidivrs
mov
andw
lea
sahf
adc
lahf
inc
push
xchg
jnp
and
cltd
jmp
inc
xchg
inc
push
idiv
in
es
push
pop
xor
push
mov
fwait
push
mov
stc
out
insl
arpl
ror
add
mov
adc
push
insb
mov
shrb
in
push
xlat
pop
lcall
outsl
inc
rcrb
out
es
push
pop
psadbw
in
sahf
insl
or
cltd
mov
ljmp
daa
push
mov
stc
jae
int
cwtl
push
shrb
push
jmp
fwait
gs
jne
mov
dec
jmp
es
enter
xor
in
mov
sbb
lea
mov
outsl
jecxz
js
lret
pop
mov
ror
dec
cmp
adc
lds
push
and
out
jle
lea
push
jge
adc
cmpsl
daa
cmp
add
lods
adc
xchg
incb
push
dec
lea
inc
pop
call
leave
inc
imul
outsl
pop
mov
dec
arpl
mov
sbb
mov
or
jb
inc
wbinvd
sub
jl
popa
test
add
int3
sub
sahf
jg
mov
pop
test
cwtl
or
inc
jge
adc
xor
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
jmp
rol
leave
rcr
mov
fs
xor
js
adc
sbb
xor
lea
dec
mov
sub
or
mov
mov
cmc
ljmp
xlat
rcr
sub
movsl
dec
jae
les
in
cmp
push
sar
stc
lret
and
adc
insl
jecxz
out
call
push
inc
xchg
iret
clc
out
sarl
xor
add
push
imul
push
scas
jg
mov
add
sarb
dec
sub
or
push
jmp
shll
and
jnp
mov
pop
in
js
pop
adc
push
mov
insl
repnz
mull
rol
mov
fcompl
inc
and
mov
mov
xchg
mov
xor
scas
mov
fists
mov
pop
fwait
sarl
adc
or
push
popa
scas
sbb
lcall
aad
xchg
jecxz
or
and
out
andl
jp
fstl
mov
push
mov
inc
inc
fisubl
push
aaa
adc
test
shlb
sbb
repnz
pop
and
inc
scas
adc
jmp
xchg
push
dec
jle
pop
notl
pop
lret
rcll
in
push
push
icebp
push
dec
inc
fdivl
popl
pop
bound
aaa
cmpsl
xor
jg
imul
mov
pop
push
adc
sbb
orl
inc
pop
inc
jne
fs
outsb
das
cwtl
sahf
jl
push
jmp
xchg
repnz
sub
mov
push
mov
lahf
int
daa
cmp
jmp
mov
push
and
fs
pop
jecxz
decl
lcall
xor
inc
lods
mov
jmp
sti
adc
out
xchg
lods
push
inc
pop
add
jl
repnz
sbb
sahf
ljmp
push
stos
scas
push
push
movsb
mov
xchg
aaa
jbe
xchg
cmp
icebp
popf
mov
mov
jnp
lcall
les
jo
mov
scas
sub
dec
lcall
xchg
cwtl
dec
mov
and
loopne
inc
in
imul
sarl
cmp
test
fldt
xchg
inc
inc
jo
or
aas
mov
rorb
andb
adc
sbb
fcoml
xchg
xchg
dec
inc
daa
jbe
sbb
sarb
mov
vpunpckldq
push
nop
dec
ret
xchg
and
push
jb
fld
push
and
push
xchg
shl
in
out
xchg
xchg
mov
xchg
icebp
mov
xor
notb
cmp
ja
push
lahf
mov
push
mov
sub
out
mov
sbb
test
es
cld
scas
cmpsb
lahf
adc
adc
pop
aaa
cmc
repz
push
and
cmp
adc
add
rol
ror
aad
xchg
mov
aad
jbe
stc
mov
js
push
popa
push
push
loop
adc
cld
aaa
cltd
aad
fidivrl
and
add
pop
sub
pusha
mov
je
cmp
ret
lods
mov
test
out
and
and
and
shr
aas
sbb
mov
jnp
add
je
inc
inc
or
or
mov
insb
push
fistpll
push
or
ss
dec
loope
dec
and
mov
xchg
jmp
or
cmp
adc
dec
lret
sub
das
testl
mov
mov
aad
xchg
loope
cmp
ja
mov
add
xor
pop
sub
xor
cld
ret
inc
data16
xchg
stos
je
xchg
add
sbb
push
sub
cld
push
je
bswap
push
mov
sbb
shrb
mov
jp
inc
xor
enter
lds
fchs
cmpsl
orb
fldcw
cmpsl
mov
repz
push
rcl
pavgb
fldln2
mov
or
sub
push
call
out
cmpsl
icebp
dec
pop
cld
and
or
out
push
scas
adc
lcall
lods
mov
push
push
jl
mov
shl
cmpsl
lods
mov
mov
xchg
mov
negl
sti
mov
adc
pop
int3
pop
ret
adc
cld
out
stc
cmp
ljmp
lods
sub
shl
pushf
movsl
sub
lock
inc
dec
dec
cs
aas
shll
sbb
cmp
or
sub
xor
lahf
call
mov
movsb
and
lock
xor
lock
dec
sbb
jb
rorb
push
jle
fistpl
cmp
sbb
jg
jno
cltd
pop
pop
in
mov
out
inc
xchg
jmp
sub
sub
mov
lods
mov
jno
outsl
mov
fisubs
addb
sub
push
inc
mov
sti
mov
mov
push
aam
add
or
loope
or
dec
es
popf
lret
cmpsl
loopne
sbb
inc
gs
push
nop
inc
stos
cs
mov
adc
cmp
and
mov
jns
pop
inc
add
testb
scas
es
push
push
add
mov
or
hlt
das
fdivr
xor
adc
or
testl
fistpl
ret
out
pop
subl
int
mov
sub
mov
enter
dec
and
addr16
or
lret
cltd
mov
xchg
mov
cmp
push
mov
iret
cmp
mov
scas
jg
pop
enter
or
cmp
shll
mov
mov
xchg
jae
mov
iret
inc
inc
jns
and
cmp
push
out
mov
jmp
push
mov
sub
sbbl
mov
xorl
jmp
ror
mov
fcmovbe
push
aad
mov
js
jle
js
xchg
call
stc
call
lahf
fstp
push
push
xchg
std
mov
mov
fldenv
inc
sti
xlat
and
rolb
dec
arpl
int
jge
dec
out
popa
outsl
lods
or
into
adc
test
xchg
loop
jmp
mov
and
push
les
imul
mov
notb
jnp
sbb
lds
mov
inc
sub
xor
mov
push
in
pop
mov
call
mov
lock
jle
adc
mov
arpl
pop
jno
dec
dec
fld
inc
mov
xor
xor
lds
inc
repnz
lcall
gs
xchg
cmp
pop
push
es
jle
and
add
into
inc
mov
jb
sbb
inc
filds
and
dec
mov
xlat
mov
fnsave
mov
hlt
inc
jp
les
push
xor
aam
xor
cmp
sub
or
add
jmp
dec
or
stc
jle
int3
cs
dec
cltd
mov
pop
pushf
dec
add
movsl
dec
out
xchg
ret
xor
hlt
adc
sub
sbb
lret
das
mull
icebp
jmp
lds
out
leave
jp
rolb
pop
pop
xor
pop
gs
cmp
outsb
mov
add
fidivs
mov
inc
and
mov
imull
outsb
mov
xchg
scas
daa
in
mov
push
pop
adc
pop
or
scas
pop
repz
jle
daa
movsb
jmp
pop
call
pop
and
cld
cs
xchg
fs
push
inc
fcmovnbe
mov
sbb
test
mov
mov
outsl
sub
rorl
lret
xchg
fsubrs
aas
sbb
pop
mov
int
adc
pop
shll
push
stos
mov
sub
hlt
aaa
fcmovnu
pop
xor
mov
out
dec
inc
stos
loop
fwait
addr16
push
ja
out
test
arpl
and
aad
stc
cli
pop
test
mov
pop
js
mov
aad
inc
add
add
add
or
sbb
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
movzwl
xor
mov
xor
or
mov
adcl
add
subl
push
mov
adcl
mov
negl
xor
jmp
int
iret
lret
and
push
pusha
jge
cli
outsl
out
js
xor
cmp
aaa
arpl
and
icebp
xor
ret
mov
movsl
pop
test
test
push
mov
mov
xor
loope
test
push
loop
mov
mov
insb
adc
call
out
mov
jge
push
movsb
mov
outsb
arpl
into
xchg
mov
arpl
in
inc
cmp
pop
fsubrl
imul
jne
cld
jecxz
dec
jns
lret
jmp
inc
cs
mov
sbb
pop
lret
out
subb
repz
jne
roll
lcall
mov
hlt
xor
ret
lea
mov
or
pop
mov
stc
jmp
cltd
mov
outsl
mov
adcb
imul
mov
add
jmp
clc
ss
lock
pop
mov
pop
jmp
push
iret
lea
and
insb
push
fistpl
jp
push
icebp
aaa
fidivrs
jnp
or
sbb
add
jne
nop
test
mov
dec
gs
mov
push
test
mov
ficomps
call
aad
push
xor
enter
jle
sbb
sti
pop
jo
addb
sub
lds
sub
push
xor
enter
jl
data16
pop
pop
fdivrs
mov
dec
sbb
loop
andl
scas
dec
dec
mov
mov
add
xor
mov
ss
incb
push
ljmpw
fcoml
sbb
inc
push
mov
mov
pop
mov
xchg
data16
test
out
or
cli
fcmovnbe
push
and
push
xchg
mov
ja
inc
pop
clc
clc
xor
adc
lahf
pop
add
insb
es
cmp
cwtl
rcrb
push
loop
cmpsb
cmc
lea
data16
push
cld
ja
pop
cli
frstpm(287
push
cmc
mov
push
jae
loop
stc
test
or
popf
xlat
js
pop
movl
movl
andl
add
jmp
cmp
jne
mov
mov
mov
mov
mov
movl
mov
mov
movl
jmp
movl
jmp
leave
ret
enter
fld
int
fdiv
dec
dec
mov
js
shlb
cmp
sti
xchg
les
sbb
fistpll
xor
mov
and
pop
data16
mov
out
pop
mov
pop
adc
inc
and
loopne
shlb
add
pop
adc
sub
push
cmpsl
push
leave
sbb
pop
stos
mov
sbb
jns
cmpsb
xor
dec
test
enter
sbb
push
xchg
hlt
faddl
push
cmp
add
mov
push
lret
das
adc
xor
or
mov
idivb
cmpl
or
or
inc
push
and
or
cs
sbb
lods
or
sbb
dec
mov
insb
xchg
clc
outsb
pop
aam
jo
jmp
je
adc
push
mov
out
lret
out
scas
pop
out
adc
stos
sub
dec
and
push
sahf
inc
popf
mov
adcb
sbb
add
lds
mov
push
fcompl
inc
mov
lods
add
cs
push
mov
adc
inc
sarl
ds
cmpb
lcall
xchg
ja
dec
xor
ljmp
incb
shrb
orl
mov
mov
ljmp
ds
test
cmc
aaa
sti
addr16
add
fcom
mov
ret
mov
dec
push
fstpt
sub
mov
pop
orb
out
ret
insb
punpcklbw
mov
test
lods
scas
pop
rcrl
add
arpl
mov
out
icebp
movsl
je
js
cmpsb
pop
cmp
xchg
jo
lock
mov
mov
mov
and
nop
test
push
sub
push
int
ja
in
ja
mov
or
pop
adcb
pop
decl
jecxz
test
lret
shlb
xorb
jmp
ja
mov
lcall
cmp
add
movl
jne
and
jmp
int
into
aad
lea
repz
pop
test
js
jecxz
mov
mov
inc
sub
icebp
sbb
cmpl
inc
ret
call
xchg
fidivl
dec
dec
inc
mull
out
loop
xor
bnd
loopne
sbb
pusha
push
ret
push
stc
mov
ret
sbb
jg
imul
bnd
xchg
pusha
call
loop
movsb
repz
enter
xchg
popf
add
xchg
ja
or
or
into
int
fisubs
xor
mov
cli
lods
cmp
shll
pop
mull
stc
xchg
jbe
mov
push
scas
aam
mov
and
shll
mov
inc
cmp
je
loop
mov
hlt
xor
dec
xor
scas
dec
sbb
rol
mov
pop
cmp
xor
xchg
daa
repz
push
cld
ret
push
popl
mov
jecxz
fildll
push
in
cld
loop
mov
ja
mov
xchg
decl
inc
xor
outsb
mov
lock
dec
mov
mov
mov
in
cmpsl
pop
ret
jb
into
outsl
lds
xor
cmpsl
xor
xchg
xchg
jno
sbb
test
outsl
insl
sbb
mov
aaa
mov
sub
mov
aad
fld
mov
push
ret
sub
lcall
gs
jns
imul
inc
jmp
dec
aam
mov
sbb
cmp
mov
out
mov
iret
mov
sub
ucomiss
scas
sarb
mov
sbb
pop
xlat
mov
xchg
subb
arpl
mov
mov
stos
aam
jge
das
in
mov
loop
and
cmp
push
sub
xor
add
sahf
push
mov
int3
addl
pop
shll
pop
pushf
into
je
lahf
popa
cmp
loopne
sbb
cmp
cmp
and
push
fnstcw
rorb
cld
pop
stc
popa
and
lret
or
mov
sbb
mov
mov
xorl
sub
orl
push
adcl
mov
jmp
enter
ret
push
in
pop
dec
cmp
cmp
scas
js
xor
test
and
push
push
mov
cld
adc
mov
aas
fldl
addl
mov
cmp
aaa
jae
jb
arpl
jmp
fstps
jg
ret
into
dec
cmp
gs
lock
out
into
cs
adc
sbbl
adc
bound
movsl
pusha
mov
xchg
outsl
sbb
jg
pop
mov
bound
dec
inc
leave
mov
dec
and
push
jb
jb
inc
add
fldl
add
sbb
xor
dec
mov
jno
iret
jl
roll
pop
pop
fsubrl
xor
in
push
mov
sbb
push
and
mov
push
fucom
lret
shll
js
jne
sbb
push
xchg
cmpsl
lods
fcmove
xchg
into
inc
pusha
mov
cmp
loope
arpl
inc
push
add
mov
in
mov
xchg
int
gs
lods
pop
mov
subb
pop
aaa
or
cmpsl
fnstsw
ffree
mov
outsb
cmp
mov
dec
jo
mov
dec
icebp
lods
jg
mov
push
xor
jp
push
loop
xor
xor
lret
push
in
sub
xchg
int3
mov
nop
push
stc
cs
dec
and
xchg
push
hlt
nop
mov
insl
lods
add
mov
mov
xchg
inc
out
dec
aam
leave
and
add
jo
push
icebp
sub
testl
push
fisttpl
out
adc
push
xchg
push
dec
pushf
outsb
gs
or
pop
mov
sbb
push
jmp
xor
notb
aam
jae
dec
rolb
mov
repz
leave
jg
cltd
xchg
outsl
add
fdivl
leave
test
aaa
dec
pop
int
sub
cmp
jnp
pop
push
inc
mov
in
enter
or
iret
arpl
and
test
xor
jle
cmpsl
arpl
pop
xchg
dec
jns
ja
js
xchg
cmp
inc
or
add
add
push
adcl
call
movl
incl
cmpl
movl
jb
movl
jmp
cmp
jne
sbb
movl
mov
mov
mov
mov
movzwl
and
mov
adcl
xor
jmp
rol
leave
leave
leave
leave
rcrb
inc
insl
push
test
js
jle
js
aas
inc
fsubrp
cld
mov
ret
imul
mov
movsb
push
xchg
cmpsb
or
int3
cs
int3
xchg
xchg
sub
lret
push
mov
aaa
loop
jle
loopne
aad
pop
push
repnz
sbb
pop
shll
add
xor
insb
or
push
test
jne
jb
mov
lret
in
les
add
xchg
roll
jns
pop
push
adc
shlb
lret
icebp
dec
notb
jno
aas
test
add
dec
mov
inc
mov
pusha
insl
movsl
pop
sbb
and
lea
stc
push
test
lcall
incb
loopne
dec
imul
into
out
add
pop
gs
push
insl
xchg
and
inc
lods
pop
jne
scas
cmp
insl
je
cmp
and
dec
lahf
lods
cltd
out
shll
sbbl
push
pusha
test
cmp
jbe
lahf
pop
dec
mov
mov
lods
jl
pop
jl
xor
arpl
cmpl
mov
imul
inc
sbb
ret
into
pushf
dec
xor
adc
leave
add
sub
xchg
jbe
jne
dec
dec
xchg
sbb
jns
jmp
or
shrb
jb
fsubs
xchg
push
jg
mov
xchg
notl
inc
add
cmpsl
cmp
push
test
sub
in
aam
insb
cmp
push
dec
jg
cmp
pop
pop
pop
sub
mov
pop
cmp
mov
or
and
jge
aad
shrb
sub
rcll
push
xchg
mov
pop
cmpb
neg
popf
add
adc
stc
arpl
fdivr
lods
cwtl
jmp
ljmp
dec
rcrl
jo
dec
mov
inc
pop
xchg
or
push
shl
sbb
test
xchg
call
adc
jnp
inc
dec
add
mov
notl
lea
mov
mov
xor
add
mov
lea
push
mov
jmp
ds
roll
mov
js
xor
daa
dec
sahf
fwait
jmp
cmp
les
ds
jle
stos
sbb
out
cmpb
or
sub
mov
mov
loopne
and
pop
xchg
or
fs
cwtl
loopne
rcl
in
jne
push
adc
outsb
jno
or
nop
or
das
adc
cli
ja
jecxz
fiaddl
push
push
dec
sub
jmp
fnsave
jb
je
loopne
sar
in
test
cld
add
fisttpll
xor
lock
fwait
pop
loop
in
sub
loopne
fcomps
cwtl
pop
enter
fwait
mov
or
adc
sar
or
shll
call
je
sbb
mov
add
cmp
jp
shll
mov
std
bound
jno
xchg
mov
jno
stos
in
dec
xor
in
ja
mov
movsl
push
int3
add
pop
imull
sbb
fcompl
sbb
xor
out
cwtl
adc
or
cmc
fildll
sbbb
mov
es
pop
cli
cltd
mov
xchg
mov
xchg
mov
insl
rolb
pop
ret
rclb
sarl
jno
test
int3
push
pop
arpl
fdivrs
insl
push
call
sub
jbe
ja
cmc
ja
nop
in
jb
mov
js
or
adc
fucomp
push
adc
push
add
xor
cmp
mov
mov
imul
and
xchg
mov
leave
jb
outsl
fstps
lds
ljmp
enter
movsl
jge
roll
mov
js
lock
fwait
imul
inc
xor
and
add
popf
mov
sub
ss
cmp
test
les
xlat
inc
insl
mov
pushf
imul
idivl
ret
jno
and
sahf
pop
int
repnz
mov
adc
jbe
mov
ret
push
jmp
xlat
lret
fcmovu
aas
cmp
push
xor
js
xor
jge
in
ficompl
sbb
mov
outsl
add
mov
dec
pop
movsl
repz
ds
fsubl
rcr
dec
mov
fdivrs
xor
out
out
das
mov
push
mov
inc
fldt
cs
lcall
mov
xchg
jp
jo
in
pop
nop
fistps
pop
and
mov
xor
lods
xor
xor
in
push
aam
out
out
xchg
mov
les
xchg
adc
mov
inc
adc
cli
cmp
in
jecxz
inc
sbb
test
or
mov
out
and
fmuls
xchg
add
mov
dec
jmp
test
out
fildl
xchg
pushl
movsb
jnp
sub
ss
lahf
fsubl
aam
fists
call
adc
sub
xchg
leave
pop
xchg
add
mov
call
mov
jp
jbe
xchg
jge
pop
cmp
push
inc
lds
aas
cli
test
pop
arpl
or
lock
sub
std
insb
mov
push
pop
pop
jns
incl
dec
pop
jecxz
mov
xchg
mov
es
repnz
scas
aad
mov
rcll
dec
mov
out
or
xchg
addr16
jns
cli
pusha
test
aam
pop
mov
in
ja
enter
mov
mov
push
mov
mov
in
andl
js
lock
lcall
push
pop
outsl
ja
push
cmpsb
push
add
mov
push
inc
xor
adc
test
xchg
nop
loopne
mov
pop
pop
mov
imul
and
mov
cmp
fdivl
inc
sub
enter
push
sub
loop
pop
mov
push
imul
testb
mov
push
mull
add
in
in
imul
jb
cld
cld
sahf
scas
es
outsl
leave
add
xor
stos
int3
and
clc
addr16
xorb
jb
jp
stos
add
subl
idivl
adc
push
shll
mov
push
pushl
call
jmp
cmp
jne
mov
jmp
sarl
ror
leave
dec
cmc
adc
popa
xor
mov
js
jle
js
std
sbb
mov
outsl
loop
push
icebp
ret
xor
cmovge
sahf
cmp
xchg
call
popa
push
movsb
int
cld
jecxz
push
or
sub
outsl
mov
outsl
cmp
rcrl
mov
cmp
jno
xchg
sarl
ljmp
jmp
add
and
inc
mov
cs
mov
sub
sahf
or
cwtl
cwtl
cs
adc
or
sub
int
xlat
cmp
push
outsb
les
stc
dec
ja
mov
cli
inc
mov
nop
les
mov
mov
sub
inc
loop
and
orl
or
cltd
fcomi
shr
out
addr16
fmul
fwait
in
inc
mov
mov
adc
call
mov
push
arpl
dec
out
rclb
mov
inc
mov
xchg
loope
sar
popf
sbb
out
fstl
dec
inc
enterw
and
insl
xor
mov
jno
mov
nop
xchg
push
fsts
fcmovu
xchg
addl
into
mov
mov
outsl
xorb
mov
cltd
mov
fs
add
and
sub
mov
aas
or
fwait
das
jmp
push
imul
ficomps
cltd
call
mov
jo
adc
push
movsl
adc
mov
movw
cmc
loope
popf
push
or
xor
jo,pt
mov
mov
mov
mov
leave
pop
adc
pop
fildll
out
mov
push
inc
lahf
decl
inc
out
in
rol
mov
mov
decl
mov
sbb
cltd
adcl
push
xor
mov
xorb
dec
xlat
nopl
out
add
outsb
jge
add
je
pop
adc
fisubrl
jl
pushf
out
lds
pop
ss
xor
mov
ds
push
gs
pop
dec
int
dec
gs
addr16
movsb
push
lods
mov
or
movb
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
jmp
leave
fcmovbe
sar
rcrl
int
sbb
aas
mov
js
ss
lods
movsb
fnstsw
outsb
inc
scas
sub
fcoms
jg
arpl
pushf
cwtl
xchg
lea
inc
shll
incb
xchg
jl
jg
call
adc
je
shlb
inc
xchg
je
or
and
xor
sbb
hlt
mov
xchg
stos
shrb
push
mov
call
movsb
jecxz
mov
inc
cmp
dec
xchg
loope
inc
push
rsm
mov
xorb
inc
in
mov
lds
mov
mov
jns
adc
mov
inc
shl
push
pop
mov
mov
push
sbb
in
and
movsl
mov
adc
ud0
ret
mov
mov
dec
popa
out
lahf
cmc
rol
xor
add
or
and
inc
adc
xor
adc
addr16
daa
je
daa
and
shr
in
loop
ds
or
call
add
stc
jg
push
mov
ljmp
sbb
pop
fadds
mov
sub
inc
sub
push
bound
lock
mov
das
add
mov
dec
jge
pop
lahf
xor
out
ja
pop
adc
sub
arpl
stc
jl
rol
lcall
ja
jle
rorl
push
loope
mov
loop
divb
add
ja
outsl
call
mov
mov
or
pop
jbe
insb
or
stc
mov
sub
movsl
xchg
dec
and
sbb
daa
int
mov
rorl
xchg
pushf
inc
xchg
jp
ret
sti
push
in
test
inc
inc
mov
shlb
repz
daa
dec
mov
imul
pop
in
jno
orl
stos
orb
xchg
inc
imul
add
insl
ficoms
jns
rcrl
mov
loope
stos
sbb
pop
mov
ja
cli
cmp
pop
das
xchg
cmpsl
mov
pop
lahf
xchg
mov
mov
jge
popa
bound
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
sub
push
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
movl
jmp
cmp
aad
xlat
jecxz
ja
je
push
mov
in
js
inc
sbb
mov
ret
sub
rcrl
in
xchg
jo
or
xchg
sub
dec
hlt
xor
ljmp
inc
dec
and
mov
mov
ss
mov
in
and
testl
sbb
das
cld
enter
mov
aam
lea
sub
jp
push
dec
jl
fistl
fldenv
xchg
add
push
shrb
sbb
xlat
mov
sbb
stos
push
push
push
dec
add
negl
packuswb
roll
nop
dec
sti
xchg
cltd
mov
or
lahf
inc
icebp
and
jb
sbb
add
cmp
or
pop
fwait
les
pop
test
es
inc
fnclex
aad
xor
leave
push
dec
repz
rorb
push
pop
push
nop
lea
inc
arpl
fisttps
dec
pop
sub
and
aad
mov
adc
lock
sub
jb
fidivl
dec
lock
lods
sti
sbb
inc
xor
test
ja
scas
pop
loop
in
movsb
call
inc
fcmovb
mov
std
in
idivb
in
je
mov
jl
add
push
stc
jl,pt
dec
jp
sbb
pop
push
xor
hlt
mov
scas
aaa
or
jle
xlat
iret
cltd
jl
pop
or
sbb
in
cs
mov
xor
jmp
sub
cmpb
sbb
mov
imulb
pusha
mov
das
outsl
icebp
mov
movsl
mov
hlt
out
inc
imul
push
jmp
cld
sbb
jg
push
or
sti
inc
cs
mov
imul
clc
subb
scas
ja
cmp
xor
jp
mov
fwait
adc
cltd
iret
into
mov
mov
mov
test
dec
jmp
rorl
out
inc
daa
pop
js
std
nop
push
and
cwtl
pusha
or
ja
out
lret
adc
scas
mov
mov
or
mov
mov
xor
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
add
mov
xor
jmp
lret
ror
leave
lret
push
xchg
bound
popa
mov
js
mov
jmp
cmp
cltd
push
imul
add
mov
pop
add
pop
fsubl
adc
jle
jecxz
pop
inc
outsb
lock
jno
ljmp
imul
mov
fs
adc
adc
jg
lret
jge
mov
outsl
sbb
in
pop
adc
fwait
arpl
inc
adc
sbb
insb
cwtl
adc
out
xchg
xchg
jae
in
xorl
ret
jae
fldenv
mov
loopne
cmp
cli
outsb
outsb
out
inc
inc
xchg
fsubs
and
and
add
movsb
mov
mov
pop
sarb
in
stos
sbb
add
lods
jmp
add
popa
mov
cmp
xor
enter
mov
jecxz
sarl
xor
sbb
icebp
and
xchg
stos
aad
stc
jnp
repz
add
push
popf
sub
adc
movsl
push
jmp
fsub
lahf
push
lret
push
jb
out
stos
lcall
out
out
shr
or
mov
adc
cmpsl
leave
adc
pop
sbb
pop
add
cwtl
lea
push
mov
loop
in
popf
inc
add
cs
push
bound
mov
sbb
cmp
cmc
xchg
sub
inc
sub
das
mov
mov
imul
jge
fcom
cmp
push
pop
addb
pop
dec
sub
aas
push
cmp
mov
sub
out
push
aas
and
mov
sbb
sub
inc
mov
cld
push
gs
mov
pop
ss
lcall
xchg
mov
mov
test
pop
fisttps
xor
pop
push
and
inc
xlat
stc
or
jmp
sbb
sbb
sti
add
scas
sar
push
xchg
inc
das
xchg
es
in
xlat
lock
xor
or
cwtl
sub
adc
and
rcll
sbb
jle
repnz
add
pusha
xor
scas
cmp
lods
mov
dec
fdivr
ljmp
popa
outsl
mov
xchg
sbb
pop
inc
aam
hlt
fcompp
jne
push
clc
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
andl
xor
jmp
enter
fcmovnb
aad
push
and
cmp
in
pop
into
mov
js
pop
adc
and
test
mov
dec
movsl
ret
or
test
sbb
mov
lods
stos
nop
stos
mov
push
fdivl
outsb
into
push
cmp
xlat
cmpsl
faddl
aam
jne
inc
shll
push
test
pop
push
sub
jle
ret
lcall
jnp
in
xchg
dec
ljmp
lea
adc
cmp
mov
aad
daa
push
adc
ds
sbb
popf
sbb
das
scas
mulb
push
jns
test
mov
aaa
cmpsb
add
imul
adc
popf
std
je
xchg
mov
cmp
pop
lret
repz
imul
cmp
ljmp
mov
xchg
xor
daa
add
test
int
sub
fildl
ljmp
nop
hlt
mov
cmp
cmpsb
pushf
xchg
cmp
fmulp
lahf
pusha
cmp
jbe,pn
mov
arpl
push
icebp
imul
fstl
popf
rcrb
cmpb
out
mov
dec
push
and
pop
pop
cs
ret
rolb
sarb
rcr
sub
jle
int
add
and
or
mov
movsb
jo
xor
add
adc
jb
push
nop
mov
jle
movsl
movsb
and
sbb
and
adcl
dec
aaa
pop
jno
sti
ds
or
test
ffreep
xlat
push
mov
pop
jno
ret
aas
ret
mov
inc
mov
mov
mov
movsb
jp
aas
pop
xchg
hlt
aaa
fists
out
loope
test
out
std
or
call
inc
popf
jnp
rcll
xor
jmp
rcl
sbb
dec
rorl
imul
push
mov
jecxz
jecxz
add
enter
je
xchg
or
mov
xchg
cmp
jl
add
mov
fdivs
cmp
pop
cmp
push
dec
imul
inc
jns
mov
push
sub
aam
cmpsl
icebp
mov
scas
jb
dec
mov
pop
in
xchg
fwait
int
sub
arpl
pop
addr16
sbb
rol
add
sbb
cmp
add
test
add
cmpl
jne
pushl
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
mov
xor
movl
or
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
and
movl
sub
movl
and
movl
orl
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
pushl
call
jmp
movl
mov
xor
movl
cmpl
je
cmpl
jne
push
push
push
push
call
xor
or
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
jmp
decl
mov
movl
jmp
ret
sarl
rcll
in
pushf
mov
jle
js
shr
mov
insl
push
push
jnp
fcmovnu
outsb
adc
loopne
cmpsb
pop
movsl
loope
xchg
into
sbb
cmp
pminub
mov
mov
push
add
jp
aas
ja
mov
mov
add
push
mov
mov
fisubl
cmp
pop
sbb
xor
pop
mov
sbb
jle
scas
fsubrl
test
mov
es
stos
int3
xor
les
out
fistpl
dec
ss
xor
pop
inc
sub
gs
xchg
add
jnp
outsb
jl
cmc
scas
movsl
cmpb
jg
xchg
lcall
cwtl
inc
test
jne
xchg
test
add
adc
test
ret
add
push
stos
scas
cld
mov
inc
in
lret
inc
call
test
in
add
ds
call
and
rol
in
lcall
mov
cmpl
cmp
cltd
add
xor
xor
pop
xchg
cmp
push
push
inc
inc
add
adcb
cmpsl
mov
xorl
cmp
add
lcall
sbb
out
and
sbb
out
leave
inc
and
cli
push
pop
cmp
and
and
int3
pushf
adc
dec
stc
outsb
or
inc
addl
test
sub
lods
ficoml
subb
aaa
fucom
xchg
xchg
les
xor
cltd
arpl
loope
fidivrl
xor
mull
mov
jnp
xchg
leave
out
jne
mov
and
xchg
push
out
sub
addr16
cli
scas
movsl
xor
dec
xchg
xor
inc
stos
xor
and
push
fisubl
outsl
pop
sbb
pop
sbb
cmp
xor
sbb
push
mov
xchg
pop
fs
jg
push
je
sbb
mov
cs
shr
mull
stos
stos
mov
add
jbe
xorl
int
push
push
rcrl
sbb
ljmp
fwait
cmp
leave
push
fsubl
bnd
add
cmp
movl
jmp
ret
ret
lret
test
push
and
js
jle
js
out
jbe
adc
pop
dec
into
sub
push
sub
add
cmpsl
xchg
xor
lret
adc
mov
lods
rcrb
jae
mov
je
xchg
lods
bound
jmp
lods
into
cmp
enter
or
dec
push
add
push
lods
pop
movsb
push
add
testb
sub
lods
mov
jnp
sub
fstps
sbb
fcomip
cmp
xlat
aas
movsb
out
sbb
addr16
pop
mov
dec
xchg
push
bound
add
lret
and
adc
mov
clc
jl
popa
and
mov
xchg
pop
cmp
and
stos
mov
xor
adc
sbb
incb
insb
push
outsb
lods
pop
inc
enter
mov
popf
sbbl
pop
bound
movsb
ds
lock
push
xor
jmp
out
xor
xchg
inc
ret
mov
in
xlat
cmp
jb
or
mov
cmp
ja
mov
sbb
scas
out
js
outsb
aas
dec
arpl
pop
mov
sbb
mov
in
je
adc
mov
pop
or
fld
imul
rol
add
cmp
int
aad
sbb
jecxz
add
push
adc
pop
xchg
sti
or
cmpsl
pop
adc
test
dec
push
pop
lret
int
xchg
neg
dec
roll
fcomps
xchg
fcoms
mov
fistps
mov
lcall
cltd
lahf
lea
insb
enter
andl
cwtl
pop
popa
hlt
ret
es
pop
out
movsl
popf
lret
and
das
inc
iret
cltd
scas
jne
cmp
fs
sub
aas
cld
pop
imul
aaa
pop
aam
ret
jl
leave
loopne
lea
int3
data16
fnsave
xchg
xor
mov
cmp
fs
je
jnp
pushl
out
mov
lret
int3
dec
sti
icebp
in
inc
in
jl
jmp
mov
xchg
mov
scas
adc
shl
adc
cmp
adc
cmpsb
sbb
inc
out
inc
gs
xor
repz
lock
icebp
fstps
dec
cmp
es
xchg
push
scas
fisubl
add
out
xchg
jge
mov
lea
ss
popa
or
ret
mov
jb
xor
test
movl
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
jmp
cmp
fcmovnb
cmc
into
inc
jge
push
or
lea
js
jle
js
cltd
roll
fstl
test
pop
jae
pop
or
jne
lock
and
mov
sub
mov
xor
sub
in
test
sbb
aas
or
and
arpl
in
pushf
pop
or
sub
pop
push
pusha
sub
vmovsd
mov
lcall
aaa
lret
cmp
bnd
lods
lret
lret
lret
rcrl
frstor
cmp
pushf
bound
sbb
rcrb
inc
fisttpl
xor
imul
mov
arpl
test
int
xchg
popf
adc
test
clc
jbe
popf
jnp
jecxz
lods
mov
es
sub
and
mov
mov
test
insb
push
leave
enter
sbb
add
xchg
sub
gs
mov
ljmp
xor
in
cmpsb
test
mov
outsl
push
push
dec
push
clc
inc
ds
std
jne
imul
fistps
mov
cld
pushl
dec
cmc
pop
xlat
stc
ja
xchg
jno
dec
movsb
xor
sub
or
popa
movsl
lods
or
cmpsb
mov
stos
aad
or
fcomps
ja
cmpsb
dec
jo
fistpll
dec
cmp
addr16
aaa
or
std
adc
jbe
mov
fnstenv
jmp
insb
cmpsb
daa
jne
mov
sub
cmpl
push
dec
repnz
imul
dec
mov
mov
jb
jo
cmpsb
xor
scas
jle
jns
or
pop
adc
stos
sbb
ja
outsb
cmp
jle
jae
dec
leave
mov
testb
push
adc
orb
push
roll
sub
xchg
pushf
orps
filds
mov
or
or
mov
imull
adc
xor
dec
cld
les
lcall
mov
push
mov
mov
adc
pop
sbb
push
mov
cli
xor
adc
fnstenv
test
push
nop
icebp
addr16
out
orb
or
test
xlat
push
mov
cld
sbb
sbb
push
inc
lods
lds
xor
sub
mov
xor
add
cmp
jb
mov
mov
xor
xor
add
add
imul
mov
jmp
mov
leave
dec
mov
std
je
into
idivl
js
in
js
or
dec
loop
bound
and
test
ds
mov
dec
jmp
pusha
sbbl
push
push
inc
out
leave
loopne
mov
fdivrp
mov
fbld
xchg
or
icebp
lods
pushf
cmp
sti
dec
leave
xchg
cltd
and
gs
push
in
cmp
hlt
loope
jl
jb
sar
repz
test
xor
xchg
inc
inc
mov
mov
cmp
cmc
mov
cli
inc
xor
cmp
insl
pop
div
ret
pop
sbb
arpl
ret
sarl
or
add
loop
xchg
pushl
fistps
das
lcall
xchg
shlb
xor
iret
mov
xor
cwtl
hlt
mov
sbb
dec
out
mov
aas
add
inc
adc
repz
out
orl
out
rorl
std
cli
cli
adc
or
pop
xchg
das
lret
xor
cltd
add
inc
pop
pushf
cmp
xor
sbb
int
xchg
gs
mov
xchg
bound
shl
shll
add
and
xchg
cmp
dec
adc
shll
or
cmpsb
adc
cmc
addb
loop
fdivl
and
pop
push
stc
out
popf
stos
xchg
jb
sar
es
cwtl
jns
jle
fs
xchg
xchg
js
scas
loop
imul
pop
push
rorl
adc
ljmp
and
cli
cmpb
jne
cltd
pop
mov
sbb
out
insl
add
imul
repnz
aaa
cli
pop
sub
out
xlat
push
daa
jno,pn
repz
lods
inc
inc
aam
add
ss
xor
aam
or
insl
mov
mov
pushf
loopne
cmp
mov
jb
sbb
cmp
jge
cmp
inc
out
push
rcrb
shlb
and
mov
rclb
shlb
mov
shlb
fnsave
rol
test
sti
push
call
pusha
cmp
mov
data16
mov
mov
leave
or
repz
ljmp
or
in
cld
or
cmpsl
sub
scas
push
mov
sbb
fwait
in
pop
mov
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
jmp
sarl
int
ret
xchg
daa
icebp
inc
pop
mov
in
js
mov
scas
into
icebp
mov
dec
xor
imul
xchg
jle
xchg
and
mov
jno
rcll
daa
push
mov
dec
xchg
xchg
mov
aaa
mov
outsl
cmovnp
inc
int3
inc
int
repnz
in
xor
leave
shrl
add
inc
decl
outsb
test
xchg
pusha
movsl
icebp
push
cmp
and
nop
fisubs
inc
psllq
cmpl
pop
loope
cmp
mov
rolb
mov
in
pop
leave
ja
sbb
cmp
je
mov
mov
pop
adc
prefetch
push
imul
hlt
int3
add
xchg
adc
insb
xor
jg
sub
fs
loop
enter
inc
cwtl
sub
cltd
js
add
mov
loopne
lcall
pop
cmpb
push
js
inc
daa
mov
jno
and
jp
imul
jg
pop
pop
inc
adc
adc
gs
sub
sbb
and
pop
pop
adc
xor
dec
xor
pusha
xor
pop
lock
dec
cmp
jnp
cmp
jo
xchg
mov
and
into
pop
testl
insl
push
or
push
adc
or
mov
stos
mov
push
lods
test
cld
cmp
es
movsb
jno
scas
jnp
bound
adc
adc
mov
cmp
jns
aaa
js
dec
jge
ljmp
gs
and
jge
dec
push
push
dec
inc
sbb
or
xchg
push
cwtl
icebp
sbb
mov
test
jo
pop
dec
and
cmp
sub
sub
movsl
cs
leave
inc
fldl
jmp
ret
sahf
dec
jge
jbe
test
leave
stos
mov
mov
dec
into
fwait
push
push
sbb
out
scas
mov
lds
jnp
pop
xchg
xchg
cwtl
lret
jp
sti
shlb
in
scas
and
mov
inc
mov
sbb
dec
gs
adc
lods
imul
adc
dec
xlat
test
loop
fwait
inc
xchg
and
jae
and
add
mov
mov
add
add
int
into
xchg
jle
push
mov
js
in
js
fnstsw
es
mov
pop
es
shlb
test
ja
lds
out
mov
and
hlt
lock
and
inc
mov
sbb
out
icebp
movsl
ds
mov
ljmp
or
into
fcomps
pop
lds
push
insb
inc
or
sub
test
sar
push
xor
ss
cmc
xor
xor
enter
fildl
test
mov
ret
cmpsl
cmp
fsub
lcall
push
stos
xchg
dec
in
mov
pop
mov
popf
mov
or
xchg
out
fstps
xor
outsl
out
mov
test
and
in
mov
rol
mov
jecxz
jno
lods
in
push
rol
inc
cmp
push
jmp
jb
icebp
or
inc
lods
mov
inc
lahf
jno
inc
std
test
pop
in
nop
imull
cmp
mov
lock
xchg
sub
pop
xchg
and
subb
push
inc
sub
aam
out
mov
jge
lods
pop
inc
movsb
jg
mov
cmpsb
aam
pushf
adc
xchg
daa
push
jno
mov
sub
xchg
stos
push
adc
adc
mov
lock
into
insl
fidivrs
pop
and
mov
mov
adc
pop
adc
divb
xchg
cld
fists
mov
cmp
xchg
mov
cmp
inc
dec
fstpt
inc
and
aam
loop
stos
xchg
frstor
adc
cli
mov
or
fsts
data16
inc
cmp
add
push
cmpsb
xchg
pop
sbb
sbb
sub
xor
stos
xor
pop
and
push
testb
sub
pop
xchg
inc
fidivrl
sub
fsubp
and
xor
pop
adc
push
jmp
ljmp
cmp
jp
out
mov
dec
cs
mov
sbb
shll
popa
hlt
mov
cli
jnp
lock
mov
insl
sub
push
loop
movsl
add
into
sub
ret
push
xchg
or
xchg
dec
fimuls
std
test
dec
sbb
popf
push
push
clc
xchg
push
jp
leave
mov
jno
imul
mov
mov
jmp
cmp
ret
fcmovnb
aad
pop
adc
sub
jns
cmp
js
jle
js
jp
cltd
lods
push
jl
xchg
mov
jl
stos
cld
repz
jmp
test
mov
add
cmc
into
sub
insb
lahf
fldl
mov
gs
pop
pop
jmp
fs
lcall
ds
popf
push
and
jo
dec
or
xchg
or
pop
cmp
out
mov
scas
imul
mov
mov
mov
push
inc
mov
lea
xchg
in
xchg
mov
mov
mov
xchg
push
sarl
push
mov
adcb
mov
sub
mov
inc
inc
jns
inc
push
test
pushf
icebp
or
mov
insl
cmp
fs
clc
sbb
mov
xor
cld
push
cltd
das
das
adc
test
bound
into
inc
mov
shlb
pop
and
adc
pop
cmova
xor
adc
insl
jge
dec
dec
fidivrl
mov
outsb
in
scas
in
out
insl
adc
sti
dec
out
repnz
adc
jp
jbe
out
or
dec
cmc
mov
inc
push
mov
cmp
xor
cmp
push
in
sbb
fbstp
xor
addr16
lock
dec
xchg
imul
push
xor
lret
xor
or
sbb
aaa
lahf
leave
jb
xchg
jecxz
pop
sub
ret
push
jae
jecxz
aad
lret
movsl
sub
std
or
cmp
insb
loopne
fldt
aad
sub
lcall
and
in
jbe,pn
ss
addr16
push
insl
jg
aam
movsl
add
in
enter
mov
and
in
int3
push
cmp
push
adc
aad
out
lods
iret
sti
push
sbb
inc
sbb
cmp
into
in
jp
dec
repz
sub
sub
push
clc
jmp
cmpsb
out
push
mov
in
rcrl
ljmp
xchg
xchg
pop
shl
push
sahf
mov
mov
cs
push
cltd
stos
mov
inc
or
addr16
push
test
cwtl
xor
xor
mov
jp
sbb
jnp
dec
xor
sbb
xchg
popa
call
or
aam
stos
sub
cmp
jmp
into
ror
fcmovnbe
fld
ud0
pop
popa
inc
lods
mov
in
js
outsl
push
jl
pop
fimuls
sub
test
fdiv
dec
mov
ds
pop
shl
in
pop
sbbl
jge
dec
nop
jnp
enter
mov
xor
push
movsb
push
pop
jns
call
in
pop
insl
xor
pop
cmpsb
pushf
out
mov
mov
daa
fadd
fdivs
add
push
subb
mov
cmpsb
icebp
add
enter
mov
into
sbb
sub
mov
mov
sub
push
mov
aam
mov
je
pop
shl
cmp
test
add
and
cmpsl
or
lahf
fstpl
lret
mov
test
imul
adc
sbb
gs
nop
gs
jecxz
nop
leave
jbe
add
aas
dec
xchg
inc
mov
sahf
movl
adc
test
dec
das
jg
dec
insl
ds
pop
inc
push
lods
jne
cld
lret
sub
pop
iret
pop
dec
adc
subl
test
testb
pop
xchg
cltd
sub
adc
inc
sbb
push
pop
nop
pop
shr
int3
pop
lock
jns
mov
push
xchg
jne
cmp
or
int3
xor
xchg
mov
daa
out
xor
pop
fwait
out
mov
inc
mov
pop
aas
lcall
flds
adc
bound
fldt
cltd
fisttpl
out
mov
lea
adc
jl
cmc
les
shl
jo
mov
dec
test
popa
xor
pusha
xlat
rol
or
das
cmp
push
or
rorl
call
fildll
pop
xchg
mov
adc
test
test
mov
enter
xchg
push
aad
and
insb
mov
fstpl
sbb
jg
sbb
ret
repnz
pop
inc
push
insl
sahf
pop
fwait
out
in
sub
xor
arpl
cmpl
scas
dec
int
je
push
or
push
insb
pusha
pop
insb
or
adc
fisttps
mov
cmpsl
cmp
mov
fisubrs
es
jge
adc
insb
popa
add
push
xor
clc
in
cmp
inc
cwtl
adc
push
sbb
aam
cwtl
jae
fdivr
adc
mov
add
add
adc
add
cld
xor
xor
jmp
aas
lret
iret
aad
jo
lods
testl
js
in
js
call
jae
rol
out
je
adc
pop
popf
adc
and
aaa
lea
sbb
dec
push
add
outsl
xchg
ret
clc
fcmovnbe
inc
inc
cmp
pop
cmp
sub
out
pop
sbb
sti
mov
in
jg
mov
cmpsl
mov
inc
cmp
lock
cmpsb
in
sbb
xchg
mov
dec
stos
vcvtdq2pd
and
cmpl
int
and
push
les
sarb
aad
sub
adc
insl
cmp
cmp
cmp
add
outsb
test
outsb
popf
push
mov
jg
scas
push
lret
dec
jp
push
js
add
aad
test
dec
mov
js
addr16
sbb
out
mov
imul
mov
push
jmp
xor
movsl
add
jbe
mov
xchg
rcrl
inc
fdivrl
mov
lock
repz
pop
mov
ljmp
pop
dec
decb
jle
lods
jecxz
fisubl
lret
or
dec
adc
subl
outsl
adc
call
pop
in
adc
stc
fists
sti
xlat
int3
ljmp
nop
fs
adc
es
add
movhps
shrl
and
test
push
stos
adc
push
scas
divb
stc
push
inc
adc
adc
ja
addb
lods
or
mov
das
pop
shlb
pop
adc
add
icebp
arpl
xlat
mov
sub
nop
jg
jmp
jle
or
lea
bound
dec
std
jg
sahf
in
mov
lahf
jb
gs
pop
xchg
xor
xor
cltd
popa
and
dec
ss
ss
enter
outsl
stos
dec
and
int3
jae
mov
xchg
cwtl
movsl
test
sti
inc
pop
nop
push
dec
add
lock
mov
lea
sbb
mov
and
loop
outsl
lea
fwait
imul
jae
rol
aas
xchg
lcall
int
push
pop
xor
push
stc
mov
mov
add
pop
aam
movsb
lock
mov
loope
lahf
rolb
lods
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
jmp
lds
ds
fxch
adc
add
leave
sub
js
jle
js
jnp
inc
fcoms
lahf
std
xchg
pop
jb
fmuls
sub
push
cld
imul
aad
insl
aas
xor
movsb
enter
xor
jge
jmp
fptan
and
jbe
push
jns
mov
or
aam
pop
sbb
int3
rorl
xorl
js
push
mov
pop
dec
bound
int
xlat
jo,pn
leave
dec
imul
fstpl
out
sti
out
jl
or
test
imul
inc
es
dec
imull
out
aam
jnp
cmp
in
push
imul
fs
out
enter
std
pop
cmpsl
adc
cmp
popa
std
or
int3
and
cmpsl
dec
push
stos
xchg
adc
scas
push
into
inc
push
out
out
xchg
mov
push
adc
cmp
mov
fnstenv
shrb
jle
mov
pop
insb
mov
pop
inc
outsb
lods
aaa
xchg
push
add
cmc
ficompl
test
js
or
ret
mov
jns
es
push
dec
sbb
leave
xchg
movsl
sbb
add
dec
adc
xor
or
pop
inc
dec
in
popa
call
ljmp
ffreep
outsl
push
mov
ljmp
ret
lret
repnz
pop
xchg
icebp
test
fidivl
inc
insl
dec
mov
jecxz
jle
add
mov
dec
sbb
mov
dec
inc
xlat
jno
xchg
inc
test
adc
lea
hlt
push
aad
or
scas
and
pop
inc
cmp
divl
mov
push
ret
and
stos
fs
adc
inc
aas
or
jns
adc
and
push
scas
xchg
mov
add
adc
pop
roll
loop
sarb
cltd
mov
jo
repnz
xlat
xor
push
jp
push
mov
and
jle
jo
scas
cltd
lcall
mov
cmp
and
inc
and
and
lret
mov
push
sbb
push
cld
in
cmp
xchg
cmp
add
pop
hlt
xor
addr16
mov
mov
and
pop
lds
aam
xor
addl
add
into
ror
rcl
into
jbe
inc
iretw
xchg
loopne
pop
js
in
js
mov
fsubs
push
push
imul
lcall
xchg
sub
cmpsb
js
enter
mov
or
ret
mov
hlt
aas
mov
repnz
in
push
leave
sub
add
popa
and
fcoml
pop
hlt
mov
xor
mov
dec
cmp
lock
ss
jae
mov
xchg
in
mov
lods
lret
popa
mov
stos
jne
addb
xchg
add
in
xor
mov
jno
xor
add
scas
js
fdiv
repnz
les
adc
xchg
adc
es
movsb
xor
mov
scas
or
ds
and
pop
sbb
xor
pop
ljmp
xlat
pop
jge
fnstsw
cmp
repz
daa
ret
fcmovb
jne
shlb
aad
mov
sub
or
push
inc
imul
cltd
dec
and
push
idivb
ds
inc
gs
stc
lcall
inc
sub
dec
stc
and
add
out
incb
mov
xor
lahf
in
mov
sub
xor
aas
fsubs
rorb
iret
nop
repz
and
mov
xchg
dec
test
fsubrs
lahf
outsb
sbb
push
add
scas
sub
sbbb
mov
shrb
lods
sbb
xchg
daa
bswap
mov
orl
ja
stos
nop
pushf
jbe
pop
je
clc
inc
mov
xchg
pop
jnp
push
jo
out
push
inc
sub
xchg
jl
nop
push
add
pop
hlt
inc
xor
adc
daa
mov
fadd
and
pop
push
push
dec
cmc
pop
andb
xchg
sub
sahf
fwait
add
jl
cmp
pop
inc
jbe
dec
xchg
movsb
repz
jae
push
jl
inc
cmp
aas
scas
mov
jb
dec
stos
hlt
insl
mov
fcoms
movsb
jnp
dec
xchg
or
sbb
adc
test
or
fdivrs
fimull
cmpb
call
std
mov
push
cmp
bound
push
mov
ljmp
rorl
scas
xlat
jmp
aas
xlat
xlat
lret
xlat
lret
rcr
and
or
xchg
ja
rcrb
js
jle
js
int3
pop
inc
jnp
jbe
and
or
stos
aad
or
movsl
or
inc
adc
push
push
out
inc
xchg
mov
xchg
dec
lcall
jp
mov
xchg
js
sub
int3
sti
int
loope
ja
lret
jb
cmpsl
inc
popf
ss
jp
hlt
nop
fs
stos
sahf
push
test
repz
mov
pusha
and
shlb
jne
pushf
mov
stos
mov
sbb
mov
out
cmp
lahf
ljmp
xor
out
call
inc
sti
add
cmpsb
in
sub
jle
into
pop
or
ficoml
stc
sbb
cmc
iret
fstpt
aas
fcompl
push
xchg
cwtl
les
jle
ret
ljmp
push
push
mov
stos
gs
ds
push
aam
lds
mov
or
xorb
lea
loope
push
inc
xchg
inc
xchg
stc
hlt
jge
sar
outsb
or
jmp
jne
sbb
faddl
les
inc
ror
or
xchg
addl
into
jmp
pop
jp
inc
stos
push
arpl
scas
std
cmpsl
mov
or
xor
test
add
jae
xor
lahf
and
push
mov
dec
sub
jmp
arpl
imul
lds
jmp
in
push
ret
push
icebp
push
inc
stos
std
es
mov
adc
add
cmp
or
js
out
dec
clc
jp
mov
rclb
sub
ret
pop
dec
fistpl
int
jo
push
ret
movsb
les
stos
xor
jo
stos
or
push
or
cmp
jb
std
cmp
and
in
sbb
jb
imul
jmp
mov
sti
sahf
sar
popa
iret
push
adc
imul
rorb
lock
xor
aad
pushf
mov
cmpl
inc
add
pop
arpl
xchg
fwait
push
loopne
sub
in
dec
pop
inc
cmpsb
cmp
mov
dec
int
pop
add
sbb
int3
sahf
mov
and
aam
cmp
mov
mov
sub
cmp
ja
jmp
rol
xor
sti
int
jge
pop
js
in
js
mov
ljmp
or
mov
dec
sub
dec
and
pop
cwtl
outsb
stos
or
mov
fdivr
jbe
enter
loopne
cmp
mov
andb
sbb
cmp
mov
push
aad
cli
inc
lods
andb
addl
ffreep
repnz
xchg
and
out
call
js
sub
call
mov
add
popa
pushf
cwtl
je
mov
mov
pop
insb
xor
cmp
pop
scas
out
les
nop
ret
aaa
and
push
test
adcl
sahf
dec
pop
mov
sbb
test
push
movsb
imul
dec
mov
imul
scas
das
orb
cmp
dec
scas
outsl
add
mov
jle
adc
imul
sub
add
adc
cmpsb
jns
cmp
fldt
int3
mov
fsubrl
repnz
inc
shrl
push
push
mov
std
pop
clc
adc
movlps
push
test
inc
xor
adc
mov
aaa
push
js
nop
out
mov
pop
ror
xor
mov
in
and
adcl
pop
push
mov
rorb
push
mov
ds
sub
call
mov
test
in
ficomps
andb
add
stos
mov
pcmpeqw
pop
test
fbstp
call
bnd
and
adc
repnz
fsubrs
mov
xchg
mov
push
xor
push
scas
cwtl
leave
aad
mov
adc
jno
sbb
scas
fcom
test
adc
ret
mov
leave
sbb
repz
dec
lret
rol
fcmovnb
or
daa
adc
in
pop
inc
loope
mov
or
cmc
loopne
ds
add
sahf
inc
jp
test
or
sub
andl
mov
pop
sbb
mov
aas
push
lea
and
xor
and
cmpsb
shlb
add
mov
cmp
in
inc
xor
inc
ds
testb
movsb
and
cmc
in
adc
xor
pop
cmc
iret
jp
sarb
shr
call
push
enter
xor
xor
add
add
imul
mov
jmp
iret
leave
into
xlat
fcmovu
aad
cli
je
sti
cltd
mov
sahf
and
js
in
js
fsts
movsl
test
adc
dec
dec
and
jbe
jle
mov
push
mov
sti
pop
pop
xor
or
xchg
aam
jl
lcall
push
mov
fdiv
insl
pusha
mov
fcomip
jp
mov
sti
cmp
mov
dec
add
mulb
scas
mov
jbe
sti
clc
mov
jne
pop
cmpsl
dec
cld
xor
push
scas
jbe
inc
and
hlt
repnz
out
imul
test
loop
mov
out
mov
or
mov
jecxz
test
adc
mov
aas
ficomps
xchg
push
scas
push
cltd
fimuls
adc
jne
sbb
xor
pop
cmp
push
and
jbe
xchg
or
out
or
ja
leave
push
in
sub
pop
dec
test
insl
pop
xchg
scas
flds
jae
mulb
and
jg
rcrl
arpl
lods
lods
loopne
jg
mov
pop
dec
sub
dec
inc
add
jbe
xchg
inc
lock
div
cmp
lahf
lock
xor
xchg
clc
mov
xchg
jbe
mov
mov
add
add
mov
movl
jl
enter
and
cmp
test
daa
pop
jne
add
leave
pop
rclb
loope
cwtl
pop
jecxz
mov
sbb
pop
push
mov
stos
pushf
pop
into
in
push
pop
add
or
outsb
jbe
fwait
sub
aaa
pmaddwd
cmp
fs
fucomip
scas
ror
test
sbb
in
sbb
fisubrs
jno
jbe
xchg
mov
aas
sbb
into
jnp
test
test
pop
xchg
in
xor
test
outsl
sahf
mov
mov
fwait
pop
not
shlb
xlat
dec
push
cmpsb
data16
int
xor
inc
shlb
jle
outsl
sub
jle
mov
and
cmc
add
xor
fdivl
cmp
lds
jns
and
add
aas
push
add
test
in
inc
jg
mov
dec
cmp
mov
sub
cli
movsl
xlat
popa
inc
xlat
push
into
aam
pop
jmp
call
inc
fistpl
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
jmp
into
cmp
fxch
sub
test
in
pusha
js
in
js
sub
outsl
cmp
mov
scas
adc
push
call
xchg
xor
lods
mov
out
jnp
mov
mov
mov
xchg
dec
adc
pop
nop
jno
test
inc
mov
insl
mov
ror
add
xchg
aas
dec
cltd
inc
adcb
mov
out
into
jae
and
stos
pusha
or
add
pop
sbb
sub
rolb
mov
pop
inc
inc
mov
icebp
mov
jp
cmc
xchg
xlat
adc
outsl
and
test
mov
mov
push
add
sbb
jecxz
xchg
jp
repnz
add
or
ljmp
and
inc
dec
filds
push
cmp
sbb
pop
mov
inc
ds
cmc
sbb
out
pusha
icebp
xchg
stc
cmp
scas
sub
xor
mov
sti
and
sub
cld
mov
xchg
lods
inc
add
cli
jmp
jmp
xchg
repz
or
jmp
icebp
cmp
fs
mov
mov
mov
jno
mov
and
jmp
cwtl
daa
pop
rolb
xchg
adc
jbe
mov
shrb
movsb
xlat
jl
aad
stc
add
insb
lcall
push
sbb
les
and
negl
lds
xchg
test
inc
add
divl
imul
pop
ret
aad
sahf
mov
notl
mov
test
jle
pop
lret
xor
jb
jo
dec
pop
push
and
xor
insl
or
ds
xchg
lcall
addr16
out
lods
jno
jg
adc
xchg
in
dec
xorb
cmpsl
push
bound
sub
mov
mov
pushf
and
and
out
mov
push
cld
push
js
push
pop
jmp
jns
push
mov
inc
addb
int3
sub
out
es
mov
idiv
jmp
sbb
aaa
sahf
dec
or
dec
cmp
xlat
or
imul
lock
push
xchg
jb
ljmp
and
or
pop
lock
cmp
mov
jbe
jmp
rol
ds
into
rcl
adc
push
pop
xor
in
js
push
ja
xor
in
add
mov
scas
int3
ss
cmp
xor
mov
lcall
or
jecxz
cmp
mov
xor
clc
sub
into
jge
pop
dec
and
fwait
into
jb
stos
or
jae
or
mov
and
dec
and
adc
std
pop
daa
xor
mov
push
pop
xchg
call
mov
jb
push
sub
mov
jo
xlat
ret
push
or
cmc
inc
pop
jns
nop
js
ret
adc
ljmp
mov
fsubrp
sbb
mov
out
subb
jg
adc
add
push
jg
addr16
inc
mov
dec
repnz
popa
sbb
jae
jne
or
push
and
lods
sbb
insb
in
mov
push
sbb
arpl
dec
in
pop
jnp
inc
fisubrs
fisubrl
call
or
fsubl
hlt
lcall
sbb
or
inc
popf
sub
pop
into
pcmpeqw
and
pop
lret
loope
jns
test
or
sub
and
xor
cs
dec
out
xchg
cmp
dec
pusha
push
mov
mov
cmp
fwait
jb
bound
in
inc
cmpsl
xchg
orb
int
push
ss
xor
xchg
sti
xor
jns
jnp
je
adc
out
jb
mov
xchg
mov
ficompl
or
push
xchg
adc
mov
icebp
mov
test
push
test
xor
pop
jbe
cmc
pushl
xchg
lcall
jg
rcrl
inc
pop
or
addb
shl
inc
imul
pop
lret
call
push
popa
cltd
push
call
ds
out
sahf
sarl
je
out
mov
ss
mov
lcall
ret
insl
push
pop
pop
add
mov
ror
loope
fwait
push
jp
fistpll
scas
pop
js
mov
nop
lahf
sub
loop
push
xchg
lret
divl
shlb
xor
inc
mov
mov
cmp
dec
shl
mov
idivb
ja
mov
mov
xor
xor
jmp
rol
enter
fcmovnu
xchg
add
inc
rorb
jmp
js
in
js
fcmovnu
outsl
add
mov
out
aad
adcb
pop
jb
pop
and
mov
sub
push
sub
mov
xchg
les
adc
add
pop
mov
xchg
sbb
mov
pop
jecxz
int3
jae
enter
rcll
pop
add
xchg
jne
mov
jo
mov
mov
mov
push
in
or
in
jg
mov
cwtl
jns
out
mov
mov
xchg
pop
sub
pop
dec
or
sbb
call
into
mov
lahf
test
repz
push
cld
movsl
mov
or
clc
inc
lods
test
xchg
sbb
fadds
cmp
leave
out
adc
fdivr
movsb
popa
adc
cmp
mov
add
mov
inc
jecxz
push
and
pop
pop
jne
dec
sub
mov
ret
push
jmp
mov
clc
mov
pop
mov
dec
mov
inc
jo
push
and
or
fwait
rcl
add
inc
and
lea
or
add
mov
out
mov
call
stos
mov
mov
fptan
lcall
lods
das
xlat
bsr
shrl
nop
mov
push
pop
lds
dec
out
pop
daa
mov
cmc
sti
stos
ret
push
add
cmpsb
add
cmp
lret
adc
les
int
mov
das
push
adc
xchg
imul
scas
outsb
adc
cmc
lods
out
into
lods
loope
adc
insl
mov
pop
jmp
adc
sbb
inc
cmp
mov
adc
xchg
dec
xchg
pop
inc
mov
popf
pushl
subl
mov
xor
fildl
xorl
jns
xchg
clc
fnstsw
mov
push
sbb
or
enter
mov
bnd
or
pop
add
and
jmp
push
mov
lahf
ret
jnp
lcall
or
icebp
adc
cvttps2pi
out
push
or
mov
mov
imulb
fstpl
shrl
xor
stc
add
imul
mov
mov
mov
mov
add
movl
jmp
fcmovnu
shr
movsl
xchg
jnp
mov
push
imul
cmp
jns
movb
sbb
shr
cmp
je
mov
mov
add
js
ss
rcrl
xor
dec
inc
jns
es
mov
jl
int3
xchg
cmp
xor
mov
leave
mov
mov
imul
iret
xor
pushl
push
subb
enter
int
adc
sbb
fadds
scas
sub
mov
out
incb
mov
cli
imul
sub
leave
int3
mov
dec
jns
mov
test
jb
repz
mov
xchg
jge
repz
push
inc
mov
xchg
mov
adc
js
mov
test
fcmovnb
jnp
mov
or
loop
testl
dec
add
lret
sbbb
aam
in
jno
and
mov
loope
inc
fistps
mov
test
int
inc
push
sub
test
mov
hlt
ja
in
leave
mov
adc
sub
shlb
add
jecxz
sbb
cmp
dec
xlat
aam
hlt
mov
inc
xchg
mov
jne
jae
pop
js
mov
sbb
xor
out
les
dec
adc
or
pushf
xlat
lea
add
test
and
mov
mov
imul
imul
cmp
and
stc
inc
test
pop
ja
xchg
push
ds
mov
dec
jle
repz
mov
jecxz
mov
js
push
addr16
pop
xchg
mov
popf
roll
loop
push
adc
pushf
or
or
push
call
sbb
roll
aad
or
shl
fnsave
xorl
fsubr
std
fstpl
jns
push
stc
pop
sub
add
cld
loopne
inc
jecxz
mov
jae
or
lock
gs
pop
pcmpgtd
push
sub
or
pop
dec
push
jae
scas
lods
iret
lock
js
pop
cltd
mov
subl
je
push
inc
mull
pop
ja
dec
mov
imul
inc
dec
addb
or
sbb
sbb
mov
jmp
iret
ret
rol
fcmovnu
mov
push
push
inc
cmp
jle
js
aas
lds
adc
and
jg
dec
repnz
mov
inc
push
or
idivb
dec
les
insb
adc
and
aad
mov
cmc
sub
lea
push
pushaw
jbe
mov
ss
lock
add
xorb
ds
sub
xchg
rcll
insl
or
shlb
stos
sub
cld
test
call
mov
in
aas
xor
add
xlat
sub
mov
dec
xor
pop
les
jmp
jbe
adc
pop
xchg
shrb
das
jne
push
pop
insl
sub
cli
mov
cmp
push
pushf
sub
xor
and
pop
add
lods
sub
pop
push
sbb
xchg
faddl
movsl
out
push
popf
sbb
cmp
arpl
lret
mov
gs
cmp
test
jecxz
pop
mov
mov
jge
xor
adc
rolb
stos
xor
imul
out
gs
cmp
push
outsl
mov
pop
insl
push
out
cmp
aad
dec
or
test
push
push
aam
mov
jne
push
scas
inc
cmp
adc
ficoms
push
ljmp
mov
jecxz
dec
lea
gs
cli
mov
jns
cs
push
adc
icebp
adc
cmpb
cmp
in
pop
pop
cmp
cs
fs
inc
lock
lahf
dec
aam
push
add
outsl
pop
jmp
add
cmpl
adcb
cmp
das
mov
push
dec
iret
xlat
int3
push
xchg
add
movsb
enter
addr16
std
je
mov
mov
cwtl
or
lock
in
pop
sti
loope
lret
rclb
inc
xchg
or
push
je
stos
pushf
jns
stos
movsl
flds
out
push
dec
jge
rol
pop
xchg
xorl
cwtl
inc
or
loope
adc
inc
push
dec
and
xchg
shr
cmp
cmpl
push
jp
insb
jl
jle
adc
shrb
jmp
mov
add
test
in
jns
push
fnsave
ds
mov
mov
aaa
push
bound
mov
inc
hlt
cmp
mov
jmp
int
ror
fcmove
leave
sub
sbb
add
stos
insb
js
in
js
mov
sbb
es
cwtl
sbb
lcall
test
push
inc
pushf
pop
jo
adc
les
dec
xor
jb
std
aas
inc
aas
cmc
xchg
jle
dec
lea
and
cmp
push
xchg
inc
sbb
push
ds
push
insl
mov
adc
testl
inc
sahf
mov
push
dec
dec
test
mov
rorl
sbb
cmp
les
scas
and
ljmp
adcb
or
sub
mov
jno
mov
andb
xchg
sbb
push
outsb
inc
stos
xor
nop
out
fisubrl
outsb
into
dec
jp
dec
dec
test
cmpb
fsubrp
outsb
mov
sbb
adc
jmp
and
out
rclb
int3
sbb
xor
icebp
fisubrl
and
hlt
xchg
mov
nop
call
mov
mov
mov
cmp
dec
dec
enter
mov
fmull
push
ja
xor
add
fidivl
mov
enter
cmp
sahf
ljmp
cltd
jne
mov
test
push
xor
loopne
sarb
loopne
mov
xlat
lods
add
pop
push
xor
xor
pop
jge
push
cmp
out
jl
ret
popa
cmp
sub
psrad
mov
mov
xchg
lods
xchg
cmp
int
bound
repz
jbe
cli
into
jecxz
arpl
xor
or
add
mov
int
mov
xchg
mov
push
mov
lods
add
insl
mov
xchg
add
add
jmp
in
mov
leave
and
insl
shll
pop
mov
cmpsb
leave
xchg
push
mov
nop
jge
sub
adc
leave
dec
cmpsb
inc
clc
or
dec
iret
inc
lods
pop
lret
lret
cmp
jl
int
dec
sub
sub
ret
push
lods
cld
adc
mov
scas
pop
lret
jnp
or
rcll
cmp
adc
mov
xlat
sub
or
pop
cs
out
inc
push
gs
push
and
test
mov
pop
inc
sub
andb
jle
sbb
rolb
shr
cwtl
sldt
mov
xor
add
jmp
ret
xlat
data16
mov
js
in
js
dec
xor
push
mov
push
arpl
cltd
push
sti
idiv
cmp
mov
cmp
pop
lods
imul
jb
push
pop
inc
in
jl
sbb
ds
insl
call
pop
notl
add
mulb
mov
jne
ja
jo
add
int
sbbl
xchg
stc
fcoml
mov
and
out
dec
cmp
mov
dec
fldcw
or
cmc
stos
xchg
push
xchg
pop
loop
fwait
sbb
cmp
or
add
adc
add
ja
add
bound
outsl
pop
faddp
test
dec
lcall
mov
cmp
aas
cmp
jmp
push
push
negb
rolb
mov
int
adc
sub
cmp
and
xchg
cmp
adc
shr
jae
lea
mov
inc
sub
cltd
subb
pop
mov
push
pop
mov
adc
pop
adc
filds
mov
repnz
cmp
fmuls
inc
movntq
sbb
cmc
xchg
adc
or
push
or
and
add
andb
ljmp
and
out
xor
loop
mov
cmp
mov
adc
ret
or
or
xorl
pop
imul
jbe
jbe
sbb
nop
or
sbbb
test
cmc
mov
or
pop
pop
mul
sub
xchg
cli
pop
adc
push
jno
imul
lret
fidivl
pusha
iret
test
mov
xchg
insl
cmp
jl
pop
out
scas
pusha
jecxz
xor
inc
dec
and
sub
jae
pop
ds
and
jecxz
mov
mov
cmp
dec
cmp
enter
cmp
mov
mov
sbb
jne
lret
jo
ljmp
sbb
jb
gs
xchg
xchg
jle
negb
cmpsl
xchg
shlb
mov
lret
jns
mull
xor
pop
and
push
add
push
shll
popf
mov
lock
sub
vmread
cmp
addl
add
int3
xlat
enter
shll
std
xchg
data16
ja
js
jle
js
insb
jmp
jne
in
repz
adc
mov
and
xchg
aas
mov
or
and
scas
adc
dec
sbb
push
dec
mov
xchg
aam
jecxz
ss
outsb
mov
shr
or
sub
icebp
or
jmp
pop
or
pop
push
call
in
sarb
mov
jbe
or
mov
out
movsl
scas
push
ficoml
mov
aas
shl
mov
or
scas
cmpsl
mov
inc
cwtl
iret
dec
dec
cmc
mov
nop
sub
sbb
ficoms
stos
jb
enter
adc
add
call
xor
cmp
lods
add
adc
rclb
shl
clc
jno
and
roll
fsubrl
inc
repz
out
inc
lcall
jecxz
jle
jmp
push
jge
push
push
repz
or
sub
out
jmp
cmpsl
hlt
adc
dec
jle
lock
xchg
inc
js
insb
ss
fcoms
cmp
and
jecxz
pop
jg
fs
ficompl
lods
and
sbb
mov
insl
xor
jmp
pop
mov
stos
xor
dec
fisttpl
imul
dec
inc
add
pop
cmovl
shll
lcall
adc
les
movsb
xor
dec
xchg
pop
mov
scas
xor
jl
push
push
les
xor
mov
add
repnz
dec
fldcw
scas
jg
or
test
inc
cmp
pop
movsb
and
leave
fdivrs
inc
icebp
roll
sub
loopne
arpl
xchg
pop
pop
stc
mov
push
out
fwait
push
jl
adc
js
cmp
pop
jo
mov
cli
in
imul
insb
mov
dec
imul
pop
pop
jmp
div
sub
inc
pop
repnz
in
in
ds
cmc
stc
mov
cmp
cmp
mov
xchg
lret
add
sbb
ja
not
insb
jmp
and
fidivl
pop
insl
and
pop
fisubl
fcmovb
scas
sub
shlb
dec
and
imul
outsb
icebp
mov
xchg
pop
iret
push
jmp
cmpsb
inc
mov
mov
xor
add
mov
mov
mov
mov
jmp
aas
cmp
cmp
sbb
jmp
js
in
js
data16
test
dec
pop
pop
popa
xchg
and
push
xchg
icebp
out
add
lret
in
dec
cmpsl
scas
cmp
pop
repnz
fiadds
sbb
shlb
sbb
cld
mov
test
xchg
loop
aas
and
je
xchg
or
repnz
in
movsl
mov
add
jno
adc
aam
pop
lds
and
jle
lahf
lret
ret
push
out
popf
scas
cmp
or
and
fisubrl
out
or
sti
fstl
movsl
cmp
pop
pusha
add
sbb
pushf
add
mov
icebp
mov
pop
stc
insl
les
xor
jecxz
jg
fnstenv
or
dec
inc
out
push
mov
repnz
aam
cwtl
imul
decl
dec
inc
cs
jno
leave
xchg
xchg
gs
adc
sti
fs
push
jmp
push
sbb
sbb
push
cmpsb
mov
xchg
mov
and
mov
inc
pop
xchg
and
rclb
mov
cs
mov
aas
sub
jp
inc
pop
fisubs
out
leave
call
iret
rorl
sub
sbb
adc
je
xlat
cli
test
sarb
cmc
adcb
mov
or
pop
test
cmp
push
scas
fistps
cmp
sarl
sahf
cwtl
sbb
ficompl
and
add
xchg
movsl
movsb
outsb
stos
std
add
call
adcb
add
stos
push
stc
pop
cmp
bound
push
adc
test
fisubrs
pop
xchg
inc
test
jnp
lds
inc
sahf
xor
jb
push
cwtl
inc
pop
subb
lahf
cmpsb
loope
mov
and
fwait
or
lds
aad
add
push
inc
sub
int3
inc
test
loop
jl
jb
lret
outsl
lahf
lret
incl
stos
pop
push
dec
jl
ss
pop
push
xchg
xchg
mov
jno
mov
das
ss
or
add
data16
xor
mov
mov
mov
mov
jge
xor
add
mov
mov
mov
mov
xor
jmp
cmp
pop
in
inc
mov
jp
js
jle
js
sbb
jbe
or
out
ficoml
enter
push
dec
cmp
cmp
jmp
stos
arpl
inc
scas
mov
sub
fsubs
leavew
popa
adc
mov
fisubrs
cld
push
in
out
jg
repnz
sahf
jae
adc
pop
mov
xor
or
jp
or
dec
jno
scas
shl
es
inc
pop
out
add
in
cmp
inc
add
mov
mov
lcall
icebp
je
cmc
add
subb
dec
dec
loope
xchg
int
inc
add
ficoml
stos
into
in
inc
clc
and
shrl
adc
psllq
fisubs
das
and
fs
add
test
jne
sbb
inc
pop
xchg
andb
fisttpl
stc
mov
lahf
int
push
and
push
push
xor
adc
push
jo
in
xor
in
fldt
mov
and
das
jns
cltd
out
xchg
push
or
push
inc
sti
int3
mov
or
aad
and
mov
sbb
fisubl
sbbl
insl
sub
js
lock
icebp
iret
xchg
sti
gs
mov
jnp
adc
xlat
and
cwtl
add
out
int3
mov
xorb
xor
fcompl
jmp
inc
xchg
mov
mov
dec
and
stc
sub
es
mov
jmp
and
addr16
push
jns
loope
enter
xor
fsubs
in
iret
sti
roll
push
in
es
or
and
adc
movsb
sub
mov
and
xor
adc
xchg
pop
xchg
pop
cltd
mov
icebp
or
xorl
or
adc
cmpsb
and
adc
xor
int
xlat
sarl
xorb
pop
loope
jmp
sub
cwtl
cmpsl
sub
cmpb
mov
sbb
mov
addr16
inc
mov
lods
sub
or
dec
pop
in
push
icebp
push
pop
mov
inc
incb
jge
mov
mov
jmp
enter
cld
imul
nop
inc
js
js
jle
js
and
push
add
xchg
insb
shlb
push
jge
ljmp
xchg
xor
jbe
add
popf
or
out
es
lcall
lea
xchg
adc
push
out
push
mov
fcomps
and
fsubrs
mov
lock
mov
lods
fidivrs
push
insb
and
adc
and
xor
pop
and
scas
das
push
daa
in
mov
add
sub
jg
lods
add
pop
andl
movsb
std
add
mov
cmp
push
shll
ljmp
push
clc
lret
sub
movsl
add
jge
cld
push
add
js
je
and
mov
jne
xchg
or
and
fisubs
lock
xor
mov
jmp
in
pop
and
xor
pop
mov
sbb
push
xchg
icebp
jno
faddp
pushf
insb
ss
stos
cmpsl
shll
cmpsl
hlt
test
cmp
out
cwtl
fisubrl
loopne
mov
xchg
pop
stos
xchg
in
jbe
fldl
xchg
sub
clc
sar
xor
xor
aad
cmp
call
stos
popf
mov
pop
or
and
es
and
out
xor
or
cmp
jmp
mov
imul
mov
or
dec
in
xor
xchg
js
leave
rorl
leave
cmc
jmp
and
xchg
mov
push
stc
xchg
je
clc
jno
xor
mov
rcll
movsl
sarl
sub
xchg
dec
xchg
pop
stos
sahf
aaa
out
adc
add
inc
scas
or
xchg
ss
in
jle
dec
dec
fdivl
jb
cmp
lea
xor
mov
mov
lock
mov
push
dec
movsb
ljmp
push
repz
outsb
rcrl
daa
adc
es
sbb
dec
ljmp
xchg
mov
pop
cmp
in
dec
pop
sub
in
nop
je
jnp
mov
lods
xchg
lock
adc
add
jb
or
inc
sub
xchg
pop
imul
adc
cmp
and
mov
shlb
clc
add
add
jmp
ror
ror
leave
leave
mov
mov
sub
js
jle
js
out
movsl
jp
sub
xchg
clc
push
dec
push
xchg
inc
push
dec
loope
stos
and
inc
das
dec
gs
add
sarb
cwtl
push
in
inc
sub
inc
roll
aas
fimuls
aaa
lods
das
jmp
and
hlt
pop
push
xor
dec
pop
mov
movsb
pop
dec
pop
stc
or
pop
xchg
xor
push
insb
add
mov
cmp
push
ret
dec
lods
push
popf
rolb
lock
loopne
out
movsb
jle
out
mov
cmpl
xchg
rcll
cmp
jne
imul
ljmp
outsl
push
lock
ljmp
mov
dec
mov
daa
sub
and
xor
movb
inc
mov
or
xor
mov
cld
arpl
jg
push
dec
and
dec
xchg
cli
xchg
sbb
and
mov
mov
shrb
rol
jl
int3
push
and
sbbl
pop
xor
flds
int3
rol
push
push
jo
int3
sub
adc
pop
call
rorb
rcr
mov
inc
outsb
cmp
mov
mov
xchg
mov
cwtl
cltd
dec
push
xchg
aaa
push
jge
inc
and
out
dec
loope
xchg
and
pushf
jecxz
fs
imul
mov
mull
mov
lcall
adc
or
js
cmp
mov
pop
adc
shll
aam
xchg
adc
sbb
sbbb
cmc
jp
aad
mov
data16
aad
jno
sbb
cmc
push
dec
or
out
xchg
sub
lock
aas
sub
stos
mov
outsl
lds
fstps
movsl
xchg
ret
rcr
sahf
and
repnz
cmpb
sarl
mov
jp
stos
cmp
mov
sub
and
mov
sub
lock
insb
push
insl
testb
jmp
adc
push
jg
ret
or
fsts
aad
jo
cltd
mov
sarl
ret
popf
push
xchg
into
sbbb
aas
jo
dec
imul
or
popa
imul
add
mov
mov
mov
xor
add
imul
mov
xor
jmp
enter
lret
fxch
flds
xchg
loope
jo
adc
jle
js
cmp
xlat
dec
insl
call
xor
cld
and
xor
scas
cmp
push
pop
lahf
popa
adc
and
dec
lahf
cmp
mov
es
ror
xor
dec
ljmp
pop
sub
jle
scas
mov
jno
lods
iret
adc
adc
in
push
test
aaa
mov
xchg
cmpb
sarl
rol
push
xchg
sahf
pop
inc
data16
xor
jl
fidivrs
pusha
mov
stos
iret
scas
idiv
add
int3
test
shll
mov
test
cmpl
xchg
adc
mov
push
ret
std
lods
arpl
mov
into
pop
and
pop
inc
xchg
or
test
sub
pop
and
xor
inc
bound
mov
adc
cmp
add
and
jecxz
mov
divb
pop
sbb
dec
sbbl
icebp
ret
xchg
out
mov
sbb
ret
adcb
into
mov
sub
nop
repnz
xchg
push
adc
mov
add
mov
xor
dec
gs
jns
incl
xchg
cltd
jmp
dec
lock
mov
inc
xor
fwait
outsl
mov
xchg
mov
lcall
pop
pusha
roll
in
adc
mov
xchg
fdivr
and
lret
and
pop
and
cs
pop
out
js
adc
mov
inc
stc
mov
testl
shll
jb
push
pushf
adc
inc
sti
in
es
in
faddl
or
movl
int
addr16
xchg
mov
iret
jno
sub
jae
or
xchg
hlt
add
or
pop
iret
aam
mov
mov
test
cmp
pop
xchg
cmc
push
inc
and
lea
jno
pusha
int
stos
xchg
insl
dec
cmc
je
mov
mov
enter
xchg
xchg
cmpsl
mov
out
or
pop
stos
xor
arpl
ret
in
call
rcll
push
aam
or
mov
add
xor
inc
lock
shlb
jnp
xlat
orb
cmp
xchg
in
jns
sub
mov
mov
xor
add
jmp
ror
iret
aam
insl
js
test
aam
add
jg
in
js
mov
int3
inc
movsl
mov
lret
scas
ss
int
mov
and
cmp
fcoms
pop
dec
xchg
adc
adc
stos
negb
mov
pop
jns
add
mov
in
ss
sbb
sub
jle
or
mov
aaa
mov
mov
lods
test
stos
push
je
or
enter
dec
push
es
fxch
incl
jmp
adc
repnz
in
fsubrl
cmc
test
into
or
mov
pusha
add
add
out
sbb
or
mov
jne
add
addb
and
insb
fstpl
mov
mov
push
sbb
adc
mov
orb
stos
jns
sub
lds
push
nop
lds
rcrb
ss
cmpb
push
and
jg
fcoms
pushf
repnz
sbb
lds
lods
shll
or
lret
scas
cmpb
mov
andb
xchg
repz
add
mov
xlat
fcoml
in
icebp
dec
rcl
add
aad
stos
ljmp
stos
lret
js
adc
in
cltd
lahf
push
sub
cmp
cmp
push
pop
or
dec
and
push
dec
dec
sbb
out
jae
adc
pop
and
in
ljmp
popf
mov
dec
ret
adc
cmp
lods
sarl
push
nop
sub
fwait
inc
lcall
in
add
bound
mov
adc
mov
mov
pusha
push
xchg
cltd
movsl
xor
xorl
push
jnp,pn
pop
mov
jle
imul
scas
mov
in
jno
fwait
outsb
or
mov
cmp
or
leave
out
mov
push
mov
mov
xor
in
jae
and
loopne
adc
shlb
push
shl
add
adc
cmp
in
jo
sub
adc
dec
lea
push
rcl
pusha
xor
xor
sub
vmovmskps
xchg
outsl
xchg
into
out
in
add
pop
mov
cs
stc
pop
sub
into
cmp
mull
test
mov
addl
movsb
inc
sbb
mov
inc
pop
imul
mov
jmp
rol
leave
rcr
rcr
enter
jne
rclb
jg
in
js
stc
or
push
fcmovnu
sbb
insb
push
jp
aad
sbb
lods
mov
mov
nop
cmpsl
dec
and
ret
iret
lret
cmp
in
cwtl
and
in
into
fiaddl
xchg
xchg
sbb
inc
cmp
movsl
xchg
mov
push
test
lret
adc
xor
sub
adc
mov
test
mov
repnz
cmp
jecxz
jge
inc
imul
xchg
or
xlat
inc
dec
sti
push
leave
fucomp
inc
mov
fdivrl
or
or
inc
mov
dec
cltd
mov
insb
iret
hlt
jle
scas
fs
adc
pop
inc
icebp
xchg
cmp
or
and
std
or
jecxz
xor
dec
rcrl
and
sarb
mov
dec
pop
mov
push
push
mov
push
push
test
loopne
sti
out
es
push
pusha
push
movsl
xchg
inc
mov
outsl
jle
sahf
jle
jnp
add
shrl
mov
clc
xchg
and
dec
fwait
stc
cmp
adc
dec
in
icebp
and
mov
scas
pushf
mov
sub
mov
cmc
outsl
call
scas
je
in
lahf
rcll
add
mov
cmp
adc
arpl
lods
dec
hlt
nop
insl
mov
clc
xor
jmp
sbb
outsl
loop
inc
add
in
add
jle
push
orl
in
cmp
in
dec
add
mov
imul
fiadds
daa
sub
mov
jae
es
adc
ja
inc
cmp
sbb
in
roll
xor
loope
adc
push
dec
leave
inc
fstl
vaddss
rcr
arpl
jle
aas
cmpsb
mov
loope
scas
push
mov
js
xchg
mov
insl
ljmp
js
mov
and
mov
jbe
sbb
rol
sub
push
push
mov
dec
lds
mov
push
lcall
xor
sahf
in
js
or
das
or
xchg
xchg
push
xchg
pop
xlat
subl
jae
in
push
aam
ss
jnp
loope
xor
jmp
les
int
aam
mov
xor
js
jle
js
ja
sbb
xor
sub
jo
pop
push
cmp
mov
xchg
je
imul
add
lret
insb
inc
movsl
in
in
and
scas
loope
in
sub
cli
jbe
into
mov
dec
pusha
dec
dec
lods
sahf
pop
cmpl
push
inc
and
xchg
cwtl
aaa
clc
andl
mov
dec
rcl
fdivp
outsl
bound
mov
cmp
test
adc
fisttpl
or
mov
inc
int
cmp
pop
popf
add
in
lahf
addl
inc
lock
sub
scas
push
push
in
ret
rcll
loope
mov
xor
dec
addl
push
arpl
pop
mov
sbb
add
pop
imul
or
jmp
out
dec
out
aam
and
inc
fsubs
or
sub
adc
and
out
pusha
stos
jb
fwait
movsl
out
jns
sub
inc
push
adc
cmpsl
rcl
loop
xchg
ds
enter
dec
mov
shll
call
push
and
mov
and
je
pusha
xor
mov
sub
out
mov
jno
clc
mov
cli
push
adc
test
fs
test
sub
jp
cmp
ret
push
sbb
xor
outsb
push
dec
gs
repz
push
bound
out
fs
pop
rcll
push
and
fadds
fwait
xor
sbb
ja
pop
leave
sahf
and
jp
jne
jg
xchg
and
notl
xor
cmp
enter
sub
and
int
pop
nop
xor
adcl
or
loop
mov
call
sub
mov
jp
or
jbe
push
or
push
insl
mov
inc
mov
pop
mov
sbb
jne
inc
lods
nop
push
cmc
mov
xchg
outsb
pusha
insb
in
pop
add
jg
adc
sbb
inc
sbb
in
sub
pushf
sub
mov
sbb
lods
adcl
test
cld
jge
lds
jl
lcall
pop
cltd
push
sbb
jo
sub
mov
pop
lret
scas
orb
mov
sbb
call
mov
add
cli
jbe
mov
mov
xor
add
jmp
vpmovmskb
fcmovnu
addl
dec
rorl
js
jle
js
data16
fucomi
pop
in
xchg
icebp
xor
mov
dec
xorb
hlt
stc
insb
dec
sbb
roll
sbb
mov
fidivrl
in
jb
fmuls
jle
cmp
pop
and
cmpsl
mov
jb
or
xchg
or
jns
stos
sub
js
pop
stc
call
add
adc
sbb
in
rorb
inc
data16
xchg
xor
sbb
jae
rcr
out
es
xchg
or
enter
sti
movsb
sub
dec
andb
mov
sub
bound
mov
or
sub
jo
les
mov
adc
xor
scas
out
mov
movsl
xchg
mov
iret
sub
add
mov
sub
shlb
xchg
dec
daa
add
mov
add
jo
pop
xor
in
ret
fdivrs
jecxz
inc
js
dec
es
inc
xchg
xchg
push
push
lahf
xchg
int3
popa
out
and
hlt
pop
cmpb
ljmp
add
jp
insl
mov
pop
sbb
scas
inc
aam
inc
mov
pop
je
mov
push
cld
dec
push
daa
movsb
orb
add
jbe
xor
rcrb
mov
dec
shr
inc
rol
fwait
fs
sbb
mov
jle
arpl
pop
stos
in
cli
lods
adc
cmpl
xchg
lahf
ljmp
inc
add
adc
imul
icebp
aam
addr16
shl
jnp
movsb
jp
dec
fs
sbb
repnz
xchg
or
pop
mov
movsl
cld
xor
mov
ljmp
divb
das
lret
pop
jmp
insb
lea
ds
and
insb
and
addb
repnz
pushf
hlt
negl
xor
mov
into
shrl
and
xlat
nop
pop
pushf
pop
popf
dec
sbb
mov
xor
out
jecxz
adc
icebp
add
sub
loop
or
sbb
cmc
ds
mov
test
sbb
pop
les
jmp
add
push
test
inc
jecxz
addl
jge
jmp
lret
ret
vpand
ret
addb
jg
in
js
jb
jg
or
xchg
dec
stos
fists
rolb
repz
jg
cmp
leave
jecxz
fmul
es
sti
inc
mov
test
mov
int3
jo
int
push
add
insl
je
push
imul
cmp
leave
inc
std
mov
or
sub
imul
adc
push
in
je
cmp
add
in
mov
adc
push
mov
ficoms
jecxz
pop
std
and
lods
jb
into
mov
filds
roll
and
fs
xor
ds
add
jo
addl
dec
out
jns
das
sbb
rcl
jno
fs
pop
xchg
in
je
cmp
adc
nop
xchg
adc
fiadds
or
pop
and
cld
dec
sub
mov
jae
xchg
mov
xor
jmp
fsubrs
in
int3
xlat
lret
mov
xchg
lods
jnp
pop
push
cmp
icebp
sub
xor
pop
push
jle
and
stos
out
int
sub
cmp
test
out
cmp
out
sub
popa
pop
inc
loop
js
fucomi
insl
les
cmp
jne
pop
xor
in
push
adc
ret
mov
outsb
lahf
xor
test
sbb
inc
cmp
mov
xor
pop
xchg
shlb
lret
fucom
cltd
fdivrs
fcomip
xor
pop
push
sti
add
ret
rol
xlat
inc
fnstsw
roll
iret
nop
sahf
cmp
ja
push
lret
addb
ror
divb
inc
and
mov
push
arpl
mov
insb
adc
loopne
into
rol
lret
pushf
pop
jmp
in
add
std
hlt
in
int
pop
xor
sbbb
mov
add
sub
add
xor
mov
jge
jno
jbe
out
inc
push
inc
jg
incl
icebp
cmpl
xor
loope
jmp
mov
jnp
jmp
aas
push
sub
loop
into
cmpsb
stos
sub
ss
sar
adc
xchg
mov
pop
pop
cmp
shr
mov
out
cwtl
cmc
xor
imul
clc
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
jmp
rcl
aad
leave
xor
sbb
js
jle
js
pop
and
add
xorb
dec
add
jle
ud2
push
es
lcall
loopne
pop
in
pop
aad
ficomps
and
repz
movsb
pop
hlt
xor
push
mov
xor
out
add
popf
inc
xchg
and
insl
pop
or
sub
xchg
xchg
lds
lds
mov
cmpsb
aaa
push
or
das
mov
shl
out
cmpsl
arpl
adc
jecxz
js
add
pop
or
push
mov
or
mov
sbb
inc
push
pop
sub
daa
push
sbb
test
addr16
shll
jp
add
movl
in
sbb
movb
mov
mov
jbe
xchg
mov
inc
scas
sub
push
sahf
stc
and
sbb
mov
ljmp
je
xor
lock
icebp
aad
cli
and
stos
daa
xchg
frstor
cld
mov
sub
mov
addr16
and
push
add
mov
push
lods
popa
aaa
aas
or
mov
gs
out
test
leave
movsbl
arpl
addr16
enter
out
daa
fxch
cmc
pop
ljmp
inc
mov
fs
ja
sbb
inc
or
ret
lods
jge
jns
xor
pop
xchg
cld
verr
lock
fstps
ret
lods
push
ja
cmpsb
sbb
xor
mov
out
stos
mov
movsb
cli
or
xchg
pop
imul
lods
rcrl
or
push
clc
push
push
and
cmp
xchg
inc
mov
or
mov
arpl
out
inc
mov
addl
mov
xchg
xchg
stc
mov
addr16
into
and
pop
inc
mov
xchg
lea
and
mov
adc
xchg
jo
pop
sarb
sahf
js
lods
cli
popf
test
push
jb
pop
and
ljmp
ljmp
xor
or
jnp
push
and
pop
add
lret
pop
fwait
push
mov
dec
pop
sbb
pop
sub
xchg
cmp
gs
sbb
in
mov
adc
inc
lcallw
xor
add
imul
cmp
jmp
int
cmp
int3
leave
aad
xchg
mov
dec
out
xchg
cmp
jle
js
pop
adc
or
gs
ret
insb
push
pop
jae
std
cmp
mov
movsl
push
ficomps
add
lcall
imul
loop
pop
dec
and
lahf
mov
inc
cmp
adc
fdivrs
clc
lods
jbe
fimuls
inc
sub
lret
adc
pop
xchg
pop
xchg
mov
mov
sub
lods
sub
lret
cmp
ds
loope
nop
add
jp
and
add
jl
pusha
push
mov
lret
add
lock
jo
lods
jnp
add
sub
ret
inc
sbb
je
pop
sub
mov
pop
jae
mov
aam
lret
add
fdivs
mov
xor
mov
or
sub
or
mov
sub
outsb
loopne
xchg
sub
js
repnz
fistpl
adc
sub
mov
gs
je
lds
outsl
and
xchg
into
lods
test
mov
mov
push
mov
push
and
fcomi
arpl
push
fs
cwtl
shll
sbbl
jp
shr
fwait
dec
mov
sbb
sub
sub
rorl
mov
mov
sub
mov
vfmsub213ps
adc
jo
insl
fsubs
inc
loope
sbb
popf
call
mov
shlb
retw
test
pop
pop
lods
lods
stos
add
pop
xorb
adc
pop
push
push
dec
fcomps
iret
xor
mov
add
fldl
icebp
xor
mov
inc
mov
push
xor
sub
cmpsb
push
jb
pop
adc
dec
xchg
and
out
mov
xor
addb
sub
push
mov
mov
rorl
jg
sbb
xor
in
xchg
mov
mov
sub
scas
mov
xor
loopne
int
ja
cli
dec
out
xchg
jle
cmp
sub
sbb
scas
pop
lret
mov
xchg
in
sbb
mov
or
xchg
lcall
leave
ret
push
mov
sub
movzwl
xor
push
andl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
call
jmp
push
xor
add
push
push
xor
pop
or
xor
sub
mov
div
push
sbbl
call
movl
inc
movl
cmp
jb
movl
incl
movl
lea
inc
mov
andl
lea
xorl
mov
or
mov
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
andl
mov
xor
xor
xor
mov
sub
add
mov
mov
mov
movzbl
cmp
mov
mov
mov
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
or
mov
xor
xorl
add
addl
imul
movl
mov
movl
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
movzbl
xor
mov
xor
add
and
mov
negl
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
not
add
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
add
mov
mov
xor
xorl
add
movl
cmp
movl
jne
movl
push
subl
pushl
pushl
subl
call
mov
mov
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
jmp
or
mov
mov
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
adc
mov
movl
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
and
mov
mov
andl
mov
addl
xor
xorl
xor
add
mov
xor
orl
xor
add
lea
movl
mov
movl
cmp
ja
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
call
cmpl
jb
sbb
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
into
int
rol
shl
out
stc
daa
inc
outsb
loop
adc
xchg
jle
js
mov
insl
mov
jno
sbb
xor
inc
and
cmp
lea
sub
push
cwtl
inc
xlat
test
xchg
test
pusha
nop
addr16
mov
adcl
imul
test
std
mov
jmp
fcoms
aas
lds
rcrl
mov
js
xor
loope
outsl
aas
mov
mov
movsl
adc
gs
inc
scas
arpl
repz
addl
lret
test
hlt
mov
or
or
scas
sbb
dec
push
out
adc
ret
xchg
xchg
push
jbe
cld
into
dec
rcrb
cmp
xor
push
ficoms
mov
mov
gs
hlt
sub
xchg
mov
mov
lds
iret
shll
ficomps
je
mov
add
push
dec
aam
sbb
cwtl
out
jecxz
xchg
outsb
and
push
mov
test
push
into
mov
movsl
movsl
mov
popa
xchg
int3
inc
pop
mov
jg
sbb
lods
xor
addr16
and
xor
xchg
mov
test
xlat
add
loope
pop
aas
stos
push
adc
mov
je
push
push
dec
cwtl
in
bswap
inc
sbb
xchg
xchg
pushf
mov
stos
inc
mov
push
stc
fwait
cmp
notl
or
test
inc
mov
xchg
imul
cmp
add
lcall
stc
push
fwait
cmp
and
in
andb
add
sti
cmpsb
jg
dec
fmul
pop
lret
loop
sub
ja
insl
repz
jp
outsl
cmp
or
sbb
aas
xchg
sbb
nop
and
loop
pushf
sbb
sbb
ss
add
jmp
inc
push
mov
jge
outsb
fistpl
mov
aad
mov
lret
cmc
sub
ds
bound
in
incb
push
push
andl
add
int
popa
imul
mov
lock
adc
js
xchg
inc
mov
aas
aas
adc
cltd
sub
push
push
cmp
mov
sbb
pop
xchg
or
test
mov
in
xchg
ds
fisubrs
shll
dec
add
inc
push
push
movl
mov
movl
movl
mov
push
jmp
lret
xlat
fcmovnbe
lret
test
pop
xchg
fimuls
adc
js
jge
jmp
mov
sub
adc
xor
int
mov
dec
fidivrl
loop
mov
xchg
out
xchg
lods
leave
sub
ds
jecxz
insl
ficoml
pop
add
js
mov
adc
mov
xchg
and
inc
jbe
mov
ficompl
pop
pop
and
outsb
in
mov
or
mov
iret
fadd
frndint
jb
lahf
sbb
xchg
sub
mov
mov
xchg
sbb
cli
jl
js
add
xchg
sub
sbb
jp
popf
loope
stc
das
es
sbb
in
or
lea
and
imul
imul
pop
pusha
and
pushf
sbb
mov
ret
inc
pusha
stos
in
and
dec
sarl
imul
push
stos
mov
adc
addr16
fucomp
call
loopne
test
cli
mov
out
adc
or
shlb
popa
xchg
push
add
das
subb
dec
sub
int3
inc
add
fnstenv
inc
ljmp
cmc
fldenv
push
scas
mov
adc
xchg
pop
jg
ljmp
sub
dec
sbb
add
and
es
es
nop
fnstcw
imul
mov
jmp
inc
clc
bound
pop
outsb
jbe
lods
shl
mov
mov
idivl
cs
test
gs
fwait
adc
bound
and
mov
mov
mov
inc
shll
js
jbe
push
decl
xchg
sub
add
and
std
mov
outsl
test
dec
aam
jg
pushf
in
cmpsl
or
insl
mov
xor
adc
lds
in
mov
out
push
sti
or
cmp
mov
mov
sub
and
aas
fs
cld
and
popf
nop
hlt
in
roll
cmpsl
push
lods
scas
test
rolb
lahf
das
int
lret
inc
int
bnd
mov
lea
sub
dec
popf
or
add
out
cmp
lods
jmp
movsl
jbe
or
outsb
lret
ljmp
or
and
push
jle
inc
or
lds
xchg
dec
xchg
aad
lock
push
sbb
sbb
sbb
clc
movl
mov
mov
push
mov
mov
mov
cmp
movl
je
mov
mov
xor
subl
add
cmp
je
jmp
into
xlat
ror
aad
rcr
stos
imul
xor
dec
insb
daa
sbb
xchg
jle
js
fistpl
aas
or
cld
jae
add
aad
cmp
add
jg
push
push
icebp
adc
push
add
jp
das
jno
fwait
cmp
lods
lahf
pop
int3
aaa
sub
push
inc
cmp
das
jg
and
or
mov
fwait
push
movsl
stos
test
jp
stc
pushf
outsb
add
mov
testl
daa
or
les
pusha
sub
mov
sbb
push
mov
jns
or
or
jecxz
loope
imul
movsb
dec
cli
inc
and
sub
push
jl
mov
in
shrl
enter
aaa
pop
add
mov
push
add
xor
jb
fmuls
popf
cs
shl
add
add
iret
jecxz
rcrb
inc
push
pop
and
test
les
xchg
enter
lahf
das
dec
push
mov
ljmp
leave
dec
and
pop
hlt
dec
ds
aad
push
cli
mov
xor
jns
or
cld
pusha
inc
push
and
fists
hlt
sbb
and
or
ja
adc
push
stos
cmp
or
sti
es
add
dec
or
fcomps
fstpl
ljmp
out
cmpsl
mov
bnd
or
push
in
xor
pop
push
js
andb
xchg
aam
push
fcmovne
mov
pop
push
ja
lret
inc
imull
mov
sbb
addl
fwait
mov
hlt
pop
mov
add
push
movl
aaa
sbb
cltd
icebp
cmpsl
or
pop
int3
cmp
daa
mov
add
mov
cs
fdivp
mov
push
call
insb
out
jns
psubq
xor
xchg
or
or
ret
clc
xor
lock
pop
pop
test
xchg
add
sub
sbb
push
cmpsb
and
fwait
aas
mov
or
pop
je
push
cmp
icebp
push
xchg
inc
mov
push
inc
ds
cmp
mov
adc
cmpsb
loope
movsl
lret
aam
add
add
sti
fcomp
xor
mov
popf
adc
aas
dec
movsb
fisubrs
out
roll
inc
adc
xor
hlt
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
push
pushl
pushl
mov
addl
jmp
ret
leave
leave
leave
lret
add
movsl
mov
jle
js
mov
sahf
lds
mov
mov
jae
push
or
imul
clc
push
add
daa
sub
mov
pop
mov
aas
ljmp
sub
popf
ja
shr
push
cmp
rclb
repz
aas
xor
and
mov
stos
dec
sbbb
pop
mov
pop
mov
push
add
dec
pusha
mov
shll
and
push
push
pop
sub
lahf
adc
add
aaa
cld
jmp
sbbl
test
lret
pushf
in
insb
pop
pusha
adc
pop
jns
inc
stc
dec
les
sub
sbb
xchg
out
or
pop
out
pop
mov
imul
pop
jae
lods
push
scas
inc
ljmp
jb
std
xchg
pop
mov
loope
ljmp
fs
lock
pop
push
pop
outsl
or
cmc
sbb
mov
xor
xorb
lret
mov
pushl
inc
call
out
xchg
and
icebp
popa
inc
sbb
rcll
mov
mov
xchg
out
data16
cmovns
cmp
outsb
dec
out
shlb
out
lds
aaa
std
sub
nop
inc
push
pop
add
mov
inc
hlt
sub
pop
rcrl
xor
es
repz
in
addl
sub
arpl
xor
pop
sbb
inc
push
pop
scas
and
push
push
stos
shll
rcll
subl
clc
addr16
jmp
adc
sbb
add
lahf
mov
into
sbb
mov
out
sbb
cmp
xlat
xor
das
jle
push
add
int
into
add
inc
and
jno
aam
pop
pop
xchg
into
call
icebp
and
or
sbb
fisttpl
mov
dec
jne
mov
sahf
cmpsl
loop
sahf
aam
push
and
fisubl
pop
push
leave
mov
mov
pop
mov
xchg
inc
xor
cwtl
enter
shrl
scas
addb
push
aad
cli
mov
dec
les
inc
psubusw
mov
push
lods
les
cmp
test
dec
and
or
fistl
dec
outsb
xchg
push
add
cmpsl
cmpsb
mov
add
call
ficompl
std
inc
dec
cmpl
xchg
push
inc
std
fisubl
call
mov
mov
jmp
ret
int3
int3
aad
leave
roll
push
fstps
js
das
fadds
sbb
mov
movsb
je
sbb
popf
ljmp
cld
xor
subb
les
add
jl
pop
mov
scas
pop
or
push
jge
cmpsb
add
mov
pop
mov
cmp
dec
js
add
xchg
push
xor
mov
pop
mov
int3
repnz
and
dec
iret
test
cltd
out
mov
dec
lea
jle
out
sbb
ja
repnz
icebp
sub
mov
xchg
mov
xchg
mov
inc
push
pop
cli
movsb
popa
scas
add
das
mov
cli
lods
int3
mov
lret
xor
dec
and
add
xchg
das
jle
je
add
cmc
int3
rorl
add
fdivrl
push
test
xchg
and
pop
pop
inc
pusha
inc
lcall
jp
lahf
jge
aam
idivb
in
jno
push
sbb
fildl
xchg
lret
loope
test
jp
pop
movl
sbb
scas
scas
cwtl
das
std
pop
outsl
push
clc
fiadds
scas
imul
mov
daa
pop
mov
inc
add
loopne
jns
lock
icebp
les
fnstenv
mov
popa
xor
fidivrs
fcmovnu
sahf
mov
pop
lods
sbb
jne
das
push
shrl
enter
push
add
bound
addb
sub
outsb
push
scas
in
jecxz
adc
mov
xchg
push
data16
fildl
fimuls
pop
add
mov
loop
das
mov
sti
sub
sbb
ss
push
mov
fiadds
cmpsl
shrl
ljmp
jle
jb
sahf
push
push
nop
rclb
sbb
add
lahf
mov
cld
add
sbb
adc
icebp
xchg
imul
repnz
rcl
jnp
loopne
imul
pushf
call
sbb
mov
addl
mov
cmp
fidivrs
hlt
or
pop
inc
lret
ffreep
xorl
daa
inc
xor
dec
imul
sub
dec
push
push
adc
fnstsw
mov
mov
xor
mov
daa
jp
inc
sub
imulb
fs
adc
nop
ret
mov
repz
mov
mov
jmp
jmp
ds
int3
lret
xchg
aam
jle
inc
aas
jbe
jg
xchg
jle
js
lret
sub
rcll
test
push
push
jp
ja
mov
jnp
push
mov
inc
fisttps
xor
xor
jno
mov
je
pop
mov
jbe
jne
cmp
fcompl
idivl
jge
int
sbb
xor
and
pop
jno
push
xchg
or
mov
fmull
inc
je
push
repz
out
inc
dec
sbb
xchg
arpl
sub
lds
mov
shlb
add
jg
and
pop
stc
fs
xor
jl
insl
rcrl
sbb
mov
pop
pusha
pop
xor
addl
stc
dec
inc
insb
mov
in
sub
bound
in
mov
popf
xchg
xchg
cmp
bound
ficoms
cld
fdivrl
cmc
mov
loopne
test
jbe
scas
aam
inc
vpmuludq
jg
pop
adc
mov
xchg
sbb
or
push
pushf
jno
in
call
addl
mov
xor
lcall
add
push
out
ljmp
push
mov
xor
loopne
add
aad
adc
push
lretw
xor
dec
xchg
mov
dec
xchg
jb
movsl
mov
jecxz
push
inc
inc
pop
testb
stc
imul
pop
ljmp
jecxz
jno
xchg
dec
iret
fisttpll
aaa
mov
clc
clc
cmp
jle
stc
fcomps
movsb
rolb
fisubrs
fwait
jbe
xchg
adc
jo
mov
adc
imulb
mov
inc
ret
andl
es
mov
sbb
mov
imul
jg
ds
dec
add
cld
dec
and
repz
jg
mov
out
jl
iret
dec
insb
cmp
cs
xor
and
aas
shufps
into
pop
xchg
mov
in
jp
push
setno
push
sqrtps
ret
jnp
call
daa
cmpsl
pop
mov
dec
stc
xchg
es
or
mov
mov
add
fmuls
adc
scas
scas
out
sbb
or
sbb
pop
jle
dec
dec
mov
inc
imul
aaa
gs
les
fstps
mov
mov
pushf
pop
in
push
dec
in
pushf
sub
mov
xorl
testb
sahf
rol
sbb
jmp
rol
iret
fcmovbe
fcmovne
mov
leave
inc
xchg
and
xchg
jle
js
bswap
mov
adcl
bound
push
stos
mov
outsl
outsl
inc
cld
mov
popa
sbb
add
xor
inc
popf
xchg
jns
pop
jo
daa
ret
add
cmp
cmc
inc
xchg
int
mov
cmpsb
scas
insl
xor
loop
mov
lock
mov
repnz
push
daa
rcr
push
imul
pop
fisubrl
xchg
xor
adc
add
mov
rcll
xor
idivb
inc
cmpsb
sub
push
xor
add
sbb
mov
enter
sbb
push
clc
sarb
sub
jns
xchg
adc
decb
dec
jb
ss
mov
imul
sub
push
dec
aaa
gs
inc
negl
ret
xor
fistpl
stos
mov
xchg
ds
xor
cmpl
imul
js
jp
and
sub
daa
aaa
lock
mov
mov
jmp
repz
andb
push
addr16
pop
and
dec
rcrl
and
cli
orb
std
xchg
push
imul
iret
sbb
mov
pushf
sub
shrl
call
adc
hlt
mov
mov
repz
repnz
inc
or
inc
xor
loopne
lea
leave
xchg
lret
into
sub
xchg
add
lahf
ret
hlt
shrl
call
push
or
mov
cli
cmp
sub
psadbw
mov
testb
cld
cltd
shrb
fwait
rolb
shll
cmp
stc
jo
mov
mull
pop
pop
sbb
mov
xor
inc
iret
xchg
mov
jne
sub
xchg
popa
adc
adc
sub
xchg
fsubrs
inc
test
movsb
dec
push
lock
dec
and
enter
pop
repnz
xlat
add
jbe
int
test
andb
push
cmp
sub
add
cmp
ret
jbe
and
fists
and
inc
cmp
push
pop
pop
cltd
xchg
sub
es
adc
and
jecxz
xchg
jns
rcrl
pop
mov
push
inc
shlb
push
insl
subb
or
or
imul
push
test
push
pop
imul
push
add
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
jmp
xlat
cmp
fcmovne
push
lcall
sub
js
and
jno
ja
xchg
pop
push
nop
repz
jle
or
out
fwait
pop
inc
inc
addb
loopne
insl
push
jmp
mov
sub
xchg
jbe
pop
js
loop
mov
lock
mov
pop
sbb
nop
bound
and
mov
je
mov
pop
fwait
and
mov
cmc
push
mov
push
imul
aas
insl
stc
add
mov
and
cmp
ds
jae
mov
xor
rorl
mov
in
ret
lcall
imul
mov
and
mov
xchg
loopne
or
adc
pushf
mov
daa
icebp
dec
or
sbb
add
out
out
insb
sub
popa
in
jno
fwait
lret
mov
loopne
and
arpl
arpl
lret
jmp
arpl
or
mov
out
mov
add
ss
pop
add
aam
xchg
mov
dec
movsb
push
dec
mov
pop
out
movsb
shrb
pop
push
dec
or
aam
and
aas
stc
shlb
jb
push
jle
mov
je
gs
lea
pop
imul
inc
pop
adc
cltd
mov
inc
stc
inc
sub
jecxz
adc
cmp
jo
lahf
jp
pop
cmpsl
and
dec
test
xor
mov
scas
in
pop
rcll
fcomip
sarl
pop
repz
inc
and
ss
pop
jo
push
daa
inc
andb
dec
insb
std
cmpsl
add
sbb
adc
cmpsl
fdiv
fistl
out
xor
sub
mov
xor
sub
mov
mov
push
gs
fisubrl
gs
xchg
fs
jge
pop
cwtl
aad
sub
popa
and
and
jno
push
pop
inc
rcrl
rolb
mov
jns
sub
sbb
adc
mov
push
push
jmp
test
inc
sub
push
daa
repz
outsb
scas
push
and
mov
xchg
sti
out
xchg
and
gs
mov
scas
xor
mov
stos
stos
jne
sar
mov
rep
jo
addb
jo
inc
dec
popl
and
lret
out
mov
xchg
jg
mov
cmp
int3
mov
insl
call
push
ds
mov
jmp
ret
xlat
leave
rcr
rcr
xlat
cmp
out
inc
sub
xchg
jle
js
test
xor
inc
idivb
cld
inc
or
inc
aam
push
int3
loopne
test
fnstcw
out
mov
push
inc
cmc
jne
adc
mov
pop
jp
pop
sub
pop
add
sbb
sbb
or
test
cmovns
mov
imul
and
clc
leave
xor
imul
fldenv
lods
fcomi
sub
std
test
xchg
jnp
ficompl
mov
push
pop
sub
push
mov
mov
inc
cmpsl
pop
pushf
hlt
lret
xor
mov
xchg
add
enter
push
cld
adc
lcall
xchg
jo
mov
into
int3
adc
insl
int
outsb
clc
mov
lcall
xchg
push
pop
push
mov
jmp
mov
pop
inc
cld
sub
in
mov
push
ret
in
cld
push
push
mov
sti
js
push
test
push
jl
iret
jae
imul
pop
mov
sub
dec
xor
cmp
cmp
ja
mov
lods
jmp
fs
outsb
test
imul
cmp
imul
sbb
xor
add
or
in
mov
pop
xchg
inc
xor
mov
mov
cmp
lods
mov
sti
pop
or
scas
jne
xor
cltd
cwtl
lret
dec
in
jg
fcoms
mov
in
jae
cmp
loopne
out
jge
and
sbb
icebp
xor
addl
shlb
ds
sub
test
ds
andl
mov
add
shlb
fdivl
sbb
mov
xlat
mov
jge
cmp
mov
js
pop
addr16
call
nop
ja
jle
orl
push
inc
sub
sbb
mov
jb
shlb
mov
or
das
xchg
xlat
int
inc
frstor
repnz
and
pop
shlb
jnp
aas
mov
xor
ds
int
mov
xchg
cmpsb
mov
cmpl
imul
arpl
ret
in
out
cltd
mov
push
and
adc
addr16
mov
mov
push
jnp
arpl
jne
pushl
call
mov
xor
pop
jmp
rcl
rcl
rcl
and
shrb
sub
xchg
jle
js
dec
insl
mov
dec
or
fistpl
clc
push
js
mov
sub
loope
aam
imul
rcrl
adc
pop
inc
lock
lods
in
xchg
jge
sbb
je
or
fwait
cmpsb
add
cmp
lds
xor
mov
movsb
xor
mov
repz
loopne
jns
in
out
fs
movb
sahf
mov
jno
lock
adc
int
xchg
adc
sbb
add
xor
repnz
jl
shrl
sti
dec
push
and
mov
xchg
outsb
mov
add
add
mov
xchg
loopne
xchg
pop
adc
or
sub
cmp
lcall
pop
scas
pop
sub
add
push
or
andl
icebp
test
jbe
adc
test
add
lea
hlt
out
mov
das
inc
ret
test
inc
pop
fimuls
xor
lods
jnp
popa
clc
xchg
mov
stc
and
jbe
in
cltd
ret
loope
int
mov
adc
push
jmp
fwait
sbb
inc
int3
push
xor
push
fadd
sbb
mov
fists
cmc
mov
pusha
data16
and
jnp
jle
push
or
fiaddl
add
lret
adc
push
push
stos
mov
leave
fisttps
adc
cmp
push
push
loope
imul
cmp
xchg
inc
pop
fsubrp
cmpsb
rorb
loopne
jne
inc
and
iret
add
ljmp
inc
test
adc
pop
mov
je
cs
cmc
shl
clc
stos
mov
cmp
or
inc
mov
loopne
pushw
jg
ljmp
mov
and
jmp
rorb
icebp
in
jmp
lock
sarl
lret
mov
cmp
xchg
fildll
pop
stos
std
add
adc
imul
addr16
sub
inc
push
lock
jns
add
out
adc
and
rcrb
cmp
scas
ja
outsb
inc
cs
pop
push
repnz
dec
cmpsb
inc
inc
pop
lock
inc
jne
inc
dec
fwait
jmp
les
popf
int3
mov
xorb
lods
sbb
mov
mov
sbb
inc
js
or
out
push
push
cmp
mov
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
dec
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
mov
mov
add
xor
cmp
jne
mov
mov
jmp
ror
xlat
cmp
jns
sub
inc
mov
js
jle
js
lods
insb
into
add
or
aaa
jb
and
or
sbb
and
aas
jmp
push
dec
or
push
xchg
jg
push
lds
mov
lods
and
es
xor
jns
push
cmpb
xor
xor
or
into
aam
sub
xor
in
mov
cmpsl
dec
les
and
out
bound
shl
fldcw
jne
bound
test
pop
fisubl
inc
inc
aas
icebp
push
mov
cmp
cmp
jae
xlat
ror
scas
sbb
loop
ret
cmp
mov
negb
shlb
mov
int3
lock
andl
mov
pop
mov
mov
pusha
loopne
push
add
mov
xor
cmp
flds
mov
aad
sbbb
push
sub
enter
pop
out
outsb
stos
cmp
xchg
sbb
push
not
aam
fsubr
and
nop
int
addr16
mov
imul
xor
mov
or
jno
inc
out
push
jp
outsb
xlat
xor
aas
add
pop
jl
jnp
jg
scas
sub
lea
or
add
pop
fstp
inc
mov
imul
in
push
inc
inc
push
aam
cld
in
nop
adc
outsl
jg
imul
push
push
subl
adc
scas
pop
popf
adc
lods
mov
arpl
leave
adc
add
dec
roll
icebp
push
aad
mov
jmp
mov
inc
cmp
repz
sbb
sbb
sub
adc
and
cmc
add
into
test
fcomi
push
fwait
sbb
sbbl
sar
jns
xor
dec
push
add
or
prefetchwt1
or
mov
add
jmp
cmp
aad
aad
popa
adc
adcb
add
jg
add
jnp
add
je
push
in
xchg
mov
stc
xchg
mov
pop
add
in
mov
jp
mov
stos
cmp
mov
stos
rorw
ret
rolb
pop
and
sub
shr
scas
sbbl
imul
frstor
enter
push
rcrb
and
dec
and
test
push
adc
adc
or
lods
inc
pop
cmp
jns
and
rorl
jno
pusha
insl
cmpsb
pop
in
mov
mov
jmp
inc
xchg
xor
lret
pop
push
test
or
repnz
jbe
and
adc
jne
mov
iret
push
sbb
dec
into
mov
push
mov
loope
lcall
ret
gs
cmp
or
js
jle
cmpsl
sahf
divl
movsl
mov
pop
mov
fidivl
insl
loopne
jmp
sub
push
push
xchg
push
icebp
jl
pop
rolb
jp
xor
ror
lahf
jecxz
enter
scas
loop
mov
sar
nop
cmp
lock
cmp
test
inc
mov
xchg
test
mov
movsl
adc
mov
jno
ffreep
or
push
dec
int
test
jge
xorb
adc
stc
rolb
repz
mov
fldl
shl
cmp
xchg
mov
insl
cli
cmp
in
mov
idivl
cmc
xchg
jno
loop
pop
xchg
cltd
stos
int
lcall
insb
inc
call
xor
aaa
cs
enter
cmp
imul
shrl
dec
mov
inc
dec
jno
mov
loopne
dec
or
xchg
call
adc
insl
inc
ret
xchg
push
sub
push
fstpl
cmc
hlt
xchg
mov
or
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
jmp
cmp
int3
leave
fnstenv
or
inc
adc
jg
add
outsl
pusha
sarb
ss
enter
arpl
cmp
sbb
gs
mov
loope
jae
nop
ds
sub
add
xorl
mov
mov
sbb
fadds
mov
lahf
lock
xor
pop
pop
pop
popf
ret
test
push
and
cmp
orl
xlat
cli
jmp
inc
xchg
adc
cmp
aaa
callw
adc
fdivl
xor
in
dec
mov
pop
scas
mov
out
mov
mov
jae
and
test
push
dec
shr
sub
mov
pusha
stos
pop
cmp
cmp
nop
cmp
dec
outsl
in
aaa
pop
jl
ljmp
mov
jle
out
push
loopne
jg
or
or
sbb
dec
fbld
pop
mov
out
add
rcrl
xchg
adc
or
enter
mov
fwait
sahf
cli
jp
mov
sahf
sbb
jmp
cmp
dec
adc
cmpsb
outsb
in
fisubl
loop
pop
jle
out
jbe
fisubrs
repnz
arpl
fcoms
cs
dec
lret
and
lds
cmpsb
pop
sbb
mov
lods
adc
pop
pop
mov
test
xchg
xchg
in
dec
fs
ret
adc
mov
jno
or
stc
shll
ret
or
loope
ljmp
fsts
sbb
jmp
or
shlb
xchg
mov
mov
jbe
jns
sti
out
pop
mov
je
outsb
das
or
cld
je
mov
callw
jnp
pop
inc
icebp
stos
mov
dec
push
cmpsl
shl
lds
icebp
sub
xor
cmpsl
mov
mov
push
cvtpi2ps
and
push
ljmp
xor
add
lcall
adc
jae
push
cmpsl
jb
cmpsl
xchg
sub
cmc
mov
icebp
cltd
xchg
lea
sti
fucomi
sahf
insb
xor
add
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
adc
mov
inc
mov
andl
xor
orl
add
movl
mov
not
movl
mov
movl
mov
mov
push
movl
mov
mov
cmp
movl
je
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
jmp
ret
ret
leave
lret
filds
jg
jnp
js
bnd
inc
jb
lret
lds
rclb
xor
inc
sbb
jp
inc
adc
push
fcomp
lods
pop
dec
jno
ret
scas
jecxz
inc
scas
xor
mov
pop
adc
icebp
jae
mov
xor
and
lods
sahf
mov
xor
xchg
cmp
ds
out
jle
dec
jmp
imul
and
jmp
in
pushf
loop
mov
mov
push
mov
adc
mov
dec
dec
data16
lahf
fmul
scas
pop
lret
and
jno
jmp
test
mov
lahf
scas
into
and
xchg
mov
mov
bound
fcmove
dec
xchg
xchg
data16
and
enter
ret
inc
rcr
xor
pop
decb
inc
mov
shrl
hlt
push
movsb
stos
push
sahf
or
jo
adc
xchg
imul
xlat
divl
jo
arpl
pmullw
ja
jno
add
cld
add
or
push
dec
mov
sahf
and
xor
or
movb
cltd
xchg
jbe
sbb
dec
mov
xchg
fsts
push
mov
cmpb
mov
push
repnz
cltd
cmp
div
dec
jns
out
in
hlt
cmp
int
enter
pop
xchg
sti
popa
scas
xchg
das
sbb
insb
in
ss
dec
jbe
jns
sbb
mov
and
push
mov
outsb
adc
lcall
ss
pop
pop
jmp
dec
repnz
mov
and
jmp
int3
orl
hlt
xchg
enter
addr16
mov
ja
cmp
sbb
xchg
push
cmpsl
mov
in
or
jg
rcl
cmp
and
fwait
jg
fnsave
push
inc
nop
cmp
movsl
lods
jb
dec
outsb
adc
gs
xlat
push
pop
or
hlt
pop
fwait
cld
pop
inc
pop
pusha
xor
cld
xchg
dec
fisubrl
and
pop
std
sub
je
clc
loopne
insl
pop
inc
and
std
jmp
mov
addr16
xchg
sbb
cwtl
test
inc
sbb
mov
xlat
mov
inc
pop
push
xlat
push
dec
out
or
es
shr
xchg
dec
imulb
jno
and
stc
dec
sahf
mov
dec
sbb
data16
ljmp
lds
adc
in
sbb
enter
jbe
pop
pop
or
sbb
mov
hlt
jmp
insb
fnstenv
mov
movsb
xchg
movsl
ljmp
orb
inc
push
lods
dec
pop
pop
aad
int
xor
cmp
mov
out
push
mov
cltd
out
stos
outsl
aad
dec
mov
jno
imulb
in
jne
mov
lods
xorl
push
or
mov
xor
xor
lea
xor
jmp
sarb
xlat
xlat
loope
pop
scas
clc
fidivs
jnp
js
mov
cwtl
xchg
xchg
xor
mov
mov
xchg
aam
loop
jl
xchg
pop
push
out
test
mov
mov
jmp
push
fcompl
movsl
add
add
arpl
cmc
ret
iret
rep
loope
sti
inc
jno
out
add
xor
ss
adc
xchg
mov
mov
adc
shrl
inc
dec
mov
jg
jge,pn
ljmp
sub
aam
mov
mov
pop
xchg
aaa
cmp
movsl
xorb
add
xchg
mov
inc
mov
jmp
cli
ficoms
sub
push
and
and
dec
push
popf
pop
xchg
jp
push
xor
xor
push
jp
cmc
pop
cmc
mov
mov
push
inc
jl
jo
ret
ret
arpl
push
sub
mov
and
subl
imul
bnd
sbb
negb
popa
imul
mov
into
aaa
and
mov
sbb
mov
ja
or
or
leave
sbb
sub
arpl
fidivrs
xchg
popa
pop
sub
mov
ss
call
loopne
int
testb
push
out
mov
lret
loopne
mov
lea
inc
push
fcomip
ds
jecxz
sbb
push
sti
mov
icebp
dec
sbb
xor
out
sub
lea
push
push
xchg
rep
insl
outsl
and
out
sbb
cmp
cmpsl
mov
push
pop
jne
fdivrp
jp
imul
xor
mov
pushf
test
pop
inc
and
or
pop
out
dec
arpl
jge
ret
orb
ljmp
cmpsb
xchg
or
cmp
xchg
and
and
lahf
clc
push
mov
cmpsl
or
cmpsb
loop
sbb
aaa
das
daa
xchg
mov
out
inc
loopne
int
pop
jns
jns
ret
dec
sbb
or
test
adc
sub
push
filds
push
test
push
inc
push
pop
or
push
test
adcb
cmp
push
into
scas
ljmp
push
aaa
hlt
xlat
ss
int
adc
push
sub
and
mov
les
scas
adc
loope
sbbl
sub
iret
pop
daa
inc
xlat
rcrl
in
rolb
fistpll
test
or
dec
lods
or
imul
add
mov
and
xchg
lods
loope
jbe
sbb
dec
xchg
sarl
xchg
testl
push
fildll
xor
and
add
flds
dec
cmp
push
das
jb
pop
xchg
scas
cmp
sahf
pop
iret
lcall
stc
sub
inc
stc
jmp
jmp
int3
les
aam
ror
mov
push
pop
adc
jg
jnp
js
mov
test
jmp
xchg
pop
jb
insl
in
hlt
jae
cmpsl
cli
or
mov
jo
mov
popa
lods
out
jno
filds
mov
xor
addr16
in
std
sbb
push
repnz
ja
nop
insb
outsb
xchg
pushf
bound
and
fdiv
dec
aam
imulb
xchg
pop
pop
push
je
cmc
xchg
mov
adc
adc
nop
popa
subb
in
mov
ret
pop
push
jp
or
cwtl
xor
cltd
and
movsb
adc
xor
xchg
leave
xchg
rcrb
push
std
enter
cld
jbe
jb
js
mov
adcb
fcomip
jnp
testb
shl
cmp
lahf
dec
ret
mov
cmp
push
arpl
lods
xchg
pop
adc
iret
xor
lcall
andl
adc
xor
push
outsb
mov
push
out
movsl
fs
mov
xchg
push
scas
push
out
hlt
daa
pop
fcoml
jg
data16
shll
outsb
and
lock
lods
test
popa
and
divb
jmp
pop
lods
add
adc
loopne
xchg
or
out
js
and
xor
xor
cli
push
lock
xor
pop
cltd
sub
jle
daa
subb
pop
leave
aam
sti
filds
fsub
sete
cli
xchg
sub
out
sbb
add
add
std
scas
in
cmp
cmp
and
mov
and
in
and
xor
shll
lods
or
jne
outsl
sarl
jp
movsb
pop
and
adc
imul
shll
mov
cmp
in
and
add
jmp
aas
push
xor
mov
ret
adc
xchg
jnp
jmp
jns
dec
cmpsl
cltd
xor
sub
push
jnp
lods
and
jnp
mov
sub
mov
xor
mov
sahf
aad
pop
insl
xor
inc
leave
dec
jp
sbb
out
stc
push
mov
lock
testl
popa
mov
sub
sbb
inc
pushl
and
stos
stos
cmpsl
cmp
cmp
cltd
xor
shrb
mov
imulb
mov
ds
jnp
aaa
in
xor
add
mov
push
pop
pushf
pop
popl
pop
jle
leave
imul
xchg
lahf
ja
es
push
add
test
cmp
pop
dec
xor
push
data16
aam
in
xchg
push
jns
test
pop
push
inc
fbld
add
mov
sti
outsb
mov
lods
push
dec
push
mov
jb
lret
sbb
dec
push
add
mov
xor
add
mov
mov
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
jmp
cmp
rcl
fcmove
test
and
jg,pt
jnp
js
jnp
lea
xchg
xor
scas
sub
dec
xchg
addb
jecxz
je
lcall
dec
mov
dec
mov
mov
lods
rcll
int
movb
insl
sub
xchg
stos
add
pop
push
lock
xor
bound
and
je
pop
mov
sbb
test
pop
or
jl
adc
mov
xchg
scas
call
movsl
pop
mov
mov
int
js
ljmp
jno
add
sti
mov
je
repz
lret
push
lret
jle
jmp
and
or
inc
add
jmp
ret
adc
mov
lret
cmc
adc
int
fcompl
jecxz
sarw
push
xor
outsl
adc
sbb
pop
push
in
xor
cld
mov
lcall
cltd
mov
pop
push
hlt
jl
adc
cli
mov
stos
sbb
fisubrs
fst
jbe
xchg
and
lcall
int3
aas
cmp
js
and
out
icebp
adc
push
mov
es
dec
scas
pushf
pop
sbb
pop
cmp
inc
lock
aaa
mov
and
sbb
in
rcll
sahf
fmulp
sub
inc
push
xchg
data16
and
cli
sbb
push
fadds
mov
mov
dec
push
shll
lds
dec
mov
and
jbe
loopne
jns
mov
push
xchg
fstpt
cld
icebp
test
mov
sbb
xchg
jns
or
and
jae
pop
adc
xchg
or
in
fs
adc
sub
gs
and
jecxz
cmp
cli
sbb
ja
and
cs
mov
push
loop
stos
mov
ja
xlat
mov
inc
or
ret
clc
test
ss
out
mov
aaa
xor
xchg
or
ja
xchg
leave
push
add
pop
mov
mov
ss
push
stos
fidivrs
cwtl
popf
jns
lret
xorl
jb
clc
sub
or
cmp
xchg
inc
xor
jbe
lcall
std
sub
movsb
push
jl
mov
cmp
sarb
daa
and
cmpsb
mov
addr16
lcall
cmpsb
jmp
sub
or
cmp
lret
insl
int
loop
rclb
clc
das
inc
addr16
cmp
std
jo
xchg
xchg
fmuls
mov
imul
fiaddl
test
sub
addl
lock
das
mov
test
mov
clc
pushl
mov
jmp
lret
into
ret
ret
lret
xor
stos
push
sbb
ret
jg
jnp
js
sbb
cmp
mov
scas
cld
and
lret
insb
bound
nop
repz
scas
mov
push
mov
or
mov
in
insl
insl
xchg
in
leave
adc
lret
cmp
push
sbb
jp
das
in
xchg
nop
push
lret
dec
inc
and
and
ss
cmp
ss
mov
and
imul
jnp
ss
hlt
call
out
cmp
js
inc
lds
xor
jl
sub
shll
inc
cli
dec
orl
iret
insb
outsl
xchg
adc
lahf
aad
xchg
daa
movsl
fs
cs
mov
pop
jge
mov
stc
les
arpl
push
cmp
imul
mov
cld
shl
lahf
jo
imul
ret
lret
adc
add
xchg
lret
dec
xlat
sub
ss
jns
nop
add
cmpsl
notb
popa
loope
icebp
int
add
push
in
lret
push
add
ljmp
pop
jae
bound
mov
pop
add
jnp
cmp
loop
insb
xor
in
sbb
mov
outsl
mov
out
fwait
sub
incb
push
pop
push
mov
push
inc
mov
and
mov
mov
or
push
jo
into
mov
or
cmp
xchg
in
icebp
lahf
fstpl
sbb
loope
xor
stc
jae
and
mov
jmp
jb
je
call
stc
stos
jp
jnp
aas
sub
je
dec
mov
adc
mov
subb
mov
mov
lock
inc
les
mov
mov
sti
jg
in
jo
mov
sub
lock
fsubrl
mov
sub
mov
pop
sahf
inc
sbb
outsl
ss
outsl
push
and
mov
outsl
iret
hlt
mov
or
divb
jb
sar
dec
fmull
xor
repnz
adc
mov
idivl
cmpsb
push
dec
test
icebp
decl
aad
xchg
out
mov
test
fisttps
btc
pop
ljmp
lret
xchg
mov
sub
inc
dec
cmp
mov
adc
cmp
outsb
or
xor
pusha
pop
xlat
loopne
or
mov
lcall
das
adc
test
std
stc
daa
dec
jp
push
jns
out
aad
bound
leave
add
jne
stc
std
and
xchg
lret
mov
test
lahf
or
fdivrs
mov
jmp
lret
rol
leave
shll
enter
or
jle
js
xlat
dec
call
xor
into
into
dec
push
mov
in
out
fxch
inc
jb
cmc
inc
inc
lret
lahf
dec
sub
into
inc
sub
xor
sub
mov
std
add
dec
and
std
nop
pop
call
insl
xchg
sub
xchg
test
psubsw
popa
ret
mov
adc
jecxz
xchg
gs
outsb
adc
movsb
push
mov
sbb
cmpsl
int3
mov
dec
xlat
test
ds
ret
shl
mov
test
popa
mov
or
pop
insb
in
pop
mov
sub
mov
or
aas
int3
outsl
repz
shrb
insb
dec
fidivrl
add
hlt
sub
sar
add
adc
fnstcw
es
out
rol
or
lods
cmp
outsb
mov
fcomip
ffreep
pop
mov
imul
pop
dec
dec
into
pusha
push
xor
jmp
std
std
mov
imul
outsb
xchg
and
jmp
popf
push
inc
ja
pushf
cltd
enter
pop
mov
ljmp
nop
xchg
add
adc
sete
roll
cmp
fildl
cmp
inc
negl
xor
outsl
add
mov
fdivs
out
mov
adc
out
lret
mov
or
mov
test
mov
in
into
mov
xchg
mov
aad
cmp
push
inc
test
inc
sbb
add
cmp
test
sbb
cld
cs
sbb
mov
in
inc
cmc
add
bound
or
pop
xor
mull
or
fwait
xchg
jo
fsubr
sub
aam
fwait
out
push
mov
sub
popa
and
push
loope
roll
fcoml
jo
imul
movsl
or
mov
mov
cltd
cmp
cmp
ret
cltd
rorb
inc
adc
ficomps
lds
stc
jnp
pop
add
iret
ljmp
in
inc
aas
jnp
imul
ja
push
sub
sub
pop
cltd
push
shrb
aas
sti
adc
sub
popf
pushf
shrb
rcll
lds
movsl
sbb
les
or
pxor
mov
test
mov
push
movsb
and
repz
stos
jp
sti
pop
cmpb
or
or
in
test
nop
fwait
mov
cmp
iret
inc
fdivs
sub
gs
ret
mov
pusha
out
faddl
cmc
jle
test
push
cmp
push
add
mov
sbb
xchg
pop
out
cld
adcb
pop
cld
shr
add
add
mov
leave
ret
push
mov
sub
jmp
rcl
ret
into
rcl
daa
jle
mov
jg
adc
js
stc
out
cmp
xchg
mov
fnstsw
jge
cmp
sbb
test
andl
xor
jge
jmp
push
xor
xchg
insb
pop
xor
add
pop
add
loopne
mov
inc
std
mov
test
mov
dec
clc
lea
sub
scas
imul
mov
je
mov
pop
push
inc
jecxz
fsubrp
arpl
or
xor
in
xlat
sub
imul
pop
cmp
pushf
push
jp
cmp
lds
mov
xorl
test
add
inc
iret
cmp
jb
mov
les
dec
mov
stos
dec
ss
enter
sub
adc
lret
fs
out
lock
lods
repz
scas
cmp
movsb
push
cmp
insl
movsb
sub
addb
js
sbb
sub
jp
push
mov
push
sahf
mov
stc
jno
test
jmp
or
jl
push
fdivl
and
push
jb
lds
andl
pop
lahf
mov
push
add
scas
inc
sbb
and
pushf
pushf
inc
dec
xlat
orl
sbbl
lock
cltd
push
fistpl
mov
sub
add
mov
sub
outsb
jp
pop
jge
sbb
dec
js
cli
std
subl
int
push
mov
jp
pop
hlt
sti
mov
ret
das
addl
in
sub
sub
lea
dec
inc
jns
stc
push
pop
push
and
or
outsl
add
rorb
mov
mov
xor
test
cmp
sarb
jl
add
push
jl
sbb
cltd
les
jge
push
pop
fimuls
into
sar
adc
leave
dec
fwait
dec
les
aad
gs
repnz
mov
pop
and
mov
xor
movl
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
adcl
movl
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
and
push
add
mov
and
xor
movzbl
adc
mov
adcl
add
incl
mov
mov
push
movl
push
test
movl
je
jmp
lret
fld
scas
inc
adc
in
mov
lret
jg
adc
js
cmp
out
mov
jno
pop
pop
mov
imul
sub
test
sahf
hlt
aad
add
hlt
push
cld
add
cwtl
scas
push
inc
scas
lahf
mov
push
gs
mov
int
insb
sbb
orb
outsb
push
jge
xor
rolb
stc
addr16
clc
cmpsb
rcrl
adcb
push
cmpsl
imul
popa
fisttps
dec
sub
out
lods
repnz
sbb
outsl
loop
outsb
mov
sbb
movsl
adc
jp
scas
mov
sbb
pop
inc
jnp
aam
dec
shr
movsb
push
inc
pushf
cmpsl
or
or
xchg
roll
rclb
mov
mov
rcll
test
dec
cmc
enter
out
pop
pusha
les
out
and
out
lods
mov
xchg
das
call
loopne
ss
out
xchg
pop
push
rcrl
sub
sahf
inc
jns
adc
fnstenv
push
dec
jb
lea
xor
in
test
iret
adc
cmc
mov
call
push
and
pop
sarb
pop
divb
mov
lods
and
cs
movsb
add
push
jge
repnz
adc
inc
cli
add
add
cmp
popa
shl
in
lds
cmp
mull
test
mov
jecxz
jo
cmp
pusha
and
pop
inc
and
sarb
xchg
mov
dec
adcl
adc
aad
sbb
sahf
xlat
test
dec
adc
in
mov
jb
xor
outsl
jge
push
pop
in
addr16
jmp
xor
mov
das
pop
pop
jle
shrl
mov
shll
xchg
adc
test
data16
test
dec
into
mov
pop
test
incb
inc
adc
push
push
loopne
call
inc
cmp
xor
cmp
inc
out
push
pushf
das
mov
mov
mov
add
mov
mov
imul
xor
mov
add
sub
mov
mov
notl
xchg
addl
jmp
iret
iret
xlat
xlat
iret
xlat
cmpsb
call
mov
leave
jg
adc
js
jbe
ret
and
sbb
jnp
adc
pop
popa
push
ficompl
fnstenv
rcrb
mov
outsl
or
push
mov
pop
inc
xchg
adc
arpl
sti
lahf
sub
mov
cmp
call
hlt
xchg
push
cmp
cmp
in
pop
adc
and
imul
xchg
std
mov
push
cmp
fwait
xchg
in
xor
xor
loopne
mov
stc
fxch
dec
imul
mov
mov
mov
lea
je
std
int3
icebp
repnz
jle
or
sbb
pop
fnsave
sub
es
xor
insl
cmp
out
in
cmc
arpl
loop
sahf
adc
xor
mov
clc
ret
mov
pop
rorb
jl
cmp
lcall
xor
icebp
mov
push
pop
leave
outsb
sbb
outsl
mov
xor
mov
bound
repz
enter
in
xor
sub
js
pushf
mov
lods
fnstsw
cmpsb
push
xor
mov
pop
in
out
jae
int3
in
cmp
fwait
mov
dec
sar
cmp
inc
cld
loop
inc
adc
int3
fnstenv
aas
aas
pop
adc
loop
sbb
icebp
push
pop
push
sbb
adc
rclb
xchg
jns
addr16
rcrb
lods
and
or
lods
mov
cmp
sbb
xchg
cs
ss
hlt
lods
inc
nop
mov
pushf
pop
push
dec
mov
adc
lahf
cmp
cmp
pop
sbb
loope
lcall
cwtl
pop
and
call
xchg
daa
cmpsb
adc
mov
imulb
and
sbb
or
adc
jmp
mov
add
mov
cwtl
imul
loope
adc
add
fidivrl
inc
mov
arpl
mov
fdivl
jns
xlat
adc
xor
xorl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
adc
mov
and
mov
add
mov
mov
adcl
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adc
add
mov
mov
jmp
cmp
fcmovbe
aad
xorl
cltd
cwtl
iret
jg
adc
js
ficompl
jns
or
jle
andb
fcomip
jne
inc
adc
subb
test
mov
mov
faddl
add
jne
hlt
das
filds
into
dec
pop
xchg
sbb
cmc
leave
fsub
ds
jmp
add
mov
in
repz
xorb
pop
and
dec
shlb
ljmp
sbb
ja
sub
push
jb
test
movsl
ret
test
stos
inc
out
stos
cmpsb
mov
mov
lcall
in
xchg
jnp
scas
outsl
jge
mov
mov
lcall
in
mov
xor
pop
push
cs
negl
shl
es
sbb
lret
mov
scas
dec
out
pop
insl
push
xor
maxps
pop
xchg
inc
mov
mov
repz
shlb
jb
or
jle
cmpsb
js
lret
push
adcb
or
in
sarl
xchg
fmull
adc
pop
and
iret
mov
sbb
dec
negl
dec
mov
or
and
xchg
clc
mov
sub
insl
mov
repnz
inc
std
xchg
into
andl
mov
mov
push
fdivs
dec
out
ljmp
xchg
xor
and
lock
or
or
int3
push
jmp
mov
mov
dec
inc
int3
push
xchg
fstpl
and
cli
inc
icebp
scas
sahf
cmp
rcrl
outsb
lods
mov
roll
adc
add
push
insl
out
jmp
adc
int
cmp
sub
mov
dec
xchg
cmp
int
xor
data16
mov
push
into
add
test
push
in
ret
mov
aas
adc
and
cli
xor
pop
cltd
push
xchg
sub
insl
movsb
mov
gs
bnd
and
push
jne
mov
je
inc
mov
xor
sbbl
add
movl
cmp
movl
jmp
into
ror
leave
push
or
mov
inc
je
int
js
jle
js
push
das
je
add
pop
adc
subb
jmp
mov
or
clc
pusha
dec
jp
imull
pushf
cmp
mov
out
sub
stc
std
push
xor
dec
incb
or
sub
sbb
push
sbb
inc
sbb
fs
add
push
adc
movsb
mov
movsb
frstor
push
repnz
push
mov
repz
shr
rcll
outsl
inc
sub
pop
jmp
sub
adc
xchg
fmull
xchg
xchg
cltd
pop
sbb
add
mov
sub
mov
das
ja
sti
pop
clc
mov
jns
out
retw
adc
cli
jb
inc
cmpsb
sbb
add
jno
repnz
out
push
or
inc
xchg
xor
int3
xlat
lahf
mov
gs
and
inc
jmp
xchg
shlb
mov
into
dec
add
lret
imul
inc
popf
xchg
add
add
dec
movsl
or
subb
adc
xabort
outsb
pop
lcall
mov
xor
shl
or
and
cmp
jmp
or
push
sarb
cmp
dec
dec
xchg
mov
vmwrite
lahf
sbb
outsl
and
cmpsl
int
jbe
adc
or
movl
lock
or
cmpsl
xchg
test
rcrb
pop
push
adc
aas
sbb
stc
jmp
xchg
fcmove
fbstp
sub
jnp
lock
sbb
sub
scas
xor
jg
mov
leave
les
test
or
mov
mov
and
sbb
out
add
pop
jnp
cltd
out
xlat
xor
push
aam
add
xor
pop
push
xchg
pop
push
lods
dec
lahf
imull
loop,pt
test
mov
js
cmc
sub
xchg
push
add
addl
pushl
orl
call
and
mov
jmp
aas
into
leave
int
into
fwait
orb
int
ret
jg
adc
js
lds
ret
add
mov
xchg
scas
repnz
xor
nop
loop
stos
jno
pop
mov
sti
movsb
fimuls
cli
cmp
push
mov
frstor
push
fdivrs
je
mov
fildl
inc
dec
mov
add
imul
dec
fwait
or
inc
cmpsl
stc
jo
dec
jns
xor
adc
jecxz
mov
pop
insl
adc
jecxz
mov
stos
stos
lock
or
mov
add
data16
loope
sahf
jle
aaa
fsubl
das
inc
int
mov
cmp
push
mov
mov
std
push
divb
insl
cmp
aaa
les
lock
mov
shrb
lret
data16
mov
cmp
xorl
xchg
pop
mov
inc
mov
pop
ja
add
jp
inc
mov
mov
aaa
es
aam
lods
mov
adc
sbb
out
jb
into
dec
mov
mov
lods
lahf
iret
repz
test
xor
xchg
js
test
xchg
push
jae
xor
jbe
lret
xchg
cmpb
sub
mov
movsb
pmaddwd
or
sahf
notb
pop
lods
sbb
xor
sbb
stos
mov
push
hlt
rorb
ljmp
iret
loop
cwtl
mov
add
mov
mov
scas
fcoms
fwait
loop
lret
pop
cs
push
leave
daa
sbb
and
cmpsl
mov
and
sub
dec
outsl
xlat
movsl
cld
sahf
cmp
ret
lret
adc
aam
cmp
jl
lock
cmpsl
fucomip
arpl
sti
mov
in
xor
je
in
mov
aam
stos
arpl
xchg
xor
ss
loop
test
insl
mov
sbb
pop
ljmp
dec
or
inc
inc
jecxz
pop
mov
in
mov
movsl
jl
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
mov
movl
xor
add
cmp
movl
je
pushl
subl
pushl
call
jmp
les
iret
rcr
leave
push
push
in
je
pop
rcl
cwtl
sarl
adc
js
push
leave
push
lds
pop
jo
jbe
test
call
and
cmpsb
sub
sub
xor
inc
adcb
insb
sahf
dec
push
enter
add
ja
xor
xor
dec
dec
mov
es
sbb
mov
test
push
xchg
nop
hlt
call
xor
lods
xchg
sub
sbb
rcrb
pushf
imull
sbb
push
clc
imul
call
and
push
xchg
mov
pop
sahf
shl
insl
popl
call
lea
mov
leave
addl
xlat
loop
cmc
dec
bound
pop
mov
fldenv
gs
bound
cmpsb
inc
pop
xor
cmp
faddl
stos
cmp
dec
pop
jae
push
xchg
sbb
push
cmp
mov
arpl
enter
mov
cli
stc
pop
push
loopne
jb
xor
popa
outsb
sbb
pop
in
loope
sahf
add
repz
daa
stos
out
icebp
sub
pop
add
xchg
jae
mov
leave
add
pop
dec
jbe
inc
or
movsl
movsl
or
cmpsl
mov
or
jb
sbb
sbb
add
or
fisttpll
mov
mov
xchg
shll
mov
lahf
push
loop
sub
pop
pop
mov
xchg
push
ds
jno
jne
pop
xchg
aaa
xchg
jg
divl
pop
jo
lret
mov
pop
pop
stos
loopne
arpl
rorb
add
jl
popf
cmp
shl
mov
mov
pop
icebp
enter
leave
mov
pop
sub
inc
fsubs
dec
dec
ret
jbe
fcmovbe
push
push
in
jmp
pop
shl
cmp
imul
testl
or
addr16
ds
testb
mov
xorl
mov
and
lret
dec
movsl
sub
jb
xlat
ja
and
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
jmp
lret
cmp
rcr
leave
mov
and
push
arpl
lock
jg
adc
js
cmp
sub
dec
scas
dec
jl
lds
in
lret
and
inc
sub
nop
pop
push
imul
adc
jl
inc
or
imul
or
xor
mov
loop
shrl
pusha
aaa
sub
cld
xor
call
hlt
out
xchg
nop
dec
arpl
xor
push
nop
dec
fwait
xchg
pop
xchg
push
js
or
push
sbb
inc
xor
mov
pop
hlt
sbb
mov
ljmp
sbb
rorb
mov
je
in
xchg
xor
add
subb
loope
cmp
push
aam
xchg
rolb
jmp
jns
mov
insl
rclb
lock
mov
das
xlat
out
in
into
mov
mov
fsubl
fstl
pop
push
add
movsl
test
or
call
sbb
xorb
aam
xchg
mov
pusha
cmpl
loop
pop
mov
je
or
popl
inc
mov
repz
or
iret
mov
pop
jbe
aad
idivb
xchg
mov
mov
mov
dec
stos
pusha
jle
sbb
das
xchg
arpl
nop
pop
nop
insb
xchg
test
jb
in
popf
subl
jecxz
cmp
stos
add
decl
mov
mov
iret
sbb
fnstsw
int
push
adc
in
push
and
subl
ficomps
xor
pop
mull
xor
jnp
idivb
dec
push
int
inc
scas
stc
mov
loope
test
mov
mov
aam
cmpxchg
push
fimull
mov
jg
mov
jmp
out
test
dec
pop
pop
push
mov
roll
dec
mov
and
xor
call
sub
into
pop
pop
cmp
inc
lods
push
mov
dec
dec
pop
cmp
fcompl
inc
movsl
sbb
jecxz
mov
inc
and
add
add
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
rcl
xlat
int3
aad
fcmovnu
ss
inc
cmp
mov
js
jle
js
mov
jb
daa
sub
pop
cmp
jg
lds
gs
negb
stos
push
pop
in
pushf
mov
inc
outsb
std
push
and
shll
dec
mov
es
jle
add
cmpsb
clc
cltd
jmp
jb
pop
jns
enter
mov
adc
inc
fnsave
sub
sbb
inc
jbe
sbb
sbb
out
adc
cltd
icebp
test
mov
inc
out
dec
xor
sbb
fidivrs
jge
mov
rorb
stc
adc
mov
daa
and
test
dec
xchg
mov
faddl
fs
leave
cs
pusha
inc
push
rorl
cmp
addr16
push
pop
addb
shrl
dec
jae
stos
jo
hlt
movsb
xor
adc
xchg
bound
dec
pop
cmc
idiv
es
adc
add
inc
add
bound
dec
divb
nop
pop
dec
stos
mov
fidivl
mov
scas
into
test
lds
testb
mov
mov
nop
mov
dec
lea
test
out
negl
cld
aaa
test
adc
les
pop
mov
pop
mov
dec
int3
mov
xor
in
repnz
jle
shlb
jp
and
add
lret
outsb
fiaddl
call
ret
sub
sti
cmp
jb
and
push
pop
add
adc
push
inc
inc
push
xlat
push
cmpsl
ficomps
sub
jmp
cmp
or
out
out
pop
sub
mov
jmp
xchg
jmp
or
ret
shrb
xchg
cmp
mov
mov
lret
mov
push
mov
imul
mov
pop
cmp
and
push
mov
adc
sahf
xchg
sbb
jmp
adc
cmp
pop
pusha
push
mov
pop
push
dec
pop
jmp
rcl
aas
leave
cmp
pushf
mov
sahf
pusha
fstpt
adc
js
in
jp
incl
push
pop
repnz
adc
imul
cmpsl
sub
cli
imul
pop
inc
addr16
call
jb
in
cmp
pushf
rorb
fldcw
ret
nop
pop
add
fsts
push
inc
pop
fsubr
jg
insb
in
cmp
pop
int3
aam
xchg
xchg
jae
dec
xor
les
xor
out
inc
mull
dec
and
stos
lods
push
xchg
jns
pop
les
jle
pop
pop
fcoml
or
das
lods
xor
shl
xchg
mov
aam
mov
push
fs
jge
push
or
add
stos
dec
xor
lret
loop
push
ret
in
sbb
jo
xor
mov
les
pop
inc
jecxz
jns
decl
stos
dec
xor
daa
mov
test
sbb
pop
outsl
mov
mov
lret
fidivrl
je
jo
dec
jnp
pop
sbb
cmp
xor
push
mov
es
sar
out
xor
mov
xor
push
jne
mov
jp
mov
out
mov
out
cmpl
outsb
push
sbb
aad
lahf
mov
push
adc
out
jmp
dec
inc
cmp
frstor
test
fidivrs
sub
xor
dec
lea
mov
lcall
sub
cmpb
dec
inc
int3
fs
add
aad
xor
lods
ret
in
push
xlat
cmpsb
jg
cltd
push
sbb
xor
and
stos
inc
into
fstpl
scas
enter
pop
adc
mov
and
lcall
xor
lock
adc
lock
jae
jnp
or
fistl
xchg
mov
test
pusha
push
jmp
jo
repnz
and
xchg
and
xor
lret
sub
jmp
ret
aas
fxch
rcr
mov
popf
out
js
jg
adc
js
lea
pop
dec
in
cmp
popa
add
sbb
lods
cmp
or
mov
and
mov
mov
push
roll
ret
inc
mov
cld
pushf
popa
mov
std
enter
inc
std
repnz
in
addb
jecxz
mov
fcmovbe
imul
and
jo
sahf
ret
dec
arpl
xchg
pop
mov
out
loope
xchg
jecxz
mov
in
xor
push
lock
fbstp
mov
leave
pusha
jecxz
xchg
cs
pop
arpl
mov
in
fbstp
cmp
jg
stc
loope
enter
jno
sub
jne
mov
sarb
sbb
mov
scas
popa
mov
pop
and
or
mov
sub
ljmp
sbb
sub
pop
xor
repnz
js
fstps
popf
push
adc
cmp
js
sub
sbb
mov
inc
fwait
sbb
dec
push
shrl
inc
pop
push
jle
fdivrs
jno
test
add
loope
lret
rcr
sbb
jno
test
jb
sbb
mov
and
pop
inc
into
lret
les
pop
test
xor
push
xchg
movsl
js
add
pop
outsb
ror
jp
dec
js
mov
jle
insb
outsl
mov
daa
jp
icebp
xlat
xchg
test
in
pcmpgtd
shrb
shrl
movsb
cwtl
gs
mov
jnp
enter
je
fsub
es
pop
loope
mov
pushf
fimuls
subl
and
lea
outsl
lret
or
add
loopne
dec
sti
push
jb
sub
clc
mov
fld
pop
xchg
andl
rclb
mov
adc
xchg
push
dec
sbb
icebp
lret
mov
jle
divl
cmpsb
pop
gs
add
xchg
jmp
int
int
fnstcw
push
jecxz,pn
fidivrs
adc
js
dec
movsl
cmp
movsb
mov
inc
aaa
outsl
xor
jne
cmp
mov
xchg
fstpl
rcrl
rorl
movsl
sbb
daa
lea
jnp
mov
dec
jns
dec
clc
or
push
push
es
inc
ja
mov
push
mov
negl
loopne
repz
add
mov
jnp
add
ja
mov
mov
pop
lods
mov
add
aas
rclb
sub
mov
sbb
pop
dec
mov
outsb
cmp
movsl
cs
mov
mov
sti
mov
loope
jae
outsl
loop
sarb
pop
add
icebp
cmp
sbbl
out
lret
adc
xchg
push
mov
out
pop
cli
out
cmpsb
jmp
mov
enter
adc
mov
adc
xor
fwait
hlt
aam
js
xlat
imul
jns
mov
mov
fnsave
pop
int
ja
mov
inc
lock
scas
inc
stos
mov
dec
adc
lock
jp
xor
mov
mov
add
dec
jecxz
daa
fstp
stos
aam
out
jns
aam
clc
popf
inc
mov
jne
sbb
jl
mov
pusha
aad
repnz
cmp
sub
mov
and
push
fidivs
insb
fdivrl
inc
jmp
mov
pop
mov
and
add
and
fsubs
add
out
jecxz
mov
das
add
je
sbb
les
cwtl
mov
sbb
or
out
mov
cmpsb
jg
loope
xor
mov
test
cmp
hlt
leave
loop
mov
fnstenv
pushf
pop
pop
dec
popa
popa
xor
push
and
mov
fs
mov
sbb
dec
mov
jmp
iret
enter
fcmovnu
xlat
push
addr16
jmp
js
jle
js
in
pop
inc
mov
pop
mov
fstl
xor
gs
pushl
stos
add
cmp
push
outsl
stc
insb
shrb
push
sbb
aaa
data16
inc
inc
pop
fucomip
and
mov
push
mov
add
adc
pusha
lods
xor
mov
push
xchg
jl
jle
sub
out
fildl
jp
std
mov
add
sti
test
outsl
and
cmpsb
jno
lods
mov
ret
cld
sub
xchg
xchg
sub
adc
sub
clc
cmpsl
dec
inc
gs
pop
negl
push
mov
addr16
in
pause
fiadds
mov
add
mov
sbb
js
sbb
addb
ss
std
or
and
mov
mov
push
call
jg
push
stos
mov
pop
adc
out
jbe
push
je
sbb
pop
push
clc
cmp
fists
or
std
int
or
in
rcrl
imul
cmpsb
jle
push
sub
repz
jb
ljmp
outsl
imul
xor
xor
pop
lret
in
lahf
and
orl
xchg
jne
cmp
xchg
mov
sbb
int3
pop
iret
or
xlat
cmpsl
add
xor
jae
adc
and
xor
jne
inc
jno
test
pop
ljmp
ljmp
mov
popa
addr16
maskmovq
testl
xor
fnop
add
push
mov
addb
sub
ljmp
nop
js
jmp
jnp
repnz
testb
data16
mov
scas
dec
jo
je
stos
inc
pusha
inc
sbb
pop
in
mov
inc
push
es
jmp
mov
pop
lods
mov
add
lret
rcrl
lahf
insb
xchg
nop
xchg
std
aad
lret
mov
scas
shrl
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
jmp
int3
lret
fxch
leave
mov
push
hlt
orb
stc
shl
js
jle
js
xchg
fbld
and
sarl
jae
js
push
dec
jmp
in
xchg
pop
movsl
aam
sub
pop
ret
mov
xchg
mov
mov
xchg
rcll
je
cwtl
lea
movsb
stc
pop
push
in
shll
ret
das
mov
sbbl
call
pop
in
and
push
dec
push
clc
xlat
nop
or
and
and
jnp
rolb
jecxz
mov
orl
les
xchg
mov
jne
xchg
sub
push
cltd
mov
mov
mov
or
or
js
out
arpl
xchg
lahf
jnp
or
loope
nop
mov
push
mov
push
fs
mov
sub
orl
xchg
repz
or
movsl
inc
popa
bound
xor
in
push
imul
or
popa
insl
add
sbb
lea
dec
sbb
jae
rcll
jg
mov
aas
pushf
and
pop
xchg
push
fisttpl
fwait
ret
mov
cli
loop
xor
inc
faddl
orl
mov
mov
rorb
mov
or
jge
mov
push
lcall
out
stc
inc
inc
adc
out
mov
dec
repz
inc
dec
xchg
nop
add
dec
test
lret
mov
dec
sbb
xchg
loop
leave
mov
mov
jbe
fbstp
jnp
fidivrl
out
aad
enter
dec
inc
cld
mov
lret
pop
faddp
lret
mov
xchg
xor
outsb
mov
scas
xchg
push
hlt
daa
pop
mov
add
cmp
and
pop
jecxz
imul
xchg
dec
lock
repnz
sub
mov
mov
mov
dec
test
gs
into
iret
in
push
xor
xchg
sub
lds
orl
sub
rcr
pop
lret
xor
add
jmp
int
int
rcl
int
cmp
ljmp
jle
js
test
adc
adc
cmc
hlt
movsb
sbb
data16
pop
dec
pop
inc
mov
push
nop
bound
ret
or
sti
inc
inc
nop
xchg
cmc
fldenv
xchg
jno
jle
cmc
xlat
add
lods
jl
mov
jo
cmp
push
stos
mov
adc
icebp
or
rcll
push
mov
mov
and
outsl
push
call
jae
jg
push
arpl
add
xchg
adc
aad
pop
ss
sbb
daa
and
mov
fwait
cmc
jle
inc
es
ss
aad
adc
jns
ret
clc
xchg
inc
mov
jno
sub
sub
cmp
mov
inc
out
cmp
dec
ss
add
xchg
push
mov
mov
jno
jl
ds
mov
test
dec
enter
rolb
stc
xchg
xor
js
ret
in
fwait
mov
or
mov
mov
cli
lahf
sub
cmp
xlat
arpl
jmp
jo
stc
popf
sub
rolb
push
pop
popa
into
cs
ret
jae
add
leave
aad
mov
faddp
gs
rorb
cltd
push
xlat
cwtl
pop
sti
idivb
xchg
pop
push
in
jnp
and
inc
inc
jo
push
popf
inc
dec
mov
es
call
jle
bound
aaa
bound
lret
test
test
sbb
mov
inc
mov
add
rol
jbe
mov
xchg
jo
mov
aaa
pop
hlt
pop
stc
sbb
inc
fsts
or
add
xor
sbb
inc
push
xor
test
or
dec
shll
add
jo
loopne
lds
or
mov
xchg
xchg
rorb
push
xor
mov
scas
loop
test
cmc
fildll
mov
imul
mov
jmp
lret
xlat
vpsubusw
lret
xor
repz
out
js
jle
js
mov
jle
xchg
add
adc
ja
push
test
xchg
adc
cmc
aad
or
pop
icebp
cmp
lea
cmpsb
mov
mov
lcall
inc
or
icebp
dec
call
pushw
scas
and
dec
xor
mov
mov
mov
ret
aas
push
cmp
push
inc
das
jno
jg
mov
cmp
lods
test
mov
test
aaa
or
push
jnp
clc
stos
sub
movsb
inc
out
adc
sub
jle
adc
mov
and
lcall
mov
les
jno
fcmovnb
gs
cmpsl
test
jns
or
call
je
int
in
orb
jae
aaa
aas
aam
adc
pop
dec
push
xchg
in
out
sub
pop
mov
mov
out
pop
sbb
ja
mov
pop
push
sbb
shlb
and
fbld
mov
rcl
and
pushf
mov
or
mov
out
fwait
xor
in
jmp
fs
mov
jecxz
and
add
lods
repz
or
mov
daa
dec
push
push
dec
imull
dec
push
xor
fdivrs
test
sbb
inc
xchg
mov
pop
adc
mov
sbb
sub
jnp
es
mov
xor
pushf
scas
lds
xchg
xchg
inc
jns
adc
inc
into
into
xchg
mov
outsb
and
mov
mov
cmpsl
sti
cmp
out
add
insl
clc
stc
bound
jo
pop
leave
fidivrs
cmp
in
aam
pop
adc
lret
xchg
pop
add
dec
push
mov
repz
inc
xchg
cs
pusha
jg
sarl
aaa
sub
mov
out
iret
test
fs
mov
sbb
mov
into
and
shr
xor
add
enter
iret
rcl
mov
lock
mov
jg
adc
js
jbe
test
or
outsb
jmp
shrd
push
shr
jae
push
ret
jmp
mov
inc
aas
repnz
test
aam
out
dec
sub
sub
sub
pop
and
xchg
in
xchg
test
xor
lahf
mov
das
add
popl
pop
pop
add
push
jnp
ds
dec
call
xor
mov
ret
outsb
test
test
pop
fisubs
shll
dec
mov
push
fwait
push
push
inc
inc
lds
sbb
nop
jb
es
jmp
xor
stos
adc
rcrl
pop
inc
adc
popa
pop
add
test
sub
fsubp
enter
and
rorb
dec
push
outsb
fistps
cmc
push
out
sbb
xchg
mov
pop
or
fistpl
in
cmp
fiaddl
cmp
aaa
lahf
and
orl
pop
push
adc
jmp
popa
jg
mov
sbb
fcoms
inc
cmp
pop
jmp
std
add
sub
icebp
dec
cld
repz
and
fisubrl
sbb
gs
stos
cmp
sbb
orb
cmp
and
in
or
outsl
push
out
int3
add
ja
mov
int3
mov
je
pop
mov
xchg
or
and
mov
mov
mov
test
cmp
les
mov
mov
es
mov
dec
shlb
push
ja
shll
in
aad
adc
or
cwtl
add
fldenv
ljmp
sbb
xchg
or
mov
inc
add
hlt
mov
sbb
leave
jae
movsb
push
mov
and
cmp
xor
jnp
test
cmc
mull
adc
mov
test
cmp
repz
jmp
into
leave
leave
rcr
fldcw
stc
push
fsts
js
jle
js
outsl
or
rolb
in
fcmovnbe
int
mov
std
mov
in
cld
repz
push
cmp
inc
dec
jae
int
je
lcall
mov
cmp
xchg
or
mov
lods
jae
inc
repnz
loop
dec
cmp
shl
pop
jl
mov
sub
or
lds
cmpsl
cmc
xchg
push
jp
cmc
inc
cmp
nop
mov
push
fisttpll
sbbb
or
and
mov
ror
mov
sub
inc
add
mov
jo
or
je
jmp
out
cmp
ret
push
std
fmull
push
mov
mov
push
xchg
pop
icebp
in
or
popf
adc
sbb
mov
and
cltd
sbb
xchg
loope
xchg
inc
notl
xchg
jns
clc
int3
fstp
sub
cltd
pushf
push
fdivl
sbb
adc
pop
lea
pop
mov
mov
popa
adc
mov
arpl
out
mov
xor
cmp
mov
cmp
sbb
out
test
and
cmp
and
insl
push
jo
dec
subb
push
rclb
or
or
and
push
jmp
cmp
rorl
mov
movsb
adc
sbb
fwait
bound
cmp
aam
push
les
pop
ljmp
add
push
inc
mov
sbb
test
mov
lods
push
pop
pop
add
cmp
sub
pop
jmp
cmp
and
mov
sub
inc
sub
mov
sbb
mov
repz
mov
cmp
hlt
inc
out
cmp
mov
lods
or
and
or
or
push
inc
mov
add
mov
xchg
jmp
lea
cmp
jne
mov
jmp
mov
mov
jmp
mov
xlat
movsb
inc
jb
insb
int
call
js
add
or
jb
shrb
rcll
add
dec
inc
mov
pop
out
movsb
cmp
pusha
int3
mov
sbb
es
lds
imul
adc
cs
mov
xor
es
js
jo
repnz
sar
pusha
mov
sub
xchg
pop
jecxz
imul
lods
adc
add
repnz
lcall
dec
push
push
popf
int3
mov
ljmp
cmp
push
pop
fwait
out
aaa
jo
fnstsw
cmp
mov
popa
dec
aam
jle
pusha
sbb
adc
push
xchg
jo
gs
push
out
aad
leave
out
xchg
push
cmp
repnz
in
jmp
xchg
inc
mov
jae
add
pushf
enter
mov
test
xor
or
cmp
mov
clc
mov
jmp
loopne
dec
int3
cmpsb
xchg
mov
sbb
xchg
lahf
movsb
das
xchg
loop
je
out
call
mov
ja
mov
sbb
jno
inc
push
cmp
push
and
push
js
jo
dec
xchg
rol
push
mov
fdivrs
es
push
insl
and
push
and
ja
test
lret
enter
subb
fadd
fisubs
adc
jns
enter
cmp
dec
push
add
fs
cmp
ret
add
and
je
aas
loope
sub
pop
outsl
stc
adc
jae
jl
outsl
outsb
insb
push
lea
jb
fists
xor
hlt
lds
push
or
cltd
scas
mov
pop
imul
sbb
add
sbb
push
sub
mov
cmpsl
insb
jg
ret
jle
jg
dec
fbld
mov
and
leave
fmuls
and
pop
mov
aam
mov
inc
sub
mov
xorl
ret
jmp
cmp
rol
jb
dec
pop
sub
cltd
or
adc
js
push
sub
mov
push
mov
test
loopne
rolb
mov
or
mov
lds
mov
push
iret
stc
mov
notl
push
jae
jge
cli
dec
push
cli
mov
mov
lcall
mov
inc
loope
adc
jg
loopne
jp
cs
popa
popf
inc
mov
ss
and
mov
mov
xor
xchg
xor
sbb
push
jmp
push
enter
lret
fdivrl
mov
lret
mov
mov
mov
lods
popa
nop
pusha
xor
imul
add
cmp
xchg
and
sbb
xchg
jbe
sub
mov
rol
out
cmp
loop
jg
mov
clc
dec
fistps
in
jmp
out
cmp
int3
add
sub
pop
push
add
vpsllq
push
or
fdiv
shll
scas
sarb
xchg
jb
das
or
dec
add
stos
jb
cmp
xchg
dec
sbb
adc
sahf
xchg
push
jnp
inc
pop
adc
pop
gs
mov
or
xchg
adc
cmp
faddp
int3
jb
adc
rcll
sub
je
mov
adc
xchg
or
push
sbb
outsl
pop
pushf
icebp
subl
push
push
mov
jo
adc
out
lret
add
pop
insb
cs
xchg
lock
sub
es
out
dec
loopew
sub
xchg
fsubrl
rcr
je
es
and
cld
push
and
jae
dec
setg
dec
fs
cmovb
mov
mov
mov
push
add
addr16
fwait
xlat
sub
sbb
jp
sbb
jg
sub
sti
pop
ljmp
mov
jp
pop
mov
dec
fstpt
sbb
in
push
loope
into
gs
sub
hlt
jmp
rol
enter
lret
pop
jp
mov
jg
adc
js
xchg
mov
xor
inc
and
loopne
dec
in
cmpsl
push
jns
xchg
sbb
into
pusha
fbstp
dec
cwtl
scas
fwait
adc
pop
mov
ljmp
in
notb
jno
enter
xchg
sub
cmp
int
push
and
dec
mov
add
dec
hlt
mov
inc
addr16
jl
adc
pop
jle
mov
out
push
fildll
inc
iret
jb
in
movsb
inc
mov
es
out
and
divl
inc
cld
cmp
inc
jb
lock
stc
out
lods
in
nop
inc
jns
jnp
mov
sbb
xchg
ret
xchg
fwait
and
cmp
mov
inc
lahf
outsl
and
adc
int
fimull
jnp
and
lock
out
and
push
cltd
test
xchg
or
or
adc
gs
push
icebp
xchg
pop
lea
aam
sbb
sub
sti
shrl
bsf
push
cmp
sbb
cmc
fidivrs
sub
adc
xchg
sahf
add
mov
inc
lock
scas
pusha
out
push
iret
add
out
in
add
sarb
lods
pop
or
and
cmp
xor
das
insb
mov
mov
or
outsb
mov
inc
mov
lret
push
shrl
push
push
mov
sbb
jge
or
test
lcall
fs
or
aad
test
pushf
fcomip
shl
data16
sbb
rolb
add
in
inc
lret
in
loop
iret
lea
cmpsl
cmp
fisttpl
jb
mov
mov
jge,pt
or
dec
pusha
ss
ficompl
mov
fsub
or
jnp
xchg
jo
push
and
int
jge
or
push
shrb
cmovge
jb
in
xor
popa
pop
cmp
stc
jl
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
jmp
mov
iret
leave
rcr
aad
mov
cmp
add
jg
adc
js
aaa
mov
pop
or
xchg
stc
jo
and
dec
sub
out
mov
xor
mov
xor
mov
dec
jge
es
mov
mov
xorl
mov
xchg
xor
add
or
jg
insb
adc
shrb
call
jnp
jo
lcall
test
call
mov
insb
pop
pop
push
sbb
icebp
aad
sub
sahf
fdivs
push
mov
xor
insl
sbb
fdivl
int3
out
add
pop
add
xor
lahf
push
mov
push
pop
mov
push
data16
jns
and
aaa
out
lcall
push
aad
jnp
cltd
add
test
ljmp
add
dec
or
lahf
push
jecxz
sahf
aas
js
cmpsl
sbb
jmp
notb
out
ds
jmp
cld
out
jae
stc
xchg
jns
jae
or
pop
pop
lret
cld
test
insl
or
mov
inc
fcomps
les
mov
adc
add
jp
lcall
mov
cmp
or
sub
cmp
cmp
stos
and
cwtl
xor
push
or
das
dec
test
jl
push
sti
outsb
aaa
movsl
jno
dec
jecxz
xor
xchg
adc
cmp
jl
out
add
jne
cmp
sbb
push
fdivs
push
xchg
add
addb
jne
ret
adc
stos
xlat
cmpsl
aad
rcll
hlt
popa
movsb
fisttps
xor
inc
cmc
in
or
in
scas
cmpsb
std
jmp
hlt
add
mull
ret
outsl
fildl
test
fbstp
lahf
mov
jbe
out
pop
jnp
ret
lcall
inc
imul
inc
into
shrb
cmp
sbb
dec
xor
add
pop
mov
pop
jmp
rcl
ret
ror
aad
andb
push
lods
inc
rcrb
jg
adc
js
in
scas
lods
leave
test
add
push
mov
popf
xlat
fisubl
pop
push
es
mov
ss
outsl
mov
sub
popa
push
xchg
outsl
ret
xchg
or
pusha
xor
int
pop
rcrb
out
push
xchg
mov
xchg
out
pop
pop
aad
lret
pop
pop
icebp
les
pusha
es
cwtl
push
or
mov
sbb
sbb
push
lret
mov
push
js
call
adc
xor
lahf
insl
inc
in
mov
inc
jne
mov
arpl
arpl
aam
adc
pusha
test
push
int
pop
ljmp
shll
sti
pop
jl
add
jno
or
imul
jp
push
push
out
pop
and
xorb
mov
sti
xchg
mov
xchg
test
jp
in
push
cmpsl
aad
sbb
addr16
sbb
insl
pop
test
mov
insb
dec
xor
xchg
popa
loop
pop
sub
sbb
pop
sub
outsb
setns
data16
pop
jmp
adc
int
mov
ret
out
flds
jno
inc
push
fidivs
push
hlt
shll
push
movsb
cs
cmpsl
dec
dec
in
test
jge
in
pop
adc
sbb
jecxz
imul
cmp
inc
and
push
pop
jmp
push
mov
dec
push
sti
sbb
cltd
inc
inc
or
dec
arpl
cld
jle
and
sub
xlat
lea
push
pop
dec
aas
stc
pop
out
push
pop
ja
sbbl
sti
fiadds
cmpsb
scas
push
in
mov
fs
push
aaa
add
lds
jno
or
xor
inc
shrl
int3
js
dec
rcll
push
hlt
inc
mov
inc
jecxz
fldcw
jg
mov
jmp
push
bound
repnz
in
pop
cmp
and
out
cltd
push
inc
xor
cmp
ror
jno
pop
or
cmpsl
pop
pop
push
stos
mov
imulb
scas
xor
pop
jmp
into
iret
into
ror
aad
aad
mov
in
add
adc
js
iret
cwtl
jbe
ljmp
lds
dec
pop
rcl
dec
add
inc
iret
push
dec
dec
push
jp
pop
push
movsl
stos
scas
inc
xor
sahf
mov
and
dec
and
loop
inc
fsubrs
and
addr16
adc
js
cltd
stc
inc
ret
addr16
int3
xchg
mov
pop
inc
pop
add
sub
call
js
or
xor
jnp
addr16
in
jb
cld
mov
add
mov
xor
mov
loope
repz
xor
rcr
adc
push
sub
sbb
sub
icebp
mov
inc
arpl
fnstcw
add
es
sbb
jge
inc
repz
out
nop
sbb
dec
mov
mov
cld
push
popa
sbb
lahf
dec
mov
lahf
jne
mov
repnz
pop
xchg
mov
mov
das
xchg
fs
andb
dec
add
int
insb
cltd
mov
daa
imul
shrl
js
push
cltd
lcall
xor
mov
out
dec
push
mov
push
addl
and
lods
xchg
cmc
and
lods
and
scas
aaa
push
adc
push
outsl
scas
les
and
data16
cmp
sub
out
jge
lods
mov
sbb
add
mov
add
lods
jge
sti
adc
inc
sbb
roll
cmpsb
test
testb
jo
ds
adc
cwtl
mov
aam
nop
inc
fisubrl
add
les
adc
or
adc
in
test
lcall
mov
mov
outsb
inc
in
roll
sub
pop
les
pop
or
gs
and
and
pop
pop
lcall
mov
xchg
xor
lods
sub
xchg
es
cltd
jne
ficoms
arpl
sti
pop
cmp
icebp
xchg
push
add
call
pop
leave
ret
sbb
add
flds
add
flds
add
flds
add
add
dec
flds
add
add
flds
add
add
add
sbb
add
flds
add
flds
add
add
rcr
add
loopne
add
ljmp
add
add
push
fiaddl
add
fiaddl
add
add
fiaddl
add
fiaddl
add
add
dec
fiaddl
add
add
fiaddl
add
add
js
add
xchg
add
mov
add
lcall
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
add
fildl
add
fildl
add
add
push
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
faddl
add
add
sub
add
cmp
add
dec
faddl
add
add
data16
add
add
mov
add
pushf
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
fldl
add
fldl
add
add
dec
fldl
add
add
pusha
fldl
add
add
test
add
mov
add
sahf
fldl
add
add
fcmovu
add
out
fldl
add
fldl
add
fiadds
add
fiadds
add
fiadds
add
add
pop
fiadds
add
add
fiadds
add
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
filds
add
filds
add
filds
add
filds
add
add
filds
add
add
mov
add
cwtl
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
loopne
add
add
sub
add
loopne,pt
add
add
data16
add
add
xchg
add
xchg
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
loope
add
add
push
loope
add
add
jb
add
test
add
mov
loope
add
loope
add
loope
add
add
add
loope
add
add
adc
add
and
add
xor
add
loop,pt
add
add
pusha
loop
add
add
xchg
add
cwtl
loop
add
add
int3
loop
add
loop
add
loop
add
loop
add
jecxz
add
jecxz
add
add
xor
add
inc
jecxz
add
add
fs
add
add
mov
add
mov
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
in
add
add
dec
in
add
add
push
add
jl
add
mov
add
cwtl
in
add
in
add
in
add
in
add
in
add
in
add
add
ds
add
add
pop
in
add
add
jle
add
nop
in
add
add
mov
in
add
in
add
in
add
in
add
out
add
out
add
out
add
add
add
push
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
pop
out
add
add
jbe
add
xchg
add
cwtl
out
add
out
add
out
add
out
add
out
add
call
add
and
add
xor
add
dec
call
add
callw
jp
add
xchg
add
xchg
call
add
mov
add
call
add
in
add
lock
add
or
add
sbb
add
add
add
or
add
add
add
das
and
add
add
pop
add
add
add
add
and
pop
aam
add
add
add
add
add
add
add
add
push
aam
add
add
xchg
inc
add
imul
add
add
xor
jp
jp
outsb
je
je
jo
aas
dec
imul
gs
jb
imul
inc
inc
dec
push
inc
dec
push
inc
inc
cmp
add
add
aad
add
fildl
add
rolb
add
aad
add
rolb
add
add
add
add
add
loope
add
xlat
add
ss
add
adc
add
inc
jmp
add
sbb
add
flds
add
flds
add
flds
add
add
dec
flds
add
add
flds
add
add
add
sbb
add
flds
add
flds
add
add
rcr
add
loopne
add
ljmp
add
add
push
fiaddl
add
fiaddl
add
add
fiaddl
add
fiaddl
add
add
dec
fiaddl
add
add
fiaddl
add
add
js
add
xchg
add
mov
add
lcall
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
add
fildl
add
fildl
add
add
push
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
faddl
add
add
sub
add
cmp
add
dec
faddl
add
add
data16
add
add
mov
add
pushf
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
fldl
add
fldl
add
add
dec
fldl
add
add
pusha
fldl
add
add
test
add
mov
add
sahf
fldl
add
add
fcmovu
add
out
fldl
add
fldl
add
fiadds
add
fiadds
add
fiadds
add
add
pop
fiadds
add
add
fiadds
add
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
filds
add
filds
add
filds
add
filds
add
add
filds
add
add
mov
add
cwtl
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
loopne
add
add
sub
add
loopne,pt
add
add
data16
add
add
xchg
add
xchg
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
loope
add
add
push
loope
add
add
jb
add
test
add
mov
loope
add
loope
add
loope
add
add
add
loope
add
add
adc
add
and
add
xor
add
loop,pt
add
add
pusha
loop
add
add
xchg
add
cwtl
loop
add
add
int3
loop
add
loop
add
loop
add
loop
add
jecxz
add
jecxz
add
add
xor
add
inc
jecxz
add
add
fs
add
add
mov
add
mov
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
in
add
add
dec
in
add
add
push
add
jl
add
mov
add
cwtl
in
add
in
add
in
add
in
add
in
add
in
add
add
ds
add
add
pop
in
add
add
jle
add
nop
in
add
add
mov
in
add
in
add
in
add
in
add
out
add
out
add
out
add
add
add
push
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
pop
out
add
add
jbe
add
xchg
add
cwtl
out
add
out
add
out
add
out
add
out
add
call
add
and
add
xor
add
dec
call
add
callw
jp
add
xchg
add
xchg
call
add
mov
add
call
add
in
add
lock
add
or
add
sbb
add
add
add
or
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
add
jns
je
insl
add
fwait
add
jo
imul
je
insb
add
ljmp
jo
add
je
ja
jae
add
add
jb
outsl
insb
insb
add
add
imul
add
outsl
ja
outsl
ja
jb
add
add
imul
data16
add
gs
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
xchg
add
popa
insb
outsb
jne
add
add
jb
outsl
imul
sbb
ja
jae
popa
je
add
outsl
ja
add
fwait
add
jo
pop
arpl
insl
outsl
fs
loope
jae
arpl
data16
fildl
pop
popa
insl
jae
pop
gs
je
add
imul
add
je
push
add
popa
insb
je
insl
add
data16
add
or
gs
add
sub
arpl
arpl
add
add
outsb
add
sahf
add
jae
bound
gs
add
add
ja
arpl
data16
js
imul
ja
jae
arpl
add
jo
gs
push
add
arpl
inc
imul
pop
gs
je
sbb
jae
jo
imul
pop
arpl
imul
gs
jb
push
je
arpl
add
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
jb
pop
pop
addr16
popa
imul
pop
add
gs
jb
jb
add
and
arpl
jo
add
std
add
jb
outsl
jne
add
add
jb
outsl
jb
add
push
inc
push
push
cs
insb
add
inc
add
gs
outsb
push
gs
js
gs
imul
gs
ljmp
insb
gs
je
jb
bound
gs
js
add
pop
add
outsb
fs
imul
outsb
addr16
outsl
je
imul
outsl
outsb
push
add
mov
insb
dec
popa
insl
gs
imul
add
push
popa
insb
imul
add
inc
imul
inc
push
dec
outsl
je
imul
outsl
outsb
add
cmp
gs
push
inc
js
arpl
imul
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
add
outsb
fs
gs
inc
imul
popa
imul
je
jo
gs
bound
arpl
js
add
add
gs
popa
insl
gs
imul
insb
gs
je
je
add
add
je
popa
jae
inc
jb
outsl
jb
add
bound
inc
jb
add
or
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
js
push
gs
fs
imul
gs
push
dec
outsb
outsw
add
dec
popa
imul
outsw
add
add
je
outsl
arpl
gs
outsb
outsw
inc
add
push
add
fs
imul
js
add
outsl
add
je
imul
popa
je
add
incl
inc
gs
outsl
arpl
gs
outsb
outsw
push
add
rolb
je
arpl
push
add
repnz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
cmp
dec
jo
outsb
inc
imul
outsb
addr16
add
stc
add
inc
popa
fs
je
imul
add
add
gs
je
inc
jbe
outsb
je
add
insl
add
outsb
insb
outsl
arpl
imul
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
pop
add
insb
jae
gs
popa
insb
jne
add
jo
jb
popa
je
add
dec
add
insb
gs
jnp
inc
outsl
insb
fs
je
imul
push
gs
gs
outsl
outsb
imul
imul
add
imul
in
add
gs
je
push
push
add
rolb
inc
jb
popa
je
inc
imul
outsb
addr16
add
mov
inc
outsl
insl
jo
jb
push
je
imul
add
imul
gs
arpl
add
out
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
inc
add
faddl
push
gs
jb
push
push
add
gs
dec
outsl
add
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
inc
add
je
je
jb
jne
dec
outsb
outsw
push
add
add
push
popa
insb
imul
addr16
jb
jne
add
in
push
gs
outsl
insl
insl
push
imul
add
push
jns
je
insl
push
imul
insb
gs
imul
dec
outsl
jbe
inc
imul
add
jae
jb
insl
jo
inc
add
inc
gs
je
imul
inc
js
add
fldl
inc
jb
popa
je
dec
jne
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
jno
inc
gs
dec
push
xor
mov
inc
push
je
dec
push
add
fldl
push
gs
dec
inc
imul
jne
inc
outsl
outsb
je
popa
insl
imul
add
gs
je
dec
inc
push
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
push
arpl
outsb
add
inc
gs
popa
jo
outsl
fs
lahf
add
gs
je
dec
popa
insb
data16
outsb
gs
popa
insb
gs
gs
add
je
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
inc
imul
bound
imul
inc
js
push
gs
dec
jne
push
add
push
gs
dec
jne
push
add
dec
add
je
outsl
outsb
je
popa
je
add
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
insb
imul
inc
gs
gs
inc
popa
arpl
add
jnp
inc
gs
gs
inc
insb
imul
inc
jb
popa
je
inc
jb
jae
dec
outsb
imul
add
je
imul
add
gs
popa
jns
jne
add
popa
je
push
outsl
insb
imul
add
add
jne
inc
outsl
outsb
je
popa
insl
imul
add
popa
je
inc
imul
imul
xchg
inc
jb
popa
je
inc
imul
add
gs
je
push
outsb
add
popa
je
inc
dec
inc
push
arpl
outsb
add
addl
imul
add
inc
gs
gs
jb
jae
push
popa
insb
gs
gs
outsb
fs
add
jo
add
push
gs
dec
gs
imul
push
gs
insb
imul
je
add
lar
jb
popa
insb
imul
arpl
add
je
gs
inc
outsl
insb
outsl
jb
add
inc
outsl
arpl
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
add
je
dec
inc
imul
imul
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
bound
je
jb
arpl
add
add
jae
jp
push
popa
insb
gs
add
push
imul
add
add
arpl
gs
insb
imul
xchg
add
gs
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
insl
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
popa
je
inc
inc
push
add
popa
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
mov
inc
gs
imul
dec
jb
inc
js
add
dec
xor
cs
insb
add
jb
jns
popa
jb
je
add
ja
outsl
arpl
push
arpl
add
fs
insl
popa
addr16
add
mov
je
gs
popa
add
gs
jb
jns
outsb
jne
stos
add
ja
outsb
imul
arpl
mov
inc
gs
insb
addr16
jb
arpl
add
inc
arpl
popa
je
dec
gs
outsl
popa
jb
dec
popa
jns
jne
add
data16
je
imul
add
je
imul
js
inc
add
and
fs
outsb
jo
je
mov
imul
outsl
ja
jo
popa
je
add
mov
push
popa
imul
jne
dec
fs
add
dec
add
je
outsb
jne
sub
inc
gs
outsb
jne
adc
push
imul
outsb
outsl
ja
gs
popa
addr16
add
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
jae
popa
addr16
outsl
js
js
add
imul
je
jo
popa
je
push
outsb
add
mov
dec
outsl
popa
fs
outsb
jne
add
add
jo
outsb
fs
outsb
jne
add
inc
jb
popa
je
dec
arpl
dec
outsb
imul
insb
add
je
imul
outsb
addr16
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
cmp
arpl
popa
imul
outsb
add
addb
outsb
data16
popa
je
push
arpl
add
arpl
outsl
jo
jo
outsb
jne
add
gs
jae
inc
inc
add
add
outsb
fs
gs
popa
addr16
add
fildl
dec
outsl
jbe
push
imul
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
stos
add
fs
jne
jae
jb
add
push
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
xor
push
gs
insb
popa
jae
dec
outsl
outsb
addr16
add
inc
jb
popa
je
push
imul
push
add
outsl
outsb
imul
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
add
data16
je
arpl
scas
add
fs
jne
jae
jb
add
add
push
jae
push
imul
arpl
add
js
inc
gs
imul
js
push
add
push
add
je
insb
addr16
je
insb
dec
inc
add
mov
outsl
ja
jb
insl
push
outsl
imul
outsb
jae
jb
dec
outsb
jne
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
add
je
outsb
jne
je
insl
inc
outsl
jne
je
add
gs
arpl
push
add
add
push
imul
popa
jae
inc
js
add
ret
add
fs
imul
add
outsl
jae
inc
gs
je
jo
add
imul
jae
popa
addr16
add
out
dec
jo
outsb
inc
gs
je
jo
add
and
push
arpl
insb
insb
push
imul
add
mov
imul
xor
jb
outsl
dec
gs
push
add
xor
push
gs
popa
jb
je
outsl
jae
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
imul
jae
addr16
add
push
push
imul
add
gs
je
inc
imul
jb
insl
push
add
je
push
gs
imul
js
push
add
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
cmc
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
inc
gs
imul
outsb
addr16
add
fldl
inc
jno
popa
insb
push
arpl
add
je
arpl
insb
insb
push
outsl
jae
add
imul
imul
add
insb
insb
push
imul
dec
outsb
push
outsb
fs
gs
popa
addr16
js
pop
add
gs
je
dec
arpl
inc
jb
insl
push
gs
jne
arpl
add
inc
outsl
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
push
imul
outsl
arpl
add
bound
jbe
outsb
je
faddl
inc
outsb
jne
push
imul
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
cwtl
add
je
outsl
jns
imul
add
popa
jb
jb
jbe
add
add
outsb
fs
gs
popa
addr16
add
mov
inc
gs
jb
insl
gs
jb
arpl
or
push
imul
je
gs
add
add
je
jne
jae
jb
push
inc
gs
imul
add
inc
insb
addr16
je
insl
dec
outsb
je
sbb
arpl
gs
imul
add
add
je
outsb
jne
je
insl
dec
inc
add
outsl
addr16
outsl
js
popa
jb
insl
inc
add
arpl
outsl
push
push
outsb
outsl
ja
add
inc
push
outsb
jne
popa
imul
add
add
jo
imul
arpl
add
dec
outsb
push
arpl
cltd
add
inc
insb
addr16
jne
je
outsb
inc
push
add
mov
jb
outsb
je
inc
add
inc
gs
jns
je
insl
dec
outsb
jne
add
push
imul
popa
jae
inc
js
add
pusha
add
gs
je
dec
outsb
jne
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
dec
outsb
jne
je
insl
dec
outsb
outsw
push
add
mov
fs
outsb
jne
add
inc
gs
outsl
jo
imul
dec
add
je
jb
jo
add
cmp
push
gs
jne
jae
jb
outsl
jae
add
add
jo
imul
gs
js
add
jp
push
push
jb
je
add
imul
popa
jae
push
add
scas
add
fs
arpl
inc
add
add
je
popa
jb
je
outsl
jae
jnp
push
push
jb
outsl
jb
add
inc
gs
jne
dec
outsb
jne
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
push
push
inc
push
xor
cs
insb
add
push
dec
inc
dec
dec
xor
cs
insb
add
push
dec
push
jne
jns
push
push
inc
insb
inc
inc
push
in
inc
add
in
inc
add
or
dec
addr16
xor
dec
cmp
jp
cmp
dec
es
jae
and
dec
push
push
pop
push
cmp
dec
addr16
xor
dec
cmp
jp
cmp
dec
es
insl
dec
and
dec
push
bound
arpl
dec
bound
dec
jae
cmp
dec
xor
dec
push
jb
jae
orl
nop
jge
aas
dec
dec
xor
dec
ds
inc
dec
cmp
dec
xor
dec
push
sbbb
setae
jl
jge
aas
dec
dec
xor
dec
ds
inc
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
mov
or
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
mov
mov
ret
or
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
ret
psrlq
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
popa
dec
xor
dec
xor
dec
ds
xor
dec
push
loop
jecxz
repz
jl
jge
jl
jge
ds
jg
xor
dec
xor
dec
ds
inc
dec
cmp
dec
cmp
add
add
adc
jl
jge
aas
dec
add
outsb
jmp
inc
add
inc
add
in
inc
add
in
inc
add
inc
add
inc
add
in
inc
add
test
pushf
clc
data16
add
inc
add
inc
add
inc
add
inc
add
jmp
inc
add
in
inc
add
test
jb
inc
add
or
inc
add
fnsave
inc
add
inc
inc
mov
jne
mov
incb
mov
jmp
add
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
and
pushf
clc
sub
add
jmp
inc
add
imul
pushf
clc
popf
jmp
add
pop
jmp
add
add
inc
add
inc
add
add
add
inc
add
add
dec
add
dec
add
add
add
add
inc
add
add
dec
add
inc
add
add
dec
add
add
add
add
jmp
add
dec
pop
dec
inc
dec
inc
dec
pop
dec
inc
dec
add
dec
xor
add
pop
dec
pop
dec
add
dec
xor
dec
inc
dec
pop
dec
inc
dec
add
dec
xor
add
pop
dec
inc
dec
dec
dec
push
dec
inc
dec
pop
dec
xor
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jge
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
xlat
lds
ret
fidivs
into
mulb
push
sbb
jno
add
add
mov
das
shlb
rolb
inc
push
outsl
push
push
jmp
add
in
adc
jae
inc
jae
popa
push
pop
pop
outsb
jbe
jns
push
imul
je
jns
popa
push
push
push
dec
imul
popa
jp
arpl
push
imul
jp
jb
outsl
push
inc
inc
push
imul
push
jb
add
push
insb
pop
ja
je
bound
add
push
dec
je
push
jne
popa
jns
dec
push
dec
dec
pop
pop
dec
push
add
adc
push
jge
add
movl
dec
loop
mov
ja
xchg
out
pop
mov
shll
call
insb
jmp
insl
or
gs
add
jae
sub
push
push
adc
sbb
jg
pop
outsb
jb
cs
cmp
jb
mov
stos
add
xor
and
sub
push
sbb
mov
pop
push
insl
cmp
into
mov
push
in
xchg
loope
sub
cmp
dec
and
imul
pop
lret
das
and
nop
pop
jmp
push
cs
daa
or
jge
out
ljmp
cmpb
cmc
subb
dec
mov
push
iret
jb
jbe
test
cmp
xchg
push
xor
movb
in
sbb
in
stos
pop
hlt
xchg
pop
out
subb
sub
hlt
es
mov
dec
scas
lret
mov
inc
and
xor
test
hlt
arpl
inc
es
mov
fistps
or
and
insl
arpl
mov
les
repz
daa
lods
inc
addr16
or
lcall
add
loope
ss
out
cltd
cmp
push
cld
fdiv
xchg
inc
icebp
hlt
xchg
js
scas
out
pop
add
pop
f2xm1
adcb
shl
sub
leave
sub
jo
lahf
pusha
xchg
mov
frstor
sbbb
cmp
mov
sub
ror
in
shlb
cmp
lods
rorl
testb
adc
aam
es
aam
fwait
cmp
clc
xor
ret
dec
aaa
aad
push
mov
stc
out
sar
mov
or
sbb
addl
insl
push
imul
clc
js
ret
lods
movsl
mov
and
bound
mov
xor
add
or
dec
xor
test
cs
iret
cwtl
xor
dec
fsubp
push
jg
jmp
int3
mov
movsb
mov
jbe
mov
xlat
lret
lock
cmp
mov
bnd
popa
cwtl
roll
push
inc
aas
shl
sub
arpl
pop
push
inc
mov
push
sti
ret
inc
push
push
cmp
sub
notl
inc
rorl
adc
pushf
pop
add
sahf
mov
mul
rcrb
sub
iret
push
lret
cli
daa
mov
cmpsb
inc
mov
ret
or
xchg
mov
pop
dec
push
cmp
mov
cmp
jge
rep
sub
rorl
mov
clc
xchg
lea
nop
sahf
or
pop
xor
int
or
int3
mov
pop
stc
sub
xor
xor
pop
fwait
jmp
js
cli
dec
jo
div
inc
pop
push
jne
pushf
cmp
push
adc
cmp
mov
mov
or
sahf
popa
enter
lods
ret
cmp
cld
fs
iret
lods
push
out
cmp
cmp
pop
sbb
push
dec
sbb
inc
stc
push
loopne
dec
cmp
mov
outsb
xchg
out
push
ret
sbb
xchg
inc
xchg
data16
scas
mov
nop
aaa
or
pop
push
push
mov
imul
push
sub
add
in
ds
fldt
or
sbb
out
repnz
cmp
iret
sub
ret
add
jnp
xor
xor
mov
jae
jg
jnp
stc
inc
cmp
mov
mov
cmc
pusha
repnz
movsb
xchg
or
sarl
jb
mov
imul
jl
cmc
or
push
cwtl
je
lret
pop
pushf
mov
iret
add
stc
push
aam
movsl
into
lods
jl
in
pushf
ficomps
mov
lret
inc
xor
pop
push
hlt
jb
sbb
adc
jns
push
dec
pop
hlt
sub
jp
jg
test
imul
movsl
push
imul
cld
call
sbb
movsb
into
into
mov
jns
pop
mov
ss
add
add
shrl
movsl
sbb
test
lea
adc
lds
je
stos
fld
mov
pop
dec
andl
repz
add
push
push
add
inc
cmpl
test
pusha
pop
loope
cmp
mov
push
imul
cmpsl
cmp
pop
gs
aaa
aaa
jae
or
ljmp
or
dec
enter
cmp
sbb
scas
ret
pop
push
xchg
repz
pop
adc
push
xchg
testb
in
pop
xchg
xor
imul
and
pop
clc
lret
lahf
ficoms
gs
and
sub
or
aaa
mov
hlt
or
test
cmp
addb
rolb
bound
cmc
jae
cmpl
out
push
aam
test
and
adc
sub
jae
xchg
sbb
xchg
lock
les
in
pusha
lock
repz
das
push
pop
mov
repnz
push
das
aam
lods
dec
mov
push
or
lea
mov
inc
jb
sub
xchg
mov
pushf
pop
mov
enter
insl
mov
jge
and
mov
call
or
mov
sahf
xchg
ret
pop
js
std
sub
sahf
cmp
ja
mov
fs
jp
cld
cmc
mov
pushl
ljmp
add
sub
jg
mov
xchg
iret
mov
mov
add
sub
jl
cmpsb
or
cmp
mov
clc
xchg
rdmsr
aas
mov
cmp
add
mov
orl
jne
xchg
in
repnz
movsl
ljmp
int3
in
lahf
dec
ret
xchg
mov
push
stc
adc
dec
add
add
add
push
dec
dec
inc
pop
inc
pop
pop
shrb
adc
xlat
push
rolb
add
add
jl
sbb
fistpll
pop
arpl
mov
cmp
leave
jecxz
xor
adc
pop
js
add
adcb
xor
cltd
shll
rol
inc
pop
sub
dec
aaa
dec
out
push
loope
jmp
and
mov
test
sub
cmpsb
pop
push
sbbb
mov
push
mov
mov
outsl
test
stc
cltd
or
mov
in
push
movsb
jp
add
sub
lods
cmp
cmpsb
enter
adc
popa
mov
mov
ss
je
shl
lds
mov
xchg
or
testb
jno
sub
push
jae
lods
add
sub
outsl
push
xchg
inc
inc
adc
add
inc
movsb
lret
jno
mov
and
mov
sbb
neg
mov
movsb
nop
and
pop
cmp
addr16
mov
dec
mov
push
aas
jne
xor
jmp
pop
call
outsl
mov
add
ficoms
into
inc
dec
scas
aad
sub
das
mov
xchg
nop
es
aad
cmp
lret
jno
lods
gs
out
mov
dec
mov
push
pop
decl
push
out
iret
cmp
cmp
call
imul
data16
cmp
sarb
out
jb
into
int3
sbb
push
pop
sbb
or
ss
cmp
mov
jle
push
pop
cmc
and
dec
mov
xchg
and
cltd
sub
pop
shlb
cli
es
mov
std
mov
mov
adc
push
mov
xchg
cs
mov
push
out
jno
mov
xchg
or
mov
mov
xor
xchg
mov
mov
lret
cmp
push
movsb
dec
mov
aaa
cmp
pop
insl
cmc
lret
ret
xor
outsb
and
jo
jmp
mov
adc
dec
in
aaa
stos
iret
or
xchg
xchg
cli
push
push
test
fidivs
sahf
mov
jmp
push
mov
jge
cli
adc
xor
addr16
outsl
in
je
sbb
xor
pop
nop
cltd
aam
inc
inc
xchg
movsb
mov
js
sub
push
int3
xor
mov
in
xchg
outsb
mov
pop
adcb
add
and
sbb
jle
arpl
and
xchg
outsl
inc
inc
pop
jnp
push
adc
pop
mov
cmp
dec
cmc
popa
mov
ja
and
sbb
cmc
jns
scas
js
cmp
xorb
and
mov
adc
mov
xor
add
cli
push
dec
push
sbb
dec
cmp
lods
out
lods
and
imul
aaa
xor
sub
push
aam
lret
add
scas
add
cld
cmp
aam
sbb
mov
pop
xor
and
mov
dec
stos
lea
adcb
call
jne
movsb
call
mov
adcb
dec
das
adc
cmp
loop
jmp
push
push
jge
loop
push
pushf
ljmp
pushf
addr16
iret
mov
movsl
jno
sub
cmpsl
dec
xchg
clc
notb
sbb
les
bound
faddp
push
movsb
mov
out
mov
mov
fistps
movsl
scas
jg
push
bound
ljmp
scas
dec
ss
add
inc
lods
adc
push
rclb
jns
fcompl
dec
push
lret
xchg
inc
ds
mov
fs
enter
imul
fldcw
shlb
inc
xor
xor
out
pop
dec
lock
adc
pop
mulb
iret
adc
add
es
add
scas
ret
xchg
push
cmp
jno
insb
cs
push
mov
js
popf
push
sbb
xchg
out
add
dec
leave
or
mov
add
scas
insl
es
mov
xor
sbb
enter
mov
jns
push
mov
lret
imul
pusha
stos
dec
mov
xlat
mov
add
ja
dec
aad
pop
mov
xchg
push
sbb
repnz
aas
cmp
in
jne
loope
es
sub
sub
or
movsb
mov
mov
inc
lcall
orps
fldl
adc
dec
mov
rclb
repnz
jnp
xchg
scas
das
out
in
jno
cld
mov
push
nop
add
jle
lods
cmc
popf
scas
test
mov
xchg
imul
rcrl
xchg
loope
add
mov
mov
repz
add
push
dec
es
cltd
outsb
xor
imul
mov
pop
leave
pop
sub
nop
imull
repz
fsubl
test
push
or
outsb
xor
pop
jl
aad
insl
mov
cmp
out
xor
fwait
sub
push
cmp
push
add
out
mov
xlat
add
daa
int3
lcall
jp
lea
ja
cmp
pop
jne
add
cwtl
sub
iret
stos
stc
loopne
sub
scas
cmp
inc
mov
add
leave
in
stos
subl
xchg
sahf
scas
icebp
pop
xchg
nop
xchg
xchg
in
xchg
test
out
shr
mov
dec
add
movsl
or
mov
and
outsl
je
mov
fidivrl
loop
jecxz
roll
inc
scas
scas
cli
jo
pop
jne
out
add
xor
mov
xor
stos
and
lods
loop
pop
xchg
sbb
push
add
cmp
out
xchg
pop
fdivrs
push
std
in
inc
adc
jl
jge
mov
cmp
int3
or
or
pushf
imul
mov
add
cs
push
cld
stos
pop
lods
fimull
and
pop
sbb
sahf
shr
nop
mov
mov
inc
mov
std
lahf
sub
mov
movsl
inc
add
mov
mov
or
pop
jb
sbb
push
add
add
add
pop
dec
dec
push
pop
push
pop
dec
mov
dec
push
js
iret
ficoml
add
add
mov
xor
inc
ret
push
call
pop
repz
or
iret
push
cld
out
ret
push
add
ljmp
or
mov
movsb
jg
loopne
and
lahf
dec
jb
inc
loop
mov
ljmp
lods
push
je
xchg
or
sbbl
inc
cmp
insl
lock
and
fbld
sub
dec
push
aam
cmc
dec
idiv
jle
fs
pop
jge
shl
add
rorl
or
cpuid
xor
mov
pop
sarb
enter
in
mov
xchg
mov
push
ficompl
jmp
add
out
pop
sub
cs
sub
pop
sub
adc
mov
stos
push
leave
sub
or
aam
ror
lock
or
insl
in
cmc
das
fildll
mov
mov
lret
popa
sti
pop
adc
addr16
lock
add
daa
out
lcall
test
inc
xchg
sub
outsb
loopne
inc
out
cmp
cmp
ret
mov
mov
push
je
dec
repnz
lret
jnp
jge
pop
adc
inc
cmp
andb
test
xchg
jb
jns
sbb
mov
sarl
rep
sbb
fildll
push
out
cmp
push
push
sbb
sub
mov
lcall
js
pusha
xchg
loope
pop
jbe
push
mov
movsl
jmp
push
jne
mov
xchg
adc
nop
push
movsl
aas
pushf
sub
adcb
cwtl
jge
iret
mov
push
lcall
js
sbb
dec
int
cld
add
xor
push
push
cmp
ja
push
in
xor
xchg
ret
pop
daa
mov
stos
jmp
aaa
xchg
aad
jae
inc
movsl
in
cmp
mov
loope
xchg
movsl
cmpb
xchg
fnsave
push
leave
aam
arpl
mov
pop
mov
test
push
xchg
aad
sub
movsb
jo
lea
in
push
cmpb
adc
int3
cmp
inc
ret
popa
pop
cltd
lds
inc
js
pop
add
dec
icebp
shl
outsl
lds
dec
aam
dec
push
cmp
xor
mov
fs
shlb
mov
je
sbb
cltd
imul
fistpll
jecxz
jmp
shll
xlat
push
ret
imul
xor
and
daa
sub
push
push
or
cmp
inc
pop
ret
cld
sub
mov
jno
sarl
aas
daa
pop
adc
ja
and
ss
jne
adc
je
shrb
lods
pusha
and
insl
cmc
fwait
mov
ret
nop
repz
lret
and
mov
pushf
inc
adc
mov
in
add
push
mov
bound
rol
popf
insb
xor
in
fnstsw
pop
imul
fmulp
pop
mov
mov
adc
sbb
js
xchg
inc
mov
cmp
je
aaa
fwait
dec
mov
adc
adcl
cltd
sub
jge
in
sub
cmp
pop
jp
outsl
loope
int3
out
dec
cmpsl
adc
hlt
leave
sbb
out
xor
jne
gs
das
jg
jnp
cmp
cmpsl
sbb
jg
ljmp
fisubl
sub
fstl
ljmp
icebp
sti
push
and
lret
xchg
ret
mov
out
push
icebp
sti
push
repz
insb
mov
jp
ds
cmp
ja
in
jnp
push
testb
into
mov
into
jle
pushf
sti
push
pusha
daa
in
mov
dec
inc
push
hlt
jnp
mov
rclb
popa
pop
fisttps
add
std
dec
xor
cmp
add
out
sub
insb
dec
test
mov
cmp
sub
sub
xor
lcall
popa
movsl
add
adc
push
mov
cmpsl
jle
pop
mov
notb
inc
imul
popa
lcall
push
mov
or
sbb
cmpsb
adc
in
adc
mov
in
repz
aaa
lods
call
out
test
push
xor
daa
shll
cmp
push
pop
adc
push
lock
xchg
push
rclb
aaa
push
sbb
jl
icebp
dec
xchg
inc
inc
jnp
jge
pop
inc
xchg
mov
pop
cmp
dec
popf
cli
shrb
fnsave
cli
adc
mov
into
gs
lret
inc
enter
arpl
jl
jg
dec
add
ja
mov
fwait
pop
add
lods
jb
pop
fldl
lea
fimuls
repz
sub
cmp
mov
ljmp
nop
adc
faddl
jb
je
movups
leave
popa
add
inc
data16
int3
jb
sub
sahf
sbb
sbb
jne
fwait
push
and
cmpsl
sub
push
outsl
xchg
push
out
dec
ss
sbb
mov
sub
jnp
pop
jmp
inc
inc
xchg
in
daa
mov
sahf
adc
dec
dec
jno
fwait
cmp
jo
xor
pop
shr
jle
aaa
push
cmpsb
jns
sbb
pop
jge
div
cmp
inc
adcl
mov
dec
and
cmp
push
dec
and
push
ds
loopne
push
add
pop
popf
add
lods
fstp
arpl
movsl
adc
pop
jbe
shll
lret
or
sub
jne
mov
aas
push
std
cs
push
dec
sbb
rcrb
loop
enter
sub
repz
aas
fwait
cmp
cmpl
mov
push
mov
mov
inc
adc
sbb
lock
sub
add
add
add
inc
dec
dec
pop
pop
push
sub
xchg
ds
nop
add
addb
add
das
int
arpl
lret
push
rcrb
sti
mov
and
leave
xchg
enter
cwtl
or
or
or
fs
add
push
or
xor
jno
mov
jnp
lods
mov
ja
push
inc
pop
pop
movsb
lcall
dec
addr16
in
aas
paddd
leave
fdivl
leave
rcll
fwait
out
std
imul
movsl
fiaddl
inc
xchg
fucomp
in
hlt
xor
shlb
jmp
test
pusha
ja
mov
repz
xchg
movsl
lock
call
inc
cltd
mov
addb
cmp
mov
pop
sbb
mov
sbb
test
xchg
dec
push
dec
push
les
dec
and
repnz
push
inc
faddl
xor
lods
cmpl
stos
cmpsl
push
sbb
je
icebp
dec
lds
fldenv
mov
xor
notl
and
insb
inc
andb
jmp
lcall
mov
mov
or
push
sub
and
xor
jge
test
pop
and
jne
add
cmc
lods
xor
push
sbb
stc
shlb
push
cmpsb
push
test
mul
cmp
jae
jns
sub
mov
pop
and
xchg
cwtl
add
addr16
cmp
mov
inc
add
add
jecxz
popl
call
pusha
out
ljmp
dec
and
pop
data16
lretw
nop
dec
jecxz
in
mov
and
xchg
adc
clc
aaa
daa
popa
pop
dec
or
pop
notl
fcmovu
decb
inc
jg
mov
jp
lahf
and
pop
jmp
push
dec
xchg
cmp
lods
sub
orl
xor
gs
lds
adc
call
iret
cmc
inc
fidivrl
es
cmc
add
ljmp
and
jo
xor
pop
mov
adc
sbb
pop
mov
push
sub
cmp
sub
sub
lcall
pop
jb
aas
mov
adc
cmp
add
mov
and
fcmovne
adc
cmp
xchg
in
cmp
shll
push
aas
movsl
mov
icebp
xchg
and
mov
push
push
mov
pop
popa
fsts
and
punpckhdq
call
cmp
rcrb
pop
aad
xorl
popa
xorl
sub
or
xchg
and
xor
cmp
lcall
ss
lods
imul
sti
mov
adc
mov
scas
pop
adc
scas
call
dec
pop
add
or
cmpsb
mov
sbb
call
or
push
pop
testb
xchg
or
adc
out
lcall
fidivl
test
cmp
cmpsl
sbb
stos
iret
lock
mov
test
lret
stos
lret
push
lret
sub
inc
jno
mov
mov
ret
stos
and
jae
mov
xchg
fdiv
sbb
lock
sahf
aaa
inc
and
test
scas
sub
mov
cmpb
pop
jg
mov
stos
loop
dec
inc
or
mov
inc
add
sbb
xor
mov
test
push
stos
pop
rorb
push
jmp
mov
push
jle
cwtl
subb
ret
push
xchg
and
add
lret
mov
pushf
aas
mov
arpl
dec
rcl
repz
jns
cmpl
lods
cmp
or
xor
or
mov
dec
test
std
xor
aaa
mov
cmp
addr16
or
pop
push
loop
jg
hlt
push
aad
mov
je
int3
nop
xchg
lea
data16
insb
int3
jbe
icebp
and
cwtl
inc
xlat
and
mov
jnp
icebp
in
jle
mov
mov
scas
clc
ja
rcrl
adc
sbb
push
push
out
mov
cld
xor
sub
mov
es
xchg
sbbl
jmp
sahf
ret
pop
push
adc
ljmp
les
pop
insb
into
jmp
andb
bound
adc
outsb
jle
popa
xchg
and
into
adc
xorl
cmpl
aam
mov
pop
cmpsl
into
pop
pop
cwtl
fidivrs
jge
or
inc
idivl
pop
pop
in
add
loop
adc
sub
or
gs
in
ljmp
scas
rorl
jb
mov
push
cli
repz
inc
xlat
popf
xchg
push
out
test
dec
adc
aam
call
inc
mov
aam
iret
push
sti
loopne
xor
jo
mov
mov
dec
sahf
add
sbb
repz
cmp
fdivrl
xchg
fcomp
dec
test
cmc
sbb
mov
and
scas
inc
js
mov
dec
lahf
mov
adcb
stc
popf
mov
je
addb
out
adc
cmp
and
mov
mov
jne
dec
out
push
add
inc
fisubrs
mov
outsl
xchg
test
mov
loopne
pusha
cmp
enter
and
stos
fimuls
and
pop
sbb
stos
add
mov
shll
out
shl
jb
cmp
scas
mov
or
leave
xchg
stos
jle
mov
fstl
fcomip
fsubr
fidivl
inc
xor
jns
lods
mov
imul
enter
icebp
inc
movsl
imul
add
add
add
inc
dec
dec
dec
dec
dec
inc
dec
sub
test
sbbl
add
cmp
add
adc
mov
cmp
sub
or
mov
or
lds
repz
mov
jp
push
jne
fbld
mov
dec
and
inc
fsubs
mov
push
jmp
js
movsb
aam
adc
sub
push
fadd
lahf
jae
cwtl
mov
or
add
aas
sahf
fucomp
cmc
mov
xchg
jno
lahf
sub
test
mov
sbb
lods
push
push
out
mov
loopne
loopne
scas
jo
ljmp
out
fldcw
or
push
mov
repz
xlat
sub
sahf
mov
or
cltd
xor
jecxz
imul
mov
jle
popa
mov
sub
cmp
sbbb
fildll
iret
rol
mov
inc
faddl
push
add
push
test
adc
jp
mov
jmp
gs
lahf
dec
popf
dec
adc
adc
cmpsb
aam
jmp
inc
aas
stos
popf
fsubrs
pushf
cmp
scas
jecxz
lret
xor
out
sahf
rcr
lea
push
out
outsl
cmc
int3
aad
insl
push
xor
movsl
sbb
mov
bound
cmp
inc
mov
jmp
pop
cmp
repnz
shll
add
cmpl
lret
pop
mov
sarl
orb
lea
cs
adc
or
lods
insb
sbb
jecxz
jnp
icebp
fmull
rcll
repnz
add
jns
jle
stos
mov
in
ljmp
int3
and
push
and
xor
sbb
adc
test
cmp
orl
sub
das
cmp
mov
rcrl
mov
test
iret
repz
lahf
push
jne
fldl
mov
adc
pop
and
xchg
jb
add
cmp
sbb
and
orl
and
push
call
out
lds
out
ljmp
xchg
addr16
pop
ja
pop
nop
xchg
push
loope
or
fists
push
pop
stos
pop
mov
out
inc
test
gs
pop
ret
dec
xor
das
jmp
in
std
mov
fimull
negb
push
pop
shll
xlat
pop
popf
scas
jne
mov
cmc
popa
ljmp
les
and
imul
jo
lea
add
pop
das
push
lret
fstp
pushf
outsl
mov
fmuls
jne
push
xor
fs
test
push
nop
out
jmp
sbb
cmpsb
mov
dec
sub
xorl
xor
jle
jl
push
aad
mov
mov
xchg
adc
mov
outsb
ret
add
and
adcb
mov
mov
and
xlat
addl
in
sub
and
mov
popf
int3
jbe
movsl
std
in
mov
sbb
mov
cmpsb
repnz
dec
and
lret
xchg
mov
and
sub
push
int3
sbb
lods
pop
adc
inc
jbe
enter
pop
push
cld
cmp
pusha
shll
jb
mov
cmpsb
mov
push
sub
push
hlt
jnp
jnp
lcall
mov
daa
push
and
mov
cmp
ret
xchg
fcmovbe
and
je
adc
lea
dec
pop
lret
adc
jb
jp
add
rorl
xor
inc
pop
inc
stos
dec
enter
lahf
and
mov
stos
into
dec
push
int3
outsb
cld
and
adc
or
xlat
mov
mov
ljmp
or
mov
mov
scas
push
leave
xchg
jns
in
cmc
mov
repz
sub
xchg
sahf
mov
test
jns
icebp
push
rol
push
fdivrs
loop
sbb
insl
sub
add
pop
insl
popa
gs
xor
clc
pop
mov
push
fucom
jp
fstpt
fldt
xchg
push
fwait
inc
pop
stos
inc
inc
mov
test
mov
cld
mov
xchg
es
push
pop
arpl
jg
je
dec
pop
ja
lret
repnz
and
into
shrb
sahf
jae
popa
dec
stos
mov
cltd
fadds
push
dec
test
cmp
enter
xchg
cmpsl
lret
pop
or
into
cltd
ret
jp
and
cltd
xor
cmp
out
hlt
or
push
sub
jns
mov
aaa
xor
push
jge
pop
es
iret
jb
mov
ljmp
clc
xchg
push
mov
mov
daa
push
jg
xor
fdivr
cwtl
in
pushf
xor
or
inc
add
xchg
in
stc
push
leave
sbb
daa
mov
dec
mov
jns
inc
pushl
pop
add
std
into
push
inc
jne
mov
pop
enter
sub
in
mov
mov
and
cmc
fwait
jbe
scas
mov
out
aad
cs
mov
cltd
test
dec
mov
mov
xchg
add
fldt
std
js
xchg
sbb
std
popa
jge
jo
add
mov
jle
or
cmp
inc
xlat
aaa
movsb
xchg
jns
test
loop
insb
sub
repz
aam
aad
xor
out
in
in
out
xchg
idiv
xlat
lods
mov
mov
xchg
lods
add
shrl
cs
or
loope
shl
in
mov
pusha
shl
sahf
pop
lods
mov
sbb
and
or
mov
and
mov
xorb
inc
jo
dec
lea
ds
addr16
lcall
sti
cmpsb
xor
test
or
cwtl
lods
mov
fistpll
mov
sbb
lcall
out
and
scas
repnz
add
add
push
dec
inc
push
pop
pop
push
dec
cmp
or
sub
push
add
in
mov
stos
add
dec
push
mov
into
cmp
push
mov
ljmp
adcb
and
jg
rcrl
test
xor
cmp
stos
mov
js
mov
movsb
rorl
sub
test
jbe
imul
clc
fs
jnp
cmovge
jg
mov
xor
and
or
loop
andb
sbb
clc
repz
adc
inc
out
push
push
icebp
cmpsl
jecxz
mov
mov
out
jb
ret
fstl
test
lea
je
dec
movsl
push
ljmp
enter
cmc
std
cwtl
aam
adcb
outsb
je
sub
imul
adc
inc
jb
xchg
jmp
add
outsl
push
add
psrlw
mov
sbb
jo
idivl
adc
in
and
inc
roll
pop
lods
or
inc
in
mull
cmp
sub
sti
push
hlt
inc
shlb
pop
mov
adc
lret
stc
pop
sti
cld
dec
rorb
ljmp
dec
sti
mov
loop
dec
out
cmc
dec
lcall
pop
stos
rcl
jecxz
sbb
jns
inc
add
cmp
test
pop
orb
rorl
dec
inc
ret
aas
je
jg
test
mov
hlt
jo
arpl
test
xchg
mov
movsl
lock
or
js
add
push
fsubr
cli
rcl
mov
mov
pop
inc
in
push
fimuls
repnz
push
push
lret
sbb
outsl
mov
lea
call
enter
and
es
mov
push
pushf
lods
sbb
outsl
or
mov
or
nop
lock
add
adc
mov
mov
push
add
cmpsb
data16
rorl
neg
add
imul
or
inc
dec
adc
sub
or
out
jecxz
adc
arpl
mov
add
xlat
sub
lret
sub
ret
mov
call
or
pop
mov
rcl
push
iret
cltd
insb
xor
push
in
ja
xchg
data16
cmc
andl
daa
adc
cld
daa
daa
xor
je
push
sub
outsb
mov
loope
fcomps
or
cmp
repz
xor
mov
or
xchg
in
mov
rcll
add
pop
loopne
rorl
jbe
outsb
mov
popa
adc
cld
pop
rorl
cmpl
mov
and
add
sbb
cmpsl
leave
pop
rcrb
test
push
lock
cli
ljmp
pop
dec
and
mov
idivb
idivl
data16
jle
xor
loopne
enter
imul
xor
outsl
rorb
add
popf
test
inc
cmp
clc
loopne
push
push
and
and
or
in
sbb
cmp
pop
jae
out
sbb
ss
pop
int3
in
pop
je
sbb
jl
cmp
mov
cli
or
push
mov
cmp
mov
ds
or
ret
dec
gs
std
bnd
aam
nop
xor
out
test
mov
sub
or
adc
mov
push
lea
sti
ljmp
pop
insl
dec
pop
jl
cmc
sub
pop
pop
xor
popa
test
ret
les
adc
mov
xchg
mov
loopne
rolb
and
xorb
imul
jae
fcomi
xchg
outsl
lods
out
xchg
sbb
stc
push
lea
fwait
xor
hlt
lret
jle
mov
out
mov
push
seta
jp
aad
testl
orl
pop
lds
push
pop
in
mul
imul
std
jge
jno
repz
xor
jmp
mov
ljmp
aad
in
nop
std
or
stc
xor
shll
popf
adc
mov
push
mov
push
es
cltd
push
push
mov
out
xor
xor
rcll
in
cmp
stos
subl
scas
jnp
xor
cmp
out
add
shrb
pop
jb
or
cld
test
int
adc
jle
xchg
lret
cli
mov
cmp
push
pusha
fisttpll
add
dec
sbb
mov
shl
inc
sbb
repz
subl
mov
jmp
cmp
xor
repz
out
cltd
notb
in
dec
in
mov
pop
mov
dec
fstps
ss
mov
std
sbb
lret
out
sbbb
or
mov
jno
cmpsl
mov
fisubrs
xchg
leave
and
jp
mov
and
jl
push
test
fildll
into
or
in
add
scas
jo
cmp
mov
cmp
int
sahf
cli
movsb
sbb
stos
loopne
push
sub
pop
dec
in
mov
adc
mov
inc
inc
testb
nop
arpl
call
sbb
cmpsl
xchg
pop
data16
inc
or
loope
adc
xchg
jle
lods
ja
sarl
or
arpl
in
inc
push
les
xor
ffree
dec
adc
mov
cmpb
call
and
lds
repnz
aaa
les
test
movsl
jle
cwtl
or
iret
lods
or
cmpsb
in
and
mov
repz
clc
repz
dec
pop
in
xchg
fiaddl
fstpt
incb
mov
jmp
xchg
ffreep
jge
adc
mov
lds
fcompl
adc
fwait
negl
stc
adc
sbb
adc
and
cltd
and
popf
test
mov
adc
mov
pop
sti
jl
push
mov
add
add
push
pop
dec
inc
dec
push
pop
pop
push
inc
cmp
negb
add
in
mov
jno
sarl
xchg
pop
hlt
insl
cmp
pop
mov
out
out
in
pop
in
mov
nop
in
das
inc
movsb
jp
into
sub
cmpsl
fwait
xor
iret
imul
adc
sbb
mov
dec
mov
ljmp
out
mov
or
jb
gs
stos
ror
jmp
repz
jmp
loope
dec
add
dec
inc
int3
out
pop
push
pop
dec
push
add
cmc
lds
sahf
mov
lock
lahf
sbb
sbb
cmp
mov
aad
pop
pop
mov
sahf
mov
ljmp
icebp
push
or
sbb
jnp
jmp
lods
dec
sbb
test
jecxz
dec
ror
insb
mov
xlat
clc
pop
ja
push
scas
push
outsb
popa
rorb
ja
cmp
jecxz
sbb
in
adc
xchg
adc
jns
in
inc
imul
lret
pop
push
in
push
adc
out
movsl
fisttpll
push
cmpsb
stc
pop
test
fmulp
shl
stc
pushf
loopne
cs
cmp
xor
push
fadds
xchg
mov
inc
popf
push
pop
mov
out
shlb
cltd
xchg
fsubrl
xchg
xor
aaa
or
imull
add
jmp
jae
packuswb
cld
dec
lods
popf
out
divl
inc
push
jnp
imul
adc
into
loop
pop
xor
cmp
or
jo
mov
or
add
cmc
xchg
sbb
stc
js
push
outsl
cmp
dec
xor
lcall
jae
or
sbb
decb
sub
mov
or
pop
shrb
nop
xor
jb
lahf
mov
mov
pop
test
scas
push
rcrl
sbb
jle
pop
pop
pop
jg
negl
mov
sub
dec
jg
dec
dec
cmpl
loop
xchg
cwtl
or
call
pop
imul
xchg
or
pop
mov
test
stos
test
xor
mov
pop
sahf
push
mov
fdiv
jns
mov
mov
xchg
mov
loop
cli
cmovns
out
adc
lcall
mov
mov
ss
pop
push
jns
inc
hlt
int3
hlt
int3
int
sub
pop
adc
movsb
das
mov
sar
mov
outsb
movsl
dec
xor
xchg
sbb
les
sti
xor
mov
leave
pop
sbb
mov
daa
ret
js
sbb
dec
fadd
subb
mov
call
out
jl
mov
or
or
lcall
xchg
stc
sbb
js
arpl
insl
pop
shl
lds
divb
or
int3
cltd
mov
adc
imul
cmp
jmp
in
mov
push
pusha
jmp
in
fists
aad
mov
sub
icebp
jecxz
mov
sahf
xchg
cmove
leave
rorl
inc
or
es
enter
inc
jae
clc
nop
xor
sbb
test
js
ja
pop
repz
sti
std
mov
test
sar
push
jbe
fs
ds
sub
fdivrs
ds
std
fcmovbe
fdivrl
stos
sbb
jmp
xchg
mov
mov
popf
daa
nop
flds
and
push
xchg
ja
outsl
pop
or
inc
push
xchg
hlt
cmp
pusha
xor
xchg
mov
mov
pop
mov
ja
cli
negb
jmp
fisttps
xchg
push
push
loop
push
xlat
ret
dec
xor
imul
dec
in
cld
negl
xchg
sbb
imul
push
mov
and
cld
and
mov
jbe
pop
and
test
lahf
dec
in
xor
imul
cmc
cmp
jle
cmovs
pop
sub
test
pop
mov
aaa
xor
xchg
popf
jge
ret
mov
insb
mov
sbb
into
pusha
add
pop
loop
jns
sbbl
jno
xor
inc
push
and
pushf
addb
push
inc
fwait
test
xchg
mov
out
sbb
mov
inc
add
out
mov
or
mov
jbe
aas
pop
jno
adc
xor
mov
jmp
mov
push
xchg
in
lret
cmpsb
pop
add
add
cmp
lahf
sub
mov
les
or
xchg
std
frstor
in
inc
jb
jg
call
imul
js
lahf
sbb
fsubrs
incl
push
divb
mov
lret
dec
lahf
call
out
pop
dec
call
pop
rcr
add
lahf
adc
stos
adc
arpl
sahf
jne
cmpsb
push
xchg
lods
adc
ds
or
addr16
and
std
lret
xlat
adc
jl
adc
rcll
rcl
cmp
cmp
push
pop
addr16
mov
pop
xchg
push
jbe
ljmp
mov
repz
loope
mov
xchg
leave
mov
jg
push
test
push
push
jo
cs
aad
ss
scas
push
dec
xor
pop
sub
insb
lcall
int3
sub
mov
sarl
mov
jo
clc
mov
pop
aas
adc
adcl
test
mov
cmp
out
sbb
cmpsb
mov
int
or
loopne
jmp
pop
jnp
fsubr
in
mov
jmp
xchg
imul
xor
inc
add
data16
and
cwtl
orb
dec
push
mov
or
adc
test
add
pop
repz
push
sbb
movsl
jnp
rorl
mov
lods
sbb
jnp
add
add
add
push
inc
pop
pop
pop
pop
push
dec
mov
and
stos
add
addb
add
movsl
sahf
mov
add
arpl
in
xchg
subl
and
scas
or
xorl
adc
addr16
mov
or
test
imul
sbb
cmovne
stos
in
fs
or
sti
xlat
enter
lods
fimull
jb
mov
push
add
in
loopne
hlt
xor
data16
inc
push
or
xchg
std
sar
mov
sti
cltd
sbb
mov
js
dec
outsb
lahf
add
sub
sub
mov
jnp
push
sbb
mov
shl
push
inc
es
fdivrp
fcmovnbe
dec
and
or
sbb
adc
mov
mov
mov
and
fnstsw
dec
jo
push
adc
das
fldl
test
out
sub
sub
inc
subl
mov
fisttps
pop
xor
dec
jnp
sub
pop
out
outsb
dec
xlat
stc
cmpb
push
ljmp
jecxz
pop
sbbl
ret
imul
pop
push
repnz
push
jmp
push
push
xrelease
adc
mov
cmp
add
dec
fwait
xor
orl
outsl
loopne
xchg
mov
iret
lret
out
enter
fcompl
mov
popw
jl
fdivrl
cmp
sbb
aaa
pushf
rcr
pop
fwait
inc
lock
mov
push
in
clc
call
jecxz
mov
xor
sti
and
outsl
mov
es
push
pop
sbb
std
or
out
in
in
hlt
sbb
sbb
es
sti
test
sub
add
pop
fwait
repnz
inc
call
mov
lock
mov
popf
js
jg
cli
sub
ret
sbb
cmp
pop
pop
adc
pop
mov
cs
mov
stos
nop
xlat
xchg
out
rclb
mov
mov
mov
push
daa
cmpb
stos
sub
pop
std
pop
jg
in
dec
stos
movsb
shlb
notl
fmull
int
lods
sub
xchg
pop
xor
andb
mov
pop
sbb
aas
pop
sbb
and
or
in
jp
xchg
xor
std
pop
cmc
aas
int
push
movsl
add
pop
push
decl
adc
inc
out
hlt
dec
les
push
cwtl
xchg
fsub
bound
mov
mov
sahf
mov
mov
and
lahf
mov
shlb
mov
dec
scas
mov
mov
scas
fnsave
cmp
and
cmp
add
or
jecxz
jae
pop
lods
in
ret
popl
in
inc
pop
aam
lock
push
sahf
jl
xchg
mov
adc
inc
inc
xchg
xor
repnz
sub
adc
push
jae
jno
je
ljmp
xor
lds
ds
ljmp
mov
clc
cwtl
push
jb
in
push
pushf
xor
lret
lock
pop
mov
xchg
xlat
je
jns
sbb
inc
and
dec
loope
lcall
sbb
in
xchg
cltd
mov
movsl
idiv
repnz
sti
sbbl
xor
xchg
addr16
dec
inc
lahf
mov
sti
int3
ljmp
fs
and
adc
sti
xchg
pop
lcall
jno
jg
sar
push
mov
loope
add
rcrb
push
jp
add
xchg
or
imul
inc
mov
dec
ss
mov
jno
push
dec
mov
movsl
imul
stos
jno
icebp
shlb
lds
dec
testb
loop
fbstp
aam
nop
or
adc
xchg
fdivp
sahf
lds
sub
mov
mov
cmp
cmpsl
clc
fisubs
mov
stc
cwtl
subb
loope
cmc
outsb
mov
cmp
leave
stos
gs
jb
aad
scas
or
call
cwtl
cmpsb
pop
pop
push
jne
into
mov
push
dec
sti
mov
xchg
icebp
xor
rolb
lret
sub
mov
das
sahf
std
decl
cmpsl
scas
cli
outsb
cld
cmp
cli
lock
adc
pop
mov
mov
aam
or
cli
in
inc
push
or
inc
dec
dec
sbb
sti
fstp
mov
fcoms
in
sbb
in
dec
clc
idivl
fwait
inc
add
stos
jmp
dec
js
hlt
pop
bound
leave
test
loope
sbb
mov
loope
push
jo
mov
dec
in
sub
or
rcll
dec
or
mov
mov
insl
call
test
movsb
cmp
movsb
nop
out
sbb
sahf
push
js
cld
dec
fwait
outsb
dec
fnstenv
fists
and
icebp
mov
push
cmp
out
mov
lahf
addb
scas
push
xchg
ret
test
fbld
jp
mov
jne
pop
or
and
jae
sbb
mov
insl
test
mov
sbb
or
and
and
push
shl
push
addb
fdivrp
outsb
out
lret
mov
mov
fbstp
fimull
pop
fldt
das
movsb
mov
ret
cmp
in
adc
xorb
and
das
mov
pop
push
mov
pop
jo
mov
sub
dec
addr16
and
dec
pop
mov
or
repz
cltd
mov
sahf
jb
shrb
rorl
push
xor
stos
in
push
out
or
mov
dec
decb
out
or
jnp
fstpt
scas
xorb
push
repz
loop
pcmpeqw
pop
push
pop
jle
sub
xchg
sub
jmp
dec
outsb
adc
mov
fwait
stos
clc
loopne
mov
jge
sbb
andb
cmp
mov
inc
xor
mov
sub
iret
mov
cwtl
subb
cwtl
or
add
add
add
inc
inc
inc
push
inc
push
push
push
outsl
pop
mov
clc
pusha
mov
add
fisttpl
or
bound
cmpsl
sub
cmp
loopnew
das
jbe
test
add
bound
dec
jb
xchg
sysexit
insb
pusha
pop
pushf
testb
sbb
es
xchg
dec
xchg
push
imul
shrl
lcall
insl
addl
jge
dec
rolb
adc
xor
sarb
data16
cltd
out
xchg
jp
and
aad
pop
inc
mov
cmp
mov
dec
xchg
xor
ja
test
push
addb
mov
mov
aaa
xchg
mov
test
imul
push
rol
repnz
out
jae
dec
dec
mov
popf
pushf
rep
js
sbb
insl
pop
xchg
sub
sbb
movsl
xchg
add
stc
dec
repnz
xlat
and
or
scas
fs
xchg
test
pop
das
xchg
or
push
pushf
xor
pop
or
push
mov
jb
clc
or
in
add
mov
pop
cmp
test
mov
outsb
enter
cli
cmp
xlat
mov
aad
xchg
sbb
push
cmp
adc
pop
bound
inc
ja
pop
xlat
pop
jle
test
aad
pop
mov
pop
loope
fwait
insb
js
cmp
sub
xchg
out
fwait
or
stc
clc
stc
cmp
jmp
or
fbld
sbb
sbbb
xor
sub
aad
push
out
test
clc
adc
ret
incb
push
sbb
mov
stos
test
xchg
ljmp
fdivs
or
pop
mov
sub
pop
lret
outsl
mov
jmp
dec
dec
orb
pop
mov
push
jmp
push
push
pop
push
outsb
fstpl
mov
idivb
cltd
cmc
das
mov
sub
scas
fstpt
orb
mov
cld
pushf
or
dec
test
mov
add
loopne
pop
xor
pop
sar
mov
idiv
mov
sub
faddl
int
das
adc
es
push
pop
lods
into
lahf
lea
xor
pop
xchg
and
mov
adc
cmc
cmp
sbb
jnp
sbbb
ds
stos
pusha
push
or
das
hlt
mov
inc
xchg
mov
aas
stos
jns
popf
inc
in
or
popf
cmp
sbb
pop
outsb
dec
out
xor
ljmp
or
jo
leave
sbb
jo
stos
cmp
jno
cwtl
pop
in
xor
mov
xchg
mov
pop
jbe
xor
addl
xchg
movsl
jmp
push
mov
xchg
inc
jge
out
mov
xchg
cmpsl
loopne
outsb
les
add
inc
or
insl
int3
lods
sbb
icebp
inc
outsl
hlt
lahf
lods
and
jg
cmc
sbb
and
scas
inc
add
mov
fisttps
xor
or
sub
and
mov
xor
push
xor
inc
add
scas
jg
xlat
roll
mov
jo
aam
das
jge
call
mov
mov
test
lret
xchg
fadds
int
das
add
add
mov
movsb
test
dec
inc
mull
and
push
pop
fs
arpl
call
xchg
mov
add
sti
pop
inc
xchg
lods
jmp
in
jg
push
dec
les
add
adc
inc
popf
sub
pop
pop
addl
xchg
ret
mov
subl
add
xor
outsl
in
adc
mov
mov
inc
cmpsb
rcl
int
dec
data16
das
inc
and
xchg
lods
data16
inc
fisubs
test
lret
inc
ret
xor
inc
int3
push
int3
fisubl
mov
insb
lea
mov
sbb
fiadds
push
jno
aad
mov
push
daa
mov
mov
dec
xchg
leave
sub
adc
and
cs
test
dec
add
push
int
pop
mov
mov
lret
fstps
imul
and
int
daa
outsb
jg
pusha
dec
test
sbb
xchg
ljmp
pop
mov
mov
test
xchg
adc
popa
add
and
lea
pusha
xor
lret
daa
xchg
add
into
arpl
dec
clc
mov
hlt
or
push
ljmp
jno
xor
fs
inc
js
rcrl
sub
fcoml
mov
stos
dec
xor
and
mov
mov
xorb
lds
xor
adc
ret
ret
lcall
fisubrs
popa
jnp
cwtl
dec
pusha
add
mov
jb
push
mov
data16
leave
popf
ss
cs
shll
cmp
pushf
loop
push
or
in
or
jne
cmp
sbb
fnsave
inc
imul
mov
cmp
xchg
inc
pop
xchg
mulb
mov
mov
enter
or
mov
loope
das
sub
sub
sbb
push
movsl
insl
ret
mov
idiv
add
ds
int3
xor
notl
inc
dec
mov
jle
push
xchg
ret
outsb
and
shl
mov
mov
cmc
out
sub
add
in
dec
fndisi(8087
fidivl
loop
mov
inc
jne
movsb
mov
insl
xor
add
movsl
jnp
or
sbb
frstor
xlat
sbb
dec
nop
outsb
out
push
pop
fldt
mov
imul
inc
aas
popf
fists
out
push
nop
ss
mov
gs
int
mov
push
and
xor
movsb
aad
test
add
add
dec
push
push
dec
pop
dec
pop
push
stos
mov
stc
outsb
push
dec
shl
mov
add
and
js
add
stc
int
scas
push
lahf
gs
je
stc
cs
fldcw
mov
pop
xor
dec
popa
jnp
adc
es
stos
xchg
fwait
or
jnp
test
mov
adc
jae
out
push
inc
lret
loopne
icebp
jno
fadd
fwait
mov
xchg
inc
mov
lret
ret
jle
mov
jp
xchg
adc
jo
or
ja
add
hlt
pop
insb
push
stc
ja
sbb
fimull
in
ds
mov
jp
pop
inc
out
mov
ret
xchg
lods
jle
inc
push
insb
inc
cltd
in
ss
and
add
lods
mov
in
adc
icebp
jno
inc
jp
cmp
mov
int
xor
jle
cltd
push
pop
call
imul
add
cmpsl
xor
push
repnz
aam
popa
aad
call
ret
add
into
lock
mov
out
pop
mov
mov
adc
ret
jge
int3
dec
jmp
mov
jmp
sub
sbb
gs
cmp
sub
xlat
aaa
push
ja
and
scas
xchg
add
out
push
ja
jo
mov
arpl
std
push
mulb
aam
mov
push
add
and
orb
add
insb
scas
jno
adc
push
mov
sub
sbb
sub
push
loope
pop
shrl
gs
push
jmp
cmp
repz
inc
scas
sbb
imul
jae
sub
jmp
adc
stc
pop
gs
xor
sbb
sub
pop
inc
hlt
jo
lds
sub
inc
nop
sub
repnz
popa
cli
lds
sub
adcb
addb
xchg
fbstp
cli
daa
pop
out
mov
cld
adc
add
incb
add
das
in
fs
bound
sub
ds
mov
cmp
mov
in
jae
xchg
shll
add
pop
les
or
lahf
call
xchg
into
hlt
mov
sub
mov
xor
sub
pop
xor
roll
in
in
dec
sbb
inc
jge
aas
test
jge
sub
adc
cmp
mov
rcl
sbb
sub
ret
push
aas
lods
sub
sub
je
ror
xlat
cmp
out
push
fnstsw
aam
aas
adc
fidivl
fiaddl
or
and
jmp
lock
negb
cmp
enter
sets
lret
cmc
sbb
adc
insb
jnp
push
lea
cltd
jecxz
lds
jmp
lods
les
pop
es
fdivrs
test
pop
insl
sbb
jmp
popa
jb
pop
outsb
sub
popf
sub
sbb
push
call
or
xchg
daa
cmpsb
mov
xchg
aaa
jns
sub
rorb
push
inc
xor
clc
jno
pop
inc
pop
loope
out
pop
pop
nop
lret
push
into
imul
mov
in
in
gs
popf
cwtl
repz
jbe
xor
ret
scas
xor
add
push
dec
sub
mov
outsb
call
bswap
in
bound
lods
fsubr
pop
iret
inc
out
mov
test
cwtl
inc
fdivrs
jge
fst
ss
into
mov
lcall
adc
movsb
je
sub
in
fld
andb
orb
xor
sub
pop
gs
stc
bnd
add
and
out
mov
aas
or
rcrb
cmpsl
inc
mov
push
mov
xchg
pop
jl
add
mulb
cmp
sti
sbb
fwait
jg
add
addr16
cmp
aad
test
push
jmp
inc
xor
cmp
int
das
mov
pop
test
movsb
push
ss
lahf
xchg
sub
iret
jae
jbe
cltd
pop
add
shrb
rclb
or
jae
xor
mov
pop
psubusw
fdivrs
push
pusha
iret
rorb
daa
push
movsl
and
push
push
jle
in
rcrb
test
scas
xchg
sub
mov
stos
call
lcall
shll
testb
bound
mov
in
repz
adc
xchg
mov
push
fs
and
add
lods
mov
test
and
outsl
xchg
mov
ja
cmp
in
insl
pop
les
and
sahf
inc
jno
push
cmc
sbb
mov
jle
lods
negl
std
pop
inc
cmp
lods
sbb
pusha
dec
arpl
cld
fs
push
mov
rolb
jl
mov
xor
insb
add
sbb
das
pusha
punpckhdq
cmp
stos
ljmp
aam
mov
ror
jg
shl
xchg
add
aad
and
inc
in
ja
imul
orl
call
mov
mov
jle
ljmp
cld
gs
and
push
and
xor
sub
mov
inc
or
push
cmpsb
popa
xchg
adc
add
jle
or
test
mov
aaa
aam
mov
xchg
add
sbb
in
jo
das
and
cwtl
sbb
pusha
sub
lcall
das
movsl
inc
and
sub
stc
pusha
and
and
dec
cli
mov
push
inc
cpuid
js
cld
call
pop
cmp
cmp
pushf
imul
inc
cmp
adc
filds
mov
xchg
pop
movups
inc
les
jl
cmp
add
adc
push
lods
shll
adc
add
mov
iret
ret
into
pop
int
fildl
push
push
gs
inc
jecxz
jle
lahf
sbb
fidivl
dec
out
inc
fcompl
fdivrl
sbb
push
and
popa
imul
repnz
mov
and
test
test
lds
mov
add
add
dec
push
pop
push
pop
dec
idivb
jns
sub
add
addb
add
ret
mov
in
adc
jno
stc
add
out
push
test
cmp
add
in
xorb
scas
xorl
js
rcll
adc
outsl
mov
add
dec
pop
lods
inc
sti
test
popl
xchg
cmp
mov
ds
inc
scas
imul
mov
outsl
sar
mov
push
xor
mov
outsb
enter
sbbl
pop
jb
push
rorb
loop
pavgw
movsb
inc
jle
mov
adc
fmull
mov
cmpsb
scas
clc
sub
ret
lahf
xor
pop
sbb
push
lcall
aas
out
icebp
and
das
addr16
mov
stos
sub
sub
pop
loop
inc
sbb
cmp
pop
shrb
inc
lea
xchg
jle
xlat
movsl
cmpsl
mov
movsb
push
jns
push
sub
lds
jg
mov
adc
sub
test
jge
cmp
jae
mov
negl
mov
sub
xchg
or
mov
mov
cmp
ret
insl
jl
in
inc
mov
cs
test
jb
inc
inc
mov
lea
or
outsb
out
jg
adc
out
jb
testb
mov
xchg
ja
enter
or
dec
mov
mov
popa
add
sbb
shrl
movsb
push
adc
js
enter
fnstcw
movsb
fldl
sub
pop
shll
and
popf
loopne
popl
iret
jecxz
mov
ss
arpl
in
test
adc
pop
xchg
jecxz
inc
inc
imul
je
movsl
jne
jb
leave
lods
popa
cmc
mov
mov
xlat
add
jge
inc
in
ret
into
out
ljmp
repnz
xchg
imul
mov
or
rcrl
les
jne
cmpsl
or
shl
xchg
jmp
dec
loopne
mov
jbe
sbb
stos
and
fdivl
popa
cmpsb
ret
hlt
fimuls
sbb
sub
roll
mov
out
jns
out
mov
pop
lods
pop
or
nop
test
lahf
fadds
dec
jle
pop
aaa
imul
cmpsb
jns
lods
push
addr16
dec
adc
xchg
inc
aaa
push
lret
lahf
test
or
inc
popa
mov
adcb
mov
test
push
pop
popa
shll
pop
and
stos
mov
add
pop
and
data16
int
daa
insb
sub
inc
in
sarb
and
xchg
lds
add
adc
out
push
gs
test
sub
mov
jecxz
test
inc
pop
mov
sub
out
out
mov
inc
xchg
data16
push
sbb
scas
xor
cmp
je
shlb
lods
pandn
jge
hlt
jne
arpl
sbb
xor
out
dec
test
nop
popf
mov
cmpsl
lea
jno
addb
in
fnstenv
sarl
xchg
das
pop
out
push
inc
and
nop
cld
sbb
xor
fwait
xchg
sub
adc
orb
lds
jbe
lods
or
mov
mov
and
dec
mull
mov
iret
pop
sarb
sbb
xlat
bound
dec
pushf
add
or
inc
popf
jp
rorb
in
push
dec
inc
les
pusha
add
shl
mov
and
jg
jmp
sbb
js
lcall
hlt
les
test
scas
adc
fwait
ret
mov
das
lret
inc
cmp
insl
sub
and
pop
sbb
pop
add
idivb
or
jecxz
cmpb
or
lods
or
cs
xor
fldenv
ds
push
in
and
ret
ficompl
test
mov
lahf
pop
push
into
mov
notl
movsl
and
fsubrs
dec
xchg
xchg
xor
push
mov
push
sub
das
fwait
mov
or
inc
pop
adc
and
inc
fiaddl
dec
push
aad
popa
jg
sub
inc
xchg
in
or
insb
dec
repz
int
jmp
outsl
inc
call
in
aam
jp
imul
pop
push
lock
rcrl
pushf
mov
inc
inc
inc
push
mov
pop
push
mov
xor
aaa
inc
out
pop
fdivl
cmp
xchg
pop
cmp
cmp
rcl
ss
jnp
rcll
jle
repnz
decb
cmp
inc
xor
mov
pusha
inc
jnp
imul
pop
xor
out
repnz
lods
mov
jo
cmp
mov
mov
inc
in
inc
xlat
shlb
icebp
jecxz
clc
dec
add
sub
iret
add
int
je
mov
or
les
jo
pop
cmp
inc
ss
rorb
mov
fs
inc
inc
loopne
test
or
fisubs
mov
push
sbb
jmp
test
cwtl
inc
add
xor
cmc
scas
adc
pop
aad
mov
ds
lcall
sar
push
out
xchg
mov
pop
xchg
fisttpl
loopne
repz
lds
sbb
jb
jne
out
loop
xchg
test
sahf
pop
sbb
sahf
cmp
mov
inc
nop
mov
sub
mov
out
cmp
movsl
pop
iret
cmpsb
xor
jo
push
pop
dec
test
ret
bound
sbb
loop
mov
or
sahf
pop
xchg
push
imul
sub
sbb
out
addr16
lock
add
dec
inc
mov
and
lds
jge
jmp
fsubs
xchg
pop
inc
xor
mov
repnz
pop
sbb
mov
leave
sti
ror
sub
mov
repz
aaa
jl
shll
jmp
ret
add
add
add
pop
pop
dec
push
dec
push
pop
pop
mov
in
les
add
std
mov
loope
jge
ret
loope
int
ret
dec
xchg
stos
lods
pop
mov
mov
mov
scas
mov
scas
int3
or
mov
inc
rorb
popa
idivl
xchg
cmp
scas
push
xor
mov
xor
or
mov
jecxz
push
mov
dec
addr16
lcall
and
mov
fistl
inc
sub
repnz
add
insb
mov
popa
adc
stos
dec
ret
push
adc
aaa
add
add
dec
loope
jecxz
inc
outsl
jge
add
les
addr16
jno
jns
popa
ret
daa
dec
add
jge
xor
or
push
cmc
insb
in
inc
push
cmp
mov
cmpsb
pushf
push
xor
jp
jecxz
pop
nop
cmpsl
pop
lahf
push
inc
jle
push
out
push
ret
pop
jle
push
add
cmc
pop
mov
xchg
xor
jae
lods
loopne,pn
sub
add
jno
add
mov
mov
sbb
mov
adc
lds
or
sti
lcall
int3
icebp
outsb
xor
shrl
loopne
inc
enter
fld
xchg
es
data16
jne
cltd
cld
or
addr16
pop
sub
xchg
push
mul
jne
mov
icebp
inc
lea
jns
mov
test
sbb
cmp
sbb
add
push
sub
lcall
pop
mov
lock
mov
das
mov
loope
push
jle
jns
pop
sbb
into
mov
bnd
and
adc
jl
mov
mov
lods
and
xchg
rclb
xor
lock
mov
outsl
pusha
test
xchg
dec
push
fisubrl
jg
hlt
dec
repz
dec
shrl
and
cmp
sbb
ss
leave
sbb
pop
test
xor
adc
clc
mov
mov
inc
ret
movsl
and
aaa
xor
in
xchg
loop
mov
cmp
and
addr16
sub
cmp
and
clc
or
jo
repz
add
push
pusha
loop
sub
xchg
mov
push
mov
in
mov
popf
xor
mov
lods
insl
arpl
roll
lcall
dec
andl
jle
inc
ja
lods
ret
pushf
lret
outsl
orb
lahf
jmp
dec
shlb
jmp
xchg
pop
out
jp
pop
lods
mov
pop
xor
xchg
add
mov
repz
adc
pop
xor
fldt
fsts
and
xchg
rcrl
adc
fistpll
fcompl
outsl
add
ja
cld
sbb
lds
sub
fnstcw
and
pop
add
push
loop
fisttpl
dec
mov
xchg
aam
push
xchg
add
scas
xlat
mov
and
fs
sub
cmp
push
in
mov
mov
fimuls
xchg
adc
push
les
mov
jne
aad
scas
pop
cmpsl
movsl
push
mov
subb
js
and
cmp
push
inc
mov
in
fwait
sub
mov
das
cwtl
clc
cs
push
lahf
jecxz
sti
popa
dec
sub
cld
les
in
mov
push
in
xor
inc
repz
or
loopne
sub
cli
jne
insb
or
adc
jl
jl
cli
xor
or
push
sahf
cmp
cld
sub
cs
adc
push
das
cltd
mov
xchg
je
cli
jb
or
in
jne
push
mov
inc
inc
loop
ret
imul
add
shlb
jg
dec
mov
stos
clc
es
clc
mov
bound
sub
or
movsb
jb,pt
xor
mov
jo
xchg
mov
cmpsl
xchg
scas
sub
mov
and
push
movsl
rcr
hlt
mov
pop
adc
mov
icebp
sti
arpl
jne
sub
adc
push
and
inc
dec
adc
enter
xchg
pop
movsb
js
outsb
addl
or
cli
imul
mov
adc
dec
lds
xor
adc
in
push
mov
xor
aam
xchg
pushf
sbb
enter
sti
call
cmc
mov
dec
mov
std
adc
jbe
out
mov
mov
cmp
scas
jge
outsb
pop
push
mov
pop
repz
fcompl
mov
jo
adc
out
sahf
iret
adc
xchg
in
imull
sub
sbb
stos
sub
push
leave
mov
inc
adcb
mov
fdiv
mov
lret
xor
popf
mov
jae
sbb
mov
inc
int
subb
test
js
loope
loop
mov
lea
dec
xor
xchg
mov
xchg
dec
sti
dec
or
pushaw
ficoml
fdivrs
in
ficoms
and
ljmp
push
adc
mov
sub
testb
loope
push
or
dec
xor
fld
adc
xorl
push
scas
stos
and
cwtl
jb
mov
out
xchg
call
decb
out
loope
insb
andl
rcrl
cmp
ss
leave
pop
and
lods
ret
aam
add
nop
xorl
push
and
inc
test
call
out
aad
pop
pushf
repnz
mov
mov
jecxz
out
add
cmpsl
pop
sub
ret
push
xchg
adc
jno
pushf
pop
in
addr16
out
dec
pop
sbb
stc
ret
sub
insb
mov
repz
loope
out
mov
popf
mov
fwait
dec
mov
sbb
sahf
fdivs
cs
inc
out
popa
xor
add
out
gs
shr
or
jp
in
push
subl
add
add
add
inc
push
push
push
push
push
inc
push
test
stos
inc
push
push
add
jl
pop
and
dec
dec
ret
pop
nop
in
mov
mov
icebp
dec
shrl
fnsave
jecxz
pop
lret
push
cmp
insb
xchg
dec
push
add
xchg
pop
imul
mov
pop
rclb
pop
xchg
xor
repz
pop
pop
les
push
cmpsl
mov
rcl
enter
fsubrs
push
pop
pop
imul
mov
xchg
aam
movsl
cmp
mov
mov
roll
out
push
mov
fsubrp
adcl
mov
gs
and
jnp
jg
imul
and
inc
inc
das
inc
arpl
pop
sub
mov
inc
push
mov
pop
out
in
and
mov
or
shrb
addr16
jmp
outsl
int3
test
ret
aam
cmc
lcall
or
fisubrl
fnsave
xor
mov
sbb
sub
cs
mov
mov
cmp
aaa
pop
pop
adc
mov
sbb
ss
orb
mov
insl
hlt
lock
imul
mov
aas
jns
aad
mov
cmpb
dec
out
popa
sub
pop
scas
rcll
je
imul
nop
rolb
or
jmp
dec
add
clc
stos
dec
pop
push
ss
cs
stos
lret
pusha
mov
mov
push
fdivrl
iret
jns
movsb
mov
mov
fs
popa
sbb
stos
mov
testb
inc
int3
mov
int3
into
mov
and
insl
cmpsl
fiaddl
gs
loop,pn
push
xor
add
mov
cli
and
mov
addl
jge
out
sub
or
and
mov
xchg
lret
lea
aas
lcall
loope
leave
popa
and
dec
out
and
inc
aam
sti
push
push
inc
cmp
pcmpeqd
inc
cmp
aam
sarb
sbb
in
out
mov
mov
xchg
xchg
lcall
stc
pop
mov
out
mov
enter
call
mov
dec
scas
stc
xor
xor
sub
ret
fwait
jo
inc
lret
add
popf
mov
pop
outsl
cmp
dec
test
clc
mov
push
mov
mov
dec
cli
jle
mov
shll
cli
iret
jle
enter
jo
fcoml
notb
into
or
fsub
lds
adc
call
stos
cmp
jge
mov
push
or
jo
push
sahf
dec
xchg
sub
cli
mov
inc
popa
sbb
rcr
test
out
or
dec
movlhps
dec
adc
negb
push
sbb
in
mov
mov
mul
sbb
scas
mov
and
add
pop
or
js
and
and
add
pushf
ret
dec
repnz
lea
sub
outsl
scas
add
add
xchg
shlb
fstps
aas
cs
cwtl
xor
xor
xor
sub
jnp,pt
aam
push
inc
add
fsub
popa
cmp
jp
cwtl
mov
pop
inc
xor
out
das
insl
ret
stos
orb
cmpsl
test
sbb
add
in
movsb
imul
and
mov
mov
dec
fsubp
mov
jg
sbb
sti
ljmp
and
jmp
rorl
sbb
outsl
lcall
dec
mov
imul
xchg
lret
movsb
jecxz
call
xchg
jge
jg
insb
call
adc
xchg
jns
outsl
iret
xchg
cmp
push
ss
fldl
in
mov
sti
orl
movl
movsb
adc
mov
sub
into
out
rolb
jo
sbb
icebp
cmp
sti
ret
lds
pop
arpl
mov
dec
push
popa
popa
insl
je
movsb
or
fs
push
shlb
out
popfw
fsub
ret
sbb
jmp
fnstenv
add
ficompl
or
xor
xor
fcomi
nop
push
ret
fsubp
arpl
push
add
sti
lock
fucomip
cmp
sbb
mov
pop
adc
jmp
sub
jmp
mov
dec
lret
fsubrs
mov
or
shll
adc
insb
fcmovb
inc
xchg
jle
ljmp
xchg
mov
shrl
pop
ror
call
int
push
cmp
push
clc
stos
mov
fildll
mov
shlb
out
and
dec
xor
lret
fbstp
sub
gs
mov
call
inc
sahf
repz
mov
in
dec
cmp
or
sysret
fdivrs
fldcw
mov
arpl
push
xchg
out
mov
sub
scas
push
add
cmp
pop
or
and
xchg
pushf
test
jmp
mov
in
cmp
imul
je
jne
insb
movl
jbe
popf
insb
adcl
add
jg
push
pop
incb
cmpl
dec
mov
lds
mov
xor
mov
add
mov
int
cmpsb
cmp
js
testb
cs
in
jg
loopne
sub
push
jne
mov
ss
and
or
jge
add
dec
std
push
aaa
jno
add
aad
loope
xchg
mov
xor
adc
mov
mov
pop
lea
push
jmp
outsb
lcall
negb
fadds
fwait
or
fdivrs
sub
or
cmc
jno
ficomps
loope
jge
leave
xor
sub
push
mov
jne
mov
xor
icebp
xor
jl
push
add
inc
jp
jp
aad
cmp
xchg
and
mov
xor
add
add
add
pop
inc
dec
inc
pop
dec
pop
pop
inc
cwtl
inc
loop
xlat
and
ljmp
add
aas
test
xchg
push
or
lret
ret
movsb
loope
outsl
push
in
int3
lret
or
dec
int3
xchg
out
sub
mov
jbe
lcall
and
inc
testl
sub
cmc
stc
lret
mov
push
stos
iret
call
push
push
arpl
aad
dec
xchg
pop
cli
add
imull
add
or
mov
ja
xchg
push
in
es
or
mov
cwtl
gs
mov
xchg
adc
les
jmp
inc
xchg
stos
dec
sub
or
dec
cmpsb
jnp
shl
inc
sbb
lret
lods
cmp
cld
cmp
or
mov
roll
ret
ret
jmp
pop
cltd
aad
ret
out
or
add
sub
mov
lods
sub
mov
cli
aaa
mov
mov
sahf
cli
xchg
iret
cmp
cltd
loop
ja
inc
xor
jp
cmpsb
mov
and
or
lcall
xor
push
pop
movsb
dec
adc
pop
inc
rorb
lock
nop
xor
ret
xchg
inc
dec
xchg
ss
fwait
xlat
adc
adc
cwtl
out
and
mov
pop
int
cwtl
lret
iret
xlat
pushf
repnz
xchg
out
int3
sarl
lcall
mov
or
mov
insb
fldt
stos
sbb
dec
shll
cmp
nop
pop
mov
out
mov
dec
daa
sbb
cld
lods
orb
xchg
hlt
lcall
mov
cmp
cwtl
in
out
pop
pop
jno
pop
shr
stc
mov
mov
sti
mov
cltd
lcall
inc
loope
pop
aad
push
add
mov
mulb
adcb
lahf
and
fisubrl
sbb
push
mov
pushf
inc
xchg
scas
icebp
test
dec
xor
cmp
cld
mov
jmp
inc
push
daa
and
das
pop
or
jae
add
into
jns
arpl
mov
inc
mov
adc
cmp
pop
xchg
mov
fmul
mov
repnz
fimull
test
call
fs
fwait
inc
test
stc
pop
lods
and
adc
sbb
dec
dec
out
test
sub
sbb
pop
sub
ret
jns
dec
sbb
adc
sbb
out
push
jb
scas
pop
mov
ficoml
xchg
dec
std
push
iret
rcrb
negl
movsb
or
pop
inc
adc
add
mov
pop
pop
jl
lods
sbb
cs
xchg
jecxz
dec
shl
pop
fisttpll
or
dec
ljmp
lock
dec
test
mov
insb
dec
neg
jg
xorl
ljmp
cmpsl
mov
sahf
mov
sbb
aam
in
popa
testl
inc
mov
fsubrs
pop
cwtl
pop
dec
xchg
movsl
sub
xor
xchg
sub
cs
movsl
adcb
sub
aad
inc
lds
cmp
mov
test
jge
ds
sbb
push
test
jecxz
sbb
inc
sbb
clc
ficoml
mov
sbb
xchg
inc
test
js
xor
or
pop
sbb
push
out
or
xchg
pop
pop
in
mov
xchg
movsl
jmp
xchg
pop
jb
mov
add
in
or
push
mov
lret
lcall
xchg
sub
adc
jmp
outsl
mov
repnz
xchg
or
dec
loopne
lret
out
inc
stc
daa
jmp
pop
push
mul
enter
and
popa
mov
cmpsb
or
xchg
sarb
movsl
cmp
enter
mov
lods
jmp
call
jnp
mov
pop
xchg
int3
xor
decb
pop
jb
mov
xor
sbb
add
push
push
mov
xor
cli
movsb
mov
jl
call
daa
cmpsl
xchg
mov
shrl
test
rcrl
enter
pop
xchg
pop
popa
testl
fiaddl
push
jb
ss
sahf
in
add
inc
lods
mov
pushf
js
popf
xchg
nopl
cmp
mov
adc
js
mov
push
push
fwait
mov
push
stc
cmpl
out
sub
nop
loop
js
test
fldt
in
sbb
cmc
push
ja
dec
or
cli
out
pop
lods
mov
mov
sarl
sub
adc
les
xchg
lods
mov
and
dec
xor
mov
in
outsb
pop
adc
test
push
in
cmp
mov
inc
imul
or
mov
cmpsl
aam
dec
scas
add
and
int3
in
popa
mov
cmp
jle
in
sbb
fdivl
add
test
xchg
mov
out
fnstsw
jns
test
imul
mov
bound
clc
and
jae
mov
cmp
mov
shrb
add
insl
xor
popf
adcl
in
enter
dec
ljmp
inc
cmp
mov
test
cli
pop
sbb
adc
sbb
das
call
shl
outsb
leave
in
enter
outsb
stos
ja
movsl
pop
pop
fidivl
andb
scas
pop
cmp
cmpsl
sbb
stc
jb
push
inc
mov
mov
test
or
popa
sub
mov
jg
inc
das
pop
and
in
dec
dec
jle,pt
aam
inc
dec
fcoms
jl
lods
mov
jl
pop
dec
pop
xchg
and
mov
and
faddp
icebp
fwait
and
add
add
add
push
inc
push
push
push
push
push
inc
rorl
popf
scas
das
addb
add
lds
rclb
insl
icebp
pushf
inc
mov
repz
pushf
movsb
scas
vpsrlw
lret
cmp
fstl
lods
in
dec
xchg
ret
lods
xchg
pop
fistpll
pop
add
inc
or
mov
mov
addr16
fcompl
mov
jnp
jg
dec
push
mov
xchg
mov
ss
push
mov
in
imul
jg
inc
lods
inc
cmp
mov
test
mov
xor
and
push
mov
add
cmp
in
inc
mov
mov
aad
push
pop
sbb
jle
jge
scas
das
enter
inc
mov
sahf
mov
adc
add
shll
fldenv
nop
das
fisubs
aaa
cwtl
rclb
fstpt
test
in
inc
jp
idiv
mov
add
jmp
mov
inc
lret
lods
ja
insl
push
push
jmp
test
sub
mov
ljmp
xchg
sbb
cmpsl
xchg
push
sub
pop
or
fdivs
dec
xchg
lea
int3
adc
ja
mov
dec
mov
pusha
cli
pop
add
push
inc
shrl
dec
and
shl
sub
fwait
inc
outsl
xchg
dec
push
cmp
ret
in
jbe
ds
aaa
aaa
cmp
cs
in
xlat
or
inc
jmp
and
stc
jmp
xchg
outsl
xor
jo
add
dec
in
je
and
negl
xor
jbe
jge
sbb
and
mov
shrb
stc
lods
xlat
mov
in
dec
shl
sub
sahf
mov
test
clc
mov
xor
lods
add
or
mov
inc
lret
jle
push
jmp
imul
mov
loop
movsb
je
inc
add
pop
shll
rorb
cmpsb
mov
fwait
rcrl
sub
xor
fiaddl
aad
sub
into
jg
in
or
dec
data16
dec
jp
xor
add
dec
pop
les
mov
cmp
shl
call
daa
lahf
test
mov
dec
mov
fimuls
jnp
xor
mov
mov
test
push
lahf
adc
repz
xchg
dec
mov
ja
pop
addl
sarb
push
xor
lea
sti
xor
into
dec
push
xchg
scas
jae
jae
and
int
lcall
repz
xchg
das
mov
loopne
xor
bound
in
mov
scas
cmp
adc
cmpsl
std
cmc
aad
xchg
and
xchg
test
clc
insb
cmp
cmp
out
mov
outsb
mov
and
xchg
bound
icebp
fwait
cmp
xchg
ficoml
cli
jbe
mov
cmp
push
repnz
movsb
cmp
test
sub
inc
leave
jg
mov
mov
mov
jmp
add
cli
addr16
stos
cmp
cmp
into
jecxz
repz
mov
jecxz
mov
lods
add
pusha
inc
sub
adc
xchg
std
or
fwait
jae
rcrl
mov
jae
pusha
jnp
out
mov
xorl
inc
lahf
push
xor
shrb
mov
pop
sub
ja
fmulp
imul
xsaves
das
adc
cli
mov
sbb
cld
lahf
inc
pop
pop
adc
cltd
cs
jo
test
adc
lahf
fistpll
rcll
xorb
out
or
cli
inc
jmp
hlt
test
call
mov
pop
cmp
repz
mov
outsb
jge
mov
mov
les
dec
in
mov
xchg
mov
jo
mov
out
adc
mov
cmpl
sahf
aas
mov
xchg
cmp
mov
pushf
fs
daa
in
mov
enter
xchg
fisttpl
mov
cs
inc
aam
cmc
push
and
bnd
push
pop
popf
sbbl
loop
cwtl
jl
filds
xlat
out
cltd
cltd
out
inc
inc
lret
jp
leave
mov
xchg
mov
testb
loope
shlb
out
adc
sbb
jb
mov
jb
adc
mov
xor
mov
mov
push
lcall
stc
lret
fisubs
add
jle
jle
jbe
mov
int
lods
xorb
xor
outsb
mov
and
sub
xchg
jne
mov
push
pushw
ds
or
cs
or
jmp
mov
xor
mov
arpl
cwtl
ficomps
aaa
fisubrl
mov
mov
imul
mov
test
adc
roll
addr16
aaa
mov
xor
xchg
dec
xchg
push
lea
push
ja
pop
jae
mov
mov
icebp
roll
std
outsl
test
dec
inc
xchg
add
dec
xor
stos
mov
stos
hlt
jl
cli
or
movl
adc
xor
cmp
push
jl
sub
test
mov
loop
movsb
popa
mov
xchg
dec
push
enter
imul
adc
push
and
cmp
popa
cmp
adc
xchg
out
xlat
push
inc
repz
sub
xchg
cs
mov
sbb
enter
aaa
xor
arpl
mov
loop
arpl
push
in
pop
dec
jle
cli
repnz
loopne
inc
jge
lret
or
cmp
mov
xchg
mov
idivl
loop
add
imul
lds
mov
cmp
pop
fdivrs
or
inc
mov
loop
mov
lods
xchg
leave
std
pop
and
enter
je
popf
sub
mov
xchg
pusha
sbb
ljmp
jp
xor
loopne
mov
add
sbb
push
add
add
add
pop
push
push
push
pop
push
pop
pop
xchg
stos
mov
or
fiadds
add
jnp
pop
out
jp
lret
test
pop
sbb
sub
mov
ret
ljmp
push
sbb
pop
outsb
sbb
adc
insl
inc
xchg
inc
addl
push
or
and
add
inc
imul
dec
jmp
popa
movsl
pop
jno
jle
add
jae
xor
dec
xor
cmp
xor
clc
js
or
in
shlb
sub
outsl
add
lods
aaa
cmp
enter
in
and
mov
mov
fmuls
xchg
add
lret
xchg
sbbb
pop
scas
xor
movsl
and
sub
scas
leave
fdivr
mov
mov
push
push
push
lcall
add
inc
and
jle
inc
cltd
mov
ja
call
dec
push
jmp
jl
stos
paddusb
imul
cmp
fstp
gs
nop
nop
loope
pop
cmp
sti
fldenv
or
inc
orl
les
pushf
sbb
sti
and
clc
aad
inc
push
sbb
popf
mov
rolb
out
int3
add
and
or
popf
pop
xor
lea
fdiv
mov
movsb
mov
jo
mov
mov
outsb
in
mov
lods
lret
mov
cmp
arpl
and
xor
add
inc
aas
mov
dec
es
mov
imul
xchg
add
push
xchg
mov
fiaddl
pop
pop
or
mov
inc
popa
cmp
ret
jb
mov
or
rcrb
lock
pop
popa
xlat
into
bound
cli
loopne
mov
pop
add
in
and
and
cmp
adc
arpl
test
jne
jge,pn
ficoml
aad
jo
add
push
out
outsl
lahf
jo
shlb
fsubs
lahf
and
mov
jnp,pn
ficomps
xor
bound
xchg
aad
push
cmp
pop
fwait
scas
xor
adcl
into
ret
push
aam
mov
xchg
mov
ficoms
nop
push
adc
fs
inc
sbb
cwtl
or
pminub
pop
popa
push
fstpt
jno
pop
inc
push
stos
movsl
sbb
scas
adc
enter
outsb
cmp
in
fsubs
int
add
aas
xor
test
mov
test
pop
cltd
pop
insb
mov
testl
add
xor
or
sub
add
test
and
fistpl
push
mov
xor
push
or
and
stos
out
fmull
lret
mov
popf
mov
jg
pop
test
jne
ja
mov
cwtl
mov
mov
aam
popf
dec
pop
xchg
ret
or
call
xor
mov
lods
mov
add
mov
loop
rclb
shrb
mov
add
sub
mov
cmp
pop
ja
in
add
xor
es
adc
loop
sbb
push
dec
ficompl
out
or
add
pop
adc
mov
pop
in
sbb
rclb
stos
mov
insb
rclb
xor
mov
or
cmp
dec
dec
fcomp
cmp
outsb
mov
xchg
lock
push
mov
push
or
loop
stos
mov
jl
xchg
push
push
jp
mov
mov
sub
mov
add
and
adc
sub
mov
and
andb
add
inc
shrl
repnz
lahf
adc
mov
sub
push
mov
out
dec
test
iret
outsb
push
stos
mov
mov
mov
ror
call
orl
inc
ja
dec
cmp
mov
test
or
fwait
aad
jp
jb
dec
push
mov
pusha
addr16
dec
fs
clc
popf
pop
inc
mov
xchg
dec
or
pop
pop
hlt
sbb
mov
pushf
daa
aas
sbb
sbb
ret
pop
pop
adc
pop
mov
xor
cmp
xor
dec
sub
push
adc
sub
and
mov
push
popf
sahf
push
xchg
popa
js
js
sub
mov
xlat
adc
ror
popf
add
or
inc
pop
lahf
sbb
pop
xchg
add
cmc
xchg
xor
cmp
daa
fnsave
popf
loop
call
incb
pop
lock
and
int
inc
push
and
adcl
stos
movsl
and
flds
lea
lods
xor
fwait
jno
sub
lock
bnd
adcb
dec
and
jp
jae
or
jmp
sbb
jecxz
in
mov
or
and
test
bound
fisttpll
mov
imul
mov
jge
int3
sub
bound
pop
jecxz
gs
mov
iret
mov
pop
and
add
jl
pop
lock
cmp
orb
data16
loop
je
cmp
dec
fsubl
test
aam
push
inc
pusha
ret
sarl
xchg
push
xchg
bound
frstor
adc
dec
inc
sbb
sbb
fldt
mov
cld
stos
push
adc
inc
lret
int3
mov
cmp
xchg
xor
fld1
dec
mov
int3
push
addr16
cmp
jg
lock
xchg
jle
leave
imul
imul
lcall
sbb
and
adc
scas
test
cmpsl
xor
and
dec
pop
data16
mov
in
mov
test
jne
dec
test
dec
aaa
xchg
cld
cld
out
pusha
push
xor
mov
mov
xor
push
push
sbb
or
push
out
leave
push
data16
and
lods
pop
xor
jecxz
iret
jecxz
fidivs
xor
push
pop
adc
stos
sub
add
add
add
push
push
pop
push
dec
pop
idiv
pop
in
jo
add
addb
add
dec
aam
and
movsl
movsl
js
and
mov
mov
lret
push
gs
push
shlb
or
cmp
inc
dec
sub
shlb
jo
ja
ret
cmp
loopne
and
xchg
lea
add
mov
push
icebp
loope
mov
outsb
jg
pop
sub
and
outsb
adc
dec
pop
test
into
test
jl
shrl
sub
sub
in
add
std
in
shr
inc
xor
mov
das
mov
add
cld
outsl
dec
test
data16
in
mov
mov
addb
mov
sbb
inc
lret
out
int
addb
or
shl
jbe
sbb
sarb
ror
jne
into
stos
pop
adc
fstps
into
push
adc
not
data16
inc
or
inc
cmc
or
out
cmpsl
pop
loope
xchg
push
or
sbb
jg
ja
dec
fabs
das
out
fwait
sahf
jmp
cs
xor
fcomps
je
sub
push
dec
jb
mov
add
ljmp
ficoml
leave
fcmovb
push
mov
es
pop
js
jge
stos
fld
in
xor
pop
fidivrs
stos
sbb
dec
mov
into
fdiv
in
mov
and
mov
add
xor
out
stc
add
or
sbb
je
sarl
repnz
xor
hlt
xor
push
outsb
stc
lea
in
push
in
xor
out
push
not
movsb
repnz
cmpsl
and
pop
lock
ret
adc
sbb
out
xchg
stos
jmp
mov
push
cmpsl
movsb
movb
addr16
negl
pop
mov
cmpsl
aas
out
mov
mov
repz
push
in
push
fsts
rorl
ret
fldt
xchg
push
movsl
not
lock
adc
mov
xor
fs
mov
push
pop
adcl
or
int
mov
mov
xor
arpl
dec
sub
add
lea
cmpsl
xchg
pushf
sub
xchg
pop
das
inc
push
sub
adc
bound
aaa
sub
mov
sub
popa
cmp
xchg
xchg
mov
dec
cmpsb
xchg
test
cmp
xchg
or
outsb
jns
leave
cld
ss
hlt
fmuls
adc
mov
mov
dec
xchg
cwtl
out
pusha
mov
insl
inc
mov
mov
in
pop
ljmp
or
lods
in
sbb
mov
or
or
filds
cmp
xor
out
or
movsb
and
fnstsw
jp
mov
dec
jp
sbb
fsubrp
xor
into
pop
mov
int3
and
dec
sbb
mov
ficompl
shl
rclb
arpl
add
push
sbb
cwtl
cmpsl
cmp
sbb
loopne
xor
jmp
push
mov
jns
sbb
das
and
xor
push
int
cmp
mov
jns
or
sub
jbe
inc
inc
cmp
mov
icebp
int3
push
jg
cmpsb
jp
xchg
clc
les
shll
push
mov
fcomps
nop
sbb
imulb
fidivrs
stc
testl
lret
sbb
add
cmp
fisubrl
pushf
jl
cmpsl
mov
je
mov
add
cwtl
xchg
push
and
bound
or
pop
fldt
jns
jecxz
data16
xchg
sbb
sbb
jle
sbb
mov
pop
or
repnz
int
sub
leave
lcall
ja
push
inc
fdivr
dec
dec
aaa
fcompl
xchg
pop
rorw
mov
and
xor
push
shr
in
xchg
movsb
rorl
roll
xor
jecxz
pusha
fldcw
lret
sub
and
or
sub
mov
mov
pop
std
xchg
sub
mov
movsb
xor
fnstenv
js
jne
pusha
les
addr16
add
sbb
lods
mov
into
and
push
mulb
xor
int3
notb
xchg
mov
push
pop
mov
lods
pop
movsb
xchg
in
pop
push
movsl
xchg
loope
push
lcall
gs
inc
pop
sbb
mov
xor
mov
sbb
insl
jnp
mov
xor
negl
shlb
lock
pushf
in
cmp
ffree
es
sub
ss
in
add
mov
shll
sbb
dec
orl
mov
lods
xchg
mov
sub
pop
insl
inc
sbb
std
mov
sarb
mov
mov
mov
daa
pop
pop
sar
aas
pop
mov
ret
aam
dec
in
pop
jl
dec
enter
push
sbb
int
dec
testb
jns
pop
gs
sbb
nop
cmpsb
sub
cmp
sbb
imul
lea
add
jae
fwait
and
mov
orl
popa
inc
roll
adc
fwait
cmp
das
cltd
xor
push
hlt
shrl
mov
negl
popf
xor
call
mulb
imul
out
mov
mov
imul
or
xchg
scas
je
or
mov
xchg
cwtl
or
inc
pop
jbe
imul
xchg
mov
ret
sub
pop
add
adc
scas
pop
adc
inc
fisubs
outsb
mov
arpl
push
fmul
pshufw
push
xor
mov
xor
or
popa
mov
xchg
ljmp
add
add
add
inc
inc
inc
pop
inc
pop
pop
pop
mov
push
mov
in
add
addb
add
inc
aas
sub
xor
pop
pop
call
sub
push
ds
and
scas
sub
sub
mov
adc
in
lcall
adc
mov
mov
scas
fisttps
mov
mov
clc
iret
sub
cmp
inc
sbb
or
sti
cmp
fwait
xchg
jp
sbb
ja
dec
loop
fcomps
xchg
adc
add
mov
pushf
cmp
pop
push
jl
inc
jnp
aam
or
movsb
cwtl
sub
and
jle
call
sar
cmp
pop
rcll
mov
inc
pop
adc
leave
sti
inc
cli
mov
mov
dec
or
pop
addr16
mov
mov
or
mov
jg
sub
sbb
add
push
cmp
xchg
xor
popa
data16
jle
dec
pop
fists
rcrb
outsl
inc
xor
jns
xchg
das
mov
pop
xlat
test
test
and
aam
es
jno
gs
arpl
xchg
fbstp
mov
push
adc
jae
push
icebp
cli
and
cld
xor
test
ja
pop
cmp
xor
cmp
test
cmpsb
push
push
sbb
jg
xor
push
faddl
mov
leave
lock
jle
mov
mov
dec
pop
leave
cli
pop
data16
lret
push
inc
sbbl
jp
dec
imul
mov
daa
sub
mov
xchg
jg
jl
jno
repz
sbb
jbe
pop
xor
jecxz
push
mov
xchg
in
add
push
repnz
add
inc
pop
cmp
and
cmp
xor
xor
sbb
test
pushf
cmp
mov
mov
sub
mov
xchg
push
mov
sub
sub
or
cwtl
xlat
sbb
les
push
pop
mov
lods
shrl
xchg
ret
je
adc
dec
jecxz
pushl
insl
hlt
aad
into
in
mov
adc
in
mov
in
xor
or
pop
push
mov
lcall
jmp
jo
mov
push
bnd
mov
adc
pop
imul
movsb
and
or
cmp
nop
jle
cmp
sub
sbb
sti
rorb
mov
or
ja
lods
outsl
push
int
cmp
sbb
xorl
add
or
mov
clc
pop
xchg
stc
test
and
jmp
and
fidivs
leave
or
cmp
repz
sbb
pop
scas
sub
inc
xor
test
movsb
push
push
xchg
mov
test
inc
nop
and
mov
and
test
lcall
and
jmp
in
test
cmp
inc
movsb
or
lods
ret
mov
xor
je
and
and
cs
jecxz
dec
dec
xchg
in
push
clc
inc
cltd
nop
jl
push
pop
mov
xchg
call
fiadds
fwait
cld
fst
scas
adc
out
enter
cvttps2pi
pusha
cmp
mov
xor
inc
add
push
mov
pop
dec
loopne
mov
lock
jo
and
mov
fdivrl
push
push
loope
lahf
sarb
sbb
xchg
fcomps
dec
arpl
movsb
flds
pop
xchg
push
jp
inc
notl
mov
test
notb
lds
xor
mov
mov
pop
cmp
insb
jbe
mov
mov
pop
fldenv
jo
mov
icebp
stos
je
add
adc
insl
add
cmc
fs
jo
push
or
sub
sub
xchg
pop
and
int3
mov
in
pop
aad
repnz
xchg
out
fnsave
add
repz
push
insl
cwtl
inc
pop
inc
jg
dec
xchg
mov
sti
mov
dec
xchg
cmp
cmpsb
inc
mov
push
jno
add
jns
xlat
and
sarl
dec
aad
inc
imul
imull
push
shll
cwtl
imul
aas
jmp
out
andl
fsubr
jg
add
and
sbb
ss
imul
leave
pop
pusha
in
test
sbb
addr16
mov
out
mov
cmpsb
addb
int3
xor
insb
fwait
js
jae
dec
push
jns
cltd
das
xchg
pop
daa
push
mov
cs
orl
rcll
das
push
outsl
adc
mov
jns
inc
jne
xchg
fidivs
push
mov
rolb
xor
add
or
dec
pop
add
in
adcl
outsb
sub
mov
dec
mov
sbb
pop
inc
lahf
decl
push
push
sbb
xchg
daa
mov
insb
cmp
je
pushl
push
sub
mov
add
sub
in
sbb
mov
cmp
lods
push
pop
sub
andb
xor
test
loop
int3
dec
add
cmp
lret
add
pop
shrb
sub
jg
push
pop
push
add
push
xorb
test
and
fisubl
jo
out
mov
es
dec
orb
into
loopne
or
mov
cmp
cmp
push
sbb
scas
mov
xchg
iret
inc
jecxz
cmp
insl
notl
test
dec
push
dec
sbb
pop
pop
les
sbbb
outsb
mov
iret
xchg
aam
test
arpl
jg
and
xchg
jo
mov
jmp
mov
out
out
xchg
inc
push
and
lods
cmp
rol
cmp
or
xchg
adc
inc
add
outsb
add
add
jl
xchg
pop
das
add
cmp
add
add
add
dec
push
inc
push
pop
push
pop
pop
ss
imulb
shl
jg
repnz
addb
add
iret
mov
and
repnz
mov
dec
mulb
out
sub
mov
fs
adc
popf
xchg
mov
daa
jp
cwtl
or
jbe
scas
jge
cwtl
jbe
arpl
cmp
or
cmpsl
cmp
xchg
sbb
cmpsb
mov
push
cmc
and
jne
pop
les
mov
lea
insl
in
sub
ljmp
mov
adc
test
imul
or
xchg
or
jnp
sub
jecxz
fldt
sbb
loope
mov
push
or
je
test
pop
pop
sbb
mov
inc
pushf
pushf
std
lods
dec
or
fs
aad
mov
shr
cmp
cs
sahf
jmp
stos
aad
sbb
sub
ret
in
xchg
enter
or
mov
or
mov
pop
rcll
aam
push
xchg
outsl
stos
mov
mov
adc
and
mov
fisttpl
jae
or
daa
add
popa
xchg
aad
loopne
in
rorl
fwait
outsl
cs
mov
adc
shll
je
clc
xor
inc
mov
enter
add
mov
mov
xchg
jl
sahf
push
test
jmp
cmpsl
addb
leave
adc
adc
mov
xchg
fstpt
push
cmp
mov
or
sub
add
mov
cwtl
mov
sti
aaa
mov
sbb
cltd
add
adc
push
mov
jmp
inc
bound
insb
stos
add
mov
popa
adc
lret
add
xchg
inc
stos
ss
dec
pop
idivl
rcrl
push
shr
pop
push
popf
mov
xchg
mov
dec
jmp
ror
xchg
jmp
pop
inc
jmp
js
shl
movsl
cmp
test
xchg
test
cmc
ret
mov
mov
dec
data16
insl
repz
dec
ror
adc
mov
push
pop
sarl
sbb
es
leave
fwait
mov
xchg
lcall
lcall
mov
adc
repz
sub
insb
xor
int
push
sub
adc
in
aam
mov
clc
add
pusha
int3
and
mov
or
cmc
shll
into
jmp
sbb
push
jmp
jle
pop
addr16
sti
shrb
jmp
js
daa
scas
scas
dec
sbb
push
stc
mov
sbb
cwtl
in
loopne
dec
adc
sti
loop
sub
mov
xchg
pop
mov
sub
daa
iret
test
pop
push
cmp
or
js
movsb
hlt
jmp
cs
mov
mov
mov
imul
push
jns
cli
jns
sbb
jns
pop
adc
or
mov
mov
popf
dec
shrl
lods
mov
push
lds
add
stos
icebp
xor
adc
dec
sarb
insl
ret
fistl
aam
lret
cmp
jo
mov
test
das
xor
jp
into
pop
insl
dec
mov
fisubrl
add
mov
pushf
push
push
jecxz
insl
xor
inc
adc
insb
sub
xchg
mov
shr
mov
inc
mov
imul
cmpsl
and
in
and
js
int
movsl
call
adc
enter
push
dec
push
rcrl
test
mulb
pushf
mov
pop
lea
aaa
jne
add
and
fbstp
inc
jl
sub
adc
imul
rclb
jge
mov
movsb
mov
roll
scas
mov
mov
adc
ret
movsb
push
aam
ja
aaa
jle
mov
call
adc
sub
mov
lods
test
inc
jns
add
add
test
mov
pop
int
mov
cmpsl
mov
gs
lods
xchg
dec
outsb
jle
push
nop
loop
xchg
inc
mov
ljmp
andb
pop
sub
add
sbb
lock
add
add
outsl
dec
repz
mov
shrl
fldcw
ja
fistl
sub
sub
insl
lock
mov
jg
jne
jbe
inc
inc
lcall
popf
cmp
cmpb
imul
fwait
adc
mov
ficomps
sar
mov
shl
scas
icebp
subb
mov
cmp
fstl
stos
repz
or
shr
jmp
xchg
mov
sahf
or
mov
dec
movsl
ja
mov
lock
dec
out
cmpsl
stc
pop
pop
inc
subb
scas
pop
xchg
jae
es
jno
pushf
sub
xchg
ds
das
dec
enter
fiadds
sbb
pop
jp
add
xlat
adc
lea
cmpsb
out
mov
fdivrl
iret
lds
adc
cmp
lret
testl
aam
ror
sub
push
jo
movsb
inc
pop
cmp
or
js
lea
add
push
es
mov
aaa
xchg
pop
or
ret
mov
fmull
sbb
sub
mov
pop
sbbb
popa
mov
sbb
imul
repnz
cwtl
stos
inc
in
mov
dec
inc
pop
push
andl
rorb
inc
mov
mov
loope
lds
and
inc
ficomps
mov
mov
int
adc
push
push
cltd
jb
pop
cmp
mov
mov
mov
sbb
push
orb
cmpsl
ds
pop
shr
les
das
std
pop
push
jne
icebp
stos
les
out
inc
aas
mov
jge
sub
sbb
jle
dec
adc
fiaddl
add
add
dec
inc
pop
pop
dec
push
dec
push
enter
scas
jb
clc
add
addb
add
addr16
dec
aaa
cltd
pushf
cli
cmp
outsb
sub
into
mov
rcr
sbb
je
cmp
lods
sub
jo
mov
jb
adc
hlt
dec
mov
cld
icebp
into
pusha
jp
jge
aad
pop
sbb
mov
pop
scas
xor
mov
sub
adc
lret
inc
fxch
jmp
sub
jle
xor
and
jae
jl
push
adc
push
call
imul
adc
mov
sarl
test
mov
push
cmpsl
lods
data16
pushf
mov
mov
das
adc
fmull
in
mov
aam
insb
mov
in
mov
mov
imul
lods
jno
mov
jno
shlb
into
inc
popl
scas
adc
ss
sbb
inc
mov
jmp
cmp
xchg
mov
test
into
jecxz
inc
push
inc
xchg
mov
jnp
out
ljmp
das
cmpb
push
movsl
or
xchg
test
iret
shll
pop
push
mov
sbb
pop
imul
dec
cmp
addr16
sarb
jge
mov
sbb
gs
cmp
mov
mov
xchg
stos
nop
fnstcw
popf
fstpl
adc
dec
jb
and
outsl
xor
dec
aaa
mov
add
scas
sbb
pop
loope
rcrb
mov
add
xchg
adc
aam
jp
pop
fnsave
xchg
mov
and
cmp
xlat
orl
gs
in
sbb
aas
cmp
add
jle
sahf
add
sbb
out
mov
push
fs
roll
stc
adc
inc
fimuls
clc
orl
pop
inc
adc
xchg
push
cli
xor
jecxz
add
mov
icebp
gs
cmp
or
lods
iret
test
fnstcw
out
daa
xor
mov
sbb
push
inc
and
xor
fs
scas
orb
inc
jge
cli
pop
pop
lcall
jge
push
loope
pop
mov
xor
cli
inc
mov
loop
ss
sbb
and
fwait
push
sbb
cmp
lahf
pop
loope
testb
pop
mov
pop
lcall
jbe
cmp
shlb
dec
mov
in
fnstenv
cmpsl
mov
cmp
jl
push
aam
cmpl
into
xchg
jge
jg
les
xor
sub
xlat
jg
mov
lods
cld
cmp
inc
rolb
mov
test
adc
push
mov
aam
repnz
out
aam
push
push
sbb
mov
inc
jns
or
fwait
xor
jo
cld
sub
inc
mov
add
ss
shll
or
sbb
cli
cmp
insl
into
imul
push
shrl
imul
jno
cmp
sbb
out
cmpsl
jp
icebp
add
das
dec
xor
fidivs
outsl
fs
rcrb
xor
sub
mov
jmp
sbb
cmp
lcall
mov
mov
sub
fdivr
daa
dec
cmc
jecxz
adc
xlat
sbb
int
in
xchg
mov
and
push
inc
in
mov
add
data16
je
mov
dec
loopne
add
cmp
nop
test
sub
pop
push
outsb
sahf
js
and
aas
lds
gs
or
jb
rcr
add
xchg
loopne
movsb
loopne
icebp
or
and
lea
or
sbb
cmp
cmp
insb
cmpsl
subl
sub
outsb
push
sub
sbb
sbb
cmp
movsl
jns
mov
pop
mov
xor
shr
orl
cmp
pop
inc
sahf
sbb
std
retw
hlt
jmp
movsl
fimull
push
fwait
pop
cwtl
inc
jge
out
adc
cmp
bound
adc
shlb
push
add
clc
shrb
fmull
xchg
das
push
popa
sub
test
sub
sbb
fs
test
sbb
push
js
mov
aas
dec
add
dec
rclb
mov
xor
sub
jb
paddsw
hlt
ret
scas
mov
xor
ss
push
test
bound
sub
popf
repz
and
mov
fs
loopne
arpl
mov
outsb
pop
mov
adc
jmp
je
dec
and
pop
mov
mov
cmp
jnp
aam
inc
daa
and
sarl
sbb
movlps
or
pop
pop
mov
push
sub
push
inc
jp
push
adc
sub
cmp
inc
mov
loope
lea
outsl
stos
adc
and
cs
add
push
in
je
fdivp
fisubrs
xchg
dec
pop
adcl
jno
add
cmp
sahf
ret
sbb
xlat
pop
pop
inc
mov
ficoml
mov
movsl
loope
pop
repz
xor
jl
xor
loopne
movsl
rol
xor
adc
mov
popf
xor
cmp
mov
or
aas
cmp
nop
cld
cmpl
pop
ljmp
in
mov
shll
hlt
lds
les
jae
sub
add
sarb
mov
movsl
mov
in
xchg
cltd
fiadds
je
mov
mov
jmp
mov
mov
fwait
pop
mov
aaa
scas
cs
shll
fs
and
addb
cmc
mov
lods
inc
sub
sbb
scas
mov
mov
mov
out
jecxz
add
add
add
pop
dec
dec
dec
pop
dec
pop
pop
in
fld
sarb
movsb
js
add
add
add
push
inc
add
add
add
dec
push
mov
mov
or
dec
add
add
add
movl
cmp
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
cwtl
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
call
add
incl
out
aas
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
lea
pusha
push
incl
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
in
xor
add
movl
test
ljmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
js
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
cwtl
mov
or
rorl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
push
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
aaa
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
and
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
cmp
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
cwtl
clc
xor
inc
cmp
pushf
mov
test
clc
dec
inc
mov
pushf
rol
movsb
incb
inc
mov
test
clc
pushf
inc
decl
push
cld
jge
cmp
add
jmp
les
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
fmuls
test
test
cmp
pushf
xor
add
inc
dec
cmp
sarl
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
cwtl
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
cwtl
lret
xor
mov
lea
xor
add
inc
dec
mov
push
mov
or
dec
inc
xor
push
mov
add
inc
decl
add
inc
mov
cwtl
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
rolb
mov
xor
orb
dec
leave
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
cmp
shrb
clc
add
cmp
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
sar
shl
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
sbb
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
les
inc
push
aas
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
cmp
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
cmp
pushf
xor
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
cwtl
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
cwtl
cmp
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
xchg
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
std
mov
clc
test
je
mov
cld
add
add
faddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
in
add
push
and
incl
fmull
inc
nop
ljmp
lea
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
js
inc
inc
int
inc
sub
add
int3
mov
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
icebp
or
out
mov
pop
push
cmp
sar
incl
inc
ljmp
push
mov
and
inc
push
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
cmp
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
cmp
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
js
data16
idiv
inc
fadd
mov
andl
flds
pop
push
in
incl
loopne
inc
jmp
addl
mov
inc
call
outsb
inc
js
divb
mov
orl
jb
decl
mov
test
inc
rorb
adc
mov
mov
cmp
test
pushl
mov
add
jmp
pushf
decl
add
data16
add
add
test
dec
mov
mov
inc
cmpb
mov
add
push
mov
call
mov
data16
test
out
lea
test
inc
ljmp
decl
test
incl
test
rclb
test
inc
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
in
xchg
aam
call
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
cbtw
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
jmp
lea
faddl
xor
lea
test
decl
mov
dec
clc
call
lea
lea
test
popf
push
add
xor
cwtl
mov
incl
push
push
inc
shlb
lea
call
test
incl
clc
call
jmp
inc
jnp
add
mov
mov
data16
inc
lea
test
inc
dec
test
cmp
mov
pushl
lcall
incl
pop
mov
mov
decl
mov
mov
test
incb
incl
cmp
pushf
inc
mov
hlt
test
cmp
pushf
or
pop
lock
test
clc
mov
lahf
lret
mov
add
add
rorb
mov
incl
cld
mov
add
jge
test
sbb
xchg
call
push
inc
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
cmpl
pushf
xor
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
cld
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
cwtl
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
out
adc
jne
mov
fcomps
add
incl
mov
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
add
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
cmpl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
cmp
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
cwtl
pushf
xor
jne
mov
icebp
icebp
shl
mov
cmp
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
cmp
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
clc
add
dec
hlt
xor
mov
in
jge
mov
dec
cmp
xchg
mov
add
cmp
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
cmp
fdivl
test
push
add
cmp
sets
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
cld
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
or
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
ljmp
xchg
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
rol
out
add
add
and
fs
incl
js
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
cmp
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
idivb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
data16
pushf
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ss
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
cwtl
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
data16
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
orps
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
cld
js
popa
data16
into
push
data16
pop
xor
add
cld
cld
add
ss
add
into
ret
pop
add
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
pop
mov
je
xor
mov
xor
pop
cmp
jne
mov
cld
push
pop
inc
stc
aaa
test
clc
test
xor
fs
or
cld
mov
push
push
lret
aaa
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
data16
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
cld
push
add
add
add
lret
lock
lret
cmp
pushf
jge
aaa
cld
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
xor
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
xor
add
data16
dec
fisttps
add
ret
lea
add
cmp
pushf
add
add
inc
test
xor
push
cwtl
push
xor
inc
cmp
jbe
mov
or
inc
test
cmp
in
hlt
push
push
push
push
mov
cwtl
cwtl
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
cmp
pushf
jb
add
inc
daa
inc
inc
xor
dec
cwtl
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
cmp
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
cmp
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
cmp
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
aas
add
push
add
mov
cld
inc
add
rcrl
mov
mov
or
xor
enterw
jmp
ret
inc
mov
add
rorl
icebp
or
inc
inc
mov
or
jne
mov
rolb
add
cld
ret
dec
mov
mov
jmp
mov
mov
sub
mov
in
test
add
add
cmovge
add
cld
mov
adc
mov
xor
cmp
jne
mov
adc
push
test
clc
xor
xor
dec
adc
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
cmp
pushf
push
movl
dec
inc
andb
pushf
push
xchg
fsubr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
cmp
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
cmp
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
add
xor
add
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
and
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
movsb
sar
enter
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fcomps
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
fdivr
testb
dec
clc
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
sarl
pushf
add
mov
xor
test
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
cwtl
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
fiadds
xor
jb
add
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
cwtl
mov
jge
decl
jl
adc
pop
cmp
add
adc
test
adc
jbe,pn
add
adc
clc
pusha
adc
jp
adc
mov
pop
adc
inc
adc
jns
inc
add
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmp
add
xor
add
pop
adc
adc
in
adc
bound
adc
shlb
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
adc
ds
adc
add
add
pop
adc
cltd
outsb
adc
ja
adc
jne
adc
arpl
add
test
add
test
add
test
add
test
add
adc
add
adc
and
adc
ret
pop
adc
loopne
adc
add
aas
adc
push
test
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
sbb
adc
inc
bound
add
adc
jecxz
adc
pushf
xor
add
or
add
inc
adc
xchg
test
add
test
add
test
add
test
add
xor
xor
push
xor
add
push
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
inc
ss
push
inc
dec
inc
add
inc
xor
dec
pop
cmp
cmp
push
pop
push
pop
dec
push
dec
dec
inc
pop
dec
xor
push
inc
pop
xor
add
push
pop
inc
push
dec
xor
pop
dec
xor
inc
inc
dec
pop
push
dec
xor
dec
ss
aaa
aaa
dec
dec
add
ss
inc
inc
xor
dec
ss
pop
dec
dec
inc
inc
dec
xor
xor
xor
xor
inc
dec
xor
add
xor
xor
pop
add
cmp
inc
dec
inc
xor
pop
inc
inc
add
dec
pop
dec
xor
dec
xor
dec
pop
push
dec
dec
cmp
xor
pop
inc
pop
push
pop
cmp
pop
dec
dec
pop
add
pop
pop
push
xor
xor
xor
push
push
add
dec
add
add
dec
add
inc
add
add
xor
pop
add
add
add
add
add
push
add
xor
pop
add
inc
add
add
push
add
add
xor
xor
xor
xor
pop
add
add
add
inc
add
add
dec
add
add
add
add
add
add
cmp
dec
add
add
pop
add
dec
add
add
dec
add
dec
add
add
inc
add
add
dec
add
pop
add
pop
add
add
dec
add
add
aaa
add
xor
inc
add
pop
add
add
inc
add
push
add
pop
add
xor
push
add
add
dec
add
add
inc
add
inc
add
add
add
cmp
push
add
pop
add
add
inc
add
add
push
add
add
add
add
add
xor
cmp
dec
add
dec
add
cmp
inc
add
add
inc
add
dec
add
pop
add
add
xor
add
inc
add
add
pop
add
cmp
push
add
pop
add
add
add
add
add
push
push
inc
push
jno
cmp
test
xchg
addl
negb
add
push
cmp
js
jbe
arpl
popa
push
pop
outsl
insl
dec
inc
push
jbe
pop
push
js
insb
insb
dec
addr16
push
jb
push
insl
push
bound
push
arpl
pop
jo
dec
inc
push
insb
inc
dec
jne
jbe
jo,pn
bound
