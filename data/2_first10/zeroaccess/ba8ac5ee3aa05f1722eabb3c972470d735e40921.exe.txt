add
add
call
add
add
add
add
add
add
add
add
mov
mov
or
dec
add
add
add
movl
cmp
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
pushl
mov
mov
cld
ljmp
mov
add
incl
xlat
lea
inc
ljmp
incl
aaa
add
test
pandn
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
rorl
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
add
test
ljmp
mov
fcom
add
mov
add
add
addr16
add
push
inc
push
fisttps
test
add
jecxz
roll
inc
jle
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
enter
incl
in
xor
mov
cld
jle
mov
add
mov
decl
add
inc
das
mov
cld
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
lds
add
push
cs
add
mov
test
add
incl
jmp
faddl
jge
adc
mov
lahf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
inc
ret
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
jp
add
mov
inc
lret
inc
iret
jb
mov
enter
cmp
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
fadds
xor
mov
clc
enter
mov
test
clc
incl
aas
mov
test
clc
pushf
inc
pushl
cld
pushf
inc
mov
insl
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
cmp
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
lahf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
lahf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
lahf
shll
lret
or
add
in
push
mov
popa
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
lahf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
cmp
rolb
clc
popa
jb
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
cmp
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
popa
xor
mov
popa
xor
orl
fsubs
int3
lea
push
cmp
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
cmp
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
lahf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
lahf
shll
lret
or
add
in
push
mov
popa
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
pop
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
lahf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
sar
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
adc
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jle
inc
xchg
mov
mov
or
inc
inc
mov
cld
loop
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
loope
push
push
incl
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
ret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
jmp
inc
jmp
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
xlat
ss
aas
loope
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
cmp
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
andl
lret
mov
add
lret
pushf
and
pop
rcr
test
clc
add
cmp
pushf
add
add
inc
push
rcrl
inc
fsts
mov
nop
rolb
mov
add
pop
add
or
mov
add
call
add
add
push
inc
orb
leave
dec
dec
add
call
clc
inc
inc
mov
enter
mov
xor
xor
or
sbbb
int3
test
clc
inc
mov
fmuls
sub
add
leave
cmp
pushf
mov
jl
add
add
or
test
clc
or
cmp
sbb
mov
xchg
pop
add
mov
add
mov
mov
mov
xor
add
inc
jge
mov
xor
add
push
jne
mov
decl
add
cmp
push
inc
inc
add
add
mov
mov
mov
sbb
inc
add
push
clc
add
mov
jne
mov
add
add
lea
lea
xor
ret
mov
add
push
inc
inc
add
test
jne
mov
mov
push
pop
inc
decl
rclb
xor
addl
mov
push
jbe
mov
ret
dec
inc
jmp
mov
cld
push
mov
add
push
push
inc
jmp
add
add
inc
ret
mov
mov
sub
mov
mov
rolb
inc
add
inc
add
clc
inc
ljmp
xor
add
mov
mov
inc
fdivs
loop
add
add
ljmp
add
add
add
mov
dec
incl
test
sbb
add
mov
add
and
dec
mov
dec
call
inc
add
cmp
inc
add
jb
mov
cmp
lret
mov
test
andnps
decl
inc
add
mov
inc
hlt
mov
xchg
add
xor
add
mov
mov
mov
push
push
inc
mov
call
inc
adc
decl
aam
push
add
xor
lcall
cmp
test
clc
inc
and
mov
cmp
je
mov
add
sbb
dec
dec
mov
mov
add
add
jne
mov
cmp
jb
mov
mov
mov
inc
je
push
add
push
mov
in
shlb
test
call
inc
inc
rorb
jmp
mov
mov
loopne
sbb
inc
inc
push
lea
lea
or
js
mov
incl
call
inc
add
decl
test
mov
add
add
incl
data16
push
rorb
incl
inc
add
decl
mov
add
add
xor
cmp
jbe
lea
mov
jae
mov
decl
add
call
add
mov
jb
incl
mov
sbb
push
je
incl
data16
test
lea
cmpsl
movw
mov
lea
js
incl
mov
pop
jmp
add
out
pusha
out
call
jmp
inc
add
in
mov
addl
mov
data16
addl
push
in
dec
inc
add
mov
in
incl
sub
incl
jle
leave
add
test
push
addl
outsl
in
add
test
ljmp
data16
inc
inc
xlat
cmp
jle
leave
icebp
inc
add
mov
fdivp
mov
in
test
inc
inc
mov
cld
inc
out
rclb
inc
mov
mov
sub
jne
movl
int3
inc
add
lea
xor
add
inc
adc
test
add
movb
jl
add
mov
mov
sbb
add
loopne
adc
or
inc
loop
xor
or
jle
inc
add
adc
repnz
xorb
adc
dec
repnz
mov
adc
call
adc
inc
push
flds
mov
fcmovnb
xor
sbb
addl
inc
mov
sbb
xorb
add
decl
add
incl
mov
lret
enter
inc
jne
mov
mov
mov
mov
ud2
xchg
xor
dec
mov
sbb
cmp
push
pop
adc
andb
mov
push
mov
adc
loope
inc
inc
fildll
mov
inc
subb
ljmp
lea
xor
mov
stos
mov
push
test
mov
push
ret
mov
sbb
rcl
inc
inc
int3
mov
cwtl
movl
ljmp
jmp
inc
or
rol
dec
adc
incl
add
push
push
add
test
or
jmp
pushl
add
push
loope
jae
jmp
andl
mov
sbb
addb
mov
incl
push
pop
clc
mov
orb
mov
lea
inc
ljmp
pop
inc
mov
mov
rclb
incw
lea
stos
add
mov
adc
pushl
decl
dec
push
loop
adc
call
mov
sbb
loopne
cmp
dec
mov
sub
inc
mov
xor
test
decl
add
push
add
mov
jbe
test
inc
push
addl
pop
add
ret
decl
mov
mov
cwtl
mov
test
rorb
lea
mov
push
decl
pushl
call
lea
mov
mov
mov
inc
dec
mov
xor
decl
call
lea
incw
cmp
decl
jmp
inc
jmp
dec
lea
jge
mov
lock
mov
mov
roll
push
str
xor
add
add
inc
rdpmc
mov
dec
inc
add
mov
data16
jne
push
adc
jne
ljmp
call
or
mov
mov
addl
mov
add
push
xor
dec
mov
mov
jl
push
mov
rcl
mov
mov
push
ret
push
pop
leavew
inc
sbb
in
xchg
push
shl
addl
mov
cwtl
or
setl
inc
add
test
xor
add
xor
mov
test
movb
adc
add
roll
mov
incl
ljmp
adc
jne
call
mov
push
sbb
inc
test
dec
add
dec
inc
mov
add
add
adc
and
jp
sysret
pop
add
cmp
sub
dec
mov
ret
clc
mov
addl
jnp
pop
add
xorl
adc
jge
mov
cld
test
add
add
negb
add
pop
add
add
inc
test
mov
fisttpl
mov
push
add
test
add
add
mov
add
add
mov
call
or
dec
or
inc
dec
addl
scas
dec
add
lock
mov
call
rclb
xor
adc
mov
mov
nop
rolb
mov
push
or
xor
sti
cmp
dec
test
or
ret
or
pop
add
xor
inc
mov
push
inc
mov
or
sti
dec
sub
cld
mov
mov
add
jne
cmp
jns
pop
jge
cmp
cld
inc
iret
or
jae
xor
jmp
mov
lea
mov
in
testb
jge
add
mov
cmp
hlt
adc
jl
clc
js
pushl
mov
clc
add
mov
call
inc
popa
jge
cmp
xor
rcrb
push
or
push
sub
in
add
fistl
sbb
test
inc
mov
cld
je
cmp
rorb
adc
mov
sbb
push
inc
mov
add
or
cld
mov
jge
xor
mov
hlt
iret
pop
inc
jbe
cmp
adc
push
add
dec
divl
sbb
mov
test
je
mov
or
cmp
jbe
mov
or
jg
add
dec
add
je
mov
mov
mov
adc
jmp
xor
pop
rcrb
ret
cmp
push
cmp
cld
xor
cmp
pushf
or
add
pop
mov
push
add
push
adc
push
xor
mov
in
dec
add
nop
iret
add
push
dec
lahf
mov
add
add
cmp
je
add
mov
pop
mov
lahf
fbstp
add
pop
pushf
mov
xor
ud0
add
add
or
dec
inc
mov
xor
mov
mov
fdivs
push
or
inc
imul
loopne
sbb
jg
inc
jne
mov
adc
fiadds
jne
mov
clc
test
xor
xor
mov
cld
jb
add
adc
rcr
add
add
pmaxub
dec
decl
xor
add
cmp
hlt
mov
faddl
xor
add
cmp
clts
jp
decl
xor
add
jne
mov
xor
lea
jb
add
add
add
add
adc
pop
mov
hlt
add
jmp
incl
xor
in
push
inc
mov
hlt
add
orl
mov
fcompl
enter
add
mov
in
and
mov
mov
cld
pushf
dec
lahf
xor
add
mov
cld
add
xor
pop
mov
cld
sbb
dec
mov
jne
mov
fadds
mov
push
fdivs
decl
lcall
inc
inc
xor
add
cmp
mov
fadds
mov
test
lahf
push
xor
out
mov
or
in
sbb
add
jne
mov
mov
cld
test
lahf
fbstp
ret
call
xor
add
mov
cld
dec
mov
cltd
inc
inc
mov
cld
lea
xor
add
inc
je
mov
cwtl
movb
add
sub
lock
mov
aam
ljmp
mov
in
inc
mov
cld
jmp
rorl
mov
fadds
add
xor
add
pop
hlt
pop
push
ret
mov
mov
cmp
fadd
test
jne
decl
mov
xor
add
clc
jne
add
xor
lea
add
jb
add
inc
jne
add
or
inc
scas
aas
mov
jne
mov
or
icebp
lahf
shll
mov
lsl
cmp
cltd
mov
add
mov
call
jge
sub
xor
jge
xor
add
mov
xor
add
jne
xor
jmp
mov
cld
mov
clc
leave
xchg
or
push
mov
cld
in
icebp
jnp
add
jae
sub
inc
call
pop
call
xor
add
ret
xor
inc
loopne
jne
mov
push
jge
xor
in
test
add
mov
xor
xor
add
cmp
mov
xor
add
cmp
mov
add
add
or
ja
mov
cld
pop
stc
mov
in
jge
mov
or
icebp
add
jae
add
push
jne
mov
repnz
cmp
xor
clc
pop
repnz
out
pop
testl
pop
add
pop
jge
xor
add
cmp
fdiv
test
clc
mov
rcll
stc
or
mov
in
lahf
jne
mov
or
lahf
xor
add
mov
mov
lock
push
inc
jne
mov
in
mov
clc
repnz
decb
mov
cmpl
clc
call
hlt
add
clc
inc
jne
mov
clc
test
xor
mov
in
xchg
roll
sbb
cld
clc
pop
add
add
mov
mov
or
add
test
add
mov
sbb
rclb
add
add
mov
and
cmp
pushf
or
rcrl
xor
mov
add
inc
inc
mov
add
cmp
inc
push
mov
mov
lock
xor
mov
cmp
cmp
clc
ret
dec
inc
xor
inc
add
add
dec
mov
cld
mov
cmp
pushf
dec
mov
xor
mov
cmp
push
mov
add
incl
mov
in
inc
or
rclb
add
push
inc
call
leave
push
add
mov
or
jo
cmp
add
add
mov
or
mov
cmp
roll
mov
dec
dec
sbb
cld
mov
test
cmovne
test
add
into
xor
add
mov
faddl
mov
nop
into
add
mov
mov
invd
mov
mov
mov
push
push
cmp
fmuls
call
rcl
rcl
call
inc
jne
jmp
sbb
dec
or
mov
sbb
dec
and
push
add
cmp
je
push
and
add
or
inc
adc
inc
and
push
push
sub
push
mov
sbb
dec
mov
add
jge
add
mov
mov
cmovne
xor
xor
or
roll
dec
add
dec
jbe
mov
cld
mov
bswap
push
lret
xor
mov
and
or
daa
xchg
push
push
adcl
push
xor
add
decl
sbb
rolb
and
mov
enter
mov
push
add
add
addl
mov
rorl
mov
inc
dec
mov
inc
mov
call
or
mov
inc
push
mov
into
mov
mov
lea
mov
push
xor
mov
sub
mov
loopne
lret
push
dec
mov
lods
xor
add
mov
xlat
dec
sarb
jne
mov
fsub
add
xor
in
mov
hlt
mov
mov
in
jb
push
inc
push
jle
leave
cmove
lods
add
mov
or
xor
mov
orl
into
in
lret
xchg
gs
add
mov
fsubs
inc
lea
push
lea
fadds
mov
inc
add
mov
fmul
rorb
add
inc
inc
je
mov
sbb
add
add
jmpw
or
lret
jne
mov
in
add
lret
mov
sbb
inc
call
and
and
inc
test
add
rorb
data16
call
ret
test
inc
orb
sub
stc
test
mov
lea
call
pop
add
xchg
add
add
push
cmp
fdivs
add
lea
test
je
mov
decl
push
add
inc
sbb
push
or
mov
cmp
mov
inc
pop
add
add
push
decl
or
adcl
push
jno
add
push
clc
sar
xchg
add
jne
mov
mov
sub
rolb
loopne
dec
mov
mov
call
add
add
add
add
jmp
xor
pop
lcall
ret
mov
mov
add
push
and
adc
add
dec
or
sbb
cmp
pop
push
add
mov
and
xchg
add
add
cli
loope
shlb
dec
ret
sub
pushf
inc
mov
or
test
clc
incl
cmp
pushf
jb
add
add
mov
hlt
inc
data16
mov
jmp
mov
or
inc
add
mov
mov
mov
add
sbb
jne
sub
lahf
mov
and
add
lock
test
add
push
inc
in
mov
ret
push
test
add
inc
shlb
pop
add
loopne
inc
pop
xor
mov
fdivrp
pop
mov
hlt
addl
cmp
lock
add
add
push
or
add
data16
lock
jge
mov
test
data16
add
andl
mov
jne
mov
inc
or
lock
mov
mov
in
or
mov
call
sbb
push
mov
lock
pop
jne
mov
retw
minpd
str
jne
xor
mov
cld
add
add
sar
mov
mov
lock
es
mov
clc
jne
jge
mov
or
add
push
xor
add
add
mov
or
mov
add
mov
mov
or
fisttps
clc
ja
mov
or
lahf
sti
add
add
fbld
pop
mov
or
mov
hlt
add
mov
or
mov
or
mov
mov
adc
stc
mov
mov
or
mov
or
add
cmp
mov
xor
mov
add
jge
mov
pop
clc
cmp
data16
mov
xor
pop
jge
mov
lock
jge
ltr
add
hsubpd
data16
jge
mov
dec
xor
minpd
data16
jmp
mov
sarw
mov
jb
add
pop
mov
clc
jne
data16
jnp
pop
inc
add
data16
data16
add
pop
icebp
sbb
jne
mov
call
mov
in
data16
repnz
xor
inc
mov
call
add
ret
jge
mov
mov
add
data16
mov
add
mov
add
data16
pop
test
pushf
add
into
fistps
push
mov
mov
mov
push
repnz
lock
jne
mov
cld
mov
xor
mov
mov
push
sub
mov
mov
add
dec
cmp
jne
mov
mov
stc
jge
data16
xor
data16
lock
inc
data16
pop
add
rorb
inc
mov
in
sarl
pop
or
push
mov
mov
or
cmp
je
mov
mov
add
push
mov
mov
pushf
sub
add
xor
dec
str
cmp
int
mov
xor
mov
xor
lret
push
add
push
add
cmp
sti
mov
mov
cld
add
data16
roll
mov
lret
in
add
pop
lret
ret
enter
pop
movl
pushf
call
add
in
add
mov
clc
xor
mov
cmp
je
push
pop
sysenter
leave
dec
popa
jle
popa
mov
int
mov
lret
add
jne
lea
add
ret
inc
xlat
add
add
or
ret
add
jne
lea
add
lret
mov
add
mov
cmp
repz
xorb
inc
inc
add
cmp
pushf
push
je
xor
mov
andl
add
in
push
mov
add
mov
clc
mov
or
ret
or
or
lret
add
mov
adc
iret
mov
add
dec
push
mov
add
rcrb
add
ret
jne
mov
xor
mov
test
clc
fs
mov
pop
sub
add
xor
xor
add
cmp
jne
cmp
clc
pushf
pop
mov
push
xor
mov
psubsb
icebp
lea
testb
sarl
xor
mov
adcl
add
inc
sub
mov
addl
orl
cmp
mov
decl
dec
mov
mov
mov
xor
mov
push
leave
mov
push
test
lahf
in
xor
mov
clc
test
cmp
pushf
dec
mov
in
mov
push
icebp
add
roll
add
roll
cmp
pushf
dec
movl
clc
or
xor
pop
dec
dec
lea
add
dec
inc
sub
orl
cld
adc
scas
or
pop
xadd
jb
add
inc
sub
mov
lock
icebp
add
clc
pop
mov
data16
add
xor
add
lea
add
add
inc
adc
dec
mov
mov
mov
lea
add
inc
in
incl
leave
add
push
roll
sbbl
sarb
jbe
mov
or
push
mov
mov
jne
jmp
mov
push
pop
mov
add
xor
sub
mov
inc
inc
mov
dec
lahf
xorl
orl
leave
jbe
mov
in
inc
in
mov
or
dec
inc
data16
pushf
mov
mov
cld
test
push
inc
mov
lahf
pop
xor
mov
inc
or
sar
dec
lea
in
decl
mov
cld
inc
inc
inc
mov
jmp
mov
mov
push
lahf
xor
add
inc
cmp
pushf
std
xor
inc
fadds
inc
mov
inc
lahf
xorl
cmp
mov
clc
sub
inc
call
pop
inc
lahf
pushl
adc
std
dec
decl
inc
push
call
add
xor
add
add
inc
cld
add
mov
orl
test
clc
inc
inc
mov
mov
inc
or
shlb
jne
xor
pop
add
ret
je
push
mov
mov
mov
in
inc
orl
pop
test
xor
mov
add
add
mov
or
add
xor
inc
inc
add
xor
add
mov
sub
lret
mov
jae
lea
xor
jne
or
or
pushw
jne
cmpxchg8b
mov
add
data16
call
cmovge
xor
add
sub
or
add
inc
cmp
mov
subl
enterw
shlb
pop
or
mov
dec
inc
data16
push
jb
jmp
incl
mov
or
jo
test
jmp
incl
mov
pop
lock
push
dec
mov
dec
ror
rolb
dec
lock
pop
in
cmp
clc
xchg
cmp
jne
xor
jmp
mov
jne
call
mov
add
inc
jne
mov
mov
mov
add
stos
add
mov
les
xchg
iret
add
inc
jle
out
cld
add
xchg
add
push
pop
add
paddq
xchg
add
adc
test
incl
incl
rorb
decl
inc
inc
incl
data16
rclb
mov
lock
jle
mov
mov
jge
mov
adc
enter
dec
or
mov
lods
ja
mov
pop
lea
inc
clc
inc
outsb
lea
push
inc
mov
pop
mov
jae
cmp
adc
pop
inc
sbb
mov
or
cmp
mov
cld
xchg
add
add
lea
adc
or
faddl
push
add
push
inc
add
push
adc
mov
fdivr
cli
dec
add
add
add
xor
cmp
mov
lock
rcl
pop
add
pop
dec
cmp
mov
add
push
dec
in
mov
push
pop
mov
add
add
add
inc
mov
hlt
push
decl
push
add
pop
or
jns
ret
jmp
mov
in
jge
sysexit
cmp
cmp
sbb
pop
add
jae
mov
lcall
mov
mov
fdivs
xor
movl
add
push
ret
mov
jne
mov
faddl
xor
push
or
icebp
incl
rolb
inc
stc
mov
lock
add
dec
add
mov
call
sbb
mov
pop
jge
lea
add
or
leave
fadds
dec
add
xchg
add
mov
mov
or
dec
pop
mov
ljmp
add
inc
or
dec
add
test
push
ret
lea
pushl
mov
sub
add
clc
mov
add
dec
push
xor
xor
in
add
inc
jmp
xor
mov
adc
xor
jne
mov
mov
hlt
pop
add
in
push
in
dec
push
xor
pop
pushf
dec
mov
mov
in
dec
addb
add
mov
test
dec
push
mov
mov
clc
into
dec
lret
lock
test
push
jge
push
enter
dec
cld
jmp
pushf
inc
mov
sub
int
mov
mov
adc
enter
jmp
xor
mov
or
call
ds
or
rorb
push
inc
in
mov
or
lock
test
clc
rolb
cmp
add
mov
xor
xor
sub
jmp
mov
lock
mov
push
icebp
xor
mov
enter
add
cld
scas
add
dec
mov
xor
xor
add
add
test
mov
adc
je
xor
xor
add
add
rorl
enter
icebp
or
lock
enter
lret
or
mov
cld
bswap
pop
mov
in
hlt
pop
jne
xor
xor
jbe
mov
clc
pop
mov
mov
clc
mov
adcl
inc
in
cmp
add
inc
cld
cmp
hlt
inc
test
clc
hlt
inc
test
clc
pushf
push
push
inc
inc
fdivrs
xlat
pushf
mov
mov
xor
mov
xor
add
pavgb
test
dec
inc
mov
cld
xlat
enter
lret
add
leave
jne
mov
enter
lret
scas
out
jmp
mov
cld
add
xor
jmp
xor
add
rorl
dec
mov
cld
lea
mov
mov
xor
enter
stc
add
call
pop
xor
sub
enter
inc
in
xor
clc
cmp
cmp
pushf
call
mov
loopne
inc
test
clc
add
push
mov
push
inc
push
mov
mov
mov
xor
mov
sbb
ljmp
mov
mov
xor
xor
mov
hlt
bswap
roll
xor
mov
xor
call
enter
mov
lock
inc
mov
inc
inc
enter
inc
mov
mov
roll
add
push
into
in
movb
dec
or
xorb
add
add
in
push
inc
mov
adc
push
xchg
popa
iret
dec
lahf
mov
clc
add
cmp
jne
addl
or
or
push
dec
jnp
dec
xlat
mov
call
lsl
cld
sti
lahf
mov
mov
clc
iret
dec
lret
xor
lea
dec
inc
mov
mov
int
sub
lock
mov
in
cmp
xor
jne
mov
in
dec
mov
nop
add
pop
mov
mov
ret
mov
mov
mov
dec
add
jo
push
inc
jne
mov
push
pop
ret
push
inc
xor
add
jnp
jg
ljmp
inc
mov
push
cmp
dec
xor
cmp
jne
orl
jmp
mov
push
add
add
add
cmp
mov
sbb
mov
xor
mov
cmp
cmp
adc
test
cmp
pushf
sbb
add
add
dec
jnp
mov
rolb
iret
or
cmp
xor
or
xor
add
mov
inc
inc
mov
mov
mov
cmp
dec
decl
inc
mov
or
sbb
inc
inc
mov
or
dec
push
dec
inc
rclb
push
inc
decl
rolb
inc
inc
mov
sbb
inc
push
xor
lea
cmc
xor
add
mov
inc
inc
mov
ret
inc
add
adc
test
clc
inc
inc
mov
push
adc
test
mov
sbb
dec
ret
sub
add
xor
lea
lods
jb
add
sar
cmp
pushf
add
add
mov
test
clc
inc
inc
cmp
mov
or
bound
clc
lea
xor
lea
mov
or
dec
imul
incl
inc
add
pavgb
movl
clc
iret
inc
lock
lret
fmull
mov
test
mov
loopne
inc
loopne
inc
loopne
xbegin
adc
jb
mov
inc
inc
push
mov
incl
mov
loopne
rol
test
dec
push
decl
push
mov
add
cmp
add
call
clc
test
cmp
pushf
mov
or
iret
test
mov
in
pop
dec
add
add
dec
mov
in
dec
or
iret
add
testl
test
add
add
mov
or
add
cmp
add
mov
mov
lock
dec
test
dec
add
cmp
or
mov
dec
push
lea
lods
mov
clc
cli
or
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
clc
rorb
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
in
add
add
mov
in
mov
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
cli
or
cmp
je
mov
ret
or
lock
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
lock
rorl
jb
add
ja
sbb
xchg
enter
inc
decl
loopne
jb
add
dec
adc
add
inc
rcll
mov
xor
jb
add
jne
decl
add
repnz
inc
mov
mov
shll
mov
movsb
add
push
adc
inc
pushl
mov
add
mov
test
inc
mov
lret
mov
sbb
inc
mov
xor
enter
inc
add
cld
test
lahf
jne
mov
fsubrs
decl
hlt
xor
sbb
call
pop
or
dec
adc
push
add
cmp
je
mov
or
pushf
ret
mov
lea
clc
or
push
inc
or
pop
call
test
jne
mov
movsb
xlat
inc
push
push
or
push
decl
dec
adc
roll
sbb
dec
je
push
call
test
inc
iret
add
clc
jmp
mov
test
or
add
inc
mov
mov
and
push
mov
rolb
iret
orl
push
clc
jmp
add
mov
jmp
addl
pop
inc
pop
sbb
inc
add
clc
and
mov
and
mov
and
mov
and
xor
pop
mov
xor
mov
mov
mov
push
add
mov
cmp
mov
dec
add
push
adc
push
cmp
and
mov
and
xor
jb
add
inc
and
lea
and
push
jmp
cli
and
clc
and
call
jmp
dec
ds
cmp
bswap
mov
add
and
mov
mov
or
inc
jmp
addl
push
inc
sbb
dec
test
movb
aas
add
aas
add
jne
incl
clc
add
inc
jne
call
fadds
mov
add
add
add
incl
push
and
roll
inc
adcl
inc
adc
inc
lcall
je
sbb
lea
je
sub
je
and
mov
clc
and
and
add
and
add
cmp
or
pop
push
mov
sub
xor
mov
mov
mov
orl
mov
movl
mov
and
movl
mov
xorl
push
push
andl
push
mov
xor
addl
mov
orl
add
mov
movzwl
and
movl
dec
movl
movl
add
jmp
xlat
mov
and
mov
cltd
test
jle
jle
jg
jle
cmp
fld
ja
or
push
or
cmp
enter
pop
mov
or
rol
or
dec
add
push
in
outsl
add
pushf
jo
dec
mov
cmp
xorb
jbe
fisttpl
jecxz
and
xchg
dec
incl
mov
sub
jae
lret
lcall
mov
loop
cmp
fs
sub
or
sbb
and
add
fisttpll
popl
shll
movb
pop
rcll
jns
mov
daa
add
fstpt
dec
loopne
xchg
sbb
movsb
cmp
pop
cwtl
loope
outsb
inc
jnp
jae
cmp
cmc
mov
and
jge
cmpsl
add
add
push
xchg
push
xor
leave
movsb
mov
sub
out
and
jmp
cmp
sub
imul
cmp
sbb
subb
pusha
arpl
jnp
mov
mov
cmpsl
call
loop
push
push
push
out
xchg
int
add
rcrb
fmuls
pusha
dec
ret
mov
test
kmovw
and
negb
test
sbb
push
jle
add
movb
mov
je
add
fstl
cltd
loope
jns
and
scas
pop
rcll
mov
jg
jle
jg
jle
or
cmp
push
sarl
xor
push
lea
mov
add
icebp
inc
lea
loope
repz
in
mov
out
xchg
push
dec
lods
mov
cli
dec
pop
pushf
pop
out
mov
mov
mov
mov
lcall
leave
pop
daa
je
nop
mov
incb
jp
push
lahf
xchg
cs
in
add
cmp
cmpsl
pushf
fwait
adc
clc
mov
sbb
daa
xchg
cli
rorl
mov
add
sub
dec
pop
ret
mov
lahf
add
sbb
pop
jmp
xchg
adc
mov
mov
imul
push
out
test
add
xor
aad
pop
or
mov
mov
enter
pop
jmp
sub
xor
lret
sbb
movsb
sub
cmp
jg
pop
repz
cmp
jle
or
movsl
jns
ret
mov
or
lret
and
leave
push
aad
xor
or
mov
adc
enter
pop
mov
sub
fisttpll
mov
insl
in
hlt
negb
pop
xchg
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
subl
movl
movb
sub
mov
xor
andl
add
mov
mov
xor
adcl
add
andl
push
dec
mov
xor
andl
add
xorl
push
andl
mov
jmp
push
mov
xchg
push
mov
pop
imul
fidivrl
jle
inc
push
stc
into
push
cwtl
rol
scas
ss
fs
sti
xchg
add
mov
and
mov
or
xchg
mov
in
roll
test
push
jl
int
add
mov
scas
push
push
push
jbe
loope
dec
rorb
xor
scas
js
popa
movsl
inc
lds
push
out
mov
scas
push
sahf
in
fmull
in
outsb
push
std
dec
scas
movsl
in
call
xchg
adc
xchg
jae
sbb
out
mov
adc
sub
fdivs
mov
and
sahf
xchg
lods
push
jp
inc
or
aad
fsubs
dec
cltd
fucompp
cmpsb
sub
push
out
imul
fsts
fucom
inc
jge
sub
or
mov
out
sbb
iret
test
jecxz
andl
rorl
pop
push
movsb
mov
push
ret
clc
iret
pop
sub
call
fwait
push
adc
sub
and
mov
aad
jge
jns
dec
and
xor
pop
or
loopne
lock
mov
mov
dec
sahf
cmc
mov
cmp
fnstcw
sbb
add
xorl
push
lea
push
movl
pushl
subl
pushl
subl
call
incl
test
movl
je
subl
lea
negl
push
add
mov
andl
xor
add
andl
push
mov
add
push
andl
mov
subl
mov
pushl
addl
call
movl
mov
movl
cmpl
notl
lea
mov
je
lea
jmp
ja
je
je
test
push
outsl
jne
mov
sub
jb
jle
jg
jle
scas
loop
jmp
mov
sub
icebp
call
or
dec
pushf
ret
jl
jl
repz
push
dec
bswap
cltd
sub
negl
lods
jle,pn
sbb
mov
adc
jge
push
xor
dec
jnp
sub
sub
imul
jae
mov
test
and
or
call
arpl
sub
cwtl
icebp
sub
push
lea
mov
cltd
cmc
cwtl
or
in
idivb
mov
shrb
aam
xchg
dec
cmp
das
lock
es
or
mov
je
xchg
imul
mov
and
test
out
dec
in
jae
fadd
loope
add
rclb
mov
cmp
insb
jnp
mov
aas
lcall
mov
jb
inc
cli
jno
push
mov
mov
xchg
push
xchg
mov
addb
test
mov
mov
xor
pop
cltd
add
lock
jmp
cmp
cli
push
xchg
inc
jns
sbbl
out
sbb
jmp
xchg
ljmp
or
out
shrl
shr
inc
pusha
pop
add
out
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
inc
mov
adcl
xor
add
andl
jmp
adc
imull
mov
and
out
jae
jle
jg
jle
pop
mov
inc
inc
ret
and
or
dec
inc
cmp
das
mov
dec
mov
loop
fnsave
mov
in
dec
int
insb
test
pushf
fildll
shll
test
adc
add
repz
xchg
or
lahf
jo
pop
adc
sub
xchg
push
dec
jbe
dec
sti
sbb
insl
push
xor
ret
add
mov
inc
mov
jno
sub
mov
divl
cmp
mov
xchg
mov
ljmp
dec
repnz
dec
fucomp
and
rcll
inc
ljmp
dec
daa
mov
outsb
cld
outsb
sub
or
mov
shlb
cmp
ffreep
shlb
and
push
or
adc
int3
add
xor
test
push
xchg
fucomp
in
mov
mov
lods
push
into
jecxz
mov
enter
cli
and
pop
stos
jns
xlat
jno
sahf
lods
jbe
jge
and
insl
in
ljmp
jp
rorl
adc
test
je
out
call
insb
pop
mov
push
dec
dec
out
stos
or
pop
xor
enter
mov
and
adc
add
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
jmp
sbb
clc
and
fldcw
mov
mov
fidivrl
jle
fldt
iret
outsl
or
xor
test
adc
enter
inc
inc
mov
and
daa
fs
cmp
cs
inc
in
popf
add
push
mov
inc
adc
notb
pop
loopne
loope
and
inc
daa
mov
adc
jbe
sub
mov
jecxz
sarb
rcrb
mov
cmpsb
in
and
adc
cli
jbe
push
lcall
push
sub
leave
lock
or
dec
imul
sub
arpl
lret
and
cmp
dec
imull
inc
aaa
sbb
daa
hlt
sti
lahf
push
mov
cmp
mov
jmp
das
xlat
or
es
push
ret
outsl
mov
ret
imul
lock
icebp
leave
add
aaa
cmp
jae
mov
icebp
popa
inc
and
out
rclb
cmp
mov
jno
in
mov
cmp
add
into
adc
xor
mov
and
scas
sub
cmpsl
sbb
and
inc
insb
push
popa
or
jecxz
divb
push
xchg
test
jmp
out
outsl
and
dec
lret
mov
stos
mov
jns
push
ss
xchg
or
clc
lea
push
pushl
pushl
jmp
loop
cli
cs
cli
cli
ret
cmpsb
push
inc
cli
or
fidivrl
jle
jg
xchg
clc
pop
les
test
adc
mov
sbb
adc
add
fidivrl
popf
outsl
lret
les
sbb
jb
adc
fcmovnbe
xor
lret
imul
mov
add
mov
adc
cmpsl
mov
fistl
adc
xor
je
mov
ss
lods
xchg
int3
in
dec
adc
out
dec
outsl
mov
popa
and
shrl
fs
push
dec
xchg
outsw
fnstenv
fldcw
shrb
lock
shll
sub
cmpsb
movsb
in
cmp
jae
add
mov
pop
sbb
pop
shll
sarb
data16
pop
and
dec
xor
ja
aas
lcall
test
pop
stos
mov
imul
test
popf
dec
testb
sbb
loope
sbbl
inc
cmp
out
in
xor
pushf
bound
popf
test
in
insb
mov
sarb
ljmp
stos
fcmove
pop
std
xor
imulb
out
outsb
xlat
cs
cmp
pop
cmp
leave
push
movsl
cmp
dec
inc
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
jmp
lahf
icebp
shll
icebp
addl
rorb
bnd
jle
jg
jle
sub
les
and
cmp
shr
std
or
ss
lods
lret
push
jno
jb
jb
pop
les
add
push
in
pop
lcall
out
inc
jnp
ds
jo
sbb
or
adc
jns
and
push
lret
lret
lock
inc
loope
mov
sbb
stos
mov
adc
mov
adc
adc
pop
sub
dec
push
and
mov
or
jp
iret
sbb
hlt
jns
sub
movsb
in
inc
movsb
add
cmp
xchg
pusha
mov
cmp
fstl
js
cmpb
pop
push
js
add
js
sub
int
or
mov
sbb
add
stos
imul
cwtl
add
fidivs
cld
adc
jmp
mov
loopne
mov
mov
lea
cltd
pop
add
aaa
pusha
pushf
lahf
aam
inc
les
xor
mov
rcrl
xlat
cmpsb
jmp
jmp
lea
aam
sbb
mov
cmc
popa
adc
es
mov
sub
inc
test
bound
mov
fnstsw
je
lock
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
jmp
mov
in
stc
andb
cmp
cs
sub
je
jle
jg
jle
pusha
orl
fisubs
pop
jg
xor
dec
mov
idivb
push
and
clc
push
jne
and
cmc
daa
push
mov
loopne
ljmp
dec
aad
dec
sbb
jo
sub
mov
push
in
dec
mov
loopne
imul
movsl
jp
add
fprem
sbb
dec
insb
data16
push
out
push
mov
pop
mov
fildll
and
push
jb
mov
fisubl
loopne
jbe
dec
xchg
rcrl
out
and
inc
add
fistpll
dec
sbb
adc
movsl
int3
and
sarb
out
mov
sub
mov
cmp
push
cmp
or
jnp
lret
in
jns
cmp
shll
add
cmc
inc
movsl
cmp
clc
aad
ret
xchg
adc
mov
mov
jecxz
daa
cld
sub
sub
test
inc
push
popa
and
add
out
jge
dec
mov
out
aas
cmpsl
adc
fs
out
or
mov
clc
rorl
jle
mov
mov
mov
in
jmp
jne
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
jmp
mov
fidivl
or
push
inc
pop
cmp
jle
fidivrl
jle
fsubrs
sub
sub
jb
icebp
fdivs
outsl
imul
lock
popf
pop
out
fs
and
fldcw
popf
adcb
out
cmpsb
mov
daa
xchg
adc
jne
sub
xchg
dec
mov
mov
in
fimull
mov
iret
repnz
sbb
inc
push
dec
push
pusha
inc
fistl
jle
mov
and
sbb
push
rcrb
ret
notb
push
and
xlat
add
mov
or
inc
push
mov
mov
sbb
inc
push
jp
sahf
popa
add
cmp
or
dec
sbb
arpl
cmp
mov
adc
fldcw
inc
xchg
and
out
mov
xor
or
roll
inc
sbb
jg
daa
pushf
loopne
movsl
jno
push
mov
insb
and
fs
mov
mov
xchg
or
inc
xchg
test
dec
cs
mov
in
stos
cmp
add
outsl
aam
repz
pop
sbbb
or
sbb
lahf
cmpsl
fstps
cmp
adc
xchg
in
mov
xchg
dec
xchg
sarl
nop
mov
test
push
shrb
sub
sbb
push
dec
mov
mov
xlat
push
bound
push
fbstp
fmuls
add
or
pop
leave
ret
push
mov
sub
push
sub
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
orl
movl
xor
add
and
movl
mov
mov
mov
xor
adc
mov
movzwl
sbb
add
addl
mov
jmp
mov
cmp
mov
sub
and
jle
or
fsubrs
les
fsubrl
mov
dec
das
or
xchg
pushf
sti
stos
sbb
mov
inc
or
jle
mov
push
in
mov
ljmp
inc
xor
stc
mov
jp
cmp
mov
mov
movsb
mov
push
or
pshufw
inc
cmp
das
in
repnz
inc
or
iret
rep
add
xchg
or
test
mov
fidivl
jecxz
xchg
jnp
nop
int3
sub
ds
std
out
xchg
jnp
js
jp
jae
add
out
push
and
mov
fsubs
jge
add
dec
mov
test
pop
lcall
adc
insl
jne
mov
push
stos
push
jbe
cmp
stc
and
push
popa
mov
jae
imul
dec
subl
cmp
adc
fwait
orb
addr16
cwtl
loope
push
cmp
sbb
push
or
sub
inc
sbbl
dec
add
test
mov
fwait
xorl
mov
and
dec
dec
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
xor
add
jmp
xchg
lcall
pop
jb
hlt
cmpl
cmp
xor
sbb
jns
hlt
iret
inc
mov
dec
sub
mov
push
xor
xor
pop
outsb
gs
add
test
outsl
mov
int3
testb
bound
cmp
push
in
jne
jp
or
loopne
xor
jb
push
push
and
dec
test
addr16
jnp
cltd
ffree
repz
fnstsw
cmp
cmpsl
cmp
jnp
jno
adc
fidivl
pop
daa
test
xchg
insl
rcl
mov
je
cmp
lds
shlb
imul
nop
adc
stos
and
fidivl
mov
leave
test
inc
iret
imul
into
cmp
adc
push
sbb
leave
leave
cmp
inc
adc
insb
sbb
mov
jnp
mov
movsb
out
push
pop
cld
sahf
or
daa
mov
icebp
mov
pop
adc
jno
bound
outsl
std
out
inc
mov
ficompl
jecxz
fsubl
dec
push
xor
push
dec
xor
xor
insb
jns
pop
mov
mov
jmp
or
mov
or
fbstp
nop
jl
jle
and
jle
sbb
fs
push
push
aaa
inc
je
push
inc
xchg
inc
add
insl
nop
test
gs
cli
jne
mov
jne
adc
and
dec
pop
scas
add
test
cltd
or
pusha
shlb
je
push
xchg
or
mov
jl
in
addr16
shrb
sbb
mov
cmc
call
adc
push
arpl
ret
pop
cmp
orl
je
adc
rcll
jmp
ss
jmp
sbb
push
sbb
jecxz
movsl
aaa
test
aad
loope
pop
dec
push
cmp
lcall
outsb
sbb
mov
sbb
sbb
out
sub
inc
mov
jnp
lcall
cmp
jg
rol
movsb
cmp
test
sbb
into
inc
add
sbb
addl
sahf
cwtl
call
cmp
adc
scas
dec
mov
xor
and
adc
fs
mov
lods
dec
sub
push
repnz
arpl
dec
repnz
lret
clc
pop
jae
movl
xor
xor
adc
mov
movl
movl
adc
movl
or
movl
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movl
andl
movl
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
sub
xor
mov
add
cmp
movl
je
movl
jmp
lock
jns
mov
fwait
shrb
jle
and
jle
mov
and
add
cmpsl
xor
and
pop
les
stc
outsl
add
sub
lret
add
inc
mov
ror
sahf
add
adc
or
repz
mov
imul
mov
ret
cli
lret
jg
adc
aaa
push
pop
push
push
data16
or
leave
fdivr
mov
push
rcrb
push
add
loop
filds
out
adc
repnz
lds
test
mov
xlat
inc
dec
adc
xor
xchg
push
mov
jg
cmp
fnsave
roll
pop
push
std
pop
push
adc
cld
aam
mov
inc
push
stos
push
ret
pop
imul
fistpl
inc
dec
push
push
outsb
push
fwait
mov
jmp
ljmp
mov
sub
pop
sbbb
sarb
mov
loop
repz
lahf
fisttps
sub
in
mov
xchg
sti
xchg
imul
rolb
add
xchg
into
lea
shll
mov
push
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
mov
dec
mov
jmp
mov
orl
sub
adc
mov
adcl
xor
sbbl
add
movl
cmp
movl
jb
mov
sbb
mov
mov
or
xor
xor
movl
add
dec
add
dec
imul
sbbl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
sbb
mov
incl
sub
movl
cmp
movl
ja
mov
movl
xor
addl
add
movl
jmp
mov
sbbl
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
jmp
add
mov
inc
popf
imul
ljmp
jle
nop
data16
mov
clc
mov
xchg
and
inc
movsl
insb
lret
adc
xor
and
cmpsl
test
cs
movl
jle
add
sbb
sub
repnz
aam
std
push
adc
dec
shlb
dec
mov
xlat
xchg
shl
push
enter
in
insb
decb
and
add
les
movsl
cmpsl
inc
xchg
and
les
inc
mov
lcall
mov
nop
jg
sbb
aad
jp
cs
idivl
pop
sbb
lret
out
icebp
mov
sub
push
sahf
pop
test
into
test
scas
add
aas
mov
movsb
imul
inc
add
jae
or
out
xchg
mov
jb
shld
ss
adc
xor
into
mov
mov
lods
outsb
jno
insl
inc
mov
pop
xchg
pop
dec
push
lret
bound
add
lret
add
push
negb
or
je
aad
pop
sub
cmp
xchg
cmpsb
mov
clc
add
add
imul
mov
jmp
jbe
xchg
call
adc
in
lahf
or
jle
adc
mov
aam
xchg
movsb
rcll
mov
jp
into
mov
outsl
outsb
jmp
lds
in
cmpsb
or
and
fstpl
rolb
dec
shlb
aam
push
out
sbb
add
cmpsb
adc
inc
insb
fdivr
fcoms
xchg
mov
loopne
outsb
xchg
loopne,pn
faddl
mov
orl
scas
jo
pop
imul
ss
cmpsl
arpl
xchg
push
sbb
mov
xlat
cwtl
call
pop
rclb
in
add
mov
dec
add
or
pop
es
mov
movsl
jg
cwtl
sub
mov
test
in
and
mov
stos
dec
cmc
pop
sti
fstpl
and
test
je
and
mov
adc
and
xor
and
sbbb
rorl
jg
popf
ds
test
lret
pop
into
sbb
dec
add
sbb
lahf
idiv
dec
cmp
fidivs
add
lock
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
jmp
lock
xchg
mov
and
add
in
add
and
jle
adc
je
popa
sarl
aam
inc
dec
sbb
inc
push
cmpl
mov
cmp
ja
std
and
xchg
movsb
stc
inc
test
lcall
dec
lea
mov
cmp
enter
sbb
dec
sbb
aas
bound
lods
and
arpl
rorl
add
clc
adc
xchg
into
cmp
das
dec
jnp
jp
xor
push
into
mov
adc
push
lods
popa
jmp
cltd
mov
cmp
scas
mov
pop
dec
ficompl
data16
xchg
push
sbb
cmp
fwait
jp
mov
fiadds
mov
arpl
adc
shll
pop
lds
mov
rcll
stos
and
sub
pushf
pop
or
add
popf
icebp
xor
inc
push
test
popa
pushf
fiadds
xchg
mov
push
ss
cwtl
push
dec
mov
xchg
pop
cmp
and
dec
jno
mov
lcall
inc
sub
pop
sub
cltd
mov
cmpl
call
mov
movl
movl
mov
jmp
daa
mov
in
dec
push
push
cmp
xchg
pop
mov
and
jle
and
push
or
pop
or
mov
mov
addl
xor
push
mov
lods
out
xchg
ss
addr16
cmpl
fs
iret
dec
cmp
and
mov
xlat
aad
jmp
aad
add
pop
imul
int
mov
mov
pop
inc
mov
jbe
ret
and
xchg
mov
jl
mov
xor
xchg
jge
stos
jmp
and
jne
push
imul
add
lock
jg
xchg
fidivs
loop
sbb
popw
push
mov
mov
ljmp
push
pop
jbe
inc
inc
fs
fsubrl
adc
cmp
jl
out
gs
add
xchg
out
xchg
lcall
xor
leave
ret
loop
scas
pop
imul
adc
cmp
out
mov
rcl
addr16
mov
popa
sbb
inc
daa
hlt
in
and
in
roll
cmpsb
jo
stc
test
cwtl
mov
sbb
push
cld
mov
sbb
cltd
imul
sti
faddl
jo
aas
adc
xor
and
xchg
dec
xor
jmp
int
mov
stc
repnz
gs
add
and
jle
jnp
rcl
aad
sar
icebp
xchg
outsl
imul
test
dec
movsb
add
lret
or
out
mov
and
inc
mov
je
mov
add
jle
call
lods
psrlw
subl
aad
dec
mov
pusha
outsl
test
aas
cmc
cmp
mov
stos
jg
movzbl
xlat
shrl
jg
jge
xor
testl
scas
movsl
push
lahf
test
std
nop
jnp
lcall
aas
mov
and
mov
int
jge
enter
inc
lea
in
inc
lret
fists
adc
xor
stos
cmp
cmpl
js
sbb
ficoms
push
and
cmp
out
lret
out
loopne
jle
pop
in
ror
inc
dec
stos
dec
leave
xor
mov
mov
mov
adc
lcall
inc
mov
in
jno
stos
mov
mov
sti
jo
out
out
mov
add
out
sbb
inc
inc
add
mov
add
pop
or
loop
lods
sub
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
jmp
mov
scas
pop
popa
cmp
xor
jecxz
jle
and
jle
push
push
sbb
mov
add
inc
icebp
ljmp
push
inc
lret
jecxz
dec
mov
cmp
dec
enter
lcall
jl
cmp
shll
pop
adc
sbb
es
mov
push
cli
cmpsb
test
push
mov
pop
sub
rol
sti
xchg
lock
xor
scas
inc
mov
andl
test
push
fcoms
enter
pusha
frndint
adc
cmp
scas
jo
imull
or
shl
xchg
mov
add
mov
bswap
insl
push
lods
mov
shrl
xor
cmp
scas
cmp
fisubrs
add
and
test
xor
je
xchg
loope
add
jae
outsl
lahf
push
lock
inc
popf
pop
pop
and
bts
sub
mov
push
in
mov
and
xor
fmuls
pusha
test
fiaddl
cltd
push
xor
dec
sbbb
jp
mov
ss
mov
or
imul
push
lcall
in
xchg
cmp
push
or
hlt
xor
add
mov
jmp
stos
out
pop
sbb
test
leave
ss
sbb
jg
jle
jp
cmpsl
cwtl
sub
jle
aam
cmp
cmpsl
and
jl
inc
call
push
pop
icebp
insl
loop
adc
mov
pop
pop
mov
loopne
push
push
jg
jns
mov
or
fs
push
or
setg
adc
adc
loope
jns
imul
mov
push
sub
push
fdiv
cmpb
dec
xor
leave
or
mov
je
insb
inc
xchg
xor
jne
jno
sar
stos
dec
jg
pop
das
adc
cmpsb
outsl
pushf
xchg
call
add
mov
xor
dec
jle
lret
xor
scas
inc
sub
lret
or
cli
xchg
lods
sub
ljmp
pop
sub
imul
pop
es
adc
inc
push
xchg
cmpsb
sahf
inc
fs
repz
sbb
pop
or
push
cmp
mov
shlb
mov
push
mov
int3
pop
icebp
and
fst
jae
xchg
rorl
push
mov
dec
out
inc
pop
aam
mov
add
inc
xchg
jne
outsb
pop
lock
xchg
pop
lahf
jb
add
dec
add
add
mov
dec
js
movsl
mov
lods
je
push
cmp
jle
and
jle
js
jns
mov
adcl
and
es
scas
cmp
jne
push
lea
iret
push
sbb
mov
femms
daa
push
xor
and
aad
fmuls
call
xor
pop
adc
pop
stos
mov
sub
scas
lods
rorb
arpl
testb
and
sub
push
cmp
adc
cmp
pop
push
leave
cli
push
or
push
rcl
mov
hlt
cli
icebp
jbe
div
imul
jp
adc
icebp
lods
push
out
mov
jbe
sbb
push
ds
add
jg
mov
shrl
lea
jge
pop
outsl
out
mov
das
xchg
jecxz
sub
fs
jmp
iret
nop
pop
fidivs
inc
jmp
cmp
xchg
shrl
xor
sub
push
add
popf
sub
push
mov
popf
jle
cmpsb
test
addr16
inc
mov
je
xor
mov
or
es
sub
insl
push
xor
inc
pop
shll
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
jmp
hlt
jae
pop
mov
pushf
sbb
mov
mov
and
jle
ficomps
test
jmp
mov
iret
ret
in
xlat
insb
lretw
mov
mov
in
fsub
enter
mov
sahf
push
sub
cmpsl
jo
jle
out
mov
dec
std
imul
imul
mov
stos
addr16
push
xchg
xchg
dec
xchg
jle
cltd
js
insb
add
cwtl
adc
push
sub
jb
aaa
lahf
nop
icebp
xchg
out
enter
jg
lods
adc
repz
sbb
push
test
mov
gs
mov
sbb
pop
pop
jmp
int3
ficoms
stos
cs
push
jle
xchg
insb
enter
idiv
lea
out
xchg
adc
sbb
jns
and
push
orl
cltd
ja
sbb
adc
jg
or
pop
sbb
xchg
insl
cmp
leave
dec
shlb
rorb
fiadds
xlat
mov
and
xor
mov
shll
cmpsb
std
out
and
pop
add
out
jne
adc
adc
xchg
shl
ds
add
mov
lea
mov
mov
xor
mov
sub
add
jmp
sub
jmp
sub
adc
inc
aaa
sbb
and
jle
test
lret
cmpsl
cmp
jp
shll
pop
ficomps
and
pavgw
mov
ficomps
fwait
enter
or
push
js
add
shll
sub
rcrl
sbb
nop
int
pop
xchg
inc
xchg
stos
pop
test
inc
repnz
sbb
pop
xchg
mov
mov
cmp
add
pop
dec
pop
nop
pop
jae
sub
aad
cli
idiv
cmp
add
outsb
pop
mov
xor
jl
inc
mov
mov
mov
mov
push
mov
lret
lcall
push
mov
test
mov
lret
jle
xor
repnz
cmp
xchg
inc
call
xlat
test
add
adc
cmp
mov
mov
test
or
mov
test
hlt
shl
fs
cmpsl
cli
lods
cld
or
jae
stc
int
mov
push
push
repnz
andb
out
aas
stc
mov
or
cmpsl
push
int3
lret
push
loopne
pop
clc
xor
add
imul
cmp
jbe
pop
jmp
push
cld
dec
or
jp
adc
into
cli
clc
sbb
and
jle
sti
sub
adc
mov
mov
rolb
xchg
scas
or
inc
shlb
insl
out
ret
dec
addb
insl
jp
xor
cmc
mov
mov
cmp
push
push
cwtl
cmc
imull
std
int3
jbe
sbb
into
shlb
incl
dec
dec
or
mov
and
jp
nop
pop
popa
cmp
mov
lcall
adc
inc
lods
int3
clc
add
mov
jecxz
pop
inc
pop
dec
add
mov
mov
cmpsl
fcmovnu
mov
int3
xor
or
out
test
shr
push
imul
pop
es
repnz
pop
in
dec
inc
test
jb
addr16
ljmp
in
sti
and
mov
and
imul
pushf
push
mov
sbb
mov
insb
xor
inc
lcall
mov
fisubrs
and
jl
mov
mov
cltd
in
push
aaa
inc
jae
les
scas
popf
xchg
sahf
ficoms
push
or
xor
mov
out
cmp
icebp
daa
pop
leave
ret
push
mov
jmp
jb
test
adc
jl
lods
sbb
jmp
sub
xor
prefetch
call
movsl
mov
mov
push
jmp
fisttpl
jb
jecxz
adc
dec
scas
inc
imul
cmc
stc
sbbl
xlat
adc
jbe
xchg
pop
mov
lods
sahf
pop
popf
add
imulb
and
idiv
shl
fldcw
mov
xchg
xchg
dec
adc
movsb
hlt
push
cmp
imul
pop
jnp
jnp
in
rcll
jns
out
clc
pop
pop
push
cmp
dec
repz
mov
lret
jmp
setg
xchg
push
pop
add
cmp
ljmp
xchg
xchg
adc
inc
pop
enter
ret
data16
mov
outsb
stos
cwtl
sbb
ss
ljmp
sub
push
roll
data16
in
mov
mov
jnp
bound
in
gs
mov
aam
ja
cmpsb
dec
test
mov
push
dec
and
push
sbb
sbb
adc
dec
adc
repnz
test
imul
jae
out
aaa
sar
rolb
and
jg
stos
pop
insl
xabort
dec
fmul
mov
add
adc
xchg
in
das
xchg
jae
pop
mov
adc
popl
sbb
shl
xchg
sub
push
sub
and
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
call
jmp
xorl
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movl
mov
push
adc
mov
xor
mov
push
mov
add
cmp
jmp
iret
in
push
adc
jns
int
les
pop
sti
insl
sbb
jle
jmp
dec
sub
fisttpl
xchg
dec
sub
jle
fnsave
sbb
sbb
les
dec
mov
push
xchg
xchg
mov
jns
testb
or
iret
mov
ds
mov
fistpl
aad
movl
xchg
loop
xchg
sub
pop
inc
imul
test
cmc
xor
ret
cmpsb
ret
mov
cltd
pop
jp
adc
lds
inc
mov
outsb
inc
and
mov
and
fcompl
out
and
int3
fimuls
push
xor
aam
in
rolb
mov
jp
ret
in
xlat
adc
repnz
xor
sbb
jmp
fdivr
xor
je
ret
xor
jnp
mov
push
mov
loop
out
loop
jl
xor
les
jns
pop
sub
fcompl
lods
inc
stos
pop
xchg
rorb
ret
or
sbb
mov
push
and
ficoms
mov
xchg
loopne
movsl
rorb
scas
lods
leave
push
adc
xlat
mov
insb
das
jbe
out
push
test
addb
sub
dec
xchg
sub
negl
stos
xchg
mov
add
faddl
inc
jge
jb
or
cwtl
inc
or
push
pop
inc
dec
dec
xchg
jmp
mov
add
jmp
in
pop
jg
cmpsl
insl
in
imul
sbb
jle
jg
jle
mov
jg
xor
push
insl
cmpsl
push
jp
jbe
inc
lret
and
sub
sbb
push
orb
mov
inc
jns
adc
mov
sahf
rcll
ret
call
andl
inc
mov
ja
or
in
pop
je
xlat
neg
lahf
jl
jno
push
mov
mov
mov
cmp
je
pop
int
addr16
in
jne
mov
cli
cs
nop
push
xchg
bound
inc
mov
cmp
mov
test
sbb
jg
jns
mov
test
jbe
xor
inc
iret
out
mov
pop
out
shlb
push
xchg
sub
mov
xchg
popf
jbe
mov
pop
ret
stos
inc
cmpsb
sub
arpl
cmp
stos
and
decb
dec
lcall
js
inc
push
mov
in
jmp
mov
mov
mov
mov
stc
jg
xor
sub
adc
cli
aad
icebp
jns
sbb
arpl
out
scas
test
mov
cmp
xor
or
sbb
xchg
and
inc
test
push
add
int3
loopne
mov
add
popf
out
stos
inc
mov
xor
mov
mov
lret
inc
mov
mov
xor
mov
sub
jmp
les
add
gs
dec
hlt
sbbb
mov
jle
jg
jle
ja
ficoml
pushf
ljmp
leave
outsb
mov
leave
cmp
negl
ret
xchg
add
and
mov
adc
adcl
mov
fxch
or
lret
dec
and
test
cmp
sub
and
sbb
jmp
dec
xchg
sub
adc
out
sub
or
imul
rorb
fs
xlat
push
out
fucomp
je
xor
int
cmp
xchg
sub
aam
cmp
ja
aad
aam
sbb
xor
push
cmp
enter
imul
mov
push
xlat
xor
es
sbb
fsub
mov
movsl
adc
jbe
aas
push
in
xlat
insb
jne
orl
mov
fldcw
test
push
cltd
cmp
cmp
cmp
push
jp
les
mov
imul
das
mov
inc
lahf
inc
inc
jns
imul
sub
fnstenv
lret
addr16
fidivrl
push
xor
lea
push
sti
std
int
and
pop
daa
jmp
xchg
imul
daa
lea
movsb
push
mov
inc
pop
je
dec
loopne
cmpsl
fstl
jge
xor
mov
ja
pop
iret
and
jmp
jge
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
sub
mov
andl
push
andl
pushl
pop
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
xor
mov
xor
jmp
xchg
bound
pusha
ljmp
mov
fdivrl
jle
jp
mov
loop
fs
cli
fs
and
scas
out
in
hlt
xchg
popa
dec
adcb
adc
jle
lods
aaa
insb
push
fs
les
adc
lea
insb
pop
jbe
lea
add
xor
mov
dec
ss
sbb
addr16
or
cltd
sbb
fcomps
dec
nop
sbb
mov
sbb
dec
stos
mov
fistpll
aam
test
test
sbb
pop
iret
iret
jle
mov
jne
out
inc
xor
jnp
pop
cmp
push
pop
dec
lret
or
xchg
cs
push
add
std
call
xchg
int
jecxz
int
fs
sub
inc
rcr
andb
or
push
gs
mov
jle
subb
insl
dec
out
popa
insl
and
out
idivb
xchg
filds
cmp
pop
inc
je
jg
cltd
imull
data16
inc
test
dec
xor
xchg
stos
jne
adc
push
and
jmp
movsl
mov
cmc
int
xchg
push
test
mov
call
and
pop
stos
xchg
mov
sti
pop
fcomp
pop
xor
ret
add
pop
xor
lock
movl
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
jmp
icebp
mov
mov
cmp
jns
xor
jle
fdivrl
jle
mov
lods
jl
ss
cmpsb
inc
dec
nop
sbb
xchg
mov
sbb
cltd
mov
scas
push
idiv
dec
xor
test
dec
mov
mov
dec
add
adc
fsts
popa
jo
jae
rorl
or
adc
ficoml
jo
add
mov
inc
sbb
stc
in
jle
mov
repnz
dec
mov
ljmp
cwtl
mov
fdivr
pop
mov
mov
jl
into
push
cmp
orl
add
cli
sub
dec
fbstp
add
out
jecxz
adc
divl
sbb
xor
and
popa
loopne
je
and
pop
jno
popf
jbe
test
ret
adcl
xor
data16
into
popa
push
leave
xchg
aam
hlt
cmpsb
mov
pop
inc
jmp
xchg
outsl
outsb
jo
arpl
sub
add
gs
mov
mov
fs
add
or
cmp
xchg
pop
adc
pop
or
mov
mov
addr16
adc
pop
mov
fstpt
push
stos
mov
xchg
inc
shrl
pop
lds
loop
das
andb
pop
fwait
pop
sbb
loope
cmp
jmp
lret
adc
mov
mov
jmp
and
pop
xchg
adc
arpl
push
call
jle
fdivrl
jle
adc
dec
out
cmpsb
or
xlat
xchg
andb
leave
push
ret
push
inc
mov
or
je
js
lret
out
xor
loope
les
cmp
mov
fisttpl
sbb
out
rorl
lods
mov
adc
jae
aaa
xor
aas
into
outsb
xor
inc
adc
lret
mov
inc
andb
js
repz
xor
and
or
sbb
cmp
les
out
imul
jecxz
mov
arpl
inc
and
repz
ret
or
dec
dec
xor
mov
jo
jg
roll
cmp
das
or
bound
sub
scas
push
jl
leave
xchg
pop
movsb
add
jl
push
fldcw
scas
jnp
add
push
repnz
jbe
call
inc
push
or
pop
lret
cmc
mov
mov
sub
push
movsb
scas
dec
pop
sbb
addl
imul
mov
cmc
cmp
iret
repz
xchg
cmp
mov
cltd
jmp
xchg
aad
cmp
es
jns,pn
out
or
cmp
ds
bound
push
xchg
sub
loopne
pop
sub
add
roll
mov
jmp
mov
jmp
push
gs
movsb
es
add
fdivrl
jle
xchg
xor
mov
xor
cltd
loopne
jg
xlat
add
cltd
insl
out
and
addr16
fnstsw
cld
test
cs
int3
sbb
repz
in
cld
cmp
jmp
lret
jnp
scas
mov
fucomi
shl
or
or
idiv
pop
fistl
jle,pt
ror
push
lret
xchg
jg
xchg
pop
insb
aas
scas
jnp
xlat
lret
lcall
lcall
lcall
aas
push
inc
popf
pop
mov
mov
movsb
and
pop
jle
sbb
cwtl
cltd
mov
push
and
lds
sbb
or
lret
daa
jge
in
adcl
mov
sub
jbe
sub
nop
pop
adc
pop
mov
mov
incb
repz
mov
ds
pusha
pop
test
inc
inc
fsubrl
orb
cli
mov
push
sub
scas
xchg
inc
push
push
cmpsb
inc
mov
and
fs
int
out
cmp
and
mov
xchg
jb
mov
pop
pop
dec
sbb
sti
pop
lret
mov
and
xlat
pop
xor
dec
sub
call
loopne
mov
lahf
insl
popa
xor
ret
cmp
xchg
icebp
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
incl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sub
mov
subl
jmp
dec
pushf
push
in
imul
mov
adc
jle
jg
jle
push
gs
js
hlt
xchg
mov
cmp
cmp
loope
inc
dec
mov
rorl
adc
mov
dec
xorb
jns
cmp
test
pusha
jae
mov
xor
or
xor
xchg
pop
inc
cld
or
xchg
aad
fidivs
adc
loopne
push
add
jmp
mov
ds
or
imul
jg
add
or
adc
or
push
inc
push
inc
ret
lds
xchg
notb
aad
jo
fisttpl
xlat
popl
push
adc
bound
pop
test
test
mov
jno
mov
adc
jecxz
or
cmp
jne
jo
xor
add
fnstenv
test
or
aam
gs
jb
fcomi
pop
push
jns
adcl
mov
inc
pop
jo
cs
xor
mov
notl
add
mov
or
mov
jmp
sub
xchg
jns
jns
or
insl
data16
jge
jle
or
jle
mov
add
cmp
lret
mov
ljmp
aaa
or
adc
mov
sub
and
out
push
jg
js
mov
push
icebp
dec
fistl
stc
not
push
adc
fiaddl
and
push
xor
add
cs
jns
in
xor
or
and
xor
int3
xchg
push
sahf
das
jb
test
mov
shl
mov
xor
mov
inc
dec
ss
jecxz
cld
mov
pusha
movsb
cmc
clc
xchg
mov
daa
jp
push
xchg
icebp
xor
xchg
xchg
sub
test
std
mov
dec
xor
sub
xor
dec
sub
add
outsb
push
mov
cmp
mov
stos
sahf
xchg
cmc
and
rorb
mov
xchg
sti
hlt
sbbb
dec
imul
mov
jge
out
movzwl
add
mov
movb
lea
and
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
neg
mov
xor
orl
sub
mov
xor
jmp
adc
fs
jmp
fidivrl
je
or
jle
or
jle
push
mov
scas
push
sub
push
jbe
jmp
add
movsl
push
fmul
inc
fstl
mov
mov
call
mov
mov
mov
fcomps
cmp
lret
insb
outsl
xor
and
and
jb
push
mov
ret
dec
pop
and
scas
adc
data16
scas
pop
xchg
sub
in
fists
fmuls
bound
mov
xor
sbbl
lods
mov
insb
inc
flds
inc
pop
xor
mov
shl
mov
and
push
add
stos
push
xor
hlt
in
faddp
lods
xchg
mov
jnp
int3
sub
insb
test
jae
push
call
inc
xchg
lea
lcall
inc
insl
pop
jno
sbb
das
into
fcmovnu
and
lcall
mov
mov
fldenv
jb
or
pop
enter
test
int3
jge
mov
data16
movl
adcl
movl
mov
xor
add
sbb
mov
addl
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
jmp
sub
fwait
and
sbb
jecxz
sub
or
jle
and
add
test
fisubrs
inc
cmpsl
ds
rolb
dec
outsb
sti
fildll
out
stos
xchg
jo
stos
adc
dec
mov
adcb
lret
ja
dec
and
mov
loop
mov
jno
mov
jmp
dec
pop
xchg
pop
lahf
mov
cmp
cld
cmp
push
jne
cs
dec
sbb
in
xchg
inc
or
repnz
xor
cmp
popa
sbb
mov
mov
inc
mov
lods
xor
add
adc
and
and
inc
cmp
mov
inc
mov
xchg
and
xor
inc
xlat
les
mov
mov
je
lock
pop
das
sahf
mov
jns
movsl
jbe
cmp
fyl2x
mov
jne
sub
add
dec
dec
push
lret
rorb
in
pop
out
xchg
pusha
fisubrl
out
bound
rcrl
cmp
shl
call
push
pop
xor
add
cmp
je
jmp
xor
cltd
js
popa
cmp
fcmovnu
call
or
jle
sub
into
jne
int3
out
mov
mov
cmp
mov
xchg
push
imul
test
idiv
push
jne
aaa
pop
outsl
jnp
decb
das
test
rorl
sub
push
hlt
stos
sbb
loope
fwait
in
or
loop
push
sub
sub
add
int3
fiadds
fwait
xchg
sti
pop
stos
mov
dec
mov
das
pop
mov
mov
outsb
incl
pop
popf
dec
pop
cmpsb
mov
and
push
rol
movsb
scas
ds
lock
cld
mov
sub
inc
loopne
push
rcrb
fs
adc
mov
out
dec
dec
repnz
in
mov
lock
mov
jle
insl
outsl
xlat
int3
inc
pop
jg
cltd
and
jmp
sub
jns
cld
pushf
scas
and
and
pop
push
movsl
mov
insb
mov
icebp
outsb
adcb
jge
mov
xor
mov
add
movzwl
mov
mov
jmp
fcoms
sub
clc
fcomps
and
dec
sub
jg
jle
arpl
xchg
fs
imul
mov
add
adc
mov
mov
lods
gs
mov
mov
push
ret
ljmp
jge
aaa
sub
jg
cmc
jecxz
jnp
adc
test
lock
movsb
test
mov
inc
arpl
add
mov
or
icebp
scas
sbb
adc
xorl
adc
pop
xchg
or
jle
or
xchg
mov
or
out
fidivs
mov
ret
sub
dec
push
adc
and
jg
js
add
xchg
lahf
or
pop
mov
pusha
mov
daa
xchg
cmp
out
arpl
repnz
jle
jle
cmpsb
cmpsb
sub
lahf
sub
outsl
cmp
mov
lods
imul
sbb
mov
fldl
aam
sub
xor
repz
xor
mov
dec
mov
sub
mov
nop
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
jmp
inc
jno
icebp
stc
js
xchg
insb
lret
sbb
jle
or
jle
dec
sti
mov
js
xlat
movsb
negb
pop
cmp
xchg
jo
jb
cmc
arpl
sub
mov
fmull
pop
push
mov
sub
fcomps
dec
rcrb
mov
jecxz
into
cmc
cmpsl
arpl
ja
mov
adc
test
clc
rcll
shlb
clc
sbb
mov
mov
sahf
mov
arpl
out
pop
sbb
test
add
or
imul
push
into
cmpsb
push
icebp
das
xchg
cmc
inc
test
imul
and
dec
sbb
xchg
stos
and
pop
pusha
or
pop
loop
push
dec
test
sub
push
dec
lret
test
inc
or
pop
xchg
dec
clc
push
sti
cld
shll
jp
xorl
dec
hlt
cmpsl
jecxz
gs
pushf
xchg
jp
jg
add
xor
adc
nop
fisubrl
flds
jae
mov
test
movl
and
add
dec
sub
lock
cmpsb
xor
jg
jle
pop
icebp
and
repnz
and
ret
imul
cwtl
in
mov
mov
cli
mov
lret
sub
sub
add
mov
dec
cmc
mov
or
repz
mov
pop
sbb
jge
in
xchg
sbb
orl
sbbb
pusha
addr16
xchg
sbb
xor
sahf
les
pop
push
outsl
pop
xor
lods
pop
mov
pop
les
xor
mov
push
in
xor
sub
add
out
stos
and
sbb
xchg
loope
pop
test
xchg
xor
dec
es
icebp
clc
jecxz
inc
add
jb
aaa
or
jl
bound
mov
dec
pop
repnz
in
dec
xor
sarb
or
hlt
fisttpll
clc
adc
les
pop
xchg
rorl
xchg
movsb
add
dec
subl
stc
loop
or
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
jmp
jmp
loopne
mov
jmp
in
shrl
jle
cmp
pushl
mov
test
add
fmuls
lcall
gs
jns
addr16
dec
or
popf
fwait
jmp
jp
xlat
mov
adc
pushf
shrb
lahf
es
pop
or
and
sub
hlt
dec
push
sub
adc
shrb
sub
push
sbb
popa
stos
and
icebp
pop
lods
mov
jnp
pusha
loopne
or
out
stc
pop
cmp
push
mov
shrl
jmp
jb
pop
test
add
sbb
cwtl
lods
push
das
insl
push
imul
js
aaa
cmp
aaa
fiaddl
cmc
push
mov
xor
add
push
rcrl
jnp
sub
mov
jp
or
pop
fbstp
int
inc
sbb
pop
lock
sub
adc
inc
repnz
and
rcrl
push
cmpsb
fucom
clc
push
je
ret
inc
xchg
cmp
pop
cld
or
cmpl
in
fstl
sbb
lea
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
jmp
lods
lock
sbb
daa
adc
cmpsb
frstor
jle
or
jle
inc
mov
lea
jge
xchg
cmp
inc
test
imul
sbb
xchg
mov
mov
int
cmp
repz
ret
cmp
mov
in
icebp
lds
dec
push
xchg
sub
sub
inc
mov
and
or
push
sbb
xlat
rcrb
call
std
xchg
in
inc
xor
cmp
int
pop
mov
mov
push
shll
push
inc
cwtl
or
jp
jp
pop
cmp
call
jp
insl
xchg
push
iret
push
lods
push
lahf
mov
in
lea
pop
xor
leave
or
mov
xchg
call
popf
mov
add
or
push
and
jmp
inc
add
mov
loopne
lahf
sub
aas
mov
push
int
cmpl
es
cld
cmp
nop
dec
mov
push
scas
mov
xor
lea
mov
incl
jmp
mov
xor
jmp
or
stc
enter
and
or
jle
or
into
cmp
adc
dec
negb
leave
mov
pop
sub
jle
xchg
sbb
fmuls
sbb
cmpsb
mov
test
cmp
mov
bound
or
dec
out
cmpsl
sbb
lods
js
jge
xor
jno
dec
and
xchg
mov
mov
xor
enter
nop
xchg
arpl
mov
mov
xchg
clc
cmp
pushf
inc
fwait
test
rorb
cmpsl
ljmp
pop
jns
in
mulb
cld
mov
mov
rep
clc
mov
or
arpl
in
mov
push
jge
jmp
sub
push
mov
shrl
aad
data16
xor
mov
jmp
mov
cmpsb
and
out
pop
push
bound
xchg
mov
sbb
ljmp
test
add
mov
pop
leave
ret
push
mov
push
not
movl
mov
mov
add
mov
adcl
xor
add
andl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sub
xor
adc
push
add
mov
mov
add
xorl
mov
mov
mov
sub
xor
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
mov
mov
mov
jmp
andb
xchg
xchg
mov
xchg
xor
in
jle
cmpb
jmp
cmp
ds
fdivl
add
jns
adcb
call
add
fwait
js
arpl
in
push
hlt
fcompl
push
and
movsl
inc
inc
in
xor
push
sbb
sahf
std
ret
and
sub
cwtl
adc
adcl
and
mov
lret
push
inc
loop
mov
fidivl
cmp
or
aad
mov
jbe
cli
xlat
pop
lahf
push
jg
stc
mov
pop
pop
push
fstpt
cmp
lret
adc
mov
jmp
es
mov
les
xor
and
cmpb
cmc
in
paddusw
js
scas
cli
std
ret
mov
ja
xor
mov
jmp
insb
push
cmpsl
mov
jmp
pop
sub
mov
movsb
mov
xlat
int
pop
mov
adc
movsl
xchg
sbb
sahf
iret
loop
in
arpl
movsl
jae
lods
fmull
xor
mov
ljmp
lods
int
inc
std
std
jmp
imulb
call
push
xor
outsb
icebp
cltd
push
push
popa
dec
mov
call
mov
mov
movsl
jecxz
dec
push
mov
mov
roll
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
jmp
test
pusha
test
cmp
stc
jno
and
push
jg
jle
push
xchg
inc
pop
arpl
ret
add
mov
jb
and
xor
lret
jo
dec
xchg
rcll
in
jp
imulb
test
fdivl
int3
jbe
add
cmp
es
xor
fwait
lds
out
cmp
push
divl
push
cltd
leave
addb
xchg
xchg
jg
cmc
add
inc
inc
outsl
jno
daa
xchg
xchg
inc
sub
add
popa
rorb
inc
cwtl
jp
add
xor
or
push
push
jl
lret
out
jbe
dec
pop
push
call
lahf
adc
ret
mov
inc
out
int
les
mov
in
ja
fnsave
push
je
cmp
push
lret
jg
cmp
arpl
addr16
cwtl
jge
jae
mov
mov
in
or
dec
xchg
xor
jbe
in
cmc
popf
arpl
pop
lods
pop
lods
dec
fs
mov
pop
and
aad
cmp
fimull
cmpsb
testl
mov
insl
mov
or
xchg
rorl
rol
inc
cld
cmp
pushf
clc
or
mov
orl
mov
movzwl
adc
mov
subl
xor
adcl
add
movl
mov
xor
jmp
push
xlat
lcall
jl
mov
es
push
jg
jle
fisubs
push
adcl
xor
rclb
shlb
stc
pop
jmp
adc
cli
icebp
xchg
mov
and
pop
dec
push
or
mov
push
mov
pushf
push
dec
negl
out
test
sbb
stc
xor
xor
data16
lret
pop
fsubr
pop
gs
mov
xchg
mov
xor
mov
loopne
mov
rolb
sti
subl
mov
shl
jp
iret
ret
leave
hlt
pop
dec
mov
dec
jne
mov
mov
push
sub
fcmovnbe
loop
push
sbb
xchg
outsl
pop
cmp
mov
jo
aad
sbb
xchg
loopne
aad
repz
fsts
jb
in
push
lock
call
das
mov
mov
lds
fstps
mov
mov
mov
xchg
faddl
mov
mov
int3
inc
mov
je
rorl
dec
sbb
or
in
xor
lret
sahf
xor
push
mov
xchg
and
add
add
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
mov
mov
jmp
add
cmp
jns
gs
movsb
or
leave
insl
daa
jle
push
jg
jle
push
popa
jmp
add
es
jae
pop
popf
cwtl
dec
xchg
inc
mov
adc
inc
push
sbb
shll
sbb
mov
loope
cmp
aaa
jne
aaa
in
mov
ret
lods
push
aam
dec
push
fisubrs
fstps
mov
ja
les
inc
mov
push
add
pop
lcall
mov
push
outsb
and
and
mov
inc
and
push
jnp
in
addb
pop
xchg
or
jmp
xchg
xchg
jno
xor
sbb
ds
scas
std
pop
mov
fld
mov
cltd
sarb
push
push
fidivrs
dec
inc
xor
sub
test
xor
mov
xchg
push
js
lods
leave
jg
jl
mov
push
js
int3
clc
mov
and
cmp
stos
xchg
sub
pop
mov
out
jnp
or
loop
mov
subb
mov
xlat
pop
mov
ret
cmc
stc
jbe
jmp
in
pop
test
pusha
es
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
orl
push
incl
push
mov
subl
push
push
xor
adcl
push
adcl
mov
xorl
call
cmp
je
xor
jmp
push
mov
mov
push
adcl
push
andl
push
andl
lea
mov
andl
push
negl
call
adcl
mov
mov
test
movl
je
notl
pushl
adcl
call
addl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
xor
shll
and
inc
mov
imul
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
add
or
mov
movl
mov
cmp
movl
jne
movl
inc
movl
cmp
jb
andl
push
subl
call
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
shll
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
and
mov
inc
imul
mov
mov
xor
mov
or
movl
mov
mov
mov
cmp
jne
inc
movl
cmp
jb
xor
sbb
shll
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
xor
imul
mov
sub
mov
and
or
mov
mov
movl
cmp
jne
movl
inc
cmp
movl
jb
xor
andl
xor
add
inc
mov
cmpl
jne
pushl
call
cmpl
jb
addl
shll
and
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
push
push
push
call
jmp
mov
imul
mov
or
mov
mov
movl
cmp
movl
jne
inc
cmp
movl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
push
call
mov
dec
mov
jmp
mov
mov
sub
imul
xor
shll
and
or
mov
xor
imul
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adcl
mov
or
or
mov
mov
mov
movl
cmp
jne
movl
inc
movl
cmp
jb
xor
orl
shll
and
and
mov
adcl
imul
adc
mov
xor
or
xor
or
mov
mov
movl
cmp
jne
movl
inc
movl
cmp
movl
jb
sbb
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
shll
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
neg
and
mov
neg
imul
xor
mov
adc
or
mov
mov
mov
movl
cmp
movl
jne
inc
cmp
movl
jb
xor
shll
and
mov
imul
mov
or
mov
mov
cmp
jne
inc
cmp
jb
inc
cmp
jb
mov
mov
movl
lea
mov
lea
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
cmp
mov
je
mov
xor
add
imul
mov
jmp
xor
jmp
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
or
movl
add
mov
mov
addl
add
sbbl
xor
cmp
movl
jne
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sub
push
sub
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
sub
movl
jmp
jmp
aam
push
pop
jnp
fwait
jne
test
and
jle
hlt
lret
xchg
inc
cmp
and
ret
jge
aad
outsb
cmp
add
nop
aad
stos
inc
mov
shrl
shlb
movsb
dec
and
cmp
sub
test
icebp
push
je
outsb
out
pop
jo,pn
sbb
mov
js
add
repnz
push
ljmp
cli
pusha
cwtl
xchg
or
or
dec
cmp
push
jge
jne
and
call
pop
jle
inc
fs
mov
xchg
push
xchg
cwtl
pop
pop
pop
fildl
dec
test
wrmsr
outsb
popa
xor
sbb
adc
iret
mov
mov
push
sahf
jl
add
pop
addb
add
mov
jb
mov
cmp
out
add
mov
or
call
sbb
into
loop
in
jae
outsb
int
lods
aad
lahf
rol
sbb
addb
inc
mov
xor
xchg
push
mov
jns
or
cmp
popf
xchg
pop
adc
pop
pop
mov
out
jge
test
sub
xorl
nop
inc
cmp
test
inc
sahf
sub
pushf
cmp
dec
jbe
loope
fsubr
ja
icebp
xor
inc
cld
push
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
mov
xor
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
jmp
addr16
mov
jl
arpl
dec
clc
or
cmp
lds
jle
mov
repz
cli
dec
xchg
arpl
mov
xchg
and
jo
js
jle
pminub
push
xchg
jmp
xorl
mov
xchg
inc
jecxz,pn
repz
push
add
cmpsl
jnp
xchg
int3
add
test
xchg
imul
jecxz
jnp
je
mov
loope
inc
sub
inc
mov
or
lods
in
push
xchg
cs
xor
popa
lret
sub
and
push
xor
in
loopne
push
aam
push
dec
push
lahf
scas
or
icebp
xchg
test
scas
das
decb
mov
mov
scas
sbb
xchg
sub
xor
adc
xchg
clc
mov
sub
dec
inc
push
xor
out
emms
lock
iret
movsl
pop
push
adc
ljmp
sbb
cmp
pop
xchg
lods
jle
out
xchg
sbb
xchg
mov
add
in
ja
iret
jl
cld
lea
rclb
hlt
sti
sbb
cmpsl
dec
insl
mov
mov
cmpsb
dec
cmpsl
mov
divb
inc
ss
daa
xchg
inc
mov
xorb
outsl
inc
mov
cmp
jns
xchg
xor
xor
add
jmp
jg
add
jns
cmp
and
jle
jg
jle
inc
ds
jl
mov
mov
inc
adc
dec
fwait
pushw
sub
sti
ja
repz
and
push
fnstcw
addr16
inc
mov
mov
sbb
arpl
imul
sbb
jg
fstl
pop
sub
adc
xlat
frstor
enter
cmp
test
ja
icebp
in
loopne
out
and
push
jbe
cmp
adc
or
xchg
arpl
ljmp
sahf
enter
cmpsl
in
clc
aas
popa
xchg
andl
cmp
leave
das
pop
mov
push
das
cvtps2pd
mov
adc
mov
stos
nop
aaa
mov
mov
xlat
lock
outsl
mov
sbb
cmc
push
cmp
pop
add
jno
loopne
andb
in
ja
push
scas
in
cmc
xor
inc
sahf
pop
jmp
jno
movsb
pop
dec
jae
or
shlb
cltd
cmp
enter
js
sbb
add
leave
cmpsl
loopne
stc
or
insl
ror
dec
cs
adc
jg
in
jbe
xor
ret
cmp
shrl
pop
push
lods
ja
icebp
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
jmp
push
mov
sub
cmc
sub
cmp
lds
jle
mov
xchg
addr16
mov
in
cwtl
xor
or
es
loop
fisubrs
addl
pop
in
mov
inc
aaa
inc
sbb
imul
xor
dec
das
mov
mov
and
loopne
push
outsb
lods
je
or
dec
xor
out
movl
sub
adc
outsb
cltd
call
lods
jle
ror
aam
addl
loope
popf
xchg
dec
dec
cmp
out
push
dec
cwtl
jns
out
push
rcll
jbe
mov
sub
jecxz
fistpll
add
hlt
pop
idivl
inc
push
xor
add
adc
popa
xor
mov
push
mov
sub
mov
and
out
push
xlat
push
push
xchg
adc
fwait
pop
daa
push
jl
inc
fisttpll
movsl
mov
pop
shrb
xchg
sub
ja
leave
xor
scas
jo
xor
std
mov
inc
fsubr
or
xchg
cmp
popa
shr
jmp
pop
sbb
in
adcl
adc
and
fadds
dec
dec
mov
sub
xchg
sub
mov
daa
jge
cmp
iret
jge
adc
mov
or
jns
inc
inc
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
addl
movl
movl
decl
mov
push
mov
xor
xor
jmp
je
jg
addr16
test
sub
jle
jle
jle
cmp
inc
mov
pop
shlb
cwtl
sbb
jb
xlat
adc
jns
inc
jns
out
lret
in
jb
jnp
bnd
adc
lret
lods
xor
or
and
cld
aas
add
jae
jmp
jnp
mov
lahf
popa
sbb
or
leave
daa
sub
aaa
sub
cmp
jnp
lcall
fisubl
gs
dec
mov
push
les
jae
hlt
pop
pusha
std
cmp
mov
or
gs
cs
das
repnz
lock
push
pop
lcall
test
mov
or
popa
push
mov
add
andl
mov
movl
mov
addl
push
push
orl
test
je
mov
mov
mov
movzbl
and
imul
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
or
mov
mov
movl
xchg
mov
mov
or
sub
and
xor
adc
mov
mov
add
mov
and
jmp
scas
mov
imul
pop
pusha
fisttps
adc
mov
mov
jle
adcb
sbb
hlt
imul
out
mov
lods
push
subl
nop
test
mov
mov
les
and
and
push
ss
imul
imul
popf
xchg
jbe
add
scas
rcrl
mov
mov
dec
fistpl
jge
dec
out
lods
xchg
sar
and
in
inc
add
sbb
out
inc
cwtl
cmpsl
and
pop
dec
stc
int3
mov
mov
popa
movsb
cmp
icebp
cmp
std
add
ljmp
and
fidivs
movsb
imul
jge
int3
add
xor
sbb
or
adc
imul
jmp
dec
mov
lods
mov
movzbl
and
jmp
mov
stos
popa
jns
in
mov
jp
fwait
add
jle
jle
jle
xor
mov
mov
ficompl
sub
mov
lods
lods
adc
daa
call
xchg
dec
roll
sahf
jmp
jnp
pop
out
xor
push
ds
xchg
fsubs
lret
stos
stos
or
push
push
mov
xchg
jmp
and
flds
out
inc
sub
stos
les
xchg
cmp
fldcw
loope
adc
and
dec
sahf
jle
test
sbb
and
or
sbb
test
in
cwtl
dec
mov
push
xor
sti
sub
aam
push
inc
in
out
pop
enter
mov
dec
ljmp
push
mov
subl
xor
xor
or
add
not
mov
mov
je
mov
xor
mov
xor
andl
add
movl
cmp
jmp
push
pop
popf
aam
fs
test
sbb
jle
mov
jle
insl
std
les
mul
adc
scas
dec
mov
pushf
inc
jb
jecxz
mov
enter
pop
ficoml
inc
sub
inc
sub
scas
adcl
sbb
cli
lcall
test
out
sub
push
sub
and
xchg
xor
push
stc
cmp
cmpb
sbb
push
inc
adc
in
outsb
jle
cmpsl
add
ds
repnz
shrl
in
inc
in
add
dec
ja
rcr
xchg
mov
cmp
sub
sbb
push
call
nop
insl
aas
imul
lods
test
dec
add
add
mov
add
or
add
xor
adc
incl
add
add
add
sldt
add
leave
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
mov
not
mov
xor
subl
add
cmp
jmp
add
or
in
loope
js
dec
inc
shll
rclb
jle
jle
mov
xor
pop
lret
jo
fdivr
sub
push
ss
inc
loopne
js
mov
mov
mov
add
scas
jl
cmc
in
cmp
cmp
sbb
mov
stos
jns
imull
lcall
das
stos
sarb
xchg
adc
inc
movsl
pop
loope
mov
aas
inc
and
popa
test
lods
mov
adc
pop
mov
std
jnp
iret
push
fldt
inc
lea
test
xchg
gs
or
in
push
lock
lods
jne
pop
mov
jns
add
inc
jo
xchg
fnstcw
adc
mov
pop
nop
inc
dec
cmpsb
and
adc
adc
test
loopne
jp
test
add
sbbl
pushl
jmp
sti
loopne
lock
cltd
sti
jns
cmpsb
pop
out
pop
js
jmp
jle
jle
sbb
repz
lret
aad
cs
push
pop
gs
fstpl
pop
loopne
les
mov
insb
in
sbb
imul
insl
pushl
hlt
pop
pop
jl
addr16
out
addr16
das
pop
out
lods
xchg
fs
cld
and
mov
js
test
dec
mov
ret
out
xchg
in
call
aaa
loop,pn
in
imul
int3
outsb
fldcw
mov
out
bound
xchg
cld
sbb
jg
cmpsb
pop
int
push
and
xor
mov
and
mov
jle
ljmp
jae
jle
jnp
inc
jmp
dec
adc
mov
fists
int3
pop
push
xor
mov
mov
cmp
mov
mov
adc
mov
adcl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
push
call
cmpl
jb
mov
mov
movzbl
sbb
mov
xor
or
xor
xor
sub
sub
mov
subl
mov
addl
add
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
jmp
mov
or
pop
pop
aas
mov
ljmp
jle
jle
jbe
xor
push
icebp
xlat
or
push
fidivs
mov
and
push
or
jmp
pop
pop
addl
mov
out
add
cld
add
xchg
mov
imul
xorl
mov
int3
jne
push
xchg
movsb
pushf
cltd
fcomps
cmp
sbb
xor
pop
sbb
dec
mov
sti
lcall
xor
xchg
dec
bound
sbb
cmp
cmp
rcrl
xor
xlat
ja
and
cmp
sub
cwtl
shll
cs
daa
test
add
lahf
gs
cmp
call
push
sarl
mov
mov
add
xor
mov
mov
mov
add
jmp
pop
pusha
pop
movsb
jns
out
cmpsb
push
jg
or
jle
mov
jle
popl
cmc
push
outsb
xor
push
icebp
mov
add
or
lret
or
dec
insl
or
push
push
dec
mov
cwtl
add
lret
jbe
mov
jne
pop
popf
or
cmp
mov
mov
fcmovbe
jmp
add
adc
lds
out
sahf
and
xchg
jg
lods
gs
mov
inc
cmp
mov
xchg
sbb
mov
fcomps
adcl
adc
clc
leave
cmc
fiaddl
shl
mov
pop
call
cwtl
xor
lock
xor
and
jns
sbb
jle
jl
adc
push
or
jno
inc
clc
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
jmp
test
scas
pop
cmpsb
jns
and
lock
push
pop
mov
jle
mov
jle
pusha
rcrb
cmp
into
mov
add
and
add
pop
rcrb
pop
jno
mov
repnz
xchg
mov
cli
imul
push
jecxz
test
outsl
lahf
clc
lods
pop
out
lea
pop
xor
mov
in
pop
shll
add
scas
and
ret
aas
cwtl
and
mov
xor
fsubl
mov
es
movsl
iret
lcall
pushf
cmpsb
ret
enter
lcall
sub
movsl
inc
pop
pop
sub
pop
cwtl
aad
std
xchg
add
test
cmp
std
in
jno
sti
sub
into
loope
adc
shlb
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
jmp
pop
imul
mov
jnp
push
pop
and
rcrl
jle
jle
jle
in
jbe
mov
sbb
cmp
test
xor
cmp
inc
or
lea
jg
inc
mov
dec
imul
or
popf
add
inc
pushf
out
add
das
cmp
fwait
push
sti
cld
xchg
cltd
and
mov
je
adc
lock
mul
sbb
aad
mov
dec
or
addr16
fnstcw
and
repnz
shll
sub
add
fnstenv
les
dec
addr16
sbb
js
xchg
sti
mov
jb
xchg
dec
out
mov
ror
lods
fsubrl
mov
xor
fdecstp
cmpsb
lea
mov
mov
push
xor
jno
and
push
pusha
jo
jne
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
xchg
adcl
mov
insl
sahf
stos
imul
mov
jle
xchg
cmpsl
gs
mov
lret
push
fxtract
iret
mov
in
pop
lret
dec
sub
lcall
insb
jo
mov
mov
add
sub
sub
push
gs
ljmp
jmp
push
xlat
jno
or
push
xor
sti
jmp
push
pop
scas
sub
push
sbb
dec
push
repz
fdivs
xor
xchg
sbb
loopne
or
loopne
stos
push
push
push
inc
ds
sub
jo
pop
xchg
repz
mov
push
push
mov
inc
movsb
mov
add
pusha
sbb
push
mov
mov
push
flds
repz
sarl
ret
or
add
mov
jmp
decl
xchg
daa
cld
loop
sbb
jle
mov
jle
lea
mov
pop
ds
add
mov
lret
xor
mulb
jp
jae
pop
lock
add
call
xchg
insl
sub
xchg
xchg
xchg
cld
sub
out
ss
xor
addr16
lods
jne
add
loope
adc
fwait
mov
mov
je
jecxz
mov
xchg
mov
ss
dec
outsl
nop
jp
jle
aam
pop
jb
icebp
push
xorl
in
jo
xor
cmp
inc
mov
orl
mov
xchg
dec
adc
sub
pop
sbb
loop
aas
loop
data16
push
test
rolb
mov
jl
iret
inc
push
mov
scas
add
loopne
add
inc
loop
xchg
imul
xchg
out
aaa
jle
mov
jle
leave
stos
addr16
mov
daa
add
ret
and
in
fcomi
ljmp
mov
subb
pushl
out
push
xor
cld
movsl
rcrl
dec
psrld
sbb
sub
xlat
pop
lods
into
or
inc
inc
adc
xchg
je
and
test
xchg
adc
mov
and
push
mov
mov
mov
add
push
clc
insl
or
and
in
mov
jmp
pop
sub
sbb
ret
mov
mov
or
nop
and
or
mov
jnp
inc
adc
int
into
sub
arpl
push
mov
fldl
push
cmpsb
outsb
aad
push
cld
xor
mov
lea
cmp
je
mov
mov
mov
mov
jmp
pop
sub
sub
jne
stos
push
xchg
andl
cwtl
or
xor
mov
lea
cmpxchg
mov
xchg
popa
out
xor
divl
dec
cld
stos
ss
sub
xorl
cmpsl
cwtl
cmpsb
daa
gs
addr16
mov
sub
inc
jmp
movsl
mov
mov
fsub
cld
or
or
dec
dec
mov
clc
hlt
xor
scas
jg
mov
dec
mov
fwait
in
in
xor
ret
cmp
mov
jo
sbb
jmp
or
lds
add
leave
hlt
cmp
mov
cld
cmp
and
cmp
jl
cld
push
xor
mov
add
mov
stc
dec
shlb
inc
ljmp
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
jmp
mov
pop
mov
xchg
mov
xor
jle
xchg
mov
sbb
fisttpl
nop
fnstsw
or
test
in
mov
arpl
and
roll
pop
daa
loop
ret
ficompl
clc
lods
loope
jbe
adc
mov
lea
in
sarl
push
lahf
icebp
and
iret
push
jmp
cmp
pushf
adcl
mov
pushf
sti
out
ds
sidtl
in
pop
mov
into
xchg
jbe
add
nop
cmp
xchg
push
push
in
mov
leave
popa
arpl
mov
cmp
rcrb
xor
scas
xchg
push
roll
hlt
pop
aaa
push
cmp
adc
jb
add
enter
std
decl
add
mov
jmp
mov
or
leave
jns
or
cmp
jle
mov
jle
mov
or
loop
mov
mov
les
xor
push
dec
popa
test
or
clc
mov
mov
push
push
stos
in
dec
icebp
fstl
jns
jno
inc
push
scas
lds
test
or
aam
fstps
popa
cmp
outsb
pop
jg
jle
mov
mov
mov
or
addr16
int3
std
popf
mov
test
es
test
push
mov
jmp
cwtl
cld
inc
and
hlt
into
jg
les
das
shlb
or
mov
clc
adc
jno
cmp
lods
rep
and
mov
sub
and
push
in
stc
inc
fstpl
les
or
or
mov
xchg
push
mov
cld
xor
add
mov
xor
lea
add
jmp
sbb
cmp
pop
inc
and
gs
imul
jno
jle
mov
jle
out
xor
xchg
movsl
add
and
ds
stc
mov
push
pop
arpl
xlat
xorb
push
jmp
mov
mov
mov
jg
jmp
sbb
mov
popa
dec
outsl
sub
xchg
stos
cmp
aad
inc
icebp
mov
iret
lds
jne
mov
jge
add
aam
gs
push
dec
mov
dec
popf
or
lahf
dec
int
inc
xchg
push
div
out
les
les
test
mov
inc
lds
mov
dec
inc
sub
stos
mov
sub
or
or
movsb
enter
pop
and
fstl
aam
and
popa
aad
jnp
jle
shll
fucomi
loopne
add
popa
jno
jnp
jnp
or
fdivl
jle
jle
jle
sbb
adc
push
adc
cmpsb
jns
cmpsl
outsl
jb
push
mov
sub
out
add
pop
aaa
mov
mov
mov
out
in
mov
adc
xor
int3
mov
push
adc
insb
push
daa
jno
jecxz
push
ds
push
fstpl
std
cmp
xor
dec
pusha
add
sbbb
sub
push
cld
divl
cmpsb
pop
mov
cmc
mul
xor
push
sub
daa
cmp
cmpsb
movsb
sbb
int3
clc
outsb
dec
out
jne
jecxz
out
dec
and
ret
ret
or
sbb
cwtl
jmp
pop
and
cmpsl
or
bound
dec
or
popa
aas
dec
mov
sub
lds
enter
lret
mov
inc
cmp
jmp
test
xchg
push
stos
push
push
gs
pusha
std
adc
jle
jle
xor
inc
loopne
mov
pop
aaa
jecxz
push
mov
dec
fs
push
lahf
inc
rcll
out
sti
mov
push
jne
loope
or
mov
mov
fs
jmp
leave
or
std
sar
sti
sti
push
mov
test
xor
in
lods
lret
mov
xor
call
cmp
push
ret
out
inc
lock
mov
push
lahf
ja
popf
out
mov
pop
rorb
pop
push
loopne
dec
xor
cmc
lret
jmp
mul
lods
stc
stos
bound
out
cmp
mov
mov
xchg
dec
lahf
xchg
pop
into
rcrb
xchg
inc
popf
lret
and
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
jmp
xchg
out
jnp
jns
add
call
fxch
jle
mov
jle
mov
push
xchg
scas
sub
ds
xor
xchg
mov
xchg
sub
ja
std
cmpl
lret
mov
inc
mov
push
test
jle
jle
test
mov
add
js
mov
pop
dec
pop
ljmp
cwtl
or
add
repz
outsl
fistps
mov
insb
loope
mov
fnstenv
add
mov
xlat
test
and
mov
jl
adc
pop
cmp
hlt
in
inc
add
inc
and
lock
xor
bound
add
jl
pop
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
