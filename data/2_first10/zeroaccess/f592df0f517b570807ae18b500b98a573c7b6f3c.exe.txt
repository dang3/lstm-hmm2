push
mov
sub
xor
jmp
into
rcr
aad
mov
xor
js
js
jle
js
xlat
cmp
fld
pop
push
or
bswap
and
sbb
inc
bound
mov
or
mov
and
lods
fadds
pusha
out
outsl
adc
sahf
add
dec
lods
pop
sub
mov
lds
adc
xchg
icebp
dec
loopne
dec
call
mov
sub
sbb
xchg
sub
repz
out
cli
in
xchg
cmp
jbe
xlat
sub
add
sbb
xor
adc
fisttpll
cmp
arpl
rclb
fistpl
and
inc
push
aaa
adc
fstpt
dec
repnz
cmpsb
int
push
sub
orl
jo
or
cmp
mov
sub
mov
insb
pop
mov
cs
cli
dec
jle
sbb
addr16
das
iret
jnp
dec
adc
xchg
hlt
lret
mov
jo
ret
aam
aad
das
sbb
scas
mov
in
xchg
pop
cmp
cld
test
xor
pop
mov
push
mov
repnz
fmull
push
or
inc
jo
sbb
ret
push
dec
outsl
scas
mov
mov
cs
stos
cmp
fisubrl
push
pop
cmc
mov
pushf
mov
push
cmp
add
xor
cltd
xchg
push
dec
repz
test
and
xor
daa
jmp
out
lods
aas
inc
movsl
push
mull
jnp
dec
aam
cmpsl
mov
jbe
sar
mov
mov
mov
lret
movsb
xchg
clc
fldcw
fistpll
aas
sti
pop
clc
icebp
incb
rcrl
test
fsubl
roll
clc
mov
test
jge
incl
in
sub
ret
js
mov
sub
cmp
jg
mov
ret
xchg
xor
push
push
divl
imul
out
stos
push
xorb
pop
addl
inc
adc
pop
rorl
arpl
movsl
cmp
out
dec
adc
push
inc
aad
nop
lods
ja
add
xor
pop
in
mov
daa
scas
xchg
test
addr16
and
push
sti
testb
adc
std
loopne
push
les
lods
cmp
xor
iret
cmp
pop
and
lret
adc
jmp
mov
xor
mov
mov
or
mov
movl
mov
mov
push
or
push
add
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adcl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
sub
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
jmp
leave
rol
leave
int
fimull
leave
rclb
insl
fcomps
jle
js
jle
js
fildl
js
add
sbb
jb
push
cltd
imul
or
int3
stc
shlb
inc
mov
dec
inc
add
jmp
imul
mov
push
adc
mov
dec
or
lods
sbb
shll
out
popa
jge
inc
in
jns
out
andb
inc
bound
jp
jns
jle
mov
call
ret
cmp
sub
cmovo
mov
ss
loope
push
aaa
cwtl
sbb
cmp
outsl
ds
mov
xchg
nop
xchg
lcall
rcrb
mov
jbe
ja
mov
xor
cmp
out
mov
inc
hlt
fmull
cmp
add
jl
jmp
pop
xchg
es
pop
cwtl
sbb
pop
mov
js
mov
aam
repnz
leave
mov
mov
lahf
pop
adc
es
aaa
icebp
outsl
in
aam
mov
pushf
xchg
cmp
lea
repz
gs
fstps
jg,pt
aaa
fs
dec
pop
rolb
cmpsl
pushw
cwtl
pop
stos
jle
or
repnz
xchg
jno
pop
movsl
inc
lods
adc
cld
mov
sub
icebp
mov
into
clc
inc
clc
jb
cmp
push
sbb
mov
mov
std
inc
jbe
or
cld
data16
xor
cmpsl
push
push
shrb
fidivs
xchg
xor
mov
push
mov
sbb
adc
iret
xchg
fs
mov
jmp
sti
dec
adcl
add
repnz
push
repnz
push
inc
cwtl
hlt
xchg
mul
fldt
clc
mov
xchg
outsb
aas
int3
dec
mov
repnz
lret
popa
imul
loop
jl
enter
fnstcw
shl
pop
test
les
inc
mov
roll
sbb
push
rcrb
inc
pop
inc
and
cmp
call
mov
xor
jge
xchg
mov
addl
xchg
mov
mov
hlt
ret
pusha
add
notb
sbb
xlat
jg
mov
mov
fidivrs
jb
jae
jp
jmp
xor
test
imul
icebp
shlb
push
aad
dec
dec
add
xorl
mov
adc
lea
orl
mov
xor
mov
neg
mov
xor
jmp
ret
ret
leave
lret
ret
out
repz
jae
jl
js
jle
js
sbb
and
pop
repnz
sbb
inc
add
adc
rcll
mov
lock
xchg
mov
gs
inc
leave
sahf
in
aam
cmp
pop
roll
sbb
fninit
mov
and
add
adc
stc
jno
out
pop
and
out
mov
jo
loopne
mov
or
jge
cwtl
mov
mov
test
rclb
xor
repz
and
ret
repnz
inc
add
mov
fsub
aaa
fimuls
mov
and
fucomp
mov
in
leave
test
and
lret
arpl
and
mull
xor
lret
add
push
inc
hlt
popa
loop
sub
push
test
loop
add
push
ss
lret
movsb
dec
mov
fcmovbe
scas
imul
bound
mov
cwtl
or
cmpb
pushf
mov
add
mov
mov
int3
mov
mov
in
dec
cs
inc
aam
xor
nop
push
pop
shll
push
jno
in
mov
sbb
and
xor
stc
stos
mov
xchg
scas
pop
test
cmp
je
fsts
pop
scas
add
adc
push
mov
insl
sub
sbb
ds
dec
out
sub
aaa
shll
arpl
into
sti
xor
mov
divl
sub
push
stos
mov
fbstp
xor
xchg
sbb
sbb
xchg
lods
cmp
mov
jb
ja
xchg
ror
aad
in
push
test
leave
xor
aam
cmp
and
mov
cltd
and
sbb
cmpsb
stc
mov
gs
sub
jp
jmp
push
mov
dec
mov
push
cltd
out
cmp
mov
cmp
push
or
fsts
mov
mov
lods
and
in
sub
ss
shrl
dec
lock
mov
push
sub
fimull
je
mov
loope
mov
adc
in
jae
das
fldcw
cli
fisubrs
daa
cmpsb
cli
cmp
leave
dec
idivl
mov
add
cmp
jmp
mov
into
push
add
mov
sbb
movl
lea
jmp
xlat
ret
ds
fcmovnu
loope
xchg
push
push
jmp
js
jle
js
data16
stos
hlt
dec
aas
les
push
hlt
or
sub
loopne
inc
loope
jae
pop
scas
div
push
jmp
mov
rcr
mov
ljmp
dec
aas
mov
inc
mov
mov
fdivl
pop
and
sub
sub
mov
test
cmpsb
pop
out
inc
pop
es
pop
fcomps
sub
sub
inc
enter
xor
push
rolb
icebp
gs
sbbb
loopne
jo
call
rcr
ss
jl
cmp
sub
mov
sub
std
cwtl
cs
sar
pop
xor
pop
lea
cmpsl
sub
jmp
dec
test
imul
call
andl
js
scas
fimuls
mov
push
add
inc
pushf
xchg
inc
das
cmp
cmc
aad
test
cmp
or
cmp
shrb
cmpb
add
dec
mov
divl
jns
sub
jnp
sub
inc
fisubl
es
cmpsb
adc
mov
mov
lret
push
inc
pop
ret
xchg
xchg
cld
cmpsl
pop
loopne
xchg
insl
pop
jb
mov
cmp
int
mov
jge
shrb
ret
push
icebp
dec
sub
ljmp
xchg
loope
and
mov
int
push
mov
cwtl
es
out
mov
pushf
addr16
cwtl
lea
pop
arpl
pop
or
and
sbb
int
adc
lea
stos
mov
push
repz
in
or
xor
add
xchg
pusha
imulb
dec
stc
mov
rolb
int
std
cwtl
jno
mov
mov
lods
adc
out
icebp
pop
push
sbb
pop
scas
mov
push
aam
or
in
push
enter
mov
cwtl
xor
sub
aam
pushf
cmp
cs
xor
push
sub
ret
mov
js
dec
xchg
mov
outsl
notb
rcrl
out
jle
adc
jo
dec
outsb
nop
test
fisubrs
dec
in
dec
sub
enter
cmp
and
jle
xorl
fistpll
jo
arpl
repnz
push
sbb
cmpsb
cltd
popa
mov
daa
pop
or
cmp
add
orb
test
add
add
add
or
add
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
sbbl
mov
decl
xor
add
mov
movzwl
and
mov
mov
mov
adcl
mov
xorl
mov
mov
movzwl
jmp
lret
iret
cmp
aam
leave
fldcw
lret
ds
push
js
jle
js
or
les
pop
das
xchg
aaa
lods
ficomps
insl
push
or
and
pop
insb
fnstenv
call
sub
jb
arpl
mov
test
mul
push
push
push
shll
cs
dec
xchg
lock
fistl
add
sub
sbb
pop
in
aad
mov
faddp
or
xlat
ss
dec
add
xor
mov
nop
xor
das
aad
and
xchg
notl
shl
stc
jmp
lret
shl
add
mov
sahf
enter
test
xchg
out
std
lahf
add
lahf
shlb
js
aad
lock
jp
xchg
sti
loope
sbb
sub
imul
mov
je
jbe
notl
fwait
cli
and
adc
jge,pn
popf
sti
loopne
jb
add
xchg
es
xor
sahf
add
out
xchg
fwait
aaa
xlat
pop
adc
push
push
push
dec
mov
jle
imul
add
loop
pop
pop
sub
enter
sub
jbe
iret
adc
dec
sbbl
lods
cld
inc
cmp
imull
lock
mov
mov
in
rcl
add
inc
leave
mov
iret
xchg
xchg
or
xor
std
jo
jns
imulb
push
cmp
rcll
pushf
leave
xlat
outsb
sbb
das
ss
cmp
fwait
scas
jecxz
rcl
sub
jne
xchg
orl
fld
add
popa
dec
xor
stos
mov
imul
loopne
xchg
fidivl
testb
iret
dec
mov
mov
repz
cltd
jo
icebp
test
or
cmp
sbb
out
cmp
mov
mov
mov
xchg
add
sbb
sub
add
mov
pop
lods
xor
ret
lods
mov
lret
lock
pop
cmp
sub
lret
xchg
cs
xor
jne
scas
stos
mov
fsts
orps
jmp
jecxz
jecxz
sub
jbe
cmp
mov
pop
ds
movsl
mov
dec
in
mov
lock
xor
cmp
dec
andl
jae
add
lcall
adc
jb
xchg
out
mov
shrl
mov
jns
test
cmp
or
rolb
cmp
mov
test
add
icebp
cmpsl
inc
add
inc
or
add
add
add
or
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
mov
jmp
rcl
ret
fld
aam
push
shl
cmp
add
js
jle
js
ljmp
mov
xlat
outsb
mov
stos
test
inc
and
mov
dec
cmpsb
faddl
cli
insb
cmc
add
jmp
loop
fldenv
out
cmp
repz
pop
fstpl
stc
xchg
dec
enter
push
scas
pop
in
and
call
je
call
cmc
dec
jl
dec
test
push
inc
aad
jns
mov
cmp
insl
cmp
jge
sub
pop
sbb
xchg
push
adc
sbb
movsb
hlt
mov
or
fidivrl
sub
jp
mull
rclb
inc
sbbb
mov
mov
stc
sub
push
loopne
ljmp
mov
hlt
push
pop
das
xchg
bound
inc
inc
icebp
lock
and
leave
cltd
xor
mov
xlat
mov
xchg
jbe
pop
mov
sar
daa
ret
xchg
jb
imul
jbe
cmp
adc
imul
mov
mov
ss
ds
jge
mov
cmp
push
pop
lods
push
xchg
or
inc
dec
test
shlb
sbb
add
mov
sub
mov
out
sbb
inc
movsb
jle
mov
xchg
xor
push
hlt
sbb
es
gs
ds
xor
movsl
inc
test
ss
pop
fisubrl
imull
aad
mov
jbe,pn
sub
in
sub
subl
mov
pushw
fnstenv
sub
push
cli
pop
mov
scas
popa
cmp
and
or
and
ret
mov
cmp
mov
test
mov
mov
xor
lret
mov
mov
inc
call
icebp
adc
sbb
cmp
popa
sbb
psubsw
fdivr
icebp
mov
jge
ljmp
scas
mov
pop
xor
lcall
iret
push
repz
push
aad
cmp
out
test
into
lods
xchg
and
pop
cmpsl
jbe
and
das
ret
xchg
jns
xchg
movsl
xor
xchg
call
pop
scas
mov
pushf
ret
inc
jbe
out
pop
aaa
xchg
add
xor
lds
xor
adcb
jp
xchg
inc
add
jb
mov
iret
rcll
xorl
nop
shrl
movb
mov
inc
add
cmp
jne
mov
mov
sbbl
xor
add
jmp
xlat
cmp
fxch
mov
cmpsb
cmpb
jle
js
push
pushf
movsl
out
mov
out
xchg
loop
js
in
inc
inc
push
push
lock
cmp
ja
push
push
mov
jns
sbb
jle
mov
js
iret
dec
add
adc
sub
inc
rorl
push
cltd
mov
xor
xchg
sbb
cmp
call
inc
leave
in
fsubrs
in
fadds
sbb
jo
inc
imul
in
pop
mov
jmp
cmp
pop
movsb
aaa
fsubp
mov
cld
jg
pop
out
js
jne
xor
sahf
pop
pop
movsl
repz
std
sub
push
in
gs
cmp
push
sbb
pop
adc
nop
jb
push
stos
in
es
jmp
data16
cmpsb
lods
lret
push
jmp
dec
lods
cmpsb
mov
xchg
popf
mov
pop
repz
push
fstp
sbb
nop
xlat
popa
shll
push
cmp
sti
fimuls
ret
cmp
push
fimull
mov
sub
insl
rcrb
mov
and
ljmp
inc
jle
mov
popf
cs
inc
pop
xor
fistps
in
cmpsl
scas
xor
in
sbb
or
stos
subb
out
ret
pop
clc
mov
fwait
arpl
jae
push
roll
or
jg
int
inc
mov
cmp
in
imul
je
movsb
stos
inc
jno
or
and
filds
fwait
gs
out
loop
push
mov
test
repnz
stc
in
iret
fstpt
inc
jmp
cmp
pop
jne
in
daa
xor
xor
rclb
test
bound
insb
out
fcmovnb
popf
ret
cmc
outsb
mov
repz
mov
in
xchg
pop
les
idivl
lcall
in
jecxz
cmp
mov
dec
push
rolb
push
daa
mov
pop
hlt
or
inc
push
icebp
sbb
outsl
sbb
int3
or
rcll
xor
cltd
sbb
push
fiadds
in
sbb
lds
pop
add
adcb
inc
ja
outsb
jno
and
inc
test
aas
pusha
push
push
or
or
pusha
push
in
xchg
call
in
fsubl
adc
xchg
out
in
jp
or
inc
mov
mov
popf
mov
scas
sub
cmp
jne
mov
mov
xor
add
mov
jmp
aas
lret
ret
aad
flds
inc
jae
add
mov
js
jle
js
cmpsb
push
sbb
addr16
lss
sbb
jne,pn
cmpsl
ds
push
xorb
leave
sbb
push
repnz
mov
mov
stos
cwtl
push
xor
and
aaa
add
out
dec
xchg
out
adc
lret
roll
and
push
jp
je
in
pop
lcall
icebp
neg
test
sbb
rol
push
xor
and
ja
and
or
call
jl
xorl
icebp
inc
mov
jnp
int
dec
inc
daa
xchg
gs
scas
jns
xlat
dec
push
leave
ffree
jmp
fwait
cmp
mov
sar
pop
push
cmp
dec
pop
push
in
add
movsl
in
sub
insb
iret
pop
or
and
daa
std
in
je
std
push
mov
dec
push
in
stc
into
push
out
mov
mov
movl
loop
xchg
aad
std
inc
stc
sbb
test
jo
and
data16
and
mov
push
push
xchg
mov
test
dec
mov
fmulp
jbe
dec
push
sub
das
lea
test
scas
das
push
mov
inc
mov
pop
cmpsl
push
pop
sub
stos
dec
test
jno
ficomps
test
add
mov
imull
shlb
and
jmp
je
ljmp
mov
js
inc
popf
jo
cmp
popf
movsb
sti
into
add
jne
lea
bound
mov
popa
data16
scas
adc
int3
or
pop
push
sahf
jmp
gs
lea
jle
jle
rcl
aas
ss
ficoms
add
out
pushf
or
jp
adc
in
fldlg2
lahf
cmp
cmp
xor
andl
mov
add
test
push
dec
es
mov
shlb
cld
out
cmp
or
repnz
cmpb
mov
cmp
and
jbe
cmp
jbe
add
inc
jae
xchg
popf
out
xor
std
mov
inc
mov
sub
pop
mov
mov
push
add
mov
dec
gs
scas
idivb
in
lea
incb
pop
jl
and
roll
adc
inc
add
lret
sbb
nop
aad
mov
std
mov
fsubr
add
test
jb
add
adc
pop
out
cmpsb
cmp
dec
or
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
jmp
ret
ror
into
fcmovnbe
out
dec
stos
fisubs
js
jle
js
adc
lods
adc
sahf
test
enter
popa
ficoms
ljmp
sub
sbb
push
push
loop
lock
cs
xchg
xchg
mov
pop
mov
sbb
pop
aaa
lods
cmpsb
xor
std
jge
sbb
dec
je
out
fcom
das
lods
lods
in
jnp
jo
and
movsb
pop
out
jmp
andl
test
iret
mov
int
shl
sbb
mov
rclb
fwait
in
test
hlt
daa
dec
and
jmp
inc
ficomps
mov
pop
mov
aas
pop
lods
out
aaa
pusha
dec
sbbb
adc
push
call
out
lds
sbb
jb
push
mov
hlt
jmp
sub
pusha
fistl
in
jle
imul
push
mov
xor
mov
stc
rol
mov
xchg
movsl
outsb
pop
xchg
shlb
pusha
pop
cmp
enter
aam
aad
or
test
adc
jne
sub
scas
enter
lods
lret
dec
jmp
fisttps
cmpsl
sbb
test
xchg
andnps
mov
mov
xor
cli
jae
ss
rorl
into
mov
mov
mov
incl
jg
jg
and
jecxz
leave
inc
fs
cmpsl
rclb
jae
push
mov
cmp
lods
outsl
aas
arpl
bound
loop
das
mov
lds
shll
mov
js
in
das
jo
jns
dec
mov
add
aaa
scas
ficoml
dec
lret
push
lods
test
add
pop
hlt
sub
cwtl
loopne
test
jne
ja
inc
mov
mov
xor
mov
faddl
lcall
add
test
jae
mov
xlat
aaa
mov
dec
xor
pop
pop
out
jae
mov
inc
test
jbe
fdivl
jmp
push
jle
repnz
andb
dec
iret
jmp
ss
bound
or
jo
push
dec
fisubrl
in
xchg
pop
ds
into
add
fcomip
xchg
sbb
fdivr
sar
into
arpl
dec
push
pop
rcrl
add
push
insb
xchg
pop
daa
testl
into
jae
jae
sub
jmp
ror
int
rcr
aad
bound
inc
mov
mov
js
jle
js
test
dec
out
pop
cmc
faddl
bound
mulb
movsl
ror
lcall
cs
pop
fcmovnu
or
imul
lods
mov
test
mov
adc
fmull
push
rcrl
pop
loope
cli
pop
aam
daa
movsl
fcompl
shll
insl
mov
popa
add
push
xchg
leave
fcomps
mov
int3
stc
testb
xor
or
loop
mov
imul
jns
and
and
shll
or
js
add
xchg
in
movsl
cld
sub
adc
adc
rolb
jecxz
adc
xchg
mov
daa
sahf
mov
jp
jae
fsubs
fcomps
xchg
repnz
cwtl
insl
es
jb
std
adc
add
and
lods
mov
lret
sbb
aas
push
mov
sbb
addb
inc
mov
pop
add
sub
mov
and
adc
sahf
or
sbb
enter
add
mov
in
enter
pushf
stos
jge
mov
or
aas
jle
sub
push
and
into
dec
hlt
lods
int
aam
add
adc
imul
mov
inc
nop
leave
nop
jecxz
add
lock
icebp
sahf
add
xor
test
push
xchg
pop
test
lods
push
popa
inc
daa
mov
or
add
mov
int3
lds
popf
orb
leave
imul
inc
stos
inc
jne
enter
and
mov
dec
xor
scas
sub
in
in
dec
sbb
jae
int3
adc
xor
add
sbb
test
mov
popf
cmp
jg
pop
pop
notb
out
push
out
and
sbb
or
insl
cmp
test
xchg
iret
pop
imul
and
stc
shll
push
push
mov
add
mov
xor
xchg
mov
xchg
inc
bound
adc
add
ds
mov
jnp
out
dec
lea
push
inc
jl
and
xor
fcoms
mov
push
sub
out
adc
xor
testl
jle
jg
repz
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
jmp
leave
vpsubusw
leave
repnz
cld
pop
std
dec
pop
or
js
jle
js
jns
js
and
mov
push
lcall
xchg
inc
outsl
fisubs
xor
sbb
cmpb
loope
push
sub
pop
jmp
clc
and
idivb
fwait
stos
std
cs
dec
iret
xor
pop
push
clc
sub
loop
fildl
hlt
push
adc
fsubrs
sub
mov
xchg
mov
xchg
fwait
pop
or
mov
add
cli
cld
push
in
mov
rcll
in
sub
test
popa
test
sarb
cmp
mov
daa
sbb
inc
inc
pop
arpl
add
cmp
adc
mov
in
xchg
mov
lea
mov
clc
inc
inc
sub
add
xor
pop
pcmpeqb
inc
pop
sti
push
sub
cmp
xor
jge
cltd
popf
lock
mov
inc
cld
xchg
dec
xor
call
int3
das
mov
test
popa
pop
xor
mov
and
cld
mov
xchg
push
loopne
mov
sub
mov
xchg
dec
shll
xor
xchg
mov
pop
ficoms
adc
cmovb
sti
pop
add
cmpb
push
and
xchg
cltd
je
rclb
inc
and
fdivs
iret
arpl
xchg
lods
mov
movsb
mov
xacquire
xchg
insb
out
ret
push
cmpsl
inc
out
scas
sbb
aam
sub
std
push
jb
sbb
mov
xchg
adc
int3
test
dec
and
xchg
dec
xchg
rcrb
pop
push
pop
sub
outsl
hlt
je
fsubr
xor
arpl
es
shr
jbe
mov
in
lret
and
cmp
out
rcrb
cmp
out
pop
add
sbb
pop
in
ja
and
xchg
add
negl
mov
cmp
mov
xchg
sbb
xor
jno
push
add
into
jge
mov
adc
pusha
sub
fadd
push
retw
daa
add
dec
push
push
cmp
ret
fisttps
popa
pop
ret
outsl
imul
push
iret
pop
push
adc
cld
stos
lds
mov
push
sub
mov
mov
inc
or
add
add
int3
ror
ror
test
xchg
push
adc
js
jle
js
mov
arpl
xor
xchg
pop
lret
inc
nop
fidivrs
jp
and
jo
push
ss
lahf
push
lret
xchg
sub
jg
push
xchg
push
addl
or
arpl
cmp
mov
hlt
imull
repnz
pop
fstpt
test
xor
bound
or
ds
imul
dec
jge
adc
inc
ja
movsl
hlt
enter
popf
jns
dec
out
jl
fisubrs
aad
fcompl
jp
loope
or
push
fistpl
dec
push
cvtpi2ps
cmc
dec
loope
xchg
pop
out
sbb
mov
adc
sub
into
iret
mov
dec
ds
mov
add
dec
imull
sub
and
sahf
mov
fldcw
nop
and
and
imul
out
xchg
test
and
in
jmp
js
mov
sbb
jecxz
lcall
mov
pop
add
lcall
insb
icebp
mov
xchg
adc
mov
push
adc
ret
test
xchg
imull
fnstcw
stos
add
ficomps
fcomi
inc
test
or
dec
movsl
ds
sub
jg
lods
ljmp
roll
imul
add
lock
mov
adc
out
mov
adc
pop
dec
stc
out
and
sub
inc
cmp
mov
push
adcl
adc
es
loop
in
jg
sub
cmp
or
mov
xchg
and
in
je
mov
jle
dec
cmp
lods
and
cmp
xchg
leave
dec
cmpsb
sarl
lret
mov
into
inc
xor
push
out
push
ss
dec
gs
and
dec
divb
mov
mov
jno
mov
rolb
jle
sarb
mov
and
push
imul
dec
add
outsl
fisttpll
dec
flds
mov
push
lods
adc
mov
sbb
sti
fs
scas
lds
loop
jae
push
mov
xor
call
adc
shlb
mov
inc
dec
fwait
stos
stc
insl
sub
imul
test
dec
in
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
cmp
cmp
rcr
fidivl
cmc
pop
adc
js
jle
js
push
loopne
jl
rclb
inc
scas
mov
jl
clc
shl
sbb
xor
push
int
sbb
mov
xor
fmuls
adc
dec
inc
push
add
outsb
cmpsl
sti
cmp
mov
xorl
jae
negb
jo
cmpsb
bnd
adc
fisttpl
das
das
and
jo
pop
xlat
pop
inc
fs
jno
sub
ret
adc
or
adc
mov
jns
jb
lds
pop
cmp
inc
sbb
je
jmp
jb
adc
gs
mov
xchg
jo
cmp
xchg
mov
sbb
adc
push
mov
test
je
cmc
stos
cwtl
call
or
ret
mov
out
or
add
push
mov
cmp
aas
cmp
lock
add
pop
iret
sub
pusha
cmp
cmp
pop
and
jae
jne
mov
jl
pop
mov
fmuls
call
popf
push
stos
fwait
jg
mov
test
inc
outsb
mov
sub
jae
mov
gs
or
sub
and
push
gs
or
fidivs
cmpl
pop
pop
in
lret
cli
leave
cmp
ss
push
jb
cmp
es
jnp
out
imul
cmpsl
in
jno
fs
sbb
dec
xchg
xchg
stc
popl
and
push
pop
adc
sti
adc
les
call
dec
dec
push
movsb
adcl
and
les
or
fdivrs
mov
insl
arpl
mov
sub
add
add
loope
hlt
cmp
lea
adc
pop
mov
cmp
mov
fiaddl
xchg
hlt
sub
daa
testl
sarl
cwtl
out
adcl
jge
push
call
lcall
dec
pushf
adc
or
sbb
or
inc
sbbl
lods
int3
mov
lahf
add
insb
sub
daa
adc
rcll
insl
jl
imul
jmp
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
jmp
xlat
aas
mov
fwait
clc
movb
sbb
jle
js
out
sar
rcrb
or
pop
repz
hlt
in
ret
in
leave
shrl
les
nop
pop
shll
dec
xor
fucomip
sbb
jo
cmp
sub
mov
aad
jae
test
fsubrs
xchg
xor
ja
rcrl
not
cmpb
cmp
insb
and
icebp
pop
arpl
mov
mov
repnz
push
cmp
inc
roll
xchg
rorb
xchg
fnstsw
cmp
inc
rcl
cld
scas
inc
stos
test
jmp
sub
xchg
xor
ret
ficoml
add
xlat
push
push
pop
fisubrl
ss
sbbl
xor
addr16
lods
sbb
scas
sbb
ret
and
add
ret
cwtl
adc
std
xchg
sub
scas
sub
loope
push
sub
push
aaa
cmp
cs
popf
popf
xchg
fcomi
test
mov
call
nop
iret
sahf
xchg
inc
ljmp
ret
mov
xchg
mov
mov
ss
inc
jp
loopne
bound
or
jmp
and
jno
or
push
jmp
xor
sbb
mov
push
cmp
push
fcmovnbe
enter
popf
adc
jge
cmp
jbe
jns
sub
mov
dec
je
inc
jmp
cmpsl
fwait
xor
mov
sbb
fsts
xor
jmp
fldcw
incl
js
inc
add
sbb
sub
inc
scas
movsl
in
test
push
test
xor
mov
jle
movsl
mov
jns
int3
adc
cmp
add
lods
dec
mov
mov
jno
mov
add
pop
fdivp
dec
bound
in
insl
test
lock
out
mov
jg
and
sbb
push
adc
sahf
sbb
and
add
test
fsts
mov
xor
daa
push
xchg
jl
lahf
leave
nop
rcrb
insl
pop
add
add
and
out
fstps
scas
and
mov
stos
inc
insb
sbb
daa
into
jle
fidivs
test
mov
pop
ljmp
xchg
cmp
int
clc
or
scas
and
mov
cmc
sub
add
cmp
lret
inc
mov
pop
out
decb
add
add
rol
ror
mov
bound
js
jle
js
lahf
ja
aaa
sbb
dec
sbb
jle
mov
out
mov
xor
repnz
mov
add
push
inc
cld
inc
pop
das
push
push
aaa
cld
sub
inc
sti
mov
stos
sub
cs
call
pop
addr16
jle
xchg
add
in
faddl
fadd
daa
repnz
in
repnz
dec
xlat
pop
jo
push
idivb
cmp
pop
ret
int
leave
cmc
in
xchg
lahf
push
ljmp
inc
inc
pop
jl
cmp
cltd
mov
jge
cmpsb
in
push
bound
mov
test
push
imul
pop
add
dec
fisttpll
mov
dec
sbb
mov
aad
pop
pop
stc
jle
ret
enter
cmc
lret
adcl
test
scas
cmc
loopne
mov
mov
adc
ja
pop
adc
mov
jg
test
cld
inc
imull
sub
xchg
mov
sub
lods
out
repz
or
push
aam
jp
test
sub
and
cs
push
cmc
out
jle
jb
xchg
mov
daa
inc
stos
loope
nop
pop
xchg
psubb
mov
sub
and
sbb
and
in
dec
sub
xchg
outsl
repnz
mov
dec
dec
or
push
inc
sbb
push
lret
push
cmc
nop
std
dec
cmpsb
sub
loop
add
xor
call
pop
icebp
outsl
pop
je
or
inc
pop
push
mov
jle
ficoms
dec
jne
imul
loop
test
sub
sub
repz
or
popa
mov
lods
movsb
xor
ficomps
pop
icebp
jg
add
ljmp
leave
repnz
test
cwtl
stos
xor
in
mov
xchg
jg
xchg
jnp
cs
mov
xor
addl
dec
in
aam
sub
xchg
jg
pop
lret
xchg
shlb
bound
jb
xor
loopne
dec
sbb
int3
lahf
push
mov
cmpsl
fisttps
imul
cltd
stos
jae
aad
add
cmp
push
xor
jne
ljmp
popa
ljmp
dec
jg
dec
push
cmp
stc
into
and
sub
icebp
pop
ss
cmpl
cmp
je
jmp
leave
rol
rcr
rcr
ss
fwait
inc
imul
jle
js
test
cmp
shlb
out
popa
scas
nop
mov
dec
cli
testb
sub
test
push
sub
inc
icebp
sub
cmp
gs
mov
mov
mov
or
xor
push
les
out
sarl
popf
dec
call
mov
push
popf
jae
mov
aas
sbb
adc
push
inc
stos
and
adc
fdiv
jmp
out
adc
imul
dec
jmp
mov
bound
sub
and
mov
xchg
les
fmuls
jo
cmc
mov
sub
test
repnz
and
lret
movsb
ds
outsl
push
xor
out
pusha
incl
aad
push
adc
js
mov
sbb
cwtl
xchg
or
adc
pop
pop
mov
add
mov
movsl
xchg
lock
adc
cs
js
add
cwtl
std
push
mov
xor
fsts
xor
push
sti
xchg
cmp
add
dec
sbb
js
js
sbb
jp
ss
push
fisttps
lods
fisttpl
dec
pusha
and
cs
xchg
in
push
push
xchg
push
repnz
and
jnp
sub
fwait
mov
idivl
dec
fs
xor
mov
xor
cwtl
add
push
or
mov
into
test
iret
sbb
loopne
pushf
pop
mov
in
mov
outsb
sub
aas
insl
cld
add
cmp
out
push
ja
repnz
jnp
or
pusha
stc
popa
pop
xchg
insl
cld
sti
cmc
lods
or
mov
pop
gs
xchg
mov
dec
and
call
sub
fists
add
pop
push
movsb
jb
cltd
add
push
mov
movsb
pusha
cwtl
add
lods
cmp
addr16
jae
ds
dec
add
mov
bnd
fs
fisubs
xlat
cli
jnp
inc
lods
push
push
and
ss
lea
cmpsb
icebp
pop
jbe
xchg
clc
in
jl
dec
push
add
imul
hlt
in
push
lret
jb
pop
mov
mov
js
fadds
ja
shrb
sahf
jb
iret
shlb
xchg
and
inc
or
add
mov
jmp
jmp
ds
lret
fldenv
xor
dec
sbb
js
jle
js
sarb
adc
and
mulb
in
push
mov
xchg
xchg
test
dec
roll
lock
or
adc
sbb
sbb
pop
imul
mov
sbb
jns
insb
mov
push
popa
rcrl
test
lahf
cltd
adc
ds
rcl
aam
jae
stos
pusha
lcall
pop
xchg
xlat
adc
fildll
adc
insl
xchg
fcomps
frstor
mov
hlt
jno
aam
xor
and
roll
inc
mov
inc
in
sbb
or
pushf
in
xor
mov
mov
xchg
add
pop
add
add
xchg
xchg
push
ret
dec
dec
jae
ret
aas
xor
lock
pop
add
jmp
adc
mov
jge
inc
arpl
out
sub
mov
lret
mov
mov
in
xor
mov
mov
loope
aad
fidivl
outsl
and
add
dec
arpl
mov
idiv
sti
cmp
ljmp
scas
cmpsb
sahf
mov
out
adc
push
rcrl
inc
lds
mov
mov
outsl
adc
outsl
in
sub
jbe
mov
sbb
xor
ret
dec
subl
and
push
xor
cmpsl
xor
test
out
add
cmp
test
fcom
jae
and
pop
aad
imul
call
sbb
mov
cmp
add
sub
xor
jo
xor
mov
mov
test
jne
push
out
out
adc
pop
bound
push
mov
adc
mov
and
iret
ds
out
mov
adc
jns
push
sbb
dec
enter
cld
jno
ja
and
add
sbb
pop
popf
es
div
out
mov
pushf
ja
fsubr
icebp
push
inc
sub
sbb
les
lcall
cmp
nop
push
cmp
jae
cmp
mov
jb
popf
shll
jnp
aad
jecxz
sub
mov
enter
fcomps
jne
pmaxsw
mov
add
add
mov
mov
mov
jmp
aas
leave
enter
fxch
mov
mov
js
jle
js
stos
out
dec
pushf
fdivl
pop
fstpl
daa
add
fwait
inc
lret
mov
bound
or
jle
ljmp
imul
mov
movsb
jne
mov
inc
or
pop
testl
imul
into
lea
ret
adc
rorb
add
or
inc
add
xchg
int
mov
in
aaa
jg
jnp
or
xor
fs
wrmsr
sti
mov
dec
pusha
call
mov
push
dec
enter
cmp
jns
dec
dec
pop
lods
mov
push
push
mov
mov
dec
mov
test
dec
movsl
ds
test
mov
stc
lahf
or
pop
cmpsl
mov
xor
lea
or
xchg
in
pop
inc
out
fdivrp
rol
subb
xchg
es
add
push
ja
test
popf
xor
sarl
mov
mov
cltd
mov
mov
popa
negl
or
mov
imul
mov
pop
xor
push
sbb
adc
add
sbb
mov
imul
pop
mov
bound
pusha
dec
jns
xor
push
jmp
push
push
push
mov
orl
jmp
vminss
in
sbb
and
sub
jns
cmpsb
test
xchg
add
in
addr16
xor
or
jmp
pop
mov
pop
sti
jno
in
sub
outsl
insl
mov
dec
and
mov
xchg
and
cwtl
jb
ja
push
testb
lahf
cmp
pushf
adc
mov
or
inc
aam
mov
mov
pop
jns
xor
push
repnz
push
sbb
mov
dec
cmp
pop
fcmovnb
loopne
insl
sbb
mov
enter
push
repnz
sub
cmp
add
dec
hlt
orl
daa
das
loope
xlat
jnp
es
xchg
arpl
pushf
or
or
imul
dec
mov
inc
mov
daa
xor
bound
xchg
push
rcr
ret
ja
add
in
mov
xlat
dec
icebp
sub
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
mov
add
push
xor
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
decl
movl
mov
not
jmp
rol
lret
leave
lret
leave
lds
dec
inc
insb
and
adc
js
jle
js
outsb
andb
aam
push
sbb
mov
test
sbb
daa
loopne
stos
in
inc
rcll
outsl
outsb
lcall
sbb
rorb
mov
add
xchg
xchg
rorb
pop
fstpl
jecxz
xor
cmpsb
lret
inc
jne
mov
dec
sub
jp
inc
rcll
pushf
sbb
add
xor
std
xchg
insl
shrb
or
xchg
int
mov
xchg
mov
nop
jno
xor
or
sub
xor
pop
mov
and
movsl
fiaddl
cwtl
test
cmpsl
bound
and
cmp
adc
insb
shrb
insl
stc
and
insb
jp
and
enter
rorl
fnsave
jno
xlat
xchg
cmp
xor
in
stos
fadds
push
in
and
adc
push
cmp
mov
cmpsb
cmpsb
sbb
mov
sub
adc
cmp
and
aad
or
fbld
jmp
ja
push
fadds
sbb
cmp
out
jmp
mov
shll
push
mov
push
in
insb
inc
por
pop
or
int
dec
sub
jecxz
mov
pop
inc
or
in
and
push
jl
jge
adc
sub
outsl
imul
add
xchg
jno
cmp
iret
outsb
insl
inc
popf
xchg
fcoms
xchg
xchg
sub
fbstp
lds
cmp
mov
sub
popa
ss
stos
cmpsl
ds
and
lods
jns
add
cli
ffreep
xchg
fstps
rol
push
mov
fs
stos
rorb
subl
add
fstps
jb
jp
popa
xor
push
sbb
xchg
dec
adc
adc
rolb
push
push
dec
std
lea
clc
lds
ss
xor
test
shll
repnz
add
adc
cltd
in
mov
insl
fcmovne
lea
cltd
inc
cld
cmc
pop
je
inc
xor
mov
inc
ss
adc
add
ljmp
dec
push
jae
push
dec
inc
cwtl
lock
jmp
pop
test
stc
push
dec
sbb
cmp
enter
inc
sbb
sub
test
mov
and
mov
fs
and
aad
inc
dec
pop
inc
or
inc
out
add
stos
icebp
cld
cwtl
and
pop
ss
xlat
scas
sub
jl
mov
cmp
push
xchg
ficompl
jl
add
xor
or
xchg
aad
inc
out
xchg
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
push
push
push
call
jmp
xor
jmp
rol
int3
pop
test
xor
jno
js
dec
jle
js
pop
adc
ja
sbb
inc
into
stos
nop
mov
mov
cmp
test
or
and
in
adc
adc
fwait
ja
mov
pop
add
sbb
mov
test
dec
insb
or
adc
sub
maskmovq
idivl
aad
xchg
pop
jg
adc
xor
mov
mov
dec
insb
std
or
fiaddl
mov
dec
leave
mov
xor
xor
out
lea
test
cs
lahf
sub
mov
std
lods
jecxz
int3
inc
cwtl
loop
loopne
int
fwait
inc
into
loop
loope
mov
fldcw
jno
aas
xchg
cli
stc
outsb
imul
pop
lods
jp
jns
addr16
mov
cmpsb
stos
mull
insl
dec
shlb
lock
and
rcr
jnp
adc
xor
or
cmp
aas
ret
leave
mov
or
adc
and
adc
jmp
mov
or
mov
cmp
pop
pop
jecxz
cltd
shlb
sti
bound
insl
and
daa
mov
or
adc
sti
pop
movsb
jp
jne
repnz
test
out
sbb
test
mov
insb
test
mov
jo
mov
mov
fldt
movl
mov
mov
das
mov
sub
push
sub
push
gs
and
mov
or
in
mov
jp
ret
xor
lea
lret
inc
sbb
push
aaa
sahf
push
mov
ret
cmpsb
fstps
adc
daa
int
xchg
mov
sbbb
pushf
jbe
push
lea
mov
and
lds
out
jo
xor
popa
or
xor
cmp
mov
pop
jmp
sub
inc
rorb
out
mov
in
pop
mov
lret
and
sub
ret
pop
icebp
ret
ja
or
push
sahf
movsb
lds
ret
cmp
adc
adc
loop
sarb
or
mov
jg
std
or
ljmp
fistl
rcrl
xchg
jbe
icebp
out
pop
popf
movsb
push
inc
sahf
arpl
and
push
out
mov
dec
lret
sub
lea
fadds
dec
dec
mov
xchg
jo
add
sarl
push
or
nop
add
jne
push
dec
xor
push
sub
out
rolb
test
push
sbb
loop
cmc
test
push
pop
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
jmp
enter
aam
mov
int3
push
cs
sbb
inc
js,pn
dec
jle
js
xor
xor
or
cmp
cmpsl
je
sbb
out
xlat
sbb
scas
inc
and
mov
and
sub
fisubl
pop
sti
mov
sbb
xchg
sahf
jns
or
popa
or
push
mov
mov
arpl
lods
out
jno
xlat
jns
fucomp
fidivrs
xor
push
mov
mov
shr
sbb
ret
fsubs
shll
lret
pop
stos
addr16
jae
sub
cmpsl
cli
mov
pop
push
xor
ret
pushf
cmpsl
mov
jb
movsb
xor
fdivs
cld
mov
xchg
sbb
lods
fsubl
iret
fstps
pop
xchg
lea
mov
cmp
leave
lods
and
xchg
sbb
out
imulb
test
xor
push
dec
pop
subb
push
inc
cmpsl
add
mov
popf
and
sub
imul
or
das
xchg
inc
cli
movd
cld
test
loopne
dec
jnp
movsl
and
sub
sbb
mov
pop
inc
mov
loop
fisubrl
lret
cs
pop
and
jp
dec
xbegin
add
pop
cmp
xor
inc
xchg
jae
sbb
das
adc
lds
push
pop
pop
and
xchg
or
clc
xchg
add
inc
cmp
xchg
mov
rol
cli
push
inc
mov
ficoms
push
int3
call
inc
adc
pop
iret
mov
dec
inc
int3
mov
or
movsl
pop
cmp
mov
jno
pop
fcomp
out
movsl
cmp
das
add
or
lods
test
adc
or
add
mov
mov
or
sub
cmp
cmp
outsb
lods
jbe
xchg
jno
inc
adc
out
sub
mov
xor
cmpsl
adc
cld
xchg
mov
out
mov
fidivrs
xlat
mov
adc
fcomps
add
xor
sahf
roll
dec
fidivrs
stos
test
pop
popf
pop
lods
mov
scas
xor
hlt
out
and
inc
jns
cli
hlt
dec
lods
sbb
jb
mov
cwtl
xchg
repz
mov
add
cli
adc
fdivrs
dec
rcl
mov
idiv
or
mov
pop
rcll
iret
or
icebp
test
add
flds
and
mov
cmp
andb
inc
inc
lahf
sub
and
xchg
cmpsb
add
scas
sub
sbb
fsubl
jne
mov
push
mov
add
cmp
je
mov
mov
xor
jmp
rcl
leave
aad
xor
xchg
xchg
adc
dec
jle
js
fbstp
jbe
lahf
inc
in
inc
inc
push
push
jmp
sub
jge
dec
pop
and
in
or
stc
add
add
push
sbb
add
pop
idivl
repz
jg
shl
push
mov
xchg
repnz
lret
cmpsl
ss
pop
out
repz
into
fs
jl
das
movsb
cmpsl
mov
cmp
nop
mov
aaa
cmpsb
sub
loopne
fistpl
mov
out
fildll
or
insb
push
ret
daa
aaa
jo
js
scas
das
movsb
jo
enter
jecxz
sub
push
or
sti
pop
pop
mov
ret
nop
enter
xchg
enter
scas
rcrb
ss
bound
or
push
and
lods
inc
mov
rcl
push
cmp
xor
xchg
adc
push
mov
rcrb
mov
dec
xor
les
sub
daa
stos
fists
mov
and
add
push
pop
sbb
mov
push
push
xchg
sbb
daa
addr16
arpl
sub
sbb
dec
add
xor
mov
inc
insl
ret
dec
je
jbe
nop
cltd
dec
rcr
wbinvd
bound
testl
idivl
and
loop
fwait
or
arpl
aas
loopne
mov
hlt
pusha
shl
mov
jb
test
pop
sbb
cmp
xchg
push
aam
mov
bound
icebp
into
push
cmp
or
fistl
subl
das
shrl
add
sub
cmc
iret
mov
fiaddl
std
and
jb
loopne
test
push
jnp
lods
outsb
and
xchg
inc
pop
pop
popf
je
mov
sbb
sbb
push
rclb
and
xor
cmp
enter
movsb
sub
in
js
xor
lea
add
dec
sub
add
push
adc
mov
push
loope
xstore-rng
cmpsl
les
mov
or
and
movsl
inc
fstpl
xchg
int
sub
stc
cvtdq2ps
dec
lods
cmpsb
js
jae
pop
es
cld
inc
push
cmp
lods
add
jle
xchg
xor
rcrl
jl
jg
inc
or
dec
xorl
dec
jnp
mov
and
lods
sbb
and
in
es
jnp
les
adc
dec
adc
test
mov
orl
add
mov
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
jmp
aas
rol
int3
aad
dec
sub
lods
call
jle
js
sub
outsl
jo
push
dec
add
out
and
shlb
adc
cmp
orb
push
push
add
jmp
inc
adc
pusha
in
sub
xlat
loope
loope
jecxz
add
jbe
mov
adc
enter
enter
mov
es
sub
jno
addr16
xor
inc
mov
ss
adc
repnz
lahf
mov
jecxz
dec
mov
es
xor
fcmovu
push
into
or
mov
xchg
fmuls
mov
add
cmp
lods
cmc
in
xor
dec
and
push
sub
bound
in
cltd
test
das
adc
fsubr
mov
ss
pop
out
aas
in
jne
jns
into
js
clc
add
mov
shr
jns
add
jge
es
mov
out
nop
mov
xchg
mov
mov
mov
jno
jae
sbb
scas
inc
push
mov
jo
mov
fwait
les
mov
mov
sbb
rclb
mov
mov
mov
cmc
mov
ljmp
jg
loope
adc
pusha
repnz
push
je
xor
aas
push
sbb
stc
cltd
loopne
sbb
lods
adc
repnz
jmp
fistpl
and
pop
dec
xlat
jg
add
test
xchg
add
or
out
sub
ret
or
fisubrl
or
sbb
mov
pop
outsl
push
mov
jecxz
sarl
fldl2t
jnp
mov
mov
or
and
les
test
out
jnp
push
adc
push
jmp
xchg
mov
insb
cmp
sub
mov
lret
and
iret
ffree
sbb
mov
xchg
push
xchg
imul
cltd
andb
int
mov
cld
pop
aad
push
lret
mov
sbb
lods
fisttpl
insb
cs
or
adc
add
stc
cli
loopne
adc
out
loopne
subl
jg
loope
nop
stos
jg
push
fwait
nop
imul
cmp
push
mov
arpl
std
outsb
fcomps
adc
jne
mov
ret
sbb
cltd
addr16
hlt
push
hlt
aam
add
push
enter
dec
cmovge
and
jnp
fnstenv
fs
and
stos
xor
push
sbb
push
arpl
mov
aas
xchg
in
in
pop
mov
xchg
lret
mov
jmp
int
rol
ror
aad
inc
jecxz
fmul
sbb
js
jle
js
jb
sub
xor
loope
aam
hlt
movsb
bound
fildl
popa
test
mov
arpl
shl
fwait
lahf
sbb
mov
jno
popf
mov
aad
fisttpll
add
pop
mov
mov
add
cmp
jo
add
negl
mov
xorb
decl
test
loope
fstp
mov
cmp
fwait
cmpsl
rorb
push
lcall
lcall
pop
cmpsb
fldl2t
fsubs
push
pop
dec
mov
das
pop
int3
mov
mov
xor
add
sub
push
push
mov
jp
add
popl
pushf
imul
cmp
mov
sti
and
mov
sahf
push
or
ds
adc
inc
push
clc
add
xchg
cmc
adcl
outsl
xorl
cmpsb
pop
adc
inc
push
mov
dec
sbb
out
rol
xor
or
aad
push
mov
dec
pop
xchg
scas
cmpsl
and
pop
xchg
inc
popl
xor
or
das
and
or
in
cmp
push
adc
cmp
sti
cmp
icebp
pop
add
js
mov
lods
cmc
pop
jae
jno
shl
pop
hlt
jnp
enter
jmp
mov
mov
in
nop
jae
adc
shll
ret
into
nop
jmp
mov
mov
hlt
hlt
push
mov
insb
mov
pop
push
mov
push
sbbb
mov
mov
into
shrb
shll
xchg
dec
dec
push
mov
cmp
cwtl
shlb
sahf
jle
xchg
xchg
insl
push
fwait
dec
lock
test
nopl
cwtl
fcomps
push
cli
mov
ljmp
xchg
sahf
jo
push
out
das
push
ret
lods
lock
jae
inc
push
xchg
mov
in
push
call
cli
inc
gs
cmp
add
xchg
xchg
stos
in
sahf
adc
ficoml
insl
cmpsl
test
mov
push
nop
pop
popf
clc
and
xchg
push
sbb
in
fwait
mov
mulb
mov
cmp
cmp
and
shlb
fisubrs
inc
sbb
jns
out
mov
lods
into
test
scas
pop
in
imul
pop
test
pop
mov
scas
mov
mov
xor
xchg
scas
fistl
mov
ss
add
movsb
fisubrs
and
xchg
pop
movsl
mov
jp
pop
inc
or
stc
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
jmp
rol
lret
ret
shrl
insb
leave
add
adc
js
dec
jle
js
movsl
cwtl
test
adc
int3
sbb
push
ja
les
and
adc
test
sbb
and
popf
jae
adc
xchg
jns
sub
ret
aaa
jmp
jle
cmc
add
scas
mov
cmp
xchg
push
ja
lods
shl
arpl
sub
sbb
xchg
pop
movsl
push
clc
add
jnp
icebp
mov
enter
dec
movsb
pop
or
fcompp
adc
lods
leave
clc
and
inc
popf
inc
mov
mov
cmc
jmp
sti
or
push
arpl
adc
cmp
or
mov
loop
pop
ret
pushf
xchg
mov
adc
and
adc
mov
lret
sbb
rcrb
jp
in
pop
int
inc
pop
dec
imul
lock
insl
nop
mov
push
add
shll
es
pop
dec
sbb
bound
xchg
cmp
out
lret
mov
bound
data16
inc
cmp
xchg
mov
cmpsl
inc
xchg
std
and
pop
sahf
dec
into
fsubl
outsb
ret
add
cld
adc
adcb
adc
push
in
push
xorl
or
iret
outsb
loopne
cmp
in
inc
movsl
adc
out
lods
mov
mov
test
adcb
add
subl
push
aaa
or
xchg
icebp
lock
gs
jo
je
mov
xor
dec
cmp
mov
stc
aaa
les
bswap
loope
loope
rorl
lods
and
jp
iret
sbb
loop
lret
sbb
mov
and
xor
fimuls
fildl
push
repnz
adc
inc
out
addr16
jno
fdivrl
and
add
popf
in
dec
xchg
mov
pop
cmp
test
int
mov
and
loop
movsl
ljmp
or
insb
fldcw
into
loope
inc
daa
add
shrb
dec
pop
stos
and
sbb
rcrb
enter
stc
roll
jmp
shrb
divl
lds
fldz
das
push
cld
mov
loop
jae
fdiv
fimull
pop
out
in
fwait
les
xadd
jb
shrb
mov
xor
cmpsl
add
push
xlat
push
decb
jnp
in
mov
pusha
xor
mov
cmpb
sbb
adc
sbb
or
sub
movsl
push
cmc
adc
cwtl
xchg
outsl
cwtl
and
and
ret
dec
cmpsb
xor
push
in
and
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
jmp
cmp
fnstcw
jecxz
pop
mov
cmp
dec
jle
js
jmp
add
or
push
mov
adc
test
loop,pn
lods
insl
mov
icebp
aam
xchg
mov
repz
popa
je
ja
loopne
push
fwait
int3
or
xchg
or
in
sarl
push
push
scas
sahf
jecxz
xchg
inc
xchg
xchg
jmp
mov
dec
leave
stos
int
xor
xchg
sbb
test
xor
out
test
repnz
popf
jg
jae
cmpsb
outsl
sbb
rcrb
xchg
sbb
inc
jmp
movaps
loopne
xor
cmp
popl
arpl
or
pop
fistps
dec
cmp
inc
push
rclb
pop
test
xchg
sbb
gs
push
jns
scas
pop
out
popf
sbb
cwtl
add
loope
mov
cli
lcall
adc
insl
sahf
in
jg
pop
xor
lea
lret
lock
clc
pop
rcll
xor
ja
sub
mov
jp
scas
or
jle
fmuls
addl
pop
mov
sbb
lahf
movsl
add
pop
bound
movsl
inc
test
mov
add
jl
add
ds
test
imul
test
jbe
and
xchg
daa
pop
into
mov
mov
hlt
adc
mov
lock
lcall
xlat
hlt
lret
cltd
lret
mov
inc
iret
gs
mov
pushl
mov
dec
push
add
xchg
pop
shld
cmp
cltd
lret
aaa
int
add
scas
xchg
stc
addl
sbbb
rcl
dec
push
scas
mov
push
lods
and
fistpll
jp
mov
xorl
or
dec
js
ja
xchg
adc
fmuls
in
jbe
mov
lock
push
push
std
loope
fimuls
push
xor
dec
xchg
and
add
and
cmp
std
lret
sahf
addr16
movsl
jns
and
psubsb
sub
fstps
sbb
in
loope
lahf
roll
dec
add
push
inc
repnz
shll
arpl
iret
add
aam
aam
into
push
mov
push
pop
imul
out
sub
test
dec
call
jge
loope
cli
sub
bound
bound
iret
xchg
outsl
les
add
push
lahf
mov
enter
sbb
cli
fstps
xchg
fs
jno
jmp
fnstenv
jb
dec
xchg
out
cmp
mov
syscall
rol
fsubl
fs
and
xor
ds
rcrb
fidivl
adc
mov
shr
jmp
add
rol
ror
leave
rcr
aaa
mov
mov
js
jle
js
mov
bound
clc
fdivrl
pushf
jns
insl
repnz
adc
sbb
loop
dec
in
jmp
paddusw
or
sbb
insl
out
xchg
sarb
loope
js
sub
enter
movsb
cwtl
and
cli
mov
mov
sbb
mov
sahf
jle
setg
add
lds
lret
pop
popf
pop
mov
repnz
adc
insl
decb
popf
jns
and
loope
mov
cld
inc
orl
call
push
push
inc
bound
inc
je
andb
mov
fsubl
dec
push
std
and
adc
fadd
inc
push
imul
pop
and
cmp
sti
in
pusha
jo
fstl
jbe
test
jg
jo
mov
dec
inc
roll
and
pop
xor
dec
xchg
adc
rorb
xchg
inc
shll
aam
push
adc
sbb
test
xchg
or
and
xchg
inc
inc
add
add
dec
or
cmp
mov
rcl
enter
fs
fucomip
xor
jmp
iret
inc
movsl
leave
dec
mov
icebp
sbb
adc
xchg
jo
xchg
or
dec
jmp
or
pop
imul
xorl
jle
and
fisubl
sar
and
mov
cmp
or
data16
fcoms
daa
cs
xchg
mov
jne
pop
ret
mov
mov
cmp
and
iret
daa
or
and
loope
in
mov
xor
jge
clc
jmp
or
or
popa
cmc
adc
adc
jecxz
xor
aad
push
push
iret
into
mov
pusha
out
pop
push
lret
sub
stos
cli
pop
mov
les
jb
movsl
xlat
push
js
lfs
cmpsl
in
xor
hlt
aam
pop
add
mov
sub
cmp
in
subb
jae
shlb
pop
add
cmp
lret
xchg
cmp
adc
and
or
push
mov
outsb
xor
lods
add
push
leave
ds
cmp
sbb
shrl
daa
mov
jmp
xor
mov
mov
fldenv
out
push
mov
test
mov
inc
popf
and
clc
and
and
push
loop
dec
sub
add
push
dec
inc
mov
ret
xchg
push
adc
loopne
nop
mov
ret
or
out
mov
mov
jmp
iret
rcl
lret
ror
xlat
lods
and
lcall
js
jle
js
aaa
pop
mov
sarb
fisttpl
lret
jmp
cmp
data16
bndstx
movsl
pop
push
icebp
mov
in
notb
insl
aam
mov
inc
rol
jo
test
ret
jo
xor
and
jo
mov
push
aaa
add
stos
pop
and
or
push
outsb
sahf
xchg
jbe
jle
xor
orb
das
inc
sub
mov
mov
mov
jecxz
mov
fsincos
lahf
push
lcall
and
pop
xchg
fs
hlt
mov
pop
lds
loopne
jge
aaa
sbb
imul
cmpsl
and
push
ror
stc
les
pop
mov
push
loopne
jb
push
sbb
lcall
pop
ja
enter
and
ljmp
dec
xchg
inc
loop
adc
jecxz
leave
packssdw
pop
ljmp
loop
mov
mov
pop
loope
mov
movsb
jo
jbe
jecxz
jb
daa
hlt
hlt
sbb
pop
inc
adc
jmp
ljmp
push
adc
cmp
mov
pushf
mov
pop
stos
push
fwait
cmp
lahf
cmc
enter
jle
pop
pop
dec
lret
pop
or
xchg
push
mov
sbb
out
xorb
push
div
adc
dec
mov
cmp
sbb
mov
inc
add
sub
into
add
stos
dec
xlat
mov
push
test
in
mov
and
lret
jnp
fs
push
cmp
lea
nop
mov
imul
call
leave
or
add
inc
mov
push
mov
js
cli
imul
sub
jp
mov
mov
fimuls
cmp
out
ljmp
jbe
insb
mov
mov
pop
gs
push
pop
jnp
cmp
aad
sub
stos
pop
std
pop
int
fsubp
iret
inc
jns
clc
test
mov
cmpxchg
inc
rcrb
mov
ret
lcall
sub
aad
int
fs
adc
xor
cmp
mov
bound
pop
jae
jnp
sub
movsl
pop
sbb
out
addr16
xchg
lcall
and
xor
lahf
pop
pop
or
dec
mov
mov
xchg
call
mov
mov
mov
pusha
push
cld
enter
pushl
call
add
cmp
rclb
pop
pop
adc
xor
push
sub
or
or
popf
add
div
mov
jmp
aas
ret
rol
sbbl
mov
dec
jle
js
fs
and
jmp
jge
mov
push
dec
and
insl
push
sub
in
dec
dec
out
push
or
pop
scas
add
push
jge
xor
cmp
cltd
into
xchg
mov
pop
ret
xchg
sub
mov
mov
sbb
leave
jne
pushf
pop
adc
jmp
and
add
push
lret
rorl
ss
add
inc
stos
mov
aad
jo
lea
scas
mov
and
mov
mov
cli
mov
sbb
xchg
mov
shlb
cmpl
mov
cli
bound
adc
fistl
xchg
dec
mov
mov
push
inc
ljmp
subl
scas
aam
repnz
outsb
dec
cmp
pop
dec
cmp
pop
aaa
hlt
add
in
call
sbb
mov
adc
jae
scas
in
xchg
fcmovnb
hlt
lcall
data16
jl
loop
jge
mov
jecxz
xor
les
popf
inc
inc
cmp
dec
pop
icebp
jg
enter
adc
push
push
add
mov
movsb
sbb
fldt
mov
hlt
mov
mov
test
cld
fcmovb
pop
xchg
xchg
pop
in
mov
cmp
repz
in
sahf
xor
jbe
sub
cmp
inc
cmpsl
nop
add
fldt
pop
push
pop
inc
sub
xor
movsb
jmp
seto
psubsb
mov
test
fidivrs
pop
xor
jo
mov
cmp
pop
pop
pop
jl
jg
ss
adc
and
or
incb
testl
andb
shl
and
fisubrs
insb
arpl
xor
mov
lret
jns
cmp
popa
andb
add
rcr
jb
fs
pop
dec
mov
push
fsts
movsb
mov
xor
add
loop
pop
fistl
push
add
mov
adc
out
sti
mov
push
fcoml
inc
push
scas
clc
ljmp
push
in
rorb
div
not
out
dec
hlt
incb
cmpsl
lcall
clc
xor
pop
divl
dec
xor
push
cld
cltd
or
jmp
gs
adc
cmp
xor
push
cmp
push
movsl
adc
sub
pop
movsl
xor
inc
adc
dec
fwait
int3
inc
cld
fdivr
mov
pop
and
out
js
imul
das
inc
and
jmp
popa
je
enter
sbb
jmp
ds
cmp
mov
pop
lods
sbb
xor
js
dec
jle
js
mov
pop
rep
ds
cmp
ss
pop
push
test
xchg
loope
addr16
lret
or
push
loopne
imulb
lret
repnz
loope
ss
hlt
mov
sub
roll
repz
and
ficoml
adc
lea
dec
inc
lea
add
jno
insb
or
or
in
std
sbb
in
js
jbe
test
mov
jg
jns,pt
dec
iret
pop
cli
mov
roll
or
cltd
xor
xor
xchg
or
mov
cmpsb
push
sub
addr16
xchg
xchg
push
jne
sub
mov
call
inc
pop
add
mov
adc
dec
mov
or
lock
in
stos
lret
fldl
cs
mov
lret
mov
repnz
mov
xchg
repz
cwtl
repnz
sbb
sub
shrb
dec
dec
sub
movsl
popf
andl
add
push
and
or
jo
and
ljmp
addr16
js
push
ja
add
sti
inc
sbb
sub
and
dec
mov
sub
sub
test
mov
mov
or
push
call
mov
mov
xor
mov
inc
fnsave
loope
lret
adc
fwait
or
xor
icebp
aas
rcrb
and
imul
sub
rorb
sarl
repz
cmp
push
xor
push
sub
or
pop
inc
or
xchg
push
lahf
jb
mov
dec
mov
xchg
fmulp
rorl
out
mov
push
pop
mov
xchg
xchg
fidivl
addb
fs
xorl
mov
das
mov
and
push
gs
sub
leave
mov
je
jbe
iret
mov
shl
mov
push
xchg
xor
daa
in
js
inc
pop
imul
insl
call
bound
jne
dec
dec
aas
lods
cwtl
cld
and
insb
cmp
pop
cmp
fistpll
mov
add
in
jno
or
out
adc
adc
mov
ror
sub
mov
cmp
xor
shl
and
mov
push
push
jp
mov
jp
push
gs
sub
jecxz
stos
inc
mov
dec
leave
rorb
mov
and
xchg
jne
out
ljmp
inc
add
call
or
cli
push
jns
jae
cmp
aam
mov
add
in
sub
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
and
mov
jmp
int3
vpmovmskb
fcmovnu
leave
in
loop
out
int3
loop
stc
add
js
fs
js
and
mov
ja
and
dec
sub
mov
imul
cmp
ss
in
insb
push
ret
mov
sub
les
punpckhdq
out
mov
ds
mov
jg
popa
sbb
paddsb
sbb
dec
dec
test
pop
inc
xchg
lock
ja
jge
jns
movsw
movsb
lock
dec
mov
sti
or
cmp
addr16
adc
mov
pop
adc
jecxz
sbb
fs
mov
cmp
les
stc
mov
mov
movsl
repnz
xchg
insb
inc
test
out
rcll
inc
pop
or
mov
call
or
mov
mov
in
sub
stos
mov
sbb
outsl
test
and
pop
lcall
dec
dec
fwait
stos
adc
pusha
popa
adc
add
cwtl
push
xchg
dec
inc
fisubl
ret
or
imul
outsl
push
cmp
add
inc
pop
add
lods
test
leave
cmp
test
jp
ficoms
jbe
xor
adc
push
stos
int3
push
add
push
outsl
out
jns
pop
dec
insb
test
pop
pop
out
sbb
xchg
imul
imul
or
addb
cmovle
fmul
push
inc
test
cld
add
and
mov
or
and
pop
enter
or
inc
repnz
fildll
mov
pop
les
mov
xchg
aaa
ljmp
cmp
xor
pop
xor
xchg
jl
push
shrb
cld
jmp
fs
loope
into
outsl
add
pusha
dec
lret
lcall
fsubr
rcrb
pop
push
pusha
test
test
sub
idivb
sub
test
inc
pop
cmp
push
pop
pop
xchg
mull
xchg
repz
ret
shlb
cli
mov
dec
mov
pop
mov
icebp
xor
test
ret
cmpsb
cmc
and
xchg
jns
or
jmp
mov
jmp
movsb
lock
jno
in
shrb
out
sbb
mov
ljmp
out
jb
icebp
jg
notl
adc
cli
shll
in
ficomps
or
stos
jge
or
xlat
cs
dec
or
ja
dec
jb
adc
mov
xchg
test
lods
imul
mov
mov
pop
sti
dec
leave
jae
xchg
into
push
and
bound
sahf
add
jns
or
roll
xor
enter
lret
testb
pop
xchg
mov
or
mov
mov
adcl
xor
subl
mov
xorl
jmp
rol
cmp
aam
rol
mov
and
out
outsb
insb
iret
js
fs
js
jecxz
dec
mov
lret
scas
jl
test
lret
adc
rcrl
lret
aad
aam
aas
push
repnz
insl
movsb
pop
cmpsb
out
inc
addl
movsl
adc
mov
cmp
jl
or
dec
cmp
outsb
shrb
in
lahf
cld
test
sahf
adc
lahf
or
dec
xor
insb
divb
mov
push
movsb
pop
lea
cmp
mov
mov
jp
dec
pop
mov
lods
ds
ret
inc
mov
hlt
ret
jge
out
aam
jne
pop
call
lock
and
push
shll
ljmp
aad
in
push
sbb
or
aas
popf
push
sbb
mov
sub
test
and
mov
mov
push
lret
pushf
cltd
mov
jg
xchg
jecxz
sbb
push
xchg
rorb
and
sub
je
xchg
and
imul
add
fdivs
ret
test
fwait
mov
stc
jp
xor
popf
mov
mov
push
mov
callw
xchg
mov
addr16
fs
icebp
cmpsl
push
xor
sti
insb
mov
js
aad
jnp
stos
mov
cltd
and
popl
cmpsb
ss
cli
add
frstor
mov
cmpsl
cld
out
xchg
jns
push
dec
call
in
jae
sbb
jb
xchg
flds
clc
fistpl
jmp
inc
sahf
mov
and
lret
stc
int
lds
in
call
mov
pop
mov
lds
ss
ljmp
lods
hlt
sahf
fbld
ret
jle
jl
and
test
ret
data16
js
lahf
pusha
icebp
push
lret
mov
push
mov
sbb
push
cmc
push
das
sbb
das
out
or
fistpll
mov
fwait
push
inc
pop
mov
scas
sub
outsl
imul
int3
add
xchg
jl
lods
pop
jbe
mov
mov
mov
sahf
mov
mov
mov
shrb
loope
add
mov
lods
fsubl
inc
sub
mov
loopne
xchg
mov
jb
jcxz
mov
pop
nop
in
dec
and
sub
xlat
sub
sub
mov
jo
pop
aam
outsl
fwait
mov
xorb
je
or
and
jecxz
sub
sbb
cmp
mov
push
in
in
out
fstl
sub
dec
push
lahf
adc
cmpsl
sbb
push
sbb
xchg
out
push
jl
push
xchg
mov
or
movzwl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
adc
mov
xor
add
sub
jmp
cmp
rcl
rol
ficoml
out
ss
negl
js
fs
js
inc
dec
adc
push
es
stc
or
subl
cld
add
bound
or
mov
popf
cmp
ss
pop
mov
sub
xchg
out
imul
xchg
pop
inc
push
mov
sub
cmp
jns
imul
sbb
sarb
push
xchg
mov
cmc
movsl
scas
fs
jmp
std
lret
push
cmp
push
mov
stos
dec
sub
jg
cmp
lcall
push
in
or
mov
dec
sbb
fistl
std
sub
lods
cld
outsb
pushf
cmp
xor
xlat
cmp
pop
push
jo,pt
leave
mov
pcmpgtb
adc
fwait
jle
mov
inc
repnz
sub
out
jns
dec
fsubrs
aam
cmp
xor
std
adc
testb
frstor
clc
cltd
ljmp
mov
inc
pop
jecxz
sbb
mov
fcoms
scas
or
lcall
mov
ljmp
dec
add
loope
fidivrl
push
mov
shll
add
lods
std
ds
jle
mov
ret
and
pop
xor
add
je
pop
or
and
mov
sub
lea
dec
mov
popf
mov
xchg
or
push
sub
xor
push
ja
xchg
arpl
clc
int
ss
cltd
jbe
scas
enter
pop
jg
iret
push
into
fs
lock
sbb
add
loope
jns
stc
mov
les
lock
cmp
sub
fldcw
or
push
push
mov
cmpsb
add
shlb
jmp
pop
mov
aam
repnz
test
xchg
gs
movsl
jmp
pop
dec
lods
sbb
repz
sbb
cld
mov
push
pop
mov
or
ficompl
daa
addr16
pop
xchg
and
or
xchg
mov
je
adc
idivl
cltd
pop
and
add
ss
sbb
aas
inc
lods
adc
adc
pop
incb
aad
rcrl
dec
xlat
loop
mov
or
xor
call
cmp
dec
scas
and
mov
js
mov
cmc
mov
cmp
insl
mov
pop
or
cmpsb
faddp
mov
sub
ja
jl
push
push
rcrb
stos
mov
int3
dec
outsb
movsb
imul
xor
out
inc
jbe
cltd
stc
adc
inc
dec
and
fldenv
lret
into
pop
js
rol
movb
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
jmp
iret
lret
aad
in
mov
inc
sarl
fs
js
enter
xchg
xchg
cmpsl
inc
sti
mov
dec
mov
pop
fistl
add
dec
push
jns
stc
fwait
push
mov
shl
sbbl
aam
and
and
cmp
cmp
cmp
enter
dec
jbe
sbb
xchg
mov
jo
ret
outsl
jno
and
stos
inc
or
mov
les
repz
aam
pop
cmp
or
mov
outsb
insl
and
into
or
mov
scas
cmp
xor
fnstsw
fistl
popa
jne
and
jb
and
aad
aas
fnsave
test
ss
or
push
cwtl
push
lea
mov
mov
sbbl
push
dec
pop
inc
add
out
adc
repnz
iret
push
dec
mov
mov
sbb
sbb
xchg
shrb
pushf
mov
xchg
out
jbe
shrl
or
shlb
jbe
adc
icebp
xor
or
std
leave
bound
dec
dec
loope
jecxz
pop
add
jb
cmpl
adc
pushf
sbb
dec
mov
adc
and
push
mov
add
dec
and
push
add
pop
mov
popf
stc
stc
add
pop
mov
cmpsl
xchg
sub
lods
cmpsb
aas
out
cltd
lahf
into
dec
cmp
adc
aaa
fiaddl
mov
out
lock
lea
outsl
jl
and
cmpsb
shlb
mov
divl
test
loop
and
pop
call
lods
rcrl
adc
and
jns
out
loopne
stc
cltd
mov
outsb
sbb
les
inc
test
add
lahf
fidivs
mov
pop
lret
mov
push
mov
imulb
inc
xor
cmp
cmpsl
or
pushf
lret
push
sbb
les
stc
jl
scas
icebp
mov
mov
dec
sbb
insb
adc
push
xchg
pop
push
dec
repz
jl
cs
cli
test
subb
loop
mov
enter
sti
cmp
test
ffreep
outsb
ret
mov
out
lcall
push
sub
aad
cmp
lcall
ror
stos
or
movsb
scas
lock
ffree
cltd
ret
xor
add
cmc
cltd
lods
data16
nop
add
jno
sahf
mov
jmp
movsb
subb
mov
or
jecxz
xchg
pop
icebp
jmp
ja
cmp
lods
pusha
xor
jno
enter
xchg
ficoml
scas
dec
push
mov
mov
orl
mov
xor
sub
sbbl
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
mov
push
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
jmp
cmp
cmp
ret
shll
add
mov
js
fs
js
mov
sbb
pop
jecxz
js
cld
mov
adc
shl
or
out
aas
lods
test
mov
dec
xchg
pop
mov
pop
aad
sti
sub
xchg
punpcklbw
int3
std
loope
pop
inc
les
inc
adc
cmpsl
mov
lahf
or
and
mov
daa
push
mov
xchg
adc
loop
enter
add
sti
adc
icebp
add
clc
sbb
add
pop
inc
lcall
and
test
sar
pop
cmpb
pop
mull
jns
out
or
rcll
cmp
or
add
daa
imul
mov
and
inc
inc
or
sub
out
xchg
dec
data16
jp
das
xchg
and
pop
inc
jecxz
int
xchg
mov
lods
inc
and
push
or
push
lods
imul
jnp
or
jmp
mov
mov
outsb
sub
iret
jmp
data16
imul
aam
mov
call
popl
cs
popf
jmp
imul
stos
add
push
test
cmp
lds
jl
stos
jno
or
inc
leave
adc
jae
bound
xlat
jnp
jo
sbb
int3
xor
shlb
in
xchg
sahf
mov
xor
in
mov
pop
sbb
mov
aas
xchg
ljmp
dec
mov
jae
lods
mov
sbb
mov
mov
inc
popf
insb
loope
dec
mov
mov
nop
push
or
xchg
xor
xchg
dec
pop
pop
shl
imul
sub
mov
aas
dec
ljmp
jmp
mov
mov
mov
repnz
push
loope
xor
rclb
jp
dec
adc
movsb
inc
sub
or
mov
push
adcl
push
mov
mov
int3
mov
and
adc
dec
scas
fistpll
xchg
mov
ret
xor
loope
mov
scas
jl
leave
xchg
cmpl
sti
lret
loop
test
push
cmc
mov
inc
mov
push
pop
pop
add
lods
mov
das
push
stos
lds
in
leave
sbb
sti
repz
ret
imul
js
out
mov
mov
inc
int
ljmp
sahf
and
scas
loop
jb
or
cmp
ds
mov
lcall
fstl
insb
lret
sub
push
and
add
ret
push
add
outsb
out
repz
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
jmp
ror
lret
fcmove
rcl
adc
xchg
cli
cmp
pushf
fstpt
fs
js
test
into
nop
dec
xor
lcall
jbe
decb
adc
aaa
in
pop
lea
punpckhdq
pop
frstor
std
iret
and
orl
mov
inc
cld
stc
jecxz
push
in
sbb
nop
movsb
out
stos
decl
mov
sbb
inc
lcall
mov
sbb
lahf
dec
aas
jg
fwait
push
insb
clc
scas
bound
mov
mov
pop
cmp
je
sbb
movsl
mov
subb
add
adc
out
notl
lretw
pop
mov
push
and
dec
ret
testb
or
fs
mov
in
out
icebp
das
scas
inc
fst
cmp
arpl
scas
sub
cs
gs
xor
mov
jno
fmuls
fwait
pop
jl
jb
aad
scas
push
mov
sahf
sahf
hlt
push
vpaddb
pop
jno
xlat
push
dec
cmp
ljmp
mov
mov
adc
lods
test
in
rcl
inc
dec
das
repnz
aas
cmp
mov
je
mov
sub
cwtl
mov
sarb
push
sub
mov
dec
hlt
pop
jl
push
jg,pn
enter
test
adc
dec
sbb
fbstp
loop
cwtl
dec
mov
sti
xchg
shl
or
dec
out
xor
cld
mov
cld
sahf
mov
loop
sbb
loop
mov
xchg
adc
dec
push
dec
out
mov
adc
iret
lcall
lock
jb
xchg
test
movsl
push
mov
pop
movsb
mov
jnp
fisttps
xchg
cld
sbb
loopne
xchg
xor
pop
add
lods
in
clc
repnz
mov
lcall
xor
scas
xchg
int
jp
mov
sbbl
roll
pop
movsb
movaps
rcr
lcall
mov
pop
push
cmp
cmp
add
je
xor
add
mov
or
pmulhuw
dec
inc
push
push
rol
add
sub
les
dec
dec
out
cmp
jge
or
jl
lcall
mov
mov
iret
sub
fldcw
push
push
fdivl
pop
mov
dec
mov
pop
mov
rolb
jns
xlat
into
add
add
loopne
mov
sub
pop
dec
inc
cld
loopne
push
mov
fnsave
sahf
add
adcb
xchg
je
adc
inc
cmc
clc
test
stos
sbb
jg
es
lods
adc
dec
pop
dec
in
cwtl
cmp
jne
pop
pop
mov
mov
jmp
lret
ret
fld
add
fsubrs
push
test
js
jle
js
xor
aad
jnp
jl
jl
lock
mov
dec
jnp
or
rcrl
push
mov
jno
stos
and
cmpsl
or
adc
push
mov
fwait
mov
dec
popa
call
or
xchg
iret
jle
cmp
push
push
rcrb
dec
push
les
cmp
xlat
jle
jb
outsb
in
push
cmpsl
mov
mov
push
or
xchg
fisubrl
out
nop
mov
hlt
xchg
mov
lahf
lods
inc
std
jmp
mov
xor
fadd
xor
iret
popf
mov
pop
fs
aas
pop
xor
insb
add
call
fs
jo
xor
sbb
fbld
pop
popa
roll
push
adc
inc
pop
or
addr16
adc
out
xor
mov
and
mov
in
ds
dec
iret
dec
jle
pusha
mov
jl
xchg
add
xchg
xchg
mov
sbb
or
mov
ret
adc
lahf
and
mov
add
jg
imul
cwtl
into
mov
popw
push
xchg
and
sub
xchg
jecxz
ds
lods
push
dec
and
fadds
sbb
jle
lods
ss
outsl
push
pop
mov
icebp
and
or
iret
les
xor
repz
bound
fwait
or
mov
popf
push
fimuls
and
jnp
bound
jle
pop
pop
inc
pop
sbb
pop
lds
push
sbb
movsl
mull
stos
iret
xchg
inc
cmp
dec
mov
push
cmp
mov
adc
stc
push
into
dec
pop
push
jae
sbb
insb
pop
fimuls
cmp
pop
sub
cmpsl
jno
jbe
xchg
mov
fnstcw
ds
xor
popf
mov
mov
ret
aad
xor
jecxz
fs
xchg
jne
xchg
mov
sub
add
cmp
insb
lock
insl
sahf
aad
mov
sbb
mov
stos
shl
mov
mov
xchg
dec
dec
lods
push
jl
scas
testl
push
pop
data16
mov
mov
mov
cmp
push
cmpsl
mov
in
mov
ljmp
stos
dec
out
mov
in
xchg
pop
stc
insb
mov
cmp
push
decb
jbe
fs
ret
into
repnz
fs
push
es
inc
test
cmp
cld
dec
push
stos
fstl
mov
sahf
ja
sub
outsb
sub
dec
rorb
clc
movsb
negb
xchg
scas
lods
popf
loopne
test
js
in
fisttpll
ffreep
mov
inc
mov
and
roll
mov
mov
xor
add
mov
mov
jmp
ret
ror
rcr
rcl
push
add
xchg
hlt
fnstsw
fs
js
fdivs
ret
add
sub
cld
mov
inc
jbe
sti
mov
xchg
push
mov
insb
mov
add
in
ljmp
mov
ret
xor
jl
loopne
pop
daa
pop
clc
mov
mov
stos
fxch
adc
sub
jno
jecxz
inc
inc
out
mov
xor
pop
cmp
mov
cmp
lock
pop
mov
mov
push
leave
push
mov
jge
push
ds
adc
pop
and
inc
cmp
inc
fcomps
mov
fwait
iret
adc
and
lret
call
adc
fistpl
sub
sahf
negl
fwait
or
pop
repz
jge
movsl
push
cmpsl
fildll
in
jb
mov
mov
test
arpl
cmpl
popa
pop
adc
jo
jmp
adc
lret
inc
fwait
push
into
imul
popa
popf
mov
mov
std
in
sub
xchg
movsb
sbb
addr16
mov
outsl
mov
popf
push
push
jmp
inc
mov
cmp
pop
push
jg
imul
xchg
xchg
movsb
fistpl
iret
xor
mov
xchg
adc
push
mov
roll
adc
dec
sahf
push
pop
pop
lods
adc
add
out
sarl
sbb
push
xor
or
jne
pop
loopne
scas
jge
adc
fdivrl
and
vmwrite
aam
scas
push
popa
and
out
sub
jnp
aas
fimuls
inc
movsb
xor
mov
mov
sbb
pop
imul
aam
fstpl
push
js
test
push
push
adc
scas
imul
or
jns
fisubrs
mov
mov
mov
mov
lock
sbb
gs
mov
fsubl
jle
cmp
in
push
out
mov
mov
mov
test
jle
or
adc
jl
incl
sbb
out
jo
ljmp
push
mov
outsl
mov
cmp
xlat
and
xchg
dec
jbe
xor
sub
nop
negb
add
mov
jnp
aas
es
cwtl
mov
or
cmp
fwait
jnp
inc
mov
mov
testb
int3
push
sub
loope
mov
cmp
adc
ror
shll
sub
ret
cmp
test
mov
mov
sbb
cmpl
ds
pusha
xor
cmp
or
fcmovnu
aad
fs
call
fsubr
sti
and
out
mov
mov
pop
add
leave
rcl
push
jnp
pandn
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
jmp
cmp
rcl
fcmovu
into
leave
xchg
loopne
js
fs
js
jno
roll
jns
xchg
cli
or
lods
fistps
mov
aaa
test
lds
loopne
adc
insl
xor
pop
jmp
and
stc
mov
sahf
push
aam
cmp
mov
fnstsw
xchg
mov
in
pop
dec
jl
aad
enter
push
pop
mov
ljmp
gs
pop
inc
mov
and
ss
mov
jg
mov
sarb
insb
jbe
das
xor
push
out
add
scas
mov
push
push
pop
ret
and
adc
cmc
and
jg
les
fwait
lcall
or
push
inc
adc
mov
neg
aad
pop
jl
xor
and
adc
dec
adc
pusha
or
jg
cltd
adc
sbb
xor
add
mov
iret
dec
fwait
or
xchg
lods
or
pop
inc
lret
or
js
divb
test
jecxz
gs
rcl
pusha
int
add
xchg
jbe
nop
and
inc
jle
xchg
dec
cwtl
aas
push
shrb
mov
sar
cmpsl
xchg
ljmp
loope
and
push
test
insb
pushf
mov
jmp
mov
push
scas
call
or
bound
in
inc
outsb
mov
cmp
mov
jb
in
test
push
int3
mov
pop
fstl
pop
int
ret
hlt
and
cmp
ja
scas
ss
popa
sbb
cmc
aaa
pop
aas
repz
xchg
fmulp
jno
stos
aaa
cmp
fmul
jge
sub
inc
in
jl
mov
sti
sbb
dec
xchg
jae
loopne
push
cmp
xchg
jecxz
push
testl
jae
lods
nop
pop
lret
das
adc
sub
xchg
add
dec
add
clc
pop
pop
repnz
mov
dec
rclb
or
sbb
rcr
repnz
stos
dec
cmpsb
and
adc
repz
test
cmp
xchg
add
jno
dec
adc
insl
or
pop
sbb
mov
fnstsw
sbb
push
sub
dec
pop
fidivrl
sbb
cmp
icebp
jl
jg
loopne
push
lock
aam
es
inc
dec
imul
jl
push
insb
jns
sub
mov
sub
movsb
sub
cmp
dec
push
pop
xchg
mov
jl
inc
sbb
mov
sub
test
out
lret
loop
divb
enter
or
and
jo
push
imulb
inc
mov
aam
cmpsb
stc
leave
loop
inc
call
inc
in
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
jmp
aas
fld
add
sahf
movsl
ffreep
ror
out
js
jle
js
sbb
shl
dec
inc
test
pop
pop
adc
fdivrl
sub
leave
fisttps
push
cs
inc
arpl
sahf
xchg
mov
lcall
arpl
mov
fwait
aaa
sbbb
and
sbb
rcrb
leave
inc
sbb
mov
mov
add
cmp
aas
sbb
push
sbb
jl
push
ret
mov
pushf
ljmp
fbstp
int3
mov
test
push
mov
jp
xchg
xor
add
or
mov
arpl
xor
mov
inc
mov
sti
scas
cwtl
pusha
pop
adc
push
enter
adc
and
pusha
aam
dec
or
sti
or
lahf
jb
cmp
jge
bound
dec
cmp
push
scas
test
daa
pop
cmpsl
jae
sbb
jle
push
gs
aaa
cmp
enter
movsl
cmp
jno
mov
inc
dec
stos
cmp
aad
xchg
scas
sub
aaa
mov
push
cmp
fisubs
jecxz
jmp
fcomps
lcall
dec
mov
lea
or
mov
xchg
and
pop
fs
aad
es
loop
xchg
cli
inc
in
xlat
and
in
xor
mov
xor
add
push
stc
hlt
pop
js
cmpsb
cmc
mov
cwtl
mov
sti
or
cmp
add
aas
adc
xchg
mov
sti
cmpsl
fcompl
adc
loop
xor
imul
xchg
repz
stc
jne
ja
gs
std
or
add
call
out
sbb
adc
xchg
sub
psllw
xlat
loope
adc
or
inc
mov
jnp
and
lret
out
adc
xchg
jae
xchg
lea
xor
dec
xchg
pop
jne
shrl
pop
mov
push
test
xor
fstpl
repz
mov
inc
jae
sti
xchg
sub
divb
aad
push
test
or
jb
in
out
dec
fisttpll
cmp
xchg
inc
loopne
aam
inc
fcoml
push
sub
xor
int3
mov
push
push
xor
out
sub
dec
adc
stc
jecxz
movsb
rcrl
imul
push
dec
lock
arpl
xor
jmp
or
xchg
aas
xchg
pop
adc
ret
cld
sbb
cwtl
leave
or
mov
mov
in
sub
cli
and
pushl
insl
out
mov
mov
gs
dec
gs
cmp
xchg
shrb
and
and
sub
cmp
push
xorb
xchg
es
test
add
ret
push
mov
push
xor
push
jmp
cmp
aad
mov
ja
xor
in
js
jle
js
out
xchg
xlat
jge
jmp
push
sub
popa
sbb
sub
push
mov
jecxz
add
cmp
pop
xchg
jecxz
call
addl
mov
enter
xor
ljmp
insl
push
movsb
pop
testb
nop
push
xchg
xchg
sbb
data16
or
add
cmp
jl
hlt
icebp
outsb
mov
ss
mov
or
test
lcall
fistl
xchg
sbb
clc
cmpb
clc
stos
out
std
jo
cmpsb
ret
stos
pop
bound
mov
test
stos
test
pop
inc
pop
test
cmp
dec
xor
xchg
push
imul
pushf
cmp
jne
cmp
jecxz
jg
jg
aad
adc
inc
in
inc
sbb
xchg
test
push
jb,pt
xor
push
rclb
pop
mov
int3
lahf
daa
add
lods
scas
in
in
cmp
add
test
add
push
lea
rorl
jnp
inc
jnp
adc
add
inc
leave
sti
xchg
or
int3
dec
ret
adc
jbe
imul
jae
xlat
push
sar
xorl
stos
sub
xchg
in
fisubl
jbe
push
adc
cmpsb
adc
sub
mov
cmp
and
push
mov
dec
sub
in
shl
insb
testl
mov
popf
pusha
mov
outsl
adc
jo
roll
das
xchg
push
inc
aam
push
push
cmp
dec
lahf
jbe
xlat
enter
insb
mov
add
in
inc
cmp
mov
imul
jl
mov
mov
loopne
mov
sub
jno
cmp
adc
pop
xchg
xor
mov
push
push
mov
cltd
mov
sti
mov
mov
fwait
nop
mov
jecxz
xlat
dec
leave
push
mov
cmp
js
lret
adc
in
lcall
daa
sarb
ror
mov
orb
cmc
imul
les
lret
mov
pop
sbb
sti
lds
aas
int
arpl
cmp
call
mov
scas
xor
add
pop
mov
pop
adc
je
fildll
push
jne
push
push
int
cmc
test
mov
mov
fstpt
and
out
out
xchg
jb
dec
xchg
xchg
pop
inc
stos
movsl
xor
mov
inc
clc
cmp
cld
cmp
cld
add
push
mov
mov
add
mov
mov
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
mov
orl
add
add
xorl
imul
mov
jmp
cmp
lret
stos
adcl
cld
in
addr16
cmp
push
gs
leave
lds
enter
test
mov
loopne
jne
mov
mov
enter
jge
push
flds
xchg
pop
fisubl
cmp
adcb
aas
push
es
inc
jmp
into
hlt
xor
shll
es
out
std
movsl
cmp
push
xchg
ss
and
push
ljmp
lahf
inc
lcall
jmp
mov
or
dec
xchg
adc
sub
sahf
fsubrl
xor
lock
dec
leave
jne
push
sbb
pop
jb
or
mov
test
ret
mov
cmp
dec
add
xor
scas
rclb
mov
xor
xorl
mov
xor
cmp
push
enter
cmp
push
dec
in
mov
push
push
pop
adcl
aam
add
xchg
dec
leave
leave
fldl
ffree
sbb
shlb
cmp
cmp
out
ss
aam
xor
mov
cld
ss
cmp
xchg
jno
std
ljmp
inc
inc
fcoms
xchg
pop
push
push
mov
mov
fcoml
lcall
out
sahf
invd
xorl
andb
xor
lock
shll
and
in
mov
and
sbb
mull
call
and
dec
repnz
fsqrt
mov
push
pop
fwait
insb
add
outsb
add
xor
inc
xor
add
testl
mov
add
ss
mov
rcrl
pop
xor
fs
dec
xchg
outsl
push
mov
jnp
cwtl
ffreep
ficoml
add
mov
jge
pop
sbb
jp
insl
push
comiss
sbb
test
cltd
xchg
shll
and
pusha
loopne,pn
out
rorb
inc
inc
jl
sti
add
movsl
incb
cwtl
andl
jg
cwtl
or
inc
mov
mov
mov
mov
push
mov
jg
aaa
movsb
inc
mov
clc
push
mov
xlat
add
movsl
shll
loope
outsb
sub
scas
je
scas
in
jg
xor
or
fisttpl
jp
inc
adc
test
lds
or
pop
aam
mov
lret
xchg
mov
mov
and
repnz
jle
dec
dec
jecxz
cltd
push
repz
add
add
jne
jmp
lret
cmp
mov
sar
push
mov
js
cmpsl
jle
js
testb
cmpsb
jge
ffreep
not
shr
ret
mov
cmp
inc
mov
mov
adc
das
fcoms
pop
mov
xor
jp
fbstp
or
push
pop
add
icebp
jge
adc
filds
fistl
xor
jmp
int
mov
push
mov
mov
xlat
jmp
mov
or
pop
lods
adc
xchg
fisttpll
inc
cmp
mov
mov
mov
adc
and
lock
arpl
imul
fsubs
lcall
fcmovb
cmp
add
mov
adc
shrl
lret
insb
adc
jo
adc
jl
loope
rep
lods
stos
pop
sub
in
push
movb
ljmp
pop
repnz
push
mov
xor
push
enter
inc
mov
and
lea
lods
cmpsb
je
aad
cmpsb
in
daa
jo
sbb
and
push
loope
push
pusha
adc
sub
jbe
cmp
jge
xchg
xlat
fmull
add
and
xchg
mov
rcrb
fsubrp
addl
and
rcrb
mov
xchg
or
ficomps
roll
pop
pop
pop
imul
push
mov
jnp
outsl
mov
mov
sub
insb
fists
cmp
inc
mov
outsl
es
jmp
bound
mov
andb
push
call
fwait
cltd
mov
mov
fcomps
cmpsl
mov
idivl
mov
stc
or
sbb
xchg
xor
mov
or
and
add
aaa
jns
inc
mov
aam
negl
or
mov
lods
jg
xchg
pop
sti
movsl
out
addr16
inc
repnz
cwtl
cmpsl
sub
sbb
iret
mov
dec
fcompl
sbb
and
cld
int
cmc
addr16
mov
popf
ds
cmc
cmpsl
xor
mov
leave
mov
idiv
scas
push
outsl
jae
cmpsb
loope
aaa
xor
insb
xor
in
bswap
mulps
xor
xlat
dec
mov
int
addb
adc
sub
xor
push
loop
pop
andb
lret
or
mov
add
insl
std
push
aad
mov
pop
test
in
mov
pop
aas
out
xchg
in
push
shl
jno
jo
inc
lret
lret
nop
push
addl
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
jmp
xlat
leave
lret
aad
leave
adc
or
xor
jle
js
nop
pop
fiaddl
stc
addr16
jl
push
inc
or
adc
std
inc
loop
das
jge
xchg
fiadds
push
add
pop
fldenv
lret
fsubrl
fldl
pusha
scas
dec
mov
xor
shlb
stc
or
jns
push
sub
fwait
or
cmc
cs
xchg
add
mov
mov
pop
dec
mov
mov
cld
stc
add
in
mov
int3
adc
out
jecxz
pop
jbe
dec
aaa
jmp
push
push
xor
sub
lcall
or
stos
inc
test
push
shl
popf
cmp
inc
add
mov
enter
xchg
sti
jns
inc
hlt
imul
aad
fucomip
push
loop
leave
insb
addr16
or
dec
lods
adc
les
xor
sarl
sbb
push
stos
add
inc
adc
call
js
popf
mov
ljmp
cs
push
xchg
imul
xor
or
daa
movb
dec
imul
int
jne
sbb
pop
fmull
ret
aad
fists
fsubrl
psllq
test
popf
icebp
rclb
shlb
stos
pop
mov
pushf
pop
rcll
bound
sbb
xor
adc
sbb
cmp
repnz
pop
ljmp
sub
adc
out
inc
shll
mul
push
xchg
adc
lods
call
sbb
xor
xor
aas
sbb
mov
std
dec
repnz
js
addr16
or
and
inc
xchg
dec
test
aam
arpl
std
adc
sbb
push
iret
nop
push
fiaddl
ret
popf
lret
and
pop
ja
xor
hlt
addr16
adc
pusha
mov
mov
mov
push
test
subb
scas
or
cmp
ja
pushf
dec
inc
add
out
mov
enter
and
inc
xchg
out
fs
xchg
add
adc
test
xorps
ja
pop
repz
lret
cmp
dec
dec
mov
in
out
enter
aaa
or
imul
or
inc
mov
dec
test
push
jp
aad
mov
arpl
in
in
loope
sahf
or
adc
cmpsb
inc
push
ja
movsl
sub
jecxz
lcall
je
aam
std
xchg
cmpl
incb
add
pop
imul
rep
cli
push
jge
and
es
sub
cld
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
jmp
leave
enter
xlat
enter
leave
jno
pop
bnd
push
jle
js
dec
roll
cmp
out
divb
cld
pop
add
pusha
mov
dec
mov
out
xchg
sti
adc
jecxz
scas
mov
add
shll
or
divb
dec
aaa
sub
dec
cmpsb
lret
jmp
sub
fisubl
insl
sbb
jno
pop
lret
sub
stos
push
lea
insb
or
out
mov
push
pop
pusha
push
and
scas
jbe
cltd
pusha
and
push
inc
inc
xchg
sub
movsb
mov
xor
pop
sbb
mov
jp
repnz
enter
in
rorb
mov
sahf
stc
xchg
int3
xor
add
aas
iret
pop
inc
jns
push
jo
pop
jb
adc
xor
sarl
add
xchg
sub
jl
mov
pop
mov
inc
insb
mov
mov
add
aas
push
adc
add
jno
sbb
xor
jns
xchg
rol
fistpl
add
mov
and
cltd
pop
mov
pop
pop
pop
mov
cmp
mov
mov
sarb
test
dec
adc
repz
jbe
sbb
and
sub
push
mov
fs
jl,pn
mov
fwait
push
mov
pop
jge
aad
adc
xchg
jl
xchg
jne
inc
cmp
cmp
cmpsb
sub
mov
jb
xor
popa
mul
push
jmp
mov
and
jg
and
nop
adc
clc
mov
pop
lea
in
sub
lret
ds
and
cpuid
mov
out
xor
das
jl
xchg
pop
jg
insb
aam
push
or
sahf
xor
repz
addl
aaa
xchg
mov
mov
cmp
jmp
mov
aam
out
andb
idivb
out
cmp
popf
mov
call
adc
dec
fildl
sar
rclb
push
xchg
cmc
xor
inc
out
push
mov
imul
adc
popa
test
dec
mov
fdivl
dec
jg
mov
cmpsl
jl
mov
dec
les
cwtl
sub
dec
mov
scas
int
dec
dec
mov
fadd
mov
inc
mov
push
clc
lahf
jmp
xor
sbb
lods
fwait
repnz
aaa
jmp
cmp
sub
adc
jmp
jb
int3
jge
mov
xchg
in
lea
add
mov
pop
fsubl
mov
or
and
popa
mov
sub
pop
popf
push
outsb
stos
sbb
or
sti
cs
inc
dec
pop
mov
adc
push
mov
movl
mov
mov
mov
movl
movl
cmp
jne
xor
jmp
lret
rcl
xlat
fxch
fsts
and
js
push
jle
js
cs
jae
shr
jge
xchg
cld
pop
std
add
or
push
idivb
aam
aad
movsw
mov
xor
mov
sub
outsl
rcrl
aad
sbb
xor
fcmovnb
and
adc
xor
mov
and
in
jmp
add
mov
into
xchg
mov
cmp
mov
sub
test
movsb
popf
repnz
rcrl
popa
rorb
inc
stos
aam
jne
sbb
out
or
push
mov
dec
pop
mov
stc
xchg
fisubrs
adc
repz
cmpsb
dec
xchg
push
mov
inc
fidivs
push
mov
pushf
xchg
sub
pop
test
icebp
jo
pop
push
aas
fnstcw
dec
or
mov
jl
xchg
jmp
mov
out
shl
sahf
lea
mov
in
mov
fimull
sub
sub
outsl
dec
fiadds
jno
add
leave
fidivrl
adc
push
loope
xor
dec
mov
call
jge
imul
jb
cmpsl
sbbb
mov
jg
push
dec
xchg
andl
dec
insl
daa
repz
in
fmuls
ss
push
roll
rclb
add
data16
cmp
movsb
pusha
jne
mov
sbb
int
dec
aaa
sbb
in
jecxz
inc
or
mov
jo
les
cmpsl
out
daa
adc
std
mov
pop
inc
in
adcb
add
pop
enter
cmp
push
sbb
push
out
sub
mov
xchg
dec
lods
push
xchg
inc
fs
cwtl
addr16
mov
lahf
add
incl
test
xlat
cmp
packssdw
out
mov
dec
inc
sbb
ss
jno
sub
or
imul
jg
ret
jns
fistpl
add
scas
sbb
push
sbb
pop
mov
inc
cmp
stos
fistl
addr16
xor
adc
loopne
test
scas
cmp
je
arpl
xor
lcall
ret
out
xchg
rorb
test
fists
inc
push
pushf
mov
pop
inc
lret
mov
repz
cmp
enter
adcl
mov
cwtl
sbb
fucom
jnp
push
lods
cld
sub
daa
pop
aaa
daa
xchg
mull
mov
cmc
xlat
jle
rcrl
mov
or
pop
push
push
add
push
cmp
outsb
aaa
mov
pop
xchg
mov
sbbl
mov
xor
and
mov
add
neg
mov
orl
movzwl
sbbl
not
xorl
and
jmp
ret
int3
leave
rcr
sahf
inc
imul
hlt
js
push
jle
js
xor
in
jnp
js
add
fidivs
cs
mov
adc
or
divl
xor
sbb
lods
and
idivb
popa
push
inc
pushf
icebp
out
inc
jb
lods
sub
lock
aas
add
pop
add
cmp
test
sub
clc
cwtl
pushf
out
fldl
lods
cmpsl
inc
xchg
out
jg
push
sbb
xor
sbb
xor
imul
mov
mov
nop
rcll
push
imul
jae
cmp
push
ds
insb
pop
push
dec
insl
loopne
and
jl
test
mov
ret
imul
and
movsl
aad
imul
sbb
movsl
cld
mov
mov
fisubrs
out
icebp
xor
mov
mov
or
cld
add
call
add
pop
cmpsb
call
test
inc
mov
mov
fistl
push
arpl
mov
or
xlat
daa
sbb
lret
pcmpgtb
xchg
imul
ss
ja
subb
and
sbb
push
jae
lds
mov
mov
movsb
sub
or
lcall
jo
adc
pop
decb
or
test
or
fwait
bound
fwait
adc
sbb
push
jge
pop
lds
arpl
imull
fnstenv
sbb
mov
mov
sub
push
dec
xor
je
in
mov
sbb
mov
mov
mov
mov
cmc
lock
mov
std
xor
pop
fistps
jge
or
xchg
icebp
or
push
jae
nop
in
mov
sbb
inc
xchg
std
ret
test
jno
jns
and
out
aaa
ds
icebp
jne
mov
in
fldcw
enter
mov
out
push
je
cmp
bound
leave
xchg
pop
es
xor
pop
cmp
pop
stos
std
in
arpl
sub
in
pusha
es
test
jge
and
pusha
xchg
fists
je
stos
mov
in
loopne
bound
loop
mov
nop
push
es
lret
xchg
push
loopne
jp
popf
in
and
cmp
push
jecxz
and
and
sti
or
sahf
mov
lds
ja
pop
testb
shlb
aas
fistps
sbb
add
mov
dec
mov
mov
hlt
dec
jp
add
push
pop
jne
jg
mov
fsts
mov
mov
jmp
xorl
mov
pushl
call
test
je
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
mov
sub
xor
movl
mov
xor
or
sub
imul
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
add
jmp
cmp
ret
ror
into
jge
enter
movsb
xchg
loop
js
je
js
cmc
repz
pop
loop
pop
pop
scas
lock
arpl
jle
lock
mov
inc
ret
xlat
add
xchg
lds
lret
or
jp
mov
data16
ss
sarl
add
aad
test
incl
push
movb
cmp
xor
xor
decb
or
call
lret
arpl
iret
and
cmp
daa
aam
popf
xchg
inc
xchg
pop
fistpl
inc
imul
cli
xchg
stos
xor
shrl
pop
rol
xchg
add
push
xchg
mov
mov
mov
aaa
out
imul
call
cmp
out
pop
sub
inc
out
test
cwtl
push
imul
ljmp
sets
push
cmp
sbb
ss
mov
rcrb
repnz
mov
sub
es
sbb
push
subl
cmpsb
lea
mov
cmp
insb
or
js
xchg
cmc
shr
lcall
ret
mov
jae
and
imul
inc
sbb
mov
mov
pop
mov
mov
pop
mov
fs
jns
popf
popa
stc
test
sahf
roll
or
ja
arpl
push
ret
mov
call
cmpl
inc
addr16
push
int3
iret
adc
andb
mov
inc
iret
jb
mulps
sub
mov
addb
fs
xchg
sbb
fcompl
pop
pop
popf
movsb
pop
xchg
or
insl
mov
xchg
movsl
inc
mov
sub
sbb
je
mov
mov
iret
or
sbb
push
mov
push
fisttpll
cmp
into
add
push
sbb
inc
mov
mov
pop
and
sbb
pop
mov
mov
xchg
adc
or
fisubs
test
rolb
mov
imul
fwait
xchg
mov
push
iret
mov
mov
test
outsl
sbb
les
mov
mov
sar
and
jo
and
loop
out
lret
inc
aas
cs
adc
out
xchg
loopne
or
dec
into
lret
jle
pop
push
inc
jnp
fcmovu
dec
test
sub
push
pop
lea
xchg
or
test
xchg
adc
adc
push
add
cmpxchg
mov
dec
inc
stos
stos
hlt
test
fistl
int3
adc
sub
cmp
in
pop
clc
and
divl
lcall
dec
pop
jbe
int
jmp
inc
xor
pusha
sbb
jp
fmul
outsb
mov
popa
repz
cmpsl
in
cmp
sub
rcll
xchg
push
sub
fsubrp
inc
nop
aaa
imul
int
inc
add
cmpsl
inc
add
mov
add
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
lea
mov
mov
sub
and
mov
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
push
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
mov
jmp
ror
int
dec
xor
ds
fdivrp
js
je
js
sbb
aaa
sub
mov
ret
adc
mov
lcall
mov
mov
pop
js
adc
ret
push
jae
shrl
xchg
push
cmp
aam
dec
and
int
rcr
mov
cmpsl
sti
cmpsb
add
rcrl
xor
daa
mov
aas
mov
pop
cs
jp
fsubrl
or
cltd
adc
in
xchg
mov
xor
and
hlt
dec
push
pusha
xchg
insb
fstp
xchg
loop
flds
add
into
ror
mov
mov
xchg
mov
lret
lahf
cmpsb
sbb
sub
test
cmc
mov
bnd
js
inc
enter
xchg
fcomi
and
cmp
dec
and
xor
sub
pop
jmp
icebp
cmp
jmp
gs
clc
setle
add
sti
adc
sahf
lock
xchg
cld
sbb
xchg
push
adc
pop
mov
inc
mov
fldenv
int3
das
das
imul
xchg
sub
jns
sub
movsb
dec
dec
adc
je
popa
movsl
stos
mov
lret
pop
inc
adc
lods
dec
add
call
inc
mov
mov
cmovb
push
sub
push
cmp
xlat
add
mov
clc
ficompl
xchg
cmp
in
sub
sub
push
aaa
in
or
mov
test
das
iret
stos
cmp
cltd
dec
sub
sbb
mov
and
mov
fisttps
add
and
les
jbe
inc
adc
adc
xchg
enter
imul
adc
lcall
fnstcw
in
jmp
nop
lahf
out
pop
andl
xor
push
inc
in
outsl
hlt
mov
pop
addl
imul
sbb
pop
mov
cmp
push
mov
mov
mov
mov
fnsave
hlt
xor
sti
cmp
fisttpl
mov
lcall
into
popf
mov
loopne
loopne
cli
mov
xchg
jb
mov
sbb
push
xlat
lret
cmc
or
mov
add
mov
pusha
inc
add
sbb
and
mov
inc
in
sbb
push
inc
hlt
insl
jle
arpl
int3
mov
pop
frstor
and
jmp
sub
pop
ret
pop
mov
and
push
testb
aaa
popf
dec
aas
scas
aam
out
sahf
sbb
hlt
jge
int3
test
push
insl
inc
and
int
das
pop
xor
xchg
push
sub
imul
or
daa
aas
cmc
pushf
jnp
call
fbld
stos
xor
mov
cmp
clc
mov
xor
mov
jmp
xlat
rcl
aad
vmovapd
adc
cmpl
jle
js
fwait
cwtl
cmpsb
xchg
adc
sbb
cmovno
sahf
insb
inc
push
aad
pushf
ss
push
pop
jbe
xchg
test
stos
cmpsl
jo
or
sub
and
imul
pop
rcll
pop
lds
insl
pop
jns
aad
dec
scas
or
jnp
out
shrb
adcb
in
in
push
ja
ja
hlt
dec
ljmp
mov
push
popf
xor
mov
push
adc
idivl
lock
cmp
addr16
sub
lods
lods
mov
enter
shlb
repnz
xor
in
mov
pop
cmp
aad
test
inc
out
inc
popf
in
out
inc
popf
sbb
dec
dec
adc
cld
mov
faddp
shll
jb
cmp
jb
ficompl
pushf
fsubs
lock
pop
pushf
lock
pop
out
lret
pushf
pop
push
cmp
daa
adc
ds
cli
icebp
cmp
push
int3
dec
inc
jge
inc
cwtl
pop
leave
in
rolb
pop
fs
and
out
cmp
or
fucompp
mov
rorb
repnz
cmp
mov
pop
test
adc
push
sbb
ja
inc
je
call
int
insl
jb
adc
or
push
cmpsb
add
dec
gs
and
sbb
adc
cmp
mov
jge
jmp
je
pop
mov
das
jae
test
les
gs
mov
adc
mov
mov
enter
xor
mov
push
fsubr
dec
inc
ss
inc
pop
loop
jg
adc
fisubrs
stos
or
or
pushf
xor
sbb
iret
loop
out
cmp
fsubrs
and
cmp
lods
and
pop
cmp
adcl
jno
sarb
cs
cmp
ret
sbb
push
jae
sub
out
inc
test
add
stos
js
insb
outsb
lret
mov
cld
into
repnz
fptan
sbb
adc
mov
sub
add
mov
jmp
lods
in
mov
out
add
fildl
nop
sub
or
int
and
rclb
mov
jge
mov
jl
jo
mov
mov
mov
loopne
fs
mov
mov
inc
imul
cmpsl
xchg
pop
add
inc
push
mov
sub
dec
mov
and
push
test
push
insl
in
push
jns
pushl
dec
mov
dec
out
rorl
adc
pop
pop
fstps
dec
pop
fistpl
cmpsl
jns
cltd
cmp
jecxz
or
fstpt
out
adc
fnstsw
pusha
jne
xchg
pop
adc
push
scas
outsl
dec
mov
mov
add
add
div
mov
movl
cmp
je
movl
lea
mov
mov
jmp
aas
aas
iret
iret
xlat
xlat
fists
push
pxor
mov
cmpb
jle
js
mov
stos
scas
mov
loope
jl
pop
push
lret
imul
stos
push
idivb
sub
inc
mov
jmp
or
cmp
xchg
dec
pop
inc
or
dec
push
jge
adc
push
shlb
mov
in
fstpt
xchg
aas
mov
into
es
mov
pop
outsl
lcall
aad
mov
pop
mov
add
xor
sub
xchg
add
je
push
xor
add
xor
cmp
pop
mov
mov
popf
loop
mov
in
jecxz
cmp
dec
jnp
mov
cltd
lea
es
xor
adc
cmc
pop
cs
out
and
bound
xchg
jo
pop
mov
push
out
dec
mov
notb
test
dec
insl
cmp
mov
xor
ret
cmpsl
and
loope
pop
idivb
es
fwait
pop
cli
js
jne
adc
out
popa
dec
ja
pop
into
mov
popa
dec
das
add
lock
movsl
std
repz
jnp
sbb
jmp
adc
iret
ds
mov
icebp
loopne
mov
push
lret
ds
xchg
cmp
mov
mov
xor
movsl
es
dec
mov
xchg
cli
daa
and
pop
xor
push
mov
shlb
jae
inc
fisubrl
push
cltd
dec
dec
or
gs
stc
nop
xor
jbe
ljmp
and
ja
pop
xchg
in
aam
xchg
inc
mov
adc
imul
and
xchg
fnstcw
pop
ljmp
imul
in
mov
test
in
inc
push
imul
out
addb
pop
pop
and
sub
cmp
inc
pop
inc
nop
xor
out
sar
jle
mov
incb
repz
insb
mov
xor
shll
popa
cmpsl
xchg
push
jmp
ror
int
mov
pushl
adc
adc
adc
fmull
and
sbb
add
cmc
mov
ds
xchg
test
pop
push
mov
lcall
adc
xchg
push
idiv
sub
or
lock
add
cwtl
pop
push
cmp
nop
push
sub
fnstsw
or
mov
jbe
inc
jg
xor
test
ret
xorl
mov
mov
ljmp
jnp
push
sbbb
mov
sub
pushf
mov
xchg
mov
adc
cmp
int3
xchg
add
add
xor
or
lret
mov
push
jle
fwait
and
cmp
and
mov
imul
mov
mov
jmp
sarl
fcmovne
mov
fsubr
xor
test
je
js
and
push
pop
cmc
test
cmp
shlb
cmc
inc
lods
stos
les
mov
test
add
std
gs
out
add
movsb
push
lea
inc
mov
pop
lret
mov
mov
sbb
push
loopne
cmp
mov
in
ljmp
push
sub
mov
sbb
addr16
and
dec
push
cmpsl
cmpsb
dec
jge
int
jle
lret
sti
stos
xchg
lods
mov
xchg
cli
mov
in
out
nop
orb
push
not
xchg
arpl
mov
jb
inc
cmpsb
add
push
mov
aad
into
fucomp
out
xchg
inc
cmc
xchg
mov
lret
push
or
idivl
adc
fsubs
add
push
lods
ret
insb
insb
mov
sbb
test
inc
mov
roll
xor
out
lods
test
sbbl
inc
cmc
dec
sub
std
cmpsb
add
lahf
xlat
adc
gs
shlb
push
jmp
rcrb
push
jbe
inc
out
in
in
inc
lret
dec
mov
mov
adc
je
popa
jne
jge
push
enter
dec
xchg
fdivrs
cmp
push
das
push
sub
mov
es
popw
jae
add
and
mov
sub
ljmp
lcall
gs
sub
push
and
inc
inc
and
rcll
loopne
das
lea
push
or
cmp
in
sbb
xchg
imul
push
pop
add
xchg
aas
repz
shll
mov
fldl
add
push
in
mov
ja
xorb
jne
sbb
cs
adc
xlat
out
stos
xor
xor
pop
leave
dec
add
push
in
or
sbb
mov
and
cmp
push
mov
xchg
jp
xchg
adc
mov
cmp
loopne
pop
xor
sub
pop
pop
add
pop
mov
outsl
xor
les
std
loopne
das
jno
cmp
cwtl
push
pusha
push
cltd
sub
adc
popa
loope
clc
aas
sbb
pushf
outsl
rcl
jns
pop
pushf
jae
cmp
mov
test
pop
xchg
jo
mov
iret
jmp
push
out
xor
subb
ror
xor
dec
into
movsb
enter
out
gs
fldcw
addr16
js
idivb
idivl
sti
cli
mov
push
xor
mov
fnstenv
pop
push
dec
mov
xor
dec
imul
sub
ljmp
jecxz
jg
mov
jmp
rol
leave
fcmove
rcl
pop
mov
adc
into
mov
je
js
dec
in
and
lahf
xchg
repz
push
mov
xchg
push
cmp
aad
pop
or
ret
pop
inc
bound
pop
push
pop
les
rcr
imul
repnz
ficomps
sti
mov
inc
leave
andl
ljmp
fsubrp
inc
jp
popf
and
daa
inc
mov
add
inc
mov
cli
add
xor
inc
dec
sub
jmp
push
sub
sbb
fwait
pop
cmp
outsl
jns
idivb
pusha
dec
movsb
mov
dec
inc
sbb
testb
popa
pop
imul
ljmp
mov
test
and
notl
clc
and
addb
icebp
addb
mov
out
mov
mov
xchg
orl
and
fisttps
fisubrl
pop
push
pop
sbb
adc
stos
imul
outsl
call
jb
jecxz
jae
mov
adc
movsb
gs
js
xor
sbbl
outsl
or
test
mov
enter
pop
fsubl
frstor
push
hlt
and
dec
cld
mov
popf
fisubrl
in
dec
add
movsl
inc
mulb
push
push
pusha
mov
jbe
mov
cmp
fimull
loop
lods
int
int3
or
pop
cmc
cs
shll
scas
rcll
xchg
nop
mov
out
mov
mov
scas
push
es
cwtl
adc
es
push
and
sbb
and
and
xchg
aam
mov
popa
xor
call
jne
fsubrl
decl
int
adcl
sbb
outsb
xchg
or
adc
mov
pop
bound
and
shrl
fidivs
loopne
mov
xor
repz
pop
lods
stos
pushf
pop
xchg
mov
into
aam
out
and
stos
ss
lds
fstp
rorl
mov
dec
loopne,pn
std
outsl
or
rclb
cmp
mov
xchg
mov
cmp
and
int3
out
mov
add
lcall
lcall
jne
pop
lcall
ret
and
adc
mov
les
xor
push
aam
pushf
js
or
in
sbb
scas
leave
cmpsl
jnp
xchg
sbb
or
sar
inc
jl
mov
sub
cmp
inc
lods
mov
out
push
aaa
enter
dec
adc
push
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
jmp
leave
xlat
ret
rcl
leave
fldcw
aaa
jne
lret
js
jle
js
das
mov
nop
mov
js
add
in
fstpl
in
mov
cmp
push
push
xor
cld
mov
mov
push
fimull
lcall
in
movsl
inc
ja
fadds
push
rolb
int
les
or
call
outsb
push
adc
mov
mov
mov
dec
and
or
pushf
ret
gs
das
sbb
jne
popa
mov
cld
out
test
std
adc
adc
cwtl
gs
lods
je
ss
movsl
stos
and
js
out
imul
mov
loope
pop
shlb
imul
mov
arpl
mov
fsubrs
push
fs
pop
divb
sbb
inc
lods
fwait
dec
sbb
ret
cltd
mov
jmp
mov
push
jecxz
aad
fisttpl
add
test
sbb
cmp
mov
rcrb
loope
mov
cmp
mov
daa
cmpsb
jbe
adc
xor
mov
mov
mov
jae
arpl
movsl
jmp
jmp
xor
inc
inc
das
outsl
in
shrb
daa
fimull
lds
sbb
icebp
dec
jle
xchg
or
sbb
lods
jae
and
sub
incl
or
sub
in
psraw
inc
sub
xor
pop
inc
xchg
mov
pop
fwait
mov
sub
movsb
daa
add
jp
sbb
sbb
dec
dec
inc
pop
pop
arpl
mov
lret
jne
inc
repnz
test
cmp
test
cli
lahf
or
pop
jbe
jmp
pop
xor
inc
mov
repnz
and
add
cmp
outsb
mov
jnp
mov
mov
pushf
jmp
cmp
js
test
push
mov
js
mov
inc
pop
mov
insb
repnz
or
mov
shlb
ljmp
out
jns
xor
dec
jnp
push
ud1
test
sahf
push
sahf
cmc
mov
aaa
ja
orl
pop
mov
add
inc
shrb
arpl
xor
mov
sub
mov
mov
in
loop
arpl
sbb
cmp
jo
and
mov
cmpsb
inc
sbb
out
inc
mov
xchg
dec
lcall
fwait
sub
aad
add
out
iret
sub
imul
sti
pop
dec
add
pop
jle
push
adc
pop
aad
sub
lret
outsb
mov
jnp
test
add
add
sbbb
jmp
into
aas
ds
rcl
add
stos
rorl
mov
je
js
out
jae
inc
push
mov
mov
testl
xor
push
xchg
mov
pop
jbe
or
mov
daa
stc
jo
sbb
repz
add
inc
lock
dec
aaa
test
decb
push
adc
cmp
xchg
addr16
or
fiadds
fistpll
dec
push
mov
insb
mov
mov
push
lods
stos
sbb
imul
and
clc
test
fidivrl
inc
jl
rolb
xchg
jmp
mov
inc
cmp
clc
mov
shr
loopne
imul
pop
addl
sbb
popf
leave
jle
outsl
push
cmp
sub
out
into
dec
aas
xchg
mov
sbb
jp
pop
cld
iret
cli
adc
xlat
add
aas
addr16
daa
stos
mov
leave
das
cmp
mov
lock
int
pop
int3
shl
sub
out
sbb
cli
jp
lret
rcrl
push
jne
push
in
mov
fwait
in
add
inc
sbb
iret
outsl
in
add
mov
or
xchg
jp
mov
out
jp
add
jge
fnstenv
addb
jl
adc
add
lret
ds
popf
iret
mov
xchg
addr16
cmp
mov
insb
mov
inc
test
dec
idivl
push
lods
fs
pop
xlat
xchg
ss
xor
lret
dec
inc
dec
ret
daa
inc
mov
sub
or
or
lock
es
aam
cmp
mov
ds
leave
test
js
lret
inc
ret
fcmovnu
dec
ljmp
push
xor
aad
xchg
push
inc
cmpsl
push
nop
out
repnz
mov
pop
jnp
or
cltd
enter
mov
xchg
push
add
clc
mov
xchg
sub
push
out
dec
pop
enter
pop
jmp
lret
fstps
lret
push
pop
jno
jae
aaa
and
es
or
mov
or
rorb
mov
fmuls
les
cltd
mov
int3
add
xlat
xchg
imul
icebp
les
outsl
ret
xchg
inc
in
jp
cmp
push
loopne
dec
push
jae
mov
inc
inc
push
sub
mov
in
pop
repz
pop
lea
inc
mov
std
xor
mov
jno
hlt
xor
inc
jge
clc
outsb
scas
in
mov
sbb
xchg
jl
pop
adc
hlt
push
inc
push
imul
out
scas
cmp
and
push
jle
test
mov
test
pushf
or
sbbl
jecxz
add
mov
fisttpll
ror
mov
jne
aam
mov
inc
push
inc
jmp
inc
hlt
mov
or
cmp
je
mov
xorl
jmp
mov
jmp
ds
ror
rcl
fisubrl
xchg
jge
jno
fs
js
jle
js
cli
mov
xor
hlt
pop
movsl
pop
and
dec
and
dec
push
stos
sbb
imull
lock
pop
cmp
int3
dec
dec
mov
ficomps
call
mov
xor
jb
adc
dec
add
sub
push
ffree
cmp
imul
lcall
in
movntps
je
jmp
push
popf
leave
test
jecxz
ffree
repnz
mov
shlb
mov
push
xchg
mov
iret
stos
push
sub
out
xor
inc
scas
xchg
imul
push
imul
mov
and
cld
cmpsl
fld
cmp
adc
lods
sahf
stos
mov
nop
xchg
pop
push
mov
pop
nop
xchg
inc
inc
out
add
std
push
and
movsb
xchg
mov
or
jb
cld
sub
lret
pop
push
jbe
in
stc
popf
repnz
ljmp
adc
sbb
jle
cmpsl
data16
sti
dec
adc
std
mov
lods
sbb
pop
mov
mov
and
jbe
adc
cmpsb
xor
and
addr16
inc
or
jbe
add
xchg
daa
shrb
adc
fcom
push
pop
xor
scas
inc
sub
int3
aaa
inc
sbb
xacquire
in
int3
call
dec
in
imul
in
jnp,pn
sahf
push
rcll
test
fisubs
sahf
insl
jno
dec
mov
cmp
loope
shlw
and
mov
push
sub
loop
push
fistpl
and
inc
mov
xchg
push
adc
push
xchg
pop
jo
lods
add
fs
sbb
sarl
adc
dec
les
mov
xchg
push
into
cmp
inc
xchg
or
cwtl
stos
cs
push
pop
jecxz
sub
mov
daa
loop
int3
mov
add
fstpt
es
xchg
jmp
pop
cmp
cmp
push
movsl
push
mov
xchg
insl
xor
sbb
sbb
push
mov
xchg
or
mov
sub
or
cli
loope
mov
fsubr
lods
ljmp
in
test
jae
clc
aas
pop
ror
iret
mov
pusha
adc
pop
pop
cmp
cld
jne
rclb
sti
or
std
vminps
cmp
cmp
pop
shlb
or
xchg
cmpsb
jo
xchg
je
push
sbb
adc
add
imul
jo
add
shlb
sbb
stc
shrl
aam
push
sbb
pop
ja
enter
cmp
xor
or
mov
in
pop
inc
in
fistps
icebp
pop
xor
mov
mov
pop
sbb
push
mov
imul
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
jmp
int3
into
lret
ror
ficoml
cmc
push
xor
ds
js
je
js
lahf
xchg
sbb
mov
subb
mov
rolb
cli
rolb
add
jno
rclb
stos
jb
cwtl
ret
stos
xchg
mov
push
jne
ret
push
cmp
inc
cmp
jp
pop
xor
mov
iret
leave
jmp
sub
or
pop
dec
loopne
push
inc
or
dec
pop
push
call
arpl
pop
pop
add
pop
mov
mov
daa
or
loopne
leave
test
push
push
mov
shrb
sbb
xor
xchg
cmpsl
jnp
lods
lds
mov
sbb
rol
xlat
cmp
fsub
ret
jno
mov
fcmove
mov
cld
xor
subl
cmp
imul
mov
cltd
test
rolb
lods
push
fldt
mov
fmuls
sbb
jge
movsl
pop
repnz
pop
test
push
cmp
js
push
xchg
fldcw
fistps
test
adc
aam
mov
push
and
scas
sahf
jb
push
loopne
xchg
ret
lahf
jb
adcb
add
cmp
sbb
push
aas
ret
das
xchg
mov
test
fmulp
cmp
stc
inc
xchg
loope
shrl
test
pop
ds
aam
mov
mov
push
ret
std
ss
jns
jae
into
fstl
repnz
hlt
popa
mov
bswap
dec
sbb
shlb
inc
pop
dec
loop
push
lods
push
fxch
loope
xchg
mov
pop
mov
pop
mov
loop
push
dec
pop
dec
push
pushf
jle,pn
insl
inc
test
jbe
jo
clc
movsl
jle
sbb
mov
mov
fistpll
loopne
mov
mov
rcrl
mov
inc
flds
dec
pop
ss
pop
pop
fidivl
mov
es
add
jns
xchg
pop
cmpsb
jne
out
pop
lock
ret
fidivs
dec
stc
mov
jnp
ret
inc
in
push
jmp
ljmp
sub
or
lahf
inc
in
ret
xchg
ds
gs
cmp
cmc
out
int
pop
cmpxchg
xor
cli
mov
inc
scas
mov
in
bound
cld
xchg
test
int3
pop
sbb
xor
and
sahf
inc
mov
stc
lahf
adc
ds
sbb
cmc
cmpsb
pop
repz
jae
inc
sub
cmp
mov
adc
add
imulb
jp
out
pop
popa
push
ret
xchg
mov
int3
jae
lock
fisubs
adc
add
push
xor
pop
mov
cmpsl
cwtl
mov
call
ret
ret
inc
or
inc
or
ja
and
sbb
out
stc
dec
int
pop
repnz
rorl
inc
fsubs
jge
mov
jmp
xlat
cmp
ds
js
adc
std
mov
cmp
js
adc
lea
mov
rorl
cmpsb
scas
in
xorl
mov
inc
aam
xchg
xchg
popa
into
cmpsl
lods
mov
adc
pop
arpl
push
mov
popa
pop
and
notl
inc
inc
in
push
ret
fadds
cmc
mov
xchg
pusha
out
or
xchg
cli
jecxz
je
xorl
incl
push
mov
pushf
fcomps
push
sub
adc
fimull
jb
pop
gs
lret
jnp
cmp
mov
pop
xor
mov
dec
subb
sbb
mov
cmc
stos
mov
cltd
shrb
mov
xchg
xlat
jae
nop
mov
mov
xchg
mov
rclb
je
data16
pop
dec
or
mov
jle
sub
adc
jbe
stos
shlb
cli
lcall
fs
ret
mov
outsl
jbe
bound
sub
outsb
in
pop
mov
enter
insb
aas
or
outsl
das
cmp
jle
sahf
or
js
js
pusha
mov
cmpsb
adc
push
dec
sbb
xlat
fsubrp
pop
or
adc
fldt
in
and
test
cmpsl
push
icebp
push
inc
lods
mov
aas
sbb
mov
push
lcall
sbb
and
imul
repnz
pop
mov
lret
or
add
mov
cmp
cmp
jge
adc
jnp
iret
inc
and
test
dec
jne
icebp
incb
leave
inc
mov
xor
sbb
push
push
aas
jbe
push
and
or
mov
addr16
xchg
mov
test
add
icebp
jbe
lds
or
mov
mov
push
xchg
push
add
aaa
pop
test
orb
imull
out
lret
mov
inc
jae
aad
pop
clc
inc
sbb
jmp
sub
jb
es
call
test
testb
push
xlat
mov
bound
inc
inc
mov
inc
push
enter
inc
mov
mov
outsb
stos
jnp
nop
cmpsl
pop
ja
jecxz
push
and
lret
jmp
movsb
js
xor
int
xchg
les
mov
cli
test
shl
add
lcall
arpl
xor
cmp
loopne
mov
inc
dec
pop
push
xchg
dec
lods
and
dec
mov
dec
fs
jae
push
gs
into
mov
pop
jbe
push
jo
stos
aad
test
cmp
into
mov
cwtl
stos
mov
popa
mov
icebp
adc
pop
jl
push
mov
fstpl
push
xor
inc
xchg
nop
mov
dec
jmp
mov
rcll
pop
mov
lret
aas
jns
xor
add
movzwl
mov
xor
lea
add
jmp
cmp
fcmove
mov
ss
js
je
js
fwait
lock
sbb
push
or
xchg
xchg
into
inc
scas
adc
incl
xor
push
mov
mov
popf
scas
imul
in
sub
or
dec
cmpsb
das
fimull
or
ret
push
inc
pop
outsl
and
add
es
dec
sub
dec
adc
imul
mov
fsubl
add
jo
pusha
hlt
call
pop
adc
test
icebp
and
or
test
cmp
mov
loopne
in
pop
insb
mov
dec
rcll
movsb
mov
inc
add
arpl
out
or
fadds
push
push
add
or
loop
push
sub
cmp
fucom
inc
cmp
mov
mov
pop
dec
mov
pop
and
ret
and
fistps
or
add
mov
mov
pop
iret
xchg
stos
adc
sub
lea
push
xchg
and
xlat
je
add
scas
std
fwait
dec
js
aas
sbb
mov
cwtl
or
mov
inc
push
xlat
in
mov
call
int
fisttps
pushf
pop
rcll
jp
addl
ficompl
cmc
dec
sub
fistl
pop
ret
ss
aaa
nop
or
xor
popl
mov
loope
ret
out
fldl
push
sahf
pop
dec
jo
pop
insb
inc
fsincos
addb
cmpsb
cmc
ds
loop
pop
clc
scas
into
aad
xchg
ret
mov
cmpsl
sub
mov
jno
sbb
sbb
cli
fwait
xchg
dec
inc
xchg
call
sub
pop
fldl
inc
movsb
adc
sbb
jle
addr16
inc
lock
into
lret
fcompl
loopne
lahf
aas
mov
adc
test
pop
xor
sub
xchg
and
scas
out
ljmp
int3
loopne
sbb
rcrl
scas
test
inc
add
pop
mov
les
popa
lahf
push
inc
ds
fsub
dec
adc
lods
sub
aad
push
shrl
fiaddl
ljmp
cs
ret
mov
pusha
fs
sarb
inc
lret
orl
inc
dec
mov
mov
pop
or
clc
cwtl
add
in
scas
add
pop
jmp
mov
jecxz
xorb
das
scas
lds
test
test
divb
xor
pop
rcrb
mov
jl
aad
rorb
adc
xor
and
int3
push
ret
out
in
mov
jns
in
bnd
stos
push
jns
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
jmp
rol
leave
rcr
mov
repz
and
je
js
dec
xor
sbb
jmp
push
test
call
mov
stos
mov
cmovnp
fwait
mov
popf
add
pop
icebp
test
cld
les
out
stc
xor
mov
lahf
cwtl
cli
dec
cmp
push
aas
ud2
dec
inc
jmp
lds
and
jne
adc
das
insl
or
sub
inc
mov
cmp
push
cs
test
pop
call
mov
scas
leave
xchg
or
fmulp
pop
stos
adc
and
fiadds
fsubrl
in
add
inc
adc
push
mov
aas
add
dec
dec
mov
roll
stos
jns
or
mov
negl
push
mov
repnz
enter
sub
adc
pop
dec
and
xlat
pop
pusha
mov
dec
jnp
rcl
mov
mov
mov
lds
mov
jl
or
popf
mov
xor
subb
mov
movsl
jge
sbb
mov
mov
shr
mov
xor
mov
cltd
adc
inc
mov
das
out
movsl
in
movsb
sbb
jbe
dec
insl
aam
rol
fists
sbb
dec
or
stos
pop
push
jns
mov
or
stc
ja
lea
dec
add
pop
inc
sbb
andl
inc
sbb
cmp
push
into
mov
in
lods
movsl
hlt
pop
jnp
fldt
xchg
sub
addr16
js
outsb
inc
out
movsb
pop
dec
jmp
les
lea
nop
loopne
inc
mov
add
into
inc
subb
xchg
xchg
loopne
or
jnp
cwtl
sub
and
call
inc
jae
cmc
scas
push
lds
adcl
jne
adc
jnp
fisttpll
mov
push
fdiv
cwtl
cmp
aad
out
or
push
inc
cmp
dec
push
jne
ljmp
cld
imul
mov
data16
inc
fnstcw
inc
mov
cmp
pop
add
push
insb
mov
cld
sub
pusha
pop
enter
jne
in
xchg
mov
jg
mov
pushl
arpl
xchg
aas
cwtl
xlat
add
int
pop
jecxz
in
mov
test
call
xor
iret
fisubs
hlt
cld
or
mov
mov
mov
fdivrp
push
nop
addl
cmp
repz
jb
loopw
pop
adc
inc
pusha
sub
in
add
pop
addr16
in
loop
jge
sub
cmp
cmp
mov
jecxz
jno
scas
inc
in
sti
sbb
cmc
xor
cmp
adc
add
rol
ror
aad
xchg
mov
aad
jbe
je
mov
js
lods
mov
ss
xor
out
gs
dec
xlat
inc
add
scas
push
xor
push
sbb
out
cmpl
xor
cmp
sub
je
mov
adc
lret
inc
data16
insl
pop
cmp
jbe
xchg
jge
xchg
sarb
jns
mov
jle
dec
and
pop
ret
popf
aam
lods
addr16
mov
sarl
push
call
xlat
cmp
pusha
sbb
fisttpl
xchg
rorl
and
pop
lcall
dec
push
push
pop
push
loope
pop
out
xchg
pushf
or
sub
arpl
xor
sbb
repz
pop
sub
insb
inc
cmp
pop
shlb
lods
lea
inc
ss
test
cmpsb
sbb
nop
xchg
adc
dec
dec
push
cmp
fstpt
arpl
push
add
sub
test
inc
fisubrs
jbe
outsl
xchg
mulb
or
sbb
mov
cmpsb
cltd
add
sbb
out
mov
dec
fnstenv
xchg
mov
pop
aam
xor
es
dec
std
stos
pushf
push
into
jnp
pusha
ret
mov
ljmp
daa
push
cmp
mulb
int
push
int3
shll
cli
mov
sub
sti
jae
in
and
jecxz
cmpsb
inc
insl
jno
ss
js
movd
mov
jp
cli
or
fistl
movsb
leave
sti
inc
inc
movsl
adc
mov
xchg
fwait
xchg
out
insb
mov
xchg
mov
jg
push
push
mov
fidivrs
xor
roll
add
add
fldcw
fidivrl
int
movsl
test
es
scas
inc
mov
sub
xchg
add
divl
ds
sbb
xchg
sbb
popa
sub
or
xor
jne
sbb
sbb
ret
in
cmp
dec
fadds
mov
mov
sar
aaa
movsl
push
rcll
hlt
or
pop
mov
aad
fildll
cltd
f2xm1
push
rcrb
std
in
pop
jns
pop
mov
scas
push
dec
mov
inc
xchg
aad
fistps
inc
dec
mov
inc
add
mov
jecxz
outsb
jp
or
mov
sbb
fwait
xchg
or
mov
push
adc
mov
dec
cli
out
sar
aad
cwtl
rorb
stos
adc
mov
js
shll
cltd
adc
jp
sbbl
lods
xchg
xlat
fs
lcall
lods
jle
mov
sub
pop
inc
jle
jo
inc
fnstenv
push
mov
mov
enter
adc
mov
out
mov
jmp
push
mov
sub
sbbl
mov
xorl
jmp
ror
mov
fcmovbe
push
aad
xor
cmpsl
js
xor
xor
pop
mov
ja
adc
push
inc
les
ja
shrb
fwait
dec
test
jnp
popaw
cmp
cmp
mov
xor
mov
inc
mov
mov
test
mov
movsb
fstl
xchg
test
scas
inc
mov
pusha
pop
xchg
xor
aam
int3
stc
inc
aam
jo
adc
cmpsb
sub
mov
or
jb
insl
lea
adc
es
add
mov
pusha
pusha
mov
pop
pop
mov
add
fistl
popf
icebp
adc
sbb
or
mov
sub
mov
out
sahf
cmpsb
jg
test
mov
icebp
das
stc
test
jne
add
mov
rcrb
in
add
push
or
and
mov
sbbl
ds
dec
test
sbb
sbb
das
pop
fcmovnb
pop
int3
push
icebp
mov
mov
repnz
jecxz
das
sub
xchg
sti
ljmp
test
das
daa
adc
iret
push
fnsave
bswap
inc
rclb
mov
inc
ljmp
cmc
stc
ds
mov
mov
call
mov
div
shrb
sbbl
adc
jb
inc
xorl
insl
ficomps
sub
pusha
lret
cmp
push
pusha
add
pop
insl
sbb
mov
test
sbb
popf
iret
lahf
negl
mov
xchg
or
sti
push
inc
inc
rcll
pop
cltd
push
iret
push
pop
cmp
and
gs
ret
aam
outsl
fimuls
test
js
dec
mov
idiv
mov
aas
shlb
dec
stc
pop
mov
loope
xchg
iret
lods
fiaddl
sub
pop
jnp
push
out
jnp
pop
add
mov
cmp
jae
cmp
mov
movsl
in
repnz
mov
cmp
enter
outsb
mov
in
rcr
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
movzwl
xor
mov
xor
or
mov
adcl
add
subl
push
mov
adcl
mov
negl
xor
jmp
int
iret
lret
and
push
pusha
fsubl
mov
movsl
js
xor
jle
adc
jbe
xchg
or
inc
mov
dec
fs
movsb
mov
cmpsl
fidivl
mov
pop
scas
push
dec
sub
cmpsb
mov
push
inc
dec
adcb
das
or
inc
xchg
mov
add
lret
mov
cmp
push
lods
mov
test
leave
or
push
push
repnz
mov
lret
addr16
push
mov
push
mov
aam
mov
pusha
ds
sahf
or
das
sub
bound
mov
sbb
ret
js
movsb
xchg
xchg
das
enter
test
mov
ds
pop
xchg
mov
clc
adc
imul
sahf
xchg
xor
or
mov
inc
xchg
lods
inc
bound
test
mov
inc
dec
ljmp
push
or
sub
jmp
xor
adc
dec
popa
mov
push
je
fimuls
lret
sbb
cmpl
pop
mov
iret
jle
mov
ds
outsb
loopne
mov
xlat
jecxz
push
insb
mov
push
inc
push
add
mov
and
scas
into
gs
insb
ret
das
fisttps
ret
xor
xchg
sbb
and
addr16
or
xor
sti
cwtl
loopne
mov
mov
cltd
push
ss
inc
stos
mov
enter
mov
pop
mov
movsl
adc
out
jns
and
mov
clc
rcr
sub
sbb
cmp
aaa
lods
or
int3
jle
xor
mov
ljmp
xlat
or
mov
mov
sub
iret
xchg
add
mov
mov
and
xchg
sub
pop
pop
movsl
imulb
outsb
jnp
xchg
out
gs
sub
lret
rolb
xchg
jbe
mov
outsb
mov
mov
xor
pop
add
hlt
clc
test
xchg
inc
add
sti
jmp
cmp
jne
mov
mov
mov
mov
mov
movl
mov
mov
movl
jmp
movl
jmp
leave
ret
enter
fld
int
fdiv
jo
push
sbb
js
sbb
out
js
enter
mov
pop
adc
jmp
fxch
cmp
hlt
inc
mov
ret
lock
lds
inc
adc
mov
filds
aaa
das
aaa
jg
sbb
ror
mov
xor
je
cmpsb
lock
or
cmpsl
fstpl
jmp
sub
mov
inc
or
xchg
pop
push
inc
jg
aam
andl
das
cmp
dec
ja
mov
sti
jmp
mov
pop
jmp
lock
cwtl
push
and
push
and
or
lods
xchg
or
fisubs
sub
popf
loop
mov
insl
cmpsb
loopne
xchg
adc
mov
jmp
enter
rcll
xor
fsubs
pop
stos
and
mov
or
data16
int
and
pop
outsb
pop
stc
sqrtps
orl
clc
mov
dec
les
jb
stos
mov
cwtl
jle
jg
or
and
inc
sub
mov
addr16
jns
loop
cs
pop
cli
ret
fisttpll
aam
inc
jns
cmpsb
pop
push
pop
stos
jg
sbb
out
xorl
aas
cmpsb
mov
push
adc
cs
or
xor
xchg
xor
xchg
addr16
add
out
xchg
pop
adc
pop
inc
sbb
test
std
jne
mov
mov
movntps
mov
mov
pop
inc
jmp
js
stos
scas
movups
push
xchg
cmp
lods
outsb
jmp
aaa
insl
nop
xchg
add
or
lock
scas
add
pushf
mov
test
popf
addl
xchg
addr16
test
adc
in
out
push
loop
pop
lret
lock
or
push
and
xor
aaa
xchg
repnz
mov
mov
sbb
mov
pop
neg
fs
in
cmp
jge
and
or
push
rcrb
xor
shrl
movsb
bound
xchg
andb
or
cmp
cmp
cmp
cmp
movl
jne
and
jmp
int
into
aad
lea
jne
pop
test
js
pop
fistps
xor
mov
orl
mov
flds
mov
push
dec
adc
stos
mov
cmc
aaa
and
inc
inc
push
and
mov
shl
push
rcrl
or
xchg
inc
sub
xchg
mov
ja
jmp
mov
cmp
sub
gs
add
out
aaa
jno
cltd
mov
iret
push
jp
popf
mov
dec
jnp
push
xor
mov
in
in
inc
mov
dec
out
mov
pusha
adc
pushf
pop
lods
shlb
test
out
fcoms
outsl
cmp
es
iret
mov
pop
inc
in
cmpsb
in
add
sahf
mov
ffreep
and
arpl
iret
mov
cmpsl
movsb
xor
xchg
push
add
mov
arpl
stos
fmul
mov
jbe
movaps
push
les
xchg
xor
daa
rdpmc
jle
inc
insb
lds
sub
and
divb
ret
sbb
mov
xchg
fcmovnb
sub
sbb
pop
inc
push
and
pop
lock
loop
scas
xchg
lods
aam
jbe
sbb
xor
mov
stc
add
ficoms
loopne
hlt
repz
mov
fstl
or
fxch
xchg
xchg
stos
sbb
sti
push
inc
xchg
sti
sahf
insl
fmulp
cmp
scas
jmp
loope
es
fildll
cmp
das
scas
mov
insb
cld
pop
mov
insl
pop
and
push
inc
sub
insb
adc
or
or
iret
xor
gs
pushf
and
jecxz
into
mov
mov
mov
cmc
bound
push
test
push
aaa
mov
adc
lret
pop
jecxz
ret
lret
cmp
lock
mov
mov
add
rclb
or
or
aam
sub
lods
es
jmp
jae
imul
in
xchg
insb
mov
inc
sarb
test
in
mov
dec
cmpsb
lods
mov
ret
bound
jb
fdivl
add
sbb
mov
mov
xorl
sub
orl
push
adcl
mov
jmp
enter
ret
push
in
pop
dec
pop
in
pop
push
scas
js
xor
push
inc
cld
and
mov
mov
stc
lods
nop
rcl
fimuls
and
pop
les
fadds
mov
mov
movsl
sarb
pop
ret
or
mov
pop
into
pop
jp
jns
sbbb
mov
sub
outsl
cmp
sub
mov
sbb
mov
dec
cli
scas
push
push
repz
fcoms
pop
push
dec
mov
jp
mov
addb
cs
fstpt
les
ret
jecxz
pop
sbb
mov
gs
repz
outsb
dec
bound
push
or
xor
xchg
sbb
lcall
insb
dec
clc
cmp
test
cmp
pop
pop
out
mov
adc
stos
jl
shrb
insl
ret
push
mov
cwtl
push
jbe
cli
mov
pop
xchg
pop
cmp
negb
rcrl
jns
dec
stc
scas
jg
sub
cli
cli
insb
test
inc
in
push
js
loope
dec
out
mov
mov
xor
pop
xchg
xchg
lods
imul
into
sub
movsl
popa
test
dec
dec
call
out
mov
jno
and
push
sar
dec
mov
ret
mov
sbb
xchg
xchg
cmp
and
pop
loope
pop
xor
mov
sbb
adc
test
daa
cmp
pop
jmp
dec
add
gs
adc
out
cld
nop
pop
xchg
mov
pop
xchg
jecxz
ret
mov
fwait
or
dec
jbe
negb
xchg
cmp
jge
mov
mov
cmpb
das
jmp
popa
mul
stos
pushf
mov
call
test
loopne
arpl
pop
jecxz
aas
ljmp
dec
iret
hlt
or
imul
mov
inc
fcoms
xor
imul
int3
cmp
loop
pusha
ror
jg
idivl
dec
fsts
mov
or
lods
negb
jno
sbb
pop
mov
add
addl
push
adcl
call
movl
incl
cmpl
movl
jb
movl
jmp
cmp
jne
sbb
movl
mov
mov
mov
mov
movzwl
and
mov
adcl
xor
jmp
rol
leave
leave
leave
leave
rcrb
inc
or
cmp
lods
js
xor
sub
sbb
mov
sub
or
add
pop
cmpsb
mov
iret
rdmsr
das
cmp
and
popa
pusha
xor
cmpsl
fstpt
shlb
lock
cmpsl
fmuls
jle
das
xor
sahf
gs
aas
xchg
in
test
adc
inc
in
daa
xchg
jae
bound
in
push
loopne
push
ss
mov
jg
xchg
mov
scas
popf
jl
cmp
or
or
pusha
push
hlt
bound
pop
shl
pop
dec
insl
pop
icebp
dec
dec
int
bound
aad
mov
loope
pop
sahf
mov
inc
scas
ficoms
aaa
movsl
pop
jbe
mov
dec
mov
subl
ja
sub
mov
cmp
lret
std
leave
out
aas
jns
add
adc
mov
inc
add
repz
aam
cmp
arpl
insl
out
xchg
lret
lahf
mov
popf
jp
jge
cmp
pop
push
sarl
stc
sbb
outsb
out
sbb
int
mov
push
andl
pop
mov
xchg
rcl
ljmp
pop
xlat
sbb
shl
ljmp
or
popf
imul
es
fs
addr16
stc
jae
jo
aam
cmpsb
cmp
push
inc
push
and
add
push
xchg
pop
add
lds
push
neg
out
mov
iret
ss
sbb
pop
ret
push
mov
cli
inc
sbbl
pop
iret
mov
test
mov
inc
mov
hlt
xchg
sub
and
xchg
arpl
cmp
mov
add
out
and
mov
pop
cmp
movb
notl
xlat
lds
or
mov
in
notl
es
push
in
mov
ficoml
push
stos
clc
mov
push
call
mov
inc
sbb
add
sbb
xchg
arpl
push
das
push
adc
push
xor
imul
das
add
mov
notl
lea
mov
mov
xor
add
mov
lea
push
mov
jmp
ds
roll
jmp
fmull
jle
js
sub
mov
mov
or
mov
loop
cmp
mov
push
enter
mov
stos
jns
sahf
clc
arpl
imul
pop
lock
in
bound
sbb
dec
aas
aad
dec
popa
xchg
popf
inc
xchg
mov
fdivs
lods
push
mov
dec
or
mov
nop
cmpsl
fs
pop
dec
jnp
jmp
xor
sbb
scas
cli
jecxz
inc
lcall
lea
imul
out
clc
lret
pop
ret
mov
or
jbe
lea
jnp
jge
dec
adc
mov
mov
ss
ficomps
icebp
xor
loop
bound
ret
stc
jbe
arpl
js
sahf
adc
lock
inc
xor
test
int
fcmovb
sbb
testl
testl
cli
adc
lahf
int3
mov
je
aas
sarl
xchg
xchg
xchg
ret
push
and
mov
inc
push
into
xlat
shl
inc
cmc
add
aas
lods
xchg
adc
fidivl
mov
and
aam
out
loopne
mov
or
pop
or
inc
jl
cmpsb
adc
lret
xchg
sub
outsb
push
insl
cli
push
adc
pushf
iret
push
inc
jae
fmul
cli
pop
bnd
rcrb
dec
sbb
aaa
xchg
add
je
cmp
pop
push
scas
fwait
outsb
pop
movsl
dec
int3
fmuls
pop
and
mov
dec
dec
popf
cld
ds
mov
and
stos
mov
mov
in
sub
inc
jmp
std
cmc
sbb
xchg
test
rcl
mov
rcr
ror
dec
xchg
sub
lret
in
jns
mov
xchg
xchg
call
daa
repz
add
sub
mov
inc
pushf
sbb
cmp
xchg
pop
rol
fidivl
data16
xor
cs
vcvtps2pd
ficompl
add
jmp
fcom
lds
shr
movb
jg
xor
ss
movb
push
jmp
xlat
lret
fcmovu
aas
cmp
push
push
callw
mov
js
jle
js
sbb
push
sbb
mov
cmp
cmpsb
ds
push
or
cs
mov
popa
push
xor
faddp
sbb
in
bound
pop
bound
push
or
int3
fisubrl
and
xor
adc
mov
sbb
xorb
inc
dec
xchg
inc
push
mov
das
es
sbbl
jae
cmp
ja
xchg
fs
clc
sub
dec
pop
insl
mov
lret
jmp
jge
push
test
jnp
loopne
scas
subb
xor
arpl
stos
inc
sub
xchg
xchg
jp
add
in
cmp
leave
xor
inc
xor
ret
stos
cld
popl
dec
out
adc
and
push
lods
inc
xchg
xor
jle
mov
rcr
push
sarl
mov
add
ljmp
adc
jge
push
push
aad
xlat
mov
jno
sub
pushf
out
cld
fimuls
out
mov
outsl
mov
ret
add
idivb
pop
jns
dec
dec
cs
test
jnp
add
or
ss
mov
and
cmp
mov
or
xchg
inc
sbb
addr16
xchg
movsb
mov
rcll
stc
lret
pop
pop
pushf
jbe
and
sbb
incl
and
pop
mov
mov
sbb
stos
icebp
lcall
mov
int3
shlb
sbb
scas
push
mov
and
test
sbb
jge
cli
out
das
mov
mov
push
nop
movsl
clc
inc
fldenv
pop
popa
mov
sbb
cs
pop
js
add
dec
push
repz
pushf
jno
cmpsb
testl
fimull
fcompl
js
lea
cmp
cmp
inc
pop
or
mov
cmpb
rorl
out
cld
pusha
ret
push
int3
addl
rcl
ja
gs
hlt
jl
test
mov
jno
xorb
push
add
popf
inc
fcomps
call
iret
scas
popa
out
push
ffreep
ljmp
call
xchg
mov
push
pushl
call
jmp
cmp
jne
mov
jmp
sarl
ror
leave
dec
cmc
adc
ja
add
js
dec
mov
js
scas
push
cmp
in
fistpll
jle
fidivrs
int3
xchg
mov
pop
movsl
scas
push
ljmp
scas
mov
adc
mov
sub
rolb
int
pusha
xchg
add
dec
adc
add
and
jmp
push
xchg
pop
int3
mov
pusha
fsubl
imul
jne
insl
adcl
xor
add
jnp
or
mulb
jae
sahf
inc
push
or
sti
pop
xchg
cwtl
xchg
imul
pop
push
insl
into
in
cmpsl
insb
rol
shlb
out
lahf
pop
dec
hlt
aaa
sub
out
jne
adc
jnp
cld
jbe
sbb
mov
pop
adc
sub
ffree
cs
and
fwait
addb
sub
cmp
es
bound
push
sbbl
push
outsl
adc
or
adc
and
pop
sti
test
movb
pop
in
inc
lret
dec
fldt
dec
sbb
bnd
insl
add
mov
pop
lahf
cmp
cmp
or
addl
movsb
inc
cmp
sub
xor
rcrb
movsl
mov
rcrl
lock
inc
jg
aad
sarb
lcall
out
dec
andb
and
cmpsl
mov
stos
mov
sbb
pop
data16
jbe
pop
or
mov
cmc
xlat
fs
sbb
loopne
xchg
xorb
les
sahf
jno
jg
jns
mov
cs
cmp
dec
cmp
test
and
insb
es
inc
call
stc
daa
aas
adc
test
pusha
cwtl
leave
sub
mov
icebp
inc
dec
shll
jno
aad
repz
push
out
cmp
shrl
xchg
pop
rcll
and
je
mov
in
out
fistps
inc
cmp
out
jl
mov
sbb
cmp
mov
jmp
andb
jmp
out
xchg
movsb
mov
add
mov
mov
fistpl
inc
add
in
inc
mov
ret
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
jmp
leave
fcmovbe
sar
rcrl
cmp
js
xor
push
aad
daa
pop
cmp
fwait
repz
xchg
rdpmc
loopne
jecxz
pushf
and
sub
jbe
mov
mov
leave
xchg
ret
popa
pop
insl
or
stos
int
lock
fistpl
sub
or
insl
push
lahf
jae
cmc
sti
jg
mov
pusha
cmpb
jle
mov
int3
daa
xchg
addr16
lret
outsb
aas
lahf
mov
leave
rorl
and
dec
enter
xchg
mov
aaa
outsb
bound
pusha
inc
add
pop
scas
imulb
add
or
pop
cld
pop
push
test
jo
jns
cld
xchg
xor
inc
push
or
adc
ss
sub
add
mov
dec
sbb
mov
fistpl
shll
clc
mov
data16
cmpl
fadds
call
jl
or
cmp
cs
ret
mov
pop
data16
repnz
rorl
dec
push
dec
xor
cmp
push
js
sub
cmpsb
jle
scas
fs
mov
stos
push
add
nop
cwtl
mov
xor
or
push
and
out
fs
orb
test
push
fdivrs
xlat
dec
in
adcl
sub
cmp
cmp
mov
iret
outsl
in
mov
jb
and
cld
es
xor
inc
pop
ret
lds
xchg
fldcw
das
jne
push
fnstsw
aam
jl
mov
cmp
push
jbe
cwtl
and
mov
les
dec
sbb
pop
push
iret
mov
xchg
cltd
adc
ror
and
jae
notl
rcrl
leave
push
dec
push
jb
push
xchg
ss
pop
cmpsl
repnz
neg
scas
mov
mov
in
aam
or
inc
xchg
or
adc
iret
adcb
out
or
repnz
add
cld
mov
rcrb
ficompl
dec
test
adc
or
in
lea
dec
pop
jno
mov
std
xchg
bound
inc
or
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
sub
push
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
movl
jmp
cmp
aad
xlat
jecxz
ja
or
push
stc
hlt
mov
js
lret
ret
add
ret
popf
pop
test
inc
dec
and
jecxz
inc
xchg
pop
or
inc
jmp
pop
aas
ret
cwtl
cmp
mov
imul
insl
sub
or
push
cs
xchg
sbb
push
imul
je
pop
sti
or
sub
rcr
mov
add
cmp
test
cmp
cmp
adc
es
or
bswap
jb
outsl
lahf
jb
gs
ljmp
shll
test
gs
nop
sub
pusha
cli
lods
cmp
popf
and
and
bnd
mov
icebp
pop
and
cmp
xchg
sub
mov
gs
sbb
insb
lds
rol
mov
xor
stos
add
inc
scas
adc
mov
push
add
aad
mov
push
mov
dec
outsl
imul
outsl
push
xchg
jo
les
xchg
pop
xchg
stc
jg
or
fistpl
push
mov
sbb
in
dec
adc
and
push
mov
test
sub
sbb
stc
mov
sub
int
mov
push
dec
mov
outsb
mov
outsl
ficoms
shl
lea
dec
add
sbb
pop
jo
clc
pop
sub
lret
sub
cwtl
cmpsb
sbb
int
scas
sar
sub
repnz
movsb
iret
sub
test
jo
insb
rcl
js
repnz
dec
xlat
mov
xor
fcoml
mov
fdivrs
insb
dec
and
mov
lret
aaa
rcl
add
ja
jb
cmp
cmp
sub
cld
cmc
pop
jle
and
popa
pop
mov
icebp
mov
arpl
ret
mov
pop
loope
sahf
mov
clc
xchg
call
sub
fwait
stos
sti
or
insl
xor
or
push
pop
arpl
push
mov
jno
dec
popf
pushf
cld
add
xlat
pop
push
sbb
sbb
loop
imul
dec
mov
xchg
pop
andb
pushw
fdivrs
mov
or
mov
mov
xor
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
add
mov
xor
jmp
lret
ror
leave
lret
push
xchg
xchg
inc
jmp
in
js
fdivl
les
js
jle
sub
cld
xor
insb
mov
scas
arpl
pop
or
lcallw
data16
jl
jge
sub
arpl
adcl
int
dec
aas
jae
xchg
adc
fwait
gs
push
out
fidivrl
mov
sub
pop
negl
inc
inc
cmpsb
xchg
rorb
in
shll
movsl
dec
or
in
fiaddl
or
jle
adc
mov
and
jmp
sub
movsb
lea
loope
push
jne
int3
sbb
cmp
dec
push
mov
and
adc
popa
lods
bound
adc
inc
repnz
jb
jg
ds
stos
ljmp
daa
xor
daa
xchg
cmp
scas
pop
mov
mov
inc
enter
int
mov
dec
jl
sbb
dec
aad
je
xor
xor
xchg
cmc
call
outsl
aad
roll
ljmp
addl
cli
cld
adc
push
push
add
add
clc
pop
lock
les
fwait
clc
sub
sar
xchg
roll
inc
ja
push
iret
lds
fists
out
jle
flds
ret
cli
push
test
adc
xchg
ss
and
sbb
pop
or
loopne
dec
push
mov
sbb
mov
scas
add
jecxz
mov
jmp
arpl
jnp
cmp
aas
jbe
in
or
dec
out
ds
mov
sub
aam
sahf
lock
push
test
add
cmp
xor
cmpsb
shrl
shlb
imul
pop
fsubrl
adc
jae
out
push
lods
jmp
dec
xchg
daa
lcall
mov
lods
rcll
jle
nop
push
or
xchg
mov
mov
inc
pop
shll
lahf
mov
loopne
pushf
packssdw
jecxz
mov
sub
fwait
pop
fidivrs
imul
popl
mov
and
fwait
inc
scas
enter
in
pop
cmp
in
dec
into
xchg
cmc
mov
dec
je
push
mov
or
xor
ljmp
clc
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
andl
xor
jmp
enter
fcmovnb
aad
push
and
cmp
fs
mov
mov
js
and
or
das
or
int
add
cmp
add
lods
xchg
sub
lcall
inc
cwtl
cmp
jl
mov
rorl
icebp
add
popa
push
js
imul
js
push
mov
adc
aam
push
xor
in
ficomps
pop
sbb
in
aas
adc
xor
cmp
pop
cmp
dec
dec
scas
add
int
xchg
mov
lahf
push
outsb
jno
adc
mov
fucomip
and
lds
testb
mov
lcall
mov
inc
adc
sub
sbb
repnz
xor
xor
sub
mov
nop
xchg
stos
push
inc
jbe
cmc
mov
inc
ret
mov
mov
loope
icebp
push
dec
pop
es
jl
nop
fistpl
scas
inc
icebp
and
adc
xchg
sub
pop
mov
test
mov
inc
outsl
imull
inc
adc
jns
sbb
jne
cld
lcall
and
adc
xor
xor
test
fldt
xchg
bnd
pop
je
xchg
xchg
xor
jecxz
pushf
inc
add
fwait
sbb
mov
movsb
and
dec
int
push
aaa
repz
cmp
sbb
out
mov
push
mov
push
mov
mov
addr16
lock
adc
insb
push
repnz
mov
mov
divl
aam
jo
pop
inc
nop
mov
setno
lret
loopne
jmp
fsubl
and
xchg
cmp
rclb
adc
je
sub
int3
mov
jbe
dec
xor
push
std
nop
pop
loopne
mull
and
mov
dec
bound
lock
cwtl
int3
rclb
sub
cltd
cmp
xor
mov
ja
gs
movsl
mov
mov
lods
mov
xor
loopne
scas
enter
imul
or
outsl
gs
jbe
in
cmpsb
leave
cs
popa
sub
pop
js
rcrl
or
mov
or
repnz
inc
add
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
mov
xor
movl
or
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
and
movl
sub
movl
and
movl
orl
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
pushl
call
jmp
movl
mov
xor
movl
cmpl
je
cmpl
jne
push
push
push
push
call
xor
or
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
jmp
decl
mov
movl
jmp
ret
sarl
rcll
pop
mov
jle
js
adc
lds
ja
ret
mov
or
loop
insb
jg
jle
add
out
icebp
outsl
std
andl
sahf
addr16
add
xor
dec
sahf
in
mov
dec
inc
mov
aas
out
addb
test
sbb
ret
xor
adc
jno
fistps
scas
test
and
jo
xor
add
mov
ja
test
in
dec
int
push
xor
popa
mov
push
jo
sbb
dec
fsubs
xchg
xchg
sbb
jae
lret
inc
or
mov
xor
mov
dec
stos
mov
cmp
inc
aad
sti
add
push
cmp
insb
stos
fsubrs
mov
ds
mov
into
rcrb
fdivrl
cli
mov
call
rcll
xchg
adc
or
xor
icebp
aad
in
push
add
adc
insb
jg
or
out
insb
out
sbb
dec
aaa
pop
jl
dec
push
gs
xchg
xchg
sahf
mov
test
in
aaa
and
mov
pop
in
orb
jno
lret
mov
bound
es
cld
sub
enter
xchg
and
ds
fstl
jg
pop
xchg
jecxz
cmpsl
std
bnd
in
pop
dec
pushf
nop
ja
lret
orb
out
cmpsl
in
xorb
out
pop
subl
imul
jmp
or
aam
vmovddup
xchg
xor
mov
cmp
lock
out
push
mov
push
pop
xlat
test
cmp
xchg
leave
scas
hlt
bnd
mov
or
push
jno
orl
roll
mov
sbb
lea
xor
dec
jp
jecxz
out
pop
sbb
enter
jo
push
ja
clc
cwtl
cli
in
push
shlb
mov
fildll
mov
imul
andb
add
xor
mov
inc
ss
push
mov
rcrb
call
add
cmp
movl
jmp
ret
ret
lret
test
sahf
and
js
jle
js
push
pop
in
data16
repnz
gs
cmp
cmp
sub
sbbl
mov
mov
cmp
mov
sub
movsb
mov
aad
jecxz
or
sub
lcall
jp
aam
cmpl
outsb
sti
loop
sbb
jge
adc
add
test
mov
adc
inc
or
cli
leave
mov
sub
fisubl
jle
push
aaa
adc
fs
jl
fs
aam
fdivrl
cmc
sub
and
jg
adc
shrl
mov
dec
mov
ljmp
divl
pop
pusha
aaa
xchg
cmp
inc
test
enter
scas
cwtl
dec
sbb
repz
rcll
mull
imul
out
jge
jge
test
pop
pop
inc
pop
movsb
aaa
data16
mov
stos
and
add
fcoms
dec
std
jg
xchg
sub
inc
outsl
test
ds
scas
ror
dec
mov
inc
inc
lret
mov
repnz
mov
gs
lret
xor
inc
sbb
loopne
dec
insb
cmp
mov
inc
out
push
inc
sbb
pop
sbb
mov
aad
xchg
push
test
outsb
fs
sbb
inc
dec
in
xchg
push
xchg
clc
les
pushf
sub
add
xor
xchg
dec
adc
cld
and
xchg
mov
cwtl
in
push
loope
fnsave
and
orb
arpl
rorb
and
aas
je
jb
pop
loope
jg
imul
rep
push
fldcw
faddl
sbb
push
mov
aas
ret
jle
scas
cmpsl
mov
jle
mov
movsl
sub
pop
lods
leave
jp
imul
mov
in
and
adc
or
das
addr16
and
addl
add
stc
bnd
inc
pop
je
push
adc
leave
subb
push
mov
cli
ja
adc
popa
fs
jmp
gs
xchg
sbb
jno
std
insb
data16
dec
pop
or
sbb
push
test
jb
je
push
movl
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
jmp
cmp
fcmovnb
cmc
into
inc
jge
outsb
mov
in
js
cmc
inc
jae
mov
push
repz
push
push
imul
mov
nop
sti
mov
icebp
mov
imul
rorl
test
daa
jo
daa
dec
sub
call
sti
mov
lods
xchg
cld
sbb
mov
mov
test
dec
loope,pt
add
enter
lret
jns
movsl
inc
js
fwait
and
push
repnz
xor
pop
insl
data16
jns
scas
cmp
push
notl
mov
loop
and
push
jns
or
dec
xor
sub
and
mov
push
inc
mov
push
orb
int
xchg
cli
insb
mov
xchg
add
and
popa
pushf
shlb
lret
call
inc
in
dec
in
imul
scas
decl
in
in
push
pop
subb
mov
ss
aas
push
pop
mov
call
cld
je
decb
and
lods
mov
hlt
push
or
push
sbbl
je
sbb
xor
out
jg
xor
cmc
popa
sub
stos
inc
inc
scas
mov
in
aad
add
das
neg
push
add
push
std
fldt
xchg
movsl
push
mov
jg
push
ja
ficomps
in
mov
jnp
test
fldl2e
dec
push
imul
subb
loopne
imul
pop
test
fimull
int
pop
xchg
jnp
lock
in
xchg
ficoml
sub
add
outsb
push
push
push
das
outsb
repnz
xor
dec
cmp
out
and
js
out
inc
xchg
add
dec
lret
mov
ds
das
sub
lds
cmp
mov
sub
mov
cmpsb
and
cmp
mov
and
fsubrs
mov
out
sbb
jmp
pop
push
push
lods
mov
jl
ret
mov
dec
xlat
pop
bnd
adc
mov
push
pop
push
pushf
fwait
and
add
mov
cmpsb
in
js
ja
lea
imul
inc
push
mov
pop
jb
xorl
leave
add
int
mov
popa
imul
and
jmp
aaa
xchg
or
sbb
lock
sub
mov
xor
add
cmp
jb
mov
mov
xor
xor
add
add
imul
mov
jmp
mov
leave
dec
mov
std
inc
loopne
addr16
js
in
js
nop
stc
adcl
js
mov
or
jl
leave
jp
push
sub
push
fwait
outsl
daa
ss
repnz
jmp
outsb
push
pop
lcall
ja
mov
mov
icebp
dec
loopne
sahf
add
mov
sbb
cmc
mov
out
and
sarb
pop
mov
out
outsb
push
mov
or
daa
and
data16
outsb
stc
jnp
sbb
sbb
sub
and
cmc
inc
rcll
test
mov
sbb
xchg
in
adc
mov
pop
ljmp
sbb
subb
adc
mov
les
xchg
fs
or
xchg
ja
sbb
ds
cbtw
loopne
int
xlat
pop
test
or
inc
sbb
push
push
push
pusha
daa
xor
sahf
jmp
xchg
cmpsl
push
mov
rclb
inc
es
out
nop
das
outsb
test
mov
pop
cmp
ret
test
jg
ja
mov
pop
call
jecxz
sub
jnp
push
sub
dec
scas
jb
push
fisubl
lds
repz
movsl
fstps
repz
push
ljmp
decl
testl
cmc
xor
dec
stos
xchg
loop
sub
jl
in
insl
es
sbbb
out
ja
in
push
xor
cmp
push
jae
mov
inc
repnz
adc
cmc
adc
dec
xor
lret
cwtl
int3
adc
adc
pushf
sub
cltd
cmpsl
sbb
xchg
shlb
inc
xchg
addr16
icebp
andb
bound
cs
adc
idivb
pop
sbb
cmp
or
int
mov
and
sub
xchg
sub
and
xchg
jp
popf
or
add
hlt
ljmpw
out
xor
push
mov
sti
inc
or
inc
add
jmp
mov
mov
pop
fistpl
sbb
lds
adcb
scas
xchg
fcoms
mov
jp
pop
clc
adc
mov
lods
jecxz
mov
mov
pop
xchg
popa
stc
rcrl
lock
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
jmp
sarl
int
ret
xchg
daa
nop
mov
js
in
js
sarb
mov
pop
clc
into
jnp
out
pop
dec
setl
data16
dec
rclb
jns
in
sub
mov
ss
das
jnp
xor
xor
int3
orb
and
cmc
jp
rclb
mov
inc
stos
imul
sbb
and
rcl
pop
cmp
and
and
stc
outsl
inc
imul
adc
dec
inc
movsb
int3
sbb
clc
add
adc
and
add
or
jbe
cmp
inc
and
gs
cli
sbb
cmc
adc
xchg
fwait
and
xchg
sub
int
or
inc
adc
mov
fs
outsl
ljmp
mov
jmp
pop
cmp
daa
fisubrs
jle
aas
push
sbb
fistl
shlb
add
lret
adc
inc
mov
test
in
nop
pushf
or
in
test
sbb
xchg
jns
popf
mov
adc
cltd
out
ds
mov
push
push
dec
inc
ja
mov
xchg
clc
stos
push
into
mov
mov
mov
dec
sub
sub
push
sbb
mov
hlt
xchg
pop
pop
sahf
std
out
scas
xchg
cwtl
adc
xchg
xchg
sbb
bound
popf
xor
jg
sub
pop
cmc
xor
lods
adc
mull
sub
cltd
ret
and
ret
pop
pop
cmp
xor
loope
jno
dec
movsl
and
sbb
movsl
insb
pushf
leave
pop
fcoml
inc
xchg
sbb
addr16
cli
fcomip
push
dec
mov
inc
inc
xor
cmp
pop
fwait
add
add
dec
lret
rol
inc
add
mov
das
leave
pop
inc
mov
xor
and
mov
adc
pop
rorb
test
adc
dec
push
cmp
cmp
icebp
sub
push
jg
xor
cmp
add
mov
adc
daa
aad
subl
loopne
jae
iret
pcmpgtb
mov
out
sub
mov
dec
testl
in
dec
sbb
sub
cli
addb
outsb
nop
clc
and
or
shr
addl
add
int
into
xchg
jle
loopne
inc
fimuls
js
jle
js
pop
sbb
pop
in
pop
icebp
lds
test
out
out
mov
call
xchg
fldz
xchg
shlb
push
cmpsl
push
mov
pop
mov
mov
int3
mov
cmp
mov
mov
das
ror
in
mov
aam
inc
or
loopne
fdivrp
inc
or
inc
loop
sbb
out
or
jb
xor
fwait
int
dec
idiv
mov
popa
lcall
xor
icebp
mov
rorb
or
xchg
sub
pop
mov
mov
inc
adc
jmp
push
adcb
xor
icebp
xor
fiadds
fstl
inc
aas
mov
add
pop
jg
cmp
lcall
add
outsl
cltd
les
mov
jp
xchg
adc
adc
fsubrs
xor
xor
cmp
ljmp
dec
fldl
jecxz
nop
sub
or
jmp
push
push
lret
sbb
pop
out
add
cmp
icebp
xchg
pop
fwait
and
pop
ss
and
add
push
insb
not
sub
aam
inc
mov
cmp
mov
insl
dec
mov
out
mov
idiv
into
into
mov
jge
jnp
cltd
jb
icebp
mov
andb
inc
mov
arpl
cmp
mov
lock
add
mov
inc
imul
cmc
jmp
leave
push
fwait
lcall
orb
loope
inc
test
scas
xchg
cmp
xchg
test
pop
pop
stos
xchg
mov
mov
gs
shrl
mov
or
bound
imulb
push
xor
leave
fildl
and
inc
pop
movsb
pop
aaa
mov
aas
lcall
shl
or
add
cmp
and
call
mov
mov
and
mov
xchg
cmp
fimull
sbb
insl
ret
sahf
je
jmp
jl
lea
mov
out
and
daa
and
insb
fdivs
cmp
xchg
lds
shl
test
fsubl
lea
fisttpll
jg
mov
imul
mov
mov
jmp
cmp
ret
fcmovnb
aad
pop
adc
dec
out
or
cmp
js
jle
js
sub
sub
cs
or
add
std
ja
or
inc
ja
sbb
sub
div
dec
mov
mov
and
add
lods
sbb
mov
negl
rcll
imul
xchg
in
mov
jmp
hlt
push
notl
jl
xor
mov
jae
pushf
pop
loop
cmp
add
hlt
aaa
sbb
in
inc
mov
cmp
xlat
adc
lock
sbb
add
push
ror
scas
js
je
lahf
insl
jge,pt
or
in
inc
fdivp
aad
or
pusha
sbb
add
outsb
cs
outsl
std
mov
xor
mov
dec
adc
ss
jne
add
inc
ljmp
mov
mov
lahf
dec
mov
shl
negl
and
cli
outsb
cmp
pop
movsb
insb
mov
lea
cli
ret
sti
fcomp
sub
xchg
mov
movsb
popf
imulb
testl
and
mov
cli
mov
ja
imul
cmp
push
sub
add
xor
inc
in
hlt
mov
adc
jle
je
aas
repnz
and
std
negb
pusha
cmp
iret
pop
pushf
xchg
or
jno
jecxz
or
sti
cmp
pop
pop
jmp
pop
in
popa
jno
push
mov
insl
jge
dec
and
adc
out
std
jp
enter
lahf
imul
repnz
mov
sub
fcompl
xchg
jbe
mov
pop
test
ret
sbb
loop
sbb
sti
mov
mov
ds
pop
add
push
fcoml
repnz
mov
jge
lret
cmpsb
xchg
scas
push
stos
mov
push
pop
add
lods
xor
imul
ret
out
mul
or
stc
stc
pop
mov
sub
mov
lret
stos
fwait
pop
test
or
and
lods
sub
cli
dec
jmp
jbe
push
sbb
ret
shl
in
and
add
add
xor
enter
stos
imul
in
pop
xor
jl
loope
lds
or
cmp
fistpll
fucompp
addl
add
ror
fcmovnbe
fld
ud0
pop
and
push
js
in
js
jecxz
jbe
push
inc
adc
push
sti
jecxz
mov
das
jo
sub
insl
into
movsb
dec
data16
jecxz
push
and
sbb
fsubr
mov
popf
ljmp
mov
cmp
pop
and
mov
inc
inc
cwtl
test
lock
insl
sbb
shr
push
test
das
inc
ret
cltd
rorl
sub
orb
stc
movb
aas
inc
mov
out
aam
fildl
es
aas
pop
shl
sti
pop
pop
mov
xor
je
clc
xorb
pop
mov
test
xor
mov
or
inc
push
loop
push
cmp
test
outsl
test
xor
mov
xchg
fnstsw
loope
gs
cmp
lret
mov
push
out
add
repnz
pop
and
inc
adc
pop
bnd
jo
or
mov
sub
or
xchg
xchg
dec
dec
jo
insl
mov
fidivl
lcall
daa
xchg
rorl
aas
cmp
sbb
sbb
cmp
repz
test
ficomps
xlat
dec
out
pop
clc
and
xor
lock
mov
inc
loopne
mov
sti
sub
push
fisubl
fisttps
add
leave
shll
inc
and
sub
les
sbb
sub
mov
mov
ja
push
mov
cmp
lcall
lock
mov
inc
ja
int
repz
lods
push
cmc
es
push
xchg
cld
test
mov
push
fdivrl
mov
sar
xchg
add
sub
sbb
sub
xor
lret
xchg
push
cltd
out
fisttpl
and
add
jmp
and
cs
jp
movsl
xlat
in
ret
adc
xlat
adc
sbb
repz
test
or
or
xor
sbb
rcrl
and
jmp
jno
push
jmp
push
lock
int3
mov
cmp
and
pop
adc
mov
mov
cld
sbbl
push
inc
rclb
aaa
shrb
mov
in
fs
ja
mov
jmp
mov
mov
xor
xor
jmp
aas
lret
iret
aad
jo
lods
test
push
js
in
js
es
int3
xor
pop
fsub
popa
test
mov
jecxz
leave
push
push
popa
inc
mov
cwtl
jp
test
jmp
sahf
clc
push
inc
cld
aad
xor
arpl
out
jmp
lea
hlt
xor
mov
pop
fldenv
xchg
out
jbe
and
mov
rorb
aas
das
sarb
call
movsb
out
test
xor
outsb
cmp
or
nop
push
mov
leave
push
mov
fsubs
mov
pop
test
lret
mov
and
pop
sub
push
adc
aad
aaa
push
sub
inc
aaa
inc
es
sub
dec
in
lods
imul
adc
fsubr
leave
fwait
sub
cli
fisubl
out
out
aaa
or
push
mov
xchg
jp
or
ds
push
les
xor
jle
xchg
and
jae
call
fldenv
cli
pop
mov
cli
jno
call
outsl
jb
ljmp
fmull
orl
cmp
mov
fnstcw
mov
leave
inc
mov
or
mov
adc
add
mov
push
pop
xchg
push
outsb
mov
pusha
popa
fstpt
mov
int3
fcmovnb
rorl
js
mov
mov
xchg
xchg
mov
jecxz
mov
orb
mov
dec
mov
js
xor
or
mov
adc
pusha
xchg
ds
rcrl
aad
or
jne
push
lock
add
loopne
outsl
jge
and
divl
mov
jle
jns
rorl
sti
cmp
or
lods
push
pop
int
pop
test
xchg
and
push
dec
nop
loopne
out
fsub
mov
sbb
mov
dec
test
xorl
mov
mov
xorb
add
mov
nop
xchg
pusha
std
int3
outsb
loopne
pop
sti
or
mov
xlat
jb
jmp
xor
ficoms
pushf
dec
sub
mov
jnp
and
shrl
scas
ret
fiaddl
stc
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
jmp
lds
ds
fxch
adc
add
stos
in
icebp
clc
push
js
in
js
sti
aam
jg
xor
int3
loop
xchg
stos
mov
lock
incl
xor
hlt
addr16
nop
faddl
mulb
ret
cmp
imul
xchg
jp
and
fildll
orb
aad
pop
xchg
mov
mov
or
sbb
adc
cwtl
mov
arpl
das
mov
jmp
mov
jg
mov
adc
insl
pop
jns
jae
fstpt
pop
fcmovnu
mov
cmp
js
pusha
push
or
fidivs
btc
adc
std
mov
out
movsb
xchg
jecxz
lds
mov
push
jns
inc
sahf
cmp
jbe
scas
adc
mov
push
out
sbb
fimull
popa
add
sbb
stos
movsb
add
xchg
xor
int3
mov
push
insl
repz
mov
jae
lock
push
pop
mov
pop
lds
cmp
fs
repz
add
xchg
test
loopne
xor
outsl
out
pop
iret
adc
push
ja
push
out
mov
test
pop
call
dec
les
xchg
jns
xorb
sahf
lods
std
loop
vpmaddwd
adc
and
or
cmp
and
mov
adc
ja
ss
inc
push
cwtl
scas
filds
fistl
jae
sbb
test
jnp
ret
push
je
hlt
mov
std
in
test
repz
mov
cmpsb
pop
and
fistps
jb
or
scas
lcall
fisubl
cwtl
rcl
xchg
fcomps
mov
xchg
mov
shrl
adc
test
jbe
jge
pop
xor
dec
jge
aad
and
jl
ja
sub
xchg
push
and
and
loop
xchg
add
sbb
xor
icebp
pop
adc
add
sub
outsl
cltd
push
stc
das
cmp
pop
jo
imul
and
xor
ds
in
daa
pop
pop
or
aaa
jp
jbe
xchg
add
jnp
push
cmp
test
dec
std
mov
fcompl
adc
jmp
int3
into
ror
rcl
into
jbe
inc
data16
gs
js
in
js
sub
mov
jnp
enter
and
sub
add
aam
pop
clc
add
dec
cltd
fnstenv
jecxz
dec
push
cmp
inc
sbb
dec
inc
cmovge
scas
push
ja
pop
pusha
fistpll
jle
push
enter
lods
or
lret
xor
add
mov
aas
mov
mov
pop
inc
ljmp
cmp
dec
imul
lahf
jb
int
cmp
or
sbb
push
cmpsb
daa
aaa
push
movsb
mov
or
pop
fs
add
imull
loope
jbe
or
testb
cs
push
loopne
gs
test
cmpsl
iret
stos
jnp
mov
cmc
sbbb
dec
insl
gs
sub
adcl
test
es
xchg
mov
arpl
fs
mov
lcall
insl
sub
icebp
sarl
mov
popl
dec
ret
sbb
cltd
xchg
in
xchg
ret
in
sbb
push
andb
je
mov
mov
mov
stos
faddl
aaa
enter
cmc
dec
icebp
fcomps
mov
loop
pop
aam
sbb
subl
xchg
ja
bound
and
fstpt
ljmp
les
sarb
ficoml
call
pop
mov
mov
inc
mov
sbbb
out
mov
and
jbe
incl
lds
cmpsl
inc
jb
mov
sub
jmp
pop
pop
mov
mov
sbb
stc
mov
xlat
sbb
cmpsb
roll
in
aad
outsl
lret
aaa
add
loope
xchg
push
xchg
sbb
sbb
mov
push
lret
sti
scas
dec
fidivrs
xchg
cmc
cmpsl
xchg
lret
mov
adcl
dec
sub
call
jno
daa
arpl
cmpsl
ja
fs
sub
jnp
cld
xchg
push
xchg
mov
mov
lret
xor
adc
hlt
insb
in
iret
imul
jge
sub
jno
test
adc
shrl
sarl
cwtl
xor
in
jmp
repz
test
loop
int
mov
add
imul
jmp
aas
xlat
xlat
lret
xlat
lret
rcr
and
or
hlt
jecxz
rcrb
js
jle
js
in
lcallw
dec
shrl
push
lock
movsb
adc
loopne
mov
add
aam
movl
popa
jge,pn
push
clc
jns
lock
xorb
mov
into
ljmp
cmp
aaa
enter
or
jg
inc
push
xor
aas
nop
cmp
je
mov
loopne
mov
cmp
pop
sbb
push
push
sbb
push
in
insb
or
and
repz
rclb
sub
shll
lock
lods
push
mov
xlat
jp
add
inc
adc
xchg
cmc
cmc
push
lock
jl
mov
pusha
pop
outsb
es
sub
daa
das
dec
cmpsl
push
inc
xor
jbe
imul
mov
mov
lods
lahf
call
xor
mov
mov
int
mov
xchg
aaa
popa
inc
repnz
cmp
pop
add
and
icebp
lods
cmp
sub
push
and
lret
enter
mov
push
sbb
mov
enter
mov
popf
xorl
dec
push
push
cmp
mov
and
and
mov
out
andl
gs
sti
cmp
les
pushf
pop
cmp
incl
out
lret
add
pop
dec
sub
ss
mov
lret
mov
jno
sbb
dec
sub
out
mov
xor
mov
test
xchg
je
push
push
xchg
add
fsts
sarb
jp
fwait
mov
cmc
outsl
jb
xor
pusha
cmp
push
pop
add
add
add
sahf
xchg
push
pop
faddl
in
cwtl
mov
clc
xor
rol
add
or
cltd
cmp
in
mov
lcall
xchg
mov
pop
cmc
sub
or
cmc
or
arpl
and
ja
stos
btr
jl
xchg
fsubs
popf
xor
in
push
xorl
sub
jbe
mov
and
mov
push
xchg
mov
push
pop
ror
pop
int
pop
dec
aaa
xor
scas
cmp
fsubp
push
and
sbb
enter
sub
xor
xor
lock
cmp
ja
jmp
rol
xor
shrb
cs
jle
js
push
xchg
xlat
mov
stc
fstpl
lds
pop
pop
in
xchg
aaa
jo
mov
pop
frstor
add
pop
pop
int
out
popf
rcl
movsl
mov
pop
jns
sub
mov
fisttps
arpl
and
sub
sti
das
or
mov
xor
daa
clc
imul
hlt
scas
je
fs
bnd
pop
in
mov
cli
aas
clc
aas
out
jbe
push
daa
and
int
sbb
adc
bound
inc
push
and
out
inc
xlat
data16
loopne
xorl
ret
jae
xchg
mov
lret
fs
outsb
push
push
les
xor
pop
sbb
out
jge
out
sahf
pop
mov
lock
inc
pxor
jle
mov
xor
xchg
frstor
cmp
ret
or
adc
sub
dec
push
imul
js
push
sub
xor
cli
jb
fsubrl
shlb
inc
enter
es
push
jl
addl
inc
jl
ret
lcall
inc
loope
xor
pop
xor
sub
fcomip
push
sti
push
jbe
xor
iret
mov
or
and
arpl
fdivs
ret
pop
mov
and
pop
outsl
inc
loopne
fucomip
test
xchg
pop
lcall
cltd
lods
mov
sub
cmp
bound
cmp
add
dec
mov
xor
xchg
xchg
xchg
pop
shll
sub
push
xor
and
xor
dec
repz
xchg
mov
int3
xlat
cmc
data16
fwait
sub
xor
add
jmp
mov
jae
sub
mov
shlb
pusha
xor
mov
inc
mov
cltd
rol
sahf
jecxz
add
fcomp
stc
jae
mov
inc
push
lahf
cs
mov
shrb
sub
sbb
mov
sbb
inc
adc
or
xchg
mov
push
jb
enter
faddl
outsl
and
adc
repz
mull
fldl2t
test
arpl
sub
sub
jp
jbe
pop
divb
sbb
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
iret
leave
into
xlat
fcmovu
aad
cli
je
sti
xchg
sub
js
in
js
dec
pop
sbb
in
adc
pop
aaa
pop
jns
iret
adc
pop
pop
sarl
xor
xchg
ret
popf
xor
xchg
lea
lret
add
xchg
xchg
add
mov
pop
cmpsb
lock
in
and
hlt
ja
sub
jmp
pop
pushf
test
pushf
popa
cs
aas
jae
dec
push
cmp
mov
inc
std
mov
popf
add
insl
mov
cli
pop
jge
scas
cmp
lock
jp
sbb
jp
xchg
int3
int3
pop
and
rcrl
xlat
sub
xchg
mov
push
cmc
std
mov
mov
movb
mov
inc
in
mov
jecxz
into
add
int3
cwtl
ljmp
mov
mov
pop
push
mov
scas
mov
es
sbb
popa
movsl
mul
outsl
or
jle
pop
push
or
adc
cmp
iret
xor
addl
mov
pop
adc
in
pusha
sbb
outsl
shll
sub
nop
mov
jmp
dec
out
in
imul
out
movsl
mov
popf
xor
faddl
mov
pop
pop
int3
in
mov
clc
push
ljmp
ss
adc
shr
xor
cmp
lret
inc
sbb
pushf
jo
outsl
push
xchg
or
push
mov
enter
inc
loope
outsb
into
cmp
pop
or
lcall
sahf
call
fbstp
ud1
pop
cld
push
ja,pn
mov
ss
jb
mov
adc
pop
jns
adc
es
push
js
es
lahf
mov
shl
add
mov
call
ljmp
sar
cmc
aas
aad
rorl
scas
add
and
stos
rol
insl
daa
sbbl
and
punpckhbw
cmp
gs
sub
cmc
in
sbb
add
add
cmp
lods
outsl
lea
jno
and
aas
mov
inc
lods
shlb
fimull
aam
rclb
shrl
enter
lahf
fidivl
and
mov
ja
cmpl
ljmp
int
and
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
jmp
into
cmp
fxch
sub
ficoms
in
js
pop
pusha
push
ss
scas
lret
push
mov
icebp
std
imul
dec
into
add
push
out
or
decl
fnstenv
lods
in
pop
into
and
mov
ss
in
loopne
xor
andl
inc
push
inc
aad
push
xor
xor
ja
pop
cmp
xchg
lahf
and
add
test
adc
adc
inc
and
mov
stos
jecxz
jne
mov
fistpl
inc
shl
push
imul
adc
mov
das
push
cmp
sbb
mov
mov
jle
pop
mov
xor
adc
mov
mov
xor
add
or
or
imul
sarb
dec
int
jb
addl
mov
push
jmp
fldcw
into
or
sbbb
call
sub
pop
iret
xchg
and
ljmp
jl
ds
stc
xchg
insl
in
hlt
cli
dec
jae
repz
insl
adc
or
sbbb
into
idiv
adc
roll
add
lock
jmp
inc
jb
mov
mov
call
movsl
inc
roll
jg
shrb
jecxz
aam
push
insl
fwait
sbb
aas
or
rclb
into
inc
adc
outsl
daa
mov
add
jmp
sbb
cltd
jp
add
iret
cmpsb
icebp
shlb
insl
mov
xchg
dec
or
pop
mov
cmp
mov
push
push
inc
sbb
les
mov
rcl
adc
pop
xor
es
jle
dec
jne
push
mov
outsl
repnz
xchg
arpl
xorl
addr16
ficompl
mov
aas
out
scas
or
or
andb
xchg
movsb
scas
mov
jp
cmpb
mov
jmp
subl
test
jmp
jge
cmpsb
and
dec
ret
push
and
shll
aam
adc
push
gs
dec
xchg
xchg
push
lret
into
cmp
sahf
lahf
push
cmp
sbb
sub
mov
daa
pop
not
int
sbb
jge
mov
mov
sub
cmp
mov
jbe
jmp
rol
ds
into
rcl
adc
into
loope
gs
in
js
push
or
xchg
out
mov
jle
and
enter
movsb
xchg
jno
add
rclb
xchg
jno
mov
adc
pop
cmp
in
jnp
xchg
stc
orb
cltd
sbb
mov
mov
outsb
popa
lods
inc
sub
cmp
jl
inc
mov
and
daa
inc
mov
xchg
pop
popa
popf
cld
shrl
jl
stc
mov
lds
xchg
pop
jmp
sub
sbb
mov
das
mov
aad
xchg
dec
inc
sub
or
push
dec
push
mov
test
sbb
int
mov
adc
sub
mov
xchg
outsb
ds
sub
add
jp
sub
xchg
out
out
xor
jae
mov
push
jp
xchg
shrl
iret
insb
sbb
add
xor
mov
outsl
mov
pop
inc
jp
fwait
inc
xchg
push
mov
pop
jnp
push
mov
sbbb
pusha
push
pushf
pop
aam
loop
stos
push
mov
push
stos
mov
insl
rep
jno
scas
dec
adc
cwtl
fisttps
cltd
xor
mov
out
lret
add
pop
mov
pop
push
sbb
lock
sbb
pop
mov
mov
mov
test
pop
mov
insb
add
lock
popa
add
in
push
cld
test
movsb
dec
aad
imul
scas
mov
xchg
testb
mov
cld
call
mov
xor
adc
dec
pop
mov
sub
fldt
pop
mov
loop
jecxz
adc
in
mov
scas
xor
cwtl
test
sbb
and
add
sub
imul
fisubrl
cmp
cmp
ret
xchg
dec
jecxz
ja
leave
xchg
pop
pop
lds
mov
cmp
and
xlat
pusha
scas
out
imulb
add
inc
lods
movzwl
push
dec
push
inc
mov
sub
jg
movsl
pop
insb
outsb
pushf
movsb
xchg
and
jae
imul
xor
mov
adc
sub
cmp
add
mov
inc
add
add
pop
mov
les
xor
jmp
rol
enter
fcmovnu
xchg
add
inc
test
jmp
js
in
js
rcll
push
mov
in
xchg
jecxz
shlb
or
in
cmp
aad
xchg
insb
clc
xor
sti
cwtl
jno
xchg
mov
out
push
cmpsl
pushf
loopne
and
xchg
and
jge
fwait
adc
mov
out
sub
mov
stos
popf
inc
mov
lds
push
iret
shlb
sub
push
ja
and
scas
nop
fidivrl
rorl
outsl
mov
leave
mov
and
and
aas
addr16
jle
rolb
shr
push
scas
pop
xlat
jp
in
dec
das
popl
insl
addr16
int
ret
imul
testb
testl
jns
scas
rol
adc
inc
inc
test
xchg
lds
dec
sub
sbb
xor
adc
or
push
dec
jae
sbb
mov
je
sub
mov
pop
jge
inc
icebp
or
sub
loop
repnz
aaa
outsl
dec
cmp
xor
sbb
out
mov
lods
xor
loop
pop
data16
movzwl
cmpsl
lret
xchg
fwait
out
imul
ljmp
cmp
mov
sti
or
pop
enter
dec
js
popf
testb
add
movsb
mov
daa
pop
pop
mov
xor
lret
movsb
mov
lds
popa
cmp
rclb
stc
sub
gs
and
pop
lret
call
outsb
movsl
scas
imul
mov
aas
hlt
repz
mov
xlat
xchg
mov
arpl
jp
sub
dec
dec
ds
push
lret
fidivrl
fisttps
mov
int
adcb
push
sub
jge
add
mulb
cmc
push
or
jecxz
ret
data16
xchg
pushf
out
sub
xchg
pop
jns
mov
into
jb
arpl
and
mov
sub
add
push
in
cmp
xchg
pop
icebp
stos
stc
stc
in
or
jg
int
aas
hlt
jns
adc
cmp
pop
adc
xor
xchg
insb
xchg
aaa
pop
mov
rclb
mov
mov
les
repnz
add
inc
cmp
stc
add
imul
mov
mov
mov
mov
add
movl
jmp
fcmovnu
shr
movsl
xchg
mov
imul
cmpsb
and
and
in
pop
jbe
sbb
outsb
dec
outsl
push
rolb
loop
cmp
lret
insb
loop
mov
push
cmp
jecxz
sub
mov
lret
ljmp
icebp
js
lea
push
lahf
mov
cltd
xchg
or
mov
cli
mov
enter
and
ffree
sbb
rcrl
inc
loop
push
mov
xchg
mulb
sbb
jmp
and
sbb
aaa
cmpsl
testl
jae
sbb
and
movsl
into
pop
insb
and
or
movsb
outsl
adc
sar
sahf
fisubs
or
repz
push
cmp
addr16
loop
push
dec
xor
push
adc
push
mov
sbb
push
nop
in
or
inc
insl
loop
mov
dec
lds
fdivrs
outsl
push
in
popa
cmpsb
push
int3
cmovge
cli
out
and
jne
jo
mov
popa
cwtl
ljmp
cwtl
xchg
enter
pop
dec
xor
imul
js
insb
repz
mov
ljmp
pusha
les
ret
nop
mov
inc
mov
mov
imul
ror
mov
sbb
test
sub
lahf
bsf
xor
pop
jl
push
jnp
lcall
push
and
lods
cli
decb
ljmp
shl
dec
jg
adcl
lods
stos
and
into
div
add
mov
lock
sti
stos
es
in
cvtps2pi
stos
jae
test
out
sahf
mov
lcall
push
or
imul
inc
aam
inc
pop
mov
cs
jp
xchg
je
add
jb
xchg
and
or
test
ret
xor
cmpsb
mov
pop
icebp
insb
mov
loop
sub
faddl
mov
test
sub
add
sar
data16
fimuls
adc
lds
pop
jo
xchg
fwait
in
loope
adc
mov
cld
add
push
fiadds
push
push
imul
rorl
add
add
ret
rol
fcmovnu
mov
call
mov
in
js
xor
adc
mov
xchg
cmpsb
mov
xchg
cli
xor
clc
negb
cmp
sub
aaa
cld
scas
arpl
sbb
xchg
cmp
clc
insb
cli
das
dec
dec
mov
and
or
push
lods
inc
sub
scas
mov
data16
xchg
ljmp
std
inc
push
and
sti
cmp
mov
sbb
stos
lret
sbb
fsubp
and
insb
ret
cmp
adc
sub
add
xchg
sub
mov
jb
xor
adc
push
dec
into
cmp
push
int3
bound
enter
cmp
adcb
out
mov
dec
adc
sahf
ljmp
test
fdivl
push
mov
enter
push
jb
mov
or
fadds
pop
les
pop
push
test
or
fstps
out
add
out
bound
test
dec
hlt
inc
mov
es
jmp
pop
test
cmpsb
test
cs
dec
xor
dec
xor
aaa
loope
mov
aad
inc
jne
push
inc
in
fadds
push
sbb
lds
pop
cmp
adc
test
orb
fstp
stos
lret
mov
and
mov
jg
ret
xchg
shlb
mov
sarb
loope
test
push
and
dec
xor
mov
loop
adc
in
fsubp
daa
es
hlt
repz
loope
adc
cmp
add
cmp
les
adc
pusha
outsb
cmp
xor
mov
pop
imul
insl
lret
icebp
and
js
xchg
push
xor
es
sbb
mov
notb
pop
or
sub
jp
arpl
ds
orb
mov
ss
sbb
cmp
mov
dec
sbb
mov
lock
push
xor
stos
pop
pop
xor
sub
cmp
pop
mov
adc
gs
jo
xchg
add
rorl
pop
cmpsb
nop
loope
loopne
inc
in
shl
sub
mov
pop
push
mov
mov
lret
xor
movsb
sti
or
hlt
cmp
mov
jmp
int
ror
fcmove
leave
sub
divb
stos
insb
js
in
js
or
aaa
pushf
movsl
inc
adc
ljmp
iret
add
int
ljmp
xor
mov
mov
insl
scas
ljmp
or
pop
add
call
mov
mov
jae
aaa
sub
ret
es
xchg
sbb
sahf
sbb
jmp
add
dec
jp
jecxz,pn
dec
xchg
pop
cmpsl
sarb
test
mov
es
push
dec
addr16
je
aas
cmp
adc
scas
jl
pop
in
jo
test
sti
adc
jbe
xor
mov
pop
ffree
and
pop
add
and
mov
sub
int
jge
into
dec
sahf
mov
repz
sbb
and
cmc
push
movsl
inc
xchg
sub
fdivl
movsb
mov
jmp
jbe
inc
int
push
or
rcr
mov
fdivrl
mov
pop
push
jo
xchg
divl
mov
cmp
xor
sub
push
cmp
cmp
pop
inc
test
ljmp
xchg
jno
sub
xchg
andb
xchg
xlat
cld
push
mov
mov
dec
sbb
add
rclb
xchg
inc
xchg
push
push
stos
xchg
inc
mov
fwait
mov
lcall
cmp
lods
testb
or
push
mov
pop
enter
loop
gs
xchg
cmpsb
dec
test
or
fmull
pop
sub
aam
jo
add
rcrb
arpl
clc
repz
push
shl
ret
cmp
xchg
pop
jo
adc
fbstp
inc
push
and
sarl
add
jae
jo
push
les
adc
into
lcall
lret
testb
ret
cmp
fstpt
lods
sbb
fistpll
jle
mov
es
pop
adc
and
cmp
mov
mov
xchg
or
ror
ja
sbb
mov
cwtl
adc
mov
out
nop
mov
and
cmp
adc
inc
insl
iret
sbbb
and
or
push
sbb
mov
fnstsw
xchg
or
ret
jmp
inc
aad
imul
push
call
jmp
mov
xor
add
jmp
ret
xlat
data16
cmp
sbb
in
js
movsl
sub
fdivrp
pop
add
ds
leave
push
adc
pop
push
jmp
jbe
or
test
xchg
into
cs
pop
hlt
push
incl
add
lds
push
jb
and
jns
push
cmpsl
and
rcrb
in
sbb
popa
mov
rorl
push
cmpsb
cmp
jle
mov
enter
xor
pop
sar
aam
arpl
inc
aas
out
mov
or
andb
or
sub
pop
adc
loope
das
adc
cmp
and
je
iret
movsb
fistps
fs
cmp
push
cmp
and
lahf
inc
jp
aaa
jae
xor
clc
lods
and
inc
fidivrl
and
cmp
mov
decl
dec
mov
xchg
mov
test
cltd
aam
repnz
sub
mov
cli
and
inc
mov
loope
jae
movsb
popf
pusha
data16
dec
push
inc
dec
xchg
pop
mov
pop
jo
mov
mov
xor
push
xchg
sbb
bound
inc
xchg
mov
and
mov
movsl
cmp
xor
lret
fcompl
dec
dec
push
push
jecxz
pop
xchg
mov
and
pushf
xchg
mov
or
jp
enter
les
push
jo
call
mov
pusha
jae
into
lret
jl
sbb
int
jg
cltd
test
ja
adc
cli
push
aam
sbb
xor
mov
les
aaa
sbb
sub
in
mov
cmpsb
leave
cmpsl
movsl
popf
mov
jns
pop
icebp
mov
test
fidivl
vpminsw
jge
fldt
pusha
push
popa
inc
arpl
and
jmp
adc
add
stc
push
popa
ja
jns
or
cwtl
sarb
sahf
xchg
daa
lds
jp
daa
jae
and
les
aas
mov
push
add
call
sub
mov
pusha
pop
push
sub
and
test
add
dec
push
mov
in
inc
dec
or
sbb
bound
jae
lods
in
and
fisubrs
movsb
cs
pop
xchg
lret
jno
and
ja
pop
and
push
cmp
jmp
push
imul
fildl
inc
xchg
mov
pop
mov
mov
jmp
int
xlat
enter
shll
std
xchg
pop
or
js
jle
js
pop
cmpsl
jbe
xchg
sbb
dec
push
xlat
faddp
insb
add
and
lahf
push
cmp
test
fcompl
aaa
lahf
pop
or
and
xchg
je
outsb
and
movsl
aad
pop
scas
mov
pop
and
or
inc
fwait
dec
cmpb
jge
mov
push
test
in
sti
divl
adc
jb
xor
test
xor
dec
movd
pushl
insl
add
mov
xchg
es
sub
decl
push
mov
mov
repz
roll
pop
jle
push
push
outsb
sti
repnz
int
insl
adc
jp
test
repnz
cmp
inc
cmp
insb
jg
enter
popa
leave
xchg
adc
jecxz
cld
mov
adc
stos
add
cs
and
sbb
fnstsw
aaa
fidivrs
js
jb
repz
sbb
xchg
dec
out
jno
pop
push
mov
jle
dec
add
and
mov
inc
sbbl
xlat
sbb
lods
dec
mov
test
stc
push
cmp
das
cmp
push
mov
adc
xor
mov
lahf
xlat
cmpsb
dec
mov
call
pushf
push
fldenv
sub
mov
frstor
incb
nop
outsb
in
jle
mov
mov
mov
mov
into
out
insb
and
cmp
or
pop
pop
xchg
add
nop
mov
cli
xor
pusha
loopne
dec
ds
pop
stos
pusha
pop
xor
aas
out
xor
xchg
shrl
repz
lret
sub
push
xor
ja
mov
sbb
push
inc
lret
les
mov
or
addr16
in
jne
rclb
inc
sub
sub
adc
pop
sbb
rcrb
and
leave
test
fwait
xor
dec
mov
cmp
add
push
das
mov
lds
adc
and
lcall
fadd
xchg
mov
inc
sbb
mov
dec
mov
mov
add
push
dec
divb
dec
outsl
sub
pusha
or
jbe
out
jge
mov
mov
xor
add
mov
mov
mov
mov
jmp
aas
cmp
cmp
sbb
add
imul
js
fwait
push
add
sub
fsubrl
pop
mov
scas
xchg
out
not
and
jecxz
push
add
lahf
and
xchg
and
mov
mov
decl
sub
or
lret
mov
aas
and
adc
out
or
cmpsl
dec
nop
stos
push
jmp
js
add
xchg
iret
push
pop
xor
pop
jecxz
ljmp
sbb
mov
xor
lret
sti
mov
xor
cmp
orl
hlt
ret
jbe
call
mov
mov
daa
and
int
into
in
sub
adc
jl
leave
call
sbb
sbb
repz
ss
aam
pusha
mov
sbb
fwait
mov
sarl
mov
inc
rcrl
andb
rcrb
push
out
jge
push
mov
mov
mov
hlt
inc
imul
mov
sti
std
push
gs
xchg
adc
rcrb
loop
lret
adc
out
xlat
subb
push
in
jmp
sahf
xor
jns
pop
inc
sub
lock
sahf
xchg
adc
mov
stos
std
cmp
leave
loopne
aas
pop
and
xchg
inc
cmpsb
jno
xchg
lcall
sub
inc
test
and
daa
inc
xlat
mov
leave
and
xchg
jb
cmp
xor
dec
mov
mov
mov
in
call
sub
add
or
lods
or
inc
out
pop
sub
mov
test
push
cmpsl
imul
or
jecxz
and
jp
push
out
or
rcrb
mov
lret
inc
or
jbe
lahf
jg
orl
ds
pop
add
stos
push
out
sbb
pop
daa
pop
clc
int
sbb
or
cmp
jno
fldl
push
mov
popf
mov
fisttps
or
cmp
sbb
stc
cmpsl
orb
into
out
push
out
adc
andb
sub
movsl
jo
xchg
adc
clc
lock
mov
js
xorb
outsb
inc
sub
hlt
xor
add
mov
mov
mov
mov
xor
jmp
cmp
pop
in
inc
repnz
or
jp
js
jle
js
xchg
pushf
add
stos
jp
fisubrl
cmpsl
les
jp
pop
pop
xor
xor
addr16
in
gs
dec
movsb
mov
cmp
mov
ja
je
xchg
sbb
test
cmp
mov
xchg
es
inc
add
mov
test
test
jb
jnp
push
jle
shrl
popf
movsb
jge
xor
aas
aam
jecxz
stos
sub
aad
ljmp
push
sbb
hlt
fbstp
mov
sub
cld
jge
shll
inc
pusha
sub
outsb
xchg
lods
lods
mov
jns
xchg
les
mov
pop
mov
jno
inc
shll
mov
jmp
jae
aas
pushf
nopl
push
pop
mov
clc
dec
sub
sub
adc
enter
jmp
add
pop
mov
jo
sub
pop
ds
fists
xor
dec
sbb
dec
pushf
ror
xor
and
add
mov
les
lahf
xchg
outsb
xchg
push
push
adc
enter
jmp
xchg
sahf
jb
push
mov
pop
inc
popf
cld
andb
fucomip
inc
dec
sub
aam
xchg
cltd
pushw
fnstenv
fsubr
std
sarb
stos
orb
mov
inc
pop
add
test
mov
inc
adcl
in
push
iret
fstpl
add
loopne
leave
mov
cmp
mov
ss
test
or
mov
lds
cmpsw
mov
call
decb
dec
les
push
sub
add
push
daa
mov
mov
jae
adc
mov
ret
mov
pop
mov
in
scas
imul
daa
jp
xchg
lret
pop
das
mov
mov
add
push
fcomps
scas
clc
call
out
cmp
movsl
inc
fistps
je
pop
popa
clc
lret
pop
dec
incb
dec
stc
aam
or
subl
rclb
mov
jmp
push
insb
mov
mov
push
push
xchg
xchg
add
mov
mov
jmp
enter
cld
imul
mov
in
js
cs
outsl
xchg
stc
ds
push
pop
sub
je
xchg
sbbb
fcoml
inc
out
xor
inc
loop
jecxz
push
push
outsb
push
jnp
repz
mov
ja
stos
pop
fisubs
push
arpl
sahf
or
push
stc
dec
or
jmp
lds
sahf
mov
test
aas
lds
inc
fcompl
jae
negl
add
push
adc
imul
adc
repz
xor
cmp
rol
pop
mov
mov
mov
sbbl
popf
dec
mov
pop
in
faddp
sarl
push
stos
jg
in
inc
mov
xor
pop
sub
mov
je
sub
daa
sti
popa
bound
sbb
dec
loope
fstps
dec
xor
dec
or
mov
push
mov
sub
and
push
push
and
push
nop
dec
dec
lea
xchg
test
xor
xchg
dec
scas
sbb
add
shrb
sub
mov
xchg
jnp
in
pop
out
hlt
mov
and
dec
rcrl
insb
rcl
mov
iret
rcr
add
imul
sub
pushl
push
add
cmp
pop
cmp
mov
cltd
shr
mov
mov
arpl
shl
adc
or
data16
aam
jo
xor
leave
out
dec
jle
jb
sbb
rclb
pop
bound
inc
lahf
xchg
bound
inc
subps
mov
dec
call
fidivl
pop
lds
add
enter
fidivl
aaa
sbb
xlat
mov
imul
xchg
fidivl
sub
cmpsb
icebp
or
cmp
repnz
and
repnz
dec
sub
hlt
insl
or
mov
imul
test
xchg
stc
in
pop
pop
lock
jg
ds
cmp
push
mov
or
mov
adc
adc
cmp
xor
jmp
aas
jmp
cmc
or
mov
insb
mov
xchg
dec
sub
stos
icebp
xchg
shlb
in
pop
sbb
xchg
jno
adc
push
cmovno
lret
cmpsb
cmp
cmp
sub
scas
mov
test
cmp
inc
movsb
mov
imul
jecxz
push
mov
shlb
clc
add
add
jmp
ror
ror
leave
leave
mov
pop
mov
jge
js
jle
js
loop
pop
jecxz
mov
mov
cwtl
sbb
loope
inc
aaa
jne
push
sbb
mov
mov
popa
mov
lods
inc
and
mov
sub
test
xor
and
test
pop
inc
cmpsb
je
js
dec
xor
icebp
push
push
popa
and
dec
jge
mov
mov
das
xor
lcall
mov
cmp
lock
faddl
xchg
mov
leave
xchg
and
mov
rcl
adc
mov
jno
dec
lock
ret
shlb
sub
sub
in
cld
pop
cmp
test
sub
stc
jo
outsl
inc
les
cld
cmc
aad
sub
dec
adc
aad
push
sub
dec
movsl
loopne,pt
mov
mov
pusha
ret
outsb
pop
xor
into
shll
jb
adc
cmp
mov
adcl
jge
mov
cmpsb
ljmp
shl
aad
jnp
arpl
xor
shlb
int3
rcll
or
pop
jo
stos
xchg
pusha
iret
cmp
out
jbe
sbb
jo
adc
ss
cmc
xchg
dec
rcrb
in
sarl
sub
inc
orb
mov
pusha
push
out
jns
dec
idiv
sub
lahf
clc
jo
lock
je
jle
dec
in
sbb
or
cli
fcoml
cmp
jbe
xchg
push
pop
xor
ss
xchg
xchg
lods
ret
pushf
clc
loope
and
hlt
daa
xor
cmp
xor
push
dec
fists
shrl
movsl
pop
fnstsw
fwait
insb
mov
mov
xor
pop
mov
xchg
dec
sbb
jmp
xor
sub
sbb
mov
in
inc
shl
es
inc
jmp
scas
adc
mov
push
lock
mov
or
mov
add
xchg
lods
out
add
lahf
xor
fidivrl
inc
ret
xchg
cmp
pop
pop
in
mov
mov
jno
push
dec
mov
lock
loope
les
lea
jns
mov
inc
jae
aam
push
jmp
or
or
push
pop
dec
push
xor
sub
mov
xlat
add
mov
mov
mov
xor
add
imul
mov
xor
jmp
enter
lret
fxch
flds
xchg
loope
addr16
xchg
add
in
js
mov
push
insb
xchg
in
orl
test
xchg
test
movzbl
xor
cmp
subb
xchg
mov
jge
and
mov
add
outsb
ljmp
push
mov
mov
mov
es
push
out
repz
mov
push
push
into
addb
mov
fdivs
fdivrs
call
cmp
mov
pop
add
dec
add
sti
adc
push
add
faddl
inc
aas
xor
push
mov
xchg
push
dec
std
mov
push
test
mov
rcr
fldt
test
jb
leave
cwtl
and
mov
add
es
xchg
jne
sub
push
fsubs
fsubr
sti
and
scas
stos
movsb
cmp
imulb
cwtl
push
inc
popf
cs
dec
xchg
pushl
shll
push
popa
jb
rcll
rcl
xor
or
bound
pop
sbb
xchg
push
jbe
leave
add
dec
xchg
pop
mov
test
sarl
inc
cmp
incb
lcall
pop
mov
mov
xor
aad
sbb
mov
gs
sub
mov
mov
adc
xchg
cmp
imul
into
mov
pushf
rcll
je
mov
xor
add
test
mov
jno
mov
aad
add
add
leave
dec
sbb
add
mov
sbb
sbb
or
cmpb
ss
sbb
mov
popf
adc
or
ljmp
push
sti
adc
mov
sarl
or
mov
fsubrl
fsts
jl
in
std
and
loopne
je
mov
fldl
iret
loopne
jne
leave
pusha
fsubrs
clc
xchg
lcall
or
xor
xor
inc
inc
push
xchg
mov
cli
addr16
daa
popa
stos
sbb
sub
or
or
aam
or
js
sahf
pop
push
out
aas
add
mov
adc
push
sub
mov
mov
xor
add
jmp
ror
iret
aam
insl
js
inc
and
js
jle
js
and
push
cmp
shlb
sahf
cmp
mov
xlat
or
or
cmpsl
add
movsb
icebp
sti
ror
in
es
pop
xor
add
mov
fnsave
cmpsb
jge
adcl
adc
nop
pop
push
jmp
jo
inc
sub
testb
mov
std
insb
sbb
xchg
mov
adc
pop
data16
imul
add
jmp
mov
mov
jne
push
xor
fbstp
xor
out
shl
cwtl
mov
xor
pusha
outsb
and
mov
loopne
clc
shll
mov
mov
xchg
lret
lret
lock
inc
in
out
pusha
shr
dec
and
xchg
pop
push
movsb
cmp
inc
fstpt
lock
sub
inc
add
cli
lds
dec
ficoms
rcll
scas
shrb
inc
dec
pop
loopne
sub
inc
push
scas
push
jmp
inc
jb
mov
test
sbb
dec
sub
xchg
xchg
sbb
dec
jo
dec
in
add
jns
push
iret
es
lock
mov
scas
mov
cmc
es
inc
shlb
mov
mov
sub
cmp
loop
fstl
hlt
addb
cmp
dec
mov
pop
sbb
fwait
std
ljmp
push
andb
or
xchg
xchg
inc
in
or
lods
sub
push
or
inc
xor
inc
jge
mov
xor
push
nop
sub
jmp
es
fwait
jge
ret
dec
sbb
or
pop
mov
mov
xchg
push
repz
iret
dec
fnstenv
stos
dec
xchg
jno
int
int3
push
and
imul
xchg
jne
mov
and
stos
std
xchg
popa
sub
sbb
mov
xchg
shlb
fs
jp
aas
cmp
dec
pushf
movsb
call
mov
xor
mov
andb
jb
jnp
mov
jmp
cmp
mov
popa
mov
in
adc
out
and
lods
dec
test
aam
adc
add
sbb
call
scas
xchg
sub
scas
paddd
mov
sbb
cwtd
push
adc
fs
sti
mov
jmp
rol
leave
rcr
rcr
enter
lea
mov
push
jg
in
js
loope
push
lods
rorb
xchg
imull
and
xchg
dec
xor
stos
dec
and
das
push
leave
lret
popa
fidivrl
jb
mov
jno
fwait
mov
out
sbb
cmp
js
loope
xor
pop
mov
adc
pushf
adc
jmp
xor
fists
aam
pop
enter
popf
inc
movsl
test
mulb
adc
adc
push
jb
xchg
pop
js
sarb
cld
in
js
push
and
lcall
jmp
pop
push
jp
int3
inc
sbb
mov
push
sub
jg
xor
das
adc
movsl
rcrl
xor
jne
aaa
xchg
add
scas
or
mov
mov
inc
sarl
das
faddl
mov
insb
in
sub
add
xlat
subb
add
loopne
cmpb
pop
cs
aam
cmpsb
fcoms
aad
iret
notl
adc
testb
js
pop
xchg
inc
popa
inc
in
xor
out
cli
cmc
popf
fiaddl
rcrl
cltd
loop
sub
lea
adc
pop
out
add
dec
or
add
push
xor
and
fdivrs
mov
into
test
packuswb
mov
cld
cmp
cmpsb
lds
dec
cmpsb
shl
lret
xchg
and
shlb
and
cli
fistpll
insl
gs
xor
out
pop
xchg
imul
and
sub
test
adc
mov
sbb
imul
xor
push
inc
roll
sbb
popa
fcompl
add
xor
jl
jle
andl
or
push
mov
mov
test
lds
xchg
addl
add
mov
inc
pushw
lea
test
popa
dec
out
aad
loope
out
xchg
and
jecxz
hlt
hlt
cmpsl
jl
aad
je
mov
out
jns
fucomip
add
dec
fwait
mov
inc
fst
dec
mov
xor
add
push
mov
out
subb
add
andl
les
int
aam
mov
movsb
fsts
js
jle
js
jns
inc
test
jge
mov
jp
cmpsl
pop
pushf
std
mulb
xor
loope
arpl
std
lods
test
sbb
mov
pslld
or
je
sub
into
mov
ret
imul
int
jbe
inc
fidivs
addr16
lea
js
inc
mull
mov
pusha
ds
inc
in
subb
popa
xor
or
mov
cltd
fdecstp
push
add
popf
sbb
xchg
mov
bound
test
mov
or
add
loope
cmpl
std
sbbb
adc
fstps
and
jmp
xchg
mov
shrl
fsubrl
fs
inc
aam
mov
lcall
es
push
push
fmul
dec
mov
inc
jbe
inc
mov
sbb
cld
sarb
jp
push
int
pop
mov
sbb
sbb
fdivrl
in
sub
jo
std
into
add
dec
and
xchg
call
push
jg
jae
flds
imul
push
sub
dec
call
push
pop
imul
add
mov
adc
or
fwait
rcll
sbb
subl
adcb
sbb
pop
sbb
or
mov
jge,pn
and
mov
in
xor
push
add
cltd
mov
sub
cmp
movsl
push
aaa
push
mov
inc
jo
pop
jbe
lock
adc
add
jl
rorb
sbb
inc
mov
mov
out
insb
cmp
or
sahf
cmp
sub
fwait
jp
dec
push
ret
mov
fwait
and
shlb
xchg
hlt
into
jne
dec
outsb
lods
lock
mov
jnp
pop
cmp
aas
mov
icebp
mov
mov
js
jae
out
jne
push
jp
iret
cmpl
fs
xor
sbbl
dec
fstps
or
mov
ret
out
aaa
fidivrs
fidivrl
fsubrs
lcall
dec
into
adc
fimull
and
mov
stos
push
sbb
pop
movb
or
xchg
jl
rorl
xor
cmp
jbe
mov
mov
xor
add
jmp
vpmovmskb
fcmovnu
addl
inc
rorl
js
jle
js
in
aaa
pop
and
xlat
cmp
mov
xchg
xchg
xor
lcall
xchg
pusha
or
add
push
xchg
nop
icebp
inc
in
in
daa
mov
xorb
and
or
mov
ljmp
inc
cwtl
sarl
loop
push
stc
cmp
scas
dec
mov
and
divb
sub
lock
pushf
pop
xor
add
mov
inc
ret
xchg
mov
lds
or
xor
adc
xchg
out
push
incl
cmp
in
jb
and
movsl
pop
lret
mov
sub
pop
popf
andb
cmpsl
inc
lcall
push
ret
inc
in
imul
mov
sti
ljmp
inc
mov
jg
cmc
xchg
inc
filds
aad
adc
or
popf
mov
mov
xor
pushf
das
jbe
adc
out
bound
je
mov
sbb
outsb
cltd
sbb
pop
mov
xorb
inc
into
cmp
cmp
and
les
sbb
fnstcw
popf
and
arpl
push
int
pusha
add
cmp
sbb
cld
mov
or
int3
dec
addr16
nop
sub
pop
pop
push
mov
sbb
mov
insb
call
repz
xor
dec
add
push
jbe
xor
or
popf
inc
dec
lods
sub
inc
imul
lret
ret
rorb
sbb
scas
push
pop
pop
add
jge
fsubr
ret
or
xorl
mov
aam
xchg
xchg
fstpl
dec
movsl
ja
dec
dec
inc
jp
sbb
xor
pop
cmp
add
sbb
leave
cmp
inc
xlat
fstl
lock
scas
shll
push
pop
pop
jb
mov
cmp
ljmp
add
leave
pop
inc
ss
mov
xchg
sbb
movsl
addr16
jns
xlat
add
in
pop
mov
pop
jbe
jno
gs
inc
or
mov
cwtl
gs
out
cmc
imul
mov
jmp
lret
ret
vpand
ret
adcb
lcall
jle
js
add
or
or
mov
aam
cmp
add
jae
or
mov
lods
loopne
gs
repnz
out
jb
xor
addr16
repnz
mov
adc
gs
and
pop
sub
dec
mov
jmp
int
jg
xor
sub
repnz
lahf
push
repz
cmpl
push
xchg
fistl
jns
lds
inc
out
insb
xor
scas
popf
popf
jp
insb
jnp
pusha
or
pop
xchg
in
popf
jle
mov
xchg
loop
out
push
ljmp
ret
pop
xchg
std
stos
test
xor
pop
inc
xchg
push
inc
jmp
pop
ljmp
js
insb
das
mov
sub
dec
ds
lcall
sti
mov
mov
cmp
dec
mov
stos
fistpl
jg
scas
dec
jle
jl
or
mov
or
out
pusha
mov
shr
addr16
xor
lods
data16
fistps
mov
shlb
push
sbb
or
aad
cmpb
jge
add
mov
leave
dec
xor
sbb
aad
sub
mov
ret
pop
xor
out
mov
push
mov
jecxz
lahf
es
cmp
call
sbb
jbe
insb
pop
cmp
out
lea
jb
adc
leave
or
loop
dec
pop
shrl
xor
fidivl
fiaddl
test
test
push
jge
inc
rcll
push
sbb
mov
push
pushf
add
and
pop
mov
stos
je
out
mov
outsb
push
ljmp
pop
jne
xor
dec
and
insb
sbb
in
jae
xchg
jecxz
jne
je
pop
insb
sbb
mov
inc
repz
mov
add
lcall
fistpll
imul
arpl
mov
loopne
insb
imul
les
and
cmp
dec
test
jo
push
mov
les
adc
fwait
sbb
sbb
clc
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
jmp
rcl
aad
leave
or
sbb
js
jle
js
scas
ss
xchg
dec
mov
rorl
cmp
mov
and
dec
in
adc
xor
scas
aad
cmpsb
add
insb
xlat
mov
mov
mov
les
dec
ret
std
out
pop
insl
mov
idiv
mull
movsl
xchg
jl
add
hlt
aam
jns
mov
test
gs
pop
imul
scas
xor
sbb
jg
fnstcw
lcall
nop
xchg
rcrb
out
adcb
cmp
mov
xor
or
das
popa
add
ja
sbb
inc
loopne
cmp
jo
clc
lds
sub
mov
ret
cltd
scas
cs
mov
or
xor
cmpsb
sbbb
push
and
mov
ss
stc
out
and
ljmp
push
mov
and
add
nop
mov
push
xor
ds
xchg
stos
jo
jg
movb
das
inc
jge
lods
cmpsb
imul
popa
jl
outsb
std
scas
mov
pop
stc
clc
insl
cltd
mov
lock
sbb
in
leave
pop
dec
divb
adc
dec
cmpsl
and
pop
rcrl
jae
cli
and
hlt
mulb
hlt
sub
pusha
clc
call
lods
in
cwtl
push
xchg
sbb
mov
insb
cwtl
sbb
dec
jns
leave
ja
dec
sahf
jmp
adc
sahf
in
push
faddl
adc
nop
std
inc
mov
inc
insl
outsl
push
pop
mov
sbb
fistpll
xlat
stc
dec
aam
xchg
fs
and
sub
ja
mulb
adc
lock
jg
ret
cmpsl
dec
pop
aam
aaa
mov
lret
outsl
push
movsb
sub
dec
aaa
xchg
cmpsb
dec
and
mov
fs
sbb
adc
test
push
stc
in
aas
fmulp
sub
dec
mov
ficomps
xlat
test
cli
test
insl
pop
insb
cwtl
mov
adc
and
push
mov
fisubrl
in
jecxz
and
xor
cmpsl
jge
cmpsl
lcall
sbb
sub
mov
lods
jp
movsb
adc
das
idivb
icebp
rolb
mov
xchg
sti
aad
xchg
mov
aam
or
ficoml
imul
cmp
jmp
int
cmp
int3
leave
aad
xchg
mov
dec
or
mov
in
js
mov
fs
ret
loop
pop
push
sbb
mov
pop
pmulhuw
loop
mov
mov
fstpt
jmp
out
iret
cld
lret
jb
cmc
ja
pop
pop
lods
mov
sbb
inc
inc
jmp
inc
mov
cs
sub
cmp
xor
je
adc
decl
pop
sbbb
ret
push
sub
dec
cmp
inc
or
jp
push
ret
dec
jbe
dec
and
inc
int
cmp
sub
or
inc
cmp
mov
insb
cmc
mov
insl
lods
mov
insb
xchg
dec
inc
movsl
or
xchg
add
scas
add
inc
aad
xlat
in
inc
jno
das
pusha
pop
lret
jnp
jge
and
ss
sub
adc
jge
movsl
jns
mov
test
data16
push
mov
push
adc
xchg
sahf
out
repz
push
inc
stos
loopne,pn
es
dec
inc
cmp
mov
pop
dec
mov
add
pusha
push
jne
fadd
lcall
sub
cmpsl
sub
fs
stos
insl
jecxz
mov
cwtl
outsl
out
popa
or
cmp
jmp
jno
gs
mov
inc
add
jge
outsb
xchg
inc
sahf
out
les
adc
mov
out
inc
pushf
adc
mov
and
in
outsb
gs
js
pop
push
xchg
loopne
popa
jmp
ljmp
mov
mov
jl
xor
leave
mov
mov
rorb
lcall
inc
dec
push
push
stos
mov
mov
test
ja
out
movsb
pop
push
ss
pusha
fsubrp
jge
push
push
add
adc
push
addr16
dec
push
jnp
mov
inc
push
jecxz
lcall
push
repnz
and
int
dec
mov
jae
mov
adcl
sub
movsl
cmp
test
jp
adc
dec
dec
jl
stos
xor
mov
faddl
clc
aas
fisttpl
cmp
fdivrs
mov
sbb
mov
xchg
cmp
fwait
add
jnp
orl
dec
sbb
jnp
lret
and
clc
repz
cmp
xchg
lcall
leave
ret
push
mov
sub
movzwl
xor
push
andl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
call
jmp
push
xor
add
push
push
xor
pop
or
xor
sub
mov
div
push
sbbl
call
movl
inc
movl
cmp
jb
movl
incl
movl
lea
inc
mov
andl
lea
xorl
mov
or
mov
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
andl
mov
xor
xor
xor
mov
sub
add
mov
mov
mov
movzbl
cmp
mov
mov
mov
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
or
mov
xor
xorl
add
addl
imul
movl
mov
movl
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
movzbl
xor
mov
xor
add
and
mov
negl
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
not
add
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
add
mov
mov
xor
xorl
add
movl
cmp
movl
jne
movl
push
subl
pushl
pushl
subl
call
mov
mov
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
jmp
or
mov
mov
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
adc
mov
movl
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
and
mov
mov
andl
mov
addl
xor
xorl
xor
add
mov
xor
orl
xor
add
lea
movl
mov
movl
cmp
ja
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
call
cmpl
jb
sbb
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
into
int
rol
shl
out
stc
fsub
push
lods
insl
adc
xchg
jle
js
mov
push
std
jmp
rolb
sbb
mov
push
push
xor
rclb
push
xor
xor
pop
ficoms
add
cmpsl
mov
mov
test
lahf
and
les
jae
mov
sbb
jl
out
fimull
jae
add
push
jae
sahf
in
push
hlt
loop
dec
pushf
pop
lea
cli
or
inc
xor
jo
add
xchg
xchg
es
xchg
or
sti
jge
cmpsb
popa
icebp
push
mov
test
adc
jnp
iret
rcrb
lods
adc
lahf
mov
xor
dec
inc
push
cmp
inc
ja
fmuls
add
or
je
stos
push
or
aaa
xchg
mov
pop
sub
test
xor
bound
lret
inc
cmp
cmpsl
dec
adc
movsb
mov
add
int3
pop
shll
fildl
inc
into
test
cmpsb
inc
lock
push
jns
mov
pop
inc
cmp
das
faddl
sub
stos
in
cmp
js
add
jno
gs
adc
cmp
cs
cmc
test
xchg
push
adc
fwait
push
les
dec
dec
add
lcall
test
int3
cmp
jbe
sub
mov
stos
in
mov
insl
pop
inc
cmp
loopne
xor
push
sar
push
push
mov
aas
into
xchg
dec
fisttpl
or
add
popf
or
movsl
cs
mov
jo
mov
dec
into
inc
in
pop
in
mov
lds
lcall
lods
inc
jae
push
sub
inc
gs
push
loope
lds
push
cmc
in
sbb
mov
jno
cli
lret
inc
cld
fldl
mov
pusha
loop
push
inc
xlat
inc
lcall
loope
fisubs
mov
jo
xor
fwait
adc
insb
cmpsb
repz
adc
loope
inc
test
push
jmp
push
sbb
xor
aas
es
cmp
mov
gs
push
jns
fdivrl
fbstp
mov
add
xor
out
cmc
xchg
outsb
sti
test
cmc
add
pop
add
mov
ret
lcall
cld
aaa
into
jno
in
push
mov
lock
pop
push
pop
cmp
mov
push
mov
or
push
push
test
cmp
and
cmc
cmpsl
inc
add
adc
add
movl
movl
mov
push
jmp
lret
xlat
fcmovnbe
lret
test
pop
pop
push
imulb
mov
js
and
shlb
or
push
jecxz
sub
sub
ss
inc
ret
cmpsl
pushf
push
and
cmp
rcll
pop
jmp
lcall
xchg
add
sbbl
daa
cmc
enter
test
std
sbb
fsubl
popa
dec
enter
insb
inc
inc
gs
popf
xchg
mov
ds
subb
dec
xchg
nop
pop
mov
shr
movsl
movsb
ljmp
pop
sahf
rol
inc
mov
jge
xor
mov
xchg
mov
mov
sti
dec
dec
enter
out
mov
jnp
shl
push
bound
jl
mov
mov
push
sub
nop
cwtl
mov
ss
cli
adc
test
dec
jno
and
lret
xor
pop
xchg
lea
inc
call
insb
imul
jae
cltd
xchg
mov
adc
adc
dec
insl
stos
and
and
add
in
fimuls
push
sbb
and
bound
pushf
mov
int3
push
cmp
push
outsl
xor
xor
xor
mov
insl
and
daa
xchg
movsl
insl
aam
push
pop
xlat
xor
pop
insb
std
mov
or
cli
xchg
mov
mov
rcl
sbb
dec
sub
repnz
outsb
adc
mov
movl
enter
cmovp
lods
push
int
add
mov
xor
jns
js
sbb
dec
jne
or
xor
push
sbb
out
adcb
je
xchg
cli
xchg
jo
cs
loope
out
and
inc
xchg
test
add
pop
add
test
rcll
inc
faddl
ret
sbb
or
xchg
cmp
hlt
jne
dec
loope
and
scas
xchg
stc
popa
dec
js
aaa
imul
sbb
adc
adc
cmp
call
mov
lods
aad
fldcw
repz
push
and
add
inc
int
rcrl
aad
and
inc
popa
lret
mov
inc
pop
rcl
out
scas
mov
push
cmpsl
lea
arpl
push
mov
jg
and
cmp
pop
or
push
fistpl
mov
xor
jbe
repnz
arpl
xchg
rclb
daa
fistpl
gs
insl
lea
jnp
xor
clc
movl
mov
mov
push
mov
mov
mov
cmp
movl
je
mov
mov
xor
subl
add
cmp
je
jmp
into
xlat
ror
aad
rcr
stos
imul
and
iret
stc
daa
sbb
xchg
jle
js
and
testl
fdivr
pusha
mov
jp
test
adc
lcall
cwtl
adc
ret
xor
in
out
xor
and
imul
mov
xchg
arpl
push
test
or
aaa
xchg
in
scas
xor
xchg
es
test
addr16
pop
lods
dec
int3
dec
das
dec
add
ss
fstl
mov
out
cmp
pop
daa
jl
jnp
mov
pop
pop
xchg
dec
fldenv
dec
leave
popf
addr16
es
fucompp
cmpsb
jno
test
jp
shll
cld
and
int
push
not
aad
out
xchg
loopne
mov
cmp
cmp
lret
dec
ljmp
sbb
mov
add
xchg
test
cltd
pop
negb
push
sbb
and
fisttps
pop
cmp
loope
in
imul
daa
pop
stos
inc
dec
sbb
shr
sahf
fstpl
sbb
mov
sub
neg
add
cmc
adc
popa
cmp
outsl
push
inc
jecxz
xor
adc
cmc
mov
sub
lahf
stos
fiaddl
and
cmc
sahf
sahf
fdivl
dec
jge
divb
add
sub
push
aas
ljmp
dec
cmpsl
lods
xchg
inc
or
jns
fisttpll
xor
cmc
xor
inc
xchg
mov
mov
xor
adc
pop
and
pop
scas
pop
test
inc
or
lods
fcomip
mov
ficompl
fstpl
sub
sarl
lret
jb
sbb
inc
inc
and
out
inc
push
mov
mov
cmp
sti
xchg
xor
std
sbb
cltd
test
xchg
xchg
mov
mov
jmp
mov
sub
and
pushf
fisubs
imul
push
stc
int
xor
cmp
call
movsb
mov
pop
rorl
xchg
sbb
push
add
ja
and
cmp
mov
xor
xchg
add
cmp
scas
imul
aas
test
insl
adc
jle
fnstenv
in
ss
jae
push
aad
cs
mov
mov
mov
cmp
in
les
stos
cmp
jmp
push
andl
pop
int3
in
jmp
inc
adc
lock
addl
or
mov
cwtl
mov
pop
lahf
or
stc
ljmp
xor
jmp
pop
iret
mov
push
inc
push
inc
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
push
pushl
pushl
mov
addl
jmp
ret
leave
leave
leave
lret
add
or
xchg
jle
js
inc
mov
xor
adc
cli
andl
jp
pop
dec
stos
lret
push
subb
scas
mov
mov
hlt
test
js
jnp
das
push
pushf
rorl
mov
adc
ja
jmp
cs
push
inc
sub
hlt
repz
popl
sub
iret
inc
cmp
sti
fdivr
and
add
add
push
or
jmp
loope
mov
lea
loop
sbb
push
xchg
push
aaa
les
xchg
mov
dec
sti
daa
push
fs
xchg
lods
or
arpl
enter
sbb
jno
jp
dec
in
mov
jp
mov
bound
sbb
push
sar
out
pop
aaa
adcl
xor
fnstenv
jb
or
mov
mov
fwait
mov
push
insb
pop
pop
test
mov
arpl
fists
test
or
pop
inc
mov
jmp
test
roll
ss
in
subb
or
shrl
add
inc
dec
mov
je
hlt
fstpt
sub
inc
pushf
lcall
fsubrp
shll
rcr
and
lahf
lret
outsl
mov
in
test
fsubrs
sahf
lods
xchg
push
lods
adc
pop
outsl
inc
cli
pop
lret
enter
jnp
rcll
jp
sub
push
popa
mov
jo
shll
cltd
mov
dec
hlt
loop
cmpsl
dec
dec
dec
or
mov
daa
imul
std
jno
jae
fiadds
sahf
mov
hlt
pop
repz
loope
mov
inc
mov
mov
jb
sbb
imul
aam
in
cmp
or
es
dec
lods
sub
aas
sbb
add
dec
loopne
cli
fs
sub
sub
movsl
add
sub
sti
outsl
sti
fldpi
cmc
pop
dec
sub
movsl
aas
arpl
js
leave
mov
fwait
loope
push
pop
mov
mov
and
xlat
out
mov
jp
sbb
test
mov
or
cwtl
jge
nop
mov
shll
ret
push
fsub
adc
mov
inc
out
in
idivl
xor
out
movsl
sub
scas
sub
in
rcrb
test
pop
push
outsb
rolb
add
scas
cmp
xor
add
mov
mov
jmp
ret
int3
int3
aad
leave
roll
outsb
repz
fstps
js
pop
in
popa
cld
lahf
cmovp
into
or
cmp
push
das
add
mov
xchg
pop
sub
outsl
in
jno
dec
pop
lcall
mov
fnsave
mov
sti
inc
daa
imul
or
cmp
cmp
sbb
es
add
cli
jo
jmp
sahf
shlb
adc
pop
mov
or
inc
add
ret
daa
fildl
mov
test
sti
test
pusha
dec
stc
jmp
loopne
push
adc
enter
xchg
jae
fs
cmp
and
or
dec
inc
fwait
in
mov
jb
add
and
sti
repnz
ss
out
adc
test
xchg
mov
xlat
sub
test
arpl
arpl
fcom
fistpl
inc
sahf
movl
sti
jb
jmp
or
movsb
jo
gs
popa
scas
pop
pop
push
adc
int3
inc
pop
pop
or
mov
jbe
or
sbb
push
cmp
in
adc
scas
mov
jnp
je
inc
push
sub
lahf
pop
adcl
test
cwtl
ss
sub
inc
lods
lods
and
push
pop
insb
mov
mov
movsl
jmp
fwait
divl
sub
filds
arpl
ret
mov
dec
in
vmovdqa
sbb
into
mov
insb
les
pop
pop
add
pushf
shll
adc
xlat
xor
add
mov
mov
pop
mov
pop
push
xor
enter
jge
jb
gs
and
and
and
jo
push
push
pop
std
hlt
pop
pop
jns
or
mov
cmp
xchg
mov
cmpsl
or
mov
dec
push
dec
clc
jns
fistps
into
xor
mov
dec
adc
les
jecxz
xor
xor
test
insb
xchg
les
aaa
adc
adc
mov
push
add
insb
and
shl
jle
outsb
out
adc
add
push
mov
repz
int
inc
xchg
outsb
rsqrtps
xchg
mov
and
les
mov
rorb
repnz
and
ret
sarl
sbbl
movsb
jbe
inc
adc
mov
leave
xchg
lods
mov
mov
mov
dec
xor
and
scas
mov
and
add
insb
xchg
mov
mov
jmp
jmp
ds
int3
lret
xchg
aam
push
xor
pop
jbe
jg
xchg
jle
js
inc
icebp
pop
mov
js
jae
dec
in
cmp
pop
cs
xor
jecxz
sub
adc
mov
nop
xchg
cmpsl
add
adc
add
add
push
cmpsl
in
xor
adc
sahf
out
xor
cmpsb
mov
dec
mov
mov
out
add
out
pop
fs
cmp
iret
mov
test
xor
lock
das
int3
inc
dec
ret
mov
cltd
stos
rcll
insb
ss
mov
adc
and
orb
stos
mov
out
testb
lret
aad
enter
cwtl
pop
pop
xchg
daa
insl
pusha
push
hlt
scas
cmp
outsl
cltd
adc
dec
les
mov
test
inc
jo
sub
imul
dec
fisubrs
pop
inc
orb
adcl
shr
mov
mov
pop
mov
xlat
sbb
test
shll
daa
jbe
mov
out
out
ja
pop
and
adcl
sti
frndint
sbb
cmpsb
push
aam
aas
xchg
inc
rolb
add
leave
aad
test
movsl
mov
outsb
lret
xor
orl
adc
jnp
jae
xor
or
cltd
ret
jns
sub
pop
cmp
mov
add
test
mov
mov
xchg
jne
pop
or
fists
mov
adc
and
mov
pop
xor
insb
lahf
xchg
xor
stc
mov
insb
sbb
push
dec
mov
lods
sarb
out
ret
mov
mov
dec
rorl
push
jmp
and
out
jae
outsl
and
inc
xor
rcr
fwait
adc
fistps
les
or
das
jo
filds
repnz
push
mov
push
ja
mov
hlt
lcall
jmp
lret
mov
and
leave
mov
lods
xchg
jmp
sub
shlb
mov
imul
mov
push
push
lret
mov
dec
aas
fsubp
in
and
es
test
xchg
aad
or
fwait
ljmp
mov
push
cli
dec
rcrb
xchg
pop
pop
std
rcl
xor
xor
xchg
push
jecxz
lods
popa
or
out
outsb
hlt
ret
cs
dec
shll
loop
pop
ret
mov
sahf
insb
in
mov
jmp
rol
iret
fcmovbe
fcmovne
mov
pop
push
js
jle
js
fidivs
sub
inc
fcomi
out
es
mov
pop
leave
dec
sub
mov
loopne
ffree
clc
idivb
jl
ret
cmpsl
mov
jo
mov
shr
push
fnstenv
xchg
mov
cwtl
lods
sar
repz
sub
inc
push
sub
gs
les
inc
cmp
sbb
xor
mov
adc
mov
mov
jnp
lahf
cmc
inc
adc
sub
mov
dec
mov
push
rolb
mov
cmpsb
hlt
xchg
pusha
es
fisubrs
xchg
rcrb
push
push
repz
call
and
pop
cmp
dec
dec
jns
hlt
pusha
orl
out
inc
push
ja
jnp
inc
add
add
ds
push
sahf
and
outsl
pop
mov
and
sub
std
sbb
dec
fstp
xchg
outsl
mov
lret
inc
aas
ficomps
jle
sahf
icebp
subl
in
mov
loop
mov
and
bound
add
sub
loop
inc
xor
mov
lea
hlt
jge
mov
sub
xor
xchg
inc
nopl
addr16
mov
imul
stos
xor
and
sbb
sbbl
sbb
add
add
push
push
jle
repz
mov
mov
jl
or
xlat
ss
mov
add
fwait
lcall
sub
mov
xchg
iret
clc
iret
jb
and
mov
dec
movsl
lods
ds
cmp
sahf
dec
mov
outsl
ss
and
inc
rol
leave
push
xchg
xor
sub
xchg
cmpsl
mov
out
jnp
pop
dec
lret
loopne
mov
fisubs
pusha
daa
and
gs
shll
out
xchg
ds
and
or
test
xlat
lock
cmp
roll
ret
iret
fwait
pop
xchg
test
rclb
jns
pop
jno
adc
push
mov
xor
dec
lods
or
lahf
lea
pop
push
sar
popl
dec
dec
shr
aad
inc
push
popf
xchg
std
test
stc
sahf
xor
cli
sbb
fnsave
dec
mov
in
jge
lea
xor
jno
lcall
sbb
lcall
mov
lret
lar
ds
dec
adc
movl
test
inc
cld
xor
add
mov
mov
xor
jmp
xlat
cmp
fcmovne
push
lcall
sub
js
icebp
push
pop
dec
shrl
addr16
mov
mov
xlat
aad
aad
mov
pop
cmp
lock
cmp
loopne
dec
pop
daa
ret
in
pop
push
fbstp
inc
leave
out
aad
sub
push
push
cmpsl
lods
or
jo
mov
sub
cli
jg
jnp
rclb
int3
push
negb
rcrb
mov
push
sbb
clc
lret
jae
decl
mov
mov
push
nopl
mov
lea
sbb
nop
and
jle
mov
jnp
cmc
je
mov
shl
pushf
push
pusha
lods
cli
enter
cmp
in
push
pop
lds
scas
pop
daa
aas
mov
or
and
xchg
cmpsl
js
out
call
push
mov
test
outsl
ja
outsb
ret
jnp
sahf
mov
and
sarl
sti
imull
push
adc
clc
add
sti
sub
sbb
push
ja
enter
cli
loop
push
xchg
xrelease
push
movsb
stos
push
stc
or
xchg
adc
mov
xor
xchg
dec
mov
loope
pop
mov
cmp
add
mov
add
sbb
add
or
shlb
dec
aad
movsl
push
cmp
mov
fwait
movsl
and
fildl
mov
or
sub
aas
int3
pop
sahf
mov
loopne
scas
and
stc
sub
push
mov
sbb
and
dec
xchg
lock
mov
sub
fbstp
push
mov
fisttps
push
pop
adc
cmp
sub
loopne
leave
std
jns
test
ss
test
es
ret
mov
sbb
lock
leave
not
pop
gs
cmpsb
jbe
fcomip
fisubrs
clc
inc
popf
xchg
aad
xchg
xchg
mov
mov
mov
mov
ficoms
inc
icebp
sub
out
iret
jp
mov
rcrl
sbb
jae
mov
mov
data16
in
insl
inc
hlt
xchg
fdiv
or
dec
pop
out
pop
addb
fs
notb
outsb
out
stc
pop
inc
dec
push
leave
pop
or
ja
popa
repz
jo
aam
xchg
inc
data16
outsb
in
test
lcall
fs
push
sysret
push
push
rcll
in
mov
shl
loopne
xlat
jmp
and
pop
ljmp
xor
mov
jmp
ret
xlat
leave
rcr
rcr
xlat
cmp
mov
jg
xchg
jle
js
inc
jge
mov
mov
arpl
jl
rolb
aam
jge
jnp
clc
addr16
dec
fwait
xchg
push
test
mov
int
popa
hlt
xchg
addr16
inc
add
xchg
add
pop
and
mov
mov
add
dec
lret
rolb
ss
mov
aaa
sbb
push
dec
roll
mov
inc
lcall
cmp
adc
leave
push
jg
mov
out
jle
xlat
lods
pop
jne
mov
call
lret
scas
jno
ja
pop
jmp
push
leave
dec
enter
popf
jecxz
daa
sub
lock
sahf
or
out
das
and
adc
and
in
sti
adc
and
sbb
ret
ljmp
icebp
mov
std
adc
scas
push
push
xchg
hlt
or
insl
xlat
daa
push
mov
cld
fsubrl
arpl
sbb
mov
stos
jle
xor
xor
jns
lret
enter
pushf
ja
in
xchg
in
cmp
pop
sub
arpl
pop
inc
out
pop
les
je
cmp
and
imul
or
das
outsb
push
xchg
cmpsl
and
mov
adc
sbb
ss
int
into
imul
jne
loopne
xchg
xlat
sub
in
xor
imul
jge
js
fmul
mov
lock
dec
and
scas
int3
or
xor
ja
jns
add
inc
mov
stos
sbb
mov
gs
jp
lret
roll
xchg
fstp
ficompl
jnp
add
lock
lock
in
fs
int
pop
fsubs
sti
adc
sarl
pop
sti
loop
sub
stc
repz
imul
sbb
adc
pop
mov
nop
stos
xchg
cmpsl
and
lea
fiaddl
push
cmp
pusha
ja
sub
loopne
mov
mov
xchg
loopne
into
sub
or
lds
pop
adc
clc
loope
push
push
mov
pop
daa
sbb
inc
adc
mov
mov
pop
nop
jecxz
jno
xor
xchg
std
sbb
lods
push
add
addb
inc
push
inc
inc
xchg
dec
pop
pop
xchg
testl
enter
xchg
push
mov
loope
xchg
push
nop
adc
sti
jae
hlt
mov
mov
scas
sbb
in
stc
lret
in
add
and
orl
cmp
xor
jne
call
mov
xor
pop
jmp
rcl
rcl
rcl
and
rol
mov
jg
xchg
jle
js
ret
sub
enter
and
clc
dec
push
xor
outsl
shrl
aad
addr16
xchg
jns
xchg
cmc
fmull
movsb
mov
push
loope
mov
test
sub
xchg
lds
sahf
cwtl
movsl
scas
clc
sbb
in
out
push
lock
sub
push
sub
lea
jp
cwtl
adc
mov
sbb
lock
ret
pop
scas
pop
push
jo
add
push
std
and
adc
shlb
pop
add
mov
inc
mov
mov
xor
pop
popf
daa
rclb
or
or
imul
add
adc
imul
xchg
dec
inc
push
and
or
clc
movsb
dec
repz
or
fstp
jo
sahf
imul
cmp
ret
imul
jge
addr16
sub
out
fcompl
add
imul
addr16
fisubl
cwtl
jge
inc
cmpsl
popa
fldenv
clc
std
pop
xchg
stos
aas
aam
out
sub
push
mov
pop
push
jmp
bound
fiaddl
ja
mov
ror
movsb
testb
add
loope
clc
adc
mov
jb
je
popa
pop
jne
jo
mov
jae
ret
xor
mov
or
and
aad
data16
fists
push
mov
push
push
pusha
loope
stc
lds
test
movsb
rolb
adc
stc
xchg
test
popf
mov
push
iret
push
subb
dec
punpckhbw
out
xchg
cli
xor
shufps
jnp
clc
jg
cmp
data16
nop
sbb
shlb
shll
mov
sti
mov
mov
cmp
and
or
mov
imul
icebp
add
out
xor
pusha
sbb
call
ret
cmp
mov
lahf
xorl
cmp
stos
addr16
nop
testl
popa
pop
xchg
pop
scas
pop
push
andl
shl
pushf
out
test
pop
cltd
out
sub
inc
pop
push
jl
lret
push
mov
pop
push
daa
fcmovnbe
outsb
stc
lcall
cmp
iret
inc
inc
lret
ficoms
pop
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
dec
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
mov
mov
add
xor
cmp
jne
mov
mov
jmp
ror
xlat
cmp
jns
sub
sahf
mov
and
jg
add
push
sub
scas
or
add
adc
push
aaa
out
lods
xor
pop
inc
push
dec
xchg
stos
shll
dec
pop
iret
xor
loope
or
sbb
mov
pop
adc
leave
pop
or
pop
add
adc
icebp
add
mov
sub
out
rcrl
mov
icebp
pop
imul
out
mov
sbb
mov
rolb
jo
scas
mov
pop
loopne
rcrl
adc
cld
or
cmp
inc
or
push
and
jns
imul
and
inc
pop
xchg
inc
test
sti
inc
inc
jns
mov
sub
inc
cmp
mov
jnp
pop
arpl
fstpt
xchg
jb
sahf
inc
rcr
je
nop
fcoml
arpl
mov
cmp
outsl
mov
xor
jl
push
sub
cmp
jb
loope
iret
and
push
xchg
aas
push
call
xchg
movsl
lods
js
mov
stos
mov
pop
xor
mov
push
jl
push
push
pop
xchg
push
adc
push
outsl
test
mov
es
dec
sbb
xchg
adc
iret
or
mov
and
and
jno
lret
cli
pop
sbb
data16
add
sub
gs
pusha
in
push
cmp
sbb
adc
xchg
das
insb
dec
es
mov
pop
jecxz
pusha
inc
xchg
test
pop
movsb
imul
aam
xor
push
xchg
in
lcall
xchg
cmp
pusha
or
adc
jns
pop
shl
mov
xor
sub
cwtl
push
adc
pop
cwtl
dec
arpl
test
out
adc
push
adc
out
ljmp
ret
mov
fcom
in
mov
sub
push
sub
push
cmp
jae
mov
adc
and
add
cmp
aad
aad
popa
adc
mov
add
add
jg
add
dec
mov
sarb
out
dec
xor
fstpl
mov
or
pop
mov
push
or
sbb
pop
cmpsl
fwait
mov
jns
or
stc
cmp
jecxz
repnz
popf
push
and
cltd
or
test
cmp
xor
mov
pushf
cmp
pop
ja
inc
ds
jnp
adcl
repnz
in
lods
xor
adcl
push
test
xor
xor
aam
and
jbe
in
inc
jae
out
mov
inc
ds
lea
adc
and
in
pushf
sbb
mov
adc
adc
movsl
jg
pop
push
idiv
mov
pop
push
nop
jns
roll
lret
movsl
jge
inc
push
mov
pop
dec
daa
std
ret
or
adc
push
aam
je
cld
in
mov
sahf
jmp
push
jle
popa
inc
mov
rcrl
daa
mov
lret
leave
cmp
mov
add
insl
stc
xor
jge
lcall
xchg
insb
dec
pop
repz
test
andl
push
mov
out
xor
xchg
lods
loopne
fbstp
or
xlat
movsb
stos
cmp
jb
test
jmp
addr16
lcall
ja
inc
lods
xchg
jle
mov
inc
bound
pop
cmp
inc
insl
push
fsts
cmp
inc
dec
bound
adc
popa
jae
push
loopne
mov
adc
jno
jge
popf
or
je
leave
mov
out
add
adc
xor
sub
jno
pop
pop
das
xchg
popf
setnp
xor
mov
xor
mov
cmp
aas
out
icebp
mul
fdivrs
push
mov
cltd
je
and
fwait
dec
add
pop
std
add
push
pop
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
jmp
cmp
int3
leave
fnstenv
or
scas
adc
jg
add
nop
dec
idiv
jecxz
fsubl
and
test
stos
pushf
jb
in
mov
lcall
test
aas
push
dec
or
xor
mov
ljmp
stos
movsb
sbb
xchg
push
pop
push
in
mov
popa
dec
lock
mov
adc
pop
clc
clc
jle
les
add
mov
mov
out
jle
clc
cmp
pop
out
or
jae
lock
aas
xchg
flds
cmp
lea
dec
xchg
add
dec
mov
fisttpll
jmp
gs
pusha
jecxz
pop
gs
lret
andb
lahf
lret
inc
enter
mov
mov
sbb
adcl
addr16
repz
push
inc
inc
fistpl
mov
xchg
and
pop
jge
outsb
mov
cmp
xchg
pop
cmp
lahf
mov
mov
insb
xchg
je
mov
mov
mov
ss
cmp
or
movsl
or
enter
fs
and
bound
fistpll
lods
out
cmp
sub
in
inc
pxor
scas
leave
fcoml
fistl
cmp
sbb
push
dec
inc
loope
xchg
push
and
mov
pop
daa
xchg
fcoml
aad
push
jmp
jge
mov
mov
icebp
add
sahf
xlat
mov
ja
lea
xchg
dec
cmp
hlt
xor
aaa
repnz
out
mov
enter
adc
mov
xchg
sub
dec
imul
inc
ljmp
lret
ss
or
mov
sub
or
in
mov
xor
sbbl
jbe
sbb
mov
daa
pop
xor
push
insl
pop
in
cld
es
cmpsb
clc
mov
mov
pop
in
pop
in
sub
je
xor
add
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
adc
mov
inc
mov
andl
xor
orl
add
movl
mov
not
movl
mov
movl
mov
mov
push
movl
mov
mov
cmp
movl
je
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
jmp
ret
ret
leave
lret
decl
adc
js
jle
js
in
push
lock
pop
cmp
xor
dec
in
push
repnz
cwtl
pop
mov
jl
jg
lods
mov
movups
aad
sub
xchg
add
push
ds
cltd
in
pop
sub
fcompl
lods
cmc
clc
xchg
push
push
rol
repz
xchg
insl
out
mov
xchg
daa
mov
movsb
dec
pop
leave
and
ljmp
and
dec
mov
dec
outsl
insl
mov
mov
testl
loope
lock
test
bound
mov
test
out
push
xor
fs
add
popa
stc
jnp
mov
aad
xor
cmp
fistl
adc
add
mov
in
mov
leave
dec
push
add
subb
push
out
rcl
or
or
inc
or
sub
xchg
cmp
push
push
cmp
adc
rol
xor
in
sub
gs
or
mov
mov
dec
call
punpckhdq
xchg
insb
lahf
adc
or
add
sbb
mov
mov
in
cmp
xchg
jmp
jo
inc
les
pop
ret
inc
int
scas
lret
jmp
dec
aam
push
or
ret
js
inc
nop
int3
sub
mov
inc
adc
in
mov
movsl
push
cld
jp
mov
add
cld
lret
xchg
insb
or
bound
stos
bound
mov
nop
jmp
mov
mov
mov
call
inc
push
or
push
mov
inc
subl
ljmp
push
lahf
sub
add
data16
jmp
jno
aam
sub
push
add
xor
in
mov
sbb
dec
adc
arpl
jmp
arpl
sbb
sub
or
add
mov
into
jno
mov
ret
fsubrs
mov
sbb
sub
or
dec
inc
int3
or
sbb
scas
xor
fnstcw
lahf
push
cmp
pop
xor
fdivs
and
push
mov
push
pusha
fcoms
lahf
rorb
fcoml
pop
packssdw
fdivr
aad
lahf
sbb
sbb
xchg
subb
xchg
fldcw
movsb
fwait
mov
out
hlt
mov
jne
aaa
xchg
xchg
sbb
das
mov
fdivrl
std
fistpll
adc
add
mov
cmc
stos
mov
negl
mov
mov
adc
xor
xchg
jns
out
dec
add
inc
add
xchg
inc
out
ret
cli
cmp
cld
fistl
rcr
or
insl
dec
rcrl
xor
xor
lea
xor
jmp
sarb
xlat
xlat
loope
pop
popf
mov
sbb
js
jle
js
push
push
push
push
lock
lret
xchg
outsb
or
dec
aad
mov
aaa
push
sbb
push
and
mov
xchg
mov
dec
or
arpl
mov
and
mov
jb
imull
and
cmp
inc
sub
ljmp
adc
stc
das
enter
xchg
dec
je
push
cs
test
ja
ja
adc
jo
dec
jl
loopne
mov
cld
mov
cmp
push
divb
gs
ds
imul
mov
ds
cmp
adc
pop
inc
cs
add
inc
jnp
stc
or
inc
lret
pop
fimuls
pop
mov
xor
push
and
mov
mov
sbb
jbe
fs
push
jmp
ret
cmpsb
push
dec
hlt
lds
sbb
hlt
sti
fcoml
rcrl
stos
push
leave
fidivs
sti
xchg
push
test
ret
fs
fadd
test
xchg
xor
adc
repz
dec
imul
adc
lods
mov
mov
xlat
jecxz
pop
fisubrl
push
inc
inc
sub
loopne
fbstp
lret
xchg
ljmp
outsb
movsb
cmp
sbb
std
out
icebp
xchg
jmp
int
fcmovnbe
jp
adc
add
adc
decl
int3
fistps
adc
adc
lods
outsb
jno
outsl
mov
sub
cmc
or
sub
push
test
divl
int
mov
cld
or
std
pop
sbb
shlb
or
push
and
xchg
lcall
lcall
aaa
adc
cmp
lea
mov
jnp
cmp
jl
stos
sbb
movb
pop
and
xchg
push
ja
adc
jae
mov
xlat
pop
jno
pop
dec
je
and
jmp
cmpsb
sub
ljmp
insl
loopne
outsb
fs
add
cmp
out
outsb
inc
dec
mov
out
fdivr
push
jae
xchg
clc
repnz
inc
jg
cmpsb
sub
dec
xor
aam
fists
jns
rol
mov
mov
aad
mov
and
fwait
imul
adc
aam
popa
int3
xor
lods
fbld
mov
xor
or
jmp
and
mov
jecxz
fxch
xor
shll
push
adc
ljmp
in
mov
lcall
and
push
mov
divl
into
lret
mov
xchg
daa
inc
inc
lret
fcoms
xchg
in
mov
icebp
cmp
jne
jmp
jmp
int3
les
aam
ror
mov
xor
js
jle
js
jno
ret
stos
lds
jmp
orb
lret
pop
inc
sub
fnstcw
imul
std
adc
icebp
inc
add
mov
and
int
or
adc
sbb
dec
and
xchg
inc
xor
sarb
stos
cmp
dec
gs
notb
push
mov
push
sbb
adc
loope
stos
and
mov
and
clc
pop
cli
fisubrl
mov
test
add
inc
jnp
sub
cmc
jae
notl
cmp
inc
inc
cmp
or
sbb
xor
xor
mov
push
sbb
or
or
loope
mov
or
add
jle
sarb
or
pop
jle
add
and
outsb
aad
and
mov
jle
cltd
jno
lds
daa
push
les
and
sbb
rclb
dec
mov
pop
pop
sahf
jecxz
rolb
xchg
scas
stc
movsb
xchg
push
mov
push
fisttpl
daa
fadds
in
cmp
cmp
popa
dec
mov
out
sub
cmpsl
aas
add
fdivrs
jg
and
stos
adc
xchg
loop
fprem1
sbb
popa
popa
and
dec
call
sbbb
imul
shll
dec
leave
and
dec
notl
daa
sub
or
test
das
outsb
add
adc
jb
arpl
shlb
in
or
sbb
push
add
xchg
xchg
jecxz
aad
out
add
cmp
mov
jg
sbb
inc
xor
mov
pop
sahf
xchg
adc
loope
imul
lds
sub
data16
inc
sbb
js
xchg
mov
pop
je
out
addb
xor
sbbl
das
pop
lock
es
mov
cwtl
dec
xor
mov
mov
pop
leave
dec
je
shrl
cmpsl
sbb
cmpsb
sete
loopne
jnp
add
cmp
es
pop
pop
sub
xlat
popa
xchg
daa
mov
fisubrl
insl
mov
dec
gs
jecxz
inc
loop
call
xchg
mov
sahf
mov
lock
inc
cmc
in
inc
leave
arpl
rcrl
cmp
push
pusha
sub
or
mov
loope
pop
int
fmull
mov
cs
push
lcall
cmp
js
addps
mov
sub
pop
jecxz
repnz
xchg
jnp
jge
cwtl
xchg
inc
stc
adc
lea
push
mov
clc
cmp
sbb
jbe
cmc
leave
movsb
jb
xchg
dec
loope
xor
out
movsb
sbb
adcl
in
cmpl
push
xor
add
test
stc
ret
push
out
add
mov
xor
add
mov
mov
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
jmp
cmp
rcl
fcmove
test
pop
jo
jg,pt
jnp
js
aad
mov
push
loop
in
mov
sbb
mov
pop
bound
mov
or
std
stc
mov
aas
add
fimuls
jl
rcrb
jp
xchg
push
or
out
adc
gs
outsb
push
adc
sub
inc
fnsave
mov
dec
lcall
jb
js
enter
push
mov
shll
mov
bound
in
jns
fldenv
sbb
pop
pop
jo
mov
mov
movsl
cmp
mov
mov
jp
cli
jnp
cs
daa
mov
sub
adc
cmp
mov
xor
loopne
dec
mov
fnstenv
or
xor
vmwrite
mov
push
cmpl
jp
mov
repz
dec
xorl
pop
es
cmp
insb
xchg
shl
pop
xchg
test
push
add
xchg
inc
and
mov
imul
pop
sub
jno
sub
rcl
cmp
cltd
test
insl
outsb
ficoml
imull
aas
cmp
cmpsl
movsl
push
daa
out
scas
fisubrs
or
sub
inc
stos
cltd
int
sar
cmp
mov
cmp
and
cmc
jl
mov
jno
lcall
sbb
ljmp
xchg
das
out
loope
js
or
jnp
repz
addr16
fmull
cmp
push
in
in
out
stc
sub
fsubs
pop
lods
int
jne
arpl
enter
pusha
mov
je
lret
dec
dec
popf
test
mov
or
xchg
xchg
scas
mov
fcoml
stos
addr16
push
mov
inc
shrl
jnp
movl
xor
out
cmp
fldt
cld
test
inc
into
xchg
insb
loope
inc
jcxz
sarb
pop
adc
sahf
cltd
ja
pop
push
inc
lods
and
cmpb
sub
aas
ret
push
mov
mov
fcoml
inc
push
inc
mov
cmp
shlb
add
dec
mov
nop
dec
cmc
xchg
mov
or
ret
or
xchg
fcomps
add
pusha
ds
cmpsb
cmp
mov
loopne
xlat
rcl
popa
mov
push
pop
adc
push
inc
push
mov
adc
mov
cld
dec
adc
push
pop
jmp
or
inc
test
xor
sub
out
lds
bound
outsl
jo
xchg
add
in
add
movsl
lock
jmp
sar
int
xchg
jmp
mov
arpl
cmpsl
inc
cmpsl
cmp
push
mov
mov
or
lahf
in
xor
mov
jmp
lret
into
ret
ret
lret
xor
stos
push
ljmp
js
jle
js
or
cmp
les
jecxz
imul
xor
xor
ret
sbb
test
stc
pop
adc
cli
sub
inc
push
test
mov
adc
int
cmp
ficoms
mov
jne
adc
xchg
mov
mov
ja
lods
pop
sub
cmpsl
test
sbb
insb
jecxz
inc
rcl
jle
pop
ficomps
mov
pop
mov
inc
dec
lods
jmp
jg
push
sbb
stos
or
aam
push
cmpsl
das
xchg
inc
mov
and
push
les
enter
movsb
imul
or
rcl
mov
inc
fldl
cwtl
std
dec
adc
mov
mov
pop
push
js
push
lds
cs
mov
and
in
mov
arpl
dec
popf
mov
fsubrs
pop
cli
outsb
mov
mov
xor
xor
rep
xlat
adc
pop
add
ss
lea
mov
pop
and
xchg
aas
mov
je
mov
cmpsb
jl
test
test
xor
cmp
xchg
ja
mov
movsl
imul
aas
rcll
push
xchg
aaa
jle
divl
mov
cs
sahf
mov
out
leave
fldt
sbb
xor
fcoms
and
enter
adc
sub
xchg
ret
jmp
hlt
cmpsl
lods
inc
outsw
add
sub
ja
test
leave
inc
dec
enter
inc
cmp
data16
loop
stos
jl
jecxz
xor
mov
clc
ret
xchg
out
hlt
rclb
mov
jno
cmpsb
mov
inc
xor
leave
mov
nop
aam
int
adc
adc
inc
sub
and
popf
push
push
pop
lock
add
ss
sub
push
push
push
sbb
xor
push
add
mov
xchg
xchg
outsb
pop
jnp
xchg
cmpb
jbe
push
push
scas
das
pop
xchg
xor
jbe
sub
push
push
es
sbb
in
dec
jns
imul
or
cmp
aas
push
pop
lods
jp
adc
adc
fisttpll
pop
and
popa
add
jp
mov
lods
pop
lods
ret
jmp
aam
lea
cwtl
sub
mov
jae
add
sub
push
mov
jne
hlt
xor
xchg
add
pop
inc
push
pop
clc
mov
adc
and
repnz
mov
fcmovb
jmp
insb
mov
jns
enter
cmp
test
or
push
push
pop
movsl
arpl
insb
and
jge
lods
pop
mov
xorl
or
xor
add
add
rol
leave
shll
or
js
sarb
jle
js
bswap
jbe
cld
out
idivl
pop
lods
popf
mov
adc
fstpl
sbb
adc
sub
jge
aas
movsb
outsl
mov
mov
sbb
pop
mov
sarl
cmp
xchg
and
push
or
inc
mov
fcmovnb
out
rcll
mov
jg
pop
and
push
fidivs
and
mov
cwtl
sbb
dec
imul
lcall
subb
dec
mov
arpl
jb
xchg
dec
sub
push
insl
add
sar
movsb
or
jnp
jle
adc
mov
js
mov
clc
push
adc
rcrb
dec
push
xchg
shrl
inc
jno
scas
sbbl
or
and
mov
popf
fidivl
xlat
lahf
dec
push
fwait
push
sarb
adc
sub
test
mov
mov
cltd
push
push
add
pop
les
orb
pop
mov
add
mov
ror
push
jno
cmp
testb
xor
dec
iret
xchg
xchg
or
jl
add
in
push
bound
lret
ss
mov
push
dec
lds
push
ljmp
out
ljmp
mov
loope
scas
pushf
mov
test
scas
out
or
fistps
mov
in
mov
sbb
sbb
pop
pushl
mov
popf
iret
mov
or
push
adc
pop
mov
popa
test
xlat
loope
movsb
xor
sbb
fptan
cmp
popf
jbe
jae
jnp
je
and
jmp
hlt
flds
out
push
aam
bound
and
leave
popa
sub
insl
int3
sbb
adc
loope
xchg
cltd
es
inc
push
xor
add
or
fs
fldt
jne
and
cld
xchg
mov
aam
or
xchg
pop
int3
mov
fbld
das
mov
idivl
scas
cmp
mov
rcrl
adcl
loopne
js
popf
dec
mov
pop
add
fildl
jnp
data16
xor
jae
lret
add
rolb
mov
dec
cmp
cmp
jle
xchg
jb
xor
mov
clc
js
inc
xorb
int
mov
test
cmp
sub
xchg
sub
lcall
gs
pop
inc
xchg
dec
lcall
jae
adc
cld
call
ja
or
jno
pop
popa
adc
sub
push
lcall
clc
shr
stos
adc
mov
pop
or
sub
xor
mov
mov
jmp
mov
leave
ret
push
mov
sub
jmp
rcl
ret
into
rcl
daa
jle
mov
adc
js
jle
js
pop
loop
sarb
aas
dec
jae
out
je
fcoms
bswap
inc
cmpsb
xorb
movsl
sti
jp
out
jg
out
mov
popl
jmp
dec
into
lret
repz
dec
xor
pop
insl
mov
add
popf
sub
cltd
push
mov
iret
xor
jae
push
cmp
sbb
xlat
adc
pop
loopne
jp
dec
xchg
mov
call
sbb
mov
int3
sub
and
mov
add
daa
mov
mov
movsb
sbb
jge
inc
jno
adc
or
cmpsb
mov
adc
xor
pop
xlat
push
cmp
lods
xchg
sub
lock
inc
mov
jnp
mov
mov
mov
adc
sbb
iret
dec
jns
insb
and
imul
push
and
out
enter
out
popa
pushf
push
push
divb
sub
cltd
test
mov
sbb
imul
mov
into
pop
pop
or
and
jae
xchg
mov
lret
js
in
clc
sbb
xor
xchg
movsl
add
xchg
insb
jp
inc
jno
push
push
mov
sbb
scas
ja
jo
sbb
adc
or
rol
cmp
pop
mov
sbb
int
mov
push
jbe
mov
ror
incb
push
cmp
push
fdivs
xchg
sbb
test
fisubrs
leave
ficompl
mov
adc
repnz
jg
sub
mov
rclb
repz
adc
hlt
cwtl
lods
ds
xor
notb
pop
int3
mov
andl
lods
sbb
pushf
or
das
sbb
in
pop
jp
jbe
or
mov
sub
leave
and
inc
cld
cmp
jge
inc
add
add
add
leave
add
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
adcl
movl
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
and
push
add
mov
and
xor
movzbl
adc
mov
adcl
add
incl
mov
mov
push
movl
push
test
movl
je
jmp
lret
fld
scas
inc
adc
mov
jg
adc
js
adc
sub
jb
add
cmp
jno
mov
or
dec
sbb
incl
add
vrsqrtps
ror
xchg
jb
push
pop
mov
pop
imul
xchg
out
ret
xchg
int
repz
cmp
mov
sub
mov
and
jecxz
pop
mov
push
dec
out
adc
sub
ljmp
push
lods
cmp
inc
test
sarb
inc
mov
add
mov
nop
enter
push
aaa
jns
and
inc
mov
xor
jge
push
enter
test
out
xchg
ss
out
stc
add
loopne
xor
test
lret
pop
fs
ret
push
mov
hlt
mov
int
pop
je
nop
mov
pop
jg
dec
xlat
cli
gs
cwtl
in
push
gs
and
dec
jge
div
sahf
jne
movsb
ret
jmp
mov
nop
adc
insl
cwtl
push
xchg
dec
call
mov
data16
testb
pop
imull
outsb
hlt
xor
push
mov
sbb
jne
cli
sbb
mov
push
or
mov
push
mov
mull
inc
push
scas
leave
pop
cmp
dec
popa
mov
mov
dec
fsubl
pushl
aam
dec
push
lds
jne
aam
add
arpl
fdivr
push
lods
and
add
sbbl
and
nop
call
movsb
lret
xor
sbb
or
es
push
push
cld
repz
sub
or
popa
jne
sbb
mov
movsl
cmp
bound
rorl
pusha
fsubl
sub
ss
pop
sbb
inc
fbstp
sbb
pop
in
into
mov
in
test
fildll
cmpsb
push
xchg
call
arpl
push
cld
lret
fnstcw
mov
insl
jb
jmp
dec
adc
testb
scas
shlb
cmp
mov
add
sub
mov
mov
notl
xchg
addl
jmp
iret
iret
xlat
xlat
iret
xlat
cmpsb
call
mov
cmp
jg
adc
js
jp
pusha
cli
ret
jmp
mov
test
iret
lods
mov
or
sbb
scas
int3
lds
add
xor
ret
lock
int3
icebp
sbb
outsb
movsl
push
das
or
outsl
push
call
mov
sub
ret
pop
loop
call
mull
dec
mov
mov
fstl
data16
fwait
mov
xchg
sub
add
mov
and
insl
pop
jecxz
pop
popa
mov
mov
cmp
dec
sub
mov
mov
cwtl
jle
xchg
ljmp
xlat
cmp
jecxz
popa
xchg
jl
scas
mov
iret
mov
or
and
jg
jecxz
shlb
push
gs
shrb
addr16
shlb
mov
movsb
xor
clc
cli
mov
sbb
cmpsb
test
fsubrl
pop
shl
int3
pop
push
xchg
cs
das
std
add
mov
sub
xchg
lret
roll
mov
in
xchg
mov
push
cs
loope
test
jg
push
sub
or
insl
shrl
mov
mov
jle
jne
fnstenv
cli
les
cmpsl
test
cs
ds
in
stc
xor
aas
lret
dec
xor
bound
sbb
outsb
std
clc
fdivp
sub
add
pop
mov
or
mov
inc
xchg
ljmp
sti
jle
cmpsl
dec
add
jb
mov
mov
out
jne
insb
mov
int3
sbb
out
xchg
sub
ljmp
les
jne
add
insl
mov
xor
cs
sub
mov
cs
insl
sub
jg
jb,pn
push
loop
adc
xor
call
popf
loope
out
negb
es
dec
and
insl
rcrl
shlb
sub
adc
xor
xorl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
adc
mov
and
mov
add
mov
mov
adcl
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adc
add
mov
mov
jmp
cmp
fcmovbe
aad
xorl
xor
ror
jg
adc
js
xchg
lock
repz
mov
inc
aas
ds
and
sbb
mov
sti
out
sbb
out
test
loopne
loope
cmp
dec
cmp
jno
mov
sbb
jno
incb
stc
sbb
out
add
dec
popf
imul
push
aas
mov
add
outsb
mov
mov
aaa
popf
fstps
xorb
add
ret
stos
sbbb
jnp
in
jns
out
ret
insl
jne
push
inc
out
bound
inc
add
cmp
push
add
lds
cwtl
sbb
inc
xchg
mov
mov
push
out
adc
mov
lds
add
jle
shlb
ds
xor
xor
mov
cli
out
or
and
aam
cmp
clc
xor
cli
fiaddl
addr16
or
mov
repnz
test
lods
push
add
cld
push
pop
add
pop
add
mov
movsb
out
inc
xlat
loopne
lcall
lds
xchg
push
cmp
pop
or
push
mov
jbe
loopne
pop
icebp
jnp
push
adc
fisubl
mov
mov
dec
lods
out
mov
ljmp
jl
jge
cmp
xchg
xor
cmpb
das
add
jg
ficomps
fnsave
sbb
push
push
adc
pop
jmp
inc
nop
mov
sarb
xor
shlb
ret
cmp
xchg
or
fdivl
mov
push
jbe
sub
lods
lods
xor
mov
outsb
cmp
rol
hlt
andl
dec
cli
or
adc
ja
sti
push
lret
sar
stos
imul
pop
lods
add
jno
add
add
jb
movsl
push
fcmovbe
push
adc
inc
sub
xor
ds
lret
mov
ret
mov
pop
sti
adc
je
inc
mov
xor
sbbl
add
movl
cmp
movl
jmp
into
ror
leave
push
or
mov
ret
int
js
jle
js
outsb
sbb
cmp
mov
mov
adc
lcall
fwait
lods
lods
jns
push
mov
fbstp
sbb
add
hlt
and
sbb
mov
push
lret
inc
adc
ljmp
test
call
scas
push
jmp
xor
or
or
into
xchg
mov
xchg
bound
inc
pop
js
int
pushf
mov
test
scas
mov
xchg
in
jp
lret
sbb
sub
push
cmp
mov
movsb
jle
lods
nop
ss
sub
cwtl
lahf
push
dec
and
jb
movsb
fsubr
cmp
cmp
adc
xchg
push
mov
hlt
pushf
ja
mov
xchg
sub
jecxz
xor
lret
clc
sbb
lret
jno
and
push
loopne
xchg
sbb
adcb
popa
xlat
subb
push
mov
push
inc
and
ret
gs
popf
mov
or
aas
scas
fsts
cwtl
cmp
mov
xchg
adc
lock
enter
decl
fnstenv
popf
sbb
sbb
jg
mov
pop
aad
imul
sub
cmpl
aad
sub
xchg
out
jae
clc
ljmp
add
xchg
aad
lds
pop
stos
rcr
jl
inc
das
cwtl
fisubs
mov
aaa
inc
das
addr16
insl
int3
jo
xchg
addb
flds
outsl
data16
lret
sub
sbb
mov
sbb
mov
jmp
in
insb
insl
insl
into
jno
adc
loopne
xor
xor
loope
push
movsl
mov
mov
roll
pushf
jne
dec
fbld
inc
aad
ds
pop
das
xchg
testl
and
fwait
mov
loop
jo
les
mov
punpckhwd
mov
mov
fstpl
dec
test
rol
mov
lds
data16
push
xor
jne
addl
pushl
orl
call
and
mov
jmp
aas
into
leave
int
into
fwait
orb
pop
jecxz
adc
js
jle
js
xchg
ja
xor
mov
xor
cmp
xor
fistpl
mov
xchg
mov
pop
outsl
mov
fcompl
in
sbb
push
fcmovnbe
int
fisubrs
stos
std
aam
icebp
push
mov
or
test
sbb
push
fstps
adc
pop
pop
in
mov
mov
ljmp
imulb
xor
dec
popa
shll
sbb
mov
fsubr
add
mov
sahf
mov
aas
shlb
imul
into
cmc
and
in
jp,pn
push
test
pop
aam
add
aaa
stos
fidivl
push
cmpsb
mov
cmp
lcall
iret
and
inc
jae
mov
leave
jae
xlat
iret
or
popf
aam
cmp
mov
xor
xor
addr16
mov
jo
shr
jae
ds
xchg
jne
cmpsl
daa
push
rolb
aad
int
int
out
sub
or
icebp
in
mov
in
jbe
inc
rorl
mov
lock
test
adc
pop
and
lahf
xchg
inc
sub
out
or
and
sub
js
jns
lret
push
sbb
xor
mov
pop
mov
inc
out
mov
test
inc
fnsave
xor
in
movsl
into
aam
ja
jg
cmp
sti
test
xor
jg
lcall
es
mov
cmpsb
pop
out
add
or
xor
mov
mov
ret
xchg
into
cmp
sbb
cli
jae
addb
mov
cmp
outsl
imul
pop
int3
imul
sti
push
dec
adc
sub
dec
stos
inc
stos
nop/reserved
scas
inc
fsubl
andb
push
shld
fsub
and
dec
dec
inc
push
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
mov
movl
xor
add
cmp
movl
je
pushl
subl
pushl
call
jmp
les
iret
rcr
leave
push
push
in
je
fcompl
sarl
adc
js
add
scas
or
push
std
popa
jb
call
aas
fidivl
xor
div
dec
mov
and
in
add
out
insl
mov
inc
leave
mov
xor
imul
scas
cltd
pop
push
fadd
mov
pop
outsb
cs
pop
mov
jp
imul
jg
sub
mov
addl
jle
test
pusha
inc
mov
movsb
daa
rcl
movsl
mov
jno
or
lea
push
push
shl
sahf
sub
xor
cwtl
xor
dec
pusha
cmp
cmp
sub
and
repnz
or
mov
cwtl
pop
mov
cmpsb
movsl
pop
outsl
cwtl
add
adc
adc
xor
mov
mov
in
mov
pop
xchg
stos
jno
or
dec
fists
out
adc
cmp
pop
imul
mov
mov
mov
cmpsb
adc
je
pop
stos
fistl
sahf
arpl
lahf
sbb
sub
fnstcw
cmp
int3
fisttpl
ret
das
fildl
inc
mov
js
adc
cld
jl
push
int
popf
andb
stc
sbb
mov
push
xchg
dec
jns
ficompl
addr16
sbb
cld
fiaddl
fmull
add
jl
mov
ret
or
fsubrl
daa
loope
mov
xor
push
push
sbb
fwait
mov
call
dec
jg
aam
and
jg
sbb
sub
sbb
pop
xchg
jne
jo
out
pop
xchg
loop
fidivrl
lds
cltd
xor
mov
pop
es
jae
pop
lcall
inc
dec
or
icebp
sar
mov
in
mov
xlat
and
push
pop
push
lret
sub
or
in
inc
mov
pop
bound
cmp
mov
mov
and
pop
insb
jmp
pop
cmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
jmp
lret
cmp
rcr
leave
mov
and
in
out
xchg
call
adc
js
sbb
imul
int
add
roll
xchg
out
inc
jle
in
cmc
cmp
outsb
sub
pop
insl
or
cmc
sub
pop
icebp
jbe
jne
push
out
cli
fmull
inc
pop
pusha
push
sbb
lea
stos
ja
sub
cs
ret
loop
addr16
nop
test
std
mov
and
ret
cwtl
pushf
sbb
xor
xor
int3
add
dec
stos
cld
sbb
mov
aad
mov
mov
mov
es
xor
leave
xlat
xor
mov
sbb
push
cmp
popa
aaa
xchg
jb
shl
dec
in
cs
lds
pop
cmpsb
mov
inc
add
or
sahf
notb
hlt
call
xchg
ss
push
cltd
xchg
and
adc
mov
cmp
xlat
test
xchg
add
std
imul
jmp
xchg
test
sub
pop
dec
outsl
mov
daa
and
mov
pop
fbld
pop
mov
jmp
testb
dec
push
cmp
fistps
sbb
mov
or
xchg
arpl
mov
insb
mov
js
outsl
data16
mov
cmpsl
test
cmp
sub
pusha
cld
and
stos
xchg
lahf
push
or
insb
sub
les
pop
lds
push
mov
ficoms
gs
sub
inc
imul
imul
mov
jbe
xor
je
ret
add
xchg
das
push
inc
push
loopne
movsl
aam
enter
mov
xchg
xchg
repz
or
mov
nop
cmpl
test
jne
jp
adcb
or
inc
popa
xlat
out
or
fs
pop
inc
jb
outsl
jecxz
sahf
mov
mov
addb
rorb
mov
or
shrl
pop
insl
fs
push
lock
lods
pop
mov
es
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
rcl
xlat
int3
aad
fcmovnu
ss
inc
sub
push
cmovs
jg
adc
js
mov
sbb
faddl
mov
mov
ds
sbb
stc
mov
clc
mov
xor
lea
int3
addr16
jcxz
inc
cld
repnz
ret
inc
ret
jge
in
xchg
jb
or
or
std
andl
js
pop
cld
cmp
clc
jle
cmc
shlb
add
arpl
mov
scas
enter
stc
stos
jecxz
insl
hlt
shll
push
loopne
xor
popf
sbb
sub
mov
stos
add
jle
add
cwtl
mov
push
rolb
jnp
subb
dec
cmp
xlat
jg
mov
mov
jb
mov
dec
ret
adcl
iret
ret
inc
cld
out
xchg
cld
dec
dec
mov
or
inc
cli
jns
int3
xor
test
test
jbe
nop
mov
add
push
dec
jbe
mov
hlt
sbb
sti
test
adc
push
push
mov
mov
int3
sub
mov
addr16
cmc
fidivrs
jne
in
in
aam
sarl
cmp
popa
popf
jmp
mov
push
fdivs
add
push
in
out
cs
orb
out
mov
push
jo
jmp
mov
outsl
inc
mov
jno
jae
jo
jle
or
mov
mov
popa
cmp
mov
dec
insl
addr16
mov
pop
sbbl
dec
push
sub
dec
xor
lock
mov
cmp
addr16
xor
fdivr
push
scas
std
shlb
cmpsl
sbb
inc
movsb
mov
pop
sysret
jns
mov
xchg
adc
ret
daa
add
bound
out
andb
mov
fiaddl
cli
pop
lea
fisubrs
in
pop
in
xchg
pushf
and
sarb
inc
pop
fildl
adc
mov
mov
scas
sub
push
fdivp
lcall
sbb
pop
jmp
rcl
aas
leave
cmp
pushf
mov
and
adc
js
push
inc
push
call
movsb
xchg
or
push
fildl
add
mov
push
sbb
add
sahf
pop
ss
mov
int3
jecxz
imul
xchg
and
and
cmp
sub
jno
lret
in
arpl
xchg
int
sahf
mov
mov
mov
fwait
in
fs
in
lods
or
xlat
test
dec
push
xor
fisubrs
loopne
sbb
or
push
loop
cmc
xor
gs
repz
test
je
add
jbe
mov
repz
mov
and
fldenv
xchg
inc
and
xchg
popf
xor
xchg
mov
shlb
stos
cli
push
cmp
insl
stc
loop
jb
clc
lcall
sbb
test
sub
dec
push
xor
push
jo
mov
push
enter
cltd
out
inc
dec
inc
mov
aad
cmc
push
jle
cmpsl
out
test
jmp
ja
fwait
test
outsl
jl
inc
xchg
jmp
push
lods
and
test
out
push
ss
les
and
je
inc
fisubs
mov
cs
std
fucom
cmpsl
mov
xchg
roll
xor
dec
add
out
push
rclb
jl
mov
sbb
jmp
sub
inc
jbe
arpl
adc
sbb
xchg
repnz
push
out
add
xor
sbb
shrb
xor
sub
roll
mov
pop
mov
push
cmp
dec
fnstcw
dec
shrb
adc
lods
cli
stos
mov
cs
das
add
pop
sbb
daa
push
sbb
icebp
fucomp
jnp
push
and
jle
ss
sbb
xchg
pop
insb
cmp
rcll
mov
in
or
rcrl
idivb
aas
cs
sbb
aad
mov
or
push
cmp
mov
or
fldl2t
xor
add
ret
aas
fxch
rcr
mov
stos
push
cmp
jg
adc
js
in
lods
mov
dec
xchg
push
add
inc
fistl
adc
push
test
mov
pop
icebp
cmp
ja
and
add
fcmovnbe
dec
sbb
push
mov
inc
sbb
aam
mov
or
push
sub
adc
ds
lret
hlt
notb
xor
aas
out
mov
mov
cmpsb
push
sbb
in
lea
icebp
mov
mov
popfw
xchg
jmp
call
push
js
adc
adc
ror
cmpsb
idivl
ret
and
cld
cmp
cmpsl
rcrl
push
lods
int
xchg
cmpsb
cmp
fcmovnu
mov
ds
xchg
movsb
dec
sub
daa
test
xor
xor
nop
ja
dec
and
jbe
xchg
dec
incl
xor
dec
lock
lahf
mov
out
mov
cmpsl
pushf
jns
adc
pop
push
clc
cmpsb
dec
push
into
lahf
dec
push
dec
insl
sub
xchg
cmp
xor
inc
xor
loopne
push
jmp
clc
or
mov
mov
pop
cmpsb
cli
in
test
push
testl
pop
ja
outsl
sti
test
push
or
clc
sub
cmpsl
add
lock
inc
mov
cld
sub
in
dec
pop
ss
lret
cli
fs
pop
aas
pop
enter
in
xor
push
cs
pop
pop
scas
daa
mov
loop
scas
mov
push
arpl
les
xor
in
lea
jg
fcompl
ljmp
aas
pop
repz
lahf
aaa
dec
push
mov
mov
mov
imul
dec
jne
rclb
inc
mov
push
gs
je
pop
pop
xchg
lret
mov
add
mov
filds
xchg
mov
test
jae
out
add
or
sub
lock
jnp
ss
lret
mov
dec
subb
fiadds
cmc
dec
gs
dec
mov
gs
lods
out
push
fidivs
add
xor
add
int
int
fnstcw
out
notb
fidivrs
adc
js
outsb
pop
test
pop
push
mov
or
inc
and
movl
xchg
add
jmp
hlt
and
mov
mov
std
cmp
add
xor
popa
repnz
shrb
adc
push
push
pop
out
sub
cmc
aaa
pusha
rcrb
out
sti
repnz
test
xcrypt-ecb
cmpsl
lret
pop
stos
ficomps
fcom
out
int
decl
mov
mov
nop
mov
fmuls
cmp
xchg
and
and
movsl
mov
and
lock
sub
mov
add
or
dec
pusha
mov
fbstp
test
imul
adc
cmp
mov
inc
pop
xor
in
jle
insl
and
dec
sub
jg
xchg
push
mov
sarb
mov
imul
push
dec
mov
aad
jae
mov
xor
fisubl
xor
sti
jle
fldcw
sti
mov
pop
sub
ss
mov
fdivrl
add
xor
adc
outsb
dec
ss
or
jle
push
or
dec
les
mov
fsubrs
add
in
orl
jl
cmp
popa
pop
xchg
bnd
jecxz
adc
incl
pop
scas
xchg
pop
or
aam
imul
loopne
repz
out
je
dec
xor
movsl
loop
mov
lret
xor
or
or
out
mov
aam
cmp
ss
mov
sbb
iret
stos
jecxz
inc
pop
adc
dec
jb
mov
aaa
mov
mov
mov
push
fldcw
das
xchg
lods
daa
js
push
outsb
cmp
sti
cmp
mov
incb
notb
test
jmp
loopne
mov
icebp
repnz
mov
jmp
iret
enter
fcmovnu
xlat
push
shrb
dec
inc
sub
jg
adc
js
std
fistl
or
test
lock
fsubrp
cmc
mov
sbb
and
xor
mov
shlb
insl
fnsetpm(287
inc
dec
aas
cli
popf
adc
adc
test
inc
incb
ljmp
pop
jae
mov
sbb
push
shrl
in
stos
cmp
pop
pop
or
cmovno
pop
mov
dec
mov
and
cs
sub
imul
and
test
push
cmp
mov
mov
mov
scas
aam
inc
leave
sbb
mov
mov
ds
jl
dec
dec
xchg
or
jno
cmp
xchg
fcmovbe
and
push
sub
mov
mov
stos
cmpsb
xchg
or
cmpsb
pop
push
sub
sbb
xor
mov
out
mov
sbb
xchg
xchg
ljmp
cmp
jmp
jmp
cmp
movsb
mov
out
jno
out
mov
sbb
int
or
cmp
jle
in
sub
fcoms
mov
jmp
xchg
adc
adc
cltd
xchg
add
inc
mul
fidivrl
add
aad
mov
jmp
stc
jecxz
cmp
or
das
jne
aaa
sarl
ret
sti
and
dec
addb
rorb
mov
or
call
xchg
scas
xor
or
xor
or
insl
inc
fsubl
test
cltd
mov
fwait
dec
xchg
fistps
or
out
mov
cmpl
mov
cmpsl
jmp
rclb
pop
pop
dec
stc
pop
xchg
pop
mov
mov
inc
cmp
push
cmpsl
xor
int3
jne
dec
adc
mov
adc
inc
sbb
ds
cmp
adc
shll
add
scas
shrl
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
jmp
int3
lret
fxch
leave
mov
push
hlt
cmp
loop
js
jle
js
fbstp
aam
icebp
adc
inc
push
mov
scas
xchg
adc
mov
mov
cmp
loopne
shll
repz
aam
push
cltd
push
inc
xor
ja
fwait
adc
ss
jae
mov
jl
adc
in
and
jnp
xor
das
or
jp
dec
je
les
adc
jge
mov
add
sbb
ret
loopne
fwait
dec
xorb
dec
lahf
cmpb
fisttpll
xor
sbb
xchg
popa
fs
int
ljmp
sbb
pcmpeqb
lods
push
pop
loopne
sbb
es
jle
xchg
fisubl
mov
add
repnz
movsb
inc
fs
cli
push
cwtl
jp
imul
loopne
call
fidivs
rcrb
nop
mov
mov
jns
out
xchg
dec
ss
jl
jmp
or
push
mov
jb
jmp
cmpsl
incl
stos
andb
dec
in
add
orl
int
les
aas
pop
outsl
aaa
loop
adc
les
insl
imul
mov
loopne
adc
and
sbb
popa
test
jae
or
dec
test
push
xor
cmp
or
fisubrl
jb
inc
cld
fstps
out
outsl
insl
and
mov
scas
lahf
popf
out
ds
jle
mov
mov
movsb
push
call
jbe
and
or
pop
out
adc
imull
sub
pushl
sub
loope
inc
xchg
adc
adc
outsl
sbb
xchg
inc
lea
sub
dec
clc
out
lcall
getsec
shrb
cmpb
iret
into
jo
movsl
aas
jmp
jp
inc
enter
out
dec
cld
test
jle
lahf
cmpsl
cs
shrl
sub
mov
je
pop
or
adc
xor
add
jmp
int
int
rcl
int
cmp
push
fsub
jg
adc
js
enter
push
sbb
and
lret
lret
jo
jp
or
lock
inc
mov
jo
pushf
sti
jno
aad
pmuludq
or
push
arpl
mov
adc
pop
or
xchg
in
cmpsl
cltd
and
popf
fbld
jecxz
sbb
mov
pop
mov
cmp
divl
pop
repnz
mov
shl
inc
xchg
gs
std
add
jae
pop
xchg
popa
js
data16
lcall
adc
rorb
sub
rcll
push
sarb
rcrb
and
push
cwtl
dec
leave
mov
ss
inc
outsl
add
jae
je
cmpsb
orb
jg
pop
mov
adc
adc
in
mov
jb
repz
popa
add
push
out
jb
cmpsb
out
test
mov
pop
inc
je
dec
mov
icebp
xlat
and
lcall
icebp
test
xor
lret
fcomip
lcall
push
adc
pop
cmp
jbe
jbe
ja
fldcw
decl
lds
jo
push
sub
pop
cmp
adc
scas
push
mull
xchg
orb
lret
jl
das
lods
icebp
je
shrl
movl
sub
fld
xchg
inc
add
sbb
call
and
push
mov
mov
mov
bound
xlat
push
push
test
aad
and
lea
or
xor
cltd
mov
jg
cmp
sub
sti
or
pop
rol
in
push
loop
fisubrs
ss
and
and
aam
outsb
xchg
icebp
jmp
dec
sub
xchg
or
in
pop
cmc
fsubs
inc
add
push
int
jge
jle
sarb
imulb
test
mov
xor
pcmpeqd
xchg
repnz
and
repnz
aas
imul
dec
adc
dec
movsb
imul
mov
jmp
lret
xlat
vpsubusw
lret
xor
imul
aam
insb
iret
push
cwtl
aas
and
cltd
ds
inc
cs
sbb
sbb
cmc
pop
loope
mov
lret
adc
fists
jmp
inc
push
sti
mov
and
test
pushf
scas
lods
faddl
pop
xor
pop
dec
mov
inc
mov
outsb
cmp
jmp
cs
das
adc
sub
in
sbb
push
das
sub
in
out
inc
xor
cmp
jbe
mov
std
inc
cmpsl
or
mov
xchg
xchg
xor
scas
xor
or
pop
fnstcw
sahf
mov
push
or
jg
dec
scas
cmp
xor
aad
mov
pop
fcmovu
pop
mov
push
push
mov
add
faddl
lahf
xor
xor
imul
push
lea
jge
test
or
negl
push
out
xor
xchg
cmpl
pop
cld
pop
fiadds
in
pop
mov
aaa
icebp
hlt
loop
lods
jno
fwait
loop
sbb
inc
arpl
cmp
inc
dec
xchg
jns
cmpb
mov
jge
icebp
ret
sub
add
mov
cwtl
inc
mov
test
xchg
out
mov
or
push
adc
pushf
js
data16
pop
or
cmpsl
xor
iret
xchg
icebp
sti
lahf
insb
pop
dec
fmull
pop
test
sub
cld
into
push
mov
mov
movsb
mov
loope
mov
insb
xor
ss
call
or
mov
lock
int3
fildll
cli
inc
addr16
push
xor
sti
sub
jecxz
mov
fcoms
mov
imul
push
repnz
nop
and
sub
sbb
cwtl
or
xchg
lret
push
loopne
xor
jmp
enter
iret
rcl
mov
fldt
mov
jg
adc
js
js
adc
call
push
icebp
popf
daa
cli
ja
adc
inc
cli
fsubl
mov
pop
lahf
std
xchg
lds
add
mov
int3
pop
lcall
pop
sbb
dec
cmp
jmp
pop
mov
push
mov
pop
xchg
roll
xchg
popl
jl
mov
ja
dec
mov
or
scas
sbb
loop
aam
pop
dec
mov
negl
je
or
inc
hlt
cltd
inc
ds
and
cmpsb
mov
pushf
mov
adc
jo
mov
pushf
das
mov
dec
or
jmp
pop
popa
xor
imul
imul
lcall
in
aas
jmp
int
add
loope
in
lock
mov
andl
inc
xor
jge
lcallw
add
mov
push
push
test
xchg
stos
mov
cmp
add
sub
sbb
push
js
sub
lret
out
aad
cwtl
mov
inc
lds
js
daa
mov
adc
insl
dec
sbb
clc
cmpsb
cmc
mov
ljmp
roll
leave
xchg
pop
shll
jmp
cmp
stos
lcall
cmp
sahf
pop
ret
cmp
orb
jnp
dec
dec
repz
push
adc
push
loop
dec
pop
rcrl
pop
dec
dec
sub
and
hlt
outsb
ss
add
and
fidivl
mov
add
jb
inc
dec
jg
lahf
ret
lret
fst
and
xchg
and
adc
mov
jae
mov
es
popf
cmpb
divl
test
cltd
mov
or
cs
lea
xchg
addr16
mov
inc
xor
cmp
sub
xor
push
movsb
fnstsw
jo
fucom
stos
cld
mov
mov
cmp
jnp
inc
mov
jmp
into
leave
leave
rcr
fldcw
stc
push
lret
mov
jle
js
punpcklbw
ds
scas
xor
mov
das
sbb
shr
adc
push
sbb
pop
out
ds
lahf
in
lret
xlat
rcrb
push
dec
adc
jg
js
dec
dec
aam
jb
test
leave
fnstenv
sub
jne
loopne
mov
popf
into
dec
scas
dec
xlat
enter
xor
xor
roll
stc
repnz
sbb
xlat
push
insl
mov
out
xchg
iret
xor
add
les
je
and
sub
fistl
jl
pop
aas
testl
inc
mov
mov
add
mov
cmpsl
or
sbb
sbb
sahf
jg
test
aas
push
or
push
lock
push
xchg
ss
lea
mov
push
or
jmp
movsb
icebp
jnp
andl
jg
jae
insl
jne
cld
pop
or
dec
pop
dec
scas
inc
xchg
dec
scas
inc
stc
sub
adcb
ret
in
nop
or
mov
inc
or
push
pop
dec
xor
xor
test
mov
pop
gs
scas
fdivrs
pushf
je
jbe
xchg
pushf
xchg
or
dec
cli
std
sbb
pop
loop
jno
mov
mov
test
mov
mov
negl
insb
sti
jns
or
mov
int
and
testl
sbb
mov
pop
jno
loopne
outsb
lret
or
adc
or
pushf
mov
lds
dec
cwtl
sbbl
sub
adc
aad
jno
and
pop
enter
lret
fisubl
inc
xchg
adc
mov
push
xchg
inc
daa
adc
ret
out
cmp
xchg
cmp
cmc
mov
sbb
mov
add
inc
iret
xchg
jnp
loope
loopne
imul
out
in
inc
push
dec
fisubs
outsb
lea
inc
push
aaa
lea
cmp
jne
mov
jmp
mov
mov
jmp
mov
xlat
movsb
inc
push
test
jg
adc
js
mov
inc
sahf
lret
in
dec
cwtl
call
cmpsb
loope
mov
push
mov
push
call
mov
fists
push
movsl
cmpsb
inc
xchg
push
mov
xchg
mov
add
dec
jecxz
ds
push
push
test
jns
std
sub
test
adc
inc
xchg
hlt
cmp
shlb
pop
sarl
xor
push
in
out
in
loop
in
adc
mov
mov
cmp
sbb
stos
stos
and
jp
std
jne
bswap
sub
in
fmuls
enter
push
push
stos
mov
jns
and
mov
cmp
dec
jno
xchg
fld1
jns
or
imul
rcrl
mov
push
test
mov
add
incb
divl
fcoms
sub
dec
jo
int3
cs
pop
addr16
out
sbb
jge
rcll
push
sbb
call
je
jnp
iret
lods
add
dec
pop
mov
or
dec
push
push
sub
adc
dec
add
cmc
xchg
outsb
ljmp
xlat
push
insl
mov
mov
test
int3
sbb
das
push
loop
or
mov
dec
mov
insl
pop
pop
jae
mov
cmpsl
scas
adc
and
call
daa
fimuls
cld
mov
stos
mov
in
out
dec
sub
data16
imul
dec
shrb
std
jecxz
cmpsb
fprem1
into
fimuls
and
push
andl
fst
adc
mov
addl
movsl
iret
dec
mov
out
mov
or
mov
insl
daa
addb
push
fwait
sbb
mov
push
mov
adc
movsb
dec
xor
adc
sub
and
mov
leave
and
jp
fbld
into
jle
push
or
add
jmp
cmp
rol
jb
dec
pop
cmc
adc
push
out
jg
adc
js
inc
dec
test
repnz
pop
ja
fcomip
sbb
mov
push
mov
and
mov
jns
and
lods
mov
clc
add
mov
adc
cli
leave
lahf
sbb
stos
cmpsl
fldl
mov
repz
vmulpd
cmpsl
in
jb
lods
sahf
cmp
sub
mov
mov
xor
push
mov
adc
cwtl
lods
mov
sbb
idivb
sub
xchg
popf
or
mov
adc
mov
imul
mov
sbb
arpl
lock
xlat
imul
pop
sub
pop
daa
xchg
rcll
lcall
pop
xchg
mov
adc
sub
pop
sub
sub
pop
xchg
mov
jle
sbb
cmp
nop
clc
lock
pop
pop
mov
inc
out
clc
jle
mov
movq
inc
prefetcht1
xchg
js
sub
lcall
dec
mov
dec
cmpb
nop
xchg
jg
cmp
xchg
repz
pop
mov
imul
sti
mov
les
clc
pop
fistps
or
fbld
hlt
adc
pop
jns
loope
loop
cmp
sub
fs
dec
nop
insl
fwait
sbb
fbstp
pop
or
mov
rcrb
int3
pushf
or
pop
fimuls
pop
orb
pushf
cli
scas
sbb
add
pop
xchg
pusha
scas
sub
push
jp
and
cmp
pop
stos
push
pop
xor
sbb
insb
jmp
lcall
jecxz
push
and
mov
adc
lds
nop
pop
jb
xor
stc
push
adc
sub
pop
out
add
test
or
pop
dec
dec
icebp
mov
mov
movsl
push
pop
cmp
adcl
inc
int3
push
or
inc
jbe
stos
xor
cmp
push
xor
add
rol
enter
lret
pop
jp
sub
in
jg
adc
js
mov
inc
sbb
lret
xor
js
dec
inc
or
cmp
imul
test
cmpsb
jae
push
sahf
mov
push
ret
xchg
xlat
cmpsl
aad
sbb
in
add
add
jecxz
fldt
dec
push
xchg
icebp
ljmp
mov
push
xchg
mov
sbb
mov
bswap
or
aas
jbe
fdivrs
adc
cld
push
push
jle
jb
stos
mov
inc
daa
mov
xor
add
pusha
or
test
shlb
fcoms
xor
pop
sub
jg
inc
jo
insb
mov
push
xchg
in
pusha
jns
mov
sbb
xor
push
jno
sub
rcrl
adc
jmp
jecxz
xchg
push
dec
movsl
std
stos
inc
sub
sti
pop
repz
std
jbe
jbe
sub
not
sub
cmp
or
jae
dec
out
or
popf
jmp
cmpsl
int
in
fs
jle
les
jno
xor
and
imulb
aam
aad
adc
gs
js
int
popf
inc
pop
and
fwait
pop
adc
movsb
jmp
js
jns
or
repz
stc
call
sbb
push
cltd
insb
in
jne
push
scas
outsb
bound
mov
bound
inc
sti
movsl
jg
and
or
arpl
mov
addr16
in
lss
jmp
mov
adc
mov
fistpl
or
inc
jne
jae
and
out
sub
inc
pusha
jne
pop
subb
lods
cmp
push
cmpsb
fwait
dec
jl
mov
push
jae
ret
out
cmp
nop
inc
inc
fsts
enter
mov
mov
mov
mov
jmp
pop
lret
jp
sub
cmp
mov
sbb
mov
mov
movsb
das
or
scas
and
in
icebp
push
ficompl
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
jmp
mov
iret
leave
rcr
aad
mov
fsubr
add
jg
adc
js
sub
pusha
enter
jae
imul
shrl
pushf
sub
sbb
out
jecxz
cltd
mov
popa
push
mov
dec
sahf
scas
jae
in
dec
movsb
test
inc
or
ret
push
loope
popf
divb
mov
xchg
inc
adc
cmp
in
pop
cs
ljmp
cwtl
fdiv
dec
xchg
dec
dec
sub
push
push
out
xchg
cmp
jp
lods
inc
nop
inc
xchg
repnz
cwtl
imul
mov
push
shlb
push
das
sbb
xchg
xor
loope
add
jnp
push
jbe
fldcw
daa
lret
sub
push
cmpsl
inc
xchg
cmpsl
div
sbb
les
fadds
and
out
outsb
xor
cmp
outsb
xor
xorb
xchg
insb
out
outsb
les
add
ret
push
test
sbb
xchg
pusha
sub
clc
and
aad
sbb
mov
or
inc
out
pop
dec
jno
cltd
cs
add
rcl
xchg
cmp
aaa
fxrstor
jmp
jmp
pop
enter
lret
mov
fsubrs
mov
mov
mov
inc
mov
sub
in
adc
and
dec
and
movsl
add
mov
or
pop
je
dec
dec
dec
mov
mov
add
xor
jno
into
mov
mov
fs
xchg
fstl
scas
cmpsl
xchg
test
inc
add
push
add
cmp
sti
rcll
mov
mov
push
out
test
in
sub
or
outsl
or
cli
pop
pop
cli
jg
jns
out
outsl
rcrl
out
and
cmpsb
jns
add
into
pusha
dec
rcll
xor
addr16
cmpb
loop
jecxz
loopne
pop
icebp
inc
ja
add
int
mov
xchg
btc
inc
pushf
movsb
adc
hlt
xor
adc
mov
sbb
dec
xor
add
pop
mov
pop
jmp
rcl
ret
ror
aad
andb
xor
jg
adc
js
in
pop
pop
xchg
xor
jb
insl
push
stos
pop
repz
inc
aad
negl
out
fmull
and
lret
shll
pop
lea
cltd
xor
lcall
icebp
dec
cld
mov
sub
dec
mov
cmp
fistpl
lret
pusha
cld
cmp
mov
or
mov
sahf
sub
gs
and
cli
je
mov
push
or
push
or
mov
aad
inc
rcl
add
fidivs
pop
or
and
call
mov
ja
and
ljmp
mov
jg
and
cmp
insb
clc
int3
add
push
clc
push
insl
xor
fistps
xor
aad
lret
and
mov
ja
rorb
cmovnp
cmp
push
in
mov
xor
xchg
ss
push
and
lret
scas
sti
adc
inc
leave
std
adcb
cmp
dec
push
stos
fcomps
lds
jae
sub
fstl
jg
mov
push
rcr
icebp
jmp
jns
add
add
push
jl
jle
mov
cmc
addr16
insb
fstpl
mov
fidivrs
lods
out
dec
shrb
clc
outsl
loop
and
int
data16
push
aad
dec
or
loopne
or
adc
cmp
jmp
and
jnp
inc
push
mov
insl
lret
filds
pop
out
cmp
mov
mov
ret
jns
pop
lea
push
cmp
rcrl
mov
and
xchg
int3
dec
int
mov
stc
cmp
mov
xor
sub
jmp
jle
cmp
dec
lds
mov
test
jmp
into
iret
into
ror
aad
aad
mov
aad
xor
jg
adc
js
mov
arpl
or
out
out
shrl
daa
in
cmp
in
sti
imul
subb
and
and
cmp
jmp
mov
jns
ss
inc
jmp
add
add
fildl
faddl
test
push
bound
movsl
out
jne
xorb
cmp
jmp
aas
popf
and
mov
mov
lahf
call
xor
xchg
sub
mov
adc
xchg
sbb
mov
xchg
xor
dec
xlat
xor
jns
dec
daa
call
or
mov
les
jmp
push
pop
stc
inc
mov
test
sti
pop
loop
adc
and
movsb
xchg
and
sub
or
fwait
push
popa
push
call
cmp
out
mov
sbb
loopne
outsl
add
test
xor
jg
and
inc
adc
jg
leave
mov
xchg
jp
or
sbb
aas
xor
push
jae
push
dec
xor
into
sub
xor
adc
or
pop
xchg
mov
stos
pop
clc
inc
mov
dec
jecxz
daa
jno
mov
mov
xor
in
iret
test
mov
pop
jne
jae
vmread
mov
mov
adc
loopne
lret
fsts
call
inc
arpl
cmpsb
jp
mov
or
decb
cmp
xorb
add
jge
cmp
imul
fmull
add
fmull
sub
out
push
out
add
mov
scas
push
out
lcall
or
cmp
dec
and
imul
pop
mov
sbb
sub
add
add
adc
incb
or
out
dec
in
repnz
xchg
xchg
adc
iret
outsb
loope
inc
push
jae
pushf
in
clc
pop
leave
ret
sbb
add
flds
add
flds
add
flds
add
add
dec
flds
add
add
flds
add
add
add
sbb
add
flds
add
flds
add
add
rcr
add
loopne
add
ljmp
add
add
push
fiaddl
add
fiaddl
add
add
fiaddl
add
fiaddl
add
add
dec
fiaddl
add
add
fiaddl
add
add
js
add
xchg
add
mov
add
lcall
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
add
fildl
add
fildl
add
add
push
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
faddl
add
add
sub
add
cmp
add
dec
faddl
add
add
data16
add
add
mov
add
pushf
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
fldl
add
fldl
add
add
dec
fldl
add
add
pusha
fldl
add
add
test
add
mov
add
sahf
fldl
add
add
fcmovu
add
out
fldl
add
fldl
add
fiadds
add
fiadds
add
fiadds
add
add
pop
fiadds
add
add
fiadds
add
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
filds
add
filds
add
filds
add
filds
add
add
filds
add
add
mov
add
cwtl
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
loopne
add
add
sub
add
loopne,pt
add
add
data16
add
add
xchg
add
xchg
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
loope
add
add
push
loope
add
add
jb
add
test
add
mov
loope
add
loope
add
loope
add
add
add
loope
add
add
adc
add
and
add
xor
add
loop,pt
add
add
pusha
loop
add
add
xchg
add
cwtl
loop
add
add
int3
loop
add
loop
add
loop
add
loop
add
jecxz
add
jecxz
add
add
xor
add
inc
jecxz
add
add
fs
add
add
mov
add
mov
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
in
add
add
dec
in
add
add
push
add
jl
add
mov
add
cwtl
in
add
in
add
in
add
in
add
in
add
in
add
add
ds
add
add
pop
in
add
add
jle
add
nop
in
add
add
mov
in
add
in
add
in
add
in
add
out
add
out
add
out
add
add
add
push
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
pop
out
add
add
jbe
add
xchg
add
cwtl
out
add
out
add
out
add
out
add
out
add
call
add
and
add
xor
add
dec
call
add
callw
jp
add
xchg
add
xchg
call
add
mov
add
call
add
in
add
lock
add
or
add
sbb
add
add
add
or
add
add
add
das
and
add
add
pop
add
add
add
add
and
pop
aam
add
add
add
add
add
add
add
add
push
aam
add
add
xchg
inc
add
imul
add
add
xor
jp
jp
outsb
je
je
jo
aas
dec
imul
gs
jb
imul
inc
inc
dec
push
inc
dec
push
inc
inc
cmp
add
add
aad
add
fildl
add
rolb
add
aad
add
rolb
add
add
add
add
add
loope
add
xlat
add
ss
add
adc
add
inc
jmp
add
sbb
add
flds
add
flds
add
flds
add
add
dec
flds
add
add
flds
add
add
add
sbb
add
flds
add
flds
add
add
rcr
add
loopne
add
ljmp
add
add
push
fiaddl
add
fiaddl
add
add
fiaddl
add
fiaddl
add
add
dec
fiaddl
add
add
fiaddl
add
add
js
add
xchg
add
mov
add
lcall
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
add
fildl
add
fildl
add
add
push
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
faddl
add
add
sub
add
cmp
add
dec
faddl
add
add
data16
add
add
mov
add
pushf
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
fldl
add
fldl
add
add
dec
fldl
add
add
pusha
fldl
add
add
test
add
mov
add
sahf
fldl
add
add
fcmovu
add
out
fldl
add
fldl
add
fiadds
add
fiadds
add
fiadds
add
add
pop
fiadds
add
add
fiadds
add
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
filds
add
filds
add
filds
add
filds
add
add
filds
add
add
mov
add
cwtl
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
loopne
add
add
sub
add
loopne,pt
add
add
data16
add
add
xchg
add
xchg
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
loope
add
add
push
loope
add
add
jb
add
test
add
mov
loope
add
loope
add
loope
add
add
add
loope
add
add
adc
add
and
add
xor
add
loop,pt
add
add
pusha
loop
add
add
xchg
add
cwtl
loop
add
add
int3
loop
add
loop
add
loop
add
loop
add
jecxz
add
jecxz
add
add
xor
add
inc
jecxz
add
add
fs
add
add
mov
add
mov
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
in
add
add
dec
in
add
add
push
add
jl
add
mov
add
cwtl
in
add
in
add
in
add
in
add
in
add
in
add
add
ds
add
add
pop
in
add
add
jle
add
nop
in
add
add
mov
in
add
in
add
in
add
in
add
out
add
out
add
out
add
add
add
push
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
pop
out
add
add
jbe
add
xchg
add
cwtl
out
add
out
add
out
add
out
add
out
add
call
add
and
add
xor
add
dec
call
add
callw
jp
add
xchg
add
xchg
call
add
mov
add
call
add
in
add
lock
add
or
add
sbb
add
add
add
or
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
add
jns
je
insl
add
fwait
add
jo
imul
je
insb
add
ljmp
jo
add
je
ja
jae
add
add
jb
outsl
insb
insb
add
add
imul
add
outsl
ja
outsl
ja
jb
add
add
imul
data16
add
gs
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
xchg
add
popa
insb
outsb
jne
add
add
jb
outsl
imul
sbb
ja
jae
popa
je
add
outsl
ja
add
fwait
add
jo
pop
arpl
insl
outsl
fs
loope
jae
arpl
data16
fildl
pop
popa
insl
jae
pop
gs
je
add
imul
add
je
push
add
popa
insb
je
insl
add
data16
add
or
gs
add
sub
arpl
arpl
add
add
outsb
add
sahf
add
jae
bound
gs
add
add
ja
arpl
data16
js
imul
ja
jae
arpl
add
jo
gs
push
add
arpl
inc
imul
pop
gs
je
sbb
jae
jo
imul
pop
arpl
imul
gs
jb
push
je
arpl
add
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
jb
pop
pop
addr16
popa
imul
pop
add
gs
jb
jb
add
and
arpl
jo
add
std
add
jb
outsl
jne
add
add
jb
outsl
jb
add
push
inc
push
push
cs
insb
add
inc
add
gs
outsb
push
gs
js
gs
imul
gs
ljmp
insb
gs
je
jb
bound
gs
js
add
pop
add
outsb
fs
imul
outsb
addr16
outsl
je
imul
outsl
outsb
push
add
mov
insb
dec
popa
insl
gs
imul
add
push
popa
insb
imul
add
inc
imul
inc
push
dec
outsl
je
imul
outsl
outsb
add
cmp
gs
push
inc
js
arpl
imul
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
add
outsb
fs
gs
inc
imul
popa
imul
je
jo
gs
bound
arpl
js
add
add
gs
popa
insl
gs
imul
insb
gs
je
je
add
add
je
popa
jae
inc
jb
outsl
jb
add
bound
inc
jb
add
or
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
js
push
gs
fs
imul
gs
push
dec
outsb
outsw
add
dec
popa
imul
outsw
add
add
je
outsl
arpl
gs
outsb
outsw
inc
add
push
add
fs
imul
js
add
outsl
add
je
imul
popa
je
add
incl
inc
gs
outsl
arpl
gs
outsb
outsw
push
add
rolb
je
arpl
push
add
repnz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
cmp
dec
jo
outsb
inc
imul
outsb
addr16
add
stc
add
inc
popa
fs
je
imul
add
add
gs
je
inc
jbe
outsb
je
add
insl
add
outsb
insb
outsl
arpl
imul
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
pop
add
insb
jae
gs
popa
insb
jne
add
jo
jb
popa
je
add
dec
add
insb
gs
jnp
inc
outsl
insb
fs
je
imul
push
gs
gs
outsl
outsb
imul
imul
add
imul
in
add
gs
je
push
push
add
rolb
inc
jb
popa
je
inc
imul
outsb
addr16
add
mov
inc
outsl
insl
jo
jb
push
je
imul
add
imul
gs
arpl
add
out
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
inc
add
faddl
push
gs
jb
push
push
add
gs
dec
outsl
add
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
inc
add
je
je
jb
jne
dec
outsb
outsw
push
add
add
push
popa
insb
imul
addr16
jb
jne
add
in
push
gs
outsl
insl
insl
push
imul
add
push
jns
je
insl
push
imul
insb
gs
imul
dec
outsl
jbe
inc
imul
add
jae
jb
insl
jo
inc
add
inc
gs
je
imul
inc
js
add
fldl
inc
jb
popa
je
dec
jne
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
jno
inc
gs
dec
push
xor
mov
inc
push
je
dec
push
add
fldl
push
gs
dec
inc
imul
jne
inc
outsl
outsb
je
popa
insl
imul
add
gs
je
dec
inc
push
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
push
arpl
outsb
add
inc
gs
popa
jo
outsl
fs
lahf
add
gs
je
dec
popa
insb
data16
outsb
gs
popa
insb
gs
gs
add
je
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
inc
imul
bound
imul
inc
js
push
gs
dec
jne
push
add
push
gs
dec
jne
push
add
dec
add
je
outsl
outsb
je
popa
je
add
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
insb
imul
inc
gs
gs
inc
popa
arpl
add
jnp
inc
gs
gs
inc
insb
imul
inc
jb
popa
je
inc
jb
jae
dec
outsb
imul
add
je
imul
add
gs
popa
jns
jne
add
popa
je
push
outsl
insb
imul
add
add
jne
inc
outsl
outsb
je
popa
insl
imul
add
popa
je
inc
imul
imul
xchg
inc
jb
popa
je
inc
imul
add
gs
je
push
outsb
add
popa
je
inc
dec
inc
push
arpl
outsb
add
addl
imul
add
inc
gs
gs
jb
jae
push
popa
insb
gs
gs
outsb
fs
add
jo
add
push
gs
dec
gs
imul
push
gs
insb
imul
je
add
lar
jb
popa
insb
imul
arpl
add
je
gs
inc
outsl
insb
outsl
jb
add
inc
outsl
arpl
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
add
je
dec
inc
imul
imul
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
bound
je
jb
arpl
add
add
jae
jp
push
popa
insb
gs
add
push
imul
add
add
arpl
gs
insb
imul
xchg
add
gs
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
insl
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
popa
je
inc
inc
push
add
popa
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
mov
inc
gs
imul
dec
jb
inc
js
add
dec
xor
cs
insb
add
jb
jns
popa
jb
je
add
ja
outsl
arpl
push
arpl
add
fs
insl
popa
addr16
add
mov
je
gs
popa
add
gs
jb
jns
outsb
jne
stos
add
ja
outsb
imul
arpl
mov
inc
gs
insb
addr16
jb
arpl
add
inc
arpl
popa
je
dec
gs
outsl
popa
jb
dec
popa
jns
jne
add
data16
je
imul
add
je
imul
js
inc
add
and
fs
outsb
jo
je
mov
imul
outsl
ja
jo
popa
je
add
mov
push
popa
imul
jne
dec
fs
add
dec
add
je
outsb
jne
sub
inc
gs
outsb
jne
adc
push
imul
outsb
outsl
ja
gs
popa
addr16
add
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
jae
popa
addr16
outsl
js
js
add
imul
je
jo
popa
je
push
outsb
add
mov
dec
outsl
popa
fs
outsb
jne
add
add
jo
outsb
fs
outsb
jne
add
inc
jb
popa
je
dec
arpl
dec
outsb
imul
insb
add
je
imul
outsb
addr16
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
cmp
arpl
popa
imul
outsb
add
addb
outsb
data16
popa
je
push
arpl
add
arpl
outsl
jo
jo
outsb
jne
add
gs
jae
inc
inc
add
add
outsb
fs
gs
popa
addr16
add
fildl
dec
outsl
jbe
push
imul
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
stos
add
fs
jne
jae
jb
add
push
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
xor
push
gs
insb
popa
jae
dec
outsl
outsb
addr16
add
inc
jb
popa
je
push
imul
push
add
outsl
outsb
imul
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
add
data16
je
arpl
scas
add
fs
jne
jae
jb
add
add
push
jae
push
imul
arpl
add
js
inc
gs
imul
js
push
add
push
add
je
insb
addr16
je
insb
dec
inc
add
mov
outsl
ja
jb
insl
push
outsl
imul
outsb
jae
jb
dec
outsb
jne
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
add
je
outsb
jne
je
insl
inc
outsl
jne
je
add
gs
arpl
push
add
add
push
imul
popa
jae
inc
js
add
ret
add
fs
imul
add
outsl
jae
inc
gs
je
jo
add
imul
jae
popa
addr16
add
out
dec
jo
outsb
inc
gs
je
jo
add
and
push
arpl
insb
insb
push
imul
add
mov
imul
xor
jb
outsl
dec
gs
push
add
xor
push
gs
popa
jb
je
outsl
jae
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
imul
jae
addr16
add
push
push
imul
add
gs
je
inc
imul
jb
insl
push
add
je
push
gs
imul
js
push
add
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
cmc
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
inc
gs
imul
outsb
addr16
add
fldl
inc
jno
popa
insb
push
arpl
add
je
arpl
insb
insb
push
outsl
jae
add
imul
imul
add
insb
insb
push
imul
dec
outsb
push
outsb
fs
gs
popa
addr16
js
pop
add
gs
je
dec
arpl
inc
jb
insl
push
gs
jne
arpl
add
inc
outsl
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
push
imul
outsl
arpl
add
bound
jbe
outsb
je
faddl
inc
outsb
jne
push
imul
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
cwtl
add
je
outsl
jns
imul
add
popa
jb
jb
jbe
add
add
outsb
fs
gs
popa
addr16
add
mov
inc
gs
jb
insl
gs
jb
arpl
or
push
imul
je
gs
add
add
je
jne
jae
jb
push
inc
gs
imul
add
inc
insb
addr16
je
insl
dec
outsb
je
sbb
arpl
gs
imul
add
add
je
outsb
jne
je
insl
dec
inc
add
outsl
addr16
outsl
js
popa
jb
insl
inc
add
arpl
outsl
push
push
outsb
outsl
ja
add
inc
push
outsb
jne
popa
imul
add
add
jo
imul
arpl
add
dec
outsb
push
arpl
cltd
add
inc
insb
addr16
jne
je
outsb
inc
push
add
mov
jb
outsb
je
inc
add
inc
gs
jns
je
insl
dec
outsb
jne
add
push
imul
popa
jae
inc
js
add
pusha
add
gs
je
dec
outsb
jne
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
dec
outsb
jne
je
insl
dec
outsb
outsw
push
add
mov
fs
outsb
jne
add
inc
gs
outsl
jo
imul
dec
add
je
jb
jo
add
cmp
push
gs
jne
jae
jb
outsl
jae
add
add
jo
imul
gs
js
add
jp
push
push
jb
je
add
imul
popa
jae
push
add
scas
add
fs
arpl
inc
add
add
je
popa
jb
je
outsl
jae
jnp
push
push
jb
outsl
jb
add
inc
gs
jne
dec
outsb
jne
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
push
push
inc
push
xor
cs
insb
add
push
dec
inc
dec
dec
xor
cs
insb
add
push
dec
push
jne
jns
push
push
inc
insb
inc
inc
push
in
inc
add
in
inc
add
or
dec
addr16
xor
dec
cmp
jp
cmp
dec
es
jae
and
dec
push
push
pop
push
cmp
dec
addr16
xor
dec
cmp
jp
cmp
dec
es
insl
dec
and
dec
push
bound
arpl
dec
bound
dec
jae
cmp
dec
xor
dec
push
jb
jae
orl
nop
jge
aas
dec
dec
xor
dec
ds
inc
dec
cmp
dec
xor
dec
push
sbbb
setae
jl
jge
aas
dec
dec
xor
dec
ds
inc
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
mov
or
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
mov
mov
ret
or
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
ret
psrlq
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
popa
dec
xor
dec
xor
dec
ds
xor
dec
push
loop
jecxz
repz
jl
jge
jl
jge
ds
jg
xor
dec
xor
dec
ds
inc
dec
cmp
dec
cmp
add
add
adc
jl
jge
aas
dec
add
outsb
jmp
inc
add
inc
add
in
inc
add
in
inc
add
inc
add
inc
add
in
inc
add
test
pushf
clc
data16
add
inc
add
inc
add
inc
add
inc
add
jmp
inc
add
in
inc
add
test
jb
inc
add
or
inc
add
fstl
inc
add
inc
inc
mov
jne
mov
incb
mov
jmp
add
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
and
pushf
clc
sub
add
jmp
inc
add
imul
pushf
clc
popf
jmp
add
pop
jmp
add
add
inc
add
inc
add
add
add
inc
add
add
dec
add
dec
add
add
add
add
inc
add
add
dec
add
inc
add
add
dec
add
add
add
add
jmp
add
dec
pop
dec
inc
dec
inc
dec
pop
dec
inc
dec
add
dec
xor
add
pop
dec
pop
dec
add
dec
xor
dec
inc
dec
pop
dec
inc
dec
add
dec
xor
add
pop
dec
inc
dec
dec
dec
push
dec
inc
dec
pop
dec
xor
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jge
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
xlat
lds
ret
fidivs
into
mulb
push
sbb
jno
add
add
mov
das
shlb
rolb
inc
push
outsl
push
push
jmp
add
in
adc
jae
inc
jae
popa
push
pop
pop
outsb
jbe
jns
push
imul
je
jns
popa
push
push
push
dec
imul
popa
jp
arpl
push
imul
jp
jb
outsl
push
inc
inc
push
imul
push
jb
add
push
insb
pop
ja
je
bound
add
push
dec
je
push
jne
popa
jns
dec
push
dec
dec
pop
pop
dec
push
add
adc
push
jge
add
fistps
cmp
xor
mov
mov
dec
fbstp
mov
stos
mov
pop
cmp
cmc
mov
pop
cmp
mov
jmp
sbb
xorb
and
xchg
mov
aaa
inc
out
mov
mov
or
jmp
mov
cmc
mov
and
enter
leave
inc
call
mov
pop
or
pushf
mov
leave
popf
mov
sbb
cmc
mov
ss
sub
sti
pop
daa
mov
shlb
push
fistpll
call
test
xor
adc
fimull
roll
inc
xor
fldcw
jge
es
dec
push
mov
lcall
cld
sbb
pop
mov
and
insb
or
scas
bswap
adc
hlt
adc
mov
stos
and
out
fdivrl
cld
dec
mov
and
pop
push
fistpll
mov
lds
sub
sarl
jmp
ret
xor
and
fnstcw
xor
cmc
stos
push
test
repz
pop
imul
aad
fildll
mov
in
xchg
jl
and
pop
test
pop
fstl
xor
imul
icebp
aas
fldt
push
outsb
cli
into
add
cmc
addl
lods
pop
add
loope
jbe
jb
mov
adc
add
dec
sbbb
out
pop
imul
aaa
xorb
lea
xchg
xchg
insl
or
fcmovnb
push
lret
movsl
inc
cmpsb
loop
fisttpl
cld
push
pop
lcall
fbld
rcrb
dec
cmpsl
les
push
cmpsb
es
dec
pop
jbe
push
adc
push
cld
xchg
push
mov
jns
into
adc
sub
jge
pop
iret
mov
jne
add
mov
mov
pusha
jg
lret
mov
adc
scas
sti
repnz
fbstp
sbb
int3
leave
xchg
jecxz
lods
inc
sbb
shl
mov
mov
ljmp
jl
sub
cmp
pop
push
lcall
jnp
cmp
out
sub
call
jb
cmc
outsl
dec
shll
or
ret
orb
adc
mov
sahf
mov
aad
push
test
xor
push
imull
jb
icebp
pop
jg
and
daa
inc
clc
fucom
mov
out
mov
shr
orb
lods
lahf
jnp
loope
in
mov
out
sub
fcoms
lods
stos
scas
es
or
popf
sub
fidivrl
cli
mov
cmpsl
pop
jns
xchg
imul
loopne
jne
push
push
lahf
in
sti
scas
sahf
jbe
les
dec
loop
sub
and
or
lds
sub
icebp
lock
push
rclb
lods
and
pushf
pop
mov
sub
out
fstpt
rcrw
pop
mov
and
rolb
nop
outsl
mov
mov
stc
push
ljmp
push
mov
sarl
mov
in
jnp
xor
mov
sub
or
shll
lds
nop
push
sti
stos
xchg
add
scas
das
mov
inc
mov
sub
push
or
pop
shl
mov
inc
pushf
insb
pop
jg
or
rolb
jns
inc
cwtl
ljmp
cmpb
stos
cmp
dec
jmp
push
cmpsb
movl
imul
mov
cld
pop
shl
mov
mov
nop
test
cmc
into
mov
dec
repz
loop
push
sub
stos
pop
test
sahf
stos
lock
push
cmc
lds
movb
mov
sub
cmp
sbb
pop
push
mov
push
loopne
dec
sub
sub
jns
enter
pushf
dec
mov
xor
sub
lds
inc
hlt
xor
daa
out
jae
jge
dec
adc
xor
mov
lock
call
and
add
cmpsl
testl
cmp
aaa
jne
or
sbb
movsb
cld
jmp
mov
mov
mov
or
ret
push
loopne
mov
in
fistl
mov
in
pop
jecxz
dec
mov
arpl
jp
xchg
xor
cmp
popa
lock
pop
xchg
lods
xchg
scas
mov
jns
inc
jnp
stos
enter
push
mov
test
aam
loopne
mov
adc
imul
xlat
das
xor
mov
xchg
sbb
fstpl
or
enter
adc
inc
add
push
dec
in
mov
push
ds
stos
aaa
jmp
xor
pushf
repz
cmp
pop
out
icebp
pusha
shll
inc
cmp
ficoml
and
push
in
push
je
and
sub
out
sub
cmp
xor
aad
and
jg
leave
cmp
mov
rcll
ficompl
push
arpl
mov
outsl
mov
xchg
shlb
xchg
rclb
pushw
mov
cltd
xchg
pop
loop
addr16
jl
dec
cmpb
mov
mov
push
and
test
xor
push
sub
jl
dec
call
xchg
add
aam
mov
xor
push
out
lret
icebp
je
xor
jl,pn
mov
fldenv
addl
mov
shl
in
push
add
pop
lahf
dec
ret
adc
push
push
mov
not
inc
dec
cli
int
ret
adc
push
xor
pusha
aam
mov
xchg
cmp
push
pushf
xchg
jle
adc
ret
mov
test
pop
movsb
sub
push
and
lds
out
jecxz
mov
mov
fstps
pop
cmpsb
xlat
lret
or
std
sub
sub
ret
adc
cwtl
jmp
movsb
in
push
insb
shll
sbb
add
add
push
dec
dec
inc
pop
inc
pop
pop
shrb
shlb
popf
or
addl
addl
add
mov
push
hlt
mov
push
jb
push
adc
cltd
push
pop
sbb
push
dec
jae
cli
sub
mov
lds
sysexit
push
les
and
fmull
ss
mov
cmp
sbbb
in
outsb
rclb
fcmove
add
or
loopne
inc
es
test
mov
subb
or
out
xchg
stos
add
andl
sbb
enter
mov
int3
int
out
sbb
or
mov
divb
adc
cmp
and
iret
mov
xchg
test
sti
sub
faddl
cld
jg,pn
cwtl
pop
test
mov
inc
cld
push
iret
sub
push
sbb
inc
iret
mov
adc
test
add
fcomip
adc
mov
outsl
mov
mov
notl
xchg
in
adc
fistpl
add
dec
cmp
mov
movsl
or
pop
adc
jae
push
dec
fildl
aam
or
stos
push
and
out
xor
js
jmp
mov
pop
cmp
xchg
mov
movsl
pop
aaa
in
sub
xor
shlb
dec
mov
pop
bound
adc
sub
divb
jo
fsincos
sbb
mov
xor
rcll
repz
push
dec
push
test
jle
imul
cli
xor
andl
outsl
testb
cli
push
mov
sub
lods
test
int
add
mov
sbb
add
or
pusha
loop
or
rcl
std
xor
xchg
clc
add
xchg
dec
push
movsb
in
fsubrs
je,pn
xchg
mov
mov
cwtl
jle
mov
jns
push
push
sti
xlat
fisubrl
fstps
push
lods
xlat
out
stos
lock
xor
pusha
xchg
dec
mov
fucomip
or
lahf
scas
mov
sub
stc
jle
scas
xor
cltd
shrl
and
inc
sub
mov
cld
sti
test
mov
jb
outsl
imul
lahf
or
sahf
and
cmp
lea
enter
adc
mov
out
aaa
add
mov
pop
pop
aad
outsb
adc
mov
imul
pop
pop
stos
movsl
lahf
mov
inc
push
cld
jbe
jb
outsb
popf
imulb
adc
inc
dec
mov
push
cltd
movsb
rorb
sbb
xor
lock
mov
data16
and
decl
movsl
je
pop
nop
jne
movsl
push
and
mov
and
pop
repz
fdiv
mov
movsl
jl
add
cmp
lret
cmp
jecxz
arpl
jbe
in
lods
xchg
ljmp
cmp
rcr
scas
cmpsb
jno
xchg
orl
add
pop
or
scas
fwait
xchg
push
or
imul
enter
jecxz
dec
adc
lea
stc
and
popa
push
ret
jb
pop
sub
test
nop
mov
nop
outsb
int3
mov
pop
es
jl
and
adc
add
lods
out
ljmp
and
fs
pop
xchg
idivb
mov
and
imul
cld
jne
ljmp
in
loope
add
push
loope
mov
js
in
fisttpl
pop
notb
mov
mov
adc
aad
cmp
or
mov
lods
mov
dec
xchg
std
das
addb
push
or
mov
push
jnp
shll
inc
sbb
lahf
sub
push
scas
sbb
inc
adc
loopne
cmp
pop
add
cmp
xlat
jmp
mov
and
int
stos
adc
lret
insb
and
cli
mov
dec
adc
leave
sub
jge
mov
out
or
push
cwtl
jnp
cmp
lods
imul
push
jl
fldln2
scas
idivb
out
xchg
daa
mov
and
mov
out
frstor
repz
addl
enter
in
sub
pop
xor
and
xor
lods
ror
push
clc
jnp
lods
dec
shl
bswap
sti
lock
mov
pop
in
jnp
std
gs
ja
pop
ret
lret
mov
loop
into
mov
xchg
dec
pop
fdivs
dec
rcll
ds
mov
mov
mov
dec
das
xchg
ret
loopne
cli
lods
mov
lods
mov
test
lea
stc
jae
or
repz
clc
pop
push
mov
sub
mov
mov
mov
pop
leave
aas
in
mov
ds
pop
data16
dec
loopne
push
sbb
ret
mov
jno
cmc
cmp
dec
cld
xchg
push
jae
mov
pop
cmpl
rolb
xchg
or
xor
enter
scas
out
jle
shlb
repnz
inc
ds
and
push
ds
imul
shlb
dec
cmpsb
fwait
aaa
push
insb
xchg
ffreep
mov
mov
xorl
push
mov
pop
shrl
xor
insl
dec
xchg
ret
inc
test
xor
inc
fsubrs
mov
js
mov
or
inc
imul
fdivl
imul
mov
leave
fisttps
dec
adcl
adc
jg
insb
sbb
cli
aas
pusha
xchg
lods
fisubl
stos
fs
jne
ljmp
mov
ret
loop
subb
aaa
pop
add
es
ret
cmp
movsb
xor
out
xchg
fsubrs
mov
mov
jl
in
leave
outsl
xchg
inc
pop
out
into
lahf
mov
pop
inc
ret
in
stos
xchg
xor
ljmp
aam
dec
test
pop
mov
loope
add
cmp
mov
int
nop
iret
sbbb
mov
fs
mov
mov
subb
xlat
mov
out
mov
add
add
pop
dec
dec
push
pop
push
pop
dec
mov
dec
push
cmp
dec
stc
push
mov
add
lods
cmp
jge
repnz
repnz
unpcklps
dec
insb
cmpsb
and
movsb
or
xchg
cmpsb
aam
xchg
aam
aad
notb
insb
outsb
jno
or
and
shrl
test
fs
or
mov
jae
jae
jo
mov
xchg
imull
jle
xor
cmp
inc
fdivrl
dec
xchg
test
ret
adc
jnp
std
cmpb
pop
lret
inc
rclb
xchg
std
sub
jae
aas
dec
pop
ja
das
or
mov
mov
leave
stos
addr16
mov
daa
fidivrs
in
clc
cli
fidivrl
pop
idivb
idivl
sahf
sahf
mov
pop
cmp
push
and
sets
and
xchg
orl
les
loope
out
lods
data16
adc
loope
pushf
jnp
pop
das
xor
sub
xlat
nop
scas
mov
test
fstp
shll
push
push
sti
clc
dec
testl
jae
inc
jnp
xor
outsb
fs
lret
sahf
cwtl
repnz
and
call
imul
cwtl
aaa
mov
pop
xchg
stc
or
dec
pop
and
or
sub
test
ja
dec
imul
pusha
jl
insl
jo
pop
jp
fists
push
pop
cs
adc
mov
test
and
xchg
sbb
test
imul
xlat
jno
ljmp
jno
data16
repnz
pop
cwtl
fwait
leave
mov
pop
fstpl
aas
push
push
and
mov
mov
aam
lds
scas
int3
shl
rcl
sub
andl
aam
repz
fisubl
inc
mov
add
pusha
xchg
jle
lods
xor
push
loope
jno
ret
jae
push
push
jmp
xchg
subb
popf
add
jae
cwtl
in
ljmp
mov
cld
movsl
sub
loop
adc
mov
data16
xor
push
xchg
in
jmp
aam
jae
mov
pop
adc
or
fmul
rcrb
inc
add
or
mov
dec
push
movsl
rcrb
loope
repz
movsl
movsl
push
jp
rclb
push
mov
or
or
icebp
xchg
lahf
adc
or
test
and
gs
lcall
inc
ret
lret
add
out
sarb
je
outsb
inc
repnz
cmc
sbb
test
adc
aas
and
inc
das
out
enter
or
cmpsb
lods
movsl
cmp
lret
data16
popf
lock
aaa
xor
fsubr
inc
add
push
push
icebp
aaa
jg
pop
sub
add
mov
push
dec
jg
dec
mov
nop
imul
xor
push
mov
loope
lahf
add
clc
das
sbb
cmp
mov
cmc
push
and
push
shld
ljmp
addr16
push
dec
sbb
pop
add
icebp
data16
pop
push
jp
fisttpl
adc
inc
inc
pop
test
xor
jnp,pn
sub
sbb
xor
push
gs
cli
mov
dec
cwtl
ds
cli
stos
mov
subb
out
dec
jbe
aaa
sbb
les
ds
jo
cli
pop
push
mov
icebp
loopne
mov
cmpsl
xchg
scas
push
push
xor
ret
mov
dec
popa
int
jg
mov
jmp
jnp
test
mov
add
dec
sahf
fildll
adc
jmp
std
adc
push
out
arpl
jne
ss
pop
xchg
subl
inc
and
push
push
xchg
aas
js
mov
cmpsb
sahf
inc
dec
ja
daa
dec
jle
sbb
cmp
or
push
jno
and
mov
dec
faddl
stos
loop
xor
mov
sub
or
fwait
das
pop
xchg
enter
fstpt
add
xchg
xchg
add
pop
stos
and
jl
or
jns
mov
jo
lds
mov
or
daa
jmp
scas
xchg
xchg
mov
add
jbe
clc
les
repnz
test
sarb
inc
mov
sbb
and
inc
cmpsl
ret
fwait
xchg
adc
mov
mov
out
cmp
adc
nop
jae
adc
jnp
out
mov
rorb
ljmp
inc
test
mov
call
lea
jp
out
sub
or
rep
rolb
push
ffree
cmpb
pshufw
xor
movsb
xchg
ret
ficoms
mov
mov
push
sub
stos
sbb
push
in
adc
addr16
dec
xor
mov
xor
sbb
push
dec
mov
insl
cmp
pusha
pop
ss
lea
int3
push
mov
mov
and
sti
lock
mov
std
push
mov
mov
orb
xchg
xchg
leave
pop
fidivs
stos
mov
arpl
adc
cmp
and
jne
add
fimull
xor
pusha
mov
fbld
shlb
gs
inc
dec
mov
cld
cmp
xor
mov
rorb
inc
inc
imul
in
xor
mov
fisubrl
jg
jmp
push
notl
mov
lcall
ljmp
mov
mov
aam
dec
fstpl
push
icebp
js
movsl
cmp
mov
or
in
ja
dec
je
adc
fstpt
mov
mov
lock
ds
stos
out
lods
mov
pop
cwtl
ret
insl
push
cmc
mov
jle
or
pop
ljmp
jmp
call
xchg
sub
inc
cmp
clc
mov
adc
sbb
push
xor
mov
es
inc
dec
fimull
push
adc
ds
pop
inc
mov
mov
xor
add
add
add
inc
dec
dec
pop
pop
push
sub
xchg
ret
fsts
add
sbb
fnstsw
js
mov
rcl
xor
xrelease
push
inc
loopew
sbb
mov
and
push
jg
in
dec
mov
xor
cmp
inc
cli
add
shr
dec
mov
dec
lret
movsb
push
fwait
jle
mov
jnp
outsb
data16
dec
in
push
pop
test
fistl
movsl
pushf
inc
cmc
push
leave
lahf
mov
jle
mov
lahf
xor
push
test
mov
mov
scas
pushf
mov
push
imul
pop
jle
clc
cmp
jmp
int
sahf
mov
add
jl
rol
dec
mov
xchg
sbb
loop
jae
outsl
pop
xchg
repnz
dec
out
bound
cli
arpl
js
sbb
call
hlt
mov
lret
daa
es
jge
clc
and
aam
icebp
mov
pushf
push
in
data16
mov
hlt
test
mov
ret
mov
loope
jne
hlt
rolb
pop
sub
insl
fdiv
aam
add
hlt
sbbb
pop
jmp
and
es
rol
sub
sub
cltd
jmp
and
fiaddl
push
sub
adc
pop
pop
and
inc
mov
pop
push
les
repz
mov
std
mov
fidivs
jnp
fsubrl
pop
inc
test
jp
or
outsl
push
cmp
xor
test
mov
imul
mov
aaa
shrl
pushf
add
push
mov
and
inc
mov
xor
jl
push
ror
arpl
mov
call
popf
test
push
rorl
sub
mov
push
jns
fldl
push
ja
xchg
das
leave
mov
gs
xchg
mov
in
push
and
jle
ja
cs
sub
and
pop
add
mov
mov
repz
ret
rcrl
es
mov
jns
mov
adc
pop
add
stos
add
xor
insb
xorl
and
mov
arpl
cs
cmp
in
lahf
xor
xor
and
ja
iret
pop
mov
adc
movsl
xchg
push
or
sarl
lcall
mov
add
adc
mov
lea
movsb
jno
nop
jge
in
and
jg
lods
lahf
cmp
in
and
dec
cmp
addb
fmull
mov
and
sub
xchg
pop
add
mov
fsubrs
inc
ret
repnz
cli
es
xor
mov
add
or
cmp
daa
outsl
int
cltd
out
jge
icebp
sub
loope
pusha
pop
pop
sti
mov
or
pushf
mov
xchg
outsb
or
pop
mov
push
iret
mov
or
sub
xor
das
push
leave
xchg
ljmp
decb
mov
je
mov
cmc
sub
fstps
jne
arpl
or
mov
jg
lods
mov
fisubrs
je
sarb
mov
add
xor
sbb
xor
pusha
out
dec
sbb
aam
in
jbe
pop
test
ret
scas
mov
cmp
bound
or
arpl
pop
leave
push
dec
popf
push
mov
inc
pop
addb
enter
fidivs
mov
sub
aam
lds
xchg
aas
cmp
repz
sub
mulb
jnp
fsin
inc
dec
sbb
sub
xchg
mov
loop
pusha
cmp
mov
in
add
mov
push
jmp
pusha
aas
ja
adc
mov
fcmovnu
ficoms
mov
dec
cld
dec
push
stos
and
shll
or
mov
mov
sbb
cli
add
jle
ficoms
mov
fsubrl
insl
out
mov
add
fdivrl
pop
std
cmp
adc
cs
imul
lret
jbe
ljmp
push
inc
push
pop
jmp
outsl
push
push
insl
jo
add
jle
mov
int3
fwait
lret
and
mov
fistps
test
sarl
ljmp
sahf
push
fcmovb
and
scas
loopne
sub
scas
cs
push
add
xor
outsl
sub
nop
shrl
mov
loope
ret
pop
xchg
dec
fisttpl
pop
movsl
lods
jp
loopne
push
imul
inc
mov
sbb
nop
mov
bound
daa
shrl
mov
jge
pop
stos
add
mov
aad
cld
repnz
popa
dec
pushf
out
dec
insl
nop
shlb
push
cltd
mov
cs
rcrl
mov
pop
push
cmp
popl
pusha
loope
push
testb
ss
and
and
push
and
sbb
cmp
pusha
les
pop
mov
lock
push
andl
jg
mov
test
mov
shrb
mov
push
sti
adc
movsb
movsb
ja
jno
or
and
nop
mov
popf
je
xchg
js
jp
fnstcw
clc
and
adc
sub
addr16
icebp
xchg
dec
adc
nop
fwait
sbb
roll
and
testl
or
arpl
push
cmp
loopne
and
adc
pop
in
inc
cmpl
cmpsb
mov
push
mov
xor
xor
xchg
xor
push
cld
or
out
imul
jo
mov
aam
inc
imul
lds
sbbl
inc
xor
int
mov
jno
out
xor
xchg
aad
inc
dec
jne,pn
pushf
cmc
mov
scas
jae
mov
aad
add
add
inc
dec
dec
dec
dec
dec
inc
dec
sub
std
xor
pop
xchg
add
addl
add
idivl
call
cmpsl
int3
adc
je
sbb
cmp
test
mov
mov
mov
sbb
leave
push
enter
jmp
or
jo
mov
or
pop
jno
sbb
sub
loope
movsl
and
stos
aad
popa
std
out
push
cmp
cs
mov
mov
pop
lods
in
popf
add
jmp
sbb
pop
adc
inc
rclb
pop
dec
scas
push
in
add
loopne
adc
cmpsb
mov
into
cs
ljmp
jnp
sub
sbb
sub
mov
cmp
lods
ret
sbb
and
cs
stc
mov
lahf
ds
dec
pop
mov
mov
stos
les
inc
pushf
mov
outsb
and
aam
orl
sub
mov
iret
fidivl
lock
inc
inc
bound
push
js
xor
ljmp
dec
iret
ret
fildll
jp
loop
pop
adc
xchg
or
fwait
or
dec
cmp
add
cmp
mov
fwait
lahf
mov
sbb
xor
ss
adc
js
das
sti
lcall
sbb
aad
pop
cmpsl
jnp
mov
sub
out
je
sahf
xor
and
dec
mov
pop
xor
leave
cmp
into
sahf
scas
pushf
scas
mov
push
push
les
push
adcb
jp
cmp
adc
ds
cld
call
mov
sub
ljmp
sbb
cmp
adc
jecxz
lea
dec
and
std
sbb
popa
or
or
int
xchg
inc
out
xchg
push
mov
xor
xor
mov
lods
mov
stc
push
subb
xor
adc
lock
mov
fucomp
andl
out
xchg
pop
push
test
add
ds
fwait
cmpsl
mov
push
repnz
cmpsl
cmc
inc
add
dec
out
jno
into
inc
cmpsl
add
jo
xor
out
jge
pop
scas
mov
outsl
es
cltd
addr16
mov
fdivrp
add
jle
push
add
mov
sbb
push
stos
decb
in
nop
loope
pop
ret
mov
xchg
mov
frstor
int
icebp
pop
bound
dec
movsb
ret
pusha
loope
mov
xchg
pop
jge
rcl
sbb
mov
jne
mov
into
pop
jne
fcomip
mov
fcmovu
mov
inc
sti
insb
mov
inc
mov
xor
and
dec
xchg
push
sub
mov
jmp
sbb
xor
out
aas
shl
add
sub
xor
mov
xor
cmpsb
ljmp
add
mov
insb
in
lods
cli
gs
jge
popa
daa
push
mov
dec
pop
movsl
dec
sub
scas
add
add
lcall
jmp
aaa
push
dec
or
js
je
orl
out
aas
dec
imul
lds
add
xchg
inc
test
mov
mov
push
push
cld
loop
and
pop
mov
mov
popf
mov
aas
out
sub
push
xchg
mov
sti
dec
in
popa
scas
dec
orb
pop
outsb
mov
xchg
insb
mov
sub
loop
aaa
insl
sbb
push
push
or
adc
pushl
orl
int3
sbb
lock
push
mov
push
pop
xorb
das
call
aad
mov
mov
cmp
lcall
lahf
mov
inc
add
cmpsl
imul
rcrl
pop
dec
and
push
ljmp
jne
cmc
fcoml
lea
inc
mov
gs
push
fsubl
push
into
rdmsr
mov
je
outsl
cmpsb
cmc
add
adcb
dec
out
mov
add
pop
push
xchg
push
je
or
orb
mov
dec
lods
mov
cmpsl
dec
adcl
xor
arpl
pop
fldt
adc
push
ss
mov
mov
out
hlt
jmp
inc
jecxz
shl
popw
pop
fnsave
out
and
callw
lods
xchg
repz
loopne
fucomp
inc
mov
mov
outsb
push
mov
test
lds
aad
cmp
adc
fstpl
out
ljmp
insl
inc
nop
movsl
into
jecxz
dec
or
or
call
sub
pop
adc
xlat
jmp
sub
cli
mov
mov
mov
out
dec
dec
icebp
ret
clc
leave
pop
inc
imull
add
pop
pop
jb
js
add
aad
push
repnz
dec
pop
and
stos
pop
into
ljmp
and
leave
movsl
nop
add
jge
hlt
dec
cld
repnz
out
fcmovnu
mov
and
leave
les
and
pushf
push
and
test
cmp
cmp
pop
test
shrl
ja
cmp
test
xchg
sti
push
popa
pop
mov
cmpb
pop
lods
inc
aas
adc
roll
dec
xlat
movaps
and
std
cwtl
push
mov
gs
mov
push
or
mov
jmp
mov
xchg
ret
cwtl
xchg
das
pusha
push
icebp
cmp
dec
push
rorb
fs
cmp
lahf
addr16
jnp
aam
dec
movsl
add
or
insl
mov
leave
and
ja
adc
mov
in
add
sbb
loop
mov
inc
hlt
dec
fs
xchg
pop
sub
add
cmp
je
iret
cmp
mov
adc
scas
pop
dec
xchg
xor
stc
push
dec
mov
pop
add
pusha
jae
cmpsb
jb
sub
ja
cmpsl
test
mov
jb
add
sbb
mov
xchg
movsb
dec
mov
add
add
add
push
dec
inc
push
pop
pop
push
dec
cmp
or
popf
add
addl
add
cmpsl
jle
test
dec
or
xchg
dec
inc
sahf
mov
outsb
scas
mov
sub
push
xor
negb
arpl
aam
jne
ret
cs
mov
ror
movsb
mov
ss
sti
mov
data16
cmp
sub
test
xchg
shlb
push
loop
cmp
sub
inc
cld
lods
xor
add
inc
shlb
jne
sub
mov
not
dec
ljmp
fildl
lcall
es
mov
aad
sbb
dec
jae
or
cli
mov
leave
aam
mov
adc
and
cmp
sub
js
dec
out
sbb
mov
lcall
fbstp
nop
mov
in
xchg
sub
jl
ja
test
out
xor
adc
bound
and
push
jae
xchg
dec
dec
adc
and
call
imul
mov
mov
dec
push
sub
out
push
test
pop
xchg
push
lahf
fidivs
mul
xor
jnp
lcall
pop
jg
sub
mov
ficoml
xchg
mov
aad
mov
sti
imul
fs
addr16
add
push
and
push
xor
mov
mov
das
xor
cmp
test
ja
cli
loope
imul
pusha
xchg
mov
ss
push
fidivrl
and
or
mov
scas
and
fldt
pop
adc
das
callw
out
xor
adc
cwtl
bound
xlat
dec
cmpl
in
sbb
jmp
mov
cmp
daa
mov
cmp
les
stc
out
arpl
and
addr16
jp
inc
stc
lret
stos
or
lock
mov
sbb
xchg
fisubrl
cmp
mov
insb
pop
xor
outsl
cmpsb
in
fisubs
dec
fistpll
cmpsl
cmp
icebp
jb
ljmp
cmc
adc
mov
gs
sub
jno
scas
jecxz
pop
daa
pop
imul
lcall
aaa
shrb
sub
sahf
inc
jl
dec
adc
sbb
jle
es
repz
adc
xor
sbb
fnstenv
jb
clc
cmp
xchg
cs
adc
pop
mov
rorl
pop
orl
hlt
cmp
mov
xchg
cmp
or
addl
pop
sbb
outsl
adc
and
inc
fs
inc
mov
out
push
popf
xor
dec
adc
xor
inc
and
nop
popf
sbb
icebp
mov
push
push
pop
jge
dec
fistpll
jbe
gs
cmpsb
push
cmpsl
add
mov
decl
stos
sub
rcrb
mov
sub
pop
insb
pop
inc
std
jbe
lods
clc
mov
adc
push
fcomps
popa
rorb
cltd
xor
inc
outsl
push
js
pop
leave
jno
scas
inc
in
or
clc
sbb
rolb
jb
sarl
aam
xchg
pop
stos
cmp
or
xor
shlb
and
mov
mov
push
and
ja
jbe
popa
aam
rcrl
hlt
pushf
mov
aad
jmp
cmp
sub
mov
cmp
and
jo
pop
ret
push
fdivrs
test
lcall
jmp
repnz
push
jecxz
stc
loope
push
pushf
mov
aas
or
and
push
adc
xchg
test
mov
and
mov
ss
or
adc
xlat
stos
inc
mov
scas
aas
add
ret
pop
pop
inc
loop
sbb
or
mov
out
cwtl
dec
pop
xor
jbe
movsb
test
in
adc
xchg
jb
inc
das
push
arpl
dec
mov
popa
shl
popf
xchg
add
stos
or
mov
push
dec
push
xchg
mov
mov
mov
btc
or
fsubs
jae
inc
movl
push
shrb
jmp
adc
mov
add
push
scas
push
lods
into
mov
scas
pop
xchg
stos
mov
pop
jge
mulb
lds
nop
mov
sbb
add
xchg
test
aas
xchg
out
mov
movsb
fsub
int
xchg
adc
push
sti
daa
push
daa
insl
aas
iret
in
rorb
scas
stc
jnp,pt
mov
inc
es
adc
jg
iret
test
mov
rorb
cld
and
mov
xor
cltd
pop
pop
dec
xchg
xchg
pop
mov
adcl
push
ja
into
sahf
or
bound
out
enter
pop
hlt
les
addr16
in
and
inc
inc
mov
jp
pop
inc
in
sbb
cmp
loop
scas
inc
int
inc
clc
lods
gs
mov
mov
ja
cld
enter
inc
cmp
mov
or
in
sbb
xchg
aaa
std
daa
pop
xchg
rcrb
or
addr16
into
mov
insb
lahf
jge
andl
cmp
or
sbb
jae
gs
push
test
sub
test
xor
popf
mov
inc
xor
cmpsb
dec
mov
push
jb
nop
lret
mov
and
xor
mov
pop
sub
dec
imul
pop
aad
jecxz
ret
jno
jl
cmp
mov
mov
cmp
and
xor
clc
push
into
data16
fwait
icebp
es
or
negl
shr
or
and
dec
lea
and
fwait
xor
xchg
cmp
popf
popa
sub
lahf
lcall
test
push
jecxz
call
pop
rorl
popf
xchg
push
int
mov
jns
cli
incl
insb
aad
and
btcl
stos
es
sbb
jp
insl
pop
fstpt
and
std
lret
push
aas
ret
or
push
dec
pop
outsl
push
xor
mov
mov
sti
sti
test
push
sbb
dec
mov
add
add
dec
inc
dec
push
pop
pop
push
inc
cmp
sub
movsb
add
addl
add
xor
xchg
lods
adc
mov
mov
mov
js
xor
jge
mov
dec
pop
cmp
and
mov
and
push
ss
sbb
xchg
rcr
cmpsl
test
add
jle
push
sub
mov
sbb
insb
mov
pusha
cli
out
loop
jae
rorl
push
sbb
adc
jbe
or
scas
pop
sbb
inc
add
imul
stos
push
jmp
popf
push
sti
rorb
mov
scas
int3
push
stos
lahf
das
scas
out
lcall
rcl
shlb
xchg
mov
xor
xchg
cs
cmp
mov
xor
mov
inc
xor
into
inc
inc
jbe
mov
xchg
adc
jmp
and
dec
push
into
pop
ljmp
jecxz
push
dec
daa
dec
rcll
fbld
add
add
sbb
mov
push
cs
lock
xor
jp
rcr
and
test
out
mov
sbb
fildll
sahf
adc
lock
cmpl
sbb
mov
test
pop
or
cmpsb
addr16
mov
and
jbe
xor
adc
push
cmp
adc
mov
rcll
into
xlat
lea
scas
mov
js
lds
test
addb
fisubrl
mov
dec
shll
xchg
int
add
clc
mov
lods
adc
xlat
cmp
popl
cmpsb
das
pushf
lahf
subb
xor
push
xchg
jno
aad
mov
not
sbb
mov
push
pusha
sbb
adc
cs
js
daa
cli
sarb
xor
add
mov
sub
sti
cmc
inc
pushf
adcb
ss
rcrb
leave
pop
out
test
jp
jb
lea
mov
jl
pop
pop
or
in
or
stc
call
mov
cmp
adc
lea
cmp
aas
push
insl
dec
aaa
xor
inc
std
cmp
jle
push
stos
jno
jmp
ds
xchg
loope
sub
or
xor
sarl
sti
adc
mov
lret
pop
pop
or
lret
imul
std
fidivs
in
push
adc
fstpt
lods
outsb
unpcklps
ret
sbb
add
fsubr
xchg
fwait
push
scas
push
adc
jns
cld
push
loop
popa
fwait
femms
sub
mov
jb
aaa
into
pop
adc
leave
leave
adc
insb
outsl
imul
cmp
push
or
mov
mov
dec
sub
lret
insb
jl
lret
cld
mov
std
aas
pop
push
ljmp
int3
jo
inc
repz
inc
add
pop
sahf
lahf
test
push
lret
adc
mov
xor
or
mov
xchg
mov
sub
xchg
dec
push
cmp
cmp
mov
mov
lcall
int
pop
pusha
arpl
ret
enter
xchg
fdivrs
jle
fwait
les
jae
sbb
daa
adc
test
mov
loopne
mov
sbb
adc
fisubl
leave
push
les
lcall
push
xchg
cmp
adc
imul
xchg
mov
mov
or
dec
pushf
movsl
scas
mov
dec
ret
repz
cltd
xor
cmpsl
js
and
push
aad
pop
test
cmp
fs
pop
fucomip
lahf
insb
lods
adc
dec
inc
adc
mov
mov
xor
mov
cmpsl
insb
cmc
mov
push
out
leave
mov
aaa
lea
cmp
or
add
mov
push
mov
jae
dec
das
cmpl
xchg
fdiv
jae
jl
push
xchg
lcall
ljmp
mov
jl
ljmp
mov
cld
sub
je
pop
jne
mov
adcb
inc
jle
cmp
rorl
fisttpl
pop
in
xchg
inc
lods
mov
int3
cmp
aam
xor
enter
cmp
add
adc
pop
movsl
stos
sub
out
xor
pop
imul
dec
pop
mov
and
cmpl
ret
aaa
cmp
mov
or
jmp
loop
sbb
sahf
pop
std
leave
sbb
mov
ja
das
pop
cli
aad
xor
icebp
sub
stos
cmp
arpl
xchg
movsl
ja
scas
dec
outsb
inc
pushf
jb
leave
xchg
inc
or
add
icebp
mov
dec
and
inc
jns
mov
decb
mov
imul
pushf
outsl
mov
adc
das
push
inc
dec
sub
negb
add
and
mov
or
add
test
sub
push
int
imul
sbb
pop
pop
divb
mov
loope
out
pop
imul
fwait
outsl
fstpl
dec
dec
daa
mov
sti
sbb
xlat
cs
icebp
push
xor
jl
fnstcw
in
lcall
mov
or
cmpsl
push
push
dec
mov
in
mov
mov
aas
loope
push
scas
pushf
mov
mov
ljmp
lock
mov
inc
dec
sarb
mov
sbbb
bound
jge
xchg
lds
sbb
pushw
mov
or
cmpsl
cltd
test
adc
mov
clc
bnd
mov
cmpsl
loop
inc
jb
enter
dec
jge
inc
sbb
mov
or
inc
ret
sti
std
mov
adc
mov
add
clc
fldcw
push
out
pushl
out
out
mov
mov
test
aad
fadds
add
add
push
inc
pop
pop
pop
pop
push
dec
mov
push
push
in
add
addl
add
scas
pop
jg
fisttpl
aam
cmp
jle
add
lret
sub
loopne
pop
sti
stos
lcall
out
jae
mov
fimuls
cli
mov
inc
jns
jae
and
xor
data16
pusha
test
mov
sbb
cmp
push
push
pop
adc
push
loope
add
hlt
lods
lret
das
out
add
inc
jl
enter
out
add
and
dec
lret
jmp
and
in
xor
add
mov
pushf
push
rol
cmp
jl
es
cmpsl
lods
cmp
xchg
dec
cwtl
dec
je
jp
push
push
out
jae
mov
inc
repz
je
aaa
xorb
or
outsl
cmp
inc
lea
addb
sahf
dec
push
sbb
pusha
dec
aaa
aaa
mov
fisttps
or
sbb
mov
mov
aas
dec
sbbl
sub
adc
push
jecxz
insl
cltd
jecxz
mov
arpl
or
lret
movsb
and
cmpsl
pop
sbb
test
out
xchg
xchg
ljmp
mov
rcrb
mov
cmp
popa
jge
cld
xor
nop
mov
jl
xchg
outsl
daa
pop
cmp
mov
push
aaa
inc
xchg
popa
imul
orl
mov
out
push
leave
mov
add
xor
mov
mov
push
xor
cmpsb
push
paddusw
nop
jb
dec
outsb
repnz
movsb
push
repnz
stos
push
inc
jae
xchg
push
outsl
or
push
movsb
xlat
mov
pop
mov
add
jg
loopne
mov
arpl
pop
mov
cli
rclb
jge
push
outsl
mov
cltd
jg
mov
mov
adc
inc
popf
add
clc
xor
sbb
pop
out
sbb
jecxz
dec
sub
sbb
insl
adc
mov
push
mov
xchg
cld
xor
movsl
aaa
lret
xchg
sub
lcall
adc
xor
or
xchg
cmp
pop
sbb
fidivrs
sbb
push
insb
mov
sub
inc
aaa
fnstsw
stc
jo
xor
or
xchg
lds
jno
adc
mov
push
xchg
inc
bound
mov
cmp
pop
pop
dec
icebp
rorb
mov
add
in
fstps
inc
orb
xchg
in
fsubrs
pop
xchg
pop
mov
orl
mov
inc
cmp
cmp
loop
xchg
jmp
cmp
insb
incl
inc
dec
rclb
mov
push
xlat
add
pop
loope
inc
addr16
adc
out
jo
xchg
xlat
xchg
xor
push
dec
mov
push
ljmp
ja
adc
jg
cmp
insb
push
xor
xlat
mov
stos
pop
cmp
lcall
je
inc
mov
jno
in
gs
or
jp
scas
inc
ss
aad
ror
push
movsb
testl
out
and
test
lahf
jg
sub
push
les
pop
sub
aaa
fs
testl
adc
popa
loopne
fdivs
ss
pusha
adc
nop
jg
add
aam
pop
movsb
adc
and
inc
popa
fwait
mov
mov
xchg
sbb
cld
pop
push
inc
iret
addr16
lods
sub
hlt
jae
and
rorl
dec
test
jg
lcall
sbbl
push
test
movsb
xor
and
push
adc
or
push
xchg
pop
xchg
sarb
fimull
jb
cmp
aaa
push
cmpsb
mov
xor
popa
push
out
imul
mov
data16
jns
pop
push
pop
and
or
xorl
rcr
inc
fimuls
mov
add
std
sti
out
hlt
sub
shl
adcl
pop
push
dec
mov
fiaddl
add
xor
ret
inc
pop
stc
pop
sbb
inc
sub
xchg
and
int3
je
icebp
shll
push
sub
and
and
jmp
std
and
dec
fcomp
lds
inc
cwtl
int
sub
cmp
xlat
ds
test
or
mov
mov
push
inc
mov
cmp
fistps
sti
fdivr
dec
push
in
ret
sbb
adc
push
fchs
adc
scas
sbb
insl
bswap
enter
pop
mov
cmp
add
sub
xor
add
jge
cmp
push
mov
int3
jp
jmp
mov
add
mov
add
inc
sqrtps
int3
jmp
cmp
jg
push
push
int3
daa
mov
scas
cs
fcomi
xor
xor
push
int3
outsb
cli
js
push
pushf
jge
jg
add
movsb
rolb
push
jle
mov
rcll
jne
mov
and
cli
or
cld
push
aad
je
addl
mov
jae
dec
dec
pop
dec
clc
pop
xor
inc
push
std
loopne
cli
fstpt
or
rcrb
jnp
js,pt
add
adc
out
cmp
insb
popa
hlt
inc
psubusb
xor
adc
inc
movsb
mov
push
and
push
je
inc
cmp
js
ffree
scas
add
pop
adc
scas
inc
mov
xchg
inc
mov
cwtl
pop
outsl
sub
js
sahf
rcll
iret
or
jl
outsl
aad
repnz
pushf
int
adc
in
xchg
push
sbb
int
sub
inc
sub
add
fmul
xor
cmpsl
xor
mov
popa
out
jmp
mov
cmp
and
mov
lods
jle
fnstsw
dec
sbb
mov
ja
sbb
shll
or
cmp
fimuls
outsl
lock
adc
add
cmp
pop
jo
jp
mov
in
outsl
cmp
jne
cwtl
jbe
mov
out
or
push
adc
sub
add
add
inc
inc
inc
push
inc
push
push
push
outsl
pop
mov
dec
push
push
add
pusha
cmpsl
shlb
mov
or
xchg
outsl
pcmpgtw
jo
cld
out
mov
ds
push
sbb
repz
out
push
ret
xchg
das
mov
or
stos
cwtl
jge
rclb
test
mov
and
xchg
in
lods
shll
icebp
mov
push
in
sbb
shlb
xor
push
fdiv
lcall
mov
test
stos
popa
or
jmp
rcrb
mov
xchg
and
jo
lret
mov
rorb
jmp
lcall
add
int
leave
sub
jg
mov
inc
cmp
gs
loope
js
push
mov
xchg
xchg
or
jmp
lret
stos
sub
aam
das
jae
pop
lods
or
dec
and
mov
xchg
fdivr
fs
cs
aas
jbe
lea
push
stos
sub
xor
bnd
ss
out
repz
icebp
jmp
in
negl
sti
xor
pop
icebp
addr16
sbb
mov
rcll
test
inc
scas
insb
push
push
or
xorl
dec
mov
xchg
mov
lods
aad
adc
bound
cmpsb
gs
mov
cltd
sub
repz
and
pusha
xor
add
leave
mov
or
arpl
jge
lods
mov
negl
push
jae
jns
fstps
adc
pop
sbb
arpl
push
lods
add
jecxz
cmp
jge
xchg
sub
and
imul
les
mov
idivb
add
push
jle
aad
lea
xor
repz
sub
cs
fisttps
sbb
loope
lods
add
gs
push
sahf
rcl
out
ljmp
es
lret
xor
enter
and
inc
pop
mov
shll
mov
aaa
repz
stc
mov
movb
in
mov
dec
jle
add
or
xor
out
xlat
xor
xchg
movsl
sbb
dec
testb
add
shrl
cwtl
mov
sahf
adc
jge
push
ret
jecxz
sub
stc
cli
stos
lds
scas
das
ja
dec
jg
and
inc
mov
shrl
psubusb
test
sbb
sub
jg
cld
sub
lcall
pushf
les
dec
je
ss
jge
stos
cmc
icebp
sbb
sub
pop
insl
adcb
xchg
ljmp
in
mov
xor
inc
inc
test
nop
xor
sub
add
test
mov
add
lock
lea
pop
mov
dec
jo
xor
add
pop
cwtl
inc
sub
xor
fists
jg
in
out
test
out
les
pop
push
push
push
imul
cmp
in
mov
iret
mov
xchg
adc
popa
or
push
lret
add
adc
mov
roll
and
push
jmp
inc
adc
leave
movsb
cmp
xchg
pop
xchg
pop
adc
into
divl
dec
les
or
es
xchg
jecxz
cmpsl
mov
dec
jle
xchg
push
in
mov
les
popf
pop
push
inc
gs
sbb
gs
push
jo
jp
xchg
add
fcomps
ss
sub
aad
mov
pop
xlat
pop
paddw
sbb
lds
xchg
outsl
int
fmull
fiadds
jnp
out
and
mov
enter
jl
icebp
test
jp
into
ret
pop
frstor
cmp
xchg
jae
cs
xchg
adc
scas
movsb
lea
xchg
mov
push
jmp
inc
ja
xor
fmuls
lret
leave
mov
sti
mov
push
rcll
pusha
cmpsb
xor
push
cmpb
mov
jo
cltd
pusha
adc
jge
add
scas
and
popa
addr16
mov
aas
stos
rcrl
inc
jae
jg
fnsave
daa
push
push
loope
jg
jo
inc
push
mov
and
adc
or
mov
add
pop
shl
subl
or
pop
push
clc
pop
pop
mov
jmp
ljmp
in
imulb
mov
insl
les
add
mov
into
movsb
rcrl
jmp
lret
and
test
inc
fs
repnz
xchg
cli
sub
iret
dec
aas
hlt
jb
cmp
lock
mov
dec
sti
dec
ret
ss
mov
inc
inc
jno
push
orl
adc
xor
aam
pop
pminub
cmc
in
cmpsl
test
jge
ljmp
push
push
fdivrl
xor
popf
inc
xchg
es
inc
cld
outsl
xchg
loop
jmp
iret
shrl
xchg
xor
pcmpgtb
inc
clc
mov
sbb
les
cld
lods
adc
push
and
or
or
js
addr16
mov
outsb
pop
mov
jno
gs
jno
movsb
push
sbb
mov
xchg
mov
sbb
sbb
insb
psllw
aas
and
iret
mov
and
cli
ret
xorb
repz
pop
pop
jp
pmaddwd
push
lahf
and
add
mov
ss
xor
mov
loop
sbb
pop
mov
jecxz
jecxz
jle
xlat
mov
mov
xor
dec
jl
push
lret
cmp
movb
fbstp
mov
movsl
mov
test
imul
pop
or
push
roll
aaa
sti
mov
fwait
push
jmp
repz
int3
pop
daa
dec
mov
cmpsl
jp
add
add
add
push
dec
pop
dec
pop
push
stos
mov
stc
test
mov
add
mov
orl
and
mov
decl
push
sub
push
xchg
lcall
lcall
pop
push
sub
cmp
or
fsubl
pusha
or
push
loopne
and
fcomps
mov
sub
dec
movsb
add
pop
add
addr16
push
mov
out
popf
out
sub
fsub
sbb
xchg
test
or
or
dec
cmpsl
mov
sarl
xor
xchg
lea
in
popa
cmp
add
sti
lock
jns
push
out
inc
sbb
sbbl
call
and
popa
or
or
xchg
test
aam
lock
inc
dec
cmp
movsl
cld
sub
bound
mov
add
stos
lock
or
sub
fmul
outsl
lcall
loope
int3
dec
cmpsl
in
inc
fmull
lods
rcr
clc
cmpsb
cmp
int
xor
inc
fistps
sarl
mov
add
int
fld
lret
jnp
push
sub
test
data16
lahf
aaa
push
pop
pop
rcrb
xchg
test
xchg
icebp
or
cmpl
mov
jl
adc
test
push
add
jecxz
insl
xchg
sbb
jg
call
add
test
and
jnp
ljmp
pop
imul
jo
mov
and
cmp
imul
std
and
testl
inc
std
nop
movsl
pop
js
addb
call
imul
orb
sub
pop
pop
push
inc
sub
ja
sub
int3
filds
imul
ret
sbb
jno
adc
data16
fisubrl
aaa
jmp
lods
mov
ljmp
rcrb
or
sarl
addl
insl
aaa
sub
int3
xchg
or
add
sbb
stc
imul
adcb
call
sub
das
jb
and
test
cmp
pop
sub
das
dec
ret
fadd
adcb
mov
imul
adc
cmpsl
xor
mov
loopne
push
mov
repz
adc
nop
or
iret
adc
rorl
into
sub
notl
daa
mov
inc
stc
shrl
sbb
sti
outsb
mov
pushf
push
and
out
cld
cmpsl
pusha
test
andb
std
daa
into
cmpsb
push
aad
push
dec
sub
lret
aam
subb
jnp
inc
add
divps
dec
mov
enter
es
filds
jge
push
or
lock
pop
cwtl
outsl
cld
in
out
xlat
push
add
stos
pushf
sbb
stc
imulb
pop
out
std
mov
fstpl
lea
add
cmp
repnz
lret
jmp
test
popf
int3
adc
pop
jbe
mov
xor
sbb
ds
and
push
add
popf
jecxz
cmp
lds
outsl
les
pop
clc
mov
xchg
sub
dec
inc
call
mov
addr16
inc
push
hlt
test
xchg
or
jp
xchg
clc
sub
hlt
mov
pushf
in
jp
push
fsubr
xor
xor
sub
add
push
scas
test
pop
movsb
lcall
fisttps
push
imul
add
mov
mov
cmpsb
aaa
fsubrs
inc
cmp
and
cmp
jns
not
test
inc
mov
fcmovb
add
mov
das
out
push
inc
push
jae
loop
shl
nop
mov
lea
adc
and
ljmp
jns
or
adc
mov
cmpsb
push
lock
shll
aaa
outsl
mov
cwtl
icebp
sti
pop
jno
sub
emms
fiadds
idiv
das
imul
sub
xor
aam
dec
adc
dec
cmp
xor
add
pop
sub
jno
fnstsw
xor
repz
cmp
or
iret
cmp
mov
testb
jge
mov
out
jbe
mov
mov
repz
sub
cmp
and
dec
int3
inc
mov
or
pop
adc
js
cmp
inc
cmp
mov
call
das
fdivrl
sub
sub
push
adc
fnstsw
rolb
sbb
push
mov
clc
out
push
shlb
lock
paddsb
sbb
push
mov
inc
ljmp
xor
jmp
cs
cmp
sbb
xor
and
loop
jle
stos
aad
add
lods
movsl
mov
std
popa
push
fs
lret
lock
icebp
mulb
mov
ds
addr16
sbb
xor
push
fistps
sbbb
push
push
or
cmp
pusha
mov
nop
in
add
lret
add
outsb
lahf
test
aam
mulb
lods
xchg
xchg
and
jns
mov
jmp
test
call
js
pop
inc
dec
cmp
adc
sub
in
jns
sbb
mov
leave
pusha
pop
int
hlt
xor
decl
sbb
shll
pushf
jb
add
sbb
loopne
and
sub
iret
popa
rol
mov
fstl
mov
lods
mov
pop
in
fisubrl
sub
loop
roll
icebp
mov
enter
in
enter
add
sahf
jge
add
ret
push
inc
mov
mov
push
ret
or
dec
imul
movsb
xchg
push
adc
faddl
pushl
sbb
pop
or
add
test
shl
sbb
adc
xor
jb
pop
jl
ja
xor
add
add
push
dec
dec
push
pop
push
pop
dec
idivb
jns
adc
outsb
mov
add
in
js
push
call
pushf
cmpsl
lea
push
fisubl
jecxz
dec
dec
mov
inc
jmp
fbld
lock
push
outsl
inc
outsl
ret
adc
mov
cmp
lcall
in
lds
ljmp
jae
fwait
mov
int3
ss
add
cmpsw
xor
jl
and
push
out
jb
js
lea
jmp
cli
ja
mov
or
push
hlt
test
push
add
mov
inc
shll
push
mov
mov
fs
mov
dec
add
xchg
jnp
clc
into
outsl
jl
pop
insb
dec
test
or
js
xchg
fisubrl
push
and
and
mov
adc
mov
outsl
jmp
and
and
adc
add
sbb
loopne
pop
popa
xor
or
mov
jns
scas
sbb
in
imul
pop
shlb
addl
mov
cmp
jne
cli
mov
pop
xchg
in
repz
push
push
pop
lods
clc
xor
cs
jo
pop
jns
fstpt
mov
or
fwait
push
out
push
arpl
inc
dec
idivl
push
popa
loopne
into
pusha
xor
int
mov
popa
je
in
mov
xchg
add
pshufw
ret
mov
pop
adc
xchg
orl
ds
in
subl
cltd
dec
pop
push
dec
xor
leave
popf
jle
mov
mov
lea
xchg
xchg
iret
fisttpl
lock
jbe
cmp
sti
rcrl
sub
xor
xor
dec
cs
xor
pusha
jp
xchg
jge
inc
dec
lods
filds
addr16
or
fwait
test
dec
sbb
movsl
es
addr16
pop
popf
rorl
sbb
mov
mov
fs
call
scas
push
mov
test
adc
xchg
sub
mov
test
out
mov
mov
pop
or
lret
out
mov
and
or
not
sbb
mov
fcom
mov
cs
enter
add
sub
push
jae
roll
pop
movsl
shr
push
out
xchg
xlat
or
es
or
fbld
daa
ret
mov
and
xlat
cli
repnz
sti
mov
pop
add
cmp
push
out
pop
pusha
cmpsl
mov
dec
stos
cld
hlt
and
or
push
adc
loopne
xchg
cmp
adc
mov
push
jbe
mov
mov
cld
jp
fs
and
into
cmp
movsl
xchg
ret
add
dec
test
push
add
xor
dec
inc
cmp
inc
sub
fiadds
test
jo
mov
icebp
mov
aam
push
add
cmp
xor
scas
push
outsb
out
sarb
clc
movsl
pusha
ret
cmpsb
pop
les
xchg
push
pop
pop
fldl
dec
test
xchg
mov
push
popa
cmp
mov
push
out
lahf
mov
sar
adc
into
cmp
add
add
mov
sbb
push
cmpb
outsb
mov
xchg
mov
sarb
lods
loope
das
inc
cmpsl
vmovdqu
aas
xchg
shrb
clc
push
insl
dec
cmc
fdivrs
les
and
mov
adc
xchg
or
push
lahf
jno
inc
sbb
sbb
test
pop
or
xchg
test
mov
in
nop
lcall
cmp
insl
ret
lret
and
nop
dec
divl
dec
movsl
sbb
stos
into
xchg
sahf
test
mov
out
ficoms
iret
lods
sub
sub
sti
push
pop
jle
pusha
inc
leave
stc
iret
mov
sbb
aam
divb
jge
in
pop
in
inc
std
adcl
icebp
jae
ss
xchg
pushf
mov
pop
xor
add
push
mov
dec
mov
dec
sahf
xlat
mov
mov
inc
lds
jo
int3
fwait
mov
in
pop
mov
js
popa
or
test
shrl
lcall
xor
movsb
xchg
sbb
repnz
dec
sbb
fbld
add
repnz
fwait
jbe
in
aam
movsb
std
aad
mov
fwait
pop
sbb
subb
xor
sbb
inc
and
mov
inc
mov
xchg
gs
bnd
push
fs
pop
push
inc
lret
mov
hlt
sarl
adc
xor
and
mov
fildll
rcrl
inc
push
clc
das
cmpsb
and
push
inc
outsl
lock
mov
fidivrl
push
lea
lret
push
fimuls
out
mov
sbb
lret
pop
test
imul
mov
jae
cmp
hlt
pop
sub
jnp
out
push
imul
cltd
add
xor
jnp
or
mov
inc
inc
adc
add
jb
mov
xchg
das
lods
int3
sbb
fildll
and
fisttpll
cli
call
sbb
mov
xor
lds
data16
jne
mov
or
cmp
cmp
mov
add
popa
or
pop
out
ljmp
mov
in
insl
sbb
addr16
das
mov
dec
in
shlb
cld
int
sti
in
sub
or
inc
jge
mov
insb
movl
div
pop
mov
ljmp
in
and
mov
push
adc
nop
ss
lea
mov
int
and
ja
xchg
jl
push
push
cmpsl
mov
mov
jge
shrb
outsl
sub
fists
dec
adc
inc
subl
and
xchg
xchg
mov
jae
dec
into
dec
xor
mov
jmp
loope
xchg
idiv
test
pop
push
jmp
hlt
xchg
clc
add
add
add
dec
push
dec
push
pop
pop
mov
mov
icebp
les
add
mov
jmp
add
or
int
mov
shrl
dec
lock
sub
pusha
sbb
jne
sbb
repz
inc
and
jmp
neg
jns
pop
movsl
add
lcall
sbbl
sub
push
jo
test
mov
cwtl
sub
dec
lret
add
cmc
mov
shll
jo
mov
data16
aam
add
jge
hlt
mov
lahf
mov
mov
or
push
add
test
jge
xchg
mov
test
sbb
pushf
outsb
das
insb
mov
mov
fisttps
xchg
les
les
fildll
inc
test
xor
ss
jne
cli
mov
call
pop
mov
cmpsl
cwtl
in
pop
sbb
sbb
and
and
out
push
stos
sub
push
dec
jecxz
inc
pop
in
mov
mov
add
sub
aad
out
cwtl
xor
adc
add
mov
sbb
sbbb
pop
or
andl
stc
xor
insl
data16
out
data16
sahf
dec
enter
psllw
inc
dec
fwait
sti
outsl
mov
clc
shll
pop
stos
inc
lahf
adcl
sahf
leave
mov
xor
fiaddl
dec
popf
xlat
or
push
push
cmp
aam
scas
int
jge
mov
adc
fldt
sbb
sbbl
jp
pop
cli
cwtl
imul
repnz
das
sahf
push
adc
outsb
adc
fucom
jl
int
mov
scas
jae
push
in
shlb
cwtl
mov
stc
mov
jecxz
push
adc
xchg
and
mov
mov
mov
rcrl
pop
scas
xchg
fcoms
insl
push
sahf
in
jno
and
mov
inc
xchg
test
xor
jo
cld
pop
mov
mov
repnz
mov
xchg
divb
add
out
jo
sub
and
packuswb
fwait
aaa
mov
push
adc
sti
lahf
movsl
sbb
sbb
push
and
jae
gs
pushf
jl
sbb
addr16
inc
mov
repz
cmp
andl
lock
into
add
cmp
sbb
rorl
jno
or
stos
sti
pop
test
sub
cmpsl
or
dec
cmp
inc
in
jge
aas
xchg
pop
xor
jne
mov
fwait
adc
das
adc
aaa
aam
lods
inc
jl
xchg
cmp
mov
int3
push
xor
sbb
sbbl
adc
pusha
mov
jl
dec
jl
mov
pop
fwait
daa
imul
mov
mov
xor
sub
pop
mov
mov
sub
xchg
int3
cwtl
test
in
lea
ret
jp
mov
jge
sub
pop
jmp
push
lods
imul
jo
addr16
mov
ret
adc
sub
loope
sbb
mov
roll
lcall
cmp
ds
jmp
push
out
lods
xchg
mov
pop
push
jge
jp
fisubrl
jle
push
push
int
js
out
sbb
pop
popa
pop
cmc
stos
inc
push
sub
ljmp
rolb
inc
loope
ss
aam
sahf
cltd
cli
jns
dec
mov
mov
ljmp
bound
outsb
testl
sti
out
popa
ror
pop
mov
in
or
push
push
sti
repnz
repz
in
fwait
jg
leave
adc
stos
fxch
adc
scas
imul
sbb
xchg
jno
lahf
mov
lods
or
outsb
mov
add
push
aaa
pop
out
imul
insl
stc
fcompl
push
test
sarl
push
neg
jle
sbb
mov
dec
xorl
out
leave
outsl
mov
sub
out
hlt
jne
mov
dec
out
popf
mov
sahf
xlat
mov
pop
ror
fcomps
sbb
stc
repnz
int
bound
sbb
scas
cli
out
add
cwtl
pop
int
or
pop
fs
pushf
nop
ret
in
jo
popa
aaa
and
jmp
ja
pop
pop
mov
fwait
mov
mov
mov
hlt
xchg
mov
mov
mov
fdiv
adc
cmp
adc
movsl
lds
xchg
aaa
lods
and
fwait
scas
mov
push
mov
ja
aam
push
and
cmp
and
in
or
div
xor
push
or
sbb
gs
sbb
test
iret
sbb
mov
js
dec
aam
jno
push
dec
sub
stos
in
je
ds
sti
movsb
mov
imul
inc
xor
shll
out
cmpsb
scas
jl
imul
lock
pop
stos
add
mov
xchg
add
push
mov
xor
pop
js
popa
inc
inc
imul
out
jne
adc
xor
jp
in
movsb
loop
stc
test
dec
inc
rorl
pusha
push
sub
mov
mov
adc
adc
nop
mov
fisubs
ror
jno
clc
sub
test
aaa
in
cmc
push
out
enter
dec
add
jbe
push
out
data16
je
cltd
xchg
imul
dec
mov
push
xchg
shlb
call
sbb
iret
sub
xor
bound
xor
fldl
xor
inc
dec
inc
hlt
icebp
jl
daa
in
stc
cmp
out
dec
cmp
in
insl
out
rolb
cs
inc
jbe
int
into
unpcklps
rcll
inc
icebp
int3
insb
insb
enter
test
pop
jae
mov
dec
incb
dec
or
pop
in
or
add
std
mov
jns
jns
mov
xor
jge
in
push
fcomps
inc
repz
pop
add
add
add
push
push
push
inc
push
test
jle
je
add
addl
add
cmpsl
xor
and
dec
jecxz
push
jle
sti
rorl
jmp
std
mov
aaa
popa
pop
or
mov
dec
dec
mov
jle
sbb
and
mov
adcb
mov
lahf
jnp
cmp
mov
and
push
xchg
test
push
push
mov
mov
ret
adc
test
and
in
pop
sub
mov
loope
out
dec
mov
pushf
mov
mov
repz
push
test
ja
pop
sub
mov
push
pop
pop
push
insb
ret
insl
scas
ficoml
cli
adc
add
ds
mov
fnstsw
into
xchg
dec
add
cmpsl
stos
loop
jne
dec
pop
jae
pop
xor
jecxz
xchg
sub
mov
xor
jb
movsb
cmpsl
js
xorb
inc
fdivp
jae
dec
sub
addr16
movsb
lret
hlt
add
fcomi
out
iret
bound
fwait
and
push
pop
mov
in
pop
sbb
mov
push
jbe
mov
sahf
pop
fnsave
sti
add
xlat
mov
daa
inc
mov
mov
mov
into
cli
lea
iret
mov
mov
mov
push
and
fidivrl
test
add
bound
push
xchg
add
cmp
adc
nop
imul
adc
int3
add
pop
loopne
push
jmp
mov
aas
jmp
mov
imul
lods
mov
imul
fisubrl
fstpl
lahf
sbb
mov
ret
jecxz
into
pop
fwait
adc
ljmp
mov
pop
pusha
repnz
les
fs
andb
out
loop
inc
call
add
mov
mov
or
push
je
inc
aad
jle
sbb
js
cli
add
mov
cmp
dec
out
sub
je
ss
sbb
add
imul
push
or
inc
and
xorb
vandps
or
cli
call
ds
in
test
and
loopne
pop
enter
and
shl
loope
jno
lea
popf
aam
xor
lods
xor
sti
sbb
mov
inc
xchg
mov
lcall
int
into
lods
dec
movsl
sbb
mov
xchg
in
pop
in
push
movsb
pop
arpl
jle
push
test
sub
dec
jae
outsl
sub
out
daa
in
test
cmp
xchg
imulb
or
cmp
xor
ss
mov
xchg
push
movsl
mov
nop
out
out
outsl
push
pop
xchg
out
push
out
sbb
pop
mov
jno
inc
and
call
push
popa
fs
cli
xor
les
shll
es
adc
cli
fistps
je
fldcw
pop
xorl
insb
fwait
or
enter
inc
test
jle
loopne
mov
add
hlt
cmpsl
out
jecxz
jae
xchg
dec
cmp
out
insb
fldl
mov
repz
push
pop
inc
gs
call
outsb
sarb
add
and
or
insl
add
xchg
push
fs
sbb
imul
insb
into
js
scas
dec
mov
sub
cmc
sbb
fdivl
aaa
shrb
inc
mov
sbb
sub
mov
incl
jge
rolb
loopne
mov
stos
imul
jle
pop
hlt
xchg
jg
out
ret
insl
sub
xchg
aad
pop
jg
daa
mov
scas
and
leave
rcrb
xchg
mov
inc
xchg
mov
shr
pop
adc
int3
in
mov
push
push
repnz
imul
inc
and
and
adc
xorl
sbb
dec
add
scas
push
add
mov
inc
cmp
jge
or
mov
pop
mov
arpl
inc
sbb
into
and
jnp
sbb
push
insl
mov
dec
mov
jns
dec
das
outsl
lds
sub
sbb
sti
fxch
popf
insl
or
mov
mov
mov
and
les
mov
mov
aam
jg
sbb
sub
mov
test
loope
jge
insl
movsl
out
outsb
push
loop
cld
push
lds
cmp
adc
loop
inc
ds
sub
mov
sub
movsl
mov
stos
xchg
mov
sbb
dec
push
cmpsb
xlat
sbb
clc
jmp
call
fisttps
mov
arpl
add
push
fs
mov
and
mov
push
fidivs
mov
js
xor
mov
idivl
es
pop
cmp
aad
mov
inc
jg
inc
mov
adc
push
mov
xchg
jne
and
and
out
and
insb
aad
mov
lahf
popw
cmc
les
push
ficomps
call
rorb
aas
pop
aam
sub
ljmp
sbb
dec
xchg
jb
and
aam
div
mov
cmpsl
push
push
cmp
pop
push
cltd
lds
xor
mov
mov
pop
jne
add
int3
aam
arpl
xchg
push
mov
daa
mov
loop
push
imul
pop
xor
fmuls
ss
inc
stos
cmp
pushf
sub
fldt
nop
mov
adc
mov
daa
ja
mov
mov
mov
adc
in
sub
mov
add
gs
push
out
adc
loopne
and
rcl
jb
jns
pusha
arpl
push
xor
cmp
push
or
xchg
shl
pushf
pop
inc
or
cmpsl
cmp
cs
cmp
and
sahf
add
add
add
dec
inc
pop
dec
pop
pop
inc
cwtl
inc
loop
sahf
cli
add
roll
add
and
inc
dec
mov
jecxz
mov
je
ja
cmp
ds
or
inc
ret
cmp
call
test
ja
rcrb
int
test
cmpsb
adc
imul
testb
das
incl
mov
pop
call
or
mov
cmpsl
sub
jg
push
outsl
or
iret
sub
testb
lods
and
shll
adc
inc
fcmovu
addb
mov
mov
cmp
push
dec
cmp
lds
sbb
pop
lods
adc
stos
sbb
loopne
jmp
xor
cltd
xchg
sti
jns
lahf
mov
cmpsl
mov
out
pop
add
push
call
mov
negb
lcall
icebp
in
stc
cmp
std
aas
incb
arpl
ljmp
std
xchg
push
imul
lods
cmc
aaa
sahf
xchg
subb
or
rclb
nop
push
rolb
add
inc
xlat
movsl
inc
icebp
dec
inc
imul
inc
mov
mov
pushf
scas
fimuls
dec
rorl
test
movsl
rcrb
inc
jne
mov
jns
dec
sub
or
into
scas
jl
mov
loope
sbb
dec
mov
jbe
jb
push
and
data16
mov
es
adc
into
scas
xchg
addr16
ss
sbb
jnp
nop
mov
sub
cmp
mov
mov
repz
arpl
repnz
std
inc
lret
mov
enter
mov
scas
xor
insl
xlat
pop
cmp
push
or
shll
mov
sbb
inc
jecxz
shl
std
loope
orl
ret
dec
sarl
arpl
sahf
push
or
cmp
pop
and
in
pushl
test
add
lods
and
xlat
jecxz
mov
popf
loop
out
ja
xchg
or
stos
inc
mov
dec
ret
imul
out
lods
push
clc
subb
movsl
dec
push
popa
sub
es
js
jecxz
mov
mov
enter
or
xchg
movsb
jae
in
fildl
cmpsl
or
in
add
sub
xor
xor
and
mov
fstpl
mov
xor
pop
pop
add
std
stos
dec
addr16
pusha
jl
shll
je
or
movsl
js
push
mov
xor
inc
xchg
mov
das
sbb
leave
aam
pop
scas
inc
mov
insl
sahf
incl
out
inc
sti
push
xchg
scas
pop
jnp
sbb
iret
adc
pop
mov
inc
sti
add
push
xor
gs
xor
inc
gs
sub
push
push
jg
dec
sbb
lock
sub
daa
mov
push
div
aas
leave
push
scas
jg
or
xchg
cmpsl
sub
mov
fcoms
mov
fimuls
xlat
insl
or
fbld
sub
lock
faddl
cmp
push
mov
jno
cmp
lock
add
cmp
out
sbb
pop
jno
pop
mov
dec
aad
inc
scas
rcrb
xchg
outsb
nop
jne
push
sbb
adc
adc
std
aaa
movsb
adc
xor
pop
push
dec
mov
pop
and
testl
push
mov
lods
sub
out
inc
and
std
out
rclb
shr
mov
sbb
test
sbb
xor
outsl
rcr
fadd
loope
aad
stc
and
popf
sub
push
in
mov
mov
loope
mov
insb
pop
push
pop
add
xchg
mov
jmp
mov
arpl
pop
push
cmpb
sub
call
imul
mov
lea
and
hlt
inc
cli
mov
add
mov
dec
push
mov
loope
aad
sbb
dec
mov
xchg
add
mov
xor
and
test
dec
popf
ret
arpl
mov
popa
dec
popf
cwtl
insl
or
xchg
xor
push
pusha
call
stos
xlat
jge
jne
xchg
add
jg
outsl
xor
xchg
or
pop
cmp
sbb
xchg
out
push
sbb
adcl
add
or
test
push
sbbb
mov
shll
mov
and
jmp
cmp
fadds
cli
jp
sar
xor
fiadds
adc
loopne
in
ret
mov
mov
ret
pop
inc
mov
imul
dec
pushf
stos
mov
jp
pop
lahf
adc
jo
das
mov
dec
and
add
int3
rcr
test
mov
aam
imul
jecxz
imul
xchg
fisubl
dec
lods
je
mov
adc
push
inc
imul
dec
jg
imul
popa
dec
pop
addl
xor
cwtl
pop
insb
arpl
into
int
cmc
cs
and
push
pop
mov
mov
sbbl
subl
sbb
mov
pop
les
dec
xbegin
fdivl
jle
xchg
push
sub
mov
push
mov
xchg
scas
popl
sti
sub
xchg
jle
ss
addl
xlat
mov
aam
xchg
movsb
pushf
mov
addr16
iret
leave
ret
sub
hlt
dec
sub
dec
cltd
jae
sub
ljmp
mov
add
lea
add
cmp
out
je
decb
jo
cmp
cmp
mov
mov
leave
fs
and
inc
jg
loopne
in
ret
sub
jp
iret
sti
pop
ret
mov
out
mov
add
and
dec
ds
xchg
mov
pushf
imul
cs
das
imul
outsb
vmovaps
mov
cmp
push
fadds
add
add
push
inc
push
push
push
push
push
inc
rorl
popf
push
dec
cltd
imul
add
andb
ret
jle
lret
jle
push
test
xor
jg
fdivl
pushf
insb
dec
dec
and
adc
push
lods
mov
inc
mov
in
aam
pop
or
cs
cmp
fsubr
mov
dec
or
xlat
mov
inc
mov
add
sarb
lods
es
xchg
inc
cmpb
shr
jl
mov
jle
cltd
inc
sub
scas
nop
jle
push
adc
inc
shr
stos
mov
aam
dec
cwtl
loope
xor
jne
outsb
lods
movb
loop
out
xlat
mov
imul
test
push
pop
iret
cmpl
jns
popa
pop
repnz
mov
out
mov
mov
sbb
sbb
mov
mov
push
or
jbe
cmpsl
mov
adc
push
mov
lods
adc
lds
pop
mov
jnp
mull
jno
jb
or
add
mov
movsl
jmp
sarl
insb
fnstenv
xchg
mov
add
jecxz
cs
test
popa
mov
js
sahf
sub
push
mov
and
aaa
fprem
jg
sub
and
sub
outsb
test
add
test
jns
jmp
add
xor
out
sub
jns
lods
mov
cmp
jo
int3
aaa
adc
rcl
add
and
sub
lods
add
mov
das
jmp
lret
ds
inc
sub
xchg
pop
shrw
fisttps
mov
adc
ret
fildll
loopne
xchg
fnstsw
sbb
repz
adc
mov
push
lock
mov
mov
and
and
cli
dec
ds
or
or
jl
add
std
xor
ja
inc
in
add
insb
ja
or
das
pop
repnz
imull
fldenv
cmp
cmp
push
fdivp
push
push
cmp
pop
push
push
mov
cltd
aas
gs
cmpsb
popa
dec
xchg
scas
or
cmp
inc
adc
xchg
fldenv
pop
mov
in
std
lock
std
dec
adc
pop
cmp
mov
sbb
adc
fldt
cltd
test
pusha
ret
sti
or
fisubl
lds
addr16
lea
out
add
daa
pop
dec
xchg
pop
inc
jecxz
mov
mov
js
dec
stos
cltd
mov
mov
shlb
adc
enter
dec
sub
pop
lds
test
xor
sub
fldl
lods
fisubs
add
sub
cmp
cmp
pushf
sbb
push
into
pop
mov
push
push
fnstsw
push
sahf
mov
test
lret
cmpsl
or
jecxz
inc
jnp
out
jns
lcall
mov
inc
mov
das
jno
mov
test
mov
inc
jl
out
pop
pushf
fs
push
mov
sub
insl
out
jo
outsb
pop
mov
lahf
movsb
lea
enter
rorb
xchg
loopne
jl
xor
mov
xor
xchg
jge
sub
jg
cwtl
testl
fcmovnbe
push
fnstenv
push
lods
arpl
filds
addr16
cmp
add
lcall
rclb
sbb
jg
mov
sbb
cmp
inc
jns,pn
nop
int3
fsubrs
push
sub
xchg
gs
call
pusha
push
mov
jmp
lret
out
int3
add
insl
cs
inc
mov
and
daa
int3
js
sub
xor
testb
mov
mov
movsl
sub
shl
loope
jne
xchg
mov
and
cld
mov
mov
aam
fadds
in
data16
add
xorb
sbb
or
mov
fdivs
in
and
add
in
pop
mov
jno
iret
lcall
stos
fisttpl
pause
dec
mov
dec
mov
int
cmpsl
data16
jae
sub
or
xchg
push
fstpl
das
int
sub
sub
xor
push
mov
pop
pop
enter
mov
loop
aam
in
pop
dec
jp
jb
out
mov
fnstsw
sbb
jecxz
je
or
xor
and
addl
jno
xor
data16
shr
test
adc
cmp
ljmp
jo
xchg
sbb
dec
xor
mov
or
fwait
mov
adcb
stc
jg
mov
in
clc
ret
add
inc
fldt
pusha
repnz
into
push
lea
cmpsb
imul
push
inc
pop
add
test
aaa
dec
test
mov
ljmp
outsb
ds
sub
test
mov
mov
pop
pop
lcall
jb
dec
pop
sar
xlat
mov
jmp
in
mull
cmp
xor
cld
out
popa
dec
stc
jae
sbb
cmp
dec
hlt
and
ret
mov
gs
mov
or
or
ds
stos
fcmovbe
in
cmp
lret
stc
push
mov
and
out
fisttpll
imul
xlat
hlt
mov
xor
into
pop
sub
xchg
sub
gs
jmp
xchg
inc
repnz
jmp
and
es
xchg
add
lds
bound
or
jo
sub
xchg
and
call
lds
cmp
mov
and
sub
fchs
clc
push
out
fisubs
adc
push
aad
mov
out
mov
pop
or
imul
cmp
mov
xchg
and
ljmp
cli
scas
out
movsl
jne
scas
mov
mov
add
fsubr
scas
mov
aad
test
out
and
push
jne
mov
sbb
push
lods
outsl
andb
sbb
add
add
add
push
push
pop
push
pop
pop
xchg
stos
mov
jg
fiadds
add
mov
mov
scas
jbe
call
pop
int3
and
popf
ja
repz
mov
outsb
mov
xchg
inc
jg
daa
ds
stc
push
test
push
int
or
clc
sbb
dec
decl
mov
cltd
dec
push
rclb
inc
cmpsb
push
iret
leave
imul
or
in
inc
jnp
lret
mov
mov
mov
das
mov
aad
push
test
xchg
pop
lahf
push
decb
fstl
cld
scas
cli
mov
outsb
subb
ss
xor
jmp
push
enter
jp
incl
adc
jne
add
iret
and
or
pop
bound
xchg
in
fistpl
mov
fs
cmp
mov
dec
out
xchg
jnp
adc
test
pop
rclb
iret
sahf
sub
pop
les
xchg
push
inc
jne
cmp
sub
and
cmp
dec
add
pop
addr16
sbb
mov
push
xor
data16
es
mov
or
insl
aaa
js
in
cs
out
mov
jae
sarl
mov
or
std
jno
cmp
imul
jne
inc
stos
roll
iret
jno
aaa
leave
arpl
inc
icebp
cli
push
adc
jg
add
std
adc
insb
pop
imul
sbb
jmp
push
xor
jmp
dec
lods
mov
adc
dec
pop
adc
add
test
rolb
xlat
sti
pop
repz
push
mov
gs
jae
jecxz
fisttps
pop
mov
mov
test
xchg
ret
rcll
jge
movsl
lret
pop
mov
in
insb
hlt
imul
outsb
or
popf
call
or
ljmp
pop
int
jl
pop
dec
or
stos
and
fwait
inc
popf
rclb
call
scas
mov
call
add
mov
js
les
mov
pop
test
adc
dec
cmc
jmp
xor
dec
shlb
add
dec
imul
mov
or
jb
jecxz
cmpsb
das
jmp
push
js
imul
push
sbb
arpl
iret
mov
adc
xchg
mov
test
outsl
je
fisttps
jle
xchg
ljmp
adc
stos
icebp
and
and
cmp
ret
movsl
arpl
enter
jns
and
fnsave
xor
cmp
fs
mov
adc
repnz
xchg
mov
addr16
fwait
mov
or
out
cmpsl
mov
mov
loopne
loop
into
in
and
movsb
pop
inc
adc
dec
scas
in
jae
xchg
scas
outsb
sar
dec
mov
adc
mov
aas
data16
push
sbb
enter
sahf
xorb
ds
shl
mov
inc
xor
push
cmp
ret
shll
lods
adc
push
jp
add
imul
and
inc
cmp
lret
cmp
test
xchg
sahf
in
and
mov
js
pop
stos
movsl
aaa
adc
or
mov
fimull
mov
mov
lahf
dec
jns
stc
adc
inc
mov
dec
add
dec
sbb
adc
aad
inc
cmp
les
loopne
cmp
in
out
cmp
cmpsb
or
sub
repz
leave
jne
out
or
stos
lret
sbb
fnsave
xchg
out
mov
sub
xlat
pop
add
jns
xchg
rolb
ret
pushf
inc
cli
icebp
aaa
xor
mov
pusha
ret
ror
fsts
lcall
inc
add
adc
fdivs
in
dec
inc
cmp
jge
add
ds
jmp
cmp
xchg
jne
mov
mov
imul
add
xchg
ret
inc
pop
addl
jbe
insl
ds
cmpsb
xor
jbe
sti
xor
lods
in
jo
jmp
push
jg
jbe
xchg
xchg
aam
pop
push
lcall
mov
dec
loope
shlb
xchg
push
mov
sub
xor
lahf
loope
mov
mov
gs
and
xor
insl
xchg
test
ret
mov
loope
jo
push
jle
aad
cmpsb
or
dec
cmpsb
fimull
dec
ret
mov
push
adc
sub
scas
dec
mov
mov
mov
inc
jecxz
sti
rcll
xor
pop
adc
xlat
fwait
jne
cs
add
into
dec
sti
std
jae
ret
into
mov
xchg
mov
imul
in
mov
jmp
pop
inc
pop
inc
xor
dec
test
imul
out
inc
imul
hlt
mov
xlat
mov
test
jmp
cmp
aam
lods
jbe
cmp
ljmp
push
or
sbb
push
push
mov
xchg
and
cmp
or
push
fcomi
daa
pop
mov
ljmp
cmp
dec
inc
mov
in
inc
adc
rcll
adc
subl
rcll
pop
dec
sbb
xor
pop
xchg
stc
jo
test
cld
rcrb
cwtl
and
and
popf
daa
sbb
ljmp
sub
bound
sub
add
imulb
or
mov
push
adc
prefetch
mov
mov
mov
pop
inc
popa
mov
xchg
jb
and
addr16
sub
xchg
idivb
cmp
push
jecxz
xchg
push
cmp
jecxz
es
cs
ds
dec
loope
xor
mov
and
xchg
sbb
test
cwtl
lods
and
mov
sub
or
mov
scas
sub
mov
stc
mov
adc
mov
jmp
push
add
add
dec
inc
push
push
pop
push
dec
pop
idiv
shr
and
add
mov
sub
push
ret
add
mov
sub
cmp
and
push
mov
add
sbb
mov
insl
int3
int
out
lcall
into
into
inc
repz
rcrl
add
pushf
xor
pop
loope
mov
aaa
cmpsl
mov
ds
mov
cmp
aas
lods
mov
jo
mov
adc
int
clc
xchg
sbb
push
aad
loope
ret
movb
out
pushf
push
sub
jp
clc
outsb
mov
or
repnz
rcl
pop
fists
jb
lea
fdivl
rcrl
dec
cmp
sahf
pop
or
in
inc
pop
inc
clc
push
sub
pop
int3
inc
in
push
push
repnz
ret
pop
cmc
ljmp
xor
fwait
or
push
adc
lea
sbb
lcall
aam
cmp
add
mov
mov
xor
idivb
jp
mov
and
pop
jle
iret
aad
imul
mov
cmp
clc
std
xchg
mov
add
add
nop
and
enter
sub
xor
fst
fwait
sub
cmpsl
jno
ds
ljmp
testl
mov
sbb
icebp
mov
adc
mov
rcrb
mov
arpl
push
add
and
idivb
ds
jmp
xor
mov
mov
or
inc
int3
and
aaa
dec
test
jno
adcb
bound
nop
dec
cli
adc
mov
inc
jno
out
iret
xchg
lea
or
call
and
mov
dec
and
movsb
in
jp
mov
shr
add
pop
frstor
bound
aaa
fcmovbe
mov
jge
xchg
scas
mov
dec
jl
int3
push
mov
lods
pop
mov
movsb
movsl
addr16
mov
mov
inc
stc
mov
fisubrl
mov
jle
dec
out
iret
xor
sbb
in
or
sbb
jg
icebp
and
jae
xchg
jl
jl
aad
sbb
mov
jecxz
in
push
add
adc
out
dec
mov
mov
in
jmp
jecxz
aaa
into
xchg
pop
jmp
mov
testl
fsubs
jnp
pushf
ljmp
push
xor
mov
mov
dec
dec
dec
filds
les
xchg
add
psrad
xchg
popa
pop
rclb
fsubrp
mov
sti
sbb
or
fwait
into
xchg
fs
dec
and
negl
enter
lods
xchg
scas
lds
test
mov
das
arpl
out
add
jl
jb
fisubl
popf
cmp
sbb
mov
enter
in
mov
movups
icebp
arpl
xchg
nop
xchg
loop
iret
std
arpl
pop
aaa
inc
or
stc
lcall
sub
cs
push
lds
sub
rorl
sbb
jo
stc
lock
pop
xor
or
push
out
rorb
mov
jp
push
push
imul
cmp
mov
push
mov
jno
sbb
dec
or
lods
popf
popa
cmc
cmp
cld
scas
mov
mov
lahf
xchg
sub
mov
jno
addl
loop,pt
inc
cvtps2pd
lcall
mov
push
nop
mov
push
je
cmp
movsl
sbb
sbb
test
popf
adc
push
pop
fwait
test
xor
mov
imul
lret
jmp
and
xchg
arpl
lcall
int
test
sbb
shr
jecxz
rol
mov
cmp
push
js
mov
cltd
jl
in
sub
push
leave
pop
bound
lods
mov
sarb
into
mov
sub
iret
sbb
sub
jp
bound
inc
test
add
ja
ljmp
leave
test
ret
scas
jecxz
js
repz
ret
jmp
out
outsb
fstpl
ret
or
movl
or
or
loopne
pop
test
sahf
jecxz
loope
sub
adc
push
test
mov
fcoml
nop
push
cs
stos
lret
dec
mov
out
and
stos
out
inc
in
cmp
lods
lcall
lods
loop
pop
test
inc
mov
shl
rorb
inc
pushf
cmpsl
mov
lcall
cli
adc
out
fdivl
scas
mov
mov
sbb
pushf
lea
mov
xlat
mov
call
movsb
xor
jecxz
cmpsl
push
adc
ret
sub
push
enter
mov
sub
adc
inc
outsl
pop
mov
mov
jg
push
mov
and
dec
cld
out
xchg
data16
js
push
stos
add
or
mov
sbb
inc
xor
hlt
test
inc
push
in
mov
push
push
pop
adc
imul
cmp
ja
jae
int
xchg
push
lret
jmp
mov
test
out
push
fisttpl
nop
mov
cmpl
pop
call
mulb
adc
test
inc
xor
in
push
subl
ficoms
outsb
sbb
or
das
inc
int3
aad
or
mov
clc
scas
enter
fdivs
std
or
addr16
outsb
enter
pop
cmp
aam
add
flds
dec
mov
imul
ss
lcall
xchg
cmc
notb
pop
loop
jo
adc
or
mov
mov
jmp
popa
sbb
dec
daa
sub
mov
add
add
add
inc
pop
inc
pop
pop
pop
mov
push
mov
mov
add
addl
add
mov
push
lea
mov
cmp
mov
ret
cld
cmpsb
insl
aaa
dec
or
aad
test
mov
push
xchg
imul
loope
jp
int3
push
sbb
cmpsb
sahf
adc
fldl
enter
mov
lahf
cwtl
mov
lods
push
mov
fbstp
rorl
add
xchg
cmp
mov
shrb
mov
push
imul
dec
jb
sbb
in
popf
mov
mov
or
mov
stc
ljmp
test
and
jae
dec
push
nop
add
test
cmp
pushf
std
jg
cmpsb
mov
into
in
lcall
sbbl
inc
mov
mov
xchg
lret
add
loopne
and
xchg
leave
cmpsl
pop
test
add
or
cmp
je
sti
ljmp
sbb
or
jecxz
dec
lods
in
sarb
jle
xchg
push
fdivs
dec
imul
fldcw
sub
sti
gs
gs
imul
xor
xlat
add
mov
xchg
leave
xor
std
ds
out
cmp
dec
push
or
inc
and
int
in
test
dec
cmp
sub
mov
add
mov
xor
pushf
xchg
push
xchg
xor
test
imul
pop
xlat
ret
outsl
push
or
ljmp
fwait
xchg
add
mov
ss
sub
jne
mov
mov
ljmp
cmc
fwait
adc
inc
and
lret
fmuls
outsl
dec
lcall
sbbb
ljmp
xchg
into
lods
mov
sub
jbe
xchg
iret
test
and
stos
loope
cwtl
cmpb
mov
jg
mov
push
fsubrl
mov
lahf
fnsave
shll
icebp
iret
test
xor
ljmp
cmp
stos
pop
and
jb
rcrl
inc
pop
js
pop
fimuls
sub
inc
mov
repz
mov
std
jl
pop
rcll
cs
xor
arpl
xchg
in
mov
pop
shr
cmc
lea
xchg
insl
leave
movsb
push
test
xchg
mov
je
std
int3
cld
pushf
xchg
pushf
push
pushf
out
aad
lret
pop
mov
jns
cs
mov
gs
sbb
clc
and
mov
jecxz
int3
sbb
fs
arpl
test
ret
fnstenv
sbb
repz
test
aam
cmp
sub
loop
pop
mov
pop
loop
in
mov
dec
pop
lret
ret
popf
push
inc
pop
or
repnz
xlat
xlat
push
xor
inc
lret
stos
cltd
fildll
decb
jbe
push
and
or
and
pop
rclb
mov
dec
and
mov
movsb
mov
xor
movsb
test
fldcw
xchg
jle
cs
lret
cltd
bound
fsubrs
daa
lock
pop
dec
mov
nop
cmp
sbb
jl
xor
push
rol
repnz
sbb
shlb
and
and
leave
popf
mov
shll
ss
outsl
dec
mov
sbb
testb
jno
lahf
rcll
and
loopne
cmp
jmp
and
insb
scas
std
call
pushf
insl
add
xchg
dec
sub
jmp
add
aas
mov
fisttps
pushf
xor
push
mov
mov
stos
inc
and
ret
and
daa
cmp
lods
inc
pusha
mov
xor
fdivrl
push
xor
fldln2
dec
stos
mov
daa
mov
insb
push
jmp
test
test
lds
cmc
xchg
xchg
sbb
xchg
pushf
js
push
rol
push
cli
jg
inc
data16
adc
adc
sub
inc
inc
mov
xchg
xlat
nop
or
in
pop
cld
psubb
popa
push
fcomps
xchg
lock
xchg
cltd
lret
jge
fmull
repnz
xchg
out
jo
push
pop
adc
in
cmc
xchg
mull
lods
xor
leave
mov
add
and
ret
js
outsl
xor
lcall
lds
add
loop
xor
xchg
rclb
mov
dec
sub
mov
adc
aam
mov
cmpxchg
lock
out
sahf
push
fcmovnbe
add
push
adc
mov
mov
cmpsl
or
fistpl
lods
xor
jne
lods
notl
mov
push
fildll
sub
mov
addb
mov
shl
sbb
mov
mov
and
pop
push
or
mov
ret
icebp
or
mov
out
and
xchg
les
lods
mov
or
lods
xor
fwait
sub
nop
dec
push
lods
std
jae
push
jecxz
mov
push
add
pushf
loop
jp
jo
jmp
xor
mov
dec
out
or
adc
sbb
jo
nopl
aam
push
mov
scas
mov
ret
subb
movsl
les
cmc
in
adc
jne
aas
pop
lock
sbb
mov
pop
jo
iret
sbb
out
cmp
fisubs
push
cmc
fsubs
daa
adc
push
int
and
add
jae
ja
es
rclb
aam
sbb
cmp
mov
inc
and
outsb
pop
inc
jae
jg
andl
fldcw
jne
jp
ss
cmc
and
inc
xorb
repnz
pop
rcll
sub
push
loopne
repnz
addr16
dec
sub
xor
cmp
out
fs
test
and
dec
add
add
add
inc
push
pop
push
pop
pop
ss
imulb
cs
popa
xchg
add
addl
add
xor
sbb
sbb
add
or
idivb
add
mov
lods
mov
cltd
sar
pop
fnstsw
fnstsw
jl
pop
daa
mov
jns
lret
in
and
jecxz
sub
pop
scas
daa
mov
aam
inc
sbb
test
fstps
mov
cmp
imul
or
repz
lret
sbb
push
and
insl
push
mov
xchg
jle
lahf
lea
adc
lods
push
stc
xor
mov
mov
fildl
mov
lahf
enter
push
mov
xchg
xchg
add
lock
and
inc
loop
popa
dec
mov
inc
push
jns
dec
sub
mov
inc
or
mov
aam
orl
dec
or
mov
mov
add
dec
test
cli
xor
nop
push
fstpl
pusha
ljmp
mov
sub
dec
out
and
mov
add
mov
jns
or
sub
or
out
and
add
push
sbb
pop
jmp
lahf
sahf
testb
stos
push
outsl
jecxz
into
pop
jno
nop
lcall
jns
imul
mov
stos
out
mov
outsb
inc
pushf
xchg
cmp
test
dec
mov
xor
int
xor
add
push
scas
jbe
sub
or
sahf
mov
mov
aas
and
std
xor
adc
jnp
cmc
cwtl
jmp
pushf
mov
sahf
cmp
ss
xor
pop
push
icebp
dec
jae
mov
push
inc
inc
cmp
ret
mov
dec
pop
sbb
movsb
dec
pop
sub
stos
add
pop
scas
mov
or
jecxz
cmp
pop
sub
xlat
jbe
nop
mov
xchg
add
dec
dec
jmp
cmp
cmp
rol
imul
mov
xor
das
mov
fcoms
mov
add
xor
pop
jp
cs
pusha
cmp
arpl
pop
lods
mov
add
xor
mov
jl
mov
rorb
nop
mov
movb
mov
je
cmp
mov
pop
jge
adcl
pop
jge
test
pop
sub
pusha
stc
cmp
movsl
or
inc
enter
aaa
xor
inc
cmc
loopne
sub
rcr
mov
or
leave
das
sbb
push
mov
shrb
rcrl
rol
inc
xchg
ss
inc
jbe
jg
jmp
mov
add
jl
fnsave
popf
pop
shll
or
inc
inc
add
cmpsb
jle
loop
pop
lret
and
pushf
outsl
dec
push
ss
jmp
aam
adc
pop
lret
test
adc
hlt
test
rcrl
mov
add
jb
cmpsb
xchg
push
push
inc
je
add
mov
insb
mov
adc
push
ret
fisttpl
insb
stc
mov
jno
hlt
mov
mov
rcrl
push
pop
test
push
scas
adc
jp
sub
mov
fbld
fxtract
pop
jb
enter
xorb
inc
lret
cmpsb
xchg
or
js
mov
clc
mov
imul
ljmp
xor
cmp
xor
stos
into
lret
mov
movsl
jl
inc
arpl
xchg
jnp
ljmp
negb
mov
xchg
shrb
outsl
xchg
jnp
es
push
es
push
inc
push
mov
pop
xor
and
and
jle
mov
imul
mov
mov
xorb
add
push
sahf
xor
xchg
fs
test
inc
mov
and
or
lods
inc
rclb
adc
mov
jae
std
fwait
scas
lahf
jne
jl
cmp
jns
sub
pop
pop
push
cmp
cmpsl
cwtl
les
sbb
mov
les
mov
inc
popa
xor
imul
or
xor
outsb
es
mov
data16
mov
sbb
fisttpl
sub
and
clc
jecxz
cmp
pop
ss
test
ss
aaa
mov
adcb
or
sbb
test
sub
sbb
mov
mov
imul
or
push
cs
jle
mov
test
outsl
jle
jg
cmc
test
inc
outsb
je
sub
sub
loope
add
pop
mov
in
xor
mov
mov
pushf
or
adc
in
sbb
push
lea
xchg
push
ds
pusha
test
imul
jge
or
jns
push
testl
mov
call
or
sbb
fsubs
mov
subl
jecxz
lock
fidivs
jno
pusha
xchg
cwtl
mov
lcall
jle
cld
pop
cli
adc
popl
js
pop
or
jbe
lods
xchg
mov
iret
add
pop
inc
mov
push
dec
ds
ror
lret
fdivp
mov
inc
dec
mov
push
aas
leave
inc
pop
inc
lret
insb
addb
mov
lcall
pop
outsb
xorl
fdivs
mov
sub
loope
ret
scas
dec
cmpsb
push
mov
mov
iret
pop
push
add
mov
loop
int
mov
jae
cmp
movsb
jle
shlb
adc
sbbb
jecxz
gs
adc
sbb
mov
sar
inc
imul
and
lods
inc
or
xchg
inc
add
add
add
dec
inc
pop
pop
dec
push
dec
push
enter
xor
or
add
addl
add
mov
addb
test
sub
lods
das
jle
adc
in
ljmp
aaa
xor
and
pop
mov
fs
lods
out
add
fiadds
inc
push
mov
inc
testb
and
add
or
repnz
int3
xor
cltd
mov
andl
and
fmulp
or
test
fwait
jge
push
mov
imul
pop
push
mov
data16
mov
scas
lret
push
xor
mov
lock
movsl
sub
iret
loopne
or
in
push
cmp
cmp
stos
mov
xchg
jle
imul
cmc
jne
aas
inc
lret
sbb
sub
xchg
clc
lods
idivl
mov
or
sbb
repnz
dec
popf
cmpsb
movsl
movsb
movsl
dec
inc
in
add
or
xchg
pop
pop
mov
cmp
xor
pusha
mov
outsl
mov
das
mov
loope
out
sti
jnp
mov
cs
lock
mov
in
notb
mov
gs
adc
and
mov
imul
sbb
fs
lcall
out
adc
imul
push
test
xor
xor
jp
jmp
ret
or
lods
int3
pop
les
jecxz
add
cmp
test
jmp
arpl
rclb
addl
xor
cmp
dec
push
cmp
lret
repz
push
les
mov
fidivrl
dec
mov
xchg
cmp
push
jae
cmpsl
mov
mov
mov
in
sub
pop
and
les
and
out
adc
xor
daa
mov
mov
dec
stos
int3
cmp
mov
pop
inc
ficoms
jmp
mov
mov
mov
sub
call
out
pop
test
and
test
sub
mov
iret
out
mov
sbb
ret
andl
inc
icebp
ds
cmp
dec
mov
lock
sbb
jle
add
lea
push
loope
clc
loop
lods
mov
xor
mov
push
adc
pop
mov
xlat
pop
nop
push
mov
js
mov
rcrb
je
adc
push
into
out
dec
mov
inc
test
call
in
sbb
fsts
pop
pop
mov
orl
pushf
jmp
mov
lea
das
loope
and
fnstenv
jae
xor
shrb
out
lea
jge
icebp
adc
sbb
movl
jno
and
cwtl
lret
lock
stc
cld
test
into
cmp
inc
mov
sahf
lcall
or
out
lock
bound
push
inc
xorb
fidivs
xor
lods
xor
mov
bound
aad
bound
repnz
fwait
sbb
ret
mov
or
fs
inc
jl
add
mov
pop
ret
mov
ja
cmc
adc
mov
push
nop
ljmp
enter
xchg
lock
lahf
scas
fwait
jne
je
imul
inc
dec
inc
lcall
add
cmp
iret
inc
popf
movsb
outsl
sub
ror
out
cmpl
inc
mov
adc
in
jmp
bound
mov
inc
cmc
fistps
out
roll
lahf
sub
mov
data16
std
fidivl
mov
out
dec
test
dec
cmp
cmp
roll
in
or
lods
push
test
and
jns
push
sub
lods
test
adcb
int
xchg
out
pop
jge
das
cwtl
mov
cmp
sub
fisubrs
xchg
out
pop
xchg
imul
fs
stc
aaa
cmpl
stos
push
out
fdivrl
push
add
xchg
mov
push
loope
jmp
mov
push
sti
push
or
movsl
mov
sub
out
mov
inc
das
mov
adc
cmpsb
cmpsb
mov
into
sub
mov
hlt
jns
std
insb
add
cmpsb
dec
loopne
fucomi
cmpsl
shr
dec
outsl
inc
test
sti
cmp
push
mov
push
cmp
or
jae
lods
xchg
stc
es
push
stos
lcall
pusha
stc
out
shlb
iret
daa
outsb
loope
test
xchg
ds
mov
pop
insb
inc
cmp
sbb
dec
or
add
cmpsl
ss
movsb
dec
scas
int
in
addl
dec
and
push
mov
repz
test
dec
mov
lds
xor
dec
cwtl
or
ds
outsb
test
and
jmp
out
outsb
push
daa
and
or
or
push
mov
lods
cmpl
nop
loop
fsubl
jp
dec
out
enter
mov
mov
inc
ss
loop
std
pop
cmp
aaa
out
stos
jb
ret
shlb
in
pop
pop
stos
int3
dec
and
sbb
sbb
mov
cmp
ja
call
clc
mov
ret
add
mov
cmp
jno
fwait
xor
jl
iret
xor
data16
sbb
mov
push
in
and
mov
ret
xchg
jmp
lods
and
lods
mov
cmpsl
cmp
adc
xlat
or
fs
jbe
lea
mov
jle
sbbb
int3
push
sbb
out
adc
lea
test
jae
cmp
inc
std
pop
inc
dec
adc
pop
mov
dec
jno
pop
andl
adc
rcrl
fists
xchg
mov
sub
outsl
mov
add
add
dec
push
mov
mov
or
dec
add
add
add
movl
cmp
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
cwtl
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
call
add
incl
out
aas
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
lea
pusha
push
incl
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
in
xor
add
movl
test
ljmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
js
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
cwtl
mov
or
rorl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
push
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
aaa
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
and
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
cmp
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
cwtl
clc
xor
inc
cmp
pushf
mov
test
clc
dec
inc
mov
pushf
rol
movsb
incb
inc
mov
test
clc
pushf
inc
decl
push
cld
jge
cmp
add
jmp
les
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
fmuls
test
test
cmp
pushf
xor
add
inc
dec
cmp
sarl
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
cwtl
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
cwtl
lret
xor
mov
lea
xor
add
inc
dec
mov
push
mov
or
dec
inc
xor
push
mov
add
inc
decl
add
inc
mov
cwtl
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
rolb
mov
xor
orb
dec
leave
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
cmp
shrb
clc
add
cmp
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
sar
shl
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
sbb
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
les
inc
push
aas
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
cmp
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
cmp
pushf
xor
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
cwtl
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
cwtl
cmp
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
xchg
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
std
mov
clc
test
je
mov
cld
add
add
faddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
in
add
push
and
incl
fmull
inc
nop
ljmp
lea
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
js
inc
inc
int
inc
sub
add
int3
mov
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
icebp
or
out
mov
pop
push
cmp
sar
incl
inc
ljmp
push
mov
and
inc
push
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
cmp
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
cmp
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
js
data16
idiv
inc
fadd
mov
andl
flds
pop
push
in
incl
loopne
inc
jmp
addl
mov
inc
call
outsb
inc
js
divb
mov
orl
jb
decl
mov
test
inc
rorb
adc
mov
mov
cmp
test
pushl
mov
add
jmp
pushf
decl
add
data16
add
add
test
dec
mov
mov
inc
cmpb
mov
add
push
mov
call
mov
data16
test
out
lea
test
inc
ljmp
decl
test
incl
test
rclb
test
inc
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
in
xchg
aam
call
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
cbtw
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
jmp
lea
faddl
xor
lea
test
decl
mov
dec
clc
call
lea
lea
test
popf
push
add
xor
cwtl
mov
incl
push
push
inc
shlb
lea
call
test
incl
clc
call
jmp
inc
jnp
add
mov
mov
data16
inc
lea
test
inc
dec
test
cmp
mov
pushl
lcall
incl
pop
mov
mov
decl
mov
mov
test
incb
incl
cmp
pushf
inc
mov
hlt
test
cmp
pushf
or
pop
lock
test
clc
mov
lahf
lret
mov
add
add
rorb
mov
incl
cld
mov
add
jge
test
sbb
xchg
call
push
inc
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
cmpl
pushf
xor
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
cld
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
cwtl
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
out
adc
jne
mov
fcomps
add
incl
mov
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
add
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
cmpl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
cmp
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
cwtl
pushf
xor
jne
mov
icebp
icebp
shl
mov
cmp
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
cmp
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
clc
add
dec
hlt
xor
mov
in
jge
mov
dec
cmp
xchg
mov
add
cmp
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
cmp
fdivl
test
push
add
cmp
sets
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
cld
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
or
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
ljmp
xchg
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
rol
out
add
add
and
fs
incl
js
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
cmp
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
idivb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
data16
pushf
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ss
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
cwtl
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
data16
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
orps
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
cld
js
popa
data16
into
push
data16
pop
xor
add
cld
cld
add
ss
add
into
ret
pop
add
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
pop
mov
je
xor
mov
xor
pop
cmp
jne
mov
cld
push
pop
inc
stc
aaa
test
clc
test
xor
fs
or
cld
mov
push
push
lret
aaa
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
data16
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
cld
push
add
add
add
lret
lock
lret
cmp
pushf
jge
aaa
cld
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
xor
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
xor
add
data16
dec
fisttps
add
ret
lea
add
cmp
pushf
add
add
inc
test
xor
push
cwtl
push
xor
inc
cmp
jbe
mov
or
inc
test
cmp
in
hlt
push
push
push
push
mov
cwtl
cwtl
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
cmp
pushf
jb
add
inc
daa
inc
inc
xor
dec
cwtl
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
cmp
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
cmp
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
cmp
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
aas
add
push
add
mov
cld
inc
add
rcrl
mov
mov
or
xor
enterw
jmp
ret
inc
mov
add
rorl
icebp
or
inc
inc
mov
or
jne
mov
rolb
add
cld
ret
dec
mov
mov
jmp
mov
mov
sub
mov
in
test
add
add
cmovge
add
cld
mov
adc
mov
xor
cmp
jne
mov
adc
push
test
clc
xor
xor
dec
adc
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
cmp
pushf
push
movl
dec
inc
andb
pushf
push
xchg
fsubr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
cmp
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
cmp
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
add
xor
add
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
and
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
movsb
sar
enter
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fcomps
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
fdivr
testb
dec
clc
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
sarl
pushf
add
mov
xor
test
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
cwtl
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
fiadds
xor
jb
add
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
cwtl
mov
jge
decl
jl
adc
pop
cmp
add
adc
test
adc
jbe,pn
add
adc
clc
pusha
adc
jp
adc
mov
pop
adc
inc
adc
pop
cmpsl
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cmp
add
xor
add
pop
adc
adc
in
adc
bound
adc
shlb
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
adc
ds
adc
add
add
pop
adc
cltd
outsb
adc
ja
adc
jne
adc
arpl
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
test
add
test
add
adc
add
adc
and
adc
ret
pop
adc
loopne
adc
add
aas
adc
xor
inc
add
test
add
test
add
inc
add
inc
add
inc
add
sbb
adc
inc
bound
add
adc
jecxz
adc
pushf
xor
add
or
add
inc
adc
jno
inc
add
inc
add
inc
add
inc
add
test
add
test
add
xor
push
xor
add
push
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
inc
ss
push
inc
dec
inc
add
inc
xor
dec
pop
cmp
cmp
push
pop
push
pop
dec
push
dec
dec
inc
pop
dec
xor
push
inc
pop
xor
add
push
pop
inc
push
dec
xor
pop
dec
xor
inc
inc
dec
pop
push
dec
xor
dec
ss
aaa
aaa
dec
dec
add
ss
inc
inc
xor
dec
ss
pop
dec
dec
inc
inc
dec
xor
xor
xor
xor
inc
dec
xor
add
xor
xor
pop
add
cmp
inc
dec
inc
xor
pop
inc
inc
add
dec
pop
dec
xor
dec
xor
dec
pop
push
dec
dec
cmp
xor
pop
inc
pop
push
pop
cmp
pop
dec
dec
pop
add
pop
pop
push
xor
xor
xor
push
push
add
dec
add
add
dec
add
inc
add
add
xor
pop
add
add
add
add
add
push
add
xor
pop
add
inc
add
add
push
add
add
xor
xor
xor
xor
pop
add
add
add
inc
add
add
dec
add
add
add
add
add
add
cmp
dec
add
add
pop
add
dec
add
add
dec
add
dec
add
add
inc
add
add
dec
add
pop
add
pop
add
add
dec
add
add
aaa
add
xor
inc
add
pop
add
add
inc
add
push
add
pop
add
xor
push
add
add
dec
add
add
inc
add
inc
add
add
add
cmp
push
add
pop
add
add
inc
add
add
push
add
add
add
add
add
xor
cmp
dec
add
dec
add
cmp
inc
add
add
inc
add
dec
add
pop
add
add
xor
add
inc
add
add
pop
add
cmp
push
add
pop
add
add
add
add
add
push
push
inc
push
inc
xchg
inc
pop
sub
mov
test
push
sbb
add
push
cmp
js
jbe
arpl
popa
push
pop
outsl
insl
dec
inc
push
jbe
pop
push
js
insb
insb
dec
addr16
push
jb
push
insl
push
bound
push
arpl
pop
jo
dec
inc
push
insb
inc
dec
jne
jbe
jo,pn
bound
