push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
add
mov
mov
mov
mov
mov
sbbl
push
sbb
jmp
ret
aas
ret
aad
aad
mov
popf
jle
jle
or
jle
fld
fcom
enter
leave
cld
icebp
fmulp
test
sar
rcl
mov
nop
fsub
nop
cld
jmp
leave
ss
xor
neg
aad
int
fnsetpm(287
lock
in
cli
sti
jmp
xchg
in
cli
fxch
out
leave
icebp
idiv
iret
ds
lock
repz
enter
out
fildl
ret
sub
shl
xlat
fdiv
stc
aas
adc
call
fmuls
repz
mul
ret
into
jmp
loopne
iret
lock
in
repnz
into
sub
sti
ljmp
int
into
out
rorb
fimull
div
aam
hlt
cmc
aad
ss
int3
rcl
rol
idivb
icebp
les
out
sti
xchg
ljmp
lock
leave
icebp
lret
or
mov
enter
or
jmp
xor
fmul
int
mul
fcomp
addb
call
int
in
loop
xchg
ror
divb
cmp
leave
cmp
loope
mov
vphaddwq
lret
repz
xlat
fdiv
cmc
sti
fnclex
cmp
test
aad
shl
clc
clc
leave
or
int
sti
fmull
int
leave
fmul
cli
xlat
aaa
cmp
loope
xor
xchg
dec
lret
stc
std
shl
aam
rol
xor
enter
ror
int
cld
fildl
mov
loop
out
out
les
repnz
idivb
lret
loop
out
in
fistl
loop
sar
in
xlat
cmp
fsub
adc
testb
mov
jmp
test
aam
cmp
out
in
cmpb
fcom
repz
hlt
loop
loope
sti
in
mov
xchg
ljmp
xor
cmp
repnz
xor
jmp
rol
ror
rcr
fcmovnu
mov
cmpsb
push
mov
add
or
jle
repz
aad
loope
and
out
mov
mov
rcl
jecxz
jmp
int
jecxz
ds
loop
test
cld
ffreep
fcomip
out
loop
out
stc
loop
cmp
fdivrl
in
std
icebp
lret
ljmp
icebp
loopne
leave
lret
lret
jmp
cld
ljmp
mul
aam
orb
xchg
out
aam
clc
out
call
shl
in
int3
aad
sti
cmp
decl
xchg
in
int
jecxz
shll
leave
out
fmul
cmpb
jecxz
cmp
xchg
fldl2e
xlat
rcr
out
in
repnz
int
cmp
enter
fstp
fdivrs
ret
cmp
ret
loop
std
fmull
in
div
ss
aad
aaa
test
in
in
fpatan
incb
in
mov
out
hlt
xor
icebp
sub
shl
cli
cmp
xlat
in
cmc
stc
mov
leave
fmull
xchg
fcomip
icebp
xor
ljmp
repnz
neg
or
in
in
jecxz
test
hlt
sub
xor
aad
lock
idivl
repnz
aas
leave
mov
movb
icebp
in
lret
fnsave
cli
cli
std
rolb
aas
xlat
repnz
sti
out
int3
addl
std
cmp
int
rol
in
lret
aad
add
std
xchg
loopne
ret
in
iret
out
idivl
not
clc
aam
loope
incl
repnz
call
iret
ret
fcomp
ffreep
jmp
cld
repz
addl
loopne
xchg
aam
repz
bnd
cld
clc
fcmovnu
repz
fcomp
test
mov
enter
cli
fldl
xor
xor
idivb
ds
stc
cmc
adc
repnz
loop
loop
ret
mov
dec
or
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
xor
jmp
ret
leave
aad
fcmovnu
sub
dec
push
xchg
add
or
jle
rcl
not
into
jmp
cmp
fsubp
test
clc
fidivrl
icebp
cmp
fstp
fdivrp
lret
ljmp
fxch
cmp
cli
xor
jmp
repnz
call
out
mov
cld
ror
incl
jecxz
out
aaa
aad
enter
sti
stc
fcomp
cmp
loope
fisttpl
out
mov
xor
ljmp
cmp
in
cmp
jmp
sti
jecxz
enter
jmp
repz
fistpll
fdivr
fiadds
fst
sti
mul
stc
faddl
ss
cmp
call
ror
cld
shl
icebp
fcmovbe
filds
into
decl
clc
repnz
xlat
roll
xchg
in
loop
mov
jecxz
icebp
ror
lea
xor
ror
lock
repz
sarl
lret
mov
test
sub
leave
jecxz
sarb
cld
iret
loope
jmp
out
fsubr
cmp
xchg
ret
les
xabort
out
lret
neg
rcl
cmp
cmp
in
cmc
aas
mov
xchg
in
mov
rol
rcl
sti
int3
fcomp
cmp
out
in
fdivr
jecxz
sub
xlat
in
out
fisttps
shl
fxch
cmc
std
rcl
cmp
fneni(8087
shl
xchg
cli
out
stc
jmp
in
in
sub
ror
in
aaa
int3
shl
aad
idiv
and
flds
sti
stc
repnz
sar
xor
sar
call
test
icebp
out
loope
cld
mov
in
out
mov
jmp
aam
idivl
rolb
loop
xlat
idiv
out
mov
jmp
ret
fcmove
sarl
out
idivl
in
fcmove
ret
out
enter
fmull
rorb
in
test
add
mov
sub
add
andl
mov
sub
jmp
vaddsubpd
rcr
pop
push
xchg
fistpl
aad
sub
jle
add
fldl
ds
cmp
sbb
call
lret
cmp
stc
aam
lret
push
fidivrl
std
fst
sar
mov
call
fisttps
in
fxch
in
cmp
int3
xor
mul
repz
fdivrp
aam
loopne
loope
addl
shr
in
sti
shl
out
test
std
jmp
repnz
in
in
in
fdivr
idiv
repnz
lret
imul
sbb
repz
mov
in
in
int3
out
mov
int
leave
in
into
cmp
cmc
jmp
rcl
shl
repnz
fsub
out
mov
in
shr
into
call
xor
aas
jmp
aad
aas
aad
fadd
fld
fimuls
mov
lret
repz
out
cld
clc
ds
ret
shl
in
clc
test
loope
orl
stc
xlat
cli
sar
into
in
aam
neg
loopne
ds
or
xchg
repz
in
cmp
loopne
sar
loope
shl
cli
roll
jecxz
mov
xchg
fsubr
cmp
imul
cmp
aas
hlt
fadd
xchg
loope
lds
std
xchg
shlb
sar
neg
xor
loopne
out
mov
mov
nop
aas
icebp
int
cmp
sar
out
in
stc
loope
iret
shl
mov
in
cli
std
out
xchg
fdiv
mul
xor
rcl
div
add
loope
aam
std
faddp
out
mov
cld
xchg
sub
jmp
aam
test
xchg
mov
mov
xchg
fmul
fucomp
fsubp
jecxz
lret
cmp
aaa
sti
fcomi
sti
iret
shr
ds
int
lret
into
mov
nop
in
enter
xor
sti
loope
iret
ffreep
repz
mov
movsb
jbe
add
add
add
xlat
fcom
fcom
fstp
outsb
push
mov
and
and
push
jle
or
jle
ljmp
in
aas
loope
call
int3
aad
shl
adc
test
test
out
fucomi
icebp
xchg
repz
in
lret
icebp
lock
iret
stc
xor
fadd
ret
incb
jecxz
xchg
cmc
aad
int3
enter
xor
jecxz
lds
out
sbb
loop
jmp
xchg
in
xor
int3
xor
out
int3
in
not
aam
and
xchg
in
ljmp
nop
cs
lret
aad
loope
cmpb
out
xchg
repnz
loopne
cs
divb
int3
shr
call
loopne
xchg
fcomip
aad
das
in
xor
sar
aam
clc
iret
xchg
mov
stc
jecxz
and
call
stc
rcl
icebp
lret
fdiv
cmp
fadd
xchg
stc
leave
lds
mov
shr
icebp
sar
divl
add
loope
cld
in
std
jmp
cld
std
in
out
xchg
test
lock
out
lret
lock
fnstsw
in
test
sti
fincstp
ret
int3
out
in
mov
mov
jecxz
xchg
jmp
hlt
divl
repnz
cmp
stc
fdivr
out
sti
not
out
faddp
ret
mov
in
out
fsubp
shr
cmp
cmp
fcmovbe
xor
in
aam
sar
cli
fildl
xchg
mov
mov
rcll
ret
xor
aaa
hlt
sti
fldln2
in
fadd
lret
jecxz
mov
lret
out
cld
cmc
mov
out
repnz
cld
loopne
fdivr
lock
cmp
leave
decb
mov
ljmp
and
loope
xlat
cld
xor
sbb
out
jmp
std
jmp
iret
clc
jmp
jmp
stc
fnstsw
cmp
lret
orl
nop
xchg
aam
xor
xor
in
inc
or
mov
inc
add
movb
shlb
add
xor
add
mov
add
mov
movl
mov
xor
mov
lea
and
mov
mov
mov
or
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
sub
mov
mov
and
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
add
add
jmp
ret
fstp
ret
frstor
mov
lods
push
sbb
or
or
jle
cld
aaa
loopne
loope
hlt
fst
icebp
fadd
testl
out
nop
shrl
fucomi
aad
cmp
sarb
fdivrl
mov
fmull
rcr
rol
ljmp
cmp
test
ret
mov
in
test
xchg
out
xchg
and
xor
xor
int3
repz
idivl
aas
shl
adc
ret
xchg
stc
jmp
xor
xlat
cmp
cmp
fnstenv
cmp
shl
les
out
sti
std
cmp
jmp
clc
int3
enter
cmp
testl
mov
int
into
imul
stc
fcom
int
idivb
fnstcw
stc
aam
sti
nop
jmp
sti
fucomi
mov
cli
ss
fcmovbe
cmp
sbb
test
jmp
in
in
repz
leave
in
iret
jmp
leave
cmp
roll
adc
fsub
ror
lea
cli
lock
cmp
aas
hlt
lock
in
repnz
in
incl
adc
fcmovbe
xbegin
clc
aas
in
fidivrs
jecxz
aas
call
fimuls
aam
cmp
int
in
aas
in
sar
xchg
testl
int
ljmp
lock
aam
call
cmp
call
fcomp
std
fiadds
hlt
add
mov
icebp
out
fnstcw
cmp
int
cmp
out
enter
fcmove
in
xor
loope
cli
aad
in
das
cmp
icebp
aaa
aas
iret
clc
out
out
fadd
ret
in
mov
dec
das
jmp
hlt
lret
rcr
sar
and
cli
sti
ret
xchg
leave
vcvttss2si
in
lret
aas
xlat
aam
out
test
add
or
mov
add
mov
mov
mov
mov
adcl
movzwl
andl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
and
mov
and
mov
mov
xor
add
jmp
aam
fistl
pusha
movsl
stc
rorb
jle
or
jle
movb
int
xchg
test
call
xor
int3
loope
xor
xlat
int
repz
fdivr
in
test
int
test
out
int3
xor
cmp
fdivr
cmp
repz
stc
clc
int3
fxch
xchg
jmp
call
cmp
fmul
lock
ret
loope
sti
out
call
shr
repz
xor
fdivr
xor
idiv
cli
cmp
in
in
call
loopne
in
mov
test
call
rol
call
leave
aas
enter
repnz
jmp
adc
xchg
aad
cmp
cmp
cmp
cmpb
fiaddl
int
loopne
mov
repz
dec
iret
shl
lret
repnz
div
lret
fcomi
in
in
nop
sti
xor
xor
sarb
in
fiaddl
cli
repnz
mov
sbb
mov
out
ss
cli
hlt
roll
out
int
jmp
fsubrp
xchg
out
mov
shl
jmp
cmp
aaa
lret
hlt
cmp
faddp
in
testl
ljmp
fucomp
xorb
neg
loope
mov
shr
fmul
fcmovnb
cld
out
into
repnz
xchg
cld
mov
in
aam
repz
xor
into
not
in
lock
ret
clc
stc
loopne
std
test
fsub
test
in
stc
in
cld
ss
cmp
out
incb
loopne
orb
test
ror
cmp
jmp
sti
out
lock
stc
ret
jmp
cli
xchg
out
jecxz
lret
cli
cmc
neg
lock
ds
loop
mov
aas
lds
ljmp
cmp
jmp
fstp
je
xchg
or
loopne
jle
or
jle
sub
fsqrt
cmp
f2xm1
fcmovne
fcmovb
lock
test
xlat
int3
stc
leave
mov
rorl
lock
out
repnz
sti
aas
cmp
cli
cmc
mov
lret
fistl
cmc
jecxz
aam
xor
out
dec
xor
sar
xchg
dec
shr
loop
idivl
lret
lret
std
int
int
aas
test
jecxz
rcr
xchg
lret
loop
aam
enter
cli
clc
cli
clc
or
mov
fldl
rclb
ljmp
in
cmpl
test
nop
fldln2
iret
mov
in
ljmp
lock
ds
test
fsub
add
fsubp
test
mov
cld
repnz
jmp
mov
cmc
xor
iret
roll
inc
fcmovne
test
xchg
in
icebp
xor
lret
call
lret
jmp
ret
out
cld
xchg
incb
addb
jmp
icebp
lock
int3
ljmp
fxch
ljmp
call
aam
lock
xlat
fiadds
adc
out
neg
loop
loop
loop
sti
loopne
shlb
repz
fcmovbe
in
sar
clc
loopne
testb
cmp
mov
mov
fucomip
shl
hlt
incb
into
xor
cmp
loopne
ljmp
mov
mov
imul
lock
cld
xchg
mov
cmp
fdivp
xor
in
cmp
repz
ret
stc
out
out
int
ljmp
out
cmp
std
cmpl
fiaddl
fcmovnu
fiaddl
nop
test
shl
ss
cli
cld
int3
cmp
cmp
sar
enter
aad
loop
lret
rol
lock
jmp
addl
mov
mov
xor
add
cmp
jne
mov
mov
jmp
int
rol
fst
lcall
sbb
push
jle
or
jle
ffree
push
call
ljmp
jmp
int
ss
rcl
in
ret
ror
aam
sti
stc
ret
fcomp
sar
icebp
ror
in
xlat
not
sti
aaa
loopne
cmp
fcmovnbe
call
std
out
xchg
mov
sbb
enter
div
repz
hlt
sti
iret
xor
ret
push
ret
jecxz
mov
in
jmp
jmp
fstp
addb
hlt
fildl
clc
movl
jmp
lret
call
in
test
in
jecxz
fincstp
jmp
loope
jmp
ret
repnz
lret
neg
adc
hlt
sar
neg
std
sbb
div
xchg
loopne
cmp
xor
repz
idivb
repz
in
lock
les
mov
in
cmc
loope
fcmovnu
shl
sarl
call
jecxz
icebp
xchg
mov
flds
xlat
bnd
ss
out
ljmp
xlat
hlt
loop
out
leave
fsubp
clc
jmp
test
loope
shr
into
aam
xor
fiaddl
fimull
jecxz
cli
mov
cmc
jmp
rcl
hlt
jmp
ljmp
fcom
ds
mov
lret
fisttpll
fisttps
in
sar
int3
lret
leave
leave
shl
cmp
repnz
testb
xchg
test
orb
xlat
stc
rcr
faddp
out
ds
fld
aam
in
clc
mov
iret
test
lret
cmp
xor
rcr
cmp
rcl
xchg
loop
mov
std
aam
enter
iret
in
into
hlt
jecxz
rcr
int3
ror
sub
rol
icebp
lds
std
stc
lret
loop
mov
in
cmp
cmp
cld
into
xlat
incb
aam
not
mov
out
mov
mov
add
mov
mov
mov
jmp
leave
ret
int
int
mov
mov
jle
or
jle
lock
das
xor
fdivr
push
shl
ret
call
test
cli
orl
not
sub
ljmp
aam
roll
lret
stc
int
mov
in
int
fcmovnu
xor
xor
fstpt
ds
iret
ret
test
ror
repz
ret
out
nop
xchg
nop
loop
in
fcmovu
stc
loopne
jmp
fld
test
xlat
cld
sti
leave
jmp
in
loop
out
mov
xchg
shr
xor
std
xor
in
out
fadd
test
mov
jmp
int
xor
ljmp
fcmovb
sarl
hlt
cli
repnz
sti
sti
adc
std
test
lock
iret
out
lret
int3
xor
sar
cmp
fildl
sbb
xlat
enter
faddp
shl
shr
out
ret
test
clc
cli
ror
ret
fstpt
jmp
call
fucomp
xchg
xor
xor
xlat
leave
clc
loopne
fcomip
rolb
sbb
mov
test
xchg
mov
leave
icebp
leave
leave
in
out
shl
rcl
cli
repz
cli
aad
out
test
repz
repz
aam
stc
shl
int
leave
shr
loopne
ret
cmp
test
clc
fst
test
iret
xchg
mov
mov
repz
xor
aad
cmp
loope
fiaddl
ds
shr
adcb
rcl
ss
sti
not
loopne
ljmp
in
repz
addb
lret
sub
cld
dec
cli
fcomi
into
repz
mov
jecxz
mov
out
popl
rcl
sti
repnz
cmp
rcl
out
add
fsubr
loopne
fdivrp
out
int3
mov
fidivs
out
int
jecxz
enter
idivb
rcr
out
mov
ljmp
leave
adc
lock
lock
lret
add
add
add
aam
mov
scas
test
jle
add
repnz
lock
icebp
fstp
int3
fadd
notl
call
xor
lock
iret
cmp
fcmovnu
icebp
hlt
cmc
repz
call
cli
mov
jecxz
out
repz
imulb
shl
fmul
aam
lret
test
out
hlt
les
out
xchg
mov
xchg
xor
lret
les
enter
fadd
int
loope
add
jmp
iret
call
xor
imul
in
not
out
leave
out
flds
repnz
cmp
aam
cli
fyl2x
xchg
shl
iret
out
ss
clc
cmp
out
icebp
xlat
ljmp
enter
ljmp
call
out
fidivl
cli
cmp
shl
addl
cld
lret
imul
xlat
mov
lea
fcomp
loop
int3
fdivr
std
hlt
loope
out
sti
loopne
jmp
test
leave
sar
enter
repnz
ss
ror
enter
fiaddl
cld
sar
ljmp
in
out
xor
repz
xor
not
out
sti
cmp
clc
popl
ret
xor
xor
jecxz
clc
ret
lock
xchg
rolb
iret
int
jmp
fcomi
fcmovb
cmpb
fiadds
lds
jmp
jmp
repnz
shll
lret
int
clc
fcmovb
rcl
lock
clc
ljmp
out
in
enter
int
in
cmp
into
sub
cmc
push
aam
aam
xlat
out
loope
in
jecxz
out
inc
shll
repz
fdivr
xlat
fnstcw
xor
aam
cmp
fisttpll
fmulp
mov
clc
std
stc
lret
aam
cmp
mov
fsub
hlt
test
enter
int
ror
ret
in
cmc
ret
cmp
call
cli
in
addb
cli
in
loop
mov
sub
add
mov
mov
jmp
xlat
rol
xlat
enter
push
ljmp
jle
add
std
out
xchg
jmp
in
out
cmp
lret
call
rol
xchg
cs
loop
aam
xor
jmp
ds
ret
mov
jmp
enter
enter
xchg
lret
xlat
in
enter
cmp
clc
int3
shl
cli
aas
repz
clc
lret
in
mov
into
rcl
iret
out
fmul
fdiv
test
icebp
repz
sti
mov
nop
addl
ljmp
jmp
in
xlat
hlt
lret
int3
cmc
loope
cld
rorb
icebp
ljmp
fcmovnbe
jmp
test
loop
flds
fstp
in
xchg
test
repnz
xor
cli
cmc
fldl
test
call
in
into
hlt
jmp
idivb
lret
fcmovnu
cmc
sar
into
aad
xor
test
mov
jecxz
faddl
vcvtpd2dq
cmp
cmp
std
sti
cmp
xchg
in
sbb
int3
cli
iret
mov
xor
fdivs
cmp
frndint
fsubp
fcomip
xor
ffree
repz
stc
mov
in
in
repz
cmp
lret
int
fistpll
out
loop
ret
incb
enter
mov
iret
loope
sti
out
stc
out
clc
cmp
aas
stc
shl
aad
fdivp
fucomp
leave
xchg
in
jmp
cs
lock
hlt
cli
std
jecxz
loop
stc
not
xlat
fdivp
ret
clc
in
mov
xchg
mov
ss
int3
cmp
cli
clc
test
cmp
shl
rorb
out
fsub
out
in
out
rcl
int
cli
fcmove
test
loopne
xchg
clc
mov
cli
fisttps
ljmp
cmp
cld
aaa
aas
in
into
test
cmp
fucomp
jmp
fisttpll
ret
jecxz
sti
out
mov
jmp
into
ror
fxch
fst
cmc
mov
mov
cmpsb
push
jle
or
jle
aaa
cmc
cmp
hlt
or
lret
jmp
in
sti
orl
cmp
call
in
rcl
out
mov
lret
lret
orb
fnstcw
clc
rcr
cmp
cli
fmul
ljmp
inc
fsubr
out
fisttps
decb
aad
cli
jmp
test
clc
testl
into
rol
test
aaa
repz
fxch
lret
cmp
xchg
cmp
repz
int
test
in
jmp
in
loope
aaa
shl
int3
shl
rcr
aad
icebp
out
xor
jecxz
jmp
out
out
cmc
out
cmp
ss
cld
std
iret
in
cmc
sti
enter
in
int
fmulp
icebp
fcmovnu
ljmp
call
cmp
out
cmp
cli
ret
cmp
cmc
cld
popl
jecxz
hlt
shrl
fdivp
cmp
addl
jmp
call
aaa
fnstsw
cmp
xor
ret
fcmove
in
out
in
test
jmp
ror
shrb
fucomp
rcr
faddl
in
fcom
jmp
into
out
in
out
ret
int3
xor
hlt
out
test
in
mul
lret
lea
cmc
hlt
jmp
leave
hlt
aad
sarb
lret
icebp
rcl
xbegin
call
fildl
jmp
clc
into
ds
fyl2x
ss
shl
shl
rolb
test
repz
out
test
cmp
out
and
fdivrp
fsub
test
ljmp
aaa
repz
repnz
hlt
iret
sub
rol
test
fchs
out
leave
loope
and
aad
call
fnsave
jmp
std
int
in
fsub
enter
leave
add
mov
jmp
ret
rol
rcl
rcl
sar
and
adc
das
mov
jle
add
jmp
int
ljmp
clc
out
cld
out
fildl
xchg
ret
adc
jmp
lret
mov
out
xchg
neg
lret
repnz
cmc
fdivr
lock
test
repz
cld
neg
fld
mov
std
icebp
repz
in
out
aad
aaa
stc
dec
fcmovu
iret
int
test
orl
mov
ror
ljmp
shr
testl
test
out
out
jmp
sub
out
idivl
std
das
lret
cli
iret
cmc
fdivp
sti
cmp
fldl
int3
out
clc
shll
rcl
cmp
cmc
lock
cmc
hlt
mov
loopne
out
lea
not
out
das
cmp
shl
out
jmp
in
hlt
ret
fprem
mov
mov
out
jmp
leave
jmp
sti
in
lock
aam
cmc
iret
mov
cld
fcom
lret
out
out
mov
lock
iret
in
cmc
icebp
shr
cmp
jecxz
addb
call
sar
fldl
into
cmp
call
into
stc
fnstsw
testb
ret
cmc
int3
mov
jecxz
xchg
fsubp
jecxz
in
ss
hlt
fxch
filds
fucompp
sbb
dec
out
ljmp
xor
iret
cld
idivb
shl
stc
leave
ds
incb
xchg
add
ror
in
aad
cli
out
ror
idiv
stc
fdivp
out
test
cmp
cli
out
loopne
adc
in
clc
out
shr
idivl
cmp
hlt
cmp
test
loopne
in
xchg
mov
shl
iret
xlat
cmp
repnz
fcomip
cmp
aad
into
cmp
cld
filds
in
filds
jmp
aaa
cmp
loope
shl
ret
jmp
in
icebp
ljmp
mov
mov
xor
add
jmp
rcl
rcl
fstp
rcr
cld
cmp
jmp
in
adc
jle
add
sub
cmc
idivb
sti
std
fsubp
loopne
ret
sti
ljmp
aas
shl
jmp
xlat
leave
clc
adc
in
ret
loope
in
fsubrp
call
out
div
cmp
mul
int3
adc
addb
cld
into
mov
jmp
xor
aad
xor
fcmovb
icebp
repnz
mov
testl
icebp
hlt
xor
xor
rcl
xor
int
ret
aas
cmc
in
ret
test
mov
xor
ret
xor
lret
cmp
icebp
int
cmp
mov
in
orl
stc
call
cmp
mul
loope
xchg
mov
sti
ljmp
ss
lret
repz
cmp
xlat
cld
and
shl
testb
lret
cmc
out
xchg
out
ss
cmp
xlat
cmp
addb
lret
xchg
test
not
aaa
leave
fdivrl
fdiv
loope
ret
cld
lret
iret
fucomp
out
fdivp
aam
out
iret
fdivrs
rcr
aad
fpatan
cld
cld
out
jecxz
clc
mov
loop
repnz
aam
neg
not
fst
not
out
std
shl
mov
out
or
test
xchg
xchg
aas
hlt
out
fcom
cli
lock
xor
aad
in
out
imul
cmp
fadds
repz
out
out
cmp
cmp
rcl
cmc
cld
ret
repz
rorb
xchg
icebp
mov
cmp
cmp
out
aad
std
in
out
clc
jmp
incb
sbb
cmp
cmp
hlt
int3
inc
hlt
aam
out
fcmovnu
repnz
call
mov
xchg
loope
hlt
ret
stc
neg
cmp
neg
lock
rcr
ret
xor
sub
mov
jmp
int3
enter
lret
int
stos
test
cmpsb
pop
rcll
jle
or
jle
cld
clc
fisttpll
mov
rcll
out
jmp
xor
roll
mov
leave
mov
ljmp
repz
cmp
rolb
clc
in
addl
jmp
in
shl
fcmovb
test
out
test
ret
xchg
loop
test
mov
sti
xlat
fmulp
fprem1
lock
fcmovnbe
mov
in
add
nop
movb
in
aad
icebp
enter
aad
in
loop
aas
in
aad
jmp
decl
out
or
int3
int
jmp
int3
ljmp
jecxz
out
incl
leave
cld
sbb
aam
div
xor
fnstcw
ss
adc
icebp
cld
ljmp
fsubp
call
hlt
lret
std
ds
aad
cmp
fiaddl
mov
clc
into
jmp
into
shr
hlt
clc
in
xor
out
cmp
divb
in
iret
mov
ret
sti
cli
incl
mov
repz
ror
hlt
lret
in
loope
in
in
lock
test
call
call
aad
xor
xor
aam
ret
cmp
loopne
aad
out
fsub
fmulp
ljmp
repz
cmp
sti
in
cmp
shl
sarl
mov
out
jmp
xchg
leave
neg
repz
xlat
clc
aaa
cmp
cli
in
iret
loope
idiv
shr
ret
test
nop
cli
nop
into
xchg
ror
aaa
icebp
leave
not
jmp
aaa
iret
xor
lock
mov
add
in
cmp
aaa
icebp
cmp
out
sub
icebp
mov
fcmovu
mov
aam
les
shlb
xor
loope
ret
xlat
loopne
movb
mov
mov
sub
cmp
mov
movzwl
jg
xor
jmp
int
rcl
fcmovu
int
xchg
daa
ljmp
push
jle
or
jle
in
in
ss
int3
fcomi
aam
cmc
divb
out
fstp
mov
fsubr
out
icebp
mov
lock
loope
lret
repnz
cli
ss
aad
sbb
rol
repz
jmp
fdivr
into
into
aaa
out
in
cmp
stc
ss
hlt
mul
test
sub
call
in
sarb
icebp
cmp
ret
stc
xchg
std
fsubp
test
cld
int3
clc
mov
faddl
das
rol
aam
cmp
out
icebp
sub
div
in
xchg
jecxz
rcr
shl
lret
hlt
clc
leave
fcomp
shll
in
cmp
rol
jmp
test
jecxz
xchg
aad
test
leave
hlt
cmp
fcom
mov
mov
jmp
fsub
mov
loop
lret
jmp
out
sarl
aad
jmp
xlat
ret
sbb
repz
aad
aad
fadd
test
in
loopne
fptan
lret
vmovq
xor
cmp
ret
mov
ljmp
test
lock
div
cmp
cmp
lret
rcr
xlat
aas
call
stc
mov
repnz
hlt
jmp
out
iret
leave
sar
loope
loope
flds
addl
shl
in
cmp
icebp
xor
in
call
loope
rcr
fadd
movb
fdiv
in
jmp
in
call
leave
aas
shl
in
aas
out
xlat
ljmp
addb
call
cmp
cmp
xlat
jecxz
icebp
adc
in
iret
mov
test
shl
divb
aad
shr
rcr
lret
cmp
shl
mul
aad
cld
sti
vpmovmskb
fldl
repnz
cli
imul
aad
xlat
fistpll
fstpt
cmp
repz
xchg
clc
testb
out
xchg
repz
stc
fdivp
xor
fisubrs
enter
mov
jmp
xor
jmp
mov
fst
fxch
jg
lods
loop
xlat
out
insb
and
or
jle
fcmovb
inc
repnz
stc
xor
loope
xchg
ljmp
xlat
call
repnz
cli
add
cld
rcl
sti
les
lret
addl
not
jmp
aas
hlt
sti
sarb
sub
cli
call
sti
sbb
mov
out
in
xor
rcl
aam
adc
add
fst
xchg
lret
lret
mov
repz
bnd
jmp
xor
ret
cmc
fldl
jecxz
test
mov
decb
div
xorb
adc
cli
idiv
fucomip
std
enter
out
sar
enter
leave
in
xor
fst
cmp
cmp
in
fdivr
popl
lret
mov
test
cld
out
fstpt
div
rcl
ret
aad
mov
in
loope
in
rcl
mov
rcr
leave
fsubr
aad
iret
test
sub
out
jmp
in
out
rorb
xlat
out
aaa
icebp
cmp
iret
icebp
cmp
loopne
jmp
dec
lret
lea
test
loopne
aaa
out
cmp
sarb
xlat
xor
div
in
std
out
nop
adc
test
loope
jecxz
iret
int
loope
flds
lret
fucomp
in
sti
loope
ljmp
in
sti
hlt
sbb
ret
xlat
mov
fabs
xlat
decl
nop
enter
out
fdivr
xor
idivb
mul
loop
in
jmp
sti
mov
out
in
shlb
xor
out
int
aam
jecxz
ret
cmc
addb
addb
shr
aaa
repnz
cmp
jmp
rcl
lret
sub
div
cmp
idiv
cmp
lret
int
push
jmp
in
std
jmp
in
mov
xor
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
jmp
rol
lret
aad
mov
pushf
jp
jle
or
jle
ffree
aad
ror
out
xor
and
in
loopne
addl
std
into
in
jmp
lret
fsubr
sbb
shr
aas
and
cld
test
enter
rorb
cmp
out
clc
int
aad
loopne
out
std
hlt
out
xor
jmp
lock
in
and
mov
das
idivl
hlt
repnz
ljmp
repz
cld
fxch
into
repnz
loopne
xor
in
out
cli
div
int3
cli
jecxz
iret
jecxz
int3
in
fisttpl
in
jmp
stc
into
out
cmp
rcr
test
xlat
aam
stc
roll
mov
iret
out
cs
lds
cmp
shr
sbb
cmc
mov
mov
jmp
mov
aaa
ret
cmp
std
sarl
cmp
addl
jmp
std
rcl
repz
out
lock
icebp
out
shl
cmp
xlat
jmp
aas
ffree
cld
jmp
jecxz
into
jecxz
rcl
fistpll
rcl
lret
test
movl
icebp
ret
in
icebp
lock
hlt
loope
fneni(8087
cmp
test
jecxz
fmuls
jmp
out
rol
repz
enter
fucom
cmp
cmp
xchg
mov
xchg
repz
leave
cmp
ljmp
jecxz
out
aam
dec
ret
mov
in
cld
rolb
xor
xor
in
std
aas
cli
rol
jecxz
ret
loopne
or
adc
cmp
into
stc
int3
lret
cmp
ds
neg
cli
hlt
rolb
fcmove
call
xchg
sub
into
out
cmp
addb
cli
cmp
loop
xchg
lock
loop
in
in
fstp
into
call
test
adc
add
add
add
ror
aad
fldt
sbb
or
jle
aad
aad
rcr
loope
test
fcoml
mov
loop
shll
lret
hlt
not
rcl
rcr
ret
rcr
leave
fmulp
in
decl
shr
enter
sti
cmp
in
out
addl
int
xchg
in
fsubrs
loope
clc
in
sarb
clc
int3
fcompp
adc
leave
idiv
fiadds
mov
fcmove
jecxz
shl
sarb
out
fildl
enter
cmp
jmp
rol
jmp
imul
fdivrl
loope
ret
cmc
mov
test
idiv
into
inc
lock
ljmp
xor
fistpll
cld
cld
adc
mov
sti
call
loope
iret
in
aaa
xor
out
iret
neg
lock
flds
stc
mov
std
fsubp
mov
in
aas
xor
jmp
jmp
int
repnz
fisttpll
shl
out
ret
fadd
shlb
aas
aas
repz
sti
jecxz
aas
loop
neg
jmp
into
roll
xor
sub
fyl2x
lret
enter
cmp
shl
lock
fcomip
cld
in
and
repnz
nop
icebp
out
repz
sti
iret
cmc
icebp
fdivr
iret
sti
jecxz
aam
repnz
testl
loopne
ret
fidivrl
out
xlat
repz
rcl
hlt
cmp
clc
or
mov
sti
mov
xor
hlt
cs
repnz
int
rcl
hlt
jecxz
fiadds
loop
into
fcmovnbe
loopne
int3
shr
xor
cmp
into
repnz
aad
adc
fcmovne
rcl
movl
loope
loop
out
fsub
loop
mov
iret
cmp
loope
shl
aas
orb
loope
icebp
aad
fsin
sti
out
aam
cmp
shl
clc
icebp
loop
shr
ljmp
clc
jmp
aam
iret
int3
fst
outsl
fmull
dec
sbb
push
daa
jle
or
jle
lock
call
int
std
loopne
fst
out
cmp
test
ret
fucomi
sub
mov
into
ljmp
aad
sti
f2xm1
loop
clc
loope
inc
clc
cmc
xlat
fimull
std
call
clc
leave
lret
cmc
icebp
call
in
loope
adcb
div
loop
stc
jmp
cmp
inc
sti
sar
sar
fucom
add
in
jecxz
into
iret
mov
fucomip
aaa
repnz
jmp
cmp
std
cmp
cld
int
repnz
fisttpll
in
loop
mov
int
cmc
lock
ljmp
fdivp
stc
aad
fcmovnb
mov
loop
in
jmp
int
in
imul
fcom
flds
loopne
cmp
jmp
cld
leave
loop
xchg
int3
repz
out
loope
imul
in
fsubrp
sti
shlb
idivb
idivl
std
loopne
mov
rorl
cmp
hlt
shl
call
fdivr
in
stc
rcr
leave
loop
sti
out
incl
cmc
xor
in
xor
sar
ds
ds
cmp
xchg
cmc
fstp
loopne
and
test
out
shr
xor
loop
fcmovnu
clc
cmp
loopne
repz
test
sar
mov
mov
iret
cmp
lea
out
out
in
aaa
lret
in
hlt
rol
cmpb
ffreep
mov
in
fmul
into
std
adc
iret
cli
into
fcmove
jmp
cmp
fcmovnb
ret
sti
stc
lret
clc
in
jecxz
lock
xchg
int3
xorl
das
int3
hlt
in
xor
loopne
neg
in
mov
cmp
xchg
loope
lea
out
out
lock
fptan
loope
aad
icebp
into
fsub
push
out
out
mov
xchg
ror
clc
iret
ljmp
in
fcomp
jecxz
cli
loopne
rorl
jecxz
xchg
lock
ret
ljmp
mov
jmp
ret
xlat
int
fstp
cltd
sbb
int3
and
jle
or
jle
leave
cli
cmp
into
shl
hlt
fcomi
sar
in
cmc
add
in
enter
imul
hlt
out
jmp
fcmovnbe
idivl
neg
cld
jecxz
idiv
jecxz
neg
decb
test
int3
lret
in
fxch
test
xor
hlt
out
enter
out
jmp
xchg
ss
aad
leave
cs
cmp
aaa
not
xor
hlt
enter
incb
and
lock
in
cmp
fst
loope
loop
xlat
sti
shr
cmc
cmc
mov
fucomp
int3
xchg
loop
jecxz
shl
fld
in
jmp
rcl
out
cli
fsubr
decb
les
ror
ljmp
repz
cmp
std
leave
cmp
cmc
fdivrp
fucomi
fcmovnu
or
icebp
ret
loopne
xchg
xchg
xor
repz
int3
cmp
cmp
call
cmp
loop
flds
test
fldl
into
leave
xor
lock
leave
int3
fcomi
cli
repnz
ret
std
fucomp
ljmp
repnz
lret
ss
hlt
into
fadd
fmul
out
cmp
fdivp
int3
fxch
stc
fsubrp
repz
into
xor
ror
aas
ljmp
rol
clc
in
loop
sti
loopne
lret
iret
in
cmp
shlb
out
cmp
in
out
cmp
xlat
ret
cld
cmc
sub
cli
call
clc
enter
xlat
ss
sti
not
out
into
cmp
ret
xor
jmp
ror
call
shl
cld
shr
jecxz
rcr
jecxz
jmp
leave
mov
jmp
int3
lock
aad
stc
cmp
cli
cld
sar
aas
in
icebp
sub
sbb
mov
sub
cmp
iret
int3
call
test
enter
sub
fcomp
cli
lock
xchg
in
das
ljmp
clc
lock
icebp
shl
fdivp
xchg
add
add
mov
mov
mov
jmp
rol
xlat
int
arpl
mov
xor
jle
or
jle
mov
mov
test
lret
jmp
loopne
dec
add
lock
cld
not
mov
sti
and
aad
aad
jmp
ds
ret
in
loop
aad
ffree
out
jmp
in
xor
lret
rcr
cmp
aam
shr
stc
loope
and
mov
lock
not
hlt
ss
cmp
in
in
fdivrl
lock
loop
vpmaxub
into
addb
fld
out
les
jmp
in
in
int3
rolb
addl
loope
ss
out
lock
jmp
and
xchg
fildl
orb
jecxz
xor
cmc
lock
repz
ret
les
loop
xchg
ror
ss
int3
leave
repz
out
test
incb
fsub
fdiv
jmp
cs
int
fmul
test
call
sti
mov
loope
icebp
xlat
iret
leave
lret
int3
sar
ror
stc
out
ret
incl
jecxz
jmp
out
cmp
call
std
cli
in
cmp
in
jmp
jmp
int3
out
xor
cmp
in
jmp
addl
fdivrp
out
in
repz
cmp
aaa
jmp
fucomp
fcomi
rcr
stc
loopne
lock
stc
cli
jecxz
out
cmp
repnz
fsubp
cmp
jmp
cli
addl
call
ss
loopne
aas
in
out
shl
loope
fcmovnbe
xchg
lret
in
cld
test
iret
icebp
shl
in
xor
cmc
call
loop
cmpb
out
jmp
loop
lock
ljmp
add
enter
ret
xorb
pusha
shrb
jle
test
hlt
cmp
xlat
fiaddl
xchg
incb
out
out
cmp
cmp
rcl
repz
fadd
sar
mul
aad
std
mov
cld
out
ljmp
in
fmulp
roll
roll
int3
std
sar
loopne
shl
repz
jmp
repz
div
fcmovnb
aam
clc
sbb
loope
mov
decl
enter
cmp
in
in
lock
jmp
fucomp
fsub
repnz
mov
cmc
lret
rcl
repz
out
cli
loope
loopne
clc
mov
test
in
icebp
xchg
jmp
lock
loop
out
xor
shl
frndint
rol
mov
loop
in
sub
fiadds
repz
out
out
cmp
cmc
lret
aas
cmpl
lds
out
nop
std
repnz
in
cmc
repz
xor
aam
lock
stc
sti
cld
fsqrt
mov
call
call
in
out
ss
lret
aas
cld
rol
idiv
enter
call
rorb
sub
icebp
sarb
out
stc
shr
fidivrl
ljmp
fisttpll
loope
clc
out
fdivrl
in
fdivr
cmp
filds
sbb
dec
shr
call
int3
sarb
cs
cli
int3
cmp
ds
fdivp
cli
hlt
loope
mov
call
testb
imul
cmp
ljmp
loopne
call
decb
jmp
mov
loop
cmp
call
sarb
sarl
jecxz
xlat
stc
mul
incl
jmp
lret
xor
ret
in
test
iret
fcom
cld
lock
push
aam
cmp
sbb
out
in
xor
repnz
in
jecxz
stc
cmp
jmp
leave
xchg
aaa
cmp
lcall
jle
adc
test
lret
ljmp
mov
in
shl
icebp
cmp
sarl
iret
rcr
xchg
repnz
mov
add
shr
shl
sub
in
idiv
cmp
aas
iret
int3
jecxz
xchg
cmc
sti
xor
ljmp
lock
in
xor
cld
fdiv
loop
cli
fucomip
fadds
enter
imull
cli
in
cmc
sarb
jecxz
loop
fldl
vpaddusb
xchg
lret
iret
ret
ss
in
aam
sti
aad
lock
inc
repnz
sbb
leave
les
aad
cli
sarb
into
icebp
cmp
sub
idivl
aam
mov
lret
mov
xchg
call
fsub
not
into
cld
rcr
idivl
sti
cld
adc
call
lret
clc
ljmp
iret
stc
jmp
xor
in
into
stc
test
jmp
std
xchg
cli
fcmovne
shl
xchg
lock
stc
in
in
div
sar
cld
loope
cmp
les
icebp
ror
xor
cld
xlat
into
rcr
shl
aas
sub
xchg
stc
mov
mov
ljmp
fidivrs
out
in
jmp
fdivr
mov
test
iret
aad
in
lock
into
xlat
cmp
push
loope
in
sub
ror
ljmp
cld
aaa
shl
repz
clc
idivl
in
in
jmp
sbb
out
fimull
test
iret
xor
fxch
icebp
neg
rol
xor
loop
test
fimuls
int3
icebp
aam
cmp
dec
stc
neg
xlat
icebp
shl
ret
loop
mul
fsubrp
mov
cmp
adc
ret
lret
out
rcr
into
cmc
out
test
repnz
orl
rolb
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
jmp
into
lret
fcmovne
into
fistpl
adcl
fdivl
jle
or
jle
repnz
ret
mov
stc
clc
xlat
cmp
test
roll
stc
std
repz
int3
lret
fstpt
cmp
flds
jecxz
aad
loopne
add
fchs
loopne
rcll
aad
div
jmp
dec
clc
call
mov
and
out
adcl
fidivrl
fnstcw
lock
int
add
mov
out
in
jmp
in
test
xor
sar
xor
into
sar
repnz
jecxz
les
clc
xchg
iret
mov
call
xor
enter
stc
fstpt
mov
rorl
cld
in
jmp
xchg
out
rcl
sub
xor
cmp
repz
addl
in
decb
into
addb
int
iret
in
int
loopne
jecxz
hlt
cli
xchg
ljmp
iret
loope
fsubrp
xchg
shll
sti
fcmove
std
fcomp
cmp
repz
testl
out
rcl
call
cmp
in
inc
mov
sub
orb
repnz
ljmp
xchg
call
xchg
mov
test
mov
aaa
fcomp
in
cmp
cld
aas
neg
cld
cmp
div
jecxz
sti
cld
in
xchg
leave
out
rcr
in
enter
out
xor
flds
fneni(8087
mov
fimull
lret
cmc
in
xlat
int
std
jmp
sub
hlt
hlt
ret
aad
lret
lds
mov
in
icebp
shl
repz
repz
clc
test
cmp
cmp
loopne
xchg
cld
loopne
xchg
fucomip
rol
aad
std
lret
cld
aas
ret
not
aam
hlt
lret
orl
loop
loope
xor
shll
out
cmp
or
jmp
ret
enter
int
aas
icebp
jg
dec
push
ljmp
jle
xlat
repnz
jmp
out
stc
fdiv
rolb
fcmovb
call
in
jmp
in
adc
cmpl
in
enter
roll
jmp
in
int
cmp
cld
cmp
fcmovb
cli
div
jmp
mov
xlat
fucomi
out
jmp
jecxz
clc
xor
aam
xor
call
sarb
xchg
fcmovne
fimuls
icebp
xor
xor
rcr
call
lock
call
call
fmull
xor
fcmove
repz
cmc
loopne
stc
std
int
cli
fcomp
jmp
test
xchg
iret
rcl
shlb
shr
xor
cmp
out
cmp
fcomi
stc
ret
push
test
loopne
stc
fsts
mul
lock
fadd
enter
jmp
ret
cmp
cmc
rol
cmp
xchg
int3
shl
lret
xor
out
fmulp
jecxz
aam
xlat
call
test
call
leave
in
in
int3
clc
fcmovbe
cmp
out
aad
aaa
int
stc
fldl
test
and
fadds
rol
aaa
xor
xlat
iret
repz
loopne
lock
mov
test
loopne
cmp
xlat
out
aam
jmp
in
test
not
lret
sub
shl
xchg
mov
mov
ret
ret
out
loop
xor
push
ror
adc
cmpl
in
stc
loope
mov
sub
fcom
enter
hlt
xor
sti
test
hlt
lds
jmp
iret
cli
repz
aad
aam
xlat
les
rol
cmp
sub
hlt
stc
inc
sbb
call
mov
lret
jmp
int
ljmp
leave
loopne
sub
incb
xlat
into
in
mov
cmp
repz
loop
xlat
flds
out
mov
leave
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
jmp
rcl
rcl
rcl
aad
xchg
stos
gs
jle
add
loop
out
rcll
out
into
out
sarl
ds
into
out
in
jmp
mov
leave
fmulp
ljmp
loope
jecxz
aam
ss
fnstsw
fcos
neg
sti
mov
fucomi
mov
sub
clc
lret
aad
cli
call
cmp
aad
test
loopne
fimull
jmp
leave
fcomp
stc
in
in
dec
rol
test
les
ret
fcmovnb
mov
std
int
fcmovu
out
out
in
rcl
xor
not
or
fmul
test
ds
cli
nop
sar
loope
addb
cmp
fcomip
sti
rcr
cld
into
fdivp
enter
xlat
neg
clc
in
fucom
out
sar
int
iret
in
int
out
rcl
shl
fdivrp
hlt
xchg
mov
stc
jecxz
rolb
in
in
shr
leave
cmp
cli
shl
sti
ffree
cld
mov
aad
loop
fstp
test
mov
iret
xchg
not
hlt
xor
shl
jmp
clc
fneni(8087
cmp
ret
mov
in
out
in
jmp
int
cld
fcmovbe
jmp
cmp
cmp
aad
mov
shr
in
loope
int
sarl
icebp
aas
loopne
cmp
rcl
ret
rolb
mov
in
out
test
jecxz
lret
int
in
fsin
in
std
fdivrp
mov
orl
jmp
std
shl
adc
std
in
fucomi
out
lea
test
in
xlat
into
ss
loopne
xlat
aad
jmp
test
mov
jmp
int
out
ret
f2xm1
idivl
cmp
clc
xchg
loopne
jmp
in
ljmp
icebp
shll
jmp
cmp
clc
roll
jmp
test
out
jmp
xchg
enter
lret
cmp
aaa
mov
mov
mov
mov
pushl
call
mov
jmp
enter
int
int
repz
xchg
jle
or
jle
fadds
repnz
ret
xor
enter
out
std
out
fucomp
sub
cmc
jmp
call
cmp
fdecstp
xchg
sub
fisttpl
int3
repz
xlat
cmp
cmp
ret
stc
cmp
mul
iret
enter
jmp
icebp
xor
hlt
ret
ret
iret
cmc
call
stc
fdivr
roll
xchg
addb
nop
into
loope
shl
icebp
cmp
clc
ljmp
fadds
mov
mov
jmp
icebp
jmp
out
in
rcl
cmp
stc
test
cmp
out
fldl2e
stc
loop
lret
fldl2t
cld
xchg
sbb
repnz
repz
mov
xor
aas
aaa
sti
shl
call
fmull
iret
rorl
cmc
repz
fnsave
repz
or
fdiv
fadd
enter
div
std
mov
test
xor
xchg
sub
xor
xor
icebp
lret
sbb
rcr
in
cmp
fstp
in
fisubrs
loopne
stc
in
aam
fcom
out
iret
cmp
clc
repz
jecxz
loop
test
rorl
lret
idiv
fld
out
fcomip
test
shl
mov
mov
out
rcr
out
lret
icebp
leave
leave
lret
cmp
or
fdivr
fldl
in
sti
lret
in
aam
in
ljmp
aam
std
into
hlt
aad
fadd
out
xchg
sti
call
std
std
in
out
cmc
lret
shlb
out
jmp
into
cmc
fcomi
test
test
out
mul
lret
std
fmul
or
xor
ljmp
sti
sub
rcr
loope
aam
and
in
cli
in
out
in
aaa
sub
out
vpmaddwd
jmp
cmp
repz
jmp
sub
xchg
aad
out
das
shr
hlt
lock
enter
xor
aam
in
jmp
mov
inc
clc
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
mov
movl
mov
movzwl
xor
mov
jmp
aad
aas
fst
int3
aad
adc
sub
jle
cmp
jle
aad
jmp
loopne
xchg
repnz
xor
in
rcl
test
std
cmp
cli
lret
clc
loopne
loopne
loope
jmp
xor
fadd
in
cmc
cld
cmc
icebp
cmp
out
clc
repz
in
orl
out
xchg
in
icebp
sar
aad
fxch
clc
ljmp
clc
mov
sti
in
ror
in
loope
lret
fnstcw
lret
cmp
lret
in
ljmp
cli
sti
jmp
test
mov
xchg
sub
lock
aas
xlat
fptan
ffreep
leave
lret
jmp
nop
roll
int
xor
clc
icebp
cli
xlat
fdiv
into
int3
shl
loopne
aam
call
jmp
ret
xor
xor
incb
repnz
mov
call
mov
clc
in
out
fcmovbe
hlt
icebp
fmul
cld
fdivrl
fcmovnbe
ror
in
in
lret
icebp
addb
rcr
sti
xor
repz
std
repnz
fcmovnu
mov
cld
out
mov
test
mov
nop
xchg
loopne
xor
xor
std
xor
hlt
loopne
adc
neg
jecxz,pt
int
in
mov
das
ret
repz
sar
shl
test
in
xlat
lret
cmp
cld
fistl
call
pushl
lock
cld
mov
ret
lock
rorl
icebp
jmp
int3
cmp
cli
iret
rcl
or
mov
call
lret
test
mov
enter
out
out
cmc
cmp
xlat
loope
out
faddp
sti
jmp
jmp
lret
mov
out
cmc
cmp
icebp
cmp
cmp
test
ret
jmp
loope
xchg
fcmovne
dec
mov
jmp
cmc
cmp
out
aad
cmpb
into
icebp
xlat
filds
sar
out
int3
xchg
lret
repnz
in
iret
test
cmp
call
ds
movb
ljmp
mov
fmulp
xor
int3
neg
cmp
fstp
addl
sub
mov
xorl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
xorl
xor
cmp
je
mov
mov
sub
add
mov
andl
mov
sub
andl
xor
jmp
into
int
fstp
aam
or
cld
mov
cmp
jle
loopne
aad
fmull
xchg
out
loop
cli
sti
icebp
in
aaa
aad
aad
shl
fdivr
mov
aam
fsub
in
out
ror
fsubp
int3
xlat
xor
jmp
cmp
xor
cmp
ret
iret
icebp
repnz
icebp
xchg
mov
sub
stc
fdivs
iret
cmp
cmp
std
xlat
loop
ds
testl
xchg
aad
int
hlt
sub
in
int
aad
ds
fcom
sar
cmp
stc
out
fiaddl
rol
int
out
enter
into
ret
xchg
cmp
out
filds
mul
out
in
xor
cmp
idivl
clc
fdivr
mov
loop
loope
xor
jmp
loopne
call
mov
xchg
jecxz
hlt
fmulp
aaa
fcomi
into
repnz
idivb
std
mov
mov
fsin
jmp
leave
xor
xor
cmp
cmc
fdivrp
out
cli
ret
shl
and
lret
adcl
loope
ss
sti
xor
repnz
int3
aas
idivl
mov
leave
mov
mov
lret
int
cld
cld
xor
lret
aam
les
lret
cmc
int
lock
repnz
xchg
ljmp
ror
lret
into
lret
ffreep
cmp
cli
cmc
xlat
flds
in
repz
aad
sti
aam
lret
fldl
addl
test
cmp
in
cmp
hlt
fdivrp
ds
incl
ret
loop
in
push
hlt
jmp
cli
int
fmul
fsubr
fcmovbe
repnz
enter
testb
xchg
enter
xor
fcmovnu
repz
in
add
fcoml
in
fsub
clc
jmp
lock
fdivrs
les
lret
aad
out
mov
jmp
in
lret
shl
cmp
cmp
std
clc
in
cld
iret
mov
and
inc
add
test
add
mov
subl
jmp
leave
rol
ret
int
cwtl
stos
cltd
mov
dec
adc
jle
cmp
jle
movl
test
orb
fcmovbe
fst
out
fadds
rcl
sar
test
mov
icebp
mov
out
iret
mov
jmp
enter
in
in
ffree
fiadds
lea
bnd
shl
les
not
fcmovne
into
lret
xlat
icebp
ret
shl
stc
in
ret
xchg
in
std
call
call
fmul
cmp
aas
test
xchg
ljmp
fdivr
xchg
test
lock
hlt
cs
shl
jmp
fdiv
cmp
shl
enter
sti
lret
xchg
xchg
xor
xor
idiv
fdivrl
lret
ljmp
cld
cld
jmp
ficoml
call
fidivl
cmp
xor
lock
mul
rcl
cmc
stc
cmp
mov
into
mov
test
jmp
div
out
fucomp
cmp
fdivr
loope
loopne
enter
clc
jmp
fsubrp
out
xchg
in
hlt
call
jmp
ffreep
ret
ret
repnz
clc
cli
cli
fsqrt
jmp
cmp
loopne
xor
std
jmp
addb
mov
test
fucomi
in
adc
cld
cmp
repz
loopne
cmc
shl
aas
cmc
aad
mov
lret
fmul
out
xchg
mov
sub
shr
xor
ljmp
ret
in
jmp
and
repnz
xchg
ror
icebp
clc
loope
rcl
xor
fcmovnb
out
shl
ffree
call
leave
call
int
out
ret
jmp
aas
ret
cld
aad
fldl2e
mov
out
or
out
icebp
lock
in
jmp
cmc
xchg
mul
lret
xchg
leave
nop
loop
repnz
in
int3
aam
icebp
jecxz
ss
in
into
xchg
xchg
leave
ds
call
test
test
in
in
ds
sti
ret
iret
mov
aad
sti
in
int
fmulp
orb
ret
cmc
cmp
ss
xor
rcr
loop
fiaddl
add
movl
jmp
mov
incl
xor
jmp
into
into
rol
rol
rcl
mov
or
data16
jle
cmp
jle
lret
leave
out
xchg
out
out
dec
jmp
aaa
shr
repz
jecxz
clc
xchg
jmp
std
out
loope
lea
cld
xlat
fcmove
fidivs
std
sar
aas
fld1
aam
std
addl
ret
rcr
out
aad
into
sarl
out
out
mov
test
std
lock
out
in
out
out
cmp
cmp
neg
loop
ds
fdivrp
and
cli
call
rcll
lock
repz
lret
stc
fucom
ret
in
add
enter
nop
aad
xlat
xor
ror
cmp
loopne
rol
fcmovnbe
fldln2
mov
fucomp
in
loope
loopne
lret
ss
int3
fdivp
faddp
add
aam
fcmovnu
fisttpll
adcl
iret
cmc
in
in
cmp
int
loope
sar
into
loop
sti
mov
fdivr
jmp
cli
loop
cld
int
out
in
enter
fdivl
jmp
out
fucomi
out
std
clc
std
incl
mov
loop
stc
in
cmp
lret
and
repz
fildl
enter
sti
in
jmp
jmp
sti
out
lret
iret
div
fxch
repnz
rol
aam
stc
mov
sti
loopne
int
xchg
out
repz
loope
out
xor
test
cmp
ret
xchg
sarb
mov
imul
test
lret
call
ret
xor
idiv
out
lret
repnz
rcr
shl
fisttps
in
sti
loopne
xchg
out
int
shr
out
jmp
cmc
sti
cmp
loopne
std
mov
stc
xor
mov
leave
das
ss
loopne
cmp
cmp
loope
leave
xchg
enter
xchg
ss
in
cmp
xor
xlat
ss
icebp
fcmovnb
enter
out
in
mov
out
shr
in
lret
repz
roll
cli
repz
clc
lret
leave
sti
into
int3
xchg
fimuls
aam
int
jmp
shl
add
mov
jmp
ret
leave
lret
aad
flds
ljmpw
jle
add
roll
fcomp
out
out
xchg
jmp
ljmp
rcr
out
cmp
sarb
loop
mov
call
loope
fisttpll
das
xor
cmp
std
cmp
xchg
shl
sti
loopne
ffree
jmp
test
rol
das
xlat
vpminsw
in
inc
loop
shl
cmp
aas
fsubr
stc
clc
jmp
xchg
in
xchg
imul
clc
xlat
ljmp
rcr
repz
jmp
flds
rolb
in
div
repz
rcr
repz
rcr
aad
sar
std
hlt
sti
iret
out
out
or
shll
hlt
idivb
leave
fprem
into
loop
stc
iret
jecxz
out
loop
out
jecxz
test
loopne
repz
lock
int
idivl
cmp
repz
mov
fisttpl
xchg
shl
aaa
cmp
hlt
icebp
cli
repnz
in
int
out
test
faddl
lock
lret
in
into
sar
fsubr
ds
ds
ror
sarb
loope
xchg
out
in
lock
cmp
lret
addl
fdivr
int
decl
lock
shr
ljmp
ss
aam
std
mov
fcmovu
into
fmull
enter
out
lret
fmul
leave
xor
shl
xlat
loope
fcomi
iret
or
fucom
jmp
xor
sti
int3
sti
out
repz
fsqrt
in
clc
mul
fst
in
test
fsubrp
in
shl
ljmp
xlat
rcr
sarl
cmp
in
fcomp
cmc
out
rolb
lock
hlt
xor
rcr
and
mov
ljmp
das
repz
idiv
fld
cli
cmp
loope
icebp
cli
neg
repnz
loop
jmp
fdivr
icebp
ljmp
sar
icebp
icebp
aas
ret
loop
filds
out
out
hlt
adc
in
loope
int3
cmp
repz
decb
add
add
iret
fmul
aad
clc
sub
mov
dec
les
cmp
jle
roll
mov
call
fcmovu
xchg
lock
aaa
jecxz
test
iret
stc
shl
iret
into
rcl
cmp
mov
out
cld
xchg
jmp
repnz
in
rol
enter
test
into
mov
xlat
ss
into
stc
cli
xor
out
cld
call
in
std
call
ss
in
xlat
ror
cmp
aam
clc
cli
cmp
aas
cli
mov
orl
in
hlt
ror
cmp
stc
fstpt
lock
mul
hlt
imul
fld
fucompp
loopne
out
in
cli
loope
std
jmp
shl
ret
int
jmp
rcr
hlt
adc
xchg
fld
loope
int
aam
aaa
aam
stc
enter
inc
shl
fcmovu
hlt
jmp
std
neg
fisttpl
fcomip
into
int3
clc
out
cmp
cmp
cmp
into
ljmp
flds
in
test
out
xor
iret
in
std
neg
fsub
sarl
fninit
sarl
icebp
clc
enter
mov
shl
ljmp
cmp
ret
lret
fidivl
jecxz
icebp
cli
enter
stc
stc
ficoms
pop
out
clc
call
ror
shl
test
fsub
fadd
loop
in
stc
clc
std
in
fsubrp
mov
xlat
shl
int
call
out
icebp
ret
cmp
jmp
ljmp
ror
ror
cmp
lret
sar
xor
aad
testl
aad
ret
jecxz
cmp
hlt
cmc
cmp
loope
cmp
adc
xchg
in
xor
xor
repnz
in
rcl
cld
fcom
rol
loop
not
in
cli
lock
mov
lret
xor
jmp
mov
lret
loop
hlt
cli
faddp
not
aas
lea
jmp
mov
out
jmp
in
iret
cmc
aad
mul
cmp
cmpb
jecxz
in
fdivr
fmul
mov
loope
shl
repnz
xor
xor
add
mov
jmp
mov
mov
jmp
rcl
xlat
fcmovnu
rcr
in
repnz
insl
mov
jle
cmp
jle
aas
aad
loopne
repnz
repnz
loopne
mov
mov
fst
std
cmp
lret
fdivrs
stc
enter
jecxz
flds
iret
shl
shlb
aam
cmp
out
ds
fstp
ds
adc
fisttps
fucomi
lock
repnz
shl
fcmove
not
xor
and
out
cmp
mov
lret
fmull
loope
xlat
hlt
aaa
fdivrp
std
fdivrs
xlat
fsincos
sti
les
mul
in
cli
out
out
nop
aad
rcl
xor
into
cmp
not
into
fadds
fsubrp
sti
mov
iret
xchg
int
icebp
enter
xor
cmp
clc
mov
fucomi
iret
xchg
icebp
repz
ror
xlat
lret
repz
cmp
cli
sarb
decb
shl
loop
aam
icebp
cmc
out
aam
mul
hlt
cmp
lock
aas
xchg
loop
enter
or
test
in
mov
loope
lret
cld
vpmaxsw
cld
and
sar
fiadds
in
mov
iret
xor
clc
xor
cmp
out
faddp
neg
cmp
fsubr
jmp
mov
ret
int
ss
std
jmp
jecxz
ret
cld
rorl
int
xchg
ficoms
out
fsin
cmp
int
fst
fadd
sar
fcomip
mov
int
shl
out
aam
xor
xor
lret
aam
repz
rcr
out
enter
test
mov
loope
cmp
out
lock
out
fsubr
adc
sarl
cld
bnd
out
mov
in
xchg
out
aam
xor
fcmovnu
int3
xor
rolb
mov
enter
adc
jecxz
shl
lret
xor
call
leave
cld
lock
loopne
jmp
loop
int3
lock
fmul
hlt
repnz
out
icebp
repz
into
shl
test
loopne
fisttps
incb
in
mov
rcl
cmp
add
push
add
add
aam
iret
fcmovnbe
fcomp
insb
jae
fsubrp
xor
jle
add
in
flds
ror
leave
jecxz
mov
cli
out
aam
divl
leave
in
repz
in
cli
cmp
cli
fst
fdivrp
in
out
mov
cli
out
mov
call
repnz
cli
hlt
int3
stc
aaa
cmc
clc
cli
rcr
fcmovne
incb
cli
sub
cmc
repnz
in
repz
xor
lret
jmp
into
repnz
in
hlt
idiv
stc
xchg
lea
xchg
in
cmp
leave
xor
sarb
jecxz
int
add
in
out
stc
lret
filds
xchg
mov
in
cmp
lret
in
ret
aad
std
test
testl
fnstsw
aaa
ret
hlt
in
out
fdiv
aas
repnz
sti
jmp
in
int
mov
fdivp
rcl
cmc
xor
jmp
xlat
cmp
ffreep
cld
rol
test
popl
and
std
fcmovbe
hlt
ds
xlat
fstp
clc
loope
cli
addl
int
xor
ror
cs
repnz
ror
fmul
rcr
hlt
aad
call
mov
cld
and
xchg
ljmp
int3
dec
fincstp
in
out
cmp
add
int3
stc
sti
std
test
iret
loop
loope
in
fcomp
cmp
repnz
ret
loopne
les
sti
cmc
int3
xchg
rcl
jecxz
fcmovne
call
sarb
ret
xchg
enter
jecxz
fsubr
fxam
lret
or
shl
sar
clc
in
in
loope
xlat
ret
loopne
into
decb
das
icebp
xor
xor
lret
into
fdiv
cmp
int
rcl
test
rcr
loop
loop
ljmp
jmp
out
iret
fcomip
idivb
cmp
shl
out
in
mov
lock
neg
aad
cmc
aad
sti
jmp
test
in
std
rol
call
test
cld
rolb
int
xor
fnstcw
lock
repnz
in
cmp
loop
out
mov
xlat
repz
mov
add
pop
jmp
aas
lret
ror
lahf
jmp
cmc
test
cmp
jle
cmp
aam
sti
stc
imul
out
fucomp
jmp
call
out
jecxz
out
das
shl
shl
cmp
aas
rcl
lock
aas
cld
shr
mov
jmp
in
test
repz
shlb
xor
sti
into
aam
xor
stc
ret
cmp
ljmp
int3
ret
xor
ljmp
fnstsw
xor
repz
rolb
loope
shl
cmc
in
out
stc
cmp
repnz
fdivrl
cmp
cld
loope
jecxz
xchg
fsubr
in
int3
xchg
lock
mov
int
xlat
sar
iret
neg
aas
sar
cli
shl
and
adc
rcl
shr
cmc
call
sarl
hlt
test
into
jecxz
mov
into
cs
int3
lock
int
shl
roll
mov
mov
xchg
jmp
xor
in
cmp
cli
clc
in
test
test
std
cld
out
lea
sti
adcl
lret
xor
aad
out
fdivr
loopne
mov
leave
cmc
mov
out
clc
cmp
xor
out
jecxz
loope
shr
imul
loop
out
cld
in
lret
rolb
cmp
iret
cmp
cld
ret
addb
ds
test
aam
xchg
aas
out
xor
ljmp
fidivrl
les
aas
loope
call
mov
and
out
in
out
xchg
xor
cli
fnsave
cld
icebp
test
fldl
xchg
mov
clc
idivb
in
hlt
ljmp
jmp
std
rcl
out
cmc
cld
mul
into
fildl
xor
out
jmp
enter
hlt
div
rcl
mov
add
in
sti
in
loop
iret
jmp
lock
cmp
jmp
ret
out
aam
mul
addl
leave
cli
shr
not
aam
cmp
idiv
out
cmc
aam
fcmovbe
in
mov
std
stc
enter
in
fst
repz
pop
ret
push
mov
mov
xor
mov
jmp
ror
aas
fstp
int3
fisttpl
dec
shrl
inc
int
jle
add
div
fcom
fcmovnbe
cmp
stc
test
in
mul
addb
fcom
into
in
cmp
cmp
addl
loope
addb
shr
xor
fcomp
lret
xor
xlat
jmp
clc
adc
sar
imul
int3
loop
enter
xchg
xchg
sar
ss
jmp
int
aam
cmc
test
lock
stc
addb
ljmp
icebp
in
xor
lret
std
in
std
test
iret
hlt
lock
repz
enter
lea
idiv
cld
cmp
rcl
stc
cmp
xchg
xchg
fimull
jmp
mov
jecxz
xlat
aad
cmc
in
jmp
int
loopne
test
into
out
leave
nop
xchg
into
int3
xor
xabort
in
icebp
into
sti
repz
jmp
testl
xor
icebp
jmp
icebp
cmp
loopne
idivl
ret
in
stc
clc
sbb
loope
loop
fucomip
icebp
clc
shl
sarb
repnz
iret
testb
dec
repz
shl
xor
call
cmp
jecxz
xchg
enter
test
xchg
repnz
out
in
shll
ljmp
cmp
sar
mov
cmc
aas
fcomp
clc
leave
test
in
enter
out
fcomi
ljmp
std
fcmovbe
ret
mov
testb
lret
xchg
xor
ljmp
aam
repnz
xorb
xlat
fcomp
xlat
in
testl
call
in
neg
cli
stc
xor
lock
lock
mov
les
into
shr
xor
out
call
jmp
ds
mov
in
ds
fdivr
jecxz
test
fsubrp
add
in
cmp
fdiv
xlat
xlat
xor
jmp
enter
in
shl
shr
shl
lock
in
sar
cmp
repnz
shl
hlt
out
mov
test
xor
out
clc
lret
div
mov
and
or
jmp
ret
ret
rcl
aad
sbb
push
add
jle
cmp
jle
in
shl
int
in
iret
std
into
lock
xlat
iret
shr
ret
std
fucomi
out
lock
cld
shl
repnz
jmp
call
clc
aad
ret
sti
adc
addl
sub
loope
repnz
out
cmc
into
int
ljmp
ret
fst
rorl
xchg
into
in
hlt
rcr
xor
int
vpmaxsw
idiv
rcl
cmp
cmc
sar
jmp
sti
leave
jecxz
xchg
xor
aaa
aaa
stc
fcmovnu
out
ds
in
test
nop
mov
enter
lret
lret
rcl
not
les
stc
in
out
int
sub
cmp
iret
repnz
xlat
ret
icebp
out
addl
enter
adcb
shlb
icebp
hlt
ss
cmp
in
out
std
std
adc
in
aam
xchg
fldln2
sti
repnz
icebp
xchg
hlt
cs
xor
test
fadd
rol
shl
repnz
mov
xchg
icebp
into
loopne
in
repnz
int
clc
repz
jmp
in
out
sti
loopne
xchg
jecxz
fimuls
cmp
cmp
repz
sub
rcl
jmp
loope
in
out
leave
loop
shl
leave
xor
idiv
mul
jmp
repz
fldl
fcmovu
std
repnz
and
enter
ss
shl
jecxz
imul
in
out
ljmp
out
aaa
lret
fnstenv
xlat
repz
aad
cmp
into
loopne
test
loopne
or
test
test
test
xchg
lret
sarb
cmp
ret
in
rcr
shl
cmp
test
dec
std
mov
into
loope
hlt
test
hlt
jecxz
leave
cld
aad
cmp
sti
lret
jmp
lds
in
jecxz
xor
rcl
ror
test
cmp
std
xchg
out
mov
lock
and
sub
xor
lock
cmp
in
fcmovbe
iret
icebp
cli
jecxz
in
leave
fucom
xlat
stc
adcb
rcrl
add
in
jmp
lret
aad
int
ss
rcll
cmpsb
stos
dec
sarb
adc
jle
xor
out
stc
shr
cli
repz
sarb
fsubp
clc
addb
shl
enter
cmc
mov
in
in
cli
xor
cmp
std
fsincos
icebp
call
add
stc
ficoms
in
jecxz
cmp
in
lock
out
addb
push
ret
test
sar
repnz
loop
aam
mov
int
std
int
lret
in
ret
sar
fdivp
call
sti
sti
test
shll
iret
ds
int
loop
clc
call
fimuls
shl
xor
call
lret
cmp
cld
vpaddd
std
int3
jmp
out
add
xor
xlat
int
in
mul
repz
call
sbb
mov
loop
loope
div
ss
leave
stc
aas
jmp
vpmovmskb
xchg
aam
mov
repnz
out
jmp
not
cmp
clc
sarl
aas
lret
ljmp
mov
xlat
out
cmp
cld
lock
in
fidivrl
rol
loopne
fimuls
int3
fucom
in
mov
cld
xor
jmp
ror
sbb
loop
xlat
repz
stc
mov
lret
fiaddl
enter
call
lret
lret
in
icebp
fadd
cld
stc
cmp
fcmovu
int3
sti
mov
xor
xor
in
ljmp
lock
mov
fucom
xchg
cmp
out
out
leave
stc
hlt
into
out
cmc
loope
int3
loope
div
iret
out
cld
ret
testl
fnstenv
sti
cmc
cmp
xor
stc
repz
jmp
in
call
xchg
hlt
fsub
call
ss
cmp
out
aas
add
lds
sbb
in
nop
repz
out
sub
iret
cld
aaa
enter
idiv
shl
aas
xchg
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sbbl
jmp
ret
ror
int
outsb
xor
rcl
jle
adc
jle
test
lret
call
in
loop
icebp
stc
out
rcl
aaa
flds
cmp
ret
ljmp
out
ror
in
mov
call
dec
out
cld
cmp
repnz
sub
ljmp
in
lret
shll
shll
hlt
rcr
test
fcmovu
jmp
lock
rcr
repnz
out
clc
enter
fidivs
ror
adc
repnz
repz
fcmovne
mov
call
xchg
fcomip
cmp
lret
in
idivl
aad
jecxz
repnz
fmul
test
mov
xchg
mov
int3
xchg
ror
hlt
repnz
int3
aam
shl
add
faddp
stc
test
out
sti
out
leave
mov
mov
mul
idiv
xlat
jmp
jecxz
testb
in
lea
rcl
leave
stc
sti
stc
cmc
ljmp
xlat
icebp
test
neg
clc
out
iret
jmp
xchg
xor
out
xor
shl
xlat
fdivrp
rolb
or
flds
std
loopne
int3
ror
loope
cli
cmp
push
hlt
lret
in
icebp
repnz
jmp
mov
shl
cmc
in
repz
into
imul
sti
icebp
ror
ret
in
aas
enter
ljmp
test
mov
icebp
ss
fdiv
cmp
ljmp
out
fsub
test
xchg
and
xchg
not
out
dec
rolb
ljmp
std
out
adc
loop
fcom
xor
lret
fcomp
repnz
repnz
mov
loopne
xchg
lock
in
stc
aas
jmp
inc
mov
or
jmp
repz
into
ret
loope
stc
fcmovnbe
cmc
icebp
testl
mov
xchg
rcl
or
fxch
mov
adcl
xor
mov
adcl
add
jmp
fcom
xlat
push
xlat
outsb
shr
jb
lahf
in
jle
adc
jle
xor
clc
out
loope
aad
jecxz
xlat
imul
and
loope
out
out
out
out
shr
iret
fcomip
xlat
aaa
loop
repnz
ret
fldl
clc
xor
jmp
fldpi
in
in
in
stc
loopne
repz
addb
add
aad
vpandn
sbb
fcomi
les
xchg
icebp
fdivs
in
lret
out
not
call
iret
vmovntdq
leave
jecxz
enter
mov
test
cli
out
hlt
icebp
cmp
call
out
in
repnz
loop
jmp
in
call
jmp
leave
aaa
neg
cmp
aam
loopne
call
mov
xchg
ljmp
xor
fcmovb
cmp
loope
xor
les
out
repnz
aad
cli
fiadds
jmp
xor
aad
cmc
cli
repnz
iret
cmp
testl
leave
fscale
ror
lret
in
call
rcl
iret
fidivrl
in
ds
out
out
cmp
rol
mov
enter
call
fdiv
sub
fucomp
std
jmp
cmp
cli
adc
out
lret
in
add
mov
xor
fcmovnu
cmc
cmp
jmp
xchg
cli
mov
add
lret
iret
std
into
in
fisttpll
rol
cmp
neg
idivl
std
cmp
xlat
enter
fimull
add
in
aam
das
in
sar
rcr
cmp
sar
cmp
clc
jmp
in
out
loope
icebp
lret
in
lock
cmp
push
icebp
stc
aas
out
aad
mov
out
cld
fscale
out
lock
xchg
cs
lret
lret
idiv
aas
clc
cmp
out
clc
loop,pt
fimull
out
lea
xor
xor
sti
in
xor
testb
call
rol
ret
int3
mov
mov
mov
and
movb
lea
mov
jmp
rcl
rol
rol
rcl
mov
sbb
jle
adc
jle
icebp
in
leave
int3
addl
lock
loope
in
sarb
decl
lret
out
xor
iret
out
cmp
icebp
std
loop
repz
out
iret
mov
or
fdiv
loopne
xchg
loop
divl
idivb
fcmovbe
rcl
bnd
test
test
jmp
iret
xchg
aaa
icebp
xor
icebp
div
aad
sti
fidivrs
std
test
loope
std
int
loopne
sbb
into
repnz
not
cld
cs
lret
aas
jmp
fst
rcr
movl
shr
xchg
nop
lret
in
cli
clc
aas
aaa
fsubr
add
xchg
sbb
movb
rcl
repz
clc
in
fidivl
xlat
clc
loopne
aas
stc
std
cld
cmc
clc
cli
test
jecxz
int3
clc
out
lret
jmp
cmp
repnz
cli
fnclex
cmp
out
fxtract
fcmove
sti
std
repnz
out
or
call
int
int3
ljmp
ret
test
lret
cli
loop
loop
iret
clc
lock
leave
out
in
clc
shr
fdivr
les
enter
lock
shl
jmp
out
iret
out
out
cld
jmp
cmp
cmp
roll
cmc
test
jmp
shl
fmul
leave
out
call
repz
loopne
sbb
cmc
lret
std
sti
enter
loope
lock
hlt
lock
icebp
fcomp
cli
stc
cmp
jmp
ret
rcl
out
in
div
lea
int3
icebp
sar
call
fcmovnbe
sub
shl
rorb
std
out
in
out
out
ret
fsubr
repz
icebp
aam
std
lock
fsub
lret
int
out
popl
aas
ljmp
xlat
cmp
hlt
xlat
xlat
cmp
ljmp
mov
mov
int
cmp
in
stc
fcmove
in
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
push
push
push
push
call
jmp
mov
movl
xor
addl
sub
mov
sbb
movl
not
movl
andl
mov
mov
push
jmp
into
mov
fmul
iret
fucomp
sub
inc
add
jle
add
loope
xchg
push
ffree
xlat
xlat
xlat
xlat
test
enter
nop
in
call
sarl
cmp
aam
shl
filds
loop
stc
out
mov
xchg
xor
clc
icebp
enter
iret
sarb
int3
clc
push
call
fadds
mov
loope
out
xchg
xor
shlb
lret
aas
icebp
std
cmc
cmp
iret
orl
test
vpsrld
xor
shl
in
cmp
fnstsw
pushl
ffree
neg
cmp
loopne
fsin
enter
or
fisttpl
idiv
lock
into
icebp
not
div
repnz
out
fldlg2
leave
movl
lret
sub
xor
repz
enter
out
loopne
fdivr
lret
in
loope
stc
mov
xchg
aam
in
sub
ljmp
loope
jecxz
cmp
mov
aas
loopne
popl
xor
lock
jmp
in
aad
cmp
out
aad
loope
ljmp
rcl
jmp
leave
jmp
addl
ljmp
out
xchg
jmp
cli
xor
cmp
leave
iret
lret
cmp
idiv
out
neg
fcmovu
mov
lret
fsub
xchg
xor
cmp
cmp
addl
jmp
enter
xchg
lds
icebp
leave
jmp
enter
in
or
cmp
mov
fadd
mov
test
sub
out
xor
cld
aas
repnz
cld
add
cli
xchg
stc
loopne
loop
fisttpl
sub
in
fdiv
fcmovnu
sarl
or
ror
shr
mov
ss
xlat
fnop
sti
aam
ror
rcr
test
in
into
int3
in
fiadds
ljmp
loopne
or
sarb
ret
xchg
in
rorl
or
mov
movl
add
jmp
movl
mov
mov
movl
inc
jmp
ret
xlat
rcl
lret
xchg
mov
and
popf
fdivrl
adc
jle
sar
xor
ljmp
repz
fadds
xlat
mov
in
ficoms
out
fdiv
cld
clc
leave
lock
ret
aam
mov
shr
ror
in
jecxz
lret
test
fcmovnbe
rcl
lock
aad
div
into
out
sti
out
xor
in
ret
ss
cmp
out
repz
lret
test
sti
out
idiv
xchg
loop
fucomi
fmul
rcr
std
cmc
in
stc
ret
xor
jmp
shl
shl
sar
hlt
cli
cmp
shr
test
ficoms
out
xor
cmp
aas
cmp
repnz
fdivp
into
adc
jecxz
aam
sti
int
addl
ret
std
cmp
aas
loop
fdiv
clc
fsubr
loop
std
mov
test
das
in
ret
clc
enter
fcomi
sti
std
in
cld
mov
std
in
loope
leave
repz
repnz
hlt
into
in
fmul
sar
xlat
clc
jecxz
aaa
sar
cli
mov
lret
orl
xor
ljmp
rcl
loopne
mov
test
inc
xchg
nop
loopne
aaa
fucomi
xlat
fsubr
cmp
xlat
sar
ds
out
in
les
mov
or
loop
ljmp
ss
cmp
cmc
xlat
sar
repz
std
aad
test
jmp
hlt
xor
cli
icebp
xor
cmp
std
xor
int
xor
sti
stc
loop
loopne
test
xchg
test
not
out
cmp
test
loop
loope
lret
lret
mov
test
cmp
xlat
fucomp
shl
lock
cld
fadd
enter
out
mov
ffreep
xchg
in
xchg
jmp
stc
iret
jecxz
lds
fucomi
fsub
fdivr
aas
shl
sarl
mov
std
out
std
out
nop
out
int3
mov
vpor
mul
call
xor
cmp
movsb
jbe
add
imul
jb
dec
jmp
aam
fadd
fstp
pusha
shl
sahf
and
addr16
jle
adc
jle
or
stc
incb
decl
into
cmc
leave
rcl
call
aad
cmp
in
loope
xchg
xchg
mov
xor
bnd
fcom
int3
cmp
lret
aad
roll
clc
xchg
int
rorb
divl
test
lret
ror
idivb
in
jecxz
sti
jmp
popl
icebp
in
xor
repnz
out
shl
aad
loope
hlt
ds
xchg
in
iret
xchg
xor
in
les
std
sar
into
ds
loopne
mov
div
movl
xor
fsubr
hlt
cmp
shl
ror
cmc
loope
fcmovnu
lock
cmp
clc
mov
cli
xchg
mov
faddp
ljmp
lock
sti
into
int
addb
fsubrp
fldl
jmp
ss
enter
cld
in
loop
iret
repz
addb
in
test
out
into
shl
jmp
iret
cli
hlt
hlt
xor
cmp
faddp
ret
idiv
xlat
xlat
fiaddl
mov
add
ret
in
std
loopne
and
aad
shl
aam
orl
aam
out
xor
cmp
sti
ljmp
out
clc
shl
ret
out
ljmp
out
mov
loop
loop
enter
cmp
fcmovne
cmp
std
out
shr
inc
test
icebp
repz
iret
aad
cmp
lock
roll
fcmovnu
aam
test
addl
shr
out
ret
fxch
sti
out
rcl
cli
rcr
incb
loope
sbb
xchg
shrl
into
repz
cld
aam
cld
aam
out
iret
add
orb
xchg
xchg
hlt
xor
xor
sti
repnz
cmp
fdivrp
aam
into
hlt
lds
loope
ljmp
icebp
xchg
aad
shr
aaa
mov
sbbl
mov
addl
jmp
fcomp
fistps
je
push
or
loopne
jle
add
xor
out
cmc
ffree
shl
rorl
call
xchg
xor
iret
ret
cmp
jecxz
sti
xchg
loop
mov
stc
test
loopne
lret
loop
xchg
out
loope
into
lret
icebp
repnz
xor
icebp
sar
icebp
mov
mov
mov
add
out
lret
mov
xchg
shr
repnz
icebp
rcr
call
loope
lock
mov
loop
iret
shr
nop
mov
out
divb
loopne
aam
repz
fadd
in
out
call
icebp
das
enter
divl
fcmovne
fdivrp
lock
call
cli
out
cld
repz
sub
cmp
lret
xor
cmp
test
aad
loope
in
cli
or
stc
in
call
cmc
out
jecxz
shll
jmp
neg
out
fcomi
rcr
out
ret
xlat
xlat
jmp
in
int
lea
int
rcr
fcomp
fst
aaa
fdiv
in
stc
xchg
in
lret
test
shl
in
cmp
call
in
test
sti
sub
fcmove
jmp
leave
int3
leave
imul
shll
fcom
loopne
into
sar
cmc
mov
jmp
cmp
lds
sub
hlt
jecxz
fcomp
lock
cmp
mov
iret
repz
cmc
cmp
stc
int3
fdiv
fucomp
out
xchg
test
xchg
in
out
test
fmul
in
aad
int3
cs
clc
cmc
cmp
leave
aam
cmp
aam
call
clc
rclb
in
mov
das
lret
in
cmp
lock
iret
cmp
std
int
addl
jmp
repnz
test
leave
aad
aaa
lret
fsubrp
xlat
icebp
aam
test
adc
std
clc
mov
mov
out
test
std
loope
out
lret
repz
cmp
jecxz
test
xchg
enter
fnstenv
roll
movl
cmp
movl
jmp
iret
aas
aas
ror
rcl
ret
pushf
mov
sbb
loop
jle
add
jmp
cmc
out
imul
rol
int
ljmp
shl
rcr
loope
in
loop
out
int
call
std
fld
ror
neg
int3
into
ret
fst
rcl
call
lret
out
xchg
out
enter
aam
cmp
sti
aam
in
not
roll
in
addl
xchg
sub
iret
sar
xlat
cmc
loopne
in
fcos
addl
test
loopne
loope
call
ss
xor
xor
or
shl
test
fildl
test
std
jmp
in
mul
jmp
xlat
sarl
fadds
in
ds
loop
aad
mov
cld
lock
int3
int3
lret
out
jecxz
les
fcomp
std
fcos
xlat
clc
xchg
std
fld
cli
mov
loopne
xchg
cld
mov
fcom
xor
jmp
sbb
repz
cmc
idiv
jmp
loopne
shl
clc
xor
out
cmp
hlt
ljmp
aas
mov
sbb
or
in
sub
ss
ljmp
rcr
repnz
fcomp
mov
shl
loopne
sti
leave
repz
in
cld
ds
hlt
repz
aas
ret
testl
ror
xchg
in
cs
ret
xor
imul
div
cmp
repz
in
cli
mov
sbb
out
stc
repz
cmp
clc
aas
addl
aad
fstp
test
into
cld
loope
lret
aam
lret
repnz
out
fidivrs
cmp
repz
xlat
imul
fsubr
xchg
std
fucomi
out
cli
xchg
loop
repnz
ljmp
fdivp
fucom
std
cld
lret
iret
mov
hlt
aaa
xor
cld
cmp
jmp
shl
aas
fcmovnb
loopne
mov
call
icebp
in
xor
lock
ret
xor
out
je
adc
jmp
int3
rol
aad
pop
pop
movsb
or
mov
jle
adc
jle
cli
sarb
icebp
and
inc
fldl
jmp
loopne
int3
xlat
shl
clc
jmp
out
aad
out
hlt
faddl
xchg
mov
addl
fdivr
cmp
fidivrs
into
fsub
into
mul
lock
int3
loope
mov
out
rolb
xor
xor
lret
imul
cld
jmp
iret
xchg
fsubp
std
fsub
mov
int
xchg
out
mov
in
rcl
lock
shl
in
in
jecxz
cmp
fcmovnb
fcomi
int
in
jmp
lret
aaa
int3
into
cmp
sti
rcl
icebp
aad
les
xchg
mov
ficoms
shll
in
xor
aas
rolb
test
fucomp
jmp
rclb
ror
shl
sar
shl
fsub
sar
xchg
mov
out
icebp
mov
xchg
xchg
aad
lret
aad
cmp
in
fdivr
in
repz
aad
enter
xchg
fsubrp
mov
int
loop
cmc
cmp
fdivs
in
aas
cmp
cmp
aad
cmc
cmc
ret
lea
xchg
xor
aam
lock
jmp
fdivrl
xor
fucomip
sbb
filds
iret
xor
xor
aaa
cmp
hlt
out
rolb
loopne
test
jmp
rol
test
loopne
int3
shl
aad
enter
sar
in
in
idivl
roll
std
int
ljmp
lret
loop
stc
cld
ret
repz
loopne
loopne
and
cmp
cld
test
jmp
aaa
jmp
cmp
xlat
ss
imul
hlt
fcmovbe
lock
fiaddl
fisttps
ret
into
clc
stc
imul
ss
fidivrl
sti
clc
sub
in
call
ret
xor
adc
ret
xchg
loop
ljmp
loopne
lock
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
mov
mov
jmp
ret
into
sarl
rol
rcl
ja
and
shrl
out
jle
add
xchg
dec
int
lret
ss
cmp
sarl
shl
jecxz
fiadds
icebp
mov
mov
xor
das
hlt
into
lock
fdivr
lock
shl
mov
enter
sbb
fcomip
xchg
das
jmp
ror
aaa
xlat
ror
repnz
and
movb
nop
adcb
in
aaa
lock
cmp
out
stc
test
xchg
fcom
xchg
out
in
mov
lret
fimuls
ret
das
frndint
sar
cmp
jecxz
roll
aas
flds
icebp
fdivp
rcr
lret
fxam
not
loope
cli
call
rcr
test
ljmp
decl
in
int
out
xor
cmp
sarb
in
shl
shl
fcmovb
addl
in
hlt
repz
out
iret
fmul
std
fistpll
icebp
add
iret
shr
mov
fucompp
xchg
xchg
in
call
iret
shl
fmul
imul
xor
ljmp
out
into
xchg
mov
mov
xor
xor
xor
cld
into
lret
cmc
in
loopne
repnz
jmp
xor
lea
in
fmul
push
rol
aam
fucompp
cli
mov
std
cld
fsubp
leave
jecxz
int
cs
repnz
div
cmp
bnd
jmp
testl
clc
repz
out
xor
ds
fdivr
std
shl
ds
test
out
leave
adc
shr
sub
out
jmp
out
xlat
shl
fdivr
rolb
sbb
loop
fcmovne
xchg
lea
fnstenv
jmp
shl
into
sarb
mov
and
loopne
lret
cld
xchg
orl
stc
cmp
fsubr
cmp
rol
cmc
out
stc
fsqrt
cli
lret
xchg
std
xchg
iret
enter
lret
int
cmp
cli
int
call
andb
xchg
add
add
movzwl
mov
jmp
leave
aad
movsb
inc
jb
or
mov
psubsw
adc
jle
add
fsubr
loop
orb
aad
cmc
out
stc
cmp
shl
loopne
in
jmp
loopne
stc
test
xchg
mov
int3
lret
repz
xor
fnsave
repz
flds
icebp
rol
fisttpll
jmp
mov
divl
xor
rcr
cmp
in
jmp
ds
and
fisttps
in
int3
xchg
ljmp
cmp
into
cmp
lret
in
cmp
clc
fldl
test
rorl
stc
sti
int3
std
lret
lock
add
loop
mov
hlt
clc
in
call
mov
cmc
into
cld
shl
xor
not
aaa
ret
xchg
out
into
stc
in
ljmp
lret
repz
lock
clc
sarb
shl
enter
int3
loope
fabs
leave
mov
cmp
idiv
out
ror
clc
loope
fidivrs
rol
in
lret
or
sti
xchg
ss
lock
loop
cmpl
ret
cli
clc
xchg
ror
out
int
not
jecxz
xor
repz
clc
aad
xor
sar
loop
call
loope
in
in
ss
ror
out
cld
into
not
loope
sbb
loopne
dec
mov
orl
out
in
shr
xor
sar
ds
rol
repnz
out
cmp
fmulp
in
ss
std
fdiv
lret
fyl2xp1
cmp
out
mov
test
std
decl
rol
cld
fdivrs
fmul
shr
test
cld
std
leave
les
fimuls
sub
xor
cmp
sti
test
loopne
in
and
cmp
adc
fbstp
loop
hlt
sti
hlt
xlat
sbb
aam
roll
hlt
jecxz
rolb
test
mov
movzwl
xor
add
jmp
ret
into
aam
aad
fst
stc
hlt
stos
xchg
sbb
jmp
jle
add
ljmp
aam
inc
fsubr
sti
jmp
fdiv
loopne
int
repnz
repz
idiv
xor
test
cli
ret
adc
and
fsts
xchg
xor
lock
shll
clc
cmp
into
call
fmul
call
jmp
in
out
cli
xor
in
fmul
xor
aad
fcmovnb
test
ret
mov
div
iret
in
iret
loope
in
mov
iret
sub
hlt
cmp
int3
icebp
fcmovnbe
std
fcomp
out
addb
cli
sub
sub
repz
out
stc
shr
jmp
lock
icebp
loop
fucom
xchg
std
xchg
in
int
lret
aad
int
out
icebp
test
call
stc
cld
int3
sar
ror
fldl
cmp
jmp
into
sbb
loope
sbb
std
movl
mul
xor
aaa
cmp
shr
sarb
and
sbb
ret
int3
test
in
mov
jecxz
shr
ss
out
out
repnz
loope
cmp
clc
xlat
mov
fcmovu
cli
fucomp
call
shll
rol
lock
cmp
xlat
hlt
out
cmp
cmp
xchg
int3
test
out
mov
out
int3
fsubr
out
jmp
sar
sar
jecxz
stc
mov
in
fucomi
in
mov
in
int
int
in
test
in
int3
loop
and
cli
aad
loope
aad
sti
int
fimuls
imul
xor
idiv
into
call
aad
loopne
xor
out
test
nop
ror
jmp
xlat
xor
ljmp
sti
sti
out
into
aad
clc
flds
test
into
shr
test
mov
xor
fdiv
lret
cli
push
hlt
jecxz
shl
cmp
enter
shr
in
int3
jmp
into
cmp
jecxz
testl
mov
jmp
aam
aad
fstp
movsb
ficomps
xor
jle
add
loopne
loope
test
in
mov
shl
ret
fcmovnbe
cmc
dec
out
and
rolb
stc
and
mov
shr
clc
in
int3
mul
lret
call
jmp
sar
loope
cmp
sbb
out
into
icebp
call
iret
cmp
aaa
repz
fildl
jmp
lret
cmp
xchg
mul
aad
jmp
lret
ss
in
jecxz
stc
aaa
out
rol
mov
shl
call
jmp
cmp
sarl
add
test
loop
fucom
mov
iret
cli
lret
hlt
xor
repz
jmp
aas
out
aam
incb
rolb
in
xor
in
fst
cmp
xchg
call
test
in
ljmp
xor
in
repz
repnz
stc
and
xchg
out
mov
lds
xchg
idiv
ret
lret
aad
sti
aas
jmp
shl
sti
std
fdivrs
cli
mov
test
test
int3
mov
in
fisttps
int3
in
std
fsubr
into
fcomip
stc
fcmovnbe
cmp
not
fdivr
mov
test
xchg
mov
cmc
out
cmp
hlt
fsubrp
adc
cmp
testl
jmp
xchg
jmp
out
fcomip
iret
ds
xor
sti
repnz
enter
int3
lock
jecxz
loop
sti
vshufpd
std
repz
repnz
sar
rol
clc
enter
hlt
lea
hlt
cmc
xor
cmp
aad
repnz
loop
cmc
or
leave
mov
mov
aad
shll
repz
cmp
loop
out
aam
leave
addb
shr
div
out
aaa
fnsetpm(287
in
in
jmp
fmulp
aad
xchg
cld
idiv
fimull
loopne
sub
cli
int3
jmp
not
cmp
mov
jmp
ret
lret
enter
int
cltd
movsb
imul
in
ljmp
add
fdivp
cmc
test
xlat
in
lret
sbb
lret
call
les
neg
fcmovu
out
mov
vpavgb
xchg
int3
fists
xchg
aaa
aad
out
cmp
cmpb
fucomi
sbb
aad
mov
into
leave
out
xor
sub
cmp
repz
cmc
sti
adc
aam
mov
in
int
leave
in
xchg
xchg
into
das
shl
ror
in
cmp
out
aas
cmc
lock
ret
aas
jmp
incl
jmp
call
repz
ljmp
aam
rol
leave
fcmovu
xchg
test
xchg
leave
lret
shll
cmp
out
idiv
sbb
fnstsw
test
icebp
jmp
lock
icebp
xlat
testb
test
sti
std
in
out
ljmp
jmp
repz
fbstp
aas
cmc
out
loop
jmp
sti
test
fsub
in
repnz
out
in
aad
fnstenv
lret
aas
rcl
and
lret
test
xchg
push
test
xor
out
fcmove
aam
shr
rcl
in
fcomip
aad
fisttpll
fimull
sar
rcl
shr
xor
roll
xchg
enter
mov
or
clc
ss
cmp
leave
xor
aam
sti
aaa
lock
fcomi
fimuls
out
in
into
loop
int3
xor
iret
out
rolb
cli
jecxz
in
in
out
out
cld
orb
jecxz
leave
sti
into
out
in
sti
rcl
cmp
cli
addl
in
int3
iret
jmp
cmp
div
xor
cli
cmp
leave
sar
stc
std
fadd
int
stc
loope
call
in
shl
in
xchg
lock
shr
clc
lock
aam
mov
fldl
add
add
ror
fcmovnu
out
mov
fcomi
jle
adc
jle
in
ret
stc
leave
cmc
cld
cmc
lret
fcmove
aad
ret
shl
jecxz
out
not
fimuls
xchg
leave
rcr
sub
repz
cmc
cld
sti
fcmove
mov
in
ret
in
mov
mov
out
out
out
idivl
fdivr
testl
out
fmull
xchg
xor
repnz
clc
hlt
lret
ret
into
sbb
mov
in
into
ljmp
shlb
ss
cmp
fdivrs
ds
in
aam
out
orb
mov
loope
in
loope
out
icebp
rcl
cmp
loope
aas
cmp
fcmovbe
test
stc
lock
out
mov
in
jmp
xor
cli
fcmovbe
rcl
fsub
test
lds
int3
icebp
mov
xchg
hlt
loopne
cs
xor
cli
lret
enter
out
cmp
incb
test
xor
loope
ret
leave
int
out
icebp
jmp
fcmovnu
fdivrs
jecxz
xlat
addb
ljmp
into
les
enter
out
in
cld
repnz
cmc
xlat
mov
sbb
out
jecxz
enter
mov
lock
test
sar
test
loop
cmp
repnz
mov
fdivrs
enter
cli
aas
xor
cmp
jecxz
roll
test
xor
sub
cmp
jmp
clc
hlt
loop
loopne
loope
in
out
leave
xchg
mov
test
stc
stc
out
into
ror
repnz
iret
repnz
test
ret
in
ljmp
sub
iret
aam
repnz
enter
fcmovnu
lds
ds
fstp
in
out
out
test
rol
lock
in
cmc
in
int3
cmp
fdivr
test
ds
incl
add
aam
cmc
sti
cmp
aam
ret
lock
rorb
test
sub
add
int3
into
fmul
fsubrl
in
jecxz
add
and
repz
adc
jle
loope
loope
ret
fcmovu
test
rcl
in
xor
sarb
enter
test
mov
in
out
cmp
stc
in
ror
aad
aad
loop
stc
enter
call
into
out
fnstsw
lea
aad
out
jmp
fmulp
in
ret
in
fcmovnu
in
ljmp
xchg
jmp
ljmp
in
jmp
repnz
xor
sti
xchg
std
loop
jmp
iret
fsubr
call
int
cmp
icebp
icebp
ffree
loope
cmp
mov
fstl
jmp
jecxz
in
fnstcw
cli
fnstsw
out
out
rorl
loope
mov
test
cld
in
lock
cmpb
fxtract
cli
cmc
stc
sar
enter
mov
out
in
aam
xor
jecxz
aaa
ss
xlat
hlt
stc
cmc
shl
cld
rol
test
cmc
out
int3
lret
jecxz
aam
clc
in
ss
cmp
call
ret
fmul
lret
loopne
test
shl
int3
stc
jecxz
cmp
cmp
out
cmp
loope
sarl
fcomi
call
int3
stc
nop
mov
hlt
leave
in
aad
fdiv
aaa
cmc
xor
cmp
shr
mov
in
add
in
int
mov
shl
int3
das
cmp
cs
fcmovu
aad
into
cmp
lock
idiv
repnz
aad
test
dec
repnz
icebp
cmp
fcomi
stc
stc
int
shl
aas
incl
fmuls
xchg
out
out
into
f2xm1
xlat
cmp
dec
sarl
shl
lock
inc
cld
lds
fcmovne
jmp
mov
sub
jmp
ljmp
cmp
fcomip
loope
out
lret
in
ret
lret
cmp
repnz
std
fcomi
orl
loope
mov
out
rcl
pop
jmp
ret
ror
aam
mov
imul
xor
jle
into
ss
out
fdivr
fcmovnu
ret
in
lock
fcomip
fucomip
out
xor
mov
loope
ljmp
aad
jmp
out
inc
fld
fcmovu
sti
fisttpll
loop
out
idiv
jecxz
into
call
shl
out
lock
out
jecxz
fsubrp
test
in
jecxz
in
std
fldl
ds
in
cmc
leave
jecxz
int
mov
icebp
in
aam
bnd
leave
jmp
xchg
call
int3
lret
int
sti
fucomip
repnz
cmp
aas
shl
lret
imul
test
enter
ret
in
xchg
xchg
loop
lret
imulb
call
fcmovnu
faddl
repz
in
call
adc
xchg
ljmp
stc
ds
fmul
in
clc
lds
or
icebp
out
icebp
enter
out
lret
lock
fcmovbe
xlat
stc
ds
les
int
xchg
loopne
out
repz
les
xlat
ss
ret
filds
int
jecxz
in
loopne
mov
das
out
sub
clc
rcr
fcmovnbe
cmp
rol
into
and
in
mov
ret
lret
shl
icebp
xchg
clc
call
jmp
add
shl
clc
call
out
lret
loop
repnz
repnz
int
out
into
shr
sbb
aad
xor
les
test
mov
int3
rcl
sti
clc
shl
hlt
adc
cmc
fisttps
shr
fmul
mov
shl
xor
fcmovne
cmp
fnstsw
fdivs
fiaddl
call
loopne
test
xor
cmp
into
iret
jmp
lret
fdivr
shl
jmp
sti
std
fucom
ljmp
lock
not
int
fadd
aas
hlt
fsubp
jecxz
mov
mov
jmp
xlat
lret
aad
aad
int
jle
and
xchg
idivl
adc
jle
mov
into
in
out
in
in
xor
into
xor
hlt
clc
aaa
clc
rcl
cmp
xor
testl
cld
notb
lret
enter
ljmp
incb
loopne
std
fdivr
loope
xchg
loopne
in
test
clc
and
xlat
mov
in
out
out
std
lret
test
cmp
jmp
fcomp
inc
cmp
out
loopne
clc
mov
fucomi
out
adcb
in
fcmove
xor
jmp
ds
xchg
out
call
out
ret
mov
cli
fadd
cli
test
cmp
jecxz
jmp
enter
int
lock
rcl
rcl
rol
stc
ret
xchg
bnd
jecxz
call
adcb
out
xor
shl
cmp
hlt
rol
clc
test
mov
int3
jmp
shl
enter
iret
jmp
shr
into
filds
out
call
leave
iret
sti
int3
out
iret
repnz
rcl
cmp
lret
repz
cld
rcr
stc
repz
nop
stc
out
fsubp
shrb
leave
out
out
aaa
repnz
neg
ret
fabs
loop
or
out
sar
out
stc
divl
in
aam
sarb
loop
in
clc
hlt
cli
loope
neg
ret
test
mov
in
ret
cmp
out
fcmovu
fdivr
ds
not
cmc
loop
jmp
sti
mov
int3
sub
shrl
aad
cmc
aaa
cmp
fdivrs
out
fcmovnu
fdivrp
int3
enter
ror
xchg
out
in
aad
jmp
loopne
rol
aam
sti
cli
loopne
test
repz
aam
xor
jmp
lret
cmp
rcl
xlat
loopne
hlt
ds
aam
in
nop
sti
sub
mov
out
in
cmc
rcr
xor
add
mov
mov
xor
add
jmp
lret
rcr
aad
fsubr
xor
shll
add
ss
lock
jecxz
int3
fucom
sbb
mov
test
lret
sarl
out
fucomi
fistpll
in
aam
ret
ds
test
in
testb
xchg
shr
loop
sti
cmp
hlt
ljmp
icebp
fadd
movl
mov
mov
bnd
loopne
in
cmp
fst
fldl
out
out
nop
lea
into
out
aad
adc
cmc
rcl
add
nop
nop
lock
jmp
leave
jmp
cmp
shl
repz
in
cli
loop
ljmp
rcl
lret
int
repz
hlt
cmp
fdivr
addb
fcmove
out
in
lea
loope
jecxz
fidivrl
call
loop
cmc
fcmovu
fnstcw
aad
testb
fsubrp
or
fucomp
repz
out
cmp
or
ret
ret
orl
lret
cld
out
xchg
loopne
enter
fmulp
in
lock
loop
aas
hlt
call
fdivr
mov
into
int
call
xor
clc
shr
fiaddl
cld
xchg
out
loop
out
cld
lret
xchg
or
hlt
lret
xor
jecxz
aaa
into
sar
clc
cmp
sar
aad
add
fsubp
mov
test
out
clc
jmp
repz
fdiv
roll
in
lret
call
loop
repz
cmp
adc
loop
fldl
icebp
xchg
xchg
fists
ss
iret
int
jmp
rcr
repnz
leave
jmp
lock
into
test
ss
cmp
fdivr
repnz
xchg
jmp
mov
incb
ljmp
out
cmp
jmp
inc
adc
lret
test
mov
mov
jmp
ret
iret
enter
int
xchg
cmpsb
push
ja
adcl
adc
jle
xchg
xchg
adc
sub
ss
lock
aam
stc
int
sar
ds
in
enter
call
in
clc
jmp
loop
lock
in
aas
hlt
out
stc
test
int3
int
cs
idivb
cmp
cmpl
aad
aad
cmc
fildl
leave
hlt
xchg
incb
div
int
into
lock
incl
cli
int
clc
loopne
xchg
int3
sub
xlat
in
fcom
cmc
rcr
cli
ds
repz
icebp
cmc
stc
fnstsw
test
mul
fcmovu
ljmp
loope
lret
clc
fsubp
aam
cmp
flds
in
int
in
int3
sub
loop
into
aam
fdivrp
ret
lock
neg
hlt
test
cli
enter
movl
div
lret
aad
fdivrp
int
iret
lock
add
in
loopne
repnz
rcl
ret
xor
int
fdivrl
inc
out
in
mov
xchg
xchg
rol
lock
in
std
xor
icebp
sar
ror
adc
in
in
call
cli
lock
shr
repz
sti
repnz
xor
sarb
loopne
ffreep
call
xchg
out
fucom
rorl
icebp
repz
shr
cmp
out
test
lret
loopne
xchg
shr
loop
hlt
cld
in
aaa
into
repnz
shl
jecxz
in
imul
loop
fucom
xchg
int
call
clc
into
test
idivb
ret
mov
clc
std
neg
fyl2x
rorl
cmc
xor
fdiv
cmp
test
loope
stc
fcom
hlt
mov
xchg
rcll
aam
jmp
sar
cmp
shl
clc
aas
sti
iret
lret
mov
int
in
not
cmp
ds
int3
cli
mov
mov
cmp
jmp
lret
fst
int
test
cmp
dec
std
jle
adc
jle
xlat
cmc
xchg
leave
cmc
add
leave
lret
addl
xor
cmp
iret
clc
into
out
roll
jecxz
ret
fdivr
incl
adc
les
repz
ffree
ljmp
test
shl
aad
out
nop
in
and
lds
enter
shr
rcr
adc
roll
enter
mov
lret
aam
lret
imul
ss
int
clc
out
fstp
hlt
ret
sti
leave
cld
fxam
clc
fsubp
iret
test
std
xchg
mov
aam
in
std
std
stc
into
jecxz
fdivrs
in
aad
mov
loope
in
lret
mov
hlt
in
ss
xor
out
stc
cmp
aad
xor
jmp
leave
mov
mov
cli
aam
cmp
fdiv
loopne
in
neg
repz
ljmp
sti
xchg
xchg
nop
ljmp
sar
int3
cmp
test
lock
shl
ljmp
mov
aaa
ror
jmp
fldlg2
roll
ror
lret
cli
test
fsubp
mov
mov
xor
stc
int3
jmp
fucom
ljmp
hlt
ror
mov
filds
repz
neg
sti
into
not
testl
mov
flds
xor
out
iret
aam
cmp
jmp
in
cmp
in
cld
cmc
leave
int3
roll
stc
ljmp
cmp
add
loope
in
into
out
rorb
enter
fcmovnu
cmp
jecxz
or
repz
orl
nop
jmp
out
lret
cmp
adc
sub
jmp
ljmp
jecxz
hlt
int3
shlb
cmp
repnz
filds
cmp
in
clc
xlat
loopne
repnz
div
fcom
je
mov
mov
mov
jmp
xlat
into
rcl
aad
fadd
mov
adc
push
leave
pusha
jle
adc
jle
aam
int3
mul
into
cmp
iret
cli
shl
loopne
jecxz
fcmovnb
xlat
out
out
lret
mov
shl
and
in
xor
in
into
aas
shl
icebp
int
and
xchg
lret
mov
xchg
lret
shl
xorl
out
cmp
out
repz
imul
xchg
div
in
test
out
fildl
icebp
xor
cmp
shl
lret
loop
xlat
cmp
fcom
rol
jecxz
in
fucomp
ffreep
mul
lret
out
jmp
div
repnz
clc
shl
rcl
loopne
xchg
std
loop
out
aaa
jmp
rcr
in
lret
neg
cmp
cld
fadd
faddp
fcmovnb
mov
sti
sti
adcb
lret
jmp
ret
out
enter
mov
int3
xor
cmp
not
cmp
or
cld
cli
aas
out
fimull
lret
iret
iret
xor
aam
in
sti
hlt
test
hlt
clc
loop
enter
mov
sti
mov
in
jmp
jmp
int3
cmp
xlat
fld
fmul
add
and
enter
ljmp
ret
mul
cs
fsubrp
sti
aas
lock
in
ror
clc
in
call
loope
mov
icebp
xorb
sub
out
out
ss
into
in
cmp
fst
fsubr
jmp
iret
icebp
lret
ljmp
ror
div
std
repnz
out
test
mov
pop
rorb
out
out
hlt
lds
xor
sarb
int3
stc
loop
ret
decl
mov
cmp
das
stc
jmp
out
lret
in
ds
ds
roll
addb
icebp
int
xlat
imul
enter
cmp
inc
incl
cld
iret
jecxz
xor
loop
repz
loopne
in
xlat
in
call
add
sub
add
ror
enter
lret
add
fs
jae
jle
adc
jle
xlat
jmp
lret
xchg
mov
xor
jmp
inc
inc
repnz
jecxz
hlt
call
test
adcb
ss
into
leave
rol
in
sarb
std
iret
aam
call
test
xchg
shlb
cmp
jmp
jmp
repz
icebp
test
test
dec
mov
enter
xor
xor
rcl
shl
cli
fdivrp
in
in
aad
fmull
enter
fsubr
out
cmp
fmul
out
into
test
in
in
in
iret
loop
aam
divb
xor
enter
cli
ljmp
rcr
aad
mov
sub
fsubr
in
in
enter
ss
rcr
ljmp
cmp
fldl
mov
iret
leave
xor
lret
sar
in
cmc
hlt
test
stc
loope
enter
fcoml
sub
iret
in
lret
aam
in
fcom
out
ret
test
in
aam
int3
aaa
xlat
into
out
out
leave
lret
sarl
out
cli
fcomp
aad
fucom
lret
loope
jmp
not
xor
cmp
shl
jmp
cmp
repnz
rcr
or
stc
mov
loopne
loopne
clc
out
in
fcom
into
cmp
cmp
fimull
test
repnz
cmp
jmp
leave
ss
loopne
fld
xchg
cld
aas
in
lret
in
shl
ret
xor
jecxz
ljmp
sti
clc
in
in
hlt
cli
test
ljmp
fcoml
in
out
sarl
aam
xlat
ret
cmp
xchg
out
orb
cmp
aam
repnz
iret
inc
enter
fsub
fnclex
lret
aam
xchg
lock
into
aam
cld
jne
mov
mov
movsbl
xor
add
jmp
int3
enter
into
push
mov
data16
jle
add
xlat
shl
adc
cmc
cld
ret
hlt
roll
and
fst
loopne
jmp
jmp
aas
cmp
hlt
idiv
loopne
int3
call
loop
das
in
cmp
hlt
xor
ds
iret
testl
fisttpl
ret
lret
jmp
cmp
hlt
test
fiadds
enter
out
shl
xchg
test
out
out
jmp
cld
lock
ret
repnz
call
fld1
fucomip
in
in
jmp
aaa
rcr
loop
out
sti
sar
fsub
fdivrl
clc
les
int
out
ss
out
xor
repnz
call
xchg
xchg
mov
das
in
sub
fstpt
jmp
fsubr
loopne
out
aam
mov
repz
fcmove
fadds
loopne
lret
shrl
hlt
ror
jmp
adc
call
adc
faddl
aad
into
icebp
cmp
shl
repnz
out
loopne
test
mov
mov
loopne
ljmp
xor
aaa
cmc
aad
in
test
xlat
jecxz
lret
fimuls
shr
shr
clc
aad
xlat
fcmovnbe
cli
ret
std
ror
mov
neg
ljmp
mov
jmp
cli
shl
aas
aam
rorl
into
mov
bnd
rcl
jmp
cmp
in
sar
rol
fadds
lock
jmp
std
int3
out
lock
lock
out
loop
xor
rcr
loop
in
enter
out
fmul
test
into
in
in
stc
shr
ljmp
jecxz
std
jmp
iret
sti
out
mov
ret
cmp
hlt
cld
repnz
fdiv
rolb
in
xchg
std
cmp
je
movl
lea
jmp
sarl
aam
aam
fcmovne
inc
cwtl
sbb
sbb
jle
fisttps
jmp
loop
sarl
cmp
f2xm1
aas
hlt
rol
rcl
out
cld
fcos
in
fcmovu
out
nop
mov
ret
cli
into
rcr
cmpb
out
ret
enter
loop
mov
in
shl
repz
out
cs
aam
hlt
into
fucomp
rol
test
mov
xchg
xor
lret
loopne
ljmp
out
stc
stc
leave
fcmovb
cld
lret
ret
shll
jmp
xor
cmp
in
ret
fcomi
cmc
fisttpl
mov
lret
xor
out
iret
fdivr
out
loopne
lock
out
test
jmp
iret
lock
aad
call
lock
std
out
ljmp
mov
jmp
rcll
jecxz
sarl
into
call
shl
sti
loop
faddl
jmp
loopne
into
into
in
lret
sarb
shr
lret
fsubrp
cmp
repz
cld
sti
jmp
repz
repz
xor
sarb
into
fdivrl
shl
iret
shl
rorb
jmp
into
ss
repz
int
cmp
xlat
int
ret
test
out
fiaddl
jmp
repz
out
sar
cmp
in
idiv
shr
and
add
ljmp
stc
xor
fmul
sarb
cmp
aam
repz
fsqrt
lret
mov
xchg
aam
into
cmp
xor
cmp
cmp
les
jmp
or
sub
jmp
xlat
int3
div
fcmovb
rolb
mov
fildl
xchg
into
out
xor
ss
cmp
cmp
cli
in
fmull
stc
mov
loop
in
sar
cmc
adc
shl
fiaddl
in
mov
mov
addl
jmp
int
fcmove
fstp
adc
js
push
inc
mov
jle
add
aas
out
fadds
lret
cld
fistl
iret
rcr
cmp
clc
stc
rcl
xchg
jecxz
int
cld
repnz
xacquire
in
in
aad
cmc
std
lret
cmp
iret
sarl
loopne
cmc
jecxz
test
fucomip
xchg
mov
int
xor
xor
out
std
iret
cli
cmp
cld
rcr
sar
cmc
and
ret
enter
out
or
icebp
stc
cmp
repnz
xlat
lret
icebp
aaa
mul
jecxz
lret
fldl
out
out
repz
enter
int
iret
fcomp
repnz
adc
cmc
out
icebp
decl
sub
shl
repz
loopne
roll
fcmove
leave
int3
filds
test
cli
imul
stc
jmp
loope
cmp
std
ret
enter
fabs
fcoml
aaa
shl
fsubr
loope
fiaddl
xor
ret
addb
xchg
int3
loopne
ret
aaa
cmp
xor
jmp
jecxz
xlat
aad
loope
int3
loop
out
into
mov
neg
cmp
enter
ljmp
incb
int
ret
loopne
orl
jmp
shlb
std
mov
jecxz
stc
mov
jmp
out
xchg
jmp
call
test
aad
sarb
mul
rcr
idiv
jmp
int3
in
out
ret
out
fmul
cmp
repnz
xlat
xchg
aad
xor
mov
sti
in
fucomi
repnz
imul
sar
iret
sti
lret
xor
ljmp
aam
cmc
in
test
cmp
in
xlat
in
clc
int
dec
sar
ds
in
out
out
test
aam
in
stc
loope
xchg
in
fimuls
shr
stc
fdivp
int
sarb
in
ret
rcl
sar
mov
enter
leave
jecxz
out
cmc
mov
mov
xor
lea
jmp
into
aam
enter
fsubl
dec
pop
repnz
mov
adc
jle
icebp
jmp
cli
jmp
shl
neg
aas
leave
rcl
or
in
fucomip
std
sar
jmp
cmp
iret
aas
enter
out
repz
in
jecxz
test
out
fdivr
lea
sub
clc
iret
jmp
and
call
in
out
mov
out
loope
clc
enter
stc
fst
rcl
sar
iret
fadd
cmp
fucomp
stc
cld
jecxz
loopne
xchg
and
clc
ljmp
rcl
test
fcmovu
cld
mov
ret
testb
jecxz
aam
aaa
lret
repnz
in
fsubr
in
rcl
in
inc
std
test
cld
enter
int3
xchg
xlat
xor
int3
repz
fsubr
imul
rcl
and
xlat
fisttpl
mov
in
test
repz
fsub
jecxz
in
repnz
jecxz
out
lock
call
mov
mov
in
hlt
xchg
aad
xor
in
xor
sti
into
rcl
testb
out
aad
fsub
mov
iret
mov
ss
int3
xor
call
out
std
out
xchg
in
call
xchg
ljmp
clc
hlt
cli
fsubrp
std
cmp
and
mov
enter
mov
xchg
in
xor
call
out
repz
cmp
adc
in
bnd
out
sar
sti
mov
imulb
mul
in
fcmovnbe
cmc
leave
clc
in
inc
lock
push
ror
fdivr
orl
sub
mul
xor
cmp
test
and
leave
sti
rolb
ljmp
cmp
iret
cld
xor
cmc
mov
enter
test
popl
int3
in
lret
ss
rol
xlat
sarb
icebp
mov
out
lret
mov
int3
out
mov
aad
ret
aaa
out
repz
in
cmp
test
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
push
jmp
int3
rol
xlat
fstp
fst
mov
sahf
sbb
mov
sub
int
iret
ror
aam
xor
enter
out
out
repnz
roll
rol
sbb
rcl
hlt
repz
hlt
int3
cmc
into
lret
aaa
ds
int3
in
test
cmp
mov
into
mov
int
jecxz
cld
cmp
fsub
loop
shl
ret
fdivrp
testl
ret
rcl
sti
adc
fmul
out
ffreep
repnz
out
test
aaa
int3
lock
aam
jecxz
les
loop
cmp
rol
loope
leave
addb
int
lock
fcmovbe
cmp
cld
addb
cld
cmc
cli
stc
loop
or
in
mul
lret
fxch
enter
or
cmp
fmull
mov
out
out
shr
das
ret
in
aam
std
lret
stc
xor
clc
fmull
test
call
push
enter
sti
xlat
jmp
addb
lret
vcvttpd2dq
in
rorl
clc
ss
fsub
xor
sarl
fidivs
ljmp
fmul
mov
repnz
fdiv
aam
shl
aad
loope
shl
idiv
mov
in
leave
mov
in
out
cmc
out
jmp
int3
in
aaa
cmp
aaa
iret
cld
xor
iret
stc
add
out
leave
ljmp
int
in
mov
aaa
in
ss
lret
aad
clc
xchg
ret
aad
ljmp
in
into
jecxz
cld
ror
cmp
cmp
sbb
cli
hlt
shl
in
lock
xchg
into
out
ss
hlt
repnz
ds
in
xchg
cmc
loop
cld
fildl
rclb
cmp
xor
lret
in
cmc
int3
loope
cmp
cmc
and
clc
loopne
repnz
jmp
cli
enter
fdiv
out
std
xchg
fimuls
out
fdivrp
enter
mul
sti
repnz
clc
div
jmp
inc
cmc
clc
ret
sar
call
lret
jecxz
hlt
xor
fprem1
sti
fcmove
lret
jecxz
lret
xchg
rol
icebp
sar
idiv
dec
cmp
shr
iret
mul
mov
aam
lret
mov
ror
orb
lock
cmp
fsin
iret
add
fimull
test
and
addl
xor
cmp
out
cld
ret
clc
and
insb
jbe
add
add
add
fadd
fcom
fld
pop
into
shll
adc
jle
fucomi
ds
int
iret
adcb
not
out
leave
aad
hlt
dec
xor
add
filds
test
hlt
ret
cmp
into
out
jmp
rolb
std
test
decb
jmp
jecxz
fstpt
clc
cmp
out
icebp
cmp
loop
loope
mov
out
cld
repz
lret
aam
aas
loop
imul
clc
bnd
fisttpl
mov
fyl2x
adc
movl
clc
test
roll
std
xchg
mov
mov
fsubp
nop
xchg
fildll
clc
in
lock
in
loope
fcmovu
jecxz
jecxz
ret
int3
mov
rorb
sub
enter
cmp
leave
lret
divl
in
loop
fincstp
out
fadds
out
cmc
aam
jmp
hlt
iret
in
loope
rcr
rorl
jecxz
mov
test
subl
icebp
xor
fdivs
ds
cmpb
cld
stc
in
leave
ret
ret
int3
lret
int3
fucom
sar
rclb
lret
lock
stc
rcl
loop
out
leave
loopne
xchg
enter
cld
int
jmp
repz
cmc
in
cmp
cli
fcomip
ds
xlat
mov
ljmp
fisubrs
repz
xor
fstp
cmp
cmp
fld
addl
in
icebp
or
shl
xor
hlt
xor
out
jmp
dec
shl
ret
leave
jecxz
and
int
adc
leave
in
out
lret
clc
rcl
lret
fnstcw
aas
roll
in
iret
sub
int
mov
cmp
fsubr
out
repnz
loope
call
ljmp
mov
aad
xor
hlt
cli
xor
fcmovnbe
adc
stc
test
lret
xchg
int
enter
fdiv
out
lret
cmp
clc
out
stc
loop
test
cli
iret
test
lea
fld
in
sti
fcmovbe
xlat
ret
ret
testb
dec
lock
popl
aaa
in
cmpb
iret
fstp
cmp
repz
enter
std
jecxz
rclb
fidivs
aam
aaa
cmp
in
sar
repnz
inc
fcmovu
mov
jmp
out
mov
rorl
int
jmp
inc
icebp
loop
stc
cld
jmp
jecxz
cld
mov
addb
xor
ds
call
sar
inc
cld
daa
test
inc
add
add
add
rolb
add
add
add
add
add
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
and
mov
jmp
aas
sarl
fcmovnbe
fcmovb
loope
add
scas
push
cmpsl
xchg
dec
xchg
jle
mov
enter
out
orl
fcom
rol
fnstenv
ss
cmc
shl
cmp
add
jmp
rcr
cmp
in
aaa
enter
out
into
cmp
jecxz
shl
jecxz
fcmovu
div
loopne
lret
loopne
loop
call
cmc
int
aam
repnz
sti
loope
lock
cld
in
mov
sti
std
in
loop
xor
leave
cmp
jmp
cmp
loope
std
in
fsubp
mov
fmull
cli
int
iret
imul
std
lret
in
ret
aad
mul
xchg
fcmovnu
ljmp
fcomp
iret
hlt
xor
xor
cmp
hlt
not
jmp
sti
out
or
test
jmp
in
out
imul
out
shl
int3
fadd
std
out
into
test
rolb
jmp
in
int3
fsubr
lock
cmp
leave
call
cmp
lret
repnz
lock
rol
xlat
jecxz
addl
icebp
xor
cmp
jmp
cmp
add
mov
lret
loope
out
out
rol
jmp
fcmove
clc
sti
ror
cmp
out
loop
aad
out
add
fstp
loope
xor
hlt
xor
cmp
fdivr
loopne
xlat
xlat
test
mov
jmp
fisubrs
xlat
aaa
int
std
aad
sar
loope
add
aad
xchg
rorl
decb
xor
lret
ret
lret
lock
fcmovnb
call
fld
add
dec
mov
into
shll
xor
in
lret
rcl
or
stc
lds
cli
fmuls
in
test
fbstp
out
xor
aaa
idivl
xlat
cmp
lds
repnz
mov
lock
out
xlat
sarl
fdivr
jecxz
fsubp
hlt
les
and
xor
ss
into
xor
cmp
rcl
cli
cli
loope
lock
xlat
out
test
fimull
xchg
xchg
out
aam
into
sarl
cmp
roll
clc
mul
loope
mov
call
stc
cmp
cld
xor
cmp
in
mov
mov
lret
std
std
nop
test
xchg
call
int
shr
fcmovbe
cmp
rcl
stc
fdiv
sar
repz
fsubrp
fisttps
shll
xlat
cmp
cli
clc
cli
rcr
cmp
in
ret
cmc
rcl
xchg
fsubr
xchg
jmp
fsubr
xchg
rcl
imul
out
not
das
fldz
out
loop
sti
fimuls
movsb
jbe
add
or
push
inc
mov
movl
jmp
into
aas
ror
rcl
sarl
xchg
lods
mov
mov
jle
into
test
std
filds
in
mov
int3
ror
enter
sti
cmc
loopne
int
lock
aam
sar
fxch
loope
xchg
xchg
cmp
fxch
clc
jmp
cld
fnstsw
test
shl
icebp
shl
xchg
std
clc
mov
add
call
std
cmp
icebp
cmc
jmp
cmp
shl
rorb
xchg
jmp
lret
add
cmc
cmp
fcom
cli
lret
cmp
fcomip
loop
jmp
hlt
mov
jmp
xlat
fcomi
cmp
fdivp
iret
rol
cmp
mov
loope
xchg
xchg
add
bnd
aam
cmp
neg
loop
xchg
rcr
cmc
std
loop
xlat
int3
test
xchg
xchg
ljmp
fldl
lock
rcr
cmp
iret
shr
mov
aad
xlat
vcmpsd
in
jmp
cld
fyl2x
rolb
leave
sti
fnsetpm(287
cli
int
xchg
repz
out
cmp
icebp
ljmp
test
repz
jecxz
in
lds
loop
cs
enter
cmc
stc
fstpt
imul
repnz
in
call
loope
and
adc
out
in
cmp
lret
lock
icebp
int3
std
cmp
cli
test
mov
mov
aam
ret
out
iret
vpaddw
loopne
in
shr
in
jecxz
mov
lock
out
out
jecxz
shl
int3
in
ss
cmp
icebp
call
fisttps
in
repz
rol
aaa
fucomp
shlb
aaa
sti
shr
repz
stc
clc
fucom
orb
jmp
rol
fdivr
sub
int3
loope
testl
fincstp
mov
std
lock
hlt
ret
int
lds
aaa
incb
incl
testl
lret
out
leave
repnz
adc
ret
stc
leave
hlt
enter
loopne
xchg
xor
cli
in
out
ss
aaa
clc
jecxz
xlat
sbb
aam
not
sbb
ror
ss
sarb
in
std
imul
add
xlat
not
cld
loope
call
in
fst
out
clc
out
ror
cli
xor
fcmovbe
cld
cmp
ror
test
cli
out
nop
nop
out
xor
test
ret
xor
xor
call
jmp
lock
fld
aam
lds
faddl
test
sar
shl
enter
dec
or
jmp
rcl
aad
aad
shll
mov
lret
jle
add
ds
out
sbb
in
jmp
fsubrp
xchg
out
lock
sub
ss
ret
icebp
sar
cmp
mov
in
loopne
lea
shlb
in
sti
shl
jmp
rcr
cmp
sub
xchg
and
aad
stc
stc
ljmp
cld
cmp
stc
enter
in
sti
loop
mov
cmp
ss
shl
fnstcw
call
loop
repz
xchg
xor
mov
stc
int3
lock
out
xor
ret
in
repz
cmp
loop
cmp
sti
fdivr
stc
jecxz
call
lret
lea
iret
cmp
ss
enter
in
and
cld
rorl
xchg
ss
out
fucomi
cmp
rcl
stc
addb
or
cli
fninit
loopne
nop
xchg
xchg
das
fcom
fcomi
hlt
leave
jmp
cmp
out
stc
sarb
sub
rorb
or
icebp
rol
cmc
icebp
leave
aaa
aas
out
adc
repz
repz
fisttpl
xlat
out
int3
shr
hlt
xor
shl
fcmovb
sti
not
test
mov
in
ror
xor
call
cmp
ds
in
stc
repnz
ss
in
cli
int3
into
out
cld
in
hlt
hlt
repz
idiv
enter
enter
mov
jmp
stc
int
ror
icebp
jmp
lock
cmp
jecxz
leave
ljmp
repnz
loop
les
std
lret
cmp
fdiv
fucom
aad
jecxz
xlat
xlat
lret
loope
repnz
addb
ror
aad
sarb
sti
cmp
sub
ljmp
sti
into
fists
in
aam
cmc
ss
out
loope
ffree
call
std
out
out
lret
loope
loope
ret
std
shl
shr
shlb
testb
std
sub
out
sti
lret
jmp
aaa
repz
stc
loope
in
repnz
call
fldl
test
cmc
repz
clc
ror
aaa
out
lret
hlt
int
icebp
cmp
sar
mov
ffreep
loopne
ret
mov
repnz
cmc
leave
iret
ds
xor
ljmp
fcmovnb
mov
fcmovnu
out
xchg
mov
enter
ljmp
fndisi(8087
cmc
sarl
addl
repz
mov
leave
ljmp
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
xor
mov
add
add
imul
mov
cmp
jmp
int3
rol
aad
aad
fpatan
int3
and
pop
test
add
mov
shl
test
fcomi
mov
sti
ljmp
ss
cld
repz
rcr
idivb
clc
aad
clc
cmp
out
test
in
subb
xor
icebp
xor
xor
fcmovbe
in
fdivp
lock
xchg
xchg
in
sti
mov
out
ror
test
jmp
in
neg
icebp
in
std
rol
cli
ret
out
lret
incl
std
mov
xor
aam
sub
iret
aam
aad
loop
les
lret
iret
ljmp
cmp
fdivrp
stc
fcompp
loopne
sub
fmul
fimuls
loope
loopne
iret
lret
rcr
fstp
fcmovne
aas
repnz
iret
ror
ret
mov
mov
xabort
mov
hlt
xchg
lret
lock
in
lock
jmp
clc
and
xrelease
loopne
ljmp
into
stc
fld
sar
loope
rolb
ret
leave
cmp
out
and
jmp
aam
ss
fmul
and
aam
repz
faddp
into
int
loop
out
xchg
lret
enter
push
cli
loop
hlt
rcl
icebp
fcmove
not
cmp
shl
addl
sti
cmp
cmp
sar
cmp
fcomi
sbb
fucomi
mov
lret
loop
jecxz
iret
in
ss
xor
shl
fcomi
test
hlt
iret
jecxz
out
leave
mov
rolb
enter
cmp
xor
in
xlat
cld
mov
sti
out
icebp
fdiv
fcmove
shll
int3
jecxz
idivb
vpsubd
cli
nop
loopne
cmc
mov
aam
aad
stc
std
fidivrs
fadd
out
lret
call
repnz
test
out
jmp
cmc
xor
rolb
aas
ljmp
mov
lds
repz
in
cmp
iret
rcr
out
mul
idivl
mov
std
in
cld
jmp
bnd
int3
in
enter
cmp
idiv
xlat
cmp
ret
icebp
loopne
mov
stc
mov
testb
int3
cmc
lock
out
xor
hlt
ror
aad
aam
jecxz
loope
xchg
addl
xor
aad
cmp
fst
lock
cmp
out
xchg
stc
add
aad
jmp
leave
loopne
sti
sub
out
ds
ror
repnz
xchg
cmp
lea
into
mov
das
icebp
divl
xor
xor
test
add
add
clc
xor
xor
add
add
imul
jmp
mov
mov
mov
jmp
into
rol
fcomp
fcomps
sub
push
inc
pushf
jle
mov
repnz
iret
aad
lock
out
mov
testl
aam
into
out
lret
cmp
fdivp
faddp
repz
addb
leave
out
leave
test
xor
iret
in
call
fidivrs
leave
cmp
mov
xchg
out
loop
cmc
xor
cmp
cmp
call
repnz
repz
loope
loop
jmp
mov
into
out
call
idivl
out
fcmove
iret
aam
fnstcw
rcr
in
xchg
fxch
clc
leave
out
call
xor
out
ljmp
sbb
mov
mov
out
div
fldl
fyl2x
lret
jmp
fsub
call
clc
lret
lret
in
cld
in
icebp
out
iret
jmp
in
into
call
fsub
fsub
fildl
mov
repnz
cmc
repz
call
aas
into
stc
in
test
flds
test
in
fcmovu
lret
iret
shl
shr
fcmovu
int3
shl
int3
lret
int
shl
test
cmp
mov
xchg
into
into
xor
jmp
into
shr
sar
out
clc
icebp
sbb
leave
ljmp
nop
in
xor
fcom
leave
lret
fdivp
xor
or
loope
idiv
cmp
cmc
rcl
ret
fcmovnbe
aad
xlat
aas
out
out
ds
sti
ret
cmp
mov
rol
sub
jmp
fsub
sarl
cmp
out
std
shr
cli
lret
xor
in
ret
in
xor
roll
in
hlt
fdivr
and
fcmovnbe
into
out
icebp
out
sti
fdivp
aad
fnstcw
aas
sti
in
std
aas
call
xchg
lret
out
loop
cmc
in
into
loope
cmp
xlat
shr
hlt
fdecstp
lock
fsqrt
repnz
loope
fcom
into
ljmp
ljmp
mul
rol
cmp
mov
in
fcomip
out
xchg
rcll
fcmovnu
ljmp
lret
out
test
iret
test
in
call
push
and
in
xor
call
aaa
cli
into
fdivr
loopne
fcmovnbe
jmp
in
movb
xor
aam
jmp
cmp
lock
call
fdiv
xchg
out
fmull
loop
call
rol
xlat
fucomi
cmpl
aad
in
cld
fdiv
in
int3
in
mul
cmp
clc
int3
mov
mov
jmp
rcl
rcr
fstp
aam
cmp
lods
mov
and
jle
stc
cmp
jmp
jmp
aas
fdiv
fcmovnu
out
mov
mov
mov
rcl
mov
decb
ljmp
clc
jecxz
fstpt
in
jmp
std
loope
repz
out
ret
xor
fcom
jmp
cli
frndint
adc
fldl
into
sar
xchg
mov
fcom
idiv
aaa
cmp
icebp
cmp
out
rcr
fnstsw
jecxz
testb
into
ljmp
into
sti
rcr
leave
fsin
cmp
cli
mov
loope
test
xchg
int
lret
aaa
ss
repz
enter
shll
roll
ret
aam
in
cld
lret
mov
int
rolb
out
cli
icebp
xlat
cmc
cld
jecxz
loop
aas
test
jmp
in
sbb
loope
mov
icebp
rcl
xor
jmp
fcomp
fcmovnu
into
not
xlat
rolb
loope
loopne
xchg
cmc
lret
fnstsw
hlt
imul
std
loope
icebp
repz
cli
addb
fstp
in
nop
jecxz
out
xor
repz
lret
cmp
sar
hlt
repz
jmp
std
fcmovnu
xchg
aad
ret
ror
enter
cld
out
sarb
out
xchg
ret
lock
mov
loope
call
cmp
into
fldz
fsub
test
call
xchg
int
xor
aaa
ljmp
in
sti
cmp
mov
lret
adc
lret
lret
xlat
rcr
in
int3
xor
fld
mov
fcmovnb
sti
mov
loop
mov
lret
int3
in
jmp
ss
ds
icebp
cmp
std
rcr
mov
leave
std
lea
jecxz
cmp
fptan
jmp
fyl2xp1
xlat
filds
fucom
mov
fists
loopne
lret
fucomi
aam
sti
lret
lock
fcmovnu
or
out
adc
sar
ljmp
cs
ss
aam
out
shl
out
aas
in
call
out
in
shr
xchg
enter
xlat
shr
int3
cmp
ret
ret
cmp
aam
out
sbb
enter
loop
enter
xor
repz
loop
in
ds
rolb
iret
jmp
shl
notb
aaa
cmp
jmp
rcl
ljmp
loop
lret
cmc
test
fdivr
fcomi
lret
jmp
leave
neg
ss
fdiv
hlt
fnsave
out
fdiv
repnz
repz
ret
add
add
imul
jmp
sarl
ret
ffree
in
jns
pusha
out
outsl
bnd
jle
add
in
in
fucomip
or
clc
in
test
test
loop
call
clc
jmp
fdivr
cli
out
in
xchg
xor
mov
test
shl
cmp
lock
in
out
fsubp
int
out
hlt
mov
hlt
jmp
in
fdivrp
clc
icebp
fcmove
fstpt
les
out
xchg
xorl
in
cmp
int3
in
cmc
aas
rol
rol
ret
xlat
stc
mov
mov
nop
sar
cld
mov
xlat
cmp
out
int3
out
lret
sarb
fninit
sti
clc
cld
std
hlt
fcmovnb
jmp
out
rolb
cmc
cli
jecxz
int
fcmovne
sti
xor
lret
ror
cmp
aam
int
test
jecxz
jmp
int3
out
out
lret
enter
rcr
rcr
test
mov
flds
loopne
repz
ret
cmp
cmp
icebp
lock
fcmovne
fdiv
inc
std
loop
adc
in
ljmp
xlat
cmc
jmp
out
ljmp
cld
roll
orb
mov
lret
adc
sub
ret
cmp
fdivp
cmp
int3
cmc
hlt
clc
xor
loop
loop
add
in
rorb
iret
leave
cmp
fstpt
cmp
in
add
fst
test
neg
movl
enter
cmp
cmp
sar
sti
lret
jmp
mov
clc
ftst
jecxz
aam
sar
hlt
cli
or
cmc
cmp
rcl
ret
mov
fsubrp
inc
shll
lret
in
fcomp
fistpll
leave
fistpll
sti
roll
out
addb
in
hlt
cmc
sub
enter
sarb
lock
ss
stc
not
rcr
cli
fucompp
cld
rolb
cmp
into
sti
xor
fcomip
stc
iret
in
repnz
jecxz
ljmp
in
addb
jmp
cmp
cmc
out
fcmovnu
aaa
repz
in
faddl
int3
xchg
leave
out
fimuls
cmp
aaa
out
cmc
int3
fmul
aam
jecxz
fcmove
xbegin
loopne
loope
in
mov
rcl
lock
inc
dec
jecxz
test
rol
shl
lret
jecxz
shl
repnz
shll
in
sti
iret
test
int
rol
loopne
and
fucomi
call
fadd
repnz
out
fdiv
test
shr
test
mov
test
call
jne
cmp
jmp
rcl
aad
rcrl
sbb
mov
out
jmp
fcmovu
lret
out
cmp
loope
and
clc
mov
sarl
lret
jmp
lret
stc
fdiv
cmp
add
aam
addl
hlt
into
aam
loope
xor
aad
icebp
cmp
incb
mov
cli
int3
in
int
lret
cli
rcr
xlat
aas
in
aad
filds
hlt
leave
repz
loope
jmp
ret
loope
mov
hlt
call
aam
jmp
in
in
cmc
clc
ds
xchg
into
out
cmc
out
loope
cli
rcl
out
hlt
jmp
loopne
out
int
fst
fsubr
repz
addl
loopne
in
cli
in
cmp
out
loope
repz
stc
icebp
sar
xchg
aam
loope
xchg
loopne
call
out
lret
ds
loop
shl
sti
or
ljmp
cmc
xchg
xor
int
fsub
lock
hlt
repz
hlt
cmp
lret
call
out
aaa
shr
clc
cmp
lock
cmp
rcr
loop
jecxz
int
ljmp
int
sti
cmp
into
clc
cmp
cmp
jmp
fdivp
hlt
rol
in
or
jmp
repnz
testb
dec
adc
int3
incl
leave
mov
leave
int
repnz
test
jmp
xor
leave
test
rcr
aad
hlt
ljmp
ljmp
xor
int
in
loop
cmp
loopne
jecxz
repz
out
clc
int
fistl
cmp
out
jmp
sar
clc
jecxz
rolb
ret
cli
clc
fiadds
into
repz
ss
ss
cli
fdivr
hlt
repnz
lret
cmp
in
ret
aad
cmc
mov
or
loop
sub
in
xor
aam
loopne
addl
mov
out
imul
int
ss
cmc
fdivp
ljmp
fdivrp
loopne
stc
xlat
clc
sti
std
adc
cmc
ss
int3
fmul
loope
int
out
roll
mov
int
bnd
in
ss
repz
sbb
rolb
cmc
hlt
test
filds
out
not
jecxz
fdivl
int
out
cmp
hlt
cmp
cmp
sti
orb
out
mov
clc
aad
sar
fcmovnu
int
loop
in
repz
ret
and
xchg
cld
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
push
mov
mov
mov
not
jmp
leave
xlat
rcr
mov
cwtl
push
adc
inc
jns
cmpsl
jle
sbb
jle
lock
xlat
std
ss
aas
fdivrl
adc
lds
int3
mov
cmp
ret
in
fyl2x
cmp
int
cmp
shr
fsubp
cld
shl
cli
xchg
cmp
int
lock
hlt
cli
xor
repnz
aaa
out
xchg
fcmovne
xchg
cld
shl
call
in
cmp
xor
fcmovne
xlat
cmp
ds
out
rol
enter
out
test
orb
call
test
test
stc
mov
out
mov
call
aad
hlt
jmp
into
cmp
fadds
cld
jecxz
mov
test
xchg
out
in
into
sarb
ss
imull
cmp
hlt
iret
stc
dec
into
loope
les
ljmp
in
cmc
aaa
repnz
shrl
int
idivb
in
repnz
stc
loopne
clc
jmp
fsubp
into
ror
icebp
xrelease
out
xlat
in
jmp
aas
loopne
sub
in
in
cld
call
jmp
ljmp
hlt
iret
iret
ds
cmp
cmc
loop
shr
enter
loope
or
out
loopne
shl
call
rcl
xor
fdivr
adc
sarb
cmp
lret
lea
xor
cmp
xor
shl
add
shl
in
mov
rcl
xor
xlat
jecxz
aaa
xor
adc
rcl
call
fstl
jmp
xor
xlat
xlat
icebp
dec
clc
cmp
hlt
idivb
in
ljmp
hlt
aam
ss
repnz
cmp
cmp
aas
jmp
lds
call
in
in
loop
out
call
cmp
fnstsw
aas
iret
vpsllq
xlat
mov
orb
lock
cli
cli
ss
shr
cmp
int
sti
repz
xchg
out
int3
xlat
into
sub
dec
cld
movl
movl
cmp
movl
jmp
mov
fstp
enter
imul
jle
add
xchg
pop
xor
aaa
xlat
shl
cmpb
cld
hlt
and
idiv
loop
mov
stc
mov
cld
jmp
jmp
lret
in
xor
std
lock
cmc
loopne
ret
test
enter
mov
loop
loop
out
aam
in
xor
fnstenv
stc
ds
neg
cmp
shl
fcmovnb
mov
stc
out
fldl
jmp
out
cs
fsubr
fildl
testl
call
jmp
xor
repz
icebp
div
stc
sbb
fcmovbe
sti
xlat
lret
vshufps
in
ror
mov
das
in
cmp
cmp
stc
lock
loope
fsub
sar
stc
leave
mov
lret
in
iret
shl
hlt
das
xor
out
cmp
in
int
fadd
jecxz
cmc
xlat
xlat
cli
movb
out
out
div
repz
fdivp
in
mov
fsub
in
clc
sub
int
mov
loop
rol
in
cmp
fnstcw
repnz
divb
ret
hlt
fldl
int3
fst
jmp
loope
icebp
enter
enter
fcmovnu
xchg
hlt
and
std
cld
incb
xor
out
in
fdivr
in
jmp
in
fucomi
incl
les
std
out
in
out
ret
sub
fistpll
lock
fcmovu
vpsubsb
cld
iret
jmp
shl
in
repz
iret
cmp
clc
into
cmp
out
jmp
jmp
fildl
sub
call
iret
hlt
into
cmp
loopne
loope
in
leave
aad
out
ljmp
xchg
xor
xor
out
lock
fld1
imul
mov
in
out
repz
int3
call
clc
sti
sbb
sti
loope
fxch
iret
and
dec
call
cmp
enter
loopne
jecxz
std
cld
icebp
sub
xchg
jne
andl
jmp
lret
aas
fst
fcmove
fidivrs
mov
jp
jle
sbb
jle
leave
hlt
fldl
repnz
out
jmp
cmp
fcomi
loope
in
ljmp
jmp
xor
cld
jmp
lret
cmp
loope
aam
cld
cmc
fadd
aam
fiaddl
incb
lret
aad
into
out
lock
enter
xchg
stc
in
xchg
jmp
out
aam
out
sub
xor
neg
imul
icebp
aad
rolb
mov
int
in
into
lret
lret
out
stc
ror
ss
int
into
lock
repnz
repz
xchg
nop
icebp
mov
in
int3
int
xlat
cmp
repnz
cmpb
iret
out
aam
call
into
sbb
hlt
test
xor
jmp
aas
sar
cli
ffreep
jmp
aad
testb
call
lock
out
into
fcmovbe
hlt
ret
adc
test
in
or
int
fisttps
iret
cmp
repz
in
ror
iret
xor
loop
mov
mov
clc
mov
shr
fucomip
shl
iret
aaa
leave
jecxz
rcr
lret
xor
loopne
add
mul
lret
test
out
cmp
out
hlt
ds
loope,pt
xor
shr
les
xchg
int
rol
xor
enter
fsubrp
repnz
test
clc
std
orb
test
xchg
xchg
out
xor
call
int3
lret
cmp
aas
repnz
std
cmp
loop
sti
mov
enter
incb
leave
not
fmulp
ret
fnstsw
hlt
icebp
test
cmc
cld
in
sub
mov
jmp
cmc
in
shr
repz
into
neg
aaa
fxch
cmp
out
rcr
lret
enter
mov
in
jmp
aam
fiadds
add
sti
std
in
enter
fsubr
rcl
in
sub
out
aad
fmulp
cmp
ret
cmc
sti
cmp
rol
cmp
clc
int3
sti
cld
ljmp
insb
ja
add
add
add
add
or
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
jmp
aam
aas
ret
lret
fst
fnstenv
lods
pop
inc
das
out
lret
jle
sbb
jle
sti
iret
iret
out
in
test
out
enter
fdivrl
xor
fiaddl
rcl
cli
stc
fucomp
cli
int
repz
aam
les
rolb
cld
out
lret
loopne
xchg
fiadds
hlt
into
xor
jmp
repnz
fdivrl
clc
cli
loope
out
jmp
stc
int
out
not
cmc
ret
in
aaa
shl
rcl
in
int
ss
sar
rolb
out
stc
lock
xor
cld
xor
in
call
xor
loop
stc
in
div
ljmp
int3
fdiv
xor
sti
fnstcw
cmp
sar
in
in
ffreep
fimull
lock
in
mov
into
out
stc
fnstcw
out
lret
aaa
lret
cmpb
fucom
out
loopne
fucom
icebp
repnz
nop
out
int
sar
ljmp
fsub
rcl
fsubr
enter
lds
xchg
shrl
loopne
cmc
lret
in
out
fsubr
jecxz
cmp
lock
imul
mov
ljmp
shl
into
xor
fcmovne
out
into
cmc
incb
repz
xchg
clc
iret
int3
repz
mov
in
in
cmc
not
cmc
enter
int
fildl
cli
out
jmp
into
iret
ljmp
xor
sar
repz
sar
ds
clc
call
std
cli
in
filds
jecxz
out
jmp
out
aam
repnz
jmp
mov
call
repz
aam
in
aaa
rcl
sti
aaa
cmp
cmp
loope
sti
repnz
aad
sti
enter
in
cmc
and
out
int3
cmp
int
out
cmc
cli
std
jmp
mov
icebp
jecxz
cmp
sti
clc
shl
rcl
fildl
stc
clc
xlat
lret
int
rorl
shl
cmc
aad
clc
cmp
xchg
rcr
xchg
out
mov
xor
mov
add
mov
movzwl
jmp
rcl
xlat
fcom
push
outsl
bound
mov
jle
add
in
jmp
not
xor
fld
div
leave
cmp
in
loopne
loope
testb
mov
xor
icebp
xlat
stc
clc
aaa
clc
cmp
les
test
jecxz
mov
cld
xchg
shl
jmp
lret
cmp
loope
loope
mov
cld
cli
loope
shr
xor
aam
xlat
hlt
stc
icebp
hlt
in
test
shl
ret
xlat
testb
iret
in
mov
loop
cmp
in
lret
rolb
ds
shl
lret
std
lret
leave
lret
subl
out
sti
icebp
shl
repz
fcmovnb
fdivr
shl
jecxz
mov
jmp
ror
repz
xor
int
in
aad
fcomi
stc
mov
mov
test
xchg
mov
lock
fmul
ret
cli
ss
fxch
sti
sar
out
xlat
xchg
xlat
test
loopne
xchg
icebp
and
int3
int3
fnstcw
int3
icebp
jmp
fst
cmp
fcomip
jecxz
stc
mov
lock
xchg
sub
cmp
fdiv
enter
cmp
stc
rcl
hlt
test
int
xchg
xor
clc
iret
jmp
aam
idiv
sarl
std
aam
std
xlat
decl
loop
repnz
in
loop
ljmp
shr
ror
movl
fsin
rcl
mov
cmc
ror
out
sbb
cli
cmp
cld
add
xchg
xchg
loope
loopne
mov
in
lret
cmp
cmp
cmp
icebp
xor
aas
fsubr
cmc
hlt
cld
test
rol
nop
in
aad
hlt
cli
lret
int
sarb
cmp
fstpt
out
shl
mov
in
int
fadds
call
aad
sarb
int3
cmp
sti
aad
sar
mov
out
out
in
orl
shr
sarl
enter
jmp
ret
flds
not
and
jmp
aam
enter
aad
cmp
and
mov
jle
add
dec
stc
enter
roll
test
cmp
cmp
aam
hlt
leave
ljmp
loope
xchg
loope
icebp
fcom
out
iret
aad
cmp
fdivrs
cld
cmp
mov
out
test
xor
clc
out
shr
rcr
ffree
test
cmc
cli
loopne
in
enter
dec
mov
divb
lret
call
cmp
aas
cmp
loope
hlt
cmc
into
out
test
cld
ljmp
aam
int
hlt
add
fnstsw
ret
fcomp
aad
rol
enter
shr
xchg
loopne
aad
fsubr
cmp
aaa
fdivr
aad
clc
sarb
leave
xchg
mov
ljmp
aad
repz
cli
flds
in
cld
int
into
sti
jecxz
in
in
sarb
ss
xor
aaa
cmp
loop
in
std
fdivrl
in
addl
rcl
div
fadd
into
in
cmc
rcr
cld
sarl
cmp
xlat
std
sbb
test
ljmp
int
lret
out
int3
stc
fmul
fcmovu
rcl
repz
fadd
fidivrl
stc
xchg
enter
xchg
jmp
or
aaa
xor
lret
aad
icebp
ss
cmp
in
ret
enter
mov
xchg
fmulp
xchg
out
call
int3
ds
sti
lock
xchg
fisttpl
xchg
test
lock
jmp
push
lock
ffree
repz
loop
out
mov
ljmp
ror
jmp
out
cmp
sar
in
fdivp
and
leave
les
jecxz
jmp
int
std
jmp
fdiv
aam
in
test
test
jecxz
mov
fcmovbe
in
orl
out
sarl
ljmp
test
repnz
int
int
sub
leave
icebp
cmp
call
int3
shl
movl
pop
add
add
adc
mov
jmp
rcl
enter
fcmovne
fdivl
mov
jle
add
fsubp
call
rclb
rcr
fnstsw
cmp
in
cmp
neg
cmp
loop
std
rcr
lds
out
mov
repz
fidivrs
int
out
aas
jmp
loope
aas
out
jecxz
neg
popl
mov
ljmp
loopne
hlt
out
lret
ret
aas
mov
aad
mov
mov
loopne
in
repnz
shll
cld
aaa
int3
xchg
out
xchg
loop
sbb
decb
div
cmc
out
lret
cmp
shl
cmp
loop
ret
fmull
lock
xchg
int
repz
cli
clc
fsin
cmp
stc
cmc
loope
mov
cli
in
out
sti
adc
repnz
in
icebp
fnstsw
adc
sti
loopne
aam
aam
hlt
fcmovne
idiv
mov
ror
in
not
ss
in
cmp
lret
out
loopne
faddl
nop
repz
idivl
aad
aad
fmuls
std
jecxz
mov
shl
sub
cmp
call
repnz
int3
ret
sarl
fildl
fdivr
mov
lret
out
ss
lret
ds
stc
cli
icebp
cmc
shl
loopne
filds
iret
xchg
in
shr
repz
aaa
cmc
in
fcmovbe
roll
loope
out
fistl
in
in
xor
jmp
cmc
sbb
test
std
ret
aam
ljmp
fucomip
in
lret
out
out
cmp
out
rcr
out
fnsetpm(287
fdivrs
in
test
enter
lock
aad
rol
fadd
leave
fcomi
enter
cld
ret
fsubr
fcmovnu
lea
fucomi
nop
jmp
in
in
clc
neg
fsubrp
cmc
iret
sarl
in
fadd
leave
fimull
fmuls
lock
loopne
aam
aad
fdivrl
int
shr
loopne
ret
pushl
call
test
je
leave
ret
push
mov
sub
movl
movl
incl
mov
add
jmp
leave
ror
xlat
fstp
fst
pop
push
inc
dec
mov
jle
ret
jle
mov
lret
loopne
icebp
mov
ret
iret
cmp
loop
in
fadd
jmp
in
hlt
loopne
stc
dec
cli
rcl
nop
mov
stc
iret
fdivr
int3
stc
repnz
aad
shl
rol
faddl
call
in
shlb
cmp
xor
in
into
lock
loopne
leave
cld
fldpi
stc
call
shl
lret
leave
xor
sarl
ror
repz
mul
lret
clc
out
test
loopne
xor
out
shr
int3
cmp
iret
aam
cmc
repz
fsubr
fistl
repz
lret
clc
cs
repz
xlat
addb
repnz
orl
icebp
neg
repz
xlat
into
fldln2
in
sar
in
stc
out
ljmp
xchg
or
divl
call
int3
std
sarl
lock
jmp
jecxz
repz
stc
stc
out
hlt
cmp
idivb
cld
shl
addl
loope
jecxz
std
cmc
add
out
cli
in
enter
aam
int3
repz
rol
hlt
xchg
aad
jecxz
rcr
fucomip
in
enter
jecxz
out
xor
std
loop
xchg
sti
stc
mov
roll
shr
call
repnz
rcr
loope
push
testl
xchg
rcl
loop
in
cmp
shl
fdivr
lock
fidivrl
clc
loopne
div
hlt
mov
roll
loop
loope
test
ret
cmp
cld
fpatan
fucomp
cmp
shr
repnz
lock
leave
loop
loop
int3
jecxz
lret
shlb
lret
fbstp
into
cli
iret
icebp
shl
in
leave
mov
loope
dec
mov
aaa
shlb
cs
push
hlt
fld
ret
out
in
lret
enter
stc
loop
jmp
aaa
ss
out
icebp
idiv
sti
rcl
in
loopne
mov
test
loopne
xchg
xchg
lret
test
jmp
ss
loope
cmp
enter
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
adc
lea
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
push
lea
and
jmp
mov
into
lret
rcr
xlat
nop
aaa
dec
out
pusha
addr16
push
ret
jle
lret
iret
mov
icebp
idiv
vpsllw
xlat
fcmovbe
lock
jecxz
cmp
mov
mov
dec
idivb
rcl
aam
cli
shl
int
loopne
test
ret
neg
out
cli
jmp
test
lret
out
fsubrl
cmp
leave
cmp
in
cld
cli
int
cli
fucomp
hlt
in
hlt
xor
lret
hlt
sarl
cmp
repnz
sar
jecxz
fcmovnb
aam
lds
jmp
mov
aam
clc
out
fmulp
loop
ds
test
xchg
lret
or
xchg
xor
xor
out
xor
rolb
sar
fadd
in
out
enter
out
into
sbb
in
clc
cmp
aam
enter
loop
vcmpsd
xchg
int3
enter
rcl
out
xabort
xor
xor
repz
in
pause
iret
into
ljmp
sarb
rol
sti
fucomip
icebp
fsub
aam
loop
jmp
mov
out
mov
xchg
xchg
cmc
out
lret
das
in
divb
testl
inc
mov
repz
mov
out
cld
out
rolb
fcomip
in
testl
test
std
xchg
fsub
cld
cmp
cmc
xlat
aas
ret
cmp
xor
loop
dec
mov
out
out
mul
lock
int3
aaa
call
sar
loop
aaa
test
loop
filds
loope
test
rol
out
fxch
ror
repnz
ror
xorl
fsubp
cmc
in
lret
movb
loope
lret
in
dec
xlat
in
aam
cmc
fst
ror
enter
push
out
xchg
xorl
in
icebp
in
cmc
rcl
cmp
ljmp
mov
cmp
fstl
shl
sar
lret
int3
ss
xor
repnz
repz
jmp
mov
test
out
call
icebp
cmp
jmp
addl
cld
mov
fisttpll
inc
in
adc
push
mov
mov
mov
sbb
jmp
rol
rcl
aad
addr16
sbb
jle
enter
jecxz
lock
ljmp
adc
jmp
fst
cmp
call
into
loop
shl
out
out
iret
out
sti
fnstsw
clc
idivb
test
sar
jmp
int3
test
jecxz
ficoms
aaa
out
cmp
fnstenv
enter
rcr
clc
shl
leave
mov
cmp
out
shl
ror
out
fxch
rolb
xor
aad
fnsetpm(287
in
fcmovnb
jmp
shl
lock
ljmp
enter
test
mov
clc
loopne
mov
out
std
ljmp
out
cmp
testl
clc
in
clc
out
mov
in
int3
xor
sarl
icebp
in
div
fcmovu
cld
fsubp
test
clc
cmp
mov
in
out
xchg
in
loop
fcomi
shlb
cmp
fsub
rcr
stc
ds
hlt
fadds
sti
or
test
xor
neg
enter
in
fcmovne
cmc
in
fiaddl
in
jmp
call
ret
ss
ljmp
loope
hlt
repnz
loope
sbb
nop
mov
test
icebp
cmp
out
in
cmp
cld
roll
in
iret
out
loope
xchg
xchg
xchg
xor
clc
sar
rcr
sar
sub
fdivr
cmc
sar
xchg
enter
flds
filds
lret
sti
xor
enter
test
clc
idivl
in
loopne
out
roll
out
in
call
cmp
shl
loopne
fcos
sti
loopne
int
lret
stc
out
shl
lea
jmp
clc
sub
stc
enter
ret
ret
std
loope
in
lret
cmc
xor
loope
sti
cld
repz
ljmp
in
xlat
cli
hlt
std
loope
int
jmp
shrl
jmp
jmp
jmp
out
vpsadbw
lret
fdivr
faddp
sti
xchg
loopne
out
xor
aad
in
cmp
lret
out
sar
sar
fiadds
out
test
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jb
mov
or
mov
jmp
ror
into
fcmovne
out
je
movsb
rcrb
fdivrl
jle
xchg
sarl
rcr
cmc
fdivrs
into
stc
in
out
shr
addb
rclb
out
ss
aas
aad
repz
cmp
sti
ds
out
out
repnz
or
ret
xor
cld
ds
fcmovnbe
rcl
cmp
cmc
sti
movl
das
sub
stc
xor
into
adc
test
in
orl
loop
das
lret
loope
in
aad
loopne
roll
ffreep
jmp
sti
test
sbb
rcl
into
loopne
in
lret
xor
adc
clc
ror
fdivr
fdivr
cmp
lret
call
xchg
shl
shl
in
call
out
into
cmp
ret
mov
xchg
xchg
lock
aaa
lret
xor
rol
f2xm1
cmp
out
sar
stc
mov
out
jmp
ret
sub
xchg
ljmp
icebp
cmp
fsubp
cld
vpavgb
out
loop
lea
fcmovbe
stc
cmp
fcmovnu
in
fiadds
fisttps
xchg
out
mov
out
int3
xchg
imull
xor
out
sarl
lret
loopne
out
filds
rolb
mov
xchg
cld
fmul
rol
loopne
aam
in
out
cmp
out
test
iret
shr
test
loopne
call
lret
loopne
mov
clc
imull
out
fsubrp
sub
in
addl
cld
loopne
test
jmp
mul
out
int3
sarl
cmp
hlt
cld
out
jmp
cli
out
in
mov
mov
mov
hlt
enter
test
shl
cmp
cld
xlat
in
call
lret
addl
fidivrs
fsub
clc
rcr
fcomp
fcomp
stc
xlat
test
fimuls
mov
loope
jecxz
div
fpatan
sarb
int3
sbb
loope
repz
in
fistl
xchg
in
in
fcomp
lret
std
cli
icebp
icebp
jecxz
fcmovnb
icebp
xlat
out
cli
in
mov
repz
cmpl
xchg
jb
add
add
inc
add
flds
add
add
rolb
add
inc
add
movb
div
mov
movl
cmp
jmp
lret
leave
aas
int3
leave
stos
jb
push
push
jle
mov
add
cmp
stc
in
fidivrs
in
hlt
ds
shl
loope
mov
stc
lret
fxch
rcr
adcl
shl
xor
fcomp
out
fcompp
xchg
ret
out
test
fisttpl
repnz
lret
iret
xor
ss
fdiv
in
jmp
loopne
hlt
repz
leave
sti
jmp
cld
in
xchg
fimull
fxch
repz
cmc
in
fcmovbe
iret
hlt
out
cmp
xchg
loop
xchg
out
ljmp
xor
cld
lret
fcomp
hlt
fidivrl
sub
and
test
mov
fcmove
out
cli
std
xor
lret
clc
jecxz
aas
aas
in
cld
shr
cmc
sti
stc
jmp
in
sub
icebp
out
jmp
jmp
loop
test
mov
clc
in
clc
and
into
nop
xchg
lock
xor
cli
aam
cmp
fcmovnb
ret
cmp
fcom
loop
in
lret
rorl
xor
jmp
leave
cmp
out
stc
hlt
std
xlat
fadds
adc
stc
fucomi
mov
in
mov
ror
int
std
fistpll
ds
repz
repz
call
loop
orb
sub
in
hlt
aam
jmp
std
std
lock
aas
aam
lret
testl
repz
ret
aaa
hlt
stc
ds
cli
repz
repnz
neg
lea
rcr
out
ror
ror
stc
cmp
in
aaa
fnstcw
leave
aad
or
iret
xchg
in
lret
xor
xlat
out
iret
into
sarl
cmp
cli
sar
cmc
xlat
in
out
mov
sub
cmp
enter
icebp
aaa
out
cmp
ftst
rol
cld
lds
clc
mov
out
enter
f2xm1
fmul
in
repz
rcr
test
aas
mov
in
out
jmp
iret
orb
out
icebp
in
aaa
lret
sarb
cmp
xchg
fincstp
lret
in
ror
cmc
out
int
out
lret
sar
shl
rcr
loope
fcmovne
fmuls
xchg
jmp
out
je
movl
lea
jmp
iret
iret
ror
ror
xlat
fstps
pop
xchg
imul
ret
jle
cld
iret
fdiv
xor
cmp
out
rol
repz
int
mov
in
mov
aad
sub
clc
cmp
sti
ds
jecxz
into
loop
jmp
repz
lret
in
sti
push
test
das
in
ret
enter
sar
loope
jecxz
fsub
stc
dec
xchg
call
xor
cld
repnz
shl
add
sti
xlat
ret
in
jecxz
fld
into
call
ret
ror
in
sar
into
std
cmc
loopne
ret
fcomp
call
rolb
icebp
lret
lret
lret
cli
call
sarl
test
loopne
stc
rol
ds
test
shrl
out
out
stc
ds
jecxz
fucomip
leave
xchg
in
mov
icebp
out
stc
cmp
call
rolb
in
fmull
fisttps
cmp
in
jmp
ror
cmp
rol
fucom
in
out
mov
lret
out
iret
xor
in
fmul
shlb
repz
not
cmp
lret
call
repz
in
hlt
out
int
in
out
fmul
loop
cmp
icebp
incb
into
xchg
test
fists
in
cld
out
aaa
in
loope
sti
aad
loop
hlt
cmp
leave
mov
jmp
xchg
adcl
xor
cmp
fcom
lret
stc
xor
in
out
cld
out
loopne
mov
in
mov
in
out
iret
clc
aaa
cmp
hlt
cmp
sti
repz
enter
xor
repnz
ljmp
xlat
and
out
clc
add
out
enter
mov
icebp
and
out
cmp
ss
jmp
xchg
ret
sbb
shl
hlt
out
jmp
xor
lret
idiv
aaa
sar
cmc
icebp
cmp
mov
cli
std
out
iret
mov
mov
fcmovb
in
out
into
xlat
clc
stc
out
in
in
sarb
in
in
jmp
jmp
int3
in
xor
cmc
cmp
lock
jmp
lret
ret
int
lret
in
aad
nop
jns
sub
ret
jle
cmp
cmp
cld
stc
std
fsub
call
xchg
in
xchg
repz
into
ret
leave
cmp
rol
incl
in
iret
iret
xchg
xchg
xor
xor
fnstcw
iret
int3
rcl
loop
addl
push
aaa
sub
fmul
in
lret
in
cli
in
aas
icebp
in
in
icebp
ret
fabs
mov
mov
in
out
in
xchg
shl
xor
hlt
cmp
rcl
in
cmp
std
xchg
out
test
adcl
jmp
fsub
sarb
sti
cmp
out
repnz
std
fiaddl
rol
in
std
enter
sub
shl
faddp
sti
in
fiadds
xchg
mov
lret
leave
int
cmp
lret
sarl
in
push
ret
ret
std
rol
aas
stc
stc
fmuls
mov
out
fst
leave
in
int
aad
mov
orb
icebp
out
roll
mov
icebp
repz
fadds
jmp
out
sti
out
xchg
xor
call
cli
call
call
fildl
enter
out
cli
fcmove
lret
out
decl
ret
cmp
bnd
xlat
ret
and
xchg
cmc
xlat
stc
leave
into
std
out
aad
hlt
jmp
out
out
rcr
test
cmc
add
fcmovu
xchg
xchg
cmc
stc
hlt
cld
sarl
cli
iret
icebp
loope
out
cli
cmp
in
repz
loop
cmp
shr
stc
shl
cmp
in
hlt
hlt
aad
incl
repz
jmp
xor
cmp
clc
ds
sub
test
fmuls
cld
mov
xchg
jecxz
jecxz
test
lock
std
icebp
iret
out
out
cmc
xchg
hlt
xchg
shl
into
clc
cmp
cmp
lock
jecxz
stc
rolb
in
fmul
xchg
mov
out
nop
repnz
lock
cmp
push
imul
mov
mov
cmp
je
jmp
rcl
mov
aad
sti
adc
in
inc
jle
ret
jle
repnz
cmp
cld
and
mov
hlt
in
fidivrl
iret
int3
aad
fdivrp
out
int3
aas
jecxz
repnz
ret
stc
ret
int
ret
rcr
test
icebp
cmc
repz
jmp
loop
testl
ret
cmp
sti
loope
and
into
xlat
cmp
cmc
iret
sar
std
int3
jmp
neg
testl
mov
int3
iret
iret
into
out
xlat
shl
cmp
xorb
fdivr
cli
cmp
aam
jmp
and
int3
repnz
out
in
cmp
into
call
ret
sti
xchg
out
xchg
rclb
out
xor
sti
repnz
div
cld
test
fcom
xlat
jmp
inc
in
out
loope
fstl
sti
cmp
cmc
cmp
xchg
jecxz
test
test
stc
int
xchg
sar
jmp
xor
out
into
cmp
loopne
or
into
repz
cli
repnz
in
xlat
orl
enter
cmp
repz
shl
ret
sar
jmp
mov
out
into
lock
in
out
fxch
aad
shll
rolb
in
int
cli
out
fiadds
out
out
loope
jmp
xor
aam
push
cmp
iret
addl
repz
xlat
out
in
loope
orl
ljmp
shr
cmp
div
mov
sti
out
in
fucomip
ljmp
rcl
ds
call
loopne
clc
jecxz
in
fcoml
ret
cld
aam
fcomi
repz
sti
aam
ret
loopne
stc
mov
aam
call
lret
rcl
repnz
stc
repz
shr
xchg
fmulp
loop
into
mov
in
repz
ror
xor
cmp
int3
lret
fdivrs
jecxz
orl
cli
decb
cli
fxch
cmp
test
loopne
icebp
ffree
test
fdivr
neg
in
in
std
lret
xchg
clc
out
in
out
idivb
sti
sar
lret
loopne
lds
testl
mov
xor
add
jmp
rol
lret
fstp
aad
dec
jns
mov
xchg
mov
ret
jle
enter
iret
nop
filds
shr
icebp
ljmp
ret
loope
out
cli
fst
loop
mov
out
ss
lock
sub
stc
in
hlt
incb
loop
mov
lret
int
repz
cmp
into
int
out
fsubr
in
out
ret
sti
fstp
fadds
int3
mov
das
loop
out
in
cmp
out
pushl
les
div
mov
mov
test
icebp
iret
into
cmp
xor
int
fmulp
fdivl
loope
fcomp
leave
lds
in
xchg
sub
int3
stc
std
fmul
ljmp
ret
sti
xchg
ret
cld
clc
out
popl
aaa
fdiv
int3
int
shr
into
lret
cld
fucom
movb
dec
fildl
xor
in
call
cmp
cmc
iret
cld
leave
jmp
sbb
xchg
xchg
in
loop
ret
repz
hlt
into
rolb
rol
xchg
fsub
sub
mov
xchg
in
loopne
hlt
ss
leave
in
xor
lock
cmp
fstp
fdivr
out
mov
mov
xor
aam
aas
aam
cmp
fcmovne
sub
std
mov
xchg
loop
aad
ljmp
cld
fmulp
out
sarl
loope
icebp
mul
faddl
ror
iret
mov
aaa
das
cli
jmp
repnz
xlat
fcomp
in
hlt
sar
incl
fsubp
loope
iret
int
int3
aaa
into
xlat
cmp
iret
out
rcl
rol
clc
out
call
lret
icebp
icebp
test
lock
idiv
in
in
xor
in
cmp
mov
aam
jmp
int3
out
fsub
and
out
int
div
fcmovu
cli
into
fdivr
icebp
repz
cmp
sti
rcr
xor
jmp
loope
cmc
orl
aaa
das
repz
imul
hlt
jecxz
cmp
rorb
out
sti
loope
int
xor
in
in
sub
in
roll
cld
fdivrs
jmp
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
jmp
fmul
into
ror
fstp
int
dec
je
movl
jle
ljmp
loop
xchg
lret
aam
jmp
sti
int3
out
fcmovnbe
lock
out
addl
fucomip
fcmovbe
rcl
xchg
jmp
ss
call
cmp
into
cmp
addl
in
iret
mov
in
iret
lock
xor
fdivrs
cmc
rolb
in
sti
enter
rcl
repz
ss
shl
sti
aam
fmulp
sti
test
ret
std
xchg
in
jmp
test
out
rol
ljmp
out
lret
cmp
shr
test
jmp
filds
xchg
xchg
xor
xor
into
idivl
add
mov
sub
jmp
iret
fdivs
xor
cmp
repz
aad
jmp
ljmp
lock
iret
repz
cmp
cmp
jmp
cmpl
xchg
aam
enter
orl
cmc
lret
aad
clc
fcmove
cld
xlat
in
aas
call
out
cmp
iret
loope
lret
sub
in
imul
enter
jecxz
sbb
in
testb
xchg
aas
sar
lret
fdivr
iret
std
cmp
fucom
xor
loope
mov
jmp
xchg
int
test
out
fstp
cmp
test
testb
call
xchg
out
icebp
fcmovb
jmp
repnz
std
call
out
fcomip
repz
sbb
orb
out
lock
cmp
sar
stc
hlt
lock
cmp
cli
fisttpll
fucomip
sub
int
idivl
repnz
push
aam
fiaddl
test
sub
fiadds
sub
shr
divl
cmp
fucomi
out
fdecstp
rcl
mov
leave
sub
shl
into
lret
enter
rcl
imul
cmp
ret
fadd
cmpb
lds
test
in
and
mov
cmp
idiv
ss
aam
rol
loop
add
xlat
xchg
jmp
rol
rcr
and
fildl
dec
jle
ret
jle
sbb
sub
fdivr
cmp
cli
call
repz
aas
loopne
lret
fcompp
clc
sub
iret
repz
xor
iret
jmp
ds
rcr
shl
rcr
in
fcmovne
loopne
xchg
int
nop
mov
out
in
call
into
leave
int3
loope
repnz
fadds
mov
repz
call
cmp
cld
cmp
leave
std
or
repnz
rcl
fdiv
call
into
int3
cmp
sbb
jmp
out
fstp
xchg
xchg
xchg
xchg
stc
fidivl
sti
sbb
fmulp
push
loopne
mov
mov
icebp
ljmp
lret
in
int
iret
stc
call
loopne
stc
lret
test
test
rol
in
cmp
fmul
shl
sti
cmp
clc
ret
iret
int
fucomi
std
filds
lret
ror
fcmovbe
cli
lock
not
addl
in
in
out
pushl
ret
aaa
lret
fcmovnbe
out
in
xor
cmp
mov
cmc
xchg
fxch
leave
sbb
jmp
call
fcomi
lret
aad
iret
rol
sti
out
xlat
loope
in
leave
in
rorb
xor
repz
iret
shl
fidivrl
std
aad
loope
loope
fmull
cmp
repz
xor
ror
xlat
fptan
test
lock
xlat
cmp
ljmp
decl
sub
xlat
sti
int3
xor
rol
fld
test
std
fdivp
xchg
mov
into
ljmp
xor
xor
out
cmc
in
cmp
test
int
sub
xchg
xchg
lret
jmp
leave
cli
hlt
xbegin
loope
cli
rcr
xchg
mov
out
jmp
xchg
adc
lock
clc
sarb
aam
aam
in
sarl
loopne
lret
in
repnz
enter
clc
xlat
fpatan
cmp
out
fucomi
shl
call
mov
loopne
test
jmp
fadd
lret
fstp
aad
mov
cmp
shl
dec
jle
ret
jle
loopne
loope
xor
cld
hlt
ss
lret
stc
cli
loop
test
shl
mov
adcl
clc
idivb
into
repz
sti
shll
test
loope
adc
xlat
jecxz
leave
repnz
mov
in
repnz
out
std
cmp
sarb
ror
push
loopne
imul
in
cld
in
or
into
jecxz
out
repz
loope
aam
idiv
mov
xchg
lret
int3
or
call
divl
fdivp
ret
in
into
out
test
leave
fucom
mov
jmp
out
fsubr
ror
fmul
loopne
fldz
in
out
lock
jmp
lock
jmp
in
xor
aaa
cld
aad
int3
cmp
cld
fdivp
cmpl
mov
test
in
rolb
in
sarb
ljmp
std
cmc
add
les
out
stc
lea
cs
sti
aad
cmp
std
sti
xlat
repnz
jmp
sub
hlt
out
ror
aam
ret
aad
imul
icebp
cmp
fdivr
fcom
ret
loopne
sti
addl
ror
call
into
call
shl
rol
mov
jmp
rorb
lret
nop
xabort
shlb
out
ljmp
fnstcw
xchg
jmp
in
fcmovu
test
jmp
iret
xor
std
repnz
loope
jecxz
mul
in
xchg
jmp
test
xchg
repnz
loope
xor
ljmp
std
repnz
xor
loopne
fucomi
jmp
mov
fisubrs
clc
cmc
stc
xor
enter
sub
test
in
addb
aad
ljmp
repnz
cmc
roll
cli
loope
lret
fiadds
rcl
bnd
ds
and
cmp
repnz
ffreep
stc
mov
mov
ljmp
cmp
shr
fcomp
fisttpl
in
mov
std
xchg
xor
mov
add
cmp
je
mov
xor
jmp
ror
ror
mov
cmp
adc
jle
ret
jle
aad
fcomp
cmp
aas
cmp
lds
fdivr
mov
xchg
mov
xchg
repnz
out
sti
hlt
out
call
test
rcl
fchs
out
enter
ljmp
rcl
xor
int3
shl
xor
cli
cld
ljmp
fcmovbe
jecxz
call
repz
fst
xchg
xor
idiv
out
icebp
fcmove
aam
icebp
into
fdivr
jecxz
incb
mov
in
test
loopne
ret
aaa
test
out
aas
cli
ffree
shl
xlat
int3
xlat
in
loop
lea
cmp
leave
div
repnz
cmp
cmp
in
cmp
rolb
jmp
cli
cmp
sarl
neg
adc
cmp
repz
cld
loopne
leave
lock
out
icebp
cmp
clc
fidivl
into
ret
repz
xchg
in
out
int3
int3
mov
repnz
out
xor
xor
jmp
jmp
cmp
bnd
leave
lret
icebp
cmc
call
iret
in
icebp
lds
shl
xor
fiadds
in
xchg
fmull
notb
divl
iret
cli
ss
cmp
aam
loop
ret
out
out
in
mov
shr
in
cmp
jmp
not
int3
into
aas
cmp
aad
stc
loop
out
mov
xor
in
xor
ss
idiv
rolb
repz
loop
fmul
icebp
hlt
into
loope
xor
lret
rol
cli
cli
icebp
xchg
jecxz
leave
leave
in
loope
out
fimull
aam
sti
int3
ror
cmp
fucomi
cli
out
fcmovbe
loopne
cld
out
addb
mov
icebp
jmp
out
into
sti
aad
shl
enter
in
ljmp
call
ss
ljmp
aad
out
call
lret
xlat
inc
roll
sub
enter
cli
shl
icebp
incl
in
in
shl
ljmp
ss
jmp
xlat
into
ror
fxch
flds
jp
pop
inc
sub
lods
add
jle
ret
jle
cmp
in
sarb
cli
lock
loope
cmp
fiaddl
test
jecxz
out
cmp
cmp
incl
loop
jmp
fcmovb
mov
rorl
clc
hlt
aam
xor
ljmp
stc
xchg
loopne,pt
cmc
out
out
in
fsubp
xchg
xchg
or
imul
fnstenv
out
stc
add
xlat
ds
mov
xabort
loop
mov
das
fcmovnu
idivb
cmp
int3
sar
xchg
adc
leave
xlat
fucomi
repnz
vphaddwd
in
repz
fmulp
ds
cmp
rcr
jecxz
loopne
neg
out
jecxz
nop
int
out
loopne
out
in
cmp
fcomi
cld
aas
ret
test
adc
bnd
cli
out
out
fucomp
decb
jecxz
out
adc
int
clc
rcr
neg
jmp
jmp
xchg
rcl
out
in
shr
neg
fsqrt
shl
out
call
sti
xchg
xchg
and
into
loope
in
xor
xor
fcmove
out
cmp
flds
mov
jecxz
out
loopne
in
in
xchg
nop
fcom
fisubrl
lret
not
out
jmp
out
in
not
mov
in
lea
in
sbb
xor
cmc
fsubr
fadd
fincstp
in
orl
xchg
test
in
jmp
jecxz
icebp
cmp
enter
into
ret
aam
loope
cmp
in
lds
xchg
xor
ror
out
cmp
addb
addl
loope
out
rol
fxch
cmp
in
dec
int
xor
dec
rol
ret
aad
cld
in
call
lock
shll
in
aaa
fistpll
xorl
inc
rcr
test
into
shl
std
roll
fxch
iret
ds
sar
shl
aad
or
sti
or
sbb
enter
xor
iret
int
imul
fnstenv
repz
stc
xlat
int3
leave
call
sub
ljmp
xrelease
jmp
lret
leave
int3
aam
aad
fnstcw
ficompl
decl
out
popf
enter
ret
jle
rcl
xlat
fcomip
add
orb
orb
out
in
lret
cmc
out
hlt
rolb
in
mov
out
xor
loop
out
fxch
out
sti
leave
out
cld
sti
fld
loope
in
test
ljmp
shr
in
out
fcmove
out
ds
loope
clc
xchg
xchg
ret
loopne
sar
test
loopne
int3
cld
stc
dec
loopne
cmp
ret
xlat
out
jmp
xchg
std
out
ror
in
fdivs
xor
das
aam
iret
int
loope
rolb
xlat
sbb
lock
ljmp
loopne
fcmovb
loop
test
in
int3
or
lea
cli
hlt
idiv
jmp
repnz
loope
aam
ljmp
xchg
xor
xor
les
std
dec
in
fcomi
adc
sti
std
call
addb
xor
cs
fsub
int
not
lock
jecxz
fildl
vcmpsd
shrl
out
fcomp
sar
fcmovbe
ret
shl
fcmovbe
test
out
int3
xchg
repnz
ljmp
cld
in
ds
lret
fiadds
out
hlt
fsqrt
mov
xchg
jmp
xor
into
dec
cmp
shl
rcr
xlat
dec
mov
loopne
or
vucomiss
shl
lock
icebp
repnz
ds
aad
jmp
jecxz
fmulp
in
ljmp
icebp
into
int3
cld
out
shl
icebp
cmp
fisttps
mov
jmp
enter
int
ds
repz
in
neg
stc
cli
mov
std
or
rorb
shr
ret
repnz
cmp
std
loope
sar
lock
xchg
lock
in
das
in
rcl
shll
lock
ret
aad
fdivr
ret
ret
in
mov
cmp
mov
mov
jecxz
cmc
std
repz
aam
int3
mov
jmp
rol
int3
fmul
aad
mov
push
in
pop
jle
ret
jle
rol
loope
addb
xchg
test
hlt
cld
in
lret
loope
fstp
cmp
cmp
xchg
clc
in
fiaddl
out
icebp
test
cs
divl
repnz
sar
shl
loop
fsubrp
loope
leave
out
loopne
adcl
xor
lock
xlat
shr
rcl
fsubr
loope
testb
int
in
xlat
aaa
hlt
clc
jecxz
cld
fcmovne
fcomp
stc
cmp
cmp
fdivr
incl
xchg
iret
jecxz
call
cmp
cli
fcmovnu
aam
hlt
aas
out
mov
into
in
shr
xchg
lret
das
ror
aaa
repnz
lret
stc
lret
shr
cmc
enter
in
lret
in
out
cli
mov
aam
int
fnsave
stc
cmp
out
in
ret
sti
test
cld
ljmp
in
xchg
jmp
jecxz
xor
cmp
fsubrp
cmc
ret
out
xchg
in
in
repz
mov
aaa
cmp
ret
shr
int3
fmulp
fcmove
fildl
mov
jecxz
out
orb
div
iret
icebp
jmp
cmp
in
std
loopne
into
in
jmp
lock
shr
iret
aad
xor
rcr
jmp
jecxz
out
cld
cld
push
out
clc
enter
notb
leave
fstp
test
stc
cmp
test
stc
cmp
cmp
ret
fimull
lret
xchg
xlat
div
xlat
sti
cmp
cmp
cmp
aad
add
cmc
out
fsubr
mov
enter
repnz
repnz
xlat
jmp
out
fcomi
loopne
fst
loop
test
fcmovb
xchg
leave
out
repnz
incb
xlat
ljmp
adc
cmc
out
std
in
ljmp
iret
loopne
test
xor
ret
sar
xor
shl
ret
iret
fcmovb
xlat
mov
mov
aas
sbb
out
aad
xlat
xor
fidivrl
cmc
in
out
xor
test
cmp
mov
loope
mov
div
call
ds
fcmovu
hlt
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
jmp
aas
into
iret
ror
rol
shr
movsb
lock
ret
push
pop
jle
ret
jle
repnz
sbb
mov
xor
divb
hlt
sarl
fnstcw
neg
xlat
fld
icebp
test
sub
in
shr
call
enter
loopne
sti
in
aam
add
jmp
icebp
lock
cld
mov
lret
jmp
fdivrs
std
sarl
int3
adc
stc
cmc
std
aas
aas
bnd
in
ljmp
leave
cmp
cmp
cmp
ds
clc
flds
ljmp
aad
shrl
cmp
iret
ljmp
in
loopne
fstp
cmp
imul
addl
jmp
lret
int
loopne
aaa
rcl
rcr
sbb
out
flds
iret
ljmp
xlat
fsub
in
jmp
cli
aad
ret
mov
std
jmp
lock
sarl
out
lock
repz
stc
addl
in
loopne
into
mov
jmp
aam
aas
stc
out
icebp
cmp
cmc
repnz
loopne
rol
imul
mov
mov
cmc
cs
call
idivl
cmpb
ret
fcomip
xchg
out
aad
aam
sti
fucomi
cld
repz
icebp
in
jecxz
int
out
out
lret
ljmp
in
xor
cmp
sti
in
out
cmc
faddl
leave
mov
in
mov
xor
fdivp
jecxz
filds
test
mov
orl
int
out
iret
repz
cli
aas
adc
cmp
std
testl
shr
cs
repnz
cmp
mul
ss
out
in
enter
out
stc
ret
repz
xchg
hlt
in
out
lds
shlb
and
ret
add
out
lret
addl
leave
lds
sar
loop
in
rcl
incb
ljmp
iret
idivl
iret
std
cmp
aad
aas
aam
repnz
sbb
leave
xlat
cmc
lea
fsubr
pop
add
add
aad
vpaddusw
aad
js
jg
mov
jle
ret
jle
addl
xchg
cmpl
jmp
cmp
aad
jmp
iret
cmc
in
loope
std
aas
les
xchg
xor
shll
stc
into
int3
cld
iret
std
cmp
aam
test
in
rol
aas
out
out
fcomip
mov
fmul
fdiv
hlt
cmp
hlt
icebp
roll
shl
in
in
in
xchg
shl
shll
shl
loop
shr
jmp
jecxz
stc
test
repz
fyl2xp1
and
mov
cmp
hlt
repnz
repz
idiv
sbb
sarl
fadds
fcmovu
faddl
enter
enter
cli
shl
test
icebp
cli
loop
loope
fldln2
out
iret
jecxz
xchg
sbb
in
vpsubsb
in
fmulp
sub
aas
fst
std
xchg
xchg
test
mov
lock
idiv
neg
imul
enter
cmp
cld
std
neg
out
in
ret
std
xchg
mov
fdivrs
cmp
out
fdiv
idiv
neg
int3
repnz
aas
sar
fxch
lret
clc
lock
lret
and
icebp
in
int3
lock
int
repz
loopne
loop
cmpb
mov
fcmovne
lret
jecxz
xor
in
in
fidivrs
leave
xlat
xlat
idiv
sar
addb
out
dec
icebp
in
xchg
call
rcr
fildl
jmp
in
fldlg2
mov
adc
loope
lds
jmp
cmc
ror
rcr
inc
shl
testl
fimuls
int3
sub
xor
cmp
clc
fcom
lret
in
fadds
ret
mov
out
faddp
fisttpl
ret
ret
leave
in
cli
cli
jmp
fsub
out
hlt
and
orb
cmc
xor
xor
out
xor
lret
in
repz
jmp
cli
fucomp
int3
ljmp
lret
jecxz
std
call
adc
sti
ffreep
in
in
fimuls
mov
repnz
fcmovb
cli
stc
cmp
inc
in
ljmp
xchg
roll
imul
sub
jmp
aad
int3
fmul
fnstsw
stc
movsb
call
ret
jle
loope
mov
xchg
out
aam
in
cmp
cld
aad
cmp
call
mov
cmp
ror
sbb
loopne
rcr
ret
jmp
fdivp
iret
jmp
icebp
sar
hlt
mov
mov
aam
xor
in
clc
icebp
stc
ss
repnz
fmul
sbb
aad
fcmovne
lea
aaa
call
shlb
sar
shr
ret
repz
cmp
addb
loop
cli
lret
ljmp
clc
add
in
std
test
nop
iret
mov
ljmp
xor
fildl
div
sar
fucomp
std
xchg
sti
ljmp
fldlg2
std
clc
in
aad
std
hlt
fucomi
cli
mov
ret
out
incb
in
mov
ss
lret
clc
in
in
filds
test
fimull
adc
xor
cmp
lret
shl
cmp
cli
clc
loope
cli
sti
out
sti
fmull
iret
fucompp
cmc
hlt
aad
shr
hlt
fildl
inc
rolb
orb
cmp
cmp
loope
loop
ds
addl
lret
test
xor
aaa
cld
out
sarl
idiv
in
test
mov
std
fcmovne
test
mov
rcll
lret
cmp
cmpl
icebp
incb
fsub
xchg
ficoms
cmp
xor
test
in
rol
test
addl
xor
fsub
cld
ror
sti
int3
ret
xchg
ret
ljmp
xchg
lock
xchg
xchg
int3
in
out
into
shl
and
fucomi
fistpll
fucompp
lret
lret
int
in
xor
in
ljmp
cmc
iret
out
hlt
loop
out
clc
stc
test
xchg
out
xor
imulb
fnsave
fcmovnbe
icebp
aam
xlat
clc
hlt
cmp
test
test
xor
jmp
mov
mov
jmp
int
iret
rcl
fcmovne
fnstcw
push
repz
popa
jle
ret
jle
xchg
shlb
fistpll
dec
sti
fildl
in
mov
fucomi
in
fmull
xor
ljmp
sarb
in
int3
aam
rolb
aad
mov
into
mov
mov
xor
xor
enter
repz
hlt
loope
in
jecxz
aam
jecxz
and
int
xchg
int
in
xor
shrb
xlat
iret
enter
test
xlat
iret
ds
jmp
loope
out
cmp
hlt
jmp
stc
repz
aam
neg
xlat
in
clc
jmp
int3
iret
out
shrb
xlat
not
cmp
sarb
sbb
fdivrp
in
fdecstp
mov
rol
in
xchg
xor
icebp
cli
div
incl
cmp
idiv
addb
xchg
fdivp
in
leave
out
out
jmp
cmp
ret
hlt
shr
ret
mov
faddp
xchg
int
out
mov
ss
stc
xor
cld
xor
aad
int3
test
xchg
lret
mov
int3
fst
mov
hlt
fmul
in
in
xlat
jmp
repnz
loop
add
in
and
lds
sub
fdivrl
xor
mul
shl
fucomp
rcl
leave
sti
aam
ret
sti
cld
fchs
rorb
loope
ljmp
cmp
rcr
enter
in
iret
fucom
iret
ror
fadd
test
cmp
out
aas
jmp
faddl
faddl
sub
fdiv
fcmove
cld
cmp
aad
lock
int
xlat
push
hlt
mov
in
test
jecxz
xor
ror
in
das
std
xor
stc
lock
hlt
in
dec
lret
sti
repnz
mov
lock
enter
sub
cmp
aas
rol
xrelease
popl
xor
fnstenv
fcmovne
cmp
loope
jmp
incl
sbb
out
xor
fucomi
xor
fchs
fmulp
iret
fdivp
fldl
loopne
mov
mov
cli
nop
jmp
ret
fstpt
sti
jmp
int
int3
int
cmc
inc
cwtl
or
arpl
ret
jle
call
fxch
hlt
shl
icebp
hlt
incb
into
std
mov
iret
hlt
in
cmp
jmp
loopne
stc
shr
iret
in
fcomi
aad
out
fmulp
ficoml
out
in
shl
in
imulb
sarl
icebp
in
aam
repz
sti
rcr
lret
fdivrp
lret
mov
in
jecxz
cmp
cmp
ret
sti
fcmovu
xchg
lret
clc
nop
xchg
roll
ljmp
ljmp
aas
stc
out
les
jmp
ljmp
out
clc
out
clc
fxch
shl
test
test
aas
sti
fcomp
fxch
loope
fiadds
xchg
xchg
aaa
out
idivb
ror
rcr
cmp
sarl
aas
ffree
out
sar
sar
in
sti
out
mov
aaa
in
cmp
xlat
hlt
in
fsubr
aad
cmp
loopne
sti
fsubr
out
mov
lret
jmp
mov
clc
out
aad
xor
ljmp
cmp
cmpl
jecxz
loope
in
ljmp
lock
out
not
stc
int
rcl
lock
mov
loope
jmp
xlat
into
jecxz
fcmovnbe
cmp
fcmovb
rcr
cli
lock
or
ret
mov
call
aaa
in
repz
aam
lock
cmp
shl
xlat
in
jmp
jecxz
lret
lock
jmp
xlat
ror
int
div
aaa
stc
loope
cli
out
ret
fcmovu
in
xchg
fucom
test
ljmp
xor
cmp
aam
cmp
in
into
out
in
out
cld
rcl
out
repz
clc
cmp
jmp
fsubr
clc
hlt
cmp
call
fnstsw
nop
xchg
out
xor
xor
in
clc
jmp
fsubp
sti
test
clc
cld
shl
sti
mov
xchg
ret
fcomi
into
rol
clc
repnz
std
int3
aaa
lret
xor
test
ret
in
fucomip
orl
loop
lret
in
enter
in
fdivr
aas
addb
sbb
push
fsubp
lret
sar
je
mov
jmp
rol
int
fcmovnbe
mov
or
and
jle
ret
jle
shr
sar
shr
loop
loope
ds
mul
sar
sub
loop
mov
cmc
ljmp
imul
test
fimuls
mov
loopne
repnz
repnz
in
jecxz
int3
ror
icebp
hlt
in
dec
ret
fucom
call
jmp
fdiv
xchg
out
jecxz
ss
xor
icebp
fadd
ret
shl
ror
in
jmp
loop
in
ljmp
enter
in
cmp
ret
jmp
cli
std
call
in
out
loop
call
leave
lret
lock
fdiv
rol
aad
xchg
cld
or
sbb
jecxz
clc
xlat
cli
hlt
loope
loope
ret
cmc
repnz
fdivp
out
xlat
lret
call
fmulp
out
out
shl
stc
repnz
cli
fcmovnb
cmp
test
in
loope
in
xchg
xchg
test
aad
in
repz
cli
int3
out
repz
clc
aad
aas
rolb
testl
xchg
jmp
lock
enter
xor
out
fscale
inc
stc
fsub
repnz
cmp
lret
jecxz
ss
out
iret
leave
in
in
lock
rolb
shl
aad
stc
fcomp
cld
xlat
in
out
int3
shl
ffreep
stc
aad
cld
lock
clc
lret
idivb
call
test
fisttps
or
idiv
in
sub
ss
ret
hlt
clc
fsubp
out
lret
in
int
hlt
lret
das
stc
fcomp
shr
fdivr
cmc
cmp
flds
fcomp
test
out
into
shr
mov
out
cmp
leave
testl
test
lret
sti
fadd
jmp
out
int3
rcl
int3
stc
jmp
clc
xlat
not
int
lock
fsubp
mov
test
inc
xchg
int3
sar
in
fdivrl
cli
loop
fsub
ret
stc
repnz
lret
inc
orb
shl
ret
clc
fdivrs
aaa
loopne
loope
cld
clc
jecxz
jmp
sti
fdivr
fucomp
jmp
loope
xchg
xchg
mul
ljmp
addl
jmp
mov
jmp
ret
int
fstl
mov
roll
add
stc
shl
sti
fsub
roll
mov
rorl
int3
fdivrs
in
int
repz
out
icebp
cmp
call
fucom
fmuls
mov
sub
xchg
mov
neg
fdiv
cmp
dec
aad
sti
enter
in
loop
in
xchg
mov
sub
cmp
xlat
cli
rol
sub
neg
mov
lret
hlt
ljmp
repnz
ss
cmc
loope
cli
ljmp
fsubp
lock
xor
fadd
jmp
ss
xlat
int
cmp
les
xchg
cli
adcb
mov
ljmp
aad
cmp
test
mov
test
fcmovbe
int3
xchg
jecxz
shl
icebp
leave
rcl
in
shr
rcr
rcr
loop
mov
jmp
fucom
int
cs
sti
ret
fcmovne
xor
fcomip
cmc
imul
loope
idiv
addl
sub
shl
stc
stc
out
fxch
jmp
leave
div
loope
ret
rcl
call
cli
jecxz
loop
xor
xor
repnz
cmp
aad
cmp
jecxz
out
ret
out
std
test
aam
loop,pn
aad
int
std
out
clc
shl
sarl
aam
enter
test
in
repnz
out
sti
in
aaa
fistpll
stc
clc
ret
stc
in
mov
vpandn
jecxz
lret
cmp
shll
dec
xor
xchg
ret
loop
clc
mov
sbb
in
mov
aas
enter
aaa
fxch
leave
ds
incb
enter
int
call
cli
lock
divl
fcmovnbe
push
fdivr
cmc
jmp
fsubrp
cli
xchg
testb
cli
shr
enter
lret
cmp
cld
xchg
mov
or
icebp
out
call
loope
call
shl
push
cmp
aad
mov
clc
jmp
rolb
rcl
stc
not
out
fmul
idivb
cmpl
je
jmp
int3
ret
int
mov
pusha
das
outsl
addl
ret
jle
icebp
loope
jecxz
sub
xlat
stc
rolb
out
stc
xor
aaa
cli
aaa
rcl
clc
neg
rorl
ljmp
mov
rcl
aad
hlt
in
repnz
aad
ds
icebp
jecxz
mov
xrelease
out
jmp
cmc
roll
lds
lret
std
shr
lock
loop
fidivl
cmp
neg
ljmp
test
ret
xchg
xchg
cmp
ror
call
out
into
ljmp
icebp
test
roll
xchg
iret
xchg
loopne
pop
shl
out
call
aas
cmp
sarl
fcomp
fucom
rcr
mov
mov
loop
in
in
shl
out
in
ror
leave
out
cmc
shl
out
enter
xchg
add
cld
fmulp
out
les
int
rcl
xlat
std
ffreep
shl
loopne
aam
loop
call
nop
loopne
sub
out
fcmovnu
fistpll
leave
cmp
aas
fst
fst
mov
xchg
lret
adcb
enter
hlt
fucomp
xor
out
hlt
aas
sar
fsub
mov
ror
in
xor
loop
bnd
incb
addb
cmc
int
into
in
test
rcl
ror
cmp
int3
enter
cmp
cld
mov
leave
out
fistl
lret
in
int3
sti
hlt
lock
out
shl
fstpt
fcmovu
xchg
leave
test
leave
in
repnz
aam
or
ret
jecxz
cli
repz
loopne
in
and
test
ror
rcr
jmp
clc
fdiv
cmp
repz
fadd
icebp
shl
fstp
std
icebp
nop
in
test
xchg
repz
cmc
in
ss
call
jmp
iret
jecxz
cli
out
addb
repnz
rcl
xlat
in
rcl
cmp
repz
add
test
in
call
imulb
fsubr
stc
int3
out
cmp
ret
repnz
mov
jmp
push
mov
jmp
aad
iret
aas
rol
aad
push
inc
push
nop
pusha
mov
jo
jle
test
jle
aad
neg
fisttpl
fsubp
orl
lret
not
idivl
cld
fiaddl
xlat
mov
sub
jecxz
loope
shrl
out
out
icebp
fstp
shr
loopne
test
jmp
xchg
mov
iret
frstpm(287
mov
hlt
int
cmp
sarl
ret
cmp
jmp
mov
iret
in
test
repnz
leave
xlat
hlt
out
fcmovnbe
rol
in
aam
into
cmp
hlt
xchg
xlat
mov
push
mov
call
lret
imul
cmc
aas
aam
addb
fdivrs
fmuls
xchg
shl
int
clc
icebp
iret
cmp
sti
cmp
ret
not
aam
and
jecxz
out
in
ljmp
xchg
shl
ret
call
out
out
cli
icebp
sbb
loopne
fcomp
lret
mov
mov
mov
cmp
call
loope
int3
incb
in
fchs
cld
int3
out
mov
aam
das
into
xor
aaa
cmp
idivb
rcr
sar
shl
xchg
in
loope
int3
lret
in
xchg
loopne
out
xor
cmp
test
fucomip
xlat
loop
clc
movl
repz
int3
int3
jmp
jecxz
aaa
cmp
aam
ret
neg
xor
test
int3
mul
leave
das
ljmp
jmp
out
cld
repnz
les
in
xchg
xchg
out
shr
xor
leave
fdivrs
cmp
cld
cmp
mov
fcmovnu
jmp
mov
jmp
in
das
not
aas
adc
jmp
std
mov
aam
out
jecxz
ret
lock
rcl
in
rcl
sbb
cld
out
ror
in
ds
and
addl
out
leave
hlt
imulb
xor
ljmp
loope
repz
test
fnclex
cli
out
les
sub
cli
in
out
cmp
shl
loope
cli
fdivr
fcmovu
and
fists
repz
repnz
lret
neg
rol
fdivr
cmc
cmp
clc
xchg
cmc
out
lret
xchg
call
lret
int3
fsubrp
int
loop
cmc
test
testb
fstp
ftst
jmp
jmp
hlt
aaa
jmp
fildl
leave
enter
cld
dec
mov
lock
out
cmp
loop
rol
test
movl
add
into
lret
leave
aam
dec
jo
stos
insl
push
and
add
lret
cld
out
repz
clc
lret
or
test
fisttpl
repnz
jmp
xlat
repnz
cmp
repnz
testl
iret
shr
hlt
xorl
neg
iret
stc
cmp
into
into
iret
fcomp
out
in
cld
int
fcmovne
hlt
lret
jecxz
out
xor
divb
repnz
loope
int3
clc
ret
std
out
mov
mov
sub
sti
in
ss
cli
aam
clc
out
fmul
cld
xchg
rolb
das
cs
clc
cmp
lret
into
in
loop
out
cld
ljmp
mov
enter
shll
aad
xor
out
fcomip
std
in
cld
imul
fcmovnb
out
int3
lret
faddl
xor
xor
ss
jecxz
in
flds
aad
int
loopne
in
lea
cmc
rcr
in
out
aad
jmp
lock
std
hlt
test
mov
enter
test
div
cld
rol
fdivrl
cmp
aam
cmp
test
loopne
test
nop
aad
loop
jmp
fcmovne
leave
icebp
sar
xor
into
ret
ljmp
jecxz
iret
test
xchg
in
das
shl
shr
xor
shr
in
cmpb
hlt
into
out
jmp
int3
mov
in
sbb
sub
ret
fst
out
xor
clc
ror
loop
xor
sbb
fcomp
repz
leave
out
cmp
shll
xlat
fucomi
out
cmp
out
out
in
shl
mov
ret
xor
cli
xor
shr
repz
mov
into
into
xchg
orl
lock
cmp
imul
stc
jecxz
test
leave
fldlg2
in
mov
xchg
xorb
repnz
fsubr
xor
icebp
not
cmc
xlat
call
mov
iret
loope
xchg
iret
rcr
clc
in
std
hlt
clc
icebp
cmp
test
sar
in
out
icebp
in
sbb
div
lret
xor
clc
aam
aad
cmp
cmp
jecxz
fcmovnu
pop
xchg
push
leave
icebp
icebp
cmp
fdivrs
cmpl
jecxz
jecxz
clc
xchg
mov
jmp
jmp
shl
xor
lock
xor
cmp
loopne
out
incl
test
adc
mov
in
out
xor
cmc
hlt
mov
push
dec
push
jmp
int3
ret
int3
int3
sahf
pushf
gs
in
les
jle
add
cmp
sub
aad
int3
aaa
rcl
loop
mov
cmc
lret
out
mov
xor
sar
xlat
xlat
jmp
std
fmul
in
jecxz
test
cmc
test
rcr
mov
rcr
sti
leave
aad
cmp
sti
rolb
cmc
leave
jecxz
in
call
mov
sub
cmp
xor
stc
cld
sbb
cli
test
in
out
nop
incl
icebp
leave
clc
ret
cmc
fdiv
fsubrp
xlat
repnz
cli
fcmovbe
fcmovbe
cmp
vpcomub
out
enter
into
jmp
in
sar
xor
sar
repnz
fsub
out
jmp
xchg
enter
cmc
fdivs
std
fdivrp
aaa
ds
shr
orb
hlt
addl
aaa
cld
cmp
repnz
idivb
out
fcomi
test
in
fmul
mov
rcl
xor
out
into
cli
icebp
sti
shr
xlat
cmc
cmp
movl
sti
lret
nop
xchg
xchg
xor
hlt
in
leave
jmp
iret
idivb
ds
mov
clc
std
orl
nop
jmp
sub
loop
les
iret
icebp
ret
bnd
stc
stc
in
fdivrp
rorb
int3
cmp
rcl
cmp
cld
jmp
stc
in
testb
cmp
mov
jmp
jmp
sarl
call
aas
out
faddl
orl
out
mov
shr
aam
rcl
out
aad
rolb
cmp
out
call
cld
cld
xchg
into
out
sti
hlt
fnstcw
cmp
sar
cmp
ds
call
cli
fisttps
mov
xchg
xlat
fdiv
fcmove
int
f2xm1
jmp
aad
ret
aad
addb
jmp
mov
aad
shr
neg
out
shr
jecxz
fildl
lret
jecxz
out
mov
loop
loope
leave
rol
cmp
in
cmp
in
loop
hlt
clc
in
out
xchg
ljmp
clc
xor
cmp
std
loopne
std
sar
out
in
mov
in
adc
xor
int
ljmp
fnsave
icebp
ret
jecxz
cld
jmp
lock
lret
mov
aad
not
iret
stc
fucomi
sub
incl
fcomp
sbb
mov
std
jmp
lret
cs
int
cli
rcl
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
pushl
pushl
pushl
call
jmp
adc
jmp
lret
into
fst
fstp
bound
inc
outsb
je
jle
add
out
sar
cmp
out
xchg
repnz
call
loop
in
vpaddq
aaa
or
cmp
jecxz
addl
loopne
repnz
enter
icebp
into
fildl
testl
filds
jecxz
aad
out
jmp
aam
cmc
enter
and
out
out
int3
clc
out
call
sbb
adc
shl
test
fiaddl
ljmp
fsubr
out
out
int3
cmp
aam
sti
xlat
cmp
fcomip
mov
fxch
out
into
cmp
in
xor
in
xlat
in
out
enter
loope
in
loope
aas
enter
jmp
fcmovu
jmp
loopne
in
xor
cmp
cmp
ljmp
hlt
sarl
cmc
clc
fcmovb
nop
test
loop
enter
in
int3
xor
xor
shr
cld
ret
fmull
mov
int
fucom
xchg
xor
das
xor
lock
cmpb
into
ret
ss
mov
test
int3
out
fiaddl
cmc
out
in
iret
lret
out
ss
in
loope
xchg
out
loope
enter
in
nop
iret
mov
repnz
fdiv
fdivr
rcl
ffree
aam
incb
sbb
out
cmc
icebp
call
faddl
fildl
ljmp
in
lock
leave
sar
dec
idivb
les
jmp
jmp
mov
shlb
icebp
fucomp
leave
call
shl
loop
cmc
sbb
call
decb
lret
out
clc
cmp
xlat
jmp
out
inc
jmp
loop
out
fcmovu
in
jmp
and
loope
into
aam
jmp
cld
dec
fiaddl
addb
iret
ror
out
ss
aaa
in
cmp
std
into
loop
fcmovne
lock
inc
repnz
xchg
in
jmp
clc
clc
lret
idiv
ds
sti
fld
xlat
stc
out
out
mov
fxch
stc
rcl
cmp
loop
hlt
cmp
loope
cmp
int
xchg
ljmp
jmp
fldz
jmp
ljmp
stc
call
cmc
int
loopne
cld
mov
cmc
hlt
mov
shr
int3
addb
ds
in
aad
lret
fidivs
jmp
int
iret
rcl
aad
inc
xor
ja
leave
mov
ja
jle
add
test
xchg
loopne
jmp
sub
xor
sar
out
std
loopne
lret
popl
mov
xor
call
lret
fcmovnu
aam
cli
enter
out
cli
mov
or
mov
clc
xor
ss
cmp
stc
in
xor
test
test
sti
int3
orb
out
in
in
das
shr
std
jmp
test
fst
jmp
jecxz
hlt
cmc
cs
sar
roll
cli
cli
aam
roll
fst
int3
out
xchg
cmc
out
into
xor
in
cli
icebp
enter
fdivr
cmp
std
leave
out
sti
jmp
loope
das
aam
iret
cmp
leave
xor
xor
sti
sti
fucom
loopne
jmp
leave
rorb
int3
ror
fdivr
leave
loope
repz
test
std
in
mov
sti
sti
xchg
loop
shrl
cli
fsubr
fdivr
stc
cmp
fnstsw
loop
mov
in
xchg
cmc
rorb
cmp
fnstenv
aad
iret
int
sar
ds
xchg
aam
cld
sub
in
int3
iret
lret
xor
in
icebp
fxtract
stc
sar
clc
rcl
cmp
loop
mov
into
ror
in
sarl
cmp
sbb
sbb
leave
fsubp
out
leave
xchg
int
in
shl
rcl
shr
jmp
sarb
neg
loopne
mul
movb
mov
sti
loopne
nop
sub
aad
test
aam
call
jecxz
out
mov
sti
in
fldl
test
xor
fdivs
cld
add
inc
aas
cmp
addl
mov
shl
in
rol
icebp
cld
ss
repz
test
in
aad
cli
clc
jmp
lret
aad
ljmp
incl
loope
rcr
bnd
sti
loop
enter
xchg
loopne
aad
fpatan
ds
cmp
fucomi
add
std
ret
orl
lret
div
mov
fdivr
aad
sar
fcom
enter
int3
mov
inc
sub
aam
cmc
fdiv
leave
enter
rcl
cmp
repz
aad
aas
out
fdivrp
cld
xchg
in
in
aaa
rol
lret
repz
shll
aas
roll
sti
clc
xchg
xchg
stc
lret
out
jecxz
fmulp
int3
divb
xlat
mov
adcl
add
jmp
mov
fcmovnu
or
sub
leave
stos
sbb
jp
jle
add
cmp
xlat
lret
into
lock
out
hlt
orb
aam
loopne
xor
fidivrl
iret
jmp
hlt
repnz
cmp
jecxz
stc
aad
test
xlat
mov
test
loop
in
xchg
jecxz
xor
fidivl
dec
test
and
jmp
xchg
sub
cmc
jmp
enter
idiv
rcr
aas
sarl
idivl
aad
add
jecxz
out
mov
lret
lock
in
fcmovne
out
clc
fsubr
clc
lret
in
loope
aam
push
test
test
out
xchg
lea
clc
in
cmp
not
aas
loopne
mov
xchg
lret
fucomi
jmp
loopne
cs
aam
cmp
icebp
fst
fcmovnb
repz
fimuls
loope
xor
repz
call
testl
sbb
mov
mov
jmp
in
fmul
cli
std
stc
fcmovnu
aam
push
add
xchg
test
loopne
repnz
out
fiaddl
les
mov
in
mov
shl
fsubr
ror
aaa
iret
jmp
in
hlt
lock
loope
faddp
fsubr
jmp
jecxz
shr
enter
ds
cmp
aas
aas
leave
flds
loop
in
faddl
fcomp
hlt
fmulp
std
cmp
xchg
add
jmp
lock
iret
clc
lds
lret
fdiv
icebp
loope
cmpb
rol
shl
in
mov
std
mov
ss
int3
in
aaa
fnstenv
icebp
cli
cmp
call
mov
lock
fxch
out
fidivl
sarl
fcomi
ffree
icebp
jecxz
mov
notl
mov
aad
loop
repz
sti
int3
clc
sarl
cld
ds
ds
idiv
loopne
in
faddl
aam
iret
ret
ss
pushl
in
in
jecxz
rolb
mul
jmp
mov
into
fimuls
stc
ss
mov
int
out
xor
cmp
call
out
cli
adc
call
into
not
xor
shl
out
in
lock
in
repz
jmp
mov
jmp
test
xlat
ror
cmp
rol
aam
mov
jecxz
loope
int
dec
into
stc
sub
icebp
icebp
jmp
fstp
push
not
mov
xor
mov
adcl
xor
movl
jmp
iret
lret
rcr
aad
int
jge
ja
push
push
mov
jle
add
sub
sti
fsubp
cmp
std
in
out
in
aad
shl
cli
std
sbb
icebp
std
loop
sti
xchg
enter
repz
aam
int
aam
fistpll
fnclex
cld
fsubp
in
mov
jmp
cld
std
xchg
loop
in
sti
fdiv
cmp
jmp
loopne
addb
loopne
in
lock
mov
jmp
repz
iret
aam
cmp
fsubrp
fdivrp
xchg
ds
repnz
std
enter
xchg
ljmp
cmc
sti
shl
cld
and
cmp
cld
div
mov
lret
xchg
icebp
test
rcl
ljmp
fcomi
cmp
stc
iret
cmp
in
pop
xchg
in
aad
aad
int
lret
int3
into
neg
fdivrp
ffreep
in
jecxz
xchg
aam
in
ret
cmp
shl
hlt
cmp
fsub
hlt
xchg
mul
ffreep
nop
orb
sub
cmp
fdiv
aaa
out
cmp
aad
aam
cmp
enter
jmp
mov
int
call
incb
cld
sti
rolb
leave
sbb
test
call
lret
leave
in
xlat
fcomi
not
testl
fucomi
clc
sti
int3
incb
rcl
xor
ror
ror
fadds
incb
fdivr
addl
fcmove
sub
sti
stc
int
roll
std
stc
jmp
test
sub
ret
xor
sarb
fdiv
xor
fsub
aad
cmc
test
fisttps
jecxz
std
filds
int
lret
rcl
sti
rcr
in
xlat
in
lret
mov
cld
cli
ljmp
ror
int3
ljmp
les
vpavgw
test
in
addl
hlt
mov
mov
xor
sti
into
int
hlt
ds
addb
fcmovnu
rcl
iret
out
aad
out
cmp
xor
test
aad
add
xchg
fsubr
mov
out
aad
xor
lret
xor
lret
mul
out
clc
into
in
jmp
lret
std
ljmp
aad
hlt
cmp
cmp
int3
flds
jmp
jmp
loope
into
ljmp
imul
xor
aad
ftst
out
in
repnz
movl
add
movl
jmp
jmp
enter
int
int3
lret
xlat
ja
lea
or
add
orb
das
lock
ljmp
cmp
rolb
jecxz
mov
addl
cli
cmp
out
cld
xor
hlt
cmc
clc
aam
in
loopne
nop
loopne
jecxz
icebp
call
repz
in
xor
jmp
test
sbb
test
fsub
stc
xchg
or
enter
cmp
cmc
aam
fdiv
in
test
call
jecxz
clc
fsts
test
in
ret
icebp
cmp
jmp
iret
int3
div
out
mov
clc
loopne
mov
ljmp
in
xor
out
fldpi
dec
call
shl
jecxz
flds
enter
xor
orl
call
cmp
hlt
in
in
call
fsub
lret
in
mov
out
loopne
out
shlb
cmp
xor
in
std
fcmovu
in
fcmovne
xchg
out
loope
std
mov
in
fsubr
jmp
jmp
lret
stc
in
int3
rcr
clc
loope
std
fst
ljmp
out
xchg
lret
mov
cmp
into
ds
fdiv
cmp
ret
jecxz
aam
mov
fisttpll
jmp
xor
rcl
cmp
idiv
mul
jmp
icebp
test
inc
xchg
out
xlat
lret
test
cmc
faddp
clc
lock
cmp
hlt
cli
fcom
sti
in
fcomip
shr
lret
cli
mov
jmp
loop
out
cmp
fdivrl
fmul
fiadds
clc
fcmovnu
test
ljmp
repz
xlat
loop
in
cmc
xor
repz
fcmovnbe
stc
aad
in
mov
or
ljmp
shr
enter
fildl
add
sub
cld
orl
fnstcw
addl
shl
out
test
fisttpl
xlat
idivb
loop
sti
cmc
aam
aam
shl
int
lock
sar
fimuls
in
xchg
int3
enter
iret
xor
out
lret
lret
ffreep
ret
sar
leave
ljmp
incb
hlt
call
fidivrs
lock
repz
mov
shl
mov
nop
rol
xlat
into
jmp
cmp
xorl
test
cmc
loope
addl
ret
repz
in
cmp
lret
cmp
fsub
aam
fcomp
jecxz
cld
in
xchg
fmulp
loop
adc
in
cmp
jne
mov
mov
mov
movl
mov
mov
mov
mov
notl
jmp
rol
lret
ffree
aam
mov
mov
xchg
mov
add
test
jle
in
cmp
out
ljmp
fstpt
xlat
clc
out
call
out
loop
call
cmc
ret
stc
aad
xor
cmp
int
ss
fdivrs
enter
mov
test
int3
lret
fstpt
xor
shl
testl
fst
test
shr
jecxz
call
into
loop
cld
iret
in
test
loopne
mov
out
jmp
xchg
xchg
int3
xchg
idiv
iret
fidivl
out
into
out
shr
aas
addb
jmp
enter
xchg
xchg
lock
stc
fsub
fmulp
cmp
fistpll
fcmovnu
aad
out
mov
xchg
xchg
xchg
in
sarl
enter
fcmove
cmp
mul
rol
cmp
leave
test
in
or
in
jecxz
xlat
in
in
lret
cmp
rol
hlt
in
stc
loopne
vpmuludq
sub
mov
loop
leave
ss
iret
cmc
stc
repnz
cld
cmpb
hlt
fimull
cli
jmp
fsubp
out
hlt
xor
shr
xlat
enter
rcl
cmp
repz
std
jmp
xor
xor
enter
loopne
in
neg
ret
jecxz
cli
loopne
std
repnz
sti
sti
fstp
jmp
sar
div
xlat
out
out
jmp
aas
loope
std
loop
decb
shll
cmp
call
test
ffreep
in
int3
test
flds
lret
sub
out
test
rcr
stc
idiv
ret
enter
loopne
repnz
in
shr
mov
cmp
cmp
ror
clc
ffreep
filds
loopne
rolb
rcll
fdivrs
lock
rcl
fldl
fld
sti
sbb
loopne
rcl
in
adc
shl
sti
rcl
repz
stc
mov
filds
loope
stc
lret
call
xor
aad
idiv
jmp
repnz
mul
jecxz
loop
std
mov
nop
xchg
rol
not
in
std
xlat
fdivr
fistpll
sub
ret
std
lret
cld
out
cmp
test
in
idiv
stc
sarl
std
cmp
out
lock
xchg
in
jecxz
mov
iret
das
aad
xor
std
cld
xor
cld
iret
or
loopne
fcmovb
loope
iret
in
dec
loope
cs
cmp
sti
lret
testb
add
cmp
jmp
into
int
xlat
and
push
jg
test
jle
iret
loop
inc
fdivrp
jmp
in
or
xchg
call
leave
cmp
notrack
loopne
clc
ret
in
testl
mov
les
int3
hlt
ds
test
fisttpl
cmc
std
iret
shr
faddl
cli
leave
out
ss
shr
in
ret
cli
aad
cli
cmp
in
jecxz
xchg
in
into
lock
fstpt
aad
cmp
iret
sti
jmp
xlat
xlat
mov
orb
hlt
das
ret
lret
leave
fdiv
loopne
repnz
aam
sar
jecxz
ljmp
aam
loopne
out
cmp
aad
sti
in
sarb
into
repz
fnsave
test
ret
repnz
fimuls
int3
in
jecxz
shll
call
in
repz
mul
mul
test
test
mov
xchg
adc
int
repnz
int3
jmp
icebp
lret
rolb
xchg
in
test
int3
out
ss
ljmp
idivl
loop
aad
mov
rorb
loope
jmp
jecxz
lret
cmp
aas
out
xlat
filds
in
cli
mov
ljmp
in
lret
cmp
loopne
sar
repz
sar
test
xchg
idiv
ret
loopne
shrl
loopne
aam
std
fstpt
shl
in
ret
hlt
test
shl
decl
out
lret
ljmp
in
fsub
div
adc
lret
sti
fildl
in
leave
xlat
jmp
in
fdiv
rolb
std
orb
call
mov
xlat
not
mul
fdiv
fsubr
repz
neg
std
fsubrp
fcmovu
out
test
mov
mul
fsubr
int
enter
lret
int
repz
rcl
xchg
fiadds
or
call
out
jmp
fucomi
fidivrl
dec
sar
fdivp
fistpll
clc
out
loop
into
out
fdivrp
neg
shll
jmp
cli
ss
sarb
fcmovne
cmp
repz
xlat
fists
aam
fsubr
ror
enter
xor
icebp
ret
aad
repz
fdivr
test
out
int
aad
shll
in
repz
cmp
loop
loopne
out
lea
lock
test
call
iret
fnsave
repnz
lret
cli
out
inc
not
ror
les
test
or
add
cmp
andl
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
call
cmpl
jb
xorl
jmp
ret
int3
int
ret
leave
pop
cs
xchg
pop
jg
test
jle
fimull
int3
decb
vpaddq
int
fdivp
hlt
int3
xor
out
aam
fcmovnu
fimuls
repz
idiv
fadd
xor
stc
repz
orl
cli
jmp
std
filds
fnstenv
fmul
in
fdivrs
loop
in
test
lret
xlat
lret
repnz
ljmp
iret
int
xlat
adc
fcmovnu
cli
stc
out
ljmp
in
jecxz
jmp
int
out
loopne
in
test
enter
fcmove
repz
jecxz
xor
cmp
call
loopne
addl
out
mov
cmp
shr
cmp
jmp
icebp
xchg
clc
lret
mov
out
mov
out
xchg
jmp
aaa
fcmovnbe
dec
fdivr
fmul
cmpl
aad
addb
cld
orb
lret
int
out
aam
iret
lret
sar
adc
test
mov
test
int
leave
test
rcl
cli
aad
aad
xor
test
xlat
rolb
out
clc
call
ret
rcl
xlat
aam
fcmovbe
fucomp
in
repz
shl
leave
aam
in
mov
out
cli
xchg
jmp
adc
xor
fcmove
out
cmp
into
sti
ret
leave
sbb
jmp
lret
jecxz
cmp
int3
lret
jmp
loopne
fmul
cld
rol
sti
enter
mov
fcmovnbe
in
iret
jmp
shr
lret
ss
divb
cmp
loopne
iret
shl
aam
out
in
sti
in
mov
fcomip
out
xor
xor
cli
das
repz
aaa
cmp
in
xchg
aad
ret
out
std
loope
icebp
call
int
out
int3
cld
in
ror
std
fsubr
cmp
in
test
mov
xchg
fmul
jmp
xchg
cs
repz
int
lock
call
cmp
mov
int
in
loop
in
xchg
out
in
test
lret
cmp
fidivrl
ret
jmp
jmp
nop
fucomi
iret
shr
mov
rcr
in
sti
hlt
out
ds
jecxz
cmp
fsubr
mov
std
iret
test
aam
into
cld
cmc
cmc
ss
jmp
aas
repnz
ret
out
enter
icebp
icebp
adcb
into
not
cmp
shl
test
sti
enter
enter
mov
loope
xchg
rorl
or
push
inc
or
or
jl
inc
add
ret
add
int3
ror
fcomp
aam
aas
idivb
insl
or
test
jle
sub
jmp
shll
fdivp
aaa
sub
shl
xor
cld
test
jmp
mov
xor
ss
ds
iret
test
test
enter
mov
std
xchg
xlat
in
jmp
jmp
lret
cmp
shl
jmp
out
movl
lret
lret
fsubr
cmp
fdivrp
ffreep
test
loop
test
out
sub
jecxz
in
aam
xor
stc
in
xlat
ror
fcmovnbe
xor
mov
std
test
int
call
repnz
ljmp
leave
sti
hlt
xlat
cmp
cmc
roll
shl
testl
rcr
fld
out
fstp
std
sarb
loop
xchg
repz
xlat
in
mov
loopne
imul
shrl
fcmove
sti
aad
shlb
sar
iret
cmp
aas
repnz
aam
xchg
mul
xchg
test
iret
jmp
jmp
cmc
in
cmp
test
ffreep
leave
mov
lock
repz
sar
out
cmp
aam
int
loop
jecxz
out
incl
in
call
shl
cmp
jmp
rcr
fmulp
shr
test
sbb
jecxz
and
fcomip
out
fld
shll
jmp
hlt
lret
std
loope
test
flds
cli
lret
mov
loopne
and
enter
cmp
fnstenv
aam
jecxz
filds
imul
in
popl
mov
leave
hlt
in
inc
fcmovnu
fnstsw
xlat
cmp
cli
int3
mov
int
lret
repz
sar
lret
out
and
ffree
cli
ljmp
std
sti
loop
out
into
ret
xor
testb
fdiv
xchg
in
int3
test
clc
fmul
in
test
xchg
rol
in
das
lret
cld
repz
fcmovnbe
ds
not
cli
dec
shr
icebp
cmc
fadds
int3
icebp
stc
cld
cmc
fcmovu
shr
idiv
fstp
adc
std
cld
in
enter
incl
div
int
out
jmp
cmp
xor
loope
adc
or
jmp
divl
into
out
ds
cmp
rcr
aam
test
mov
out
rcr
aam
cmc
in
cld
repnz
cmp
iret
aad
test
cli
fiaddl
jmp
das
icebp
in
ss
orl
call
inc
or
outsb
sub
add
inc
or
ret
add
rcl
aam
ret
sarl
sub
mov
or
jle
add
aaa
jecxz
cld
cld
in
adc
in
mov
nop
int
aam
cmc
shll
fdivrs
cmp
ds
fdiv
aam
hlt
in
test
xchg
cld
sti
xchg
cmc
hlt
jecxz
aaa
jecxz
sti
fucompp
lock
jmp
icebp
call
test
jmp
rol
loope
jmp
out
ljmp
rcr
in
cli
cmc
std
xchg
enter
rcl
in
int3
cmp
cld
call
cld
cmp
test
fucom
lret
aas
enter
enter
repz
lret
aaa
xor
cmp
sar
fucompp
sub
std
nop
in
repz
out
fnsetpm(287
xor
ret
int
call
fadds
out
loop
jmp
int
shr
out
cmp
lret
std
sar
xchg
out
out
std
loop
mov
xchg
aam
test
jmp
ret
fldl
mov
in
fdivr
into
xchg
xchg
loope
loopne
out
idiv
out
out
cmp
loop
aas
fcmovnu
sti
ret
cli
mov
cli
fisttpl
nop
in
call
shl
aam
cmpb
addl
lret
ljmp
mov
xlat
cli
icebp
das
xlat
call
rcl
xchg
std
sti
clc
out
ret
lret
xchg
aad
sub
fidivl
xor
fdivr
in
ror
sub
mul
loope
mul
mov
mov
jmp
clc
cld
cld
aam
into
xlat
icebp
xor
test
in
test
std
mov
xlat
mov
xchg
icebp
jmp
in
aad
iret
int3
fdivs
cmp
inc
lock
fsub
test
xchg
fimuls
xchg
xchg
loop
hlt
neg
cmp
sti
ss
out
jecxz
in
cmp
test
cli
repz
mov
jmp
orb
in
icebp
ror
jmp
test
hlt
incl
ror
into
xor
ss
int
test
std
sar
fstp
ljmp
xchg
out
das
in
ss
int3
cmp
cmp
jmp
xor
sar
rorl
movl
enter
leave
int
jmp
adc
cmp
cmc
loop
ljmp
icebp
ljmp
iret
out
cmc
idivb
out
flds
call
in
loope
fildl
hlt
shl
cmp
ret
hlt
ror
out
aam
jge
push
jb
jmp
cmp
jne
movl
mov
mov
mov
mov
mov
jmp
sarb
ret
enter
fldl
jge
setne
jle
add
stc
fdiv
into
orl
ss
cli
int
jmp
ds
in
mul
fcomip
fmulp
call
into
jecxz
in
xchg
ss
fprem1
rcr
into
xor
adc
fadds
lret
clc
test
in
mov
repnz
loop
xbegin
cmpb
ret
ret
cld
cmc
lret
jecxz
out
fucomip
sti
loop
ljmp
leave
lret
lret
ret
aaa
cmc
aas
xchg
leave
xlat
xlat
xchg
mov
xchg
loope
out
call
xor
std
ljmp
or
add
fimuls
cli
fnstenv
into
ljmp
mul
ds
sti
enter
jecxz
lock
xchg
loopne
jmp
aad
iret
into
cmp
div
loope
aam
jmp
lds
out
into
in
ret
shlb
vshufps
loopne
incl
mov
cld
lret
enter
loopne
hlt
dec
xor
repnz
xor
loopne
hlt
in
ror
lock
stc
test
sti
fdivr
mov
and
int3
repz
ret
xor
lock
cli
sub
fcomp
loopne
ljmp
aam
xor
shr
fcmove
incl
out
vcvtpd2dq
fcomp
fsubp
iret
std
into
mov
hlt
cmp
fnstcw
hlt
sar
hlt
stc
out
in
loope
cmp
xchg
jmp
xor
aad
cmp
jmp
ret
loop
jecxz
cmp
sub
cld
iret
fst
xchg
test
hlt
iret
int
aaa
ret
repz
enter
mov
cld
xchg
mov
repz
xor
ljmp
fcmovbe
ret
jecxz
aam
faddl
xor
fcmovne
repnz
lret
ljmp
shl
rcr
aad
loope
repnz
std
fdivp
lret
icebp
jmp
cs
stc
in
std
in
rcr
xlat
out
in
cld
hlt
std
mov
hlt
int3
mov
call
std
xor
cmp
and
mul
jmp
test
jmp
adc
xchg
ror
lret
out
lock
xor
cld
loop
addb
fprem
sbb
test
enter
aad
xor
cmp
rolb
out
dec
xchg
in
xchg
icebp
cmp
fcmovbe
out
cmp
ret
fnclex
mov
mov
lret
lret
fnsave
movb
mov
lea
mov
mov
xor
add
jmp
ror
fmul
fcomp
fcmovnb
aad
jp
je
xor
test
jle
std
xchg
rol
xor
aas
adc
rcl
test
xlat
lret
ljmp
in
lret
fdivr
lret
cmp
in
into
aad
cmc
repnz
cmc
ds
xchg
fcmove
mov
fstl
fstpt
stc
sti
loope
cmp
cli
out
jmp
leave
test
lds
test
lret
jmp
cli
aam
out
in
in
aas
cli
loopne
cld
iret
ret
lret
out
in
in
sti
out
out
adcb
in
fldl2t
rcl
out
ds
fcmovnbe
cld
ljmp
out
jmp
out
das
iret
jecxz
cmp
sti
into
aad
xorb
and
into
fldz
call
aam
rcl
xor
enter
loope
neg
test
jecxz
cld
mov
mov
nop
cld
jmp
in
int3
in
ror
xlat
repnz
cs
jmp
cmp
xchg
xlat
fsubrp
lret
in
in
lret
roll
shr
xor
shll
clc
xor
cmc
sar
lock
fcmovu
mov
mov
xchg
icebp
xchg
bnd
fsubr
fincstp
sti
shl
out
fdivr
jmp
fidivrs
ret
in
in
lock
in
ret
ljmp
lock
sar
shl
cld
in
in
int3
leave
rorb
xor
mov
stc
jmp
aam
hlt
cmc
iret
cli
imul
fildl
mov
out
xor
out
call
std
iret
lock
int
ds
loope
sub
in
iret
hlt
std
xchg
rol
int
in
repz
fxch
cmp
loop
ret
not
testb
lret
in
cmp
jecxz
shll
cmp
aam
in
rcl
fstp
and
ljmp
shll
sti
fdivp
fucomip
clc
fdivp
repnz
cli
aas
fcmovbe
in
or
xchg
rcr
cmc
aad
xor
icebp
cmp
fsubrp
ljmp
shl
ret
and
out
int
aad
div
int3
cmp
cmp
ds
fadd
cmc
out
fld
fsub
and
jmp
shr
xor
int3
iret
cmp
sti
loopne
cld
rcr
icebp
in
shr
lret
out
int3
std
mov
sarb
rol
cmp
cmp
ror
rolb
out
sti
int3
iret
fmulp
out
xor
int3
enter
out
repz
fucom
sti
xor
fildl
in
iret
in
addb
jmp
jmp
inc
mov
mov
xor
jmp
int3
int
fstp
cmp
pop
pushf
fildl
sbb
adc
jle
add
aam
iret
iret
iret
cmp
rcr
loop
ljmp
mov
repnz
call
fsubrp
jmp
repz
orl
fdivrp
fucom
fucom
in
ss
cli
xor
out
fdecstp
lock
cld
cmp
fdiv
and
nop
jmp
in
clc
fdiv
jmp
aas
aas
into
cli
rol
hlt
jmp
rolb
xchg
shlb
xor
xor
cmp
cld
shl
xlat
out
enter
cmp
ljmp
out
ss
rcl
fadd
leave
aas
call
shl
ret
and
cmp
fildl
not
mov
cmp
fucomi
clc
test
jmp
mov
xchg
rcl
fsubrp
loope
int3
fidivrl
cmp
ror
test
loopne
test
inc
fadds
mov
xchg
shlb
xor
cmp
sti
fnstcw
fmul
icebp
add
test
cld
decb
loope
enter
jecxz
aad
hlt
int3
cmp
neg
roll
icebp
aad
shl
fabs
into
and
out
fucomp
lock
jecxz
fadd
aad
fnstsw
in
in
jecxz
in
idiv
loopne
enter
test
adc
loope
mov
lret
fnstsw
fmulp
fdivp
adc
in
enter
cli
call
out
and
xor
sti
rcl
xlat
lock
sarb
mov
lock
xchg
icebp
lock
std
sti
cmp
xlat
cld
vpsubd
jmp
out
nop
int3
cli
xchg
cld
call
fcmovu
xor
ljmp
clc
filds
hlt
neg
orl
not
das
ret
shl
lock
cli
cmp
in
rol
cld
fadd
add
leave
int3
fucom
orl
repnz
loope
sub
cld
ret
xchg
leave
int
lret
xchg
cmp
mov
out
in
out
ds
xlat
out
iret
mov
mov
in
loopne
call
lret
rcr
int
out
fdivp
rcl
fcmovnb
hlt
cld
out
push
into
mov
mov
cmc
xor
repnz
into
hlt
int
repz
aam
xchg
lock
hlt
and
jmp
rol
leave
xor
fcmovnbe
cli
cmpb
cmp
enter
loopne
leave
std
mov
ror
lock
in
out
fdivrp
std
aad
xlat
repnz
and
ret
push
jmp
iret
xlat
rcl
rcr
lret
push
cmp
aad
and
nop
pop
jg
test
jle
sar
sti
lret
enter
lret
xchg
mov
enter
call
lock
adc
addl
faddl
out
repz
out
cmp
shr
cmpb
cmp
call
mov
int
mov
loope
xchg
test
stc
jmp
repnz
aaa
repnz
jecxz
cld
xchg
mov
int
in
stc
rcr
lock
jmp
ss
aaa
filds
sar
roll
les
out
call
xor
repz
idivb
xlat
adc
test
fucomp
mov
hlt
out
rol
fidivrl
leave
in
iret
sti
cmp
shl
icebp
repz
cmp
jmp
ljmp
or
into
ror
aad
ror
aam
aam
ljmp
test
xor
lea
xor
lret
cli
fldz
in
test
cmp
xlat
filds
nop
lock
into
aas
xor
into
lret
out
xor
fucomp
cli
push
cld
mov
lret
jecxz
and
xchg
rorb
int3
xor
xor
jmp
cld
in
hlt
add
stc
test
roll
out
lds
fcmovb
ror
cmc
fcmovu
sti
shl
fisttpl
loopne
sub
mov
loope
xchg
icebp
shr
cmp
out
cmp
leave
ds
fistpll
repz
aam
out
cld
stc
decl
out
fnstenv
hlt
aad
int3
not
ds
aas
cmp
stc
mov
stc
out
test
int3
out
leave
divb
repnz
int
repz
filds
cli
lea
leave
into
repz
out
leave
loope
idivl
sbb
mov
test
int3
out
mov
jecxz
loope
fcmovnu
div
dec
fucomip
test
loope
sar
sub
fsub
mov
xchg
call
cli
int
in
iret
cmp
and
jecxz
clc
test
hlt
in
orl
das
ret
cld
fdivrl
std
xlat
fcmovbe
fnstsw
inc
test
fsubr
in
cld
mov
jecxz
in
ss
cmp
int3
out
iret
loopne
cmp
icebp
sar
mov
lret
jmp
repnz
lock
repz
imul
cmp
aad
test
xlat
cli
out
jmp
ljmp
cld
sti
cmc
shr
cmp
out
shl
cmc
mov
fyl2xp1
jmp
test
push
pushl
call
jmp
jmp
rol
into
xlat
rcr
fcmovne
lret
pop
xlat
adc
and
jg
test
jle
xchg
mov
int3
repz
repz
cmp
ss
sar
fdivrp
stc
int
fdivr
fcmovb
addb
test
fnstenv
fnstenv
call
cmp
cli
jecxz
jmp
fucomip
shl
test
into
ret
xlat
out
into
int
clc
lret
ror
cmp
xrelease
loopne
mov
xchg
xchg
mov
into
jmp
ss
ret
iret
sar
in
in
int
lock
in
cmc
cmc
leave
xor
in
cmp
cmp
loope
div
cmp
repz
in
ret
std
sub
repnz
xchg
out
stc
aam
fcmovu
imul
loopne
ds
stc
ret
and
idiv
loope
and
sub
jecxz
into
ror
fsubr
das
xlat
ljmp
add
test
int3
loop
int3
test
icebp
out
neg
repnz
std
jecxz
loope
loop
mov
std
sbb
mov
fimuls
sti
in
cmp
icebp
iret
fadd
fiadds
shl
cld
in
lret
rolb
jmp
in
fcom
repnz
idiv
xchg
xchg
call
iret
faddl
lea
repz
aad
cli
xor
stc
fimull
int
mov
xchg
enter
enter
int
cmp
int
out
xlat
shl
stc
out
int3
fsub
fsubr
out
jmp
fisttps
cmp
out
inc
ds
cmp
sbb
clc
pop
mov
test
xchg
xor
in
fcmovne
sti
int3
xlat
sbb
fst
xchg
xchg
aam
jmp
test
fsub
hlt
out
hlt
xor
sti
clc
ss
std
cmp
addl
sub
call
mov
repz
clc
iret
out
int3
ds
leave
repz
sub
test
aad
in
into
loop
mov
repz
xlat
in
rcl
xor
out
lock
cmc
loope
in
enter
ftst
sbb
shr
into
xor
jmp
lock
repz
cli
in
xlat
rorb
iret
iret
leave
xor
ljmp
cmp
cmp
fsub
loopne
sbb
and
xchg
xchg
xchg
ljmp
out
jmp
test
mov
rolb
fldl
out
int3
ljmp
repnz
aaa
aam
fldl
in
out
nop
ss
leave
out
rolb
add
test
push
add
jmp
enter
rcr
adc
lock
jle
add
iret
cmp
sbb
out
stc
mov
test
fimuls
lret
xor
fnstcw
cli
push
cmp
cmp
mov
xchg
fcmovu
mov
in
fdivs
cli
out
lock
aam
cmp
inc
cli
mov
subl
cmp
in
ds
cmp
idiv
loope
test
into
lock
mov
loope
jmp
cmp
cmp
int
xlat
fcomi
cli
fdivr
repz
testb
jecxz
fdivp
lret
in
hlt
enter
in
int
cmp
aas
loopne
test
mov
mov
fsubr
out
mov
fsubrp
xchg
hlt
icebp
into
int3
cmp
out
ds
shl
clc
in
loopne
mov
mov
icebp
jecxz
jecxz
xchg
sub
in
clc
ss
cld
filds
sub
xor
out
ljmp
out
loopne
fidivs
cmp
addb
rcr
into
test
in
rcl
fidivrl
test
fucomp
cmc
in
loopne
icebp
xor
lds
cmp
cmp
sarb
aas
icebp
test
clc
inc
ljmp
int3
shl
xor
into
fnstcw
cmp
not
rcl
cmc
ror
inc
cld
hlt
jmp
jecxz
loope
ret
ss
in
repnz
hlt
lock
in
loope
loope
test
mov
ljmp
testl
in
loope
ret
xchg
cld
adcb
cmp
xlat
fidivrl
fsub
iret
loopne
fcomip
rorb
jmp
in
out
xchg
loopne
aas
stc
lret
rcl
cmp
xlat
cli
lock
out
mov
out
movb
jecxz
adc
fnstcw
xor
idiv
aad
hlt
inc
leave
jecxz
loopne
fcomp
mov
xchg
lock
jecxz
aam
stc
ljmp
int
sar
aad
repz
fdivrp
mov
jecxz
lock
in
xor
neg
cmp
test
mov
or
mov
int
hlt
ret
repnz
vshufps
hlt
cld
in
aam
aam
in
cli
lret
neg
loopne
xchg
aad
xor
cmp
in
fsubr
imul
fadd
repnz
repz
call
fucomip
iret
call
icebp
rcl
fsub
xor
idiv
in
repz
clc
repz
xor
add
jmp
rcl
rcl
aad
mov
ficompl
pusha
add
test
jle
in
cli
repz
mov
mov
fcmove
rorl
int3
jecxz
jmp
dec
aad
cld
fadd
ret
les
loop
xchg
test
xor
idivl
icebp
lret
not
into
repz
repz
cli
xchg
enter
out
out
xlat
in
xor
icebp
jmp
cmp
mov
mov
enter
xchg
ret
iret
xor
out
cmp
aas
sar
repz
rol
xlat
repz
clc
shr
out
xchg
imul
fnstenv
int
out
iret
sar
cmc
rcl
fcomi
xlat
decl
nop
mov
hlt
icebp
iret
xor
shr
cmp
repnz
test
rol
int
mov
xchg
lret
rol
iret
cli
in
sarb
icebp
aaa
movl
int
loop
aam
fldz
les
aad
repz
lock
fiadds
in
test
in
mov
out
cmc
iret
cmp
std
in
cmp
sar
aad
test
roll
test
in
out
repz
stc
jmp
into
cmp
not
mov
loop
std
lret
int
and
xchg
hlt
out
in
sub
icebp
aaa
xor
xlat
rcr
in
addl
xor
lock
in
shl
shl
in
fst
icebp
rolb
xchg
enter
icebp
ss
xor
div
fnstsw
not
cmp
and
fsubp
sbb
mov
stc
ljmp
repz
out
int
lret
in
incb
jecxz
iret
fninit
out
xchg
mov
aad
lret
leave
lret
sarl
fsincos
int3
stc
xor
enter
mov
std
lret
out
jmp
repnz
div
xor
iret
fiaddl
cmp
in
xchg
ljmp
ss
lock
iret
sar
mov
push
in
fisttpll
mov
into
lret
int
cmc
jecxz
jmp
into
int3
fstp
jmp
repnz
sti
fdivr
lock
out
jecxz
ljmp
xlat
lret
int
call
xlat
xlat
fiaddl
loopne
fiaddl
xchg
mov
hlt
jmp
aaa
fucomp
xor
iret
in
addb
not
xlat
mov
mov
loop
xchg
xchg
lea
divb
in
dec
clc
cmp
repnz
repnz
cmp
shr
sti
int3
fadd
mov
jmp
rcl
lret
rcr
ficoms
cmp
jg
test
jle
rorb
clc
enter
call
hlt
repz
in
in
int3
jecxz
in
popl
lds
iret
clc
lret
call
out
cmp
jecxz
adc
test
cli
lret
in
cli
and
lock
int
cli
fcmovbe
jmp
iret
ret
sti
fisttpl
mov
int3
fdivr
icebp
orl
jmp
into
enter
repnz
rcl
loopne
aas
test
in
sbb
and
in
fucomp
mov
aas
out
frndint
iret
call
aam
fsubp
div
out
cmc
enter
int3
jecxz
jecxz
repnz
out
xlat
in
div
jmp
in
ret
neg
sub
out
lock
adc
out
fyl2x
shlb
lock
shl
cmc
vpmulhuw
jecxz
xchg
call
repz
leave
call
in
sti
fsubrp
call
fdivrp
out
fsub
mul
decb
sub
stc
fstpt
out
fcmove
cmc
shr
cmc
loop
cmc
test
in
in
loopne
int
in
leave
fnstsw
out
cmp
loope
std
ret
mov
xchg
jecxz
out
xor
aam
shll
icebp
in
rcr
movb
in
mov
mov
xchg
loop
xor
out
xor
enter
rcr
ret
icebp
or
ret
orb
jmp
shr
jmp
cmp
iret
sti
lret
cmp
cmp
icebp
into
out
fdiv
std
lret
fimuls
hlt
shr
xlat
jecxz
in
int3
ss
jmp
sti
sar
std
shl
xchg
lret
int3
fcoml
divb
call
ljmp
fld1
ljmp
nop
leave
fsub
mov
sub
dec
into
rol
repz
aad
icebp
call
sbb
xchg
rcr
jecxz
loop
jmp
rcl
jmp
add
xlat
ds
jecxz
cmp
fmul
lret
lock
pop
in
icebp
test
sti
sar
sar
aas
loopne
icebp
stc
stc
roll
cld
icebp
call
xor
hlt
cmp
sti
rcr
filds
fdivrl
ljmp
xchg
decl
shr
icebp
call
imul
out
idivb
flds
out
mov
rcl
xor
cld
icebp
aaa
cmp
rcl
idivl
sbb
fcomp
fucom
test
ljmp
sti
inc
add
in
mov
mov
push
jmp
leave
ror
rcl
jecxz
in
addr16
bound
jg
test
jle
lret
in
fcomi
cmp
div
jecxz
adc
aam
xor
ljmp
xor
loopne
cli
icebp
lret
loopne
cmc
neg
mov
std
aad
mov
sti
loope
ss
sub
out
in
xor
jmp
in
les
call
rol
in
mov
cld
in
std
lock
xor
cmp
ret
in
rcr
neg
ds
iret
fincstp
cmp
test
leave
test
loop
xchg
out
ror
leave
xlat
jmp
iret
fistpll
fdiv
xchg
mul
cld
fdivr
xchg
fcmovnb
addb
fisubrl
jmp
rolb
adc
test
mov
cmc
neg
aaa
std
shl
int
xlat
rcr
test
addl
xchg
mov
test
aad
cmc
icebp
rcl
sti
int3
out
iret
out
repnz
int
loope
cld
aad
mov
lret
mov
out
shl
xor
shl
sar
repz
cmp
cli
in
xor
rcr
clc
rcl
leave
out
in
in
int
loop
xor
stc
xlat
not
sarl
cmp
out
mov
loopne
repnz
loope
int
ret
int3
into
repz
out
out
cmp
addl
mov
addb
icebp
cld
in
sar
adc
bnd
ffree
in
in
int3
shl
iret
aad
cmc
clc
rol
out
jmp
lret
icebp
icebp
jecxz
sarl
mul
std
push
out
loope
out
int
leave
leave
out
xlat
shl
xlat
ss
or
stc
sub
or
fimull
addl
jmp
jmp
rcl
fldl
fnstsw
test
rolb
xor
sar
fdivr
cmp
in
or
mov
sar
fdiv
test
out
enter
repnz
rcr
enter
rcl
div
jecxz
xlat
call
xchg
mov
fmul
out
lock
cmp
or
loope
fsubrp
sub
flds
rclb
loop
cmc
sti
call
test
vpminub
jmp
in
sar
hlt
loope
hlt
int3
repz
fdivl
stc
int
test
loope
div
jmp
fsubp
jmp
rol
xor
ret
stc
cli
sti
out
repnz
icebp
cld
cld
stc
aas
stc
addb
out
mov
not
xor
icebp
std
out
stc
sti
loope
test
pop
jmp
into
iret
xlat
xlat
into
xlat
fwait
in
mov
adc
jle
fdivr
and
jecxz
fimuls
lock
std
jmp
out
xor
les
jmp
loopne
iret
in
aad
cli
in
fcmovbe
decl
lret
iret
int
cmc
aaa
aaa
fdivr
cmp
std
fsub
in
sti
cmp
orb
out
int3
lock
ror
hlt
lret
int3
fcomp
idiv
xchg
test
div
div
int
nop
std
mov
out
loop
xor
test
push
idiv
aad
clc
fsubp
sbb
int
loopne
mov
xor
clc
lock
cmc
ss
loop
shl
shl
in
jmp
lret
loope
mov
leave
hlt
lret
out
xor
loop
cmp
test
stc
div
fildl
iret
jecxz
mov
out
out
icebp
repnz
fsubr
cmp
aas
icebp
cmp
jecxz
lret
movl
in
aaa
xor
fdiv
fdivrp
out
fadds
sar
fsubr
loopne
int
loop
in
divb
cmp
sarb
fdivrp
rolb
ret
mov
faddl
lret
jmp
dec
int3
sti
aam
repz
call
lea
iret
clc
hlt
fcom
cmp
rcr
cmp
fdivrp
aam
ret
fcmovnu
enter
fdiv
in
shr
mov
call
lret
fcmovnu
lret
fadd
aam
sti
out
out
ljmp
leave
xchg
nop
repnz
shr
aaa
cmc
leave
out
aad
aad
cmp
loopne
stc
test
in
jmp
jecxz
xchg
mov
rcr
xlat
fprem1
shr
stc
xor
sar
incl
lea
iret
xchg
xchg
into
fcomp
fdivr
fcmovu
std
cmp
loope
test
filds
fildl
nop
fisttpll
iret
clc
repz
aad
test
sbb
loope
cmp
lea
out
xchg
pushl
lret
shlb
cmp
cmp
lds
fldl
loopne
out
in
cs
xlat
stc
fsubr
clc
cmp
ljmp
xlat
and
lret
call
addb
out
xor
call
rol
rcr
test
loop
sub
ror
in
repz
lea
iret
xor
hlt
cmp
int
out
cmp
int
out
std
in
hlt
mov
cli
addb
out
fists
icebp
cmc
xlat
cld
enter
faddl
fiaddl
add
mov
mov
xor
lea
jmp
leave
aad
xlat
fcmovnu
ret
pop
lock
sbb
add
test
jle
shl
mov
mov
in
repnz
xlat
cld
cmp
cmp
hlt
shl
loop
out
sti
shr
lret
shl
jmp
aam
cs
hlt
jmp
neg
rol
aas
repz
stc
loop
lock
loope
rorb
int
cmp
enter
cli
cld
ror
sti
aam
cmp
call
incb
int3
in
leave
in
hlt
sti
shl
call
ror
not
cli
rolb
test
enter
std
rclb
lret
push
repnz
test
aam
div
hlt
loope
loopne
xchg
enter
add
clc
std
hlt
aad
jmp
ret
ss
ds
test
and
int
repnz
loope
aam
call
loope
xchg
flds
and
repz
lret
into
out
in
aad
cmp
rol
repz
cmc
not
mov
leave
mov
not
int3
fprem
shlb
cmp
fcmovu
into
cmp
test
mov
call
cli
loope
xchg
lock
int3
leave
repnz
aaa
int3
loopne
test
test
xchg
jecxz
aas
fdivrp
ljmp
divb
lret
shl
out
cmp
in
loop
ret
fadd
fcmovnbe
out
ljmp
in
clc
ljmp
cld
ljmp
aad
cmc
mov
xchg
faddp
xor
loop
hlt
cmp
icebp
cmc
cmp
xor
ret
xchg
xchg
ror
int
loope
fcom
jmp
xlat
sbb
stc
ret
stc
out
enter
mov
dec
ret
iret
ret
fidivrl
sarb
repnz
aad
in
fadds
jmp
test
in
lock
out
jecxz
shr
fildl
shl
not
not
xchg
fstl
repz
aam
iret
in
inc
lock
in
fst
cld
in
std
call
adcb
clc
xor
idivl
aam
cmc
xor
cld
shl
xchg
icebp
std
decl
test
cmp
rol
fcomi
lret
div
and
ret
fdivrp
sti
mov
xchg
repnz
fxch
call
loope
iret
loopne
xchg
xchg
mov
orb
out
ror
jmp
jmp
out
aad
out
neg
std
iret
in
xchg
decl
add
cli
sar
decl
ret
add
int
ret
int
movsb
inc
push
fmull
jg
test
jle
int3
test
stc
cmp
repnz
repnz
std
jecxz
in
rolb
in
jmp
cmp
int3
cmp
cmp
out
mov
mov
std
test
fcmovne
int
shl
enter
cli
aaa
lret
cmp
cmp
idivb
fdivr
std
jmp
ljmp
repnz
sbb
neg
ljmp
in
test
lret
jecxz
xorl
xlat
xor
shl
incb
fcomi
sarb
fcomi
mov
loope
fucomip
in
rcl
or
shll
call
sar
hlt
test
sbb
jecxz
out
xlat
les
cld
lock
cmc
int
shl
fsubr
add
in
hlt
clc
jecxz
jecxz
cli
addb
cmc
cmp
cmp
cmp
frndint
clc
shl
repnz
hlt
jecxz
mov
fimull
out
loope
sub
in
icebp
fnstenv
enter
sarl
cmc
aam
call
out
fnclex
mov
shl
lret
lret
ljmp
fmuls
int3
out
xchg
xchg
lret
out
sti
out
fxch
test
cmp
test
test
in
nop
out
xchg
test
call
fdivl
loopne
xor
fcomip
jmp
aad
call
xchg
call
out
rcr
cmp
ljmp
out
or
xchg
in
out
rolb
jmp
jmp
flds
ret
enter
ror
into
rcll
clc
aam
cli
cmp
icebp
fsubr
mov
ffree
lret
jmp
xchg
hlt
lock
fdivr
cmp
cmp
fld
out
loop
out
test
call
aad
repz
aam
lret
shr
cmp
cmp
fdivrl
nop
mov
call
lret
ret
jmp
cld
clc
aas
hlt
fcmovne
loop
ret
idiv
not
ret
int3
mov
jecxz
mov
xchg
hlt
ret
enter
enter
in
cli
repz
cmp
sub
test
xchg
enter
in
cli
out
fcmovu
fdiv
xlat
int
lock
fisttps
ljmp
out
out
xor
ljmp
xchg
and
fcmovnu
les
adcb
hlt
xor
in
xorl
add
ret
int3
rcl
ret
fldl
movsb
testl
rol
icebp
ds
shr
jecxz
std
shr
test
mov
fdivs
repz
into
stc
xor
cmp
and
loope
mov
int
call
hlt
repnz
sti
aam
cmp
lret
lret
xchg
cmp
add
sti
mov
test
mov
sub
ret
repnz
fidivs
lret
testl
lock
mov
loope
xchg
in
repz
icebp
jecxz
in
cld
in
clc
xchg
sti
out
xchg
mov
jecxz
stc
leave
call
rcl
fcomi
movb
mov
mov
loopne
xchg
cmc
out
cmp
leave
lret
repz
out
lock
cmp
idiv
xchg
in
nop
xchg
out
loope
shrl
aam
enter
adc
lret
repnz
xlat
enter
out
decl
in
aam
das
xor
aam
int
fincstp
icebp
fcomip
enter
out
int
and
aam
lock
cmp
iret
cld
aad
cmp
shl
fcmovnu
ret
mov
cmp
and
lock
jmp
jmp
aam
out
fdiv
test
in
fsubp
fucomip
call
fxtract
sti
cld
test
loope
in
loopne
aas
fiaddl
jmp
mov
into
int
idiv
jmp
leave
lret
jmp
repz
test
mov
fdivrl
jmp
mov
ror
aad
xor
fidivrl
fsub
fstpt
fmul
sti
clc
out
loopne
std
rol
in
fnstcw
mul
sti
cld
ds
std
out
ds
out
loopne
mov
lret
shl
lret
leave
cmc
into
lret
aam
aam
int
ret
vpaddd
shr
xchg
loopne
in
int3
repnz
imul
cmp
loopne
fscale
std
roll
cmp
xor
ss
hlt
fucomp
fcomp
aas
repz
jecxz
out
std
nop
loopne
std
into
xchg
call
repnz
cmc
jmp
in
rcl
imul
add
mov
in
nop
in
xchg
int3
jmp
lret
in
icebp
repz
stc
lret
aaa
repz
lret
fdivrp
fdivr
lea
xor
cmp
fcmovnu
int3
repnz
in
in
icebp
sbb
repnz
cld
xchg
repnz
lret
fincstp
fxch
cmp
sub
loop,pt
loopne
pop
add
jmp
fadd
aam
fst
fcoms
sbb
jg
sti
mov
jle
add
test
rcr
and
xor
jmp
shl
fdiv
shl
loope
icebp
aas
std
out
fcmovnb
out
in
out
test
cmc
and
idiv
int
lock
sti
jmp
cmpl
xchg
xchg
les
xchg
neg
out
shl
fdiv
in
cmp
sub
shl
call
leave
xchg
xchg
fdivp
xchg
iret
xor
lret
out
cmp
ror
stc
out
clc
out
call
aam
sub
aam
in
out
xor
hlt
cmp
call
lock
imul
iret
aad
rcr
enter
sti
lret
rcr
ret
repz
sub
xchg
in
xchg
leave
aad
xor
rcl
std
rol
rolb
fisttps
jecxz
xchg
icebp
lds
int
fxch
shr
repnz
sar
test
clc
add
mov
mov
rol
stc
ss
cmp
sarl
icebp
cmp
aam
jmp
jecxz
leave
test
mov
shll
cmp
leave
lret
cli
idivl
out
loope
cmc
sbb
xchg
jmp
movl
shll
sti
xor
repz
into
fcmovnbe
xor
cmp
std
int
loope
in
ljmp
jecxz
fdivrs
ss
out
iret
cmc
out
in
shl
xchg
xlat
out
out
jmp
xchg
lret
aad
sub
in
cmp
addb
fcmovb
in
fstp
lret
icebp
xchg
aad
out
lock
cli
ss
sarb
fdiv
in
fstp
in
or
out
lret
in
icebp
decb
sub
cmc
fstp
xchg
call
ljmp
nop
fldl
clc
lock
cmp
lock
shl
loope
cmp
xlat
ljmp
inc
xchg
sar
sar
cmp
cli
cmc
sar
clc
xlat
test
out
test
call
rcl
ret
repnz
xor
hlt
hlt
in
rcl
xlat
lock
std
call
fcmovnb
test
loope
in
jmp
shl
in
fidivrl
cmp
call
addb
ljmp
rcr
xchg
xor
lret
xor
leave
lret
jecxz
fstp
cmp
roll
enter
in
xchg
jmp
fstpt
aam
std
lret
loop
incl
loopne
iret
ljmp
pop
leave
ret
push
mov
sub
xorl
jmp
int
int
leave
push
hlt
cltd
loope
stos
mov
fiaddl
jle
call
cs
icebp
add
icebp
loopne
hlt
mov
lret
xchg
out
subl
lret
out
cmp
lock
loope
fdivrp
loop
mov
mov
mov
fstl
ljmp
aad
in
cmp
ds
xchg
enter
xchg
out
sub
int
mul
xor
aam
cli
cmc
loope
cmp
fcmovbe
test
and
filds
cmc
int3
cmp
cmp
hlt
out
clc
xor
rcl
jecxz
mov
leave
in
xchg
aaa
neg
cs
cmp
iret
clc
repz
mov
mov
in
in
int3
into
xchg
ret
stc
hlt
idiv
fnstenv
jmp
cmp
rolb
fsubr
out
mov
sub
aaa
enter
fincstp
fxch
xor
hlt
jecxz
mov
ljmp
rorb
xor
cmc
loop
cli
iret
lret
lret
cli
ljmp
out
fdivp
aad
out
movb
lock
das
xor
cli
int
idivl
xchg
hlt
loop
mov
int
int3
loope
lock
not
mul
stc
sarl
cmp
shr
cmp
repz
stc
in
out
shl
lret
idivl
clc
aam
xor
cld
cmp
cmc
cmc
shr
aam
out
out
fcompp
mov
out
loope
loop
enter
rcr
into
xor
std
out
shl
shl
fsubr
lret
ljmp
call
iret
aaa
shll
clc
out
lret
idivl
aad
xor
ds
out
ffreep
sti
call
sti
enter
jmp
aad
int3
out
ror
icebp
lret
int
loopne,pt
fdiv
leave
cmp
test
hlt
mov
mov
call
enter
xor
rol
fadds
fcmovnb
fsubr
out
stc
int3
icebp
out
aam
call
xlat
cmp
icebp
fcmove
clc
xlat
fiaddl
fisttpll
icebp
rcl
in
repnz
cmp
fsubr
repz
cmp
cli
sar
call
leave
mov
xchg
xchg
imulb
rcl
jmp
enter
in
xchg
rcr
in
hlt
fadd
nop
mov
shlb
mov
add
mov
mov
incl
jmp
int
ret
rol
fcmovnu
jecxz,pn
stos
wrmsr
mov
aaa
jg
fiaddl
jle
mov
ljmp
cli
out
iret
repnz
into
xchg
aad
adc
enter
shl
xchg
xor
out
out
sarb
hlt
aam
lock
stc
test
cli
decl
lret
mov
leave
rorb
in
xlat
cmc
xor
test
jmp
test
mov
fisttps
xlat
fucomp
shl
repnz
mov
in
stc
lock
jmp
lret
mul
int
lret
call
icebp
pushl
fcmovu
int
xchg
clc
repz
int3
fsubrp
into
aam
roll
loop
out
lret
mov
adc
ljmp
xlat
inc
cmp
shl
xchg
mov
inc
in
ljmp
loope
cmp
aaa
xlat
aam
ret
xchg
mov
clc
fadds
mov
mov
div
ret
aaa
xor
lock
sarl
aas
or
lock
iret
jmp
loop
mov
in
fdivs
jmp
cmp
aam
roll
dec
out
int3
in
cld
int
repz
iret
out
int3
jmp
test
xlat
std
out
ljmp
aad
aam
cmc
in
lret
ss
fcmovnb
loopne
repnz
sti
mov
out
in
xchg
decb
leave
hlt
call
stc
ret
sti
stc
fld
ljmp
mov
jmp
mov
repz
sarb
hlt
fdivp
cmp
test
aam
mov
leave
nop
out
ror
lret
fxch
int
out
call
ret
incb
xchg
xchg
jmp
enter
enter
rcl
cmpb
shl
std
cld
in
lret
loop
xchg
leave
ss
int
aaa
lret
cld
fcmovbe
jmp
cmp
aam
xlat
fsub
int3
std
int
rcr
jmp
xor
repnz
fstpt
hlt
or
xor
testb
cld
cld
cli
ljmp
xlat
fadd
repnz
iret
fcmove
shl
xlat
roll
movl
movl
mov
mov
sub
xor
mov
add
jmp
int
ret
aam
fstp
fstl
fmull
add
jle
add
enter
add
pop
into
divb
icebp
sarl
out
call
fcom
inc
loop
fcmovu
ljmp
loopne
std
incb
shl
ror
sar
lock
ds
cld
cli
adc
ljmp
mov
xor
xlat
fmulp
cmpb
out
test
loope
shl
or
mov
in
in
mov
icebp
sub
cmp
xlat
clc
std
lret
loop,pt
fstp
loop
hlt
lret
test
into
out
aad
out
jmp
clc
out
sti
in
clc
mov
fcmovu
cmp
jmp
enter
mov
in
xor
xlat
in
int
sti
rcr
into
in
cld
repz
test
add
lock
lock
fldl
mov
sti
iret
loop
int
jmp
test
in
rcr
iret
jmp
int
shr
aam
testb
repz
jmp
ret
leave
enter
cmc
cmp
lret
lock
lock
hlt
lret
test
xchg
out
out
aam
fidivl
into
shlb
ds
aad
ds
cmp
roll
in
loope
out
sub
cmp
aam
leave
aas
sarl
sarl
cld
fdivr
std
sti
iret
ljmp
out
in
repz
shl
cmc
lock
enter
enter
enter
loopne
call
cli
enter
cmp
cmc
into
sbb
mov
lock
loop
das
aad
clc
cmp
cmp
aam
aam
clc
lret
int3
loop
icebp
iret
hlt
rcl
mov
shl
clc
jmp
int3
repnz
or
movb
jmp
ror
xor
jmp
into
cld
xchg
test
cmp
loop
into
icebp
iret
in
loope
lock
xor
shl
cmp
clc
shl
fst
hlt
lret
fiaddl
out
pop
clc
hlt
aam
jmp
roll
mul
iret
out
loope
ret
or
les
out
cmp
sub
roll
mov
clc
jbe
add
or
mov
xor
mov
movzwl
or
mov
add
mov
mov
decl
xor
add
sub
mov
xor
add
adc
jmp
rcl
rcl
dec
mov
neg
pop
cwtl
lahf
jb
jg
fiaddl
jle
test
out
icebp
in
in
fprem1
lret
sti
xor
leave
jmp
out
shl
stc
mov
cld
addb
out
cli
aam
ljmp
sar
hlt
adc
mul
mov
mov
ret
fsubp
mov
xor
out
frndint
cmp
fcmovu
cld
in
int3
lret
mov
fcomi
xchg
xchg
out
cmc
loope
out
cli
fldl2e
aaa
ds
sarb
loope
aad
shl
fldl
xchg
loopne
rorb
cmc
call
jmp
fildl
and
mov
mov
jmp
aad
jmp
lret
fcmovnbe
cmp
loopne
imul
fld
lret
loopne
in
jmp
xor
lret
fcom
out
or
cmp
ret
loopne
cld
fsubr
fcmovb
mov
shr
and
in
cli
fcmovnbe
fidivl
aad
rol
not
xchg
clc
xlat
leave
enter
mov
lret
repnz
fcmovu
mul
cli
rcl
repnz
clc
mov
test
lret
hlt
out
aam
repz
fldpi
cmp
int
frndint
cmc
test
aas
cmp
jecxz
sarl
idiv
cld
lock
out
in
in
clc
lret
stc
cli
std
in
adc
imul
clc
vpand
clc
mov
mov
in
jecxz
cld
jmp
xlat
in
cmp
rol
stc
ljmp
fsub
iret
addl
iret
in
stc
cmp
lock
mov
aas
les
ret
faddp
xor
ds
sti
int
ffreep
shr
xchg
in
fucom
ljmp
shl
ljmp
ret
fdivrs
std
xlat
sti
xor
divl
shr
fldl
idiv
xor
mov
cmp
mov
repnz
in
fcomip
int3
int3
jecxz
fmul
idivb
jmp
in
fdivp
cmp
jmp
les
mov
iret
repnz
ret
repnz
cli
call
test
out
aam
loope
mov
cld
loope
out
jecxz
in
std
mov
xor
leave
jmp
in
cli
shl
aad
inc
cld
rolb
cmp
sub
jmp
ror
rcr
ror
js
cmp
jg,pt
fiaddl
jle
roll
in
xchg
repz
pushl
repz
aad
sar
fchs
std
aam
sbb
cmp
rol
shl
fsubr
loopne
test
ret
jmp
idiv
cmp
int3
sti
aam
sti
sbb
loopne
leave
out
adcb
shl
lock
sbb
sarl
sti
loop
loope
shl
repz
int3
or
ficoms
fsubr
xor
clc
xor
ret
fdivr
xlat
shr
mov
fcmovnu
jmp
call
fneni(8087
jecxz
lret
fnstenv
sti
xor
lock
cmc
fcmovbe
dec
enter
jmp
in
aad
rcr
jmp
sbb
repnz
test
loope,pt
int
in
fstl
leave
ss
jmp
aam
sti
ror
sar
sar
repnz
ret
loopne
test
test
xchg
aad
lret
cmp
shr
ljmp
xlat
out
sbb
faddl
mov
fldl2e
out
les
test
loope
addb
call
into
out
xchg
jmp
cmp
rcr
cmp
lret
in
inc
test
in
not
cli
or
jmp
out
in
leave
out
cld
aad
clc
ds
lret
test
mov
rcr
call
fimull
rol
repnz
rcl
icebp
loopne
clc
xor
enter
xlat
movl
jmp
xor
in
in
out
fcmovnu
sbb
sti
mov
enter
sub
xor
int3
clc
div
stc
repnz
xor
cmp
roll
clc
lock
lea
cmc
fnstenv
repnz
fdivs
cmc
loope
fcomip
repnz
in
shr
rcr
repz
out
aaa
xlat
imulb
cmp
icebp
sub
push
iret
shl
in
aad
xchg
dec
in
xchg
jmp
out
neg
lret
cld
rol
cmc
rol
call
sub
into
loope
xchg
idivl
repnz
adc
xor
xchg
idivb
decb
cld
loopne
mov
jecxz
lret
xlat
out
shr
fcomi
xrelease
or
movl
movzbl
xor
movl
mov
add
mov
movl
movl
movl
adcl
mov
mov
sub
xor
mov
addl
jmp
lret
aas
ret
aad
fldenv
push
sub
stos
sarb
add
out
in
shl
fscale
stc
loopne
addl
ret
jmp
cmp
lret
cld
call
out
out
in
cmp
sbb
cli
dec
ljmp
repz
sti
aad
fdivrs
cmp
ds
ror
int3
in
movb
jmp
cmp
loope,pt
aas
cld
ds
shr
mov
std
repnz
mov
nop
out
ror
sti
into
in
enter
into
out
fcmovne
cmp
cld
test
mov
mov
out
cmp
out
xchg
int3
loop
jmp
call
fiadds
leave
fcmovb
in
enter
fisttps
cmp
lock
stc
lock
aad
leave
xchg
loope
in
loop
mov
xor
xor
ret
jmp
ds
lret
cmc
test
loop
stc
ljmp
in
out
dec
icebp
out
in
mul
ror
fsubrp
dec
flds
out
mov
mov
loope
stc
hlt
repnz
aam
int
repnz
in
into
call
std
leave
mov
int3
lret
call
nop
iret
enter
in
out
in
cmc
xor
cld
repnz
stc
fcomp
lret
fdivrp
int
repz
in
out
out
ret
out
cmp
jmp
fidivrl
shl
sbb
lret
jecxz
nop
and
aad
repnz
test
in
stc
out
aas
clc
out
cld
sub
enter
mov
shr
iret
xchg
lock
rcr
int
icebp
int3
cmp
sti
idivb
iret
std
xchg
sub
int3
cmp
lret
call
ret
sti
repz
and
add
int3
test
xchg
aad
int3
jecxz
shl
fidivl
fninit
xor
addb
mov
mov
sub
xor
fxch
shlb
dec
sbb
rcl
test
sti
out
jmp
mov
mov
rolb
int
not
clc
sarl
jmp
cmp
sti
loope
clc
fsubr
mov
in
jmp
std
int3
cli
cmp
xor
cli
cmc
inc
clc
test
mov
out
rclb
repnz
xlat
in
xlat
repnz
movl
cmp
movl
je
push
movl
jmp
mov
mov
andl
sub
orl
mov
xor
add
jmp
rcl
lret
fcmovnbe
lods
pop
mov
adc
ret
jg
fiaddl
jle
xlat
sarb
sti
loop
flds
in
fdiv
faddl
hlt
call
stc
lret
int
cmp
jmp
addl
ret
leave
fst
lock
fstpt
in
mov
lds
xchg
faddp
ror
into
in
divl
repz
jecxz
mov
ljmp
lret
in
notb
aaa
out
icebp
ror
leave
clc
sub
addl
fcmovne
loopne
mov
iret
hlt
lret
jmp
repz
fildl
mov
loop
incb
into
xor
xor
hlt
cld
shl
cld
cmp
cld
out
fadds
ffree
lret
xchg
xchg
jmp
xor
cmp
std
ds
fcomp
clc
hlt
rcl
stc
out
mov
xor
jmp
sti
ss
hlt
sarl
cld
fucomi
loopne
jecxz
shll
cs
out
sti
lret
cmp
out
fstp
hlt
xchg
xchg
orb
dec
lock
out
fcmovnu
cld
cmp
clc
fldl
in
jmp
enter
xchg
loope
cmc
in
ss
cmc
aam
ret
mul
xchg
jmp
fiaddl
in
out
jmp
iret
aam
fld
xor
ret
jmp
repnz
rcr
xlat
test
into
jecxz
lds
sti
repnz
cmp
iret
out
loop,pt
rcr
mov
jecxz
xchg
in
adcl
loopne
fucomi
sarb
sti
mov
mov
loopne
mov
cmp
not
sti
sar
sar
aas
ret
mov
in
call
leave
lret
in
loopne
icebp
sar
cmp
fmul
testb
and
xchg
xchg
xchg
nop
xchg
nop
mov
out
xlat
call
ds
xor
fdiv
repnz
out
popl
xor
int3
xor
cmp
call
repnz
xchg
ds
out
loopne
out
fcmovnu
icebp
ljmp
cmp
cli
jmp
fcom
rcr
fstp
fnstsw
fmull
mov
lds
fiaddl
jle
fcmovne
das
cmc
stc
rolb
aad
ret
mov
into
mov
cld
jecxz
mov
xlat
out
xor
shl
cmp
ret
ljmp
nop
enter
std
hlt
sub
lock
fcomip
icebp
fst
rol
icebp
enter
xlat
sub
out
ljmp
aad
sub
fnstsw
sarb
in
hlt
xor
cmc
int
lock
fdivp
fstp
ljmp
lock
jmp
iret
jmp
jecxz
clc
out
stc
mov
out
ljmp
int
hlt
repnz
icebp
sarl
std
rcl
xchg
rcl
jmp
in
lret
jmp
loopne
loope
fbstp
jecxz
shll
in
cmp
cmp
rcl
ret
ret
enter
in
lds
xor
out
fnstcw
sti
lret
add
sarb
sub
testb
mov
xor
aad
in
xlat
into
xor
out
jecxz
test
out
test
int
loope
aad
ss
fxch
fldpi
out
rol
frndint
clc
repnz
aam
out
leave
mov
test
into
jmp
xor
lock
xlat
icebp
lret
cmp
int3
repnz
icebp
ret
lret
fcmovne
in
loope
ljmp
lock
int3
cmc
cmp
cld
sar
les
fcmovne
in
repnz
hlt
xchg
shr
xlat
fucomi
lret
icebp
xor
repz
mov
jmp
in
xchg
repz
repnz
clc
ljmp
test
sti
ret
test
cmp
loop
cli
loop
loop
in
test
rol
xor
clc
lret
fcom
rol
fcmovnbe
fdivrp
aas
mov
mov
test
iret
xchg
rcl
out
icebp
lret
lock
aad
int
roll
cmp
iret
out
icebp
fsubrp
shl
shr
in
shlb
in
ds
addb
fimull
out
lret
jmp
cmp
jecxz
xor
jmp
in
clc
in
cmp
fdivr
loopne
fucom
test
fucomip
out
call
sarl
push
ss
ret
mov
mul
sti
fisttps
jb
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
jmp
ror
aam
frstor
rcll
test
jg
fiaddl
jle
int3
aad
fsubr
lret
cld
int3
shl
iret
rcr
std
aam
ljmp
mov
aad
aaa
xor
call
ljmp
in
hlt
out
fsub
mov
std
xchg
imul
into
leave
in
clc
iret
fcmove
fstpt
int
ds
sbb
aad
loopne
mov
int
in
das
lock
rcl
sti
call
shl
aad
cmp
cli
fsubp
testl
aam
sti
xor
leave
fbstp
lock
fiadds
in
rorl
xlat
hlt
cmp
fnstcw
rol
std
loop
xor
cmp
sbb
repnz
into
aam
icebp
ret
fnstenv
repz
clc
rol
enter
jmp
out
lret
out
xchg
in
cmc
rcl
icebp
in
xor
cld
sti
int
fptan
sar
iret
sub
cld
fucom
addb
lret
ret
cmp
fucomp
fistpll
cli
hlt
ljmp
repz
loope
cli
jecxz
int
mov
aam
cmp
repz
loope
hlt
test
call
rol
xchg
in
out
or
orl
stc
aaa
lock
sti
std
sti
out
icebp
mov
jecxz
sti
ror
cmc
ffreep
shr
lret
out
out
clc
xor
shl
xchg
add
call
lret
test
fcmovbe
shll
loopne
fdivrs
and
shr
fsubp
xchg
fsubr
fisttps
xor
cmp
leave
cmp
ror
cli
ret
stc
frstpm(287
jmp
mov
out
cld
test
rorb
xor
cmp
ffreep
cmp
out
fcom
leave
test
fxch
call
hlt
fidivs
int3
lock
out
aaa
cmp
hlt
cmp
ffreep
test
xor
fdivrp
iret
or
xchg
aad
in
xlat
repz
cmp
fucomi
cmp
fxch
out
lds
ret
fisttps
sub
enter
out
aaa
sbb
sub
sbb
test
in
cld
sbb
loope
das
xor
cmp
clc
ds
sti
sbb
aas
inc
or
xchg
jecxz
jge
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
xor
xor
add
adcl
add
imul
mov
or
mov
sbb
mov
jmp
rol
aam
aad
aad
xchg
mov
add
cwtl
sbb
jg
fiaddl
jle
iret
xchg
aad
lret
cld
out
cmp
out
xchg
lret
fcmovne
in
and
int3
lock
in
aam
aad
xor
in
test
cmpl
shl
in
cld
fimull
out
lock
fdivr
stc
hlt
jmp
cmp
ret
xchg
fiadds
repz
mov
jmp
sarb
xlat
lock
out
out
loop
in
cli
in
out
lret
clc
rol
xlat
sub
ss
loop
xchg
filds
mov
test
xchg
jecxz
lret
fcom
in
fdiv
aam
in
out
rolb
clc
aad
fucomp
cli
fsubrp
lret
loopne
out
sub
in
int
int
ljmp
out
rcr
fsubr
stc
sbb
mov
shll
shl
repnz
cld
jecxz
ffreep
cmp
leave
add
iret
in
test
int
mov
shr
in
icebp
stc
lret
ljmp
shl
loope
out
xchg
call
iret
out
test
xor
shl
cmp
ljmp
in
rorb
fcmovu
xchg
incl
aas
rcl
into
sub
testb
hlt
fcompp
test
fldl
clc
hlt
loop
in
shll
cld
fidivs
fcmovnu
movl
fsubrp
xchg
hlt
in
out
lock
repz
cmp
sti
test
aad
inc
loop
aas
lea
aad
jmp
jmp
aam
fnstcw
repnz
out
stc
fdivrp
mov
mov
adcl
cli
fcomp
and
ret
enter
movb
mov
xlat
ss
clc
aad
aas
ds
fpatan
loope
shl
xlat
cld
fcmovnu
xlat
ret
xchg
nop
out
fyl2xp1
iret
fidivl
faddl
loop
repnz
fmul
mov
lret
mov
mov
jmp
int
cmp
int3
lret
sarl
xor
rol
faddl
jmp
orl
int3
out
int
shr
cmc
ds
out
out
sbb
sub
cmp
movl
jmp
rcl
ret
fucomp
insb
fstps
inc
adc
jg
fiaddl
jle
add
mov
aam
ror
hlt
icebp
leave
div
sarl
repz
cmc
xchg
loopne
test
xor
ror
fyl2x
enter
fucomp
repnz
xchg
lds
xchg
in
idiv
lret
bnd
in
xor
icebp
icebp
rorb
aas
test
lret
test
xor
int3
bnd
std
cmp
sar
stc
loopne
out
mov
fcomp
xchg
hlt
int3
jmp
out
loope
ljmp
cmp
in
icebp
loope
fcmovnbe
xchg
int
cli
lret
jmp
jmp
lret
ljmp
out
cmp
testl
incl
rclb
aaa
cld
fnstcw
icebp
rcl
ds
jecxz
lds
nop
icebp
fbstp
out
lret
xlat
aad
roll
aam
fdivrp
mov
ljmp
fcmovne
idivl
fldl2e
lret
roll
aad
fxch
cmc
cld
leave
out
dec
sub
rorb
rcl
int
loopne
cmp
cmp
lds
mov
jmp
out
jmp
xor
cmc
ljmp
aam
out
out
jmp
out
fst
mov
imul
not
out
cmp
mov
lret
test
in
mov
test
xor
fdiv
sarb
cmp
fdivr
loop
out
div
mov
hlt
hlt
int3
hlt
das
cmc
xor
sarb
cmc
ljmp
test
mov
std
mov
int3
jecxz
out
orl
aaa
out
cmp
repnz
mul
stc
sar
in
xchg
mov
ljmp
int
fadd
aam
out
jecxz
loope
cld
jmp
orb
ret
out
int
shl
not
xlat
sar
loopne
aam
clc
fimull
xchg
mov
out
ss
repz
in
in
imul
cmp
in
out
iret
out
loopne
fadds
cld
cld
jmp
leave
out
in
xor
fcmovb
call
rorb
add
add
add
sbb
add
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
orl
xor
add
movl
jmp
mov
notl
mov
xor
xor
add
add
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
sub
add
add
imul
jmp
into
ret
rcl
aad
aad
push
pop
movsl
and
push
into
jg
fiaddl
jle
out
fchs
int
fmul
xchg
rol
ss
out
icebp
xor
rcr
int3
cmp
repz
test
test
enter
out
mov
loope
add
jecxz
sarl
enter
fdivp
or
loopne
test
mov
call
cmp
out
out
ror
leave
aam
aad
repnz
mov
icebp
repnz
loop
stc
out
cli
jmp
jmp
in
out
ss
shl
call
cld
int
shl
jecxz
hlt
iret
shl
clc
jmp
idivl
loopne
test
std
ljmp
fsub
in
jmp
leave
ret
ror
imul
enter
fdivr
stc
out
movl
icebp
subl
fcmovne
xlat
loop
ret
fstpt
loop
fsub
in
loop
lea
das
ss
sti
xor
cmp
jmp
test
clc
xchg
mov
imul
lret
int3
int3
out
jmp
int3
std
test
lret
lock
flds
cld
test
rcr
in
iret
shr
loopne
repnz
jmp
or
lret
ret
fmul
rcl
fdiv
rcl
lret
orl
xor
out
cmp
cmp
fnop
cmp
aad
mov
sub
xchg
rolb
aad
xor
std
cmp
cmp
test
fcmovb
rcr
fcmove
xchg
xchg
xchg
xor
out
enter
loope
xor
cmp
std
ret
mov
mov
test
jecxz
rcll
in
sarb
or
cli
int
cmp
mov
fcmovnb
sti
in
out
std
xor
xor
jmp
out
clc
roll
out
lret
in
clc
jmp
mov
fistl
sub
icebp
out
fdivr
call
aam
icebp
test
test
loope
fmull
iret
in
loop
sar
xlat
faddp
cmc
lock
icebp
cmp
aad
icebp
xchg
cld
std
flds
shl
fmul
out
sti
sar
int3
sar
loopne
fcmovu
stc
fmuls
leave
loop
in
icebp
aam
in
int
lret
fucomi
cmp
cmp
jmp
testb
cmp
jmp
rcl
aad
loop
pop
sbb
xlat
jg
sarl
fiaddl
jle
cmp
ffree
flds
mov
xor
cmc
sar
lret
out
into
in
sub
in
shl
mov
leave
fsub
mov
lock
xlat
out
icebp
cmp
idiv
idiv
jmp
fdivp
leave
loop,pt
leave
lock
test
adc
xor
iret
in
call
shl
in
cmp
jecxz
sar
loopne
out
lret
out
shl
out
cmc
cmp
jmp
cmp
fiadds
rcl
loopne
fsub
xchg
xchg
push
clc
fcmovbe
hlt
cmp
fidivrs
xlat
sarb
fdivrs
in
push
lret
loop
enter
jmp
xor
lret
in
sti
clc
fxch
stc
cld
push
out
std
test
clc
testl
call
call
clc
testb
jecxz
fcmovb
repz
jmp
lret
loopne
in
hlt
in
out
xor
lret
in
in
fdivr
aas
aas
mov
loop
f2xm1
fucom
cmp
lock
stc
xor
vpsubw
fsub
cmp
icebp
cmp
mov
cld
orb
shlb
idivl
loop
fnsave
in
fcmovu
loopne
mov
lret
fimull
aam
out
out
cld
ljmp
lock
aaa
sti
out
aad
faddl
xchg
int3
xor
fsubr
jmp
icebp
aam
loope
stc
loope
call
in
jmp
ljmp
rol
out
cmc
fdivr
stc
aam
out
sti
out
testl
out
iret
jmp
out
jecxz
xor
in
into
repz
int3
ds
fcmovnb
repz
addb
call
jmp
aad
jmp
int3
cmc
fistpll
xchg
xchg
fsub
call
lock
xchg
repz
sarl
cmp
cmp
sarl
ljmp
stc
std
lea
mov
out
out
rcr
xor
ror
xlat
repz
fcom
loop
aas
addl
orl
out
fnstcw
std
cmp
fdiv
std
shl
aam
cli
mov
mov
stc
repz
call
aad
das
fucomp
cmp
into
mov
negl
jmp
enter
fstp
int
inc
dec
sbb
scas
pop
mov
jg
fiaddl
jle
into
and
cmp
hlt
int
testl
xor
lret
out
out
cmp
test
cmp
out
out
into
into
lea
xor
fldl2t
fcmovnbe
repnz
lock
fsin
iret
fxch
leave
add
ret
cmp
icebp
in
fdivrl
lret
icebp
out
cmp
cmp
loope
cld
fcmovne
shr
loop
lock
fsub
rcr
cld
ror
out
rol
sub
xor
jmp
cld
test
xor
jmp
lret
fcmovb
out
addb
aad
sar
xchg
lret
lret
jecxz
out
xor
shr
xlat
shl
fcmovu
repz
rol
sti
lds
xor
ffreep
xor
imulb
xlat
fsub
cmpb
aad
cmp
idiv
in
xchg
xchg
adc
xor
ss
call
cmp
fdivp
in
loop
loop
cld
loope
int3
xchg
out
int
xchg
loopne
shl
imul
ljmp
fsub
xchg
std
ret
ret
enter
icebp
incb
fcmovbe
in
cmc
in
fcmovbe
hlt
xor
out
xchg
in
sar
enter
lret
jmp
loopne
ret
into
stc
fnstenv
aaa
fprem1
shl
aad
adc
aad
vshufps
mov
into
test
aaa
fxch
cmp
ss
cmc
loope
fdivr
aas
enter
lret
mov
in
sti
out
fcomip
out
int3
xor
jecxz
aaa
int
icebp
aad
lret
fdivs
hlt
icebp
fisttps
mov
xchg
into
cld
in
lock
aam
fidivrl
loop
aam
xlat
out
cmc
out
in
mov
cmp
hlt
out
fidivs
lret
mul
cld
cld
add
xchg
xchg
ljmp
shl
cmp
int3
jmp
aam
rcl
std
std
cld
stc
enter
lret
lock
in
into
not
cmc
sti
cmc
int3
lock
fxch
cli
cli
test
std
loop
mov
loop
xchg
div
shll
jmp
repnz
out
in
ret
rcl
and
fmuls
div
sub
in
lret
jmp
fistpll
fcmovb
add
sti
jbe
add
xchg
add
add
add
sahf
add
fsubr
rcrl
add
add
adc
mov
mov
movl
jmp
aas
mov
fnstcw
jae
ja
inc
add
jg
fiaddl
jle
xor
in
into
sar
out
enter
leave
cld
jmp
int
out
jecxz
std
shr
fdiv
cmp
xlat
aad
xlat
jecxz
in
out
cli
leave
mov
out
in
jmp
fcmovne
hlt
neg
cli
out
fadd
cmp
std
aam
loop
dec
xchg
in
xchg
test
into
ljmp
aaa
in
sti
adc
cmc
cli
fcmovu
xlat
cli
fpatan
fxch
enter
mov
in
fcomi
stc
inc
push
rcr
aas
aam
ret
jmp
rol
nop
xor
rcr
cmp
lock
fdiv
enter
out
div
test
loopne
mov
shr
repnz
cmp
cmp
icebp
fbstp
rcr
out
xlat
cmp
in
jecxz
in
out
mov
loop
into
sti
rcr
repz
test
shl
cli
leave
shl
aad
fcmovne
ror
icebp
test
xchg
ror
in
ss
fyl2x
idiv
jmp
fsubp
loopne
ror
sti
xor
out
mov
lret
clc
xlat
shl
int
in
fcmovnb
fsubr
aas
aad
cld
rcr
mov
in
xchg
cld
mov
ljmp
into
fldl2t
incb
aam
lds
out
out
loopne
out
test
xchg
aam
xlat
loope
in
out
cmp
aad
mov
std
in
cld
in
jecxz
xchg
in
out
cs
out
fildl
fcmovnb
cli
jmp
add
fmull
cmc
fmul
std
in
int3
cmp
cmp
loope
xchg
loop
xlat
fsubrp
mov
int
repz
int
cli
int
and
fld
cmp
ret
fcmovnu
shr
test
int
into
xchg
in
xor
into
call
std
sti
test
fucom
fiaddl
int3
mov
rcl
shl
xor
ror
jmp
aam
fiaddl
xchg
jecxz
and
fistl
ror
in
xor
in
ljmp
imul
ffreep
loope
hlt
fiadds
mov
mov
xchg
sub
in
hlt
out
cmp
hlt
out
ret
incl
leave
ljmp
fcom
xor
xorl
xor
jmp
aam
mov
int
rol
repnz
jle
mov
jle
add
cmp
xlat
enter
cmp
ret
out
repnz
xchg
mul
mov
xlat
cmp
divl
call
cmp
repz
jecxz
test
cld
xlat
jmp
jecxz
mov
into
out
ror
iret
aam
xlat
std
fxch
fadd
aad
fdivr
flds
jmp
hlt
in
call
enter
roll
xchg
out
fcom
mov
lds
rcl
in
test
fnsave
into
jecxz
out
fdiv
xor
lds
loop
mul
lret
jecxz
loop
test
out
cld
int
fcmovne
ret
test
aam
cld
mov
xchg
iret
inc
in
xor
aad
cmp
repnz
and
idiv
xchg
out
decb
shr
shr
ljmp
fmulp
icebp
xchg
hlt
sti
clc
clc
loopne
in
cmp
leave
lret
cmc
xchg
into
lock
call
shlb
sarl
sti
std
leave
jecxz
fdivr
ljmp
int3
loop
fcomp
xlat
jecxz
cmp
out
aas
jecxz
loop
mov
and
decb
xor
lock
xlat
repz
loope
lock
ffree
loop
cli
in
sti
fmulp
leave
call
xchg
jmp
ljmp
icebp
int3
loope
loopne
les
in
fisttpll
jmp
shl
out
fst
into
loop
loopne
aam
addb
mov
in
xchg
mov
ljmp
sub
xor
in
hlt
mov
cli
cmp
sti
enter
shl
int3
into
cmc
adc
fdivrl
cld
ljmp
aad
lret
int
shr
shl
cmc
out
rcr
out
xchg
fsubp
iret
cli
vfrczsd
call
leave
std
repnz
repnz
mov
loop
iret
repz
lds
out
fsubr
sti
loope
cld
out
loope
rcr
fst
sti
out
flds
jecxz
lret
loope
shll
cmp
ds
xrelease
out
movl
mov
stc
xor
or
sub
add
mov
or
imul
mov
mov
sub
cmp
movl
ja
mov
jmp
xor
jmp
ror
iret
leave
fstp
popa
test
and
adc
jle
add
in
leave
repnz
into
aad
ds
repz
stc
fcmovnbe
and
ret
aas
enter
cld
test
in
fdivr
into
icebp
aam
out
xor
in
sar
enter
ljmp
mov
fsubp
aas
cs
leave
cmp
ljmp
cmc
iret
clc
std
xbegin
loop
xchg
rcll
in
in
clc
std
enter
in
fidivrs
ret
jecxz
in
in
fcmovnu
xchg
rcl
ss
xor
iret
icebp
cmp
cmc
neg
aam
ljmp
fcmovbe
filds
fdiv
icebp
roll
ret
fprem1
cmpl
aad
call
xchg
repnz
lret
out
fcomp
out
xor
out
fdivr
loope
xlat
fcomp
repz
movb
fists
out
iret
cmc
xlat
cmp
xlat
fdiv
aas
loopne
loop
loope
xlat
xchg
lock
aam
aad
out
fld
rcl
repz
shl
clc
in
test
int3
sti
test
xchg
xchg
jecxz
ret
int
fdiv
sti
repz
or
vmovntdq
loop
loope
icebp
fsubrp
xchg
repnz
xor
aam
xor
shr
repz
icebp
aas
sub
orl
repnz
repnz
ss
cmp
lret
in
cmp
filds
lret
mov
xchg
mov
ret
xor
lock
in
fcmovnbe
jecxz
jecxz
std
loopne
cmp
ret
jmp
jecxz
leave
xor
repnz
ljmp
std
lock
incb
clc
fisttpll
fdivp
xor
out
cmp
ljmp
sbb
mov
lret
repnz
mov
out
out
xlat
shl
cmp
das
out
hlt
call
aaa
test
aad
rolb
loopne
sar
xchg
int
aaa
imul
xor
repz
testl
out
jecxz
faddp
mov
shl
out
repnz
imul
xor
cmp
aam
ret
rcr
xchg
les
lea
lret
in
in
cmc
cli
fldln2
rol
cmc
aam
out
aam
stc
hlt
mov
fdivrp
iret
lock
mov
movzwl
sub
mov
xor
xor
jmp
rcl
into
aad
fcmovu
add
pop
cmpsb
pop
push
pop
jp
jg
fiaddl
jle
xchg
lret
shl
xor
enter
fdiv
leave
hlt
push
test
lock
jmp
lret
test
loope
rol
cmp
ss
int3
in
fcmovnu
neg
loope
aam
shl
sti
xchg
addl
int
aam
clc
out
cmp
fdivr
test
loope
hlt
shl
loopne
mov
in
xchg
test
shl
clc
int3
out
cmp
pushl
stc
test
loop
loope
addl
mov
sub
call
xor
repz
cmp
leave
repz
hlt
ret
mov
test
cmp
std
xchg
out
xor
iret
ret
in
shl
lret
out
lock
fdivrs
idiv
mov
lret
dec
mov
xchg
in
out
sti
mul
cli
cmc
into
cmp
in
loop
out
mov
in
xchg
mov
fnstenv
sub
sti
imul
loope
std
jecxz
shl
fsub
mov
sti
loopne
call
fdivrp
ss
xor
std
cli
repnz
cmp
in
fxch
mov
out
fdivp
xchg
xor
rcl
cmp
fmul
xlat
incl
xchg
in
idiv
faddl
loop
out
sar
in
out
rcl
lret
fiaddl
fcomi
xor
mov
test
iret
xchg
cs
ret
icebp
cmp
cmp
aas
fildl
clc
out
jmp
nop
xor
enter
leave
out
repz
out
in
fiadds
call
in
or
out
cmp
jmp
rcl
fsqrt
xor
xchg
std
jecxz
fcmovne
rorb
lock
icebp
cmp
cmp
int3
xor
aam
shl
sar
sti
out
jmp
in
hlt
enter
cmp
xor
cmp
vpsraw
out
fadd
sti
test
in
fcmovnb
out
xchg
jmp
cmp
hlt
loopne
sti
cld
clc
fdivrp
not
ret
icebp
in
sbb
out
sti
in
out
int
in
int
iret
cli
repz
icebp
div
aad
mov
aam
dec
incb
call
xlat
sti
fcomi
jmp
aas
repz
mov
addb
adc
add
jmp
aad
ret
int
fistpl
mov
leave
fistpll
fiaddl
jle
loopne
mov
leave
roll
int3
lock
int
repnz
cmp
shl
addl
jmp
call
loope
in
ret
int3
cmp
repz
cli
add
addl
out
sub
int3
xor
cmp
aam
int
flds
clc
cld
fucomi
test
or
aam
xchg
vpextrw
hlt
xor
cmp
icebp
xlat
cmp
ret
in
fisttpll
mov
xor
fnstcw
cmp
repz
shr
xlat
ror
incl
jecxz
testl
in
xor
cmp
shl
repnz
imul
out
int3
mov
in
iret
leave
loope
out
leave
out
fldz
lock
cmp
jmp
out
movb
nop
int
xor
lret
cmp
std
xlat
idivl
ds
or
test
fisttps
xor
in
fdivl
jmp
cmp
cmp
repz
in
in
fisttpl
mov
cmp
into
aas
xlat
fstp
in
fcomi
fcmovb
sti
jmp
jecxz
cli
ret
loopne
lret
rcl
fcmovb
xor
lds
fiadds
rorl
decl
repnz
div
hlt
fidivrl
enter
cmp
adc
jecxz
jmp
test
hlt
shr
lret
cli
shll
cmp
jecxz
test
add
std
cmc
aas
int
in
repnz
icebp
shl
shl
in
out
aas
cmpl
lret
out
out
std
int3
lret
in
in
lock
lock
ds
loopne
ljmp
loopne
fdiv
cmc
test
mov
xchg
ljmp
icebp
rcl
fcmovu
loopne
cmc
movb
fsub
xchg
incb
rol
xor
sti
fadd
imul
hlt
xlat
std
loop
cli
fdivp
fmull
cld
mov
frndint
cmp
aas
in
cld
rcr
stc
faddp
lret
lret
xchg
int3
adcb
in
in
fstp
jmp
aad
out
lock
sbb
sub
mov
mov
jmp
rcl
rcr
aam
fstp
lods
pushf
inc
outsb
cmp
jg
fiaddl
jle
stc
mov
xchg
shr
xchg
mov
jmp
imul
repnz
shr
cmp
cmp
cmp
fcom
and
fmul
int3
in
cld
fcomip
repz
xlat
cmp
int
ds
out
cli
fcomp
in
fimull
jecxz
in
mov
iret
jmp
stc
aad
fstpt
fdivs
cmp
aad
cmc
lock
aam
int
leave
div
call
int3
clc
jecxz
out
cmp
addl
ret
in
lret
fsubp
xor
xlat
aaa
call
lret
roll
loop
aad
test
loop
cli
rorl
xlat
int3
fidivrs
in
cmp
lock
fxtract
ror
loopne
jecxz
jecxz
xor
xlat
fsubrs
jmp
cmp
shr
add
aad
in
and
std
orb
fcmovnbe
cmp
cmp
cmc
loopne
rol
mov
int3
fimuls
repnz
hlt
sub
leave
lret
cld
out
clc
cmp
aam
neg
rol
fiadds
mov
jmp
aaa
hlt
aaa
jmp
ret
jecxz
call
int
in
and
int3
lret
lret
int
cmp
cmp
aam
repnz
in
fisttps
repnz
xchg
das
xor
das
xor
hlt
rcl
fdivp
cli
fldl
jmp
in
test
test
std
rol
sar
sti
aad
cld
fcom
ret
loop
hlt
ljmp
fdiv
enter
addb
cli
mov
fdiv
imulb
xor
int
cmp
cmp
call
cmp
std
lret
test
in
mul
mov
xchg
loop
pushl
out
rcl
lret
cmp
fcmovb
call
std
xchg
loope
lret
mov
jecxz
enter
lock
in
xlat
into
jmp
addl
lret
fadd
repz
not
jmp
out
ror
iret
stc
loop
aam
mov
fucom
and
ljmp
lock
cmc
fcomp
out
mov
sub
cmp
jmp
sarl
rol
js
pusha
mov
push
in
jle
add
shl
repz
cmc
cmc
jmp
icebp
hlt
out
loop
lock
sti
fcom
stc
imul
out
ror
ret
mov
testb
jecxz
call
repnz
fnstsw
sar
out
loopne
std
test
jecxz
in
nop
fcmovbe
xchg
lock
lret
repz
cmp
cmp
call
ret
fucomi
call
iret
xchg
out
iret
sub
out
cmp
fcomp
std
cmp
shl
repz
rorb
test
lret
xchg
mul
sub
out
lret
stc
xor
lock
fcmovu
sub
out
fimuls
dec
xchg
in
xor
xor
icebp
sarb
neg
sar
sti
sti
sti
inc
les
test
ljmp
xlat
xlat
fdiv
cmp
loope
aas
shl
loope
cli
fsub
out
lea
xchg
neg
xor
lock
in
cmp
stc
aaa
loop
ret
rcr
aam
out
in
clc
mov
call
loopne
leave
int
aad
clc
rcl
aas
and
aad
lret
jmp
xor
das
aaa
ret
xor
repz
lret
int
out
repnz
out
adc
sub
out
cli
cmc
std
neg
rcl
sub
in
in
jmp
add
nop
rolb
rcl
cmp
xor
out
cli
std
aas
out
loope
cli
lds
repnz
jecxz
clc
ljmp
cmp
in
std
cmc
fcmovnu
enter
aas
shl
shlb
call
sbb
test
call
mov
xchg
test
ljmp
call
ds
fisttps
fcmovb
ljmp
in
ljmp
fcmove
ss
aad
fistpll
out
xchg
in
stc
testb
loope
out
xor
aaa
cmp
shr
xlat
aad
shl
test
fcmovb
cmc
xchg
sub
ret
icebp
rcl
aad
ret
shr
jmp
std
imul
hlt
jecxz
icebp
into
in
cmp
jecxz
enter
addb
sub
leave
sarl
add
or
add
cld
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
jmp
fcom
rol
fcom
add
inc
mov
fiaddl
jle
ret
in
out
jmp
xlat
mov
lock
loop
icebp
adc
ljmp
cli
shl
adc
out
repz
addb
int3
clc
aam
out
cld
loopne
into
hlt
aad
sti
testl
xchg
xchg
xchg
loope
xor
cmp
idiv
and
fsubp
cmp
int3
cs
cli
lret
leave
ss
roll
repz
fadds
xchg
xor
lock
repnz
idiv
in
fucom
out
in
in
lret
out
cld
orl
xor
xor
int
push
cmp
out
cmc
xchg
ret
enter
lret
mov
adc
xor
ljmp
sarl
cmp
addb
mov
test
faddl
lret
into
fdiv
fst
fsincos
inc
clc
aas
aam
ret
cmp
sbb
xchg
fmulp
hlt
xor
int3
sarl
int3
fcmove
into
int3
incb
loopne,pt
cli
call
mov
shl
into
in
in
rcl
cmp
call
int3
jecxz
ret
icebp
cmc
loop
sub
fmulp
lock
iret
test
icebp
cmp
out
in
aaa
div
out
cmp
call
loop
stc
in
std
sar
enter
idiv
in
fnstenv
icebp
cmp
fdivr
hlt
inc
sbb
sub
out
mov
fdiv
mov
ret
ljmp
ds
ret
shl
fcmove
int3
in
lret
mov
test
iret
cs
enter
fnstsw
shlb
cmc
jecxz
adc
loopne
loopne
leave
in
out
lock
in
loope
cmp
aam
int
std
lret
ds
fmul
aad
mov
jmp
mov
icebp
xor
out
hlt
rol
cmp
loop
loope
clc
lret
xchg
into
and
hlt
loope
lock
shr
sti
into
cmp
aam
fsub
stc
mov
addb
mov
out
repnz
les
fcmovu
ljmp
shl
orl
lret
xor
xor
iret
xor
cmc
xor
xor
add
jmp
int3
int
loope
sub
call
jle
mul
sbb
sbb
loop
enter
cld
loop
rclb
in
clc
into
xabort
aaa
iret
loop
ret
ds
ljmp
test
jmp
cli
cmc
hlt
out
aad
jmp
repnz
ffreep
ret
test
out
test
xchg
lock
jmp
mov
repnz
xor
idivb
aad
xor
fnclex
aad
out
sar
cld
sti
mov
cld
test
shl
int
enter
cmc
les
cmp
fprem1
fnstsw
sbb
xchg
std
iret
mov
repnz
enter
enter
and
xlat
orb
sti
nop
incl
aam
sub
out
lret
out
faddl
sbb
sub
cli
repnz
ljmp
stc
cld
ds
sbb
xchg
test
cli
xchg
addl
aam
sarl
repnz
xor
in
in
cld
aam
call
fstp
jmp
repz
lock
loope
stc
cli
icebp
fdivr
xorb
ret
ret
cmp
clc
ror
clc
leave
lret
cli
fsubr
lret
hlt
int
sub
aam
fadd
ss
cmp
not
f2xm1
enter
mov
test
loope
shr
ret
leave
enter
fstpt
cmp
cmp
ds
sti
test
decb
xor
xor
rcr
repz
aas
loope
aam
cmp
shl
loop
lret
lret
jmp
cld
leave
out
loop
nop
out
aaa
stc
jecxz
shlb
cmp
ret
cmc
loopne
jmp
test
out
test
repnz
aaa
rcr
int3
icebp
fcomi
leave
out
jecxz
call
xchg
aad
out
out
lret
in
in
clc
stc
out
into
out
in
test
rcr
fisttpll
les
in
xlat
xor
idiv
sarb
fidivrl
test
std
loopne
lds
in
out
xchg
loop
ss
rcr
clc
call
ret
aaa
sarb
mov
int
xchg
fmul
iret
ror
repz
out
cmp
loopne
rcr
cmp
std
stc
aad
filds
hlt
nop
loopne
lret
ss
jmp
enter
fstp
int3
shl
scas
imul
sub
adc
jmp
jle
add
fdiv
fiaddl
rcr
not
jmp
fsubr
lret
lret
subl
idivb
hlt
add
fcmovb
neg
test
xlat
in
std
ret
out
out
fucomip
ret
cmc
xlat
ror
out
fcmove
xor
fdivp
test
shl
shl
mul
ljmp
repnz
loope
fidivl
in
cmp
repnz
mul
fldl
into
loope
mov
jmp
fiadds
testl
leave
leave
addb
in
xor
in
in
sti
lret
ds
test
rcl
rcr
cli
out
jmp
shl
shr
in
out
xor
repz
shr
hlt
xor
cld
ds
hlt
fstp
mov
lret
mov
into
fucomi
iret
shl
sti
jmp
clc
hlt
neg
sub
ret
lock
jmp
int
cmp
repz
ljmp
aas
cmp
mov
mov
incl
ret
enter
out
cld
fnstsw
lock
add
hlt
cld
fimuls
call
aad
xlat
in
in
jmp
in
ss
cmp
les
in
lret
xchg
into
shr
jmp
cld
aaa
push
aam
repnz
fdivr
icebp
xchg
stc
xlat
in
xchg
in
call
jecxz
xor
xor
fnop
int3
mov
jecxz
test
jmp
loope
repz
leave
repnz
cli
fdivrp
std
out
ror
cmp
xlat
fcmovnb
hlt
fld
int3
out
lock
lds
loope
fadd
hlt
cmp
stc
fcmovu
loop
fsubr
out
hlt
loopne
loope
incb
decl
xor
rcr
sbb
fdivr
cld
sar
hlt
jecxz
stc
aad
xlat
mov
call
ss
ss
ffreep
jecxz
inc
fincstp
aad
lret
stc
ret
mov
test
cs
cmp
cmp
out
clc
repz
loope
fdivrp
repz
in
int3
clc
fadds
ror
xor
idivl
cmp
std
ds
roll
std
lret
call
out
repz
jecxz
scas
xlat
jmp
lret
ror
aas
ffree
fcmovnu
out
jmp
sub
in
jg
fiaddl
jle
out
loopne
in
ljmp
cmp
out
repz
sti
in
nop
out
sbb
shlb
rcr
repnz
aaa
fidivrs
test
mov
fneni(8087
jmp
sub
fstp
icebp
fxch
in
cmp
clc
clc
cmp
ljmp
aam
cli
div
jecxz
flds
xchg
xlat
imul
in
aad
jmp
out
neg
aas
in
fsubr
out
addb
leave
aam
xor
test
stc
sub
rol
cmc
cmp
ret
add
int
test
cli
xlat
xor
cli
shl
repnz
ss
repz
out
lret
loop
lock
in
cmc
sub
out
sub
cmp
out
shl
jmp
iret
in
xchg
loope
mov
in
out
fdiv
xchg
xchg
cmc
int
ror
fdivrs
icebp
shl
fst
cmc
into
loop
loope
into
loope
icebp
loopne
nop
xchg
cmp
icebp
jmp
cld
std
loopne
shr
xchg
ffreep
fmul
movl
sarl
out
fucomp
int3
call
iret
in
sti
loope
loop
hlt
loop
cld
mov
loopne
ret
lret
out
rcr
out
xor
vpsubusb
fmull
lret
repz
loopne
shr
in
call
repnz
and
aas
ret
dec
faddl
test
sub
divl
icebp
cmp
enter
xor
cmp
fidivrl
cli
lds
lret
in
leave
jmp
icebp
out
xchg
call
hlt
aas
sar
xlat
sbb
incb
lret
jmp
sub
out
xor
in
int3
cmp
stc
repz
jmp
fdivrp
mov
icebp
dec
lret
cld
shrl
clc
rcr
fcmovnu
test
cmp
xor
ljmp
loopne
aas
xor
in
in
out
std
out
cmp
cld
not
cmp
mov
into
cli
fimuls
leave
lret
out
xor
cmc
loope
loop
shl
cli
fadd
stc
int3
out
ljmp
into
idivl
shr
cmp
ss
lock
rol
loop
lock
nop
loop
mov
mov
sub
cmp
mov
jbe
jmp
lret
ret
in
call
test
out
jg
fiaddl
jle
mov
out
mov
xor
aam
out
idiv
aaa
stc
xor
std
test
jecxz
adc
jecxz
nop
call
aam
cs
cmc
out
aam
lret
ds
out
orb
int
adcb
sub
icebp
fcmovbe
repz
cmp
loope
cld
mul
jmp
out
in
jecxz
out
ljmp
shr
iret
clc
sarb
rcl
sti
clc
mov
cmc
fmulp
fstp
mov
xor
fsubr
aam
fptan
stc
rcr
clc
neg
test
xchg
repz
xor
aaa
fdiv
lock
lock
sti
cmpl
leave
mov
jmp
loopne
icebp
out
orl
lret
out
fdivrl
iret
loop
test
rorl
mov
in
loope
xor
lret
lret
cmp
test
loopne
test
jecxz
clc
sub
orl
test
cld
in
in
clc
adc
xor
sbb
out
xor
cmp
loopne
cld
cmp
fcmovu
in
testl
int3
out
jmp
enter
cmp
shl
std
iret
loopne
aas
mov
jmp
fists
xchg
sub
call
ds
rolb
and
imul
cld
nop
icebp
mov
or
aam
cmc
cmp
into
aas
int3
ljmp
repnz
sar
mov
std
out
xchg
loope
cmc
rcl
stc
jmp
addl
mov
test
in
lret
aam
call
leave
xor
aam
cmc
ds
xchg
xlat
clc
leave
in
int3
int3
popl
aam
int3
out
test
cli
aam
repz
clc
aad
mov
loop
mov
mov
lret
out
xchg
xchg
aad
xor
lock
jmp
fiadds
out
fucomi
ljmp
int3
in
into
cmc
repnz
ret
addl
loop
nop
jmp
out
out
cmp
enter
aas
shl
aas
cmc
incl
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
jmp
ret
rcl
rol
rorl
lods
or
fiaddl
jle
inc
leave
nop
in
in
mov
loop
iret
repz
in
int
in
out
test
icebp
fld
xchg
test
call
repnz
lock
rcl
icebp
sub
filds
mov
jmp
dec
fldl
adcb
out
lock
in
fucom
lock
fld1
ret
repz
shl
cld
iret
push
in
xor
fnstcw
idivl
aaa
into
aad
cld
aad
icebp
loope
mov
in
test
nop
out
addl
iret
shl
loop
out
fadd
sub
out
loop
in
mov
mov
jmp
hlt
hlt
xor
int3
lds
jecxz
out
fisttps
shl
hlt
xor
int3
out
clc
int
rol
in
out
out
sti
loope
test
leave
in
repnz
jmp
call
test
fldpi
fsubrp
in
fcmovne
mov
adc
iret
loop
xor
fst
test
cld
out
aam
ret
in
shl
stc
out
jmp
clc
jmp
in
xor
not
cmp
xor
cmc
test
fucomi
xlat
stc
nop
in
xchg
xchg
into
icebp
loope
xor
xor
iret
out
xor
fdiv
repz
cld
decl
iret
mov
mov
lds
aam
ds
clc
hlt
vpmullw
mov
ret
ljmp
aad
lret
into
jmp
jmp
clc
xor
repnz
repnz
lret
test
repnz
loope
mov
loop
div
xlat
repnz
lret
int
hlt
xchg
enter
test
int3
lock
aad
shr
cmp
std
cmp
ret
loopne
ds
repz
jmp
jecxz
ljmp
xor
enter
imul
cld
hlt
clc
int3
aad
in
out
out
repz
fmulp
fucomp
xchg
test
lret
clc
cld
sar
not
cmp
jmp
neg
cld
mov
lret
lock
call
leave
aas
cli
adc
int3
aas
decb
lea
ljmp
in
cmp
hlt
repz
jmp
push
call
add
xlat
mov
rcr
xlat
sub
cmp
fiaddl
jle
and
cld
out
jecxz
icebp
fmul
decb
jmp
shr
ret
ret
lock
rorl
fcmovb
jmp
mov
xor
imul
jmp
loope
hlt
ss
fcmovnu
fistpll
call
into
jmp
clc
out
in
fdivrl
cmpb
fsubp
sti
mov
ret
int
aad
int3
lret
xor
out
repnz
in
aas
aam
fsub
repnz
clc
cmc
stc
mov
fisttpl
subb
xlat
rcl
int
idiv
addb
mov
fmul
in
int
jmp
lret
xchg
icebp
shlb
xlat
fcom
aam
sti
aaa
cli
inc
lds
mov
lock
addl
repnz
cmp
fsubr
repnz
aad
in
std
std
ljmp
xchg
ret
clc
jmp
aad
filds
cmp
call
cld
nop
hlt
test
repz
xor
cmp
fcomip
out
fsubrp
leave
cld
lret
orl
out
shl
fmulp
sbb
fsub
out
sti
leave
cmp
call
test
repnz
xor
jmp
iret
out
lret
cmc
shl
iret
cmc
cli
std
sar
xchg
vcmpsd
ror
cli
repnz
cmp
lret
xlat
icebp
test
shl
test
call
fsqrt
ror
incl
into
ljmp
fsubrp
loope
ret
test
test
leave
in
addb
lds
ror
cld
ljmp
loop
cmc
test
lret
out
out
out
shl
xor
int
loop
adc
or
xchg
xlat
jmp
xchg
xchg
lds
aam
idiv
jmp
cmp
rcl
add
rorl
mov
repz
jmp
shll
idiv
lret
clc
cmp
xlat
cmp
aam
mov
or
and
nop
into
xlat
ret
fstp
iret
stc
adc
fadd
loopne
aam
in
not
mov
out
jmp
xchg
or
clc
xor
cmp
aaa
rcr
cmp
xlat
int
xor
jmp
lret
xlat
aas
rcr
int
in
push
mov
idivb
fiaddl
jle
xchg
fimuls
in
in
aam
test
fldcw
xor
neg
rcl
xlat
cmc
clc
cmp
ret
repnz
fstp
enter
lock
in
xor
lret
ljmp
add
shl
enter
mov
xlat
imul
pop
xchg
mov
hlt
xor
sub
xor
rcr
xor
cmc
int
loop
fucomp
fcmovnu
mov
lret
mov
fmull
xor
fadd
iret
sarb
repz
fnstenv
loopne
ret
lret
mov
out
fstp
test
out
aam
shl
cmp
sar
xchg
leave
addb
mov
adc
aam
out
fsubrp
loope
clc
clc
ret
call
stc
in
stc
out
xchg
in
orb
xor
aam
sarl
sti
ljmp
mov
mov
xor
jecxz
jmp
fnstsw
hlt
cmp
loopne
iret
test
fucomi
fst
test
cmc
rol
sti
cmp
repz
enter
div
out
addb
iret
sar
repz
rcl
in
out
int3
ljmp
icebp
rolb
les
fsubr
xchg
jecxz
out
enter
cli
aam
cmp
xor
clc
frstpm(287
rcr
lret
out
mov
icebp
out
xlat
fsqrt
xor
push
std
cld
repnz
fiadds
in
xlat
cld
xchg
out
repz
jmp
into
lock
enter
int3
lret
lret
repz
test
rcr
ss
xor
cmp
aad
xlat
fadd
ret
mov
mov
adc
jmp
iret
aad
into
out
leave
cli
sti
sar
fiaddl
rcl
stc
jecxz
cmp
test
out
nop
rol
das
out
xlat
int
repz
fdivrs
repnz
call
testb
mov
in
sti
ror
xor
clc
std
int
adc
cmc
loopne
fcmovnb
mov
std
mov
in
mov
hlt
ret
xor
xor
jmp
lock
cld
aad
ljmp
repz
mov
in
fsubr
cmp
fucomip
cmp
cli
add
jmp
jmp
lret
fst
mov
addr16
testl
jle
aam
repz
mov
hlt
jmp
in
mov
mov
out
in
fsub
lret
cmpl
xlat
cli
jecxz
in
lret
and
icebp
mov
xchg
int
cmp
cmp
out
faddp
cld
aam
and
roll
iret
ret
mov
xchg
fisttpll
out
into
sar
out
repz
test
decl
jmp
out
lret
test
rcr
repnz
aam
fdiv
sarb
out
fcmovnb
sbb
in
sbb
addb
ret
xor
stc
rcr
fst
sbb
ret
cmp
jmp
out
and
aaa
cmp
fstp
sti
fcomip
cmp
rcr
out
loop
test
fdivr
loop
cld
enter
out
icebp
cs
repnz
xor
iret
rolb
std
mov
fcmovnb
mov
stc
jmp
not
shl
int3
xchg
cli
sar
test
out
out
in
xchg
xchg
xor
aam
fcmovnbe
aad
loope
rol
jmp
in
loopne
sti
iret
icebp
loopne
shl
xlat
lock
fdivl
loopne
loopne
ret
in
ret
aad
in
lret
repz
ret
sar
in
fucomi
ds
shl
cld
xchg
ret
mov
test
std
call
cmp
xor
shl
aad
in
fisttpl
jecxz
int
loop
test
repnz
in
repz
int3
xor
ffree
dec
rol
xlat
sti
fmull
cld
icebp
shl
test
int3
shr
iret
cmp
cmc
in
iret
sti
in
loop
add
aam
int
leave
and
repz
xor
rcr
rcl
cmc
lret
stc
clc
loopne
test
fsub
xlat
shl
xlat
out
fisttpll
ljmp
lret
loope
icebp
test
ret
lret
cld
sti
cli
out
mov
in
imulb
leave
out
aam
fnstsw
clc
cli
rol
bnd
fxch
lret
fsubrp
repnz
ret
rol
lret
cmp
repz
cmp
leave
cli
hlt
leave
shl
ljmp
cmp
shl
mov
xor
add
mov
mov
mov
mov
xor
add
jmp
aam
ret
aam
push
dec
in
cmpsb
sti
jg
fiaddl
jle
iret
out
cmc
loope
repz
clc
stc
enter
test
loopne
int
jecxz
lock
idiv
in
cs
rcl
xor
aas
out
rcr
lock
jecxz
ljmp
test
out
fst
hlt
rcl
sar
in
iret
cmp
enter
in
in
fcmovu
rorb
in
lret
lret
cmp
cmp
sar
ret
in
in
fsub
call
faddl
cli
rcl
test
shl
loop
xor
hlt
cmp
fdivrp
in
into
mov
cmc
out
in
cmp
in
int
icebp
adc
lock
cmc
loopne
out
vshufps
out
xor
fcmovb
fldl2e
sti
in
out
jecxz
loope
sbb
std
mov
int3
mov
ret
in
enter
lret
xor
ds
clc
shl
out
loopne
jecxz
xchg
fst
ljmp
clc
repz
repnz
repz
jmp
in
cli
leave
in
out
int
into
in
fldl2e
clc
cmp
add
cmp
loop
int3
enter
xchg
mov
loope
ljmp
cmp
cmc
into
std
std
cmc
clc
addl
mov
lock
xchg
mov
repz
shl
enter
cmc
cmp
ljmp
loope
fiadds
mov
int3
ret
cmp
repz
cmp
sti
out
test
ret
loop
shl
out
test
out
jmp
fadds
lock
loop
leave
loop
fucomp
lea
leave
xor
ss
lret
aas
xor
aad
jecxz
aam
sti
test
jecxz
mov
out
out
rol
sarl
aaa
cmp
cmc
out
sarb
aad
xlat
fmull
xchg
loopne
inc
aam
in
cld
rol
cmp
ret
idiv
xchg
rcr
lret
ljmp
ss
jmp
fstpt
loopne
into
sbb
cli
xlat
cli
testl
xchg
ljmp
ror
out
int3
ror
sarl
fcomi
loope
rcl
idiv
stc
fcmovnbe
rcr
ljmp
mov
mov
mov
jmp
lret
ret
fcmovu
fucomi
pop
test
adc
outsb
push
add
jg
fiaddl
jle
idivl
aam
cld
idivb
not
rol
ds
mov
sti
sbb
xchg
repnz
call
xor
std
icebp
divb
loopne
cli
out
fcos
repnz
fimuls
call
cmp
lret
push
loope
aam
sti
cmp
call
lock
call
ss
out
into
shl
sar
loopne
std
xchg
movb
loop
ret
aad
in
neg
ffreep
cmp
out
xchg
mov
mul
xchg
mov
leave
or
imul
xor
leave
hlt
hlt
enter
ror
clc
ret
fdivr
stc
lock
leave
fucom
out
in
lea
out
xor
fpatan
aaa
aas
cli
lock
xchg
sti
mov
stc
enter
fdiv
xchg
rol
cmc
ror
int3
into
cmp
test
out
aad
in
rcr
idivl
jmp
lock
fcomi
mov
nop
cmc
into
in
jmp
loopne
xlat
in
cmp
xchg
jecxz
mov
int
in
repnz
divl
jecxz
jecxz
enter
lret
loopne
shr
sub
aad
fisttps
iret
iret
into
ret
loope
xor
xor
out
sarb
fdivp
repnz
sub
mov
enter
hlt
icebp
in
icebp
cmp
cmp
fnop
jmp
cmp
cld
cmp
not
test
out
in
nop
decl
mov
ret
int
cli
xor
aam
int3
cmp
sar
aad
cmp
lret
and
rorb
lret
hlt
iret
call
rcl
enter
int
in
in
clc
shl
into
cmp
cli
fidivrl
out
lret
repnz
sti
in
rcl
xchg
clc
in
out
into
mov
clc
repnz
cmp
repnz
loope
repz
xlat
xlat
icebp
test
into
dec
out
fdiv
shrb
icebp
in
xor
iret
leave
not
aam
cmpb
ret
mov
out
repz
ljmp
push
ljmp
loopne
test
ret
enter
loop
loop
in
mov
icebp
into
int3
div
jmp
cld
lret
icebp
cmp
mov
in
lret
in
xchg
mov
mov
jmp
leave
aas
ret
vpcmpeqw
and
mov
fiadds
jle
das
cmp
xor
cmp
enter
lret
loopne
shl
ret
lds
addl
cmp
shlb
int3
add
fcomi
shl
ret
xlat
iret
jecxz
fldl
fldl2t
leave
lock
aad
jmp
fcmovbe
std
loop,pt
fldl
loope
call
div
into
rcr
clc
repz
aam
rcl
addl
fcoms
aam
aam
test
hlt
call
cmp
out
std
fldl
ljmp
out
in
lret
out
cmp
repnz
cmp
test
fdivrp
mov
fisttps
mov
ss
fcmovbe
hlt
cmc
out
stc
lock
stc
out
aas
cld
out
vpaddb
leave
les
in
xor
out
call
fcmovnu
rcl
shl
loop
clc
clc
mov
lock
iret
out
repnz
hlt
cmp
out
fistpll
out
out
hlt
jecxz
ror
hlt
mov
lret
sar
cld
ljmp
ss
lock
sti
cmp
lret
hlt
rol
mov
mov
in
into
ror
fcomp
shr
cmc
lock
icebp
iret
hlt
cld
and
call
cli
lret
out
into
loop
repz
leave
call
fxch
out
repnz
rcr
shl
jecxz
cmp
lea
jmp
xor
test
stc
rcl
dec
clc
loop
fsub
lea
jecxz
shr
lds
rcl
lret
lock
hlt
lret
int
in
add
enter
into
cmc
sub
fdiv
cmp
sarb
ret
sbb
xchg
and
in
lret
rcl
int
stc
jmp
cmp
hlt
shr
sarl
sti
cli
fsubrp
xchg
xchg
repnz
loopne
int3
ljmp
cmpb
hlt
test
out
test
testl
out
ss
in
int
fdivrl
ret
in
fcmovu
jmp
int3
and
fsub
xor
fstp
xor
loope
rcl
cmp
fucom
std
neg
sti
std
jmp
xor
jmp
int3
ret
lret
ret
int
int3
int
adc
jge
mov
add
mov
hlt
mov
std
ror
out
out
cmp
incb
xlat
hlt
fcmovb
lds
in
shl
loope
icebp
fdivs
into
int
rcr
aam
mov
test
in
jmp
xor
out
lret
icebp
sti
aaa
lock
loope
ds
ret
shl
hlt
test
mov
mov
lock
fiaddl
lret
aam
clc
cmp
repz
roll
iret
rclb
in
ss
int
std
int
loop
repnz
fnstcw
lea
loopne
repnz
rol
loope
in
call
call
fxch
out
aaa
lock
aad
lret
std
stc
out
jmp
mul
xor
cmp
cmp
cmp
icebp
aas
cli
fnstsw
loop
aad
leave
xchg
mov
lret
repnz
ss
shl
lret
clc
int
and
icebp
xlat
enter
out
jmp
out
fmulp
inc
out
into
rcl
xor
jecxz
cmp
icebp
in
mov
test
out
hlt
ret
loope
shl
jmp
sub
cld
cmp
rol
or
fucomi
lock
cs
out
out
aam
idiv
dec
in
xlat
cmc
fsubp
fadds
xlat
sub
dec
cmp
xor
aam
aaa
xlat
fildl
jecxz
lock
fcmovnu
rorl
stc
icebp
ljmp
into
test
loope
fadds
jecxz
lock
into
out
out
rcl
int3
aam
or
sti
repz
fcomi
cmp
test
into
mov
test
loope
adcl
fmul
leave
rcr
ds
filds
jecxz
mov
ljmp
int
xchg
out
ss
ror
into
shl
lret
fadd
ret
lock
fsubr
loope
sti
cmc
int
xchg
into
jecxz
fldz
shr
cmp
fistpll
fstp
ror
test
in
in
in
in
rcr
xor
fcomp
fidivrs
cmp
in
aad
out
orb
fiaddl
rcl
in
out
cli
hlt
sarl
fnstsw
cli
orl
mov
jmp
ror
aas
roll
ljmp
test
fiaddl
jle
mov
cli
icebp
xchg
out
mov
out
aam
in
test
imul
jecxz
std
sti
fsub
repnz
enter
lds
in
sub
neg
cmp
in
fucom
loopne
faddl
xchg
lock
enter
fcmovbe
fucomi
aam
hlt
cmc
fcmovnbe
std
std
xor
loopne
in
testb
xchg
test
iret
cmp
cli
clc
stc
cmp
fimuls
in
in
enter
xchg
out
enter
cmc
sarl
cmp
cmp
int3
aad
shl
cmp
loopne
fdivrp
std
leave
into
sar
mov
mov
out
repz
cmp
out
xor
cmp
rolb
out
addl
aad
lret
xor
fidivs
loope
aas
cmc
int
ffreep
mov
jmp
nop
stc
in
into
out
ret
cmp
aam
fcmove
repz
leave
add
cmc
xlat
out
mov
stc
ffree
out
call
aad
xor
out
cmp
aad
out
in
in
aas
repnz
test
xor
ljmp
or
rol
xlat
xlat
mul
xor
ljmp
loope
cld
out
cli
fucomp
shr
fisttps
sub
enter
xor
rcl
adc
in
flds
jecxz
into
xchg
in
shll
icebp
out
sarl
rol
cmc
icebp
aas
cli
leave
ds
test
out
mov
into
lock
out
fsubr
enter
cmp
int
out
cmp
sti
repnz
xchg
int
sub
shl
fst
leave
into
hlt
aas
fsubp
iret
aad
sar
mov
int
in
std
repnz
leave
cmc
sbb
cmp
stc
cmp
xor
addl
fxch
lret
fincstp
out
iret
loope
cmc
aaa
shl
jmp
out
imul
cmp
cmp
in
jecxz
fmulp
loopne
out
rorb
out
in
leave
cmp
jmp
rcl
in
xlat
clc
test
xlat
xchg
repnz
into
fucomip
out
in
aam
in
int3
aas
sarb
cmc
cmp
xchg
test
std
aad
cld
notl
xchg
icebp
aaa
loopne
fdivl
rcr
cmp
icebp
cmp
xchg
pop
xchg
jb
add
call
add
into
aam
fmul
dec
cmp
out
xacquire
fiaddl
jle
loopne
lret
sti
into
mov
shl
aam
loopne
xor
cmp
rcr
aaa
cmp
in
xor
repnz
test
jmp
jmp
icebp
clc
idivb
cmp
sti
cmp
adc
test
mov
sti
out
jmp
icebp
std
loope
xchg
in
stc
call
hlt
cld
aam
rcl
hlt
call
jmp
mov
cld
std
xchg
shr
lock
ljmp
aad
in
addl
mov
shr
int3
call
fdivrp
in
cld
rolb
test
out
test
lock
jecxz
aad
xor
in
cmp
xor
lock
test
mov
nop
xchg
cli
ror
xchg
nop
in
icebp
lret
cmp
ds
filds
mov
fmull
clc
call
rcr
lret
rcr
add
incl
xchg
stc
ss
out
ss
lret
sar
cmp
fimull
ljmp
stc
xor
int
rcr
in
cmp
and
jmp
or
lock
decl
iret
loop
cs
fdiv
ds
rcl
sbb
int3
leave
out
jmp
ret
les
hlt
fsub
aas
roll
testb
xchg
mov
out
in
lock
icebp
sub
int
test
out
jmp
leave
stc
sti
or
fsubp
in
fucomip
out
cmc
cmc
enter
into
int3
aas
int
adc
cmp
roll
and
aam
out
neg
shl
jmp
xor
leave
jecxz
loop
in
enter
aas
stc
aam
in
enter
in
push
std
into
adc
cli
repnz
jmp
test
in
call
aam
cmc
shl
fiaddl
stc
jmp
out
nop
sti
hlt
hlt
shll
not
xor
int3
rcr
int
clc
shl
cmp
in
jmp
leave
cmc
mov
fcmovu
xchg
xchg
lret
icebp
sarb
loop
out
jmp
icebp
aad
shll
clc
add
mov
mov
mov
mov
xor
xor
add
add
imul
jmp
lret
enter
int3
rorb
testl
fiaddl
jle
loopne
jecxz
mov
iret
in
rorb
repnz
aaa
xor
aad
jmp
aas
add
and
hlt
test
lock
test
adcb
enter
leave
fmulp
in
out
repz
cli
mov
add
in
out
mov
jmp
out
cmp
enter
ds
ds
iret
test
in
and
rorb
xchg
aad
jmp
ror
ljmp
out
fmuls
mov
fdivp
fisttps
loop
xlat
cli
enter
aad
sub
neg
call
ljmp
repnz
shl
sti
lock
cmp
aaa
repnz
sti
test
repnz
aam
sti
fisttps
in
imul
clc
xor
cmp
hlt
cld
out
cmp
cmp
lock
repz
cmp
ret
jmp
mov
out
shl
xlat
cli
lock
out
hlt
aad
mov
cmc
lret
lret
orl
clc
sti
in
cmp
out
fidivrl
cmp
loop
iret
shr
fadds
movb
ffreep
xor
cmp
fsubrp
cli
cmc
sub
shl
hlt
cmc
out
lret
loopne
jmp
lock
in
in
iret
hlt
int3
xor
hlt
xlat
cmp
int3
repnz
icebp
repnz
cmp
mov
mov
in
aad
cmp
rcr
rolb
roll
shl
mov
jmp
cmc
in
repnz
ljmp
mov
movb
cli
xchg
int
xchg
xchg
shrb
cli
repnz
lock
cmc
rcl
out
hlt
jecxz
ret
orl
xchg
fisttpl
aad
lret
int3
leave
int3
incb
cmc
repz
mov
out
nop
xchg
sbb
sub
cmp
out
repz
clc
cmp
lock
repz
inc
in
incb
xchg
in
jmp
rol
xor
cli
rcl
loopne
rolb
ret
loopne
xchg
and
stc
stc
out
les
lret
ror
into
in
out
icebp
shl
out
sti
xchg
shr
lock
loope
aaa
into
xor
cmp
jmp
ljmp
add
ror
rcl
stos
sub
insl
cli
enter
mov
fiaddl
jle
std
not
fcomp
xlat
enter
cli
in
shl
rcl
fnstsw
cmp
ljmp
icebp
fcompp
test
hlt
repz
decb
test
int
cli
lret
stc
int
iret
aaa
lret
lock
in
sti
jmp
mov
fldl
cmc
out
jmp
rcl
loop
addl
enter
in
pushl
ret
lret
in
rcr
fldl
fisttpl
lock
test
cmc
in
lret
rcr
shr
fdiv
stc
rcl
jecxz
fistpll
stc
jecxz
loopne
aad
bnd
idiv
fdivrs
stc
clc
lret
cmp
sub
jmp
stc
int
enter
int3
xchg
out
int
std
cli
out
lock
repz
in
rolb
in
fsubr
ljmp
xor
std
hlt
cmp
stc
sub
clc
shl
cli
cli
mov
mov
mov
jecxz
das
in
idiv
aad
sti
cld
lock
fucomp
fptan
lds
mov
int3
mov
call
xor
div
in
enter
fadd
cmc
cmp
cmc
fsubp
test
icebp
fisttps
xor
in
in
cli
in
ljmp
in
cmp
enter
orl
into
std
fdivrl
stc
shl
loope
ror
jecxz
enter
clc
std
fsubr
into
enter
leave
cs
repnz
sarl
enter
cli
fcmovu
adcb
ljmp
aam
fcom
xchg
fcomi
cld
call
fucom
lock
loope
xlat
bnd
loopne
sti
shl
xchg
cmp
or
mov
lret
out
cs
cmp
fcmovbe
rcl
aad
stc
iret
iret
lret
aad
hlt
int3
sarb
cmc
fld
repz
jecxz
in
mov
fucomip
jmp
in
jmp
fstpt
fcmovu
leave
lock
into
aas
xchg
hlt
fmuls
test
loopne
nop
repnz
ljmp
in
mov
mov
xor
add
jmp
aam
lret
rcr
scas
cld
cmp
xchg
jle
cmp
iret
jmp
loopne
addb
loop
fiadds
jmp
xlat
imul
call
push
xchg
cli
fiaddl
shr
xor
shr
xor
aaa
sbb
jmp
cmp
inc
fdecstp
test
in
not
aad
cli
idivb
xor
fidivrl
rcr
in
rcl
jmp
in
xchg
loop
mov
in
in
int3
ret
xor
cmp
stc
fsincos
shl
incb
rol
filds
incl
iret
out
lret
xlat
shr
cld
cmc
xlat
fcmovnu
lock
repnz
movb
xchg
out
mov
repz
aam
cmc
xlat
cmp
loopne
xor
jecxz
shl
ret
xlat
orb
mov
loop
out
cmp
test
test
cmp
or
and
aam
cs
xor
sti
icebp
ljmp
fcomi
testl
or
out
cmp
fnstsw
xor
fcom
in
fcmovnbe
jmp
out
iret
hlt
test
stc
aad
test
sarl
int3
fyl2x
cmpb
mov
rcr
leave
test
shr
into
rol
call
iret
cld
cmp
fcmovbe
cli
add
ret
shl
rorb
shl
cmp
repnz
rolb
call
xchg
shl
adcb
leave
call
dec
repnz
test
ret
ffree
jmp
push
iret
fisttpll
enter
ss
fcmovu
jmp
ds
xchg
and
xchg
shl
shlb
cmp
cli
jmp
cld
sbb
call
repz
loopne
iret
ror
iret
lret
lock
cli
in
ss
xor
cmp
fcomp
shl
add
cmc
aas
test
lock
ljmp
xor
incb
repz
ffree
mov
lret
xchg
out
sub
ss
imul
ljmp
loope
in
aad
fsubr
adcl
scas
xlat
mov
xor
sub
mov
mov
jmp
ret
enter
int
leave
mov
cmpb
nop
jg
fiaddl
jle
fadd
idivb
lret
ret
xor
ret
aad
ljmp
ficoms
sub
leave
aam
ds
jmp
rol
fcos
loope
mov
jecxz
ljmp
sarb
into
lock
incb
mov
out
int3
ljmp
iret
repz
iret
fld
adc
repnz
rcr
repz
cmp
aaa
cmp
icebp
aam
cmp
repz
mov
lret
push
test
xchg
div
ljmp
fcmovbe
testl
call
xchg
mov
xor
fadd
aas
cmp
shl
xlat
ret
sti
sub
in
sti
loopne
xchg
xor
into
fdiv
std
test
jmp
cld
test
xchg
repz
std
into
rol
clc
aaa
jecxz
into
jmp
ror
rcl
into
std
lock
hlt
mov
mov
stc
loop
mov
sub
in
cld
in
cmp
loopne
lock
mov
adcl
in
lds
fcom
cmc
aas
adc
iret
loop
stc
repnz
jecxz
in
mov
xchg
clc
out
aam
fdivrl
in
in
aas
jmp
xchg
aad
cmp
fdivrp
mov
incb
out
imulb
aaa
in
xlat
in
enter
hlt
out
cmc
ret
jecxz
ret
cmc
mov
mov
adcb
repz
cmp
out
icebp
in
rcl
ljmp
lret
jmp
in
cmp
fdivs
jmp
lret
idiv
neg
in
ds
out
decb
aam
xchg
out
shl
lret
shlb
in
fcomi
ror
hlt
fsub
fadds
test
in
rcr
int
aam
fdivs
cmp
ds
stc
icebp
ds
mov
test
jmp
loopne
jecxz
mov
xor
hlt
cli
into
ljmp
ss
cld
sti
add
faddl
shr
xchg
repz
cs
icebp
cmc
fadd
shl
fdivrp
cmc
icebp
fucom
fisttpl
xor
iret
xor
jmp
enter
fcmovne
fst
or
pop
cmp
jg
fiaddl
jle
clc
clc
stc
cld
repz
out
out
in
and
fiadds
lret
repnz
jmp
ljmp
fdivr
icebp
stc
out
fmulp
loop
xchg
jmp
xlat
in
in
in
xor
test
idiv
int3
fdiv
icebp
call
aad
dec
into
aam
xlat
inc
cmc
jecxz
call
loopne
loope
shll
cmc
sarb
sti
xor
repnz
ret
int3
loopne
in
ljmp
ret
shlb
xor
ror
hlt
out
cmc
mov
out
ljmp
mov
ror
sti
xor
sar
stc
lock
aas
jecxz
call
xchg
call
fstpt
repnz
ffreep
loop
loopne
shl
out
in
fisttpll
lret
sar
mov
jecxz
in
ret
xor
cld
in
stc
stc
cld
stc
filds
in
enter
loop
fdivrp
loop
lret
lock
hlt
ljmp
into
fiadds
leave
jmp
orl
clc
fincstp
imul
shl
ss
aas
cmp
sarl
stc
sbb
test
loop
in
mov
out
fld1
iret
sar
idivb
out
repnz
sbb
mov
out
mov
call
into
stc
sti
rcl
fmul
not
test
hlt
xlat
cli
jmp
addl
lock
call
ds
loope
neg
jmp
fiaddl
ror
lret
xor
clc
repz
fdiv
repz
out
out
clc
adc
sbb
leave
mov
mov
iret
out
fdecstp
lock
fdiv
repz
loope
std
out
cmp
int3
out
fdivp
fucomip
test
imul
sub
cmp
cmc
or
xorb
xchg
incl
out
lock
xor
out
cmp
out
xlat
cmp
incl
mov
and
adcl
leave
in
xor
lret
cmc
fidivs
ret
out
test
fcmovb
fcmovnu
out
dec
leave
leave
shl
cmp
out
rcr
jecxz
fstp
iret
in
jmp
fsubp
std
frndint
mov
repz
imul
mov
xor
sub
jmp
ret
fmul
ret
int
dec
filds
mov
fiaddl
jle
bnd
fidivl
int3
ljmp
sar
testb
repz
fmul
lock
xor
out
fcmovnbe
jmp
sti
leave
std
nop
lret
xchg
aad
in
loope
out
div
iret
fsubp
sti
cmp
in
rol
call
or
lock
loop
cmp
repz
cmp
aaa
ret
fnstsw
fiadds
fiadds
hlt
hlt
xor
out
in
lret
cmp
loope
test
addl
out
cmp
aam
sti
rol
rcr
fiaddl
test
mov
test
enter
xor
out
cmp
cmc
stc
ror
shl
clc
fadds
mov
fucom
sub
repz
call
fsub
fsub
aas
aam
xchg
imul
call
in
jmp
div
aaa
enter
out
shl
cmp
in
out
roll
fildl
iret
roll
stc
out
fldln2
xor
cmp
rol
hlt
inc
stc
out
fsub
rcr
xchg
in
rcr
in
xor
lret
in
hlt
jmp
xchg
testl
xlat
out
sti
imul
icebp
shll
iret
cmp
loope
aam
in
cmc
xor
icebp
jmp
jmp
out
loope
into
ror
cmp
xor
xlat
clc
fstp
fsubr
rol
lret
lret
out
jecxz
orb
sti
xor
out
lret
enter
into
add
test
and
mov
mov
loop
divl
cmc
idiv
repz
icebp
stc
mov
loopne
mov
into
sbb
test
adcb
xor
test
loope
fsub
fnsetpm(287
in
test
mov
int
mov
lock
out
div
fidivl
cmp
int
ds
rol
leave
jmp
stc
dec
jmp
shr
iret
or
aas
cs
out
call
cmp
ret
neg
repz
in
mov
std
icebp
iret
xlat
div
repz
call
in
repz
ret
mov
out
lea
cmp
jbe
mov
mov
jmp
rcl
into
test
mov
mov
xchg
jg
fiaddl
jle
test
loopne
std
out
xchg
idivl
jmp
enter
cmp
jmp
hlt
jmp
cmp
cmp
mov
jmp
mov
ljmp
xor
rcl
cmp
fnstcw
out
in
in
cmp
sti
jecxz
rolb
div
cmp
lret
iret
jmp
std
cld
clc
repnz
loop
int3
out
lret
jecxz
xor
sub
ret
int3
in
in
hlt
loopne
call
loope
out
jmp
mov
fmuls
repz
xlat
call
hlt
aas
int
cmp
ret
repnz
fsubr
mov
lock
lret
shl
lock
fsubr
lret
aaa
in
fucomi
icebp
in
lock
rcl
test
rcr
fucom
ffreep
push
rolb
fucompp
xor
ror
cmp
jmp
cmp
cmp
addb
int
enter
cmp
fcomi
aad
shl
fcomp
in
loop,pt
stc
or
test
cmp
call
addb
aam
filds
enter
shlb
repnz
aas
divb
fcomi
lock
xchg
mov
loopne
flds
mov
icebp
xchg
loopne
int3
int3
xor
std
fdivrs
fsubp
ret
in
addl
ret
fildl
out
out
lret
fsubr
shl
in
roll
mov
leave
call
in
call
cmp
loop
hlt
sarl
cli
mov
int
mov
fbstp
hlt
div
fdiv
hlt
ljmp
and
mov
jmp
jecxz
loop
lret
out
ds
leave
shr
cmp
cli
loopne
sub
fdivr
in
xchg
mov
jmp
lock
ret
cld
out
ror
ljmp
lock
fcmovnbe
aad
cli
mov
into
out
hlt
hlt
call
sar
sar
lret
xchg
sbb
jecxz
mov
shr
ffree
in
std
out
cmp
in
into
test
enter
jmp
xchg
into
cmc
loopne
into
int3
in
vshufpd
aaa
iret
cmc
cmp
cld
icebp
rcr
jmp
rolb
rorl
scas
xlat
mov
xor
jmp
rcl
leave
int
aad
or
out
cmp
fildl
fiaddl
jle
in
jecxz
fisttps
xor
fprem1
cli
test
testb
fadds
iret
repnz
loop
out
ret
xor
cld
repnz
sar
xor
repnz
hlt
sti
jmp
hlt
out
xchg
int3
jecxz
cmp
ss
shl
cmc
sti
and
icebp
and
call
xchg
test
cs
lret
repnz
in
xor
xlat
cmp
ljmp
cli
xchg
enter
out
in
ror
cli
ret
ret
loop
cmpb
fisttpll
loopne
cs
repz
lret
loopne
xor
ror
sti
div
les
lret
out
mov
orb
in
stc
fdiv
loope
ret
sarl
aas
loopne
mov
test
fucomp
in
ss
jmp
ror
fidivrl
cmp
cmp
repz
aas
cld
mov
lret
call
xchg
sub
lock
div
cmp
clc
push
icebp
rcl
jecxz
enter
mov
sbb
enter
leave
std
xor
neg
mov
mov
xchg
in
icebp
xor
xor
out
idivl
stc
repnz
stc
cmc
repz
idiv
jmp
fildl
in
std
int
out
out
int3
aaa
cmp
xlat
out
fcmovnb
cli
in
jmp
neg
lret
ffreep
cli
jmp
xor
shr
xor
icebp
sti
out
repz
loope
rcl
lret
jmp
test
nop
repnz
mov
lret
xchg
das
out
xor
into
cmp
std
lock
loopne
ret
orl
xchg
fsubr
out
enter
shr
dec
testl
mov
clc
mov
sti
iret
out
std
lret
nop
jmp
shl
cmp
xor
aas
loop
shl
aam
mov
mov
loopne
in
mov
adc
iret
shr
int3
out
out
cmp
loope
ret
aad
test
std
imul
in
loop
mov
call
repz
not
aam
sar
out
div
aas
out
out
jmp
lret
hlt
rcl
in
out
cmp
jmp
in
xlat
mov
lea
mov
mov
jmp
rcl
iret
aad
cmp
loop
cmc
test
add
sti
loope
in
lret
mov
loopne
cld
rcll
ret
in
cmc
rcl
jmp
loope
jecxz
out
mul
jecxz
mov
ljmp
into
adc
loope
test
xchg
mov
lds
iret
out
das
stc
repz
xor
incl
inc
mov
jmp
jmp
in
in
cmc
int
cmp
aaa
aam
repnz
ljmp
lea
hlt
fdivs
in
int
hlt
and
in
loopne
cmp
xor
leave
stc
incb
rcl
xor
fcomi
in
out
ds
xor
sar
stc
dec
in
stc
fiaddl
test
fdivs
ds
loop
xchg
ds
ljmp
enter
mov
in
aam
icebp
cmc
lret
shr
idiv
fcmovu
std
rcr
jmp
neg
lret
test
xchg
mov
repz
shlb
cmp
loopne
clc
rcr
fidivrs
test
mov
lock
cld
repz
repnz
out
fucom
sarb
fdivr
clc
and
test
lret
out
in
in
leave
jecxz
ljmp
cmp
cli
neg
hlt
dec
lret
stc
in
int
or
in
int
jmp
in
cmp
iret
repz
call
leave
mov
fcmovne
lret
int3
mov
repz
lock
fdivrs
loope
fxch
xlat
std
call
mov
ljmp
cli
cmp
aas
aam
cmp
dec
lret
in
loop
rcr
icebp
mov
jmp
cmp
xor
int3
xchg
ffree
sbb
dec
ficoms
out
lret
lock
sti
idivb
enter
in
shl
or
neg
out
in
lret
int
rorb
out
cmp
neg
aaa
fcmovne
sbb
xchg
fcomi
cli
mov
shl
int
shr
out
repz
cmp
int
cmp
cmp
xor
flds
cld
leave
jmp
iret
repnz
stc
icebp
cmc
enter
xor
jmp
iret
ret
rcr
fxch
in
incl
mov
jle
add
icebp
stc
out
in
in
loopne
fucomip
addl
xlat
loope
clc
out
aam
ljmp
aad
fildl
std
shl
test
enter
shlb
fcmovne
in
into
into
rcr
sbb
fdiv
fcmovne
out
incb
in
test
clc
imul
icebp
sti
leave
cmp
sti
in
fsubp
ret
shr
in
loop
stc
icebp
enter
icebp
repnz
ret
ss
lock
aad
ret
lock
ret
sbb
lret
out
out
divb
jmp
jecxz
cld
aaa
hlt
ror
cld
loopne
fiadds
test
in
sti
mov
sub
adcb
cmp
jmp
xlat
fidivrs
lds
cmp
out
jecxz
hlt
mov
divl
int3
aas
cld
icebp
xlat
ds
aad
aad
mov
lea
in
out
f2xm1
fxch
repz
fmul
loope
cld
ror
repnz
std
mov
enter
mov
loope
xchg
in
iret
fidivl
shl
aad
out
in
out
aad
cld
ds
jmp
f2xm1
lret
rorl
aam
in
cmp
icebp
fadds
rcl
stc
mov
xchg
in
in
xchg
das
fdiv
mul
clc
int3
fstp
aad
int3
fmul
aam
roll
xchg
vphaddubq
xlat
out
enter
aam
idivl
fisttpl
loopne
lock
rcr
mov
mov
loop
xor
into
aam
repnz
fcmovnbe
in
aad
cli
cli
out
and
xchg
iret
icebp
xchg
loope
icebp
fdivr
fadd
ljmp
lock
rol
ret
sti
jmp
ljmp
sub
leave
out
in
repnz
iret
cmp
sti
ret
out
lds
lret
fstl
test
call
cmp
ret
in
test
mov
out
out
ror
aad
aam
fcomi
cld
shl
in
cmp
jecxz
xchg
cmp
fildl
icebp
out
sub
xor
iret
cld
repz
out
test
lret
repz
loope
int3
cmp
ljmp
je
add
aam
fstp
fcmovnbe
push
cltd
sahf
mov
out
jg
fiaddl
jle
cmc
inc
cmc
shl
aaa
cmp
clc
mov
incb
addb
xor
idiv
lock
sbb
cli
fisttpl
test
xchg
aad
icebp
lret
lret
sar
int
cmp
sti
fcomip
in
cld
sar
loopne
fst
into
mov
adcl
hlt
lret
int
shr
xor
xchg
aad
ret
in
cli
mov
int
fucom
in
shl
aaa
fxch
out
lret
ror
int
cli
xlat
rol
add
test
rorb
loop
xlat
enter
enter
fsubrp
div
cld
into
rcr
fdiv
out
fsub
out
mov
int3
out
clc
out
int3
int
call
fprem
out
add
cld
std
sti
mov
out
test
out
push
test
xor
cmp
lock
fstp
hlt
fstp
enter
fsubp
lret
mov
xchg
jecxz
jmp
fnstcw
shr
cmp
repz
clc
fdivr
in
fucom
xchg
fcom
mov
loop
xchg
lret
ljmp
cmp
in
out
repnz
call
cmc
out
fiadds
mov
hlt
shl
repz
aam
call
div
shl
loop
loop
ds
loope
cli
nop
shl
loop
shl
stc
std
stc
cmp
in
fstpt
test
loopne
in
int3
mov
and
out
out
enter
aaa
cli
clc
lret
fcompp
aad
ss
shl
ror
ljmp
hlt
imull
out
aam
test
xchg
rolb
fucomp
incb
int
sarb
out
fdiv
repnz
sbb
cli
hlt
mov
enter
xchg
xchg
xchg
fsubrs
ljmp
hlt
cld
cmp
rcr
xchg
repz
enter
out
fcomip
out
xor
in
shlb
int3
into
xor
lock
not
in
sar
enter
iret
icebp
in
xchg
shl
icebp
loop
xor
std
jmp
fsqrt
cmp
aam
jmp
aad
out
mov
filds
xor
aam
cmc
int
std
xlat
ljmp
jecxz
test
ljmp
out
fisubrl
cli
jmp
leave
rcr
fcomp
cmc
pop
fildl
test
sbb
jg
fiaddl
jle
lock
cmp
repz
sar
ffreep
testb
movb
aam
int3
out
cmc
hlt
test
jmp
fcmovnbe
test
jecxz
adc
cmc
fcmovnu
int3
mov
call
call
aad
int
cli
ds
loopne
enter
les
mov
divl
out
xor
cmc
aam
xor
int
cmc
out
fmul
mov
xchg
push
mov
in
xor
aam
stc
fcomip
addl
hlt
filds
sti
shl
xchg
mov
in
in
aam
out
cmc
cmp
loope
loopne
cli
cmc
jecxz
loop
icebp
mov
jmp
fcmovne
in
lock
clc
adc
clc
out
jecxz
mov
mov
rcl
xchg
dec
jmp
out
ss
rcl
stc
jecxz
into
fst
sbb
shl
fsub
int3
mov
rcl
lret
lock
fcmovnbe
lock
adc
repz
fsubr
inc
fisttpll
out
into
mov
fmul
jecxz
fsubr
iret
sarl
idivl
sar
clc
fscale
ljmp
loop
in
in
ljmp
in
sti
ss
xor
icebp
rol
cmpb
repz
ljmp
in
loope
lret
das
aam
sbb
in
in
fstp
div
faddp
leave
fmul
shr
mov
lret
leave
xor
out
int
int
incl
out
out
xchg
rorb
ss
repnz
iret
test
roll
lock
icebp
loope
call
in
ds
and
cmp
cmc
aad
mov
addl
vpsubusw
cmc
aam
in
std
lret
cld
stc
loope
fsub
mov
loop
fst
jmp
sbb
das
into
rcl
shl
sarl
lock
add
out
enter
mov
loop
leave
out
leave
adc
lds
lret
addl
adcl
xor
int
leave
imul
aad
lock
ret
loope
fsub
cmp
mov
shl
nop
repz
jmp
rcl
iret
aam
aad
sarl
cmp
push
push
cmpsb
jg
fiaddl
jle
sub
repnz
xlat
out
ljmp
loop
ds
test
fsubr
std
clc
stc
int3
shl
out
test
loope
enter
lret
cmp
cld
into
cmp
xchg
std
cld
xchg
xchg
mov
iret
lock
jmp
xor
xor
hlt
ds
cld
fimull
nop
ljmp
cmp
fnstenv
shl
cmp
clc
test
orl
fptan
sti
sarl
hlt
ljmp
rcl
cli
test
lret
nop
in
rcr
repz
xor
aad
fcmovbe
cmp
out
sti
fldl
std
enter
out
dec
not
ss
idivl
clc
lret
std
iret
cmp
shl
cli
testl
shl
mov
xor
leave
lock
cmp
repz
fimuls
xchg
mov
clc
cld
jmp
rcl
lret
cli
into
aam
fsub
aad
jmp
rorl
cmp
call
lret
fdivrs
cmp
fmul
xlat
out
ljmp
loopne
lock
xor
xlat
rcl
out
in
int3
rol
fmulp
cli
enter
ret
ljmp
xchg
xor
xor
repz
fstp
cld
cmc
sub
cmp
test
ret
jecxz
mov
shll
out
cmp
or
cmp
push
in
int3
test
adc
xor
out
into
aaa
cmp
out
in
int3
cmp
test
cmc
enter
out
out
add
lock
ss
icebp
lock
lock
loop
lret
lock
out
test
shll
cmp
aad
in
aas
test
out
call
jmp
call
lret
cmp
xor
xlat
int
loop
fcomip
add
out
shl
sti
mov
sti
xchg
call
in
cmp
vmovq
aas
dec
ret
test
repnz
ret
mov
lret
leave
std
out
jecxz
out
out
cli
cmp
in
jmp
in
idiv
rorb
lret
int
mov
mov
xor
add
jmp
rcl
aad
aad
fstp
aam
xor
jne
popa
scas
cli
test
jle
add
fmul
rolb
fcomp
aaa
jmp
repz
mov
in
out
loopne
mov
xchg
in
stc
aaa
int3
fucomip
cmp
clc
jecxz
iret
loope
and
ret
loop
fucomp
std
xchg
cld
int3
xchg
loopne
aaa
int3
iret
imul
repz
xor
ret
cld
loope
roll
mov
int3
xchg
repz
cmp
jmp
xor
test
ljmp
cmp
xchg
aam
xlat
bnd
xlat
cmp
jmp
shl
cli
loopne
test
test
out
xchg
lock
f2xm1
in
xor
lret
rcl
fcos
cmp
std
faddl
fdivp
xchg
out
fcomip
call
repz
call
fnstsw
ret
hlt
clc
in
xchg
jmp
aam
out
aam
shlb
ss
loopne
cld
loop
into
div
mov
int
and
leave
mov
repz
cmp
clc
neg
add
ret
jmp
clc
jmp
imulb
not
fxch
repnz
cmp
lret
loopne
inc
aam
lret
std
mov
xlat
ret
loopne
repz
aaa
shll
out
out
leave
int3
jmp
cmp
call
jecxz
sti
fcmovnu
sub
in
enter
xor
cmp
out
leave
in
testl
loopne
jmp
out
aad
xor
out
xor
aaa
incl
loopne
repz
push
fisttpll
shr
xchg
xor
in
xor
ror
in
out
cmpb
and
neg
idiv
in
int
shl
nop
xchg
test
in
out
ss
cmp
and
ret
ret
jmp
adc
jmp
cmc
iret
int3
aam
cmp
xlat
aaa
std
repz
loop
std
mov
addl
das
sub
leave
repz
sarb
int
sarl
into
loope
mov
cmc
repnz
std
int3
cmp
rcr
rcl
stc
adc
sti
xlat
out
out
out
mov
cmc
cmc
mov
out
lds
int
out
shll
aas
cld
clc
fsub
imul
jmp
rol
lret
ror
int
aam
popa
cmpsl
xchg
loope
stos
jg
fiaddl
jle
mov
jecxz
lret
xlat
clc
cmp
iret
aam
in
fildl
sbb
nop
jmp
enter
fld
sar
into
leave
aas
sti
lret
fucomi
roll
test
xchg
xor
loope
fstpt
cmp
repz
xlat
loopne
rcl
cmc
ret
fisttps
fisttpl
loop
rcl
in
cmp
int3
cli
loopne
repnz
xchg
in
in
fucomp
fsubrp
in
loop
das
jmp
in
int
sarl
shl
lock
ret
cld
xchg
fdivr
mov
lret
int
out
orl
xor
rcl
xor
ds
mov
les
jmp
jmp
xlat
iret
xor
sti
xlat
leave
ds
iret
lret
ret
cmp
sbb
in
into
sti
into
lret
out
cmc
in
ss
lret
out
lret
faddp
mov
in
fdivr
fdiv
mov
mov
jmp
repz
leave
xlat
shl
cmp
in
lret
out
loop
xchg
in
fiadds
in
xchg
lea
ret
xor
xor
fsubrp
hlt
iret
loopne
std
loop
xchg
cmc
in
xchg
std
out
lret
call
loope
repnz
das
rolb
aam
ret
xlat
rorb
out
fmull
sub
xor
sar
loop
aam
in
fcomi
xchg
xor
icebp
cld
cmp
shr
stc
cli
cmp
mov
out
xchg
shl
fdivp
xchg
in
icebp
shll
shr
cmp
hlt
std
cmc
aas
testl
loopne
test
std
ljmp
stc
in
roll
enter
out
in
hlt
loop
call
leave
loopne
into
lock
out
filds
aaa
icebp
fmul
cmp
repnz
cli
ljmp
in
lock
in
int3
aam
fsubr
sti
out
in
call
sar
loop
jmp
decl
fcomip
cmc
jecxz
ss
ljmp
aam
rolb
xlat
jbe
jmp
int
lret
lret
int
mov
insb
outsl
xor
jle
in
neg
leave
xchg
xchg
cs
fidivrl
fdivrl
not
repz
jecxz
cli
in
clc
lret
ffree
in
mov
hlt
xchg
out
xor
sti
fdivr
int
xor
testb
jecxz
fsub
out
incb
repnz
cmp
sarb
fldl
cmp
fdivrs
movl
loop
in
rol
xor
fnop
xor
cmp
aam
std
fsubr
int
mov
shl
mov
repz
shl
cld
aaa
xor
rol
sti
sar
sar
aam
enter
out
mov
call
into
out
out
shl
leave
cmp
xlat
into
cli
call
jmp
cld
int3
addl
ds
loope
ror
fsubp
sti
out
sti
rol
cli
in
xchg
adcb
fdivs
ljmp
fildl
cmc
mov
fsubr
faddp
filds
clc
das
aaa
les
xor
icebp
lret
neg
jecxz
test
repz
std
hlt
xchg
out
mov
int
out
repz
sbb
lock
fmul
call
fucompp
icebp
into
xchg
leave
cmp
ret
out
enter
fadd
xlat
fcos
loop
cli
rcr
test
incb
bnd
cmc
lret
cmp
cmp
loopne
testl
ret
shll
int3
cmc
div
std
repz
loope
aam
repz
cmp
ret
stc
jmp
jecxz
jmp
aam
in
addb
ror
loope
jmp
xchg
fistl
aad
test
hlt
roll
aas
rcr
test
loope
xchg
in
lret
out
ss
cmc
jmp
cmp
ret
ffreep
in
int
fimuls
fistpll
xlat
cmp
sti
out
adc
shl
testb
jmp
sub
mov
jmp
cli
fdivl
lock
repz
out
call
fldl2e
sti
nop
mov
out
incb
lret
jecxz
fcomi
stc
pop
jmp
ror
ror
aad
inc
push
adc
add
repnz
fadds
fistl
xorl
out
aas
jmp
fldpi
test
addb
lea
in
in
cmc
iret
fcmovb
int
std
cmp
in
sti
call
stc
loopne
test
rol
in
lret
call
shr
fcom
cmc
iret
repnz
jmp
clc
faddl
jmp
repz
jmp
cmp
out
jmp
and
cmc
fcmovnb
loope
clc
fstp
int
xchg
cld
mov
lock
repnz
cmp
loopne
loop
xlat
clc
enter
loopne
into
rolb
xor
jmp
xor
iret
in
ljmp
ret
aad
enter
mov
xchg
xchg
cld
xor
xor
repnz
in
neg
cld
ljmp
testl
shl
fidivs
clc
xor
sarb
aaa
aad
cmp
lock
out
cmp
aam
aam
xchg
mov
test
int
int
in
out
sti
icebp
repnz
loope
fdiv
jecxz
mov
enter
fcomi
shr
loope
neg
xlat
jmp
rcl
cmp
rcl
clc
mov
in
lret
out
lret
xchg
loopne
out
shr
ljmp
cmp
cli
sti
stc
into
out
in
test
ss
repz
cmp
hlt
cmp
sti
cli
enter
loopne
shr
orb
aaa
aam
iret
int
cmp
aam
ds
fsub
loope
int3
sub
ljmp
leave
in
cmc
sar
xor
stc
iret
out
jecxz
mov
leave
call
loope
lret
out
iret
out
int
sti
int
in
ds
roll
loope
flds
out
sub
shll
fadd
lock
fsubr
rcr
fdivp
lock
out
fimuls
shl
in
cmc
xlat
jmp
lret
fnop
out
test
ret
cld
out
out
loop
loope
loope
xchg
in
hlt
call
jmp
cmp
shl
fcos
aad
fsubr
enter
mov
lret
in
xchg
in
out
xor
jmp
out
clc
loope
leave
ret
push
mov
sub
addl
push
andl
push
addl
push
push
addl
push
call
mov
andl
test
movl
je
andl
lea
push
andl
push
xorl
call
addl
push
addl
call
mov
test
je
movl
mov
jmp
mov
movl
jmp
push
push
push
movl
call
movl
mov
mov
movl
cmp
movl
jne
pushl
push
adcl
push
push
orl
call
inc
movl
cmp
jb
movl
inc
movl
cmp
jb
sbbl
push
call
orl
movl
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
xor
xor
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
sub
sub
movl
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
lea
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
add
lea
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
inc
mov
xor
xor
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
pushl
push
call
cmpl
jb
add
mov
movl
mov
cmp
movl
mov
mov
movl
je
mov
xorl
xor
subl
add
imul
movl
mov
movl
jmp
mov
adc
xor
and
add
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
push
call
cmpl
jb
mov
add
xor
add
add
movzbl
and
mov
orl
mov
xor
mov
adcl
xor
xorl
add
cmp
jne
subl
push
orl
pushl
andl
pushl
call
xorl
mov
notl
mov
mov
negl
mov
mov
or
mov
mov
sub
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
mov
orl
xor
add
jmp
sbb
mov
xor
sbb
lea
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movzwl
xor
lea
mov
mov
neg
mov
add
movl
adc
mov
sbb
movl
or
mov
dec
mov
xor
orl
add
movl
cmp
movl
je
xor
mov
xor
add
sub
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sub
mov
sub
add
movl
mov
cmp
ja
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
je
mov
jmp
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
fmul
ret
ror
fst
repz
mov
jle
add
div
cmpl
test
cld
loopne
iret
jecxz
mov
cmc
xor
cmp
shr
lret
int
cmp
cmc
fstp
div
hlt
clc
mov
loop
in
repnz
out
into
call
cmp
out
cmp
clc
cli
test
loope
cli
or
loopne
lock
nop
aam
loop
aaa
out
out
cmp
cmp
and
std
fcmovbe
loopne
fsub
fmulp
aad
int
lret
xchg
xchg
xor
fcmovne
cmc
iret
sti
ljmp
in
aam
ljmp
int3
into
std
test
ret
neg
cmp
test
loop
sar
stc
ljmp
lret
rcr
xor
fmul
div
ljmp
rcl
sarl
ror
orl
in
dec
sar
out
sar
out
cmp
fucomip
lock
addl
orl
jecxz
in
and
in
out
iret
ss
into
iret
aam
neg
mov
loope
iret
sub
ret
shr
xlat
fdivrp
add
addl
sbb
leave
std
cli
mov
shr
jecxz
in
fcmovnbe
fcmovnb
aad
out
cld
out
in
xor
xlat
in
sti
jmp
iret
ljmp
enter
fcmovne
lock
ljmp
leave
mov
fildl
ss
fnstcw
idivb
aas
loopne
icebp
addb
jmp
test
ror
jmp
xor
jmp
cmp
sbb
sar
dec
xlat
xchg
rcr
popl
xor
mov
cli
sarl
icebp
sarl
cmpl
cmc
xlat
sti
clc
jmp
clc
mov
lret
jmp
int3
ret
xor
fnsave
clc
lock
cmp
faddp
and
in
loope
sbb
out
out
out
aam
rcr
cmp
repnz
in
shl
call
or
fisttps
ret
cmp
cmp
loope
decb
out
fdivrp
call
ror
in
lret
jmp
std
div
lock
shr
lret
cli
lret
in
nop
mov
int3
in
out
shl
aad
hlt
cmp
int3
test
fcmovu
ror
in
in
mov
ret
cmp
int3
sarl
hlt
fdivrs
cmp
ret
jmp
mov
jmp
aaa
cmp
shlb
clc
xlat
sti
adc
ret
shl
xchg
mov
test
loope
leave
in
mov
mul
aam
shlb
lock
jmp
fdiv
vcvttpd2dq
in
addl
xchg
aaa
loop
ljmp
push
mov
movl
mov
push
jmp
rcl
leave
leave
fst
fsubrl
std
sub
std
movsb
lock
mov
jle
add
call
ffreep
ffree
test
mov
orb
jmp
leave
ds
fnstsw
cmp
ds
fsub
shl
cli
int
xchg
call
in
in
fcmovb
std
std
clc
out
into
int3
fcmovnu
fucomi
out
filds
enter
mov
cmp
sti
in
aaa
fdiv
int
into
shl
cmpl
loopne
in
fcmove
xchg
xor
xor
xlat
xor
push
fxch
filds
call
cmp
jecxz
xchg
loop
aaa
fmul
shll
enter
rcl
aam
loop
addb
jmp
lret
popl
xor
fcmovne
xor
cmp
fcmovne
in
rcl
out
jecxz
ljmp
lea
out
sar
fptan
repnz
in
fdivrp
aas
ret
cld
xchg
addl
icebp
mov
xor
in
enter
stc
shr
loopne
mov
cld
flds
icebp
leave
test
repz
enter
sti
sarl
icebp
sarl
aad
shl
idivl
fadds
loope
shl
out
xor
sub
in
jmp
fcmovu
cld
addl
loopne
nop
ljmp
shlb
lret
jmp
fcomi
std
aam
aad
loop
fildl
cli
mov
ret
test
repz
cli
clc
fdivr
int3
fldl
cmp
out
cli
clc
fstp
int
xchg
test
aad
das
cmp
leave
lret
cli
xor
not
inc
idiv
xchg
mov
xchg
in
filds
leave
leave
aad
fcomp
lret
stc
rcr
sar
fld
testl
and
iret
int3
xor
ret
aam
sti
ds
into
aas
in
mov
hlt
ret
jmp
xchg
fsubp
lret
cmc
cmc
ss
fnstenv
xor
cmp
jmp
call
mov
loop
enter
out
shl
hlt
rcl
ds
aad
in
jmp
shl
out
mov
xchg
aam
enter
ljmp
out
roll
test
lret
xchg
orl
xor
lret
repz
lret
neg
fnsetpm(287
mov
sti
ret
add
icebp
jmp
jecxz
shlb
ret
out
div
out
aaa
xlat
out
aam
icebp
cld
test
ret
in
xchg
lret
out
shlb
repnz
iret
iret
cli
cmp
hlt
ss
test
std
sbb
int
nop
loop
into
fimuls
cmp
cli
lock
hlt
out
fsubp
aaa
loopne
enter
test
sbb
fisttpll
lock
xor
add
add
iret
xlat
ffree
fst
loope
sub
movsl
cli
mov
movsb
mov
jle
add
jmp
shl
iret
ret
roll
or
cmc
rolb
cmp
repnz
iret
sti
loopne
ret
aaa
shl
call
iret
enter
lret
xor
loop
in
fstp
cli
roll
std
clc
cli
sti
cli
lret
out
rcll
fcmovnu
xor
aad
out
aas
fsubp
jecxz
and
fmul
clc
fdivrp
mov
lret
repnz
out
das
jmp
fsubrp
incb
addb
mov
mov
int
aad
fdivl
das
call
lret
jecxz
rolb
loopne
xor
in
lret
jecxz
xor
cmp
in
test
hlt
cmp
cli
rcr
out
rol
lret
cmp
rcl
cmp
loopne
lock
jecxz
sarb
loope
out
in
xchg
int
jmp
shl
fcomi
call
cmc
ss
loope
aam
out
out
int3
mov
out
in
int
xlat
out
cmc
loope
div
fnsave
ret
test
shl
jecxz
lret
xchg
iret
xor
ret
xor
sti
iret
cmp
sbb
sar
shl
cli
rolb
jmp
fmul
jmp
xchg
hlt
xlat
fcmove
stc
xor
xor
shl
jecxz
loop
cmc
faddp
enter
out
fiaddl
leave
ret
lret
out
clc
call
ds
cli
iret
rcr
sti
mov
call
leave
out
int3
shl
int
cmp
std
hlt
sbb
aam
mov
fiadds
sti
loop
mov
cmp
aaa
enter
sti
fnstcw
bnd
aad
xlat
addb
xchg
fmul
lret
loopne
aad
lock
out
in
leave
cmp
in
aam
ffreep
cmp
inc
mov
lret
addl
enter
rcr
ss
sbb
cld
std
ret
std
in
mov
loope
loope
int
xor
sti
ljmp
sti
stc
adc
aam
fcmovne
out
lds
icebp
jmp
sub
out
aam
std
out
leave
repz
xchg
in
int3
mov
out
loope
mov
fsubrp
int
in
divb
cmc
ss
cmp
clc
test
cld
call
mov
lret
lret
xchg
xchg
xor
xor
xor
aad
cmp
repnz
sar
lret
jmp
fsub
cli
ljmp
into
ror
cs
ds
int
cmp
mov
in
ljmp
int3
lret
repnz
loop
xor
cli
jmp
fnstenv
rcr
cmp
out
loop
jmp
mov
jecxz
mov
cmp
xchg
rol
mov
push
not
jmp
ret
ror
aad
and
pop
std
mov
pop
add
xlat
out
xlat
out
cmp
sti
repz
rol
loopne
ds
loopne
jmp
imul
out
fsincos
imul
jmp
into
out
shl
ror
loop
hlt
int
jecxz
xor
sar
sar
cmp
fcmovnu
repnz
ds
in
call
clc
ret
iret
repnz
cmp
roll
or
ljmp
in
out
ljmp
std
xlat
cli
lock
aam
imul
aas
loope
loop
icebp
cld
filds
cmp
cli
das
fnstenv
cmp
xor
fsubr
addl
loopne
lock
xor
fsubr
shr
fmul
loope
aam
jmp
into
in
leave
cld
mov
in
enter
int3
repz
fcmovbe
xor
iret
sti
rcl
xlat
xchg
stc
mov
xlat
iret
in
out
enter
jecxz
aad
sti
fcmovu
shl
test
mov
loopne
shl
orb
sarb
ljmp
aas
xchg
icebp
test
fdivp
in
xchg
lret
sti
loope
xchg
das
int3
iret
enter
hlt
xlat
imul
loop
out
xor
not
int
addb
clc
mul
repz
stc
jmp
clc
cmp
test
loopne
mul
in
and
lock
xor
shr
sar
fst
repz
rcl
addl
out
jmp
xchg
fdivr
rcr
fdiv
xlat
jmp
clc
test
addb
xchg
cld
int
aam
jmp
jmp
xlat
cld
sarl
aad
jecxz
out
shl
sar
sbb
test
in
leave
mov
mov
cmp
cmp
cmc
clc
ss
int
fstp
lock
movb
mov
fsub
rcl
stc
in
enter
loopne
jmp
loop
cld
rol
add
sbb
sbb
lret
loope
in
lret
cmp
cmp
cli
test
xlat
shl
test
loop
into
xchg
jmp
out
int3
shlb
ss
add
out
cmp
out
incb
in
int
aam
sar
lret
cmp
cmp
fcom
fucom
cmc
fucomp
lock
fdivr
jecxz
iret
icebp
adc
repz
loop
cmp
cmp
cmc
leave
aas
int
in
adc
mov
mov
lret
sbb
out
rclb
in
xor
std
into
loope
roll
out
vpor
hlt
xor
aaa
jmp
lret
repz
rcr
out
fistpll
enter
out
fdivp
mov
movl
mov
jmp
leave
int3
rcl
aad
int
mov
xchg
mov
out
fidivrs
jle
aad
shl
fxch
fsincos
aad
aam
loope
cmp
ffreep
ffreep
hlt
mov
xchg
mov
xchg
cs
iret
int
cli
fucomp
xor
sarl
faddl
nop
lock
loop
stc
cmp
cmp
cmp
call
cmc
in
out
hlt
enter
in
int
fsubp
mov
loope
subb
xor
fcmovu
cmp
loopne
sti
aam
xchg
cmc
out
in
loope
and
das
lret
cmp
out
fdivs
fcmovu
cmp
loope
les
fdivp
fdiv
mov
fxch
xor
cmp
loope
and
hlt
add
incl
xchg
nop
test
in
jmp
cmp
ret
out
loope
addb
fiadds
test
out
std
cmpb
fadds
test
in
aaa
idiv
cmp
imul
out
call
int3
cmp
vpminub
cld
ret
clc
out
incl
in
lock
std
cmc
fucomip
stc
test
loopne
loop
mov
lea
mov
jmp
rcl
fcmovnbe
iret
cmp
repz
aas
out
out
addl
lea
xorb
aam
aas
fistpll
rol
cld
push
loope
cli
jecxz
lret
repz
shr
lret
xor
cld
std
jmp
cmp
stc
test
loop,pt
in
lret
mov
jmp
mov
incl
lret
jmp
fldln2
loopne
loopne
aas
aad
in
fstp
jmp
fisttpll
nop
incb
call
cmp
stc
rcr
mul
fsub
xlat
fdivp
out
int3
jmp
out
xor
fsubr
in
rol
cmp
fsubr
test
loopne
lret
fdivr
test
fucomi
mov
cmc
mov
lret
repnz
cld
int3
xlat
call
xor
adc
cmp
faddl
incl
xor
aaa
sti
iret
lock
shl
fucompp
sti
ret
loopne
into
fiadds
in
iret
aaa
in
imul
xor
repz
cmp
cmc
ret
test
test
sub
inc
clc
aaa
cli
sub
jecxz
ret
mov
out
out
repnz
xchg
loop
jmp
xor
lret
std
ljmp
iret
aam
jecxz
idiv
out
ljmp
fst
lret
aam
test
iret
cmp
cmpb
imul
enter
mov
xchg
into
ret
shr
das
xor
out
repz
iret
loop
stc
hlt
fimull
out
into
cmp
movl
jmp
aas
aam
aas
aad
iret
aam
adc
mov
lea
inc
jg
pop
add
xchg
iret
xor
xor
icebp
xlat
inc
jmp
ljmp
loope
leave
or
std
xchg
int3
ret
ret
cli
enter
fiadds
repnz
fdivrl
enter
out
fiadds
nop
fildll
aaa
cmp
lock
into
xchg
clc
in
jmp
out
and
lock
into
xor
xor
cmp
aam
rolb
clc
fsub
clc
idiv
out
mov
xchg
xchg
aam
xor
in
into
fucomi
shl
int3
repnz
add
in
fisttps
jmp
aam
aam
out
cli
rcl
cmp
aam
shr
ret
loope
aad
clc
out
addl
mov
cmp
cli
rcr
cmc
fcmovnb
lock
mov
addl
shr
xlat
cmp
lret
leave
out
aam
lret
fdivp
in
ret
mov
loopne
fsubp
lea
rol
shr
dec
cmp
rcr
div
lret
loop
out
in
test
xor
clc
clc
lds
xlat
hlt
repz
rorl
fsubr
std
lea
jecxz
lock
clc
icebp
into
cld
jmp
aas
int
test
out
jecxz
jmp
dec
xor
enter
cld
lret
idivl
ret
hlt
testb
in
cld
rcl
xchg
in
cmc
jecxz
aaa
ror
sarb
cmp
sar
fld
loop
mov
test
mov
mov
into
lock
jmp
sti
stc
clc
ret
fsub
aam
in
out
out
xchg
mov
test
shl
xor
in
test
aam
aad
hlt
fcmovu
out
fmuls
mul
ss
sar
hlt
rcl
out
int
out
sarl
jmp
call
in
std
jmp
repz
rcl
cmp
stc
into
into
cld
repnz
ftst
xchg
in
into
or
out
jmp
repz
fdivrs
std
shr
stc
loope
loop
lret
aas
mov
mov
in
repz
in
ss
lock
xlat
fxch
out
cmp
xlat
in
mul
cli
sbb
and
cli
iret
in
fsubp
xlat
ljmp
out
lret
repz
int
rol
stc
call
iret
incl
jecxz
cmc
xor
out
aad
sar
sti
fcomp
into
out
sti
ret
cld
xchg
in
or
loop
xchg
jmp
int3
cmp
lret
fidivrl
hlt
clc
loope
test
shr
int3
leave
clc
ljmp
lock
enter
loopne
cmp
sti
xor
xchg
mov
inc
cld
mov
incl
xor
add
movl
cmp
movl
je
jmp
lret
rcr
fstp
fisttpll
inc
mov
sbb
jle
add
in
std
shr
out
in
leave
leave
repnz
iret
jmp
cmp
in
jecxz
fadds
loop
ret
in
xchg
ljmp
xor
cmp
cmc
in
fiaddl
cmp
mov
in
in
loop
sub
loop
leave
fcmovb
aad
lret
fiadds
in
out
fsubr
in
out
hlt
cmc
jmp
lock
xor
shl
ds
fnstsw
ds
idiv
ret
mul
inc
int3
cli
addl
into
enter
icebp
icebp
xlat
loope
fstp
jmp
in
leave
mov
sub
rorb
xor
fidivrl
repz
ljmp
jecxz
test
mov
mov
xchg
lock
shl
fadds
test
sar
mov
stc
jecxz
cld
mov
xchg
in
sub
aam
in
enter
cmp
div
out
imul
test
ret
in
mov
std
lock
repz
aam
fsubrp
sti
cmp
les
std
std
jmp
lret
xchg
test
lret
ror
sub
out
enter
cli
idivl
cld
aam
repz
fsub
in
cli
jmp
fdivp
xchg
aad
in
rcl
repnz
in
in
aad
clc
stc
div
aad
loope
or
sti
out
fisttpll
xchg
stc
icebp
fcmovbe
cmc
rolb
incl
mov
sub
xchg
loop
fnstenv
int3
call
cmp
cmpb
xchg
xlat
ret
jmp
xchg
enter
loope
xor
cmp
aam
jmp
repz
adc
out
lds
repz
loope
cmp
fucomi
and
fcmovnbe
repnz
loope
mov
addl
repz
aad
ret
stc
hlt
leave
aad
cli
fucomp
aad
fcmovbe
hlt
shl
int3
incl
out
sar
shl
clc
jmp
aad
sti
xchg
xor
jmp
call
mov
int3
fmul
xor
fucom
stc
rol
test
cld
cmp
xor
cmc
ret
xor
std
std
fstp
rol
aad
stc
cli
aam
aas
jmp
int3
fisttps
and
xchg
loop,pn
jmp
sti
jmp
cmp
icebp
icebp
leave
in
mov
mov
std
sub
jmp
fildl
dec
vpminsw
out
jmp
xchg
xchg
enter
sarl
cmp
shl
std
aas
cld
ret
int3
call
rol
ror
lock
cmp
shl
in
into
push
cmp
hlt
cli
loop
orl
ja
add
movl
add
add
adc
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
add
add
orl
push
xor
jmp
rcl
aad
aad
fstp
jns
fwait
mov
jne
jg
pop
add
mov
in
loopne
in
mov
ss
icebp
lret
clc
in
enter
sti
stc
aas
cmc
clc
in
out
enter
jmp
mov
fisttpll
divl
sti
hlt
cli
cmp
adc
rol
aad
jecxz
sti
cmp
out
mov
xchg
loopne
ret
jmp
cmp
fnstsw
shl
rcr
xchg
lret
test
xchg
xchg
cmc
ss
xor
xlat
cmp
cmp
movl
jmp
call
aam
xor
iret
cmp
fbstp
fistpll
test
fsub
call
decb
xchg
fcmovbe
in
rcl
idivl
cmp
rol
in
out
inc
jmp
loope
mov
call
out
cmp
cld
idivb
aam
fdivp
mov
leave
in
call
loope
shlb
not
ljmp
bnd
add
mov
mov
inc
lret
icebp
xor
sub
enter
lock
fadds
fmull
int3
shl
lock
stc
jmp
out
lret
sar
repz
ret
std
in
into
add
jecxz
jmp
fnstsw
cmc
hlt
loope
cmpl
mul
fsubrp
fcmovu
fdivp
jmp
int3
lret
shl
lock
out
sarl
ljmp
shl
cli
fisttpll
ljmp
iret
ss
int3
fmulp
aas
cmc
shr
ret
fdivr
fucomi
xchg
mov
shl
loope
xchg
rol
call
in
cmp
shl
fstpt
jecxz
aad
fiaddl
loop
lea
lock
out
int3
loope
sar
std
shr
cli
repz
loop
ljmp
jmp
xor
out
icebp
les
fsubr
fdiv
ret
sti
ds
jecxz
mov
fmuls
call
ss
cmp
hlt
repz
fsub
ret
fcmovnu
out
in
lock
jecxz
inc
out
repz
rcr
out
aas
loope
and
icebp
cmp
aam
std
out
rcr
lret
iret
in
jecxz
aam
fdivrs
out
repnz
test
jecxz
mov
shl
xchg
repnz
lock
rcl
xor
lock
cmp
fdivrs
std
cmc
xchg
aam
cli
into
jecxz
fcmovu
mov
mov
aam
aad
ljmp
sti
ftst
fmull
fsubp
int
jmp
addb
enter
cmp
xlat
ds
xchg
hlt
mov
mov
lret
in
loop
into
out
in
cmp
jmp
fcmovnu
shl
cmp
xor
jecxz
jne
pushl
mov
jmp
rcl
int3
lret
fst
fstl
cltd
push
repz
dec
jg
pop
add
faddl
jmp
idivb
shlb
xor
jmp
iret
xchg
mov
xlat
lret
leave
incb
xchg
aaa
shl
ret
aam
aas
aad
ds
in
aad
stc
shl
loop
mov
ret
loop
ljmp
hlt
sti
ljmp
out
hlt
cmp
fadd
mov
jecxz
stc
loope
test
adc
stc
icebp
adc
fucomp
loope
loope
stc
cmc
hlt
test
iret
shr
xorl
cmp
icebp
aam
sti
cmp
iret
mov
call
sti
sar
ficoms
xor
in
icebp
fmul
adc
and
fcomip
in
mov
loope
in
fimuls
lock
aad
std
iret
int3
fdivr
ret
rol
div
sti
fstl
cld
jecxz
icebp
in
repnz
cmp
lret
stc
fdivp
leave
hlt
cmc
mov
stc
mov
jecxz
xor
cmp
enter
cmp
aam
fsub
aad
cld
jecxz
out
mov
out
test
loop
hlt
xor
std
iret
xor
test
fsubrp
dec
fmul
lret
xchg
stc
sub
cs
int3
loop
xlat
clc
int
out
in
lret
mov
lock
fcmovb
leave
sti
fcmovbe
shl
lock
rol
and
sti
out
cli
stc
sbb
cld
std
mov
out
fstp
fxch
ljmp
lock
les
fucomi
fisttpll
lret
out
lret
icebp
aaa
cmp
cld
fcomp
leave
aad
in
xchg
mov
xchg
loopne
lock
lock
fcmovbe
out
jecxz
jmp
in
add
in
iret
loopne
lock
in
in
jmp
cmp
stc
icebp
stc
std
std
loop
loope
decb
ror
repz
aas
aaa
into
in
aaa
out
fucomp
sarb
cmp
cld
shr
std
jecxz
xchg
loopne
fst
jmp
lock
aam
repnz
idiv
ret
fstp
ffreep
cmp
leave
lock
int3
in
loope
int3
leave
loope
hlt
enter
sar
sar
call
iret
loop
xchg
fadds
ror
sar
jmp
cmp
loope
ror
int
repnz
loopne
in
xchg
fyl2xp1
stc
cld
hlt
hlt
shr
aas
dec
addb
loop
lret
int3
jmp
shl
shl
jmp
cmp
in
aad
repnz
fcmovnbe
loope
std
int
ret
repnz
in
mov
out
int3
cmp
lret
enter
ljmp
daa
add
jmp
aad
fnstsw
repz
cltd
pop
push
scas
dec
jg
pop
add
mov
call
in
xchg
jmp
rcl
lret
aad
out
clc
lret
rcl
aam
xlat
test
cld
test
in
iret
ljmp
imul
rol
sbb
xlat
aad
fadd
xlat
cld
std
out
leave
loop
fcmovne
out
mov
into
lret
out
cmp
ljmp
orb
nop
xchg
lret
shl
repz
out
in
cmp
int3
aaa
test
aam
aam
cld
ret
out
call
loope
icebp
call
iret
leave
sub
cmp
loop
clc
neg
test
test
jmp
faddl
in
fmul
sti
rcr
cmp
mov
in
out
mul
xchg
repnz
into
xchg
lock
int3
sub
xor
ror
aaa
in
in
std
sar
clc
std
testb
lret
sti
jmp
xor
jmp
cmp
cmp
sarb
fcmovnbe
addb
testb
fucomp
enter
aam
xor
cli
loope
addb
lret
out
orl
loop
enter
lret
cld
fadd
jecxz
icebp
cli
std
call
mov
hlt
icebp
xchg
into
ljmp
shr
rol
std
loope
jmp
sub
stc
fucomi
jmp
mov
div
cmc
std
xor
leave
lret
ftst
xchg
clc
loopne
add
in
loopne
iret
out
leave
nop
xchg
mul
lret
cmc
in
ds
ds
shl
hlt
ret
std
stc
fimull
in
int3
xor
fdiv
int
jmp
repnz
out
rolb
les
hlt
lock
loope
cmp
aaa
aad
cmp
test
fdivrp
clc
dec
mov
filds
jmp
xor
call
jmp
out
xor
repz
cld
jecxz
out
mov
cmc
xor
jecxz
stc
aad
loope,pt
loop
xchg
loop
cmp
loopne
leave
loop
shr
cmc
neg
call
std
loopne
testb
sbb
loop
out
call
aam
cmp
in
call
fiaddl
fdivrs
sti
mov
stc
iret
loop
in
mov
cmp
sti
ss
repz
test
ret
repnz
fdivrp
int3
cld
sti
out
into
call
mov
int3
cmc
fsubr
into
jecxz
push
fcmovb
add
out
loopne
popl
ljmp
sarl
cli
std
int3
imul
ds
fmuls
fcomi
xchg
iret
in
xlat
stc
ljmp
cmp
mov
jmp
iret
aam
aas
aad
iret
aam
ljmp
cmc
xorl
pop
add
fst
sar
rol
ret
fmuls
fucom
out
les
iret
clc
cmp
cmp
sar
xor
cld
in
repnz
fstp
fmulp
fiaddl
aad
cmp
int3
sar
cli
int3
loope
rcr
fucomp
std
fyl2xp1
rol
ret
ljmp
lea
ss
fdiv
in
fcmovu
stc
mov
or
mov
sub
jecxz
in
out
iret
fdivp
ror
ss
repnz
cli
sti
fmulp
lea
out
xor
cld
cmp
divb
roll
repnz
out
fcmovnb
mov
cld
or
xchg
nop
sub
out
divl
sarl
rcr
aas
test
repz
cli
jmp
int3
sti
int3
shl
sub
xlat
iret
out
iret
enter
cmp
loopne
std
cmp
int
int3
in
xchg
xorb
xor
out
cmp
into
vpsadbw
decb
ljmp
loopne
enter
hlt
enter
loopne
fsubp
mov
xchg
loope
fmull
sbb
xchg
jmp
repz
shll
neg
xlat
iret
xor
addb
fisttpll
ror
xor
xor
int3
in
sti
cmp
idiv
decb
mov
sbb
xchg
xchg
inc
cs
lret
ror
fdiv
int3
sar
sbb
sti
icebp
movb
test
stc
iret
cmp
cmp
call
cmp
xlat
testb
in
int
call
into
rcl
into
jmp
sti
fstp
mov
enter
mov
out
icebp
shl
out
mov
xor
fnstsw
cmpb
icebp
imul
movb
ret
mov
iret
test
das
xor
ss
cmc
in
pushl
fistpll
int3
test
repnz
cmp
nop
mov
fsubrl
aaa
fsubr
hlt
fnstsw
ss
aad
fcmovnbe
call
out
dec
lock
in
shr
shl
xlat
idivb
fucom
cld
jmp
fsubrp
fldln2
aas
orb
out
fucomp
xchg
int3
shr
aad
in
fdiv
aad
repz
repnz
clc
cmc
fsubr
mov
nop
xchg
out
leave
leave
sub
loope
cli
jmp
addl
ljmp
cmc
das
call
call
icebp
shr
aas
xlat
icebp
stc
out
fmul
sub
mov
iret
ret
xor
out
cmp
out
clc
out
cli
hlt
sar
sti
xchg
test
out
lret
out
cmc
not
in
cli
cmp
testl
inc
clc
jmp
mov
jmp
fmul
aas
xlat
aad
fmul
ss
loope
cmp
jmp
add
lret
hlt
fcomp
aam
fcmovne
filds
subl
xor
ss
cld
int
flds
rorl
mov
out
jmp
in
xor
cmp
sarb
incl
mov
notb
loop
in
int
rcr
cld
fsubrp
out
neg
cmpb
sarl
les
in
jecxz
ror
iret
enter
sti
fdivrs
xor
aad
adc
in
fsubrp
xchg
loopne
jecxz
cmc
leave
xor
shl
fxch
int3
rolb
leave
clc
icebp
sar
lea
aaa
aad
cmp
fcom
bnd
out
cmp
mov
enter
loop
call
jecxz
test
lret
xbegin
out
loop
not
jecxz
out
ror
call
leave
xor
into
sti
enter
adc
std
fmuls
or
mov
mov
loopne
enter
xlat
fucomi
cmp
clc
add
shl
std
loop
fcmove
clc
mov
lret
out
aam
nop
lock
xor
div
aad
in
neg
test
xchg
idivb
in
int
loope
lret
add
xor
lret
sarl
in
std
in
loope
ds
repz
std
int
xchg
lock
cmp
jmp
ss
xorl
xlat
clc
cld
out
test
nop
xchg
jmp
rcl
hlt
int3
enter
hlt
loope
std
div
xchg
rcl
mov
cld
out
loop
out
shl
aad
ret
in
mul
cmp
fucomp
loop
shl
test
fcmovu
nop
shr
call
icebp
xor
fnstenv
aas
repnz
rcr
clc
out
sti
cld
call
ljmp
cmp
neg
stc
cmc
fcmovnbe
shl
sbb
xchg
and
out
cmp
test
fidivrl
out
sti
roll
jmp
addb
ljmp
jmp
jecxz
loop
out
mov
fcomp
in
fsubr
fisttpl
xchg
icebp
shr
ret
in
in
cmc
div
clc
int
xchg
hlt
mov
lds
mov
lret
call
out
jmp
repnz
icebp
call
sub
loopne
test
in
xor
out
rol
stc
repz
cmp
cli
in
ds
cmp
std
mov
xchg
fcomip
xchg
xchg
mov
xor
in
out
sti
ffree
adc
neg
cmp
jecxz
out
mov
enter
in
aad
fcom
ror
cmp
mov
jmp
int3
ror
fst
mov
pop
push
push
jg
pop
add
enter
addl
out
cli
mov
test
std
xchg
xchg
in
idivb
fdiv
clc
lock
out
cmp
incb
into
lret
out
rcl
aam
loopne
lret
xor
int3
cmp
rol
cmp
in
xlat
loop
call
xchg
out
repnz
stc
neg
roll
call
out
loope
cld
repnz
xorl
lock
xor
stc
fcmovu
out
fcmovne
out
shl
jmp
iret
xchg
rorl
fdivrl
fdivp
cmp
rol
icebp
xlat
fsubp
movb
in
repz
aam
loope
cmp
loop
jmp
rolb
test
mov
loopne
int3
xor
int3
sti
lock
rcl
cld
loopne,pt
loope
enter
cld
inc
jmp
cmp
xlat
out
aad
clc
shl
sti
rolb
icebp
cli
xchg
xchg
shl
div
das
jmp
into
int
xorl
jmp
leave
ror
out
mul
leave
lret
std
in
ljmp
in
cmp
out
nop
cli
repz
loop
stc
lret
leave
xor
cmp
shll
stc
neg
sti
in
fxch
int3
leave
in
call
into
fadd
xor
jmp
repnz
idiv
sti
div
in
mov
test
jecxz
shl
in
shl
shl
stc
cmp
xor
sbb
mov
sti
addl
cmc
lea
xlat
imul
shl
ss
loop
rolb
int3
clc
xchg
jecxz
and
xchg
jmp
aad
jmp
int
loop
loope
stc
orl
xchg
mov
cs
leave
shll
cli
into
int
rcr
ror
cmc
and
fcmovnbe
loopne
iret
sub
xor
ljmp
rol
jecxz
mov
test
out
mul
shr
ret
cli
aad
enter
in
and
test
mov
out
mov
cs
ss
fildl
roll
out
incl
jmp
ret
leave
xor
clc
xor
push
lret
test
faddl
call
ljmp
lret
in
call
loopne
adc
fcmovne
orb
xrelease
out
in
cmp
out
sarl
jecxz
cmc
cli
loopne
out
fdivrp
into
call
jmp
add
cmp
jne
jmp
leave
aad
aad
int
jge
in
and
push
jg
pop
add
enter
xor
rcr
test
mov
in
int3
jecxz
int
xchg
sub
cld
icebp
repnz
ror
sub
fildl
mov
jmp
cld
icebp
mov
rorl
ror
iret
std
shlb
cmp
out
loopne
std
lock
ss
fcmovu
sub
lock
sti
cld
xacquire
ljmp
shr
iret
into
aam
sti
in
iret
cmc
aam
repnz
movl
filds
test
lret
enter
repnz
fdiv
jecxz
loop
cld
testl
rclb
clc
out
cmp
iret
aad
aaa
cmp
and
loope
in
loopne
mov
addb
xor
ljmp
lret
cmp
ds
roll
test
jecxz
lea
in
xor
clc
out
ds
and
rcl
addb
jmp
in
aam
jmp
aaa
into
jmp
fcmovu
sbb
test
jmp
xchg
repnz
loop
icebp
cmp
ss
int
shl
test
sar
sti
cmc
repz
cli
fmulp
mov
mov
out
cmc
xor
lret
fdivrs
jmp
neg
sbb
hlt
testb
out
leave
xchg
icebp
out
cmc
call
clc
fsubr
aam
cli
fucomip
cld
sar
jmp
lea
shl
leave
xor
lret
fidivrs
cmp
cmp
out
mul
cmp
mov
test
clc
lret
xchg
mov
shl
cmp
ds
cmp
cmp
repz
fcmovbe
aam
aad
in
fidivrl
jmp
cmp
aad
ds
shl
xchg
in
lea
enter
in
leave
cmp
in
rcr
out
fcomi
mov
stc
lret
xchg
mov
shl
das
ret
ss
cld
out
xor
fdivr
addl
hlt
in
call
jmp
in
xor
aam
repz
call
call
std
cmp
ret
mov
test
ror
test
ret
fcmovu
shl
int
sbb
cmc
sarb
aam
jecxz
ljmp
in
fcmovbe
out
enter
hlt
ffree
sar
cmp
int3
cmp
loop
ds
test
mov
repnz
repz
xor
icebp
into
cmp
sbb
stc
ffree
fstp
test
fimull
sti
ror
clc
shl
int3
fldlg2
int
aas
hlt
cmp
testl
into
loop
hlt
jecxz
ss
mov
xor
jmp
ret
les
je
push
daa
ret
add
jle
add
in
xor
lock
into
enter
rcr
std
shl
repz
fsubr
int
icebp
ljmp
cmc
rcl
clc
loopne
fistpll
int
sar
stc
shr
jmp
test
out
fldl
ret
xor
rcl
divl
into
lock
ret
and
jmp
loopne
hlt
sub
enter
shl
test
shl
neg
icebp
flds
in
shl
aad
rol
aam
shl
out
leave
aaa
lret
rcr
fiadds
fcmovnu
in
xchg
out
mov
repz
xor
xor
fdivp
shr
jecxz
roll
jecxz
out
std
std
cld
xchg
rcll
fsubr
stc
sti
xlat
lock
rcr
addl
ljmp
mov
lret
lret
shl
call
xor
fdivrl
loope
cmc
aam
loopne
xlat
enter
loope
ljmp
aad
cld
hlt
xor
ss
repz
cld
xchg
rcl
xor
decb
test
repz
ror
out
clc
out
call
ljmp
aad
jmp
in
decb
xchg
aad
lret
call
imul
cmp
in
hlt
out
fadds
fdivp
nop
mov
loope
lret
jmp
lret
out
cmp
hlt
fnstcw
clc
repnz
fsqrt
in
xchg
in
sti
orl
xor
cmc
xor
clc
fsubr
repz
rcr
in
incl
loop
addb
aam
cli
sarb
loop
cmc
cld
loopne
ljmp
repz
loope,pn
cmc
iret
hlt
divb
int3
loop
fsincos
shr
clc
loopne
stc
loop
cli
sbb
mov
repz
hlt
cmp
fdiv
repnz
adc
in
or
fsub
rcr
sbb
out
in
xor
rcr
cmc
enter
fldlg2
cmp
fcom
out
aam
xchg
jmp
xrelease
test
aad
aas
cmp
repnz
in
loop
aad
int3
int3
out
mov
repnz
aaa
repnz
ret
out
xlat
stc
aad
sti
in
out
fcom
mov
addb
int3
sub
call
fmul
aaa
imul
sbb
lds
jmp
xchg
call
add
shr
shl
xlat
fcomp
test
cmp
loope
out
in
mov
mov
out
int3
fcmovnu
int
ds
ds
ret
fadds
jmp
jecxz
rclb
rcl
in
jmp
shl
loop
out
in
out
out
loope
in
int
sar
add
mov
mov
jmp
rol
rol
rcl
aad
add
fdivr
push
pop
pop
jg
pop
add
sbb
lret
cmp
sar
leave
repnz
in
stc
cli
aad
aas
mul
call
jmp
aaa
rol
rcl
fadd
iret
int
testl
and
dec
call
sub
lret
hlt
sarb
xlat
std
rcr
sti
sar
out
out
fsub
lock
rorl
shr
xor
in
std
cli
icebp
aad
icebp
fsub
ljmp
shl
lret
ror
into
shr
repz
iret
ds
testl
int
fcmovnu
vpslld
lock
aad
fcomp
aaa
call
test
in
cli
mul
sar
mov
cld
imul
in
call
lock
repnz
out
shr
icebp
out
and
sar
imul
sti
mov
orb
iret
ror
shl
xor
hlt
fsubrp
rcr
cli
rolb
sti
in
mov
aam
icebp
shl
loop
aaa
aaa
in
fpatan
fyl2xp1
sar
iret
loope
out
ret
in
out
fucomp
into
jmp
jecxz
into
sar
aam
sar
iret
call
rolb
loope
jmp
xchg
into
into
shr
xor
aaa
xlat
aad
ljmp
lock
mov
mov
in
lret
jmp
sar
xchg
int
in
icebp
rcr
xlat
cmp
fldl
sar
enter
stc
sar
into
loopne
int
div
icebp
xlat
rcr
iret
ds
out
test
test
cmp
and
mov
fstl
out
cli
in
aaa
lret
icebp
loopne
test
cmc
sar
enter
fcomi
icebp
int3
lret
lock
out
xor
int3
sti
repnz
loop
aam
stc
aad
std
in
fcomp
ljmp
out
jecxz
cmp
aad
in
int
jmp
sarb
cmp
xor
jecxz
xlat
mov
addb
loop
jecxz
out
iret
xor
lock
mov
ljmp
xchg
sti
call
in
out
ss
cmp
in
into
shl
fadd
aam
ret
fucomp
jmp
in
aam
ljmp
lret
jmp
fcmovnb
call
stc
testl
in
jecxz
jecxz
xor
shll
fcmovbe
aad
std
jecxz
lock
loopne
loope
in
sub
orl
in
repz
loop
rcl
mov
enter
mov
in
xchg
ljmp
aaa
into
div
test
sar
mov
leave
cli
cmp
leave
cld
xchg
into
cmc
shr
enter
cmc
cmp
jmp
cmp
out
not
out
jmp
sub
mov
mov
pushl
pushl
call
mov
jmp
leave
ret
int
leave
iret
ror
shlb
scas
mov
add
out
xchg
mov
ss
leave
aaa
fnstsw
cmp
repz
hlt
cmp
loopne
cld
fmulp
loope
mov
fsubrs
xor
leave
cld
aam
out
repz
fsub
imul
hlt
leave
test
int3
add
in
enter
out
fidivs
test
sbb
in
fucomi
icebp
out
mov
int
ror
call
testb
sti
cmp
ret
cmc
addl
into
shr
xlat
fmul
into
shl
flds
call
test
lret
cmp
shl
repnz
f2xm1
iret
fucom
stc
stc
ret
leave
clc
cli
mov
std
into
xchg
adcb
cmp
jmp
fstp
in
stc
les
neg
ret
fcomi
nop
clc
xor
int3
repz
cmp
in
lock
aam
sti
loopne
enter
fucomip
test
jecxz
out
out
lret
out
aam
loopne
aam
out
roll
jmp
jecxz
cli
int
repz
cmc
loopne
xor
cmp
cmp
repz
cmp
fcmovu
mov
cmp
sti
orb
int3
int
lret
imul
neg
incl
fsubrp
aas
rcl
fildl
xorl
jmp
call
test
add
mov
iret
rorb
ss
sar
jmp
loop
rorb
add
enter
mov
ss
aas
ss
out
hlt
aas
incl
sti
les
adcl
fcmovnbe
in
out
fnsave
ss
adc
mov
lret
out
out
loop
or
ret
fsub
fcmovu
lret
ljmp
ret
mov
out
in
xchg
iret
aaa
loope
xor
cs
fucomp
xlat
lret
aam
add
in
ds
jecxz
iret
test
in
sub
xor
shl
fnstsw
jecxz
ds
fidivrs
clc
orl
int3
ljmp
cmp
int3
cmp
testl
out
sti
xchg
iret
int3
rcl
xor
cmp
ror
in
out
jmp
repz
ret
cld
call
aam
decl
test
iret
not
xor
mul
fld
fsubp
out
add
mov
leave
out
aad
stc
sarb
test
fsub
call
mov
int3
in
mov
hlt
cmp
repnz
out
sti
fndisi(8087
xor
ds
jmp
xor
jmp
xlat
ror
fld
and
test
out
pop
push
push
xchg
bound
pop
add
xchg
out
xchg
out
loope
ret
xor
cmp
ror
loopne
cli
shl
jmp
leave
fldl
in
jecxz
idivl
jecxz
cld
cmp
icebp
jecxz
out
call
adcl
stc
ror
ljmp
out
repz
xlat
test
out
call
into
int3
repnz
loop
jmp
in
lret
hlt
add
add
int3
movl
into
sar
jmp
sar
rcr
neg
hlt
sti
int3
shl
clc
xlat
fcom
sbb
or
ljmp
shlb
ljmp
jecxz
fdivrl
in
loop
or
lret
leave
lret
shr
in
ror
stc
xlat
aad
sbb
and
fiaddl
std
or
sub
loop
icebp
xor
ret
enter
lret
aad
aam
cmc
xchg
call
jmp
into
fucomi
std
xlat
ss
aas
cmc
xor
cmp
fisttps
imul
shl
cli
shl
cmp
in
in
sar
cmp
loopne
enter
ret
in
in
xchg
cld
mov
repz
xchg
jmp
aam
cmp
cmp
dec
ret
xlat
ret
rcl
aas
loop
fdivr
out
mov
in
lret
int
jecxz
xor
icebp
xlat
icebp
cld
int3
hlt
sti
rcl
rcr
clc
ret
jecxz
aad
in
xchg
mov
xor
cmc
leave
repnz
cli
not
fdivrl
fdivrp
out
sti
rcr
enter
loope
iret
test
int3
iret
loop
hlt
ret
xor
cmp
sti
aam
and
ret
loope
mov
add
ror
call
xor
int
into
cmp
fprem1
aam
ds
test
xlat
xchg
hlt
sub
fcomi
rol
stc
into
push
add
test
enter
out
into
iret
xchg
ljmp
in
aaa
out
in
shlb
adc
cmp
test
out
mov
xor
das
shl
fcmove
std
clc
ds
lock
out
add
cmp
jmp
out
lret
in
xchg
iret
sub
in
cmp
ljmp
vcvtdq2pd
and
lret
cld
out
out
jecxz
lret
iret
cs
fstpt
cmp
loopne
fxam
loop
flds
fdiv
rcl
jmp
out
rol
fcmovnb
cmp
fdivrs
rolb
fsub
mov
addb
cs
jecxz
int
cmp
cmp
test
test
out
cli
nop
test
mov
repnz
jmp
out
sti
adc
rolb
pop
add
jmp
fcom
xlat
fstp
int3
fstpl
sbbb
cmpsb
enter
jg
pop
add
xchg
filds
adcl
out
out
cmp
les
test
into
fmulp
mov
loop
test
stc
out
xlat
aam
and
icebp
in
imul
sbb
jecxz
call
fcomp
lret
cmp
aam
aas
orl
fucomp
into
test
mov
int3
cmp
iret
call
ss
shl
call
ljmp
icebp
aam
aam
xor
std
xor
in
fsubr
fldln2
repnz
decb
loope
jecxz
nop
and
ljmp
std
cmp
sti
stc
enter
fxch
lret
int3
xchg
addb
aam
into
int3
repz
jecxz
cmp
out
enter
test
shr
orl
rcl
idivb
stc
int
cli
out
clc
rcl
aad
addb
fiadds
shl
call
cmp
sarb
loopne
in
fxch
leave
mov
out
call
out
repz
sarl
in
out
in
in
out
cmp
fsubp
test
nop
in
out
lock
ret
sti
xor
call
cmc
in
fucomp
stc
jmp
out
ljmp
mov
loop
xor
cmp
cmc
aam
stc
shl
out
and
rorl
nop
out
not
out
ror
ret
xor
xor
or
cmp
sar
mov
xor
hlt
cmc
ret
enter
jmp
hlt
add
test
stc
mov
orb
shlb
aad
xlat
aam
jmp
xor
div
rcl
fprem1
cli
hlt
out
int
out
lock
int3
mov
icebp
ss
cmp
cmp
fucomp
cmp
jmp
loope
cmc
xlat
out
leave
mov
lock
and
out
rcl
ror
xor
aaa
int
out
int
fucomi
shl
loopne
and
int
in
int3
in
jecxz
in
aad
lret
out
xlat
dec
hlt
fistpll
lret
sti
xlat
jecxz
loopne
mov
jecxz
xor
fcmovu
in
aaa
cmpb
aas
ds
jmp
mov
xchg
jecxz
enter
in
mov
xchg
cs
jmp
lret
out
aad
ffreep
in
test
test
lds
xchg
aam
aad
hlt
in
ljmp
fst
repz
ret
test
out
test
out
jmp
loope
in
iret
fadd
out
in
clc
shl
out
cld
hlt
fildl
mov
mov
in
mov
ljmp
sti
cmp
icebp
mul
stc
loope
leave
ret
push
mov
push
movl
mov
mov
add
orl
xor
movl
jmp
rol
int3
rcr
fxch
ss
insl
sub
jp
push
jle
cmp
enter
call
out
ret
leave
cmp
cmp
into
sarl
test
cld
jecxz
xlat
mov
xchg
int
test
fdiv
clc
in
jmp
lret
sbb
call
ret
leave
sti
in
xchg
nop
loopne
sub
icebp
xor
loope
ret
rolb
mov
fsub
int
into
xchg
lret
xchg
xor
fcmovne
ljmp
test
vpaddw
shl
icebp
test
lock
in
ror
cmp
xor
lret
fxtract
fcmovbe
rcl
faddl
in
iret
call
shl
stc
test
cmp
int3
ss
loope
loop
std
xchg
repnz
xor
xor
ret
stc
aam
xor
into
xor
cmp
jmp
xlat
lret
in
lock
cmc
in
in
fdivr
in
aas
roll
loop
loop
iret
ljmp
ret
mov
cmp
hlt
cmc
shr
xor
sarb
xchg
ljmp
addl
rcl
fdivr
rcl
clc
call
lock
stc
flds
jmp
ljmp
repnz
cmp
aas
dec
rcr
call
flds
rclb
in
hlt
clc
xor
out
xor
dec
int
testl
cli
in
xchg
xchg
aam
aad
not
out
in
fucomi
cmp
fsub
icebp
call
leave
xchg
adc
ss
in
fcom
idiv
repnz
loop
loop
xor
ret
neg
leave
sub
cld
mov
test
into
iret
xor
xor
int
jmp
shl
hlt
add
ds
fldl
out
mov
xchg
mov
mul
out
enter
xor
flds
xlat
mov
mov
ror
xor
repnz
cmp
call
clc
cmp
in
lret
movl
jne
mov
mov
mov
add
add
sbb
mov
add
mov
jmp
ror
ret
fcmovnu
fisttpl
mov
xchg
dec
in
push
jle
add
rcl
fldl
iret
lea
in
int3
cmc
clc
cld
lret
jmp
sar
in
xlat
hlt
fucomi
les
xchg
out
ss
ss
lock
clc
icebp
cmp
jecxz
fsub
test
lock
adc
xor
in
xor
rcl
std
cld
loope
stc
roll
loop
orl
call
leave
std
out
stc
leave
lret
cld
call
adc
div
xor
cmp
out
fcomp
shl
in
xor
lock
orl
fcomip
xchg
call
cmp
rcr
sti
xor
test
xchg
sbb
in
in
lock
lret
test
cmp
test
test
int
out
xor
lea
int3
ret
shlb
fst
or
fcom
add
lret
xlat
mov
xchg
mov
clc
test
jmp
cld
stc
out
rcr
repnz
cmp
lret
loopne
in
fisttps
ljmp
iret
xor
jmp
fld1
lock
in
rolb
shl
fcmovne
in
filds
loope
cld
loop
ret
in
std
cld
jmp
lret
lret
aaa
out
cmp
std
in
jmp
sbb
hlt
mov
call
in
in
loop
shll
loope
in
aaa
shr
xlat
out
cmp
xlat
loopne
cld
out
cli
test
jmp
addl
repz
clc
rcr
stc
aad
cld
ffree
lock
out
int3
cld
mov
out
call
lock
lret
cmp
cli
aas
ror
rcr
repz
stc
sti
in
in
leave
mov
in
les
jecxz
cld
int
addb
aam
xlat
enter
lret
mov
loop
mov
out
mov
repz
cli
in
shll
mov
xor
xorl
push
or
mov
mov
add
movl
cmp
pop
movl
je
mov
jmp
jmp
lret
xlat
lret
rcr
rcr
xlat
test
inc
sub
mov
sbb
jle
fdiv
int3
repz
not
fdiv
clc
cmp
in
in
push
orb
test
aam
icebp
fadd
ret
fprem1
in
jmp
mov
in
in
ret
sar
fnstenv
leave
into
int3
cmc
rcl
cli
sti
lock
fsub
fsub
ffreep
mov
out
lret
out
test
loope
jmp
ret
fdivrp
sti
cli
rcr
int
aas
cmp
aad
xchg
lock
out
mov
ret
rcl
enter
fdiv
fmul
stc
fcomi
lock
mov
leave
out
icebp
sti
or
icebp
xchg
xor
not
call
cld
in
in
divb
loop
sti
out
fcmovb
neg
lret
std
xchg
shl
leave
lret
aam
cld
sti
call
ret
shl
cld
ret
in
out
mov
fstl
aad
test
std
aaa
ret
lock
orl
out
into
sub
in
out
out
jmp
incb
movl
repz
ret
rcl
enter
in
jmp
fucom
into
cmc
lock
rorl
orl
xor
aaa
cmc
aad
test
int
repnz
rcr
hlt
cli
int
out
icebp
xchg
fcmovu
loope
iret
test
shr
repz
icebp
aas
hlt
cld
test
lock
faddp
call
loopne
lret
out
out
out
call
xor
enter
test
xchg
mov
mov
loope
test
fmulp
ror
ljmp
call
shl
in
addl
in
fsubr
out
loope
xchg
xor
out
call
cmp
in
testl
leave
fdiv
hlt
mov
ret
cmc
in
xor
cmp
iret
rcl
clc
cmc
loope
stc
orl
shl
divl
fcmovnu
xor
ret
in
lock
call
or
fdivrp
cld
in
ss
ss
jmp
ror
aas
int
int
jbe
repnz
adc
push
movsl
outsb
jg
sbb
jle
lret
fistpll
xlat
jecxz
inc
call
out
std
out
jecxz
into
jmp
clc
aaa
in
ss
div
icebp
fneni(8087
mul
repz
and
jmp
mov
cmp
out
xor
jmp
ret
roll
jecxz
call
test
clc
xor
into
aaa
cli
ds
aam
call
clc
sub
ljmp
fcmovne
fsub
cmp
lret
out
ret
aam
addl
stc
in
icebp
repz
in
out
fcmovbe
repz
idivb
mul
fisttpl
in
out
popl
xor
lret
rcr
out
stc
mov
orb
nop
imulb
out
fxtract
incb
cli
aas
cmp
mov
mov
fld1
fcmovnu
in
mov
cld
jmp
aad
hlt
ds
cli
repz
cmc
sti
aas
std
cli
cld
test
cli
test
ror
rcl
xchg
ret
sub
cmp
fidivrl
xor
ret
fcmovu
repz
mov
sti
xchg
fists
icebp
fdiv
ss
out
aad
rcr
int3
out
into
lock
in
leave
lret
xchg
into
into
in
cmc
aad
aam
cmp
adc
enter
aad
fstl
xchg
hlt
std
cmp
or
fucom
leave
mov
sti
test
sub
repnz
jmp
aaa
cmp
ds
loope
lock
loope
call
mov
in
ror
divl
shl
aad
out
aas
xor
icebp
rcl
cli
roll
xchg
xchg
in
div
sub
cmp
hlt
jmp
in
lock
hlt
out
aas
addl
fisttps
jmp
clc
int3
std
clc
cmc
repz
addl
aad
lea
movb
ret
jmp
mov
xor
add
leave
ret
push
mov
push
or
jmp
ret
ret
fst
int3
xlat
fs
test
inc
jo
jle
add
hlt
in
fmul
clc
add
fdivp
cli
loope
test
enter
xchg
call
cmp
shl
mov
mov
xchg
cli
mov
or
aad
aas
shll
div
shlb
fmul
divl
cmpb
addl
enter
loopne
enter
das
fcomi
fnstcw
iret
loop
cli
std
aam
fdivp
into
mov
loope
lret
mov
cmc
aam
enter
fdivrs
cmp
std
into
adc
test
jmp
out
out
xchg
aam
int
ss
stc
cli
xor
hlt
push
cmp
hlt
aam
cmp
mov
les
ror
enter
call
in
ret
clc
and
loopne
out
leave
lret
jmp
fadd
mul
in
idivl
shr
or
xlat
xlat
ret
cld
loop
lock
or
loop
jmp
fmulp
in
stc
fxch
loopne
loopne
cmc
ret
loope
xchg
out
sti
lret
jmp
xchg
out
enter
repnz
int
sarl
call
mov
lret
dec
repnz
aad
ljmp
std
jecxz
loop
loope
rolb
and
xchg
out
lret
ret
cmp
fcomi
fxch
cmp
ret
icebp
vpmulhuw
loop
incb
shlb
lock
cli
div
repz
lret
loopne
sti
stc
icebp
mov
shl
loop
in
loope
xor
sti
xlat
cmp
fidivl
iret
out
ror
ret
jmp
jmp
adcb
xor
lock
rcl
cmp
iret
cmc
roll
int
int
loop
xchg
in
iret
loop
sub
loopne
sar
cmp
test
xchg
test
out
mov
in
call
lock
test
stc
aad
jecxz
jmp
and
fnstenv
icebp
fcmovne
rcl
fsubr
loop
cmp
ffreep
mov
lock
hlt
rcl
in
ljmp
cmp
sti
xor
cmc
ret
loop
mov
xchg
out
xchg
jmp
aaa
fstp
std
cmp
xor
iret
aam
mov
fmull
lret
stc
sbb
incb
in
sti
aaa
jmp
xor
ss
shl
rcl
loope
mov
mov
xchg
lret
rol
les
cli
iret
cmp
dec
or
xor
sbbl
add
movl
mov
movl
movl
movl
movl
mov
movl
push
movl
movl
mov
cmp
movl
jmp
rcl
enter
fsubl
lds
lock
jle
add
rol
mov
call
jecxz
shl
xchg
xor
fcomi
sar
fcomp
cmp
loopne
shr
test
test
xchg
in
out
out
ror
fyl2xp1
ljmp
test
out
stc
faddp
aam
out
out
lock
addl
int3
icebp
in
cmp
loopne
rcr
adc
rcl
test
jmp
fucomi
xchg
out
xor
std
cmp
jmp
test
loop
lea
mov
xor
repz
cmp
in
addb
out
fisttpll
xor
not
aam
cmp
out
in
cmp
ret
loope
fcomi
out
out
repz
lock
hlt
lret
aam
sbb
cld
rol
clc
lds
test
rorb
test
aad
int
aam
loopne
ffree
fcmove
in
in
xlat
out
ljmp
in
lock
icebp
in
ds
loopne
jecxz
aam
cld
jmp
in
clc
mov
shl
ss
sti
fneni(8087
in
cmp
call
loop
int
ljmp
cs
aam
xlat
aam
aaa
out
cli
jmp
in
loopne
hlt
out
out
cmpb
ljmp
enter
xor
aas
out
addb
mov
mov
out
nop
loope
xchg
test
cmp
xor
jmp
cmp
loopne
out
shl
cmp
cli
addb
jecxz
in
shl
sub
repz
ror
or
cli
lock
aam
aad
jecxz
flds
sub
xor
ss
lock
imul
int3
cmp
rol
jmp
mov
mov
xchg
xchg
into
cmc
xchg
shrl
lock
out
shr
cli
lret
fildl
add
loope
cli
fcmovnb
loope
mov
in
cmc
in
in
int
ret
aas
shl
jmp
mov
out
in
enter
lds
jmp
enter
cmp
loop
aad
fcmovb
fst
loope
call
mov
sub
call
sti
in
cli
into
cli
aad
stc
dec
cld
xchg
sub
shr
in
jmp
jecxz
xor
aam
cld
stc
faddl
fiaddl
jmp
loope
in
out
xchg
dec
jecxz
xlat
icebp
fcmove
not
fsubr
stc
ret
xchg
loop
jecxz
testl
jmp
test
xor
mov
xor
jmp
aas
leave
fmul
fcom
fld
cli
jae
stos
stos
or
pop
jbe
jle
add
xor
fidivs
in
cmp
test
in
int3
rorb
out
imul
lock
lds
idiv
jmp
loope
jecxz
adc
sti
addb
loop
in
enter
out
fmulp
cli
xor
cmp
les
in
icebp
jmp
xor
cmp
out
sti
into
into
cmp
movb
fndisi(8087
incl
iret
ret
xor
clc
sti
rol
fidivrl
fcmovnu
jecxz
aas
clc
fadd
aad
fmulp
fdivrp
int
fisttpll
in
iret
xlat
cld
enter
fxch
into
rcl
xlat
sti
mov
lret
xchg
xchg
xchg
int
xor
lds
in
hlt
leave
out
fcmovu
jecxz
in
rol
icebp
loop
jecxz
mov
in
mov
cmp
out
call
aas
icebp
hlt
xchg
fisttps
mov
lret
xchg
hlt
loope
ss
lds
cmp
cmc
rcl
repnz
xlat
loop
jecxz
shl
repnz
mov
hlt
xor
icebp
call
loope
xor
testb
leave
icebp
cli
jmp
xor
xlat
aad
hlt
fucomi
ror
sarl
xor
in
hlt
mov
stc
mov
int3
xor
cmp
sarb
rcl
fsubp
fdivp
rol
xor
xchg
out
in
loopne
loope
das
xor
fidivs
int3
xlat
dec
idivl
into
cmp
jmp
mov
icebp
repnz
repnz
in
not
aaa
aam
repnz
xchg
test
out
lret
iret
jecxz
std
xchg
fldl
ljmp
loopne
fcomip
repnz
call
out
rorb
call
div
ljmp
cmp
jecxz
sub
orl
orb
cli
fldz
enter
lret
jecxz
jecxz
shl
jmp
mov
loopne
out
in
aam
int3
cmp
not
enter
loopne
out
loopne
out
std
ds
rol
out
out
adcl
aaa
ds
call
call
fmull
in
jmp
jmp
repnz
clc
ds
in
xchg
std
xchg
xchg
incb
ret
imul
hlt
iret
loopne
out
aas
xchg
clc
stc
int
aam
xchg
out
out
sub
xlat
cli
sti
ret
loope
cmp
lock
lret
aam
aam
and
jg
lods
add
fdivrp
div
mov
sbb
lret
aaa
jecxz
xor
stc
cmp
stc
cmc
into
cli
fcom
loope
jecxz
jecxz
fisttpl
xchg
xor
int3
call
loopne
loope
int
ffreep
sti
movl
jmp
clc
out
clc
lret
shlb
iret
aad
fneni(8087
push
rcr
ret
jmp
call
jmp
shl
sar
lret
aam
jecxz
clc
aam
fldln2
imul
xchg
repnz
nop
test
jmp
lds
xor
xor
xor
stc
xlat
addl
mov
xchg
test
imul
into
aad
repz
rcr
ret
mul
testl
iret
jmp
test
roll
ret
in
fmulp
icebp
mov
loop
xor
xor
sti
shlb
cli
xlat
aad
loop
mov
fcmovu
call
loope
xchg
cli
cmc
fdivr
shl
shl
addb
test
not
lret
iret
mov
test
rol
hlt
fidivl
fcmove
ret
in
xchg
fcmovb
leave
loope
test
in
fists
fidivrl
xlat
xor
loope
cmp
sti
roll
les
xchg
mov
jmp
lret
rcl
cmp
fldln2
leave
stc
in
shl
out
ror
jmp
into
fadd
cmp
cmc
fdivrp
test
cli
enter
fsub
out
cmp
xor
fucomp
out
icebp
iret
xor
rolb
ret
lret
loopne
cld
out
cli
out
cmc
jmp
ret
stc
leave
jecxz
shll
in
shl
jmp
lock
out
icebp
fsubp
nop
mov
hlt
in
aad
xor
fucomi
cmp
call
lret
icebp
jecxz
xchg
out
mov
loopne
jmp
cmp
loope
sarb
jecxz
loopne
mov
fdivrp
xchg
incl
int
enter
hlt
ss
cmc
cmp
mov
icebp
ret
in
in
aam
std
aaa
fcom
sti
cli
ret
cmp
adc
mov
jmp
jecxz
xlat
aad
cmc
repz
xor
fstp
loope
icebp
adc
fucom
mov
mov
shl
hlt
out
out
sti
aam
int
int
out
out
loope
repz
icebp
iret
in
shr
lea
orl
jmp
int3
ror
int
lds
lea
lods
add
xchg
aas
aad
clc
sti
fnstcw
leave
shr
fcmovne
in
adc
stc
mov
addb
ljmp
lret
cmp
cmp
add
xlat
fdivr
fdivp
xchg
sti
repnz
lock
ret
ljmp
cli
stc
fdivl
in
clc
icebp
mov
loopne
test
repnz
ss
sarl
repnz
icebp
sar
xor
fmull
into
aam
ss
shl
fldz
cli
iret
fadds
fadd
xchg
clc
in
in
rorb
das
fdecstp
hlt
cli
aad
ss
leave
loope
addb
iret
cmc
shl
shl
iret
fnstcw
repz
cmp
imul
call
cld
movb
fsub
clc
cmp
rolb
cmpl
test
in
cmp
call
shl
cmp
repz
lret
mov
in
fmull
clc
enter
call
int
ds
in
fucomp
out
loop
jmp
fdivr
xor
vpslld
sti
loope
test
mov
call
leave
cmp
shl
iret
enter
int3
out
cmp
cld
fcomi
leave
enter
loop
loopne
xlat
xor
cmp
int3
repz
fidivrl
icebp
roll
lret
fldl
mov
icebp
shl
in
fcomp
fucomi
fcmovnbe
fucomi
xlat
neg
idiv
jecxz
test
loopne
decb
iret
shll
cmp
cmp
cmc
faddl
ds
fdiv
nop
mov
out
shl
out
fcmovbe
sar
fsin
mov
leave
cli
leave
out
sti
int
ljmp
int
call
fucomi
out
in
sbb
idiv
loopne
loope
decl
hlt
repnz
cmp
ljmp
out
in
in
call
ret
lret
out
jmp
inc
ret
test
out
loopne
lock
out
repz
lret
int
aas
jmp
loopne,pt
rol
jmp
in
jecxz
cld
mov
ror
aad
out
cmp
fnstsw
cmp
and
aam
fcomip
inc
mov
out
loope
ljmp
cmp
fcmovbe
cmp
int3
les
enter
test
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
add
mov
jmp
ror
vpsrld
jl
push
push
add
repz
add
add
shl
aad
stc
rcl
clc
jmp
in
adc
rcr
shl
fstpt
std
int
repnz
clc
loopne
movl
mov
loop
cmp
rcr
iret
repz
test
mov
clc
jmp
mov
iret
repnz
icebp
leave
in
cmp
ljmp
rolb
in
test
sub
fnsetpm(287
test
enter
jmp
rol
fcmovu
sar
mov
add
test
lock
in
aam
out
aaa
ljmp
shl
icebp
call
enter
xchg
in
nop
rcl
stc
lock
fdivrs
aam
cld
aas
int3
cli
aad
iret
out
faddl
iret
stc
rol
in
enter
aam
enter
aaa
int
repz
fcomp
ljmp
xchg
xchg
lret
iret
shr
clc
sub
lret
iret
idiv
xor
fcmovnbe
std
fmulp
ffree
ret
lret
int
orl
aaa
into
shr
hlt
jecxz
clc
xchg
mov
mov
test
mov
lea
hlt
aaa
lret
aaa
div
repz
not
int
iret
lock
cmp
cli
std
fpatan
sbb
sub
out
out
ljmp
xchg
fmull
cli
out
and
out
jecxz
leave
in
fcmovnbe
cli
aaa
xor
fabs
cmp
stc
ret
mov
cld
loop
ljmp
les
not
cmc
jmp
in
loopne
ror
loop
les
int
shll
icebp
cmp
fmul
rcr
filds
enter
filds
xchg
xor
out
in
cmp
call
lock
fcomp
testl
sub
shr
out
fcmovu
lret
fcomp
repz
jmp
xlat
fcmovne
test
jmp
xchg
test
lock
aam
leave
int3
xlat
cmp
loop
fdivr
aam
testl
das
in
sub
iret
call
sub
call
ds
cld
lret
out
xchg
rcll
shr
bnd
in
fiadds
rcr
faddl
cld
xchg
hlt
loopne
cmc
hlt
shl
jmp
stc
iret
leave
fdiv
int3
rcr
cld
ffree
call
loope
sti
ljmp
clc
rcr
xor
ror
jmp
lret
sti
out
adc
incb
icebp
test
xchg
lock
aad
lret
enter
fcmovnu
push
icebp
ret
out
pop
add
jle
add
lret
int
hlt
jecxz
ss
ds
rcr
cmp
out
in
fildl
and
out
xchg
in
shr
call
out
stc
cmpb
test
aad
enter
mov
jmp
mov
iret
aam
in
std
cmp
xor
test
cmp
out
test
cmp
lret
aam
repz
ljmp
cmc
xor
repnz
into
rol
cmc
ret
mov
in
lret
shl
out
fsubp
sarb
int3
jmp
cmp
icebp
sti
repnz
loopne
int
loopne
iret
into
into
out
xorl
lock
sti
jmp
fcmovbe
in
mov
cli
leave
mov
test
in
lret
leave
ror
in
hlt
neg
loope
cmp
aad
repnz
inc
fcomp
fdivrp
into
cli
xchg
ror
ljmp
fdecstp
dec
ljmp
cli
cli
mov
cmc
or
int3
lock
in
in
mov
rcr
xor
out
div
in
fcom
jecxz
aad
ret
mov
decb
out
mov
call
rcr
stc
xor
lret
sti
fsub
test
in
mov
int
shl
mov
test
loop
shr
sub
lret
rcl
jecxz
call
xlat
ljmp
int3
loope
jmp
in
shll
fdivrl
cli
cld
test
test
fcmovb
lds
dec
lret
lock
aam
xlat
out
repz
repz
loope
adc
stc
sub
mov
and
mov
rcl
fucomp
fidivl
xor
cli
in
cmp
sbb
lret
out
test
xchg
in
xor
xchg
int3
xor
cmc
std
fstp
ljmp
fadd
test
leave
lret
sar
mov
in
hlt
in
rol
aam
out
out
neg
cmp
out
jecxz
or
in
and
mov
lret
aam
in
lock
lret
lret
out
aam
fistpll
ret
mov
push
mov
sti
cli
in
stc
out
int3
addb
xchg
aam
cli
stc
mov
leave
loope
nop
and
ljmp
cld
cmc
cmp
repz
aad
sti
fmul
xor
cld
cmc
xchg
jecxz
in
clc
call
repnz
aam
fsubrp
jecxz
ds
lret
test
loop
out
shl
jmp
jmp
ss
fistpll
stc
cmp
mov
mov
mov
rcr
repz
cmp
cmp
add
mov
mov
xor
jmp
enter
int
enter
push
add
mov
xchg
add
icebp
xor
addl
out
fcmovne
mov
into
clc
out
les
cmp
repnz
clc
rol
loope
rol
icebp
testl
aad
xor
ret
xor
jmp
fildl
clc
loope
nop
hlt
into
xchg
aad
xor
cmp
cmp
loope
cmp
loop
sarl
leave
out
std
xchg
int
ret
jecxz
clc
leave
ss
repnz
into
xor
jmp
jmp
xchg
int3
xchg
shr
loope
rcl
enter
int
lret
rcl
clc
in
jmp
cmc
loope
loopne
fucomp
lret
xchg
mov
shll
in
int
roll
rcl
test
cld
in
incl
int
call
rcl
fdivrs
cmp
iret
aas
loope
icebp
test
fsubr
ljmp
fsubp
mul
imul
call
hlt
int
xor
mov
ljmp
lea
enter
sti
fmul
int
lock
in
loop
in
fcmovb
lret
jmp
mov
lret
ret
clc
ljmp
sar
rcr
repnz
xchg
cli
mov
in
lock
repz
cli
aad
leave
fdivrp
ret
loopne,pt
test
ljmp
test
mov
iret
in
leave
xor
stc
cmp
loopne
rcr
fxch
loopne
call
mov
out
xchg
int
cmc
shr
cld
ss
int
fmul
cmp
cmp
test
loop
xchg
cld
xchg
lret
hlt
ljmp
sub
test
ret
aam
mov
out
mov
into
lds
ljmp
div
shr
in
loop
test
call
jmp
rcl
cld
aad
cmp
iret
idivl
lret
xlat
not
fdiv
test
int
std
sub
rol
in
fdivs
shl
aad
int
hlt
ret
add
loopne
out
mov
lds
jmp
aam
fld
shlb
xor
in
ss
jecxz
repnz
aam
xchg
orb
in
int
mov
out
cmc
shl
rcl
inc
cmp
mov
xor
test
orb
not
xlat
ljmp
into
stc
cmp
adc
sti
call
fmul
rorb
in
jmp
repz
fsin
shl
cmc
aam
in
aad
into
in
xor
jmp
aas
lret
fcmovnu
xlat
aad
jno
xchg
dec
insb
pop
cmp
add
add
repz
cld
out
xor
out
xor
cli
fidivrl
fsubp
fdivp
icebp
sbb
ret
loop
std
in
in
ljmp
cmp
xor
ss
lock
div
fcmovu
adc
in
cmc
loop
mov
icebp
xor
out
xor
lret
test
loope
in
xlat
mov
cli
std
in
out
sti
iret
sar
out
lret
in
into
jmp
in
fchs
icebp
in
flds
filds
iret
lock
out
loop
in
hlt
call
cmp
aad
hlt
cmp
loope
sar
jmp
mov
repz
rol
in
icebp
not
std
fsin
ds
out
sti
xlat
hlt
mov
jmp
fists
sarl
iret
int3
cmp
testb
aas
jmp
dec
fsubr
or
out
stc
xor
call
int
ffreep
repnz
adc
int
xchg
into
mov
nop
out
xor
int
icebp
cmp
in
cli
xchg
adc
adcl
lds
jecxz
testb
sbb
repnz
jecxz
shr
rcr
call
aas
loop
rolb
inc
mov
jmp
mov
fnstenv
cmp
aad
cld
incb
out
loopne
xchg
stc
mov
das
out
cmp
in
repz
enter
cmp
cld
cmp
mov
call
jecxz
sub
cmc
leave
pushl
in
rcl
stc
shl
aad
test
leave
fxch
mov
out
adcb
cmp
in
xor
in
aam
ds
clc
hlt
mov
jmp
lock
loop
xchg
icebp
jmp
fadd
shl
leave
std
leave
out
cmp
out
xchg
in
loop
enter
loop
repnz
cmc
shl
xor
xor
fmulp
int3
icebp
ffree
ret
cmp
fadd
enter
mov
in
xchg
loopne
ret
hlt
out
idiv
fcmovne
sarb
ret
aam
fmul
jecxz
mov
repz
in
in
stc
out
cli
repz
aaa
sub
cmp
stc
ret
ret
cli
out
in
jmp
fcoml
in
sti
shr
aas
out
cmp
loope
mov
ret
mov
mov
lock
imul
jecxz
int3
aaa
rcl
lret
lock
xor
fadds
in
call
aam
aad
iret
jmp
out
cs
lock
adcb
movl
into
rcr
int3
fwait
outsb
mov
hlt
sub
jle
add
ds
shl
rcl
cmp
call
out
in
cld
ljmp
lret
shr
fbstp
out
ret
jecxz
sarl
rcr
fiadds
xchg
out
ficoms
cmp
ljmp
shl
icebp
ret
stc
out
ffree
rorb
xchg
xchg
aaa
mul
cmp
sarl
xor
stc
in
rcl
repz
lret
hlt
cmc
ret
div
in
cmp
out
cmp
fiadds
jecxz
cmc
loopne
stc
enter
test
out
ljmp
cmp
shr
xlat
xlat
xlat
test
rol
fcomi
ret
int
call
aad
fcmovu
iret
in
in
cli
hlt
cmp
cli
rcl
shl
loope
filds
in
lret
mov
mov
jecxz
in
cli
repnz
xor
cmp
cmp
loope
aad
out
xlat
sti
mov
or
into
out
cmc
stc
into
shr
enter
rcl
std
jecxz
cmp
xchg
mov
lret
in
cmc
out
aad
std
das
cli
out
iret
lret
and
ret
mov
aam
fisttpll
fcoml
xor
shr
std
in
hlt
shl
cmp
enter
add
out
int
lret
shll
enter
shr
lret
cmpl
out
shl
std
hlt
aam
ret
in
ret
leave
jmp
rol
into
cmc
hlt
jmp
into
aam
ret
xor
mov
xlat
test
lret
test
mov
and
iret
mul
jecxz
lret
std
into
clc
test
xchg
stc
sar
jmp
out
jmp
loop
xchg
loop
fcmove
call
xor
loope
cli
xchg
out
int3
mov
xchg
fcomip
jmp
ror
cmc
aad
loope
lret
stc
out
ret
clc
aas
test
jmp
out
fucom
fst
mov
xchg
repz
xor
std
lret
iret
fucomp
fdivrs
stc
ds
iret
mov
rcl
mov
jmp
ss
lock
stc
mul
jecxz
lock
aam
neg
mov
fiaddl
lret
cmp
lret
aam
cmp
into
shl
sti
std
aas
mov
enter
jmp
in
loope
repz
hlt
in
not
repz
leave
ljmp
xchg
cmc
ret
jecxz
mov
lret
hlt
mov
xchg
das
ljmp
lock
ljmp
leave
movl
lret
repnz
rol
clc
lock
enter
cld
aad
test
les
xchg
jmp
jmp
leave
iret
int3
into
fstp
pushf
mov
jl
xchg
or
jle
add
dec
xchg
shl
xchg
or
rcr
cmp
int3
out
loopne
ds
out
test
into
lea
int3
out
cli
icebp
cmp
int3
fcmovne
in
int
and
leave
jmp
lret
test
mul
icebp
leave
xor
cld
aaa
jecxz
sti
fcmovu
enter
mov
in
lret
cmp
adc
aad
jmp
call
stc
aam
test
sti
in
cli
mov
fiadds
ss
out
cmp
div
testb
cmc
imul
decb
xchg
out
xchg
repz
lret
std
ror
cmp
fadds
nop
fyl2x
cli
ffreep
fst
loop
aaa
jecxz
aad
shl
not
cmp
incb
jecxz
in
sub
loop
incl
shl
lret
into
repnz
into
rcl
loop
shl
rcr
cmp
mov
xchg
in
ljmp
std
out
fchs
lret
out
ret
jecxz
stc
repz
clc
loopne
ljmp
test
lret
out
cmc
out
hlt
cmp
cmp
jmp
loop
xchg
int3
rorb
cs
sti
int3
jmp
fcmovnb
ret
xlat
mov
fmul
lret
aam
aas
out
enter
cld
adc
std
in
jecxz
hlt
clc
sbb
in
mov
ljmp
into
rcr
not
stc
std
shl
jecxz
out
cmc
lret
orb
out
lret
fxch
imul
jmp
cmp
aas
repnz
ret
xlat
mov
mov
icebp
iret
shr
icebp
out
out
sti
repz
fidivrs
sub
clc
test
std
testl
xchg
cmc
icebp
cmp
sar
out
std
lock
in
jmp
in
fucomp
lret
out
ss
ss
int
cli
icebp
xor
cmc
cmp
mov
sbb
in
loope
jmp
mov
in
int3
xor
fstpt
cmc
loop
stc
lret
out
call
xchg
int
rcl
sti
xor
cmp
shl
fdiv
fsubrp
test
sbb
test
mov
fcmovb
fcmovne
into
int3
cmp
test
sar
sti
cmc
out
adcl
rol
int
sti
aam
xlat
fnstsw
int
ret
idiv
mul
lret
fsubr
test
xchg
xor
repz
rorl
jmp
rcr
int3
ror
fcmovnu
arpl
or
push
add
add
repnz
iret
cmp
xlat
aaa
repz
in
in
call
aad
xor
cmc
loop
jmp
adc
cmp
addl
test
xchg
int3
test
sarb
xor
fcomi
aam
shl
aam
in
aad
imul
out
cmp
fldl
ljmp
imul
cmc
cmc
clc
sti
fucomp
iret
stc
call
in
iret
in
clc
icebp
aaa
aam
fistpll
hlt
std
fnstcw
ret
flds
in
shr
xchg
mov
out
rol
fistpll
cmp
stc
repnz
test
jmp
ljmp
out
cmp
cmp
repz
ret
out
in
loope
call
xchg
hlt
xchg
lock
aad
lock
sti
aas
repz
std
out
fcmovbe
sar
out
cmp
in
ss
jmp
fcmovne
hlt
iret
shr
sbb
enter
movb
repz
in
xor
shl
aad
fcmovne
in
repnz
enter
hlt
fabs
out
shl
mov
aam
stc
in
in
aam
jmp
aam
int
cmp
xlat
out
out
and
mov
into
ret
sub
xor
xlat
repnz
icebp
rol
fdivr
fmull
out
lret
out
sar
out
out
jmp
cld
fadd
faddl
ffreep
mov
int
loopne
mov
das
xor
jecxz
shl
cmp
lret
std
test
jecxz
les
loop
cli
xchg
jmp
int
fcmovne
xor
repz
cld
cmp
aam
fcompp
repz
mov
mov
shl
cmp
neg
aam
loope
into
ret
ret
in
leave
lret
test
jmp
sub
stc
cmp
enter
stc
rcl
lock
xchg
jmp
out
mov
shr
int3
ret
out
cld
xor
call
fcmovu
xlat
out
orb
xchg
mov
xor
lock
ljmp
iret
repz
sbb
ret
xlat
out
clc
iret
jmp
xchg
sarb
imul
rcl
fmul
lret
cmp
stc
loop
loope,pt
repz
lret
mov
int3
mov
adcb
xor
fdiv
div
loopne
cmp
jecxz
cmp
stc
test
cld
orb
int
fxtract
call
fcmovbe
test
in
out
enter
fisttpl
add
add
lret
iret
into
aad
leave
fnsave
cmp
push
pop
push
jle
add
fcmovne
fmul
shl
lret
loopne
aaa
cmp
repz
cmp
in
std
sbb
rcr
test
rcr
lock
adc
test
icebp
int3
rcl
int3
aas
cmc
aam
fildl
mov
enter
lret
orb
repz
idivb
fdiv
not
cmc
loop
sti
or
out
orb
ret
cli
xor
call
iret
icebp
hlt
fcmovnb
ret
clc
out
in
xchg
loope
lret
test
aam
xor
icebp
ror
fxch
cmp
repnz
out
testb
fists
aas
cmp
fnstcw
cli
lock
aad
sar
aam
repnz
lret
cmp
mov
int
loopne
aam
xor
repnz
rcr
stc
shr
sub
mov
jmp
enter
mov
jmp
aam
out
repnz
adc
call
xlat
in
test
sar
in
xchg
jecxz
xor
fdivs
xor
ss
ror
sarl
in
cmp
mov
jmp
neg
mov
rcl
ljmp
enter
lret
iret
cmp
loop
xchg
loop
cmc
cld
mov
incl
leave
fdiv
jmp
cmp
call
fucom
sti
rol
aas
in
out
in
decl
ret
fidivl
not
fdivr
cld
lock
testb
lret
fsub
fucomip
xchg
int3
jecxz
fucom
aaa
lret
out
sti
lret
call
into
cld
testl
incl
decb
out
out
cmp
loopne
fiadds
mov
sti
in
lret
mov
and
out
int3
xchg
hlt
ret
ss
clc
fxch
icebp
int
aam
ds
icebp
rorb
sub
fsubrp
mov
cs
xor
shl
std
loope
addl
test
sbb
xchg
pop
test
aaa
cmp
icebp
repz
addl
call
in
aad
aaa
ljmp
call
shl
fildl
in
mov
int
hlt
loop
iret
leave
out
cmp
loope
hlt
aam
out
fcomi
testb
loop
repnz
hlt
jmp
xor
xor
cmp
icebp
xlat
lock
push
loopne
rorb
mov
xchg
mov
cmp
fucomi
out
aaa
loope
fcmovnb
in
not
hlt
call
test
test
loope
loop
int3
pop
test
je
jmp
mov
int
sub
movsb
adc
jle
add
in
fmul
int3
cmp
icebp
loop
hlt
cmc
fmul
repz
std
xchg
fndisi(8087
or
out
aad
in
xor
fcmove
jmp
cmc
cld
repnz
xlat
fptan
cmc
cli
clc
in
loopne
out
out
imul
imulb
loop
aam
out
aas
lock
aad
out
loop
loop
ret
mov
in
out
xchg
loopne
enter
xor
int3
out
xlat
stc
cmp
and
std
mul
int3
test
test
jmp
xchg
xchg
ror
xor
aam
hlt
in
out
cmp
loop
fadd
faddl
test
xchg
xchg
out
xchg
shl
cmp
iret
xor
lock
ljmp
loopne
repz
loopne
jmp
incb
shll
call
in
in
out
ljmp
loopne
xlat
loope
orb
nop
xchg
divl
lock
jmp
into
mul
fcmovnu
fmul
in
fucomp
les
sub
aam
ljmp
int
out
div
movl
mov
jmp
cmc
into
xlat
mov
cmp
and
idiv
inc
aad
xlat
les
leave
fsub
lret
icebp
hlt
icebp
repnz
out
aas
dec
shl
fidivrl
fdiv
std
add
mov
in
lret
in
cmp
repnz
repz
repz
std
aad
aam
shl
fucomi
cli
jmp
into
loopne
test
xor
call
lret
xlat
out
and
mov
cmp
xchg
aad
imull
mov
xor
add
xor
loope
out
hlt
lret
out
loop
out
into
shll
shr
xor
stc
sarb
rcr
in
mov
out
call
xchg
jmp
ljmp
cmp
cmp
fld
fxch
idiv
int3
mov
loop
int
mov
cs
shlb
sar
aam
fdivrs
cmc
ret
not
cli
ror
lock
aam
vcmpps
in
out
ss
sti
jmp
into
in
fcomip
in
cld
mov
mov
out
roll
aad
out
xlat
int3
cmp
and
loop
out
ds
fdecstp
hlt
std
in
iret
iret
out
int3
cmc
fldlg2
aad
iret
fcmovne
cmp
hlt
rcr
cmp
cmc
fiadds
call
xchg
xlat
sub
out
lock
jmp
clc
cli
int3
fucom
not
ret
ret
xchg
add
push
out
out
leave
icebp
enter
aam
cld
ffreep
fiaddl
xchg
xor
pushl
mov
pushl
mov
call
jmp
jmp
lret
rcr
lret
fstpl
adc
add
add
leave
test
cld
jecxz
fstl
xor
fcmovne
icebp
int
cmp
cmp
ret
shl
repz
mov
loope
lds
cmp
int3
in
fdiv
cmp
fsub
rcr
fiadds
stc
fisttps
in
xor
leave
sar
iret
lret
repnz
iret
icebp
stc
in
rolb
decl
into
mov
jecxz
ljmp
fdivl
clc
add
mov
cli
shr
test
loopne
xchg
rol
jmp
ss
cmp
repz
fildl
clc
ljmp
jmp
lock
int3
cmp
xlat
test
fdiv
flds
int3
fmull
xor
iret
ret
cmp
aam
clc
iret
int
cmp
out
test
cld
jecxz
mov
icebp
in
xlat
out
cli
cmp
cli
or
fld
in
mov
xchg
nop
ret
enter
cmp
lock
rol
repnz
ret
sti
aas
mov
nop
and
jmp
int3
lret
cld
ss
push
ror
lret
in
fcmovnb
xlat
fdivrp
in
int3
movb
out
enter
iret
cmp
jmp
out
les
loop
ret
int
in
call
in
in
jecxz
xlat
out
xlat
cmp
hlt
fsubr
icebp
cmp
test
lret
xchg
mov
cs
clc
ret
cmp
mul
loop
out
rol
fadds
fpatan
fcmovnbe
in
icebp
into
les
icebp
fcomp
lret
ret
roll
vpaddb
in
aaa
iret
xlat
lret
clc
in
repz
aas
jecxz
addl
int
xchg
repnz
stc
xor
out
cmp
repnz
xchg
ret
fildl
xor
lret
cli
into
xor
aam
sar
aad
in
test
jecxz
mov
in
iret
repz
xor
cld
cmp
stc
cmp
fnclex
fsub
mov
jmp
mov
rcl
fiadds
in
jmp
cli
iret
cmpl
ds
jmp
xchg
or
shl
sub
rcr
xor
xchg
xchg
movb
iret
fldcw
lret
xor
int3
clc
lret
icebp
cmp
in
loope
adc
xchg
movl
hlt
jecxz
repz
leave
ret
push
mov
sub
decl
movl
adc
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbb
jmp
leave
aad
fst
leave
fldl
cli
sbb
cs
add
add
add
fsubr
int3
leave
lret
iret
iret
aad
ret
in
test
call
xlat
ror
xor
fcmovbe
movl
loop
lret
fmuls
lock
cmc
xor
enter
in
sbb
out
rol
ret
call
filds
in
cmp
fcmovnbe
xor
loope
cli
cmp
fiaddl
enter
in
mov
call
ret
repnz
fnstsw
fstp
sbb
fadds
sti
xor
call
xor
out
leave
aaa
aam
hlt
cmc
rcr
not
loopne
mov
clc
fucomp
fists
ret
ret
into
lret
out
filds
loope
cli
cmp
mov
jmp
lock
cmp
mov
out
cli
jmp
adcb
rcl
out
lret
ror
fscale
in
mov
leave
lret
sub
test
fstl
xlat
repnz
xor
fucomi
in
jmp
loopne
aad
xchg
in
popl
repz
icebp
xlat
xor
sar
int
cmp
rcr
lds
in
out
in
xchg
icebp
in
leave
ss
aaa
cmp
sbb
sarl
repnz
mov
out
fucom
test
bnd
lret
jmp
sbb
into
in
out
loope
call
jmp
into
into
xor
lret
ror
cmp
cmp
faddl
repnz
aam
in
fcomp
lret
enter
xchg
mul
imul
aaa
repnz
out
cmp
into
rcr
fstp
loopne
mul
decl
xchg
aad
neg
ss
cli
lret
cmp
fdivr
std
rcl
xchg
sar
fcmovnbe
mov
xchg
out
fldlg2
call
into
testl
in
clc
test
dec
mov
iret
cmp
fcmovnu
xor
loope
rol
leave
in
sti
cmp
jecxz
jmp
push
subl
jmp
rcl
enter
fldl
push
xchg
cld
push
add
add
aam
ret
call
in
jmp
aad
aam
stc
repz
xchg
or
xor
divb
imul
cmpl
cmp
ljmp
iret
adcl
fucompp
cmp
shl
std
adc
test
adc
test
mov
out
cli
repz
cmp
hlt
cmp
out
sarl
cli
jecxz
addl
loopne
out
xchg
out
aaa
in
jmp
repnz
enter
fcmovnb
sbb
loop
std
mov
xchg
lret
or
icebp
lock
cmp
cmp
std
iret
aas
cmpl
addl
loope
popl
ljmp
rcr
xlat
shl
iret
fcomip
aad
jecxz
leave
out
in
out
xchg
cmc
rorb
xor
fcomi
loopne
std
shl
and
fsub
fnsetpm(287
mov
fucomi
std
repnz
mov
lret
cli
idiv
xlat
ror
repnz
and
mov
in
xchg
in
in
test
cli
cmp
rcl
cld
stc
mov
fildl
out
cld
sub
test
sar
cmp
lds
into
std
xchg
mov
mov
xbegin
dec
xlat
ljmp
aad
stc
in
clc
fsubrp
int
call
into
fld
cmp
cmp
cmc
clc
aam
fsub
fsub
out
std
fucom
jecxz
rolb
shr
call
loopne
sti
int
adc
fcmovne
lret
out
lock
icebp
mov
test
out
div
std
leave
f2xm1
ror
cmp
rcl
addl
mov
xor
lret
xlat
fcomip
aam
aad
in
fdivrl
les
loopne
in
loop
shl
xchg
int
shl
cmp
fidivl
in
loop
xlat
sbb
leave
ffree
decb
lock
xor
neg
xor
das
fcmovne
shl
out
in
xchg
inc
shr
jmp
dec
or
xor
adc
mov
andl
add
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
push
pushl
call
jmp
adc
mov
push
addl
push
test
je
mov
mov
xor
mov
sbb
jmp
xlat
aad
ror
cmpsb
xchg
jg
out
inc
xchg
negb
jle
mov
xchg
jmp
xor
cmp
iret
fnstenv
fsub
fdiv
lock
hlt
sub
jmp
loop
iret
xchg
lock
lret
repz
int
in
jecxz
xor
lock
sbb
shr
mov
xchg
jecxz
xchg
sub
cmc
repz
fdiv
mul
hlt
vpandn
mov
mov
fst
fdivp
ljmp
cmp
cmp
enter
decb
std
xchg
loop
in
in
ror
clc
repz
xlat
fildl
loope
xchg
lea
shr
cld
shl
cld
stc
testl
fucomip
test
fisttps
out
lock
enter
cmp
cmp
cmp
fldl
cmc
cld
fimull
jecxz
out
neg
cmp
cmp
sub
xchg
stc
mov
stc
out
xchg
hlt
lret
int
div
rcl
aam
cmc
lret
out
push
rol
incl
sti
fisttps
fimuls
jmp
int
into
repnz
jmp
lret
out
adcb
out
in
icebp
out
out
loopne
rcl
fdivrs
ds
leave
test
mov
jecxz
int3
lock
in
sub
jmp
lret
sbb
loop
shl
out
std
xchg
std
mov
shl
out
int3
cmp
int
rcr
clc
lret
aam
shl
mov
stc
xlat
out
in
cmc
aam
aad
rcr
cmp
in
mov
lret
into
xchg
hlt
mov
xchg
in
xor
aam
fadd
out
out
jmp
out
sti
rcl
ret
lea
in
call
xor
aad
rol
mul
aas
adc
std
mov
test
int3
xor
rcr
hlt
stc
jmp
xor
shr
aam
std
jecxz
out
fxch
fcmovu
jmp
lock
cmp
divb
jmp
aad
xlat
jecxz
or
imul
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jb
sub
mov
add
add
sbb
jmp
int3
fstp
int
ficoml
fstps
mov
add
add
cmp
mov
cmp
fildl
int3
div
clc
cmc
out
cs
std
in
sarl
cld
in
in
or
jecxz
leave
ljmp
ror
clc
into
enter
cmp
loope
shl
out
ret
sar
or
std
out
hlt
icebp
xor
repz
fsub
cmp
aaa
shr
cmp
repz
fcmove
xchg
xchg
test
out
or
call
shr
loopne
into
lret
loope
fcomip
std
stc
shl
and
std
into
adcl
std
out
fsubr
ret
sti
hlt
in
les
fldl2e
call
xchg
ss
out
std
cmp
fidivrs
cmp
ret
jecxz
loop
inc
loope
xchg
loop
out
iret
out
leave
clc
stc
xlat
in
fadd
into
loop
cmp
orb
bnd
in
cli
xlat
xlat
lret
loop
repnz
sar
cmp
in
loope
icebp
stc
xchg
mov
rcl
out
imul
out
repnz
std
in
flds
std
fdivr
mov
into
enter
loop
call
cmp
into
imul
cmp
ret
div
ljmp
int3
loop
and
clc
xor
enter
cmp
cli
fstpt
ds
mul
inc
xor
jecxz
enter
orl
repnz
fcom
fstp
rorb
div
test
nop
orl
imul
xor
aad
shl
in
xchg
ljmp
mov
loope
fsubrp
xor
cmp
fxch
out
ljmp
enter
decl
int
nop
loop
in
icebp
divb
repz
lock
icebp
cmp
rcl
call
xchg
fisttps
int
jmp
out
test
jecxz
cld
stc
fdivp
loopne
std
loop
test
jmp
test
flds
lock
int
out
cmp
cli
idivb
lock
incl
test
sti
mov
jmp
nop
aad
clc
fcmovnbe
shll
cli
cmp
jns
add
mov
sbb
jmp
rol
xlat
lret
rcr
push
adc
in
in
push
add
add
repz
div
xchg
fadd
xchg
test
fsubr
nop
mov
rol
ljmp
out
cmp
fdecstp
cmp
jmp
test
popl
out
shl
aaa
cli
fcmovnbe
cmp
rolb
leave
int
nop
enter
out
iret
xlat
out
cli
iret
cmp
aam
div
fucomi
cmp
in
xchg
cld
aad
shl
mov
repnz
hlt
hlt
cmp
fdivrp
aad
hlt
xchg
test
shll
leave
jmp
or
cld
aas
aam
rcl
out
fmuls
xchg
iret
aad
out
clc
xor
fdivr
call
iret
stc
mov
in
cli
lret
in
lret
not
cmp
lock
stc
stc
jmp
xor
repz
stc
les
in
cmc
jmp
out
enter
int3
shl
lock
sti
loop
in
cli
and
stc
out
cmp
jmp
out
iret
ror
ror
rcl
bnd
stc
orb
nop
loope
into
xor
out
cmp
int
sti
aad
fld
out
clc
mov
mov
xchg
out
loop
cmc
icebp
rol
rcl
xor
jmp
xlat
cmp
out
lret
int
incb
lock
cmp
sti
loope
lock
leave
xchg
lds
mov
out
out
shr
aad
into
std
test
shl
fadd
clc
mov
loope
int3
out
lret
xchg
ljmp
jmp
cmp
loop
les
ffree
std
int3
loopne
in
cli
mov
xchg
xchg
xor
into
repz
call
cmc
sti
test
mov
decl
xchg
xchg
out
fdivp
repz
aad
not
cmp
ljmp
ljmp
mov
int
sub
hlt
repz
int3
roll
hlt
fptan
aas
loop
in
test
fucom
fcomip
lock
int3
repz
xchg
adc
sub
xor
sbbl
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
movzwl
add
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
mov
mov
xorl
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
jmp
iret
lret
rcr
aad
enter
mov
and
add
add
cmc
icebp
in
aas
fnstenv
out
roll
ret
test
sti
xchg
rclb
ret
iret
out
ds
hlt
test
clc
and
in
nop
mov
ljmp
xor
cli
cmp
sarb
out
fsub
lock
repnz
xlat
out
lock
ljmp
cmp
repz
test
ljmp
iret
test
repz
int3
cmpl
fmull
inc
in
ret
loopne
repnz
hlt
cmp
rcl
xor
fcmovnb
fucomip
mov
sub
int
call
fadd
fucomp
fxch
cld
aas
repnz
testb
jecxz
faddl
lret
ljmp
out
dec
rcr
in
faddp
int3
vshufps
ljmp
lret
hlt
fidivrl
ret
fcmovb
loop
sar
jecxz
sbb
loopne
in
xchg
out
shl
ret
xor
out
repz
stc
ljmp
sbb
lea
jecxz
int
lret
xor
in
xor
aam
frndint
add
icebp
fyl2xp1
rcr
test
int3
out
test
leave
jmp
out
clc
lret
fucom
jecxz
jecxz
add
mov
fnstcw
int3
fmull
xorb
out
sti
cli
out
out
out
shl
ljmp
shl
fisttpl
out
in
out
shl
lock
xor
ror
lret
cmp
iret
or
aad
xlat
mov
in
shl
into
mov
fsub
fmul
cmp
adc
rcl
idiv
jmp
loope
shl
shl
repnz
repz
int
sarl
icebp
in
loope
in
jmp
xchg
out
clc
aad
call
sar
loopne
aas
cmc
fsubp
sti
loop
fldl
out
ss
iret
int
lock
ds
icebp
incb
enter
xchg
add
mov
mov
movl
je
movl
cmpl
je
cmpl
jne
pushl
push
call
xor
add
dec
mov
jmp
adcl
mov
xor
decl
jmp
rol
xlat
aad
fstp
lds
fimuls
add
mov
fisubs
add
add
ret
cmc
loope
mov
iret
sar
shr
rol
out
loop
out
ret
dec
fcmovnu
cmc
jecxz
fdivs
stc
fdivs
cmp
leave
and
in
xor
jecxz
clc
sar
icebp
lret
in
xchg
in
ss
repnz
rcr
out
cmp
in
xlat
sar
jmp
rorl
iret
shl
test
lock
and
rcr
fcomp
cli
repnz
cld
fcmove
stc
lret
fneni(8087
in
clc
xor
xor
out
jmp
sbb
cli
loope
xlat
cmp
enter
mov
enter
std
into
out
rcr
xchg
ret
repz
jmp
xchg
out
repnz
lret
cmp
fdiv
aas
cli
ret
mov
roll
xlat
in
incl
xor
xor
in
rcl
std
cmp
cmp
std
jecxz
xchg
cli
orb
jmp
fucomip
std
repnz
cmp
fsub
test
out
loope
out
fucomip
rcl
sti
lock
fdivrs
aas
rcl
cmp
lret
into
out
fisttps
xor
hlt
xlat
sar
cmp
rcr
ret
sarl
xchg
ret
rol
cli
enter
ljmp
xor
jmp
repz
stc
test
call
mov
in
int
icebp
xchg
enter
leave
cmp
fpatan
rcr
iret
aas
in
sar
aad
call
out
lock
jmp
incl
ss
call
rcr
ret
xlat
cmc
sub
out
lret
jecxz
jecxz
leave
jecxz
shr
jmp
clc
hlt
cmc
cmp
std
test
xchg
mov
shl
mov
stc
rcl
cmc
loopne
out
int
repz
out
ds
orb
in
lret
loop
fstpt
fmul
std
cmp
loop
fsubrp
aad
rolb
xchg
lock
lock
cmc
fcomp
leave
lret
sti
sar
iret
iret
ds
mov
ret
movl
cmp
movl
jne
andl
pushl
xorl
call
mov
xor
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
xor
add
cmp
je
pushl
pushl
call
jmp
aam
fadd
fst
aam
add
jle
xor
add
add
mov
in
nop
mov
ss
xor
out
loope
rcl
iret
incb
xchg
out
leave
mov
jecxz
xlat
lret
cmp
add
std
shl
mov
out
cld
xchg
xchg
loopne
in
lret
xor
enter
rcr
loop
shl
ret
leave
fcmove
fsubr
or
stc
lret
into
rorl
in
cmp
aam
fst
dec
out
loopne
aam
call
out
lret
icebp
fbstp
xlat
fcmovnb
shr
lret
sarb
sar
cmpb
ror
in
in
jmp
std
addl
jmp
hlt
shl
hlt
icebp
cmp
fdiv
sbb
in
jmp
mov
hlt
ss
out
stc
enter
ljmp
ret
test
out
call
lock
jmp
fcmovnbe
lret
loopne
addb
loope
loopne
xlat
out
out
xchg
iret
ljmp
cmc
xor
cmc
sar
aas
in
loope
cmc
rol
mov
fcomp
jecxz
mov
int3
into
rcl
lret
ret
in
in
rol
stc
hlt
cmp
jecxz
xor
lret
ljmp
loop
ret
lret
ljmp
mul
repnz
rcl
fdivrp
leave
in
xchg
or
in
xor
sub
lret
cmp
out
cmc
lret
fucomi
sar
orb
sti
lret
loope
rolb
in
xlat
repz
fsubr
idivl
sar
enter
clc
mov
xlat
icebp
out
ljmp
into
lock
iret
lret
lret
loopne
aad
loope
out
sti
mov
f2xm1
out
out
inc
test
int
cmp
ret
roll
fiaddl
repz
repz
aam
cmp
lret
aam
cmp
out
sti
imul
into
decl
sar
hlt
lret
into
filds
stc
into
sarl
loope
ret
dec
neg
nop
mov
aaa
leave
int
neg
fidivl
cmp
jmp
sarb
repz
roll
mov
mov
xor
add
jmp
rcl
int
ffree
fstpl
or
cmp
cmp
jle
std
out
mov
in
cli
repz
out
jmp
shr
test
cmp
clc
enter
fsubr
test
fucomip
icebp
ror
int
divb
leave
in
aad
jmp
aas
xchg
mov
xchg
in
mov
xor
cmp
hlt
hlt
cmc
out
fdivp
cmp
out
fprem
sti
clc
xchg
xlat
in
xchg
repnz
rcl
jmp
cld
cmp
in
fchs
xlat
hlt
in
repnz
fsubp
fcmovnu
loopne
iret
fcmove
rolb
out
out
fldt
int
aaa
lret
repz
xlat
sti
sbb
aam
out
out
std
decl
shl
xor
fcmovnb
in
cmp
lret
aas
repnz
shl
aam
test
loop
movl
fidivl
cmp
rcr
rcl
ret
sbb
shr
push
jmp
xlat
lret
int
neg
f2xm1
not
int
push
cmp
in
and
in
nop
jmp
loop
sub
lock
ds
fistpll
rcl
fidivrl
cmc
test
enter
int3
loop
out
icebp
faddl
loop
aaa
stc
ss
fdivr
in
fmuls
into
in
fcomip
aad
ror
repz
xlat
sarl
aam
ret
xchg
cli
fneni(8087
lret
loopne
xchg
hlt
das
cmc
clc
lock
cmp
iret
aaa
stc
fildl
aas
ds
test
mov
mov
mov
mov
cmp
fldlg2
cli
sti
fidivrl
in
loope
cmp
out
loopne
clc
enter
out
out
in
ljmp
aas
ror
cmp
addb
lea
fisttpl
ss
add
icebp
sti
cld
jmp
sti
fcmovne
jmp
xchg
cmp
int3
xlat
enter
adc
aam
fisttpl
loope
test
xchg
xor
sar
cmp
in
adc
int3
iret
loope
rcl
lret
mov
ljmp
jecxz
lret
ret
lret
call
cmp
je
mov
mov
jmp
int3
aas
rol
fst
fadd
ljmp
jle
sub
jle
ret
out
std
repz
lret
jmp
call
int
cmp
clc
ljmp
hlt
fxam
jecxz
out
std
int
out
out
out
mov
xchg
xor
div
xor
leave
in
ljmp
in
stc
mov
in
cli
int3
in
jecxz
pop
aam
xor
int
clc
hlt
iret
lock
test
rol
aad
fiadds
mov
xor
aam
ror
clc
cld
rcl
icebp
ret
std
icebp
rorl
in
fstp
cmp
sar
into
cmc
lock
cmp
fnstenv
into
fmulp
loope
cld
xchg
clc
test
cmc
std
lret
nop
into
mov
mov
aam
enter
hlt
lret
enter
lock
aad
fscale
out
in
jmp
loopne
loopne
xchg
aam
aaa
ljmp
xor
addb
shl
fsubrp
flds
and
lret
call
fidivrl
fucomi
cli
sub
stc
loopne
jecxz
faddl
lea
sarl
int3
out
aam
aad
aam
into
cmp
sti
mov
ljmp
loope
not
in
loope
jecxz
enter
leave
idiv
into
iret
out
aam
bnd
mov
loope
imull
ror
xlat
in
in
cli
sar
shr
vpsraw
fidivrs
add
out
int
mov
fcom
not
cmp
fldz
repz
fdivr
loopne
xchg
std
fmul
into
incb
enter
lock
out
cmp
lret
int3
aad
sarl
std
leave
aad
jmp
cld
leave
mov
aam
xlat
jecxz
std
enter
out
repnz
fadd
cmp
filds
lock
xchg
xchg
jmp
aaa
shr
aad
in
stc
cmp
test
mov
lret
lock
mov
fucomip
xchg
rol
ret
fdivrs
lock
call
ret
stc
faddp
out
and
mov
rorb
ss
cs
rcr
xor
jmp
clc
out
xchg
mov
int3
xchg
aas
aaa
xor
std
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
jmp
aas
ror
fcomp
fnstcw
dec
int
dec
bnd
das
add
add
sar
out
std
clc
aad
xlat
mul
in
out
mov
test
rol
aad
int
in
lock
ds
add
test
in
in
xlat
out
fcmovnu
mov
xchg
xchg
lock
jmp
in
int
jmp
sarb
test
jmp
jmp
int
in
test
in
stc
jmp
xlat
jmp
xchg
test
enter
neg
cld
in
fucomp
and
hlt
iret
in
lret
sar
fdivr
lock
fdivp
dec
out
clc
out
xchg
int
adc
in
sti
out
sub
lret
std
int
shl
fimull
int3
incl
xchg
jecxz
int
cmp
fcmovu
int3
loope
out
test
fmull
fsubr
shl
out
out
ret
in
imul
cmp
repz
into
sarl
std
cld
hlt
in
fmull
fsub
loopne
aam
not
rcr
in
xlat
out
cmp
fldl
icebp
sub
mov
fistl
icebp
ror
aaa
fucomp
xor
idiv
lock
lock
idiv
xchg
sub
xchg
mov
loope
rol
fldcw
out
out
fcom
ljmp
cmc
test
fsubp
sar
test
nop
xchg
divl
aam
repnz
std
clc
hlt
repz
aad
cli
inc
aam
stc
clc
mov
cli
test
out
out
xchg
ret
fucomi
sti
cmp
out
iret
cmp
std
in
fisttpll
xchg
shll
lret
jmp
jmp
fld
in
cmp
ror
fsubr
lret
shl
xchg
in
in
int
cmp
lock
cmp
aaa
addb
out
mov
jmp
xor
iret
xlat
fst
aaa
aam
int3
cli
into
fdivs
stc
in
enter
xchg
mov
ffreep
in
lret
call
cmc
cmp
addb
jmp
call
int3
mov
iret
jmp
lock
lret
out
aam
rol
vpsubusb
in
test
leave
std
out
lock
mov
mov
jmp
aas
xlat
xlat
rcl
ror
fld
cs
and
jge
pop
xorb
jle
add
out
cmc
cmp
cli
cmp
int
mul
xchg
enter
sub
fdivp
xor
aam
jmp
cld
fsubrp
aad
repz
aad
out
enter
fdiv
call
xor
in
enter
aaa
aaa
std
repz
ret
fadd
in
mov
xor
mov
icebp
out
cmp
xor
in
in
cmp
fmulp
int3
clc
std
fsub
aad
xor
dec
jmp
into
shl
aad
aad
rol
stc
incb
cmp
ret
mov
mov
mov
loopne
hlt
iret
xor
int3
cmc
lret
sub
jmp
cmc
loopne
clc
mov
leave
jmp
xchg
xchg
mov
std
xchg
enter
lock
repz
fcmovu
jecxz
inc
faddl
xlat
in
lock
xchg
xor
out
out
xlat
clc
jmp
out
stc
int3
loope
icebp
in
clc
add
cld
xchg
jmp
int
int3
int
fucomi
xlat
faddp
rol
cmp
lock
in
cld
mov
int3
jecxz
xchg
out
shr
enter
in
hlt
lret
stc
fildl
and
faddl
orl
cmp
in
stc
out
cmp
fdivrp
int3
xchg
fcom
aam
lret
ljmp
jmp
loop
loop
fldl2e
repnz
rcr
into
repnz
sti
loop
and
in
mov
xchg
aam
out
in
ljmp
aaa
cld
fnstcw
test
jmp
xchg
addb
into
cli
mov
aad
clc
clc
out
fstp
mov
loope
test
into
mov
xor
jecxz
into
lret
sarl
ds
sarb
fadds
int3
fiaddl
int
in
iret
xor
icebp
aad
aaa
push
lock
lock
sbb
std
aad
cld
mov
jecxz
shl
leave
icebp
shlb
fbstp
cld
out
add
jecxz
test
in
xchg
cmc
out
std
in
leave
xchg
mov
xlat
shr
cmc
cmp
fmulp
add
xlat
fcomip
lea
rolb
or
jmp
into
aam
xlat
int3
fcmovnbe
frstor
nop
jmp
add
add
xchg
jmp
xor
ds
addl
ljmp
fnclex
fldl
in
aaa
iret
repnz
in
cli
std
ret
rcr
aad
cli
fndisi(8087
cli
out
repnz
loope
shr
cmp
jmp
jmp
cmp
dec
in
addb
xor
loop
lock
hlt
icebp
lret
fnstenv
call
out
icebp
xlat
sbb
fstp
hlt
loop
mov
mov
push
xchg
mov
icebp
shl
out
out
icebp
in
into
out
in
shl
out
fcmovbe
cld
mov
jmp
sar
rorl
clc
cmp
cmp
std
out
cli
into
sarb
fcmovnu
ret
hlt
ds
les
jecxz
shr
in
in
int3
in
xlat
fdiv
ljmp
fucom
fcmovbe
in
in
test
xchg
out
cs
cmp
jmp
xlat
clc
cmc
in
ds
rcr
xchg
mov
in
xchg
test
loope
jecxz
call
xlat
icebp
loopne
fcmovnu
hlt
in
fld
and
mov
xchg
rorb
xor
cmc
ss
rorl
orb
mov
jecxz
out
enter
aad
clc
std
int3
in
in
std
in
incl
out
int3
out
mov
fdiv
aam
in
in
cmp
jmp
repnz
ret
aad
addl
in
hlt
rcl
call
ljmp
lock
ret
loop
sti
mov
repz
out
xor
iret
aad
out
aas
roll
cli
cld
fsub
fstp
out
mov
std
in
int
call
iret
fmul
rcr
xor
aas
aad
rorl
mov
addl
shl
int3
fcos
iret
fdivr
aad
fildl
sar
lret
in
xor
lret
int
lret
aaa
fdivrs
aad
addl
lea
shl
pop
jmp
cmc
in
cmp
jmp
cmp
cmc
int3
sar
shl
mov
lea
mov
push
pushl
pushl
call
jmp
lret
rcl
fstp
xchg
sti
inc
in
sbb
repnz
cmp
jle
mov
in
in
fldl
out
int3
out
out
cld
lret
xor
stc
cmpb
in
jecxz
aam
test
mov
repz
xor
int
repnz
shl
fdivr
cli
loop
cmp
ds
cld
loope
loopne
incb
clc
int
lret
stc
cmp
in
iret
repz
fildl
in
xor
out
cmp
cmp
hlt
cmp
out
not
fucomp
fcos
cli
lret
fstp
jmp
int
shr
xor
iret
xor
test
sarl
fcmovb
cmp
test
lret
fxch
iret
lds
fyl2xp1
int3
int
jmp
dec
cmp
cld
fadd
loop
cli
out
xlat
in
mov
cld
rorb
cmp
cmp
cmp
cmp
inc
out
adc
enter
stc
and
int
repz
aaa
ljmp
cmp
testl
test
test
in
out
icebp
cmp
fcmovbe
aad
aad
rolb
orl
xor
ss
aad
fstpt
testl
loopne
in
nop
mov
in
out
out
icebp
xor
repnz
sar
jecxz
enter
aad
in
lock
in
or
ss
in
fucomp
aad
in
lret
aam
repz
mov
ret
sti
iret
fnclex
enter
iret
shlb
xlat
fsubp
rcl
repnz
clc
cmp
ret
in
cli
ror
loopne
mov
out
ror
in
call
roll
loopne
addb
shl
loope
in
in
ret
enter
idivl
sar
jmp
xor
dec
xor
jmp
out
repnz
testl
or
out
repnz
call
cmc
aam
fsub
sarb
rcl
fmul
test
in
repnz
xchg
test
out
leave
in
imul
fstpt
fcomp
icebp
test
mov
jmp
vshufpd
ror
adc
push
xor
jle
cmp
jle
add
cmc
fmull
test
clc
in
out
dec
nop
rcl
lock
shl
aam
test
ds
in
leave
xlat
mov
fxch
decl
test
xor
fnstcw
cmpb
shl
mov
jmp
lret
out
in
fsub
test
enter
call
in
idivb
lock
rorb
fsubrp
test
int3
in
lea
test
into
enter
faddl
idiv
xlat
mov
cli
loop
out
test
out
hlt
call
int
fnstcw
icebp
int3
div
test
test
cmp
stc
aam
clc
fadd
call
mov
xor
xor
xor
fcomi
addl
lret
in
mov
mov
mov
xlat
xor
jmp
cmp
cmp
loop
sub
xchg
in
jmp
in
rcl
out
cmp
in
fcmove
out
loope
sbb
mov
enter
xchg
or
test
repz
fucomp
cmp
fldlg2
add
mov
xchg
leave
ret
sub
jmp
lock
cs
enter
clc
shl
cmp
std
icebp
ds
in
aas
jecxz
out
jmp
cmp
xor
aaa
aas
addb
mov
or
fxch
in
sub
out
hlt
repz
jmp
out
cmp
cmc
clc
loopne
sti
std
int3
cli
jecxz
clc
mov
xchg
ret
cld
cmc
aaa
ds
sti
loop
fcmovnb
out
fcmovnu
mov
iret
xchg
fdivr
cmp
clc
ss
cmp
ffree
cmp
lret
jmp
test
aaa
call
shl
adc
repz
jmp
repnz
jmp
xor
call
jecxz
ds
hlt
in
loopne
mov
nop
fucomp
out
xchg
xor
repnz
repz
lock
cmp
test
xlat
idiv
sar
icebp
fcmovnbe
loop
lret
rcr
ss
cmp
fucomi
mov
xor
jmp
int3
aas
ret
sbb
roll
cmc
das
call
add
aas
aam
rcl
xchg
shl
xor
incl
lret
divl
out
aas
lock
neg
fadd
xchg
out
lret
mov
and
hlt
iret
xor
ss
aaa
loopne
cmp
rcr
imul
out
test
nop
in
rcr
das
xor
enter
shr
lret
sbb
sti
cld
xlat
xlat
enter
leave
fstp
nop
sti
xchg
addb
lock
cmp
rol
shl
loopne
fsubp
leave
jmp
std
loop
xor
call
cmp
jmp
xor
enter
testl
loope
ret
shl
vpsubq
aaa
aad
cmp
aas
cmp
fpatan
lret
nop
sub
jmp
out
out
cmc
ss
ds
xlat
stc
cmc
loop
enter
leave
loope
mov
in
out
nop
or
in
call
xor
or
xchg
xlat
aad
stc
sub
mov
in
in
int
out
jecxz
fcmovne
sar
imul
fcom
int
fcomi
cmpl
into
call
xchg
ss
lock
hlt
iret
xor
lret
fnsetpm(287
icebp
enter
loop
notl
in
ret
into
lock
cmp
lock
jmp
into
sti
mov
fld
fmulp
xlat
idiv
out
mov
xor
leave
fscale
cli
stc
hlt
cmpl
fcmovnu
ljmp
loopne
in
out
sti
ss
iret
jmp
lret
ret
cld
into
stc
in
in
enter
test
mov
into
lock
fcmovne
xlat
fldln2
loop
aas
roll
test
enter
mov
repnz
xor
fcom
sti
imul
out
hlt
icebp
xlat
aam
iret
loopne
cmp
fucompp
cld
orb
xchg
jmp
clc
cmp
std
cmp
repnz
fprem
out
and
loop
mov
test
ret
fisttpl
int
fmul
icebp
lock
fiaddl
out
rorl
mov
out
add
cmp
jmp
rol
rcl
rol
aad
sahf
xor
icebp
loope
shlb
jle
lock
not
addl
clc
ror
mov
iret
icebp
int3
out
iret
iret
out
lret
xor
ret
dec
mov
rorb
shl
int3
cmp
stc
neg
sarb
jecxz
test
enter
loope
shl
in
fsubrp
aad
jecxz
into
jmp
fucomi
fldl
loop
les
ljmp
sarb
xor
std
cmp
ror
cmp
lock
out
test
ljmp
imul
fsincos
cmp
std
ds
in
lock
ds
testl
in
jmp
loopne
iret
lret
dec
test
call
int3
vpcomd
mov
xlat
sti
repz
icebp
fsubr
sarb
stc
ror
call
xchg
out
xchg
lret
mov
vpmuludq
incl
fincstp
cli
mov
ffreep
xchg
stc
clc
lret
call
xchg
repnz
neg
clc
xor
lret
cmp
out
in
std
clc
fldl
out
cs
xor
aam
xlat
ror
ret
test
out
adc
cmp
fsub
loope
mov
xchg
loopne
stc
int
cld
fsubrp
cmp
sti
fadd
test
ljmp
xchg
lret
xlat
out
lret
xor
loop
cld
ds
ffree
test
sar
xchg
repz
dec
xor
ljmp
sar
loope,pt
fmuls
call
xchg
mov
in
cmp
fcom
xlat
cmp
cmp
ffree
addl
aam
cmp
cld
cmp
lret
xor
clc
rcl
xchg
and
lret
int3
inc
xchg
jecxz
aad
repnz
icebp
int3
aas
in
sarb
ret
fsubr
lock
jmp
mul
aam
out
out
jmp
aam
stc
test
or
fmuls
jne
jmp
aad
mov
mov
jp
mov
add
add
in
ror
out
clc
xlat
out
lret
cmp
cmp
clc
rcr
rcl
test
loopne
rolb
hlt
iret
in
clc
int3
in
cmp
ljmp
fildl
leave
ffreep
fsubrp
mov
ljmp
stc
in
out
out
xor
cld
ds
mov
cli
loop
jecxz
and
les
call
cld
jmp
cld
shl
testl
stc
out
in
cmc
ljmp
lret
clc
fmul
cmp
out
ffree
ret
cli
sbb
incb
ljmp
aaa
rcr
fdiv
icebp
cmp
cmc
jmp
cli
cmc
out
fcmovnu
in
mov
in
jmp
mov
lock
call
ds
cmp
xchg
jmp
lea
hlt
das
loop
fsubr
hlt
div
rcr
fcmove
icebp
sarb
loopne
test
lock
icebp
nop
xor
repnz
aaa
std
ss
clc
and
cld
shl
cli
rcr
lret
loop
leave
fcomp
repz
jmp
lret
rcr
xor
cld
out
clc
in
cmp
xor
std
mov
sti
and
mov
out
xlat
xor
out
out
leave
out
int3
out
loop
rcr
hlt
test
mov
clc
jmp
mov
call
ss
sti
xlat
cmp
aam
shlb
cmc
fdivr
test
ljmp
test
test
out
xor
fsub
rcl
fidivrs
test
aad
call
mov
out
int
ror
filds
in
hlt
icebp
clc
enter
into
aam
fdivr
clc
in
flds
iret
fmulp
shl
xlat
lds
jmp
in
div
icebp
ds
shl
std
stc
test
nop
enter
aad
hlt
rcl
xor
iret
in
xor
ffree
iret
in
icebp
clc
fucomp
in
lret
cli
mov
call
fsub
ljmp
into
in
jecxz
aam
xlat
std
in
leave
rcl
out
jecxz
in
ror
hlt
xor
cmc
aad
push
xor
test
ljmp
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
jmp
leave
aam
aad
int
fisttpll
scas
adc
lea
push
roll
cmp
jle
mov
xchg
cmp
lock
int
fldl
mov
xchg
adc
int3
aaa
clc
stc
into
shl
enter
stc
cmp
cmp
fucom
xchg
fmulp
ds
in
in
nop
out
aaa
shl
cld
mul
into
addb
movl
cld
loopne
out
repz
xor
clc
aam
jmp
icebp
shl
hlt
fadds
fcmovnb
mov
in
xchg
out
out
test
dec
sub
fdivrp
loop
xchg
loop
stc
loop
in
mov
out
xor
das
repnz
das
xor
cmp
sarl
repz
jecxz
orb
cld
mov
sub
out
ret
stc
out
stc
out
cmp
cmp
sar
hlt
shl
incb
nop
div
loopne
icebp
call
sar
sar
ror
clc
cmc
cli
ret
cld
xchg
mov
repnz
lret
xlat
fucomp
lock
ret
fildl
orl
call
into
test
jmp
div
aam
jecxz
mov
fcmovnbe
ret
sbb
call
out
xor
cmp
icebp
fcomp
ffreep
vpmaxub
jecxz
in
lock
sar
ss
fcmove
mul
fsubrp
jecxz
test
call
out
in
into
mov
jmp
out
shll
lret
int
fxch
sar
stc
xorb
ds
cmc
enter
leave
loope
mov
lret
rcr
ljmp
iret
out
cld
rorl
lock
fdiv
aad
int3
lret
hlt
cmc
iret
jecxz
aad
loopne
test
addl
test
icebp
into
in
icebp
divl
stc
in
ljmp
orl
sti
test
test
rcl
std
fucomp
ds
in
rcl
in
aad
cld
clc
mov
jecxz
in
out
in
test
enter
xor
jmp
loopne
int3
out
bnd
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
jmp
enter
fcmovu
int3
aam
in
add
int3
dec
pop
rol
add
add
clc
incl
xor
xchg
repnz
in
rcr
loope
out
aas
fucom
aad
call
in
or
mov
fcom
stc
jmp
das
fucomip
shl
rcl
ds
clc
flds
loope
int3
jecxz
ljmp
xor
call
aad
aas
aam
lock
lret
jecxz
fdivr
in
lds
into
cli
xor
cmc
cmp
xor
int
ss
xlat
stc
loop
test
loopne
fldl
nop
test
hlt
xabort
xor
leave
out
enter
in
cli
mov
dec
jecxz
mov
addb
iret
clc
fcmovnbe
repz
aam
stc
cmpb
ffree
enter
ljmp
rcl
sub
leave
cmp
ds
out
xchg
xchg
ret
stc
lret
xchg
out
sarb
xor
repnz
aaa
fucomp
not
cld
std
fdiv
rorb
in
lock
out
xchg
imull
sub
cmp
xor
icebp
ljmp
push
mov
jecxz
nop
into
out
fcoml
ror
hlt
cmc
out
adc
test
les
cld
jecxz
test
int3
repnz
loope
int
cmp
std
std
hlt
fnstsw
xor
int3
dec
in
into
iret
xchg
shl
cmc
cmc
xor
std
lret
in
fcmovnbe
std
lret
faddp
cmc
in
rolb
loopne
loope
loope
imulb
in
jmp
iret
div
in
sar
xlat
xchg
jecxz
nop
out
int3
loope
xchg
in
loop
ror
fcmovbe
sar
fcmovu
int
cmp
xlat
neg
rcr
sti
jmp
in
or
out
in
clc
shr
lret
out
cmp
ds
stc
repz
testl
mov
rolb
jmp
xor
repz
std
shl
sti
xchg
and
test
lret
roll
divb
lret
adc
out
sti
in
shl
enter
incl
rorl
sub
fcomip
lret
pop
xchg
jmp
aas
int3
mov
std
int
pushf
rclb
jle
add
cmpb
test
int3
out
mov
lock
in
out
xor
int3
in
xlat
cmp
sar
cmp
cmp
roll
mov
cli
fucomp
xchg
int3
out
and
rcl
jmp
cmp
out
sarb
aad
test
mov
mov
hlt
mov
shl
in
stc
aaa
cld
aaa
in
cmc
out
int
std
rol
ror
out
fucom
leave
nop
lret
out
out
nop
rol
xlat
stc
sarb
fsub
out
aas
sar
fninit
testl
out
loope
adc
cmc
out
jmp
cmp
test
mul
roll
std
aam
int
aam
in
lock
lock
ds
fldl2e
bnd
iret
test
xchg
in
loope
shlb
ds
fidivrs
loopne
fld
ret
ror
mov
orb
int
lret
aam
jecxz
in
fcmovnb
clc
clc
leave
xlat
mov
lret
loopne
xchg
in
in
in
xor
fmul
loopne
int
in
repz
cmp
sti
clc
loope
int
mov
xchg
imul
int
xor
sarb
repz
ds
shl
fcom
orb
int3
shl
repnz
test
imul
in
std
fdivrs
repnz
in
fiadds
in
shl
iret
out
cmp
jmp
aaa
ret
cmp
fildl
out
popl
xor
xor
clc
std
cmp
sarl
cli
xchg
out
xchg
jmp
out
aaa
idiv
int
xlat
repnz
into
fdivrp
test
icebp
cmc
in
fxch
out
out
test
cmp
fsin
push
fiaddl
rcl
sar
out
loope
repnz
shr
shl
out
xor
in
hlt
fsubr
in
fiaddl
ret
mov
loop
hlt
xchg
std
lea
hlt
cmp
int
cmp
cmp
cli
lock
fcmovu
mov
std
les
int3
lret
mov
out
aam
in
ftst
imulb
flds
add
add
lret
int3
fcmovnu
mov
sbb
cmp
add
add
shl
lret
loopne
shl
fcmovu
fdiv
cld
adc
xlat
test
mov
test
icebp
call
into
clc
sar
out
ret
fcom
out
repz
fimuls
rcl
out
out
shl
stc
shr
div
lret
ret
faddl
loop
jmp
rclb
ret
lret
cmc
rcr
out
jecxz,pt
cld
loope
fadd
fildl
lret
call
test
cmp
repz
ret
rcr
mov
test
mov
clc
int3
mov
fsubp
repz
fdiv
cmp
cld
cmp
repnz
in
in
call
cld
aad
in
aad
clc
out
out
xchg
jmp
in
loope
xor
jmp
aad
ffreep
rcl
testl
int
loope
aad
in
shll
int3
cmp
in
xlat
out
fcmovu
int3
jmp
loopne
aad
xlat
iret
shl
ret
lret
std
iret
imul
cmp
div
clc
aam
jmp
shr
jmp
int
imul
xor
out
sar
sbb
repz
out
fildl
fists
xlat
xor
std
std
and
fsubr
adc
in
out
in
fxch
in
repnz
shl
ret
std
jmp
fsub
fcmovnb
and
jmp
out
ljmp
and
jecxz
rol
xor
fnstcw
cmc
out
addb
in
repnz
into
cmc
sti
cmp
cmp
int3
ffree
cld
idivb
aas
out
fiaddl
jmp
icebp
in
iret
in
shlb
fdecstp
xor
cld
stc
xlat
jmp
hlt
or
aam
fmuls
icebp
mov
icebp
mov
lock
sti
out
aas
jmp
stc
mul
fsubr
jmp
fildl
call
int3
rcr
cmp
neg
rcl
lock
and
loope
int3
cli
nop
xchg
in
jmp
iret
sti
fnstsw
rcl
clc
test
cmp
int
mov
fisttps
shrl
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
mov
rcl
ror
fnstcw
lret
push
lret
cmp
jle
hlt
repnz
fcmovne
shlb
ljmp
aas
iret
repnz
addl
xor
iret
cli
jmp
cld
xor
cmp
bnd
cli
ljmp
fists
sar
aad
cld
sti
enter
cli
out
int
out
addl
mov
out
in
shr
out
loopne
xlat
fcomp
call
repnz
lds
in
mov
loop
mov
ljmp
hlt
or
xor
out
ret
ret
clc
ljmp
loopne
loop
rol
aam
fcom
cld
int
aaa
int3
ds
std
neg
lock
repnz
fisttps
repz
mov
cmc
in
int
sti
iret
int3
in
cmp
in
repnz
rcr
test
nop
in
out
rclb
fxch
in
sar
stc
leave
cmp
addb
in
hlt
out
xlat
loope
fucomi
shr
loop
into
rcr
adc
iret
loopne
in
cli
cli
rcr
ret
out
out
out
sar
iret
mov
xor
aam
shr
xlat
push
hlt
idivl
jecxz
fxch
mov
loopne
sti
lock
out
lock
lret
fcmovnbe
bnd
ds
cmp
loope
xchg
in
out
sti
fucomp
repz
call
cli
xor
div
into
in
in
in
stc
inc
ljmp
mov
imul
enter
aaa
jmp
test
repnz
out
out
jmp
out
hlt
mov
xchg
in
lret
xor
fnstsw
in
fsubr
repz
aam
stc
flds
int
test
in
shrb
hlt
int
int
fcmovu
loope
sti
loop
test
test
rol
fucomi
int
dec
faddl
repnz
in
cmc
leave
neg
dec
ret
loope
lds
shl
repz
xlat
sub
lret
int3
jecxz
cmc
in
enter
xor
sarb
cmp
repz
div
shr
cli
ljmp
in
loopne
in
lret
sar
cmp
fcmovnu
std
icebp
loope
out
jmp
add
add
add
aam
int
int
aam
xchg
inc
lret
cmp
cmp
add
add
loop
ror
fdivp
ret
ljmp
cmp
lret
shl
fildl
nop
in
int3
out
shl
das
out
xor
xor
hlt
lret
stc
in
clc
sar
test
loope
fildl
ret
sub
lock
into
lds
sti
xor
out
cli
lret
fadds
enter
mov
call
xor
in
int
repz
repnz
in
in
shl
sbb
ljmp
sub
ret
fnstsw
out
jmp
in
add
loope
int
call
xchg
shl
leave
xor
xlat
cmc
cmp
aad
cmp
rcr
xchg
ds
out
clc
into
mov
mov
std
fisttps
int3
out
fcomip
hlt
hlt
aad
lds
cmc
in
loope
test
call
fcmovbe
aad
stc
cmp
lret
aad
aaa
ret
fld
lret
cli
out
out
mov
xor
call
xor
or
repz
xchg
out
cld
test
jmp
ljmp
ror
cmc
adc
sar
aad
les
jecxz
call
not
sti
jmp
cmp
std
fsubr
cli
not
loop
rcl
ljmp
jecxz
jmp
int
cmp
addl
out
incl
std
dec
shlb
iret
std
fcmovnbe
iret
fdivp
std
fiaddl
in
int3
call
repz
sti
repz
cmp
out
fdivr
clc
cmc
icebp
cmp
loopne
shl
fndisi(8087
leave
loop
out
ljmp
in
xor
cmp
std
ds
out
in
rcl
in
test
fisttpl
xchg
ljmp
idivb
repnz
movb
cmp
mov
enter
lock
std
aad
aad
cmp
int3
in
int
flds
sub
loop
jmp
cmp
aaa
aam
sti
leave
std
cmp
and
rorl
or
push
add
add
ror
rcr
int
stos
outsl
int3
nop
sar
xor
repnz
add
add
cmp
loope
int3
fsub
mov
loope
int3
fxch
fnsave
std
hlt
stc
into
out
test
shl
cmp
cld
ror
in
in
lret
sub
loop
fdivrl
ror
xlat
cmp
in
fmul
xlat
jmp
movl
lret
cmp
aaa
xor
aam
cmc
mov
ret
mov
jmp
movl
out
sarb
loop
ljmp
fists
int3
aam
idiv
aad
sti
fsub
icebp
ror
iret
repz
in
in
lret
in
iret
call
out
icebp
iret
ljmp
lock
xlat
stc
cmp
mov
loop
in
lret
aad
call
lds
repz
loope
aas
std
ret
sar
int
xlat
flds
mov
div
enter
idivl
lret
rcr
lock
jmp
lret
mov
jmp
aam
out
repz
cmc
lret
fcmovbe
aam
out
aad
shl
add
aas
mul
lret
nop
or
aam
into
fsub
leave
fidivs
fadd
in
cli
lds
xor
call
nop
sub
ret
int3
out
idiv
cmp
stc
cmp
out
call
out
icebp
in
repnz
shl
loop
lret
cmp
int3
repz
ret
shr
in
fiadds
stc
mov
ljmp
out
iret
repz
sarb
ds
addb
addl
fucomi
fdivrs
call
ror
clc
std
jecxz
in
dec
clc
loope
lret
sbb
shl
sub
aaa
fdivp
rcl
cli
ds
push
shl
jecxz
inc
in
mov
jmp
int
out
aad
das
int
idiv
sarl
in
repnz
test
out
ret
test
call
enter
xchg
iret
aad
cmp
in
fadd
sarl
sar
stc
rcl
add
mov
orb
out
idivl
fnstenv
into
les
enter
add
ret
xlat
fmul
fmul
rcr
test
fistpll
lods
rolb
jle
add
cmp
leave
lret
orb
repz
ss
aaa
fidivs
cmp
aad
std
neg
aam
ds
mov
std
loopne
out
call
jecxz
loope
in
cmp
cmp
int3
ljmp
enter
vpaddsb
lret
xchg
aad
in
ror
cmp
lret
in
cmp
fdivp
out
xchg
loope
test
fcmovb
mov
jmp
repnz
sub
fmulp
int3
idivl
adc
sar
faddl
stc
cld
rcr
loopne
rol
aam
xor
repz
fnstsw
fcomi
cmp
iret
fscale
cmp
jecxz
loope
ljmp
call
in
leave
hlt
cld
fsub
lret
cmp
call
sti
cmp
lret
mov
into
nop
lock
lret
mov
aam
lret
imul
rcl
faddp
rcl
xor
repz
test
in
xchg
loopne
repz
jmp
hlt
icebp
cmp
shr
fsubrp
out
in
loopne
ret
std
ret
jecxz
lock
rorl
call
shlb
aam
into
fidivrl
xlat
aam
leave
fsubp
movl
xor
cmp
aad
out
xor
in
fdiv
in
rol
ret
fadd
loopne
enter
ficoms
out
in
aad
fucomp
aad
jmp
ret
sar
cli
aad
fndisi(8087
mov
mov
mov
lock
call
xlat
faddl
mov
ret
lea
repnz
in
sub
out
fucompp
cmp
fnsave
add
aaa
std
sar
shl
shl
fsubr
leave
add
mov
into
nop
leave
jmp
aaa
xor
clc
out
cld
loopne
aas
cmp
stc
in
loop
mov
fdivr
mov
leave
rol
xor
cld
jmp
repnz
lock
ret
xlat
jmp
or
test
out
ret
shl
std
cmp
fadd
fistpll
sti
ds
roll
sti
loop
mov
mov
loope
call
shl
ds
fdiv
cmp
aad
testl
repnz
iret
xor
into
iret
jmp
add
mov
jmp
rcl
leave
int3
leave
fldt
mov
add
add
out
neg
into
mov
call
mov
in
or
lock
sti
out
aam
leave
std
lock
loop
mov
xchg
fcos
in
leave
lret
out
ljmp
fst
call
lock
aam
and
or
out
mov
fdivrp
jmp
xor
repz
jecxz
std
rol
jmp
fdivr
cmp
call
loop
aaa
aaa
int3
cmp
xlat
iret
loope
cmp
fsubp
in
lret
jmp
in
cld
int
mov
cmp
repnz
xor
rcl
cld
out
mov
jmp
out
hlt
out
leave
ss
into
std
repnz
out
call
xor
loop
inc
out
jmp
fadds
mov
in
mul
into
lret
shl
cmp
lret
rcr
out
fimuls
enter
shr
in
loopne
hlt
ss
lret
out
std
or
faddp
fiaddl
in
out
in
loope
test
xchg
fucomip
aaa
ret
int3
cmp
fcomi
cmp
cmp
adc
mov
mov
cld
ror
jmp
xlat
icebp
idiv
aad
cmp
out
sti
jmp
out
add
jecxz
int
loope
call
in
stc
loop
div
cli
rcl
jmp
int
into
int
jecxz
icebp
xlat
sbb
xchg
into
std
in
xchg
xor
xor
in
in
fcmovu
loop
enter
imul
xchg
shl
mov
hlt
xchg
test
shl
in
ljmp
cmp
xlat
ret
ror
fiaddl
lret
lock
out
cs
ljmp
idiv
ds
mul
lds
cli
loope
jmp
cmc
iret
lret
das
std
into
in
cmp
iret
cmpb
into
clc
mov
xchg
jmp
icebp
jecxz
lret
fdivrs
xor
mul
cmp
fcomip
fidivrs
loopne
shl
sti
idivl
vpsubsb
out
mov
shr
lret
fyl2x
fucomi
iret
out
into
out
in
cmp
sub
fmul
sti
lret
int3
int
call
in
mov
mov
mov
jmp
lret
ror
fstp
ffree
pop
fiadds
ja
aad
jle
add
cmc
cld
leave
ror
jmp
rcl
fld
fdivrp
mov
fucomip
out
xor
cs
jmp
lock
cld
cmc
rol
in
mov
test
lret
mov
out
lock
shl
lret
loopne
cmp
in
in
aam
lds
vpor
mov
test
out
int
shl
lds
icebp
xor
faddp
shl
movl
cli
filds
into
into
out
out
cmp
leave
in
cmpb
xlat
out
xlat
stc
jmp
in
in
shl
fstpt
cmp
cmp
lret
clc
test
cmp
xor
enter
fmull
in
ror
cmp
aad
shl
int3
loope
out
iret
shl
hlt
jmp
icebp
out
out
loopne
test
in
cmp
hlt
repz
test
rol
not
faddp
xchg
fcmovnbe
test
fdivr
test
icebp
xchg
in
in
xor
in
iret
sar
in
iret
jmp
les
int3
sub
out
std
loop
shl
sar
repz
cmp
sti
aas
cmp
cli
and
xchg
call
iret
jmp
fbstp
sub
xlat
cmp
ds
into
stc
out
int
fcmovnu
hlt
rorl
lret
test
in
aam
xor
out
jmp
ror
aam
loop
cmc
hlt
std
call
fimull
int
idivl
mov
aad
cmc
clc
call
aam
clc
rcl
test
in
int
mov
repz
in
loope
icebp
out
cmp
fucomp
ss
rcl
hlt
in
mov
mov
lea
icebp
loop
fcmovu
shr
dec
aas
aad
fsubrp
flds
mov
xlat
fimuls
cmc
in
divb
shll
clc
jmp
sarb
fstp
xlat
dec
orb
int
rcr
aaa
enter
fdiv
int
out
repnz
ret
call
lret
loop
call
int
idiv
aad
aad
icebp
cmp
cmp
xlat
jecxz
call
out
jecxz
in
repnz
jmp
enter
int3
aam
pop
adc
in
sbb
mov
xlat
add
add
in
lret
fldl
cmp
aam
stc
aam
iret
call
not
std
aam
std
loope
mov
xchg
xchg
loopne
and
rcl
fidivrl
ror
clc
fdivp
ret
rol
ljmp
jmp
lock
out
int3
xchg
aaa
aad
into
lret
leave
std
fsubr
icebp
repnz
loopne
leave
mov
in
call
loope
ss
out
stc
aad
leave
jmp
roll
in
out
inc
xchg
repnz
cmp
xor
cmp
call
loope
rolb
loope
and
enter
jmp
cmc
lds
out
aam
fucomip
jmp
fmulp
testb
add
fisttps
roll
fmul
int3
in
jmp
repz
rcr
cmc
ret
in
lea
out
xchg
shl
fsubr
std
std
cmp
fcom
div
aad
cmc
enter
int3
out
xchg
shr
mov
ret
loope
ljmp
lret
sti
ds
add
call
xchg
mov
les
fdivr
fdiv
cmp
out
hlt
in
repz
ret
fsubrp
orb
lret
repnz
xor
hlt
fiaddl
into
and
repz
jecxz
jecxz
fisttpl
rol
lret
flds
into
out
loope
ljmp
int
int
sub
in
ret
sub
int
inc
aaa
neg
ffree
in
aad
mul
stc
int3
fstp
mov
call
fdivr
aam
sarl
cmp
fdivr
cmc
aas
jmp
std
out
xchg
mov
xchg
rcl
fdiv
int3
divb
fdiv
clc
int
in
aad
bnd
cli
in
iret
fucomip
xchg
in
jmp
jecxz
lret
out
leave
fstp
hlt
sti
repnz
in
adc
ffreep
cli
neg
sbb
enter
into
leave
clc
call
ror
loop
test
test
testb
call
mov
in
loopne
out
enter
fxch
sbb
fyl2x
fdivr
repz
push
add
add
lret
int
jp
fimuls
xchg
flds
jle
add
ret
into
mov
enter
sub
loope
fcmovbe
jmp
adc
hlt
roll
test
ljmp
in
divb
cs
cmp
test
fdivrs
enter
out
int3
test
in
mov
xchg
cmc
mul
ret
lock
loopne
ss
ret
and
out
rorl
xlat
int
cmp
std
hlt
idiv
loope
aad
stc
fxch
loope
loop
loopne
in
xchg
xchg
xor
xor
ror
cli
in
fiadds
ret
cli
cmp
xchg
in
jmp
lock
in
xor
out
out
std
into
in
cmpl
in
enter
xchg
mov
mov
test
aam
cli
cmp
loop,pt
lock
loop
iret
ret
std
movb
mov
fdivp
shl
cli
das
cmp
in
fdivp
hlt
fcomip
rcr
lds
icebp
in
in
xchg
in
out
jecxz
in
stc
out
cmp
std
fnsetpm(287
cmp
stc
out
ret
jmp
neg
lock
clc
aad
xor
stc
leave
adc
lock
std
ret
repnz
aad
in
jecxz
shl
lock
xor
int3
xor
int
out
ss
hlt
xlat
icebp
test
jecxz
mov
mov
ljmp
aam
cmp
aam
sti
stc
cli
add
stc
iret
out
repz
ss
repz
fcmovbe
sti
aad
sti
fcom
rolb
stc
leave
dec
lock
hlt
aam
int3
xor
jmp
in
in
cmp
jmp
cmp
fiadds
addb
rorl
icebp
sti
cld
cmp
cli
ds
icebp
out
test
cli
out
and
fildl
into
cmp
into
xor
cmp
stc
std
ds
test
mov
lret
jmp
test
lret
into
fdivl
loopne
cmp
out
xlat
out
neg
testb
mov
mov
out
stc
iret
fdivs
hlt
cmp
ds
fstpt
lock
xor
mov
add
jmp
aas
push
mov
adc
fisubrs
cli
dec
fildl
jle
add
loop
mov
hlt
in
test
enter
call
leave
cmp
neg
fdiv
cmp
ss
fdiv
ret
aad
test
sbb
jmp
int
xor
call
out
cmp
repnz
shl
std
rcr
fiaddl
or
ljmp
in
cmp
jmp
test
shl
in
lds
aam
in
div
out
cld
xlat
cmp
fdivr
loop
jecxz
fldlg2
ffreep
fxch
fimuls
bnd
jmp
cmc
xor
sar
xlat
call
out
mov
mov
mov
lret
sarl
cmc
aad
cli
loope
xor
cmp
testb
xlat
cli
mov
loope
int
rol
clc
in
in
cmp
int
clc
incl
sti
sbb
in
call
call
idivl
ljmp
sar
out
hlt
cmc
in
in
xchg
rcr
filds
ljmp
shl
aad
ret
lock
testb
stc
ljmp
xor
jmp
cmp
out
jecxz
aas
call
jmp
jmp
imul
cmp
hlt
cld
cmp
aas
rol
cmp
clc
in
jecxz
jmp
ljmp
nop
in
rcr
divl
call
cmp
in
push
icebp
jmp
std
testb
xchg
fcomip
cs
stc
cmp
aaa
lret
neg
sarb
repz
cmp
ljmp
ss
in
ds
addb
cmp
fsubr
addl
jmp
aad
lock
in
clc
cli
cmp
repnz
std
xor
leave
movb
repnz
lret
repnz
clc
cmp
cld
shl
fiadds
cmp
and
div
into
ret
fcomi
cld
shl
fnstcw
ret
xlat
test
fcomip
inc
fdivr
dec
loope
lret
icebp
push
ret
in
iret
cmp
testl
enter
lret
jno
sbb
jno
sub
cmp
jle
cmp
aad
xlat
fsubp
ffree
dec
int
lret
adcb
sar
aaa
test
loope
loop
repnz
out
mov
fnstsw
loope
out
xor
dec
sti
ret
int
ret
call
mov
cld
orb
cmp
hlt
lret
ds
out
test
out
iret
test
lret
ss
icebp
cmp
fyl2x
out
shl
out
adc
incb
mov
out
in
sub
shr
aaa
fcmovnu
cld
ds
div
out
fcomi
in
clc
jmp
nop
nop
out
mov
loopne
sub
cmp
fcomip
shl
fdivr
not
shl
repz
shl
in
lret
out
rolb
jmp
not
lock
loope
fchs
not
in
in
int3
in
out
int3
shl
xor
not
sti
iret
ror
repz
roll
mov
lret
test
std
xchg
repz
cmp
cmp
in
std
sti
cld
cmp
stc
aas
loop
rorl
mov
rcl
into
aad
cmp
and
in
div
div
cmc
loop
xchg
test
cmp
repnz
call
rcr
xor
out
fcomip
cld
dec
test
cmp
mov
int3
in
cli
into
ficoms
idivb
lret
aad
in
repnz
in
ds
cmc
xchg
sbb
lret
leave
int3
rorb
cmp
ljmp
cli
cmc
sti
ds
sbb
ljmp
in
ss
fldlg2
in
out
ss
cmp
loopne
fdivr
fsub
test
cli
std
cmc
in
xchg
xor
hlt
vpxor
cmp
xlat
in
jecxz
idiv
in
mov
xlat
testl
xor
iret
in
fldt
sti
sbb
aad
test
cld
std
hlt
in
loope
loope
sub
fadd
jecxz
cld
mul
into
idiv
roll
in
loopne
mov
std
test
xor
jmp
int
rol
fcmovu
fstps
outsl
inc
mov
popf
or
loopne
jle
add
lret
lret
sarb
fyl2x
in
rcl
clc
xchg
cmp
fxch
cli
leave
fcmove
fiadds
aam
cmp
repz
sar
fcmovne
rcr
ror
icebp
cld
cli
mov
fmull
divl
divl
fcmovne
jmp
sarb
in
aad
call
cli
out
out
fcmovb
xchg
loopne
xchg
jmp
imul
hlt
aaa
iret
aam
stc
or
cmp
out
stc
std
ljmp
out
lea
in
out
xor
xlat
lock
cmp
cmp
rolb
out
cli
fld
les
in
loope
cmp
ds
cli
cmc
fcmovnbe
add
in
fucomp
int3
in
loope
icebp
lock
cmp
shlb
ror
cmp
stc
aam
mov
enter
rol
adc
aam
repnz
cmp
sar
call
mul
mov
shl
ror
call
xor
xchg
cmp
in
xlat
mov
mov
hlt
out
out
cld
lret
cmp
fistpll
repz
idiv
mov
fcomi
fdiv
orl
hlt
aas
in
cmc
ror
in
sar
cld
sti
fcomip
shl
aam
cli
fcmove
test
std
aam
iret
shl
jecxz
ljmp
stc
orl
mov
jmp
loop
out
ss
leave
fcmove
ds
fucomp
cmp
ret
in
jmp
int
iret
jmp
icebp
aam
cmp
aam
sar
divb
cmp
lret
fsts
xchg
ss
aad
ljmp
icebp
fdiv
stc
rol
aas
std
fcomi
aad
mov
out
orl
iret
cmp
in
stc
cld
ds
out
xchg
mov
les
mov
adcl
shr
faddl
loope
sub
popl
out
aad
lds
in
lock
cmp
out
hlt
cmc
cmp
icebp
repnz
out
loope
rorl
xchg
jb
add
fmull
call
rorl
add
call
add
ret
rcl
fcmovbe
lret
shll
in
push
xchg
cmpsl
add
cld
loop
jle
add
int3
repnz
hlt
int
sar
xlat
cmp
out
sti
fldl
mov
cmc
int3
aaa
shl
rcr
ror
repz
cli
clc
lret
lock
test
xchg
orl
std
iret
test
cmp
hlt
loopne
jmp
loopne
sti
ret
push
cli
fmul
sti
xlat
in
icebp
mov
xor
fdivs
rol
shl
loopne
enter
loopne
clc
loopne
test
xchg
imulb
cmp
aam
cmp
fsub
fiaddl
cli
ffree
lret
mov
loope
xchg
call
out
xor
cmp
aad
aad
aam
mov
xchg
dec
xor
in
cmp
ss
xor
xlat
stc
call
addb
call
lock
jmp
test
std
orl
loope
shl
sub
cmc
into
ds
repz
repz
lds
imul
leave
lea
in
fidivl
sti
out
cmp
lret
fadds
fcomp
test
ljmp
icebp
in
cmp
call
aam
enter
xlat
clc
in
mov
in
roll
vmovq
xor
test
aam
sti
out
out
loope
call
fadd
and
out
cmp
shr
cmp
lret
loopne
aas
fsubr
fcmovnb
int3
loope
and
mov
fucom
aam
lds
std
jmp
repz
cmp
shr
into
ret
repz
lret
loop
addl
in
in
out
cmc
cld
fcmovbe
icebp
cmp
fildl
fldl
divl
repnz
icebp
out
xor
shr
sarb
decl
mov
in
addl
hlt
xor
cmp
in
stc
sar
cli
in
cmc
out
loope
leave
xchg
icebp
int3
mov
cmp
into
aam
push
fndisi(8087
lock
loopne
icebp
push
loope
call
jmp
mov
aam
fstp
fcoml
push
and
in
jle
add
out
int3
leave
fcomip
aam
in
jmp
ljmp
fdivr
lock
clc
aam
loopne
rcr
ds
lock
out
out
loop
aaa
repz
aas
std
in
mul
xlat
std
xchg
ret
aas
filds
loopne
iret
imul
rcl
stc
enter
shr
int3
rcr
hlt
fisttpll
xlat
push
cli
loopne
iret
out
aaa
in
xor
xor
out
fdivrl
sbb
std
rcl
or
sti
int
test
hlt
out
xchg
jecxz
xlat
xor
std
xlat
leave
into
imul
faddl
fucomi
in
clc
mov
mov
in
mov
fldcw
in
fcmovnb
aam
out
int3
sar
fxch
rcr
addl
mov
into
aad
fdecstp
aam
pushl
iret
icebp
into
rol
fdivr
cmp
enter
rorb
adcb
xor
aam
test
cmp
aas
fdivp
orl
mov
out
ret
std
cmp
out
sar
int
idiv
call
in
lret
mov
lds
ss
xlat
fdivs
ss
cmp
call
xchg
fmul
int
ljmp
in
ljmp
stc
test
cmp
enter
loope
test
shr
loope
cmc
jmp
in
clc
out
repz
cmp
std
cld
clc
cmp
fsincos
int3
out
enter
jmp
cmp
xor
out
sarb
or
rcl
aas
test
lea
fmul
xchg
loopne
xor
repnz
aam
call
into
ret
in
fiaddl
lret
mov
nop
sub
lret
out
std
xlat
addl
loope
std
loopne
lock
shl
roll
jmp
sti
cmp
ret
lock
loope
rorl
into
sar
ror
sub
div
cld
std
dec
lret
test
out
ret
in
lret
xor
out
iret
xchg
jmp
into
cmp
xlat
call
incl
sti
xor
add
jmp
ret
enter
int3
or
test
jo
add
add
loopne
jmp
in
repnz
enter
xor
cmp
cmp
div
loop
aad
hlt
ds
mov
xchg
jmp
in
imull
fcmovbe
cmp
sub
aas
call
ret
in
les
into
fld1
leave
int
cli
iret
fistpll
out
ret
fdivrs
sar
std
xlat
test
mov
lret
ret
cmp
iret
cmp
fiadds
roll
lret
frndint
mov
int
shr
idiv
out
ss
enter
xlat
repnz
test
fcom
xchg
fsubrp
int3
std
test
int3
test
in
into
xor
pushl
fidivrs
cmp
stc
hlt
clc
jecxz
mov
int
rcl
repnz
das
divb
cmp
aas
not
cmc
sti
fcom
out
not
loope
fdiv
fmul
call
test
loope
ror
int
in
std
cmp
out
shr
aas
sar
std
out
mov
loop
test
mov
loop
ret
xlat
xor
imul
out
test
repz
cmp
aad
fdivr
fsubr
cli
in
jmp
xchg
out
lret
aaa
bnd
lret
out
loop
int
cmp
test
call
ficoms
xlat
int
fcmovne
loopne
ret
test
sti
fucom
flds
fstl
aad
fidivrl
neg
iret
into
faddl
jmp
xchg
rorb
divl
clc
stc
fcmovbe
lret
out
fmulp
inc
les
cli
xchg
mov
iret
mov
hlt
in
xchg
hlt
icebp
out
xor
int
cmp
int3
out
out
xchg
ret
sti
rcr
std
cmp
inc
jmp
repz
sub
sub
jmp
repz
aam
fsub
cli
fdiv
leave
mov
enter
shr
das
repnz
mul
out
neg
in
hlt
rcl
loope
in
sti
fimuls
cmp
in
int3
loopne
repnz
cld
aad
into
incb
loopne,pt
test
fmul
notl
in
shr
sar
xor
xlat
enter
lret
iret
in
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
jmp
rcl
ret
int
fstp
fnsave
mov
xchg
mov
jle
add
aas
cmp
roll
mov
loop
repz
push
leave
xor
in
rcl
ror
sub
sar
cli
xlat
call
out
icebp
lret
in
out
aam
shl
sar
shl
aad
aam
loopne
loopne
out
jmp
mov
mov
repz
repz
div
sti
mul
rol
enter
fsubr
fldl
shl
jecxz
into
xor
int3
stc
lret
out
std
cmp
mov
clc
nop
ljmp
out
not
out
icebp
in
out
jmp
ds
std
leave
out
int
jmp
lret
fxch
out
cmp
flds
fcomi
sarl
jmp
enter
jecxz
xchg
loop
ror
shr
aaa
rcr
enter
cmc
xlat
rcl
or
aas
fsub
nop
cld
out
xchg
jmp
aad
neg
jecxz
fcmovne
cmc
hlt
iret
cmc
fadd
cmp
fcmovnb
in
test
mov
in
out
xlat
lret
fcmovne
fcomi
cmp
cmc
vpavgb
mov
out
mov
mov
rolb
fcmovnbe
jmp
shl
int
jecxz
enter
out
sti
ljmp
xchg
enter
idiv
jmp
sarl
aad
fdivp
aad
std
call
orb
in
jmp
loop
rolb
incb
lret
or
xchg
shl
in
into
out
ds
clc
aam
sar
xchg
fcos
fcmovnu
testb
mov
ss
in
stc
hlt
cmp
ljmp
ljmp
jmp
repz
into
repz
xor
cmc
divl
fcomi
ds
testl
in
test
out
jmp
int
xchg
icebp
in
out
ret
clc
dec
aam
repz
jecxz
loop
mov
leave
les
nop
call
loop
sub
cmc
jmp
test
loope
test
sti
test
jmp
out
fdivr
fdivp
test
test
leave
call
inc
hlt
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
jmp
xlat
aas
lret
fcmovne
sbb
dec
mov
in
add
add
in
ror
loope
lret
loop
fcmovnbe
enter
clc
cld
xlat
loope
roll
mov
out
cmp
test
jecxz
xchg
stc
in
cmp
xchg
call
jmp
cmc
rcl
rcl
cmc
sub
xor
ret
fldz
fsubp
mov
in
into
rcr
into
out
shl
repnz
stc
ret
ds
test
shl
lret
into
fimull
rcl
icebp
into
aad
out
bnd
ds
rcr
std
into
ret
icebp
fdivp
in
out
ror
sbb
call
xor
xor
cs
lret
aad
adc
out
jecxz
fcompp
lret
shl
in
xchg
xor
neg
out
hlt
ss
repz
idiv
xchg
shl
out
mov
xchg
fiadds
clc
iret
iret
out
idiv
hlt
ror
out
cmp
rcr
fadd
ds
sbb
out
or
aad
lock
rcl
shl
cld
out
test
test
jecxz
jecxz
cmc
jmp
xchg
mov
icebp
test
hlt
out
cli
cmp
rol
jecxz
aas
stc
leave
in
orb
icebp
loopne
repz
enter
ss
iret
fidivrl
rcl
rcl
repz
filds
in
out
xchg
std
int
in
int3
mov
rcr
fiadds
mov
cld
cmc
lret
int
loop
jmp
leave
in
call
int
sar
iret
iret
aad
stc
ljmp
icebp
mov
lret
hlt
ljmp
int
stc
std
in
out
cmp
stc
aam
xchg
sti
mov
into
lret
subl
shl
xor
aad
stc
cmp
jmp
in
aam
call
neg
out
movl
rol
icebp
cld
out
lret
fnstenv
cmp
fneni(8087
clc
mov
fadd
nop
mov
loop
iret
out
xor
loope
xor
xor
shr
cmpb
test
shl
call
xchg
out
iret
ret
sar
repz
cmp
sti
aam
out
in
leave
loopne
in
lret
lret
out
fcmovnbe
out
pop
inc
xchg
sub
jmp
rcl
iret
aad
aad
pop
aaa
jp
lea
cmp
jle
lret
leave
aad
xlat
icebp
fptan
aaa
jmp
icebp
hlt
cmpb
ror
cld
enter
jmp
rcl
xor
into
leave
stc
aaa
stc
fdivrl
xor
fimull
lret
loope
xchg
mov
repz
leave
repnz
stc
cli
fxch
fmulp
bnd
enter
in
jecxz
std
in
xchg
jmp
div
aad
f2xm1
fcomip
cli
out
test
cmc
stc
lds
rcl
in
shl
in
int3
out
ljmp
in
cmp
cmp
cli
fsubrp
popl
ljmp
cmp
cmp
icebp
not
ffree
xchg
clc
std
int3
loop
test
jmp
clc
cmc
enter
repnz
test
fcmovnu
fsub
in
fcmovb
xor
mov
add
call
loop
shr
roll
ret
loope
xchg
int
test
xchg
jmp
lock
shr
out
std
sti
cmp
repnz
out
stc
test
roll
xor
cmp
ret
repnz
repz
aad
mov
rorb
iret
aad
loope
aad
lret
lret
fucomip
sti
out
roll
dec
vpaddd
fcomp
mov
loopne
or
leave
repnz
loope
fcom
xlat
std
decl
enter
xchg
lea
out
fdiv
repz
in
les
mov
orb
out
lock
clc
ret
ljmp
rol
in
fucomi
ret
or
xlat
out
int3
fcomi
in
xchg
in
jecxz
sub
aad
fst
hlt
std
aas
rcr
loopne
test
cld
test
rcl
ret
in
ljmp
fld
cmp
sar
jecxz
test
stc
std
iret
fiaddl
hlt
fdiv
shlb
int3
cmp
cmp
loopne
cmp
fnstcw
idivb
jmp
out
sbb
test
fxam
xor
in
int3
stc
cld
ffree
test
test
jmp
iret
rcl
fcomp
aad
mov
pop
ficomps
add
add
fsubrp
in
and
loopne
out
jecxz
cmp
repz
out
sti
cli
test
std
and
out
lret
fsubr
loop
sub
int
out
cmp
fsubrp
fdivrl
xlat
out
aas
xor
in
out
mov
in
loope
cmp
sti
xor
std
ds
cmp
loope
cli
aam
addl
add
icebp
xor
sarl
neg
cmp
mul
iret
out
jmp
add
test
leave
fildl
repz
xor
repz
sti
int3
iret
hlt
call
aam
aam
test
stc
ljmp
shlb
aaa
repnz
iret
ds
lock
filds
out
iret
enter
repz
out
fstpt
int3
fdivr
aaa
sar
rcl
leave
call
xchg
call
loopne
cmp
out
aad
fsubrp
fdivr
fucomi
out
adcb
icebp
lret
jmp
lret
fmulp
flds
test
mov
jecxz
xchg
in
enter
icebp
into
in
stc
aas
cmp
lock
rcl
ljmp
enter
movb
jmp
iret
leave
sar
std
and
call
xlat
fxch
out
repnz
cmp
cli
fcmovbe
int
and
cmp
ret
mov
out
loope
loopne
adc
fdivr
ror
ljmp
cli
ret
sti
fimull
mov
in
out
aad
fxch
neg
xor
enter
rcl
test
addb
cld
in
aam
rol
aaa
in
fnstsw
cmp
cmp
or
fstp
ret
in
fmulp
repnz
cld
mov
leave
in
fsubr
int
loope
cmp
sbb
fdivrp
ljmp
iret
xchg
fmul
jmp
cmp
lret
jecxz
loop
loope
aam
ds
cld
jmp
out
nop
xlat
rcl
in
cmp
clc
int3
fcomip
fdivr
ret
xchg
mov
imul
add
xchg
jmp
int
int
fstp
fst
das
dec
fwait
lahf
sub
rcr
adc
add
add
test
lret
xchg
xchg
xchg
dec
aam
das
cmp
fsub
idiv
fcmove
loop
cmp
repnz
in
testl
ret
cli
cli
call
dec
shl
loope
in
mov
ljmp
fimuls
clc
xor
shl
aam
aaa
cmp
sarl
jecxz
ret
aam
in
fxch
loope
adcl
stc
clc
shlb
int3
iret
fptan
add
shr
lret
sti
int3
mov
fsubrp
loopne
mov
sti
into
out
rcl
std
lret
cmp
rcr
aad
mov
loope
fsubrp
mov
out
mov
cmc
ss
jmp
int3
in
icebp
fcmove
into
incb
enter
fmull
in
xchg
sar
shr
aam
xlat
jmp
rcr
shl
les
in
in
rcll
aad
call
fadds
shl
fcmove
in
lret
out
ljmp
mul
loopne
sar
cmp
out
icebp
test
movb
int
lret
ljmp
cmp
rolb
xlat
jecxz
fdivr
adc
lock
imul
out
cmp
cmp
clc
sti
in
loope
cmp
out
addl
fxch
in
iret
leave
cmp
xor
aas
aas
loopne
fcmovne
mov
cli
orb
cmc
int
repz
hlt
int3
cld
stc
xor
rcr
mov
in
call
xchg
int3
std
xchg
sub
call
cmc
lock
cmp
out
clc
ljmp
mov
decl
repnz
xor
cmp
fdivrs
icebp
test
cmc
cld
sti
loopne
movl
int3
mov
in
aad
fucomip
aas
int3
sarl
aam
test
sar
mov
xor
std
int
out
repz
aam
add
jmp
in
lret
in
das
ret
ret
ss
call
in
push
xor
mov
dec
inc
add
dec
jmp
int
ret
lret
aad
int
jmp
fs
outsb
int3
hlt
add
add
rol
call
vpmulhuw
out
sbb
loopne
iret
cs
lock
jmp
sbb
neg
xlat
xchg
stc
stc
xchg
cmc
mov
jecxz,pn
out
jmp
out
iret
sti
loope
and
rcl
in
call
fadds
in
in
cmc
cmp
repnz
int3
into
lock
mov
loop
mov
int
test
xor
cs
cmp
in
cmc
hlt
in
fsub
call
leave
sti
orl
std
cmp
or
sbb
leave
mov
jmp
xchg
ret
icebp
sti
cmp
out
int3
out
cmp
sti
aam
roll
test
int
lret
mov
repz
rol
sub
cmp
jmp
call
ljmp
aad
sub
lret
cmp
fisttpll
xor
rcr
fmul
aad
cmc
hlt
hlt
xlat
rcr
idiv
idiv
in
clc
enter
xchg
xchg
fptan
sti
cmp
repnz
lret
test
loop
loope
add
out
repz
idiv
jmp
ror
in
loopne
xor
roll
in
out
mov
ret
call
shl
in
cmp
enter
fcmovnu
int3
test
xchg
ficoms
repz
rcr
cmp
fcomip
in
iret
rol
fucom
repz
mov
enter
mov
int
test
aad
fxch
sti
ret
loopne
call
ljmp
rorl
sub
imul
xor
repz
fsubr
jecxz
loope
test
out
call
test
not
ss
xor
fmul
cmp
xlat
fsub
test
out
test
into
jmp
fstp
out
xor
xor
in
ljmp
and
aas
fadds
test
fildl
jecxz
test
sarb
shll
fsubrp
out
rcl
hlt
aas
aas
cmp
shl
call
lret
leave
shr
orb
out
out
shll
rolb
pop
hlt
pop
mov
pop
pop
pop
leave
ret
