push
mov
sub
xorl
push
movzwl
sub
mov
push
push
andl
call
test
movl
je
adcl
xor
jmp
push
push
xor
andl
inc
push
push
call
xorl
test
movl
je
xor
movl
jmp
sbbl
push
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
push
subl
push
movl
push
call
andl
test
jne
push
push
adcl
call
test
movl
jne
push
push
call
xorl
test
jne
addl
push
andl
push
addl
call
test
movl
jne
push
xorl
push
push
subl
call
notl
test
movl
jne
push
push
adcl
push
call
test
jne
xorl
push
andl
push
subl
call
subl
test
jne
push
push
andl
call
test
movl
jne
andl
push
sbbl
push
addl
call
test
movl
jne
push
andl
push
push
call
orl
test
jne
addl
push
andl
push
push
andl
call
xorl
test
jne
push
push
xorl
call
movl
test
movl
jne
subl
push
xorl
push
andl
call
test
movl
jne
subl
push
adcl
push
xorl
call
test
movl
jne
push
xorl
push
push
decl
call
test
movl
jne
push
push
adcl
push
sbbl
call
xorl
test
movl
jne
push
orl
push
call
test
movl
jne
andl
push
push
addl
call
adcl
test
jne
push
push
orl
call
test
jne
push
push
addl
push
call
subl
test
movl
jne
push
addl
push
push
xorl
call
movl
test
jne
push
push
call
andl
test
movl
jne
orl
push
push
negl
call
orl
test
movl
jne
subl
push
push
call
test
jne
xorl
push
push
sbbl
push
adcl
call
xorl
test
movl
jne
sbbl
push
push
xorl
push
addl
call
sbbl
test
jne
orl
push
push
adcl
call
test
jne
sbbl
push
adcl
push
xorl
call
test
movl
jne
addl
push
subl
push
xorl
call
addl
test
jne
xorl
push
notl
push
andl
push
call
test
jne
push
push
push
xorl
call
sbbl
test
movl
jne
movl
push
addl
push
call
test
jne
andl
push
xorl
push
call
subl
test
movl
jne
push
push
call
orl
test
jne
subl
push
adcl
push
push
andl
call
addl
test
movl
jne
addl
push
push
adcl
push
call
adcl
test
movl
jne
subl
push
push
subl
call
subl
test
movl
jne
adcl
push
adcl
push
call
orl
test
jne
subl
push
push
call
orl
test
movl
jne
push
push
push
orl
call
test
jne
push
movl
push
movl
push
call
test
movl
jne
movl
push
xorl
push
call
test
movl
jne
push
subl
push
subl
call
addl
test
movl
jne
subl
push
push
call
subl
test
movl
jne
sbbl
push
adcl
push
adcl
push
xorl
call
andl
test
jne
movl
push
xorl
push
xorl
push
andl
call
adcl
test
movl
jne
subl
push
addl
push
subl
call
xorl
test
jne
addl
push
push
adcl
call
test
jne
push
addl
push
call
orl
test
movl
jne
subl
push
push
andl
push
xorl
call
adcl
test
movl
jne
push
movl
push
push
call
addl
test
movl
jne
movl
push
subl
push
call
test
movl
jne
push
push
call
addl
test
jne
addl
push
subl
push
call
test
movl
jne
sbbl
push
xorl
push
addl
push
addl
call
movl
test
movl
jne
andl
push
push
push
call
sbbl
test
movl
jne
xorl
push
adcl
push
adcl
call
addl
test
movl
jne
adcl
push
adcl
push
call
test
movl
jne
adcl
push
xorl
push
subl
call
xorl
test
jne
push
adcl
push
push
andl
call
andl
test
jne
push
push
subl
push
call
test
jne
push
push
sbbl
call
test
movl
jne
subl
push
push
call
test
movl
jne
adcl
push
subl
push
andl
call
test
movl
jne
andl
push
orl
push
orl
push
adcl
call
andl
test
jne
orl
push
push
push
call
sbbl
test
movl
jne
sbbl
push
push
call
sbbl
test
movl
jne
sbbl
push
orl
push
call
test
movl
je
subl
xor
movl
jmp
or
movl
movzbl
add
mov
dec
mov
mov
mov
mov
sub
imul
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
sbbl
lea
mov
mov
and
mov
lea
mov
subl
mov
mov
orl
mov
mov
mov
adc
xor
mov
add
movl
mov
mov
mov
cmp
jne
xor
mov
mov
orl
mov
or
xor
and
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
sub
mov
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
xor
xor
add
mov
sub
mov
mov
sbb
mov
mov
orl
mov
mov
decl
mov
subl
mov
andl
mov
mov
addl
movl
adcl
mov
andl
xor
add
movl
jmp
add
mov
adcl
mov
xor
subl
lea
push
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
sub
mov
adcl
xor
lea
push
addl
mov
pushl
xorl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
xor
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
andl
mov
xor
mov
addl
xor
xor
andl
add
mov
negl
xor
lea
movl
mov
movl
cmp
movl
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
adcl
inc
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
movzwl
xor
mov
mov
sbb
push
mov
sbb
mov
mov
mov
add
xor
add
mov
subl
push
mov
add
movl
cmp
movl
je
inc
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
sbb
mov
xorl
xor
xorl
xor
addl
add
add
movl
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
jmp
jmp
iret
push
jae
lret
xchg
mov
xlat
pushf
aam
jp
jp
pop
jp
adc
and
imul
xor
fsub
push
dec
imul
pusha
insl
pop
iret
pop
dec
and
jg
jo
jg
mov
fdivr
push
jg
in
cmp
mov
mov
mulps
fldl
push
cli
sbb
imul
adc
cmpsb
jmp
enter
cli
js
arpl
cwtl
pop
mov
repz
cmp
jae
fisubrl
push
jecxz
mov
mov
in
push
dec
or
repz
rolb
push
push
movsl
stc
push
lods
div
out
mov
dec
loope
in
ds
je
jo
mov
test
and
or
dec
test
inc
adc
movsl
pop
cmp
cmp
stos
rorl
hlt
xchg
cmpb
inc
or
cmp
sbb
xor
mov
pop
divb
mov
fbld
jno
out
mov
cmp
jecxz,pn
inc
in
mov
sub
popa
and
push
iret
gs
inc
roll
and
xor
mov
add
or
leave
movsl
sbb
frstor
jbe
mov
add
in
mov
adc
je
push
push
jg
xchg
bound
pop
cltd
dec
enter
popa
ret
sbb
ja
adc
sar
jmp
mov
movsb
cmp
das
or
pop
push
movsl
stc
dec
fiaddl
jg
leave
mov
in
icebp
mov
arpl
shlb
mov
pop
pusha
lock
test
movsl
int
scas
lret
push
fadd
fcmove
leave
std
pop
inc
sbb
xor
pop
push
sbb
into
lds
pop
outsb
testl
mov
je
mov
into
push
test
xchg
cs
addl
pop
cmpb
sarb
sbb
sbb
lret
push
lahf
addr16
mov
test
jmp
inc
sub
mov
fs
fsts
and
mov
sahf
rol
inc
stc
insb
roll
pop
call
loope
and
sahf
pop
mull
out
aam
scas
sbb
cmc
pop
xchg
sub
inc
ljmp
in
add
stc
add
in
pop
xor
stc
pop
and
pusha
test
adc
iret
mov
mov
pushf
ss
bound
mov
push
fsubr
fs
adc
mov
scas
leave
push
pmaxub
shl
mov
outsb
aam
and
int
lcall
outsb
insl
adc
push
decb
lds
fadds
fwait
out
repnz
stos
push
jbe
pop
jns
push
and
xchg
xlat
xchg
or
orl
fwait
movsl
sbb
mov
ret
or
addr16
push
lock
addb
aaa
dec
or
cs
stos
shll
ljmp
jge
push
or
mov
sahf
dec
sbb
inc
movsb
mov
into
daa
jp
sbb
daa
xchg
mov
idivl
aaa
sub
adc
repz
dec
imul
mov
aad
sub
jp
or
movsb
jp,pt
dec
mov
je
sub
fistps
inc
mov
xchg
inc
shlb
loopne
idivb
lcall
add
andl
add
push
push
or
lods
pop
sub
lods
jb
popa
out
jns
push
enter
fisubs
imul
dec
push
push
cmc
cmp
mov
cmp
xchg
pop
xchg
mov
add
mov
xlat
negl
enter
lods
mov
ljmp
push
stos
aad
aam
pop
fimuls
adc
pusha
xor
pop
inc
pop
pop
dec
clc
pop
and
push
fildll
mov
jae
jns
xor
and
mov
imull
scas
bnd
or
lods
push
adc
je
jnp
dec
adc
push
add
ljmp
push
push
jnp
mov
lahf
notl
loop
je
and
sub
std
or
mov
push
push
jae
sub
pop
cmpsl
call
jge
jmp
shrb
fstl
mov
int3
push
fs
mov
sub
outsl
add
test
sub
lds
jl
or
popf
arpl
inc
cmp
aas
inc
je
pop
xor
jmp
mov
cwtl
iret
cs
imul
fisubrl
and
in
push
mov
xor
fistl
insb
loop
out
fucomp
dec
popf
cltd
jecxz
xchg
stc
imul
xor
pop
cmp
and
dec
mov
mov
call
or
mov
test
insb
pop
roll
bound
mov
mov
cmc
sahf
cmp
rorb
pop
mov
js
add
lret
dec
cs
mov
sub
ret
mov
xor
pusha
jno
scas
movsl
pop
jle
shrb
inc
dec
popf
cmpsl
enter
lcall
push
mov
lret
jnp
add
movsb
aam
lods
scas
dec
ja
mov
imul
sbb
arpl
cmp
push
jle
fwait
iret
xchg
jnp
test
loop
loope
adc
xlat
fsubl
shll
lret
cs
rcll
mov
add
or
xchg
xchg
inc
not
in
cmp
xchg
dec
in
inc
les
in
in
enter
adc
push
sub
mov
enter
xchg
xor
in
sub
int3
out
out
mov
mov
movsl
jno
sahf
jb
xchg
or
loop
add
mov
cltd
arpl
mov
mov
pop
jno
pop
in
xchg
inc
into
jp
jle
add
rcll
jle
xor
aad
xchg
sti
inc
or
outsl
iret
and
out
in
inc
mov
cmpb
push
loop
lahf
xchg
pop
pop
sbb
into
or
xchg
inc
add
fidivrs
or
and
popa
iret
mov
cmp
adc
lea
jg
mov
sub
loopne
icebp
sbb
dec
push
xor
cmpsb
sbb
pop
sub
push
fwait
or
call
mov
inc
xor
out
mov
inc
push
or
cmc
mov
ja
fs
add
cs
jl
fsubr
add
dec
je
adc
fdivs
inc
arpl
xchg
xchg
pop
or
rolb
and
pop
imul
aas
in
mov
outsl
addb
xchg
insl
jns
mov
mov
mov
cmc
push
pusha
xor
in
xlat
xor
mov
pop
popf
out
clc
repz
jge
jae
sub
xlat
hlt
add
lods
or
flds
cmp
icebp
stos
iret
mov
testb
aas
dec
mov
add
and
dec
lods
xor
push
sub
lock
in
imul
inc
inc
pop
loope
test
lcall
dec
xlat
neg
hlt
or
cmp
add
addl
pop
ljmp
jns
pop
lcall
push
rorb
aaa
aaa
lret
add
mov
push
pop
jno
xchg
mov
jmp
push
and
cs
in
sbb
sub
popf
test
mov
and
jmp
dec
movzbl
lock
dec
cld
out
jns
scas
out
dec
and
mov
insb
pop
xchg
push
in
sahf
xchg
and
mov
rolb
cwtl
in
xor
std
mov
adc
mov
dec
and
jns
adc
xchg
adc
mov
mov
sahf
adc
test
pop
rsm
dec
cmc
lcall
jge
adc
mov
hlt
sahf
and
cs
icebp
out
jp
push
push
pop
shl
add
insl
cmp
aam
js
push
mov
sub
pop
fidivl
adc
repz
push
aam
imul
mov
mov
push
and
sub
add
dec
les
mov
mov
repz
js
and
or
insb
cmp
idivl
push
inc
sub
hlt
jp
jo
pop
push
sub
pop
mov
sti
lcall
and
leave
mov
data16
int
mov
mov
sbb
scas
stos
or
fxtract
and
and
mov
push
xor
bound
pusha
fstpt
xorb
xor
movsl
or
cs
pop
jbe
and
je
ljmp
addl
shrl
cmp
test
inc
inc
sbb
hlt
stos
lcall
mov
dec
jbe
inc
sbb
test
pop
xchg
jo
sub
or
mov
fisttpll
and
xor
inc
das
jge
lock
jb
add
stos
andl
cld
aam
push
outsb
fcoml
and
cld
loope
or
mov
hlt
xor
mov
sub
jo
mov
xchg
ds
cmp
and
push
imul
in
sub
inc
shlb
xor
cli
decl
push
lret
jno
clc
xlat
dec
fidivrl
cli
pop
push
bound
xchg
jle
movsl
mov
clc
ja
xor
xchg
jge
jb
ret
fisttps
out
or
dec
fmuls
jge
movsl
imul
pop
cmp
shll
lahf
adc
mov
push
rcll
cmp
out
push
js
call
xlat
pop
lret
mov
loop
sub
xor
adcb
test
gs
jo
std
ljmp
or
dec
int
add
icebp
mov
pop
iret
dec
jl
mov
jns
fidivs
mov
fists
pop
xchg
imul
cmc
sbb
daa
pop
jb
push
sbb
inc
out
sub
cltd
sarl
out
fisttpl
mov
sti
pop
aam
popf
sbb
or
and
ja
js
scas
add
inc
inc
lret
add
roll
pop
mov
loop
jno
movsb
iret
pusha
lods
jns
mov
pop
mov
bound
je
rorb
ds
mov
pusha
pop
call
mov
outsl
outsl
aas
cmp
xor
sbb
ljmp
sarl
push
pop
daa
fsubs
push
fwait
sub
sub
sahf
fcomi
call
xchg
popf
in
dec
fwait
loope
and
push
xchg
movsb
push
push
xchg
or
and
ret
popf
jp
mov
ljmp
add
fwait
lea
adc
adc
sub
icebp
out
pushf
stos
xorl
out
mov
pop
xchg
pop
cmp
xor
jne
sbb
mov
enter
mov
test
inc
mov
out
ficoml
fcomip
pusha
mov
mov
xchg
test
xchg
jb
lea
xlat
repz
repz
test
pop
stc
jo
push
lea
push
into
roll
push
or
js
mov
push
inc
xchg
aaa
xor
mov
js
push
xchg
stos
out
mov
in
addl
sub
jo
or
cmp
cli
pop
iret
push
mov
orb
in
pop
mov
adc
movb
pop
enter
outsl
ds
mov
cs
mov
adc
icebp
cli
or
or
dec
cmpb
hlt
loopne
std
cmc
roll
cli
mov
inc
fwait
popa
sbb
fisttps
hlt
inc
mov
mov
fnstcw
insb
xor
aaa
addb
icebp
add
rcr
in
in
xor
lret
mov
xor
push
pop
lea
push
ja
enter
mov
out
inc
sub
ret
in
gs
jge
aad
sub
mov
push
jb
inc
loop
push
adc
cmpsb
imul
popa
das
inc
add
iret
repnz
addr16
incb
ljmp
mov
push
jne
jl
jo
lods
fs
and
mov
and
lds
test
test
mov
add
adc
fs
test
inc
lcall
movsl
aas
push
lods
int
mov
mov
test
pop
idivb
add
mov
xor
idivl
push
jle
aas
jbe
mov
fadd
mov
in
mov
cltd
lret
bound
cmc
lods
sub
xor
int
and
cmp
fisttpl
loopne
and
jbe
enter
sbbb
lret
sub
pop
mov
bound
add
dec
mov
cmp
mov
inc
inc
xchg
hlt
fsubrs
jge
int3
insl
movsb
in
test
xor
and
sub
pushf
into
aaa
pop
insb
xchg
testl
sub
xor
push
or
stos
jmp
mov
addr16
sbb
test
aas
enter
pushf
scas
mov
into
jae
pop
jne
out
pop
xchg
call
pop
mov
add
mov
add
or
jo
lods
ja
xor
bound
fidivrs
jecxz
aam
pop
lahf
test
aam
pop
jle
inc
jbe
in
jmp
leave
or
sub
aaa
out
std
sub
xchg
pop
mov
insl
mov
repz
pop
jle
inc
or
shll
mov
sbb
in
mov
mov
and
fwait
pop
outsl
push
jle
pop
adc
cltd
pop
popa
ss
out
in
inc
jmp
fimuls
leave
mov
stos
add
cmpsb
vpsrad
inc
inc
adc
icebp
push
das
daa
push
scas
in
sub
push
pop
aaa
add
push
and
mov
cli
cwtl
jg
mov
cltd
sbb
cmp
movsb
ja
push
adc
aam
loope
push
xor
repnz
lret
gs
lret
jns
pop
jbe
and
or
cli
stos
pop
sbb
pop
xor
xchg
jecxz
test
push
insb
xchg
xchg
cmc
bound
movsl
inc
inc
cltd
test
mov
mov
or
pop
cmp
dec
or
cmc
mov
or
mov
inc
rorl
das
test
push
pop
iret
push
int
cld
xor
shll
mov
loopne
xchg
negb
loop
sbb
adcb
rolb
dec
add
add
push
pop
mov
mov
jno
orl
lods
leave
adc
jle
and
mov
shrl
sbb
sub
jo
inc
cmp
inc
pop
cld
or
jo
aad
xor
in
sbb
mov
arpl
out
mov
sub
pop
sub
mov
pop
cmp
add
aam
filds
mov
outsb
xchg
lahf
cs
icebp
test
movsb
cli
inc
into
mov
jbe
add
pop
pop
push
xchg
js
jno
or
jbe
cwtl
cwtl
mov
cs
lret
mov
loop
call
test
mov
inc
or
pop
test
loopne
repnz
mov
in
push
xchg
lock
mov
jb
mov
cwtl
movsl
iret
sar
mov
lods
ror
scas
aas
aad
dec
fadds
lret
lar
push
mov
movsb
mov
jmp
sub
mov
xor
dec
stc
sub
pop
pop
jge
retw
or
aad
dec
sbb
cmpsl
pop
int3
ljmp
xorb
addl
jnp
xor
push
repnz
xlat
push
call
pop
or
shlb
add
dec
jno
lret
and
shlb
pop
jae
or
pop
std
pop
sub
add
ja
std
hlt
fcomi
inc
and
mov
pop
dec
jne
ja
push
mov
pop
std
mov
mov
xchg
dec
xchg
or
ja
out
mov
pop
fadd
sub
div
mov
test
cmp
fsubrl
je
fwait
mov
jl
xor
mov
add
loope
test
sub
dec
xchg
xchg
sbb
into
js
fnclex
ljmp
jns
rolb
mov
mov
bound
cmpsb
add
out
int
mov
leave
sub
enter
inc
xlat
sahf
aad
testl
push
sub
cmp
loop
mov
xchg
push
aad
pop
xchg
inc
sub
cmp
inc
xlat
push
xchg
out
mov
and
imulb
xchg
push
fcmovnb
fld
sub
daa
push
out
cmpsl
js
rclb
pop
inc
clc
daa
movsb
xlat
fmull
test
adc
ret
lock
test
adc
inc
stc
lods
fildl
in
xor
xchg
jecxz
adcl
cmp
pop
fcmovbe
repz
xchg
sbb
inc
stos
inc
jb
pop
shl
negb
or
je
jmp
ret
aas
inc
and
imull
lea
in
push
sahf
jmp
mull
xor
sbb
mov
fdiv
sub
out
mov
jb
xchg
divl
les
jmp
popf
ret
int
bswap
imul
hlt
aas
sub
outsb
pop
pop
lea
in
inc
test
mov
loop
js
pop
scas
xor
xor
inc
dec
add
fwait
repz
movsb
mov
in
or
pop
ljmp
mov
fnstcw
lahf
filds
insl
sbb
or
fstpt
or
xlat
mov
mov
or
sub
and
mov
mov
es
outsl
imul
sub
aad
fadds
arpl
or
repz
lds
xchg
stc
lea
push
orb
imul
pop
xor
and
out
stc
jno
andb
fmull
andb
mov
cmp
add
cmp
inc
mov
imul
in
gs
ret
in
movsl
test
xchg
push
fstpt
mov
ljmp
rol
int
insb
int3
or
xor
aam
aad
push
notl
pop
mov
movsb
outsb
test
es
xor
pop
lahf
insb
test
jmp
out
add
push
mov
or
inc
loopne
iret
outsb
enter
jmp
pop
imul
call
xor
jle
jecxz
sub
ja
xchg
mov
pop
ljmp
sub
inc
ret
cs
mov
fsubrl
pop
push
jge
rcrb
mov
push
cmpsl
adc
sub
movsl
in
popf
test
aaa
xlat
iret
and
pop
sbb
mov
add
lock
cld
int
fidivrl
stos
inc
push
out
dec
fmull
aas
repnz
jge
dec
test
dec
ljmp
lods
into
dec
xchg
popl
dec
movsl
cmc
insl
int3
push
or
mov
test
movsb
add
pop
scas
cmp
pop
aas
std
idiv
js
stos
sub
cmp
out
sbb
decb
lcall
pop
xchg
cltd
jecxz
or
fwait
stos
shrb
mov
mov
mov
or
aad
addr16
jns
loop
test
fists
sbb
mov
cmp
xor
insb
inc
inc
int3
xor
xor
clc
xchg
xor
and
enter
mov
in
out
cvtpi2ps
hlt
in
jo
aam
fs
dec
pop
adc
adc
shlb
sub
lret
or
stos
adc
push
mov
xchg
ss
mov
jbe
int
fimull
sub
or
fisubs
call
sar
cli
addr16
adc
mov
mov
mov
pushf
ds
pop
and
sbb
jle
push
push
mov
fcoms
sti
outsl
in
ss
pop
push
pop
pop
dec
push
into
jecxz
repz
rorb
xlat
sub
aas
lahf
push
pop
ljmp
or
les
mov
mov
jge
lcall
or
jmp
les
mov
imul
jmp
popf
mov
xor
repz
dec
rorb
mov
mov
dec
mov
jge
shlb
ror
cmp
adc
lret
ds
mov
sbb
and
pop
and
mov
and
jno
fs
dec
jmp
push
repz
fs
inc
pusha
imul
ja
sarl
icebp
in
jbe
mov
xor
rcll
mov
mov
shlb
mov
pusha
push
scas
inc
icebp
inc
call
add
leave
fwait
cmp
xchg
xor
mov
cmpsb
ss
repnz
imul
test
imul
jns
orb
jecxz
lcall
xchg
adc
pop
pop
xor
add
xchg
div
jp
int
or
mov
pop
pushf
sbb
pop
je
mov
mull
cld
scas
insb
push
adc
mov
movsl
aam
add
pop
jno
popf
and
fidivl
xor
and
movsb
sub
push
pop
push
cmp
lret
enter
sti
fldenv
icebp
mov
aam
mov
sbb
sub
dec
or
jnp
bound
dec
ret
aad
sbbb
sti
push
xchg
arpl
push
outsl
dec
sub
daa
xor
lret
sub
push
mov
lret
dec
jmp
fimuls
or
fwait
hlt
mov
call
and
xchg
xor
mov
push
imul
nop
push
popa
and
fnstsw
pop
mov
ljmp
pop
xor
dec
dec
cs
je
data16
jecxz
popl
dec
sbbl
mov
dec
sti
mov
mov
sbb
adc
push
cmc
xor
xchg
lret
xor
lea
ret
inc
adc
xor
fcmovnb
jle
or
pop
pop
dec
mov
jge
and
loop
mov
xchg
fwait
ljmp
add
in
push
lcall
mov
aam
jg
mov
xchg
std
mov
jo
incl
adc
into
stos
adc
rcl
sbb
in
jae
push
dec
in
push
mov
mov
mov
imul
push
test
cmpsl
cmpsl
sbb
mov
call
lock
jns
int3
cmp
mov
push
lea
repnz
xchg
imul
es
mov
inc
jp
dec
adc
mov
inc
adc
insb
mov
neg
jg
fbld
push
mov
movsl
sub
mov
inc
jae
outsl
cmpsb
dec
enter
inc
push
adc
in
cmp
movsl
std
cld
pop
mov
in
or
dec
leave
inc
movsl
jo
sub
mov
mov
inc
or
cwtl
cmpl
ds
pmuludq
inc
cwtl
inc
divl
ja
rep
pop
testb
adc
inc
outsl
dec
xchg
movsl
insb
adc
jp
lods
push
fldcw
mov
xchg
dec
call
and
in
fiaddl
loop
adc
lea
or
mov
test
test
orb
cmp
adc
aad
decl
mov
movsl
js
imul
ret
xchg
out
pop
sahf
lret
outsl
adc
fcoms
sbb
jo
adc
rorb
or
repnz
xor
hlt
mov
pop
push
fucomip
cmc
adc
mov
sbb
jle
cmp
jns
sub
shlb
outsl
fisttpll
pop
pop
or
cmpsl
push
add
mov
mov
imulb
push
lods
stc
add
loopne
cmp
nop
mov
mov
jb
js
add
pop
or
dec
test
in
addb
add
inc
test
fdivrl
stos
or
jmp
outsl
pop
ficoms
or
adc
add
inc
dec
jg
rolb
cmpsb
loop
xchg
cwtl
dec
imul
cmp
jo
rcll
imul
mov
mov
lcall
jmp
pop
mov
add
sub
pop
pop
xchg
xor
xor
stc
or
cmc
pushf
add
sahf
pop
or
pop
rcl
outsb
mov
aaa
or
lea
sbb
out
mov
mov
sub
sub
xor
pop
ds
add
sub
insb
je
cmp
iret
mov
js
lret
xor
neg
ror
dec
mov
icebp
movsl
sbb
push
jmp
rcll
sub
push
inc
imul
imul
lcall
add
mov
pop
scas
int3
pop
pusha
jns
mov
mov
push
roll
rcrl
adc
and
sbb
or
data16
and
push
and
loopne
in
mov
into
cltd
mov
stos
mov
fnsave
filds
jg
cmc
add
out
sahf
add
jle
pop
subb
jl
fs
pop
jge
sbb
xor
xor
int3
sti
ret
pop
mov
cmp
push
cwtl
ljmp
fcmovb
jge
fsubs
jo
inc
mov
add
aas
push
movsl
lcall
push
clc
popf
inc
jecxz
xchg
fs
xchg
mov
push
lahf
dec
lahf
shl
dec
aas
leave
push
mov
loopne
xchg
hlt
pusha
xchg
mov
cmp
icebp
test
jo
xchg
push
mulb
dec
out
sub
aam
inc
jb
test
cmpsb
mov
mov
dec
jne
int
data16
rolb
rcll
dec
sbb
pop
pop
jbe
pop
dec
push
repz
fimull
sbb
xchg
fldcw
jl
pushf
pusha
add
xchg
adc
xchg
movsl
cld
mov
lea
mov
mov
xchg
aas
call
adc
daa
out
pop
mov
mov
jne
out
xorb
sahf
daa
push
mov
lds
pop
inc
mov
xlat
cmp
xchg
arpl
mov
rorb
stc
push
dec
lret
push
test
mov
push
push
mov
in
fsubrl
aaa
imul
es
pop
mov
mov
loop
or
gs
cmpsb
fimull
bound
mov
cwtl
jb
dec
push
jnp
mov
cmpsb
leave
iret
xlat
cmp
cli
xchg
mov
mov
test
dec
stos
int3
ret
dec
xchg
sbb
lods
loope
push
fisubrs
sbb
lock
push
fstpt
push
push
inc
mov
test
out
and
push
and
mulb
mov
mov
or
push
jecxz
addb
fwait
push
cltd
pop
pop
sarb
mov
pop
push
fs
sbb
jg
jbe
rcll
cmp
lcall
dec
hlt
cmc
push
ds
aad
test
cwtl
std
loop
push
rcr
jb
jle
dec
pop
stos
push
leave
cmpsb
cs
jmp
cmp
cs
stos
mov
cltd
lcall
in
mov
shrl
sub
clc
xchg
cs
xor
mov
imul
bound
pop
fisubrs
aas
sub
pushf
adc
int
xchg
sti
stos
fidivl
ljmp
add
and
lcall
movsl
mov
or
pop
mov
leave
xchg
jecxz
popf
and
imul
loop
mov
sub
je
repz
dec
inc
adc
rcll
imul
pop
fidivs
dec
dec
stc
das
fstpl
mov
jp
stc
adcl
dec
pop
ds
xchg
pop
in
jge
in
imul
adc
sub
mov
pop
stc
jb
mov
or
dec
and
notb
add
fsubl
dec
mov
sub
add
mov
push
clc
daa
dec
mov
or
mov
lock
fisttpl
repnz
outsb
lret
ret
dec
je
into
lcall
mov
andb
lods
imul
push
push
lock
mov
fsubrl
shlb
mov
cmp
jge
aaa
push
lret
dec
xor
popa
ss
aam
rcrl
in
mov
push
sbb
aas
inc
dec
push
cltd
xor
rolb
or
lret
xchg
fisubs
pop
insb
loope
jle
dec
outsl
cli
nop
mov
setl
sbb
add
fwait
data16
push
sbb
mov
jno
inc
pop
cld
aad
cmp
shlb
stos
cmp
push
and
out
bound
or
cltd
add
int3
mov
inc
push
lock
into
out
out
ja
movsb
and
push
xchg
pop
ljmp
fldl2e
mov
cmpsb
inc
pop
push
and
adcl
mov
mov
mov
jo
add
mov
scas
mov
jnp
mov
adc
icebp
lahf
pop
mov
mov
dec
xor
dec
xchg
mov
ja
cld
mov
mov
sbb
in
insl
aad
data16
push
sbb
mov
xor
sbb
and
sbb
dec
pop
lods
daa
std
out
push
cltd
lret
imulb
mov
xor
arpl
jl
bound
imull
cmpsl
or
nop
andl
push
clc
pop
sbb
add
lea
dec
sbb
leave
fcoml
push
jne
pop
and
out
inc
in
xchg
loopne
pop
lds
xor
cmp
shrl
inc
pop
mov
jl
fwait
imul
push
cwtl
lods
pop
or
outsb
xchg
xchg
loope
or
test
loop
in
inc
xor
xchg
leave
ret
test
imulb
loop
scas
jp
shlb
fnstenv
out
sbb
xor
sbb
pop
jg,pn
mov
adc
xor
mov
mov
sbb
lock
sbb
aad
lret
push
push
dec
xchg
mov
pop
jns
addl
lea
imul
stc
mov
enter
repz
sbbl
in
sub
pop
pop
mov
pushf
pop
pushl
cwtl
fisttpl
lds
shr
mov
adc
mov
sbb
repnz
or
jp
xchg
push
int3
pop
aam
loopne
lock
pop
aaa
insl
je
imul
add
popf
mov
sub
lahf
mov
orb
add
cmpsb
ret
orb
mov
pushf
jne
outsl
and
fists
jg
dec
cmp
mov
jp
inc
cmp
je
xorb
xor
pop
mov
add
test
cmpsb
lods
add
popa
test
fisttpl
mov
pop
mov
test
or
inc
out
jnp
inc
pop
sub
mov
loope
push
ficomps
xchg
fwait
mov
xchg
cmpb
xchg
mov
loopne
adc
outsb
cmp
fldenv
pop
xchg
push
cmc
and
mov
repz
mov
into
xchg
div
int3
cmpsl
push
sbb
into
nop
cwtl
jb
push
orb
fcomip
pop
mov
mov
sti
cwtl
mov
rorl
inc
xor
nop
and
ficoms
xor
or
xlat
pop
gs
jmp
pop
sbb
push
mov
pop
ret
imulb
iret
iret
aam
fnstcw
push
add
fadds
and
lret
mov
mov
pop
jno
push
sbb
js
jge
lcall
pop
mov
fimull
mov
jnp
vpxor
test
add
faddl
mov
mov
mov
mov
stc
pusha
xchg
add
pop
adc
and
mov
xchg
test
sti
jg,pn
xchg
lahf
mov
or
shl
test
fucomip
je
mov
imul
mov
fwait
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
add
movl
sbbl
mov
xorl
mov
add
xor
cmp
movl
jne
mov
or
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
orl
add
mov
mov
mov
xor
push
mov
and
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
push
push
push
push
lea
xorl
push
push
movl
call
addl
push
call
adcl
movl
movl
mov
mov
addl
xor
orl
mov
add
mov
notl
mov
test
movl
je
inc
mov
andl
mov
dec
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
imul
movzbl
xor
mov
add
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
adcl
xchg
xor
mov
sub
sbb
mov
sub
xor
mov
and
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
andl
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
mov
xor
add
sub
mov
dec
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
or
xor
dec
add
mov
andl
sub
orl
lea
addl
xor
adcl
xor
cmp
je
mov
orl
xor
sbbl
add
cmp
movl
jne
andl
pushl
addl
call
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
push
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
adcl
mov
dec
xor
sub
mov
movl
add
movl
cmp
movl
je
addl
pushl
pushl
call
mov
sub
mov
mov
mov
movl
xor
orl
add
movl
cmp
movl
je
mov
mov
sub
sub
mov
mov
mov
and
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
jmp
or
xchg
loop
movsb
emms
adc
inc
stc
xlat
pop
jp
aaa
pop
jp
mov
mov
in
add
jne
pop
mov
test
pop
xor
or
xchg
xor
jmp
test
mov
sub
int
pop
and
outsl
sbb
addb
insl
jne
iret
clc
mov
ss
fisubrs
fdivrs
pop
bnd
sub
inc
xchg
pop
testl
scas
xchg
push
jmp
stos
sub
xor
add
fstpl
push
and
popa
and
mov
push
adc
addr16
dec
jle
shlb
icebp
push
adc
pop
rolb
and
call
mov
subb
sbb
out
sarl
sbb
or
pop
sub
int
pushf
pop
xchg
add
cmp
fsubs
jno
mov
add
enter
mov
mov
inc
mov
xor
pusha
inc
mov
xor
jmp
fldl
cmp
fs
jo
prefetchw
int3
jb
inc
fldt
iret
loop
push
jecxz
ds
dec
sahf
cli
xchg
outsl
ss
fidivl
mov
xchg
or
in
lret
mov
and
out
pop
and
mov
fcos
pop
mov
inc
push
bound
pop
rclb
jecxz
cs
imul
repnz
je
imul
sub
shld
or
sbb
popf
and
ja
jl
stc
lcall
inc
rcr
aam
xor
sbb
lds
gs
push
loop
test
adc
sub
jle
mov
fdivrs
cmp
mov
les
inc
mul
sub
imul
lea
mov
dec
lcall
push
adc
cmpb
cld
daa
pop
xchg
fs
pusha
das
jge
cmpsb
movsl
adc
out
repz
sbb
test
inc
cmp
mov
lahf
pop
insl
or
pop
add
sarl
fdivs
jb
test
sti
lret
into
and
inc
mov
gs
jne
push
lahf
das
fdivl
jecxz
jecxz
adc
adc
pop
add
stos
mov
lea
pushf
and
loope
sub
or
iret
push
inc
jp
sub
xchg
cmp
lcall
mov
jecxz
insl
jmp
add
mov
test
mov
jp
aaa
xchg
mov
inc
xchg
fcoml
or
cmp
push
lods
inc
sarb
add
mov
jle
outsb
lret
mov
mov
fnstcw
xchg
addl
cmp
mov
sarb
pop
loop
adc
and
popa
sbb
mov
pop
push
pop
push
xor
ljmp
bound
shrd
jp
dec
stos
xchg
out
push
inc
sub
fcompl
ret
std
ds
cmp
pusha
subb
mov
lods
mov
cmp
pop
sbb
mov
insl
xor
mov
add
int3
jo
mov
dec
jne
sub
lahf
mov
stc
sbb
xor
pop
in
xchg
out
aam
mov
out
aaa
xor
rorl
insb
cs
or
cmp
mov
jp
push
mov
ret
cmp
xor
rcrl
push
lahf
ljmp
pop
pusha
repz
mov
adc
push
mov
dec
in
or
cld
std
daa
scas
mov
adc
leave
shll
inc
mov
insl
lcall
mov
das
dec
or
fildll
out
or
lcall
hlt
jno
sbb
ficomps
mov
std
std
mov
and
rorl
and
xor
ss
jge
into
mov
cmpb
movsl
inc
adc
adc
mov
rclb
rolb
push
dec
scas
cltd
in
mov
jg
and
sti
inc
xor
lods
adc
push
pop
mov
mov
lea
cmp
shrb
cmp
push
scas
repz
pop
fldcw
mov
jo
jae
pop
xor
push
sarb
adc
je
sub
std
pop
fsubr
adc
enter
and
adc
jb
mov
mov
arpl
cmp
lods
nopl
push
imul
push
lcall
xor
and
rcl
dec
cmp
jle
sarl
out
mov
mov
test
ja
je
pusha
outsl
stc
stos
or
inc
xor
cmpsb
xchg
aam
std
test
jp
leave
xor
inc
mov
in
xor
sub
cmp
mov
cltd
lahf
cmp
aas
mov
and
add
push
ljmp
imul
cmp
mov
mov
mov
inc
stc
jmp
pop
push
mov
test
ds
nop
jns
in
push
push
push
mov
mov
add
inc
lock
test
pop
jmp
xorl
fidivs
data16
sbb
icebp
xor
mov
insl
mov
sbbl
or
test
loopne
push
jg
inc
push
scas
add
and
loope
mov
sahf
mov
or
movl
mov
xlat
movsl
fisubs
loopne
or
sub
xorl
stos
sbb
mov
repz
sub
stc
aaa
sbb
cmpsb
cs
jmp
add
ret
xor
mov
cmp
in
or
inc
fistps
cwtl
xchg
pop
mov
inc
fwait
in
out
das
clc
and
mov
test
insl
and
lcall
repz
rorb
lds
jo
out
gs
adc
clts
add
jnp
lahf
jecxz
test
xchg
outsl
addr16
cmp
jne
xor
push
sti
test
stos
pop
inc
sahf
imul
nop
stc
lahf
jmp
out
mov
jl
and
push
mov
sub
stos
jb
xor
imul
pop
mov
insb
and
mov
movb
mov
push
sbb
mov
out
inc
pop
mov
int3
xchg
sbb
out
gs
imul
jmp
stos
cmc
fstps
movsl
sbb
pushf
mov
addr16
lahf
mov
adc
xchg
imul
jmp
sbb
aam
sub
sti
cltd
addr16
inc
loopne
mov
testb
sub
ss
es
pop
pop
popf
imul
push
sub
imul
lcall
je
cmp
xchg
inc
rolb
test
es
cmp
mov
mov
mov
mov
xchg
sahf
ret
xchg
shll
or
add
sbb
mov
iret
pop
xchg
cmp
cwtl
int3
push
mov
lret
add
pop
sti
iret
dec
mov
popf
fiadds
or
outsl
in
xor
jae
pop
mov
xor
mov
dec
stos
fcmovnbe
xchg
mov
and
add
jp
std
aad
fsubrs
inc
jle
mov
and
xchg
lret
fwait
or
and
or
cmpsb
dec
jnp,pt
neg
arpl
add
push
pop
jbe
and
shll
cmp
cmp
movsb
and
je
xchg
mov
out
repz
in
mov
mov
or
sbb
adc
orl
les
cltd
and
mov
cmpsb
sar
and
mov
pushf
mov
dec
fwait
jmp
sbb
pop
inc
mov
fnstsw
mov
push
lret
fcom
lahf
cltd
mov
push
mov
test
xor
out
imulb
jp
insb
idiv
lods
pop
lods
ljmp
adc
jl
mov
es
imul
psllq
pusha
and
jne
xchg
aas
addr16
fsubp
mov
mov
dec
xor
lcall
js
aaa
jge
xchg
aas
push
mov
es
jmp
cmp
jmp
int
sbb
xchg
popf
addl
inc
add
mov
sbb
jecxz
add
movsb
popf
jb
sbb
cmp
add
adc
and
nop
mov
das
pusha
push
lret
sbb
lods
sub
cmp
orb
aas
xchg
cmc
jle
push
mov
xor
xchg
sub
sbbb
xchg
jg
imul
jp
xchg
mov
cmp
lret
ret
or
mov
fimull
data16
xrelease
into
sub
insb
int
mov
imul
das
inc
scas
push
sti
sarl
fld
insl
not
lcall
icebp
pop
fisttpll
mov
adc
or
aad
jge
inc
in
inc
imul
loope
punpckhwd
sub
dec
es
addr16
lahf
push
jbe
push
push
mov
mov
mov
jno
cmp
loopne
fcomps
cmp
gs
out
mov
incl
shll
adc
cmp
scas
mov
das
add
movsb
shll
jp
mov
jmp
jecxz
add
xor
loope
fiaddl
loope
pop
pop
adc
loopne
push
push
cmp
fs
jb
mov
or
mov
add
dec
inc
jo
ljmp
lret
imul
xor
xchg
pusha
imul
or
fnsave
pop
mov
inc
xchg
loopne
push
adc
jl
pop
xchg
loope
in
push
jne
inc
add
sub
mov
lds
xchg
pop
ret
inc
mov
test
shlb
incb
push
or
pop
insl
fadd
fdivl
mov
push
out
aam
adc
pop
adc
iret
ret
jne
test
cmp
xor
divl
daa
loopne
adc
fwait
mov
adc
out
stc
lods
in
test
lds
and
ret
and
push
or
inc
in
fdivrl
cmpsl
jnp
test
push
scas
test
pop
loope
shrb
scas
jno
fidivs
stos
or
xchg
xchg
ja
cmp
rdpmc
xor
jae
jbe
sub
adc
daa
jo
mov
out
loope
xor
or
test
popf
fcmovu
imul
sub
int
pusha
cmp
pop
push
ds
adc
clc
sbb
pop
int3
icebp
xchg
mov
pop
cld
ret
dec
push
dec
mov
icebp
cmp
inc
test
test
in
mov
mov
dec
cld
daa
cmpsl
push
push
sub
mov
dec
or
push
outsl
int3
jae
sbb
mov
push
aas
mov
push
xchg
push
in
ret
xlat
push
jl
mov
imul
cli
cmp
xor
pushf
stc
andl
divl
arpl
adc
dec
enter
cmpsb
sbb
xor
sub
icebp
addl
jbe
imul
mov
mov
jno
je
mov
adc
aam
xchg
push
repnz
imull
test
adc
fstpl
or
pop
add
stos
jp
mov
ret
loopne
cs
xchg
pushf
cmp
in
iret
mov
not
popf
ljmp
lcall
inc
data16
xchg
and
repnz
dec
xor
rclb
inc
mov
es
repz
mov
and
jmp
in
add
arpl
je
fcomps
pop
pop
cmpb
sarl
push
inc
cmpsb
inc
mov
push
scas
ret
in
ret
pusha
add
mov
in
lods
shl
push
dec
dec
dec
add
add
gs
and
sbb
sub
in
sbb
es
mov
sub
test
push
mov
jne
ret
xchg
lret
shll
fucomip
add
lahf
and
cmp
popl
outsl
repnz
push
xor
xchg
addr16
jl
scas
dec
sbb
gs
jl
clc
xor
jno
mov
in
leave
enter
inc
lret
popf
mov
xchg
repnz
mov
nop
xchg
sahf
ret
pop
dec
push
out
push
sbb
dec
in
mov
jns,pn
inc
xchg
pop
cli
roll
paddw
xchg
adc
inc
stc
je
cmp
jg
xor
or
repnz
jnp
xchg
cmp
sahf
push
enter
mov
sbb
notb
scas
frstor
inc
push
mov
call
pop
test
movsl
aad
imul
mov
int3
mov
rcll
scas
and
xorl
add
es
sub
adcl
ja
fcomps
mov
cmp
sbb
and
and
sbb
dec
pop
mov
cmpsb
push
sbb
iret
push
nop
inc
pop
notb
es
outsb
loope
jno
mov
les
in
test
std
dec
add
aam
roll
xchg
jns
in
adc
or
pop
test
jbe
pushf
sti
test
sub
pop
shll
cmovp
mov
mov
shll
das
push
arpl
mov
stc
mov
cwtl
xor
das
imull
dec
fs
mov
adc
xlat
pop
int
loope
push
cmp
pushf
sbb
pushf
mov
or
imul
imul
inc
sub
jne
aas
sbb
sub
stos
mov
push
adc
scas
add
or
test
cmp
sbb
pop
fstpt
out
gs
and
push
leave
loopne
shrl
mov
mov
sub
es
sti
enter
sbb
scas
mov
jbe
pop
ja
cld
iret
cmp
jge
or
in
push
in
push
mov
ret
das
arpl
dec
pop
mov
lret
and
or
idivl
cmp
je
stos
lret
in
je
cmc
and
arpl
outsb
mov
iret
jmp
jl
dec
testb
orl
loope
jae
in
loope
ficoml
cmp
and
sub
mov
mov
gs
popf
aas
sbb
test
out
push
lods
mov
outsl
mov
repz
pop
pop
push
inc
sub
mov
xlat
mov
xor
repz
push
loope
in
jmp
jg
push
scas
push
and
lret
orb
push
aam
aaa
stos
or
scas
xorb
sub
fs
loop
sahf
and
or
pushf
outsl
push
rcrb
sarb
cmpsl
test
push
jae
or
or
jo
or
in
mov
mov
pop
in
sar
lods
jecxz
or
fcompl
test
dec
pushf
jno
lea
jle
mov
insl
nop
aaa
xor
push
jns
js
push
push
mov
inc
ror
push
mov
and
mov
imul
movsl
cmp
out
dec
into
adc
lds
sub
dec
add
adc
fidivl
dec
xlat
adc
mov
out
lock
adc
jp
add
sbb
xchg
jno
or
mov
mov
jb
mov
cmp
xchg
cli
pop
addr16
int3
cs
push
xchg
pop
out
add
dec
inc
push
adc
popa
daa
add
in
aam
xlat
insl
ror
xchg
xchg
in
and
mov
xchg
lock
sbb
out
push
leave
ror
fmuls
xchg
fwait
scas
arpl
in
fidivl
lods
sub
dec
fiaddl
nop
jmp
test
mov
sub
outsl
ds
xor
insl
dec
fwait
inc
cmp
sub
stos
bound
mov
xchg
shll
xor
sub
mov
inc
jb
in
popl
sbb
push
nop
sub
sbb
lods
fidivs
inc
jne
mov
dec
pop
in
ja
movsb
push
mov
dec
lahf
scas
pusha
lds
xor
sarb
pop
ds
pop
push
and
sbb
and
call
mov
pop
xchg
mov
or
in
movsl
mov
or
fdivr
in
jl
pop
add
inc
cli
mov
arpl
dec
popa
adc
push
subl
ret
cmpl
xchg
add
pop
test
or
push
leave
push
sub
push
ss
add
and
pop
lcall
sbb
flds
pop
pop
mov
cwtl
sub
repz
or
sti
sti
mov
fidivrl
mov
inc
mov
xor
test
fs
xchg
or
ds
leave
cmpsb
cwtl
inc
repz
xchg
sub
movsl
push
lods
mov
sar
in
xchg
add
sub
or
imul
push
movsl
xlat
fcomi
out
cwtl
mov
jbe
cmpsb
sbb
or
je
mov
adc
push
xor
dec
popa
fidivl
mov
xchg
outsb
or
xchg
cmp
mov
ja
outsl
fnsave
arpl
inc
inc
cmp
je
pop
mov
outsb
andb
mov
test
test
std
mov
sub
loopne
fcom
sbb
fistl
lods
mov
mov
mov
lods
jmp
mov
adc
arpl
sti
sahf
inc
insl
mov
xchg
xchg
sti
ret
cmp
xor
aas
stos
xor
dec
pop
push
in
das
cltd
mov
fdivrs
add
push
shrl
add
nop
sub
add
push
stc
daa
pushf
mov
adc
inc
jns
xchg
lcall
stc
jg
push
pop
shl
test
andps
push
ret
fs
or
jae
dec
push
daa
into
add
mov
lock
cmp
mov
shrb
insb
push
inc
imul
aam
xchg
and
push
add
add
repnz
push
int
insl
loopne
mov
rorb
int
out
mov
fld
mov
ret
jb
aam
cwtl
in
ljmp
mov
ret
gs
xor
pusha
cltd
mov
adcl
test
mov
jg
ficoml
cmpb
es
jp
out
and
lds
cmpsl
in
ss
cli
rcl
negb
addl
mov
in
pop
inc
adc
inc
outsb
in
jle
mov
mov
sub
fwait
lcall
mov
leave
and
add
adc
fisttpll
pop
sbb
or
or
pop
in
mov
and
scas
mov
repnz
orb
daa
mov
jle
insl
jo
lcall
sti
dec
stos
xchg
fwait
pusha
mov
out
jl
jecxz
add
cmp
movsb
adc
xchg
xlat
out
jnp
cli
mov
sbbb
sti
loope
cmp
clc
sarl
pop
xor
inc
fcoms
aam
js
repnz
dec
adc
pop
sahf
sbb
sub
enter
les
sub
call
lock
push
js
icebp
inc
test
sarb
ds
cmp
out
pusha
loop
cmp
jle
mov
popf
sub
in
stc
aas
sbb
jbe
dec
aad
cmp
add
pop
jae
add
adc
icebp
dec
outsb
aam
push
xchg
movsb
cmc
je
sbb
jno
imul
aaa
das
cmpsb
daa
or
push
out
sbb
lds
mov
xchg
movsl
cli
fbstp
ja
or
pop
xor
push
setae
jp
popf
int
jl
cld
fiadds
mov
out
sbb
sub
lahf
mov
pop
out
dec
dec
and
and
cmp
mov
mov
mov
iret
mov
jmp
push
inc
int3
pusha
mov
fldln2
pop
jnp
xchg
nop
add
in
addr16
call
mov
xchg
xlat
repz
mov
push
fnstsw
dec
rcrl
pop
push
test
pop
mov
fwait
js
jo
fisubrs
loop
outsl
lods
or
sub
mov
adc
mov
es
jp
dec
add
fisttpl
mov
mov
ret
xchg
sub
fnsave
pop
xor
sub
outsb
mov
orl
dec
js
push
hlt
push
bound
test
daa
fwait
adc
out
xlat
cmc
cmpsb
push
and
rcll
out
mov
out
lret
xor
out
test
sub
add
sub
int3
add
imull
push
int3
mov
das
lret
push
pop
ret
push
sti
mov
inc
cmp
adc
sbb
out
or
out
xor
test
sub
or
sti
and
mov
into
xor
add
inc
mov
scas
jae
gs
xchg
pop
jno
hlt
shll
cmp
aam
and
mov
jae
movsb
xchg
adc
aas
cmp
sub
mov
insb
rcl
imul
jecxz
ret
in
or
inc
jne
test
test
lret
stos
pop
cli
adc
sub
mov
inc
test
shr
insb
inc
sub
pushl
dec
jmp
push
xchg
fisttpl
push
jecxz
cmc
jnp
out
cmp
jecxz
mov
push
mov
fdivrp
inc
and
fisubrs
clc
xor
fwait
aaa
pop
xor
mov
sbb
movsb
xchg
sahf
cli
repnz
ret
test
cld
mov
rcrl
cmp
mov
jb
sbb
fwait
nop
pop
sub
fwait
test
mov
sbb
add
jecxz
out
or
pop
inc
or
dec
xchg
or
adc
stos
or
or
push
inc
aad
sbb
cmc
mov
std
enter
pop
add
shrb
fwait
mov
sub
xchg
add
sbb
dec
cmp
jge
pop
fisubrl
jecxz
out
fidivs
iret
rorl
mov
xor
sbb
dec
imul
pop
lahf
mov
sub
sbb
rcrb
mov
or
mov
loop
pop
js
inc
fcoml
sbb
lods
cld
outsl
xor
sahf
hlt
add
jb
and
jbe
sub
ljmp
pop
sti
cmp
push
sbb
sbb
xchg
and
mov
xor
xchg
movsb
nop
fnstenv
enter
jbe
mov
dec
rcl
cmp
lret
cld
adc
xchg
dec
xorb
xlat
call
outsb
pushl
add
dec
icebp
add
adc
sub
cmp
fiadds
add
lahf
daa
lahf
or
jbe
pop
je
mov
pop
in
cltd
jne
pop
flds
aam
mov
hlt
sub
sti
lret
test
clc
ss
jge
enter
push
ljmp
and
xchg
gs
mov
lret
push
xchg
imul
mov
popf
cmp
dec
push
and
xchg
loope
mov
mov
push
lods
ret
cmp
mov
xchg
jmp
push
mov
and
lods
push
cmpsl
mov
fnsave
clc
gs
mov
mov
add
push
xor
lret
jne
mov
fisubrs
and
aas
stos
insl
xchg
ljmp
mov
sbb
ret
xlat
jb
sar
xor
fists
cmp
scas
xor
gs
jecxz
add
sbb
adc
imul
imulb
mov
in
mov
jle
dec
sahf
mov
cmp
adcl
setbe
pop
out
or
lock
xchg
pop
xor
sub
and
push
mov
pop
sbb
sub
icebp
mov
leave
es
lahf
cmp
vmovntps
shrl
mov
pop
inc
das
pop
bound
lret
lret
cmpsl
mov
jnp
cmp
mov
pop
jg
push
mov
jmp
and
out
popf
rorl
int3
in
cmp
jg
cli
mov
dec
movl
sub
psraw
mov
repnz
add
adc
in
data16
sbb
inc
xchg
imul
adc
cmpsl
add
push
arpl
mov
xchg
jle
push
xchg
out
fwait
aas
mov
jmp
push
jg
sbb
jmp
popa
cmp
mov
or
loop
dec
push
cmpsl
imul
fcoml
lret
cmp
inc
std
repz
les
push
mov
sub
or
xor
loopne
push
cld
pop
ja
sbb
call
lods
add
cmp
xchg
adc
adc
mov
inc
pop
pop
fwait
mov
push
push
pop
in
data16
xchg
leave
push
sub
out
push
mov
test
je
pop
jg
mov
cwtd
pop
cmp
mov
push
mov
push
sub
mov
sub
int3
adc
in
enter
push
push
ljmp
sbb
jns
xchg
ret
mov
inc
pop
inc
mov
adc
dec
aad
popf
sub
push
add
fs
arpl
or
sbb
addr16
xchg
pop
out
xchg
dec
jae
mov
pop
popa
sub
popa
in
iret
or
mov
bound
xchg
pop
nop
pop
sbb
cmp
stos
and
cs
adc
and
push
mov
push
adc
out
push
movsw
add
aas
addr16
mov
add
mov
repnz
and
fwait
push
jl
call
stc
repnz
into
add
push
sbb
je
fldenv
mov
mov
in
add
pop
add
xor
daa
lcall
xchg
sbb
mov
fildl
mov
push
xor
test
xor
or
pop
imul
mov
scas
aam
hlt
mov
inc
jg
dec
icebp
mov
shrl
sub
out
cltd
lds
ror
adc
jg
ffreep
sbb
sbb
mov
and
sub
push
insl
ja
xchg
jge
xchg
aas
lods
sub
aam
jle
dec
cwtl
aas
jne
adc
aad
adc
les
and
incl
or
rcr
xlat
push
movb
daa
pop
mov
and
jmp
cmp
cmp
aam
insb
adc
mov
jnp
addb
mov
mov
fldenv
je
pushf
lods
test
in
aas
or
loopne
iret
les
pop
dec
mov
rclb
fadds
sahf
ja
mov
inc
loope
add
fcoms
jo
dec
aad
mov
cmp
push
lds
jno
mov
push
std
ror
sbb
loope
daa
xchg
push
mov
sti
sub
test
pushf
in
adc
fsub
mov
sbb
cld
push
sbb
pop
mov
dec
sub
and
jno
cmp
lret
push
clc
arpl
data16
sub
add
test
xchg
fsubl
shrl
inc
jle
push
inc
pop
cmp
pop
repnz
enter
fcmovnbe
test
push
add
adc
xor
jo
push
test
jl
scas
inc
sub
sbb
pusha
aaa
insl
lahf
dec
and
cwtl
cmp
fidivl
sbb
sub
ficompl
mov
orl
jne
fs
and
push
inc
sub
push
or
jno
sahf
pop
sti
mov
add
bound
fadds
jae
jno
jge
xchg
fs
shll
push
es
cmpsb
shrl
xor
movb
lods
out
mov
pop
das
sub
fsubr
ffree
insb
jno
repz
pop
lahf
in
fbstp
call
sub
insl
cli
or
dec
out
mov
pop
gs
fwait
add
push
insl
test
xchg
jg
imul
inc
cmp
jns
into
ficoms
pop
gs
ljmp
push
les
lea
loopne
jp
test
and
imul
or
je
ret
mov
sub
add
xchg
jge
add
pop
notl
movsl
incb
push
inc
add
jb
movsl
pop
out
mov
add
mov
mov
or
arpl
xlat
add
imul
mov
sub
xor
incl
shr
in
in
mov
scas
imul
sbb
cmp
lock
cmp
fidivl
adc
xchg
mov
mov
xchg
lock
cmp
adc
push
and
xchg
inc
add
in
jl
dec
jmp
out
test
das
int3
mov
imul
lds
cmp
add
mov
inc
test
xor
rolb
push
mov
lock
pop
adc
xchg
push
xchg
ds
fcomps
pushf
sti
xlat
inc
xchg
cmp
mov
mov
adc
mov
dec
pushf
cmpsb
out
sbb
test
or
jnp
je
fwait
xchg
mov
cmpsl
jge
rorl
cmc
das
and
std
and
cmp
adc
mov
mov
cmpsl
jecxz
inc
fildl
decl
cld
cmp
repz
js
sti
mov
aaa
mov
jns
lret
mov
fsubrp
adc
insb
xor
scas
and
or
add
push
fimuls
daa
mov
mov
push
repz
pop
push
int3
daa
popf
es
mov
pop
push
subl
or
inc
pop
fstpl
shr
inc
pop
cmp
imul
add
mov
pop
or
dec
in
sbb
cmp
mov
dec
xlat
sub
aad
inc
push
jg
xor
and
push
bound
mov
inc
push
xor
sbb
mov
addl
add
xlat
es
jmp
mov
add
jmp
cmovno
imul
fnstcw
sbb
dec
test
in
push
out
xor
pop
out
shll
pop
xchg
dec
jae
shll
cli
xchg
je
ljmp
ss
testb
mov
xchg
lock
sub
repnz
mov
xor
addr16
xchg
lock
adc
out
jns
test
outsb
test
mov
push
xchg
or
pushf
mov
mov
mov
jne
imul
fwait
sbb
xor
pop
jl
ret
push
nop
movsb
mov
repnz
sbb
out
outsb
movsb
clc
add
lahf
stos
pop
push
jmp
les
inc
pop
sub
mov
cmp
sub
mov
jle
cmp
movsb
push
sbb
add
cltd
jp
push
push
mov
fcomip
mov
push
lea
or
sbb
dec
pop
mov
mov
lods
clc
cli
jnp
int
sbb
in
jp
cltd
pop
ret
pop
movsl
jmp
mov
lds
and
push
loopne
test
subl
mov
pop
add
shrb
pushf
sbb
inc
jno
in
sti
test
pusha
pop
mov
mov
ds
adc
cmp
loop
jge
imul
stos
aam
fsubr
adc
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
push
or
xchg
xchg
xor
nop
and
aaa
pop
jp
or
jl
ja
jo
mov
add
fwait
mov
fsubrs
push
repz
fimuls
addr16
repz
or
push
sbb
pop
jmp
push
xchg
int3
or
ss
xlat
mov
int
out
adc
fdivr
in
sbb
pop
addr16
andb
and
jmp
and
and
fcmovu
outsb
inc
dec
sbb
dec
aad
mov
xorl
imul
xchg
xor
arpl
pop
add
icebp
xchg
repnz
dec
add
pop
xchg
mov
inc
fcomip
jae
or
cmp
mov
cmp
test
fsts
mov
lock
pop
sbb
in
in
test
xchg
jb
pop
sbb
popf
sub
les
lds
xchg
fisubrl
dec
push
jecxz
rcll
xchg
mov
push
loopne
icebp
pop
mov
xor
test
inc
xor
cmp
stc
popa
fcmovu
and
xor
cld
ss
es
mov
adc
les
or
lret
push
mov
popf
xchg
inc
ficoml
cmpsl
jmp
pop
and
sub
add
insl
fcomps
shrl
loopne
mov
int
arpl
or
icebp
outsb
pop
jno
mov
insl
or
shrb
loope
movsl
dec
mov
mov
and
inc
xchg
ds
call
jmp
jnp
push
xor
or
xchg
loope
test
adc
mov
scas
mov
or
inc
pusha
pop
pusha
mov
sbb
and
leave
sbb
nop
ret
shll
pop
push
pop
mov
push
mov
mov
rclb
icebp
lea
dec
pop
jno
aad
cmp
test
lahf
roll
divl
mov
into
shll
fcmovbe
pushf
mov
sbb
popf
jp
jmp
int3
jmp
mov
push
pop
push
scas
and
shr
or
out
test
push
icebp
cmc
aam
lock
sbb
pop
inc
mov
int3
rcl
mov
lcall
xchg
sbb
leave
mov
push
popf
cld
push
outsl
ret
aam
cmp
icebp
mov
dec
or
or
lahf
icebp
xor
fcmovnb
xor
jns
adc
les
stos
xchg
adc
out
movsb
xor
call
lock
jp
int3
sti
push
bound
sbb
xchg
inc
aas
cmpsl
add
or
push
stos
pop
sub
cmp
add
sub
or
in
jl
loop
cltd
shl
xor
ret
mov
jo
orb
mov
cmpsb
pop
dec
pcmpgtw
inc
xchg
add
mov
dec
sub
mov
xchg
inc
sub
and
mov
add
add
lods
into
xlat
mov
popa
outsl
dec
rclb
adc
iret
nopl
cmc
cmp
fcmovne
mov
pop
fldcw
sbb
push
mov
ds
push
push
jmp
add
mov
lcall
mov
sbb
int
xchg
mov
mov
out
arpl
push
ss
lock
sbb
insl
mov
call
or
hlt
and
insl
adc
push
mov
js
xor
adc
in
mov
inc
and
jnp
xchg
out
adc
xorb
rcr
mov
sarl
cwtl
xor
pop
adc
sahf
cli
out
and
xchg
xor
inc
int3
and
mov
or
aad
pop
push
dec
popa
or
sub
sbb
rclb
xor
push
ret
lret
in
js
neg
pop
ds
insl
mov
xchg
dec
pushf
pop
add
out
test
int
mov
jp
lcall
xor
add
jnp
insl
lea
aam
pushl
andl
cmpsl
pop
jmp
shlb
pusha
push
add
test
pop
ja
test
into
sbb
jae
jnp
subb
incb
jno
mov
pop
xchg
mov
mov
dec
jbe
cmp
pop
loopne
sbb
out
jo
inc
rorb
or
cli
outsb
pop
mov
or
add
jno
dec
les
js
cmp
and
inc
push
sub
and
das
lds
in
dec
add
adc
sbb
jmp
mov
mov
mov
xor
sub
or
fnstenv
rcrb
mov
jb
imul
cmp
fs
mov
inc
mov
or
ljmp
test
addl
sbb
mov
sbb
cmp
push
jl
mov
push
popa
push
sti
jbe
cwtl
sbb
mov
pop
and
in
lods
enter
fwait
outsl
adc
jle
cmp
sbb
cltd
push
sbb
xchg
xor
pop
lock
or
dec
inc
cmpsb
sub
adc
ljmp
hlt
aas
out
xor
lahf
lods
jne
ss
int3
jnp
xor
lea
clc
lods
pop
cli
cmp
add
xor
and
in
cmpsb
xchg
out
pusha
push
and
mov
xchg
dec
mov
fnsave
cmp
mov
and
in
inc
mov
mov
cmp
ljmp
dec
sub
mov
pop
lods
add
jns
ret
mov
mov
insb
push
push
adc
or
pop
xchg
mov
pop
or
mov
pop
movl
stos
sub
cmp
xor
jno
and
mov
inc
andb
aad
sbbl
xchg
cmp
add
lods
push
lcall
push
in
inc
hlt
or
addr16
dec
jno
inc
dec
enter
test
inc
cmp
pop
cmpsb
insl
mov
loope
add
pmaxsw
mov
je
movsl
cli
mov
cmp
dec
jno
push
jae
fs
leave
push
movsb
aam
cmp
sahf
xorps
or
mov
mov
mov
insb
mov
ret
call
push
jge
sbb
std
lret
cmp
xor
push
lret
add
ds
loope
sub
fcoms
cmp
jnp,pt
push
cli
cmpsb
test
fisubrs
aam
inc
sbb
in
repnz
insb
movsl
int3
lcall
push
jns
inc
sbbb
enter
push
out
bound
int
insb
nop
pusha
arpl
insl
or
pop
out
pop
mov
sub
fistpl
hlt
push
fucomip
or
movsb
dec
mov
mov
out
xor
inc
sbb
cmpsl
cmpsl
cmp
lds
imull
test
ret
push
jo
sub
fisubrs
repz
lret
fsub
inc
imul
cmp
push
fs
mov
mov
mov
sbb
push
jns
clc
int3
mov
in
xchg
or
push
pop
jg
xor
pop
jmp
lods
xor
mov
push
imul
jmp
cld
add
jg
push
out
hlt
jne
cwtl
and
dec
enter
mov
or
mov
sbb
pop
mov
lea
ljmp
call
xor
cmp
fs
das
mov
shll
std
jmp
cld
test
inc
mov
mov
push
cs
rolb
dec
loopne
pushf
pop
movsl
outsb
dec
shl
aaa
cmp
adc
jg
fcompl
rorb
inc
adc
hlt
iret
sbb
cs
jmp
xchg
adc
addr16
ljmp
cmpsb
mov
jo
hlt
xchg
lods
mov
mov
js
jmp
daa
adc
out
mov
inc
mov
pop
and
mov
ret
mov
in
cmp
aas
jge
iret
dec
sbb
rcr
int3
pop
mov
arpl
xor
sub
or
sarl
cwtl
mov
sub
nopl
cmovl
dec
inc
mov
inc
fdivrl
fwait
loopne
fbstp
data16
es
cmpsl
lods
call
xchg
mov
mov
roll
push
cs
mov
pop
rorb
xchg
and
mov
jae
xor
sub
mov
scas
adc
jae
rcrl
xchg
jbe
cltd
lcall
bound
sbb
jl
xchg
mov
pusha
adc
sbb
into
and
lret
mov
test
cld
cltd
or
add
in
sti
dec
jno
insl
lock
cmp
mov
jp
push
adc
enter
mov
and
jae
ljmp
xchg
fdivrp
das
ljmp
iret
int
lods
jle
aas
sub
clc
push
pop
inc
dec
dec
xchg
sbb
mov
and
pop
cs
pop
cld
and
lret
loope
inc
in
in
call
pop
xchg
rclb
jne
test
push
scas
adc
stc
popf
add
stos
cmp
jle
mov
insl
pop
pop
stc
in
or
leave
mov
mov
push
stc
mov
test
sbb
shr
dec
test
add
loopne
fisubs
jns
mov
mov
andl
and
jle
repnz
subl
push
sub
in
roll
insb
add
add
aaa
in
xchg
loop
scas
dec
push
loop
adc
fldcw
or
pushf
jmp
inc
inc
add
data16
pop
test
sbb
mov
pushf
xlat
inc
mov
scas
mov
mov
and
mov
imul
add
out
scas
mov
xchg
mov
adc
cmp
jmp
push
out
fdivrp
push
or
and
pop
loope
xchg
sub
xor
xor
ja
shll
aad
pushf
and
push
insl
scas
jl
mov
dec
out
jge
sbb
pusha
mov
cmp
lret
imul
cmp
cmp
es
clc
andb
fcomps
sub
outsl
ljmp
push
idivb
jnp
in
inc
popf
fwait
inc
or
mov
xchg
scas
cmp
fwait
and
inc
outsb
dec
loop
or
rorb
scas
jbe
fwait
jle
and
pop
movsl
push
sub
jl
sbb
cmc
imul
adc
fiaddl
xlat
sub
sub
shll
sub
insl
pop
cltd
jnp
into
movsl
arpl
dec
add
add
shrb
fwait
xlat
or
cli
cli
pusha
jns
aaa
aam
pushf
fimuls
arpl
jmp
or
mov
loopne
and
jecxz
ja
sub
std
sbb
add
cld
xchg
shl
cld
sti
or
and
push
into
fucomp
xor
jnp
xor
fimull
dec
insl
clc
mov
fwait
adc
insl
pop
push
push
mov
inc
ljmp
jno
gs
aas
mov
mov
jbe
push
push
adc
ljmp
mov
mov
loopne
or
mov
ror
xor
or
xor
adc
cs
fidivrs
lock
mov
dec
pop
popa
dec
or
sub
orb
sti
xchg
je
mov
rol
dec
mov
lea
mov
jp
pushf
popf
inc
pop
dec
jge
ja
mov
mov
xchg
out
dec
inc
sbb
and
or
mov
add
jg
imul
jbe
sarl
mov
xchg
std
or
mov
mov
cmp
fcmovu
jns
xchg
flds
cmp
in
mov
inc
cmpb
add
dec
loop
subl
enter
jbe
sbb
dec
out
pop
aam
mov
stos
shlb
and
and
mov
fcomps
cmpsl
and
clc
push
add
loope
lcall
ret
cs
mov
or
xlat
insb
nop
daa
xchg
test
outsl
or
pop
lds
mov
add
es
lods
rcrb
or
or
xor
and
sub
pop
in
xor
dec
sbb
fcoml
aas
inc
clc
shlb
xchg
inc
icebp
cmp
movsl
or
pop
pop
jnp
jecxz
pop
cli
add
jo
leave
xor
es
adcl
jbe
loope
jge
mov
fidivs
or
pop
addb
push
cmp
jno
div
ret
jnp
mov
scas
pop
cmpsl
sahf
pop
pop
or
dec
subl
or
and
subl
cwtl
mov
pop
inc
sub
testb
sarb
jne
sub
xchg
icebp
jno
cmp
imulb
scas
adc
dec
test
fdivr
mov
sub
pop
ficoms
pop
mov
call
stos
mov
jecxz
cmpsl
rclb
andl
pop
jno
push
loop
or
mov
jl
add
mov
mov
dec
loopne
jle
mov
inc
sub
movsb
xor
scas
pop
jb
rol
scas
and
inc
cmc
scas
jl
pushf
pusha
xchg
out
mov
sbb
mov
int
xchg
xor
leave
jae
pushf
shlb
test
call
add
clc
in
inc
outsb
pop
pop
movw
push
adc
mov
jecxz
aam
in
out
fdivrp
ret
dec
mov
pop
pop
jne
les
fwait
adc
aas
pusha
repnz
leave
hlt
sbb
sahf
aad
stos
jnp
xlat
and
test
or
test
call
dec
mov
repz
dec
push
push
xchg
dec
shrl
mov
fildll
or
movsl
notl
dec
ret
inc
ljmp
inc
xchg
sbb
inc
out
jne
push
pop
mov
test
ja
jge
in
cmpsl
addr16
aaa
push
mov
sub
dec
les
cs
mov
fld
daa
xchg
out
mov
or
clc
mov
add
cwtl
inc
outsl
dec
push
fs
mov
add
stos
sahf
jp
push
ja
push
gs
cmpsb
xlat
iret
cmc
aas
adc
sarb
insb
mov
packuswb
cs
scas
scas
adcb
mov
sbb
adc
stc
pop
jne
ds
out
testl
mov
dec
lret
loope
je
sarl
xchg
sub
sahf
mov
daa
xor
inc
repnz
sbb
imul
and
mov
jb
scas
jno
fwait
sti
daa
rol
aas
mov
repnz
in
push
push
imul
dec
or
pop
sub
imul
addr16
cmp
jno
push
add
sti
jae
mov
cmovp
lret
gs
fcompl
dec
mov
inc
dec
jns
lds
or
push
add
int3
and
xchg
jbe
add
add
or
push
cltd
stos
mov
mov
pop
mov
fstl
pop
xchg
xor
and
idivb
push
cmp
movsb
jg
lahf
xchg
sbb
cmp
sub
xor
mov
arpl
add
adc
pop
cltd
cmp
jnp
sub
mov
and
je
add
scas
push
or
je
fnstcw
testl
popa
int3
add
cmp
lcall
cmp
sbb
into
add
pop
pop
pop
mov
aas
mov
sbb
push
jns
mov
hlt
mov
inc
outsb
ja
push
jo
mov
cmp
adc
pop
jle
fs
mov
in
push
std
jle
lock
pusha
repnz
xlat
loope
mov
ret
push
jb
repnz
pop
pop
fwait
or
sub
xchg
cmp
ret
jl
jnp
test
mov
mov
insb
jno
pop
out
in
movsl
das
mov
hlt
add
adc
xchg
iret
fistl
das
in
cltd
ljmp
adc
pop
in
pop
pop
mov
scas
mov
data16
popl
pop
popa
push
jae
xchg
jp
mov
fildl
inc
push
lea
pop
les
out
jge
push
ljmp
nop
sub
jecxz
xlat
adc
mov
ja
imul
cld
insb
int
sub
dec
add
push
pop
mov
push
dec
inc
decb
and
divl
pop
popl
scas
lret
gs
jns
xor
jne
enter
cs
xchg
and
adc
jmp
fldl
fadds
iret
sbb
jl
arpl
ret
fisubl
add
insb
push
repz
and
cltd
and
jnp
mov
imul
in
pop
aam
and
sbb
es
sahf
repnz
mov
sub
aam
xor
je
stos
loop
pop
add
cwtl
icebp
out
mov
cmpb
cmp
jle
aaa
jg
lods
xor
test
enter
inc
pop
sbbl
scas
dec
daa
pop
mov
iret
shll
movsb
bound
pusha
int3
pop
xchg
push
out
sub
dec
mov
add
adc
sti
hlt
scas
mov
loop
fldl2t
leave
jle
rol
or
jo
fisubrl
cli
sub
leave
pop
repz
jns
repz
aam
mov
mov
loop
jp
gs
out
mov
dec
xchg
and
xlat
inc
cmp
test
pop
mov
mov
in
mov
rcr
push
shl
hlt
mov
fs
mov
inc
dec
push
in
testl
mov
icebp
pusha
lret
aaa
into
aad
sub
popa
inc
nop
lcall
mov
bound
mov
pop
icebp
or
jge
mov
sub
fldl
aad
push
test
and
push
push
enter
mov
sub
dec
in
loopne
xor
jl
inc
jno
or
mov
inc
add
stc
out
rolb
jb
mov
pusha
mov
insl
imul
cmpsl
ljmp
mov
pop
outsl
and
pushf
and
push
scas
or
js
mov
jp
mov
mov
xor
jg
ret
cmc
xor
or
addr16
mull
or
repnz
adc
scas
mov
adc
sbb
imul
push
fisubrs
pop
aas
test
or
test
bound
inc
cwtl
in
mov
push
pop
or
push
pop
mov
and
rcrb
je
sub
push
hlt
xor
adc
xchg
adc
jno
dec
mov
pop
xchg
adc
scas
andl
sti
sbb
scas
cmpsl
and
cld
daa
sbb
inc
das
add
jg
loope
mov
stc
dec
push
dec
xchg
stc
mov
in
cmc
int
xchg
mov
lods
stos
cld
cmp
push
lods
fldenv
mov
leave
addb
xchg
sbb
arpl
push
fldl
jo
or
push
cmc
mov
jne
pop
push
enter
jg
jnp
clc
mov
popa
dec
mov
fldl
movsb
mov
jnp
repz
push
dec
jge
fnstsw
inc
loopne
push
mov
movsb
aad
add
js
dec
test
jmp
dec
dec
sbb
jg
test
outsb
mov
movsl
jg
add
call
cwtl
inc
out
fildll
mov
push
jnp
int3
mov
dec
jno
jl
and
js
dec
inc
inc
pop
popa
add
or
gs
mov
xchg
inc
outsl
jp
lcall
mov
subb
sub
or
add
jle
jbe
jle
enter
out
pushf
xchg
movsl
aaa
sbb
std
cmp
fldl
loopne
mov
and
push
jbe
xor
jnp
dec
int3
out
not
pop
xorb
jb
jp
pop
scas
imul
pushl
fcomp
scas
hlt
test
pop
or
daa
cmp
push
clc
int3
pop
daa
mov
sbbl
pop
stos
jno
inc
sarl
icebp
int3
mov
push
ds
scas
lock
lock
mov
xor
iret
loop
jno
push
or
repz
sub
shlb
pop
sub
and
and
adc
inc
neg
or
ret
or
leave
mov
add
adc
pop
loop
adcl
push
cmp
add
and
pop
mov
sahf
add
lock
adc
cmp
lods
cmc
lods
inc
pop
jno
adc
addr16
out
xchg
mov
repz
ljmp
loopne
addr16
ja
inc
pop
push
aaa
cld
pop
stc
xchg
lret
xor
notb
xchg
lods
push
mov
add
or
das
mov
mov
xor
nop
inc
jno
test
mov
jg
out
in
mov
gs
jne
frstor
cwtl
or
iret
jne
mov
js
pop
xorb
data16
add
scas
std
jns
fcomps
xchg
inc
fadds
test
xor
add
fistps
sbb
mov
mov
ret
lea
sub
inc
je
daa
jge
inc
mov
add
xchg
aaa
inc
sbb
fstps
out
ficompl
jg
push
stos
pop
in
push
pushf
icebp
push
loope
and
sti
and
jb
or
jle
ds
addb
mov
xor
es
mov
in
mov
cmp
dec
cltd
ljmp
test
inc
outsl
dec
outsb
sbb
jne
push
test
and
push
ja
add
inc
inc
sahf
dec
rcrl
push
or
into
dec
mov
sub
stc
orb
test
jmp
pop
add
jge
sub
dec
mov
mov
stos
aaa
lea
lret
pushf
out
ljmp
repz
adc
adc
pop
leave
push
outsl
pop
movsl
xor
imulb
leave
je
mov
jae
out
in
mov
sub
and
fstps
xor
nop
cmp
test
xchg
ret
adc
stos
popf
xchg
and
push
sub
or
aam
in
jne
pushf
das
mov
xchg
adc
cld
test
pop
lret
inc
mov
mov
dec
fwait
mov
mov
cwtl
pop
mov
pop
fildll
xor
mov
inc
dec
and
cwtl
addr16
aaa
push
jmp
sbbb
leave
jne
push
lea
and
data16
jnp
push
xor
inc
mov
insl
sbb
dec
fdivr
hlt
pop
daa
cmp
add
movsl
test
mov
popa
je
cmp
sub
fldl
test
clc
add
pop
fildl
mov
inc
xor
mov
inc
and
icebp
xor
push
sbb
jmp
test
jnp
jge
call
and
and
cmp
mov
movzbl
mov
mov
push
sub
adcb
and
movsl
sbb
dec
lret
push
out
lods
idivb
or
lea
loope
shlb
xchg
inc
stc
imul
out
mov
stos
xor
or
xchg
lahf
xchg
adc
jne
je
pop
cmp
pop
lret
add
adc
xchg
xchg
or
repnz
je
dec
xor
in
push
jbe
jb
jmp
pop
sub
hlt
xor
cmp
mov
rcrl
scas
loop
lods
fsub
xchg
sub
aad
cmc
jnp
jns
xchg
addr16
test
or
insl
lcall
adc
sub
pop
out
sub
jb
cwtl
into
add
mov
mov
ljmp
mov
insl
cmp
dec
ret
lods
ret
cld
xchg
or
imul
dec
ljmp
lods
lcall
and
mov
dec
es
inc
sbb
jne
shl
cs
fldl
lds
add
adc
pop
mov
fs
dec
cmp
adc
jb
dec
lds
les
ljmp
cwtl
dec
mov
add
xchg
je
xor
imul
repz
cmp
jge
push
mov
in
mov
or
popa
mov
mov
lock
outsl
movsl
int
inc
mov
leave
into
add
bound
inc
inc
icebp
dec
cmc
dec
pushf
adc
cmp
or
adc
outsl
int
pop
inc
jecxz
mov
lods
pop
pop
sub
cmp
jecxz
dec
cmp
jg
cld
mov
dec
pop
xor
or
push
cli
jno
or
mov
stos
xor
stos
or
repz
xchg
pop
scas
cmp
or
cmp
pushf
jmp
xor
aam
pop
sbb
orl
dec
pcmpeqd
jge
inc
push
pop
cmp
push
into
add
sub
test
mov
xlat
xchg
inc
notl
mov
icebp
adc
popf
inc
dec
jmp
ret
bound
out
mov
and
push
fists
adc
hlt
inc
and
inc
mov
sahf
pop
cmpsb
pop
loopne
sub
cmp
imul
cltd
mov
mov
pop
mov
and
adc
or
ret
mov
es
shll
test
jl
out
xor
and
mov
mov
mov
or
mov
cmpsl
dec
aaa
jno
mov
imul
leave
call
add
inc
cmp
push
mov
xchg
mov
js
shl
pop
xor
pop
mov
ret
loopne
xchg
rcrl
mov
jmp
sub
xor
fldenv
loop
add
pop
xor
mov
dec
xchg
xchg
fst
pop
es
lock
enter
js
mull
pop
lea
addr16
std
adc
and
sbbl
push
mov
mov
inc
push
je
ud1
push
cltd
jo
cmpsl
pop
jnp
fsubrs
xchg
mov
aas
inc
aad
add
dec
pop
es
out
pushl
shl
xchg
movsl
jb
jge
xor
imul
lock
mov
test
xor
in
mov
jne
inc
cld
loop
mov
pop
cmpb
fisttpl
mov
sbb
nop
sbb
jecxz
sarb
testl
add
and
outsl
adc
dec
mov
fcoms
pop
and
test
xchg
and
fildl
jae
mov
pop
std
cmp
mov
mov
add
fiaddl
add
arpl
jo
push
mov
push
mov
xor
sub
fdivs
cmp
or
mov
push
or
and
add
fcoml
cmpsb
repnz
jge
or
leave
jecxz
fwait
pusha
add
mov
pop
iret
aas
cmp
and
sbb
sbb
dec
xchg
incl
xchg
xchg
mov
enter
loopne
ljmp
push
in
fs
xor
jp
aad
inc
lret
pop
jp
outsl
jle
fs
mov
fldcw
push
mov
movsb
lods
lret
test
les
mov
outsb
movsb
incb
mov
in
cmc
mov
or
mov
cmp
push
adc
or
push
cmp
dec
cwtl
leave
push
mov
jp
jnp
push
push
and
push
cmpsb
jmp
aad
pop
ss
push
cmp
xchg
fstp
sbb
icebp
ficomps
ror
imul
inc
mov
push
sbb
adc
jne
shl
jecxz
clc
mov
sub
jae
stos
or
or
xchg
mov
daa
icebp
add
movsl
mov
daa
cmpsb
cs
inc
inc
icebp
fdivrl
iret
testb
imul
push
jo
std
jecxz
pop
and
pop
int3
dec
sbb
pop
in
lea
inc
stos
inc
dec
clc
sub
iret
in
in
jp
adc
pop
jge
mov
cmc
pop
out
lret
dec
mov
sti
mov
mov
nop
je
xchg
es
ret
cmp
mov
add
stos
xchg
or
fs
xor
in
mov
je
sbb
fmuls
fisubrl
xor
or
jnp
mov
lea
cmpsb
adc
mov
pop
loop
mov
cmp
pop
xchg
lahf
pop
inc
push
pop
sub
push
jnp
aam
jl
inc
out
imul
cmp
aaa
xor
cmpsl
sbb
push
pop
decb
stos
inc
and
js
out
jns
push
arpl
pop
pop
mov
inc
mov
aam
in
add
jb
adc
fwait
push
and
push
fsubrl
sbbl
lcall
testb
add
repz
sub
inc
push
dec
pop
popf
push
xor
hlt
sarl
pop
imul
aam
fmuls
adc
out
xchg
repz
xchg
mov
loopne
mov
mov
push
rorb
inc
std
push
sub
push
push
arpl
out
sub
outsb
lock
lret
popf
or
inc
dec
xchg
cmpsb
cmp
inc
adc
arpl
addl
aad
js
xchg
out
fidivl
xchg
add
and
std
into
push
add
jmp
add
insl
sbb
or
in
pop
fbld
lea
mov
or
ss
xchg
insb
and
or
jecxz
ds
out
ss
jl
xor
insl
jge
enter
xchg
pop
hlt
mov
mov
mov
add
iret
sbb
add
mov
inc
xor
mov
fimuls
xchg
test
in
or
jne
push
enter
sub
mov
sub
xor
ss
orb
in
mov
addr16
fsubrs
xchg
cmp
sbb
and
mov
jg
pop
popf
add
cmp
dec
dec
pop
push
adc
sub
inc
mov
out
pop
cmp
push
insl
or
jb
inc
pop
jp
or
fwait
sbb
inc
test
mov
mov
sti
addr16
outsb
fimull
and
add
fldenv
inc
int3
mov
dec
call
repz
lods
sbb
cmc
push
movb
mov
pop
xor
mov
js
adc
cmp
ficompl
jbe
mov
addr16
cltd
andl
cmc
mov
nop
xchg
push
sbb
gs
sub
mov
rolb
xchg
mov
dec
mov
stc
out
fwait
adc
xor
stos
mov
mov
fwait
sbb
fistl
sub
jle
out
push
sub
xor
ds
cmp
cmp
push
inc
popa
in
and
ds
pop
cmp
fdivr
gs
push
into
aas
pushf
fdecstp
add
cs
popf
loopne
jecxz
inc
push
adc
cmpsl
jl
clc
lods
sub
jge
fstl
ljmp
push
jno
push
outsw
mov
lcall
pop
inc
psrad
ds
aaa
jno
jmp
and
add
arpl
aam
inc
add
push
adc
xor
mov
in
push
pop
pusha
dec
or
push
imul
outsb
and
subb
pop
sub
cmpsb
xchg
fsubrs
and
cmp
mov
cmp
and
add
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
xor
xor
xor
push
push
movzwl
adc
mov
mov
or
mov
mov
mov
or
andl
xorl
movl
movl
mov
mov
sub
mov
xorl
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
orl
mov
mov
or
sub
xor
xor
and
mov
sbbl
orl
adc
mov
mov
xor
xor
mov
sub
and
sub
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
call
cmpl
jb
add
mov
adc
orl
mov
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
mov
add
push
and
mov
mov
lea
mov
mov
mov
mov
andl
xor
subl
add
adcl
mov
dec
mov
sub
mov
mov
andl
add
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
mov
xor
mov
andl
add
movl
cmp
je
movl
mov
jmp
mov
mov
cmp
movl
jne
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
mov
xor
mov
dec
xor
adc
add
xor
or
adc
mov
mov
adcl
mov
xor
addl
add
imul
mov
orl
xor
movl
add
movl
cmp
mov
mov
push
movl
je
movl
mov
orl
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
subl
mov
addl
xor
xorl
add
xorl
imul
mov
movl
jmp
and
mov
xor
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
mov
mov
sub
jmp
inc
sbb
fwait
jnp
mov
cs
insl
add
jp
pop
jp
or
repnz
sbb
add
fwait
sar
or
stos
jo
xchg
das
jge
ja
pop
test
mov
mov
dec
xor
popa
dec
daa
fidivs
pop
jnp
test
imul
sbb
shrb
cmp
lds
sbb
orl
inc
in
add
or
pop
and
push
lret
mov
leave
mov
adc
cmp
dec
xor
insl
scas
dec
fdivrl
push
insl
pop
mov
sahf
add
mov
popf
addr16
pusha
scas
xor
xchg
test
addr16
sub
pop
dec
fsts
gs
xorl
pop
xchg
push
mov
mov
outsl
pop
xor
mov
mov
ret
cmp
mov
stc
lret
mov
cmc
adc
lods
push
cmp
icebp
jb
jl
and
out
push
inc
scas
fbld
cmc
inc
push
jnp
cmpsl
iret
call
sbb
enter
add
xchg
and
bound
shrb
xlat
and
loopne
push
mov
div
enter
jle
adc
fiadds
pop
jae
out
loop
mov
daa
dec
xchg
xor
mov
mov
ljmp
pop
jo
pop
orl
sbb
mov
and
cmpsb
mov
shrb
lods
or
push
sbb
lahf
mov
rorb
stos
cmp
or
lds
test
hlt
test
call
fisubl
movsb
xchg
xor
push
dec
pop
jno
xchg
nop
test
add
xchg
test
or
mov
fisttps
xor
andb
and
insl
cmp
jle
out
pushf
cmp
sbb
dec
cmp
repz
je
push
adc
lods
loope
cmp
push
jae
enter
inc
dec
push
test
jle
jmp
and
repz
sbb
sub
mov
dec
push
fadds
dec
fmull
dec
sub
add
pop
adc
fwait
dec
dec
sar
xor
shrb
jl
inc
popa
cwtl
push
jnp
dec
push
cmp
stos
popa
push
mov
hlt
test
cmp
scas
inc
addr16
in
inc
jo
jns
rorl
push
les
jecxz
xor
stc
mov
cltd
and
gs
jae
cmp
jnp
mov
pop
jo
mov
iret
jg
push
movb
loopne
jno
xchg
dec
sub
and
jns
pop
aaa
push
mov
addl
mov
test
cmp
loop
add
jl
mov
bound
jnp
adc
jns
aam
inc
repnz
push
dec
rcrl
add
les
in
ds
mov
sahf
jae
jnp
fmul
xchg
jb
mov
xchg
push
out
jp
jp
jno
inc
ss
lahf
add
inc
popa
jecxz
jo
pushf
or
daa
lret
rcrl
lret
mov
aas
jmp
jmp
sub
push
in
sub
aad
push
inc
stc
shll
lret
push
loope
bound
icebp
ds
dec
ret
mov
jnp
inc
and
mov
dec
int
stc
mov
repnz
sub
jl
xchg
push
add
mov
jp
cmc
movsb
pop
dec
xchg
aad
xchg
lcall
fsincos
mov
lock
mov
push
mov
cwtl
call
or
sbb
daa
pop
push
xor
decb
ljmp
int
mov
filds
push
clc
sub
je
or
icebp
push
sub
cli
cmpsb
mov
out
push
in
push
xchg
push
cmp
inc
lods
xchg
dec
idiv
mov
mov
outsb
fwait
addr16
and
loop
enter
cmp
jg
cmp
dec
and
jne
push
popa
mov
adc
jb
mov
jmp
and
flds
dec
sbb
idivb
lret
scas
push
xchg
inc
push
into
push
jp
repz
mov
xor
pop
rcrl
shlb
pop
fcomip
and
movsl
ja
or
clc
out
sahf
add
cmp
push
mov
lcall
xchg
fldl2e
dec
das
add
dec
sarb
lea
adc
mov
mov
fadd
sbb
test
mov
cmp
inc
aad
mov
mov
nop
jo
and
sub
mov
loope
imul
push
cwtl
jle
mov
push
jno
or
inc
xor
das
push
dec
mov
sti
dec
popf
ud1
jo
push
repz
movsb
inc
pushf
call
mov
es
and
xor
lock
gs
adc
push
fisubl
dec
pop
sbb
push
xor
jne
inc
out
jae
dec
dec
stos
sbb
xlat
mov
inc
in
shl
mov
inc
mov
pusha
xor
jmp
mov
inc
aaa
movsl
cmp
aad
push
ljmp
add
inc
rcr
mov
cmp
out
dec
add
out
and
cmpb
mov
inc
ljmp
frstor
popf
js
and
add
cmpsb
out
jp
mov
lods
sub
sarb
xchg
jo
stc
les
mov
outsb
cmc
lods
add
iret
stos
push
mov
xchg
stc
xor
clc
xchg
daa
enter
adc
dec
out
mov
xlat
cmp
xchg
jae
call
not
push
jo
push
pop
mov
adc
clc
sub
testl
jge
cmc
cmp
movsb
jae
notl
xchg
add
fcmovb
inc
xchg
ljmp
or
sub
xchg
pushf
jmp
fisttps
jp
sbb
clc
jg
test
mov
mov
mov
xor
or
mov
mul
jmp
cmp
push
pop
lods
mov
mov
js
jns
mov
sahf
iret
add
inc
out
mov
lock
cmpsb
xor
movups
insb
inc
loopne
cmp
push
adc
icebp
mov
adc
fbstp
push
and
movl
les
pop
mov
lret
and
test
pop
jbe
sbb
or
lahf
sbb
sub
lcall
iret
lcall
outsl
lods
notb
movsb
sbb
cld
xchg
and
shll
popa
mov
repnz
mov
adc
popa
ds
or
xor
inc
das
cltd
pushf
mov
out
lods
ja
ret
mov
add
imul
cmp
xchg
lock
ja
push
ds
lcall
aaa
ss
push
push
cmp
xchg
cmp
bound
sub
mov
cs
incl
call
sarl
xchg
pop
sub
outsb
mov
loope
jbe
pop
or
jb
fs
out
lods
inc
sahf
ljmp
lahf
pushf
lret
decb
aas
nop
aad
push
movl
inc
inc
add
int3
push
sbb
les
movsb
inc
shlb
jl
es
loopne
mov
scas
ficoml
adc
xchg
in
sbb
xor
xor
cld
jge
jge
xchg
mov
jecxz
jae
ror
sbb
scas
mov
or
es
ret
pop
mov
sub
mov
mov
pusha
dec
push
push
mov
mov
notl
sub
push
fwait
das
fistl
and
cmpsl
mov
dec
repnz
nop
push
ss
xchg
jg
hlt
pushf
mov
mov
sbbl
fnstsw
sub
mov
repnz
push
jo
sub
mov
sbb
push
xor
divb
mov
lods
pop
fldenv
mov
cmp
lcall
nop
mov
inc
fdivr
mov
cld
mov
jae
stos
out
pop
std
add
add
std
into
xchg
mov
fs
inc
fidivl
lock
repnz
bound
mov
or
jmp
cmp
jb
imul
pop
icebp
test
sbb
bound
sbb
arpl
jg
loop
dec
test
and
in
ljmp
cmp
nop
push
cmpsl
loopne
pop
push
sub
imul
push
cld
pop
divb
mov
lods
jmp
fists
mov
ss
lret
jmp
arpl
cmp
stos
aad
loopne
dec
into
fdivl
pop
scas
xchg
bound
add
nop
aaa
sbb
pop
push
mov
jne
mov
pop
and
mov
test
mov
and
dec
push
push
mov
in
mov
int
xchg
fcoms
adc
cltd
jmp
popl
ss
cld
or
sbb
xor
xor
sbb
mov
sbb
or
imul
sbb
rolb
mov
inc
adc
xor
out
sub
jl
sbb
jge
pushf
fdivp
jnp
sub
sub
imul
pusha
lret
inc
aas
mov
imul
mov
jg
mov
jnp
push
aaa
mov
pop
sar
add
add
jmp
outsl
daa
js
cmc
mov
lods
or
in
mov
sbb
xor
les
mov
out
outsb
sarl
dec
cmpb
daa
icebp
arpl
insb
dec
decb
test
daa
xor
push
into
popa
inc
cltd
sbb
shlb
decb
jae
dec
int3
add
sti
cli
aam
int
add
faddl
xchg
cwtl
mov
cmp
jg
adc
test
scas
insl
mov
xor
mov
dec
mov
cld
mov
lret
or
dec
loop
jg
xchg
sub
mov
cmp
test
dec
xchg
sbbb
mov
inc
ror
bound
mov
out
inc
pop
aas
lock
mov
lret
xor
lcall
clc
xor
das
jno
pop
das
xchg
inc
xchg
cmp
pop
shr
dec
lods
dec
pop
push
mov
mov
inc
push
jecxz
lods
dec
loopne
or
imul
lods
sub
dec
das
ss
inc
mov
cmp
push
xchg
iret
mov
push
ja
xchg
ljmp
mov
lds
fcomp
fninit
cld
mov
dec
push
cmp
aas
cmpb
ss
leave
add
lods
dec
test
sub
scas
stos
mov
xlat
lahf
cmp
dec
jl
inc
and
inc
pop
xchg
dec
leave
xlat
rcr
pop
xchg
lcall
rcll
mov
out
mov
ja
outsb
das
pop
push
fisttpll
loop
pop
push
scas
lcall
adc
push
fcomps
mov
cmp
pop
movb
sub
inc
cmp
orl
aas
mov
sbb
movsb
push
jle
add
ficomps
or
xchg
lods
aaa
in
in
gs
add
and
repnz
or
push
pop
xor
xchg
and
sbb
loop
inc
jns
sub
and
or
pop
inc
or
xor
lods
push
mov
insb
cltd
in
lret
sbb
jecxz
pop
pushf
shl
pop
sub
mov
add
cmp
outsb
mov
in
pop
gs
dec
dec
or
popa
js
mov
pop
pop
xchg
imul
repz
repz
xor
dec
daa
pusha
fdivrl
xor
and
daa
fistl
inc
add
cmpl
cli
in
mov
mov
dec
jne
popa
test
fs
ja
icebp
and
or
or
jne
loope
sbb
clc
add
xorl
jno
mov
std
cmp
mov
inc
mov
sarl
mov
add
mov
push
out
sbb
lcall
ja
sub
imul
subl
cmp
lret
lock
add
dec
sbb
popa
fdiv
adc
cmp
dec
into
scas
cli
stos
adc
ret
cmc
pop
pop
iret
out
or
add
cmp
xchg
dec
ljmp
lea
test
jle
jg
sub
xchg
push
xor
ljmp
sbb
mulb
movsl
call
sbb
cmp
fs
mov
add
test
push
out
stos
mov
adc
cmpsl
fldt
fwait
xchg
xchg
xor
mov
pushf
rcrl
dec
xor
and
int3
adc
mov
jae
inc
fistpll
pop
out
adc
lahf
xchg
mov
adc
adc
mov
lods
push
aam
and
cltd
insl
xchg
test
jns
mov
add
dec
mov
pop
jp
outsl
and
in
add
daa
ja
addb
movl
clc
cmp
xlat
adc
mov
push
pop
and
lcall
or
inc
lret
inc
daa
stc
mov
lods
jb
arpl
seta
es
ss
pop
shlb
call
cmc
xlat
shll
add
inc
add
leave
and
enter
sbb
imul
pop
adc
lcall
and
adc
jge
adc
sbb
aam
scas
and
jg
ljmp
jo
das
lret
cmp
flds
gs
cmp
jle
jl
sub
shrb
cltd
mov
leave
das
mov
xchg
lods
xchg
sub
add
sbb
push
stc
int
lret
and
stos
insl
outsl
lret
ret
in
andl
inc
cs
xchg
pop
mov
adc
outsb
je
pop
shl
test
cmc
test
test
out
and
les
outsl
sbb
pop
push
pop
lcall
inc
int
scas
mov
andb
and
inc
lods
popa
nop
pop
push
and
mov
mov
daa
dec
jmp
or
mov
pop
shll
shll
cmp
lods
lahf
push
push
jge
xorl
push
mov
lcall
arpl
insl
addr16
test
dec
add
in
test
mov
lock
pop
lods
push
scas
or
xor
dec
mov
int3
jge
imulb
mov
scas
inc
cmc
ret
test
cmpsb
outsb
aas
push
test
sti
xchg
loop
sbb
dec
pop
out
mov
add
jns,pn
cmp
ds
inc
jo
sbb
sbb
mov
repz
in
out
mov
insl
xor
sbb
xchg
push
leave
jne
outsl
inc
lret
mov
sub
iret
clc
mov
outsb
addr16
mov
pusha
xchg
jl
jnp
and
push
xchg
repnz
mov
in
data16
lods
and
inc
cs
bnd
imul
enter
add
mov
stc
xchg
jmp
xor
lret
repnz
outsb
hlt
insb
push
sub
jno
pop
cmp
fnsave
mov
sarb
mov
cmc
shlb
pop
add
subl
xchg
inc
inc
sahf
movsl
ret
dec
push
push
outsb
mov
mov
add
adc
jl
adc
pop
xchg
pushf
lcall
fdiv
scas
popa
sti
sbb
mov
rcll
imul
cli
cmp
mov
out
out
das
mov
out
lods
xchg
mov
nop
cs
ficoms
lock
and
add
push
and
popf
loop
dec
cltd
das
loopne
das
movsb
inc
mov
push
std
adc
jb
scas
addr16
push
inc
into
les
fstpt
insb
or
sahf
jb
imul
loopne
cltd
rcr
shll
mov
xchg
mov
cltd
push
orl
jmp
or
lock
push
or
add
push
jp
mov
sub
inc
sahf
jno
imul
arpl
std
mov
leave
mov
mov
xchg
sarl
data16
dec
mov
fs
push
push
dec
add
iret
push
push
push
mov
and
testb
or
add
cmp
push
std
pusha
sub
pushf
add
ret
xchg
push
mov
dec
lret
lcall
addr16
and
bound
imul
into
sub
sahf
pop
mov
icebp
enter
fbstp
dec
data16
jp
imul
mov
gs
jae
cld
enter
stc
mov
mov
adc
xor
int
and
cmp
xchg
mov
xchg
xchg
insb
sbb
std
pop
or
or
mov
mov
movb
and
lret
dec
iret
filds
scas
in
sahf
ja
jnp
lds
scas
mov
jno
push
fwait
repz
push
clc
and
outsb
or
sbb
js
xor
test
dec
dec
xor
insb
ds
mov
leave
fisttpl
jns
shll
or
mov
loop
int
movb
xor
and
leave
cmp
dec
add
out
hlt
nop
xchg
mov
pushf
sbb
mov
outsl
fwait
std
inc
and
pushl
mov
loope
lret
stos
push
push
mov
test
mov
mov
popa
enter
cmp
sbb
adc
aaa
test
dec
daa
movsw
sti
push
repnz
cmpsb
hlt
test
icebp
sbb
popa
adc
sbb
cmp
and
pop
jb
cmp
lock
jecxz
xor
in
outsl
mov
aad
sbb
and
pusha
jl
inc
ds
push
imul
mov
cmp
xor
xchg
out
mov
cmpsb
xchg
mov
mov
jb
lahf
std
bound
xor
xlat
xchg
mov
xchg
xchg
xlat
outsl
push
bound
xchg
xlat
xor
int
inc
xchg
pusha
inc
pop
in
pop
lcall
shll
fdivrl
xchg
lcall
mov
push
jo
or
sbb
fwait
jo
push
push
lahf
mov
sub
push
jecxz
pop
mov
dec
out
and
jnp
dec
and
std
adc
cmp
popa
mov
insb
add
push
add
push
fwait
pop
ja
andl
mov
icebp
jmp
cmp
in
cmc
ja
adc
js
cmc
mov
or
push
xlat
bound
fwait
lods
rorl
cmp
stos
xchg
mov
inc
cwtl
adc
mov
xrelease
js
cmp
shl
sub
scas
add
or
mov
adc
dec
andb
pop
jbe
ret
push
xor
iret
or
add
sub
je
mov
jae
push
jb
clc
mov
into
push
test
shl
jns
xchg
push
xor
mov
inc
xchg
pop
jmp
fwait
and
dec
pop
bound
inc
dec
test
mov
cld
jl
sub
fldcw
mov
outsl
repnz
sahf
or
outsb
mov
lock
push
orl
fwait
add
loopne
xchg
xchg
icebp
adc
fbld
movsb
std
mov
mov
dec
insl
and
mov
cmp
into
adc
dec
dec
mov
stos
cmp
add
fcompl
cmpsl
call
popf
push
xchg
sbb
aas
sub
inc
sbb
add
in
or
xchg
pop
sbb
int3
xchg
sti
add
scas
xchg
inc
or
in
jns
xchg
mov
adc
xchg
in
mov
jbe
rep
xchg
lods
lods
in
scas
inc
faddl
jo
dec
sub
and
icebp
mov
adc
popa
xchg
mov
xor
cwtl
imul
adc
jne
test
or
js
leave
inc
jge
pop
sub
add
mov
jae
inc
lret
test
add
mov
adc
loop
inc
int
and
mull
out
mov
jg
sub
out
pop
or
ds
shrl
out
fisubl
xchg
inc
inc
shlb
int
adc
out
mov
imul
pushf
mov
les
cmp
je
fcompl
out
push
mov
psrad
sti
cmpb
pop
inc
negl
das
mov
leave
pop
push
iret
test
dec
mov
mov
adc
fisubrl
sar
popf
adc
or
js
lods
dec
lahf
int
jne
sbbb
mov
xor
jl
inc
mov
and
in
lcall
rclb
pushf
or
movsb
pop
rcrb
int3
aam
test
ss
subl
in
arpl
popa
cmp
jle
jns
inc
aad
jae
mov
add
lods
int3
jmp
add
fnsave
in
pop
push
sbb
sbb
or
ja
jg
add
and
dec
mov
test
and
inc
jnp
ja
out
mov
imul
jns
xor
test
or
pushf
mov
int3
stos
mov
jae
in
xchg
pop
addr16
sbb
push
xor
outsb
inc
ret
addr16
stc
cmp
sub
or
mov
scas
jg
mov
aad
push
andb
lods
cmc
or
scas
lods
mov
sub
dec
orb
jge
pop
ret
leave
popf
arpl
ret
xor
hlt
mov
pushf
dec
cmc
mov
in
or
int3
xor
in
scas
dec
ja
mov
xchg
subb
pop
cld
jns
fisubrs
movsl
jno
scas
inc
xor
lea
fisubl
push
mov
adc
mov
or
inc
xor
in
sbb
cld
sahf
nop
cmp
push
jnp
xor
loop
sahf
insl
jo
jle
pop
js
popf
outsb
aad
xlat
ljmp
sub
or
inc
or
aad
icebp
pop
or
mov
mov
pop
hlt
mov
or
pop
mov
add
xchg
adc
adc
lret
out
push
inc
aaa
mov
addr16
rcrb
fcoml
aam
mov
scas
mov
push
out
paddw
add
sbb
lock
pop
sti
loopne
int3
out
lret
enter
cmpl
test
loope
test
lea
jne
andps
cli
add
xchg
mov
cwtl
dec
dec
int3
in
mov
sbb
fadd
scas
mov
movsl
cmp
clc
lock
mov
test
clc
mov
mov
sub
lods
adc
mov
jmp
orl
popa
stos
ss
stc
enter
sub
mov
call
sbb
repz
ret
sub
aas
inc
jmp
fstpt
lcall
push
pop
mov
scas
std
aam
enter
mov
outsl
and
pop
push
mov
cmc
xchg
adc
jnp
sbb
daa
cmp
out
sbb
dec
mov
ret
outsl
adc
in
pop
sarl
push
xchg
push
imul
addr16
add
ja
mov
dec
push
jmp
jp
push
jg
adc
push
xor
out
prefetch
sub
mov
ret
sub
xchg
int
insb
ja
sarl
mov
imul
mov
jno
out
inc
inc
lret
aad
mov
in
dec
xchg
movsb
test
in
in
sbb
xchg
cli
in
adc
jnp
mov
stc
mov
mov
or
push
jl
xchg
mov
call
ret
jle
scas
jbe
mov
ja
je
outsl
cwtl
addl
push
mov
sub
rorb
popa
cld
xor
mov
mov
push
mov
out
and
fiaddl
or
pop
mov
xor
les
sub
cltd
aam
rcrl
ljmp
or
stos
and
dec
je
rorb
mov
mov
push
test
dec
mov
icebp
dec
addr16
sub
sub
cmp
nop
mov
xor
mov
in
out
fmull
dec
jno
or
adc
call
pop
fwait
aaa
cld
pop
inc
adc
or
shlb
mov
roll
addb
pop
std
push
cmpsl
cld
and
jae
lds
push
add
cmc
cmp
push
sub
call
out
popa
lea
inc
jb
arpl
in
std
xchg
mov
nop
mov
push
and
cwtl
push
into
loop
xchg
mov
lahf
push
fdivr
mov
sub
inc
or
mov
mov
pop
div
or
adc
sub
stos
test
jle
jb
and
sub
inc
stos
push
jb
dec
xchg
lcall
xchg
out
jne
shll
ret
mov
enter
pop
lods
cmp
gs
and
mov
test
pop
lret
icebp
mov
mov
sbb
push
filds
xchg
rcll
and
and
insb
notl
add
xchg
add
das
outsl
jb
mov
jns
cmc
movsl
adc
adc
cmovp
out
xchg
cmp
sarl
std
and
sub
jmp
daa
mov
enter
cwtl
mov
comiss
mov
cmp
daa
pusha
pop
cmp
xchg
jnp
lret
or
fwait
ret
xchg
mov
call
jmp
adc
loop
loope
sub
push
ret
mov
jno
fnstcw
push
in
dec
fs
rcrl
test
data16
sub
or
lods
imul
add
dec
sbb
pop
ret
sub
stos
push
test
cmp
inc
lret
sub
or
mov
lret
xchg
insb
out
fdivrs
dec
pop
adc
icebp
mov
gs
ret
mov
movhps
adc
mov
and
cmp
je
adc
jp
inc
xor
ret
ss
sub
je
mov
sub
ds
clc
pop
insl
jmp
add
push
enter
jg
lcall
add
pop
lret
push
pop
sti
sahf
repz
imul
xchg
and
stc
lods
out
gs
cld
dec
cmp
les
movsb
mov
stos
pop
mov
in
mov
sub
push
cmp
out
jle
xchg
adc
imulb
mov
imul
int
dec
fildl
inc
mov
loope
push
imul
hlt
cs
jb
cmp
rcl
in
jno
add
gs
push
adcb
cmpsl
test
jo
xchg
mov
fs
mov
cs
xor
xor
loopne
jg
mov
mov
mov
fs
push
imul
inc
push
xlat
cld
ret
repz
sarb
inc
ret
jno
gs
subl
popf
jnp
aam
jp
mov
flds
ret
push
lds
jnp
std
push
or
js
lods
cmp
and
and
leave
jg
add
stos
and
dec
hlt
int3
cmp
adc
or
add
cli
mov
mov
mov
lock
imul
sbb
lods
sti
aas
addb
pushf
push
aad
repnz
repnz
iret
inc
mov
loop
cmc
mov
std
cld
das
fwait
lahf
lock
sbb
and
mov
mov
inc
jle
out
xor
jle
mov
jmp
adcl
enter
stos
fldl
adc
int3
aam
es
dec
pop
daa
clc
std
pushf
mov
scas
inc
and
or
scas
mov
mov
mov
or
cmp
jle
push
mov
pop
push
sbb
push
jmp
pushf
dec
mov
push
popa
repnz
mov
mov
sarb
in
xchg
loope
shrb
push
mov
int3
in
rcl
push
popf
ss
adc
loop
sbb
call
adc
inc
sub
lods
mov
fsubl
or
lods
or
inc
adc
cmpsb
push
daa
push
movsl
dec
adc
mov
lods
jg
data16
in
add
ljmp
test
incl
xor
mov
adc
scas
and
movsb
mov
int3
jns
sub
add
movsb
push
stos
cmp
jne
andl
xlat
lock
mov
fcoml
add
xchg
sbb
insl
cmp
or
pop
fs
or
xlat
inc
and
push
mov
sarl
mov
and
mov
push
into
inc
js
jne
push
push
rorl
js
or
test
xor
sub
mov
pop
inc
mov
add
jne
or
cmp
test
push
xor
and
cmp
mov
add
push
xchg
inc
sub
adc
mov
jmp
repz
adc
ror
pop
scas
mov
xor
mov
out
jnp
mov
rclb
mov
sbb
push
outsl
sbb
pop
inc
stos
mov
pop
pop
adc
pusha
test
popf
int3
sub
fistpll
mov
ret
bound
in
arpl
jbe
rorb
les
movsb
sbb
mov
mov
push
fstpt
mov
addr16
jbe
sub
adcb
stc
in
dec
adc
or
inc
push
lret
push
ror
mov
xor
movsb
pop
outsl
adc
jp
popa
mov
mov
add
add
pop
rorb
repz
sti
dec
or
ret
mov
jmp
pop
cmp
fcoml
add
and
into
adc
in
jle
or
lahf
push
icebp
inc
xchg
pop
inc
pop
jo
inc
push
jbe
xchg
xchg
or
popa
push
jnp
imul
adc
pop
cmp
les
loope
xor
out
xor
inc
ret
pop
out
rorl
loopne
ds
out
adc
pop
out
outsb
sub
mov
pop
fs
inc
lea
lds
push
aad
inc
cwtl
jns
xor
arpl
jnp
lea
sbb
mov
mov
outsl
idivb
icebp
mov
lock
sar
ret
cmp
or
push
aam
xor
cs
jl
cmp
sub
inc
lock
cmp
popf
out
mull
lret
cmpsl
push
popf
outsl
mov
push
cmp
js
dec
das
inc
dec
jns
pop
push
pop
test
mov
stos
call
in
hlt
icebp
jl
jmp
adc
mov
push
pop
sub
and
jnp
imul
push
je
in
pop
mov
punpcklbw
mov
push
rcrb
fsubr
mov
out
push
push
jg
repz
dec
dec
mov
adc
push
and
xchg
in
dec
inc
and
xor
add
or
add
push
aam
ja
repnz
push
adc
jmp
sub
jno
outsb
or
lods
jge
jno
or
int3
sti
pop
ret
fcmove
loope
icebp
sahf
ds
cmc
fidivs
cmp
cld
inc
test
mov
inc
loopne
inc
ret
mov
mov
cmpsb
icebp
adc
jle
mov
mov
adc
cmp
inc
add
adc
insb
jnp
ja
pop
jl
sub
outsl
enter
mov
notb
pop
jge
scas
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
push
add
movl
subl
movl
and
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
xor
xor
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
jmp
push
pop
rcll
fwait
pop
push
outsb
adc
fldl2t
jp
sbb
jp
mov
subb
maskmovq
imull
enter
xchg
xor
stos
in
jb
fistpll
movsb
add
sbb
pop
xchg
loope
imul
add
std
cmc
mov
xor
sub
or
mov
out
push
daa
jmp
ret
push
in
pop
jne
pusha
jno
inc
ljmp
jns
jmp
inc
dec
js
mov
movb
push
mov
loope
pop
aaa
xor
ljmp
mov
mov
or
stos
mov
fcomps
int3
out
add
jle
cwtl
xchg
lahf
stos
mov
cwtl
cmp
sbb
fs
aad
cmp
mov
sbb
rcrl
popa
inc
mov
add
fsubrs
in
xor
loop
xchg
mov
dec
pop
dec
scas
adc
shll
sbb
jmp
mov
sbb
shll
int
xlat
scas
xor
jle
add
mov
addr16
repnz
mov
pop
pop
mov
xchg
jb
ror
sbb
cli
and
push
ljmp
cmpsl
mov
adc
fiaddl
jne
xor
les
adc
jmp
mov
or
push
adc
loop
int3
pop
filds
pop
icebp
mov
pop
push
pop
pusha
iret
lahf
adc
adc
cmc
sub
push
lahf
mov
inc
imul
push
das
adc
xchg
cmp
std
xchg
xlat
into
jle
cmp
insl
or
jg
in
jle
pop
mov
dec
dec
push
add
inc
mov
jne
or
mov
dec
cmpsb
cld
sahf
xchg
lret
dec
movsb
inc
or
pushl
adc
cld
pop
fucomp
xor
bnd
rcrl
lcall
xlat
xchg
scas
push
out
and
mov
xchg
cmp
ja
mov
mov
xchg
jmp
or
shll
clc
sub
imul
cwtl
sub
scas
or
push
aas
pop
dec
repnz
rcl
movsl
jns
gs
test
pusha
mov
js
fs
jg
jg
push
out
hlt
mov
aam
cmc
fbld
push
pushf
pop
cld
fnsave
and
notb
in
rcll
mov
add
push
jge
xchg
out
scas
or
jmp
mov
test
mov
pop
mov
sub
sub
mov
cmp
jne
stc
lret
mov
shll
mov
scas
addl
fldl
sub
xor
cld
dec
jnp
mov
in
sbb
es
or
jmp
out
pushf
addl
or
or
cli
call
repz
mov
pop
insb
adc
xor
mov
pop
or
test
dec
mov
into
pop
xchg
leave
sub
mov
pop
and
mov
int
push
daa
inc
lcall
repnz
lret
jne
sti
mov
xchg
in
jnp
xor
push
sbb
xchg
imul
aaa
cmpb
aaa
outsl
xor
pushf
jne
lea
mov
sub
mov
jns
jae
cmc
sub
and
mov
bnd
add
cmpsl
jns
adc
or
out
push
adc
jne
and
hlt
mov
out
mov
aam
push
aas
adc
movsb
push
aas
sub
sub
movsb
in
mov
mov
aaa
outsl
push
add
mov
jns
adc
adc
lret
cmc
adc
mov
xchg
sbb
pop
in
hlt
mov
inc
shlb
mov
insb
bound
cmp
pop
in
test
sti
jb
add
rcrl
inc
shl
push
repz
and
std
scas
or
mov
mov
das
pop
pusha
ret
nop
std
adc
das
push
jae
xchg
adc
rcll
and
fdivp
shrl
fst
add
inc
loope
or
mov
jns
fcomp
mov
xchg
sub
mov
je
stos
cmpsb
imul
stos
popf
in
clc
cmpsl
fbstp
and
lret
in
outsl
dec
std
es
iret
loopne
mov
push
add
int
outsb
xchg
or
adc
rolb
leave
dec
mov
push
mov
push
inc
sahf
xchg
aad
fmulp
daa
enter
fnstsw
ds
pop
adcl
xchg
xchg
inc
stos
ja
jne
scas
or
pop
xchg
test
push
fdivl
scas
fisttps
std
pop
mov
popa
repnz
addb
neg
mov
sub
movsb
mov
dec
add
mov
inc
leave
push
call
add
das
in
mov
cltd
inc
or
hlt
sti
enter
cmpsb
sbb
aaa
in
jl,pn
xor
les
mov
stos
sbb
jmp
xchg
movsl
jo
sbb
outsl
or
fisttpll
sbb
dec
or
in
bnd
sub
jnp
mov
xchg
loope
lods
shrl
clc
lds
in
jp
popa
pusha
popf
jb
cmp
popf
push
jmp
mov
iret
push
lock
pusha
mov
aaa
adcb
jecxz
sbb
in
pusha
insb
cmpsb
or
lahf
nop
xchg
and
mov
or
mov
lret
jbe
call
sub
push
xchg
jmp
inc
data16
or
mov
lahf
cs
ror
lock
arpl
or
push
fstl
jecxz
imull
sbb
add
sub
mov
pop
negl
sub
inc
push
push
es
out
fcmovnb
ret
adc
mov
jno
dec
pop
js
rcll
or
or
aad
and
aad
and
or
add
icebp
pop
and
loop
into
aas
aas
rol
jecxz
out
clc
out
adc
je
ror
adc
and
lret
mov
clc
aas
dec
and
lea
pop
or
push
dec
or
movsl
mov
sahf
shlb
sbb
or
pop
push
rcl
outsl
rolb
pop
sbb
lret
or
scas
xor
sbb
add
xchg
jp
push
adc
lods
adc
sub
mov
adcb
and
scas
scas
jo
mov
push
stos
pusha
std
xchg
aam
fsubl
lret
in
insl
and
mov
in
aaa
adc
xor
jmp
imul
hlt
add
cmpsb
add
mov
mov
pop
loop
insb
mov
pop
dec
out
mov
gs
hlt
sahf
jae
repnz
inc
push
inc
rcrb
push
lret
mov
jae
push
xchg
push
dec
aam
mov
mov
test
popa
push
repz
inc
or
xchg
mov
xchg
xchg
or
dec
mov
sbbb
imul
aaa
aas
in
or
adc
addr16
dec
mov
sti
fdivs
stc
xor
mov
sub
and
stc
inc
mov
push
inc
ja
loope
or
adc
stos
lock
lods
test
or
fdivl
ret
mov
push
add
cmpsb
pop
insl
inc
pop
lcall
mov
aad
sti
fwait
gs
leave
xor
test
fnstcw
outsb
sahf
cmp
push
ret
push
xor
xchg
xchg
xor
inc
in
ja
stos
test
cmp
push
incl
pushf
fisubl
add
and
mov
loopne
add
das
je
inc
or
icebp
or
loopne
sub
dec
lds
fnsave
jecxz
dec
addr16
push
mov
mov
mov
addr16
clc
out
mov
xchg
push
cmp
cmp
popa
push
das
imul
xlat
leave
lret
pop
mov
sub
mov
add
sarw
hlt
clc
jle
shrl
cltd
push
jp
test
pop
and
xlat
iret
xor
lods
and
testl
or
add
pop
das
adc
cmp
ret
icebp
test
mov
mov
cli
adc
push
clc
sub
inc
push
movl
mov
mov
repnz
xchg
iret
fwait
sub
loop
inc
cltd
xor
es
adc
jno
add
out
test
pop
fimuls
or
cmp
js
push
js
cmp
add
mov
je
outsb
jne
fnsave
dec
rolb
mov
bound
stos
les
mov
add
xchg
insl
call
pop
pop
mov
jae
xchg
cmp
daa
decb
ret
push
mov
mov
mov
test
xchg
and
mov
xchg
es
adc
push
iret
aam
fidivrs
inc
imul
jne
filds
mov
add
lods
gs
in
aas
push
fldl
int3
sub
je
jnp
jb
dec
popa
outsl
out
xchg
pop
dec
iret
add
out
sahf
loop
inc
stos
bound
mov
out
pop
sbb
xchg
xchg
jp
pushf
pop
movsb
push
xchg
xchg
dec
jb
sbb
xchg
dec
sbb
test
imul
jne
push
outsb
insl
sbb
or
push
jg
imul
inc
inc
or
cmp
js
je
mov
xchg
test
pusha
xor
inc
sti
sahf
mov
fcomi
xchg
insb
dec
jo
sbb
xor
pop
sub
roll
jecxz
push
mov
lahf
sbb
pop
push
inc
sbb
test
cwtl
xchg
loop
out
xchg
int
add
jle
fstl
or
mov
rclb
and
lret
inc
mov
gs
mov
sbb
cmp
xlat
mov
fdivl
sub
xor
insl
test
add
jns
mov
push
out
xor
and
orl
inc
mov
sub
add
push
mov
pop
mov
pop
jbe
rol
in
stos
test
or
lea
dec
dec
dec
sub
sub
les
jbe
add
cld
pop
stc
pop
xor
popf
dec
ret
push
push
inc
repz
imul
adc
add
testb
sahf
mov
mov
out
imul
push
push
sbb
sub
jb
or
sbbb
hlt
xchg
and
test
and
mov
in
and
bound
xchg
lea
sbbl
std
out
aad
mov
ss
rcr
or
ffreep
or
pusha
pusha
fnstsw
dec
repnz
lds
inc
xchg
xchg
stos
xchg
enter
mov
sub
sbbb
jmp
test
daa
push
mov
jne
push
inc
gs
popf
xchg
push
enter
mov
nop
stc
sub
dec
mov
movsl
lds
cmpsl
int
sbb
inc
add
mov
aam
in
mov
jbe
push
mov
pop
push
imul
leave
pop
adc
popf
movsb
test
cmp
and
jbe
mov
cmpsl
repz
mov
cmp
dec
sahf
int
push
jne
jge
stos
imul
sbbb
data16
mov
push
iret
push
std
sbb
adc
sub
pusha
movsb
or
aas
cmp
jno
lea
xchg
arpl
inc
and
or
das
clc
aaa
push
inc
jecxz
pop
jbe
xchg
mov
dec
out
xchg
sbb
dec
pop
mov
mov
faddp
and
int
and
sub
push
or
imul
sub
in
aad
repnz
jmp
cld
icebp
mov
fimull
jp
pop
mov
push
clc
aad
mov
icebp
xor
mov
das
pushf
push
ja
pusha
mov
addr16
dec
mov
stc
je
xchg
add
fnstenv
mov
add
mov
sub
xor
mov
sbb
inc
lock
int3
sbb
adc
int3
xor
call
jmp
jmp
cmp
cmp
or
insl
sub
or
sahf
or
not
sahf
adc
div
xchg
test
dec
push
das
jae
ds
inc
dec
dec
int
pop
pop
jb
pop
pop
jp
popl
sbb
inc
fsubs
scas
jno
test
add
rep
pop
and
add
fucom
mov
std
inc
ffreep
es
and
shlb
cmp
xor
cmp
pop
jb
fsubrs
outsb
fdivr
mov
and
cmc
mov
cld
out
xor
push
cmp
imul
cmp
pop
lds
xor
ret
mov
add
lret
push
xor
mov
push
out
xchg
les
bound
mov
adc
lcall
test
in
test
push
push
and
cmp
mov
jae
pusha
jl
jno
sbb
insl
mov
lods
out
stc
xchg
mov
inc
pop
mov
lret
or
repz
and
fstpt
outsb
stc
dec
sarb
xchg
cld
icebp
loop
ds
add
lret
sbb
fistpll
fs
sub
push
mov
adc
jnp
fldcw
jne
outsb
xor
je
loope
clc
pop
sbb
stos
stos
add
sbb
clc
or
sub
out
dec
lds
dec
mov
lret
sti
fcoml
mov
jl
popl
add
les
jnp
jl
and
es
sbb
or
cmp
or
push
movsb
mov
movsl
lock
lods
mov
nop
xchg
xor
mov
dec
mov
rol
adc
pop
cmp
cmp
popa
insl
push
daa
cwtl
adc
adc
rcr
mov
insb
jle
inc
xchg
push
ret
inc
inc
fisubrl
sub
into
inc
push
mov
out
sti
xchg
gs
sbb
cli
loop
jecxz
cmc
inc
jne
lods
push
jmp
mov
mov
sub
das
adc
dec
je
out
idivl
dec
pop
cmp
xchg
adc
mov
sub
sbb
repz
popa
enter
mov
shl
and
xchg
mov
movsl
iret
mov
nop
out
xchg
xchg
sbb
in
mov
inc
adc
movsl
push
xor
outsb
leave
out
iret
lcall
cmpl
push
ds
notl
dec
sub
push
pop
mull
xchg
cmp
shll
movsl
jno
cmpsb
push
xchg
mov
ret
adcb
or
setno
imul
lods
adc
cmp
jae
push
mov
fwait
daa
push
or
mov
lahf
push
ficoml
nop
mov
dec
imul
add
mov
das
xlat
jp
popa
cmp
fs
shlb
add
stos
cmp
sbb
mov
pop
mov
jae
and
clc
in
and
ja
xchg
nop
xor
movsb
jle
imul
lock
leave
mov
les
or
adc
into
int
stos
pop
mov
jb
ljmp
sub
sub
outsb
xor
sbb
sbb
xor
inc
movsl
fstps
ljmp
cmp
push
mov
stc
gs
insb
mov
mov
popf
imul
or
xchg
ja
shll
stos
dec
enter
fisttpl
add
adcb
mov
mov
lods
dec
lea
sbb
leave
ja
ja
aad
lea
lahf
clc
scas
call
popa
or
daa
ds
jg
or
fsub
mov
add
add
stc
pop
push
test
pop
xchg
mov
loop
pop
mov
in
mov
or
adc
cmp
ret
bswap
in
xor
push
mov
pop
dec
or
push
pop
ds
jp
std
mov
cmp
xor
xchg
vmwrite
nop
je
sub
push
adc
inc
jnp
add
pop
in
int3
mov
fistpl
sbbb
xchg
leave
jbe
xor
pop
scas
push
in
push
ljmp
outsl
lock
push
int3
jle
loop
test
xlat
inc
push
sub
sbbb
dec
mov
or
mov
ds
or
pop
mov
fs
negl
cld
lods
and
dec
jno
xor
jne
inc
mov
jp
jl
xchg
outsl
push
cld
dec
sub
jg
xlat
pop
mov
pop
in
push
sbb
aas
mov
lock
cmp
mov
or
test
call
mov
push
out
mov
jae
sbb
gs
jg
stos
in
or
shll
sub
ja
or
hlt
aam
mov
lds
xchg
aaa
test
mov
repz
adc
fdivl
fisubrl
dec
adc
push
repnz
rcll
fbstp
mov
push
dec
out
pop
imul
js
pop
outsb
inc
je
cmp
xor
je
mov
clc
clc
cwtl
sbb
xor
shlb
xor
add
sub
pop
push
xor
jno
cmp
test
cmpsb
push
gs
dec
jns
inc
inc
lock
and
lods
iret
push
movsl
xor
jns
addr16
int
ror
cltd
xchg
mov
xor
cmpsb
add
and
mov
lock
dec
sbb
or
sbbb
mov
mov
mov
sub
in
sub
adc
push
adc
mov
mov
mov
jmp
cmpsl
or
adc
add
clc
ds
data16
or
adc
std
mov
and
cli
dec
dec
jmp
cmp
cli
popf
sbb
rol
mov
push
mov
in
jecxz
xor
stos
loop
xchg
in
lods
ljmp
shlb
xor
mov
pop
insl
int
aas
push
mov
jp
adc
stos
jle,pt
repnz
mov
lahf
push
sar
ss
push
out
sub
iret
fcmovne
aad
lods
and
adc
ljmp
push
dec
or
aas
dec
adc
and
xchg
ss
push
mov
jmp
xlat
int3
scas
movsb
mov
les
mov
lods
dec
xchg
mov
lods
outsb
add
mov
aas
roll
adc
ret
in
cmc
add
and
clc
pop
push
jmp
pop
sbb
push
repnz
push
pusha
xlat
sub
mov
push
xor
sub
inc
into
mov
adc
iret
jno
fistpll
int
pushf
cmp
add
stos
push
cmc
sub
popf
in
lret
jnp
or
and
fsub
inc
divl
sbb
mov
ret
out
xchg
test
push
std
mov
in
add
fisubs
icebp
mov
cmp
int3
aas
in
lahf
pop
sbb
lret
jb
stc
mov
fcmovne
jae
sub
xchg
push
sbb
lahf
add
or
js
cmp
mov
inc
psllw
test
call
sbb
cmp
ds
sub
cmp
cli
inc
jg
jno
popa
stos
cld
push
arpl
mov
jle
sbb
xchg
add
mov
mov
mov
inc
push
rclb
sbb
pop
jle
sub
je
xor
cltd
andl
clc
sbb
xlat
aas
out
inc
jge
push
sub
call
push
dec
dec
cmp
pop
and
icebp
cli
push
jbe
mov
roll
imul
cmc
rcrl
push
fs
push
into
jecxz
sub
jmp
into
mov
in
aaa
imul
jl
mov
jecxz
lret
sbb
dec
mov
aam
xor
pop
xchg
aaa
icebp
shlb
insl
mov
in
mov
pop
cmp
push
pop
nop
mov
mov
mov
test
mov
lock
stos
loope
push
lods
inc
or
lds
push
jl
pop
ror
in
push
fldcw
rcrl
addr16
cli
mov
xor
push
arpl
adc
mov
mov
bound
rolb
in
int
adc
jns
push
cli
push
test
and
dec
addl
xor
or
pop
and
mov
xchg
push
test
arpl
jno
pusha
jmp
mov
and
les
jle
push
mov
pusha
and
sub
mov
movsb
adc
aad
sub
mov
bound
nop
adc
sbb
dec
sbb
iret
inc
fstps
and
pop
jns
fistpll
sub
push
ret
mov
pop
mov
jne
ja
inc
dec
idivl
pop
les
lods
lcall
shrb
adc
icebp
xchg
lret
cli
shll
ljmp
aaa
cltd
lcall
mov
sub
xchg
adc
lret
mov
sbb
and
mov
fs
or
testl
movsl
test
mov
js
push
mov
sbb
dec
mov
mov
insl
mov
jge
jg
movsb
jp
in
xor
mov
stos
add
jl
add
fs
cmpsb
mov
pop
push
add
jp
jnp
push
cmpsb
xchg
mov
in
jmp
push
xchg
ljmp
mov
add
test
rcl
sub
mov
push
mov
mov
imul
or
xor
dec
das
out
push
push
mov
dec
pop
mov
notl
mov
xchg
pop
xor
movsl
cmp
sbb
mov
xchg
loop
add
sbb
push
sbb
fcomps
add
aaa
add
jno
or
push
cmp
mov
lcall
shll
dec
adcb
filds
lea
adc
aad
les
or
mov
stos
lret
push
movsl
mov
mov
pusha
lret
dec
lcall
loope
lea
std
cs
push
push
ret
sub
lcall
fisubl
mov
cmpl
imul
ljmp
andl
out
push
sbb
cmp
push
movsb
rclb
jbe
repz
xor
mov
adc
dec
int3
push
rcl
mov
fistpll
push
ja
pop
lds
cmp
std
test
leave
add
jno
pop
cmp
movsl
xor
dec
add
mov
inc
cwtl
testb
enter
test
cli
pop
mov
mov
cmp
cmp
pop
and
test
mov
pusha
add
mov
inc
mov
mov
outsb
divb
xchg
cmp
add
cmp
xchg
jb
push
in
adc
xorl
test
pop
clc
mov
pop
insl
xchg
je
loopne
sub
sub
jbe
push
into
pop
xor
insl
out
mov
pop
mov
cli
and
jle
mov
gs
decl
ds
push
pop
fsts
popa
fbstp
mov
loop
xchg
jg
jg
sub
dec
movsl
inc
add
jno
and
inc
orl
mov
testl
cld
jmp
nop
mov
sub
pop
cwtl
xchg
addr16
ss
dec
sub
pop
add
push
mul
push
lods
aad
fimuls
xchg
pop
lret
and
hlt
mov
sbb
jmp
inc
jbe
ja
rcll
mov
and
jae
push
cmc
lods
imul
out
fdivrl
push
jo
loop
push
fbld
lock
fistps
mov
les
leave
lcall
sahf
js
data16
js
sarb
fsts
sbb
sbb
ficomps
loope
mov
sahf
mov
and
mov
push
xchg
movd
pop
adc
mov
jmp
jg
imul
jns
jnp
int
dec
pop
xor
sbb
je
sub
jne
out
orl
test
lret
into
inc
jbe
mov
out
lret
pop
lods
cmp
testb
insl
decl
inc
jecxz
mov
int3
mov
mov
pop
sbbl
sbb
cwtl
lahf
cmp
arpl
jo
orb
xchg
lret
gs
xor
jecxz
leave
dec
aas
cmp
dec
iret
test
lcall
or
and
inc
mov
mov
xchg
mov
js
jp
add
or
hlt
xchg
outsl
cmpsl
dec
cmpb
inc
shll
xchg
lret
cmpsl
cmp
mov
xor
testl
fiadds
xchg
movsl
inc
jae
in
lds
fdivr
sbb
std
inc
cmp
sub
lcall
xchg
adc
stos
jae
mov
js
xchg
aad
cmp
mov
ds
push
mov
gs
test
push
inc
ja
lret
fistl
push
mov
loopne
cld
xchg
in
sbb
jge
int
cli
bound
push
ja
sahf
js
mov
mov
pop
pop
in
fisubs
daa
add
or
jb
xchg
push
pop
and
jmp
xchg
test
inc
or
sub
mov
sti
insb
and
cmp
add
or
sub
ret
lret
insb
sbb
mov
shr
cltd
dec
cmp
or
in
inc
fs
and
scas
jns
inc
mov
sbb
push
xor
pop
mov
jge
adc
add
jo
ret
mov
rcrb
flds
mov
inc
in
mov
insb
jl
sub
push
mov
jmp
xchg
push
sub
mov
jmp
int3
ud2
cmpsl
jge
jmp
cmp
xchg
inc
fsubrp
addl
bound
cmp
adc
mov
lods
loope
cmp
pop
sbb
shrb
dec
cmp
jmp
lcall
mov
adc
sub
stos
aas
jge
enter
sbb
in
pop
scas
outsb
cwtl
mov
xchg
das
mov
in
inc
or
adc
aad
fcoms
cwtl
inc
xor
dec
push
and
fists
mov
dec
ret
into
popf
call
inc
mov
xor
pop
adc
icebp
jl
sub
mov
filds
divl
sahf
out
enter
sub
gs
icebp
sub
jp
jae
outsl
mov
es
push
inc
repz
pop
aam
adc
mov
nop
mov
sub
mov
jmp
cltd
stos
push
xor
mov
loope
shlb
mov
sti
lret
sub
jl
push
stc
xor
in
mov
mov
loop
out
xchg
jns
xor
cltd
in
jne
pop
test
dec
and
pushf
cwtl
or
jecxz
ja
and
and
push
out
dec
xor
int
int
imul
adc
or
das
test
jge
cmpsl
dec
dec
push
cmpsb
nop
ja
in
sti
out
xlat
repz
fwait
sbb
push
xchg
mov
mov
lcall
ror
scas
push
das
mov
in
push
mov
lods
cmpsl
out
push
lds
pop
hlt
repnz
dec
pop
sbb
lret
das
push
pop
in
inc
lock
inc
mov
insl
test
aas
test
inc
sbb
dec
aas
stc
out
xchg
cld
mov
adc
test
adc
pop
jb
or
lock
es
or
add
cmc
adc
mov
rolb
je
add
int3
jbe
xlat
in
jnp
add
dec
add
mov
dec
mov
push
lods
xchg
popa
push
push
ja
scas
or
fistps
arpl
stos
push
les
and
movsb
out
jo
pushf
dec
loop
xor
cltd
test
fnsave
arpl
icebp
mov
mov
mov
das
xor
ljmp
push
dec
ds
jnp
xor
xlat
jo
cmp
jp
xchg
mov
push
fimuls
scas
sarb
sub
je
shrl
sbbl
stos
mov
shl
add
add
push
xchg
mov
push
xchg
lahf
xor
ret
cmpsb
lea
pop
add
aaa
and
push
fs
data16
cmpl
xor
loopne
ret
fbld
test
in
and
xor
ret
cli
ds
adc
push
jge
out
or
pop
ljmp
cmp
and
add
cmp
sub
testb
sti
fwait
test
idiv
mov
inc
xor
add
push
aam
cld
bound
mov
cmpsl
fnsave
push
mov
test
imul
orb
push
ss
mov
cmp
adc
mov
pop
add
sub
mov
lcall
fsubl
and
push
sub
inc
fidivrl
fcmovnb
xchg
xchg
les
dec
rcrb
in
out
push
adc
mov
loope
incb
add
cmp
lea
idiv
das
adc
enter
sub
push
out
sbb
loope
stos
xchg
ret
loop
add
sub
sub
ds
mov
jo
cwtl
rcr
inc
pop
adc
sbbl
fcmovu
inc
andb
das
aam
cmc
xchg
xor
addr16
jl
daa
mov
stos
out
push
lods
mov
sahf
mov
pusha
inc
dec
loop
js
sub
sahf
in
bound
inc
mov
femms
push
in
pop
pop
or
shll
push
mov
loopne
pop
aad
fdivl
mov
das
push
mov
pop
hlt
leave
les
add
mov
inc
dec
push
cmc
ds
fisubrs
add
movsl
jae
mov
jg
pop
and
test
mov
adc
stos
inc
adc
stos
xchg
les
xchg
xchg
pop
nop
int3
out
add
or
mov
fists
cmp
push
cmc
adc
pop
add
jnp
or
bound
in
push
sahf
jle
cli
addr16
cli
cmp
xchg
and
adc
enter
iret
xlat
push
mov
popf
mov
neg
mov
jne
xchg
jecxz
or
mov
cld
pop
js
and
fdivs
das
pop
or
adc
mov
mov
es
cmpsb
lea
ja
mov
push
xorb
pop
imul
int3
call
mov
stos
mov
jmp
push
mov
in
shll
iret
mov
rolb
das
jns
into
fnstcw
or
push
and
pop
repnz
mov
xchg
push
and
pop
xchg
sbb
or
test
out
pop
es
in
push
mov
jne
fxch
xchg
fcoms
ror
test
notl
rcr
pop
int3
sbb
adc
fimuls
pop
ja
mov
movsl
mov
imul
nop
push
xor
bound
popf
imul
fdivs
dec
dec
lret
push
loop
je
dec
pop
fmul
or
jge
mov
cmpsw
pop
iret
lcall
and
inc
push
dec
sbb
push
jmp
stc
movsl
in
incl
mov
loop
mov
push
cli
in
clc
out
movsb
popa
xchg
xor
ret
lret
mov
or
xor
subl
xchg
repz
mov
leave
mov
push
insb
sub
and
lahf
repz
ljmp
mov
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
or
movl
adcl
mov
mov
mov
add
mov
negl
xor
add
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
or
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
adc
mov
adc
mov
adcl
xor
mov
and
mov
decl
add
movzwl
add
mov
movb
mov
mov
adc
lea
subl
mov
mov
inc
mov
xor
adcl
sub
adcl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
mov
dec
mov
jmp
sbbl
movl
push
movl
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
andl
xor
or
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
xor
mov
or
mov
sbb
xor
or
mov
push
add
jmp
movl
mov
mov
movl
inc
cmp
jb
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
not
mov
subl
xor
adcl
add
movl
jmp
decl
mov
adc
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adcl
mov
subl
add
movzwl
negl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
or
mov
movzwl
movl
xor
add
movl
mov
movl
mov
mov
inc
mov
movl
cmp
jne
mov
mov
adcl
xor
movl
add
subl
mov
add
mov
addl
xor
add
movl
mov
mov
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
jmp
sbbl
mov
and
mov
xorl
xor
xor
sub
sub
sub
xor
mov
mov
mov
subl
lea
movzwl
adc
mov
sbbl
mov
dec
mov
lea
mov
sbbl
mov
add
mov
lea
mov
incl
mov
sbb
mov
andl
lea
dec
mov
movzwl
adc
mov
mov
addl
lea
mov
xorl
mov
andl
mov
orl
lea
addl
mov
or
mov
xor
add
movl
jne
jmp
negl
mov
mov
subl
xor
xor
sbbl
sub
orl
sub
xor
movl
mov
movl
mov
movl
mov
jmp
mov
mov
xor
adc
xor
xorl
sub
sub
or
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
jmp
fstps
sti
sarl
jnp
inc
xchg
or
mov
lods
adc
sti
pop
jp
addb
xchg
push
push
scas
fildl
in
lcall
out
xor
sub
mov
lret
call
dec
add
mov
jmp
arpl
lahf
and
push
pop
cmp
cmp
inc
mov
push
xchg
mov
stos
inc
adc
fwait
xor
mov
inc
xchg
pcmpeqb
repnz
sbb
jg
xchg
js
lret
dec
dec
cmp
stos
cmpsl
dec
jle
dec
es
sarl
and
jb
xor
iret
stc
cli
and
leave
notb
pop
push
jp
mov
pop
mov
xor
jnp
dec
inc
sbb
sub
insb
xor
xor
pop
lahf
cmp
mov
lret
pushf
rorb
stc
xor
lcall
adc
jo
shr
push
cs
jne
sarb
aad
push
insl
xchg
ja
sbb
pusha
dec
ljmp
push
xchg
inc
in
dec
stc
xorb
sbb
xlat
cltd
xchg
stos
fcomps
jge
push
popf
sub
cmp
mov
xor
fistpll
fists
loopne
setne
xchg
icebp
out
cwtl
lcall
lahf
rcr
cmp
mov
sub
pop
sahf
xlat
jo
mulb
sahf
inc
dec
lods
cli
cld
test
jg
cmp
lcall
loopne
mov
push
outsb
and
sub
ret
cli
loop
mov
adcb
mov
jno
inc
mov
push
jecxz
std
mov
xchg
inc
dec
push
rolb
sbb
sarb
jbe
pop
dec
pop
push
sbbl
and
cmpsb
mov
xchg
data16
stos
jno
xchg
ret
mov
ds
jbe
inc
cld
jne
xchg
stos
cmc
pop
pop
xchg
and
pushf
or
dec
cli
cs
subb
mov
and
popl
add
jno
aad
and
pop
in
ds
mov
ss
adc
in
outsl
lods
xor
movsb
mov
adc
dec
popa
out
sub
popa
xchg
add
xchg
testb
out
popf
hlt
js
push
xor
fdiv
push
fldenv
cmp
push
xor
jge
test
inc
shrl
and
ljmp
sub
and
in
rcl
push
cmp
mov
and
and
xor
cmp
push
cmp
mov
sti
shlb
lods
insb
add
int3
dec
mov
inc
pop
dec
cltd
shlb
adc
les
xchg
push
push
fmul
stos
out
cmc
lret
dec
imul
adc
aas
fdivrs
inc
ds
jbe
jae
mov
notl
imull
mov
mov
lods
or
adc
dec
nop
idivl
test
int
push
clc
movsl
cld
jp
setl
sbb
call
push
aaa
mov
fwait
lds
call
xchg
insl
fwait
daa
loope
adc
fldenv
dec
or
sub
pop
push
cmp
pushf
and
out
in
ret
in
xchg
pop
xor
fadds
test
jle
sbb
popa
xchg
jns
push
iret
aad
mov
mov
dec
dec
xlat
pop
and
pop
bnd
xlat
jle,pt
std
rolb
or
mov
jb
leave
push
push
add
ret
xchg
std
sbb
cmp
mov
add
adc
fstl
or
xor
hlt
add
popf
int
cmc
stos
push
or
pop
scas
aad
sub
or
xor
pop
or
inc
jg
rcll
test
ljmp
add
sub
inc
sub
add
lea
add
popf
adc
ljmp
pop
xlat
push
mov
fidivl
mov
fnstsw
out
dec
out
lock
cld
inc
sbb
mov
and
inc
in
js
test
adc
push
pop
clc
push
cmp
xor
push
inc
sub
in
fistl
aaa
rcrl
iret
movsb
mov
adc
dec
dec
jno
fldcw
aad
mov
sbb
dec
mov
inc
fistpll
add
mov
sahf
pusha
call
mov
and
xchg
and
mov
icebp
adc
test
xchg
mov
movsl
loope
or
mov
push
arpl
loop
lock
dec
loop
jae
popf
stos
mov
jno
stc
testl
push
add
loopne
test
movsb
pop
mov
push
mov
adc
dec
jmp
mov
iret
sub
loopne
sti
cmp
cli
jo
cmp
xchg
aas
jno
adc
or
mov
lahf
or
push
stos
mov
sbb
fwait
sbb
or
loope
ffree
or
imul
add
xor
pop
jl
mov
pusha
mov
pop
rcll
fidivrs
sti
insl
js
cmp
add
mull
outsl
cs
out
dec
inc
inc
xor
mull
inc
mov
and
outsl
out
aaa
and
icebp
sub
sbb
cmp
push
mov
mov
imul
in
pop
push
push
push
andb
jp
neg
mov
mov
mov
mov
sahf
jmp
cmp
ror
xchg
rcrl
lods
xor
repz
insb
and
sub
dec
mov
fisubl
stos
mov
dec
hlt
jmp
call
mov
mov
iret
sbbl
sub
fidivs
mov
loopne
shr
mov
mov
test
mov
lea
or
sarb
and
and
shrl
lods
ds
add
daa
repz
jle
and
cmp
mov
or
rcrb
xlat
push
mov
add
sub
test
insb
inc
jmp
out
in
pop
les
push
inc
in
xchg
add
add
lock
std
adc
or
repnz
inc
jae
test
fisttpl
aaa
mov
add
fisubrl
push
cmp
push
mov
popa
add
adc
inc
push
not
cltd
out
mov
inc
push
dec
outsl
enter
out
mov
rcl
pop
nop
lods
aaa
xor
fisubrl
test
inc
pop
sti
movsb
mov
adc
mov
xorb
out
js
mov
rolb
shll
jne
and
out
pop
mov
stos
jl
mov
pop
fxch
std
dec
scas
test
mov
xchg
sbb
add
pop
test
in
sbb
push
push
sarl
popl
or
mov
xor
adc
xorl
imul
fistpl
mov
inc
jmp
cmp
pusha
mov
ret
cmp
mov
mov
pusha
sarl
adc
std
push
mov
pop
push
add
ja
push
fsubrp
mov
rcl
aad
pusha
andb
les
push
and
sbbb
lock
jne
jge
sbb
fbstp
xor
push
mov
das
shll
sub
out
lods
out
add
inc
mov
inc
jl
sarl
in
test
imul
and
imul
insb
inc
jmp
mov
repz
xchg
inc
push
leave
test
inc
sub
add
mov
cmp
push
nop
inc
xor
cmp
pushf
clc
jnp
out
mov
jns
push
add
mov
out
pop
jae
fbstp
add
jmp
sub
aam
push
mov
jp
pop
mov
jmp
aad
add
mov
inc
mov
adc
jecxz
ja
imul
psubb
xchg
scas
out
aaa
insl
cmp
xchg
push
add
pop
fbld
gs
or
test
inc
lahf
in
je
les
jle
jge
dec
fwait
mov
jecxz
cwtl
cmp
hlt
xchg
das
adc
adc
cmp
aaa
xchg
mov
and
pop
mov
push
jns
lcall
xchg
icebp
ss
test
shl
outsl
mov
hlt
addr16
cmc
add
mov
adc
adc
inc
mov
jnp
sbb
sti
or
xchg
pushf
pop
ja
loop
iret
stos
es
outsl
push
dec
aas
lods
xor
repz
addr16
popa
dec
divb
insb
mov
sti
cmpsl
aad
xchg
outsb
xchg
leave
jns
test
inc
add
cli
inc
xchg
testb
mov
nop
cmp
ret
inc
mov
gs
sbb
lods
and
push
dec
and
lret
xor
mov
fabs
push
mov
mov
test
xchg
adc
sub
sub
jne
inc
out
push
dec
jl
mov
aas
mov
pop
inc
scas
mov
push
push
xchg
insb
mov
mov
pusha
ds
pop
mov
xlat
push
iret
imul
mov
sub
and
outsb
xchg
push
jae
mov
and
aam
and
test
jne
mov
mov
jp
sbb
jo
int3
ret
icebp
xchg
mov
lcall
mov
daa
dec
jp
pop
in
push
syscall
aaa
sub
push
mov
pop
jae
lods
lahf
mov
dec
cmp
lret
popf
outsb
scas
sarl
test
rcl
push
scas
rcrl
inc
addl
mov
lahf
mov
addb
loopne
mov
xchg
daa
shlb
das
dec
pop
dec
adc
mov
hlt
inc
xchg
fidivrl
and
stos
lods
outsb
sbb
jge
xchg
ficompl
sahf
jno
xchg
mov
sbb
in
lea
jnp
pop
cmc
xchg
repnz
cmp
mov
dec
andb
std
pop
int
and
or
xor
jle
lods
jns
fs
fcos
adc
and
sti
test
mov
pop
xchg
imul
pop
and
and
pop
cmp
adc
push
or
jno
sub
xor
mov
or
arpl
sarb
cmc
and
mov
popf
adc
enter
lahf
orb
mov
in
ret
xor
in
or
push
lods
js
sarl
push
sub
xor
scas
mov
mov
loop
ror
sarb
lret
std
aas
push
sti
iret
pop
pop
int3
add
jp
lret
pop
shlb
dec
push
fsubrl
loop
stc
inc
mov
pop
mov
adcl
adc
pop
xorb
pop
push
add
stos
xor
xchg
jecxz
cwtl
sbb
std
imul
add
cmp
xor
lods
push
dec
lcall
test
xchg
jns
notl
xor
mov
adcl
xorb
sub
rcrl
mov
mov
test
jbe
js
pop
cltd
jno
add
fcoml
inc
ja
in
jecxz
push
imul
rol
popf
push
sahf
xchg
outsb
pushf
xorl
js
pop
fldenv
fndisi(8087
cmp
sbb
or
push
and
mov
push
or
mov
add
jb
pop
xchg
jl
sbb
push
loopne
mov
lret
sub
push
lds
inc
test
add
cmpsl
in
inc
pop
sbb
std
dec
fmull
xchg
call
and
push
cmpsb
stos
add
lret
sahf
shr
jns
dec
adc
rcrb
push
mov
insl
mov
outsl
pop
test
cltd
aad
cld
ja
popf
stc
push
xor
nop
enter
xchg
mov
mov
lcall
add
jo
dec
mov
stos
icebp
mov
outsl
add
jmp
pop
imul
cltd
dec
hlt
fcmovnbe
mov
test
xchg
lret
lock
mov
jae
push
pop
mov
or
dec
mov
call
mov
dec
call
std
add
sbb
adcb
pop
inc
aaa
imul
rolb
fildl
sbb
add
rcll
movsl
cmc
addr16
pop
gs
xor
bound
sarb
mov
add
push
clc
lret
dec
lahf
rolb
sub
out
js
and
fisttpll
sub
stos
mov
enter
mov
cmp
dec
push
pop
aas
dec
sub
sbb
movsb
sub
jmp
push
pusha
xor
jmp
fisttps
test
and
mov
aam
aam
pop
jns
xchg
xchg
inc
adc
clc
cmp
pop
and
aas
or
sub
push
mul
adc
push
mov
fs
fists
test
or
cwtl
push
loopne
jl
lret
imul
jmp
ret
into
insb
jl
insl
xchg
out
dec
sbb
js
add
ret
lea
inc
sub
lret
enter
daa
push
mov
loope
ret
inc
in
lock
es
mov
cwtl
jne
push
cmp
sub
push
test
and
je
and
psubusw
sahf
cwtl
lds
popf
or
lret
mov
pop
xchg
ja
fldenv
roll
inc
add
cltd
cmp
mov
mov
shr
cltd
jae
jge
and
jno
iret
or
mov
cmpsl
test
dec
stc
decl
cld
fmuls
sub
aas
push
xchg
clc
jnp
jb
lret
mov
dec
and
test
cs
fmull
pop
lret
test
xor
imul
dec
outsl
ds
dec
jl
test
rol
std
adcb
imul
xlat
and
or
rol
out
scas
and
call
dec
sub
call
out
or
or
imul
mov
push
fmul
or
dec
jp
push
clc
sbb
popa
xchg
test
adc
adc
dec
cmp
inc
mov
repz
push
hlt
xor
hlt
loop
loope
shll
jb
in
mov
mov
fstps
movd
inc
test
dec
adc
dec
adc
mov
sahf
in
loopne
ljmp
push
gs
pop
sbb
sbb
insl
pop
push
fmull
repnz
push
jg
jecxz
hlt
gs
cmc
movsl
dec
ret
iret
jge
dec
out
ds
inc
lret
cld
lds
cmpsl
dec
jae
xchg
dec
arpl
fsubrs
mov
ljmp
adc
arpl
sbb
xor
test
mov
xchg
mov
adc
dec
pop
cmp
lock
fisubl
and
sti
aas
pop
dec
cmp
jo
bound
mov
push
jmp
fstl
pop
in
lret
rcll
in
xchg
fwait
xchg
jbe
imul
pop
movsb
clc
mov
ds
popa
arpl
aad
mov
cmpsl
and
mov
mov
nop
out
push
pop
ljmp
mov
push
addr16
scas
fisubrl
adc
loopne
xchg
repnz
fdivl
and
jg
mov
lahf
pop
mov
jne
dec
out
mov
mov
pop
call
or
repz
iret
int3
arpl
sbb
sbb
pop
sbb
cmp
xchg
sarl
cmp
jmp
mov
fsubrl
dec
jne
push
mov
jmp
dec
push
inc
add
or
iret
push
scas
jg
adc
mov
pop
cmp
sub
test
sbb
outsb
xchg
leave
sbb
ljmp
sub
dec
cmp
jno
idivl
cmp
call
add
add
data16
jmp
inc
xchg
in
push
loop
repnz
dec
mov
pop
adc
lcall
or
int
cltd
repz
lret
sub
ds
xor
cli
jl
jns
scas
cmpsb
xchg
rorl
pop
xchg
xor
rcll
fmulp
mov
mov
add
dec
js
cmp
or
in
clc
icebp
sub
popf
or
pop
push
jae
das
imul
loopne
outsl
xchg
lods
or
pop
cs
shlb
xlat
arpl
push
xchg
addr16
cmp
add
sarb
test
mov
jb
jae
rol
jge
fisttpll
js
mov
mov
in
inc
add
adc
adc
lods
rorb
inc
rcrl
push
fstl
add
lret
dec
scas
push
mov
nop
mov
aaa
cmp
jg
inc
xchg
cmp
pusha
rcr
push
mov
loop
jae
orb
push
mov
cmp
in
sub
push
int
in
pop
dec
dec
pop
xor
or
pop
jp
xlat
sti
dec
into
mov
dec
xchg
sub
inc
ja
daa
loopne
fbstp
dec
lds
sbb
inc
lods
insb
and
inc
xor
or
orl
pop
sbb
mov
imul
sbb
les
xor
loope
adcl
aad
xor
test
jmp
sbb
mov
sbb
jg
xor
mov
data16
outsl
test
cmp
and
daa
scas
lcall
or
testb
iret
xchg
xor
dec
adc
ret
mov
rorl
fcmovbe
pop
psrld
sbb
mov
sub
mov
into
pop
sub
cld
jns
or
fdivr
fcomip
pushf
adc
adc
data16
lds
push
add
in
mov
cmpsb
hlt
call
lret
pop
fdivrp
addr16
pusha
xor
cmp
icebp
sahf
imul
and
lcall
stos
cmp
jae
fsubp
mov
mov
orb
inc
pop
popa
hlt
aam
ret
mov
and
je
jle
ds
lds
mov
mov
out
insb
ret
mov
jns
push
pop
xor
sbb
adc
imul
push
cmp
and
insb
push
or
aam
cld
add
inc
adc
in
jge
fstl
leave
xor
out
inc
ret
push
push
mov
in
rcrb
xor
out
add
push
mov
dec
daa
push
leave
sub
loope
shll
aad
adc
cmp
xchg
aam
inc
dec
test
cmp
mov
insl
call
cmpsl
dec
sti
fistpll
adc
scas
aaa
dec
test
in
or
mov
test
dec
clc
mov
mov
bound
xchg
fxch
inc
jae
add
movd
inc
popa
xchg
mov
sbb
subl
sub
fs
and
in
jb
mov
xchg
dec
mov
xchg
js
dec
mov
mov
xlat
push
fbld
xlat
sub
shrl
cli
xchg
filds
test
clc
aad
aas
into
cmp
add
cmp
push
jp
aad
jl
pusha
pop
mov
xlat
pop
sbb
adc
fbld
pop
mov
xchg
and
lock
sbb
pop
push
nop
mov
imul
dec
xor
xchg
pop
mov
loop
lret
mov
push
push
and
enter
fwait
scas
pusha
sbbb
add
stc
cmp
or
icebp
xchg
xor
loopne
push
cmpb
lahf
fsubs
pushf
pop
clc
in
jo
cwtl
xchg
out
xchg
push
fstps
sbb
and
push
push
mov
popa
mov
lahf
jecxz
mov
shlb
ret
mov
stos
mov
jle
xorb
mov
mov
icebp
out
call
xchg
adc
cmp
cmc
icebp
dec
pushf
cmpsl
loope
cli
ficomps
leave
pusha
mov
and
jo
lcall
mov
inc
iret
xchg
lods
in
xlat
insl
adcb
pop
insb
scas
lret
cli
cli
xchg
jbe
daa
dec
or
das
adc
std
notb
pop
lret
in
pop
adc
mov
rolb
mov
arpl
lea
dec
movsb
je
shrl
sub
sub
stc
cmp
movsb
push
mov
loope
mov
xor
xchg
push
daa
mov
aaa
daa
sub
mov
jns
add
je
ret
test
inc
inc
aad
rcr
jmp
fs
jg
inc
mov
or
rcrb
stc
inc
pop
das
push
sub
and
pop
negl
pop
xor
sub
sub
push
ret
rcrl
mov
xlat
add
sbb
push
sbb
cmp
ret
or
push
filds
data16
leave
jp
push
or
mov
sets
in
or
idivb
stc
push
sub
adc
cli
xor
sub
addr16
mov
test
ja
out
sub
push
dec
das
dec
adc
dec
xor
mov
leave
les
imul
and
mov
dec
nop
sub
inc
jl
enter
add
popa
sub
jmp
daa
shrb
pop
out
adc
clc
push
js
pop
jne
xor
lock
cmp
sub
lret
add
rcr
inc
cwtl
mov
add
inc
out
fstpl
pushaw
or
stc
sti
sub
shl
inc
ja
jo
daa
cs
xchg
inc
pusha
test
stos
je
les
ljmp
or
mov
jb
mov
ja
jnp
inc
sbb
imul
arpl
fidivrs
divl
mov
jno
dec
mov
mov
xchg
sbb
inc
sti
dec
fcmovbe
sub
inc
movsb
loopne
shrb
rolb
adc
xor
xchg
pop
inc
mov
jg
jnp
cmpsl
leave
int
mov
shrl
add
inc
mov
push
push
dec
int
fistpll
xchg
bound
je
dec
lds
outsl
scas
xchg
fdivrl
repz
push
mov
mov
and
pop
pop
mov
push
dec
leave
into
roll
mov
test
sbb
aad
adc
mov
in
mov
outsl
lret
psubsb
test
adc
xchg
cmc
mov
mov
or
scas
pop
ja
out
dec
test
repz
sub
and
mov
lret
or
push
imul
or
and
push
xor
lret
or
imul
mov
sub
add
test
movsb
ret
and
add
rorb
mov
dec
add
sub
int3
inc
cmp
xchg
icebp
movsl
adc
and
mov
mov
xor
iret
jae
test
or
cli
add
lcall
mov
jle
mov
push
sub
insl
sbb
inc
pop
ss
scas
dec
sbb
mov
aas
add
sub
cmpsl
jle
cmp
test
or
sub
shll
idivl
jb
rorl
xor
or
mov
repnz
add
gs
std
pop
popa
jmp
imul
aam
xchg
cmpsl
in
or
or
je
out
pop
nop
push
push
aaa
out
cmpsb
iret
jo
in
mov
dec
xor
jne
inc
jnp
popa
aaa
mov
aaa
loop
push
xlat
xchg
pop
xchg
add
clc
sahf
negb
shl
leave
movsl
mov
xchg
mov
push
int
popa
push
mov
addr16
or
mov
xchg
mov
xlat
repnz
lahf
std
aas
test
jo
mov
and
xchg
int
aam
xor
cmpsb
xor
data16
inc
or
xchg
iret
daa
bound
sbb
xor
fwait
stc
pop
pop
adc
loope
or
jb
push
push
std
adc
cmp
jo
add
sbb
cmp
inc
imul
in
jnp
mov
adc
mov
ja
shll
sbb
dec
push
repnz
insl
cwtl
es
pop
add
xorl
cmpl
mov
enter
scas
scas
mov
popf
and
adc
popa
dec
aaa
test
cmp
wbinvd
out
pop
inc
mov
push
pop
mov
fldt
push
out
pop
mov
lock
popf
mov
sbb
inc
jle
mov
mov
gs
int
movsb
dec
test
out
insl
xor
sbb
or
mov
shrl
mov
mov
daa
dec
testl
pop
repz
push
inc
es
inc
imul
rcrb
insb
xchg
lcall
sub
mov
xor
lahf
xor
mov
adc
test
test
jecxz
rolb
and
add
mov
inc
stos
push
outsl
test
insb
divb
xlat
cs
xor
push
inc
fwait
cmp
inc
out
xor
insl
ss
scas
push
mov
mov
mov
pop
jnp
pop
shll
adc
jmp
pop
jge
inc
jno
movsl
test
hlt
sbb
sub
mov
push
mov
and
mov
mov
jp
into
pusha
sbb
sbb
inc
int
xchg
push
xchg
and
mov
ja
and
ret
push
mov
sub
sbb
inc
push
or
fldenv
sub
repz
pop
rcll
mov
outsl
daa
push
rclb
push
sub
roll
aaa
xchg
and
ficomps
sbb
xor
xchg
shlb
pop
mov
int3
aaa
into
popa
jecxz
ret
mov
mov
out
and
fdivr
pushf
pop
enter
inc
test
orl
sbb
pusha
and
jns
mov
cmp
test
cld
insb
gs
or
outsb
scas
adc
aam
fdivrl
push
sbb
xlat
mov
arpl
pushf
sbb
xchg
negl
clc
push
mov
xchg
out
cmp
daa
or
jno
pop
dec
inc
inc
mov
xor
nop
into
push
jns
mull
cmp
mov
das
pop
popa
push
sbb
ja
inc
push
shl
ljmp
sub
sub
xchg
push
lahf
ror
or
xor
jecxz
fwait
inc
mov
ds
dec
pop
adc
mov
xor
dec
push
mov
inc
pop
js
mov
inc
dec
arpl
jl
movl
add
xorl
addr16
ja
xchg
cmp
mov
sub
aaa
iret
repz
je
les
in
sbb
pop
mov
shl
jb
mov
dec
inc
mov
jecxz
mov
outsb
adc
dec
mov
mov
and
or
daa
cmp
mov
jne
mov
test
shrb
jg
xor
and
rol
subb
xchg
movsl
out
mov
mov
jmp
inc
fsubp
movsb
pop
cmp
outsb
jecxz
mov
jecxz
fisubrl
and
scas
sbb
loope
mov
xor
cmp
jmp
cld
mov
xchg
repnz
shr
ss
out
sub
in
repz
mov
out
arpl
lea
clc
mov
mov
rcrb
adc
mov
dec
or
outsl
ret
movsb
ja
push
sbb
mov
out
fmuls
addr16
jp
insl
lea
pop
cld
pop
pop
and
pop
aam
push
inc
jns
jl
xchg
ds
into
lea
inc
jecxz
hlt
pop
mov
pusha
add
mov
lahf
xchg
callw
andb
or
pop
push
cmpsb
or
js
push
mov
mov
xchg
push
add
pop
cmp
mov
das
pop
and
dec
mov
pop
jl
ljmp
frstor
out
mov
xchg
in
cmpsl
push
xchg
cli
jle
or
cwtl
rdtsc
add
or
pop
or
pusha
pop
mov
or
and
push
xchg
dec
jmp
scas
add
movl
push
std
mov
dec
in
xchg
das
xlat
gs
cs
xor
pop
pusha
imull
pop
shl
es
addr16
loopne,pt
pop
cmpsl
mov
into
or
aam
push
scas
imul
cwtl
sbb
test
mov
mov
xor
das
dec
pop
movsl
mov
and
test
test
cmp
out
pop
adc
add
inc
pop
popf
pop
jl
mov
push
adc
iret
dec
mov
mov
mov
sti
pop
in
mov
data16
xchg
andl
or
stc
sbb
jns
sub
cmp
cld
push
ss
cmpl
mov
int
or
js
mov
cltd
mov
lds
leave
jp
dec
pop
insb
sub
stos
faddl
cmp
rcrb
into
int3
dec
mov
push
nop
pop
roll
es
or
xchg
les
sbb
jecxz
in
mov
inc
jne
adc
negl
dec
sbb
add
sarb
push
pop
cmp
out
jb
inc
push
hlt
repnz
lret
mov
pop
sarb
and
dec
push
out
jp
fisubs
jae
jno
sbb
lds
inc
call
or
and
insb
bound
imul
jbe
cmp
rorb
xor
mov
inc
dec
sarb
cs
lock
jge
je
out
dec
out
ljmp
fidivrl
or
loope
popa
in
jp
jns
pop
pop
sub
xchg
inc
scas
mov
cmp
aad
scas
aam
scas
dec
push
mov
xchg
sub
mov
jmp
jle
mov
sub
je
in
fdivrs
fdivp
mov
dec
addl
ss
dec
outsl
or
data16
push
stos
and
xchg
mov
push
xchg
lret
or
std
cmpsl
fisttpl
data16
mov
xlat
and
jmp
sbb
dec
inc
pushl
mov
sub
adc
jno
mov
test
scas
and
cmpsl
mov
popa
pop
shll
out
or
lcall
fcmovu
cli
cmpb
mov
push
fs
or
xor
jg
jae
xor
mov
mov
add
add
mov
sbb
icebp
pop
jle
push
mov
outsb
stc
mov
shl
pop
or
divb
mov
xor
xor
jmp
mov
mov
mov
shll
xor
jnp
pop
loopne
outsl
arpl
push
clc
cmpb
push
or
inc
mov
in
loop
inc
mov
push
and
push
sti
and
in
int3
ret
sahf
adc
outsl
adc
jmp
std
sbb
arpl
imull
bound
jb
bound
adc
stos
arpl
not
add
test
ss
arpl
fwait
dec
sub
add
xor
xchg
in
aad
sub
push
sub
popf
push
dec
dec
lret
sti
jae
cwtl
jb
and
jmp
add
pop
mov
jne
push
ret
rcll
mov
in
data16
mov
cld
inc
jle
mov
mov
pop
mov
sbb
and
das
push
imul
or
std
adc
pop
xor
xchg
add
xchg
rorl
cld
sbb
rcrl
inc
iret
dec
loop
inc
and
mov
cli
frstor
ds
push
insl
shrb
push
xor
loop
das
push
pop
jle
pop
aas
pop
push
mov
aaa
cmp
daa
arpl
mov
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
pop
mov
add
xor
add
add
add
add
add
add
add
sub
add
sub
add
xor
add
test
pop
add
add
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
imul
mov
inc
add
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
add
rorb
add
add
add
add
and
add
adc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
add
add
inc
push
repnz
enter
sbb
jecxz
sbb
mov
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
push
movb
xor
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
push
mov
inc
pop
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
movl
movl
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
mov
movl
movl
lea
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
mov
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
mov
mov
mov
mov
mov
mov
lea
mov
cmp
jb
mov
mov
mov
add
cmp
jae
sub
add
mov
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
sub
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
pushl
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
lea
add
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
mov
add
mov
mov
xor
add
mov
push
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
push
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
xor
add
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
mov
mov
add
mov
mov
mov
add
andl
mov
mov
mov
mov
mov
mov
lea
mov
xor
mov
add
incl
cmpl
mov
jb
movl
movl
movl
movl
movl
movw
movb
xor
lea
mov
xor
sub
inc
mov
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
movzwl
movzwl
mov
xor
mov
xor
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
jmp
mov
xor
mov
lea
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
sub
xor
cmp
jne
xor
jmp
xor
inc
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
push
push
movl
movl
xor
inc
je
mov
xor
add
cmp
jne
jmp
mov
xor
add
mov
sub
mov
mov
xor
add
mov
add
mov
jmp
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
pushl
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
push
pushl
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
add
push
lea
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
mov
popa
test
cmc
aaa
push
shrb
xchg
ds
mov
hlt
add
add
mov
gs
add
xor
jae
inc
test
sub
cltd
add
mov
pop
and
push
leave
orb
sbb
sub
insb
mov
push
jge
and
lock
adc
mov
loope
fwait
scas
lods
ja
daa
sbb
and
xchg
jae
xchg
inc
fwait
mov
cmp
dec
cmp
push
mov
imul
lcall
or
daa
pusha
fmull
out
and
and
fsts
xchg
imul
mov
pop
xchg
push
jno
push
inc
ss
decb
fildl
dec
lret
xchg
xchg
scas
push
imul
scas
mov
dec
loopne
enter
xchg
test
aas
in
nop
ja
enter
pop
inc
sbb
inc
sti
xor
mov
mov
push
arpl
and
lret
lret
fistpll
cld
jle
push
xchg
pop
cwtl
sbb
cmc
mov
mov
mov
cmp
mov
out
push
std
daa
ret
int
push
imull
mov
add
stc
jecxz
dec
inc
andl
pop
cltd
mov
xchg
inc
mov
push
scas
aad
ror
in
adc
repz
stc
rorb
ret
pop
inc
push
cmc
mov
sub
shrb
adcb
movsb
mov
scas
shll
jp
adc
js
outsb
jnp
daa
sub
shll
mov
mov
ja
popf
xchg
and
sbb
jge
push
inc
lret
into
push
mov
mov
mov
mov
mov
inc
xchg
out
lahf
fdivr
fnstsw
ljmp
fdivl
cmp
stc
pop
lds
push
in
mov
cmp
stos
cmp
in
mov
adc
ja
push
xor
fbld
push
adc
mov
cmp
push
adc
test
and
lea
fcompl
mov
shll
jg
xor
fildl
fstpt
popa
jns
jecxz
sbb
ret
inc
arpl
dec
addr16
adc
pop
pop
and
sub
sub
push
int3
xchg
rcr
mov
int
inc
add
jae
das
xor
pop
or
fs
cs
out
int3
out
mov
lods
mov
cmpsl
aad
flds
push
add
repz
sbb
push
sti
gs
out
les
lods
mov
shl
push
ret
enter
adc
cmc
popa
lahf
mov
lock
sub
xor
xchg
sbb
jbe
or
divb
in
inc
cmp
lret
shlb
hlt
cltd
jmp
ds
test
in
pop
pop
fwait
cs
push
xor
inc
inc
das
or
mov
ret
lahf
dec
cs
lods
dec
add
andl
inc
push
pop
cmpsl
xchg
xchg
pop
repz
or
outsl
mov
jae
cld
insb
shrl
cli
cmp
dec
movsl
pusha
fcomps
dec
stos
push
jbe
push
das
pop
jb
xchg
in
add
mov
gs
rclb
aas
push
insb
cmp
and
jne
cld
in
mov
cltd
js
or
stos
lea
test
push
push
fisubrs
push
adc
inc
jp
nop
cmp
dec
rol
movsl
leave
xchg
or
clc
jmp
sub
orl
mov
pushl
jno
and
mov
icebp
mov
stos
mov
sbb
int3
adcl
add
push
sahf
or
stos
lcall
fwait
mov
std
jmp
dec
pslld
pop
movsb
stc
ficoml
test
nop
adc
jb
xchg
fistl
adc
xchg
cmpsl
pop
lock
push
cld
sbb
xor
stos
mov
in
jne
repz
stos
hlt
push
and
das
pop
ljmp
in
js
int
push
jo
sub
sub
push
lahf
jmp
fwait
push
aad
cmp
push
int
mov
js
daa
and
push
mov
xchg
movsb
inc
aaa
and
mov
call
cmp
mov
lret
push
mov
cmc
push
lock
jnp
inc
xor
outsb
sar
and
pop
mov
xor
ljmp
fwait
outsl
stc
aam
sbb
push
sbb
rcrb
loop
mov
fucomp
pop
stc
or
je
xchg
xchg
inc
dec
js
sbb
pop
dec
push
ret
fiaddl
dec
pushf
dec
out
or
mov
xchg
ja
xchg
mov
add
rclb
pop
lahf
jg
fdivrl
add
insl
flds
add
add
add
or
dec
mov
sub
xorb
sbb
loop
cmp
or
stos
aam
fwait
dec
inc
cmpsl
cmpsl
enter
sbb
shll
fs
xor
out
lock
mov
fimuls
pusha
cwtl
loopne
das
push
push
fucomip
jmpw
push
or
aam
sbb
stos
pop
arpl
jae
ljmp
cmp
pop
pop
loop
push
scas
xchg
xor
fwait
xchg
mov
repnz
ret
mov
add
fsubs
sbb
mov
cmpsb
cld
shlb
es
aas
cmc
mov
mov
mov
stos
out
push
in
cmpsb
je
push
mov
inc
jb
push
mov
xlat
xor
push
adc
jae
data16
pop
mov
jmp
lds
inc
xor
addr16
ja
test
jecxz
mov
mov
push
rcll
js
sbb
xor
inc
dec
xor
inc
shll
sbb
out
les
pop
sbb
jns
sti
pop
or
loope
mov
cmp
xor
add
sub
psubsw
js
mov
decb
out
mov
inc
xchg
xchg
pusha
ret
lret
jns
adc
jmp
bnd
and
pop
mov
cmpsb
ds
ret
jae
jbe
xchg
sbb
mov
sbb
cld
pop
xor
loop
lret
push
int3
int3
rcll
pop
jo
shll
xor
arpl
cs
lock
fsts
dec
jl
mov
mov
enter
mov
inc
mov
and
test
add
mov
out
pushl
test
push
adc
gs
outsl
pop
cli
fwait
test
mov
xor
xor
push
lods
ret
and
repnz
xchg
arpl
xor
addr16
fidivl
cli
enter
sub
scas
mov
stos
adc
and
std
pop
mov
xchg
add
mov
insl
push
call
xorl
xor
movsb
jbe
or
inc
repz
rclb
xor
cs
push
loope
jns
xchg
adc
lock
sahf
xchg
les
imul
or
dec
xor
sub
jne
sub
arpl
mov
ja
adc
pop
inc
shl
cmp
xchg
iret
push
xchg
movsl
push
xchg
jmp
iret
jmp
mov
sahf
mov
mov
inc
and
outsb
pop
jno
leave
cmp
and
fidivrs
xchg
push
sbb
push
xchg
mov
mov
mov
cld
movsl
push
push
mov
mov
sbb
dec
jns
jns
push
in
fidivl
mov
pushf
dec
pop
jecxz
adc
add
fdivrs
add
clc
stc
and
pop
cs
fstpl
sahf
jo
imull
add
dec
rolb
or
es
movsb
js
outsb
pop
push
inc
dec
adc
lea
sbb
add
mov
daa
aam
fildl
add
aad
sbb
sbb
add
loop
pop
stos
mov
adc
xchg
mov
xor
inc
cli
add
repnz
fstpt
aas
fistpll
or
cmpsl
sahf
iret
add
jbe
and
loop
adc
leave
ja
xchg
add
xlat
std
notl
jo
xchg
out
daa
sub
inc
push
test
xor
lods
cmp
sahf
xlat
in
add
sub
sub
inc
aam
push
inc
orb
jae
scas
pop
sub
std
rcll
adc
in
xchg
repnz
xor
pusha
outsb
scas
adc
jno
xor
xor
mov
jbe
stos
and
pop
inc
pop
test
add
sub
dec
xchg
fs
inc
xchg
jo
stos
scas
clc
mov
lcall
or
ljmp
mov
std
call
leave
pushw
div
push
into
jnp
rol
inc
sbb
inc
xchg
adc
testl
sbb
int
or
xlat
lock
or
movsb
xlat
cmp
and
pop
daa
lahf
or
outsb
push
pushf
insl
or
aam
adc
test
xlat
push
push
mov
adc
call
mov
jmp
je
fldt
aad
mov
mov
sbb
lahf
sbb
pop
pop
loope
pop
ss
or
fisttpl
xchg
mov
push
popa
xchg
cmp
mov
add
cmp
cmpsb
jg
mov
jae
dec
pop
xchg
add
hlt
add
add
jno
xlat
pop
mov
subl
orl
lock
out
fstpt
jl
ja
imul
cmp
ret
fmul
jmp
jo
fnstsw
ljmp
inc
mov
push
ss
push
cmp
pop
cltd
pop
adc
addr16
loope
adc
jnp
or
scas
cs
dec
je
and
adc
lret
mov
pop
push
pushf
int3
push
pop
adcl
xchg
pushl
inc
cmp
int3
mov
popf
in
in
aas
pop
mov
fwait
mov
sbb
add
repnz
xchg
arpl
sar
out
es
cmpsl
or
dec
sub
jnp
mov
dec
out
pop
movsb
movb
lret
push
or
or
xchg
pop
dec
add
imul
push
pop
cwtl
loopne
in
fldenv
idivl
xor
ret
add
sub
out
sbb
push
cmc
xchg
jmp
subb
out
jno
dec
sbb
xor
dec
fimull
inc
adc
das
test
jg
jns
daa
ds
jb
in
xor
mov
pop
jae
or
loop
and
ss
inc
push
push
mov
and
and
xchg
push
and
or
lods
fdivrl
mov
jnp
inc
xor
jecxz
divl
aad
push
xor
inc
hlt
leave
xchg
sub
adc
das
mov
out
mov
pop
sbb
or
dec
mov
mov
mov
adc
shrl
cltd
jo
jmp
xor
rcr
insl
and
jecxz
mov
adc
lahf
loopne
subb
cwtl
push
sub
cmp
add
lea
testb
xor
push
jns
xacquire
push
pop
sub
mov
cli
mov
and
xchg
xchg
add
mov
pop
aad
cmc
sbb
push
inc
jbe
push
xchg
mov
sbb
fsubr
mov
loop
adcb
pop
adc
and
imul
std
in
or
int
mov
push
mov
test
jb
pop
ret
cmc
push
jae
add
inc
add
js
test
jp
jle
xor
lock
in
and
stc
cmp
jnp
ret
xchg
out
je
cmp
push
adc
icebp
fdivrs
lea
mov
lcall
bound
xchg
lret
and
repnz
pop
dec
sub
rcll
inc
push
sbb
lock
mov
repnz
push
out
and
dec
cmc
or
push
pcmpeqw
rcl
cmp
je
movsl
xor
jnp
lahf
xor
or
xor
adc
or
pop
lret
fbld
or
sbb
mov
inc
repz
lret
sbb
out
pmovmskb
adcb
outsb
pop
jl
inc
push
xor
mov
arpl
cli
jp
inc
pop
lret
inc
cli
popf
xchg
mov
pop
sbb
add
fldl
addr16
pop
mov
jmp
xor
adc
or
mov
fwait
cli
das
jne
push
mov
popa
xchg
cmp
sub
out
adc
xor
dec
divb
clc
fs
bound
and
dec
nop
mov
xor
subb
jle
add
adc
in
jle
cli
insl
stc
mov
sub
out
xor
inc
sti
pushf
mov
jge
and
push
mov
dec
scas
icebp
adc
pop
bound
mov
sub
fdiv
roll
jns
enter
stos
xchg
sahf
inc
push
enter
popf
lahf
sahf
mov
dec
mov
xchg
repnz
or
jb
and
dec
inc
mov
rcrb
movsl
sarb
adc
addl
repnz
sub
or
fdivrs
fdivrs
dec
in
int
sub
aas
fwait
add
fildl
fmuls
jnp
pop
cmp
movb
mov
jae
sbb
cmc
and
and
xor
add
imul
cmp
or
addr16
stc
cli
ret
add
xchg
xlat
fld
insl
stos
test
loopne
dec
cwtl
cmpsl
sbb
aad
sub
add
mov
or
pushf
sbb
push
jmp
xor
lea
xor
mov
notl
std
fistpll
lods
push
or
and
add
pminsw
idiv
repz
lret
jle
pop
push
jecxz
add
add
add
mov
xor
jno
mov
mov
test
cmp
divl
push
sub
imul
push
push
xchg
popa
test
out
pop
outsl
fidivrs
fwait
cmpb
add
shll
mov
clc
das
push
mov
mov
cmp
cli
jns
mov
mov
mov
ss
mov
rcrl
mov
adc
pop
aas
cli
mov
push
loop
pop
mulb
test
inc
cmc
int
mov
jmp
hlt
inc
xor
loop
or
pop
jns
dec
mov
in
shr
dec
xchg
add
in
pop
push
cli
stos
mov
nop
inc
cmp
pop
mov
fdivs
or
xor
mov
pop
xchg
adc
ss
jg
lock
xlat
dec
add
sbb
cmp
jnp
fisttpll
xor
mov
push
pop
mov
jno
out
inc
faddl
push
pusha
push
jo
xchg
cmpsb
and
hlt
fistps
sbbb
and
jp
pop
imul
adc
or
cmp
mov
push
xchg
add
inc
sti
nop
fstp
lds
push
jp
lret
in
lea
mov
int
cmp
cmc
dec
clc
ret
inc
rcr
je
std
icebp
adc
cwtl
fxch
push
push
adc
cmp
das
pop
cld
inc
push
fildll
popf
sbb
mov
adc
sahf
jae
fnsave
out
xchg
jg
imul
scas
mov
lcall
pop
fidivs
dec
ret
js
sahf
loop
rclb
sub
sbb
sbb
cmp
or
pop
movsb
shr
std
and
sub
in
scas
xchg
shl
rclb
push
cmpsl
cltd
cs
lods
inc
mov
cmp
cmp
adc
enter
dec
or
rcrb
inc
aad
std
cmp
adc
xlat
cs
inc
in
jp
ret
pop
and
jns
inc
cmp
lahf
dec
cli
xor
es
inc
jbe
fdivs
cmpsb
or
mov
push
cmp
and
gs
cmpsb
adc
leave
loope
sarb
ficompl
xlat
pop
clc
fstl
cmp
jp
push
mov
clc
push
cmpl
xor
jo
mov
fcomps
dec
cmpxchg
mov
lret
sbb
pop
dec
imul
pop
out
rorl
add
pop
imul
int3
lret
jle
or
mov
push
inc
in
popf
push
xchg
sub
jmp
mov
movsb
sti
iret
test
or
test
clc
lahf
repz
ret
sti
push
shll
sbb
cli
pop
inc
jmp
cwtl
outsl
sbb
adc
je
dec
or
fxch
inc
loope
iret
adc
aas
addr16
push
inc
mov
push
orl
cmpsb
adc
nop
in
inc
sbb
push
pop
push
jbe
scas
mov
loope
jno
pushf
mov
nop
push
mov
cmp
in
pop
xor
outsl
fiadds
cmpl
mov
fsubl
add
not
mov
scas
xchg
shrl
pop
cmc
and
dec
pop
fsub
jne
inc
aam
xor
rcl
div
push
mov
std
out
seto
rorl
dec
js
pop
add
movb
sub
dec
cmc
in
jecxz
inc
stos
loope
test
sbb
or
mov
pop
call
mov
or
dec
push
mov
sub
xchg
or
outsl
and
in
leave
jb
pop
pop
out
fs
mov
jne
inc
cmp
scas
in
cmp
add
push
sti
cwtl
xor
xchg
das
data16
lods
adc
and
jl
divl
lret
cltd
pop
push
push
ja
das
xchg
call
pop
jp
mov
jns
jbe
out
xor
cld
add
push
or
mov
jp
subb
loop
and
mov
mov
mov
mov
insb
fisttpll
adc
out
add
adc
sbb
inc
mov
xor
ret
pop
push
incb
push
or
iret
inc
lock
das
inc
dec
xor
jno
xchg
push
cwtl
xchg
xor
sbb
or
pop
sub
sbb
divl
and
in
mov
hlt
pop
jb
push
popa
xor
aam
sbb
inc
scas
mov
ficomps
loope
mov
mov
add
call
jnp
sarl
mov
add
hlt
add
add
add
cmp
cltd
test
xchg
mov
cli
xchg
pop
mov
xor
test
fistl
imul
cwtl
add
mov
js
hlt
sub
lea
pop
aad
arpl
daa
jge
mov
dec
or
push
push
mov
xchg
rol
hlt
pop
shlb
aam
lods
leave
frstor
xor
adc
pop
jb
add
and
loopne
out
sbb
mov
xchg
and
les
inc
sub
popf
or
fisttpl
or
js
cli
repz
mov
push
pop
push
mov
xor
movsb
std
push
shll
bswap
sbb
xor
cmp
push
add
fidivrs
xchg
dec
push
popf
adc
pop
gs
sub
mov
in
fdivrs
mov
or
dec
jae
call
or
fisubs
push
mov
push
inc
mov
or
pop
dec
iret
sub
adc
bound
add
sbb
jns
sub
pushf
inc
sbb
push
xchg
dec
out
xor
ficomps
inc
adc
pop
popw
mov
fwait
push
adc
jmp
inc
sub
decb
ds
test
mov
push
fidivs
sahf
andb
push
scas
jmp
mov
dec
inc
test
push
dec
sbb
pop
stos
rolb
leave
and
outsb
xor
push
fldl
or
and
adc
jecxz
adc
icebp
xlat
mov
mov
sahf
test
fcmovnu
ret
push
push
mov
das
jb
lret
inc
rorb
cld
mov
lods
test
lret
insl
ja
and
das
sub
push
aaa
das
push
out
stos
sub
xchg
insb
add
push
lahf
push
xchg
and
sbb
cs
cmp
push
push
and
lret
cmp
movsb
lock
pop
fiaddl
test
mov
ja
or
pop
lds
mov
inc
mov
mov
std
cld
mov
js
cmp
lahf
popf
xchg
jnp
lods
cld
movsb
pop
dec
or
mov
cmpsb
mov
lea
xlat
inc
ljmp
jmp
jge
lahf
lret
sub
mov
jo
jo
jl
ret
int3
add
mov
pop
mov
mov
in
push
or
cld
mov
leave
jge
stos
or
lret
lret
adc
mov
or
mov
imul
xchg
xchg
push
je
jge
scas
xchg
js
ror
push
inc
icebp
loopne
aam
and
pop
mov
or
lret
jecxz
adc
adc
ret
fstpl
add
pop
std
adc
xor
lcall
fs
into
xor
push
dec
mov
sti
add
mov
popa
stos
mov
push
jg
add
xchg
std
xor
jne
jmp
jno
jo
pop
nop
pop
iret
das
aas
inc
icebp
out
fmull
or
sti
test
push
lods
aam
fwait
mov
aam
pop
test
mov
repnz
and
mov
loopne
imul
cmp
testb
adc
test
sbb
jns
push
shll
adc
mov
cmp
imul
cmc
repnz
jne
rcl
jb
js
and
scas
cli
push
add
mov
xor
mov
pop
es
jae
cmp
xor
std
inc
cmp
jg
mov
in
inc
scas
lret
cmc
outsb
inc
xor
daa
sahf
and
xchg
mov
add
adc
test
fwait
cli
or
mov
ret
dec
fdivl
flds
nopl
sub
stos
int3
add
adc
imul
jb
inc
icebp
xor
addr16
mov
fbld
fldt
inc
mov
aas
scas
ljmp
les
or
aam
sbb
xor
fcmovnb
dec
cmp
push
daa
gs
stos
mov
add
add
xor
in
push
inc
push
test
addb
sbb
outsl
fldenv
outsl
lret
sub
fnstsw
roll
sbb
mov
stos
lahf
cld
inc
arpl
es
add
mov
cld
cmp
dec
stc
sub
pop
mov
mov
cmp
push
inc
xchg
inc
pop
cmp
mov
and
int
insb
push
mov
shr
adc
xor
add
add
pop
test
adc
mov
cmp
add
add
loopne
or
inc
inc
dec
mov
xchg
lods
add
inc
cmp
lods
fidivs
and
in
sbb
jecxz
jg
xchg
sbb
out
shll
xlat
add
xor
dec
adc
sub
inc
xchg
pop
lods
inc
lea
sub
pop
sub
add
mov
test
and
mov
mov
sub
mov
sub
lods
repz
les
jnp
adc
int3
sub
xchg
test
fs
clc
sub
cld
scas
lahf
xchg
jmp
adc
cmp
mov
lret
push
mov
push
sbb
test
imul
push
test
mov
out
js
jae
add
adc
jmp
jb
and
stos
or
inc
xchg
idiv
in
repnz
lods
insl
insl
shr
or
and
xchg
fidivrs
sub
stos
push
xchg
das
andb
cmp
sbb
xchg
out
dec
mov
aas
push
pusha
cs
arpl
inc
add
popf
pop
sbb
mov
outsl
push
or
jg
inc
shll
jmp
push
stos
mov
dec
xchg
sar
sbb
test
int3
push
or
and
mov
cmp
push
movsl
ljmp
ficompl
lret
xor
icebp
or
mov
push
cwtl
iret
or
jmp
adc
xchg
data16
fstpt
sub
pusha
in
int3
mov
int3
mov
imul
xchg
add
sbb
pusha
xchg
rcll
test
das
loop
movsl
test
sbb
and
jns
cmc
out
lcall
outsl
pop
sbb
int3
add
notl
xchg
and
pop
arpl
mov
popa
xchg
mov
daa
add
xor
push
test
mov
aad
xchg
shr
out
cmp
bound
out
fprem1
imul
mov
sub
icebp
jne
leave
add
loopne
inc
cltd
push
jl
call
loop
int3
and
adc
jle
mov
int
test
inc
mov
repnz
arpl
mov
rep
int3
test
in
adc
inc
je
test
mov
or
sti
ret
and
xchg
push
sbb
and
fwait
scas
pushf
jg
loopne
mov
add
sub
jl
lock
fsts
filds
rclb
inc
adc
xchg
stos
data16
out
xor
mov
add
mov
cmpsl
insl
lahf
mov
pop
cmp
push
movswl
or
xchg
addr16
dec
nop
popa
cmpsb
leave
scas
cmpsl
rorb
push
push
into
xor
push
ret
xchg
lcall
push
inc
jg
lahf
sbb
ja
stc
jno
push
xchg
fsts
mov
inc
loopne
dec
pop
mov
test
jnp
cli
jle
lods
fbld
mov
and
sbb
fwait
push
jge
add
push
xlat
cmpsb
adcl
mov
dec
pusha
xchg
lock
inc
mov
xor
aaa
or
or
mov
jmp
inc
xor
fidivl
sub
xchg
xlat
sub
nop
dec
fwait
mov
jo
pop
or
adc
pop
adc
pop
insl
lahf
inc
jmp
mov
dec
outsb
in
nop
mov
fidivrs
xor
xchg
leave
mov
dec
and
mov
dec
orl
hlt
cmpsb
inc
and
xchg
and
xchg
sub
mov
add
jp
pop
imul
sub
loope
mov
dec
fadds
or
clc
addl
or
out
sub
or
cld
dec
pop
sub
int3
mov
call
mov
pop
sbb
div
and
sbb
outsl
gs
loope
or
aam
testl
movsb
add
shl
jge
mov
push
cwtl
jg
lahf
xchg
cmpsb
outsb
push
pop
mov
mov
dec
jb
loopne,pn
mov
dec
xchg
fiadds
popa
shl
out
daa
mov
lods
push
mov
pop
mov
lret
leave
outsb
shrl
mov
sbb
std
popa
or
lock
mov
dec
jl
adc
and
inc
xchg
lods
sbb
pop
lcall
mov
cmpsl
mov
add
xlat
add
xchg
mov
dec
cmp
mov
xchg
pop
pop
sub
out
mov
add
add
dec
lcall
adc
lret
mov
xor
add
hlt
add
add
and
xchg
mov
roll
pop
dec
clc
dec
stos
pop
inc
xorb
and
sbb
mov
mov
pop
stc
sub
push
mov
add
into
jge
mov
mov
jecxz
mov
nop
mov
pop
ja
gs
je
inc
aas
cld
test
and
loope
data16
andb
pop
mov
and
fistpl
lods
jecxz
or
icebp
fdivrs
sarb
subl
jg
es
lock
ja
xchg
xchg
pushf
mov
adc
adc
lret
out
sub
inc
mov
shlb
in
testl
sub
add
inc
adc
xorb
adc
push
mov
ret
ret
stos
sbb
insl
xlat
fadd
add
fwait
int
push
call
push
xor
cmp
imul
mov
lea
xchg
pusha
cmc
aad
loopne
cmp
aas
mov
jb
add
and
inc
sub
sbb
fldt
lock
ret
fwait
imul
insb
jns
jo
out
pop
lea
hlt
adc
jl
pushf
shl
imul
pushl
popf
mov
out
xor
ror
dec
outsb
lock
pop
add
mov
push
xor
cli
adc
mov
cmp
jb,pn
test
xchg
and
imul
sbb
andl
cmp
pop
cmc
mov
add
movsb
jmp
sub
and
sbb
adc
movsb
xlat
push
scas
addr16
or
push
pop
in
es
repz
xchg
out
cmp
into
arpl
adc
jne
notl
movsb
add
cs
cmp
xor
andb
jl
sti
push
push
bound
cmpsl
fbstp
mov
jns
push
mov
mov
shl
mov
dec
fidivrs
in
adc
popa
push
xchg
bnd
in
mov
mov
add
xor
pop
adc
ljmp
test
flds
add
fiaddl
inc
lea
hlt
dec
xor
loope
test
pop
in
adc
xchg
scas
in
les
mov
lods
movsl
test
bound
sub
jae
cwtl
out
pushf
movsb
testl
dec
inc
cmpsl
ret
mov
fdivr
test
ljmp
mov
add
jno
jnp
push
gs
push
lahf
mull
xchg
sub
xchg
imul
inc
cmc
aad
and
jns
lret
add
jne,pt
add
call
jbe
xchg
pop
push
cmp
lahf
fs
in
push
and
fistps
push
sahf
rcrb
adc
jbe
fwait
lea
sub
inc
sub
lret
test
arpl
sahf
out
mov
cmpsl
pop
xchg
enter
jl
cmpsl
xchg
mov
xor
mov
push
inc
int3
insb
mov
cmp
addr16
push
xchg
lahf
in
scas
and
mov
pop
fdiv
dec
lea
inc
repz
or
fisttps
les
push
mov
ljmp
or
push
stos
cmp
imul
adc
mov
adc
test
mov
xor
dec
pushl
xlat
arpl
sbb
fs
mov
cmp
outsl
jb
imul
rcrb
cmp
cmp
and
jmp
roll
pop
int3
lods
mov
fcmovbe
and
mov
or
mov
xchg
dec
mov
jge
daa
fnstenv
sbb
push
test
jge
outsb
aam
lret
push
mov
and
leave
inc
leave
lahf
mov
aam
xchg
inc
es
jns
pusha
aaa
cmp
orl
pop
outsl
subl
decb
mov
pop
jnp
mov
mov
and
push
cmp
sahf
cmp
add
dec
dec
or
loope
or
pop
das
ficoml
fwait
imul
sbb
ds
in
hlt
mov
pushl
fisubrs
aaa
lahf
mov
sub
leave
pop
imul
xchg
jl
dec
out
loop
std
push
sbb
lods
ds
jg
inc
fs
push
xor
and
pop
aam
bound
test
or
inc
decl
jge
or
int
out
loope
sub
lret
push
cmp
cli
add
mov
loopne
ret
aad
and
add
add
mov
jno
cmc
divl
mov
lcall
add
xor
ljmp
int
arpl
in
adc
mov
jnp
sub
push
outsl
push
pushf
cwtl
cli
mov
xchg
mov
xchg
imul
mov
push
cwtl
cwtl
fxtract
add
pop
push
arpl
sar
adc
mov
sbb
cmp
and
cs
mov
test
push
insl
cmp
push
push
pop
xchg
sub
add
sbb
scas
lock
fsubs
and
out
add
adc
jns
or
insl
or
mov
test
or
xor
dec
cmpsb
cmc
aam
fnsave
mov
push
xor
mov
push
xor
pop
into
pop
inc
mov
int3
mov
pop
mov
inc
sbb
mov
shr
xchg
popf
add
and
cld
sub
hlt
int
dec
lds
popl
inc
dec
xor
add
cmp
pop
jns
aas
mov
fscale
xchg
jns
outsb
cmp
shlb
aaa
int
dec
repz
cmp
and
lock
ds
push
push
jns
and
cmp
out
lods
dec
mov
into
iret
sub
mov
mov
mov
ds
test
aad
or
hlt
xchg
mov
mov
sub
repz
loop
flds
mov
ljmp
inc
lret
jb
aas
mov
push
sti
mov
sub
in
pop
dec
or
in
xor
imul
bound
sub
jne
mov
sbb
pushf
sbb
lret
jg
lea
orb
sub
inc
enter
add
in
nop
testl
das
mov
or
push
out
jno
add
nop
push
aas
jle
out
ja
adc
or
cmc
in
jns
sbb
xchg
xor
outsl
add
pop
shlb
fwait
jg
pusha
xor
pop
add
mov
dec
push
push
mov
notl
mov
xor
pop
enter
leave
push
dec
push
lds
lock
inc
cmpsb
lods
sahf
adc
rorl
sti
mov
jg
fidivs
insb
push
scas
pop
or
pop
dec
in
sub
sub
xchg
xor
out
iret
mov
jb
icebp
repz
popf
push
jle
int3
sub
gs
pop
cmpb
lret
push
mov
icebp
pop
scas
sbbb
rol
mov
pop
pop
xchg
and
popa
jne
xchg
in
popf
fwait
mov
ss
lods
out
ret
and
mov
bound
mov
ret
mov
test
push
dec
sub
aaa
jp
sub
imul
pop
mov
jmp
jmp
out
xor
test
xchg
imul
int
sbb
cmpb
aam
sub
je
add
popa
jae
subl
and
cs
gs
push
pushf
inc
cli
shl
aam
fs
inc
mov
mov
mov
cmp
pushw
outsb
sub
filds
scas
xchg
inc
cltd
call
sub
divb
divl
cli
mov
rolb
dec
in
xchg
dec
add
fadds
scas
jmp
or
ret
push
jns
movsl
adc
int
sbb
pop
out
js
les
jno
mov
dec
aaa
or
adc
jge
dec
or
sbb
adc
and
cmpl
xor
inc
mov
jo
hlt
xorps
into
mov
jl
cld
dec
and
inc
push
cmc
repnz
add
inc
test
pop
mov
leave
fsubr
shll
fisttpl
push
pop
or
xlat
fmuls
jne
imul
and
mov
mov
ss
inc
popf
inc
pop
add
sub
push
mov
loop
or
popa
add
negl
cmp
inc
aam
leave
adc
ret
enter
cld
jnp
hlt
push
and
mov
leave
mov
or
daa
push
push
lods
inc
cmpsl
jo
sahf
das
push
push
jbe
aam
xor
adc
pop
imul
ljmp
les
movsb
push
mov
mov
in
and
jg
es
pop
mov
mov
push
lcall
fstpl
fld
dec
push
pop
mov
cmp
sub
cmp
leave
or
jecxz
das
cmp
cld
iret
sahf
sub
in
pop
add
add
ret
inc
fisttps
lahf
int
push
cmove
cli
xchg
sbb
add
hlt
add
add
jp
aas
jp
adc
ret
adc
imull
pop
std
and
xchg
aas
loopne
pop
xchg
es
hlt
mov
xchg
dec
dec
xlat
test
mov
ljmp
into
iret
and
dec
imul
pop
movsb
pop
mov
cmp
mov
push
push
sub
fcomi
test
dec
call
and
or
pop
cli
mov
mov
and
loopne
call
add
pop
mov
xchg
sahf
roll
stos
jb
imul
mov
cltd
xor
add
call
shll
insb
mov
or
stc
dec
pop
sub
sub
cli
pop
fcmovnu
push
nop
inc
fidivrs
xchg
push
xor
lods
shl
mov
add
jg
dec
lcall
jne
mov
inc
sar
inc
xchg
dec
leave
cmc
adc
cmp
add
pop
pop
std
cmp
enter
mov
jae
and
outsl
push
icebp
outsb
mov
sbb
ss
rorb
loop
je
pop
pop
adc
ficomps
pop
xchg
ds
popa
dec
pusha
faddl
inc
push
pusha
fwait
jb
xor
test
shrl
test
imul
insl
sbb
sarl
cmpb
pop
mov
loopne
nop
sbb
pop
loope
sbb
sub
popa
ljmp
adc
fcmovbe
mov
and
adc
out
aad
push
cmp
imul
jo
push
xor
cmpsl
icebp
adc
andl
mov
inc
aas
pusha
mov
scas
sarb
jg
iret
insl
test
fbstp
and
idivl
cmpsl
cmp
outsl
fwait
sub
lret
cli
loope
jae
imul
sub
push
dec
das
or
mov
sub
mov
cmp
sbbb
xchg
fldt
popl
add
pop
cmp
cli
mov
cmp
cli
or
repz
push
clc
push
and
movsl
js
jnp
imul
add
je
hlt
js
mov
bound
push
lahf
cmp
in
mov
push
adc
sub
inc
dec
inc
pop
aam
stos
push
fisubrs
stos
ror
add
movsl
mov
inc
lea
xor
lds
push
cmpsl
mov
subb
xor
sbb
push
mov
dec
sahf
fucomip
push
push
scas
pop
or
cmp
or
adc
ret
sub
movsl
divl
pop
aas
lods
or
push
loopne
lds
mov
loope
insl
orb
out
lcall
jg
dec
sub
push
cmp
test
stos
cmpsl
out
push
pusha
jo
repz
or
push
xchg
dec
xchg
das
pop
cmp
sbb
stc
lods
rorb
repnz
test
mov
inc
std
call
mov
addr16
xor
mov
test
mov
mov
rorb
jne
data16
sbb
and
cmpsl
mov
sub
adc
cld
adc
gs
fwait
adc
push
outsb
aam
mov
aad
inc
jb
rorb
jns
lock
das
or
movsb
jns
jae
push
test
out
lock
mov
jle
imul
xchg
or
or
adc
jno
mov
or
push
pushf
mov
xlat
mov
fsts
xchg
movsb
push
lds
cmp
shrl
fwait
lods
push
int
and
in
cmp
dec
xchg
and
sub
daa
sti
test
jmp
sub
jne
adcl
sub
ljmp
movsb
jno
mov
jmp
test
push
mov
ret
jg
push
outsb
push
sub
and
xchg
stc
ljmp
fwait
and
shrl
subb
out
call
mov
movsb
jne
pop
and
in
addr16
jmp
xor
add
inc
add
scas
mov
cwtl
jno
cltd
stos
ja,pt
movsb
fisubrs
push
dec
sub
xchg
insl
cmpsb
cmc
cmpsl
out
imul
shll
or
rcr
mov
lret
pop
ret
das
or
push
mov
add
mov
jno
stc
mov
insb
mov
dec
xor
lret
inc
adc
adc
lret
imul
pop
xor
ficompl
mov
lea
add
add
call
aas
popa
adc
adc
call
add
add
add
mov
mov
push
or
int
in
jg
ficompl
mov
xchg
pop
inc
cmp
clc
or
sahf
popa
mov
arpl
or
cmpsl
sub
repnz
out
pop
or
inc
and
jns
push
cmp
clc
in
in
xchg
faddl
iret
movsl
pushf
dec
sub
fwait
or
cmp
nop
jecxz
movsb
orb
bswap
mov
movb
test
lea
leave
sub
mov
fldl2t
pop
sbb
stos
jae
cmp
cmp
sub
pop
jmp
or
lds
mov
jge
fs
push
and
fdivr
sub
cmp
in
mov
cwtl
pusha
and
xor
sbb
and
push
mov
fcoms
inc
lret
pushf
je
js
mov
mov
jecxz
lock
xchg
inc
fldt
adc
pop
lods
mov
inc
insl
mov
push
mov
fdivrs
inc
push
mov
mov
mov
cltd
dec
orl
mov
pop
enter
push
push
dec
adc
adc
jmp
xlat
cs
mov
sbb
dec
sbb
mov
adc
add
jg
js
cld
and
or
add
xchg
cmp
jg
iret
fwait
dec
ja
mov
cmp
xor
fwait
jne
push
vmovntdq
pop
add
aam
aas
or
xchg
jle
fadds
leave
icebp
mov
and
aam
adc
pop
repnz
in
iret
sub
rcrb
mov
xlat
call
pop
fsts
test
jmp
jge
aas
mov
dec
cld
repnz
xlat
adc
repnz
popa
dec
ss
add
iret
filds
ficoml
pop
es
fistpl
push
or
sub
scas
jne
xchg
push
pop
push
jae
sbb
data16
push
jmp
fistpll
jge
pop
or
icebp
dec
push
shll
jo
test
aaa
add
xor
sbb
xchg
call
inc
mov
add
jle
add
dec
xchg
xchg
mov
cmp
or
int3
xchg
stos
iret
and
add
mov
push
shlb
out
inc
xchg
movsl
jnp
cmc
dec
test
inc
cmp
ja
jno
clc
xor
inc
xor
pop
jmp
push
sub
sahf
test
push
scas
je
cltd
sub
mov
inc
in
mov
cmpb
hlt
icebp
nop
repz
add
xchg
push
scas
ret
mov
jb
das
insb
rcrb
cmpl
test
mov
js
jb
mov
xor
es
sub
es
cmp
loopne
xchg
loop
popa
cld
pop
aam
adc
test
xchg
push
fs
inc
push
stos
mov
pushf
push
push
dec
shrl
sbb
je
inc
adc
mov
shrl
insl
pop
lods
sti
vfnmadd132sd
xor
push
mov
xor
pop
push
inc
sbb
xchg
inc
sub
add
out
and
mov
inc
pop
jns
dec
sbb
sbb
stos
cmp
cmp
in
addr16
add
mov
jg
sub
loop
testl
mov
addr16
jge
jl
fimuls
shrb
or
inc
mov
adc
sub
cmp
push
inc
idivb
push
dec
sub
sbb
lods
xorb
andl
add
dec
outsb
push
add
test
mov
icebp
sbbb
ja
xor
xchg
dec
imul
inc
rolb
mov
fisubl
push
cmp
test
mov
inc
lock
add
loopne
mov
inc
sub
scas
lods
inc
add
mov
or
out
jp
inc
adc
inc
push
jp
and
inc
or
stos
mov
adc
test
les
cmp
mov
sub
aaa
daa
cs
leave
mov
push
sub
outsb
xor
sahf
ja
mov
push
data16
xor
nop
sahf
mov
adc
push
cs
cwtl
sub
je
dec
jmp
sub
test
cld
cmc
inc
or
flds
pop
icebp
mov
xchg
lock
icebp
inc
and
out
fsubl
and
mov
mov
xor
repz
and
pop
mov
xlat
or
cmpsl
add
fstps
mov
add
add
fidivrs
int
push
push
add
hlt
add
add
xchg
push
shrb
cmp
stos
jne
fbstp
int3
ss
invd
subb
cmp
add
out
repz
inc
push
insb
mov
pop
mov
xchg
fildl
repnz
lahf
pop
fcoml
sub
outsb
push
mov
cltd
movb
xchg
push
je
sub
push
fwait
mov
out
or
aaa
mov
rcll
pop
mov
lret
imul
xlat
je
lock
loop
push
in
js
jnp
gs
in
lret
pop
xchg
lahf
sti
stc
ds
rcl
lock
push
test
mov
mov
out
imul
insl
lea
jno
mov
out
sahf
int
popf
repnz
jae
outsb
mov
test
sbbb
lcall
rcrl
out
xchg
lea
test
js
mov
jl
in
rorl
push
xchg
and
xchg
mov
jnp
dec
lahf
rcll
cltd
test
sahf
and
les
hlt
and
repnz
inc
pop
shll
push
outsb
mov
mov
mov
cs
push
pop
sbbb
fidivs
pop
dec
push
lret
add
push
addr16
inc
mov
add
cwtl
mov
mov
pop
comiss
fimull
sub
xchg
jge
insb
into
adc
cmpsb
push
jl
notb
loope
and
xchg
loope
inc
mov
mov
pop
mov
lds
fs
xchg
test
jae
dec
fs
data16
push
inc
cs
add
mov
addr16
repnz
test
add
xchg
gs
addr16
xchg
mov
mov
in
cmpsb
add
adc
push
rolb
mov
jne
push
jg
fisubrs
mov
in
lea
add
lods
sub
xor
xchg
fisubrs
inc
sti
cmpsb
and
in
push
push
insl
insb
fildll
rcl
ds
xchg
cmpxchg
pop
sbb
daa
aad
xor
push
mov
arpl
dec
xor
shl
adc
les
out
subl
sbb
xchg
push
cmc
cltd
roll
mov
push
test
pop
outsl
xchg
loop
inc
pop
mov
movsb
cmp
cmpsl
lea
adc
out
mov
or
dec
mov
out
mov
cmp
mov
push
test
mov
jg
push
lret
xchg
iret
cmp
inc
xor
roll
xchg
xbegin
fwait
mov
out
int3
xchg
push
clc
mov
in
mov
into
cmp
aad
mov
xor
pop
arpl
mov
jp
iret
fistl
mov
paddusb
js
or
sub
sbb
rorl
xor
or
adc
jnp
leave
sti
mull
add
jb
sub
mov
bound
xchg
arpl
nop
ss
shl
addr16
sbb
cmp
outsl
insl
push
lahf
subl
or
add
dec
aad
enter
mov
xor
adc
cmp
mov
mov
sub
adc
adc
xchg
dec
aaa
pop
and
jae
mov
scas
pop
cmc
shrb
push
xor
jnp
sbb
dec
jl
mov
xchg
push
cmp
gs
and
jne
jecxz
rcrl
xchg
xchg
fcmovu
mov
or
imul
push
jecxz
fildll
jle
push
xor
jns
subb
shlb
clc
ljmp
stos
mov
fimuls
out
fmuls
filds
mov
jp
push
mov
int3
lea
xchg
subb
xlat
decb
leave
add
scas
popa
mov
adc
mov
or
mov
fstpt
hlt
out
dec
mov
mov
mov
push
fistl
clc
push
pop
or
iret
push
outsb
push
sub
sbb
mov
xchg
inc
aas
xchg
out
loopne
cmp
fsub
push
stos
shlb
xchg
leave
popf
test
out
pop
xor
dec
inc
add
lret
add
scas
scas
cmpsb
js
mov
add
jb
dec
mov
jle
sarl
jecxz
adc
push
xor
fdivrp
outsb
mov
sahf
inc
lods
inc
xchg
out
jmp
sub
add
add
mov
push
out
std
mov
push
jg
mov
cmc
or
add
add
add
cmp
sub
insl
mov
or
enter
push
in
mov
inc
jae
xchg
ret
push
lea
cmpsl
inc
add
ja
jbe
mov
out
ret
iret
aas
push
push
xchg
imul
dec
add
xchg
fldenv
fldl
add
ret
inc
xchg
and
xchg
mov
js
push
dec
jnp
stc
pushf
outsb
mov
sbb
clc
arpl
rcrl
imul
iret
das
fnsave
cmpsl
outsl
and
fmul
mov
dec
stos
bound
stos
cli
sub
mov
pop
xchg
mov
xchg
scas
setns
pop
xor
mov
bound
call
imul
push
scas
and
cmp
mov
fsts
scas
rorb
test
or
imul
cmpsl
or
lret
pop
pushf
push
dec
mov
inc
out
push
mov
js
push
insl
mov
dec
jbe
jmp
jnp
jns
cs
andb
and
in
cmp
insb
inc
dec
inc
jmp
bound
fisubrl
int
rcrl
aas
xchg
rcll
jge
and
lcall
ss
or
push
pop
mov
popa
fwait
add
pop
ja
enter
jae
icebp
cli
lods
lods
pop
rcll
cmp
inc
jnp
out
add
xor
subl
lods
or
scas
inc
sarb
cmp
inc
jae
mov
cmpl
jb
pusha
pop
push
fcoml
adc
xchg
inc
sub
out
lods
stos
decl
and
mov
inc
inc
mov
xor
rorl
fistps
lcall
lods
rcrb
xchg
cmc
push
dec
adc
fcmovb
dec
stos
daa
js
shlb
and
push
fldl
mov
xor
jae
mov
pop
mov
test
sbb
out
jne
in
dec
xor
lret
insl
push
scas
add
inc
loopne
mov
inc
jne
pusha
add
sbb
adc
adc
in
cmpsb
adc
push
sbbl
xor
je
mov
push
xchg
mov
es
adc
mov
icebp
jo
sbb
xchg
ret
popa
pop
out
xor
in
adc
adc
mov
adc
add
add
jge
xor
mov
cmp
pop
sub
xor
cmp
sbb
mov
into
hlt
add
cmp
jmp
jle
push
mov
sub
sub
push
add
sbb
aas
out
pop
pop
dec
mov
cmp
add
es
xchg
stos
add
push
xlat
pop
fists
sbb
inc
push
bound
push
or
jecxz
popa
outsl
insl
imul
int
mov
lret
jp
lret
enter
loopne
inc
or
jnp
inc
sahf
cmpsl
mov
jmp
scas
cmpsb
mov
inc
aaa
jno
dec
nop
xlat
sub
mov
xchg
in
loop
or
in
fbstp
and
popa
hlt
push
dec
inc
pop
stos
add
pop
or
lcall
rcl
or
clc
loop
mov
push
dec
sbb
dec
adc
out
aad
mov
xchg
int3
fcmovu
mov
cwtl
addr16
xchg
add
fidivs
cwtl
jb
adc
push
pop
daa
in
dec
mov
lea
sbb
iret
ds
adc
arpl
mov
mov
xchg
ja
ds
jno
cltd
xchg
pop
into
or
push
xchg
mov
push
test
and
loop
cs
cltd
icebp
jl
pop
lock
in
movsl
cmp
imul
cmp
pop
push
daa
lahf
ret
or
push
in
loopne
jno
sarb
test
shlb
jns
mov
lret
dec
dec
mov
inc
aam
sub
cmp
sahf
dec
mov
cli
les
jmp
inc
out
test
std
sarl
data16
xchg
mov
sahf
jns
pop
lret
jecxz
push
add
out
jmp
test
add
push
popa
cmpsb
test
fdivp
gs
xchg
shlb
or
cmp
add
sub
sbb
dec
cld
sahf
pop
push
jmp
mov
add
mov
test
cmp
test
inc
mov
jae
xor
repnz
sub
in
xor
xor
mov
and
lahf
dec
lret
pop
pop
fldl
pop
ljmp
add
lret
in
out
dec
add
call
add
add
add
xchg
rcrl
cmp
out
sbb
xor
arpl
add
pop
inc
xor
call
sar
fwait
addr16
pushf
cld
add
add
lcall
jge
fistpl
add
fidivrl
xchg
push
movsb
mov
push
pop
aad
jmp
pop
xor
jne
adc
xor
lock
out
xchg
pop
sbb
iret
push
sub
adc
cmp
lods
dec
shrb
mov
xor
mov
xchg
sti
jns
pop
mov
sti
lds
in
push
lods
fstl
shrb
push
aaa
inc
cltd
mov
pop
add
ss
cld
stc
lret
lds
push
adcl
add
jmp
and
andl
enter
jno
cltd
int
es
xchg
mov
sub
arpl
xchg
icebp
test
jle
arpl
and
sbb
pop
loop
data16
fmuls
testl
stos
push
mov
push
jl
clc
jne
lret
sbb
inc
cwtl
inc
and
hlt
mov
or
les
mov
cmpsl
jns
out
js
cmpsb
popf
sub
or
mov
into
fmuls
sbb
insb
inc
bound
push
and
lcall
ficomps
xchg
rclb
bswap
js
xor
pop
test
mov
add
or
pop
cmp
add
shrb
jp
cwtl
clc
cmp
mov
insb
push
pop
cmpb
aam
imul
mov
leave
lods
inc
into
or
mov
cbtw
jl
out
and
mov
jnp
lds
lock
sub
outsl
xrelease
data16
lret
mov
sub
inc
or
mov
cltd
mov
sub
shlb
aaa
push
movsl
adc
vmovups
adc
aad
cmp
mov
pop
call
adcb
sub
mov
cmp
push
mov
xchg
pop
ljmp
push
inc
jns
pop
sub
push
or
test
xor
and
jle
mov
and
add
mov
cmp
xor
inc
out
inc
loop
call
aad
push
dec
outsb
adc
sub
push
and
call
sbb
mul
idivl
in
xchg
das
adc
xor
stos
adc
cmc
shll
mov
sub
ljmp
subb
adc
daa
pusha
pusha
cmp
mov
add
sbb
push
inc
adc
ret
cmpsl
fistl
out
push
dec
mov
fsts
aam
inc
mov
push
fwait
jge
daa
sti
sub
test
pop
repz
dec
imul
mov
je
addl
jnp
xor
mov
fstl
aam
add
rolb
test
stos
xchg
outsb
add
fst
sbbl
jae
mov
or
loop
mov
lret
out
addb
icebp
inc
in
fistl
jb
stc
stos
insb
cmp
xchg
es
xchg
out
cmp
ja
and
jae
jge
ret
sti
mov
adc
adc
cs
in
jp
and
jb
ss
push
shll
push
ror
rol
sbb
push
mov
shlb
dec
fadds
mov
mov
mov
adc
jbe
rolb
lds
dec
fcoms
xchg
xchg
xor
xor
bound
divb
jecxz
daa
mov
cmp
xchg
push
repnz
jne
aas
mov
movsl
xchg
js
test
pop
xchg
cmc
iret
dec
shlb
push
mov
fnsave
rol
xor
push
lret
repz
cli
and
add
pop
push
jae
loopne
or
pusha
popa
xor
jnp
jle
outsl
test
xchg
cmc
add
jmp
add
mov
inc
xchg
out
mov
fcmovnb
xchg
inc
add
add
jle
jno
das
ficomps
loope
lods
rcrb
scas
add
pop
andb
jle
inc
popa
xchg
or
dec
mov
mov
xchg
add
lds
ficomps
jbe
adc
out
shl
fimuls
lret
ljmp
sbb
cmpsb
fnstcw
aam
inc
daa
movsb
mov
repnz
mov
cmovb
pop
mov
addl
add
adc
je
std
mov
rolb
adc
add
add
add
push
push
mov
sbb
loope
aad
out
sti
cs
inc
cli
xlat
dec
xlat
inc
sbb
int3
pop
shll
pushf
bsf
jecxz
insl
xor
mov
fs
xchg
int3
ss
cli
out
loope
ljmp
insl
adc
cmpsl
lods
test
xor
mov
jno
insb
pop
sbb
subl
rorb
fdivrl
xor
cld
jp
mov
add
dec
mov
cmpsb
xchg
push
scas
mov
sub
in
bound
mov
jmp
cli
fidivs
pop
lods
mov
dec
sbb
mov
test
mov
rclb
pop
mov
outsl
sbb
xchg
inc
cmp
fs
sub
dec
ljmp
clc
fsubrs
mov
dec
cwtl
xchg
rclb
fs
shll
mov
shlb
popa
jl
outsl
lods
sbb
insl
push
cmp
shrb
fbld
inc
fs
jno
inc
and
aas
in
ret
mov
lahf
mov
cli
pop
mov
pop
cmpsl
mov
insl
cmp
test
pop
pushf
jo
dec
pop
add
jnp
fstl
dec
loope
lcall
xor
in
lret
xlat
out
insb
cmp
in
cmpsb
cmp
lock
cwtl
xchg
loope
adc
cmp
inc
inc
in
cs
mov
xlat
dec
insb
mov
add
push
pop
insb
mov
stc
jl
jp
int3
dec
xor
nop
or
mov
inc
jnp
cmpsl
jo
pop
movsb
push
mov
xlat
jmp
mov
ljmp
inc
or
xor
fdiv
repnz
fldl
stos
adcb
or
add
sbb
jbe
loopne
fs
mov
cmp
jl
stc
xchg
sbb
xlat
push
movsb
xorl
xor
int
xchg
mov
in
mov
mov
push
test
pushf
fidivl
or
pop
push
out
pop
lret
mov
pop
in
imul
ja
stc
clc
mov
pop
xor
xorb
xchg
sbb
data16
aaa
jl
mov
arpl
sub
inc
push
pop
sbb
pop
push
mov
inc
sub
xor
clc
std
pop
push
adc
adc
fs
orl
sub
add
push
pushf
and
inc
inc
mov
sub
fstpt
and
inc
enter
jns
xor
fmuls
fstpl
int3
in
sbb
dec
fwait
xor
pop
xor
movsl
mov
cmpsb
jae
cmp
pop
decb
xchg
hlt
jl
mov
addl
into
test
push
dec
jp
push
sbb
aad
ljmp
jnp
movl
aas
out
lods
mov
mov
sub
cmp
cmpb
xchg
add
sti
pop
mov
xor
jmp
mov
sub
pop
mov
mov
push
adc
fistpl
xor
push
xchg
pop
push
push
inc
mov
outsl
xchg
arpl
or
fs
xor
into
jnp
and
push
mov
cmp
pop
lds
cld
jge
lcall
in
cmpsl
std
sbb
jge
outsl
mov
fcomps
adc
xchg
sub
das
jg
movsb
add
jecxz
jb
sbb
fs
repz
pop
pushf
cmpsl
cld
xor
shlb
fisttpll
push
leave
sbb
call
lret
xchg
cmpsl
es
dec
pop
int3
adc
xchg
nop
mov
lret
push
xlat
icebp
and
test
or
xchg
lods
dec
xor
negl
xchg
mov
frstor
adc
pop
xor
aad
fistps
ror
shl
xchg
xchg
mov
call
mov
mov
or
dec
outsl
jns
hlt
lcall
in
std
cmc
push
cltd
inc
test
andl
subb
and
test
cmp
push
imul
sub
dec
push
in
test
test
fwait
dec
das
inc
cmp
cmp
add
pop
and
sub
clc
push
das
test
hlt
push
scas
push
test
cli
ret
and
pop
mov
aaa
adc
xchg
cmp
sub
rorb
imulb
sbb
or
sbb
loopne
add
scas
jnp
clc
mov
xor
add
in
in
or
adc
sbb
add
add
add
add
inc
push
dec
jmp
push
and
push
add
jo
push
adc
xor
sbbb
mov
imul
xor
dec
js
pusha
or
lret
cmp
pop
gs
bound
mov
ljmp
sub
insl
pop
add
sbb
or
es
cmpb
dec
lret
pop
inc
cmovl
xchg
sbb
stos
repz
push
and
cltd
adc
sub
or
je
jl
xor
testl
cmpsl
test
mov
leave
xlat
cwtl
sbb
hlt
adc
dec
jno
jnp
mov
fsubr
mov
mov
mov
mov
fdivp
in
mov
hlt
js
mov
or
js
xor
pushf
mov
std
cmpsl
pop
lcall
ss
dec
mov
mov
ss
orb
imul
hlt
or
or
xor
push
ret
outsl
sub
add
push
shl
push
adc
pop
shrl
lret
pop
fsubrl
jb
dec
mov
dec
out
jne
mov
xlat
and
loop
insl
popa
das
stos
clc
cld
lret
clc
js
test
dec
push
cmp
mov
add
mov
loope
test
push
call
mov
mov
dec
cli
mov
mov
sbb
dec
pop
pushf
popf
mov
fistpll
lods
sub
test
pop
leave
fsin
mov
sbb
lds
cmp
mov
lahf
mov
addr16
insl
adc
arpl
nop
push
push
add
pop
xchg
or
pop
lods
fiaddl
into
and
mov
cmpsb
dec
ret
sti
fisubs
jmp
mov
jle
shlb
lods
dec
loop
sbb
inc
in
inc
test
adc
cmc
pop
gs
pop
scas
add
mov
mov
sbb
cmpsb
or
xchg
jo
js
aas
enter
inc
out
in
push
shl
sarb
out
sbb
xchg
push
bnd
push
jne
add
sub
shrl
bound
xor
lahf
enter
aad
xchg
fs
in
fwait
push
daa
cmpsl
pop
aam
test
and
cwtl
fsubp
mov
fwait
add
jnp
cmp
sub
testl
sbb
sub
ret
xchg
push
push
pop
enter
cmc
mov
sahf
mov
inc
push
int3
lahf
and
cmp
jo
push
nop
push
leave
pushl
xchg
cld
and
push
insw
ret
push
sbb
mov
add
xor
mov
sahf
mov
idiv
cs
dec
push
mov
addb
out
jb
rolb
pop
adc
repnz
push
pop
mov
es
jbe
sarb
rcrl
mov
pop
jmp
imul
sub
jo
arpl
hlt
sbb
test
inc
mov
mov
pushf
or
xor
push
cli
sub
jb
push
or
mov
xor
negb
sub
lret
fdivrl
test
xchg
or
arpl
test
xchg
mov
ss
dec
mov
mov
adc
push
test
mov
push
jbe
test
xor
insb
mov
mov
scas
int3
scas
sbb
add
xlat
inc
int
jb
jecxz
xchg
das
jle
mov
xor
fstpl
movsb
pop
or
sahf
mov
push
in
and
lea
inc
ja
stos
stos
outsb
mov
out
lahf
test
loop
dec
sub
in
adc
cli
lret
movsl
out
insb
lods
cmp
sub
jnp
mov
dec
sub
jge
xchg
mov
fstps
imul
fisttpl
addr16
xor
adc
cmpsb
icebp
dec
imull
sub
imul
push
mov
das
je
pop
push
cmpsl
push
sbb
movsb
aad
lret
pop
or
mov
dec
add
insb
jecxz
and
fisttpll
jle
adcl
lods
cmp
jo
jge
or
movsl
std
xchg
hlt
sbbl
and
out
lahf
ret
mulb
sbb
leave
add
jg
pop
sahf
dec
or
pop
pop
push
fsubl
sahf
mov
sub
mov
lret
dec
mov
imul
xchg
adc
lds
sub
sbb
add
lods
test
gs
xchg
test
add
hlt
add
add
mov
add
add
jb
dec
add
add
add
ret
cmpsl
stc
xchg
out
push
in
dec
add
add
js
dec
jmp
pusha
or
lahf
out
sti
and
cmp
dec
aad
xchg
push
ds
xor
mov
cmp
adc
call
push
test
xchg
pop
push
jmp
pop
inc
and
and
out
iret
push
push
sbb
and
mov
xor
push
cmpsl
pushf
addr16
mov
adc
xchg
jo
mov
cmpsl
data16
lds
jo
scas
icebp
lea
fmull
je
mov
int
and
loope
sbb
sub
xchg
pop
sbb
xor
ret
addb
xor
shlb
frstor
push
xchg
outsb
outsl
cltd
fdivs
sbb
lahf
or
dec
jne
push
mov
or
in
pop
stc
jmp
movsl
pop
pop
cmp
cli
ds
xor
filds
xor
push
push
inc
enter
add
mov
test
out
sti
cmc
pop
out
xor
mov
lahf
stos
cmp
and
sub
cwtl
cwtl
insb
mov
fstl
pop
lods
and
and
push
pop
dec
popa
xor
jns
popa
fcoms
call
or
mov
push
pop
scas
sbb
stos
out
addl
mov
xchg
sub
push
push
int3
movl
dec
decb
or
shrl
loop
out
mov
sbb
cwtl
cld
out
pop
sbb
push
jmp
push
movsb
or
mov
mov
loope
loope
jno
jle
mov
mov
mov
in
lcall
xchg
xchg
push
daa
fdivp
inc
test
sub
das
push
lea
inc
out
out
and
mov
mov
push
mov
add
push
or
add
ret
push
ror
adc
and
lea
cmpsb
das
mov
call
in
sbb
cmp
sub
pop
lds
out
xchg
les
clc
das
cltd
xchg
nop
rolb
add
push
das
pop
ret
add
pop
mov
inc
test
or
adc
dec
jno
mov
lds
push
xor
pop
shlb
adc
arpl
out
xchg
lods
and
cli
lcall
add
mov
das
repz
pusha
or
push
sub
out
cmp
aas
ss
and
int
fndisi(8087
xchg
das
or
imull
imul
sbb
nop
cs
mulps
arpl
or
lret
and
addl
jp
xchg
mov
in
cli
test
hlt
xchg
jo
out
fisttps
lea
je
mov
insb
jno
out
mov
lock
sub
popf
mov
xchg
mov
fimuls
push
mov
enter
and
outsb
adc
movsb
in
xor
xchg
xor
jl
rcrb
xor
outsl
lods
into
fcomps
mov
mov
mov
mov
xlat
ret
add
mov
stos
outsl
arpl
push
mov
in
mov
sbb
bound
lods
dec
sahf
push
pop
test
test
in
sub
rcr
mov
ret
pop
fs
add
ret
push
sub
sub
js
jnp
sub
jae
jno
or
xchg
add
mov
fisubs
stos
xchg
mov
lods
inc
mov
leave
inc
and
mov
cmp
int3
popf
notl
iret
inc
push
rorl
in
dec
stc
xorl
sbb
dec
cmp
add
pop
xor
es
cmp
bound
inc
loope
fucomi
dec
inc
pop
adc
and
or
lahf
fucomp
push
test
into
and
xor
gs
pusha
stos
and
loope
dec
pop
jae
pusha
lret
pop
test
adc
or
js
sbb
lods
dec
jge
push
sar
xorb
add
rclb
into
and
out
cmc
xchg
mov
ret
in
adc
mov
jmp
fwait
cmc
push
jne
inc
loope
cmp
mov
sub
push
lods
xor
mov
cmp
fadd
push
sti
popf
ret
fcmovbe
je
rcr
scas
and
test
testb
xor
movsl
mov
jecxz
imul
ja
mov
add
add
add
je
jne
pop
outsl
out
aaa
jae
pop
push
jb
mov
add
add
sbb
in
mov
add
aas
jo
inc
sbb
jle
int3
mov
sub
jnp
and
xor
or
sbb
jmp
mov
mov
loop
pop
jmp
pop
push
jo
enter
xchg
jge
fsubrl
mov
dec
cmp
ljmp
aad
testb
imul
fiaddl
pop
push
dec
lret
fwait
mov
sbb
jmp
jb
xor
adc
emms
es
sub
xor
or
fimull
dec
in
xchg
mov
mov
xchg
rcrl
xlat
popa
adc
test
out
xor
cs
cmp
pop
and
mov
sub
mov
ret
arpl
ja
and
orb
ljmp
mov
or
ret
mov
sub
push
dec
test
mov
negb
sti
sahf
jnp
inc
jmpw
pushf
cmp
mov
fwait
xchg
mov
inc
or
decb
ljmp
cli
xorb
mov
cmp
into
enter
dec
push
and
push
enter
jns
ret
stc
push
add
in
xorb
and
inc
push
out
andl
xchg
add
sti
cmpsb
dec
adc
cs
lret
mov
nop
push
lret
jecxz
cwtl
es
mov
mov
pop
clc
cmp
push
flds
xor
and
lods
fsts
int
mov
enter
jae
sub
dec
push
dec
mov
dec
dec
push
aas
test
stos
sbb
xor
loopne
and
mov
cs
sub
dec
lcall
xchg
mov
incl
inc
inc
test
xchg
sbb
xchg
adc
jge
in
push
lret
mov
mov
mov
lods
popa
xchg
arpl
stos
sbb
fdivl
xchg
pop
test
movd
fldl
push
int
sub
jecxz
sbb
dec
pop
dec
fsubs
lods
dec
mov
sub
mov
mov
movsb
lods
ficomps
imul
or
lods
aaa
fstpt
jbe
int3
mov
bndstx
ljmp
mov
enter
lret
faddp
inc
orb
leave
and
add
xor
or
pop
outsl
inc
jecxz
outsb
out
dec
or
js
jle
dec
pop
inc
add
shrl
pushf
pop
nop
xchg
xchg
xor
cld
int
es
xchg
aas
jp
outsl
in
jp
or
mov
leave
jbe
mov
lret
jns
inc
int
testb
pop
imul
shll
mov
subl
arpl
shlb
aaa
xchg
leave
rcrl
mov
and
lods
mov
xchg
cmp
push
mov
lcall
cli
push
mov
es
mov
lods
out
xchg
shrl
xor
xchg
jp
pop
ficoms
or
lret
sub
dec
or
mov
loope
mov
push
es
arpl
lock
jle
outsb
popf
js
iret
push
jb
std
out
sbb
bound
or
jecxz
cltd
out
in
cmp
mov
jns
stos
xchg
xor
movsb
stos
sbb
add
pop
xchg
jae
jns
loope
jbe
loopne
dec
mov
rcl
xor
or
and
push
mov
mov
fadd
inc
or
int
bound
mov
xor
lret
inc
or
xor
loop
in
xor
ret
scas
inc
pop
bound
mov
test
push
das
jo
mov
aas
mov
fiaddl
outsb
out
sbb
in
daa
mov
or
pop
pusha
popl
mov
ret
nop
jle
or
popf
lods
in
bound
mov
push
addl
inc
jg
std
cwtl
add
test
rcll
mov
popl
push
lods
add
sub
cltd
cmpsl
sub
mov
cmp
mov
es
sbb
mov
xor
dec
icebp
movsl
lahf
aaa
add
test
xchg
sbb
test
jns
rclb
shl
ss
and
out
lods
pop
sub
pop
adc
mov
xchg
data16
leave
clc
push
mov
adc
xchg
jecxz
push
sbbl
jl
bound
sti
int
push
cwtl
mov
int
xor
test
jb
sahf
push
int3
aas
sub
int3
xlat
jle
inc
fwait
add
add
dec
dec
ss
std
iret
cmp
cld
fwait
sbb
shrb
add
add
mov
pop
push
xor
cld
dec
xor
push
jle
push
pop
jne
outsl
push
or
mov
pop
imul
xchg
out
jnp
sbb
data16
shld
stc
test
cmp
mov
push
fwait
inc
xchg
mov
ret
sub
jae
imul
add
faddl
mov
cltd
std
psrld
inc
inc
xchg
orb
sub
hlt
jo
pop
out
imul
aas
add
movsl
and
hlt
xchg
pop
dec
lods
push
pop
ficoml
je
adc
lret
jl
mov
ss
scas
rorl
mov
jge
loopne
cltd
push
call
out
fsubrl
sbb
cwtl
fcoms
orb
xchg
adc
ja
push
jge,pn
sub
pop
clc
ror
fucomp
mov
mov
jle
xor
pop
jl
out
in
mov
inc
lret
scas
dec
sahf
pop
push
ja
sbb
jmp
daa
jae
out
jbe
push
sarl
sbb
std
xor
push
jl
ds
add
add
fstpl
inc
xor
shl
or
mov
sbbb
jl
jle
jnp
repz
jno
sub
and
sbb
cmpsb
jge
pop
mov
jecxz
data16
sahf
xor
push
mov
inc
cmpsl
jp
sub
aas
xchg
rolb
in
dec
xchg
pushf
mov
adc
inc
dec
int3
adc
call
sub
mov
mov
sbb
or
cmc
inc
and
pop
mov
sub
ljmp
sub
push
jb
jns
push
jns
xchg
sbb
mov
sub
xchg
cld
mov
push
outsb
push
arpl
scas
std
testb
cwtl
dec
iret
sub
fdivrs
sbb
dec
or
inc
jne
sub
inc
push
data16
xchg
and
scas
pop
or
cli
jnp
imul
jns
ljmp
insb
movsl
push
das
inc
int3
dec
cmp
hlt
push
adc
and
xchg
std
adc
clc
loop
mov
lds
inc
mull
leave
lret
push
dec
sti
shll
js
inc
jns
loop
xchg
repz
inc
repnz
xchg
adc
imulb
out
push
mov
dec
cli
dec
lods
call
daa
lock
loop
jp
insl
cmp
orl
mov
jmp
push
lods
in
inc
mov
andl
lcall
int
scas
pop
dec
push
push
push
push
xchg
push
jns
xor
stos
jo
test
dec
insb
lcall
xlat
gs
adc
out
xor
add
mov
or
pop
sub
pop
dec
push
repnz
xchg
bound
inc
cld
cmp
das
xchg
dec
js
andl
jmp
push
or
adc
and
ds
mov
inc
and
mov
mov
in
fidivrs
ss
imul
test
jecxz
or
inc
xchg
xchg
aas
mov
adc
adc
and
xchg
sarb
out
push
mov
cmc
andl
xlat
in
int
out
inc
add
and
rcll
pop
int3
mov
xchg
mov
and
add
int
jge
push
xor
shrd
jg
sbb
sbb
pop
push
fsts
dec
dec
xor
sbb
rcl
fldt
mov
lahf
movsb
push
dec
pop
pop
xchg
iret
xchg
or
pop
sub
repz
mov
push
lret
dec
test
mov
aad
mov
add
fcom
xor
adc
sbb
cld
jmp
imulb
icebp
lahf
test
or
insb
test
mov
in
aad
cmp
push
jl
cmpsb
pushf
pop
into
xor
popa
movsl
inc
test
loop
call
out
aad
mov
cmp
mov
push
out
inc
repz
jp,pt
or
mov
shll
inc
jbe
jne
lcall
negb
insb
decb
fs
jno
int
mov
inc
in
jnp
mov
frstor
repz
sarb
inc
ljmp
sub
or
lods
mov
fildll
pusha
iret
jo
sti
jmp
stos
cld
jl
sub
ja
out
data16
mov
outsl
inc
jecxz
jnp
dec
inc
clc
ss
xor
add
xor
popf
loopne
adc
ret
push
adc
mov
or
pop
lds
add
add
cld
es
mov
jmp
fdivrp
test
jae
mov
add
add
imul
insl
cs
or
xchg
data16
sarb
pop
out
enter
bound
or
pavgw
sbb
cmp
mov
std
jge
or
jns
std
jge
insb
fcomip
aad
jbe
cltd
mov
out
inc
aas
xchg
xchg
sub
push
mov
sti
fwait
dec
jecxz
loope,pt
lods
xor
lret
xor
aad
in
jbe
fnstsw
sub
fnsave
push
gs
sbb
pop
roll
xchg
add
mov
xor
f2xm1
in
push
sbb
mov
ljmp
mov
fistpl
test
aas
and
dec
es
mov
mov
xchg
sbb
add
jmp
and
xor
cmp
incl
xlat
pop
add
fcoms
and
cmp
jmp
dec
add
xchg
test
fwait
pop
adc
add
xchg
mov
mov
ja
pop
mull
and
sub
jg
test
pop
ss
sbb
pop
cmpsb
mov
jge
mov
mov
out
sbb
jmp
imul
sti
adc
idiv
in
movsb
fs
aaa
add
fs
fs
mov
mov
sub
add
nop
mov
cli
in
rol
jl
stc
jne
or
and
pop
je
mov
int3
je
inc
mov
sub
ficomps
mov
subb
lcall
call
push
or
mov
popf
lahf
sub
pushf
test
push
xchg
dec
fisttpl
add
inc
pop
pushf
jae
lods
loop
jp
out
cmp
or
push
and
mov
insb
adc
orl
dec
in
mov
cltd
dec
fidivs
xchg
idivb
jns
aam
add
rclb
cwtl
dec
dec
cwtl
push
ss
push
cltd
add
lock
stos
push
xor
out
ret
ljmp
mov
aas
mov
xor
and
movl
pop
add
je
and
movsb
sub
push
stc
int3
aad
xchg
ss
test
pop
sub
mov
outsb
in
loop
pop
addr16
leave
negl
iret
andl
sbb
or
jp
lret
fistpll
mov
out
aas
es
mov
arpl
std
scas
xchg
cli
inc
icebp
pushf
insl
cmpb
lcall
mov
xchg
sub
aam
jno
mov
cmpsl
dec
ret
dec
pop
mov
inc
mov
aaa
mov
lret
xlat
out
push
iret
bound
jl
jmp
jb
leave
cmc
pop
lret
xor
sbb
xlat
int
inc
int
cmp
sahf
cltd
roll
xorb
neg
popa
lret
mov
mov
nop
repnz
or
pop
cmpb
xchg
popf
mov
ror
in
in
je
adc
inc
shl
and
inc
adc
rol
jl
sub
mov
dec
mov
inc
mov
dec
stos
shrl
sbbl
fstpl
mov
push
push
lret
popf
sti
das
sub
insl
lea
negl
cwtl
inc
mov
insb
daa
rolb
xor
jno
jo
enter
mov
in
jo
popa
inc
loope
fcmovne
std
inc
mov
cmpsl
cmp
mov
push
daa
mov
xchg
adc
xchg
arpl
std
sub
add
lret
sbb
call
and
mov
xor
cmc
and
xchg
dec
pop
in
out
jmp
inc
out
sub
push
or
push
inc
in
test
mov
cwtl
lods
cwtl
push
jecxz
in
js
or
andl
and
add
std
sbb
jo
outsb
pop
add
stos
sub
cmp
iret
push
mov
mov
cmc
lret
and
xor
rorb
fsubrs
in
into
clc
xchg
adc
jb
test
mov
cmp
loop
sbb
pop
add
xchg
sbb
cmp
clc
popa
xor
je
jl
movsl
pop
pop
mov
sub
pop
jle
mov
mov
clc
push
pop
and
push
and
and
adc
ds
sbb
dec
cmp
mov
jmp
inc
call
xchg
cltd
sbb
add
aaa
sti
addr16
out
fidivs
popf
add
xor
add
add
add
pushf
sbb
xor
sub
xchg
mov
jae
ja
pusha
data16
outsb
ret
sbb
fwait
mov
push
mov
das
in
xchg
cltd
sahf
xor
sti
sub
inc
daa
fildl
inc
lea
stc
jmp
out
inc
cwtl
jl,pn
inc
xor
hlt
iret
loop
movsl
arpl
repz
pop
movsb
movsb
adc
sbb
push
outsl
movsb
leave
mov
stc
cmc
fcompl
lret
ror
pop
fsubs
dec
test
mov
stos
add
sbb
scas
mov
out
arpl
fdivl
sbb
adc
mov
loopne
test
lret
adc
lahf
xor
inc
cltd
loop
pusha
lods
adc
xchg
mov
stos
fsubrs
mov
imul
call
xchg
push
sbb
hlt
loopne
bound
or
pop
sbb
popa
sahf
lea
fwait
addr16
pop
in
fiadds
jmp
cwtl
add
push
dec
dec
sbb
stc
mov
push
cltd
jmp
push
cmp
addr16
repnz
push
dec
ret
test
sti
les
pop
and
out
test
rol
pop
stos
mov
push
bound
and
dec
aaa
mov
cmp
scas
and
inc
jle
inc
push
xchg
push
insb
icebp
test
mov
or
fs
xor
cmp
adcl
in
dec
adc
shlb
mov
or
enter
cltd
mull
jmp
pop
test
xchg
mov
es
inc
lods
jae
loopne
mov
pop
lea
sub
mov
push
sbb
mov
or
adc
add
shl
jg
loop
rcrl
js
and
adc
rclb
out
mov
dec
lret
test
cltd
mov
rolb
adc
jmp
mov
cmpsb
push
sub
out
adc
jno
pop
fwait
adc
ja
scas
dec
add
insl
lret
fsts
mov
push
stos
nop
pop
repz
xchg
mov
mov
push
inc
addl
jbe
in
mov
jno
popa
cmpl
jge
ret
sub
xor
aaa
push
cmpsl
and
out
sub
or
dec
push
popl
call
movsb
cmp
dec
leave
add
cmpsl
cmp
mov
adc
int
pop
adc
push
rolb
leave
add
loopne
andl
scas
jmp
mov
jecxz
std
filds
sbb
mov
ror
stos
lods
or
insb
in
cltd
mov
add
inc
stc
sbb
jno
int
sbb
cmp
cmp
xchg
dec
adc
dec
int
mov
subb
incb
sahf
enter
adc
sahf
inc
pop
imul
pop
push
jnp
xor
scas
add
lcall
and
cmp
push
out
lcall
aad
mov
sub
pop
sub
ss
jmp
or
jp
sti
mov
lods
xchg
incb
rcrl
iret
mov
aaa
in
inc
repz
mov
cs
lds
sbbb
dec
sbb
pop
jle
test
sub
lahf
andb
adc
into
pop
hlt
pop
test
xchg
pop
into
imul
sbb
xchg
jp
push
inc
push
push
dec
jle
xor
xchg
mov
mov
cltd
scas
jae
sub
sahf
mov
push
stos
or
aaa
sub
push
xor
pop
fs
ljmp
faddl
inc
and
dec
aas
mov
pop
push
mov
dec
dec
lods
ret
mov
push
int3
fs
dec
inc
stc
inc
movsl
jmp
jns
rcll
sub
xchg
popf
mov
test
pop
or
jo
scas
pop
iret
arpl
orb
inc
adc
mov
jle
outsl
pop
insb
out
mov
dec
fdivrp
sbbb
decl
out
push
mov
xor
loopne
les
adc
lahf
push
out
mov
insb
jl
or
cmp
addr16
sub
mov
fdiv
push
fcmovu
loop
cmc
mov
push
mov
jbe
push
negl
into
and
rcrl
lock
mov
scas
ss
inc
repnz
je
jae
rcrb
ret
sub
cmpsb
aaa
ja
fdivr
adc
sub
outsl
call
mov
lock
cltd
lock
aaa
mov
iret
into
sti
dec
add
sahf
in
jnp
add
add
out
sbb
repz
daa
push
and
add
add
int3
out
add
imul
and
mov
ds
mov
ljmp
cmp
aaa
outsl
adc
or
fxch
xchg
imul
cmpsb
jnp
xchg
out
pop
clc
inc
xchg
dec
sti
sub
das
or
dec
popa
mov
sbb
cmp
repnz
sub
add
pop
jge
or
xchg
mov
mov
xchg
or
sub
scas
jp
jne
fisubl
push
fnstcw
or
mov
xchg
or
sbb
shll
adc
into
sti
push
pop
jmp
out
arpl
jg
cwtl
push
es
dec
mov
push
pcmpgtw
push
or
loopne
aad
icebp
mov
in
sbb
inc
cmpsb
pusha
sub
jge
push
addb
pop
inc
lods
mull
or
mov
xchg
cmp
dec
fcmovbe
push
jmp
ja
adc
ds
test
in
nop
fs
lcall
jmp
sbb
pusha
lcall
into
push
pusha
sub
jo
aas
mov
jns
dec
pop
sahf
mov
out
ficoml
xchg
mov
aam
add
clc
shrb
pop
popf
ss
insb
and
frstor
fstps
or
jge
fisttpl
out
sbb
rorl
cltd
or
xchg
mov
pusha
xchg
jle
outsb
and
cmc
cmp
xchg
push
pushf
cmpsb
jg
mov
je
xchg
adc
pop
call
aad
push
outsb
ret
cmpsl
mov
lret
imull
mov
xor
fisubl
xchg
adc
aaa
mov
push
nop
test
dec
inc
lahf
xor
push
xor
icebp
sub
icebp
int
int
cltd
fstl
and
pop
ret
fcompl
dec
sub
sarb
pushf
dec
jle
mov
jno
and
sub
xor
sub
mov
xchg
sbb
sbb
add
adc
sti
outsl
and
cmpsl
fisubs
sarl
sahf
pop
cmc
stc
add
jg
jp
dec
xor
cwtl
or
pop
das
shll
rcll
xchg
push
in
sub
pop
jp
sub
test
mov
or
out
inc
inc
aad
mov
cmpsb
insl
cmc
jne
popf
sub
cltd
mov
cmp
bound
cmp
es
xor
pop
aaa
popf
mov
push
test
out
xchg
add
mov
add
jno
push
mov
lret
in
loope
pop
lock
jnp
mov
outsb
loope
loop
ja
inc
push
mov
dec
and
mov
jno
xor
push
test
aad
mov
movsb
sub
jb
in
arpl
ljmp
mov
and
movq
cmp
clts
dec
pop
or
sbb
sub
xor
sahf
dec
ja
mov
imul
xor
mov
rorb
outsb
push
and
inc
xchg
outsw
inc
inc
mov
loope
call
cmp
orl
inc
arpl
ret
xor
add
in
cs
jae
mov
mov
or
sbb
in
stos
pop
sahf
rcrb
bound
std
push
imul
std
ret
xchg
push
inc
xchg
lret
fwait
ljmp
sahf
fadd
push
jo
scas
xchg
daa
inc
or
and
mov
mov
mov
stc
pop
mov
pusha
and
les
cli
shll
mov
xor
jo
sub
pop
inc
xor
jo
mov
push
and
shrb
test
and
cmp
sub
inc
push
fisubrl
lea
push
das
and
cld
push
sbb
sahf
mov
roll
imul
fcom
and
pushf
mov
dec
jb
les
adc
rclb
pop
xchg
push
jl
jo
dec
movsl
mov
std
sarl
sahf
sub
jae
ror
cmp
jmp
popa
sbb
push
insl
loopne
scas
aad
push
xor
fildl
cmp
mov
mov
sarb
inc
shlb
mov
insl
sbb
lock
mov
mov
pop
icebp
sub
dec
push
faddl
orl
inc
aad
cmp
cmp
int
mov
insb
leave
push
and
add
add
mov
out
out
mov
push
cmp
cmp
add
add
add
aam
fwait
aaa
stos
jno
notrack
add
adc
and
rclb
outsl
popa
inc
dec
xchg
sub
inc
or
inc
jnp
xchg
or
mov
add
add
sub
sub
or
adc
jns
out
sub
scas
out
sti
in
sub
ljmp
call
inc
push
xchg
jecxz
jmp
jb
sub
shll
cmp
jne
mov
adc
sbb
jecxz
lret
loope
push
sbb
lcall
rcrl
cmp
fldcw
or
jmp
sahf
pop
mov
xor
pop
lods
xor
add
cmp
pop
sbb
cmpsb
fnstenv
cmpl
sub
pop
fisubl
iret
mov
jmp
or
xorb
xor
jnp
aam
test
adc
lcall
mov
cmp
sbb
mov
push
or
inc
sahf
add
cltd
call
push
push
int
dec
gs
mov
xchg
daa
lcall
jne
xchg
aad
popf
loop
add
mov
add
jp
pop
cmpl
lock
fwait
or
cmp
or
ljmp
push
insb
add
sti
imul
mov
sub
addb
mov
sub
aas
lds
lret
loopne
xchg
inc
jnp
pop
cmp
adcb
xchg
imul
aas
jp
cmpsl
imul
mov
cmpsb
sub
cltd
leave
stos
mov
iret
jmp
jne
int3
lods
xchg
inc
xor
lds
push
sahf
add
jb
jg
das
cmc
inc
push
ss
push
rcrb
xchg
mov
add
mov
xchg
cmpb
daa
pop
mov
dec
lods
xorl
std
fsubrl
fiaddl
push
push
mov
ficomps
fsubs
push
ficoms
sbb
mov
movsb
popf
lods
and
cmpsl
loop
dec
mov
mov
push
enter
xchg
jae
inc
scas
and
xor
lcall
sbb
test
daa
filds
fstpt
jle
aam
pop
aas
lods
dec
and
cmpb
xor
lret
jecxz
sarb
loopne
icebp
sub
mov
push
push
and
mov
mul
sbb
pop
dec
adc
push
cmpsl
int3
dec
jg
push
push
loope
fadds
xchg
lods
dec
loope
stos
arpl
enter
lock
cmp
loope
cmpsl
adc
jne
cmp
mov
xor
mov
out
inc
loope
pop
clc
and
xor
nop
scas
out
out
or
cltd
dec
loopne
and
loope
in
mul
inc
push
lods
mov
sahf
adc
xor
or
int
shl
push
inc
jne
or
mov
jb
cld
int3
jb
sbb
mov
sbbl
inc
mov
jbe
dec
pop
xchg
test
push
xor
fwait
and
les
inc
push
xor
scas
jne
push
mov
xor
in
sub
xchg
push
leave
jg
lock
mov
xor
inc
mov
hlt
addr16
idiv
ja
rcl
mov
xor
jns
mov
sti
xchg
mov
sarl
punpckhbw
pop
inc
or
jb
xor
jge
xor
mov
push
mov
sti
mov
popf
stos
pop
push
sub
lock
sub
mov
cmp
mov
lea
imul
aad
jns
and
out
sahf
test
lcall
jle
push
scas
leave
sbb
icebp
adcl
aam
xlat
xchg
lds
xor
stos
dec
stc
jno
in
or
jbe
jne
sbb
mov
mov
iret
and
not
push
lds
in
mov
pop
mov
or
dec
dec
lods
adc
push
cmp
push
xchg
rolb
mov
push
mov
fildll
mov
or
int3
cmc
cmc
mov
jmp
andb
fdivrl
aad
xchg
jns
cmp
ds
sbb
or
mov
fisubrl
mov
cmpsl
in
pusha
lcall
fsub
stc
sub
mov
stc
mov
inc
aaa
or
xchg
pop
mov
aad
push
jle
mov
stc
inc
fwait
push
inc
mov
lock
test
shlb
inc
mov
mov
ds
loop
jo
xchg
loope,pt
pop
daa
data16
add
add
adc
dec
negl
mov
std
cwtl
mov
jno
add
hlt
add
add
jle
int3
push
lahf
sbb
ret
mull
or
mov
and
stos
and
stc
sti
jmp
out
es
cmp
cmovle
ret
popf
ss
pop
mov
stc
insl
xor
outsb
insb
fwait
mull
in
jne
mov
mov
in
mov
pop
ffreep
sarb
insb
jp
adc
mov
jb
mov
out
fadds
cli
dec
iret
push
pop
or
ss
and
add
je
in
xchg
xor
sub
shl
stos
iret
cld
fwait
mov
lcall
xchg
popf
dec
sub
sub
and
fbld
cmpsl
or
icebp
push
icebp
stos
sarl
out
test
int
out
pop
jbe
imul
xor
in
lea
scas
push
cld
mov
ds
inc
sub
mov
pop
lods
adc
out
inc
mov
adc
dec
mov
bound
inc
mov
pop
aad
cltd
mov
stos
mov
and
mov
mov
pop
inc
cmpsb
mov
fs
push
cli
scas
rclb
arpl
cltd
mov
imul
inc
push
test
xor
bound
lods
in
mov
int
repnz
mov
pop
inc
cltd
daa
push
xor
pop
sahf
test
js
adc
xchg
and
movsb
rcrb
add
add
xchg
or
push
mov
leave
stc
out
lods
into
pop
ret
je
dec
das
in
xchg
jl
popf
test
inc
out
mov
pop
push
cmpsb
aad
test
mov
pusha
dec
fisubrs
add
push
fistpl
push
lea
push
incb
fs
call
pop
fmuls
aad
mov
imul
jb
xchg
enter
dec
mov
adc
jmp
jb
scas
fwait
mov
mov
addr16
mov
push
sub
insl
mov
push
or
jbe
xor
push
jp
arpl
push
cmp
push
jle
test
push
ljmp
out
xor
insb
sahf
xchg
cmp
lods
imul
xchg
xchg
jmp
xchg
mov
lcall
sub
xchg
pop
pop
or
mov
mov
lods
add
xchg
xchg
lock
push
in
jmp
aaa
adc
mov
mov
xor
and
loopne
adcb
outsb
push
xchg
xor
cli
sahf
je,pt
ja
addr16
aad
jae
mov
bound
scas
add
repnz
dec
adc
movsb
je
loopne
add
es
or
jo
loopne
bound
scas
push
gs
adc
sti
mov
and
dec
sbb
test
loop
or
stos
out
add
xor
xchg
ret
add
push
xor
shrb
mov
fadd
adc
mov
sbb
shll
lods
out
sub
pop
mov
jb
lcall
lret
jge
es
jb
push
dec
xor
and
rcr
outsb
pusha
es
fsts
psubb
cli
push
aaa
xchg
xchg
push
push
fadds
dec
aam
in
mov
cmp
xchg
mov
add
adc
test
nop
test
or
shll
and
int
and
mov
stos
add
repnz
scas
int3
scas
dec
insl
ja
cmpsb
jnp
in
jae,pt
sarl
out
sbb
repz
jg
add
lahf
je
pop
scas
mov
push
ds
enter
popa
jge
xchg
push
dec
push
popa
outsl
mov
imul
in
out
jne
add
lock
and
xor
mov
mov
jg
cmp
sub
sub
push
fmuls
sbb
insb
dec
mov
inc
adc
fbld
lods
push
sti
outsl
inc
sbb
faddl
push
mov
push
xor
insb
push
jbe
cmpsl
xor
sahf
insl
adc
imul
sub
negb
sub
mov
test
push
imul
aaa
jl,pt
pop
jecxz
sti
xorb
push
enter
xor
mov
cs
test
add
call
sar
movsl
lret
bound
push
dec
pusha
daa
cmp
jno
fldenv
movsl
jns
push
call
mov
sahf
add
add
in
mov
fdivp
cld
ds
daa
cmp
add
stc
gs
add
hlt
add
add
ret
scas
push
adc
mov
jge,pt
push
cmp
xchg
movsb
dec
andb
jmp
popf
repz
jg
xchg
push
sub
mov
dec
jno
sti
jo
jmp
les
mov
sahf
mov
imul
dec
jo
clc
dec
int3
push
rorb
loopne
lea
mov
popf
ds
dec
push
adc
notl
lret
sbbb
test
outsl
outsb
jge
repnz
pop
lcall
mov
int
cmc
into
sbb
add
add
adc
inc
xchg
lcall
cmp
adc
pop
jp
mov
cli
add
push
jmp
adc
inc
jne
adc
shlb
or
and
ljmp
pusha
test
and
cwtl
testl
repnz
jp
adc
loop
mov
cmp
nop
dec
add
dec
dec
pop
das
arpl
ficoms
outsb
adc
mov
push
arpl
movsl
int
push
jge
fistpll
mov
aas
lods
leave
sarl
ss
stos
icebp
clc
rorl
out
mov
mov
inc
mov
lret
sub
jae
mov
iret
push
xchg
into
imul
adc
xorb
lret
push
xchg
sub
adc
sub
push
lret
addr16
call
movsl
loop
pop
dec
ja
out
je
jecxz
lret
mov
subb
in
cmc
lret
shlb
push
test
pop
cmp
in
lahf
into
lcall
pop
cmp
inc
int3
cli
xchg
xor
pushf
push
stc
scas
cs
in
insb
je
jb
addr16
shll
jl
mov
jge
pop
jg
add
inc
fidivs
pop
mov
pop
stos
cwtl
sti
out
cmpsl
mov
inc
popf
je
inc
test
mov
subb
test
stos
push
scas
xchg
mov
jnp
scas
ja
sub
xor
les
mov
into
push
out
cwtl
insl
xchg
add
or
xchg
sub
cmp
or
ds
hlt
shlb
xor
sub
ret
sarl
dec
cli
push
ds
scas
add
and
shrb
ja
mov
fwait
sbbb
idivb
or
sub
adc
ds
in
sbb
in
add
mov
stos
loopne
daa
je
add
mov
xchg
out
jno
sbb
xor
sub
sbb
or
xor
ret
test
xor
jp
or
add
cmp
mov
cs
dec
push
dec
push
lcall
xchg
push
dec
jne,pt
movb
out
rorb
ja
push
pop
xchg
push
mov
outsb
fistl
xchg
xor
sub
mov
test
dec
ss
pop
rorb
sarb
test
outsl
push
push
sahf
rolb
ss
lods
mov
adc
xor
xchg
test
push
fildl
and
mov
je
adc
add
adc
or
repz
test
cltd
mov
dec
xchg
ds
jnp
add
pop
mov
mov
scas
jnp
push
sub
cs
lds
push
jmp
adc
add
push
in
inc
add
sub
popf
cmp
jmp
push
scas
mov
cmp
mov
xor
in
jno
sti
test
push
cmp
int
fwait
or
jl
fs
mov
fadd
mov
lods
xor
clc
adc
and
mov
jecxz
mov
cmp
dec
sbb
pop
inc
mov
mov
fmul
std
or
jle
iret
jno
fwait
repz
jne
add
rcr
orl
clc
pop
sub
popf
dec
out
repz
add
shr
xchg
in
inc
jae
mov
or
popf
jl
loope
ret
rcrl
fmul
testl
movsl
imul
fisubs
sbb
mov
mov
jno
inc
test
dec
shl
inc
sbb
sbb
mov
insb
nop
or
pop
cmpl
xchg
and
aad
aas
push
xor
js
add
js
mov
pop
cmp
and
test
pop
push
subb
lahf
test
sbb
rcl
das
jecxz
pop
jmp
iret
pop
add
add
jnp
xor
jg
sbbl
pop
dec
add
hlt
add
add
fidivl
scas
sbb
mov
out
iret
divb
jbe
pop
stos
pop
stos
mov
sbb
jle
cmpsb
mov
rcrb
push
iret
xchg
outsl
sti
rol
ja
stos
lret
aas
les
filds
mov
pop
mov
lret
int3
into
rcrl
cwtl
jnp
call
scas
sub
sub
jno
push
enter
lods
jmp
loopne
into
push
adc
adcb
jo
leave
loope
jge
cmp
push
popf
jmp
xor
sub
imul
mov
loopne
fimull
cmp
rcrb
nop
mov
pop
fnstcw
dec
sbb
inc
int
or
lea
pop
imul
xchg
imul
loope
adc
es
imul
push
add
sub
inc
cmpsb
mov
mov
es
push
out
mov
dec
mov
pop
cmc
mov
in
inc
jecxz
call
fwait
repnz
jp
lahf
jp
push
loop
es
adc
cmc
jnp
xorb
inc
or
inc
jbe
insb
mov
out
cmp
sbb
cmp
dec
sbb
xchg
aam
add
out
and
and
cmp
xlat
and
mov
inc
sub
mov
imul
loope
aam
xchg
ljmp
sbb
test
xor
mov
in
arpl
lock
pusha
lcall
xchg
pop
mov
int3
in
or
jo
decl
subl
sub
xor
inc
lret
dec
mov
cvtdq2ps
sbb
adc
or
xchg
clc
xchg
mov
jecxz
fcmovne
repz
stos
cmpsb
rolb
push
out
cmp
dec
mov
leave
leave
xor
mov
inc
jl
in
inc
push
mov
inc
and
sbb
sahf
out
ljmp
cld
push
pop
dec
dec
push
xor
sbb
adc
xlat
mov
or
test
shll
loop
and
shl
cmp
sbb
mov
scas
into
aad
addr16
loopne
je
jae
mov
fstps
sahf
jns
les
xchg
push
bound
adc
mov
xchg
and
or
mov
and
sahf
push
lods
fcoms
cmp
dec
jnp
dec
cmp
fldl
xchg
test
dec
into
push
ja
xor
test
aad
sub
adc
inc
leave
and
push
mov
mov
push
insl
sahf
xchg
outsb
push
mov
out
jbe
xchg
push
outsl
mov
push
je
arpl
adc
orb
pop
xor
and
cs
adc
lods
jns
mov
mov
cmp
adc
mov
and
add
xorl
jge
into
and
es
mov
movl
and
dec
mov
mov
dec
mov
push
cmp
pop
mov
imul
loope
mov
inc
dec
mov
push
sti
cltd
sahf
pushf
ljmp
es
imul
add
add
out
movsb
pushf
popa
ficomps
sbb
mov
mov
out
insl
pop
mov
sbb
outsb
mov
out
lock
outsl
aaa
add
or
xor
inc
fwait
adc
stos
push
xchg
push
daa
jns
lret
mov
adc
mov
and
repnz
idivb
dec
scas
fisubrl
mov
xchg
in
push
sbb
xchg
sar
shrl
inc
mov
sub
mov
dec
subb
ds
jl
mov
aaa
int
xchg
mov
and
mov
pop
in
add
add
out
mov
arpl
inc
xor
ds
fcoml
cmp
or
jle
loopne
imul
xchg
mov
push
pop
dec
sbb
cmc
loop
pusha
gs
loope
jecxz
lods
inc
aas
aaa
fisttpll
lahf
xor
lret
and
and
aam
scas
pop
imul
imul
push
xchg
add
into
sbb
and
or
jecxz
adc
mov
and
xor
std
jle
fs
push
push
push
xchg
adc
je
std
xchg
das
cmp
repz
jg
pop
mov
mov
jmp
ret
nop
bound
and
add
add
or
xchg
jmp
adc
pop
and
add
hlt
add
add
mov
negl
jg
cmp
sub
or
test
sbb
insb
adc
pusha
inc
daa
mov
pushf
ss
test
sub
and
stos
addr16
insl
xchg
roll
mov
shll
sahf
cli
ret
sub
lret
dec
imul
xchg
sub
add
or
outsl
push
sub
add
lods
lock
dec
lcall
jg
lret
push
xor
cmpsb
bound
mov
or
in
fidivs
jmp
jae
ljmp
pop
jecxz
stos
subb
in
pop
inc
xchg
cmpsl
add
adcb
mov
push
sbb
pop
push
bsf
xlat
jl
pop
mov
push
xchg
pop
add
fldl
inc
push
repz
stc
iret
cmpsl
pop
repnz
aaa
das
sbb
lcall
mov
cmp
mov
arpl
test
jge
and
test
cmp
adc
pushf
jbe
jmp
shlb
mov
stos
mov
int3
mov
and
aas
push
sarl
fadds
adc
rcl
jl
xor
aad
loopne
es
jp
add
stc
cwtl
popa
adcb
inc
pusha
mov
or
sbb
mov
push
dec
addl
fildll
push
xor
cwtl
push
ljmp
testl
pop
adc
nop
cwtl
fcompl
ror
jl
lds
cmpsb
lret
and
cmp
gs
dec
push
icebp
add
cli
sub
stos
mov
cbtw
cli
mov
in
lcall
cmp
ljmp
lds
xor
xor
dec
jecxz
push
push
shll
test
xchg
mov
xchg
shll
jg
pop
jb
xchg
ljmp
sarb
jmp
xchg
mov
adc
sbb
mov
sbb
cli
lret
aam
xorl
inc
jnp
xor
mov
mov
imul
pusha
sbb
lds
out
js
repz
mov
xchg
mov
out
mov
xchg
jne
loope
xor
icebp
orl
insb
mov
aad
sbb
aaa
incb
sbbl
insl
sar
mov
add
add
dec
in
cmp
mov
movsl
mov
cmp
mov
pop
lret
int
jno
mov
mov
scas
ret
sti
aas
aad
inc
and
incb
ja
jge
scas
pop
sti
cmpsl
popf
clc
push
jb
cmp
inc
sub
cltd
xchg
decb
pop
orl
mov
test
outsl
arpl
inc
jb
xchg
negl
pusha
in
lea
add
mov
mov
mov
pop
mov
cmc
mov
shlb
int3
xor
cmpb
mov
lods
lods
mov
leave
jae
andl
fs
pop
pop
call
mov
and
andl
ljmp
lds
fisubrs
sub
jmp
inc
popf
jmp
lock
pop
outsl
mov
fldt
adc
gs
dec
in
or
shrb
cmc
shrl
mov
cs
inc
jl
popa
je
add
lahf
ja
sbb
loop
loope
lods
scas
add
sub
cltd
push
fsubrl
push
cmp
mov
fs
adc
fsubs
sbb
cmp
inc
cmp
pop
mov
mov
xlat
pusha
mov
push
pushf
cmpsb
and
inc
pop
imul
in
sub
cmp
or
aaa
dec
stos
dec
icebp
in
mov
sub
cmp
add
es
adc
mov
jp
push
pop
add
imul
xor
xchg
testb
test
out
ss
fistl
push
sarl
inc
pop
movb
jne
imul
push
cmpsl
fisubl
ja,pn
repnz
or
leave
aas
stos
or
pop
and
je
ljmp
les
inc
xchg
xor
enter
shll
sub
xchg
sbb
xor
mov
aas
pop
cmp
jge
push
inc
in
jno
add
jo
mov
fildl
add
lcall
cmp
insl
and
cld
in
xor
cli
xor
insl
or
int
mov
sub
sub
sbb
xor
add
add
pop
pop
loope
loope
fistpll
adcl
subl
add
add
add
xor
or
arpl
pop
repz
or
dec
aas
jmp
jp
push
call
mov
imul
add
xor
dec
mov
movsb
push
and
js
xchg
mov
mov
or
sub
inc
dec
xchg
xchg
mov
std
push
inc
popf
jle
jmp
dec
inc
std
push
sbb
cltd
subb
movsb
jo
shlb
xchg
jg
xor
jecxz
in
sub
rcrb
dec
shr
fdivr
cmpsl
adc
xchg
push
mov
js
push
out
dec
aad
pop
inc
inc
push
lods
and
fisttps
add
xchg
jb
lret
int
es
mov
cltd
lock
fdivrs
rcll
lret
push
push
jmp
adc
add
mov
movsl
fwait
ja
cltd
insl
xchg
jecxz
shlb
loopne
mov
lock
push
adcl
and
jmp
mov
add
push
push
and
mov
sahf
pushf
xor
jecxz
aam
jg
int
sbb
ljmp
dec
fildll
xchg
xor
pop
mov
push
sub
xchg
in
xchg
dec
sbb
cwtl
xor
ds
mov
push
testl
push
sub
inc
call
shlb
jo
mov
movsb
int
aam
roll
cwtl
lret
pop
mov
xor
jg
mov
out
and
pop
push
push
dec
addl
push
adc
and
movsb
ja
cwtl
mov
mov
or
cwtl
frstor
mov
jbe
xchg
jg
mov
sbbl
mov
loop
jmp
fsubl
mov
ss
inc
cmp
dec
vpmacssdqh
adc
mov
lret
sub
and
pushf
cmp
xchg
clc
push
out
cmp
jb
cmp
mov
lret
or
inc
or
and
popf
andb
add
das
mov
int3
les
fnstcw
xor
push
dec
dec
pop
jp
push
dec
pop
dec
xor
mov
mov
sub
xchg
stos
or
push
xor
mov
shrb
lret
pop
xor
jbe
adc
add
mov
hlt
loopne
sbb
cld
aaa
movsl
daa
jl
andb
sub
test
fiadds
addr16
mov
xor
ljmp
call
movsb
pop
ds
or
add
sub
inc
scas
mov
pushf
pop
pop
shr
push
mov
or
sub
mov
jns
push
jne
xor
out
fisubs
and
dec
and
std
xchg
adc
mov
mov
inc
inc
xchg
shll
ja
jb
push
push
leave
mov
jl
aam
fld
adc
pop
fdivs
cmp
push
mov
mov
test
std
scas
mov
je
lcall
mov
push
sbb
pushf
adc
ds
divl
jmp
and
loop
mov
out
pop
lret
stos
decb
hlt
mov
aaa
rcr
jge
mov
inc
dec
add
mov
lock
popf
cmpsl
jmp
cmc
fcmovbe
sti
push
lret
cmp
popa
push
push
aaa
add
pop
js
dec
or
xor
fs
cmp
imul
insb
fnstenv
push
push
xchg
pushf
cmc
stc
pop
jmp
loop
enter
lcall
sub
fidivrl
imul
mov
and
lret
xchg
add
add
out
jmp
push
add
add
and
dec
push
shrl
or
push
xchg
xchg
ffreep
fldt
shlb
lods
jne
add
cmp
mov
dec
add
adc
cmp
scas
out
ffree
fucomp
lcall
and
bound
popa
cli
pop
sbb
jo
in
adc
pop
inc
push
lret
push
inc
fldt
add
stos
ljmp
jbe
fdivl
out
dec
int3
cmp
and
cmpsl
pusha
repz
gs
in
pushf
les
add
jo
cmp
test
inc
push
movsb
pop
jae
jno
fsubs
lock
push
rolb
mov
movsb
imul
xchg
pusha
mov
or
arpl
dec
cmp
cmp
add
jecxz
jns
ja
cmpsl
shr
mov
ss
ss
iret
lret
mov
mov
add
add
loope
xchg
out
notl
xor
push
xor
add
add
fstps
mov
pop
inc
in
iret
add
daa
dec
jecxz
add
cmc
xchg
insl
dec
mov
loop
pop
adc
cli
fadds
push
insl
inc
fdivs
and
and
outsb
gs
adc
addr16
fidivs
ror
adc
cmp
mov
dec
mov
xor
leave
imul
mov
mov
or
mov
mov
xor
jle
push
cmc
xchg
dec
out
sbb
test
mov
lret
mov
adc
mov
add
lea
stos
cmp
icebp
adc
mov
lock
xchg
mov
sbb
jb
and
xchg
mov
mov
mov
jle
packssdw
or
sbb
jle
lods
lds
sbb
inc
mov
jp
inc
mov
jo
cmp
mov
cmpsb
mov
lahf
or
dec
aam
xchg
mov
or
repnz
mov
xor
dec
pop
jp
gs
scas
push
dec
fidivrl
push
dec
xchg
out
adc
sbb
ror
ds
dec
mov
xor
je
add
sbb
jecxz
movsb
daa
loopne
pop
xor
mov
and
mov
les
cmp
outsl
jno
rcrb
cmpsl
aas
pop
xor
and
sub
in
mov
prefetchnta
add
mov
lcall
xchg
sub
pusha
jmp
pop
cmp
aam
cmp
mov
andb
inc
adc
jbe
test
mov
rolb
stos
andl
or
inc
testb
cmp
adc
mov
mov
lods
jle
sub
pop
inc
shl
xor
add
and
push
adc
and
js
lods
push
mov
sti
lahf
jecxz
lret
xchg
insb
sub
and
pop
xchg
mov
pop
pop
mov
mov
adc
cmc
lcall
pop
inc
scas
js
mov
mov
lock
loop
cltd
out
fadds
incb
or
fsub
mov
mov
sahf
outsb
cmpsb
sub
pop
cmp
lcall
cmpsl
push
pop
stos
push
int3
sub
loop
rcll
loope
dec
or
adc
bound
cmp
sbb
in
mov
mov
pop
mov
cmp
jb
outsb
xchg
in
int3
shl
aad
inc
inc
cmp
mov
iret
push
pop
aad
pop
push
inc
js
jnp
jg
add
xchg
sbb
js
fldl
sahf
sub
dec
push
je
test
add
ja
imul
add
arpl
jmp
movsb
add
mov
mov
jp
mov
outsl
xchg
call
jae
jns
adc
fsubl
sahf
dec
push
push
xchg
je
xor
test
imul
sahf
scas
mov
jp
sub
sahf
mov
add
jae
push
xor
dec
xchg
ret
cmpsb
jecxz
add
faddl
xchg
int
push
adc
push
test
roll
jg
shr
hlt
inc
icebp
pop
dec
mov
cs
dec
mov
push
sahf
test
mov
mov
shrb
push
or
adc
sti
lock
add
mov
data16
mov
aaa
mov
push
flds
scas
pop
test
shrl
test
xor
xchg
popf
iret
out
add
and
push
out
xor
insb
push
dec
mov
inc
es
xchg
pop
push
aad
popa
fxch
out
mov
mov
jl
es
outsl
sahf
sbb
popa
scas
jne
and
xchg
or
hlt
shll
jle
frstor
int
jmp
in
xchg
mov
xchg
pop
mov
push
in
shll
fiaddl
stos
fstps
mov
xor
imul
loop
lahf
xlat
cli
into
pop
or
xchg
xor
jecxz
pop
clc
mov
push
sbb
mov
imul
inc
bound
jecxz
push
lock
inc
je
insb
cs
test
pusha
subl
ficomps
fdivr
xchg
jg
mov
mov
push
sbb
in
push
es
and
pop
int3
add
mov
mov
push
pop
xor
push
xor
add
add
add
and
cmp
loope
mov
lea
hlt
add
add
xor
cmp
push
frstor
test
mov
mov
add
int
xchg
in
sub
stc
jno
jmp
lret
inc
pop
cmc
push
pop
mov
pop
mov
rorl
inc
xor
adc
lods
lret
or
lea
mov
shll
pushf
mov
jl
sbbl
sub
sub
test
mov
or
outsl
call
cmp
jns
sbb
mov
sbb
sbb
jns
xlat
das
stos
test
pop
cs
inc
push
pop
sti
xchg
mov
into
fdivs
add
mov
push
aas
ja
outsb
nop
jae
push
shl
into
test
insb
pop
les
cmp
lea
dec
mov
lret
cmp
add
pop
jbe
cli
mov
insl
out
mov
xchg
dec
paddb
push
sti
inc
and
pop
aam
push
dec
in
sahf
ficoms
and
pushf
testb
push
adc
repz
mov
cmp
push
adc
add
ds
mov
jmp
das
mov
arpl
adc
call
jae
mov
push
das
and
dec
test
mov
lret
xor
inc
push
jecxz
jl
cmc
in
mov
arpl
xor
outsl
push
cmpl
std
fisubs
mov
inc
lahf
inc
mov
adc
ss
test
ljmp
push
insb
scas
faddl
mov
rclb
xchg
fldl
mov
mov
sbb
push
aaa
cs
sbb
cmpl
sbb
push
test
add
adc
gs
mov
jnp
fs
test
je
in
sbb
sarb
aaa
bound
sbb
stos
cmp
mov
iret
clc
arpl
popf
neg
icebp
sbb
adc
mov
push
fsubr
adc
js
cmp
mov
add
cmpsb
pop
jo
cmp
or
push
mov
stc
mov
jb
adc
out
fdivrs
aas
movsl
xchg
in
xor
or
adc
bnd
push
lds
fidivrl
mov
lds
aaa
fwait
pop
clc
sub
pop
aas
fwait
jle
and
mov
gs
mov
xchg
lret
dec
movsb
mov
push
scas
inc
enter
nop
adc
mov
aad
mov
ds
xor
sub
pop
mov
out
ljmp
xchg
cmpsl
daa
mov
cli
lods
rorl
outsl
mov
iret
push
xchg
pushf
mov
xchg
pop
xchg
pusha
pushf
xor
mov
lock
test
dec
and
out
cmpsl
enter
imul
sbb
adc
scas
in
leave
jp
mov
in
hlt
mov
das
mov
fwait
mov
loopne
jae
mov
mov
stc
pop
iret
inc
mov
addr16
pop
ficoms
fcmove
sbb
in
mov
test
jg
ds
and
fucom
sti
lcall
and
mov
mov
jbe
movaps
in
lret
jae
movsb
arpl
mov
js
imul
jbe
pusha
or
popf
sub
lods
insl
adc
sbb
leave
xchg
lds
xor
mov
repz
into
mov
dec
outsb
inc
ja
aas
cmp
add
pop
mov
repz
mov
xor
dec
mov
push
sub
adc
push
addr16
dec
addr16
enter
sbb
fidivl
pop
cwtl
fisubs
add
adc
imul
push
rcrl
and
dec
xchg
or
sbb
push
outsl
dec
cmp
test
loop
push
add
push
or
bound
lret
push
pushf
fwait
cmp
mov
stc
cltd
stc
pop
out
xchg
stos
or
popf
arpl
das
inc
cmpb
inc
xchg
arpl
mov
mov
leave
push
push
icebp
cmpsl
dec
in
xor
xorb
scas
push
shr
cwtl
inc
or
jmp
in
stos
add
enter
std
adc
mov
xchg
setl
sarb
xchg
cmp
jg
inc
imul
sbb
sbb
push
ret
xchg
inc
sub
ja
stos
fimull
popa
sbb
jg
popa
repz
popa
je
loopne
mov
or
pushf
add
jl
ss
dec
xor
jle
dec
dec
addb
mov
add
mov
jp
ret
gs
mov
add
add
stos
in
sbb
sbb
xor
jg
dec
xchg
fdiv
in
ljmp
dec
enter
pop
repz
xchg
roll
adc
xor
je
pop
jae
in
cmp
test
sahf
jge
mov
xchg
out
call
pusha
rep
adc
lods
push
insb
or
faddl
sub
adc
sub
inc
cmp
insb
or
lods
pop
add
xchg
repnz
add
ret
push
adc
jns
sahf
inc
inc
negl
mov
jg
add
vmovaps
cmp
mov
push
shrl
xchg
pop
iret
push
wbinvd
jne
in
stos
dec
shlb
mov
in
fs
inc
push
pop
incb
cmpsl
stc
shrb
mov
cld
out
je
cltd
lahf
icebp
movsb
push
mov
push
test
jno
rclb
test
subps
mov
pop
inc
js
mov
js
jg
ret
data16
ret
pop
jecxz
xchg
mov
scas
test
or
mov
add
std
ljmp
jne
mov
clc
addr16
daa
dec
inc
xchg
inc
pop
inc
inc
jge
jp
call
vmread
xchg
shlb
jno
push
clc
loop
mov
fdivp
sbb
jle
push
and
aam
in
xor
jmp
adc
add
lahf
dec
mov
jge
das
orb
outsl
ja
mov
jmp
pop
pop
mov
jmp
nop
pop
sub
test
imul
cwtl
sysret
cli
adc
shll
mov
enter
push
imull
mov
cld
pop
movsl
test
xchg
subb
xlat
mov
push
inc
fucomi
mov
push
out
xchg
lahf
sbb
aam
addr16
pop
call
mov
aad
out
push
bound
out
sbb
loop
rorl
push
mov
ja,pn
popa
lods
and
flds
dec
mov
daa
or
xlat
mov
popf
in
inc
xorl
scas
popa
xchg
pop
repnz
repnz
mov
daa
and
pop
cmp
pushf
mov
lahf
mov
xchg
mov
pop
add
mov
loop
xchg
shl
inc
dec
stos
xor
mov
jo
aam
push
fcmovu
mov
xlat
rcr
jl
ss
stc
lret
fimuls
sahf
leave
ja
xor
stos
mov
or
enter
mov
or
pop
scas
ja
outsl
popa
loope
push
cld
jecxz
mov
sbb
inc
cmp
jp
or
popa
outsb
inc
ret
or
lock
bound
fsub
vpshab
mov
enter
xor
jns
in
popa
fwait
ror
mov
adcb
rcr
jecxz
or
leave
pop
nop
pop
insl
or
adc
movsb
push
mov
or
es
cmc
xlat
ret
inc
in
stos
shll
popf
out
ds
xchg
jmp
add
pushl
lcall
inc
popa
mov
lret
cs
int
push
lret
movsb
xchg
jne
cmp
ss
mov
cli
xchg
mov
nop
test
mov
sti
xor
pop
mov
pop
movb
xor
mov
mov
jno
popw
mov
and
adc
xchg
call
inc
sahf
or
add
sahf
add
xor
jne
sub
dec
and
popa
pushf
daa
xchg
int
and
xchg
add
ja
push
mov
in
dec
stos
mov
les
in
fcomps
cld
add
ds
mov
scas
int3
mov
stos
pop
sbbl
lea
loop
es
rcrl
pop
fs
pusha
pop
dec
xchg
and
cmp
mov
mov
xchg
jecxz
test
fldcw
popf
hlt
rcll
mov
es
fcomps
fnstcw
ret
scas
cmc
out
inc
test
in
leave
mov
jbe
push
mov
insl
and
call
fdivl
out
or
fnstsw
out
jb
mov
insb
out
inc
pop
xchg
mov
test
aad
inc
xchg
pop
gs
js
mov
cmp
scas
adc
outsb
adc
stos
cmpsb
pop
sahf
sbb
jo
icebp
ljmp
aad
xor
addr16
mov
movsl
in
or
xor
xlat
int3
add
and
lret
inc
mov
push
cs
jle
inc
call
jge
nop
cmp
and
sbb
add
push
push
cmp
cmp
push
pop
mov
lahf
jne
mov
add
add
add
push
arpl
mov
inc
xor
mov
push
and
inc
stos
xchg
je
aam
pop
in
je
dec
jmp
shrb
aas
mov
push
add
xchg
imul
mov
inc
sub
and
xor
inc
jle
mov
jbe
cmp
pop
or
jns
push
rcrl
out
stos
xor
int3
out
push
mov
jl
mov
inc
sbb
push
push
add
adc
pop
add
dec
lods
ja
pop
or
inc
mov
sub
fwait
sti
and
jnp
sub
outsb
push
sarb
lods
leave
enter
jbe
repz
push
dec
push
repnz
pushf
or
testb
lret
fwait
enter
sub
clc
fs
mov
int
sbb
maskmovq
out
cmpsb
pop
insl
imul
sub
xchg
mov
outsl
pop
movsb
outsb
xor
popf
or
cmp
int
push
cmp
sbb
sar
pop
jo
mov
or
adc
fsub
daa
cmp
inc
mov
pushf
imul
ja
sahf
xor
cmp
in
sbb
movsl
cmp
dec
popa
mov
cmpsb
arpl
sub
and
sbb
popa
lahf
cmpb
and
pop
scas
sub
jno
push
mov
testl
sbb
pop
lret
mov
in
cmpb
adc
pusha
push
pop
popa
std
notl
rcrb
les
xor
ja
repnz
inc
xor
mov
push
fisubl
pusha
out
and
mov
and
push
andl
jle
inc
push
cmp
clc
pusha
aaa
mov
dec
push
shll
decb
jmp
stos
jno
clc
push
jmp
andb
sub
jb
pop
leave
std
rcr
xchg
das
and
lcall
push
outsb
in
fs
shlb
and
push
subb
and
jecxz
jge
adc
xchg
jge
faddl
pop
xchg
mov
mov
adc
adc
pop
pop
and
in
ret
mov
lcall
jb
adc
out
add
hlt
xchg
scas
movsb
add
pop
inc
jns
mov
incl
push
jbe
push
cmp
sbb
or
mov
jge
pop
outsb
pusha
in
jno
mov
pusha
pop
xchg
pop
sub
out
test
mov
sbb
in
pushf
daa
imul
cmc
mov
or
loope
retw
neg
gs
or
out
gs
xchg
fcomps
sub
lahf
jmp
xchg
pop
xor
cmp
mov
and
popl
inc
adc
aam
adc
cmp
push
pop
pop
bound
or
stos
in
arpl
and
fwait
test
push
idivl
xchg
arpl
add
push
nop
mov
aad
or
add
stos
dec
dec
lea
cmp
jmp
mov
mov
jg
lods
fsub
fists
push
daa
dec
pop
addr16
shlb
repz
sbb
fwait
call
iret
fisubs
mov
adcb
outsb
xchg
cmpsl
aaa
in
ret
mov
mov
loopne
std
cwtl
jle
push
mov
pop
mov
or
out
mov
nop
jge
push
fiadds
add
xchg
sub
sarl
scas
cltd
pusha
fwait
adc
inc
pop
loop
inc
gs
scas
pop
out
adc
les
mov
sbb
aam
jno
mov
addr16
lret
rcr
cs
mov
or
mov
std
clc
in
mov
sbb
hlt
or
adc
mov
mov
push
out
cmp
cltd
into
movsl
nop
push
xchg
insb
add
xlat
pop
lcall
xor
cmp
xor
jmp
fsubl
mov
adc
icebp
movl
jno
imul
outsl
mov
xchg
pop
sbb
add
cmp
dec
mov
xchg
mov
dec
and
mov
sbb
xchg
pop
fsub
xorl
and
lahf
cmp
cmc
xchg
mov
aad
aas
cli
hlt
fxtract
gs
dec
dec
cli
cmp
mov
addb
test
out
mov
addr16
cmp
push
clc
cld
xor
xor
je
mov
je
xorb
scas
cli
inc
icebp
mov
xchg
push
addr16
stc
pushf
ret
add
add
sub
jg
test
out
orb
and
outsb
add
hlt
add
add
xor
lret
push
lock
sahf
lcall
lcall
jmp
int
stos
adc
sub
ss
fsubrs
push
int
fstpl
cwtl
in
ja
jo
cwtl
movsl
xchg
mov
mov
mov
inc
dec
and
and
sahf
mov
ja
sub
mov
icebp
jne
insl
adc
mov
std
jno
pop
mov
loop
addr16
inc
sbb
andl
loopne
jne
sbb
cmp
addl
int3
xchg
clc
repnz
jbe
hlt
inc
sbb
sub
fwait
test
and
xchg
xor
or
and
jne
mov
and
xchg
inc
jge
call
sbb
pop
shl
in
das
xlat
ljmp
xorb
mov
cmp
jmp
and
mov
lcall
lahf
or
push
test
mov
push
mov
xchg
adc
testl
std
std
add
jo
notl
nop
mov
mov
mov
sbb
repnz
mov
loope
xor
nop
sbb
ficoms
imull
xlat
subb
dec
das
and
and
outsb
mov
xor
iret
in
mov
cmp
mov
or
cmc
push
jns
mov
cwtl
adc
sub
ja
pushf
mov
insl
inc
push
cwtl
jno
mov
xor
jno
insl
mov
movsl
loope
jb
loope
ret
jno
cmp
movsl
add
mov
or
mov
mov
inc
imul
frstor
sbb
movsl
mov
xchg
mov
adc
mov
adc
xchg
loop
adc
mov
into
jno
sti
lods
xlat
push
je
ficompl
shlb
cmp
fmulp
add
les
nop
add
sub
ret
enter
cld
out
ss
into
cld
sub
lret
insl
cli
loopne
fnsave
sub
cmpsl
lcall
jne
aas
xchg
adc
sbb
cmp
stos
mov
pop
in
mull
stos
cmp
adc
and
testb
mov
in
xchg
or
lods
loopne
sbb
ja
push
into
xchg
mov
mov
mov
push
call
dec
test
xchg
xchg
xchg
in
rcll
or
or
mov
sbb
push
out
dec
fildl
mov
std
jecxz
lds
adc
mov
sbb
rorl
sbb
inc
test
sahf
mov
jne
mov
jl
repnz
adc
dec
sahf
scas
sub
adc
xchg
out
xor
les
jg
lahf
mov
dec
inc
jns
pop
movb
aaa
xchg
andl
in
test
dec
out
pop
sarl
jg
cmp
add
pop
xchg
sbb
and
push
scas
lret
rorl
xor
sub
data16
aad
shll
sbb
push
pop
es
jl
pop
xchg
fldl
xchg
data16
lret
add
jmp
fbld
jne
add
test
lret
cltd
push
xor
cmp
xor
nop
xor
cs
jns
cmp
in
xor
or
or
jmp
outsb
fisubs
fstl
fisttps
icebp
jae
sbb
dec
leave
mov
lret
test
aad
inc
xor
shlb
and
push
out
mov
imul
sar
aaa
push
pushf
jo
outsl
in
mov
mov
or
icebp
xrelease
xor
test
rcl
cmp
xorb
fldl
push
pop
or
sub
adc
xor
popa
mov
out
hlt
xchg
mov
dec
popf
ucomiss
xor
or
mov
mov
mov
inc
jo
push
pop
aam
lods
ret
es
sar
adcl
push
push
add
inc
incl
je
rol
ret
lcall
inc
add
dec
aam
lret
divl
adc
in
pop
adc
pusha
add
mov
xchg
sub
jne
jno
lret
inc
xor
out
mov
lea
sub
sbb
lret
jae
jmp
les
mov
mov
call
jb
pop
pop
and
push
std
pop
aam
and
jp
jnp
sbb
lods
mov
cltd
dec
mov
push
dec
stos
sbb
dec
jmp
pusha
jp
cmp
fisubl
cmc
mov
jp
add
add
mulb
repnz
out
push
cmp
add
add
add
fcomip
lcall
movsb
mov
xor
testl
jnp
dec
mov
inc
and
lcall
mov
jne
testb
adcl
das
jno
imul
or
mov
mov
es
jbe
adc
ss
sarl
and
mov
cwtl
pop
rclb
dec
and
inc
xor
push
out
loopne
and
movsb
xlat
iret
adc
popa
pop
mov
or
repz
add
sbb
add
neg
adc
call
mov
mov
je
out
popa
out
sarb
sbb
cmp
lahf
lods
lock
scas
aam
jo
xchg
push
movw
pop
insl
mov
mov
dec
adc
sbb
sbb
mov
cli
std
jae
jmp
jle
inc
inc
pop
sub
xchg
dec
std
and
add
insb
ja
and
xchg
int
sti
mov
and
inc
or
call
imul
cs
mov
dec
and
and
pushf
mov
xchg
jecxz
jae
loope
mov
mov
stos
or
and
repnz
insl
imulb
sub
add
subl
sub
inc
sbb
sahf
hlt
je
into
shlb
sbb
mov
inc
push
outsl
test
cmpsl
cmp
or
pop
push
mov
outsl
sbbb
push
jl
stos
or
test
jecxz
xchg
stos
dec
pop
jp
or
push
loop
les
mov
pop
ds
mov
sub
mov
icebp
popa
dec
pop
mov
inc
ret
out
cmpsb
cmp
xchg
and
push
icebp
mov
imul
pop
add
daa
es
lret
and
mov
pop
fs
pop
std
adc
sbbb
adc
outsl
mov
mov
clc
fidivrs
jge
jmp
test
inc
pop
into
je
sub
mov
mov
xlat
or
and
jmp
jg
fcoml
push
pop
mov
cld
push
push
cvtdq2ps
out
or
aas
mov
mov
scas
mov
xchg
pop
or
sub
in
jl
add
adc
fdivp
push
xchg
pop
scas
comiss
jmp
push
sti
loopne
xchg
mov
push
add
xchg
sahf
xchg
inc
fsubr
mov
icebp
int
lods
mov
addl
add
lret
test
xchg
mov
scas
in
mov
dec
adc
scas
sahf
add
push
inc
mov
xchg
das
imul
and
movsl
ret
imul
xchg
jae
jmp
gs
xchg
int3
loope
mov
bound
inc
jl
pop
sbb
out
jp
cmp
out
roll
loopne
add
push
push
test
add
dec
decb
xchg
or
jne
jg
mov
enter
lds
jo
es
shrl
jne
dec
adc
xor
lods
adc
enter
in
sti
jae
testb
and
push
ret
jmp
cmpsl
push
imul
gs
add
ret
and
sub
add
dec
stos
or
jg
fcomps
ds
fistpll
stos
dec
cwtl
xchg
mov
push
out
scas
popa
push
ret
stc
es
les
jle
jae
pushl
lahf
push
mov
popf
dec
xchg
mov
mov
jo
pop
test
jno
xchg
mov
push
cmp
mov
stos
jno
sti
ds
xor
adc
mov
aas
sub
cmpsl
mov
mov
xchg
insl
dec
cmp
rorl
movsb
pop
cvttps2pi
and
sbb
pop
jae
jo
and
or
xor
cltd
jl
mov
jecxz
sbb
testl
mov
xchg
mulb
pop
xor
fcomps
pusha
ret
adc
xchg
jno
jecxz
or
fsubrl
inc
imul
push
fisubl
pop
cmp
xor
andb
loop
mov
add
inc
repz
adc
popf
mov
lods
mov
cli
in
rcll
scas
les
shl
inc
lods
xchg
out
sbb
es
fldcw
cli
xchg
cmp
add
add
mov
mov
add
fsubr
ja
add
add
add
xor
sub
dec
sbb
aas
fidivl
std
and
inc
leave
sti
notb
jbe
test
in
ror
fcoms
aad
mov
or
adc
or
mov
lcall
loope
mov
xchg
mov
or
mov
pop
mov
es
lods
sbb
mov
in
testb
or
mov
imul
lock
sub
movsb
cmp
cmpsl
mov
mov
roll
loope
sbb
sub
arpl
jo
scas
xchg
push
and
pop
movsl
dec
mov
sub
add
fsubs
xor
fsubrs
adc
mov
push
mov
ret
decl
add
xlat
gs
push
pop
aaa
mov
mov
call
int
dec
dec
dec
push
add
scas
pop
add
popa
and
pop
lret
pop
or
xchg
out
and
sub
loopne
popf
mov
inc
mov
pop
push
push
ljmp
xor
loopne
out
pushf
cmp
and
add
lret
ret
test
rcll
or
adc
xchg
xchg
mov
movsl
test
cmp
in
cmp
and
xchg
push
jno
push
stc
jne
into
inc
mov
out
cmp
pop
mov
hlt
and
add
mov
add
scas
scas
push
push
push
int
sti
mov
icebp
aam
out
add
inc
shrl
ud1
and
or
add
pop
popa
lcall
fisubrl
sub
jg
inc
fmull
addl
aam
divl
fstps
push
dec
std
adc
mov
push
adc
lods
add
lret
dec
loope
shr
pmaxub
hlt
xchg
popf
fs
out
dec
lcall
ret
cld
movsb
testb
and
xchg
lahf
out
daa
loopne
and
mov
sub
rcr
jb
icebp
mov
pop
xor
test
xor
test
lret
jmp
jle
in
lcall
sub
sub
mov
push
xor
inc
sarl
pop
xchg
mov
imul
es
adc
mov
mov
dec
fsubrl
js
incb
in
or
insb
sbb
mov
repz
daa
sbb
gs
inc
adcb
or
aaa
nop
pop
pop
pop
ljmp
add
les
cmp
dec
adc
insl
push
mov
push
repz
cmpsb
fsubrs
inc
mov
and
dec
lods
movsl
add
mov
scas
pop
pushf
jle
sarl
mov
movsl
nop
js
push
in
jnp
cmpl
cmpsl
or
in
mov
push
sahf
fdivl
push
push
sub
hlt
jl
inc
repnz
mov
xchg
push
cmp
push
jmp
jae
fdivl
rcrb
outsl
fucomip
lret
cwtl
int3
sbb
hlt
repnz
add
sbb
pop
dec
ds
fistl
int
lret
mov
cmp
popa
and
movsl
cmc
sbb
pusha
aas
mov
mov
data16
jle
out
mov
sbb
aas
ja
lahf
mov
cmp
sbb
loope
out
in
add
shl
lret
loop
js
jmp
push
dec
ljmp
in
push
cmp
adc
loope
jmp
jecxz
jnp
lds
xchg
fldenv
ss
jns
mov
pop
int
shlb
xchg
pop
pop
inc
pushf
jle
pop
out
fnstcw
push
jbe
sbbl
cmp
or
xchg
pop
pop
mov
cmp
xor
fs
sub
mov
mov
jnp
add
jns
dec
notl
and
cmp
scas
scas
push
jnp
mov
repz
jge
mov
and
add
mov
xchg
cmp
sub
lret
push
cmp
or
call
std
loopne
jmp
add
ror
pop
and
sub
push
adc
jle
fs
cwtl
fidivrl
clc
fdivrl
xor
xchg
xchg
inc
cltd
add
iret
rcrb
sub
dec
cmc
pop
jno
out
leave
les
rorb
arpl
inc
cmpsb
jl
and
scas
sub
dec
cmp
addl
mov
sub
das
pop
and
or
mov
jno
inc
int3
aad
mov
pop
sbb
mov
stc
mov
xchg
sbb
lods
outsb
popa
mov
pushf
mov
or
fldl
add
xchg
test
push
mov
and
jae
fucom
jl
add
add
add
out
addr16
test
cmp
inc
fcompl
adc
push
push
sbb
inc
cwtl
aad
mov
in
inc
stc
loope
mov
and
cmp
mov
xorl
lods
mov
xchg
ficomps
out
add
imul
orb
mov
or
pushf
pmaddwd
imul
movsl
fsubp
xor
dec
jmp
and
fidivrl
inc
popf
adc
xchg
sub
pop
jbe
cmp
movl
test
fdivr
gs
dec
out
imul
call
mov
xor
cli
out
xor
fdivs
testb
sarl
movsl
adc
loope,pn
bound
and
xor
stos
pop
inc
jmp
out
pop
jmp
or
clc
xor
add
lcall
xor
cmpsb
jo
pop
nop
mov
ret
jg
outsb
cmp
loopne
inc
cmp
mov
sbb
lahf
outsl
aad
subl
cmpsl
emms
cmpsl
pop
push
pop
pop
mov
jp
sbb
pop
mov
mov
inc
in
ds
adc
push
jae
mov
adc
mov
xchg
sub
and
ret
divb
push
mov
or
push
in
mov
xchg
xchg
jbe
and
jnp
mov
or
lcall
lcall
pop
cltd
push
xchg
std
xchg
xor
pop
sbb
lret
out
sarb
mov
add
mov
sbb
or
lret
imul
cli
clc
mov
clc
outsl
xchg
dec
or
cmp
ret
test
ljmp
mov
jbe
push
sbb
bound
mov
lods
mov
push
or
fdivp
xchg
push
sbb
aaa
mov
mov
add
push
daa
add
insb
outsb
cwtl
into
or
jp
in
popf
addl
push
or
leave
cltd
and
addr16
addr16
andl
outsl
jne
pop
shl
sti
fdivrl
mov
mov
jle
mov
jl
outsb
adc
ljmp
xor
pushf
lock
int
mov
sub
xor
adc
push
cmpsb
ds
in
add
or
lcall
subb
cs
fidivs
push
pop
in
popa
adc
gs
mov
pop
inc
cmpsl
movsb
fcmovbe
add
pop
pop
pop
mulb
mov
xchg
out
xchg
add
test
inc
outsb
mov
jle
dec
cmpsl
xlat
pop
cmpsb
aaa
mov
cs
push
xor
outsl
and
cmp
or
add
push
mov
into
mov
cmpsb
mov
movsl
mov
ror
popa
das
mov
and
adc
pop
cmp
jo
push
iret
test
test
xor
mov
rol
mov
fstpl
xchg
pusha
cs
jae
in
add
outsb
push
mov
push
repz
ss
push
jb
add
xor
leave
inc
inc
xchg
push
jno
insl
bound
or
sbb
insb
pop
stos
mov
imul
int3
lahf
dec
xchg
inc
dec
addr16
pusha
test
xlat
mov
aad
outsl
stos
ja
imul
add
shlb
xchg
sbb
push
xchg
leave
test
dec
daa
dec
mov
mov
clc
adc
loope
or
cmpl
outsb
mov
and
out
rcll
cmpsb
and
mov
mov
sbb
std
cmp
mov
sub
xchg
gs
movsl
dec
push
pop
fisttpll
out
repnz
fildl
movsl
xorl
xor
iret
jno
in
add
mov
and
pushf
mov
loopne
mov
rcr
mov
jecxz
sbb
cmp
jp
sti
mov
add
rcrb
push
lahf
lock
test
dec
sahf
fs
popl
or
inc
cltd
xchg
pop
xlat
pushf
lds
daa
dec
adc
je
scas
shrb
cltd
cmp
adc
mov
jl
imul
and
push
nop
dec
stc
je
inc
jge
jecxz
stos
jge
aad
xchg
pop
mov
and
jno
push
insl
xor
pop
adc
fisubrl
popf
mov
dec
push
fxch
insb
rcrb
pusha
and
xor
xchg
stos
add
outsl
fldenv
or
jg
mov
stos
jbe
add
add
pop
fldl
inc
sti
aas
jb
add
cmpsl
pop
call
add
add
add
xchg
dec
movb
xchg
out
xor
je
adc
push
repz
pop
ja
ja
subb
push
cld
add
adc
dec
pop
pop
lock
cmp
xchg
jmp
jecxz
adc
inc
ljmp
push
nop
sub
push
pop
nop
hlt
js
out
mov
pop
sub
lea
pop
mov
fildl
imul
cmpsl
lcall
adc
push
in
loop
in
hlt
mov
ret
dec
and
cltd
fs
jae
inc
loope
jb
inc
push
xchg
lcall
pop
jo
daa
jge
fs
or
push
sub
mov
test
in
mov
shrl
notl
mov
aam
push
hlt
pop
sbb
xchg
imul
jl
rclb
xchg
repnz
nop
inc
xchg
mov
push
jae
int
outsl
fisubrl
push
push
loop
push
push
xchg
lods
aaa
insl
dec
add
imul
push
xor
mov
nop
dec
dec
fimull
insb
gs
aad
sahf
mov
add
cmovnp
stc
fmull
in
fiaddl
xor
jl
xchg
cmp
sub
or
dec
push
push
jnp,pt
adc
loopne
lock
iret
mov
pop
jmp
pop
or
mov
test
sbb
push
cli
and
aad
push
repz
outsl
jb
rcrb
stos
ja
ficoms
jb
mov
adc
nop
scas
jmp
xchg
cli
mov
je
adc
mov
sbb
pop
and
rorb
shll
pop
repnz
jo
mov
add
ret
fwait
push
adc
subb
call
push
mov
mov
lret
test
jge
adc
sub
scas
andb
fldenv
movsl
fwait
out
push
push
and
imul
fisubrs
das
subl
cmp
jbe
in
or
xchg
jbe
jmp
ds
call
lds
hlt
ljmp
test
aam
or
cmp
loope
lcall
pop
out
sbb
xlat
jge
dec
fsubrs
data16
adc
mov
inc
repz
mov
or
mov
ret
mov
inc
dec
mov
lods
mov
fadd
imul
enter
jo
imul
test
mov
sbb
pushl
dec
popa
inc
stc
outsb
push
pop
pop
push
push
jb
mov
jmp
inc
div
jns
stc
pushf
mov
xorl
scas
lret
dec
int3
adc
jge
xchg
add
lcall
or
mov
rep
jbe
cld
mov
jmp
push
and
pop
sub
sub
insb
arpl
push
xor
dec
aas
or
pop
mov
sbb
cmp
and
mov
xor
inc
cmp
inc
cmp
insb
cmp
and
fimull
push
jbe
mov
jmp
addr16
or
popf
icebp
and
xchg
mov
popa
daa
sti
cs
sub
test
push
adc
iret
in
mov
es
dec
icebp
das
sub
scas
stos
and
int3
stos
mov
mov
add
enter
mov
xor
xor
xor
enter
frstpm(287
and
ja
mov
ja
mov
js
sub
jle
std
popf
stos
stos
xchg
ljmp
or
test
es
inc
cmp
cmp
xchg
pop
sub
add
adc
jnp
xor
andl
add
lret
sub
jae
mov
push
sti
mov
xor
add
xor
mov
push
cmp
in
push
jl
push
clc
xchg
and
lds
xchg
xor
ja
xor
push
pushf
fildll
stos
clc
mov
jb
xor
push
mov
loop
xchg
fsubl
loop
inc
fisubs
lods
popa
int
dec
adc
dec
push
pop
aad
xchg
add
adc
push
movsl
cmp
and
xchg
and
aam
in
out
arpl
jno
movsl
pop
pop
sbb
cs
push
and
cmc
jno
inc
lods
add
idiv
in
popf
ret
out
cltd
mov
mov
inc
mov
adc
and
scas
fcompl
add
jge
mov
or
stos
xor
xchg
add
add
add
subb
divl
loopne
scas
fucomp
mov
out
addb
inc
int
lds
int3
dec
xor
mov
idivb
dec
repnz
jge
xchg
cld
repnz
xchg
mov
and
cmp
bound
inc
jmp
and
pushf
lcall
cmpsb
into
cmc
push
mov
jl
insb
bts
rcll
lods
sub
test
hlt
adc
ficompl
jne
xor
pop
pop
cmp
mov
pop
out
into
fnstsw
push
scas
mov
pop
das
xor
adc
xchg
jmp
push
inc
pop
jle
div
insl
ljmp
out
les
mulb
sti
pand
xor
test
loopne
test
adc
push
sub
leave
jecxz
fcmovnb
dec
jne
aam
or
addl
jo
or
add
in
cmp
stos
mov
jnp
dec
pop
sahf
push
mov
lret
adcb
dec
adc
xchg
jb
aas
sbb
fcompl
rol
push
and
sqrtps
add
stos
cs
add
jb
ja
imul
and
test
sub
jg
and
jns
adc
cmp
gs
incl
ret
outsb
jbe
pop
cmp
sbb
push
fnstenv
test
push
xchg
xlat
and
mov
daa
or
add
or
pop
test
jg
or
inc
es
jae
and
mov
out
cs
pop
dec
rcrl
cltd
cwtl
outsl
repnz
call
das
xchg
pop
rorb
push
push
pop
out
xor
test
sub
inc
push
mov
push
leave
jecxz
sub
xor
xor
mov
nop
cwtl
push
push
test
std
mov
xor
dec
das
and
fwait
mov
inc
mov
mov
leave
push
test
xlat
jmp
out
adc
fchs
out
fsubp
notl
add
mov
xor
js
test
jle
adc
and
jmp
leave
or
sub
int
fbld
adc
xchg
cmp
das
sub
aad
mov
adc
cmp
test
mov
jo
mov
movsb
jmp
mov
fcmovb
cmp
push
orl
push
hlt
mov
mov
xchg
xchg
in
adc
jns
and
repnz
pop
insb
cltd
pop
fcomip
mov
cmp
fldl
mov
inc
adc
mov
loopne
add
sub
mov
sbb
stos
popa
into
jmp
cltd
push
lcall
loopne
jnp
movsl
mov
fldt
cmp
arpl
xchg
outsb
add
xorl
movsb
icebp
incb
mov
mov
xor
lret
testl
pop
cli
es
fstl
mov
inc
pushf
fisubrs
push
mov
mov
hlt
cmpsb
mov
adc
xchg
imul
lds
adc
out
add
enter
lcall
mov
out
push
mov
cli
sub
dec
test
cmp
push
or
sbb
jnp
adc
imul
lahf
fwait
dec
inc
enter
call
dec
xchg
lahf
and
or
inc
mov
inc
ret
mov
pop
add
mov
push
adc
add
or
dec
jge
ljmp
movlhps
aaa
xchg
clc
mov
push
pop
ret
in
shrb
or
aad
ljmp
adc
ljmp
adc
mov
sarb
pop
pusha
xchg
inc
push
and
push
pcmpgtd
and
mov
mov
push
jno
lock
and
cwtl
mov
addl
sti
sbb
pusha
jo
jbe
mov
sbb
or
xchg
dec
cli
pop
jl
or
pop
jnp
mov
xchg
mov
int3
iret
repnz
pop
cs
and
xchg
push
adc
mov
cmp
mov
jae
cld
aam
push
std
dec
aaa
jmp
adc
or
inc
lahf
xchg
insb
sbb
xor
iret
mov
loopne
jle
dec
mov
mov
out
jo
sti
outsl
aad
lret
out
aaa
int
enter
pop
jmp
dec
js
add
add
xchg
adc
pop
mov
cmp
mov
add
add
add
push
fimull
dec
xchg
cmpsl
addl
pop
clc
mov
das
fnstsw
xchg
cmpsb
mov
loopnew
lods
das
jne
fxch
push
add
sub
dec
mov
clc
jp
mov
icebp
scas
aas
cwtl
adc
xor
jl
dec
call
in
jecxz
pushf
push
mov
stc
in
or
out
xchg
ja
xchg
xor
mov
repz
addr16
inc
pushf
fistpl
jle
cmp
xchg
jnp
ss
and
lret
cmp
dec
mov
test
mov
inc
pop
cltd
cmp
fisubl
pop
inc
lds
les
addr16
push
out
movsb
or
mov
in
arpl
lds
test
mov
jmp
xor
lds
inc
cmp
cmp
icebp
popf
push
mov
inc
jb
mov
cmp
mov
pushf
jl
adc
dec
leave
seta
rcrl
inc
or
cmpsl
mov
adc
movsl
in
or
jb
setnp
sub
xchg
in
aaa
jmp
pop
jo
lds
dec
frstor
xchg
gs
popf
movsl
sbb
ss
jo
xchg
lahf
jb
mov
and
sub
sbbl
sub
icebp
imul
dec
nop
in
xor
mov
pop
jb
insl
xchg
aas
mov
rol
aas
xchg
jge
push
inc
into
push
arpl
inc
or
gs
sbb
mov
adc
cmpsb
out
ds
movsb
mov
jb
mov
adc
mov
sbb
stos
dec
daa
repnz
ret
mov
push
mov
xor
fcoml
aam
jno
in
movsb
push
push
cwtl
mov
inc
mov
enter
add
outsb
jae
or
jbe
dec
test
push
and
inc
and
mov
xor
pop
push
jb
cltd
push
push
psubsb
mov
sub
int
xchg
fildl
xrelease
test
clc
push
movq
jmp
mov
add
mov
xchg
fstpl
ja
jno
rcl
sub
jecxz
pop
jns
cld
inc
rcrb
or
inc
daa
pushw
int3
loopne
mov
test
imull
mov
mov
pop
mov
mov
pop
sbb
lods
lcall
jle
xor
mov
push
and
xchg
bound
xor
enter
mov
ja
dec
int
mov
pop
ret
ds
push
pop
outsb
icebp
xor
xor
out
addr16
and
cld
fidivs
pop
lock
cmpsb
pop
lds
lahf
xchg
sub
scas
and
and
cli
add
mov
test
fmuls
mov
mov
ds
mov
lcall
lds
popl
xor
imul
dec
in
cmp
lods
push
inc
sub
pushf
fisttpl
inc
movsl
arpl
pop
cmp
jmp
dec
fsubl
jp
xorb
lcall
adc
mov
mov
push
shlb
xchg
pop
je
xor
mov
mov
sti
dec
lock
xor
ret
fs
cmp
xchg
push
into
adc
cmp
add
popf
jbe
clc
test
adc
cmp
push
loop
mov
xor
ja
xchg
jle
pop
lcall
movsb
add
pusha
add
out
popf
stc
popa
int
loope
or
outsb
add
shlb
scas
inc
inc
xlat
loope
clc
sbb
xchg
jb
in
sti
cmp
ja
add
dec
popf
cmp
push
jbe
xor
and
adc
cmp
clc
dec
inc
cmp
lcall
ffreep
nop
mov
cli
or
sub
push
bound
cmp
and
stos
mov
add
lret
xor
movsb
push
gs
or
jne
mov
push
mov
cmpsl
cmp
push
outsl
push
pop
mov
cmp
aam
out
jl
mov
stos
nop
cs
js
pop
daa
iret
fldt
imul
push
imul
sub
cli
mov
dec
mov
lds
jge
movb
sbb
jne
mov
xor
mov
inc
or
adc
cmp
fcmovb
aaa
ret
fneni(8087
xlat
xchg
add
add
sti
and
es
sti
std
sbb
adc
clc
mov
add
hlt
add
add
js
sub
mov
or
js
sub
mov
enter
cmc
xlat
out
inc
inc
outsb
daa
movsb
inc
sbb
pop
xor
pop
jno
or
into
push
jbe
test
cmp
test
inc
xchg
push
push
cwtl
daa
jmp
in
int3
shr
and
ja
scas
jb
out
orl
push
sti
insb
stos
mov
daa
test
mov
push
popf
mov
mov
pop
add
fwait
out
lods
sbb
lret
lock
out
fdivrl
cmc
dec
add
dec
add
shr
sti
loopne
mov
sbb
addb
xlat
pusha
in
lcall
cltd
js
mov
dec
insb
jge
and
add
jns
or
sbb
cs
add
add
adc
mov
fcoms
arpl
sub
adc
dec
push
loopne
fisubl
loope
push
or
or
je
gs
and
xchg
sub
inc
and
push
nop
ret
mov
cmp
adc
aas
into
add
inc
out
addr16
out
movl
cmpsb
aam
jge
jp
cwtl
sub
mov
iret
test
sbbb
repz
mov
out
push
inc
inc
repz
xchg
shll
ds
cltd
adc
repz
fildll
in
lcall
jb
push
incb
imul
or
mov
loop
dec
les
stos
stos
adc
nop
fnstenv
les
es
ret
push
jbe
int3
sub
test
push
out
push
adc
orl
xchg
cmp
adc
mov
add
shl
sbb
imul
inc
jp
rcr
push
scas
cs
adc
in
xor
sub
fstl
or
sbb
jo
cmpl
jnp
adc
mov
int
add
mov
cmp
mov
xor
jle
fidivrl
dec
mov
arpl
xor
jne
outsl
call
xor
rolb
pusha
push
out
je
mov
xchg
pop
push
pop
adc
pop
inc
and
or
inc
dec
cltd
or
nop
mov
dec
mov
daa
test
push
dec
fidivl
lcall
loop
push
mov
pop
fsubs
inc
outsl
mov
xchg
pop
mov
jl
data16
ljmp
and
fwait
sbbl
test
insl
test
ss
or
mov
mov
jmp
out
inc
cmc
ss
cmp
mov
test
mov
pop
push
addr16
loopne
jl
sbb
inc
adc
loopne
pusha
inc
enter
inc
icebp
hlt
test
icebp
mov
les
dec
sar
stos
and
int
xchg
jo
cmc
test
shl
es
xcrypt-ofb
cmpsl
push
test
into
adc
gs
adc
scas
sub
add
int
sbb
xor
mov
imul
cmc
aaa
movsb
test
cmp
lds
stos
loopne
add
xlat
mov
outsb
dec
adc
lea
sbb
push
jl
ret
mov
or
cltd
xorl
mov
out
or
notb
xchg
je
xchg
lds
mov
ljmp
hlt
or
rcrl
div
and
jle
arpl
jl
lret
inc
int
sbb
cwtl
loop
cli
sbb
in
stc
xor
cs
inc
addr16
pop
in
out
sbb
cmp
mov
or
hlt
push
stc
ss
pop
xor
insb
push
jb
aad
fsubrl
stos
cmpsl
repnz
adc
mov
mov
std
je
cs
sub
cmc
mov
xchg
cmp
mov
pop
add
sarb
dec
daa
aaa
push
fs
mov
push
and
out
lds
cmp
test
test
sub
aam
mov
mov
fldenv
clc
xor
mov
adc
adc
repnz
dec
add
roll
sbb
daa
pop
push
sahf
mov
pop
mov
xchg
mov
jo
test
loope
rcll
dec
sub
movsl
movsb
add
add
sbb
jg
lcall
out
movsl
xchg
add
hlt
add
add
mov
out
and
mov
and
sbb
jmp
lcall
sbb
dec
add
lds
mov
push
mov
clc
sbb
xchg
stos
mov
mov
inc
or
scas
cvtpi2ps
es
add
push
out
sub
or
mov
fmuls
mov
push
ss
sbb
frstor
lahf
scas
mov
insl
jmp
or
xchg
or
repnz
sub
ljmp
add
adc
and
inc
je
adc
fcmove
cmp
cli
sub
xchg
shll
ret
or
faddl
cs
mov
iret
add
add
and
loop
or
jl
mov
lahf
add
xor
into
push
pop
sub
mov
int
sbbl
pushl
and
dec
mov
jl
cmp
std
dec
rorl
into
leave
inc
call
ja
ljmp
lcall
sbb
jle
bound
or
loope
insb
movsb
adc
arpl
mov
inc
push
xlat
into
jno
inc
push
push
fprem
inc
ds
xor
adcb
loopne
jl
lods
cmpsb
movb
in
mov
cltd
sbb
int3
xchg
mov
fwait
mov
mov
sbb
lret
adc
push
jge
data16
cltd
rcrb
je
push
xlat
inc
ret
xchg
cli
push
out
pop
cmp
test
sarl
adc
js
adc
or
lods
xor
jg
inc
int
mov
in
and
enter
mov
xchg
jmp
xchg
cmp
das
cmc
movsb
out
imul
and
stos
mov
mov
ja
mov
mov
test
mov
outsb
jge
xchg
adc
movsl
pop
sbb
xchg
fidivrl
fcompl
dec
out
inc
ljmp
sub
shlb
hlt
rcr
scas
and
xor
das
adc
lods
xchg
pop
pop
addl
mov
scas
stc
jg
cmp
cmp
gs
add
xor
push
mov
pop
push
int3
dec
add
ljmp
dec
dec
gs
lods
inc
pop
fildl
dec
cltd
cli
cmpsl
lea
add
push
pop
outsl
fadd
orl
mov
cmp
add
sub
js
inc
in
pusha
push
sub
fldt
das
or
cmp
mulb
or
adc
jnp
lock
mov
xor
hlt
add
mov
nop
add
addr16
shlb
cltd
mov
aam
jecxz
enter
sbb
cli
jle
mov
inc
in
jnp
lret
pop
and
jno
ret
mov
adc
cmp
inc
pop
test
sbb
sbb
in
rclb
outsb
cltd
dec
test
xchg
pushf
call
inc
push
jno
jle
rcrl
movsl
bnd
bound
sbb
push
nop
push
fidivrl
cmp
mov
iret
rcl
pop
fdivrl
dec
repnz
in
xor
add
sbb
push
mov
mov
push
push
and
fbstp
push
lret
pop
adc
aaa
pop
adc
xchg
and
fs
lret
hlt
mov
sti
cli
or
pop
into
mov
xchg
jg
mov
mov
into
imul
sbb
scas
push
out
dec
mov
stos
stos
mov
cmp
xor
pop
dec
loope
push
push
cld
repz
andl
adc
inc
pop
mov
ja
or
cmpsb
cld
les
mov
pop
pop
cmpsl
outsb
xchg
xchg
pusha
bound
cmp
jge
jle
mov
and
inc
mov
sarb
call
cmp
adc
stc
stc
fdivrl
sbb
push
inc
add
lock
cmpsb
js
lds
mov
and
xorl
mov
orps
dec
cmp
mov
clc
mov
enter
pop
sti
or
jg
mov
fadd
dec
lock
in
loope
rcl
or
cmp
movsb
pop
sub
outsl
mov
push
rolb
mov
fstpt
add
stc
pop
sub
stos
jns
dec
sub
cmpsl
jl
outsb
cltd
lcall
test
scas
push
movsb
add
mov
outsb
stos
xor
push
jns
sub
push
shll
fidivrl
mov
cld
add
dec
add
or
in
fsts
push
mov
mov
inc
leave
cmp
cli
sbb
daa
lods
popf
imul
or
add
xor
fcmovnbe
insb
mov
mov
out
test
mov
add
pop
lods
xchg
rorl
les
push
jmp
mov
mov
pop
test
insb
aad
xchg
lea
adc
mov
test
add
mov
pop
es
mov
sub
mov
lret
add
xlat
jmp
pusha
inc
jecxz
repz
xor
mov
jno
cli
int3
jae
push
push
jno
cli
and
fcoml
xchg
fwait
mov
inc
or
cmp
sub
cvtps2pd
cbtw
jle
test
mov
jp
jae
lods
les
inc
fmul
inc
mov
in
or
aaa
sub
jmp
or
test
cmp
mov
add
lret
lcall
insl
incb
sbb
movsl
inc
push
xchg
xor
or
cmovae
pop
fcomps
jmp
rclb
mov
adc
int3
out
in
test
push
push
leave
daa
aad
sahf
repz
jo
mov
add
pop
xchg
push
les
cmp
fildll
mov
js
and
mov
int3
stos
cmpl
mov
sub
xchg
mov
xor
mov
enter
daa
mov
dec
cld
andb
adc
fs
jmp
xor
inc
cmc
sti
mov
lods
ret
fcmovbe
ja
mov
aad
aas
mov
dec
jb
pop
and
push
adc
cmp
xor
add
push
adc
jmp
ja
mov
mov
out
lds
mov
push
sahf
imul
int
insb
aaa
test
mov
bound
int
push
mov
cld
mov
mov
test
cs
sti
inc
jae
sahf
pop
push
popf
add
mov
cmp
xor
cmp
popa
xchg
and
iret
xor
jg
and
add
arpl
movsb
or
jb
adc
inc
pop
ret
arpl
pop
xchg
out
test
repz
or
or
icebp
hlt
cmp
bound
add
jno
and
cli
mov
pusha
lock
mov
mov
push
fildl
mov
jge
push
int
in
inc
dec
sbb
dec
ret
add
dec
lods
push
jge
xchg
enter
jbe
fs
div
xchg
mov
rorl
push
xchg
and
mov
jno
mov
js
scas
cld
mov
sub
push
out
loope
aam
pushl
les
jb
push
inc
std
jae
mov
dec
jb
imul
jmp
fwait
pop
mov
adc
cmp
xlat
ja
subl
mov
shlb
out
pop
dec
push
inc
or
ret
xchg
divb
add
push
mov
sbb
jnp
push
or
rorb
dec
add
in
adc
inc
fmull
inc
mov
sub
xor
cmp
inc
mov
pop
jmp
test
rolb
jl
enter
push
out
add
push
mov
aam
sahf
xorb
lahf
nop
sub
mov
mov
sub
pop
and
xchg
hlt
jmp
mov
sub
pop
dec
jmp
je
lods
sub
push
scas
sub
mov
mov
in
or
xchg
or
mov
mov
pop
inc
leave
and
jg
cmp
ss
sub
lret
or
push
and
add
jge
int
xor
clc
call
xchg
fxch
inc
xchg
shl
cs
push
and
jne
add
test
dec
jo
xchg
pop
clc
sbb
sub
xor
inc
jae
sbb
cmp
es
ja
pop
mov
push
lret
shlb
xchg
and
setp
add
cld
add
test
ja
js
inc
cmc
repnz
mov
push
insl
in
xchg
lret
stc
fsubl
hlt
shll
xchg
push
dec
leave
pop
ja
pop
cmp
ja,pn
sub
imul
mov
jae
insl
cs
std
ljmp
sbbb
cwtl
gs
filds
adc
popf
dec
lret
add
add
adc
dec
jge
xchg
outsl
jge
lcall
add
hlt
add
add
je
scas
pop
fistl
cmc
xor
xor
sub
stos
nop
shr
or
popa
xchg
add
or
jnp
adc
mov
mov
mov
sbb
shrb
mov
push
xor
add
movsb
mov
into
fimull
mov
repz
call
out
push
pop
sbb
adc
outsl
aaa
popf
or
test
test
and
hlt
ficompl
test
sbb
test
lret
mov
sarb
je
movsb
rolb
dec
pop
add
add
je
dec
jnp
adc
sarl
or
push
sbb
pop
test
lods
mov
mov
out
lahf
in
dec
dec
lret
jecxz
aam
lds
mov
inc
and
mov
out
xchg
leave
outsb
xorb
jno
push
outsb
out
jne
add
mov
or
test
inc
std
ss
push
daa
iret
sbb
ret
hlt
je
icebp
inc
loopne
lods
xorl
daa
push
testl
and
fwait
daa
dec
xchg
iret
std
xchg
xor
stos
sti
mov
fs
bound
pushf
mov
push
shlb
cmp
test
shld
push
and
mov
or
add
mov
cmp
mov
dec
gs
mov
ja
cmpsb
cmc
dec
add
pop
std
inc
and
je
xor
jo
add
sub
imul
and
cmp
insl
pop
popf
call
fwait
les
fidivrl
cmpsl
adc
lret
push
cmpsl
xor
mov
in
aam
outsb
inc
jne
ja,pt
sub
xchg
es
xchg
aad
mov
push
lret
icebp
rorb
cli
iret
sub
in
inc
fmull
adc
pop
or
mov
lods
mov
repz
xor
jge
xchg
adc
cld
and
fdivrp
lret
es
cli
xor
test
xor
mov
xchg
or
cwtl
aad
mov
mov
fsubr
stos
inc
push
jle
push
sbb
jo
sbb
shlb
cmc
xor
mov
or
aam
push
cmp
pop
cwtl
inc
xlat
cmp
popa
hlt
fcmovnbe
adc
cs
in
subl
aam
push
add
rorb
mov
addr16
add
push
sbb
push
scas
nop
push
xchg
movsl
and
lret
cmp
pop
xchg
cltd
sti
insb
movsb
daa
and
int3
loope
pop
jle
jae
sbb
dec
enter
aas
mov
dec
pushf
xor
les
insb
adc
sub
aad
mov
pop
adc
xor
mov
ds
sbb
pop
repz
xchg
jnp
icebp
pop
xor
mov
mov
sub
subb
xor
sbb
or
and
push
push
out
pusha
pop
mov
fwait
xchg
fwait
aad
jno
popa
lock
call
clc
xlat
cwtl
lahf
scas
loop
repnz
cmpsl
xchg
jbe
incl
push
imul
mov
andb
sub
xor
ja
jge
loop
arpl
sub
mov
and
push
jo
push
fcmovu
adc
pop
leave
daa
lods
inc
mov
push
jge
mov
outsl
test
aaa
xchg
lds
ds
push
mov
xchg
sti
stos
pop
cli
mov
daa
or
in
repz
xchg
push
leave
jo
icebp
lds
leave
popf
inc
sahf
rcrl
cmpsb
and
jb
cmp
jnp
pop
mov
movb
in
xchg
add
mov
lret
jp
mov
std
cmp
sbb
mov
or
xlat
scas
jl
scas
xor
shl
movl
cmp
pushf
inc
loop
xchg
mov
dec
xchg
data16
cmp
loopne
std
push
mov
enter
sub
and
arpl
nop
dec
push
ficoms
lea
push
shl
push
rcll
xchg
mov
rclb
iret
mov
pushf
outsb
mov
cmp
adc
mov
ficompl
inc
and
mov
sbb
in
sbb
shr
dec
lret
adc
adc
mov
or
fnstenv
mov
arpl
add
hlt
sub
arpl
and
mov
repnz
lcall
dec
fmull
pop
pop
jbe
loop
and
cmpsb
test
daa
xor
pop
ficomps
call
loop
sub
cmpsl
jp
inc
fstps
aas
inc
test
dec
adc
data16
lret
in
int3
aad
jnp
inc
cmpsl
add
add
xlat
hlt
push
ljmp
sub
cmp
andl
imul
rorl
inc
sarb
cli
and
xor
mov
xor
inc
lcall
and
fmull
jae
adc
jmp
cmp
cmp
pushf
das
popf
mov
add
mov
pop
loope
jmp
testl
adc
mov
inc
daa
jbe
cmp
sbb
lret
mov
push
inc
fldcw
lret
stos
aas
inc
sub
les
pop
rorl
push
inc
sbb
bound
adc
push
jl
xchg
push
push
test
xor
sub
clc
sub
cmp
push
in
arpl
imul
out
inc
adc
inc
mov
fmul
fsubs
int
adc
sbb
xor
int
and
outsb
xor
in
sbb
mov
out
pushf
rcll
ret
jnp
or
mov
ja
notb
jmp
mov
loope
cwtl
mov
xor
jecxz
pusha
addb
sub
push
fiaddl
fimuls
push
fstps
sub
out
or
shl
jle
bound
add
dec
rclb
and
cmp
stos
pop
lds
sahf
sub
mov
ficoms
testb
sbb
insl
push
loopne
or
fadds
pop
mov
pop
cmp
shrb
shlb
dec
fsubrp
rorb
or
fimuls
xor
or
or
in
pop
int
pop
cmpsl
std
mov
xor
xor
or
jno
jmp
std
and
gs
cmc
lss
adc
dec
jno
and
sbb
call
add
push
push
jg
xchg
insb
mov
aad
mov
stc
rcrl
lock
cmpsl
jb
jmp
jnp
push
rolb
mov
and
xorl
pop
jns
lcall
in
jecxz
fistps
gs
std
add
nopl
mov
jnp
mov
in
mov
mov
jl
decl
cli
clc
jnp
adc
inc
jg
ret
lods
icebp
dec
aas
mov
jo
sub
mov
xchg
jno
push
cmp
xchg
or
pop
out
jb
addb
add
jge
dec
pop
inc
test
outsb
faddl
cli
xor
jmp
arpl
jns
repz
icebp
sar
je
ret
pop
scas
jns
xor
xor
push
scas
and
jmp
inc
push
sub
shll
sbb
inc
jle
jl
xchg
nop
mov
addl
and
lea
imul
xchg
add
hlt
mov
mov
pop
lcall
add
mov
sahf
cmpsb
inc
mov
addr16
pop
mov
dec
outsb
sahf
push
lock
mov
inc
ljmp
icebp
nop
push
fsubr
and
dec
xorl
ss
sti
dec
cmc
rcl
rcl
lret
pop
inc
inc
cmp
aam
mov
xor
mov
sub
mov
and
dec
fwait
adc
adc
push
in
into
out
adc
int
ss
mov
mov
mov
cmp
gs
mov
pop
pop
stc
test
pop
dec
stos
ss
test
dec
in
sub
cs
mov
ficoms
gs
out
or
xchg
jo
fcomp
int
fsubs
mov
mov
aaa
fldcw
rcl
out
push
mov
enter
test
cmpl
or
xchg
cwtl
loope
mov
jo
or
xor
stos
and
fwait
mov
pop
les
ds
mov
mov
mov
push
pop
stc
mov
hlt
cmc
mov
out
push
add
bnd
push
jg
outsl
das
push
mov
imul
aas
in
out
orb
add
addb
movsl
jp
xchg
push
push
sbb
add
push
je
mov
hlt
stos
ret
movsb
pop
mov
ja
andl
push
cmp
ret
loopne
scas
popf
cmp
sti
fstps
mov
lods
js
push
adc
adc
mov
inc
lds
pop
cmp
pushf
mov
mov
lods
test
cld
out
sbb
popf
inc
mov
es
inc
mov
push
xchg
outsb
mov
inc
cwtl
dec
jnp
add
add
cvtdq2ps
dec
sar
adc
xor
jne
add
hlt
add
add
mov
stc
nop
or
ja
pop
adc
mov
inc
fiadds
int
xchg
and
arpl
aaa
xchg
ljmp
ss
scas
jmp
cld
sub
adc
arpl
mov
xchg
mov
imul
push
rolb
rcrb
pop
data16
aad
ror
xchg
pop
shrb
lcall
or
jmp
lcall
dec
cmp
test
aas
adc
xchg
push
jl
jo
popf
jle
jmp
sbb
mov
fildl
jae
sub
adc
sbb
cmp
push
arpl
test
repz
std
aad
lea
jnp
mov
punpckhbw
push
push
int
fwait
cmp
xchg
rolb
cmpsb
xchg
jno
int3
mov
imul
pop
sbbb
mov
movsl
jp
ret
push
cmp
cmp
dec
push
iret
adc
add
sti
mov
hlt
je
jg
and
inc
test
xchg
push
cmp
dec
movsl
mov
addr16
dec
lret
jle
pusha
inc
xchg
ficompl
ret
in
jg
sti
enter
cmp
lods
dec
add
inc
test
clc
jecxz
les
sbb
int3
xchg
das
or
pop
jecxz
cmpsl
scas
ja
fcmovbe
mov
add
cld
aaa
or
addr16
sub
sub
inc
test
adc
and
dec
addr16
sub
sbb
cmp
aad
lock
xor
add
lods
mov
adc
test
lret
pop
outsl
in
push
addr16
jne
sub
in
cmp
inc
sbb
scas
lcall
rorl
inc
lods
push
and
xchg
mov
clc
sub
loop
push
add
gs
insl
sub
mov
cltd
pop
jge
bound
jmp
jle
lods
sub
cld
pop
lods
xlat
sbb
add
xchg
jp
into
aas
pop
sbb
or
or
sbb
mov
or
dec
jmp
pop
mov
adc
sarb
jmp
daa
cmp
icebp
add
iret
pop
in
inc
or
push
ljmp
add
dec
ds
addb
sub
jg
lahf
mov
out
sbb
jmp
xchg
jmp
popa
leave
mov
sahf
imul
mov
js
xchg
mov
je
jmp
mov
lcall
cmp
sub
or
xchg
sub
fbld
mov
mov
inc
repz
xchg
dec
loope
inc
movnti
ss
add
adc
mov
push
das
call
ja
pusha
orb
lds
pop
cmp
add
pushf
test
or
movsb
fidivrl
std
and
test
in
xor
enter
mov
jg
jno
push
and
xor
std
sub
push
pop
inc
ljmp
jl
shr
push
cmp
scas
mov
xchg
cli
add
mov
ret
cli
cmp
xchg
je
lods
mov
shr
mov
mov
int
cltd
pushf
ljmp
incl
test
or
or
xor
ss
cmp
sub
jbe
fwait
stos
inc
and
pop
pushf
xchg
cmp
cmp
lds
lea
fildl
stc
rcl
aad
sbb
xorb
jge
movsb
fmuls
pop
cmp
xchg
jnp
jae
pop
sub
jnp
inc
xor
xchg
in
lock
pop
stos
rolb
fdivl
jp
jno
bound
testb
pop
mov
in
loopne
pop
sbb
mov
rorl
dec
dec
nop
cltd
flds
jbe
inc
fsubs
insb
out
or
imul
cmc
aam
and
adc
into
sub
gs
mov
leave
fsubrs
mov
sbbl
fdivrl
popf
mov
sbbb
dec
pop
sbb
cwtl
incb
jg
pop
inc
cli
dec
xchg
repz
cmp
sub
fstl
cmpsb
and
pop
xor
jns
cltd
mov
pop
gs
aad
and
jns
xchg
ja
lcall
jns
push
lods
outsb
icebp
lock
adc
dec
push
sub
pop
jle
add
add
dec
mov
lret
mov
aad
add
hlt
add
add
adc
ss
xchg
repz
xchg
push
fisubl
bound
fwait
loope
mov
addb
push
das
les
subl
mov
jecxz
jns
mov
lds
sbbl
outsl
imul
loope
dec
or
cmp
cmpsb
popa
dec
mov
arpl
cmp
ret
sub
jle
popa
dec
sub
pop
and
lret
lea
bsf
por
dec
inc
mov
dec
test
scas
jno
xchg
fwait
imul
mov
ljmp
push
mov
scas
mov
dec
inc
sbbl
faddl
push
gs
int3
sbb
lcall
sbb
mov
cmpb
pop
mov
push
add
cmp
xor
and
or
mov
inc
lds
cmpsb
stc
vmovdqa
stos
addr16
cmp
and
dec
imul
push
jg
sub
cmp
xor
mov
cmpsb
jns
push
xchg
push
imul
stc
and
push
sbb
loopne
pop
fs
pop
jnp
jns
push
mov
stos
and
sub
push
mov
mov
pop
inc
daa
jge
mov
ss
jae
fimuls
and
popa
mov
cwtl
jge
sub
pop
lods
idivb
insl
out
or
shlb
xchg
jg
int
jecxz
adc
mov
sbb
jne
mov
sbb
push
push
daa
fcoml
cld
out
or
pop
das
mov
and
outsl
xorl
jo
sahf
leave
enter
cli
push
pop
cmp
mov
push
imul
adc
aaa
push
sbb
and
and
mov
pop
xchg
mov
cwtl
inc
push
mov
fsub
pop
fmull
or
cmp
dec
add
push
dec
inc
add
cmpl
jl
lods
mov
js
cmp
repnz
xor
push
out
or
sar
mov
xor
fdiv
add
xchg
dec
and
adc
sahf
jmp
sarl
inc
adc
cmc
mov
sub
or
into
scas
push
mov
call
mov
rcll
es
dec
jno
enter
adc
mov
outsl
jo
call
test
out
inc
sub
xchg
jnp
test
pop
in
in
adc
sbb
or
or
mov
clc
aam
lahf
xchg
out
push
cmp
cmp
or
jmp
mov
pop
mull
rcr
test
or
aam
and
insl
jmp
scas
mov
ljmp
inc
and
shl
mov
loop
push
push
sbb
les
test
lahf
nop
adc
pop
and
adc
mov
mov
nop
or
out
pop
aas
mov
pop
xchg
mov
fwait
les
and
test
push
outsb
sarl
ljmp
jbe
and
pop
sbb
gs
mov
push
mov
out
adc
adc
push
mov
scas
addl
jle
pushf
sbb
pop
loop
fbstp
xor
lahf
mov
popf
divb
dec
dec
ljmp
dec
bound
pop
sbb
jle
xor
inc
loopne
mov
aam
sbb
jae
jp
pop
adc
mov
xchg
iret
jno
ljmp
sar
dec
sti
jl
test
mov
cmpsl
mov
cmpsl
push
mov
lret
test
stos
inc
sbb
sub
add
in
andl
sub
jo
outsl
inc
ljmp
mov
int3
fdivl
cmp
or
popf
push
into
arpl
aas
ficoms
mov
mov
and
lcall
cmp
fwait
adc
ds
jns
xlat
mov
nop
aad
xchg
push
fadds
jge
sub
jo
movsb
iret
ss
pop
mov
cmpsb
scas
pop
dec
mov
lock
xchg
ljmp
fadds
gs
in
pop
aam
jns
push
cmp
repz
ret
jmp
lret
push
push
push
push
repnz
mov
sti
insl
in
pop
dec
shrb
lcall
das
or
or
aam
mov
adc
add
add
daa
cmp
mov
and
pop
mov
add
add
add
cmp
stos
orb
sbbl
dec
rolb
imul
inc
stc
dec
sbb
jl
lds
mov
sub
test
dec
sbb
cwtl
dec
lods
je
push
ljmp
call
int3
sbb
pusha
sahf
not
push
icebp
das
push
rcr
push
ffree
xorl
jecxz
cmpb
scas
mov
inc
lock
xor
dec
sarl
idivl
adc
leave
ja
xchg
inc
dec
mov
mov
xor
and
cwtl
fisttps
push
jp
jb
cwtl
outsl
movhlps
fmuls
sub
and
mov
sub
cmc
stos
repz
lret
aam
and
aas
dec
out
mov
iretw
sub
xor
out
sahf
lods
mov
inc
ja
jl
pop
dec
in
idivl
mov
or
imul
jecxz
out
jp
jge
pusha
adc
je
test
lcall
xchg
js
mov
xor
add
add
jmp
test
into
std
mov
leave
adc
shr
out
mov
movsl
pop
or
add
mov
aad
mov
pushf
push
inc
inc
pusha
outsb
mov
sub
sbb
push
mov
rcrl
jo
leave
mov
adc
enter
in
pop
lret
stos
push
cltd
push
mov
jp
enter
or
mov
aaa
jg
insl
stos
inc
sbb
lcall
sbb
push
cwtl
roll
pop
into
mov
and
les
call
iret
es
push
or
nop
sbb
clc
jb
add
in
mov
cmp
lock
dec
in
sbb
lock
sbb
cmp
fmul
test
or
jecxz
movsl
popa
sar
inc
lods
in
and
adc
les
cmp
dec
mov
jecxz
scas
fs
scas
dec
faddl
adc
mov
jo
ds
fnstsw
dec
xor
leave
add
mov
mov
sbb
sub
jae
sub
shll
push
popa
jp
scas
in
lahf
or
cmp
out
sub
mov
fwait
insl
jb
adc
insl
clc
pop
jns
jb
sbb
fisubrs
xchg
test
sbb
lods
sub
xchg
dec
out
sbb
cli
inc
movsl
xchg
fs
fcomp
cmpsb
in
rorb
sub
fcmovnu
das
adc
or
sti
xor
jnp
sbb
shr
loopne
mov
fsubrl
insl
push
imull
jne
in
sub
dec
cmp
xchg
xor
adc
stc
cmp
js
pop
shlb
lret
inc
sbb
mov
fisubl
outsb
dec
lcall
movsb
dec
cmpsb
dec
scas
xchg
ret
cld
push
popf
push
aas
xchg
addr16
test
or
mov
clc
es
cmp
pop
in
cmp
or
repnz
inc
add
or
mov
outsb
mov
adc
or
mov
sbb
stc
dec
clc
sub
adcb
mov
pop
rolb
lret
lds
fcompl
and
stc
mov
pusha
outsl
clc
pop
mov
fmull
in
push
mov
sbb
in
xor
flds
mov
popf
rclb
mov
imul
cltd
xor
inc
ja
mov
es
outsb
cmp
mov
call
int3
or
fidivl
mov
mov
insb
or
cmp
pop
xor
jo
loop
inc
ljmp
fs
jb
jns
push
fistl
jle
and
pop
sub
cwtl
test
outsb
xchg
hlt
cmpsl
aaa
icebp
lds
push
mov
jno
mov
mov
adc
sub
pop
cmp
aas
mov
mov
jb
mov
mov
mov
cmp
jnp
sbb
aam
clc
or
mov
int3
jg
mov
adc
in
test
testb
cmp
test
fidivl
sti
mov
xor
out
add
cltd
mov
push
push
sub
add
pop
shll
or
sahf
mov
xor
push
jae
adc
stos
testl
fisttpl
iret
sub
sbb
inc
or
dec
stos
cwtl
sti
imul
imul
clc
data16
mov
out
fisubl
dec
rcll
add
add
add
jno
stos
test
outsl
enter
arpl
lahf
or
fdivl
push
out
ss
adc
ret
test
pop
or
nop
inc
sub
push
clc
shlb
pop
fwait
and
inc
jp
inc
out
mov
pop
mov
sub
cmp
cmpsl
dec
xor
xchg
push
cmp
adc
ss
xor
fmuls
push
adc
xlat
mov
cmc
pop
into
hlt
roll
hlt
jne
add
rol
insb
mov
leave
mov
sub
jecxz
loopne
loop
mov
out
mov
xor
std
pop
in
cld
mov
mov
jne
pop
fimull
ficompl
push
cmp
pop
pop
mov
stc
pop
mov
jg
add
sbb
imul
pushf
lds
les
subb
cmp
sbb
das
cmp
xchg
in
jle
and
mov
dec
cmpb
jb
loop
ja
inc
pusha
mov
mov
add
shl
and
cmc
arpl
mov
stc
push
lods
dec
or
fldlg2
fwait
lods
shl
orl
mov
mov
push
push
in
or
cmp
cld
mov
hlt
inc
loope
xchg
ljmp
sti
popf
mov
pop
shll
or
in
add
push
inc
cwtl
and
fcoml
or
sub
test
imul
mov
fdivrl
add
scas
lret
dec
test
mov
ss
loope
in
or
pop
test
std
push
pop
push
xchg
cmp
mov
pop
scas
mov
lret
pop
imul
and
jno
imul
nop
shlb
inc
fs
add
aad
adc
pop
xlat
in
rcll
andb
mov
lcall
pop
mov
cmp
or
adc
jo
inc
shlb
inc
ficoml
in
lcall
push
sbbl
pop
jmp
iret
pop
pop
inc
daa
test
push
sbb
push
xchg
mov
movsl
fs
and
fimull
lahf
add
dec
pop
gs
loope
sbb
add
inc
orl
std
xchg
push
in
stc
pop
cltd
dec
sub
leave
cmp
or
and
add
xor
dec
lds
xchg
mov
fisubrl
push
mov
data16
int
gs
mov
push
arpl
inc
bound
mov
leave
sar
addl
mov
test
lret
fiaddl
mov
aas
sub
mov
dec
hlt
mov
fistpll
arpl
fwait
or
or
add
sub
xchg
loop
xchg
pop
cmpsl
nop
push
call
mov
or
inc
mov
outsl
ss
or
adc
mov
fs
in
add
and
in
ds
daa
xchg
test
mov
push
adc
pop
add
scas
sbb
add
xchg
std
imul
xorl
les
imul
pusha
aam
retw
pop
lret
xor
mov
aam
ss
pop
loop
mov
mov
fld
rolb
jb
out
in
out
pop
sub
push
push
sarb
mov
mov
sbb
into
lret
rcl
cmp
stos
mov
push
inc
int3
andl
test
xchg
out
xor
mov
test
fwait
sbb
cmp
jno
mov
dec
popa
cwtl
push
scas
pop
aas
clc
pop
out
push
cmp
loope
mov
push
inc
dec
jbe
jo
fldcw
mov
mov
test
add
dec
lret
stos
out
lret
mov
sub
add
jle
int
movsb
cmp
lock
fwait
out
adc
fwait
cmpsb
js
out
test
ljmp
jp
cld
sbb
stc
dec
or
sahf
ret
mov
rcll
pop
and
out
cmp
sub
mov
and
pop
out
adc
push
mov
idivb
sbb
dec
clc
cmp
and
add
cmp
test
pop
hlt
mov
pop
mov
jl
js
mov
loopne
test
lea
fcomps
sub
mov
cmp
aad
imul
adcb
int
das
jecxz
adcb
mov
fstl
and
dec
fcomps
xor
add
add
sub
iret
cmp
outsl
jecxz
push
insl
mov
stos
cmp
add
hlt
add
add
cmpl
adc
mov
sub
mov
aam
adcb
outsl
xchg
insl
jg
cltd
or
jmp
jbe
jb
in
and
and
insb
repz
or
or
pop
push
mov
adc
gs
pop
mov
pop
ficoms
loope
mov
xor
inc
jmp
addb
rcrb
movsb
sub
sub
jg
mov
xchg
or
loop
fs
movsb
sbb
and
aaa
or
xor
and
push
xor
lds
push
jno
dec
in
and
adc
mov
inc
mov
adc
popf
or
data16
cmp
jbe
aad
call
mov
mov
jae
jo
daa
push
cs
clc
dec
out
pop
outsl
das
rcll
arpl
shl
outsb
test
sbb
jg
add
add
push
aad
arpl
into
xor
adc
scas
and
jbe
xchg
mov
xor
mov
or
jecxz
and
outsb
nop
cld
dec
nop
out
icebp
scas
or
imul
xchg
inc
cmpsb
pop
cltd
or
sub
lretw
mov
stc
loopne
jecxz
mov
repz
stos
inc
mov
out
push
inc
add
and
mov
ret
push
and
fstps
int3
sub
push
mov
lret
or
xchg
mov
bt
adc
dec
into
push
in
fsubrs
xchg
fnstsw
in
mov
imul
inc
repz
mov
ret
cld
cmp
ss
movsl
repnz
setl
jmp
in
adcl
inc
add
sar
xchg
mov
sbb
sti
popa
test
les
bnd
scas
xlat
insb
cwtl
adc
jne
lret
stos
pop
jmp
popf
cmpsb
xor
sar
mov
in
lret
push
enter
arpl
dec
test
pop
jo
xchg
push
lret
add
mov
cmp
mov
sbb
loop
mov
loopne
dec
jne
adc
xor
cmp
pushf
pop
and
push
insb
pushf
aad
ret
mov
orb
dec
cmp
xor
and
xor
and
repnz
adc
test
or
cltd
jecxz
push
and
jae
and
pushf
push
call
jnp
das
jmp
test
sub
cmp
sti
fsubrs
mov
xchg
mov
and
mov
inc
push
call
jbe
pushf
inc
or
and
das
sub
cmpsl
xchg
dec
or
ret
dec
fadd
jne
pusha
int
in
repz
or
mov
rorb
fwait
jge
adcb
into
cmc
lock
jp
and
jle
js
pop
xchg
inc
mov
int3
popf
adc
lret
pop
pop
shlb
cmpsb
xor
sbb
xchg
adc
cli
pop
fidivrs
xchg
cmp
negl
mov
jne
and
hlt
insl
add
cmpsb
adc
lea
push
loop
scas
and
and
adc
ficompl
pmaxub
arpl
push
sub
cmp
jp
shl
pop
adc
lods
push
mov
sbb
xor
loope
mov
mov
daa
push
cli
test
outsl
in
mov
cmpsb
shll
daa
fisubs
dec
sarl
mov
sbb
jmp
ficompl
mov
or
lcall
xchg
or
outsl
je
push
or
adc
es
xor
mov
xchg
insl
cwtl
inc
mov
and
in
test
call
cltd
or
add
lcall
js
pop
dec
jle
jp
mov
outsb
mov
mov
mov
xchg
inc
lds
push
adc
fmuls
fwait
push
pop
lods
addr16
xchg
cmp
push
mov
mov
mov
sbb
scas
mov
cmp
je
popa
push
dec
cmp
lahf
sbb
push
es
pushf
inc
notb
fistpl
dec
push
repnz
test
fcmove
inc
andb
xchg
lcall
mov
inc
out
adc
xchg
mov
testl
loopne
xchg
rcrl
mov
mov
inc
outsl
std
cmp
mov
pushf
pusha
rclb
daa
mov
scas
lret
pushf
cld
xor
cmpsb
xchg
or
ss
push
orl
push
fmulp
imul
xor
scas
sti
mov
add
add
lea
imul
fcmovnb
ja
and
add
add
add
gs
loop
mov
fwait
arpl
arpl
inc
shr
imul
cmp
xor
and
in
mov
subb
sub
add
fbstp
adc
movsb
cli
pusha
fisttpll
or
lods
xlat
add
inc
mov
sub
imul
notl
fidivrl
and
pop
push
test
test
bound
rcr
sub
mov
mov
cmp
sub
les
jno
or
and
push
daa
int3
lock
push
sbb
dec
sahf
lret
pop
mov
mov
call
xor
xchg
push
jl
push
and
pop
fmuls
mov
mov
add
packsswb
call
aas
imul
dec
inc
mov
cld
lea
jb
and
fs
and
and
mov
aad
andl
xor
movsl
scas
cmp
xchg
aas
xchg
lahf
and
test
adcb
mov
xor
je
gs
mov
xchg
cmp
cmp
mov
mov
jb
pop
or
leave
shr
inc
fcompl
xor
insb
inc
filds
test
adc
pop
sahf
out
dec
and
std
xchg
cmp
inc
rcl
pop
mov
or
sbb
ss
xlat
scas
push
jns
sub
push
xor
dec
and
ljmp
push
nop
jo
add
xchg
ror
jge
call
shrl
push
popf
xchg
and
push
pop
stos
fadds
js
xchg
jne
or
adc
lahf
add
nop
jg
bound
mov
add
inc
aam
mov
and
stos
pop
sub
outsb
call
int3
jmp
jnp
add
insb
ficompl
aaa
iret
and
xor
int3
sarl
xchg
fsubp
pop
jl
jns
sub
test
imul
xchg
xor
adc
mov
mov
in
es
nop
dec
scas
inc
shl
fsubrl
js
hlt
test
imul
repnz
jae
mov
push
scas
aas
push
mov
xchg
nop
push
add
pop
and
mov
stos
loop
xor
add
dec
adc
aas
sub
lods
test
fdivrl
arpl
repnz
dec
push
lahf
icebp
adc
sti
ljmp
test
sub
aaa
add
sbb
or
arpl
loope
jecxz
aas
ret
fadds
sbb
inc
sti
iret
icebp
insl
sub
inc
sbb
out
fdivrs
xchg
pushf
adc
or
fnsave
lock
lret
mov
call
rcrl
jp
adc
test
adc
dec
ja
fs
cmp
mov
dec
sbb
pop
js
jbe
cmpsb
cmp
push
mov
js
push
sti
sub
sbb
xor
mov
pop
sbb
movsb
outsb
les
xor
inc
mov
pushf
imul
arpl
mov
scas
pop
and
push
mov
aaa
std
jmp
shrb
ja
push
clc
push
mov
push
bound
jmp
push
lahf
out
imul
cmp
ret
ret
ljmp
mov
arpl
fdivp
push
and
mov
push
imul
mov
jnp
add
stos
lret
out
adc
sbb
inc
pop
xor
adc
lock
lahf
push
les
lcall
jl
add
loopne
and
adc
add
nop
mov
push
mov
jge
pushw
mov
xchg
mov
mov
pushf
setbe
inc
out
iret
stc
jnp
into
push
std
imul
push
xor
cmp
sahf
mov
sbb
addb
lcall
cmp
cltd
mov
aam
sahf
push
mov
ss
int
repz
jne
rcll
mov
jns
fwait
test
jp
or
sub
loop
mov
sbb
daa
xor
es
test
xor
add
in
inc
inc
mov
push
mov
pop
test
push
mov
inc
push
call
mov
hlt
jno
lods
inc
nop
roll
and
sahf
and
xchg
xor
imul
sbb
xchg
js
or
out
inc
ret
inc
or
in
lret
daa
insb
xchg
sub
mov
roll
test
ja
or
sub
push
andb
addb
bswap
test
dec
or
negb
sub
add
add
int3
rcl
mov
scas
pusha
push
mov
push
call
mov
movsl
jmp
pop
lods
loopne
in
cld
sub
jmp
fstpl
mov
jmp
in
stos
sbbb
mov
push
andl
jl
shl
and
mov
add
inc
mov
adc
jo
leave
push
mov
cld
xor
pop
jnp
or
fldl
pushw
cmp
cmp
mov
pusha
outsl
adc
into
push
lods
test
dec
pop
xor
sub
cmp
cwtl
jb
mov
push
flds
and
inc
sti
stos
inc
ljmp
popf
mov
js
in
and
lea
iret
hlt
add
jo
aas
pusha
mov
push
xchg
out
sbb
shl
mov
adc
xlat
xchg
popa
pop
or
arpl
insb
test
adc
cmp
fmull
adc
hlt
pop
xchg
jnp
test
and
xor
mov
push
xchg
xchg
lcall
sbb
lcall
add
pop
mov
enter
loope
lret
pushf
pop
les
push
xchg
and
add
in
mov
test
std
outsl
inc
mov
push
push
popf
push
mov
stos
mov
push
sbb
aaa
add
or
cmp
pushf
ret
mov
shll
daa
pop
lods
inc
daa
mov
fisubs
notb
stos
push
push
mov
rcll
jno
cmp
hlt
mov
cmp
je
mov
in
cmp
and
jb
mov
mov
cmc
pop
cwtl
inc
add
ja
call
pop
pop
cmp
ljmp
mov
lcall
cmpsl
and
cmpb
movsl
add
inc
ds
adc
mov
dec
out
ja
movsb
adc
stos
adc
xor
sub
dec
jp
ret
cmp
inc
out
nop
jmp
jp
sbb
nop
and
sub
inc
sbb
dec
add
pop
cmp
push
inc
and
ret
jmp
icebp
xor
dec
fs
mov
sti
cmpsl
jl
das
rcrl
out
repnz
xchg
data16
fcomps
add
mov
sub
mov
mov
jbe
pop
pop
les
rcl
push
xor
push
jmp
push
fwait
pushf
bnd
out
out
jae
jnp
bnd
adc
mov
mov
data16
inc
add
jg
xor
cli
sbb
mov
cmc
xchg
nop
xchg
push
push
mov
adc
push
lret
jb
add
dec
pop
inc
ror
js
cwtl
push
jg
pop
xlat
jne
rolb
xchg
ficoms
inc
stos
jae
int3
cltd
incb
cld
fcoms
mov
loopne
inc
fld
add
scas
fiaddl
push
sti
lods
jge
shlb
je
addr16
jge
les
xchg
outsl
mov
dec
pop
cmc
jle
ffreep
cmpsb
sbb
xor
ss
fisubs
loop
stos
push
int3
clc
jno
jge
fnstcw
aam
int
push
ljmp
or
bound
inc
into
mov
insl
push
imul
lods
bound
cmp
negb
add
pop
and
jnp
push
add
fiadds
mov
dec
jae
out
fisttpll
inc
mov
mov
sti
movsb
cltd
cmc
psubb
in
pop
push
sub
ja
das
orl
add
shll
mov
mov
adc
inc
stos
hlt
sahf
and
mov
push
pop
movsl
ja
xchg
dec
mov
adc
xor
adc
pop
sub
xchg
scas
outsl
stos
dec
push
xchg
jecxz
mov
and
adc
subl
sbb
inc
add
xchg
cmp
xchg
lods
push
push
lock
mov
sbb
and
mov
cmpsl
js
inc
es
mov
gs
sub
jb
popf
push
xchg
out
stos
int3
xor
loopne
rolb
gs
cmpb
lods
clc
xor
sbb
mov
insl
cmp
adc
jmp
jne
mov
fnstenv
jb
or
mov
ret
add
fwait
push
pusha
outsl
out
jg
cmc
or
ret
iret
and
add
hlt
add
add
mov
shll
push
xchg
lret
push
fwait
jecxz
ds
in
cmpsl
xchg
push
scas
ss
arpl
adc
ja
cmp
fsubrs
xchg
gs
jb
pop
pop
mov
insb
jl
adc
sarb
popa
ljmp
repz
xchg
xor
les
sbb
mov
pop
fcmovu
aas
xor
lods
mov
sub
inc
shll
pop
fucom
jg
popf
push
aaa
lock
cmp
sbb
xchg
movl
ret
or
add
cmc
fistpll
xor
ret
insb
or
out
lahf
mov
in
push
jge
inc
pop
rcr
mov
cmpl
fbstp
ret
ljmp
cmpsb
pop
mov
jl
lret
push
clc
addr16
lcall
cmc
std
enter
jecxz
mov
xor
lods
pop
add
das
jmp
add
lret
lret
mov
or
outsb
mov
out
sub
mov
pop
pop
pop
sub
insl
test
aam
fdivs
testb
mov
cmpsl
imul
mov
or
addr16
inc
jle
aas
rorl
add
daa
xchg
or
outsb
bound
mov
or
mov
mov
mulb
mov
jmp
enter
repz
pop
adc
adc
sub
xchg
pop
mov
sub
add
mov
inc
jne
adc
mov
loopne
pop
cmp
xchg
mov
adc
int
xchg
ret
adc
in
shrb
xlat
and
clc
je
pushf
adc
sahf
lahf
jbe
js
mov
movsb
popf
repz
iret
push
test
jne
loopne
and
sub
and
aas
sbb
psubb
in
xchg
jl
into
mov
lahf
dec
adc
cmpsb
push
jp
xor
dec
dec
adc
js
sub
cltd
jge
jmp
jle
rolb
mov
daa
or
inc
or
cmpsb
mov
sbb
mov
call
sahf
xchg
stos
sub
pop
push
popf
cltd
jns,pn
cli
je
push
repz
movb
lret
xchg
gs
pop
je
cld
ja
jne
lcall
jmp
mov
dec
lahf
shlb
scas
push
xor
dec
ret
je
movsb
mov
mov
cltd
mov
incb
cwtl
ss
mov
cmpsb
movsl
aas
jo
pop
mov
xchg
out
loop
sbb
adc
fisubl
jl
jns
xchg
sbb
sub
test
popf
ret
mov
and
and
stc
clc
notl
sub
jg
or
js
cld
pop
jnp
pop
mov
test
sub
bnd
xor
add
insb
add
hlt
mov
out
dec
dec
daa
mov
mov
cmp
mov
inc
rcl
jno
fistps
or
inc
xchg
leave
aas
imul
cmp
movsl
xchg
inc
das
out
mov
lods
std
aad
sub
gs
sahf
adc
shlb
lds
stos
add
test
es
jns
or
xor
and
notb
loope
cli
xorb
xor
mov
cmp
lea
lahf
mov
call
test
pop
cwtl
imul
test
and
data16
fwait
inc
loop
mov
popa
dec
mov
hlt
mov
push
pop
jae
daa
loop
inc
imull
xchg
lret
jo
push
inc
int
dec
insb
clc
test
mov
and
std
or
in
and
lret
cwtl
nop
jnp
adcb
cli
call
dec
mov
imul
or
hlt
xchg
lds
inc
jge
movsb
pusha
xchg
das
mov
dec
pop
loope
push
lret
jns
push
cmp
iret
iret
pop
sti
cmp
sbb
ret
pop
xor
aad
jnp
mov
insl
adc
sub
mov
in
test
mov
cld
xchg
lret
pop
arpl
mov
pusha
addl
push
lcall
dec
pop
push
adc
push
lcall
push
loop
and
cmp
inc
jbe
cltd
inc
sbb
xlat
jmp
js
dec
pop
in
xor
std
jl
stc
pop
out
stos
or
jmp
add
add
outsb
out
lds
sti
clc
notb
add
add
fsubrs
and
clc
cmpsb
rolb
or
call
push
jb
lea
add
add
push
dec
inc
rcrl
lcall
mov
add
pop
fwait
pop
repnz
stos
sub
out
iret
stos
cmp
inc
cmpsb
sahf
fists
bound
in
sub
dec
add
sahf
out
xchg
iret
mov
insb
mov
push
or
mov
adc
jle
notb
pusha
sub
mov
arpl
cs
aad
dec
push
push
outsl
cmp
leave
mov
xchg
movsl
mov
js
xchg
pop
insl
repnz
jle
mov
leave
mov
dec
sbb
ds
cmp
xchg
bound
rolb
rcl
or
test
int
dec
fwait
fs
sbb
adc
sub
mov
and
mov
mov
mov
mov
imul
outsb
fmul
mov
pop
stos
pop
and
add
and
and
mov
fwait
popaw
aaa
lcall
mov
xchg
call
test
adc
sbb
fdivrs
and
jecxz
movsb
cmpsb
jmp
iret
push
jl
push
cmp
pop
cmpb
add
inc
add
xchg
pop
pop
cmpsl
mov
cmp
mov
ss
mov
mov
cld
aad
fs
push
pop
rclb
add
sub
cmc
mov
pop
inc
mov
je
pushf
repz
mov
ljmp
pop
leave
inc
mov
xor
insb
pop
addr16
test
enter
push
inc
js
call
int
xchg
jg
in
adc
in
pop
fstl
fmull
inc
inc
and
test
mov
mov
pop
dec
mov
adc
hlt
iret
mov
pop
sbb
je
lods
insl
xor
fstpl
loope
inc
and
sahf
push
xor
xor
cmp
orb
in
mov
mov
sub
vpaddsw
xchg
pop
loop
sbb
rclb
xchg
lods
test
xchg
dec
or
pop
fwait
daa
jp
mov
jge
ret
aam
iret
cmpsb
les
outsl
fildll
stc
in
push
mov
mov
repz
in
inc
jl
fidivl
sub
cltd
jae
mov
cmp
cmc
in
lcall
push
xor
fcmovnu
and
push
cs
mov
xor
shl
repnz
mov
or
cmp
cmp
push
push
xchg
mov
or
out
mov
sub
pushf
inc
mov
push
fistl
fcmovne
push
test
push
sub
mov
and
mov
rolb
add
inc
popa
dec
cli
out
int
sub
and
push
loopne
adc
js
insb
sub
cmp
and
loop
hlt
xchg
dec
fistpl
add
insl
add
outsl
stc
lret
insb
or
iret
or
xor
insl
dec
jns
adc
shlb
stos
jecxz
or
insb
push
and
xchg
insl
ret
in
mov
xor
xchg
push
mov
pop
mov
dec
jae
xchg
pop
lods
stos
data16
jecxz
lods
dec
std
rolb
sub
loope
dec
out
pop
cmp
pop
jbe
xchg
aaa
xor
mov
popf
jno
mov
and
mov
cmp
xbegin
insb
cld
or
or
jle
pop
jno
xor
fwait
insl
dec
jne
push
ret
mov
mov
sub
fidivl
pop
popf
push
fnstcw
jne
inc
shll
push
lret
jecxz
mov
mov
leave
xchg
pop
cwtl
not
and
and
shll
dec
cli
aas
sub
adcb
mov
fmull
mov
pop
adc
fcompl
push
mov
lahf
rcll
sub
lahf
es
ja
into
cmp
lock
and
sbb
mov
cmpsb
cld
sub
dec
and
hlt
inc
cmp
or
dec
into
shll
bound
aas
clc
stos
mov
mov
rorl
sbb
inc
inc
loope
push
mov
or
jle
ds
sbb
out
xor
add
pop
out
movsl
fnsave
je
je
mul
xchg
aaa
pop
adc
rorl
pop
push
sub
cwtl
push
mov
out
insl
mov
pop
rolb
dec
fildll
sub
push
loop
test
sbb
mov
add
add
lret
lods
xlat
sti
mov
jae
or
add
hlt
add
add
pop
add
call
jmp
out
sti
and
cli
sbb
mov
and
sbb
jge
sarb
enter
pop
call
mov
fstpt
add
mov
hlt
cmc
xchg
push
roll
fs
insl
mov
xchg
jmp
ror
jo
dec
movsl
mov
push
adc
mov
mov
cmc
insl
pop
sarl
jle
ja
xor
jo
mov
outsl
pop
jmp
lahf
jnp
inc
std
pop
cmc
push
iret
ret
pop
sub
ds
pop
pop
add
fisubrs
sahf
arpl
xor
mov
stos
or
pusha
xchg
movsb
aaa
adc
insl
mov
fsubl
fldenv
pop
test
ja
nop
fsts
in
pushf
mov
repz
aam
mov
fwait
pop
scas
stc
pop
jp
stos
push
inc
inc
pop
into
mov
jae
dec
icebp
lods
mov
arpl
push
sti
pop
dec
xor
std
cmp
mov
psadbw
loopne
mov
aam
add
cltd
xchg
and
jns
cmp
enter
icebp
inc
subl
lret
in
lods
insb
out
lret
push
sbb
mov
adc
dec
cmc
sub
outsb
or
sub
pop
stos
mov
ret
aad
inc
cmp
sub
pusha
das
pop
shlb
pusha
mov
ret
push
gs
dec
sub
sub
xchg
cmp
les
pop
jae
cmc
push
out
jns
repz
es
ljmp
inc
pop
jg
or
hlt
cmpsb
xchg
ret
inc
fdivrl
and
icebp
data16
lret
mov
js
notb
and
cmpb
adc
rcl
ret
lret
push
dec
cmp
dec
mov
adc
fidivrl
pop
fwait
add
jnp
in
js
add
sub
xchg
stos
adc
stos
sbb
scas
xchg
std
lahf
add
cwtl
add
imul
mov
sbb
aas
repz
das
or
inc
into
jl
adc
jge
xlat
push
mov
inc
adc
dec
xlat
out
clc
insb
mov
ret
out
push
push
dec
punpckldq
jb
in
adc
sbb
cltd
lret
fmuls
arpl
je
sub
ss
cmp
int3
mov
sub
mov
mulb
fdivl
xchg
inc
sbb
jg
xchg
roll
dec
shrl
jecxz
ljmp
mov
mov
bound
pop
pop
mov
popa
test
popa
mov
cld
frstor
shll
add
imul
sub
andb
imul
cmp
in
xchg
aaa
scas
mov
cmpl
inc
mov
int3
fsubrs
test
jnp
cmp
mov
sbb
ja
lret
push
dec
es
pop
dec
test
stos
adc
cmpsb
xor
jle
xchg
xor
cs
testb
std
dec
cmp
cs
mov
and
jbe
xchg
mov
insb
jo
adc
and
test
idivb
lods
mov
hlt
jge
cmp
add
push
ds
xchg
or
add
adc
inc
add
aad
inc
ffree
pop
cwtl
fwait
sahf
sub
mov
jmp
xor
into
xchg
loop
add
repz
cs
adcb
insb
in
jle
aam
loop
mov
rol
dec
and
mov
idivb
ss
ja
pop
and
popf
pop
lahf
leave
ret
test
xlat
loop
pop
sarl
icebp
mov
and
mov
insl
mov
rclb
or
leave
xchg
jne
mov
xor
in
mov
out
lods
push
adc
mov
mov
pop
ljmp
inc
insl
push
inc
lds
stc
int
ljmp
or
scas
push
sbb
sbb
outsl
test
inc
adc
scas
xchg
jg
movsb
ja
lcall
dec
cwtl
cmpsb
gs
inc
mov
dec
pop
sbb
ja
iret
and
sbb
pop
pusha
es
push
lea
push
inc
add
pushl
jle
cld
aaa
mov
leave
jecxz
sahf
das
cmc
shll
adc
das
out
cmp
fildll
testl
push
cmp
sub
scas
int3
push
xchg
repz
sbb
das
sub
out
lret
or
add
add
jno
loop
bnd
fcomi
mov
and
fiaddl
add
add
add
leave
imul
jge
jmp
dec
cmp
ja
push
pop
mov
popa
push
fcmovnb
inc
fcompl
aas
out
je
xor
out
xchg
sahf
pop
gs
jp
in
bound
jle
leave
js
mov
add
mov
push
dec
xorl
or
inc
in
inc
sahf
into
mov
sar
mov
stos
mov
int3
xor
imul
jnp
or
push
inc
dec
out
mov
sub
sub
push
loop
lea
insl
out
lcall
movsl
pop
push
daa
orb
mov
lahf
push
mov
repnz
pop
testb
lea
adc
dec
sbb
repnz
lock
add
mov
ds
dec
pop
shr
jmp
daa
lcall
xor
loopew
and
adc
dec
ljmp
and
xor
and
jae
dec
inc
jge
push
lahf
lret
int
fst
mov
cs
and
mov
test
lcall
pop
xchg
mov
mov
jne
push
fistps
scas
ret
je
xor
xorl
adc
mov
mov
stc
or
orb
push
push
mov
stos
dec
pop
mov
out
push
mov
pop
addr16
xor
fwait
scas
sub
pop
cmp
xor
sub
inc
lods
mov
mov
push
add
movsb
xchg
pushf
pushf
xchg
inc
jecxz
test
mull
jnp
add
sub
jbe
jle
imul
insl
loope
and
cli
test
hlt
cmc
es
inc
mov
mov
leave
movlps
jne
andb
shrl
add
or
adcl
in
add
popf
jp
int3
jmp
fsts
inc
ja
add
jl
fadds
enter
push
scas
jo
mov
jne
inc
sub
pop
out
sbb
lods
cmp
cmpsb
sub
pop
cld
mov
add
mov
mov
inc
mov
daa
jns
push
testl
fisubl
popf
sbb
pop
jo
jbe
outsb
lret
ds
lock
mov
outsb
push
inc
sbb
stc
cmpsw
fistps
ss
call
jno
lock
stc
sbb
and
data16
push
rolb
in
mov
repnz
or
mov
cmp
jne
inc
and
inc
neg
or
mov
sarl
cmp
pop
mov
mov
cmpl
ficoms
sub
je
out
mov
adc
jb
lcall
lcall
push
xchg
push
loop
imul
hlt
mov
mov
jnp
int
pushf
push
cmpsb
aaa
ss
imul
rcl
orb
cmpsb
or
fisttpll
loope
mov
repz
lods
in
shlb
mov
sbb
les
add
push
xchg
pop
pop
push
mulb
aam
cmpl
ljmp
mov
jns
fists
mov
stc
leave
add
sub
mov
add
rcl
popf
pop
pop
pop
jge
pop
sbb
lret
sbb
inc
aaa
sbbb
cmpsb
push
sub
xchg
shr
lret
data16
sbb
adc
mov
add
pop
mov
lret
lock
xor
mov
lods
sub
pop
insl
or
out
mov
cwtl
test
rclb
lods
sub
xchg
mov
xor
inc
les
add
out
xor
jge
leave
mov
xchg
cmovnp
jg
adc
mov
cmc
mov
mov
sarb
and
and
adc
pop
rclb
or
push
ret
xor
and
sub
out
test
sub
push
mov
mov
insl
fwait
xchg
cmpsl
popf
out
fldenv
cmc
mov
outsl
stos
ja
cmp
pop
sub
jnp
sub
pop
mov
xchg
and
jmp
adc
lea
iret
movsb
xchg
xchg
add
inc
and
ss
push
lods
pop
cmpsl
push
adc
push
sub
lret
inc
cmp
shll
shl
imul
pop
and
inc
push
cmp
mov
push
adc
or
mov
sub
add
add
ss
in
inc
jmp
filds
add
add
add
ss
dec
out
cmp
decb
inc
iret
pop
mov
or
xchg
test
xchg
cmc
sub
imul
dec
jecxz
mov
xchg
fwait
mov
dec
and
nop
push
xchg
fcoms
or
pop
icebp
push
jb
cmp
xor
ljmp
sub
pop
lret
js
xchg
lea
out
je
daa
incl
ss
insb
mov
add
lea
fdivrs
stos
iret
lock
cltd
adc
lock
and
out
imul
and
scas
fdivr
out
cld
inc
nop
cmp
mov
in
xorb
dec
xchg
fs
inc
add
mov
jge
cld
movl
jb
das
xor
mov
insl
int
mov
stc
addl
xor
loope
and
imul
push
aad
push
jecxz
cmp
adc
cli
ret
inc
adc
addr16
mov
repnz
popf
xlat
cli
jle
or
dec
jne
jmp
dec
mov
push
mov
movsb
inc
jecxz
or
cmc
cmp
pusha
inc
popa
jle
popf
mov
cmp
repnz
jb
out
xchg
ficoms
jecxz
sarb
and
fcomps
aas
xchg
insb
or
imul
inc
movsl
add
loopne
and
fiaddl
xlat
xor
inc
jo
and
aad
imul
ja
xor
call
jmp
icebp
cwtl
pop
mov
adc
dec
jb
cmpsl
loop
pop
ds
and
mov
cmpsl
or
pop
notl
xor
add
fistl
pop
in
jnp
mov
add
add
pop
les
mov
test
mov
and
insl
dec
mov
add
mov
in
and
lret
push
adc
int
jb
test
sub
lock
pop
cmp
mov
pop
adc
cmpsb
inc
sbb
jmp
popf
sub
dec
out
xchg
dec
aam
xchg
rol
in
loopne
mov
fdivrs
shl
pop
out
loop
push
push
mov
mov
inc
icebp
pop
cs
int3
dec
pop
popf
mov
mov
in
or
jg
mov
push
decl
add
and
sar
fucomi
lret
jno
sti
call
xchg
lods
inc
dec
testb
and
cmp
cld
adc
xor
insl
inc
mov
sbb
mov
or
cmp
xchg
cli
push
ss
cmpsl
push
push
sub
adc
ret
sub
sub
aam
lahf
movl
iret
jb
mov
pop
push
mov
cmp
pop
shrb
pop
mov
mov
add
pop
mov
in
dec
cmp
jne
and
clc
jp
mov
mov
jne
mov
mov
mov
stos
push
mov
inc
push
sub
je
sahf
pop
adc
jae,pt
cmpl
stos
push
cmp
mov
inc
mov
fiadds
fmuls
jle
mov
shlb
push
push
pop
ror
push
or
arpl
scas
push
dec
scas
popf
lods
add
aas
insl
addb
dec
frstor
aad
call
push
in
loop
xchg
dec
mov
clc
mov
mov
insb
call
xchg
push
hlt
and
xchg
cs
movsl
popa
stc
inc
pop
add
fdivrl
test
pop
pop
fists
push
xchg
dec
clc
push
lahf
add
mov
in
ljmp
lret
test
mov
ret
sar
insl
imul
movsb
cmp
add
ja
pop
imul
add
jmp
jns
xchg
test
lods
inc
cmc
sub
pop
add
es
xchg
mov
jbe
mov
sbb
and
js
mov
jecxz
or
sub
hlt
mov
pop
movsb
push
or
cmp
pop
jno
test
mov
js
bound
js
mov
aas
mov
mov
inc
leave
mov
testb
xlat
mov
mov
adc
lods
and
sahf
fwait
adc
fdivrl
pop
out
or
insl
aam
sub
jo
movsl
or
dec
imul
lret
iret
adc
adc
add
roll
jle
pop
in
add
hlt
add
add
rcrl
push
cmp
dec
inc
data16
cmp
das
inc
loopne
jecxz
movsb
aam
icebp
push
dec
out
lret
aas
call
adc
or
lcall
fmull
leave
pusha
insl
shl
and
sti
xor
dec
out
sub
rorb
inc
dec
dec
fucomi
int
xchg
icebp
jle
hlt
shl
mov
and
dec
outsb
and
mov
cmpsb
push
fwait
imul
in
mov
mov
lods
dec
scas
int
mov
bound
add
cmp
ficoml
or
test
mov
rcrl
cmp
jg
cld
sti
mov
jb
push
mov
movsb
lock
loope
jl
sub
xchg
gs
insb
lods
mov
rorl
into
cld
xor
in
adc
sub
pushf
xchg
ffree
pop
test
jnp
mov
mov
adc
faddl
mov
addr16
push
push
leave
xchg
mov
jecxz
push
lahf
adc
dec
inc
je
fiaddl
sbb
jo
ja
pavgb
adc
adc
push
dec
ret
jns
add
jns
mov
scas
push
xchg
fdivs
dec
cmp
sbb
mov
xchg
imul
add
popaw
fdivl
push
daa
cmpsl
pop
cmp
dec
pop
add
push
jp
call
std
push
xchg
test
sbb
cmp
clc
xchg
shl
fildll
dec
sahf
jns
loope
push
fcom
jno
scas
hlt
inc
mov
test
push
ss
mov
stos
pop
sbb
lahf
xor
imull
ja
addl
jns
movsl
addr16
and
ficoms
cmpsb
and
cwtl
cmpsb
adc
adc
repz
adc
js
test
js
xor
xchg
hlt
addr16
loope
and
sbb
out
jmp
stc
rorb
data16
dec
jae
xchg
dec
pop
inc
ljmp
jno
addr16
jb
pop
mov
enter
js
inc
in
fwait
xchg
lds
xor
add
cld
outsb
jne
xchg
push
xchg
sbb
cli
xor
aaa
out
cltd
jmp
mov
aam
std
addr16
mov
xor
out
outsb
pop
loopne
xor
pop
lods
pop
push
sub
jle
mov
mov
inc
add
fldlg2
sub
jle
or
test
adc
cmp
jne
mov
ds
cmp
push
cmp
lods
mov
inc
or
cmpl
cmpsb
sub
rcll
sahf
mov
lcall
lret
sub
xchg
xchg
rcrb
adc
and
stos
mov
shlb
lock
into
clc
lds
xor
ljmp
rorb
adc
outsl
inc
sub
sub
and
pop
loopne
lock
out
cmp
adc
mov
inc
jmp
mov
insl
fwait
insb
outsb
xchg
call
xorb
leave
jp
mov
dec
data16
xor
inc
int
ja
cmpsb
incl
daa
inc
inc
call
inc
cld
add
mov
popa
pop
and
xor
jl
inc
add
push
das
jbe
faddl
mov
rorl
leave
insl
fldl
out
aad
incl
test
inc
int
mov
ds
sti
aad
mov
lret
daa
out
dec
pop
scas
repz
inc
inc
js
cmp
loopne
jmp
mov
pop
mov
xchg
inc
lahf
add
xor
inc
out
icebp
cld
lret
mov
xor
xor
dec
test
jmp
sub
jno
push
xchg
mul
shlb
dec
mov
dec
mov
fbld
pop
xchg
mov
cmp
shl
notb
or
push
arpl
sti
ljmp
pop
mov
in
sbb
and
cmpb
fdivl
sbb
mov
push
sarb
adcb
cmp
cmpl
xlat
pop
ja
xchg
dec
fdivrl
xor
pop
cld
iret
ja
xor
or
xchg
inc
pop
pop
out
ret
adc
leave
jmp
cmp
push
das
lret
in
inc
shl
lret
add
stos
push
inc
sub
mov
xlat
sarl
inc
out
inc
adc
cmc
insl
aad
incl
lods
shll
aad
mov
pusha
fs
cmp
add
add
xchg
std
repz
inc
fdivrl
fldl2t
add
hlt
add
add
lods
stos
jb
hlt
dec
pusha
movsl
out
dec
shll
mov
test
or
fistpl
sbbb
cmp
mov
icebp
push
movsb
fnstsw
in
rcll
sbb
test
dec
ret
mov
push
shrb
ss
out
aaa
jg
adc
jbe
in
adc
popf
cmp
xlat
or
enter
out
ret
jno
movsb
out
in
and
hlt
xchg
jnp
cli
pop
orl
test
insb
sbb
es
out
popa
mov
test
rclb
mov
inc
push
or
sub
xor
test
out
clc
insb
sbb
inc
cmp
mov
shr
out
push
iret
push
push
fadd
shl
cltd
hlt
jbe
add
adc
add
pop
aad
test
or
sub
std
aam
in
adc
add
mov
test
jg
xor
ss
jb
pop
cmpsl
outsl
fimuls
fistl
test
or
push
xorl
lea
xchg
dec
push
push
sbb
dec
cmpsl
lcall
clc
movsl
hlt
in
in
ret
hlt
test
mov
ret
mov
lahf
iret
daa
add
or
test
xchg
sbb
test
mov
lahf
enter
fsubrl
gs
loopne
in
and
add
lret
je
mov
mov
sbb
jmp
sahf
lcall
mov
test
enter
jne
xchg
adc
mov
mov
dec
or
mov
dec
push
and
mov
jle
sti
stos
das
add
push
loop
ret
push
les
pushf
mov
add
jo
cmp
xchg
lahf
aad
cmp
ret
cmp
hlt
cmp
mov
mov
outsl
mov
out
sub
mov
mov
into
gs
jle
xchg
jmp
lds
cmc
push
enter
sar
je
adc
out
adc
insb
incl
or
movl
lock
mov
jl
es
inc
and
jne
popf
inc
push
xchg
mov
sbb
mov
sbb
shrl
jl
or
sbb
mov
stos
sbb
xchg
es
mov
mov
out
adc
mov
dec
insl
sub
dec
add
pushf
hlt
mov
and
jl
loopne
es
clc
dec
icebp
mov
movsl
jle
push
stos
inc
mov
mov
xor
or
mov
rcr
push
inc
pop
out
xlat
sbb
pushf
or
sbb
and
cmp
lds
enter
or
mov
mov
xchg
inc
int
imul
mov
adc
sbbl
mov
pushl
xor
xor
loop
fdivr
jp
lret
aaa
jne
addr16
sbb
mov
xchg
push
pop
lahf
int3
pusha
shll
in
movsb
femms
fisubrs
jp
xor
sahf
jns
iret
pop
xchg
sarb
out
dec
test
and
lcall
push
les
loop
inc
and
fnsave
sbb
aaa
cltd
outsb
cmp
fiaddl
sub
pop
or
xchg
icebp
mov
loopne
je
add
ds
push
jo
movsl
lods
adc
mov
jae
shrb
sub
xchg
fists
mov
in
std
sub
ljmp
leave
sub
xchg
testl
jp
ficoml
xor
cmp
ja
push
cld
pop
jnp
adcb
out
pop
jno
pop
cmp
dec
lret
test
cmp
or
mov
jg
imul
sahf
out
out
push
fisubrs
mov
adc
leave
js
in
push
divb
push
negl
dec
pop
out
pusha
adc
inc
mov
inc
jns
inc
shrl
and
pop
js
pop
mov
sbb
mov
cli
add
sbb
jo
or
ja
dec
mov
cmp
mov
jns
inc
push
data16
jp
imul
mov
daa
mov
pop
lcall
and
gs
sbb
outsb
roll
push
jle
mov
mov
add
fildl
dec
lret
test
adc
dec
xchg
out
dec
sbb
jb
mov
out
and
pop
pop
jbe
sub
cmc
addb
add
or
mov
std
mov
add
out
add
hlt
add
add
sarl
xchg
mov
rolb
push
mov
and
mov
xchg
lds
scas
fisubs
xor
enter
jnp
aaa
mov
pop
rolb
movsb
cli
psraw
dec
add
adc
push
fisttpll
mov
pop
mov
push
cmp
ds
icebp
mov
xorb
sbb
insl
mov
jb
nop
push
mov
and
xchg
nop
xor
popf
in
out
pop
aam
cmp
xor
std
pop
arpl
imul
das
jl
push
push
cmpsl
bound
xchg
adc
dec
xor
cmp
cmp
js
inc
cld
mov
xchg
fdivrs
xchg
xchg
clc
js
cmpsb
cmp
mov
ja
adc
push
xchg
jo
int3
xor
sub
fisubl
sub
sahf
add
xor
mov
push
aam
sub
andb
adc
movsb
add
mov
push
jg
mov
pop
aas
xchg
cwtl
mov
cmc
fcoml
cmp
mov
inc
nop
jle
into
add
movsl
orb
or
insb
or
pop
mov
mov
lret
sti
test
sub
push
aam
test
lcall
bound
cs
mov
pop
push
adc
int3
pop
mov
in
test
lahf
inc
pop
sbb
xor
js
push
jmp
inc
jne
lea
add
xchg
jnp
mov
ret
mov
cld
push
pop
stc
xor
mov
pop
cs
mov
les
xchg
mov
xchg
rcrl
cs
bound
xor
jecxz
filds
les
sbb
outsl
add
cmpsb
shrb
dec
push
lret
lea
cli
shrl
popf
lahf
icebp
lcall
leave
sbb
call
sub
adc
in
or
daa
or
sbb
or
ret
and
jo
sbb
pop
loope
ljmp
clc
leave
sub
das
or
aaa
test
pusha
imul
andb
fsubr
cmp
test
test
sub
fcmovbe
mov
xchg
push
add
jae
cmp
test
and
jb
mov
lods
mov
jbe
and
shrb
sbb
sub
repnz
or
aad
test
add
adc
mov
adc
mov
fdivl
stos
repz
mov
in
call
adc
bswap
sti
add
jns
jl
fnstcw
rorl
lds
icebp
mov
mov
call
adc
mov
fnstenv
xchg
jno
test
jg
jecxz
jns
add
movsl
mov
cmpsl
testl
mov
jno
or
shrl
pop
push
test
mov
or
mov
negb
mov
mov
push
xchg
mov
sub
mov
movb
sub
inc
mov
jo
sbb
xorl
xchg
xchg
fldlg2
xchg
cmp
test
aaa
and
lea
and
xchg
mov
dec
add
inc
xor
out
roll
mov
and
jno
mov
jns
or
rcll
in
push
lret
xor
icebp
out
test
pop
adc
jae
ja
xchg
test
cld
test
jne
mov
jmp
sbb
push
cltd
into
sbb
push
push
dec
std
test
dec
fstpl
daa
push
fcoml
cmpsl
aam
jo
pop
fs
or
cmpl
enter
xchg
cmpsw
stos
repnz
sub
dec
mov
out
push
jb
mov
xor
adc
jg
pusha
xchg
jle
mov
adc
sbb
jno
repnz
sbbb
movsl
mov
jmp
adc
nop
cli
xlat
das
pop
pop
mov
insl
adc
pop
push
arpl
jnp
and
lea
je
push
mov
jns
dec
and
xor
lret
push
push
xor
lcall
outsl
loope
inc
repnz
ss
sbb
and
mov
xor
out
push
push
and
add
add
ja
push
dec
shr
jg
push
mov
sbb
hlt
add
add
pop
pop
out
xchg
imul
lret
adc
pop
mov
cmp
adc
out
test
outsb
inc
sbb
inc
and
sbb
mov
mov
ret
pushw
lds
adc
fs
filds
and
fnstenv
fiaddl
push
jge
loopne
dec
mov
push
mov
ja
xchg
gs
in
fldcw
fwait
mov
xchg
mov
push
push
xlat
nop
lret
jle
xor
adc
in
lds
hlt
push
mov
sbb
cmc
adc
pop
cmp
lret
xchg
rep
inc
jb
test
js
mov
sub
dec
push
adc
outsl
pop
mov
pop
push
or
mov
jg
mov
pop
cmp
fwait
popf
mov
add
call
cmp
icebp
jmp
add
jge
mov
lcall
fdivp
sbb
in
dec
sti
rcll
lods
mov
lds
stos
pop
sub
mov
and
pop
sbb
lret
arpl
test
inc
ret
repz
sbb
addl
dec
inc
jge
push
mov
loopne
push
ds
xor
jns
popf
xchg
adc
rorl
idivb
fnstsw
lcall
mov
call
inc
lcall
inc
rorl
dec
xor
lds
scas
pop
dec
rorb
ficompl
cmp
ja
das
pop
mov
mov
subl
rorb
in
pop
rolb
imul
or
pusha
sbb
lods
mov
imul
adc
in
inc
mov
popf
call
xchg
push
cmp
sbb
adc
push
leave
lret
bound
sub
jnp,pn
stc
lret
shrb
inc
scas
aaa
hlt
push
push
or
inc
push
loopne
mov
mov
lcall
cmp
and
lods
mov
data16
push
test
and
inc
mov
pop
adc
cmpsb
popf
ret
arpl
imul
push
add
add
and
sub
add
sbb
mov
adc
mov
mov
lcall
jecxz
fistl
jbe
cmpsb
std
ljmp
adc
push
and
mov
or
dec
mov
sahf
mov
ret
int
das
cmp
mov
data16
add
mov
aad
add
out
or
or
daa
mov
test
dec
out
and
testl
sub
fldenv
pop
insb
in
icebp
ficoms
dec
xchg
jle
jmp
push
lods
mov
sbb
ret
loop
xorl
xchg
and
pushf
mov
loopne
push
and
mov
xor
dec
mov
addb
xor
xor
call
cwtl
fiaddl
xchg
shlb
ss
mov
out
sub
cmp
cmpsb
inc
ljmp
stos
inc
into
fadd
out
js
scas
fwait
insb
pop
cmp
lcall
sbb
adc
fwait
mov
and
adc
push
jg
sbb
sub
push
loop
int
gs
pushf
scas
leave
dec
xor
mov
mov
movsl
sbb
mov
add
sub
sbb
sbb
testb
negb
scas
lcall
pop
pop
in
jns
push
dec
cmpsl
lods
mov
mov
xchg
test
inc
xor
xor
mov
lods
adc
xchg
add
pop
neg
dec
xor
push
mov
cmp
dec
ljmp
js
push
das
mov
xchg
loop
xor
jle
inc
loopne
jle
or
mov
mov
repnz
push
les
lahf
bnd
or
push
and
sbb
lods
jae
ffreep
mov
pop
jmp
xchg
jmp
dec
shll
icebp
sbb
push
ss
inc
sbb
mov
outsb
out
cld
cmpl
lods
leave
mov
scas
movsb
mov
test
jmp
inc
push
sbb
push
jecxz
orb
shr
mov
sbb
insl
dec
jnp
cltd
jne
icebp
inc
leave
cltd
arpl
int
or
inc
sti
jns
shlb
add
sub
mov
jne
daa
fsubl
pusha
addr16
lahf
pop
or
dec
mov
scas
adc
add
movsl
push
movsl
shl
divl
jo
icebp
mov
add
faddl
add
mov
cmp
mov
inc
dec
jns
lea
or
scas
sbb
ljmp
negb
fdiv
mov
mov
add
scas
push
adc
repnz
fildll
fimull
cli
dec
bound
loope
dec
aas
or
je
nop
pop
cmp
mov
jne
cmp
hlt
out
lods
mov
mov
out
pop
mov
xor
test
ja
xchg
loope
push
push
xor
test
add
sbb
xchg
push
adc
fidivs
mov
loope
out
push
mov
jp
out
sar
push
inc
mov
cmp
fsubrl
lods
or
adc
fs
mov
aad
hlt
gs
add
and
add
pop
adc
stos
into
xchg
cmp
jp
lahf
loop
fstl
outsl
movsb
inc
mul
xor
mov
or
leave
sbbl
test
mov
or
adc
pop
cmp
frstor
insl
into
jno
push
int3
pushf
cmp
adc
cmp
std
sbb
lcall
adc
pushf
jle
xor
pop
test
xor
stos
mov
dec
xor
inc
test
jle
pushf
sbb
push
insl
les
cmp
mov
repz
pusha
out
xchg
sub
mulb
inc
push
adc
jge
sub
shll
les
xchg
mov
push
ss
push
or
lods
inc
mov
mov
shll
scas
pop
mov
sub
jnp
sbb
xlat
or
mov
lcall
jno
sti
xchg
xchg
out
bound
fidivs
dec
jecxz
xchg
mov
arpl
jg
pop
xchg
aad
stos
rorl
std
adcb
dec
cmp
mov
sub
mov
inc
in
jmp
das
mov
testb
loop
cmpl
jge
fwait
outsl
dec
dec
aad
cs
mov
xor
jle
shl
imul
or
mov
cmp
push
repz
pushf
into
or
fs
stc
mov
xchg
faddl
sbb
stos
push
pop
and
movsb
cwtl
cld
xlat
pop
test
ret
push
inc
int
idivb
test
xor
scas
andb
fdivs
xchg
xor
rol
mov
and
sbb
int
movsb
adc
repz
pop
mov
mov
test
mov
mov
xor
inc
jmp
jmp
and
sbb
mov
clc
lods
push
orb
xor
mov
cmpsb
mov
pop
das
lea
dec
rcll
add
std
and
data16
popa
or
mov
ficompl
cmp
mov
mov
pop
je
stc
adc
mov
fimull
cmpsl
sub
fdivr
icebp
mov
lret
dec
inc
sbb
inc
adc
adc
pop
inc
lods
movsb
pusha
lea
mov
xlat
pushf
sub
popa
cld
jg
dec
dec
jp
mov
jl
pushf
cmp
or
add
data16
popf
dec
sub
sbb
fwait
jb
arpl
mov
mov
jbe
push
jno
outsb
and
test
gs
push
jo
mov
imul
cmp
aam
xchg
xor
cmp
int3
arpl
push
out
sarl
mov
inc
fldt
jne
repz
aad
fildll
or
mov
ficoms
push
jl
sub
mov
inc
dec
xor
xlat
ljmp
imul
mov
and
pop
pop
out
test
fs
int
xchg
fsubrs
cmp
adcb
push
imul
pusha
adc
ret
outsb
mov
mov
sar
aas
cmpsl
inc
and
sti
je
jle
stc
or
mov
jnp
xchg
xchg
pop
or
test
cmp
inc
sbb
fs
enter
pushf
mov
aaa
mov
inc
loopne
rcr
pop
decb
out
jns
mov
push
dec
clc
pop
pop
jmp
test
sahf
dec
inc
lea
jo
sub
movsl
sbb
cmp
mov
fcoms
rclb
ja
mov
jmp
and
imul
sti
test
mov
lea
ret
and
xchg
in
sub
jo
sbb
jp
add
