push
mov
sub
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
subl
push
mov
mov
sub
add
push
mov
xor
xor
mov
sbbl
add
andl
mov
mov
sbb
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
sbb
mov
mov
mov
sub
add
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
mov
movl
sbb
mov
and
xor
add
adcl
mov
mov
mov
mov
mov
and
mov
adcl
mov
and
mov
xor
push
neg
pop
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
movl
mov
and
movl
mov
xorl
mov
mov
orl
mov
and
mov
xor
movl
add
mov
adcl
lea
sbbl
mov
mov
or
mov
adcl
xor
add
mov
lea
andl
push
mov
movl
xor
add
andl
push
subl
mov
xorl
push
subl
pushl
xorl
call
andl
mov
inc
mov
cmpl
jb
jmp
push
pushl
pushl
call
cmpl
jb
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
movl
mov
incl
mov
lea
incl
mov
movzbl
or
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
push
call
jmp
mov
sbb
xor
sub
mov
sub
mov
mov
movzwl
movl
mov
mov
cmp
movl
je
add
mov
mov
sbbl
xor
xor
lea
mov
orl
xor
div
mov
xor
mov
xor
orl
xor
orl
sub
cmp
jne
mov
mov
add
mov
mov
subl
xor
addl
xor
add
add
movl
mov
movl
cmp
movl
jae
and
lea
not
mov
mov
xor
xorl
add
lea
mov
mov
mov
cmp
jbe
addl
addl
movl
jmp
addl
addl
sub
mov
xorl
xor
decl
inc
sbbl
incl
addl
add
cmp
movl
jb
notl
mov
xor
mov
movl
xor
xorl
mov
sub
add
mov
adcl
xor
sub
andl
ror
movzwl
sbb
xor
mov
mov
mov
adc
mov
orl
jmp
pop
mov
pop
mov
add
push
addl
subl
and
cmp
sub
inc
jbe
jp
jae
jb
fcmovu
imul
jb
int3
bound
lea
xchg
xchg
inc
mov
sub
push
rol
repnz
sub
nop
ss
mov
aad
jb
adc
and
aaa
jo
lods
sub
mov
notb
test
pusha
push
and
cmpl
fwait
dec
or
jecxz
imul
xchg
ss
leave
int
outsb
cmc
pop
imul
or
mov
shll
imul
jno
add
je
rorb
lahf
pop
adc
int3
std
test
mov
jmp
push
sbb
add
dec
cmc
in
xchg
cmp
add
dec
sub
mov
mov
stos
jle
mov
in
insl
xchg
cmp
pop
sbb
mov
mov
rcrl
cwtl
xchg
xor
sub
outsb
addb
add
adc
addr16
and
ficomps
add
mov
outsl
dec
push
jno
mov
test
sti
and
shlb
push
xlat
leave
imul
movsl
in
add
ret
cmp
inc
jns
mov
pop
add
cmp
dec
pop
test
negb
inc
pop
cmc
mov
icebp
ret
pop
jle
inc
add
clc
shll
sbb
je
mov
nop
aaa
in
mov
mov
push
addr16
pusha
outsl
pushf
mov
enter
cmpl
jae
mov
dec
mov
pop
sbbb
and
negb
or
loope
icebp
imul
lcall
andb
mov
xchg
add
mov
andb
or
cmpsl
xchg
push
xlat
adc
jecxz
xor
ret
mov
push
mov
mov
cmp
insl
pop
int
adc
cmp
in
pop
clc
lcall
ja
dec
jmp
in
xchg
xchg
int3
adc
jle
sub
or
xlat
pop
int3
mov
mov
test
inc
leave
pop
lods
insb
mov
lret
xor
lea
hlt
mov
sub
cmp
mov
in
fsubrs
shrb
inc
sbb
enter
idivb
pop
or
inc
and
scas
xchg
icebp
sbb
test
divb
enter
mov
in
insl
ret
mov
cmpl
mov
cmpsb
sbb
les
pop
imul
leave
sahf
push
mov
mov
lcall
or
loopne
scas
imul
pop
shll
notl
mov
shl
insl
mov
or
cld
adc
sbb
aas
mov
or
stc
mov
or
xor
lret
in
movl
pusha
orl
cld
mov
sub
sub
and
push
cmp
movsb
and
and
jmp
jge
lcall
filds
or
dec
ss
push
das
mov
xchg
mov
mov
cmp
mov
dec
cli
adc
and
inc
shlb
jb
or
aaa
adc
jmp
mov
iret
sahf
call
inc
adc
loope
push
cmp
or
mov
mov
inc
stos
sbb
movsb
jecxz
push
mov
rcll
and
cltd
sub
sub
pop
inc
sbb
adc
in
pusha
out
mov
fidivrl
push
stc
mov
jns
dec
bound
ret
outsl
inc
imul
ret
sahf
jge
mov
int3
inc
cmp
ja
jmp
mov
rcrl
aaa
cmpsl
iret
loope
xchg
movsl
pop
cwtl
addr16
sub
rol
fmul
enter
bnd
and
daa
sub
xchg
mov
test
movsl
pop
dec
sbb
shrb
sbb
inc
pop
or
into
mov
mov
mov
inc
adc
mov
dec
add
aad
outsb
cmp
jns
mov
sbb
adc
cli
outsb
mov
xchg
negl
xchg
mov
enter
adc
mov
or
pop
pop
fidivs
dec
sahf
dec
mov
mov
aam
mov
test
into
pop
pusha
push
sti
xchg
ss
fcompl
adc
les
ds
cmpl
dec
add
push
stos
xchg
and
pushf
inc
cmpsl
pop
mov
loope
mov
pushf
lahf
and
in
adc
cli
adc
je
pop
add
stos
or
push
and
sbb
scas
sub
sti
lods
mov
stos
and
xchg
stos
lea
xor
mov
jno
or
movsb
push
sub
and
sbb
push
repnz
or
inc
xor
pop
sub
test
push
std
iret
insl
mov
test
adc
pusha
lahf
outsb
cmp
fsubr
pop
add
adc
loop
cmpsl
add
addb
and
imull
pop
dec
inc
enter
jmp
jle
gs
adc
add
fcoml
adc
dec
adc
enter
pushf
xor
lods
ljmp
or
add
out
call
fwait
dec
add
outsb
and
into
xchg
jg
add
mov
fisttps
fiaddl
movups
test
stos
push
adc
arpl
imul
mov
ja
adc
test
out
xor
push
dec
sub
xchg
adc
pop
sbb
inc
notl
and
nop
movsl
pop
pop
mov
jp
aad
or
pop
mov
mov
outsl
sub
jp
push
mov
jp
ret
dec
inc
mov
mov
jg
jnp
mov
push
or
sub
outsb
pop
std
jb
std
jle
jo,pt
cmpsb
push
in
hlt
mov
je
sbb
mov
push
data16
dec
xchg
adc
xor
fildll
adc
push
stos
orb
mov
cld
mov
daa
dec
daa
loop
outsl
xor
mov
push
test
out
hlt
mov
js
popf
pop
shrb
subb
add
push
mov
and
cli
ret
cmp
cmp
cltd
pop
cmp
pop
mov
shrl
scas
jp
imul
mov
or
outsl
fadds
adc
jno
mov
sub
aas
loop
ja
jp
inc
pop
pop
mov
lahf
cmpsb
xchg
or
dec
pop
inc
jmp
andb
mov
sub
xor
push
dec
popa
ret
pop
add
rorb
mov
daa
aas
or
push
cmp
sbb
addb
cmp
lods
movsl
mov
mov
xor
mov
add
das
ja
in
xchg
mov
fcmovbe
inc
pop
dec
dec
and
lods
mov
in
pop
mov
and
nop
push
add
in
or
adc
mov
fdivr
sbb
mov
in
lret
adc
inc
or
mov
flds
xchg
push
mov
mov
xor
ja
push
cmp
inc
push
and
pop
push
lea
out
aam
mov
sub
push
add
mov
movsl
jmp
ret
shrb
and
add
stc
stos
jns
push
push
push
sbb
test
stos
outsl
pop
cmpsl
popa
mov
pop
fs
mov
or
movsb
cmp
push
sub
pop
orb
adc
lds
push
jl
jb
cwtl
cmp
fcompl
jb
mov
mov
fidivs
movsl
imul
push
xchg
das
pop
xchg
push
add
mov
mov
fcomp
xlat
xchg
fmull
test
pushf
or
xor
jae
pop
or
je
daa
inc
cmp
jnp
insl
inc
daa
mov
xchg
cld
push
in
dec
lds
jbe
cmp
add
pop
or
xchg
inc
bound
add
jo
adc
aad
inc
push
pop
mov
pop
shll
mov
push
pop
sbb
xlat
mov
sub
js
xchg
mov
mov
mov
popf
inc
outsb
insb
cmc
jge
test
jno
push
aas
ljmp
push
seta
cltd
call
int3
push
cltd
not
inc
sub
xor
mov
ror
mov
ljmp
dec
add
mov
hlt
or
aam
or
movsl
xchg
sti
mov
fs
mov
xor
or
arpl
das
out
out
cmc
jns
movsb
pusha
aas
inc
sbb
xchg
outsl
push
inc
fwait
andl
jnp
nop
loop
test
inc
dec
pop
aas
je
mov
popl
outsl
insb
lods
lods
mov
pop
dec
popf
in
push
loopne
popf
outsl
jne
pop
xchg
stos
in
push
test
es
mov
lret
push
sub
gs
lock
cmpsb
enter
jge
fdivs
aas
xchg
and
clc
mov
jmp
xor
aam
in
loop
ret
pop
test
inc
fildl
arpl
ljmp
dec
test
testl
inc
mov
fists
xor
pop
cs
movaps
mov
push
test
popa
cmpsl
xchg
ret
ret
sbb
imul
add
lcall
sub
dec
pop
out
mov
or
cmp
adc
mov
pusha
xchg
or
sbbb
or
scas
jno
and
or
sbb
addl
fldenv
xchg
adc
std
data16
aas
ljmp
push
mov
mov
ret
notb
movsl
xchg
aad
or
and
andl
sbb
inc
inc
sbb
pop
aas
inc
xlat
sahf
adc
inc
into
sti
in
dec
mov
dec
lods
popf
fists
sti
adc
xchg
imul
sti
les
mov
jns
icebp
mov
sub
adc
ja
inc
insl
mov
jg
xchg
bound
iret
and
in
xchg
xor
mov
test
out
jg
xor
cmpsb
mov
mov
sbb
imul
imul
jle
sub
add
int3
xchg
sbb
cmp
or
adc
sub
sbb
cmp
push
test
das
and
xchg
mov
xor
lahf
sbb
sbb
and
push
adc
cmp
mov
stos
adc
cld
mov
in
push
inc
adc
jg
cli
sbb
icebp
xchg
mov
pushf
xchg
xchg
add
addb
push
es
cmp
out
sahf
cwtl
jns
inc
inc
xchg
mov
add
mov
mulb
sbb
jns
jg
dec
popa
dec
fsubrl
cld
mov
in
ss
loop
and
xchg
pop
test
icebp
or
jmp
out
pushf
jg
add
adc
data16
jmp
dec
inc
cmp
gs
scas
daa
add
dec
fs
int
dec
sub
sarb
lods
call
cmp
adc
mov
addr16
cli
in
mov
int3
dec
in
mov
cmp
and
push
sbb
xor
add
idivb
js
push
jnp
mov
sbb
jmp
les
push
xrelease
mov
pop
xorb
in
sbbb
leave
inc
adc
dec
push
push
arpl
sbb
pop
leave
les
aam
sahf
mov
insl
mov
cmc
gs
xchg
daa
rcll
dec
jge
adc
adc
cmp
and
loopne
and
xor
fidivrs
mov
in
pop
ds
mov
ret
aaa
jae
int3
movsl
xor
pop
mov
cmp
mov
jns
mov
jne
sub
xchg
in
inc
add
into
neg
test
mov
mov
hlt
xorb
push
adc
jmp
push
inc
jmp
aam
push
sahf
ret
nop
and
mov
jmp
or
push
stos
js
std
dec
jbe
lods
aas
repz
cmp
popa
daa
je
subl
sub
pusha
ret
test
dec
inc
add
test
push
inc
and
imul
lcall
shl
pop
push
jbe
aam
xchg
sub
xchg
enter
cmp
mov
int3
sub
scas
enter
push
jns
pop
cmp
sub
imul
cmp
int
sbb
jecxz
movsb
fidivrl
jo
xchg
xchg
ss
adc
lods
pop
and
ret
int3
out
movl
mov
out
in
push
scas
push
pop
mov
adc
in
sti
inc
push
pop
xchg
in
mov
sbb
movsl
insl
scas
shl
inc
xor
pop
fcmovnu
inc
push
push
mov
cs
pop
push
test
dec
fiadds
cltd
jmp
add
outsl
inc
lahf
pusha
dec
cmp
mov
lahf
lds
mov
fstl
insb
popa
test
scas
mov
xor
xor
inc
fwait
and
lea
cmpsb
out
iret
sbbb
insb
pusha
inc
ljmp
pop
out
push
jae
clc
test
mov
icebp
jmp
add
pop
stos
push
adc
mov
hlt
add
jmp
fdivs
adc
dec
mov
dec
fistps
or
mov
out
repnz
mov
sti
ret
mov
mov
es
xchg
inc
cld
sbb
mov
mov
lret
pop
sbb
add
and
jo
or
push
lds
inc
cld
mov
lcall
movsl
es
or
adc
into
test
jge
in
fildll
xrelease
jmp
or
push
cmc
xchg
dec
add
mov
sub
call
js
mov
adc
xor
jp
ss
aad
sbb
movsb
mov
dec
das
and
fidivs
sbb
mov
es
mov
sub
xchg
pop
xchg
movsb
push
xor
add
push
lea
pop
daa
xor
mov
out
sub
int3
mov
xor
mov
push
shlb
pop
mov
mov
ja
lcall
sbb
mov
shlb
dec
andb
js
fld
mov
push
push
scas
lds
cmp
add
mov
dec
dec
and
push
movb
mov
and
int3
lret
insb
add
add
push
and
adc
jle
add
add
xor
inc
mov
push
call
dec
sub
adc
lods
dec
aad
sbbl
sbb
xchg
jmp
jbe
inc
mov
jbe
insl
xor
insb
add
mov
test
ffree
movsl
sbb
rcll
pop
daa
iret
adc
in
add
lods
aam
xchg
sbbl
call
lock
push
jnp
mov
xorb
cmpsb
flds
mov
cltd
pushf
mov
pop
sub
mov
test
adc
cmp
jbe
mov
dec
fdivr
mov
insl
jns
gs
sbb
adc
incl
incl
in
push
out
jno,pt
cmp
jge
outsl
jno
loope
xchg
adc
and
mov
aas
lret
enter
fwait
xchg
jnp
fdivp
and
lret
pop
in
cs
mov
int
lds
js
xchg
inc
insl
stos
jne
xchg
add
fs
push
or
mov
lret
pop
dec
adc
leave
push
or
shlb
mov
cld
add
sbb
in
leave
xor
jns
aam
imul
sbb
push
lahf
xchg
mov
addb
and
sti
and
mov
pop
es
inc
imul
mov
and
xchg
out
lds
cmp
jo
jo
test
sbb
shrb
cmpsl
mov
push
mov
gs
aas
jg
insb
dec
mov
stos
cld
and
or
in
sub
cli
xchg
cmpsb
test
xchg
int3
lret
push
xor
mov
and
cmp
mov
stos
lods
dec
or
movsl
sahf
fbld
sbb
ja
movsl
mov
push
test
in
mov
mov
lret
jno
imul
or
and
in
jmp
fcmovu
leave
and
pushl
adc
xchg
inc
mov
les
jle
push
sbb
dec
xor
sahf
rcrl
sub
loop
or
hlt
aaa
cmp
mov
into
cmp
int3
adc
mov
push
pop
aas
pop
int3
adcb
fildl
jns
jno
cmp
or
vshufps
decb
sub
ds
pop
adc
xor
cli
dec
ljmp
xor
popa
lock
loop
in
cld
and
lea
mov
mov
push
daa
mov
mov
xchg
jo
in
xor
push
stc
lea
lret
enter
in
popl
pop
adc
push
xrelease
push
dec
jge
or
cmp
negb
mov
repnz
negb
scas
lock
jnp
adc
push
test
inc
mov
outsl
sti
outsl
push
ja
aam
sar
ds
test
xchg
fwait
sar
adc
imul
addb
lahf
mov
loop
aaa
xchg
cmp
enter
sub
and
loop
pop
sti
mov
jns
test
jecxz
adc
xchg
loope
sbb
xchg
and
je
subl
cmp
insb
cmc
inc
mov
cmp
mov
sti
rcr
mov
mov
mov
movsb
pop
std
data16
adc
mov
or
or
push
xchg
mov
ss
dec
sub
inc
mov
pop
mov
push
fstps
and
sbb
lret
inc
and
adc
cmpsb
pop
xor
insl
mov
lds
push
test
jl
insb
lret
add
cmp
and
ror
mov
dec
inc
xchg
push
pop
gs
outsl
push
push
ljmp
mov
pop
adc
and
in
das
rcr
outsl
or
mov
or
or
clc
mov
mov
jo
push
mov
mov
xchg
mov
dec
lods
pop
shll
std
mov
gs
dec
sub
aas
lret
inc
pop
ljmp
iret
xor
sub
mov
add
sbb
mov
or
push
stos
pop
push
push
sbb
mov
daa
repnz
ljmp
xor
fimull
cmp
add
mov
mov
ss
push
out
push
imul
rsqrtps
sub
dec
mov
stc
cwtl
out
lea
sbb
stos
sub
fistl
jecxz
pop
jb
mov
mov
push
fsubrl
sbb
rorb
jae
jne
mov
ja
in
shll
add
mov
push
insb
fwait
pop
push
cmpsl
add
jnp
sub
pop
dec
cmp
cmp
inc
das
daa
sbb
push
subb
adc
dec
xor
ret
cli
bound
loopne
sarb
out
jb
test
adc
sbb
mov
or
add
jle
xor
ss
push
and
adc
std
mov
cwtl
sarl
lahf
pop
adc
mov
in
cld
lcall
inc
lock
push
push
dec
pop
fisubs
pop
fimull
cli
ja
repnz
addl
movsl
fs
xchg
sbb
xchg
xor
xchg
adc
xor
or
sbb
sbb
xchg
xchg
data16
cmp
hlt
int
sbb
iret
cli
gs
orb
or
inc
dec
add
mov
xchg
sarl
mov
inc
mov
insl
roll
add
mov
add
sub
popa
test
mov
popl
loopne
outsl
or
dec
xchg
adc
pop
shl
cld
cmp
popf
aam
int3
and
mov
sub
and
repz
sti
rcr
cld
dec
cld
ret
pop
jecxz
das
and
cltd
cmp
scas
or
iret
jns
rcll
dec
sbb
jmp
push
nop
push
pushl
xchg
loopne
mov
mov
xchg
cmc
xor
jmp
jle
aaa
cmpsl
jmp
gs
cmpsl
jnp
ds
dec
jb
mov
cs
adc
iret
mov
jmp
mov
adc
cltd
mov
dec
out
fs
and
cmp
leave
mov
inc
ds
sub
out
mov
and
cmp
mov
fucomi
inc
xchg
sbb
push
ds
les
out
cltd
sub
subl
rcll
shlb
push
leave
gs
cmp
mov
cmp
les
int
mov
xor
inc
outsb
leave
lods
test
xor
mov
in
dec
push
sbb
sub
or
outsl
outsb
outsb
mov
dec
cmc
stc
mov
enter
pop
andb
call
sbb
movsb
jb
cmp
mov
or
mov
cmc
and
leave
data16
add
mov
adc
pop
xlat
xlat
push
aaa
popf
cmpsb
repnz
mov
clc
cwtl
sub
cmp
icebp
sbb
and
shl
push
fisttps
sti
enter
pusha
and
mov
jge
xchg
push
fdivrl
xlat
lods
sbb
fmuls
enter
ret
pop
sbb
xchg
sar
jge
mov
insb
mov
cltd
xor
out
in
jbe
movsb
sub
stos
shrl
sub
leave
xchg
and
pop
mov
xor
aam
ja
arpl
pop
clc
cwtl
mov
pop
out
imul
jb
pop
dec
mov
xchg
ja
jne
decl
ror
xchg
pop
or
out
into
shlb
xlat
mov
lods
pushl
shlb
ficomps
cmpsb
bound
div
fiadds
or
sub
push
das
mov
lods
sbb
mov
bound
insb
dec
inc
test
mov
cmp
aaa
ja
mov
pop
ja
pop
fs
aas
dec
push
pop
icebp
push
sub
mov
les
mov
orb
mov
in
js
arpl
into
hlt
mov
inc
dec
and
sub
xchg
mov
and
add
fidivrs
and
xchg
xlat
sub
in
jno
in
sti
shrl
mov
clc
cmp
xor
adc
lcall
cld
je
ret
push
ds
inc
test
inc
outsb
insb
gs
push
xchg
aaa
mov
and
imul
push
xlat
test
xor
fwait
pusha
test
scas
adc
repz
pop
sub
mov
in
mov
pop
fld
jbe
cmp
lcall
sbb
das
lret
inc
xchg
movsl
cmp
mov
sti
lods
les
push
push
fs
mov
mov
xchg
lods
mov
ss
out
sahf
pushf
sub
shrl
loopne
hlt
fmull
xor
inc
pop
adc
enter
mov
xor
les
push
or
sub
cwtl
ret
sub
mov
popf
sti
fwait
aaa
pop
sub
popa
mov
cmp
leave
jo
and
pop
push
jb
test
mov
and
andl
xchg
sub
into
xor
lcall
sub
jmp
xchg
mov
and
mov
cmp
pop
loop
rcr
dec
ljmp
out
jge
fbstp
clc
xor
mov
mov
xchg
aas
sub
mov
stc
mov
enter
sbb
jae
fcompl
inc
dec
pop
xlat
inc
xor
sub
aam
stc
imul
in
push
aas
mov
daa
xchg
adc
pop
inc
icebp
outsl
stos
cld
pop
fdivr
mov
mov
pop
aas
clc
cmc
xor
cmp
mov
jnp
jne
inc
adc
or
ja
int3
das
mov
es
into
cwtl
jne
mov
pushf
imulb
sub
hlt
stc
imul
cmp
and
and
pop
sahf
adc
or
pop
cmpsl
int3
ljmp
jle
in
push
pop
sbb
fwait
iret
out
test
dec
leave
call
in
add
adc
stos
mov
push
loop
repz
jg
push
enter
bound
test
xchg
dec
lock
ret
cmp
ret
jmp
jb
pusha
loope
inc
loopne
and
mov
cmp
lock
jno
xlat
pop
mov
push
or
ror
cmp
xchg
add
jo
mov
test
and
jmp
out
cmpsb
test
push
pop
inc
pop
push
das
mov
xchg
jbe
or
lods
pop
or
sub
push
inc
mov
fcompl
jle
pop
cli
mov
push
inc
mov
add
pop
cmp
stos
icebp
xlat
out
enter
movsb
xchg
repnz
mov
cld
js
sbb
inc
cmpsl
stos
arpl
xor
dec
push
add
adc
aam
dec
sub
fadds
and
jp
push
int3
outsb
mov
ja
pop
repz
popf
pop
inc
xchg
cltd
mov
cmp
push
mov
mov
cmp
iret
mov
add
pop
xor
hlt
and
jnp,pn
outsl
inc
leave
leave
mov
sahf
jnp
add
mov
imul
adc
push
cwtl
pop
lds
mov
aas
mov
xor
cli
inc
pop
je
jb
xor
neg
sub
cmp
aaa
add
cwtl
das
and
add
dec
or
arpl
push
mov
jl
cli
clc
sub
test
cwtl
jne
xchg
and
xor
lcall
jecxz
lods
and
xchg
cmp
inc
push
push
dec
into
das
negl
out
insl
mov
pop
mov
clc
es
scas
js
lcall
insb
cld
das
xchg
stc
mov
daa
test
xor
xchg
cwtl
push
or
xlat
add
xchg
das
out
pushf
cmp
andl
cmp
dec
adc
sbb
lea
decb
adc
xchg
decl
popf
shll
outsb
scas
add
mov
xlat
dec
pop
cmp
or
lret
pop
xchg
stos
rcrb
lret
ret
addr16
lds
ja
cltd
stos
or
fbstp
fldt
test
in
or
or
cmp
lods
jl
lods
hlt
mov
daa
outsl
add
insb
enter
mov
dec
test
jg
xor
add
cmp
or
cmpsl
inc
in
add
daa
or
sbb
cltd
insl
dec
add
lahf
pop
and
negl
dec
ret
rclb
movl
sar
ret
cmp
je
rorb
jne
jo
loope
mov
in
adc
movsl
fisttpll
ret
cmp
xchg
pop
sarl
pop
adc
cltd
mov
mov
pop
bound
mov
aam
cmp
mov
xchg
mov
imul
xchg
lret
in
xlat
std
or
dec
mov
and
ja
add
push
jb
add
movsb
out
push
mov
outsb
movsb
xlat
sbb
dec
mov
cmp
mov
push
enter
lahf
jg
push
es
ja
jmp
cli
arpl
inc
or
sahf
pop
fstl
mov
add
stos
cmp
out
mov
ljmp
add
jle
rolb
xor
cmpsl
sub
call
dec
aad
adc
cmp
mov
imull
xchg
out
aaa
lret
jb
adc
cmpsb
arpl
dec
loop
pop
push
add
sbb
sbb
hlt
stc
pop
and
jmp
imul
stos
jns
insl
sbbb
push
in
out
or
pop
decb
in
add
stc
int
or
xchg
xor
sbb
out
or
popf
fs
out
mov
cmc
xor
pop
pop
adc
mov
mov
cmp
repz
jae
dec
pushf
ja
add
icebp
mov
fsubl
mov
shll
sub
inc
lock
add
cmp
fcomps
jp
push
mov
mov
or
dec
adc
xor
push
lds
jle
addb
lahf
insb
in
imul
adc
aam
jp
pop
lods
dec
mov
in
pop
mov
fnstcw
jmp
jne
mov
pop
dec
repz
ret
repnz
mov
push
mov
sbb
push
dec
icebp
aad
jo
insl
mov
lds
jg
sahf
xchg
aas
adc
loopne
jge
stos
ficoml
sub
cmp
mov
mov
les
fistpll
repz
lret
jbe
icebp
xor
sub
fwait
pusha
push
or
nop
leave
push
loopne
or
repz
cs
popa
xchg
and
arpl
xchg
in
sbb
repz
pop
push
fwait
xchg
sbb
jg
cmc
push
sub
jl
in
ret
inc
lods
jle
dec
sahf
test
cmp
ds
scas
cs
stos
ds
or
mov
xchg
sti
xchg
mov
sbbb
jns
popa
repz
incb
jae
add
fisttps
shl
out
mov
sub
cmp
in
pop
xchg
stos
inc
ja
ds
adc
mov
fisubl
sbb
fsts
cmp
pop
dec
leave
and
adc
in
dec
sbb
push
push
fnstsw
lcall
les
subl
pmaxub
fnstsw
shrb
sub
mov
icebp
mov
ja
xor
pop
addb
das
dec
es
repz
cmp
bound
cld
mov
stc
std
dec
sub
adc
mov
jp
jne
sbb
xchg
fnstenv
sbb
lret
mov
jbe
jecxz
mov
lods
fnstenv
mov
or
adc
jno
lcall
push
fimull
cwtl
jecxz
sub
fidivl
adcb
pop
adc
push
fnstsw
pop
add
inc
int3
ret
test
fwait
call
repnz
jnp
pop
sub
jnp
jl
push
sbb
add
push
pop
fs
std
and
ljmp
leave
cwtl
pop
scas
std
int3
and
std
pop
inc
js
sbb
mov
sub
and
dec
jb
fwait
int3
jmp
push
adc
fs
mov
sbb
test
cmp
sbb
shl
adc
sarb
add
fcomps
or
sub
push
stc
stos
or
loop
scas
xchg
imul
pushf
jmp
push
jp
stos
xor
dec
mov
mov
xchg
loopne
adc
pop
sbb
adc
pop
ud2
in
mov
loop
mov
inc
pop
flds
and
or
pop
scas
add
nop
and
add
mov
cmp
in
inc
or
mov
outsl
mov
xor
std
push
shlb
pop
cltd
inc
cltd
jmp
xchg
mov
adc
sbb
mov
shrb
sub
sahf
mov
shll
cld
or
icebp
mov
sbb
dec
popa
bnd
sahf
gs
loope
arpl
mov
add
test
cmp
jne
or
mov
andl
mov
adcl
xor
xorl
xor
sub
sub
mov
mov
xor
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
jmp
mov
and
out
mov
fstpl
mov
addl
jne
push
push
rcr
ret
sub
loope
dec
pushf
testb
loop
pop
les
cld
incl
jecxz
sub
adc
daa
je
popf
lea
shl
add
cmp
ret
mov
and
rorl
jb
jo
xchg
mov
idivl
nop
addb
mov
cmp
cmc
leave
jnp
dec
jae
mov
push
loop
adc
cmp
cltd
clc
push
mov
sbb
ds
jmp
mov
cmp
cmp
push
lds
sbb
bound
mov
inc
pop
mov
dec
dec
sbb
loopne
pop
clc
inc
movsl
dec
shll
xlat
adc
cmp
xor
aad
add
push
push
sub
aas
rorb
mov
outsb
into
in
cmp
mov
pusha
lea
rorl
int3
rcll
pop
test
les
mov
xchg
and
test
stos
subl
and
inc
in
cli
mov
jecxz
push
fnstsw
inc
xchg
les
push
lods
imul
xor
sbb
sub
xchg
or
lret
enter
push
sub
xchg
mov
xchg
mov
cmp
and
rorl
out
lds
pop
cmp
fisttpl
dec
xchg
or
repz
int
fdivp
decb
xor
loop
push
pop
lods
dec
lods
mov
inc
jbe
mov
sub
rolb
jge
das
xor
insl
dec
mov
xchg
test
mov
mov
xor
les
inc
mov
lock
fsubs
push
dec
sub
shlb
mov
xor
addb
push
imul
js
pop
xlat
pop
mov
ficomps
and
repz
movsl
cmp
sub
mov
enter
xor
mov
inc
outsb
cwtl
xor
mov
cmp
ret
les
ss
mov
sub
out
mov
fidivrl
fwait
jo
mov
mov
dec
cmpsl
sbb
add
mov
mov
and
iret
sub
mov
mov
fistpl
jl
cmp
notl
sti
stc
jno
sub
jg
ret
pop
jmp
jb
stos
cli
mov
jo
popa
mov
jge
jmp
and
push
push
mov
xor
int3
pop
stos
pop
out
call
dec
jnp
push
pusha
test
leave
xchg
mov
mov
cltd
mov
in
lds
ret
lcall
xchg
jg
ror
je
push
out
pop
ljmp
pop
clc
enter
insb
pop
xchg
cli
and
add
test
xor
dec
out
mov
mov
push
or
mov
and
cmp
mov
shll
pop
sbb
ret
mov
dec
enter
xchg
xchg
roll
mov
mov
enter
cs
jl
das
hlt
jb
notl
test
test
and
push
mov
test
andb
aad
push
mov
movsb
imul
fcomps
out
jnp
andb
div
jbe
cmpsl
ja
daa
icebp
or
fisubs
xchg
jno
sbb
out
das
xchg
rcrb
mov
insl
mov
xchg
dec
mov
loop
sbb
cmpl
outsl
bound
in
dec
add
std
sarl
mov
aad
push
divb
jmp
pop
addr16
jb
xchg
mov
icebp
adc
out
icebp
adc
les
ficomps
cmp
mov
mov
cwtl
stos
ret
ret
test
cli
push
test
shrb
std
into
cmp
ja
test
adc
in
inc
jno
cmp
xor
stc
inc
icebp
fcoms
inc
lret
aad
nop
sbb
or
sub
xchg
test
xchg
sti
dec
cmp
xorb
lods
jg
stc
les
mov
jle
xor
pop
jge
icebp
popf
cltd
xor
sarb
js
dec
movsb
push
imul
mov
cmp
sub
sub
addr16
inc
sub
pushf
and
lcall
movl
hlt
inc
xchg
fstpl
fisubl
popf
pusha
lcall
ljmp
adc
mov
mov
adc
pop
adcb
mov
inc
repnz
test
sub
nop
push
inc
imul
inc
push
dec
inc
push
xchg
bound
arpl
rcll
mov
inc
loop
subb
repz
xchg
dec
ja
orl
notl
pusha
test
les
pop
dec
cs
cmp
es
push
movsb
cmp
fs
out
outsl
in
loopne
mov
mov
jp
frstor
sahf
ficomps
inc
enter
pop
mov
fdiv
mov
push
mov
out
xchg
sbb
sub
fstps
pop
mov
loope
add
jmp
cmc
xlat
inc
sbb
inc
cmc
cs
mov
insl
mov
adc
je
mov
cmpsb
or
mov
jbe
out
lock
mov
xor
sub
repnz
jle
jae
flds
and
fistpll
inc
jmp
ljmp
adc
mov
aaa
fidivrl
int
ss
add
or
pop
fisttpl
sub
pop
xor
sbbl
jge
xor
repz
mov
adc
sbb
xchg
aad
mov
enter
push
mov
xchg
mov
or
fs
loope
inc
mov
jno
mov
movsl
mov
xlat
hlt
shrl
leave
mov
lret
aam
push
mov
shrb
shr
xchg
lea
push
inc
test
fsts
test
imul
mov
xlat
pop
sbb
enter
pusha
movsb
push
mov
and
sbb
pop
imul
bound
rcll
and
mov
mov
pusha
jo
fldenv
push
jne
mov
arpl
jae
jb
lods
lcall
xchg
cmp
frstor
jne
movsl
mov
mov
enter
xchg
inc
mov
jb
add
mov
test
aad
mov
mov
rorl
loop
aas
xchg
sub
mov
cmp
jne
or
xor
and
lock
in
xor
sbbb
jb
popf
int3
movsb
or
rolb
and
movsb
test
cli
imul
dec
mov
cli
mov
cli
stc
sub
mov
mov
ret
pop
dec
addr16
mov
jnp
mov
decl
cmpsb
xchg
into
xchg
mov
inc
in
xchg
mov
push
pop
mov
leave
sahf
jmp
dec
adc
cmpsb
stos
int
aaa
gs
mov
rol
xchg
bound
bnd
mov
fistl
or
enter
scas
jl
adc
fs
out
mov
int3
inc
fidivrs
hlt
repnz
mov
xor
test
fsubr
fcmovne
add
sub
out
mov
mov
out
les
push
mov
mov
pop
jle
andb
dec
inc
mov
loope
jbe
mov
xor
out
cli
in
imul
in
mov
fiaddl
xchg
mov
addl
mov
cmpsl
insl
inc
pop
popa
cmp
rclb
outsl
inc
mov
adc
sub
push
sub
movsb
nop
xchg
mov
lds
cld
std
jbe
enter
xchg
add
cmp
jnp
dec
cmc
dec
scas
popf
aaa
cmpsb
sub
cmp
pop
rcrl
repnz
int
push
out
outsb
mov
das
or
jmp
push
pop
outsl
fdivrp
push
dec
xchg
in
in
in
mov
test
in
lea
mov
bound
jmp
mov
dec
or
js
adc
enter
insb
push
es
insl
sbb
test
push
add
enter
xor
jbe
std
xor
loopne
mov
dec
enter
js
mov
push
ds
and
mov
and
pop
int3
sub
mov
jge
std
jge
jp
and
xchg
call
mov
call
xor
out
adc
std
or
or
test
and
dec
mov
fcompl
xchg
mov
enter
xor
pop
insl
add
lahf
cli
pop
xor
fiadds
inc
add
sub
push
mov
ret
sbb
or
shl
jnp
and
jge
scas
mov
dec
adc
ds
jl
add
js
xchg
fists
xchg
incl
scas
scas
push
dec
push
cwtl
dec
cwtl
js
cmpl
and
lds
dec
sub
loop
andb
cmp
add
mov
xchg
insl
push
adc
dec
dec
jbe
test
and
mov
add
loop
inc
cmp
sbb
idivb
data16
dec
sbb
mov
in
in
xor
and
push
scas
std
lret
test
jmp
push
mov
and
jp
or
jg
mov
sbb
push
rorb
mov
dec
cmc
test
nop
stos
sub
push
add
jne
call
xchg
xchg
test
mov
inc
ss
cmp
push
or
mov
dec
cmp
mov
repz
popa
pop
jne
sub
notb
jmp
int
xchg
xchg
cmp
mov
cmp
xchg
dec
ret
xchg
inc
stos
loop
dec
mov
ds
push
sub
jmp
into
dec
mov
gs
jns
add
add
mov
mov
cmp
popf
dec
mov
pop
pop
aas
arpl
or
push
mov
sbb
fcomp
shrl
push
mov
lea
sti
cmpl
cmp
cmpsb
jge
jo
into
fbld
sahf
fmuls
push
insl
lock
mov
movsl
aaa
jns
cmp
dec
jge
jns
shl
lods
nop
pop
sahf
inc
xchg
cltd
xchg
xor
mov
outsb
pop
out
dec
and
mov
jo
adc
push
lahf
ret
xor
and
inc
ljmp
call
inc
out
imul
xor
push
icebp
mov
xlat
pop
mov
adc
adc
pop
push
mov
xchg
inc
rolb
or
es
or
push
cs
cmpsb
adc
out
mov
add
sahf
fldt
sub
addr16
dec
sbb
jle
and
fsubrs
sub
sbb
test
add
push
mov
arpl
mov
sub
sub
or
aas
xlat
mov
notb
cmp
mov
mov
sarl
adc
in
hlt
inc
jae
jno
push
pop
xchg
mov
gs
ss
mov
jp
jl
leave
mov
mov
nop
int
das
js
out
push
lahf
shl
cmp
test
and
imul
scas
sar
ficoms
sbb
jecxz
repnz
fs
mov
adcl
dec
nop
lea
mov
xchg
aam
in
cmpsb
ljmp
into
xor
and
xchg
dec
loopne
jns
mov
aaa
mov
adc
mov
rcll
jno
or
in
js
lret
std
fnstsw
aaa
sbb
stos
cmc
sub
sahf
jb
cli
adc
fidivs
jno
fdivr
jno
add
sub
cmc
mov
cmp
into
cmp
shr
arpl
cld
iret
push
pop
push
test
fwait
pop
cmp
dec
and
dec
cld
sbb
cmp
mov
cmp
loopne
pop
xor
and
cmp
rorb
mov
popf
xchg
mov
or
jle
daa
insb
push
hlt
sbb
pop
jno
mov
and
xchg
dec
shrb
lahf
subb
mov
call
and
adc
popf
inc
cmpsb
mov
adc
sbb
repnz
mov
mov
xchg
xorl
cli
mul
sbb
jnp
sbb
adc
je
xlat
es
fmuls
mov
cmp
pop
insb
imulb
scas
adc
dec
fisubrl
je
and
mov
xorl
mov
sbb
xchg
adc
mov
lret
out
push
mov
mov
lret
push
test
pusha
iret
sub
cmp
aas
mov
mov
fdivl
ss
pop
in
xor
cwtl
lahf
rorb
cld
pushf
mov
sbb
mov
data16
push
xor
int3
dec
jno
lret
stos
cmpsl
mov
push
fmuls
lret
outsb
jo
adc
movsb
lcall
in
es
mov
out
dec
jns
in
shlb
test
pop
rcll
std
pop
fildll
jb
popf
cmp
lods
cmpl
sahf
jb
ja
add
mov
mov
into
cli
cltd
dec
xchg
je
gs
jle
add
int3
mov
xchg
xor
insb
fisubs
mov
or
std
push
popf
lock
les
xchg
ja
subb
push
or
cwtl
lahf
insl
lock
lock
push
mov
cmp
mov
enter
jle
inc
or
xchg
lock
xchg
inc
std
xchg
imul
filds
cmp
les
jl
push
xor
insl
popa
je
negl
stos
xor
and
imul
sarl
mov
lcall
call
mov
test
mov
xchg
dec
adc
xor
pusha
push
aam
push
dec
and
sub
sbb
repnz
popa
push
mov
sub
mov
xor
push
or
shr
movsb
push
xor
sub
ret
pusha
adc
push
mov
sub
stos
and
mov
fwait
xor
push
inc
pop
mov
out
add
stos
ficompl
dec
or
jp
dec
lock
xchg
sub
cmp
jnp
bound
adc
out
movsl
test
lods
jg
addl
jl,pt
orb
mov
lock
idivl
or
push
outsl
outsb
mov
inc
lods
lcall
adc
pop
adc
cmp
insb
ljmp
stc
cmp
pushf
fwait
jmp
mov
sub
in
insb
test
xor
lock
mov
fsubl
call
jp
xor
dec
rorl
or
push
mov
test
jae
mov
jp
jle
int3
outsb
js
sub
cmp
dec
ror
mov
mov
scas
bnd
arpl
js
adc
fisubrs
pop
fs
jg
movsb
cmpsb
xchg
jg
imul
inc
inc
xchg
ljmp
mov
into
sti
stos
sub
arpl
sbb
push
inc
inc
push
loope
pminsw
fcoml
sub
subl
addb
lcall
jmp
sub
jecxz
iret
push
and
xor
cs
mov
stc
xor
cld
insb
ja
cltd
inc
dec
sub
dec
cmp
push
add
pop
aad
mov
gs
in
and
stos
push
shll
pop
mov
lcall
add
pop
es
fnstsw
dec
leave
mov
scas
imul
xor
icebp
sbb
adc
cwtl
add
add
inc
mov
add
ja
addr16
scas
in
jno
leave
fsubrl
mov
cmp
gs
and
imul
mov
mov
push
movsl
mov
mov
sbb
out
clc
in
push
jmp
lods
push
jb
xchg
sbb
mov
xchg
push
add
cmp
push
jmp
mov
and
mov
loope
xchg
xlat
mov
fwait
mov
icebp
sbb
outsl
in
adc
cs
aas
inc
decb
lret
nop
xor
lods
push
iret
add
ss
push
mov
int3
mov
andb
pop
call
sbb
sarl
push
xor
adc
test
in
in
sti
das
imul
sar
mov
pop
jnp
or
ja
cmp
fsubrp
add
stos
hlt
loopne
dec
fdivrs
in
cmp
inc
cli
add
cmp
out
cmpsb
jns
scas
dec
sbb
shll
aas
inc
xchg
fs
xlat
into
fsubr
mov
xchg
mov
enter
movsl
xor
fstp
mov
mov
js
cltd
or
mov
int
das
add
push
or
jmp
sub
xchg
inc
pop
arpl
or
sbb
mov
xchg
pop
test
mov
push
push
or
xlat
mov
xchg
jge
sub
movsl
mov
mov
xor
clc
jns
das
data16
js
out
jb
xchg
jnp
cmc
inc
test
mov
lds
test
add
push
push
repnz
push
lea
test
cmp
jp
pop
sbb
stos
scas
clc
icebp
sbb
pop
push
loope
lret
mov
adc
or
fldl
rorl
add
jle
fxch
sahf
stos
inc
or
cmp
xchg
hlt
and
jne
mov
lahf
inc
sbb
cltd
sub
jnp
cmp
stc
cmp
cs
cmc
or
jne
push
cmp
iret
fwait
movsl
push
sbb
jge
ja
sbb
lret
cmp
sub
aad
pusha
daa
pop
loopne
sbb
push
fistps
insb
xor
pushf
mov
push
mov
and
dec
gs
cmp
outsl
add
lcall
sbb
cmp
stc
iret
push
inc
sbb
cmp
sahf
sub
loopne
and
or
mov
and
lds
shll
pop
sbb
aam
pop
int
mov
subl
mov
dec
mov
mov
push
aaa
push
ljmp
stc
mov
subl
add
incb
daa
mov
dec
jp
mov
arpl
xor
mov
xchg
jb
push
pusha
sbbb
or
in
cmpsb
ficomps
test
enter
and
mov
ja
mov
sbb
test
sub
gs
adc
jmp
in
sbbb
and
aam
scas
cwtl
pop
test
out
in
shlb
andb
adc
or
std
dec
pop
or
push
leave
mov
movsb
mov
push
lods
cmp
xchg
and
sbb
mov
push
jb
mov
xchg
adc
sbb
lahf
or
or
daa
shrb
sbb
pop
imul
popa
scas
or
cmpsl
loopne
stc
aas
push
dec
push
jmp
mov
loope
adc
xor
dec
xchg
nop
icebp
xchg
testb
call
xchg
mov
jle
stos
aas
rcrb
leave
mov
cmp
mov
sbb
jmp
adcb
adc
sbb
cs
mov
xor
push
icebp
call
out
enter
xchg
dec
lods
fadds
inc
lcall
pop
pop
push
push
test
das
push
ljmp
push
xlat
adc
out
jnp
dec
psadbw
dec
and
rcrb
repnz
fs
xchg
rclb
test
mov
jmp
das
inc
lret
mov
mov
aam
jae
xchg
arpl
jnp
faddl
add
or
fs
dec
stos
outsb
fs
adcl
fists
popl
pop
idivb
jno
popa
sbbb
xor
inc
imul
std
xchg
mov
aas
mov
mov
je
addr16
push
loop
mov
movsb
pop
aam
ret
pop
pop
adc
sbbb
out
xor
fcmovnu
je
ret
mov
and
adc
daa
ret
mov
sbb
repnz
aas
stc
fmuls
fdivrs
leave
push
pop
adc
in
fisubrl
push
cmp
mov
mov
xchg
xor
add
rcl
stc
gs
xorb
xor
das
inc
in
push
mov
or
loopne
loop
shl
jge
add
iret
les
jmp
jns
in
shl
cmpsl
fs
imull
sbb
mov
outsl
cmpsb
mov
rolb
cmp
dec
push
pop
cmpsl
int
imulb
xchg
add
pushf
mov
cmp
rorb
mov
cmc
ss
xchg
push
or
imul
rcrl
mov
xchg
shll
and
movl
jae
mov
adc
outsl
inc
and
push
cmp
jne
cmp
mov
cwtl
xor
ds
pop
imul
xchg
pop
lock
in
jb
lret
in
or
sbb
leave
cld
and
mov
pop
enter
lods
repz
xchg
dec
subl
pusha
cmp
push
inc
adc
loopne
fsts
inc
mov
out
mov
push
sbb
xor
or
in
and
test
add
mov
push
sub
aaa
rorl
orl
mov
fbld
inc
dec
nop
int3
iret
test
sahf
subl
dec
ss
adc
sbb
movsb
nop
cmc
push
cmp
inc
xchg
push
notb
inc
sar
sbb
adc
stos
lret
in
rcrb
and
push
pop
out
lods
mov
call
jmp
push
repnz
sti
loope
push
test
push
sbb
mov
jns
cmpsb
pusha
cmc
jns
movsl
add
push
jns
xchg
scas
mov
subl
inc
push
dec
push
fwait
sbb
popa
dec
stos
inc
adc
or
cltd
inc
mov
popa
mov
aas
mov
adcb
aad
loopne
mov
js
inc
out
dec
jb
aas
test
test
lret
stos
mov
inc
adc
inc
insl
push
and
lods
fwait
push
lods
sarb
mov
ret
push
flds
and
jg
fistpll
xor
fnstenv
mov
xchg
cld
push
xor
cmp
jl
jno
fisubl
push
fisubrl
xchg
push
stc
cmpsl
lret
rolb
insl
xchg
fisttpll
dec
jmp
sbb
cmp
mov
pop
or
sub
ret
push
adc
mov
out
mov
repnz
adc
cmp
fwait
add
dec
xchg
add
ss
mov
divl
bound
dec
fcomip
xchg
add
xchg
loopne
jecxz
push
les
inc
lods
rorb
movsl
pusha
pop
cpuid
mov
pop
clc
add
cld
hlt
pop
cmp
mov
push
jno
mov
xor
xorb
cmc
shl
lcall
push
cltd
enter
shll
push
outsb
ss
mov
mov
dec
les
pop
mov
lret
xchg
cmp
nop
icebp
lret
aaa
leave
jae
hlt
inc
insb
loop
ss
sbb
add
insl
xor
das
movb
push
push
push
inc
add
sbb
pop
ret
add
jp
mov
movsb
into
hlt
in
jne
jmp
cmp
jp
cmp
lcall
insb
inc
sbb
insl
stos
cmp
pop
jo
mov
sub
hlt
push
sarl
mov
jle
xor
xor
sub
stos
mov
into
rcl
cmpsb
cmpsb
inc
mov
dec
loope
jb
mov
in
cwtl
cs
pushf
cs
sub
inc
xchg
jno
jo
mov
add
bnd
iret
fidivrl
arpl
in
sub
outsb
inc
js
jle
test
stos
jne
dec
lret
js
ffree
sahf
jbe
fnstcw
mov
dec
dec
push
ljmp
test
mov
roll
insl
jnp
movsl
jecxz
sbb
out
in
shr
xchg
push
jecxz
int
pop
sbb
xchg
stos
std
add
inc
or
pusha
jecxz
nop
jecxz
pusha
and
fisttpl
loope
shrl
xchg
lcall
ljmp
xchg
push
cs
mov
cwtl
popf
out
adc
mov
lcall
mov
jno
and
fbstp
sti
sub
fmuls
xor
and
dec
loop
jno
add
jmp
leave
xchg
xchg
movsl
lods
test
repz
ja
inc
xchg
mov
mov
in
outsb
adc
add
xchg
fs
daa
lock
orb
loope
enter
jne
into
ss
add
sbb
cmpsl
cmpl
lahf
ss
jmp
sarb
add
dec
outsl
push
fwait
mov
faddl
arpl
test
dec
add
sbb
xchg
inc
mov
daa
in
jno
xchg
mov
sti
repz
mov
sbb
jmp
outsb
popf
or
xlat
roll
adc
add
xor
fsubrs
loope
mov
mov
movsl
jo
int
loop
xchg
adc
xchg
imul
je
sub
imul
in
sbb
push
and
cmpsl
lods
lds
push
xlat
into
pop
fldl
mov
inc
push
scas
mov
mov
cmp
mov
xor
ud2
or
inc
xchg
xor
and
mov
pop
repnz
mov
xor
adc
or
lods
lods
mov
adc
push
movd
adc
into
out
sbb
sbb
or
pop
pusha
sbb
add
repz
fmull
fidivrl
out
dec
fcomp
jne
test
dec
mov
add
sbb
sub
das
std
xor
adc
mov
mov
rclb
pusha
hlt
outsl
push
mulb
mov
xchg
loop
sub
ret
icebp
enter
pop
lods
and
cmp
xchg
in
mov
or
jmp
inc
mov
jb
mov
lods
mov
out
int
daa
cmp
and
inc
subb
pop
inc
inc
sub
adcl
das
les
xchg
add
outsb
orl
xchg
jle
mov
push
lret
xor
push
mov
roll
in
sbb
mov
inc
add
mov
les
dec
fs
lods
sahf
and
adc
mov
cmp
jnp
jle
frstor
mov
push
add
mov
dec
mov
cmp
push
sub
adc
jns
nop
jnp
dec
or
std
pushf
xchg
ficomps
int3
stos
mov
push
mov
in
lret
outsl
xor
xor
jmp
add
xlat
jp
cmp
jae
add
mov
js
sbbl
adc
dec
mov
lret
pop
xor
stos
or
adc
inc
xor
mov
clc
add
pop
lea
push
loopne
int
fsubrp
inc
cld
cli
or
scas
fs
add
inc
je
or
inc
jle
into
inc
ljmp
in
repz
aaa
and
jnp
das
mov
cmp
iret
cmp
jns
aad
pop
xlat
pusha
mov
je
adc
add
lock
mov
add
pushf
pop
in
mov
fsts
aad
mov
cltd
push
sbb
push
jle
or
movsl
aas
sub
movsb
jmp
loop
push
xor
jecxz
jle
inc
sub
pop
dec
push
add
push
call
fdivl
xor
shl
mov
outsb
xor
xchg
xchg
xor
mov
mov
addb
out
jo
stos
cmpsl
call
aas
daa
pop
sbb
aad
xor
cmpl
sbb
adc
hlt
fwait
xor
icebp
push
lret
cmp
lea
sub
jl
stos
hlt
push
test
push
add
hlt
imul
and
dec
xchg
jp
call
xchg
test
std
cmp
enter
fistl
and
lret
jl
ljmp
push
push
pop
adc
data16
add
sub
aaa
aas
inc
push
insb
movl
and
orb
push
fnstenv
rcrb
lret
dec
js
dec
pop
inc
movl
insb
jge
into
mov
int3
subl
repnz
iret
mov
aad
aam
jb
cmp
mov
iret
pop
sbb
pop
dec
sub
lret
pop
pop
sbb
ret
adc
in
pop
adc
mov
punpcklwd
dec
imul
push
stc
xor
jo
fisubrl
cmp
or
mov
sbbb
sbb
mov
lods
enter
xchg
dec
out
shlb
pop
aam
jl
frstor
lret
sti
sub
insb
icebp
and
imul
arpl
sub
test
insb
xchg
mov
ret
aam
sub
bound
mov
dec
cmp
imul
mov
xchg
mov
pop
and
add
adc
fwait
adc
adc
cld
nop
sub
sbbb
xchg
xchg
repnz
push
jg
decb
pop
adc
adc
xchg
std
mov
shlb
mov
adc
mov
cmp
movsb
orb
in
aas
mov
mov
insb
lcall
jo
add
icebp
jb
call
insb
inc
stos
aam
dec
jge
enter
and
and
sub
std
jg
adc
adc
or
mov
lock
add
popf
or
bound
pop
nop
mov
clc
sti
pop
ljmp
idivl
loope
pop
sub
mov
xlat
jmp
pop
in
mov
mov
sahf
aam
fsubrs
int
sbb
cmc
pop
imulb
ds
xchg
mul
cmp
lret
dec
out
push
mov
sub
jmp
sub
imul
repnz
lods
mov
movsb
mov
jge
shrb
xchg
mulb
xchg
out
xor
stos
mov
xor
in
mov
sbb
mov
lahf
ja
out
ljmp
lea
mov
or
sti
ja
js
jno
adc
jp
jle
cmp
jmp
and
nop
movsb
jmp
cli
loopne
sarl
inc
inc
testl
jnp
and
mov
cmpsb
test
and
aad
push
inc
add
push
sahf
jp
cld
dec
pushf
inc
and
mov
mov
push
test
int3
int3
add
push
sbb
sahf
xchg
out
dec
pop
inc
out
popa
mulb
xor
dec
test
sub
mov
sbb
jno
sbb
mov
or
mov
loop
jae
mov
and
push
dec
mov
add
xchg
xor
std
sbb
and
clc
sar
cmp
dec
scas
imul
push
mov
pop
pop
fiadds
shl
iret
pop
lret
mov
les
xchg
insb
scas
jnp
push
mov
xor
out
mov
mov
mov
jb
jae
inc
js
leave
add
std
les
insb
lret
fs
dec
sbb
shl
sbb
into
popa
or
push
mov
data16
mov
insb
data16
xchg
xchg
sbb
mov
adc
jg
mov
repz
idivl
aam
ret
es
arpl
in
jg
cld
xor
dec
adc
out
mov
sahf
dec
ds
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
jmp
movsl
mov
sbb
scas
mov
nop
pop
notb
sub
addl
fildll
cwtl
mov
push
aad
cmp
add
icebp
fcomps
xchg
ret
sub
fsubrl
xchg
mov
or
in
aam
or
sub
pop
fadd
mov
jg
pop
or
sarl
cmp
rcl
inc
std
push
shrb
scas
sbb
add
or
test
xchg
es
fstps
pop
ffreep
stc
lds
dec
and
loope
nop
ljmp
nop
rcrl
lea
sbb
ret
pop
mov
fs
fwait
push
ja
xchg
add
in
cltd
jb
xchg
add
push
cmp
mov
dec
roll
jecxz
movsl
movsb
inc
movsl
insl
mov
dec
dec
pop
sbb
jo
int
jp
push
in
sub
shl
mov
repz
adcl
pusha
pop
or
aas
fs
xchg
test
mov
or
pop
sar
fidivrl
in
shr
pop
mov
sbb
sub
icebp
jge
xchg
push
shll
jnp
les
sbb
imulb
xchg
jae
icebp
lcall
xchg
pusha
mov
sahf
push
pusha
aad
popf
cwtl
aam
xchg
xchg
xchg
inc
aas
add
add
test
or
xchg
mov
pusha
inc
fsubs
mov
mov
loopne
add
adc
mov
bound
ret
cmp
arpl
aad
pop
ja
push
cmc
test
in
fisttps
arpl
call
cwtl
lock
dec
stos
mov
scas
pusha
roll
mov
push
popa
inc
cwtl
ljmp
mov
and
cmpsb
add
jo
loop
mov
push
sub
adc
cmpsl
mov
adc
shlb
cld
aas
inc
jg
xor
xchg
pop
adc
or
rclb
test
lcall
cli
movl
outsl
mov
or
dec
or
xor
jge
lods
push
out
testl
mov
push
aam
mov
movsl
stos
pop
inc
jmp
xchg
je
ret
inc
lea
mov
repz
jae
cmp
pop
mov
mov
fisttps
dec
adc
fs
xor
push
and
mov
mov
xchg
cld
sbb
mov
lahf
adc
ret
insl
pop
dec
mov
mov
cmpsl
adc
pushf
daa
popf
xlat
dec
inc
icebp
test
dec
repz
jbe
dec
jo
lea
ror
push
sarl
mov
rorl
scas
lods
mov
sbb
push
enter
call
out
insb
pop
insl
lods
and
adc
rolb
pop
in
mov
cmp
push
icebp
xchg
icebp
sbb
enter
in
jl
jbe
pop
push
out
adc
push
push
icebp
cltd
dec
xor
sub
lahf
test
cmpsl
mov
jle
xchg
fsubr
and
xchg
movsl
test
loopne
icebp
pop
bound
sub
jnp
stos
inc
leave
or
sub
and
inc
ret
mov
pushf
enter
test
out
js
ja
adc
nop
or
dec
pusha
ja
xor
pop
jl
sbb
push
or
jno
inc
adc
mov
sub
notl
adc
stc
lret
stc
jae
lods
mov
adc
fxam
mov
jae
out
jl
push
jnp
push
push
fdivs
gs
ljmp
jecxz
jne
sub
mov
sbb
int
mov
adc
stos
loopne
into
daa
xor
jne
andl
dec
cltd
imul
inc
outsb
aad
mov
arpl
and
inc
leave
popf
test
pop
loop
pop
das
lods
pop
sub
cmp
scas
cmp
aaa
mov
sub
and
mov
arpl
ror
inc
cmp
loopne
lcall
jecxz
movsb
push
mov
sarl
mov
rorl
insb
js
mov
cmp
pop
push
fmull
rorl
dec
out
cli
dec
xchg
add
xorb
ds
sbb
aam
xlat
push
fucomip
or
pop
js
lret
pavgb
jno
pop
jb
aam
mov
fs
aam
push
fdivl
gs
mov
mov
cmc
and
inc
rorl
xchg
add
add
pop
into
clc
adc
pop
sub
mov
mov
push
sahf
inc
add
xchg
in
mov
adc
daa
sahf
add
gs
add
sub
sarb
js
es
pusha
lds
xor
mov
jnp
or
incl
ljmp
or
inc
pop
shlb
adcb
scas
lds
dec
sub
insl
fiaddl
test
cmpsl
cmpsb
loop
xchg
pop
sbb
mov
jle
push
test
xlat
inc
jbe
into
dec
sbb
fucomp
sahf
das
xchg
or
jbe
nop
mov
stos
leave
push
sub
push
cli
daa
xchg
mov
leave
lret
dec
shrb
push
push
js
lahf
and
cmp
sub
outsb
inc
int
mov
lods
insl
sub
push
xor
out
add
cs
decl
sbb
orb
and
push
repz
inc
pop
sbbb
clc
dec
movsb
fsubr
lahf
add
jns
rolb
ss
stos
jno
lock
mov
test
mov
roll
pop
adc
shlb
push
mov
in
mov
xchg
inc
divl
jl
jge
xor
mov
sub
fs
cs
adc
mov
scas
mov
daa
cmpsl
call
sbb
lret
aam
or
mov
jg
addr16
cmp
xor
addr16
pop
movsb
repnz
or
iret
mov
adc
xor
in
pop
fs
aaa
mov
mov
cmp
push
fsub
iret
sub
adc
cmp
inc
mov
adc
stc
cmp
int3
jl
cmc
shrl
mov
push
jp
dec
mov
imul
data16
fidivrl
pop
test
out
or
dec
push
mov
orl
js
jg
fisubrl
lods
inc
push
ret
loop
pop
leave
inc
inc
cmp
sub
lcall
insb
cmpsl
add
insl
xchg
imul
daa
mov
aad
fnstsw
mov
mov
bound
out
popf
fwait
mov
xor
aad
rcl
inc
push
adc
sub
push
leave
cmc
stos
or
jbe
pop
out
cltd
shrb
stc
sbb
xchg
push
jo
xor
add
xorb
in
repz
push
notb
inc
repnz
std
adc
iret
xor
pusha
xchg
fdivr
leave
mov
outsl
jb
clc
jmp
lock
mov
pop
dec
movsb
mov
in
dec
mov
jp
sar
jp
fucom
xchg
inc
fbld
addr16
sub
or
inc
xchg
add
push
movsl
or
push
test
cmpsl
inc
sbb
push
sti
mov
xorl
sub
mov
lea
or
int3
pop
test
in
daa
dec
das
push
mov
mov
sbb
fdiv
pop
out
hlt
dec
pop
inc
inc
ret
aaa
popa
mov
mov
cld
mov
test
inc
pushf
jo
push
pop
repz
sub
fldl
adc
mov
arpl
in
jae
ficompl
ja
scas
or
pop
fs
lret
inc
scas
xchg
fidivrl
sti
mov
sbb
add
sub
mov
fsubrs
fadd
lds
and
loope
mov
aad
xchg
addr16
fadd
repz
xor
push
jne
ret
cli
dec
cmc
dec
cmp
push
imul
and
mov
push
push
xchg
pop
cltd
int3
inc
shll
jmp
imul
pop
sbb
ja
icebp
sbb
mov
jmp
inc
js
pushl
js
out
daa
mov
arpl
xor
dec
int3
cmc
subb
push
push
fildll
cwtl
in
mov
mov
cmp
call
xchg
scas
les
push
jecxz
adc
xchg
mov
mov
jg
arpl
out
jo
adc
lret
push
mov
pop
int3
dec
jge
push
sub
xchg
lods
adc
mov
mov
inc
jae
add
call
adc
and
jmp
pushl
dec
sub
popa
dec
pusha
out
inc
push
push
pop
jge
jns
sbb
mov
mov
cli
add
subb
xchg
in
ja
xor
or
aad
bound
popa
int
lds
mov
pop
fidivrs
cmp
int
flds
popa
cmpsl
mov
mov
jp
pop
jmp
xchg
iret
mov
and
inc
and
out
cmpb
xchg
js
clc
out
idiv
lahf
xor
xor
mov
outsb
clc
bound
inc
push
aad
mov
sbb
loop
pusha
inc
ss
adc
mov
icebp
push
and
sbb
out
xchg
mov
push
inc
push
add
sahf
mov
and
das
into
shll
sti
mov
call
mov
stc
push
xchg
xchg
pop
fwait
xchg
xor
sbb
or
jl
jo
jle
and
daa
out
ss
mov
ret
cmp
iret
imul
shlb
push
je
xor
xchg
adc
js
into
out
fbstp
cmpl
add
jne
xchg
push
cmp
mov
cmp
sarl
and
cmp
mov
pushf
int3
pop
aad
dec
iret
jae
out
pop
cli
dec
pop
int3
cs
sbb
jne
adc
mov
push
add
xor
fs
cmp
int
aaa
dec
xor
aad
in
push
js
ss
xchg
ljmp
fs
push
mov
daa
sub
add
push
pop
xor
xchg
pminsw
xor
out
sbb
aam
xchg
or
sti
into
inc
xor
xor
mov
ljmp
xor
roll
xchg
nop
mov
inc
stos
and
xchg
adc
mov
dec
inc
andb
mov
mov
mov
xchg
add
inc
inc
fcmovbe
pop
cmpsb
movsl
outsl
push
add
fnstsw
push
mov
mov
xor
dec
jg
repz
es
aas
adc
jnp
pop
shrb
bound
lods
sahf
subl
ja
lds
cmp
cli
mov
xchg
loop
ret
sbb
adc
int
sarl
es
das
pushf
data16
mov
ja
cmp
mov
cmp
cmp
push
cwtl
insb
insb
test
inc
loop
adc
sub
pop
dec
and
mov
stc
fimuls
jecxz
les
push
sub
movsb
adc
xchg
add
mov
out
fwait
dec
and
jle
lahf
ja
pop
lahf
rcr
addb
movsb
jecxz
dec
pop
jno
pop
cmp
test
jmp
addr16
test
inc
lods
das
js
movsb
mov
jnp
cmp
push
test
mov
pop
aad
jle
dec
mov
inc
mov
cmp
fs
push
int
cmc
faddp
push
js
jns
xchg
enter
add
xor
add
stc
dec
push
ja
icebp
inc
inc
loope
sub
fldl
adc
aaa
imul
jo
sbb
inc
sub
mov
in
push
push
in
xor
fcmovnu
lods
jge
sub
bound
add
cs
test
cmp
cwtl
daa
push
mov
pushf
push
jmp
js
sti
jmp
addl
ret
pop
lcall
jge
lret
repz
jo
lret
lcall
mov
cmp
pop
adc
adc
jl
dec
inc
xchg
push
sbb
in
push
xlat
cmp
and
insb
cmp
sbb
into
pop
inc
adc
or
mov
mov
jecxz
jle
rcr
push
push
out
lahf
jns
ja
outsl
jbe
dec
sbbl
clc
add
push
xchg
and
inc
cmc
jp
cmpsb
insb
in
stos
xchg
or
and
cmpsl
push
lods
cmc
pop
push
adc
jbe
sub
xchg
sbb
jmp
fdivr
mov
add
or
psubq
lods
aaa
and
xor
sbb
mov
dec
jecxz
sets
imul
clc
or
cmp
push
and
mov
pop
mov
repz
shrl
xchg
mov
imul
daa
xor
cltd
outsb
jne
fwait
push
jg
insl
je
cmp
inc
mov
loop
adc
scas
xchg
mov
mov
imul
inc
mov
lahf
cmp
cmc
fidivrs
ret
inc
fisubl
dec
or
jb
jbe
shll
inc
push
push
sub
ficoml
cmp
orl
ljmp
cmp
dec
nop
pop
ficompl
mov
pop
or
fs
mov
pop
or
popf
push
xor
sub
and
xor
jbe
cmpsl
adc
mov
xchg
outsb
ret
cwtl
pop
jb
nop
pop
xchg
dec
xor
mov
jl
mov
xchg
fbld
mov
push
xchg
pop
clc
testb
into
jge
movsb
shrl
adc
sub
adc
cltd
cltd
xor
pushf
push
cmp
push
mov
mov
lock
or
xchg
loopne
iret
adc
outsl
xor
jmp
pop
pop
mov
ds
popa
pushf
add
jg
test
bt
fadds
imul
push
and
gs
hlt
das
mov
mov
add
fs
xor
imul
and
in
inc
sbb
loope
add
in
cmp
pop
mov
imul
pusha
jbe
mov
mov
add
lods
popf
idivb
inc
mov
jbe
std
outsl
sbb
cmpsb
mov
fldenv
mov
loop
mov
sub
adc
mov
cmp
mov
in
xchg
std
sbb
std
or
dec
cmc
das
into
jns
push
or
pop
and
dec
test
fistpl
test
jecxz
in
addr16
mov
pop
cli
push
sbb
adc
clc
shr
lret
out
push
cmpsb
xchg
and
sub
inc
dec
mov
shr
jmp
add
repnz
inc
or
test
ja
fwait
sbb
jae
in
add
jo
out
jmp
inc
in
jo
xor
scas
rol
adcb
into
mov
or
outsl
aad
cmp
mov
je
and
out
es
xchg
xchg
test
lds
pop
std
cmp
or
and
and
jne
stos
jnp
call
in
test
dec
jp
aam
add
mov
jno
mov
cltd
in
lods
nop
push
push
mov
sbb
bound
lret
pop
imul
push
inc
add
test
popa
push
or
cli
sub
popa
movl
out
pop
mov
sarb
mov
loop
les
jmp
mov
js
pop
fists
sub
stos
stos
fidivs
stos
mov
imul
dec
cmc
push
ljmp
push
aas
pusha
lds
stos
addr16
aam
adc
sbb
mov
adc
pop
pop
xor
push
push
adcl
push
mov
loope
sub
test
push
add
xchg
dec
lcall
cld
xchg
arpl
rol
mov
sbb
dec
loopne
leave
sub
push
loop
mov
dec
out
lea
jo
adc
std
push
jmp
xor
sbb
inc
pop
xchg
inc
roll
pop
out
daa
icebp
jp
sbb
inc
push
popa
test
xor
test
loop
add
mov
jecxz
and
and
nopl
adc
push
mov
cwtl
inc
aad
xchg
loope
xchg
sbb
pop
dec
mov
sbb
out
mov
scas
push
mov
stc
push
adc
sub
inc
int3
mov
ljmp
sarb
and
sbb
xor
lret
xorb
loop
inc
xchg
into
sub
inc
sbb
cmc
xlat
and
mov
cwtl
jb
or
xchg
mov
stos
xor
clc
mov
xchg
mov
add
cmp
cmp
notl
fcomps
addr16
push
out
stc
jnp
jnp
movsl
decb
inc
xchg
cmpsl
mov
and
scas
pop
pop
setae
pusha
xchg
cld
xchg
shl
xchg
mov
dec
loopne
fs
adc
lock
clc
xchg
push
aas
andb
lahf
inc
iret
lods
inc
adc
xor
or
ucomiss
jg
adc
lock
jmp
sbb
lret
shll
lret
faddl
jae
xchg
mov
inc
movsb
loope
adc
jecxz
test
push
or
xor
enter
sub
mov
push
into
jle
inc
mov
je
xchg
inc
out
sahf
inc
adc
fs
scas
daa
aad
stos
adc
cwtl
inc
add
sbb
pop
lods
and
lea
push
aaa
push
jg
adcb
mov
into
cmp
jge
insb
push
aas
xor
insb
dec
or
test
sbb
arpl
insl
jno
cmovge
iret
fisubl
ret
jae
repnz
jg
adc
pop
aas
pop
fcmovu
ss
ret
shrb
dec
jmp
mov
gs
sbb
fdivl
cmpl
cmp
jg
cmpb
movsl
pop
popa
jnp
mov
jg
adc
mov
inc
jae
xor
xor
test
jge
push
push
jg
mov
dec
cmpsl
std
repnz
push
push
aas
test
adc
push
mov
sub
xlat
aam
lret
xchg
dec
lds
int3
fidivrs
cmpsb
fistpl
push
adc
jecxz
cmp
ds
jle
testb
and
imull
lret
loope
cmp
mov
hlt
aas
fisubrs
neg
sbb
arpl
mov
push
sbbl
xchg
and
enter
mov
mov
and
jb
jg
push
cmp
nop
jne
and
fldt
sub
or
es
inc
test
add
mov
mov
xchg
lods
in
mov
mov
sub
imul
ds
jp
adc
out
xchg
mov
movsb
sbb
mov
out
out
addr16
daa
pushf
pop
and
rorl
push
aad
fcoml
xchg
mov
loope
sbb
dec
mov
xchg
mov
inc
sbb
adc
adc
dec
bound
rcrb
pop
xor
and
inc
push
adc
push
gs
es
mov
mov
mov
aaa
mov
pop
sub
or
sub
cmp
inc
mov
jecxz
cmpsl
jno
push
push
bound
pusha
daa
fidivs
sbb
out
sbb
int
mov
stc
fdivl
ds
ds
inc
pop
ja
sub
fwait
cmp
xchg
js
aas
bts
dec
add
mov
xor
popf
cltd
je
mov
into
je
test
push
and
sub
sbb
pop
sub
dec
cmc
inc
xchg
push
in
popf
inc
cltd
cmp
mov
sbb
sub
jb
insl
lock
jb
xor
bound
and
fildll
ss
sbb
ljmp
xor
mov
push
and
push
push
cwtl
scas
lock
push
insb
iret
scas
xchg
mov
xchg
adc
in
fwait
outsl
cvtdq2ps
xorl
int3
add
inc
out
pop
and
xchg
add
sbb
imul
sbb
push
imull
pop
imul
mov
gs
lods
daa
jp
sub
stos
fdivrs
push
test
imulb
dec
add
icebp
mov
mov
dec
pusha
xchg
fstl
mov
push
jmp
mov
mov
and
push
jecxz
dec
xor
lods
in
xchg
jno
cld
cmp
dec
aas
pop
adc
int3
les
shl
or
push
mov
addr16
das
jno
sub
lods
insl
add
cli
jmp
int3
test
xor
out
pusha
add
divb
dec
jg
mov
and
gs
stos
into
xchg
sub
and
dec
inc
jae
cmp
loopne
aaa
aam
out
dec
xor
xchg
mov
push
adc
xor
in
stc
fisubrs
xlat
mov
aas
jp
ror
enter
jb
and
mov
inc
mov
xorb
lods
jo
test
loop
push
mov
push
pushf
dec
sar
inc
scas
mov
cmp
rcll
push
or
xchg
bound
pushf
mov
or
mov
dec
mov
fldenv
mov
cmpsl
cmp
pop
add
xorl
lahf
mov
cmpsl
mov
mov
ja
ret
in
jbe
mov
or
lahf
es
inc
jno
push
pushl
and
sub
jp
mov
aad
mov
cmp
arpl
cmp
inc
cmp
outsb
pop
jnp
dec
jp
push
fdiv
pop
ret
in
shrl
out
jae
scas
jl
jecxz
shrl
int
sub
xorb
fistl
ljmp
sub
mov
mov
sbb
movsb
insb
mov
jmp
arpl
loope
sahf
fcmovbe
test
mov
cli
pop
xchg
subl
gs
stos
push
push
out
sbbl
ljmp
push
push
fdivs
daa
test
lret
rol
inc
fdivrp
mov
adc
aad
inc
add
jnp
and
bswap
addr16
mov
rcl
sub
mov
test
or
adc
push
sbb
cmp
inc
imul
loope
dec
mov
sub
inc
leave
in
xchg
add
xchg
mov
jae
inc
pop
cmp
adc
mov
inc
popf
out
xor
jnp
push
cltd
dec
fistl
movsl
xchg
or
or
add
cwtl
adc
xlat
imul
gs
sub
pushf
bound
loop
cli
les
mov
lds
fistpl
jecxz
insl
insb
adc
inc
sub
mov
xchg
pop
pop
loopne
iret
movsb
aaa
iret
push
inc
daa
mov
sbb
adc
mov
addr16
sub
push
movsl
in
or
mov
or
xchg
push
or
dec
sarb
stc
or
in
repnz
cmpb
mov
mov
xchg
rolb
cs
negl
xchg
cs
sub
stc
into
cmpsb
jmp
adc
pop
mov
add
mov
mulb
or
arpl
repz
sub
pop
incl
or
mov
repnz
dec
dec
fnstenv
fnstenv
and
xor
jae
iret
imul
pop
xchg
and
repnz
andb
ds
ret
mov
mov
xchg
mov
xlat
xchg
dec
pushf
push
push
outsb
mov
mov
pop
dec
stos
or
movsb
sub
pop
add
mov
out
mov
scas
int
ljmp
sbb
pop
movsb
inc
icebp
dec
xlat
sub
not
sbb
lcall
and
idiv
mov
sti
jge
jbe
fwait
loope
xchg
repnz
in
mov
loopne
out
dec
imul
jae
popa
out
adc
scas
inc
popl
std
cmp
add
mov
mov
aaa
sbb
pop
sub
leave
outsl
lcall
xchg
sub
xor
xor
adc
and
push
lahf
out
inc
stos
and
call
add
or
cwtl
add
fcomip
mov
mov
out
sbb
int
ret
xchg
notb
push
cmovs
cmp
push
roll
call
adc
lcall
insb
jbe
rolb
js
test
fwait
testb
js
and
xchg
mov
mov
nop
ret
push
ret
push
push
xor
fsub
int3
lahf
add
ss
incl
cwtl
mov
leave
pushf
pop
mov
sub
sub
out
or
outsl
and
or
adc
leave
inc
dec
mov
sub
jbe
fs
inc
popf
mov
jo
movb
cmpsb
mov
adc
and
mov
hlt
pop
mov
es
mov
fwait
add
int
dec
inc
mov
cli
add
outsl
movsb
lret
daa
into
stos
lret
icebp
dec
loopne
inc
in
ss
push
repz
jle
adc
sbb
mov
nop
and
and
movsl
dec
scas
ss
popa
cmc
xor
std
mov
jg
ret
sub
jno
incb
sarb
jmp
xchg
pusha
adc
sub
in
pop
stos
mov
sti
int3
loopne
arpl
outsb
outsb
adc
fsubrl
cmp
sbb
pop
in
pop
lcall
dec
add
fstpl
lock
xchg
mov
pop
int
loopne
add
aam
addl
fwait
dec
sbb
icebp
lcall
mov
add
sbb
sahf
jnp
sbb
clc
pop
pusha
fdivl
or
xchg
or
fs
sub
roll
adc
fmull
subb
jae
ffreep
jge
imul
adc
lcall
mov
push
adc
cmp
mov
inc
fwait
repnz
lock
sbb
dec
mov
mov
mov
enter
xchg
shrb
mov
mov
or
subl
pop
xchg
iret
out
rcl
jno
mov
push
sub
inc
cmp
lcall
fwait
ss
rclb
lods
out
mov
sbb
sbb
mov
shll
jae
test
daa
icebp
sarb
and
lret
cmpsl
cltd
icebp
pop
clc
pop
sbb
bswap
imul
inc
cld
lret
xchg
in
inc
jo
pop
xchg
mov
mov
dec
addr16
cmc
fcoml
popa
jp
jno
mov
and
inc
or
push
add
das
and
dec
sub
pop
jp
ds
or
mov
daa
cltd
sahf
cmp
sub
repz
mov
in
sahf
jecxz
and
cmp
stos
cmp
jecxz
aam
stos
dec
mov
dec
cmp
cmp
lock
xchg
xchg
mov
test
stos
je
imul
dec
fstpt
add
pop
cmpb
lahf
repnz
add
and
adc
fiadds
mov
push
js
mov
nop
and
xchg
orps
jo
xchg
addb
adc
add
scas
mov
mov
pop
cmp
in
je
jbe
mov
movl
leave
cs
loope
aad
dec
xchg
jne
out
pop
xchg
inc
rorb
clc
loop
jae
sbb
xor
ljmp
pushf
repz
les
test
cmp
push
repnz
mov
lds
dec
push
and
clc
jp
and
loopne
scas
push
or
les
mov
add
adc
sbb
xorb
pushf
jb
push
cli
mov
aad
pop
mov
fs
push
cld
xchg
movsl
mov
xchg
mov
mov
cmp
or
sub
sbb
jle
inc
addr16
sbb
pop
insl
fsubl
cwtl
popl
clc
fcmovnb
xlat
mov
rcrb
pop
add
loopne
lock
pop
loop
xchg
je
in
push
pushf
lods
int
bound
push
inc
lods
pop
xchg
sbb
push
popf
in
and
dec
pop
xchg
xchg
arpl
fimuls
ss
dec
jns
movsb
jno
cmp
aad
and
inc
cmpsl
sbb
popf
leave
repz
adc
cltd
xchg
inc
inc
bound
fadds
push
dec
aas
fcomps
sbb
push
icebp
adc
and
cmpsb
sub
imul
loopne
adc
push
repnz
mov
mov
aaa
cmp
jb
sub
ret
mov
lret
out
dec
push
cmp
add
push
je,pn
jo
lcall
imul
and
ds
in
jp
lahf
push
lea
lea
mov
jne
sbb
and
rclb
mov
push
add
pop
inc
data16
dec
sub
push
xchg
sub
or
stc
lds
ret
movsb
ret
mov
or
mov
add
aam
sbb
or
test
xchg
addb
pop
inc
arpl
adc
cmp
imul
dec
add
aaa
cmpsl
mov
movsb
mov
cmpsb
xchg
add
call
scas
xor
sbb
scas
bound
sub
insl
inc
mov
add
xlat
inc
xchg
pop
inc
int
sub
and
insl
xchg
inc
or
push
movsb
repz
in
or
mov
xchg
jno
inc
xchg
jl
mov
adcb
lret
sub
loopne
add
stc
aad
popa
sub
imul
push
jl
push
fimuls
xchg
push
push
mov
outsb
jl
inc
out
icebp
shll
insb
jbe
popf
ds
cmp
js
mov
fldenv
sub
popa
jo
iret
sbb
adc
push
push
cwtl
shll
jp
mov
lret
jno
shlb
xor
test
in
cwtl
jg
scas
roll
out
out
fdivrs
or
pop
pop
fldl
and
push
sbb
push
push
xor
dec
mov
iret
outsb
fdivl
les
popa
out
stos
xor
fstpl
daa
dec
leave
in
jns
mov
fdivp
js
mov
lret
or
pop
xor
bound
xor
scas
testl
in
dec
dec
mov
ret
pop
jbe
ret
adc
push
repnz
or
push
adc
push
jo
int
aam
pop
or
inc
push
lret
cmp
pop
or
outsl
xor
sub
cld
enter
inc
outsb
sti
in
daa
sub
dec
imul
leave
mov
jmp
push
adc
mov
ret
mov
jmp
ret
xchg
pushl
inc
repz
inc
push
dec
mov
push
fbstp
sub
inc
and
jmp
sbb
mov
or
leave
xchg
mov
fwait
adc
and
or
adc
dec
rclb
sbb
xchg
sbb
sub
in
jmp
mov
rcrb
sbb
mov
push
js
cmp
cmp
pop
fwait
pop
js
filds
cld
enter
and
mov
cwtl
add
pushf
and
in
je
ret
hlt
aam
jno
push
push
push
push
lcall
sbb
mov
push
arpl
lods
mov
ss
inc
add
or
mov
xchg
aam
push
dec
int3
mov
insl
mov
pop
fnstenv
pop
sub
outsl
mov
adc
pop
or
xor
jns
xchg
push
clc
jp
mov
adc
pop
dec
imul
mov
popf
loopne
cmp
xor
pop
xor
and
cli
rcrl
mov
in
lahf
inc
sarb
addl
jo
mov
test
scas
ficoml
mov
das
push
data16
out
cmp
sbb
fdivs
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jle
jmp
call
cmpl
jb
movl
push
adc
movl
subl
mov
push
mov
adcl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
orl
add
andl
mov
mov
addl
test
movl
je
movl
cmpl
je
cmpl
jle
jmp
push
call
mov
dec
mov
jmp
mov
sbb
mov
addl
mov
mov
xor
xor
add
and
mov
mov
and
xor
mov
and
mov
add
sbb
mov
mov
xor
mov
or
mov
add
or
mov
orl
mov
xor
mov
xor
mov
add
mov
sub
sbbl
lea
xor
xorl
xor
movl
cmp
movl
je
xorl
mov
subl
xor
adcl
add
cmp
movl
jne
pushl
call
mov
not
mov
adcl
mov
addl
xor
add
movl
cmp
movl
je
pushl
sbbl
pushl
call
mov
xor
mov
xor
mov
xor
add
movl
cmp
movl
je
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
jmp
mov
add
sbbl
mov
mov
mov
sbbl
add
orl
mov
jmp
push
mov
andb
test
adc
addl
in
or
push
push
and
inc
or
stos
or
mov
mov
mov
dec
test
in
aad
jae
push
push
les
add
pop
sbb
push
xor
aas
or
jb
xchg
test
insb
push
or
pusha
xor
in
ljmp
test
stos
loop
lds
xchg
fsubl
xchg
xorb
lods
call
adc
dec
es
dec
mov
push
arpl
int
idiv
adc
jp
mov
or
inc
lds
mov
fistpl
cli
sub
mov
aaa
lods
pop
clc
xor
idiv
aam
jg
test
jle
pop
xchg
and
iret
fwait
mov
pushf
mov
xor
pop
dec
jns
test
cmp
sbb
and
imul
testb
xor
insb
gs
push
movsb
scas
push
push
jne
dec
xor
mov
scas
pop
insl
mov
sahf
sbb
sbb
sub
popf
sub
dec
lahf
test
and
dec
test
mov
icebp
ljmp
insl
adc
or
xchg
test
pop
or
pusha
pop
mov
mov
cmp
sub
lcall
sub
xchg
dec
pop
mov
ffreep
mov
pop
arpl
aas
or
xchg
movsl
ja
stc
sahf
dec
mov
inc
push
jg
out
pop
scas
mov
lcall
pusha
pop
shll
xor
fstl
out
pop
dec
cmpb
add
xchg
sub
mov
cli
adc
add
mov
ljmp
iret
xchg
cmp
test
gs
out
in
stos
or
lock
mov
adcl
cltd
sti
in
mov
inc
mov
pushf
in
jmp
mov
xchg
ret
jmp
sub
js
mov
dec
xor
je
ds
shr
test
cmp
inc
pushf
loope
xchg
and
ljmp
and
mov
pop
cmpsb
in
sbb
sahf
push
cld
jl
out
cmp
and
mov
push
je
and
and
xlat
loop
or
or
inc
cld
fnstenv
aaa
loope
sahf
and
nop
jae
shlb
sti
xor
mov
xchg
xchg
jnp
jnp
inc
cmpsb
jbe
push
lods
or
in
lea
dec
fimull
pop
lcall
call
stos
imul
aas
mov
xlat
jbe
iret
addr16
mov
and
into
aam
xchg
jge
and
jbe
or
push
outsb
subl
dec
sbb
xor
scas
dec
sub
cmp
fwait
xlat
in
xchg
out
dec
mov
stc
xor
mov
and
sbb
lock
push
pop
jo
push
scas
sahf
lods
test
test
lahf
adc
pop
popa
xchg
cmp
fdivs
aaa
mov
fnsave
lods
push
jns
adc
and
das
out
scas
mov
out
inc
daa
jge
pop
and
mov
cmpb
pop
das
fldl
in
xor
sbb
test
and
repz
fidivs
inc
mov
push
cltd
sti
iret
cmc
popl
scas
ret
mov
and
lahf
and
das
and
hlt
sbb
mov
cmp
xchg
mov
fisubrl
jg
scas
movsl
mov
xor
test
cs
insl
int3
push
xor
orl
lock
adc
sbb
mov
loope
mov
les
popf
cmp
jns
mov
mov
mov
sti
imul
inc
jg
mov
pusha
imul
call
xor
lret
mov
inc
push
pop
subl
pusha
ss
movsl
std
scas
pusha
inc
rolb
xchg
popa
mov
repz
in
scas
push
int3
fstps
popf
cmpsb
pop
xchg
cmp
in
sbb
mov
mov
fldcw
ret
pushf
iret
and
mov
inc
mov
adc
je
add
adc
pop
daa
fisttps
andb
adc
out
out
or
and
int3
shrb
and
std
mov
out
jae
sti
repz
aaa
imul
jb
xchg
arpl
mov
imul
pop
mov
out
mov
fstps
mov
icebp
sbb
xchg
add
sbb
cmp
les
out
loop
dec
sbb
xchg
jg
loopne
cltd
cmp
xor
out
test
and
xlat
lret
ret
lcall
in
cmp
out
mov
pop
int3
fsub
jo
sbb
aam
jp
pop
jp
jecxz
adc
out
pop
int
push
dec
outsl
test
stos
pop
addl
sti
outsb
push
insb
shll
xchg
inc
lret
insl
rcr
cmc
sbb
es
adc
in
jo
dec
mov
fistpll
sahf
sub
jecxz
jmp
jp
or
aaa
cmpsb
jl
jo
mov
xchg
cmc
fs
sub
pop
push
pop
hlt
dec
xchg
xor
mov
lret
cmpsb
inc
mov
je
cmp
test
xchg
sbb
sbb
gs
out
jne
loope
repnz
ja
cmpsb
orl
iret
push
dec
testb
shrb
fsubl
cltd
sub
sti
jns
inc
sbb
jecxz
sub
mov
xchg
std
int3
loop
out
mov
ss
out
adc
cld
xor
and
gs
cld
daa
pop
mov
call
sbb
loope
adc
mov
outsb
in
push
jp
lds
mov
ret
stc
inc
call
jl
ja
adc
mov
into
mov
or
movsb
stos
into
sub
sbb
mov
adc
add
push
loopne
divl
xor
add
xchg
push
or
xlat
mov
dec
sbb
fcompl
add
test
fs
sub
mov
sub
in
dec
cmpsl
fdivl
push
popf
sar
sbb
sub
hlt
scas
lods
cmpsb
jge
bound
insb
cmp
push
loop
ret
adc
pushf
mov
cmp
stc
sti
or
aas
sbb
sbb
or
jle
sahf
stc
pop
dec
into
mov
inc
inc
adc
add
or
shrl
stc
mov
stc
inc
iret
push
lret
leave
sbb
or
mov
push
pop
div
mov
jo
std
pushl
cmpsl
lea
mov
jecxz
fs
or
imul
movl
mov
add
faddp
xor
ret
loopne
xchg
cmp
jo
add
cld
movsl
cli
inc
and
hlt
out
sbb
mov
addr16
ja
xor
imul
jne
test
xchg
sub
mov
dec
jno
pop
mov
test
xchg
pushf
cwtl
push
cmp
cwtl
aas
xor
push
popf
jno
push
lcall
pop
xor
xor
pop
dec
and
xor
stos
insl
pop
pop
test
pop
or
stos
push
jg
cmp
popa
add
dec
repz
popf
mov
cli
jae
shlb
cmc
inc
test
sub
pushf
pop
out
cmc
lods
test
int
pop
or
jge
cmc
scas
repnz
mov
cmp
xchg
call
scas
aad
jg
mov
jmp
call
in
fnsave
mov
and
cltd
inc
imul
pushf
pop
dec
pop
insb
inc
xchg
lret
adc
add
dec
mov
xor
xchg
cmc
jno
mov
push
push
imul
pop
push
arpl
inc
adc
sahf
jne
and
xchg
dec
push
mov
push
rol
test
or
mov
sbb
neg
cmp
rorb
out
daa
outsl
xor
pop
in
add
pop
jae
or
mov
or
pop
loopne
jecxz
leave
popf
add
popf
mov
and
dec
test
fisubs
push
lea
mov
cmp
pop
cmp
xor
loop
in
vaddps
dec
sub
sbb
in
stc
cmp
jle
stos
sub
loop
add
adc
dec
xor
inc
xor
shll
mov
pushf
push
sub
movsb
mov
cmpsl
mov
inc
imul
int
inc
mov
test
icebp
fs
dec
cmc
adc
test
sub
arpl
filds
or
and
and
icebp
xchg
je
loopne
bnd
inc
nop
inc
xchg
into
mov
add
jge
or
jge
or
ret
xchg
iret
repnz
sti
pop
fwait
push
or
and
je
stc
dec
popa
pop
and
in
and
xlat
jecxz
icebp
ss
pushl
das
jg
mov
sub
aam
push
test
jne
pushf
cmpsl
fisttpl
popf
pop
jmp
and
test
xor
aas
mov
pushf
pop
cmpl
mov
dec
cwtl
xchg
movsl
out
pusha
dec
aad
test
push
je
shll
out
mov
sbb
hlt
sub
mov
pop
scas
add
arpl
and
pop
test
mov
dec
stc
adc
xchg
and
test
or
push
das
dec
mov
jle
add
jnp
stc
inc
mov
mov
inc
daa
cltd
mov
inc
sub
cmc
pop
jnp
mov
sbb
mov
push
aas
aad
ficoms
aad
movsl
mov
cmp
dec
mov
dec
sbb
jp
sub
sti
cwtl
mov
orl
scas
sbb
mov
stc
sub
and
adc
sub
repz
lods
pop
or
and
xlat
int3
test
sbb
movsb
xor
xchg
out
adc
adc
xorb
xchg
cld
repnz
lea
ficompl
jno
clc
fsubl
sti
rolb
mov
mov
inc
pop
jbe
mov
mov
xor
mov
lahf
jne
or
mov
mov
test
fisubrl
pop
adc
push
jmp
ja
ds
inc
push
pop
dec
js
sbb
ss
nop
and
scas
lds
xor
repz
pushf
mov
mov
fs
jo
cmp
pop
bound
pop
negb
jge
inc
ds
push
sub
js
cmp
outsl
loopne
pop
leave
test
icebp
adc
dec
mov
jae
std
fistpl
mov
daa
movsl
mov
inc
sub
mov
and
hlt
repnz
push
int3
cmpsl
adc
rorb
xchg
fistps
cmpsl
xlat
cli
and
dec
fdivr
outsb
movsb
leave
xchg
or
xor
popa
mov
leave
pop
jg
stos
imul
ljmp
mov
pop
pop
add
call
repnz
movsb
jb
add
mov
sbb
pop
test
jbe
nop
sub
push
lock
inc
in
adc
std
rep
dec
add
lcall
rorl
cwtl
mov
lret
aad
das
pusha
mov
pop
mul
adc
mov
stc
inc
mov
mov
xchg
xor
inc
testl
into
outsb
sub
mov
sar
es
mov
imul
or
inc
nop
dec
add
leave
aam
int3
lods
repz
jnp
mov
and
cltd
scas
icebp
mov
stos
push
push
aaa
add
gs
pop
push
cmp
roll
test
sub
push
pop
mov
mov
jl
scas
jbe
mov
add
adc
sub
icebp
test
push
pop
xchg
ds
lahf
sub
mov
pushf
adc
je
xor
data16
hlt
push
jae
sbb
outsb
int3
inc
and
mov
fbstp
lret
mov
sbb
vmwrite
ret
ss
jne
push
mov
call
sub
mov
inc
push
sti
int3
or
iret
push
test
test
int
pop
xor
and
mov
jecxz
inc
les
ret
pop
pop
sbb
test
mov
mov
ret
push
jae
lret
inc
jno
or
mov
fsubrl
enter
rolb
shlb
mov
xor
sub
xor
xchg
enter
pop
inc
mov
ret
into
lahf
jge
cs
jno
and
pop
test
fsubrl
pop
dec
enter
fwait
jne
je
sub
sub
push
call
pusha
addr16
popl
imul
xor
cld
test
jae
sub
loope
xchg
leave
and
hlt
dec
sub
mov
cmp
pushf
fsubl
sbb
aas
cmp
stos
xor
jg
icebp
adc
add
gs
pop
cmp
stos
or
push
inc
pop
sysret
mov
fucom
and
push
fisttpll
int
sbb
int3
jno
movsb
inc
sub
push
sbb
jp
daa
cmpsl
notl
fwait
nop
lret
pop
jae
fnstenv
fdivr
cmpsl
ret
das
stos
push
mov
mov
mov
push
loopne
decl
mov
and
rclb
fsts
sarl
push
jmp
cli
mov
adc
xchg
mov
mov
das
ljmp
cli
cmp
out
inc
mov
mov
sub
xchg
adc
xchg
rorb
test
nop
sbb
sarb
pop
add
xor
dec
aaa
dec
out
jle
sub
mull
xchg
sub
test
jmp
jne
inc
jmp
insb
push
ljmp
or
ret
sub
cmpsl
scas
xchg
out
inc
ljmp
lcall
mov
repnz
dec
push
sub
push
stos
mov
mov
int3
cmp
cmp
cwtl
test
jb
mov
mov
fidivl
xchg
jle
or
data16
inc
movsb
or
or
lods
out
mov
pop
mov
loopne
jo
arpl
outsl
int3
add
ss
or
xor
adc
jp
loope
push
adc
clc
push
mov
jp
scas
loop
xor
and
adc
xor
dec
mov
shr
fists
arpl
xchg
mov
adc
test
out
imul
std
push
dec
lcall
xchg
rol
push
outsb
nop
lods
jae
cld
ja
mov
push
fldl
inc
jnp
cld
mov
jns
xor
out
repz
jmp
and
or
int
xlat
dec
aas
hlt
in
cmp
dec
mov
lock
sti
test
and
popa
pop
and
pop
xchg
mov
xchg
pop
inc
inc
dec
xor
sbb
or
mov
lods
or
dec
mov
int3
cmc
cmp
ja
mov
push
lar
sbb
mulb
cmc
outsb
and
push
push
mov
xchg
xchg
outsl
stos
out
jne
pop
push
cli
leave
xor
lods
imul
mov
out
sbb
sbb
fildll
jbe
mov
xor
insb
and
xor
cmp
push
filds
dec
jns
mov
cltd
jmp
test
insl
pop
xchg
jbe
cmpsb
jl
mov
lock
pop
dec
mov
mov
pop
xchg
push
pop
jno
out
jmp
inc
test
and
sub
xchg
lahf
add
inc
nop
add
sub
loop
test
adc
fldenv
in
and
push
mov
add
sub
mov
or
popa
sub
andb
mov
mov
imul
xor
in
int3
ds
cmp
and
cmp
jp
lods
shl
sub
fcompl
dec
test
push
push
jmp
cmp
jnp
add
or
outsb
mov
inc
sub
fsubs
and
jge
jne
hlt
push
shrl
rorl
adc
dec
dec
fisttpll
loopne
pop
pop
or
and
dec
xor
adc
fiadds
mov
imul
push
push
aam
or
mov
stos
xor
jp
and
fwait
stos
pop
lret
adc
out
jge
test
call
lea
and
inc
sbb
pop
dec
in
mov
insb
xchg
popa
fucomip
pushf
aas
add
cwtl
jo
movsb
stos
imul
pop
jecxz
mov
push
lock
out
pop
into
pop
or
xor
lods
mov
fadds
outsl
jnp
pop
mov
pop
es
call
shll
sbb
sub
adc
insl
push
scas
fdivrl
cs
pop
popa
or
in
insl
into
xor
sub
ret
xchg
scas
sbb
idivb
testl
mov
dec
jb
fwait
shlb
adc
cltd
jmp
dec
out
or
lret
stos
sbb
nop
fsubrl
aam
sub
in
inc
add
pop
data16
mov
ret
or
xchg
and
test
lods
add
inc
or
addr16
ja
outsb
mov
rsqrtps
adc
lock
jns
or
jno
xor
dec
pop
test
rorl
lods
ret
cmpsb
or
or
mov
pop
xchg
lods
stos
push
adc
push
lcall
or
xchg
jge
addr16
shl
hlt
inc
adc
arpl
jge
or
xor
call
and
ja
jp
pop
in
jmp
jne
in
popa
outsl
addr16
leave
sar
movsl
lock
movsl
sub
pop
mov
mov
inc
mov
inc
ds
adc
pop
fcomps
jl
sub
and
mov
jmp
roll
xchg
pop
push
ficoml
sbb
and
iret
arpl
popa
call
mov
es
sbb
dec
or
mov
xor
xor
jl
jo
test
mov
hlt
test
xchg
enter
adc
in
sbb
inc
sbb
movsb
ljmp
outsb
xchg
sbb
es
clc
pop
sub
sbb
pop
mov
cmp
push
pop
jnp
imul
daa
or
out
pop
out
ljmp
out
shrb
xchg
clc
fs
repnz
leave
mov
pop
push
aam
sti
stos
das
shr
sbb
xor
add
add
adc
stos
jecxz
lock
div
xor
add
sbb
or
ficompl
xchg
mov
sbb
dec
jne
pop
hlt
ss
gs
fildll
push
sbb
cs
inc
psrlw
lret
icebp
popl
mov
pusha
push
mov
xchg
pop
fcomip
mov
add
rcr
ljmp
jo
insb
outsb
xchg
fcoml
repz
fwait
imul
push
mov
imul
pop
jno
mov
out
push
shrb
daa
push
dec
mov
push
aas
int3
adc
ljmp
movsl
imul
adc
add
add
inc
sub
dec
inc
cmpsl
dec
sti
sbb
jge
int3
aas
lock
aaa
pop
push
fwait
push
pop
add
push
aas
int3
jno
jbe
jge
or
mov
xchg
push
negl
imulb
lret
push
jmp
jl
push
ss
fisubrl
adc
adc
pop
pop
pusha
popf
ss
out
pop
pop
mov
sub
test
and
lods
js
xor
cmp
pop
bound
adc
pop
es
call
test
push
pop
sbb
bound
lea
pop
jle
loope
int3
arpl
sub
aaa
aam
push
mov
jge
adc
jnp
pushf
int
cmpsb
scas
or
mov
and
out
fmulp
cs
ljmp
or
dec
sbb
push
mov
cmp
add
lods
imul
dec
xchg
jle
pop
xchg
sub
idivb
test
push
mov
mulb
aas
and
jmp
adc
cmpsl
enter
xchg
stc
sub
stos
std
in
xchg
cmpsb
call
out
ret
mov
sbb
fwait
mov
insl
add
sarb
mov
jns
add
mov
cmp
inc
mov
mov
das
stc
movsl
outsl
cmp
into
mov
cmp
xchg
enter
mov
imul
jmp
in
rclb
sti
cmpsl
in
imul
dec
mov
stc
call
mov
or
mov
das
mov
jbe
cwtl
adc
shr
shrb
pop
push
xchg
add
ficompl
mov
push
push
ds
mov
jl
add
jb
or
clc
cwtl
imul
shr
shll
inc
in
popf
pop
xlat
lret
fidivs
in
sub
adc
inc
fstpt
mov
dec
insb
loopne
jge
nop
jo
xor
fwait
jp
insl
add
leave
push
add
lock
mov
xchg
mov
push
jp
cmpsl
les
jbe
add
sub
pop
jbe
and
push
and
or
dec
add
lds
push
mov
push
ror
cmp
xor
xchg
mov
rcll
and
or
jnp
lods
or
ret
je
add
dec
jo
xchg
mov
nop
mov
dec
push
xchg
sub
fs
mov
ficomps
mov
xchg
aam
inc
add
cmpsb
stos
pop
mov
jp
ds
lret
pop
mov
addr16
scas
repz
mov
lods
mov
push
adc
popf
pop
xlat
jnp
aam
pop
gs
fstpl
ljmp
or
jo
cmp
hlt
push
push
outsb
cli
inc
push
and
push
out
pop
mov
or
push
test
inc
inc
and
fcmovne
ja
ja
ret
push
sbbb
sub
push
or
xor
std
push
mov
sub
push
jns
inc
jl
pop
pop
test
fs
cs
rcrl
dec
and
xlat
push
adc
cmp
call
or
adc
mov
mov
xchg
addr16
fcomps
add
bound
jg
fdivs
add
lods
mov
stc
es
add
je
add
sub
sub
inc
adc
sbb
xchg
or
fisttpl
int3
iret
sub
fs
xchg
loop
mov
sub
hlt
movsb
pop
xor
mov
jo
filds
xchg
add
cmpsl
stc
mov
icebp
dec
stc
mov
jns
push
ljmp
or
pop
shrl
xchg
mov
hlt
out
xor
fmuls
or
inc
lock
sti
dec
shl
int3
mov
loopne
push
mov
lea
push
xchg
addr16
pop
sub
shll
sub
ds
fst
xor
cmp
push
xchg
mov
je
mov
jmp
push
or
mov
xor
lret
sbb
xlat
dec
xor
pusha
pop
fisubrs
cltd
jbe
ret
mov
std
jbe
int
outsl
pop
pop
test
insb
xchg
and
and
add
lahf
movsl
mov
add
mov
mov
dec
popf
in
sahf
dec
ljmp
mov
xchg
insl
lock
fbld
mov
inc
add
je
loope
js
inc
sarb
mov
adc
movsl
rcll
inc
xor
push
push
rcr
movb
add
dec
or
dec
pushf
push
pop
mov
inc
and
inc
mov
dec
lods
mov
and
sub
mov
incb
outsl
push
xchg
jb
mov
popf
das
push
xor
mov
call
sbb
addl
mov
or
stos
fwait
aaa
mov
or
sbb
jns
mov
lock
cwtl
aam
mov
xchg
dec
cmp
imul
fsubrl
mov
xchg
jge
inc
xchg
sbb
mov
es
jmp
das
push
mov
push
leave
jle
cli
aad
arpl
pop
nop
push
shll
mov
sbb
in
idivl
jbe
add
adc
add
pop
jmp
jns
shlb
pop
scas
lock
or
dec
jl
sub
xchg
aam
aad
cli
adc
shrb
sti
push
in
xchg
add
xor
dec
lahf
cmpsb
rol
and
adc
cmc
xor
repz
pop
mov
jp
dec
mull
cmp
lret
xor
add
lds
pushf
sub
and
and
addr16
jne
jle
cmp
sub
repnz
inc
sti
lret
std
mov
fwait
pop
or
add
clc
pusha
lods
and
repnz
or
test
and
outsb
insb
hlt
adc
in
sbb
jo
inc
aam
xchg
pop
or
in
call
addr16
fs
lods
mov
and
mov
cmp
fisubs
mov
pop
cwtl
jp
fimull
mov
mov
xchg
sbb
clc
sti
rcr
jge
sti
das
jo
scas
movsl
xor
mov
decb
imul
inc
loop
std
sbb
push
cmp
insl
dec
movzbl
xchg
mov
in
fucomi
lcall
inc
jecxz
iret
jg
mov
push
push
cmpsb
loope
in
or
inc
mov
repz
or
jnp
ficompl
fwait
inc
dec
cmp
pop
xor
push
push
mov
mov
push
jg
insb
sub
out
movsb
push
push
mov
iret
mov
inc
mov
or
das
cmpsl
xchg
idivb
or
iret
les
or
fildll
xchg
pop
lret
mov
bound
push
mov
leave
mov
xlat
int
or
push
lods
dec
xor
andb
add
mov
ret
out
pop
mov
dec
xchg
sub
mov
add
fnsave
outsb
daa
push
bound
pushf
shl
nop
shll
inc
xor
jb
andb
lods
lret
push
test
gs
jl
xor
addr16
jl
pusha
pop
cwtl
cmp
add
or
movsb
sbb
cmp
xchg
fcoms
push
test
fwait
mov
mov
adc
ss
mov
pop
sub
push
test
leave
or
sbb
mov
add
lds
push
jp
push
pop
push
dec
and
gs
sub
ss
sbb
dec
gs
fsubs
lods
pop
clc
mov
jcxz
xor
xchg
jno
jbe
push
xor
sub
shll
mov
jecxz
sbb
sub
pop
scas
or
add
shll
sarb
mov
adc
ret
dec
mov
movsl
les
mov
adc
sbb
stos
aam
shlb
jmp
xchg
std
in
into
or
lds
insl
lahf
or
xchg
fsubp
fimull
cmp
jge,pn
lahf
call
xlat
lcall
out
repnz
movsl
fsubrl
int3
mov
push
fisubrl
sub
jg
out
or
sbb
fisubrs
js
out
das
insb
int
das
or
xor
cmpsl
jl
out
and
inc
and
cmp
xchg
sbb
push
nop
mov
dec
cmp
mov
in
rcll
and
mov
adc
fsubrs
inc
dec
mov
fs
lds
push
dec
push
pop
scas
pusha
add
dec
notl
cmc
popf
daa
stos
adc
mov
dec
jb
jle
add
mov
push
mov
imul
aas
out
dec
push
or
movsl
pop
test
test
push
add
and
mull
jns
push
int3
adc
imul
push
das
add
scas
pop
dec
fs
shlb
fisubl
pop
sbb
xchg
and
xchg
sub
shrb
testl
out
jp
cwtl
rcll
fcoms
adcl
dec
loop
xor
jnp
test
jmp
mov
push
xchg
xchg
jns
test
and
mov
enter
cli
mov
int3
cmpsb
dec
imul
pop
lods
stos
nop
mov
cmpsl
mov
scas
dec
or
addl
es
sub
aaa
mov
into
sbb
idiv
dec
jmp
jl
mov
sub
ret
orb
pushw
push
mov
lea
sbb
push
jbe
push
loope
pop
sbb
ljmp
xchg
fs
insb
fbld
ficompl
dec
push
test
or
pop
mov
enter
jb
push
scas
lahf
movsl
mov
mov
jns
dec
add
adc
xchg
push
and
sub
add
lret
test
pop
push
pop
mov
aad
jle
call
dec
xchg
lret
fdivl
adc
test
pop
mov
mov
cs
mov
dec
add
stos
fimull
mov
or
dec
test
adc
outsb
pop
mov
inc
pop
dec
mov
pop
xchg
mov
sbbl
jl
loopne
inc
adc
daa
mov
in
int
mov
add
stos
jae
add
push
mov
inc
repnz
les
outsl
les
cld
lods
aad
frstor
es
lahf
stos
xchg
or
push
mov
and
stos
call
or
call
jns
xchg
push
jp
and
pop
cwtl
psubd
ja
rorb
push
cmp
cmpl
nop
or
and
iret
mov
add
xor
cmp
nop
fiadds
lcall
lret
aas
xor
xor
mov
dec
fwait
lret
call
daa
dec
in
xor
xchg
into
mov
loope
add
sbb
dec
movsl
insl
sbb
xor
ficoms
gs
aaa
mov
xchg
adc
scas
ja
in
mov
das
minps
add
stos
jae
cmpsl
jne
fwait
test
adc
jo
add
subb
push
push
xchg
clc
mov
push
out
leave
sbb
push
sbb
stos
js
ret
mov
add
and
dec
push
and
cmpsb
lret
call
jnp
insl
aaa
cmp
mov
mov
add
cltd
repnz
mov
mov
bound
mov
loop
rcrl
aaa
mov
and
les
mov
aam
adc
pop
dec
cli
in
pop
movsl
stc
cmp
and
xchg
pop
sbb
xor
mov
push
push
imul
pop
punpcklwd
mov
and
inc
pop
adc
pop
fldenv
xor
adc
adc
loope
mov
in
lock
xchg
push
cltd
insb
push
cmpsl
add
add
cli
mov
sbb
cmp
sti
adc
push
pop
jo
and
fdivl
scas
scas
lea
and
sub
mov
das
jne
lods
sbb
inc
jns
movsb
enter
dec
jae
cmpb
jno
mov
mov
aad
fldcw
dec
enter
mov
fcomps
out
xchg
jne
les
xor
adc
push
in
repz
ficompl
inc
jno
mov
sub
scas
nop
out
fnstenv
mov
gs
jecxz
orb
ja
ss
push
mov
sub
push
loopne
fsts
call
les
sub
inc
imul
popa
lcall
repz
push
xchg
cltd
pop
into
lods
mov
shlb
movsl
push
jg
shll
orl
add
or
mov
add
mov
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
xor
mov
xor
jmp
add
cld
sbb
nop
andb
push
sub
addl
js
sbb
in
jge
xor
mov
fwait
scas
mov
pop
mov
push
aad
repz
push
sub
call
or
inc
gs
adc
adc
jl
outsl
xchg
sbb
push
mov
ljmp
outsb
xchg
lock
outsb
clc
int
cli
xchg
insb
fstpt
xor
add
mov
mov
jecxz
fwait
lods
mov
test
push
xlat
jp
xor
jae
lods
popf
ja
js
fidivrs
push
imul
test
and
lahf
mov
jle
cmp
dec
push
mov
pop
mov
jmp
pushf
ja
leave
jo
aad
mov
ret
jge
jbe
cmp
hlt
xor
dec
aam
lock
pop
dec
jmp
out
sub
popf
jno
cmpsb
xchg
fnstenv
jo
divb
xlat
jp
lock
dec
pop
test
cmpsl
sbb
or
xchg
shll
inc
ja
add
decl
dec
lods
xchg
jg
mov
xor
dec
mov
mov
std
cltd
nop
inc
xchg
mov
inc
iret
int3
and
add
sbb
das
cmp
repz
call
dec
push
inc
loop
mov
sbbb
lds
xchg
repz
fnsave
jns
shrb
arpl
sti
out
movsl
arpl
in
xchg
in
add
or
push
cmp
loopne
js
jp
mov
or
xor
jg
and
aaa
mov
repnz
sub
jo
cmp
mov
cmpsb
lret
out
imul
outsb
and
lcall
aas
inc
cmp
or
mov
rcrl
xchg
pusha
in
add
and
lcall
outsl
xchg
loopne
shrl
insb
jae
int
push
enter
jnp
inc
rolb
fldt
dec
mull
jmp
insb
fcoms
sub
iret
jnp
cltd
mov
mov
mov
pop
lahf
stos
pop
cwtl
xor
jge
xor
adc
mov
cwtl
sub
xor
inc
mov
xor
mov
mov
lods
xchg
cmpl
sbb
push
push
sub
fucomi
mov
jne
adc
jg
jmp
xchg
aam
out
or
push
dec
aaa
adc
gs
sub
pop
pop
xor
push
in
pop
dec
dec
xorb
add
lahf
sarb
clc
mov
and
sbb
loope,pt
mov
sbb
cltd
and
arpl
test
cmp
pop
adc
js
push
roll
shrb
filds
mov
dec
push
mov
imul
movsl
xchg
in
jo
pop
mov
fwait
mov
rcr
mov
rol
mov
adc
imul
in
pop
cmp
jmp
sbb
movsl
adc
ficoms
or
cltd
orl
pop
xchg
push
outsl
loopne
fwait
dec
inc
stos
dec
inc
inc
push
imul
lret
mov
sub
clc
int3
lods
fwait
outsl
repz
aam
mov
xchg
out
jle
inc
repnz
out
aam
in
mov
sub
xor
loop
mulb
or
push
adc
out
stc
jno
int
sahf
sti
or
insl
jo
adc
dec
es
popf
pop
add
mov
add
sub
add
jb
inc
mov
fsubrp
mov
inc
mov
sub
je
icebp
sbbl
loop
pushf
xor
mov
lea
lds
dec
sbb
xchg
push
mov
push
jl
mov
xlat
cld
mov
loopne
mov
repnz
sub
push
addr16
jl
mov
loopne
das
je
int3
xlat
and
sub
ss
ja
push
cmpxchg
enter
mov
mov
or
aam
cmpsb
push
xor
push
jne
xchg
ja
pop
jb
xor
fidivs
inc
faddp
sub
cld
mov
ja
inc
pop
int
subb
cmpsb
adc
mov
and
je
fbstp
imul
inc
in
mov
mov
xchg
lock
push
mov
iret
pop
mov
pop
je
dec
adc
sub
cmp
jbe
mov
xor
mov
and
call
xchg
cmpsl
sub
mov
popl
jne
cmp
add
cltd
inc
sbb
roll
mov
jp
fmul
enter
popa
mov
pop
cld
jo
dec
mov
or
xorl
call
jecxz
stos
mov
jp
out
mov
outsl
xorl
xor
push
div
loop
pop
out
lods
dec
mov
std
jge
inc
and
adc
fisubrs
jecxz
movl
push
pop
mov
mov
add
xchg
cmp
ficoms
out
lret
mov
push
lds
push
push
lret
mov
ret
popa
lods
push
cmp
popa
bound
add
mov
je
lods
stos
push
push
sbb
xchg
pop
mov
sub
popl
out
pop
shll
jbe
push
cmp
sub
scas
stos
lods
testl
arpl
je
jns
mov
sahf
sub
ud1
hlt
pop
insl
xchg
push
xchg
rcl
test
dec
or
add
jns
dec
daa
xor
sarb
mov
pop
xchg
push
adc
lret
fstpt
inc
sub
leave
arpl
mov
cmp
jbe
js
fwait
mov
lret
repz
sub
or
jnp
fucomp
sbb
jb
mov
fiadds
jge
push
sbb
fwait
jno
pop
adcb
aaa
or
jb
movsl
push
mov
dec
jg
push
xchg
lock
inc
testb
pop
fisttpll
jb
in
xchg
jno
pusha
or
idivb
mov
aad
xor
xor
insl
in
aaa
repz
mov
test
int3
inc
adc
in
xor
sbb
adc
mov
je
mov
adc
imul
test
fs
test
js
mov
inc
push
jae
xchg
rorb
xlat
mov
dec
in
pop
ret
lret
sub
fsubrs
mov
jnp
ret
scas
scas
sbb
call
andl
jbe
sub
dec
cwtl
xchg
enter
into
and
jae
sub
fnstenv
ds
ss
cmpsl
dec
xchg
sub
add
xchg
jnp
scas
sub
je
lea
outsb
jecxz
and
push
xchg
loop
aas
sub
add
addr16
int3
xchg
and
pusha
xor
xor
inc
rorl
addr16
in
adc
lea
dec
pop
call
outsl
and
cld
cmp
movsl
add
cwtl
jge
ss
mov
dec
in
and
inc
outsl
addr16
sub
movsl
iret
ret
dec
pop
add
sub
or
lock
jmp
ds
cmp
xor
cmp
test
dec
movsl
dec
mov
roll
pop
xchg
and
test
pusha
inc
and
inc
das
dec
repnz
mov
or
popw
call
mov
ljmp
and
nop
push
jnp
dec
lock
das
out
dec
fsubrs
jb
cmp
and
push
out
jno
push
imul
sbb
cmp
fucomp
notb
shll
inc
cmc
lahf
mull
jo
cmc
imul
mov
mov
add
adc
jmp
or
adc
frstor
mull
lds
push
lahf
les
and
pusha
fimuls
es
xor
adc
test
jg
in
jo
out
roll
jno
std
das
pop
jae
sbbl
and
loopne
cmpsl
shll
ret
pop
out
fisubrl
loop
adc
sbb
and
xchg
pop
inc
pop
jmp
scas
mov
nop
xor
addb
mov
daa
in
pop
cltd
sbb
or
and
add
and
mov
or
ret
mov
repnz
adc
jno
std
vmovaps
test
jne
imul
or
data16
push
add
sub
jmp
js
fiaddl
ss
mov
jmp
xchg
pop
dec
cs
sbb
and
stos
inc
stos
lea
xor
fcomip
inc
hlt
mov
sbb
inc
lds
ror
jl
or
inc
into
rclb
add
xorl
test
mov
push
gs
push
arpl
sub
clc
adc
mov
inc
xor
mov
stc
push
jne
iret
and
inc
lret
pop
cli
mov
faddl
and
inc
cmpl
mov
jp
out
jl
mov
call
adc
xorb
cld
test
lret
adcb
ret
ja
mov
mul
pop
adc
add
loope
fcoms
adc
sbb
inc
cmp
repz
mov
ja
in
enter
add
pushf
and
and
mov
adc
xchg
push
dec
sbb
scas
mov
test
inc
mov
inc
push
fnstsw
or
or
and
mov
sti
call
add
dec
popf
clc
cmp
psubusw
andb
callw
sub
pop
dec
ss
pop
sub
test
mov
out
mov
pop
and
dec
out
pop
pushf
in
int3
out
in
cmp
add
and
pop
cmpb
pop
jmp
leave
jl
aam
lcall
notb
shrb
fmull
adc
fbld
push
push
pop
inc
or
cmp
in
or
sub
add
popa
push
push
call
clc
xor
sahf
ss
adc
mov
shr
add
rorl
xchg
out
xchg
rclb
fnstenv
aaa
mov
lret
imul
iret
sub
fimull
cmpb
aas
sbb
adc
adc
arpl
pop
je
int
add
mov
mov
jle
adc
lds
addr16
mov
mov
mov
cld
js
rcl
adc
sbb
addps
fs
mov
and
or
insb
mov
or
pop
jae
cmp
mov
pop
and
dec
and
xchg
xchg
lret
loopne
mov
jl
sub
xchg
ret
adc
out
int
xor
jmp
out
pop
dec
jmp
push
or
xchg
cmp
add
mov
sbb
cs
xchg
mov
mov
inc
repnz
pop
and
push
ss
mov
cmpsl
jb
cmp
pusha
cmp
pop
mov
jle
in
xchg
pop
data16
addr16
mov
pop
mov
sub
cmp
mov
inc
movsb
imul
and
mov
imul
or
out
dec
xor
lock
sti
insl
mov
or
jmp
rcrl
mov
lahf
psubusb
mov
fwait
cmp
add
repz
inc
dec
jg
adc
mov
push
rcrb
in
mov
loope
insb
cmp
fimull
loop
xchg
sbb
lock
inc
rorl
and
and
xor
or
push
cmp
xor
inc
push
cmp
sbb
push
gs
cmp
pop
dec
mov
xchg
push
mov
mov
add
sub
loope
cmpsb
into
cld
stos
inc
mov
pop
orb
sar
push
adc
sbb
inc
mov
xor
outsl
ret
in
mov
movsb
jne
cmc
and
inc
lea
or
cmp
hlt
pushl
mov
insl
mov
les
popa
pop
lea
pushf
mov
loope
fsubl
lret
xchg
fwait
iret
pop
pop
mov
in
xchg
cmpsb
jo
fnstsw
pusha
out
ret
push
mov
sub
add
push
xchg
lret
sahf
and
inc
es
cmp
sub
add
push
ds
add
inc
jb
scas
add
cmp
ret
mov
mov
inc
ds
pop
inc
in
fsts
pusha
jno
cmc
ficoms
std
dec
xlat
xchg
rorl
pusha
inc
ja
call
ret
xor
adc
in
sub
popa
jl
dec
mov
mov
or
lahf
stos
movsl
mov
adc
dec
jmp
aaa
stos
pop
aaa
sub
stc
mov
dec
jecxz
dec
add
fidivl
int3
jecxz
xor
pop
shll
pop
adc
push
ljmp
icebp
cmp
mov
pop
fwait
push
lods
stos
flds
jp
repz
and
sub
pop
insl
add
loope
ljmp
icebp
cwtl
sub
in
dec
jb
jnp
xchg
aam
out
xchg
add
insb
pushl
nop
aam
scas
and
leave
or
jae
aam
jns
aam
xchg
lods
inc
adc
mov
jge
popa
fbstp
add
call
add
fdivrs
nop
mov
pusha
ret
xor
adc
clc
sbb
xchg
mov
cwtl
lods
and
repnz
hlt
xor
mov
popf
pop
out
mov
mov
mulb
in
clc
movsl
and
mov
ret
jp
and
and
pop
stos
loope
mov
bound
cmp
ja
loop
popa
adc
enter
fidivrs
lods
mov
out
push
out
lret
in
mov
xor
cmp
cmp
addr16
mov
insl
mov
cmp
out
mov
mov
and
fsubrl
and
jnp
adc
sbbl
test
push
hlt
push
mov
sbb
cmp
test
aaa
fstl
push
and
push
test
lock
jmp
femms
fcmovnbe
lea
cmp
cwtl
push
mov
push
mov
arpl
fdivrl
push
and
mov
jl
add
dec
inc
mov
jae
mov
adc
adc
cli
jmp
sub
cmp
push
sbb
aaa
inc
jnp
or
add
push
sub
into
ljmp
xor
repnz
out
mov
inc
add
ret
inc
push
cwtd
rclb
dec
call
mov
jl
ss
xor
rcl
addb
lods
imul
rclb
xor
test
ret
addr16
pop
mov
movsl
jb
leave
fnstcw
rcr
testb
mov
fidivrl
out
loope
jb
fdivs
out
clc
out
rcl
inc
sub
pop
cmc
dec
ds
push
mov
sbb
push
fcoml
shlb
dec
sub
dec
iret
add
sbb
jp
outsl
xchg
cmp
repnz
adc
xchg
lock
xchg
jge
or
test
ds
iret
pop
pop
stos
in
iret
push
pop
jl
lods
scas
mov
and
jb
bound
subb
popa
dec
movsl
mov
sti
push
jb
scas
aam
sbb
repz
jae
jmp
adc
in
cmp
test
adcb
clc
and
jmp
shll
xor
sti
and
jmp
cmp
decb
inc
sti
sbb
xchg
daa
jno,pt
jp
repnz
inc
and
xchg
mov
je
xchg
xchg
insl
bound
mov
cmp
xlat
push
jmp
mov
adc
stos
pop
ficomps
loop
sub
stos
pop
mov
xor
faddl
and
push
dec
xchg
and
and
add
adc
xchg
or
and
stos
fisubrs
mov
cmp
fnstsw
fcmovbe
out
sub
ret
scas
cmp
inc
out
inc
dec
adc
sbb
mov
cmp
push
idivl
mov
jns
jge
repnz
or
icebp
ret
add
lods
inc
sub
aas
push
xchg
js
pop
add
stos
jns
adc
lcall
int3
mov
sub
sbb
xor
cmc
test
cmp
ret
xchg
rcll
cld
mov
test
jo
mov
daa
xor
push
cs
cltd
leave
lds
inc
pop
or
xchg
push
mov
popf
push
pushf
mov
test
shl
leave
jge
test
in
adc
call
inc
sub
sub
jne
jle
dec
xchg
ljmp
clc
or
js
ficompl
mov
popa
jb
mov
dec
cmp
push
add
pop
leave
loop
ficoms
sub
aaa
icebp
rcrb
push
je
in
push
insb
dec
and
mov
arpl
pop
sub
mov
mov
sbbl
divb
cmpsb
pop
ss
or
xlat
xchg
dec
and
lods
push
int3
cld
scas
dec
es
fildl
cmc
aaa
or
push
push
cmp
mov
out
or
jo
fstpl
sub
shl
faddl
jecxz
lret
pop
or
jmp
xchg
in
sub
mov
sbb
cmp
push
dec
push
push
mov
sub
push
pop
jmp
ljmp
mov
test
das
rcl
mov
dec
cmp
push
mov
sbb
dec
sub
xchg
stc
fdiv
xchg
jno
inc
arpl
adc
data16
sub
mov
fisubrs
lds
out
push
and
nop
dec
sub
test
mov
adc
jb
mov
movsl
inc
jne
loopne
sub
inc
in
in
jnp
popa
mov
dec
mov
lds
mov
xor
xor
mov
popa
bound
sbb
cmp
pushf
cld
mov
mov
mov
cmp
jmp
xchg
imul
push
mov
jle
inc
push
and
mov
cmp
loope
ss
popa
iret
ljmp
fisubrl
push
xchg
or
xchg
popf
pop
jnp
ret
dec
jl
notb
ljmp
cmc
enter
mov
jp
dec
loopne
inc
aad
fcmovne
xor
stos
xchg
mov
dec
mov
pop
jnp
cmp
and
cmpsl
cmpl
clc
clc
mov
or
clc
out
rcrb
sbb
and
xor
rol
mov
shrl
inc
loopne
stc
fsubs
insl
or
div
sbb
rorl
sbb
jno
mov
sub
shll
out
pop
jp
loope
je
and
aam
cmpsl
mov
inc
das
fsts
repnz
pop
add
push
xor
cmp
lds
aad
cmp
cmp
jne
jne
aam
inc
cmpsb
mov
scas
jecxz
test
fwait
adc
xchg
xor
call
outsb
cmp
cld
dec
sbb
adc
in
leave
fists
add
mov
pop
jns
aam
cmp
adc
mov
sbb
into
je
mov
mov
ret
adc
fistps
out
or
rclb
mov
addr16
jmp
rorl
in
jns
les
out
dec
sbb
push
push
call
stos
and
repnz
pop
in
addl
lods
mov
xlat
add
in
leave
rorl
jle
sub
ret
test
rclb
outsb
or
in
push
stos
xlat
add
clc
mov
mov
loop
lock
fucomp
lods
mov
add
addr16
aas
test
fisubs
std
aas
jo
inc
mov
mov
sbb
push
mov
adc
cmc
xchg
popf
dec
sti
inc
mov
dec
dec
in
lret
pop
add
jp
stos
jbe
arpl
cltd
rolb
push
xor
jbe
inc
cmp
ret
jl
pop
cmp
jo
sbb
add
or
test
xchg
mov
cs
push
cmpsl
dec
sub
repz
mov
sub
mov
cld
mov
lahf
adc
imull
sbb
mov
lcall
jge
mov
ds
add
or
ret
inc
sti
or
push
xor
mov
pop
dec
not
cmp
add
pusha
mov
push
stos
mov
ror
and
scas
sti
int3
cmc
jns
lods
es
xor
jns
mov
mov
sub
leave
sub
mov
mov
lcall
xor
add
call
icebp
int
in
bound
pxor
shll
js
aam
int3
lret
cld
nop
pop
subl
aas
push
cmpl
jl
jg
cmc
sti
int
or
push
or
mov
test
mov
cmp
iret
jb
xchg
jl
xchg
lds
sbb
std
inc
jle
ret
xchg
insl
sub
jp
daa
xor
mov
xlat
sub
cltd
or
push
fcmovnu
jo
sbb
push
in
scas
mov
push
xchg
add
fildl
pop
mov
fsubs
into
nop
pop
fldenv
mov
mov
inc
stc
arpl
sbb
decb
in
mov
loop
nop
mov
negl
xor
dec
jbe
addr16
repz
push
addb
mov
nop
push
mov
les
sub
and
mov
and
sub
mov
sub
test
pop
cmp
jno
loopne
scas
sbb
jp
push
jno
adc
sub
outsl
xchg
add
jmp
push
inc
mull
loopne
add
pop
xor
jae
or
push
pop
push
sbbl
nop
leave
mov
in
push
cltd
int3
pop
sti
cld
xor
inc
sbb
cmp
lods
fildl
dec
push
fnsave
pop
test
inc
leave
inc
inc
inc
cld
leave
and
add
mov
les
sbb
add
out
decb
testb
xor
push
popa
test
mov
lods
addb
lahf
insb
mov
rolb
sub
aam
movl
test
and
mov
mov
mov
xor
pop
test
int3
jns
test
mov
lock
jg
popa
mov
xchg
ds
inc
cli
mull
scas
sar
jns
cmpsb
inc
call
add
aam
add
jecxz
jp
repz
mov
int3
inc
dec
xlat
push
mov
aas
pop
mov
cli
icebp
or
aam
stc
out
or
out
ja
fcompl
movb
lock
andb
cwtl
xchg
xor
addr16
sahf
dec
sub
pop
mov
push
pushf
ss
sti
dec
ficoms
jl
mov
in
in
add
cmpb
xchg
pop
and
jp
and
test
imul
mov
out
push
cwtl
xorl
repnz
fwait
lods
mov
lret
cmp
test
cmp
cwtl
xchg
ljmp
or
mov
or
sub
movsl
jmp
mov
mov
les
mov
or
xchg
jp
cmp
mov
or
pop
inc
jl
andl
ds
jge
cmc
inc
lock
add
repnz
nop
loop
push
xchg
daa
fisubl
adc
or
mov
into
cmp
filds
and
pop
mov
pop
cltd
loope
mov
cmpsb
mov
push
outsb
imul
arpl
sub
imul
dec
outsl
xchg
jno
add
aaa
movsb
push
repnz
les
sub
push
in
pushf
flds
icebp
repz
repnz
movsb
pusha
add
dec
push
mov
sbb
mov
aad
sbb
pop
idivb
test
add
xor
mov
mov
out
arpl
out
push
in
ret
xchg
xor
aad
cld
push
les
mov
imul
cmp
mov
scas
ret
out
pop
repnz
cld
xor
cmp
sub
je
cmpl
fdivl
jg
jge
loopne
mov
aam
sub
pop
iret
std
jge
icebp
leave
xchg
shlb
lods
cmp
fsubr
lret
mov
loop
push
jl
mov
ss
push
pop
cld
dec
cmc
and
mov
sub
or
ret
decb
in
jg
pop
dec
mov
mov
int3
pop
or
ljmp
ja
lods
lods
call
aad
mov
es
out
pop
mov
adc
insb
mov
repnz
jae
and
mov
clc
adc
jae
fsubrl
inc
pop
inc
sub
sub
push
sbb
xchg
jge
out
xor
int
adc
ret
arpl
cs
dec
xor
or
fnstcw
push
mov
xchg
fdivrs
jl
add
add
sub
add
lods
notl
sub
mov
inc
push
jge
jae
xlat
mov
hlt
xchg
sbb
cmp
mov
subps
out
imul
push
xchg
add
push
cmp
inc
scas
mov
dec
mov
sub
inc
pop
jno
cltd
popa
dec
or
sub
mov
lods
add
jmp
dec
arpl
xchg
lret
mov
inc
xchg
mov
dec
sbb
cmpsb
pop
gs
cmpsb
mov
cmpsb
inc
mov
pop
outsl
aas
insl
sub
jb
ja
inc
and
lods
xor
xchg
mov
jmp
cmp
cli
pusha
call
add
jns
push
xchg
sbb
dec
cld
int
sub
scas
sbb
outsl
dec
mov
icebp
jle
lock
ss
leave
lea
mov
jmp
movsb
mov
aaa
push
jecxz
push
fadds
fucomp
stos
or
cmp
push
cmpsl
push
mov
lock
mov
jle
outsb
mov
dec
ss
aaa
into
int
out
icebp
sbb
dec
mov
rolb
add
call
xor
sub
dec
mov
out
xchg
xorb
push
fsubrs
mov
or
nop
fldpi
push
jb
pop
das
pop
rorb
out
xor
outsb
clc
mov
or
loope
in
cmp
adc
hlt
mov
add
dec
or
xor
pushf
jge
in
cs
out
xchg
cmp
push
stc
rorl
jo
add
mov
adcl
fdiv
rcll
mov
das
mov
enter
fcoms
sub
pop
push
cmpl
inc
pop
sub
inc
jbe
cmp
xor
dec
cmp
fs
aaa
movsb
push
insl
jo
push
fnstenv
movsb
jo
stos
bound
test
icebp
sti
bound
lock
or
jnp
enter
mov
ja
push
mov
xchg
mov
enter
sbb
xchg
and
sarb
mov
subb
jb
xor
and
fidivrs
mov
inc
into
andl
push
lods
aas
and
sub
cmp
mov
test
inc
testl
and
cmp
xchg
insb
jbe
je
push
mov
inc
mov
outsb
mov
lods
into
cli
cmp
sbb
aam
icebp
inc
aaa
bound
neg
leave
sub
cmp
out
push
sbb
sbb
jmp
adc
es
and
mov
hlt
mov
out
pusha
lods
inc
mov
mov
mov
stos
mov
cltd
mov
les
push
movsb
and
cltd
cmpb
das
ret
insl
jmp
mov
jnp
out
cld
arpl
movsl
das
cmpl
push
ss
test
xchg
aam
sarb
loopne
pushl
adc
adc
add
push
test
or
add
in
jns
jb
adc
mov
xchg
iret
or
xchg
inc
and
int3
adc
jmp
inc
xchg
mov
mov
and
ss
outsl
pop
xor
mov
and
xchg
call
cmpb
repz
xchg
das
sbb
pop
add
sbb
mov
jne
sub
pop
or
xchg
jg
mov
cwtl
cmpsl
xchg
je
mov
cmp
jae
cmp
jnp
aaa
or
outsb
mov
rcll
cmp
inc
jo
xor
inc
push
add
outsl
add
jo
pop
lahf
and
idiv
rclb
fs
jl
int
add
and
jecxz
cmc
mov
popf
pop
jg
jp
mov
mov
or
mov
fidivrs
adc
addr16
add
loope
dec
lea
cld
enter
lds
pushf
add
sbb
mov
sahf
push
in
push
cmp
dec
dec
daa
mov
mov
pop
or
sub
xchg
insb
sbb
pop
cmpsl
cmp
mov
ret
adc
add
idivb
popa
lret
popa
pop
sub
and
imul
out
xchg
mov
and
stos
push
sarl
mov
inc
iret
fcompl
mov
mov
lods
xchg
push
ret
cmp
lds
xor
jmp
push
aaa
sti
jbe
shr
dec
add
test
movsl
scas
xor
or
inc
loope
adc
movsl
pop
mov
jno
aad
jo
adc
jo
add
push
jnp
jns
lea
sti
xchg
add
mov
add
mov
sbb
mov
fisubl
sbb
cmp
loope
adc
and
xchg
fwait
testb
lock
inc
int3
sub
mov
mov
jge
or
push
jmp
or
gs
sti
and
xchg
test
int
loopne
gs
pop
into
jbe
adc
push
inc
or
lods
inc
xor
mov
mov
imull
or
cmp
cltd
lahf
sub
pushf
sbb
mov
mov
adc
repnz
sti
rcl
mov
nop
sahf
xor
add
gs
pop
cmp
mov
xchg
sbb
rorl
out
cmp
scas
or
pushf
push
push
insb
and
cmpsb
ljmp
mov
arpl
repnz
jp
stos
mov
repnz
mov
push
lret
sbb
cwtl
xchg
jmp
and
movsl
pop
push
clc
aas
jl
fwait
ficompl
xchg
add
xor
aas
and
pusha
inc
in
mov
sbb
das
mov
aaa
outsl
jbe
push
cld
inc
out
inc
jecxz
xor
lea
pushf
or
dec
lret
fcom
outsb
scas
sti
xchg
test
pop
push
and
push
add
pop
adc
cld
loopne
sub
mov
adcb
jmp
jnp
inc
int3
xchg
jge
ret
adc
ja
mov
mov
imul
adc
xor
cmp
or
add
arpl
fmuls
jge
jl
fisttpll
xchg
cmp
mov
add
xchg
je
rorl
adc
std
mov
scas
jl
jge
jnp
adc
dec
fmul
add
sub
dec
xchg
int3
adc
xlat
xor
lret
mov
imul
repnz
push
mov
jp
movsl
mov
int3
gs
sub
xchg
sub
popa
xor
mov
iret
inc
and
loopne
dec
fldcw
xchg
sub
fwait
push
xchg
xor
cs
mov
mov
lods
or
aad
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
jmp
add
mov
hlt
aas
push
imul
call
and
push
mov
jmp
and
mov
insb
or
bound
ja
mov
ror
cmp
mov
lret
cltd
js
enter
cmp
dec
inc
mov
inc
insb
test
sbb
mov
ret
fstl
inc
jmp
pop
or
movhps
or
lea
in
repz
or
sub
movsl
mov
aas
sub
mov
jge
cmp
loopne
sub
hlt
mov
call
addr16
fstl
ret
stos
out
std
sbb
psubusb
push
push
sbb
test
aaa
and
jbe
sub
jne
push
push
fldt
pop
roll
mov
les
sbb
add
std
cmpsb
cmp
nop
push
mov
fcmovu
mov
hlt
mov
idivl
mov
lret
mull
out
in
ljmp
or
mov
mov
in
pop
test
sub
js
xor
mov
cmpsl
or
lcall
xchg
das
adc
pop
test
call
shlb
adc
fistpl
movsl
int
dec
xor
into
jp
stos
ss
fsubr
fidivl
and
push
jo
mov
adc
cli
ds
inc
in
mov
mov
adc
scas
test
pop
daa
loop
inc
rcrl
mov
sub
cmc
sub
dec
out
xchg
shl
sbb
add
aad
pop
cmc
pop
inc
fwait
das
sahf
sbb
jecxz
xor
cmpsl
enter
dec
out
in
pop
sub
pusha
add
or
push
ret
data16
in
movsb
gs
int3
mov
movb
rcl
inc
pop
sub
cwtl
nop
je
cmp
stos
shll
sbb
mov
add
mov
add
cmc
pop
sahf
jmp
shrl
and
shlb
shlb
iret
call
jae
pop
push
or
cwtl
add
add
rcrl
jne
les
and
shl
gs
ret
pop
mov
jmp
int
fists
rolb
cmpsl
or
and
lods
cmp
lods
sub
cmc
dec
sbb
pop
mov
rcll
jecxz
mov
arpl
mov
int3
or
push
jb
leave
cmp
cmp
es
mov
outsb
push
sub
cmp
mov
mov
mov
xor
sbb
pop
add
pop
xchg
dec
cli
inc
das
int
in
js
or
xor
mov
dec
jo
push
lock
stos
mov
bound
cmp
cmc
pushl
popf
mov
fs
std
popa
pusha
js
notl
mov
test
mov
movsb
dec
xchg
jge
cmp
test
xchg
or
mulb
add
movsl
dec
js
inc
add
pop
pusha
outsb
push
mov
sar
les
and
lret
push
js
mov
adc
inc
popa
out
or
addr16
ss
pushf
les
dec
cli
push
js
jno
mov
sbb
sahf
pop
fisubs
push
xor
lods
out
push
nop
test
imul
nopl
inc
mov
mov
jge
mov
fisttpll
test
in
mov
in
loopne
lea
pop
xor
mov
mov
int
mov
test
lahf
loop
mov
adc
xchg
jo
lea
mov
sbb
or
cmp
push
icebp
pop
and
icebp
cmpsl
cli
lret
das
lock
movsb
cmp
imul
test
push
js
outsb
ficomps
sbb
out
xlat
stc
in
sub
inc
out
orb
aaa
or
mov
or
jnp
jnp
ljmp
mov
jle
jle,pt
mov
cli
popf
push
das
or
push
dec
in
dec
mov
jns
pop
data16
xor
rorl
and
jae
add
lcall
sahf
fmuls
stc
mov
push
inc
movsb
imul
loopne
inc
aad
sti
mov
out
loopne
imul
sub
pop
cmp
or
in
xchg
sbb
leave
pop
fstl
adc
jmp
mov
mov
idivb
xchg
pop
dec
sbb
inc
fs
push
jbe
mov
add
nop
or
fs
and
pushl
xchg
cwtl
add
mov
add
cltd
ds
mov
sahf
adc
adc
mov
out
or
push
dec
inc
sub
push
out
out
daa
cmp
jns
cmp
add
imul
std
jns
sbb
xchg
nop
jecxz
mov
jg
cmp
mov
rclb
adc
push
shlb
stos
push
icebp
std
in
cmp
mov
gs
inc
stos
or
lock
sbb
cmp
lret
les
jno
incl
es
dec
fildll
push
adc
xor
push
jae
imul
notb
lret
or
push
les
fisubrs
push
mov
xchg
cmpsl
mov
push
sahf
pop
dec
or
fisttpll
push
xchg
lods
push
pop
movsl
sahf
sub
inc
repz
cli
sbb
add
sbb
aam
sbb
stos
call
ja
xor
out
idivl
or
mov
jns
sbb
inc
js
subb
int
wrssd
or
movsb
jnp
in
fidivrl
hlt
inc
pop
ljmp
sarl
xchg
add
sbb
or
pushf
dec
ja
and
iret
xchg
mov
lds
icebp
push
or
mov
cltd
int
xchg
sub
aas
cwtl
imul
pushf
lds
or
sti
jae
or
mov
xor
xor
cmpsb
je
lea
fcomps
pop
mov
mov
mov
scas
vcomiss
push
xor
pop
jb
jecxz
test
sbb
testb
jno
mov
das
lods
xchg
lret
xchg
call
sti
sub
out
sahf
mov
jno
stc
cld
ret
repz
arpl
pop
mov
dec
cmc
sbb
pop
sub
fsubs
adc
adc
xor
popf
xor
xor
ficoms
jge
aad
pop
ja
sbb
ss
lret
shll
sahf
or
cltd
repz
xchg
pop
rolb
sbb
xorl
ret
xchg
push
inc
das
fwait
iret
negl
aas
cltd
cmp
or
xchg
dec
cmp
push
push
mov
in
mov
pusha
mov
aas
lret
scas
test
out
lods
dec
add
fstl
rorb
xor
fsubrs
pop
mov
out
out
lret
xchg
add
roll
or
test
insl
sbb
sub
push
das
cmp
or
stos
xorb
rcrl
ss
lock
cld
std
jp
push
std
jl
push
mov
pop
cs
imul
push
mov
leave
mov
dec
push
jb
lds
xchg
add
ds
or
push
es
push
mov
mov
and
inc
add
push
add
leave
push
mov
push
mov
jb
gs
xor
jge
nop
icebp
push
shll
rorb
outsb
adc
push
aad
cs
mov
in
stos
mov
xchg
xor
inc
cmp
out
orb
xchg
jg
ja
sub
ret
dec
lret
sti
cmpl
sbb
mov
scas
sbb
jae
out
add
add
xor
aas
adc
push
dec
mov
mov
lods
lcall
pusha
mov
cmpsb
mov
fildl
mov
bound
or
sub
ret
sbb
adc
push
mov
sbb
jae
xchg
pop
fldcw
in
jno
mov
stc
iret
bound
xor
xor
into
inc
xor
in
dec
scas
mov
sbb
pop
add
mov
inc
paddb
ror
dec
outsl
fdivrs
jecxz
xchg
inc
sahf
lds
and
push
pop
ficomps
or
lods
sub
scas
rorb
pop
adc
jns
into
aam
out
mov
or
ja
xlat
lahf
fcmovb
push
dec
ljmp
xor
mov
adc
dec
insl
mov
mov
push
call
mov
fs
insl
pop
sub
aad
mov
mov
loop
mov
pusha
insl
aam
scas
pushf
inc
iret
test
and
int3
inc
sub
data16
xchg
mov
int
pushl
into
testb
pushf
adc
into
ret
inc
insb
jle
xchg
inc
inc
or
inc
idivl
push
ficoms
stos
pop
pop
add
fwait
lods
cmpsl
insb
arpl
cmpsb
pop
mov
pop
adc
xchg
sbb
xor
ds
adc
push
rcr
addr16
mov
std
mov
movsb
sbb
ror
js
jmp
sbb
aaa
push
dec
pop
inc
aas
mov
push
mov
xlat
ljmp
cmpsb
inc
inc
into
scas
outsb
cmpsl
subb
ds
sbb
ficomps
aad
push
loop,pn
xchg
mov
and
sahf
cmc
xor
push
cmpsb
das
mov
and
pop
xor
push
into
xor
or
jo
adc
lahf
mov
jns
pop
int3
aas
pushf
pop
push
push
pusha
lds
shll
add
imul
inc
and
stos
loop
sbb
arpl
dec
cltd
mov
adc
cmc
lock
xchg
mov
out
leave
sbb
sbb
lcall
std
stos
popf
cld
dec
jg
mov
je
movsb
stc
pop
fiadds
xchg
push
pop
stc
test
push
cmpsl
aaa
cmp
jbe
xchg
inc
lcall
jp
adc
rolb
daa
mov
sbb
pop
or
xor
dec
mov
lret
or
pushf
cmpsb
addl
cmpsl
das
sbb
xchg
outsl
cmp
xchg
inc
ds
iret
ljmp
adc
pop
push
adc
sub
cmc
dec
stc
ror
pop
ficoms
sub
ret
dec
sarb
faddl
mov
arpl
lods
data16
movsl
or
lods
ficompl
sub
mov
ret
insl
push
push
adc
xchg
aad
or
idivl
sub
cli
push
push
jecxz
inc
push
mov
arpl
popa
int
jecxz
loop
add
push
mov
aas
out
jl
cltd
scas
hlt
cs
jp
jo
mov
into
sub
and
mov
and
movb
movsl
sub
jle
adc
xlat
xchg
xor
xchg
arpl
sub
mov
push
xlat
cs
inc
outsb
scas
pop
jne,pn
jns
pop
add
inc
ret
adc
std
mov
loopne
stos
ljmp
mov
jl
mov
xor
xchg
clc
jecxz
ss
jp
jecxz
repnz
test
mov
lahf
dec
popa
mov
jge
hlt
mov
mov
add
and
xor
inc
movsl
dec
cmp
pop
lcall
lods
ljmp
cmpsl
push
add
pop
sahf
es
fists
push
and
aam
sub
fs
push
lret
sbb
mov
cmp
and
xchg
cmp
inc
jbe
cli
in
ljmp
ret
out
mov
pop
and
adc
movsb
daa
push
push
iret
das
jbe
insl
add
imul
data16
inc
xchg
inc
sbb
or
test
dec
lea
dec
jno
jge
add
or
out
sbb
and
mov
add
xor
cmp
fmuls
in
jmp
lds
les
dec
cmpb
jae
repnz
inc
enter
mov
inc
popa
cmpl
inc
cmovbe
mov
ror
or
mov
sti
cmp
into
test
rcl
jl
scas
sar
push
sbb
dec
cli
je
je
pushf
dec
mov
test
mov
lea
xchg
ret
scas
fbstp
or
pop
xchg
repz
movsl
mov
mov
mov
xchg
inc
roll
loopne
mov
adc
add
movl
ds
sahf
sbb
out
cmp
xchg
icebp
aam
mov
ljmp
or
daa
add
dec
mov
mov
mov
and
stos
ljmp
ja
arpl
sbb
mov
in
and
iret
es
sub
ror
and
pop
xor
iret
test
pop
sub
stc
sbb
lcall
and
lods
js
adcl
jmp
pop
or
inc
scas
and
rclb
or
mov
cltd
jle
inc
cmc
jl
xchg
icebp
jnp
decb
mov
jg
mov
cmp
push
adc
xor
out
repnz
mov
out
leave
cwtl
addr16
mov
xchg
mov
push
fsub
xchg
mov
int3
fistl
mov
sub
in
arpl
fistl
ficoml
inc
clc
inc
icebp
lret
adc
test
fwait
gs
mov
inc
ret
push
lahf
push
and
adc
jp
mov
push
push
dec
in
movsb
scas
sub
or
pop
outsl
mov
cmp
lock
dec
push
dec
mov
ret
fldl
mov
cwtl
mov
cmp
jb
jmp
aaa
cmpsl
testb
and
aam
ja
lea
hlt
addr16
out
lea
mov
in
adc
repz
cmp
cli
flds
pop
pop
aas
dec
cmc
divl
push
je
fldl
mov
sbbb
rcrb
les
jl
and
data16
in
int
inc
rcl
and
lahf
push
lcall
test
sbb
ja
pop
or
dec
sub
call
jno
inc
mov
sub
fs
add
daa
mov
jg
sahf
push
jmp
test
hlt
xlat
sbb
pop
mov
xor
xchg
mov
vmovss
push
sub
clc
dec
sbbb
push
sbb
jb
inc
bnd
cltd
rcrb
dec
fistpll
shrb
iret
push
cwtl
adc
fwait
xchg
shlb
xchg
xchg
je
push
jne
in
subl
inc
mov
add
sbb
lds
xchg
mov
ja
lahf
jmp
lcall
mov
mov
popf
sar
xor
pushf
xor
adc
movsl
js
lret
jae
js
xchg
push
andb
jo
pop
mov
ret
adc
mov
lcall
mov
inc
pop
fsubr
push
jl
out
inc
dec
outsb
fwait
std
mov
pop
add
repnz
fisttpl
insb
pop
jmp
pop
mov
sbb
mov
pop
flds
jnp
hlt
adc
mov
and
rorl
mov
popa
stos
ljmp
xor
jnp
push
xor
stc
test
jmp
sbb
loop
add
jg
stc
loopne
xor
jl
out
cmpsl
fs
sub
cld
ljmp
sti
mov
shrb
lods
cmp
add
cmc
pusha
adc
lods
movsb
inc
repz
outsl
sbb
loope
and
lods
jecxz
fs
push
scas
data16
sbb
jmp
cmp
loope
hlt
dec
test
mov
filds
or
xor
popf
pop
push
addb
hlt
adc
es
add
cmpl
into
pop
movsb
sarl
jb
daa
push
les
sbb
in
lods
test
popa
cmc
rcrb
push
jecxz
cld
inc
or
dec
pop
ss
icebp
out
xchg
int
push
fcmove
adc
dec
jle
dec
out
clc
aad
dec
dec
cmpsb
subb
push
jno
cmpsb
outsb
imul
push
push
repnz
aas
scas
xor
inc
xchg
pop
pop
pop
icebp
mov
fprem1
jmp
mov
push
out
aam
jo
mov
mov
pop
fucomp
dec
xor
xchg
call
cmp
leave
and
mov
jle
dec
test
mov
insb
nop
jnp
mov
push
or
mov
and
gs
sbb
daa
jbe
imul
jg
mov
shrb
out
jno
mov
mov
ljmp
clc
pop
inc
ret
shl
lock
pushl
inc
or
addr16
hlt
add
inc
incb
mov
pop
mov
or
sbb
mov
daa
sub
ljmp
push
sub
pop
pop
inc
dec
fistl
cmpsb
xchg
or
out
mov
iret
arpl
pusha
or
jmp
int
xchg
pop
ss
leave
cmp
into
adc
adc
and
jb
insb
push
mov
fdivr
pop
mov
rorb
jp,pn
mov
fcoms
rorl
fiadds
pop
add
fildll
push
inc
movsb
jnp
out
icebp
stos
bnd
and
iret
or
clc
or
mov
loope
scas
maskmovq
idivl
cmp
in
sbb
cmp
ss
sti
cld
orb
pushf
inc
lods
push
rclb
pushf
repz
sbb
xchg
cmovo
scas
sbb
xor
stos
cli
pop
cmc
add
jnp
sbb
arpl
mov
push
outsl
mov
aaa
enter
mov
xchg
cli
jns
pop
pop
add
cs
icebp
jo
mov
cli
mul
xchg
cmc
cmp
int
adc
pop
ljmp
cmp
hlt
lahf
mov
lock
push
addr16
test
icebp
lahf
cs
xchg
push
dec
leave
sub
push
aam
outsb
sbb
sti
cmp
lcall
scas
insl
adc
imul
lods
int
adc
jae
imul
andb
cld
jb
mov
jno
adc
adc
popf
test
or
or
xor
pop
xor
mov
repnz
leave
out
in
adc
divl
div
sub
xchg
cli
cld
loop
push
ljmp
push
inc
cmpsb
leave
add
lahf
testl
mov
movsb
push
mov
adc
jb
mov
add
pop
addr16
cmp
jno
mull
pop
pop
movsb
outsb
stc
sarb
add
mov
lea
sbb
pop
dec
sarb
in
cs
mov
popa
add
mov
jns
es
pop
dec
out
es
push
cld
sub
mov
test
adc
fildll
test
lret
imul
push
lds
xchg
mov
dec
cmp
das
inc
xchg
mov
daa
sub
and
push
mov
into
shlb
outsl
mov
mov
out
mov
shl
lods
push
add
pop
subl
bnd
sahf
sbb
fs
es
shll
and
cmpsl
cmpsb
jno
mov
aam
ret
push
insb
jle
pop
faddl
add
rclb
mov
adc
xor
xor
add
push
push
out
int
adc
pop
pop
pop
jo
repnz
sbb
inc
sub
mov
das
clc
mov
sub
pop
jmp
mov
mov
mov
cli
in
push
aas
and
xor
inc
aaa
jle
sarl
jbe
fdivr
pop
xchg
jmp
mov
out
insl
divl
adc
insb
jbe
jnp
flds
insb
mov
cmp
pop
cmp
mov
mov
in
push
mov
aam
loope
jl
testl
push
pusha
pop
lods
push
out
jns
mov
movsl
subl
arpl
jnp
jmp
adc
push
xchg
cmc
cmc
leave
shrb
lds
mov
xlat
jo
test
cmpsl
cmp
cld
fadd
push
cmc
adc
gs
shl
es
xchg
cli
jmp
enter
popf
shl
mov
mov
data16
xor
mov
repz
jne
cmp
int
cmpsl
test
pusha
push
stc
push
mull
dec
mov
fimuls
cwtl
jg
fsub
xor
pop
jns
or
cmpsl
mov
lods
test
lcall
fstpl
insl
flds
mov
bswap
lret
in
rclb
imul
sub
std
dec
cltd
fdecstp
pushf
pop
ljmp
insl
mov
movsb
cld
repz
fisubrs
sahf
daa
jno
test
xor
and
push
push
aaa
pop
testl
mov
jb
inc
adc
pop
jne
sub
xchg
popf
mov
xchg
mov
lcall
sti
fs
xor
fsubrs
push
jp
add
cmp
daa
ror
test
mov
dec
mov
bound
sub
in
jns
add
dec
shlb
fisubrl
jae
push
push
testb
xchg
xor
loope
jnp
and
sbb
test
sbb
add
xchg
inc
jle
ds
sbb
fwait
call
or
xor
scas
cmp
jl
sarl
adc
in
sahf
inc
nop
pop
cld
jmp
mov
mov
dec
insb
es
aas
pop
notb
xchg
xchg
or
arpl
xchg
outsb
stos
sbb
ficoms
push
xchg
inc
lahf
scas
xchg
lods
cmp
mov
pop
pop
xchg
mov
imul
mov
cmc
cs
loop
std
sub
push
mov
invd
or
dec
xchg
mov
pop
push
stos
cli
inc
cli
adc
fwait
push
jbe
es
jo
add
enter
bound
push
mov
ror
xorl
stos
push
out
mov
fcomp
aas
rolb
mov
pop
pop
lea
pop
dec
add
xor
test
adc
push
xchg
pushf
or
iret
lret
or
dec
mov
dec
add
shlb
or
jns
cmpsl
push
push
pop
pop
push
fistpl
mov
sub
xchg
sub
sub
outsb
inc
lods
jb
add
daa
mov
stc
jge
mov
jns
mov
stos
sahf
mov
push
fidivrs
xchg
inc
jne
cmp
ljmp
sbb
pop
xor
mov
hlt
cld
xchg
clc
or
mov
add
js
fnstenv
dec
sbb
shll
je
mov
pcmpgtd
add
loop
fdivrs
cld
sbb
pop
inc
inc
cmp
and
jle
xchg
cwtl
xor
imul
fimull
jmp
iret
lods
sbbb
gs
mov
pop
mov
dec
sbb
mov
mov
js
fldenv
inc
shrb
cmp
lret
cwtl
cmc
dec
lds
nop
test
enter
out
out
out
dec
int
jmp
xchg
jg
pop
mov
movsl
cmp
test
or
dec
pop
scas
rorl
jmp
faddl
mov
in
mov
pop
jmp
pop
dec
jl
out
and
outsb
lds
pop
addb
fstpl
mov
fs
popf
std
cmpsl
inc
mov
into
aam
ss
leave
sbb
jge
dec
lock
xchg
mov
data16
loopne
movsl
scas
out
and
repz
mov
cmp
pusha
rorb
ficomps
rcr
mov
or
adc
cmpsl
adc
ret
mov
fstps
fwait
mov
es
adc
dec
in
out
lods
iret
adc
sbb
jmp
xchg
pushf
cli
mov
stc
sbb
dec
xor
repz
pusha
cmp
negl
jge
fwait
and
fwait
test
jbe
das
mov
jnp
or
push
pop
addr16
add
ljmp
popf
jmp
mov
jne
mov
sarb
dec
sbbl
push
imul
bound
stos
jp
adc
add
hlt
xchg
mov
jl
push
cmp
push
test
dec
ret
push
push
cmp
out
dec
lret
stos
mov
inc
jg
adc
dec
int3
add
dec
push
loopne
test
sbb
mov
test
insb
push
sbb
decl
icebp
adc
and
out
pop
outsb
inc
push
sbb
outsb
sub
loope
cmp
stos
fs
out
or
push
insb
ja
outsb
out
mov
sahf
xchg
dec
orb
rol
cmp
movsbl
cli
push
push
cpuid
sbb
sbb
xchg
xchg
push
ljmp
mov
mov
mov
or
cld
sbb
fcomps
mov
sub
lods
roll
sti
addr16
fistpl
sbb
xor
mov
sbb
cmp
out
fld
sbb
jg
movsl
pop
pusha
push
sbb
cld
or
jp
mov
call
xor
and
loopne
inc
dec
insb
push
test
jge
add
ja
cmpsb
clc
jl
cmc
loop
insl
push
mov
loopne
inc
enter
rcr
dec
sbb
mov
in
cli
inc
repnz
rorb
xchg
inc
add
jo
push
cltd
mov
add
and
movsl
dec
inc
fisttpl
mov
and
cmpsl
cld
repz
xlat
jmp
mov
cmpsl
adc
scas
cmp
loopne
and
scas
in
mov
out
subl
pop
mov
cmp
ficomps
cli
adc
iret
lcall
adc
inc
inc
mov
sub
addb
aaa
icebp
test
fnstsw
sbb
mov
int
add
ret
fldt
outsb
divb
testl
inc
dec
pop
cmp
clc
mov
rcrl
and
aaa
loopne
sub
dec
stos
rorl
fisttpl
push
sub
inc
sub
mov
stos
sub
cs
push
aaa
inc
mov
or
mov
add
fisttps
xchg
hlt
fidivrl
mov
arpl
push
jb
cmp
inc
mov
pop
sub
cmpsb
lods
mov
xchg
xor
jbe
lods
in
jae
jmp
fdivl
arpl
es
dec
cmp
sub
outsl
test
adc
cs
pusha
loopne
cmp
repnz
shr
mov
ret
scas
adc
scas
rcrl
add
movsb
je
movsl
or
insl
add
jno
insl
int
aam
aad
dec
mov
arpl
mov
out
adc
aaa
sbb
cmpsl
mov
push
mov
aas
inc
movsb
movsb
inc
in
dec
lods
dec
mov
call
rcl
mov
loope
mov
int3
movsl
push
divl
jp
add
inc
add
push
ja
iret
push
lods
adc
fisttpll
out
mov
pop
dec
add
jae
push
lock
pushf
rcr
cmc
cld
das
repz
push
int3
inc
cld
jno
call
aas
jle
inc
stos
add
ficompl
pop
bsf
lcall
test
fdivrs
xchg
daa
aas
bound
fs
gs
mov
xchg
inc
cmp
cmp
sub
dec
lods
in
shr
push
mov
sahf
push
clc
jl
sahf
xchg
fbstp
rcrl
jecxz
ja
jl
cmp
fisubrl
repnz
aam
andb
in
lret
repz
jnp
dec
mov
push
leave
andl
push
imul
movsb
and
add
dec
xor
cltd
mov
lahf
sbb
add
add
inc
adc
mov
sub
add
pop
adc
shrl
sahf
mov
cs
repz
insl
cld
and
dec
std
sub
cs
cs
add
pop
jns
das
sub
fcmovbe
nop
jg
insb
ficompl
cmp
repnz
adc
ljmp
movsl
mov
lret
jmp
xchg
ficoml
xchg
mov
cld
sub
xor
mov
mov
aam
mov
repz
movsl
das
sub
fsubrl
pop
scas
adcl
adc
or
mov
jmp
fdivs
lods
mov
mov
test
fsub
push
aas
inc
sub
cld
mov
jmp
outsb
outsb
cli
jl
bound
pop
mov
es
cwtl
repz
sti
test
xor
addr16
xchg
sbb
scas
dec
je
xchg
fs
std
pop
cmpsb
push
andl
inc
cltd
in
pop
in
loop
jp
fisubs
cld
or
loopne
scas
xor
or
loopne
push
push
cld
addl
icebp
mov
adc
xchg
nop
and
loope
xchg
xor
rolb
sar
push
daa
sarl
cmpsb
pop
mov
ds
cld
adc
pop
repz
scas
mov
adc
aaa
cmc
xor
adc
into
push
pushf
jmp
in
pop
push
mov
xor
nop
int3
cltd
cmp
mov
jmp
xchg
lea
test
lcall
sbb
mov
pop
mov
add
loopne
in
movsw
aam
js
or
nop
out
arpl
shll
out
out
cltd
enter
ficomps
das
push
inc
popa
dec
mov
mov
xor
xor
pop
sarb
pop
les
push
pop
adc
jb
fdivrp
das
icebp
fcompl
fnstsw
and
cmpsb
xor
jle
push
lcall
stos
and
popa
test
fwait
sub
in
push
mov
mov
aam
clc
std
adcl
mov
adc
fisttpl
dec
scas
sbb
push
cmp
add
inc
or
cmpb
cmp
fimull
inc
es
aad
clc
incb
jle
sbb
jbe
inc
mov
cmp
cmpsl
or
jns
fsubrs
cmp
daa
mov
xchg
mov
mov
dec
jns
ror
jecxz
mov
movsl
inc
mov
les
or
add
pop
or
mov
push
inc
pushf
or
out
decb
xor
pushf
or
shr
fsub
mov
jbe
xchg
mov
mov
subl
sbb
pop
adc
cmp
inc
ret
add
mov
cmp
push
fwait
pop
testl
out
fs
sbb
jno
xchg
inc
sbb
out
mov
gs
dec
push
hlt
das
sahf
in
lods
lcall
adc
imul
std
enter
cmpsl
dec
call
pushf
loop
lods
mov
mov
xchg
pop
cmpsl
jne
dec
setb
orb
xlat
cmc
xor
mov
or
cmp
paddusw
in
push
in
jg
xor
dec
enter
mov
mov
xchg
mov
fstps
lahf
cmp
lods
inc
jbe
repz
hlt
pop
out
aaa
push
push
fwait
out
dec
mov
movsl
and
icebp
fs
test
inc
fnsave
mov
ljmp
and
out
push
xchg
mov
cvtpi2ps
dec
outsb
ret
loopne
add
pop
cs
xchg
sbb
enter
movsl
pushf
xor
xchg
sti
lret
test
mov
mov
repz
dec
mul
popf
insb
xchg
adc
push
jp
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
jmp
outsb
lods
or
mov
cmpsb
or
push
cmc
add
addl
dec
sbb
jp
outsb
enter
mov
jecxz
xor
adc
xor
adc
pop
ret
test
sbb
cmp
jns
aaa
sahf
hlt
aas
rcrl
ja
xor
subb
or
adc
lahf
jnp
dec
fnstcw
sti
cmpsl
bound
imul
je
dec
xlat
mov
ret
and
into
in
push
mov
aam
scas
push
lock
fisubs
insb
dec
mov
fdivl
cmp
lds
and
push
add
mov
add
mov
rolb
nop
repz
ds
sbb
int
or
pop
or
jne
setbe
les
and
jle
daa
test
and
fldcw
test
mov
dec
xchg
sbb
aam
gs
test
xchg
shr
mov
pop
imul
cmp
subb
or
roll
push
out
push
out
lock
bound
pop
and
push
test
nop
xor
fstl
gs
aas
mov
or
xchg
pop
fnsave
roll
fwait
shll
rorb
lret
xchg
inc
cld
adc
inc
pop
cmp
or
dec
in
mov
mov
repz
mov
in
dec
add
mov
cmpl
lods
in
aad
xchg
ljmp
xchg
lock
fiadds
insb
push
xor
pop
push
sarl
inc
pop
out
pop
shrb
mov
enter
fsts
into
imul
dec
stc
xor
loopne
xchg
jmp
or
repnz
jge
jbe
insb
add
icebp
cs
cli
lea
test
je
aam
jne
out
fs
mov
pop
xchg
pusha
and
jmp
jecxz
es
fcmove
xlat
in
mov
xor
lret
ret
dec
dec
sbb
add
push
cmpsl
in
in
pop
jo
sbb
mov
adc
rolb
inc
mov
pop
xlat
pop
adc
bnd
mov
inc
sbb
scas
xchg
push
adc
add
ljmp
sbb
div
out
das
dec
sbb
popa
ss
dec
sti
loopne
inc
push
jno
lods
fadds
cmp
outsl
ja
jnp
xor
pop
and
inc
pop
xchg
sbb
jg
xchg
js
jbe
add
and
fnsave
movsl
jbe
fbld
xor
xor
pop
sarb
loope
xor
loopne
inc
cmpl
arpl
std
lret
das
addr16
mov
sub
stos
add
inc
stos
xlat
movsl
and
maxps
lods
sbb
stos
pop
xor
out
leave
lahf
je
mov
inc
es
enter
mov
and
add
add
in
data16
jbe
mov
mov
jmp
and
push
inc
push
xor
popa
mov
out
jnp
in
xor
sti
cmp
aad
push
sbb
sub
mov
pop
das
jno
jg
aad
jns
jmp
or
in
jns
in
add
mov
test
popf
in
ljmp
scas
cmc
xchg
fsubs
xor
sub
xor
inc
add
aas
xor
mov
in
ljmp
sub
scas
mov
sti
jl
lock
add
mov
lret
cmpsl
in
test
loop
cld
insl
pop
fadd
das
jge
sub
mov
test
sbb
dec
sbb
pop
arpl
stos
repz
push
iret
in
push
jb
rolb
or
xchg
add
mov
xor
cmp
mov
stos
push
xchg
es
roll
jb
out
bound
mov
or
add
mov
fcom
jne
addr16
xchg
adc
aas
lock
jg
mov
xchg
inc
mov
cmp
aam
push
xor
sahf
fcompl
xchg
or
stc
enter
push
push
out
addr16
sahf
xor
sub
dec
mov
push
inc
inc
es
jmp
paddsw
pop
xchg
popa
mov
push
les
xor
mov
cmp
cmp
push
xchg
lods
in
mov
mov
push
mov
mov
mov
pop
ss
sub
inc
or
hlt
and
rcrb
push
pushf
xor
cmp
jne
scas
mov
xorb
mov
mov
ret
bswap
cltd
mov
daa
pop
fs
cli
stos
add
dec
ss
push
sti
ja
jns
fs
mov
out
lret
dec
ret
or
imulb
xor
fwait
test
daa
leave
xchg
mov
ljmp
rcrl
xchg
xchg
fisubl
loop
cmp
inc
rcll
out
ror
out
std
ficomps
cmpsl
movsl
cmc
ss
mov
cmp
sbb
mov
and
imul
imul
xchg
in
lds
fists
out
enter
xchg
das
roll
mov
scas
iret
jg
xchg
adc
mov
mov
inc
jne
dec
inc
addr16
mov
mov
push
adc
cwtl
fmuls
sarb
lcall
iret
pop
sbb
jo
fimuls
lock
daa
gs
stc
mov
loopne
mov
jno
nop
adc
in
mov
mov
or
add
int3
inc
test
cmpsb
shlb
jecxz,pn
push
in
cli
jmp
fsubrl
push
loope
jns
mov
outsb
addr16
dec
outsl
inc
andl
jp
mov
adc
leave
aad
test
lret
cmp
movsl
mov
mov
fwait
cld
rclb
sbb
jp
mov
fimuls
out
into
imul
lahf
adc
add
jno
divl
loop
loopne
sbb
aaa
stos
pop
out
xchg
into
aad
adc
inc
inc
push
inc
stc
mov
into
xchg
popa
push
mov
out
xchg
movsb
push
mov
lahf
iret
sti
pop
or
sbb
iret
clc
mulb
mov
mov
xor
inc
outsl
test
mov
cltd
imul
mov
lds
pop
test
mov
mov
adcl
sbb
push
xor
data16
xor
dec
mov
aam
out
imulb
add
inc
or
les
sti
shrl
mov
stos
fstps
daa
jbe
test
xchg
add
push
mov
mov
clc
push
mov
test
push
cmp
lods
aad
sbb
inc
xlat
lods
mov
lods
out
imul
lea
ds
fwait
xor
popa
shrb
mov
sarl
movb
push
mov
dec
mov
mov
adc
icebp
dec
and
pop
sahf
xchg
xor
mov
xchg
fs
or
stc
ret
inc
push
xor
ret
inc
les
aas
xor
pop
xor
sbb
stc
xor
add
cli
jo
sub
adc
cwtl
out
clc
pop
pop
insl
repz
stc
pop
jne
and
or
mov
pusha
test
sahf
shrb
test
push
imull
xchg
out
daa
cmp
out
mov
dec
cltd
adc
add
out
sbb
in
int
dec
subb
and
sti
in
mov
inc
jecxz
js
mov
jle
push
xchg
lock
cltd
add
popa
imulb
adc
mov
dec
mov
jb
push
aam
fwait
lahf
mov
lret
mov
ds
and
and
push
popa
and
les
sbb
popf
outsl
dec
test
sahf
jae
nop
lds
push
data16
mov
mov
out
pop
ror
pop
jne
js
test
shlb
scas
jo
adc
lds
push
jo
adc
jg
leave
mov
mov
cmpsl
xlat
lret
add
adc
and
mov
shrb
out
popa
cmp
aad
xlat
shl
sarb
mov
out
push
dec
xchg
or
loope
push
fiadds
jns
inc
ljmp
fwait
or
inc
mov
dec
notb
das
jns
hlt
push
adc
icebp
xlat
push
jbe
push
add
out
addr16
imul
jmp
cmp
pop
adc
mov
adc
lock
inc
jg
pushf
pushw
les
andl
lcall
inc
cmp
sbb
mov
mov
mov
shll
add
cltd
xchg
orl
cli
sub
jo
or
mov
mov
jl
push
or
dec
add
movsl
inc
mov
jo
add
push
cwtl
ja
push
and
sbbl
push
mov
push
xchg
into
pop
call
aas
sub
hlt
cmp
adc
fcmovu
mov
or
loop
scas
in
push
mov
xlat
add
out
lcall
mov
push
sub
js
out
inc
jmp
inc
cs
jne
jge
mov
mov
mov
enter
mov
std
sbb
lahf
pop
mov
in
push
repz
and
or
or
mov
jg
scas
ds
fsubrl
fs
xlat
insl
inc
lea
push
movsl
and
dec
push
outsl
inc
sbb
ss
aas
pushf
out
ds
xchg
rcll
push
stos
add
fwait
xchg
ret
push
aam
jae
push
pop
add
add
scas
jno
jne
scas
sub
push
jge
fbld
pop
rolb
jnp
push
inc
cmp
sbbl
xor
push
stc
out
mov
mov
pop
jb
and
jp
dec
inc
stc
and
and
xor
imulb
das
jg
je
pop
ss
les
js
mov
dec
add
fidivrl
out
xchg
rorl
jp
gs
test
fnstenv
loop
rclb
in
sub
aad
pop
push
sbb
dec
rcll
xchg
loope
inc
jnp
mov
pop
pop
fldcw
cmp
jg
outsb
and
in
cwtl
pop
out
or
ja
push
loope
shll
jns
in
data16
scas
mov
mov
fists
xchg
outsb
inc
jmp
mov
or
adc
nop
in
sub
loope
lahf
daa
jns
idivb
cs
out
jecxz
dec
pop
add
in
imul
or
add
xchg
xchg
iret
insb
cmp
adc
das
insb
test
adc
rcr
leave
mov
iret
sub
inc
lea
jae
leave
xlat
pop
std
lock
xor
in
movl
mov
xchg
mov
dec
mov
or
cwtl
add
stc
subb
popa
jbe
outsb
das
pop
imull
test
add
dec
lea
and
xchg
js
ret
or
adc
xchg
aas
jecxz
es
push
add
inc
into
es
stos
gs
jns
mov
jle
out
loopne
fsubrl
sbb
pop
in
sbb
fisubrs
inc
in
sub
data16
scas
stos
syscall
sbb
or
ror
pop
cmc
adc
fisubrl
xchg
dec
add
hlt
adc
rcr
cmp
mov
push
dec
inc
pop
les
jle
xchg
fidivrl
daa
jle
jns
cli
jg
ret
pop
xor
int3
inc
cmp
icebp
cli
out
mov
xchg
mov
mov
btr
add
ja
mov
repz
call
xchg
andl
imul
sbb
aaa
stos
cltd
or
mov
add
orl
pop
js
iret
mov
ja
ljmp
out
pop
jo
lock
sarl
push
fldt
mov
push
call
js
scas
iret
push
testb
mov
ds
add
mov
inc
mov
mov
and
add
out
test
inc
jg
repz
jne
stc
jno
xorb
nop
nop
dec
ret
push
jmp
mov
push
xchg
popa
or
push
push
adc
mov
xchg
and
sub
jns
xchg
jae
mov
cld
push
sti
pushf
xchg
test
adc
lahf
rorl
sar
fwait
jb
dec
fsubrl
cmpsb
and
xlat
dec
push
cmp
cmpsb
adc
sbb
mov
imul
rcrb
loop
push
mov
jnp
loope
leave
in
sarl
sub
aad
pop
dec
sarl
pop
mov
sub
inc
push
adc
dec
pop
inc
mov
inc
test
test
rcrl
in
mov
cs
jg
es
push
arpl
cltd
call
scas
adc
pop
cmpsb
scas
mov
cwtl
push
fwait
call
stos
pop
sbb
rclb
inc
dec
out
out
cwtl
push
cmpsb
insl
sbb
and
leave
enter
dec
aad
push
scas
mov
lods
dec
setnp
xchg
data16
loopne
rclb
cli
lea
pop
mov
lods
movsb
test
mov
outsl
jmp
test
inc
dec
pushf
mov
mov
cmp
das
insb
mov
jmp
test
flds
sti
fwait
adc
call
mov
test
rorl
jbe
dec
pop
push
push
cld
cwtl
loop
or
push
sbb
data16
scas
dec
pushf
and
push
adc
add
inc
dec
mov
mov
insb
bnd
jmp
adc
push
loopw
mov
in
add
pop
sbb
inc
jno
jp
cmp
aas
mov
out
test
xchg
and
lcall
add
sahf
jnp
test
add
mov
mov
in
dec
and
xlat
dec
in
inc
jb
mov
add
sub
sti
imul
dec
cmp
pop
mov
sub
pop
add
pop
cmp
cld
stc
fsubl
dec
inc
andb
dec
xchg
jp
pop
mov
jmp
push
sahf
leave
in
jb
mov
in
xchg
hlt
jle
popf
popf
enter
jge
lret
adc
push
and
xchg
fwait
repz
cltd
cwtl
lock
jl
data16
sub
fs
jge
xor
pop
mov
cmpsb
ret
inc
repnz
and
ss
and
cld
mov
xor
dec
flds
mov
ja
imul
ja
dec
sub
loopne
mov
adc
sub
scas
push
call
xchg
imul
inc
xorb
xor
subl
loope
ss
add
dec
je
cwtl
int
push
rorb
cmp
test
mov
jns
mov
lea
sub
fcmovu
ret
jge
xchg
xor
fsubrs
mov
sbb
or
aad
lret
cmc
jbe
push
es
jl
mov
ficoml
es
dec
loop
insb
mov
adc
cmpsb
test
push
iret
add
mov
add
jae
test
nop
push
push
fisttpl
stc
cmp
mov
lret
cmp
clc
cmp
jnp
lret
mov
and
mov
out
lret
and
jae
aad
and
push
and
adc
push
aaa
sub
arpl
inc
or
xchg
cmp
jns
dec
sub
xlat
hlt
mov
jns
mov
rclb
mov
pop
cmp
adc
movsb
lcall
dec
or
inc
mov
add
sub
adc
sub
aam
dec
cmp
test
jnp
mov
jb
dec
jns
dec
andl
dec
mov
sahf
insb
sub
sub
sbb
test
add
test
cmp
popa
insb
push
sbb
jmp
ret
lea
gs
enter
fdivr
rcll
inc
mov
adc
jl
jae
inc
adc
in
ret
push
cmp
pop
out
xor
xchg
test
pop
fidivrl
xor
test
mov
sbb
ret
xchg
and
inc
adc
andl
jp
call
and
out
adc
int
and
sahf
push
sub
jbe
pop
addr16
dec
inc
out
and
stc
aad
sub
shl
test
xor
les
test
mov
test
push
mov
fcmovbe
pop
mov
stos
fldl2e
jmp
adc
xor
dec
inc
rcl
dec
mov
jge
mov
cmp
repnz
inc
sub
dec
fsubrl
sbb
push
cmc
shll
hlt
pop
imul
push
push
mov
jle
outsb
jbe
repnz
dec
hlt
inc
push
cmp
mov
fldt
jmp
rorb
cmpsb
push
adc
push
add
dec
stc
sbb
sub
out
mov
js
mov
fwait
or
cmpsb
scas
xchg
clc
sbb
clc
fbstp
aam
test
jmp
mov
inc
push
test
lret
adc
jecxz
pop
sbb
or
dec
pop
mov
push
shrl
mov
mov
xor
aad
out
pop
mov
xchg
mov
rcrb
adc
dec
cli
jecxz
add
jb
pop
rolb
cmpsb
jg
cld
les
sahf
jecxz
jo
cmp
adc
outsl
mov
outsl
jl
shrb
daa
daa
pusha
inc
xchg
xor
movsl
js
mov
inc
es
out
push
stc
or
aaa
pushf
cmp
idivb
and
sub
adc
cmp
sbbb
or
pop
scas
dec
add
js
jnp
lahf
shr
add
mov
out
addb
sub
int3
cmc
pop
ljmp
std
fcompl
or
push
jb
fcom
push
stos
cmp
sbb
cmpsb
fiaddl
pop
add
aam
lods
out
dec
ljmp
dec
mov
mov
jp
subl
mov
in
loop
and
rcrb
adc
pusha
test
mov
pop
cld
fdiv
or
mov
mov
push
jae
arpl
nop
test
mov
es
lahf
rolb
push
inc
xchg
dec
test
xchg
sbb
jnp
daa
push
push
sti
paddusw
sbb
mov
rolb
add
cmp
mulb
push
jnp
inc
ret
movsl
cs
sbb
subl
cmp
test
lea
xchg
push
ss
movsl
push
cmp
and
hlt
jp
fisubrs
and
and
pop
mov
lea
xchg
pop
mov
pop
inc
mov
ja
xchg
sub
ss
loop
mov
sub
xor
mov
mov
xlat
sub
fildll
aas
mov
into
or
jne
loope
push
adc
pop
jno
leave
pop
rclb
scas
push
inc
cmp
loopne
mov
std
xlat
lods
lret
imul
fs
jnp
sub
mov
xor
or
and
jo
mov
mov
std
push
adc
cmp
inc
and
cwtl
mov
ss
push
cmp
in
xchg
push
hlt
filds
fs
stc
sub
ficoml
lret
adc
xor
loopne
mov
mov
mov
xchg
lods
and
sub
roll
push
xor
pop
insl
shl
mov
filds
add
inc
stc
adc
adc
test
mov
lods
loope
lods
cwtl
dec
or
movsb
mov
jmp
inc
out
lret
or
inc
or
xchg
ret
daa
mov
xchg
in
or
dec
or
inc
out
aas
test
push
push
mov
or
lret
jb
stc
stos
test
sbb
mov
or
cli
call
shlb
xchg
mov
and
test
outsb
lcall
add
cmc
pop
cmpsl
insb
pop
mov
scas
adc
cmp
out
push
pop
adc
push
int3
scas
call
cmpsb
sbb
pushf
xorl
jno
xchg
pop
inc
mov
push
jle
shrb
mulb
lods
ljmp
dec
xchg
frstor
fdivrs
push
adc
sub
andl
xor
push
mov
sub
cmp
jge
lea
sahf
punpckldq
mov
cwtl
sbb
int
inc
xor
enter
dec
mov
inc
aaa
inc
jb
mov
ljmp
add
push
insl
out
loope
cmp
inc
hlt
add
addr16
stos
and
cmp
add
das
fbld
sti
negl
int
imul
push
movsl
std
insb
mov
hlt
xchg
adcl
call
xchg
adc
mov
lods
push
insl
dec
js
fisttpl
inc
pushf
ret
sbb
mov
das
lea
push
sbb
mov
mov
test
dec
inc
rcrl
jne
shl
rcrl
test
xor
cmp
add
ret
jnp
int3
fndisi(8087
imul
popa
in
mov
xchg
outsl
call
js
les
mov
rcrb
in
cmp
scas
xchg
inc
and
div
pop
std
push
sub
sarb
xlat
or
cwtl
jb
pcmpgtw
push
xchg
mov
adc
push
mov
jne
movsl
ret
mov
lahf
inc
adc
aad
fnstenv
cmp
jno
gs
lods
xchg
mov
cmpsb
add
test
leave
shll
jns
mov
lods
js
push
lods
ljmp
or
ljmp
fwait
push
or
or
add
mov
mov
mov
in
lods
mov
insb
divb
xchg
inc
lret
xor
xchg
xchg
ror
mov
sub
mov
dec
push
or
and
aas
das
mov
lods
add
shrl
lret
lds
lds
aaa
add
push
sbb
push
iretw
xchg
pop
ficomps
mov
sub
xor
fbld
ja
inc
sub
popa
mov
sub
sub
mov
fxtract
cmc
push
xchg
cmc
pextrw
mov
pop
mul
fisubrl
les
pop
or
cmpl
mov
push
stos
inc
jbe
mov
dec
cli
mov
in
xor
sub
jb
sub
jmp
hlt
mov
iret
mov
mov
sbb
outsl
pushf
in
lahf
mov
clc
ss
fcmovnbe
fwait
int3
dec
jge
jns
adc
and
aad
mov
div
stos
xor
fsubs
clc
lock
arpl
pushf
sti
push
andb
pop
sbb
mov
jmp
jae
sub
cs
cwtl
popf
fldl
inc
bound
add
outsl
pushf
in
mov
inc
fistpll
orl
test
push
xlat
nop
cmp
test
pop
xadd
js
cwtl
mov
adc
ret
xor
and
inc
xor
pop
lcall
jae
sbb
movsl
mov
mov
imul
dec
cmc
repz
stos
mov
adc
cwtl
mov
add
pop
jo
mov
sti
and
inc
or
scas
out
insl
ja
push
test
xor
xchg
inc
xchg
or
ja
pop
jae
jp
sar
cmp
jo
xchg
test
pop
out
roll
mov
pop
inc
fimull
rcl
dec
test
xchg
adc
frstor
test
jb
xor
pop
popl
pushf
fld1
mov
lcall
ret
frstor
jno
fldl
sub
stc
leave
mov
cld
and
test
jp
add
and
mov
cmpsl
cli
in
mull
clc
rcr
or
cld
add
pushf
pushf
popa
sub
test
out
clc
xchg
outsb
shrl
das
inc
jbe
sub
sbb
mov
jbe
fisubrl
ja
xor
fildll
lahf
mov
xchg
cmp
movsb
nop
push
sub
push
pushf
xlat
xchg
sarb
out
pusha
adc
je
mov
int3
subb
adc
insl
popa
movsl
push
xchg
cmp
nopl
cmp
pop
cmp
clc
sysret
jp
pop
xchg
data16
mov
out
cmp
sub
mov
adc
inc
enter
test
and
pop
mov
das
insl
movsl
mov
ret
xchg
push
add
sbb
mov
pop
add
lret
gs
repz
in
call
fmuls
mov
or
or
fcoml
and
aad
inc
inc
or
xchg
lods
sbbl
jmp
aam
mov
and
lock
sbb
jmp
dec
jb,pt
jne
mov
xchg
mov
xchg
dec
mov
xor
int
push
mov
xlat
out
sbb
dec
outsb
ret
dec
scas
cli
xor
push
add
aas
and
fmuls
jmp
jnp
repnz
xchg
fwait
sub
adc
jle
add
adc
jle
fidivl
cmp
mov
decl
test
jo
sbb
xchg
lcall
sar
js
adc
ja
scas
push
cmp
sbb
and
out
dec
mov
imul
jle
push
inc
scas
xor
xor
pop
hlt
or
imul
xchg
lock
cmp
mov
mov
xchg
sti
cmc
sub
push
loop
jne
arpl
je
push
aam
fsubl
icebp
pushf
das
xor
mov
in
inc
mov
shl
fwait
mov
push
bound
add
and
insb
dec
pop
lahf
jle
jo
xchg
imul
adc
mov
cs
leave
outsb
push
into
outsb
ret
jb
xor
cwtl
xchg
sbb
and
mov
mov
adc
sbb
xor
add
adcl
mov
jg
test
adc
cmp
aas
cmp
pop
add
test
ljmp
adc
sub
add
sti
ret
decb
loop
sarb
mov
adc
mov
movl
je
stos
out
xorb
or
cmp
push
pop
imul
cmp
sub
and
cmpsl
test
add
popa
orb
fcoms
dec
lea
fists
xlat
jmp
pop
pop
je
jo
arpl
iret
cld
mov
xchg
decl
sub
shrb
test
jl
cmp
xchg
xchg
je
pop
jmp
cmpsb
int
loop
loopne
cli
fsts
movsb
jl
jg
fnsave
sub
mov
push
pop
popf
cmp
push
mov
dec
sub
mov
clc
jp
imul
stc
fdivl
mov
sbb
mov
xchg
add
data16
insl
out
xchg
test
inc
cmc
sub
sbb
shlb
adc
ja
mov
int
lea
lahf
or
adc
ds
mov
outsl
sbb
jg
inc
call
addb
pop
push
sti
sub
pop
push
sbb
pop
orb
jno
pop
lock
push
and
les
push
enter
outsb
mov
sbb
cld
sub
call
int
sbb
mov
in
jmp
sbb
aaa
repnz
xchg
xor
xlat
mov
sbb
shrb
lds
jb
xor
pop
add
cmp
outsb
ja
in
dec
out
hlt
mov
mov
push
gs
bound
or
inc
pop
fstpt
popf
dec
mov
jns
adc
mov
fidivrs
push
push
je
inc
jmp
xor
xlat
pop
mov
popa
cmpsl
je
test
inc
pusha
mov
mov
sub
push
adc
shll
orb
out
xchg
adc
stos
or
or
js
movl
adc
dec
adcb
fsubl
addr16
or
push
fsubrs
ret
popa
pop
icebp
mov
jbe
stc
notb
xchg
repnz
out
scas
sti
aas
in
das
inc
or
into
mov
mov
and
push
shll
data16
sbb
fistl
and
mov
loopne
pusha
cmpl
jnp
test
cmovb
aaa
dec
scas
sub
mov
aas
xchg
and
rcll
lods
decb
push
xlat
inc
mov
jge
sub
les
test
cmp
imul
pop
mov
cmp
fsubs
in
lahf
adc
xchg
outsl
or
fidivrl
fwait
out
fnsave
pop
dec
das
lahf
jbe
orb
sbb
ljmp
pop
mov
adc
jbe
xor
cmp
jns
and
jno
aad
inc
sbb
mov
mov
mov
mov
sti
out
adc
mov
mov
enter
mov
mov
mov
jle
add
ljmp
mov
push
add
mov
xchg
inc
pop
mov
enter
jle
push
ficoml
push
stos
loopne
sahf
cmpl
and
repnz
aad
aam
xchg
xor
adc
mov
xor
xacquire
cmp
xchg
mov
add
imul
push
aam
mov
jmp
adc
test
add
sbb
decb
loop
lret
lods
and
sub
sti
sbb
mov
rorb
cmpsb
mov
add
in
xchg
dec
sub
test
jg
pop
xlat
jbe
out
sub
cmp
push
sbbb
jns
scas
jecxz
outsb
popf
inc
mov
arpl
push
mov
add
mov
icebp
out
and
lret
cwtl
inc
sar
pop
loopne
push
out
clc
out
icebp
mov
jmp
out
xorb
cmp
push
xchg
test
arpl
cltd
xlat
push
mov
inc
dec
and
add
decl
mov
rcl
sub
rorb
dec
aas
jecxz
clc
es
sti
ljmp
sti
lret
es
call
jne
add
xchg
pop
push
sub
xchg
push
lods
hlt
and
xchg
jle
ficoms
cmp
xlat
sub
sbb
xchg
xor
cmp
jb
int
aas
jbe
roll
pushf
cmp
mov
jbe
adc
mov
mov
ret
inc
jbe
sti
cltd
fsubs
std
inc
push
dec
out
cld
loope
ret
clc
add
fnstcw
cmp
rorb
xchg
mov
aas
adc
jge
pusha
or
push
cmp
adc
xor
mov
push
sbb
rclb
pop
sub
or
sarb
xor
cmp
jae
sbb
xor
sub
clc
testl
push
cmp
aaa
sbb
outsb
adc
js
scas
jmp
or
pushf
lcall
push
ficoml
cmc
addb
add
cmpsb
jecxz
out
aam
add
adc
xor
mov
xchg
bound
inc
into
mov
xchg
mov
dec
movsl
cltd
pop
jns
jb
mov
idiv
cmpsb
sbbb
pop
popa
ja
pop
fstp
and
pushf
mov
inc
dec
fdivs
mov
cmp
fdivs
or
or
in
push
xchg
mov
out
cmp
mov
adc
push
xor
jmp
push
lea
repz
movsb
mov
movsb
sbb
cmp
cli
mov
cli
cmc
adc
sbb
mov
aas
push
int3
push
add
adc
movsb
adc
ret
sbb
out
in
mov
sti
dec
fcomps
int
push
xor
call
xor
mov
push
dec
mov
fdivs
xlat
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
mov
xorl
mov
mov
sbbl
xor
xorl
add
mov
and
mov
and
xor
xorl
push
xor
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
movzbl
or
mov
mov
subl
xor
mov
add
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
mov
movb
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
pushl
call
jmp
lea
incl
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
xor
movl
add
andl
mov
sbbl
movl
push
movl
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
mov
dec
mov
jmp
mov
or
push
mov
xor
xor
or
xor
mov
sbb
mov
mov
push
add
jmp
incl
mov
mov
inc
movl
cmp
jb
not
mov
xor
movl
add
jmp
movzwl
or
mov
adc
mov
adcl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
add
addl
movzwl
sbbl
mov
movzwl
and
mov
sbbl
movzwl
xor
add
mov
movl
mov
mov
inc
not
mov
movl
cmp
jne
and
mov
sub
mov
xorl
xor
and
add
mov
mov
sbbl
xor
add
adc
mov
addl
movl
movl
movl
movl
mov
movl
cmpl
je
cmpl
jb
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
xor
add
movzwl
mov
mov
je
mov
subl
mov
xor
xor
notl
sub
notl
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
mov
movl
add
andl
imul
mov
xor
mov
mov
add
mov
add
incl
or
mov
mov
mov
sbbl
add
xor
mov
dec
mov
add
mov
add
and
and
mov
xor
mov
subl
mov
lea
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
or
mov
sub
movzwl
and
add
mov
andl
mov
xor
adcl
add
movl
jne
movl
jmp
xorl
mov
subl
sub
xor
movl
cmpl
je
cmpl
jbe
jmp
push
call
xor
or
dec
mov
jmp
mov
subl
mov
mov
xor
decl
xor
adcl
sub
sub
xor
mov
mov
mov
jmp
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
addl
imul
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
addl
add
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
mov
mov
andl
add
movl
xor
mov
subl
mov
mov
xorl
add
xorl
and
or
mov
mov
sbb
mov
xorl
mov
lea
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
jmp
rcr
sbb
mov
nop
cs
or
and
imul
subl
outsl
das
jle
jne
pop
je
test
sbb
xor
icebp
movsl
pushf
mov
jle
xor
insl
arpl
dec
repz
jg
scas
bnd
test
lret
loopne
push
jmp
icebp
inc
ret
shll
aas
mov
xchg
sub
push
sbb
pop
xchg
xchg
dec
mov
shll
test
stos
mov
push
in
xchg
xlat
lcall
mov
adc
xor
icebp
and
cmpl
sub
je
mov
out
inc
out
pop
or
adc
or
test
mov
dec
or
sub
iret
adc
insb
mov
shl
outsl
sbb
rclb
inc
mov
add
add
jmp
pop
mov
dec
push
cmp
pop
sub
jb
inc
lock
es
jbe
pop
dec
adc
mov
lcall
mov
xchg
test
cld
lahf
jg
outsl
or
cld
out
xchg
sbb
push
adc
push
xchg
adc
lcall
inc
pusha
cmpsb
adc
sbb
adc
std
imul
xor
push
jno
jmp
pop
scas
andb
mov
push
fcomip
outsl
adc
inc
or
int3
jle
shlb
andnps
sub
pop
std
sbb
aaa
scas
xchg
push
add
lcall
mulps
inc
aad
es
repz
push
xor
dec
and
add
stos
mov
sbb
sti
popa
fdivrs
push
lods
ret
xchg
lds
add
add
daa
cmp
and
push
scas
outsl
das
cmp
btc
les
call
adc
div
mov
ret
fmull
pop
inc
ret
sbb
gs
jno
xor
testl
cmpsl
dec
xor
dec
or
sbb
mov
popa
mov
add
xchg
xor
xor
bound
clc
pushf
dec
xchg
jns
sbb
add
add
cwtl
inc
xorl
sbb
ret
lods
cmpsl
shl
xorb
ss
pushf
jge
stos
stos
mov
ss
mov
jmp
data16
jle
dec
xchg
xorb
push
xchg
pop
into
mov
xchg
push
push
roll
cld
in
jge
push
nop
leave
gs
and
jl
mov
cmpsb
jne
jle
push
in
push
add
sbb
cmp
jnp
pop
xor
inc
adc
stos
lock
dec
push
mov
cmp
jl
dec
int3
repz
or
mov
sti
data16
xchg
xchg
dec
mov
aas
ds
or
pusha
pusha
lahf
stc
xor
xor
mov
fidivrl
and
repnz
ds
sti
sub
insb
jbe
repz
pop
shrl
cmpsb
fsubl
stos
es
stc
cmpsb
inc
lea
jne
xchg
xchg
dec
loop
inc
mov
mov
add
lea
test
movsb
cwtl
mov
daa
daa
cmc
ja
xchg
xchg
fmul
ss
das
xor
jmp
and
push
fidivrs
mov
push
addl
inc
scas
in
clc
loope
sub
xor
movsl
mov
xchg
add
or
sub
pop
sub
repz
out
in
sub
stc
mov
cmp
pusha
cmpsl
cwtl
dec
fildl
sbb
jp
push
add
adc
mov
inc
mov
mov
cwtl
push
mov
pop
popa
adc
roll
jo
sub
popf
fbstp
cmpsb
jne
inc
xor
popf
fwait
xchg
cmpsl
fidivs
inc
mov
insb
gs
mov
repz
mov
push
lret
cwtl
push
jo
inc
mov
mov
mov
jno
lds
pop
sbb
xchg
mov
repnz
cld
or
popa
orl
jle
mov
add
loope
ljmp
sti
sub
cmp
add
fmuls
movsl
jb
pop
push
push
xor
jne
push
cld
adc
and
in
call
pop
xor
cmp
mov
and
cltd
lret
pop
cmp
sbb
aas
enter
mov
sbb
mov
out
xor
dec
leave
divl
lods
test
fbld
out
jp
cmpsb
test
repz
ret
and
das
rolb
push
stos
dec
sahf
cmp
xor
movsb
cld
enter
jmp
add
fwait
stc
pop
lret
xchg
int3
je
and
mov
mov
push
loop
push
fs
cmp
in
pop
inc
out
add
jmp
icebp
sbb
aam
add
nop
inc
mov
shr
fadd
outsl
jg
outsb
repz
add
pop
shll
loopne
aad
pop
inc
int
mov
sbb
xchg
add
mov
mov
jnp
or
mov
in
pop
int3
out
jge
add
or
sub
data16
rorl
lret
ljmp
out
das
pushf
hlt
fisubs
sbb
fsts
stc
bound
xlat
lret
sub
insl
pushf
pop
iret
add
cs
scas
sbb
out
ret
and
adc
sub
cmpsb
pop
ds
xchg
rcll
aas
mov
notl
inc
inc
xchg
sbb
mov
jo
xor
dec
sub
sub
outsb
sub
sub
inc
mov
cmp
inc
lret
and
jnp
push
sbb
pop
aam
imul
insb
cmpsl
scas
sub
adc
dec
jle
pop
add
add
mov
das
push
xchg
inc
add
jbe
fisttps
ja
ja
xor
or
cmp
mov
fisubs
mov
xor
repz
in
inc
leave
in
pop
jmp
insb
out
pop
pop
imul
fcompl
add
mov
sar
or
sub
arpl
jecxz
dec
and
xor
xchg
fs
ret
ja
add
add
mov
jg
inc
push
push
mov
ss
std
lret
cmpl
or
sahf
add
data16
and
jne
aas
mov
and
scas
cli
cmp
mov
aaa
lods
scas
insl
add
mull
imul
add
bt
out
or
mov
out
jge
ja
incl
lret
repz
pop
test
or
xchg
push
roll
add
lods
xchg
sbb
loope
rorl
xchg
pop
shl
mov
orl
data16
rolb
popa
inc
push
movl
dec
aas
adc
cltd
cmpsb
pop
cmp
outsl
pop
jmp
xchg
xchg
aam
cld
push
cmp
pop
add
xchg
adc
in
in
add
add
lcall
mov
lcall
pop
inc
mov
or
push
loopne
aad
inc
jo
cwtl
not
or
pop
dec
jo
fwait
adc
in
hlt
repz
or
and
cld
push
jo
mov
xor
and
mov
push
stos
cmpl
jl
jl
lcall
es
fidivrl
aas
ficomps
pusha
lea
adc
pop
les
ljmp
mov
and
aad
rolb
cmp
jo
lea
out
add
imul
and
lret
addb
ss
mov
std
and
test
outsl
xchg
stos
int3
dec
adcb
jl
xchg
lods
pandn
hlt
cmpsb
ja
xchg
mov
lods
movb
xchg
add
imul
popa
cmpsl
stc
xor
insl
inc
out
sbbl
adc
adc
cli
leave
mov
xchg
iret
lock
loop
fildl
mov
add
imul
fwait
pop
adc
push
call
add
les
insl
mov
faddl
cmp
jg
mov
jne
es
pop
rcr
dec
sti
add
imull
in
mov
sbb
ret
push
pop
addb
orl
lret
movsl
pusha
pushf
call
jo
repz
or
or
insl
ret
xor
hlt
sbb
sbb
stc
jbe
xor
mov
adc
out
pop
xor
call
sbb
push
xor
ja
push
xor
stc
dec
mov
cmpsb
mov
dec
adc
stos
leave
dec
test
fwait
mov
hlt
insl
cwtl
leave
adc
scas
aad
mov
pop
and
jns
push
ss
notb
movsl
pushf
test
les
adc
aas
into
inc
inc
lahf
fs
cmp
cwtl
rcll
add
inc
push
mov
lock
jmp
sub
shll
xchg
ljmp
cmp
pushf
xchg
dec
ja
and
outsb
dec
lret
xchg
cmc
cmp
mov
or
sbb
add
and
xchg
xchg
rorl
ficoml
mov
xchg
shl
and
and
int3
sti
mov
int
cld
shl
loopne
dec
cmp
pop
fistpll
imul
mov
mov
inc
sti
adc
lahf
cs
and
les
dec
in
push
mov
cwtl
xchg
cmp
cmp
loope
icebp
add
leave
sub
adc
iret
mov
sub
cld
dec
enter
aaa
sub
xlat
jmp
in
inc
mov
inc
cmc
adcl
mov
push
hlt
jno
cmc
pop
cmp
pop
in
leave
push
cmp
sarb
cmc
dec
lcall
sbb
pop
rcrl
xor
jecxz
inc
mov
cld
subl
in
xorb
subb
ret
pop
jge
lods
cmpsb
int
fadds
mov
lret
cld
lock
leave
cmp
fstp
subb
add
test
mov
mov
lock
jmp
icebp
jnp
fwait
aam
mov
sub
test
xchg
popa
loop
cmc
jne
test
sbb
adc
mov
ss
filds
pusha
push
sarl
jae
stc
cli
stos
mov
jno
cli
add
fstl
mov
lahf
stc
adc
fiadds
stos
fcomps
xor
sub
fs
dec
or
mov
xchg
jmp
lock
cmpsb
xor
push
fisttpl
push
cmp
add
mov
fcmovnb
jns
sti
dec
or
mov
dec
dec
fmull
jo
test
inc
pop
lods
sub
fnstcw
pop
jae
xor
and
xor
fs
mov
inc
jecxz
mov
scas
mov
outsb
push
fcomps
mov
test
adc
mov
xchg
cmp
arpl
dec
xor
push
sbb
fistps
fmull
hlt
cltd
int3
in
mov
mov
loop
lods
in
and
sbb
loopne
add
hlt
add
mov
mov
xor
test
inc
mov
pop
ljmp
cmp
hlt
and
cmp
jl
loope
outsb
data16
in
add
mov
ficompl
lods
sub
xchg
test
sbb
pop
outsl
sbb
adc
in
push
add
sbb
fisubrl
arpl
pusha
inc
xor
movsl
cmp
sbb
stos
or
lret
sbb
mov
push
cmp
dec
fldenv
imul
scas
jl
std
movsb
aaa
or
sub
pop
cmp
jle
sub
fidivl
stos
mov
xchg
sub
lret
orb
and
scas
dec
push
jl
bound
jbe
rolb
add
cmp
cmp
incb
xor
xchg
movsb
pushf
std
jecxz
stos
add
add
mov
sub
insb
or
ja
in
int
call
inc
movsl
add
jb
jg
gs
in
movsl
lahf
or
add
adc
xor
adc
pop
shr
stos
lods
pop
les
mov
sub
fwait
outsb
mov
test
or
shlb
enter
push
add
mov
and
pop
sbb
inc
bound
push
dec
mov
out
sbb
pop
add
lock
mov
test
out
push
movsb
and
jo
sbb
lret
dec
pop
push
fsub
lcall
inc
stos
or
js
into
pop
cs
inc
mov
push
pop
jb
sub
inc
push
test
sub
xor
and
adc
inc
inc
jb
jp
dec
inc
add
sub
fs
pop
out
fucom
into
push
add
mov
pop
lret
loope
jo
cltd
sbb
addr16
pusha
xor
pop
inc
mov
jno
or
mov
rcrb
cmp
pop
pusha
jno
push
test
cmp
and
sub
mov
and
mov
or
int
jae
push
or
push
lods
popf
mov
or
xor
mov
or
sahf
sub
sahf
xchg
and
fs
add
call
cs
out
cmc
loopne
mov
and
and
setne
loopne
nop
je
xor
sub
test
cmpsb
cmpsl
cmp
leave
arpl
and
add
lahf
dec
adc
add
xchg
addr16
je
lods
insl
dec
into
rorl
xor
fisttpl
cmp
in
movsb
aaa
dec
js
ja
stos
push
mov
mov
inc
cmp
xorb
ljmp
adc
loope
dec
daa
push
in
repnz
jb
inc
cli
scas
mov
xor
outsb
sti
enter
adc
or
dec
pop
inc
imul
inc
mov
pop
push
add
stos
jle
jns
sti
push
cmp
ds
stos
dec
stos
loop
mov
movsb
and
fmull
int3
mov
push
cmp
mov
scas
cli
cli
pop
sahf
insl
adc
fiadds
sbb
test
jle
xchg
sahf
adc
cmp
test
or
test
jge
cmp
cmp
jo
rorl
gs
push
sbb
lret
lcall
inc
mov
popa
mov
cs
mov
adc
mov
test
lods
aam
dec
mov
loope
jae
out
xchg
fidivrl
pop
in
sbb
jmp
fdiv
iret
cmc
daa
push
xchg
insl
push
jbe
in
pop
mov
lods
dec
js
mov
lds
loop
pop
daa
rorb
ljmp
jne
mov
cmc
sub
adc
ja
push
insb
out
scas
cmp
cld
faddl
lock
rol
aad
xchg
pusha
mov
cmp
pop
push
bound
test
mov
dec
sbb
subl
add
insb
icebp
fisttpl
pushf
cwtl
mov
hlt
mov
mov
xor
aad
jb
mov
out
push
sti
jno
int
popf
jecxz
lock
adc
data16
xchg
addr16
mov
xor
sbb
add
mov
popa
pop
dec
mov
or
jmp
dec
aad
pop
inc
out
mov
or
lret
inc
or
sbb
repz
pop
mov
in
inc
aam
imul
out
in
mov
pop
jle
cmpsl
or
test
dec
cmpsb
push
push
fsub
je
addr16
les
jo
into
rcrb
jae
lret
cwtl
sbb
les
mov
xchg
hlt
push
setge
adc
mov
sub
inc
scas
jmp
and
pop
and
aas
out
xchg
push
jae
jne
inc
cwtl
in
les
or
pop
mov
pop
fists
nop
pop
or
pop
or
jne
das
loop
dec
jae
in
pop
shll
notl
das
in
fs
push
mov
cmp
jb
push
push
pop
xor
test
xor
xchg
aas
decb
lret
loope
xor
movsl
roll
mov
and
mov
iretw
dec
mov
cmc
inc
inc
ljmp
repnz
pop
add
add
adc
lret
scas
mov
sarl
cmpsb
xor
cmp
sbb
xchg
decl
hlt
cmp
and
aad
push
stos
sbb
push
or
mov
pop
mov
ja
mov
dec
pop
arpl
shlb
sbb
insl
stos
les
sbb
push
inc
stos
lret
push
dec
pusha
inc
adc
xor
mov
insl
int3
cwtl
and
cmp
cmc
ror
and
xchg
bound
ficomps
subb
aad
enter
cmp
jnp
push
pop
or
ds
inc
pop
pop
test
xor
imul
cmp
push
mov
inc
lea
mov
je
lret
jp
or
mov
dec
or
dec
dec
insl
pop
add
pop
cmp
jg
add
cmp
jne
les
push
dec
lahf
push
out
sbb
in
ret
xlat
es
stos
dec
pop
shrb
jmp
addr16
jge
stos
push
stos
adc
pop
pop
rorl
fcompl
repnz
shrl
adc
repnz
push
lahf
sahf
out
nop
inc
repnz
lods
sub
lret
xchg
xchg
aam
and
mov
pop
push
cmp
ds
insb
lods
adc
pushf
jo
fwait
hlt
cwtl
jge
jge
dec
lods
cmp
pop
ja
adc
sub
pop
bound
cli
pushw
mov
inc
xchg
test
jl
sub
and
jbe
mov
jl
iret
divl
mov
sbb
bnd
sbb
out
push
idivl
push
push
and
dec
or
mov
sub
cmpsb
loopne
mov
cmp
pop
cmp
add
jbe
hlt
imul
pop
mov
sahf
lods
outsb
ja
add
xchg
int3
xor
sti
not
mov
and
push
add
jnp
sbb
divl
repz
btcl
or
sub
std
adc
add
add
xor
aaa
xchg
push
mov
push
popf
nop
aam
or
xor
jne
xorl
or
into
xor
das
inc
jne
fisubl
stos
movsb
cmpsb
push
out
xor
jnp
pop
xchg
dec
jg
jp
lcall
mov
in
mov
test
loop
push
or
pop
mov
lods
xor
movsw
aam
xchg
inc
xchg
adc
mov
sbb
adc
pop
std
cmpl
inc
push
iret
jae
mov
cmp
in
fcmovnb
adc
je
mov
adc
mov
mov
into
pop
mov
xchg
test
mov
enter
fs
test
and
push
cli
add
movsl
bound
nop
adc
sub
mov
inc
or
mov
pop
loopew
mov
in
cld
andb
cltd
ja
push
pop
mov
loopne
cld
aad
fiadds
adc
mov
add
push
xchg
add
mov
push
lods
dec
xchg
cmpsl
out
shrb
fwait
leave
imul
xchg
pop
xor
outsb
or
sub
repz
adc
insb
xor
icebp
rolb
cli
lcall
sbb
mov
sub
and
cmp
mov
and
pop
or
xchg
xor
call
adc
push
jl
vcvttsd2si
shrl
sti
cld
mov
rcrl
dec
cmpsb
scas
out
push
iret
fwait
roll
lods
sar
sti
loopne
bsr
iret
fmull
idivl
les
test
or
into
daa
mov
add
xchg
sub
pop
xor
cmp
in
loopne
shlb
nop
xchg
ss
out
out
add
jbe
leave
fdiv
push
ja
inc
jmp
push
iret
sbb
sbb
stos
cld
and
cmp
outsl
cmc
repz
mov
cmc
pop
mov
xchg
adc
dec
lds
shrb
iret
iret
or
lods
test
hlt
jae
cwtl
in
ljmp
test
sub
mov
ja
inc
dec
push
dec
mov
inc
ret
jo
daa
mov
jo
mov
pop
lods
inc
sahf
jnp
fbld
imul
scas
mov
mov
fnstsw
pop
cmp
sbbb
dec
loope
push
sbb
lret
test
jg
fwait
adc
into
in
xchg
adc
pop
testb
xlat
andl
inc
jle
mov
out
aam
icebp
xchg
insl
and
pop
push
jb
loop
lods
dec
cltd
dec
push
cmp
pop
jp
fidivl
sub
cmp
imul
push
xchg
sub
mov
test
add
shlb
arpl
mov
or
jbe
into
pusha
sbb
lahf
gs
dec
arpl
mov
cmpsb
scas
rolb
mov
pop
xor
test
sub
cmp
data16
dec
lcall
sbb
sbb
popa
jne
push
in
cmp
jnp
fsubl
shr
pop
mov
js
xchg
insb
push
mov
rclb
xchg
pop
nop
jb
sbb
ds
test
ficoms
mov
test
sub
lods
mov
sbb
and
sbb
add
mov
loope
mov
jno
sarl
add
cmp
jg
mov
loopne
ja
push
test
inc
jecxz
push
mov
in
pop
mov
dec
and
jbe
shlb
je
fidivl
shl
lahf
js
cmpsl
adc
aam
mov
ss
cmpl
pop
push
ret
jmp
or
and
pop
icebp
faddl
and
push
sbb
xor
aas
fwait
test
movsl
icebp
and
outsb
ljmp
test
fdivrs
inc
xchg
shrb
rcrl
rolb
pop
hlt
movsb
xchg
cmpsl
cmpsl
scas
sahf
es
push
mov
push
and
test
dec
lds
adcl
rorb
xor
movsl
inc
xchg
or
pop
shr
inc
fwait
mov
push
xchg
fbld
cld
push
jae
push
sbb
jnp
or
aad
outsb
aam
nop
pop
inc
gs
sahf
insb
popl
stos
inc
mov
push
and
sbb
dec
inc
mov
add
mov
mov
adc
mov
jg
rcrl
add
cwtl
xor
mov
icebp
or
adc
frstor
insl
es
mov
mov
mov
repz
or
imul
jo
sub
pop
daa
aas
add
xor
push
les
mov
lds
push
enter
xor
out
popa
jo
dec
loop
rcll
mov
in
sub
rcl
inc
xchg
ucomiss
out
repnz
lret
addr16
mov
ja
pop
and
mov
ja
cwtl
push
mov
push
push
outsl
fnstcw
xor
movsb
push
jle
stos
lods
jo
cmpsl
xchg
fwait
enter
cmp
or
and
sbb
cli
and
cli
mov
jbe
inc
add
stos
xor
data16
jno
push
mov
cwtl
shl
mov
cmpsl
jnp
mov
ds
mov
add
lock
sub
inc
xchg
jno
adc
and
dec
sarl
sub
push
shr
fldenv
popa
in
adc
jge
test
mov
out
mov
pop
adc
sub
enter
jmp
fwait
movsl
and
cmp
jnp
in
jbe
cmp
movsb
pop
cli
enter
mov
push
jbe
push
mov
dec
jecxz
icebp
jbe
dec
imul
dec
mov
pusha
push
inc
sbb
adc
adc
xchg
rcl
and
int
lds
imull
mov
jmp
or
inc
push
adc
or
xchg
xor
cmp
imul
push
and
mull
roll
push
cmpsl
test
mov
clc
repnz
std
pop
adc
xchg
icebp
dec
rorb
cli
jae
outsb
adc
insb
jg
icebp
adc
cwtl
xchg
or
add
dec
aad
xchg
aas
test
fiaddl
xor
ja
push
mov
je
sbb
cmp
push
xor
push
push
xchg
mov
xor
xchg
mov
mov
push
adc
clc
mov
jo
add
mov
fldt
cmp
inc
outsb
sub
aam
pop
xor
adc
mov
push
movsl
dec
leave
je
out
addr16
cmp
cmp
insb
inc
inc
popf
or
xor
adcb
leave
loopne
clc
sbb
test
hlt
mov
mov
or
push
mov
aam
jge
loope
iret
sub
jp
mov
lret
xor
mov
mov
pushf
pop
cld
add
pushf
mov
cmpl
xchg
mov
int
jle
dec
mov
out
icebp
pop
gs
xorb
decl
dec
mov
rcrb
lahf
scas
shl
adc
arpl
faddl
arpl
cmpsl
push
pop
mov
or
scas
mov
cmpsb
and
int
lea
lods
js
cmp
and
fsubrp
repnz
into
icebp
sbb
ret
lret
fwait
in
int
not
sahf
push
jecxz
popf
push
sahf
pop
lods
pushf
hlt
scas
jbe
xor
xor
mov
adc
xor
sbb
in
jae
add
aaa
dec
adc
shlb
xor
dec
add
and
xor
sbb
es
push
sub
mov
mov
push
mov
mov
outsl
dec
adc
fnstcw
cmp
scas
adc
pop
cmc
lret
or
jmp
or
dec
cs
shl
cmp
enter
push
mov
push
call
cld
fistpll
sbb
int3
jno
adc
in
pusha
push
push
inc
lods
mov
stos
mov
mov
inc
inc
lret
dec
or
call
xchg
and
mov
and
pop
stos
push
dec
xor
push
inc
dec
xor
mov
cmpsb
cli
pop
jmp
pop
dec
xchg
sub
jge
les
dec
cli
sahf
inc
jg
aaa
mov
or
repnz
mov
sub
ret
repnz
pop
repnz
inc
sub
jno
popa
jns
xor
mov
adc
aam
test
aad
lcall
sahf
sbb
pusha
mov
addl
stos
mov
or
fstp
xchg
aaa
xchg
lret
imul
mov
pop
sub
pop
mov
ret
ficompl
insl
inc
in
stos
bound
or
sub
add
push
mov
sub
stos
cmp
ljmp
int3
fstpl
xor
in
add
xchg
adc
stos
mov
pusha
sbb
lea
testl
inc
insb
or
lcall
pop
mov
sbb
imul
aaa
bound
adc
xchg
jl
xchg
fldenv
out
sbb
stos
imul
aam
push
mov
pop
sti
movsl
sbb
cmp
mov
or
sbb
stos
cmp
and
outsl
loope
fldl
insb
and
mov
xchg
xlat
loop
les
lea
jbe
push
cltd
xor
cmp
rcll
adc
push
push
lret
sahf
adc
negl
stos
jns
inc
and
xor
and
test
imul
movsb
fwait
sbb
or
xchg
sbb
mov
adc
inc
push
lret
or
punpcklwd
andl
pop
sarl
stc
ljmp
dec
sar
sbb
push
ret
sti
dec
mov
paddw
mov
data16
jle
fwait
xchg
or
inc
mull
pop
push
mov
add
sub
jmp
js
pusha
leave
push
jne
mov
icebp
jno
lret
inc
adc
repz
jle
sub
cmpsb
ja
mov
or
sbb
cmp
mov
cmpsb
in
clc
mov
aam
mov
ss
ret
fcompl
push
jno
add
mov
fucompp
fisubs
push
ret
lock
popf
mulb
clc
sub
test
push
leave
addr16
mov
shlb
dec
pop
popf
or
cmp
lock
aas
movsb
dec
mov
test
push
xchg
jle
inc
and
mov
xor
arpl
pop
lods
js
fmull
push
insb
mov
jmp
int
test
mov
popa
and
lea
nop
aad
xor
ja
fnsave
inc
jp
bound
out
mov
or
xchg
jmp
xlat
fsubl
add
jge
in
push
inc
push
pop
test
adc
mov
xor
xor
cmp
sub
pop
ret
jo
fcmovnbe
lahf
push
push
and
ds
push
mov
or
pusha
repnz
nop
daa
js
sahf
je
rorl
stos
movsb
insl
fdivl
ja
loop
cmp
out
sti
mov
mov
aam
aam
jmp
leave
lods
or
push
movsl
push
fs
xor
mov
into
and
or
xchg
cmp
call
pop
enter
sti
mov
es
inc
dec
jo
add
jo
scas
imulb
fimuls
dec
subb
jle
pop
add
mov
popf
cli
enter
movsl
cmp
cmp
lods
sarb
aas
cltd
in
lcall
cmp
cmp
lods
das
daa
xor
xlat
icebp
sub
or
pop
test
popf
pop
es
addr16
jle
sbb
in
or
lcall
xchg
int
sbb
and
or
dec
mov
aas
cmpsb
cmc
popa
adcb
test
jp
pop
dec
mov
and
data16
int3
mov
sahf
imul
lret
fistl
push
and
imul
js
pop
test
push
push
addr16
jge
jl
sbb
mov
add
popa
mov
incl
mov
or
mov
push
std
mov
js
enter
xchg
jne
arpl
push
jg
repz
movsb
out
cmp
adc
inc
lret
add
adc
aaa
js
rclb
inc
leave
in
pop
dec
outsl
add
ds
mov
jge
imul
ret
addr16
inc
mov
in
imul
cmpsl
mov
cli
test
into
mov
repz
ja
xlat
setl
dec
push
out
mov
sti
inc
neg
ret
cwtl
stc
pop
jmp
daa
in
mov
mov
outsb
clc
pusha
lret
jne
jl
mov
mov
sub
and
test
sub
push
pop
jg
inc
lock
je
xor
inc
xchg
out
into
inc
push
lea
or
hlt
xor
mov
lahf
inc
cmpl
outsb
stos
inc
or
mov
test
pushl
push
sub
movsb
test
loope
mov
repnz
addb
push
push
fcom
mov
fsubl
jmp
inc
mov
pop
int3
nop
dec
leave
in
loope
repnz
into
jo
lcall
les
push
sbb
cltd
orb
cmpl
movd
xchg
inc
test
cwtl
bound
mov
pop
fs
dec
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
jmp
repnz
repz
fwait
mov
jmp
adcl
addl
in
les
out
jnp
fsub
fwait
push
int3
dec
mov
dec
jmp
scas
nop
negl
shr
push
mov
add
mull
popw
fmull
popf
insb
xor
xor
out
mov
mov
xchg
es
sbb
push
iret
call
adc
mov
loopne
imul
pop
repz
call
pop
sbb
pusha
cwtl
das
in
repz
subb
adc
xchg
loope
aaa
ret
dec
addl
dec
push
out
pop
mov
movsl
pop
push
mov
das
mov
in
xor
add
movsl
xor
inc
dec
mov
sub
es
mov
aad
je
sub
sahf
fucomi
push
or
mov
sbb
sarl
test
mov
jne
popf
call
repnz
push
xor
iret
mov
inc
mov
loope
aaa
push
test
or
jge
in
dec
cmp
cld
sub
xchg
xchg
pop
jbe
push
xor
mov
pop
out
and
imul
mov
jne
mov
test
pop
mov
and
mov
repz
fisttpll
xchg
jmp
cld
ret
cli
insb
icebp
or
jmp
xlat
sub
cmp
shrb
scas
add
ret
adc
cmp
push
sub
jns
mov
jmp
inc
jae
push
adc
xlat
push
push
int3
pextrw
cmp
sub
ret
arpl
jp
mov
push
cli
aam
and
mov
cs
cs
cmc
call
xchg
jo
xchg
dec
xchg
imul
sbb
lock
ds
mov
test
popf
dec
cmpsb
pushf
mov
sbb
sbb
iret
add
stos
fmull
ret
insb
in
ficoms
pop
repnz
cmpsb
xor
jmp
ljmp
les
ja
loop
fs
ja
loope
popf
outsb
adc
pop
inc
pop
push
aas
les
cs
lret
add
xchg
in
pop
icebp
and
mov
adc
xchg
sbbl
out
inc
imul
cmp
arpl
pusha
add
out
fisttps
mov
cmp
dec
pushf
xchg
mov
xchg
dec
or
iret
sub
dec
loopne
rcrl
or
add
xlat
les
pop
jbe
mov
call
dec
jns
add
mov
adc
lret
add
sbb
jns
ja
xchg
push
into
push
sbb
add
hlt
das
adc
addr16
sahf
ret
inc
ret
popf
and
xchg
lret
inc
xchg
jmp
fsts
aam
movsb
daa
scas
add
ret
lock
adc
push
push
popf
js
fwait
test
outsl
inc
sbb
orb
imul
pushf
xor
inc
or
inc
adc
mov
mov
cwtl
mov
jmp
fsubrl
loope
bound
loopne
mov
inc
cmp
pop
xor
imull
pop
jle
or
add
pop
stos
cmp
sti
hlt
jmp
mov
jne
sub
rcrl
je
cmpl
daa
mov
int3
sub
xlat
or
in
mov
cmpsl
sub
das
outsl
dec
bound
dec
add
pop
pop
cmp
jp
xchg
jae
mov
adc
out
sbb
daa
in
into
sub
dec
icebp
xor
repnz
cs
xor
push
lret
nop
pop
jbe
out
ret
sti
xchg
out
stc
lcall
repnz
lods
insl
lods
mov
fldenv
scas
add
or
or
fstp
ljmp
pop
jmp
clc
repnz
shl
das
xor
xor
loop
gs
sub
dec
subl
add
lret
inc
mov
mov
and
jb
push
ljmp
cld
adc
mov
je
mov
sbbl
xchg
and
adc
rclb
dec
or
daa
xor
add
stos
sarb
fbld
pop
adc
sarl
pop
add
in
pop
test
pop
jmp
sub
pusha
mov
mov
dec
mov
sti
js
jo
mov
xchg
xchg
out
nop
aam
mov
outsl
mov
mov
gs
sbbl
in
int3
bnd
icebp
movlps
inc
setno
enter
leave
cltd
ss
inc
mov
xchg
mov
inc
jno
mov
jmp
fst
iret
fs
mov
pop
sbb
sbb
jbe
dec
pop
mov
mov
xor
push
and
and
xchg
stc
add
or
imul
nop
test
jbe
add
push
ds
fildl
mov
in
imull
lock
sub
jge
loopne
divl
xchg
sub
sbbl
or
mov
fs
lcall
push
aaa
dec
daa
mov
loopne
xor
adc
popf
ret
inc
cmp
pop
adc
dec
outsl
inc
aas
outsl
xor
pop
and
ja
mov
pop
aam
cli
icebp
mov
xchg
into
fs
mov
aad
sti
mov
fbld
sbb
xchg
mov
arpl
or
adc
testb
mov
pop
cmp
fistpll
dec
sbb
ret
pop
pop
lds
and
adc
inc
push
mov
outsb
add
jg
mov
inc
add
fisttpll
dec
test
mov
fst
aas
jg
pop
scas
jb
lcall
sbb
inc
arpl
or
enter
push
test
cmp
mov
das
test
in
rclb
ds
and
outsb
out
dec
aaa
mov
lcall
shrb
jmp
sahf
push
adc
lock
fbstp
std
mov
lret
aad
xlat
sbbb
inc
std
cs
lock
js
add
out
cltd
aas
loopne
add
movsb
mov
enter
inc
movsb
mov
xor
push
pop
dec
jecxz
roll
mov
jne
push
mov
into
shll
xlat
jns
cld
inc
insb
xorl
or
popa
or
ret
in
dec
cltd
lods
roll
cmp
stc
jbe
mov
test
pop
dec
inc
dec
fistpll
fimuls
nop
lock
mull
loope
out
push
lock
imul
xchg
stos
mov
add
add
lock
pop
mov
ret
push
or
inc
push
neg
sub
mov
stos
pop
out
insb
and
push
xlat
outsl
stos
sbb
hlt
and
insb
ds
push
and
mov
xchg
out
fcomps
or
xor
xor
jge
or
test
jmp
and
push
xor
jbe
out
mov
out
out
mov
add
inc
jo
sti
push
nop
push
loopne
pop
fld
ja
mov
jg
cmp
mov
sbb
inc
jmp
cmp
in
addb
xchg
ret
aas
adc
test
lret
shll
lods
xor
repz
adcl
lods
dec
fnstenv
pop
mov
aaa
xchg
mov
sub
or
rcrl
scas
bound
xor
xchg
lret
lahf
or
fs
aam
xchg
shrl
pop
mov
fidivl
mov
adc
js
or
aad
cmp
cmp
aad
mov
pop
push
mov
faddl
push
cmp
stc
mov
je
mov
mov
inc
push
mov
push
adc
inc
or
daa
add
xchg
xchg
lret
mov
mov
sub
lcall
cld
xchg
loopne
push
push
int
add
jbe
es
ja
nop
out
inc
and
xor
ljmp
pop
or
add
shll
adc
dec
add
sbb
pusha
cmp
outsb
pop
jle
push
mov
sub
mov
addr16
rolb
aam
mov
xlat
dec
pop
xor
in
stos
lods
lret
test
popf
enter
xlat
pushw
mov
movl
sub
test
imulb
dec
mov
jbe
xlat
xor
cmp
mov
dec
fstpl
jbe
dec
lea
sbb
mov
rclb
sarl
call
push
aas
adc
dec
and
je
push
rcrl
mov
out
ret
push
hlt
jbe
pop
in
mov
test
data16
cmp
mov
in
pushl
lcall
out
sbbb
test
aam
cmp
cwtl
and
add
lahf
daa
pusha
inc
dec
divb
mov
xor
and
shl
sbb
dec
test
add
stos
dec
add
ljmp
push
pop
jmp
test
in
jne
outsl
icebp
repnz
pop
cmp
mov
repnz
lods
add
adc
fxch
push
mov
adc
aam
in
inc
dec
lahf
rcl
out
mov
fldt
dec
insb
enter
push
push
jp
dec
in
or
out
dec
mov
mov
js
sub
test
xchg
or
pop
mov
or
add
lret
imul
xchg
lahf
std
andb
mov
leave
scas
je
jae
adc
xchg
lods
push
dec
in
lcall
sbb
cwtl
mov
jl
adc
rcrb
cmp
cmp
and
testb
xchg
or
es
and
aam
call
adc
push
mov
add
add
push
outsb
dec
sarb
and
xchg
idivl
xlat
jno
rcrl
inc
xchg
loopne
sbb
iret
jp
mov
nop
push
inc
and
popa
imul
mov
inc
cld
and
stos
mov
sbb
hlt
roll
rcrw
or
adc
mov
bswap
sub
inc
rcrb
mov
and
mov
push
cmp
jp
mov
add
or
in
aaa
psrld
popf
sub
hlt
jo
orl
pop
hlt
popa
add
fwait
jmp
xchg
and
mov
insl
imul
fs
pop
and
lods
ja
xor
int
gs
sbb
and
or
pop
scas
in
or
jecxz
dec
sbb
inc
jae
cmp
cld
mov
adc
jne
hlt
repnz
std
mov
mov
fildll
jne
or
cmpsb
daa
push
aam
push
stos
aaa
mov
popf
mov
or
and
sbb
sti
push
jl
sti
or
aad
add
mov
jb
push
xor
lret
mov
inc
and
mov
int
jmp
pop
mov
add
shlb
or
gs
mov
in
jge
or
add
inc
arpl
mov
sarl
insl
adc
push
or
sub
or
ret
aas
fwait
push
and
jecxz
inc
in
lahf
lods
aaa
adc
sbb
in
stc
cmp
enter
lods
or
hlt
into
push
scas
and
imul
cs
add
or
sub
inc
pop
sub
push
jno
and
cmp
push
mov
aam
jmp
inc
xchg
ljmp
xor
push
pop
adc
pop
imul
out
loope
lock
sbb
and
les
test
adc
pop
jl
add
mov
fiadds
pop
js
push
inc
sbb
push
cmpsl
cld
les
jl
cwtl
in
push
dec
mov
mov
pop
mov
jle
test
vpmuludq
test
call
movsl
sahf
arpl
rcrb
les
fidivrs
push
push
fisubrl
les
adc
call
cld
int
xchg
movb
xchg
cmpsl
push
pop
fildll
inc
lea
hlt
pop
push
jo
inc
mov
and
push
pop
daa
stc
ja
inc
gs
mov
pop
stos
push
cltd
cmpsb
ljmp
push
sahf
addr16
sbb
ja
xchg
enter
mov
loopne
je
je
mov
insl
lods
rorl
call
aaa
or
pop
cltd
or
sti
sti
sbb
push
jno
push
xor
and
jbe
in
xchg
push
loope
mov
jb
mov
mov
popw
je
mov
sti
cmp
ja
sbb
jmp
inc
nop
out
testb
fmuls
sbb
adc
push
outsb
imul
and
mov
pop
aaa
in
jnp
xchg
and
imul
ret
adc
mov
lcall
pop
jp
jg
and
popa
jae
daa
les
les
mov
dec
fs
jecxz
xor
xorb
add
pop
data16
jp
jo
daa
jae
cmpsb
xchg
fcomps
mov
dec
jecxz
in
xchg
cmpsl
add
mov
cld
jo
data16
clc
loop
aad
inc
mov
rolb
dec
out
iret
or
shlb
cmp
test
repz
js
and
dec
out
cmp
sbb
shlb
bsr
shl
jp
mov
lret
ss
aas
les
mov
inc
rcr
sbb
mov
out
push
xor
dec
leave
je
xor
movsb
lret
mov
imull
xor
mov
sbb
jg
nop
stc
pop
bound
andb
inc
inc
and
ja
add
shlb
cmc
ror
adc
test
fsubrs
mov
iret
movsb
loop
mov
pop
xchg
lret
xlat
sbb
xchg
push
movsb
and
bound
lcall
cltd
jecxz
mov
inc
fdiv
es
or
mov
gs
rorb
xor
hlt
shll
sbb
cmc
fstl
dec
sub
xor
test
mov
enter
add
into
outsb
push
sub
iret
jne
pushf
sub
mov
sbb
popf
and
fiaddl
add
jo
loopne
sub
xchg
lock
jp
push
pop
lds
add
inc
sqrtps
jg
xor
out
or
pop
sub
push
and
cmp
in
mov
sub
aad
clc
pop
mov
or
clc
adc
dec
data16
std
push
xlat
icebp
or
dec
lods
pop
push
or
jmp
mov
fbstp
icebp
sbb
jb
xor
or
fwait
imul
or
movsb
mov
push
mov
mov
int
lea
and
jae
mov
loope
movsl
lea
xor
push
pushf
mov
mov
popa
mov
loope
adc
xorb
jo
daa
inc
pop
out
in
outsb
ret
pop
bound
jl
mov
mov
ficoms
mov
inc
mov
fcoml
ljmp
cmp
dec
push
pop
add
xchg
adc
mov
mov
das
aad
pop
mov
jae
lods
inc
pop
data16
adc
mov
inc
inc
les
cmp
test
ja
test
jmp
mov
jnp
sti
jnp
inc
push
rol
cmp
jbe
lods
sub
lret
or
data16
rclb
pop
or
cmpl
jmp
and
mov
and
inc
hlt
ljmp
cli
jle
std
inc
xchg
cs
enter
fiadds
mov
cmp
andb
pop
cli
jae
std
out
sub
add
cmp
cltd
or
adc
sbb
mov
or
jo
int3
lcall
xchg
xchg
mov
pop
addr16
stos
adcb
push
scas
dec
stc
mov
fwait
push
sub
imul
ja
rcpps
xchg
push
jne
lods
sub
inc
nop
dec
scas
fs
mov
xchg
dec
jnp
mov
or
push
insb
or
ret
pop
test
lcall
jmp
cmp
icebp
es
push
lea
loop
mov
mov
push
addr16
fildl
cld
pop
outsl
cli
cwtl
daa
popa
pop
jecxz
sbb
xchg
mov
add
sahf
sbb
ret
pop
cmp
mov
out
sub
dec
jmp
mov
std
test
push
sbb
movsb
lds
outsl
in
pop
xor
aaa
mov
inc
mov
sti
fwait
mov
int3
ret
sbb
in
aam
adc
xor
test
repnz
sbbb
lea
je
xorl
sbb
sub
es
insl
loopne
pop
add
stos
xor
insb
repz
mov
jmp
outsl
xor
bound
loop
aad
pop
mov
mov
sti
mov
les
test
mov
jmp
xchg
add
dec
xchg
cmpsl
test
jge
push
sub
mov
ss
inc
test
fwait
mov
pop
adc
or
jmp
jge
push
lock
imul
fiaddl
stos
dec
testl
fninit
lods
mov
mov
add
sub
jmp
jg
and
mov
cld
or
imul
inc
pushf
push
mov
pop
push
fdivl
mov
push
in
push
dec
sbb
xor
cmpsl
fsubrl
mov
lods
stos
sub
cltd
push
xchg
fisubl
pushl
cmpsb
mov
mov
xchg
push
inc
gs
sub
push
pusha
xchg
jmp
fs
pop
xchg
mov
insb
or
out
pop
out
cltd
aam
mov
fs
enter
add
shufps
push
and
sbb
push
mov
add
sahf
loopne
jl
dec
je
cmp
sub
cmpsl
roll
les
repz
movsb
xchg
sti
ror
fidivl
inc
add
xchg
dec
iret
in
cmp
sub
in
dec
idivb
xor
xchg
push
enter
xchg
or
lret
in
inc
fwait
and
add
in
dec
mov
adc
stos
inc
movsb
jnp
icebp
or
inc
add
pop
sahf
sbbl
fbld
xlat
xchg
and
fldenv
fbstp
arpl
pop
mov
sahf
add
sub
call
cmp
mul
mov
mov
inc
sbb
sbb
cltd
pop
jg
fdivrl
jnp
stos
fwait
or
sbb
cmp
scas
sbb
stc
shll
xor
sbb
les
cwtl
shrb
mov
sbb
int
push
adc
rorb
jns
mov
je
fcomi
clc
or
sbbb
call
das
jae
or
inc
adc
test
ret
and
or
jno
aad
inc
add
sbb
jp
inc
lods
mov
mov
cmp
cltd
mov
xlat
mov
in
pop
sub
outsl
add
mov
sbb
data16
lret
fildl
iret
xchg
sbb
pop
imul
or
push
daa
sahf
aaa
xchg
or
fistl
push
xchg
mov
test
jle
mov
push
aad
int3
pusha
adcl
jb
outsl
insb
fbstp
add
jge
jmp
fdivs
inc
sbb
dec
and
pop
sbb
cmc
mov
push
loop
idivb
and
pushf
adc
push
aad
aaa
sub
jne
ljmp
and
and
xchg
inc
jno
push
sub
sub
cltd
pop
cli
lods
ja
inc
or
sbb
sub
cmp
enter
testl
cmpsb
pop
sub
adc
jmp
mov
sti
push
sarl
push
sub
dec
leave
xchg
adc
push
adc
sub
imul
xor
mov
jbe
in
dec
ret
and
jl
es
dec
push
gs
and
test
cmp
inc
lods
or
pop
xor
std
cs
jo
xor
push
in
lods
push
cmp
pop
jo
sbb
cld
push
mov
sub
mov
jae
in
add
adc
jmp
sbb
pusha
sbb
sub
inc
lock
fistpll
ret
pop
fstl
call
adc
fsincos
push
adc
add
sub
mov
aad
addr16
aad
or
sub
sbb
test
dec
stc
test
arpl
mov
je
ljmp
nop
nop
insb
xchg
test
std
add
push
in
int3
nop
inc
lds
stos
cmp
mov
xchg
dec
orl
sbb
xchg
mov
sub
mov
add
cmp
sahf
filds
pusha
fidivl
mov
fs
jl
mov
hlt
adc
ljmp
out
hlt
andl
push
pusha
stos
ss
pusha
sub
sti
pop
mov
jb
sti
addr16
mov
gs
cs
and
insb
pop
inc
xor
roll
in
fistpl
les
fisubs
cwtl
std
pop
iret
mov
shll
nop
inc
repnz
fistl
mov
nop
adc
loop
outsl
inc
popf
lock
cmp
shll
hlt
mov
dec
and
sbb
sub
dec
test
in
inc
xchg
push
jbe
testb
out
mov
sbb
xchg
icebp
mov
pop
push
jecxz
or
lcall
loope
imul
es
xor
cmc
cmp
dec
ret
mov
stos
lret
sub
shll
aaa
out
mov
icebp
adc
jecxz
cmp
div
mov
call
or
xor
cmpsb
incl
enter
insb
aaa
jmp
pop
sti
or
sti
test
pop
mov
js
fstl
icebp
out
push
mov
sub
loope
ja
cli
sbb
in
sub
pop
jo
or
inc
inc
arpl
loope
dec
arpl
push
lret
cmpl
or
xlat
sub
jge
jecxz
adc
xor
mov
test
push
or
add
into
icebp
cmp
lea
nop
fs
adc
mov
lcall
adc
ret
push
test
addb
mov
adc
xchg
test
fisttpll
data16
inc
loope
lods
inc
xchg
mov
cmpsb
mov
add
sbb
push
das
dec
mov
rorb
mov
or
mov
xchg
popf
fnsave
dec
sti
js
add
cwtl
loop
adc
pop
insb
mov
cmp
test
shlb
pop
lret
popf
pop
clc
adc
int3
dec
pushf
sub
xchg
pop
push
lods
xor
lock
movsb
sub
fldl
xor
aas
push
pushf
cld
jo
jle
inc
fcmovu
aad
fdiv
jno
pusha
out
insl
and
mov
add
inc
and
cmp
sub
and
and
daa
jnp
push
scas
add
cmp
iret
leave
jb
ret
leave
xor
shrl
outsl
or
mov
jg
inc
mov
ds
adc
or
jo
scas
cmp
xchg
mov
pop
and
movl
push
shll
bnd
rclb
cs
and
ss
jnp
dec
xchg
pop
sub
inc
mov
pop
sbb
addr16
cwtl
scas
cs
sbb
arpl
and
bound
xchg
fld
mov
rol
lea
pop
mov
pop
stos
dec
and
out
mov
inc
push
jecxz
lahf
call
insb
inc
cld
pop
sbb
cld
pop
or
pop
inc
push
xor
mov
push
dec
nop
ret
jecxz
sub
cmpb
rol
and
fiadds
in
xor
xchg
pop
inc
jle
jle
dec
inc
lock
fistps
jl
cmp
pop
test
fldenv
pop
inc
mov
mov
add
xchg
cli
add
into
mov
sbb
pop
sub
add
iret
out
pop
ja
es
push
mov
sbb
xor
outsl
pop
fcmove
mov
testl
jge
fistpl
mov
inc
roll
bnd
imull
add
mov
jg
adc
fsubs
cmp
mov
push
adcb
pop
pop
dec
in
dec
push
fcoms
mov
fdivrl
repz
ds
xorb
pop
loopne
fsub
jl
dec
pop
dec
mov
jmp
cmpsb
ret
push
jo
pop
imul
cld
lock
adc
inc
test
imul
shlb
subb
xor
test
fs
imul
aam
dec
jecxz
pushl
xchg
rorb
ljmp
ret
cmpl
and
mov
jl
fsubl
adc
jne
test
sub
inc
aaa
mov
xor
fimuls
jae
stos
adc
jb
mov
ret
mov
xor
xchg
mov
jne
shll
inc
cmp
sub
xchg
inc
ret
dec
mov
fstl
cmp
xor
mov
insb
cmpsl
ds
jge
jecxz
mov
jbe
movl
iret
adc
repnz
movsb
mull
cmpsb
pop
adc
push
mov
inc
sub
gs
scas
pop
pushf
ret
inc
dec
lret
es
pop
or
pop
ss
dec
popa
jp
mov
mov
mov
xor
mov
stos
pop
sbb
movb
and
rol
push
pop
in
and
or
js
pop
cmp
push
loope
les
cmp
xchg
add
lods
shr
ss
sub
stos
dec
mov
jg
push
push
mov
jns
ficomps
adc
rcl
or
ficompl
insb
testb
xor
orb
pop
pop
pop
jg
popf
sub
pop
lcall
cmp
popa
je
mov
jnp
push
mov
out
aad
sub
cld
scas
sbb
into
adc
jo
adc
stos
or
gs
lret
xchg
and
sbb
inc
ret
xchg
test
je
das
mov
pop
lods
and
pop
pop
ds
dec
fistps
mov
enter
inc
outsb
ja
fwait
loope
push
sbb
xchg
mov
out
stos
addr16
or
andb
mov
test
lahf
ficomps
negl
or
js
stc
movsb
add
jmp
stos
mov
imul
sarl
mov
lods
or
sbb
cmc
loopne
mov
xor
or
cmc
sahf
inc
or
rcrb
xor
sbb
inc
pop
sub
test
mov
loop
push
jne
add
sbb
mov
and
pop
or
dec
xchg
gs
pop
loopne
not
or
cmpsl
xor
lret
scas
test
icebp
mov
mov
testb
xlat
pop
jno
cmp
or
mov
pusha
cltd
in
add
sbb
pop
cmp
scas
add
adc
sub
mov
sbb
mov
push
sbb
pushf
mov
sub
daa
rorb
xchg
cmp
std
insl
push
inc
stc
insl
inc
insb
inc
flds
ffreep
mov
loopne
ret
sbb
fisubrl
in
jecxz
inc
xchg
por
mov
push
pop
imul
pop
cmc
cmp
inc
clc
jb
cmpsb
pushf
xchg
stos
sbb
mov
lods
add
ds
cmpl
jecxz
cmp
fsts
and
xchg
or
add
test
sarl
pop
stc
sub
and
idivl
clc
aas
les
movsl
mov
cli
lahf
outsl
xchg
leave
xchg
sti
pop
movsb
imul
out
movsl
push
jnp
enter
push
cmp
fs
push
dec
or
cmpl
jo
testl
xchg
dec
mov
ds
xchg
dec
fisubrl
sarb
imul
push
push
dec
sbb
loop
push
rcl
add
jg
sbb
mov
idivb
sub
in
pop
mov
pop
dec
pop
cs
enter
xchg
xchg
add
in
aad
sub
test
fwait
mov
push
jge
mov
jbe
inc
cmp
movsl
push
sarl
xchg
jp
lods
mov
adc
mov
sub
ficoms
cli
cmpl
lea
adc
mov
mov
aad
xor
cld
scas
pop
pop
xor
inc
inc
int3
add
adc
xchg
pop
cwtl
add
adc
pop
adc
jb
scas
ss
in
loop
fcompl
and
xor
adc
scas
jp
test
and
pushf
arpl
jp
and
push
mov
dec
mov
stc
sub
lock
imul
ret
push
xchg
mov
sbb
pop
adc
mov
adc
jp
pop
xchg
xchg
loope
lods
enter
cmc
fldl
inc
or
in
xlat
mov
xor
pop
in
shll
jl
push
dec
inc
shlb
or
iret
divb
inc
incb
cld
xchg
add
ficomps
mov
push
cwtl
in
ljmp
icebp
xor
cs
push
push
jns
ret
fldl
mov
sub
je
cmp
sub
xchg
in
sub
clc
out
movb
push
dec
mov
add
lret
mov
pop
daa
xor
lock
aad
xchg
insl
out
cmp
adc
arpl
pop
xchg
fmuls
out
loope
pop
fbld
loopne
aaa
push
pushf
cmp
in
repnz
dec
xchg
in
lds
inc
xor
movsl
gs
cmp
test
mov
cmpsb
sub
mov
cmp
icebp
mov
cwtl
aam
mov
sbb
mov
cmp
adc
int3
pop
dec
xlat
repnz
imul
cmp
or
dec
add
pop
xor
sub
mov
mov
mov
xchg
jmp
pushf
mov
xor
mov
xchg
aas
add
mov
imul
cmp
js
mov
xchg
jne
iret
enter
stos
and
aad
int3
test
jae
mov
jne
xor
aad
adc
cmp
xchg
in
push
xchg
pusha
mov
mov
push
xchg
insl
push
pop
xchg
hlt
cmpsb
inc
or
mov
int
in
lods
jle
dec
das
mov
push
sub
cmp
incb
pop
fsubl
loope
into
mov
mov
mov
and
stos
pextrw
xor
sub
sub
jmp
adc
test
jmp
inc
addb
imul
cmp
jle
push
pusha
jae
popa
mov
outsl
jge
inc
repz
int
dec
inc
push
dec
adc
ror
int3
inc
test
mov
ja
les
ficomps
mov
clc
popf
enter
aaa
push
clc
dec
out
fistps
es
mov
inc
movsl
fwait
xor
das
movsb
lods
fwait
mov
insb
in
or
sub
sbb
lods
cmp
aad
mov
lods
xor
data16
push
sub
fldl
cmp
dec
jecxz
into
sbb
ljmp
leave
push
cmc
gs
jp
out
xlat
adc
jns
testb
imul
jmp
xor
xchg
movsl
lods
sub
pushf
and
xchg
ret
pop
cmp
cmp
jne
mov
daa
in
mov
mov
jle
imul
lret
and
mov
in
int
sbb
mov
jp
and
clc
dec
aas
mov
movsl
fstpl
lods
push
out
divb
mov
hlt
pushf
enter
push
ss
or
test
pop
or
inc
leave
adc
add
popf
lret
add
test
imulb
loop
stc
inc
insl
xchg
fiaddl
cmpsb
repnz
in
jp
jne
sbb
scas
in
fidivrl
xchg
cmp
mov
bound
out
and
cmc
mov
dec
push
xor
aad
push
lods
mov
fdivs
dec
jne
push
inc
inc
add
outsb
cld
adc
lods
mov
adc
jno
xorl
nop
js,pt
and
mov
sbbl
mov
rolb
mov
jb
jo
enter
pop
and
call
adc
or
add
daa
or
outsl
popf
call
or
sahf
cmp
jmp
int3
mov
ret
adc
pop
dec
movsl
sbb
aaa
and
scas
mov
sub
or
addr16
rcll
sub
sahf
mov
jns
jl
mov
jl
push
xchg
adc
push
int
test
xchg
mov
cmc
sub
ja
mov
jmp
inc
xchg
pop
je
xor
push
inc
push
add
jl
and
jmp
and
clc
pop
jo
or
mov
jecxz
xchg
rorl
jg
fdivr
jo
jp
sub
jl
cmp
loope
clc
pop
cmc
mov
adc
aas
mov
bound
mov
xchg
test
or
mov
test
das
lds
and
mov
jmp
push
shll
xchg
jmp
xchg
test
sahf
movsl
inc
push
xchg
std
jbe
sbb
aam
push
jne
test
jno
addr16
xor
add
popa
jmp
dec
sbb
nop
xchg
int3
or
adc
mov
jmp
mov
jmp
lret
mov
ficomps
xor
push
sbb
push
fldl
mov
xchg
mov
cmp
cpuid
pop
xlat
out
push
mov
cmp
dec
jae
xor
xor
xchg
or
cld
dec
outsb
je
pop
mov
sti
sub
sahf
es
ss
mov
test
xchg
pop
sub
dec
cmp
clc
or
mov
imul
or
xor
movl
into
dec
adc
jne
sbb
adc
je
jecxz
imul
cwtl
enter
pop
mov
mov
mov
cmp
popf
ljmp
mov
sahf
add
push
inc
dec
into
jg
cmpxchg
push
pop
jne
mov
cmpsl
push
nop
and
jp
mov
mov
and
je
insb
push
or
shrb
xchg
xor
lret
jb
push
aas
js
lea
imulb
loop
scas
mov
fwait
lret
in
adc
in
dec
add
xor
add
sbb
adc
fs
xchg
push
sbb
xlat
and
inc
data16
pop
sahf
pop
sahf
gs
push
fiaddl
xchg
sbb
outsl
and
in
or
cltd
clc
loope
cli
or
movsl
add
movsl
sbb
adc
push
sub
lcall
add
xor
std
loop
ret
sarl
add
mov
inc
lcall
and
mov
push
xlat
cwtl
lds
imul
and
fmuls
pop
gs
cmc
rcrl
pop
pop
push
pop
adc
out
sub
sbb
mov
ja
insl
inc
ret
mov
push
call
jp
and
inc
mov
fldcw
sub
xchg
sti
mov
push
fisubs
mov
jb
mov
sti
add
insb
addr16
xor
test
popa
mov
js
or
out
add
sbb
call
movb
cld
pop
adc
ror
cmp
push
movsb
clc
outsb
jg
loop
cmp
sub
stos
pop
sbb
xor
pushf
scas
adcl
int3
inc
jecxz
mov
in
push
aas
out
outsb
in
cmpsl
or
clc
movb
ljmp
xchg
hlt
adc
test
ret
sbb
sub
push
dec
fwait
cmp
jb
es
jns
cmp
push
test
sub
push
push
xchg
xchg
mov
xchg
cwtl
jns
sbb
push
out
sub
mov
jb
pop
js
lret
cmp
inc
push
lret
sbb
insb
dec
int
cmp
inc
sub
les
jno
out
xor
nop
int
loop
cwtl
add
cmc
add
mov
mov
pop
ret
or
push
push
rcrb
add
inc
sbb
addr16
push
sbb
dec
out
fdivs
repnz
sub
popf
inc
inc
rep
sbb
cs
lcall
test
push
sbb
sub
cltd
xchg
adcl
pusha
imul
test
sbb
push
movsb
mov
xchg
outsb
inc
mov
pop
pop
aad
push
cwtl
not
int3
jp
add
jne
pop
sti
and
shlb
negb
or
dec
add
mov
into
jp
imul
mov
daa
push
sbb
out
fcoms
aaa
mov
mov
push
jno
jb
mov
push
ficoml
das
inc
jge
incb
cmpsb
outsl
mov
add
add
inc
packssdw
pop
mov
xchg
sub
pop
push
daa
xchg
ss
imul
iret
mov
push
ret
xor
adc
aaa
test
push
mov
pop
push
pop
or
enter
xchg
mov
xchg
test
dec
ja
jl
jge
xchg
and
lods
pop
popf
neg
decl
inc
ljmp
dec
add
xlat
cs
ljmp
cmpsb
or
fiadds
bound
mov
lret
xor
in
and
mov
push
lahf
pop
int3
adc
adc
jecxz
mov
ret
daa
pop
jno
stos
mov
mov
fiadds
orb
addr16
adc
lret
test
jbe
dec
insl
lods
aas
int
xchg
push
mov
xor
icebp
mov
cmp
sub
mov
mov
and
mov
lock
ss
adc
mov
clc
mov
jno
add
mov
jno
test
xor
in
cmpsb
add
scas
adc
daa
pushw
pop
lea
inc
out
sbb
sbb
stos
in
dec
adcb
sbb
cmp
pushf
aaa
ds
xor
loop
fisttpl
int3
fbstp
push
pop
add
dec
mov
aas
sti
mov
dec
and
pop
jl
cmp
fimull
mov
jne
in
sti
mov
dec
jle
mov
xchg
inc
shll
sub
mov
jb
xlat
adc
jnp
cltd
out
sub
int3
out
insb
nop
pop
push
insl
mov
ss
xchg
inc
push
fs
jmp
add
stc
lret
out
mov
pop
cltd
jecxz
pop
aam
cmp
imulb
mov
or
lahf
push
mov
pop
mov
dec
out
loopne
fcomi
xchg
xchg
dec
xchg
sti
fmul
dec
rcrb
inc
sbb
repz
add
lret
push
xchg
dec
and
push
adc
lret
add
scas
data16
and
pop
sbb
pusha
rcrb
cmp
pop
in
pusha
mov
dec
arpl
add
fsubrp
loop
lods
pop
cltd
adc
or
aaa
xor
push
pop
adc
dec
sbb
mov
hlt
cmp
or
aad
push
ds
push
outsl
in
inc
mov
push
pop
adc
xor
imul
sub
stc
xor
sbb
xor
xchg
fadds
dec
addl
mov
xor
pop
push
mov
xchg
xor
fsubl
repnz
scas
dec
mov
mov
ljmp
or
sar
cli
sti
sbbl
pop
lock
dec
mov
inc
or
orps
sub
std
movsb
in
mov
sub
ds
xor
push
lcall
xchg
rcl
xor
in
cld
mov
das
loopne
hlt
mov
xchg
loop
aaa
push
jno
and
jl
nopl
cmp
xchg
cmp
mov
jne
dec
rcrb
adc
aam
punpckhdq
xchg
ljmp
mov
add
xchg
dec
push
in
sbb
push
pop
sarl
pop
push
stos
sub
add
daa
push
and
out
cwtl
cmp
rorl
lahf
mov
mov
mov
out
data16
sarl
xchg
sbb
jge
xor
adcb
sub
fidivl
in
xchg
jb
and
jg
pop
nop
push
lea
mov
fisttpl
repnz
insl
xlat
dec
pop
sbb
or
mov
xor
cmc
ljmp
cmp
push
shrb
or
fwait
jns
imul
or
xchg
sbbl
imul
addr16
jo
fimull
sti
imul
cmp
es
pop
daa
bound
mov
sub
loopne
adc
stos
fnstenv
es
push
push
inc
lds
pop
cmp
cmp
add
fiaddl
add
stc
sahf
imul
cmp
lret
loop
sbb
addr16
cmp
or
mov
push
pop
test
lds
mov
xor
ss
and
pop
stc
jnp
push
sub
in
cwtl
xchg
jns
xor
or
loopne
and
ret
xor
adc
add
sbbl
mov
jne
dec
push
adcl
cmpsb
push
mov
mov
add
xlat
pop
inc
cmp
out
test
xchg
mov
mov
jg
lret
in
dec
shll
add
sub
inc
mov
sbb
pop
test
xchg
sub
and
fdecstp
ret
add
and
xchg
mov
inc
repnz
cmp
fwait
push
mov
mov
adc
jb
sub
mov
and
xor
jb
mov
ret
cmpl
rclb
enter
fwait
cmp
pop
cmpsb
xchg
fisubl
aas
and
adc
jg
sti
or
imul
out
scas
test
stos
jecxz
jge
js
jne
shrl
std
xor
es
out
sti
cmp
lds
jmp
inc
jb
push
xor
call
inc
push
repz
push
adcl
mov
mov
xor
outsb
sub
out
sbb
incl
push
mov
lds
xlat
pushf
aaa
xor
jne
pusha
mov
not
rorl
call
cli
fcoml
cli
sub
sar
clc
cmp
inc
mov
add
pop
dec
cmp
sub
mov
sub
scas
or
mov
ljmp
sub
dec
mov
aad
xor
stos
fnstenv
mov
repnz
pop
fnsave
and
cmp
es
loop
aas
loopne
pmaxub
lds
sub
enter
mov
test
push
and
inc
loop
cmp
mov
jns
jo
hlt
mov
mov
outsb
lret
push
das
cmpl
out
aam
bound
fcmovnu
icebp
inc
jae
cli
fiaddl
inc
test
and
cmp
jp
outsb
push
out
dec
or
cmp
subb
pop
inc
outsb
aas
cmpb
loopne
add
dec
in
fmull
push
rolb
push
or
pop
mov
xchg
pop
popa
or
es
and
es
jne
jae
mov
pop
cmp
xchg
mov
shlb
push
ss
mov
cmp
add
push
dec
sub
sbb
xor
in
rcrb
daa
inc
mov
cmp
jbe
into
inc
lret
lret
xor
dec
jge
stos
xchg
jbe
and
rcrb
xor
and
mov
nop
jmp
test
dec
or
push
jp
clc
icebp
push
pop
jle
repz
xchg
dec
adc
xor
nop
aad
or
pop
filds
mov
xorb
or
and
sub
pop
adc
js
mov
test
repz
aas
fildll
out
jns
mov
adc
xchg
and
jns
ljmp
cmp
and
movsb
xor
adc
mov
adc
cmp
mov
lods
leave
push
mov
js
adc
mov
dec
lods
inc
rclb
ret
lret
and
std
mov
std
jae
aas
mov
jns
mov
lea
lcall
std
arpl
lcall
rolb
sub
bound
scas
in
or
adc
jno
push
das
shr
pushf
adc
popf
push
mov
out
pop
pushl
push
je
in
mov
sbb
inc
add
sub
jmp
xchg
jge,pt
lcall
mov
push
lahf
mov
in
or
push
mov
mov
adc
pusha
repnz
ss
add
adc
mov
aaa
mov
sbb
mov
negl
adc
lods
jnp
sub
xchg
mov
mov
push
dec
mov
out
cmp
rolb
insl
adc
mov
clc
sbb
pop
fcoml
jno
stos
mov
inc
dec
fcoml
lret
shrb
pushf
xchg
pop
insb
or
inc
mov
out
xor
es
pop
xchg
jg
add
aam
cmpsl
push
fwait
aas
dec
dec
aad
inc
jno
shll
cmp
loope
lret
xchg
pop
cwtl
sub
jp
subb
int
add
ffreep
clc
popa
fildl
jnp
andb
gs
fwait
jp
jmp
jge
dec
push
mov
fwait
mov
adc
dec
test
adc
mov
cs
loope
cmp
mov
add
sbb
lods
stos
jle
push
daa
jge
dec
fs
push
jecxz
push
add
push
dec
and
mov
movsl
cmp
mov
mov
lock
ss
sarb
inc
loope
inc
add
xlat
mov
or
ljmp
sbb
loop
pusha
iret
inc
call
dec
inc
cmc
xlat
aam
cmp
pop
inc
in
mov
mov
xorb
mov
push
mov
clc
das
insl
iret
xchg
mov
mov
stc
icebp
leave
arpl
std
jp
jbe
cmpsl
jns
push
leave
fildl
notl
ja
je
sub
clc
and
lea
loop
inc
in
gs
test
mov
or
inc
or
adcl
or
inc
jnp
cmpsl
cwtl
bswap
xchg
iret
int3
xchg
mov
out
adcb
dec
shrl
test
xchg
mov
cmp
addb
fimuls
sbb
jp
test
iret
sbb
test
mov
sbb
adc
add
mov
add
push
mov
inc
repz
sub
pop
pushf
into
test
or
fistps
cwtl
shrl
aaa
das
mov
pop
stc
jae
mov
push
or
or
mov
loope
xchg
add
daa
xchg
faddl
ds
stos
arpl
gs
out
repz
in
or
fucomp
push
sbb
jl
fwait
push
cmp
pop
sbbl
fyl2xp1
sti
inc
gs
in
adc
stos
adc
insb
out
xchg
adc
cmp
inc
adc
and
flds
sbb
inc
pop
dec
mov
inc
jb
dec
add
cmc
shll
shl
and
inc
xchg
xchg
xchg
sbb
mov
inc
sbb
fs
mov
iret
int3
mov
push
loope
xor
fsubs
xor
adc
cwtl
mull
jl
aaa
nop
loope
cld
filds
jmp
xor
xor
outsb
sub
pop
stos
pop
cs
aam
mov
pop
push
insl
jns
xchg
sub
mov
das
test
mov
pop
loope
ljmp
int
int
xor
rcrl
sahf
out
mov
mov
les
jecxz
mov
or
add
subl
sub
sub
aam
dec
jmp
test
mov
fwait
sub
out
adc
movsl
lods
sub
data16
jecxz
fdivrl
addr16
inc
sub
jecxz
sub
testl
pop
jmp
repnz
and
adc
push
addb
cld
test
mov
rorl
out
pop
subl
pop
xor
ret
mov
stos
jb
add
cmpl
hlt
pop
loope
andl
mov
rcr
mov
clc
mov
mov
push
cmpsl
cmp
mov
cmp
fisttpll
repz
xchg
push
xchg
inc
add
leave
iret
inc
and
sbb
cmc
dec
inc
ret
jle
xor
fwait
xor
enter
push
pop
or
or
popa
stc
hlt
outsl
fldcw
pop
out
sti
shr
mov
adc
mov
jg
mov
mov
or
rclb
push
dec
dec
xor
inc
fstpt
pop
test
cs
and
sti
dec
push
fcmovne
sub
lret
movsl
int3
xchg
scas
dec
mov
and
lds
lea
and
outsb
fldcw
dec
pop
imul
ret
dec
notb
push
leave
rclb
mov
mov
enter
repnz
push
cld
ds
stc
and
adc
add
inc
mov
inc
out
push
cmp
sub
mov
fwait
add
out
out
insl
test
jl
movsb
aad
aad
ret
out
scas
add
mov
lods
jl
pop
mov
mov
aam
jbe
pusha
mov
sbb
adc
adc
xchg
jne
and
jp
cmp
pusha
push
stc
mov
inc
mov
jle
lock
in
sub
fucomip
push
adc
rcll
jecxz
pop
push
fwait
test
cwtl
sub
pop
jecxz
in
daa
imul
mov
and
aaa
filds
xchg
add
movsl
stos
lcall
test
mov
enter
cmp
leavew
not
fcmove
pop
inc
and
jo
dec
ret
shlb
jmp
ss
mov
xchg
ja
js
sub
pop
lret
push
xor
push
in
xchg
test
fisttpl
call
ja
inc
adc
add
test
pop
sarb
sub
ret
jae
pusha
int
lcall
movsb
inc
mov
push
xor
fists
mull
sahf
and
and
add
ret
les
sahf
and
add
fcomps
ret
mov
imul
sbb
pop
test
outsb
lods
or
cli
jne
jmp
push
push
pop
aad
xchg
adc
insl
shlb
cmp
pop
adc
mov
cli
or
ljmp
popa
push
xor
mov
arpl
jge
jl
test
lods
cwtl
fildl
or
icebp
push
test
pusha
sbbl
iret
popf
jecxz
scas
movsl
adc
xchg
rep
cltd
divl
pushfw
sub
push
xchg
pop
xor
pop
pop
sbb
mov
mov
pop
mov
test
or
int
std
scas
mov
aad
ljmp
lahf
and
sbb
imul
adc
insl
loope
xor
into
xor
pop
xchg
sub
pusha
inc
lods
sbb
shll
xchg
popa
xchg
aad
rcr
arpl
in
jecxz
into
out
std
sbb
adc
stos
dec
mov
ret
jle
mov
ljmp
mov
or
push
jae
sub
push
bnd
inc
cs
sub
xchg
lret
clc
mov
lcall
int3
fcmovne
xchg
loope
and
xor
das
mov
jae
les
shrb
cltd
loopne
inc
push
bound
sbb
cmp
outsl
cmc
cmc
into
scas
and
xlat
sarl
dec
shlb
xchg
insl
and
dec
in
inc
push
aad
and
jl
out
and
imul
mov
out
neg
dec
addr16
mov
jb
stc
or
jnp
dec
push
out
dec
add
sbb
mov
adc
push
push
push
add
ret
testl
je
or
mov
fmuls
mov
pusha
lea
sahf
call
xchg
fnstenv
aam
inc
lahf
in
mov
xchg
push
xor
pop
xor
add
xor
push
inc
mov
in
fisttpl
jne
and
stos
fxch
cwtl
sbb
sub
pushf
sub
xlat
or
fstl
pop
sbb
repnz
sub
js
mov
mov
dec
mov
jmp
adc
sbb
aas
fwait
pop
out
mov
rorl
shlb
repnz
xchg
cwtl
lret
test
cltd
std
xor
inc
addr16
repnz
popa
lea
clc
scas
cmp
mov
jmp
xchg
cmp
icebp
aaa
mov
ss
pop
test
lods
mov
cmpsl
jnp
lret
inc
stc
push
or
idivw
into
cmp
push
xlat
sahf
loope
adc
les
lds
xor
arpl
div
lock
mov
rcl
xchg
sub
enter
ljmp
aam
sbb
or
push
insb
nop
lock
leave
cmpsl
push
push
push
xchg
jmp
ret
imul
jl
mov
inc
cmp
fidivs
icebp
push
mov
sub
xchg
int3
sbb
cmpl
pop
dec
or
xor
insb
pop
lea
jmp
lock
xchg
sbb
movsb
xchg
cmpsb
mov
and
ret
insb
dec
fcoml
cmp
in
aad
inc
add
ljmp
sbb
les
out
imul
fiaddl
addb
or
inc
je
loop
imul
and
test
sbb
mov
fistl
int3
mov
add
hlt
pop
cmp
or
lea
add
mov
mov
sti
adc
loopne
sub
shll
int
ret
pop
or
xchg
ret
sub
sbb
xchg
fistl
add
cmp
popf
pop
pop
popf
or
outsl
dec
xchg
cmp
or
loope
mov
sbb
dec
mov
cli
icebp
out
or
movsl
sahf
pop
out
push
jns
ss
cmp
lret
and
mov
xor
and
out
inc
adc
in
and
xchg
sub
adc
sahf
mov
cmc
nop
xchg
mov
push
sarl
inc
jne
mov
roll
push
les
sub
lds
add
and
xor
jl
jnp
xchg
in
sub
inc
mulb
cmp
sub
pop
les
mov
repz
loopne
lods
mov
dec
ficoms
outsl
lock
push
repnz
fs
mov
xorl
add
sbb
dec
xor
adc
mov
mov
nop
cmp
dec
int
jne
sbb
xor
mov
insl
inc
mov
fcmovnu
inc
cmp
and
or
mov
shlb
aad
pop
out
dec
mov
aad
add
call
xor
cmc
sbb
push
jmp
adc
inc
xor
int
mov
inc
dec
ss
jl
xlat
jge
jbe
scas
lea
movsl
xor
inc
inc
jne
pop
les
xchg
stos
out
and
scas
mov
add
mov
dec
push
pop
xchg
xchg
sub
xchg
xchg
inc
loop
in
push
mov
fcoml
movsl
sub
popf
or
fwait
adc
adc
arpl
dec
fsubr
loopne
andl
arpl
ret
popf
mov
xorb
je
sub
aaa
adc
add
mov
mov
mov
cmp
pop
aas
out
sbb
ds
sahf
outsb
or
add
inc
out
inc
pop
movsb
daa
fs
xor
pop
lcall
sbb
pop
dec
jb
mov
lcall
sbb
mov
test
jecxz
bswap
shlb
or
insl
adcb
xchg
subb
jmp
addr16
gs
cmp
pop
das
inc
sub
mov
lahf
cmp
movsl
mov
test
cli
lea
xor
lock
push
push
je
lods
xlat
ljmp
fbld
fisubrl
and
inc
push
cld
scas
mov
imul
in
sbb
test
push
mov
xchg
push
les
cltd
scas
cmp
cs
lahf
lds
mov
inc
rorl
mov
push
xchg
add
mov
loope
fnsave
out
xchg
mov
int3
mov
jns
test
xchg
mov
cmc
sbb
cmpsl
mov
ss
add
dec
cmpsb
xchg
out
mov
pop
repz
and
or
cmp
dec
arpl
sub
clc
pop
dec
bound
ja
mov
xchg
pop
sbb
push
pop
in
es
adc
gs
mov
push
mov
and
jge
fisubrl
jg
rol
inc
cld
lock
nop
sub
mov
dec
dec
jbe
nop
jae
sub
dec
mov
data16
filds
sub
mov
pop
nop
adc
stc
jne
stc
je
xchg
aad
das
jnp
leave
ja
adc
pop
rcrl
cmp
shll
adc
pop
dec
cwtl
shrb
mov
sub
mov
addl
and
push
inc
inc
arpl
je
sbb
push
test
mov
xchg
sbb
in
push
push
xchg
mov
or
mov
fsubrp
jo
adc
cwtl
mov
pusha
xchg
mov
out
lahf
sbb
mov
xchg
addr16
loope
ret
cmp
orb
and
ja
xorl
or
fwait
lock
jle
push
push
mov
fisubrs
cmp
test
scas
leave
out
mov
sti
xchg
test
mov
push
sub
pop
scas
lcall
sub
pusha
pop
insl
sub
pop
fwait
xor
cmp
jnp
mov
add
add
outsb
iret
adc
mov
cmp
imul
inc
imul
enter
sbb
cmp
incl
xor
outsb
in
inc
movsb
fwait
in
mov
repz
cmc
data16
aam
sbb
decl
rolb
idivb
movd
sbb
aaa
push
in
mov
push
sbb
aas
sahf
hlt
xchg
leave
and
push
push
xchg
out
pop
stos
loope
pop
mov
sbb
out
inc
int
daa
jnp
sahf
jo
fwait
xor
bsf
into
insb
xchg
xchg
aaa
and
pop
inc
push
push
and
xchg
out
cld
mov
jp
stos
or
inc
divb
jmp
xchg
test
dec
pop
mov
jmp
cmp
in
imul
mov
xchg
fdivs
sub
movsl
dec
ret
jbe
xor
jmp
or
iret
cmpsl
sbb
icebp
into
jb
sahf
cmp
jno
dec
stc
pop
std
xchg
pop
int3
fnstsw
rclb
das
fldenv
stc
fnstcw
adc
out
mov
sub
arpl
data16
dec
pop
mov
cmc
shlb
data16
das
xor
jmp
bnd
jle
mov
add
hlt
scas
aam
scas
lock
or
test
lds
add
je
sti
in
sti
std
repz
cli
and
je
lea
loopne
dec
and
xor
pop
add
subl
call
in
and
or
sbb
mov
adcl
sub
pop
popa
je
pop
call
addl
int3
cld
add
sbb
and
sbbl
dec
stc
pop
loop
out
dec
movsl
rorl
push
test
lea
sub
sbb
frstor
jnp
cmp
in
adc
jnp
jl
xchg
xchg
dec
sbb
lret
enter
xlat
aam
sbb
sbb
push
mov
jmp
lods
into
clc
hlt
outsl
push
mov
ljmp
icebp
sub
mulb
pop
and
cmpsl
sub
cwtl
nop
push
xchg
ret
add
push
add
cmp
inc
xchg
outsb
stos
sub
adc
das
ret
dec
sti
pop
mov
test
into
bound
xchg
scas
or
xchg
jp
ljmp
mov
lods
pop
and
cmp
or
push
xchg
xor
cli
add
cmp
jb
cli
jae
or
in
pop
or
inc
rcr
fisttpll
mov
nop
mov
fcomps
out
push
js
sbb
inc
in
jle
das
xchg
mov
inc
cwtl
mov
xor
ja
icebp
fwait
pop
jmp
dec
push
fdivp
push
dec
dec
nop
dec
loop
sahf
notb
fwait
jecxz
shrl
ss
out
inc
xlat
and
sbbb
mov
mov
xor
push
xor
imul
aad
push
call
aad
push
daa
cmp
cltd
or
lcall
sub
xor
lods
mov
cwtl
mov
fidivs
inc
sarl
mov
jns
pop
sbb
sub
jp
sbb
enter
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
jmp
aad
mov
mov
rorb
pusha
push
ss
sbb
adcl
addl
mov
cmp
inc
mov
xor
ja
imul
xlat
fs
cmp
mov
loope
jle
and
jns
jge
sarb
jle
jecxz
movsb
test
xchg
leave
outsl
mov
xchg
mov
mov
push
in
push
and
and
xchg
adc
mov
mov
cmp
pop
sahf
cld
adc
lods
js
cmp
mov
and
inc
mov
xor
pop
ret
push
int3
ret
je
jae
nop
popf
out
mov
int3
int
psubb
ljmp
mov
and
outsl
stc
stos
popa
out
aam
cmp
fcomi
lods
jne
stc
inc
dec
faddp
mov
mov
adc
inc
shlb
dec
and
mov
sub
scas
icebp
stc
test
xor
into
mov
or
and
aad
lret
in
xlat
xchg
dec
or
xlat
adc
cli
push
popf
fsubrp
aaa
dec
test
and
xor
inc
ss
sub
xchg
test
and
jne
shl
popa
mov
cmp
imul
repnz
inc
dec
sbb
mov
hlt
push
xrelease
nop
cmp
lret
dec
adc
push
fdivrl
pop
sbb
xchg
enter
dec
cs
enter
xchg
nop
jnp
fdivrs
nop
inc
inc
adc
fidivl
loopne
bound
rorb
push
fwait
ja
pop
arpl
test
sbb
or
mov
call
clc
push
dec
sbb
add
je
cmp
loope
mov
mov
xor
or
imul
hlt
fdivrl
jns
scas
int3
hlt
mov
insb
mov
nop
pusha
jnp
sahf
popf
inc
xchg
stos
call
push
in
dec
fsubrs
jmp
jmp
ljmp
dec
sahf
mov
sarb
jg
and
rep
movsb
in
popa
mov
arpl
push
mov
jbe
push
sar
imul
and
pusha
pop
xor
xor
aam
cmpsl
or
mov
pop
cmp
insb
and
stos
dec
pop
sub
das
jmp
xor
shr
test
mov
or
push
into
xchg
sarl
xor
mov
aas
jno
jp
mov
out
xor
inc
inc
fimuls
xlat
and
movsl
movsb
sbbl
push
lods
addr16
push
fildl
push
add
cmpsl
mov
mov
add
push
es
leave
mov
mov
push
mov
pop
add
stc
mov
aad
jl
sbb
icebp
sub
popf
sub
pop
xchg
cmp
jbe
out
jmp
cwtl
inc
jge
adc
in
add
pop
test
into
mov
cmc
stc
jl
cmc
pushf
and
scas
adc
add
mov
nop
repz
fidivrl
adc
fsubl
dec
ret
das
inc
pop
fmull
mov
movsl
adc
mov
push
sub
leave
push
test
movsb
stc
push
adc
leave
jecxz
xlat
or
xor
ljmp
xor
push
dec
icebp
hlt
or
mov
cmp
shrb
loopne
add
ljmp
lock
xchg
pusha
arpl
xchg
push
fstpt
out
add
lods
stc
loope
lret
jmp
xchg
and
inc
insb
dec
mov
xchg
aad
push
push
push
lds
arpl
inc
inc
add
jge
or
rclb
insl
mov
ret
push
pushf
inc
xor
nopl
mov
xchg
clc
pop
pop
int3
fists
mov
ljmp
mov
sbb
push
mov
das
int
dec
test
js
dec
hlt
mov
mov
pop
xchg
inc
sub
mov
jecxz
xchg
mov
fsts
repnz
pushf
das
add
pop
jge
xchg
dec
ds
push
and
mov
push
and
test
and
pop
pop
inc
cmp
dec
sahf
movsb
mov
xlat
jl
cmp
dec
pop
mov
xchg
loop
dec
pop
movsb
insb
sub
cs
test
orl
cmp
and
sbb
pop
test
add
sub
fldl
push
mov
decb
add
dec
adc
jmp
jecxz
loopne
sti
mov
daa
push
cltd
mov
dec
xchg
push
clc
adc
outsb
mov
cltd
popf
mull
xorl
out
push
enter
jmp
xlat
fwait
in
rorl
popf
sub
mov
mov
cmc
mov
xchg
and
cmp
lcall
popf
pop
mov
nop
aad
mov
push
and
ret
ss
jno
cmp
jno
mov
pop
mov
push
jg
cld
int
mov
add
jl
add
and
mov
out
cmp
loop
or
cld
call
cmp
push
or
mov
add
jne
aam
jle
adc
lret
movsb
mov
xchg
in
call
arpl
xor
sub
arpl
adc
ret
jno
int3
popa
cmp
jl
jnp
ret
push
or
mov
mov
xor
sahf
inc
mov
xor
push
in
stc
in
test
mov
xchg
fiaddl
adc
or
or
adcb
pop
aaa
scas
imul
jp
push
jecxz
jmp
pop
add
lods
stos
rcll
sbbb
jbe
movsl
add
es
push
cmc
rorl
outsl
dec
into
mov
int3
loop
les
xlat
sbb
incb
push
mov
jmp
je
test
adc
shll
or
out
push
sub
sbb
dec
mov
cli
mov
stos
xor
andb
lcall
dec
xchg
inc
in
or
jg
inc
sbbb
add
outsb
icebp
pop
and
in
lock
jmp
loope
mov
pop
lretw
dec
xchg
dec
xchg
mov
out
mov
mov
sarl
and
mov
xlat
mov
fistps
std
xchg
aam
add
cmp
mov
scas
shl
mov
std
mov
std
icebp
mov
lea
in
dec
add
lret
rolb
mov
scas
aaa
scas
lcall
ds
aaa
mov
add
mov
testb
shrl
push
ljmp
popa
lock
inc
lock
push
and
fwait
lahf
mov
dec
andl
insb
pop
stc
outsb
pop
call
outsl
enter
pusha
mov
fistl
xorb
rep
or
and
push
or
jae
gs
loop
loope
aas
dec
lock
xchg
ja
add
int
inc
push
pop
cmc
and
inc
stos
shlb
fimull
push
mov
cwtl
jo
insb
aad
xor
mov
mov
cmp
lahf
or
or
popf
outsl
xor
js
loope
mov
movsb
jo
push
jns
ds
jno
rcrl
lret
sbb
sahf
movl
push
push
fmuls
jp
jno
mov
movl
cmp
ss
add
and
lods
scas
out
ljmp
std
test
sbb
add
cwtl
adc
push
rclb
mov
push
or
mov
loopne
mov
mov
into
adc
clc
in
xchg
inc
hlt
xlat
push
sub
inc
orl
gs
add
scas
push
sub
jecxz
faddl
mov
jp
pop
aam
inc
fdivr
fisttps
cmp
jne
mov
cmc
lds
mov
rorl
mov
dec
js
add
fldt
es
mulb
dec
or
repnz
push
inc
xchg
ljmp
cmp
sub
aam
push
ficomps
xchg
ds
cwtl
ja
adc
xor
and
test
psrlq
xor
xlat
fs
push
sti
mov
and
int
mov
xchg
stc
push
jge
inc
sub
mov
mov
scas
jns
sub
sbb
inc
daa
lcall
mov
xor
dec
or
jno
lods
ds
icebp
sub
int
xor
xchg
push
je
lods
rorl
push
dec
popa
sub
jl
and
push
bound
stc
pop
mov
xchg
mov
sbb
sahf
add
push
sub
out
xchg
int3
addr16
adc
gs
mov
sub
lret
mov
inc
scas
and
cli
push
movsl
fsubp
cmp
mov
es
in
mov
jno
cmp
dec
mov
subps
pop
aam
mov
in
jbe
mov
bound
push
insl
out
aad
rcr
pop
stos
mov
call
xor
pop
dec
fstpl
fwait
push
add
push
out
push
push
pop
enter
jb
es
and
leave
aam
sbb
add
add
stos
fistl
fcmovbe
mov
mov
dec
sub
out
sbb
xchg
mov
xor
fs
mov
mov
push
out
push
pushf
lock
jno
enter
repz
pop
insl
adc
in
int
stos
jle
stos
adc
mov
std
lret
aam
fs
push
pop
add
lret
sbb
stos
mov
push
insb
xor
xchg
insb
in
es
repz
andb
rep
add
or
imul
pop
fbld
aam
xor
lret
sbb
out
rcll
push
loopne
push
mov
mov
les
ljmp
data16
adc
pop
icebp
aam
fists
add
xchg
in
dec
shrb
jg
ja
xchg
mov
pop
icebp
clc
aad
inc
jp
leave
inc
push
insb
cmpsb
xor
in
push
jno
inc
fwait
addr16
and
pop
in
cwtl
loopne
mov
and
jge
icebp
push
shrb
jo
ret
decl
fadds
hlt
hlt
jae
or
mov
lock
stos
inc
scas
enter
cmpsl
lds
lcall
xor
xor
jbe
fs
into
js
test
imul
jo
jle
je
adc
jbe
daa
adc
stos
ret
loope
out
mov
push
popa
mov
cmpsl
test
clc
xchg
mov
adc
nop
movsb
or
jbe
xor
cmpsl
dec
jle
test
sub
adc
movsb
out
and
dec
cmp
std
sbb
and
adc
push
stc
imul
push
shl
xor
mov
sbb
fsubrs
out
inc
lahf
xchg
push
stos
cwtl
mov
popf
rol
js
lcall
test
into
inc
stos
push
lods
inc
jmp
mov
sub
xchg
dec
repz
ss
push
mov
push
out
dec
xorb
xor
les
fstpl
leave
push
sub
mov
jle
ret
dec
xor
lret
pop
rol
jne
cmp
out
sub
pop
lcall
mov
mov
test
cmp
mov
outsl
mov
sbb
sub
and
sub
mov
and
sub
adc
in
movsb
stos
rclb
push
orb
and
sbb
inc
inc
js
faddl
dec
pop
or
adc
xchg
shlb
mov
dec
aam
cmp
sahf
orb
sahf
inc
jns
rorl
stos
cld
pop
push
xchg
sbb
xor
dec
dec
sub
idivl
cmp
lods
les
inc
mov
lcall
jno
lock
mov
jp
mov
pop
add
xchg
cmp
call
jle
lods
lret
sahf
andb
push
aas
icebp
sbb
xlat
jne
push
inc
xchg
sub
orb
jo
inc
inc
and
sbb
fxch
dec
inc
dec
mov
fs
and
xor
mov
pop
mov
mov
mov
cld
stos
iret
sbb
gs
inc
xchg
stos
mov
mov
je
add
lret
mov
loopne
mov
add
int3
rolb
jg
mov
in
push
repnz
mov
push
andl
cmp
xor
push
test
test
inc
xor
inc
outsb
dec
into
adc
cwtl
pop
add
mov
push
mov
hlt
push
insb
jbe
add
xor
out
into
scas
orl
push
mov
or
mov
insl
add
mov
mov
mov
cmp
out
movsl
roll
in
lods
cmc
xchg
xlat
shlb
ds
pop
add
sub
repnz
aas
dec
pop
pop
jp
mov
mov
pop
xchg
inc
jecxz
mov
xchg
cld
adc
insl
out
fsubrl
or
jmp
xor
fistpl
mov
rolb
and
or
fisubrs
or
add
pusha
call
inc
sbb
js
or
inc
mov
ret
es
cbtw
push
es
push
push
mov
imul
mov
pop
inc
inc
push
or
push
pop
daa
adc
fs
dec
iret
push
push
jle
sti
jmp
dec
insb
mov
rolb
mov
mov
add
pop
jo
pop
mov
adc
std
test
xor
or
push
or
ljmp
sbb
cmp
xchg
sahf
mov
clc
pop
arpl
sbb
mov
xor
test
out
sbb
ret
jg
jbe
mov
xor
lds
mov
imul
push
xchg
fidivs
cli
loope
sbb
sub
in
inc
mov
jne
imul
sub
dec
push
add
inc
push
sub
sub
mov
imul
dec
add
cld
or
xchg
sbb
aas
cmp
jb
and
push
stos
push
push
pop
pop
pop
sub
andl
inc
adc
pop
dec
or
sti
das
jge
jmp
sub
add
je
arpl
iret
cwtl
insb
push
add
test
and
and
imul
push
mov
shl
in
jl
mov
and
pop
sub
sub
mov
fsubrl
jg
in
aaa
push
shr
mov
mov
adc
push
inc
popl
cmc
cmp
sbb
mov
lock
and
subb
stc
cmc
repz
adc
sbb
mulb
cmp
loop
icebp
inc
adc
pop
daa
fdivrs
arpl
mov
fcomps
push
ja
dec
test
mov
push
or
cld
hlt
repnz
push
sbb
and
int3
cmpsl
repnz
cmpsb
mov
fidivrl
add
jae
sbb
rolb
push
mov
sbb
lea
push
mov
mov
push
sbb
movsb
lea
hlt
shl
enter
fwait
pop
and
sbb
jecxz
adc
mov
scas
jmp
jmp
outsl
jns
cli
pusha
sbb
mov
and
dec
cli
jns
lds
ss
push
inc
insl
mov
out
inc
mov
lods
xchg
push
popf
and
cmp
pop
cmp
inc
movsl
push
insb
mov
or
cmp
inc
add
hlt
jne
fdivrl
out
mov
mov
pop
sti
bnd
mov
xor
add
mov
pop
sbbl
dec
sbb
int
frstor
sub
je
jae
pop
mov
sarl
ds
cmp
mov
mov
and
test
rorb
sub
push
call
push
mov
jl
sbb
lahf
cmp
push
ljmp
inc
or
pusha
or
mov
leave
or
gs
sbb
and
push
in
js
pushf
add
imul
in
jl
inc
pop
xchg
or
pop
xchg
inc
aad
dec
sbb
add
mov
enter
jae
mov
sub
and
cltd
test
or
outsl
push
test
rcl
mov
outsb
cmp
xor
icebp
repz
sbb
ret
sub
nop
xchg
in
lds
or
or
es
outsl
fcmovnbe
adc
sub
das
testb
mov
and
inc
pushf
jno
and
popf
xchg
sbb
fmull
add
mov
adc
fimuls
push
fcoml
sti
pushf
loop
add
jbe
lods
lods
mov
cmp
adc
repz
lcall
add
outsb
ret
aas
push
ja
js
test
mov
and
cmpsl
jg
and
cmp
inc
lret
outsl
or
js
push
jne
bound
jne
push
cmpsl
and
dec
fbstp
mov
imul
fcmove
add
into
and
mov
lcall
repnz
inc
imul
jns
std
gs
testb
outsb
mov
pop
sbb
cmpb
int3
popf
mov
or
push
cmpsb
cmp
mov
test
icebp
sub
fsubl
or
cltd
imull
ret
sahf
mov
lret
mov
out
insl
shrl
and
dec
jl
imul
aas
andb
mov
popf
adc
data16
xor
fdivl
fldenv
filds
ss
adc
inc
decl
mov
cmpl
mov
xor
insl
dec
insl
mov
incw
shrl
dec
push
jp
xor
adc
pop
inc
jp
dec
gs
mov
jbe
in
in
fs
jnp
pop
inc
andl
xchg
movsl
mov
fcomps
fisttpll
lcall
push
cltd
mov
shl
lea
mov
pop
cmp
mov
inc
daa
cmpsb
jl
and
ds
ss
jl
fdivp
repnz
push
sub
aas
jns
push
cmp
call
ja
rol
ja
loopne,pt
enter
push
push
mov
pushf
lahf
nop
loopne
jbe
ret
xor
sbb
incb
decl
aas
push
add
inc
mov
ret
cmc
mov
add
lods
shll
dec
outsl
mov
push
ja
nop
mul
jae
xchg
repnz
sub
out
mov
mov
ds
push
movsl
test
inc
cwtl
add
mov
cmpsb
movsb
ss
repnz
ljmp
leave
loope
cmp
out
repnz
cltd
les
fldenv
dec
adc
test
movsl
mov
sahf
push
add
xchg
aam
xchg
imull
sub
call
mov
pop
inc
nop
outsl
imul
and
mov
or
xor
ret
sarb
es
sbb
data16
cltd
cld
pushf
bound
mov
insb
adcl
mov
stc
xorl
insl
inc
into
mov
xlat
mov
int
pop
aad
push
in
jb
jle
jo
mov
and
rorb
test
int
dec
iret
rorl
pop
inc
inc
mov
divl
stos
cld
stos
sbb
cli
test
mov
js
push
mov
sbb
jge
mov
pop
mov
jno
jne
pop
jb
mov
sub
orb
adc
test
cmp
dec
mov
or
xlat
push
clc
fildll
in
inc
data16
ret
insb
pop
mov
mov
add
dec
cmp
mov
xor
jmp
sub
and
cmp
loop
mov
and
std
mov
icebp
add
pushw
mov
mov
sub
subl
popf
pop
xchg
or
xor
push
nop
jbe
cmp
cs
sub
sub
or
mov
mov
iret
and
push
mov
repnz
pushf
orb
scas
jnp
sbb
mov
std
aas
icebp
cmp
dec
jl
pop
jbe
inc
fbld
add
pusha
ja
push
lock
scas
ja
nop
mov
mov
ljmp
cltd
mov
pop
xchg
jle
add
sub
pop
cltd
mov
movsb
mov
sub
sub
fadds
and
fstp
je
orb
mov
mov
sbb
mov
lods
ss
test
mov
enter
push
aaa
jne
outsb
data16
mov
out
les
sahf
cmc
outsb
sub
dec
iret
cltd
lcall
add
sub
push
jbe
fwait
and
adc
add
dec
mov
lea
lods
fucomp
pop
xchg
or
les
sbb
gs
xor
ret
ja
imul
dec
loopne
push
shrl
test
push
xor
movl
nop
loop
daa
or
mov
xor
aam
mov
sbb
arpl
mov
cmc
push
lret
cmpsb
cmp
xorb
xor
mov
insl
push
int3
and
stos
cmp
in
inc
mov
xchg
add
aas
jl
sub
xor
call
into
pop
lea
fdivl
xchg
add
loopne
mov
jno
xchg
add
hlt
js
out
loopne
outsb
jo
aad
sub
addb
mov
ja
sbb
sub
push
and
loop
adc
jnp
fcomps
pusha
add
andb
adcl
inc
rcll
pushf
jle
adc
je
int
mov
pushf
pop
sahf
dec
jns
shlb
rcll
movsb
inc
mov
ficoml
xor
mov
xor
push
in
add
cli
add
dec
xchg
mov
add
stos
dec
scas
pop
mov
dec
fnstenv
sub
loop
xor
pop
scas
popa
mov
mov
mov
test
call
daa
ret
pop
jae
dec
or
std
cwtl
lock
insl
out
xchg
fimull
sub
sbbb
jno
pop
icebp
sbb
lcall
jbe
lret
mov
in
mov
scas
loope
ja
shrl
mov
enter
sub
push
inc
or
pop
out
cmp
les
stc
inc
pop
movsb
xor
sbb
push
imulb
es
test
rorl
cwtl
aam
inc
dec
xchg
cmp
mov
lods
fsubrl
push
cld
pusha
lret
add
nop
mull
cwtl
aaa
ja
cmp
push
push
jno
test
fmuls
ficoms
loopne
add
pop
sub
add
rclb
fcompl
inc
and
dec
das
inc
adc
fmuls
adc
stos
fsubs
mov
or
sti
mov
das
outsl
std
repnz
cli
inc
icebp
inc
in
mov
outsl
pop
or
bound
push
add
cmp
ja
jne
dec
jmp
insl
fs
cmpsl
lret
inc
jl
negl
leave
mov
push
sbb
cmp
enter
fnstsw
stc
gs
xor
adc
cmpsl
outsb
jg
push
pop
ret
jnp
movsb
enter
out
cmpsl
cmpl
inc
nop
pop
insb
sub
out
std
sarb
negb
sbb
sbb
shlb
lret
movsb
adcb
jle
jg
cmc
or
mov
cmp
add
lds
cs
mov
lret
or
notl
dec
inc
xor
mov
push
and
and
mov
mov
or
out
inc
popf
add
xor
les
lods
fiaddl
mov
mov
adc
sub
inc
mov
ja
and
jge
mov
inc
or
and
rorb
xor
mov
fidivrs
ret
push
inc
lods
xor
xor
mov
loop
mov
push
mov
stos
in
fs
and
maxps
push
imul
mov
and
sbb
and
loopne
repnz
and
xor
jecxz
push
and
aas
sbb
pop
fildll
add
push
cltd
arpl
and
push
fcmovu
in
xchg
out
pusha
fmulp
and
sub
call
loopne
mov
dec
fsts
pop
mov
mov
in
ss
mov
dec
in
mov
mov
scas
push
ljmp
push
enter
pop
insl
rol
cmp
les
mov
stos
mov
mov
lret
push
mov
rolb
mov
loop
test
jb
dec
popf
lcall
fmuls
ret
sbb
outsb
xchg
or
repz
imul
in
adc
in
call
fcompl
mov
push
int3
jmp
cmp
lods
jnp
rcrl
cwtl
push
pop
jno
cmp
popf
ficoml
inc
popw
dec
mov
shrl
push
data16
xor
mov
ja
inc
pop
pop
jbe
xchg
out
adc
pop
cmp
adc
ret
fiadds
int
inc
stos
pop
cmc
loop
stc
mov
cmp
mov
dec
adc
clc
cmp
jne
sub
ficoml
sti
addr16
iret
std
mov
xor
pop
dec
fcomip
cmp
out
mov
pop
mov
fwait
iret
and
lds
add
ja
iret
shll
dec
adc
addr16
and
adc
adc
push
xchg
rolb
jae
mov
enter
mov
push
ja
lret
push
pop
insb
call
push
lret
into
popa
ror
mov
cmp
adc
push
out
cmp
pop
push
sahf
and
lds
pop
mov
mov
addr16
jg
out
push
aam
test
lret
les
sub
out
xor
loop
or
icebp
movsl
mov
outsl
dec
mov
insl
jp
xor
jmp
cmp
lea
pop
fcom
aas
push
cmc
aam
xchg
loope
push
pop
mov
push
popa
dec
insl
out
push
dec
push
jmp
inc
pop
int
cmp
adc
outsl
dec
push
call
rcrb
xor
jge
cwtl
xchg
shll
lods
clc
mov
aas
sbb
adc
addr16
lcall
add
jnp
xor
in
inc
jae
aam
bound
loopne
or
mov
ljmp
hlt
or
sbb
add
inc
xchg
inc
pop
imul
mov
pop
inc
xchg
leave
xor
stc
inc
pushf
mov
push
mov
sbb
or
add
rorb
das
jecxz
adc
ds
imul
fidivrs
js
add
out
frstor
cwtl
mov
mov
push
imul
imul
cmpl
das
sub
jae
sbb
mov
mov
or
sti
mov
dec
mov
aam
adc
mov
sbb
mov
push
mov
push
pop
cmpsl
mov
adc
arpl
leave
push
sub
inc
jmp
dec
in
out
and
les
cmp
sub
inc
je
pop
rclb
cmc
sub
cmp
ret
push
stos
push
dec
dec
out
mov
out
vmovaps
sub
and
mov
jo
lcall
scas
and
lock
cmp
aaa
mov
add
test
imul
or
sbb
xchg
fcomps
jnp
test
dec
push
dec
cmp
sub
insb
jmp
or
andl
jnp
mov
add
aaa
mov
inc
jg
and
or
call
lea
fistpl
subl
sub
jle
sbb
out
out
inc
loopne
pusha
or
pop
sahf
imul
test
pop
pop
movsb
mov
adc
mov
mov
mov
ljmp
lods
in
and
dec
enter
pslld
addl
in
add
pop
push
call
imul
adc
xchg
loope
mov
jne
pop
xor
orl
test
mov
ljmp
int
sbb
xor
test
shrb
cmp
xor
lret
xchg
push
loop
lea
mov
popf
sbb
mov
rolb
cwtl
loopne
cs
sub
and
test
push
jg
sbb
fidivrl
dec
pop
fsub
adc
push
stos
push
lahf
cmp
lcall
pop
inc
mov
shr
subl
inc
cli
les
xor
cmp
mov
mov
mov
pop
fisubrs
add
and
pop
add
mov
dec
push
push
icebp
cmp
and
stc
dec
push
cs
jo
add
inc
arpl
sbb
fildll
test
loop
mov
jne
in
mov
lea
jbe
dec
shrb
mov
dec
jnp
dec
shl
repnz
jge
fnstsw
rcrl
xchg
inc
ja
ljmp
xor
rcrb
popa
mov
jae
xor
dec
mov
cli
stos
cmp
hlt
xchg
dec
mov
and
loopne
out
adc
inc
mov
out
add
jo
ja
lds
mov
testb
sbbb
push
andb
cld
lods
cmp
mov
ljmp
or
call
pop
scas
jo
inc
mov
imul
sbb
or
cmp
push
cmc
mov
add
sti
es
nop
mov
pop
xchg
das
les
fisubs
xor
inc
sub
fs
scas
lahf
and
push
jns
mull
icebp
jne
xor
sahf
push
mov
je
out
mov
out
fs
inc
sti
xchg
fdivrl
shlb
sbb
test
in
stos
cwtl
mov
push
loope
pusha
mov
shl
jo
jb
mov
mov
mov
icebp
pop
mov
bnd
sbb
into
jno
cmp
xor
or
pop
mov
out
sahf
xchg
out
mov
or
sub
mov
or
lds
lret
pop
cmc
insb
rcrl
and
rolb
pop
push
mov
pop
scas
inc
xor
iret
jmp
stos
fcompp
dec
add
test
sahf
in
dec
sub
inc
mov
orb
cmp
movb
cmpsl
nop
cmp
inc
and
in
es
pop
mov
rorl
cmc
popa
sub
jecxz
call
arpl
hlt
loop
ljmp
sub
fdivs
mov
sbb
cmpsl
sub
inc
shrl
mov
leave
mov
ret
aas
push
mov
xor
fidivrs
sbb
inc
bound
fldl
fsubl
dec
cmp
push
fisubl
and
sbb
add
subb
outsb
fs
inc
call
or
sbb
test
lea
xchg
cmp
out
inc
bound
aam
mov
xchg
or
aam
test
sbb
div
lods
test
jmp
xchg
mov
mov
int3
add
popa
push
mov
jns
movsb
jle
es
popf
aas
jecxz
sti
pop
push
call
nop
test
out
push
mov
ror
inc
add
lret
mov
dec
or
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
notl
push
sub
push
sub
mov
mov
mov
inc
mov
or
movl
movzbl
adc
movl
adc
mov
add
mov
adcl
sub
adc
mov
xorl
xorl
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
pushl
pushl
call
cmpl
jb
mov
sub
mov
orl
mov
andl
mov
sub
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jb
mov
xorl
orl
mov
andl
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
movl
cmpl
je
cmpl
jbe
jmp
call
mov
dec
mov
jmp
mov
orl
add
mov
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
jmp
mov
mov
mov
neg
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
adcl
movl
subl
lea
movzbl
sbb
mov
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
call
jmp
lea
add
mov
xor
mov
mov
mov
sub
xor
mov
adc
mov
adcl
xor
orl
add
xorl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
mov
mov
add
movl
cmpl
je
cmpl
ja
jmp
push
call
xor
or
dec
mov
jmp
push
sub
mov
mov
mov
mov
mov
adc
mov
xor
and
mov
add
movl
cmp
movl
je
notl
mov
jmp
mov
xorl
xor
push
add
xor
xor
sub
mov
add
movl
push
adc
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
push
push
pushl
call
jmp
mov
xor
subl
xor
movl
cmp
movl
jne
movl
cmp
jne
push
movl
jmp
mov
xor
adcl
add
subl
xor
add
movl
adc
subl
xor
orl
xor
movl
cmp
movl
jne
cmp
movl
jne
addl
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
xor
xor
dec
mov
jmp
xor
add
mov
subl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
jmp
mov
movl
xor
add
adcl
imul
mov
orl
xor
add
movl
cmp
mov
je
movl
cmpl
je
cmpl
ja
jmp
push
push
call
mov
dec
mov
jmp
mov
orl
add
and
mov
mov
xor
add
imul
sbbl
mov
mov
mov
mov
xor
mov
sub
mov
jmp
mov
xor
mov
mov
mov
xor
mov
sub
mov
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
jg
mov
mov
xor
mov
sub
mov
jmp
mov
xor
add
add
mov
mov
mov
xor
add
not
and
mov
movsbl
cltd
add
adc
jmp
pop
push
xchg
dec
add
ror
imul
ret
mov
add
pop
loop
sub
jmp
out
testl
and
sbb
mov
jne
pop
fstp
nop
imul
dec
enter
lret
loope
mov
out
fidivl
pop
dec
mov
lret
dec
jecxz
sbb
aas
les
push
pop
ror
xchg
xor
cmp
adc
fildll
in
cmp
cltd
aas
lods
mov
popa
mov
ret
cmpsl
lods
fisttpll
mov
xchg
inc
xlat
sbb
cmp
push
sub
int
pop
popf
push
sub
mov
mov
xchg
data16
push
repz
movl
mov
pop
inc
imul
sbb
dec
pop
loop
out
pop
dec
fstpl
inc
dec
out
stc
stos
xchg
mov
pop
notb
or
int
push
mov
mov
in
pop
jne
mov
fs
xor
stc
ja
cmp
lds
push
stos
rolb
mov
inc
mov
mov
mov
pop
fnstsw
pop
lock
popf
xchg
hlt
addb
mov
jns
xchg
lcall
pushf
push
jle
inc
popa
sub
std
iret
adc
add
loop
test
sbb
xorb
mov
sbb
cmp
pop
xor
jg
ja
fdivrl
sbb
push
call
iret
clc
sarb
test
insb
xor
insl
push
xchg
or
fmuls
out
aaa
and
cmpsl
lret
subb
lods
arpl
xlat
push
mov
xchg
mov
pop
mov
pop
addb
xchg
sbbb
hlt
stc
shlb
insl
pop
in
and
pushf
push
jl
outsb
xchg
pop
aam
aam
repnz
shlb
xor
pop
xchg
sub
mov
aad
arpl
std
xor
jge
dec
fsubs
pop
and
int
inc
insl
mov
xchg
nop
adc
into
push
loope
sub
push
jecxz
pop
imul
sti
sbb
dec
mov
pop
loope
jmp
adc
dec
scas
pmaxsw
sub
cmc
and
xchg
or
mov
aaa
mov
push
dec
shrb
push
dec
and
and
aaa
push
das
lret
inc
leave
mov
lds
xor
fcompl
xchg
mov
and
jecxz
fcompl
shrl
sub
sub
aaa
bound
xchg
xor
pop
mov
std
mov
sub
mov
int3
mov
inc
xor
cmc
sbb
xchg
jb
push
jae
push
xorb
mov
adc
pop
imul
lods
cld
jnp
xor
pop
gs
xor
insb
add
add
mov
and
mov
and
aad
into
mov
in
push
pop
push
gs
imul
leave
xchg
fwait
loop
pop
movsl
pop
aaa
sub
xchg
sbb
insb
and
sub
and
inc
jecxz
in
dec
pop
xor
xor
repnz
cmp
xchg
jmp
jnp
popl
push
sbb
cld
or
push
push
pop
shlb
mov
mov
mov
test
cmp
xchg
xchg
inc
push
std
or
movsl
pop
fwait
mov
fcmovu
stos
das
xor
push
xchg
stos
fs
push
out
mov
imull
aam
pop
jns
popf
mov
into
repz
ret
mov
sahf
outsb
inc
fbstp
pop
dec
insl
sub
xchg
sub
mull
fwait
push
sub
inc
cmp
js
lods
mov
sti
sbb
in
stos
or
lret
aas
push
sub
dec
push
das
out
sub
adc
aad
adc
jns
dec
mov
dec
xor
aam
repz
out
arpl
sub
lods
pusha
cmpsl
in
pusha
pop
ret
jne
inc
cli
pop
outsb
into
push
insb
ljmp
push
push
call
je
pusha
aad
stos
cmc
jo
insl
push
ficoml
pop
dec
mov
in
fst
repz
mov
dec
add
into
dec
and
or
out
xchg
stos
lock
inc
and
mov
push
pop
add
xchg
mov
test
cmc
jo
inc
xlat
xchg
fisubl
mov
adc
pop
push
stc
outsb
cmpsb
repnz
inc
add
adc
push
stc
scas
cmp
cmp
inc
rorb
repz
cld
ret
rclb
lods
xchg
inc
pop
adc
das
xchg
ret
or
push
je
test
mov
fwait
lahf
andl
jp
pushf
xchg
cli
jno
es
mov
push
cmpsb
mov
imul
jnp
pusha
sbb
fadd
jmp
stc
aad
jmp
mov
ds
or
bound
add
ficomps
cmp
mov
inc
xor
icebp
iret
xchg
sahf
mov
es
ljmp
hlt
jno
std
rorb
mov
sub
xor
mov
jecxz
in
scas
jge
test
adc
mov
test
ja
cmpsb
stc
dec
mov
int3
aad
fiadds
jge
cmpsb
adc
inc
ret
jbe
xor
inc
mov
jbe
scas
push
jg
aas
mov
ror
rorl
mov
jecxz
xchg
sbb
push
addr16
std
jecxz
xchg
nop
std
inc
iret
sti
sbb
and
sub
pop
stos
push
pop
in
call
sub
fnsave
in
dec
vmwrite
mov
lods
pop
mov
sahf
xor
push
xor
lret
cld
loope
test
es
jle
jmp
iret
push
and
xchg
test
test
adc
std
int3
jb
icebp
lea
xchg
and
pusha
adc
dec
mov
sub
mov
sbbb
add
dec
gs
insl
sbb
pop
or
jns
add
push
and
jae
shlb
stos
and
add
push
jge
push
mov
xor
jmp
loopne
data16
imul
mov
xor
xchg
test
cmpsb
dec
and
aad
xchg
and
nop
xor
pop
out
aam
fsubl
in
xchg
sti
std
ds
movsb
xlat
xor
es
out
add
jns
popa
adc
sbb
mov
adc
paddq
mov
push
sbb
xor
and
mov
xor
xchg
pop
sbb
inc
iret
in
mov
sarl
jmp
cmp
inc
mov
mov
test
pop
mov
subl
shlb
pop
mov
mov
or
xchg
fwait
or
inc
pop
int
pushf
jmp
arpl
cmp
mov
mov
mov
dec
jle
push
in
or
pop
jge
jo
ret
shlb
xor
les
inc
pop
int
mov
xchg
cmp
push
pop
and
pop
mov
sti
test
or
aaa
test
das
mov
fsubrs
xor
xor
or
or
test
aam
lods
js
xchg
jnp
jnp
rcll
cwtl
std
mov
dec
add
test
dec
sbb
and
pop
mov
insb
aaa
mov
xor
pop
or
mov
andb
scas
mov
sbb
jb
insb
dec
sbb
shlb
ljmp
test
test
mov
dec
sbb
jb
in
sbb
in
mov
bound
jecxz
and
stos
mov
ja
add
imul
imul
icebp
ja
cwtl
arpl
js
out
jbe
ljmp
push
xor
bound
mov
xchg
jnp
insl
arpl
jmp
and
cmpsl
xchg
stos
and
ret
fwait
loopne
xlat
es
cmc
and
std
sbb
jmp
out
fwait
push
push
adc
sarl
sarb
hlt
orb
adc
fcmovu
fistps
sbbl
push
sub
out
mov
or
cmpb
jne
sbb
orb
aas
mov
pop
gs
loope
sbb
dec
js
subb
out
scas
cmp
stos
mov
int3
sbbb
sbb
sbb
pop
jp
xchg
rclb
ret
xor
repnz
movsb
test
hlt
lea
lods
int3
cmc
sahf
ja
andps
fld
imul
iret
es
cmp
lcall
fucomp
sub
xchg
jle
cwtl
xchg
call
adc
xchg
inc
pop
addr16
dec
jnp
out
rorl
lret
xchg
pop
sbbb
xchg
subb
adc
fistl
inc
jecxz
sub
or
push
fcomi
adc
cld
fucomip
pop
or
pop
nop
jbe
sub
sub
lret
aam
fwait
add
push
std
popa
mov
xchg
cmc
ret
mov
dec
cld
fildl
movsl
xchg
cli
pop
stos
cmpsl
jne
test
jbe
ficomps
jp
rcl
in
mul
sahf
rorl
mov
xchg
mov
jns
mov
sbb
arpl
push
push
fcomps
jns
cmpsl
mov
loop
pop
push
inc
jl
and
sub
xor
push
cmc
mov
stos
xchg
mov
out
fbld
icebp
popf
lahf
ret
clc
lods
lahf
in
dec
jp
or
or
sbb
and
fs
daa
fptan
jno
in
gs
push
cwtl
sahf
ja
aaa
imul
jp
pop
cmp
adc
enter
test
push
sub
mov
andl
sbb
dec
dec
aad
pop
sahf
rcll
iret
push
cmp
or
inc
sti
cmpl
data16
out
mov
rorl
sub
jno
clc
clc
mov
fs
out
inc
dec
inc
decl
sarl
mov
insl
and
jg
testb
je
pop
je
mov
sbb
dec
pusha
mov
pusha
xor
aad
mov
lea
and
shll
adc
insb
les
pop
cwtl
je
test
gs
lds
hlt
jno
in
add
dec
out
mov
iret
adc
jle
mov
sub
adc
testb
mov
imul
add
and
int3
movsb
lret
test
orb
lock
sub
movsb
adc
adc
lods
imul
and
bound
mov
xor
call
sbb
sbb
scas
jmp
das
push
mov
sub
or
orl
sub
cmp
push
mov
leave
jmp
or
pop
call
js
das
out
cmp
dec
sub
xor
inc
push
and
push
pop
out
inc
cmp
adc
push
push
lds
jecxz
and
jo
cs
sub
repnz
jmp
mov
sub
push
add
cmp
adc
sub
inc
ja
dec
adc
sub
jb
add
push
movsl
inc
pop
push
out
rclb
loope
nop
xor
fwait
push
je
mov
pop
addr16
xchg
jne
lds
sbb
xchg
xchg
mulb
pop
mov
mov
xor
addb
pop
or
in
or
fnsave
push
jle
adc
loop
adc
movsl
and
dec
or
jnp
or
or
sbb
lods
dec
and
xor
out
lock
xor
ret
orl
enter
and
jbe
sbb
mov
in
jne
shrl
icebp
not
inc
je
outsl
mov
sub
or
sub
mov
rcll
ret
mov
stos
mov
and
adc
dec
sbb
and
clc
pop
lea
stos
lret
iret
pushf
inc
mov
lods
sahf
adc
fiaddl
xor
mov
xchg
jno
cmp
add
jnp
pop
inc
aas
xchg
icebp
iret
cmp
mov
inc
adc
pushf
cmp
adc
sub
call
cmc
pop
adc
pop
fstp
xor
int
xchg
xor
shlb
add
gs
test
or
pusha
hlt
mov
fs
dec
inc
lds
loop
sub
inc
movsl
mov
push
sub
adc
dec
ss
ljmp
repnz
or
leave
adc
pop
push
sub
dec
cmp
xchg
movsl
and
stos
inc
jno
add
xchg
and
sbb
ljmp
cmc
inc
cmp
cmp
pminub
or
or
out
pop
data16
adc
rcrl
cmc
in
xor
sub
ja
ljmp
aam
dec
jl
pusha
mov
pop
xor
inc
mov
sarl
mov
mov
jge
push
adc
lret
ja
fs
push
test
loop
xchg
movsl
cmp
ret
mov
push
scas
cmp
insl
insb
mov
sti
pusha
addr16
mov
jbe
sub
jmp
adc
mov
xor
fadds
pusha
xor
in
jae
push
mov
popf
mov
stos
shrb
test
mov
push
stos
andl
cmp
sbb
cltd
fs
insb
and
push
mov
adc
pop
icebp
jl
mov
movsb
xor
loop
adc
add
mov
mov
push
mov
iret
popa
fdiv
lods
lahf
cmp
outsl
out
mov
fcom
popf
and
sahf
sbb
ficoms
movsl
inc
jle
inc
addr16
scas
in
cld
dec
dec
and
mov
xlat
mov
adc
inc
xor
insb
sbb
jb
cmp
lock
movsb
mov
stc
pop
std
jmp
int
xchg
test
nop
daa
or
xor
scas
fsubr
lret
mov
xchg
dec
in
cli
movsl
lret
arpl
jnp
sub
sarb
out
cmpsl
inc
das
aas
sub
fdivrl
out
sti
mov
imul
fistps
mov
xchg
mov
es
popa
unpcklps
jge
sbb
cltd
cmp
ss
push
movsb
jmp
andb
ret
shll
push
push
fimuls
lret
ret
fsubrp
inc
mov
push
add
jns
pcmpeqb
bswap
cmc
push
pop
adc
mov
and
sbbl
or
pop
push
ds
sbb
fsubr
addr16
push
add
inc
rolb
mov
es
xchg
ret
mov
repnz
in
cmp
push
das
cmpsl
cmpxchg8b
xchg
dec
push
movsb
in
jae
int3
test
aaa
test
adc
in
insl
and
cli
movsb
push
movsl
lahf
cmpsl
insb
add
mov
xchg
jle
int3
and
mov
mov
push
int3
jb
push
repz
mov
xchg
lods
fdivrl
out
jbe,pt
pop
fstps
mov
mov
lahf
dec
sub
out
les
enter
cmc
in
stos
int
test
sub
addr16
or
jae
inc
negb
add
sbb
repnz
inc
mov
push
jge
xor
xor
push
addb
xor
xchg
clc
pop
or
or
movsb
push
pop
int
xor
adc
mov
adc
push
or
lds
sub
push
adc
jecxz
outsl
pop
lcall
add
jb
sbb
repz
aad
or
push
imul
sti
mov
add
fists
insb
jno
push
xchg
xchg
mov
fs
dec
mov
cmc
push
lea
lcall
nop
cltd
popa
jae
test
mov
movsb
jnp
or
mov
scas
adc
decl
adcb
inc
push
cs
mov
loopne
or
cmp
jle
scas
push
pushf
pop
sbb
pop
pop
sbb
les
push
addr16
dec
add
sub
es
pop
jp
test
out
mov
sub
leave
lret
push
test
ss
and
and
xlat
jnp
ror
push
mov
pop
xchg
out
in
imul
js
inc
in
stc
outsb
movups
lock
mov
enter
sub
mov
adc
mov
adcl
mov
mov
ret
xchg
xchg
lods
xchg
xor
add
add
mov
jbe
and
int3
lds
fildll
xchg
pop
dec
and
mov
iret
rep
sub
xlat
aaa
sub
add
mul
jns
nop
in
int3
jns
fptan
pop
aas
bnd
lock
pop
fs
inc
pop
inc
sub
mov
pop
cmpsb
pop
jmp
sahf
je
hlt
jmp
mov
or
sub
dec
repz
jne
subl
test
add
repz
cmc
out
rorb
or
mov
inc
cs
mov
push
jp
mov
mov
pop
inc
dec
fcmovb
dec
mov
sti
inc
mov
cmpsb
stos
insl
dec
sbb
int3
adc
push
lahf
aaa
sub
lods
mov
movsl
add
inc
xchg
add
in
sbb
xlat
and
sbb
adc
inc
jmp
mov
mov
cmpsb
mov
ja
vmwrite
push
add
push
scas
jp
pop
rcl
fstps
inc
cmp
js
push
xor
in
in
dec
jg
test
and
fisttpll
push
push
sbb
or
push
cmpsb
popa
pop
add
xor
jne,pt
popa
sub
or
leave
xchg
rorl
mov
jns
out
xlat
mov
fildll
scas
lahf
mov
mov
xchg
jl
pop
lret
ds
sub
inc
shr
pop
imul
dec
xor
cmp
pop
in
lret
iret
enter
add
cmp
inc
push
lret
into
add
push
dec
add
fildll
stc
sub
inc
das
das
adc
sub
inc
inc
sbb
mov
add
fidivs
lods
mov
xchg
pop
mov
pop
fldcw
jle
out
dec
inc
sub
add
faddl
inc
fdivr
inc
add
add
loop
xor
imul
fisubrs
inc
cmp
bound
imul
dec
fwait
icebp
pop
nop
fmull
int
in
loop
fwait
js
pop
pop
push
jno
fstpt
jno
jne
test
lahf
insl
and
inc
xchg
cltd
push
add
or
fs
push
xchg
hlt
add
sub
sbb
xchg
mulb
mov
add
or
push
sub
cmp
adc
outsl
repz
notb
inc
sbb
or
fxch
mov
xchg
test
aam
xor
pop
testb
pop
and
mov
dec
xchg
push
mov
inc
or
ds
in
les
cmp
in
test
push
mov
sbb
and
or
add
imul
icebp
popa
arpl
jecxz
dec
mov
add
or
sbb
popa
dec
ret
sbb
dec
jno
addr16
pop
xlat
jbe
sbb
push
xor
fldenv
dec
cmc
hlt
xchg
mov
es
jne
test
or
push
and
outsb
leave
insl
leave
insb
inc
add
leave
imul
mov
pmaddwd
imul
rcrb
lock
cmp
outsl
gs
xor
push
pop
lea
mov
lahf
xchg
add
fcoms
fs
fimuls
add
and
mov
xlat
or
cmp
adc
test
add
data16
mov
js
and
scas
or
adc
lea
in
lods
lcall
in
bound
mov
dec
enter
xchg
notb
inc
ds
cld
js
call
test
repnz
xor
fistpl
add
sbb
sbb
cmpsl
xor
outsb
popf
inc
push
nop
gs
jmp
add
add
adc
inc
lahf
push
loop
inc
mov
mov
pushf
stos
shll
loopne
rorb
mov
cs
mov
call
or
jl
add
xor
push
add
data16
cmp
mov
add
dec
dec
adc
fsubs
mov
sub
bound
and
xchg
xorl
cmp
xor
arpl
and
xlat
xor
add
out
mov
shrb
sbb
sub
fdivl
cltd
lds
sub
jno
cmpl
jb
test
bound
mov
das
jno
inc
dec
clc
sub
jge
xchg
xor
nopl
scas
push
and
adcb
jle
loop
int3
jnp
sub
cmp
pop
or
clc
aam
cmp
mov
cmp
orl
fs
mov
and
sub
jge
pop
cli
inc
cmp
aam
fs
sub
data16
or
in
std
jge
aad
data16
sahf
lahf
daa
adc
sbb
mov
lea
fwait
push
adc
mov
sti
mov
fcoml
push
sbb
mov
das
and
adc
fiadds
jae
inc
test
or
xrelease
sahf
test
sub
ret
cltd
stos
mov
lock
or
in
inc
inc
xlat
in
xchg
or
mov
fnstenv
mov
cmc
add
pop
mov
fdiv
jle
fwait
pop
sbb
xor
popf
test
aad
ret
push
es
outsl
sar
jecxz
iret
xchg
lods
inc
push
add
subb
and
cmpsb
insb
cmpsb
xchg
pop
and
jp
pmulhuw
aas
data16
lret
sti
arpl
mov
int
push
jbe
cmp
test
jge
les
arpl
cltd
mov
adc
aad
sbbb
aaa
mov
stc
push
dec
adc
lret
sbbl
iret
sub
adc
enter
pop
mov
stc
leave
pop
adc
jne
sbb
mov
cld
fdiv
adc
out
xchg
push
push
loopne
and
out
jb
xchg
aad
test
sub
orb
adc
push
js
or
in
mov
push
xor
lret
jo
mov
cmc
jns
testl
dec
jmp
mov
cli
movsb
cmpsl
imul
or
lock
sbb
jecxz
mov
pusha
inc
gs
idivl
mov
mov
js
movsb
push
sub
sbb
push
cmpsl
add
mov
sbb
sbb
ret
jmp
or
jb
loop
repnz
adc
adc
bound
xchg
incl
lds
pop
adc
jmp
stos
pop
push
movsb
sahf
in
cmp
scas
loop
arpl
sub
jp
sub
std
and
enter
and
in
daa
dec
xor
dec
out
xlat
mov
or
nop
inc
xchg
fistps
idiv
cmp
dec
sbb
sub
mov
sub
cmc
test
lahf
ljmp
jg
dec
cmp
inc
pop
ss
adc
pushf
lods
and
outsb
stos
cltd
fs
pop
mov
sahf
in
ja
push
jno
adc
pop
mov
adc
ret
dec
inc
fs
stos
mov
mov
movsb
push
inc
cmp
xchg
mov
es
push
stc
pop
shlb
mov
scas
push
in
iret
mov
es
mov
sub
and
or
mov
sub
cmp
popf
roll
loopne
xchg
sub
imul
xchg
stos
or
pushf
fldl
in
int3
mov
es
mov
or
mov
daa
mov
xor
xchg
and
iret
adc
cmp
lret
xchg
push
les
enter
ds
mov
jmp
jno
lods
int3
dec
mov
mov
mov
sti
fldt
inc
aaa
mov
shlb
fdivrl
int3
dec
push
mov
movsb
xchg
sahf
fistpll
push
xor
aaa
inc
icebp
dec
cmc
add
sti
sti
mov
mov
mov
mov
rclb
shlb
pop
jmp
cltd
sub
xor
insl
cmp
rcll
jle
sti
sbb
mov
xor
adc
ror
pop
pusha
fcoms
ljmp
in
call
jo
mov
xchg
sub
mov
add
adc
insl
adc
mov
jb
jae
jmp
mov
int
inc
je
scas
xor
fs
stos
imul
push
idivl
lahf
out
aad
push
out
cs
test
dec
ret
add
mov
xlat
inc
push
mov
sbb
mov
jno
loop
stos
in
cmp
push
dec
cmp
push
push
mov
mov
lock
lods
xchg
iret
mov
xor
jnp
testb
fstp
push
pop
cmp
cli
adc
cmpsl
lods
fcompl
jne
shll
mov
ret
xchg
sbb
sbb
pop
outsb
mov
sub
rclb
movsb
out
in
fcmovb
and
std
xor
clc
sub
sbb
dec
mov
sbb
lcall
adc
inc
adc
lret
sarb
dec
mov
sbb
shrb
fcomps
pop
sub
in
push
cli
sbb
call
call
dec
cmp
xchg
pop
aas
fbstp
iret
mov
fucomip
mov
mov
arpl
sbb
inc
bound
fbstp
fistps
mov
dec
xchg
test
push
fsubp
push
ljmpw
loope
jne
adc
mov
jno
mov
jmp
push
cmp
mov
inc
xchg
mov
push
data16
and
mov
mov
pop
jbe
xchg
leave
lcall
sbb
stos
mov
outsb
loop
jns
cmp
fisubl
xchg
xchg
mov
xchg
mov
and
cmpsb
sub
pop
iret
jmp
add
adc
pop
inc
insl
jb
dec
push
shrl
jmp
mov
in
lods
ret
sbb
arpl
xchg
jae
notb
jb
jo
orb
mov
std
jo
test
lods
out
mov
sub
xchg
in
fs
mov
dec
jmp
dec
in
pop
scas
sub
adc
add
pop
mov
fsubs
dec
mov
faddl
dec
out
mov
dec
into
fdivrs
sbb
add
rcll
or
mov
dec
test
mov
in
xchg
fdivrl
dec
inc
sbb
rolb
ja
shlb
test
imul
sahf
adc
ja
mov
lods
pop
fildl
push
jmp
adc
loopne
xchg
sub
push
xor
iret
jle
out
sbb
jge
inc
test
das
pop
jg
sub
dec
fadds
aas
sub
outsb
lahf
fsubl
out
cmp
dec
cmp
push
xchg
dec
sbb
mov
in
add
movb
divb
aad
mov
icebp
sub
int
push
addl
loop
jns
gs
les
xor
or
mov
in
jg
lret
add
sbb
leave
cmp
roll
ljmp
mov
fldcw
or
xchg
hlt
ss
ror
xchg
dec
lock
pop
addr16
cs
jns
jmp
push
jg
clc
pop
inc
inc
js
jg
sti
xor
loop
dec
or
push
int3
fbstp
cltd
movhps
pop
mov
sub
jae
or
mov
jns
jp
mov
push
es
jbe
gs
idivb
je
andb
mov
and
mov
hlt
out
pop
mov
into
cli
mov
orl
lods
jno
imul
jl
sub
enter
sub
leave
aad
cmp
cmp
lahf
aam
and
scas
and
cmp
xor
rcrl
sub
mov
xchg
inc
adc
cwtl
dec
fimull
fsubl
jle
push
adc
jg
fidivrs
fsubl
loopne
fs
or
jmp
xchg
cmpsb
fisttps
fidivl
mov
mov
adc
sbb
mov
loop
fildll
movb
jne
push
pop
aaa
cltd
jns
or
std
lret
add
cmpb
adc
in
jmp
sub
dec
xchg
flds
cmp
mov
loop
or
dec
mov
cmp
xor
aam
insb
push
adc
aaa
push
fstpt
ds
outsb
sbb
push
mov
xchg
sbb
dec
push
inc
dec
imul
add
adc
push
sbb
inc
xchg
cmp
sub
inc
xchg
jnp
xor
outsb
mov
inc
hlt
mov
push
aaa
push
lcall
pop
mov
mov
mulb
popf
scas
push
xchg
jo
or
pop
gs
rorb
fbld
arpl
add
js
daa
dec
xchg
sub
mov
lock
ja
dec
pop
lock
jne
sbb
imul
mov
ljmp
inc
dec
repz
jg
roll
mov
adc
cmpsl
push
and
push
push
ljmp
dec
inc
je
dec
xor
hlt
outsb
sub
mov
lahf
dec
inc
movb
rorl
dec
inc
lods
dec
pop
stos
cld
stc
incl
enter
pop
icebp
outsl
bound
adc
kmovb
shrl
and
push
mov
jecxz
inc
sbb
lods
inc
test
in
xchg
xor
push
jo
in
dec
and
in
jle
push
sti
pop
inc
cmp
fldcw
mov
jmp
subl
mov
mov
pop
dec
pop
cwtl
pop
push
insl
sarl
sbb
add
call
mov
lret
pop
and
adc
dec
test
adc
mov
pop
xchg
cmp
inc
or
and
out
pop
push
and
sub
jo
pusha
arpl
jp
mov
fstpl
fisubrs
adc
and
cmp
mov
sbbb
mov
cld
push
push
inc
insb
mov
dec
stc
adc
mov
loope
andb
pusha
das
xchg
loope
ret
nop
xchg
inc
fistl
or
loope
cmp
dec
jno
xchg
outsl
insl
mov
js
js
or
sub
pop
mov
aaa
cmpsl
leave
adc
fisubrs
lret
hlt
and
sti
pop
scas
daa
sbb
loopne
or
jno
and
enter
lea
sarl
rol
mov
cmp
jbe
gs
mov
stos
rclb
ja
lock
shrl
stos
sub
sbb
test
fimull
cmp
adc
in
gs
adc
pop
push
sub
ds
rclb
xor
push
jo
or
adc
lods
xor
dec
adc
addr16
and
mull
xor
das
pop
adc
js
je
mov
outsb
or
push
mov
and
inc
mov
pusha
enter
loopne
mov
sub
cmp
ficompl
jne
test
sbb
sbb
out
in
mov
and
arpl
sbb
sub
pop
jecxz
jo
fidivl
movl
test
add
add
and
inc
cld
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
je
mov
xor
mov
sub
add
mov
jmp
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
mov
jmp
test
lock
orb
enter
aam
fists
aad
sbb
addl
mov
adc
lods
cli
popa
inc
mov
sbb
mov
fnstcw
pusha
adc
cmp
insl
mov
cmp
cmpsb
vcmpps
pop
outsb
pop
mov
cmp
aad
mov
icebp
test
popa
loopne
outsl
add
mov
ss
mov
sub
push
inc
pop
cmpsl
inc
std
aam
or
test
and
mov
dec
fisubs
xchg
cmovo
xorl
push
push
cs
fadds
imul
stos
stos
mov
je
cmc
shl
shrl
arpl
sahf
dec
les
adc
cmp
int
inc
outsl
imul
mov
dec
dec
jbe
add
sub
mov
adc
add
push
pop
stc
xor
jb
shll
dec
mov
mov
jns
in
and
jns
stos
cs
test
lret
fwait
pop
ds
and
adcb
and
sbb
xchg
fcmovnb
fmul
and
jne
dec
hlt
jp
sub
fimuls
test
enter
inc
popf
out
push
xor
push
jg
std
xor
mov
popf
push
dec
cld
xor
sbb
sub
inc
or
aad
sub
in
cmp
sahf
pop
mov
jge
cmp
int3
or
sbb
fs
out
lret
scas
inc
outsb
into
rcrl
insb
dec
shlb
addl
pop
sub
cmp
mov
leave
out
test
lock
mov
fwait
daa
in
shrl
gs
mov
ret
arpl
lods
xchg
inc
insb
hlt
jbe
lret
adc
pop
cli
rclb
outsl
adc
je
sahf
ror
in
sub
fs
cmpsl
stc
sub
mov
shl
add
movsl
pop
mov
mov
inc
inc
rep
push
mov
jge
test
pop
mov
pop
test
adc
arpl
idivb
jbe
add
in
adc
mov
inc
rcl
rcrb
pop
into
jg
out
adc
add
mov
mov
clc
out
push
xchg
dec
int
fwait
cmp
jno
sub
add
shlb
adc
pop
sbb
dec
gs
mov
pop
fstps
push
inc
mov
push
ds
mov
loop
inc
lock
cli
std
cs
test
fnstcw
pop
ds
in
pop
xlat
popa
push
inc
out
mov
jmp
lcallw
mov
add
addr16
je
lods
inc
sarl
movsb
stos
sarl
fsub
inc
out
mov
cli
aaa
dec
fisttpl
lods
rcrb
xchg
iret
sarb
aas
inc
xchg
dec
fadd
xchg
mov
lcall
test
in
jmp
js
xchg
rcr
in
pusha
push
andb
in
adc
push
jp
pop
loop
rorb
and
in
cmp
clc
fwait
jp
sbb
cwtl
testb
notb
and
repnz
mov
int
jmp
mov
fsub
pop
dec
ja
xchg
dec
dec
mov
jg
mov
xchg
test
jne
ljmp
jae
int3
pop
shll
stos
fucomp
mov
lock
out
pop
mov
cs
mov
dec
ret
arpl
push
add
scas
fisubs
mov
pop
nop
fdivl
out
xlat
mov
movsl
andb
add
cwtl
mov
cli
imul
mov
xor
ret
dec
repz
push
sbb
xchg
rorl
mov
lahf
test
pop
lcall
int3
pop
xchg
data16
mov
cltd
mov
fcoms
jne
and
push
adc
into
jmp
aad
push
daa
mov
sub
inc
mov
dec
sub
dec
fwait
cmp
mov
mov
je
test
stos
cltd
dec
xchg
std
pop
jecxz
enter
inc
jmp
push
and
mov
jl
jb
cmpsl
mov
loop
outsb
cmc
in
pop
inc
cltd
and
loopne
scas
test
mov
sbb
aaa
sbb
sbb
add
push
lods
push
and
sub
imulb
xchg
mov
jno
test
arpl
fwait
popf
xor
dec
xor
nop
sub
mov
mov
pop
sarl
xchg
pop
pusha
das
and
or
aad
push
popa
mov
pop
sbb
mov
push
add
rclb
mov
push
aas
xchg
ret
sbb
stos
mov
scas
or
ret
sub
and
adc
add
mov
sub
shr
in
pop
push
clc
aas
stos
xchg
mov
push
push
incl
lock
push
arpl
das
icebp
adc
pop
or
in
sarb
inc
insl
cmpl
lret
sub
iret
std
lds
ljmp
and
xchg
jle
cwtl
subl
repnz
adc
sub
cmpsl
mov
scas
movsb
sbb
push
loop
dec
push
out
cltd
xor
shlb
ret
xchg
add
dec
fcmove
cli
add
daa
cmp
mov
pop
and
aaa
mov
cmp
pop
mov
sub
xchg
adc
xchg
xor
sbb
cmc
bswap
inc
ret
and
mov
or
das
jp
and
sbb
daa
lods
arpl
shlb
popf
cmpsl
stos
daa
jno
scas
mov
xchg
mov
mulb
adc
push
xor
pop
xor
jle
call
push
pushf
sub
ficompl
jne
cmpsb
sbb
arpl
nop
pop
mov
mov
mov
push
jle
add
xchg
imul
lret
cvtps2pi
loopne
mov
inc
es
xchg
jne
subb
adc
rcrl
xlat
stc
lock
mov
jns
jl
ljmp
pop
adc
inc
notb
add
xchg
leave
jb
inc
pop
push
adc
and
mov
es
int
jno
mov
sub
test
inc
bswap
aad
arpl
jl
adc
insl
push
cld
lds
adc
ja
fimuls
cmpl
add
adc
push
leave
cmp
mov
call
sbb
lahf
mov
dec
cmp
mov
arpl
jp
lods
mov
stc
mov
stc
or
xchg
sub
lret
cmp
sti
fimull
stos
cmp
fistpl
cmp
rorl
mov
jnp
inc
add
outsb
nop
rcpps
push
jmp
lock
sbb
xor
jle
es
imul
fstl
movsl
push
mov
or
add
xor
subb
addb
sahf
inc
daa
daa
jg
int
cmp
dec
and
mov
filds
sub
add
aam
pop
xor
mov
stos
fwait
adc
movlhps
and
cwtl
shr
dec
std
test
adc
repnz
out
inc
push
xor
add
leave
or
mov
push
rcl
mov
mov
in
sub
gs
int
orb
jg
sub
inc
cmc
loopne
push
and
in
popf
adc
sub
mov
clc
iretw
push
scas
enter
pop
call
pop
lock
in
mov
pop
push
arpl
icebp
lea
cld
jge
leave
cmp
xor
pop
xchg
popf
dec
cs
loop
jecxz
dec
repnz
outsl
adc
test
std
cmp
enter
jns
xchg
fimull
mov
cmp
or
xor
sub
push
enter
in
int
and
loopne
mov
addl
or
daa
pop
js
idivb
xlat
mov
std
ljmp
repz
push
out
add
imul
popa
in
out
xchg
scas
test
jecxz
popf
mov
jp
push
mov
fldcw
ds
lcall
std
xlat
or
jmp
dec
rorb
scas
mov
xor
xor
into
cmp
jo
pusha
into
call
or
popa
fnstenv
cwtl
cmc
mov
cmp
gs
mov
push
jp
push
repz
push
fsub
stos
pop
in
pop
cmp
mov
and
dec
mov
fs
shr
out
mov
adc
sahf
mov
sbb
sub
mov
mov
mov
and
sub
aam
in
rcrb
shll
sub
dec
jo
pushf
mov
inc
sbb
das
movups
outsl
iret
or
mov
adcl
bound
leave
sbbl
mov
mov
loop
mov
sarl
add
stc
sub
cs
jae
das
retw
imul
jbe
dec
jno
arpl
inc
push
arpl
sbb
outsl
jmp
mov
jl
in
test
pop
add
dec
mov
cmp
xlat
xor
mov
jo
mov
inc
push
ds
adc
fisubs
cmpl
mov
out
rcrl
jnp
pop
int3
loope
push
jmp
pusha
pop
insb
cwtl
inc
cmpsl
mov
inc
in
mov
pop
in
ret
ret
cmp
addr16
jbe
sbb
addb
xlat
popf
or
or
xchg
inc
adc
loope
test
dec
popa
xchg
mov
adc
jp
add
out
les
pop
test
das
push
outsl
into
in
cmp
push
adc
fisubl
mov
clc
and
adc
loopne
pop
mov
mov
in
push
push
fwait
cmpsb
rol
jecxz
stos
add
and
flds
dec
je
mov
imul
repnz
enter
testb
mov
imul
dec
cmpb
jmp
mov
popa
lcall
aad
adc
push
out
or
mov
mov
sbb
push
fldcw
repnz
mov
mov
addr16
xchg
shlb
push
fidivs
xor
subb
addl
add
and
movsl
std
fldl
ds
push
scas
xorl
add
cmp
push
movl
xchg
pusha
mov
dec
add
ret
push
mov
mov
nop
repnz
adc
repz
mov
sbb
jmp
xchg
adc
sbb
ret
mov
adc
ljmp
imulb
jnp
inc
mov
add
xchg
and
push
divb
jmp
sbb
mov
stos
sar
mov
int
pop
das
mov
xor
sti
xchg
dec
clc
loope
mov
jle
xchg
fldt
icebp
mov
lahf
xchg
das
add
mov
add
testl
mov
push
mov
jmp
dec
out
jp
sub
and
pop
xchg
popa
sub
inc
xor
out
roll
pop
or
mov
add
rcrl
xlat
orb
in
pusha
lret
pop
jnp
cmp
or
pop
push
xchg
push
or
push
shlb
jecxz
sbb
clc
jno
pop
mov
sbb
nop
add
scas
and
adc
push
movsb
cld
or
popa
jno
icebp
mov
sub
mov
lret
jmp
or
adc
sub
cmovl
lret
or
xor
or
stos
int
sub
out
inc
ja
setb
add
test
int
xlat
mov
mov
lret
jp
in
push
out
pop
call
orl
rorl
pusha
ljmp
in
inc
in
xorl
and
mov
mov
cmpsb
adc
lea
popa
xor
xchg
popl
xchg
addr16
cmp
sti
insl
inc
push
lea
icebp
dec
arpl
movsl
leave
or
dec
mov
jae
pop
aas
fs
addr16
rorl
sbb
repz
mov
and
movsl
adc
push
xorb
in
pop
jp
mov
mov
shrl
rcrl
xor
insl
pop
cltd
test
jno
jbe
add
es
mov
jo
jbe
add
imulb
in
xchg
mov
rcrl
dec
sub
pop
into
je
cmp
sub
ret
xlat
out
sti
loop
xchg
sub
jnp
push
orb
xor
imul
mov
pop
jmp
mov
sub
jl
mov
aad
xchg
nop
in
leave
mov
mov
arpl
inc
inc
jae
add
js
jl
ljmp
test
and
jno
cmp
adc
jl
fadd
ret
je
mov
jb
loopne
jns
out
std
subl
out
repnz
mov
adc
cwtl
pop
loope
outsl
cmp
enter
adcb
or
mov
inc
jns
jmp
fistps
jle
int
cmp
lds
rclb
jp
pop
or
jmp
mov
divb
les
cmp
lret
pop
repz
lods
stc
inc
pop
dec
inc
jbe
cltd
and
dec
push
iret
adc
lea
jp
mov
xchg
jmp
sbb
cmp
sub
cmpb
cs
and
add
add
push
cmp
sbb
ret
and
pop
pop
addb
jo
mov
es
dec
cltd
or
pusha
jne
movsl
jecxz
addb
mov
fs
jo
adc
adcl
stos
movsb
pusha
out
je
mov
mov
stc
repz
xor
mov
lods
stc
pusha
xlat
sbb
mov
pop
xor
insl
jl
sbb
js
mov
out
sub
mov
adc
jne
jns
xchg
repz
test
adc
aaa
xchg
sbb
scas
jb
stos
jmp
orb
xchg
push
cmp
sbb
xor
aas
sub
xchg
mov
int3
aaa
lods
ret
popf
or
cmp
scas
pop
sti
lea
sti
jb
stos
mov
mov
pop
nop
adc
and
cmpsb
aad
mov
stos
add
adc
xchg
ja
lock
cmp
mov
ror
and
cmp
fidivrs
mov
pop
adc
ja
mov
add
in
inc
fwait
xor
mov
sbb
pop
rolb
inc
mov
pop
pop
and
xor
push
jnp
mov
add
and
test
cwtl
cs
addr16
sbb
sub
and
adc
leave
inc
in
outsl
mov
gs
xor
lods
pop
push
cmp
cwtl
push
pop
test
pop
nop
loop
scas
repz
dec
or
pusha
int3
jns
rcr
inc
mov
dec
invd
pop
test
or
stos
mov
xchg
add
cmp
push
mov
aad
je
xchg
pop
or
in
add
jb
push
imul
dec
jno
enter
cmpsb
mov
dec
mov
into
daa
cmp
xor
sbb
sub
or
xchg
pop
lahf
adc
nop
in
jns
cmc
in
xchg
lret
stos
loopne
cltd
popa
push
mov
xor
cmp
gs
jns
call
push
js
mov
sub
jp
xor
cwtl
mov
mov
mov
enter
es
adc
sub
sub
incl
cltd
jmp
loope
out
add
mov
int3
or
stos
dec
cmp
xor
cs
jno
sbb
lock
pop
gs
sti
jb
inc
cli
clc
mov
xor
xor
add
stos
stos
movsb
adcl
or
loopne
scas
fsubl
adcb
aas
scas
add
add
jae
add
pop
xlat
and
les
pop
xlat
push
out
pushf
faddp
jns
pop
xchg
pop
imul
dec
loop
test
test
test
dec
inc
fcmovnu
mov
jecxz
cmpsb
push
fsubrl
int
dec
rcrb
test
sbb
fst
mov
push
adc
sbb
xchg
sub
idivl
popf
aad
sub
sub
add
push
mov
pop
sti
inc
test
loopne
pop
adc
push
enter
pusha
les
xchg
ljmp
pop
mov
adc
lods
lret
inc
cwtl
fldt
cmp
sub
mov
daa
clc
fisubrl
mov
and
mov
pushf
xor
test
stc
cmp
cmp
cltd
sub
add
lock
and
cmp
call
imulb
dec
push
mov
mov
sub
scas
leave
and
dec
adc
dec
sbb
add
jnp
push
fs
stc
mov
fdiv
clc
xchg
test
bound
mov
push
loope
out
aaa
cmp
inc
mov
xchg
sbb
lcall
sbb
imul
dec
cli
sbb
dec
cwtl
xor
rorl
hlt
pop
xchg
outsb
cmp
repz
jns
stc
sub
pop
sub
lretw
dec
ja
pop
test
hlt
shrb
into
outsl
push
mov
je
cmp
jne
or
int
outsb
cli
test
repz
push
sti
and
xchg
cmp
push
add
mov
adc
and
xchg
hlt
test
out
mov
imul
sarb
pushf
pop
xchg
arpl
fld
jno
sbb
jbe
jmp
divb
push
insl
cs
mov
lahf
and
inc
and
ret
inc
jo
les
jmp
sub
int3
insb
icebp
idivl
nop
fcompl
ret
sahf
jp
mov
cmp
and
add
pushf
cmc
mov
out
mov
add
addr16
fsubr
inc
cmp
xchg
fsubs
cmp
cmp
adc
sbb
xor
gs
mov
xchg
dec
lds
lds
scas
iret
fucom
sbb
pop
pop
fwait
sbb
out
popf
adc
rorb
enter
pop
test
sbb
out
pusha
out
lahf
sub
or
shlb
sub
out
in
jnp
out
insl
inc
lahf
movl
mov
repz
or
xorl
sbb
pusha
fwait
loop
stos
and
stos
mov
cwtl
cmp
adc
dec
adc
stc
aaa
jns
test
out
push
je
mov
insl
fcmovnb
and
lods
pushf
xor
lock
push
pop
add
sbb
jmp
ficoms
test
ss
push
daa
pop
cmp
pop
pushf
int3
cmp
lds
ljmp
jae
sbb
pushf
sbb
or
adcl
inc
iret
nop
cmp
add
inc
push
inc
jbe
jbe
jo
push
mov
xchg
loope
das
cli
push
mov
notl
xchg
int
pop
or
dec
test
cmpb
push
push
sub
inc
push
cmp
gs
loopne
and
or
out
pop
and
jns
mov
add
sub
xchg
mov
and
xchg
pushf
pop
out
mov
daa
std
cmp
test
sti
pop
hlt
and
xchg
ret
mov
hlt
dec
cmpl
scas
xchg
call
js
cmpsb
inc
jae
push
xchg
ja
add
push
inc
aad
sahf
pop
add
mov
sbb
popf
sbb
stc
mov
mov
pop
fcmovnbe
lret
push
dec
adc
xchg
adc
pop
in
call
int3
push
adc
or
cmp
inc
push
stc
pop
sub
mov
scas
add
jns
sub
adc
and
and
or
dec
inc
push
loop
out
inc
sbb
cmp
sbb
insl
add
test
icebp
test
mov
mov
jnp
cwtl
outsb
adc
imul
push
lret
mull
adc
lods
jge
and
pop
dec
rcrl
jbe
lods
push
xchg
divb
xor
cli
mov
jbe
fldl
xor
lea
test
repnz
add
lea
sub
xor
pop
jecxz
mov
hlt
xchg
dec
mov
fldcw
cmc
jne
jo
jl
mov
or
cmc
pop
ds
pusha
fdivrs
adc
mov
jno
out
or
jecxz
sti
mov
cwtl
push
xlat
push
popf
jp
pop
lods
addb
enter
out
subl
cs
dec
test
sarb
das
xor
mov
test
popa
inc
sarl
sub
jo
jmp
add
in
mov
cltd
mov
sub
sbb
aad
shll
xchg
dec
push
loope
or
loope
dec
lea
iret
shrl
aaa
jp
fidivrs
inc
fwait
mov
jl
xor
mov
xchg
arpl
testb
inc
pop
inc
in
adc
or
ret
or
jmp
sti
push
data16
leave
push
sub
jbe
push
cltd
cs
cmp
shrb
mov
xor
jnp
pop
stos
cmpsl
xchg
into
fwait
pop
push
push
adc
lods
clc
cmp
ja
inc
movsl
mov
sbb
es
ud1
lcall
ret
imul
cwtl
imul
inc
jge
subl
jmp
adc
xchg
pop
add
mov
iret
roll
cmp
xchg
out
pop
fdiv
movsl
xchg
push
pop
jecxz
into
xchg
ret
aam
pop
scas
sub
xor
bound
iret
fistl
popf
cwtl
sti
or
jle
ja
dec
sub
cmc
push
and
xor
les
test
cmp
int
imul
push
lret
sbb
or
mov
bound
push
repz
jg
das
xor
jl
xchg
stos
jno
data16
pop
movsl
in
push
xchg
dec
imulb
or
mov
ja
lahf
int
pop
lcall
jns
mov
xor
jp
dec
movsb
inc
xor
outsb
sti
pop
ds
mov
ds
ret
cmpsb
jg
xor
jmp
push
mov
mov
icebp
scas
fidivs
push
pop
stos
inc
mov
bound
mov
mov
pop
cs
xlat
xorl
outsl
cmpsb
sbb
loopne
pop
repnz
push
ljmp
sub
inc
pop
mov
aam
jmp
xor
adc
cmp
cmc
inc
mov
jnp
xchg
and
pop
int3
test
test
mov
sbb
fisttps
pop
cs
mov
xchg
or
push
ss
xchg
push
fs
les
outsb
push
mov
gs
mov
aad
cs
int3
out
mov
xchg
rolb
dec
loop
xrelease
jns
xlat
iret
pop
mov
test
cmpsb
addr16
ret
mov
ret
pop
dec
aam
lret
cmp
jl
mov
repz
leave
cmp
stc
lods
jo
lret
mov
cmp
fdivl
xor
enter
lds
addl
xor
insl
subl
jmp
inc
into
and
fcmovnu
xor
dec
cli
mov
mov
jg
test
jge
xchg
inc
in
jae
pop
pusha
clc
mov
imul
pop
filds
movsl
dec
adc
stc
push
shrl
test
or
mov
push
push
popf
cmpsb
xchg
xchg
cmp
in
shlb
andb
insl
shrl
mov
jp
stc
mov
and
or
mov
dec
pop
or
adcb
dec
out
mov
sub
xlat
insl
dec
push
in
shlb
sub
jo
push
pusha
loopne
into
jmp
ret
pop
sub
cli
je
cmp
mov
ss
adc
std
or
cmp
daa
xchg
outsl
fnstsw
mov
mov
sbb
xor
lea
or
cmpsb
inc
lahf
cmp
bnd
adc
in
fs
push
dec
shlb
pop
mov
xchg
fdivr
mov
out
sbb
lods
jno
adc
movsb
or
xor
add
enter
inc
dec
scas
jb
mov
and
jne
mov
push
mov
test
jg
push
mov
lods
sti
fdiv
std
lcall
pop
xor
fbstp
adc
inc
add
fisubrl
es
imul
dec
out
movsl
xor
and
push
leave
pop
jno
sti
mov
loope
mov
sbb
sub
fs
insl
and
icebp
mov
xor
xorl
es
pusha
mov
in
cltd
into
lods
addr16
jne
jns
mov
sub
xchg
filds
insb
mov
add
mov
pop
das
sub
je
fst
addb
mov
mov
movsl
repnz
and
cli
dec
add
add
sub
ret
test
xor
in
sbb
mov
sahf
dec
mov
cld
dec
jnp
call
mov
pop
jne
daa
pop
jb
daa
fidivl
add
xor
pop
mov
push
aaa
pop
fbstp
cmp
and
outsb
nop
jmp
cmc
cmp
popa
mov
push
iret
lock
xchg
mov
lds
mov
add
into
notl
sbb
scas
addb
or
pop
lcall
pop
mov
es
xchg
pop
aam
push
cmp
rorb
push
shlb
mov
leave
inc
js
inc
ja
pop
sub
scas
jnp
pop
rcll
scas
aad
cmp
ds
pop
cmc
mov
nop
or
leave
cmp
div
cwtl
fisttpll
push
dec
cltd
addr16
jecxz
js
lods
fnstcw
pop
fidivs
fcompl
addr16
xor
in
push
mov
repz
fcos
pop
xchg
sub
rclb
out
xchg
fistpl
mov
hlt
movsl
hlt
xor
ja
int3
clc
add
lret
push
xor
and
nop
ss
call
in
repz
sub
xchg
inc
out
cmp
aas
ret
movsb
and
das
mov
xor
rorb
lea
lret
stc
insl
pop
out
ljmp
lods
sub
dec
mov
imul
stos
and
jnp
add
jae
mov
nop
inc
jle
jl
fldl
adc
jno
xchg
mov
subb
repz
aam
ret
pop
outsl
xchg
sub
mov
jno
jnp
ret
aam
jle
mov
push
cmc
xor
call
sti
cwtl
cli
mov
pop
xchg
clc
xlat
lock
inc
ljmp
bound
insb
adc
or
jge
sub
adcl
lods
leave
enter
cld
cld
jge
push
rcrb
xor
pop
andl
add
xor
out
jl
movsb
out
jbe
aad
add
jmp
xor
and
pushf
mov
sub
fs
pop
push
clc
dec
xor
mov
mov
mov
loope
inc
dec
cmp
aaa
mov
adc
shl
int
pop
xchg
dec
pop
ret
cmc
pop
jg
xchg
adc
mov
mov
imul
movsb
lock
and
les
loope
push
outsb
iret
fidivrl
and
pop
popw
xor
fmuls
mov
sub
iret
add
out
sbb
into
stc
sbb
sbb
lds
repnz
loopne
sub
dec
cld
rorb
mov
sbb
and
push
mov
loop
iret
das
dec
mov
cmp
mov
mov
sahf
jne
rolb
je
or
sub
dec
decb
inc
notl
enter
sbb
stos
je
jg
xor
pop
sbb
out
inc
lret
enter
icebp
lds
xchg
cmc
movsb
subb
shll
jecxz
pop
adc
pop
push
mov
rcrl
push
test
loop
insb
insb
jg,pt
inc
nop
imull
test
jp
jge
sub
in
sbbw
pop
mov
sub
jb
pop
mov
addr16
lret
jb
scas
scas
fistpll
jl
out
mov
inc
test
or
int
inc
iret
std
dec
decb
sbb
xor
repnz
xor
loopne
lret
fstl
test
loop
mov
jae
and
jle
pop
push
adc
nop
push
push
aam
cli
ret
lods
xor
push
mov
jne
cmc
xchg
xchg
icebp
scas
jae
pop
push
mov
hlt
push
jbe
imul
scas
push
out
daa
mov
repnz
jle
xlat
sub
aas
lds
jg
xchg
xor
popf
dec
pop
rcrb
cmp
imul
lods
addb
push
pop
mov
leave
pop
push
xor
pushf
sbb
in
xor
enter
cmp
mov
popf
scas
and
gs
lret
xlat
jnp
std
jl
xchg
inc
ljmp
aam
cwtl
popf
dec
sti
sbb
mov
add
sub
and
or
pop
into
mov
pop
add
jns
rcll
mov
sbb
ljmp
pop
inc
jns
sub
cmp
mov
xchg
cmp
test
mov
dec
ljmp
mov
or
jno
inc
test
mov
sahf
test
mov
hlt
cmp
mov
pop
cmc
loopne
lock
push
push
int
dec
les
jbe
or
loope
push
test
mov
or
sub
push
outsl
cmp
sti
sbb
outsl
fdivs
jae
aas
or
ja
cli
pop
mov
jmp
mov
bound
push
push
insb
inc
mov
or
mov
mov
pop
push
clc
lods
loopne
ret
fs
adc
ja
shlb
xchg
aaa
mov
jmp
rolb
in
xchg
pop
rcr
adc
jle
mov
mov
pop
pop
cmp
js
push
fs
sahf
cmpb
dec
movsb
cmpsb
sub
lods
xor
mov
dec
jmp
neg
in
repnz
shll
mov
mov
pop
mov
cmp
pop
out
jl
sbb
xchg
xchg
std
ret
or
aad
imul
nop
dec
cmp
imul
and
mov
lock
sub
std
pop
jmp
xchg
jmp
xchg
cmp
stc
push
adc
mov
xor
in
cli
mov
jle
pop
xor
pop
lods
clc
pop
push
aaa
test
push
fisubs
xor
xchg
add
fwait
out
xchg
mov
lds
movswl
insl
mov
stos
std
pop
jne
cmp
sti
fld
divb
sub
loope
push
shlb
std
push
or
out
mov
call
loope
sbb
sub
outsb
out
xchg
mov
call
dec
sub
or
in
xlat
jns
ss
or
rcll
shlb
sub
std
sub
xor
iret
xchg
pop
icebp
shlb
xchg
cmp
and
loop
adc
into
jo
rorb
aam
lcall
scas
push
push
jecxz
clc
mov
out
cmp
les
and
sbb
xchg
push
divl
scas
scas
andl
cmp
jns
dec
lods
dec
cli
hlt
cmp
pop
addr16
xlat
pop
mov
mov
mov
dec
push
dec
or
rorl
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
orl
sub
sbbl
push
push
push
andl
push
orl
push
orl
call
subl
mov
lea
push
subl
push
movl
call
cmp
je
xorl
xor
jmp
mov
xorl
push
lea
push
push
push
subl
push
adcl
call
imul
cmp
movl
jne
orl
lea
andl
push
addl
push
andl
call
cmp
jne
addl
movl
or
mov
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
addl
movl
mov
or
lea
mov
xor
lea
sbb
mov
or
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
xor
add
dec
mov
jmp
mov
mov
mov
mov
mov
sbb
xor
adcl
mov
addl
add
notl
mov
movl
mov
cmp
movl
jne
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
adcl
xor
subl
add
addl
mov
mov
xor
notl
add
sbbl
mov
mov
sbbl
xor
subl
add
mov
andl
xor
xor
inc
mov
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
mov
addl
mov
mov
mov
mov
addl
mov
orl
mov
mov
decl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
sbb
mov
xor
xorl
add
jmp
lea
subl
push
addl
push
addl
call
movl
cmp
jne
push
lea
addl
push
adcl
push
push
orl
push
call
imul
movl
cmp
movl
jne
sbbl
lea
push
push
sbbl
call
movl
cmp
jne
mov
xor
mov
sbbl
xor
sbbl
lea
incl
push
add
mov
xor
lea
xorl
push
movl
mov
xorl
pushl
adcl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
adc
xor
and
lea
mov
neg
mov
orl
xor
orl
xor
xorl
add
mov
addl
xor
movl
lea
movl
mov
cmp
jbe
xor
or
or
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
push
call
cmpl
jb
mov
mov
mov
movl
cmpl
je
cmpl
ja
jmp
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
movzbl
adc
mov
subl
sub
andl
xor
mov
lea
mov
xorl
lea
subl
mov
lea
subl
push
addl
push
call
movl
cmp
movl
jne
push
lea
xorl
push
push
adcl
push
push
call
imul
cmp
jne
lea
push
push
subl
call
movl
cmp
movl
jne
lea
addl
push
negl
push
addl
call
movl
cmp
movl
jne
xorl
push
orl
lea
andl
push
subl
push
adcl
push
xorl
push
orl
call
imul
movl
cmp
jne
orl
lea
push
subl
push
notl
call
movl
cmp
movl
jne
lea
push
subl
push
subl
call
movl
cmp
jne
addl
push
lea
push
sbbl
push
push
push
call
subl
imul
movl
cmp
jne
addl
lea
orl
push
push
andl
call
movl
cmp
movl
jne
andl
lea
adcl
push
orl
push
sbbl
call
movl
cmp
movl
jne
xorl
push
lea
orl
push
push
push
subl
push
call
imul
movl
cmp
movl
jne
addl
lea
orl
push
andl
push
andl
call
cmp
jne
orl
lea
subl
push
xorl
push
addl
call
movl
cmp
movl
jne
adcl
push
xorl
lea
xorl
push
adcl
push
push
sbbl
push
adcl
call
imul
cmp
jne
movl
lea
addl
push
notl
push
call
movl
cmp
jne
lea
xorl
push
push
addl
call
movl
cmp
movl
jne
push
lea
adcl
push
xorl
push
adcl
push
xorl
push
call
adcl
imul
movl
cmp
jne
lea
xorl
push
push
orl
call
movl
cmp
jne
addl
lea
movl
push
push
adcl
call
movl
cmp
jne
andl
push
lea
push
push
subl
push
sbbl
push
call
xorl
imul
movl
cmp
movl
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
sub
mov
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
or
mov
push
movl
cmpl
je
cmpl
ja
jmp
push
pushl
call
mov
dec
mov
jmp
mov
xor
mov
push
mov
add
cmp
movl
je
movzwl
adc
mov
mov
incl
xor
andl
xor
add
addl
add
movl
adc
orl
xor
adcl
mov
movl
cmpl
je
cmpl
jge
jmp
push
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
jmp
sbb
cmp
xchg
xchg
dec
push
movsl
mov
outsl
mov
addl
addl
pop
into
out
leave
mov
mov
mov
popf
xchg
add
xchg
scas
ficoml
pop
scas
mov
lock
movsl
sahf
mov
sahf
pop
out
mov
cmp
push
add
fcomip
idivl
movsl
jle
out
icebp
jo
jg
xor
sbb
test
pop
lret
lea
les
pop
ja
cmpsb
shll
cmp
push
xor
ss
lret
mov
push
adc
cmp
sbb
cmp
outsl
adc
iret
xchg
add
sub
adc
rol
sarl
daa
push
call
addr16
jp
fsubrs
mov
xchg
push
cmp
in
cmp
movsb
lcall
cmp
jnp
xor
inc
or
pop
inc
rclb
push
sbb
adc
fidivl
pop
insb
dec
add
fmuls
aad
add
nop
sub
sub
outsl
sub
inc
mov
inc
fiadds
test
into
pop
lahf
dec
inc
sub
inc
sbb
add
mulb
jns
call
sub
cmpsl
cmp
mov
jnp
add
push
push
mov
fscale
pop
negb
mov
adc
sub
ret
fs
call
daa
adc
jnp
adc
movsl
lds
lock
jnp
cltd
lods
loop
sub
ficoms
movsbl
rcrb
cld
sub
push
fistpll
mov
sub
sub
arpl
lret
inc
mov
adc
mov
cld
dec
daa
cld
aam
lret
fidivrl
jb
faddl
dec
sbb
test
stos
push
dec
mov
push
nop
repnz
in
ds
mov
mov
sub
cltd
std
jae
popa
xor
mov
addr16
and
inc
in
and
pop
iret
aam
jg
inc
xor
jp
push
ja
cltd
cmpsl
adc
pop
gs
push
cmpsb
das
pushf
dec
jb
es
inc
inc
pop
shr
test
ljmp
inc
push
leave
and
add
sub
outsl
mov
push
cmpl
repnz
mov
pop
out
lods
and
fcmovbe
inc
andl
xor
int3
and
cmpsb
ljmp
outsl
stos
lret
ljmp
and
shll
in
mov
inc
mov
mov
mull
ss
push
lahf
mov
dec
leave
pop
dec
das
sbb
fcompl
jl
jmp
push
mov
popf
out
cmpsb
dec
xchg
jl
inc
sarl
ds
mov
popf
xor
pop
std
gs
js
pusha
dec
popf
fidivrl
dec
pop
and
pop
pusha
xchg
jns
pop
jecxz
fwait
loopne
dec
rcll
push
movsl
fidivrs
cmp
cli
jmp
test
movsb
xchg
repz
rol
mov
push
pop
jns
stc
pop
sti
cltd
adc
add
xor
sbb
insb
movsl
or
add
stos
mov
push
mov
lods
ss
aas
jbe
or
lcall
jge
pop
fbld
sub
jae
fcompl
scas
int
jle
push
jg
mov
test
cmp
sub
jmp
push
sbb
and
pop
or
mov
lock
xor
cld
mov
push
ss
imul
sub
dec
out
loope
jl
nop
sahf
inc
sarl
mov
dec
sub
push
das
adc
fnstenv
es
xorl
fdivs
and
pop
ja
fcmovb
lock
push
jo
js
jge
sbb
xchg
mov
dec
pop
pushf
xor
xchg
inc
add
ret
dec
stos
xchg
sarl
pop
xchg
int3
xchg
loopne
clc
and
xchg
fs
imul
rorl
rcrb
leave
rcl
addr16
add
out
push
inc
dec
ret
mov
cs
ds
dec
inc
rcr
dec
or
xchg
fisubl
cmp
insl
adc
call
or
mov
frstor
rol
shll
outsb
pop
pop
sarb
add
test
lods
fisubrl
or
and
lret
or
push
or
cmp
xchg
orl
add
jle
es
dec
popf
mov
icebp
les
add
push
push
cmp
shlb
add
loope
in
mov
push
pop
in
pop
aad
leave
dec
mov
icebp
gs
sub
insb
pop
leave
shl
mov
out
repz
add
sub
shrl
and
imul
emms
jg
jne
sub
sbb
sahf
imul
sbb
adc
stc
or
jp
outsb
mov
fadd
aas
les
push
test
inc
xchg
sub
push
jg
pop
dec
sarb
mov
faddl
sbb
stos
out
out
lds
jge
push
shll
cmc
daa
push
pop
jp
sbb
and
leave
cmpsl
push
pop
add
jne
inc
or
dec
repz
push
sub
inc
in
mov
arpl
popa
lods
sarl
push
ffree
push
rcrl
in
mov
pop
mov
stos
mov
scas
lahf
push
sub
lret
sbb
pop
pop
mov
inc
rcr
mov
add
jbe
fnstsw
gs
out
pop
push
jns
xor
pop
pop
lds
out
or
adc
pusha
sbb
das
sub
push
enter
das
inc
or
and
imul
stc
clc
mov
sub
sub
dec
pusha
push
fld
cs
mov
ljmp
xchg
lds
xchg
hlt
fildll
ret
fmuls
sbb
mov
lock
loopne,pt
add
mov
mov
stos
inc
push
les
loopne
ss
inc
test
mov
dec
out
xlat
rorb
cmpsb
pop
mov
cmp
pop
pop
dec
aad
das
ss
push
mov
sbb
cmp
popa
repz
cmpsb
icebp
xor
cmp
bound
jno
cmpsb
je
xchg
mulb
pop
mov
test
jmp
xor
or
inc
pop
cmp
add
imul
rol
lock
sbb
or
mov
std
sti
adc
hlt
mov
jle
or
addr16
movsb
mov
cmp
fiaddl
mov
adc
insb
ffreep
jae
jo
pop
jl
pop
push
jge
stos
xor
fimuls
lods
sbb
test
dec
sub
jb
sbb
push
jecxz
push
out
push
fsubrl
pop
xchg
cld
dec
outsl
or
test
add
lods
mov
push
or
lods
divps
movsl
outsb
xchg
movsb
cld
repnz
shl
dec
lahf
and
mov
pop
adc
test
push
inc
dec
je
inc
push
mov
ret
add
or
ds
xlat
stos
call
xchg
push
xchg
aad
cltd
aaa
loopne
out
mov
jp
int3
xor
sbb
jecxz
mov
xchg
push
aam
repnz
sarb
xor
mov
sbbl
dec
jbe
adc
test
add
cld
cmc
std
fcmovne
sbb
cwtl
or
dec
aas
jb
dec
push
repnz
xchg
leave
push
movsb
mov
cltd
and
ret
add
sahf
in
cli
insl
xchg
add
shlb
push
cmp
sub
gs
xor
mov
push
mov
inc
inc
orl
cmpsb
out
xchg
lds
dec
add
in
idivl
pop
in
jl
out
jbe
cs
jle
dec
daa
mov
jg
in
pop
mov
mov
mov
xchg
into
pop
xor
fldt
cmpsl
and
or
xor
inc
les
sbb
test
jmp
cltd
and
and
pop
aas
outsb
test
imul
out
xor
shll
lods
les
dec
lods
inc
xchg
push
rclb
test
pushl
scas
pop
iret
xchg
addl
mov
into
sbb
cmp
sub
arpl
test
test
sub
lret
inc
jg
dec
sub
pop
iret
popf
or
leave
bnd
dec
mov
mov
es
dec
xor
loopne
cmp
sbb
ja
iret
add
adc
cld
imul
jo
into
push
mov
adc
xor
test
inc
aaa
xor
inc
xchg
lock
inc
jno
cmp
repz
pop
xchg
call
adc
lret
xor
das
cmp
insb
jne
call
mov
into
and
mov
cmpsl
test
ljmp
lret
inc
cmp
sub
or
out
mov
lahf
aad
mov
jg
xor
mov
dec
pop
or
push
jo
lea
int
mov
push
or
mov
and
push
stos
sbb
lds
mov
ficoml
add
or
pop
out
fildl
xchg
inc
imul
call
pusha
sbb
stos
shrl
xchg
movsl
mov
push
loopne
pop
cmc
xchg
popa
movl
inc
shlb
filds
pop
pop
iret
jns
mov
aas
fs
test
jae
mov
daa
insb
jg
andl
je
sub
add
fs
notb
cmp
xor
fisttpl
mov
test
mov
int3
leave
jnp
pusha
in
adc
xchg
aad
xor
loop
xchg
adc
jge
test
std
inc
mul
icebp
xchg
mov
xor
popf
or
pushf
and
sbb
mov
mov
loope
fs
adc
cmp
mov
jns
sbb
test
leave
add
or
add
jp,pn
aaa
shrb
movsb
xor
movsb
dec
movsl
adc
or
mov
mov
aad
mov
rorb
jae
inc
push
or
cmp
iret
cmp
pop
mov
out
arpl
test
daa
mov
ljmp
push
loop
pushf
scas
bound
or
xor
jp
lahf
iret
add
arpl
jo
lret
ret
mov
pop
lock
mov
pop
xor
cmp
inc
xchg
mov
mov
or
mov
cmpsb
push
hlt
push
push
jge
mov
frstor
or
mov
rcr
roll
mov
fs
jecxz
mov
or
lcall
pop
mov
xlat
lock
imul
aad
in
dec
adc
test
push
adc
das
mov
adc
or
fmull
jae
cmp
mov
js
pusha
sbb
fidivl
pop
les
or
pop
add
in
gs
lods
mov
icebp
test
inc
mov
xchg
pop
cmp
mov
fsts
data16
jmp
int
push
mov
jbe
mov
jbe
pop
imulb
cltd
dec
icebp
lods
fldcw
daa
nop
pusha
repz
xor
or
mov
test
ds
push
pop
jmp
fdivs
mov
xor
stos
pushf
jne
in
lret
mov
cwtl
lods
enter
inc
ss
pop
sub
leave
push
and
in
test
add
adc
push
and
add
test
adc
cmp
sbbl
fistpl
out
pop
mov
mov
xchg
sti
test
out
notb
or
call
add
rorl
cmpsb
mull
push
pushf
pop
mov
inc
mov
and
push
clc
ja
mov
or
dec
lds
mov
shl
movsl
jbe
push
fisubs
lahf
pop
inc
imul
cmc
mov
inc
imul
cmc
nop
mov
pop
xor
and
or
and
into
fwait
mov
lahf
push
pop
out
pop
cwtl
les
fmull
sbb
push
dec
les
sbb
mov
insb
xorb
sbb
or
dec
hlt
xor
push
inc
add
mov
test
and
inc
lcall
sub
pop
inc
stc
test
les
xchg
pop
daa
inc
push
shrl
subb
cmp
rcll
mov
push
cwtl
test
punpckhdq
fxch
loopne
or
pop
lahf
lds
rcrb
jg
and
add
cmp
ljmp
pop
scas
fisttpl
lahf
jno
cs
lods
adc
mov
cmpsl
xor
or
shrb
adc
jge
inc
dec
jl
sbbl
inc
xchg
test
gs
pop
mov
or
cmp
int3
mov
adc
inc
adc
or
xchg
test
shrl
jge
movsl
les
mov
roll
pop
data16
sub
cmp
xlat
es
and
fildll
lock
cmpsl
and
movsl
xchg
insl
add
mov
sbb
sub
sbb
addr16
pop
jo
jo
mov
orl
adc
xor
clc
mov
std
sti
cmp
sbb
dec
lahf
sahf
sub
hlt
sub
mov
sahf
inc
and
in
or
or
adc
xor
cs
cwtl
call
es
mov
stos
pop
mov
push
sbb
sub
sbb
sub
inc
mov
add
inc
int
cmp
mov
in
add
mov
push
xor
out
push
stc
pop
stos
test
jb
int
sbb
in
fwait
push
jno
lret
imul
nop
icebp
dec
jb
add
lret
repnz
jns
or
insl
shrl
adcl
dec
call
enter
or
test
sahf
sub
dec
push
data16
add
sub
repz
cld
mov
popf
jne
test
call
cmp
popf
jbe
xchg
les
fldenv
imul
pop
inc
call
pop
inc
push
out
mov
xchg
adc
mov
orl
ja
aaa
pop
sahf
lods
pop
insl
xor
mov
sub
xlat
call
lock
xchg
adc
pop
xor
in
pop
pop
stos
out
cmp
mov
test
insl
clc
cmp
hlt
mov
adc
push
nop
push
cmp
sbb
inc
cmp
or
and
sti
add
out
mov
mov
xchg
jno
enter
rol
in
push
fisubs
enter
int
inc
inc
enter
imul
movl
loop
xchg
add
sbb
movsb
push
notb
cs
stc
out
ja
rcrl
sbb
test
lds
push
ja
push
movzwl
imul
adc
xchg
fwait
sub
cmpsl
enter
xchg
pop
das
sbb
and
xchg
adc
push
xchg
ds
enter
xor
dec
neg
or
arpl
je
push
xor
pusha
xchg
and
jnp
push
aam
mov
mov
dec
xor
push
push
push
add
inc
out
jns
movsb
cmp
xchg
call
je
pop
in
adc
push
stos
aaa
sarb
je
imul
xchg
loopne
dec
in
movsl
xchg
lahf
mov
shll
cmpl
mov
pop
mov
mov
lods
xchg
fstpl
jne
xor
mov
adc
daa
in
mov
jnp
sbb
add
pop
mov
push
popf
jbe
enter
sahf
add
add
ja,pn
int
sbb
bound
lret
outsl
stos
push
outsb
scas
icebp
inc
and
repz
inc
cmp
dec
or
fs
inc
add
nop
mov
cmp
movsl
scas
in
mov
xadd
out
adc
pop
sahf
mov
push
daa
mov
sbb
jnp
movsl
aam
xlat
sub
sbb
idivb
enter
test
cs
cmp
dec
popf
mov
xchg
js
daa
jle
decl
jo
jo
xchg
push
fnsave
push
fnstcw
test
pop
sub
adc
xchg
sub
fucomi
mov
mov
sub
cmc
inc
lahf
adc
and
imul
xor
cs
inc
adc
into
in
jns
lods
fistpll
inc
lret
aam
aad
mov
outsb
xor
rcrb
sbb
sti
aaa
or
mov
jl
dec
mov
sahf
rorl
or
push
testl
jl
push
jecxz
sbb
dec
inc
fdivrp
jmp
stos
nop
mov
jle
xchg
int3
adcb
aas
inc
sub
test
rcrl
xor
lods
xchg
aas
in
pop
inc
cld
repnz
xlat
push
fsubr
lds
jp
cmpl
jne
push
xchg
pushf
xor
loop
mov
mov
xchg
loop
mov
adc
jne
jmp
sub
jae
aam
cmc
sbb
ficomps
jo
push
testb
out
addr16
push
xchg
out
inc
add
cmp
arpl
mov
out
mov
add
jp
add
mov
inc
cli
lods
jb
mov
popa
mov
arpl
test
lcall
test
or
lds
xor
jge
mov
pop
sub
jge
aam
faddp
push
in
out
out
mov
dec
mov
test
popf
jmp
mov
lock
je
cmpsl
scas
fnstcw
adc
imul
inc
mov
hlt
test
inc
movsl
out
push
pop
mov
jle
dec
sub
cmpsb
jmp
pop
or
test
xchg
imul
dec
push
shl
dec
mov
movsb
arpl
jne
aad
data16
dec
div
arpl
sti
out
xlat
incl
mov
inc
adc
lock
mov
fstpt
pop
test
and
jmp
xor
sub
sub
iret
loop
mov
int
cwtl
into
dec
or
and
ds
xor
jns
inc
jb
aaa
add
push
adc
cmp
push
repz
out
popf
iret
lret
std
dec
jp
inc
sub
int3
lods
sub
sub
inc
mov
adc
aam
inc
mov
sub
out
mov
mov
popf
or
push
jo
test
mov
add
push
js
jns
sub
mov
and
push
jl
ljmp
sti
sti
rorb
dec
mov
mov
orb
mov
jle
mov
data16
or
pop
push
scas
ljmp
mov
mov
mov
out
jae
je
loope
and
ds
loopne
daa
mov
test
mov
insl
xchg
cwtl
out
pop
mov
orb
mov
aad
sahf
push
add
divps
dec
test
and
subb
dec
int3
inc
pop
mov
mov
cltd
jg
popf
mov
jmp
or
cmpsb
jp
stos
into
jo
int
sub
sar
fildl
lahf
gs
lret
or
mov
loop
jmp
lcall
and
or
pop
sahf
push
push
ror
jmp
daa
scas
or
mov
repz
and
mov
fwait
xor
adc
sbb
clc
jne
mov
out
mov
xchg
mov
push
movsb
pop
pop
jg
xchg
clc
cmpsb
ror
les
sbbl
xor
sub
dec
jg
dec
mov
pop
ljmp
xor
out
adc
inc
das
jnp
mov
pop
cmp
and
or
mov
aam
xor
fidivs
adc
or
push
jae
sti
xchg
xchg
dec
test
lahf
stos
pop
cmpsl
rorb
mov
push
sub
sub
fcoml
or
mov
nop
xchg
xor
loope
mov
into
mov
lcall
in
adc
xchg
or
lret
jl
add
add
cwtl
inc
mov
push
push
or
xchg
adc
inc
insb
test
cmp
test
int
rcrl
xchg
out
rclb
xchg
addr16
psubd
sahf
pop
cltd
or
add
cwtl
pop
sbb
pushf
cmp
mov
outsb
fs
mov
jmp
std
stc
or
aad
sbb
insl
inc
data16
fs
and
sbb
shlb
sbb
push
cmp
mov
jle
cmpsl
cli
pop
jne
cs
test
movsl
je
mov
dec
mov
call
mov
add
and
sbb
xchg
mov
sub
loop
jmp
lcall
lds
cmp
jne
imul
adc
call
jg
lret
and
ret
or
and
push
cmp
mov
cmp
mov
jns
or
outsb
adc
or
loop
dec
fucomip
fsubs
sub
test
and
sbb
mov
imul
mov
push
pop
xchg
ja
aas
inc
fcmovbe
push
leave
fcmove
ss
lret
xlat
add
inc
cli
and
cmp
push
xor
or
test
mov
punpckhbw
push
fisubl
or
pop
ss
push
xor
lahf
sbb
sbb
xchg
jnp
outsb
and
inc
push
ficompl
lret
addr16
cltd
jmp
dec
mov
scas
orb
xor
test
in
mov
mov
je
icebp
lahf
jne
sub
lcall
cmp
inc
pop
jns
mov
fstp
cmp
mov
pushf
xchg
and
out
dec
test
and
in
cmc
mov
fldl
mov
ret
sar
xor
ss
push
xor
es
dec
add
jbe
mov
xchg
cwtl
ss
jno
clc
mov
stos
xchg
into
popa
mov
repnz
push
aam
sub
pop
xchg
mov
inc
andl
sub
scas
gs
pop
nop
jl
pop
repz
out
cmp
jbe
pop
cmp
adc
cld
in
xchg
aaa
cmp
push
lods
sub
adc
into
jb
add
test
aaa
inc
stos
push
push
dec
fs
leave
cmp
or
scas
cmp
cmp
cmp
movsb
outsb
aas
test
ja
or
into
jae
xor
out
dec
shl
stc
inc
clc
push
movb
in
dec
xchg
sub
test
in
xchg
dec
push
adc
loopne
push
mov
push
nop
dec
fildll
ja
xlat
xchg
sub
std
add
test
orb
pop
sub
popf
pop
call
mov
add
sbb
stos
fnstenv
clc
push
or
sub
adc
pop
mov
jecxz
les
imul
pop
aas
and
cmp
add
dec
add
popa
out
jno
popf
loope
or
adc
les
push
and
pop
inc
push
jg
mov
jbe
mov
pusha
pop
mov
ja
pop
aas
lret
std
push
mov
cmp
pop
add
in
fucomi
mov
add
push
or
jno
pop
aad
je
cld
xor
mov
clc
dec
imul
mov
xchg
inc
inc
int
fstpt
sti
fcmovbe
std
adcb
call
aaa
jno
adc
jge
sbbb
dec
addl
gs
mov
pop
out
int3
sub
cmp
push
call
out
ds
imul
aad
stos
xchg
xchg
pop
jge
call
imul
aas
cmpl
mov
cmp
stos
icebp
nop
lods
pop
add
mov
stos
mov
outsl
push
or
push
mov
cmpsl
add
mov
sti
jp
out
sbb
pop
inc
sbb
shl
stos
jnp
negb
push
in
testl
sbb
lcall
push
add
inc
xchg
stos
mov
dec
les
orb
loopne
mov
sahf
icebp
add
push
jnp
dec
in
or
fcos
movsb
ss
pop
pop
dec
sbb
test
pop
repnz
fidivs
ffree
sub
aad
ret
div
pushf
jle
xor
ds
mov
pop
adc
insb
pop
mov
and
neg
push
lret
cmp
mov
pop
jne
outsb
jl
push
fsts
outsl
fcomp
xor
jb
adc
jnp
pop
xchg
and
xchg
mov
lods
and
and
lret
cmpl
mov
sub
xchg
andl
adc
jnp
jb
dec
rcr
stos
bound
lahf
roll
fucom
inc
sub
out
fstl
lcall
mov
pop
mov
in
mov
ja
push
push
push
cltd
dec
jo
push
push
insb
jbe
lcall
and
aad
jp
and
jle
stos
mov
inc
call
or
lahf
aad
xlat
adc
insb
rcll
sti
in
stos
add
sti
cwtl
mov
or
dec
xor
in
out
sbb
xor
aas
xchg
xor
pushf
popf
adc
pop
adc
nop
out
push
ret
sub
adc
push
inc
sub
xor
jnp
fcmove
popf
inc
xchg
xor
testl
cld
jo
mov
lret
sub
adcl
cmpb
jge
xor
mov
lret
push
negb
lods
roll
int3
les
cmp
into
inc
xor
push
mov
pop
dec
imul
fadds
adc
jns
lods
sub
sub
adc
pusha
scas
addr16
lret
or
jb
enter
jge
add
push
stos
bound
dec
push
and
fisttps
sub
and
cmp
ss
movsl
cmpsl
xchg
sub
shrl
xor
adc
and
test
sub
pop
mov
jmp
mov
or
lds
daa
mov
insb
sbb
mov
cmpsb
loopne
cltd
icebp
ret
push
jg
jg
or
stos
out
jns
subl
loop
adc
inc
cmp
mov
stos
test
lahf
movsb
stos
cmp
in
pop
jmp
stos
mov
sahf
adc
loop
inc
mov
bound
ss
ljmp
or
fdivl
xchg
icebp
repnz
inc
stos
inc
sub
mov
mov
dec
shll
adc
lret
in
out
sbb
addr16
adc
jp
lea
sbb
fcom
mov
or
mov
pop
rcll
sbb
les
mov
jno
push
daa
sbb
in
cmpsb
ja
push
out
xor
dec
or
push
mov
sbb
pop
sarl
xchg
jecxz
jl
mov
cltd
int
cld
je
dec
insb
xchg
push
imul
test
test
pop
jmp
push
imul
movl
pop
or
lock
or
dec
scas
iret
out
or
jmp
fstpl
pusha
xchg
fbstp
ret
inc
cmc
ficoml
dec
xchg
movsb
shlb
fwait
out
jmp
daa
leave
ja
nop
hlt
cmp
gs
add
sub
movsl
arpl
fs
cmp
pusha
add
mov
ljmp
lcall
pop
xchg
and
out
loope
mov
sbb
iret
lock
or
lahf
cmp
mov
lock
mov
xchg
sbb
adc
daa
mov
mov
adc
pop
fcmovu
fmull
pop
jmp
add
xchg
xchg
subb
addb
lds
cmp
xchg
inc
mov
aaa
sbb
adcl
pop
mov
icebp
push
orb
test
cltd
add
aad
pusha
dec
daa
jmp
clc
testb
ss
jb
std
insl
movsl
xchg
imull
mov
test
pop
in
addr16
push
mov
loope
test
clc
aad
cmpsb
adc
lds
test
xchg
bound
xor
push
stos
adc
rolb
xchg
std
inc
enter
push
loope
cmpsl
or
hlt
int
in
cmp
scas
pop
das
cmp
jl
out
hlt
test
outsb
in
fmull
lods
test
fcmovnbe
xlat
jle
mov
imul
jle
clc
push
xchg
add
sahf
insb
mov
cmp
dec
adcl
jbe
arpl
or
sub
dec
shll
jns
in
int3
adc
outsb
cli
dec
out
ljmp
int3
mov
rcrb
in
xchg
popa
cli
int
sub
adc
inc
sub
outsl
pop
sub
dec
jb
pop
rolb
inc
jae
mov
adc
sbb
aam
fmul
mov
xchg
pop
decb
mov
int
lock
and
xlat
inc
and
jmp
aaa
inc
mov
add
into
data16
je
mov
add
sti
pusha
hlt
dec
or
and
movsb
inc
jae
mov
sub
sbb
outsl
mov
incb
in
sbb
or
loopne
push
pop
out
rcl
jp
dec
mov
ds
shll
sbb
scas
das
xor
clc
cld
or
pop
arpl
xchg
jne
and
lea
inc
mov
scas
pop
push
push
clc
cwtl
ljmp
cmc
pop
loop
sbb
xor
jno
push
or
dec
cld
xor
scas
sbb
adc
sub
or
mov
pop
in
mov
xchg
fcmovu
sbb
inc
push
inc
push
jmp
inc
mov
arpl
pop
push
pop
xlat
and
and
dec
push
push
out
idiv
orl
and
pop
xchg
fs
adc
and
inc
hlt
dec
lea
ljmp
movsb
xchg
or
jmp
jmp
inc
enter
xchg
xchg
imul
cmp
sbb
cs
pop
xchg
movsb
inc
stc
or
test
cltd
push
shl
push
cli
std
adc
jmp
push
leave
fs
cmp
gs
loope
jns
cltd
loope
repz
int
mov
jo
and
fsubl
incb
ss
mov
adc
leave
mov
push
rorb
dec
in
jl
mov
and
xchg
gs
in
loopne
ss
xchg
cmp
dec
js
pop
notb
mov
fldenv
and
test
mov
jg
subb
xor
repz
aaa
pushf
std
sbb
mov
cld
push
sbb
or
sbb
xorl
popa
dec
mov
inc
nop
call
pop
movl
mov
adc
sbb
push
dec
jmp
in
sbb
sbb
jle
mov
sub
dec
add
xchg
repnz
fucom
pusha
xchg
cltd
mov
jmp
fsubrl
pusha
stc
dec
daa
loope
jne
mov
jae
inc
mov
add
push
dec
das
xchg
aas
adc
adc
daa
jb
stos
je
aam
aam
cmp
daa
push
jp
sbb
test
mov
pusha
mov
or
daa
mov
mov
std
push
mov
shll
loop
jo
enter
push
sarb
push
or
add
or
stos
sub
pusha
jmp
loop
jmp
sbb
int
in
xor
mov
out
mov
pop
or
sarl
sbb
out
or
pop
pop
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jb
jmp
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
movsbl
or
mov
addl
sub
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jb
push
mov
mov
mov
sub
sub
mov
andl
movl
sub
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
call
jmp
mov
andl
mov
addl
mov
adc
mov
mov
and
xor
addl
xor
mov
mov
adc
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
push
test
add
add
add
add
add
add
add
push
cmp
add
add
add
inc
push
cmp
sub
sub
dec
xchg
popf
jnp
adc
push
and
inc
cmp
outsb
outsl
ja
and
pop
inc
imul
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
add
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
inc
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
jl
lods
outsl
scas
hlt
add
testl
jbe
xchg
mov
cmpsl
loopne
pop
push
pop
notl
pushf
or
pushf
or
mov
lcall
xchg
pushf
sub
popa
mov
stos
mov
mov
jbe
xchg
mov
pop
pop
cmpsl
jae
pop
clc
push
stc
mov
xchg
cmpsl
test
lret
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
add
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
