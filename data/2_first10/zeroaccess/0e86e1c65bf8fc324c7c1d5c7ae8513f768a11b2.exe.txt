push
mov
sub
mov
mov
inc
mov
sbbl
sub
push
mov
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jge
push
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
mov
movl
jmp
movl
jle
push
call
xor
sub
and
movl
movl
mov
add
add
add
mov
add
mov
adcl
sub
mov
sbb
xorl
mov
orl
andl
orl
jmp
loop
jns
cmp
lcall
jae
js
adc
adc
adc
adc
push
loope
lea
push
repz
lods
push
push
in
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
xor
divl
in
enter
and
imul
js
and
pop
je
mov
sbb
je
movsl
cld
aas
ds
dec
fdivrl
push
sub
jmp
mov
dec
ss
cwtl
push
or
rorb
jmp
lods
xchg
gs
stc
pusha
adc
je
xor
incl
shll
je
cld
xchg
or
ljmp
inc
insl
push
jb
xchg
addr16
or
adc
movsb
xorb
stos
lea
mov
test
push
pushf
mov
jne
gs
jg
sarl
xlat
js
fisubs
dec
inc
int
jg
iret
hlt
or
push
inc
clc
mov
insl
mov
lret
adc
adcl
jb
inc
inc
xchg
jno
repz
and
out
pop
push
jge
pushf
mov
lods
jno
call
sbb
jmp
mov
sarl
xor
cmp
xor
fcmovb
sub
sbb
std
jl
dec
xor
inc
cmc
sbb
nop
mov
jb
iret
data16
inc
filds
and
std
cmp
push
outsb
cmc
pop
sub
adc
sahf
mov
xorb
sub
lock
mov
nop
inc
sub
bound
mov
push
fstpt
xor
xor
sbb
sbb
and
lods
and
add
push
daa
push
sbb
stos
cmp
leave
mov
lcall
out
pop
or
mov
mov
in
inc
enter
loopne
pushl
ss
xchg
jbe
movl
and
push
aam
setnp
cmp
das
sub
mov
stos
and
cmp
lds
or
lea
mov
fwait
adc
loop
bound
daa
add
pop
loop
mov
mov
jmp
or
mov
xor
outsb
repnz
push
aam
cmpsl
aaa
test
repz
xchg
mov
sub
out
sub
testb
int3
es
in
lods
lret
js
push
pushf
sub
lods
out
ss
mov
sahf
lahf
les
bound
stos
ja
push
cmp
push
inc
push
cmp
add
push
ds
out
shrl
sub
mov
mov
xor
iret
aam
stos
xor
add
daa
or
and
add
push
jge
push
dec
insb
fistpll
inc
test
aaa
lds
mov
sbb
sarl
mov
negl
shlb
rorl
cmp
mov
das
add
in
imul
js
stc
roll
fistps
dec
or
sub
jnp
mov
cmpsl
int
pop
dec
pushf
loop
aaa
jne
xchg
shlb
xchg
rcrl
mov
pushw
add
mov
fwait
push
lea
mov
cmpl
mov
mov
movl
mov
jmp
mov
mov
jne
pushl
push
push
call
and
adcl
andl
xor
or
mov
movzwl
and
mov
and
mov
add
movzbl
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
mov
jb
pushl
call
movzbl
adc
and
sbb
movzbl
xor
mov
or
sbbl
mov
cmpl
movl
movl
jmp
mov
mov
jg
push
push
pushl
pushl
call
sbb
dec
xor
sub
or
mov
sub
mov
add
shrd
shr
and
mov
mov
sub
mov
subl
xor
orl
xor
movl
or
xor
jmp
ljmp
cltd
daa
mov
push
idivl
adc
adc
adc
adc
xchg
fwait
xor
mov
popl
xlat
pusha
lahf
xor
rclb
pop
xchg
ss
mov
aad
push
mov
add
andb
data16
repnz
or
push
sti
adc
clc
out
mov
mov
fidivl
ljmp
fisubrs
mov
shrl
ret
shrl
mov
sub
lods
pop
xchg
or
mov
and
bound
jle
lcall
mov
in
test
pop
arpl
fsts
xor
pop
xor
pop
ficoms
cmp
inc
mov
int
mov
push
jno
aaa
sub
repz
adc
xchg
int3
cwtl
sub
into
lret
mov
nop
cmp
jmp
aam
add
xor
jp
cld
inc
pop
and
mov
shlb
hlt
jbe
cmp
mov
mov
pop
shll
jg
fwait
dec
inc
mov
add
imul
pop
sti
mov
sub
cmpsl
push
mov
dec
addr16
xor
sub
icebp
aaa
in
sbb
test
adc
mov
jbe
mov
xchg
dec
stos
xor
movsl
ja
dec
jecxz
push
fstps
nop
shr
sbb
pop
pushl
les
fidivs
xchg
ficoms
bound
mov
dec
enter
movsl
aam
jmp
in
sub
flds
xchg
sbb
je
sub
jp
popa
sti
sbb
inc
xchg
or
sub
sbb
xchg
push
inc
inc
inc
add
cmp
jns
dec
and
adc
dec
dec
xchg
xor
test
adc
cli
test
add
fstps
adc
je
mov
and
pop
imull
dec
loop
orb
sahf
jns
and
cs
daa
loope
daa
lea
loope
add
int3
adc
dec
repz
shrb
aam
cmpsb
cmp
add
mov
xor
dec
negl
lahf
out
mov
add
push
adc
fdivs
cltd
scas
dec
inc
mov
jp
or
fidivrs
ss
jnp
adc
jno
fnsave
jl
lret
rorb
xchg
int3
mov
fisttpl
test
mov
out
pop
lahf
nop
mov
outsl
or
popa
lret
push
lods
lret
ljmp
stos
lret
push
sti
lcall
rcrl
arpl
fistpl
dec
fs
les
mov
addr16
movsl
dec
sub
das
loopne
movsb
adc
mov
push
add
sub
pop
hlt
cmp
mov
aaa
fiadds
pop
mov
cmpb
test
shrl
in
jl
inc
inc
jge
movsb
mov
ret
inc
and
pop
nop
fmuls
loope
mov
mov
push
repnz
sbb
bt
cs
test
leave
inc
cmp
daa
scas
cld
xchg
adc
mov
bound
push
in
cli
push
mov
scas
cmpb
push
imul
pop
inc
xchg
aam
fmul
roll
ds
cmc
imul
cmpsb
or
in
cmp
mov
sbb
enter
mov
lods
insl
xor
add
decl
mov
mov
cmpl
notl
movl
movl
movl
jmp
mov
jle
pushl
push
pushl
pushl
push
call
sbb
addl
add
xorl
add
movl
sbbl
movl
sub
movl
xor
xor
and
movl
sub
movl
sub
movl
sbb
movl
sub
movl
cmpl
movl
movl
jmp
movl
mov
jb
pushl
pushl
push
pushl
push
call
andl
notl
andl
orl
addl
sbbl
movl
sbbl
movl
xorl
movl
xor
movl
movl
cmpl
movl
movl
movl
jmp
mov
jbe
push
push
push
push
call
subl
adcl
movl
adcl
sbbl
adcl
movl
sub
movl
movl
adcl
movl
negl
movl
cmpl
movl
movl
jmp
movl
jbe
push
pushl
pushl
call
adc
addl
orl
sbbl
notl
adcl
xor
movl
movzbl
xor
movl
cmpl
movl
mov
mov
jmp
mov
je
push
push
push
push
call
xorl
negl
xorl
subl
andl
adc
sbb
movl
inc
movl
mov
xor
mov
xorl
shl
mov
or
mov
mov
subl
push
xorl
push
adcl
push
subl
push
adcl
call
and
mov
sbb
mov
adc
xor
xor
or
add
mov
mov
xor
sub
mov
adcl
jmp
into
mov
and
js
add
int
adc
pop
imul
dec
outsl
adc
jae
jno
daa
push
movsb
imul
mov
rcrl
shrb
xchg
mov
flds
xchg
adc
std
popa
push
xor
ss
dec
lret
inc
adc
jle
jnp
xchg
jae
mov
pop
mov
pop
cld
jb
outsl
pop
adc
dec
addr16
or
mov
add
sarl
sbb
add
sub
pop
out
mov
rorl
fsts
mov
mov
cltd
incl
and
enter
jae
jnp
mov
xor
xor
hlt
lret
mov
test
testb
inc
adc
nop
inc
sub
jnp
add
notb
sbb
inc
lret
mov
out
loopne
sub
data16
push
sub
gs
cmp
push
icebp
les
inc
shlb
data16
mov
mov
insb
mov
aad
jae
dec
cltd
ss
dec
lret
push
and
mov
ja
jl
inc
cltd
fwait
scas
movsb
mov
or
popf
inc
mov
sbb
mov
mov
inc
inc
into
jmp
lcall
into
mov
push
adc
lcall
push
xchg
jp
aad
inc
xchg
cmp
int3
mov
and
jmp
sbb
push
mov
adc
push
and
adc
cmp
insl
push
sub
mov
cld
rcr
pushw
xor
xor
ss
sbb
inc
movsb
ret
push
movsl
add
adc
ja
mov
stc
scas
iret
sti
jnp
and
stos
mov
in
sub
cwtl
adc
jae
mov
push
sub
out
adc
nop
aam
test
popa
lods
fildl
mov
or
jge
sbb
push
or
fneni(8087
dec
fnstsw
push
ret
mov
in
fildl
push
sbb
cld
mov
mov
mov
add
fsubl
inc
and
xor
jbe
cltd
or
int3
xor
inc
test
test
mov
inc
xor
scas
mov
fidivs
sub
dec
sub
fimull
xor
jo
fwait
mov
sar
filds
dec
sub
adcb
cmpsb
mov
fstpl
add
pop
fldenv
mov
sbb
dec
js
lock
mov
or
fucomi
adc
les
mov
scas
shl
ja
ja
rcr
dec
fmuls
hlt
movb
cmp
xchg
cmp
mov
and
orb
push
sub
sbb
std
fs
push
in
sahf
js
mov
xor
imull
xchg
or
jge
ret
pop
pop
sahf
and
xchg
mov
mov
scas
ret
xor
dec
adcl
pop
jge
mov
add
add
pushf
aas
xchg
out
insb
data16
or
inc
sub
daa
repz
test
jnp
pop
out
pop
test
jge
sub
insl
in
in
fstpl
cwtl
adc
mov
cs
fs
push
mov
push
mov
lret
or
xchg
jnp
movsb
stos
and
push
pop
push
xchg
push
xchg
mov
sbb
fsubp
shll
sbb
test
mov
test
cs
decl
add
inc
add
add
mov
or
and
xor
mov
or
andl
xor
movl
cmp
jmp
xlat
test
push
xlat
popa
dec
lcall
cmp
adc
int
adc
and
xor
lds
cli
sbb
push
test
lock
xchg
mov
imul
shl
add
jge
daa
jb
fisttps
mov
fisubrs
mov
or
fsubrl
je
mov
mov
cltd
jbe
push
adc
and
js
or
test
sub
mov
stc
sub
cs
jecxz
xor
sbb
and
push
data16
test
pop
aaa
xor
stos
clc
jmp
movsl
lea
push
xchg
or
dec
xchg
mov
jnp
push
sbb
ret
mov
test
mov
std
lds
je
xchg
ljmp
shrb
sbb
inc
add
insl
cmp
orb
std
mov
loope
sahf
xchg
and
sub
icebp
int3
in
lods
push
mov
inc
idivb
pop
xlat
dec
fs
jge
push
hlt
add
shl
iret
mov
insl
mov
dec
add
scas
lods
dec
push
shl
and
mov
and
popf
xor
cld
mov
mov
fsubrs
mov
jecxz
loopne
mov
mov
mov
std
cmp
in
fwait
sahf
in
cmp
jp
dec
jbe
fbld
pusha
push
loopne
sbb
jg
mov
sub
xchg
push
push
add
sub
add
jae
mov
test
xchg
dec
inc
xor
scas
push
scas
sarl
das
xchg
lds
push
cli
sti
jge
aam
jbe
add
xchg
cmpsb
out
in
push
sbb
jo
xchg
sbb
fiadds
dec
popa
les
addb
mov
mov
inc
hlt
stc
ds
jle
cltd
jne
add
mov
pop
and
into
push
cli
scas
dec
fistl
repnz
push
jp
das
or
out
sti
add
sub
cli
es
fmull
les
fcmovne
dec
scas
add
adc
mov
mov
int3
insb
mov
daa
cld
lcall
dec
inc
adc
mov
mov
adc
ds
roll
pop
push
and
scas
fists
pop
inc
mov
pop
ja
outsl
xchg
adc
repnz
mov
cmp
pushf
or
in
sbb
pop
mov
jl
xchg
outsl
mov
inc
js
and
xchg
shl
out
es
jp
mov
std
mov
adc
scas
mov
ss
lods
sarl
cmpsl
call
mov
xchg
fstps
and
daa
push
sub
outsl
mov
add
aas
or
inc
mov
fdivl
lods
je
push
mov
xor
out
outsb
add
cmp
pop
mov
inc
shll
adc
subl
mov
icebp
xchg
insb
and
fidivrs
mov
xchg
push
mov
lds
sub
dec
rcrl
clc
add
repnz
push
pop
mov
outsl
jle
mov
stos
scas
dec
fistps
cmp
mov
aam
dec
xor
cmp
mov
dec
fs
and
xlat
push
test
mov
cmp
fsts
stc
loope
push
dec
jb
mov
push
cmp
xchg
mov
mov
sbb
push
test
push
dec
nop
repnz
and
dec
xor
and
and
test
pusha
add
add
mov
mov
cmpl
mov
movl
movzbl
jmp
movl
jae
push
push
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
shrd
shr
add
mov
mov
andl
shl
xor
addl
xor
or
mov
mov
movl
cmp
jne
mov
cmpl
not
mov
movl
jmp
movl
movl
je
push
pushl
push
push
call
adc
xor
or
mov
adc
not
decl
xorl
sub
and
mov
sub
cmpl
mov
movzwl
mov
jmp
movl
movl
jle
pushl
pushl
call
sbb
adc
add
sbb
sbb
movl
mov
xor
mov
mov
sub
mov
shrd
xorl
jmp
lcall
add
js
insl
cmpb
adc
adc
sbbl
mov
imul
jno
pop
sbb
rcrl
xor
push
rcrb
test
into
xchg
loope
fbld
xchg
in
inc
push
sbb
sub
je
sub
hlt
adc
jbe
imul
mov
pop
push
sahf
ja
adc
dec
sbb
movsl
sti
addr16
out
pop
push
repnz
jmp
xchg
js
test
roll
popf
fisubrl
leave
jbe
loop
mov
cmp
rcll
inc
outsl
lea
mov
mov
pop
adc
mov
movsb
xor
lods
clc
fmull
push
add
leave
ja
sbb
sub
out
popf
int
adc
mov
adc
cmp
cmpsb
sub
xchg
add
in
lods
loopne
cmp
mov
mov
xor
iret
ret
inc
je
pop
add
mov
or
sbb
dec
and
cmp
icebp
mov
imul
cmpb
and
cmpsl
add
mov
shl
mov
add
xlat
js
mov
ds
xchg
cmp
aas
jmp
fdivs
shlb
inc
rol
xchg
xor
mov
in
std
filds
mov
xlat
stc
mov
gs
pop
aaa
push
pop
push
or
shlb
jo
and
jno
mov
inc
insb
icebp
xchg
loope
es
sbb
dec
cmp
icebp
and
inc
ljmp
jecxz
ret
lret
sbb
sub
lock
lahf
inc
sbb
sbb
movsl
stc
in
pop
adc
push
ljmp
push
sub
mov
jmp
je
lods
fbld
rcrl
xorl
call
fbld
imul
inc
shrb
pusha
xchg
mov
add
add
mov
dec
jno
loopne
cmc
pop
sub
sub
sub
cmp
mov
push
push
stos
loope
lcall
inc
dec
or
pop
movsl
mov
popf
inc
push
mov
inc
es
jbe
outsb
jno
scas
data16
pop
and
aaa
test
arpl
fcoms
mov
jge
mov
or
outsl
shrb
mov
push
cs
mov
jmp
sbb
roll
lret
in
adcl
cltd
mov
push
in
xorb
inc
ss
dec
mov
das
adc
popf
mov
test
pop
pop
xor
xchg
fnstcw
pxor
out
cmp
jl
mov
cmp
int
push
insb
fiadds
dec
xor
scas
sti
dec
ss
jecxz
lods
rcrl
xchg
insl
incb
fdivs
iret
inc
adc
jg
mov
jo
mov
mov
out
push
push
dec
mov
arpl
les
insl
adc
mov
sarl
xor
scas
std
pusha
mov
cmp
xchg
mov
jge
sbb
movsl
ret
mov
sub
lds
jne
adc
repnz
jge
cs
sahf
in
cmp
fwait
stos
jnp
mov
fnstsw
mulb
adc
dec
mov
fs
cmp
mov
cmpl
mov
mov
jmp
movl
jle
pushl
pushl
call
sub
add
notl
sbb
xor
dec
sub
mov
xor
orl
shr
sbbl
mov
adcl
xor
andl
or
shl
cmpl
mov
mov
movl
jmp
movl
movl
je
pushl
pushl
call
notl
and
sub
and
not
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
jle
push
pushl
pushl
call
sbbl
adcl
movzbl
sbb
mov
movzbl
and
mov
movzbl
sbb
mov
add
add
mov
mov
mov
shrd
or
shr
cmpl
movl
mov
movl
mov
jmp
mov
je
pushl
call
and
and
sub
or
mov
mov
or
sub
and
mov
mov
xor
shl
adcl
xor
or
xor
mov
mov
shrd
shr
mov
sbb
mov
cmpl
movl
movl
mov
jmp
movl
not
ja
pushl
push
call
mov
xor
or
sub
add
mov
sbb
inc
mov
mov
sub
add
or
mov
sbb
mov
xor
xor
or
andl
shl
lea
subl
mov
mov
andl
shrd
subl
shr
cmpl
mov
movzwl
mov
movl
jmp
mov
movl
jb
pushl
push
push
pushl
call
xorl
neg
or
movzbl
sbb
movzbl
xor
mov
xor
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
je
pushl
call
movzwl
add
mov
add
movzbl
and
or
subl
neg
mov
cmpl
mov
movl
movl
jmp
mov
jge
pushl
call
sbb
xor
inc
mov
sub
mov
adc
adc
cmpl
movzbl
mov
jmp
mov
mov
jl
push
call
movzwl
and
movl
add
sbb
movzbl
sub
sub
xor
mov
xor
subl
or
orl
shl
xor
imul
mov
and
mov
mov
andl
shrd
andl
mov
mov
xorl
xor
shr
subl
mov
mov
sub
mov
xor
adcl
or
sbbl
shl
sub
mov
cmp
mov
mov
movl
jg
or
mov
sub
mov
movl
shrd
mov
xor
mov
sbbl
xor
movl
shl
xor
adcl
or
shr
or
mov
mov
adc
mov
mov
mov
addl
mov
sbbl
shrd
shr
adcl
mov
mov
movzbl
sbb
mov
addl
xor
xor
or
shl
addl
imul
andl
sub
movl
jmp
mov
adcl
mov
notl
shrd
mov
add
mov
addl
xor
movl
shl
xor
or
xorl
shr
xorl
mov
mov
mov
cmpl
mov
mov
not
jmp
movl
mov
jg
push
pushl
push
push
call
xor
xor
xor
sbb
addl
orl
neg
xorl
and
cmpl
movl
movl
jmp
movl
jle
pushl
call
xor
xor
mov
sbb
dec
not
mov
adc
cmpl
mov
mov
mov
jmp
movl
movl
jg
pushl
push
push
push
call
xor
add
or
mov
movzbl
and
notl
adc
or
adcl
sub
mov
shrd
shr
mov
mov
jmp
xchg
icebp
mov
icebp
out
loopne
jge
jle,pn
out
adc
int
adc
sarl
aaa
daa
imul
pop
mov
sub
adc
ret
jo
daa
dec
idiv
push
jl
scas
jl
mov
mov
repz
pop
inc
inc
test
xchg
aad
pop
mov
jle
push
test
push
incl
loopne
cmp
pop
push
iret
or
xor
add
or
pop
push
dec
pop
mov
iret
adc
push
test
lret
clc
xor
loope
shll
inc
cwtl
sar
push
sub
pop
sub
in
and
jo
imul
mov
pop
ja
cmp
daa
or
mov
pop
push
add
xchg
iret
mov
sub
into
cmp
les
xchg
mov
js
push
fsubrs
xchg
dec
mov
jns
gs
xchg
and
call
inc
mov
jle
insl
adc
sbb
mov
and
cld
jne
adc
inc
push
ret
mov
mov
mov
insl
fbstp
adc
pop
popf
and
adc
ret
cmp
cld
pop
pusha
out
jnp
push
and
fs
lock
sbb
rcll
mov
push
xchg
imul
push
outsl
mov
sub
ret
int
push
ja
mov
and
mov
adc
jmp
cli
pop
out
jno
or
out
sti
inc
addps
cld
adc
addr16
mov
mov
int
and
fucom
mov
sbb
add
inc
add
pop
daa
sub
jbe
stc
add
cmp
jbe
insl
dec
shlb
das
and
lds
jecxz
xor
cmpb
xchg
lret
push
add
cmp
cmp
repz
cmp
push
inc
push
adc
and
neg
clc
call
mov
fisubrl
push
lods
clc
push
fcoml
xchg
dec
pushl
inc
pop
mov
add
add
fiadds
mov
shlb
mov
ljmp
mov
stos
fimull
push
jge
mov
frstor
ffree
lret
jecxz
decb
ljmp
dec
pop
lods
lcall
and
inc
out
mov
loope
jl
cmc
bound
add
or
cltd
stos
jne
or
rclb
cmp
mov
dec
mov
cmpsl
mov
xchg
and
mov
addl
or
xchg
inc
add
push
insl
xchg
sarl
dec
fsubrp
inc
push
cli
adc
dec
negl
mov
ret
jle
cmpb
repz
aas
shrb
lcall
movsl
add
mov
pop
and
lret
in
cmpsb
pop
or
call
xor
cmp
dec
popf
pop
dec
repnz
test
inc
leave
and
mov
mov
pop
pop
and
ss
lods
int3
jbe
test
jl
mov
lahf
stos
push
shrb
hlt
shlb
cltd
stos
out
mov
jge
mov
movsb
dec
dec
push
dec
or
movsb
and
sub
repz
pop
mov
push
cmpsb
push
sub
das
dec
push
cmp
lods
mov
rol
push
cmp
leave
mov
jmp
mov
leave
rorb
pop
inc
adcb
daa
stos
mov
sub
jmp
lret
ljmp
jge
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
jmp
lret
lea
push
push
and
xor
cs
movsb
js
in
adc
int
adc
add
loope
pop
cmp
pop
mov
pop
push
shll
pop
adc
push
out
lods
adc
dec
ds
aam
cmp
call
jae
push
jp
mov
lret
fstps
fwait
jmp
xor
in
push
nop
pusha
in
jl
inc
sbb
adcl
into
adc
jns
movsl
xchg
mov
in
mov
and
stos
pop
push
jl
xchg
mov
psrld
dec
cmpsb
or
std
dec
insl
stc
out
outsl
movl
push
outsl
fcomps
repnz
icebp
cs
std
push
fdivrl
mov
inc
push
add
mov
movsb
lods
das
call
add
inc
int
mov
xor
pop
mov
cmpsb
cmpl
pop
push
stos
cmpb
mov
lret
xchg
add
ss
jle
cmpsb
cs
or
outsl
xchg
mov
inc
pop
push
fldln2
xor
mov
pop
bound
cltd
add
cmpl
dec
loope
xchg
jge
mov
lret
inc
lret
frstpm(287
test
rcl
xor
mov
cmpsb
dec
in
xor
xor
xchg
call
sti
pmulhuw
xchg
push
data16
dec
xchg
cld
cmp
ret
stos
dec
aam
push
xchg
aam
out
cwtl
add
mov
xor
cmpsl
push
aas
test
in
cld
mov
inc
push
fs
xor
inc
pop
cwtl
add
jae
push
int
ret
lock
push
incl
mov
je
das
jmp
mov
es
adc
fabs
sahf
cmp
aaa
mov
push
movsb
sbb
or
mov
pop
push
nop
jle
inc
cmp
shlb
imul
mov
popf
testb
adc
push
int3
sysexit
xchg
cmpsl
sub
push
push
sub
inc
sbb
bound
jnp
push
nop
jb
clc
test
cs
test
adc
mov
jmp
push
movsl
xchg
fwait
sbb
test
mov
or
adc
inc
imul
cmp
jb
xor
jbe
sbb
in
adc
es
jecxz
jo
inc
shl
jecxz
inc
aaa
and
fwait
push
mov
scas
dec
cmp
outsb
mov
cld
out
roll
mov
pusha
xor
subb
xchg
in
sub
pop
sub
inc
movsb
xlat
fdivrl
mov
jle
ror
test
test
push
mov
unpcklps
ja
movsl
dec
cmp
call
data16
mov
ffreep
js
mov
int3
sub
movsb
adc
into
jecxz
out
pop
scas
inc
mov
nop
sbb
dec
popf
lret
mov
mov
push
mov
scas
call
rorb
test
adcl
pusha
pop
jae
xchg
mov
nop
lret
aas
ljmp
lods
sarl
scas
mov
cmp
ficompl
cmpl
and
std
leave
sbb
es
int
dec
add
or
mov
dec
mov
cmpsb
push
mov
add
cmp
testb
mov
test
out
xchg
call
or
adc
mov
movl
mov
movl
mov
mov
mov
shrd
shr
jmp
fsubrs
fldenv
add
std
jle
out
adc
adc
adc
add
js
and
and
mov
in
xchg
shl
pop
mov
push
xor
mov
sbb
addr16
jb
and
sbb
or
mov
test
jle
outsb
xchg
dec
cmpb
xor
das
add
and
popa
js
int
out
xor
mov
mov
dec
xchg
add
mov
mov
cmp
ljmp
xlat
fcoml
fbstp
cwtl
pop
sub
inc
mov
aas
cmp
jmp
jb
lock
shlb
xor
jmp
adc
xchg
arpl
call
mov
xchg
mov
xor
or
subb
out
pop
les
xchg
outsb
popf
rclb
inc
rol
sub
mov
roll
or
pop
push
frstor
mov
inc
lret
xchg
aas
sbb
imul
cmc
mov
sub
dec
or
sti
jae
iret
xchg
clc
pop
loope
das
push
testb
inc
dec
dec
nop
fwait
mov
setne
add
sub
inc
dec
mov
lcall
xchg
or
xor
sbb
iret
cltd
and
out
add
rolb
arpl
pusha
inc
in
lret
cmp
push
push
inc
loopne
xor
outsl
push
inc
xor
mov
xchg
ss
fstpt
cmp
outsb
fdivs
xlat
testb
pusha
outsl
int
inc
inc
dec
lods
dec
sbb
jb
cmpsb
xchg
int
fcmovnu
push
lahf
jle
lret
and
cli
rorl
arpl
inc
fwait
aas
inc
inc
cs
ss
pop
movsl
cwtl
jae
loope
inc
mov
sbb
dec
push
mov
mov
dec
mov
pop
mov
iret
sarl
xlat
sub
xor
cmc
cmpsl
out
mov
sub
or
fs
icebp
in
popf
clc
stos
fisttpll
fcoms
sub
and
mov
daa
cwtd
jns
or
roll
int3
adc
mov
dec
cmpsl
ss
mov
add
data16
xchg
dec
jecxz
cmp
xchg
shll
sub
inc
sub
cld
pop
mov
cmp
mov
jmp
sub
mov
loop
out
xchg
adc
sbb
cmp
xchg
dec
popl
ret
mov
das
push
inc
int3
movsl
pop
es
push
adc
sbb
mov
jle
out
and
inc
scas
sub
test
jns
loop
sub
popa
cmpsl
nop
enter
mov
xchg
adc
arpl
ljmp
push
fldcw
dec
cmpl
ret
mov
fmuls
push
sub
dec
dec
scas
fisttpll
fldcw
mov
xchg
mov
std
pop
mov
out
clc
xchg
incl
fistpll
sbb
mov
jle
dec
pop
xchg
adc
push
sbb
cmpsl
pop
mov
js
fwait
movsb
push
repnz
fstpt
outsb
xchg
imul
xchg
push
clc
rol
inc
out
js
rcrb
dec
push
cmp
mov
icebp
xor
sub
pop
pushf
test
adc
xchg
xor
outsb
lods
lcall
pushf
gs
shlb
mov
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
jmp
orb
mov
add
inc
stos
ficoms
adc
adc
adc
out
xor
pop
and
push
daa
lds
inc
or
jbe
cwtl
aas
push
and
or
lods
push
fadd
test
pop
cld
mov
pop
loop
addb
pop
push
xor
pop
aam
xchg
sti
cmp
cs
dec
mov
stos
sahf
inc
sbb
inc
jp
faddp
jge
imul
sarl
lret
dec
sbb
sub
pop
insb
imul
push
or
loop
xorl
pop
mov
cmp
sbb
xchg
fists
lods
fistl
push
dec
sti
ret
js
cmp
ret
xchg
pop
loop
xchg
shll
push
lds
ficompl
xchg
push
xor
inc
addr16
fisubrl
sub
in
jmp
xlat
xchg
mov
aam
enter
lock
hlt
sub
data16
add
jle
shlb
cmpsl
and
or
aam
cmp
jbe
or
sahf
addb
pusha
push
inc
push
loopne
jmp
cmovg
jg
sbb
sub
pop
pop
rcrl
push
cmpl
xchg
inc
cmpsl
push
mov
xchg
xchg
jl
fcoms
mov
orb
movsl
repz
inc
or
ret
push
and
sub
fdivrs
sahf
stos
jae
mov
idivl
or
dec
adc
out
jno
outsb
stos
and
sbb
mov
mov
cwtl
mov
jae
xchg
xchg
cli
clts
xchg
lahf
mov
pop
mov
call
mov
ret
sbb
add
cli
nop
repnz
cmpb
sbb
push
ljmp
pop
jecxz
pusha
xchg
mov
das
mov
lret
cld
jb
mov
sub
mov
hlt
ds
cld
ds
lret
icebp
arpl
add
out
addb
or
xchg
ja
dec
adc
sbb
clc
mov
pslld
lds
lret
pop
mov
out
dec
cltd
lahf
jmp
xor
push
scas
imul
pop
insb
mov
fs
inc
aad
mov
daa
inc
jge
push
mov
out
lds
int3
ret
dec
into
jp
data16
adc
dec
enter
shlb
xchg
out
out
push
daa
cmpb
jmp
inc
es
adc
xchg
jnp
divb
imul
inc
out
mov
loope
mov
xchg
loopne
jp
ss
shr
sbb
dec
adc
sbb
jbe
pop
pop
jo
inc
inc
inc
sub
scas
orb
mov
mov
testl
daa
lret
xlat
jle
mov
dec
imul
movsl
pop
das
ja
adc
leave
or
popa
test
sbb
sub
mov
cmp
mov
xor
and
push
adc
and
fimull
out
in
push
mov
mov
inc
xchg
or
push
sbb
adc
sti
jb
pop
ds
lds
gs
add
cltd
sub
sbb
lret
dec
inc
flds
sub
jb
sahf
lret
out
data16
and
mov
aam
inc
into
sarl
scas
fdivl
inc
xchg
lcall
imul
sbb
and
loope
hlt
repz
mov
fnstsw
movb
add
in
loope
jmp
fmuls
sbb
in
jecxz
insb
jge
adc
int
adc
adcl
repnz
xchg
inc
aas
arpl
add
cmpb
fs
mov
cmp
repz
dec
xlat
jmp
push
jne
push
lods
xchg
mov
aad
fists
insb
iret
movsb
jge
mov
lret
loop
xor
mov
lds
daa
mov
cmp
dec
es
test
inc
push
testl
pop
xlat
cmpsl
in
outsb
cmpsl
mov
xor
sub
out
fstpl
les
adc
js
aam
jmp
sbb
sti
out
and
mov
cmp
lahf
pusha
cltd
sbb
int
inc
stos
rcrb
aas
jl
negb
adc
dec
cwtl
inc
sahf
es
mov
das
cli
sarl
fcoml
cmp
sbb
and
sub
fidivrl
lret
jno
or
inc
mov
rorb
addr16
outsb
cmp
inc
inc
mov
ja
jle
jl
cmp
or
xchg
fimuls
and
xor
shll
dec
dec
add
in
das
xchg
and
mov
mov
cld
ret
add
shlb
dec
iret
sub
repnz
cmp
fxch
push
jecxz
pop
fdivrl
xor
mov
fs
mov
push
or
add
mov
je
or
sbb
adc
mov
inc
add
push
pushf
cmc
xor
or
hlt
pop
mov
in
jge
fscale
decl
xchg
aam
shll
aam
cmpsb
sub
pop
fcompl
sbb
insb
push
fs
dec
int3
fcoms
cld
mov
js
les
adc
push
and
addr16
or
xor
sub
pop
je
jns
js
ror
aaa
sbb
andl
das
xchg
sbb
fisttps
data16
pop
sub
mov
jmp
push
cmp
mov
loope
adc
dec
mov
loop
nop
xchg
loope
jno
or
je
ds
or
or
stos
js
and
jp
fistl
jbe
pop
mov
mov
cs
fimull
das
mov
mov
popf
test
inc
int
addl
xor
add
mov
xor
insb
and
mov
leave
test
mov
dec
cmpsb
adc
out
push
dec
and
dec
fldcw
in
adc
mov
cmp
ljmp
or
mov
push
mov
jmp
mov
ds
stos
mov
je
inc
faddp
push
jp
push
pushl
ja
insl
ret
add
mov
fisttpll
stc
cmp
pop
loopne
movsl
adc
xchg
aad
call
push
shl
sbb
cwtl
frstor
out
fwait
cld
ss
xchg
imul
shll
aas
ljmp
outsl
fsubrs
data16
fistpll
stos
inc
xor
es
mov
xchg
dec
xchg
pushf
ss
jmp
mov
fadds
mov
mov
cmp
sub
movsl
fdivrl
push
jge
divb
lret
pop
shl
imul
mov
out
adc
fneni(8087
push
inc
jl
jge
fnstsw
push
dec
sti
insb
mov
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
jmp
dec
or
push
sub
loopne
push
jb
lods
xor
adc
int
adc
lahf
jae
xor
push
movd
mov
out
rorb
xchg
dec
test
jmp
clc
lock
xlat
pop
enter
negl
mov
pop
lret
test
jg
fisubl
stc
cmp
pop
cmp
push
mov
adc
mov
add
push
push
dec
push
icebp
mov
push
pop
test
scas
mov
ficoms
jmp
xchg
mov
mov
fildl
inc
sub
movsl
jne
sahf
xor
mov
inc
dec
inc
dec
add
je
xchg
jecxz
stos
loopne
out
fcmovne
mov
and
imul
sahf
push
pop
mov
sbb
leave
pop
xchg
es
pop
mov
pop
pop
iret
mov
flds
int
cmp
push
add
push
mov
pop
cmp
ja
out
loope
cmpsl
testb
dec
aaa
test
movsl
mov
incl
in
pop
stos
sub
jp
dec
stc
fwait
jae
push
sbb
push
loop
push
out
xchg
jns
push
push
stc
fcmovb
pop
fcmovnb
xlat
fisubs
outsb
mov
cmp
and
inc
andl
bnd
sbb
cmp
mov
call
aad
leave
fsubl
ds
out
xchg
adc
mov
fimuls
jp
sbb
lcall
lea
scas
mov
cmp
and
add
loope
cmp
pop
mov
test
test
jmp
adc
add
xchg
jl
sbb
push
mov
std
and
sub
xchg
pop
mov
pushf
add
pop
xchg
inc
iret
repz
mov
adc
mov
in
test
dec
mov
imul
xor
cmp
mov
add
shrb
js
fwait
xor
jae
xchg
and
and
fnsave
lods
test
xlat
jb
mov
cmp
std
stc
and
scas
outsl
ret
sbb
fstpl
lret
scas
ljmp
add
push
mov
or
inc
es
jae
fldcw
push
sahf
mov
dec
and
push
es
lret
dec
jne
cmp
inc
faddp
pop
pop
cs
jmp
mov
int
mov
and
sub
cmovge
insl
xchg
push
loopne
outsb
andb
clc
xor
push
out
aam
mov
push
imul
adc
push
pusha
arpl
and
test
mov
xor
lret
or
push
push
xchg
mov
sub
sbb
andl
xor
mov
lock
or
shrb
or
dec
les
lret
mov
xchg
mov
dec
out
dec
mov
hlt
push
or
pop
rcrl
insl
sbb
fcoms
or
or
and
les
adc
mov
ja
fcoml
mov
pusha
mov
movsl
mov
sub
je
fadd
mov
add
jae
mov
pop
jle
mov
pop
cmp
scas
loope
adc
push
lock
cmp
jo
and
sub
and
adc
cmp
ds
adc
cmp
rcrl
fsubp
push
idivl
loop
jbe
out
push
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
jmp
adc
push
inc
daa
sbb
lods
insb
lahf
jnp
mov
int
adc
sub
negl
stc
mov
sarl
nop
xchg
xor
add
dec
rorb
lret
loop
xchg
sbb
or
jg
data16
fwait
or
stos
ret
pop
pop
pusha
scas
ja
loope
pop
fyl2xp1
adc
mov
loope
inc
add
outsl
sbb
repnz
mov
decl
aas
push
push
jbe
and
lret
or
cs
test
mov
jle
xchg
cmp
jecxz
add
imul
adc
or
adc
jae
movsb
shll
fstl
push
inc
inc
daa
inc
stos
mov
call
jae
jg
jmp
xchg
xor
push
out
aas
adc
ret
sbb
or
cmp
fisubs
icebp
mov
mov
mov
fidivrs
xor
sub
or
pop
sub
hlt
or
xor
cs
sbbb
sbbl
insl
mov
sbb
sub
push
and
scas
clc
add
gs
lock
jg
xor
inc
loop
shlb
bound
mov
push
jbe
xor
jmp
ds
mov
nop
shlb
adc
mov
push
push
mov
cmp
push
pop
sbb
repz
adc
mov
lret
fistps
dec
add
cmp
sbb
pandn
fwait
inc
add
xor
pop
fisubl
mov
rcll
sarb
or
and
out
jmp
stos
call
call
push
dec
std
daa
insb
outsb
mov
dec
outsb
call
scas
in
lret
repnz
mov
fsts
jl
repnz
pop
int
hlt
fstpl
sbb
push
call
adc
pop
into
mov
lcall
mov
pop
pusha
fildll
rclb
jp
aaa
cltd
or
ret
jbe
negb
into
lcall
in
cltd
jno
xor
jmp
mov
imul
stos
not
loope
sub
cs
xchg
negb
data16
cwtl
mov
add
cmp
pop
pop
in
xchg
iret
pop
xchg
test
je
loope
lock
mov
gs
insl
xor
fsubl
and
cld
cmpsb
loope
inc
sub
xchg
and
or
dec
and
insb
int
fs
sti
mov
mov
mov
mov
jnp
jge
into
scas
sbb
push
scas
pop
fs
pop
jae
dec
int3
xchg
push
or
jmp
jae
addb
push
dec
in
out
inc
xchg
idivl
or
fists
push
mov
dec
cwtl
mov
loope
outsb
push
or
add
ficoms
pop
sub
mov
push
or
jmpw
pop
clc
repz
or
orl
cwtl
jle
mov
in
cltd
mov
or
mov
mov
stos
xor
dec
and
cmc
fadds
jle
pop
ljmp
fcomps
xchg
popf
pop
into
mov
push
in
mov
imul
mov
jnp
and
scas
imul
add
mov
out
or
add
mov
and
testb
sti
ficomps
ret
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
jmp
jp
lds
sub
imul
int
adc
sbb
sub
orl
mov
dec
inc
adc
xor
mov
adc
repz
cmp
inc
mov
sbb
cmp
sub
mov
in
movsb
cmp
cmp
inc
repz
mov
call
mov
mov
int
dec
fdivrl
outsb
loopne
pop
jmp
mov
and
aas
mov
cmp
mov
dec
mov
std
sub
shll
fdivs
ljmp
gs
mov
jnp
jmp
dec
stc
mov
xor
push
xchg
push
outsb
jno
and
mov
fidivrs
int
jl
pushf
xor
push
mov
and
mov
mov
sub
pop
fistpl
or
push
jl
cltd
xchg
movsl
push
xchg
xchg
stc
pop
imulb
jno
enter
push
lods
pop
fwait
cmp
sbb
mov
andl
fldt
icebp
mov
lcall
mov
inc
pop
ja
sub
inc
xor
pop
xchg
sub
jecxz
mov
pop
sbb
inc
xor
rol
jae
jle
mov
clc
inc
sub
pop
cmp
cmp
xor
stos
sahf
loope
mov
int3
lock
adc
cmp
repnz
pop
icebp
adc
sar
daa
add
fwait
push
or
adc
and
sahf
lret
ja
or
ret
inc
ja
or
xorb
mov
lock
addb
mov
push
jae
hlt
aam
loop
sbb
push
dec
mov
add
and
cmp
sahf
ret
in
mov
xchg
lea
mov
adc
cmp
adcb
dec
inc
mov
jbe
or
lods
cmpsl
xchg
jg
push
inc
inc
mov
jp
int
and
mov
call
adc
mov
and
mov
sub
add
mov
jmp
stos
adc
pop
add
add
jne
or
sub
xor
ss
stos
xor
mov
repnz
gs
movsl
test
cwtl
mov
dec
dec
dec
mov
test
adc
jns
push
jo
xchg
fmull
int3
mov
xor
clc
lods
sub
or
jl
outsb
enter
xlat
pop
push
lret
orb
push
sbb
pushf
loopne
clc
cltd
out
jb
ret
popf
shll
out
mov
dec
jne
jne
sub
int3
lods
insb
cmc
mov
lods
add
arpl
pop
out
ss
pop
and
out
pop
mov
or
dec
dec
jge
cld
or
jle
fnstcw
pushf
mov
out
outsb
jle
out
pop
dec
in
lock
js
mov
or
mov
push
mov
in
cmp
and
cmpsl
or
xchg
cmp
pop
jnp
inc
sub
loope
ja
xchg
jmp
ret
aaa
dec
adc
cmpsl
sub
fmuls
popf
add
cmp
mov
add
cmp
xor
jno
and
je
or
loop
xchg
in
in
pop
cmpsb
and
dec
cli
add
pop
repnz
mov
and
xor
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
jmp
imul
sbb
cmp
insb
push
mov
adc
lret
xor
adc
sahf
jns
jecxz
ret
fisttpl
xchg
mov
mov
fs
xor
inc
cmp
jnp
int
jbe
dec
cltd
mov
xchg
xchg
mov
cmp
and
jnp
or
inc
repz
dec
call
outsl
pop
cmpsb
lcall
fmuls
cmp
mov
jmp
adc
adc
es
out
outsl
add
js
shlb
jb
xchg
adc
push
cmc
lahf
xchg
sub
lea
jne
push
aad
dec
outsb
aas
imul
push
dec
xchg
cmp
mov
dec
mov
sarl
cltd
ljmp
addr16
outsb
cmp
cmp
inc
jns
xchg
cmpsb
int3
into
adc
mov
fbstp
mov
mov
movsl
push
mov
mov
je
mov
mull
imul
shrl
cmc
and
and
sub
enter
pop
pusha
xor
adc
call
popa
cmp
sarb
aam
push
fwait
ja
mov
lods
or
cmpb
jo
adc
pop
ljmp
inc
sbb
jns
in
inc
jl
pop
in
outsl
inc
out
or
inc
or
xchg
js
mov
stos
test
dec
mov
faddl
cs
push
stos
add
in
adc
mov
mov
cmp
test
adc
bound
and
xor
ljmp
and
stos
dec
stos
cmp
pop
fs
jp
cmp
stc
mov
loopne
cmp
and
lods
pop
aaa
xor
fisttpll
outsl
push
pop
push
loope
mov
jmp
push
mov
pop
stos
push
loop
call
dec
shlb
xchg
jecxz
or
cmpl
popa
adc
inc
movsb
gs
shl
shll
or
aam
add
sahf
or
xchg
nop
mov
fadd
out
jbe
or
fwait
pop
or
push
mov
pushf
popl
mov
sbb
pop
adc
subb
lds
or
adc
movsb
and
lret
lret
mov
cli
lods
imul
adcb
sbb
movsb
mov
jecxz
fidivrs
cmp
ficomps
int3
xchg
and
push
sbb
push
mov
push
xor
lock
in
je
insb
xor
and
rolb
pop
add
dec
pop
jne
or
lret
jno
jnp
scas
arpl
insb
gs
mov
ss
mov
push
jo
movsb
rolb
orb
int3
fs
iret
fisubl
jge
sbb
mov
jl
mov
xchg
sub
cmp
and
or
mov
mov
mov
lret
xor
lock
lahf
mov
maxps
mov
or
fisubrs
lock
lahf
adc
xchg
cmp
cmp
lcall
divl
ss
mov
fdivl
imul
orl
lds
hlt
sub
dec
mov
cli
adc
repnz
js
es
scas
icebp
push
out
test
notb
xchg
lahf
push
ds
out
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
jmp
repz
mov
pop
pop
lods
push
sbb
int
adc
out
sbb
call
sbb
movsl
cmp
jne
mov
movsb
repnz
xor
sbb
frstor
cmp
lods
ss
push
pop
shll
int3
fmuls
pop
or
mov
mov
jo
adc
or
movsb
mov
gs
test
test
clc
sahf
jmp
scas
mov
mov
and
test
and
or
cmp
add
daa
jle
aas
aam
test
mov
rcrl
sub
mov
pop
push
adc
icebp
mov
sub
adc
jg
sbb
lret
push
int3
mov
sbb
sub
jno
jmp
psrlw
test
add
and
adc
pop
repnz
pop
jbe
je
mov
push
inc
imul
call
push
fldl
sbb
mov
push
cmpsb
ljmp
fmull
jb
icebp
push
dec
jge
rorb
jo
mov
fwait
hlt
loopne
jne
cmp
or
aaa
ret
inc
push
add
xor
xchg
test
ja
inc
and
push
jmp
int
sub
jno
mov
mov
enter
cmpsb
mov
sbb
jae
add
sbb
pop
mov
rclb
imul
sub
cmpsl
pop
dec
jge
jnp
in
js
cld
imul
or
pop
or
orl
push
cmc
pop
fwait
outsb
push
mov
imull
mov
mov
sbb
lcall
ret
ret
mov
and
lcall
out
cwtl
movsb
ret
dec
je
insl
dec
adc
pop
roll
mov
sub
sbb
lods
jne
xchg
mov
call
pop
mov
in
ja
add
rep
pop
and
lock
pop
lret
sbb
inc
mov
add
inc
dec
xlat
in
or
dec
stc
and
enter
lods
fcmovbe
xlat
inc
test
cwtl
sbb
sbb
hlt
mov
movsb
mov
je
daa
pop
popa
xchg
jl
sahf
mov
aad
sbb
dec
sub
jnp
xchg
mov
loopne
xchg
jb
and
sbb
enter
bound
roll
decl
push
xor
mov
push
inc
fbstp
jno
inc
mov
icebp
mov
ds
test
inc
fwait
aaa
in
lds
mov
loope
mov
xchg
clc
mov
dec
test
inc
inc
mov
sub
mov
lds
insb
xrelease
sbbl
rcl
xor
inc
enter
lea
enter
scas
mov
jno
pop
andl
and
jne
push
in
pop
lret
mov
dec
and
inc
pop
xacquire
or
mov
sub
or
or
out
mov
add
pop
and
mov
ljmp
pop
cmp
sti
inc
mov
jne
push
repnz
imulb
cmp
and
add
incb
inc
add
scas
dec
jnp
mov
add
push
in
lods
jge
lcall
mov
fidivs
jo
dec
and
xchg
xchg
pop
loopne
adc
cwtl
out
fs
adc
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
jmp
mov
push
jle,pt
jo
push
test
adc
adc
adc
xor
mov
cld
insl
jle
addr16
insb
mov
adc
int
fadd
cmpl
mov
fisttpll
xchg
std
ja
sahf
mov
push
xor
in
in
jg
ljmp
xchg
sbb
mov
lret
data16
mov
clc
loopne
xorb
pusha
jb
cmp
or
inc
ret
jnp
cmpsl
or
cli
pop
ret
jno
fmull
outsl
pop
mov
lret
cmpsb
pop
dec
xchg
imul
push
sub
clc
sub
pop
push
mov
loop
rolb
sub
les
jp
leave
or
or
mov
cltd
std
mov
adc
fnstcw
push
xorl
push
faddl
dec
xchg
inc
dec
fildl
gs
push
add
and
jbe
xchg
loope
or
xchg
test
in
cmp
xor
clc
sub
mov
pop
xchg
int3
push
xchg
mov
ret
int3
adc
movsb
cmpsl
push
mov
cltd
ljmp
cmp
shl
inc
mov
push
ds
movb
mov
cmp
sub
or
xchg
jbe
push
cmp
int3
fdivl
mov
and
adc
mov
and
pop
cmpsl
dec
xchg
sub
push
cmp
lahf
and
in
gs
sub
test
shlb
addr16
es
movsb
pop
popl
imul
ret
insl
and
leave
mov
xchg
mov
sub
sub
lcall
pop
push
xor
cmpsl
es
sub
sbb
fnstsw
test
stc
bound
sbb
fcompl
insb
adc
roll
inc
fs
pop
push
repnz
sub
popf
or
cmc
or
sub
mov
cmp
xlat
add
inc
cmc
mov
movsb
inc
jmp
cli
jb
cmpl
mov
jge
add
pop
lcall
xchg
daa
sbb
xchg
push
loop
add
out
add
or
pop
add
push
mov
jle
cwtl
jne
add
repz
dec
std
cmp
xor
dec
ljmp
xchg
test
mov
mov
add
xcrypt-cfb
jle
popf
daa
cmp
inc
js
push
outsb
pop
xchg
fiadds
in
pop
xchg
sub
mov
cltd
ret
les
test
sbb
sub
aad
push
fcomps
jbe
shlb
loop
or
movsl
pop
adc
cmp
inc
movsl
dec
pop
jle
mov
repnz
bound
inc
in
std
les
adc
out
inc
js
adc
scas
outsb
test
cmp
rcrb
xchg
lcall
sbb
jl
push
inc
push
sub
sbb
adc
xor
aam
or
jecxz
or
testl
mov
int
jecxz
xchg
sub
loop
and
xor
mov
movl
fnstcw
jmp
sub
dec
mov
mov
cli
movsb
push
bnd
xchg
mov
push
clc
ss
imul
mov
lret
sbb
insb
and
add
out
pop
cmp
xchg
sti
lock
filds
mov
xor
pop
mov
ldmxcsr
test
or
sbb
mov
dec
or
into
testb
inc
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
sbb
sbb
out
stos
pop
sbb
stos
je
adc
int
adc
dec
ds
cmp
or
mov
test
xchg
dec
movl
sub
mov
sub
hlt
mov
in
les
mov
jg
loopne
icebp
shrb
adc
mov
jne
shl
test
jbe
adc
ljmp
imulb
std
jecxz
mov
push
pushf
in
mov
xchg
pop
mov
or
jns
hlt
jb
xor
sub
pop
jle
jge
daa
leave
mov
jle
mov
faddl
sub
inc
inc
movsb
aas
lret
jge
jle
cmp
dec
pop
out
lea
rol
xlat
pop
cmp
fnsave
ja
or
inc
push
nop
pop
cmpsl
push
addr16
adc
movsl
call
out
jmp
test
fsubs
push
mov
imul
jnp
sbb
das
repz
popf
mov
in
mov
sbb
xor
xchg
push
lahf
lds
cmc
jmp
xchg
jno
jb
mov
cmp
mov
inc
jno
jno
cmp
in
inc
xor
jns
add
and
jl
push
test
aaa
adc
mov
lods
push
pusha
mov
imulb
cmc
jecxz
scas
sub
or
mov
adc
push
mov
inc
mov
xchg
sub
jg
jns
dec
push
pop
sub
pushw
lcall
cwtl
sbb
inc
xor
jne
in
or
les
dec
cmp
stc
xor
mov
notl
dec
loope
cmpsl
and
cmp
jae
je
push
mov
mov
in
enter
push
iret
mov
inc
mov
test
push
cs
cmp
sti
adc
mov
sbb
pop
mov
loopne
jmp
dec
sbb
push
dec
mov
stc
inc
xor
jb
cmp
mov
jb
cmp
sbb
xor
maxps
mov
lahf
or
mov
pusha
test
out
leave
popa
inc
daa
inc
sbb
mov
insl
popa
mov
ljmp
push
loopne
push
mov
jb
pop
vcvttss2si
jne
scas
iret
inc
mov
push
sbb
rcrl
mov
mov
popa
mov
daa
pop
test
sub
push
inc
pop
adc
add
jnp
stos
mov
loop
mov
mov
jecxz
ljmp
roll
push
loop
ja
dec
sub
dec
sbb
adc
push
sbb
addr16
add
movsb
or
jge
and
lods
mov
mov
dec
inc
loop
jg
in
jno
test
iret
enter
ret
mov
sub
loopne
lock
addb
push
cmp
bound
inc
in
mov
pop
add
pop
insl
ficoms
mov
jle
mov
push
dec
js
mov
shr
pusha
adc
dec
not
ficomps
sub
push
lds
push
push
push
fimuls
movsb
fildll
sbb
sub
repnz
mov
or
mov
jl
fs
sahf
inc
adcl
sbb
jecxz
pusha
cmp
pop
pop
lret
adc
cmpsb
repnz
adc
jecxz
mov
aaa
add
int3
aas
xchg
mov
repnz
cmp
fcomps
and
icebp
jp
cmc
hlt
pop
push
add
movsl
imul
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
jmp
adc
jmp
repnz
ret
push
xorb
sahf
adc
int
adc
outsl
stos
cltd
loopne
test
aam
jae
mov
lods
adcl
sub
or
add
icebp
mov
in
or
dec
adc
mov
sub
ja
mov
jno
mov
adc
loopne
out
je
push
insb
in
mov
adc
and
mov
mov
pop
cmp
andl
inc
jl
fnstsw
add
xchg
and
add
addl
and
xor
jg
push
inc
or
in
out
mov
push
and
cmp
dec
cmp
jb
mov
adc
jno
sub
outsl
sub
jle
xchg
xchg
cmp
cmp
mov
jnp
xor
cltd
jo
pop
jbe
nop
ss
and
sbb
cld
xchg
xor
inc
xlat
jno
push
cmp
inc
push
out
inc
adc
xor
lret
leave
cmp
xchg
jne
hlt
xchg
mov
adc
stos
popa
adc
dec
fildll
outsl
aam
jnp
lahf
inc
jnp
cmpsl
jl
push
adc
cmp
sub
popf
hlt
inc
stc
pop
inc
movsb
test
in
dec
xchg
fnstenv
xor
mov
adc
mov
pop
push
add
xchg
imul
mulps
xor
psubq
icebp
and
inc
cmp
dec
bnd
ljmp
arpl
xchg
pop
or
and
sub
sahf
shl
mov
xor
rcrb
ja
lods
lock
iret
pop
pop
cmp
movsb
fstp
dec
jo
sbb
into
mov
lods
lcall
xchg
push
aas
jle
mov
mov
adc
mov
cwtl
mov
push
inc
cmc
je
inc
mov
mov
inc
mov
js
cmp
lock
push
jle
jmp
pop
xchg
cmpsl
iret
addb
jbe
loop
sub
cmp
cmpsl
addr16
pop
sahf
mov
add
insb
mov
push
imul
lret
mov
enter
jmp
fisubl
leave
dec
inc
daa
mov
pop
mov
adc
pusha
inc
addb
mov
outsl
jb
outsl
cmp
mov
test
jmp
inc
inc
subl
outsb
out
sub
sub
test
sub
test
or
and
int
inc
or
cmp
push
je
mov
into
call
pusha
fs
mov
or
in
popa
inc
imul
cmp
mov
dec
inc
add
sub
lahf
ss
dec
mov
pop
push
jbe
push
call
inc
xchg
out
push
addr16
add
xor
pop
sub
shll
pusha
mov
repnz
and
mov
sub
aas
sub
cmp
out
or
cmp
mov
xlat
les
and
push
popf
lock
aas
ret
mov
dec
fidivl
mov
or
clc
fistpll
lock
cmc
jmp
cmc
stos
rorb
inc
push
dec
mov
hlt
stos
leave
mov
ret
push
xchg
ret
out
mov
jecxz
xor
push
stos
addr16
and
pop
push
fldl
add
add
aam
mov
cmp
fwait
add
mov
mov
xor
xor
xor
mov
mov
jmp
mov
jmp
or
jge
pop
push
dec
cltd
cmc
leave
lcall
xchg
adc
int
adc
pop
jp
out
xor
fsubrl
iret
dec
nop
insb
js
inc
jle
mov
je
popa
mov
pop
repz
ss
in
sbb
pop
rep
stos
push
ja
ret
mov
adc
sti
jp
dec
loopne
xchg
sahf
call
dec
xor
adc
testw
add
jmp
repnz
lcall
testb
adc
xor
cld
leave
adc
push
icebp
push
dec
adc
lret
lcall
cwtl
cltd
push
mulb
negb
pop
pop
int
arpl
sub
lahf
pop
xor
pop
divb
push
es
shrb
or
das
jl
or
inc
stos
pusha
test
push
mov
pop
cwtl
adc
stc
leave
roll
add
cmp
call
mov
jno
lret
in
mov
insl
ror
jo
and
in
stc
leave
stos
cmp
negb
push
push
pop
out
test
in
xor
jg
sbb
into
push
adc
adc
and
out
mov
mov
imul
adc
testl
jnp
xchg
sub
repnz
mov
sub
sbb
sub
xor
mov
les
out
sub
stc
mov
aaa
fwait
pop
aaa
dec
aad
movsl
fcmovnbe
sub
out
es
into
mov
sub
loop
sbb
mov
cli
mov
push
xlat
jno
pop
jne
outsl
mov
jbe
lahf
pop
sbb
ds
xchg
js
adc
xchg
sbb
sbb
sbb
add
mov
jl
pop
ljmp
xor
arpl
icebp
sbb
rolb
insb
jns
imul
out
mov
xchg
je
insb
xchg
ror
nop
fldenv
fildl
cmc
jg
ds
xor
pop
push
push
sbb
pop
cld
addl
mov
lahf
xchg
xchg
arpl
ss
dec
jmp
jecxz
lcall
pop
push
nop
jo
and
sub
and
sub
adc
xor
not
mov
and
cld
mov
pop
das
or
call
dec
mov
inc
jno
cltd
jae
xchg
out
loopne
fbld
scas
push
mov
fcomps
in
mov
cmp
xor
push
sbb
ficomps
loop
cmp
jl
pusha
stos
push
jbe
and
cmpsb
out
jl
mov
mov
mov
std
ljmp
jne
jb
sbb
cwtl
sbb
mov
jns
aaa
dec
dec
or
int
mov
inc
fwait
lcall
repnz
nop
sub
inc
loope
mov
sbb
data16
sbb
cmp
and
pop
cmpl
out
mov
je
xor
xor
fcmovnb
shlb
orl
addr16
pop
lret
imul
push
pop
cbtw
lret
lds
je
mov
jno
mov
xchg
movsb
sarb
test
add
mov
mov
xor
or
xchg
fidivl
adc
push
js
jl
hlt
sub
mov
mov
rol
fs
cmpl
add
dec
mov
add
test
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
jmp
stc
sub
xor
cmpb
adc
adc
das
scas
in
in
ret
into
adc
mov
push
fwait
jle
loope
mov
fiaddl
push
sub
sbb
stos
xchg
dec
push
stos
sub
je
call
popf
ret
rcrb
xchg
mov
add
je
lcall
pop
mov
ret
inc
cmc
or
and
aaa
mov
cmp
jns
xchg
in
mov
xor
cmp
call
ds
add
cmp
test
leave
cli
sbb
ja
or
call
addr16
popf
push
adc
stc
cmp
dec
mov
cmp
or
dec
cltd
cmp
add
add
imul
notl
pop
adc
popa
pop
cs
inc
fcomi
or
jno
adc
shll
test
pop
mov
xchg
sbb
push
loopne
pop
fdiv
or
dec
and
in
pushf
shl
push
addl
pop
or
dec
outsl
push
mov
shrb
inc
dec
ds
inc
in
ret
jb
popa
enter
imul
push
jp
inc
xchg
xor
out
mov
subb
push
add
adc
add
push
adc
sahf
push
out
fst
mov
push
mov
push
enter
push
jo
mov
cmp
lret
dec
mov
popf
loopne
add
leave
add
gs
jns
pop
inc
cmp
cld
lock
jb
mov
repz
outsb
pop
adc
mov
mov
arpl
cwtl
sbb
jge
adc
stos
push
inc
dec
jbe
leave
adcl
cmc
jno
popf
xorl
push
add
leave
int
nop
mov
out
inc
scas
das
add
insb
pushf
xor
movsl
push
pop
add
or
orl
rcrl
cmpsl
fldl2t
inc
pop
jmp
dec
adc
in
adc
vmread
inc
outsl
aaa
mov
dec
sbb
jb
sbb
adc
pop
mov
out
fwait
repz
push
shrl
fcom
hlt
std
xor
xchg
mov
mov
xor
popa
and
shr
sbb
mov
stos
mov
loopne
inc
into
pop
xlat
jmp
cmp
cs
cmp
xor
insb
sub
orl
icebp
test
lds
cmpsl
arpl
das
and
pop
imul
loopne
dec
fstpt
and
roll
and
test
lret
fdivrp
pop
out
inc
dec
cmp
int3
xor
les
movsl
es
imul
outsl
jno
cmp
pusha
addr16
ds
andb
cmp
mov
pushf
pop
fiadds
lcall
cmpsb
mov
push
mov
mov
inc
inc
xchg
xchg
pop
xchg
icebp
xor
lock
insb
inc
xchg
xchg
or
or
pusha
xchg
jb
lret
int3
dec
or
rol
xor
and
movsb
mov
inc
mov
iret
loop
sub
mov
rcrb
aam
jne
addr16
jnp
jo
mov
jecxz
and
adc
pusha
std
insl
push
pushf
mov
push
pop
pop
lods
push
and
mov
add
loope
pop
insl
fdiv
adc
mov
push
mov
incl
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
jmp
dec
popf
shll
pop
das
popf
ffreep
mov
mov
loopne
dec
test
adc
adc
adc
xlat
sbb
add
inc
fs
or
movl
adc
pop
pop
push
enter
arpl
jecxz
ret
inc
scas
xor
cmp
mov
out
es
dec
aas
fstps
loopne
gs
inc
aam
lea
shlb
mov
dec
inc
push
or
test
push
sahf
pop
nop
ss
push
jecxz
xor
aaa
or
dec
add
xor
pop
pop
cmp
push
ret
jo
xchg
outsl
adc
je
inc
dec
sbb
add
sub
xchg
xchg
test
xchg
sub
pop
and
dec
push
jbe
or
mov
xor
xchg
fcompl
sbb
mov
js
add
cmpsb
dec
imul
mov
icebp
call
cli
xchg
rcl
popf
mov
das
or
movsl
lds
mov
pop
jb
shrb
data16
dec
fstpl
add
xchg
and
mov
js
adc
adc
and
add
mov
mov
fsubp
and
jb
sub
stc
mov
mov
jne
cmp
outsb
inc
fistpll
jl
mov
ja
add
push
xor
movsl
rcll
cmc
push
jo
pop
push
fnstsw
in
gs
cmpsb
inc
mov
fs
repz
sub
push
movsl
dec
pop
cmc
imul
ret
jmp
pop
shll
leave
jmp
or
test
ljmp
in
xchg
pop
test
outsl
or
push
ffree
pop
add
sahf
and
xor
repz
dec
push
dec
push
psrlq
dec
jne
fmul
dec
ja
je
lods
data16
or
div
pop
int
leave
jmp
mov
dec
call
dec
adc
xchg
test
mov
int
add
fcomps
mov
lret
inc
or
cs
rep
stos
jmp
mov
in
pop
add
pop
ss
cmp
cwtl
popa
mull
js
loop
cs
sub
in
pop
jg
cmpb
pop
outsb
into
scas
lods
notl
cmp
sbb
pop
hlt
jb
push
outsl
mov
adc
cmp
cmp
cwtl
mov
push
les
les
and
dec
sub
add
rolb
mov
push
xor
jo
sbb
in
mov
fadd
in
dec
push
pushf
jle
es
jb
imul
test
popa
into
enter
push
pop
sub
or
stos
add
repnz
sbb
std
push
pop
js
and
push
adc
test
cmp
or
scas
push
cmp
pop
pop
lcall
and
push
xchg
test
icebp
das
mov
add
dec
daa
dec
stos
iret
jae
lret
dec
popf
pop
push
sbb
adc
push
pop
cwtl
notb
adc
push
scas
cs
or
dec
cs
mov
adc
fdivrs
xor
and
add
xchg
and
ss
in
add
xchg
sub
dec
shrl
imul
or
or
mov
sar
cs
outsl
in
push
sub
jae
inc
adc
or
movsb
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
imul
imul
std
mov
js
jl
adc
adc
adc
jo
loope
jno
pop
cs
fiaddl
jno
pushf
mov
jns
stc
cmp
test
sbb
add
cmp
xor
imulb
xlat
or
and
aas
in
cli
fcompl
mov
inc
outsb
scas
mov
sub
jbe
jle
dec
enter
pop
pop
leave
sub
scas
mov
aaa
stc
mov
insl
daa
pop
inc
add
xor
xor
pop
loopne
imul
jne
frstor
cmp
xor
xchg
jnp
mov
or
adc
jo
cmpsb
pop
pop
fistps
sub
fistpll
sbb
rorl
push
jg
xor
push
pop
push
inc
and
mov
mov
xor
inc
mov
maxps
movsl
idivl
push
shr
ja
icebp
aaa
out
stos
and
pop
fsubr
jb
ds
jo
hlt
sbb
sub
arpl
lock
inc
dec
pop
or
loope
jne
sti
xchg
rcl
sbbl
mov
in
and
mov
das
rclb
rorb
add
cmp
or
push
pop
mov
ljmp
ds
sarl
outsl
stos
repnz
xor
push
gs
xchg
mov
je
shrl
shr
jecxz
and
jge
mov
mov
add
pop
insl
mov
or
outsl
push
push
xchg
loope
rcrb
outsl
mov
lock
cwtl
xor
sub
in
add
in
xor
mov
push
shlb
movl
std
sub
loope
and
enter
xor
xor
sbb
sub
int3
imul
imul
lret
aam
jecxz
or
add
data16
jbe
loope
jne
jmp
pop
ds
clc
subb
mov
test
mov
into
dec
aaa
mov
es
fdivp
popf
mov
rcll
lds
ret
sub
cmp
imul
popa
dec
or
dec
scas
sbb
rcrl
xor
fdivp
inc
sub
in
add
and
or
mov
push
push
ret
lds
sub
insb
outsl
inc
gs
scas
jb
xchg
pop
adc
ror
push
and
loopne
xchg
cmp
adc
aad
clc
inc
dec
popa
ss
cwtl
lock
mov
xor
fcmovb
or
jmp
mov
mov
push
push
movsl
xchg
filds
xchg
xchg
xchg
xchg
leave
pushf
adc
mov
or
mov
pop
inc
and
sbbb
mov
shr
mov
push
outsb
bound
xchg
stc
lret
lret
mov
mov
inc
xchg
fcompl
ret
jbe,pn
cmp
cmpb
lcall
xor
sbb
sub
add
pop
mov
testl
sti
add
cli
cld
jmp
subl
fisubs
xor
decb
jmp
out
scas
sbb
push
sbb
jbe
rcrl
nop
inc
shlb
call
mov
mov
and
push
out
jne
mov
pop
aad
sub
pop
imul
fisttpll
jne
push
push
call
mov
jmp
xor
sbb
stos
sub
add
adc
adc
adc
jae
xchg
jno
in
jmp
test
cmp
int
push
mov
fdivr
lds
mov
ret
ja
add
in
mov
push
stos
enter
push
out
push
daa
pop
push
arpl
inc
ficompl
jl
out
hlt
shlb
outsb
mov
adc
out
add
test
int3
ret
iret
faddl
jge
aam
dec
arpl
xchg
in
mov
lds
ret
mov
and
cli
aam
ja
inc
out
xchg
mov
cwtl
inc
out
add
sub
and
mov
xor
push
mov
sahf
cli
fsub
mov
mov
outsl
rclb
ret
xlat
movsb
icebp
xchg
and
out
je
pop
lods
sbb
sbb
sbb
outsl
cmp
sti
loopne
mov
jge
mov
ret
mov
sar
stc
loop
les
xchg
jecxz
inc
adc
dec
mov
js
sub
inc
int
cwtl
adc
inc
jne
repnz
aaa
ss
push
adc
and
pushf
test
test
and
and
pop
pop
pop
push
imul
push
push
dec
dec
lea
pop
sub
xchg
pushf
scas
jmp
push
aas
hlt
pop
aam
dec
and
sub
xchg
pop
icebp
xor
jb
fdivp
jle
scas
jb
cmp
rcll
lds
sub
insl
incb
arpl
jnp
cmp
and
lcall
pop
push
sub
mov
test
shlb
jae
leave
or
hlt
cwtl
mov
loop
int3
xor
cmp
sarl
ret
call
js
pop
ja
push
jecxz
cmpsb
adc
push
aas
js
jb
adc
adc
pop
lret
jge
stc
mov
pop
in
and
and
xchg
cmpl
inc
lods
popf
jo
mov
out
ja
negl
scas
out
shrl
loopne
inc
add
fnstcw
addr16
mov
pop
dec
dec
adc
faddl
dec
mov
adc
aaa
and
stos
mov
pop
fs
shl
jle
pop
repnz
ficomps
ja
xor
ljmp
ss
sbb
and
sti
add
sbb
push
adc
cmp
mov
aam
inc
mov
sub
cmp
cmp
xor
das
ret
sub
aam
sbb
xor
fwait
inc
adc
jno
sub
sub
and
mov
mov
and
cmpsl
pushf
mov
jb
outsb
push
push
xor
inc
add
push
inc
mov
lahf
loop
push
fidivrl
nop
imul
out
push
std
inc
mov
mov
xchg
imul
lret
lret
gs
jle
stos
fnstcw
outsl
jl
insl
mov
lea
sbb
test
jne
ja
enter
jnp
pop
leave
xor
outsl
in
cli
out
mov
and
ljmp
lahf
out
hlt
cwtl
inc
pop
aas
jae
inc
adc
repz
mov
mov
pop
stc
test
ds
lods
pop
ja
in
imul
in
stos
enter
or
in
pushf
and
jge
pop
cmp
push
sahf
jg
out
jmp
addr16
dec
or
jg
mov
ja
mov
mov
mov
or
sbb
andl
shrd
jmp
ja
jle
sub
xchg
mov
dec
sbb
adc
int
adc
stc
inc
mov
push
adc
imul
inc
js
xchg
push
out
pop
stos
ss
in
mov
iret
ds
je
inc
aad
out
xor
ret
clc
sub
jg
dec
in
in
ret
mov
data16
mov
push
sub
fdivs
pop
dec
mov
and
mov
ficoml
in
bound
iret
xchg
fs
lret
jo
add
aam
sti
mov
add
jmp
sar
xorb
adc
xchg
out
rol
ret
insb
flds
or
pushl
ss
jbe
rclb
add
adc
jo
aam
or
pop
ja
pop
aam
jns
jb
push
adc
ret
fnsave
xchg
addr16
sbb
push
mov
mov
add
call
pop
sbb
cltd
add
fbld
dec
mov
fbld
sarl
aas
cmc
in
aad
adc
jge
arpl
push
sub
out
repz
les
add
out
push
dec
inc
add
and
mov
dec
movsb
insb
out
gs
jno
shrb
sbbl
mov
inc
push
xchg
adc
nop
hlt
insb
int3
ja
dec
popf
push
adc
mov
inc
cmp
sub
xchg
inc
sbb
in
into
add
cmp
fadd
mov
imul
adc
pop
aas
insl
adc
pop
sbb
jecxz
or
cltd
xor
out
dec
add
pop
adcb
xchg
pop
jnp
pop
mov
sti
ja
int3
mov
mov
push
inc
adc
cmp
fidivrl
inc
pop
sbb
and
cmp
adc
inc
and
sub
fs
bound
popa
lahf
in
imul
es
push
xchg
das
push
push
out
cmpsb
sub
pop
pop
sarl
dec
cs
imul
pop
lret
lods
inc
xchg
and
gs
or
mov
fstsw
adc
jmp
mov
mov
pop
pop
insl
cli
pop
mov
pop
xchg
aad
xchg
dec
hlt
mov
sub
das
push
sub
pushf
inc
add
in
movsb
je
adc
fmuls
fnstsw
add
aaa
lahf
mov
jmp
cwtl
lods
loope
xchg
inc
int
pop
pop
mov
fbstp
mov
cmc
lock
push
in
sbb
lea
sub
add
mov
cmp
xor
pop
add
sti
std
repz
rolb
mov
and
and
test
mov
repnz
adc
mov
stc
cli
pop
daa
out
pop
in
xor
mov
lcall
jo
mov
lock
gs
fisubrl
lods
sti
roll
and
ret
xchg
int
out
mov
test
push
xor
cwtl
pop
jne
out
roll
leave
out
stos
ficomps
sbb
sub
ljmp
rcrb
daa
cwtl
push
dec
xorl
test
xchg
sti
in
loop
insb
pop
mov
jge
cmpsl
xor
mov
mov
outsl
fcmovnu
inc
or
sbb
pop
mov
sbb
andb
out
inc
repnz
fidivs
outsl
or
xchg
shr
shr
xor
push
xor
mov
mov
mov
push
jmp
bnd
test
cmc
dec
mov
and
adc
int
adc
pop
pushl
pop
icebp
mov
outsl
xchg
mov
arpl
xchg
aas
mov
rorl
pop
xlat
sub
filds
adc
daa
mov
addl
jb
mov
imul
push
or
movsb
fsts
xor
in
rcl
div
sti
pop
aam
sub
je
inc
jg
inc
dec
cmp
int3
jg
iret
push
movsl
mov
pop
jae
jg
hlt
mov
int3
mov
rcrb
mov
jmp
sarl
insl
or
pop
sub
ds
shlb
mov
subb
xchg
insb
push
inc
lahf
addr16
sarb
mov
popa
adc
pop
rorb
scas
icebp
rol
push
or
sbb
jp
test
outsb
insb
cmp
mov
fcmovb
loopne
push
mov
xor
xchg
loopne
mov
mov
les
pop
xor
iret
cmpsl
subb
mov
cvtps2pi
mov
inc
arpl
call
pop
call
out
loope
xor
xorb
stos
aaa
call
pop
and
sbb
stc
je
adc
pop
dec
out
lahf
mov
test
cmpsb
xchg
jmp
mov
test
add
and
aaa
aaa
in
mov
std
in
xchg
cs
shlb
clc
outsl
xchg
bound
and
jp
or
push
inc
jns
xchg
divl
cmpsl
jle
inc
mov
stc
inc
lret
frstor
xchg
fsqrt
movsl
xor
dec
addr16
hlt
inc
dec
inc
je
mov
inc
dec
scas
mul
cld
cs
mov
mov
pop
cltd
pushf
aam
lods
js
mov
test
sti
ret
xchg
mov
mov
daa
mov
mov
xor
pop
sub
int
fwait
mov
bound
insb
dec
xchg
jecxz
nop
or
fwait
test
pushf
mov
adc
sub
lret
ret
mov
and
jae
push
mov
cmp
pop
daa
and
sub
pop
add
xchg
lret
lods
test
adc
mov
das
or
inc
rolb
jns
sub
cmp
xor
pop
cmp
xchg
cmp
xor
ds
cs
int
sbb
cmp
mov
test
mov
mov
dec
push
lods
jne
in
shr
jge
add
xor
inc
jns
push
mov
sbb
je
jp
or
sbb
dec
loopne
pop
movsb
sub
shr
sbb
add
in
push
sbb
imul
shlb
test
movsb
xor
dec
mul
and
clc
es
aam
stos
jecxz
dec
nop
idiv
stos
adc
aas
and
cmpsl
mov
cmp
sbbb
dec
cltd
sbb
das
sbb
push
aad
xchg
ret
pop
ss
mov
or
inc
loope
or
and
popf
xor
adc
jmp
in
add
pusha
mov
dec
call
shl
pop
jae
jecxz
sub
dec
enter
pop
sahf
es
jl
outsl
fimuls
add
inc
in
and
push
inc
sahf
cwtl
popa
movsl
mov
cmpsb
popa
sbb
add
fistl
mov
mov
inc
pop
mov
inc
enter
add
jg
jno
hlt
pop
xchg
add
add
jbe
arpl
mov
imul
fcomps
push
sbb
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
sbbl
jmp
test
sub
sub
adc
lods
fisubs
adc
adc
lock
push
jns
push
lods
insb
jp
push
pop
lock
into
mov
dec
push
fisubrl
cli
popf
ss
jle
call
cld
pop
ret
mov
push
jmp
test
ds
out
repz
fildl
bnd
sbbb
dec
add
jne
es
shl
jnp
divl
daa
push
or
nopl
dec
mov
int
and
push
lds
cmpl
les
mov
sub
and
jmp
mov
pop
mov
adc
cmp
cmp
xchg
mov
cmp
cld
mov
mov
fstl
jp
pop
sahf
test
pop
dec
and
add
or
jle
movsb
mov
adc
dec
adc
and
int3
les
xchg
aaa
scas
mov
loope
mov
nop
push
mov
push
nop
inc
add
lret
mov
add
push
push
sub
cmp
jmp
mov
push
cmp
or
mov
fdivr
and
inc
insb
repnz
fisubrl
or
dec
mov
inc
mov
push
notl
dec
pop
nop
nop
or
pop
add
clc
push
int3
cmp
arpl
inc
adc
fwait
das
jp
lods
lock
mov
mov
in
scas
push
lret
subl
add
imul
xor
inc
popa
out
dec
cmpsl
or
hlt
push
stos
jp
in
and
lret
add
and
and
push
test
mov
hlt
pop
or
xchg
sbb
pop
stc
andb
pushf
xchg
push
add
xlat
out
fs
dec
xchg
sbb
push
add
repz
pusha
int3
dec
xor
mov
push
jnp
call
xor
inc
popf
cmp
xor
clc
fsubs
and
call
shll
cmp
out
dec
fadds
inc
mov
sbb
pop
ret
sahf
xor
test
scas
inc
push
in
scas
lods
lret
in
adc
jae
in
push
add
mov
push
stos
ret
enter
xlat
leave
mov
std
ss
in
ljmp
aas
push
and
loope
lea
cwtl
imul
fisttps
lcall
loope
inc
xor
test
mov
movsb
or
jnp
sti
jmp
stos
inc
mov
std
xor
mov
arpl
push
jbe
aas
or
out
or
push
or
in
test
call
or
in
fwait
dec
aad
lret
imul
xchg
stc
pusha
jle
mov
fcoms
push
push
sbb
cmp
negl
in
cmc
xchg
mov
js
sub
aam
in
xchg
jnp
std
in
xlat
cmp
mov
fisttps
mov
pop
imul
push
clc
repz
lods
hlt
adc
loope
jo
sbb
mov
xlat
pop
insl
pop
pushf
dec
push
sub
nop
pop
cmpsb
scas
adc
mov
loope
imulb
inc
dec
inc
out
mov
pop
adc
ds
or
sub
jp
addr16
je
insb
dec
pushf
icebp
push
xchg
lods
inc
jl
sarl
xor
jg
sub
aad
ret
sbb
ret
aam
scas
movsl
pop
xor
add
bound
jae
inc
xor
dec
sbb
ljmp
orb
jg
mov
jmp
jno
jecxz
cwtl
lahf
loop
mov
jne
lods
rol
add
int
add
shr
ret
movzwl
sub
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
add
movl
or
mov
mov
cmpl
mov
mov
mov
movl
jmp
movl
movl
ja
pushl
push
push
pushl
push
pushl
pushl
call
xor
adc
andl
adc
sub
add
addl
movl
cmpl
mov
mov
movl
jmp
movl
mov
jne
call
or
movzbl
sub
mov
and
or
mov
or
xor
mov
or
movl
adc
movl
sub
movl
push
movl
xorl
movl
and
push
sub
movl
sbb
mov
andl
mov
push
push
addl
push
call
xor
mov
mov
movl
push
movl
or
adcl
push
or
xor
xor
push
andl
push
call
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
not
je
push
pushl
push
pushl
push
pushl
pushl
pushl
push
pushl
push
push
pushl
call
orl
notl
adc
mov
sbb
add
and
inc
mov
addl
push
orl
push
addl
push
push
decl
call
cmpl
movl
mov
mov
jmp
movl
jne
pushl
push
call
add
add
adc
mov
xor
add
sub
or
mov
and
mov
mov
or
cmpl
movzwl
movl
movl
jmp
movl
movl
jae
pushl
call
adc
xor
xor
adc
orl
add
mov
add
mov
subl
movl
mov
xor
movl
mov
xor
add
sub
and
movl
adcl
movl
jmp
fcmovne
mov
test
push
jbe
lods
adc
adc
adc
adc
arpl
xor
push
push
in
sub
data16
aad
mov
or
stc
lds
push
push
sub
push
mov
loop
xchg
sbb
imul
out
in
gs
cmp
xor
push
lahf
xchg
jne
imul
out
retw
jnp
xchg
push
sbb
aam
xchg
mov
xor
jp
test
pop
aaa
cmpsl
outsb
push
test
xor
shl
insb
or
and
push
xor
and
and
pusha
dec
dec
hlt
mov
fdivs
pop
enter
adc
adc
jl
dec
or
push
adc
popa
ss
adc
out
xlat
pop
mov
loope
repnz
or
mov
and
clc
xor
mov
inc
xchg
test
popf
pusha
or
xor
add
lods
mov
stos
mov
mov
sbb
dec
lock
daa
mov
aad
jnp
inc
mov
xchg
js
sbbb
lahf
out
orb
xor
outsb
sarb
insl
int
movsl
push
adc
push
pop
das
lods
in
sub
add
push
jno
je
pop
or
fnsave
icebp
idivb
iret
shll
mov
jle
stos
mov
jns
rcrl
in
outsb
xchg
sub
mov
loopne
pop
adc
jns
mov
pop
rclb
adc
mov
jae
test
es
sub
inc
mov
ja
loopne
repnz
or
jo
push
or
push
pop
les
and
rcrb
arpl
outsl
cmp
inc
fwait
add
xchg
push
loope
sbb
xlat
jne
lret
pop
xchg
xchg
fwait
aad
cmp
fsts
mov
aad
test
ds
jo
and
negl
imul
aad
jecxz
lahf
popl
push
fistps
pop
cs
lcall
sub
push
xor
pop
xchg
pop
push
inc
mov
inc
in
daa
pusha
jne
loop
push
xor
mov
in
jl
adc
repz
pop
repz
int3
dec
movsl
rcll
or
lock
addr16
mov
into
pop
push
jae
adc
jecxz
ret
xor
inc
mov
xchg
in
mov
scas
lret
jae
addr16
outsb
mov
sub
aas
mov
dec
imul
data16
popf
sar
addb
cmp
in
mov
add
cmp
cli
add
loope
aam
loopne
movsb
dec
movswl
adc
xchg
out
jno
iret
pop
mov
out
inc
int
insl
in
mov
outsl
and
lahf
call
cmpsb
cmpb
jg
movsb
push
stos
sub
inc
out
adc
add
mov
inc
dec
xor
mov
sahf
sarb
push
cmp
adc
imul
sub
adc
pop
jno
hlt
test
sahf
es
mov
or
out
gs
fcmove
cmovae
addl
push
ljmp
adc
jge
push
pop
fldenv
arpl
nop
sub
inc
repnz
push
popa
sub
mov
inc
push
mov
fwait
push
popf
xchg
xor
mov
mov
leave
dec
cmp
loopne
leave
ljmp
shrb
subl
outsl
sbb
pop
xor
iret
mov
test
pushf
ret
mov
in
cmpsl
stc
sarl
mov
jae
push
pop
shl
add
fistpl
shll
data16
xor
movl
cmpl
not
mov
mov
movl
jmp
movl
mov
jg
pushl
pushl
call
add
orl
sub
adc
movzwl
add
mov
mov
sbb
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
jmp
in
mov
sbb
sub
jle
pop
idivl
push
adc
xor
adc
mov
jmp
je
pop
icebp
and
aas
fwait
imul
or
pop
cltd
push
inc
push
xchg
and
lret
push
lock
nop
push
pop
jo
ficomps
call
lock
call
jl
inc
stos
stos
push
sub
ficoml
inc
adc
sub
bound
mov
pop
pushf
pop
repnz
loopne
cmp
mov
je
fsubs
lock
jne
mov
cmp
mov
and
movsb
cmp
loopne
sub
nop
or
outsl
fstpt
add
es
dec
das
xchg
test
xchg
sbb
ss
into
dec
pop
and
sub
push
add
push
mov
cmp
ret
mov
gs
inc
adc
std
cmpb
pop
push
dec
out
sbb
aam
pop
cmp
sub
mov
fidivrl
jl
mov
xchg
into
fwait
ret
pushf
pushf
cmp
hlt
fidivrs
jns
loopne
jp
xor
lods
mov
lcall
outsb
jno
xor
inc
jp
mov
push
incl
test
jnp
jns
jge
pop
sbb
or
jno
movhps
sti
adc
repz
or
or
pop
in
xchg
mov
mov
lahf
cmp
inc
test
xor
push
sbb
pop
out
sbbb
mov
jns
clc
out
clc
sub
pop
push
shl
xlat
insb
hlt
mov
mulps
bound
repz
popa
mov
iret
pop
scas
sahf
lcall
or
out
adc
cwtl
inc
sub
aaa
movsb
jp
adc
jecxz
push
adc
xor
jle
aad
fldl
push
jp
add
mov
mov
push
pop
lods
xor
es
add
pop
repz
add
loopne
sbb
repz
adc
sbb
lods
ds
daa
repnz
xchg
jecxz
leave
imulb
lds
imul
xor
outsb
jmp
test
push
cli
aad
cli
mov
in
dec
or
cmp
xchg
or
and
jl
add
movsl
outsl
in
push
jl
clc
or
fistps
cltd
cs
inc
and
adc
sahf
inc
xor
shrb
adc
mov
mov
cmp
scas
or
andb
mov
cmp
xchg
fmuls
arpl
jnp
adc
bound
arpl
test
xchg
loope
xchg
adc
mov
inc
clc
adc
xchg
cmpsl
mov
push
movsl
push
aas
loope
int3
shrb
jle
push
inc
inc
sbb
cmp
fistpl
mov
inc
dec
inc
add
stos
push
cwtl
add
push
dec
arpl
mov
pop
in
aaa
add
mov
mov
push
jno
out
cmpsl
or
xchg
or
movsl
mov
in
cmp
push
movl
lods
jne
mov
sub
sti
repnz
add
addr16
pop
cltd
mov
or
mov
cmp
push
jmp
xor
les
sbb
add
fimuls
les
inc
cld
mov
inc
xchg
and
shll
std
push
popa
shll
jg
dec
hlt
dec
jl
sahf
pop
ds
nop
xchg
in
fsubl
test
cmpsl
add
fwait
push
rcrl
stc
mov
jnp
pop
std
mov
arpl
es
cltd
xor
pop
popa
mov
inc
and
daa
ss
fldpi
leave
add
notb
cmp
imull
xchg
adc
jbe
lock
test
int3
mov
fnsave
sub
mov
adc
addl
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
jmp
enter
pop
xor
push
push
ljmp
xor
adc
mov
out
xor
adc
mov
nop
sub
push
fs
inc
iret
sar
inc
in
out
jbe
repnz
push
repz
sub
cwtl
insb
in
in
pop
mov
shlb
adc
int3
test
jle
dec
sarb
call
jmp
sbb
sub
in
sarb
outsl
cmp
fcoml
or
add
je
pusha
inc
cmp
imulb
enter
lret
mov
lcall
xor
popa
or
xchg
adc
dec
jno
adc
mov
sub
inc
jo
xor
outsb
cmc
jnp
aam
movsb
xor
mov
sahf
cld
pop
into
pop
mov
jbe
lods
sub
cmp
hlt
test
mov
cmp
rorb
cltd
addr16
mov
jecxz
push
insl
das
mov
pop
ds
dec
and
lret
rorb
insl
sub
fisttps
fwait
xchg
add
push
stos
lods
arpl
fsts
rcrb
mov
mov
mov
cld
push
divl
movsb
cli
xor
inc
fsin
mov
inc
lds
ja
jle
popf
lea
jo
or
lods
scas
arpl
jnp
sub
popf
fmuls
scas
add
xor
or
bound
popf
dec
dec
pop
call
push
std
out
mov
fists
fmul
push
imul
fstl
fiadds
or
arpl
pop
sub
int
int
pop
push
cmp
xchg
push
pop
jl
popa
or
push
sbb
push
jge
push
cmp
add
or
in
lock
loop
jmp
add
push
lcall
andl
pop
inc
test
decb
popa
rcll
pushl
dec
out
push
mov
out
or
sbb
inc
and
int3
test
cmp
inc
inc
roll
sub
fs
fstpt
pusha
ds
cmp
xlat
sub
inc
mov
lock
rorb
adc
pusha
add
ss
push
pushf
adc
fsubr
shrb
mov
mov
pusha
and
push
fcompl
push
mov
sub
das
fists
call
xchg
push
mov
setno
dec
and
mov
imul
push
pop
xchg
in
push
insl
insb
pushf
jmp
mov
les
cmp
subb
dec
movsl
xchg
repnz
jns
jb
jnp
cmp
fs
xor
pop
ljmp
out
jg
mov
xor
jge
mov
mov
and
fwait
in
or
push
xchg
neg
mov
cs
xchg
pop
pop
inc
sbb
movsb
cld
pop
xchg
std
mov
and
cmp
shrl
fwait
sbb
es
fldt
pop
sbb
mov
xchg
mov
out
repnz
mov
dec
mov
hlt
stc
repnz
in
iret
add
test
pop
lods
and
sbb
sub
lods
mov
bound
pushf
lret
xchg
insl
lods
add
pusha
push
and
xlat
sbbb
dec
into
shlb
xchg
jne
mov
fimull
call
sbb
cmc
mov
das
sub
lods
es
aad
ja
fisubrl
cmp
mov
scas
roll
js
adcl
mov
pop
push
xlat
out
lods
iret
mov
movsl
js
sub
add
add
push
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
jmp
pushl
and
push
mov
gs
adc
xor
adc
cli
or
jno
inc
and
xor
push
cmp
pop
pop
jg
push
push
insl
cmp
xchg
adc
mov
stos
jnp
jns
jmp
scas
mov
sbb
jbe
fbld
pop
repnz
inc
xor
sbb
add
dec
xchg
and
inc
cmp
scas
rcrb
orl
lods
aas
scas
fidivrl
cld
cmp
cld
push
das
arpl
push
sub
jno
fs
int
sub
fcmovne
jl
adc
inc
dec
lea
repnz
or
push
fs
xor
inc
outsb
je
dec
dec
sahf
gs
or
cmpsb
fsts
fwait
inc
sbb
and
push
imul
xor
mov
outsb
add
pop
xchg
xor
adc
xchg
fildll
loope
xor
sti
arpl
movsl
jge
push
mov
dec
test
adc
ja
and
sbb
push
das
mov
cwtl
call
pop
pop
inc
mov
test
jl
dec
enter
movsl
arpl
cmp
sbb
and
and
add
dec
xchg
pop
pushf
adc
ljmp
das
sbb
leave
mov
es
testb
movsl
outsl
aam
gs
int3
fs
loopne
add
xor
push
and
cmp
in
cwtl
pop
or
call
pop
ja
loope
mov
cltd
fdivrs
lret
int3
xor
inc
iret
mov
jae
push
jbe
xchg
repz
sub
xchg
lahf
and
stos
mov
or
jl
push
dec
push
push
adc
faddp
call
or
jns
movsl
lds
and
into
adc
pop
or
negl
xor
repnz
lock
push
xchg
enter
xchg
cli
jb
xchg
jle
jmp
inc
mov
movsb
xchg
in
or
jle
and
xchg
bnd
ds
jb
iret
rorl
les
lcall
sbb
push
mov
pop
loop
icebp
push
je
push
icebp
hlt
cmp
addr16
jecxz
fistpl
push
and
pop
lea
push
mov
gs
jl
jg
xchg
arpl
out
hlt
lds
call
cli
dec
scas
jae
stos
push
xor
ljmp
cmp
enter
mov
repnz
and
inc
mov
mov
or
xchg
sub
lcall
mov
setns
and
cmp
xor
pushf
imul
dec
pop
andl
xchg
arpl
sbb
dec
clc
sub
mov
scas
mov
lahf
push
sbb
pusha
push
pop
testl
out
dec
push
inc
out
rcrb
pusha
mov
dec
and
dec
inc
loopne
push
cld
or
out
xor
sub
and
add
dec
pop
ds
fstpt
nop
jg
xchg
outsl
or
sti
mov
jmp
mov
ds
cld
pop
sbb
popf
cmp
push
add
ret
fstps
sbb
xchg
loope
xlat
ss
outsb
movsl
cli
xor
test
push
decl
jo
sub
jb
and
cltd
stos
mov
mov
inc
ds
mov
mov
sbb
or
inc
dec
filds
icebp
ret
fisttpll
mov
ja
adc
mov
jmp
mov
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
jmp
adcl
dec
in
enter
cmpb
adc
adc
pop
loopne
mov
pop
mov
inc
jmp
cld
jge
gs
inc
insb
in
out
lods
push
icebp
pop
push
gs
iret
addl
xor
pushf
cs
push
cwtl
xor
gs
mov
add
sbb
xchg
xchg
shll
aam
push
imul
dec
inc
mov
mov
das
sub
lcall
mov
aad
mov
popf
adc
push
sbb
push
out
rcll
add
mov
rcrl
pop
xchg
das
inc
adc
aaa
adc
into
cld
fiaddl
int3
out
cmp
testb
test
add
fdivl
push
stos
xchg
pusha
shlb
pop
jne
mov
xchg
sbb
push
rcl
ss
or
pop
cmp
cmp
movsb
sbb
sbb
add
ret
data16
or
xor
ss
or
cwtl
dec
jge
inc
fsub
jns
lret
jp
inc
mov
sbb
inc
push
lret
sub
mov
cltd
xchg
or
insl
fwait
mov
sub
xor
inc
lds
xor
insl
mov
adc
das
cmc
push
iret
and
sahf
in
outsb
sbb
mov
xor
je
icebp
repz
mov
into
xorb
in
mov
fs
cmp
mov
mov
test
xlat
inc
sti
out
loop
into
test
inc
push
cmp
add
out
fisttps
mov
add
out
in
pushf
cmpsl
pop
push
fsub
or
sub
add
out
xor
sahf
jp
dec
sahf
dec
mov
push
loope
mov
or
jmp
add
and
rcll
int
jo
jp
mov
inc
lcall
add
add
ds
jp
lods
addl
sahf
sbb
sub
push
test
frstor
sub
add
mov
insl
sbb
push
jns
jnp
lods
sahf
jl
out
dec
jge
imul
mov
cmp
jp
cmpb
cmp
movsb
pushl
filds
pop
push
in
inc
add
cmp
mov
scas
into
insl
dec
ds
lcall
pop
rcrb
imul
jb
dec
xchg
push
out
ret
aam
in
fwait
xor
xchg
push
movsb
sub
xor
fimull
xor
addr16
clc
fildl
int3
dec
jge
jne
stc
xor
mov
pop
or
outsl
or
cltd
xchg
les
ljmp
and
xor
imul
push
jge
mov
adc
sub
aas
pop
lret
cmp
dec
fisttps
cmp
mov
inc
mov
jmp
movsb
mov
adc
sbb
aaa
push
shl
xchg
xchg
jmp
daa
or
in
repnz
xlat
push
wrmsr
inc
jbe
mov
fsubrl
push
lret
and
cmpsl
hlt
xchg
data16
test
mov
xor
je
in
push
mov
lea
aad
mov
popa
sub
push
movb
daa
jmp
sbb
jno
cmpsl
hlt
mov
inc
shr
mov
cmp
int3
fwait
inc
mov
aas
lods
scas
jmp
push
sbb
inc
add
cmp
jmp
scas
fiadds
ds
cmp
jp
mov
jle
and
pop
mov
sub
add
jecxz
je
idivl
jl
or
lret
mov
or
dec
sbb
xorl
inc
test
jbe
xchg
popf
sbb
aad
pop
loope
fsubl
repz
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
jmp
js
jb
sub
cmp
mov
mov
xor
adc
adc
adc
cmp
inc
sar
or
adc
xor
lods
mov
nop
jecxz
pop
xor
adc
pop
mov
xchg
push
pop
pop
enter
and
sub
cltd
sub
rorl
insl
aad
push
push
pop
pop
aaa
xchg
rcl
gs
and
mov
loop
daa
pop
push
outsl
movl
pop
addr16
leave
jl
test
jle
jbe
sub
aam
pop
push
mov
ret
mov
inc
xchg
cld
sar
mov
roll
adc
jl
cmc
call
mov
hlt
add
add
into
fcoms
out
sbb
push
add
and
arpl
adc
mov
cmp
pop
and
adcl
gs
or
or
sbb
stos
outsl
jecxz
or
iret
fadds
dec
inc
clc
jp
mov
mov
ljmp
daa
divl
int
psadbw
aad
or
jmp
scas
cmpsl
fwait
sbb
mov
incb
nop
pop
incl
push
inc
es
fbld
addl
sbb
stos
jge
mov
outsb
add
mov
mov
mov
sbb
pushf
xor
adc
loopne
dec
imul
popf
pop
push
pop
or
or
dec
push
and
jns
fmuls
xchg
inc
sub
in
sbb
and
jecxz
iret
es
movsl
mov
pop
stos
dec
pop
test
pop
inc
push
scas
out
imulb
mov
hlt
es
inc
jnp
repnz
pop
lods
inc
aaa
jae
ss
dec
push
loop
jmp
jg
jo
loope
data16
jne
adc
lret
lret
ss
or
cmpsb
sahf
sbb
adc
jmp
inc
mov
mov
bound
cwtl
xchg
stos
and
mov
cltd
or
mov
das
jg
add
imul
pop
cmp
es
cmp
sbb
push
je
xor
arpl
jae
nop
mov
aam
mov
inc
lock
lock
inc
shrl
out
or
out
fisttpll
cmp
stc
push
fsubrs
les
popf
xor
in
addr16
shr
inc
inc
pop
cmp
data16
add
sbb
nop
push
xchg
jbe
mov
insb
fdiv
or
push
xchg
outsl
cmpb
inc
cltd
and
scas
mov
xchg
out
insb
iret
cwtl
push
xor
pop
fabs
and
out
jae
mov
icebp
outsl
fcompl
das
mov
cmp
imul
mov
or
repz
fdivs
mov
outsl
insb
xlat
insb
lds
movsb
and
sub
mov
push
inc
xchg
mov
in
adc
arpl
sbb
fimull
shll
ret
xor
mov
cmp
cmp
fldenv
bswap
xchg
sti
mov
insl
or
in
mov
cwtl
cld
xor
jg
inc
lcall
add
mov
lods
je
clc
ja
jle
xlat
adc
lock
push
loope
cmc
sub
out
or
stos
shrl
pushf
sub
insb
ret
mov
stos
pop
mov
rorb
std
push
pop
cmp
xor
mov
inc
adc
mov
pusha
lock
xchg
bound
inc
and
es
or
fdiv
and
out
dec
pop
adc
jae
xor
aam
cmp
shrd
xor
jmp
mov
popa
lcall
add
adc
adc
adc
jae
data16
cmpsl
je
cmp
stc
inc
sti
mov
and
or
sub
stc
sub
and
jmp
add
insl
jp
jb
jno
mov
cmpl
pop
mov
add
pop
adc
into
addr16
xor
sub
imul
adcb
dec
in
xchg
sub
jle
pop
xor
pop
negl
pop
push
jmp
xchg
push
lds
arpl
insb
cs
push
xchg
inc
mov
stos
popa
sub
xchg
mov
aas
sub
js
add
mov
adc
imul
js
dec
mull
sbb
mov
mulb
nop
imulb
lret
ja
mov
xchg
mov
pusha
call
in
rclb
inc
jle
ret
je
pop
rcr
pusha
repz
das
pop
test
out
push
inc
fmuls
mov
dec
lods
pop
cmp
xor
rcrb
ja
xchg
jp
cwtl
xor
mov
scas
push
out
in
lods
ds
sarl
sbb
ss
xchg
push
push
jmp
stos
repz
pushf
pusha
pop
fs
clc
dec
adc
inc
lret
xor
mov
test
pop
andnps
mov
adcl
push
cs
pop
loope
mov
shlb
jecxz
jge
popf
test
lret
and
call
sbbb
popa
loopne
pop
xor
std
cmp
cmpsl
mov
add
lahf
add
mov
push
add
adc
inc
jno
stos
or
filds
push
out
xchg
pop
inc
insb
cmc
adc
cmpsb
dec
bound
mov
mov
xchg
push
pcmpeqd
cs
or
mov
sahf
xor
repnz
fcoml
push
jno
das
mov
daa
rcpps
dec
test
jmp
in
test
add
adc
mov
cmp
sbb
je
insl
push
sbb
data16
pop
fwait
and
or
stos
outsb
js
inc
out
arpl
jge
pushf
in
xchg
push
add
repz
xor
push
lock
sbb
enter
xor
cmpsb
xchg
jl
scas
mov
mov
fs
cs
sbb
mov
jmp
adc
scas
cmp
xchg
lret
inc
xor
popf
sub
push
sub
inc
out
dec
or
ja
notb
xchg
popa
roll
cmp
ja
add
pop
jle
push
pop
push
inc
lar
insb
push
pop
adc
xor
std
lock
xor
shrl
sarl
cwtl
or
lret
dec
setl
lods
and
lcall
sbb
or
imul
adc
data16
addr16
cmpsb
ja
jb
jb
pop
fcoms
mov
ljmp
orl
jle
mov
mov
xchg
jno
aad
xchg
dec
repnz
fcoms
sub
in
test
fs
xchg
outsl
and
pop
lock
mov
or
add
ljmp
mov
mov
pop
dec
mov
test
scas
scas
in
imul
icebp
aas
cmp
pushl
movsl
and
jle
aas
popf
ds
inc
jge
in
jge
or
add
aad
mov
pop
in
cmpsb
sbb
and
mov
out
inc
gs
or
push
out
test
add
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
test
sbbl
pop
sbb
jle
fildll
int
adc
fmull
adc
repnz
ret
das
es
pop
test
dec
xchg
jle
icebp
lret
outsl
jbe
add
or
pop
pop
in
and
enter
sbb
fs
test
lcall
movl
dec
test
or
push
add
scas
mov
lcall
or
dec
fiaddl
mov
jnp
jl
in
mov
sub
cltd
mov
movb
out
pop
mov
or
dec
mov
xchg
js
outsb
inc
dec
jecxz
mov
push
push
sub
jb
mov
jno
rcr
push
pop
inc
in
fstp
ja
xor
lea
cmp
repnz
push
inc
push
cmpl
movsl
push
xchg
cmp
xchg
xor
inc
mov
inc
sbb
dec
cmp
cmc
outsl
stos
fs
sub
rclb
xchg
int3
or
adc
adc
sahf
jmp
scas
xchg
pop
ret
rclb
fwait
push
leave
mov
lret
int3
scas
push
aas
lods
cs
stos
lods
rcrl
xor
push
ljmp
pusha
icebp
mov
jecxz
outsl
and
mov
and
mov
mov
sar
mov
sub
int
and
sub
leave
cmp
lret
xchg
pop
lret
icebp
pusha
dec
imul
leave
sub
roll
sahf
ss
mov
insl
mov
adc
call
mov
lret
sub
les
hlt
xchg
pop
lret
dec
jg
sbb
push
scas
dec
fs
inc
loope
xor
push
push
jmp
jl,pt
lods
cmp
and
sbb
test
sub
dec
test
dec
and
leave
pop
xchg
jecxz
sarl
adc
and
xchg
cmp
lock
loope
mov
fdivrp
jnp
icebp
cmp
inc
and
icebp
test
inc
cld
es
add
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
jmp
xchg
add
cmp
scas
insb
mov
lods
xchg
sbb
adc
movlps
clc
pop
stc
xor
mov
call
aad
pushf
xchg
mov
icebp
mov
push
call
sahf
mov
in
roll
dec
sti
dec
push
pop
or
cli
movsl
inc
add
or
ja
ret
lods
jmp
cmp
test
movb
pop
inc
add
adc
push
stc
mov
cld
cwtl
sbb
add
mov
sbb
pop
lret
jae
out
les
jecxz
sbb
repnz
add
jg
cmp
js
dec
out
mov
call
xor
sbb
jle
ror
inc
jmp
imul
imul
and
lcall
movsl
mov
addr16
or
xchg
out
movsl
sbb
fsts
dec
lods
add
push
cmp
fisubrl
test
cmpsl
or
mov
mov
pop
inc
push
jg
xor
push
mov
push
fstl
mov
mov
inc
xor
xchg
jge
inc
mov
xor
inc
sub
in
cmp
jle
sbb
sbb
jns
faddp
test
nop
xchg
push
sbb
sbb
addr16
je
je
je
pop
mov
xor
loopne
mov
xor
mov
in
add
sub
mov
mov
popa
std
or
sti
and
out
notl
jecxz
ja
push
test
and
or
leave
mov
pop
push
sub
ret
xchg
mov
scas
and
and
dec
loope
into
sahf
cmpsb
add
push
ljmp
sbb
jge
out
mov
mov
lea
ret
pop
into
and
dec
popa
mov
out
cli
mov
arpl
insb
mov
mov
mov
inc
sbb
sbbb
cmpl
daa
fnstcw
std
sets
dec
sbb
ss
sbb
push
rorl
fnstsw
mov
cmp
add
movl
movl
movl
mov
jmp
outsl
or
or
popa
imul
nop
js
xchg
add
fmull
adc
sub
sbb
cmp
mov
sbb
mov
fidivrl
pusha
inc
aaa
inc
inc
pop
scas
adc
dec
lea
adc
jns
sub
test
dec
orb
or
jge
jns
rolb
xchg
cmpsb
jnp
lret
in
insb
lcall
adc
imul
sub
call
add
jb
enter
add
daa
addr16
fiaddl
xor
lock
nop
sti
mov
ss
stos
dec
push
mov
mov
inc
and
cbtw
add
popf
ror
loope
aas
fidivs
push
cmpsb
cmp
fcoml
add
mov
cli
lahf
or
mov
insl
xor
sbb
jo
add
aad
inc
int
mov
inc
subl
ss
movsl
sbb
cmp
sub
loope
mov
pop
xor
push
sub
sub
and
push
xchg
popa
pop
push
mov
adc
mov
lret
cmc
ret
xchg
ds
sub
div
testl
jl
pop
rolb
mov
arpl
xchg
psubsw
inc
pop
lock
das
stc
cs
imul
cmpsl
xchg
in
gs
lods
inc
test
rcrb
sbb
cwtl
es
mov
pop
mov
ret
popl
mov
bound
xchg
jb
in
xchg
pop
cmp
jl
into
shrl
sub
lahf
ljmp
lret
cmp
pop
into
jo
popf
popf
addr16
mov
shlb
mov
aam
mov
loope
enter
lods
jecxz
mov
jecxz
sub
enter
les
lcall
pop
push
and
add
repnz
mov
nop
icebp
pop
cmc
adc
jmp
xchg
ja
lods
loopne
adc
lods
cmp
cmc
imul
sbb
add
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
jmp
and
cmp
aaa
sbb
bound
sarb
sbb
insb
and
movlps
loop
xchg
das
cmp
and
mov
push
dec
push
cmpsb
insl
and
fisubl
jo
mov
jb
rorb
jl
dec
pop
xchg
cmp
aas
jmp
mov
cwtl
cwtl
jecxz
sar
mov
pop
enter
shl
fldl
jnp
sub
sarl
add
push
js
in
and
xchg
mov
pop
mov
xchg
std
push
icebp
cmp
rcr
dec
mov
fcoms
jle
stc
mov
add
and
fldt
test
movsb
mov
sub
push
out
cmpb
jne
ret
cld
sbb
pop
aad
push
adc
xchg
dec
std
fs
cmc
cmpsb
out
repz
ror
in
test
and
clc
push
pusha
ljmp
sti
fisubrl
pop
mov
xchg
xorb
jne
cs
and
sub
jae
and
mov
jg
mulb
cwtl
sub
push
xor
les
out
pusha
shlb
repz
sti
inc
mov
test
outsb
enter
cs
inc
mov
pop
sbb
clc
and
popf
mov
or
push
push
inc
xchg
mov
sar
jns
cmp
cmp
clc
xchg
lret
xlat
repz
sbb
fcoml
xor
pop
lods
test
or
lock
sub
je
popa
dec
out
pop
or
leave
pop
sbbl
leave
iret
imul
push
pop
sbb
pop
loopne
push
xchg
xorb
mov
rclb
pop
mov
sbb
cmp
and
cmpsb
clc
loop
je
mov
outsb
mov
dec
cli
jp
cmp
adc
jnp
or
adc
aad
lret
mov
jns
xor
leave
or
repnz
pop
fs
add
xor
movl
mov
mov
sub
div
mov
xor
mov
div
jmp
mov
xor
jns
fldln2
jle
or
js
adc
adc
movlps
ljmp
enter
push
xchg
xchg
push
iret
or
cs
in
add
and
mov
xchg
add
xor
and
stos
pop
imul
rcrb
inc
out
push
data16
rcrb
mov
mov
ja
subb
arpl
sbb
and
fistpl
xor
mov
mov
sbb
andl
mov
xor
push
mov
loop
repnz
lahf
repz
push
and
repnz
dec
xor
or
mov
ljmp
inc
xchg
inc
mov
push
sbbb
or
idivl
pop
xor
dec
lahf
in
sub
and
pushf
mov
sbb
push
xor
jl
sub
movsl
inc
pop
daa
mov
wbinvd
loopne
repz
sub
or
adc
ja
ds
arpl
mov
mov
cmpsb
dec
xchg
lcall
cld
mov
inc
shll
push
repz
or
out
dec
loop
cld
cli
xor
fmuls
jo
mov
xor
mov
fistl
cs
push
sub
out
mov
dec
mov
out
pop
ja
arpl
scas
outsl
add
js
imul
mov
or
cwtl
lahf
into
dec
mov
mov
movsl
lret
pop
loopne
je
sbb
adc
nop
mov
xchg
inc
push
xor
sarl
inc
fiadds
add
add
dec
cs
jb
dec
jns
or
mov
subl
mov
rcll
addr16
bound
xchg
ds
cmp
repz
jmp
gs
lcall
sub
cld
loope
adc
aas
sub
inc
dec
xchg
aam
movb
lods
fs
clc
xchg
leave
dec
inc
fstpl
mov
je,pt
dec
in
cmp
add
roll
mov
cs
dec
jae
mov
mov
adc
fmull
adc
mov
xor
dec
push
int
das
sbb
shll
mov
lea
lret
inc
aas
stc
aam
bound
inc
stc
andb
arpl
xor
cmpb
dec
inc
mov
inc
xchg
mov
cltd
xor
add
sub
jbe
dec
into
and
push
ja
cwtl
mov
mov
fcmove
jb
jecxz
mov
pop
js
xor
lahf
inc
stos
pushf
mov
mov
mov
xchg
out
cmp
add
xchg
dec
ja
xchg
cli
jg
test
push
stos
jae
out
in
aaa
adc
popf
dec
rclb
mov
leave
ret
push
popa
aad
xchg
out
mov
shl
ds
icebp
adc
cmp
push
test
sbb
pushf
aad
addl
or
and
lods
pop
push
or
push
rorb
aam
pop
jge
inc
lea
adc
shlb
cmc
add
add
sbb
jecxz
std
cmp
clc
je
dec
roll
in
dec
rorb
sbb
int
sbb
sti
ja
mov
insb
repz
pushf
test
xchg
lods
jg
loopne
imul
or
push
call
inc
mov
add
lock
pop
notb
into
sub
in
notb
lds
int3
movsb
mov
jo
mov
dec
dec
ret
pop
insb
int3
mov
in
or
or
fisubs
fsubrs
push
jl
dec
stc
mov
ljmp
jg
cmpsl
sub
pop
fdivs
pop
lock
jecxz
ss
jg
sub
je
stos
lds
out
aad
imul
into
inc
and
xchg
loop
pop
lock
js
push
sbb
into
mov
pop
sbb
call
mov
cmp
in
repz
sub
loop
lahf
pop
popa
add
iret
mov
jno
mov
sbb
xchg
shl
icebp
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jmp
mov
aaa
cmpsl
sbb
test
shlb
jle
adc
fmull
adc
push
out
call
mov
pushf
mov
pop
lods
xor
inc
roll
sub
scas
adc
and
mov
or
lahf
into
push
add
test
mov
xor
out
scas
and
in
dec
pop
pushf
jo
adc
das
scas
cmpsb
xchg
cmpsb
jae
pop
mov
xor
sbb
loopne
xchg
dec
sub
inc
sub
add
scas
stos
jbe
mov
inc
add
iret
push
dec
loop
in
xchg
push
repz
lret
dec
jmp
fists
and
mov
js
pop
push
sub
dec
xor
jae
std
push
out
adc
enter
inc
push
stos
aam
push
rcrl
push
clc
pop
push
outsb
bound
loopne
jmp
pop
insl
dec
fbld
xchg
std
inc
inc
push
or
sbb
add
jbe
lea
and
in
dec
adc
ret
and
mov
sub
cltd
rolb
cltd
lret
mov
leave
nop
lcall
imul
add
fldt
push
out
add
add
push
push
xchg
xor
push
sahf
js
shlb
inc
fdivr
mov
jns
movsl
pop
aad
xchg
pop
inc
cwtl
imul
lret
testl
in
call
or
leave
out
arpl
xchg
adc
jb
mov
stos
jl
dec
mov
mov
inc
iret
mov
inc
cmp
rolb
add
je
movsl
fs
repnz
daa
stos
jnp
movl
mov
and
mov
adc
mov
dec
mov
mov
inc
mov
sbb
fisttpl
or
clc
adc
enter
iret
jmp
cmc
test
cli
in
jmp
lret
sbb
push
js
ret
or
jge
mov
aad
les
movsb
aad
xorl
in
sub
loopne
cmp
add
inc
fdivrl
cmp
add
inc
in
int
add
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
jmp
popa
pop
fimull
dec
sbb
dec
neg
mov
inc
push
adc
fmull
adc
dec
cmp
je
push
and
inc
fidivrl
in
fmulp
mov
fbstp
daa
lock
jae
push
jb
dec
loop
xor
jae
push
mov
enter
scas
loope
mov
push
in
sbb
cmc
and
stc
lds
movsl
mov
popa
test
xor
xor
shlb
mov
scas
in
mov
out
hlt
loope
cmpsl
repz
sbb
mov
into
inc
ja
sub
loope
jns
or
inc
mov
xor
insb
pop
pop
shrl
aaa
mov
jb
inc
repnz
mov
mov
xchg
jl
insl
fiaddl
jbe
fildl
ss
je
mov
mov
lret
repnz
loopne
cmp
adc
iret
or
pop
pop
and
jns
xchg
into
push
icebp
xor
sub
fdivs
and
arpl
movsb
scas
lds
jle
pop
sub
out
add
cltd
fs
mov
into
inc
imul
adc
les
sbb
dec
outsb
mov
jo
and
mov
mov
dec
call
xlat
pop
rcpps
into
js
dec
movsl
js
das
stos
push
and
leave
into
inc
xchg
ret
mov
les
fdivr
pop
int3
add
stos
mov
sbb
pop
insl
push
fisubrs
mov
test
inc
in
mov
mov
inc
clc
fidivrs
stos
aad
movb
aas
aam
lock
pop
xlat
inc
push
scas
xchg
jnp
test
pop
or
ret
xchg
repz
pop
inc
xchg
iret
loop
popf
mov
outsb
clc
call
cmp
aad
inc
pusha
ja
iret
lods
xchg
xor
cmp
adc
jp
dec
jle
in
je
lea
aas
and
jmp
enter
mov
xlat
add
xor
rolb
cmp
mov
pop
lahf
iret
adc
push
cmc
sbb
inc
xchg
pop
lcall
cmp
movb
loopne
repz
cmp
jb
jmp
add
cmpsb
pop
sahf
aaa
xor
mov
mov
push
add
adc
movlps
or
pop
cs
int3
decb
sarl
xor
mov
divb
sbb
adc
mov
push
andl
sbb
xor
movsl
adc
mov
xchg
out
idivl
pop
outsl
mov
nop
insb
xor
repnz
nop
pop
in
fdivrp
mov
bound
not
sub
je
jo
ja
mov
sub
cmc
mov
inc
dec
xchg
imul
out
or
xchg
ja
pop
push
ret
fldt
sbb
push
jg
enter
stc
and
fsubs
add
sbb
push
cmp
out
sbb
subl
inc
cmp
cmpsb
xchg
pop
ljmp
jl
xchg
cmp
fstpt
mov
fistps
xor
add
in
das
pop
ljmp
call
xchg
xchg
fnstcw
bound
loopnew
lock
inc
ja
jae
cld
js
mov
dec
pop
and
add
mov
jmp
dec
add
arpl
mov
mov
movswl
fxch
repnz
mov
rorb
xor
add
cmc
jl
jbe
loope
mov
insl
fsubl
insb
mov
pop
ret
jb
mov
sub
push
sbb
jae
xchg
jge
sbb
pop
sub
scas
inc
pop
push
push
roll
orl
or
inc
adc
ret
aad
in
je
push
lea
cmpsb
je
xchg
push
jmp
add
gs
mov
push
xchg
xchg
cld
adc
fwait
pop
push
sbb
test
push
dec
cs
aad
xchg
repz
fld
popf
shll
std
inc
mov
test
push
js
test
xchg
or
pop
notl
fdivrl
xor
fstpt
out
ja
sahf
mov
in
ja
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
jmp
ja
fistps
pop
ja
outsl
popa
ss
dec
imul
adc
fmull
adc
stc
jge
out
push
add
ja
add
das
sarb
dec
js
mov
nop
jae
add
cmp
andl
loope
cli
lds
mov
and
or
push
pushw
cld
jo
mov
popa
mov
and
negl
imul
or
push
push
clc
fs
mov
mov
push
or
dec
sub
sbbb
insb
inc
dec
cld
stc
icebp
pop
xor
aam
rcrl
and
cld
shr
jbe
sbb
add
roll
and
dec
xchg
js
sub
ret
fcompl
sbb
aaa
pcmpeqb
sub
and
ja
jg
jp
or
add
cmp
or
xchg
pop
xchg
sbb
jo
imul
in
mov
pusha
adc
cmpb
sahf
xchg
mov
clc
sbb
and
jno
push
mov
addr16
gs
jecxz
insb
sahf
sbb
cmpsb
aad
jns
mov
xchg
cmp
mov
mov
cmp
add
push
add
or
xchg
insl
mov
mov
xchg
das
popf
data16
in
mov
xchg
inc
adc
out
pop
outsl
jp
shl
pop
out
mov
xchg
jo
dec
inc
dec
pushf
mov
loopne
pop
outsb
cld
testl
adc
or
pop
xchg
adc
into
sbb
pop
cmp
xor
fsubs
cltd
sbb
sbb
loop
fistps
aad
stc
lcall
int
xchg
iret
movsl
xchg
daa
adc
cmpsl
out
xchg
xchg
rclb
push
pop
lret
adc
shl
sbb
test
in
adc
cs
mov
jmp
xchg
mull
mov
cs
pop
jns
dec
cld
out
rorb
or
in
adc
xor
and
ret
in
and
cwtl
and
lret
loopne
ret
push
scas
add
mov
stos
jp
add
enter
rorl
add
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
jmp
lock
clc
test
inc
imul
xchg
mov
adc
fmull
adc
fldcw
fistpl
imul
mov
pop
push
inc
jecxz
pop
push
adc
mov
sub
test
mov
cltd
fisubs
mov
in
push
mov
cli
adcl
outsb
lahf
daa
shrb
dec
push
xchg
inc
mov
andb
std
pop
add
insl
test
outsb
arpl
js
out
sub
test
jmp
xchg
adcb
pushl
dec
stos
jmp
insl
dec
add
jns
fmuls
jo
fstpt
inc
add
jmp
or
dec
mov
xchg
push
xor
insb
or
mov
lret
lea
lret
scas
dec
ljmp
add
mov
hlt
out
mov
push
pop
add
je
andb
push
jnp
dec
pop
push
pop
leave
sub
bsr
jg
dec
bound
xor
sbb
add
push
and
insl
inc
mov
fsubr
mov
push
lahf
lods
lcall
jp
repz
push
mov
and
fisubrs
mov
or
rcrb
popa
fists
jno
pop
mov
sahf
gs
mov
xchg
test
lds
fstpt
je
xchg
mov
xchg
loopne
int
mov
push
or
in
scas
data16
inc
cwtl
mov
and
shrl
or
ret
lods
fcoms
pop
or
adc
cmp
adc
xorb
pop
lds
stc
fsubrs
push
dec
ret
and
xchg
sbb
adc
ficoml
mov
loope
in
sub
sarb
dec
shll
xlat
xchg
sub
inc
sti
mov
dec
push
dec
inc
scas
popf
test
arpl
push
sbb
es
jle
xor
iret
mov
insl
sbb
es
adc
or
mov
adc
jge
lods
push
loopne
ret
add
ret
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
jmp
mov
pop
mov
insb
out
imul
fmull
adc
jg
cmpsb
loop
pop
xchg
mov
ja
loop
pop
dec
and
sub
rclb
xchg
aad
mov
lcall
cltd
jb
pop
jne
xor
adc
aaa
in
sbb
fcompl
gs
xor
pop
popa
pop
sbb
lret
inc
inc
inc
and
imul
push
jg
mov
mov
jp
aam
add
sbb
lret
out
or
xchg
lcall
cli
andl
mov
inc
xchg
or
hlt
enter
dec
into
pop
hlt
add
adc
aas
jb
lcall
jne
xchg
negb
in
lock
jle
xchg
hlt
jg
pop
xchg
push
pop
enter
mov
ficoms
pop
out
pop
cmp
insl
ljmp
or
xor
lds
std
mov
add
nop
aam
dec
jmp
jl
cmpl
std
fcmovnb
stos
sub
pushf
ret
test
lods
popw
sbb
cltd
adc
mov
lahf
pop
add
or
mov
imul
shl
xor
rcrl
getsec
mov
cmp
lcall
inc
adc
movsw
xor
call
outsl
rol
jns
lds
sbb
mov
mov
push
stos
adc
into
addl
in
sahf
in
xor
sub
lock
sahf
inc
in
andb
mov
pop
mov
jl
mov
mov
xchg
js
pusha
stos
addb
stos
enter
lcall
nop
dec
test
pop
fmulp
push
hlt
add
fcompl
insb
inc
inc
pop
leave
sbb
outsb
scas
dec
fisubs
das
push
rol
push
xor
dec
add
jo
mov
jnp
fcoms
push
cmp
aas
movsl
xor
movsl
lea
cmp
repnz
and
call
jmp
and
icebp
fdivr
sbb
jmp
jns
dec
push
add
stc
sub
mov
mov
clc
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
jmp
push
jb
adc
mov
xor
cmpsb
dec
mov
sub
adc
adc
out
filds
mov
pop
aam
mov
cmp
int
in
movsb
jecxz
dec
push
mov
rcrb
lds
jmp
mov
aam
stc
ret
imul
mov
insl
andb
mov
les
aaa
cmp
popf
xor
lret
aam
mov
insb
fadds
arpl
inc
lcall
and
adc
ret
pop
lock
push
bound
mov
jmp
lea
lea
adc
hlt
fs
lds
pusha
mov
es
mov
xchg
pop
mov
test
sbb
jo
mov
sub
inc
cltd
jns
loop
lods
pop
jmp
xchg
cli
ds
cmpsl
xchg
shll
loope
orl
xchg
or
inc
mov
mov
scas
xor
or
lods
pushf
jno
fbld
pop
sahf
or
pushf
dec
add
or
mov
fnstcw
push
lock
inc
mov
ss
pop
or
fbld
sbb
lcall
push
enter
jmp
or
mov
js
shlb
mov
sbbl
out
rolb
orb
sbb
sub
xchg
push
pop
orb
out
mov
cltd
mov
xchg
lock
das
dec
mov
test
mov
xchg
je
cltd
mov
cs
sti
xchg
xchg
rorl
and
jmp
rcll
je
ds
cld
cli
xchg
pop
inc
lahf
or
sbb
or
cmp
fdiv
mov
inc
pop
imul
inc
sahf
cmc
outsb
jl
scas
stc
cwtl
push
mov
dec
loopne
mov
mov
jge
pusha
es
jae
push
jbe
and
inc
dec
imul
stos
dec
inc
cmp
cld
push
ret
outsb
mov
imul
xchg
dec
jle
jno
mov
cmp
xor
jne
std
popf
cmpsl
xlat
push
in
inc
cmp
insb
sbb
test
mov
mov
push
cmpsl
jg
mov
icebp
stc
test
imul
filds
xor
sub
pop
xor
cs
inc
adc
shlb
inc
icebp
inc
sub
jmp
lods
nop
cmp
mov
cmp
in
mov
lock
xchg
divb
sub
mov
stos
jmp
mov
xchg
stos
mov
in
out
xor
mov
rcrl
pop
pop
les
das
cs
call
hlt
ja
rol
sti
jns
nop
xchg
add
insl
push
jo
jno
push
mov
lods
lahf
mov
fsubrl
xchg
stos
mov
roll
cmc
or
aas
fmuls
push
mov
adc
pop
fimull
popf
leave
sahf
cmp
dec
fildl
xor
push
push
pop
inc
mov
loopne
xchg
ds
lret
movsl
ja
sub
je
sarl
xor
inc
imulb
sbb
aas
jns
dec
pop
or
adc
add
sarl
enter
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
jmp
imul
in
push
pop
loop
xchg
js
aas
inc
stos
mov
adc
jo
adc
pop
stos
pop
sbb
xchg
shrl
outsl
in
mov
push
movl
outsb
xor
adc
xor
clc
clc
sbbb
outsb
mov
sub
daa
inc
inc
pop
cmc
dec
sahf
loopne
imul
pop
and
add
mov
pusha
push
xchg
mov
xor
loope
test
mov
in
add
movsl
arpl
iret
retw
scas
stos
test
jp
fidivrl
out
push
jmp
mov
jp
mov
mov
mov
mov
int
add
fistpll
adcl
shlb
ss
sub
push
mov
jmp
fcoml
sub
jg
cmp
sbb
mov
pop
cli
mov
rcrl
adc
xchg
fisubl
cmp
and
sbb
and
push
mov
cmp
fsubp
aad
xlat
mov
mov
mov
jl
inc
inc
enter
lock
fcmovne
sub
clc
cli
jbe
pop
or
xchg
mov
or
sub
adc
add
xchg
testl
and
movsl
cmp
ret
fisubl
push
or
lea
push
pcmpgtd
sub
in
mov
xchg
stos
nop
jne
jge
dec
xor
jge
ljmp
pop
insl
mov
addr16
ret
mov
rolb
xchg
leave
adc
stos
push
pop
add
ds
xlat
mov
jmp
pop
xor
movsl
and
sub
dec
push
fnsave
xlat
adc
add
mov
jp
mov
mov
repnz
cmpl
and
dec
ret
sbb
adc
lahf
mov
add
mov
and
imul
xchg
popf
and
popa
jb
mul
into
mov
add
imul
sbb
mov
mov
into
es
loope
jnp
and
into
xchg
test
mov
bound
mov
jle
adc
xchg
pop
pop
imulb
add
cmpsl
cmpsl
xchg
xchg
in
lds
adc
scas
add
mov
dec
ds
xchg
push
adc
add
sub
add
stc
xchg
scas
adc
mov
das
jmp
and
or
mov
jecxz
sahf
adc
cmpsb
adc
cmc
ljmp
pop
mov
cli
add
push
rorl
test
add
add
mov
icebp
ja
adc
daa
xor
stos
mov
jg
scas
inc
xor
cmc
add
mov
xchg
popf
xchg
lahf
xor
sar
insb
inc
les
fcmovb
dec
int
mov
mov
inc
insb
rcll
into
sbb
stos
mov
push
add
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
jmp
mov
jo
pusha
popf
sbb
mov
inc
add
jo
adc
daa
or
popa
mov
push
push
aam
push
sbb
daa
fcom
cmp
jne
dec
ljmp
out
push
mov
inc
pop
pop
out
mov
fidivl
push
test
and
in
dec
xchg
in
lret
jmp
rorb
and
imul
pop
xchg
dec
cwtl
out
xchg
mov
aam
xchg
ss
mov
out
fcmovbe
mov
js
xor
pop
push
sub
add
dec
sub
es
xchg
movsl
stc
mov
and
xchg
cwtl
in
popa
xchg
loop
fsubrs
imul
js
mov
sbb
jno
mov
push
push
mov
mov
mov
ja
push
pop
jg
jp
or
enter
sub
inc
jbe
repnz
jmp
sbb
dec
ja
sbb
dec
rcll
add
push
out
call
add
jne
mov
aad
pop
stc
cmc
jge
pop
dec
mov
outsb
repnz
fadds
add
fistpll
jl
cli
enter
sbb
mov
push
divl
inc
out
outsl
mov
sub
add
push
pushf
mov
popf
test
inc
loopne
jl
adc
movsl
jecxz
pop
jmp
out
sub
push
pop
dec
mov
aas
in
or
push
push
add
out
or
push
inc
pop
ja
icebp
push
shlb
shll
fldcw
dec
fstl
adc
cld
jbe
int
and
addr16
mov
inc
sbb
loopne
mov
add
stos
mov
push
out
sbb
adcl
push
fstp
xor
insl
fsubrl
outsl
jo
add
pop
cmpsb
outsb
push
cld
in
fadd
xchg
iret
mov
pop
pop
leave
fnstenv
insl
push
rol
std
lock
sbb
aaa
in
popf
ret
push
ss
stos
inc
repnz
mov
push
cmp
push
inc
jle
test
mov
mov
test
adc
dec
xchg
xor
addr16
add
leave
xor
or
sbb
in
dec
mov
sub
add
sub
mov
dec
shl
fimuls
adc
pusha
lahf
add
push
push
lea
pop
push
sub
cld
push
push
pop
jae
add
xor
sbb
xchg
adc
cmp
fs
das
in
ja
loope
mov
jmp
loop
mov
mov
sub
fisubs
mov
fimull
pusha
mov
pushf
lock
mov
test
int
cmp
ficoml
ret
cltd
push
repz
aam
add
jp
loopne
and
loop
mov
fsubl
in
mov
sbb
push
js
insb
dec
out
out
inc
rcrb
sub
sbb
add
jp
push
inc
jmp
sub
xor
jns
push
ret
pusha
xchg
push
stos
sbb
or
je
nop
and
adc
dec
sub
add
inc
aam
cmp
add
inc
cld
xor
add
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
sbb
or
jmp
bnd
cld
inc
stos
inc
fstl
adc
adc
add
into
xchg
ja
mov
push
loopw
ds
pop
ret
adc
fs
incl
adc
outsl
scas
jne
into
imul
cmp
stos
or
int
data16
sbb
push
test
mov
sti
sub
or
adc
mov
ja
mov
push
mov
ret
shll
cmp
mov
add
jb
cmp
stos
xchg
das
stos
gs
mov
cmp
lahf
cmpsb
mov
stc
mov
push
cmp
inc
movsl
mov
hlt
push
fadd
xchg
shll
xchg
orl
fcompl
pop
cltd
push
jo
vmovups
mov
insl
inc
pop
xor
cmp
and
cmp
stos
test
push
jge
xchg
insb
xor
xchg
movsb
jecxz
shrl
jge
mov
jl
or
mov
int3
into
and
mov
add
inc
mov
mov
or
add
push
sbb
test
cmpsb
cmp
add
dec
sbb
sbb
sub
xor
pop
sub
jae
jnp
mov
stos
mov
cmp
jmp
jo
cwtl
pop
sub
jge
loope
scas
mov
andb
sti
adc
pop
aas
lcall
xchg
outsl
cmpsl
push
jbe
leave
or
sahf
and
mov
push
pusha
fisubrs
cmc
stos
pop
mov
add
ss
mul
dec
loopne
push
adc
mov
xchg
bound
imul
filds
rcll
sub
adc
cmpsb
pop
dec
mov
inc
cmpb
aaa
psubsb
jno
jo
lods
xchg
jmp
test
ss
out
jmp
fcomi
xchg
xor
inc
adc
call
mov
nop
fnsave
cmp
add
sbb
shll
and
push
sub
xor
pop
stc
js
pop
and
jg
sub
imul
icebp
and
inc
std
enter
dec
int
loop
push
pushf
xchg
add
sbb
xchg
mov
sub
sbb
mov
and
jnp
scas
sub
shlb
mov
sbb
push
or
les
pop
or
or
les
xchg
int
dec
jb
sub
push
dec
insb
lea
sbb
pop
pushf
sub
cmp
xor
mov
mov
popf
stos
push
mov
cmp
adc
sub
cmp
xchg
push
adc
hlt
fdecstp
sbb
dec
pop
sarb
sarl
xchg
ret
and
cmp
stc
cmp
mov
jne
push
pop
cmc
adc
push
in
mov
xchg
cmpsl
test
dec
push
aaa
cmpsb
or
xor
sbb
sahf
repz
inc
sub
push
jecxz
je,pn
push
inc
fs
fistl
out
in
iret
pushf
lock
adc
sbb
inc
adc
xchg
pop
dec
fld
sbb
xchg
inc
in
jno
add
in
outsb
add
add
inc
dec
and
cwtl
lods
aam
outsb
insb
sahf
aad
adc
adc
ficompl
pusha
andb
out
mov
in
sbb
out
inc
push
pusha
orl
mov
jge
add
scas
jae
xor
jne
xor
int
lock
out
pop
lret
inc
push
push
sub
bnd
push
in
adc
outsb
addr16
mov
cs
gs
mov
call
insb
fmuls
mov
and
jmp
andb
push
and
dec
mov
ja
cmpl
push
jg
frstor
pop
test
jo
pop
enter
std
dec
mov
call
test
xor
pop
ficomps
gs
sub
shlb
lock
xor
and
cli
inc
movsb
pop
mov
sti
repnz
mov
shll
push
dec
cs
sahf
xchg
jge
mov
out
stos
stos
lret
push
movsl
pushf
shrl
add
and
adc
xchg
dec
inc
adc
jnp
adc
xchg
test
in
or
push
bts
das
push
cwtl
add
sbb
cmp
sahf
repz
lock
imul
or
fcompl
sahf
add
inc
cld
int
sbb
mov
push
inc
pop
lds
xchg
pusha
mov
push
hlt
jno
pop
pop
dec
sbb
cs
into
dec
arpl
dec
xor
rclb
mov
insl
add
and
inc
xchg
pop
pop
inc
push
add
jecxz
pop
push
xchg
dec
mov
inc
pop
mov
push
dec
stc
roll
inc
sbb
jb
jge
adc
cltd
cmp
mov
shll
lahf
fcmovnu
jo
or
xchg
imul
xchg
shl
pop
jne
leave
scas
pop
cmp
shl
cmpsl
or
mov
jno
xlat
adc
add
lcall
or
jne
cmp
jg
mov
test
dec
ror
shlb
ss
mov
cmpsb
mov
push
scas
iret
xor
mov
mov
aad
sbb
popf
lcall
aas
loop
add
add
adc
xor
sub
fsubrp
push
rorb
out
sub
ja
push
cmc
or
movsb
ja
lret
fs
xchg
aaa
push
pushf
dec
or
xchg
inc
adc
dec
push
sbb
outsl
ss
or
enter
loop
fstps
pop
cmpl
sub
negb
or
dec
repz
sbb
adc
test
push
or
repz
jecxz
mov
sub
jb
sbb
xchg
leave
mov
lcall
nop
pop
push
dec
mov
ret
jb
scas
out
xchg
and
fsubp
adc
loop
aam
jge
fmull
and
xchg
aam
cli
out
or
hlt
inc
test
cs
sahf
sub
out
cmp
pop
cmc
in
ss
lock
mov
movsb
es
add
popa
dec
adc
jmp
and
sub
jne
mov
add
adc
or
mov
or
jmp
xchg
decl
cmp
adc
stos
jne
fidivrs
jo
adc
pop
data16
inc
hlt
jb
xor
into
push
test
add
mov
dec
outsl
mov
repnz
push
jmp
stos
add
das
add
jns
sub
jle
adc
jno
xor
mov
inc
in
imul
leave
mov
jo
push
push
imul
xchg
adc
cwtl
mov
mov
cs
push
lret
mov
sbb
sbb
js
aad
out
pop
mov
loopne
loope
push
out
rol
cmp
xchg
cld
out
adcl
repnz
xchg
int3
imul
ds
pop
fcmovne
in
jl
cmc
out
xlat
les
clc
stc
xor
or
xchg
dec
int3
ss
insl
dec
cwtl
sahf
or
push
push
cmp
sahf
lcall
sarb
and
xchg
and
popf
adc
cwtl
stos
popf
sbb
mov
stos
push
mov
movsl
sbb
dec
mov
daa
int
sub
aaa
pop
fildl
mov
leave
out
cmpl
xor
cmp
xor
adc
fistl
pop
stc
into
mov
adc
das
sub
push
rcrl
dec
cmp
push
lret
xchg
jnp
dec
jbe
mov
mov
bound
pop
jo
dec
mov
jecxz
mov
addr16
xchg
dec
aam
inc
mov
rorl
push
fisubs
dec
cmp
pop
shrb
out
jne
movsb
daa
inc
or
into
or
cld
ss
xor
fistl
lea
lods
jge
jae
mov
xor
sti
mov
adc
clc
test
nop
js
sbb
jle
mov
xor
dec
ja
loope
rcrl
sub
jno
inc
xor
les
inc
incl
sbb
lock
lea
ss
mov
insb
xor
mov
lret
mov
or
dec
sub
repnz
popf
aas
mov
inc
jbe
nop
jae
jecxz
mov
mov
inc
lock
lahf
mov
dec
dec
dec
test
inc
mov
fsts
daa
xchg
aaa
ret
cmpsb
dec
pop
vrsqrtss
leave
sub
lret
aaa
imul
fimull
push
popa
aad
fstpt
jp
jecxz
cmp
adc
int
test
pop
jno
push
aam
mov
sub
fdivp
cwtl
add
int
sti
jb
dec
frstpm(287
dec
lret
dec
mov
xchg
imul
clc
or
loopne
add
adc
out
int3
imul
stos
mov
hlt
jns
cld
and
decb
and
nop
xchg
jno
mov
je
clc
push
add
xchg
sti
dec
sub
jmp
repnz
pop
sbb
push
xchg
ret
ret
rcr
and
hlt
xor
rorl
pop
imul
sbb
dec
ja
and
pop
push
pop
dec
aad
mov
or
sbb
mov
inc
push
jns
cmp
arpl
mov
rorl
enter
pop
int3
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
jmp
sub
cmp
mov
push
leave
adc
jo
adc
pop
icebp
jae
inc
gs
loope
mov
cmp
loopne
adcb
ja
or
jns
gs
push
sub
in
dec
xor
add
mov
inc
xchg
sub
es
cli
incl
rolb
mov
in
scas
cmp
add
clc
addb
dec
mov
pushl
lret
ficoml
fs
xor
scas
cmp
jnp
hlt
insl
pop
pop
jle
push
jae
shlb
pop
jae
or
dec
stos
out
mov
nop
jg
fistpl
pop
daa
cmp
or
add
cmp
sbb
bts
call
ds
adc
pusha
adc
xorb
dec
stos
push
loopne
inc
sub
jg
adc
adc
mov
pushf
mov
cmp
mov
xor
dec
xor
adc
jo
mov
mov
xchg
les
sub
imul
dec
hlt
cmp
cmpsl
jae
inc
xchg
jae
add
dec
loope
dec
aam
icebp
xor
cli
sbb
ret
testb
and
push
add
xchg
xchg
inc
inc
mov
mov
outsb
aaa
nop
and
pusha
push
pop
cmpb
mov
dec
jne
bound
xchg
out
push
mov
cmpsb
into
mov
out
xchg
hlt
jns
call
outsl
dec
adc
in
xchg
add
mov
data16
push
pop
lods
and
inc
imul
mov
enter
push
jl
roll
pop
add
mulb
out
mov
cmpb
adc
in
loop
loopne
inc
sub
lods
or
inc
decb
inc
hlt
and
sbb
mov
mov
out
sbb
push
xor
test
iret
sub
es
pop
mov
fs
idiv
sbb
push
push
adc
loope
sbbl
test
outsl
add
into
pop
adc
shlb
xchg
out
idivl
dec
movsb
pusha
and
std
mov
sub
ja
add
cltd
hlt
rolb
dec
negb
xchg
xchg
shrb
mov
mov
mov
mov
sub
sbb
roll
stos
sbb
mov
sar
lahf
aam
push
xor
ret
mov
sarb
xorl
cltd
sbb
adc
mov
cmpsb
xchg
mov
addb
jg
cli
fdivs
mov
hlt
xor
mov
nop
cli
sub
daa
inc
scas
mov
pushf
aam
out
push
cltd
nop
cld
mov
fsubp
sub
jo
mov
cld
sbb
xor
cmovs
lock
dec
mov
cmp
lock
js
xor
push
pop
push
rcrl
fstpt
push
aam
enter
inc
mov
xchg
movsl
mov
mov
or
imul
nop
and
mov
fwait
dec
xchg
popf
cmpsl
rol
test
lcall
add
test
call
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
jmp
xchg
xorb
daa
cltd
sbb
xchg
fadds
jo
adc
lock
loopnew
popf
adc
mov
inc
cwtl
jbe
das
fcmovnbe
jbe
inc
mov
fidivl
jnp
xchg
gs
mov
ret
sub
data16
stos
mov
xchg
mov
xchg
sbb
dec
pop
enter
fwait
sub
xor
mov
cmp
mov
pop
scas
mov
aam
js
sub
sbb
mov
leave
sub
testl
pop
jne
mov
or
fdivl
sarl
icebp
mov
inc
icebp
jns
jl
stc
mov
push
loopne
mov
cmp
iret
jo
or
loop
outsl
push
out
lret
jb
mov
pop
pop
and
enter
int3
cmpsb
pop
test
cli
push
mov
mov
xor
add
and
jecxz
out
push
scas
enter
clc
adcl
adc
and
and
dec
mov
jns
mov
pop
icebp
std
xchg
push
cmp
dec
pusha
xorl
icebp
push
xor
std
loope
outsl
popa
icebp
out
mov
mov
dec
mov
push
int3
xchg
jae
inc
addr16
sahf
xchg
nop
xorl
cmp
push
pop
repz
jae
testb
xor
repnz
mov
arpl
out
popa
push
int3
pop
imul
rcrb
rorb
xchg
dec
shll
test
push
cmp
push
imul
sbbl
gs
and
mov
aam
loopne
je
cli
out
sbb
cmp
xchg
lahf
dec
rcrl
inc
hlt
fiaddl
ja
in
outsb
stos
outsl
out
push
add
ret
jae
mov
xchg
std
jge
mov
inc
push
push
mov
fcmove
and
inc
cmp
lahf
mov
and
rcrl
out
add
sub
daa
push
mov
cmp
or
xchg
mov
push
adc
addr16
fwait
and
mov
shll
ss
jmp
lds
sbb
push
lcall
int
mov
pop
jp
xor
int3
aas
jmp
mov
fnstenv
std
call
testl
push
xor
jo
adc
xchg
jle
mov
sahf
xchg
insl
and
cld
movsl
sub
jl
cmpsb
jns
adc
in
xchg
in
or
cmp
mov
cli
sbb
aam
mov
push
enter
sub
xchg
and
cs
mov
dec
mov
js
out
sub
xchg
in
add
shll
and
adc
jecxz
dec
cmp
sti
xor
notb
mov
adc
ljmp
insb
lds
movsb
pop
cld
movsl
cmc
and
dec
movsl
add
sbb
fstl
push
mov
test
cmp
xchg
ds
xchg
scas
pop
sbb
pop
inc
jno
sbb
dec
fimuls
inc
push
mov
scas
js
dec
sub
pop
sub
rcll
push
addr16
jge
xor
in
sti
sbbl
xchg
dec
cmp
mov
dec
or
sub
les
inc
gs
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
jmp
jmp
dec
test
lods
nop
mov
adc
jo
adc
out
cmpsl
sbb
cld
dec
sub
mov
ljmp
xchg
pop
sti
xchg
outsb
out
push
dec
inc
enter
addl
xchg
jns
cwtl
imul
shlb
out
rcrb
out
inc
jae
dec
fldl
pop
ja
xchg
pop
test
mov
inc
push
aam
push
clc
mov
pop
rclb
lret
dec
pop
mov
mov
xchg
adc
lcall
and
imul
push
jmp
mov
add
sub
inc
and
push
add
lods
loopne
dec
sub
pushf
in
dec
shlb
cmp
mov
popa
adc
or
ljmp
stc
adc
in
push
loopne
and
xor
or
sbb
and
adc
lds
add
inc
mov
xor
das
out
push
sbb
outsb
fld
rcrb
xor
cmp
lea
inc
jnp
jnp
in
add
out
add
inc
test
pop
jns
outsl
rolb
inc
aaa
jb
or
lock
ret
mov
rorb
mov
hlt
cs
push
out
add
arpl
stos
xor
in
adc
data16
pop
jno
add
decl
repnz
push
daa
negl
xchg
push
testl
jg
out
gs
fcomps
in
inc
mov
and
in
pop
inc
pop
inc
rclb
aad
decl
adc
cwtl
pop
pop
fwait
and
cltd
das
fs
xchg
shrl
jecxz
movlps
into
js
sbbl
mov
insl
xor
mov
movsl
aas
cmp
mov
std
xchg
xchg
sub
pop
sarb
loop
out
mov
adc
mov
popf
testl
adc
pop
cmp
pop
pop
loop
inc
add
add
add
mov
and
int
rcrb
mov
out
xchg
imul
jecxz
cmpsl
mov
aad
repz
dec
adc
lock
mov
push
xchg
faddl
js,pt
and
mov
mov
sbb
popa
and
push
and
stos
or
push
pop
testb
aad
mov
sub
test
mov
ror
gs
dec
es
addl
imul
mov
popf
in
sahf
shll
std
sti
or
sahf
and
shl
push
cli
push
xorb
add
jnp
mov
jge
fisubrs
out
imul
lret
adc
cmp
sbb
mov
rcrl
sub
popa
outsl
lods
sub
int3
xchg
cwtl
jb
loopne
arpl
out
mov
cmp
or
add
cmp
lahf
bound
das
lock
enter
push
leave
loopne
lods
pop
mov
inc
lods
mov
dec
icebp
addr16
aam
fisubrs
into
mov
mov
mov
xor
xchg
push
cmc
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
jmp
dec
pop
divb
inc
and
mov
imul
mov
data16
and
jae
lret
lahf
mov
repz
out
pop
in
das
add
inc
mov
aaa
das
in
inc
add
push
fwait
mov
adc
pop
or
ret
arpl
xor
jb
dec
inc
and
mov
sbb
stos
inc
jle
mov
cmp
push
jbe
mov
mov
inc
pop
lds
xchg
inc
dec
xchg
fisttpl
enter
inc
jb
push
test
addr16
ds
mov
movsl
div
subb
xchg
cmpsl
cmp
into
mov
pop
fs
mov
xchg
lret
jb
stos
mov
mov
dec
push
xchg
pop
jnp
mov
mov
enter
cltd
mov
fistl
push
out
push
lea
xchg
hlt
icebp
push
and
and
push
fdiv
movsb
pop
aad
xchg
call
mov
add
pop
xor
mov
inc
or
and
cltd
mov
pop
into
bound
jne
sub
xchg
mov
mov
outsb
lds
pop
or
pop
push
jno
and
sub
movsl
mov
int
push
cmp
dec
xor
sbb
pop
or
sti
fwait
sub
into
int3
push
lock
shlb
aaa
fs
jnp
out
mov
daa
sti
xor
xchg
out
fdivrl
movsl
sub
inc
mov
std
sub
stc
cmpsb
push
cli
icebp
xlat
out
aad
fcmovu
fistpl
dec
add
jl
pop
sarl
iret
jno
dec
lods
stos
xor
shrl
and
fstpt
fstl
mov
mov
mov
sub
les
pop
adc
sbb
lcall
cmpsb
cmp
imul
mov
mov
arpl
mov
dec
fwait
cld
cltd
int3
add
pop
sbb
xchg
pop
add
sub
mov
stc
push
iret
movsl
jns
movsb
inc
pop
push
scas
pop
fisttpl
nop
push
add
pop
inc
mov
adc
sub
xchg
sahf
pop
les
sub
xor
push
call
mov
mov
or
or
push
add
push
jmp
push
pop
push
js
and
mov
stos
movlps
mov
aaa
ljmp
sbb
fcompl
xchg
outsl
and
rcrl
arpl
inc
mov
xchg
lods
das
mov
adc
sbb
lock
aad
arpl
les
loopne
std
mov
add
movsb
imul
setg
dec
dec
dec
sbb
push
cmpsl
ret
dec
nop
jae
push
mov
enter
es
outsl
push
dec
roll
adc
add
idivl
loop
loope
pusha
push
repnz
scas
sbb
imul
adc
ret
scas
xor
xor
mov
sub
enter
leave
in
push
add
dec
mov
add
pop
jb
push
adc
xor
adc
incb
add
mov
xor
mov
out
cld
push
xor
mov
and
fs
push
dec
out
lahf
in
mov
jno
xchg
ja
xchg
lods
fsubs
adc
lcall
mov
stc
push
sbb
add
in
push
icebp
pop
lahf
or
xchg
cmp
xor
adc
or
shl
orl
pop
std
pop
test
pushf
dec
jg
fstpt
xlat
leave
dec
jo
jb
sbb
hlt
mov
andl
push
stos
shl
push
mov
in
xchg
inc
and
adc
mov
xchg
xchg
and
jo
jecxz
jg
pushf
lock
fdivr
mov
jns
outsb
and
adc
sahf
mov
dec
xor
mov
std
addb
mov
pop
insb
clc
test
mov
xchg
nop
iret
pusha
scas
mov
pop
out
mov
ret
rcl
and
fistps
dec
mov
pop
outsb
jnp
ljmp
adc
sbb
fbstp
imul
orb
xorl
hlt
push
mov
lods
into
dec
xor
fsubr
jmp
call
pop
sub
aas
mov
add
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
jmp
cltd
sbb
sbb
cltd
sbb
xchg
bound
xchg
mov
movlps
xchg
inc
xor
adc
xchg
push
mov
cmp
imul
xchg
cmp
inc
pushf
popa
pop
sbb
xor
dec
pushf
adc
xor
pop
addl
mov
push
pop
lahf
lods
gs
pop
pop
ljmp
iret
mov
inc
lret
jae
loop
push
clc
movb
push
and
ret
xor
cmp
les
out
fwait
loope
and
mull
xlat
and
cmp
push
ror
xchg
clc
xchg
imul
enter
mov
mov
inc
xchg
push
fs
and
sbb
out
pop
mov
pop
nop
idivb
imul
jp
dec
add
mov
dec
ss
popa
push
push
mov
cltd
insb
mov
repz
sbb
pop
and
lock
pop
mov
shr
mov
xchg
or
les
pop
mov
mov
jmp
cmp
psraw
xor
vphaddubq
push
jge
stos
shrl
sarb
mov
inc
addb
add
jmp
inc
mov
pop
mov
push
xchg
mov
divl
in
inc
jne
rcrl
shrl
adc
xor
and
loopne
fdivrl
insb
adc
jmp
and
ds
jg
dec
dec
push
or
xor
rcrl
jo
xlat
idivb
mov
orl
push
sbb
mov
inc
adc
mov
stos
cmp
imul
fiadds
sub
cwtl
add
lahf
lds
mov
adc
scas
movsl
loope
stos
js
es
xor
push
aam
insb
xchg
inc
sahf
jecxz
test
mov
adc
mov
loopne
loop
jl
enter
loopne
mov
out
jne
mov
jmp
sub
mov
cmp
in
jecxz
sub
pop
add
sbb
inc
in
adc
inc
or
and
or
inc
in
mov
and
lea
mov
mov
mov
movl
jmp
pop
mov
pop
mov
jbe
dec
mov
stos
movlps
pop
jp
call
dec
ret
test
rcl
cmp
daa
mov
jno
sahf
sbb
cmpsb
push
shrl
outsb
add
dec
cmpsb
dec
adc
mull
in
xor
jns
adc
loope
mov
sbb
jno
inc
mov
push
pop
cmp
jae
aad
jmp
sbb
fnstcw
lds
aaa
jl
ljmp
fdivl
test
or
test
in
cmp
fwait
mov
and
imul
aas
cld
in
mov
int3
jp
adcb
ret
dec
outsb
shrl
repnz
nop
sbb
repz
inc
jb
data16
adc
addr16
cmp
mov
push
sbb
test
and
adc
outsb
js
out
mov
xchg
aad
push
mov
enter
ficoml
repnz
rclb
pop
jo
lcall
add
aad
in
and
movl
repnz
cltd
addr16
loopne
dec
jbe
mov
sbb
mov
mov
xor
sub
dec
cwtl
or
xor
jnp
out
xor
push
jge
mov
movsl
adcl
push
and
cmp
int3
mov
mov
mov
mov
xchg
in
arpl
dec
fidivrl
sub
test
out
ja
mov
movsl
jg
adc
sub
pop
in
out
lcall
push
mov
cli
or
jp
imul
int3
lods
das
data16
leave
es
aaa
outsb
cmc
push
int3
push
aaa
subl
xor
push
gs
jnp
ss
pop
ja
jg
mov
mov
xchg
cli
negb
nop
mov
dec
lods
inc
pop
pushl
and
xchg
cs
pop
lods
push
sbb
out
pop
arpl
xor
dec
push
fldcw
mov
pop
daa
or
dec
and
xchg
xchg
stc
shll
push
lcall
cmp
cmpsb
jae
pop
cmp
pop
xchg
push
mov
imul
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
xchg
sub
subl
insl
das
lret
lahf
adc
stos
movlps
jg
inc
xor
mov
jl
inc
pop
das
aam
aas
aam
or
adc
mov
repz
cld
js
ret
stos
loop
lret
pushf
xchg
sahf
nop
jle
and
jno
push
mov
cmpsb
and
fidivrl
lahf
into
shlb
movsb
push
outsl
popl
or
lahf
dec
inc
jbe
cld
out
clc
pop
lea
nop
mov
push
aaa
fldl
fld
or
push
pop
xor
mov
xlat
rcrl
push
sub
or
pop
out
xor
push
jbe
and
nop
xchg
ret
mov
mov
xor
test
dec
mov
and
jb
pop
hlt
repnz
cmp
mov
mov
incb
jg
enter
mov
aaa
lret
inc
lods
jmp
orb
cmp
pusha
cmpsb
lret
add
pop
pusha
ret
jb
orl
mov
hlt
mov
dec
cltd
cltd
loopne
xchg
jbe
cmp
call
mov
rorl
in
pop
loope
in
fwait
jecxz
mov
adc
lahf
loope
push
mov
std
push
pop
les
dec
mov
jl
dec
pop
in
lods
rcl
sub
dec
out
mov
test
ja
adc
stc
adcb
pop
aaa
sahf
mul
inc
add
push
stc
in
cmc
test
xchg
movsl
xchg
dec
adc
cmp
inc
adc
inc
imul
jbe
cld
pop
shrb
push
pop
mov
jns
or
fs
xchg
adc
ret
adc
js
ljmp
enter
mov
and
mov
jns
outsb
jnp
aad
ds
cmp
aas
jmp
fsubr
dec
push
stos
jmp
arpl
std
jo
adc
push
and
jecxz
sub
sbb
push
popf
inc
lahf
in
ret
es
or
mov
clc
enter
shll
cltd
adc
movsl
and
mov
lret
add
xchg
outsb
pop
hlt
xchg
movl
mov
mov
and
sub
or
mov
imul
mov
jmp
loope
mov
and
les
aas
fwait
adc
stos
movlps
sar
lea
shr
mov
xor
inc
cmc
xorb
ds
xor
cld
or
das
push
iret
cmpsb
dec
xchg
leave
mov
sub
je
add
fucomip
loopne
or
mov
inc
adc
push
jmp
sub
in
cmpl
and
jp
push
jnp
es
pop
vmovaps
push
add
insl
aad
mov
lret
sbb
movsb
test
mov
divl
mov
fdivr
jle
adc
xor
cltd
int
lcall
sbb
insb
mov
or
mov
mov
mov
pop
pop
frstor
pop
mov
sbb
xchg
jae
sbb
xor
sub
xchg
loop
mov
out
and
les
sbb
push
pop
nop
mov
dec
test
in
xchg
mov
and
ret
mov
scas
xor
loope
test
dec
and
pushf
call
lods
fbstp
mov
insb
test
or
and
aam
lods
pop
pop
fs
nop
mov
mov
sub
dec
es
push
mov
outsl
inc
cltd
jge
adc
jl
sbb
push
cmp
inc
enter
stos
addb
dec
mov
shl
imul
xchg
loope
jecxz
repz
stc
add
pop
icebp
fwait
ret
cmpsb
sub
jne
sbb
sub
cmp
stc
mov
jo
mov
push
xchg
rep
ror
imulb
cmp
pop
lcall
pop
ljmp
out
add
outsb
rcll
movsb
xor
loope
ret
nop
xchg
sub
fadds
lcall
mov
pop
cmp
leave
cli
imul
inc
int
out
push
outsb
jg
data16
sbb
in
fimuls
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
jmp
inc
or
pushf
ds
fdivrs
cltd
adc
pop
adc
adc
negb
repz
mov
test
jl
jle
xchg
out
adc
and
fdivl
outsb
sbb
mov
shll
into
or
mov
add
mov
sub
fs
cli
cmp
xchg
xor
les
nop
or
jle
add
fwait
dec
or
leave
pusha
fs
je
mov
and
and
lahf
pop
jb
inc
dec
lret
push
cmp
xchg
pop
test
adc
adc
xor
and
mov
pushl
out
adcb
pop
or
mov
into
movsl
aam
sbb
popf
in
in
xchg
xchg
fistl
into
popa
mov
adc
repz
out
cli
in
iret
jl
shll
mov
icebp
mov
test
fadds
sti
mov
dec
imul
pop
aad
jne
pop
test
popf
enter
sbb
ret
or
sub
xor
movsb
stos
xchg
mov
dec
add
lcall
outsl
jns
and
lcall
imul
cmpsl
je
sbb
adc
or
je
leave
pushf
adc
stos
pop
inc
daa
dec
and
mov
int
aad
subb
scas
movsb
dec
pop
xchg
push
ljmp
adc
rclb
scas
ret
mov
mov
pop
cmp
mov
js
cmpsb
cld
adc
movsb
lret
mov
pop
mov
pop
pop
testl
nop
and
sub
cmp
dec
adc
gs
inc
call
out
aaa
aas
lods
xchg
push
jne
push
test
and
inc
push
ret
push
jl
sub
xor
sub
aad
hlt
adc
dec
pop
lea
sub
mov
js
cmp
js
adcb
in
rcrl
jns
loop
xlat
xchg
inc
arpl
mov
push
jl
or
mov
std
inc
imul
jae
jb
pop
mov
mov
cmp
sbb
mov
cmp
popa
sbb
in
fistps
dec
pop
out
xchg
scas
cld
and
stos
aaa
rorl
mov
imul
xchg
mov
je
insb
pushf
xchg
scas
push
xchg
jnp
inc
pop
cmp
cmp
jle
ss
ja
je
xchg
outsb
loopne
or
fcmovnb
popl
mov
fstpt
test
ror
inc
lret
xchg
xor
je
adc
pop
je
jmp
leave
jno
cwtl
mov
push
mov
xchg
into
cmp
inc
inc
jge
sahf
push
jne
dec
mov
loop
add
jp
aaa
es
in
sahf
lahf
mov
add
jmp
pop
pop
or
ret
pushf
mov
and
enter
arpl
mov
mov
add
ret
decl
lcall
dec
pop
adcl
fistps
clc
jl
shr
sbb
jmp
xor
push
push
test
pushf
jbe
sar
mov
leave
pop
loop
pop
cwtl
ret
dec
scas
push
mov
pop
movsb
inc
pop
push
mov
fldcw
mov
and
adc
push
scas
psubsb
cmpsb
dec
mov
inc
pop
jo
inc
mov
shrb
out
lret
cmc
ss
mov
add
mov
adc
dec
sub
mov
cmp
mov
roll
mov
scas
loope
enter
mov
dec
aad
dec
mov
movsl
inc
pop
xchg
inc
negb
inc
xchg
mov
sbb
mov
cld
xor
lret
jbe
jmp
call
out
push
jne
mov
push
jae
and
inc
add
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
jmp
pop
pop
scas
outsb
scas
pop
sbb
cmp
push
push
insb
sarb
xchg
adc
pop
adc
adc
out
adc
sbbb
sti
aaa
mov
xchg
aas
in
or
scas
jle
cmc
push
lret
mov
int3
xchg
jbe
pop
in
cmpb
cli
ja
lock
pusha
sbb
lock
loop
lcall
cmp
sbb
movsl
mov
jno
pop
lock
xchg
cmp
int3
inc
jg
jl
push
inc
lock
in
lret
rclb
sub
pop
lret
stos
mov
stos
aam
imul
adc
push
cmp
hlt
cmp
and
outsb
lods
movsb
outsb
sub
lea
loop
cltd
in
mov
adc
pop
fs
mov
jp
hlt
sub
push
mov
xlat
mov
xor
mov
push
sbb
insb
mov
int3
stos
ljmp
xchg
jnp
lahf
aam
mov
int
jle
bsf
ljmp
sub
mov
sbb
adc
dec
push
push
aas
mov
and
mov
cmpb
shll
pop
and
popf
shrl
mov
hlt
mov
out
pushf
lahf
fnstenv
pop
popa
cmp
dec
sbb
loope
cmp
scas
adc
mov
sub
es
sbb
sbb
es
arpl
and
pusha
mov
pop
and
or
sbb
bound
sub
pushf
or
mov
roll
push
add
dec
lcall
sbb
addr16
mulps
mov
flds
dec
sub
cltd
loopne
iret
dec
add
and
xor
cli
mov
or
mov
jecxz
outsl
cmc
inc
mov
add
pop
push
jns
inc
push
adc
lods
lods
or
hlt
xor
dec
cli
adc
in
hlt
das
hlt
stc
or
lock
je
fidivrs
cltd
cmc
push
sub
in
sbb
lods
movsl
mov
mov
inc
adc
pop
cmp
jge
insb
pop
out
cmp
lods
fcompl
leave
pop
push
adc
xor
jno
sub
sub
into
sahf
cmp
mov
jno
outsl
and
ljmp
add
jae
dec
pop
inc
mov
rcr
dec
or
pusha
cmc
test
jle
sub
inc
imul
fisttpl
pop
mov
loop
outsl
sbb
scas
test
cmc
rcll
jle
out
mov
call
xor
fs
or
add
movsb
cmp
dec
mov
cmp
cmp
sbb
inc
add
add
fxtract
xchg
mov
stc
xor
mov
push
rcrb
cmp
stos
mov
lret
inc
fdivrl
stos
cmpsl
aad
adc
mov
nop
mov
pop
xchg
pop
cltd
or
sub
cmp
jle
mov
bound
mov
xchg
pop
sbb
xor
addb
jo
nop
add
fiadds
repz
cmpsb
movsl
xchg
jnp
mov
sbb
movsb
insb
add
cli
in
mov
inc
adcb
jno
in
push
rorl
aaa
dec
sbb
or
rcr
jp
pop
sti
leave
arpl
pusha
xlat
add
cs
scas
and
or
pop
fwait
sub
dec
dec
aad
xor
or
stc
xlat
test
adc
xor
push
aad
push
or
ljmp
sbb
mov
dec
xor
ffreep
arpl
jns
into
rcrl
cli
in
rep
sbb
xchg
pop
mov
fnstcw
xchg
scas
and
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
ret
loopne
icebp
xchg
stos
mov
stos
test
xchg
js
mov
adc
movlps
mov
das
fbstp
repz
pop
inc
adc
int
sbb
mov
mov
sbb
xor
sbbb
jae
test
into
pop
push
pop
mov
lods
les
fsubp
add
sbb
dec
scas
sub
fstps
mov
mov
aas
adcl
dec
popa
cmp
mov
data16
mov
out
push
into
mov
jle
fsts
xchg
mov
jo
cmpb
mov
inc
icebp
xchg
pushf
push
sbb
adc
aaa
mov
add
xor
test
stos
mov
pushf
adc
sub
pop
inc
call
and
jb
jno
jmp
sub
icebp
mov
ds
aad
jb
jo
xchg
rcrb
add
fwait
xchg
mov
cmp
xorl
push
cmpsb
sbb
repz
daa
lock
fdivs
inc
fidivrl
stos
xor
outsb
pop
and
pop
jmp
jne
loope
aaa
cmpsb
nop
jp
push
enter
cli
fucom
xor
xor
push
dec
inc
pop
in
mov
leave
adc
jne
jp
xor
add
icebp
outsl
stos
mov
xchg
or
jmp
pop
int
add
adc
adc
sbb
cltd
or
outsb
pop
pusha
jnp
mov
das
xchg
je
cmp
lds
pop
cltd
call
es
or
push
cmp
xor
aad
stc
std
out
test
cmp
repz
shrb
cmpsl
popf
jne
stos
addl
insb
or
xchg
xor
aas
mov
ds
bnd
jne
pop
pop
add
ret
arpl
pop
std
xor
loopne
cli
inc
loope
adc
jnp
adc
and
add
mov
popf
or
pop
insl
fisubs
popf
outsb
addr16
in
dec
adc
adc
fwait
call
jae
imul
std
push
call
push
pop
bound
sub
icebp
loopne
out
fs
cmpl
mov
mov
add
xchg
cmp
and
cmc
popa
fbld
xor
scas
or
jno
pop
mov
arpl
icebp
scas
jo
dec
nop
push
push
pop
pop
dec
or
in
sar
ret
and
mov
push
xor
insb
test
push
dec
popf
rsqrtps
mov
repz
das
pop
cmp
adc
pop
enter
sbb
jb
mov
aam
cmp
movsl
adc
loopne
aad
xor
xchg
sub
mov
iret
jg
push
mov
fnsave
lahf
mov
popf
and
push
mov
cmp
fwait
mov
call
setb
sbb
xlat
sub
mov
cltd
jg
inc
push
xor
mov
mov
sbb
or
add
inc
enter
add
inc
int3
cmp
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
jmp
cmp
iret
sbb
pop
push
lret
test
repz
adc
movlps
mov
xor
fsubrs
inc
add
rcrl
sbb
andl
add
and
out
pop
int
cld
inc
pop
hlt
lret
sub
cmc
call
pop
into
mov
pop
xchg
daa
sub
outsl
fs
enter
dec
movsb
scas
mov
lods
call
push
aam
push
dec
sbb
jg
fidivrl
sahf
pop
xlat
mov
repnz
jne
push
jp
mov
pop
dec
inc
or
icebp
popf
dec
mov
in
mov
add
mov
dec
in
jne
and
push
insb
aas
addr16
popf
xchg
cmpsl
lea
push
pop
lahf
inc
xlat
sbb
cwtl
fistl
and
add
cs
lret
sbb
jns
lcall
mov
mov
adc
movsl
cmp
in
repz
pop
imul
lds
out
xchg
mov
imul
out
callw
adc
push
jl
in
dec
mov
pop
mov
sti
mov
fstl
ficoml
dec
mov
jno
dec
inc
lahf
jmp
push
dec
push
cmp
mov
cmc
jecxz
sub
xchg
inc
call
outsb
mov
in
or
pop
iret
in
mov
popf
jne
xchg
dec
rolb
pop
fstl
dec
test
out
repnz
repz
xor
in
cmp
mulb
cmc
fildl
sbb
jg
mov
repz
inc
sbb
mov
cmpl
divb
scas
cmp
jge
in
and
lahf
test
lods
xchg
repz
cmp
mov
fwait
bts
cmp
jnp
shl
jns
int
js
cltd
fiadds
out
outsb
loope
mov
or
jb
in
repz
loopne
aas
int3
cmp
cmp
adc
pop
cmpsl
sub
and
in
imul
fisubl
aas
js
mov
js
iret
in
xchg
data16
test
push
mov
shll
push
bound
mov
mov
xchg
js
jecxz
aad
jae
push
cld
lea
sbb
aaa
pop
imul
lcall
es
je
movsb
in
xor
insb
mov
arpl
adc
add
scas
repz
add
pop
sub
pop
sbb
mov
fsubs
fnstcw
push
shrb
adc
mov
cwtl
xchg
jp
dec
push
data16
scas
mov
cmc
sbb
pop
jge
jb
xchg
nop
das
pushf
push
adc
inc
adc
xor
outsl
adcb
ljmp
push
dec
push
cs
inc
push
push
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
jmp
inc
in
sbb
sbb
fisttpl
xchg
js
jge
adc
movlps
shr
sub
sbb
dec
mov
and
iret
in
or
xchg
inc
dec
cmp
test
inc
push
and
mov
xchg
inc
xchg
cmp
xchg
ror
sub
lcall
cmpsb
pop
xchg
and
fs
xor
mov
rolb
stos
fmuls
stos
and
pop
ud0
stos
popa
pusha
mov
sbb
nop
jnp
stos
mov
jae
insb
mov
jne
lret
into
cltd
clc
pop
lods
xor
lods
mov
in
cmp
inc
subb
xchg
jmp
add
imul
lds
or
lret
repz
mov
dec
pop
push
jle
divb
adc
cmpb
adc
lret
mov
fcomip
shl
inc
jecxz
ja
arpl
in
add
xor
mov
pop
push
aam
cld
scas
mov
movsl
push
mov
cmpsb
mov
test
add
jle
cmp
daa
and
lds
in
stos
xchg
outsb
inc
mov
loopne
faddp
fisttpll
cmc
jns
and
mov
fwait
addb
mov
outsl
pop
call
gs
icebp
jbe
cwtl
insl
leave
fcomps
push
xchg
rcr
push
jmp
pop
sbb
cmp
movsl
movsl
adc
repnz
xchg
hlt
and
adc
popf
xchg
mov
enter
xchg
push
fs
dec
pop
imul
rclb
push
sub
gs
inc
idivl
xor
dec
fmulp
dec
int
inc
mov
jl
mov
pop
add
cmp
xchg
mov
add
lods
std
jecxz
pushf
push
add
ds
cli
mov
mov
adc
mov
shl
pop
cmp
into
sbb
lcall
gs
mov
push
push
out
push
sahf
jbe
adc
shlb
fcom
rclb
xchg
fstp
mov
xchg
ljmp
adc
repz
in
add
sub
mov
and
jge
cld
sti
lds
pop
loop
sub
hlt
in
push
cli
xchg
outsb
mov
adc
mov
aas
shll
push
inc
lret
dec
xchg
pop
pop
jb
add
xchg
or
xor
into
jb
mov
leave
add
jecxz
fildll
cmpsb
push
fs
or
loopne
test
add
out
dec
adc
fists
lret
rolb
aam
pushf
cmp
add
lods
push
js
loope
out
pop
ror
clc
mov
cs
xor
pop
ss
data16
cs
xor
and
mov
xchg
je
daa
jae
jae
iret
adc
push
mov
sub
mov
and
mov
xchg
xor
and
cmpb
repz
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
jmp
and
sbb
loope
stos
dec
pop
dec
mov
or
cs
call
jnp
or
loope
ret
add
mov
loop
jbe
fucomp
es
gs
test
mov
scas
xor
cmpsb
mov
nop
add
mov
sub
and
xchg
hlt
push
mov
ss
sub
mov
jno
mov
rolb
sub
pushf
xor
push
iret
clc
jl
dec
push
or
mov
mov
add
cmp
lret
lea
loope
jae
mov
mov
lahf
adc
jl
xor
xor
jmp
xlat
sub
lods
int
scas
push
subb
test
inc
add
pop
sti
ret
and
dec
into
xchg
pop
sub
lds
mov
adc
mov
cmp
jmp
xor
lea
inc
imul
cmp
or
push
sub
into
les
sbb
iret
or
aas
cmp
or
inc
inc
cmp
xor
xchg
dec
mov
in
pop
mov
and
mov
dec
pop
fadd
repnz
sub
add
push
cmp
repnz
rolb
cmp
push
xchg
fsubrl
pushl
sbb
mov
dec
sbb
xor
mov
cmc
mov
push
add
sbb
inc
mov
mov
add
cmp
sub
insl
push
pop
jb
in
fsubrl
outsl
inc
pop
int3
dec
test
fisubrl
push
jne
xor
daa
add
rclb
and
pop
fwait
mov
mov
into
and
jne
lods
pop
pop
outsb
mov
fwait
sbb
inc
inc
and
mov
xchg
mov
js
lret
add
fcomps
popa
jne
mov
fs
in
mov
and
out
jle
test
xchg
out
inc
mov
int3
es
cmp
repz
test
lds
leave
rol
fistpl
mull
inc
cmc
mov
jne
xor
cmpsb
rorl
mov
inc
xor
in
mov
jae
stos
cmc
adc
subb
mov
pop
adc
mov
das
divl
lods
sub
jg
xor
call
add
mov
in
pop
sahf
jo
mov
gs
sub
pop
pop
ficoms
lret
adc
mov
pop
mov
jbe
stc
rcl
jne
fnstsw
outsl
push
sbb
mov
subl
add
mov
sbb
push
push
pushf
sub
jle
jecxz
fmul
sbb
xchg
xor
mov
in
scas
jnp
pmaddwd
xor
lcall
push
sub
cmpsb
fcoml
sub
inc
popa
mov
outsb
fstpl
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
jmp
push
daa
sahf
xchg
sbb
add
lahf
mov
mov
add
adc
jge
loop
stos
lcall
sti
out
inc
mov
and
div
dec
push
sarb
scas
data16
nop
or
es
push
mov
and
mov
into
jle
mov
dec
pop
ss
mov
pop
pusha
xor
adc
in
add
gs
jno
mov
add
enter
sbb
lcall
insl
or
or
adc
test
test
and
and
xor
sti
into
lds
pop
ljmp
imul
or
push
sub
loope
and
sub
sub
jnp
sbb
or
push
dec
stos
fcompl
push
filds
push
fildl
imul
or
stos
xchg
ds
dec
inc
or
mov
iret
out
clc
bnd
mov
pop
jbe
pop
jg
cmp
jp
sbb
mov
cs
push
icebp
mov
sub
mov
mov
movl
mov
xchg
push
push
in
or
push
cmp
push
mov
mov
das
and
inc
xor
sbb
sub
xchg
xor
adc
xchg
jecxz
fstps
and
jns
xchg
xor
notl
xor
int3
sbb
sti
addr16
popf
ret
clc
loope
push
sbb
test
jno
xor
test
xor
inc
imul
call
aaa
dec
jmp
subl
cs
sub
add
out
dec
in
pop
dec
mov
mov
pop
ja
sbb
mov
test
lret
mov
jo
lahf
aad
in
mov
aad
int
movsb
cmpsb
loope
int
mov
xor
push
jl
push
in
pop
pop
pop
rcr
adc
scas
jb
stos
fwait
test
std
cmpsb
push
dec
dec
mov
inc
loopne
out
out
arpl
mov
push
inc
sti
icebp
pop
mov
aad
or
pop
or
scas
jge
cmc
push
stc
aam
test
mov
xlat
mov
gs
mul
xorb
jp
outsl
inc
push
out
xlat
jbe
xor
push
add
rcll
xchg
iret
xchg
and
fidivrl
jae
inc
int
xor
mov
lock
mov
jp
cmp
xchg
adc
cmpsb
dec
pop
pop
xlat
hlt
ds
inc
cmp
out
jecxz
outsl
cld
and
xchg
notb
stc
sbb
fsubrl
not
jns
aam
fwait
inc
rorb
out
cmp
or
mov
imul
sahf
mov
add
roll
fldenv
push
mov
mov
cmc
sub
mov
cmp
xor
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
jmp
pop
mov
sbb
sbb
mov
hlt
jl
arpl
adc
or
push
xchg
das
adc
or
nop
sub
xchg
movl
jae
pop
repz
frstor
jo
lock
dec
inc
mov
sbb
jp
push
cwtl
fdivrl
jnp
out
and
out
sti
xor
rcrb
fmull
push
sub
fs
add
lahf
enter
rcrl
into
pop
ss
push
outsb
addb
pop
add
and
pop
adc
or
xor
mov
inc
lea
insl
imul
xor
push
sbb
fisubrs
into
sbb
movsb
mov
sbb
pop
iret
lods
pushf
mov
and
sub
inc
push
cli
add
pop
add
add
sarl
sub
pop
cli
clc
jae
inc
cltd
and
aam
xor
mov
dec
lea
mov
push
lea
mov
loop
sub
aaa
es
int
jge
pop
lcall
xlat
jb
cmpsl
cmp
out
hlt
xchg
jg
inc
leave
sarb
sbb
sbb
push
push
sbb
cwtl
addl
xchg
mov
rorl
mov
lret
pop
bound
cmp
xchg
or
pop
sub
outsb
mov
jge
pusha
lock
pop
mov
jp
push
and
addr16
sbb
addb
sub
mov
xchg
or
pusha
xlat
xor
push
sub
addb
dec
lds
dec
outsb
into
movsb
out
push
adc
out
lods
test
add
lock
std
out
daa
pop
cmp
sbb
and
adc
mov
push
je
into
stc
dec
jl
inc
loop
push
pop
enter
adc
mov
insb
sbb
pop
aam
xchg
jmp
inc
in
ss
int
pop
push
dec
sub
sub
mov
dec
or
stos
lahf
dec
add
adc
push
push
shrb
dec
add
in
cmp
lret
mov
fsubp
lret
push
xor
dec
ds
fistpl
mov
leave
es
lret
push
add
iret
mov
aas
lods
cmp
out
pusha
dec
lds
push
or
rclb
jl
in
dec
jle
or
movsb
or
adcl
push
mov
push
test
cld
mov
mov
sub
test
xchg
sub
les
rorb
lret
cmc
div
jbe
pop
jg
divb
mov
fdivs
loop
je
pop
xor
stos
push
inc
rorb
inc
imull
dec
push
xor
lock
rclb
adc
dec
nop
outsb
dec
aas
leave
inc
iret
data16
out
add
add
pop
jecxz
scas
push
pop
mov
sub
test
add
add
add
add
push
add
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
jmp
xchg
mov
ret
sub
lcall
adc
jb
adc
mov
ja
cmpsl
jnp
mov
sbb
clc
jle
ljmp
xchg
push
arpl
dec
aaa
xor
dec
adc
cwtl
test
sub
xchg
les
das
add
faddl
out
fwait
mov
leave
test
push
adc
dec
je
push
fiadds
xor
push
inc
lods
cmp
repnz
popf
aam
jmp
mov
lods
xchg
xor
ret
pop
mov
bound
gs
cld
les
push
sar
rolb
enter
aas
popf
jbe
pop
ret
jg
mov
inc
add
dec
sub
cld
test
aas
mov
mov
loop
lds
add
pop
lcall
adc
outsl
adc
push
cmp
scas
lcall
sbb
jo
or
stos
inc
enter
cmp
pop
mov
shl
and
movsl
call
push
sub
cmp
bound
xor
jmp
inc
cmp
fdivp
movsb
movsb
mov
mov
sbb
pop
mov
scas
mov
push
insb
repnz
shrb
dec
pop
push
mov
stos
cmpl
cmp
push
aad
cmpsb
xchg
jns
sub
xchg
jbe
je
or
enter
pop
mov
jbe
mov
bnd
leave
aam
dec
mov
mov
and
or
call
mov
mov
mov
xchg
mov
lds
jmp
mov
jno
xlat
adc
cs
cmp
inc
or
sahf
pop
aaa
push
inc
push
in
add
sub
jb
cmp
jle
dec
gs
add
subb
push
xbegin
call
mov
out
sub
or
mov
out
xchg
cmp
mull
adc
lret
loop
nop
ret
xor
mov
fidivrs
popf
push
mov
adc
xorb
ds
cmc
shrl
cwtl
cmp
push
loopne
loop
mov
jg
mov
lods
fsubrs
dec
roll
push
xchg
dec
fldcw
das
xor
or
jg
shlb
xchg
sub
sbb
cs
mov
fstpl
mov
in
loopne
sbb
jo
lcall
push
mov
dec
rcll
mov
test
and
stc
jecxz
adc
adcl
les
fs
pop
ss
pop
mov
subl
push
fsubr
dec
add
or
xor
add
addb
or
dec
call
jns
mov
int3
shlb
mov
mov
sbb
cwtl
aas
sub
pop
pop
testl
std
into
cmpsb
push
testb
sub
sub
shrl
nop
mov
push
cmp
andb
mov
xor
sbb
cld
xchg
sbb
dec
pop
mov
push
ss
push
mov
sbb
sar
pop
scas
test
insb
aas
jne
lea
inc
sbb
mov
call
stc
dec
dec
adc
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
jmp
movsb
pop
rclb
push
cmpb
pop
testb
jp
adc
or
loopne
mov
stos
repz
jns
and
mov
fwait
cmp
cmp
inc
jae
ljmp
inc
pop
or
loope
daa
cmpsb
jp
jbe
cli
inc
nop
or
fcompl
iret
cmpsb
lcall
jle
sub
shr
push
shll
push
repz
cltd
out
dec
hlt
aad
or
adc
lods
fldl
adc
or
cmpsb
cmp
pop
orl
mov
nop
cmp
fwait
jp
insl
fldenv
dec
sbb
hlt
std
mov
daa
outsl
movb
mov
lods
popa
scas
out
mov
dec
nop
adc
popf
sarl
daa
mov
int3
stos
je
push
pop
jb
push
rcrb
xchg
hlt
adc
lock
aas
popf
push
mov
lods
in
jb
pop
loope
lock
shl
push
jp
test
mov
cmpsl
stos
fistpl
loopne
sbb
das
xor
arpl
rcrl
je
cld
xorps
add
sahf
scas
stc
aam
lods
mov
push
mov
pusha
repnz
test
fisttps
jns
pusha
cs
adcb
mov
addb
cmc
push
push
out
repnz
cs
fwait
scas
sbb
lods
das
shl
mov
iret
push
pop
subl
xor
aas
in
fnstenv
loope
pop
inc
in
inc
push
xchg
scas
scas
inc
fs
flds
mov
adc
jae
or
xchg
sub
stos
stc
mov
jle
and
test
pop
in
lods
aas
push
sbb
push
inc
dec
xchg
adc
imull
outsl
mov
shll
push
into
inc
xorb
sbb
pop
xlat
stc
sub
inc
sarl
enter
cmp
push
xchg
xchg
pop
sbb
add
shlb
aad
enter
std
daa
xchg
sbb
dec
aaa
pop
daa
sub
sub
nop
add
sti
cmp
stc
sub
fs
and
adc
out
aam
out
xchg
cmp
dec
lcall
mov
es
mov
aas
insb
and
sub
cmpsb
lock
mov
xor
inc
sbb
icebp
lcall
test
xor
cmp
outsl
push
stos
lahf
sub
out
enter
testb
addb
xchg
dec
stc
fs
jbe
xchg
ss
inc
xlat
cmpsl
ret
push
insb
iret
repnz
mov
fsubs
movsb
pop
push
mov
lea
mov
jmp
fstpl
jge
mov
push
setp
cmp
xchg
daa
or
inc
lea
movsb
jecxz
mov
fcmovnu
cmc
popa
and
lods
sbb
lds
mov
jp
jecxz
test
mov
cli
insb
popf
jmp
iret
fisttpll
cmp
and
ds
pop
pusha
insl
sub
inc
jns
cmc
push
jmp
jnp
test
inc
cwtl
inc
pusha
mov
dec
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
jecxz
in
bound
pop
jne
inc
stos
xor
lods
test
adc
adc
cmpsl
in
cltd
into
adc
jns
xor
clc
sahf
jo
sub
jb
push
inc
inc
fsubl
xor
dec
dec
mov
movsl
ss
test
jle
fmuls
pushf
mov
cmp
pop
jge
push
xor
push
sbb
cli
mov
outsb
negl
mov
ljmp
out
xchg
push
sub
xor
out
or
xor
jb
xchg
ss
pop
addr16
mov
sbb
pop
sub
sar
mov
ja
sti
xor
sub
xor
aam
adc
aam
mov
sub
xchg
jae
cmp
sub
lret
aad
out
push
imul
pop
pop
push
popf
or
sub
mov
inc
negb
test
pop
push
cli
popa
sub
xor
sub
pushf
pusha
je
fcmovnb
aas
dec
adc
rcll
sub
mov
mov
jns
xchg
mov
add
mov
and
fsubr
xor
pop
cmp
push
jns
aaa
dec
icebp
inc
imul
dec
cmp
sbb
fstl
in
pop
cmc
lret
push
in
mov
dec
dec
add
sbb
shrb
sbb
scas
fcmovne
cltd
cltd
mov
sbb
aam
pop
shrb
inc
mull
ljmp
xorb
add
shr
mov
or
inc
push
jne
mov
xchg
test
mov
inc
les
or
inc
mov
out
pusha
int3
push
incb
push
cli
fs
jno
jge
push
xchg
fldt
and
mov
push
jge
lahf
cmp
fidivrs
mov
and
out
cmp
dec
mov
xchg
cmpsb
mov
push
inc
mov
out
in
jae
push
dec
jge
lcall
mov
adc
rcrb
jmp
xor
lahf
jg
push
lods
int
jne
das
cmp
int
lods
dec
mov
outsl
mov
cltd
stos
mov
sbb
jmp
mov
std
jg
mov
sub
cli
cwtl
or
mov
xchg
xor
mov
mov
xchg
fsubrs
frstor
cmpsb
fs
std
js
bound
or
lock
andl
xor
cmp
mov
jmp
and
clc
mov
pop
ficoms
and
inc
sub
in
jne
mov
lret
movsl
inc
ljmp
mov
mov
sbb
add
out
adc
pop
pop
in
popa
scas
xchg
xor
inc
mov
lcall
mov
xchg
das
popl
mov
push
xor
loope
xchg
push
mov
lds
pop
xor
cmc
ffree
adc
nop
out
scas
test
cmpsl
adc
int
insb
dec
notb
fwait
nop
bnd
sbb
push
lds
fmuls
jnp
add
lea
mov
shr
or
mov
jmp
pop
pop
mov
push
fisttpll
cmc
stos
pop
push
adc
jp
adc
js
scas
sbb
std
or
int3
lock
mov
movsl
jmp
inc
imul
add
stc
aas
adc
pop
repz
dec
xor
sahf
push
int3
xor
sarb
cmc
pusha
pop
xchg
cltd
inc
mov
pop
xchg
or
push
out
jbe
in
jo
xor
push
mov
mov
out
std
sarl
xor
xor
push
pop
insb
or
ja
pusha
push
mov
fsub
jbe
aad
dec
outsl
nop
cmpsb
addr16
pop
mov
imul
jg
pop
rorb
adc
push
xor
bound
cmp
loopne
mov
or
ret
adc
fs
popf
ss
in
ja
aaa
js
sbb
sub
mov
mov
gs
fimull
inc
adc
call
shll
cmc
in
xchg
and
orl
ss
cmp
out
loope
xchg
ret
mov
jmp
stos
cmc
xchg
or
rol
leave
jnp
sub
fisubs
sub
xor
mov
ja
out
out
inc
cmp
in
mov
shr
in
int3
sahf
enter
test
mov
cmp
adc
adcl
mov
xchg
cs
cmp
in
adc
loop
outsb
fisubs
jp
jmp
push
arpl
repnz
xchg
xor
rcr
rorl
mov
jns
mov
xor
cmp
inc
subb
scas
xor
xlat
push
pop
cmc
dec
mov
mov
loope
lods
mov
sbb
push
mov
sbb
pop
or
fs
cltd
or
dec
shll
or
cs
add
cltd
jbe
test
addl
in
call
mov
repnz
das
fldt
data16
mov
ss
add
sub
pop
xor
mov
bound
mov
cmpsl
mov
stc
mov
mov
or
call
xchg
leave
inc
popf
out
xchg
xlat
cmp
js
mov
es
aad
cltd
outsl
ss
testb
das
int3
jne
mov
lock
int
sub
inc
out
lret
mov
mov
iret
dec
pusha
shlb
scas
mov
pop
mov
push
or
aam
xchg
mov
mov
mov
das
push
mov
push
adc
sbb
rorb
loop
stc
jnp
loop
adc
push
adc
fdivl
lock
mov
ljmp
sbb
mov
jo
jbe
in
mov
mov
lea
jge
or
and
js
dec
and
xchg
sbb
mov
jg
dec
les
imul
xchg
adc
call
xor
cmc
jecxz
sub
ficoml
fdivs
push
adc
aad
ret
push
sbb
and
bnd
sub
sarb
adc
inc
sarb
out
mov
inc
sbb
push
inc
add
cmp
jbe
pop
leave
ret
push
mov
sub
mov
add
push
push
add
push
or
mov
sbb
mov
shrd
cmpl
movzbl
movl
mov
jmp
mov
mov
jne
push
push
push
pushl
push
pushl
call
orl
and
mov
mov
sbb
sub
negl
shr
cmpl
movl
mov
jmp
movzwl
jg
push
push
pushl
call
add
movzbl
adc
mov
adc
movzbl
sbb
xor
xor
xor
mov
sub
sub
mov
adc
mov
movzwl
or
mov
mov
movzbl
xor
xor
xor
mov
xor
mov
or
neg
mov
mov
sbb
shl
mov
sbb
shrd
sub
xor
adc
shr
xor
or
add
mov
jmp
jnp
add
mov
ficoms
push
jne
jle
inc
adc
lea
adc
mov
xchg
push
and
dec
and
jbe
stos
loop
mov
es
or
int
mov
loop
push
fwait
mov
pop
sbb
jnp
cmp
push
repz
fmul
arpl
aaa
xor
xchg
sbb
loop
sbb
adc
jo
aad
loop
xchg
lods
clc
jp
and
mov
addr16
add
push
push
push
adc
das
ret
addr16
lock
lock
bound
cmp
jp
lds
in
scas
mov
clc
cmp
out
ret
push
add
lock
mov
gs
push
push
out
mov
lret
arpl
xor
out
or
bound
lret
jecxz
xchg
inc
cs
lock
add
pop
pop
arpl
test
dec
jo
mov
movsl
add
ds
xchg
vucomiss
outsl
aad
cmp
clc
movsl
ds
mov
scas
insb
clc
into
fwait
fwait
lret
jbe
or
inc
jecxz
mov
lea
scas
inc
out
sbb
loopne
sbb
cs
cmp
fisttps
jae
ficoms
scas
inc
icebp
and
loop
inc
imul
inc
int
xchg
xchg
imul
mov
imul
aam
stos
testb
xor
mov
jb
aad
or
sub
mov
mov
jl
sub
sti
gs
pop
mov
sbbl
xlat
xor
mov
jbe
xor
pop
or
inc
pop
inc
aad
jp
sub
into
push
ret
pop
movsb
jp
int3
cld
jp
stc
sbb
mov
shrb
mov
jo
lods
mov
xor
mov
adc
std
sahf
push
in
inc
gs
mov
xlat
adc
test
cmc
push
dec
int3
nop
or
cmpsb
add
rcl
xchg
jp
sub
clc
stos
nop
pop
push
mov
adc
cmp
inc
js
int3
jmp
jb
xlat
in
mov
inc
and
xor
push
nop
and
lahf
xchg
jl
inc
cmp
adc
xchg
mov
or
lock
iret
out
call
ljmp
iret
xor
test
idivb
mov
insb
fimuls
insl
inc
jno
int3
push
inc
icebp
mov
mov
sbb
push
test
mov
lret
andl
inc
cmp
jno
dec
pop
imul
xchg
rcrb
scas
lcall
or
add
loope
add
xchg
mov
sub
les
loopne
adc
lea
adc
jns
sbb
mov
sbb
icebp
mov
and
adc
loopne
aas
jl
scas
pushf
xlat
sarl
jecxz
loop
sbb
nop
push
test
jo
xor
aas
js
lods
jp
ss
fcompl
gs
or
stc
cs
mov
rclb
mov
sbb
jecxz
call
fsub
xor
xchg
lret
push
movsl
mov
popa
cld
and
jns
subb
and
cltd
pop
xchg
mov
push
inc
mov
or
lods
inc
nop
dec
jge
aad
gs
push
shlb
pusha
std
pop
cmpsl
inc
leave
sahf
cwtl
or
test
fnstenv
fcmovb
std
jl
xchg
movsl
push
add
inc
dec
pop
mov
dec
dec
test
daa
repz
jae
add
insb
and
jp
mov
icebp
call
hlt
outsl
fdivrl
inc
push
xchg
loope
sbb
sbb
lcall
mov
mov
cmp
std
pop
push
adc
jbe
dec
icebp
dec
or
mov
popf
lea
loope
mov
add
jmp
sub
ss
pop
jecxz
inc
mov
and
daa
sbb
mov
inc
outsb
movsl
ficompl
adc
fsubrp
jbe
xor
adc
mov
shrl
and
xchg
shl
jmp
out
sub
xchg
aad
inc
pop
add
rcrb
inc
jge
fcmovnu
mov
sub
out
sbb
popf
sub
pop
xchg
aam
sbb
rol
xchg
pop
sbb
lea
jae
imull
push
shl
insb
movsb
into
popa
xchg
insb
dec
cmp
adc
sub
xorb
repnz
idivl
xchg
sbb
inc
mov
dec
cmp
rorb
imul
lcall
cwtl
push
xor
fsts
or
in
jmp
movsl
sub
sahf
cmp
dec
adc
out
push
jecxz
lahf
mov
adc
sbb
dec
dec
jg
dec
ds
in
cli
sahf
imul
loope
mov
push
add
fstl
rolb
pop
leave
shlb
xchg
inc
mov
shll
or
popf
jmp
insl
mov
cld
cmp
fisubrl
cmp
loop
adc
jmp
je
cmp
inc
adc
pop
add
mov
sbb
cmp
ret
and
mov
pop
and
xchg
ds
cld
adc
add
out
notl
inc
addr16
cmpsb
mov
cmpl
movl
not
mov
jmp
mov
jg
push
push
push
call
sbbl
adc
andl
mov
mov
xor
xor
or
mov
adc
adcl
neg
xor
or
mov
mov
sub
or
mov
mov
xor
or
mov
sub
sub
mov
xorl
mov
or
mov
xor
mov
movzwl
sub
mov
cmpl
mov
mov
mov
jmp
mov
jle
push
call
sub
and
subl
or
or
adc
mov
mov
cmpl
movzbl
mov
jmp
mov
jb
push
push
call
mov
xor
xor
sub
or
xorl
adc
sub
sbb
mov
shl
mov
sub
xor
or
xor
sbb
mov
xor
adcl
shld
shl
mov
mov
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
xor
xor
add
sbb
xor
xor
mov
cmpl
mov
mov
mov
mov
jmp
movl
movl
jg
push
call
movl
and
sub
subl
movl
mov
shld
movl
shl
cmp
movl
jne
movl
cmp
je
and
mov
xor
or
and
mov
push
movl
pop
or
xor
shl
mov
addl
xor
adcl
shr
addl
or
mov
or
mov
mov
mov
mov
cmpl
movzbl
mov
jmp
mov
mov
jl
pushl
push
pushl
push
call
mov
add
inc
mov
and
sub
mov
jmp
add
int3
sub
inc
les
pop
inc
adc
lea
adc
fsubs
add
sbb
mov
sub
pop
xor
into
mov
int
dec
aaa
in
outsl
cs
jle
repnz
mov
mov
andb
push
repz
push
cmpsb
xlat
out
call
test
pop
fsub
into
mov
and
lret
es
stc
push
aaa
and
jle
sbb
ret
push
add
insl
outsl
jno
sub
popa
cmp
mov
and
ja
repz
xchg
popf
mov
aam
sbb
loop
pop
push
sbb
out
jns
and
insl
bound
sti
pop
or
or
jno
and
in
pop
lret
mov
je
sar
add
fwait
jle
mov
push
and
adc
mov
jae
inc
lcall
mov
jnp
loope
push
mov
cmp
push
or
subb
in
mov
ret
add
ret
mov
cmp
mov
repnz
xor
rol
loop
test
add
mov
addr16
mov
ja
jbe
xorl
jmp
insl
shll
push
jo
aas
sahf
push
mov
or
inc
sahf
mov
cmpsb
int3
cld
sbb
cli
sub
jp
jp
push
sbb
dec
xor
outsb
pop
loop
or
fcmovnbe
out
repnz
xchg
mov
pop
jae
jnp
cmp
movsb
xchg
testw
out
clc
push
xchg
xchg
dec
and
xor
pusha
jge
inc
dec
std
insl
add
inc
xlat
das
test
fistpll
push
sbb
cmc
xor
inc
or
hlt
ret
add
adc
mov
add
ljmp
fwait
mov
push
lea
js
mov
jp
xchg
xor
jb
add
xchg
lret
gs
push
jbe
cmc
adc
dec
dec
dec
lea
and
push
loopne
inc
iret
cmpsl
mov
aaa
xor
push
js
add
mov
cmp
fcomps
std
hlt
sub
sub
jnp
movsb
inc
movsb
movsb
imul
dec
add
std
repz
mov
repnz
js
ds
dec
adc
inc
fdivrp
repnz
popf
out
pop
pop
fisubrs
faddl
jp
fsubrl
push
xor
scas
fbstp
jp
fcmovnbe
mov
fldl
cmp
jnp
cmpsb
jmp
sub
and
jns,pt
adc
cmp
aam
push
jg
sbb
jge
fs
adc
adc
push
insl
jnp
push
pop
sub
mov
subl
add
mov
cmpl
movzwl
movzbl
mov
mov
jmp
movl
movl
ja
pushl
call
or
and
or
xor
mov
adc
adc
mov
xor
mov
lea
andl
mov
addl
mov
xor
mov
xor
xorl
xor
addl
shr
subl
shl
or
mov
movl
add
mov
mov
xor
xor
andl
shr
addl
shl
sbbl
or
subl
push
lea
push
subl
lea
push
call
cmpl
mov
mov
jmp
mov
movzwl
ja
pushl
push
push
call
adc
movzbl
sub
and
mov
xor
adc
or
sub
xor
xor
mov
and
mov
cmpl
movl
mov
mov
jmp
movl
movl
jae
push
pushl
pushl
pushl
call
sbb
sub
adcl
or
sbb
xor
add
mov
sub
and
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
jmp
mov
pop
cmp
shlb
cmp
js
aaa
adc
lea
adc
lret
loope
push
insb
imul
sarl
dec
and
cmpsl
in
push
gs
dec
lock
cmpsl
subl
push
mov
movsb
adc
jne
mov
pshufw
test
fists
jns
jle
icebp
lock
mov
aaa
pop
pop
mov
xor
popf
adc
jg
clc
stos
mov
lds
stc
pop
ljmp
sahf
add
aam
nop
imulb
insl
in
cmp
lret
and
mov
scas
mov
inc
sbb
sbb
pop
in
stos
cmpsb
sbb
popf
adc
into
xchg
xchg
mov
adc
outsl
test
popf
aas
pushl
mov
jl
icebp
iret
add
popf
loopne
push
sarb
test
mov
jl
sub
mov
jp
mov
xor
stos
mov
repnz
or
scas
shlb
call
dec
jecxz
xchg
iret
sarl
cmp
nop
push
iret
jns
out
clc
mov
mov
shll
dec
out
push
add
movsl
dec
or
fwait
cmp
cs
push
das
leave
sbb
stos
cltd
repz
xor
fildl
outsb
stos
arpl
cmp
js
iret
push
or
mov
pop
jnp
fmull
mov
jo
pop
jae
and
test
cld
insl
mov
mov
lock
in
jns
ret
or
test
movsb
stc
ds
test
cltd
shrl
mov
outsl
insl
and
sbb
scas
mov
jne
out
rclb
cmpsb
icebp
in
xchg
inc
std
cmp
stos
pop
call
leave
dec
loope
out
fnstsw
mov
cmp
scas
inc
cmp
or
push
jecxz
pop
data16
jo
inc
jbe
push
int
movsl
dec
bound
sbb
bound
lret
mov
dec
stc
imul
aad
outsl
pop
es
in
movsb
arpl
cmp
repz
cmp
sbb
and
outsl
mov
out
stc
test
in
out
adc
add
sbb
cmp
sub
aaa
stos
popa
aam
int
addr16
gs
rol
pop
sbb
cmp
leave
incb
loop
add
add
iret
outsb
sti
jmp
mov
pop
or
leave
sbb
jb
test
pop
mov
lahf
jnp
mov
daa
fisubl
int3
jg
jo
push
mov
mov
xchg
stos
lea
sbb
subb
and
adc
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
jmp
xchg
sbb
sbb
insl
es
xor
adc
sub
pop
pusha
pop
mov
jl
xorl
loopne
inc
mov
xchg
push
fimull
mov
xchg
daa
or
mov
das
nop
aam
lea
divl
add
sbb
repnz
push
into
cmp
int3
popf
dec
jae
repnz
lea
jns
sahf
adc
test
lret
add
and
cmp
mov
xchg
lret
cmp
lods
ja
and
or
fucomp
mov
and
pop
or
fdivs
mov
stos
cmpsb
int3
aas
pop
inc
insb
out
mov
lret
es
mov
scas
sub
sbb
adcb
insb
xchg
std
stc
adc
das
and
in
subb
sub
inc
out
je
idiv
xor
xchg
sbb
mov
lods
lahf
out
sub
minps
cwtl
out
jnp
sbb
mov
cmp
mov
int
stc
daa
and
jmp
push
call
push
dec
mov
add
fistpll
aaa
ja
push
stos
inc
xchg
sbb
inc
in
cmp
or
cmp
xchg
mov
popa
pop
cwtl
cmc
test
inc
push
mov
add
decb
pop
sub
test
sub
and
ss
xor
imul
lea
xlat
dec
push
pusha
stc
outsl
lret
jg
sarl
push
lds
stos
hlt
jae
push
cld
xor
test
cmp
push
sub
fs
mov
sub
push
sbb
mov
fs
aaa
and
mov
jg
imul
orl
movsb
fsubr
rcll
mov
cmp
out
shll
imul
adc
scas
notl
push
fidivl
add
adc
xor
fcmovnbe
mov
or
in
daa
mov
pop
rol
push
or
mov
push
in
fcoms
in
cmc
addr16
or
push
test
std
ffreep
jg
or
dec
and
lods
insl
push
rorb
xor
gs
das
mov
call
sbb
adcl
sbb
lret
inc
xchg
gs
or
pushf
loop
pop
xor
movsb
out
dec
pop
mov
hlt
out
je
cmp
sar
xlat
pop
xor
inc
pop
test
sbb
insb
sbb
xchg
rcrb
lret
out
mov
fstpl
ljmp
notl
hlt
pop
adc
pop
xchg
roll
inc
sub
jns
sbb
test
push
mov
inc
adc
enter
add
adc
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
jmp
mov
add
sub
jle
sub
pop
sarb
movlps
jo
pop
loop
std
inc
push
test
xchg
cmp
dec
out
stos
adc
cmc
add
mov
push
add
sbb
mov
jno
movsb
sub
out
lea
lret
xor
or
xor
sub
adc
mull
imul
xor
sub
inc
add
sbbb
imulb
xchg
imul
leave
xchg
mov
add
pop
fwait
pop
jns
cltd
in
sub
xor
aam
pop
push
ret
test
xchg
fstl
shrl
cmp
jp
push
mov
jae
icebp
push
inc
xor
adc
js
sub
int
inc
sahf
jae
mov
adc
shll
mov
xchg
xor
fimuls
inc
repnz
es
imul
insl
jbe
pushf
in
jmp
mov
clc
add
or
lock
push
in
ret
aaa
dec
and
imul
hlt
xor
pushf
pop
fcmovnu
jmp
insl
sub
addr16
ss
xor
cld
mov
pusha
push
pop
lcall
pop
mov
mov
andl
cld
lods
cmpsl
xchg
and
sub
sub
int
adc
in
in
sub
shll
xchg
aas
les
sub
out
mov
xor
cmp
mov
mov
jns
scas
xchg
call
adc
outsb
sbb
outsb
pop
lret
aaa
mov
jb
mov
lods
jl
fdivrs
ftst
cmp
mov
inc
or
andb
dec
into
add
popa
and
and
inc
add
push
jb
rcll
fdivs
cmpsl
das
and
inc
sub
es
sti
loope
mov
test
pop
cmpsb
hlt
pushl
in
fisubrs
cmpsl
cmp
mov
rcrl
lds
dec
incb
dec
adc
dec
fadds
fiadds
cmc
je
shll
iret
inc
arpl
add
es
adc
pop
cmpsl
mov
loopne
mov
out
leave
push
xchg
and
push
pop
cmp
cmp
pop
ja
lret
fnstsw
push
inc
jg
jg
add
sub
jae
nop
jle
mov
cwtl
ss
insb
out
lds
add
icebp
test
inc
xor
fbstp
jge
dec
push
xchg
adc
jp
incb
mov
xor
xor
or
push
add
jmp
and
lods
and
js
pop
sub
xor
adc
lea
adc
push
into
out
mov
inc
dec
sbb
push
call
pop
sarb
shl
dec
lock
ficompl
mov
xchg
xor
repnz
shll
dec
addr16
push
in
xor
dec
in
fsubp
jbe
imul
es
inc
jae
inc
add
jbe
mov
dec
imul
xor
test
cld
iret
cmpsl
xchg
cld
imul
cmp
roll
imulb
clc
xchg
mov
sbb
sbb
dec
adc
xor
xor
adc
pop
mov
add
cld
add
add
int
cmc
sub
ss
push
rcr
roll
fistpll
push
push
jp
push
cmp
stos
mov
cmc
xchg
in
ljmp
dec
cs
stc
push
lods
fistpl
and
xchg
mov
int3
cmpsl
imul
sbb
lds
jl
sbb
push
sub
leave
scas
insl
sbb
and
or
int3
pop
dec
cmpl
sub
pop
jmp
jb
aam
mov
xlat
ds
in
outsb
fmulp
dec
ret
lea
in
inc
push
cld
mov
stc
lahf
std
mov
inc
addr16
cmpsb
jb
inc
cltd
mov
cmp
mov
ss
dec
lret
or
scas
push
add
test
cmpsl
cld
cmp
out
loop
clc
and
push
and
pusha
pop
sahf
jmp
adc
icebp
lcall
stc
shrl
insb
mov
sbb
mov
inc
inc
sbb
mov
dec
hlt
jno
aas
sub
sbb
pop
jp
pusha
sub
jge
cs
mov
adc
inc
lahf
and
fwait
ret
jo
push
cmc
jb
pop
aad
mov
sub
int3
push
rorl
push
addb
adc
fisubrs
cmp
mov
cmp
adc
outsl
fisttps
cld
add
icebp
sbb
nop
stos
add
push
shlb
xchg
ret
or
lock
cs
xor
imul
push
cltd
shrb
enter
das
jns
andb
and
sbb
xchg
jp
cmp
addr16
add
add
test
lock
outsl
shlb
inc
std
loope
stos
outsl
popf
pop
lods
sub
stc
xchg
movsb
out
adc
mov
nop
sbb
dec
pop
xor
stc
mov
xor
sub
out
dec
pop
out
and
enter
inc
divb
lea
shl
call
jmp
outsl
xchg
pop
test
add
mov
movlps
fimull
call
std
adc
iret
mov
fisubrs
or
xor
jecxz
jo
sbb
and
cwtl
movsl
lcall
pop
xor
int3
rol
jnp
in
and
xlat
hlt
push
xor
mov
ja
inc
shll
xlat
out
sbb
out
scas
mov
movsb
dec
cmp
fcmovnu
jmp
pop
inc
and
stc
mov
in
sbb
shrb
adc
sbb
mov
xchg
adc
cmc
cmc
test
mov
ficoms
cmpsb
mov
lahf
test
xor
push
imul
sub
cwtl
jo
fstl
fisttpll
je
and
sub
push
pop
repnz
xchg
sub
inc
fsubrs
jbe
pop
cmc
addr16
pushf
mov
pop
mov
fsubs
pusha
sub
add
int
sub
jmp
or
popf
and
cmp
cmp
mov
andb
push
adc
pop
ret
les
push
cmpsb
mov
jge
pusha
sub
push
fprem1
sahf
sbb
and
adc
mov
icebp
jne
test
mov
and
xchg
lea
shll
popa
cmp
xor
jo
cmpl
cmpsl
jl
movsl
xor
pop
xchg
push
out
popa
pop
repnz
add
dec
repnz
mov
mov
inc
xchg
xchg
sbb
pop
adc
xchg
push
push
cmpsl
xor
popf
xor
xor
test
dec
pop
pop
out
in
int
stos
mov
and
jne
sbb
lods
push
pop
mov
rcl
out
mov
push
mov
push
cmp
xor
jmp
js
ficoml
popl
jo
jne
fmuls
inc
inc
push
fcmovbe
mov
sahf
insl
rorb
xchg
jp
xor
fidivrs
mov
mov
aad
mov
add
push
enter
cmp
mov
icebp
mov
ljmp
nop
push
or
std
mov
dec
sbb
in
jno
lret
ficoms
pop
jg
cmpsl
push
cmp
push
cmp
mov
mov
scas
add
mov
jg
sbb
std
xor
enter
add
inc
test
or
and
jp
xchg
dec
shlb
xor
mov
dec
xchg
into
push
and
mov
push
and
cmpsb
sahf
sub
les
bound
inc
pushf
xor
sub
subl
rol
mov
xor
mov
rorb
xchg
imull
movsl
sub
cmp
dec
adc
lods
enter
add
adc
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
jmp
jge
jbe
jne
jge
das
adc
stos
insb
push
sbb
adc
faddp
xor
mov
inc
cld
ss
psubsb
aaa
or
push
push
repnz
jno
cs
movsb
imul
dec
js
sbb
pop
idivl
push
mov
stc
cli
cmovge
in
pop
int
cld
adc
cs
pop
jns
or
repz
cltd
add
jb
int
inc
mov
inc
shrb
sub
adc
mov
clc
repnz
push
inc
cs
cltd
inc
jnp
shlb
pop
pop
sahf
add
mov
loope
jge
gs
lret
push
addr16
and
jo
stos
std
sub
push
push
inc
imul
cmp
testb
cmp
loop
out
es
lahf
add
cs
out
inc
sbb
vprotw
sub
fmuls
les
stos
movsb
out
adc
xor
push
sbb
sbb
cltd
test
rcrl
mov
fdivl
in
add
mov
cmp
div
fisttpl
popa
outsl
cwtl
les
in
mov
jns,pt
xor
dec
xor
in
fsubl
aam
jl
inc
test
and
cmp
xor
xchg
in
pop
mov
or
lods
cmp
rcrb
cmp
and
mov
sbb
jg
mov
cmp
pop
cmp
out
and
hlt
push
lcall
aam
mov
sub
test
les
ds
jns
fdivrs
fnstcw
inc
out
cmc
add
mov
std
aad
mov
jo
pop
mov
jae
ds
int
nopl
out
mov
inc
push
cld
cli
aaa
iret
fadds
in
cmp
popl
pcmpeqw
outsl
in
iret
cmc
add
cmpsl
jp
and
ss
subl
popf
movsl
std
je
aaa
lock
movsl
test
push
mov
outsb
popf
mov
aaa
adc
dec
inc
xchg
pusha
pop
insl
insb
add
insl
outsl
fisttpl
push
dec
jp
and
outsl
adc
jns
adc
ja
add
ljmp
and
loop
cmp
or
out
dec
add
pop
xchg
movsb
sbb
cmpsl
arpl
movsb
cmpsb
mov
inc
pusha
and
adc
cmpsl
push
add
sbb
leave
mov
inc
sar
xchg
lcall
xor
cmc
out
jne
push
je
pop
dec
jecxz
loopne
pop
cmp
or
lret
cmp
or
or
sahf
in
js
mov
aaa
mov
mov
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
adcl
or
mov
mov
jne
cmpl
movl
movl
movl
jmp
mov
mov
jne
push
pushl
pushl
push
call
adcl
sbbl
add
orl
xorl
subl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
fs
push
stos
sbb
dec
loop
push
mov
adc
repz
cmp
inc
mov
and
inc
add
dec
shll
js
sti
nop
or
jge
lret
pop
push
call
sub
popf
andl
mov
loopne
jmp
and
cmpsl
sub
mov
mov
mov
sub
int
inc
and
cmc
loopne
cltd
push
imul
leave
dec
repnz
repnz
mov
stos
jle
dec
insl
fdivr
andl
movsl
lods
stc
inc
mov
outsl
adc
popf
mov
out
mov
inc
ja
or
xchg
inc
sbb
outsl
jmp
into
pop
xchg
pop
push
pop
sbb
fcmovne
inc
inc
popf
sub
mov
mov
in
in
xor
add
xchg
pop
imul
loop
stos
cli
dec
inc
or
cli
adc
mov
pop
pop
mov
pop
mov
int
jmp
imulb
shlb
ljmp
cmp
notl
les
insb
mov
lock
mov
dec
add
es
cmp
cmp
addb
add
test
sub
nop
mov
pop
mov
adc
jmp
and
stc
pop
adc
xchg
gs
add
movsl
jae
jne
gs
jmp
fnstenv
sbb
repz
mov
and
inc
cwtl
andl
in
rcrb
enter
xchg
sbb
mov
and
aaa
mov
loope
mov
add
js
ret
lret
and
pop
insl
mov
mov
fdivrl
or
push
jmp
out
push
ret
jnp
and
add
stos
sub
loopne,pn
int
rcll
pusha
lods
aad
jl
mov
outsb
idivb
xchg
stos
inc
adc
es
fsubrs
add
add
push
das
jecxz
insb
xor
dec
mov
push
xor
es
jae
in
add
dec
mov
jl
repz
pop
sbb
gs
inc
stc
sbb
jnp
cltd
popa
adc
lods
ret
xor
xchg
mov
adc
fisttpll
cmp
je
cmpsb
outsb
outsl
insb
pop
mov
add
jg
mov
out
jae
jmp
or
out
movsb
cmpsl
cmp
push
sbb
test
push
push
mov
sub
xor
inc
dec
jmp
push
cs
dec
mov
add
shr
jae
adc
sub
jle
add
fwait
pusha
mov
addr16
push
add
adc
and
test
pop
test
xchg
sub
cmp
in
fiadds
lret
jns
jmp
fimull
sahf
mov
pop
test
ret
and
mov
sbbb
cmp
pop
mov
fnstcw
jb
push
mov
xchg
es
ret
loope
add
inc
aad
mov
sbb
fstpl
pushaw
fs
sti
push
push
aam
mov
or
in
out
or
xchg
lret
ror
cmovo
xor
arpl
push
ss
mov
mov
inc
cld
or
add
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
jmp
imul
scas
std
dec
and
sbbl
adc
adc
fwait
push
xor
add
sub
mov
test
sub
iret
pushf
mov
daa
and
in
xchg
outsl
and
push
or
cwtl
hlt
icebp
push
xor
push
repz
jno
and
outsl
out
mov
jne
popf
xchg
mull
aam
std
enter
shr
add
out
fistl
jg
mov
push
imul
push
loope
sarb
loopne
adc
mov
jbe
add
cwtl
repnz
mov
dec
adc
in
cmc
pop
pop
mov
xchg
and
mov
mov
adc
pop
es
sbb
addr16
push
ficoml
inc
push
inc
fcoml
data16
lret
xor
pop
loop
or
mov
xlat
repnz
lock
ljmp
rcrb
es
jnp
xorl
inc
movsl
add
sub
pop
xor
add
shrl
mov
clc
or
insl
cmpsb
xchg
int3
fwait
and
shll
xor
push
divb
clc
in
insl
ja
sahf
pop
pop
les
je
xor
add
test
xor
and
je
or
fisubrl
xchg
push
add
pop
xor
mov
fcoml
rcrb
or
test
jne
cmpsb
cwtl
cmc
leave
xchg
call
lock
jg
sbb
dec
shr
aaa
insb
mov
and
sbb
aad
mov
ds
pop
dec
iret
int
dec
xor
fildll
pop
aaa
sar
test
inc
movsb
push
inc
rcrl
xchg
add
incl
or
jmp
add
jns
in
in
push
sub
dec
mov
ret
pop
ja
push
int3
ret
inc
push
sbb
aas
call
xchg
push
pop
add
mov
xchg
test
add
or
movsb
insb
xor
xchg
xor
call
jns
pop
push
repz
lods
loop
sbb
cli
sbb
in
mov
sbb
lds
out
mov
aaa
push
dec
mov
add
mov
add
insl
and
adc
jecxz
push
test
imul
and
addr16
movsl
mov
daa
shrl
pop
cmp
push
adc
dec
pop
xchg
cmp
push
daa
mulb
adcb
and
addb
in
sub
in
xor
lods
outsl
jne
push
push
add
out
xor
mov
sub
add
cmpb
lock
rorl
sbb
test
cmc
inc
xchg
pop
push
mov
call
dec
cli
imul
sbb
cmp
enter
push
cmp
mov
into
lock
dec
cmp
fs
dec
push
dec
xor
jmp
cmpsb
xor
fadds
mov
sub
inc
mov
in
or
data16
enter
or
xor
fsubr
out
aaa
ja
addr16
mov
aas
adc
jbe
and
pop
cld
addr16
roll
cmp
mov
outsb
jnp
inc
jg
leave
adc
mov
add
adc
ljmp
pop
imul
iret
xchg
adc
fcomps
jg
cmpsb
fdivrs
daa
or
insb
push
sub
sub
jbe,pn
cmp
sti
stc
adcb
sti
xor
loop
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
jmp
lret
lahf
push
pop
sbb
leave
pop
jmp
call
stos
filds
adc
adc
int
sbb
xor
arpl
lret
dec
inc
mov
and
rcr
mov
cs
aam
popf
jecxz
bound
cmp
test
adcb
les
imul
mov
fcmovu
mov
jnp
rcl
lods
ljmp
mov
subb
adc
sbb
xlat
mov
out
cmp
test
sub
cs
fucomi
sub
in
push
cmpsb
in
test
mov
cld
pop
xor
js
test
pop
sti
push
jbe
movsb
iret
inc
repnz
ret
sbb
arpl
adc
dec
mov
jbe
outsb
psubusb
in
movsb
nop
das
add
adc
out
icebp
out
push
pop
push
xchg
mov
aaa
sub
sbb
mov
or
fmull
cmp
adc
push
inc
popf
adcl
xor
pop
icebp
mov
ds
sbb
stc
xor
dec
int3
xchg
fwait
xchg
mov
pop
mov
sarb
aam
fs
into
mov
movsl
lcall
xor
dec
shrl
fidivrs
push
jo
andl
sbb
cmp
scas
rcl
mov
cmpsb
push
ret
lods
test
clc
test
fldl
mov
xchg
add
and
scas
sub
cmpb
aaa
xchg
sub
and
nop
xchg
idivb
ds
jmp
pop
mov
jmp
jbe
xchg
cmp
sar
adc
mov
imul
mov
mov
fcompl
mov
push
sahf
fucomip
js
dec
cmc
test
es
imul
scas
fcmovu
iret
lds
pop
and
xchg
loope
mov
sahf
popl
loope
cmp
mov
cmp
inc
dec
dec
mov
ljmp
scas
mov
lock
adc
push
adc
push
mov
dec
fistl
cmp
adc
imul
out
push
in
loopne
mov
sahf
loop
imul
mov
loope
in
inc
jmp
mov
cld
push
mov
or
xchg
and
push
mov
pop
aam
leave
push
fnstsw
add
addb
outsl
jno
shrl
out
ljmp
sbb
pop
cli
push
jo
pushf
xlat
jb
mov
jo
stos
lret
stc
push
shlb
call
inc
iret
dec
sbb
test
jmp
dec
imul
sbb
test
pushf
xlat
sub
pusha
in
cli
loopne
xchg
insb
sbb
mov
pop
das
les
fldcw
cmp
setns
push
jns
ret
insl
out
daa
icebp
mov
mov
sbb
dec
das
into
and
andb
adc
adc
mov
add
imul
cmp
mov
out
neg
fisttpl
mov
mov
imulb
test
cli
dec
jb
into
sbb
ss
adc
frstor
dec
fcoml
test
mov
aad
jb
adc
xchg
rcll
scas
inc
mov
mov
xchg
in
xchg
push
stos
xor
fwait
or
arpl
or
andl
leave
fisubl
nop
lods
daa
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
call
mov
movzbl
push
call
test
jne
xor
jmp
adc
mov
cmpl
movl
movl
movl
jmp
movzbl
jbe
pushl
call
orl
addl
adc
sbbl
andl
mov
xor
mov
jmp
xor
push
or
cli
sbb
in
push
adc
add
rcrl
sbb
cwtl
outsb
movsb
mov
cmp
pop
ja
xor
cltd
mov
aas
insb
cld
inc
sub
push
cmp
bound
lds
jg
mov
cmc
xchg
add
sbb
popf
add
cmp
adc
cmc
int
mov
xchg
movsb
bound
inc
ds
addb
iret
mov
sub
test
mov
mov
loopne
or
pusha
sub
movsl
pop
nop
and
jbe
xchg
mov
xor
or
movd
aaa
sbb
cmpsl
lea
stos
data16
mov
mov
imul
adc
mov
sarb
aad
add
adc
mov
pop
xchg
dec
jp
test
add
fwait
adc
xor
mov
push
adcb
rdtsc
dec
ret
subl
clc
push
imul
pop
mov
sub
sub
cmc
mov
inc
sub
cmp
int
inc
cmpsb
xor
or
dec
outsb
gs
lahf
in
dec
popa
cli
ret
mov
lret
push
out
push
lods
andl
mov
popl
pusha
or
icebp
lea
jno
sub
pop
mov
iret
and
xor
xor
push
push
pop
mov
lds
add
fs
or
push
cmp
push
cmp
out
sbb
pop
jnp
pop
cmc
rolb
mov
repz
popf
pushf
xor
cli
out
jns
test
popa
jno
es
in
jl
dec
rcrl
clc
xor
dec
pusha
outsb
xlat
sti
adc
insb
adc
es
mov
mov
inc
call
jae
cli
fucom
dec
gs
jge
scas
aaa
mov
fs
mov
or
sub
fs
scas
mov
negl
xor
push
mov
mov
loope
addr16
mov
pop
xor
jno
cmp
mov
out
arpl
inc
mov
xchg
jb
xchg
lds
scas
add
sub
push
xchg
jo
sti
in
rorb
or
xchg
ficomps
push
sbb
push
shl
daa
pop
mov
pop
ds
aad
lret
hlt
sbb
mov
aaa
xchg
sub
push
mov
xlat
ljmp
sbb
and
lret
and
adc
cmpsl
xchg
jmp
adcl
mov
cmpl
movl
movl
jmp
movl
mov
je
push
call
addl
subl
and
andl
movl
orl
movl
adcl
push
mov
add
pop
mov
cmpl
movl
movl
movl
movl
jmp
not
movl
jl
pushl
push
push
push
push
push
push
push
call
subl
subl
addl
adcl
andl
neg
mov
xorl
mov
movl
mov
movl
mov
andl
movzwl
or
cltd
movzwl
xorl
idiv
cmpl
mov
movl
mov
mov
jmp
movl
movl
jne
pushl
push
push
call
xor
xor
mov
and
or
mov
mov
sbb
movzwl
sub
sbbl
movzbl
sub
mov
sub
mov
movzwl
addl
or
mov
or
mov
cmpl
movl
mov
mov
mov
jmp
movl
movl
jae
push
pushl
push
pushl
call
sub
sub
adcl
mov
or
addl
mov
mov
mov
movl
mov
mov
adc
mov
sbbl
sub
sbbl
mov
andl
xor
sbb
jmp
mov
sbb
push
icebp
mov
adc
jne
xor
jge
ja
push
aam
vaddsubpd
ja
in
ficomps
jge
sbb
lock
and
pop
andl
xchg
inc
mov
mov
dec
das
ss
mov
push
mov
nop
xchg
cmpsb
lret
push
jbe
jbe
pop
stos
scas
fidivs
push
sub
pop
ret
jmp
pusha
sub
pop
dec
cmp
mov
mov
jb
or
out
xchg
pop
inc
and
cmp
mov
popa
aad
cmpb
xor
enter
mov
into
dec
inc
pop
adc
dec
mov
mov
sbb
das
jmp
pop
mov
rcrl
pop
mov
add
sarl
mov
movsb
add
mov
jmp
or
inc
mov
lea
mov
shlb
sub
adc
mov
cmp
sub
sbb
imul
dec
push
add
fsubp
pusha
push
aaa
test
in
adc
xor
mov
push
jae
sahf
xchg
lret
mov
jne
jbe
addl
push
push
lahf
rorl
mov
sub
iret
and
mov
xor
test
lcall
mov
loopne
hlt
leave
dec
push
stc
mov
mov
mov
cmp
pop
mov
rorl
testl
cmp
test
mov
and
imul
and
jae
rcrb
xlat
xchg
add
and
or
lcall
clc
mov
and
push
sahf
dec
xchg
stc
fistpll
mov
data16
xchg
icebp
mov
lods
imul
inc
fistpl
scas
adcl
fcompl
into
cwtl
sub
jno
pushf
cmp
and
adc
out
lcall
xchg
or
divl
aaa
inc
push
rcr
cltd
pop
ljmp
jno
aam
sbb
movsb
pop
lods
cld
mov
mov
inc
jl
insl
xor
cmp
js
pop
push
mov
xchg
stos
shl
pop
rcll
bound
test
in
adc
cmpsl
xchg
and
cmc
push
add
push
test
xchg
mov
or
stc
mov
sbb
mov
in
cmp
pop
xor
push
and
clc
ror
cmpsl
imull
in
mov
iret
and
cmpsl
cld
lds
adc
lock
movsl
and
lea
mov
sub
movl
mov
movl
cmp
movl
jb
sbb
movl
movl
movl
cmpl
movzbl
mov
jmp
movl
mov
jbe
pushl
call
sbb
mov
sub
mov
and
inc
movl
and
mov
cmpl
mov
movl
movl
mov
jmp
mov
jb
pushl
pushl
push
push
call
andl
sbbl
mov
sbb
movzbl
or
xor
xor
xor
xor
orl
add
mov
orl
xor
sbbl
div
mov
add
sbbl
and
pushl
pushl
call
movl
movl
mov
adc
movl
cmpl
movl
mov
mov
jmp
movl
movl
je
push
push
call
adc
xor
xor
mov
sbb
xorl
or
mov
xorl
mov
adcl
and
addl
or
mov
subl
and
xor
adcl
pushl
pushl
addl
call
not
pushl
dec
movl
movl
xor
movl
subl
movl
or
movl
cmpl
mov
mov
not
mov
jmp
movl
mov
jl
pushl
push
push
push
push
call
xor
and
sbb
adcl
movzwl
or
movl
movl
xor
movl
mov
dec
mov
andl
sub
sbb
mov
or
orl
and
xor
jmp
or
ja
mov
jle
sub
push
stc
adc
adc
jp
sbb
out
add
xorl
out
sahf
inc
pop
xor
and
ljmp
push
inc
sub
adc
adcb
mov
push
cmc
aas
push
inc
lea
xor
xchg
pushf
div
xchg
jge
lcall
scas
sbb
sub
inc
push
aaa
outsl
sbb
jp
movsb
jecxz
pop
xor
mov
clc
and
adc
mov
mov
push
or
das
jae
jecxz
cltd
into
xchg
lcall
out
cltd
ret
pop
xchg
jnp
clc
mov
cmc
insl
adc
jl
mov
inc
xor
push
lock
dec
xor
fstps
xor
mov
jecxz
push
mov
jo
sbb
pop
push
hlt
out
mov
xlat
inc
rorl
mov
xchg
dec
and
leave
mov
hlt
decl
adc
imul
and
loope
mov
adc
mov
inc
fdiv
adc
and
movsl
ret
nop
push
cmp
jns
jb
scas
cmpsl
push
das
jbe
subb
cltd
gs
test
int
inc
in
data16
jno
xchg
pop
lock
adc
cs
xchg
int3
je
cld
push
cltd
pop
push
loop
repnz
bound
call
add
xchg
cwtl
cmp
jb
pop
cmp
pop
lock
fisubrl
sub
jl
sbb
cmp
and
or
mov
imulb
dec
or
imul
push
lods
je
push
arpl
sbb
mov
xchg
xchg
sbbb
std
popf
mov
scas
cld
int3
xor
push
mov
jns
jge
cmpsl
aam
addr16
lods
loope
push
or
add
sbb
stos
inc
rcl
jg
mov
test
push
cmp
enter
pop
enter
sub
js
mov
or
gs
sbb
push
pop
movsb
mov
pop
xorl
mov
inc
ret
int3
pushf
pop
mov
fsubrl
in
ficoml
jo
pop
call
scas
aas
rorl
cmpsb
sbb
es
or
xchg
dec
add
add
pop
mov
push
push
or
cmc
cmpsb
xlat
jmp
xorb
mov
shl
sub
sbb
sbb
inc
out
jle
adc
sub
or
mov
or
xchg
sbb
sbb
clc
out
shll
mov
inc
lods
dec
cs
mov
addl
sub
movl
pushl
xor
mov
mov
andl
add
xorl
and
cmpl
mov
movl
jmp
movl
je
call
or
or
not
or
mov
sub
mov
xor
and
pushl
sub
mov
mov
andl
imul
xor
or
mov
movl
sub
pushl
sbbl
call
adcl
dec
movl
jne
movl
cmpl
mov
movl
mov
mov
jmp
movl
movl
je
pushl
push
call
or
xor
mov
and
mov
sbb
mov
add
movl
mov
mov
movl
mov
xorl
call
lea
mov
cmpl
movzwl
mov
mov
movzbl
jmp
movl
not
jb
call
and
xor
or
sbb
neg
orl
mov
mov
sub
and
neg
lea
mov
mov
mov
sub
mov
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
call
add
xor
neg
xor
add
mov
adc
xor
xor
xor
add
sub
sub
xor
xor
mov
sub
xor
sub
cmpl
mov
mov
jmp
movzwl
movl
jbe
push
push
call
sbb
sub
mov
mov
add
adc
addl
xorl
xor
sbb
xor
add
shl
shr
or
and
mov
dec
mov
orl
mov
mov
sub
mov
xor
mov
mov
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
adc
sbb
sub
adc
movl
mov
adc
mov
mov
xor
orl
xor
or
and
mov
addl
push
xorl
pushl
addl
lea
adcl
push
subl
shl
call
addl
lea
andl
push
mov
subl
mov
lea
push
andl
mov
movl
lea
sbbl
mov
xorl
mov
mov
adcl
push
call
orl
push
sbbl
push
pushl
sbbl
call
and
mov
xor
mov
inc
mov
mov
add
shr
cmpl
not
movl
movl
movl
jmp
movl
jg
push
call
inc
sbb
adc
add
sbb
cmpl
mov
mov
jmp
mov
ja
push
call
and
adc
sbb
sbb
mov
xor
add
sub
or
shl
cmpl
mov
mov
mov
mov
jmp
movl
jne
push
call
add
mov
sbb
adc
sbbl
sbbl
adcl
or
mov
cmpl
mov
movl
movl
jmp
movl
jle
pushl
push
pushl
pushl
pushl
call
adc
xor
xor
add
xor
or
sub
xor
mov
sub
xor
add
adc
and
or
xor
mov
sub
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
jmp
incb
dec
dec
cmp
or
jg
jle
out
adc
adc
int
dec
push
xor
cmp
mov
lods
fbld
testl
imul
xlat
pop
xchg
xchg
xor
mov
lahf
lret
xchg
mov
cmp
fsubrl
cltd
jmp
xchg
push
pop
adc
lock
insl
jnp
outsl
loopne
inc
decb
mov
mov
add
in
mov
dec
js
aas
ret
lret
in
xchg
in
pop
jbe
movsb
loopne
xchg
mov
popf
sti
jnp
cmpsl
push
lret
inc
push
dec
rorb
mov
pushf
push
cmp
jmp
sub
cmovns
sbb
sti
and
icebp
iret
lock
xorl
sub
fisttps
cmp
push
and
cmp
ss
aad
insb
test
call
dec
push
or
xchg
jl
rclb
xchg
fcompp
out
sarl
bound
jge
pop
cwtl
repz
push
fsub
cmp
pmullw
and
fstps
add
popa
add
dec
into
loope
push
xor
addl
mov
adc
or
punpckhwd
adc
lods
ljmp
sar
and
scas
into
pushf
jae
test
shr
std
pop
dec
mov
lea
push
pop
xchg
sti
sub
inc
push
xor
sarl
idivl
and
add
pop
jg
hlt
shrl
fcomps
jge
sbb
jmp
mov
out
fcom
sub
dec
lods
pusha
adc
in
xor
loope
push
adc
mov
loopne
andl
mov
sub
cmpsb
mov
xchg
cmp
adc
mov
add
fwait
mov
ret
pop
andb
cmp
sub
gs
sub
into
inc
lea
rcl
jecxz
or
cltd
xor
pop
call
rorb
ds
sbbb
sbb
xchg
adc
jp
cmp
sbbb
pop
arpl
iret
sub
cmpsl
push
xlat
mov
fs
ret
jb
lcall
push
dec
ficoml
fidivrl
pop
fwait
sbb
add
push
and
push
cmpsb
scas
push
jmp
rcrb
jmp
call
mov
lods
ret
out
out
int
sbb
inc
xchg
decb
mov
and
fcmovnbe
dec
mov
sub
daa
sbb
adc
jg
cli
mov
sub
sub
shlb
sub
cmp
js
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
jmp
ss
adc
sub
xchg
mov
push
push
in
adc
adc
push
hlt
sbb
out
add
lds
rcl
ret
pop
or
std
cmp
into
leave
sub
mov
and
loope
mov
and
insb
sarl
push
lsl
pop
adc
xchg
push
mov
mov
push
xchg
jg
test
jl
mov
cwtl
xchg
fs
addr16
popa
idivw
sbb
gs
or
mov
adcb
xchg
mov
js
mov
xchg
push
mov
adc
push
es
scas
and
lods
dec
int
testl
lcall
mov
dec
je
mov
inc
aam
xor
orb
out
jns
popf
inc
cmp
jb
add
ss
add
adc
mov
enter
mov
pop
nop
repz
sbb
ret
movsb
jno
mov
jmp
or
imul
movsl
jae
std
js
pop
addr16
in
ja
cmp
sub
clc
imul
add
cmp
add
push
sbb
sti
mov
or
stos
jbe
add
lods
fldt
cmp
sub
shl
inc
mov
imul
mov
jbe
add
xor
mov
dec
cmp
jnp
dec
or
pop
movsl
movsl
cld
pop
call
rcr
mov
inc
pop
pop
inc
call
out
dec
clc
mov
in
popf
mov
jbe
inc
adc
cmp
or
xchg
test
sub
jbe
xlat
cltd
mov
push
mov
cmp
test
push
dec
ljmp
adc
sbb
sarl
ds
rcrl
jle
pop
out
and
jb
push
std
mov
or
cmp
stc
mov
outsl
daa
shll
insl
out
rcrl
movsl
test
lret
mov
testb
addr16
pushf
pop
mov
pushf
mov
out
jb
scas
sub
ret
sar
lea
jns
xor
inc
pop
adc
lods
or
out
adc
stos
aaa
sbb
int3
xor
sub
loop
icebp
test
lock
cmc
mov
mov
scas
dec
lods
pop
inc
and
out
xchg
jl
pop
dec
push
outsb
mov
jmp
jl
add
inc
and
push
or
clc
cwtl
push
adc
enter
mov
jno
add
mov
in
loope
inc
call
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
jmp
cmpsb
xchg
mov
jns,pt
sahf
lods
jg
mov
add
adc
adc
push
mov
dec
jp
repz
sbb
out
mov
pop
sbb
sbb
pushf
push
jge
jo
cmp
fcomps
out
mov
xor
scas
mov
push
xor
scas
lahf
ss
mul
cwtl
cwtl
js
and
scas
adc
popa
xor
call
fsubrl
js
loopne
dec
jmp
repnz
cmpb
dec
add
mov
js
adc
movsb
das
lock
sub
jnp
psrlq
lahf
or
addr16
cmp
sub
loope
add
daa
pop
lods
inc
sub
mov
rclb
sbb
jg
pcmpgtw
push
aaa
outsl
dec
pop
adc
in
mov
cmp
jp
jae
aad
dec
inc
sbb
mov
imulb
ret
mov
dec
mov
cli
xor
xchg
mov
lcall
xlat
in
in
dec
sahf
push
or
test
cs
jb
inc
test
movsb
cmp
push
sahf
test
cmp
gs
sub
imul
out
or
lods
dec
mov
fimull
mov
mov
push
fldenv
jecxz
xchg
outsb
dec
aad
cmp
enter
shlb
ljmp
subl
outsl
add
icebp
push
xor
sub
enter
std
jp
cmpb
push
pop
fdivrs
mov
mov
mov
leave
andb
jno
mov
je
add
jmp
and
aad
mov
or
pop
jo
fmuls
xchg
std
pop
loop
lret
dec
mov
jp
sub
and
xchg
sub
fistpl
std
or
outsb
add
sahf
shlb
xor
mov
test
es
xchg
pop
iret
jmp
pop
pop
xor
ljmp
scas
adc
xor
sbb
icebp
daa
sbb
inc
shr
cwtl
push
jp
or
pop
mov
negl
xchg
fwait
and
pop
sub
inc
mov
mov
popf
push
outsb
add
inc
lock
iret
cmp
je
je
nop
out
jge
lret
imul
mov
mulb
repz
and
outsb
js
mov
dec
jnp
mov
add
push
fstpl
test
pop
jp
aas
lock
pusha
lock
cmc
lds
cmp
repnz
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
jmp
cltd
add
cltd
fstp
jmp
lods
div
sub
loopne
adc
pop
mov
mov
aam
call
cmp
out
pushf
aam
stos
mov
cmpb
adc
sti
ljmp
repnz
pop
mov
sbb
or
aad
jnp
cmpb
aad
les
cmpsl
mov
mov
push
insl
cmp
adc
and
adc
sbb
icebp
cmp
or
ljmp
dec
cmc
dec
mov
aas
addb
sbb
aaa
sbb
fcomp
hlt
sub
dec
pop
clc
mov
mov
test
test
add
sbb
pop
jae
dec
sbbl
mov
mov
lea
jp
adc
pop
cltd
mov
jb
out
jno
pop
pusha
mov
pop
mov
xchg
test
iret
mov
jb
xchg
mov
cmpsl
lret
jp
test
stc
insb
imul
ret
push
push
sub
sbb
pusha
cltd
jnp
insl
pushf
in
loope
call
in
and
adcb
dec
xchg
add
fs
in
jo
or
or
pop
push
mov
aas
mov
or
jg,pn
out
add
push
cmp
aad
aad
inc
or
push
jmp
std
xor
stos
dec
aad
mov
xchg
cmovae
inc
in
pushf
mov
xlat
pop
addr16
loope
insb
or
mov
jo
adc
push
push
in
sub
rcrb
popf
gs
jbe
jge
mov
inc
mov
mov
shr
test
call
out
sbb
jmp
sbbl
mov
mov
pop
jmp
inc
or
or
gs
mov
add
sbb
repnz
mulb
dec
iret
pop
push
inc
sbb
or
sbb
push
mov
add
mov
mov
xor
in
lock
mov
repnz
fs
xor
pop
cmpsl
cmp
pop
inc
in
jmp
pop
xor
push
dec
jnp
fists
test
sub
inc
mov
icebp
dec
sub
lahf
sbb
mov
out
aas
rcrl
clc
inc
in
pop
and
lcall
les
fmuls
xchg
xchg
out
cmp
or
aad
pop
push
nop
mov
and
lret
jae
push
xchg
pop
and
mov
mov
dec
inc
xchg
shld
shl
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
jmp
cmp
cltd
fistps
sbb
mov
xchg
movlps
pop
and
divb
push
sbbl
pop
stc
inc
pop
das
xor
roll
or
mov
xorb
dec
lds
pop
clc
bnd
and
jecxz
out
int3
jp
ljmp
and
ss
add
jno
shll
sbb
daa
push
cld
movsl
fnstcw
fsts
adc
out
addb
mov
hlt
pushf
and
mov
sar
jl
jbe
jecxz
or
add
shl
mov
stos
xchg
mov
adc
stos
mov
jnp
xchg
loopne,pn
movsb
sahf
icebp
mov
mov
stc
rorl
and
jg
aam
out
cli
adcl
aam
lods
cld
sub
mov
pop
lret
pop
fs
sbb
aas
lods
inc
pop
adc
pop
push
popf
push
fcmovbe
clc
push
dec
cli
clc
lods
push
push
daa
pop
js
jle
and
aaa
hlt
hlt
inc
testl
xor
mov
push
inc
movsl
sub
daa
add
lock
push
les
stos
aad
aas
push
jnp
push
push
or
fdivrp
sbb
les
xchg
inc
or
mov
cli
stos
fstl
inc
in
push
fwait
movsb
mov
cmpsb
addr16
push
aad
lds
mov
mov
nop
call
popf
rcrb
lret
adc
pusha
imul
mov
sub
dec
inc
push
xchg
cltd
pop
or
push
sub
xor
addr16
mov
lret
jmp
out
xchg
xchg
nop
jnp
pop
stos
movntps
dec
int3
xchg
loope
mov
mov
xchg
jge
mov
aas
push
dec
push
shl
pop
xor
cmp
sbb
mov
sbb
xlat
dec
loopne
or
movsl
jb
xchg
add
sahf
add
pop
out
jne
and
pop
addr16
sub
add
mov
mov
lods
push
adc
xchg
cmpsb
out
data16
push
pop
stos
rorb
pop
sub
cmp
repnz
in
gs
push
add
adc
in
enter
imul
pop
aad
es
bound
xor
js
or
aad
mov
in
sbb
xchg
popf
xchg
insl
in
push
mov
fcompl
jmp
mov
cli
xchg
jmp
mov
vmovd
sahf
or
mov
mov
adcl
mov
nop
pop
lahf
addb
adc
sbb
shll
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
jmp
pop
xor
jge
cmp
loopne
es
mov
xchg
movlps
and
ljmp
mov
movsl
dec
str
lcall
sbb
mov
lock
int
jo
push
lret
in
and
sbb
test
inc
enter
mov
mov
test
xlat
in
pusha
imul
in
push
decl
ficoml
ljmp
add
adc
mov
pop
mov
shl
in
repnz
je
add
lcall
cwtl
imul
mov
jns
lds
xchg
fisttpl
xchg
dec
pushf
nop
cltd
js
mov
jo
imul
pop
pop
rcll
jmp
addr16
call
pop
or
in
repnz
imul
mov
push
outsl
ljmp
xchg
adc
mov
pop
xchg
xchg
iret
ljmp
pop
mov
arpl
outsb
aad
std
loopne
xchg
outsb
dec
xchg
fcomip
out
in
sub
push
dec
cmpsb
cmp
mov
push
pop
mov
in
clc
hlt
lahf
in
xor
fmuls
rcll
mov
or
lds
jae
sub
js
add
iret
es
ret
push
jnp
cwtl
pop
pop
sarb
imul
mov
mov
mov
xor
insl
push
xor
and
rorb
inc
mov
jecxz
and
imul
loope,pt
aaa
xor
pop
popa
ret
pop
pop
sbb
jg
stos
xchg
jae
fwait
lcall
inc
adc
cld
fsubs
add
orl
dec
pop
mov
pop
stos
cli
cmpsb
lret
cmpsl
daa
add
jg
push
das
ds
xor
das
addl
add
js
cld
shr
pop
sarl
dec
inc
stos
data16
sbb
int
outsb
mov
cmpsl
mov
fidivs
mov
loop
mov
es
test
movsl
movsb
mov
int
inc
hlt
ret
and
inc
dec
pop
pop
aas
je
mov
mov
mov
push
sub
push
xchg
sub
data16
cwtl
jecxz
mov
pop
ljmp
or
jl
inc
leave
fisttpl
leave
or
jge
adc
or
fldl
ds
add
ss
sarb
pop
scas
lcall
dec
mov
add
inc
jg
adcb
scas
fsubrs
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
movl
push
mov
mov
and
push
sbb
push
movl
movl
sub
movl
or
mov
movl
mov
xor
andl
div
imul
sbbl
mov
xorl
xor
and
mov
mov
sbb
mov
xor
orl
div
add
sub
mov
movl
cmpl
movl
not
mov
mov
jmp
mov
mov
jbe
push
call
adc
movzbl
sbb
mov
mov
or
and
mov
mov
sub
or
inc
sub
movl
cmpl
mov
mov
mov
jmp
movzwl
ja
call
adc
sub
sbb
inc
xor
movl
mov
orl
add
xor
cmpl
mov
movl
movzwl
jmp
movl
notl
jae
pushl
pushl
pushl
push
push
push
call
or
and
or
incl
mov
mov
and
and
xor
sbb
imul
addl
mov
and
sub
mov
mov
mov
and
movl
orl
movl
adcl
movl
movl
mov
sub
imul
mov
andl
imul
cmpl
mov
movl
mov
jmp
movl
movl
je
push
push
call
orl
xorl
xor
or
mov
or
mov
xor
xor
sbb
mov
jmp
pop
sahf
and
out
scas
sarb
rclb
adc
scas
jb
test
test
push
nop
fnstenv
scas
inc
dec
or
xor
ret
mov
add
movsb
add
push
cmp
add
clc
cmp
addr16
push
dec
xchg
int
into
lods
jb
sub
pop
inc
mov
cwtl
subl
adc
jnp
xor
pop
mov
imul
cmpsb
outsl
inc
cmp
or
push
pushl
push
xchg
sbb
push
adc
and
enter
das
jmp
or
dec
rcll
or
lret
xor
and
shl
int
rorl
ret
das
lret
repz
pop
mov
jbe
les
or
push
push
mov
dec
mov
pop
or
in
outsl
movsb
lcall
cs
jo
push
es
popa
xor
pop
in
inc
fists
fisttpl
adc
sub
pop
cmp
sbb
xlat
add
push
sub
rclb
jne
jge
cltd
leave
sar
imul
adcl
jge
jae
mov
jno
mov
les
sbb
xchg
push
lret
sub
mov
mov
dec
out
stc
cs
and
mov
push
repnz
andb
cld
lcall
sub
fcoms
ja
fdivrl
lds
outsl
mov
in
dec
out
dec
and
aas
arpl
addr16
fildl
mov
cmp
xorb
pop
fcoms
lret
mov
test
inc
popf
xchg
jge
and
andb
cmp
pop
cmp
or
push
mov
jmp
cwtl
sbb
jb
sub
dec
leave
xlat
sub
sti
jo
insb
fs
frstor
dec
pop
je
sbbb
push
pushf
cmpsb
mov
test
leave
xchg
mov
pop
mov
or
xchg
jns
xchg
pop
mov
jno
aad
aas
mov
lret
mov
outsb
adc
test
imul
mov
subl
and
dec
or
xor
mov
subl
xor
cmpl
movzwl
mov
mov
jmp
mov
mov
jg
push
pushl
call
add
adcl
adcl
add
and
mov
add
orl
mov
mov
sbbl
lea
mov
or
movl
movl
sbb
movl
mov
or
xor
cmpl
notl
movl
not
jmp
movl
movl
jbe
pushl
call
or
xor
andl
movl
add
adc
mov
orl
or
and
add
cmpl
movl
mov
mov
jmp
movl
mov
jbe
push
call
and
add
xor
subl
and
add
xor
cmpl
mov
mov
mov
jmp
movl
jb
push
call
add
xor
add
sub
sub
xor
add
mov
add
subl
or
xor
mov
or
add
cmpl
movl
mov
movl
mov
jmp
mov
mov
jge
pushl
pushl
call
andl
sbbl
andl
movzbl
sub
add
adcl
xor
mov
movl
orl
movl
adc
movl
mov
and
add
cmpl
movl
mov
mov
mov
jmp
movl
movl
jle
push
call
xorl
xor
and
orl
orl
inc
mov
sub
mov
subl
lea
movzbl
sbb
mov
or
sub
xor
or
or
mov
mov
movl
movl
mov
or
add
xorl
imul
mov
imul
xor
movl
mov
div
sub
movzbl
or
mov
xorl
movl
sbbl
movl
movl
mov
mov
addl
xor
movl
div
sub
imul
adc
add
mov
orl
xor
xor
sbb
mov
div
xor
mov
movl
cmpl
movzwl
movl
jmp
mov
jge
pushl
call
not
or
adcl
adc
dec
add
movl
and
movl
cmpl
movzwl
mov
jmp
mov
movzwl
ja
push
push
push
push
call
adcl
adc
and
and
addl
mov
mov
sub
movzbl
xor
shr
and
sub
and
mov
imul
mov
subl
and
mov
adcl
jmp
cltd
adc
xor
sbb
js
push
mov
adc
movlps
mov
xor
ss
dec
or
cs
je
pop
mov
push
xor
outsl
into
pop
aam
sbb
xchg
cmp
cwtl
sub
out
pop
pop
adc
dec
inc
in
dec
add
pop
mov
dec
leave
mov
mov
jns
add
jae
in
outsb
shll
cltd
fsubl
mov
xchg
push
leave
fidivs
repz
movsl
add
or
repz
aad
popa
faddl
sbb
insb
pop
push
adc
mov
sbb
xchg
sbb
sbbl
push
jae
adc
pop
mov
or
out
repz
ret
jne
add
int3
outsb
leave
stos
mov
fnstsw
sbb
xor
xor
push
pushf
mov
mov
jbe
fwait
jo
fisubs
shr
ret
push
aam
data16
lods
test
or
sarl
add
cmp
movsb
inc
mov
ja
jno
pop
jno
mov
ljmp
pusha
jb
scas
pop
mov
push
fisttpl
and
push
xchg
push
xor
cmp
adc
xor
aaa
out
sub
lret
sti
lret
ret
aam
mov
lcall
dec
or
pop
test
sub
mov
rcl
out
lods
and
sahf
xorb
mov
inc
stc
lcall
aaa
xchg
stc
in
sub
dec
aas
insl
sti
jnp
add
fimuls
and
cld
push
fisttps
xchg
mov
mov
loope
jmp
xchg
mov
lcall
incl
jns
test
sub
outsb
or
xor
aam
push
fnstenv
sub
mov
ljmp
sarb
hlt
popa
inc
xor
js
mov
add
push
repnz
pop
pop
jnp
mov
jecxz
out
sub
and
mov
or
movl
cmpl
mov
mov
mov
mov
jmp
mov
jne
pushl
call
notl
addl
orl
andl
and
movl
mov
sbb
or
mov
or
sub
adcl
mov
cmpl
mov
movl
movzwl
jmp
movl
mov
jg
pushl
pushl
push
push
call
add
sub
adc
movzbl
sbb
adcl
and
or
movl
mov
sbb
movl
addl
movl
cmpl
movl
movl
jmp
notl
jne
push
push
call
sub
xor
xor
mov
adc
or
orl
adc
andl
adc
mov
adc
movl
adc
movl
xor
xor
add
movl
movl
mov
add
or
mov
movl
sub
xor
mov
addl
imul
add
imul
or
mov
or
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
push
push
pushl
push
call
or
or
xorl
sbb
xor
xor
subl
mov
lea
addl
push
call
and
mov
mov
jmp
test
mov
jbe
jb
js
lret
enter
jno
xor
scas
xchg
fadds
ret
test
aad
sahf
cs
jl
cmp
jb
stc
xchg
xchg
xchg
je
pop
and
sub
sub
mov
pop
push
cmc
fnstcw
addb
popa
xchg
out
aaa
mov
xchg
repz
fbld
mov
lret
or
cltd
inc
int
jmp
leave
lds
in
and
rcll
and
jbe
test
je
enter
ds
mov
addr16
lds
add
gs
mov
inc
sub
mov
fdivl
add
in
ret
dec
adc
outsb
pusha
shrb
pop
lods
sbb
imul
mov
mov
mov
dec
dec
inc
cmp
jecxz
js
in
ficoms
iret
or
mov
push
pushf
faddl
sti
mov
mov
cmp
aad
mov
out
xchg
sub
bound
jg
ficoms
aad
rcll
into
loope
sub
mov
rcl
lahf
dec
add
jmp
js
sub
lods
loopne
mov
cmp
push
out
xchg
sbb
stos
sbb
xor
or
cmp
fisttpll
push
movsl
or
pop
add
dec
lea
jne
ret
jne
leave
or
cltd
add
add
mov
jne
aam
mov
mov
movsl
pushf
sub
sbb
fstpt
sbb
pop
mov
cmp
jmp
or
in
jnp
mov
adc
xor
inc
in
dec
out
call
mov
iret
or
jo
add
mov
out
mov
adc
cs
push
cld
push
inc
sarl
out
je
cmovl
cmp
jmp
dec
sub
sahf
xor
xor
int3
mov
aaa
scas
lods
xorb
aaa
add
adc
push
and
ja
or
and
add
test
incl
add
mov
mov
jmp
movl
movl
ja
push
call
add
add
dec
orl
addl
adc
and
cmpl
notl
mov
movl
jmp
movl
je
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
sub
xor
xor
mov
xorl
div
cmpl
movzwl
movl
jmp
mov
jbe
push
push
push
pushl
call
adc
movl
orl
sbb
adcl
xor
mov
mov
sbb
add
xorl
jmp
pop
and
and
cmpsb
js
and
push
adc
adc
mov
loopne
cs
mov
xorl
xchg
jbe
ret
cmp
lcallw
jbe
jge
popa
dec
push
xchg
xor
pop
aad
lods
test
and
les
fidivrs
jne
lods
test
dec
fidivrl
rolb
xchg
jae
mov
data16
les
mov
jbe
mov
mov
iret
lcall
insb
fistps
mov
sub
rorb
test
divl
mov
adc
sbbl
mov
mov
or
lock
jge
bound
pop
insl
dec
int
sub
lret
xchg
pop
jecxz
fs
mov
sbb
pop
sub
xchg
add
sbb
push
adcb
adc
pusha
xchg
or
stos
imul
mov
sub
push
stos
sbb
or
sub
pop
dec
jbe
adc
or
ss
pop
jno
mov
mov
rcrb
or
ret
out
fimull
xor
icebp
jp
lret
popl
mov
out
bound
faddp
adc
xchg
dec
mov
inc
stos
mov
orb
jmp
sbb
std
fdivrl
ret
loopne
mov
cltd
insl
add
pop
repz
jb
inc
jge
dec
ret
movsb
adc
or
xor
fwait
push
mov
xor
js
cwtl
or
lret
jg
inc
pop
lcallw
stos
jno
int3
fwait
call
mov
imul
mov
shll
and
mov
sahf
jnp
out
or
addr16
in
xchg
gs
sbb
mov
add
xlat
push
push
fcompp
out
dec
iret
loop
sub
xchg
mov
cwtl
or
inc
les
dec
dec
jg
mov
sub
bound
in
xlat
cmp
and
iret
ret
rolb
cmp
dec
loope
leave
inc
rorl
jae
clc
pop
sub
rcr
push
lods
test
or
cmp
pop
sub
rol
mov
into
jnp
mov
neg
movl
movl
movl
movl
adc
movl
or
movl
xor
movl
movl
xor
add
sbb
mov
movl
cmpl
movl
not
jmp
not
jbe
push
push
call
xorl
or
subl
add
adc
sub
addl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
call
mov
or
xor
sbbl
neg
mov
or
movl
movl
add
mov
cmpl
movl
mov
jmp
movl
mov
jae
push
call
or
movzwl
or
mov
sbbl
sub
inc
xor
add
sub
xor
mov
add
mov
movzbl
or
and
movzbl
sub
mov
sub
sub
jmp
xor
es
and
jmp
js
pushf
fs
ret
enter
jmp
pop
loopne
cwtl
mov
loop
cmp
inc
mov
jb
fistpl
test
cmpsb
dec
popa
insl
push
in
jg
push
pop
cwtl
sahf
dec
das
roll
sub
sbbb
lods
push
sub
jb
movl
jae
aaa
jp
sbb
shll
jmp
lret
pop
mov
mov
dec
jmp
pop
and
mov
sub
call
pop
shr
jae
dec
fwait
sub
add
in
repnz
ss
ja
mov
mov
or
in
movsb
iret
cld
mov
push
cwtl
and
dec
ret
sar
enter
lods
aam
fst
mov
repnz
add
inc
jnp
scas
mov
sbb
arpl
inc
lods
cmpsl
cmp
xor
lcall
test
mov
mov
bound
es
inc
outsl
cwtl
cs
jae
pop
sub
fidivl
xor
mov
sti
xchg
push
xchg
inc
or
std
jmp
push
cmp
jo
cmpsl
negl
lret
lahf
xchg
outsb
pop
push
xchg
fldt
add
sbb
pop
mul
dec
mov
movsb
cmp
inc
in
push
fbstp
mov
sbb
test
loopne
add
xchg
add
mov
roll
xchg
xchg
mov
cmpsb
sub
lods
jns
sbb
cwtl
fldcw
push
or
xchg
les
loopne
shlb
push
rcl
and
bound
cmpsl
insb
lea
test
jns
ficompl
loop
jns
mov
fiadds
ret
cmp
mov
jbe
push
xchg
icebp
sbb
pop
push
push
inc
jmp
xchg
inc
xchg
mov
jo
cwtl
movsb
popa
loopne
push
and
je
pop
xchg
lods
outsb
jmp
add
sbb
and
stc
pop
loope
cmpxchg
lahf
push
inc
arpl
ret
push
push
push
lock
cli
imul
jns
arpl
xchg
sub
cmpl
mov
mov
movl
jmp
movl
jle
push
call
and
subl
adcl
movzwl
adc
xor
sub
cmpl
movl
mov
mov
movl
jmp
movl
jb
pushl
push
push
call
sub
and
adc
adc
imul
xor
jmp
nop
push
push
sub
sbb
jle
jl
mov
enter
and
mov
js
out
cmovae
sbb
adc
lock
xor
in
mov
xchg
mov
dec
mov
pop
cmp
das
cmp
mov
sarb
fimull
enter
push
push
hlt
adc
hlt
notb
fnstcw
push
mov
mov
cmp
imul
imul
dec
fdivrl
cmp
loope
mov
xor
add
stos
arpl
push
loope
jp
push
in
fistps
mov
push
mov
jns
jae
lods
mov
mov
ds
idivl
adc
pop
jmp
add
pop
test
push
stc
jns
call
aad
adc
ljmp
mov
outsb
fidivrs
cltd
rorb
adc
fisttpl
in
or
das
scas
push
rclb
mov
sbb
mov
mov
addr16
stos
cmpb
in
lods
inc
icebp
loope
sub
in
mov
cmp
ljmp
xchg
inc
fs
push
adc
mov
fdivr
mov
cltd
xor
popa
sbb
pusha
inc
js
xchg
lods
ljmp
rclb
out
fsubrl
arpl
mov
int3
addr16
or
mov
lret
fcomi
dec
loope
stos
sbb
sbb
xchg
lret
and
sbb
adc
push
stc
cmp
fsubl
jbe
lahf
pop
lahf
sahf
pop
faddl
lea
jo
xor
mov
inc
jae
mov
sub
aas
out
out
xbegin
test
jmp
push
mov
mov
xchg
pop
gs
inc
and
sbb
out
int
cmpsl
sbb
shl
sbb
ss
ret
adc
daa
xor
sub
cmp
mov
or
les
inc
jp
xor
test
incl
testb
adc
test
sub
inc
add
xor
inc
add
notl
not
jmp
movl
je
push
call
movzbl
adc
mov
sbb
sbb
xor
subl
mov
mov
sub
or
or
mov
jmp
loop
out
cmpsl
inc
sbb
inc
mov
sub
xor
adc
mov
enter
mov
jo
mov
xchg
or
push
jo
sbb
repz
or
fisubl
pop
aam
js
imul
and
jg
inc
pusha
jp
pusha
or
pop
add
mov
in
mov
fistps
xor
aaa
or
loop
push
dec
rolb
shll
enter
jecxz
mov
cli
xor
fwait
inc
lahf
push
notb
cmp
movsb
xchg
aaa
lods
mov
lcall
mov
mov
adc
fs
es
xchg
pop
sbb
insb
cs
or
xchg
scas
jp
jno
insl
pop
aam
mov
mov
cmpsl
mov
shlb
test
dec
test
cmp
sub
push
loopne
sub
sub
or
or
in
rcl
mov
xchg
mov
dec
push
cmp
or
aas
pop
add
cmc
push
jb
sbbb
jge
sbbl
in
mov
jp
hlt
mov
add
cmp
xor
adc
cmpb
jg
ret
or
lcall
rorl
out
in
scas
cmpsb
test
mov
mov
lret
adc
addb
popa
adc
popa
xchg
rcrl
xlat
mov
std
or
negb
loopne
adc
push
lods
scas
sbb
add
xchg
xor
mov
or
pop
cmpsb
pop
clc
out
daa
rol
xor
out
push
lret
sub
insb
xchg
cmpsb
inc
push
arpl
push
lock
or
adc
sbb
push
outsl
mov
jo
sub
sub
push
xor
popa
test
sbb
rolb
cltd
dec
sbb
and
xchg
xor
test
mov
sbb
jmp
stc
gs
mov
aam
dec
lds
fmull
pusha
pop
add
xor
or
add
xor
or
mov
sub
sub
mov
adc
lea
andl
and
movzbl
add
mov
mov
sub
add
mov
movl
adc
movl
cmpl
mov
notl
jmp
mov
jg
push
push
call
sbb
or
or
add
inc
sub
subl
movl
andl
movl
mov
cmpl
movl
movzwl
mov
jmp
mov
jge
pushl
pushl
call
add
xor
xor
and
and
movl
sbb
mov
mov
adcl
xor
andl
xor
xorl
mov
call
mov
mov
decl
mov
addl
mov
addl
xor
xor
adcl
mov
subl
call
decl
or
dec
or
add
mov
sbb
mov
xorl
xor
xor
mov
call
cmpl
mov
movl
mov
mov
jmp
mov
ja
pushl
push
push
push
push
call
subl
mov
or
or
and
mov
xor
or
mov
mov
decl
mov
add
mov
xor
andl
xor
subl
mov
cmpl
movl
movl
mov
jmp
mov
movzwl
jne
push
push
pushl
push
pushl
push
call
andl
subl
addl
subl
sbbl
subl
movl
mov
sbb
mov
notl
mov
mov
addl
call
adc
mov
adcl
or
sbb
mov
addl
or
incl
push
sbbl
push
sbbl
push
andl
push
call
mov
cmp
jne
sub
mov
mov
subl
xor
andl
xor
andl
mov
movl
call
sbb
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
inc
adc
cmp
pop
pusha
js
rcrb
adc
adc
stos
or
adcb
adc
movsl
call
xchg
xchg
mov
popa
adc
adc
dec
xchg
cmp
cld
mov
push
lods
inc
aad
leave
repz
ds
mov
lds
xchg
adc
push
pop
pushf
jmp
repnz
ficomps
movsb
xchg
movsl
mov
stos
pop
int3
xor
ljmp
add
in
test
int
nop
and
popf
mov
or
test
movsb
fsubrs
jnp
fwait
mov
add
jg
sbb
pop
push
inc
dec
mov
bound
add
cltd
push
scas
hlt
xlat
or
add
mov
in
mov
or
xor
cwtl
aam
out
faddl
inc
std
loopne
mov
jo
fsts
sub
xor
sti
mov
in
lea
jge
sub
xchg
push
fistpl
adc
loopne
rorl
pand
push
test
adc
es
sub
test
enter
pop
imul
js
mov
rclb
ret
ret
sbb
and
or
xchg
sbb
lret
rolb
xor
lods
cmp
mov
scas
dec
stc
inc
ss
jnp
jmp
dec
add
add
loop,pn
shrb
jne
shl
inc
stc
lea
outsb
pop
adc
incl
mov
dec
xor
push
xchg
cld
sbb
enter
dec
cmp
mov
outsb
ljmp
jmp
les
dec
aam
lods
add
sub
cli
mov
xchg
and
test
inc
mov
lcall
daa
imul
and
pop
mov
jno
push
das
cmpb
mov
test
scas
cwtl
call
push
push
xlat
lret
insl
xchg
mov
rorb
sti
pop
jno
push
sarl
xchg
pop
lret
gs
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
jmp
leave
out
loope
pop
sub
lret
xchg
adc
movlps
stc
mov
insb
and
inc
cmp
sarb
cld
imul
in
xor
rcrb
aam
pop
lods
jnp
mov
popa
andl
push
push
xchg
outsl
or
outsl
lret
and
lods
repnz
std
or
mov
mov
lds
in
pop
pusha
mov
mov
testb
fwait
notl
mov
sbb
push
fnstsw
push
jnp
dec
cmp
sbb
dec
gs
lret
xor
jmp
repz
push
in
push
mov
adc
das
sbb
fwait
into
push
push
popf
push
sahf
adc
ret
cmc
mov
ret
in
xlat
sbb
xor
add
movsl
cltd
cli
outsb
cltd
inc
adc
mov
imul
jg
xchg
shlb
lock
mov
dec
add
inc
fsubl
bound
das
fdivr
sbb
xor
push
sbb
push
push
out
push
aad
jo
orl
inc
pusha
mov
jecxz
add
movsl
mov
ret
mov
add
loop
gs
sbb
inc
sbb
push
add
stos
dec
pop
add
fnstsw
fdiv
push
ficoms
sti
fbstp
faddl
imul
or
or
out
notb
dec
cmpsb
push
enter
or
add
aaa
and
test
dec
cmp
and
daa
fnstenv
jmp
sarl
mov
mov
leave
ja
sahf
repnz
sbbb
jge
mov
out
pop
popf
in
jb
jp
adc
mov
insb
mov
dec
or
out
sahf
out
fadd
js
lea
cmp
jb
xorb
bound
out
or
dec
loop
xor
int3
sti
or
mov
ljmp
test
or
inc
and
inc
push
mov
clc
pop
pop
xor
into
xlat
dec
xchg
mov
sub
cmp
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
jmp
mov
popa
sahf
sbb
lods
insb
iret
out
push
push
test
adc
movlps
ljmp
loopne
pop
in
mov
scas
dec
cmp
shlb
lret
cs
notb
jno
psubw
push
push
inc
mov
mov
repnz
iret
jp
jge
adc
cld
mov
xchg
test
pusha
aaa
aad
rclb
mov
cmc
leave
dec
fstl
fcoms
push
jns
mov
mov
sub
loopne
jg,pn
sub
add
shrb
dec
pushw
adc
cmpsl
jecxz
test
add
insl
int3
je
xchg
repnz
hlt
mov
add
insb
add
pop
lahf
mov
scas
jle
jb
push
pop
push
inc
aam
cli
add
xchg
outsl
pop
in
lahf
mov
sahf
xor
lcall
mov
pop
pop
out
test
popf
sahf
push
iret
or
jo
je
cs
fwait
cld
insl
jle
sub
sar
push
push
ror
out
pop
dec
sahf
dec
jb
sub
xchg
sub
cwtl
dec
lahf
stc
dec
testl
push
popa
inc
cld
cltd
lock
inc
bound
xlat
cwtl
add
sbb
les
cmp
mov
cs
sub
ljmp
cmp
push
push
pop
or
sub
hlt
outsl
repz
mov
aad
loope
pop
repz
insb
fs
cmp
stos
lcall
cwtl
cmp
and
mul
sub
inc
xchg
outsb
push
loop
les
inc
std
mov
dec
jae
nop
mov
mov
lret
cmpsl
int3
add
mov
mov
in
fwait
mov
sbb
and
ljmp
add
mov
ret
pusha
push
mov
and
cmp
xchg
add
mov
inc
xchg
add
loopne
mov
push
add
sub
cmpsb
sbb
pushf
mov
pop
dec
ror
xchg
push
insl
jb
in
xor
sbb
add
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
jmp
add
xor
and
aas
loope
xor
js
mov
adc
adc
xor
sbb
bound
stos
popf
imul
jge
sbb
cmp
je
clc
xchg
je
pop
or
pop
mov
lret
xor
lea
xchg
and
aas
xor
out
inc
xor
cmp
insl
mov
mov
push
add
push
push
sub
xor
cmp
add
hlt
dec
xchg
and
call
popa
adcb
xor
add
iret
cwtl
sbb
adc
or
cs
push
je
xchg
dec
int3
jle
adc
shrb
push
inc
mov
xor
mov
divl
add
inc
rcrb
push
mov
nop
inc
jg
push
sarl
push
adc
js
gs
and
jnp
push
nop
push
dec
aam
ret
xlat
loop
push
je
cmp
lret
addr16
adc
leave
push
data16
pop
and
and
sub
cmpsl
push
xchg
adc
jl
addr16
faddl
je
fists
jnp
arpl
movsb
jo
pushf
mov
outsl
and
pop
cmp
enter
gs
lea
add
inc
mov
xchg
inc
xchg
inc
mov
cmp
or
mov
pop
stc
jnp
les
mov
scas
xchg
cmp
cmc
mov
push
dec
nop
jae
int3
test
into
mov
nop
mov
inc
or
loop
imul
out
jnp
les
aas
es
jge
jnp
dec
mov
pushf
or
push
add
lret
xor
xchg
std
aad
push
das
xchg
lcall
movsl
jb
mov
mov
xchg
xchg
je
cmp
pop
pop
sbb
and
jge
sub
cld
dec
lret
lods
jbe
shl
shll
dec
xlat
add
call
push
fst
sub
js
sbb
fwait
pop
dec
pop
inc
je
sub
clc
pop
or
xchg
cmp
or
decl
test
mov
pushl
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
jmp
insl
xor
jb
push
sub
aad
push
mov
adc
push
xor
jmp
gs
push
mov
jmp
mov
out
into
adc
cvttps2pi
inc
nop
pop
jl
out
xchg
inc
xchg
cmpsb
mov
das
lods
iret
fiadds
out
incl
pop
cltd
inc
add
mov
cltd
fldl
clc
xor
fcompl
sub
daa
repnz
movsb
popf
inc
and
test
shll
cmp
inc
inc
lahf
adc
add
mov
dec
int3
shll
and
rolb
aad
in
jl
cmp
dec
ret
sub
or
inc
shlb
cmp
imul
ds
or
mov
insb
insl
repz
jne
cvtps2pi
mov
inc
rcr
and
adc
and
sbbb
adc
mov
mov
jl
jbe
xchg
jle
mov
dec
and
rcll
daa
mov
loopne
lds
in
daa
out
mov
push
cmp
fistl
sarl
mov
ficoml
dec
cmp
insl
neg
cmp
imul
ffreep
mov
sti
and
movsb
and
push
adc
test
jl
in
or
gs
xor
gs
mov
mov
add
jp
push
inc
clc
push
adc
shl
jns
int
inc
sbb
rorl
jne
addr16
pop
ljmp
outsb
jbe
add
sub
cmp
stc
mov
popf
inc
jns
or
mov
or
movsl
adc
sbb
inc
xor
cs
lret
xor
insb
lods
test
adc
mov
xlat
sarb
cmp
xor
xor
dec
repz
sub
aad
pop
mov
insl
ss
fs
cwtl
in
dec
mov
int3
iret
mov
or
testb
call
push
mov
jne
test
push
push
leave
test
scas
cmp
cmpl
jecxz
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
jmp
pop
cli
xchg
ret
xchg
mov
enter
pop
lahf
dec
call
outsl
pop
lcall
popa
mov
jbe
cmpb
pop
lods
push
ret
shl
cmc
pop
add
sbb
fistpll
rcrl
jne
rcrb
adc
sub
sbb
lret
aas
sarl
sub
les
lcall
or
pop
lahf
xchg
dec
popa
lcall
loope
cmp
xchg
dec
xor
adc
iret
mov
sbb
fs
mov
int
inc
fst
cli
dec
aas
bswap
and
icebp
nop
popa
and
xchg
sbb
loope
adc
das
repz
or
jnp
inc
in
icebp
int
dec
mov
insb
pop
pop
push
je
cmp
sub
iret
push
add
sub
insl
movsl
les
ret
aam
es
xor
insb
scas
clc
inc
inc
stos
into
cmpsl
test
scas
js
and
dec
sub
andb
pop
loop
fld
pop
shlb
push
call
pop
call
mov
or
push
loop
pushf
nop
data16
mov
pop
sahf
test
cmp
mov
jae
lods
or
add
repnz
arpl
call
xorl
or
xor
mov
xchg
stos
mov
xchg
rorl
pop
repnz
std
jbe
shrl
addr16
jg
nop
push
inc
stc
leave
movsb
adcb
shlb
testl
cmp
fldenv
test
test
add
add
inc
pop
mulb
aad
popa
push
mov
push
and
or
in
jg
dec
xlat
push
add
cmp
gs
dec
popa
mov
mov
add
shlb
adc
sbb
cli
test
addr16
js
icebp
push
xchg
sub
pop
xchg
mov
popa
push
inc
dec
addr16
push
xlat
inc
cmpsl
scas
xchg
lret
fwait
adc
mov
test
cltd
add
add
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
jmp
stos
cmpl
and
sahf
sarb
inc
je
sbb
movlps
mov
dec
lods
jns
or
mov
xor
add
push
aas
shlb
es
idivb
ret
mov
mov
push
dec
ljmp
scas
xor
mov
and
mov
xchg
cmpsb
sbb
xor
or
add
sbb
xor
pop
cmpsl
insl
repz
call
xchg
push
adc
pop
sahf
cltd
xchg
jle
test
lock
in
ret
xchg
loop
lcall
and
test
jmp
jne
and
lds
push
mov
and
fsubrs
xor
shll
imulb
hlt
ja
shrb
xor
or
into
adc
xchg
lret
sarl
sub
movsb
insl
sbb
mov
loop
aas
mov
test
pop
fdivs
sub
mov
sub
lock
mov
hlt
and
mov
cs
inc
sub
enter
lea
test
jne
or
xor
xchg
ret
addl
ds
push
fcoms
lret
or
ljmp
and
mov
jo
dec
call
test
lea
jnp
testl
insl
test
jnp
lahf
mov
push
lret
test
add
push
mov
dec
js
aam
popa
push
andl
notl
push
mov
out
mov
jge
mov
in
cmp
leave
xor
mov
push
add
clc
popa
hlt
adc
sbb
in
out
xchg
cmc
enter
or
es
cmpsb
mov
pop
fmuls
or
test
jne
das
icebp
or
pop
loope
fldcw
and
sarl
cld
adcl
loope
inc
jne
pop
push
cwtl
adc
sbb
xor
pop
mov
mov
mov
xor
cmp
dec
pop
xchg
mov
push
les
add
decl
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
jmp
and
lret
sbbl
js
insl
jp
rclb
adc
roll
mov
dec
ror
or
pop
ds
lods
sub
inc
pop
ss
push
out
jne
imul
add
inc
xchg
sbb
outsb
dec
pop
ss
add
pop
push
pop
test
mov
jae
lahf
mov
stc
jne
test
out
repz
mov
in
xchg
inc
add
sbb
sbb
jp
decl
lock
adc
xor
mov
pop
pop
in
mov
int
mov
xor
xchg
out
mov
mov
dec
xchg
sbb
cmp
xchg
in
xor
int3
cmpsl
shrl
mov
sub
mov
test
mov
sbb
xchg
dec
leave
push
scas
scas
push
rolb
push
stos
xchg
je
mov
lahf
mov
popf
test
adcl
lods
mov
push
lea
lock
jae
sti
andl
push
cmp
sbb
rolb
xor
mov
repz
and
lahf
out
jge
push
mov
mov
cmc
mov
neg
imul
mov
pop
cmc
jnp
mov
mov
inc
sarb
cmp
test
jo
push
mov
repnz
aaa
push
mov
and
inc
jl
ret
lods
jle
ds
stc
test
icebp
es
out
mov
mov
jno
in
mov
cmp
xchg
dec
out
fiaddl
lods
mov
cmp
in
add
imul
lods
faddp
mov
cli
add
mov
and
lret
mov
sbbb
fldcw
bound
les
in
xchg
rol
mov
fwait
enter
pop
lods
pop
sbb
cmc
sbb
adc
stos
fcompp
xchg
aam
insl
js
and
fcompl
inc
and
cmp
sbb
insl
lret
push
sub
aam
lds
dec
fsub
xlat
pop
sti
cmp
dec
test
inc
ss
lret
ja
jg
xchg
out
xor
or
mov
sub
movl
movl
movl
movl
lea
mov
mov
movzwl
jmp
pop
pop
lods
mov
and
pop
mov
mov
lods
xchg
adc
outsb
or
rolb
inc
xchg
add
icebp
or
pop
jg
xor
loope
stc
repz
xor
aad
cmc
rcll
jnp
iret
shlb
ret
xor
std
and
ret
pop
xor
adc
pop
cld
add
cmc
jge
cmp
dec
xchg
shlb
add
xchg
sbb
lret
inc
mov
jne
mov
sbb
push
lock
adc
jnp
push
jg
and
xor
mov
lret
add
xor
xlat
andl
clc
mov
mov
sarl
icebp
arpl
lret
push
jne
dec
scas
add
repz
in
clc
cmp
mov
fistps
pop
ret
dec
sub
xchg
cld
mov
fs
je
call
pop
imul
stos
loop
mov
fistpll
outsb
xchg
push
outsl
shll
imul
lods
je
xchg
mov
adc
outsl
jl
fs
add
in
inc
or
ret
pusha
add
xor
lds
sbb
cld
cmovae
cmp
sub
rorl
inc
rol
jmp
mov
outsl
sub
rol
jecxz
es
and
mov
and
jno
jae
sbbl
add
sbb
jo
in
into
int3
push
cwtl
arpl
sbb
inc
movsb
or
cltd
dec
loope
data16
jle
jl
jle
mov
mov
gs
mov
add
dec
xchg
sub
pop
mov
xchg
and
pop
imul
pop
and
sub
loop
into
mov
jbe
lods
push
fcmovnbe
sbb
xor
loop
fwait
jecxz
mov
aad
test
push
sub
sub
mov
icebp
stos
and
pusha
notb
iret
sub
sbb
test
sub
sbb
xor
in
jbe
enter
xor
int
mov
fwait
mov
rcl
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
jmp
dec
sbb
sbb
sbb
sbb
scas
sbb
insl
adc
cmp
adc
xorl
frstor
hlt
xchg
xor
test
pop
fimuls
jb
or
add
clc
pushf
dec
jbe
out
dec
rcrl
popf
add
ja
and
jl
lock
inc
test
scas
es
cmc
shll
xor
js
stc
jb
adc
into
jnp
mov
in
xchg
aaa
loopne
cmp
and
aad
inc
xor
xor
repnz
cwtl
jmp
mov
aas
mov
mov
aad
cmp
pop
xchg
push
pop
in
test
sub
fwait
pop
gs
imul
repz
jns
ds
sbb
jbe
lock
push
fucomp
or
inc
lret
xlat
push
jb
insb
loop
mov
je
mov
push
mov
nop
sub
cltd
call
push
call
mov
and
jo
push
fisttpll
lret
add
fld1
adc
aad
jnp
mov
sub
arpl
jmp
jns
imul
sar
jle
loope
jbe
cmpb
xchg
popa
fildl
dec
iret
cli
pop
insb
bound
push
jne
leave
xor
insb
mov
loop
fcompl
adc
popa
call
mov
test
add
mov
inc
movsl
ss
fs
cmp
int3
cs
into
shrl
nop
jl
dec
call
cmp
push
xor
arpl
cmp
xchg
ljmp
loop
sbb
cmp
data16
jmp
push
and
add
popa
lea
pusha
jmp
repz
xchg
popa
pop
nop
jns
sbb
cwtl
cmp
imul
incl
xcrypt-ofb
cmpsl
sub
notb
insb
mov
xchg
xor
xor
and
jge
movsl
int3
mov
push
cmp
mov
fbstp
arpl
push
and
xor
scas
inc
scas
out
sub
in
loop
xchg
pop
or
movsl
imul
or
decl
test
decl
pushl
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
jmp
push
pop
inc
ficomps
clc
les
out
mov
adc
shr
mov
stos
or
fadds
xchg
mov
addb
daa
cltd
adc
fcmovnb
xchg
ds
rclb
push
arpl
sub
outsb
sub
and
inc
ljmp
cmp
call
adc
aam
fldenv
mov
pusha
mov
mov
inc
jno
dec
nop
ror
cli
mov
incl
ljmp
dec
aad
add
in
mov
mov
lea
daa
int
repz
push
and
adc
jbe
cmp
jns
push
pop
ljmp
cmp
add
push
adc
and
xor
test
aam
jp
in
jp
xchg
mov
pop
mov
ja
dec
or
lahf
add
je
std
fwait
ja
inc
outsl
dec
arpl
add
sub
jbe
jnp
lods
jbe
imul
mov
sar
fsub
xor
mov
ret
pop
enter
mov
pop
mov
mov
push
mov
pop
pop
mov
fnstcw
xor
cltd
inc
push
cmpb
test
add
push
mov
mov
cmc
rcll
jp
arpl
dec
and
fsubrp
pop
das
sbb
jge
xchg
ds
mov
xorb
mov
test
std
jle
addr16
jnp
iret
imul
popf
cmc
fwait
cmp
into
insb
jecxz
push
lahf
jns
fistps
movsl
sub
les
and
incb
add
adc
popl
push
cmp
sbb
jle
adc
rcr
ds
cmpsl
loopne
repz
icebp
cs
pop
jb
sbb
inc
dec
lock
ljmp
jle
stc
mov
mov
ljmp
shlb
jle
bound
pusha
mov
mov
adc
mov
cmp
js
out
dec
sub
xor
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
out
add
popa
cmpsl
aad
stos
in
cmc
add
enter
ja
sbb
jecxz
jno
ja
cmp
fsubrs
inc
mov
jns
pop
mov
jle
shll
push
dec
mov
xlat
xchg
loope
mov
mov
fistl
mov
adc
jns
pop
mov
pcmpgtb
cmpsb
or
add
call
scas
movsb
pop
cmp
push
mov
movsb
xor
pop
inc
pop
ja
js
jne
jle
cmpsb
test
shlb
add
out
lret
xlat
dec
in
mov
jno
mov
sub
mov
xchg
jbe
cli
dec
mov
inc
aas
xchg
inc
mov
ret
jne
and
push
jb
testb
and
xchg
adc
pop
lret
jl
lahf
scas
inc
test
insb
mov
add
data16
addb
mov
adc
push
jl
enter
push
add
ja
adc
adc
movsb
lcall
or
inc
mov
enter
or
test
jb
and
jmp
mov
sbb
mov
sub
cmp
ja
xor
or
sbb
bound
mov
sti
js
pop
cltd
cwtl
push
pop
xchg
mov
cwtl
or
mov
loop
mov
inc
loope
hlt
jns
aam
cmp
movsl
adcb
aaa
inc
push
in
movsb
icebp
enter
sbb
loop
sub
pop
rcll
mov
or
mov
lock
fsincos
xor
or
adc
in
inc
sahf
mov
data16
fsub
ret
fisubrs
xor
or
lock
jne
in
inc
cmpl
push
sub
xor
xchg
or
xlat
int
mov
lock
and
or
mov
roll
xchg
es
aam
jns
push
into
jns
cltd
rol
mov
pop
jg
jne
mov
mov
mov
xor
xor
mov
call
or
jmp
mov
or
mov
push
push
mov
adc
adc
sbb
sbb
add
leave
mov
ffree
out
lods
sbb
push
xchg
stos
es
fwait
dec
loop
pop
lahf
notl
sub
out
outsl
in
mov
stos
out
add
ss
nop
fisttps
dec
pop
std
aam
jg
sti
pop
fidivl
test
inc
and
in
inc
int
mov
iret
int3
je
gs
inc
pushf
pop
fldt
push
nop
xor
jae
mov
mov
xlat
decb
sahf
inc
add
in
movsl
js
int3
lds
mov
inc
movl
bound
ja
and
les
pusha
lds
adc
adc
push
test
pop
insb
int3
sub
jmp
dec
and
mov
push
xlat
cmp
outsb
cli
sbb
push
xorl
inc
mov
push
mov
jno
call
mov
test
fsubl
cmc
cmp
sahf
xchg
mov
call
adc
adc
movsb
mov
aas
xchg
dec
jmp
push
aad
xchg
pop
ret
or
loopne
dec
xchg
inc
sub
mov
push
push
mov
jns
imul
sahf
in
cltd
or
out
fnstsw
and
xchg
cmpsl
or
jle
mov
fisubs
push
push
addl
adc
mov
add
or
cmp
pop
jl
cs
in
or
in
popa
movsl
sub
dec
mov
cli
repnz
mov
add
testl
je
jb
gs
pop
pop
lret
jl,pn
inc
aad
xchg
or
jbe
out
aam
sub
negl
test
or
hlt
ljmp
es
sub
repz
test
sbb
aas
push
inc
movzbl
push
inc
mov
cmp
mov
inc
sti
and
je
jnp
add
out
mov
imul
or
decl
decl
cmp
jmp
stos
js
pop
and
mov
pop
gs
or
adc
movlps
sub
xchg
cmp
sub
test
fstp
nop
jns
fnstenv
icebp
inc
jg
dec
push
loopne
mov
mov
lods
inc
adc
shlb
add
shlb
adc
sub
mov
cmp
sbb
push
cmp
les
mov
std
mov
lret
mov
mov
dec
dec
fstl
inc
jecxz
ret
cmc
dec
push
and
sbb
push
sbbb
pushf
xchg
fmulp
xor
mov
test
cmp
es
dec
lcall
cmc
daa
xorb
lods
xchg
js
test
stos
aaa
rorb
mov
stos
adc
push
inc
sbbb
jnp
pop
cmp
ds
adc
shrl
add
stos
inc
pop
imulb
nop
jg
add
and
mov
lods
fdivr
fwait
add
std
pop
fldl
test
push
mov
mov
iret
dec
and
dec
pop
popf
aaa
stc
jecxz
inc
je
dec
lods
int
inc
push
or
fstps
mov
jge
and
cld
jbe
sbb
mov
scas
js
pop
and
mov
andb
movsl
sub
incl
xor
adc
adc
cmp
out
scas
push
shlb
push
les
cmp
mov
fldt
test
jae
push
dec
mov
popf
mov
or
cmpsb
jb
lods
inc
xchg
or
into
or
shrb
mov
xchg
and
aas
pop
or
xor
mov
sbb
add
dec
adc
repnz
movsb
sbb
ret
outsl
mov
mov
and
in
ud2
mov
repnz
out
stos
mov
das
fisttpl
cltd
jecxz
call
repz
add
fwait
dec
adc
sub
outsl
out
test
add
add
decl
decl
mov
addl
add
mov
sar
jmp
ds
in
mov
xchg
js
test
adc
adc
xchg
ret
jmp
xchg
pusha
idivl
in
jle
sarl
dec
pushf
or
dec
loop
push
mov
fstps
lea
test
mov
jge
xchg
sahf
xchg
inc
inc
out
jb
pop
popf
les
or
fimull
testl
pop
daa
cmpb
push
jp
pop
aad
daa
fcomps
cmc
test
and
loop
fcomps
jg
or
stc
pop
out
cmp
leave
mov
or
jnp
push
outsl
mov
in
push
loope
jo
sbb
movsl
dec
ret
data16
sarb
and
and
jp
mov
cmpsb
rorl
subl
sbb
gs
add
xlat
hlt
adc
and
scas
cmp
out
scas
mov
test
mov
and
and
mov
in
pushf
fs
jns
por
inc
ljmp
clc
out
ss
xchg
mov
adc
lret
pop
frstor
sbb
jmp
scas
fisttpll
test
mov
adc
xchg
mov
sub
dec
cmpb
pop
jecxz
jo
push
dec
iret
out
imul
fdiv
int
sub
mov
je
xchg
sti
xchg
push
jb
cmp
pop
and
pop
mov
fdivl
or
std
xchg
mov
xor
or
ljmp
sbb
or
sbb
push
repz
push
shlb
jbe
subb
outsb
add
into
jnp
pop
dec
mov
add
insb
mov
outsb
cmpsb
rorl
xor
sub
xlat
xchg
and
movq
lar
adc
mov
or
into
imul
lret
mov
push
jno
shll
sub
cmp
lret
fwait
xchg
popa
loop
add
mov
xor
cmpb
xor
xchg
mov
mov
pop
test
and
add
imul
or
pop
mul
sub
decl
decl
mov
mov
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
jmp
jns,pn
xchg
pop
subl
js
mov
mov
enter
push
adc
loop
notb
mov
lea
push
movsl
in
adc
inc
mov
in
cmp
jo
dec
imul
xchg
jg
fmuls
dec
bound
loopne
sbb
jmp
std
jbe,pt
fs
fs
arpl
jb
dec
mov
mov
xchg
imul
rcrb
je
data16
xor
mov
jbe
cmpsb
ds
mov
aam
push
mov
pushf
pop
lea
loopne
scas
movsb
mov
xor
shll
dec
mov
sbb
cmp
dec
repnz
jo
pop
incb
inc
xchg
js
dec
sub
or
stos
cmpl
xor
sahf
inc
negb
or
data16
xor
xor
xchg
in
rcll
xor
lret
insb
test
mov
aas
and
xchg
fisubs
jl
xchg
out
test
mov
jnp
and
lds
mov
or
mov
push
push
mov
pop
xor
dec
pop
lods
lock
es
test
arpl
add
loope
rolb
pop
pop
sub
aas
fdivp
rclb
ret
push
sbb
pop
push
test
dec
pop
cmp
xor
arpl
sub
adc
jle
sbb
jo
adc
and
nop
dec
outsb
in
cmc
push
into
ds
lret
pop
xor
hlt
dec
mov
cltd
gs
push
jecxz
fnstsw
xchg
or
hlt
and
jle
and
les
out
lret
push
xor
xchg
je
scas
or
sbb
fwait
mov
dec
jmp
sub
jmp
cmpsb
mov
jb
xchg
leave
sbbl
into
xorb
add
jno
inc
mov
in
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
jmp
arpl
or
push
or
insb
es
adc
adc
mov
das
mov
dec
dec
push
mov
mov
dec
jnp
pop
mov
lock
cli
pop
pop
jle
sbb
pop
mov
mov
mov
cmp
jecxz
push
movsl
dec
cmp
dec
adc
push
pushf
movsb
sub
or
sub
xchg
out
je
repz
push
xor
cmp
mov
mov
mov
js
dec
push
mov
int
int
rcll
jno
lds
xor
not
imul
mov
aad
scas
fldt
push
mov
add
ret
add
pop
icebp
fistpl
add
imul
lock
inc
jbe
and
mov
dec
pop
stos
mov
imul
out
imull
xchg
cmp
lret
mov
imul
ret
std
add
in
jne
push
aam
lcall
pop
out
in
lds
std
lock
vpsubd
cbtw
cmp
inc
aas
xchg
xchg
leave
cmp
addr16
sub
and
dec
xor
xchg
mov
xor
ss
adc
pop
lret
test
mov
pop
stos
sbb
push
push
out
push
add
inc
xchg
in
adc
push
push
out
gs
decb
mov
scas
leave
mov
in
daa
xor
cld
gs
enter
mov
xchg
mov
or
int
push
shll
xchg
sub
test
adc
or
mov
stos
pop
sbb
sub
pop
fdivl
or
leave
pop
jecxz
cmp
dec
inc
push
adcl
push
ss
and
sub
xor
and
es
cltd
cmpsb
call
jne
clc
mov
dec
ds
insb
filds
and
mov
addb
mov
stos
xchg
in
inc
daa
icebp
arpl
pushf
scas
into
imull
rcr
addr16
sub
orb
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
jmp
xorl
jns
sbb
pop
lods
ss
stos
fldcw
adc
movlps
pusha
mov
inc
into
xor
mov
frstor
mov
mov
popf
xlat
gs
mov
loop
rol
mov
jecxz
ret
mov
mov
xlat
dec
lock
mov
pop
mov
or
sub
int
mov
push
or
mov
enter
cmpl
sub
lret
cli
cmp
mov
sbb
mov
push
aam
cld
cmp
xlat
pop
dec
cmc
in
fstpl
ds
sbb
pop
fidivrl
pop
jo
pop
push
adc
mov
add
inc
sub
in
bnd
jo
cmc
or
xor
stos
sub
je
cmp
mov
cs
add
ss
mov
stos
pop
cmp
sbb
lock
push
xor
and
push
cmpsl
les
call
mov
dec
cli
scas
scas
lret
idivb
adc
sub
iret
negl
xor
loop
sahf
and
fimull
mov
push
jl
push
in
call
mov
mov
and
xchg
or
rcrl
cltd
or
cmp
les
shlb
scas
pop
fs
loope
rcrl
arpl
sahf
movl
mov
repz
aaa
mov
dec
mov
rorl
out
in
push
mov
stos
sahf
and
ja
push
sahf
cmp
lret
sbb
stos
xor
mov
xor
out
jmp
xchg
pop
jmp
mov
test
adc
imul
add
inc
push
pop
dec
ret
sbb
daa
dec
mov
sbb
jmpw
fdivrl
in
mov
ljmp
loope
xor
push
insl
adc
sbb
hlt
cmpb
mov
ja
insl
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
jmp
adc
fldl
out
cli
pop
push
fdivrs
enter
cmp
xchg
push
cmpsl
mov
lret
roll
iret
fdivrs
push
addb
int
mov
or
add
xchg
ja
mov
and
cmpsb
push
std
loop
roll
jmp
lock
movb
loop
adc
mov
adc
jg
pop
lock
loopne
shrb
or
into
lahf
xor
sub
mov
pop
jle
fwait
jecxz
hlt
ss
and
xchg
test
jbe
movsl
out
mov
push
mov
aaa
loopne
bndldx
push
pushf
or
pop
lock
xchg
push
pop
mov
adc
int3
dec
movsl
xchg
sub
pop
xchg
push
and
rorl
pop
cli
fsubl
in
dec
mov
in
add
xchg
mov
test
jl
dec
or
and
adc
ljmp
pop
std
scas
pushf
mov
cmpsb
cltd
cmc
cltd
mov
xchg
and
lret
fcomi
mov
pop
and
cmpsb
mov
je
jno
dec
jnp
imul
pop
stos
aas
fisttps
repz
iret
xor
xchg
mov
pop
idivb
and
mov
inc
push
jle
mov
inc
push
sbb
lea
imul
sub
and
pop
int
lods
dec
addr16
adc
mov
cltd
mov
bound
outsb
sbb
mov
xlat
test
mov
lods
push
mov
in
call
dec
pop
es
mov
pop
lds
push
and
int3
xor
scas
in
jle
les
lods
lahf
fbld
pushf
insb
pop
ljmp
rclb
mov
out
movsl
sub
inc
mov
cmp
cs
out
and
fmul
mov
add
stos
pop
push
sbb
sbb
push
mov
jmp
adc
ss
mov
xchg
cmp
sahf
xchg
add
daa
sub
repnz
mov
xchg
decl
test
decl
pushl
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
jmp
out
in
in
mov
mov
inc
pusha
adc
adc
sahf
pop
sbb
loope
jne
popa
xor
xor
sub
lea
adc
cmp
stos
call
push
dec
or
sbb
aam
jae
pop
aaa
sub
and
jo
push
int3
int3
add
dec
mov
cmp
mov
dec
inc
add
cmp
sbb
sub
lcall
xchg
jecxz
int
pop
sub
or
in
in
xor
mov
xchg
dec
ds
push
leave
pop
fbld
and
aad
aad
das
sbb
mov
lret
les
shlb
pop
lahf
cwtl
in
dec
mov
push
out
cld
inc
fldenv
ret
lock
adc
adc
pop
inc
push
enter
les
adc
addr16
call
cli
test
mov
std
fst
push
xor
push
shlb
push
mov
fs
xchg
jmp
cmpl
daa
push
imul
pop
push
push
xor
dec
cs
mov
xor
push
sbb
shrb
sbb
mov
jb
scas
sbb
xor
mov
add
sub
or
inc
sub
push
push
in
inc
cltd
sub
mov
fstp
dec
dec
repz
rcrl
mov
daa
cli
cmpsb
push
and
cwtl
xchg
mov
cmp
pop
jb
les
jne
sbb
jecxz
adc
jnp
push
inc
rcrl
jnp
cmp
mov
or
mov
push
fldcw
or
xchg
mov
stos
sub
cmp
or
sbb
and
dec
dec
adc
mov
lock
inc
jecxz
test
adc
scas
lahf
or
or
or
scas
sub
push
push
lods
inc
dec
or
or
aas
pop
xchg
mov
add
test
test
add
sub
mov
movl
jmp
adc
add
jnp
bound
ss
mov
pop
adc
adc
je
xor
push
and
movsb
movsl
sbb
out
stos
sbb
xchg
xor
iret
hlt
jbe
es
jle
sub
xlat
out
lcall
cmp
and
mov
repnz
add
jae
jecxz
and
or
inc
add
jle
pushf
cmp
out
xlat
mov
push
push
ja
push
dec
cmp
cld
lods
aas
xchg
in
push
or
add
jg
and
fs
hlt
ja
lds
orl
jp
or
jg
movsl
loopne
and
xorl
shlb
iret
cltd
pop
xlat
pop
jo
ds
xor
gs
xchg
mov
out
loop
adc
dec
mov
xchg
jb
outsl
mov
neg
adc
enter
adc
lcall
dec
xchg
rorb
iret
jge
cmp
add
cmp
ja
push
pop
or
xor
test
fdivl
mov
sbb
enter
fiaddl
ss
fisubs
inc
sub
repz
mov
jns
fwait
xor
mov
loope
mov
hlt
aam
lret
jecxz
sti
stc
imul
sbb
xor
lods
aas
adc
lcall
sub
nop
dec
nop
mov
frstor
je
dec
gs
lds
dec
dec
mov
aas
outsl
add
fwait
inc
pop
ret
mov
fisubrs
and
adc
aad
ficomps
or
sarb
cld
or
inc
push
cld
fs
xor
out
cltd
in
inc
iret
lds
xchg
int
daa
fldl
adc
data16
stc
dec
xlat
into
jb
or
test
mov
pop
loope
adcb
jp
lcall
movsb
adc
sbb
into
or
adc
xchg
jo
push
mov
cmpsl
mov
mov
data16
push
lock
cmp
or
cmc
mov
mov
std
mov
mov
test
decl
test
add
add
decl
decl
decl
xchg
add
adc
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
jmp
or
addl
leave
pop
pop
cwtl
cmp
aaa
mov
insb
stos
pop
adc
adc
outsb
shlb
jnp
nop
sbb
stos
or
aaa
xor
enter
outsb
inc
jb
jg
es
scas
pop
sub
jp
pop
lret
mov
mov
mov
xor
fstl
cmpsl
jle
arpl
xchg
xchg
sub
push
in
pop
test
aad
test
ss
call
jle
addr16
mov
jmp
cmp
outsl
ss
sti
cmc
or
push
scas
push
dec
mov
push
enter
mov
int
sbbl
loope
jge
inc
lods
rcrl
out
pop
lret
xchg
js
aam
cmp
sub
mov
mov
subb
adc
call
xor
je
push
pop
add
pop
mov
jns
repnz
inc
test
imul
pushf
int
mov
in
sbb
jnp
and
in
pushf
dec
jmp
or
sub
out
ficomps
fiadds
mov
je
hlt
fadd
add
aaa
push
daa
jl
mov
pop
cmpsb
aas
enter
ja
movsl
ud1
xor
add
pop
dec
sbb
loope
icebp
daa
and
inc
jmp
add
das
call
push
sar
or
xchg
mov
lods
dec
inc
int3
bound
outsb
add
and
sub
xchg
bound
out
jo
xchg
mov
inc
loopne
fstpl
push
call
in
and
and
add
mov
add
faddl
mov
lret
push
in
cmp
hlt
sub
rcll
adc
shl
outsb
or
in
in
cmpsl
adc
cmpsb
in
sbb
outsl
push
aam
jnp
in
ljmp
insl
ss
in
or
ds
sub
mov
mov
je
and
loopne
add
xchg
and
cmc
xchg
xlat
iret
int
out
rcr
hlt
add
rcrb
clc
rcl
xor
test
jne
std
mov
cwtl
mov
add
fs
sub
daa
or
aad
jnp
sub
push
out
fcmovnu
cmp
cmp
pop
mov
scas
sahf
mov
add
shl
mov
dec
push
inc
push
pop
inc
xchg
mov
jnp
insl
xor
int
test
rcll
mov
gs
push
sub
fstpt
out
or
mov
mov
mov
inc
xchg
xchg
fbstp
jmp
sbb
jno
mov
xchg
adc
pop
jmp
les
mov
call
or
cmp
mov
test
mov
fimull
push
insl
aad
cmp
push
or
rcrl
stc
inc
ljmp
repz
and
push
mov
or
movl
jne
mov
xor
mov
sbb
xor
movzbl
adc
div
xor
xor
sub
mov
mov
movzwl
sub
mov
xorl
div
mov
mov
movl
jmp
sbb
mov
xor
mov
mov
add
mov
adcl
shr
movl
rcr
shr
movl
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
movl
cmpl
je
add
jmp
fwait
mov
xchg
sbb
push
jle
push
adc
adc
pop
ret
jmp
push
out
stc
aas
or
fcomps
push
and
in
cmpsb
nop
insb
out
add
scas
iret
cli
in
outsl
outsl
jl
int
sbb
loop
fs
ljmp
sbb
adc
in
sub
add
enter
fdivrs
mov
jnp
fimuls
fucomip
sub
mov
pop
sbb
cmpsb
pushf
lds
mov
jne
xor
push
mov
into
jp
push
xchg
adc
lret
sub
int
pop
push
leave
lret
test
cmpsl
cmc
fiadds
mov
ja
mov
xor
popf
jnp
sbb
out
mov
jge
xchg
leave
imul
or
xor
outsb
sahf
pop
push
add
loop
inc
movsl
scas
subb
test
pop
lret
insl
mov
xor
fsts
mov
inc
jl
add
sub
outsb
repnz
or
sbb
xchg
ret
jns
push
iret
add
lret
push
clc
pop
aam
aam
push
test
subl
js
js
jno
call
xor
daa
ljmp
loop
mov
popa
lods
xchg
dec
xchg
push
repnz
mov
cmp
cmpsb
inc
mov
mov
sahf
test
sub
subb
arpl
push
sbb
js
icebp
push
dec
es
inc
inc
cmp
fldl
push
lods
nop
imul
push
xchg
popf
cmpl
jbe
fidivl
or
int
fcompl
or
mov
xor
cmpsb
loope
lods
cltd
jge
and
and
in
in
cmp
in
shl
mov
jge
pop
inc
sahf
adc
push
and
or
and
push
outsb
in
popa
ds
or
mov
aad
add
or
fs
imul
inc
leave
xchg
inc
adc
inc
leave
and
dec
mov
xchg
adc
and
fwait
lods
xor
xor
push
jecxz
in
push
push
imul
lea
push
pop
mov
pop
push
out
sub
ret
push
mov
stos
fdivrl
push
add
in
inc
ja
insb
cmp
add
push
das
pop
outsl
loop
insl
jae
fs
xchg
mov
push
jp
inc
add
and
xlat
xor
xchg
adc
int
in
xor
stos
outsl
mov
rclb
xor
xchg
xchg
data16
add
aam
pushf
adc
jnp
fisttpl
es
cmp
mov
mov
sub
and
mov
inc
xchg
sub
mov
movsb
dec
xor
bsf
cltd
in
mov
loope
mov
adc
sub
lcall
fstpl
push
inc
shrb
ret
subb
pop
or
pop
inc
les
bound
stos
rcl
pop
jg
or
dec
out
pop
repz
sbb
fimull
sahf
fisttps
hlt
out
xor
les
fsubs
iret
out
mov
aad
push
ljmp
outsb
in
mulb
subb
push
xchg
mov
not
mov
pop
movl
pop
pop
leave
ret
movl
cmp
jae
movl
cmp
jae
sbbl
shld
shl
ret
mov
orl
xor
adcl
and
shl
ret
xor
xor
ret
