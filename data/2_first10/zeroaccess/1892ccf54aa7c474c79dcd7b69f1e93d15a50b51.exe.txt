mov
mov
ret
mov
mov
ret
cmp
movl
jmp
xor
sbb
and
xchg
mov
push
add
jmp
mov
xlat
les
inc
in
mov
in
data16
ljmp
push
aas
inc
adc
rolb
dec
ret
clc
loopne
jmp
jbe
cwtl
lds
and
out
mov
mov
jge
mov
loop
stos
xor
int
popf
inc
idiv
sbbl
out
stos
xchg
pop
cmpsl
cmp
or
sub
jae
adc
dec
ss
mov
jne
lret
push
outsb
aam
jle
mov
cwtl
pop
idivl
addr16
mov
xchg
xchg
cmc
pop
cmp
add
add
or
sbb
insl
gs
fs
dec
sbb
xor
pushf
ficomps
shrl
xchg
jbe
push
xor
jp
js
in
rcrb
mov
je
ja
mov
xchg
mov
std
mov
in
sub
into
mov
mov
out
ficomps
popf
push
in
xchg
xorl
lahf
fs
jnp
pop
push
and
out
mov
jno
dec
test
popa
into
xor
ffreep
jae
aam
xchg
dec
push
imul
or
test
je
mov
leave
xchg
pusha
int3
arpl
fwait
arpl
mov
and
cmp
sub
or
xor
push
sarl
std
roll
mov
mov
and
loopne
cwtl
cmp
movsl
and
popa
sbb
fbld
pop
rcll
roll
inc
loop
pop
pushf
cmp
jp
shlb
lods
push
jb
js
hlt
lock
cld
mov
testb
jae
push
pop
sbb
cmp
cmpl
jmp
push
outsb
jmp
test
sbb
pushf
popf
mov
orb
pusha
pop
xor
or
and
and
lods
mov
and
or
push
dec
mov
fcompl
icebp
add
test
je
xor
sbb
jecxz
leave
mov
fwait
mov
sbbl
sub
rcll
mov
pop
xor
in
xchg
fs
add
inc
or
nop
int
push
mov
mov
in
dec
sahf
push
aaa
push
inc
icebp
bound
xchg
out
out
inc
sub
mov
and
sti
loopne
sahf
lcall
loopne
cld
jne
or
push
ficoml
pusha
cmp
imul
dec
push
xor
jl
les
mov
push
pop
xlat
mov
cmp
leave
bound
mov
insl
xor
add
fistps
fstp
pop
cld
mov
add
cs
roll
xchg
adc
sub
fisubl
add
mov
pop
mov
je
inc
add
dec
jo
mov
flds
popa
or
bound
int
ja
jmp
repnz
pop
das
mov
enter
in
gs
lret
das
sub
arpl
stos
notl
lret
into
sub
pop
lods
sub
ss
xchg
or
out
icebp
pushf
ss
dec
ljmp
lea
shrb
mov
sbb
inc
push
pop
mov
push
xchg
xchg
jnp
sub
mov
out
jb
es
cmovns
mov
ds
or
jae
cs
xchg
lds
xchg
leave
mov
repz
jecxz
inc
scas
enter
jmp
imul
jno
cmp
xchg
daa
aam
rol
cmp
addb
data16
enter
in
in
cmpxchg
cld
ficomps
out
cmp
andl
outsl
in
xchg
jne
sbb
scas
jl
clc
sti
push
mov
sti
inc
ja
dec
push
jb
jno
fidivs
cmpsl
inc
in
jbe
cmp
insl
iret
cmc
mov
add
add
add
sub
test
xor
loop
mov
cmc
cwtl
add
or
adc
fwait
push
mov
shl
cmp
out
ror
dec
ljmp
insb
out
dec
in
fldt
js
mov
jmp
push
xorb
leave
push
sbb
push
push
mov
jne
mull
stc
sarl
adc
mov
aaa
jl
adc
pop
test
dec
into
int3
outsb
inc
push
imul
out
imul
xchg
mov
and
add
cmp
fst
test
adc
add
outsl
jp
sbb
in
and
scas
dec
pop
lcall
pop
cltd
call
pop
lods
sub
pop
xchg
adc
sbb
loope
fisubs
xor
adc
insb
lds
pusha
dec
push
push
xor
cmp
xchg
or
cmpsl
sub
arpl
lods
mov
dec
ficomps
fimull
mov
jo
dec
adcb
ret
sbb
push
mulb
mov
xchg
xor
jp
jmp
adc
aaa
es
cli
lods
sub
sbb
stc
and
iret
sub
sbb
adc
sbb
test
imul
outsb
and
pusha
je
cltd
add
xlat
cwtl
lret
add
aam
add
dec
pop
push
cs
popa
push
jmp
xor
stos
push
mov
pop
sbb
sub
push
push
outsl
fisttpll
pop
sbb
fisubs
pop
sub
pop
cs
jmp
fimuls
ljmp
or
js
cld
pop
jg
ljmp
addl
fwait
mov
fildl
xchg
int3
inc
mov
insl
push
adc
scas
inc
test
jle
test
testl
dec
xchg
xor
rcll
jg
inc
ss
test
mov
push
adc
in
fmuls
dec
std
fldcw
icebp
outsb
enter
fiaddl
and
pop
xchg
gs
jb
daa
popa
ret
mov
iret
fsubrp
lahf
les
lret
dec
inc
insb
jb
dec
mov
addr16
pmaxsw
mov
push
jge
mov
xchg
fcmovb
lret
clc
fcoms
pop
mov
sub
bound
cmp
out
xchg
inc
loope
cmpsb
jb,pn
dec
mov
jmp
into
and
jae
jp
push
xchg
cmpsl
lret
lods
push
pushf
pop
adc
loope
sbb
pop
ss
adc
xchg
and
std
sar
and
push
inc
xchg
aam
mov
in
mov
mov
cli
cmp
je
jb
jns
inc
add
add
jge
mov
aaa
das
cmp
inc
cld
pushf
bound
xchg
test
sub
stc
xor
mov
mov
loopne
mov
cmpb
xor
rcl
push
pop
mov
sub
cmp
add
mov
cmpl
add
movl
cmp
movl
jae
adcl
shrd
shr
ret
inc
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
movl
movl
movl
movl
movl
jmp
cld
xor
test
mov
mov
push
add
sbb
movsb
out
push
icebp
mov
es
je
fbld
adc
adc
jle
je
pushf
lods
sub
sbb
sub
negl
mov
or
mov
push
xchg
repnz
movsl
adc
lods
popf
xchg
sub
jo
leave
xchg
pop
mov
es
xchg
mov
out
xor
inc
cli
int3
adc
shrb
insl
ljmp
aaa
rcrb
bound
test
add
xchg
stos
shr
push
inc
dec
test
mov
test
jl
pop
sbb
mov
fldt
lret
mov
lea
inc
mov
push
in
sbbl
or
stos
mov
xorl
out
xlat
sbb
xor
out
jb
popa
inc
loop
sti
jmp
stos
mov
stc
add
in
fistps
push
data16
inc
cwtl
mov
add
inc
and
xchg
rol
cmp
xor
loopne
repnz
dec
sub
nop
repz
fnstcw
mov
pop
fstpt
mov
jg
xchg
rcll
pop
daa
cmp
stc
repnz
cmpsl
or
jle
or
xor
sbb
adc
lea
lea
adc
stos
das
pushf
decb
xchg
push
lret
hlt
addr16
cmp
pop
daa
imul
std
out
aam
mov
insb
lods
inc
clc
out
ret
nop
shrl
add
inc
cltd
sub
dec
and
ficomps
out
or
inc
test
mov
fcmovnu
addl
into
cmpsl
movsb
mov
rol
mov
sub
sub
jo
out
fldcw
mov
decl
inc
in
mov
add
cmp
inc
inc
xor
movsb
repnz
loop
cmp
movsb
in
sbb
or
dec
pop
jns
roll
mov
ds
sbb
and
shrl
xor
and
cltd
fadds
inc
xchg
scas
fcom
out
mov
sub
aaa
pop
aaa
xor
nop
neg
inc
mov
or
cmpb
aad
jg
call
mov
inc
aad
push
daa
sbb
sub
pop
int3
sbb
ret
pop
mov
andb
jge
fildll
daa
stos
jne
shll
sbb
push
mov
jmp
and
idivb
aad
in
cmp
es
sub
push
and
in
ljmp
dec
jecxz
mov
dec
nop
xor
mov
mov
xchg
pop
ret
cmpsb
cmp
add
mov
repz
dec
xchg
negl
xchg
inc
push
cmc
add
cmp
cmp
xor
sub
in
mov
loop
scas
add
insl
cmp
test
cli
add
inc
cmpsl
xchg
xor
cwtl
or
cmc
test
cwtl
sub
xor
outsb
inc
jmp
cmpsl
dec
notl
mov
cmc
push
xor
fcoms
jae
push
popa
les
xchg
cmp
scas
ljmp
cmpsb
cmp
mov
push
and
in
push
dec
push
cld
movl
outsb
sub
outsl
mov
pop
repnz
xor
mov
call
popf
xor
adc
cmp
into
test
into
aas
dec
add
js
or
adc
gs
ret
fldt
shll
sub
or
and
pusha
scas
sahf
xchg
jecxz
test
rorl
out
adc
sub
and
adc
stc
cli
adc
repnz
inc
and
das
inc
jno
jno
sub
sbb
cmp
pop
push
fnsave
xchg
mov
sbb
shlb
into
stos
add
mov
mov
adc
dec
adcl
imul
popf
jmp
cmp
cmc
xor
imul
gs
jmp
adc
icebp
in
les
hlt
imul
push
dec
mov
divb
iret
mov
dec
pop
push
lea
bound
je
sbb
std
xor
addr16
ret
adc
jo
test
and
jg
xor
adc
mov
faddl
push
or
sub
ret
inc
push
mov
outsl
mov
mov
pop
popf
lret
push
push
mov
orb
out
mov
icebp
shll
jge
notb
fisttpl
add
loop
insl
and
add
cmp
fs
cwtl
xchg
enter
loopne
rcll
xor
pop
movsl
or
shrl
shrl
xchg
lods
stos
das
xchg
fsubl
sub
lds
aam
outsl
pop
xchg
push
mov
cmpsb
dec
cmp
push
fstps
cmp
mov
pop
outsb
clc
dec
pop
test
ficomps
pop
int3
std
stos
inc
mov
sub
std
xchg
sahf
ror
mov
adc
jecxz
shlb
add
xorb
ljmp
dec
pop
cmpsl
push
jp
add
push
pop
xchg
insb
leave
mov
das
decb
push
mov
decb
pop
and
pop
lods
push
push
cmp
imul
stos
lods
stos
incl
pop
shrl
jb
mov
popf
jne
dec
mov
mov
lea
js
nop
cmp
jge
push
jle
sbb
icebp
jg
pop
insb
movl
movl
movl
movl
jmp
lds
mov
inc
xchg
inc
inc
das
ljmp
loope
pinsrw
pminsw
cwtl
insb
inc
or
pop
mov
mov
sbb
xchg
sbb
sbb
jl
sahf
sti
lret
xchg
lods
sbb
mov
hlt
cmp
push
fsub
push
rclb
cmp
cmpsb
pop
push
scas
sbb
or
lret
xor
adc
ret
int3
aaa
out
clc
std
inc
je
lods
xchg
cmc
lret
and
adc
sub
jnp
hlt
and
fidivrl
loope
push
or
stos
test
lret
sbb
mov
fdivrs
loope
mov
dec
loopne
cmp
dec
jle
or
inc
pop
xchg
fdivp
fs
pop
mov
ss
divl
enter
enter
xor
scas
xor
adc
add
sbb
dec
push
lds
xchg
inc
call
push
roll
adc
adc
pop
xor
jae
jb
and
fnsave
inc
xchg
mov
or
jle
pop
mov
aaa
mov
fdivs
mov
mov
push
enter
inc
aas
sbb
sub
cmp
iret
xor
push
out
inc
sub
rcrb
xor
fst
pop
fildl
sub
push
subb
add
cltd
fs
xchg
dec
lret
or
dec
std
xchg
or
fists
sbb
sbb
out
sbb
sub
fwait
fwait
lret
xor
inc
insb
daa
or
push
sub
mov
sar
sbbl
icebp
repnz
inc
inc
xor
lods
sub
mov
or
cltd
pop
adc
adc
daa
pop
push
xor
and
das
pop
stc
inc
popf
xchg
mov
or
cmpsl
fdivrp
daa
mov
andl
bound
jne
rorb
out
xor
mov
inc
cltd
sbb
sub
fisubs
out
push
push
xor
mov
fistl
shrb
cld
lods
and
ds
dec
jecxz
xchg
mov
pop
mov
aaa
stos
lods
dec
cmp
add
ljmp
sbb
mov
cmp
jge
inc
xchg
cmp
sub
pop
xchg
jmp
dec
push
inc
xchg
outsb
xor
gs
mov
imul
cmp
dec
pop
fs
cmpsl
adc
push
aad
mov
jo
out
fucomip
xchg
sbb
in
cmp
mov
sbb
scas
repz
test
addl
dec
cmp
or
lcall
js
push
lods
std
cmp
mov
dec
push
cltd
shll
xor
gs
nop
or
cmp
ficoml
fdivr
shll
bound
mov
push
adc
and
decl
fstpl
xlat
pop
not
inc
inc
jg
sbb
mov
dec
dec
push
stos
adc
lds
sbb
sbb
add
and
mov
dec
popf
xor
mov
jb
xor
add
mull
xor
stos
xor
dec
jnp
add
pop
pop
popf
ljmp
movsl
ret
js
imul
xor
or
popf
fwait
mov
mulb
jl
push
popf
leave
lea
inc
push
xor
mov
pop
sub
mov
hlt
push
in
xchg
filds
in
sub
push
lds
inc
in
mov
out
xchg
mov
push
aad
jnp
push
push
push
inc
xchg
jg
out
mov
in
jg
ljmp
inc
pop
in
xor
cmpsl
mov
pop
inc
jnp
sub
test
movsl
jb
or
mov
cmp
push
lret
js
cmp
jmp
jno
pop
imul
ja
push
cltd
push
sbb
int
loope
lahf
std
js
leave
jmp
xor
add
jns
pushf
xor
mov
xchg
inc
lret
inc
in
push
jae
fbld
inc
pop
cmp
rcrl
xor
xor
or
cmp
out
and
ret
or
das
pop
mov
aam
sub
iret
cmp
js
hlt
cmp
es
jge
mov
movsb
popa
pop
lods
push
dec
enter
fbstp
mov
sbb
push
lahf
enter
or
add
pop
movsb
jb
test
into
jno
jne
shll
xchg
call
cmpsb
xchg
in
mull
sbb
repnz
aaa
push
mov
imul
sub
daa
cwtl
in
cmp
shl
int3
stc
adcl
mov
stc
or
mov
movb
push
ss
sbb
mov
call
es
es
push
fwait
negb
jne
mov
mov
movsb
sarb
js
or
jmp
sbb
sti
mov
sbb
push
test
psubusb
fisttpll
dec
push
jne
dec
pusha
notl
imul
xchg
xlat
sub
push
xchg
mov
pop
in
lahf
repnz
lahf
stos
sbb
outsl
xor
push
sub
ds
xlat
sti
lcall
rol
into
push
jne
add
mov
mov
mov
in
mov
xor
insb
pop
std
es
repz
jo
adc
out
mov
jle
cld
or
sti
sub
push
add
xor
mov
push
out
andl
xchg
pop
mov
cmp
fmul
rcrl
mov
ja
rolb
or
add
push
add
mov
jo
push
inc
mov
jns
mov
fcmovb
inc
in
dec
add
movl
mov
mov
jmp
pop
inc
sti
and
jbe
pop
js
sub
pinsrw
movaps
mov
leave
cli
in
cwtl
xchg
imul
cld
jbe
stos
cmpsl
outsb
inc
lret
loop
aaa
data16
loope
pop
scas
lock
jo
mov
jo
pop
mov
add
dec
int3
loope
mov
movsl
jnp
jle
iret
jg
lea
mov
inc
cmp
aas
scas
add
mov
imull
pop
loop
pop
lods
js
mov
dec
inc
sub
out
adc
jns
repnz
out
pop
arpl
adc
mov
cmp
push
cmp
in
les
push
ljmp
or
and
or
mov
arpl
cs
xor
inc
icebp
xor
sbb
mov
xlat
je
add
hlt
ret
push
or
jle
or
lock
xor
mov
mov
and
les
mov
jo
into
lcall
sti
mov
lds
movl
xor
jle
or
xlat
mov
fisubrs
lahf
push
fistpl
data16
test
xchg
xor
xchg
sbb
pop
adc
adc
dec
inc
rcll
incl
add
lds
sbb
adcb
scas
or
mov
roll
jno
jb
ret
sub
mov
mov
pop
in
rorl
mov
fiadds
je
mov
imul
test
iret
xor
fdivl
pop
negb
sahf
dec
sub
mov
shl
loope
addr16
jne
imul
jne
add
cmp
mov
decl
jo
xchg
mov
xchg
scas
test
jle
cmp
movsl
push
lret
in
xor
mov
add
adc
dec
sbb
fpatan
push
sti
in
inc
lds
aas
loop
mov
outsb
add
shll
cs
stos
inc
xchg
movsb
mov
fisubl
mov
lods
xlat
popl
or
int3
xchg
lock
sbb
mov
fwait
jecxz
std
repz
sbb
or
ljmp
push
and
cmp
push
dec
and
jb
test
es
arpl
pop
dec
xchg
xlat
xchg
add
push
push
push
cmp
sarb
and
xchg
out
in
add
xchg
xchg
and
add
push
mov
hlt
or
cmc
and
mov
stos
or
xor
dec
lods
dec
xlat
jl
hlt
sub
jecxz
or
xor
push
cwtl
push
and
lcall
push
mov
or
divl
sbb
xor
jle
push
cli
in
notb
push
push
dec
stos
movb
pop
fnstsw
fcomps
fldt
faddp
dec
nop
xchg
std
stos
jp
push
mov
jb
xchg
shll
cmp
mov
rcrl
repz
mov
sub
mov
xchg
cli
jge
pushf
or
out
lret
fs
mov
out
add
xchg
jp
or
mov
mov
or
sbb
jo
inc
out
cmp
xor
add
dec
dec
sahf
pushf
mov
es
jo
ss
aad
add
mov
mov
xchg
das
hlt
testb
test
lcall
notb
hlt
mov
lahf
iret
xchg
sbb
leave
enter
add
loop
shlb
fsubl
insl
aas
hlt
jb
into
or
stc
jne
pop
lea
add
mov
jae
scas
mov
mov
sbb
test
loop
sbb
sub
clc
pop
ret
iret
in
mov
enter
fcoml
add
lcall
adc
rcrb
or
hlt
pop
lcall
imul
and
pop
or
xchg
add
call
je
les
repnz
fdivl
push
push
dec
mov
and
dec
push
mov
or
mov
or
jp
adc
aam
jmp
shl
clc
mov
dec
and
xchg
aas
xor
jne
cmp
pop
out
xchg
pop
jb
outsl
and
mov
pop
mov
sub
sbbb
xchg
sbb
add
cmp
pop
fnstsw
daa
adc
sbb
xor
sub
xchg
sub
loope
fsub
dec
js
pop
xchg
test
push
add
repz
pop
mov
cmp
jb
cmp
popf
pop
mov
in
loopne
mov
fbstp
mov
ds
rcrl
aas
and
fwait
xchg
daa
aad
mov
cmp
xchg
add
jnp
mov
dec
movsb
subl
imull
push
stc
std
ds
push
imul
cld
pop
ljmp
les
cmc
xor
cmp
pop
fnstsw
mov
popf
pop
inc
loope
in
add
in
pop
xor
repz
data16
repnz
popa
mov
pop
cmpsb
push
and
inc
in
int
movsb
xchg
aam
in
fs
sbb
in
call
insl
xlat
movsl
jl
shl
xor
pop
xor
mov
sarb
sbb
add
lret
dec
int
jmp
adc
nop
jb
fcomi
daa
jle
inc
add
sbb
mov
mov
pop
int
xchg
scas
or
into
push
sbb
shrl
inc
insl
mov
dec
adc
add
aam
dec
lret
mov
addr16
mov
cmp
rorb
push
inc
add
xor
imul
mov
push
sub
push
movl
jmp
ljmp
stos
lea
jbe
xchg
loop
pinsrw
pop
xlat
fisttps
mov
and
das
mov
adc
dec
out
cmpb
cli
mov
pop
shll
fwait
xchg
add
mov
not
insl
hlt
outsb
out
or
add
rol
dec
shlb
push
ja
call
imull
rcll
cmp
xor
dec
aaa
insb
icebp
and
add
jg
nop
lds
in
or
jbe
in
push
out
push
and
inc
jl
outsl
cli
mov
adc
mov
test
out
mov
sbb
cmp
clc
aam
cmp
push
push
inc
mov
sarl
sub
sub
cmp
insb
cwtl
dec
mov
add
sub
sarb
cmc
jb
int
push
push
push
pop
daa
jnp
ljmp
xchg
cltd
or
movsl
xchg
jb
cld
je
dec
push
cmc
aam
mov
pusha
cmp
loope
icebp
push
push
push
repnz
leave
cmp
xchg
inc
xchg
pop
jp
jne
sub
mov
jno
test
ret
jp
cwtl
push
xchg
aas
sub
rclb
ret
push
cmpsl
bnd
pusha
push
adc
xchg
push
lcall
cmp
adc
add
int
pop
pushf
pop
pop
ds
fldt
ret
sub
adc
adc
cmp
in
cmpsl
popl
out
repnz
mov
lahf
lea
and
add
push
mov
push
jg
push
cmp
pop
push
test
pusha
popa
ret
lret
stos
int3
int3
mov
in
gs
pop
sahf
pushf
cmp
cmp
add
sbb
mov
ss
jae
cmp
lret
lahf
aas
or
jo
xchg
dec
xlat
js
fwait
dec
ret
mov
out
sbb
sub
ja
rcr
cmp
das
xchg
leave
ds
mov
jg
inc
call
jmp
ds
pop
imul
xor
push
jg
inc
aaa
xor
and
icebp
cmc
popa
bound
pusha
fs
pushf
add
subl
cmp
xchg
sahf
mov
mov
mov
out
jbe
lret
mov
inc
popf
ljmp
call
and
aas
lcall
dec
push
inc
cmp
xchg
hlt
cmpsl
xor
imul
mov
jnp
adc
lcall
leave
push
loope
arpl
ret
leave
ret
fcompl
fs
repz
adc
dec
cmpsb
jo
sar
int
xchg
pop
jbe
push
jae
jnp
pop
ret
cmc
dec
aas
xor
fildll
mov
leave
fwait
jg
mov
push
insl
pop
pop
jle
imul
dec
or
pop
aaa
lea
test
cs
movsb
sub
lret
int3
shl
gs
sub
ret
sbb
inc
jle
ret
into
pushf
cmp
xor
jne
pop
inc
inc
and
inc
int
and
lret
out
mov
std
or
inc
adc
aam
into
mov
xor
push
inc
ret
or
add
mov
adc
xchg
movsl
pushf
in
sub
push
nop
jno
cmp
fbld
fisttpll
repnz
jmp
pop
mov
mov
mov
push
and
pop
int
dec
sti
arpl
jb
sbb
gs
and
inc
out
mov
into
xor
push
cld
gs
xor
mov
or
hlt
dec
inc
pop
call
shlb
sbb
pop
jmp
ljmp
xchg
mov
pop
xchg
addr16
das
stc
push
fadds
pmulhw
xchg
adc
pop
cmp
xlat
ss
in
mull
data16
pop
movsb
add
cmpsb
jmp
popf
fcompl
mov
fsts
aam
lds
ljmp
xchg
fmull
mov
mov
push
jge
jne
push
int3
add
repnz
cmp
into
je
or
mov
aam
lret
ljmp
adc
aaa
and
sbb
lods
cmpsb
insl
test
movsl
ret
cmp
push
jbe
test
xchg
jnp
hlt
test
sbb
mov
push
inc
mov
pop
movsl
sub
xlat
cmp
ja
inc
sbb
mov
push
leave
push
mov
hlt
sahf
cmp
mov
sub
and
sub
lock
repnz
sbb
xor
pop
push
or
ror
sbb
aas
xor
sti
or
sub
dec
es
in
push
lock
or
je
or
sbb
push
je
jne
imul
loopne
mov
adcl
std
push
mov
fnsave
cmp
ja
loopne
je
test
push
add
adc
dec
in
sub
orl
or
xchg
cmpsl
mov
sub
jno
pop
je
dec
push
mov
popa
ss
xchg
pushf
int
mov
outsb
cltd
xchg
add
pop
xor
aaa
mov
and
dec
mov
cli
popf
inc
outsl
jbe
shr
push
inc
ljmp
outsb
bnd
mov
cli
ss
cmp
mov
push
inc
int3
push
pushf
pop
xor
xor
mov
loop
sti
mov
jo
or
das
inc
and
loope
xchg
dec
and
lcall
rcl
dec
out
lcall
stc
ss
loope
push
in
jbe
int3
out
jb
in
and
push
andps
je
cmp
push
mov
jb
mov
cmp
add
pop
leave
cwtl
add
clc
push
dec
stos
cmp
or
fwait
jns
adc
dec
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
jmp
xchg
mov
imul
mov
les
cmova
push
rorl
lods
jp
imul
sahf
out
cmp
xchg
inc
sbb
fwait
adc
out
or
jo
cmp
mov
rclb
mov
jb
sti
enter
cmpsb
adc
lret
dec
clc
adc
fcoml
subl
adc
scas
iret
sbb
je
test
cmp
mov
cltd
cmc
jb
iret
jo
inc
push
out
scas
lcall
inc
jbe
adc
les
add
xor
dec
je
mov
jbe
insb
loop
cmpsl
cmpsb
std
push
mov
dec
call
lea
mov
loop
mov
jae
fisubrl
sub
jmp
sub
xor
repnz
pusha
add
jmp
stc
fidivrs
stc
sbb
jge
jl
jae
or
inc
sub
dec
cmp
sub
sub
inc
adc
jae
cwtl
add
jae
jne
xor
icebp
pop
loop
mov
stos
lret
repnz
mov
call
pop
push
ds
in
sub
mov
mov
icebp
jg
lock
xor
popf
sbb
fsubrs
push
jne
in
xor
lahf
das
jns
lods
btcl
mov
inc
mov
or
cmc
sti
out
add
incl
sbb
fstl
or
shlb
stos
insb
gs
push
inc
hlt
repnz
pop
add
jge
jmp
xor
sub
pop
aad
cmc
cmp
xor
shll
dec
sbb
flds
xor
nop
push
outsl
aam
iret
bound
call
outsl
push
fs
das
push
xchg
fisttpll
lods
out
inc
cld
inc
pop
mov
loopne
scas
in
inc
adc
out
addps
sbb
nop
sub
mov
imull
cld
sbb
sbbb
lcall
fistl
movsl
imul
cmp
xchg
add
inc
cmp
addl
dec
test
inc
xchg
xchg
stc
jno
xchg
jle
shrl
ljmp
add
mov
loop
enter
xchg
cmp
stos
mov
push
dec
or
call
cmp
fisttpll
xchg
fwait
xor
push
pop
cwtl
lcall
push
sbb
jl
mov
xor
lea
hlt
xor
stos
inc
dec
movsl
push
cvtps2pi
popa
cwtl
out
jne
fidivl
mov
dec
in
sbb
rep
add
xchg
add
addr16
cmc
and
jno
push
loopne
les
rcrl
adc
popa
scas
mov
mov
outsl
les
pop
outsb
pop
cltd
ja
test
jge
jae
repz
stc
jmp
mov
adc
in
sbb
or
sub
outsb
jmp
mov
pop
jbe
sbb
xchg
mov
cwtl
in
leave
test
inc
test
pop
push
mov
mov
inc
stos
xchg
ret
add
dec
add
aas
sti
mov
ret
out
iret
aaa
mov
cmp
imul
das
sub
mov
into
adc
mov
mov
scas
sti
mov
xor
and
mov
ja
test
cs
sbb
xorl
inc
out
xorl
mov
inc
andb
fucom
addl
cltd
push
pushf
dec
mov
add
pop
dec
std
andl
clc
insb
in
ljmp
mov
scas
jo
rcrl
push
mov
push
mov
lock
cld
add
lods
jbe
mov
xchg
ja
push
imul
push
stos
sarb
fistps
mov
dec
aas
bnd
or
lods
cwtl
push
out
popa
xor
or
call
out
mov
rorb
out
out
mov
and
int
aaa
negb
dec
push
xor
push
cmp
ds
testl
mov
iret
xchg
mov
mov
pop
in
cmp
sub
xchg
mov
lods
fnstenv
jecxz
inc
in
and
mov
data16
les
xorl
lea
lcall
test
jb
mov
cmp
addr16
in
cmp
loopne
xor
sahf
and
fadd
lds
in
pop
lods
mov
pop
push
mov
xchg
mov
bound
pop
dec
mov
addb
dec
out
cwtl
mov
std
adc
popl
jg
je
inc
ss
cmp
mov
outsl
inc
adc
jecxz
or
std
loope
mov
fstp
xor
cmpsb
and
mov
mov
leave
rcrb
fs
pushf
jb
dec
pop
bound
push
into
or
sbb
stc
enter
stc
pop
mov
sbb
aaa
imul
lods
data16
ljmp
loopne
cmp
into
mov
jge
cltd
cmp
pop
mov
stos
leave
addr16
add
sbb
pop
cmc
shll
leave
mov
jbe
push
sbb
clc
popa
and
in
xchg
test
mov
xor
inc
scas
cmp
sub
in
mov
dec
mov
or
insb
add
int3
lcall
negb
inc
scas
cmp
out
mov
push
scas
sub
arpl
enter
lahf
shll
cmp
inc
sbb
fwait
push
pop
ljmp
jno
cmp
fdiv
inc
sub
pusha
fisubs
pop
push
or
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
jmp
push
fadds
sub
push
and
cmp
dec
popa
cld
add
pinsrw
pcmpgtw
sub
imul
inc
jle
sub
adc
fstps
leave
and
loop
fnstenv
jmp
lock
imull
in
rorb
sub
inc
pop
sub
enter
fistl
sbb
loop
stos
xor
fildll
sahf
push
ffreep
mov
push
icebp
test
cmp
addr16
push
outsl
sub
or
jl
movsl
dec
add
addb
mov
aam
loopne
bound
ljmp
pushf
add
and
adc
cltd
push
out
sbb
dec
add
sbb
pop
addb
or
xlat
jg
cltd
or
ret
stos
iret
jo
in
and
imul
int
sbb
outsb
mov
nop
lods
xlat
test
popa
scas
xor
fsubl
test
mov
in
inc
stos
pusha
mov
pop
dec
dec
xchg
and
shrb
in
mov
rcrl
stos
vminss
mov
xchg
and
cmpb
fildl
cmp
inc
jp
or
cwtl
xchg
lds
or
imulb
mov
subb
loope
adc
sbb
ss
test
pop
mov
cmp
lock
outsl
xchg
xor
mov
add
rolb
fsubl
out
and
pop
pushf
cmp
dec
fildl
call
outsl
cmp
rolb
sahf
in
jmp
mov
sbbl
rcrl
shlb
add
outsb
xor
popa
hlt
inc
mov
sub
push
cmp
outsl
adc
divl
pusha
les
hlt
pop
jle
mov
pop
clc
aas
call
hlt
loopne
enter
cld
les
out
ret
cmp
adc
mov
iret
add
movsl
ja
ud2
sbb
stos
or
jmp
mov
mov
scas
stc
mov
sbb
xchg
push
inc
add
test
xchg
cmp
lods
scas
stos
int3
sbb
stos
dec
xchg
rcrb
push
repz
add
xchg
cmp
add
insb
push
fisttpl
adc
inc
int
pop
arpl
inc
jge
adc
mov
or
testb
in
sub
xchg
mov
dec
mov
mov
cli
xchg
aad
ss
and
xchg
pop
jns
scas
enter
dec
daa
call
xor
lds
loopne
scas
popa
mov
test
sahf
ds
and
inc
mov
bound
rcr
mov
sub
push
cs
mov
cmp
in
push
lcall
mov
push
pop
push
test
std
std
ret
clc
cvttps2pi
repnz
cmp
ss
fldenv
jp
lea
cmc
adc
and
out
fists
es
and
stos
test
cmc
inc
lods
sbb
xor
arpl
or
and
or
push
xchg
dec
lods
sub
lret
cmpsb
pop
lret
mov
jbe
repnz
adc
lret
orb
jl
testl
mov
stc
loope,pn
jmp
ds
je
mov
lret
xchg
jp
imul
test
sub
push
lret
pusha
cmp
mov
nopl
mov
add
fildl
and
mov
cmpb
mov
adc
jecxz
pop
push
clc
mov
xor
addl
push
test
repz
pop
and
test
sbb
in
sub
mov
into
shl
push
pushf
test
cmc
lods
and
je
outsb
out
pop
shrl
mov
mov
pop
or
xchg
lret
cmp
mov
int
sub
fnstsw
arpl
daa
xchg
incl
pop
out
sti
mov
inc
ss
add
movsl
inc
mov
lret
imul
lret
lods
jp
mov
or
xor
imul
es
outsb
jl
das
mov
or
xchg
sub
mov
dec
jns
js
dec
iret
xchg
jp
aas
cli
in
bound
out
push
jmp
fs
jecxz
push
icebp
arpl
inc
xor
bound
into
or
xor
adc
pop
mov
jo
mov
inc
mov
jo
sar
pop
mov
dec
int3
fldcw
mulb
sub
insb
std
jb
xchg
hlt
pusha
xor
ljmp
les
mov
mov
rcrl
sub
repz
repnz
loop
fidivs
leave
add
aam
cmp
and
test
es
orb
andl
jns
mov
ss
fists
cmc
add
lods
shlb
scas
mov
adc
pop
insb
and
pop
sub
cmp
cmp
sub
mov
leave
pop
pop
test
cmp
out
push
xchg
aas
push
and
xchg
or
in
jns
pop
or
aad
lds
lret
xchg
insb
cld
cld
mov
xor
std
xchg
pop
push
rolb
rcr
aam
fsubr
test
movsl
nop
iret
insb
jae
mov
cmpsl
push
sbb
daa
sbb
lret
dec
jmp
shl
xlat
mul
fdivrs
mov
mov
cmp
int3
insl
xchg
int3
sbb
not
xchg
push
into
dec
pop
rcl
ja
inc
lret
adc
stc
sti
jle
mov
in
xor
sbbb
pusha
and
call
xchg
loope
jb
cmpsl
mov
inc
and
add
cmp
jb
movl
movl
movl
movl
jmp
xorb
ret
xor
xor
sti
mov
data16
pinsrw
testb
lods
add
in
and
cmp
jp
test
stc
mov
daa
jbe
je
inc
inc
movsl
scas
sub
sbb
bound
jl
mov
push
shlb
hlt
fs
xor
iret
lods
inc
or
mov
cmp
sbb
sahf
or
sahf
icebp
sub
adc
mov
sbb
into
outsl
outsb
js
out
addr16
cmp
adc
push
jnp
push
je
mov
rorb
stos
sub
or
inc
fisttpll
dec
jp
insb
ret
les
leave
mov
subb
movsl
test
adc
hlt
jne
mov
stos
add
push
adcb
out
imul
sbb
sbb
movsl
sub
ret
shlb
xchg
cmpsl
sub
adc
xchg
jge
sbb
mov
jne
pop
insl
pop
adc
dec
xchg
push
es
ds
adc
add
inc
xchg
xchg
adc
shlb
pop
jp
call
sbb
shlb
or
add
rclb
mov
push
lret
jno
pop
jl
fildl
xor
mov
fmulp
and
faddl
je
lods
add
test
hlt
imul
js
adc
push
jb
add
xchg
sarb
pop
test
push
sti
in
mov
pusha
jle
das
insb
jb
or
sbb
inc
add
cld
faddl
mov
mov
pop
dec
leave
pop
lret
insb
sahf
iret
mov
sub
sahf
xor
adc
call
sbb
out
xchg
mov
xor
jp
imul
movsb
stos
sub
or
mov
pop
mov
push
xchg
jecxz
sub
je
ljmp
loope
inc
mov
inc
mov
pop
imul
xor
pushf
rep
mov
xchg
cli
fdivrs
sub
test
mov
shrb
fcoml
lret
int
test
mov
out
shll
mul
lods
mov
pushw
jecxz
mov
cmp
pushl
cmp
pusha
cli
mov
or
push
sbb
aam
pop
or
sbb
fidivrs
loop
int3
jb
push
pop
push
adc
sbb
and
push
int3
test
hlt
int
pusha
xchg
cmpsb
lock
ret
and
fdivrs
daa
addb
adc
nop
mov
inc
push
mov
iret
cmp
mov
mov
mov
cmp
icebp
outsl
subb
add
jo
pop
mull
hlt
jmp
fldcw
dec
scas
imul
and
das
popa
enter
dec
push
mov
jmp
cmp
jbe
enter
inc
mov
test
pop
addr16
lods
xchg
lahf
mov
cmp
enter
out
inc
push
fiaddl
jns
lds
adc
dec
rorb
ja
fmulp
rolb
push
daa
test
pop
or
adc
mov
xchg
push
insb
loope
lods
testb
pop
daa
icebp
ret
add
inc
mov
pop
imul
cmp
cmpsl
les
imul
push
jbe
sub
mov
mov
mov
rcr
mov
dec
mov
cmp
psrlw
lds
mov
xchg
push
pusha
xchg
into
lea
cli
in
xchg
fwait
pop
push
das
jae,pt
xchg
dec
sub
sahf
jp
mov
mov
xchg
and
iret
ret
inc
mov
adc
push
jnp
idivl
ficoms
add
sbb
pop
fucom
ret
pushf
outsl
cld
scas
push
mov
rorb
addb
in
mov
adcb
mov
adc
jo
movsl
incl
in
jmp
je
mov
sub
pop
cmp
je
jmp
pop
arpl
inc
mov
dec
ret
out
fisubrs
add
sub
stc
xor
cmpsb
int
test
orb
and
or
fistpl
cmc
pop
cmovb
mov
push
sub
push
inc
xor
dec
or
dec
sub
add
into
jp
lret
jo
test
into
movsl
pop
imul
sbb
jmp
sar
or
loope
pop
add
jno
dec
decb
sub
cmp
repz
fldcw
ficoms
pop
imul
and
lahf
jge
rcrl
xor
enter
mull
mov
outsb
jg
es
sbb
lods
ss
mov
push
adc
ss
inc
insl
out
jno
xchg
add
jp
out
adc
lret
out
pop
mov
xchg
pushf
jmp
aas
faddl
sahf
and
xchg
dec
pop
jl
push
stos
test
fwait
add
fisubrl
test
xchg
cmp
shl
sbb
std
scas
arpl
test
xchg
or
mov
adc
out
cmp
xchg
mov
add
mov
mov
add
jne
sub
adc
test
jnp
lods
arpl
jae
mov
lods
pop
mov
or
mov
out
subl
sub
inc
xor
xor
sbb
sub
sub
ret
inc
push
je
xchg
xorb
scas
inc
add
sub
add
imul
or
imul
cmc
movl
movl
movl
movl
movl
movl
mov
mov
or
lea
add
movl
jmp
add
inc
sti
daa
push
cs
jno
jbe
or
psubq
cmpsl
adc
sub
outsb
add
mov
mov
cmc
je
lahf
popf
mov
cmpsb
movsb
sbb
jmp
mov
pop
lret
and
inc
mov
loopne
push
icebp
add
scas
jl
nop
insb
mov
push
mov
cmc
mov
xor
push
push
lret
int3
cmp
mov
mov
cmp
mov
sbb
leave
pop
ffreep
out
stos
testl
out
inc
push
arpl
insl
add
je
lcall
ds
xchg
aad
adc
aaa
push
mov
roll
mov
mov
mov
in
out
inc
mov
mov
inc
mov
fsubrs
mov
fimuls
loopne
fwait
or
fdivrs
dec
js
in
ret
mov
and
repz
mov
xchg
popa
jno
mov
repnz
and
mov
and
xor
fwait
aad
sbb
scas
popa
inc
popf
jecxz
mov
jmp
mov
adc
mov
cmc
cmc
int3
out
add
xor
pop
xchg
jmp
add
xchg
dec
mov
xchg
fcoms
mov
or
leave
dec
adc
mov
dec
subps
movsl
push
daa
in
rorb
call
fnstcw
mov
add
sub
subl
mov
pop
pop
or
add
or
repz
jno
ret
jl
test
push
xchg
int
xor
ss
out
jmp
sahf
shrb
daa
cmpb
inc
insl
dec
lret
cmpsb
sub
sbb
push
notl
sbb
sahf
mov
push
inc
jmp
xchg
jg
pop
std
mov
or
xor
mov
jl
inc
push
inc
out
add
xchg
jb
sbb
mov
lock
pop
add
insl
out
sbb
xor
inc
nop
sbb
push
and
outsb
jo
fdivp
add
add
lds
inc
or
gs
stos
shl
inc
mov
pop
xlat
jmp
movsl
jno
ss
add
sub
push
or
jno
pop
lock
arpl
cs
cmc
push
loope
pop
or
jnp
xor
inc
mov
or
cmc
adcl
daa
mov
jns
int
or
xchg
cmp
fxch
out
jp
mov
jge
mov
fdivl
in
test
imul
fdivrp
test
and
cmp
dec
sub
dec
jmp
cli
mov
xor
insl
sbbl
mov
scas
mov
out
lds
int
pop
add
pop
aad
dec
xor
mov
std
sbb
test
dec
mov
mov
popa
aas
dec
cmc
xor
mov
xlat
movsb
cmp
sbb
popf
dec
jl
mov
cmp
xchg
cmp
sbb
js
jmp
orb
jp
pop
and
daa
mov
leave
inc
movsb
sbb
mov
xor
mov
lods
push
in
lods
pop
arpl
mov
cmp
sub
add
cmp
leave
cld
dec
repz
pop
dec
fisubrs
xchg
jg
ret
hlt
xchg
sti
sub
mov
inc
cmp
ds
pushf
cmovle
mov
mov
aad
loope
les
push
cltd
mov
dec
insb
fwait
or
sbb
cwtd
in
mov
lret
dec
sbb
push
dec
jg
out
inc
insb
stos
repz
add
xchg
outsl
push
sbbb
test
pop
xor
outsb
rclb
jg
sbb
mov
orl
out
jl
fdivl
and
repnz
pop
pusha
mov
cmp
mov
sub
mov
xlat
lahf
xchg
push
enter
lret
sub
pushl
push
je
call
add
test
fs
dec
add
pop
mov
stc
cli
sub
sub
and
test
in
ficompl
nop
push
mov
rcrb
or
or
aam
pop
jb
fisubrl
js
ret
push
loop
inc
ljmp
sbb
js
xchg
pop
xor
sbb
push
cmp
jb
incb
xorl
cli
pop
sbb
test
inc
ret
std
sbb
cmpb
sub
inc
pop
cmpsl
rolb
cmpsb
or
sbb
jo
jg
lahf
xor
imull
sbb
subl
cmpsw
add
test
pop
clc
jno
stos
lcall
pop
negb
push
adc
jne
mov
das
cwtl
xchg
inc
dec
lods
xor
addb
addl
popf
popl
mov
iret
js
push
out
movsl
push
cli
pop
pushf
mov
cld
sub
hlt
lods
and
push
idivl
sbb
push
scas
or
mov
dec
ja
lret
mov
fwait
cmp
sub
aas
testl
imul
popa
sub
push
jnp
inc
adc
push
je
cmc
xchg
jp
add
inc
and
fucomip
xlat
repz
or
loope
xchg
leave
push
inc
shrb
jp
lods
shlb
es
int3
cld
movzwl
les
cld
mov
dec
dec
xchg
mov
aam
in
in
jae
sti
into
jb
gs
cmp
adc
inc
push
shl
add
xor
cli
mov
rclb
push
pop
jns
sbb
cwtl
ret
or
or
add
inc
int3
fwait
push
add
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
jmp
aad
sub
ss
adc
xchg
push
jb
dec
mov
add
sbb
sbb
push
xchg
fs
jbe
fs
mov
out
stos
popa
jne
outsb
stos
lcall
cmp
adc
popf
jnp
add
adc
pop
xor
rcrl
pop
arpl
mov
pop
enter
ret
cmp
icebp
xchg
mov
mov
fdivr
scas
jmp
push
stc
ret
fidivrl
push
cmp
daa
or
add
push
aad
ss
popf
mov
and
jg
imul
push
pop
or
ja
xor
test
xlat
push
jno
adc
loopne
mov
xchg
loope
icebp
enter
sbb
and
add
cld
inc
test
xchg
jae
xchg
stc
in
jns
sbb
xorl
xchg
cmc
dec
jp
jno
pop
mov
xchg
lock
loop
adc
pop
push
pop
xchg
leave
rcll
ss
push
dec
mov
or
pop
and
push
mov
jmp
cmpsl
movsl
js
mov
mov
xchg
mov
daa
mov
and
scas
pop
addl
mov
cmpsl
xor
int3
jp
loop
mov
sbb
inc
repnz
dec
fwait
add
lods
xchg
mov
cmp
pushf
sbb
mov
fwait
mov
jg
scas
push
call
pop
jecxz
adc
jno
dec
sbb
movsb
test
jae
pop
in
adc
fdivrp
dec
insl
fmul
bound
or
arpl
icebp
pop
movsb
clc
cmpsb
dec
in
bound
sub
pop
in
inc
lds
data16
loop
mov
mov
out
pop
lahf
xchg
stc
outsb
fnstsw
pop
jmp
xchg
dec
scas
cmpsb
sub
repnz
sbb
fwait
dec
cmp
shrl
movl
fsubrs
jmp
std
inc
cmc
gs
leave
scas
jnp
ljmp
aam
pop
lods
jecxz
mov
movsl
or
dec
mov
test
mov
into
mov
adc
sub
mov
dec
icebp
adcl
inc
loope
test
sub
mov
fisubrs
push
sbbb
pop
lret
push
pop
and
or
rclb
xchg
out
adc
push
adc
inc
rcll
out
fdivl
roll
aas
jle
xchg
push
insb
jmp
add
pop
add
sbb
mov
xor
jp
mov
xor
mov
and
bswap
xchg
sbb
sahf
ja
cmp
mov
das
lret
mov
push
jns
lods
adc
cmp
dec
jecxz
movsb
js
fbstp
add
test
or
arpl
cmp
xorb
xchg
sub
adc
incb
out
arpl
hlt
mov
lcall
movsb
pop
repz
mov
out
rcll
add
inc
pop
pop
jle
mov
mov
push
std
daa
lds
xlat
gs
les
jmp
and
adc
mov
es
cwtl
adc
mov
popa
pop
sub
mov
cs
adc
push
repz
xchg
movb
cmp
or
pop
test
xchg
iret
push
imul
dec
xor
aam
xchg
jnp
sub
js
mov
push
sub
stc
mov
fisttpl
pop
push
sbb
aad
jge
add
sbb
fucomp
int3
inc
xor
aam
add
mov
ja,pt
mov
test
pusha
push
lds
cmp
in
test
repnz
jecxz
mov
cmpsb
lea
sbb
insb
push
movb
pushl
out
sub
insl
fcmovnbe
cmp
inc
daa
mov
pop
imul
lods
push
jecxz
mov
fsubrl
sti
out
movsl
jle
negl
or
ret
inc
add
into
and
cmp
dec
xlat
cld
jl
and
pop
jns
dec
nop
fwait
push
cli
cmpsl
and
iret
cmpsl
fdivs
dec
fists
sub
mov
xlat
cmp
fistpl
sti
lds
call
jnp
sub
sbb
aaa
xor
sub
loop
dec
aam
addr16
or
add
push
movsl
add
das
insl
sub
and
cli
int
push
mov
mov
call
int3
xchg
and
in
mov
lret
xor
cmp
push
mov
cli
leave
aad
inc
fisttps
mov
inc
or
in
xchg
pusha
jg
cmp
bound
in
sbb
push
pop
icebp
lds
fmull
cmp
xchg
push
addr16
or
cmpsb
adc
jno
push
in
movl
mov
sbbb
out
sti
mov
gs
rcl
cmpsb
outsl
mov
punpckhdq
and
daa
pop
hlt
idiv
daa
adc
out
xchg
adc
enter
lahf
lea
adc
pop
push
adc
rcrl
jge
mov
insl
inc
repz
push
ds
mov
sbb
fisttps
ljmp
add
dec
addr16
xchg
add
stc
push
adc
mov
in
dec
pop
and
xor
outsb
dec
rolb
jmp
jb
add
mov
dec
ss
syscall
jno
fbld
push
cmp
sbb
rcrl
ret
imul
int3
adcb
rcrb
add
or
jmp
mov
mov
subb
inc
xchg
sti
push
rcll
loopne
xchg
sub
dec
testl
flds
mov
movsb
loopne
test
into
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
jmp
out
aad
aad
aad
adc
out
movb
pfcmpge
jg
xor
mov
daa
mov
adc
insb
out
jp
mov
repz
pop
inc
adc
pop
sbb
adc
jno
ret
test
out
scas
out
lods
jmp
in
xchg
movsb
mov
mov
jg,pn
jae
js
int
inc
mov
mov
divl
adc
repz
lret
mov
shll
inc
cld
jb
ja
ljmp
jbe
sbb
jg
mov
outsb
stos
pusha
lods
inc
and
dec
jo
in
jge
jno
dec
pop
lret
test
cmp
dec
push
shrb
mov
jg
pop
cwtl
fdiv
sub
sti
push
fstpl
scas
stos
mov
push
lods
pop
jb
and
lret
cmp
push
fs
mov
mov
push
scas
jae
mov
out
jmp
jmp
popa
stos
xchg
push
xchg
push
xchg
ds
push
call
adc
addb
in
int3
mov
stos
data16
or
outsl
push
addr16
xor
jnp
bsr
jne
int3
repz
sbb
or
and
lret
inc
sahf
jg
lret
popa
movsl
test
cmpsb
push
sarb
mov
cld
adc
enter
popf
or
xchg
adc
dec
imul
ret
shrb
movl
inc
inc
das
ficompl
divl
cmpsl
jle
rorb
into
add
xchg
loope
cmp
xchg
adcl
mov
jo
cmp
and
mov
clc
int3
out
daa
jno
out
sarb
push
lahf
nop
movsl
push
sub
push
pop
or
fdivs
sub
mov
mov
out
push
cmp
out
and
push
sbb
pop
jns
ss
sbb
out
scas
xor
dec
push
cmp
ret
mov
and
ljmp
bound
rorb
mov
imul
xor
ret
fcomi
lds
or
pop
jno
popf
scas
cmp
mov
outsb
mov
ret
inc
and
xor
or
mov
mov
inc
out
gs
push
movl
add
mov
or
mov
repz
dec
mov
xor
shrb
push
je
int
repz
inc
dec
xor
scas
cmpsb
xor
mov
ljmp
sub
rclb
out
jge
std
xchg
je
push
mov
xchg
loopne
sbb
repz
inc
fsubl
sarl
cmpb
scas
std
outsb
loop
adc
mov
ret
add
jmp
andb
mov
ljmp
add
pop
das
cld
xlat
jae
cmp
inc
pusha
iret
cmp
stos
movsb
sbb
mov
push
mov
adc
sbb
xor
test
scas
xchg
loop
jp
lods
into
stos
mov
fs
leave
dec
cwtl
int3
inc
and
aad
mov
lret
mov
popf
shll
int3
add
bt
pop
jo,pn
test
in
fiadds
and
movsl
fiadds
mov
out
shl
sub
or
out
lds
dec
jmp
xor
mov
imul
xor
cld
stos
xor
pop
or
jl
xor
sbb
pop
pop
fdivrl
wrmsr
out
popa
test
pop
pop
pop
lods
xchg
pusha
inc
hlt
ret
mov
mov
stc
and
and
das
mov
sti
inc
mov
sub
lret
inc
pushl
cltd
hlt
test
xchg
fldl
adc
jae
ret
fiaddl
cltd
cwtl
cmp
lds
sti
outsl
out
xchg
pop
int3
push
jmp
in
mov
stc
mov
js
mov
sbb
fs
test
fwait
jp
ss
outsb
outsl
cmp
rclb
push
push
mov
cmp
mov
lret
cmp
lods
push
push
outsl
xor
xchg
jmp
mov
and
sbb
rcl
iret
inc
sbb
je
push
xchg
ljmp
shll
rorb
lahf
loopne
dec
stc
lods
rorl
scas
mov
ffree
adc
ljmp
jb
inc
cltd
adc
jo
pop
or
insl
decb
sbb
jecxz
cs
pop
arpl
or
push
ret
mov
pushf
aaa
mov
lret
nop
push
stc
or
sbb
out
sbb
push
xor
mov
insl
mov
fcomps
jne
mov
adc
in
rorb
mov
xor
addl
mov
test
adc
aas
adc
iret
push
stos
xchg
and
and
adc
clc
movsb
lods
jns
aas
push
insl
sbb
int3
mov
jo
ds
xorl
adc
mov
andl
push
xchg
pop
shrb
lds
or
stos
sbb
and
cld
inc
and
aaa
adc
mov
cmp
incb
sar
aas
mov
pop
hlt
ret
dec
and
mov
cmpsl
ss
pop
cmpsb
fisttpll
imul
mov
shrb
and
mov
mov
pop
loope
pushf
dec
adc
test
ja
mov
xchg
mov
jne
and
call
sti
mov
inc
adc
xor
ret
icebp
fisubs
xchg
out
scas
sahf
add
popf
or
dec
sti
ds
cmc
xchg
inc
xor
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
push
movl
movl
jmp
imull
xchg
xchg
aam
pushf
xchg
xor
add
rcl
lret
jl
adc
fisttpl
or
adc
shrb
aaa
sti
jge
add
xchg
outsl
cmc
popa
sub
ds
test
pop
mov
jne
std
je
psraw
inc
add
jo
sbb
and
mov
fsubrs
cmpsl
cmpsb
or
cli
mov
ljmp
sub
mov
ljmp
jl
loopne
adc
jb
into
sti
mov
fs
sub
and
les
xchg
sbb
clc
dec
iret
inc
mov
jl
mov
sahf
mov
pusha
fnsave
and
mov
sbb
inc
mov
test
es
xchg
dec
pop
jnp
jae
pop
mov
lcall
movsb
mov
popa
into
iret
aam
add
jo
jmp
pop
mov
sbb
sub
push
xchg
push
test
sbb
cltd
cmp
loopne
sub
fstpl
jne
fdivl
icebp
int
nop
mov
into
mov
ret
dec
xchg
scas
xor
movsb
mov
adc
mov
push
dec
lds
mov
push
movsb
repnz
adc
sbb
jecxz
xchg
scas
pop
fiadds
or
aad
test
insb
repz
or
jbe
into
imul
imul
in
stc
test
ret
adc
dec
movsl
pop
dec
out
leave
notb
loope
sarb
cmpsl
ret
iret
xor
aad
push
in
mov
imul
push
jmp
or
dec
ja
or
push
dec
inc
dec
fbstp
in
das
jecxz
sub
add
movsl
or
inc
cs
ret
dec
xchg
mov
mov
mov
stos
pop
movsb
shl
mov
adc
xor
push
pop
sub
push
popf
or
xchg
adc
or
mov
xchg
mov
stos
fstpl
in
xor
insl
sub
push
into
jbe
aad
dec
mov
in
mov
inc
push
mov
sarb
adc
fwait
mov
aad
cmp
test
movsl
sbb
sub
push
jb
outsb
xorl
imull
jge
inc
out
out
sbb
test
int
loopne
mov
sbb
fstpt
mov
test
pop
and
jl
setb
add
divb
and
pop
in
and
rcrb
leave
jnp
mov
push
rcr
xchg
xor
mov
sbb
or
mov
ds
push
incl
mov
ss
arpl
mov
call
add
cmpl
das
icebp
pushf
jnp
mov
js
gs
and
movsl
testl
sub
je
pop
jl
shlb
or
fs
xchg
inc
pop
mov
push
adc
ljmp
push
mul
popa
cmc
lret
inc
mov
stc
push
in
jae
sbb
fisubrs
and
std
mov
ret
movsl
loopne
cmpsb
arpl
outsl
out
or
test
das
shlb
dec
fmull
push
ss
dec
ficompl
hlt
mov
jecxz
ss
into
jecxz
stos
or
mov
push
das
dec
mov
dec
mov
leave
push
lret
loopne
loope
add
stos
mov
cld
push
and
jecxz
inc
jnp
mov
imul
jl
inc
clc
or
mov
cmc
nop
inc
leave
cmp
lcall
bound
and
xchg
mov
in
stos
fs
mov
daa
ljmp
mov
add
gs
loopne
adc
push
xor
mov
xor
mov
movsb
add
cmpsb
imul
mov
pop
add
mov
cld
mov
test
jno
imul
and
call
in
dec
jnp
mov
in
sar
push
idivl
fiaddl
mov
xor
inc
das
and
dec
jg
lret
mov
push
sbb
pushf
mov
test
cmp
mov
out
imul
stos
rclb
lds
pop
pushf
cmp
lahf
ss
push
test
mov
arpl
mov
mov
stc
pop
in
ror
je
pushl
dec
mov
aas
push
in
sbb
xchg
jnp
mov
cltd
ret
adc
cmp
leave
imul
mov
add
inc
shll
rcr
add
xchg
aaa
xor
inc
xchg
les
dec
outsb
xchg
popa
int3
pushf
cwtl
xchg
push
rclb
mov
jns
ret
push
ret
or
les
jecxz
and
outsb
ret
js
mov
dec
sbb
roll
mov
ret
cltd
inc
jmp
iret
nop
mov
sub
fbld
xor
xor
jo
inc
sbb
or
dec
push
je
xchg
icebp
call
fdivs
xor
cmp
sbb
mov
push
shlb
imul
add
xchg
pop
cmp
xor
add
dec
sub
push
lcall
lock
mov
cmpsb
push
inc
jecxz
adc
xor
movsb
sub
mov
and
jl
xlat
out
icebp
into
mov
xchg
jmp
neg
clc
mov
or
pusha
lahf
adc
add
movl
fisttps
push
fs
lods
shll
enter
inc
mov
jb
sarl
mov
xchg
loop
not
imul
jp
daa
pop
fstps
add
mov
sbb
outsl
shrb
arpl
movl
sbb
repnz
test
mov
movsl
jecxz
sub
push
xrelease
nop
nop
dec
xchg
cmp
outsb
jl
mov
adc
mov
sbb
xor
adc
xchg
das
call
sbb
pusha
pusha
push
mov
adc
xor
xor
mov
mov
dec
cltd
daa
xchg
xchg
sbb
inc
iret
fisubs
pusha
test
mov
add
loop
mov
push
inc
js
or
fnstcw
and
test
push
sgdtl
and
inc
inc
mov
xor
jl
xchg
sbb
insl
movsl
xchg
ret
fsubs
pop
pusha
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
pop
fdivl
jo
push
push
mov
out
jbe
repz
xcrypt-ofb
cmpsl
lods
adc
mov
add
mov
cmc
push
push
fsubl
mov
mov
and
cmp
out
inc
xor
add
push
jo
lods
cli
push
call
rolb
into
xchg
jle
popf
mov
push
inc
jo
xchg
sbb
cmc
dec
je
jg
xchg
pop
call
jne
arpl
jo
inc
add
add
stos
pusha
xor
push
sub
jle
mov
push
push
xchg
adc
je
jne
arpl
daa
test
dec
fisubl
inc
in
clc
sbb
xor
inc
ret
mov
sbb
mov
dec
cltd
out
xchg
notb
test
es
jns
or
push
dec
jl
out
in
mov
movsl
mov
jge
adc
xchg
imul
mov
jns
mov
and
ja
aas
inc
movsb
popf
cmpb
outsb
or
cld
inc
popf
out
cmp
fimuls
lahf
call
es
ja
xchg
push
movsl
sbb
cltd
js
mov
dec
mov
dec
movsb
mov
inc
xchg
ficoms
into
sbbl
mov
cli
aas
shrb
ja
rorl
mov
xchg
pop
mov
mov
scas
fs
rolb
in
pushf
test
push
push
sub
xchg
lods
dec
ljmp
fwait
adc
jp
jp
fs
xchg
dec
jne
js
xlat
mov
or
aam
mov
pop
xor
sbb
jnp
fcompl
sbb
lock
cmpsl
pop
mov
sbb
repnz
mov
and
popf
lret
iret
adc
lods
sub
push
cmp
es
cwtl
leave
lods
sub
std
jmp
jmp
test
jg
rorb
xor
int
pop
loopne
fsts
fmull
icebp
mov
nop
sbb
dec
mov
xchg
aas
xchg
pop
inc
outsb
sub
xor
jmp
jecxz
sbb
xor
out
and
addr16
out
subl
push
sbb
lret
outsl
inc
jmp
jne
inc
xchg
xchg
xchg
into
mov
xchg
pop
mov
enter
je
ljmp
xchg
shlb
sarb
in
mov
pop
fmull
mov
and
inc
inc
cltd
xor
mov
mov
push
cmp
push
xchg
icebp
bound
ds
pop
dec
and
jne
jno
fists
xchg
ja
xchg
mov
fucomip
pop
dec
xchg
mov
cltd
xor
or
sbb
lret
and
cmp
jle
pop
mov
inc
dec
incb
sub
push
bound
dec
and
mov
imul
sbbb
je
mov
lcall
das
inc
sbb
bound
jg
into
test
popf
and
jbe
xchg
dec
xchg
ljmp
and
lds
adc
cmpl
mov
out
xchg
mov
movsb
fcoms
jecxz
or
mov
xchg
sarl
sub
outsl
pop
xor
aam
test
jge
sub
pusha
rol
xlat
mov
lods
fidivrs
push
xchg
inc
insl
stos
or
int
stos
xchg
xor
popf
pop
sbb
idivb
sbbb
ja
decb
int
pop
aaa
push
add
inc
xchg
and
hlt
ret
repz
rol
clc
mov
in
and
inc
aaa
lcall
shr
in
ljmp
fsubs
repnz
and
xchg
push
xor
stos
int
aas
lds
mov
imul
dec
fwait
addr16
sub
stc
mov
int3
in
mov
shlb
pop
int
imul
sbb
in
adc
lods
cmpsl
daa
fld
dec
in
mov
push
and
loop
pusha
cmpsl
or
adc
lahf
mov
jge
lds
jo
jns
out
lret
pop
dec
jne
dec
sbb
mov
inc
ja
dec
cmp
xchg
icebp
xor
mov
call
mov
mov
mov
push
ret
push
push
sub
jg
arpl
sahf
mov
jno
mov
test
dec
int
or
scas
mov
xchg
cwtl
push
andb
fisttps
sbb
pop
cmp
jb
int3
xchg
mov
jb
fwait
and
call
mov
push
loop
outsl
jmp
push
add
in
xor
mov
dec
cmpsb
rcr
insb
imul
lcall
fs
outsb
cmc
adc
cli
sbbl
ror
mov
notb
mov
adc
mov
dec
xchg
mov
loope
jmp
and
add
pop
fisubrs
movsl
out
xchg
pop
add
sbb
pop
sbb
repnz
call
sbb
add
ror
mov
fcmovnb
inc
pop
push
lret
imul
or
nop
sub
es
sbb
fbstp
jl
daa
adc
pop
mov
or
popf
outsl
pop
mov
dec
scas
mov
aam
sarl
cwtl
xchg
fstpl
aaa
sahf
out
mov
repnz
xor
cmp
xchg
push
jmp
dec
sub
ret
jmp
xlat
aaa
pop
inc
sahf
jno
imul
repnz
mov
xor
daa
jl
pusha
ss
or
and
ret
sbb
add
sub
jge
push
adc
mov
arpl
and
xchg
dec
dec
js
not
and
fisttps
xchg
sbb
mov
call
or
xchg
jp
imul
mov
jns
mov
lcall
jge
mov
repz
iret
sbb
sahf
mov
cmc
xor
push
popf
push
adc
adc
clc
int3
jne
sub
insl
test
rcrb
into
je
fisttps
fldt
lret
xchg
andl
leave
cmp
jae
push
repz
ds
pusha
cli
xchg
into
add
or
das
jnp
add
pushf
cmp
ror
push
push
add
scas
loopne
movsb
cmpsb
ror
pushf
mov
add
adcb
mov
pop
jg
add
mov
sahf
pop
stos
adc
xchg
lahf
ja
std
pop
loop
mov
imul
xchg
rclb
fwait
sahf
xchg
inc
jl
mov
push
mov
pop
mov
inc
add
mov
mov
mov
mov
push
add
push
adc
jmp
lcall
xor
cwtl
pop
mov
add
mov
loopne
pop
mov
cmp
cld
jl
loope
aaa
and
push
movsl
repz
cmpsb
mov
mov
inc
jns
adc
call
aaa
aam
ret
insb
ss
push
and
ret
and
inc
sahf
push
inc
iret
shlb
mov
call
cmpsl
negl
mov
inc
outsb
fnsave
mov
loopne
fsubp
sub
in
lods
sbb
jns
jge
aam
and
xor
sbb
leave
sub
bound
test
fs
jbe
jb
decb
mov
cmpb
fwait
cltd
xor
outsb
and
jl
xor
mov
push
pop
pop
push
jp
dec
dec
push
and
sbb
flds
cltd
pop
shl
sbb
cli
inc
fcmovnb
ret
mov
jns
dec
push
jl
jp
mov
pop
orl
sarb
adc
jmp
fs
imul
lcall
dec
imul
cmp
and
scas
sbb
js
in
push
or
loope
rcl
adc
orl
popa
adc
adc
push
xor
fbld
repnz
dec
and
inc
dec
es
stos
int3
in
inc
push
and
sbb
insl
mov
test
movsb
in
add
mov
ja
ja
adc
xchg
pop
mov
lods
mov
ds
fidivl
enter
pop
jae
jl
cs
pop
jo
xchg
cmp
cli
mov
and
clc
mov
pop
push
mov
xchg
roll
mov
jmp
add
fwait
popa
shll
jg
jnp
mov
imul
mov
pop
lret
xchg
scas
addr16
mov
or
push
mov
int
jge
sub
xchg
movsb
sbb
mov
push
lock
and
test
fldt
xor
test
sbb
xlat
xchg
add
ja
in
pusha
cmc
jno
lcall
xor
or
rclb
cs
xor
in
jg
dec
outsb
mov
cmp
push
outsb
or
std
xor
stos
add
push
cmp
gs
ficoms
push
or
mov
into
push
std
js
aam
push
jg
xor
adc
stc
jne
cld
rcrl
movsl
stos
rcll
iret
xchg
add
push
andl
cld
cmp
popa
or
scas
enter
scas
data16
cltd
dec
imul
push
sti
mov
ljmp
lods
cmpsl
mov
push
add
pop
ljmp
mov
inc
push
cs
cli
mov
shlb
je
mov
add
lock
into
mov
cmpb
out
imul
fnsave
lret
scas
dec
mov
stos
test
aas
shlb
pop
div
and
sbb
fsubrl
cmp
daa
test
push
xor
nop
mov
aaa
fsubrs
cmpsb
add
push
inc
push
mov
sub
xlat
add
cmp
adc
clc
popa
push
ret
xchg
sti
xchg
scas
inc
aam
mov
aaa
lods
rcr
lds
push
adc
push
jge
add
or
mov
add
mov
mull
add
pop
shr
insb
sbb
jge
lret
lock
cli
cmpb
xor
cmp
je
push
nop
push
int
outsb
mov
or
push
dec
test
test
inc
test
pushf
notb
add
cs
shll
sub
push
in
pop
es
rclb
imul
jb
mov
jmp
or
jnp
ret
sbb
sbb
in
sub
dec
sub
mov
xchg
repz
ds
add
sbb
jmp
ds
mov
jnp
jmp
add
mov
rcll
jb
sahf
pop
outsl
incb
repz
cwtl
cmp
ror
mov
pop
cmpsb
mov
jno
pop
pop
mov
sub
fldt
mov
int3
push
cmp
inc
add
out
outsl
mov
mov
xchg
add
pop
je
idivb
bound
lret
or
xor
daa
shrb
fisttps
jp
std
stos
pusha
mov
and
or
xchg
sub
xor
shrl
lea
shrb
popf
mov
add
fcos
mov
fincstp
mov
dec
fdivl
out
push
sbbb
pop
imul
push
add
push
jb
fsubrs
bound
mov
cmp
ss
fcoml
cmp
inc
mov
loope
xchg
sub
adc
aaa
out
pop
fs
repnz
lods
in
insb
bound
xchg
xlat
sub
jge
bound
dec
add
pop
mov
stos
in
into
sti
call
cs
jbe
inc
cwtl
aaa
add
enter
out
inc
out
push
test
aam
cmp
jae
pop
sub
mov
xchg
sbb
scas
fcoms
fisubs
sarb
push
jle
aaa
pushf
xor
jne
pop
adc
cltd
filds
out
fmuls
inc
push
sbb
xchg
imul
outsb
sahf
push
and
outsb
insl
rcll
xor
test
xor
inc
and
jge
push
fsub
jae
mov
push
into
daa
inc
bound
dec
idivb
xor
shlb
iret
test
mov
loop
test
or
mov
js
iret
cltd
cmp
push
xor
loop
sbb
into
dec
push
cmp
mov
dec
or
shll
mov
leave
loope
and
jmp
shll
cld
ror
mov
mov
sub
insb
cmpsl
lods
mov
subl
fprem1
xor
out
sub
lcall
adc
sub
mov
divb
dec
sarb
jmp
pop
dec
sarb
inc
insl
pop
inc
ret
add
and
sbb
into
mov
jbe
testl
xchg
pusha
dec
xor
dec
pop
jle
adc
lahf
mov
jmp
lahf
fistpl
in
movb
iret
sub
inc
outsb
ss
cmpsb
mov
iret
repnz
jno
scas
cmp
cmp
xchg
insl
adc
or
int3
dec
pop
ljmp
add
roll
pop
push
push
call
mov
mov
sub
mov
jmp
mov
and
cwtl
sub
inc
dec
fstpt
push
add
sub
cs
mov
shlb
fbld
or
xchg
adc
mov
add
ja
and
inc
add
xchg
sub
fucom
fildl
cltd
mov
and
sub
aad
sub
jp
adc
not
je
mov
push
lea
ljmp
mov
pop
aaa
lock
hlt
addl
jmp
and
xor
mov
inc
out
adc
or
repnz
inc
sarb
mov
test
loopne
nop
fistl
add
mov
repnz
stos
mov
xchg
call
lcall
in
cmc
loopne
pop
clc
aaa
sarb
lret
sbb
sbb
shl
push
dec
es
pop
pushf
mov
and
fistps
fdivr
loop
cwtl
pop
mov
add
aam
xchg
sarb
gs
outsb
in
outsl
mov
and
mov
fisubrl
cmp
lds
negb
xchg
das
mov
scas
xchg
es
xchg
pushf
cld
sub
adc
push
sbb
cs
jle
push
cmp
lds
adc
jb
adc
pop
pop
push
cli
add
addb
mov
adc
mov
out
arpl
movsl
adcl
xchg
mov
sti
xor
inc
rcr
ret
sub
cld
mov
data16
shl
shlb
test
je
sub
psubusw
push
mov
dec
stos
repz
testb
iret
cwtl
and
jle
push
cs
pop
cwtl
in
subb
in
jns
icebp
adc
sbb
jmp
pop
jecxz
mov
imul
sbb
and
push
mov
mov
in
cli
stos
or
addr16
cmpsb
enter
push
fwait
mov
clc
cmpsl
out
shlb
or
jbe
or
sahf
rorl
scas
loop
mov
mov
dec
xor
jb
pusha
shlb
inc
jmp
push
hlt
cmpl
mov
pop
mov
stos
ret
ret
inc
enter
and
dec
push
iret
push
ret
add
jmp
lock
std
stos
push
pusha
bound
stos
in
mov
push
nop
ret
cmp
out
cmp
xchg
xchg
jmp
sub
out
dec
loopne
mov
fadds
add
pop
push
pop
jne
jmp
in
pop
mov
pop
scas
xchg
mov
xchg
nop
clc
xlat
inc
dec
xor
sti
out
mov
pop
rcll
and
std
fisubl
lcall
and
mov
sbb
clc
aas
dec
jns
insb
mov
pop
lahf
lret
jmp
test
sub
inc
arpl
push
pusha
pop
adc
into
mov
ss
add
int3
sub
mov
xchg
rcll
dec
pop
sbb
jns
sub
test
fisttps
add
cmp
out
insl
xchg
jo
dec
cmp
pop
loopne
push
push
mov
cld
orb
xchg
sarl
lahf
jne
adc
aad
mov
cmp
jge
cmp
sub
xchg
inc
sbb
inc
dec
xor
push
fistps
pop
push
adc
fstp
les
inc
xchg
mov
pop
cld
enter
ret
mov
int3
mov
aam
jne
pop
and
jge
adc
push
or
data16
push
gs
mov
xor
pop
jmp
xchg
aad
jne
mov
ficoms
sbb
daa
popa
lock
add
fsubrp
inc
arpl
jbe
iret
inc
dec
cs
xchg
daa
sbb
sbbl
pop
jmp
push
addr16
push
push
das
sub
xchg
push
scas
add
push
clc
das
cmp
xchg
xor
test
push
into
lret
cltd
addb
int3
imul
inc
add
int
xchg
movsl
inc
lods
movsb
or
outsb
inc
decl
orb
jo
ret
sbb
pop
mov
js
sbb
mov
cltd
subb
mov
cs
scas
bnd
pop
imul
push
push
xchg
jo
pop
sub
lahf
pop
sarl
lcall
loopne
xorl
fcoms
cmpsl
xchg
nop
mov
sub
inc
enter
or
lcall
cmp
ljmp
shl
add
iret
push
push
pop
dec
mov
pusha
rorl
cmpl
or
inc
jle
lds
sbb
sub
xor
jmp
iret
mov
xlat
movsl
stc
push
out
imul
cld
aas
mov
push
dec
add
mov
jp
and
add
cmp
push
push
arpl
mov
les
sahf
jae
mov
xchg
stos
jns
in
subb
mov
pop
mov
and
andl
leave
int
rolb
imul
into
push
enter
push
stc
lret
dec
mov
adc
cmp
das
pop
fcoms
and
dec
dec
mov
mov
popa
mov
data16
addr16
jle
push
inc
les
sbb
ljmp
outsb
jne
addr16
nop
out
xor
pop
mov
jne
xchg
push
pushf
wbinvd
jl
hlt
insl
inc
popa
in
and
sbb
push
int3
push
icebp
xchg
imul
daa
mov
inc
in
sbb
or
push
mov
out
mov
xchg
push
stos
les
jg
mov
shlb
cmp
stc
inc
lock
mov
mov
jnp
iret
sub
loope
sub
outsb
dec
cmp
and
or
outsl
cli
fildll
popa
xchg
subb
dec
int
jge
lcall
out
jne
mov
cltd
js
cld
mov
fstps
ja
orl
dec
jg
lret
jmp
test
in
and
pop
pop
sub
sbb
bound
pushf
cmp
push
xor
popa
ret
sahf
leave
add
daa
nop
movsl
pop
push
mov
xor
xor
push
push
xchg
ret
fwait
pop
xchg
cmpsb
mov
arpl
inc
lea
iret
repz
cwtl
xchg
ds
or
inc
jle
dec
push
lret
push
cmp
dec
jo
pop
stos
neg
in
sub
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
jmp
lcall
or
lret
mov
add
gs
aas
hlt
mov
mov
fwait
test
dec
jne
push
sbb
adc
cmp
lret
dec
sub
inc
add
mov
add
xchg
nop
inc
xlat
or
roll
stos
dec
in
push
repz
std
sbb
dec
lcall
fimuls
mov
inc
insb
xchg
jo
nop
mov
sbb
data16
inc
scas
sbb
jmp
and
xor
clc
repnz
jae
mov
mov
sbb
xsaveopt
stc
dec
xchg
and
xchg
sbb
call
sub
pcmpeqb
and
aam
out
arpl
cmpb
fstpl
sbb
test
cmp
movsl
pop
mov
enter
lock
std
dec
add
inc
xchg
fisubs
imul
rorb
pushf
rol
dec
cmc
lss
rcll
adc
fisubl
leave
xchg
lahf
testb
pop
roll
push
sahf
jne
jno
std
lods
ja
jmp
nop
xor
outsl
inc
iret
fists
leave
xchg
ret
insl
push
bound
xor
push
xor
repnz
loop
lret
lret
test
rcll
mov
mov
scas
lahf
scas
push
ret
ret
jmp
lods
test
lcall
mov
fmuls
and
sub
push
xchg
sbb
jae
mov
insb
lods
cmp
rcrl
cmp
jns
mov
and
mov
pop
jge
jns
ljmp
je
push
jecxz
les
popa
insb
mov
adc
out
js
fstp
cmpsl
sub
add
cli
mov
pop
mov
cmovg
cwtl
pop
or
sbb
outsl
or
int3
jae
data16
dec
es
arpl
jb
pop
fldl
jbe
test
cwtl
fwait
xchg
mov
xor
jne
push
adc
cmpsb
adc
in
add
sub
rorb
std
test
movsb
mull
mov
push
loopne
push
hlt
adc
mov
ljmp
inc
sarl
mov
shrl
and
inc
int
pop
push
dec
dec
fidivrs
rorl
in
jmp
xlat
and
mov
iret
and
in
dec
jecxz
mov
clc
mov
and
mov
and
xor
xchg
xchg
pop
add
in
jo
cmp
into
xchg
xor
pop
sub
out
push
add
out
inc
pop
sti
jmp
mov
mov
xor
sbb
lock
bound
or
in
inc
ja
loop
jno
mov
out
bound
loope
dec
add
push
aad
shlb
popa
jae
fiaddl
cmp
aam
mov
outsb
dec
xor
push
leave
inc
mov
outsb
dec
fidivs
testb
adc
cmc
inc
scas
ljmp
loope
subl
inc
dec
inc
rcrb
incl
sbb
xchg
fildl
fs
inc
or
jp
add
stc
in
sbb
inc
mov
adc
mov
out
mov
movb
ficompl
sub
adc
jmp
pop
and
pop
pop
aam
mov
aad
mov
pop
jno
xchg
mov
mov
and
test
or
add
pop
dec
clc
loop
fsub
sub
mov
in
mov
jl
add
mov
fstl
out
cmp
push
and
pop
jae
iret
ljmp
insb
test
insl
and
js
cwtl
xchg
nop
lcall
or
add
movsb
lods
and
cmp
pop
dec
cli
inc
lods
pop
rclb
fisubs
jae
cwtl
xchg
push
aam
cmp
cltd
inc
dec
xlat
repz
mov
push
ds
shrb
or
test
push
sub
out
xchg
imul
movsb
and
jp
shll
cmp
idivl
enter
loopne
inc
and
into
push
addr16
sarb
inc
mov
test
pop
fildl
pop
push
sub
lret
sbb
pop
cwtl
in
outsl
fwait
lret
add
sbb
mov
enter
push
push
jne
jge
xchg
sbb
push
pop
arpl
mov
sbb
clc
xor
jle
sbb
fs
cld
xchg
lret
scas
mov
out
add
jge
stos
data16
lea
cltd
aam
cld
pop
hlt
test
cmp
sub
xlat
mov
cmp
pop
notl
inc
lcall
pop
int
mov
mov
fwait
pop
je
lds
int
jmp
inc
push
addl
mov
hlt
mov
fisubl
push
and
or
cmp
adc
mov
adc
mov
out
and
jge
lods
and
adc
cli
cmc
xchg
sti
fldcw
outsb
dec
xor
push
push
fcomi
sbb
mov
fnstsw
mov
std
inc
loope
divb
ja
push
ss
das
add
sbb
sbb
cmpsb
xchg
inc
inc
ss
sbbl
shlb
nop
fcomps
pop
pop
push
sbb
arpl
sub
xchg
pop
mov
scas
bound
test
mov
lcall
sbb
and
shl
ret
mov
fistpl
jmp
ja
jg
mov
outsb
xchg
cld
jp
push
out
and
insb
aad
push
xchg
inc
cmp
xchg
shrl
stc
rclb
scas
add
mov
cs
dec
mov
jae
cmpsb
outsb
and
outsl
dec
jl
push
inc
cmpb
jl
jae
fs
test
arpl
cld
outsl
les
jg
push
popa
xor
jge
xor
in
jg
push
popa
mov
inc
test
push
sbb
arpl
push
and
sbb
mov
push
or
sbbb
push
roll
push
or
arpl
or
adc
insl
cmp
inc
ret
inc
lcall
ja
jno
shll
or
dec
test
or
out
dec
mov
or
outsb
fs
jae
adc
pop
aad
dec
aas
cmp
filds
pminsw
and
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
jmp
mov
sbb
popf
or
enter
inc
add
mov
mov
lahf
mulb
stos
mov
lret
lds
movsb
insl
xor
shr
lods
cmpps
ss
inc
insb
xchg
je
test
dec
push
mov
insl
mov
or
lret
push
repnz
cwtl
cmpsl
addr16
and
fsubs
sbb
xor
test
mov
or
mov
adc
popf
jno
ja
jne
add
dec
lods
sub
test
and
and
scas
in
out
mull
push
push
mov
outsl
out
shll
xor
ljmp
scas
cmp
push
outsl
xor
mov
sbb
dec
lret
mov
mov
or
sub
push
sbb
xor
dec
cmc
inc
in
or
add
push
cmp
mov
call
movl
jmp
adc
mov
stos
cmp
movsl
shll
and
lahf
ret
jg
adc
or
jg
mov
lds
xor
dec
push
push
cmpsb
xchg
daa
and
push
fisubrl
mov
in
cmpsl
repz
mov
out
add
sub
dec
fdivrl
mov
xor
ror
jae
mov
ret
adcl
push
insl
xor
or
adc
imul
pop
or
ffreep
mov
roll
push
shlb
ja
cwtl
lods
mov
lea
ds
scas
xchg
mov
ret
lods
sub
xor
das
sub
mov
jns
test
xor
mov
in
dec
loop
out
cmpb
pop
and
push
sbb
push
je
pop
movsl
andb
pop
jmp
mov
jbe
push
outsb
subb
xchg
cmpsl
push
cltd
jp
jg
sub
add
test
xchg
outsb
hlt
cld
icebp
imul
jne
mov
sbbb
add
dec
adc
call
adc
cmp
jge
into
aad
cmc
sub
xchg
daa
dec
enter
lahf
pop
ss
mov
lahf
sub
or
sub
test
jo
andb
and
or
sbb
addr16
inc
in
or
jnp
cmp
jne
movsb
inc
pop
dec
and
roll
inc
cltd
lods
loope
sub
or
into
jae
ja
rclb
lret
add
sbb
cmpsl
dec
js
mov
sahf
test
jns
fwait
lahf
imul
push
mov
iret
cmp
sti
push
loop
mov
adc
bound
mov
roll
scas
jae
xchg
push
mov
pop
ja
cmpsl
cmp
in
mov
loopne
idivl
test
xchg
adc
jecxz
mov
popf
pop
sbb
add
sub
cmp
xchg
xor
sbb
call
and
mov
das
sbb
scas
pop
pop
pusha
add
mov
ja
mov
nop
xlat
push
cmc
nop
std
test
clc
mov
fstpt
outsl
ret
mov
xor
fdiv
dec
movsb
mov
pushf
loope
add
cld
daa
and
mov
lea
push
ret
inc
jle
dec
push
icebp
inc
and
jl
ret
in
out
int3
sub
or
cltd
xor
add
jb
lods
sbb
leave
pop
bnd
push
add
jmp
mov
xstore-rng
cmpsl
add
stos
jp
imul
xor
sbb
out
popf
cmp
mov
shlb
bound
push
dec
inc
gs
push
loope
add
out
stos
xchg
dec
xchg
inc
mov
jbe
xchg
jmp
popf
in
push
adc
out
nop
insb
int
repz
rolb
mov
jl
inc
in
imulb
dec
shl
pop
push
mov
push
mov
rcrb
sub
cmp
cwtl
pop
stc
sbbl
cmpsl
mov
popa
mov
push
fistps
or
test
outsl
add
or
outsl
jg
rorl
outsl
mov
xchg
add
mov
out
in
inc
movsb
sbb
sbb
and
pop
inc
lahf
lods
dec
repz
jae
cmp
je
jo
out
cvtdq2ps
or
stos
push
sbb
or
xor
cmp
xor
mov
aaa
in
pusha
arpl
pop
ret
scas
fcoms
mov
mov
mov
shlb
cmp
jae
and
jno
jo
shrl
icebp
cmp
dec
test
sbb
push
test
addr16
daa
mov
or
pop
sbb
repnz
pop
push
xor
loop
mov
mov
add
out
insb
and
aaa
xchg
lret
mov
call
cmc
dec
test
pushf
fisubrl
dec
sub
push
or
or
push
jmp
sbb
imul
cmpsl
xchg
gs
ljmp
jnp
mov
sbb
and
cli
sub
ds
jae
inc
mov
mov
mov
dec
push
pmuludq
btl
lods
dec
pop
sti
or
mov
push
cld
stc
ret
or
push
test
cmc
mov
jo
push
clc
fiadds
lahf
pop
push
leave
icebp
call
inc
clc
fwait
or
popa
and
shlb
or
loope
add
xor
in
es
pusha
fcomps
and
or
enter
and
xor
xchg
dec
test
aas
or
push
and
dec
push
scas
inc
dec
aas
test
lahf
pop
sbb
test
push
call
cltd
xchg
mov
outsl
pop
ljmp
clc
into
xor
stos
test
loopne
popf
mov
add
call
shr
dec
cmpsb
out
out
push
xchg
lea
sbb
push
mov
dec
mov
cmp
xchg
xor
xor
jge
cmpsb
jp
mov
jbe
jnp
out
and
nop
push
inc
xchg
out
arpl
in
stos
vcvtsd2si
inc
movl
lret
and
push
xor
divb
push
leave
call
sbb
cmpb
repnz
sti
out
inc
movsl
jp
xchg
bound
pop
pop
inc
lock
mov
cmpb
mov
jae
or
cmp
lea
mov
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
jmp
mov
xchg
adc
mov
cmp
add
dec
sti
add
mov
dec
pop
enter
cltd
inc
ret
aas
inc
xchg
jbe
pushf
xchg
ja
pushf
inc
fcomps
xchg
insb
pop
movsb
sti
mov
lds
mov
adc
inc
xor
mov
mov
mov
push
shll
push
jmp
das
imul
dec
cli
mov
lahf
sub
dec
paddd
lods
int
test
pop
pop
adc
mov
add
adc
xor
stos
sub
jne
fisttps
and
out
xchg
repnz
push
movsb
xchg
int3
xchg
jne
shrl
divb
jge
arpl
cmpsb
outsl
mov
ja
cltd
cmp
imul
or
inc
in
xor
push
mov
jne
gs
and
push
nop
add
fisttpl
inc
inc
leave
push
enter
inc
aas
ss
dec
mov
sub
pop
and
push
jmp
inc
adc
xor
shr
xor
adc
cmpsb
jp
add
ja
in
ljmp
pop
mov
xchg
sahf
pop
mov
ficoml
out
fidivrs
ret
pop
xor
data16
dec
sbb
dec
addr16
nop
lcall
loope
inc
inc
pop
add
test
mov
inc
jge
pop
mov
inc
mov
sbb
ret
xor
xchg
sub
pusha
out
jo
xor
mov
xchg
in
cli
out
xorb
icebp
push
push
mov
stos
inc
push
enter
fdivrl
popf
sbb
leave
sbb
in
shlb
push
and
push
lds
out
or
add
or
cmovae
fincstp
lret
xchg
dec
shr
lret
xchg
mov
pop
out
jecxz
push
mov
push
xorb
aas
rolb
adc
sbb
push
mov
lods
aaa
std
es
lret
bound
aaa
mov
xchg
out
add
ret
adc
jecxz
cmp
into
in
push
dec
xor
mov
xor
ds
mov
fdivrs
xchg
test
cmp
mov
fwait
lahf
fisubs
daa
out
jg
dec
call
sub
adcl
shrl
lret
iret
inc
test
and
lods
sbb
or
addr16
mov
xor
mov
add
inc
cmp
cli
xor
sub
cltd
xor
test
adc
lea
inc
xorb
xorb
cwtl
mov
stc
push
pop
loopne
insl
sarl
ret
mov
aam
cmp
jno
rcrl
adc
xor
adc
lret
fistl
outsl
xchg
add
outsl
inc
cld
mov
std
adc
imul
xchg
aam
mov
sahf
lahf
fistps
aas
ret
ret
ja
pop
cmp
xorb
data16
push
sbb
push
hlt
push
or
push
ficoms
inc
stos
out
mov
mov
in
dec
push
sbb
es
adc
fwait
sbb
loope
in
cwtl
mov
leave
bound
lea
insb
js
mov
cmc
js
or
test
test
add
push
rcr
dec
inc
sub
lcall
pop
cmc
xlat
push
pop
adc
mov
outsb
inc
icebp
cld
lret
mov
xor
es
pop
hlt
rclb
dec
or
jno
test
and
loopne
inc
imul
mov
or
mov
call
les
or
push
bound
mov
cmp
xchg
push
inc
test
jb
gs
lret
jg
xchg
out
adc
cmp
mov
data16
lds
sahf
sbb
adc
and
jae
in
lret
rcr
das
rolb
in
cmp
loope
dec
mov
std
addr16
pop
xchg
fcomp
sub
dec
sub
orl
add
clc
dec
addb
stos
jo
sbb
xor
push
je
push
inc
nop
clc
mov
or
inc
imul
leave
bound
and
add
ja
dec
clc
jns
ds
jns
and
out
and
adc
jmp
pop
mov
jle
mov
mov
fistl
sbb
int3
jns
fstl
aas
adc
push
jo
sahf
insb
call
rorl
divl
xchg
or
pop
loope
xor
cmc
icebp
int3
xchg
das
push
in
insl
mov
sbb
xchg
mov
mov
jmp
lods
push
xchg
mov
and
shlb
nop
pop
negb
lods
xor
push
sbb
imul
add
jo
mov
test
mov
mov
cmp
cmp
xchg
not
out
rcll
dec
sbb
mov
shll
add
xchg
jne
ja
sub
sbb
test
outsb
pop
lahf
decb
adc
xorb
jge
adc
scas
ficomps
sbb
insl
test
jns
add
sub
lds
aas
ds
loopne
jno
jbe
dec
fs
sbb
pop
and
lcall
push
xchg
pushf
push
in
mov
loope
decl
dec
mov
rep
fs
mov
sbb
imul
xor
xor
cmp
add
and
mov
insb
icebp
adc
add
add
adc
jg
aam
imul
sub
popf
test
fwait
ss
push
or
shrb
inc
ficompl
pop
cwtl
cmp
fdivl
imul
test
stos
hlt
xor
popa
js
jmp
data16
ljmp
mov
adc
fcmovnbe
jno
dec
dec
push
push
into
push
shll
mov
jle
xor
jbe
jae
nop
into
xlat
add
push
out
dec
adc
or
rcrb
incl
push
aad
push
pop
fimull
adc
sub
inc
xchg
gs
je
jns
xchg
lock
imul
push
pop
int
jl
fcoms
mov
movsl
push
jp
mov
fcomps
sarl
mov
xor
std
jbe
or
out
inc
add
jl
mov
push
mov
mov
mov
push
push
push
jmp
dec
js
gs
push
pop
cmp
xchg
and
add
push
scas
popa
jp
sub
xor
inc
xor
push
xchg
push
jbe,pt
or
pop
into
std
insb
cmpsb
xor
mov
pop
xchg
jge
push
and
aas
sub
jne
mov
push
mov
or
into
dec
lahf
push
imul
lock
mov
leave
xchg
mov
mov
jae
adc
add
ret
mov
mov
adc
fwait
movsb
rcr
pusha
repz
sbb
mov
rolb
or
push
into
mov
fidivrs
xchg
sbb
push
xor
mov
jle
mov
jmp
int3
int
rcrl
pop
rclb
flds
gs
mov
iret
mov
xchg
es
pop
inc
lea
or
scas
leave
dec
sub
push
mov
cmp
dec
cmc
pop
cmp
mov
add
adc
push
push
mov
jg
jnp
lods
cli
cmp
xchg
sbb
aad
bound
test
negb
cmp
dec
dec
cld
cld
sbb
ret
sbb
xor
xlat
pop
fisubrs
cltd
lea
sar
scas
popf
xor
mov
leave
enter
sarb
stos
jno
add
mov
sahf
pop
jno
push
arpl
test
pmaxsw
and
jge
aaa
pop
push
in
push
inc
hlt
arpl
cmc
jmp
bound
fimull
outsl
fwait
or
mov
divl
cmp
mov
in
or
fwait
pushl
push
mov
xchg
rolb
aam
orb
in
mov
push
xlat
stos
andb
test
scas
sub
in
adc
dec
and
call
loope
shr
daa
or
mov
sbb
std
add
es
jns
pop
shlb
pop
or
pop
jae
in
jbe
jae
push
loopne
shrd
adc
pop
data16
inc
loop
loope
or
dec
je
sbb
fcomps
sbb
xor
shufps
scas
das
xor
js
xchg
adc
subb
push
lock
xorl
lcall
es
jnp
in
cli
enter
dec
popa
dec
ss
mov
and
pop
dec
push
cld
mov
cmc
inc
xchg
mov
sub
mov
mov
xor
push
jg
arpl
aas
js
leave
js
mov
pop
push
or
data16
scas
gs
scas
add
and
test
dec
pop
stc
xor
adc
sub
jo
sbb
pop
into
dec
aam
mov
cli
aaa
repnz
fsts
lcall
mov
repz
xlat
lret
fldcw
fwait
sub
pop
inc
adc
test
jno
enter
cli
jno
enter
add
cli
cwtl
or
push
xlat
int
les
lock
or
subl
push
iret
insb
into
sub
push
les
mov
mov
cwtl
sbb
inc
mov
or
sub
dec
je
ret
in
push
jmp
std
int3
push
test
shrb
inc
push
popa
inc
icebp
xor
addr16
pop
aad
cmpsb
dec
jle
sahf
or
insl
aas
sbb
mov
negl
add
je
cmp
lahf
int3
add
lret
add
xor
and
mov
jno
sbb
inc
mov
and
mov
inc
push
or
sahf
pushf
out
mov
mov
push
adc
push
and
push
xor
repz
mov
sub
stos
sub
push
rcrl
jbe
jge
lods
cmp
jge
xchg
gs
sbb
add
out
adc
out
adc
mov
xchg
lods
jno
cmpsl
cmp
ret
imul
in
js
and
fnstcw
lea
push
fsts
sbb
cli
sub
ffree
sub
mov
rcrb
jmp
adc
xchg
leave
and
loop
dec
lcall
mov
adc
jl
pop
stc
sbb
aad
fdivrl
ficomps
adc
inc
mov
lret
inc
inc
add
adc
test
stos
add
pusha
test
jp
push
cmp
rcrl
mov
xchg
loopne
xor
filds
test
add
cli
inc
xchg
xor
arpl
or
jno
or
jge
pop
les
and
out
add
rolb
mov
sbb
pop
cmp
mov
les
pop
aad
add
jmp
mov
pop
adc
pop
imul
pop
shrl
cmp
push
mov
xor
mov
lock
int
mov
adc
mov
movsb
cmpsl
movsl
cltd
inc
ds
out
jbe
sbb
jg
lahf
fxch
lods
jnp
mov
jecxz
adc
sub
ljmp
dec
lods
inc
adc
jns
loopne
xchg
jmp
hlt
mov
out
outsl
or
sub
rcrl
push
sbb
imul
cmp
add
std
push
stos
out
jle
pop
lahf
jns
push
lds
inc
pop
jecxz
stos
outsl
ds
xchg
sahf
aaa
shll
js
cmp
cmc
movsb
inc
sub
stc
add
stos
shl
in
sbb
adc
sahf
inc
outsb
cmp
pop
xchg
mov
add
jecxz
sbb
push
adc
push
sub
aad
sbb
cmp
sti
scas
inc
jg
ljmp
dec
pop
push
fldl
and
sub
imulb
jge
scas
das
mov
xchg
pop
pop
pop
xchg
into
pop
and
daa
sbb
out
in
adc
xor
in
outsl
mov
mov
popf
push
xchg
adc
sti
push
pop
cld
movsb
pop
inc
scas
je
lret
lods
scas
or
mov
push
and
pop
shlb
pop
xchg
fldt
mov
stos
mov
gs
stc
jo
pop
cli
test
pusha
jb
out
and
addb
clc
add
repnz
inc
movsb
xchg
ret
lods
adc
xor
testl
jbe
jae
pop
pop
les
lret
imul
pop
aaa
out
sub
out
test
mov
int3
mov
push
xor
add
pop
add
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
jmp
fnstenv
inc
mov
mul
push
xchg
add
ja
or
add
push
adc
cmpsb
push
lcall
jno
xchg
lret
mov
jmp
insb
cmpsb
jb
inc
dec
lods
cmp
add
mov
ret
mulb
jl
xor
ss
cli
push
pop
adc
mov
xchg
ficompl
adc
ja
adc
pop
cwtl
jg
cmp
jns
cmp
dec
xor
lret
fst
jecxz
dec
fmuls
std
scas
pop
dec
fnstcw
cli
sarl
pop
pusha
lds
xor
out
add
addl
into
popa
sbb
mov
scas
arpl
xchg
leave
and
pusha
mov
imul
mov
mov
or
inc
lods
jp
push
and
lret
xor
rcr
jle
cli
outsl
into
lock
mov
jecxz
push
lds
or
jbe
mov
and
movsl
ficomps
mov
dec
mov
arpl
dec
jl
out
lds
push
inc
push
test
xchg
clc
xchg
inc
push
jnp
aad
or
push
jbe
stos
sbb
fistpll
mov
xchg
imul
jmp
push
rcrl
mov
shll
mov
leave
pop
jae
ljmp
sub
adc
in
lahf
cli
jp
cmp
pop
mov
mov
mov
dec
in
pop
pusha
shl
repz
scas
xchg
lods
insl
cmp
ds
aaa
nop
mov
loope
popf
jmp
adc
fcomps
testb
pop
pop
pop
lahf
pop
jge
imul
pop
pop
imull
jne
inc
out
cmp
inc
leave
int
dec
inc
addr16
lret
enter
cmpsb
pop
jne
vmaskmovdqu
leave
notl
and
adc
or
adc
jmp
stc
push
jge
xchg
push
push
pop
adc
cld
mov
test
push
cmp
fcomps
mov
and
rcrb
sbb
or
mov
push
dec
sub
xor
push
mov
addr16
into
aaa
pop
mov
ds
shll
adc
adc
outsl
fstl
cs
fdivrl
jle
call
add
stos
aam
js
insl
inc
mov
sbb
loop
addr16
icebp
pop
add
pop
aad
icebp
imul
nop
fnstcw
and
adc
fwait
mov
pop
sub
dec
pop
mov
sbb
addb
cmp
xchg
pop
mov
subb
mov
mov
mov
mov
fldenv
bound
push
xchg
out
mov
nop
dec
in
lret
sbb
pop
pop
push
jo
sub
xchg
mov
pop
pop
cltd
cmp
cltd
sub
cmc
cmpsb
adc
or
xor
push
pop
jns
std
mov
lahf
lock
cmp
ret
cmp
mov
adcl
invd
mov
int
jns
cmc
nop
sub
xor
jb
out
mov
imul
jns
negb
mov
cli
push
aad
popa
mov
leave
out
popf
das
out
inc
or
inc
outsl
lahf
rcll
sbb
dec
push
xchg
push
jge
icebp
pop
cmp
lods
leave
jecxz
cmp
aas
jp
add
lahf
inc
iret
arpl
outsl
adc
add
mov
test
cmp
sbbb
dec
mov
roll
loope
dec
jnp
mov
iret
pop
loop
cmp
pop
scas
sub
push
xchg
and
dec
jl
call
pushf
mov
loop
sbbb
jle
mov
std
or
cmp
ja
mov
subl
lea
pusha
aaa
loop
dec
cmp
lcall
fs
roll
sbb
aas
mov
es
out
test
inc
test
outsl
cld
test
call
lret
pop
lcall
aaa
ret
lcall
cwtl
sbb
sub
add
xor
ja
push
add
mov
and
push
repz
scas
xchg
jae
push
test
ficomps
sub
mov
sub
ror
popf
jle
iret
addb
mov
sar
leave
cmp
push
gs
cmpsl
mov
pop
jecxz
mov
adc
aad
push
enter
jge
add
lret
jae
stos
mov
dec
outsb
rcl
dec
lds
sarl
rorb
push
mov
icebp
mov
je
dec
push
fists
scas
movsb
ljmp
push
loop
fdiv
jmp
int3
and
sbb
jno
nop
sub
push
sub
xchg
addr16
int3
dec
mov
cltd
xor
insl
mov
imull
push
stos
push
stos
fstpt
mov
mov
scas
mov
and
repz
xchg
pop
jle
jle
adc
mov
pop
xchg
and
jb
pop
jb
pop
in
inc
xor
dec
push
je
insb
in
mov
mov
sub
addb
mov
cmp
into
inc
stos
pop
xchg
jle
xchg
test
ja
test
push
cmp
sub
sbb
jnp
xor
jns
sbb
push
inc
loop
lods
lods
into
cmpsl
dec
and
xchg
mov
mov
mov
push
xchg
adc
jo
push
adc
jns
lret
xchg
dec
add
push
mov
shll
jo
loop
not
imul
xor
aad
sbb
push
and
roll
mov
outsb
add
rcrb
lcall
int3
jno
pop
into
push
dec
cmp
xor
jecxz
pop
in
xchg
add
mov
in
mov
test
prefetch
sub
dec
pop
lock
xchg
push
filds
mov
cmp
outsl
call
pop
int3
clc
cld
or
imul
mov
mov
xor
shr
leave
mov
push
popa
and
movsb
dec
outsl
movsl
cld
xor
adc
inc
jnp
cli
sti
imul
adc
scas
and
push
cmp
out
scas
dec
icebp
not
fldcw
xchg
mov
push
push
or
popf
mov
jp
push
in
or
xchg
jns
mov
pop
rep
mov
mov
fisubs
or
push
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
jmp
out
fisubl
push
jne
lret
sti
xchg
bound
add
in
push
jbe
scas
mov
fnstenv
mov
mov
pop
add
arpl
adc
outsb
sbb
dec
mov
mov
in
out
into
mov
fcoms
jno
inc
test
popa
lret
or
hlt
jp
out
loopne
cli
mov
xchg
mov
xchg
and
arpl
pusha
mov
lods
or
out
xchg
les
push
jle
adc
popf
jne
adc
cmc
js
in
stc
rcrl
insb
pop
and
arpl
fwait
mov
adc
xchg
mov
mull
cmp
push
mov
push
ds
mov
movsl
mov
rcrb
sti
mov
mov
shlb
or
xchg
shr
or
fnstenv
pop
mov
push
jg
and
xchg
xchg
dec
insl
roll
frstpm(287
fisttps
xor
stc
iret
rorl
js
sahf
mov
nop
out
insb
cmp
imul
pop
pop
fwait
adc
mov
sub
repz
in
dec
addr16
ret
lahf
das
shl
fstpt
sub
push
lret
dec
mov
sbb
lcall
aad
call
xchg
mov
mov
pop
pop
fwait
ds
mov
xchg
cwtl
test
mov
cmp
adc
flds
dec
in
pop
aad
and
and
hlt
aam
jg
mov
pop
mov
or
enterw
xchg
fs
out
movsl
adc
lret
mov
pop
pop
cmp
addb
fdivrl
xor
or
jns
sub
loop
pop
pop
jb
jmp
lods
lds
jmp
arpl
repnz
mov
and
mov
cmp
shl
out
or
bound
mov
test
imul
lcall
pop
js
dec
sub
das
sahf
inc
test
push
xor
mov
in
sub
clc
scas
push
fbld
mov
sbb
mov
pop
mov
mov
cmpsb
dec
lea
dec
push
out
mov
dec
jle
pusha
lea
xchg
test
xor
xor
xor
gs
and
lret
idivb
push
xchg
xlat
adc
data16
push
ret
ja
popf
out
lret
or
mov
mov
loopne
fistps
pcmpeqw
syscall
jmp
out
inc
scas
sbb
enter
lahf
jb
out
call
icebp
fsubrl
cmpsl
sarb
mov
shrb
shll
adc
je
pusha
jg
or
mov
mov
dec
jle
sbb
and
fdivl
and
test
dec
add
loopne
ljmp
pop
jle
pushf
inc
push
cmp
inc
loop
pop
mov
inc
jmp
leave
adc
test
test
mov
xor
test
in
sbb
xor
or
jne
scas
xorl
movsb
push
jns
imul
pop
enter
pusha
and
cmpl
jp
hlt
xchg
adc
sub
mov
lods
dec
cmpsb
push
jmp
or
push
stos
and
lahf
icebp
add
les
push
imul
mov
sub
inc
sbb
push
inc
js
insb
push
inc
testb
insb
shrl
addb
cmpsl
dec
push
mov
xchg
rolb
inc
stc
adc
pop
mov
cwtl
ret
popa
sbb
sbb
es
arpl
add
outsl
push
push
inc
aad
inc
push
loop
adc
ss
jp
lret
xor
pusha
xor
push
int
aad
cmp
jmp
lcall
or
call
into
jp
pop
dec
out
mov
cmp
pusha
inc
dec
jmp
lea
or
adc
pop
jae
or
xchg
mov
out
sub
stos
mov
loop
dec
es
xor
and
cmp
je
mov
out
mov
inc
out
lahf
cmp
rcrl
stos
rolb
sbb
xor
jg
xor
pop
shl
inc
inc
repnz
lock
ljmp
std
push
pop
push
cli
mov
dec
cmp
jae
in
inc
xchg
inc
ss
imul
push
lcall
sbb
and
jg
jns
mov
call
in
shrl
divb
call
push
inc
lods
movsb
xor
leave
xor
movsb
mov
xchg
lahf
ret
bound
xchg
add
and
std
dec
sub
mov
mov
shlb
iret
aam
loop
push
pop
fwait
fwait
inc
pop
sahf
mov
inc
or
xchg
mov
lods
sbb
cmp
cwtl
lds
pop
pop
andb
shl
leave
dec
lret
add
lcall
pushf
xchg
mov
mov
bound
enter
leave
mov
cltd
icebp
enter
push
push
je
dec
jae
outsl
sbb
test
lahf
out
and
bound
push
adc
je
in
pop
push
pop
decb
fistpl
mov
jne
inc
push
sbb
fnstsw
pop
inc
mov
outsb
pop
jns
cmp
arpl
in
jbe
shl
test
mov
mov
mov
mov
clc
jns
jl
ljmp
mov
push
adc
outsb
mov
adc
nop
aam
dec
mov
lock
aad
inc
inc
or
xor
mov
add
imulb
pop
clc
shlb
insb
pop
lds
rclb
fdivrl
ret
cmp
ja
cmpsb
sti
or
cmp
scas
sbb
or
adc
lret
and
out
pushf
insb
out
push
cmc
std
enter
jno
out
cmpsb
cmp
sbb
pop
and
xor
xor
rcrl
out
ret
lock
lock
movsb
sarl
and
pusha
lods
cli
and
lret
movsb
pop
dec
lds
outsl
fisubl
mov
aad
or
ds
outsl
mov
popf
movsl
mov
xor
jmp
test
dec
mov
ficoms
aas
je
pop
cmp
lods
mov
insl
fimull
mov
inc
or
xor
mov
xor
mov
push
push
push
push
call
push
push
jmp
add
lds
xchg
aad
push
mov
add
cld
xchg
inc
sub
ret
pop
or
sub
clc
push
sub
aam
aaa
push
test
pushf
push
pushf
out
loop
pop
pop
divl
xchg
mov
cmpsb
adc
fwait
and
ja
aas
aaa
xor
fdivrl
cli
pop
push
fisttpll
mov
push
cltd
mov
dec
jecxz
dec
int3
outsb
mov
dec
sbb
insl
push
inc
into
jmp
or
arpl
mov
test
dec
push
mov
es
inc
cs
pop
loope
jns
push
push
movsb
out
push
push
jne
out
insb
jmp
in
movsb
les
jle
push
push
repz
arpl
push
stos
rcrb
and
dec
movsb
loope
push
push
add
and
fistpl
mov
popf
xlat
jecxz
dec
xchg
or
clc
xor
xchg
cs
jbe
jns
loopne
mov
pop
xchg
or
adc
pop
xor
repnz
in
pop
jo
int3
test
pushf
rol
dec
xor
cmpsl
enter
mov
xchg
jno
call
jb
roll
or
pop
mov
in
loope
mov
nop
std
fwait
push
jbe
icebp
cs
scas
cmp
inc
mov
add
mov
sbb
cmp
xor
sbb
cli
vmread
xchg
lret
sub
enter
fstl
enter
js
inc
jbe
test
sbb
dec
jne
inc
aad
scas
out
popa
cmp
je
testl
aaa
dec
daa
aas
andb
out
ret
pop
loope
mov
mov
sti
xor
mov
je
jl
shl
es
stc
lret
adc
mov
lods
stos
jle
pop
add
aad
pop
loope
jecxz
inc
lret
lcall
rcl
pop
mov
sbb
inc
dec
andb
mov
sub
lock
cmp
pop
add
cmp
xchg
aam
cmp
cmp
int
push
das
jo
pop
or
or
lcall
and
ret
and
das
xlat
popa
sub
insb
mov
rcl
int
cmpsb
jp
bound
cmp
fwait
sbb
lea
ljmp
std
popf
add
sbb
and
hlt
mov
inc
cmpsb
mov
cmp
notb
pop
xor
test
xor
test
movsb
jno
push
mov
jp
pop
lock
adc
push
add
adc
sub
mov
daa
mov
scas
cmpsl
fs
sbb
pop
clc
or
jo
adc
sub
xchg
adc
icebp
sub
pop
push
cmp
jnp
push
pushf
add
push
hlt
ret
xchg
clc
sbb
jae
mov
lret
lods
jle
imul
sub
jle
fsubs
hlt
in
push
or
add
pop
jecxz
xor
les
mov
mov
rcrb
fwait
in
sub
push
push
nop
mov
loopne
leave
je
jo
dec
add
push
pushf
and
aam
push
out
push
sub
cmp
adc
push
fstpt
lret
negl
xchg
les
pop
jnp
call
sbb
sub
mov
mov
sbb
sub
add
inc
push
mov
push
call
movsb
inc
mov
negb
jg
and
dec
mov
jmp
mov
addr16
xor
testb
xchg
inc
daa
xor
xor
push
xchg
outsb
push
xchg
movl
pop
add
mov
cmp
decb
xlat
jge
dec
enter
or
jge
xchg
sub
test
xor
xchg
mov
mov
cmp
jmp
imulb
lds
shll
in
fildll
fs
dec
pop
call
out
jg
add
xchg
das
gs
pop
cmp
mov
imul
cmpsb
iretw
inc
cld
add
js
cmp
mov
int3
cltd
inc
xor
push
lods
in
outsb
adc
popf
pop
cmpsb
std
pop
fdivp
fnstsw
shlb
push
push
ficomps
cmpb
iret
push
sahf
mov
fsubl
sub
aaa
cmpsl
movl
bound
xor
and
mov
clc
sbb
push
inc
jae
pop
cmpsl
lods
nop
push
sbb
add
xchg
addr16
cld
jb
push
clc
sub
test
iret
xor
mov
and
je
lcall
out
xchg
inc
shlb
cli
or
daa
mov
cs
xchg
push
fildll
cwtl
loopne
cltd
push
mov
sub
push
ficoml
push
pusha
and
nop
or
int3
call
inc
sub
jl
adc
insl
das
jmp
xor
sub
ret
sub
ss
sbb
imul
mov
jne
mov
lods
jle
lahf
call
mov
data16
das
ret
xor
insb
cmp
cmpsb
out
insl
inc
gs
lret
or
imull
imull
lods
jecxz
xor
sbb
mov
sub
ret
out
imul
jns
add
jne
dec
loop
popf
outsl
cmpsl
xchg
dec
xor
shr
mov
aaa
dec
or
std
cld
insl
out
hlt
inc
fnsave
out
xchg
jb
mov
enter
scas
pop
rolb
lret
aad
xor
in
cmp
sub
and
and
imul
adc
ljmp
sub
shrb
dec
xorb
cld
pop
pop
movsb
cwtl
mov
fsub
hlt
push
mov
out
adc
mov
rorl
or
mov
in
sbb
push
mov
cmc
inc
xchg
inc
loopne
out
scas
push
shrl
add
test
mov
mov
xchg
adc
imul
loop
test
push
std
sub
repnz
jmp
ficomps
mov
dec
push
fsubs
cltd
adc
fadd
out
shl
push
ljmp
out
add
add
lods
adc
push
mov
lret
sbb
lods
and
xchg
pop
incl
mov
fwait
mov
sbb
hlt
push
setle
lret
jmp
aad
cmc
int
out
jne
dec
dec
or
rclb
mov
pusha
inc
add
shll
popa
je
xchg
popf
mov
iret
or
ss
movsl
imul
stos
shll
lods
fucom
int
adc
or
xchg
and
iret
push
jl
xchg
cltd
test
clc
mov
mov
xchg
pop
mov
pop
add
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
adc
movl
mov
sub
mov
xorl
mov
addl
movl
orl
jmp
sti
out
out
jo
jo
pop
inc
push
push
mov
js
invd
add
jle
ret
shlb
sub
xchg
lds
das
jle
adc
add
add
aam
stos
aam
cmp
roll
les
jne
and
cmpsl
out
lods
jmp
jnp
cmp
add
adc
mov
xchg
jo,pn
fnstcw
clc
jnp
jmp
add
pop
pop
pop
jns
shrb
xor
add
movsl
scas
jnp
mov
repz
mov
js
add
cmpsl
out
mov
test
cmp
add
cwtl
out
dec
ljmp
push
setl
sub
xor
adcl
xchg
mov
je
ds
mov
dec
int
cmp
pop
out
xchg
test
inc
mov
mov
std
jl
pop
js
adc
inc
inc
in
xlat
int3
inc
sub
mov
sub
imul
mov
in
cld
loopne
stos
mov
lock
imul
jle
push
les
mov
inc
add
dec
jmp
mov
repz
cmpsb
push
push
stc
xchg
or
fmuls
bound
loope
dec
push
stc
popf
push
sub
mov
mov
xchg
std
pusha
push
dec
or
clc
pop
xor
xchg
inc
pushf
movsb
adc
dec
icebp
mov
add
lahf
aad
mov
or
mov
dec
mov
fldenv
fidivl
stos
push
sar
push
fcomi
les
cmc
scas
subb
or
imulb
int3
jmp
daa
dec
movsb
lret
sahf
sbb
push
jg
mov
dec
sarl
bound
lret
hlt
mov
pushf
gs
lds
sbb
mov
mov
jle
sbb
dec
dec
mov
insl
cs
sarl
jne
mov
jle
mov
jbe
pop
or
ja
dec
inc
push
sbb
jns
and
jo
aam
mov
xchg
xor
jge
or
enter
ja
stc
mov
stos
cmpsb
inc
add
in
jb
push
mov
das
xchg
ret
cwtl
sbb
nop
or
out
cmp
mov
sub
cmp
cmpl
cmc
aaa
push
sbb
lods
pop
sub
dec
fdivrl
lods
frstor
push
mov
xlat
ljmp
add
iret
bound
addr16
push
mov
daa
sub
sti
scas
jmp
ret
adc
clc
xorb
mull
inc
or
push
pushf
cmp
or
sub
inc
loop
xchg
negb
mov
faddp
je
dec
mov
int
sub
ret
stos
out
in
stc
and
dec
adc
es
sbb
sahf
rcrl
dec
jg
push
mul
xchg
stos
shlb
shrb
ds
mov
xor
ja
mov
test
shll
fdivs
in
mov
xchg
add
fs
cs
push
fs
xchg
stc
jecxz
je
popf
dec
jle
inc
jge
das
adcl
out
sbb
fadds
cmp
inc
pop
pop
andl
xor
adc
jp
das
das
adc
fldt
pushf
xchg
add
imul
loop
xor
mov
cmp
xor
lret
or
insl
icebp
mov
mov
cmc
mov
jnp
pusha
repnz
adc
aas
sub
test
fwait
jne
test
fwait
xor
scas
sbb
dec
int3
into
outsl
in
scas
js
sub
jle
hlt
mov
inc
mov
mov
add
or
pushf
inc
xor
sub
add
pop
shr
xchg
les
pop
pop
and
adc
lds
fisttpll
aaa
mov
dec
dec
fwait
and
sbb
add
adc
xchg
push
outsl
fdivr
mov
pop
ljmp
insl
jle
ss
lret
in
loopne
mov
dec
cmp
shlb
jns
negb
push
adc
add
das
hlt
in
aas
push
adc
jno
pop
nop
mov
loop
hlt
loop
repnz
xchg
jbe
mov
rol
pop
cmp
leave
mov
mov
iret
rcrb
outsb
add
aam
fsubl
fdivrl
and
xor
mov
shll
inc
sbb
movsb
movsl
movw
mov
or
call
adc
or
jecxz
cmp
lods
add
xchg
int
jbe
sub
loope
pop
sbb
sub
dec
pop
or
pop
push
outsl
dec
jge
or
std
test
push
sub
data16
jae
xchg
lea
je
and
sub
inc
pop
stos
movsb
and
sbb
dec
lock
cmpsl
adcl
clc
inc
outsb
adc
icebp
mov
pop
or
push
pop
mov
mov
test
jno
fisttpl
fisttps
call
add
add
fwait
daa
inc
mov
outsl
out
das
dec
sbb
stos
cltd
xchg
push
sbb
sbb
add
in
pop
cmp
and
xor
xor
dec
nop
push
dec
push
xchg
jge
pop
dec
les
inc
cmp
pop
sub
cmp
mov
repnz
outsb
jmp
andb
stos
cmp
sub
mov
push
insl
cmp
jmp
test
mov
aad
jno
dec
sub
ds
fldt
mov
icebp
mov
xchg
cltd
adc
pop
mov
sub
cmpsb
repz
push
pusha
or
push
dec
mov
testl
xchg
sub
pop
cmp
push
dec
or
das
sub
mov
sub
test
inc
imul
adcl
aas
shrl
sub
inc
orb
adc
ret
loope
jb
pop
in
jmp
sbb
aad
lcall
outsl
mov
push
mov
movb
movb
cmpl
jbe
andl
adc
jmp
pushl
call
movb
movzbl
mov
sub
imul
mov
or
movzbl
push
orl
and
mov
movb
movl
movb
subl
movb
movb
orl
mov
orl
mov
subl
add
adcl
jmp
ret
sub
shlb
mov
xor
mov
dec
out
push
xchg
add
bsf
push
mov
stos
lahf
adc
jnp
sahf
clc
inc
loopne
mov
hlt
jmp
inc
inc
mov
jg
xchg
iret
and
repz
push
xchg
popf
cltd
enter
cli
loopne
mov
inc
out
dec
fs
imul
mov
jb
push
out
mov
xor
in
lret
and
push
pop
pop
lret
lods
or
in
stos
rcll
add
adc
dec
jne
and
mov
mov
mov
and
int
dec
cmp
insb
add
stos
xchg
shrb
pushf
lret
shll
and
mov
ret
imul
add
push
test
sarl
cwtl
dec
xchg
pop
push
in
cmp
arpl
jecxz
mov
loop
insl
test
dec
jbe
in
sbb
fcoml
inc
lods
jnp
loop
adc
cmpsl
stos
jg
sbb
sarl
mov
dec
lods
or
cmp
dec
in
ds
sarl
in
mov
pop
cmp
int3
push
push
jg
adc
push
les
sti
dec
incl
inc
sub
imul
lret
sti
mov
rclb
shlb
lret
jge
pop
pop
jecxz
xor
in
fcmovnb
xor
push
cs
dec
scas
dec
mov
shlb
fpatan
cmp
cmp
ds
stc
pop
adc
inc
test
jg,pn
cltd
mov
pop
int3
and
sbbl
loop
f2xm1
push
sbb
cli
dec
out
shrb
sub
cmp
mov
dec
sbb
cmp
xchg
dec
ret
pop
xchg
loope
mov
inc
add
xchg
mov
dec
xchg
xor
inc
dec
sar
std
sbb
push
dec
and
jge
pop
sbb
loope
mov
or
call
fsubrp
dec
stos
ljmp
imul
in
mov
sub
dec
push
sbb
punpckldq
fidivl
pcmpgtw
adc
mov
push
inc
add
inc
imul
push
push
fcomip
push
mov
xor
out
jl
pop
add
push
fcmovne
cmp
outsl
fiadds
pop
sub
pusha
jge
mov
mov
stos
repz
inc
adc
dec
pop
cld
cltd
incb
je
lret
inc
dec
mov
out
clc
and
scas
jecxz
or
push
push
pop
ja
enter
mov
mov
inc
fists
cs
andl
cli
dec
out
ret
insb
retw
pop
imul
popf
push
imull
leave
or
std
and
shr
enter
xor
xchg
shlb
hlt
lcall
push
in
nop
popa
push
mov
cmc
add
int3
dec
gs
std
xchg
rorb
and
cmp
lods
lret
hlt
pop
mov
jnp
xor
push
lds
jmp
pop
push
xchg
jbe
push
fnstcw
pop
aad
mov
xchg
mov
pop
xchg
dec
and
imul
addl
rclb
mov
out
aam
lods
dec
or
mov
popa
fnsave
cmp
pop
loope
cmp
cwtl
jns
in
xor
stos
dec
mov
dec
imul
test
inc
jb
mov
mov
mov
shlb
adc
clc
sbb
xlat
pop
fwait
mov
cmp
mov
add
jmp
faddl
cmp
js
jge
cmp
insl
jbe
pop
sub
stos
stos
sub
mov
xor
lods
dec
fildl
adc
fiaddl
and
jno
add
mov
sbb
out
adc
adc
jg
push
cli
scas
cli
daa
sub
popf
inc
mov
pop
pop
loopne
add
pop
jmp
jmp
or
dec
fucomi
push
stos
pop
test
mov
scas
mov
mov
pop
icebp
rcll
outsb
lret
lret
jb
testb
fs
sub
lret
clc
mov
psubq
lods
nop
outsb
cli
sbb
or
lret
sbb
in
push
stc
fisubrl
stos
or
or
xchg
push
jecxz
jno
ss
lret
adc
ss
js
call
lahf
jnp
xor
gs
xor
fldl
rcrb
cld
xchg
dec
fwait
movsl
test
cmc
test
pop
mov
into
in
sub
repz
iret
scas
lret
int
call
enter
xchg
push
pushl
div
jns
adc
pushf
cmpsb
in
add
jns
sbb
aas
out
scas
mov
pusha
xor
mov
jl
mov
rol
or
or
dec
daa
test
or
lahf
aas
in
jbe
pop
lret
mov
mov
lods
faddl
setbe
das
adc
cmpsl
lret
jp
xor
add
dec
mov
jp
cmpsb
scas
cmp
je
daa
hlt
test
cmp
stos
mov
and
insl
add
test
jl
cli
icebp
jae
sbb
or
dec
dec
in
push
pop
dec
daa
cmpsb
loopne
icebp
aaa
pop
cltd
pop
cmp
sti
mov
adc
inc
fisubrl
push
cmp
lahf
rol
mov
xor
nop
sub
iret
cmp
js
xchg
fadds
or
mov
and
sti
xchg
sub
andl
lahf
adc
loop
mov
sub
es
sbb
sub
leave
dec
add
and
adc
imul
cmp
add
movsb
mov
adcl
shlb
lret
mov
ja
stc
push
out
int
push
pop
std
das
stc
cli
adc
pop
cmp
pop
fwait
int3
add
out
aad
fildll
jbe
loopne
add
xor
or
cli
inc
ror
inc
ficomps
movsb
jmp
mov
bnd
inc
push
jmp
add
aaa
inc
inc
add
roll
movsb
pop
add
mov
subl
and
movl
jmp
mov
hlt
add
sbb
and
or
movd
out
roll
adc
sbb
rcr
or
mov
rcr
out
sarl
push
lds
inc
push
orl
xor
pop
test
jge
out
jb
in
and
adc
ljmp
jne
fs
jge
aam
push
xor
xchg
ds
lock
fisubrl
xchg
cs
das
pop
pop
mov
jp
data16
bound
xor
lods
sbbb
ret
ss
adc
out
sbb
cmp
push
cmpsb
mov
push
cwtl
subb
fs
stos
into
pop
jo
rorl
nop
xchg
fiadds
imul
out
xor
push
sub
repz
adc
fisttpl
and
lret
roll
cmpsl
lds
xlat
imul
cltd
xchg
or
int3
fsubrl
push
mov
fdivs
in
shll
out
lcall
sub
inc
fucomip
fldenv
push
or
hlt
pusha
sub
jns
and
adc
movsb
fmull
and
cmc
or
sbb
lea
orl
jae
cld
pop
lods
mov
jmp
rcl
cmp
addr16
cmpsb
out
inc
leave
sub
adc
dec
ljmp
pop
jb
jo
dec
fisttpll
pop
inc
mov
or
pop
jnp
fisttps
les
push
ljmp
inc
mov
add
xlat
xor
sbb
sub
pop
xchg
and
cs
xor
push
or
test
inc
es
jge
pop
cs
lock
jl
js
fwait
pop
mov
sbb
push
es
lods
jo
push
fisubl
daa
aam
and
outsl
stc
pop
xor
xchg
fisttpll
mov
loope
xor
inc
cmp
xor
jb
test
xor
outsl
in
cmp
lods
xchg
mov
jp
int3
dec
push
das
push
dec
lea
stc
in
in
icebp
mov
fisubrl
shrl
sub
xor
mov
add
inc
or
enter
loope
cltd
iret
sbb
push
cltd
pop
repz
add
mov
push
or
test
inc
mov
dec
cmp
xchg
insl
movsl
fisttps
rcll
repz
push
pushf
stos
or
xor
and
add
rorl
inc
aas
call
cmp
scas
test
imul
jb
insl
sbb
xchg
mov
pop
sbb
subb
js
aam
sub
mov
lock
pop
nop
pop
mov
mov
pop
fiaddl
sub
adc
fwait
aas
adc
dec
xor
dec
xchg
mov
sub
iret
iret
lds
push
jmp
xor
push
or
out
jae
cmp
hlt
xchg
pusha
or
jmp
sub
jno
pushf
aaa
arpl
and
outsb
jns
int
aad
ficoms
dec
cmc
pop
mul
add
push
xor
scas
lods
push
mov
push
cmp
cmpsb
leave
and
leave
lds
or
inc
ss
fistl
jb
mov
mov
movsl
pop
xor
gs
push
fidivrs
push
xchg
dec
pop
mov
mov
es
jo
lods
jecxz
loop
aaa
outsb
push
ret
cmp
call
fisubrs
sti
into
sub
bound
xchg
cmp
push
dec
sub
mov
lret
cmc
fwait
movsb
mov
sti
or
cmp
test
jns
sub
cli
dec
decb
push
xchg
pop
jl
mov
clc
xor
dec
imul
movsl
sub
idivl
or
call
mov
shll
sub
xchg
aaa
push
iret
lcall
js
sahf
xchg
lret
fcmovne
pusha
mov
sarl
fsubs
jecxz
cmc
dec
test
mov
sub
cltd
sbb
shl
xchg
arpl
shr
push
mov
adc
push
sahf
xchg
pop
pop
mov
cli
arpl
ja
je
jnp
mov
cltd
arpl
dec
test
call
mov
jne
loopne
sbb
cmp
mov
jle
divl
inc
sbb
stos
sbb
out
inc
pop
push
inc
dec
aas
arpl
cmpl
out
push
jbe
test
lock
loopne
fucomi
xlat
pop
adc
mov
pmovmskb
and
mov
and
es
movsl
incb
in
adc
std
or
nop
lods
je
out
sub
lcall
cmp
xor
fimull
pop
pop
dec
xor
ja
cwtl
mov
xchg
sub
mov
inc
mov
add
xor
scas
xlat
addr16
mov
cmp
or
mov
push
push
int
scas
outsl
jo
in
test
or
pop
lea
sbb
inc
adc
or
pop
daa
cmp
fcomp
xor
mov
pushf
xor
adc
sub
pop
out
inc
push
mov
mov
ret
imul
xchg
gs
sbb
add
or
mov
subb
cli
pop
lods
sarl
es
fdivrs
pop
mov
lea
sbb
xor
jbe
xchg
jnp
mov
dec
mov
and
pop
xchg
stc
sahf
fisubrl
mov
inc
mov
jp
and
ret
repz
lods
mov
mov
lret
jmp
mov
and
sbb
cmp
cli
mov
cmp
cmp
pop
psubsb
jno
lods
or
popa
mov
dec
add
nop
mov
push
test
lcall
aam
and
in
xchg
xor
sbb
pop
lods
cli
sub
mov
mov
cmp
ja
mov
mov
sub
mov
cmpl
jl
andl
mov
and
jmp
push
push
push
call
mov
mov
movzwl
movzwl
shr
addl
or
sub
movl
mov
orl
movb
movb
sbbl
mov
mov
xorl
xor
addl
add
xorl
movzbl
movzbl
sub
cltd
mov
adc
mov
jmp
mov
pop
push
and
sub
mov
mov
lahf
ret
invd
add
movzbl
mov
xchg
mov
insb
setp
aas
vmulsd
and
add
xchg
sub
pop
pop
sbb
or
mov
stc
fnstenv
jo
adc
mov
test
jge
lods
xor
subl
inc
lods
insb
inc
ret
std
cmp
or
out
push
mov
xor
and
lahf
ret
adc
in
push
mov
mov
jl
cmp
test
jnp
sub
popa
es
jno
mov
dec
data16
popf
pop
dec
cvtdq2ps
clc
push
mov
in
mov
push
dec
inc
mov
cmp
xchg
sub
adc
adc
mov
adc
les
and
sub
out
insl
adc
xchg
fprem
mov
jl
mov
and
jle
jmp
inc
fisubrl
jnp
rolb
mov
inc
mov
add
or
lods
add
call
sub
xchg
insl
xchg
and
mov
mov
mov
cmp
aas
xchg
mov
jp
fldt
je
insb
jmp
xlat
pop
cmpsl
lods
or
sub
in
ja
stos
pop
sbb
lcall
jmp
adc
fidivl
jo
out
daa
mov
sub
lahf
xchg
sbbl
mov
lahf
fcomps
shlb
jae
fistpl
lcall
shlb
jl
jmp
loopne
clc
mov
repz
rorl
push
xor
pop
sbb
jns
aas
repz
es
adc
push
mov
in
inc
mov
push
push
and
xchg
cld
push
test
rcr
popa
sub
cmp
push
test
push
enter
popa
mov
shl
and
stos
lods
push
dec
movsl
out
pushf
pusha
jne
subl
mov
repnz
xchg
cmp
adc
addb
subl
sahf
out
cmpsb
imul
out
iret
aam
mov
movsl
or
jnp
aaa
or
cmp
stos
or
push
and
sub
lods
pslld
sti
or
int
outsl
and
test
cmpsb
inc
mov
inc
sti
and
repnz
dec
cmpsb
xor
mov
loope
dec
outsb
pop
inc
test
rorb
pmulhw
dec
repnz
pop
jns
mov
aas
pop
test
pop
push
mov
out
jmp
sti
mov
and
lcall
inc
xor
out
mov
gs
dec
mov
pop
dec
out
pop
sub
pop
sub
push
aas
int3
aas
mov
idivb
jns
enter
xchg
mov
dec
or
cs
mov
mov
popf
pop
in
mov
add
adc
push
mov
mov
pop
ret
cmp
nop
inc
stos
push
and
es
cld
je
jo
es
fildl
xchg
push
les
stos
sub
add
mov
jecxz
xor
xchg
and
xchg
fstps
mov
adcl
pop
insb
xor
shlb
je
or
in
int
mov
sub
je
push
mov
push
imul
scas
data16
stc
lods
in
clc
inc
mov
mov
sbb
cmp
loop
rorb
push
mov
test
es
mov
jmp
xchg
dec
jno
add
nop
lcall
mov
pop
sbb
ret
pop
nop
clc
mov
push
xor
pushf
fists
pop
out
lret
loop
rorl
sub
cmp
imul
out
inc
rorl
or
mov
out
std
das
jle
mov
and
fdiv
pop
test
clc
imul
repz
mov
fidivl
bound
push
mov
outsb
sub
push
adc
cmp
fwait
icebp
aaa
out
xchg
pop
xchg
pop
mov
mov
out
ljmp
jbe
cld
mov
mov
push
add
rolb
cmp
push
loop,pn
xor
dec
dec
fimuls
nop
test
movsb
lds
ss
lds
sub
sub
pop
jecxz
and
and
addl
lahf
aaa
inc
cmpsl
dec
arpl
adc
pop
cmp
cmp
xchg
push
xchg
adc
mov
fs
and
notb
sub
push
test
lods
dec
stos
fbld
mov
add
push
mov
incb
mov
loope
imul
movsb
loop
jge
clc
es
std
mov
fimull
lods
pop
rcll
test
xchg
out
and
insb
or
fstps
rcrb
dec
pusha
mov
bound
stc
nop
adc
fstl
sub
orb
and
jg
lds
and
lret
imul
lahf
imul
repnz
jmp
fldenv
xchg
dec
cmc
enter
lret
mov
enter
adc
sbb
xchg
mov
dec
add
mov
mov
sahf
arpl
xor
in
inc
leavew
dec
xchg
mov
push
cmp
pop
dec
inc
jno
sbb
push
aad
pop
ret
dec
adc
loop
mov
lods
mov
xlat
mov
cld
fidivrs
lock
pop
sbb
adc
mov
xchg
scas
or
pop
push
pop
sub
lahf
mov
ljmp
sti
fnstsw
addr16
arpl
pop
mov
mov
or
push
mov
jmp
sbb
push
fisubrl
test
pop
repnz
movsl
inc
outsl
pusha
adc
xchg
push
cmpl
jl
and
jmp
push
call
jmp
sub
push
xchg
jne
jle
ret
cwtl
test
ud1
inc
scas
push
cmp
xchg
jnp
or
xor
mov
stc
add
sub
dec
pop
aas
mov
sub
fs
cmc
cmp
imul
lcall
sbb
testl
stc
or
rcll
mov
jnp
addl
and
aaa
xor
inc
loopne
mov
or
js
test
xor
add
push
mov
mov
imul
jecxz
aad
daa
hlt
cmpsl
and
cmp
xchg
adc
mov
push
xchg
xor
cmpsb
ss
pusha
cmp
shrl
mov
jp
pop
adcl
in
fcmove
push
inc
adc
jl
les
push
mov
lcall
ja
out
filds
dec
mov
ret
mov
pop
xchg
pop
popa
push
dec
mov
jmp
xor
out
icebp
jb
lret
rolb
fnstcw
mov
add
imul
fldcw
sub
shll
enter
lods
mov
mov
xchg
mov
and
inc
xchg
mov
sahf
cltd
lods
and
sbb
add
iret
xor
imul
cmp
mov
mov
scas
nop
dec
in
push
jne
inc
js
fnstcw
mov
scas
into
mov
push
in
and
daa
shll
mov
xchg
loopne
cmp
dec
inc
bound
pushl
outsb
jnp
lock
into
ljmp
outsb
xchg
mov
divl
mov
cmp
test
xor
jno
loopne
jb
jmp
jp
mov
out
cmp
je
inc
cmc
sub
mov
mov
xchg
fisttpll
fistpl
xchg
mov
jno
psrlw
sti
sbb
cmp
jns
adc
push
js
cmc
out
leave
xor
and
lahf
add
mov
mov
mov
and
inc
push
sub
dec
jge
fwait
inc
mov
mov
inc
mov
lret
xlat
adc
mov
popf
push
jl
jbe
adc
js
dec
xchg
out
test
les
cmpsb
add
inc
adc
pop
mov
cli
test
sbb
inc
add
lds
icebp
pop
aas
hlt
mov
in
mov
testl
test
sahf
jno
xchg
xchg
and
rcrl
mov
fcmovnb
mov
mul
and
les
push
es
insb
cmp
fstl
push
not
xor
in
xchg
or
pop
cmp
mov
xchg
sbb
daa
enter
mov
push
gs
mov
xlat
jno
and
jno
pop
daa
movsb
addr16
cmp
stos
xor
jecxz
jns
data16
arpl
xchg
push
or
fcomps
inc
inc
or
leave
jno
scas
cmp
je
cmp
mov
xor
dec
fldcw
inc
push
in
stc
jne
adc
jo
addr16
imul
cmc
sbb
mov
mov
dec
inc
cs
imul
stos
jle
inc
pop
inc
pusha
ret
ljmp
fs
popa
adcb
addr16
sub
jae
les
xchg
jp
loopne
jmp
leave
jge
mov
jb
dec
cmc
sbb
pop
jno
ja
stos
inc
aas
pop
add
fcomi
jae
loopne
ja
cs
seta
filds
ljmp
xchg
xor
lods
and
bound
ds
mov
inc
xchg
lods
xor
int3
jmp
xchg
and
mov
mov
mov
pop
lock
jns
rorl
aaa
sbb
dec
pop
fwait
cmp
sahf
in
sbb
clc
lea
stos
jecxz
enter
inc
pop
and
jecxz
gs
nop
addr16
or
fwait
sub
inc
fsubl
dec
sbb
out
je
mov
mov
mov
fs
mov
hlt
adc
push
jle
fadds
popa
xchg
cli
imul
cmpb
repz
lret
jb
fidivs
subl
pop
in
flds
adc
into
add
aam
dec
sbb
lods
dec
pop
add
hlt
in
sub
push
iret
icebp
insl
les
shrl
or
int
mov
jae
dec
mov
out
push
adc
adc
dec
and
dec
push
add
xchg
dec
insl
aam
aaa
fsubrp
mov
daa
xchg
jmp
mov
mov
lcall
out
pop
jecxz
add
push
pop
imul
in
xchg
adc
movb
test
ljmp
inc
outsb
pop
rolb
lcall
loope
adc
jecxz
sbb
test
roll
les
loope
cs
mov
inc
outsl
and
mov
ja
sbb
xchg
cli
pop
scas
in
push
mov
call
cmp
inc
lcall
jno,pn
test
test
add
inc
mov
subb
mov
jmp
push
fmulp
add
mov
jo
pop
loop
nop
xchg
out
inc
jle
into
shl
insl
or
sarb
in
and
pop
in
int3
mul
sbb
in
rcrb
mov
lock
inc
jbe
xor
jb
in
in
pusha
call
push
sub
punpckhwd
xor
mov
cld
pop
xchg
andb
lcall
loop
adc
mov
ljmp
sbb
push
inc
sub
in
add
adc
cmpsw
cmp
sti
cld
inc
outsl
ja
xchg
pop
idiv
jmp
mov
xchg
mov
data16
popf
invd
add
cmove
shll
jno
jno
aaa
gs
icebp
sub
mov
mov
orb
lea
jb
in
cmp
pop
std
loop
or
mov
ja
loopne
loope
fs
sbb
and
lahf
stos
or
push
inc
cli
adc
sub
push
sbb
scas
addl
inc
or
sbb
iret
xchg
in
mov
push
jle
mov
mov
cmc
mov
cmpsl
mov
jecxz
xor
adcl
sub
mov
and
insl
jo
mov
fadd
test
adc
add
jno
push
and
mov
pop
iret
cwtl
jl
push
insl
and
mov
and
jmp
dec
or
ret
lret
adc
jl
jge
clc
aad
hlt
pop
jo
mov
jp
and
stos
bound
xchg
xchg
and
incb
push
mov
enter
arpl
xchg
notb
fldenv
cmpsl
hlt
mov
out
out
dec
stos
xchg
add
mov
mov
push
jl
mov
lahf
enter
cmpsl
pushf
enter
lea
add
sbb
aad
push
push
sbb
shlb
or
mov
push
sub
mov
adc
add
shrd
negb
xor
js
xor
push
add
cmp
pop
fnstcw
fiaddl
sbb
xchg
mov
dec
enter
outsl
imul
and
cltd
test
js
mov
mov
fcoms
or
fs
out
out
daa
xchg
bound
leave
cltd
inc
mov
inc
mov
and
and
xchg
cli
adc
push
sbb
das
cmpsb
push
insl
push
or
shl
cmc
jge
dec
cmp
sub
cmp
int
inc
cmp
cli
inc
jle
push
or
repz
adc
leave
push
mov
fmuls
lock
lea
inc
add
iret
push
mov
inc
jb
cmp
inc
sbb
fwait
add
xchg
cmp
test
adc
cli
rorl
fistpl
xchg
adc
jb
push
jp
mov
aaa
push
es
int3
inc
push
enter
jl
sub
push
xchg
inc
xchg
xor
rorb
sbb
xor
outsb
insl
enter
in
inc
fcompl
cmp
shl
insl
sar
or
pop
adc
imul
push
jg
dec
sti
imul
outsb
in
add
inc
jbe
jmp
hlt
in
push
push
xchg
cld
pop
or
push
mov
mov
xchg
mov
xor
adc
enter
sub
and
jb
mov
es
bound
and
stc
or
mov
lret
xor
pusha
outsl
sub
cmp
rcll
les
jae
fistpll
push
addr16
lcall
xchg
fst
sub
leave
popf
ret
mov
mov
cld
shlb
rol
mov
sarl
ficoms
sbb
cltd
imul
movsl
cwtl
into
sub
xor
xchg
push
insl
xlat
mov
cld
dec
mov
rolb
lods
stos
jle
mov
lret
adc
pop
fstpt
sub
xchg
dec
loop
pop
inc
inc
je
push
cmpsb
xor
jecxz
enter
lock
push
sub
jb
stos
cltd
or
or
int
jo
sbb
inc
or
add
aaa
mov
dec
dec
pop
stc
pop
and
mov
cwtl
push
filds
adc
int
mov
sbb
xchg
jle
adc
mov
lret
shrb
jle
xchg
sar
mov
mov
arpl
rclb
or
cmp
pushf
cmp
insl
lcall
jge
out
aam
pop
fdivl
mov
push
cmpsl
inc
inc
xor
js
rorl
loope
bnd
pushf
add
leave
lock
or
ss
call
pop
xor
add
jne
xchg
movsl
or
or
sub
bsf
shl
enter
sub
pusha
push
dec
sbb
add
rcrb
or
jne
scas
sbb
cmp
outsl
lods
mov
xchg
adc
data16
mov
out
mov
xchg
pop
xchg
call
xchg
shlb
inc
push
mov
movsb
and
xchg
inc
fldl
or
sub
cltd
xor
inc
xor
stc
out
mov
ss
cmp
mov
mov
loopne
movsb
cmpsb
and
mov
xchg
test
jns
xchg
shll
add
imul
les
jnp
insl
jne
int
pop
add
pop
fmull
dec
or
pop
les
jle
mov
lods
adc
add
inc
or
dec
outsl
and
hlt
or
jb
movsl
mov
fisttpl
loop
jp
int
add
push
scas
add
scas
cs
add
sub
icebp
push
pop
ljmp
sbb
aas
pop
xchg
into
add
adc
addr16
cli
inc
and
sahf
pop
jmp
enter
xor
ret
cld
cmp
cwtl
mov
lock
jmp
mov
xchg
jge
jmp
jmp
add
jb
cld
mov
inc
lret
or
test
lods
sbb
std
jmp
push
xor
push
jae
xchg
mov
insb
int3
jecxz
stos
orl
mov
or
mov
xor
add
jae
cmpsl
jns
cwtl
jb
arpl
jle
andb
in
ret
fcmovu
pop
sub
and
add
sbb
mov
movb
movb
mov
andl
jmp
dec
mov
aaa
es
mov
test
invd
add
nop
pop
push
addl
leave
mov
sti
outsl
xchg
cwtl
mov
adc
pop
dec
clc
xor
adc
aad
rcrb
enter
mov
cmp
daa
pop
out
dec
and
pop
sub
add
lods
movsb
popa
mov
stos
lret
movsb
les
nop
arpl
cmp
sbb
xchg
sub
lds
jle
mov
mov
mov
cmp
popf
cmp
aas
push
lahf
pop
addr16
sbb
pusha
call
out
test
stos
addr16
pop
adc
mov
jmp
test
je
push
mov
fdivp
insl
inc
pandn
push
inc
das
sbb
mov
flds
lea
jbe
push
hlt
fadds
push
dec
inc
fisttpll
mov
sahf
mov
cmpl
and
jmp
mov
inc
js
rep
mov
xor
cmp
cmp
addl
pop
pusha
adc
lcall
fcoms
pop
dec
fisubl
ret
rclb
repnz
notb
sbb
mov
jb
mov
mov
cli
mov
outsb
xor
cmp
rcll
sub
cmp
loopne
pop
aam
add
mov
xchg
xchg
repz
inc
popf
and
lods
pop
xor
push
addr16
lods
mov
clc
das
jb
jnp
jbe
add
imul
test
fmuls
and
addb
loop
call
lcall
or
mov
mov
aad
or
fisubrl
int3
adc
fisubrl
xchg
mov
rcr
xor
or
mov
repz
xchg
js
mov
test
mov
lret
flds
jns
mov
inc
adc
add
lds
add
fdivr
sar
loop,pn
arpl
pop
outsl
dec
and
pushw
mov
xorb
fists
hlt
pop
inc
lret
addr16
xor
testb
jne
push
mov
sub
cmp
out
ss
mov
jns
or
xor
sub
pop
mov
int
pop
sar
sbb
into
dec
sti
xor
push
mov
loopne
icebp
add
xchg
sbb
push
imull
stos
adcl
mov
inc
push
jo
cwtl
std
and
pop
fsubl
aad
add
sarl
mov
bound
dec
sbb
mov
jl
fisubs
mov
and
sbbb
mov
lret
aas
andl
or
popa
in
fmuls
sbb
pop
dec
adc
xchg
push
jns
xchg
aas
sbbl
and
inc
psubusw
adc
xchg
icebp
push
dec
aaa
mov
xchg
adc
mov
data16
sar
push
lret
xor
xchg
push
or
js
pop
sub
scas
insl
or
sahf
scas
lret
xchg
mov
xchg
loop
shlb
mov
leave
js
push
adc
and
xchg
out
loopne
push
pushf
mov
iret
adc
mov
in
stos
aam
adc
enter
cmpsl
jl
out
push
inc
fistl
repz
xchg
cmc
inc
fsubl
mov
lea
aas
cmp
pop
mov
ja
cli
jns
scas
pop
jnp
jae
cmpsl
pusha
or
cs
sbbl
cmp
imul
stc
scas
dec
icebp
jae
inc
pop
enter
sub
sbb
mov
mov
adc
cli
add
inc
gs
xor
jae
pop
lcall
lods
jl
or
les
lds
xor
mov
xchg
jns
adcb
mov
iret
or
outsl
inc
js
ds
xchg
out
jb
lds
cmp
lods
mov
and
mov
mov
xchg
xor
dec
push
dec
enter
mov
andl
mull
add
or
xchg
mov
push
imul
dec
cld
jle
or
and
pop
add
xor
loope
mov
pop
and
out
stc
imul
rcrl
test
adc
or
adc
or
cmp
repnz
gs
sub
sbb
mov
inc
hlt
pop
mov
int
imul
iret
ret
xor
cmp
jb
push
repz
rcrl
xchg
mov
cmp
mov
mov
and
int
xor
negl
aad
test
mov
jb
int
inc
das
ljmp
inc
cli
xchg
xor
mov
and
loope
rcrl
dec
push
negb
sub
in
cmpsb
out
jbe
cmp
sbb
mov
sbb
les
mov
mov
dec
in
and
mov
idiv
xchg
jg
fistl
shlb
cmp
adc
rol
push
orb
insl
ror
adc
outsl
or
xor
in
lock
dec
jl
dec
mov
push
mov
clc
mov
pop
cmp
jecxz
jb
xchg
cmpsb
cmp
or
repz
pextrw
adc
inc
cmc
aaa
loope
mov
pop
adc
enter
push
je
inc
scas
outsb
mov
out
adc
sbb
jmp
sbb
int3
xor
mov
adc
cmp
lret
stos
sub
hlt
jmp
aad
cmc
dec
jg
ds
and
gs
iret
movsl
mov
mov
ds
mov
sub
sahf
mov
int3
or
dec
jne
stos
cs
dec
addr16
xor
ret
inc
lods
in
mov
dec
icebp
orl
add
movzbl
movzbl
orl
jmp
insb
lods
push
repz
je
xor
or
es
mov
or
mov
xor
adc
loopne
out
mov
xlat
fstpt
cs
ja
jbe
fs
sti
or
xchg
adc
ret
mov
inc
rcrl
pop
movsb
lret
adc
fnstcw
inc
js
gs
loope
nop
nop
xchg
andb
popf
push
push
add
push
mov
loopne
frstor
out
sub
packuswb
jb
mov
dec
inc
out
lret
fstpt
xor
dec
dec
cmp
jne
mov
mov
arpl
mov
sub
sub
xchg
imul
jno
ror
pop
inc
aam
xor
sub
into
jecxz
repnz
lret
jb
das
and
cmp
inc
xor
mov
mov
adc
and
leave
adc
in
inc
adc
xor
dec
dec
in
mov
idivl
and
fs
mov
mov
cmp
adc
add
push
xor
cmpsl
and
loope
or
rcrb
xorb
jmp
aad
sbb
lret
ret
pusha
loop
add
pushf
add
dec
add
jecxz
mov
shr
arpl
fucomip
mov
mov
loopne
mov
sahf
mov
ds
in
inc
out
cmp
ficoms
leave
inc
fbstp
arpl
ss
xorl
int
mov
inc
pop
out
mov
imul
bound
fiadds
subl
insb
ret
lret
xor
add
jo
gs
xor
xchg
xchg
cmp
dec
adc
and
push
or
jb
rcrl
add
popl
aad
cmp
mov
xor
ljmp
or
mov
inc
and
pop
scas
sbb
std
mov
jecxz
xchg
imul
insb
mov
mov
inc
jno
mov
push
xchg
js
add
call
mov
and
mov
sub
ret
ficompl
push
pop
jl
cmpsb
or
inc
nop
xlat
rorl
inc
repz
imul
gs
pop
jmp
jmp
das
mov
sub
sub
add
aad
movsb
jne
std
sarb
in
pop
aad
xor
mov
cli
cmpb
ficoms
cltd
out
pop
inc
push
mov
rcrl
sub
dec
int3
mov
inc
rclb
cmp
push
add
mov
les
scas
xchg
cmc
jb
xor
dec
and
lods
aad
sub
fldenv
jle
shr
mov
stc
test
mov
mov
mov
iret
dec
sub
push
icebp
scas
add
out
cltd
test
xchg
jge
shll
mov
jp
sbb
or
cmp
cmp
fsubrl
in
pushf
push
and
arpl
push
cmpb
ret
push
jmp
subb
xchg
cltd
fs
fistps
push
adc
pop
adc
xchg
cmp
dec
lahf
dec
ret
mov
lds
sub
pop
pop
sub
loopne
lock
push
iret
fldl
dec
push
mov
push
enter
mov
push
inc
xor
loope
mov
dec
sarl
mov
shrb
fnstsw
mov
mov
ficoms
repz
rclb
stos
popa
fdivl
insl
dec
cmpsl
add
lea
cmp
in
add
mov
icebp
sub
or
inc
add
push
push
imul
data16
and
xchg
xchg
push
xchg
inc
leave
sub
push
mov
mov
loope
rolb
and
mov
or
pop
mov
fidivs
cs
push
aam
rorb
cmp
shlb
mov
cmp
sbb
dec
aam
sbbb
mov
aaa
mov
fdivrl
and
ljmp
ds
sbb
or
sahf
add
mov
iret
adc
shl
cmpsb
push
or
dec
xlat
imul
dec
testl
js
dec
movsl
mov
filds
sti
jge
cwtl
icebp
pop
aas
push
fldl
adc
clc
sbb
test
aaa
inc
test
or
mov
or
lret
cmp
or
push
ja
popa
sbbl
add
sbb
mov
inc
js
sarl
or
push
stos
cltd
dec
sbb
push
sbb
cltd
fadds
movsl
ja
jae
add
int
and
sub
mov
js
pop
push
sub
jae
xchg
test
pop
pop
mov
pop
xor
xchg
sub
pop
mov
jae
xchg
ret
int3
sbb
pop
cld
mov
push
jge
popa
sub
jmp
call
jnp
inc
fs
das
icebp
adc
adcl
mov
dec
cmp
adc
xor
and
add
movsl
inc
mov
pop
mov
xchg
mov
pop
push
nop
out
adc
pop
add
adc
std
lds
cmp
pop
lret
int3
mov
or
loopne
dec
rorl
inc
jbe
mov
enter
pop
xor
aas
jp
jb
je
xchg
adc
in
aaa
je
dec
mov
stc
push
not
cmpsb
test
xor
jnp
lcall
lret
inc
cld
mov
iret
dec
lret
xchg
arpl
mov
mov
jle
fildl
lock
xor
pop
lret
insl
jb
sbb
popa
lea
add
adc
stc
xchg
pop
int
jle
rcr
test
pop
mov
in
xor
movsb
push
pop
xlat
pop
xchg
insl
lcall
dec
mov
inc
leave
xchg
sub
orb
xchg
sbb
cmp
dec
int3
int
push
aaa
int3
arpl
xchg
or
sub
sbb
inc
pop
push
adc
xor
inc
adc
add
stc
movl
mov
movl
cmp
movl
jmp
fidivl
push
or
fmuls
outsb
fs
test
invd
add
je
cmpsl
rcll
enter
jg
fs
xchg
adc
dec
mov
shrl
dec
cmp
push
mov
in
push
cmpsl
adc
pop
cmp
mov
or
sub
adc
mov
cld
cmpb
sbb
scas
gs
adc
inc
and
outsl
sub
jne
pushf
jo
arpl
xchg
fstl
cmp
mov
push
ds
xor
cld
adc
fistpl
lds
dec
std
mov
clc
pusha
subl
mov
adc
divl
adc
rclb
sub
mov
cli
sub
shrl
inc
push
lods
xchg
sub
xor
into
mov
outsl
adc
std
in
nop
lahf
test
sbb
dec
dec
test
insb
mov
sbb
fmuls
cmc
mov
test
xchg
lret
stos
in
aaa
xchg
ss
fs
mov
or
and
inc
mov
mov
xchg
jmp
dec
mov
cmpsb
jg
mov
add
fisubs
out
in
dec
jns
enter
icebp
lcall
sti
add
bswap
js
mov
cmpsl
push
sahf
mov
lret
dec
xchg
inc
hlt
movsl
mov
push
out
arpl
xor
or
xlat
mov
mov
pop
clc
dec
ljmp
pop
call
add
repz
pop
xchg
in
jne
mov
pusha
mov
or
pop
and
rcrl
sbb
and
jmp
hlt
jp
push
loopne
pop
pop
bound
loop
jp
in
or
scas
xchg
jmp
inc
mov
cmp
lock
jae
fsts
stos
ror
imul
xchg
and
push
fsubrl
ljmp
jnp
xchg
test
dec
xor
repnz
ljmp
xor
or
sub
mov
jmp
inc
sbb
leave
push
sti
add
push
cs
jl
pushf
inc
dec
addl
repz
sbb
add
pop
test
popa
add
mov
mov
add
cltd
inc
xchg
jbe
adc
push
shrb
adc
push
sbbl
in
mov
inc
dec
inc
filds
pop
shll
and
gs
xchg
dec
mov
jne
mov
roll
inc
adc
xchg
pop
and
loop
jo
mov
aam
fidivl
in
mov
stos
dec
stos
push
lock
dec
lds
mov
and
stos
xchg
jge
and
imul
xor
xchg
xor
adc
xor
ret
stc
pop
test
fists
shrl
cli
inc
dec
lea
cmc
test
bound
lods
mov
scas
jae
outsb
cwtl
fdivs
xchg
sub
mov
push
xor
lahf
xorb
daa
aad
pop
sub
dec
dec
iret
mov
insb
je
adc
mov
mov
lds
in
lahf
inc
out
mov
sub
popf
mov
inc
cmc
sub
dec
and
mov
jno
pop
jge
insl
mov
pop
sub
pusha
mov
xor
cmp
inc
lret
push
pusha
dec
pop
jg
sub
mov
xor
aas
dec
mov
push
jns
inc
sub
mov
nop
push
fwait
loope
mov
pop
push
fsubs
out
or
gs
cs
in
outsb
out
out
cmp
cwtl
add
jno
pop
scas
aas
out
testl
mov
inc
pushf
push
pusha
sahf
xor
les
call
pop
mov
xchg
mov
and
mov
adc
add
pop
xor
jne
sbb
pushw
jb
pop
mov
icebp
mov
das
add
out
push
push
stos
daa
sbb
and
std
inc
or
mov
mov
insb
fdivrl
cmp
lea
sbb
ja
frstor
add
push
into
icebp
cltd
or
test
testl
cs
fldcw
mul
mov
jb
sbb
inc
inc
xor
lcall
xchg
aas
dec
rclb
fwait
jl
xlat
inc
pusha
xchg
xchg
adc
in
add
movsl
ja
mov
jle
das
je
dec
aas
ja
fscale
iret
cmp
popf
push
or
in
stc
jnp
xchg
xor
outsw
aad
icebp
scas
das
lret
sub
in
ds
mov
test
and
cmp
pop
scas
xor
cmp
pop
inc
mov
and
adc
lret
cmpb
sbbb
aas
cmc
insb
fsub
dec
inc
adc
pop
cltd
inc
inc
xor
ret
dec
add
mov
les
xchg
leave
dec
push
push
ret
jnp
adc
negb
mov
test
lahf
jb
dec
insb
sub
ss
push
adc
push
and
in
xlat
xlat
or
mov
pop
std
mov
xor
outsb
ljmp
pop
int3
pop
mov
dec
or
loop
shl
hlt
les
xchg
dec
test
loope
push
xchg
dec
popa
insb
push
imul
ljmp
popa
scas
push
aam
loope
pop
fwait
mov
xor
cmp
mov
lock
clc
dec
inc
lcall
outsl
adc
out
movsl
negl
call
mulb
loope
pop
cmp
lret
add
cltd
dec
cmp
mov
cmp
add
pop
adc
push
out
into
jecxz
sub
mov
lret
inc
lcall
mov
jle
daa
addb
pop
lret
sbb
daa
or
mov
xchg
out
mov
iret
aaa
mov
pop
insl
push
jb
mov
cmp
add
inc
fmul
jae
xor
movl
cmpl
jb
mov
sbb
jmp
push
call
movl
mov
mov
push
push
adcl
push
push
andl
call
xor
xorl
xor
orl
or
or
movl
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
dec
and
xchg
sub
push
mov
iret
imul
pmaxsw
sbb
imul
dec
loop
outsb
outsl
mov
and
cmp
add
adc
stc
scas
push
sbb
inc
sub
pusha
daa
testb
cmp
mov
int
rol
adc
jo
xchg
push
and
pop
adc
mov
xor
scas
xchg
psrad
out
xor
fimuls
jl
adc
out
ljmp
mov
data16
xchg
cmpsb
dec
add
ja
inc
cmpsl
ficomps
insl
or
ficompl
adc
adc
mov
mov
cmp
repnz
lea
in
jo
out
sub
xchg
inc
xchg
outsl
pop
dec
sbb
dec
ficoms
cmp
pushl
clc
test
pop
mov
lcall
lods
dec
int
mov
gs
sahf
jp,pn
pop
pusha
pop
jno
shl
test
mov
stos
subl
stos
aas
je
cmc
ffree
pop
subps
cmpl
je
repz
out
mov
pop
sbb
lret
cwtl
mov
adc
pop
xor
loopne
cltd
mov
cmp
xor
ds
cmovae
cmpsb
test
jecxz
es
bnd
pop
push
iret
jg
jo
mov
sub
aas
leave
fldcw
or
insb
jl
je
je
out
mov
push
lcall
lea
add
decl
xchg
popf
aaa
ret
rcll
test
or
imul
sub
inc
mov
imul
jbe
or
jge
cs
dec
aaa
fsubrs
rcrb
imul
je
ja
push
cli
mov
and
ror
pop
aam
adc
imul
scas
push
ret
mov
fwait
sub
xchg
adc
mov
pop
cmp
lret
mov
rorb
mov
aam
hlt
test
push
ficomps
mov
mov
insl
jb
shlb
adc
fistl
sub
jl
adc
xlat
lock
cmp
adc
subl
movsl
pop
jne
jmp
push
int3
lahf
fs
fwait
ds
push
inc
loopne
mov
and
inc
in
mov
out
lret
dec
add
push
mov
aaa
mov
jg
hlt
jg
gs
jae
mov
adc
into
pop
xor
xlat
mov
and
mov
xchg
inc
adc
mov
addl
fdivrs
psubsb
fisubs
sbb
scas
cltd
dec
mov
lret
jle
jae
mov
lock
movsl
imul
xor
pop
xchg
adc
xor
ret
or
jg
cli
cmp
cmpsl
out
ljmp
leave
data16
and
mov
rol
mov
rclb
mov
test
shrb
inc
in
out
scas
lret
mov
dec
mov
mov
int
push
inc
data16
xchg
dec
add
add
dec
les
and
popf
gs
jae
inc
daa
out
sbb
sahf
repnz
in
or
sahf
stc
inc
pop
outsl
lcall
or
and
push
rcrl
out
inc
push
mov
js
pop
insb
test
fwait
pop
out
cld
cmp
inc
dec
push
sbb
int3
outsl
dec
pop
arpl
repz
ret
sub
push
je
cltd
int3
repz
roll
shrl
fisubl
pusha
fmuls
xorb
mulb
repnz
ret
mov
clc
test
pusha
les
jp
mov
sub
push
push
sarl
imul
dec
lock
dec
inc
mov
ret
clc
inc
xchg
mov
sub
mov
fcomps
pusha
clc
add
scas
adc
arpl
jg
mov
stos
jb
hlt
and
mov
hlt
pop
xor
data16
dec
jae
pop
call
xchg
fwait
and
gs
pop
dec
xor
pop
bound
lds
fdivrl
fstpl
outsl
xlat
in
ret
sub
cmpl
bound
sub
mov
inc
mov
in
or
stc
add
xchg
sbb
dec
out
adcl
inc
xlat
subb
or
sbb
mov
dec
cmpl
mov
dec
in
leave
lds
aam
add
xchg
shll
mov
lods
xor
pop
sbb
cmpsl
jg
mov
sarb
or
sub
mov
mov
jmp
data16
aam
stos
and
popf
mov
lds
decb
and
pop
lods
xor
pop
mov
fmuls
popa
icebp
iret
dec
inc
xchg
sti
jne
add
or
mov
shrl
testb
pop
data16
mov
and
adc
dec
xor
mov
jle
xor
nop
aas
push
or
pop
popa
lock
loop
jle
pop
int
fsubl
ja
pop
test
out
pop
loop
xor
jne
dec
pusha
mov
testb
push
xor
or
cmp
mov
pop
shrb
sub
cmpl
cli
pop
loop
mov
or
es
and
and
mov
jecxz
ret
cmp
or
mov
inc
jg
andb
mov
xor
xchg
jo
mov
xchg
imul
sbb
shl
mov
jnp
jl
sti
pop
jo
idiv
cmp
mov
pop
nop
push
dec
sbb
adc
ss
cmp
sub
hlt
mov
add
jl
rolb
cmp
ljmp
sbb
push
jg
xchg
dec
sti
inc
and
sbb
sub
pop
mov
cs
cmp
dec
pop
outsl
pop
bound
xchg
pusha
lret
mov
loopne
jne
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
jmp
jb
ffreep
push
aad
push
dec
mov
adc
invd
add
punpckhdq
outsl
scas
sub
fmuls
subl
mov
fwait
adc
mov
jnp
and
jmp
in
xor
ds
fwait
sbb
cltd
mov
pushf
mov
and
mov
or
adcb
and
mov
jle
inc
inc
xor
xorl
inc
call
lock
push
hlt
cltd
int3
cld
inc
add
out
add
ds
cwtl
js
repnz
mov
mov
mov
mov
inc
xchg
les
mov
dec
xchg
repz
sbb
cmp
dec
bnd
imul
scas
cli
mov
push
mov
insb
jno
cmc
sub
mov
pop
cmp
sbb
xchg
cmp
lock
jo
adc
pop
sub
insb
lea
jg
scas
xor
das
enter
aaa
lods
sub
int
xchg
outsb
inc
das
or
push
pop
jne
stos
ret
push
leave
sub
push
fistpll
cmp
aad
int
je
mov
daa
daa
mov
mov
hlt
pop
mov
gs
cmp
sbb
lahf
jle
std
stos
fdivrl
fdiv
ret
imul
add
push
test
int3
jo
adc
mov
cltd
stc
push
loopne
jb
mov
adc
sub
lahf
inc
shl
adc
rcll
addr16
sbb
xchg
outsb
sbb
pushf
adc
cmpl
adc
xor
sub
xchg
lcall
pop
shlb
fbld
lret
mov
jle
mov
cmpsb
xchg
sub
je
jmp
fdivrs
fdecstp
popf
mov
xchg
jle
outsw
mov
cwtl
jp
xor
cld
mov
je
outsb
mov
movsb
ja
jl
sbb
ljmp
icebp
sub
sarb
pop
inc
into
cmp
ds
add
aaa
jb
cmpsl
stos
inc
les
xchg
repz
out
xchg
mov
sbb
add
mov
std
adc
dec
add
xor
and
jl
mov
call
inc
cwtl
sbb
mov
stc
inc
push
insl
pop
scas
hlt
cltd
in
ret
jbe
mov
mov
iret
rcl
fidivl
fsubrl
inc
dec
pop
call
orb
fs
inc
shr
jne
movsl
or
andl
pop
fidivrs
jbe
push
leave
dec
fsub
mov
mov
cltd
test
or
js
xor
push
jno
ja
mov
mov
nop
xchg
dec
in
adc
xchg
adc
push
sti
xor
sub
lret
mov
add
movl
fnstenv
cmp
pop
outsl
cmp
dec
ret
cmp
mov
push
mulb
sbb
cmc
sbb
dec
ss
xrelease
sbb
subb
lret
loop
sub
and
idivb
in
mov
cmp
xchg
fidivrl
lea
cmpsb
dec
test
shlb
in
mov
inc
or
scas
or
inc
movsb
ret
pop
stc
icebp
jno
xchg
es
orb
shl
aam
or
dec
loope
cli
sbb
fs
mov
add
leave
and
xchg
sbb
add
les
cmp
push
out
fabs
fdiv
ret
mulb
adc
out
scas
in
ret
mov
popf
sub
jl
fs
adc
mov
sbb
je
iret
dec
test
jae
cli
adc
push
aas
push
mov
xchg
scas
cltd
push
xor
add
cmp
data16
fwait
imul
out
or
pop
lret
insl
mov
bound
mov
cmp
adc
or
jecxz
mov
dec
inc
xchg
out
fisubrl
or
lods
test
out
mov
mov
imul
es
inc
lret
xor
icebp
lret
dec
push
lods
fucomip
adc
mov
and
push
mov
jge
xor
loope
and
xor
sar
jle
incb
aad
add
lret
je
xchg
sbb
jo
xchg
jae
mov
xor
cmpsb
lea
xchg
shl
scas
hlt
xorb
xchg
movsl
pushf
stos
testb
dec
mov
mov
dec
sub
fmulp
mov
icebp
lret
inc
ds
xor
loop
mov
dec
or
mov
sbb
hlt
lods
push
daa
sbb
sbb
aaa
xor
jno
insl
mov
lret
loope
out
mul
fwait
pop
xor
clc
mov
sub
decl
xchg
pop
inc
xor
stc
into
cld
sub
mov
mov
mov
xchg
lods
sub
pushf
loop
nop
aad
out
mov
ret
daa
repz
mov
aam
mov
fdivp
inc
and
ljmp
xchg
jnp
jg
or
enter
enter
xchg
aam
mov
mov
in
ficomps
jmp
pop
jns
cmp
inc
insl
popf
ret
test
mov
inc
xchg
aam
inc
nop
dec
pop
or
and
mov
adc
and
nop
push
loop
sahf
add
sbb
lcall
shrb
ljmp
in
shl
ret
movsb
insl
and
xchg
xor
lods
fisubrs
cmp
jne
xchg
in
or
std
int3
loopne
fisubrs
rolb
or
or
mov
aas
xchg
arpl
cltd
stos
lds
nop
pop
je
mov
mov
push
aas
js
cmp
jle
add
mov
sub
push
lahf
sti
lods
push
idiv
jmp
pusha
lahf
aas
sti
aas
pop
or
ss
xchg
dec
movsb
js
dec
invd
add
mov
mov
inc
loope
mov
sbb
subl
std
in
or
jne
clc
mov
inc
xor
mov
jae
lea
adc
sbb
jle
aad
mov
sub
mov
stos
sar
dec
xor
rolb
das
cli
push
dec
nop
mov
iret
jbe
jb
push
or
xor
xor
ds
repz
inc
push
pushf
push
movsl
adc
pop
pop
std
add
sbbb
xor
mov
jns
pop
testl
sub
mov
pop
insl
mov
push
inc
psadbw
insl
aam
xor
bound
cwtl
xor
add
mov
icebp
pop
and
test
in
lods
jae
cmp
dec
stos
mov
incb
sub
in
inc
std
bound
mov
or
jbe
push
push
std
pop
fcompl
pop
mov
xchg
shlb
sbb
std
neg
xchg
test
push
popa
rorl
xchg
jns
ret
sbb
adc
fs
fdivl
imul
cld
hlt
iret
hlt
test
scas
insb
loope
nop
pop
fsub
push
dec
mov
scas
adc
pushf
jb
xor
inc
out
push
lds
inc
mov
mov
inc
mov
pop
or
dec
xchg
outsl
mov
movsl
arpl
les
adc
cld
jne
push
mov
stos
cmp
inc
sub
into
mov
push
fadds
dec
mov
mov
adc
daa
fs
inc
jl
mov
or
in
sahf
shl
push
fdivs
sbb
xor
xorl
pop
call
and
inc
xchg
fcmovne
repz
push
in
mov
in
int3
fcompl
aas
shl
and
push
pop
adc
shrb
movsl
jmp
out
push
sub
out
icebp
fs
fs
mov
cltd
rorb
aaa
arpl
movsb
int
mov
sub
push
xchg
jecxz
mov
inc
sbb
mov
jmp
or
dec
or
cmp
push
lahf
adc
fisubl
and
aad
mov
cmp
cmp
ficoml
cmpsl
mov
dec
jno
add
xchg
mov
cltd
pop
insl
sbb
dec
pop
adc
sub
loope
imul
repz
dec
xchg
int3
lods
daa
test
add
aas
dec
and
lahf
cmpsb
cmp
mov
push
test
fcoms
dec
jns
rep
dec
lahf
push
inc
fdivrs
pop
dec
xchg
fisubl
lret
aam
push
loopne
popa
xlat
xchg
enter
pop
add
sub
push
fldl
sub
pop
push
adc
adcl
outsl
dec
sub
xchg
movsb
cmp
pop
inc
adc
negb
mov
icebp
and
cwtl
sbb
xor
les
lcall
nop
out
iret
jecxz
mov
sahf
rorl
test
rolb
and
add
mov
lret
es
out
xchg
scas
clc
cmpsl
fs
shrl
mov
dec
mov
inc
sbb
add
sti
test
mov
inc
push
aaa
and
movsl
addr16
adc
sbb
jmp
jg
and
sub
push
aam
fstpl
add
in
mov
sbb
int
mov
push
orl
pop
leave
aas
push
jae
sub
sbb
subl
mov
cmp
or
in
or
call
xchg
dec
pushf
cwtl
sbb
xchg
fsubl
ds
jg
cmpsl
mov
sub
pop
xor
pop
out
xchg
and
mov
cmp
pop
xor
bound
out
fwait
dec
sbb
lock
out
xchg
push
pop
xchg
pop
not
cmpl
xchg
inc
insl
and
cmp
mov
jo
jae
aas
push
push
dec
add
push
ljmp
mov
stos
add
sbb
jno
sbb
sbbb
gs
mov
mov
rolb
popa
push
jecxz
movsl
add
lcall
push
or
pop
dec
mov
cmp
rcll
or
arpl
sub
sbb
lds
imul
movsb
push
addr16
pop
sub
insb
and
into
add
in
jmp
aam
jge
es
cmpsb
mov
cmp
loop
jp
push
sub
movsl
js
add
or
shl
jo
push
loope
push
mov
insb
aam
cltd
and
je
and
pop
xor
pop
in
jnp
fsubl
stos
sub
dec
sbb
cmpsl
add
lahf
mov
leave
push
push
out
pop
mov
imul
dec
inc
push
cmpl
add
shrb
iret
dec
rol
cmp
sbb
xchg
std
jae
push
push
jns
lea
cmp
nop
test
mov
out
shrl
out
aaa
fs
cli
mov
das
out
pop
scas
push
addr16
shll
orl
sahf
cmp
push
lea
mov
inc
dec
sti
ret
pminub
mov
imul
push
cltd
ja
movsl
shrb
ret
sub
mov
popa
shrb
sbb
leave
test
sbbb
daa
mov
dec
jne
loopne
loope
inc
in
nop
ret
fstl
nop
in
mov
sbb
sbb
jl
arpl
in
lret
and
mov
paddq
fstp
shll
jmp
out
scas
test
data16
sub
stos
sti
testl
push
jnp
inc
sub
adc
push
mov
dec
push
out
mov
cmp
js
hlt
inc
lods
or
xchg
pop
and
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
jmp
xor
xor
or
fcoms
invd
add
femms
mov
jbe
dec
cmp
out
or
and
pusha
sub
adc
push
pusha
cmp
or
pop
out
dec
pop
pop
pop
jns
pop
icebp
add
insb
push
pop
into
test
fwait
les
repz
push
icebp
pop
and
pop
cmp
arpl
pop
jne
aas
push
mov
pop
mov
hlt
pop
mov
fcmovnb
and
mov
push
arpl
xlat
lcall
stc
mov
fisubrs
xor
add
mov
sarb
mov
movsl
mov
js
loope
vmwrite
test
test
in
dec
sub
jno
mov
mov
inc
sti
in
dec
jb
js
sahf
cmpl
push
dec
fbstp
push
loope
pop
xchg
push
inc
push
push
ljmp
pop
fcompl
push
mov
rcrl
jno
cli
adc
jle
addb
scas
xor
in
cmp
push
and
shrb
iret
aad
pop
push
cmp
jns
inc
icebp
pop
int
shrl
mov
xchg
dec
pop
mov
shrl
push
push
adc
dec
push
mov
cli
adc
in
test
mov
je
cs
sbb
jno
cld
xchg
inc
movb
push
rclb
stos
lcall
rcll
negb
popl
adc
dec
loop
or
push
sbbb
jmp
out
gs
call
jae
sahf
pushf
scas
push
xor
sbb
and
int3
rcr
bound
fstpt
outsl
std
ljmp
pop
imul
leave
pop
push
cmp
sbb
sub
adc
sub
mov
test
pusha
pop
lock
add
jne
xor
pusha
xchg
sbb
sahf
negb
roll
fsubrs
mov
or
cwtl
clc
addr16
and
mul
and
les
sub
push
mov
mov
mov
sub
xor
or
xchg
pop
xchg
jge
or
cmp
mov
sub
mov
adc
loope
lret
push
mov
jle
sbb
in
or
sbb
in
pop
call
cwtl
add
cmp
ja
and
les
sti
mov
ret
ss
test
lock
adc
jmp
xor
fnstcw
jb
xor
jnp
inc
lret
cmp
jno
xchg
adc
pushf
outsl
outsl
add
dec
lock
fdivrp
out
push
shll
pop
out
lods
mov
add
pop
sbbl
loop
scas
sbbb
test
scas
cmp
out
xor
xor
jmp
addr16
outsl
mov
js
stc
xchg
in
sbb
cs
je
jns
hlt
push
sub
movsb
inc
pop
push
in
mull
push
jecxz
je
jbe
dec
movsl
hlt
test
pop
pop
and
fadd
scas
xor
add
cmpsb
shrl
in
negb
sub
xchg
loop
jo
mov
ds
dec
mov
add
enter
lcall
dec
sbb
cmp
roll
mov
je
add
push
add
aas
scas
ds
shrb
and
imul
mov
lods
test
ds
sahf
xor
push
mov
outsb
pusha
pop
int3
testb
jmp
push
jg
adcl
fdivp
outsl
call
cmpsb
jecxz
mov
jmp
xchg
push
rcrl
inc
rolb
aad
push
ss
mov
cmp
xchg
shr
in
sbb
movsb
enter
or
dec
test
mov
fstps
in
push
das
jp
das
mov
adc
cli
cli
inc
iret
xor
cmp
adc
mov
sbb
inc
or
cmc
stos
sub
lea
mov
jb
outsl
lock
and
leave
pop
pop
ss
adc
mov
jecxz
inc
arpl
iret
mov
rorl
dec
in
mov
ss
or
sub
xchg
movsb
cmpsl
jge
xlat
adc
lcall
push
pop
fcmovb
loop,pn
outsl
xchg
sub
loopne
mov
sub
xor
xor
lcall
and
mov
icebp
mov
adc
cmp
rcrl
push
cmpsl
push
push
sbb
inc
jne
lds
insb
xchg
sbb
push
fnstenv
push
and
sbb
mov
or
xor
adc
inc
xor
std
addr16
mov
movsb
adc
data16
or
or
jae
call
mov
cmc
test
pop
sbbb
lods
jp
leave
sub
mov
xor
pop
cmp
daa
mov
test
stos
lret
and
in
push
test
ret
stc
dec
inc
sub
popf
ret
xchg
adc
xchg
sahf
mov
push
in
leave
in
lret
inc
or
lock
cmp
clc
mov
pop
sbbb
xor
aas
test
mov
in
icebp
loope
adc
jg
dec
ror
std
mov
adc
bound
scas
jne
lret
loop
mov
lods
sbb
cmpsb
mov
mov
cmp
movl
cmc
out
cmpsb
mov
jl
sarl
lock
jbe
in
and
sub
lds
xor
push
adc
lahf
pushf
inc
outsl
xchg
test
arpl
and
cmpsl
or
cs
adc
insl
mov
mov
je
xor
add
add
imul
jecxz
xchg
xchg
push
xor
sub
movsl
xor
popf
popf
outsb
aas
or
xchg
jnp
insl
xchg
inc
cs
cmp
loop
xchg
outsb
std
ss
in
rol
loope
jmp
push
mov
cli
sbb
fnstenv
dec
push
sub
lock
invd
add
nopl
inc
cmp
add
dec
sub
or
jge
adc
std
pop
nop
loop
or
xchg
sbb
inc
int3
in
in
xchg
jle
mov
addr16
pop
shlb
inc
divb
pop
inc
push
cmp
push
or
std
mov
dec
push
xchg
inc
and
add
fwait
lds
orb
mov
scas
mov
jne
xor
mov
and
inc
mov
out
dec
pop
gs
mov
mov
add
sbb
lcall
jg
shlb
fiaddl
loopne
test
imul
dec
enterw
repnz
sar
ret
push
decl
xorl
aaa
mov
sbb
frstor
lret
cld
sub
add
pop
or
add
mov
es
outsb
sarb
inc
scas
lret
lds
xor
das
xchg
lods
adc
loopne
pop
nop
stc
test
gs
popf
into
adc
sarb
pop
in
incb
mov
xchg
ss
jb
or
dec
sbb
loop
mov
push
pusha
jae
and
xchg
shrl
sub
dec
pop
sub
and
sarl
js
xchg
fstpt
cs
pop
mov
sahf
push
dec
add
and
inc
mov
stos
xor
jb
loope
leave
mov
or
or
adc
into
inc
pusha
daa
adc
adc
mov
xchg
pop
arpl
int
sub
ja
push
add
lret
out
xchg
jbe
sub
mov
dec
sar
imul
scas
push
clc
mov
lods
push
es
jle
mov
stos
cld
pusha
push
sbb
aaa
add
push
cmc
mov
adc
dec
rcll
xchg
es
js
or
xchg
dec
aad
adc
mov
xlat
push
inc
mov
and
fdivr
and
jg
mov
cmc
sbb
xchg
push
rcl
push
xor
mov
dec
adc
xor
pop
cwtl
fwait
dec
rorb
jo
lcall
out
xchg
pop
jl
jl
aas
xchg
push
jb,pn
pushf
inc
fcomip
rolb
sub
imul
cmp
mov
fwait
inc
mov
push
mov
out
or
insb
call
mov
lcall
jmp
cmp
adc
cmpsb
mov
imul
and
je
inc
jp
inc
add
insb
enter
pop
inc
pop
in
push
push
adc
and
add
push
push
sbb
mov
mov
mov
mov
mov
aam
and
iret
das
pop
push
push
and
jbe
xor
push
loope
test
cld
or
mov
addr16
jne
push
hlt
fsubr
push
pop
bound
mov
hlt
aaa
jo
aad
pop
stos
bnd
and
idivl
iret
movsb
lea
sbb
add
mov
in
xchg
add
fadd
shrb
shll
xor
stos
ja
push
jmp
ja
push
les
xchg
mov
mov
fidivs
dec
mov
subl
sbb
or
aad
rcr
adc
sub
mov
mov
cwtl
mov
jbe
enter
loope
cli
sbb
loope
out
add
lock
add
jne
sub
push
and
fldt
push
pop
test
lods
imul
insb
out
inc
jns
xrelease
aas
jne
popf
aaa
dec
cltd
icebp
pop
ret
scas
adc
gs
fcoms
popa
inc
jnp
xor
les
or
repnz
repnz
ja
rclb
mov
xor
data16
adc
mov
add
scas
out
mov
add
rclb
xlat
xchg
lods
imul
lret
rol
bound
enter
fdivp
or
xchg
adc
cmc
scas
xor
or
popf
bound
inc
and
decl
mov
fdivp
sub
cmpsl
ljmp
pop
sub
sub
xchg
das
lret
add
push
popf
pushf
add
mov
push
pop
ret
jle
jp
mov
jb
or
mov
cmp
das
fcoms
fsubl
iret
adc
adc
loop
jmp
mov
add
mov
aaa
mov
ret
push
cmp
push
dec
cmp
sub
push
ret
jbe
dec
pop
and
jmp
jle
ds
jle
rcrl
mov
popf
cli
jecxz
jecxz
jle
lods
movsl
inc
push
adc
push
push
pop
and
test
scas
or
mov
lcall
mov
in
jno
ds
sbb
data16
xchg
or
ficomps
xor
scas
not
push
mov
test
decb
adc
jns
inc
or
inc
cmp
iret
jnp
imul
outsb
and
dec
decl
mov
cmc
jmp
fsubrp
or
push
push
cltd
inc
jp
push
ljmp
adc
sbb
mov
pop
pushf
xchg
mov
cld
das
movsl
xchg
and
lock
stos
movsb
shll
js
sbb
test
cmp
adc
or
push
aam
das
stc
fildll
xor
repz
cmp
add
inc
xchg
repz
mov
pop
outsb
out
shl
mov
jmp
je
pushf
adc
adc
ret
add
out
push
repz
or
in
and
cmpsl
ds
int3
mov
imul
clc
or
lock
xor
sub
xchg
leave
pop
sbb
xchg
add
rcl
mov
xchg
fcmovb
mov
idivl
and
movsl
mov
insb
push
cwtl
faddp
mov
mov
cmc
outsl
mov
xor
mov
add
jno
adc
and
fnstcw
jge
dec
xor
ljmp
mov
and
ss
cmp
or
mov
pop
leave
ret
mov
mov
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
mov
or
mov
mov
cmp
and
jmp
inc
aam
xchg
jecxz
test
inc
lods
je
mull
mov
jecxz
and
ljmp
arpl
push
or
dec
xchg
jle
adc
sbb
scas
rep
ret
and
adc
pop
push
mov
popf
xchg
insb
mov
push
adc
test
mov
push
xchg
push
mov
imul
mov
scas
and
les
add
cwtl
lds
stos
cld
cmp
es
or
movsb
xchg
loop
xchg
inc
test
mov
leave
push
sbb
inc
mov
dec
ret
xadd
in
ja
jae
jne
jl
mov
cld
aam
jae
icebp
frstor
sbb
fwait
adc
test
xor
xchg
mov
mov
xchg
xor
or
mov
sbb
mov
pop
or
clc
or
xchg
fs
ds
out
int
push
lock
lahf
scas
into
into
repz
pop
repnz
or
sub
push
repz
mov
mov
mov
mov
mov
jl
adc
test
sbb
xor
push
ret
aad
xchg
cs
push
fstps
mov
xchg
adc
and
or
fwait
dec
ret
sub
mov
inc
pop
stc
and
lret
and
filds
test
push
adc
mov
fs
push
pop
dec
jnp
jl
mov
mov
test
pop
into
sarb
push
mov
pop
inc
cmp
stc
jno
mov
lcall
push
cli
test
pop
pop
xchg
adc
xor
mov
bound
and
pop
mov
stos
dec
fistpl
movsl
mov
cs
ds
das
jmp
popa
lret
push
inc
push
and
sub
mov
in
sarl
pop
lock
jecxz
fcomp
nop
dec
fcoms
jo
ficompl
out
mov
out
in
fildll
mov
sub
xlat
mov
ss
test
and
xor
push
push
cwtl
pop
pop
push
xchg
inc
push
mov
cld
jmp
ja
movb
or
xchg
pop
std
sbb
pop
lret
cli
xorl
mov
mov
int
adc
orb
jl
fldl
insl
ret
jb
ss
bound
pop
adc
inc
xchg
jp
xchg
dec
fcmove
add
and
push
cmp
mov
dec
rorb
stos
and
mov
filds
out
outsl
jmp
lods
lahf
rol
mov
push
dec
addr16
add
test
pop
inc
pop
and
sbbl
xor
fstpl
lcall
pop
into
das
or
call
dec
inc
sti
jecxz
mov
test
dec
filds
out
rcrl
je
sbb
cmp
jnp
inc
pop
dec
fs
lock
mov
call
imul
adc
bound
ss
pop
cmc
shr
lcall
cmp
dec
and
bnd
imul
arpl
sbb
mov
xchg
sub
push
addl
rorb
rclb
mov
aad
sub
bound
data16
cwtl
movsb
outsb
mov
lds
sbb
outsl
rcrb
aas
in
setnp
enter
jae
adc
cld
rcr
pop
mov
out
mov
addr16
out
or
push
jmp
sbb
out
loopne
cmp
sub
int3
jecxz
xor
lods
sets
aas
mov
xchg
push
xchg
cmp
sbb
mov
xchg
pop
addr16
pop
shr
loop
mov
inc
cmp
xchg
mov
pop
pop
mov
lahf
lds
jne
mov
or
sti
loope
popa
outsb
push
jns
lock
ficompl
jmp
bound
mov
cs
out
cmp
loopne
mov
mov
sbb
les
xchg
mov
mov
data16
loop
outsl
jecxz
icebp
push
sti
decb
not
lods
sub
inc
lret
mov
daa
das
sub
je
negl
movsl
cmp
std
xchg
aaa
mov
js
pusha
jg
repz
or
popa
push
leave
gs
mov
cmp
mov
mov
fcoml
lret
out
inc
cmp
jmp
ret
out
cmp
mov
xor
lcall
mov
inc
xor
cwtl
push
aas
pop
bound
fnstsw
sub
xor
das
cmpsl
jmp
push
push
leave
push
fnstsw
add
cmp
jb
loopne
lret
jp
inc
nop
push
fdivrs
and
push
test
mov
popl
fmulp
mov
adc
mov
mov
jns
call
arpl
or
pop
ljmp
cli
rclb
out
loop
mov
mov
insb
in
mov
mov
pop
test
mov
into
xchg
repnz
fistpll
inc
insb
pop
xor
mov
mov
push
in
insb
jne
repz
gs
pop
and
inc
push
sbb
loope
and
inc
lods
insb
xchg
lods
pop
call
sbb
imul
aam
fnstsw
xlat
mov
xor
leave
cmc
push
or
mov
fbld
addr16
and
lea
dec
push
inc
cmp
and
add
loope
je
push
aas
add
in
insb
push
jbe
lock
dec
fninit
sub
cmc
pmullw
mov
xor
jo
sub
dec
test
push
stos
out
jns
and
push
lret
or
outsl
inc
mov
aaa
jle
sbb
jmp
into
push
fisubrl
je
sbb
pop
in
inc
jo
cli
add
ss
sarl
je
adc
and
add
inc
push
or
leave
mov
imul
clc
xchg
pop
mov
jno
ficoml
inc
cmpsl
adc
mov
inc
fists
gs
xlat
dec
cmpsl
jbe
int3
add
sub
test
mov
push
fcmovnb
pushf
mov
sbb
inc
es
jne
jb
ds
mov
sub
jmp
lcall
stos
into
cli
cltd
mov
sbb
cli
into
aad
gs
std
and
jecxz
xor
jo
jns
push
and
or
xor
cmp
in
push
scas
sbb
js
and
ljmp
cltd
enter
dec
pop
stc
mov
mov
push
push
push
lahf
pop
jmp
jle
cmc
call
pusha
in
mov
sbb
ja
jbe
iret
inc
inc
hlt
mov
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ret
mov
adc
cmpsb
js
in
xchg
clc
sbb
mov
cmovs
fs
inc
sub
inc
cmpsl
movsl
add
sub
mov
insb
xor
mov
mov
inc
sbb
lds
mov
mov
out
push
insl
sbb
cmpsb
ss
lret
scas
mov
popf
das
pop
aaa
jle
ja
lea
and
cmovno
adc
push
mov
int3
repnz
xor
fdivl
lcall
cmpl
outsb
mov
pop
cmpsb
fadd
jae
mov
ljmp
fnstsw
idiv
or
cmpsb
mov
hlt
stos
mov
cld
inc
mov
dec
imul
scas
xchg
das
mov
xor
test
jl
jl
ds
lods
lock
xor
cmpsl
sub
movaps
cmp
mov
shll
and
ljmp
sar
int
dec
jg
mov
imul
xor
pusha
pop
hlt
adc
sub
pop
dec
xchg
dec
sub
mov
lahf
jmp
xlat
lods
out
jno
lret
and
in
xor
jge
je
xchg
fucom
mov
push
mov
lock
push
jle
adc
ds
sar
mov
outsb
sarb
movsb
adc
out
jmp
pop
mov
push
xlat
cs
fbstp
jmp
dec
dec
xchg
movsl
jmp
scas
ljmp
fists
xchg
pusha
shll
jle
pusha
pop
mov
std
addr16
dec
pushf
mov
imul
mov
jecxz
test
and
push
loop
cs
addr16
fistpl
pop
dec
xor
push
cmc
mov
sub
insl
scas
shll
aad
data16
call
rorb
inc
jbe
mov
loop
int3
mov
jecxz
sbb
jns
sub
ljmp
outsl
sub
jmp
mov
xchg
xchg
xchg
push
mov
add
std
lret
call
sub
lods
pop
into
inc
fmull
xchg
nop
int
cmp
mov
fsubl
arpl
pusha
mov
sub
inc
arpl
lods
mov
leave
lea
and
cmc
neg
xlat
dec
scas
imul
inc
outsl
xchg
push
and
sbb
popa
xlat
inc
leave
aad
inc
fidivrl
stos
xor
gs
mov
das
inc
push
sbb
cltd
sbb
je
jp
mov
mov
mov
aas
inc
cmpsb
dec
idivl
fstpt
lret
das
popa
jmp
cmpsb
push
xor
push
jge
jbe
jns
xchg
cmp
pop
push
dec
movsb
movsb
js
lock
pop
aad
test
in
clts
jns
xorl
xchg
mov
mov
cmp
pop
mov
insb
add
paddw
and
test
cmp
movsb
push
xchg
inc
adc
mov
xchg
lea
sbb
jp
pop
pop
cmpsl
cmp
insb
dec
sahf
subb
cmp
sub
cwtl
mov
push
bound
stos
dec
push
pop
int3
fsubs
fcomip
out
outsl
insl
icebp
test
pop
or
hlt
adcl
xchg
jecxz
mov
popa
dec
mov
arpl
fwait
mov
dec
xchg
fildl
mov
sub
xchg
jge
cwtl
lods
sub
xchg
cmpsb
cld
insb
mov
ljmp
cmp
leave
roll
push
std
pop
mov
push
lret
in
xchg
xlat
imul
or
add
lock
push
pop
pop
and
testb
sub
adc
push
testl
push
mov
cmp
fs
pushf
imul
lret
mov
inc
js
dec
scas
inc
mov
jnp
imul
inc
out
xchg
out
push
sub
and
pop
aad
xor
mov
xchg
lea
lods
mov
mov
addb
scas
mov
sbb
xchg
push
fwait
dec
repz
and
jg
out
rcrb
aam
int
add
repnz
cmpsb
xchg
add
dec
out
xor
insl
ja
pop
cmp
mov
dec
scas
mov
add
cmp
scas
in
sarb
cmp
lods
mov
leave
dec
stos
popf
push
daa
push
out
push
sbb
scas
cmp
out
pop
xchg
loopne
and
gs
repz
loopne
fnstsw
pop
jle
ret
inc
mov
gs
inc
mov
dec
and
sbb
arpl
lret
mov
dec
push
mov
xchg
lods
cltd
bound
or
cmpsb
cmp
call
aad
cmp
add
dec
rclb
std
mov
sti
push
cli
fbld
fcoms
mov
push
es
mov
aam
lahf
rol
test
aam
sar
cmp
jne
leave
mov
test
xor
xor
and
repz
mov
sbb
mov
pusha
ds
or
enter
xor
pop
cwtl
cwtl
cmp
pusha
push
es
icebp
inc
scas
cmp
jo
movsl
inc
and
mov
cmp
push
xor
xchg
nop
fmul
loop
cmpsl
test
sahf
dec
lret
inc
ret
push
cld
mull
jle
jl
and
sub
add
icebp
mov
jo
clc
inc
sbb
je
adc
ja
mov
mov
jecxz
push
pop
sbb
js
insb
lret
lretw
lahf
cltd
sub
pop
xor
jl
inc
outsl
into
nop
fisttpll
jb
sub
pop
sbb
xor
xchg
scas
into
dec
cltd
ret
mov
xchg
xor
cld
push
add
cmpsl
popf
inc
xchg
cmpsb
xor
imul
or
pop
xorb
cld
sub
cmp
stc
dec
xor
enter
and
cld
lods
and
rol
test
lds
fidivrs
enter
lea
cmpl
ja
repz
pop
sar
out
push
pusha
sahf
mov
sub
pusha
jl
test
jae
out
clc
cmp
adc
or
push
add
addr16
jl
cmc
lcall
shlb
inc
xchg
mov
fadd
pop
push
nop
pop
push
lret
cmp
ss
fisttpll
fs
in
fs
pop
cltd
mov
fstpt
sbb
adc
dec
fadds
js
loop
idivb
xlat
xor
adcb
ljmp
pushf
in
decl
icebp
gs
jne
rclb
pop
sbb
test
imul
out
dec
adc
inc
into
xor
pop
inc
inc
adc
sub
adc
add
ret
and
insl
lods
pop
add
mov
adc
add
and
sbb
inc
ror
cmp
add
inc
aam
add
add
inc
fsubs
add
int3
mov
mov
add
jmp
pop
sbb
dec
mov
or
xor
movb
mov
jno
fdivrl
mov
sahf
inc
lock
fists
repz
out
shrb
push
pop
xchg
rep
pushf
push
mov
bound
leave
outsb
sarl
inc
xlat
mov
sub
in
cltd
pop
xchg
in
adc
adc
aam
xor
sbb
push
adc
xor
xchg
dec
test
lea
xor
jle
cltd
lods
sbb
and
aam
movsb
or
sarl
mov
movsl
outsl
sub
add
mov
lret
mov
pop
sbb
mov
clc
and
pop
fdivr
push
jg
movsb
sarl
dec
pop
inc
popa
and
or
movsl
dec
push
ror
movsl
loop
pop
jns
int3
push
mov
test
rcrl
mov
cwtl
pop
filds
mov
push
cwtl
out
jb
pop
xchg
mov
daa
sub
push
sub
and
imul
dec
mov
je
xchg
add
rclb
icebp
insb
dec
push
sbb
int
mov
xlat
insl
cmpsb
or
mov
adc
outsl
popa
cmc
or
add
jae
lcall
cltd
in
adc
popf
cwtl
bound
dec
pop
insl
lods
jne
dec
ficomps
add
pop
or
inc
shrb
addr16
mov
pop
cmp
inc
cld
push
jl
lcall
sbb
push
or
jns
notl
mov
out
mov
movsl
mov
rcrl
sarl
cwtl
cmp
jbe
stc
pop
mov
mov
in
int
rcrl
sbbb
sbb
stos
mov
sahf
lret
pop
inc
jns
mov
adc
fisubrs
pop
rcrl
mov
jl
lret
mov
sub
mov
bound
mov
sbb
and
jg
ret
sbb
daa
and
jle
ds
pop
ljmp
out
mov
pop
popa
mov
mov
aad
cwtl
fidivs
dec
lret
iret
loop
fwait
adc
xor
outsl
jecxz
fimull
xchg
loope
sub
cmpb
inc
pop
mov
nop
mov
loope
out
adc
fwait
repz
cmp
push
and
xchg
addr16
adc
inc
sub
sbb
in
mov
cmpsl
hlt
jmp
aas
dec
push
or
inc
repz
dec
pop
hlt
lret
int
dec
mov
jmp
lods
adc
jb
mov
cmp
jecxz
pop
mov
xchg
movsb
dec
xchg
adc
icebp
jl
dec
add
fldl2e
outsb
mov
lock
sub
dec
push
ljmp
and
sub
fwait
adc
mov
inc
mov
xchg
pop
or
sub
cmpsb
rclb
fstl
mov
outsl
and
jle
shl
fisttpl
popf
ss
aam
and
dec
rcll
out
add
fsubs
xor
inc
mov
fiadds
mov
xchg
pop
mov
int3
inc
divb
inc
mov
mov
iret
out
mov
sbb
scas
insl
iret
mov
mov
jmp
push
xor
push
or
cmp
dec
xor
ret
pop
and
fildl
jp
or
sub
roll
sub
ret
cwtl
cmpsl
xchg
xor
adc
sbb
sarb
or
lcall
mov
xchg
sub
insb
sub
push
adc
mov
mov
adc
not
mov
gs
cmp
sarb
loopne
jle
sbb
dec
cmp
out
adc
in
sarb
jns
or
xchg
push
add
mov
push
sbb
inc
dec
lea
fdivl
sbb
test
test
ret
xchg
rcrb
jecxz
jecxz
outsl
mov
xchg
gs
scas
push
push
mov
out
lea
inc
mov
add
cmp
fidivl
lret
inc
cmp
lods
test
scas
ficoms
add
insb
mov
push
cmp
lods
arpl
add
pop
and
hlt
test
scas
xchg
mov
rorl
and
pop
push
inc
and
sti
cmp
stc
out
pop
subl
add
sarl
xor
roll
inc
sub
outsl
xchg
mov
lock
loope
jb
fidivl
mov
in
stos
xor
movl
repz
jmp
mov
push
cmpsb
ret
sub
jle
push
cmp
adc
clc
not
repnz
xor
ja
das
int
fwait
in
cmp
dec
dec
sub
pop
popf
inc
mov
mov
cmp
leave
aaa
jnp
cs
lds
out
mov
mov
push
adc
or
scas
add
aad
test
xchg
mov
dec
mov
mov
imul
and
and
test
xchg
fnstenv
enter
fcompl
movsb
sbb
ret
mov
sub
inc
mov
inc
sahf
cli
arpl
sbb
jge
aaa
and
cld
arpl
loope
dec
mov
out
adc
divb
mov
mov
ret
imul
out
dec
xchg
in
insl
cmp
mov
sub
in
outsl
or
fucomi
sbb
cmp
inc
lock
add
xchg
mov
js
cli
cmp
aas
cmpsl
mov
jbe
mov
lock
aam
push
and
pusha
cmp
call
mov
andb
xor
jle
ss
mov
test
and
lods
or
cld
rolb
add
das
push
mov
roll
rorb
jno
add
mov
pop
sub
out
jg
incl
dec
es
test
sbb
stos
adc
xchg
stos
xchg
or
std
push
roll
mov
lock
outsb
inc
ss
stos
xlat
xchg
js
mov
fadds
xchg
outsb
sub
push
ja
add
mov
ss
add
test
pushf
loopne
inc
or
mov
push
or
and
push
cs
test
or
gs
jne
mov
jne
pop
and
pushf
addl
sub
es
jecxz
fadds
mov
mov
out
lods
aam
pop
sbb
mov
sub
jl
arpl
mov
jp
fnstsw
push
enter
mov
push
push
bound
into
fisttpl
cmp
xchg
pop
sub
mov
adc
repnz
jmp
into
add
or
in
sahf
xchg
sbb
adc
and
xor
and
inc
and
arpl
mov
jo
ljmp
hlt
jae
jl
scas
fldenv
xchg
shl
pop
fwait
jne
adc
push
mov
mov
test
clc
int
lds
push
sub
xchg
xor
pop
lods
std
and
std
mov
add
cmp
mov
cmpsl
and
and
jb
lods
and
lcall
mov
addl
add
mov
sbb
call
mov
in
cmpsl
or
xor
vshufps
xor
out
mov
inc
add
push
pusha
lods
aam
sbb
loope
fwait
dec
jo
push
psrld
insb
ret
cmp
popa
xchg
xor
rorl
lock
jae
and
int3
arpl
sub
lcall
xor
mov
test
testb
pop
out
push
movsb
inc
aad
inc
loop
jnp
mov
lret
popf
mov
and
mov
out
push
or
push
in
sbb
dec
cmp
div
adc
jbe
lock
je
sarl
jp
sbb
push
repnz
repnz
jp
fisubl
jp
pop
dec
xlat
sbb
in
lock
push
xor
adcb
add
iret
daa
sub
roll
inc
std
jbe
jnp
loope
xor
jp
add
ss
hlt
mov
or
mov
imul
sbb
shll
ja
fmuls
stos
lods
push
jmp
add
sub
pusha
ljmp
rcrb
leave
fcmovu
in
push
lret
push
insb
fldt
xor
mov
sahf
fwait
imul
adc
aad
out
xor
scas
mov
sub
nop
lret
loopne
fstpl
shrl
imul
add
mov
cld
jmp
mov
push
mov
in
cmc
sub
dec
and
push
mov
add
ds
arpl
lcall
test
mov
in
insl
mov
and
or
in
mov
ljmp
ds
mov
dec
cmp
data16
nop
movsl
pop
movsl
xor
dec
jge
dec
repz
incl
push
es
adc
xchg
jl
mov
pop
daa
in
loopne
cli
lahf
test
sub
add
test
lahf
das
nop
mov
roll
pop
pop
adc
inc
pushf
add
push
repz
or
push
xlat
lret
dec
fsubl
adc
jecxz
xchg
add
dec
daa
imul
add
and
inc
or
shrb
sub
push
adc
scas
icebp
sub
sarb
in
ret
cmp
sbb
clc
mov
jno
mov
ja
mov
pop
movsb
push
addr16
or
outsl
stos
sub
stos
and
adcl
les
jbe
jp
add
xor
jmp
fwait
mov
out
xchg
mov
cmp
in
cmpsl
jp
test
mov
mov
push
xchg
jle
cmp
push
push
jno
in
fnstcw
dec
jns
scas
mov
lret
cmp
xchg
jno
lock
stc
mov
ljmp
lock
jmp
sbb
les
lret
outsb
sub
jo
and
cmp
xchg
adc
mov
pop
mov
lret
inc
dec
xchg
xchg
inc
in
dec
mov
in
pop
loopne
pop
mov
ret
jp
stos
mov
add
incb
out
lock
or
out
ja
add
outsl
rorb
xchg
jnp
or
sahf
mov
in
mov
sub
pop
mov
icebp
loope
cmc
cmp
push
mov
scas
fisubrs
fwait
mov
lods
es
push
jl
jmp
loope
mov
mov
popf
cmp
mov
dec
cmpsb
adc
fisubrs
push
aaa
not
xor
lret
fcoml
lahf
or
adc
out
loope
inc
mov
dec
sbb
xchg
mov
scas
mov
ds
mov
cltd
es
push
cmpb
xor
jg
test
lret
mov
inc
cltd
pop
sbb
xchg
repz
push
mov
repnz
ds
cs
push
enter
push
pop
js
mov
mov
sbb
test
cwtl
bound
pop
lds
mov
sub
sbb
push
and
mov
jmp
pop
adc
or
jne
inc
push
negb
pop
mov
adc
lea
mov
gs
arpl
or
andl
add
pop
fidivs
aas
or
xchg
inc
repnz
lcall
sarb
push
stc
movsl
inc
xchg
xorl
add
xchg
in
mov
fwait
jecxz
push
ficoms
into
cmpsb
mov
jns
jp
xchg
sahf
jb
insb
xchg
jp
push
inc
inc
dec
dec
adc
jmp
dec
aam
sbbb
and
repz
ret
push
cmp
xor
dec
add
insl
icebp
cmp
lea
loope
sub
into
mov
jb
inc
icebp
insb
push
jbe
into
lcall
cli
nop
rorb
cmc
add
rcll
shlb
cld
push
jp
test
sahf
out
in
lds
cmp
pop
and
mov
sub
sbb
jecxz
shl
jge
outsl
outsl
out
test
imul
outsb
jg
aaa
lret
es
or
idivb
sti
mov
jle
dec
ficomps
push
xor
inc
hlt
cmpsb
je
dec
lahf
mov
loope
fptan
test
loop
xchg
push
push
push
mov
xchg
inc
in
cwtl
ss
adc
js
stc
pop
cmp
jg
push
scas
sub
dec
mov
hlt
cli
and
push
leave
inc
mov
xchg
pop
sub
cmp
pop
pop
mov
push
lea
push
out
inc
outsb
pushf
jno
inc
in
mov
lods
loopne
jne
lock
cmpb
cmp
aaa
subl
push
in
jb
sti
movsb
cwtl
fldt
add
ss
ss
loope
pusha
inc
mov
sub
mov
sub
clc
out
popf
jo
es
and
and
arpl
sbb
ds
cmp
sbb
inc
or
mov
jns
stos
xor
fsubl
cmp
clc
cmpsl
call
lods
xor
push
and
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jmp
pop
cli
pop
sub
or
dec
pop
nop
push
stos
addr16
mov
in
adc
and
pop
insl
mov
cmp
imulb
dec
iret
imul
cmp
mov
mov
sub
inc
je
sub
push
shlb
mov
jp
cmp
outsl
lahf
jg
pusha
jbe
xchg
mov
jmp
iret
call
xchg
ljmp
pushf
scas
mov
dec
popa
sbb
push
addr16
mov
imul
lds
lea
cmp
test
pop
inc
shrb
cmp
inc
push
add
xchg
popa
clc
idivl
rorb
mov
pusha
fwait
jne
sbb
add
xor
adc
dec
jns
sarl
leave
stos
imul
jp
cmp
xchg
lret
add
mov
fmul
jl
adcl
std
aaa
pop
test
rorb
jno
ret
push
xchg
jmp
std
loop
repz
add
pop
push
addr16
hlt
ret
pushf
pop
js
push
pop
pusha
adc
xor
incb
pop
and
adc
add
xor
shll
sub
in
pop
loop
std
and
inc
rcll
jp
movsl
sub
lods
pop
cltd
mov
outsl
inc
sub
loopne
cld
addr16
mov
jg
push
pop
xchg
sbb
mov
mov
add
iret
lea
shlb
popa
rorb
push
dec
lret
loop
xchg
jbe
or
out
addr16
loop
adc
sbb
test
dec
repz
lcall
pop
xor
fiadds
fstps
stos
jecxz
inc
bound
scas
pop
ret
push
iret
xor
subb
rolb
sti
movsl
or
pop
js
addr16
mov
mov
dec
cwtl
or
shlb
test
jge
lcall
mov
mov
push
leave
out
lret
cld
sub
xchg
dec
mov
out
ljmp
imul
push
je
addr16
adc
jmp
stos
test
rcll
mov
imul
adc
loopne
fisubl
stc
std
inc
xchg
loopne
jg
ret
dec
outsb
icebp
mov
nop
jnp
ret
imul
cld
push
mov
pop
fildll
cs
inc
fistpll
lcall
xchg
xchg
mov
pop
add
sbb
fs
jns
add
inc
cmp
out
std
adc
pop
xchg
inc
cmp
pop
fstps
cmc
xchg
cmpb
sub
jle
jnp
adc
ss
pop
ret
sbb
std
fwait
shll
pop
enter
ss
push
dec
jb
leave
lahf
cmp
test
ss
frstor
push
mov
xor
xchg
add
scas
inc
ret
push
les
push
inc
ljmp
jno
outsb
jge
mov
stos
mov
cmc
jmp
xor
aaa
sbb
jg
es
cld
aad
mov
mov
mov
dec
test
in
ret
sub
sub
push
inc
dec
arpl
test
cwtl
fs
mov
sbbb
dec
popl
lret
mov
fsubrs
mov
pop
andb
sub
mov
lret
xor
lret
fidivrl
pusha
lret
cmp
out
cmp
add
pop
and
neg
ja
inc
sub
ret
test
jb
xchg
inc
jecxz
leave
cmp
and
pop
sub
push
sbb
fidivs
dec
pop
enter
xchg
frstor
xor
adc
ss
mov
std
enter
rolb
ffree
adc
xchg
jnp,pn
gs
fmuls
out
and
daa
rcll
inc
lods
sbb
push
outsl
mov
pop
aas
xor
scas
ret
jp
mov
or
push
jmp
negb
stc
cmp
jnp
lock
js
iretw
stc
add
jg
insl
add
roll
jno
sub
filds
dec
iret
dec
xchg
add
and
jecxz
add
push
into
lods
scas
call
xor
mov
mov
jmp
xchg
sbb
stc
popa
mov
add
mov
sub
and
js
in
sbb
xchg
lret
xor
or
stc
nop
cltd
jb
pop
push
adc
pushf
mov
pop
inc
dec
jbe
mov
pushf
mov
arpl
jnp
push
test
out
sub
popf
int
mov
sbb
sub
xchg
es
ljmp
and
or
pushf
lcall
push
xor
bnd
push
push
pop
nop
cmp
imul
imul
in
sbb
mov
mov
jl
inc
rcll
imul
mov
and
xchg
leave
xchg
mulb
adc
adc
sbb
dec
fsubs
gs
test
xchg
push
inc
jo
push
adc
add
push
xchg
stc
or
call
ss
jno
mov
xchg
or
sbb
push
pop
and
cltd
in
mov
mov
sub
mov
and
mulb
pop
xorb
xor
popf
inc
in
cmp
xor
jmp
movsb
fisubl
inc
cs
inc
pop
cmp
out
pop
frstor
sub
xor
lods
adc
sub
jge
scas
dec
test
cs
xchg
mov
cmp
mov
xchg
add
pop
ficoml
ret
dec
mov
fs
ds
adc
cmpsb
cmp
cltd
gs
push
push
dec
lcall
ficomps
mov
mov
gs
inc
mov
test
fucomp
lea
push
xor
aaa
es
inc
inc
adc
mov
negl
mov
lods
scas
cmp
mov
out
xchg
jp
sub
push
out
in
mov
inc
jae
lods
fnsave
es
mov
cmp
add
std
daa
pushf
jg
data16
mov
push
shlb
adc
cmp
outsb
in
roll
rorb
adc
add
clc
pop
hlt
mov
or
and
mov
inc
xor
enter
cld
pop
adc
cmp
push
xchg
dec
aam
cmp
or
imul
aas
xchg
cs
roll
movsb
mov
pop
push
cmc
and
inc
inc
pop
jecxz
jb
mov
add
repnz
pop
jns
lcall
lcall
mov
inc
loopne
pop
loopne
out
xchg
add
scas
pop
mov
xchg
clc
bound
pusha
dec
add
pop
sbb
sbb
lea
rorb
cltd
add
sahf
dec
in
fwait
insl
subl
test
add
mov
add
imul
xor
mov
div
jmp
lret
pop
cmp
adc
sbb
push
xchg
ficoms
mov
setnp
and
add
jmp
pop
lds
stos
cmp
vcomisd
out
sub
and
sbb
jne
bound
mov
jp
cmp
ret
sti
scas
out
popa
add
mov
push
sbb
dec
test
nop
das
shrl
jo
outsb
jp
lock
xchg
inc
out
cltd
jecxz
mov
mov
sbb
inc
scas
push
lahf
jb
cmpsl
sar
fdivl
push
add
or
pop
arpl
push
lret
and
imulb
gs
ror
imul
push
es
sub
cmp
xchg
frstor
icebp
mov
pop
and
jo
shl
cltd
jle
push
and
pop
and
and
mov
movsl
stc
repz
push
movsb
push
xlat
test
push
ds
push
into
mov
push
stos
push
decb
les
insb
push
hlt
pop
fildl
mov
and
fcmovbe
sbb
js
push
cmp
in
out
mov
sub
cmp
int3
das
daa
sub
push
jno
mov
mov
sub
in
mov
rorb
in
insl
mov
sbb
sub
xor
punpckhdq
sub
xchg
clc
add
cmp
pop
pop
icebp
pop
push
lods
jae
ja
push
mov
cmp
and
lods
insb
popa
pop
xlat
repz
pop
pop
insb
icebp
xchg
int
ret
dec
push
subl
add
fs
adc
out
mov
das
sub
jb
push
std
xchg
scas
std
cld
cmp
loopne
adc
popf
pop
sub
insb
adc
mov
lahf
rcrb
inc
mov
jl
and
mov
mov
frstor
inc
and
inc
mov
pop
xchg
imul
addb
or
aam
xor
lret
popf
rol
xchg
pushf
stos
xor
adc
xchg
jae
pop
sub
popf
imul
push
xor
cs
fstl
cmp
pop
inc
ret
int
mov
repnz
push
sahf
scas
inc
mov
mov
xor
int
sub
repz
sub
jmp
xchg
mov
in
call
lret
sbb
adc
mov
jl
xor
jns
test
test
or
cmp
stc
pop
dec
roll
push
in
lret
xor
push
test
out
ss
mov
or
ffree
dec
lods
repnz
shr
push
cwtl
mov
shll
and
cmp
add
scas
lods
and
sbb
xchg
cmp
xchg
mov
xor
or
or
jno
test
and
fistl
push
xor
cmpsl
pop
push
add
lahf
shrb
jp
out
pop
call
sub
mov
cmp
jmp
or
sti
mov
inc
lcall
dec
aaa
inc
cmp
inc
dec
out
dec
pop
mov
ljmp
icebp
lods
push
lds
out
sbb
cmp
push
sahf
les
dec
xchg
das
lods
inc
fs
add
sub
jp
adc
insl
lcall
mov
repz
imul
pusha
outsl
int
gs
push
push
dec
std
xchg
sbb
mov
movsl
addr16
or
decb
push
pop
bswap
in
sti
push
rcll
mov
mov
push
sbb
mov
je
aad
roll
inc
and
daa
sahf
or
popa
xor
mov
add
std
push
in
in
push
jge
adc
scas
jne
pop
add
add
arpl
cltd
mov
dec
test
outsb
int3
xchg
cmp
xchg
int3
mov
or
xchg
sbb
mov
iret
lcall
add
mov
rcll
jno
fistpl
mov
dec
and
cld
pop
xor
mov
adc
inc
or
test
inc
aam
adc
nop
popa
cmp
fs
add
insl
or
lret
movsl
imul
jo
orl
imul
sbb
push
nop
mov
pop
cmp
dec
pop
arpl
lret
ds
cwtl
iret
ret
add
push
and
in
sbb
mov
or
ficoml
lahf
js
roll
lea
stos
add
push
ffreep
dec
das
leave
inc
and
loopne
pop
stos
popa
mov
inc
fdivs
fscale
or
mov
dec
mov
aas
pop
movsb
xchg
cmp
pushf
push
pop
mov
aad
push
xor
repz
mov
inc
xor
dec
inc
movsb
cmc
movsl
mov
fld
out
scas
cmp
sarl
mov
mov
mov
sti
mov
mov
stos
jg
pop
jae
cmp
xor
xchg
imul
psrld
movsl
pushf
fsubl
mov
inc
test
and
adc
iret
mov
into
add
jp
cmc
dec
cmp
pop
jp
ret
add
movsl
jmp
cmpsl
dec
mov
fimull
fs
mov
or
popf
mov
adc
xlat
fnsave
or
cli
sahf
div
xchg
xlat
adc
rolb
mov
cltd
sbb
sbbl
sbb
add
pop
mov
lods
stos
in
iret
and
mov
cmp
push
stos
inc
pusha
or
and
mov
dec
mov
xchg
pop
and
scas
cmpsb
sti
mov
xchg
lret
cmp
call
orb
movsl
xchg
lret
adc
cmp
push
jp
int3
adc
mov
arpl
lds
fisttps
xor
mov
fptan
stos
pushf
out
and
and
inc
cmc
jns
jb
xchg
jecxz
xorl
ret
stos
add
xchg
xchg
jmp
scas
leave
mov
dec
frstor
mov
inc
je
test
aad
mov
push
cmp
lret
leave
jb
adc
std
jge
je
into
sub
xor
add
std
sbb
pop
xor
repz
cmp
inc
sub
subb
mov
sbb
enter
hlt
aam
pop
cmp
lock
mov
les
out
xor
imul
out
sbb
push
mov
mov
pop
sub
loopne
outsb
mov
fwait
mov
mov
stos
in
loop
xchg
clc
test
push
lock
dec
mov
out
lret
lret
in
popa
push
icebp
fwait
out
mov
sub
pop
add
iret
in
lret
add
fwait
shl
ret
int3
mov
xor
mul
aam
sub
ffreep
and
add
mov
cmp
mov
jg
push
jne
faddl
into
mov
or
jmp
cmc
xchg
cmp
push
mov
adc
scas
in
movb
mov
jl
pop
in
jnp
mov
shl
adc
dec
movsl
popa
gs
mov
jae
push
cs
in
push
lock
std
mov
cmp
popa
jl
inc
jle
pop
push
into
xchg
push
out
leave
testb
inc
les
pop
mov
data16
mov
and
das
mov
fxch
xor
icebp
scas
dec
stos
mov
loop
cmc
mov
add
imul
subl
fstpl
stos
shr
push
popf
mov
dec
pop
cmp
scas
icebp
dec
repz
cmp
lahf
pusha
pop
jbe
pop
sbb
xor
enter
sti
push
and
add
pop
mov
ljmp
lret
jnp
mov
sarb
sbb
fnstcw
in
imul
mov
and
dec
pop
out
daa
inc
xchg
adc
lret
cwtl
ds
icebp
fdivrs
sub
xchg
lods
outsb
lahf
movsb
sbb
xorl
pop
fldenv
mov
pushf
or
fadds
out
dec
xchg
test
cltd
pushf
aas
loope
mov
add
ret
jo
or
push
xchg
insl
jl
pop
xchg
mov
pop
push
mov
sub
cmpsl
mov
daa
inc
fwait
inc
int3
mov
xor
jae
sub
movl
xchg
sbb
cmp
movsb
sub
jl
mov
mov
inc
sti
sub
lods
push
dec
jno
xchg
shlb
inc
xchg
or
aad
add
cmp
adc
push
lahf
out
jae
out
stos
sbb
cltd
aad
push
jno
addr16
mov
add
sbb
dec
in
or
adc
push
out
add
outsb
int
mov
je
cmp
scas
stc
add
into
jl
xor
push
test
test
lods
cs
sarb
sub
cmovle
imul
loop
ss
test
mov
inc
inc
xlat
cli
jns
mov
mov
inc
fildll
mov
pop
nop
pusha
mov
insb
push
fldenv
aad
lcall
decl
mov
mov
into
mov
cli
add
xchg
popf
xchg
push
xor
mov
sbb
dec
pop
test
lcall
sub
aas
cmp
mov
cs
jp
fwait
lds
shrb
sub
jmp
addr16
mov
xchg
sub
shll
add
aam
sub
xor
inc
xor
ljmp
mov
int
aas
cmp
cmp
int3
adc
int
mov
lods
nop
cmc
sbb
xlat
dec
xchg
fdivr
rolb
sub
sti
pop
fnsave
push
push
fstl
cmpsl
pop
movsl
push
cltd
not
rcll
pop
fcoms
sub
pop
xchg
adc
lahf
in
inc
dec
adc
ret
jl
test
add
add
jno
js
vpshab
faddl
jg
insl
nop
cli
mov
icebp
stos
push
jb
cmp
stos
mov
jo
push
mov
mov
ds
sti
jecxz
nop
dec
loopne
xor
and
std
mov
pop
jg
sti
add
addl
xor
add
aaa
aaa
cmp
xor
xchg
mov
andl
jne
mov
or
sub
inc
push
lock
ret
push
int3
sahf
mov
mov
in
jno
mov
jge
xor
imul
das
cmpsl
jmp
rorl
xor
stc
popf
insl
ret
sub
dec
adc
cld
jmp
pushl
andl
stos
or
lahf
es
je
int3
int
pop
cmpsl
iret
loope
pop
sbb
mov
shlb
mov
add
les
in
test
pop
dec
mov
gs
add
mov
aas
mov
or
or
imul
jbe
leave
add
dec
repz
ja
fldl
pop
les
sti
leave
fimuls
pop
jp
dec
mov
mov
push
sbb
and
outsb
sub
movsl
xor
pop
aaa
aad
aam
fmuls
lcall
push
ret
mov
pop
fstpl
lret
xchg
pop
mov
imul
mov
setnp
ljmp
enter
jno
lret
push
imul
jmp
mov
xor
jne
ret
push
cmp
mov
inc
jb
orl
out
push
pop
mov
inc
rclb
shlb
push
loope
pop
scas
je
icebp
jmp
sub
mov
dec
mov
sbb
xchg
mov
pop
sub
adc
and
je
dec
jle
lcall
out
mov
pop
and
bound
pushf
dec
push
repnz
fbstp
into
cli
clc
adc
mov
in
push
push
pop
sbb
sahf
or
or
push
xor
mov
popa
test
inc
movb
dec
or
or
nop
sub
dec
mov
dec
cmpsb
mov
mov
xchg
cmp
mov
lock
out
cmp
xchg
scas
dec
lret
xchg
scas
inc
addl
pop
sub
test
dec
and
or
aam
push
aad
sub
dec
push
mov
push
pop
dec
mov
lock
out
mov
xchg
adc
repnz
lea
in
and
sbb
jge
rep
int
mov
adc
test
fld
pop
inc
imul
icebp
xchg
push
or
and
into
mov
shl
arpl
xchg
mov
jne
push
pop
fdivr
test
jae
aaa
into
pop
dec
je
fsubp
xchg
add
lret
and
outsb
pushw
cltd
dec
jae
mov
loopne
in
in
out
mov
das
rclb
and
lods
lods
into
sbb
add
push
mov
scas
or
mov
xchg
mov
add
push
jnp
fwait
or
lcall
rorl
lds
pop
jmp
out
clc
xchg
insb
shlb
cli
push
push
mov
mov
pop
out
mov
or
xchg
or
stc
leave
inc
xchg
jle
pop
lahf
mov
test
add
inc
repnz
mov
xchg
lret
lahf
mov
sbb
xchg
push
jle
sub
ret
inc
lea
pop
push
cmp
mov
sahf
popf
adc
xor
scas
cmc
pop
in
jae
es
repnz
sbbb
fcmovnu
push
ror
hlt
mov
xrelease
mov
adc
jmp
pop
mov
and
lcall
cmpsl
push
cmp
out
aaa
push
cmp
fscale
lea
xchg
pop
out
loopne
das
mov
pop
mov
movsl
in
icebp
into
insb
jg
cmpsl
daa
jge
ss
sbb
lods
adc
lret
lea
jns
arpl
cmp
lods
repz
out
popf
adc
shrb
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
jmp
scas
fldl
movsl
jl
stc
mov
mov
xsavec
and
push
iret
sub
or
sarl
cmp
ja
test
jmp
pop
testl
fstl
push
ds
push
jb
cmpsb
dec
fbld
pop
test
push
sub
sub
push
or
inc
insl
push
jmp
sbb
xchg
fisubl
mov
outsl
out
cmp
pusha
push
adc
sub
sub
pop
in
sbb
es
aad
jl
in
cmpsb
sub
xor
cmp
or
mov
dec
mov
or
push
rorl
xor
adc
inc
addb
lea
imul
cltd
sbb
dec
popa
cwtl
pushf
es
cmp
mov
jecxz
addr16
nop
inc
mov
movsl
in
xor
nop
cmp
mov
xchg
outsl
or
pop
and
mov
mov
jns
rcl
ret
test
fbld
sub
add
lea
into
lods
push
adc
repz
mov
jno
mov
test
repnz
ds
cld
add
pop
sub
inc
inc
xor
jbe
adc
mov
mov
out
loop
add
pop
push
js
out
xchg
pop
popf
mov
jb
add
call
or
sub
push
ss
in
jge
xchg
movsl
push
and
sbb
lret
jp
ret
mov
cli
push
fisttpl
cs
sahf
ja,pt
pop
imul
xchg
fs
mov
jno
cmp
xor
cmpsb
sub
in
add
adc
and
add
jno
add
and
inc
loope
jnp
sbb
dec
imul
rclb
into
or
mov
inc
dec
pop
push
adc
xlat
and
jl
lret
jp
inc
cmpsl
inc
ficompl
popa
in
dec
nop
inc
add
in
stos
je
xor
jnp
dec
lcall
mov
or
sahf
mov
xchg
add
jp
stos
dec
inc
das
mov
scas
fistps
ficoms
test
pop
jns
jecxz
pop
mov
stos
xor
imul
rcrw
mov
push
outsl
rclb
and
sub
sub
shrb
sbb
mov
push
cld
push
stos
call
shrl
mov
mov
stc
add
mov
cmc
stc
add
mov
add
dec
sarl
sub
movsb
mov
and
stos
jns
das
mov
scas
icebp
pusha
enter
xchg
lcall
sbb
push
xorb
mov
in
mov
sbb
lahf
xlat
shll
mov
stc
rcl
fisttpl
xor
and
sahf
lock
mov
loopne
add
cwtl
jne
imul
sub
push
mov
inc
xchg
jle
xchg
aaa
inc
imul
in
dec
sarb
jb
add
lret
aas
sbb
mov
jbe
dec
dec
push
iret
sbb
aaa
mov
mov
add
nop
and
mov
out
repnz
subl
push
mov
add
jmp
push
push
jbe
ret
mov
sbb
std
jae
cmp
mov
or
mov
aas
xor
test
fninit
lods
inc
call
jecxz
jmp
bound
mov
dec
movsb
xchg
ljmp
mov
in
ds
adc
cmpsl
fwait
mov
popf
add
mov
dec
daa
ret
add
ret
es
pop
or
inc
lock
push
sub
or
push
jne
push
test
pop
icebp
movsb
add
sub
or
push
fwait
dec
ror
xchg
mov
sbb
ss
leave
cld
outsl
std
pop
ret
call
sahf
and
ljmp
leave
push
and
xor
insl
fs
stos
sbb
adc
cmc
fucomi
ror
int
fcomi
sbb
shrb
dec
jecxz
mov
nop
fmul
stos
dec
add
outsl
sub
pop
mov
rolb
leave
negl
xchg
leave
in
jns
out
pop
outsl
or
jmp
xchg
aad
decb
mov
and
mov
pop
xchg
outsb
jae
sbb
cmp
sub
rorl
pop
out
shr
jae
pop
lea
pop
add
repnz
pushf
mov
push
xchg
rclb
sbbb
or
filds
xor
pop
jecxz
aad
dec
clc
jecxz
rorb
and
mov
pop
subl
cmp
or
xchg
fistpll
add
flds
or
mov
stos
arpl
fs
xor
lret
scas
rcrl
lcall
xchg
ret
repz
aas
or
or
jbe
mov
sbb
inc
mov
push
loopne
std
sub
add
push
out
sbb
je
mov
mov
outsb
fldenv
mov
ficomps
fisubrl
mov
and
or
inc
push
lea
mov
cmpsb
xor
enter
iret
cmpsb
movsl
insl
std
daa
xor
cmpsl
aad
jge
sbb
xchg
loopne
mov
adc
push
add
rcll
bound
aaa
call
jnp
or
mov
loop
or
repz
scas
aaa
loopne
mov
sub
or
push
fidivrs
jle
pushf
xor
subl
and
out
repnz
addr16
cltd
out
andb
xchg
ret
fwait
jl
arpl
sti
and
jns,pt
test
jp
repnz
mov
add
pop
adc
cltd
jp
inc
lods
jge
shl
imul
in
loope
stos
mov
mov
int
mov
or
jo
popa
aas
pop
dec
push
dec
mov
mov
ss
shll
push
and
adc
push
cmp
inc
sarb
test
xchg
dec
pop
icebp
mov
xchg
aas
rorb
popa
pop
mov
cmpsb
shll
sub
lret
sahf
push
das
sub
or
sbb
cmpsb
mov
loope
in
or
mov
popa
shl
sub
gs
fiaddl
push
fcmovbe
push
and
lret
jecxz
inc
xchg
cltd
jecxz
mov
popa
dec
jmp
pop
outsb
mov
pop
nop
enter
mov
cltd
cmp
shll
dec
jge
iret
push
ret
xor
lahf
ret
and
mov
fsubp
dec
mov
sbbl
push
add
loopne
add
inc
stos
jle
mov
xor
and
jmp
jne
add
subl
xchg
lcall
mov
minps
cmpl
jbe
pop
stos
jne
lods
add
dec
mov
ja
mov
push
xorb
sbb
ss
mov
pop
jmp
xor
in
cmp
repz
int
dec
rol
ja
roll
test
in
fcoml
sti
ss
mov
dec
push
test
fisubs
movsl
cmp
mov
aad
xor
xchg
inc
cmp
fnstenv
das
rclb
jno,pt
imul
xchg
cmp
fisttpl
sbb
mov
sbb
jmp
arpl
xchg
pop
stc
stos
sub
pushl
cmp
into
push
out
and
xorl
std
cmp
repz
sbbb
mov
jp
dec
inc
xchg
and
adc
sub
adc
in
xchg
int3
cmp
sub
das
iret
xchg
inc
inc
pop
lds
mov
repnz
movsl
ret
iret
or
int
cmp
add
icebp
xor
push
imul
popa
leave
iret
mov
cs
pop
inc
mov
dec
sar
push
dec
jnp
sub
jmp
inc
clc
jmp
scas
loope
ret
idivl
jg
dec
lahf
xor
idiv
push
popf
adc
fwait
daa
push
in
pop
int
mov
adc
push
sarl
sub
int
testl
dec
aaa
pop
push
mov
or
xchg
imul
xor
bound
pop
icebp
sbbb
xchg
cltd
mov
gs
pop
dec
or
popf
mov
bound
dec
cmp
dec
out
sub
adc
cmp
stc
shl
scas
push
jmp
and
mov
cmp
loop
cmp
test
mov
subl
imul
out
stos
aad
sub
push
mov
jecxz
push
xchg
negl
sbb
mov
daa
push
jge
pop
jmp
fdivrs
xchg
push
push
pusha
insl
sbb
lret
dec
inc
mov
lods
icebp
hlt
and
mov
or
mov
mov
out
fisubs
pop
pop
dec
push
sbb
xor
dec
repz
xchg
xor
adc
mov
ds
inc
pushf
xchg
mov
sub
lds
fsubs
lods
icebp
dec
add
movsb
mov
mov
mov
xor
xchg
gs
sbb
lret
aaa
push
scas
or
xchg
jle
repnz
dec
sub
aad
cmpsb
fistps
test
repnz
mov
daa
dec
xchg
jmp
daa
hlt
mov
mov
add
cli
pop
mov
cmpsl
inc
xchg
insb
cmpb
lds
dec
stos
sbb
jge
ret
into
jle
ret
mov
stos
mov
outsb
xchg
outsl
and
inc
rcr
xor
in
inc
mov
inc
mov
movsl
ljmp
jo
pop
dec
lahf
test
mov
stos
mov
mov
push
cmc
mov
test
rorl
jp
mov
or
sub
mov
xor
jle
cmp
jp
test
pusha
sub
out
mov
addb
mov
std
mov
pop
mov
add
out
xchg
add
xchg
cld
loope
push
imul
lods
icebp
xchg
jg
jecxz
push
mov
inc
addl
cmp
imull
bound
mov
inc
add
mov
push
cmp
loopne
dec
les
cmp
cmp
mov
bound
popa
cwtl
mov
icebp
popa
mov
aam
and
or
or
adc
mov
pop
and
lock
mov
sbb
jne
mov
es
pop
sbb
pop
dec
push
mov
cli
cld
pop
cmpb
pop
lods
cmp
dec
arpl
fnsave
add
cli
pushf
jno
inc
push
in
repnz
in
movsl
loop
and
pop
ljmp
dec
mov
sub
jecxz
insb
mov
aas
pop
xchg
fs
xor
fwait
xor
inc
pop
adc
mov
sub
push
int3
pop
scas
xchg
ljmp
sbb
clc
pusha
cmp
cmpsl
ror
dec
std
out
mov
pop
add
push
sub
push
idivl
jg
pusha
daa
insb
aas
dec
iret
adc
and
scas
sub
cmp
xchg
push
lods
scas
push
and
add
xchg
mov
pop
or
or
lcall
or
sub
in
sub
mov
jns
int
cwtl
stos
mov
xor
sub
enter
mov
push
or
jle
push
mov
add
js
adc
adc
out
ds
out
loopne
pop
push
pop
inc
lods
clc
or
iret
popa
stc
jae
sbb
mov
adc
jns
dec
out
dec
add
cmpsl
je
and
mov
xor
push
aad
fwait
add
pop
dec
shll
in
sub
shlb
xlat
negl
fstpt
jge
cltd
out
data16
sahf
sub
repz
jp
and
mov
cmpsl
or
or
jmp
sub
jb
test
mov
jne
out
xchg
jno
rcpps
pop
and
sbb
push
mov
stos
mov
jg
cmp
jae
sub
dec
xchg
pusha
sbb
jge
dec
and
notb
cmp
jg
loop
push
jbe
sbb
addr16
subb
xor
lret
in
sbb
push
cs
mov
xchg
sbb
sbb
sub
sub
lret
shll
or
mov
iret
out
gs
mov
adc
fs
fcoms
les
mov
jmp
mov
inc
inc
xlat
jmp
lret
es
int3
xchg
push
sbb
and
mov
test
movmskps
ja
push
insb
mov
xlat
mov
sahf
pushf
adc
mov
xchg
icebp
rorb
add
dec
lahf
fwait
cmc
push
lods
dec
popa
out
sub
cld
mov
fdivr
or
fnstcw
lea
outsb
pop
test
popf
icebp
in
push
andl
mov
stos
fscale
pop
js
das
cmp
lcall
cmp
mov
push
pop
inc
jg
jmp
ret
scas
shr
ret
or
and
mov
and
addr16
in
inc
add
cmp
negl
dec
xchg
les
mull
imul
cli
adc
xorb
xor
popa
or
mov
cli
cmpl
movsb
push
push
jae
xor
cmpb
dec
xor
cmp
out
xor
incl
enter
add
jmp
nop
shrb
sub
addr16
sub
outsb
cltd
or
and
inc
mov
loopne
push
dec
inc
jnp
or
push
jae
adc
xlat
push
or
xchg
mov
add
ljmp
faddl
dec
add
push
push
sti
add
roll
mov
or
scas
cmp
int
call
push
sbb
in
nop
in
jo
xchg
stos
adc
sbb
inc
push
jno
inc
rcll
pop
or
push
pop
stos
jg
enter
in
in
push
test
xchg
mov
push
fdivrl
xchg
xchg
inc
or
aam
add
data16
std
sahf
mov
ja
xchg
outsb
and
and
add
std
gs
in
push
test
add
pushf
mov
mov
and
cmc
add
popf
movsl
xor
push
lret
ds
test
cmp
jb
xchg
adc
cltd
test
leave
enter
and
ja
dec
ret
mov
mov
jl
sub
mov
mull
cmp
xchg
ja
insb
or
mov
mov
xor
xor
mov
push
bound
cmp
dec
imul
jp,pn
dec
and
repz
lods
mov
cs
jge
cmp
adc
popf
fldcw
stc
dec
jb
cmpsl
cmpsl
push
xor
std
adc
mov
dec
and
cmpl
push
jge
rcrl
push
push
repnz
pop
cmpsb
out
daa
xor
jmp
sbb
cmpsl
pop
dec
mov
outsl
insb
lea
les
or
cmpl
iret
std
rcrb
ds
mov
ljmp
fimuls
dec
cmp
or
lods
andl
jae
inc
xchg
nop
add
xor
add
daa
test
mov
inc
popa
xchg
xchg
in
test
repz
pushf
mov
mov
xchg
sub
out
jmp
cwtl
sbb
add
xchg
pop
fnstsw
mov
mov
push
out
js
fwait
xchg
call
push
add
xchg
push
andl
lods
or
lods
in
pop
rorb
xor
xchg
jmp
scas
das
jp
stos
or
pop
xor
sbb
pop
adc
xchg
lret
adc
inc
pop
xchg
iret
inc
aam
xor
sti
jbe
fldl2t
mov
or
int
lea
dec
xchg
add
mov
and
mov
or
and
and
cmp
sub
jb
aad
sahf
in
stos
sbb
cmpsb
xchg
mov
xor
cwtl
fwait
add
sub
xchg
sub
cwtl
pushf
jb
xchg
pusha
loopne
push
aaa
xor
addl
cmp
pop
push
fadds
lcall
sbb
test
fdivrs
aaa
dec
mov
xchg
pop
mov
icebp
sbb
cmpl
sbb
fmuls
mov
test
into
imul
or
outsl
push
es
and
repnz
jecxz
sbb
ficoms
push
and
and
icebp
add
in
or
fs
sbb
sbb
inc
pop
mov
cmpsl
add
mov
xchg
mov
push
adc
in
xchg
bound
cld
stc
cltd
jg
pushl
jne
mov
or
push
inc
sub
mov
loope
fidivl
or
cmp
loopne
push
mov
inc
shll
out
mov
cmp
dec
gs
fwait
insl
enter
push
jbe
adc
leave
cmp
rcrb
push
and
sti
les
dec
pop
mov
bound
bound
xchg
add
loope
fs
ja
mov
fisubs
cmp
push
imul
test
imul
std
dec
loop
mov
mov
adc
aad
testb
loop
push
or
pop
shll
fs
enter
sub
mov
lret
sbb
add
mov
into
popl
lods
adc
add
inc
xchg
mov
adc
xor
sti
fistps
pop
push
cld
pop
mov
dec
xchg
popa
mov
cltd
ret
in
insb
mov
jecxz
cli
add
movsb
dec
jno
cmp
xchg
cmp
inc
mov
mov
inc
imul
stc
mov
ljmp
cld
xchg
xor
jg
movsl
cltd
mov
sti
and
movsb
xchg
mov
push
lods
test
loop
imul
outsl
fnclex
dec
dec
out
fwait
jae
fldl
sbb
leave
sub
dec
rol
mov
fstps
xchg
mov
xchg
jns
xchg
mov
add
and
test
aaa
mov
xor
nop
cmp
jb
pop
js
divb
loop
mov
stc
inc
xchg
std
sbb
clc
fneni(8087
pop
mov
out
push
push
cwtl
aam
aam
push
leavew
lret
xchg
fisubrl
js
insl
xchg
stos
push
inc
sbb
mov
shlb
mov
dec
xor
pop
adc
pop
lcall
sahf
add
mov
sub
lret
out
mov
xchg
arpl
aam
pop
orb
and
adc
dec
out
and
inc
add
and
popa
cmp
data16
subl
cmp
sub
popa
loopne
xchg
shrb
out
loop
movsb
xor
lock
and
js
sbb
mov
gs
mov
mov
mov
clc
daa
jecxz
aas
push
inc
pop
enter
movmskps
inc
ljmp
cmp
xchg
push
xchg
shll
outsb
pop
das
sub
mov
sbb
aas
adc
shl
sbb
std
fdivs
das
mov
dec
sahf
adc
addr16
icebp
dec
ror
xor
add
mov
ret
andl
aaa
imul
push
fisubs
sbb
inc
leave
pop
mov
sub
repnz
clc
cld
and
add
push
bound
pop
inc
xchg
lods
repz
les
imul
test
adcl
ss
mov
scas
rcrl
push
pop
fwait
cmp
push
adc
push
dec
sub
pop
fwait
jle
rolb
std
cs
sub
and
jge
jecxz
movb
xor
scas
jmp
and
mov
sub
and
xorl
jne
adc
mov
fidivs
push
push
lcall
pop
subb
cmpsb
enter
push
jg
jmp
imul
push
add
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
jmp
push
gs
pop
out
dec
push
push
add
mov
cmp
and
sbb
jl
pop
cmpsl
lahf
jo
xchg
pop
ja
sti
mov
push
leave
fisubrl
stos
xor
mov
pusha
mov
test
loop
jle
xor
and
aam
stos
test
sub
xchg
rcll
ja
stc
outsb
mov
clc
int
jno
stos
sbb
or
enter
test
lcall
xor
sti
jae
mov
or
push
pop
bound
ret
into
pushf
into
sub
sub
adc
cli
push
cmp
mov
sar
lds
in
subb
int
mov
fs
and
in
dec
mov
ret
in
out
push
add
test
push
sbb
outsl
in
ds
inc
add
scas
jmp
rolb
adc
inc
stos
mov
call
pop
cli
loopne
insl
push
adc
fnsave
div
fists
lds
and
aad
mov
ret
gs
sub
cmp
inc
adcb
pop
aaa
fistps
pop
mov
cltd
xor
in
movsl
jb
dec
out
push
clc
add
xor
cmp
mov
xchg
es
adc
repz
push
fiaddl
iret
ret
mov
outsl
or
or
mov
add
popf
xchg
out
addr16
fwait
or
push
mov
add
lock
xchg
xlat
stos
es
int
mov
xor
outsb
xchg
aad
movsl
adc
jg
mov
add
adc
add
xchg
fxtract
cmpsb
subl
push
out
ret
out
loop
popf
into
aam
mov
cmp
mov
push
pop
xor
neg
mov
dec
imul
cltd
mov
cmp
mov
iret
rorl
dec
fucomp
sti
mov
ja
xor
sarl
leave
dec
dec
cmp
pop
inc
movsb
jnp
icebp
repz
icebp
loopne
shld
repz
mov
sbb
movsb
mov
je
rorb
xchg
jno
cmp
lds
aam
push
sbb
or
push
lret
push
mov
mov
sub
test
jp
sbb
aaa
out
ds
and
push
and
and
xor
mov
push
push
xchg
int
or
ret
ja
cmpsl
lret
jle
mov
stos
mov
jge
push
adc
cmpsb
in
jae
repnz
jns
cld
ja
mov
xor
cmp
dec
loopne
ficoms
test
push
push
int
and
fwait
push
stos
cmp
mov
out
popf
jo
add
push
repz
xor
fdiv
fdivl
push
iret
push
xor
sbb
cmp
cmpsb
cmp
sbb
mov
cmp
add
xchg
jns
jp
shll
or
outsl
mov
out
ss
dec
pusha
sub
jl
loopne
dec
addb
dec
test
adc
adc
test
outsb
dec
mov
dec
mov
bnd
addl
push
pop
cs
outsb
out
mov
ss
jo
dec
cs
sbb
inc
mov
lds
mov
lea
mov
in
lock
out
sbb
push
xor
testl
push
mov
ret
pop
ret
cmp
hlt
xor
scas
insb
icebp
add
fwait
push
sbb
mov
stos
repz
push
mov
or
mov
stos
decl
fsubs
cmp
cmp
xor
lahf
jae
pop
cltd
cmpsl
cmp
mov
cmc
lods
cmpsl
std
push
pop
adc
sbb
dec
xchg
ss
pop
cltd
pop
test
stos
inc
insl
xor
cmp
test
hlt
outsl
cmp
add
pop
imul
jne
fisubrl
int
repnz
popa
movsl
mov
inc
push
and
and
in
mov
inc
pop
call
sub
loop
leave
gs
push
test
mov
fstps
mov
mov
into
mov
mov
pushf
je
mov
test
fisubrl
lea
mov
push
test
pop
scas
fcoms
das
xchg
jl
mov
pop
jns
cwtl
in
inc
aad
daa
push
ror
daa
pop
mov
pop
or
pop
outsb
sub
sbb
sbb
xchg
sbb
aaa
xchg
aad
mov
ret
mov
movsb
sahf
mov
dec
push
scas
movsb
pop
push
scas
dec
xchg
adc
jb
divl
arpl
cmp
movsb
dec
ret
cmpsb
or
inc
fldenv
adc
andb
jl
adc
mov
pop
dec
fstpl
aaa
mov
leave
iret
jp
sbb
add
mov
xorl
pop
xor
das
xchg
out
inc
jb
sub
outsb
xlat
rdmsr
or
lea
rclb
sbb
pop
fstl
mov
jne
nop
or
movsb
inc
mov
lea
inc
pop
mov
outsb
xchg
ret
cmp
int
or
and
dec
dec
jp
in
inc
pop
mov
sbb
push
cs
rclb
push
push
xor
les
fs
rorl
pop
inc
sub
and
fs
int
sub
jmp
and
out
dec
loop
push
sbb
xor
lds
xchg
pop
in
adc
enter
and
inc
mov
pushf
cli
cmp
push
add
adc
lods
mov
stos
mov
into
mul
pusha
imul
outsb
sahf
push
jb
dec
xchg
jbe
and
lods
or
mov
or
fisubrs
inc
popf
push
lds
xchg
pop
and
sub
ficoms
fimull
out
cmc
fcomps
and
add
xchg
cmp
mov
jl
sbb
jmp
sub
lods
mov
sahf
ja
bound
popa
es
lahf
les
jnp
stos
pop
pop
mov
cli
bound
std
lret
jnp
stc
adcl
mov
mov
adc
or
adc
ror
cmp
mov
xor
cltd
aas
std
xchg
jnp
lahf
mov
test
out
or
in
xchg
add
les
mov
in
mov
adc
pop
adc
xor
mov
insl
and
push
sti
das
orl
into
mov
mov
scas
fiadds
cltd
loop
sub
dec
mov
push
mull
jno
imul
push
push
hlt
or
inc
outsb
sub
mov
ljmp
add
aam
and
jb
xorb
hlt
mov
fadd
std
mov
xchg
mov
jmp
sbb
push
adc
xchg
int3
xchg
mov
adc
and
dec
xchg
ds
mov
push
push
mov
adc
xor
dec
mov
enter
jp
jmp
adc
mov
push
sbb
test
mov
nop
mov
aad
xchg
pop
cwtl
out
sub
movsl
movsb
aam
and
lods
mov
pop
pop
pop
lcall
enter
add
je
stos
xor
stos
push
lcall
sub
pop
push
push
arpl
adc
jne
push
mov
jg
adcl
mov
jno
mov
lahf
mov
inc
inc
leave
nop
sbbb
sub
dec
sub
adc
in
inc
ror
jae
gs
and
fiadds
or
add
sub
sub
js
ja
adc
lds
andl
movhps
ljmp
lods
inc
pop
xor
xchg
mov
cmp
jecxz
je
mov
push
mov
sbb
push
jne
or
adc
sub
add
leave
push
and
add
sbb
cwtl
loop
dec
fwait
cli
std
xlat
icebp
mov
sub
outsb
lret
inc
sub
sbb
clc
xorl
xlat
icebp
es
in
cmp
jne
add
jns
lret
or
mov
cli
adc
pop
stos
push
out
rcrb
iret
insl
adc
test
stc
or
sbb
and
sar
lret
and
ljmp
dec
mov
test
and
or
popf
mov
jno
sbb
mov
enter
jge
int
inc
jo
stc
fdiv
jo
xchg
add
mov
das
jecxz
adc
popa
sub
mov
fcomps
lret
fcoms
shlb
mov
inc
je
pop
sub
xchg
mov
test
imul
ljmp
mov
inc
aam
fs
rcrb
jg
lds
stos
adc
mov
and
mov
push
ljmp
cmp
sub
out
push
dec
xor
jecxz
imul
sbb
lods
push
lahf
mov
sub
bound
fcompl
out
mov
cmc
lret
lret
icebp
or
lret
pop
push
push
ficoml
pusha
jg
lret
add
shrl
insb
cmpsl
repz
loopne
mov
test
iret
cld
and
sub
mov
lods
xor
push
imul
push
js
sbb
jmp
adc
stos
sbb
scas
sub
hlt
out
pop
pusha
push
xchg
mov
inc
out
test
adc
in
mov
stc
mov
rorl
in
mov
xor
sub
leave
mov
mov
jp,pn
dec
inc
sbb
ffreep
mov
fwait
xchg
push
in
jp
adc
cmp
shll
shrl
call
sbb
iret
cmp
inc
out
fxch
cmpb
popa
sbbl
push
xchg
lock
xchg
fadds
movsl
mov
das
inc
xchg
inc
jge
or
inc
sbb
rorl
sub
adc
lods
fdivrl
xor
mov
push
or
lods
mov
cmpsl
sub
lret
imul
lods
mov
fs
mov
inc
xor
rorl
repnz
dec
add
cld
fs
mov
push
loop
lea
lock
arpl
cmp
pop
fbld
mov
dec
pop
mov
test
jne
dec
xchg
add
outsl
loop
lret
jae
stc
push
jle
daa
pop
xor
mov
repz
sahf
pop
fsubp
mov
add
and
mov
push
in
xor
adc
test
mov
movsb
imul
ljmp
xchg
fs
cwtl
sbb
movsl
cli
mov
mov
fisubrl
je
inc
push
je
fiadds
std
push
lcall
mov
xor
jmp
mov
ja
es
ljmp
dec
loopne
sbb
push
sbb
stos
mov
dec
dec
cmp
pop
ret
jp
stos
fldenv
xor
cs
enter
lods
jnp
test
pop
insl
push
cmc
sub
jecxz
int3
rorl
add
adc
mov
xchg
pop
xor
dec
arpl
popf
sbb
loop
sub
test
lret
xlat
adc
jb
ret
sub
arpl
inc
movsl
pop
push
je
push
movsl
dec
test
mov
loop
outsl
out
fcmovbe
jp
pop
subb
stos
dec
insb
mov
icebp
dec
sub
loopne
sbb
xchg
and
rcrb
and
in
movsb
sar
dec
das
inc
dec
pop
and
adc
das
icebp
push
adc
xchg
and
scas
ljmp
test
xor
jg
inc
adc
mov
stc
sbb
push
sub
ret
inc
push
or
fmul
xor
jl
cmp
test
mov
lea
sub
or
dec
call
in
and
push
mov
inc
insl
cmp
push
mov
xchg
rorb
or
pop
push
jne
xchg
xchg
jb
inc
mov
int
mov
in
jecxz
cwtl
cli
lods
call
add
inc
imulb
movsl
pop
xchg
xlat
push
mov
cmp
enter
xor
cmp
pusha
and
fsts
es
aas
cmp
pop
sub
xchg
in
sahf
roll
mov
sbb
push
add
hlt
adc
fwait
and
adc
loop
jle
push
push
insl
jo
daa
mov
rcrb
fdivrl
icebp
mov
test
out
inc
jb
std
lods
ja
mov
sub
dec
cmp
adcl
test
lds
xchg
aad
ljmp
icebp
dec
add
fidivrs
push
wbinvd
sub
ljmp
push
add
inc
ret
and
insl
pop
cld
xor
mov
add
jae
xor
adc
into
ss
sbb
and
repz
insb
test
out
movl
fstpl
push
xchg
xchg
xor
lock
pop
push
mov
jo
fld
push
xchg
cli
and
mov
lahf
inc
xchg
pop
dec
inc
fwait
and
stc
std
jnp
pop
cmp
cltd
inc
test
out
divps
jnp
jb
testb
jp
test
clc
jmp
adc
outsb
xchg
leave
xor
inc
cli
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
cmpl
jg
mov
add
jmp
pushl
call
push
jmp
addb
add
insb
jae
dec
cmpsl
xchg
jno
inc
add
jnp
inc
lahf
ds
jbe
out
dec
mov
jecxz
mov
outsl
xor
scas
inc
lds
pop
add
sbb
add
mov
enter
clc
popf
popa
and
fimull
icebp
dec
xor
push
iret
cmpsl
fwait
add
out
adcl
nop
cld
into
subb
xchg
jnp
pusha
xchg
mov
push
mov
xor
pop
lods
or
sub
inc
sbb
add
pop
mov
and
ret
data16
jge
xchg
push
cld
xor
fbld
mov
xchg
rcrl
xchg
pop
inc
mov
sbbl
fcoml
dec
hlt
cli
sub
insl
lods
jns
push
movl
cmp
into
roll
inc
sbb
jns
add
mov
inc
mov
cmc
in
fistl
mov
sub
jp
hlt
cmp
push
stos
push
and
mov
dec
shll
fcomps
out
psllq
jl
movsl
jne
add
pop
dec
ds
rolb
fmuls
cmp
lcall
mov
or
and
pushl
jnp
and
cwtl
iret
sbb
xchg
test
sbb
call
dec
mov
inc
dec
stc
inc
mov
dec
dec
pop
dec
std
nop
mov
or
pop
pop
or
xchg
xchg
lcall
mov
popa
xor
sti
cmp
add
imul
push
std
jg
mov
mov
mov
adc
xor
pop
push
pop
pop
lahf
push
sub
lods
fists
bound
adc
cltd
sub
mov
testb
xor
push
into
pop
ret
subl
push
lods
jle
adc
xor
loop
fdivl
mov
lds
imul
out
xchg
fidivl
adc
and
loopne
and
test
testb
mov
int
xchg
xor
fcmovnbe
subl
push
mov
outsb
push
sar
dec
mov
mov
dec
pop
add
inc
pop
cmp
test
xchg
pushf
xchg
mov
roll
dec
roll
push
imul
fdivl
jns
pop
gs
dec
sahf
mov
out
add
dec
or
dec
iret
inc
adc
or
add
sti
xchg
out
sbb
cmpsb
sub
push
rcr
push
xchg
sub
cmp
popa
push
mov
std
jbe
fstpt
push
ds
inc
div
loope
lcall
js
loope
jnp
sbb
mov
inc
xchg
orl
shlb
mov
pop
cwtl
push
ds
stos
dec
push
scas
es
mov
imull
mov
pop
insl
add
xor
into
stc
cmp
cmp
jns
mov
negl
xor
insl
mov
add
fcmovnu
out
cld
xlat
lock
and
mov
cmovb
and
sbbl
push
mov
jmp
fiaddl
mov
or
std
mov
aaa
pop
mov
cmp
addr16
jae
xchg
mov
mov
mov
xor
stc
push
jle
out
stc
das
jmp
aaa
mov
push
cmpl
mov
mov
rcrb
xchg
test
inc
popf
cltd
movsl
push
jae
scas
adc
jp
jb
cmp
adc
mov
ficomps
fmulp
mov
pop
xchg
dec
xor
arpl
xchg
stos
std
jb
mov
add
xchg
sbb
push
mov
xchg
pop
inc
cmp
in
pop
push
insl
add
scas
pop
test
push
rclb
push
mov
cltd
out
cmp
xlat
ss
in
xchg
gs
pushf
mov
xchg
add
call
into
stos
mov
loopne
cli
call
xchg
ljmp
shrb
cltd
mov
push
inc
sbb
xlat
push
ss
adc
sahf
sub
into
push
sub
stc
mov
adcb
sub
out
or
cmp
cmp
mov
loop
test
mov
pop
push
lret
ret
inc
ds
push
popf
mov
xor
inc
ret
jbe
jle
movsl
push
push
lods
es
pop
aaa
inc
sub
sbb
popf
mov
rorl
mov
out
imul
fcomps
xchg
cltd
mov
dec
out
insb
push
jmp
in
or
pop
mov
dec
lods
mulb
mov
xchg
aaa
shll
sbb
fistpll
and
pop
or
test
daa
mov
out
sahf
inc
xlat
or
jns
mov
push
inc
out
and
daa
pop
mov
decb
xor
enter
loopne
test
idivl
xor
cmp
cmpsb
mov
mov
out
pinsrw
mov
adc
pushl
xchg
pop
mov
in
repz
jmp
jp
cltd
inc
push
inc
jecxz
inc
psubq
in
fstpt
hlt
sbb
shrl
repz
and
add
insb
mov
and
mov
inc
cltd
mov
insl
mov
or
adc
add
pop
stos
ljmp
adcl
sbb
pushf
and
data16
sub
sub
pop
cmp
nop
pop
jno
sarl
cmc
add
push
xchg
addl
mov
cld
xor
and
fs
inc
or
add
ljmp
cmp
clc
vphaddudq
push
pop
popf
mov
arpl
test
cltd
mov
push
data16
cmp
in
jno
mov
lock
test
ret
inc
mov
ja
cmp
cmp
dec
in
jae
adc
aad
mov
idivb
mov
pushf
push
add
daa
mov
mov
push
je
je
xlat
sub
in
sbb
jb
jbe
ljmp
mov
sbb
mov
aad
jp
add
pop
mov
cs
mov
xchg
scas
xor
js
mov
adc
xchg
pop
jecxz
cmp
adc
enter
jae
jae
sbb
popa
in
pushf
xor
pushf
cltd
jl
mov
roll
jle
push
sub
ljmp
popf
dec
pop
adc
pushf
cmc
sbb
cmp
xchg
mov
xor
bound
mov
xor
pop
mov
jg
pop
cmp
popf
or
out
sub
call
jnp,pt
lds
pop
cli
filds
or
cmpsl
pop
outsb
and
orl
into
mov
movsl
dec
mov
outsl
roll
fcoml
cld
rcrb
mov
mov
stos
mov
mov
add
shlb
pop
sbb
les
adc
in
jge,pn
mov
mov
add
pop
pop
mov
das
sub
push
sub
ljmp
dec
lret
cmp
sbb
push
xor
push
test
mov
mov
mov
cmpl
jge
movzbl
add
adc
jmp
push
push
push
pushl
call
shrd
jmp
outsb
fwait
push
movsl
or
movsb
js
ja
xchg
jbe
jno
shl
int3
mov
dec
pop
adc
repnz
pushf
out
and
pusha
xor
mov
mov
jne
cmp
cmpsb
stc
cmp
fists
cmp
idivl
out
mov
push
out
cld
fwait
enter
mov
dec
dec
rclb
ja
pop
add
clc
aam
imul
mov
fs
cmp
hlt
pop
sub
cli
xlat
xor
push
popf
jns
in
or
rcrl
arpl
fisttpll
add
xor
clc
mov
sahf
rcll
add
cmp
push
pop
inc
icebp
mov
pusha
cmpsb
dec
iret
bound
mov
jbe
test
cmpl
adc
mov
cmpsb
loope
test
popf
xchg
mov
imul
js
push
fs
mov
dec
dec
mov
inc
fs
lds
fisttps
xor
mov
inc
aad
inc
mov
adc
jl
test
rolb
cmp
mov
lock
mov
ds
xor
fmul
aaa
push
stos
dec
dec
xchg
ja
lock
jmp
and
xchg
fwait
xor
cmp
xchg
lock
mov
popf
and
in
shrl
mov
cmp
add
aad
xchg
pop
loope
mov
pop
and
inc
lret
sub
movsl
dec
dec
inc
cmc
ret
add
shlb
aad
bound
inc
data16
pop
inc
add
cli
mov
std
out
or
push
insl
lcall
mov
cwtl
mov
testl
test
dec
loop
jecxz
jne
xchg
cmp
xchg
sbb
xorl
aas
push
xor
mov
orl
enter
push
iret
mov
xor
cmp
gs
sbb
scas
pop
insl
xchg
pop
call
inc
stc
rorb
das
lods
mov
cwtl
nop
mov
sbb
daa
pop
sub
aaa
insl
cmpsb
jno
addr16
sub
xchg
push
in
cmpsl
call
mov
in
lods
addr16
cli
pop
adc
in
repz
xchg
dec
cltd
jp
adcb
push
and
ds
test
sub
ret
xor
das
push
cmp
sahf
mov
bound
add
and
dec
jl
mov
cs
lcall
mov
out
add
jge
clc
popf
jp
xlat
std
inc
jae
xchg
scas
xchg
pushf
lahf
fldl
or
mov
lds
mov
pop
std
or
dec
mov
icebp
xor
push
int
js
out
adc
sahf
outsb
mov
adc
ljmp
push
pop
cmp
cmc
gs
in
fnsave
jbe
mov
xor
xor
cmpsb
sub
cmp
fmul
xchg
lahf
sbb
mov
or
pop
nop
add
push
adc
mov
leave
or
stc
stos
int
and
sti
sub
clc
lds
adc
xchg
gs
orl
cmp
mov
cmp
push
ja
and
leave
sub
or
lret
ret
add
nop
pushf
cld
xchg
xchg
pop
or
add
push
jo
test
arpl
leave
mov
dec
mov
cmp
test
mov
push
jbe
fcmove
xor
dec
sub
jl
decl
jmp
in
popf
xor
addl
test
stos
inc
dec
cltd
sbb
cmpl
inc
and
pop
mov
pushl
int3
mov
std
aaa
je
pop
je
jb
dec
xchg
imul
test
mov
hlt
shll
mov
jns
insb
xchg
mov
js
xchg
push
lock
mov
push
gs
push
mov
pusha
bswap
imulb
xchg
fcomps
out
adc
pop
std
jg
push
push
dec
int3
adc
daa
mov
push
outsb
and
into
jo
pop
mov
add
fwait
mov
add
sbb
hlt
mov
shlb
cltd
es
inc
cmp
jle
test
mov
jns
add
daa
xor
rorl
pop
cli
sti
int3
lods
pusha
adc
xchg
jnp
js
dec
mov
je
jnp
jno
cmp
test
int
adc
iret
je
int
or
cmc
jle
inc
aaa
ljmp
mov
and
ret
and
pop
and
push
mov
rorb
sbb
hlt
ljmp
adc
xor
faddp
stc
sub
xor
pop
int3
ss
jmp
and
mov
fwait
sbb
cltd
adc
arpl
es
fisubrl
pusha
sti
push
lret
mov
jae
mov
stc
dec
xor
sub
mov
shll
adc
sbb
inc
in
sbb
dec
cmpsb
adc
mov
cmc
dec
leave
mov
out
push
push
xor
out
or
movsb
add
out
cld
es
cmp
jns
mov
mov
popf
je
scas
adc
sub
stc
xlat
dec
and
jbe
cwtl
mov
ds
xchg
int3
or
jnp
pop
mov
and
icebp
das
stos
repz
sbb
xor
pop
xchg
mov
xchg
fnstcw
jecxz
sbb
stc
outsl
rcrl
decl
lods
pusha
cmp
out
test
arpl
loopne
pop
or
pusha
sbb
arpl
aad
js
inc
popf
xor
ret
fimuls
pop
add
add
les
lret
repnz
push
lds
mov
into
andb
adc
mov
pushf
dec
es
dec
lea
call
lds
cmp
cmp
stc
in
orl
xor
ficoms
add
test
outsb
cmc
jg
ret
js
xlat
xor
sub
xchg
mov
outsb
test
sbbb
bound
jae
sbb
xchg
into
mov
jg
mov
enter
dec
mov
add
inc
rcr
scas
scas
in
shrl
das
sub
test
enter
push
cmpl
mov
jno
aam
insb
mov
push
jbe
jne
cmp
je
std
in
jbe
push
movsb
insl
scas
fldt
sub
dec
outsl
jns
jle
mov
xlat
pop
xor
push
dec
aam
jbe
xchg
jnp
test
and
inc
pop
push
cwtl
fnstenv
inc
pusha
fdivr
pop
lret
pop
xchg
stos
push
ret
xchg
fstp
push
cli
subl
enter
ficoml
ljmp
daa
cmp
rcrb
xchg
jmp
add
xchg
inc
xchg
mov
mov
adc
and
movsb
push
mov
je
push
fdivl
or
jmp
mov
adc
xor
and
mov
sbb
xor
sbbl
or
mov
sub
mov
mov
subl
shl
mov
and
mov
mov
shrd
movl
xor
addl
shr
mov
mov
sbb
mov
mov
mov
mov
sub
sub
xor
decl
or
orl
jmp
cli
int
lahf
push
or
inc
cmpsb
ss
and
adc
addl
clc
jg
inc
ja
mov
lods
and
sahf
mov
xchg
cwtl
mov
cltd
or
addr16
hlt
sbb
fldt
imul
xchg
daa
pusha
push
lcall
loop
lods
sbb
add
rclb
and
dec
leave
mov
dec
push
or
mov
pop
nop
test
push
std
lretw
bound
cmp
add
adc
or
xchg
mov
push
sarb
pop
inc
mov
shll
les
imul
dec
inc
cwtl
xchg
repz
test
or
movsl
popf
sti
xchg
test
add
jmp
pusha
xchg
enter
cmp
sub
sahf
xchg
fsubrl
mov
das
cmpsb
dec
loop
sbb
fcoms
dec
mov
and
inc
shlb
inc
mov
sbb
stc
dec
xchg
xlat
leave
sbb
sub
sbb
sbb
ss
sbb
cmp
add
cs
mov
mov
sar
aad
xchg
inc
ds
push
fwait
insl
jbe
pop
and
mov
js
popa
mov
xor
std
int3
aaa
rcrb
cs
adc
push
negl
push
inc
mov
pop
call
sub
inc
dec
lea
adc
jge
inc
std
add
add
lret
pop
js
lret
int
loope
cmpl
cmc
xchg
test
daa
cli
cmp
scas
add
addr16
cmc
adc
lret
je
push
push
mov
cmp
test
xor
add
or
sub
cmp
mov
into
cmp
cmp
or
loopne
fwait
cmp
lahf
loope
mov
or
test
adc
inc
cs
lahf
test
aam
fidivs
pop
jle
sarl
imul
push
movsl
mov
sub
test
addr16
sbb
push
jns
arpl
dec
das
cmc
add
test
jo
cli
int
arpl
xchg
into
xor
pop
cltd
mov
dec
add
std
mov
lds
push
mov
xor
repz
sti
pop
je
out
fldt
lea
push
push
sub
pop
enter
mov
add
imul
push
fcmovnbe
int3
lret
shrl
lret
cmp
scas
push
adc
xor
mov
pop
mov
mov
lods
mov
xor
sbb
loop
psrlq
cmp
imul
popf
mov
into
dec
jmp
aas
movsb
into
int3
sub
aas
or
inc
push
inc
inc
jb
sbb
outsb
jno
mov
fisubrs
mov
jp
lods
push
daa
add
dec
imul
insb
inc
rol
sbb
xlat
add
fwait
nop
xor
hlt
jecxz
inc
xor
out
out
xchg
push
jne
add
insb
mov
cmp
dec
call
sub
stos
mov
add
scas
adc
pusha
mov
mov
in
cwtl
fists
jmp
dec
jle
push
sbb
lahf
jp
jle
mov
cltd
loopne
mov
mov
add
adc
xor
enter
mov
cmc
push
leave
sti
dec
aam
pop
sbb
orl
lcall
ret
and
and
test
in
rolb
push
push
inc
stos
push
ds
push
jl
mov
scas
inc
mov
mov
addl
push
jnp
loopne
pop
mov
dec
pop
clc
mov
es
outsl
cmp
cmp
int
fcmove
insl
inc
lods
aam
jle
test
dec
test
fwait
xor
or
sub
push
insl
xor
xchg
fisubl
adcl
repnz
fsqrt
mov
test
testl
sub
cmp
stos
roll
jb
mov
xor
and
jmp
std
sbbl
sar
mov
inc
mov
xchg
enter
enter
jns
cltd
in
ror
divl
call
jae
cmp
cld
and
rcr
das
or
cmp
ret
dec
cmc
mov
stos
insb
pop
jnp
cmp
test
push
mov
int3
cmpsb
jmp
pop
divl
lret
dec
xor
xchg
adc
int
inc
loope
mov
inc
mov
fdivl
mov
inc
mov
repz
and
and
movsb
lret
lcall
cwtl
sub
sub
cltd
push
jae
xchg
insl
xchg
repz
movsl
mov
pushf
es
mov
es
xchg
mov
mov
arpl
lahf
aam
cmpsb
and
addr16
sub
cmp
xor
jbe
adc
testl
push
decl
cltd
repz
mov
adc
mov
jnp
ds
ret
pop
add
mov
mov
sub
lahf
rclb
aas
mov
call
dec
cwtl
or
out
push
add
mov
mov
mov
lahf
jp
xor
lock
jge
out
inc
mov
das
and
inc
stos
push
mov
pusha
xor
sub
xchg
push
js,pt
mov
pop
cmc
ret
sub
inc
fcomip
js
push
pop
or
jmp
sti
cmc
lret
out
outsl
data16
push
cmp
inc
xchg
addr16
divl
lahf
cli
sub
jge
mov
aaa
mov
imul
ret
inc
shlb
mov
sti
ja
stos
dec
sub
pop
out
out
jno
fs
jnp
and
in
sub
dec
incb
sbb
loope
cmpsb
mov
es
sahf
dec
gs
fdiv
sbb
loopne
cmp
inc
sub
pop
xor
and
hlt
cmp
mov
cld
mov
rorl
testb
lock
popa
push
sbb
mov
mov
sub
shll
stos
and
fildll
inc
stos
out
ja
sub
jp,pt
or
push
or
out
xchg
enter
aaa
jmp
mov
inc
mov
jae
ret
jmp
test
in
jno
stc
xchg
push
mov
mov
imul
inc
xchg
xchg
in
in
xchg
inc
loope
std
inc
sub
movsl
fs
adc
jns
dec
lods
ret
and
xchg
in
and
stos
mov
adc
repz
gs
mov
lret
scas
inc
push
push
add
insb
or
mov
push
popa
sbb
mov
rolb
lods
and
or
pop
sub
xchg
clc
fs
adc
xchg
fstpl
fldcw
outsl
and
mov
cmp
push
push
aad
sbb
enter
loop
mov
inc
jecxz
inc
push
sbbb
fstl
inc
inc
jp
jae
ss
mov
mov
mov
mov
cltd
sarb
sbb
adc
test
loop
ret
in
lret
pusha
dec
xor
add
ljmp
insb
ficoms
push
jg
jp
mov
inc
cwtl
push
jp
mov
add
mov
xor
or
mov
adc
mov
jmp
movsb
dec
dec
jo
gs
adc
push
int3
xchg
push
adc
addl
outsl
movsb
lds
push
mov
stc
cmp
jge
pop
xor
stos
adc
add
dec
into
sahf
mov
lock
jmp
xor
in
sahf
stc
out
mov
push
push
inc
imul
add
jns
xchg
xchg
xchg
adc
and
pop
jno
mov
sub
inc
lahf
adc
mov
repz
xor
in
jnp
icebp
ret
movsb
nop
mov
jb
jb
aas
mov
jle
ljmp
leave
lods
scas
ret
mov
ljmp
call
mov
xor
hlt
xor
fs
movsb
pop
mov
xor
cmp
cmp
cmp
sbb
mov
jp
cmp
push
and
dec
frstor
popf
outsl
mov
mov
filds
mov
in
arpl
mov
sbb
nop
inc
shrb
cmpsb
dec
lods
movsl
icebp
mov
sbb
movsb
jo
push
mov
loop
xchg
sub
dec
imul
insl
dec
loopne
clc
jge
js
mov
ds
add
mov
add
les
pop
in
out
cmp
sub
inc
and
pop
or
fisubl
data16
ret
jo
add
add
lret
mov
inc
loop
mov
call
cmp
mov
or
pushf
or
ss
pop
daa
xchg
inc
ret
xchg
mov
xchg
je
fsubr
push
cld
push
pop
pusha
push
jb
stos
scas
cmp
xchg
loope
cwtl
cmpsl
sub
mov
add
inc
xchg
and
mov
bound
pusha
lret
imul
push
xor
stos
jae
fstpl
fiadds
and
pop
mov
pop
shl
stos
addb
push
mov
cmp
add
movsb
lock
icebp
out
mov
outsb
sub
loop
jb
dec
or
dec
sti
les
shrb
imul
lock
addr16
jne
outsl
mov
pop
in
daa
ret
jnp
or
cld
arpl
clc
pop
aam
outsl
outsb
or
mov
push
ds
insl
fistpl
inc
mov
sbb
mov
mov
in
jg
js
jne
mov
mov
mov
in
or
mov
and
sub
fwait
sbb
xlat
repnz
insb
in
xor
fildll
out
push
pop
adc
cmp
outsl
xor
xlat
sbb
xchg
mov
call
mov
or
scas
inc
in
loop
jbe
mov
dec
dec
sti
aam
cli
pop
inc
push
sbbl
stos
sbb
clc
gs
push
stos
jno
mov
jae
leave
mov
adc
loop
sbb
fdivs
aas
push
push
mov
outsl
pop
or
fidivs
sbb
add
jp
mov
icebp
inc
imul
rcr
and
pusha
popf
push
bound
mov
sub
jb
and
and
ud2
mov
sbb
xor
xchg
enter
addr16
int3
repnz
decl
sub
rorl
in
inc
push
shlb
jae
mov
movsl
icebp
xor
lods
pop
cmpsb
sub
jae
pop
fldenv
in
movsb
popa
in
or
js
pushl
scas
imul
or
test
push
hlt
dec
mov
ret
mov
fdivs
mov
jne
sub
inc
dec
inc
mov
sub
out
mov
jne
dec
fcoms
pop
push
movsl
cli
clc
jnp
mov
lea
inc
aaa
or
dec
mov
lods
mov
insl
movsb
test
push
pop
xor
xchg
in
movsl
cmp
jae
xor
sbb
sub
cli
push
out
or
clc
sbb
mov
out
or
add
rcll
into
aas
repz
cmp
or
mov
ljmp
sbb
cmp
fldenv
lret
push
ret
int3
ret
inc
push
int
mov
loop
inc
add
inc
push
jecxz
sub
inc
xor
test
test
push
int3
into
aad
lahf
int
or
mov
test
jnp
push
outsl
cmp
jnp
mov
sub
ja
sub
xor
sti
sub
or
cmp
test
dec
push
lret
pop
xchg
and
call
pop
push
scas
cwtl
repz
jle
jne
out
leave
or
pop
movsl
pop
inc
jl
mov
enter
lret
mul
hlt
idiv
mov
in
xorl
leave
mov
push
fwait
dec
xchg
cli
push
cmp
hlt
mov
pop
pop
es
test
das
in
sbb
bound
add
adc
inc
movsb
cmpsl
mov
fiaddl
repz
pushl
mov
xlat
inc
stc
repz
lods
rcll
sbb
dec
popf
jnp
aad
xchg
in
into
jle
aas
lcall
jb
lods
bound
test
lret
mov
xor
inc
push
out
lods
inc
aam
inc
rcrl
sub
sub
sub
or
movsl
movb
out
push
add
popa
mov
and
loope
sub
in
adc
jecxz
mov
negl
xor
and
stos
jle
or
xchg
pop
xchg
test
inc
mov
movsb
lret
loope
sbb
dec
dec
cmp
ds
push
pusha
sub
shl
pop
xor
testb
sub
mov
ss
ret
adc
popa
pusha
mov
jne
aam
ja
cmp
dec
cmpsl
inc
scas
sub
fcoml
adc
mov
mov
sub
cmp
pop
mov
cld
test
fs
test
out
pop
enter
add
test
xchg
scas
inc
dec
mov
or
repnz
add
xchg
jg
cmp
in
mov
lahf
fcomi
or
je
cwtl
data16
push
lret
ret
fisubs
out
add
lods
iret
enter
fisubs
clc
push
dec
insb
xchg
lods
lods
push
les
jno
fcmovnb
jnp
add
addr16
popa
cltd
lock
icebp
pushf
pop
sub
pop
out
and
sbb
shlb
mov
insl
test
inc
mulb
xlat
add
pop
out
mov
insl
push
adc
cmpsb
mov
enter
mov
adc
xchg
push
dec
int
call
cmpsb
xchg
xorl
mov
ror
sbb
xchg
jbe
popf
daa
dec
or
filds
jbe
aad
xchg
loop
lret
xor
enter
lock
push
mov
fdiv
lods
dec
sub
andb
sub
testl
push
inc
gs
sub
or
dec
mov
jo
shll
and
mov
mov
scas
xor
mov
pop
lds
jecxz
jg
test
pop
inc
pushf
xchg
aam
inc
enter
clc
inc
inc
add
add
jl
subl
jmp
pushl
pushl
call
mov
mov
mov
mov
mov
mov
shl
xor
shld
cmpl
jg
dec
jmp
pushl
call
shl
mov
xor
xor
movl
movl
movl
cmp
movl
jne
movl
cmp
je
subl
mov
mov
cmpl
jg
add
jmp
pushl
push
pushl
push
push
push
push
pushl
call
mov
mov
xor
shld
shl
xor
addl
xor
movl
cmp
movl
jne
cmp
je
mov
mov
shl
mov
xor
movl
shr
or
sbb
mov
cmpl
ja
and
jmp
push
push
pushl
call
mov
mov
mov
mov
mov
jmp
bound
clc
xchg
xor
xchg
outsl
inc
adc
addl
dec
stos
add
daa
cmc
and
scas
pop
sbb
aad
push
mov
je
dec
jmp
xor
in
pop
push
mov
arpl
mov
or
pop
mov
sarl
cmp
aaa
mov
lds
inc
adcb
test
lods
pop
pop
out
mov
or
out
dec
add
cwtl
mov
les
push
sub
adc
jp
cmp
push
call
test
out
dec
jnp
stos
outsl
rclb
insl
adc
or
notl
mov
cmp
push
imul
xchg
mov
mull
jmp
add
stos
add
jno
inc
pop
insb
rolb
imul
push
jg
int3
js
inc
lea
mov
mov
hlt
mov
cli
sbb
push
andb
shl
es
sbb
pop
xor
ret
push
pop
adc
push
lods
cmp
in
inc
mov
test
sub
int3
cmpsb
repz
lods
jno
mov
cmp
sub
mov
data16
dec
sub
enter
mov
loopne
add
roll
fcompl
sti
mov
mov
or
jns
sbb
les
xor
iret
sbb
sub
data16
xchg
popf
les
hlt
cmp
in
imul
mov
inc
popa
fwait
push
pop
std
xchg
inc
adc
mov
sarl
mov
call
pop
bound
call
or
push
and
jg
or
pop
xor
mov
jp
test
test
or
stos
xchg
enter
fidivs
or
mov
in
popf
jecxz
and
push
inc
push
sbb
jns
mov
mov
leave
sarb
mov
or
inc
jmp
dec
xor
cli
ja
scas
sbb
fldcw
inc
mov
nop
lcall
into
scas
sarb
inc
xor
fisubl
adc
xchg
call
shl
aad
dec
and
call
pushf
xchg
stos
pusha
fidivs
sahf
sub
push
mov
pop
dec
inc
jo
and
std
sub
dec
and
out
xor
shr
in
fadds
sbb
and
mov
shrb
mov
inc
add
xchg
ljmp
pop
and
fidivs
cltd
push
pop
push
dec
cmp
adc
cmp
cmp
xlat
lock
iret
and
bound
jbe
clc
sbbl
dec
int
enter
fnstcw
sub
or
movsl
inc
out
jp
ja
push
adc
sub
aaa
stc
mov
mov
aam
mov
out
jns
sbb
neg
inc
es
cwtl
call
lods
push
adc
sbb
test
jbe
sub
add
popf
shl
shlb
mov
sti
sub
sarb
mov
push
mov
stc
adc
dec
int
subl
mov
sbb
and
inc
push
cmp
mov
es
pop
sbb
loopne
pusha
mov
mov
das
mov
pop
add
push
xchg
int
push
or
rol
rcl
mov
into
lods
sbb
into
mov
adc
mov
les
test
xchg
push
push
push
fisubrs
push
popa
sbb
into
lahf
loopne
addl
sub
fidivl
mov
jb
fbld
scas
call
mov
mov
xor
sub
js
cmp
andl
lods
nop
movsl
and
daa
adc
mov
sub
add
in
pop
aad
scas
aad
pusha
fisubrl
cmpsb
imul
push
inc
or
int
mov
addl
mov
and
in
add
ds
xor
mov
adc
cs
repz
fidivrs
decb
jbe
sub
imul
int
push
mov
and
ja
cmp
mov
dec
loop
outsl
sti
inc
xchg
push
cmp
push
pop
adc
sub
jnp
add
test
ljmp
loop
mov
mov
add
dec
scas
pusha
mov
and
dec
sub
sbb
ds
insb
dec
dec
cs
std
or
xchg
sahf
int3
push
cli
xchg
sub
jmp
movsl
test
cli
in
cmp
dec
and
into
stos
fmuls
je
xlat
pushf
mov
pop
maskmovq
notl
xchg
imul
or
test
jb
mov
mov
inc
loopne
fs
lahf
add
pop
lahf
mov
xchg
xlat
ds
xor
sub
call
mov
adc
mov
jb
or
mov
push
cmp
push
xor
cmpsl
aam
xor
sub
mov
jns
xorb
jo
push
inc
jb
push
inc
stos
in
pusha
out
data16
jmp
aam
js
adc
fisttps
int3
cli
into
pop
in
cld
jnp
iret
call
scas
sub
nop
outsb
inc
pushf
out
jecxz
sarb
ljmp
adc
lahf
or
shrb
fwait
data16
lods
mov
adc
sbb
inc
xlat
data16
and
xchg
repz
push
sub
sbb
mov
insb
jp
sub
out
fs
xchg
pop
test
out
enter
mov
cltd
shll
inc
addr16
incl
mov
into
push
jnp
aam
pushf
cmp
aam
inc
inc
xchg
or
aas
lcall
pop
sub
xchg
cmp
mov
adc
push
inc
inc
cmp
stos
add
scas
adc
cli
jo
ret
mov
mov
iret
cmp
fwait
sbb
dec
and
sub
pop
or
sar
jg
mov
mov
adc
lods
movsl
test
outsb
cmp
add
jg
pop
mov
test
je
pop
out
add
adc
sub
xor
dec
or
jge
dec
cmp
mov
jne
cltd
fucom
dec
mov
mov
shrb
movsb
xchg
inc
mov
mov
pushf
jo
and
addb
mov
mov
xchg
adc
sub
popf
jns
mov
mov
pop
call
pop
push
pop
inc
mov
inc
ss
mov
sub
pop
jo
pop
push
mov
push
fistpll
out
aad
xchg
cwtl
push
test
pop
xor
inc
inc
lret
jo
popf
xor
sub
in
dec
out
fcoml
repz
cmp
jecxz
push
outsl
pop
sub
cltd
pushf
dec
cmp
jne
sub
cmc
mov
push
adc
mov
mov
loop
loopne
and
or
push
inc
mov
lods
xor
add
lret
in
ss
mov
dec
cmp
loop
dec
iret
das
or
adc
add
sbb
pop
xorl
sub
mov
add
mov
lea
mov
xor
mov
mov
mov
adc
jmp
fbld
and
adc
loope
adc
addl
mov
in
jecxz
repz
push
pop
movsb
or
fwait
sbb
push
cmc
dec
sbb
shll
push
mul
sbb
lock
bound
loopne
inc
and
out
sbb
mov
nop
push
dec
stos
je
arpl
xchg
push
push
sbb
jne
sarl
testl
cld
in
dec
int
fdivl
fwait
mov
dec
mov
shr
cmpsb
push
or
test
fdivl
bound
dec
out
into
xchg
lock
fdivl
jno
dec
jle
cmp
or
jecxz
add
xchg
gs
fwait
cmp
lret
sub
imul
mov
mulb
xor
sbb
sbb
test
xchg
pop
fsubs
xor
adc
lahf
scas
mov
in
push
pop
test
push
mov
xlat
dec
jne
cmp
cmp
insl
pop
loope
inc
popl
ficoml
lds
clc
or
sub
in
rcr
pop
xor
out
inc
fsts
test
imull
adc
mov
dec
icebp
pushf
cmpsb
push
dec
xor
add
and
nop
xor
jb
loopne
jecxz
icebp
xchg
shrl
sbb
int3
test
data16
or
mov
jb
stos
loopne
ds
mov
add
dec
push
mov
out
or
push
sbbl
aam
aam
adc
pop
int3
std
fldl
lea
xchg
out
xor
mov
fcoms
jg
push
cmp
insl
push
rcrb
shrb
xchg
mov
add
rorl
shl
out
xchg
nop
loope
cwtl
xor
pop
mov
mov
mov
add
pop
sub
xlat
push
imul
sub
ds
lret
push
lock
dec
mov
scas
mov
lret
push
jbe
dec
in
fiaddl
sub
push
aad
sbb
ljmp
push
pop
xchg
push
mov
add
adc
jno
mov
in
lahf
mov
popa
inc
cs
std
sahf
xchg
aas
incl
jl
inc
sub
jae
das
ds
iret
sub
das
das
mov
mov
mov
and
mov
and
sbb
lea
ud2
mov
popf
mov
push
js
jno
xor
jecxz
ret
fcmove
jl
test
mov
and
mov
bnd
pop
jge
dec
xchg
add
dec
hlt
cli
adcb
imul
repz
jae
addr16
dec
and
cmpsb
jae
bound
mov
es
je
rcrb
nop
inc
cmp
inc
jnp
add
and
pop
and
jo
mov
dec
std
sub
sbbb
test
xor
cmpsb
add
cmpsb
add
sti
sub
out
mov
push
ret
enter
dec
movsl
sti
movl
les
stos
pop
fcmovb
xchg
test
cwtl
pushf
dec
aam
xlat
mov
imul
test
leave
fiaddl
loop
lret
xor
dec
mov
push
rorl
test
fnstenv
sub
iret
cmpsb
mov
xor
push
std
in
in
fs
mov
push
xor
mov
lock
les
leave
xchg
jge
arpl
adc
enter
or
pusha
test
sub
mov
sar
xchg
iret
gs
fwait
mov
mov
stos
rolb
fmuls
and
mov
jmp
in
pusha
fs
push
lds
insl
mov
test
in
adc
xor
and
js
mov
fdivr
jmp
push
aaa
push
aad
ja
mov
dec
pop
pop
lfs
and
sti
mov
loope
and
add
js
push
fs
or
stos
inc
int
enter
js
sbb
data16
aaa
jl
mov
pop
sbb
rclb
sub
jno
lcall
adc
cmp
xchg
and
cmpsb
ror
jge
rolb
pop
push
push
movsl
xor
ja
xchg
ljmp
jbe
xor
jecxz
add
pop
rcll
xchg
xchg
xchg
cmpsl
jnp
push
fabs
dec
adc
int
inc
hlt
mov
jg
cmp
out
cmpsl
push
sub
movsb
jo
and
dec
test
and
mov
ret
and
cmp
push
insb
push
jae
in
mov
lea
push
call
mov
pop
pop
jge
dec
stos
pushf
aad
call
xchg
repnz
sub
push
fsubr
lea
push
add
xchg
dec
inc
loopne
pop
jg
add
jbe
sti
test
clc
mov
pop
fcompl
sub
movb
mov
les
lds
decb
adc
lret
les
jmp
xchg
scas
push
outsb
pop
jle
push
and
es
xchg
les
inc
cmp
pop
mov
frstor
pop
call
xor
outsl
in
daa
and
mov
in
jge
pop
out
push
cmp
ret
mov
cmpsb
and
or
cmp
push
or
jmp
enter
rcrb
lock
sub
fstpt
test
loop
es
jns
popa
mov
and
jg
push
call
ror
out
in
and
mul
mov
jae
mov
pop
aad
sub
push
add
mov
lods
mov
sbb
les
shl
sub
ret
inc
out
sahf
jns
pop
sbb
cs
in
out
push
mov
cmp
sar
xchg
daa
sbbb
cmp
addr16
mov
outsl
pop
sar
iret
dec
and
lock
sbbb
dec
dec
leave
jp
pop
xchg
negl
fwait
std
push
stc
fcom
jg
xchg
dec
xchg
fstpl
sbb
lret
jae
push
or
sbb
jp
pop
in
jmp
cmp
scas
std
and
cs
dec
dec
fidivl
ds
jecxz
cmp
or
mov
icebp
and
popf
mov
xchg
push
inc
dec
fwait
ljmp
sbb
fstpl
mov
or
test
add
xor
jbe
push
mov
ret
in
jno
xchg
test
cltd
int3
negl
or
cltd
xchg
pop
arpl
and
jne
jno
movsb
gs
mov
sti
mov
adc
pop
lods
cli
shrb
rorb
addl
inc
stos
push
inc
mov
cld
sub
nop
lods
mov
xchg
loopne
bnd
jp
dec
or
mov
pushf
insb
cmp
jle
enter
imul
dec
fsubp
sub
das
insb
ret
repnz
xchg
vcvtdq2pd
movb
pop
leave
xchg
xchg
xor
in
stos
cmp
nop
xchg
mov
iret
aaa
mov
mov
push
push
hlt
push
shl
push
vpsrad
adc
adc
cld
orl
xor
orl
shr
xorl
shl
adcl
or
movzbl
sbb
mov
mov
mov
and
movl
sub
mov
neg
mov
xor
shr
negl
shl
or
subl
push
lea
sbbl
push
lea
orl
push
call
and
mov
cmpl
jb
jmp
push
push
pushl
pushl
call
mov
xor
shr
shl
or
push
lea
push
mov
sub
mov
shrd
shr
cmpl
jg
xor
add
mov
sub
imul
jmp
push
push
push
call
mov
mov
movl
xor
addl
xor
or
andl
lea
push
shl
movl
call
mov
sbb
mov
sub
xor
shl
adc
shr
or
mov
sub
push
sub
lea
push
orl
mov
inc
mov
incl
shrd
shr
or
mov
mov
sbbl
xor
shl
xor
movl
or
adcl
lea
push
call
and
mov
or
mov
cmpl
jl
mov
and
xorl
jmp
pushl
call
xor
shl
shr
or
addl
jmp
xchg
adc
inc
adc
xchg
popa
aaa
repnz
cmp
adc
addl
outsb
adc
xor
imul
xchg
cmp
sti
lea
cwtl
loopne
xchg
push
out
push
xchg
or
jp
pop
cmp
shll
push
aas
jbe
adc
mov
stc
dec
inc
sub
adc
inc
xchg
add
mov
sub
sbbb
push
lods
das
jbe
sbb
shrb
mov
out
adc
xor
lret
inc
or
cmp
and
cwtl
ljmp
in
lds
xchg
mov
imul
jecxz
push
xor
mov
mov
and
mov
inc
jmp
test
aad
xchg
jg
add
add
fsub
and
cmp
push
dec
push
lcall
xchg
dec
mov
jnp
jb
and
xchg
fst
out
xchg
shl
addl
push
jb
and
xchg
fnsave
xchg
add
fs
out
dec
repz
ret
push
cltd
iret
dec
xchg
mov
pop
sbbb
stmxcsr
cmp
ret
xor
push
cmp
movsb
fcmovbe
std
sub
xchg
lcall
loopne
loopne
ret
or
push
and
jp
add
leave
mov
inc
pop
repnz
insl
xlat
fdivs
sbb
stos
std
je
sub
stc
and
jae
hlt
adc
shrb
int
xchg
out
xchg
sahf
stos
fwait
and
stos
movsb
repz
stos
mov
xchg
pop
sbbl
fucomp
enter
sarl
xor
adc
pop
sbb
fiadds
scas
pop
jp
mov
decb
mov
pop
inc
add
lods
call
fwait
das
jle
out
mov
es
movsb
cltd
xorb
push
xor
jbe
lret
mov
jae
das
mov
adc
loope
jmp
invd
add
ljmp
jecxz
and
mov
add
adc
xchg
insl
dec
sahf
jbe
imul
mov
jp
cmp
aam
test
popf
push
lods
test
shl
out
mov
lret
hlt
cmpsl
outsb
jge
or
cmp
xchg
or
test
pop
sar
outsl
test
inc
adc
inc
das
sub
inc
jmp
push
mov
ret
movsb
lret
jmp
add
test
or
or
adc
shll
push
test
dec
mov
or
xchg
pop
mov
and
inc
aaa
aas
cmp
pop
fwait
insl
sbb
lock
or
out
pushf
rcl
xchg
sub
sbbb
pop
in
aam
lds
out
add
push
jo
ljmp
aam
and
std
cltd
xchg
pop
add
push
das
and
mov
push
xchg
mov
dec
xor
or
int3
into
jp
xchg
sub
fcmovnu
sub
mov
call
inc
xchg
outsl
adc
or
pop
push
sti
xchg
push
mov
dec
fucomip
ljmp
cs
sub
shrb
dec
jbe
je
ret
test
roll
aas
push
mov
inc
das
inc
loopne
mov
scas
ds
shlb
xor
and
and
enter
stos
or
mov
mov
jmp
mov
adc
lea
mov
sub
sbb
dec
imul
xchg
pop
mov
pop
testl
jno
out
push
push
push
fistps
popa
jo
out
jb
lret
loop
push
cs
cmpsl
add
jb
iret
lahf
or
jmp
outsb
test
fcompl
or
add
cmp
jo
insb
xor
test
add
addr16
xor
rolb
fstpt
shr
adc
sub
or
jg
lar
int3
jp
sbb
xchg
add
les
inc
jns
xchg
jae
subb
cmpsl
push
gs
mov
int
sub
shll
dec
jno
stos
rcl
jns
ficompl
in
popf
out
int
pushf
daa
push
lcall
mov
push
dec
je
jp
test
add
rorl
jmp
out
shrb
and
test
mov
dec
xorl
outsl
outsb
pop
and
pushf
or
xchg
enter
xchg
and
int3
sub
mov
arpl
push
or
fimuls
in
gs
ficomps
test
mov
sub
push
pop
cmp
and
xlat
push
fucompp
dec
mov
lret
inc
fistpl
aad
js
sbb
pop
add
pop
adc
jnp
inc
dec
and
and
sub
lahf
mov
daa
mov
testb
xchg
cmp
sahf
scas
lds
push
sub
loopne
subl
lods
mov
or
mov
outsb
fucompp
inc
xor
sbb
push
sub
sbb
inc
stos
fsubp
mov
je
jecxz
fs
or
cmpsl
fstps
and
jg
mov
cwtl
dec
push
mov
js
pusha
add
pop
xor
xchg
sar
jne
cltd
jp
push
stc
add
add
jnp
stc
lret
xchg
mov
addr16
das
cmc
jp
or
xchg
push
insb
test
repz
testb
int3
lea
mov
add
int
inc
repz
push
es
adc
push
rolb
fistpl
inc
repnz
addb
into
lahf
and
mov
movb
xor
inc
pop
daa
sarl
cmp
pusha
cmpsl
mov
sarb
cmpsb
lea
sahf
mov
aas
stos
adc
js
sbb
out
adc
arpl
cmp
mov
gs
jbe
sub
stos
adc
xchg
push
unpcklps
jmp
fmull
pushf
shl
or
rorb
or
adc
cmp
xchg
cmp
imul
sti
cmpsl
push
cld
out
stos
jne
push
mov
inc
nop
popa
adc
nop
into
pop
inc
fcos
inc
js
pushf
fadds
mov
call
sub
add
xchg
or
arpl
sub
sbb
stc
cmp
loope
and
xchg
icebp
test
or
rorb
xor
aad
pop
mov
mov
fildl
cli
cmc
sbb
adc
mov
imul
fsubr
in
xor
loope
mov
xor
xchg
notl
xlat
outsb
mov
xchg
mov
aam
jl
mov
repz
cs
jno
cmp
mov
es
lea
rorl
sbb
scas
lea
jns
and
ja
jg
lock
inc
sub
push
inc
iret
fsubs
sbb
insb
std
cltd
enter
rcrl
mov
add
xor
ljmp
jl
sub
inc
rclb
movsb
sub
push
dec
xor
inc
pushf
sbb
push
adcl
mov
sub
mov
shrd
and
shr
mov
mov
adc
xor
xor
subl
or
shl
mov
sub
mov
movl
shrd
shr
adcl
mov
mov
xor
jmp
adc
sahf
dec
push
rcrl
ret
scas
adc
jno
jb
push
jae
sti
fisttpl
push
test
inc
and
lret
add
std
cmpsb
ds
call
add
lret
test
push
jle
xchg
dec
ja
mov
inc
test
in
stos
and
push
imul
adc
dec
jge
lods
pop
test
mov
pusha
push
cmpb
dec
in
popa
jmp
das
jbe
pop
mov
in
xor
les
xor
mov
into
mov
ffree
cmp
sti
lea
mov
inc
xor
in
imul
xchg
cmp
int
sbb
fsts
or
jne
xor
sbb
and
mov
outsb
pop
lret
out
and
mov
inc
add
aad
adc
mov
movsb
and
repnz
adc
scas
mov
andb
fcompl
sbb
pusha
movsb
mov
aam
mov
insb
sub
loop
push
in
fwait
ret
push
out
inc
mov
clc
add
or
fadds
lahf
push
dec
cmpsb
inc
lcall
push
and
enter
cmp
xchg
adc
fisubrl
sbb
adcb
push
or
sub
fimuls
xor
movsb
xor
ret
jge
xor
xor
scas
add
cmpsb
mov
lea
jp
cmp
ds
add
adc
rcl
and
notl
jbe
cmp
jns
incl
dec
in
imull
mov
mov
push
je
sub
cmp
sbb
jmp
xchg
xor
xor
outsb
pushl
out
mov
mov
add
hlt
hlt
xor
cmp
in
dec
push
insb
fisubs
int3
out
mov
or
hlt
cmp
push
push
cmpsl
push
jle
lods
loop
and
inc
scas
daa
push
jg
loope
xchg
mov
or
sahf
push
pop
je
xchg
mov
ljmp
sub
and
add
jbe
xor
jle
jns
test
lods
xor
in
mov
rcll
xchg
mov
xor
mov
mov
js
dec
mov
sti
mov
mov
add
sub
insl
imul
cmp
in
in
out
repz
xor
mov
cmp
test
jp
pop
cmp
mov
or
push
sar
mov
adc
cmp
out
mov
mov
mov
sbb
fwait
cmp
mov
sub
mov
scas
pusha
pushf
jmp
jg
mov
and
test
clc
subb
sbb
and
lret
ret
je
inc
sahf
rclb
jns
inc
insl
xor
jl
movsb
into
inc
push
jnp
aaa
xor
mov
sub
out
cmpsb
inc
jno
jp
scas
out
xchg
rcrl
and
pop
mov
or
mov
mov
inc
mov
aad
add
cmp
je
sbb
dec
lea
jno
xchg
in
icebp
incl
lret
xchg
xor
lret
mov
or
imul
das
mov
pop
mov
xchg
sub
jmp
or
push
bound
test
and
out
jecxz
jg
leave
mov
pusha
mov
hlt
fstl
or
and
in
out
cmp
cmp
rcrb
fnstenv
xchg
stc
iret
push
cmpsl
in
insl
xor
xor
push
inc
pop
xor
sbb
push
jbe
test
mov
mov
imul
addl
cmpsl
and
js
cmc
mov
fs
mov
fucomip
push
sub
std
mov
sbb
mov
fcoml
fstp
cwtl
cmpsb
test
adc
addb
in
sbb
mov
mov
fcmovb
lret
jle
jo
pop
cmp
gs
mov
cli
call
jl
sbb
pop
leave
sti
mov
out
int3
push
pusha
lods
lret
inc
cmp
push
std
jae
push
push
gs
daa
ficomps
sti
aaa
push
adc
shrb
jb
insl
inc
scas
pusha
loopne
fdivrs
out
xchg
movsl
leave
jne
push
pop
add
int3
stos
jecxz
pop
or
mov
in
sarl
fsubs
pop
loope
xor
mov
mov
leave
jbe
pusha
adc
aas
xchg
and
movsb
stc
xor
sbb
negl
repz
jmp
and
adc
and
cmp
fistpl
and
test
mov
adc
pop
leave
out
sbb
xchg
ret
cmpsl
and
jns
push
push
mov
ja
dec
les
xor
call
push
je
popf
je
test
mov
fwait
sbb
adc
push
bsr
mov
add
andb
inc
andl
cmp
cmp
sbb
sbb
lods
aaa
mov
mov
in
fildl
add
lods
push
sbb
sti
mov
fs
and
aaa
out
mov
dec
xchg
idivb
gs
jns
shrl
jl
sbb
jecxz
aad
pop
hlt
fcom
imul
mov
iret
cmpsl
inc
repnz
cltd
rorb
mov
push
movsb
jl
ljmp
faddl
inc
mov
pop
xchg
push
dec
js
jl
stos
mov
or
and
sahf
lret
mov
sub
out
mov
sarb
mov
jge
mov
or
into
pop
jnp
lock
es
cmp
mov
or
clc
jns
xlat
or
aaa
dec
movsb
jmp
pop
and
leave
jae
xor
int
aam
js
jb
clc
in
or
dec
xchg
icebp
into
fistpll
dec
xchg
int3
jge
sbb
push
je
in
div
add
add
sbb
lahf
movsbl
nop
xorl
inc
notb
mov
dec
mov
adc
stc
insl
daa
call
mov
pop
mov
mov
int3
mov
in
fstpt
lods
xchg
in
rcrl
fisttps
outsb
or
adc
xor
popf
adc
shlb
lock
or
sub
mov
jg
or
cmp
js
jp
or
xlat
cmp
mov
rolb
subl
jle
in
cmp
aas
lds
fldcw
cmp
mov
mov
mov
dec
jmp
enter
sub
cltd
jge
inc
popa
enter
mov
fidivs
or
fwait
mov
test
mov
sub
in
sbb
xor
sub
sahf
cwtl
cld
cmpsl
mov
iret
push
jl
in
fnstsw
xor
mov
adc
jne
idiv
adc
jns
scas
jp
popa
inc
cmp
xor
cmp
adc
lcall
push
sarb
shr
imul
fidivrs
jne
arpl
ficoms
addr16
mov
aaa
and
push
and
es
jns
sbb
pop
add
aaa
push
imul
xor
subl
or
add
lea
adcl
push
xorl
shl
call
mov
cmpl
jg
sub
and
jmp
pushl
push
call
mov
shl
xor
shr
or
push
lea
sub
push
cmpl
jg
xorl
jmp
push
pushl
pushl
push
push
push
call
mov
mov
shrd
shr
mov
mov
sub
xor
mov
adc
shl
mov
mov
mov
sbb
xor
or
mov
and
shrd
adcl
shr
adc
mov
mov
orl
xor
xor
andl
or
cmpl
jg
jmp
call
add
mov
shl
mov
shrd
shr
mov
adcl
mov
xor
xor
sbbl
or
notl
add
lea
push
shl
xorl
call
mov
xorl
mov
cmpl
jg
jmp
push
pushl
call
xor
shr
jmp
notl
notb
sub
mov
push
pop
cli
adc
scas
adc
ucomiss
pop
lods
scas
mov
or
push
xchg
int3
fisubs
jecxz
insb
lea
cmp
push
xor
add
in
lods
adc
cmc
xchg
mov
ret
lods
and
pop
or
lret
sbb
dec
dec
jge
mov
in
inc
outsl
sub
icebp
cli
xchg
sahf
imul
fisubl
pop
sub
or
testl
dec
mov
fwait
clc
jl
push
mov
lds
push
mov
pop
jle
dec
fs
inc
in
and
push
jl
push
popf
xchg
adc
sub
jmp
mov
pusha
aas
aad
push
cmp
les
xchg
leave
adcb
dec
mov
std
sub
std
clc
adc
xor
xor
xchg
insl
pop
shll
out
lock
jmp
sub
add
xchg
and
pop
sub
ljmp
cwtl
hlt
jno
mov
pop
into
mov
repz
test
adc
fildl
fdivr
push
push
mov
mov
pop
pop
sbb
je
leave
iret
push
fildll
add
add
in
je
outsb
ds
xchg
insb
push
jge
cmp
cmpsl
xlat
sbb
cmp
push
dec
stos
cmp
arpl
and
adc
push
adc
jns
adcl
xchg
testb
negb
aad
cmp
std
inc
push
mov
inc
mov
mov
sbb
shl
or
mov
lea
push
cmpl
ja
and
jmp
push
push
push
pushl
call
mov
mov
shrd
shr
mov
mov
addl
xor
neg
xor
or
push
sbb
mov
movzbl
and
mov
mov
push
orl
pushl
subl
shl
call
lea
xor
add
add
push
add
mov
mov
cmpl
jbe
adc
or
jmp
push
push
push
call
shrd
shr
mov
mov
xor
xor
or
addl
push
adc
mov
push
adcl
pushl
subl
shl
call
cmpl
jge
sbb
jmp
pushl
pushl
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
sbbl
mov
rol
mov
adcl
xor
movl
mov
movl
cmp
movl
je
or
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
push
mov
sub
not
mov
cmpl
jb
jmp
push
call
mov
mov
sub
push
mov
mov
sbb
mov
adc
orl
orl
add
mov
mov
add
mov
cmpl
ja
sbb
inc
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
sub
mov
sbb
mov
cmpl
ja
or
jmp
push
push
push
call
orl
orl
lea
mov
mov
mov
not
mov
sbbl
add
neg
mov
mov
adcl
mov
mov
neg
shrd
cmpl
ja
or
jmp
push
push
push
pushl
push
call
shr
mov
mov
xor
xor
or
cmpl
jb
jmp
pushl
push
push
pushl
pushl
call
mov
movl
movl
movl
movl
movl
movl
xor
movl
movl
mov
add
movl
movl
cmpl
jge
adcl
adcl
jmp
pushl
push
push
call
movl
movl
movl
movl
movl
dec
movl
sbbl
movl
movl
movl
cmpl
ja
xor
add
sub
mov
jmp
push
push
push
call
movl
movl
movl
mov
shl
mov
andl
push
addl
push
push
push
andl
call
xorl
mov
xorl
mov
mov
mov
add
xor
add
mov
mov
sub
sub
mov
sbb
lea
and
mov
cmpl
jg
jmp
pushl
pushl
push
call
mov
or
and
mov
or
xor
cmp
movl
jne
not
mov
mov
shrd
cmpl
jbe
adc
jmp
push
pushl
push
pushl
pushl
call
shr
mov
mov
shl
xor
xor
subl
or
mov
mov
cmp
movl
jne
mov
add
mov
neg
xor
xor
or
sbb
mov
cmpl
jbe
jmp
pushl
call
mov
mov
shrd
mov
mov
xor
shr
cmpl
jbe
xor
jmp
push
push
call
mov
xor
or
shl
sub
mov
andl
mov
mov
add
adc
mov
and
mov
adc
mov
shrd
negl
shr
sub
mov
mov
cmpl
jg
add
jmp
pushl
pushl
pushl
pushl
pushl
call
xor
shl
xor
or
mov
mov
subl
shrd
shr
neg
mov
cmpl
jbe
adcl
jmp
pushl
pushl
pushl
call
mov
mov
xor
xor
or
shl
incl
lea
mov
cmpl
jl
dec
jmp
pushl
call
mov
shrd
shr
mov
mov
mov
adc
xor
cmpl
jbe
and
jmp
call
mov
xor
or
shl
imul
mov
dec
mov
sbbl
shrd
mov
or
mov
xorl
xor
orl
shr
mov
mov
addl
xor
subl
or
shl
sub
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
jb
jmp
pushl
push
call
mov
shrd
mov
mov
xor
shl
xor
or
shr
subl
mov
sub
mov
mov
adcl
mov
subl
shrd
adcl
shr
add
mov
cmpl
jg
sbb
jmp
pushl
push
call
mov
mov
xor
xor
or
shl
orl
imul
addl
sub
jmp
mov
or
mov
mov
cmpl
jl
or
jmp
push
pushl
call
mov
shrd
mov
mov
xor
shl
addl
xor
adcl
or
andl
shr
cmpl
jg
jmp
pushl
push
push
push
call
mov
mov
mov
mov
shrd
shr
mov
cmpl
jg
mov
adc
or
jmp
push
pushl
pushl
pushl
pushl
push
call
mov
mov
xor
xor
or
shl
mov
mov
adc
add
add
xor
xor
adc
mov
mov
xor
add
adc
shrd
or
shr
movzbl
adc
mov
mov
xor
sbbl
shl
xor
movzbl
adc
or
neg
mov
add
movl
mov
mov
sub
imul
mov
cmpl
ja
or
jmp
push
pushl
pushl
pushl
call
mov
movl
mov
movl
mov
movl
adc
mov
xor
mov
cmpl
jbe
jmp
push
push
push
pushl
call
mov
shrd
shr
mov
mov
xor
shl
adcl
xor
or
movzwl
sbb
mov
lea
cmpl
jbe
and
jmp
pushl
push
pushl
pushl
call
mov
mov
mov
shrd
shr
mov
adcl
mov
subl
shl
adc
mov
xor
xor
sbbl
or
sbb
mov
or
mov
xor
cmpl
jl
jmp
push
push
push
call
mov
mov
shrd
shr
mov
mov
xor
shl
xor
adc
or
adcl
lea
mov
or
mov
cmpl
ja
add
jmp
pushl
pushl
push
call
mov
mov
shrd
shr
mov
mov
subl
shl
and
mov
xor
adcl
xor
xorl
or
cmpl
jle
inc
decl
jmp
push
call
mov
mov
or
mov
mov
shrd
notl
shr
mov
sub
mov
xor
addl
shl
addl
xor
sbb
or
lea
mov
mov
addl
mov
shrd
shr
xor
add
mov
sub
xor
mov
mov
addl
xor
shl
adc
mov
xor
addl
or
mov
sbb
mov
or
add
cmpl
jle
sub
negl
jmp
push
push
call
mov
mov
shrd
shr
mov
cmpl
jge
neg
jmp
pushl
push
push
call
mov
xor
xor
or
lea
mov
cmpl
jge
jmp
push
push
push
pushl
push
push
push
pushl
push
pushl
push
push
push
pushl
call
mov
shl
mov
shrd
shr
mov
mov
addl
xor
orl
xor
subl
or
xor
mov
shl
incl
mov
adcl
mov
orl
mov
addl
or
xor
mov
mov
andl
shrd
shl
sbbl
shr
mov
mov
or
xor
mov
xor
orl
or
mov
dec
orl
not
xorl
and
xor
or
xor
mov
xor
and
mov
cmpl
ja
sub
jmp
push
push
push
call
mov
xor
or
mov
mov
shrd
shr
mov
sbb
mov
mov
adc
mov
mov
xor
xor
xor
adc
mov
addl
xor
andl
shl
subl
mov
addl
or
mov
mov
cmp
je
xorl
mov
xor
add
mov
sub
and
sub
cmpl
ja
add
jmp
pushl
push
pushl
push
push
push
call
mov
mov
mov
shl
xor
mov
mov
mov
subl
xor
adcl
xor
sbbl
shrd
shr
xorl
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
xor
xor
mov
sub
xor
push
push
movl
movl
mov
and
movl
movl
mov
mov
and
sbbl
mov
xor
inc
and
and
add
cmpl
jle
xor
sub
jmp
pushl
call
xor
mov
movl
movl
mov
cmpl
jb
xor
jmp
pushl
call
xor
sub
mov
imul
xor
mov
movzbl
sub
mov
div
mov
xor
or
sub
xor
sub
mov
cmpl
jl
sbb
jmp
push
pushl
pushl
call
movl
movl
movl
movl
movl
movl
sbbl
mov
xor
or
adc
mov
sub
imul
xor
add
mov
sub
or
add
or
and
cmpl
jge
xor
xor
mov
and
and
jmp
push
call
sub
mov
sub
add
mov
mov
orl
sub
or
add
cmpl
jg
mov
sbb
mov
adc
jmp
pushl
call
mov
xor
div
xor
mov
xorl
sub
mov
andl
add
sbbl
mov
movl
movl
not
movl
or
mov
sbb
xor
and
add
add
mov
xorl
xor
subl
div
and
mov
or
sub
cmpl
jl
jmp
push
push
push
push
call
mov
movl
movl
movl
movl
mov
mov
orl
xor
cmpl
ja
jmp
pushl
pushl
push
pushl
push
pushl
call
xor
push
pop
div
mov
xor
div
mov
or
cmpl
jle
or
jmp
pushl
push
push
push
push
call
sub
mov
movl
mov
mov
xor
sbbl
div
cmpl
jg
jmp
push
push
call
imul
xor
xor
imul
xor
mov
movl
movl
movl
mov
and
mov
orl
xor
adcl
div
mov
imul
add
xor
and
mov
sbbl
sub
mov
sbbl
movl
mov
mov
sbb
and
xor
and
sub
or
cmpl
ja
jmp
push
pushl
call
xor
mov
movl
movl
movl
mov
and
or
add
xor
add
or
andl
or
dec
sub
cmpl
jg
inc
mov
sub
jmp
pushl
call
mov
movl
movl
movl
and
mov
shr
sub
cmpl
ja
mov
and
jmp
push
push
call
xor
mov
lea
push
call
mov
or
or
mov
add
or
add
and
lea
adc
mov
and
movl
movl
movzwl
adc
movl
sub
movl
mov
sbb
mov
movl
subl
movl
movl
mov
mov
sub
imul
movl
mov
orl
mov
and
sub
mov
lea
adc
mov
mov
cmpl
jbe
sub
adc
jmp
push
push
pushl
pushl
call
mov
mov
imul
and
imul
or
mov
lea
mov
movzbl
xor
movl
movl
movl
and
movl
or
mov
mov
mov
sub
or
mov
mov
andl
xor
xorl
xor
adcl
mov
subl
call
xor
or
or
mov
mov
mov
mov
cmpl
jle
xorl
jmp
pushl
pushl
push
call
mov
xor
xor
mov
call
or
cmpl
jle
jmp
push
push
pushl
call
or
mov
mov
xor
xor
mov
call
or
mov
cmpl
jb
jmp
push
call
mov
mov
mov
xor
xor
mov
mov
addl
mov
mov
mov
andl
call
mov
adcl
or
mov
or
subl
push
adcl
push
andl
push
addl
push
addl
call
mov
mov
cmp
movl
jne
mov
mov
xor
xor
mov
call
xor
mov
mov
sub
mov
adc
mov
addl
xor
xor
andl
mov
call
or
movl
or
add
mov
adc
mov
xorl
xor
xor
mov
adcl
call
sub
mov
mov
xor
mov
mov
mov
sbb
mov
mov
xor
subl
xor
mov
mov
xorl
mov
decl
call
adcl
or
movl
mov
andl
or
push
subl
push
push
addl
push
xorl
call
mov
movl
jmp
jmp
cmpl
jg
add
jmp
push
call
lea
mov
mov
movl
mov
xor
cmpl
ja
jmp
push
call
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
movl
xor
xor
mov
sbbl
call
neg
mov
mov
adcl
mov
xorl
mov
andl
xor
adcl
xor
mov
movl
call
or
and
or
cmpl
jge
orl
movzbl
xor
jmp
push
push
push
call
mov
mov
xor
xor
movl
mov
subl
call
sbb
mov
sub
mov
xorl
mov
mov
subl
xor
subl
xor
mov
mov
mov
mov
incl
mov
call
sbb
mov
addl
or
sub
mov
or
push
subl
push
addl
push
push
sbbl
call
mov
cmp
movl
je
cmpl
jbe
jmp
push
push
call
mov
mov
xor
xor
mov
call
mov
mov
cmpl
ja
jmp
push
pushl
push
call
mov
mov
xor
xor
mov
call
or
or
sbbl
mov
imul
cmpl
jle
not
decl
jmp
push
pushl
push
pushl
push
pushl
call
add
mov
mov
mov
jmp
movl
jmp
cmpl
jb
xorl
jmp
push
call
mov
mov
xor
xor
mov
call
mov
xor
mov
mov
mov
xorl
xor
addl
xor
adcl
mov
call
subl
or
or
adc
mov
mov
xor
adcl
xor
mov
call
adc
mov
cmpl
jb
jmp
pushl
call
mov
mov
mov
xor
xor
mov
mov
mov
orl
call
or
or
mov
or
push
push
negl
push
push
subl
call
movl
mov
jmp
movzbl
adc
mov
mov
and
mov
xor
andl
xor
movl
mov
addl
call
add
mov
mov
mov
mov
sub
mov
cmpl
ja
movl
jmp
pushl
push
call
mov
xor
xor
mov
call
or
or
mov
movl
jmp
mov
cmpl
jl
jmp
pushl
push
push
call
mov
xor
xor
mov
call
mov
mov
sub
mov
xor
or
or
mov
xor
xor
subl
mov
call
xor
or
xorl
or
xor
mov
mov
add
mov
xorl
xor
sbb
mov
sub
sub
sbb
mov
xor
xor
or
xor
movzwl
and
add
cmpl
jge
jmp
push
call
mov
movl
movl
movl
movl
movl
movl
and
movl
xor
movl
cmpl
jl
mov
mov
and
adc
jmp
pushl
pushl
pushl
push
pushl
pushl
push
push
call
mov
add
mov
sub
cmpl
jbe
jmp
push
push
push
push
call
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
dec
or
sbb
mov
cmpl
jg
orl
jmp
pushl
pushl
call
xor
mov
sub
mov
mov
sub
cmpl
jle
xor
jmp
push
push
pushl
call
mov
xor
mov
div
mov
xor
sbbl
div
orl
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
and
sub
push
push
push
mov
pushl
pushl
call
test
je
movl
movl
movl
push
movl
adc
mov
andl
mov
andl
push
addl
push
push
adcl
call
push
subl
push
xorl
and
sbbl
and
push
push
orl
call
xor
xor
and
mov
cmpl
jbe
and
jmp
call
mov
xor
or
mov
xor
or
notl
mov
xorl
movl
movzbl
and
mov
movl
add
movl
movl
sub
movl
adc
movl
cmpl
jb
adcl
jmp
pushl
push
push
push
call
mov
mov
mov
mov
or
mov
or
mov
mov
sbb
mov
adcl
sub
mov
movl
sbb
mov
xor
xor
subl
and
sbbl
and
cmp
movl
jne
movl
cmp
movl
jne
sub
movl
sbbl
movl
adc
movl
cmpl
jl
sbbl
xor
jmp
push
push
pushl
pushl
push
pushl
call
movl
movl
mov
mov
sub
adc
mov
subl
imul
adcl
and
negl
imul
mov
addl
pushl
imul
incl
xor
mov
adc
mov
sbbl
div
xor
mov
adcl
xor
sbb
mov
sub
or
xor
sbbl
pushl
addl
pushl
call
andl
pushl
call
andl
movl
movzbl
sub
movl
cmpl
jge
negl
jmp
pushl
push
push
push
call
movl
movl
movl
movl
mov
mov
sub
mov
mov
add
mov
adc
cmpl
jge
and
jmp
pushl
push
pushl
push
pushl
push
call
mov
add
adc
and
mov
and
orl
mov
movl
decl
movl
addl
movl
xorl
movl
subl
dec
cmp
jne
movzwl
or
movl
mov
xorl
mov
movl
addl
mov
call
xor
lea
mov
mov
sub
sub
mov
lea
adc
mov
mov
cmpl
jbe
jmp
pushl
push
push
call
mov
mov
mov
xor
shl
shr
or
xor
mov
add
mov
or
mov
and
mov
xor
or
xor
or
sub
sub
mov
cmpl
ja
andl
jmp
push
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
subl
xor
sbbl
xor
xorl
or
cmpl
ja
subl
jmp
push
push
pushl
push
pushl
pushl
call
mov
push
pushl
lea
push
shl
call
adcl
lea
subl
push
mov
mov
andl
lea
andl
push
adcl
mov
subl
lea
notl
mov
mov
orl
mov
push
xorl
call
xorl
push
addl
push
pushl
addl
call
mov
cmpl
ja
mov
xor
jmp
push
pushl
push
push
push
push
call
mov
mov
mov
shr
shl
or
mov
mov
sub
sub
mov
xor
xor
mov
or
xor
mov
lea
mov
cmpl
jle
adc
jmp
pushl
push
push
call
lea
mov
mov
sub
lea
xor
sbb
movl
movl
mov
sub
movl
movl
orl
mov
adcl
mov
sub
add
mov
mov
movl
adc
xor
cmpl
jb
and
jmp
push
push
push
call
xor
and
mov
and
mov
movl
movl
movl
movl
sbb
movl
add
movl
andl
mov
sub
mov
adc
mov
cmpl
jl
and
jmp
push
call
mov
push
push
or
or
push
addl
push
xorl
call
mov
negl
mov
sub
mov
movl
sbb
mov
mov
cmp
jne
cmp
je
and
movl
movl
movl
xor
add
mov
sub
xor
movl
mov
mov
sub
xor
mov
mov
mov
cmpl
jb
jmp
pushl
pushl
pushl
push
pushl
call
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
and
movl
sub
movl
cmpl
jl
add
jmp
pushl
call
movl
movl
movl
mov
mov
push
push
xor
adcl
xor
push
push
call
addl
mov
andl
mov
push
push
push
sbbl
push
call
cmpl
jl
subl
jmp
call
mov
mov
push
push
push
push
andl
call
mov
sbb
mov
mov
mov
andl
add
movl
mov
adc
mov
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
addl
xor
adcl
shld
mov
and
shl
mov
mov
sbb
mov
sbbl
xor
subl
xor
mov
movl
cmp
movl
jne
movl
cmp
je
mov
mov
cmp
je
cmpl
jl
sub
jmp
pushl
call
mov
mov
mov
shl
xor
mov
mov
cmpl
jle
and
jmp
pushl
push
push
call
mov
xor
xor
shrd
xor
shr
or
or
mov
movl
mov
movl
cltd
movl
cmp
movl
jne
cmp
movl
jne
movzwl
add
movl
cmpl
jge
mov
add
jmp
push
push
call
movl
mov
mov
mov
xor
orl
shld
adcl
shl
movl
mov
mov
xor
sbbl
xor
mov
cmp
jne
movl
cmp
movl
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
addl
xor
and
shl
ret
xor
xor
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
negl
subl
movl
cmpl
movl
je
cmpl
jbe
xor
jmp
push
pushl
pushl
pushl
push
push
push
pushl
push
push
push
push
pushl
push
call
add
mov
mov
pop
pop
pop
leave
ret
mov
mov
ret
orl
mov
mov
notl
or
mov
movl
jne
mov
sbbl
mul
ret
xorl
push
mul
and
mov
add
mov
mull
add
mov
mul
add
pop
ret
incl
push
mov
sbb
push
mov
andl
or
movl
jne
mov
mov
sub
imul
mov
mov
xor
div
andl
mov
and
mov
movl
div
not
mov
jmp
and
mov
andl
mov
movzbl
xor
mov
cmpl
jge
jmp
pushl
pushl
call
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
