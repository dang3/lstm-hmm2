push
mov
sub
mov
adc
push
adc
push
movl
cmpl
je
cmpl
ja
jmp
push
push
call
mov
dec
mov
jmp
push
andl
mov
inc
mov
cmpl
jg
jmp
push
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
mov
add
xor
andl
mov
inc
mov
cmpl
jge
jmp
pushl
push
push
call
cmpl
jb
mov
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
sbb
mov
sub
mov
mov
inc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
xor
movl
orl
mov
xor
sub
add
and
mov
mov
jmp
lret
sbb
or
sub
lods
sub
pop
addl
xor
je,pn
jo
addr16
jae
dec
aam
clc
imul
insb
pusha
into
pop
push
cmp
dec
jle
mov
sub
push
pop
in
inc
int3
ret
in
xchg
sub
xchg
xor
pusha
mov
aad
insb
fcoml
and
aaa
jb
shrb
lock
xor
and
cmpl
fwait
dec
or
jecxz
imul
xor
push
or
lods
push
shll
cld
imul
jno
add
into
mov
rolb
sahf
mov
pushf
xor
ss
add
aam
sub
jmp
fs
xor
push
mov
stos
jge
lahf
lcall
cli
inc
insl
cmc
loopne
leave
aaa
call
dec
pop
add
and
movsb
jge
mov
int3
addl
dec
in
je
adc
mov
dec
stos
cmpsl
lea
fildl
shll
fsts
mov
call
out
fstpl
fbstp
int3
jae
or
mov
decb
mov
mov
push
movb
lock
scas
add
push
pop
sbb
push
repnz
es
push
imul
scas
ljmp
in
lret
push
add
movsl
and
push
dec
add
jg
or
or
xlat
aad
mov
cmp
rorl
jae
in
arpl
aad
and
dec
xlat
fcmovne
mov
fisttpll
aaa
mov
fistps
js
in
sbb
insb
stc
xchg
pop
outsb
sbb
mov
jmp
out
push
xchg
das
pop
das
push
imul
xlat
inc
mov
jbe
and
jmp
pop
xchg
aas
xchg
frstor
ret
cli
fisttps
jecxz
insb
add
cmpsb
jp
xor
movsb
inc
jle
mov
xchg
mov
movsl
sbb
push
and
sbb
and
test
or
sarb
insl
adc
outsb
or
negl
rol
call
mov
dec
ljmp
in
add
adc
mov
and
jb
mov
roll
adc
or
dec
push
repnz
xchg
negb
jge
icebp
xchg
or
cld
inc
hlt
cmovs
pop
and
adc
in
lods
popf
loop
xchg
sbb
aaa
cmp
pop
cmp
mov
mov
or
and
xor
mov
aaa
repz
aam
push
pop
cmp
cmp
out
aas
xchg
mov
cmp
lods
in
aam
mov
or
adc
and
xor
dec
pop
xor
xorl
jecxz
enter
xchg
push
sub
in
cs
subl
xor
xchg
jbe
xchg
mov
jo
sub
shll
jg
lahf
mov
xor
jp
fisubs
pop
rorb
cli
jnp
jg
insl
mov
out
adc
jb
xchg
pushf
push
dec
pop
insb
xlat
xor
jae
jge
add
cmc
xchg
insb
jmp
fdivrl
outsb
js
mov
daa
ljmp
pop
push
je
cwtl
xchg
jns
fnstsw
mov
jle
inc
mov
xchg
and
xor
testl
mov
aad
dec
mov
mov
xor
loop
xchg
xchg
lea
cld
sub
into
jae
sub
cmp
mov
lds
lret
fdivrl
mov
popa
pusha
vminss
pushf
lsl
mov
jo
in
popa
pop
std
rolb
sahf
or
xor
nop
loope
xchg
pop
sbb
mov
add
mov
or
mov
orb
sub
in
jns
inc
out
mov
adc
add
lea
imul
and
mov
xchg
push
jb
push
bnd
ret
les
mov
out
jo
shll
test
push
inc
push
xchg
push
fsts
insb
rep
aam
ljmp
je
movups
pop
jnp
add
iret
xchg
fwait
dec
jne
loop
push
mov
cwtl
in
aaa
hlt
hlt
pop
xchg
rclb
mov
imul
add
inc
cmpsb
leave
scas
cmp
mov
pop
push
cmp
pushf
sahf
push
insl
cmpsl
cmp
cmp
mov
sub
inc
adc
mov
loope
lret
addr16
es
cmp
jmp
mov
adc
cmp
fcomps
or
fbstp
mov
or
jnp
xor
ja
icebp
ss
cwtl
sub
adc
nop
mov
std
jecxz
cmp
das
push
lods
xor
push
or
xchg
cmc
push
push
faddl
cs
arpl
jae
and
and
xor
jne
lds
ljmp
in
repz
loope
mov
sbb
jnp
xor
fldenv
mov
aam
jno
rol
pop
movb
mov
inc
cmp
xchg
dec
enter
adc
dec
ret
jns
inc
outsl
cli
in
jl
dec
add
pop
push
fdivrs
test
insb
or
out
adc
and
add
cmpsl
out
and
aad
data16
ficoml
xchg
adc
mov
loopne
mov
add
dec
pop
loopne
xchg
sbb
mov
bound
fs
and
jle
push
xor
mov
movsb
ljmp
pop
adc
addl
iret
ljmp
ret
int
cmp
fistps
lahf
mov
sti
sbb
dec
or
pusha
mov
mov
pushf
jg
popa
ret
lds
call
xchg
test
stos
scas
lret
scas
test
fidivrs
mov
insl
cmp
inc
pop
cmc
or
mov
mov
xchg
je
insl
jl
pop
cld
jg
cmp
mov
push
ljmp
fistl
add
xor
or
aam
adc
lods
mov
sbb
dec
pop
dec
arpl
js
cmpsb
cmp
sahf
pop
stos
push
shll
jae
xchg
mov
sub
cltd
pop
cltd
add
dec
ljmp
mov
jmp
aam
fimull
cli
cmp
cmp
cmp
es
stos
mov
push
xor
cmp
leave
mov
rorb
xlat
in
sbb
sbb
mov
ret
inc
and
adc
sbb
add
inc
push
rorl
mov
jg
mov
pop
test
cli
icebp
xor
sbb
in
xor
fdivrp
arpl
fiadds
ljmp
sbb
outsl
sub
es
in
pushf
daa
mov
repz
inc
in
gs
mov
adc
pusha
xor
ret
pop
cmp
add
loop
pop
push
outsl
jp
in
jnp
xor
daa
imul
cmc
mov
and
sub
scas
mov
fnsave
cwtl
sbb
lea
xchg
mov
je
out
fsubrp
addr16
test
arpl
test
xor
or
ret
push
lock
lock
pop
popf
mov
roll
add
int
pushf
mov
push
adc
inc
inc
cs
scas
sbb
fisttpl
aas
cmp
push
jnp
cmp
push
sub
mov
fdivrs
fisttpl
in
test
dec
stc
sub
xchg
lret
xchg
xlat
notrack
pop
outsl
imul
in
jae
lcall
xor
adc
decb
loope
or
repz
jle
int
mov
fdivl
mov
dec
int
cmpsl
mov
xchg
cli
xor
jns
push
pop
mov
les
cmp
push
jg
lock
push
call
sbb
iret
push
and
sbb
push
fwait
sub
ficompl
xlat
xchg
clc
sub
insb
mov
cmp
push
inc
test
dec
xchg
int
aas
ret
loopew
hlt
push
into
dec
insl
imul
adc
or
hlt
mov
movsl
incl
add
daa
fistps
sar
mov
sbb
mov
mov
out
pop
sbb
out
cltd
lock
mov
mov
outsb
dec
xchg
clc
shlb
scas
cmpsl
inc
movsb
pop
fstps
lahf
rolb
rolb
xchg
mov
lret
mov
add
sbb
jg
xchg
sbb
inc
pop
xor
insl
popf
add
fcoml
and
mov
fsubrl
aam
in
fsub
divl
aad
test
aaa
push
aad
mov
ficoms
mov
jl
ret
adc
adc
jp
push
cli
insb
mov
neg
sub
scas
arpl
dec
out
subb
ret
inc
outsb
loopne
and
push
pop
test
das
popf
dec
call
aad
dec
mov
aaa
popf
in
jbe
mov
pop
adc
inc
jecxz
lea
fstl
xchg
push
jo
push
push
pop
cs
movsb
mov
fucomi
lahf
or
fstpl
jno
call
fstpt
incl
or
xchg
call
lea
lret
lret
lds
loop
out
mov
scas
ds
scas
or
sbb
xchg
insl
in
mov
imulb
push
inc
add
arpl
jecxz
cmpsl
jge
cmpsl
sar
shl
out
xor
in
das
pop
fs
stc
inc
cwtl
pop
pop
test
out
rorl
lea
mov
inc
add
mov
pop
or
lcall
inc
ljmp
inc
jnp
xchg
fimull
lahf
xchg
mov
fcomp
sbb
mov
int
call
insb
xchg
cmpsb
pop
sbb
ret
jp
and
dec
mov
sub
test
js
idivb
movsb
jae
pop
popf
idivb
xchg
leave
adc
inc
and
test
std
mov
mov
call
dec
je
test
sbb
add
push
lahf
rorl
pusha
fisttpll
push
mov
insl
xchg
or
adc
iret
test
xchg
jae
mov
scas
std
lods
mov
rcl
or
fcoml
pusha
aad
aaa
mov
mov
cli
xor
shrb
in
sub
faddl
fstps
aam
pop
or
xchg
ret
inc
adc
ror
ja
and
out
cmp
gs
or
call
pusha
push
dec
mov
or
lods
jbe
inc
loop
sti
lock
incb
jg
push
adc
aaa
js
mov
mov
jp
loop
mov
sti
jns
sbb
sub
lock
lahf
adc
sti
and
enter
mov
cli
xor
ljmp
scas
int
lock
jl
fwait
fwait
std
xor
loope
andb
test
in
mov
sub
out
or
hlt
pop
push
sub
mov
add
mov
xchg
fisttps
sbb
and
mov
xor
movsb
decl
add
adc
iret
stos
xchg
cli
push
js
mov
mov
fiadds
push
mov
lods
jns
pop
pushf
jl
mov
neg
pop
pop
mov
das
mov
fisubrl
cmc
and
out
xor
cli
cmc
or
sbb
clc
pop
in
in
das
sbb
adc
gs
cmp
mov
je
inc
das
sarl
jle
aaa
aas
js
sub
xlat
int3
mov
and
cmp
xlat
std
cmpsb
fcmovbe
inc
inc
jge
push
dec
cltd
jg
cmp
mov
and
pop
iret
loop
sbb
hlt
div
les
idivl
add
add
lea
ret
xlat
mov
shr
nop
loopne
push
in
ja
mov
xchg
inc
sub
fdivp
scas
ret
xor
aaa
out
in
xchg
mov
arpl
adc
push
or
adc
inc
inc
ficompl
jae
into
mov
push
rclb
subl
mov
js
test
das
scas
test
mov
std
mov
mov
add
shll
mov
xor
cmp
cmp
cmp
inc
sub
inc
jmp
dec
les
pop
int3
fnstcw
mov
mov
cmp
push
std
jno
lret
and
dec
cmp
mov
push
leave
cmp
dec
xchg
add
mov
sbb
clc
mov
push
dec
adc
jmp
pop
cld
cmpsb
out
aas
jns
sbb
xchg
cmp
shlb
xchg
mov
test
dec
sti
cmp
pusha
rclb
arpl
push
in
jb
ljmp
jg
fiadds
add
out
nop
repnz
sbb
imul
loopne
fxch
or
mov
pop
mov
mov
pop
jae
orb
sub
rol
or
or
movq
or
mov
fidivrs
cmp
inc
pop
inc
stc
movsl
cmpsl
lret
cmpsl
mov
pop
test
fldl
xchg
add
jle
dec
xchg
jp
xor
mov
leave
sub
test
cmpsb
mov
mov
clc
adc
pop
mov
push
jmp
xchg
jle
cs
mov
push
jp
push
lods
sub
sbb
insl
and
out
std
fs
jnp
icebp
mov
pop
loop
jl
inc
daa
jo
xor
aas
out
pop
test
xchg
dec
and
jb
mov
lock
mov
jmp
pop
sub
cmc
scas
ficomps
inc
leave
sbb
sub
mov
dec
mov
lcall
test
push
dec
jl
inc
test
sbb
aad
jno
xchg
push
xor
imul
and
lret
cmp
adc
add
mov
inc
mov
mov
lcall
add
loop
sub
mov
js
xor
and
cmp
into
pop
pop
aas
xchg
xor
dec
test
pushf
xor
imul
ret
mov
and
mov
cwtl
ja
mov
adc
mov
movsb
pop
daa
dec
test
cmp
dec
dec
sbb
cmp
repnz
enter
pop
mov
add
mov
int3
mov
icebp
es
add
or
xchg
call
jecxz
xor
or
int3
int
outsb
mov
icebp
jmp
fdivs
hlt
xchg
movswl
ss
mov
aad
loop
add
xor
mov
scas
mull
pop
jns
andb
aas
repz
push
sub
push
mov
dec
jo
xchg
loop
and
fwait
js
test
add
outsl
vmread
xor
inc
sub
dec
andb
cli
pop
inc
outsl
ds
push
into
out
scas
cwtl
movsl
callw
sbb
cmp
cld
cmpsb
movl
mov
popf
add
in
or
sbb
jbe
lcall
mov
imul
pop
cs
mov
cmp
scas
aas
ret
and
mov
fisubl
repz
sbb
cmpsb
popa
insl
pushf
inc
fstpt
sbbl
add
cmp
ljmp
sbb
adc
push
dec
jg
push
arpl
xchg
xchg
aad
push
ret
cld
dec
inc
movsb
cmp
or
xor
mov
or
or
add
jb
pop
shl
push
sub
movsl
cmp
adc
jge
mov
int3
ss
popf
pushf
repz
mov
out
cmpsb
fld
mov
jmp
cmp
push
xchg
pop
icebp
sbb
leave
call
fadds
cmp
mov
sub
out
cmp
and
xchg
mov
dec
decb
in
mov
cmp
outsb
shll
xor
pusha
or
add
cs
mov
lds
cli
loop
pop
cmp
fs
scas
pop
mov
sbb
stos
inc
testl
mov
test
test
pop
lahf
xchg
inc
add
mov
mov
mov
mov
es
loope
je
insb
mov
movsb
stc
call
fs
xchg
xchg
popa
std
bound
jno
jb
jnp
fcoml
pop
rclb
xor
fcmovb
ja
mov
xor
mov
push
mov
nop
lret
std
push
lods
lds
cmpsb
bound
add
adc
popf
push
bound
jne
mov
pop
sbbb
mov
repnz
mov
adc
push
mov
add
ds
or
ss
aam
sbb
lret
mov
push
dec
pop
cmpsl
cmp
pusha
std
addr16
push
jmp
ss
ljmp
xlat
xchg
lcall
aas
inc
xchg
por
pop
mov
add
push
jns
aam
sbb
shl
hlt
mov
cmp
call
test
mov
mov
mov
shlb
jns
pop
aam
fsts
fwait
cli
mov
out
fimuls
leave
outsl
scas
sbb
xor
clc
push
icebp
lahf
mov
pop
xor
mov
jmp
push
outsb
scas
pop
push
imul
adcl
cmc
es
jmp
into
xor
out
fstpl
clc
inc
xchg
and
fbld
xchg
mov
mov
or
cmp
aas
adc
je
mov
and
jnp
jl
mov
sbb
push
lahf
ss
or
push
mov
lcall
mov
cli
popf
movsb
push
or
xchg
inc
out
and
sbb
cmp
jg
and
adc
xlat
std
mov
cmp
mov
pop
rcl
stc
aas
inc
dec
fistl
ficomps
and
lea
add
add
mov
adc
pop
mov
aas
sbb
aas
push
xlat
or
fists
addr16
ret
aad
aas
mov
adc
mov
mov
xchg
mov
adc
lods
ljmp
add
jno
push
insl
dec
ds
leave
jecxz
dec
push
pusha
ja
fwait
rorb
xor
sub
cmpsl
aam
and
sbb
jg
xchg
cs
dec
loope
rol
or
hlt
sbb
fnstcw
repnz
gs
jg
into
in
push
aad
cmp
dec
hlt
and
jb
xchg
xchg
std
cmp
fildll
sbbb
inc
mov
mov
fucomi
jl
les
xchg
dec
inc
cmp
sbb
pop
mov
jge
adc
in
sub
rorl
cmc
stos
push
and
fcoms
clc
mov
pop
std
sbb
movsb
inc
mov
sbb
pop
fiadds
inc
shl
dec
pop
xor
shll
mov
fsubrs
mov
pushf
cmp
stc
out
or
adc
out
jb
xchg
cli
inc
fsts
sub
mov
imul
mov
ret
clc
fucomi
mov
shlb
xor
push
lfs
jg
ret
fldcw
jnp
fldcw
or
mov
aad
and
stc
ret
imul
sub
xchg
mov
out
loopne
lret
mov
sbb
das
dec
scas
jl
xchg
inc
pop
mov
aaa
push
dec
xor
mov
fldenv
xchg
out
sbb
in
insb
lods
fiadds
mov
or
xor
inc
dec
xor
call
gs
incb
in
movsb
sbb
in
bound
bound
or
xchg
inc
out
mov
sbb
data16
xor
test
xchg
call
dec
sbb
aaa
imul
sbb
loopne
push
inc
xor
or
mov
mov
jge
orl
stos
lods
add
popa
lds
xlat
hlt
pusha
jbe
hlt
add
xchg
mov
mov
jmp
adc
jns
aam
lods
jb
pop
scas
loop
jg
cmp
lods
or
stos
sbb
iret
outsb
xchg
and
repnz
movsb
rorb
push
std
lods
lahf
dec
jb
mov
xor
mov
loop
xchg
add
lret
xchg
rorl
repnz
xor
aas
push
clc
jns
outsl
pop
xchg
mov
je
repz
es
pop
mov
sbb
cmpsb
aad
aas
aaa
dec
cmp
popf
aad
mov
pop
test
and
dec
and
jae
and
lahf
mov
loope
push
lods
ss
cmp
pop
xchg
or
scas
out
push
insb
stc
popa
xlat
cs
or
pusha
inc
sub
gs
mov
std
int3
add
loopne
ret
xor
xchg
stos
scas
mov
lea
test
shr
fiadds
xor
out
push
std
adc
cmp
dec
lahf
xchg
jg
add
stos
jecxz
push
subl
loopne
mov
fwait
scas
mov
fmul
enter
mov
adc
xlat
cmp
stos
mov
xchg
xchg
mov
inc
cmpsl
cld
sbb
pop
mov
mov
js
push
cmpb
lahf
inc
mov
nop
dec
lret
fisttps
rol
push
adc
xor
xchg
add
loope
or
sub
sub
gs
cltd
fiadds
or
sub
faddl
pushf
ds
sbb
fnstenv
lock
cld
sbbl
hlt
dec
mov
lret
shlb
add
inc
mov
adc
dec
and
push
loop
inc
jne
repnz
je
sarb
xchg
insl
xchg
pop
movb
lods
leave
or
xchg
and
jae
and
gs
sub
jb
lds
push
inc
mov
setle
mov
push
jbe
add
fdivrs
mov
data16
jle
adc
cmp
adc
xor
mov
je
cmp
add
xchg
rcrl
xchg
mov
testb
inc
dec
push
mov
adc
sub
push
outsl
inc
arpl
mov
std
fstpl
call
out
aad
scas
inc
lret
adc
jbe
insb
cmp
sbb
push
call
in
outsb
leave
mov
push
lea
cmp
and
mov
int3
or
adc
aad
fimuls
in
jbe
xor
add
pop
adcl
push
push
movsl
in
xchg
pop
sti
in
in
push
push
sub
push
test
popa
pop
fs
ror
dec
add
xor
xchg
dec
popf
mov
rol
ja
enter
or
fbld
mov
jp
int
push
and
clc
add
stos
mov
shlb
mov
mov
dec
sbb
sbb
mov
and
icebp
xor
sti
or
int
or
movsb
adc
adc
cwtl
das
pop
xor
movsb
stc
inc
or
aas
mov
jb
mov
lock
sti
rcr
jbe
jo
pop
xchg
cld
daa
add
clc
jo
rorl
enter
dec
cli
inc
fsubl
les
scas
aaa
dec
or
pusha
sbb
rclb
test
cvtps2pd
aad
gs
sti
fs
jl
mov
mov
add
pushw
mov
pop
punpckhdq
filds
xor
push
inc
cmp
adc
push
pop
lret
rcrb
loopne
xchg
andl
movb
adc
mov
pop
and
cmpsl
bound
es
mov
or
mov
mov
xor
inc
or
xor
fstp
inc
sbb
dec
inc
sbb
vcvtsd2si
push
sti
icebp
dec
xchg
scas
inc
cmp
jbe
adc
mov
mov
mov
or
arpl
mov
mov
jae
int
outsb
dec
inc
mov
fwait
xchg
pop
sarl
imul
test
push
jbe
xchg
incb
mov
lods
sub
add
inc
fnstcw
pop
aaa
bound
imul
jp
test
cmpsb
arpl
ret
stos
sbb
push
outsb
mov
xorb
shrb
cld
mov
arpl
jmp
mov
cmp
inc
sub
ret
or
inc
loop
mov
mov
out
gs
mov
repnz
cmp
aaa
fstpl
adc
or
ja
loop
mov
aas
lods
xor
mov
shrl
or
jnp
lea
and
push
mov
mov
push
xchg
xorl
movsb
test
adc
inc
roll
shr
leave
xchg
sub
xchg
jnp
divl
std
xchg
xchg
push
lahf
in
in
insl
xor
add
mov
lahf
ret
pop
adc
mov
or
adc
jnp
mov
es
sahf
stc
mov
pop
or
call
rcrl
fiaddl
adc
sub
mov
lds
movsl
mov
adc
mov
push
ror
ljmp
scas
nop
mov
xor
pushf
adc
mul
or
mov
stos
jne
aad
inc
cld
sbb
cld
mov
adc
addr16
repz
cmpsb
or
add
shlb
sub
xchg
push
jmp
xchg
mov
sub
in
es
sub
jno
xchg
add
in
js
cmp
rcll
xorl
push
cltd
mov
out
add
lret
and
mov
add
sub
fs
lea
sub
or
xchg
xor
pop
in
mov
push
xor
pop
faddl
shrb
pushf
test
jbe
mov
push
adc
mov
adcl
mov
lcall
fimull
fstl
stc
push
mov
test
lret
cs
push
jmp
xchg
jecxz
pushf
stc
mov
loopne
mov
jle
mov
ret
mov
idivb
int3
es
inc
enter
lock
es
js
mov
icebp
jg
mov
cs
pop
adc
shlb
loop
and
test
inc
jle
cmp
mov
test
adcb
add
stc
scas
sbb
lock
sbb
add
flds
push
add
mov
icebp
mov
cwtl
push
push
mov
jnp
mov
add
mov
cwtl
pop
sbb
push
in
fld
les
test
jge
fbstp
jmp
mov
mov
insl
cmc
cmc
pop
sbb
and
mov
dec
inc
inc
mov
jb
movsb
outsl
dec
inc
pusha
push
pop
push
add
push
mov
push
add
fs
mov
adc
in
inc
add
cmp
sub
mov
dec
inc
iret
push
je
pop
jae
fildl
fmul
les
lret
bound
adc
push
je
lods
es
cli
out
outsb
dec
mov
xlat
inc
cmp
rorl
sbb
and
xor
pop
adc
dec
jns
sbb
dec
out
stos
cmp
mov
sub
push
add
mov
sub
and
test
cmc
fidivrs
sbb
cli
cmp
clc
adc
fiaddl
mov
inc
stos
in
sahf
and
subb
push
pop
loop
je
out
fucomi
das
aam
aaa
xchg
sti
push
icebp
add
adc
hlt
call
loop
std
mov
shrl
and
js
outsb
ljmp
push
pushf
sub
and
lea
lahf
cli
fistpl
mov
inc
clc
pop
push
iret
in
mov
push
mov
and
adc
stc
inc
shlb
add
push
cmp
cmpsb
fstpt
cmpsl
je
xlat
ret
aaa
sub
loope
xor
push
push
fs
mov
icebp
mov
cwtl
or
jno
pop
mov
inc
fmul
mov
das
cli
dec
jl
aad
pop
pop
jno
cmp
shrl
pop
scas
cmpsl
subb
add
popf
jae
scas
shrl
lods
jbe
cvtps2pd
out
popf
dec
iret
add
adc
add
jp
jecxz
xchg
ja
test
mov
jno,pn
mov
stos
push
inc
inc
adc
scas
push
pop
inc
aaa
ja
xchg
push
inc
or
andl
sbb
push
popf
xorb
push
xchg
mov
add
mov
fstpl
jne
dec
xchg
pop
cmpl
or
jb
neg
add
outsb
cmp
pop
push
sub
sbb
into
test
cld
xor
adc
inc
lahf
adc
xchg
cmp
and
xchg
xchg
add
jmp
sub
cltd
into
mov
inc
cmp
xchg
pop
sbbb
or
push
popf
mov
mov
std
dec
add
popf
je
mov
stos
out
push
push
pop
stc
mov
test
mov
sub
int3
ljmp
jecxz
addr16
cmp
sbb
cmpsl
popf
insl
in
or
mov
rolb
xchg
arpl
pushf
repnz
or
pop
ja
or
or
inc
xchg
shl
movsl
ljmp
inc
insb
jns
inc
sub
sub
into
dec
gs
mov
mov
mov
fistpl
jp
aad
test
mov
hlt
out
jne
insl
repz
ror
inc
sarb
push
or
xchg
cli
push
mov
adc
sahf
pop
movsb
jecxz
or
push
dec
ja
cmpsl
les
dec
push
sbb
adc
shl
mov
mov
sub
ficomps
lret
jo
cmp
stos
inc
push
sbb
pop
jnp
jo
adc
int
and
pop
repz
data16
into
jp
test
mov
mov
xchg
push
xchg
jmp
pushf
ljmp
scas
add
inc
sub
dec
add
stos
mov
add
insl
or
xchg
xchg
imul
in
push
mov
fistpl
std
xchg
or
inc
mov
mov
icebp
mov
add
add
int
sbb
mov
aaa
imul
inc
ret
push
sbb
daa
ficomps
nop
xor
cmp
xchg
dec
cmp
fists
aad
inc
jnp
xchg
sbb
ror
sbb
hlt
clc
sub
push
sub
push
adc
inc
dec
add
push
dec
or
mov
popa
cld
daa
hlt
pop
shrl
popf
stc
mov
mov
push
mov
cwtl
xchg
stc
insl
or
xor
ficoms
cs
jae
xor
or
push
push
stos
sar
les
fcoml
cwtl
inc
xchg
nop
ds
xor
pop
les
es
test
push
adcb
add
jle
cmp
stc
jl
call
imul
dec
pop
int
test
cltd
rcrl
dec
dec
sbb
mov
loopne
insb
outsb
jbe
mov
add
xchg
cwtl
sbb
scas
and
movsl
inc
mov
bound
in
scas
inc
sbb
jno
cmp
push
imul
jbe
dec
in
mov
loop
inc
and
dec
dec
dec
int3
sbb
loope
ret
and
pop
data16
cwtl
shlb
xlat
lds
add
in
sub
push
movsb
dec
je
sbb
ss
mov
push
mov
sub
jnp
nop
or
cmp
es
insl
mulb
mov
imul
in
mov
and
xorb
fldenv
arpl
push
adc
mov
xor
mov
mov
andl
xor
xor
inc
mov
cmpl
ja
jmp
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
push
pop
orl
sub
and
add
subl
movl
adcl
mov
xor
xor
or
movl
mov
or
mov
mov
adc
mov
mov
sbbl
mov
xor
add
orl
mov
lea
mov
mov
xor
sbbl
add
orl
mov
subl
lea
push
neg
mov
subl
xor
add
push
mov
push
movl
pushl
call
xor
add
and
mov
mov
mov
mov
mov
sub
sub
movl
mov
mov
xorl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sub
movl
mov
mov
xor
mov
mov
neg
xor
mov
sub
mov
mov
movl
mov
movl
mov
movl
cmp
movl
je
xor
mov
mov
subl
xor
addl
xor
lea
andl
xor
or
inc
mov
cmpl
jge
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
xor
orl
div
or
mov
xor
xor
sbb
mov
xor
orl
xor
sbbl
sub
cmp
jne
mov
neg
mov
adc
jmp
inc
nop
jl
rolb
mov
add
addl
or
cmp
xchg
mov
mov
xchg
xchg
movsb
cmpsb
inc
js
inc
rcrb
test
xchg
mov
sbb
div
cmpb
loopne
mov
repz
xchg
and
ret
jnp
or
pop
push
dec
cmpsl
icebp
loop
pop
out
jno
pop
out
insb
in
loopne
loopne
pusha
pop
shll
adc
repnz
nop
ret
ja
lret
xor
fcompp
adcb
push
lret
cmp
mov
push
or
gs
jb
push
pop
xchg
fdivl
inc
shlb
mov
in
mov
ds
sub
sahf
sub
das
dec
cmp
adc
cmp
stc
jmp
xchg
push
pop
cs
adc
lcall
fisubl
sbb
fs
mov
popf
repnz
mov
out
mov
mov
push
bound
sbb
lcall
push
mov
mov
or
mov
and
les
lock
orb
jmp
push
outsb
cmpl
xchg
jo
dec
das
xlat
jbe
movl
sbb
fistl
arpl
add
call
es
and
dec
mov
daa
xchg
cmpsb
insb
sbb
adc
push
mov
sbb
aad
repz
push
arpl
dec
fnsave
hlt
div
adc
mov
aam
subb
jne
lcall
mov
fsubrl
test
pop
inc
arpl
call
xorl
cld
jp
mov
les
lret
xor
mov
mov
xchg
push
push
ds
daa
lods
push
lea
cld
mulb
aas
fsubl
mov
pop
cmp
add
andb
lods
js
testb
pop
leave
xor
dec
jge
pop
cmpsb
sbb
loopne
mov
adc
cmp
cmp
scas
out
fsubrl
jne
loope
xchg
cmc
dec
repnz
inc
dec
pusha
das
pop
scas
pop
imul
faddl
sbb
ficoml
testl
mov
push
out
bound
sahf
jnp
mov
add
pop
mov
popf
je
jo
sbb
addr16
out
aad
in
lcall
push
mov
push
jmp
into
cmpsb
mov
dec
pop
fnstsw
aaa
cmp
or
dec
scas
push
xchg
jne
dec
cwtl
sub
loope
dec
pop
rcrl
mov
lods
sahf
rcl
mov
stos
scas
scas
aas
pushf
jae
lret
dec
pop
and
and
xlat
ss
mov
mov
cs
sbb
test
fwait
xchg
xchg
ja
rcl
add
or
jmp
scas
and
jg
push
int3
jnp
fcomps
ret
fildl
pop
sahf
scas
clc
mov
xchg
jne
mov
sti
les
imul
popf
adc
outsl
imul
ret
out
sub
jl
insb
dec
ja
fwait
sbb
shrl
aad
inc
in
aaa
pop
jmp
mov
cli
mov
scas
movsl
out
xchg
or
les
push
jnp
sub
movsl
sub
sarb
sbb
sarb
pop
repz
mov
outsl
ret
test
xlat
pop
stos
jl
mov
rorb
push
nop
and
mov
ds
lds
out
fsubl
stos
pop
test
or
sub
cltd
test
pop
hlt
push
pop
xor
xor
sub
add
out
adc
ud1
dec
and
xchg
pop
ds
mov
xchg
btc
push
jbe
test
out
inc
iret
test
loopne
mov
pop
jg
cmpsl
pop
mov
mov
frstor
nop
pop
rclb
rorl
adc
mov
das
ret
bound
enter
jle
mov
xor
jbe
into
sub
mov
adc
pusha
jb
and
mov
pop
xchg
jns
mov
js
in
fstps
lcall
pop
jnp
mov
int
mov
sarl
or
sbb
jne
scas
sti
frstpm(287
data16
mov
jmp
decl
pop
js
push
xlat
pop
and
arpl
aas
adc
inc
nop
mov
test
pushf
mov
add
add
out
lods
das
sub
and
xor
test
pop
push
ss
push
out
dec
cmpb
pop
cld
mov
leave
popa
pop
xor
std
or
in
cmp
mov
mov
sbb
leave
aad
mov
jp
mov
jae
mov
mov
ret
and
ret
lods
and
or
push
int3
lods
ss
cmp
xchg
jno
adc
mov
inc
xor
outsb
mov
stc
sbb
leave
push
dec
das
push
clc
mov
sbb
pcmpeqb
or
jp
jge
sti
mulb
xchg
or
xchg
mov
push
test
popa
sbb
cmp
bound
mov
stos
movsl
add
mov
not
cmp
stos
cli
add
jl
test
xchg
nop
mov
imul
bound
cmpsb
ljmp
pusha
cwtl
pop
fwait
loop
ret
xchg
lret
add
add
stos
mov
sarl
inc
mov
mov
repz
std
xchg
pop
dec
mov
fidivl
dec
adc
pop
mov
sbb
pop
sub
fidivrs
sbb
mov
mov
push
in
loop
pop
subl
add
cwtl
dec
out
in
inc
dec
pusha
or
adc
ljmp
xchg
inc
stc
add
dec
movsb
aad
mov
repz
mov
push
pop
mov
add
fisubs
in
in
pop
cmp
dec
dec
enter
jg
xor
aaa
shlb
mov
mov
jns
scas
dec
mov
adc
xor
and
dec
mov
sbb
xchg
adc
mov
jbe
add
std
jno
add
aas
loope
inc
mov
or
xor
sub
and
push
mov
mov
hlt
test
xchg
into
popf
scas
inc
xor
lock
stos
fsubl
dec
or
mov
cltd
int
xor
loop
inc
dec
sbb
test
pop
lock
lret
adc
mov
daa
mov
rcrb
movsl
insl
mov
nop
mov
mov
xchg
ret
jle
inc
push
push
out
repz
mov
pop
shll
pop
cmpsb
adc
lea
or
jle
ret
jg
jge
cmp
out
pusha
jg
outsb
repnz
das
xchg
mov
clc
in
add
cmc
lods
adc
pop
fiadds
jb
leave
jmp
es
iret
lods
jl
cmp
sub
add
rcrb
push
inc
out
xchg
stc
lret
and
cmpsb
movsl
int3
add
je
imul
mov
pop
inc
mov
int3
xlat
sub
fisubs
jg
pop
das
xchg
push
pop
je
cmc
notl
pop
aas
xchg
orb
jmp
xor
insl
jnp
cmc
push
lcall
aaa
dec
pop
lcall
sti
push
sub
pop
fimull
aad
jge
mov
popl
lea
pop
xor
push
addr16
stc
in
lock
add
adc
inc
pop
fst
lret
call
and
xchg
imul
fcompl
out
cmp
aas
les
out
popa
push
inc
sbb
add
pop
out
sub
icebp
lods
orl
fcompl
arpl
cmp
rol
shll
shrb
outsb
call
jge
dec
push
outsl
sarl
enter
mov
test
push
pop
cmpsl
jno
cmp
sbb
mov
add
rcrl
into
mov
movsl
inc
mov
adc
fdivl
jge,pt
cmp
je
add
push
loope
ss
sbb
mov
cmp
dec
mov
fldt
xchg
lods
int3
xchg
arpl
das
dec
cmpsw
push
test
data16
arpl
push
out
addl
adc
xor
or
repnz
shlb
pushl
repz
jge
push
int
mov
cmp
inc
cli
dec
rcll
lcall
js
push
fnstenv
dec
inc
mov
push
cwtl
pop
or
xchg
in
dec
in
mov
push
fsts
mov
andl
idivl
pop
add
les
in
mov
test
cmpsb
jl
push
jge
fdivs
or
out
cmpsl
or
mov
lock
jp
cmpsl
test
mov
flds
mov
leave
scas
fwait
inc
dec
or
sahf
push
push
dec
sbb
cltd
push
mulb
and
mov
mov
imul
outsl
mov
xchg
adc
in
std
int3
jo
inc
mov
fsubl
add
or
call
dec
ja
jne
lret
dec
pushf
into
rcrl
movsl
xor
mov
inc
fs
add
int
hlt
push
pop
ficomps
jne
fnsave
shlb
mov
cmp
and
stc
inc
in
inc
dec
adc
outsb
mov
xchg
dec
xor
mov
jnp
adc
mov
cmp
cmc
out
in
out
jne
jecxz
sbb
adc
popa
movb
sub
pop
xor
call
ljmp
push
loope
cld
repz
and
stos
mov
mov
pop
cli
push
lds
stc
mov
dec
pop
in
mov
inc
and
or
addb
adc
jnp
insb
divl
xchg
int3
jecxz
push
xchg
aas
cmpsl
lods
pop
mov
cmc
push
or
in
push
fstpl
negb
inc
arpl
hlt
pushf
icebp
scas
adc
out
inc
xlat
add
inc
or
jno
cmp
int3
adc
aas
or
in
add
add
ljmp
and
paddb
pushf
pop
loopne
cli
aam
mov
xor
repz
rcr
pop
sub
js
mov
cltd
cmp
jg
jge
jl
pop
inc
stos
jle
sarl
sub
imul
daa
sbb
mov
lahf
loop
pushf
data16
mov
sub
std
push
data16
push
jle
jno
push
aad
data16
adc
bound
arpl
out
adc
sbb
mov
out
sbb
inc
dec
push
aas
nop
fdivrs
adc
jo
js
jno
pop
hlt
iret
sahf
or
fdivr
outsl
mov
scas
jo
fcmove
fdivrl
inc
dec
jo
mov
lods
push
shrl
outsl
cmp
push
scas
pop
jbe
cmpsl
ja
pop
inc
stos
cmp
pushf
xchg
imul
jo
fsubrs
jo
push
push
pop
lods
repz
adc
xorb
imul
inc
dec
pop
or
imul
pop
xchg
cli
xor
fwait
sti
adc
cs
imul
xor
ret
add
stos
outsl
addr16
mov
sbb
adc
lods
lret
imul
cmp
or
jbe
jbe
enter
mov
sahf
loope
pop
jl
loop
rclb
and
xor
push
pop
mov
jmp
je
pushf
dec
sti
cmp
les
out
repz
addr16
add
movsl
cwtl
rcrb
movsl
iret
test
jb
test
lods
xchg
mov
sbb
fwait
or
mov
imul
xchg
clc
mov
les
lea
pop
xor
push
jge
pop
push
sti
jb
test
jmp
cltd
in
shll
je
rorb
jo
loop
xor
shrb
sub
loopne
ss
xchg
push
jbe
arpl
cld
lret
cwtl
or
icebp
notl
xor
mov
cwtl
cmp
mov
xchg
push
mov
mov
cmp
jnp
pop
add
movb
cmp
int3
xor
and
dec
int3
test
add
loopne
inc
lret
pop
xchg
testb
pushl
fmull
mov
enter
adc
dec
insb
in
mov
stos
jecxz
add
jg
mov
pop
imul
xchg
in
mov
pop
call
sbb
or
arpl
xchg
fimuls
inc
out
stos
lds
dec
mov
outsb
cmp
adc
cmpsb
cmpsl
les
pop
mov
jle
fsubrs
push
push
repz
push
mov
in
cmpsb
or
mov
cmc
xchg
pushf
pop
mov
xchg
dec
je
xor
lock
hlt
cmp
add
push
dec
push
xor
mov
or
subb
mov
jns
int
movsl
add
loopne
push
pop
inc
jns
jp
clc
jae
fsubrl
mov
or
lret
xchg
and
xchg
sbb
nop
mov
pop
nop
lahf
setne
addr16
dec
mov
xor
rcr
es
xor
pop
adc
pop
and
lea
jp
sbb
mov
test
lods
sbb
out
and
xchg
pushf
clc
lea
mov
ja
cmpsl
mov
jmp
lret
cmc
fldl
es
pop
mov
subl
mov
lea
jle
test
je
jb
enter
fimuls
sahf
stos
dec
movsb
in
push
adc
ficoml
push
adc
dec
cli
iret
fsubrs
xchg
rcrl
inc
add
dec
inc
pop
imul
cmpl
outsb
and
add
add
add
popa
jnp
push
and
mov
xchg
push
movsb
push
jl
cmp
daa
dec
mov
and
jo
lds
imul
dec
adc
scas
in
xlat
mov
jge
xchg
lcall
mov
imul
or
lea
out
shlb
xchg
add
ljmp
insl
cmp
outsb
enter
stos
or
pushl
mov
lds
push
xchg
das
cmp
into
imul
pop
sub
stos
loop
pop
add
sti
and
in
or
mov
in
repnz
mov
jmp
mov
leave
cltd
fdivp
push
pushf
nop
addl
mov
sub
pop
gs
sbb
xor
in
xsaves
movsl
and
mov
mov
pop
push
mov
push
xchg
loop
mov
or
dec
dec
dec
sub
mov
dec
push
arpl
xchg
mov
inc
and
mov
pusha
scas
lods
push
fwait
orb
sbb
lahf
mov
inc
repz
add
sbb
cltd
aam
xchg
dec
cmp
sete
jg
enter
lahf
mov
jg
jno
or
jns
or
xchg
cmp
out
mov
mov
nop
sbb
xor
mov
stos
arpl
cmpsb
aad
test
outsb
mov
jecxz
mov
outsb
mov
cmpsb
adc
push
aas
mov
xchg
xor
fdivl
jno
mov
xchg
mov
ja
sbb
adc
out
adc
dec
and
xor
xor
rolb
test
call
xchg
fwait
xorb
cmp
inc
pop
ficompl
jmp
sbb
mov
jecxz
out
andb
jae
ret
xlat
leave
sahf
daa
jae
int3
jbe
sub
int3
punpckhwd
push
out
in
pop
pop
and
push
sbb
push
pushf
repnz
push
mov
lods
adc
mov
push
mov
jle
fsubr
and
pop
pop
dec
lahf
lock
cmp
out
cltd
arpl
stos
lds
jle
sahf
sub
push
fstps
or
add
scas
xchg
cmpl
mov
mov
aaa
out
mov
in
imul
cmpb
cs
shr
xor
sbb
mov
jmp
hlt
jle
insb
into
xlat
pusha
cmp
std
add
mov
mov
sub
stos
sahf
in
addl
xor
sub
and
loope
popf
add
test
andb
shll
lcall
out
mov
xchg
push
sti
or
cmp
inc
xchg
mov
ss
mov
gs
or
clc
ficoml
out
xchg
xchg
push
aas
es
push
rcl
shrl
popf
out
jns
jmp
push
mov
outsl
lahf
mov
mov
xlat
iret
arpl
iret
xchg
addr16
mov
imul
lock
sub
popa
push
lods
xor
xchg
mov
push
fisttpll
rol
inc
push
xchg
lcall
lods
inc
les
addb
loope
sbb
fldl
mov
call
xchg
jg
cmp
je
ja
mov
add
jle
cmp
in
test
ds
inc
sbb
and
out
gs
cld
not
add
mov
adc
cmpsb
sbb
mov
fdivr
ljmp
xchg
mov
add
in
cmp
int
les
dec
shll
inc
xchg
jno
jb
fs
xlat
test
xchg
adc
dec
mov
xchg
repz
bound
pop
mov
test
ljmp
stos
enter
inc
mov
nop
dec
xlat
fistpl
push
cld
adc
aas
das
sbb
into
nop
jmp
push
add
outsl
mov
add
fdivl
scas
jb
inc
xor
repnz
rcl
fs
push
repz
push
add
xchg
adc
jg
rcll
jle
ss
inc
inc
iret
ja
and
std
inc
lea
cmp
xchg
and
cmp
cld
and
insl
loope
ljmp
jae
pop
mov
cmp
jbe
fnstcw
cli
dec
ja
jmp
out
stos
xchg
xor
sub
and
js
push
fisubl
clc
fs
mov
test
xchg
lret
movsb
pop
stos
fnstsw
jmp
push
in
dec
fld
lret
mov
jnp
and
or
jp
popa
xchg
lcall
outsb
dec
and
cmp
loopne
shll
mov
sbb
push
mov
lahf
pop
int3
movsb
xchg
pop
pop
jno
xor
jb
inc
xchg
jne
dec
inc
pop
dec
lods
xchg
js
incb
sub
xchg
pop
mov
in
push
in
aad
cmp
ret
mov
xchg
push
cmp
stos
subb
pop
inc
clc
mov
pop
mov
std
mov
stos
lahf
das
pop
xchg
call
mov
cmp
pop
inc
cld
and
or
and
popf
ret
push
cs
jne
pop
cmp
insl
sar
fwait
dec
push
cmpsl
fbld
lods
ds
sbbb
aas
fbld
cmpsl
mov
dec
inc
xlat
pop
int3
test
pop
and
or
jns
and
inc
pop
xchg
mov
inc
nop
inc
sbb
and
and
push
xor
daa
jno
ror
fstps
shl
rclb
sub
push
fmull
pop
das
jmp
push
enter
dec
and
and
and
adc
sbb
sbb
push
jecxz
mov
movsl
mov
dec
movsb
inc
jno,pn
pop
push
ja,pt
bound
add
ret
out
enter
or
das
nop
iret
sbb
popa
xchg
icebp
fiadds
repnz
cmp
add
dec
adc
jmp
mov
stos
pushf
pop
push
or
cmp
mov
jae
sbb
lods
hlt
xor
pop
mov
ror
xor
int3
das
imul
mov
cmc
xor
sbb
test
cs
ss
push
jmp
lea
notb
xor
or
pmulhw
in
ret
fucomp
outsl
jno
sbb
pop
daa
mov
daa
adc
xchg
pop
sbb
mov
mov
jo
jg
call
loope
xchg
mov
daa
fsts
dec
rolb
mov
add
cld
movsb
inc
andb
lcall
push
sti
cmpsl
stos
loope
ret
aaa
xor
and
inc
push
jmp
fcomps
add
sbb
aam
dec
dec
pop
sub
shrb
push
jbe
idivb
pop
pushf
les
add
add
push
pop
adc
and
imul
dec
addr16
dec
test
pushf
cli
lods
jnp
addr16
sbb
in
sub
dec
test
rol
mov
movb
xchg
jb
aas
aas
imul
lret
xlat
fcmovu
cli
mov
pop
xor
or
xor
pop
add
cmp
jo
and
xchg
pop
push
ss
je
stos
cs
mov
cmp
adc
wbinvd
test
sbb
xchg
mov
mov
xchg
push
aam
mov
cmp
mov
jno
mov
or
jno
insl
sbb
cld
push
jbe
mov
add
leave
out
mov
mov
insl
fnstsw
push
jns
jg
into
xor
js
pop
fldpi
adc
sub
sub
ds
ret
inc
pop
jb
movsl
jae
loop
pop
jecxz
in
push
test
inc
aam
sbb
mov
imul
lret
mov
out
xchg
adc
aad
xor
dec
fdivrl
pop
mov
sbb
add
jne
or
adc
stc
insb
popa
pop
mov
pop
xor
jmp
ss
repz
ja
test
loopne
or
jb
sub
es
adc
lea
movsl
mov
rcr
and
and
popa
push
jecxz
and
arpl
mov
lock
out
adc
xor
pop
xchg
jl
push
lcall
scas
and
inc
icebp
and
shr
adc
rcrl
jbe
and
cmpsl
jne
xrelease
push
sbb
sahf
xchg
and
or
clc
mov
movsl
pop
mov
or
daa
sbb
inc
mov
lds
mov
das
inc
sbb
pop
push
jle
push
es
adc
lock
mov
xchg
es
fndisi(8087
xor
xor
adc
mov
daa
lcall
sbb
shrl
dec
inc
orb
xor
je
stc
dec
mov
push
roll
mov
das
jbe
vpcmpgtd
ljmpw
jno
popa
ss
jnp
add
les
adc
sub
nop
int3
xor
xlat
subb
rcr
rcrb
mov
cld
pop
inc
jge
loop
int
xchg
test
sbb
rcrb
xor
jge
mov
fdivl
decb
iret
mov
inc
rcl
sbb
in
fdivrl
pushf
lock
inc
xchg
sub
je
aad
cmpsl
fildl
repnz
mov
xchg
cmp
aaa
mov
jl
cmp
and
testb
mov
or
leave
cs
rcrl
cmp
icebp
lret
mov
mov
fsub
insl
pop
inc
adc
loop
int
cmpsw
inc
jl
imul
and
xchg
sti
xchg
fldenv
jnp
lahf
lret
pusha
push
or
stc
mov
cmp
outsl
fdivl
adcl
mov
das
cmp
mov
lret
std
dec
pop
scas
in
pushf
aaa
addl
dec
popa
pop
test
sub
pop
lods
sarl
adc
xchg
lahf
mov
xor
cmpsl
add
sti
pop
loop
loop
jl
inc
out
mov
loop
dec
xchg
xor
jbe
popa
pop
adc
dec
mov
pop
add
pop
pop
pusha
inc
cmp
push
in
fwait
hlt
ljmp
test
mov
cmp
sbb
xor
loope
out
pop
pop
sub
imul
pop
adc
adc
mov
sub
mov
aad
pop
leave
add
testl
pusha
sti
cmp
lods
daa
int
les
mov
pushf
fcompl
sar
popf
mulb
or
jns
jns
lcall
repz
xchg
fwait
in
pop
jnp
fimuls
lock
stos
inc
cmp
insl
jge
or
inc
inc
adcb
add
push
test
orl
xchg
xor
repz
jne
cmp
sub
sub
and
ja
outsl
add
xor
sbb
test
push
sbb
inc
push
in
inc
negl
nop
je
xchg
mov
mov
push
sub
fnstsw
or
push
mov
add
fsubrs
sub
outsb
addb
pusha
ljmp
jl
cmc
cmp
mov
mov
lods
inc
or
push
stos
daa
cmpsl
adc
cwtl
sub
rcll
imul
cmp
js
dec
jne
jle
jmp
cmpl
outsl
ret
into
aam
or
xchg
lcall
rol
je
fwait
pushf
movsb
roll
mov
dec
nop
daa
jp
cli
out
jmp
std
loop
jnp
cmp
inc
iret
popa
sbb
iret
cld
jnp
pusha
inc
fstl
lea
les
insl
aad
push
adc
jecxz
lcall
lahf
xor
lods
test
frstor
jecxz
lcall
movsl
in
jae
pop
int3
mulb
cltd
push
xchg
faddl
push
movl
std
push
dec
mov
mov
lds
jbe
dec
out
xor
push
inc
cmp
jle
lds
jmp
mov
xor
mov
js
jmp
pop
or
xor
add
fisttpll
inc
sbb
in
inc
loopne
negl
out
jmp
jb
add
cmp
lea
xchg
mov
pop
test
shrb
xchg
negb
aaa
stos
pop
movsb
sub
mov
pop
mov
push
adc
testl
dec
push
sbb
in
into
scas
insl
jecxz
cmpsb
js,pt
xchg
inc
adc
pop
pop
ret
aas
aam
mov
lock
mov
lock
int3
mov
push
xor
in
or
leave
xor
cmpsl
inc
cmpsb
cmpsl
fs
shrl
fidivrl
jbe
pop
jbe
divl
scas
cmp
scas
push
dec
add
ret
filds
ret
fidivl
pop
pop
hlt
out
inc
scas
lea
jmp
sub
xor
fisubrl
decb
cltd
add
in
cltd
inc
das
scas
shl
sub
lahf
shrb
xor
mov
aas
test
inc
ret
cli
ret
ret
test
cs
sbb
outsl
imulb
in
mov
in
dec
add
into
push
aam
xor
sub
push
pop
xchg
cmpsb
add
push
cwtl
fisttps
dec
adc
addb
fs
out
test
outsl
call
sbbl
repz
inc
jbe
jbe
sbb
sbb
das
stos
lret
cld
call
data16
xchg
test
sahf
sbb
sub
push
sar
mov
sbbb
cli
and
mov
push
mov
call
fiadds
out
insl
out
cmpsb
psadbw
mov
mov
mov
dec
jns
add
mov
loope
loope
insl
mov
lahf
or
loopne
decb
sub
pop
sbb
push
add
bound
adc
mov
repz
mov
adc
jb
rcrl
mov
jmp
push
out
rorl
mov
lahf
popa
xchg
shl
xor
lret
popl
cwtl
push
lods
insb
aas
dec
inc
and
jp
jecxz
jno
add
jecxz
outsl
lret
mov
stos
lds
popa
in
bound
inc
add
enter
lret
pop
xchg
adc
mov
and
push
iret
cs
sbb
mov
jo
and
sbb
mov
push
aad
xor
mov
pop
lea
push
iret
xchg
fstpt
add
cmp
idivb
arpl
or
cmp
scas
mov
add
inc
mov
push
imul
cli
clc
rolb
enter
dec
cmp
mov
hlt
add
je
pop
pop
sbbl
adc
dec
popa
in
inc
fstp
xchg
jle
pop
push
call
or
std
pop
popa
jmp
jo
repnz
mov
dec
jbe
mov
sti
jae
cmp
adc
nop
imul
lahf
mov
jge
mov
imul
xchg
add
jg
and
mov
sbb
adc
mov
fdivr
icebp
pop
dec
xchg
inc
dec
push
dec
outsb
enter
jns
frstor
pushf
pop
inc
insl
adc
cmovno
sub
jl
andb
insl
mov
jmp
pop
fsubrl
push
fsubrp
fnsave
mov
and
outsb
shlb
or
pop
mov
leave
jns
lds
pop
dec
push
push
pusha
inc
jno
add
cmp
and
sbb
scas
sub
dec
push
jle
xor
cmp
aas
arpl
mov
stos
int3
or
cltd
or
lds
ret
out
outsl
jmp
and
cli
and
mov
push
imul
mov
clc
pushf
pusha
cli
cvtpi2ps
xchg
loopne
mov
imul
setb
mov
jae
mov
mov
jmp
aad
in
and
dec
mov
js
out
pop
shl
in
fs
jp
xchg
js
xchg
rol
test
and
ficomps
scas
xlat
lods
iret
mov
push
mov
pop
je
fwait
jg
jle
pop
je
cmp
cmp
stc
insl
int3
push
loopne
dec
push
int3
sbb
jge
popa
jne
das
jl
adc
mov
sub
sahf
lahf
xchg
xor
dec
xchg
dec
pop
jle
jb
ljmp
jae
stc
lds
movsl
lea
dec
jno
roll
mov
push
jae
in
out
cmp
stos
push
shlb
fwait
pop
into
aas
push
popf
test
or
lret
mov
mov
adc
das
pop
sub
jmp
xor
stc
loop
mov
push
jmp
in
jl
es
movsb
stc
xchg
scas
cmp
dec
jg
sub
sub
add
push
inc
and
mov
jmp
pop
cmpl
dec
add
hlt
ret
pushf
divps
fs
mov
cmpl
jae
filds
imul
sar
mov
mov
jl
and
jp
ljmp
and
aaa
pop
xor
xchg
push
aam
xor
push
inc
dec
mov
sbb
push
ja
dec
ret
push
jno
xchg
push
mov
enter
xchg
add
lcall
adc
out
ret
inc
sub
cmpsb
loop
xchg
and
leave
aas
mov
stos
sub
or
add
stc
lods
jle
inc
xor
dec
jno
mov
sbb
scas
jbe
cwtl
dec
pop
scas
jns
adc
xor
lea
push
fdivrl
and
out
outsl
in
or
cmpsl
jmp
push
xor
shl
movsb
jbe
sbb
adc
fwait
xchg
cld
xchg
sbb
daa
push
popl
inc
pop
push
insl
and
cmpsl
or
mov
or
lea
addr16
inc
insl
testb
jl
dec
push
mov
mov
notl
xor
orl
xor
orl
add
add
mov
cmp
jae
add
lea
mov
subl
mov
addl
xor
add
lea
movl
mov
mov
mov
cmp
jbe
xorl
addl
jmp
addl
or
mov
xor
andl
inc
andl
incl
add
movl
cmp
movl
jb
andl
mov
inc
mov
cmpl
jge
jmp
push
push
pushl
push
push
pushl
pushl
call
cmpl
jb
mov
jmp
test
addb
xor
clc
dec
pop
cmp
subl
push
orl
je
dec
add
xchg
stos
xchg
imul
pop
pop
cmpb
enter
pop
jge
dec
lea
jl
sarb
test
cmp
sub
pop
inc
push
adc
adc
or
lock
ret
fisttpll
les
push
mov
dec
mov
sbbb
mov
sti
cltd
fldt
push
sbb
jp
xchg
enter
xlat
lret
push
fdivl
repnz
xor
mov
ret
test
add
call
jmp
movsl
outsl
jo
cvtdq2ps
imul
sahf
iret
dec
dec
and
lahf
mov
jns
jmp
add
str
leave
and
orl
in
into
shlb
test
cmc
fstl
pop
and
add
sub
add
xor
lock
rcll
test
lret
add
jp
cmpsl
out
sub
push
jecxz
xchg
jno
pop
int3
mov
inc
lahf
out
pop
xor
xchg
fadds
xchg
jns
in
xchg
or
ljmp
lods
inc
inc
imul
or
xlat
out
cwtl
xor
and
jbe
int
mov
xor
pop
pop
jge
sub
gs
push
push
cmpsl
je
test
add
gs
shr
mov
mov
pushf
fadds
jno
inc
dec
mov
ret
mov
andl
mov
out
dec
dec
adc
ss
inc
shl
push
pushf
nop
mulb
testb
sub
in
add
stc
mov
cwtl
add
sahf
pop
frstor
sbb
into
pop
es
adc
stos
fimuls
in
popf
inc
pop
add
jne
xor
fldt
cld
cmpsl
mov
adc
stc
mov
ds
xor
stc
cld
dec
adc
pop
cmpsl
pop
call
dec
sbb
aas
push
add
out
lahf
mov
xchg
imul
mov
rcll
mov
inc
xor
leave
mov
mov
repnz
mov
sahf
xlat
mov
sbb
orb
xor
push
mov
xor
lret
loop
std
jnp
in
mov
jbe
iret
call
jae
dec
mov
jns
aam
cmp
or
lods
sbb
jo
jp
cltd
jmp
jbe
js
pop
test
xorb
xorl
xchg
push
sub
in
stc
mov
adc
rorb
mov
orb
mov
call
xor
jne
daa
jg
sbb
xchg
dec
mov
or
mov
pusha
je
mov
scas
leave
mov
add
xlat
mov
in
mov
push
push
jp
loopne
shll
add
adcb
push
stc
inc
cmp
loop
call
inc
ja
sbb
inc
lods
or
and
in
sbb
popa
and
enter
sbb
jo
mov
cmp
scas
lods
jp
in
mov
push
jno
repz
cmp
pop
call
lret
xor
or
sub
pushf
xor
fisttps
cmp
push
sub
cmpsl
push
mov
ljmp
pop
jl
inc
mov
xorl
lea
inc
sbb
xchg
cld
fcomps
aaa
rol
outsb
xchg
jno
call
sti
idivl
mov
xchg
dec
pop
jmp
or
xor
xchg
sahf
dec
data16
gs
sbb
loopne
in
sbb
and
cltd
or
or
pop
or
pushf
adc
sbb
and
int3
sub
lock
push
mov
dec
mov
leave
push
pop
repz
imul
fwait
popa
pop
sbb
xchg
in
mov
cwtl
pop
dec
jg
jge
mov
or
popf
pop
dec
fcoms
mov
adc
cmpl
or
repnz
sub
add
inc
pop
out
add
movsb
push
test
mov
sbb
mov
sbb
mov
je
lret
cli
jae
dec
pop
pop
call
js
pushf
or
ret
sub
mov
xchg
pushl
clc
sub
adc
sub
movsb
in
xchg
adc
mov
std
rol
jb
push
pop
and
ja
iret
push
movsl
xchg
xchg
loope
aaa
pop
outsb
dec
ficompl
jno
inc
sbb
adc
divl
ret
pop
imul
cmc
jmp
sub
inc
filds
sbb
or
loop
in
mov
dec
orl
cmpsb
mov
mov
jns
cmovl
mov
add
fs
add
in
pop
in
std
stos
lds
loope
out
rcr
push
inc
movsb
inc
jg
xchg
cmpsl
ss
movsb
roll
inc
divb
add
pop
pop
fs
cmp
jb
mov
mov
fs
orb
push
jb
ss
push
js
mov
adc
or
pop
addr16
jne
inc
adc
pop
mov
lds
sbb
fnstenv
push
sbb
rclb
inc
lods
adc
or
rorb
dec
xchg
xor
xchg
cld
jo
mov
fnstsw
push
shl
push
icebp
xor
mov
lret
and
imul
mov
aas
mov
fidivrs
add
ja
mov
aad
outsl
pop
stos
stos
adc
pusha
ds
inc
mov
push
aas
aam
mov
rorb
inc
jmp
repnz
paddusw
in
inc
pop
sbb
cmp
pop
loop
cmp
popa
sbbl
xchg
xchg
jp
xor
stc
sbb
std
ja
and
lock
bound
aad
les
cwtl
and
xlat
in
and
dec
popa
xor
mov
add
shrl
add
inc
xlat
adc
mov
out
push
into
out
fnstsw
js
and
decb
in
xor
add
xor
inc
int
pop
out
xchg
pop
pop
jge
push
sub
dec
cmp
pop
mov
bound
push
pop
cmc
outsl
pop
imul
sbb
mov
popf
jno
add
ret
adc
int3
dec
jo
xchg
add
adc
loopne
aas
push
add
scas
je
repnz
xor
fdivrs
movsl
pushf
loop
fmul
push
dec
mov
ljmp
lods
adc
repnz
loopne
in
sub
dec
ret
xchg
fstl
rcrl
arpl
jg
mov
dec
xchg
adc
gs
setne
xchg
fistpll
pop
xor
sbb
scas
fisubl
xor
out
sub
push
push
int
inc
cmp
push
imul
xor
ror
sub
in
xchg
mov
movsb
out
movsb
jns
and
dec
add
push
dec
daa
insl
fwait
aaa
xchg
dec
xchg
outsl
cmp
cmpsb
clc
fsubrs
div
jno
loopne
mov
orl
xchg
imul
or
fcmovu
cmp
pop
inc
cli
cmp
adc
repnz
out
sub
je
push
lock
fiaddl
dec
push
ds
mov
dec
cltd
clc
mov
add
lea
push
jnp
xor
shl
aas
dec
pop
stos
mov
fstpt
sub
inc
test
or
shrb
and
leave
fsubrl
loopne
xchg
pop
ret
aad
ja
mov
pop
mov
jbe
mov
mov
loope
ret
popa
mov
mov
into
loopne
imul
push
insb
fsubl
out
mov
bound
aaa
rorl
scas
je
pop
insb
shrb
cmp
and
rcrb
mov
cwtl
dec
mov
mov
sti
leave
fisttpll
sbb
ss
mov
and
or
test
aas
and
test
jne
push
mov
lea
and
xor
les
cmp
add
mov
and
add
mov
icebp
cmp
call
push
inc
jl
sub
into
loop
mov
and
lret
out
subb
jno
in
icebp
add
xor
in
mov
sub
mov
imul
adcb
push
add
shll
test
call
add
sbb
cmpsb
in
stos
loopne
mov
mov
jg
adc
xchg
scas
icebp
xor
roll
pushf
fs
rcll
add
fwait
add
leave
ljmp
cli
dec
jl
cmc
cmp
mov
ret
inc
lret
ret
xchg
clc
stos
mov
popl
mov
cli
pop
and
sbb
mov
pop
jmp
cwtl
fcmovnbe
jnp
test
mov
xor
push
lret
xchg
rolb
ss
rolb
stc
gs
rcr
ret
inc
arpl
pop
dec
sub
push
adc
adc
les
pushf
mov
pop
andb
and
xor
cmpsl
pop
mov
in
cli
nop
adc
sti
jg
jns
sub
nop
add
mov
lock
bound
or
cwtl
push
jp
stos
cmp
push
je
js
repnz
adc
mov
fwait
out
add
loop
pop
ss
and
and
jmp
mov
aad
mov
sub
jg
mov
xor
js
mov
push
int3
leave
popa
xchg
jmp
xor
and
scas
xor
pop
mov
out
xchg
and
mov
mov
push
dec
mov
lods
pushf
lock
into
push
and
mov
mov
jo
inc
mov
pop
push
addr16
dec
pop
dec
std
adc
mov
and
xor
shl
mov
inc
dec
lods
cmpsl
fistpl
fnsave
and
imul
fsubrs
pop
jecxz
mov
lock
aad
in
pop
pop
ret
jl
in
roll
jp
cmp
test
xor
xor
call
inc
xchg
or
fimull
out
inc
xchg
adc
adc
fisubs
jae
pop
dec
in
xchg
and
loopne
aaa
sbb
mov
or
lock
scas
scas
push
push
sub
mov
nop
mov
xor
mov
mov
mov
push
repz
mov
clc
jae
mov
mov
lods
dec
inc
inc
into
stc
sub
filds
enter
fistl
popf
icebp
hlt
dec
loop
inc
rcll
repz
pop
enter
inc
lock
das
or
push
xor
lahf
push
addr16
mov
push
pop
ret
scas
fsts
leave
repz
or
loopne
fsts
mov
mov
add
insb
xchg
jnp
sahf
add
rcrl
shlb
cmp
scas
ret
outsl
pop
rol
jbe
xor
pop
fadds
xlat
loopne
pop
test
orl
mov
push
bound
notl
mov
stc
dec
xchg
sbb
or
add
fstl
iret
dec
pop
in
mov
and
xor
mov
je
mov
push
mov
ss
fmuls
rol
mov
insb
repz
sub
addr16
pop
mull
out
cmpsl
jae
cmp
aaa
adc
adc
sti
or
pop
lds
push
xchg
or
add
aas
inc
and
lcall
adc
mov
fistps
cmpsl
imul
je
aam
dec
in
stos
sub
push
decb
jecxz
test
add
mov
cmpsl
jmp
xchg
repz
xor
in
ror
dec
lret
jp
adc
iret
jge
test
fildll
xlat
jo
sub
push
fildll
and
lahf
ret
inc
pop
dec
mov
cmp
xor
dec
sub
out
enter
mov
jnp
ljmp
test
mov
xor
inc
add
rclb
lret
imul
ja
fwait
in
ljmp
sahf
sbb
pop
test
repz
add
xchg
and
adc
ffree
inc
xchg
mov
fdivrs
dec
inc
imul
std
fimull
sub
jp
addr16
inc
sub
jns
ret
out
jl
out
int3
out
loope
dec
fnstenv
ret
xchg
xor
cmp
sub
cmp
je
rcr
jmp
xlat
and
xchg
inc
push
push
ja
jns
ja
cltd
jl
pop
push
das
adc
mov
pop
stos
dec
mov
cmp
xor
addr16
fldenv
and
popf
sbb
push
or
sub
and
icebp
add
inc
mov
aam
sti
push
scas
in
out
cld
xor
inc
sub
shl
jns
dec
push
mov
pop
xor
decb
scas
jp
mov
jo
arpl
lea
cs
aas
cltd
outsl
jle
enterw
pusha
push
cmc
add
cmpsb
add
ret
fcmovnb
imul
and
cmc
dec
jno
push
mov
je
or
sti
jae
jns
lock
add
mov
repnz
lcall
sub
mov
outsb
movhps
mov
xchg
in
test
jno
ss
xchg
ret
sub
fwait
push
mov
pop
arpl
cltd
loop
adc
cwtl
repz
in
add
dec
scas
mov
or
dec
repnz
sbb
in
lcall
aad
dec
out
sub
sbb
adc
xchg
sbb
ljmp
mov
jl
dec
push
add
lods
cmp
and
adc
shlb
lcall
fs
call
fcmovu
dec
mov
xchg
outsl
ret
xor
or
shlb
outsl
mov
push
out
dec
cmp
out
push
pop
das
pop
hlt
add
jns
in
popf
pop
stc
aas
inc
mov
xor
mov
imul
data16
xchg
arpl
lret
mov
mov
mov
push
scas
push
cmp
gs
mov
mov
out
or
xor
fwait
jne
jmp
cmp
inc
nop
pop
jmp
jns
je
add
aaa
mov
test
mov
mov
leave
or
jno
fmull
push
das
mov
fdivrs
mov
in
push
pop
pop
sarl
gs
xchg
imul
mov
into
and
mov
aam
mov
adc
mov
jg
inc
jnp
aas
pusha
jb
and
repnz
iret
dec
test
xor
mov
cltd
movsl
pop
push
add
aas
and
in
jne
sbbl
jg
and
or
leave
xchg
lret
adc
inc
fstpl
add
loope
xchg
dec
mov
aas
lcall
loopne
or
or
repz
jge
cli
mov
negb
mov
cmp
out
stos
inc
std
pop
push
mov
pop
mov
mov
or
fistl
mov
fwait
xchg
xchg
movsb
adcb
mov
jbe
frstor
xor
mov
sbb
pushf
pop
jle
jbe
cli
pop
pop
cmp
push
hlt
test
leave
pop
mov
dec
cmp
inc
jns
outsl
stc
jmp
dec
in
ret
data16
xlat
sub
int
push
pop
fdivl
out
mov
lds
xor
leave
cmp
mov
cld
xor
pop
mov
ds
xorl
insb
in
dec
sub
pop
or
dec
dec
pushf
out
ljmp
rorl
xor
pop
add
inc
int3
push
mov
adc
pop
adc
mov
sub
into
push
inc
xchg
js
push
lret
xchg
push
and
xchg
outsb
call
or
and
dec
gs
fs
sub
lret
dec
xor
cs
pop
xchg
xor
push
jge
push
in
pop
pop
lcall
mov
inc
je
jge
mov
jge
addr16
sbb
mov
in
add
push
arpl
mov
or
loop
and
neg
inc
shlb
out
push
fldcw
pop
jge
ljmp
out
daa
clc
inc
mov
jl
cli
inc
pusha
adc
dec
clc
mov
xchg
and
sub
xor
jb
mov
jp
add
fsubrl
adc
xor
mov
daa
xor
call
fnclex
fimull
aaa
cmpsb
dec
cmc
mov
pusha
adc
out
xor
daa
sbb
les
xor
aad
fcomip
enter
jae
jo
sub
pop
inc
adc
dec
lods
cwtl
xor
pop
sub
fwait
lock
loopne
pop
mov
inc
out
pop
lds
mov
leave
pop
stos
jg
xor
adcl
jne
mov
das
jns
loop
jnp
andb
xor
mov
jo
cmp
jns
push
or
push
add
inc
mov
jo
adc
es
xor
dec
cmp
sbb
mov
sbb
sub
in
bound
andl
pop
mov
std
enter
int3
outsb
push
out
scas
jecxz
or
loop
negl
and
std
shr
mov
jle
mov
or
leave
fwait
jae
and
out
pop
lret
push
lods
jnp
push
testb
ret
push
adc
rorl
mov
into
jge
ljmp
dec
mov
shlb
and
jno
mov
lds
pushf
cltd
adc
ret
movl
stc
add
cmc
sub
clc
in
xor
push
xor
pop
or
cmp
insb
jp
jo
pop
sub
or
cmp
mov
das
mov
mov
loopne
jbe
pop
je
pop
or
sarb
inc
negb
aaa
js
jmp
sbb
xchg
test
fs
js
in
add
fmuls
dec
out
inc
lcall
mov
rolb
pop
testb
mov
dec
andb
adc
push
out
jnp
movl
cmp
call
push
mov
jg
sbb
pop
test
pop
ja
or
mov
adc
gs
dec
push
mov
adc
das
cwtl
adc
push
aaa
push
out
sub
sub
push
leave
fcomps
inc
dec
lods
scas
adc
or
insl
sub
arpl
xor
and
gs
mov
repz
sbb
add
lcall
dec
jmp
fwait
sbb
repz
insl
in
stc
mov
sub
pop
bound
push
mov
mov
inc
dec
push
loop
fwait
data16
xor
pop
inc
and
mov
pop
hlt
es
and
orl
ret
xor
int3
mov
or
rcrl
into
or
push
iret
xchg
pop
lret
and
add
mov
stos
inc
adcb
enter
int3
ja
icebp
test
jbe
clc
js
pop
and
ret
xor
fs
xchg
sub
loopne
repz
xor
stos
push
arpl
cmp
push
or
xor
xchg
add
pop
sub
push
xchg
mov
mov
mov
repz
aas
jno
mov
mov
pop
mov
sub
int
mov
fldcw
jp
push
inc
jb
data16
in
fildl
dec
mov
sub
xchg
sbb
sub
jne
xchg
mov
xchg
sub
lcall
jl
aad
inc
icebp
das
daa
jmp
lods
es
pop
sahf
xchg
pushf
fwait
jno
jmp
and
mov
jecxz
or
imul
jbe
and
sahf
ljmp
adc
pop
cmp
movsl
test
loopne
adc
xor
lds
jl
jnp
arpl
sbb
xchg
test
xor
push
stos
push
push
into
xchg
jno
xor
pop
insb
mov
jp
or
mov
sub
je
popa
inc
pop
cmp
mov
insl
add
jle
lock
or
jge
cli
cmp
xchg
popa
xchg
adc
mov
insl
pop
mov
out
movsl
or
add
ja
adc
call
push
dec
pop
mov
sti
in
adc
sti
mov
test
in
cmpsl
ror
sti
fcoms
sub
jne
sbb
mov
jns
adc
lock
add
mov
enter
loop
pop
sub
out
mov
mov
adc
dec
test
add
cs
adc
xchg
rorl
loopne
imulb
lret
orb
call
fcmove
shlb
cmpsb
mov
sbbl
mov
test
in
sbb
adc
outsb
mov
roll
xor
fwait
shlb
cli
pop
xor
xor
or
push
dec
cmp
pop
inc
or
cmpsb
mov
push
mov
sub
mov
addr16
fistl
ror
sub
mov
jl
sbb
jl
sti
stc
test
ljmp
loope
cmpsb
arpl
shrl
sub
sbb
cmp
fadd
lahf
data16
adc
xchg
sbb
mov
out
jo
sbb
daa
push
jae
divb
sbb
adc
sti
push
insb
cmpsl
push
or
pop
mov
loope
sahf
and
mov
out
adc
sub
repz
dec
fsubp
ret
leave
cld
inc
cmp
hlt
mov
shr
cld
jo
fucomi
cmpsb
stos
mov
mov
repz
in
xchg
sub
andb
subb
mov
insl
xchg
out
pushw
add
or
push
mov
clc
cs
jp
jno
sar
mov
mov
imul
adc
jl
push
mov
pop
sbb
cltd
cmp
imull
out
xor
js
mov
xchg
pop
add
arpl
divb
lds
inc
sub
push
mov
cmp
jne
fldenv
faddl
aad
sti
jbe
mov
test
add
push
pop
sub
sub
notb
imul
xchg
test
mov
pop
sbb
add
sub
sub
in
sbb
sti
movsb
add
xchg
xor
cmpsb
mov
pop
pop
push
arpl
nop
movsl
fiaddl
loope
loop
xor
pop
shrb
cmc
xchg
push
je
cs
lret
push
xor
sti
cmp
rorl
xchg
and
pop
cmpl
les
stc
js
add
xacquire
lret
jg
negb
xchg
xchg
arpl
outsl
push
or
mov
das
adc
mov
add
in
adc
lahf
ret
mov
test
push
push
iret
and
push
mov
pop
add
pop
cltd
add
xor
pop
pop
jne
cld
int
cs
lods
mov
mov
sbb
shrl
stc
sub
mov
pop
scas
test
aad
test
xchg
dec
bound
xor
out
xchg
mov
jmp
popf
ret
mov
pop
jo
out
add
push
test
ror
in
cmpsb
lcall
lock
pop
dec
xor
add
jmp
sub
mov
pop
jl
nop
cli
jp
bound
adc
and
or
mov
imul
xchg
cmpsl
les
xchg
das
pop
mov
stos
loop
sub
daa
fiaddl
in
dec
jl
pop
or
push
daa
ficomps
sub
arpl
add
repnz
jl
lcall
or
jecxz
mov
jge
fs
mov
out
into
lds
xor
rcr
pushl
aas
shl
push
in
fwait
and
xchg
testb
es
pop
mov
ficoml
in
jge
cmp
stc
sbb
mov
outsl
xor
ret
inc
sbb
and
hlt
sub
scas
sti
fldcw
insb
mov
pop
pushf
in
cwtl
adc
aam
rep
push
mov
cmp
iret
je
sarb
sbb
and
lock
cwtl
push
dec
sub
into
lds
lcall
sbb
jg
insl
shll
adc
or
or
cli
inc
shlb
adc
inc
dec
std
mov
xor
je
mov
push
add
stc
int
adc
outsl
ja
pushf
xchg
mov
pop
jg
pop
dec
mov
sar
cmc
data16
sbb
out
cs
mov
cs
subl
pop
pop
xor
fisubs
dec
outsb
adc
in
dec
divl
xchg
sahf
adc
or
mov
pop
adc
cld
lcall
int3
sahf
cmp
mov
stos
adc
scas
dec
bnd
pop
xor
mov
scas
pop
cmp
mov
fidivrl
arpl
mov
pop
fcos
or
xlat
push
test
mov
add
ds
test
pop
inc
hlt
shlb
mov
xor
imul
lret
fnstsw
push
clc
sahf
into
outsb
xchg
es
mov
insl
scas
mov
cwtl
daa
inc
lods
cld
mov
test
test
sbb
lea
std
arpl
mov
sbb
fldl
push
scas
fsubr
mov
cli
add
mov
in
lds
test
mov
ds
mov
iret
push
je
cltd
cmp
scas
push
lock
and
mov
negb
cmp
dec
xor
sbb
pop
adc
repnz
scas
xchg
fcoml
lods
sar
pop
jge
shlb
cmpsb
cmp
fisubl
sub
adc
es
xchg
inc
mov
outsb
fidivrs
cli
mov
mov
prefetcht0
in
dec
adc
jbe
test
mov
or
cltd
xor
js
push
or
jbe
xchg
cltd
je
xchg
subl
fmull
jg
dec
imul
pop
sub
popf
rcl
xor
xlat
jo
imul
adc
popf
xchg
test
pop
mov
xchg
pop
fbstp
jmp
lods
inc
cmp
mov
sub
insl
jb
push
and
cld
sahf
stc
addl
and
xchg
jae
daa
out
mov
imul
out
pop
daa
enter
and
cmp
in
push
push
pop
ljmp
push
mov
mov
je
std
popa
dec
jns
mov
sti
std
dec
ja
cmp
test
cmp
rclb
rcl
pusha
out
push
push
mov
or
push
repz
cli
out
jmp
and
jnp
adc
adc
inc
jge
aam
push
mov
mov
iret
mov
xchg
mov
sbb
fwait
leave
cs
adc
movsbl
dec
xchg
and
out
rcr
fucomp
aam
xchg
lcall
mov
pop
lcall
ud2
sbb
addl
pavgb
cli
mov
jno
pop
sbb
scas
jmp
imul
lahf
mov
xchg
cmp
pusha
jmp
notl
jnp
popa
ljmp
dec
adc
adc
lcall
sub
ret
push
xchg
es
dec
jb
sarb
insl
clc
pop
mov
loope
iret
das
outsl
push
in
je,pt
in
neg
stc
mov
rcrb
pop
sbb
lcall
cli
cmp
enter
loope
jae
getsec
jo
int3
lds
fnstcw
outsb
shrl
inc
mov
aaa
fildl
out
jecxz
and
push
gs
jl
dec
aaa
jno
cmp
mov
cwtl
sub
and
or
jp
mov
add
sbb
add
cltd
rol
cmpl
jb
jmp
loope
gs
or
push
scas
aaa
push
aad
roll
cmpl
xchg
inc
or
daa
addr16
jb
push
jb
les
leave
aad
mov
stos
mov
push
cmp
jns
push
jne
dec
call
rorl
pop
shrl
or
inc
push
inc
inc
push
inc
stos
clc
and
dec
daa
pop
push
jne
pop
test
fsub
cmp
testl
adc
sub
xchg
mov
in
cmp
jmp
aas
push
jecxz
xchg
decl
xor
lahf
push
sahf
stos
mov
in
cli
jle
or
lods
negb
jnp
sbb
in
lds
inc
je
test
shl
mov
jge
mov
adc
adcl
inc
pop
lods
cmp
aam
pushf
sarl
repz
mov
cmpsl
jp
adc
std
mov
mov
or
cli
dec
inc
aam
gs
add
jg
push
out
fwait
adc
xor
fs
mov
popa
fcmovb
mov
adc
adc
xor
push
mov
subl
adc
sbb
rcl
mov
mull
mov
es
enter
cmpsl
lret
cmp
scas
pop
lods
lahf
out
xor
incl
stos
dec
movsl
inc
cmp
xchg
mov
test
add
mov
aad
add
movsb
mov
adc
call
int3
hlt
movzbl
inc
jmp
fisubrl
lcall
sbb
add
lods
mov
inc
mov
mov
pop
inc
mov
inc
mov
orl
fmuls
sbb
lret
les
ret
sub
xchg
adc
add
sub
push
jbe
xchg
xchg
or
mov
rcrb
lahf
or
lret
xor
pop
jae
cmp
vphaddwq
popf
lcall
cmp
popa
mov
push
fwait
and
roll
lods
xor
shrl
popf
push
xchg
dec
popa
lea
inc
enter
jae
ljmp
popa
mov
and
mov
and
xchg
or
sub
aaa
iret
pop
stos
sub
or
push
imul
cltd
push
test
loopne
jle
sahf
inc
xchg
outsl
cmpsl
dec
loope
aad
lret
aaa
dec
cmp
clc
cwtl
jns
shll
add
add
outsb
ja
mov
int3
mov
jnp
inc
xchg
cmp
stc
movsb
sub
inc
lods
cmpsb
and
imul
shrl
cmp
and
ret
les
bound
lods
fdivrs
mov
push
sarb
or
in
std
mov
lds
aaa
pop
sub
dec
repz
sbb
aaa
cs
sbb
outsl
rcr
call
and
in
movsb
dec
xchg
jno
bound
mov
and
insb
jo
inc
xlat
das
addl
call
pop
mov
jne
sbb
jae
sbb
dec
imul
cs
popf
xor
jne
push
cmp
pop
dec
aas
push
mov
jne
push
push
mov
repnz
pushf
add
jecxz
scas
pop
jg
cld
mov
xorl
xor
mov
sub
xorl
add
or
mov
xor
sub
ror
sub
xor
mov
subl
mov
adc
jmp
or
mov
hlt
jne
add
test
adc
addl
pop
sub
mov
hlt
adc
xchg
js
outsl
add
and
leave
sahf
lods
fiadds
es
mov
hlt
lods
xchg
out
lret
adc
div
inc
out
hlt
pop
sub
sbb
and
xlat
cmpsl
test
iret
jne
or
mov
mov
fdivrl
es
arpl
push
lahf
scas
jmp
add
std
mov
fnsave
xor
jbe
jp
jg
sub
arpl
sbb
loop
test
sbb
inc
mov
add
outsl
out
inc
jb
xchg
push
mov
cmp
mov
pop
jno
mov
xchg
clc
test
jo
sbb
sbb
add
daa
sub
mov
add
sub
rcrb
mov
pop
mov
aas
pop
jp
push
out
rol
inc
repnz
popf
push
mov
sub
decb
mov
clc
or
adc
ljmp
in
push
pop
ds
sub
ja
aas
das
fnstsw
and
sti
sub
inc
add
icebp
xor
cmpl
cmp
sbb
or
xchg
and
movsl
mov
or
loope
scas
movb
andl
push
int3
mov
out
cmp
leave
outsl
lret
cld
out
loopne
adc
bound
push
cltd
repnz
mov
nop
loopne
inc
ficoml
jbe
into
inc
mov
sub
fwait
aad
repnz
in
lret
dec
daa
loope
fpatan
test
xchg
or
or
jmp
xchg
pusha
vpsubsw
ljmp
dec
push
outsb
in
sbb
push
das
decb
and
lds
fldcw
incb
ficompl
push
ja
es
inc
mov
mov
mov
add
pop
mov
adc
push
adc
hlt
mov
push
out
lea
and
add
push
xchg
sub
push
arpl
lock
and
das
adc
bound
fisubs
lcall
sbb
rcll
pop
and
rclb
dec
jecxz
inc
outsb
pop
adc
adc
pop
aad
sbb
into
jg
lock
ret
and
test
pusha
inc
js
or
xchg
xor
negl
or
push
inc
outsl
mov
test
hlt
pop
insb
aam
and
or
daa
leave
jnp,pn
stc
lock
ljmp
sbb
xchg
call
cmp
ficompl
mov
icebp
and
sbb
push
scas
mull
inc
or
sbb
push
cmp
fisttpl
ret
jnp
pop
out
push
in
test
imul
lahf
jmp
add
dec
ret
add
lods
xor
lods
cmp
out
lea
je
pop
test
outsl
mov
mov
mov
icebp
sar
dec
add
jecxz
xor
xor
jb
std
add
cld
sbb
xchg
mov
out
jp
fcmovne
inc
test
adc
jae
mov
outsb
push
popa
xor
cmpl
xchg
push
lock
adc
jno
xchg
rol
mov
lret
je
xchg
or
mov
dec
fistpll
push
push
dec
sar
fdivrs
sbb
testl
rclb
xchg
pusha
or
or
pop
not
test
mov
fs
mov
fstps
or
lcall
push
movsl
add
inc
mov
test
cltd
ds
add
adcl
lock
push
fildll
mov
and
rcrl
das
dec
out
aas
xor
repz
fldcw
dec
in
dec
addr16
arpl
push
movsl
popf
add
push
pop
scas
js
aas
jnp
or
dec
mov
add
call
cli
xor
cmpsl
shlb
cmpxchg
mov
jmp
dec
mov
std
push
je
push
gs
cld
ret
outsb
test
xor
mov
or
sbb
and
and
ss
stc
inc
xchg
outsl
push
sbb
mov
cmp
repz
mov
repz
dec
jns
enter
jmp
leave
int
lret
mov
cmpsb
orb
addr16
popa
adc
sub
cs
outsb
cmpsb
cmp
mov
pop
mov
cmpsb
int3
loopne
in
xor
out
scas
lods
xchg
es
mov
lret
in
fildll
fldenv
lret
xchg
neg
cmp
mov
add
xor
cmp
aam
in
rcrl
sub
push
scas
mov
lret
mov
mov
mov
mov
movsb
push
daa
ret
scas
mov
adc
inc
cwtl
jmp
cmpsl
jle
fsubrs
fildl
mov
mull
ljmp
outsl
sbb
pop
push
dec
xchg
addr16
arpl
sbb
cltd
test
divb
sub
mov
imul
jb
in
scas
cmp
push
push
in
call
fucom
or
testl
in
cmp
adc
sub
mov
inc
ja
pop
xchg
pop
adc
inc
les
dec
jb
out
cmc
into
adc
lret
adc
movsl
jo
jb
add
mov
lcall
jmp
decl
fwait
pushf
sti
lods
jns
or
push
loope
into
and
loop
fwait
lahf
repz
icebp
mov
jb
push
mov
pop
ficoms
popa
clc
adc
mov
aad
aas
stos
add
sarb
jbe
cmp
mov
lcall
mov
or
imulb
mov
jae
fadds
xchg
xor
inc
mov
jg
mov
push
shrb
int
add
add
outsl
xchg
cld
inc
pop
sub
rol
js
repnz
dec
cli
ret
jnp
fs
mov
rorl
std
pop
and
mov
les
rorb
mov
jo
scas
fcoms
std
push
hlt
es
xchg
repz
loopne
rclb
jmp
rolb
pop
jno
mov
ds
jno
repz
hlt
mov
push
out
iret
and
test
cli
or
jp
jo
ficoms
lcall
cmp
add
cmpsl
pop
fnstenv
cli
aam
xchg
mov
xor
mov
loope
mov
std
sbb
dec
mov
jge
outsl
scas
rcrb
jg
clc
arpl
cwtl
push
push
or
jae
and
sbb
push
cmp
outsb
xchg
mov
push
add
movsb
xchg
rcll
sbb
push
pop
adc
pop
add
shlb
js
mov
jns
das
xor
adc
nop
mov
xor
jp
and
mov
sbb
fucomp
aas
ss
fisubrl
lret
cmp
add
pushf
inc
movsl
lret
inc
push
loopne
xchg
sub
orb
xor
cmp
nop
pop
bound
xchg
sarb
fwait
mov
cmp
sub
movsl
cmpb
call
outsl
imul
mov
rcr
shrl
mov
lcall
adc
insb
lcall
test
or
in
jl
mov
add
adc
shrb
push
cwtl
stos
and
xchg
xor
push
cmp
mov
lcall
ret
sarb
lds
sub
data16
add
cmp
inc
xor
sub
xor
and
leave
jmp
iret
jo
shll
mov
es
push
pop
mov
xorl
or
mov
push
pop
sbb
mov
xchg
daa
cli
cwtl
jecxz
adc
mov
dec
aad
dec
pop
idivl
popa
mov
rorl
lahf
hlt
fs
enter
inc
inc
adc
push
mov
mov
mov
dec
mov
pop
cld
fisttps
sbb
mov
push
and
or
adc
jge
pop
nop
fiaddl
call
stos
and
cmp
fimuls
jmp
icebp
movb
cmp
dec
jnp
sti
icebp
outsl
cmpsl
leave
pop
insb
dec
push
insl
movsb
dec
fcomps
out
in
xchg
shlb
sbb
pop
pop
add
jp
jp
scas
cmpsb
xor
inc
or
sbb
pop
outsb
xchg
mov
add
add
xchg
ss
mov
scas
imul
rorb
mov
out
jae
insl
pop
jle
pop
jecxz
xor
call
syscall
arpl
mov
xlat
repnz
fistl
or
mov
push
sbb
mov
mov
inc
fldt
ljmp
mov
punpckhbw
shr
mov
inc
int3
adc
ja
add
out
into
cmc
mov
jmp
add
stc
and
ret
adc
add
mov
inc
ret
pop
adc
mov
mov
push
sbb
adc
or
mov
mov
or
fistpll
adc
aas
js
pop
cs
lret
mov
mov
inc
ret
xchg
bound
nop
test
mov
jmp
cmp
scas
mov
clc
push
call
jo
sub
gs
jg
fdivrs
lret
mov
test
cld
xor
dec
and
jb
insl
iret
xchg
pop
orb
mov
sbb
repnz
test
leave
jl
mov
or
add
pusha
pop
inc
dec
and
test
xor
fstl
jecxz
insb
jo
jl
add
imul
std
cli
mov
lret
mov
push
sbb
lret
data16
loopne
outsl
les
lret
xor
inc
popa
fwait
mov
xchg
movsl
fs
hlt
and
sub
pop
mov
cmp
imul
xor
cmpsb
cmp
push
mov
mul
rorb
pop
or
or
mov
jg
lds
pop
dec
mov
roll
mov
std
xchg
xor
adc
xchg
push
insl
lcall
out
stos
leave
iret
adc
mov
adc
jb
mov
mov
mov
fwait
gs
inc
jp
sarl
mov
and
enter
out
inc
sbb
or
test
sub
test
jno
xchg
rcll
lds
push
mov
outsl
jp
pop
sti
andl
lds
out
popf
push
outsl
lahf
cmp
xor
sti
aaa
mov
push
in
add
xchg
fsubs
ss
ret
cmpsb
movsb
sahf
pop
mov
push
mov
fidivs
mov
sbb
rorb
mov
xorl
and
adcb
inc
dec
push
sbb
into
jae
mov
lahf
inc
scas
xchg
hlt
adc
fdiv
addr16
jno
test
pop
ret
mov
mov
mov
je
push
cld
jmp
orps
in
ja
test
xchg
jbe
subb
mov
pop
inc
mov
inc
pop
fmull
shl
fmul
sub
push
inc
adc
div
inc
inc
pushf
sub
sub
cld
punpcklbw
or
push
add
push
push
lahf
sbb
lret
cmp
add
jo
jmp
shll
pop
pusha
jp
out
cmpsb
xchg
inc
xor
es
mov
and
imul
cmp
lods
jnp
sub
hlt
je
leave
xlat
push
mov
pop
dec
movsl
mov
test
out
int
push
rcrb
aad
sub
pop
loop
pop
mov
mov
fcmovb
stos
dec
jns
xor
add
out
gs
add
mov
mov
insb
mov
je
jmp
sub
pop
in
xor
xor
out
jbe
enter
add
pushf
and
xlat
addr16
fisubl
push
rcl
inc
cld
sub
push
and
call
sbb
ljmp
dec
insl
popa
iret
adc
pop
push
push
popf
inc
add
xor
mov
sub
aam
ficoms
lds
pop
mov
cmpsb
inc
enter
mov
cmp
mov
lahf
mov
mov
loop
loope
mov
cmp
fisttpl
mov
repz
xchg
jno
dec
sub
notb
push
stos
jnp
stos
jnp
pop
out
add
in
xor
fldcw
in
pushf
sbb
mov
sub
addr16
sbbb
shll
xchg
mov
inc
scas
jge
inc
addb
repnz
ljmp
pop
xor
movsl
nop
mov
xchg
bound
hlt
push
imul
in
dec
fimull
sub
sarl
mov
mov
mov
test
icebp
imul
adc
mov
pusha
and
cmp
daa
stc
aam
movsl
stc
in
xchg
mov
ret
mov
fldt
push
test
inc
mov
jno
sbb
pop
dec
push
std
adc
sub
mov
cmp
mov
sub
inc
mul
les
mov
mov
add
adc
mov
fisubs
inc
cmp
sahf
pop
cmpsb
mov
lock
jo
test
push
pop
test
mov
push
lods
jnp
stos
jo
in
add
mov
cmp
in
movsb
ljmp
add
dec
roll
pop
dec
test
sub
fadd
adc
lea
popf
add
das
push
movsl
adc
xchg
sbb
sub
cs
iret
fstl
in
loopne
scas
mov
loopne
incb
push
aam
dec
xchg
xorb
int3
cltd
les
xor
cwtl
jge
mov
dec
lds
cmp
sbb
das
rcll
hlt
mov
xchg
xchg
jne
pop
movsl
push
xor
cmp
and
mov
mov
mov
add
cmp
pop
mov
push
hlt
push
pop
sbb
mov
push
das
or
ja
sub
dec
js
push
mov
or
sbb
flds
push
sbb
sub
fmull
sub
pop
jmp
out
loopne
sti
push
inc
mov
inc
sub
adc
daa
jecxz
xor
push
mov
mov
inc
insl
xor
aam
aam
xor
test
or
es
decl
lret
out
lods
test
js
mov
imul
jns
add
lea
push
pop
stos
jecxz
into
subb
fnstenv
outsl
add
lds
popf
xchg
dec
push
mov
push
and
jbe
jno
pop
loop
jge
mov
jo
repnz
std
cmpsl
out
inc
sbb
out
aas
cmp
aam
outsb
andl
adc
jg
dec
loope
repz
fidivrs
iret
flds
test
ds
add
add
subl
or
test
in
push
xorb
mov
push
rol
mov
pop
inc
add
iret
aaa
sub
insl
jl
jb
mov
adc
xor
testb
inc
cli
and
pop
in
jle
xor
sbb
xchg
and
and
mov
lahf
and
lds
adc
push
jns
add
cs
pop
gs
push
xchg
or
hlt
call
push
lret
cld
movsb
shlb
pop
aas
sub
stos
fidivrs
aaa
pop
stos
movsb
into
out
xchg
xor
pop
aaa
addb
inc
bound
and
rcll
shrb
ss
cmp
stos
xor
es
dec
incl
sub
sbb
or
rclb
sahf
cmpsl
cld
mov
mov
stos
cli
shrb
push
fistpll
add
mov
add
pushf
and
into
das
ret
test
cmpsl
popf
inc
popf
xchg
ja
out
cmpsl
clc
stos
xor
dec
mov
dec
dec
lock
add
mov
mov
ljmp
insb
shl
mov
mov
insl
xlat
in
sub
arpl
stos
pusha
sub
cmp
xchg
int
inc
sub
mov
dec
loope
aad
int
lret
cmp
sti
aad
fwait
roll
mov
inc
push
repnz
sub
aas
pop
sub
sub
imul
mov
popf
mov
test
push
stos
adc
jbe
mov
out
mov
jle
addl
xchg
adc
scas
jmp
imul
in
add
scas
dec
cmp
push
shll
pop
insl
push
xchg
jp
or
cmpsb
and
hlt
pop
jne
inc
dec
cmpl
in
dec
fldcw
je
pop
dec
lea
int
push
out
fsubs
and
xchg
pop
or
adcl
out
cmp
jl
sti
std
jg
mov
ficoml
gs
add
push
scas
insl
push
notl
lcall
into
mov
movsb
add
outsb
int3
push
insl
sbb
mov
inc
sti
addr16
sub
lahf
mov
es
negl
pop
jns
dec
ds
rclb
inc
sbb
out
mov
mov
cmp
adc
mov
push
sbb
or
in
test
leave
rolb
adc
out
add
mov
adc
sbb
fs
dec
into
xchg
jbe
insb
int
add
sub
push
cltd
in
jae
outsb
vcvttps2dq
cmp
es
mov
fwait
enter
mov
push
mov
mov
ror
test
outsb
idivb
cmp
push
push
or
add
icebp
cmp
mov
inc
outsl
inc
movsb
sub
push
xor
enter
bnd
sbb
inc
imul
pop
add
aas
push
icebp
orb
xor
mov
ss
mov
rorl
mov
mov
je
out
test
stos
fstpt
out
and
xor
sti
sbb
xchg
sub
insl
pop
mov
dec
idivb
imul
rolb
and
and
lret
jl
roll
inc
push
daa
addb
sub
insl
adc
pop
cs
ret
or
leave
mov
shl
lret
int
inc
popf
mov
adc
cmc
fidivrl
outsl
dec
mov
mov
sub
cmp
mov
test
movzbl
je
pop
cmpl
adc
inc
test
mov
push
push
pop
mov
xlat
test
cmp
lods
pop
mov
pop
aad
push
aad
movsl
sub
cmp
xchg
inc
cmp
jo
mov
out
dec
pop
pop
repz
shr
xchg
paddb
andl
rolb
rclb
sub
push
ja
jnp
jo
loope
sbb
jo
scas
mov
dec
lock
jno
sub
and
cld
dec
mov
jg
jg
cmp
inc
test
mov
xchg
inc
ljmp
jp
push
dec
lds
fdivrp
mov
inc
in
adc
pusha
jo
mov
add
popf
cwtl
leave
jge
mov
sahf
sahf
or
push
ficomps
mov
hlt
xchg
sbb
sbb
into
mov
test
adc
jns
testb
xor
and
rorl
sub
or
fwait
fdiv
adc
repz
adc
out
mov
inc
push
push
jb
fucomp
push
icebp
popf
in
jno
fldt
cmp
jmp
or
shll
inc
sbb
loop
or
cmp
push
push
jbe
inc
xchg
mov
fstps
aas
decl
in
sbb
xchg
cwtl
adc
or
bound
pop
xor
shrb
mov
out
adc
dec
sub
call
jp
dec
push
mov
pop
mov
pop
in
sub
lea
repz
leave
or
ret
mov
sbb
loop
inc
pop
jle
in
sbb
push
movsb
push
dec
mov
dec
pusha
mov
addb
int3
xchg
mov
dec
es
popa
das
sbb
outsb
mov
xchg
out
mov
add
stc
inc
arpl
xchg
adc
call
mov
leave
mulb
addb
addr16
out
xor
cmp
shll
aas
jb
cmp
dec
pop
imul
ret
pop
pop
xlat
sub
scas
call
sub
sub
xchg
cmpsb
popf
xlat
xchg
and
daa
mov
xorb
jb
popa
push
cld
adc
jmp
adc
mov
fcomp
or
add
xor
inc
xlat
iret
ret
pushf
cmp
or
bound
sarb
sub
das
or
gs
jp
rol
mov
in
rorb
aam
lock
or
addl
sub
sub
bound
outsb
lods
and
ja
xchg
sub
xor
popa
lcall
pop
mov
pop
rol
or
sub
mov
int3
pop
ficoms
scas
icebp
popa
sub
jge
out
push
arpl
ljmp
ljmp
sub
adc
mov
jmp
cmp
lods
ljmp
int3
sbb
push
js
ds
jmp
scas
jbe
iret
data16
xchg
pop
push
xchg
out
mov
pop
push
je
sti
out
loopne
inc
dec
por
mov
adc
pop
lods
clc
and
xchg
pop
push
or
aad
int3
fs
scas
mov
mull
testb
jl
xchg
adc
dec
es
adc
sbb
popa
clc
sub
or
lods
add
xor
add
pop
jg
pop
fbld
cmp
mov
xchg
rcrb
lret
cltd
lea
subb
lea
in
es
addl
imul
fsin
inc
and
sub
shrl
lahf
mov
addr16
int
jne
hlt
xor
or
mov
repnz
cmpsb
sub
inc
bound
clc
or
mov
pop
leave
gs
jbe
insb
and
xchg
pusha
mov
mov
sbb
dec
or
xor
test
mov
stos
pop
movsb
pop
das
push
xor
mov
lock
lcall
lods
inc
push
jg
mov
aad
inc
mov
inc
jb
inc
inc
ret
and
xchg
mov
loope
mov
inc
aas
cli
bound
inc
addl
push
dec
push
mov
lods
lds
jo
mov
outsb
mov
cmp
mov
stos
or
movsb
dec
push
cmp
and
xchg
ret
or
add
arpl
mov
xchg
mov
int3
sbb
push
fistl
cmpsl
test
or
add
push
xchg
rcl
add
and
xchg
jno
ret
mov
test
aad
inc
pop
out
adc
testl
iret
int
addl
pop
lahf
test
data16
jo
and
sbb
mov
add
xor
imul
sbb
inc
push
jne
mov
and
scas
pop
push
cmpsl
out
outsl
dec
cmp
push
fs
mov
scas
and
pop
ret
or
nop
rolb
inc
popf
decb
dec
lret
and
push
pop
cmp
cmpsb
fs
adc
and
add
icebp
and
frstor
pusha
movsl
sbb
mov
bound
sarl
lods
adc
xchg
xlat
mov
enter
add
inc
fwait
sbb
stos
push
lods
lcall
imul
dec
hlt
outsl
test
xor
out
ss
mov
cld
mov
int
and
pop
cmp
pop
std
mov
sub
ja
mov
pop
jae
rcr
push
cmpsl
out
rclb
test
cmpsl
in
adc
shr
add
stos
inc
movsl
mov
fsubrl
pop
out
inc
nop
jnp
mov
nop
mov
iret
insb
xor
icebp
out
icebp
in
icebp
dec
in
cli
movsb
cs
pop
dec
daa
out
hlt
les
sbb
mov
adc
jl
xchg
jne
pop
outsl
mov
mov
fstpl
shlb
rol
mov
adc
inc
add
push
cmp
sti
shll
aad
addr16
jl
mov
xor
jp
cmp
xchg
adc
mov
enter
cmp
or
outsb
dec
repnz
cmc
lahf
cltd
cli
sbb
mov
mov
mov
out
mov
xchg
aad
cmp
xor
outsl
pop
or
or
cld
or
loopne
out
fdivl
loop
es
push
lret
sbb
and
or
mov
stc
mov
fldl
and
hlt
xor
jne
pop
ss
or
inc
jp
sbb
sub
jnp
jg
clc
pusha
and
jl
dec
xchg
rolb
scas
sbb
shlb
xor
lret
cli
pop
popa
stc
in
test
adc
fists
mov
push
mov
mov
shlb
sqrtps
mov
mov
and
lock
jbe
pop
lret
or
add
mov
in
nop
jge
mov
cmp
daa
in
adc
dec
pop
sub
mov
push
and
fcompl
lgs
sub
xchg
sub
test
cld
and
pop
pop
or
lds
jns
imul
shlb
xor
sbb
std
jno
push
lods
xor
mov
out
push
test
pop
notb
lock
cmp
add
xchg
jecxz
sub
push
and
xchg
xlat
or
pop
stos
xchg
adc
dec
jle
jmp
jne
daa
jmp
and
test
pop
int
frstor
mov
insb
inc
mov
lea
sbb
sbb
cld
scas
in
and
or
lea
js
shrb
into
mov
and
out
dec
in
jp
mov
in
cmpsl
sbb
daa
aad
test
nop
sbb
enter
iret
imul
aam
mov
fnsave
or
movsl
icebp
hlt
shrl
cmp
pop
inc
dec
inc
test
cwtl
sub
shll
gs
pop
push
pop
xchg
mov
and
push
sbb
lret
lea
adc
push
rorb
lret
inc
lock
movsb
out
int
bound
jb
fldl
jno
fnstsw
pop
fdivrl
jo
loope
mov
push
sub
xchg
mov
ljmp
mov
xor
jnp
insb
stc
insb
sbb
sbb
pop
sub
scas
popa
jnp
dec
sbb
sbb
and
les
movq
sahf
test
xchg
adc
cmc
loope
stos
pop
xor
xlat
loopne
lcall
mov
jns
mov
cwtl
lahf
sub
loopne
js
icebp
xchg
dec
push
pop
in
imul
rcl
mov
hlt
fisttpl
mov
lret
adc
out
addb
inc
mov
cmc
shll
push
fmuls
nop
push
mov
cmp
lret
xor
cmpsl
divl
push
bound
jb
lea
popf
fistps
cli
test
mov
inc
jmp
push
nop
loope
mov
dec
and
ljmp
pop
iret
fdivrl
cmc
outsl
jns
test
mov
adc
lahf
dec
inc
in
and
pusha
sbb
loopne
mov
push
lods
clc
pop
push
insb
inc
xchg
lods
xchg
lea
jns
lret
pop
testl
repz
shll
bound
jge
pushf
push
mov
jp
cwtl
fidivs
out
repz
scas
stos
mov
fstpt
mov
test
xchg
xor
xlat
push
iret
fisubs
sbb
pop
dec
fstl
sti
test
frstor
inc
mov
pop
mov
int3
cmpsb
and
stos
std
xchg
fldenv
icebp
and
and
testl
add
aas
mov
insl
inc
mov
out
call
bound
aaa
sbb
pop
sub
int
aam
mov
jbe
xchg
test
jne
mov
fbstp
cmpsb
mov
mov
jb
adc
cmp
das
bound
jp
popa
popf
add
add
jecxz
mov
loop
xor
jge
sti
loope
or
sahf
imul
jmp
and
pop
shrb
jne
hlt
adc
add
in
div
xchg
inc
fcmovnb
dec
aad
xor
rorl
mov
sbb
cltd
aas
add
push
sbb
and
icebp
mov
push
out
repz
aaa
bnd
dec
xchg
int3
stc
jp
add
out
popf
mov
out
push
jbe
jne
mov
shl
push
mov
icebp
adc
rclb
mov
and
mov
jl
daa
cli
adc
add
mov
push
pop
dec
inc
pop
in
sbb
fisubrs
push
jle
pop
stos
xor
mov
jbe
rcll
mov
lahf
jo
jne
out
dec
pop
cmp
mov
bound
pop
outsb
mov
mov
fs
decb
pop
mov
push
sub
nop
jnp
jne
lret
sub
sub
xchg
test
out
adc
pop
adc
jnp
xchg
in
add
sub
movsb
xchg
clc
movsl
xlat
jb
aaa
ds
adc
mov
rcrl
aad
xor
sahf
mov
dec
or
xlat
push
add
xor
inc
imul
scas
lods
mov
push
jecxz
pop
dec
and
rclb
lds
cmc
test
ja
stc
inc
sahf
dec
ret
js
nop
sbb
rolb
inc
arpl
dec
imul
adc
adc
mov
scas
push
ret
pop
movsb
mov
sub
loopne
pop
cli
les
stos
jecxz,pn
neg
or
dec
mov
adc
ror
jae
mov
push
xchg
out
leave
stc
cmpsb
into
add
out
mov
aam
sti
dec
xchg
mov
push
xor
jecxz
in
cwtl
mov
sub
loope
insb
out
or
shrl
out
fsts
out
std
mov
lret
movsl
inc
inc
mov
xchg
fucomip
fidivl
cld
mov
icebp
dec
mov
imul
push
add
pop
jb
insb
or
mov
push
insl
push
mov
cli
mov
and
xchg
inc
aaa
pop
out
jmp
xchg
in
mov
adc
lahf
test
sahf
push
mov
inc
test
dec
pushl
mov
adc
mov
cwtl
stos
mov
imul
fisubrs
xchg
pop
push
inc
cmpsl
xchg
sub
fmul
movsl
add
popa
mov
test
jp
int3
aam
les
dec
xlat
or
clc
das
insl
in
mov
dec
into
mov
gs
push
aas
pop
pop
jmp
add
xchg
fs
fnsetpm(287
das
aaa
inc
jne
fwait
in
xor
adc
test
rcl
inc
or
icebp
cltd
out
mov
pop
lock
fisubrs
xchg
test
dec
mov
ret
mov
sub
jge
jecxz
push
jnp
cmp
cltd
repz
out
insb
cmp
jne
sbb
xor
xor
out
adc
or
jp
push
icebp
push
jp
mov
mov
jns
rdseed
push
and
inc
in
jae
pop
mov
test
lret
push
imul
mov
loope
gs
dec
jnp
ds
mov
sahf
das
or
pop
mov
loopne
push
jge
dec
mov
ja
jae
xchg
int
imul
lds
xchg
dec
xchg
or
xchg
jmp
and
pop
aaa
cmp
mov
popa
mov
sub
jl
mov
adc
mov
subl
sub
andl
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
andl
xor
sbbl
inc
ret
push
mov
sub
movzwl
sbb
movl
push
addl
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
call
jmp
mov
orl
push
xor
xor
or
mov
mov
xor
push
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
pushl
pushl
call
jmp
mov
subl
test
je
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
pushl
push
pushl
push
call
jmp
mov
subl
mov
adcl
xor
add
mov
mov
and
mov
adcl
mov
xorl
xor
add
decl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
movzwl
or
add
mov
mov
sbb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
pushl
call
jmp
add
mov
sbbl
sub
adcl
lea
incl
xor
xor
cmp
movl
je
mov
xor
add
movl
cmp
jne
xorl
pushl
call
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
addl
jmp
sub
mov
pop
xorl
addl
add
push
cmp
push
lea
mov
lds
dec
js
mov
inc
cmc
xor
mov
jbe
fmull
ror
add
jne
mov
dec
fnstcw
cld
mov
jne
cmp
xor
mov
sub
insb
cwtl
xor
in
jle
mov
mov
flds
xor
add
fisubrs
shlb
push
out
lahf
es
ja
adc
xor
cmp
dec
cmp
pop
jnp
negl
ficoms
push
clc
dec
rorl
cwtl
mov
pop
outsl
xchg
outsb
stos
int3
add
popf
lahf
sbb
adc
jo
ds
in
scas
pop
pop
nop
pop
fxch
repz
into
dec
inc
mov
inc
xchg
adc
out
pop
xchg
rolb
imul
jnp
mov
test
ds
sbb
cwtl
xor
cmp
sbb
and
pop
mov
cs
jmp
vpunpckhbw
mov
push
add
push
popl
push
jmp
add
mov
push
jne
jns
imul
dec
pop
xchg
xor
out
lret
mov
lret
pop
testb
dec
xor
or
or
add
divb
dec
mov
adcl
cmp
adcb
popf
xchg
jle
and
or
flds
sbbl
enter
test
pop
cmpsl
mov
daa
outsl
lret
jno
sbbl
sbb
pop
inc
and
dec
mov
outsb
cmpsl
sbb
es
mov
out
jl
mov
popa
inc
outsl
jg
mov
sti
xchg
fucom
sub
in
jge
sbb
stc
push
sarb
xor
dec
mov
adc
jne
dec
jg
aaa
aam
add
ds
mov
xchg
outsl
inc
dec
call
xor
test
xor
mov
mov
jno
dec
pop
xchg
imul
fmul
dec
les
sbb
dec
inc
movsb
mov
cvtps2pd
shr
insb
movsb
xor
int3
rolb
jp
add
pop
mov
call
lea
scas
std
push
sub
and
insl
in
lea
in
fs
call
dec
lods
fsubr
bound
nop
std
loope
les
xchg
loop
in
sub
js
mov
out
test
ror
pop
test
pop
lret
cwtl
inc
or
jge
gs
insb
cltd
lcall
daa
pop
cltd
shll
jge
mov
adc
push
in
out
cmp
pushf
fmuls
fnstenv
mov
aad
mov
cld
push
fcom
dec
ljmp
or
outsb
sub
mov
dec
and
mov
cmpsl
fwait
rolb
and
shll
fnstsw
ja
mov
adc
mov
imul
push
sarb
adc
and
orb
sub
fst
lds
mov
into
cltd
clc
mov
jg
xlat
mov
mov
jae
xor
in
test
adc
mov
pushf
in
shlb
and
imul
mov
cwtl
xchg
cmp
rcrb
cltd
out
lds
mov
dec
fsub
ja
mov
push
movsl
arpl
sbb
mov
adc
xor
fwait
cmp
inc
push
aaa
mov
ret
push
mov
xchg
or
xchg
add
test
and
in
test
daa
nop
and
push
orb
xchg
shll
adc
add
addl
pushf
xchg
xchg
leave
xor
dec
movsl
xor
repz
gs
add
pop
int3
xchg
jge
and
dec
xor
sbb
je
sbb
lcall
adc
push
test
ljmp
or
ljmp
pop
aam
ds
xchg
inc
xchg
cli
adc
arpl
inc
dec
push
call
mov
imul
push
push
cli
xlat
adc
addr16
hlt
or
popa
cmovge
or
mov
rolb
push
cmp
aad
sub
in
lret
gs
xchg
fsts
arpl
icebp
inc
shlb
ds
cmc
xchg
cmc
xchg
mov
movsl
inc
fcompl
repnz
cltd
aam
inc
mov
in
pushf
mov
jp
mov
push
ficomps
cmp
std
pusha
std
aam
aad
pop
pusha
aam
push
ds
ja
xchg
sbb
popf
gs
push
cld
mov
dec
addr16
dec
cld
jb
cmpsb
add
nop
loope
add
in
vmwrite
xor
cmp
jbe
push
pop
pop
cmc
jno
pop
pop
fnstenv
in
aaa
aad
lcall
push
gs
xor
or
es
jno
clc
or
arpl
ret
imul
mov
lea
js
leave
out
das
lods
outsl
stos
mov
or
insb
mov
add
outsb
movsl
and
scas
shrb
insl
and
dec
xchg
mov
push
mov
aaa
int3
std
lock
mov
repnz
adc
mov
cltd
popa
jmp
xchg
or
mov
daa
push
inc
cli
imul
pop
in
and
push
sub
gs
xchg
inc
pop
xor
insb
xchg
fnstsw
sbbb
adc
or
cmp
inc
mov
out
adc
ret
push
mov
jnp
stos
mov
lock
inc
fsubrl
out
mov
jecxz
or
daa
data16
inc
adc
push
xchg
std
add
fsubrs
push
popf
leave
fcoml
pop
fimull
scas
lds
push
test
std
les
fidivl
popa
jnp
lods
fs
add
popf
jno
adc
pop
ficomps
ret
fidivs
ja
sahf
in
mov
inc
clc
es
cwtl
mov
bound
pop
jmp
jbe
fistps
rolb
fadds
loope
std
loope
jnp
lret
movsb
mov
std
sub
iret
ja
and
pop
cmp
outsl
and
dec
or
fwait
push
pop
mov
gs
xorb
mov
mov
outsl
jo
mov
repnz
aad
stos
jno
pop
pop
popf
and
xor
pusha
sbb
std
lret
sbb
jnp
pop
nop
pop
outsl
daa
dec
sbbb
mov
dec
ss
jmp
mov
int3
movsl
clc
fbstp
es
mov
rcl
mov
sbb
adc
repnz
aad
adc
sub
push
enter
arpl
testb
lods
mov
xor
xor
testb
hlt
es
pop
mov
lahf
xor
mov
or
jo
inc
out
xor
sub
xchg
out
cmpsl
mov
into
cmpsl
mov
sbb
adc
aas
jbe
lock
jns
in
scas
add
mov
mov
mov
sti
stc
jno
clc
mov
dec
jecxz
loop
pop
les
sbb
adc
lahf
pop
ret
jo
inc
and
dec
lret
cmp
pop
xor
sub
mov
xchg
addb
ret
xchg
shlb
and
test
or
stos
dec
push
stos
call
lock
scas
inc
and
dec
inc
nop
xchg
adc
loope
mov
icebp
sbb
shl
stos
fcomip
ds
mov
push
shl
inc
leave
pop
fst
stos
fwait
or
shr
dec
in
call
idivb
dec
mov
movsb
xor
imul
fcomps
outsl
xchg
mov
fs
sarl
xchg
xor
mov
or
ja
stos
jmp
add
add
ficoms
push
fwait
mov
ss
idivb
bswap
cli
add
fidivs
mov
pop
test
lret
mov
jmp
cmp
imul
imul
int3
in
rol
out
stc
mov
aas
aaa
in
or
das
fcmovnu
adcb
pop
mov
xchg
pop
sub
jmp
inc
pop
movhps
push
mov
and
dec
rolb
lds
out
or
je
dec
adc
cwtl
or
push
adc
xchg
pop
mov
test
sub
inc
push
jne
adc
mov
xchg
inc
push
icebp
or
mov
push
xchg
gs
cwtl
inc
xor
cmp
fstpl
mov
xchg
push
popf
and
testb
adc
int3
dec
fwait
or
or
dec
aas
mov
jmp
mov
and
sbb
xlat
pop
sahf
into
mov
shlb
xor
pop
push
adc
jle
int3
in
mov
mov
mov
into
pop
push
or
stc
inc
out
inc
pop
ret
jns
mov
mov
out
push
sbb
jo
int
out
outsl
mov
or
push
cmp
out
outsb
inc
ljmp
rclb
jne
cs
insb
cmp
enter
jmp
cmpsl
push
mov
and
divb
loope
pushf
pop
pushf
stos
dec
add
xchg
lock
mov
inc
xor
cmp
imul
add
jle
stos
sbb
ret
push
xchg
les
add
xchg
into
sarb
sub
sub
js
jg
add
sbb
pop
loop
jmp
add
es
stos
stos
and
bound
cmp
adc
mov
xor
pop
mov
inc
fstps
mov
xor
jnp
xor
loop
mov
outsb
lods
int3
mov
mov
dec
idiv
add
xchg
xchg
test
xchg
hlt
cmpsb
cmpsb
xchg
add
jb
dec
lret
test
iret
pop
ret
cmpsl
push
inc
repnz
add
cmp
sub
int
mov
test
fnstcw
and
lret
fcmovnbe
fsubrs
jns
fiadds
js
push
mov
pop
jg
cli
in
test
popf
loopne
movsb
cmp
cmpsb
xchg
jecxz
lret
jecxz
mov
push
mov
or
mov
jmp
test
pusha
dec
mov
jg
ret
or
xchg
popw
xchg
orb
shll
jb
jp
xor
or
or
pop
pusha
fcmovnbe
int3
xor
out
dec
loopne
push
pop
xchg
pop
inc
inc
sub
mov
dec
mov
sbb
in
push
ja
test
sub
into
adc
iret
cmp
outsb
inc
hlt
stc
xor
das
outsb
fstl
jge
and
jmp
call
jns
in
mov
fwait
mov
mov
jo
mov
and
mov
xchg
dec
mov
push
ret
int
and
in
rorb
test
das
xor
fcomps
pop
pop
push
jne
mov
clc
aaa
jg
add
pop
pop
xor
aas
lods
xchg
lods
shlb
dec
aad
cld
jg
scas
cmpsb
ud1
out
test
add
test
push
inc
or
push
inc
pop
adc
andl
and
addr16
fstps
fwait
movsl
inc
xchg
das
mov
sarl
ljmp
dec
pop
jl
loope
jecxz
imul
repz
dec
adc
add
pushf
aas
addr16
pushf
add
das
mov
rcll
enter
out
inc
dec
mov
lret
adc
cmp
ja
pusha
aas
leave
jmp
inc
arpl
iret
jbe
sbb
xor
jle
mov
and
sahf
jp
iret
movsl
rolb
ret
fcomip
mov
mov
sbb
dec
and
out
aaa
xor
in
add
imul
ret
mov
fisubrl
cmpl
andl
push
out
dec
mov
pushf
inc
ret
adc
push
and
and
lods
xchg
movsl
xchg
repz
xchg
jp
push
or
dec
mov
sbb
mov
hlt
xchg
out
pop
fstpt
ja
pop
mov
lds
ja
jns
cmp
or
lcall
sti
aam
inc
lret
pop
cmp
jg
or
xchg
test
repz
pop
cmp
aas
cli
push
hlt
adc
jnp
dec
dec
jno
in
or
xchg
subl
sub
movsl
xor
aaa
movb
inc
xchg
mov
stos
daa
loopne
fisubrs
xor
ret
lods
in
ljmp
cmp
enter
dec
out
loope
sbb
push
cltd
iret
xchg
or
and
es
or
xor
ljmp
icebp
hlt
test
mov
fisttpll
xchg
rcll
mov
or
or
cs
pop
aam
nop
lock
clc
mov
insb
outsb
fimuls
ror
mov
fsts
je
bound
sub
cmp
pop
and
jo
jno
test
mov
jg
iret
jb
sbb
incl
aad
pmaddwd
push
ror
mov
xchg
fisttps
sbb
ss
out
inc
and
dec
sbb
rol
bound
xor
insl
push
jae
loope
lcall
decl
pop
imul
ficoms
mov
adc
fsub
lds
xor
xor
cmp
sbb
je
ja
xlat
push
lock
adcl
enter
mov
jb
fadds
lock
mov
inc
pop
adc
pop
mov
ss
clc
in
pop
lcall
stos
test
mov
lcall
mov
je
jge
push
xchg
in
or
daa
cmp
mov
mov
rolb
and
fldl
push
xlat
mov
lahf
movsw
call
subl
test
dec
push
pop
inc
xchg
mov
enter
fnstcw
pop
or
test
and
xchg
rorl
sbb
pop
insl
adc
cmpsb
loopne
dec
sub
int3
daa
fwait
push
xchg
xor
mov
xchg
push
mov
rolb
push
dec
adc
push
adc
outsl
add
sbb
arpl
nopl
out
xor
cmovno
push
and
xchg
insb
or
out
scas
mov
js
js
mov
daa
in
int
daa
lret
mov
jns
mov
xor
int3
mov
lods
mov
mov
sub
cmp
lret
jo
adc
xor
sub
cmc
and
aas
mov
mov
test
pop
push
or
fidivrl
jl
into
jecxz
adc
xchg
call
sub
pop
cmp
dec
sbbl
sbb
lret
sti
jnp
adc
lods
mov
cmp
aad
stc
outsb
scas
adc
rcrb
lds
out
pusha
lods
push
ret
pop
cmp
aad
clc
xlat
pop
scas
shl
and
inc
mov
sub
mov
cmc
push
mov
inc
jb
pop
sti
pop
loope
cld
popa
insl
sub
cmp
out
out
lcall
mov
inc
rcrb
stc
les
in
setp
int3
cmpsb
xchg
push
pop
push
pop
jno
int
mov
imul
mov
fs
fs
dec
cmp
push
leave
data16
or
mov
iret
xor
insl
push
mov
jp
mov
jecxz
cs
leave
and
xchg
xlat
xchg
mov
sub
ds
test
in
mov
sbb
dec
or
hlt
outsl
cmp
jg
test
ret
push
shlb
psrld
mov
add
jo
xorb
xchg
call
ja
pop
subb
mov
rcrb
sub
cmc
and
add
inc
popa
arpl
sub
jne
and
repz
or
out
push
fldl
pop
sbb
or
aam
mov
mov
jp
sbb
xchg
mov
lea
jbe
es
cmp
stos
mov
xchg
dec
idiv
pop
push
lods
xchg
pop
and
inc
mov
add
sub
stc
xchg
sbb
and
das
je
stc
lods
mov
xlat
sub
jge
mov
dec
cwtl
dec
imul
jl
fcomip
jecxz
mov
mov
xchg
aaa
inc
and
jle
into
int3
xor
inc
inc
add
mov
cvtpi2ps
lds
inc
mov
jne
shll
mov
push
rcrl
fiadds
pop
jp
out
sti
add
shrl
out
js
nop
mov
jnp
fcmovbe
repz
dec
dec
and
or
pop
aad
and
lea
rcr
loope
or
add
icebp
cmp
adc
sbb
add
mov
aam
xchg
leave
or
rolb
jge
add
and
dec
pop
fmul
cmp
pop
push
or
xchg
pop
mov
int3
repz
push
mov
xorl
push
cwtl
hlt
push
pop
testl
pop
scas
cmpsl
rcr
inc
lret
cmp
sub
and
mov
jg
out
sub
roll
pop
add
or
dec
mov
or
add
mov
cltd
pop
mov
hlt
mov
je
ja
shrl
jg
mov
jno
aam
popa
push
outsl
scas
mov
jns
pop
xchg
xor
jge
lds
pop
mov
xor
push
divb
pop
mov
sbbl
lods
in
mov
jb
push
sbb
push
loop
sti
sub
int
jmp
xchg
and
mov
mov
loop
mov
movsb
cmp
jl
iret
xor
stc
cli
cmp
sub
and
sti
frstor
xchg
iret
sbb
add
xlat
pushf
adc
cld
addr16
repz
daa
pop
or
mov
pop
inc
outsb
jp
sbb
iret
mov
inc
mov
xor
rcrl
inc
and
xchg
jge
push
lahf
add
enter
jae
out
jo
out
outsl
cmp
push
fs
jno
pop
cmp
stos
or
pop
sbb
arpl
push
enter
aam
push
jns
insb
jnp
or
arpl
xor
adc
icebp
gs
dec
jge
and
flds
clc
scas
clc
xchg
dec
push
ror
fldenv
xchg
jge
mov
mov
push
enter
test
adc
popa
sbb
in
dec
std
mov
and
lret
dec
push
dec
cmp
rcl
in
push
les
sbb
cs
and
and
ffree
fwait
pop
addr16
xchg
cmp
divb
adc
lahf
add
insl
jbe
out
sbb
mov
push
pop
and
push
roll
mov
fldcw
push
and
loope
outsb
pop
jnp
loopne
insl
aam
fidivrl
inc
sbb
push
loop
dec
and
jno
nop
mov
or
xor
es
dec
out
push
sahf
inc
dec
jmp
jae
and
pop
aaa
mov
or
fsub
fwait
dec
pop
xchg
int3
pushfw
sub
or
cmp
cmc
jae
arpl
pop
adc
dec
adc
ja
mov
or
insl
and
aam
leave
lods
int3
test
stos
pop
roll
pop
pop
xlat
insl
imul
lret
pop
bound
shll
dec
cmp
cmc
das
mov
pop
nopl
ljmp
and
hlt
mov
add
cmp
stos
cmp
mov
add
xchg
divl
pushf
aam
std
sti
addr16
enter
add
jp
pop
fs
fisubrs
and
sahf
loop
mov
hlt
xorl
fwait
cli
js
pop
mov
jge
xlat
cld
xchg
es
pop
pop
cmc
pop
clc
cmc
jl
fisubrs
push
das
lret
cli
das
not
add
lcall
mov
icebp
fwait
xchg
or
sbb
sub
imul
aam
insl
or
scas
mov
add
jae
shrd
mov
xchg
or
jo
jmp
add
jo
rcll
std
jae
testl
aaa
pushf
mov
test
shl
xlat
pop
jo
ljmp
pop
insb
add
jmp
fwait
daa
cs
adc
movsl
testl
sbb
xor
and
arpl
pop
dec
push
mov
fildll
sub
jne
push
enter
movsb
movsl
test
loop
imul
scas
xorb
scas
mov
rcll
fstps
xlat
xchg
daa
jmp
push
nop
lret
sub
pop
adc
outsb
addr16
xchg
mov
xor
push
in
callw
test
push
mov
ret
in
out
cli
inc
jmp
stos
push
dec
in
fisubrl
shrl
add
pop
mov
daa
push
jmp
push
loop
xchg
inc
test
sub
lock
pop
insl
sub
mov
inc
cmc
pop
mov
add
mov
leave
cmpsl
pushl
fsubrs
lahf
inc
mov
stos
sarb
test
lret
jns
ret
mov
xchg
jmp
cmpsl
jmp
and
ljmpw
or
or
rorl
pop
cmp
in
sub
xchg
icebp
xchg
sub
sar
or
repnz
repnz
mov
stc
out
cmpsb
push
mov
sub
jg
loope
ja
adc
out
push
sbb
fldcw
int
cmp
popf
mov
dec
xor
shlb
push
xor
or
scas
mov
mov
sti
out
ret
pop
repz
jecxz
sbb
xchg
in
popf
enter
xor
add
push
insb
sub
pop
xlat
mov
nop
js
mov
mov
inc
jb
fidivrs
sub
mov
insb
fs
mov
leave
xlat
mov
shlb
or
mov
pop
das
lods
hlt
insl
push
xchg
pushf
mov
das
dec
mov
pop
out
dec
outsb
shrb
cmpsb
loop
mov
popa
sub
call
ja
icebp
pop
dec
inc
sub
pop
jg
dec
jecxz
xorl
cmpb
xchg
icebp
and
ss
stos
or
inc
das
xchg
xor
imul
bound
stos
mov
popa
fld
jnp
adc
mov
push
push
push
and
call
cs
daa
cwtl
sub
mov
cmc
cld
js
mov
fwait
adc
ja
add
and
mov
jno
push
pop
fs
popa
das
jmp
notl
cld
popf
push
jmp
ja
dec
cli
mov
add
xchg
in
add
add
xchg
xchg
aad
jle
cmp
imul
divl
cmp
xor
sbb
cmp
mov
das
std
stos
sbb
fnsave
stc
mov
dec
mul
repnz
inc
mov
push
sub
lahf
mov
xchg
or
sub
mov
xlat
ret
mov
inc
lea
and
xchg
cmp
cmp
pop
sbb
enter
xor
out
inc
out
enter
jp
or
inc
sub
jne
mov
into
or
in
fdecstp
xchg
mov
es
or
lret
pop
push
clc
mov
cmp
push
or
bound
inc
cltd
outsl
cli
pop
lahf
iret
popf
sbb
scas
pop
push
dec
scas
xorl
mov
orl
cs
test
inc
mov
xor
cmp
or
inc
mov
cmp
push
mov
mov
cmp
mov
adc
test
adc
xchg
dec
pop
pop
jl
pop
cmp
dec
fsubs
stc
mov
jns
loope
loopne
jo
imul
sbbl
sbb
xchg
sbb
sbb
and
pushf
pop
sub
cmp
push
mov
and
cmc
push
pop
in
push
mov
xchg
cmp
rclb
subl
mov
cmpsl
mul
pop
cli
add
arpl
sub
cmp
aas
dec
in
mov
lret
iret
testl
adc
push
or
mov
add
sbb
sahf
mov
mov
jns
out
adc
and
pop
scas
jecxz
cmp
push
addr16
cmpsb
mov
dec
dec
push
cmc
mov
daa
pop
mov
repnz
cli
test
mov
and
sbb
xor
sarl
push
inc
push
cld
and
push
xor
mov
lea
cltd
hlt
jle
cmp
pop
add
ficompl
inc
pop
sub
inc
fmull
cltd
jg
dec
fistps
dec
add
sub
lock
call
into
sahf
mov
movsb
or
ret
cmp
daa
outsb
jne
in
js
push
mov
mov
scas
lahf
lea
mov
xchg
xchg
or
test
xchg
push
add
gs
test
dec
pop
fimull
dec
inc
mov
sahf
push
insb
and
dec
jnp
or
cmp
int3
or
shll
sarb
dec
int
lahf
movsb
sbb
mov
mov
cwtl
jge
jb
adc
lds
sbb
sbb
xchg
push
xor
vmovupd
mov
lods
xchg
jg
cmp
xorl
mov
xchg
loop
stc
sti
mov
mov
inc
jecxz
sub
dec
loope
lods
mov
repz
fmull
add
and
inc
xlat
xor
xchg
mov
jmp
mov
cwtl
insb
sub
push
icebp
stos
sar
push
mov
mov
ljmp
mov
mov
movsl
jns
fs
inc
lcall
adc
sbb
mov
lods
movsb
addr16
movsb
push
jmp
or
push
mov
and
pushf
lea
mov
xor
inc
int3
mov
sub
lret
xchg
loopne
lret
cmp
jmp
xor
cmp
outsb
cmpl
push
jne
push
push
insl
xor
sub
pop
fcmove
and
mov
xchg
bound
cld
popf
xlat
ss
pop
add
sti
jns
adc
add
xor
and
bound
lods
jge
xchg
in
xchg
js
xchg
movsb
jne
sub
cmpsl
adc
fwait
shl
aaa
test
div
push
lds
lret
pushf
shrl
pop
cmp
test
and
outsl
cmpsl
movsl
mov
dec
xchg
adc
jb
popf
mov
nop
push
cmp
int3
fldl
cmpsl
inc
rcrl
fdivr
sbb
repnz
lret
sub
sub
xor
inc
arpl
into
mov
inc
or
es
out
push
rcrl
cmpsl
bound
inc
sahf
push
jno
xor
add
mov
and
cmc
aam
push
aas
cwtl
mov
into
and
ljmp
dec
push
mov
test
scas
shrl
rcrb
inc
mov
mov
es
mov
arpl
pusha
mov
mov
outsl
aad
cmp
fisubl
outsl
ljmp
filds
ffreep
enter
jns
enter
sub
or
mov
add
add
xor
jno
sbb
mov
in
mov
add
leave
in
cmp
mov
mov
cli
inc
jecxz
cld
cmp
orb
inc
dec
insl
sub
cmpsl
jmp
mov
jnp
lahf
inc
out
xor
cltd
dec
lret
jne
mov
jno
sti
mov
rsqrtps
or
cli
aaa
jb
aad
and
xlat
ja
dec
inc
loope
dec
cmc
push
jb
mov
push
sub
popa
xor
xor
and
pop
jmp
dec
adc
push
out
cmp
rol
cmp
sarb
sub
adc
iret
rcrb
mov
jmp
xchg
cmp
lret
js
mov
test
or
xadd
lods
cli
pop
repz
jb
add
mov
mov
loop
loop
and
fstpt
push
mov
fwait
jl
out
popf
data16
repz
sbb
and
cmp
out
mov
mov
cltd
pop
mov
lcall
xorb
dec
std
lock
pop
add
pusha
sahf
fbld
pusha
bnd
sti
mov
loope
push
jp
es
pop
dec
xchg
and
loop
push
mulb
xor
sub
cld
xchg
je
push
in
pushf
mov
mov
push
addr16
ds
dec
jp
cwtl
jns
pop
dec
fwait
add
mov
test
lods
fdivs
mov
add
addl
or
mov
mov
daa
sbb
push
cmp
inc
mov
lock
pop
addr16
sub
loope
jb
push
stos
repz
mov
add
jno
or
and
fs
xor
hlt
push
call
jae
clc
stc
mov
push
add
or
dec
adc
test
pop
push
shll
sub
mov
stos
xor
jae
and
add
mov
out
aas
xor
ficompl
cld
mov
push
sbb
cld
fildl
or
mov
in
pop
adc
dec
movsb
inc
mov
cltd
mov
jbe
push
inc
mov
or
cmpsl
cmpb
mov
mov
aas
repz
adc
cmpb
xor
ds
xor
aam
imul
sbb
out
mov
dec
repnz
mov
lahf
or
iret
push
ret
xchg
nop
test
lcall
mov
pop
mov
inc
notl
sub
pop
lock
shl
cltd
mov
stos
aas
mov
jg
test
mov
pusha
inc
sbb
out
loopne
push
lret
jge
aam
and
lds
jbe
sbb
jl
lcall
xchg
cmc
xchg
push
xchg
xchg
sbb
bound
test
xlat
cmp
sahf
popa
jge
aam
mov
lds
test
sbb
and
repnz
fcom
sub
mov
jp
xchg
and
mov
ds
nop
mov
pop
jp
jbe
cwtl
inc
lahf
aad
xchg
or
std
mov
pop
jnp
push
dec
xchg
lret
int
daa
insb
in
jg
bnd
sbb
inc
jmp
sbb
mov
push
cmpsl
int3
lods
mov
pop
dec
fsubrs
std
out
sbb
and
rclb
stos
loop
and
jbe
or
push
insb
sub
add
dec
test
out
fidivrl
fldl2t
flds
int
xor
aas
rclb
nop
adc
mov
in
push
lods
addr16
clc
lods
test
jo
repz
mov
pushf
fadds
lock
mov
scas
les
cmp
jno
ds
xor
xchg
shlb
popl
icebp
mov
stos
dec
lock
pop
push
mov
cmp
mov
loopne
aam
mov
xchg
mov
cmc
xchg
test
push
in
push
popf
mov
in
imul
mov
ficoms
mov
push
pusha
insl
mov
sub
mov
movsl
jecxz
les
cltd
ja
mov
push
push
shlb
movb
out
inc
add
mov
add
sbb
add
enter
insb
add
xorl
pushl
pushl
call
sub
jmp
scas
cltd
and
add
cwtl
int
mulb
ror
addl
imul
outsl
test
sahf
pop
outsb
leave
add
cmp
adc
lea
aad
xchg
ds
push
xor
inc
sarb
cmpl
add
sub
sbb
push
repz
sub
mov
adc
lea
cmpsl
pop
ljmp
gs
sub
add
push
out
xchg
mov
pop
cli
ljmp
je
fstl
outsb
dec
inc
fstl
arpl
xor
sbb
xor
cmp
cld
roll
dec
repz
ret
bound
int
les
inc
cld
imul
popa
clc
sarb
mov
js
dec
xchg
mov
push
js
adc
jae
je
andl
xchg
fstl
arpl
inc
jbe
cmpl
add
dec
repnz
mull
mov
enter
lods
cmpsb
inc
shlb
mov
popa
mov
mov
xchg
xchg
mov
pop
sub
jg
sti
or
js
icebp
out
jae
dec
mov
pushf
test
pop
pop
shll
cs
cmp
mov
outsb
enter
aas
cmp
mov
xchg
mov
and
jg
mov
mov
jns
stos
adc
pop
push
mov
jne
nop
xchg
call
sub
push
lea
cwtl
fs
mov
and
sub
and
mov
mov
in
sbb
xchg
cmp
and
adc
iret
jge
mov
fwait
sbb
mov
dec
jp
movsb
scas
xchg
pop
jae
adc
das
loope
je
dec
incb
ret
int
push
dec
dec
jge
mov
inc
mov
jb
xchg
loopne
cmp
sbb
out
mov
cmp
xor
xchg
jae
pop
mov
fwait
mov
imul
test
xlat
clc
jns
pop
sbb
jns
push
or
mov
jbe
xchg
in
pusha
popf
idivl
mov
stc
scas
dec
sub
cwtl
es
inc
sbb
leave
mov
cwtl
call
pop
mov
das
loope
jmp
loope
iret
call
pop
lcall
pop
fsubl
rorl
pop
pop
and
and
imul
hlt
data16
enter
sub
lret
sbb
add
enter
mov
cld
popf
out
xlat
cmp
lock
xchg
scas
jae
pop
fucomip
push
dec
loopne
fisubl
cltd
xor
mov
pop
mov
inc
stc
mov
insl
scas
aam
pop
pop
cmc
enter
cwtl
stc
sub
or
dec
and
sbb
js
std
lret
add
xor
dec
jmp
lods
dec
cltd
movsb
mov
mov
sbb
pushf
mov
fsts
and
sub
push
adc
cmp
into
lahf
dec
das
cmp
push
je
clc
sbb
rolb
je
fwait
insb
clc
cmp
and
adc
imul
scas
inc
jo
push
inc
pop
dec
mov
stc
dec
jl
adc
in
mov
in
jle
adc
adc
popa
cli
and
adc
aas
ret
sbb
data16
nop
daa
pop
or
or
ja
popf
mov
cs
bound
cltd
pop
inc
fwait
sbb
or
xor
xchg
mov
pushf
xchg
fstpt
cld
je
popa
popf
cmp
pop
xor
sub
and
cltd
out
repz
in
xor
xchg
mov
xor
xchg
pop
loope
dec
push
fwait
jne
mov
xchg
pop
imul
fdivl
pop
test
sub
bound
int3
repz
mov
imul
jb
pop
call
insl
rol
enter
pop
mov
xchg
jo
fcmovnbe
lock
ficompl
push
fsubr
pop
std
rcr
hlt
movsl
insb
mov
aaa
loope
lods
push
scas
push
outsb
mov
sub
fsubrl
jg
cli
lcall
cwtl
jb
push
fstl
pushf
out
sbb
mov
cmp
inc
loope
cmp
clc
sbbb
sub
fdivrs
xchg
cmpsl
xchg
lods
imul
mov
xor
and
rclb
mov
pop
or
aas
xor
xchg
mov
xor
and
and
dec
and
dec
hlt
add
and
insl
mov
dec
mov
addr16
sub
cmc
pop
das
imul
fcmovu
mov
cli
inc
ds
cmpsl
jmp
imul
lret
imul
cmp
scas
cmc
in
lcall
xor
xchg
data16
daa
inc
fabs
ret
sti
push
in
mov
enter
pop
das
jno
or
jmp
jns
inc
xor
inc
rcl
rcll
mov
sbb
add
inc
idivb
loope
inc
lahf
xor
ret
jle
and
mov
bound
cmp
adc
cld
adc
jle
adc
sbb
mov
mov
or
adc
out
je
mov
jp
push
mov
cmp
xchg
ficoml
mov
cmp
and
lret
ret
xchg
dec
mov
adc
pop
mov
ret
cmp
mov
xor
and
cmc
sub
pop
dec
and
or
imul
in
cmp
dec
into
dec
into
mov
ss
inc
ret
push
adc
dec
mov
push
mov
in
dec
int
rorb
xlat
adc
mov
ret
repnz
in
mov
and
dec
sbb
or
stos
push
mov
divb
jecxz
fs
push
xor
test
mov
and
outsb
fldcw
adc
push
pop
fnstenv
mov
sbb
xchg
popf
js
out
imul
fnstcw
shl
call
jnp
dec
add
ja
mov
push
rcl
jle
lahf
sub
push
stos
inc
das
repz
int3
mov
repz
jl
mov
pop
xchg
inc
xor
xor
daa
and
lods
mov
cltd
lret
in
pop
repnz
pop
dec
sub
jecxz
add
popf
inc
stos
dec
dec
repnz
addb
mov
in
push
ds
mov
xlat
dec
mov
adc
sti
cmp
or
adcl
lahf
jp
xchg
cmp
fdivrp
inc
mov
and
addl
stos
dec
fstl
pop
div
dec
push
sbb
sub
imul
dec
sbb
enter
setae
jecxz
icebp
ret
push
cmp
add
les
push
mov
sub
jg
sti
mov
inc
rorl
xorl
push
jnp
sar
push
pop
aad
pop
dec
ret
arpl
lahf
enter
jns
imul
push
mov
jo
add
addr16
lods
aas
adc
sbb
sarl
jmp
sbb
xchg
cmp
pop
cmp
inc
ljmp
outsb
addr16
mov
push
lcall
rolb
mov
mov
fnsave
pop
mov
pop
jno
or
push
push
xor
mov
dec
jg
loop
pop
outsl
adc
dec
sbbb
pop
orl
clc
insb
xor
jecxz
fsubrp
cltd
xlat
int3
add
shll
pop
jge
add
mov
jl
mov
adcl
push
mov
test
cmp
dec
inc
sub
stos
loope
sbb
push
mov
xchg
roll
imull
xor
push
pop
aaa
lock
or
push
cs
ret
dec
lahf
cmc
mov
movsb
xchg
insb
sti
pop
aas
repz
dec
mov
pop
cs
ljmp
mov
out
mov
jo
inc
ret
ljmp
ss
sbb
repnz
add
aaa
adc
inc
test
dec
mov
lods
pop
push
xchg
clc
push
test
xlat
repz
bnd
or
call
inc
cltd
mov
iret
xorl
loopne
filds
push
and
sti
clc
les
mov
dec
fst
mov
mov
sub
mov
push
sahf
or
mov
jno
inc
loop
xor
adc
xor
imul
cs
xor
xlat
add
icebp
cmp
lods
movsl
clc
jecxz
mov
pusha
adc
mov
loop
ds
push
sub
es
cmpsb
in
mov
mov
ljmp
test
xchg
mov
pop
pop
aad
mov
pop
aam
ret
jns
dec
mov
jg
mov
stos
dec
push
cmc
jns
inc
dec
jne
push
xchg
mov
cltd
dec
mov
sub
xchg
cmp
int
push
jmp
sub
xchg
jo
and
call
aaa
lahf
jo
lret
testb
cmp
jo
mov
fs
pusha
pop
ja
dec
and
cmp
ds
jnp
sbb
or
pop
cmp
push
xor
mov
xchg
mov
pop
sti
popa
leave
lea
outsl
dec
call
jp
mov
xorb
mov
add
sbb
stc
dec
adc
jecxz
sub
fsubrl
stos
xor
ret
xor
test
xlat
dec
and
xchg
sub
jnp
adc
push
scas
xchg
jmp
inc
mov
fwait
jl
mov
cmp
mov
sbb
icebp
hlt
gs
jno
out
call
pusha
insl
iret
cwtl
inc
clc
lret
call
scas
pop
cmp
add
add
sbb
in
pop
jmp
add
pop
fs
subl
and
lods
inc
dec
pop
fwait
clc
mov
push
aad
adc
es
jb
fidivs
jb
inc
repz
sub
mov
or
outsb
mov
sbb
add
dec
inc
xchg
adc
aaa
xor
pop
add
mov
lret
mov
test
imul
nop
cli
xchg
outsl
bound
mov
jecxz
pop
and
iret
sbb
xorl
pusha
cmp
in
inc
jp
jmp
bts
adc
add
jecxz
popf
dec
mov
lret
shrb
insl
fmull
inc
inc
inc
push
mov
movsb
xor
andb
mov
jb
inc
popa
arpl
daa
mov
lret
je
enter
pop
pop
push
jbe
push
cmc
adc
dec
push
pop
adc
fstpt
mov
scas
pop
arpl
sub
xchg
cmpsb
sti
adc
sbb
sub
or
or
call
cmpsb
ljmp
pop
insb
mov
jecxz
imull
lea
push
xor
imul
jbe
popa
inc
jbe
loope
pop
dec
add
inc
movsb
jae
fadds
push
adc
in
pop
or
cmc
jne
inc
pop
into
fucomip
xchg
cmp
je
fisttpl
adc
pop
in
shlb
mov
lahf
dec
mov
mov
xchg
mov
or
inc
cli
sub
jne
and
out
mov
xchg
fdivrs
inc
jp
push
sbb
jmp
out
adc
int3
xor
loop
or
test
jmpw
std
mov
jp
js
dec
loopne
in
push
or
or
pusha
or
dec
sbb
and
cmp
jle,pt
mov
pop
xchg
cmp
aad
or
dec
push
scas
repz
or
jae
push
add
sarl
mov
add
dec
aas
mov
adc
xchg
jle
xor
fildl
pop
cmpsl
ss
out
clc
mov
dec
inc
std
leave
dec
loop
dec
pop
mov
cmpsl
lock
sub
adc
negb
sub
adc
shll
scas
sub
mov
mov
push
sub
mov
fdivr
jno
aad
mov
loop
or
movsb
leave
idivb
dec
daa
jle
cli
lods
sahf
and
std
rcll
sbb
xor
std
mov
insl
inc
inc
shlb
dec
mov
and
mov
xlat
std
popa
aas
shr
ret
lods
and
out
sbb
popa
pop
lcall
pop
mov
sub
cmp
ret
sub
mov
jge
es
out
push
dec
cltd
repz
lds
std
outsl
push
outsl
sarl
and
pop
lods
dec
stc
jmp
xchg
adc
dec
clc
sbb
test
xchg
jae
call
into
mov
rol
cmc
outsb
addr16
imul
test
mov
sbb
test
jbe
out
in
xorb
cld
mov
cmpsb
or
inc
out
mov
inc
inc
jno
lods
inc
mov
cmp
lds
loop
push
test
push
movsb
push
gs
enter
cwtl
imul
ljmp
push
cld
mov
mov
aas
out
test
in
test
into
shll
mov
pop
cmp
sbb
xlat
loope
jg
insb
and
and
jne
lea
sahf
std
pop
xchg
ljmp
push
popf
jno
mov
xchg
mov
cmp
sbb
fsts
and
ret
icebp
xchg
xchg
jns
xchg
hlt
sub
insb
loop
push
jmp
cltd
push
jl
aaa
xor
cmc
mov
adc
push
mov
cmpl
pushf
mov
lock
push
xor
mov
xor
push
cmp
dec
ret
outsl
mov
scas
popa
push
es
inc
test
aad
add
xor
xor
mov
sub
jnp
inc
jecxz
mov
iret
dec
pop
inc
stos
dec
iret
xor
pushf
lods
adc
inc
shlb
outsl
add
daa
in
pusha
mov
fimull
int3
jnp
sub
mov
jmp
arpl
jo
mov
sub
das
lahf
cmp
xchg
xchg
xlat
push
ret
js
push
clc
xchg
mov
inc
lods
into
adc
jmp
or
or
mov
dec
sbb
imul
inc
dec
dec
sub
in
pop
add
insb
dec
rcrl
mov
hlt
bound
imul
mov
sub
out
xor
push
and
pop
add
cld
pop
repnz
mov
daa
test
add
lcall
rorb
fisubs
dec
mov
push
and
in
cli
addr16
jb
pop
in
pop
xlat
ret
jnp
dec
iret
cmpsb
arpl
stc
jno
inc
lock
outsb
lods
leave
adc
testl
das
sub
mov
adc
push
movsl
arpl
xor
mov
mov
mov
clc
stos
xchg
je
lcall
add
xchg
addb
sbb
push
pop
mov
das
filds
xchg
arpl
xor
or
ret
mov
and
popf
movsl
xor
pop
mov
push
mov
push
adc
cmc
int
adc
arpl
or
fsub
jmp
mov
imul
shrl
out
inc
cmp
inc
inc
fisttps
nop
aaa
inc
sbb
adc
imul
sbb
jmp
and
xchg
js
pop
jne
aaa
sub
rorl
cli
mov
xchg
test
adc
imul
sar
inc
fstps
mov
andb
mov
push
test
sub
jns
mov
pop
mov
mov
inc
iret
inc
cltd
ss
mov
stc
jg
rcll
notb
pop
and
jl
pop
ss
xchg
xchg
in
into
xor
inc
xchg
inc
pop
cmp
arpl
adc
ret
dec
add
nop
lcall
add
fisubs
insl
lock
clc
bound
mov
pop
cs
sbb
ja
xor
mov
das
push
roll
mov
jb
add
push
movsl
xchg
adc
xor
and
xchg
outsl
inc
mov
ror
int
not
ret
pop
rcl
mov
je
jmp
fisubrs
mov
pusha
scas
outsb
add
ds
sbb
and
or
sbb
movsl
adc
imul
les
push
adcl
sarl
cmpsb
xlat
lcall
and
sbb
and
dec
pop
les
arpl
ret
ss
dec
loopne
mov
and
push
aam
and
sub
xor
addl
repnz
in
adc
imul
push
movsb
adc
push
inc
mov
xchg
cmp
cmp
xchg
cmp
and
sbb
out
mov
sahf
lds
imul
inc
sahf
fstpt
je
pop
outsb
xor
std
push
or
mov
mov
daa
sahf
stos
sbb
cmpsl
add
add
cwtl
pop
mov
mov
jae
lods
out
addr16
pop
mov
loope
sbb
scas
loop
add
sbb
sbb
pop
xchg
pop
nop
scas
or
sti
fistpll
stc
test
pusha
xchg
stos
and
shlb
pop
mov
orl
fstps
scas
roll
mov
push
xor
cltd
dec
push
adc
mov
stos
dec
adc
mov
fisttpl
xor
jge
sahf
fdivl
lcall
pop
inc
flds
es
xor
sub
sub
repnz
push
sub
xchg
jl
fwait
mov
push
enter
cmp
jb
jae
shr
sub
mov
fs
mov
mov
push
lea
xchg
dec
ja
mov
pop
push
cltd
insl
xchg
mov
sti
cmpsl
push
pop
sub
ds
xor
add
scas
rcll
adc
sbb
cmpsl
pusha
stos
aam
lahf
adc
popl
push
push
cmp
jle
jne
subl
mov
push
jbe
xchg
sub
cmp
and
movsl
pop
pop
jge
inc
aad
int
mov
out
jmp
mov
cmp
lods
mov
xchg
fs
and
jge
out
dec
mov
adc
mov
lcall
in
jmp
jmp
mov
adc
insl
flds
sbb
rcrl
cmp
fs
pushf
sub
mov
sahf
les
pcmpeqd
ret
icebp
pusha
loop
lds
iret
cs
xor
lret
or
mov
loope
stc
fisubrs
mov
movsb
or
mov
jl
lahf
loop
xchg
and
lret
stos
in
in
mov
mov
movsl
clc
mov
jo
push
out
sub
js
repnz
or
sub
shrb
or
test
fsubrl
aad
lahf
push
in
ror
pop
sbb
test
lock
push
mov
mov
xchg
inc
andb
add
lds
xor
lea
sbb
test
mov
xchg
or
cmpsb
jnp
cmp
push
lock
movb
inc
sub
aam
fcoml
and
mov
adc
inc
mov
pop
dec
pop
adc
les
mov
push
shll
out
pop
mov
cld
aad
mov
ss
aad
and
loopne
arpl
sbb
nop
adc
inc
pusha
int3
iret
push
inc
cli
push
xchg
fcompl
movsw
jge
jg
lods
mov
ds
and
pushf
cmpsb
add
pop
icebp
dec
cmpb
inc
jecxz
mov
nop
in
jb
mov
xchg
test
fsubl
xchg
repnz
bound
sub
jno
sbb
push
rol
mov
aad
scas
scas
out
sete
hlt
jp
or
pop
movsl
xchg
cmpsl
rcrb
inc
sub
jge
ficoml
insb
push
in
loopne
mov
test
out
lret
push
xor
inc
xchg
shll
fstps
dec
addr16
into
repnz
jmp
out
into
ficoml
daa
add
cmp
sub
push
mov
mov
cmp
fwait
repz
iret
inc
sbb
push
xchg
aam
es
jecxz
push
push
fldt
mov
rcr
sbb
mov
mov
out
pop
lret
lods
or
filds
bound
dec
inc
imul
movsb
fildl
sub
rolb
mov
xchg
or
adc
pop
jle
mov
or
mov
xor
ret
lea
das
inc
dec
or
jge
xor
push
and
test
mov
xchg
nop
mov
js
push
push
inc
popf
push
mov
js
shrl
outsb
jo
lcall
inc
stc
mov
call
int
push
stc
fcoms
inc
adc
addr16
dec
fucomp
call
ret
ret
cmp
xchg
enter
xor
mov
jmp
jl
fs
lret
ja
sbb
and
sub
push
addr16
stos
imulb
out
idivl
mov
inc
out
call
pushf
dec
outsl
insb
mov
mov
jmp
mov
dec
mov
xchg
into
shlb
daa
add
ficomps
nop
pop
add
test
repnz
mov
test
mov
rep
inc
pop
lcall
nop
mov
imul
mov
out
leave
ja
xor
push
xchg
xor
lahf
ss
cmpsl
sbb
inc
or
adc
stos
adc
jl
fwait
add
mov
mov
out
dec
out
int
inc
ficomps
ret
adc
jle
lret
or
mov
mov
mov
repz
pop
push
mov
mov
push
fs
scas
mov
outsb
out
cmp
or
inc
lcall
outsb
xlat
push
lds
enter
and
test
repnz
xor
int
loope
jb
outsl
jbe
or
cltd
and
aas
dec
popf
fstenv
lcall
testl
lods
add
mov
pop
adcl
lahf
test
dec
iret
sahf
cwtl
cmp
mov
stos
pop
in
jne
push
ret
mov
ret
pop
aad
btc
jb
mulb
inc
xor
adc
pop
pop
lret
cmp
mov
cltd
popa
cmpsl
mov
mov
mov
push
movsb
sahf
clc
fmul
mov
inc
loope
arpl
inc
push
imul
fisubrs
push
arpl
inc
sub
jge
mov
adc
fisttpl
inc
xchg
adc
hlt
imul
mov
sbb
jnp
rorb
adc
js
data16
adc
pop
xor
mov
or
mov
fdiv
aam
sbb
adc
shll
mov
test
test
ds
sub
cmpb
cmpsb
adc
insb
sub
jecxz
pop
mov
das
pop
xchg
jne
or
outsb
jo
iret
xor
mov
jecxz
std
sti
jae
sub
dec
jb
push
jbe
js
mov
sub
adc
mov
push
add
and
xchg
cli
jle
cli
push
inc
cli
mov
mov
pushf
out
lods
dec
inc
inc
inc
mov
adc
push
and
aad
mov
data16
sbb
cmpsb
xchg
gs
call
testb
lock
cwtl
mov
mov
inc
dec
data16
push
xor
xchg
push
mov
test
adc
or
push
and
pop
popa
bound
cmpsl
and
in
pop
out
mov
insb
cmpsl
inc
lcall
call
cmpsb
out
adc
sub
and
bound
lods
cmpb
adc
push
aaa
mov
loopne
in
jne
sahf
push
cmp
inc
int
push
jp
inc
je
fstl
xchg
cmc
out
jnp
sub
mov
adc
popf
sbb
out
jmp
mov
adcl
fiadds
pop
add
and
aas
cmpsb
sub
sti
sti
call
sbb
les
iret
test
in
xor
stos
loope
sahf
dec
cmp
dec
sub
sbb
lods
pop
inc
ret
jae
dec
add
mov
xchg
pop
imul
imul
out
test
or
fcompl
in
pop
cmp
jae
shl
jle
imul
das
mov
ret
cli
sbb
adc
popa
into
mov
test
add
ljmp
es
divl
xor
stc
jge
lods
pop
in
add
cltd
outsl
push
lret
cmp
xchg
mov
sbb
jae
in
int3
es
add
jo
push
pop
jmp
cltd
push
jo
in
xor
inc
mov
dec
push
je
test
xchg
sub
out
sbb
jmp
xchg
sub
and
pushf
push
xchg
out
dec
and
mull
cmp
mov
rcr
and
jge
jmp
inc
movsb
lret
and
ljmp
and
in
pop
fs
ljmp
xor
and
scas
jbe
mov
fsubrp
xchg
pop
push
hlt
dec
jnp
mov
sbb
test
mov
aad
sarb
mov
adc
jns
jbe
pop
xorb
insl
enter
dec
cmp
adcb
mov
jge
jecxz
mov
js
sbb
dec
xchg
repz
cs
js
enter
xchg
es
inc
clc
insb
in
fimull
and
mov
add
into
adc
das
jle
dec
scas
imul
fs
push
inc
xchg
imul
cld
mov
sti
fnstcw
sub
outsl
aaa
jge
sbb
or
jnp
pop
das
jbe
test
mov
fsubp
adc
inc
ja
xor
cmp
loope
arpl
cmp
jg
mov
xor
jp
cli
xorl
int3
rcrb
ljmp
push
mov
jecxz
mov
cmp
inc
xchg
outsb
ficoml
adc
fisubrs
popf
mov
scas
push
les
insb
lahf
xor
lret
mov
inc
sub
jo
mov
ja
repnz
sbb
push
mov
ret
lret
mov
push
inc
sub
add
cwtl
imul
mov
or
cs
test
ret
dec
jne
fiaddl
mov
mov
push
movsl
mov
popa
repnz
test
jbe
mov
dec
sbb
jge
popa
sbb
sahf
fdivrs
xlat
add
jge
mov
pop
dec
push
jle
dec
jge
in
iret
push
inc
test
adc
sub
out
std
pop
in
aas
sub
adc
and
les
sub
je
push
mov
mov
outsl
add
repnz
aam
cmpsl
lods
je
mov
nop
call
ds
repnz
adc
cmc
stc
xor
popf
repz
addl
test
test
gs
cmpsb
push
mov
dec
rorb
cmp
in
jae
push
loopne
xchg
into
mov
sbb
cmp
add
dec
popa
aas
stos
lret
jns
in
mov
cs
mov
enter
mull
xor
or
inc
lock
cmp
test
jp
add
cmpb
les
mov
push
mov
lcall
push
pop
aas
gs
sub
push
mov
jmp
bswap
loop
insb
dec
test
enter
mov
push
inc
cmp
push
in
in
jmp
adc
add
jge
cmp
jmp
xchg
inc
inc
out
pop
sbb
cmp
fistps
repz
add
lea
push
repnz
inc
push
sbb
in
int
push
imul
or
movsb
sub
test
push
sub
inc
pop
imul
sbb
clc
xlat
adc
nop
test
sbb
or
xor
jb
lea
gs
lods
ss
cmp
jg
or
xor
neg
mov
bound
loopne
push
mov
aam
in
rclb
fdivl
mov
insb
rorl
add
jb
movb
or
les
xor
inc
sbb
clc
mov
mov
fidivs
mov
movsl
mov
inc
js
inc
xchg
test
and
adc
mov
test
test
pop
mov
movsb
jp
dec
mov
adc
cmpsl
stos
jg
aam
nop
push
int
cmpsl
test
mov
jmp
sbb
jp
fisttps
cmpsl
ficomps
lahf
mov
test
imull
or
aas
xchg
jl
data16
dec
aad
shrb
mov
mov
xor
ja
cmp
push
int
cwtl
ds
cli
repz
sti
lret
bnd
aam
mov
aas
fldl
enter
scas
xor
pop
pop
xchg
outsb
lret
fildl
cmp
push
jbe
sub
cmp
fidivrs
aad
ret
clc
sub
hlt
je
xchg
dec
js
lds
lea
sub
loop
push
movsl
cli
mov
pop
mov
xchg
cwtl
shrl
inc
mov
gs
lret
or
fwait
test
arpl
inc
pop
jg
adc
pushf
or
add
data16
mov
out
push
dec
lea
cmp
dec
data16
popf
popa
fst
aad
or
cltd
bound
insl
or
decb
mov
mov
mov
movsb
xchg
xchg
mov
popa
push
xorl
addr16
cmp
mov
leave
cmpsb
outsb
movsl
mov
mov
adc
bound
xchg
dec
fisubrs
push
out
call
movsb
fnstenv
pop
stos
sar
pxor
pop
sar
jle
jbe
mov
jl
lea
dec
rol
and
mov
fcoml
movsb
push
rorb
jno
mov
xorl
inc
scas
ret
push
mov
adc
inc
jnp
adc
cmp
mov
out
fs
and
mov
sbb
jmp
sub
ja
dec
mov
mov
pop
fwait
enter
inc
pop
testl
mov
loope
xchg
daa
mov
int3
jns
sbb
adc
in
mov
out
pusha
xchg
cmp
push
loopne
into
ss
add
xchg
cld
dec
sub
mov
mov
enter
es
in
scas
jge
sahf
inc
repz
enter
mov
pop
rolb
outsl
push
outsb
in
xor
xor
xor
or
push
push
xchg
in
outsl
mov
push
adc
sbb
jbe
jo
push
inc
xchg
in
jle
sbb
imul
icebp
mov
loopne
mov
repz
push
jle
ja
testl
jbe
aad
sahf
loope
cmp
mov
adc
sub
loope
mov
and
jnp
or
fsubrp
movsl
test
or
into
push
xchg
lds
mov
add
adc
cmpsb
sub
fiaddl
dec
and
cwtl
xchg
sbb
sub
sbb
outsb
scas
cmp
mov
popf
sub
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
push
push
call
mov
dec
mov
jmp
mov
mov
adc
mov
mov
subl
xor
xorl
add
movl
cmp
je
xor
mov
xor
mov
mov
mov
xor
or
xor
mov
xorl
add
mov
mov
and
mov
mov
adcl
add
xorl
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
jmp
or
inc
mov
insl
mov
jno
addl
inc
fnstcw
inc
pop
lods
cltd
cmpsl
cmpsl
mov
sbb
mov
int
cmp
add
imul
das
addr16
inc
push
mov
dec
add
pop
jmp
dec
aad
and
sub
cltd
pop
cmp
repz
mov
orb
jb
jo
mov
insl
icebp
lods
xchg
mov
movsl
loopne
mov
ret
sbb
mov
sbb
fiaddl
mov
cmp
sbb
jl
xchg
lds
outsl
ljmp
sbb
insb
sbb
xchg
push
jne
add
in
mov
mov
scas
mov
xchg
fimull
xor
cltd
bound
pop
leave
adcl
and
push
inc
inc
xor
pop
loope
shrl
mov
cld
jmp
jp
pop
cli
xor
pop
pop
mov
lahf
mov
sub
repnz
outsl
and
mov
mov
rcrl
mov
sub
sub
jmp
das
rcr
std
lret
push
cmp
sbb
int
xor
dec
mov
push
dec
lcall
dec
lods
mov
lcall
mov
insb
aad
jmp
out
jo
fwait
aad
test
and
int3
ds
sbb
add
jmp
call
out
dec
std
negl
mov
loopne
cmp
test
dec
cmp
adc
push
enter
sub
ret
xchg
aam
or
aam
in
sub
sbb
arpl
enter
lea
xchg
xor
dec
loop
sbb
hlt
jo
in
push
and
test
and
data16
mov
mov
stos
sarb
daa
jno
adcl
cmp
adcl
xchg
xor
in
pop
dec
rcrb
jns
fisubrs
jecxz
cmpb
ret
push
push
out
div
insb
mov
dec
push
stos
filds
sub
movsl
cltd
aaa
mov
adc
mov
repz
in
mov
jmp
sub
cltd
xchg
or
mov
pop
push
mov
stos
mov
lock
adc
push
fisttps
jp
sbb
aad
lods
xor
xchg
in
mov
orb
sti
sti
and
jnp
sub
leave
or
dec
xchg
or
dec
xor
mov
inc
mov
jg
mov
ffreep
adc
pop
inc
sbb
jge
xor
out
addr16
pop
jp
and
mov
test
fistps
fisttpll
or
mov
sbb
push
into
aam
das
and
in
test
jge
pop
aam
rcrb
outsl
inc
xchg
les
push
or
fcmove
nop
pop
nop
stos
in
hlt
nop
clc
ja
imul
rorb
push
rcrl
int
fdivrl
gs
xchg
pop
lea
iret
data16
mov
fs
jge
pop
add
shll
or
jmp
repz
pusha
or
aas
je
mov
lds
aad
mov
shll
and
int3
add
hlt
scas
das
push
dec
push
movsl
jecxz
ljmp
ja
ja
pop
in
jmp
jnp
and
xor
lret
sub
cltd
adc
fcoms
orb
leave
sub
adcl
lret
pusha
fistps
mov
fmull
pop
pop
lret
test
xor
lds
cmp
pusha
push
xor
adc
cmc
cmp
push
cltd
ss
inc
movb
aaa
dec
pop
mov
shrb
sub
sbb
inc
es
loopne
mov
and
fisubrl
jl
jne
xchg
push
push
add
int
inc
mov
loopne
lahf
sbb
jg
cwtl
pop
dec
xor
push
int
imul
lock
push
shufps
popf
dec
clc
jnp
fidivl
lock
pushf
add
inc
pop
sub
insl
inc
rcr
xor
mov
dec
xor
mov
loop
jnp
pusha
out
fisubl
cs
jne
lds
xor
cmp
fsubr
sub
mov
subb
negl
jnp
shll
xor
pop
jae
out
daa
push
xor
and
lods
call
shr
dec
out
jp
or
imul
inc
pop
aaa
dec
stos
pop
push
and
loop
in
jg
outsb
xor
in
push
insb
sbb
pop
mov
in
jge
mov
les
ret
and
jge
in
mov
pop
lahf
fs
jg
push
mov
lods
les
enter
add
or
jle
jae
jmp
into
aam
aam
sbb
aad
bound
cmp
rcr
pop
orb
fdivl
adc
out
insb
jb
mov
push
push
sub
mov
cmpsb
adc
mov
stos
mov
rcll
out
add
cli
out
enter
mov
jge
stc
enter
and
inc
jno
sti
fwait
lahf
fsubl
add
sbb
inc
rorb
test
dec
jb
mov
sbb
scas
cmp
sub
in
add
repz
jl
popa
add
pusha
mov
out
or
xor
rcll
iret
xchg
xchg
pop
bound
push
mov
lcall
popa
dec
cmp
pop
pop
cwtl
mov
mov
cli
addl
sub
mov
lock
cmpsl
jae
mov
int
fbstp
jne
jmp
jmp
add
inc
in
dec
leave
ret
fcmovu
xorb
imul
or
sub
in
mov
dec
xchg
loop
pop
add
mov
aas
mov
fldenv
jae
nop
repz
movsl
inc
int
xor
sbb
outsl
shl
into
stc
test
inc
roll
xlat
pop
dec
sub
in
ja
cwtl
jno
jns
xchg
adc
xchg
int3
or
das
std
sub
adc
xchg
push
cmp
dec
insb
push
xchg
pop
addl
pop
jmp
sub
inc
jmp
cli
fldcw
movsl
mov
sahf
ja
pop
shrl
jo
xlat
jmp
js
dec
mov
aaa
repz
jle
mov
lods
push
lods
arpl
lea
mov
mov
nop
xor
fbld
inc
xchg
movsb
and
mov
std
push
mov
mov
test
fcomp
and
lahf
popf
aas
add
sub
ds
sbb
and
sub
sub
xchg
fbstp
mov
add
repnz
leave
jmp
loopne
mov
jp
jge
icebp
add
enter
xchg
shl
sbb
sahf
mov
imul
in
lahf
cmp
ret
das
sub
je
movsl
jne
jmp
cld
stos
mov
jb
shlb
lcall
push
inc
jno
jge
sbb
ret
xor
fimull
mov
ja
jl
adc
ret
add
pop
in
sarb
dec
inc
mov
insl
inc
mov
lods
push
xchg
pop
mov
mov
push
sub
mov
push
cld
inc
in
sub
mov
pop
or
fistpll
mov
lret
cmpsl
mov
aaa
repz
inc
sbb
mov
jns
sbb
mov
jecxz
xchg
adc
mov
dec
cmp
pusha
test
popa
push
mov
jnp
aas
jl
add
add
sbb
pop
sbb
test
cltd
or
out
inc
mov
xchg
xor
mov
cmp
cmpl
rolb
mov
aaa
jbe
ss
mov
fxch
ds
out
test
push
sub
xor
ss
and
out
jb
loopne
daa
hlt
inc
sub
or
xor
mov
and
scas
testb
push
movsb
rolb
jl
ds
pop
xor
push
add
adc
sar
pop
sub
loopne
adc
jmp
in
sbb
mov
push
pop
mov
mov
lods
xor
push
or
nop
popl
dec
jb
leave
or
iret
push
jecxz
sub
adc
popf
mov
mov
jb
int
or
pop
fimull
cmp
pop
ret
cmp
xchg
repz
je
sahf
jle
mov
jge
inc
xchg
int
inc
stos
sub
int3
xor
xor
sbb
fdivrl
mov
adc
or
sti
fistpll
js
adc
js
mov
out
xor
arpl
lahf
or
xchg
stos
xchg
ret
ja
xor
pop
jno
pop
ss
aaa
or
dec
pop
inc
pusha
cwtl
pop
cmp
andl
bound
mov
lcall
sbb
sbb
dec
pop
in
enter
cltd
mov
stos
pop
aam
mov
sub
ja
jo
pop
shl
mov
movsl
cmpsb
jnp
cmpb
pop
push
roll
fsubrp
fnstenv
cs
adc
sahf
xchg
shll
push
sbb
xchg
mov
lahf
or
psrlw
add
ss
pop
xchg
aaa
inc
or
add
and
lret
pop
xchg
or
cwtl
pop
leave
mov
cmpsb
sub
sub
rclb
add
jmp
loopne
jmp
jbe
outsb
or
jl
jb
popa
jo
jp
jno
cmc
sub
movsb
daa
add
add
int3
aad
call
ja
pop
inc
push
cmp
inc
adc
xor
int
dec
jg
pushl
imul
adc
call
popf
lahf
adc
dec
xchg
sub
jnp
jo
fwait
lahf
fldt
sub
inc
sub
jmp
outsb
push
and
sar
aas
jb
inc
out
mov
xor
push
out
nop
xlat
in
cmpsl
imul
sub
mov
xchg
into
pop
ljmp
out
xchg
xorl
or
cmp
adc
aam
imul
add
push
fisttpl
inc
cmp
or
outsb
out
lods
faddp
notb
inc
inc
xor
jmp
aas
push
lcall
in
std
lods
or
shlb
xchg
int
cmp
fisubs
sbbl
mov
stos
lods
sub
cs
rcll
lcall
clc
or
ret
fdivp
popf
pop
ds
xor
add
jecxz
jno
inc
xchg
int3
dec
insl
in
pop
call
cmp
fmul
xchg
jno
mov
push
les
jae
lods
mov
movsl
repnz
ss
int3
mov
hlt
out
adc
imul
mov
push
test
pop
testl
mov
js
cmp
mov
sub
int
jnp
mov
jg
cmp
sti
pop
add
lea
popf
cmp
int3
cmp
stos
ss
dec
out
add
fidivl
inc
and
shl
popl
push
adc
inc
std
lret
nop
jae
fiaddl
sub
adc
jne
pop
lcall
stos
mov
into
cmpsl
jns
ds
sub
xor
and
sbb
add
out
or
loop
mov
sub
sbb
fimull
mov
xor
in
cmp
mov
jmp
pusha
cmpsl
es
in
xchg
fimuls
or
stc
cmpl
xchg
xor
stos
out
aam
jl
jp
mov
push
jecxz
sar
gs
bound
aaa
add
fiaddl
adc
jmp
push
pop
sbb
cmp
test
push
mov
fsts
pop
xchg
xchg
sbb
lods
mov
cmp
sub
xchg
or
and
dec
push
sub
enter
lds
bound
aad
int
xor
mov
cltd
mov
pop
pop
loop
lret
es
push
push
imul
inc
jb
in
push
sub
mull
ljmp
movsb
pop
xchg
xchg
pop
adc
push
ror
sbb
vrcpps
and
addb
into
sbb
out
xchg
inc
decb
xchg
mov
cmpsl
cltd
mov
pushf
pop
xchg
js
sti
inc
outsb
xchg
mov
push
testl
outsl
test
stc
mov
cmp
out
mov
loopne
iret
ljmp
cwtl
inc
jne
sub
bound
sti
ja
movsl
mov
xor
ficoml
mov
jbe
inc
cmpsb
arpl
inc
int
fwait
mov
rorl
movsl
adc
xchg
jp
adc
xor
push
loopne
mov
imulb
pop
xor
fs
and
lea
add
call
stos
out
sbb
lcall
inc
sub
add
pop
sti
mov
push
imul
push
adc
mov
xor
pop
push
adc
outsb
out
or
lods
jmp
pop
jl
in
fstps
push
out
xchg
jno
fstps
or
test
mov
xchg
jge
lret
subb
cmp
sarb
in
sbb
pop
xchg
add
jg
xor
incb
in
pop
movsl
insl
aad
mov
mov
push
pop
roll
xchg
jl
push
cmp
pop
inc
addl
push
add
in
mov
xor
adc
mov
mov
pop
add
jg
test
dec
pop
stc
xchg
out
dec
rcrl
cmp
mov
and
es
pop
dec
sub
lock
out
lret
ja
push
and
shrl
sub
pop
mov
nop
inc
fwait
jns
into
pop
testl
mov
sbb
push
xor
fcompl
stc
push
pusha
or
inc
je
lock
jmp
cmpsl
jnp
pop
inc
clc
stos
out
data16
mov
out
adc
stos
inc
adc
or
fsubrs
push
xchg
jl
cmp
mov
cmp
jae
stos
jge
lea
shl
or
inc
mov
int3
or
popf
jmp
outsl
popf
imul
cmpb
push
ja
iret
lods
out
or
adcl
pop
mov
bound
adc
pushl
pshufw
sbb
inc
sbb
fidivrl
shll
xor
cmpsl
btr
add
test
jnp
cli
mov
incb
or
out
in
push
call
push
lcall
enter
divb
adcl
sub
cmp
pop
rcrb
jmp
add
inc
jnp
sahf
dec
out
fistps
push
xorl
xchg
xchg
popf
mov
push
ljmp
test
fnstcw
sbb
outsb
enter
sti
into
push
mov
cmpsl
sbbl
push
xchg
movsl
and
dec
movsb
insb
adc
clc
and
or
std
dec
nop
adc
xchg
sub
jl
cmpsb
aam
ficoml
jle
outsb
addr16
mov
mov
adc
cmpb
mov
mov
pop
sub
rorb
add
push
pop
or
into
outsb
fs
hlt
mov
out
inc
outsl
jp
dec
jl
stc
add
mov
stc
sub
bound
fst
outsl
cmp
or
mov
jb
scas
xchg
cmp
xor
data16
movsb
push
cld
mov
adc
icebp
in
fimull
in
out
jb
scas
loopne
xchg
rolb
sub
in
ret
push
mov
mov
pusha
xchg
inc
push
xchg
lods
bound
sub
popf
bound
mov
int
mov
add
fistpl
cld
mov
sbb
sbbl
cltd
dec
aaa
insl
rol
jns
push
pop
scas
movsb
mov
and
jns
hlt
adc
sti
and
or
repz
cwtl
mov
lret
ret
mov
cmp
ds
cmpsl
inc
sbb
sub
jne
xchg
jo
sbb
les
add
aaa
pop
dec
jl
arpl
inc
push
inc
ret
nop
popf
sahf
ret
xchg
pop
jno
push
sub
push
xchg
push
enter
arpl
out
push
xchg
mov
push
pop
xlat
repz
outsb
clc
dec
fs
insb
and
lock
xor
sub
mov
sub
lahf
test
ljmp
scas
xchg
mov
and
mov
jnp
xlat
xor
adc
repz
lea
inc
dec
jns
mov
leave
gs
pop
push
loope
out
int3
mov
xor
js
in
movsb
inc
and
push
sub
inc
dec
mov
mov
mov
lds
cmp
fdivs
mov
add
adc
push
inc
mov
pop
adc
int
icebp
rol
xchg
loop
push
subb
das
mov
popa
lods
mov
mov
fwait
test
sbb
adc
ss
dec
adc
jmp
outsl
inc
mov
into
js
lret
dec
inc
jnp
cmpb
push
jle
outsb
inc
xchg
mov
xchg
pop
mov
out
das
pop
dec
clc
cmc
inc
add
fsubr
sahf
insb
add
xor
fsubrl
repz
lock
iret
jmp
mov
xorl
xor
dec
mov
test
add
and
dec
fisttpl
pushl
mov
pop
and
jp
ficomps
cmp
mov
in
out
or
fcmovu
jl
hlt
mov
pushf
repz
test
das
sbb
mov
mov
push
clc
insb
movsb
rcrl
xorb
inc
ljmp
lret
mov
les
push
xor
mov
mov
mov
insb
push
adc
xor
cmp
jo
sbb
lcall
imul
cltd
and
aas
idivl
inc
into
sti
jno
mov
nop
icebp
lds
xchg
cld
cmp
xchg
push
xchg
pop
outsl
lcall
test
arpl
scas
loope
ret
rorb
daa
into
xor
pushl
sub
in
jg
jne
sub
jnp
loop
shlb
insb
sbb
adc
mov
mov
mov
imul
mov
mov
fcomps
xchg
cwtl
mov
push
stos
pop
cs
pop
repz
or
inc
ds
mov
xchg
movl
mov
les
adc
sbb
push
inc
fistpl
xchg
mov
daa
cmp
adc
mov
jb
fs
insb
and
maxps
std
xchg
fstl
dec
outsb
fwait
lock
jge
or
cwtl
jp
jno
out
ds
add
mov
mov
outsb
mov
push
loopne
cmc
mov
or
fdivs
dec
or
push
inc
and
add
push
aam
jmp
dec
les
lret
sarb
or
mov
das
scas
jbe
pop
stos
dec
pop
push
jo
cmp
nop
shrb
add
or
lds
lods
shlb
insl
mov
sahf
push
mov
jp
fistl
dec
xchg
int
cmp
mov
mov
adc
stc
rcll
inc
nop
test
mov
pop
clc
movsb
testl
xchg
jno
imul
cmp
sbb
cltd
dec
xor
xchg
and
mov
int3
inc
sbb
dec
pop
cs
cmp
cmc
dec
adc
push
repz
mov
xchg
dec
movsb
stos
sbb
jnp
sbb
mov
in
out
outsb
adcl
add
inc
cmp
shlb
dec
cmpl
roll
push
and
popf
sahf
dec
ja
mov
adc
addb
outsb
and
pop
arpl
cmp
addr16
ret
push
sbb
fistps
out
ja
clc
cs
cmp
lds
mov
push
push
mov
push
addr16
xor
addr16
mov
fcmove
pop
adc
dec
jmp
cmp
xchg
sub
pusha
dec
push
test
js
test
cli
adc
mov
mov
enter
mov
scas
iret
rcll
lods
dec
repz
inc
add
hlt
pop
xchg
rol
mov
xchg
in
cmc
mov
xchg
push
test
js
xchg
xor
xor
mov
pop
mov
scas
mov
xor
shlb
rol
mov
call
sub
push
pop
dec
sbb
paddusb
inc
mov
sahf
inc
mov
adc
xor
mov
lock
out
rcll
scas
fcomi
and
rclb
xchg
sbb
lods
adc
mov
lret
sbb
or
fsqrt
je
sarl
lahf
jp
xchg
cwtl
push
lcall
jecxz
scas
jns
cs
int3
outsl
or
scas
or
or
adc
dec
sub
or
gs
jmp
push
sbb
add
jnp
pushf
jo
cmp
out
fstl
xor
inc
cmp
jecxz
jae
pop
arpl
pop
push
wrmsr
sbb
shll
adc
ds
inc
fwait
out
mov
or
mov
popa
pushf
xchg
adc
testb
jne
xor
inc
jmp
in
jb
rcrl
cwtl
add
mov
sbb
cs
pop
dec
and
and
lds
gs
sub
adc
inc
out
cmp
xchg
sbb
pop
jmp
sbb
dec
dec
pop
push
xor
pop
jns
arpl
andb
les
loop
imul
cs
in
je
std
and
rcl
icebp
inc
mov
mov
aaa
sbb
inc
mov
xchg
repnz
pop
call
aad
and
cmp
data16
adc
mov
pusha
jle
mov
add
nop
sub
pop
stos
test
insb
js
int3
mov
lcall
mov
jp
arpl
fcompl
or
and
cmp
es
outsl
test
mov
in
mov
out
jns
adc
test
int
lods
xor
mov
cmp
xchg
push
jge
dec
push
loop
pop
mov
and
mov
movsb
mov
dec
dec
ret
push
push
push
inc
lret
jmp
int3
sbb
adc
divl
xchg
cwtl
cmp
mov
out
mov
and
stos
sub
xchg
ds
xchg
adc
sti
xchg
movsl
loopne
xor
fdivrp
mov
dec
inc
fnstenv
outsl
add
jge
repz
sub
adc
cs
or
das
imul
cmp
mov
jg
in
clc
add
pop
insb
or
cmp
pusha
in
sbb
stos
mov
lret
xor
add
xor
dec
mov
adc
cmp
push
jno
aaa
pop
rclb
sub
out
sbb
stc
in
pop
jmp
sbb
imul
and
in
sbb
mov
out
cmp
cmp
stc
inc
data16
cs
sbb
dec
test
and
and
sbbl
arpl
jns
aad
fcompl
xor
mov
lds
dec
mov
incl
iret
out
xor
idivb
push
mov
mov
jnp
mov
in
push
aas
jl
jge
lahf
mov
into
call
outsb
xor
jge
insb
cmp
and
pushf
inc
andb
aad
sub
les
mov
mov
mov
sub
push
mov
jge
je
sti
fisttps
cmp
in
mov
inc
in
push
mov
pushf
dec
sbb
ss
inc
mov
in
in
xchg
or
adc
jne
pop
and
iret
xchg
mov
mov
xlat
fadds
pop
pop
jbe
xchg
xchg
push
rcrb
sbb
aam
enter
popf
mov
adc
loop
inc
cmp
js
add
xchg
pop
sub
mov
loop
mov
shlb
lcall
shlb
mov
mov
push
sub
sub
mov
push
addr16
push
hlt
xor
movsb
hlt
push
dec
mov
sub
rcll
lret
in
and
outsb
inc
repnz
dec
mov
jae
or
pop
xor
dec
push
xor
jbe
dec
fisubrl
inc
jmp
mov
push
lahf
ret
stos
jg
clc
je
jg
sub
push
cmc
add
xchg
jae
call
inc
mov
push
icebp
xchg
cmc
add
pop
xchg
lcall
test
cmp
mov
and
xchg
mov
daa
xchg
stos
sbb
icebp
andl
aas
fcompl
incb
mov
stos
sub
cmpsb
jecxz
adc
inc
ja
cmp
pop
popf
cmpsl
jmp
add
aaa
pop
lret
mov
pop
sbb
pushf
insb
in
xor
mov
push
pushf
mov
xchg
aad
mov
stc
adc
ror
icebp
and
pop
test
adc
adc
fimuls
loopne
add
cmp
mov
outsb
push
or
jle
subl
cmp
jns
jns
movsb
dec
negl
roll
push
fimuls
orb
pushl
and
mov
cltd
adc
mov
aad
push
fists
mov
cmc
test
xor
loop
sahf
mov
cs
inc
stc
mov
pop
std
push
pushf
xchg
repnz
jl
fdivr
decb
xchg
sarb
int3
ljmp
add
movsb
inc
cmp
fcmovu
xlat
push
mov
sbb
jle
or
setns
xchg
shlb
test
scas
imul
mov
aaa
cmpsl
test
lret
sub
fsubl
mov
sti
mov
insb
jnp
cltd
adc
cmp
lcall
xchg
and
icebp
push
and
fsubl
test
push
push
cmc
jnp
ficoms
stc
mov
fldl
jb
jno
or
jb
loope
outsb
lods
adc
sbb
mov
or
pop
cwtl
dec
imul
repnz
clc
xor
adc
das
sub
cltd
jg
scas
int3
bndldx
adc
push
push
outsl
pop
push
jge
lahf
pop
xchg
and
das
fwait
mov
cwtl
rorl
fistl
cmp
sub
aaa
xlat
jle
in
push
jp
xchg
fsts
push
imul
mov
dec
xor
xor
xor
jno
and
sub
push
push
sub
sbb
mov
lcall
in
add
sbb
mov
mov
stos
hlt
fldt
lcall
pop
in
mov
inc
xchg
adc
pop
test
out
or
insl
add
pusha
jecxz
pop
inc
push
sub
push
out
or
addr16
ljmp
xchg
adc
sahf
ficoms
pop
arpl
hlt
test
mov
adc
adc
mov
and
fldl
mov
adc
and
xor
sbb
inc
hlt
sbb
or
icebp
call
xor
repz
jae
imul
jnp
ret
in
cs
repz
xchg
fnstcw
push
or
fs
or
xlat
outsb
lods
in
int
rsqrtps
fucom
mov
jo
xor
addr16
push
inc
dec
push
dec
push
jae
mov
jecxz
shr
or
rol
or
cmpsl
adc
ret
mov
shrl
dec
loopne
xchg
daa
lret
inc
iret
sub
fs
enter
xor
jae
mov
scas
ljmp
dec
jge
xor
insl
inc
sbb
jp
push
in
repnz
aam
bound
fs
add
orl
sarl
pop
fstpt
cmp
andl
push
pushl
sub
mov
pop
pop
sbb
lret
test
mov
xlat
dec
sbb
enter
iret
fmull
or
inc
das
mov
inc
lods
push
mov
sbbl
in
ja
bnd
daa
xchg
ret
fwait
sahf
and
mov
fistps
cmp
enter
mov
repz
andl
fs
movsb
cmp
ret
cmpsl
stc
call
mov
daa
jg
sbb
mov
mov
xchg
adc
jbe
adc
adc
pop
push
stos
xchg
dec
xor
push
out
addl
test
inc
mov
into
leave
jbe
call
adc
jmp
cld
xlat
je
mov
mov
das
cli
aam
and
frstor
test
cmpsb
ret
push
inc
jno
outsb
mov
out
loop
stos
les
ljmp
int
pop
xlat
or
push
mov
shll
and
ror
stos
dec
fadds
cmp
adc
out
ljmp
mov
lret
xor
xor
test
sub
loope
pop
mov
iret
lcall
shrb
add
out
or
sub
xchg
mov
xchg
lahf
push
lods
in
out
jmp
push
mov
lret
fs
int3
or
fstpl
dec
fsubs
xchg
lcall
adc
lods
jbe
inc
jae
push
inc
scas
scas
loope
enter
fs
divl
gs
or
and
lahf
xchg
mov
push
popa
es
jmp
dec
ficoms
es
jle
in
divb
xchg
inc
ljmp
repz
mov
jle
cs
incl
adc
or
add
push
pop
xchg
mov
jmp
mov
inc
pop
xor
fcmovnbe
adc
push
and
mov
fisubrs
and
pop
sysret
pop
or
pop
pop
cmp
inc
shrl
loope
dec
jnp
inc
movsb
xor
push
arpl
enter
xor
ds
enter
nop
shrl
inc
and
hlt
push
repnz
xchg
jns
mov
mov
and
insl
jns
into
pop
arpl
push
test
shl
mov
push
add
test
loopne
jle
call
aaa
adc
leave
mov
stc
shll
push
loopne
and
pop
cs
add
es
outsl
fbstp
sti
sub
push
sbb
or
and
xor
icebp
inc
scas
dec
sbb
add
xrelease
push
cmp
jne
mov
cmp
movb
fwait
push
sub
out
sbb
xchg
mov
pop
adc
bound
dec
int
xchg
test
xor
lds
cmp
daa
push
push
mov
xlat
sahf
int3
push
push
ret
and
rclb
xchg
and
dec
movsb
mov
movsb
mov
and
pop
out
and
push
xlat
lds
push
cwtl
dec
and
int
negl
scas
or
fstps
fstpt
add
into
inc
icebp
add
aaa
mov
sbb
sbb
pop
jne
pop
xchg
pop
popa
scas
das
push
aaa
shl
test
or
xchg
cmp
mov
ja
in
mov
push
int3
in
iret
xor
mov
mov
xor
xor
fildll
sub
pop
shr
fldt
lods
pop
sahf
cld
int3
imul
pop
movsl
xor
in
xor
test
inc
clc
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
jmp
mov
loope
addb
cmp
dec
mov
mov
sbbl
adc
test
pop
stc
or
into
adc
jbe
or
hlt
push
cmpb
orl
xchg
fistl
fnstsw
adc
lahf
xchg
push
popf
pop
push
sbb
sub
mov
xchg
pusha
inc
mov
sub
dec
push
bound
jp
inc
sub
mov
xor
mov
adcl
inc
cmc
and
cltd
stc
jno
adc
out
imul
in
cltd
stc
add
iret
or
dec
jno
lret
nop
push
mov
cli
flds
or
and
stc
cmp
dec
pop
sbb
sub
jmp
sti
xchg
fwait
sti
fadd
add
bound
add
cltd
add
test
divb
clc
out
stos
inc
out
fdivrs
in
or
loopne
ss
jmp
push
and
xchg
cmp
lock
inc
incl
and
lret
adc
xchg
in
fnstsw
and
or
test
cmpsb
stos
jge
inc
add
and
xor
push
loop
mov
fs
mov
inc
mov
or
cld
add
push
xchg
outsl
enter
cmp
adc
lcall
psubsw
sub
std
adc
add
repz
jle
hlt
xchg
mov
cmpsb
jle
inc
mov
pop
ret
fs
stos
jb
sbb
mull
mov
dec
lcall
mov
daa
xchg
mov
fsubrs
sbb
or
dec
push
mov
mov
rcll
jl
add
shlb
add
ljmp
nop
mov
repnz
push
xchg
push
add
adc
pop
push
xchg
clc
movsl
mov
mov
push
les
aas
pop
cmp
xchg
cmp
jp
loopne
jnp
imul
leave
mov
sarb
and
lahf
dec
addb
add
shl
mov
mov
fdiv
xchg
out
add
enter
aam
test
xor
js
shr
and
push
sbb
mov
mov
xor
cmovs
mov
out
adc
mov
pop
pop
dec
fdivs
pop
lds
xor
aas
das
test
xchg
inc
dec
push
into
jne
sbb
mov
adc
ret
rolb
popa
mov
pop
jle
jnp
sbb
or
stos
pop
cmp
jbe
mov
ljmp
jne
lods
aad
lods
inc
outsl
and
fnstcw
mov
xchg
inc
mov
mov
cwtl
aaa
xchg
mov
out
repz
hlt
xor
add
into
xchg
mov
aad
das
sbb
lret
mov
addr16
push
rcll
fnstcw
test
test
adc
pop
xor
sub
imul
fnstenv
popa
in
pop
push
mov
jmp
repz
cltd
loope
testl
jo
das
adc
inc
repz
and
sbb
pop
dec
inc
leave
rcrb
push
xchg
xor
pop
out
andl
shlb
arpl
xchg
xor
cmp
sbb
loopne
jl
enter
popf
xor
outsb
dec
lcall
enter
loope
xchg
mov
xor
jb
popf
aad
js
cmp
push
inc
xor
mov
cmpsb
push
and
lahf
or
repz
hlt
daa
mov
test
inc
mov
repnz
sti
push
leave
enter
sub
arpl
cmp
inc
into
dec
sar
mov
test
fisttps
pusha
ret
mov
fs
mov
mov
aam
xchg
fmuls
shrb
sbb
test
push
lcall
je
insl
movsl
pop
sti
mov
mov
add
lds
cwtl
and
arpl
jb
and
mov
jno
pop
loopne
lea
sbb
dec
mov
xchg
xor
sbb
ja
jnp
cld
std
cli
int
xchg
cwtl
insb
bnd
jl
lahf
sahf
inc
sub
xchg
clc
enter
push
in
insl
mov
push
sub
pushf
shll
dec
push
inc
les
inc
ljmp
sub
xchg
mov
cwtl
adc
int
sbbl
inc
xor
pop
sbb
aaa
cmp
dec
xchg
sbb
xor
push
add
into
and
cltd
jae
sbb
lods
mov
sahf
lahf
imul
outsb
inc
push
movsl
fmull
xor
or
test
sahf
sbb
ja
pop
push
in
dec
lcall
ja
jle
fistl
pop
imul
insb
bound
in
test
sti
jne
sbb
shll
fidivrs
pop
fisubl
hlt
jb
jge
dec
lds
popa
dec
push
or
sub
push
xchg
and
pop
push
imul
cmp
cmpsl
movsl
insb
lods
movsl
sbb
mov
adc
push
inc
mov
jge
mov
push
push
dec
ret
add
jno
es
int3
in
les
mov
decb
ljmp
mov
cmpsb
push
sbb
dec
and
mov
enter
mov
add
push
xor
rorb
test
dec
aad
test
sub
fwait
dec
push
mov
inc
pop
mov
pop
bound
push
xchg
ret
les
pop
call
cs
jle
or
mov
and
stos
andb
lret
ds
clc
fildll
sti
jg
mov
cmp
je
xchg
repz
test
int
orb
adc
adc
jmp
lods
cmp
jg
enter
insl
in
push
sbb
jle
dec
mov
icebp
das
inc
inc
pop
adc
cwtl
add
fwait
sub
push
xor
je
push
pushf
inc
xchg
and
enter
cmpb
mov
adc
sbb
sbb
sbb
sbb
push
add
pop
popf
mov
xlat
cs
mov
es
xor
push
cmp
inc
loope
cld
dec
into
call
iret
xor
scas
or
nop
pop
test
inc
rclb
fs
vprotq
ds
iret
je
and
add
int
mov
mov
bswap
or
mov
insb
cld
jne
lds
outsl
outsb
sub
mov
adc
data16
stos
or
stc
std
mull
ds
insl
icebp
arpl
popa
in
mov
jmp
cwtl
test
sbb
jge
jg
repz
pop
pushl
pop
in
and
sub
lds
fcomps
mov
mov
jge
ret
pop
outsl
in
scas
mov
sub
inc
mov
and
push
pop
fsubrp
std
aam
push
inc
std
cmpsb
repz
test
pop
xchg
insl
into
pop
fs
push
and
adc
es
lods
add
and
push
cmp
sub
mov
pop
ror
rolb
xchg
pop
scas
dec
sub
push
jne
push
imul
and
jb
divb
adc
pop
mov
jne
daa
xchg
cmpsl
enter
mov
and
xchg
sub
bound
int
imul
pop
fwait
scas
inc
stc
mov
mov
icebp
loopne
mov
pop
ja
pop
pop
cld
pop
movsb
pop
fsubrs
pop
or
sub
pop
idivl
imul
iret
and
sub
jnp
jecxz
jae
rcrl
inc
mov
xchg
loope
pop
sbb
sahf
movsl
xor
xor
mov
xor
negb
in
insl
add
push
jno
push
adc
mov
test
repz
sbb
xchg
or
inc
xchg
xor
dec
clc
in
fwait
nop
push
stos
sbb
cld
jl
xchg
nop
and
insl
in
sub
loopne
jnp
pop
test
xchg
sti
add
ja
inc
iret
lret
ja
dec
add
inc
inc
int3
mov
movsb
or
jp
aam
movsl
inc
mov
repnz
fstpt
mov
scas
cwtl
dec
cmp
sbb
ja
inc
stos
sub
mov
cmpsb
adc
sub
pop
pop
lock
xor
xlat
mov
push
add
mov
pop
jne
arpl
inc
mov
mov
clc
pusha
push
lods
xor
xlat
push
int
push
jl
xor
xor
and
push
sbb
test
popa
add
or
clc
xor
mov
xchg
shrb
pop
movsw
std
inc
pop
and
xor
or
add
push
dec
cs
dec
inc
notl
roll
dec
gs
jnp
inc
jmp
mov
pop
inc
jp
pop
mov
testl
int
xchg
stc
push
ss
xlat
pop
std
mov
mov
add
push
or
sbb
fs
jg
cwtl
ret
mov
jnp
sub
pop
mov
fldt
jb
stos
xchg
inc
pop
in
scas
and
mov
into
lar
mov
push
fscale
in
cmp
setb
mov
add
daa
push
mov
popf
sbb
stos
xchg
sbb
xor
cmp
jmp
rol
fnsave
dec
arpl
lods
decb
mov
jbe
pop
cmp
sub
inc
sub
xchg
sarb
mov
and
xor
dec
scas
in
jns
roll
add
and
xorb
sub
ds
ret
imulb
pop
sub
ja
xchg
dec
leave
dec
xchg
insb
les
inc
in
negl
mov
cmp
inc
xlat
xor
sti
sahf
cmp
pop
adc
in
pop
les
enter
mov
add
mov
mov
dec
push
jae
lret
out
test
xor
xchg
clc
xchg
cmp
stos
daa
jg
cmp
xchg
jg
fmulp
call
std
leave
mov
cmc
mov
cmpsb
mov
faddl
fcoms
lds
or
rolb
ljmp
imul
mov
stos
je
mov
aas
test
pushf
inc
lea
mov
cmpsb
daa
inc
xchg
bnd
dec
xchg
es
push
ja
mov
add
cmp
fdivrl
sarl
cmpsl
pop
insl
mov
jecxz
adc
fsubrs
mov
leave
pop
inc
dec
pop
push
int3
popf
das
add
lret
pop
and
adc
add
repz
fs
ret
jns
imull
pop
dec
mov
rcrb
lds
jbe
xchg
adc
adc
pop
add
or
test
arpl
out
lock
bnd
aas
shlb
dec
cmp
and
xchg
cmp
imul
inc
mov
je
mov
add
fimull
addl
jne
mov
push
xchg
push
add
ss
movsb
lods
inc
ljmp
xchg
push
icebp
xor
push
push
pushf
stos
nop
cmc
cmp
out
jge
das
ja
in
sarb
lods
icebp
je
adc
iret
je
shlb
mov
outsl
jae
cltd
xchg
pop
leave
popf
imul
sbb
test
xchg
mov
mov
or
pushf
xor
push
mov
or
js
cld
push
iret
imul
std
sub
cld
sbbb
push
mov
mov
cmc
sbb
pop
decl
aad
enter
icebp
outsl
fmuls
ja
jle
cmpsb
popf
sub
aad
jb
push
nop
add
fistl
ds
mov
adc
test
pmulhuw
addr16
mov
stos
mov
cmpsl
test
ljmp
mov
cmpsl
push
sub
mov
adc
adc
fnstcw
dec
xchg
es
repnz
sbb
cmp
fcmovnu
test
int3
repnz
fisubl
mov
jnp
aad
loopne
mov
inc
jne
nop
das
popa
data16
leave
dec
shll
xchg
xor
jne
sub
sub
cwtl
mov
inc
fld
add
sbb
and
pop
je
lret
lods
loope
test
enter
ss
enter
push
stos
mov
or
pop
push
stos
and
leave
fistpll
out
out
dec
add
dec
scas
add
xchg
je
mov
dec
push
in
int
cmpsl
sbb
ljmp
pop
rcl
mov
xor
dec
jle
sbb
push
out
cmovne
fsubrs
pop
lods
and
scas
mov
aas
addr16
addr16
jns
sbb
fisttpl
jmp
syscall
jl
jle
fsubp
cmp
pop
adc
aad
jnp
in
mov
xchg
mov
sti
lahf
fisttps
test
int3
or
je
sbb
lock
lahf
inc
jl
leave
push
jp
jno
lcall
arpl
cltd
mov
das
xchg
mov
movsl
inc
cltd
pushf
mov
mov
call
js
and
mov
cmp
xor
mov
test
icebp
roll
test
lcall
sbb
mov
cmp
pop
cmpsl
jb
push
arpl
fists
push
aam
jmp
add
mov
or
hlt
or
not
hlt
lret
add
lods
pop
or
adc
cwtl
fs
push
and
dec
and
or
gs
mov
mov
jp
mov
cmpsb
sub
cmp
ja
fsubl
out
outsl
shr
push
cmp
jg
fmulp
mov
jno
push
mov
cltd
sub
sub
call
mov
cmp
out
sub
popf
push
rolb
lea
jnp
outsb
mov
jbe
movsb
scas
xchg
icebp
insl
outsb
cmp
and
pop
mov
mov
int
popf
mov
jp
lret
jnp
mov
mulb
repnz
sbb
mov
std
cmc
mov
sub
pop
iret
sahf
addb
jmp
jo
aad
xlat
outsb
fwait
mov
cwtl
mov
lret
adc
fs
loopne
movsl
xor
test
ss
mov
inc
mov
aam
mov
pop
and
inc
or
cmpsl
cmp
pop
into
loope
jno
jl
test
and
xchg
jg
scas
and
mov
cmpsl
mov
mov
popa
fwait
push
fcomps
sub
mov
or
sub
mov
call
xchg
xchg
inc
sub
in
add
xchg
stos
sub
popa
adc
hlt
push
pop
push
jb
mov
movsl
mov
sub
lret
ret
jb
cs
aas
mov
adc
push
xchg
sar
cmp
push
or
inc
xchg
mov
sbb
in
mov
sbb
in
cltd
fptan
daa
adc
inc
dec
xchg
fcomps
cltd
rol
mov
movsb
inc
cmpsb
cmp
aam
push
popa
outsb
push
subl
mov
pop
cmpsb
xor
dec
mov
inc
sub
sbb
les
sahf
adc
outsb
pop
cs
shl
div
sbb
loopne
lret
push
aas
cltd
mov
insl
mov
sub
daa
xlat
add
fisubrl
jo
cmp
inc
jne
fstps
std
xor
daa
push
or
cs
xchg
mov
xorb
daa
int3
pop
or
push
repnz
xchg
fistps
adc
pop
pop
xchg
add
aaa
es
mov
inc
jmp
shrl
out
aas
loopne
mov
mov
sbb
clc
in
addb
sbb
adc
out
pop
push
mov
pushf
out
pop
jp
inc
clc
vmread
in
js
lods
xor
mov
push
fdivrp
add
rep
cmp
bound
add
xor
lcall
loopne
dec
lock
sbb
je
test
pmullw
or
imul
andl
mov
arpl
jl
dec
je
mov
cmp
imul
bound
stos
dec
jle
pop
jo
fists
lret
pushf
out
or
jns
mov
pusha
test
push
scas
dec
mov
ds
dec
shrl
adc
addl
adc
lret
jno
insl
and
sub
movsl
add
fbld
mov
movsl
xor
adc
cmp
lock
cmp
xor
arpl
jbe
mov
add
pop
mov
lahf
jo
iret
inc
mov
jg
add
outsb
cmpsb
adc
or
imul
sbb
xchg
lahf
popa
jg
or
pop
xchg
test
inc
outsb
fcomps
mov
ss
lods
sub
lret
ret
or
xor
test
inc
mov
mov
incb
leave
dec
and
out
xchg
loop
xor
test
or
add
ljmp
shrl
and
mov
sub
js
inc
adc
adc
mov
frstor
push
xchg
and
inc
mov
mov
cmc
jp
xor
xchg
mov
dec
jo
cmp
pop
outsl
stc
gs
or
enter
pop
je
shlb
jmp
fidivrs
sbb
xchg
imul
fnstenv
es
cmp
in
orb
test
into
pop
mov
xchg
frstor
cmp
cli
mov
daa
mov
sub
adc
psllw
pop
jmp
jecxz
inc
scas
aam
pop
xlat
out
jae
in
pop
add
inc
dec
pop
jmp
and
inc
sub
fadds
es
testb
loop
stos
xchg
std
cmp
insl
int3
or
or
cmp
cmp
rcrb
and
cmp
aaa
pop
test
or
cmp
mov
cmpsb
lock
testb
pop
gs
fsubrl
inc
sub
sub
fcoml
cmpsb
out
iret
push
cwtl
adc
cli
fmulp
cmpsl
mov
movsl
or
sbbl
sbb
pop
add
fsubr
lret
movsl
sarb
pop
imul
call
mov
sbb
jne
cmp
cmp
shll
inc
lret
lahf
ljmp
daa
cmpsl
cwtl
lods
pusha
or
aas
popa
mov
dec
scas
xor
repz
xchg
and
pop
pop
daa
cmp
pop
adc
pop
sub
xchg
out
dec
fisubrl
popf
or
mov
cmpl
cmpl
es
movsl
lods
fcoml
inc
mov
dec
icebp
outsb
test
out
dec
jb
push
inc
xchg
rcr
icebp
sub
cld
outsl
fdivrp
repz
aad
fdivs
cmpsl
and
and
dec
cmp
es
pop
test
je
test
ss
test
test
outsb
adc
fiaddl
pop
cmovae
inc
pop
inc
cmpsl
aaa
cmp
dec
insl
xor
push
mov
adc
pop
pushf
adc
aas
mov
adc
xchg
scas
inc
mov
mov
mov
repnz
in
fisubl
inc
jmp
mov
inc
xor
cmp
sti
fidivrl
test
out
dec
sub
and
pushf
mov
mov
inc
out
imul
jg
inc
rorb
decb
add
xorl
mov
add
xchg
hlt
imul
scas
add
aaa
mov
gs
ljmp
lret
add
push
fnsave
mov
rcr
mov
mov
cwtl
xchg
cmp
fnstsw
pop
gs
jle
outsl
loope
mov
rcrb
dec
mov
stos
ljmp
fmuls
fbld
icebp
aad
into
xchg
fidivrl
in
stos
dec
ja
sbb
nop
dec
jno
das
aam
mov
adc
std
sahf
mov
pop
adc
inc
add
add
mov
cmpl
scas
push
rcl
add
pushw
lcall
mov
push
and
push
dec
sub
or
pop
mov
je,pt
push
outsl
pop
fiaddl
mov
ljmp
mov
es
pusha
mov
ds
movsl
pop
dec
sub
push
faddp
frstor
lock
ret
push
leave
xor
std
fsts
jmp
xchg
or
push
xchg
lds
loop
test
mov
or
andl
mov
xchg
dec
dec
stos
ret
push
dec
in
ljmp
jmp
sub
stos
repnz
inc
xchg
test
cld
sti
cmpsl
or
loope
or
jo
xchg
loopne
mov
vmread
dec
jl
cmp
cmp
hlt
add
test
imul
enter
loopne
push
mov
jmp
das
inc
jl
dec
push
and
enter
fiadds
lods
xchg
aam
mov
mov
xchg
fistps
in
inc
mov
xor
and
add
xorl
popa
dec
push
iret
leave
adc
sti
mov
push
mov
repnz
or
in
cmp
dec
daa
add
push
popa
cli
dec
int
shlb
ds
push
into
in
jo
mov
fildl
lds
adc
imul
mov
dec
mov
cmovno
sub
out
mov
and
in
jns
mov
cs
repz
xlat
outsb
bound
mov
into
scas
inc
lods
stos
test
cmpsl
insl
adc
inc
sub
pusha
ja
inc
lahf
add
ret
sbb
cs
ljmp
les
ss
lock
fcomip
mov
inc
cli
rcll
mov
fildll
test
popf
cmpb
nop
out
or
mov
ret
and
pop
cmp
pusha
adc
fnstsw
sbb
cwtl
call
aaa
imul
push
dec
data16
test
jmp
loopne
xchg
popf
subl
jge
jmp
aad
mov
and
insl
hlt
adc
cmp
inc
nop
cmpsl
mov
sbb
jns
int3
ret
sub
incb
fcmovnb
jns
outsb
jle
inc
outsl
mov
aaa
lret
mov
fld
ret
dec
shlb
mov
idivb
or
mov
cmpsb
ljmp
and
rcrb
jge
push
mov
aaa
add
mov
enter
les
hlt
mov
mov
aam
rorb
popf
push
je
inc
leave
cld
out
xchg
iret
es
inc
shlb
push
xchg
jge
clc
mov
sub
js
cmpsl
mov
xchg
sbb
sbb
jge
cmpsl
mov
add
add
adc
repnz
int
loopne
psubq
adc
insl
or
pop
inc
dec
cmp
mov
rorb
cmpsl
push
cmp
mov
pusha
popa
add
repnz
xchg
movsb
and
rcll
jns
adc
add
das
sub
jae
cmp
sub
xchg
test
jle
mov
lahf
inc
aad
nop
mov
movsb
repnz
enter
mov
loope
xor
hlt
inc
pop
test
stc
mov
cmp
sub
icebp
in
pop
lods
push
jne
cmpl
movsb
adc
adc
stos
pop
sti
stos
mov
in
and
cmp
cmpsl
mov
scas
sbb
cld
enter
or
mov
xor
and
xchg
std
pop
mov
adc
test
lahf
lcall
inc
xlat
cmp
xchg
lods
ss
mov
or
pcmpgtd
pop
daa
je
mov
xchg
loopne
pushf
push
shl
cli
push
jge
lret
jp
pop
xchg
loop
fistpl
outsl
mov
xor
fsubs
sbb
pop
enter
sbb
jg
sub
jo
mov
incl
push
pop
push
cmp
insl
inc
jae
nop
add
in
and
stc
adc
pop
pusha
xchg
jp
sahf
scas
mov
adc
out
sub
add
dec
lods
movsl
adc
dec
xorps
pop
addr16
ljmpw
mov
sarb
inc
movsb
in
loope
or
les
or
xor
popf
cmp
cmc
aas
inc
jg
pop
and
cmp
loope
and
loope
mov
pop
push
mov
aas
mov
mov
cmp
into
aam
movsl
test
sub
cmp
inc
jno
inc
out
adc
rorb
xor
lcall
stos
add
stos
add
jge
fists
add
cli
pop
inc
pop
jo
in
test
mov
inc
xchg
sahf
hlt
sti
push
sub
repnz
add
into
popf
mov
out
loop
ja
ficomps
stos
jmp
ret
in
xor
mov
mov
es
cmp
insl
xchg
loop
xchg
into
dec
push
xlat
cwtl
imul
dec
insb
or
ja
xchg
inc
sbb
stos
into
or
lret
xor
sbb
lods
lea
inc
test
jmp
jns
ds
je
sub
ja
xchg
test
ja
jne
pop
adc
and
mov
adc
cmpsb
sbb
mov
stos
push
daa
pop
loopne
cmpb
sbb
cmp
adcl
rcrl
dec
fstpl
fisubrl
jmp
int
jbe
sbb
sbb
inc
in
call
add
pop
fcoms
mov
jae
add
jo
or
xchg
mov
insl
mov
loopne
pop
insl
jmp
mov
fstps
sbb
cs
push
inc
inc
xchg
jecxz
loope
mov
outsl
sub
mov
loopne
fiadds
in
jno
hlt
jns
enter
and
sbb
das
mov
sub
sbb
ja
rcrl
cmp
pop
lret
mull
addr16
push
lock
pop
or
mov
push
dec
push
or
icebp
cmc
sbb
mov
lret
shll
pop
mov
fldt
and
and
pop
mov
fmul
es
movsb
dec
subl
push
sub
cmpsl
rcrl
mov
cmp
les
ja
mov
in
push
addl
leave
test
pop
mov
lcall
cmp
mov
cwtl
lods
xchg
jo
pop
rclb
xchg
pcmpgtd
insb
push
jp
push
mov
insl
mov
fnstcw
add
out
jae
adc
mov
bnd
xorb
insb
out
or
add
xchg
sti
jb
pop
lea
xchg
sti
xor
inc
stc
popf
sub
lea
push
or
add
push
dec
outsb
sarb
enter
es
test
and
ds
inc
and
inc
or
shll
pusha
bound
es
inc
lock
xchg
into
sbb
stc
pop
aas
push
push
inc
filds
lahf
mov
movsl
jg
stc
mov
xchg
xchg
jne
fimull
push
lret
es
push
xlat
pop
jns
pop
pop
or
mov
rcrb
nop
dec
add
rcrl
pop
mov
into
pop
adc
xorb
mov
adc
pop
hlt
lods
cmc
add
cwtl
int3
mov
or
stos
outsb
sub
sti
xor
cmpsb
shl
jl
mov
inc
sbb
inc
pop
lcall
pop
out
repz
inc
nop
and
andb
sbb
xor
das
xchg
inc
adc
pop
in
cli
and
stos
aam
inc
popa
movsb
in
or
or
sbb
decl
jne
cld
ret
adc
and
ljmp
push
shll
fcoml
das
arpl
mov
addr16
sarb
divb
bound
cmovnp
mov
mov
push
nop
stos
push
out
and
mov
nop
sbb
xor
outsl
lods
ret
xchg
sub
into
or
jg
lock
mov
cmp
sbbb
xorb
cwtl
mov
sbb
push
movlps
jbe
push
jnp
mov
fidivrs
aaa
test
xchg
adc
mov
or
ljmp
xchg
ja
fwait
mov
in
rolb
js
mov
pop
dec
inc
inc
push
dec
add
cwtl
bound
pop
iret
xchg
fisttpl
push
jne
cmp
rolb
push
mov
pop
jmp
jmp
mov
dec
clc
inc
cmpsl
fildll
mov
cs
push
mov
cwtl
hlt
fstl
jle
lret
pop
jno
mov
xchg
inc
adc
jno
inc
cmc
mov
mov
sti
and
imul
jb
es
sbb
cli
sbb
jp
in
xlat
lods
jecxz
aad
xchg
cmp
jecxz
xchg
xchg
push
push
popa
mov
loope
cmc
fisttpll
xchg
js
fstpl
pop
jbe
int
jecxz
into
fadd
cmpsl
callw
mov
mov
popa
ds
pop
aaa
lret
scas
lds
jp
xor
out
lcall
jno
data16
jnp
sub
or
adc
lcall
mov
dec
jmp
inc
pop
test
pop
loop
test
xchg
in
data16
lcall
jo
pop
and
int
sbb
fnstsw
and
push
xor
add
push
pop
arpl
and
dec
cmp
test
mov
jns
sarl
adc
cmp
cmc
jb
sbb
lret
add
je
jo
call
addb
mov
push
mov
addr16
ffreep
out
push
sbb
pop
test
jne
es
and
xor
add
bound
cmp
mov
fstpt
jge
add
incl
inc
push
cltd
inc
fcmovb
cmpsb
jns
jno
mov
lock
push
sub
xchg
push
js
mov
inc
mov
pop
sub
pop
test
and
lods
lods
fbstp
add
inc
fldenv
sbb
or
push
subl
testl
add
subb
loope
push
pop
and
hlt
sub
sbb
lcall
loop
xor
outsb
loope
add
lcall
push
std
out
pop
sbb
lcall
push
xchg
call
dec
cmp
ret
inc
aad
pop
sbb
and
adc
cld
cmpsl
pop
xor
and
pop
push
clc
xchg
sub
lock
dec
push
jle
mov
mov
mulb
xor
cmp
mov
push
rclb
aas
jae
stos
repz
js
outsl
test
mov
mov
inc
lcall
fnstenv
add
mov
push
test
dec
push
jecxz
repz
shlb
add
negb
iret
mov
rcrl
mov
mov
rep
mov
xor
ss
andps
mov
pop
push
ds
ret
jp
imul
fsubl
lret
add
or
add
fmuls
dec
fimull
ret
or
mov
test
push
xchg
xor
mov
ret
das
out
mov
jo
inc
sbb
jne
jmp
jp
xor
ds
push
dec
std
scas
fcmovnu
in
push
or
fistpll
pop
add
cmp
in
inc
outsb
or
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
sub
mov
mov
adc
mov
xor
subl
add
mov
movzbl
sub
mov
mov
xor
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
push
pushl
call
jmp
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
add
mov
adcl
xor
mov
adcl
add
movzwl
sub
mov
movb
sbb
lea
mov
mov
sbbl
mov
xor
xorl
inc
andl
mov
add
movl
addl
push
movl
mov
push
mov
mov
sub
or
mov
sub
xor
mov
push
sbbl
add
movl
jmp
mov
mov
inc
movl
cmp
jb
movl
cmpl
je
cmpl
jbe
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
xor
addl
add
movl
jmp
mov
addl
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
call
jmp
mov
sbbl
add
addl
movzwl
xorl
mov
sbb
mov
movzwl
orl
xor
add
movzwl
mov
mov
movl
inc
mov
mov
movl
cmp
movl
jne
or
mov
andl
xor
add
inc
mov
cmpl
jl
jmp
push
push
call
cmpl
jb
mov
mov
sub
xor
and
add
adcl
mov
mov
xor
add
movl
cmpl
je
cmpl
jle
jmp
push
push
pushl
push
call
xor
xor
dec
mov
jmp
mov
movl
cmpl
je
cmpl
ja
jmp
push
pushl
pushl
push
call
mov
dec
mov
jmp
movl
neg
movl
movl
mov
mov
adcl
mov
xor
xor
add
mov
mov
mov
je
mov
adc
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
adcl
xor
sub
subl
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
call
cmpl
jne
xor
or
inc
mov
jmp
xor
or
mov
xorl
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
push
call
mov
dec
mov
jmp
mov
add
subl
imul
movzwl
sbb
mov
mov
andl
xor
xor
inc
mov
cmpl
jl
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
add
subl
or
andl
mov
inc
mov
cmpl
jb
jmp
pushl
pushl
push
call
cmpl
jb
mov
sbbl
mov
mov
andl
add
addl
xor
mov
sbb
mov
add
mov
movl
add
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
pushl
push
push
call
jmp
mov
mov
adcl
lea
adcl
mov
mov
neg
mov
sub
add
mov
mov
mov
and
mov
xor
movl
add
jne
jmp
subl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
push
call
jmp
sub
xor
xor
sub
mov
subl
mov
mov
movl
xor
andl
xor
sub
orl
sub
xorl
xor
movl
mov
mov
movl
mov
jmp
andl
xor
or
inc
mov
cmpl
jge
jmp
push
pushl
pushl
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
adcl
xor
addl
xor
sbbl
sub
andl
mov
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
jmp
inc
arpl
and
xchg
sahf
pushf
ja
test
data16
cmp
dec
movsl
adc
aam
jmp
pop
imul
adc
xchg
push
push
cmpsl
jno
pop
jbe,pt
arpl
imul
cmp
lds
cmp
mov
dec
mov
adc
jb
push
das
test
mov
pop
add
shl
adc
jns
push
push
mov
fdivr
lods
mov
push
or
ds
jmp
cltd
jae
fs
push
lret
mov
sub
divb
sbb
repnz
mov
repnz
pop
dec
xchg
pop
clc
lret
ret
jnp
mov
cmpsl
add
sbb
cmpsl
or
push
out
fimuls
enter
in
test
enter
sub
sar
or
arpl
sub
out
mov
or
jp
mov
adc
stos
call
repz
mov
loop
bound
sub
or
loope
repz
pop
shr
es
jg
or
inc
mov
mov
add
fidivs
mov
xchg
scas
sub
sbb
and
pop
jmp
dec
enter
repnz
cs
dec
pop
hlt
pop
clc
or
in
lret
jns
dec
popa
sbbl
mov
clc
outsb
leave
cmp
push
mov
sub
jae
push
mov
aad
hlt
adc
sub
js
xor
inc
iret
lea
sbb
mov
xchg
aaa
xor
pop
repnz
popf
loopne
in
pop
fcmovnu
mov
mov
out
out
sbbl
pop
adc
in
mov
mov
pop
mov
cwtl
xchg
jbe
decl
adc
inc
pop
shrl
inc
sub
ljmp
ja
xor
push
adc
scas
insl
mov
mov
pop
out
mov
hlt
fistl
shll
push
stc
jmp
divb
fcoml
lret
jmp
aaa
cmpsl
dec
lock
hlt
mov
out
jmp
or
out
mov
inc
pusha
cltd
fs
gs
xchg
jo
aas
mov
jp
iret
pusha
cltd
dec
addr16
in
jmp
rolb
cmp
fsubs
mov
xchg
and
mov
adc
je
pop
out
adc
enter
adc
in
sarl
push
js
rcll
cmc
fwait
test
or
xchg
xor
fisttps
inc
aaa
mov
sub
pop
jmp
mov
gs
in
adc
push
and
repz
fstp
aam
dec
adcb
imul
mov
cs
xchg
add
outsb
sarl
insb
lahf
jnp
idivb
jle
js
addb
cmp
mov
aas
pop
mov
enter
xchg
mov
jg
mov
sub
test
pop
call
imul
inc
cmc
mov
loop
mov
pop
jo
inc
sub
add
inc
cmp
pop
mov
sbb
mov
xor
lock
loop
jns
fwait
rcl
mov
outsb
int3
push
pop
add
les
sbb
mov
adc
daa
popl
mov
jbe
sbb
mov
jne
lods
int
outsb
pop
mov
cmc
jns
lret
inc
and
xor
jg
daa
cmp
mov
loop
arpl
dec
dec
sub
mov
adc
mov
mov
push
xor
mov
das
and
jmp
stos
test
push
push
adc
and
loopne
xor
dec
fs
adc
movsb
dec
mov
cli
loop
and
jae
fldl
addr16
xchg
sti
shl
dec
pop
fucomp
adc
adc
jmp
adc
inc
and
mov
lods
jnp
cmp
test
jno
fstpt
or
cld
xor
cmp
hlt
scas
xlat
mov
cmpsl
cld
xor
xor
mov
sahf
push
dec
enter
or
in
sti
ljmp
imul
jge
add
out
xor
data16
in
in
test
fisttps
pop
enter
push
inc
movl
sub
jmp
mov
pop
fstpt
les
or
dec
jno
scas
xchg
in
das
popf
mov
in
cltd
and
or
push
jecxz
cmp
sbb
sbb
xchg
push
xor
outsb
jle
sti
xor
sub
mov
out
inc
es
popf
cmpl
xor
adc
sub
nop
cmc
sub
and
fimull
jge
mov
popa
repz
aas
mov
mov
out
pusha
jbe
dec
rorl
setb
xor
mov
xlat
movsl
adc
cmp
fidivs
jecxz
inc
push
jmp
lods
int3
cmp
or
mov
or
xchg
add
fcmovu
pop
fsubrs
pop
arpl
push
rolb
lret
cmp
xchg
lods
jo
ja
cmp
push
dec
jno
imulb
sahf
xlat
jle
subb
movsb
pop
push
jb
fstpt
std
pop
sub
cmp
in
pop
dec
scas
push
mov
push
adc
xor
mov
rolb
sub
xchg
mov
cmp
divb
mov
out
xor
xor
jnp,pn
adc
push
inc
or
jbe
xchg
add
pop
adc
push
pop
push
and
jbe
or
mov
loopne
out
add
jg
cmp
cwtl
dec
mov
sub
cmp
movsl
dec
push
out
add
xchg
fdivrl
enter
pop
cs
mov
cwtl
int
lds
adc
pop
or
mov
fisubs
sbb
inc
push
gs
pop
repnz
xlat
orl
das
push
and
das
pushw
inc
or
sub
hlt
fucomp
out
cmpsl
inc
lods
dec
xor
aas
adc
shlb
int3
cld
bound
cmp
gs
and
sbb
cmp
mov
imul
add
aas
icebp
dec
adc
aam
mov
pop
xor
aad
xor
xchg
stc
ret
sbb
cmpsb
fisubs
repnz
mov
int
fsubp
loope
mov
popa
idivb
push
and
or
popa
adc
cwtl
cld
xlat
mov
jecxz
inc
ljmp
xchg
mov
mov
push
mov
cmp
jmp
jl
mov
cmp
lahf
mov
and
popf
sbbl
jle
into
aam
cmpsb
sub
mov
repnz
mov
pop
ss
mov
stos
mov
add
ss
pop
xchg
jmp
gs
into
and
outsb
dec
push
xchg
lds
pusha
rorb
xchg
dec
or
dec
icebp
stos
in
add
rorl
sti
mov
imul
scas
cmc
push
cmp
cli
sbb
mov
lahf
ret
push
test
and
std
shll
add
fxch
sub
dec
shll
mov
loopne
jmp
cmp
jl
adc
bound
add
iretw
inc
mov
imul
test
adc
push
pop
ljmp
ss
pushf
stc
and
sarl
dec
scas
push
into
lods
dec
jae
cmpsb
int
test
aas
push
jbe
fstl
std
pushf
push
fs
stos
mov
aad
lods
lret
inc
pushf
pop
mov
sub
xchg
jge
dec
add
xor
sarl
fwait
ret
int3
jae
imull
mov
sbb
mov
xchg
addb
xchg
push
scas
mov
jne
iret
cmp
adc
dec
gs
rcrl
adc
inc
and
pop
mov
shlb
test
lcall
sbb
std
jbe
in
and
loope
aad
clc
sbb
jecxz
pop
sbb
aam
xor
or
jge
mov
in
pop
jecxz
cld
cli
dec
movsb
aaa
in
lods
out
cmp
and
repnz
mov
mov
xchg
inc
sbb
xor
and
xor
psadbw
cmp
mov
mov
pop
out
mov
jg
dec
imul
jbe
push
or
sbb
int
sbb
mov
subl
sbbl
cli
and
flds
xchg
add
mov
mov
loop
cld
js
pop
mov
pop
js
outsl
pop
cmp
inc
inc
cltd
pop
es
test
stc
arpl
jnp
inc
pop
pop
jbe
shlb
adc
sti
icebp
daa
lret
mov
jmp
cmp
push
std
mov
mov
and
roll
xchg
addl
xor
inc
bound
stc
sbb
cltd
divb
adc
or
xchg
sub
lcall
stos
loopne
aaa
cltd
xor
adc
das
stc
pop
dec
ret
cltd
je
into
setno
mov
rcl
and
ss
sub
lcall
xchg
cltd
je
fdivrl
in
jg
jmp
adc
mov
out
adc
xchg
push
mov
cmp
jbe
adc
cmp
sub
mov
cmp
jmp
rcl
lods
adc
mov
fwait
push
cmp
sar
and
fldlg2
jo
and
inc
loop
in
inc
dec
xorl
jb
aaa
mul
addr16
mov
cmp
xor
xor
sub
cltd
shl
xchg
add
sbb
mov
aas
js
aaa
xchg
mov
je
mov
popa
cmp
xchg
fs
insl
and
mov
jmp
inc
jmp
mov
dec
cmp
andl
or
xchg
mov
cmc
xchg
test
pop
inc
mov
cmpl
pusha
mov
xor
cwtl
imul
jns
popa
xor
push
aam
lods
addb
and
cmpsl
pop
push
mov
mov
jo
add
add
inc
in
sbb
sbb
pusha
fsts
cmpsb
sub
ficoml
push
out
push
xchg
sbb
xor
mov
xchg
sbb
push
pop
sbb
fstl
sti
daa
lock
xor
loopne
and
ret
addb
mov
jg
outsb
iret
lods
sub
sub
push
mov
test
sbb
push
cmp
movsb
movsl
sub
add
sub
adc
mov
mov
xchg
mov
xchg
cmp
bswap
ret
inc
xchg
sbb
inc
dec
dec
rcll
pop
hlt
pop
inc
data16
lcall
inc
adc
sub
lods
js
clc
push
addr16
pop
jge
int
mov
cwtl
dec
pop
aaa
pop
cmpsb
fdivrp
push
cmp
inc
sahf
mov
add
add
in
jae
lea
ret
pop
xchg
repnz
add
fsubr
fldl
mov
or
mov
adc
ljmp
les
rcrb
inc
scas
scas
dec
cli
cs
outsb
pop
out
jg
dec
mov
inc
dec
out
jmp
sti
mov
xor
lods
divl
lret
sbb
pop
fxch
lea
loopne
scas
mov
mov
inc
sbb
mov
xchg
cwtl
addr16
in
mov
xchg
jmp
test
sbb
xlat
stos
lret
xor
ret
lret
sub
inc
mov
out
arpl
mov
inc
jge
sub
loope
pop
lods
cmpsl
dec
cmp
push
enter
bound
pop
xchg
inc
ds
pop
xchg
mov
cmp
iret
xchg
xchg
jp
das
movsb
stos
ja
jl
loopne
mov
lret
mov
push
inc
stos
int
jbe
push
or
jns
cmp
inc
sub
and
inc
loope
in
add
pop
pop
int3
enter
test
loope
adc
push
mov
movsl
pushf
jno
xchg
mov
xlat
or
xor
mov
inc
clc
fucomp
cmpsl
outsb
mov
stc
into
mov
icebp
sub
pop
xchg
adc
add
repz
adc
decb
jb
jo
push
fwait
mov
rcl
xchg
jne
call
push
cld
add
std
cld
mov
sbb
xchg
sbb
add
sahf
inc
into
inc
ret
or
sub
sub
lahf
das
adc
jmp
or
cmc
adc
jnp
xor
mov
push
jmp
lret
cmp
mov
add
mov
int3
aad
in
mov
popf
adc
scas
mov
fstl
outsl
xchg
inc
pushw
sub
ljmp
sbb
jne
push
xchg
arpl
add
xchg
mov
sahf
xor
adc
xchg
rorl
imul
pop
imul
loope
dec
rolb
sub
dec
push
arpl
jle
mov
movsb
pop
popf
frstor
popa
dec
dec
aaa
dec
pop
add
dec
mov
iret
sub
adc
inc
jl,pt
int3
cmp
cmpsb
jg
cli
cwtl
mov
xchg
test
jbe
cs
xchg
ljmp
sbb
repnz
push
mov
cmc
add
sbb
imul
push
insl
icebp
mov
imul
enter
mov
int
hlt
pop
cmpsl
sbb
leave
mov
and
inc
mov
jl
mov
in
mov
push
incl
inc
fsubrp
fdivl
mov
cmp
int
push
inc
jb
jno
mov
and
and
mov
nop
in
mov
insb
arpl
sti
stc
sub
cmpsl
or
xchg
mov
mov
imulb
lds
std
in
gs
movsb
xor
xor
push
push
add
nop
test
sub
call
xchg
push
stos
int3
push
lds
or
push
stos
fs
push
pushf
sbb
aad
and
rcrl
repz
ficoml
or
mov
xor
leave
cmc
jmp
pop
sub
and
aaa
cld
and
or
xchg
xor
cmp
push
mov
push
mov
dec
inc
or
sub
sub
or
jmp
dec
dec
cmpsl
ss
aas
out
rclb
mov
add
add
pop
insb
outsl
dec
fiaddl
add
jmp
mov
add
push
icebp
adc
or
ret
jb,pt
jp
out
lock
cmp
outsb
and
sub
and
cmpsb
mov
pop
pushf
add
fimull
or
sti
shll
les
inc
cmpsb
addr16
aaa
jae
inc
ja
call
xor
or
sub
cmp
js
dec
adc
mov
jae
jle
icebp
sbb
ficoml
pop
call
adc
fists
jp
dec
sub
iret
dec
sbb
sub
popf
sbb
pop
dec
ljmpw
iret
inc
idivb
pop
shll
jp
mov
sbb
mov
lcall
jne
outsb
dec
xlat
mov
and
aam
push
jmp
test
sub
sub
push
adc
push
mov
jo
or
pop
lock
inc
push
test
sub
xlat
bound
sbb
xchg
push
push
in
repnz
push
sbb
xchg
pop
or
mov
sbb
insb
rcrl
in
sahf
mov
xchg
lock
insb
push
push
pop
mov
mov
cmp
data16
sub
cmpsl
je
dec
nop
push
jns
daa
push
into
in
insl
xor
mov
movsl
mov
cmc
dec
pop
gs
push
push
popf
adcl
mov
lds
nop
push
push
sarl
call
gs
hlt
dec
dec
inc
iret
jo
jg
pop
shl
xchg
nop
push
pushf
popa
cwtl
or
sahf
inc
fsubs
aas
adc
push
add
push
and
jl
nop
leave
outsb
or
jmp
out
int
mov
sbb
leave
fwait
xchg
sub
jmp
push
and
es
or
sarb
bound
push
xor
cli
jg
aas
clc
or
imul
lahf
and
loopne
cld
jns
mov
add
xor
imul
imul
into
push
push
cmp
jl
xor
jge
dec
cmc
cwtl
xchg
insl
xorl
lods
outsb
mov
cmp
fists
shl
xchg
mov
clc
daa
mov
adc
mov
lods
xchg
jge
inc
push
push
jl
add
ja
fstl
and
andl
ljmp
outsb
mov
mov
inc
fsubs
adcl
xchg
pop
les
cmp
adc
stos
sti
aas
inc
adc
mov
cmp
aaa
adc
mov
shr
add
out
pushf
xor
cltd
mov
or
in
popa
aaa
or
or
sub
xchg
cli
fbld
mov
bound
lcall
mov
inc
fadds
mov
adc
sti
fs
pop
cwtl
push
xor
cmp
push
pop
jmp
mov
test
dec
ret
mov
xchg
mov
add
fildll
jmp
repnz
cmp
push
movsl
xchg
je
mov
in
stos
ljmp
and
xchg
bound
fdivrs
cs
les
test
jecxz
std
jbe
push
xchg
test
cltd
and
fldenv
das
cltd
xchg
aas
stos
sarl
mov
sbb
out
dec
push
cltd
push
cmpsl
xchg
incb
jne
loope
jb
jle
clc
and
mov
xchg
mov
popf
jbe
and
mov
mov
dec
add
loop
or
dec
lock
push
push
loope
ss
cmp
mov
xchg
pop
mov
jne
cwtl
sbb
aam
xor
stc
jne
xor
push
jne
adcb
test
clc
jb
mov
mov
imul
xor
andl
jp
outsl
or
js
pop
push
jns
sahf
out
jle
cs
mov
push
icebp
cs
cmc
push
out
jns
outsb
mov
testl
jae
stos
mov
and
vphaddbd
jecxz
movsl
jge
stc
and
jle
int3
sbb
jle
sbb
ficompl
mov
jno
sar
jo
xchg
cmpsl
pop
repz
rcrb
pop
jns
pop
aaa
scas
call
mov
pop
inc
je
push
adc
lret
stos
loopne
mov
push
shrl
out
inc
jae
or
hlt
pushf
sbbl
in
xchg
testb
pushf
push
into
mov
ret
jmp
inc
or
pop
sub
xlat
in
mov
scas
jmp
or
push
adcl
push
push
daa
mov
lods
testl
and
ljmp
add
inc
mov
jge
mov
es
push
mov
ret
lods
mov
sub
xor
cli
add
mov
cmp
adc
mov
push
pop
mov
in
loopne
mov
js
jo
aaa
aas
jns
mov
outsb
mov
sub
out
pop
or
pop
pop
or
mov
repz
leave
mov
mov
xchg
test
push
cmp
stos
or
in
fwait
insl
andl
inc
ss
andl
test
shlb
int3
and
popa
push
test
add
and
pop
stos
sub
mov
or
inc
jne
mov
stos
out
cmp
lds
sub
data16
ljmp
sarl
pop
push
out
add
push
jnp
shr
loope
dec
sub
jg
xchg
fsubs
int3
popa
xor
push
jg
mov
push
bound
sub
rcll
leave
or
mov
dec
xchg
ljmp
cli
stc
movsl
jmp
loopne
jmp
and
repz
mov
fists
cmpb
dec
push
sub
and
fs
adc
fwait
cmp
adc
jmp
pushl
gs
mov
std
xchg
or
inc
ja
scas
movsb
push
mov
mov
dec
lock
jmp
cli
stos
rolb
sbb
imul
xchg
xchg
shl
adc
out
les
and
mov
or
jne
inc
mov
inc
lods
jo
call
pop
sbb
inc
clc
rclb
outsl
mov
push
ja
add
data16
mov
pop
and
popw
std
cmpsl
bound
popa
cmp
lahf
xchg
cmovge
loope
mov
lret
sub
xor
fdivrs
jp
lcall
popl
dec
mov
add
mov
ljmp
mov
mov
cmp
jae
test
push
mov
sub
fwait
cmc
mov
pop
mov
stos
rorb
lea
jo
repz
xchg
pop
inc
test
mov
aam
test
in
lea
lcall
dec
nop
popa
push
adc
mov
sbb
ret
loope
sub
xchg
movsl
cld
fstps
xor
or
in
arpl
dec
sbb
pop
push
xchg
mov
subl
mov
cmp
mov
inc
push
mov
inc
ret
inc
data16
fnsave
stc
int
or
push
icebp
enter
sub
mov
sahf
fcomp
mov
mov
shrl
xchg
filds
into
lahf
push
jge
test
add
jmp
aam
dec
ds
movsl
adc
lcall
dec
sbb
mov
imul
add
popl
push
sarl
push
icebp
add
mov
mov
ret
add
mulb
stos
negl
xor
sbb
mov
dec
daa
or
pop
mov
mov
iret
ljmp
mov
loope
push
fcompl
pop
sub
movsb
jne
mov
rol
push
lock
inc
jns
dec
pop
loope
cmp
fcmovu
jge
add
fisubs
in
add
xchg
cmc
or
sub
inc
mov
shll
mov
xchg
js
mov
xor
add
in
hlt
dec
iret
fimull
or
jns
mov
push
pusha
adc
sti
cmp
adc
add
testl
push
ja
sbb
cld
cmpsb
in
or
inc
sti
pop
xchg
fisubl
mov
sbb
insl
jecxz
clc
leave
repnz
pop
leave
out
loope
subb
or
adc
jns
in
xlat
movsb
mov
jnp
and
xchg
clc
xchg
test
adc
sbb
xchg
xlat
sbb
jae
int
popa
pop
sbb
idivl
or
cmp
cmp
popf
and
cmp
clc
je
pop
and
or
cmp
out
dec
scas
mov
arpl
call
dec
and
ret
out
call
mov
out
jnp
sub
cli
push
xchg
cs
pop
mov
incb
mov
lods
je
or
add
adc
cmpsb
mov
sub
lods
xor
hlt
es
inc
jns
out
add
jp
js
js
pop
sbb
push
pushf
rolb
test
sbb
dec
mov
sti
adc
sarl
negl
xchg
enter
adc
sbb
in
inc
mov
cmp
shll
les
mov
inc
jae
mov
sbb
test
pop
mov
jbe
inc
xor
mov
rolb
lods
jae
test
pop
aam
movsb
cmc
pop
cs
fwait
call
popf
mov
lods
jecxz
pop
movsb
jge
jbe
push
lret
sub
icebp
push
sbb
ljmp
push
test
int
sub
stc
icebp
insl
in
cmc
or
icebp
add
inc
pop
aad
test
mov
loope
dec
push
push
cltd
xchg
jne
test
mov
fstps
lret
mov
adc
mov
jns
pop
dec
out
pop
stc
push
imul
cld
and
out
jae
add
dec
or
jbe
pop
mov
sub
dec
or
fsubl
sbb
iret
inc
sbb
mov
pop
loopne
lret
push
add
std
mov
lock
inc
sbb
notl
mov
add
cmp
ljmp
xchg
mov
xchg
dec
sbb
sbb
out
pushf
lcall
repnz
cltd
lock
inc
fnstcw
fdiv
xor
subb
mov
mov
jo
and
filds
rcr
jb
aaa
adc
in
or
sbb
arpl
sub
xchg
lods
mov
es
inc
imul
pop
stos
shll
lret
pop
aam
sub
cwtl
mov
addr16
sbb
pushf
fcoml
jno
stos
mov
je
jae
mov
push
adc
xchg
inc
repz
fadds
pop
dec
push
repz
mov
mov
and
out
insb
xchg
paddsb
mov
cmc
aaa
out
jmp
or
xchg
ss
jae
or
insl
or
mov
cmpsl
mov
dec
insb
jle
leave
fmulp
inc
mov
xor
and
push
cmp
mov
dec
inc
stos
mov
aad
cltd
repnz
imul
cltd
inc
insb
ja
or
dec
test
lock
lret
and
in
mov
mov
jns
insl
xchg
cmp
sub
test
addr16
data16
sbb
leave
mov
cmc
inc
jbe
or
and
push
popf
jmp
push
rcrb
and
mov
cmp
jo
mov
js
rcrb
test
scas
lcall
jmp
loope
mov
push
fisubl
adc
push
cli
push
push
or
adc
popf
pop
int
adc
gs
add
mov
add
mov
lret
or
jmp
mov
dec
icebp
xor
sahf
fcoms
sub
and
cli
les
out
data16
in
xchg
pusha
sub
es
fildl
lods
lods
push
xor
jmp
aas
xor
or
cwtl
fcomip
mov
in
xor
mov
xchg
test
xlat
or
lret
iret
mov
bound
js
shrl
leave
and
xorb
bound
pop
xchg
sub
sub
adc
dec
bound
xchg
add
ljmpw
xchg
lahf
sub
lods
and
or
in
out
inc
xor
adc
insb
mov
cmp
cmp
call
sbbb
jmp
nop
es
sbb
insb
mov
mov
sbb
jl
inc
outsb
cmpl
xlat
jecxz
sub
jle
enter
int
cld
sub
icebp
enter
push
sub
sbb
sbb
cli
jo
jb
sub
adc
aas
mov
and
in
cmp
loop
inc
repz
pop
jbe
loope
mov
inc
mov
jne
pop
sub
decb
int3
dec
mov
pop
lock
ja
fidivl
inc
inc
popa
pop
mov
mov
adc
ja
bound
dec
sub
mov
popf
daa
cmc
rol
and
shr
pusha
mov
xchg
dec
arpl
cmp
aad
xchg
pushf
hlt
jae
loope
dec
xor
or
fisubs
loop
imul
xchg
dec
arpl
mov
pop
push
jns
add
pusha
inc
rclb
mov
mov
subb
ss
sub
jmp
sbb
inc
scas
out
fs
js
jecxz
or
loope
jne
dec
add
cwtl
fildll
int
ds
and
mov
cltd
add
mov
bound
loopne
outsl
ret
or
data16
testb
sub
fdivr
outsb
outsb
xchg
les
divl
push
xchg
xchg
xor
xchg
xor
jbe
cmp
arpl
gs
mov
sbbb
jbe
ss
and
pop
mov
dec
rcll
xchg
jnp
dec
insb
push
adc
and
push
int
dec
mov
mov
xchg
xor
test
inc
jge
fwait
repz
rolb
mov
imul
pop
sub
mov
sarl
add
mov
fs
into
cmp
push
pop
push
enter
push
or
pop
dec
pop
jp
push
jg
push
jbe
mov
xlat
sub
lock
movsb
int3
adc
and
adc
sbb
rorl
sbb
mov
push
std
outsb
sbb
std
sbb
xchg
mov
lcall
inc
lock
in
fsubrp
pop
xor
sub
cwtl
sbb
and
cltd
dec
mov
rolb
push
scas
js
mov
push
fwait
or
fiadds
insl
xchg
sbb
or
push
sbb
adc
sbb
lret
sarl
sbb
mov
leave
mov
mov
cmp
push
inc
imul
int3
jmp
int3
bound
xlat
cmp
addr16
cltd
and
test
leave
shll
mov
jg
ret
pop
call
add
mov
sarl
pushf
ds
scas
push
or
inc
mov
dec
fsubl
cmp
addl
lea
scas
pop
sub
das
test
in
fs
and
fcoms
sub
add
out
xor
or
push
insb
insl
lds
push
inc
rcl
mov
lahf
addr16
mov
mov
pushf
ja
xor
sbb
cmp
jl
aas
add
test
push
dec
movsl
inc
mov
jecxz
fsubrl
leave
push
push
shlb
rcll
sub
dec
cwtl
dec
add
les
scas
mov
js
aam
and
jmp
mov
cmp
popf
add
mov
sbb
cmp
sbb
jge
ljmp
xchg
or
push
cmc
outsb
inc
jo
cld
movsl
in
repz
pop
roll
arpl
cmpsb
pop
sub
test
mov
loopne
in
sarl
fs
mov
sti
xchg
pop
aad
jle
loope
pop
xchg
shr
dec
add
and
mov
les
lock
lea
cltd
mov
ret
push
mov
dec
xor
xlat
sub
xchg
test
inc
cs
cmp
sub
arpl
push
test
ja
mov
ficomps
add
inc
nop
shl
pop
call
push
subl
cmp
pop
movsl
stos
add
sub
push
add
pop
test
scas
fidivs
cld
faddl
xor
out
fs
jno
fnstsw
int
jecxz
cmpsb
push
addr16
divb
insb
test
mov
or
outsb
jl
push
pop
mov
sub
repz
mov
es
or
xlat
cmp
sbb
mov
pop
xor
xchg
mov
and
scas
addr16
in
enter
sub
sub
xor
leave
fdivs
stos
mov
popa
adc
cli
out
cmp
fcmovne
pop
push
mov
mov
sub
jg
jl
jmp
stos
cs
sub
xor
cs
movsl
int3
loope
dec
inc
add
push
push
enter
leave
xor
sbb
addb
or
rolb
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
jmp
test
pop
sahf
andl
je
sub
inc
jl
cmp
sahf
pop
cmp
mov
mov
addb
push
stc
ss
push
push
std
rol
stos
jmp
mov
jmp
movsb
jns
push
add
pop
test
add
test
sbb
xor
dec
int
call
or
xchg
pop
mov
push
or
ss
shrl
add
lret
ret
or
jns
inc
sti
dec
daa
test
pop
shrl
and
and
in
icebp
or
sti
pop
rorb
pop
loopnew
xor
add
roll
sahf
xchg
xor
xchg
ret
xchg
negb
arpl
jg
mov
sahf
mov
sbb
dec
in
dec
inc
sub
jmp
clc
cltd
test
pop
inc
cmpsb
pop
test
inc
push
pop
lds
scas
in
mov
and
xchg
sti
daa
scas
pushf
loope
out
push
movsl
pop
cs
push
fucomi
xlat
stos
repnz
dec
cli
call
fcompl
loop
movsb
aaa
push
pusha
daa
cmp
or
insl
test
mov
inc
dec
dec
xchg
or
into
or
andb
push
pop
ds
fisttpll
jno
or
cmp
add
leave
jb
jle
pushf
lret
adc
aam
in
xor
cmp
mov
out
das
inc
popa
ja
fwait
dec
loopne
loop
rol
dec
aam
push
in
cmp
add
scas
movsb
cmp
pop
repz
cmp
pop
adcb
sbb
fstl
pop
push
push
test
mov
jae
jo
sub
in
mov
fnsave
pusha
popf
mov
outsb
addb
sbb
push
pop
mov
adc
inc
sbb
push
cmp
sbb
dec
lods
cltd
sub
ds
push
cltd
lcall
mov
adc
mov
cmp
fstpt
out
sub
or
lahf
ljmp
js
mov
int
aas
outsl
pop
mov
arpl
js
aaa
xor
xchg
mov
ficompl
mov
mov
jmp
add
pushf
lahf
outsb
push
jnp
sbb
dec
popa
push
scas
cmp
mov
sbb
bound
in
add
sbb
pop
fildl
mov
push
mov
mov
lahf
retw
loope
leave
movsb
into
stos
notb
fninit
mov
xlat
loop
icebp
imul
push
fnstsw
cmp
or
or
fbld
filds
lock
and
push
jle
outsb
shll
popa
sbb
push
cmpsl
mov
shrb
imul
cmp
mov
mov
je
inc
ret
test
mov
ret
sbb
mov
xchg
mov
xchg
adc
xor
fs
and
mov
xor
push
jle
inc
insl
jne
into
iret
add
adc
and
jle
mov
shl
xchg
sarb
fistpl
out
out
gs
out
jne
dec
cld
pop
dec
mov
out
push
mov
fisubl
movsbl
orb
and
cmp
mull
jmp
xchg
jae
out
call
xchg
sub
adc
insl
pop
jbe
les
push
rol
lods
mov
addr16
loope
jnp
jge
loop
sbb
aad
sub
out
mov
incl
andl
cs
jbe
mov
fnsave
inc
inc
mov
xor
outsb
jecxz
xchg
clc
mov
je
fdivl
sbb
xlat
aad
sbb
cmp
andl
sbb
pop
nop
or
lods
bound
out
call
mov
sbb
jnp
aas
in
int
or
mov
repz
loope
jmp
xor
adc
test
mov
jg
and
test
nop
cmp
xor
std
cmp
lret
xchg
add
push
clc
test
dec
movsb
test
jge
shll
testb
daa
test
inc
icebp
cmpsb
test
mov
aad
scas
xor
pop
and
sub
int3
and
out
cmp
cmp
jmp
scas
sbb
xorl
sub
xchg
lods
dec
jmp
test
xor
dec
daa
sub
sub
lea
popa
add
es
or
or
insb
out
push
call
fldt
dec
pop
test
jle
sbb
dec
repnz
fstpt
iret
mov
mov
dec
icebp
orb
hlt
mov
jb
aam
xchg
sbb
cmp
xor
mov
lea
das
icebp
in
pop
movsb
imul
add
adc
inc
push
add
sbb
shrl
inc
or
fidivl
pop
fisttpl
dec
rol
jge
xchg
cmpl
push
cmp
ja
pusha
mov
bound
out
push
or
imul
inc
shl
pushf
repnz
dec
mov
outsb
arpl
pop
jmp
lds
push
in
xchg
push
scas
ja
movb
outsb
xor
xchg
inc
mov
jle
mov
push
push
mov
enter
arpl
xlat
jns
in
stos
popf
adc
xchg
divl
push
movsl
xchg
lods
or
adc
xchg
sbb
call
push
rorl
jnp
xchg
outsb
jle
and
out
adc
dec
fsubrs
lods
in
cmpsb
outsl
xor
test
ja
xchg
dec
sarb
popf
cwtl
inc
movsl
movsl
popf
cmp
aaa
inc
fdivrp
mov
push
loop
lock
pop
hlt
mov
int
or
out
in
pushf
ret
mov
mov
das
int
jle
ror
push
popa
setne
in
and
jge
jle
out
and
push
mov
mov
in
arpl
cmp
fmuls
shll
call
xchg
xchg
mov
lds
xor
mov
push
dec
mov
xchg
nopl
xchg
mov
cmp
stc
repz
jnp
out
sbb
fst
cltd
loopne
sbbl
fstps
jns
cmp
mov
jbe
rcr
cmc
or
push
ja
dec
mov
lods
sbb
cmp
jnp
int
mov
pshufw
popa
stos
dec
fsubr
mov
dec
push
adc
bound
loope
xchg
inc
rorl
pop
scas
repnz
insb
mov
rorb
jp
sahf
cmp
cs
cmc
add
pop
jno
mov
pop
fimull
lcall
mov
jns
fimull
fldl
cmc
and
imul
cmp
fwait
mov
sub
sub
sbb
fs
gs
cmp
inc
test
rcr
lret
add
cmp
push
gs
les
cltd
dec
iret
mov
test
gs
or
lock
divl
cli
xor
push
daa
sub
jmp
sbb
push
inc
ss
fwait
ud1
mov
out
add
push
jg
sbb
sbb
je
and
das
dec
pop
test
insl
jp
pop
repz
pop
aad
add
pop
push
loope
pop
push
push
and
mov
mov
lods
or
add
jge
andl
inc
xchg
adc
roll
cld
and
filds
cmp
loop
test
loopne
jb
scas
shrl
out
xor
jno
out
fbstp
iret
mov
mov
imul
pushf
and
cltd
gs
out
xchg
test
fbld
pop
mov
fcmovnu
adc
popf
cmp
xor
cwtl
or
jmp
ds
fsubl
sbb
mov
inc
sub
mov
mov
xor
dec
pop
pop
mov
mov
mov
jo
pop
mov
fisubl
ljmp
jg
ss
push
add
adc
xchg
inc
sbb
sbb
pop
in
xor
aad
dec
aaa
xor
lcall
dec
movsl
or
jl
lock
mov
jno
fidivs
mov
sub
mov
int3
ss
mov
stos
ja
sub
fs
dec
push
sub
lock
xlat
xchg
cmp
hlt
xchg
test
inc
cli
xor
lea
test
dec
cmp
xchg
add
lret
test
aam
out
outsb
cld
xor
mov
psllq
imul
cmp
push
add
cmp
cld
lods
loop
arpl
xchg
push
iret
aaa
mov
sub
nop
add
mov
mov
push
jle
test
outsb
mov
cmpsl
daa
aad
xchg
and
fldcw
inc
ret
cmp
add
mov
jp
lret
popf
rcl
inc
jle
rcll
lea
jnp
xor
aad
mov
adc
xchg
push
or
xor
adc
test
stos
cmp
leave
xchg
shrb
es
pop
fisttpll
adc
ljmp
mov
aam
or
cmp
sbb
test
bound
xchg
enter
xor
shlb
cmc
push
mov
mov
sub
cmp
ud1
fdivs
sub
sub
jo
mov
jnp
jo
jle
dec
cmpsb
lds
rcl
test
ret
icebp
stos
out
hlt
pop
popf
in
xchg
sti
aas
dec
jle
mov
and
xor
lcall
inc
mov
pusha
icebp
shrb
pop
pop
cmp
fildl
xlat
loope
push
pop
xchg
xchg
xor
inc
mov
ret
int3
and
cmp
inc
add
pop
data16
lods
roll
out
stos
dec
xchg
and
sbb
adc
aaa
cmp
sbb
push
adc
pop
aaa
pop
sarb
jbe
jo
add
xchg
sub
shlb
js
push
or
lea
ret
mov
adc
dec
fcoml
sub
loop
pop
add
imul
jnp
mov
or
cmp
outsl
and
mov
andl
adc
sbb
mov
xlat
fwait
ror
aas
xchg
addr16
cmpsl
sbb
jl
cmpsb
jl
nop
push
aas
loop
mov
testb
aas
out
iret
xor
sbb
out
dec
adc
incb
push
pop
inc
xor
push
cmpsb
out
and
push
ja
xor
mov
inc
xchg
cmp
adc
push
stos
lahf
sarl
mov
notb
pop
inc
mov
clc
repnz
cmp
repz
jnp
adc
lods
fdivs
out
hlt
pop
nopl
pop
xchg
cmpsl
mov
lds
inc
mov
push
add
iret
jl
push
lret
push
jns
mov
pop
insl
arpl
lret
sub
mov
repnz
imul
ss
repnz
push
cli
add
sub
xchg
xchg
mov
std
mov
and
ret
incb
stos
jle
outsb
aam
mov
push
fldt
mov
stos
mov
xchg
jg
xor
enter
pushf
mov
sbb
mov
dec
ja
hlt
scas
sti
mov
inc
pop
xlat
nop
sub
push
dec
adc
mov
scas
arpl
mov
add
cmp
orps
in
inc
fxch
loop
push
push
mov
sub
leave
add
das
scas
and
lods
notl
mov
ljmp
mov
cld
pop
or
out
inc
mov
cmp
aaa
popl
sbb
popa
jg
pusha
dec
sbb
subb
xor
jle
xlat
sbb
and
mov
push
stc
mov
leave
xchg
aam
lret
xchg
cwtl
and
sbb
jle
jb
dec
mov
inc
into
mov
lea
movsl
stos
push
and
fnstcw
iret
jmp
or
stos
outsl
pop
xor
test
ds
popa
jno
test
aas
pop
popa
push
inc
mov
and
dec
lods
dec
in
test
adc
pop
ljmp
test
out
idiv
dec
sub
sub
lods
movsb
and
mov
lahf
sarl
fisubs
jne
sbb
xchg
jp
sbbl
clc
shl
inc
in
sub
clc
sbb
adc
loop
addr16
clc
cmova
aad
adc
je
mov
mov
scas
xorb
enter
mov
jge
cli
lret
xchg
xor
sahf
cmp
ret
or
dec
xor
adc
out
ss
cmp
pop
out
sbb
mov
in
or
cli
out
std
cmp
xor
fstl
xor
das
fwait
sbb
iret
xlat
cltd
or
push
pop
dec
inc
and
cltd
mov
mov
mov
call
std
xor
repnz
push
jecxz
mov
xchg
cmpsb
sbb
outsl
iret
sbb
adc
cwtl
xor
xchg
mov
stos
stos
dec
cmp
shrb
mov
stc
divl
xor
push
hlt
shrb
cmp
idivb
mov
mov
adc
adc
stc
mov
outsb
add
out
icebp
pushf
int
mov
add
mov
add
shrl
cli
sbb
into
jbe
in
movsl
pop
xlat
ljmp
push
ds
dec
daa
std
xor
js
setne
out
je
mov
jle
xchg
mov
outsl
add
arpl
outsl
cmc
push
or
icebp
popf
bound
ja
ss
push
pop
rcrb
xchg
pop
xor
mov
ficomps
push
cwtl
push
ds
sbb
mov
mov
std
sti
jp
mov
daa
fstpl
mov
mulb
push
jno
test
sbb
scas
mov
mov
pushf
and
dec
jl
lret
ss
xor
aam
sub
int3
jnp
jmp
pop
jno
addr16
dec
les
into
shlb
test
and
out
in
xchg
adc
into
push
xor
loope
adc
scas
and
mov
in
pop
and
pop
inc
pop
jae
or
test
sub
and
in
or
sbb
movsb
aad
mov
jne
xchg
lods
jecxz
mov
jne
mov
addb
test
jl
pop
sbb
jb
fcmovb
xor
outsb
or
push
out
xor
ret
inc
fdivrl
and
jne
mov
xor
loop
cmp
cmp
jnp
adc
fcmovnbe
notl
and
add
lcall
push
shlb
pushf
inc
in
adc
call
imul
mov
jne
adc
mov
mov
push
mov
xchg
pop
pushf
lock
cmp
mov
in
outsl
push
cmpl
fadds
push
das
mov
mov
in
inc
scas
xor
gs
lds
inc
xor
or
mov
mov
push
je
mov
cli
sbb
insl
cmp
psubsw
cmp
mov
stos
es
loopne
push
pop
xchg
movsl
sbb
mov
insl
aad
mov
sbbb
bound
mov
xor
lahf
aas
mov
ret
dec
xchg
adc
test
icebp
hlt
mov
and
inc
pusha
push
cli
sti
movsb
pop
lahf
add
dec
imul
adc
int3
mov
jnp
mov
movsb
cmc
sahf
mov
das
mov
push
out
add
mov
das
in
sub
pop
add
mov
jno
jmp
into
pop
and
je
cmp
int
aam
scas
inc
fistpl
stos
xor
int
addr16
dec
dec
pop
xchg
or
fsts
imul
in
test
push
dec
jmp
ss
stc
add
xor
bound
pop
arpl
inc
lods
jge
mov
aas
mov
outsb
in
push
sub
dec
push
sahf
aas
xchg
push
jb
mov
arpl
ret
push
jmp
shl
sub
ret
xchg
dec
nop
ds
inc
jecxz
outsl
je
movsb
addr16
dec
jno
and
dec
sbb
pop
inc
or
xchg
orl
mov
cmpsl
cli
jae
add
test
gs
push
xor
and
xchg
push
repnz
dec
orb
pop
xchg
push
push
mov
or
fsubs
shrl
xor
inc
stc
scas
or
and
jg
mov
stos
int
inc
int
outsb
adc
pop
shlb
add
out
movsl
bound
xchg
jmp
imul
lds
fistps
pushf
mov
mov
push
loope
testb
sbb
add
lahf
jne
fisttps
test
sub
push
cmp
fdivs
das
stos
ss
sub
andb
cmp
xlat
mov
push
mov
push
enter
mov
fadd
test
xchg
nop
imulb
iret
enter
mov
inc
enter
mov
mov
cmp
dec
ds
hlt
in
pop
fs
pop
nop
pop
incb
sbb
xor
mov
addr16
shll
ds
push
adc
divb
adc
sbb
pop
mov
mov
mov
fsubp
nop
aam
mov
test
out
js
test
add
dec
lds
mov
js
cmp
rclb
xchg
jne
jmp
daa
into
cmp
jg
cmc
sbbl
jl
idiv
or
mov
inc
jle
dec
sub
pop
xchg
mov
loop
inc
push
xchg
test
mov
mov
arpl
push
or
data16
fwait
in
test
insb
mov
js
mov
add
add
jmp
sarb
mov
lds
test
aaa
sqrtps
imul
aaa
jno
fadd
dec
jmp
in
popa
and
addb
xchg
or
mov
mov
stc
adc
inc
lcall
inc
cld
ljmp
std
mov
scas
fs
icebp
je
pop
sub
xor
lcall
addr16
push
or
sub
fistps
xor
sub
addl
stc
sub
mov
mov
arpl
das
inc
hlt
in
das
mov
cltd
in
inc
lds
and
int3
scas
mov
mov
sti
std
xor
mov
cmpl
add
pop
mov
mov
punpckhbw
mov
cmp
rorl
lcall
stos
and
test
or
jno
mov
push
aaa
testb
adc
jecxz
popa
jo
mov
lock
fs
lahf
push
lods
xchg
lahf
xchg
add
fwait
int
inc
stos
xchg
aam
adc
rcrl
xchg
adc
sub
dec
sbb
in
insl
mov
lahf
sti
lahf
insb
cmc
lds
fsubrl
inc
lods
cli
push
cld
pop
mov
cmp
shrb
adcl
mov
repz
arpl
inc
je
dec
or
adcl
cltd
negb
mov
in
stos
jb
fildll
loope
push
mov
push
mov
cmp
cmp
adc
jb
mov
lds
outsl
mov
rclb
sub
stc
fwait
lds
cmp
pop
sub
add
push
cmpsl
lock
dec
in
cmp
xchg
enter
xchg
jecxz
inc
and
cmpsl
sbb
pop
lahf
loop
cmpsb
push
fwait
ror
cmp
cltd
mov
repz
jle
add
insb
stc
fcmove
mov
push
hlt
dec
lods
push
mov
mov
xor
loop
movsb
orb
push
adc
xchg
and
xchg
lods
iret
andb
mov
popf
jb
ret
inc
loopne
sub
scas
movsl
in
adc
scas
and
jmp
fsubl
popf
std
add
xchg
xchg
jae
sub
sbb
jnp
adc
jmp
or
ljmp
adc
add
mov
sub
repnz
push
and
pop
mov
jb
jg
fldenv
mov
in
mov
scas
and
shrl
cld
push
inc
lods
mov
pop
gs
mov
subl
xor
mov
insl
sbb
mov
mov
into
lock
mov
xchg
push
mov
adc
orl
dec
ret
push
inc
pop
sahf
sub
mov
movsb
dec
mov
jmp
add
das
jl
movzbl
loop
add
jne
dec
xor
pop
test
aam
sub
andl
sub
push
cld
aaa
add
pusha
iret
fs
shl
mov
jno
mov
push
stos
js
std
les
cmpsb
mov
jl
pushl
mov
addr16
inc
sbb
mov
xor
dec
pushf
pop
addr16
stc
lock
lcall
xor
shr
cmp
shll
adc
xor
jp
popf
push
cld
cmpsl
xchg
icebp
add
lret
into
clc
cli
push
push
inc
rolb
xor
dec
add
mov
enter
pop
jmp
sbb
les
cs
xchg
icebp
adc
out
imul
arpl
sbb
xchg
nop
movsb
addl
and
add
inc
les
xchg
adc
pop
adc
je
pop
insb
ds
cmc
push
pop
inc
add
adc
sbb
adc
rcrl
sahf
fst
cs
out
and
and
xor
or
test
push
add
sti
outsb
mov
adc
cmp
sbb
pop
cltd
test
stos
sub
bound
movl
faddl
mov
stos
sbb
pop
icebp
test
ss
aad
dec
mov
fsts
stos
xchg
jp
sarb
mov
cmp
sub
push
fidivrs
lds
loope
int
aad
xor
data16
mov
push
jne
arpl
clc
push
inc
mov
jno
rcrb
inc
aam
test
mov
pop
pop
in
add
loope
lock
pusha
rcr
jbe
xchg
jmp
inc
sub
cmp
out
rclb
testl
enter
cltd
in
out
mov
iret
ja
dec
add
mov
popf
iret
int3
andb
xchg
les
add
imul
data16
in
sub
and
xchg
int3
and
or
outsb
ds
add
dec
mov
mov
pop
roll
pop
test
or
out
jmp
and
xor
loope
repnz
gs
adc
sbb
stc
daa
aam
nop
push
push
fdivs
dec
push
jb
sti
movsl
pushf
ds
pop
inc
sbb
mov
mov
and
pop
adcb
popa
jbe
in
cwtl
and
pop
pusha
ret
out
imul
jns
pop
jae
in
js
repz
mov
clc
in
or
cltd
push
lahf
lret
mov
dec
cwtl
adc
ja
mov
ret
je
push
add
pop
fcmovb
jbe
in
cmp
xchg
lret
bnd
in
imul
sbb
addr16
mov
push
stos
movsl
inc
out
cmp
nop
ss
mov
and
sub
push
jmp
fstl
push
ds
push
sub
inc
push
mov
adcl
adcl
or
jo
mov
call
pop
jne
movsl
cmp
mov
pop
and
jae
cmp
push
int
mov
mov
fdivp
jmp
icebp
push
xor
les
out
sbb
sub
dec
mov
shll
mov
mov
aas
iret
sbb
in
xchg
push
xchg
pop
call
or
add
jae
fcmovnbe
clc
push
je
sub
mov
loop
mov
lea
add
or
inc
inc
in
shl
fidivl
sbb
fldenv
inc
test
fidivl
decb
jl
xchg
mov
imul
aaa
mov
pop
lods
subl
sbbl
jp
das
stc
add
mov
nop
jge
push
std
aaa
and
imul
dec
dec
arpl
pop
out
xorl
into
jns
pusha
sub
repz
xor
mov
andl
into
mov
cmp
ret
lock
inc
push
stos
xlat
xor
mov
dec
pop
pop
repz
jle
sub
jge
ja
lock
daa
popf
mov
xchg
mov
jnp
add
sub
and
outsb
jle
mov
out
shlb
or
sahf
leave
arpl
or
in
xor
push
and
pushf
dec
pop
add
mov
daa
jns
pop
and
dec
insl
mov
ret
incl
xchg
pop
and
dec
lahf
sti
adc
push
or
scas
push
inc
fs
add
pop
fbstp
movsb
sbb
fiadds
cmpb
scas
mov
out
outsl
cmp
xchg
cmp
cs
insl
popf
push
repz
shr
jmp
xor
sub
mov
push
loop
shrl
pop
mov
movsb
movsl
loope
sub
stc
pop
pusha
push
or
out
mov
push
inc
sub
shr
sarl
lret
in
mov
push
imul
test
or
ds
lea
mov
or
pop
push
xlat
mov
sub
sbb
sub
out
pushf
dec
fst
sub
mov
adc
dec
mov
sbb
adc
sarl
out
les
popa
stos
sti
adc
mov
push
in
in
hlt
dec
lea
xchg
pushf
adc
aam
stc
dec
cltd
push
cmc
fdivl
push
or
push
fwait
add
sub
lcall
jne
or
sbb
sbb
je
mov
das
shlb
lret
shlb
std
aam
in
xchg
dec
repnz
mov
inc
mov
scas
cmp
gs
lods
lods
outsb
push
imul
jg
pop
into
mov
daa
fsubrl
xchg
les
push
xor
arpl
repnz
nop
enter
flds
cmove
pop
push
loopne
mov
push
dec
sar
or
bound
xchg
or
in
popf
cmp
inc
sti
gs
sub
addr16
ret
lds
test
xor
mov
daa
inc
adcb
js
xchg
lock
xchg
scas
cmp
nop
scas
mov
icebp
loope
daa
imul
sti
dec
mov
inc
xlat
cmp
cld
push
in
sti
dec
adc
mov
mov
out
gs
cmp
cld
nop
or
cmp
mov
inc
ss
ss
pushf
jo
jmp
push
ret
mov
cli
movsl
aad
xchg
ds
fisttpl
sub
nop
xchg
push
fsub
lods
pop
stos
or
test
push
mov
mov
lock
imul
daa
cmp
pop
stos
test
and
aas
fsubr
cmc
aam
test
xor
inc
movsl
enter
cmpsb
sub
rolb
dec
mov
out
int3
sub
xlat
out
cmpsb
sbb
jnp
inc
mov
dec
mov
cmc
sarl
rcr
pop
pop
push
mov
inc
cmp
pusha
xchg
scas
dec
jle
lcall
leave
test
xchg
test
in
and
jne
in
call
mov
in
out
or
mov
arpl
pop
sub
enter
adcl
in
lock
sub
loopne
fnstcw
les
or
add
fwait
jnp
push
aam
aam
in
inc
loopne
and
pop
mov
test
sbb
mov
push
iret
das
pop
das
cmp
or
std
mov
frstor
mov
js
xchg
or
push
pop
mov
push
or
imul
dec
jmp
mov
xchg
jns
fadds
mov
lahf
aaa
test
roll
sbb
xor
test
aaa
gs
out
iret
outsb
mov
out
inc
stos
sub
lds
ss
les
mov
call
je
sahf
ljmp
inc
shrl
out
jb
into
hlt
stc
xchg
int
loopne
call
movsb
pop
jle
loopne
lahf
repz
leave
imul
pusha
mov
xchg
mov
fs
xor
mov
sub
es
dec
test
push
mov
mov
xor
addl
add
lock
daa
cmp
notl
mov
loop
repz
lock
popa
mov
xor
das
imul
scas
les
popa
movsb
jl
out
push
mov
jno
out
mov
dec
xor
cli
dec
icebp
insb
dec
and
arpl
std
nop
fstpl
and
inc
mov
and
popf
cmp
xchg
les
and
cmp
jno
xor
mov
mov
fbstp
pop
push
fld
inc
jle
sub
cli
imul
push
push
jmp
fimull
outsb
cwtl
bound
push
leave
push
filds
dec
jnp
sti
and
addr16
fwait
lahf
divl
push
or
sub
mov
xor
sub
adc
cmp
sub
loop
and
fstl
mov
shl
xor
rclb
push
mov
xchg
aas
outsb
jns
into
cmc
incl
sub
sbb
loop
xor
inc
or
push
xchg
scas
icebp
sbb
xor
sbb
call
cmp
pushf
xchg
aas
les
mov
mov
aad
jp
xchg
ljmp
xchg
jl
cmpsb
or
inc
cmp
push
jno
push
cmpsl
repz
xor
mov
pop
mov
leave
inc
adc
repz
add
xor
in
in
rclb
arpl
gs
imul
test
push
sti
aaa
lret
cmp
movsl
insb
xchg
mov
jb
fildl
mov
lds
xchg
pop
xor
inc
outsb
lock
cmp
push
shll
js
call
sub
test
lock
xchg
fs
xchg
cld
in
inc
lret
adc
imul
faddl
mov
jnp
scas
ljmp
cmp
jg
add
mov
mov
dec
xor
sub
das
shrb
sub
dec
fsubrp
cld
pop
jp
cmpsl
push
mov
testl
test
mov
inc
movsb
jns
sub
sbb
ja
std
stos
aad
xor
push
mov
xchg
cwtl
inc
clc
push
fdivr
popa
imul
daa
sbb
push
or
sub
clc
pushf
lahf
gs
cmpsl
movsb
rol
insl
add
pusha
push
pop
scas
repz
aas
and
out
sub
popf
dec
popf
mov
add
cmp
shrl
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
jmp
adc
jl
mov
bound
or
in
sbb
addl
movsl
push
ljmp
sub
ljmp
fsts
enter
shrl
popa
cli
push
jmp
mov
cmp
dec
or
dec
and
daa
push
jge
lcall
hlt
and
je
in
insl
outsl
and
repnz
dec
jno
adc
roll
daa
arpl
jnp
mov
push
fdivl
inc
out
dec
push
sbb
and
mov
pop
idiv
xchg
adc
loopne,pt
stos
push
fsubrs
cltd
cmpsl
dec
sar
int3
mov
jg
dec
aaa
scas
cmpsb
lret
push
jae
not
jo
cltd
mov
sub
loop
out
xor
mov
imul
into
pushf
inc
inc
gs
scas
dec
push
push
adc
jnp
shr
jnp
xor
or
in
movb
dec
and
rorl
mov
js
lret
arpl
fldenv
in
mov
dec
jl
pop
ja
sbb
pushf
aaa
std
mov
sub
loop
mov
popa
pop
adc
test
test
adc
es
rcrl
scas
lock
cmpsb
test
dec
inc
rorl
sahf
int
in
insb
sub
xlat
push
and
and
push
add
xchg
xchg
push
nop
in
jno
shll
pushl
leave
push
cmp
cmpsb
icebp
popa
les
jmp
lods
movsb
shrb
jbe
sub
jg
ss
out
jo
push
jl
push
popf
mov
jp
leave
rcl
cwtl
test
out
sbb
push
fldenv
mov
xchg
lods
xlat
adc
ljmp
pop
xchg
add
shl
inc
les
test
or
adc
xchg
push
sub
mov
adc
xchg
mov
cmp
adc
xor
ret
faddl
push
push
push
dec
cmc
adc
mov
pushf
andb
xchg
outsb
outsl
rclb
stos
scas
mov
cmpb
mov
lods
rorb
sub
into
lahf
and
cli
outsb
repz
mov
pop
stc
and
lahf
mul
adc
int
scas
and
or
mov
mov
xor
loope
rolb
inc
sub
in
fiadds
jmp
test
xchg
ljmp
insb
push
fdivrs
push
and
insb
shrb
mov
jge
mov
mov
fstpt
sub
sbb
jle
mov
mov
nop
sub
cld
nop
pop
and
cmpsl
dec
xchg
fwait
sbb
inc
or
cmp
call
pop
hlt
jl
cltd
jmp
pslld
ja
sub
inc
lret
and
bswap
clc
imull
inc
sti
sub
xor
mov
shll
in
js
push
movsl
mov
dec
or
mov
rcrb
mov
sbb
xchg
fsubr
push
pop
bound
sbb
adc
sbbl
jno
dec
cmp
xor
add
cmp
adc
or
cmp
das
push
jl
cmc
cld
push
lret
lahf
data16
jno
cli
fadds
ja
inc
repz
jbe
dec
mov
push
sti
jecxz
sbb
icebp
dec
pop
cld
ds
add
jae
jno
xchg
imul
sbb
pop
int3
jle
bts
xchg
mov
data16
es
lock
nop
xchg
cmp
push
lods
mov
int
pop
sbb
pop
pop
cmp
lods
mov
mov
xchg
jns
out
lds
arpl
rcr
add
mov
push
aaa
lret
push
fdivl
shrb
shlb
mov
or
pop
mov
imul
jecxz
jae
mov
mov
and
mov
push
push
xchg
pushf
lock
sbb
mov
js
mov
push
pop
iret
jle
outsl
cmp
pop
mov
sbb
adc
fdivrp
adc
dec
in
xchg
sub
enter
mov
je
and
sbb
test
pop
or
lret
shll
dec
push
iret
mov
mov
aas
xor
insb
in
lret
adc
push
movsb
push
std
test
jg
rdtsc
cmpxchg
xchg
ljmp
inc
inc
lods
mov
push
pop
mov
jb
and
pop
inc
in
and
lock
mov
fadds
cs
test
jno
fwait
and
jno
push
js
aam
jns
out
mov
mov
inc
lret
out
cmc
aad
outsb
sbb
in
sbb
les
arpl
mov
cmp
push
or
mov
clc
sub
xor
fwait
fs
push
fildll
sub
insl
cmpsl
xor
jne
mov
sub
xchg
push
dec
scas
or
push
xor
mov
fbld
into
popa
push
mov
test
out
push
out
or
jb
call
push
js
add
inc
pop
mov
imul
ds
vmread
sbb
insb
mov
and
movsb
sahf
adc
inc
lret
adc
bound
dec
js
ljmp
sarb
push
pushf
xchg
orl
or
fwait
sbb
sbb
sti
nop/reserved
or
into
mov
loop
ficoml
test
push
mov
fwait
cmc
scas
jg
fsub
add
xor
outsl
and
inc
adc
sbb
jae
xchg
fwait
repnz
or
in
imul
push
iret
xchg
sub
hlt
imul
sub
clc
jo
push
gs
xor
xor
push
rcrb
push
and
jne
adc
dec
mov
jge
fdiv
dec
dec
mov
xor
cs
cmpl
mov
and
jae
lret
sub
jmp
dec
xor
sub
cwtl
cmpsb
clc
xchg
xchg
ds
negl
mov
cmp
popa
test
and
jge
aaa
inc
bound
sbb
sbb
pusha
ret
jecxz
adc
pop
enter
cs
push
mov
das
jne
pop
push
sbb
std
sbb
or
call
incb
inc
dec
cmp
test
pop
cltd
jb
jnp
jb
mov
rcrl
xor
push
ret
sbb
add
push
sbb
mov
pop
ror
das
push
loop
sub
scas
hlt
xchg
jge
or
lds
notl
stc
test
pop
dec
sbb
inc
xlat
in
mov
jl
inc
xor
cmp
pop
ret
xor
lods
push
jmp
sahf
pop
lcall
fmul
add
ficomps
sub
nop
jl
mov
popf
adc
inc
mov
ss
testl
outsb
call
ret
push
jle
rcrl
jbe
and
cmp
jp
sti
fadds
mov
test
adc
inc
popa
outsb
test
test
shrl
cmp
push
lret
rcll
clc
scas
sub
addr16
push
clc
adc
in
test
fidivl
jmp
mov
mov
repnz
out
mov
adc
and
data16
xor
aaa
negl
pop
mov
popa
hlt
test
cs
mov
aaa
inc
fwait
out
push
sahf
xchg
das
sbb
repnz
fwait
jnp
scas
mov
or
mov
xchg
push
sahf
shl
mov
pop
push
ret
push
out
mov
lods
aam
popa
in
mov
lods
xor
cmpsb
and
std
xor
pusha
out
cld
sub
jl
mov
dec
mov
sub
gs
jbe
mov
jecxz
push
cmpsl
push
clc
mov
push
push
insb
xchg
aam
int
mov
sub
inc
das
adc
sbb
push
scas
je
decl
popa
push
ja
cs
push
int
mov
jae
dec
sbb
inc
ret
test
jle
out
lret
jnp
xor
sub
adc
scas
adc
repz
aam
mov
punpckhwd
mov
mov
adc
les
sbb
not
adc
jmp
jp
inc
fists
xor
cmpsl
cmp
mov
call
xchg
add
push
pop
aaa
dec
jg
adc
cmp
test
andb
movb
push
pop
sbb
push
es
inc
outsl
sbb
xchg
icebp
adc
pop
xchg
enter
mov
pop
lds
aam
mov
mov
or
repnz
movsl
sub
push
outsb
mul
push
gs
add
sbb
cld
adc
mov
mov
and
or
dec
loop
nop
ss
out
cmp
xchg
call
mov
sbb
ror
mov
pop
aas
pop
xor
scas
jmp
loop
xchg
dec
test
cmp
pop
and
cwtl
fwait
inc
fistps
mov
pop
mov
or
push
cmp
repnz
outsb
adc
mov
jbe
mov
lcall
mov
push
mov
mov
mov
iret
out
lret
dec
mov
fdivrp
cli
pop
je
cmp
mov
gs
cltd
mov
dec
or
jecxz
imulb
jnp
add
adc
sbb
out
cmp
mov
insl
add
push
mov
adc
xchg
mov
lds
lods
call
mul
or
leave
mov
fwait
mov
mull
daa
xlat
mov
shlb
mov
or
xor
int3
hlt
testb
ret
fnsave
ret
push
mov
xchg
mov
imul
mov
shl
and
xor
pop
jne
cmpl
lock
scas
pop
nop
lahf
lret
add
fwait
xor
mull
ljmp
movsb
sub
in
shrl
push
test
in
inc
inc
xchg
cmc
jmp
repz
into
test
jg
int
rolb
rcrb
jmp
lds
repz
sub
add
and
daa
sti
adcb
or
int3
xchg
stos
pop
inc
jp
fcompl
sbb
adc
stos
dec
cmp
and
icebp
push
xor
in
adc
sbb
adc
mov
push
fdiv
in
shrl
xor
mov
std
and
lods
popa
and
or
xor
xchg
hlt
lahf
sarl
and
sbb
pop
rcrl
xchg
adc
and
pop
loopne
pushf
cltd
mov
inc
xor
sub
sti
mov
adc
dec
cwtl
push
sarb
out
cs
dec
adc
in
bsf
in
lds
sub
sub
xor
cli
test
push
sub
mov
pop
inc
jp
repz
push
filds
lcall
xor
xchg
jl
cmc
pop
and
adc
or
mov
lret
mov
fildll
push
lret
push
or
fisubl
leave
insl
daa
push
andb
enter
out
js
xchg
out
cmp
mov
xor
mov
mov
and
cmp
xor
stos
push
cltd
pop
mov
out
sub
je
mov
mov
out
lcall
stos
xor
mov
insb
inc
jno
mov
jne
xchg
popa
and
cld
xlat
mov
and
in
pusha
cld
cld
inc
jnp
xlat
add
push
add
adc
popa
fisubl
dec
sbb
xchg
das
movsb
js
pop
push
mov
popf
mov
xchg
aad
mov
addb
out
lea
lods
mov
pop
pop
jne
push
xlat
cmp
fidivl
lea
cmp
lcall
pop
sti
and
sbb
and
fwait
insl
cli
sbb
lcall
push
frstor
adc
cmp
jo
lret
lods
add
push
jns
faddp
and
popf
test
jne
std
and
repz
popa
jge
xor
xor
sub
jbe
in
adc
mov
jl
shrl
cmp
enter
les
pop
js
in
lret
mov
adc
jae
rcrl
sbb
jg
and
sub
add
lods
arpl
jg
stos
orb
data16
andb
pop
push
ss
push
jg
jle
loopne
sub
cmp
fsub
xchg
test
ret
push
les
sbb
lahf
mov
lds
insb
xchg
lea
filds
adc
out
sub
insl
mov
mov
in
test
xlat
push
shll
sbb
mull
mov
clc
cmp
xchg
in
push
aam
sti
aam
push
movsl
push
rolb
mov
test
cwtl
jns
sbb
mov
adc
mov
add
mov
xor
fiadds
imul
ds
cmp
add
xchg
xor
neg
out
pop
addr16
dec
mov
push
or
sub
dec
adc
xor
scas
pop
jecxz
fidivl
in
and
call
rolb
push
adc
imul
mov
dec
push
xchg
xor
and
dec
sbb
add
loopne
bound
mov
xchg
mov
repz
xchg
aam
sbb
test
je
inc
add
mov
jno
icebp
mov
mov
and
mov
pusha
pop
sti
outsb
jmp
scas
push
hlt
icebp
mov
pusha
mov
push
pop
jl
mov
stc
sub
xchg
popf
sbb
in
ret
adc
jle
inc
fisubrl
xor
arpl
sub
jmp
adc
stc
xor
dec
scas
xor
sub
idiv
and
jmp
mov
sbb
adc
iret
aad
insb
mov
push
sub
or
hlt
mov
jns
dec
loop
sub
stos
jae
pop
in
pop
mov
mov
adc
pop
fldl
push
sbb
mov
dec
mov
mov
lods
mov
fdivrs
push
addr16
adc
hlt
mov
rcrb
enter
xlat
fnsave
fdivrp
pop
and
add
xchg
push
in
dec
out
adc
xor
mov
shl
sub
fidivrs
push
les
in
out
and
aaa
and
jns
imul
push
outsb
inc
bound
cs
mov
add
int
xor
or
enter
negb
xchg
shlb
jo
aad
cmp
call
outsb
cs
imul
test
jnp
xacquire
cmc
xchg
outsl
pop
mov
test
inc
loope
fadd
test
fisubrs
ds
jo
add
pusha
movsb
movsb
xchg
mulb
jp
dec
dec
mov
cmc
jo
fidivl
out
inc
jae
dec
mov
sbb
lds
or
shr
and
movsb
mov
outsl
outsl
jg
sub
jno
mov
adc
jge
sbb
sub
mov
or
or
cmc
push
mov
data16
push
mov
push
add
cmp
lds
jns
cld
repz
add
fidivrl
idivl
pop
pop
dec
inc
push
in
aam
push
es
push
nop
stos
iret
mov
aam
js
sbb
jne
or
test
movd
xchg
mov
dec
lret
adc
testb
pusha
cmc
or
pop
pop
sbb
pop
movsb
jnp
and
call
inc
jmp
call
aam
leave
push
movsl
add
jns
aad
ret
cmp
add
in
mov
sbb
je
mov
add
inc
pop
and
movsl
mov
xor
jecxz
mov
adc
sub
push
adc
pop
dec
mov
jecxz
mov
sub
cld
sbb
ss
push
pop
push
mov
xor
popa
mov
push
in
push
ljmp
push
push
mov
in
xor
inc
add
lds
inc
es
push
imulb
push
rcr
sbbb
into
mulps
int
sub
cmpsb
dec
cmp
xchg
stc
adc
xor
xchg
cmc
stc
repz
dec
or
xor
dec
in
idivl
dec
jmp
popa
jae
jecxz
cltd
or
popa
arpl
inc
add
xchg
cmp
and
adc
mov
arpl
pop
ds
fs
push
addr16
push
lock
test
ret
ficomps
cmp
notl
or
and
loopne
cs
icebp
out
mov
sbb
mov
test
mov
cmp
hlt
js
aam
mov
loopne
jecxz
int
test
mov
testl
push
sub
sbb
in
std
fprem
pop
dec
jae
mov
pusha
push
jb
push
sbb
negb
jbe
lds
inc
cmpsb
jge
stos
incl
mov
push
loope
jg
cmp
mov
pop
clc
push
xor
pop
shll
les
sbb
jg
mov
cwtl
cs
and
pusha
push
mov
in
dec
jnp
pop
mov
bound
mov
push
cli
jne
xor
repz
sub
lds
addb
movsl
mov
adc
in
add
jle
adc
bound
or
scas
push
jg
mov
pop
lcall
jl
and
sub
mov
popf
push
or
stos
fwait
mov
and
lcall
dec
outsb
cmp
add
and
and
data16
pop
mov
push
ficoms
les
and
divb
iret
out
fcompl
push
in
xchg
mov
cmc
ss
add
idivl
mov
stos
subb
in
aaa
jle
mov
push
or
jno
jns
push
in
cwtl
in
pop
jno
sti
out
cmp
adc
pop
jns
mov
xor
mov
repnz
cmpsl
into
sub
add
push
inc
scas
popa
fsubrs
int
jp
push
ficomps
lcall
push
int
imul
pushf
inc
jp
out
pop
add
lret
xor
iret
out
pop
into
in
pop
push
xor
mov
call
sbb
pop
cmp
and
jle
mov
and
pop
mov
lock
iret
push
mov
inc
push
loope
outsb
fwait
mov
test
std
sbb
testl
adc
repz
jb
call
frstor
sti
push
bound
dec
repnz
adc
fstpt
add
jge
jmp
sbb
add
add
jl
jae
pop
in
pop
push
mov
mov
push
out
or
push
and
jnp
stc
mov
fidivrl
rol
jo
and
das
jns
outsb
mov
pop
ret
out
add
jmp
clc
xchg
xchg
out
xchg
mov
mov
or
insl
stos
mov
inc
cmpsl
popf
adc
fstp
popa
outsl
inc
outsb
insl
inc
aaa
loope
stos
pop
jns
imul
xchg
push
inc
les
push
push
pop
ret
movsl
or
dec
repz
test
xor
ret
or
push
lds
imul
fsts
pop
lret
sbb
out
push
ds
nop
push
out
adc
pop
imul
mov
ret
fisubs
jo
mov
add
jp
nop
and
gs
stc
test
dec
das
push
rcrb
xchg
mov
out
pusha
hlt
cld
dec
fnstcw
jecxz
and
sarb
shl
push
in
pop
rcrl
mov
lock
jb
adc
cmp
xchg
jle
xor
adc
arpl
push
in
int3
repnz
xchg
and
jo
jle
fs
rorb
sarl
dec
in
pop
scas
jmp
and
cld
int3
shl
je
xor
divb
push
push
ret
jne
leave
cmp
int3
insl
fstps
sbb
pushf
cwtl
pop
outsl
shrl
adc
in
mov
popa
sub
or
sub
sub
inc
cmp
idiv
fisubrl
jb
jo
xlat
fcoml
jnp
dec
gs
cmpsb
js
test
jnp
mov
mov
inc
lret
bound
inc
cld
stos
testb
loope
push
pop
adc
pop
xchg
out
cmp
push
adc
add
push
jle
dec
sub
lret
lcall
sub
outsb
inc
dec
pop
inc
aaa
push
jle
push
or
std
mov
pushf
xor
lret
ss
inc
jg
mov
xor
mov
and
adc
fcoml
or
out
pop
adc
pop
movsl
testb
mov
scas
jg
jl
inc
ret
sbb
and
stc
lahf
sbb
and
add
mov
mov
ljmp
mov
pop
fistl
adc
popa
push
xchg
leave
ja
or
inc
mov
bound
xlat
jecxz
and
jmp
add
xor
push
mov
and
outsb
sbbb
mov
push
inc
lcall
bound
out
aaa
stos
xor
aad
xchg
stos
dec
add
cmp
lods
mov
mov
dec
subl
inc
cmp
ret
outsb
adc
inc
subl
or
jmp
scas
jb
xor
movsl
adc
push
mov
or
idiv
xchg
daa
cmp
outsl
test
xchg
leave
cmp
xor
mov
mov
orb
mov
inc
inc
repnz
mov
push
insl
lcall
out
and
pop
and
pusha
fwait
push
mov
mov
jb
js
out
loopne
mul
inc
sysexit
mov
aaa
dec
inc
jnp
xor
aaa
pusha
fstl
cmpb
xor
in
bound
test
jecxz
pop
inc
xor
mov
or
lds
cmp
loope
pushf
ljmp
inc
inc
cmc
scas
mov
mov
sbb
mov
clc
enter
lods
int
mov
cltd
into
andl
dec
sbb
jl
lcall
add
jno
pop
dec
int
cltd
mov
jmp
fildl
lods
sbb
fs
rcll
sub
push
dec
sub
inc
insl
movsl
imul
jnp
dec
fistps
and
test
adc
mov
test
cmpsb
xlat
hlt
mov
push
stos
pushf
mov
repz
sub
sbb
cmpsl
or
sbb
inc
cmp
fcmovu
sub
cli
adc
adc
adc
jmp
xchg
sub
insl
mov
mov
add
dec
js
aaa
mov
movsb
inc
or
or
push
mov
loop
and
adc
cmp
mov
dec
adc
cmpsl
jge
adc
inc
jnp
add
sbb
stc
mov
call
inc
mov
movb
outsb
mov
push
mov
lret
pop
movsb
jp
push
sar
push
mov
into
sub
sub
and
test
jecxz
or
sarl
xor
xlat
lea
enter
pop
and
fdivr
mov
stos
mov
repz
dec
sbb
imul
mov
jne
outsl
repz
lods
rorb
rorl
xor
xchg
push
test
xor
inc
in
xchg
cld
and
mov
fsubr
sub
add
test
xor
jecxz
loop
icebp
cwtl
jno
inc
sub
mov
sbb
imul
fdiv
lds
xchg
std
cmc
jmp
loope
push
sub
add
lcall
xor
jno
mov
sti
pushf
adc
mov
ljmp
or
orl
mov
mov
inc
pop
loope
ljmp
insl
mov
out
aaa
mov
rolb
dec
clc
mov
mov
push
in
xor
cmp
and
rolb
add
push
add
fwait
jb
mov
das
daa
dec
inc
les
call
out
mov
lcall
clc
sub
add
arpl
jo
fcomi
push
test
push
mov
adc
mov
add
and
je
lea
mov
incl
daa
stc
sbb
push
pop
lods
test
into
jg
into
aad
movsb
imul
or
les
pop
divl
jmp
xor
bound
adc
dec
push
in
mov
fnsave
jg
in
adc
lods
cmp
xchg
ja
ja
mov
fwait
xchg
push
dec
adc
jl
jge
repnz
out
negl
es
and
jbe
imul
mov
cmp
inc
stos
call
cmp
xchg
js
scas
and
mov
stc
lret
or
or
notb
test
xor
cli
jp
mov
loopne
loop
idiv
pop
pop
ja
xlat
lea
jmp
sti
enter
dec
and
xor
mov
out
jne
xchg
jnp
or
js
ficomps
mov
pop
dec
pop
mov
add
sbb
repnz
test
cmp
jmp
imul
sub
mov
daa
dec
push
add
mov
mov
jge
jb
das
add
dec
das
ljmp
ret
aaa
add
popa
loop
nop
xor
fldcw
fldpi
lea
mov
add
and
mov
jmp
mov
cmpb
fwait
sbb
lret
in
into
push
pop
ljmp
or
xchg
ret
add
push
fisubs
xor
fidivrs
mov
or
jae
testb
lods
adc
pop
jge
jg
and
cwtl
jp
mov
pop
xchg
pop
mov
loopne
inc
push
hlt
mov
pop
inc
outsl
or
into
or
and
jns
sub
lret
xchg
sbb
xor
inc
std
cld
mov
jg
mov
push
lcall
jns
jg
xchg
sarb
jl
pop
es
dec
mov
cmp
imul
ds
push
mov
push
xor
cmpsb
mov
pop
fisubrs
std
test
mov
xchg
and
ss
pop
je
lock
xchg
mov
shrl
sub
xor
lret
adc
mov
subb
fisubs
pop
arpl
dec
jle
sbb
lahf
mov
xchg
or
pop
js
into
or
and
in
mov
jge
dec
pop
pop
jg
repnz
enter
fiadds
push
out
xorb
clc
call
daa
mov
jo
add
ss
test
add
sbb
mov
cmc
add
cmp
ljmp
sti
andb
push
push
test
ljmp
shll
pop
in
xlat
in
ret
aam
jg
sbb
clc
adc
mov
push
mov
sahf
hlt
das
inc
pop
pop
aaa
dec
mov
xlat
repnz
xchg
cmp
sarl
mov
daa
dec
push
leave
mov
jnp
arpl
cmp
out
mov
cmp
push
push
mov
and
mov
jp
bound
movsb
and
scas
stos
xlat
and
adcb
mov
pop
or
jle
test
scas
xchg
xor
cwtl
out
dec
xchg
mov
lock
mov
pop
fidivl
add
sub
jno
test
popf
call
fdivrl
lods
dec
xchg
push
push
inc
enter
cmc
push
movsb
adc
cltd
testb
pop
inc
fisubl
call
in
pop
mulb
shl
mov
adc
sbb
dec
mov
ss
cld
cmc
fsubr
inc
loop
jle
rorl
or
stos
shl
xchg
mov
lret
lahf
push
pusha
dec
cli
mov
dec
stc
fistpll
test
mulps
jo
hlt
xor
and
negl
inc
push
lsl
push
jmp
call
arpl
fucomi
out
or
mov
stos
ss
mov
inc
mov
cmp
fmull
pop
lds
dec
push
mov
mov
out
jle
push
in
loope
loopne
push
cmp
or
bound
push
mov
lcall
insl
sbb
sub
jg
xor
jns
icebp
cmp
pop
fsubrl
jns
mov
pop
pop
pop
xchg
cld
and
mov
add
in
notl
pop
sti
scas
xchg
ljmp
jne
cs
mov
xor
mov
mov
dec
jbe
or
or
mov
scas
aaa
nop
push
cmp
push
push
mov
lods
cmp
mov
aas
je
inc
ds
icebp
xlat
lret
jp
leave
aas
sbbl
repz
xchg
dec
sub
je
inc
push
mov
dec
les
insb
pop
sarb
in
xlat
addb
push
push
inc
mov
imul
aas
xchg
out
rcl
fbld
test
sbb
dec
mov
mov
outsb
mov
data16
jne
lock
push
push
idivl
das
dec
icebp
adc
ljmp
es
dec
sub
lcall
mov
sbb
imul
or
ds
sub
mov
les
cmp
test
sbb
loope
jnp
adc
mov
ljmp
enter
mov
push
subl
out
inc
in
add
faddl
sbb
jge
andb
mov
pop
cmpsb
fisttps
popa
rcll
push
lcall
leave
in
aaa
cmp
or
nop
sbb
mov
test
push
jo
add
dec
cmpsl
mov
ret
adc
sbb
sub
pop
gs
scas
add
jle
pop
and
mov
adc
xchg
out
and
inc
pop
and
cwtl
jbe
loope
jmp
mov
mov
stos
push
sbb
fcomp
inc
mov
push
sub
idivl
pop
lock
push
mov
push
cli
mov
repz
fwait
jne
xor
hlt
int
mov
lcall
mov
sbbl
push
mov
dec
inc
imul
and
pop
test
out
mov
push
cli
shl
addr16
cltd
popf
mov
xor
ja
add
cmp
jo
dec
out
aaa
int
aaa
sbb
inc
insl
outsb
cwtl
xor
call
dec
or
mov
ss
arpl
sti
lcall
pop
mov
mov
test
scas
in
subb
cmp
cmp
rcll
push
mov
sbb
ret
jp
pusha
or
xchg
or
jo
cmp
cli
dec
andl
adc
cmpsl
divl
enter
and
fwait
stc
sbb
adc
sbb
popa
push
fsts
iret
outsl
mov
inc
shll
or
loop
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
jmp
test
jl
out
mov
sti
loopne
out
aaa
dec
in
clc
jl
cmp
or
scas
loop,pn
outsb
push
jae
jge
frstor
push
add
add
es
mov
out
mov
daa
sub
inc
jb
adc
xchg
filds
pop
add
xchg
push
scas
in
das
ret
movsb
imul
mov
mov
mov
sbb
icebp
cmp
or
insb
outsl
imul
pop
rcrl
shrl
mov
nop
xchg
iret
or
cwtl
testl
lret
sbb
dec
inc
mov
std
test
xor
jbe
mov
rcr
outsl
std
push
test
aam
das
mov
bound
fwait
xchg
xlat
jno
aaa
call
adc
xor
mov
jne
xchg
cltd
inc
stc
lret
jne
lds
repnz
aam
push
sbb
mov
mov
cmp
mov
mov
lock
sbb
jnp,pn
mov
pop
clc
cmpl
push
mov
jmp
mov
out
hlt
push
xorl
xchg
push
nop
inc
stc
out
xchg
es
xchg
dec
rcrb
jle
int3
sbb
jno
ljmp
pop
mov
push
xchg
popf
xor
mov
mov
insb
mov
and
dec
mov
xchg
or
loope
inc
fstpt
fs
out
vmaxss
das
loop
in
decb
inc
fiaddl
lods
aam
xor
sbb
mov
xchg
or
sub
add
int3
sub
sahf
sbb
lahf
repnz
mov
dec
push
push
fs
cmc
sub
out
push
sub
pusha
xor
inc
lea
inc
add
leave
scas
test
and
arpl
test
test
mov
movsb
sbb
push
cmp
sub
xchg
adc
loope
lret
into
push
jns
jmp
rcrb
ljmp
test
push
data16
roll
jbe
pop
jbe
ljmp
jo
sub
test
mov
mov
imull
or
sub
fstps
test
cmp
popa
cmpsb
xor
fwait
lods
push
cld
mov
in
inc
push
cmp
jl
sub
add
cmp
call
mov
cwtl
jge
jno
or
and
arpl
cmp
insl
int3
stos
popf
sahf
adc
or
es
icebp
add
bound
xor
loop
pop
push
sahf
xchg
inc
jmp
int3
data16
add
and
test
enter
cmc
leave
testb
in
mov
iret
mov
test
and
or
sbb
lods
jb
jle
mov
fisttpl
mov
fsub
mov
hlt
xor
inc
test
out
pop
push
imul
cmp
push
ss
jle
ss
sbb
lds
sbb
xchg
roll
std
adc
fisubl
outsb
lock
jo
inc
subb
add
lods
pop
je
inc
arpl
dec
pop
bound
aam
push
test
idivl
sub
cmp
jno
lods
cmp
adc
pop
push
sbb
dec
lods
and
rcl
mov
imul
cmp
jl
sbb
mov
push
stos
adc
in
iret
lods
jnp
mov
mov
cwtl
or
xchg
jo
gs
out
xchg
nop
shlb
decl
cmp
pop
pop
mov
add
adc
loop
add
add
scas
fs
js
lcall
imul
push
in
gs
sub
xchg
add
aas
adcb
in
push
sbb
into
js
dec
jne
insl
sub
inc
lea
in
stc
ss
movsl
aad
jb
mov
cmp
in
ja
push
push
scas
inc
orb
pop
pop
fcoml
lods
add
js
ret
lock
push
mov
mov
mov
sub
and
sub
dec
push
imul
repz
pusha
and
sub
mov
fnsave
stos
daa
aas
push
call
adc
add
and
sub
or
subl
out
mov
int3
or
fcoml
popa
dec
aam
pushf
dec
cmp
gs
add
gs
movl
add
test
adcl
stc
jmp
stos
pop
xchg
data16
andl
mov
repz
sbb
adc
jbe
or
stos
cmc
leave
mov
cmc
sbb
daa
in
jge
and
sbb
adc
sahf
lahf
inc
mov
pop
jno
shlb
fldcw
sbb
insl
xor
mov
popf
pop
and
cmp
adc
sub
cltd
and
cmc
add
sahf
pop
push
scas
pop
out
adc
cwtl
lret
cmp
dec
repnz
cmpsl
pop
xchg
inc
mov
or
jnp
inc
mull
sbb
cmp
dec
mov
and
stos
dec
popf
xchg
daa
sbb
pop
lcall
repnz
test
push
stos
pop
or
sub
das
es
in
or
dec
lret
out
clc
push
adc
scas
fidivl
mov
mov
sbb
dec
movsb
sarb
pop
call
cmpsl
pop
xor
or
push
pop
jp
imul
jno
jecxz
das
das
cmc
enter
push
jmp
lea
mov
pop
sbb
dec
cmp
cli
mov
cld
inc
adc
push
mov
dec
jl
je
pop
xchg
test
cmp
jl
sub
or
or
jae
out
insb
jno
dec
sub
mov
fidivs
cld
jecxz
and
cmc
hlt
call
rolb
mov
int3
push
cmp
cmpsl
mov
out
loop
cmp
fists
xchg
and
fsubrs
andb
push
cmpsb
test
sti
nop
dec
int3
inc
into
daa
and
or
sub
lock
dec
mov
inc
push
cwtl
jns
sbb
mov
test
shl
cmp
outsb
jge
rcrw
and
cli
shll
pushl
lahf
adc
repz
cmp
jnp
mov
dec
xchg
mov
aaa
test
imulb
mov
test
arpl
push
mov
mov
lea
scas
push
xor
adc
and
lock
jae
mov
mov
xor
mov
xchg
cwtl
push
sbbb
and
xor
pop
out
push
ret
sti
inc
mov
clc
hlt
jae
loop
sub
mov
popf
scas
imul
xlat
sbb
cmp
push
add
test
rcr
loop
sub
das
int3
je
cmp
gs
pop
into
mov
testb
imul
mov
xchg
lcall
vunpcklps
adc
iret
test
imull
ds
sahf
push
shlb
dec
mov
lret
mov
jbe
outsb
orb
hlt
xchg
divb
xchg
push
mov
in
push
pop
jmp
movsb
jns
movsl
dec
cmpsb
rcrb
or
push
xor
cmpsl
in
inc
add
js
ss
xchg
or
sbb
mov
mov
ss
mull
or
hlt
mov
lods
js
repz
push
cld
adc
imul
xchg
dec
jge
cmpsl
dec
jmp
movl
repnz
aam
inc
movsb
push
std
mov
mull
jmp
mov
popf
lods
or
scas
stos
sub
inc
incl
pop
or
sti
sub
add
pop
adc
sbb
loopne
or
cmp
xor
inc
jmp
push
pop
inc
mov
inc
sbb
popa
std
adc
inc
incb
cmp
rcrl
daa
sub
cmp
xor
sahf
cmp
insb
mov
pop
hlt
jae
mov
movb
and
add
lret
aas
pop
testl
lahf
mov
cli
mov
insb
add
in
push
pop
bound
test
xor
jmp
or
movsb
je
cmp
icebp
jno
mov
inc
mov
dec
and
loopne
jne
adc
out
nop
js
and
pop
inc
sub
add
xorb
loope
dec
xor
ss
add
out
add
stc
in
call
jp
inc
mov
rorb
xor
pop
sahf
sbb
int3
mov
outsl
xor
std
xchg
insl
enter
mov
push
cmc
ja
mov
shll
xchg
xchg
xchg
mov
lds
mov
insb
shlb
push
mov
in
dec
stos
push
rcrb
or
cltd
mov
das
negb
cmp
jnp
mov
mov
in
and
jle
aas
push
loop
push
lcall
insl
mov
lcall
fs
insl
test
leave
aaa
push
adc
aas
add
ficoml
fsubr
mov
push
aad
mov
mov
outsb
inc
pop
mov
jo
mov
mov
je
mov
lret
and
icebp
adc
cmpsl
repz
pop
xchg
sub
xchg
jl
stos
mov
push
sub
iret
adc
daa
sbb
pop
or
or
repnz
jbe
push
mov
call
sbb
stc
push
clc
cmpsl
aaa
mov
xor
repz
or
pop
mov
inc
imul
shlb
test
pop
mov
xchg
imul
pextrw
test
daa
lret
shlb
fldt
popa
lock
and
shl
mov
aas
mov
out
mov
outsb
mov
fldt
stos
add
lock
sub
dec
push
insl
fwait
mov
lret
lret
mov
popf
jne
jge
lds
cltd
das
repnz
pop
cmpsb
dec
xor
ret
ret
fdivs
data16
xchg
sbb
push
jecxz
xchg
or
inc
fisubrl
mov
mov
iret
pop
inc
or
out
pop
rorb
pop
scas
stos
fwait
pop
jg
shl
push
test
pusha
lods
jp
leave
gs
ret
mov
inc
xor
inc
pop
rclb
pop
xchg
sbb
inc
cmp
xor
mov
insl
push
jmp
mov
or
iret
dec
aaa
or
std
fidivrs
adc
and
or
mov
mov
pop
ja
stc
or
pop
imulb
inc
rol
cld
insl
cmp
pop
xor
sub
lods
mov
xchg
pop
add
jg
and
insb
xor
imul
in
add
clc
mov
leave
test
fists
xchg
lods
mov
cmp
lret
xlat
xchg
dec
stc
jp
dec
inc
fiadds
sbb
fistps
sbb
xchg
cmp
mov
adc
jl
pop
lret
imul
xchg
in
enter
lds
sub
sub
sub
insb
sti
xchg
cmp
in
mov
mov
mov
cmp
mov
fildll
cmp
push
dec
ret
shrb
sbbb
shll
add
jmp
icebp
fcmovb
jle
cmpsb
lock
scas
je
xchg
ss
scas
xchg
or
jmp
loop
in
sub
add
imul
jno
lret
popf
imul
push
imul
dec
ficoml
sbb
not
dec
mov
and
sbb
pop
outsl
mov
fldt
inc
mov
mov
roll
push
adc
inc
aaa
movsl
in
push
pushf
cs
dec
push
xchg
rcrb
mov
pop
out
imulb
xlat
mov
imul
inc
stos
repz
test
lds
xor
mov
leave
xchg
mov
data16
xor
push
out
push
dec
dec
loope
xchg
push
orl
pop
mov
adc
das
xchg
outsb
cmc
pushf
call
jns
push
in
push
scas
gs
and
push
mov
outsb
adc
repnz
jnp
push
ficoml
je
sbb
in
and
push
xchg
jo
xor
and
stos
std
jne
outsl
adcb
dec
pop
lock
lret
icebp
jbe
scas
jns
hlt
ljmp
aas
xchg
test
pushf
or
inc
movsl
call
cmpsl
adc
in
xchg
jge
arpl
pop
add
mov
cmpsl
push
insb
adc
mov
xor
xchg
inc
jle
or
cmp
xchg
pop
lret
int
imul
aas
sub
roll
nop
stos
jmp
das
fucom
or
xorb
stos
cmpsl
lds
cwtl
stc
movsl
push
adc
insb
ljmp
xchg
adc
cmp
push
stos
movsl
lret
sti
js
imul
roll
mov
jge,pt
adc
pop
popf
push
mov
sub
pop
shlb
insb
cmpsb
and
xchg
jno
pop
mov
push
mov
sub
add
ret
pop
in
jecxz
sub
popa
daa
rcr
sub
repnz
out
xor
in
pop
fldenv
dec
xor
scas
dec
push
les
push
push
sub
aad
mov
mov
pop
jo
cmp
push
ja
sub
mov
into
jbe
mov
int3
pop
loope
adc
sahf
pop
sbb
scas
arpl
rorb
xchg
jmp
out
lcall
sub
add
push
mov
mov
lea
mov
mov
push
cmp
in
nop
cli
adcb
mov
sahf
xchg
sub
ret
dec
push
mov
jno
pop
mov
frstor
jg
dec
popf
pop
mov
data16
test
push
mov
pop
in
notb
adc
lret
xor
insl
xor
std
cmp
mov
pop
sbb
pop
jo
iret
xor
push
adc
mov
xchg
movsb
pop
jb
mov
xlat
jmp
mov
inc
xchg
push
lods
sub
orl
xor
aad
mov
push
xchg
dec
add
or
dec
pop
pop
lock
insb
mov
pusha
jne
loopne
lock
pop
clc
fwait
into
stos
lea
in
fcomps
xor
fucom
lret
aam
xor
pop
cmp
cmp
push
dec
jmp
jmp
jnp
imul
shll
push
popf
cmp
movl
mov
pop
jbe
adc
sbb
in
lcall
push
iret
adc
pop
mov
in
out
imul
icebp
pushf
push
ss
mov
imul
lea
inc
lret
shll
pop
cld
push
icebp
push
or
mov
test
movsl
lret
mov
ficoml
pop
xorb
lods
leave
push
pusha
nop
xchg
movsl
xor
mov
movsb
out
js
mov
inc
cld
or
push
ljmp
cmpsl
stos
daa
into
movsl
xor
aam
lods
hlt
sbbl
mov
lods
mov
movsb
dec
mov
pop
cmp
adc
testl
mov
jge
dec
rorl
iret
rcl
pop
mov
push
sub
lret
jecxz
movsl
icebp
sub
mov
sarb
mov
mov
push
xor
adc
mov
mov
fiadds
xchg
or
add
lea
js
into
jg
stos
pop
jae
cmp
jae
pop
movsb
pop
push
mov
mov
mov
sbb
lods
in
push
mov
sub
pop
call
and
sbb
fiaddl
arpl
jecxz
sahf
jo
add
push
pop
popf
cwtl
dec
fwait
or
cmp
mov
push
sub
or
scas
xchg
push
mov
pop
mov
mov
mov
sub
nop
imul
popl
xlat
push
xchg
xlat
cmp
xchg
int
inc
stos
xor
jb
loopne
insl
and
daa
add
sbb
lods
cld
mov
push
enter
rolb
test
sub
jae
add
mov
adc
cmp
enter
and
xchg
aad
xor
xchg
cltd
ljmp
sbb
mov
inc
pop
mov
xor
cli
decb
mov
mov
int3
fabs
rcrb
add
ret
jge
pop
icebp
shlb
mov
sbb
mov
pop
sbb
fs
hlt
cmc
add
mov
sub
mov
push
lret
add
mov
sbb
mov
jp
pop
sub
push
adc
jne
jne
scas
add
flds
nop
out
adc
push
mov
pop
push
sar
jp
lods
xor
shll
test
mov
popf
arpl
cmc
add
pop
push
dec
fldenv
sarb
sbb
movlhps
push
sbb
popf
mov
lea
adc
std
fs
pop
nop
outsl
icebp
pushl
in
sbb
pop
movsl
xchg
rorl
xchg
lahf
jbe
dec
push
push
jb
clc
imul
out
push
and
cmp
or
xorb
pop
rol
mulb
fbstp
jle
cmp
lahf
mov
mov
insl
mov
and
xor
popf
dec
sbb
repz
mov
dec
xorb
sub
loopne
call
push
xchg
pop
test
jae
sbb
gs
jns
lcall
push
sti
repz
cmpsb
pop
popa
aas
addl
adc
int3
sbb
pushf
or
movsb
inc
ja
push
dec
daa
jg
cltd
and
pop
shlb
jo
outsl
or
lahf
inc
mov
xor
call
xor
mov
sub
aaa
add
scas
stc
scas
fnsave
stc
stc
cmp
pop
ljmp
mov
test
sbb
push
mov
sub
pop
inc
xchg
stos
mov
push
and
stos
fsubl
pop
or
jnp
test
sbb
fprem1
test
sub
jl
ds
shrl
decb
mov
shll
mov
pop
jmp
cli
mov
stos
and
mov
movsb
xor
xlat
popa
fidivl
mov
and
cmp
pop
aas
fimuls
add
adc
testb
jecxz
sbb
mov
push
mov
insb
imul
inc
jmp
cmp
sbb
dec
jno
mov
dec
fcmovnu
outsl
and
das
in
sarb
cmp
adc
pop
mov
shll
jb,pn
add
mov
mov
push
push
dec
sarl
int3
fldenv
cmp
ret
xlat
inc
lock
nop
jb
and
or
repnz
push
notl
pusha
stc
add
xor
jnp
mov
lcall
cmp
test
cmp
push
stos
push
mov
out
dec
rep
xorb
mov
pop
stos
cmp
es
int3
cs
int3
pop
fs
xor
pop
xchg
outsl
aaa
adc
cwtl
jbe
das
fwait
xor
addr16
or
insb
flds
and
ds
xchg
push
cmpsb
sbb
sets
cmp
mov
xor
jnp
mov
js
imulb
repnz
push
jne
clc
pop
inc
insl
aad
out
cs
testb
call
incb
push
cmp
sbb
mov
mov
arpl
dec
cli
xchg
add
and
xchg
loop
aam
push
movsb
test
rorl
fmuls
sub
adc
stos
mov
in
sbb
jle
or
mov
pop
das
xor
push
add
leave
jp
sub
sbb
andb
hlt
rdpmc
cli
sbb
xlat
pop
dec
rcll
xchg
cmpsb
sub
push
add
and
shll
popa
push
sti
xor
pop
mov
push
mov
aam
imul
fdivl
or
popf
adc
lods
dec
bound
adc
and
sbb
sbb
fcompl
mov
adc
arpl
repnz
mov
andl
cli
cs
cmp
fsubrl
sub
push
addr16
divb
cmp
adcl
ret
notl
lcall
out
or
xor
and
xorl
int3
insb
mov
sarb
je
in
dec
bound
movsb
clc
jae
gs
rolb
in
mov
enter
adc
or
mov
adc
jno
add
jg
mov
sbb
inc
movsb
mov
mov
test
cld
dec
sub
ret
inc
shld
lods
cmp
mov
pop
shll
pop
cmp
or
les
mov
jge
xchg
pop
xchg
add
stos
ret
inc
pop
stc
lcall
cmp
add
aaa
sahf
and
add
sub
inc
inc
xchg
cmpsl
nop
dec
cwtl
mov
add
popa
and
pusha
je
and
es
ds
addr16
insl
fists
add
and
pop
loope
aam
ds
push
xor
xor
insl
fdivl
mov
or
xorl
jnp
into
add
dec
into
push
out
mov
addr16
clc
test
les
and
sub
mov
sbb
enter
call
lahf
cmp
sbb
adc
and
mov
icebp
call
inc
enter
outsl
dec
adc
fwait
push
inc
sbbb
scas
xor
loope
adc
lods
hlt
add
cmpsb
mov
jecxz
fistps
test
fisubl
scas
push
jle
daa
scas
fistps
push
mov
dec
dec
sbb
ja
dec
lcall
jbe
xchg
addb
mov
dec
fistl
pop
pop
fcoml
push
jl
pop
movsb
sbb
addr16
xchg
es
xor
cwtl
mov
pop
inc
mov
outsl
mov
mov
setae
sub
cmp
shll
mov
jns
loop
jecxz
and
adc
sub
mov
add
test
cwtl
and
dec
xor
push
adc
mov
sbb
adc
jno
xlat
mov
sub
in
mov
jno
in
mov
cld
ljmp
leave
dec
arpl
les
cmp
hlt
mov
mov
int
inc
mov
test
jmp
dec
lcall
in
mov
nop
mov
loopne
mov
lods
sub
mov
push
in
cmp
outsl
mov
add
and
xchg
sbb
jnp
movb
arpl
xor
jno
dec
cmp
push
orl
mov
insl
stc
andl
xchg
mov
das
sub
mov
add
cmc
test
dec
test
arpl
hlt
and
or
and
scas
dec
inc
dec
adc
les
test
mov
fbstp
movsb
add
mov
lea
xchg
lods
jge
inc
pop
cmp
mov
or
or
jg
lret
or
aad
jns
push
fsts
sbb
std
cltd
cld
cmp
fmuls
test
inc
rcrb
aaa
xchg
jmp
cwtl
in
fisttpll
mov
outsb
add
push
inc
sbb
out
hlt
popa
bound
js
shll
shl
fimull
xchg
dec
push
sti
shlb
or
mov
movsb
dec
sbb
or
js
mov
pop
push
cmp
fildl
orl
es
dec
push
inc
inc
xor
daa
in
mov
jae
push
cmp
xor
gs
int
jecxz
movzbl
mov
pop
dec
out
sbb
testl
lret
iretw
and
jae
lock
sub
inc
mov
in
mov
adc
xor
stc
arpl
add
cmp
mov
lods
adc
int3
scas
aad
fisttps
cltd
push
xor
mov
mov
inc
pop
mov
xor
jge
fldcw
jmp
sub
push
pop
jg
int3
bound
sbb
fnstsw
clc
inc
pop
lods
add
aad
leave
clc
push
aad
add
test
stos
sarb
xorl
call
sti
adc
pop
inc
lea
in
pop
mov
imul
outsb
cwtl
lea
pop
xchg
fidivl
daa
movsb
insb
push
xor
inc
cmp
xchg
cmp
in
jne
mov
jecxz
jnp
insl
add
into
stos
mov
jle
pop
cmovs
gs
xchg
shll
fs
xor
out
cmpl
out
nop
sahf
lds
mov
test
mov
fldl
lret
mov
xor
jmp
js
mov
mov
fdivl
ss
out
cmp
fldl
pop
and
aam
mov
cmp
and
mov
pop
sub
mov
lea
sbb
inc
push
xchg
inc
jb
les
and
xchg
ljmp
imul
in
push
fdivp
lcall
mov
and
mov
sub
push
xchg
call
test
mov
in
and
cmp
pop
pop
pop
jle
cs
adc
adcl
adc
and
mov
adcl
int3
ret
scas
fldenv
and
icebp
xor
addr16
popa
out
inc
push
ror
push
cwtl
push
insl
inc
aad
ja
xchg
jp
in
dec
mov
xchg
xchg
lods
bound
mov
stos
and
adc
mov
jecxz
xchg
push
sbb
int
and
rclb
pop
xchg
dec
pop
loope
pop
mov
test
inc
ffree
subl
adc
movsb
sbb
les
or
ja
add
push
sbbl
jns
dec
mov
lock
outsb
lods
ret
and
pop
lahf
cli
inc
data16
mov
mov
js
mov
divb
sbb
push
or
inc
test
stos
out
mov
gs
arpl
scas
lcall
in
gs
cwtl
loop
push
push
inc
into
add
push
inc
fildll
fisttpll
nop
xchg
jbe
mov
ss
or
inc
pop
mov
lods
cmp
in
fs
cmp
dec
loopne
adc
test
mov
xchg
mov
push
lahf
stos
pushf
mov
test
sub
fdivs
sahf
and
stc
adc
dec
arpl
jno
cmpsb
enter
pop
add
mov
out
inc
and
push
adc
add
das
adc
add
cmp
mov
repz
cs
or
xor
mov
jl
subl
xorl
mov
adc
ret
and
pop
cld
stc
cmp
xchg
mov
out
outsl
dec
mov
test
inc
fdivrl
pop
rclb
xchg
mov
lds
push
mov
cmovle
push
icebp
jns
lea
enter
pop
mov
and
shr
mov
into
adc
xchg
es
or
sbb
cltd
fistpl
inc
mov
pop
scas
arpl
nop
cvtpi2ps
addr16
lahf
add
push
inc
mov
cmc
icebp
and
js
lock
and
jp
push
icebp
lret
cmp
outsl
cmpsl
lock
in
pop
hlt
in
mov
mov
mov
push
mov
jge
xchg
jns
mov
jns
or
sbb
inc
scas
xor
xchg
mov
xor
out
mov
idivb
push
dec
push
and
std
mov
xlat
lahf
adc
test
push
push
fcmovnb
jne
xor
mov
sbb
inc
mov
or
mov
pop
pop
mov
mov
mov
mov
hlt
mov
insb
inc
stc
arpl
rcrb
inc
add
repnz
jle
int
roll
xchg
outsb
and
add
mov
roll
test
push
pusha
push
leave
int
adc
int3
sub
pop
repz
ds
push
mov
out
xor
test
pop
cs
mov
pop
xor
dec
iret
mov
and
lahf
dec
xchg
sbb
into
cmpl
sub
cmp
dec
mov
outsl
cmp
cs
pop
hlt
jmp
xor
addr16
enter
hlt
push
shr
sub
arpl
sbb
pop
insb
xchg
jae
mov
or
jl
add
push
dec
ret
xchg
out
sub
aaa
adc
push
cmpsl
pop
cwtl
dec
das
adc
lret
push
lock
jle
and
mov
and
and
fists
and
push
inc
test
scas
data16
pop
aaa
xchg
shlb
movsl
inc
or
aam
lds
mov
sub
jnp
pop
xchg
sub
adc
inc
dec
out
or
xorb
movsl
jbe
aaa
shlb
lcall
rcrl
mov
xor
icebp
jo
jnp
add
in
mov
lock
push
ret
mov
sbb
fimuls
inc
xchg
dec
fs
push
jb
pop
addr16
in
int
es
adc
mov
jmp
sbb
je
int3
mov
fsubs
imulb
pop
push
fadds
xchg
fldt
jns
insl
inc
test
jecxz
push
mov
mov
adc
dec
jae
ror
adc
adc
lret
hlt
or
mov
ret
in
and
pop
jbe
xchg
mov
loop
addb
addb
lods
test
in
mov
and
sarl
mov
push
pop
adc
xor
daa
out
or
rcll
into
in
sbb
sub
shll
dec
adc
in
adc
jp
sbb
xor
sbb
mov
or
ret
sbb
in
dec
mov
in
pop
cmc
inc
mov
mov
loopne
xchg
inc
dec
lahf
mov
rorl
lea
leave
push
cmp
jmp
pushf
mov
add
orl
ss
or
fwait
mov
fisttps
cmpl
imulb
and
inc
out
mov
mov
mov
out
fdivr
stos
sbb
adc
mov
fcoml
clc
jl
out
scas
mov
fiaddl
cld
cmp
call
mov
rcrb
cmp
sub
mov
xchg
rcrb
jmp
or
jb
mov
inc
fnstenv
and
mov
xor
add
mov
fdivs
inc
subl
sahf
fcomps
es
xor
shrl
rcrl
adc
add
cltd
arpl
ret
ret
push
add
out
add
mov
dec
jp
pusha
xlat
ja
xchg
mov
notl
xor
or
filds
shl
xor
insb
outsb
pop
mov
mov
ljmp
ljmp
fmul
xlat
dec
inc
and
aam
xor
sti
pop
jns
xor
pushf
mov
lahf
jp
popf
cwtl
mov
push
mov
or
fisubs
pusha
jle
xor
test
dec
or
cwtl
clc
fs
pop
and
add
or
in
pop
inc
pop
shrl
pop
addl
add
inc
jns
cltd
xchg
stos
ret
xchg
cld
mov
jge
fisttpl
leave
inc
call
add
stc
mov
push
jp
mov
rolb
sarl
jnp
push
and
test
xchg
add
mov
cmc
int
test
sub
sarb
pusha
icebp
fdivrs
arpl
ret
mov
push
cmp
inc
push
sub
test
es
jo
inc
mov
xor
shr
inc
add
loop
push
mov
pop
sbb
inc
jne
cmp
in
push
push
inc
cmp
dec
and
cmc
cmpsl
lods
cmp
loope
adc
popa
outsb
ja
sub
mov
jno
pop
shll
inc
push
stc
sub
cmpsl
xchg
aaa
nop
orb
loop
pop
mov
adc
jnp
sub
mov
inc
xchg
inc
push
push
aas
dec
vmread
fstpl
push
and
jle
mov
lds
les
cmp
fistl
sbb
add
push
push
movsl
ret
gs
pop
inc
jae
ret
sbb
filds
fwait
fs
rcr
test
into
mov
int3
std
jo
popa
aaa
loope,pn
loope
dec
and
sbb
outsb
scas
es
decl
out
push
dec
push
iret
jae
outsl
aam
jb
dec
xor
outsl
and
mov
sbb
addr16
inc
out
je
xchg
mov
std
bound
test
shlb
and
test
jbe
cmpsl
cmp
cli
mov
cli
es
adc
xorl
pop
stc
inc
xchg
cmc
jge
sbb
in
inc
pop
movsl
and
lea
push
xor
push
lods
jmp
shrb
sub
fldl
sti
ficompl
ficompl
jmp
es
add
xchg
pop
jg
mov
mov
adc
out
xor
push
cmpsb
cmpsb
sub
cmpsb
cmpsb
sti
mov
xchg
es
jg
push
jp
xchg
mov
insb
into
je
jge
and
pop
mov
add
cmp
pop
or
cmp
lret
insb
mov
pop
mulb
dec
mov
xor
lret
jg
sbb
dec
leave
mov
aaa
sbb
pop
and
ljmp
movsl
add
jae
xchg
dec
and
cmp
xchg
push
jmp
mov
lahf
fisttps
or
call
lock
sub
jbe
test
and
cmc
or
fcoms
loopne
das
jno
xor
es
sarl
pop
and
pop
imul
cmc
fldln2
iret
dec
xor
mov
es
mull
pop
cmp
outsl
aad
xchg
mov
push
sbb
jb
and
jae
push
push
test
stos
pop
es
pop
jge
xor
xor
push
aaa
popf
sbb
mov
mov
pop
sub
xchg
sbb
xor
out
stos
in
shr
and
add
lahf
lods
push
loope
lcall
push
icebp
push
mov
lret
inc
adc
jg
std
push
xor
inc
and
jnp
orb
std
stos
lods
push
dec
mov
mov
jno
out
xchg
js
mov
add
cld
sbb
push
sbb
ja
mov
popf
cltd
add
mov
fcmovnbe
add
mov
je
into
and
ret
sti
int3
fs
lea
push
add
sub
push
xor
mov
pop
cmp
jae
jle
mov
fisubrl
rolb
xorb
cs
mov
push
mov
add
cmp
lahf
lahf
scas
push
loop
cltd
xchg
xchg
ljmp
stos
xor
adc
outsb
push
stos
shlb
sub
mov
les
xchg
pop
rorl
ret
mov
xchg
ret
int
insl
jmp
push
xchg
fnsave
jl
sbb
lahf
or
inc
dec
pushf
push
or
push
cltd
daa
sbb
data16
movsl
out
sub
xchg
insb
lret
xchg
jnp
xlat
adc
fdivl
xor
cmp
pop
sbb
fadds
popf
mov
push
icebp
sub
xchg
push
xchg
push
jmp
call
adc
mov
mov
sbb
std
and
int3
inc
lret
roll
out
xchg
or
pop
addr16
std
popf
int
bound
xchg
mov
jnp
and
jmp
inc
inc
pop
inc
cwtl
incl
xor
push
clc
outsb
and
sub
insl
adcl
add
mov
mov
scas
fsubs
lret
inc
jge
lods
mov
sbb
jae
test
inc
sub
bound
inc
pop
xchg
sub
xor
sbb
mov
push
fcomi
fcompl
lods
mov
adc
push
mov
fbstp
mov
jecxz
dec
jnp
lock
cltd
dec
lea
inc
cmp
ret
jge
jecxz
adc
mov
dec
mov
pusha
cmp
pop
xor
lcall
stc
xor
fstpl
sub
popa
in
cmp
les
sub
pop
xlat
adc
pop
push
jp
push
cmp
lods
push
or
js
dec
out
cmp
ret
jmp
je
popf
sti
repnz
adc
clc
lahf
mov
dec
nop
mov
dec
push
in
imul
stc
lea
mov
out
add
fsubl
jp
add
stos
outsb
in
rorb
outsb
outsb
sbb
mov
aad
add
jl
cmp
lods
fimuls
jg
mov
pop
iret
in
fimuls
outsb
dec
adc
insl
jp
cli
adc
mov
lds
cwtl
pushf
in
push
fstpl
push
lret
cmp
jge
jl
xor
test
xchg
scas
data16
fists
or
sar
add
std
inc
pusha
sbbb
flds
insl
xchg
lret
addr16
decb
outsb
adc
pop
cmp
int3
lahf
movsl
inc
repz
aas
cmpsl
cltd
xor
jbe
adcl
ds
sub
mov
ss
xor
clc
push
cmp
xchg
pop
dec
lea
repz
mov
je
sbb
dec
imul
and
out
fiaddl
in
sbb
pop
cwtl
js
jp
push
push
mov
xchg
sub
cmpsb
adc
xchg
pop
inc
jle
lods
pusha
mov
mov
add
cmpsl
hlt
pop
cli
jne
jo
icebp
ja
in
aas
dec
push
push
push
adc
lea
jns
daa
mov
mov
jne
sahf
enter
shlb
jge
inc
xchg
rolb
enter
ja
iret
sbb
addr16
clc
cs
iret
fcoms
jne
insb
fldl
popa
loop
jnp
fimuls
xchg
out
jmp
push
cmp
or
testl
cwtl
or
xor
insl
pop
lahf
movsl
fildll
popa
mov
in
mov
call
or
or
add
pop
and
jge
icebp
jae
flds
int3
inc
sbb
call
popf
dec
scas
cltd
test
aam
sahf
and
js
mov
push
sub
std
cltd
sub
lcall
pop
daa
xor
mov
xchg
push
scas
jp
xlat
or
xorl
add
push
adc
adc
jbe
fiaddl
cmp
js
cmp
add
add
fcmovbe
adc
xor
test
rorl
and
mov
mov
mov
adc
push
push
mov
data16
je
aas
ja
lock
enter
inc
xsaveopt
test
daa
or
push
xchg
add
or
jmp
xchg
aas
imul
addr16
jge
ljmp
loope
xchg
pop
jb
mov
pop
nop
cmpsb
cld
dec
mov
add
jecxz
jns
xor
or
sbb
push
inc
into
sbb
mov
xchg
mov
cmp
addr16
repnz
xchg
andl
icebp
inc
lock
xchg
fcoml
sub
adcl
lea
popf
cmp
mov
sub
jmp
insb
adc
adc
fwait
pop
lret
mov
ja
mov
mov
sub
cld
mov
fildll
xchg
fildl
cli
adc
fnstenv
jge
cmpsb
lcall
es
shlb
rcrl
jl
push
mov
call
lds
inc
test
lcall
dec
dec
imul
dec
mov
jp
inc
sbb
stos
in
dec
pop
aaa
push
mov
inc
mov
dec
pop
daa
rcrl
out
inc
xor
dec
gs
add
rcl
push
mov
dec
icebp
adc
jno
push
ret
mov
sbb
in
cmp
inc
outsl
push
mov
leave
in
lock
inc
test
dec
inc
sarb
repnz
push
pop
std
ds
ficompl
sub
or
leave
dec
xor
icebp
scas
cmc
mov
daa
js
push
push
add
pop
in
aas
sub
pop
jno
xchg
aam
outsl
les
pop
mov
adc
lods
ret
rol
xchg
jmp
inc
into
lret
daa
pop
mov
push
mov
insl
dec
jno
fisubs
leave
xchg
inc
rcrl
adc
inc
cmp
andb
lahf
xchg
dec
xor
sbb
inc
mov
syscall
int
test
sbb
mov
in
stos
mov
and
ret
loop
xchg
leave
jl
rorl
adc
ljmp
jns
inc
push
xchg
test
sbb
mov
add
xor
imul
cmp
pop
sbb
sbb
jo
cs
adc
ret
test
lret
loop
mov
push
fidivrs
push
or
sbb
jl
push
std
rcrb
push
int3
and
rolb
xor
xchg
mov
test
std
add
shll
xchg
dec
dec
jle
mov
mov
lock
dec
fs
icebp
xchg
cmp
pop
ljmp
fcomps
mov
lret
scas
cwtl
negl
xor
clc
inc
adc
lret
aas
sbb
mov
jne
std
cli
adc
cmp
pushf
lods
push
add
adc
or
out
mov
inc
pushl
sub
out
pop
add
clc
or
or
cmp
insl
pop
cmpb
inc
icebp
sbb
and
push
sahf
jae
adc
fdivr
ret
mov
mov
ficoml
mov
test
icebp
lret
nop
mov
insb
xchg
xchg
test
lods
data16
imul
mov
push
cmp
mov
push
sub
sub
dec
pop
fcomps
dec
call
hlt
pop
lcall
dec
movl
rol
jge
inc
out
pop
popa
or
fadd
ret
inc
rol
data16
sbb
inc
mov
sbb
pusha
pop
mov
xchg
xor
cmpsb
jecxz
data16
push
iret
add
inc
push
mov
hlt
imul
lods
addl
push
les
icebp
js
pop
popl
nop
cmc
dec
stos
rorl
add
pop
inc
cmp
int3
mov
xor
leave
jo
jg
imul
orb
and
jae
adc
jns
adc
ds
sub
lahf
adc
mov
fbstp
cwtl
cmp
inc
cld
jae
jbe
mov
out
pop
outsb
in
aaa
mov
sbb
sub
or
pop
lock
mov
hlt
pop
mov
mov
sbb
jnp
fucomi
cmc
cmpsl
sahf
sbb
ss
aad
add
jecxz
push
and
pop
hlt
push
push
lea
iret
and
jle
inc
mov
adc
jbe
and
in
fstl
pop
jns
bndldx
and
jmp
in
add
mov
lret
xor
pop
cmpsl
je
clc
xchg
mov
xor
or
pop
fildl
cmp
xor
jae
push
mov
mov
fldlg2
aaa
imul
into
and
dec
scas
scas
cmp
aas
sub
adc
pop
pusha
add
orl
ret
int3
sbbb
int3
sub
xchg
xchg
test
out
lods
cmpsb
push
les
add
dec
push
sbb
xchg
cmp
mov
and
mov
pushf
dec
jecxz
push
mov
xchg
jp
dec
push
in
sbb
jle
adc
mov
cmp
inc
cwtl
xchg
nop
cmp
jp
cwtl
sbb
pop
nop
add
sbb
ret
xchg
iret
sub
movsb
jp
sub
repz
mov
sub
inc
movsb
cld
xor
dec
std
dec
mov
in
jl
inc
mov
idivb
rcrb
andps
lcall
dec
test
out
inc
pop
lock
cltd
emms
jnp
dec
ret
dec
out
cs
add
movsb
imul
sbb
out
dec
loop
pop
out
push
xchg
pop
xchg
repnz
cld
mov
jns
xchg
out
stos
jbe
push
mov
inc
lea
clc
dec
out
wbinvd
lea
push
cmpsl
das
lods
call
sub
shl
adc
cmpsl
ss
test
js
or
lcall
roll
js
push
cs
pop
fwait
sbb
pop
or
je
mov
mov
cmp
inc
popf
clc
cmpsb
jge
jle
sbb
test
mov
mov
jle
adc
add
imull
pop
arpl
or
mov
push
into
es
lea
sti
mov
inc
mov
popf
pop
jo
pushf
popa
xor
dec
fidivrl
fdivl
cs
scas
mov
jb
ss
scas
sahf
xor
mov
stc
mov
jecxz
xchg
clc
push
lock
dec
rolb
lcall
jp
shll
movl
mov
cwtl
loope
insb
orl
xchg
cmp
push
out
std
hlt
pop
sub
das
pusha
sbb
sub
in
xlat
aas
mov
loope
les
fs
lret
xchg
daa
xlat
fsubl
nop
shrl
in
aad
mov
mov
roll
inc
fistps
mov
movsb
ss
movsb
adc
repnz
mov
jg
pop
movsb
push
aad
push
lds
mov
mov
ja
stos
insb
je
iret
hlt
xor
sub
or
subl
add
pop
cli
dec
arpl
out
cli
out
cld
out
mov
ss
dec
in
mov
ss
dec
push
mov
push
adc
add
loopne
ret
addr16
dec
push
mov
xor
pop
or
add
inc
enter
sarb
mov
xchg
mov
lcall
jp
out
inc
das
cs
mov
or
push
test
ret
sbb
sbb
xchg
sub
adc
lcall
jo
mov
lahf
add
out
aam
sbb
clc
inc
sub
mov
push
mov
jle
ja
popa
jae
and
stc
cs
lods
cmpsl
cmp
xor
insb
and
mov
rcrl
cmp
movsb
mov
mov
mov
pop
xchg
bound
fstps
lock
pop
cld
xchg
cli
jp
loope
xchg
fists
mov
ret
fnstenv
jo
leave
xorb
cmp
loopne
mov
xchg
dec
loopne
shrb
dec
nop
mov
int3
xor
xor
ret
add
rorb
cmp
nop
push
data16
mov
sub
imul
adcb
push
movsb
cmpsl
mov
std
inc
lcall
out
pushf
into
das
push
cmp
add
xchg
loopne
ret
xor
push
repnz
orb
pop
in
push
call
je
adc
jne
dec
out
add
or
pop
ja
jbe
pop
cmpsl
loop
gs
shll
mov
cmp
inc
rcll
jmp
sub
leave
cmp
push
sti
ljmp
and
rcr
in
fs
rorl
insb
mov
or
int
lods
cmpsb
add
xor
jge
and
outsb
cmp
cli
idiv
ss
les
mov
cmpsb
es
cmp
nop
icebp
nop
lret
aaa
or
jae
inc
into
push
sbb
jo
add
pop
hlt
aam
dec
xor
in
andb
out
adc
ret
jbe
sbb
inc
jle
push
testb
mov
fnstenv
jmp
cli
mov
in
int3
fwait
sub
sbb
add
lds
cwtl
movsb
adc
sti
iret
mov
lcall
jbe
fs
mov
inc
jle
icebp
xor
andl
mov
cwtl
lods
sub
out
sub
scas
out
jmp
sub
jmp
mov
mov
sti
mov
xor
int3
std
outsb
pop
icebp
pop
adc
mov
imull
jmp
std
fisubl
std
pop
xor
inc
add
inc
and
fmull
bound
je
xchg
sbb
popf
insl
divl
bound
sbb
popf
int3
xchg
dec
dec
cmpb
movsb
out
xchg
leave
les
add
stos
lock
sbb
repnz
lahf
jae
inc
les
push
or
enter
jl
shll
sbb
mov
xlat
inc
jno
fwait
out
xchg
fcoms
adc
sub
mov
divl
fistpll
je
jle
jnp
add
fmuls
xchg
mov
lods
mov
int
lret
mov
je
adc
outsl
inc
stc
sbb
add
push
mov
inc
and
adc
cld
mov
jno
fcmovu
sub
push
mov
fcmovb
or
or
adc
push
jecxz
out
leave
shrb
sbb
mov
gs
fwait
pop
inc
jge
test
or
js
cmc
xchg
xchg
dec
xchg
nop
loopne
cmp
fsubrl
aas
mov
inc
fdivs
sbb
fildll
lcall
testl
xor
pop
mov
scas
and
cmpsb
leave
jmp
mov
adc
in
xchg
cmp
inc
pop
mov
jg
nop
mov
jecxz
sub
fcompl
jle
sbb
pop
std
cld
repz
jecxz
into
or
jge
insl
fadds
jns
dec
mov
adc
cmpsl
mov
aad
sbb
sahf
dec
sbb
and
pop
mov
imul
xchg
lock
jb
pushf
sbb
jp
jmp
cmp
lods
fistpll
fwait
mov
stos
out
cmp
xchg
adc
popa
mov
push
xor
into
cli
leave
or
test
mov
add
jecxz
mov
sti
test
gs
outsb
pop
sbb
pop
fpatan
jno
adc
ss
fwait
xchg
dec
jnp
imul
mov
pop
pop
int
sti
inc
movsb
pop
and
pop
mov
test
xchg
push
scas
pop
sub
cmp
enter
xchg
sbb
sahf
or
pop
cld
or
dec
sbb
jne
lock
or
jae
mov
addr16
mov
xor
pop
dec
jg
jo
les
outsl
pop
lret
jb
out
push
pop
test
leave
xor
div
test
cmp
sbb
or
mov
mov
dec
lahf
dec
mov
push
xor
mov
pop
loope
jle
sub
mov
mov
xchg
sahf
or
mov
pop
mov
rcrb
xchg
lods
aam
pop
and
xor
sahf
mov
or
stc
push
or
xchg
sub
icebp
mov
pushf
sbb
jge
in
mov
iret
je
sbbb
dec
imul
jae
iret
bound
aad
dec
xchg
mov
outsb
xchg
scas
lods
jg
out
test
test
push
mov
nop
xchg
dec
call
add
pusha
dec
aaa
push
out
pop
cltd
push
sbb
imul
js
mov
out
je
xchg
xchg
icebp
jno
and
xchg
sbb
ljmp
outsl
and
scas
pop
mov
imul
fsubr
cli
xchg
add
inc
dec
cwtl
subl
ja
jg
sub
mov
sub
mov
dec
and
out
aad
hlt
jmp
jmp
idiv
scas
jmp
push
cmp
out
shrl
sub
sub
mov
ret
inc
lock
fcomps
mov
lret
out
jge
pop
pop
push
fisttps
or
cld
iret
push
clc
shll
jge
push
movsb
insb
leave
ss
iret
xchg
and
aam
test
xchg
jge
aaa
pushf
sahf
pushf
sahf
push
push
ss
mov
mov
push
mov
xorb
out
loopne
stos
js
cmp
mov
push
stos
cld
std
jns
mov
xchg
jnp
xchg
lods
fistl
push
fidivrs
dec
xchg
lcall
insl
dec
xor
xchg
dec
or
insl
addr16
rol
push
aaa
adc
or
mov
addb
add
mov
and
dec
or
test
xchg
roll
fisttpl
or
jb
pop
or
mov
call
outsb
xor
scas
hlt
fwait
mov
loopne
mov
pop
es
addr16
xor
cmpsb
add
shl
in
mov
adc
push
dec
std
dec
scas
or
sbb
pop
jp
mov
call
inc
xor
inc
ljmp
test
insl
jp
pop
jo
mov
bound
jp
outsl
test
dec
inc
das
cmp
in
pop
clc
cmc
testb
test
imul
xlat
or
jo
mov
sub
push
scas
test
daa
icebp
dec
lcall
mov
in
jae
leave
fwait
xor
imul
sub
lahf
mov
jle
jp
jne
loop
popa
and
adc
push
dec
iret
adc
es
push
bnd
adc
mov
movsb
xor
jmp
mov
sbb
add
add
sahf
ljmp
pop
xlat
pop
mov
test
and
in
fwait
pop
popf
lahf
pop
jl
mov
enter
rep
mov
add
cltd
sbb
jne
ljmp
insb
inc
xor
outsl
and
pushf
std
insl
add
test
aaa
adc
xchg
ss
cmp
jle
popa
jmp
stos
mov
mov
cwtl
xor
mov
les
cmp
mov
push
jbe
push
mov
mov
push
mov
pop
ja
les
sub
mov
ret
ret
ror
or
ja
fnstenv
and
pop
cld
push
sbb
mov
jns
pop
int3
inc
and
sbb
fucomip
lret
mov
stos
test
or
and
outsl
xor
out
std
fistpl
pop
hlt
das
pop
fstpt
xor
xor
xchg
cs
cwtl
andb
or
popf
push
xchg
cmp
mov
mov
dec
cmpsb
fisttpl
jecxz
jecxz
cvtps2pi
cltd
cli
cli
pusha
movsb
ljmp
mov
test
xchg
xlat
mov
stc
mov
jmp
cmpsb
push
mov
test
ds
push
jne
cwtl
push
or
inc
jae
add
jge
mov
mov
cmp
pop
push
out
repz
bound
mov
out
jae
nop
in
stos
fcmovne
cld
cmp
int
shl
and
fldcw
mov
cwtl
adc
or
mov
xchg
mov
popf
jns
cltd
push
aam
insb
andb
shll
mov
les
cmp
add
jg
fsts
inc
xchg
into
and
iret
outsb
pusha
xchg
in
sub
push
rorl
jmp
mov
repz
mov
iret
dec
inc
cmc
adc
cld
sub
and
out
add
out
lea
or
andb
int3
into
cltd
aam
fsub
inc
push
cld
sub
sbb
lcall
repz
outsb
mov
jmp
daa
mov
adc
enter
popf
pop
cmp
xchg
shlb
shlb
xchg
xchg
cwtl
loopne
or
int3
pop
jns
mov
mov
pop
scas
hlt
and
or
inc
insb
rclb
jecxz
xorb
cmp
xchg
jne
adc
fsubs
je
ja
sbb
mov
shrb
mov
adc
adc
lods
int3
ret
pushf
xchg
or
testb
jb
sbb
cmp
sahf
std
shlb
jl
push
sub
jl
sbb
xlat
je
es
insb
and
mov
gs
dec
mov
mov
mov
iret
divb
pop
lret
mov
cmp
and
inc
jno
and
inc
inc
mov
mov
clc
sub
fnstsw
lods
push
pusha
jne
insb
icebp
or
xchg
addr16
sub
loopne
push
fsubr
sub
dec
add
pop
jns
into
in
xchg
push
imul
jg
data16
insb
out
push
lods
or
dec
jne
int3
fistpl
imul
dec
iret
fdivrl
lret
ret
std
jp
popa
icebp
call
incb
lret
popf
jg
rcll
push
iret
insl
mov
inc
shrw
adc
sub
xchg
hlt
push
inc
out
mov
inc
push
in
push
inc
hlt
mov
mov
add
lods
jg
ds
lods
addr16
popa
cltd
imul
add
sbb
jecxz,pn
imull
jns
inc
or
std
lea
or
cld
adc
das
cmp
xchg
outsb
sub
cs
ljmp
cmp
mov
out
xor
leave
xchg
cmpl
jbe
inc
and
cmp
sbb
jle
pop
and
and
out
cld
jmp
inc
and
movsl
or
movsl
mulb
jne
cmp
mov
mov
mov
sbb
cltd
or
scas
arpl
cmp
cltd
add
xchg
mov
rcrl
lods
aas
stc
push
add
les
loopne
int3
and
push
ss
leave
jns
push
frstor
mov
addr16
pop
int3
jge
ds
mov
mov
push
mov
nop
push
push
jecxz
notl
fdivrs
xor
push
mov
test
loopne
push
adc
clc
imul
add
fisubs
jno
popa
inc
test
sahf
fstl
add
or
lahf
movsb
jmp
xchg
aam
mulb
mov
fnsave
jne
movsl
push
jo
adc
or
int3
and
add
icebp
dec
sub
movsl
push
add
sar
sbb
lods
xchg
or
push
lahf
jae
sub
push
sti
flds
fdiv
fs
mov
fadds
mov
mov
lahf
xor
sbb
loope
dec
pop
ret
dec
jg
lock
out
push
stc
pushf
movsl
cmp
ja
pushf
movsl
je
fwait
test
fs
mov
call
mov
xlat
in
adc
mov
lds
fisttpll
mov
sbb
dec
pop
stos
xchg
mov
push
js
jg
cmpsl
insl
xor
popf
leave
cmp
jne
xchg
and
mov
out
stos
or
mov
in
mov
lea
andl
inc
mov
addr16
dec
mov
sbb
cmpsb
enter
ds
xor
shr
xchg
inc
push
fldl
push
loop
std
sub
lcall
cmp
xor
add
and
lods
test
test
inc
cmpsb
lret
and
xchg
sbb
fsts
fists
jns
out
jo
push
nop
mov
mov
push
sbb
add
pop
pop
sub
ds
or
pushf
cmp
xchg
mov
xchg
xor
aaa
mov
mov
pop
pop
mov
push
sub
xor
cs
bound
fwait
fld
inc
mov
mov
lods
aam
outsl
insl
mov
adc
adc
dec
mov
aad
push
or
dec
sub
push
jge
or
sbb
aad
jb
mov
jecxz
sti
sbb
mov
cmp
loope
cmp
xchg
ret
into
xor
pop
mov
cmpl
mov
inc
ret
shrl
jge
jb
lods
mov
mov
shll
pushf
jmp
pop
dec
and
or
jle
dec
out
sbb
dec
jecxz
mov
je
aad
mov
jecxz
imul
jb
sbb
aaa
roll
xchg
loop
xchg
dec
xor
fildll
ficomps
jge
testb
push
or
xchg
ss
inc
ret
mov
xchg
jp
sbb
addr16
jmp
loope
mov
in
pop
and
gs
lods
xchg
xor
or
jo
negl
pushf
or
add
jne
cmpsl
inc
push
cmc
or
mov
push
icebp
mov
divb
jae
add
not
ja
xchg
jns
jbe
sbb
or
insb
adc
jmp
pop
dec
mov
pop
jl
and
bound
jae
mull
test
hlt
lds
out
cmpsb
in
jnp
mov
js
mov
push
pop
lahf
adcl
dec
push
test
lahf
push
aas
sub
mov
jg
push
ret
jbe
mov
lods
dec
xor
mov
int3
xchg
jmp
push
adc
fisubs
lret
lds
rolb
mov
and
mov
cltd
clc
fadd
push
in
add
movsb
sub
dec
ret
push
outsl
and
xor
push
fwait
pop
sub
mov
push
xor
fadds
push
cmp
add
mov
or
test
cmp
cmp
stc
xor
sub
mov
and
out
dec
jmp
daa
lock
jne
mov
adc
int
jg
pop
or
xlat
insb
jns
imul
dec
sbb
push
movsl
scas
xchg
cmp
inc
mov
imul
inc
lret
lea
mov
pushf
cmpsb
jnp
in
or
icebp
or
push
jmp
xor
jbe
dec
mov
mov
lcall
ds
and
cltd
mov
sub
mov
bound
outsl
and
and
imul
adc
and
adc
jno
xchg
cmp
scas
pop
sbb
jle
mov
loop
andb
outsl
int3
pop
mulb
pop
inc
xchg
mov
mov
xchg
pop
cmc
aas
ss
and
push
inc
adc
push
xor
mov
inc
int3
push
xor
xchg
dec
mov
scas
ficomps
inc
push
pop
es
daa
das
add
pop
xlat
xor
inc
fwait
push
add
fucomp
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
jmp
fistpll
lcall
fs
mov
imul
and
cmc
add
in
mov
jb
dec
fdivrl
lret
stos
or
adc
int3
cmpsb
jmp
or
jo
mov
out
lret
fdivrs
cltd
xchg
hlt
mov
mov
outsb
stos
mov
push
xchg
in
or
sub
lods
leave
dec
jp
addr16
mul
mov
test
rcrb
mov
jnp
lods
sahf
addl
cltd
pop
sub
cmc
movsl
jmp
sbb
ja
mov
aad
pop
lret
xchg
rorl
mov
or
mov
cmp
dec
int3
loope
lahf
imul
mov
jecxz
shr
fidivl
js
pop
call
arpl
jmp
ljmp
add
rcr
fisubrs
or
jg
sub
xchg
pop
fcomp
push
or
adc
in
sbbl
pop
addr16
in
jo
mov
push
rcrl
cmp
xchg
xchg
mov
add
cmpsl
lea
sub
push
fwait
push
rolb
mov
clc
int
adc
xchg
inc
fdivrs
sub
add
rorl
sarl
pop
sub
mov
movsb
inc
mov
sub
or
mov
mov
ss
mov
jmp
push
ja
mov
cwtl
stc
fmul
push
lcall
cltd
mov
insl
jge
adc
jne
call
add
daa
adc
pop
jle
push
mov
mov
mov
and
incb
xchg
pop
and
lock
mov
sub
loopne
adc
scas
add
mov
rol
jle
test
ja
mov
or
clc
cmp
cld
sbb
es
pop
xlat
push
js
add
stos
add
ss
data16
push
rolb
pop
sub
mov
push
fstpt
push
cltd
and
xor
into
ljmp
inc
decl
push
xchg
or
out
mov
popw
add
push
inc
mov
lcall
adc
sbb
nop
cmp
inc
daa
sahf
pop
adc
and
sub
data16
icebp
fs
push
mov
add
insb
adc
push
jl
aad
iret
xchg
push
jge
dec
adc
jp
addb
mov
cmpsl
jg
lret
inc
cmc
adc
fisubrl
add
dec
aam
pmuludq
pop
int
into
movsl
dec
ja
imul
or
dec
cmp
leave
out
xchg
test
popf
sbb
mov
sub
dec
movsb
outsl
fistpll
roll
mov
imul
push
sub
jno
imul
push
insb
xchg
call
loope
push
ss
pop
outsb
mov
sub
mov
shlb
inc
jmp
dec
pop
or
iret
les
push
arpl
sub
jo
inc
mov
test
add
movsl
or
fsubl
xor
popf
cmp
cltd
dec
push
mov
les
mov
and
mov
or
repz
pop
nop
out
push
out
add
adc
es
and
push
iret
sub
pop
sub
movsl
incb
dec
mov
lret
lock
loop
inc
add
jae
or
enter
mov
mov
cmp
push
testb
mov
fdivrs
sbb
add
imulb
dec
dec
or
hlt
mov
xchg
sbb
sbb
jns
enter
dec
jb
pop
std
push
sub
loopne
imul
xor
sahf
fnsave
test
xchg
mov
jmp
aaa
add
call
sub
gs
sub
cmp
inc
lock
enter
pop
cmp
dec
pop
mov
adc
jno
leave
mov
sbbb
scas
jl
lcall
add
push
xchg
lcall
xchg
mov
mov
scas
imulb
cmp
add
xor
cs
dec
dec
or
mov
addb
fcomi
sbb
lcall
cmp
repz
inc
insb
popf
pop
loope
cs
push
jmp
addl
ds
ljmp
or
or
adc
adcb
push
sub
push
daa
inc
sbb
int3
pop
pop
and
push
aaa
xchg
lock
aaa
fisubl
sub
aaa
xchg
std
scas
icebp
movsb
jg
sbbl
loopne
subps
loop
scas
mov
movl
dec
addr16
es
out
pop
mov
adc
stos
into
pop
push
inc
testl
inc
add
stc
mov
dec
leave
pop
icebp
shrl
int3
inc
fistps
lods
sbb
jg
mov
cmp
cmpsl
test
mov
jbe
outsb
lahf
in
and
xor
xchg
popf
and
push
cltd
movhps
or
pop
jb
sbb
fisubl
sbb
out
std
lret
add
or
jl
and
mov
enter
pop
push
sub
dec
scas
insl
push
andb
dec
jae
push
sub
gs
addl
bound
sti
test
jno
jnp
sarb
aad
mov
cltd
mov
in
leave
jle
sbb
inc
mov
sub
mov
ja
xchg
jbe
mov
icebp
inc
fbstp
or
addr16
mov
lea
in
adc
push
js
sbb
mov
std
xchg
ss
add
jl
lret
ja
cmc
outsl
ret
fdivl
xor
dec
test
pop
out
and
in
and
sti
insb
stos
movb
into
lods
jmp
outsl
cmpsl
pop
pop
xor
divl
mov
mov
push
js
xor
sub
cmp
mov
push
loope
repz
add
sbb
popf
clc
add
push
fwait
pusha
mulb
mov
jne
adc
cli
mov
mov
mov
out
icebp
cmc
aad
mov
out
cmp
ret
js
mov
pop
movsb
es
adc
les
lea
lret
adc
movsb
push
pop
jb
mov
push
mov
adc
sub
movsl
fwait
rorl
roll
or
push
inc
xor
leave
sahf
add
pop
test
aam
ret
xlat
cwtl
mov
cmp
daa
pusha
nop
cwtl
push
call
daa
and
fstps
adc
jmp
rol
fcmovne
fnstsw
movsb
es
xchg
or
test
sub
jle
adc
pushf
imul
stos
and
mov
or
imul
inc
aam
popa
test
cmc
and
jecxz
xchg
push
js
push
out
mov
scas
data16
pop
jle
jl
pop
or
ss
pop
mov
shl
daa
aaa
call
xchg
cmpsl
and
nop
adc
es
js
fmuls
dec
emms
std
mov
cmp
mov
shll
out
jmp
cmp
sbb
subb
dec
out
adc
lea
pop
out
sbbb
xchg
imul
aam
mov
mov
inc
cwtl
add
test
push
sub
pop
jne
lret
adc
call
hlt
inc
mov
mov
pop
lcall
pop
push
mov
insl
inc
cmp
in
mov
push
loopne
lea
repz
in
scas
mov
repnz
scas
sub
xchg
dec
ds
scas
add
xchg
aam
dec
ret
xor
cmp
push
neg
int
push
out
mov
shrb
repz
mov
sub
cmp
jbe
jb
mov
sarl
fwait
fwait
jns
testb
sbb
aad
popf
lcall
add
jmp
cmp
jecxz
push
data16
cmp
loope
loope
adc
add
sbb
and
negl
sahf
inc
pop
mov
outsb
idivl
xor
sbb
cs
dec
call
pushl
jb
and
add
jne
cmp
test
scas
jl
and
sub
fimull
or
jl
cmp
psubusb
add
repz
xor
cwtl
jae
mov
fdivrl
adc
loop
dec
lcall
in
or
mov
jo
mov
and
dec
test
clc
leave
jecxz
orl
insl
ja
aam
mov
out
cld
out
adc
xchg
stc
xchg
sti
mov
mov
jecxz
int
cld
pop
inc
das
stc
inc
xchg
mov
add
cmp
stos
pushf
jne
pop
mov
movsb
cwtl
mov
mov
cmp
fldt
mov
nop
fists
mov
testl
shlb
int3
lock
mov
xchg
jns
jle
out
stos
fiaddl
pop
jb
fmull
subl
stos
in
sar
jp,pt
jecxz
pop
loop
add
sbbb
outsl
pop
mov
arpl
push
das
lock
sbb
mov
aaa
fdivs
mov
fldl
xchg
inc
test
pop
xor
jle
xchg
xchg
popa
adc
out
daa
sub
int
cmp
ss
inc
jno
int
call
retw
inc
stc
sbb
or
cmc
sbb
add
rcl
xchg
mov
add
inc
cld
int3
loope
icebp
arpl
jp
fs
push
ret
hlt
aad
xchg
mov
pop
jp
dec
out
mov
ret
push
andb
lds
call
or
adc
js
adc
xor
and
push
cmp
sbb
stos
nop
loopne
out
add
insb
mov
repnz
cwtl
sbb
mov
in
push
sub
pop
sub
xchg
js
loop
mov
xchg
inc
xchg
cmpb
pop
shlb
xor
inc
cmpsl
inc
xor
pop
aaa
repnz
and
lock
leave
scas
out
xor
push
or
and
loop
mov
fs
xor
cli
leave
jno
xor
adc
cltd
shrl
lods
ret
xor
negb
mov
mov
add
fs
daa
lret
jns
pop
push
sbb
dec
shrb
dec
les
movsl
dec
fidivrl
mov
out
adc
test
xchg
call
sbb
and
lea
push
cld
jb
cmp
cltd
cmp
inc
fsub
cmp
sti
adc
jo
repz
cmove
int3
lea
add
pop
adcb
inc
decb
popf
pushf
pop
js
jge
data16
jb
and
adc
call
sub
movsl
push
arpl
push
pop
lret
jge
jmp
mov
out
shll
xor
push
call
jae
xlat
mov
mov
test
cmp
cmp
inc
fs
push
movsb
xor
inc
pop
std
push
fsts
shld
out
hlt
mov
push
xchg
pushf
mov
sub
or
loope
popf
push
fildll
jle
or
xor
scas
xor
and
lret
jb
push
clc
out
insl
inc
fistl
sub
xchg
aas
mov
jl
cmp
mov
push
test
inc
mov
fucomip
pop
stos
mov
repz
enter
inc
stc
or
insl
aas
inc
sbb
fcomps
testl
push
cli
loope
lahf
into
jg
shlb
aas
loop
sub
cli
int3
addb
or
dec
pop
dec
outsl
aam
fisubl
push
stc
pop
aas
lea
in
mov
sub
xor
aad
aam
dec
inc
xor
pop
nop
cmc
dec
mov
adc
enter
jbe
push
loopne
repnz
xchg
cmpsl
imulb
scas
or
stos
pop
orb
je
and
fistps
iret
adc
lods
cmpsb
adc
or
pop
in
in
mov
and
xchg
xchg
mov
test
popf
pop
fisubrl
jnp
xor
loopne
dec
arpl
jno
fdivrl
cmp
fldt
inc
pop
stos
mov
push
daa
or
decl
lods
push
rcr
cmp
adc
test
out
sti
add
ja
push
mov
gs
outsb
xchg
out
and
aad
or
cmpsb
mov
dec
scas
mov
lods
xchg
vsqrtsd
adc
sbb
mov
dec
add
xor
mov
xor
fwait
or
lds
ljmp
adc
dec
int
cwtl
push
cmp
pop
insl
cmc
fwait
les
sbb
loopne
andl
adc
push
or
mov
arpl
loopne
or
xlat
jle
incl
sar
lods
and
sbb
ret
ljmp
outsl
or
jne
cmp
cltd
fnstcw
dec
sbb
jle
sbb
clc
ret
xor
sub
scas
sbb
xor
scas
lock
into
adc
in
popa
out
into
mov
popl
mov
das
in
push
in
lock
inc
ss
inc
dec
aad
push
or
jp
adc
cmp
and
movsl
xor
fcoms
or
or
sbb
mov
loope
jg
movsl
inc
addl
fildl
stos
loopne
add
jb
lds
inc
mov
mov
adc
test
into
jl
lods
pop
insl
mov
gs
xor
lcall
rcr
lock
adc
push
orl
mov
test
fcomi
cmp
pop
cli
mov
cmp
inc
jge
sub
inc
xor
push
sarb
and
mov
xor
and
inc
addr16
and
lods
jne
fnstcw
aad
mov
out
movsb
jne
in
loopne
mov
or
jbe
rorl
in
adc
push
je
or
jle
loope
int
inc
cmpsl
lock
dec
pushf
pop
dec
out
je
lcall
aam
xchg
xor
repz
adc
add
out
mov
jns
lret
pop
mov
adc
cmp
loopne
rclb
fnsave
lea
jmp
mov
pop
adc
jbe
data16
imul
sbb
mov
mov
ljmp
cmp
arpl
pop
jbe
std
pop
mov
popf
and
aas
adc
mov
into
xchg
in
fwait
inc
movsl
push
add
mov
sub
ret
test
xor
jno
add
sub
lret
or
mov
int
pushf
or
mov
cmp
mov
mov
add
ret
enter
pop
outsb
cmp
push
sbb
in
mov
lds
mov
out
mov
jno
sbb
cs
dec
push
gs
dec
or
cmp
movsl
popl
mov
and
push
xchg
leave
cmpsl
in
cmpsl
dec
in
test
int3
movsb
das
adc
sti
inc
pop
sahf
scas
insb
inc
jb
mov
test
fwait
or
adc
fsub
jnp
gs
imul
loop
add
icebp
pop
or
xor
lea
movl
scas
mov
test
push
out
test
sub
dec
mov
aas
push
mov
or
leave
jo
jle
out
mov
aaa
sarb
dec
ret
push
daa
insb
xchg
add
sub
mov
lds
push
rorl
stos
inc
lock
iret
sarl
dec
mov
and
xor
push
jnp
xlat
or
xlat
lock
mul
push
repz
mov
sub
fcom
mov
add
sbb
fiadds
popf
and
icebp
mov
mov
cmpl
pusha
test
or
fadd
dec
push
dec
push
sbb
fwait
pusha
xor
lea
pop
xor
add
repz
add
sub
stos
adc
jnp
mov
icebp
lret
test
mov
cmpl
rolb
mov
xor
and
pop
cmpsl
xor
pop
icebp
mov
pop
nop
pusha
int
pusha
mov
push
shlb
mov
sub
sub
das
and
xor
clc
ja
daa
add
mov
mov
test
xchg
pop
ret
ret
cmpsl
nop
push
push
ret
add
lret
push
push
inc
pop
insb
dec
out
into
or
adc
sub
out
and
imul
jl
cmc
dec
mov
ret
add
dec
loop
loopne
addr16
jne
xchg
jle
mov
nop
dec
jae
sbb
pushf
lcall
xchg
lahf
mov
bound
sbb
icebp
push
push
push
xor
andl
aam
add
or
jo
xor
jo
call
call
add
mov
pop
test
int3
push
mov
pop
sbb
push
jae
arpl
dec
int
jp
mov
mov
xchg
xor
fidivrl
popa
shll
lods
ja
lds
xor
and
les
in
lods
sbb
fisttpl
sbb
xor
jb
leave
push
arpl
fisubs
push
mov
icebp
ret
jg
mov
ficoml
sbb
ret
jno
in
sbb
fistpll
mov
and
push
pop
call
iret
shlb
out
mov
xchg
insl
dec
sti
pop
scas
arpl
cld
mov
fcmovu
leave
dec
gs
cmpsb
sti
jmp
inc
in
mov
dec
insl
jne
add
movsb
cmp
rcr
cmp
inc
div
cmpsl
push
dec
jmp
xlat
rclb
dec
pop
nop
add
xchg
jmp
and
xor
pop
and
lea
mov
ljmp
inc
cmp
mov
lcall
push
out
or
xor
sti
movswl
int
dec
popa
dec
xchg
outsb
fldcw
sub
lahf
jo
xchg
xchg
call
addr16
mov
jg
cmp
or
and
mov
or
or
jnp
dec
std
fdiv
loopne
mov
push
add
iret
or
test
mov
out
mov
bound
inc
pop
add
adc
inc
minps
dec
ret
loopne
jbe
fidivs
mov
xor
loop,pt
call
xor
push
cld
dec
jno
mov
dec
mov
mov
lahf
pop
sub
mov
clc
stos
pop
or
mov
xchg
jns
adc
push
test
sub
sbb
clc
stc
pop
sarl
incl
adc
cmc
dec
jno
dec
jbe
jo
fistpll
test
xchg
and
aam
jge
fdivrs
and
jbe
sbb
nop
cmp
or
sahf
bound
mov
hlt
data16
xlat
mov
shrl
mov
shrb
rorl
or
dec
xor
cmpb
sbb
and
xchg
fsubrp
sti
sbb
dec
add
or
cmp
and
push
bound
cwtl
inc
push
jmp
pop
adc
or
ud0
sahf
call
lods
push
adc
out
fimuls
jmp
and
and
js
add
gs
mov
xchg
mov
and
shrl
jo
mov
cld
orl
sbbb
mov
or
notl
mov
aam
ret
jmp
insb
xchg
loope
push
outsl
mov
or
jle
data16
cmp
test
xor
or
in
jbe
pusha
jmp
xor
xor
or
daa
mov
jae
stos
jg
addr16
addr16
add
jmp
fwait
pop
aaa
pop
jnp
arpl
int
jne
cmp
icebp
sti
popf
xor
add
arpl
sbb
mov
stc
stos
les
adc
adc
and
ret
imul
fstpl
adc
push
ficoml
sti
add
xchg
jne
push
arpl
scas
xor
fs
out
xor
sarb
sub
adc
or
iret
adc
xor
cwtl
pop
iret
or
std
test
jnp
push
sbb
adc
and
pop
ret
cmp
xchg
cmpsb
mov
cmp
subb
add
lret
dec
cmp
pop
fcoml
adc
in
add
divl
mov
push
dec
lds
repnz
clc
iret
jmp
push
es
cvtpi2ps
mov
lcall
xchg
push
inc
in
ficoms
jecxz
or
dec
stos
inc
inc
loope
lret
test
push
mov
pushf
or
inc
dec
repz
jecxz
jp
cld
cs
ret
into
aas
sbb
ret
lea
daa
jae
mov
inc
cld
xor
repnz
sarb
xorb
outsb
add
mov
ficoms
imul
sti
arpl
jne
bound
ret
cmp
jmp
int
ficoml
loope
in
fsubrs
push
pop
sub
and
out
adc
mov
add
sub
push
repnz
gs
cmp
dec
repnz
jae
mov
add
stos
jge
mov
push
mov
dec
fucomi
mov
sub
sbb
mov
hlt
in
mov
adc
test
fcompl
int3
shrb
mov
mov
mov
cmp
mov
jne
dec
mov
loopne
sbb
xor
push
sub
mov
pop
push
jmp
cmp
mov
mov
call
jle
ljmp
insb
or
jns
fdivr
mov
nop
cmp
fld
push
adc
sub
inc
pop
push
test
shrb
stos
push
mov
orb
sbb
inc
mov
pop
fwait
mov
pop
testb
mov
sbb
sub
in
shlb
les
lcall
pusha
mov
scas
jge
in
adc
and
sub
arpl
les
sti
add
dec
inc
bndldx
dec
or
mov
addr16
test
add
adc
pop
sub
ds
pop
xchg
scas
shll
jo
incb
dec
iret
bswap
repnz
pop
adc
mov
in
rclb
test
rorl
cltd
add
sbbl
mov
push
movsl
push
xchg
rclb
scas
push
adc
insl
jg
inc
sbb
cmp
sbb
in
sahf
adc
xchg
insb
cmc
mov
cmc
mov
dec
inc
int3
pop
popl
mov
lods
negb
pushf
dec
cltd
sahf
call
mov
leave
push
jg
mov
outsb
hlt
int3
leave
rorl
popa
test
xor
cwtl
push
ret
jmp
sbb
jne
cmp
scas
lret
cmp
sarb
insb
arpl
add
and
orb
pop
lcall
negl
aam
out
lods
in
pop
test
imul
out
arpl
push
mov
cmpsl
pop
inc
dec
jae
or
jl
das
xchg
jecxz
or
arpl
sub
push
lret
and
inc
lods
fdivrl
and
in
cmp
jle
imull
add
pop
pop
dec
push
sbb
lea
int
or
arpl
cmp
addr16
sub
fldcw
cmp
movsb
inc
sbb
sbb
aad
js
pop
mov
and
out
sub
lahf
rcl
stos
popf
daa
adc
sub
inc
insb
sbb
mov
cmc
aad
sub
and
fdivr
dec
enter
and
pop
jne
inc
fdiv
jl
cmpsb
dec
pop
jae
jle
mov
push
aas
out
loopne
xchg
in
es
test
int
or
rcr
stos
jl
mov
and
xchg
loope
push
punpckhdq
icebp
xor
out
xchg
jne
daa
stc
jns
and
and
flds
dec
stos
movsb
aad
cmp
xor
gs
inc
cld
rclb
aas
jne
dec
inc
ret
scas
xchg
pop
add
mov
stos
jmp
mov
fwait
lret
mov
dec
push
push
inc
mov
loop
sbb
dec
pop
jne,pn
dec
pop
or
cs
pusha
adc
insl
cs
jns
test
jno
outsl
lds
xchg
movsl
bound
sub
mov
cmpsl
jp
xchg
or
jns
lcall
sbb
pop
ret
adc
jno
and
aad
sbb
inc
out
mov
push
sub
cmc
fwait
mov
jmp
out
mov
imul
inc
mov
and
enter
insb
cmp
divb
lret
lret
or
jp
fisubl
daa
out
or
cmp
cmp
cmp
pop
jg
and
pop
in
mov
add
stc
push
jg
cs
adc
mov
ds
mov
ljmp
or
inc
pusha
or
in
shll
enter
push
movl
mov
iret
clc
stos
repz
mov
imul
insl
aas
push
cwtl
and
pushf
lret
pusha
adc
xchg
lcall
mov
in
dec
sahf
dec
imul
lcall
mov
enter
sub
jne
xor
sub
cmp
rcrb
adc
enter
stc
mov
ja
aaa
adc
inc
jb
xchg
pop
shrl
pop
rcrb
sahf
es
in
ret
cs
andb
cmpsl
cwtl
daa
add
jns
insl
lea
ss
xor
lods
movsl
bound
inc
out
popf
aas
adc
idiv
adc
pop
cmpsl
fwait
sbb
push
sub
xor
push
push
xlat
int
into
imull
and
mov
sbb
sub
pop
out
rcrl
pop
repz
push
in
inc
iret
fsubs
mov
mov
xor
addr16
mov
rorl
mov
filds
aam
add
fld
dec
sbb
ljmp
sar
sahf
cwtl
addr16
sub
pop
add
xlat
mov
nop
lcall
sarb
push
add
dec
jns
dec
push
mov
jne
cmp
sysexit
jae
and
xchg
cmp
cmp
pop
sbb
push
pop
movsl
pop
leave
cmp
fisubrs
inc
movsb
push
int3
pop
xchg
stos
xor
mov
jno
ljmp
cmp
pop
call
je
je
push
jmp
leave
mulb
ret
jecxz
addb
dec
pop
cmp
push
xor
inc
jp
cmpsb
push
xlat
sbb
pop
leave
mov
xchg
gs
mov
mov
scas
inc
dec
mov
das
in
enter
fadd
add
pop
pop
push
fsubrp
xchg
insl
jb
and
test
in
lahf
sub
jmp
imul
add
sub
push
sub
sub
cmp
mov
add
jo
pop
or
ja
xchg
std
xor
shlb
loop
popa
jl
cmp
pop
sbb
sub
jae
fisttpl
push
in
shrl
je
lea
imul
movsb
adc
mov
ret
xchg
sub
lret
cmpsl
shlb
data16
je
push
mov
cmp
cmp
inc
dec
push
out
lea
add
push
fwait
cmp
sbb
fbld
hlt
dec
push
in
mov
nop
jg
dec
mov
jno
jns
mov
cmpsl
rorl
add
ljmp
add
cltd
push
dec
call
leave
sahf
sub
dec
dec
push
sbb
jge
stos
mov
je
push
cmc
ficoms
fmull
sub
mov
mov
or
sahf
push
out
sti
pop
addb
jns
scas
and
daa
fidivs
xchg
sbbl
sub
outsb
stos
idiv
add
insb
push
js
dec
inc
fsubr
scas
inc
inc
test
int3
dec
xchg
mov
dec
into
idivb
jge
jg
mov
xchg
and
dec
cmc
jne
fwait
cmp
mov
sbb
push
push
dec
sub
adc
enter
ret
adc
cmp
testb
jae
jg
push
pop
fdivs
fbld
out
cmc
xor
xchg
xor
icebp
sub
mov
xchg
hlt
xchg
xlat
das
mov
push
popf
or
inc
cwtl
loope
aam
jnp
push
addr16
stos
outsl
jnp
insl
addr16
adc
ja
mov
lret
mov
cs
push
pop
add
pop
cmp
loop
test
xlat
mov
popf
xorb
sbb
cmp
mov
jp
add
or
stc
xor
pop
cmpsb
vmovups
daa
test
jmp
rol
push
xor
leave
cwtl
and
outsb
jge
shll
hlt
sbb
call
sbb
incb
push
jle
jle
test
ja
mov
les
int3
mov
pop
jecxz
sti
lods
mov
mov
and
sub
fdivrp
popa
push
iret
in
movsl
inc
lods
mov
stos
cwtl
fcoml
imul
dec
imul
pop
int3
or
bound
xchg
std
push
xchg
push
test
incb
arpl
push
imul
insl
out
push
fs
je
mov
mov
jb
push
test
xchg
pushf
pop
ss
orb
push
sub
jle
insb
ds
aam
out
or
jnp
adc
lcall
cmpsl
in
jo
push
lcall
aam
arpl
in
sbb
std
pushf
and
bound
pop
cs
fstpt
adc
fnstcw
jb
mov
sti
leave
or
jno
sub
and
mov
inc
cwtl
and
aas
stc
movsl
push
ret
push
jae
pop
das
mov
ja
push
aas
cld
mov
push
cmc
jl
fadd
iret
shll
dec
sub
dec
js
ss
jne
cmp
add
ror
inc
std
add
xchg
ds
xchg
adc
loop
rcrl
lret
fnstcw
add
lods
mov
sarl
stc
addr16
test
sbb
inc
leave
adc
stc
ss
dec
mov
lods
pop
mov
lea
nop
movsl
ret
jecxz
test
lods
xchg
stos
shrb
iret
cmpsb
test
dec
fdivl
lods
add
adc
mov
out
or
sbb
jmp
and
mov
pop
aas
sub
mov
sbb
mov
mov
mov
call
loope
pop
scas
test
jge
shlb
loopne
sbb
pop
add
pop
pop
out
enter
lods
or
cli
pop
fisttpl
loope
push
sarb
jmp
popf
dec
es
mov
xchg
dec
ficoms
xchg
xchg
mov
out
ds
lods
test
sbb
xor
jnp,pt
jecxz
push
fs
xchg
ffree
lcall
xchg
es
cmp
mov
lea
mov
mov
pop
mov
mov
mov
stos
loop
and
push
cmpsl
inc
pop
jecxz
popf
push
inc
imul
imul
out
xchg
mov
and
xchg
aad
xor
and
mov
xor
call
or
in
mov
stc
or
cmp
xchg
dec
in
inc
push
into
aas
aaa
out
pop
xor
clc
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adc
mov
movl
cmpl
je
cmpl
ja
jmp
pushl
push
call
mov
dec
mov
jmp
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
push
call
jmp
mov
movl
sbb
movl
movl
cmpl
je
cmpl
jge
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
push
call
jmp
mov
movl
sub
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
jmp
mov
xlat
and
mov
js
dec
adc
mov
xchg
jl
mov
rclb
push
pop
outsb
loope
mov
adc
nop
jne
xlat
mov
adc
pushf
push
xchg
xchg
lods
jg
xor
pop
call
xchg
mov
scas
stos
not
lock
lret
jb
jbe,pt
sahf
xor
push
mov
je
adc
jno
jne
pop
test
xor
jp
jmp
dec
jp
lcall
jnp
mov
lret
cld
jle
xchg
cltd
add
jns
dec
in
aad
fisubrl
adc
add
mov
cmc
insb
jg
dec
sbb
and
xor
outsl
or
sub
or
dec
jg
jbe
inc
scas
js
push
andl
les
add
lret
mov
lods
filds
sbb
mov
add
dec
jnp
add
dec
stc
or
inc
js
in
mov
sub
fimuls
pop
mov
pop
mov
pop
xor
test
jno
sbb
mov
pop
fisttpl
popl
icebp
push
int
das
enter
mov
pop
jmp
mov
vhaddps
sub
add
inc
jno
je
cmc
sahf
xchg
mov
std
pop
adc
xor
jns
pop
xchg
das
mov
and
fcmove
das
xor
imul
test
pop
inc
lock
dec
lock
inc
sbb
loope
dec
cmp
jns
add
fldl
cmp
xchg
xchg
pushf
hlt
aad
pusha
add
xchg
push
xor
dec
cmc
test
dec
push
cmpsb
sbb
xchg
xor
and
dec
call
xorl
cs
fsubs
aad
adc
xor
testb
in
jg
sub
mov
push
popa
xor
xchg
outsl
push
xor
mov
cmpl
mov
fistl
pop
movsb
cmpsl
inc
stc
or
sub
in
shrb
adc
jbe
loop
pop
scas
out
mov
repz
cmp
mov
test
sbb
mov
pop
clc
mov
mov
int3
sbb
mov
stc
fcompl
push
iret
call
push
outsb
aaa
pop
jg
push
shl
out
flds
arpl
mov
leave
cmp
dec
cmpsb
pushf
sub
sub
or
mov
rol
jmp
mov
dec
aam
or
push
lcall
mov
and
adc
repz
xorb
fimull
and
jb
xchg
jmp
ss
lahf
imul
mov
push
imul
xor
mov
push
sbb
sbb
xchg
mov
jg
lcall
stc
dec
add
cmpsb
and
and
cmpsl
push
jecxz
pop
jl
dec
jno
add
mov
adc
insb
mov
jnp
popf
test
icebp
mov
adc
adc
or
mov
xor
hlt
into
clc
cld
into
mov
push
movsl
push
enter
stos
fs
xor
jge
cmovs
add
int
out
outsl
xchg
lods
or
imulb
sub
cmp
cwtl
pushl
pop
in
loope
sbb
ss
inc
adc
ljmp
scas
out
mov
fcoml
les
or
push
sarb
push
bound
jbe
mov
cli
push
jle
mov
iret
lods
add
daa
orl
bound
leave
xor
pop
or
push
adc
mov
pop
mov
pushf
mov
inc
xor
jns
ret
inc
xchg
xchg
dec
mov
int3
add
mov
sbb
lds
xchg
dec
add
mov
stos
sub
loope
xorb
sub
sahf
lcall
add
mov
add
jge
jge
and
xchg
add
pop
in
adc
aas
loop
pop
insb
sub
in
rcrb
movsb
movsb
xchg
adc
mov
mov
lock
mov
bound
xor
aaa
in
adc
mov
add
or
push
insl
mov
add
jbe
xor
xchg
sub
ds
nop
loopne
js
lcall
inc
pop
xchg
jle
sub
clc
sahf
loop
inc
cld
mov
mov
in
xor
clc
idivb
jle
lret
push
push
xor
rorl
clc
stos
add
xor
mov
fincstp
in
mov
sbb
lret
mov
jmp
cmpsl
clc
mov
pop
inc
enter
add
push
pushf
jle
inc
fldl
lahf
and
dec
cmpsb
orb
mov
inc
pop
jp
iret
jmp
cmp
push
sarl
fcom
clc
adc
dec
sbb
pop
andl
outsl
cmpsb
jmp
mov
ljmp
mov
push
in
lret
fs
adc
test
rorb
aas
frstor
fadd
xor
or
leave
dec
dec
cld
xor
stc
mov
add
test
mov
int
dec
add
jbe
ja
fnsave
enter
fistps
jns
add
sbb
inc
and
lret
and
pushf
aad
int3
pop
les
sahf
pop
ja
and
mov
sub
push
jmp
pop
subb
jle
sbb
aaa
inc
cmpsl
inc
dec
scas
xlat
bound
lock
mov
mov
inc
stc
jo
je
pop
mov
sub
mov
dec
mov
fs
add
arpl
pop
dec
jns
dec
xor
icebp
adc
ret
xor
adc
lret
daa
icebp
mov
out
mov
or
or
push
jae
or
aad
sbb
pushf
cwtl
lds
xor
sub
sbb
add
adc
into
inc
popf
xchg
daa
dec
sbb
rcrb
push
test
insb
jnp
push
xchg
out
std
mov
cmp
jb
lahf
push
sbb
push
cmc
jno
call
jo
stc
nopl
cmpsl
imul
mov
mov
fidivrs
cmp
lea
jle
stc
sarl
es
cmp
loop
loop
test
hlt
shl
call
mul
cmpsb
rcll
mov
jmp
daa
dec
or
jns
adc
or
je
dec
or
popf
imul
scas
jmp
arpl
jg
sahf
push
pop
add
dec
push
rcr
negb
dec
xorb
and
hlt
gs
int3
push
sub
loope
jecxz
xchg
int3
out
cmpsb
push
jbe
add
jecxz
add
mov
adcb
shl
popf
ret
xchg
sbb
ficomps
xchg
and
pop
adc
dec
in
xchg
repnz
adc
mov
and
scas
aas
into
or
inc
shrl
icebp
jbe
imul
dec
jno
dec
sub
mov
sbb
mov
in
lahf
stc
mov
insb
or
mov
sub
add
sbb
test
push
adcl
jl
es
cltd
and
repz
mov
fsub
test
mov
scas
adc
repnz
insb
and
add
or
xor
lods
push
sub
add
inc
xchg
jb
hlt
xor
imul
leave
into
in
out
cmpb
adc
movsl
les
cmp
sbb
lahf
lret
sub
push
mov
lcall
mov
xlat
stos
jle
insl
scas
addr16
dec
push
sbb
inc
adc
mov
xchg
xchg
sub
jle
lods
adc
lret
movsl
inc
push
xchg
pop
xor
mov
jo
addl
and
push
test
pop
jb
js
adc
in
cmp
jb
sbb
add
repnz
lret
ds
or
aad
xor
cli
and
adc
mov
lcall
daa
mov
stc
movsb
cmp
push
mov
cmp
mov
push
subl
ss
or
jnp
cmp
test
xor
cld
fdivl
iret
sbbb
pushf
sbb
mov
adc
jge
sbb
std
outsb
adc
xchg
adc
imulb
insl
arpl
dec
aas
pop
subl
ret
lret
xchg
mov
sub
cmp
adc
mov
frstor
fldt
sbbb
mov
mov
rclb
popa
inc
aam
out
xor
mov
cs
lods
mov
call
fsubs
mov
ss
or
inc
into
mov
loope
jb
movsb
or
xchg
clc
out
mov
pop
adc
push
out
in
sbb
pushf
je
cmpl
jbe
aad
test
xchg
adc
mov
dec
mov
lods
test
xchg
popf
and
cli
inc
ret
xor
xchg
sub
inc
sbb
daa
mov
sub
outsl
fucomp
inc
aaa
dec
rcrb
dec
adc
sbb
les
aam
lea
push
sub
hlt
stos
and
ret
inc
ret
pop
das
mov
in
lods
scas
dec
and
ret
nop
xchg
outsb
icebp
xor
pop
cmpsb
jl
in
pop
iret
gs
fmull
sbb
add
mov
mov
pop
inc
inc
inc
in
ss
inc
add
and
add
dec
sbb
adc
push
cmp
jl
xchg
mov
inc
jns
in
aaa
pushf
or
sub
lret
dec
adc
dec
push
mull
jmp
and
les
aaa
jae
pushl
adc
out
jns
inc
push
dec
stos
add
sub
push
dec
mov
test
pop
incl
aam
push
daa
lds
inc
out
push
sub
jne
add
pop
popa
push
pop
mov
dec
mov
cld
int3
jno
ds
xlat
test
mov
push
test
mov
pop
cmovo
ss
shl
cmpsb
cmp
mov
rcr
pushf
shlb
add
daa
inc
arpl
stos
pusha
mov
and
loope,pt
pop
and
repnz
aad
movsl
dec
cmc
pop
cmpsb
mov
insb
addl
popa
xchg
ret
sbb
mov
add
cmp
out
adc
lret
sbb
jne
cmp
imul
aad
xor
jb
dec
mov
jmp
mov
push
test
lea
jmp
movsl
leave
sbb
xor
pop
pop
dec
xchg
call
sub
das
sbb
js
inc
test
add
mov
jne
imul
or
testb
fcomps
mov
sbb
cli
out
test
dec
cvttps2pi
dec
sbb
pusha
pop
stos
xchg
xchg
and
mov
and
mull
test
adc
or
add
dec
ret
sahf
xchg
sbb
jmp
cmp
paddq
popa
insl
into
pop
mov
adc
pop
add
xchg
push
pop
adc
fnsave
or
in
ret
jl
scas
or
inc
cmpsb
pop
stos
test
adc
add
addr16
mov
lea
out
js
inc
lcall
lods
pop
out
and
xor
xor
shll
fwait
jne
nop
pop
dec
sbb
inc
dec
popa
sub
sub
jp
lahf
jge
push
dec
cs
lret
ret
ret
mov
pop
dec
mov
rclb
cmp
xbegin
dec
mov
iret
xchg
cwtl
ret
xchg
mov
jmp
incl
inc
test
ljmp
or
adc
movsb
xor
cmp
pop
das
push
or
scas
add
sbb
cmp
cmp
in
push
bound
test
ret
ficomps
push
les
push
lods
mov
leave
mov
xor
lock
aad
xchg
xchg
mov
cltd
stos
daa
movsl
jg
sbb
inc
add
lcall
cmp
inc
sbb
dec
jnp
stc
and
push
test
mov
cmpsb
xchg
ret
pop
mov
dec
sub
in
stos
mov
jnp
dec
inc
ss
test
push
adc
add
pop
push
mov
xchg
cltd
lret
cmp
cmpl
mov
ja
inc
and
rclb
push
popa
inc
fisubrs
pop
xchg
mov
mov
nop
adc
insb
rcrl
lahf
adc
xor
mov
mov
xor
cmp
ret
adc
dec
out
sbb
mov
cltd
aad
add
repz
pop
cmp
pop
push
je
jne,pn
fsubl
xchg
dec
cmp
add
mov
in
in
ljmp
or
pop
cmp
jecxz
hlt
push
data16
repnz
sbb
jo
es
jns
xchg
adc
stc
cmp
lret
mov
popl
lods
and
xor
push
push
sbb
mov
test
xchg
push
mov
rol
sbb
cwtl
add
or
push
js
fisubs
dec
movsb
rolb
push
imul
insl
mov
add
xchg
lods
fs
mov
rcr
push
adc
xchg
xor
popa
push
aaa
cwtl
pop
pop
xchg
lret
add
ss
cmp
xchg
inc
shll
mov
js
mov
xchg
or
arpl
pop
addl
xchg
push
pop
lds
xor
add
jecxz
sub
push
jge
dec
pop
jg
das
iret
cmc
cli
repz
pop
das
inc
stc
jnp
sbb
hlt
test
shrl
fsub
loopne
mov
pop
dec
sbb
cmp
incl
stc
jne
pop
popa
ret
xchg
cmpsl
mov
sub
sbb
pop
inc
iret
pusha
jne
imul
movsl
adc
push
cmp
cld
int
adc
or
jle
push
and
fmuls
sbb
sub
mov
mov
jae
mov
stc
mov
fmuls
lock
push
adc
aas
sbb
arpl
loope
cmpsb
out
mov
es
inc
jge
fxtract
lock
jp
or
ret
loopne
mov
pop
rorb
ss
jbe
xchg
lods
sti
sbb
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jle
jmp
push
push
call
cmpl
jb
movl
lea
add
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
movl
andl
xor
xor
inc
mov
cmpl
jb
jmp
pushl
push
pushl
pushl
call
cmpl
jb
lea
xor
mov
or
mov
and
mov
movl
mov
xor
subl
add
mov
add
mov
movl
cmpl
je
cmpl
jb
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
sub
push
sub
mov
mov
mov
mov
xor
or
mov
adcl
add
movl
cmp
movl
je
movl
mov
movl
jmp
mov
xor
andl
push
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
call
jmp
add
sub
xor
mov
andl
add
push
movl
adc
movzbl
adc
mov
xor
xor
cmp
jne
cmp
movl
jne
push
jmp
mov
xor
adcl
add
movl
xor
xorl
add
adc
xor
xor
movl
cmp
movl
jne
movl
cmp
jne
add
mov
movzwl
xor
xor
addl
add
mov
mov
mov
xor
add
xorl
imul
movl
mov
subl
xor
adcl
add
movl
cmp
movl
mov
je
mov
subl
add
xor
mov
mov
and
mov
orl
xor
xorl
add
addl
imul
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
xor
mov
sub
mov
jmp
mov
xor
mov
mov
mov
xor
mov
sub
mov
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
jg
mov
mov
xor
mov
sub
mov
jmp
mov
xor
add
add
mov
mov
mov
xor
add
not
and
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
je
mov
xor
mov
sub
add
mov
jmp
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
mov
add
mov
mov
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
addl
sub
addl
push
movl
push
push
xor
adcl
push
sbbl
push
andl
push
call
orl
mov
andl
lea
push
movl
push
call
movl
cmp
movl
je
xor
jmp
andl
mov
inc
mov
cmpl
jle
jmp
push
push
push
push
pushl
pushl
push
call
cmpl
jb
mov
push
lea
addl
push
adcl
push
subl
push
push
sbbl
call
adcl
imul
movl
cmp
movl
jne
lea
subl
push
push
call
movl
cmp
movl
jne
pushl
push
andl
call
movzbl
and
mov
sub
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
lea
add
mov
lea
mov
and
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movzbl
sub
mov
mov
movzwl
adc
mov
xor
orl
mov
movl
add
movl
mov
mov
mov
cmp
jne
movl
cmpl
je
cmpl
ja
jmp
pushl
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adcl
mov
subl
xor
add
sbbl
mov
xor
mov
adcl
xor
addl
add
mov
movzwl
sub
mov
mov
andl
xor
add
orl
mov
sbb
mov
mov
xorl
mov
addl
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
mov
mov
mov
subl
movl
mov
movl
decl
mov
xorl
xor
sbbl
add
movl
jmp
lea
push
addl
push
call
cmp
movl
jne
push
subl
lea
push
sbbl
push
subl
push
addl
push
call
imul
cmp
movl
jne
adcl
lea
xorl
push
push
call
movl
cmp
movl
jne
mov
mov
xor
addl
lea
adcl
push
mov
orl
xor
lea
push
xorl
mov
pushl
andl
call
mov
mov
xor
lea
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
xor
xor
adcl
add
mov
sbb
mov
mov
xor
movl
lea
mov
movl
cmp
movl
jbe
adc
mov
add
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
cmpl
je
cmpl
ja
jmp
pushl
pushl
push
call
mov
dec
mov
jmp
mov
or
mov
mov
sub
xor
mov
adcl
lea
sbbl
mov
lea
mov
lea
push
subl
push
call
cmp
movl
jne
push
subl
lea
xorl
push
push
addl
push
adcl
push
call
movl
imul
movl
cmp
jne
lea
andl
push
adcl
push
xorl
call
movl
cmp
movl
jne
orl
lea
subl
push
addl
push
call
movl
cmp
movl
jne
push
lea
xorl
push
push
adcl
push
push
call
imul
cmp
jne
lea
push
push
subl
call
movl
cmp
movl
jne
lea
addl
push
negl
push
addl
call
movl
cmp
movl
jne
xorl
push
orl
lea
andl
push
subl
push
adcl
push
xorl
push
orl
call
imul
movl
cmp
jne
orl
lea
push
subl
push
notl
call
movl
cmp
movl
jne
lea
push
subl
push
subl
call
movl
cmp
jne
addl
push
lea
push
sbbl
push
push
push
call
subl
imul
movl
cmp
jne
addl
lea
orl
push
push
andl
call
movl
cmp
movl
jne
andl
lea
adcl
push
orl
push
sbbl
call
movl
cmp
movl
jne
xorl
push
lea
orl
push
push
push
subl
push
call
imul
movl
cmp
movl
jne
addl
lea
orl
push
andl
push
andl
call
cmp
jne
orl
lea
subl
push
xorl
push
addl
call
movl
cmp
movl
jne
adcl
push
xorl
lea
xorl
push
adcl
push
push
sbbl
push
adcl
call
imul
cmp
jne
movl
lea
addl
push
notl
push
call
movl
cmp
jne
lea
xorl
push
push
addl
call
movl
cmp
movl
jne
push
lea
adcl
push
xorl
push
adcl
push
xorl
push
call
adcl
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
or
mov
mov
or
movl
add
mov
movzbl
adc
push
or
mov
xor
xor
movl
cmpl
je
cmpl
jb
jmp
pushl
call
mov
dec
mov
jmp
mov
adcl
push
adcl
mov
addl
add
movl
cmp
movl
je
mov
adc
mov
mov
xor
sbbl
xor
add
xorl
add
movl
adc
sbbl
xor
adcl
mov
push
dec
xor
xor
mov
mov
and
mov
add
adc
movl
xor
incl
xor
movl
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
xor
movl
movl
cmpl
je
cmpl
jb
jmp
push
push
call
mov
dec
mov
jmp
mov
adcl
movsbl
adc
mov
andl
sub
mov
addl
xor
movl
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jle
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
push
mov
mov
movl
movl
push
xorl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
call
jmp
mov
mov
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
dec
jns
add
add
add
add
xor
add
mov
add
mov
add
add
add
push
push
inc
push
cld
push
cmpsl
out
dec
cmovno
xchg
add
add
inc
cmp
outsb
outsl
ja
and
pop
inc
imul
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
inc
inc
mov
cmp
jb
xor
lea
movzbl
xor
inc
inc
mov
cmp
jb
xor
lea
movzbl
xor
inc
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
inc
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
lods
outsb
lods
repz
xchg
testb
xor
xchg
lea
imul
fwait
or
fwait
or
mov
lea
xchg
lea
xchg
fwait
cltd
mov
test
xor
mov
xchg
mov
lea
push
push
cmpsb
jb
push
notl
mov
test
cmpsb
test
push
push
mov
ret
add
jmp
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
inc
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
dec
xor
cmp
je
push
push
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
dec
xor
cmp
jne
mov
pop
pop
cmp
je
xor
xor
mov
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
inc
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
inc
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
