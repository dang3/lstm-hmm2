push
mov
sub
mov
mov
inc
mov
sbbl
sub
push
mov
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jge
push
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
mov
movl
jmp
movl
jle
push
call
xor
sub
and
movl
movl
mov
add
add
add
mov
add
mov
adcl
sub
mov
sbb
xorl
mov
orl
andl
orl
jmp
loop
jns
cmp
lcall
pop
je
adc
adc
int
adc
pop
sub
mov
stos
cmpsb
lods
mov
lret
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
mov
divl
cmp
mov
cld
add
jecxz
testb
movsb
pop
aad
ss
mov
jno
lds
sbb
adc
loopne
mov
sub
push
cmc
stc
mov
imul
sbbb
jnp
imul
into
bound
adc
mov
xchg
mov
shll
xchg
push
xchg
jno
or
xchg
cmp
test
addb
subb
jb
dec
cmp
xchg
sti
repnz
orl
fwait
and
mov
pop
sub
fdivrp
dec
cmp
pop
mov
repz
xchg
xlat
inc
add
adc
adc
popf
lods
movsl
into
mov
jl
pop
inc
fnstcw
cwtl
jecxz
and
adc
pop
push
cld
lea
les
inc
mov
movsl
xchg
sub
int3
push
xorb
popf
je
cli
jge
imul
add
insl
pusha
out
ret
js
sub
and
roll
fistpl
movsl
out
pop
lret
mov
xchg
adc
jge
xchg
inc
shrb
clc
push
jae
insb
dec
dec
jmp
or
cmp
xor
jp
dec
out
cmpsb
mov
adc
or
icebp
call
das
xchg
xor
push
cmp
pop
imul
ret
lock
or
or
mov
pop
dec
imul
test
adc
cmpsl
xchg
or
jne
and
outsb
into
lcall
cmc
int
js
pop
outsl
out
mov
mov
xor
jmp
repnz
and
pop
jbe
es
dec
mov
pop
aam
cmp
ficompl
test
mov
or
movsl
xor
jecxz
in
lods
gs
out
xchg
xchg
add
stos
jae
pop
sarb
or
and
aad
stos
enter
push
or
cli
xchg
cmp
enter
pusha
repnz
hlt
mov
add
dec
mov
insb
cmp
jbe
push
stc
mov
xchg
xchg
mov
adc
aam
jb
mov
enter
fbstp
inc
cmp
add
or
sbb
iret
ja
push
jns
cmpsb
cld
stos
pop
sbb
sti
insl
dec
nop
stos
pop
imul
push
pop
lret
lret
fidivrs
shll
cmp
aad
cmc
pop
jno
sbb
add
imul
sub
inc
xchg
pop
aam
push
lret
or
pop
xor
jp
clc
jle
mov
xchg
fs
leave
mov
stos
sbb
les
and
lea
mov
cmpl
mov
mov
movl
mov
jmp
mov
mov
jne
pushl
push
push
call
and
adcl
andl
xor
or
mov
movzwl
and
mov
and
mov
add
movzbl
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
mov
jb
pushl
call
movzbl
adc
and
sbb
movzbl
xor
mov
or
sbbl
mov
cmpl
movl
movl
jmp
mov
mov
jg
push
push
pushl
pushl
call
sbb
dec
xor
sub
or
mov
sub
mov
add
shrd
shr
and
mov
mov
sub
mov
subl
xor
orl
xor
movl
or
xor
jmp
ljmp
cltd
daa
mov
push
jmp
adc
int
adc
push
loopne
xor
xchg
cmp
arpl
dec
fnstsw
not
pop
push
repz
in
imul
fstps
xor
movb
aam
nop
mov
push
sub
mov
cmpsb
gs
stos
into
pop
sub
xchg
frstor
inc
cmp
clc
xor
xchg
or
adc
mov
and
icebp
pop
test
std
inc
sub
and
out
lret
jle
mov
movsl
sbb
add
or
push
adc
push
mov
dec
add
or
mov
or
movsb
xchg
in
or
jo
lods
mov
xchg
test
in
jle
aas
xchg
outsl
cmp
fs
fdivs
imul
and
mov
sub
or
not
pop
cli
push
mov
push
xor
inc
mov
push
jmp
jmp
and
mov
cmp
inc
imul
ret
andb
sbb
mov
lcall
mov
or
pop
push
and
popa
pop
in
add
mov
loop
repnz
fsubs
pop
je
stos
dec
bound
mov
adc
cmpsl
xchg
lock
les
jmp
cmpsl
xchg
lods
push
dec
mov
xor
fidivs
fdivl
jle
or
jge
enter
inc
repnz
fs
xchg
int3
fs
in
sub
and
cs
xlat
sub
leave
scas
xchg
pop
leave
mov
xor
or
fwait
mov
lret
mov
cmc
mov
adc
insb
push
mov
mov
xchg
and
out
xchg
lods
and
push
add
pop
jnp
fimull
pop
push
imul
out
mov
mov
in
enter
cwtl
sub
mov
pop
outsl
in
icebp
xchg
push
cli
jno
and
ljmp
jmp
mov
pop
lahf
movsl
pop
gs
pop
dec
out
push
mov
mov
sahf
mov
sub
notb
lret
and
int
push
cmpxchg
xchg
pop
movl
push
loope
jg
aaa
icebp
or
hlt
stc
and
ret
negl
push
lret
dec
jns
insb
lods
cli
jp
cwtl
pop
pop
xor
mov
push
addb
or
ret
mov
ret
imul
bound
inc
jb
and
push
mov
jnp
cmpsl
pop
cli
or
shl
arpl
popa
loop
sub
sub
leave
inc
add
mov
jle
or
loope
testl
cld
int3
imul
cltd
add
or
aas
ljmp
inc
int3
cmp
stc
les
dec
lds
js
push
out
push
rcll
stos
adc
add
insl
int
xor
push
scas
lret
pop
mov
fstpl
sub
test
jns
nop
xchg
xchg
xchg
xchg
push
cli
jnp
add
dec
xchg
insl
movsl
cmp
nop
std
int3
ja
inc
sub
push
mov
cli
outsb
cli
popf
inc
mov
mov
xchg
adc
sub
js
xchg
adc
repnz
adc
cmpl
notl
movl
movl
movl
jmp
mov
jle
pushl
push
pushl
pushl
push
call
sbb
addl
add
xorl
add
movl
sbbl
movl
sub
movl
xor
xor
and
movl
sub
movl
sub
movl
sbb
movl
sub
movl
cmpl
movl
movl
jmp
movl
mov
jb
pushl
pushl
push
pushl
push
call
andl
notl
andl
orl
addl
sbbl
movl
sbbl
movl
xorl
movl
xor
movl
movl
cmpl
movl
movl
movl
jmp
mov
jbe
push
push
push
push
call
subl
adcl
movl
adcl
sbbl
adcl
movl
sub
movl
movl
adcl
movl
negl
movl
cmpl
movl
movl
jmp
movl
jbe
push
pushl
pushl
call
adc
addl
orl
sbbl
notl
adcl
xor
movl
movzbl
xor
movl
cmpl
movl
mov
mov
jmp
mov
je
push
push
push
push
call
xorl
negl
xorl
subl
andl
adc
sbb
movl
inc
movl
mov
xor
mov
xorl
shl
mov
or
mov
mov
subl
push
xorl
push
adcl
push
subl
push
adcl
call
and
mov
sbb
mov
adc
xor
xor
or
add
mov
mov
xor
sub
mov
adcl
jmp
into
mov
and
ror
jb
orb
adc
adc
adc
pop
lahf
loopne
inc
mov
push
shrb
pop
and
adc
dec
cmpl
xchg
sbb
jae
ror
mov
dec
push
jmp
pushf
mov
ret
fnsave
aad
enter
shll
sub
stc
jl
pop
stc
mov
in
inc
cmp
ret
mov
push
mov
mov
pushf
inc
or
sbb
cmpsl
jl
push
repnz
ds
cmp
cltd
pop
push
cmp
addb
rol
push
inc
sub
pop
bound
outsb
lock
adcb
xor
fwait
xor
jo
push
cmp
in
andb
jnp
push
push
jmp
dec
push
leave
mov
popa
sub
mov
xchg
push
in
imul
cmpsl
jnp
mov
lcall
mov
popa
mov
sbb
enterw
or
jge
loopne
cmp
fistpl
lds
mov
push
dec
cmp
data16
add
sbb
popf
scas
cld
test
dec
xchg
pop
test
mov
sti
shlb
mov
sbb
enter
jge
stc
mov
lods
add
popf
out
cli
int
repz
loope
mov
popf
fwait
sub
insl
mov
stos
xchg
or
repnz
dec
das
in
aas
jecxz
in
push
mov
int
dec
dec
sahf
popf
movsl
ds
mov
xlat
or
mov
cmpsb
push
jo
into
ret
jle
sbb
adc
icebp
xor
push
ret
push
mov
sbb
sub
out
pop
mov
jbe
adc
push
dec
dec
push
nop
push
mov
mov
pop
sbb
jle
or
sub
push
sbb
cwtl
lock
cs
cld
in
sub
fdiv
pop
wbinvd
xchg
mov
in
adc
bound
int3
add
lds
ss
cmp
xchg
loopne
arpl
adc
gs
orb
lock
testl
xor
push
or
or
add
cli
xchg
sub
mov
jb
test
jp
fisttpl
cmp
mov
inc
lods
loopne
push
ja
ret
sbb
roll
test
test
and
jnp
subl
popf
inc
and
loop
dec
mov
pop
aad
mov
xchg
sbb
stos
jmp
ss
jb
bound
sbb
lcall
dec
adc
add
dec
mov
add
push
roll
xchg
pop
add
xor
adc
in
mov
push
adc
inc
mov
or
add
sbb
popa
xchg
stos
or
std
fidivrs
pop
xchg
ret
dec
push
pop
xor
sbb
push
ja
setg
cmpsb
push
movsl
push
test
out
pop
cmp
and
push
push
movsl
pop
lds
lds
adc
fadds
mov
add
push
sub
push
mov
in
pushf
or
jge
xchg
pop
out
rcr
leave
imul
xchg
sbb
cmp
mov
stos
mov
adc
test
mov
push
test
cld
dec
xor
movsl
aas
inc
ja
fwait
cmp
iret
and
lock
cmc
sbb
inc
scas
out
std
les
outsb
pop
inc
xchg
pop
es
in
xchg
jno
inc
mov
test
xchg
mov
in
test
cs
decl
add
inc
add
add
mov
or
and
xor
mov
or
andl
xor
movl
cmp
jmp
xlat
test
push
xlat
popa
dec
lcall
cmp
adc
int
adc
repnz
loope
cld
lcall
add
sbb
mov
addb
lods
inc
in
in
add
es
ret
loopne
inc
mulb
hlt
push
adc
daa
call
incb
cld
scas
fstpl
dec
dec
cld
mov
or
or
pop
cmp
mov
lea
push
jne
sub
jnp
pop
movsb
nop
sahf
sub
jmp
jmp
outsb
icebp
cli
mov
dec
or
in
loope
mov
inc
and
in
or
push
xchg
faddp
pop
inc
iret
fcomip
add
or
dec
mov
sbb
push
push
cmp
lds
pop
js
rcr
loope
xor
jge
mov
and
cmp
push
xchg
sub
add
xchg
lods
dec
adc
iret
daa
lods
mov
xchg
add
dec
xchg
aad
jns
jo
filds
sub
adc
fistpll
adc
and
imul
mov
sub
testb
xchg
sbb
hlt
negb
rcrb
inc
sbb
imul
decb
outsl
inc
cmp
imul
cmp
sbbl
lahf
mov
add
push
inc
lods
incl
frndint
dec
repz
mov
mov
sub
adcl
rcr
jle
jmp
int3
lods
rcrl
mov
push
fcompl
movsb
orb
daa
push
xchg
mov
push
outsl
mov
into
cs
inc
sub
xchg
mov
jmp
dec
insb
and
mov
dec
out
inc
stos
frstor
push
iret
inc
pop
fnstsw
and
adc
cmp
pop
vpsubsw
stos
add
mov
push
lret
jo
jle
mulb
iret
ja
push
or
jo
adc
fsubrp
in
adc
push
pop
negb
test
scas
adc
push
imul
js
mov
test
int3
jnp
xchg
mov
not
push
mov
lahf
sbb
pop
mov
mov
pop
jle
push
push
adc
mov
lock
dec
xchg
fyl2x
sbb
mov
push
fists
adc
add
leave
push
add
push
xchg
es
call
and
stc
sub
mov
icebp
push
cli
lods
ficomps
int3
iret
gs
cltd
je
insl
mov
aas
sub
dec
cwtl
in
ffree
incl
xchg
imul
das
arpl
cwtl
push
and
sbb
jne
shrb
mov
push
ljmp
iret
sahf
aad
sbb
xor
leave
shlb
out
cmpsb
push
cmp
imul
pop
pop
insl
icebp
insl
cli
mov
lods
mov
xor
inc
lea
xchg
inc
mov
push
inc
mov
je
test
jns
imull
mov
pop
adc
loopne
test
idivl
cmp
cmpsb
popa
jae
nop
fnsave
imul
mul
jae
lcall
test
int
or
loope
mov
lcall
subb
mov
insb
movb
test
add
outsl
das
cmp
pop
or
push
mov
cmc
repz
arpl
inc
xor
testl
sub
loope
cltd
rep
test
dec
cmc
jne
add
mov
mov
cmpl
mov
movl
movzbl
jmp
movl
jae
push
push
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
shrd
shr
add
mov
mov
andl
shl
xor
addl
xor
or
mov
mov
movl
cmp
jne
mov
cmpl
not
mov
movl
jmp
movl
movl
je
push
pushl
push
push
call
adc
xor
or
mov
adc
not
decl
xorl
sub
and
mov
sub
cmpl
mov
movzwl
mov
jmp
movl
movl
jle
pushl
pushl
call
sbb
adc
add
sbb
sbb
movl
mov
xor
mov
mov
sub
mov
shrd
xorl
jmp
lcall
add
js
js
notl
adc
adc
adc
out
loope
xchg
testl
mov
add
mov
shr
add
sbb
jb
xchg
aam
aam
fcmovbe
xor
ss
push
xor
jno
jno
inc
cmpsb
sub
cmpl
dec
cs
cmp
dec
fidivrs
mov
xchg
aaa
jnp
leave
repz
lock
fwait
cwtl
mov
in
inc
cmp
inc
jl
inc
and
mov
imulb
loop
aam
insb
inc
and
lock
cmp
in
lret
pop
out
pop
pop
imul
adc
jecxz
sub
incl
xor
sub
pop
js
adc
movsb
repz
mov
xor
aad
mov
clc
add
inc
imul
lock
sub
add
cmp
mov
or
cmpsb
mov
mov
pop
repnz
mov
out
or
fwait
cwtl
idiv
dec
fwait
cmp
jnp
test
inc
out
xor
mov
loope
pushf
xor
xchg
lds
push
ss
lret
sti
dec
ret
add
push
arpl
cmpsl
inc
sbb
mov
fldl
xor
jmp
cwtl
xchg
mov
jne
jnp
clc
sbb
mov
mov
mov
adc
cld
xchg
lds
push
add
in
mov
add
jne
xor
insl
jnp
out
pop
push
in
popa
cld
test
push
dec
hlt
or
nop
sti
int3
call
stc
push
sbb
dec
xorb
rol
pusha
and
aam
ror
dec
lock
out
test
dec
je
and
xchg
dec
sub
mov
xchg
inc
mov
fs
cmp
jbe
rorl
push
push
arpl
lods
push
mov
mov
and
dec
dec
cltd
jno
repnz
mov
scas
or
nop
ja
sbb
adc
and
loop
bound
push
inc
cmp
cmpsl
stos
lret
xchg
sbb
dec
and
jecxz
mov
xor
leave
pop
jnp
cwtl
jne
inc
xchg
adc
xor
popa
and
bound
aad
add
or
rclb
xor
jnp
xchg
pop
outsb
xchg
or
fsubrl
fwait
push
xor
mov
cmpsl
lods
mov
mov
in
fistps
lret
and
and
fildl
dec
cld
add
cmp
cli
movsb
mov
dec
xor
jnp
dec
popf
sub
inc
loope
cmpsb
out
adc
mov
mov
adc
mov
fstpl
imul
push
sub
sub
aas
sti
add
leave
dec
xlat
adc
loopne
pop
push
jae
mov
xor
stos
adc
loope
in
int
push
jle,pn
in
clc
loop
jl
add
cmp
and
lret
push
adc
pop
shl
xor
cs
test
icebp
mov
scas
icebp
leave
mov
insb
cld
int
lret
fisubs
rcrl
mov
pop
mov
dec
out
sti
xor
mov
mov
mov
in
pop
aaa
sahf
xchg
mov
movsl
ret
pop
pxor
pop
dec
out
add
mov
lret
xor
sbb
lea
jbe
and
or
in
push
push
or
mov
pop
sbb
clc
mov
mov
outsb
adc
mov
cmp
add
add
add
inc
add
add
add
inc
pop
add
jle
pushl
pushl
call
sub
add
notl
sbb
xor
dec
sub
mov
xor
orl
shr
sbbl
mov
adcl
xor
andl
or
shl
cmpl
mov
mov
movl
jmp
movl
movl
je
pushl
pushl
call
notl
and
sub
and
not
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
jle
push
pushl
pushl
call
sbbl
adcl
movzbl
sbb
mov
movzbl
and
mov
movzbl
sbb
mov
add
add
mov
mov
mov
shrd
or
shr
cmpl
movl
mov
movl
mov
jmp
mov
je
pushl
call
and
and
sub
or
mov
mov
or
sub
and
mov
mov
xor
shl
adcl
xor
or
xor
mov
mov
shrd
shr
mov
sbb
mov
cmpl
movl
movl
mov
jmp
movl
not
ja
pushl
push
call
mov
xor
or
sub
add
mov
sbb
inc
mov
mov
sub
add
or
mov
sbb
mov
xor
xor
or
andl
shl
lea
subl
mov
mov
andl
shrd
subl
shr
cmpl
mov
movzwl
mov
movl
jmp
mov
movl
jb
pushl
push
push
pushl
call
xorl
neg
or
movzbl
sbb
movzbl
xor
mov
xor
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
je
pushl
call
movzwl
add
mov
add
movzbl
and
or
subl
neg
mov
cmpl
mov
movl
movl
jmp
mov
jge
pushl
call
sbb
xor
inc
mov
sub
mov
adc
adc
cmpl
movzbl
mov
jmp
mov
mov
jl
push
call
movzwl
and
movl
add
sbb
movzbl
sub
sub
xor
mov
xor
subl
or
orl
shl
xor
imul
mov
and
mov
mov
andl
shrd
andl
mov
mov
xorl
xor
shr
subl
mov
mov
sub
mov
xor
adcl
or
sbbl
shl
sub
mov
cmp
mov
mov
movl
jg
or
mov
sub
mov
movl
shrd
mov
xor
mov
sbbl
xor
movl
shl
xor
adcl
or
shr
or
mov
mov
adc
mov
mov
mov
addl
mov
sbbl
shrd
shr
adcl
mov
mov
movzbl
sbb
mov
addl
xor
xor
or
shl
addl
imul
andl
sub
movl
jmp
mov
adcl
mov
notl
shrd
mov
add
mov
addl
xor
movl
shl
xor
or
xorl
shr
xorl
mov
mov
mov
cmpl
mov
mov
not
jmp
movl
mov
jg
push
pushl
push
push
call
xor
xor
xor
sbb
addl
orl
neg
xorl
and
cmpl
movl
movl
jmp
movl
jle
pushl
call
xor
xor
mov
sbb
dec
not
mov
adc
cmpl
mov
mov
mov
jmp
movl
movl
jg
pushl
push
push
push
call
xor
add
or
mov
movzbl
and
notl
adc
or
adcl
sub
mov
shrd
shr
mov
mov
jmp
xchg
icebp
mov
icebp
out
loopne
mov
out
adc
int
adc
lret
out
les
sbb
cwtl
stos
decl
rcll
ds
lret
jbe
cmc
xor
mov
sub
es
pop
out
or
lahf
test
jno
push
and
add
and
pop
adc
dec
cmpsl
dec
divl
cli
subl
ss
ror
push
outsb
and
xchg
push
xchg
add
addb
loope
aam
jle
neg
mov
xor
pop
inc
int3
mov
pop
cmp
in
sub
mov
ror
adc
mov
pop
add
je,pn
out
es
cmp
imul
push
aam
loopne
stc
stc
mov
cmc
add
add
jp
nop
mov
out
jb
leave
mov
jle
sbb
int
or
pushl
xor
lea
lods
pop
adc
movsl
push
out
cmpsl
add
or
jae
dec
xor
aaa
hlt
aam
xchg
lds
aad
cld
fwait
pop
fildll
pop
out
jecxz
pop
out
and
ljmp
xchg
mov
push
jl
inc
push
sti
hlt
xchg
test
xor
add
mov
mov
jb
leave
xchg
and
outsl
sbb
xlat
out
pop
pop
jle
stos
rorl
cltd
sub
in
push
jmp
add
xchg
add
stos
inc
repz
pushf
mov
and
sub
jno
and
addr16
xlat
mov
mov
inc
inc
add
and
push
fsubl
mov
test
add
push
in
iret
aas
inc
shrl
mov
push
scas
cmc
outsb
stos
mov
leave
aaa
outsb
sarl
cli
lcall
in
jecxz
pushf
push
inc
mov
lret
shlb
mov
les
ret
out
subl
insl
xor
pop
xchg
push
es
cmp
in
xchg
scas
lcall
cld
cwtl
dec
sub
xorb
mov
dec
xchg
inc
pop
fldcw
add
push
jne
imul
cmpsb
pusha
mov
ljmp
and
inc
jg
mov
push
in
mov
leave
fucom
mov
mov
lods
xchg
sti
cmpsl
inc
xor
imul
out
ja
add
nop
push
cmp
dec
mov
mov
cwtl
aam
popf
push
loope
arpl
aam
add
push
and
jbe
inc
aam
xor
mov
jge
sahf
ds
cmp
stos
pusha
sbb
cmpsl
aam
cmpsl
adc
mov
mov
mov
ja
ror
mov
movq
add
imul
push
lret
fdivrs
jno
adc
shll
insb
addr16
pushf
lcall
mov
in
jg
or
icebp
aas
jmp
jns
sbb
lea
fcomps
roll
jns
pop
or
imul
dec
lock
in
adc
mov
push
fisttps
mov
lods
xchg
inc
idivl
cltd
adc
and
repnz
pop
cmp
aam
fs
nop
mov
dec
dec
xor
add
push
fimuls
popf
mov
push
and
cmp
jne
adc
sbb
imul
rorb
push
in
loope
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
jmp
lret
lea
push
push
and
xor
add
pop
lods
push
in
adc
int
adc
xchg
ret
adc
ljmp
adc
ja
or
pushl
ret
or
dec
aam
add
inc
mov
mov
int
out
sbb
sti
hlt
roll
in
dec
repnz
dec
inc
mov
sub
sbb
sbbb
pop
cmp
fdivrs
fidivs
mov
hlt
push
out
jge
sub
push
cld
or
or
or
jecxz
pop
jg
fs
sbb
rcrl
outsl
int
push
ja
int3
ret
cmp
rsm
lcall
imulb
add
mov
add
arpl
arpl
fistl
jns
push
push
pop
cwtl
cmpsb
rorl
mov
jmp
lcall
lods
add
mov
add
jg,pt
fcmovbe
aam
daa
lods
stos
pop
mov
inc
mov
loopne
pop
outsl
repz
mov
ret
ds
js
cmp
fidivrs
scas
mov
xlat
sbb
dec
sub
movsl
xor
sbb
or
push
fsubl
lea
cs
fldt
pop
xor
mov
insl
std
pop
jbe
sbb
lods
hlt
repz
int3
sub
xchg
cmp
idivb
push
repz
inc
loop
or
fcoml
scas
jp
xchg
jl
fisttpl
loop
push
sbb
mov
xchg
mov
pop
fiaddl
imul
movsl
stc
rsqrtps
or
movsb
pop
pusha
mov
lret
je,pt
fdivrs
mov
aaa
xor
push
leave
insl
lds
inc
loop
xchg
fsts
add
dec
push
inc
mov
push
mov
sub
aad
or
pop
stos
add
cli
push
or
add
cwtl
or
sbbl
pop
lods
pop
pop
add
fsubl
inc
out
es
jmp
xlat
push
add
push
mov
push
xor
inc
fistl
xchg
and
pop
imul
sti
pop
ret
push
daa
xlat
xchg
mov
push
iret
movb
sbb
lock
cmc
leave
sbb
mov
xchg
lods
imul
in
or
jmp
xchg
inc
adc
call
xchg
lods
js
jmp
pop
dec
fwait
mov
addr16
push
push
xor
jne
and
ja
xor
frstor
or
gs
xor
jg
jecxz
scas
lods
push
push
test
int
dec
lahf
jg
pop
mov
mov
adcl
cltd
inc
adc
ja
cli
jnp
pop
adc
cmp
les
daa
mov
push
stos
and
imul
aam
xchg
pop
xor
xchg
xor
adc
repz
out
sti
pop
bound
in
mov
mov
mov
mov
and
xor
addb
and
xchg
cli
mov
or
xchg
shlb
dec
movsl
push
sub
sub
and
fsubl
outsb
subl
fbld
cmp
loope
in
cmp
xchg
je
out
push
lcall
fisubl
push
inc
daa
outsl
add
sahf
int
xchg
mov
imul
clc
jmp
sti
mov
aad
into
dec
aas
xchg
inc
bound
sbb
xorb
orl
add
mov
in
les
add
inc
sub
cmp
gs
mov
or
xor
mov
dec
cltd
pop
mov
or
sahf
inc
ja
popf
xlat
push
addr16
inc
in
inc
lock
imul
inc
mov
mov
mov
mov
shrd
shr
jmp
fsubrs
fldenv
and
jb
adc
adc
int
adc
sub
lahf
loopne
sbb
mov
inc
pop
test
daa
mov
stc
dec
and
lods
dec
or
and
fisubl
jge
nop
jle
mov
push
cmp
into
nop
daa
or
pop
cmpsl
adc
andl
and
ret
mov
clc
jp
cwtl
mov
fistl
cwtl
mov
push
xchg
mov
xchg
int3
mov
xchg
mov
into
daa
inc
mov
mov
xchg
scas
bound
cmp
push
insl
pushf
fsubs
adc
xor
ret
xchg
xchg
pusha
cli
aas
in
sub
inc
push
dec
popf
adcl
mov
push
mov
or
pop
jp
or
mov
in
inc
out
aaa
lcall
inc
and
lds
icebp
cltd
adc
je
push
addb
jb
into
pop
testb
int3
add
in
lds
sbb
imul
mov
lcall
cmpsb
mov
jnp
sub
stos
test
outsl
cli
or
mov
sahf
outsb
ja
cmc
adc
mov
aam
or
sbb
std
jp
insb
imul
and
cwtl
xor
mov
aam
pop
test
cmp
push
mov
or
and
mov
or
popa
jns
mov
notl
mov
dec
mov
cmp
rcrl
mov
es
ja
mov
dec
xor
push
sub
aad
jnp
mov
jnp
adc
icebp
ret
icebp
dec
push
inc
imul
lods
mov
jno
add
daa
idivb
jne
adc
es
adcb
nop
pop
pop
daa
mov
add
mov
jmp
cltd
add
repnz
dec
cmc
push
mov
adc
cmp
enter
std
in
popl
pop
out
mov
mov
add
mov
inc
insl
mov
pop
mov
testb
aad
stos
jne
repnz
sub
jl
fistl
mov
cs
inc
jae
aas
pop
sahf
xor
cld
pop
xchg
in
iret
sbb
popf
sub
ja,pn
cmp
sub
and
dec
out
rcll
sub
dec
sub
mov
in
xchg
jb
loop
pop
xor
movsl
cld
aam
fisubrs
outsb
xor
insb
jae
fs
and
mov
inc
scas
xchg
and
fcompl
enter
push
loopne
scas
sbb
test
es
repz
adc
push
sbb
jp
xchg
lahf
stos
pop
movsl
adc
dec
jo
mov
stc
pusha
aaa
call
iret
xor
mov
sub
pcmpgtd
lock
fcomps
cld
rorl
stos
mov
pushf
loop
fisttpll
fmul
sbb
mov
sarb
inc
push
xor
and
scas
xor
and
enter
xor
add
dec
testl
arpl
adc
in
adc
hlt
push
dec
xor
test
lret
arpl
ret
or
jbe
je
cli
mov
mov
jae
cs
sbb
and
dec
xor
cmp
xor
adc
int
iret
fcoml
repnz
pop
mov
and
outsl
popf
and
jge
push
mov
lahf
ljmp
filds
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
jmp
orb
mov
or
push
ficoms
adc
adc
adc
adc
sbb
push
inc
outsb
inc
add
scas
cmp
push
popf
cli
and
jnp
jns
xchg
loop
sub
inc
fwait
mov
es
xchg
adc
cmp
add
inc
cmp
aas
jb
jnp
cmpsb
imul
and
in
sbbb
dec
inc
adc
sbb
out
pushf
lcall
aam
fnstsw
cmp
in
les
ss
ljmp
in
mov
push
xlat
mov
push
hlt
push
stos
cmpsl
push
sti
sbb
pop
ja
loopne
xor
lahf
pushf
pushf
stc
insl
jge
jbe
xor
outsb
test
gs
adc
aad
lret
mov
push
enter
repnz
inc
call
fsubrl
cwtl
jb
setno
pop
and
sub
xchg
jb
lret
dec
test
dec
outsb
or
fcoml
pop
lea
add
scas
xorl
dec
fadd
inc
int
sbb
pop
cmpsb
or
dec
and
fnstenv
sub
clc
mov
outsl
pop
xchg
shr
pop
mov
xchg
inc
jno
test
pushf
xor
pop
sub
jnp
xor
xor
imul
cmp
push
push
add
jge
imul
inc
fists
fldenv
jns
inc
test
mov
into
call
jg
iret
insl
outsb
xorb
xchg
sbb
sbb
mov
movsb
stos
mov
dec
inc
testb
mov
push
icebp
pop
ret
lock
mov
dec
das
imul
mov
jg
inc
ficompl
jne
sbb
mov
jl
cld
das
pop
xor
jmp
pop
inc
inc
and
incb
leave
cld
test
xchg
into
loopne
movsb
mov
xor
mov
cmc
push
jmp
fs
mov
mov
mov
aas
jbe
je
iret
arpl
push
lea
xor
shr
mov
mov
packsswb
or
sbb
add
test
dec
sub
aam
and
mov
das
pushf
add
into
mov
data16
xlat
lahf
cmp
cwtl
loopne,pt
push
add
sub
in
jg
add
sub
mov
xchg
jbe
pop
push
stos
std
popf
or
es
mov
sahf
adc
out
pusha
out
sti
xor
inc
mov
and
cltd
pop
sbb
cmpb
je
imul
or
inc
insb
mov
push
sub
cmc
mov
aam
cld
stos
sbb
fadd
inc
pop
sub
dec
lods
mov
loop
push
subl
dec
out
lock
out
or
sbb
push
cli
jae
add
ss
sub
push
lods
adc
orb
jne
movsb
lcall
mov
adc
aam
jl
mov
cltd
dec
lret
adc
sub
pop
repz
jb
movsl
lock
rol
mov
sbb
insb
pop
pop
je
push
push
add
mov
in
push
testb
adc
or
and
push
arpl
cvtps2pi
sbb
fistps
hlt
das
repz
inc
dec
pop
sar
xchg
jge
jmp
popa
mov
inc
jecxz
icebp
aam
nop
sahf
lods
mov
pop
into
xor
shr
mov
mov
shl
jmp
fmuls
sbb
push
aam
adc
adc
adc
popf
xlat
cmp
or
sub
cmp
lea
andl
adc
loope
mov
xchg
stos
pop
loopne
je
hlt
out
xor
rcrb
xor
pushf
jl
jecxz
iret
aaa
in
add
std
test
sub
push
fsubr
rcll
es
rclb
jge
out
sbb
ret
ja
or
sub
dec
or
or
jl
dec
mov
test
push
pushf
mov
xor
and
js
stos
fs
fwait
jp
pop
adc
out
mov
fidivs
test
dec
mov
fiadds
ss
add
sti
mov
test
hlt
jnp
rclb
fbstp
leave
xor
inc
into
and
outsl
mov
rcrb
xchg
push
arpl
adc
xor
out
and
xchg
push
test
inc
cli
push
iret
imul
imul
das
orb
mov
xor
add
add
into
mov
out
push
sub
sti
dec
jl
je
pop
push
pop
mov
insl
sbb
scas
or
cwtl
dec
jae
scas
push
cmp
cwtl
mov
clc
test
pop
mov
mov
adc
popa
aam
movsl
imul
scas
addr16
lcall
pop
xlat
das
scas
adc
lock
movsl
sti
jo
into
add
in
jo
pop
pushf
jae
cmp
mov
pop
out
mov
inc
adc
and
push
dec
lret
mov
rcrl
scas
push
cmp
rclb
mov
pop
inc
dec
jl
jg
mov
sbb
jno
mov
lret
insb
mov
xchg
push
xchg
leave
insl
mov
mov
rorl
xor
inc
adc
fnsave
xor
movsb
mov
pop
jne
out
iret
xor
sub
outsl
push
sarl
jecxz
enter
daa
sbb
mov
and
sbb
out
mov
scas
cmp
push
push
add
mov
out
sub
out
adc
incl
xor
fwait
sarl
test
jns
mov
getsec
adc
xor
and
sub
mov
mov
data16
add
xchg
mov
adc
std
xchg
mov
and
push
lds
mov
jnp
mov
out
test
push
pop
xor
leave
jmp
mov
or
jae
and
test
inc
mov
fisttpll
pop
sub
das
sub
repnz
cltd
gs
pop
scas
add
inc
push
fildl
pop
add
mov
cmp
fdivs
pop
leave
xor
dec
cmp
incb
es
mov
sbb
add
sbb
and
jns
imul
sub
out
jmp
shrb
sub
lahf
nop
dec
xor
popa
subb
leave
inc
push
sbb
sbb
shlb
push
movsl
push
jl
push
jb
push
out
ret
adc
lahf
mov
xchg
push
adc
and
add
add
push
lahf
sbb
or
lahf
xor
lods
out
xor
ret
mov
cmpb
in
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
jmp
dec
or
push
sub
loopne
fadds
push
int3
adc
int
adc
dec
test
sbb
movsl
aas
mov
imul
pusha
sbb
inc
ficomps
subb
inc
mov
icebp
lds
adc
shr
aas
psllq
and
mov
pushf
push
in
sar
xchg
adc
or
push
sub
testl
pop
cli
lock
mov
pop
lods
loop
test
sub
imul
lock
orl
in
push
pop
dec
sbb
jecxz
in
les
xchg
cmpsl
sarb
cmp
test
ret
sahf
jge
sbb
inc
mov
mov
lret
ret
dec
int
push
fstpt
mov
xchg
push
add
xor
cmpsl
scas
imul
jno
orb
mov
dec
insl
dec
subb
int
loop
fsub
clc
mov
pop
std
in
incl
ret
mov
or
mov
pop
push
mov
pop
subb
sub
dec
cmc
mov
jnp
fcom
jb
mov
outsl
ds
xor
aas
sub
ret
push
or
andl
inc
xchg
mov
vmptrst
jp
mov
scas
iret
xchg
adc
mov
and
cmc
orl
lods
clc
sti
mov
sub
dec
hlt
dec
xor
shrl
divb
fstl
stos
leave
sbb
stos
mov
sub
jecxz
jmp
mov
jle
mov
adc
mov
dec
aas
cmp
js
pop
ret
aas
sbb
lds
dec
je
inc
mov
and
mov
xor
mov
mov
repz
push
sbb
ret
dec
scas
mov
sti
mov
push
outsb
xchg
pop
sub
mov
in
arpl
and
mov
and
add
jno
or
mov
push
cli
cltd
cmp
jno
pop
repz
call
test
popa
mov
inc
mov
xor
js
push
addb
lea
fsts
mov
xor
out
cmp
int3
push
lea
scas
pop
xchg
sbb
add
les
mov
adcl
mov
pop
popa
push
cmc
jecxz
bound
mov
mov
mov
pop
cmpsl
hlt
xor
bound
pop
test
and
test
xchg
pop
fcoms
and
dec
add
fs
out
incb
pop
test
inc
sub
sub
repz
xchg
sahf
mov
cmpsl
lcall
pop
sub
jl
jmp
mov
pop
daa
bound
mov
pop
out
cmpsb
scas
std
loope
loopne
pop
jb
adc
shl
loope
aaa
push
out
leave
and
jge
mov
xlat
out
rcr
leave
call
mov
fldenv
test
shll
cmp
jg
pop
idivl
xchg
out
mov
test
mov
xchg
xor
pop
xchg
ljmp
sbb
or
test
xchg
push
fnstenv
xchg
mov
sti
scas
inc
insb
pop
xchg
into
sub
adc
cmpsl
cwtl
out
icebp
and
das
xchg
dec
mov
lea
fisttpl
ljmp
adc
rorb
ret
cld
dec
not
jmp
adc
push
inc
daa
sbb
lods
insb
xchg
out
push
les
adc
adc
adc
and
mov
data16
jmp
rcrb
adc
jl
xchg
mov
je
outsl
lahf
adc
inc
jg
faddl
frstor
fstl
and
out
push
sbb
mov
ja
add
pop
punpckhbw
aas
mov
mov
ljmp
jbe
mov
xchg
imul
cs
mov
das
inc
mov
loop
leave
pop
int
in
stos
das
pop
push
add
out
inc
in
lock
std
sbb
jae
daa
fcmovu
xor
loopne
iret
add
pop
test
in
lods
mov
and
mov
and
sub
arpl
cmpsl
mov
decl
mov
push
iret
ljmp
sti
mov
adcb
loopne
dec
mov
mov
cwtl
xchg
outsl
out
shl
pop
out
in
bound
ja
cmp
lock
out
pop
sub
je
add
shlb
pop
lds
pop
pusha
sbb
daa
pusha
fadds
and
fbstp
testl
in
jne
pop
stc
addr16
es
mov
inc
cmp
shl
aaa
aas
mov
repz
jg
push
and
push
dec
ja
mov
sub
mov
into
push
sbb
insl
jno
inc
gs
and
aad
stc
lea
and
xor
jnp
in
je
xchg
leave
mov
jg
push
pop
inc
fstpt
lahf
icebp
jl
or
sti
sub
in
adc
hlt
dec
sub
sub
int3
dec
or
nop
mov
jb
clc
addr16
mov
add
cld
imul
jno
xor
xchg
mov
push
dec
pop
mov
stos
mov
cmp
test
in
xchg
aaa
mov
sub
ss
cmp
jmp
fsubr
pop
mov
call
xchg
inc
or
xor
aaa
rcl
or
inc
dec
xor
cmp
cmpsl
add
cmp
jb
jbe
dec
dec
in
mov
mov
mov
clc
ss
mov
mov
mov
adc
int3
pop
xorb
inc
scas
sbb
data16
std
pop
fidivrs
sub
fsubrp
notb
cld
sub
div
jmp
shl
xchg
inc
stc
ret
fs
les
hlt
pop
adc
call
ds
ret
dec
or
push
xchg
cmpsb
xchg
fsubr
das
ja,pt
out
jl
push
and
pop
test
loopne
out
jg
xchg
sub
xor
std
xorl
mov
push
jb
roll
mov
inc
dec
in
pop
idivl
jmp
jne
mov
scas
mul
fs
iret
aaa
jecxz
pop
nop
pop
movsb
nop
lret
push
mov
xchg
push
xor
nop
sub
push
or
cmpsl
scas
pop
adc
nop
mov
lods
mov
ffreep
jae
mov
jge
mov
mov
and
mov
mov
insl
mov
sub
mov
rolb
inc
mov
loopne
mov
les
mov
std
or
or
adc
adc
insl
fistl
clc
mov
jmp
cmc
stos
daa
push
cmp
mov
ret
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
jmp
jp
lds
sub
shr
test
int
adc
fcoms
jo
or
int
or
mov
and
xlat
repnz
pusha
fdivrs
in
jno
mov
je
adcl
pusha
dec
cld
sub
push
cmp
test
cmp
or
xchg
fiaddl
leave
add
xchg
je
rclb
and
jb
jo
jbe
mov
fs
sub
movl
mov
lds
mov
roll
mov
repnz
dec
and
mov
shrl
mov
popl
test
pop
roll
pop
mov
cmp
in
je
push
arpl
xor
outsb
xor
mov
jns
dec
sbbl
mov
int
push
jle
test
mov
pop
sbb
aad
ja
sbb
sti
sub
sbb
xchg
jo
mov
mov
mov
iret
leave
pop
shll
inc
mov
mov
movsb
sbb
sub
sbb
adc
sub
jo
inc
sbb
mov
cmp
and
movsb
fsubs
call
dec
mov
cltd
cmc
mov
test
popf
icebp
shr
inc
push
enter
or
push
inc
sub
cwtl
out
sub
and
or
inc
jmp
and
fcmovu
cmp
scas
test
mov
popf
mov
testb
shlb
xchg
icebp
ljmp
jle
jle
or
decl
mov
push
in
adc
andb
imul
out
jp
cmc
scas
pop
pop
inc
pushf
mov
into
push
mov
sub
cld
aad
aaa
mov
cmp
shll
jae
jo
adc
add
push
push
lea
movsb
mov
cld
hlt
dec
mov
pop
pop
xchg
fcmovnb
or
xor
mov
jmp
cltd
or
mov
aad
in
into
push
loopne
push
adcb
ja
jge
bnd
fdivrl
push
xorb
inc
stos
outsl
dec
and
sub
push
popf
out
jns
lock
rcl
sahf
xchg
cmp
cmp
rclb
mov
jnp
lock
call
out
shrl
sub
fisttps
in
mov
add
jmp
lahf
enter
sub
fisubrs
arpl
movsl
pop
xchg
jb
add
and
jno
repz
dec
inc
mov
into
mov
mov
in
push
iret
pop
stos
loopne
jecxz
cmp
fistps
lods
movsl
mov
aas
lods
mov
imul
pop
add
jmp
mov
xlat
lea
clc
aad
push
div
add
ja
out
dec
add
hlt
imul
mov
jno
inc
dec
mov
sbb
in
and
dec
in
push
aam
std
add
loop
or
in
lea
sub
sti
cmp
mov
jae
pop
xor
inc
jns
sahf
dec
and
pop
call
sarb
inc
xchg
loope
and
nop
scas
cmp
call
sbb
xchg
ret
inc
adc
add
mov
add
shlb
rorb
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
jmp
imul
sbb
ds
mov
int
adc
out
push
call
mov
xchg
mov
outsl
lods
xchg
jg
lods
xor
jmp
and
outsl
hlt
sbb
sub
push
mov
arpl
xor
ja
shlb
rcll
out
out
les
mov
inc
out
lds
pop
loope
ds
sub
mov
and
push
fwait
cmovl
dec
cmp
in
jns
push
push
push
mov
push
xor
cmp
xor
loopne
mov
mov
mov
ret
lods
loopne
ljmp
add
popf
rolb
call
pop
test
repz
mov
mov
out
pop
mov
xor
fdivr
xchg
sarl
sbb
call
mov
decl
add
or
cwtl
stos
xor
data16
movzwl
mov
mov
lcall
scas
movsl
test
popf
aaa
cmp
inc
jg
jge
mov
jmp
pop
sub
mov
jns
inc
shl
jge
push
jmp
push
add
pop
push
push
in
mov
pop
push
out
repz
add
sub
in
fucom
rcr
mov
pusha
repz
rorb
pop
lds
push
mov
xchg
mov
shlb
push
cli
mov
xchg
aas
cs
mov
adc
in
mov
loop
rolb
cmp
jl
or
xor
addr16
mov
mov
sub
cmpsb
outsl
mov
xor
sahf
imul
je
xchg
or
ret
pop
out
jl
insb
pop
sti
push
mov
or
int
mov
rcl
fs
fmull
out
cmpsl
mov
add
sbb
adc
lea
inc
pop
das
inc
cvtps2pi
outsl
scas
inc
xchg
lret
sbbl
sub
xchg
sbb
jge
cmp
aaa
and
cmc
adc
dec
fbld
jns
sub
das
in
cmp
in
mov
aaa
dec
scas
adc
hlt
inc
inc
sub
lret
fwait
lods
sbb
push
aas
out
std
add
inc
jno
mov
outsl
test
mov
mov
mov
pop
outsl
lods
cld
add
ror
in
adc
jne
in
je
es
es
jns
pop
mov
xchg
push
jbe,pn
push
mov
outsl
dec
cmpsl
pop
out
shl
cmp
push
ds
xlat
push
out
adc
inc
scas
inc
jb
inc
gs
jmp
cmp
cli
xchg
popa
ljmp
inc
test
sti
xor
dec
push
and
jp
xchg
xor
sub
sbb
movsl
and
clc
pop
xor
jge
ja
popf
cmp
sub
rolb
push
xchg
mov
lods
cmpsl
mov
sub
lods
sbb
call
je
add
lock
dec
xchg
jg
fistpll
sub
xor
ja
fstpl
jbe
mov
dec
aaa
lahf
jp
loopne
push
out
lds
jns
push
jae
or
add
out
dec
inc
notl
mov
xchg
xor
xchg
call
lret
or
or
out
std
sar
dec
mov
movsl
fiadds
pushl
or
jb
push
add
fmuls
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
jmp
repz
mov
pop
pop
lods
mov
mov
adc
adc
adc
cmp
lahf
sbb
add
outsb
jge
in
in
iret
frstor
cmpsb
repnz
movsb
xchg
and
pop
push
outsb
xchg
repz
icebp
sub
ljmp
xchg
rcll
dec
pop
rclb
mov
xchg
lds
push
nop
mov
outsb
in
inc
sbb
jmp
adc
pusha
lea
jle
das
mov
mov
xor
lret
dec
jne
or
inc
popa
popf
sub
jge
adc
add
movsb
cmpsb
leave
xchg
adc
stc
xlat
out
mov
addr16
dec
xchg
or
xlat
lcall
pushf
jns
cmpsb
mov
xchg
mov
inc
popf
arpl
fdivrp
popf
pop
mul
fcomps
xor
mov
xchg
push
mov
pushf
xor
inc
push
sbb
nop
pop
pop
emms
fnstsw
stc
ficoml
cmp
dec
and
mov
and
mov
cmp
push
arpl
ds
aam
lret
fs
mov
push
jb
roll
sbb
movsbl
add
into
xchg
sbb
out
inc
jmp
jl
or
test
xlat
je
push
idiv
dec
pop
or
dec
js
jno
insl
sub
xcrypt-ctr
cmpsl
fcmovu
stos
fwait
add
addr16
cmp
mov
dec
imul
hlt
cmpsl
and
dec
or
jbe
orps
dec
shl
xor
xlat
ss
pop
mov
cmove
add
mov
adc
int3
insl
fdiv
jecxz
jb
pop
fistpll
jl
adc
out
insb
pop
repnz
sub
push
dec
xchg
mov
out
cltd
add
push
sar
notb
lea
cwtl
or
and
and
add
std
int3
jb
outsl
mov
jge
cmc
ret
outsl
cmp
mov
add
cwtl
dec
mov
sbb
cmp
pop
imul
popf
sub
rcrb
and
pop
mov
fildll
ret
pop
xchg
int3
enter
and
mov
orb
mov
adc
cmp
fldenv
call
nop
xchg
lret
inc
push
subb
imul
fimuls
testl
addr16
or
push
sbb
jecxz
jmp
mov
dec
std
je
aam
lods
frstor
jmp
lret
and
negl
fs
int3
loopne
mov
cmp
cmp
out
push
cmp
dec
icebp
in
stos
bound
outsl
cmpsl
xor
inc
pop
hlt
adc
or
outsb
repnz
in
arpl
xchg
sbb
gs
shl
mov
shll
loopne
push
mov
into
repz
xchg
add
sahf
stc
adc
or
and
shlb
cmpsl
in
xor
shll
pop
mov
push
bound
rcll
push
add
mov
mov
and
stc
xchg
xor
push
jl
inc
sti
mov
sarl
insl
repnz
dec
std
add
dec
and
lret
call
sub
je
xor
xor
mov
sub
or
sbb
mov
dec
movsl
dec
dec
lds
cld
call
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
jmp
mov
push
jle,pt
pushf
insb
insb
shrl
adc
das
js
data16
sub
adc
mov
aas
sub
cld
test
cmpsl
cmp
mov
sub
iret
sub
mov
inc
hlt
xsha256
cmpsb
xchg
aad
cs
mov
cld
mov
imul
adc
fcomip
inc
adcb
and
jecxz
test
in
sarb
jmp
shl
mov
push
pop
jo
imulb
outsl
mov
jne
jle
iret
nop
jno
aas
insb
scas
cld
test
or
add
cmc
cs
ja
push
outsw
out
jle
loop
or
sbb
jl
out
pop
adc
push
push
stos
xchg
mov
ds
mov
sub
mov
push
mov
dec
insb
loopne
mov
and
sbb
jmp
fwait
push
popa
or
mov
lahf
pop
mov
and
and
cmp
xchg
push
cmp
int
add
daa
sub
iret
push
cmp
lcall
cmc
loopne
fdivs
loopne
aam
jl
out
xchg
push
cli
add
sbb
push
xchg
cltd
adc
sbb
movb
sbb
cld
adc
adc
call
addl
inc
stos
jge
lret
loop
add
int
adc
js
or
dec
mov
gs
xchg
mul
out
inc
mov
test
lds
cmp
aad
popf
jne
fsubr
lret
push
pop
ficoml
push
mov
movl
out
shll
push
mov
insb
mov
incl
xor
les
mov
add
sbb
adc
fimuls
loope
dec
dec
fabs
add
outsb
repz
sub
decl
dec
out
adc
aaa
insl
fwait
xor
add
outsl
aas
fs
popl
dec
xchg
sbb
push
loopne
out
aad
lcall
mov
loop
push
movsb
bnd
out
jnp
xchg
lcall
push
mov
pop
in
jns
pop
pop
inc
mov
movsb
or
into
lcall
jne
aas
inc
nop
leave
incb
in
or
xor
mov
subb
sbb
insb
dec
in
mov
jge
js
dec
jae
lcall
shrl
enter
push
sahf
mov
sub
mov
sbb
imul
subb
clc
scas
and
pop
in
cmpsl
xor
sub
jbe
adc
mov
pop
fnsave
mov
mov
pushf
pop
jecxz
pop
and
pop
testb
es
adc
mov
or
testb
jl
jns
fistl
push
test
pop
arpl
xchg
addl
js
in
lods
or
mov
and
sbbl
cmp
pop
adc
data16
jmp
cwtl
sbb
jno
push
dec
push
xlat
xchg
pop
adc
xor
rcrb
jmp
push
ja
popa
jle
mov
test
lret
out
push
daa
pop
pop
bound
int
and
dec
lret
jmp
fdivs
adcl
jp
xchg
pop
fiadds
sub
jae
dec
sub
shlb
inc
or
xor
push
add
rol
loopne
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
sbb
sbb
out
stos
cmp
movsb
js
mov
adc
mov
fdivrl
inc
mov
clc
pop
and
testl
sub
mov
ret
jb
iret
or
rcr
cmpsl
pop
pop
pop
gs
cld
cltd
mul
das
dec
out
das
pop
xlat
mov
mov
scas
sahf
int
hlt
or
outsb
std
das
outsb
mov
out
xor
mov
insl
sbb
outsb
push
lcall
in
xchg
repz
fsubrl
sbb
mov
shrb
inc
push
add
daa
cmp
les
push
jmp
out
ss
imul
movsb
jge
push
push
sbb
mov
jne,pt
test
push
adc
sbb
imul
ss
pop
imul
dec
int3
enter
insl
xor
int3
fidivs
and
dec
mov
mov
xchg
mov
jne
loop
cmp
in
rcl
pushf
jno
mov
jp
in
pop
loop
dec
xchg
in
andb
push
xor
mov
pop
cld
sub
xchg
or
mov
dec
test
mov
lahf
pop
ret
js
mov
roll
adc
das
arpl
jbe
call
mov
inc
mov
cmpsl
inc
dec
mov
sbb
test
push
in
testb
out
lods
mov
xchg
jge
adc
in
pop
andnps
dec
jle
cli
mov
mov
stos
in
sbb
scas
lods
bound
and
inc
and
jbe
sbb
add
mov
adc
push
mov
in
sbb
iret
jecxz
jnp
xchg
jo
dec
mov
hlt
icebp
aad
je
int3
inc
mov
cmc
pand
adc
sarb
mov
add
xlat
xor
int
mov
jg
add
jns
mov
dec
mov
lcall
subl
add
adc
mov
cmp
pushf
arpl
int3
lahf
push
cmp
loope
ds
call
pop
sub
fdiv
sub
mov
icebp
stos
or
push
icebp
mov
ss
sar
dec
jnp
into
cli
adc
cmp
clc
dec
inc
jbe
orb
repnz
lret
mov
out
sarb
dec
or
add
hlt
cmp
dec
aaa
dec
lret
inc
enter
lahf
xchg
pop
aad
dec
into
cld
inc
jecxz
sbb
in
xor
lds
sahf
jno
ret
fwait
pop
cs
lcall
shl
jbe
or
push
mov
loop
je
movsb
mov
inc
movsl
ror
push
and
shrb
or
or
sub
jg
lods
ljmp
jno
fsts
inc
inc
rclb
jb
in
inc
les
repz
movsb
stos
stos
and
int
gs
mov
dec
mov
mov
mov
xor
fnstsw
and
scas
lret
xor
dec
xchg
stos
xor
jbe
in
and
out
icebp
arpl
or
fwait
sahf
xchg
mov
fdiv
cltd
jg
jbe
pop
popf
pop
lock
mov
scas
inc
out
add
cmp
rolb
icebp
mov
cli
lahf
inc
hlt
in
bswap
sbb
push
sti
push
loopne
jl
mov
lahf
js
pop
cmp
mov
push
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
jmp
adc
jmp
repnz
ret
push
mov
adc
int
adc
loope
daa
sbb
adc
adc
aaa
jle
jo
leave
gs
sarl
rorl
dec
inc
cld
jb
mov
aas
mov
dec
mov
dec
inc
add
in
mov
xchg
loopne
nop
pop
push
bound
push
sahf
xor
push
popf
and
push
rolb
jb
and
lret
jecxz
repnz
stos
and
inc
jb
stos
xchg
cmp
xchg
popf
int3
insb
fbld
adc
pop
jle
aas
dec
mov
or
jnp
jo
data16
sbb
dec
add
or
sti
adc
out
sub
shrb
fsts
push
scas
inc
scas
inc
sbb
addr16
cmpsl
lcall
inc
push
jo
fbstp
jno
movsl
das
cltd
and
mov
mov
push
pcmpgtd
pop
jnp
iret
pop
test
gs
out
add
mov
add
stos
mov
add
negl
dec
push
mov
xchg
mov
fmuls
xchg
dec
sub
mov
xor
aad
jge
std
sub
pop
sahf
mov
nop
gs
mov
pop
inc
push
inc
push
lods
pusha
or
je
hlt
notl
sarb
push
mov
dec
out
aad
pop
mov
and
xchg
lods
xchg
imul
xchg
in
and
fdivp
inc
xchg
sub
push
shlb
fidivrl
mov
dec
mov
cmp
dec
cwtl
add
push
sub
mov
pop
psllq
mov
push
icebp
fldenv
xchg
mov
push
repnz
or
popa
and
and
movsb
cmp
pop
jecxz
aam
mov
cwtl
push
mov
idiv
sbb
scas
and
lea
lods
push
inc
jge
xor
sub
inc
xlat
add
xchg
cmp
adc
cld
mov
into
aas
mov
mov
pop
pop
fstl
adc
sbb
dec
ljmp
dec
inc
mov
lds
or
icebp
test
cmc
and
loop
mov
sub
lods
pop
orl
xchg
into
inc
incl
xchg
jmp
call
xor
ret
cmp
mov
push
pop
js
xchg
out
adc
mov
mull
inc
mov
mov
mov
push
push
mov
adc
push
mov
and
cmpsl
dec
xchg
or
mull
ret
xor
insb
push
out
xchg
xor
cmp
inc
enter
fwait
call
movsl
and
fstsw
xchg
cmp
nop
xchg
dec
pusha
mov
sbb
into
xchg
rcrl
pop
push
js
scas
cmc
movsl
stc
and
mov
enter
movsb
clc
or
int3
aaa
adc
out
sub
push
mov
hlt
movsl
scas
bound
inc
cmp
sahf
mov
pop
ds
adc
inc
adc
std
adc
stos
ret
adc
jp
push
or
pop
outsb
mov
adc
adc
fldl
and
xor
ljmp
jl
push
and
addl
lods
cmp
cmp
xor
movsl
in
cmp
movsb
jnp
dec
xchg
dec
pop
arpl
mov
testl
bnd
imul
or
jmp
mov
jmp
or
jge
pop
push
dec
cltd
cmc
leave
lcall
xchg
adc
int
adc
bnd
out
ficompl
pop
mov
inc
xor
jmp
xor
mov
add
ljmp
aad
nop
xchg
test
aam
pop
pop
lds
jmp
inc
in
xchg
fs
add
pusha
pop
loope
xor
addb
cmpsl
lock
pop
imul
jg
loop
js
cmc
pop
rol
jl
ja
mov
fidivrl
into
push
int3
clc
hlt
sti
cmp
sti
pop
movsb
jmp
cli
scas
pop
jno
mov
adc
mov
cmp
cli
insb
popa
daa
mov
imul
mov
aad
mov
cmp
bound
inc
inc
jns
icebp
add
pusha
sti
inc
cli
les
xor
cmp
and
repz
negb
imul
lods
or
jnp
jbe
inc
xchg
fwait
jno
sub
pop
jecxz
dec
add
mov
dec
pop
push
les
mov
jle
sbbl
xor
jno
mov
xlat
stos
xchg
push
jl
push
in
mov
inc
pop
ret
les
push
mov
out
icebp
fisubrl
and
jmp
xchg
inc
and
add
inc
mov
cmpsb
xchg
mov
pop
cs
xor
mov
jmp
jb
push
push
mov
das
aaa
call
adc
xchg
mov
push
fstpl
stc
sti
loop
cmp
xor
cmp
rolb
sub
repz
sub
sbb
and
xlat
pop
adc
add
pop
xor
shrb
in
sub
outsb
cld
adc
scas
leave
jg
out
lods
add
sbb
lahf
popa
and
fs
fs
pop
fistpl
testl
lods
adc
lret
pop
xorb
mov
mov
fwait
js
addr16
dec
aaa
or
and
jns
out
push
jg
divl
push
and
cmpsl
cmp
inc
unpcklps
arpl
xor
add
dec
enter
adc
add
orl
add
dec
xchg
pop
outsb
xchg
add
cmc
or
xor
icebp
stos
shlb
mov
lock
pushf
jecxz
jno
add
pusha
or
test
lret
jg
pop
pop
cs
fidivrs
pushf
aaa
or
into
gs
cld
lret
sbb
stos
int
and
xor
inc
test
insl
cmp
sub
dec
data16
adc
mov
mov
js
xchg
xor
jle
fidivrl
cmp
repz
jle
icebp
dec
push
out
jne
dec
testb
cmp
lahf
js
outsl
xchg
fistps
add
sub
and
ficompl
push
loopne
lock
test
mov
and
scas
in
rcrl
jo
aaa
adcl
loop
jnp
clc
aad
inc
fdivrl
jl
pop
ljmp
cmpsb
fbstp
sub
sub
add
pop
je
in
xchg
out
ret
xchg
push
add
sti
pop
xor
mov
subb
mov
lock
pushl
aam
sub
push
xor
fwait
jmp
cmc
jne
out
mov
call
adc
out
in
rcrb
out
push
push
in
test
adc
call
push
mov
push
adc
fists
sbb
xor
cld
sbb
pop
mov
jle
mov
ja
stos
push
insb
ss
and
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
jmp
stc
sub
xor
or
int
adc
mov
out
mov
mov
sub
stos
push
inc
cmc
sarb
hlt
jno
int
xchg
popa
sub
inc
cmpb
sbb
push
pop
ds
mov
xchg
xchg
movsb
stos
xlat
dec
mov
hlt
inc
scas
cmpl
shr
mov
xchg
lahf
jg
es
mov
mov
ficomps
arpl
int
cmpsb
xor
sub
lds
jbe
inc
rcr
std
sub
xor
cmp
inc
inc
ja
and
in
imul
jne
push
je
jnp
adc
nop
lret
xchg
mov
cld
sub
fidivrs
cmpsb
push
sbb
and
push
add
or
ret
jne
cli
repz
popa
mov
jne
insl
mov
stos
jbe
or
pushf
xchg
loope
rep
aas
inc
shl
lock
enter
insl
sbb
dec
ja
maxps
push
shl
lret
push
iret
mov
dec
jmp
stos
sti
out
aas
mov
lods
adc
mov
cmp
imul
in
fnstenv
subb
push
outsl
mov
fisttps
dec
adc
call
int
mov
hlt
outsw
shll
fwait
std
cs
call
pushf
lods
dec
push
xchg
xchg
push
and
lret
orl
add
ljmp
adc
inc
mov
or
cld
pushf
xor
movsl
test
das
icebp
lret
fidivrs
dec
mov
pop
jp
and
cs
mov
div
fistl
xor
arpl
push
inc
pop
fldt
xor
out
sub
xor
sbb
stos
int
adc
ljmp
mov
fsubl
xchg
dec
das
jnp
dec
std
in
fisttpl
fiaddl
popf
jle
ja
arpl
sub
jns
cmpl
je
arpl
call
call
xchg
call
out
sub
mov
lcall
ss
xchg
xrstor
shrb
inc
jp
cld
sub
jbe
and
jne
cmp
adc
scas
cmp
shrl
clc
jno
and
sbb
pop
push
mov
int3
loop
push
fmulp
mov
inc
bnd
sbb
notl
xchg
je
aam
andb
ret
mov
pop
fcomp
jb
imul
movsb
mov
lcall
and
and
adc
mov
ret
sti
xchg
insl
xor
cmp
sbb
lcall
lds
pop
loopne
fdivrs
cmp
jnp
mov
mov
cltd
pop
pop
ljmp
lcall
sbb
out
inc
outsb
scas
call
daa
nop
idivl
mov
inc
fmull
xor
cltd
lahf
data16
stc
outsl
in
clc
roll
aam
cmp
leave
imul
aad
movsl
xchg
popa
sbb
jmp
adc
pop
sti
and
data16
xor
movsl
loop
shrl
adc
mov
sub
push
in
push
in
add
mov
lea
jbe
pushf
cmp
jp
adc
push
mov
addr16
sbb
add
cmp
and
sti
outsl
lahf
lea
or
mov
inc
or
enter
add
or
mov
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
jmp
dec
popf
shll
pop
das
popf
ffreep
mov
iret
aam
jle
test
adc
adc
adc
fcoml
sbb
sarb
add
push
xchg
out
jnp
push
mov
les
mov
mov
repz
rclb
mov
jmp
mov
fistpll
or
mov
lods
xlat
movsl
or
loope
cmc
lods
cltd
pop
xchg
fnstcw
inc
pop
leave
mov
mov
mov
mov
push
xchg
mov
jns
shll
in
cs
jnp
jp
rcrb
mov
xor
daa
test
int
push
bound
andb
ljmp
mov
fstl
dec
mov
test
jnp
or
push
mov
mov
sti
xchg
dec
shll
incb
and
sub
rcrl
adc
dec
shlb
orb
or
cmp
pop
daa
xchg
fistl
sub
or
iret
fstpl
gs
push
mov
mov
pop
repz
sbb
push
sub
push
sub
xor
xchg
xor
rorl
xor
loope
ds
addr16
or
scas
cmpsl
leave
aam
cs
je
pop
push
jge
cli
mov
std
adc
rcrl
bound
ljmp
inc
xor
push
mov
scas
pop
in
arpl
imul
mov
jns
and
ljmp
ljmp
fistl
out
jns
in
xchg
xor
push
add
in
fsubl
dec
mov
cmpsl
cmpsb
inc
mov
push
sbb
imul
dec
xor
pop
lret
push
mov
jno
imul
cmp
sahf
cmp
jns
cmp
mov
aam
jge
int
bound
std
sbb
icebp
mov
movsl
cmc
gs
push
push
sub
sbb
sti
add
ja
cmp
movsb
movsb
fstl
sti
mov
lahf
test
and
scas
mov
jl
lcall
rorb
call
testl
and
sbb
mov
out
mov
cld
or
mov
sub
mov
add
push
ljmp
mov
leave
bound
lods
pop
mov
fists
xor
imulb
js
sarb
fcomi
inc
push
cmpsl
mov
rcrl
xor
frstpm(287
enter
sahf
xchg
loopne
lret
sbbb
aas
gs
movsb
iret
in
lcall
xchg
push
mov
out
std
out
push
pop
std
add
inc
frstor
call
sbb
cmp
repnz
inc
call
push
imul
and
cmc
ret
sarl
push
mov
sbb
cli
mov
dec
inc
inc
ds
rcrb
mov
int3
jne
and
mov
jl
insb
ss
dec
xchg
adcl
xchg
fdivrl
lahf
mov
pop
mov
and
cmp
iret
js
fdivs
es
pop
xchg
pop
dec
es
pop
sub
popf
les
or
xchg
and
faddl
mov
jecxz
repz
lret
ljmp
inc
addr16
andl
fbld
xor
xlat
and
imul
rcrb
in
xor
or
movsb
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
imul
imul
and
xchg
js
jl
adc
adc
adc
push
fistpll
outsl
nop
negl
call
outsl
mov
and
jno
mov
or
fwait
sbb
or
inc
push
sub
fadd
xchg
add
int3
stos
gs
stos
loopne
sub
xor
mov
pop
or
push
hlt
mov
adc
imull
bound
mov
sbb
xlat
sbb
loopne
roll
cltd
or
repnz
or
mov
jecxz
ret
adcb
loopne
xlat
inc
clc
cltd
stc
inc
icebp
jg
xchg
test
aam
xchg
mov
mov
jmp
dec
adc
in
push
mov
mov
mov
mov
inc
mov
cmpsl
and
or
pop
inc
data16
xchg
shll
loop
xchg
sarb
jbe
das
push
jns
aaa
cltd
push
mov
and
xor
dec
dec
pop
adcb
mov
push
shlb
cli
enter
aaa
jmp
mov
and
cwtl
add
hlt
es
dec
ret
sti
in
and
inc
rol
jae
add
or
cwtl
sahf
outsl
add
or
inc
repnz
icebp
xchg
push
data16
popf
cltd
pop
std
mov
loopne
xchg
mov
or
sub
js
pop
pushf
pop
adc
js
pop
aam
jl
insl
dec
xchg
sub
jb
repnz
in
add
bound
push
aas
dec
xchg
cmp
xor
jnp
xor
outsl
fwait
imul
mov
dec
jae
xchg
ret
jnp
jo
shll
mov
mov
test
xchg
xchg
dec
fmul
jno
sub
js
cmpsl
aas
mov
sti
nop
cwtl
mov
mov
int
or
pop
mov
cld
pop
scas
aad
inc
clc
stc
jle
ds
sbb
pop
xor
or
in
rolb
add
shr
repz
and
shl
xchg
test
add
cmp
fnsave
inc
or
nop
pop
mov
addr16
adc
and
or
scas
int3
adc
sub
mov
ljmp
je
mov
inc
hlt
push
cs
in
jnp
subb
and
lret
fldcw
xchg
add
in
jl
mov
data16
push
scas
int
in
push
xlat
jle
dec
mov
out
fsubs
fisttpll
rolb
dec
xor
dec
xor
pushf
mov
mov
xorb
popf
js
roll
cmp
adc
jle
adc
lret
jo
sbb
push
data16
add
cmp
pop
push
inc
mov
add
test
andl
shrl
pop
add
aam
push
sub
fs
dec
inc
cmp
and
push
lahf
mov
push
jg
loopne
fiaddl
pop
xchg
inc
add
repz
adc
mov
xchg
lahf
xchg
xchg
fadd
insl
push
jmp
test
bound
dec
add
inc
out
fidivs
mov
sub
test
sarw
and
ds
mov
arpl
mov
out
or
xchg
lea
lret
cltd
inc
nop
call
pop
and
ret
mov
pop
enter
mov
push
pushl
push
push
call
mov
jmp
xor
sbb
stos
scas
pop
ljmp
adc
adc
shr
loopne
lret
out
inc
mov
xor
mov
in
clc
sarl
das
xor
push
ret
or
sub
inc
xor
mov
addr16
cmpb
dec
out
pop
dec
dec
movsl
adc
dec
mov
xor
add
dec
or
pop
adc
and
in
adc
add
push
cwtl
inc
sti
out
cmp
icebp
mov
cld
sub
call
cmp
pop
les
fcomps
adc
inc
mov
push
xchg
jb
insb
not
shll
ret
add
nop
in
xorl
out
xchg
repz
add
wrmsr
negb
call
imul
jmp
inc
push
out
sbb
lea
shlb
test
cmp
adc
pop
xor
pop
lock
push
fucomi
inc
jge
lahf
cmpsl
jp
fdivs
mov
or
or
xlat
xor
int
add
dec
loop
shll
or
xchg
sbb
inc
push
sub
adc
jmp
out
xor
mov
jmp
push
mov
mov
enter
xchg
ret
pop
loopne
scas
xchg
mov
inc
mov
das
mov
push
outsb
hlt
xor
push
sbb
test
mov
push
xor
nop
lahf
xchg
push
iret
dec
push
adc
das
jnp
in
addl
adc
cltd
xchg
shl
js
sub
aad
aaa
loop
mov
lcall
clc
mov
fadd
insb
cmpsl
push
ss
pop
inc
test
mov
push
inc
nop
jb
dec
dec
cmc
rolb
cmp
jb
aad
in
xchg
pop
mov
and
fistl
fldcw
daa
xchg
ret
jnp
sub
dec
lret
pusha
lret
push
inc
js
sbb
mov
fwait
in
mov
leave
sbb
mov
sti
bound
fisubl
xchg
sub
out
cld
cltd
push
xor
in
push
mov
mov
pop
lock
mov
ror
out
cltd
adc
cmp
adc
into
in
imul
sub
cmpsl
ret
sbb
dec
int3
push
daa
mov
xor
popf
push
sub
lods
mov
insl
loope
mov
test
add
imul
lahf
lods
mov
sub
xchg
hlt
mov
adc
cwtl
fistps
loopne
aaa
jns
aad
jmp
sbb
push
stc
adc
xor
xor
inc
and
fistps
xchg
add
xor
jae
mov
in
sub
mov
mov
mov
and
loope
hlt
inc
xlat
fwait
jmp
push
pop
nop
xor
mov
and
popf
jmp
adc
mov
xchg
sub
mov
iret
rcl
int
jb
and
shrl
jl
pop
cmp
roll
dec
xchg
adc
xchg
into
fimuls
inc
sbb
mov
imul
cmp
or
mov
jle
ds
loope
adc
arpl
fisttpl
jp
jns
inc
fidivrs
xchg
fisttpl
jb
xchg
sub
pop
std
outsb
rcrb
cmp
pop
mov
cs
cld
int
js
repz
xchg
jmp
cld
mov
out
push
mov
andl
shrd
jmp
ja
jle
sub
xchg
mov
mov
jle
jb
adc
adc
adc
icebp
test
push
in
push
inc
and
mov
xchg
inc
out
rorl
lahf
test
cwtl
inc
test
movsl
fucomi
lock
mov
arpl
push
pop
movswl
push
ror
xchg
xor
ja
in
mov
or
xlat
xchg
and
out
bound
int
sbb
daa
test
dec
push
jns
push
adc
or
xchg
sbb
bndstx
dec
and
xchg
push
fucom
cmpsb
mov
mov
push
arpl
pop
call
xchg
push
mov
dec
iret
cmp
sub
sub
cmpl
popf
jl
pop
js
je
push
mov
cli
jmp
adc
fyl2xp1
sti
sub
movsb
inc
mov
push
jmp
loopne
jg
mov
pop
inc
clc
mov
int
and
ljmp
insl
or
add
jb
fidivs
mov
and
es
inc
add
out
pop
mov
dec
test
adc
jae
lock
sub
subl
nop
movsb
insl
ljmp
jg
aad
and
mov
dec
push
shl
inc
mov
xor
push
sti
mov
xchg
adc
das
xor
xor
je
dec
mov
ss
pop
in
jmp
and
pop
jae
nop
faddl
sbb
je
and
loopne
es
testl
aas
int
xchg
js
and
das
jl
mov
stos
pop
inc
mov
dec
xchg
insb
dec
jne
pop
mov
insl
jp
mov
jne
gs
sub
fcompl
in
movsl
and
out
xchg
inc
mov
int3
adc
mov
pop
cltd
mov
movsb
mov
sub
sub
shl
shrb
and
popa
push
sub
aam
and
xchg
push
pop
ret
lcall
jg
jp
test
cmp
aam
or
fisttps
jl
mov
or
icebp
and
push
add
scas
add
cld
stos
sbb
mov
sbb
xchg
nop
dec
das
daa
sti
jnp
mov
mov
ja
cmp
jnp
lahf
push
dec
inc
sahf
push
scas
out
out
mov
adc
and
fimull
or
and
test
and
dec
inc
mov
xchg
and
dec
cmp
or
mov
sahf
inc
jle
imul
sbb
idivl
frstor
data16
daa
movsl
inc
inc
push
icebp
adc
shlb
test
sub
push
adc
gs
stc
pop
add
je
popf
outsb
fcoms
popf
jae
mov
fisubrs
stc
jge
outsb
add
fwait
cmpsl
loopne
out
cmp
xchg
inc
in
mov
jg
fmul
cmpsl
lds
frndint
je
out
adc
scas
cs
jle
pop
mov
std
lret
repnz
mov
rcr
mov
cmp
ret
loop
popf
xlat
hlt
push
or
sbb
je
and
dec
mov
pop
outsl
daa
sarl
cmp
dec
fcomi
mov
cmp
divl
je
negl
or
fistps
subl
je
std
fwait
and
sbb
jo
mov
xchg
mov
or
cmp
ljmp
out
xor
mov
mov
mov
push
jmp
bnd
test
and
adc
int
adc
sbb
dec
loope
adc
xor
lcall
push
push
mov
jmp
sbb
fistps
out
sub
xor
xor
cmp
mov
add
lret
into
inc
cmp
cmp
sub
push
pop
xor
and
shl
lret
cmp
aad
test
pop
dec
in
push
or
pop
aas
jg
test
pop
cld
sbb
pop
mov
lahf
in
aad
cmp
jnp
add
adc
les
jge
aam
pop
xlat
ficomps
test
push
dec
sarb
mov
mov
aam
mov
push
cmc
jp
dec
add
stos
cmc
fwait
xor
fcoml
out
fildl
shl
push
test
outsb
sub
lcall
mov
pop
dec
jge
fs
mov
fs
push
xorb
push
fs
jecxz
test
add
or
dec
outsb
jno
and
pop
dec
in
cwtl
mov
loopne
in
or
lods
stos
cmp
jb
sbb
popa
cmp
jns
lods
dec
int3
imul
lock
or
daa
and
jp
adc
popf
sti
xor
dec
in
cmpsl
pop
xchg
inc
ret
popa
stos
add
ss
loope
mov
xchg
xor
dec
bound
push
sbb
repnz
xchg
lret
xchg
call
xor
or
xor
subl
adc
sub
cmp
and
popf
inc
mov
fistpll
push
andl
scas
and
xchg
loope
movsb
mov
sub
fistpl
adc
leave
xor
jmp
out
andb
jge
lds
imul
add
out
sub
daa
mov
cmpsl
lds
xor
jge
push
and
pusha
cmpsb
aaa
adc
adc
je
xor
mov
inc
or
push
cmp
push
and
and
push
in
mov
arpl
test
loope
arpl
xchg
or
or
insb
scas
ds
push
xorl
sahf
pop
dec
aaa
dec
xor
enter
les
outsl
pop
pop
pop
in
mov
sbb
jmp
in
clc
std
or
mov
in
xor
lahf
sar
inc
push
or
inc
insb
jge
cmp
es
xchg
cltd
sbb
sahf
cli
mov
and
aad
mov
in
mov
push
mov
cmpsl
inc
fisttpll
xchg
mul
xor
sahf
lea
cltd
lret
push
sbb
test
inc
cmpsb
jb
ret
push
push
cltd
sub
cli
pushf
inc
lcall
push
and
push
int
das
xor
mov
inc
repz
cmp
jns
or
insb
xor
lods
inc
daa
scas
dec
cmpb
adc
xchg
adc
nop
ret
xchg
in
test
xlat
cmpsl
dec
testl
dec
inc
pop
or
cmpsb
jecxz
pop
mov
loop
ds
xor
mov
mov
sub
ljmp
bound
dec
inc
iret
shlb
stos
jl
in
lock
add
pop
mov
mov
mov
dec
or
inc
and
ja
mov
jnp
jb
das
cmc
enter
inc
std
and
jo
sub
sbb
je
insl
lods
in
inc
test
inc
xchg
fadd
inc
pop
add
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
sbbl
jmp
test
sub
sub
push
bound
adc
adc
xchg
inc
xor
ds
cmp
addr16
push
pop
neg
cs
pop
mov
mov
mov
int
pushf
xchg
sbb
cmp
outsl
mov
mov
push
push
out
pusha
ret
or
pushf
cmpsb
or
adc
mov
sbbl
inc
cli
xchg
dec
add
cmp
sbbl
dec
inc
dec
cs
dec
std
mov
lods
mov
jne
js
rcl
cmpsb
popf
sub
mov
es
inc
sti
call
or
jmp
daa
cmp
js
das
mov
sub
rolb
jle
les
hlt
xorl
hlt
mov
lea
pop
out
divl
icebp
mov
sti
call
sbb
cmp
dec
xchg
cmpb
xorl
dec
xchg
push
and
push
ficoms
lds
xor
into
dec
test
sbb
mov
sbb
or
int
test
push
add
jle
cld
ljmp
shll
pusha
or
test
push
ja
cmc
les
and
jge
stos
rclb
ret
je
sbb
jb
pusha
stos
repz
loope
mov
lret
inc
loopne
jge
fldenv
cwtl
neg
daa
andl
inc
cs
and
fdivr
je
dec
lret
and
dec
sbb
fsubrl
pushf
push
icebp
and
mov
add
in
fidivrs
jbe
jns
nop
xor
lods
popa
jg
jnp
cs
pop
js
mov
pushf
and
fisttpll
add
fldl
or
aaa
push
loope
inc
or
push
mov
aaa
aas
adc
lret
stc
xor
stos
leave
lret
lds
daa
in
jnp
loopne
cld
aad
mov
or
dec
ret
repz
xchg
dec
mov
aam
scas
inc
xor
or
ret
leave
add
ljmp
add
mov
aam
mov
leave
push
push
aas
int
fs
mov
ds
pop
decl
sub
lcall
ret
in
in
rcrb
or
add
mov
negl
in
xor
mov
push
insl
cmp
aad
pop
mov
xor
je
das
dec
inc
addr16
dec
adc
mov
mov
mov
cmpsl
leave
ret
or
pop
mov
fwait
andb
hlt
mov
add
mov
aad
xor
sub
jns
arpl
jle
cli
ljmp
xchg
imul
pop
jl
cwtl
mov
cmpsb
cmp
in
roll
lock
hlt
scas
cli
fcmovu
stos
xor
dec
push
dec
adc
mov
mov
movl
jge
jae
in
dec
fs
mov
out
cli
aaa
dec
mov
push
insl
mov
scas
andl
pusha
leave
inc
adc
mov
push
mov
cmp
stc
outsl
pop
cmpsb
jns
gs
mov
stos
scas
lcall
cli
cmp
sub
adc
push
sahf
adc
and
test
es
jg
imul
and
or
dec
mov
stos
es
jecxz
movsl
jbe
push
push
xor
mov
hlt
test
sbb
mov
pop
push
adc
popf
cmp
sub
sub
sub
push
cmp
mov
stc
decb
hlt
jmp
jno
das
aam
inc
shrd
movl
shr
ret
movzwl
sub
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
add
movl
or
mov
mov
cmpl
mov
mov
mov
movl
jmp
movl
movl
ja
pushl
push
push
pushl
push
pushl
pushl
call
xor
adc
andl
adc
sub
add
addl
movl
cmpl
mov
mov
movl
jmp
movl
mov
jne
call
or
movzbl
sub
mov
and
or
mov
or
xor
mov
or
movl
adc
movl
sub
movl
push
movl
xorl
movl
and
push
sub
movl
sbb
mov
andl
mov
push
push
addl
push
call
xor
mov
mov
movl
push
movl
or
adcl
push
or
xor
xor
push
andl
push
call
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
not
je
push
pushl
push
pushl
push
pushl
pushl
pushl
push
pushl
push
push
pushl
call
orl
notl
adc
mov
sbb
add
and
inc
mov
addl
push
orl
push
addl
push
push
decl
call
cmpl
movl
mov
mov
jmp
movl
jne
pushl
push
call
add
add
adc
mov
xor
add
sub
or
mov
and
mov
mov
or
cmpl
movzwl
movl
movl
jmp
movl
movl
jae
pushl
call
adc
xor
xor
adc
orl
add
mov
add
mov
subl
movl
mov
xor
movl
mov
xor
add
sub
and
movl
adcl
movl
jmp
fcmovne
mov
test
int3
jns
stos
adc
adc
adc
adc
iret
sbb
mov
inc
cwtl
pop
out
inc
pop
mov
push
jbe
rorb
xchg
std
adc
cmp
jge
mov
shrl
ja
add
lods
xchg
ljmp
ja
xor
ss
push
cs
cld
imul
xlat
mov
ror
mov
cmp
lret
push
push
pop
adc
xor
push
addr16
push
fsub
sbb
loop
pop
add
cmp
inc
jne
rclb
jo
mov
jae
stos
ljmp
jae
adcb
mov
adc
inc
sbb
call
js
dec
enter
xor
sub
fs
mov
fwait
dec
repz
sbb
fstps
movsb
int3
xor
shlb
dec
push
jmp
pop
xchg
orb
mov
leave
mov
and
in
fld
cmc
dec
insb
out
loope
push
enter
push
shl
jbe
mov
ja
add
mov
pop
es
cmp
mov
stos
punpcklbw
in
xchg
mov
add
xor
pop
sub
adc
cmpsb
and
push
shll
push
int3
insl
jo
cmp
popf
lods
mov
ret
add
add
sbb
test
in
jbe
mov
popa
in
inc
lahf
pop
movsb
inc
clc
mov
outsl
fisubs
adc
enter
jmp
cwtl
xlat
or
inc
xchg
cltd
scas
movsl
out
je
sub
push
mov
jl
pusha
pop
jns
rorb
sub
jp
dec
ret
fistpll
cmp
std
xchg
dec
mov
sbb
and
sub
jno
adc
repz
cld
test
ss
in
in
mov
iret
aas
shll
out
mov
jle
adc
cmp
pop
jno
sbb
scas
jno
inc
inc
xor
rcl
cmp
mov
in
push
push
nop
mov
repz
fsubl
ja
dec
idivb
in
fidivrs
bnd
enter
jb
push
loopne
cmp
fnstenv
push
push
mov
jge
sti
icebp
jbe
mov
les
shlb
cmp
mov
sbb
adc
aas
iret
in
bound
je
call
sarb
adc
xor
sbb
jbe
xor
shrl
xor
in
clc
xor
je
add
or
sbb
add
sub
movsb
arpl
dec
mov
lahf
push
fldl
les
jecxz
pop
fcoms
or
test
cmp
fadds
pop
out
mov
sbb
cmp
jge
inc
push
add
dec
jecxz
push
out
lea
inc
cmp
mov
nop
cmc
pop
and
xchg
lcall
lret
sahf
jne
push
dec
rorl
xor
aad
rorl
jbe
in
mov
xchg
inc
notb
pop
mov
pop
jae
aas
in
sub
sub
aam
lea
mov
add
aas
cmpsl
ja
sbb
inc
jo
cmp
les
dec
insl
imul
movsb
mov
sti
push
clc
out
fwait
sbb
shl
jo
aam
xchg
inc
pavgb
push
mov
test
pop
and
sub
int
or
adc
pop
mov
inc
adc
mov
out
sub
cs
mov
outsl
push
stc
pop
jno
xor
out
ret
shr
test
cmp
ljmp
inc
mov
pop
test
push
push
mov
cmpsl
dec
add
xchg
arpl
fadds
add
add
not
mov
mov
movl
jmp
movl
mov
jg
pushl
pushl
call
add
orl
sub
adc
movzwl
add
mov
mov
sbb
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
jmp
in
mov
sbb
sub
jle
mov
adc
xor
adc
inc
sub
pop
push
daa
cmp
imul
fiaddl
dec
lret
mov
gs
ljmp
scas
jle
shlb
and
stos
mov
aam
inc
pushf
ret
stos
jne
sbb
pop
enter
pop
pop
jno
add
cmc
jp
addr16
dec
xchg
or
mov
adc
jmp
adc
mov
fldl
fists
pusha
int
jl
and
clc
push
and
jmp
xor
xchg
push
cmp
push
das
pop
mov
popa
fimuls
lret
dec
ljmpw
mov
inc
or
pop
imul
mov
add
movsb
jge
push
popa
adc
shrb
cmc
sbb
mov
mov
sub
or
dec
lea
fstps
jae
pop
sub
dec
scas
les
orb
jle
cltd
inc
pushf
cmp
vmaskmovdqu
shl
cwtl
daa
adc
xchg
inc
lret
mov
mov
pop
cmp
call
xor
dec
mov
add
test
push
sbb
pop
in
arpl
out
inc
mov
jecxz
insl
xor
mov
adc
stc
push
sub
sub
fdivrl
cmp
mov
mov
mov
cltd
in
fld
adc
fadds
adc
fisttpl
nop
out
out
aad
mov
push
out
and
pusha
dec
pop
inc
sub
fnsave
mov
push
fdivrs
aaa
ds
test
pop
push
cld
outsl
xor
adc
ficompl
cld
and
inc
repz
insl
adc
fprem1
js
lret
mov
sub
lds
dec
fxch
mov
repz
cmpsb
and
int3
dec
out
repnz
xchg
addr16
dec
stc
push
ja
faddl
icebp
sub
sbb
adc
movsb
fnsave
shlb
sub
cmp
test
movsl
ret
push
sbb
pop
add
clc
shrb
cld
and
test
jmp
frstor
stos
outsb
mov
stos
cmpsl
dec
mov
stc
ret
mov
insl
xor
dec
xor
ja
xchg
lock
or
stos
xor
dec
cld
jg
pop
xchg
mov
inc
je
gs
lcall
xchg
test
in
push
imul
mov
pop
dec
hlt
jb
mov
rol
call
in
jmp
cld
cld
mov
pop
push
lock
fstpl
pop
aad
bnd
clc
out
lret
cmp
pop
rclb
clc
mov
mov
xchg
repnz
cmp
and
jno
cmp
mov
out
mov
sar
push
imul
and
orl
mov
jmp
mov
lock
adc
or
sbb
and
je
pop
inc
sbb
push
sahf
std
ja
dec
push
mov
insl
in
or
lahf
jae
push
adc
xchg
mov
adc
arpl
and
cmp
data16
out
daa
imul
add
ds
movsl
popa
cmp
mov
cltd
push
jae
mov
sarb
add
mov
ret
jnp
inc
jle
push
xor
push
adc
fdivp
inc
push
pop
push
dec
lret
aad
jle
push
add
test
test
les
xlat
or
fs
sub
dec
mov
xor
pop
loop
outsl
jl
rcll
loop
fs
mov
cld
cmp
pusha
cmc
fs
dec
jmp
push
sub
xor
jae
adc
iret
cli
adc
cmp
cli
xor
int3
int
add
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
jmp
enter
pop
xor
push
push
cmp
dec
adc
xor
adc
sub
aaa
mov
inc
sub
adc
xlat
imul
push
xchg
and
inc
leave
dec
test
inc
es
ficompl
pop
cs
outsb
and
jmp
loopne
je
loopne
cmp
out
dec
xchg
lret
je
mov
pop
xor
mov
push
lock
adc
not
lret
inc
stos
sub
cmp
aaa
scas
xor
or
xchg
cli
mov
adc
test
mov
sub
xchg
xor
pop
or
cld
repnz
in
out
pop
lock
and
movsb
iret
sbb
xchg
push
inc
sbb
xor
sub
in
and
xchg
push
mov
push
in
jbe
inc
inc
outsl
fcoms
mov
and
xchg
push
cmpsb
and
je
jnp
lahf
test
outsl
insl
mov
ds
push
or
adc
jnp,pn
ficompl
push
into
and
mov
popa
mov
xor
inc
shrl
les
and
jo
std
mov
ret
xlat
cmpsl
loopne
pop
fadds
fsubrs
cmc
mov
or
sbb
mov
inc
jp
stc
popf
fadds
shl
cli
mov
je
sub
xor
andl
pop
addr16
mov
je
mov
pushf
pop
pushf
lods
adc
fld
lahf
pop
inc
shl
pop
insb
push
div
push
fadds
popa
popa
dec
test
lahf
mov
leave
rep
fstpl
inc
xchg
inc
mov
insl
out
jg
mov
mov
mov
rcrl
repnz
jmp
sub
sub
jb
stos
add
add
loope
sbb
jl
fs
push
loop
cmp
jmp
lods
dec
pop
dec
cltd
in
add
shr
adc
cmc
mov
cmp
lcall
shrl
push
aam
xchg
and
das
mov
inc
mov
lock
inc
or
push
lahf
fs
mov
or
lret
pop
ja
push
dec
in
jle
or
inc
rcrb
iret
mov
cmp
cmp
jmp
sub
into
repz
cmc
mov
mov
in
push
dec
lea
fisttps
in
xchg
loopne
es
cwtl
push
aam
scas
mov
push
data16
inc
push
gs
je
loop
testb
xchg
sti
xchg
popa
test
mov
clc
mov
and
pop
cmpb
xchg
jbe
lods
mov
sbb
inc
es
pop
mov
sbb
sgdtl
fcompp
roll
sarb
mov
or
mov
cmp
jmp
out
push
stos
or
mov
and
icebp
inc
or
push
lods
fldt
add
lret
mov
jo
enter
out
neg
fldt
loope
lret
mov
or
lds
dec
lret
int
adcl
mov
int
inc
scas
and
orl
xchg
add
pop
sub
pop
xor
adc
cmp
lods
aad
popf
sbb
shl
mov
xor
imul
ljmp
out
ss
fists
in
push
dec
lods
ror
jbe
outsl
sarb
fbstp
fsub
mov
test
imul
stos
jns
mov
push
sub
ja
aas
cli
stos
pop
outsb
xchg
sub
jle
push
loopne
push
xchg
addl
inc
adc
int
push
clc
add
mov
pop
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
jmp
pushl
and
push
mov
gs
adc
xor
adc
rcrl
xor
cmp
xchg
pop
cmp
xor
in
xchg
or
stc
cmp
lret
jnp
sub
push
or
ja
mov
loope
mov
pop
mov
lods
sbb
inc
stos
inc
jmp
lret
jmp
je
dec
cmp
add
les
mov
dec
jmp
xor
pop
in
add
pop
ret
out
addl
dec
fisttpll
addr16
pop
icebp
mov
mov
mov
lods
push
push
cld
mov
and
out
cmp
loopne
in
leave
stos
in
pop
ret
pop
out
ret
jnp
sub
push
adc
pop
jb
sbb
pushf
fcomps
xor
mov
aad
add
cs
xchg
jb
dec
cmp
jno
mov
or
mov
add
adc
jae
sbb
mov
fsubrs
bound
lds
jo
dec
lahf
pop
sub
ret
pop
pop
push
adc
mov
inc
xor
pop
lahf
add
xchg
xor
jae
ret
inc
out
adc
shrb
xchg
loopne
push
ss
movsl
xor
andb
xchg
nop
pop
je
push
jbe
xchg
imul
stos
cmc
inc
ds
adc
insb
or
push
lret
pop
mov
movsb
fisttpll
push
movsb
in
inc
mov
shlb
pop
jg
lock
mov
or
mov
dec
movsl
adc
push
iret
or
test
pushf
sub
loope
add
clc
ss
add
sub
inc
loope
push
and
sub
pop
in
jge
test
jns
add
incl
dec
into
insl
fs
mov
mov
dec
fimull
lods
loopne
aas
sub
imul
push
or
rol
repnz
daa
fistpl
jbe
sub
sub
dec
mov
cmpsb
imul
in
mov
scas
mov
daa
call
adc
test
inc
pop
mov
stos
xchg
cmp
jb
dec
xchg
jb
mov
sub
push
cmp
clc
pop
data16
jno
add
dec
pop
aaa
inc
out
aam
add
dec
lods
je
sub
pop
mov
xor
aas
iret
dec
or
dec
adc
mov
lods
and
fistpll
int
cmp
and
icebp
or
imul
or
cmpsb
push
dec
inc
lret
dec
mov
and
xchg
dec
idivl
push
adc
scas
aas
sub
addr16
inc
mov
sbb
lea
ret
sub
sbb
lods
push
cmpsb
xor
jns
jne
cmp
sub
je
mov
fisttpll
cltd
and
push
pop
sarl
clc
mov
out
inc
insb
sbbl
clc
pop
cmp
cmp
rcll
cmc
xchg
rorl
and
inc
mov
outsl
adc
insb
call
sti
cmpsb
mov
fidivl
and
jp
sbb
or
cmp
mov
pop
jne
scas
push
sbb
out
push
stos
push
add
shlb
jnp
add
cmp
push
dec
lods
and
add
pop
cmp
inc
out
mov
mov
jp
cmp
les
inc
mov
jno
mov
adc
jl
pop
pop
shrb
sbb
fcoms
push
xor
arpl
adc
or
std
or
cs
mov
push
shrl
fistpl
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
jmp
adcl
dec
in
enter
or
adc
adc
adc
add
push
imul
push
and
in
sbb
sbb
iret
mov
and
inc
dec
orb
jns
jge
stos
adc
stc
test
jbe
scas
mov
cltd
fnop
insb
cmp
aaa
jmp
fdiv
mov
pop
inc
mov
or
add
or
lahf
pop
stos
in
inc
jp
mov
cmp
pop
sbb
js
ds
shll
rcr
outsl
push
adc
xchg
shrb
lods
mov
mov
xchg
repz
loop
inc
aad
lods
xchg
adc
xor
movsl
dec
sbbl
clc
sub
call
and
loopne
lods
test
scas
jge
lock
lea
jbe
pop
and
shl
mov
inc
ret
jo
lret
bound
jmp
les
mov
insl
repz
sbb
push
pop
fcomps
scas
mov
lret
cld
push
push
add
xchg
out
inc
out
mov
push
lock
mov
dec
inc
sbbl
cmpsl
pop
pop
xor
adc
sub
call
mov
mov
sub
imul
pop
jle
fadds
and
inc
ret
popf
jnp
adc
mov
dec
push
pop
xlat
inc
je
add
in
lds
push
dec
add
push
fmul
xor
push
nop
test
dec
jecxz
mov
fs
lds
add
fxtract
jbe
xor
in
sahf
pop
imul
popf
in
and
or
push
add
add
mov
inc
lock
hlt
stc
adc
pusha
and
testl
mov
mov
aad
inc
sub
push
push
inc
cmpsb
mov
test
imul
aas
push
imul
lea
sbb
adc
out
cltd
push
lea
mov
xchg
push
mov
jb
sbb
fsub
js
rcrl
xor
fs
lea
scas
sbb
lods
mov
cwtl
push
push
les
dec
dec
pop
mov
std
clc
fistpll
test
xchg
out
fs
dec
ljmp
xchg
insl
sbb
sub
movsl
mov
pop
sbb
cmpsl
mov
in
nop
fs
xor
jbe
pminsw
cmc
dec
fwait
nop
rorb
loopne
dec
xchg
adc
mov
movsl
jg
fwait
xchg
ja
subl
aaa
inc
cmp
add
jne
adc
push
mov
repz
dec
sbb
outsb
out
leave
xchg
add
aam
ds
shr
push
das
pop
aad
and
jle
jne
in
cld
hlt
movsl
addr16
in
rol
mov
and
fstl
mov
movsl
xor
pop
pop
outsb
aad
dec
xor
fs
mov
jle
sub
pop
inc
popf
dec
adc
in
stos
jmp
idivb
rcll
sbb
pushf
jge
loop
loop
movsb
jmp
fs
jp
incb
pop
dec
and
sarb
frstor
ret
int
lcall
mov
and
dec
push
pusha
inc
mov
mov
push
sbb
sub
push
lds
lahf
movsl
ja
sub
cs
jns
je
mov
sub
setno
mov
mov
dec
jno
mov
xchg
fisttpll
test
inc
cmc
sarb
mull
test
inc
aam
xchg
fs
xchg
ljmp
jbe
test
mov
icebp
adc
adcl
add
mov
or
mov
add
cmp
jae
mov
jmp
js
jb
sub
cmp
mov
mov
xor
adc
adc
adc
mov
lahf
mov
movsb
xor
test
push
int3
or
out
mov
ss
rorl
adc
pop
sahf
xor
lcall
mov
fcomip
bound
lret
test
sahf
jbe
and
inc
pop
xchg
push
dec
jmp
sub
popf
xchg
test
popa
aad
push
jbe
lcall
adc
incl
add
mov
test
xchg
out
inc
cmp
or
test
inc
dec
sbb
lret
stos
sub
leave
movsl
push
pop
inc
add
mov
add
sti
jo
cmp
and
mov
xlat
jno
imul
cmpsl
out
lret
es
shrl
jno
aad
mov
add
js
xchg
mov
test
and
sarb
repnz
mov
add
aaa
cwtl
mov
arpl
dec
int3
test
rcrb
test
push
or
pusha
push
sub
lea
dec
jle
mov
outsl
pop
sbb
pop
loopne
adc
adc
mov
icebp
push
fst
jg
cmp
fwait
sahf
add
or
pop
mov
aam
repnz
into
les
and
pop
mov
inc
pop
jle
aas
enter
xchg
inc
adc
aas
xchg
inc
clc
je
jmp
nop
xchg
pop
hlt
xchg
stc
and
int3
dec
das
cmpsb
and
loop
iret
fistpll
int
jo
dec
and
test
lods
mov
test
inc
and
shlb
testb
fwait
inc
xchg
notb
jno
lods
imul
jle
push
pop
adc
sub
je
enter
and
sub
push
int
mov
mov
in
adc
cmp
sub
int
xor
mov
inc
aam
and
jb
sbb
sbb
pushf
lea
arpl
int
mul
jne
xchg
outsl
xor
cs
mov
mov
jns
bnd
sarl
push
jg
cmp
lock
pushf
pop
jb
mov
cmp
inc
xor
movsl
xchg
push
jbe
dec
mov
bound
pop
pop
or
fisubrs
cltd
js
cltd
scas
adc
cmp
nop
pushf
stc
dec
and
pusha
cmp
or
jbe
in
push
call
ret
shrb
add
push
aaa
push
aaa
xor
into
push
fistpll
cmp
nop
pop
add
lock
push
and
dec
iret
jnp
flds
push
mov
scas
imul
sbb
mov
inc
adc
imul
in
inc
insl
push
adc
aad
mov
hlt
repnz
pop
fdivrs
inc
repnz
loop
cli
and
mov
fldcw
in
pop
lods
push
xchg
adc
scas
push
stc
incl
pusha
pop
mov
add
call
ret
mov
mov
mov
fdivrp
push
test
movsl
cmp
mov
jmp
cs
pop
xchg
jns
dec
sbb
leave
ss
push
jno
pushf
mov
cmp
mov
adc
cmp
addb
fs
mov
sub
mov
jecxz
enter
cmp
xchg
imul
mov
mov
cmpsb
das
fwait
ja
xor
add
in
or
mov
xchg
sbbl
push
push
or
cmp
pushf
cmc
mov
arpl
flds
xor
rolb
xor
jmp
mov
popa
lcall
adc
js
sub
adc
adc
adc
repz
push
mov
in
push
les
sub
jne
mov
lret
out
arpl
push
inc
popf
xor
add
and
lea
xor
aam
lods
lret
cmp
clc
and
sub
dec
popf
imul
mov
inc
xchg
mov
arpl
add
mov
push
stc
lcall
lods
push
pop
es
iret
leave
pop
dec
divb
dec
out
sbb
loope
cmpsl
fadds
les
xchg
xchg
daa
inc
push
xor
push
pop
mov
xlat
push
cmp
shl
es
mov
push
repnz
or
xchg
jmp
add
in
pop
adc
lcall
inc
imul
in
shll
mov
imul
repnz
add
dec
xchg
mov
jl
jl
stc
lret
mov
mov
xchg
and
xchg
sarl
movsl
outsl
bound
stos
jo
sbb
out
sbb
jle
popa
sub
icebp
lahf
mov
mov
add
aas
movsb
iret
sub
push
mov
pop
daa
jns
int3
decl
push
adc
std
insl
cmp
mov
subb
lcall
push
fcomps
dec
mov
push
cmpl
cmp
mov
hlt
aam
xchg
icebp
dec
adc
push
mov
hlt
rol
pop
int
cmp
jg
lcall
adc
xor
cmp
clc
xchg
fadds
pop
add
lea
ljmp
mov
xchg
pop
sub
adc
pusha
imul
adc
ret
push
cmp
sbb
lea
movsl
ljmp
sbb
repz
cmp
movsl
lcall
jecxz
jp
xchg
aaa
and
loope
adc
pushf
and
inc
xchg
lods
fistl
sub
xchg
ja
fists
xchg
push
in
cs
clc
jae
xchg
cwtl
xorl
popf
movsb
sbb
pop
mov
fisubrs
lret
inc
out
scas
sub
mov
shlb
dec
push
xchg
ja
lcall
xor
jp
les
sub
push
cmp
xchg
scas
rorb
dec
sbb
popa
pop
xor
ffree
fmuls
pop
out
mov
sub
leave
fimuls
jg
sbb
adc
or
adc
mov
push
aaa
ss
out
mov
in
out
sbb
movsb
mov
lods
mov
inc
flds
out
leave
mov
adc
cmpsl
ljmp
les
add
and
or
xchg
cmp
lock
pop
orb
mov
fbld
rorb
xor
sub
loopne
insl
call
fcos
je
cs
imul
add
insb
jmp
data16
push
add
or
and
add
out
xchg
jl
push
sub
outsb
jbe
aad
out
mov
jns
rcrb
divl
pop
flds
out
fsub
in
cld
popa
ds
sahf
cwtl
je
sub
push
ds
sub
push
leave
enter
mov
mov
add
jns
enter
dec
and
orl
mov
adc
lods
or
in
dec
jno
rcrl
insb
pop
insl
lahf
iret
hlt
lea
scas
xorb
js
in
nop
fisttpll
orl
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
test
sbbl
pop
sbb
jle
arpl
int
adc
fmull
adc
mov
inc
sbb
xchg
dec
sub
push
rol
sbb
or
in
cmpsb
mov
dec
mov
jmp
outsl
or
adc
push
loopne
lahf
add
adc
dec
test
inc
fwait
sbb
jecxz
and
jbe
jecxz
fwait
imul
and
repz
jnp
in
adc
stos
mov
xor
movsb
test
imul
mov
xor
lea
xchg
in
repz
and
xchg
jnp
std
push
scas
mov
dec
jae
dec
inc
ss
insl
test
repz
faddl
je
mov
jle
pop
cs
repz
mov
pop
rcrl
fstpl
cmc
pop
es
mov
bswap
sub
push
outsb
lods
pop
pop
cmpsl
sbb
out
ds
sbb
int3
mov
xchg
les
pop
roll
jp
xchg
pop
cmp
les
mov
iret
sub
jae
and
addl
sbb
mov
pop
or
jmp
jg
pop
push
test
fwait
cmp
mov
pop
mov
mov
xchg
addr16
adc
shll
push
jb
imul
xchg
or
scas
fcomps
cmp
shl
cltd
in
mov
lods
shll
cmp
dec
testb
stc
in
or
fsubp
sub
loopne
mov
cmc
loop
or
or
sbb
and
lock
repnz
ret
movsl
lret
in
xchg
push
or
das
hlt
pop
aam
ror
adc
repz
xchg
popa
inc
and
int3
lret
insb
xor
fwait
push
mov
dec
shlb
clc
xor
cmc
pop
gs
pop
ljmp
mov
stos
lcallw
sub
inc
mov
jo
mov
sub
mov
jp
inc
sahf
aas
inc
data16
in
mov
mov
sub
mov
push
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
jmp
xchg
add
cmp
scas
insb
mov
xchg
fmull
adc
push
wbinvd
sub
cli
in
push
dec
xor
jno
cmp
sbb
fildl
or
xchg
adc
ss
fwait
test
jnp
sbb
jbe
and
mov
test
push
mov
sbb
cltd
popa
inc
xor
ljmp
dec
inc
enter
mov
sub
inc
sub
push
sub
insl
pop
jb
rol
jge
ret
pop
adc
fwait
adc
stos
insl
cmpsb
adc
rcrb
lock
popf
mov
or
fwait
dec
mov
pop
insl
das
push
xlat
int3
jle
shr
sarl
jl
xchg
and
xchg
icebp
lock
mov
sbb
adcb
lds
subb
loop
sti
dec
add
pop
sub
adc
outsb
nop
cmp
or
or
pop
std
jbe
mov
jno
test
jae
and
in
and
sub
lods
jbe
sub
push
xchg
cmpsl
sub
jmp
dec
fdivrs
xchg
ror
pop
xchg
xchg
loope
shl
subb
arpl
ds
jnp
xor
jno
push
sbb
stos
mov
xchg
pop
dec
int3
shll
mov
cmp
subl
mov
jns
inc
dec
popf
fcomps
movsb
mov
out
inc
mov
xor
int
or
xor
adc
aad
jl
sarl
cwtl
push
movsb
sbb
es
add
cmp
mov
rol
xor
daa
pop
mov
sbb
sarl
push
outsb
into
fidivs
inc
int
int
push
mov
ret
mov
jno
out
add
pop
fldcw
into
dec
imul
adc
xchg
cmp
les
mov
cmp
inc
sub
lea
pop
lret
ret
cmp
add
mov
jmp
imul
clc
cmp
add
movl
movl
movl
mov
jmp
outsl
or
or
popa
imul
nop
js
xchg
sbb
fmull
adc
add
sbb
xor
pop
dec
ret
rcr
xor
push
or
and
fcmovnu
testl
ljmpw
mov
pop
faddl
adc
in
enter
cmc
inc
pop
lock
pop
sub
xlat
lods
jle
and
xlat
mov
ss
jle
ret
lock
cmpsb
pop
sub
pushw
inc
pop
jb
in
push
push
shrb
inc
push
add
clc
hlt
hlt
xor
ja
fnstsw
iret
das
mov
loopne
mov
xor
cmpsb
sti
out
mov
cmp
lock
outsb
inc
mov
dec
test
adc
push
arpl
add
jmp
jbe
jne
dec
or
dec
jo
and
and
arpl
xchg
add
jge
int3
aas
aad
jb
jns
push
in
roll
push
fwait
inc
leave
mov
loop
in
rcrl
xchg
movsb
xor
mov
xor
dec
xor
pushf
adc
mov
sbb
mov
ficoms
sti
dec
ja
das
dec
mov
cmp
push
or
dec
jnp
xchg
jl
hlt
add
adc
clc
jnp
out
out
pop
pop
loope
pusha
leave
cs
lods
push
bound
mov
mov
add
lahf
lret
imul
jmp
out
arpl
pop
loop
add
pop
popa
out
fimuls
mov
lea
out
xchg
fisubrs
jo
sti
ret
lahf
mov
out
shrb
xor
adc
xor
cmpsl
test
cmp
or
fstpl
or
xchg
movsl
adc
inc
shr
aam
lock
test
add
jmp
sbb
cmp
sub
pop
imul
pop
inc
testb
and
inc
adc
mov
testl
gs
scas
arpl
or
pusha
pop
jmp
push
test
fnstcw
lret
shlb
icebp
stos
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
jmp
and
cmp
aaa
sbb
bound
sarb
fnstsw
jle
adc
adc
movlps
mov
jl
add
mov
xchg
or
cmp
or
js
xchg
icebp
add
pop
mov
ss
fcomip
outsl
pop
divb
or
add
xor
and
std
or
fbstp
pop
jae
xchg
out
mov
push
push
jnp
iret
inc
dec
insb
sub
adc
mov
popf
cld
mov
lret
jno
lret
push
xor
sbb
mov
pushf
fsubrl
inc
add
pop
lret
mov
mov
pop
mov
mov
enter
in
lods
pushf
popl
lods
cmp
dec
mov
aam
jge
lods
test
push
sbb
je
loop
incl
mov
dec
arpl
adc
sbb
and
cmpsb
xchg
cmp
loopne
adc
int
jnp
gs
xlat
jle
stc
loope
mov
lods
dec
mov
mov
xorb
pusha
out
es
divl
iret
mov
pop
sbb
stos
clc
cmpb
jo
dec
jns
cli
cmp
jecxz
lahf
jg
inc
sub
ja
pushf
bnd
mov
fwait
es
cld
stos
jp
cs
int
and
add
sub
xor
fldt
pop
cmpsl
mov
xor
das
cmc
lret
jmp
aad
mov
es
xchg
clc
lods
adc
push
xor
popf
mov
mov
lods
jge
aaa
mov
pushf
add
mov
or
idiv
ret
mov
shr
xchg
je
cmp
sub
sub
jg
push
out
shlb
xor
rorl
cld
sti
add
leave
jle
sbb
fldl
sbb
iret
pop
cmpsl
push
sarl
adc
or
push
xor
jnp
loope
fcoml
fcomi
jp
arpl
xlat
out
cmp
out
push
xchg
push
mov
ds
in
and
lds
mov
mov
lods
jmp
idiv
xor
loopne
mov
repnz
cmc
les
sbb
aas
cld
push
push
out
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
jmp
mov
xor
jns
fldln2
jle
sarl
fmull
adc
fyl2x
mov
shrl
and
leave
dec
je
inc
jns
roll
push
cmp
rorl
mov
pop
mov
or
imul
pusha
fs
out
mov
jle
add
xchg
roll
loopne
mov
inc
jecxz
mov
mov
movsb
ljmp
sub
jne
sbb
pop
mov
enter
stos
notl
sbbl
and
andl
pop
push
pop
popa
jb
push
xchg
lods
mov
lea
mov
mov
mov
sub
add
nop
mov
icebp
sub
push
out
cld
mov
mov
adc
inc
mov
in
cmp
push
fmuls
xchg
int3
lcall
stc
imul
mov
dec
loop
adc
aam
pop
mov
je
push
inc
xchg
mov
fistps
jge
cltd
call
and
cmpsb
mov
adc
imul
jbe
mov
or
dec
mov
rclb
push
jnp
mov
jno
insl
dec
mov
xlat
lcall
mov
mov
pushf
inc
xlat
add
sbb
addl
mov
adc
adcb
fwait
xchg
dec
cmp
rcrl
cmp
sub
sarl
xchg
jne
rorl
leave
mov
out
xor
sahf
and
jge
cmpl
leave
sub
lret
mov
and
fwait
in
mov
popa
or
inc
jle
js
fsub
push
jne
out
orl
fcmovnu
jp
daa
xor
xchg
inc
ficoml
pop
jl
cwtl
sbb
stos
fadds
out
pop
jmp
jb
scas
lods
push
mov
inc
fwait
jge
fs
imul
out
or
push
arpl
inc
sbbl
jmp
roll
mov
cs
dec
jae
mov
mov
adc
fmull
adc
leave
in
pop
sub
dec
loop
das
jmp
addb
insb
or
xor
or
adc
outsb
and
addl
pop
or
arpl
test
pushf
es
in
aaa
inc
ret
test
jo
cmc
mov
outsl
push
jno
stc
int
ficompl
fildl
xor
imul
sub
and
xchg
or
inc
arpl
subl
addb
dec
and
pop
fwait
xchg
mov
lcall
mov
push
rcrl
lahf
jno
shlb
inc
dec
iret
sub
or
or
jl
rorl
fldl
out
mov
mov
repz
xor
xorl
adc
clc
mov
mov
sti
xchg
movsb
push
shlb
push
imul
pop
imul
testb
popf
and
loop
jo
mov
jns
dec
xchg
jno
in
mov
or
pop
movsb
leave
lret
call
sar
add
call
adc
mov
mov
rcll
mov
push
fdivs
add
jge
jb
adc
sbb
cld
repz
adc
scas
lcall
test
loop
or
mull
xor
xchg
es
xlat
int
sub
pop
dec
icebp
jno
xchg
enter
cmp
test
pushf
shll
jb
fbstp
xchg
push
into
inc
ftst
daa
inc
stc
cltd
iret
cltd
fdivl
inc
mov
movsl
cmpsl
cmp
rclb
xor
test
lret
clc
std
loopne
cmp
add
mov
jo
sbb
ret
sub
test
lea
add
push
sbb
lock
mov
cmpsb
mov
lods
shr
std
adcl
mov
sub
je
push
cli
pop
add
shrb
jecxz
shl
icebp
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jmp
mov
aaa
cmpsl
sbb
test
fnstsw
adc
movlps
leave
inc
test
push
fstpt
jecxz
push
xor
loop
push
and
cmp
filds
in
lds
jg
out
into
jae
add
stc
jmp
into
roll
or
js
add
xchg
adc
popa
insb
aaa
adcb
icebp
inc
imul
cld
fisttpll
repz
push
aaa
test
inc
mov
inc
cmp
mov
push
cmp
xchg
mov
std
loope
xchg
pop
out
in
out
idivl
aas
push
data16
or
mov
fninit
js
push
ja
mov
cmp
pop
mov
cmp
lock
push
rcrb
or
es
push
pop
jbe
stc
bound
cwtl
jg
daa
lock
insb
ja
dec
stos
in
rcll
mov
je
gs
out
or
lret
bswap
adc
rcll
outsb
sub
jb
pop
lret
and
gs
xor
lds
adc
xchg
or
sub
stos
dec
test
popf
dec
sarb
sbb
sub
or
dec
icebp
cwtl
sub
inc
out
cmp
push
movl
mov
pop
adc
das
orb
ljmp
mov
enter
push
pusha
push
aaa
cwtl
lahf
mov
fcompp
xchg
jle
stc
mov
lods
jnp
enter
mov
inc
test
sbbb
lods
jmp
pop
add
out
pop
push
ret
ljmp
xchg
imul
lock
ds
jns
pop
mov
mov
push
aad
pop
cmc
add
cmp
out
and
and
pop
cmp
cmpsl
iret
jl
imull
or
stos
test
sbb
subb
shll
push
leave
push
aaa
scas
arpl
xchg
mov
daa
imul
ss
xchg
sub
fcomps
xorl
in
sub
loopne
cmp
add
inc
fdivrl
cmp
add
inc
in
int
add
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
jmp
popa
pop
fimull
dec
sbb
dec
neg
mov
inc
push
adc
fmull
adc
sarl
push
cli
push
shr
in
mov
push
mov
mov
dec
aaa
test
add
xor
daa
mov
loopne
sbb
cmp
push
add
jecxz
push
and
ljmp
std
lcall
dec
jle
or
popf
cwtl
xchg
fwait
or
inc
cmp
mov
inc
cmpsl
test
cltd
or
jno
or
cmovne
mov
xor
inc
pop
xlat
mov
push
cli
stos
lods
addr16
into
int3
jno
loopne
sub
add
jno
scas
xchg
and
pop
sub
js
nop
mov
mov
mov
adc
sub
push
jo
out
mov
cmc
call
sbb
aas
jne
sbb
mov
pop
movlps
nop
icebp
mov
xor
hlt
inc
fsubrl
fstpl
or
mov
xor
daa
cld
mov
lcall
cmp
pop
xor
out
shlb
sub
sti
or
and
pop
mov
add
ljmp
js
gs
test
add
and
mov
add
mov
lret
pop
xchg
add
or
shr
popf
shrl
and
pusha
icebp
jle
jmp
mov
sub
push
add
xchg
stos
mov
into
jns
es
push
ret
or
and
add
sbb
push
cmp
jo
mov
push
addl
push
mov
rcr
js
loop
and
loop
lret
sbb
cmc
hlt
push
sub
out
in
cld
mov
out
sti
jmp
dec
rcr
fsubrs
dec
mov
mov
xchg
std
hlt
in
xor
lock
pusha
add
cmp
outsl
ss
lea
adc
xor
cmpsl
mov
add
cmp
jb
jmp
add
cmpsb
pop
sahf
aaa
xor
mov
mov
push
add
adc
movlps
mov
popf
loopne
jnp
pop
jns,pn
add
lret
sar
lods
pop
dec
in
cmc
lahf
insb
rclb
mov
sub
push
push
sbb
jo
pop
adc
xor
and
mov
int3
xchg
je
test
xchg
cld
aad
adcb
aam
gs
daa
xchg
inc
fdivrp
nop
adc
sub
mov
ja
cmp
cld
ja
xor
push
push
cwtl
pop
scas
std
adcb
stos
test
xor
lcall
cmpsl
push
mov
and
das
lds
rolb
xlat
fsubrl
pop
imul
inc
lock
cld
ljmp
fld
mov
loop
pop
pop
xchg
std
sarl
mov
jb
mov
ljmp
push
in
repnz
xor
add
mov
and
rcrw
and
and
test
test
sbb
cmc
dec
pop
movsb
xor
xor
in
out
out
sub
jl
mov
xchg
in
movsb
inc
push
roll
sarl
out
mov
jno
pop
ficompl
xchg
or
into
xor
or
shlb
jae
into
push
push
mov
sub
inc
das
cmp
loope
mov
in
ljmp
sti
loop
les
sub
xchg
sub
mov
imul
scas
pop
and
cmpsl
outsl
sub
pushw
push
mov
ds
ret
cmp
push
hlt
lret
out
rcrl
daa
jle
fcoms
test
enter
mov
add
dec
out
into
movsl
js
cmp
icebp
mov
mov
adc
add
xor
inc
cmp
hlt
pop
rorb
popa
mov
fwait
pop
mov
sub
pop
lahf
stos
repz
and
insb
lcall
xchg
push
mov
jns
mov
stos
add
fildl
inc
or
ja
add
inc
or
dec
add
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
jmp
ja
fistps
pop
ja
outsl
popa
ss
adc
jo
aad
adc
fmull
adc
xlat
addr16
loopne
mov
arpl
add
sahf
xchg
push
clc
xor
or
add
cs
sbb
cld
icebp
and
jb
int
cmp
or
sbb
addl
fdivrs
in
pop
shll
xchg
xchg
xor
daa
int3
push
or
repz
ror
out
addl
xchg
stos
sbb
cltd
sahf
push
mov
aas
add
dec
ss
sbb
xchg
js
pop
je
push
inc
push
mov
push
jmp
sbb
enter
sti
sub
insl
pop
shll
in
pop
sub
mov
add
clc
idivb
movsl
sbb
mov
cwtl
mov
cmp
lods
dec
repz
jbe
decb
gs
or
lds
sub
adc
sbb
xor
ret
movsl
xorb
inc
nop
sbb
adc
divl
ljmp
sbb
mov
add
std
cmc
lahf
out
rcll
lods
or
and
jbe
int3
dec
inc
fcoml
arpl
testb
sahf
push
inc
repnz
mov
ljmp
cltd
jp
addr16
xlat
loopne
jle
xchg
ja
cmp
mov
add
fsub
inc
mov
imul
in
inc
add
mov
sbb
arpl
shl
call
imul
adc
cmp
std
pushl
ja
jecxz
fcoms
sub
outsb
sarl
push
pminub
and
leave
cltd
in
jbe
push
cmp
idiv
push
add
sbb
sahf
jl
test
mov
or
cmp
mov
dec
ss
shlb
add
add
or
adcb
std
jns
cmpsl
cmp
outsl
xchg
push
insb
lds
pushw
push
comiss
roll
sub
orb
mov
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
jmp
lock
clc
test
inc
imul
jg
lcall
movlps
cmpsl
xchg
add
inc
cld
inc
push
loopne
pop
xorl
orl
mov
dec
mov
mov
xchg
xor
mov
add
loop
add
icebp
adcb
es
les
jmp
js
sub
push
cmpsl
fsubrp
push
test
cld
xor
mov
pusha
jmp
xchg
in
jnp
sti
ss
gs
xor
cmc
cmp
push
adc
xor
repz
mov
fdivr
insl
bnd
sbb
test
psubusb
sub
sub
sbbb
push
push
inc
cld
lcall
ja
arpl
cmpsl
xchg
mov
mov
stos
cs
aaa
repnz
pop
sbb
cwtl
pop
scas
and
push
frstor
les
mov
xchg
cld
int
insb
sbb
sbb
outsl
jno
cmpsb
adc
insb
repz
mov
adc
mov
sub
push
jge
pop
fsubp
stos
inc
das
cli
xchg
jg
cld
inc
xor
pop
test
fwait
fwait
dec
js
jns
mov
jae
adc
ret
and
mov
dec
mov
pushf
std
sbb
cmpsl
into
pop
lods
mov
mov
mov
adc
subb
xor
jecxz
jp
in
out
or
adcl
xchg
mov
mov
into
inc
and
dec
or
lock
imul
into
mov
outsl
and
orb
adc
adc
add
mov
pop
and
dec
in
das
ret
xor
imul
stc
xor
repnz
pop
test
xchg
lcall
add
into
adc
mov
mov
push
jg
mov
or
cmc
xor
test
clc
push
gs
add
push
or
fucomi
sbb
stos
in
popf
and
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
jmp
mov
pop
mov
insb
xor
fmull
adc
pop
pop
or
dec
and
out
js
mov
inc
test
leave
fcom
cli
lcall
mov
icebp
inc
loop
and
mov
mov
lods
test
stos
lods
push
push
jmp
mov
les
icebp
push
stos
cs
jo
jl
les
and
mov
push
cmpsl
mov
mov
jp
movl
imul
test
aad
fcomps
push
fadd
jnp
adc
cmp
and
mov
fldl
jnp
ja
shrl
out
lret
mov
frstor
lcall
ss
add
stc
ret
mov
arpl
cmc
js
xor
or
mov
lods
das
out
mov
push
outsb
data16
push
mul
fisubrs
in
mov
lds
mov
xor
movsb
inc
ret
xchg
push
jmp
and
cmp
jge
cwtl
adc
out
mov
cmc
or
std
cld
jno
imul
mov
pop
xchg
jl
inc
xchg
mov
imull
mov
ja
pop
inc
push
mov
bound
out
aam
pop
push
or
push
fs
fildl
movsl
push
outsb
call
cmp
das
mov
xor
cwtl
mov
jo
and
rcr
pop
jle
imul
cltd
xor
mov
sahf
lea
test
add
das
inc
stos
mov
es
push
insl
pop
out
fsts
lret
jno
daa
jmp
push
lret
mov
sbb
ljmp
imul
sub
jne
int
xchg
or
and
adc
dec
sub
jb
xchg
mov
mov
lahf
jmp
add
lods
repz
jne
insb
pop
inc
and
jbe
sub
xchg
icebp
iret
das
xor
push
xchg
repz
icebp
sahf
clc
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
jmp
push
jb
adc
mov
xor
cmpsb
dec
mov
sub
adc
adc
sub
fists
pop
and
int
jmp
jo
movsl
sarb
xor
lahf
repz
stos
fs
pusha
mov
lahf
cmp
int3
pop
xchg
into
mov
mov
lahf
pusha
fwait
insl
imul
out
lods
mov
pop
mov
mov
das
mov
mov
scas
pop
cmp
cwtl
test
push
xchg
adc
aaa
dec
mov
rolb
sbb
xchg
sbb
lret
std
ret
in
repnz
xor
inc
clc
int3
cmpb
pop
cwtl
push
jo
mov
sarb
xor
rcrl
lods
xor
inc
pop
clc
imul
jg
leave
cld
dec
cmp
mov
xlat
jge
pop
pop
sub
fs
push
mov
cmp
xor
jle
nop
in
mov
repz
jnp
inc
mov
or
mov
and
add
sbb
popa
pop
jg
and
pop
adc
sub
popa
mul
sbb
push
dec
fldpi
hlt
add
jle
or
ret
pushl
sbb
insb
nop
push
in
add
jl
add
sbb
push
push
mov
outsl
jbe
inc
rol
test
mov
cltd
mov
adc
pop
scas
add
in
mov
rcrl
outsl
mov
stos
push
pop
mov
lcall
mov
idiv
mov
sbb
in
mov
mov
jmp
mov
cmpb
jo
addb
movsl
pop
add
and
sub
adc
lds
pop
sub
mov
mov
leave
mov
pop
mov
rcl
hlt
dec
sub
xchg
enter
xchg
sbb
push
repz
xchg
in
incl
dec
sti
enter
jbe
xor
jl
fsubrs
pushf
or
pop
sub
xchg
xchg
js
mov
shr
cmpsl
jnp
ljmp
xor
ja
enter
mov
pop
push
arpl
loopne
or
dec
lcall
nop
popa
mov
mov
xchg
es
leave
ret
mov
ja
sub
lock
add
sub
in
adc
jp
and
aam
jno
adc
outsl
pop
addb
adc
aad
test
mov
daa
test
ds
out
sbb
les
aad
push
hlt
fadds
or
fwait
push
cwtl
pop
pushf
sbb
out
dec
sbb
dec
enter
ss
xor
and
cmpsb
fcomip
pop
cld
int
mov
push
push
and
adc
xor
test
inc
xchg
cmp
pop
dec
jne
and
outsb
push
add
inc
outsb
jns
orl
into
sbb
pop
insb
mov
lret
addl
clc
cmp
push
in
mov
lea
ret
rcrl
sbb
xlat
lock
xchg
add
mov
orb
out
cmp
outsl
popf
xchg
loope
pop
jl
lds
xchg
into
insb
mov
and
cli
push
mov
and
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
jmp
imul
in
push
pop
loop
xchg
js
roll
stos
mov
adc
jo
adc
neg
imul
aas
shr
loop
enter
dec
or
loope
rolb
mov
daa
xchg
jp
xlat
cs
test
xchg
test
push
or
lds
lods
and
xlat
push
aas
divl
xor
jmp
fs
mov
les
lcall
data16
hlt
aaa
js
pop
mov
add
jl
jne
sahf
cmpsl
cmp
fidivrl
test
sub
adc
sub
and
mov
mov
rorl
jbe
and
hlt
cld
push
dec
mov
sbb
fbld
bound
xchg
fs
mov
das
js
pop
dec
mov
and
jb
mov
out
loope
and
push
adc
xor
frstor
pushf
aad
mov
mov
fbld
or
fistps
push
push
stc
flds
clc
sub
xchg
add
jbe
outsb
push
pop
mov
aas
stc
lods
mov
out
or
pop
scas
mov
les
icebp
adc
js
xchg
mov
push
inc
imul
subl
xor
cmp
fs
sbb
mov
fildll
jne
cmp
je
mov
das
mov
mov
inc
mov
xchg
mov
xor
adc
xchg
insb
dec
cmpsb
iret
lods
jecxz
and
xor
pop
adc
jp
dec
lcall
inc
mov
or
push
fstpt
sub
add
lods
bound
mov
bound
mov
jl
mov
push
out
in
xchg
sbb
jno
push
push
xor
sub
mov
push
outsb
push
andl
cmp
lds
jp
jns
xchg
or
mov
mov
inc
dec
sahf
xchg
or
stos
add
inc
and
xchg
dec
dec
xchg
jecxz
cmpsb
pop
rorb
xor
jns
sub
and
pop
xor
orb
test
cltd
and
aad
scas
in
stos
mov
mov
testb
mul
sarb
mov
jbe
daa
jne
sahf
mov
jg
outsl
pop
pop
adc
scas
icebp
loope
cmp
lret
pop
jle
movsb
into
iret
pop
inc
add
mov
push
xchg
subl
jecxz
pop
xchg
sub
repnz
aaa
jecxz
ss
fs
test
xor
xor
ds
jb
fnsave
xor
push
pop
add
cmp
cmp
inc
fdivp
xlat
ja
xchg
push
push
in
fisttpl
push
es
movsb
test
mov
xchg
pushf
out
add
movsl
xor
adc
sbb
lret
xor
clc
push
addr16
xorl
push
lret
fistl
repz
ljmp
add
or
mov
mov
cmp
adc
jg
mov
loope
jno
test
in
sbb
rcrl
pop
cmpsl
ljmp
mov
sub
pop
add
sbb
pushf
fmull
sub
or
lcall
lods
push
add
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
jmp
mov
jo
pusha
popf
sbb
mov
cmp
in
adc
jo
adc
cmp
subl
cmp
enter
stos
fistpll
mov
ds
sbb
mov
stos
lock
jecxz
sbb
mov
xchg
push
incl
icebp
dec
mov
lcall
les
repnz
testb
mov
cmp
insb
mov
icebp
popa
adc
sahf
jb
push
cmp
xor
fildll
mov
cmp
insl
subl
test
es
and
mov
daa
pushf
test
pop
mov
inc
divl
jbe
add
cli
movsl
or
es
daa
or
and
xor
fcmovbe
call
in
adc
xchg
das
mov
and
mov
stos
pop
ds
iret
adc
jbe
cmpb
les
jns
cs
pop
sub
push
movsb
jbe
daa
jl
leave
sub
add
out
cs
xor
sbb
and
mov
cmp
mov
inc
insl
mov
aas
jmp
lods
lret
mov
pop
and
ret
dec
push
inc
inc
sarb
arpl
mov
or
mov
or
iret
dec
cmp
pushw
mov
mov
and
pusha
or
fabs
jb
cmp
jmp
inc
xchg
ss
ror
pop
lcall
ja
adc
addb
lret
jmp
popf
adc
and
jp
imul
fsubrp
sbb
dec
xchg
fwait
mov
sub
push
mov
fs
enter
jns
cs
cmp
shrl
add
mov
xor
pop
jo
or
fisubl
pop
xchg
mov
jbe
fcoms
mov
jns
je
xchg
std
insb
mov
jns
sub
push
or
bound
call
pushf
sub
mov
repz
sub
scas
das
or
enter
shll
into
adc
mov
pop
push
jb
test
xor
outsb
dec
or
icebp
outsb
setnp
mov
pop
mov
inc
ret
lods
insb
sbb
ljmp
iret
fsubrp
ret
jecxz
loop
popf
in
or
xor
cmc
ss
in
push
imul
fnsave
jno
dec
imul
aas
pop
data16
mov
daa
loop
jecxz
cmp
push
insb
push
inc
lahf
lcall
imul
subl
add
xor
shrb
add
inc
dec
call
mov
jnp
popf
push
inc
fstpl
outsb
push
sub
out
add
push
pushl
dec
cmp
inc
les
sbb
mov
in
and
jecxz
test
cld
call
cmp
sub
mov
out
sub
js
aam
bnd
das
inc
in
xchg
cmovns
jmp
cmpsb
in
xchg
pop
int
adc
mov
pop
jecxz
dec
mov
pop
inc
aam
cmp
add
inc
cld
xor
add
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
sbb
or
jmp
bnd
or
adc
jo
adc
add
shl
jo
push
jae
mov
pop
xor
mull
loopne
pop
lahf
out
push
sub
pop
xor
out
push
pop
and
push
jg
rclb
mov
jbe
rcrb
or
mov
sbb
cltd
mov
adcl
mov
mov
or
sti
mulb
out
lods
adc
shrb
imul
xor
leave
lret
out
dec
sbb
divl
lret
xor
lods
xchg
mov
movsb
and
popf
popa
insb
es
jl
data16
in
hlt
dec
test
mov
sub
mov
inc
lss
popf
add
stos
dec
pop
loopne
dec
nop
test
mov
rolb
mov
loopne
push
xchg
sahf
push
cmp
sub
outsl
cmp
sub
das
in
int
enter
xor
mov
addb
repnz
jo
leave
inc
das
stos
arpl
or
scas
cs
jns
popf
add
jle
sbb
sbb
mov
adc
push
cmpsb
mov
add
pop
daa
mov
adc
jmp
hlt
mov
iret
xorb
test
push
repnz
xchg
mov
daa
xchg
mov
aas
aam
adc
leave
and
fstpl
cmp
in
push
fidivrs
lock
inc
ss
mov
ficomps
push
negl
jae
jmp
fldt
lds
sub
ss
pop
or
pop
add
and
in
daa
clc
cmp
cli
cmpsb
fldt
adc
sbb
andb
mov
fnstsw
lret
mov
stos
push
aas
mov
and
pop
dec
adc
repnz
adc
dec
mov
ja
testl
and
loop
xchg
sbb
push
dec
jne
sbbb
pop
fwait
lahf
adc
xor
iret
xchg
aad
sub
leave
and
data16
and
test
xchg
lods
push
pop
push
fucomp
dec
in
int3
cmpl
xchg
sbb
sbb
fistpll
or
rcl
mov
jb
popa
dec
pop
fmul
enter
fwait
pop
in
ret
xchg
into
sbb
les
rcr
mov
xlat
mov
cmp
mov
out
inc
out
call
cld
jecxz
or
in
jl
cmp
bound
sbb
je
icebp
jl
sub
stc
test
mov
lea
inc
out
add
and
push
cmp
js
hlt
fwait
jecxz
adc
jb
sbb
xlat
rolb
mov
xchg
add
cmpsb
jmp
sbb
fstpl
mov
scas
rolb
adc
mov
pop
int3
sub
inc
jne
and
inc
popf
int3
movsl
les
xor
push
jmp
push
sub
ja
leave
or
xor
pop
sub
loope
jl
inc
popf
push
mov
cmc
aad
jmp
enter
inc
in
jno
add
in
outsb
add
add
inc
dec
and
cwtl
lods
jae
sarb
adc
adc
pop
loop
insl
das
adc
and
add
inc
test
ss
fs
dec
scas
out
push
ds
ljmp
sarl
movsb
adc
xor
and
adc
xchg
jmp
nop
pop
mov
and
out
scas
mov
mov
mov
lods
ficomps
jne
push
add
xor
jb
xor
adc
or
shl
fisubrl
sub
mov
xor
lea
adc
inc
test
mov
mov
inc
sbb
call
push
lret
mov
fildl
push
and
test
in
cs
stos
or
xor
xchg
shr
aam
inc
xchg
pop
lea
mov
push
add
icebp
cmp
xchg
push
push
push
clc
negl
aad
xchg
fwait
mov
jg
jecxz
scas
xchg
xor
sub
movl
popa
xchg
fadds
mov
insb
pop
inc
sub
xor
push
cmp
cwtl
add
outsl
mov
xchg
dec
movsl
adc
shl
adc
push
pop
pop
fildll
lret
or
adcb
pop
xchg
ds
loopne
sete
loop
cltd
in
fdiv
cld
jle
jno
cmc
adc
icebp
test
pop
push
xor
dec
mov
rcrb
cmp
loope
push
lahf
or
pop
nopl
jg
jp
aad
mov
jecxz
xor
int
and
or
aad
mov
je
jg
gs
cmp
or
aas
inc
out
push
pop
test
mov
test
dec
call
fidivs
adc
outsl
aad
and
ljmp
xchg
arpl
or
inc
and
mov
cmp
scas
lds
loop
movhps
dec
aas
inc
xor
push
jno
pop
lea
test
shlb
mov
xor
sub
shlb
notb
pop
int3
sbb
imul
inc
stc
in
add
xor
push
shlb
in
sarl
add
pop
icebp
sub
insb
fxch
inc
imul
jnp
inc
mov
push
sbb
js
test
mov
leave
lock
mov
cld
cmp
ret
mov
lahf
std
out
mov
fyl2xp1
push
ds
xchg
or
sbb
rclb
in
popa
mov
ret
push
add
or
add
jne
xchg
fsubp
out
jo
pop
sbb
pop
mov
in
shl
xchg
aas
xchg
jno
lret
pop
adc
push
pop
lds
ret
pop
jbe
jl
xchg
xchg
cmp
pop
jbe,pn
add
jl
push
das
xchg
and
fisubs
inc
loop
jae
out
movsb
enter
fnstcw
push
adc
push
nop
and
push
jnp
push
leave
stos
scas
adc
inc
and
cmp
cwtl
or
into
enter
or
nop
xor
cmp
faddl
adc
or
mov
or
jmp
xchg
decl
cmp
adc
stos
rclb
mov
jo
adc
call
fistps
adc
pop
mov
sbb
jecxz
out
adc
or
cmc
and
lcall
pop
sar
xor
out
test
xor
mov
fisubs
mov
scas
inc
out
test
shrl
daa
das
add
inc
js
xor
in
mov
add
ret
sub
jmp
xchg
sub
xchg
xor
push
mov
push
cli
repnz
cmovns
cltd
xchg
jmp
mov
pop
mov
xor
rcl
xchg
mov
mov
movsl
xchg
je
jp
sub
and
dec
xchg
test
or
mov
out
dec
scas
push
push
inc
or
and
in
gs
push
sub
lahf
xor
stc
inc
leave
pop
sub
sbb
clc
mov
bound
xchg
in
push
aas
sbb
rol
lret
repnz
mov
popf
aad
and
xor
rcrl
int
pushl
and
ljmp
addr16
in
cs
push
adcb
push
inc
dec
cmpsl
push
adc
and
jo
sahf
inc
test
mov
mov
mov
cmp
scas
dec
xor
ret
pop
sub
mov
add
call
cmp
dec
lds
add
sub
in
mov
dec
std
xchg
shll
xchg
xor
test
dec
jmp
and
mov
mov
dec
xchg
sub
sahf
mov
pop
mov
decb
lods
jae
sti
sbb
lret
mov
sbb
push
push
dec
mov
mov
jnp
mov
sub
imul
test
mov
push
ja
push
ret
sub
fidivs
mov
jle
dec
pop
xor
clc
scas
fistpl
movsb
xchg
xlat
into
jbe
pop
addl
mov
cmp
out
xchg
sbb
outsb
scas
jle
fisubrl
lret
and
jbe
outsb
jge
jl
mov
cwtl
add
xor
ja
int
inc
mov
dec
xchg
fstpl
mov
lds
mov
xorb
adc
dec
mov
pusha
mov
outsl
mov
mov
xor
inc
icebp
fnstenv
jmp
cwtl
mov
xor
xor
mov
mov
std
dec
or
cmp
fnstenv
cmp
add
jge
loopne
inc
cmp
ljmp
dec
inc
mov
addr16
sub
adcl
sahf
pop
or
add
jb
imul
sub
mov
cwtl
pop
insl
mov
lods
xor
sbb
xchg
push
repz
loop
fsub
xchg
xchg
jae
inc
icebp
jne
or
and
insb
dec
adc
or
mov
sbb
sbb
jnp
mov
dec
flds
adc
push
dec
push
shl
xchg
imul
mov
lret
clc
out
mov
mov
jmp
inc
pop
int3
cmc
aam
mov
outsl
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
jmp
sub
cmp
mov
push
leave
adc
jo
adc
fadds
mov
movb
mov
adc
sbb
call
dec
fistpl
sbb
insb
insb
shlb
pop
or
cld
jno
push
daa
push
push
out
add
mov
fdivr
pop
push
and
nop
or
test
jg
andl
mov
test
jp
and
stc
stos
cs
cmpsb
adc
xor
mov
pop
in
dec
js
lds
inc
jge
mov
push
ret
cmp
xor
cmc
or
cmp
sti
dec
sbb
cmpsb
sti
test
push
cmp
jmp
adc
push
jge
jns
and
in
je
mov
movsb
stc
sub
icebp
push
jbe
or
ss
stos
pushl
pop
lret
jo
lret
pop
inc
and
js
or
push
fnsave
and
in
push
xlat
stos
add
jmp
scas
mov
jmp
inc
scas
xor
lods
inc
sbb
lret
mov
cmp
cmp
lock
imul
xor
dec
sbb
test
jb
pop
mov
jg
cmp
pop
jl
stos
jle
push
push
sti
rolb
inc
sysenter
xchg
mov
dec
and
jl
fcomps
pop
test
ja
dec
fadds
cs
pushf
clc
xlat
push
adc
insb
sub
xchg
pop
add
les
js
jmp
inc
jge
jno
stc
xchg
xchg
push
sbb
clc
test
mov
out
fcmove
js
and
and
dec
push
or
loopne
lcall
aam
jbe
stc
cmp
xchg
repz
mov
add
jno
sbb
sbb
repz
or
test
andb
push
dec
sti
pop
mov
inc
inc
jae
pop
movsl
mov
sbb
test
cli
aad
jae
sub
pop
subl
ljmp
push
push
inc
rorb
das
in
lods
test
jp
ss
dec
mov
jle
sbb
dec
dec
xchg
push
shr
stc
add
sarl
bound
or
xchg
int3
iret
addr16
jmp
ficoms
xor
mov
cmp
insl
arpl
ret
fimull
shlb
mov
push
jmp
mov
mov
pop
xor
cmp
jnp
imull
lcall
roll
dec
mov
addr16
jnp
mov
sub
dec
mov
dec
out
mov
cmp
sbb
jbe
pop
hlt
add
cmpsb
fmul
cmp
out
lret
mov
xchg
push
mov
inc
xchg
xchg
mov
in
scas
mov
xor
fsubrs
cmp
lods
push
mov
and
xchg
mov
cwtl
insl
out
repz
imull
xlat
stc
out
test
shlb
push
jns
jns
add
cmc
rolb
js
lcall
add
test
call
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
jmp
xchg
xorb
daa
cltd
sbb
scas
data16
rcll
jo
adc
push
mov
jns
test
loopne
gs
loop
cmp
enter
ficomps
jmp
jnp
xor
sub
pop
mov
mov
test
xor
clc
sub
add
daa
outsb
hlt
or
test
cltd
dec
call
icebp
es
rorl
shl
add
aas
dec
jle
mov
inc
adc
divl
xor
and
jb
push
loope
jmp
xor
imul
sub
popa
jmp
mov
inc
xchg
pop
in
lds
xchg
push
cmp
adc
les
cmpsl
scas
fimuls
mov
ret
jecxz
andl
push
sub
cmp
loop
lret
aaa
pop
push
xchg
lcall
movsb
aad
mov
leave
lretw
popa
jmp
rclb
dec
ds
iret
dec
or
cmp
dec
and
lcall
xor
xor
inc
cmp
insb
repz
pop
std
push
lret
pop
dec
ret
mov
out
test
or
arpl
icebp
movaps
int
stos
scas
repz
push
xchg
dec
sub
adc
add
dec
sahf
and
leave
mov
jo
cmpsb
leave
mov
pop
pushf
push
fcoml
jg
fisubrs
pusha
inc
cld
leave
pop
xchg
xor
cmc
inc
test
js
fnstsw
sub
cld
mov
fwait
test
cld
mov
out
mov
pop
jg
add
xor
inc
test
pop
and
aas
movsl
inc
push
arpl
xorl
dec
jmp
fstpt
pop
push
loopne
in
out
jg
xorl
enter
leave
sbb
pop
mov
aaa
push
std
lret
ja
ljmp
fists
lret
xlat
inc
out
xchg
pop
loop
pushf
sub
cmp
or
lcall
mov
sub
ds
jne
aad
fs
imul
aaa
test
sahf
and
rol
or
pusha
in
addr16
cmp
xchg
ficomps
lahf
mov
push
scas
pop
push
push
movsl
repz
cmp
sub
clc
inc
fwait
adc
das
ret
inc
stos
jbe
mov
sahf
push
sbb
into
inc
ret
lods
loope
in
popa
bound
push
ss
sub
jecxz
and
cmpsb
aad
pop
jo
xor
cmp
js
stos
fdiv
jp
imul
adc
pop
fistpll
mov
jl
ret
mov
shlb
mov
or
and
mov
and
sub
mov
mov
inc
inc
pop
mov
hlt
incl
lock
dec
xchg
daa
in
int3
rcl
cld
xchg
ror
adcl
movsl
stc
sbb
decb
add
lret
rcrl
push
add
out
cmp
push
lea
stc
adc
cmp
jne
inc
add
gs
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
jmp
jmp
dec
test
lods
movb
push
mov
adc
adc
mov
inc
fucomip
xchg
mov
fldl
or
mov
inc
mov
add
popa
or
jge
push
jmp
cmp
scas
adc
cmp
icebp
test
push
outsl
int
je
adc
xlat
add
adc
inc
das
test
jne
ja
mov
lock
orb
cmp
rorl
adcl
mov
lock
xchg
addr16
mov
inc
outsl
push
fidivrs
in
and
mov
mov
or
into
push
out
imul
inc
jg
popf
adc
aad
mov
cmpsl
cli
sbb
into
push
or
jecxz
outsl
mov
jmp
mov
jl
stos
popa
mov
test
enter
jmp
ret
and
pop
orl
or
sub
out
mov
cmp
dec
aad
jecxz
mov
icebp
xchg
sbb
add
lret
test
stos
pop
push
sahf
pop
jecxz
xchg
push
leave
pop
imul
add
mov
je
sahf
jb
arpl
cmp
cmp
dec
push
insl
mov
mov
ret
test
mov
call
mov
js
imul
and
pop
imul
add
daa
or
insb
fists
or
sarb
push
mov
cld
scas
jge
mov
arpl
mov
mov
adc
and
and
pop
push
repnz
sub
push
test
adc
clc
and
lea
cli
push
scas
gs
fcomip
inc
mov
xor
dec
fwait
xor
push
aam
push
fadd
push
pop
test
movsb
inc
cmp
add
out
je
push
pop
data16
mov
xchg
inc
insb
xchg
ficoms
mov
dec
xchg
clc
pop
xlat
cmp
in
pop
mov
mov
nop
and
mov
ret
cmpb
xchg
je
pop
sbb
push
cmp
cltd
ja
fnsave
addr16
mov
leave
filds
add
pop
jo
loop
or
jp
in
in
adc
movsl
jl
sub
mov
enter
shlb
inc
xchg
ret
jle,pn
lea
pushf
xchg
nop
cmp
je
ja
xchg
call
sub
mov
lahf
ja
push
xchg
jnp
mov
aam
sub
imul
roll
or
call
ss
stos
hlt
mov
sbb
movsb
gs
dec
sahf
pop
fildll
mov
in
jno
imul
xor
xlat
add
imul
daa
hlt
or
loopne
cli
pop
jns
jo
lahf
out
dec
fldcw
xor
dec
repz
cmpsl
mov
and
mov
inc
daa
jmp
jg
push
imul
testl
cmp
gs
es
add
bswap
addb
pop
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
jmp
dec
pop
divb
inc
and
mov
imul
mov
sbb
adc
jecxz
lods
pushf
pop
stos
dec
leave
pop
push
mov
rcll
sbb
add
test
inc
lods
dec
ljmp
hlt
scas
or
xchg
xchg
xor
dec
sbb
adc
aas
std
mov
mov
loop
jbe
xor
xchg
sbb
aam
sbb
mov
and
fisubrs
stc
pandn
dec
cltd
imul
dec
fsubs
addr16
sti
pop
xchg
jge
rcrl
add
xchg
mov
adc
mov
rcll
jle
aad
fcomps
adc
ret
test
je
jp
pushf
jo
neg
push
xorb
mov
outsb
inc
xchg
daa
fildll
fsubs
cmp
mov
aam
shll
jne
sbb
dec
rorl
push
dec
ja
ds
mov
insl
jmp
jge
loopw
inc
ds
nop
enter
mov
dec
jne
dec
jae
mov
popl
in
shrb
stc
mov
int3
fcomps
cmpsb
jecxz
das
xchg
mov
push
test
enter
sub
cmp
mov
arpl
sbb
xor
xlat
fstl
sub
dec
add
inc
push
push
and
and
jb
int3
stc
cmp
inc
js
test
das
mov
out
pop
and
inc
jae
inc
and
les
mov
fidivrl
insb
mov
dec
jbe
in
inc
mov
push
add
sbb
mov
popa
lock
sbb
cmp
dec
pop
cli
aaa
loop
jg
mov
xor
and
pop
cmp
aas
mov
dec
dec
pop
aas
stc
mov
pop
mov
xchg
popf
adc
outsl
jbe
push
ret
lret
or
leave
test
cmp
push
out
add
in
cmc
popf
mov
idiv
arpl
xor
lock
mov
call
mov
mov
or
or
push
add
push
jmp
push
pop
push
js
pop
lcall
movlps
xor
xor
mov
dec
cmp
mov
xor
movsb
mov
pop
xchg
stos
loop
dec
andb
dec
std
out
mov
mov
popf
cmpb
aas
adc
pop
test
or
and
into
addr16
jmp
jmp
cmp
pop
add
cmpsb
xor
icebp
iret
and
cmp
and
and
inc
inc
jle
xchg
fcomps
setno
mov
ljmp
and
push
jg
cmc
out
insb
mov
jle
dec
adc
ljmp
sbb
and
mov
dec
frstor
je
cli
mov
test
pop
lods
daa
mov
js
pop
push
scas
imul
shll
out
jne
push
and
clc
fucom
mov
es
inc
push
insb
cmc
fistpll
fadds
pusha
repz
mov
mov
out
mov
add
ljmp
mov
mov
push
clc
push
jg
jg
vmwrite
loopne
mov
mov
or
mov
add
out
lock
imul
outsl
jns
add
mov
cld
or
xchg
sahf
cs
lret
fwait
pop
addl
xlat
fnstcw
rcrb
pop
pusha
popa
and
push
jae
mov
push
pop
xchg
mov
mov
stc
lahf
icebp
inc
and
or
dec
cmpsb
sbb
and
lret
imul
fcomps
shl
push
mov
test
loop
scas
test
mov
addr16
rcrl
cmpsb
stc
push
sahf
mov
mov
pop
in
xor
lahf
adc
fdivr
outsb
ret
sbb
add
cli
test
xchg
mov
sahf
and
popa
and
cs
or
push
cmp
mov
xor
inc
pop
dec
mov
stos
pop
jg
cbtw
scas
frstor
sbb
int3
dec
cmp
jno
jbe
out
push
jbe
and
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
jmp
cltd
sbb
sbb
cltd
sbb
xchg
bound
or
adc
stos
movlps
imul
shrl
loopne
insl
cmpsl
pop
push
mov
pop
add
scas
push
xor
and
inc
hlt
xchg
leave
jl
jo
or
fcoml
mov
repz
push
and
sar
loope
sub
xlat
sub
in
xor
leave
lea
cmc
add
fimuls
loop
outsl
outsl
xchg
fbstp
push
sbb
mov
adc
test
arpl
stos
xchg
aad
in
and
adc
cmp
mov
stos
ds
sub
inc
jns
sub
mov
je
sti
clc
out
aam
mov
into
out
les
or
jge
jecxz
jle
mov
sub
adc
nop
sbb
repnz
inc
cmpsl
lcall
and
mov
into
mov
sub
fs
xor
leave
int3
push
ficompl
mov
dec
in
sbb
add
mov
add
push
sbb
mov
push
cs
sub
xor
dec
cmp
inc
sahf
hlt
and
enter
cmc
pop
sub
jg
mov
xor
ja
push
fs
stos
pushl
mov
int
cmp
inc
mov
cwtl
shl
mov
jle
sbb
xchg
test
insl
outsb
sti
popl
cmp
sub
aam
insb
mov
call
pop
sub
popf
cmpsl
mov
test
adc
ret
sbb
mov
mov
jno
or
dec
pop
outsl
cmpsb
addr16
xchg
dec
mov
xchg
stc
mov
addr16
mov
leave
data16
add
clc
xchg
pop
dec
push
fmuls
pop
adc
orl
mov
mov
push
out
fidivl
cld
cltd
shrb
insl
jae
in
jg
sbb
inc
mov
out
mov
cltd
imul
sub
imul
push
inc
mov
xor
inc
es
adc
pop
pushf
cmp
sbb
loop
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
jmp
pop
mov
pop
mov
dec
into
xor
sbb
adc
stos
movlps
test
sub
icebp
adc
ficomps
lea
in
bound
mov
mov
cmpsl
in
xchg
movsl
movsl
and
leave
mov
inc
sbb
mov
adcb
and
pop
les
std
prefetchw
test
mov
sahf
sub
lods
sbb
scas
loope
jo
mov
ret
rorb
xchg
std
popf
nop
in
fwait
inc
les
xor
aad
pusha
mov
xchg
mov
fdivs
jp
pop
addr16
mov
jnp
push
jmp
mov
popf
rorl
dec
push
into
mov
or
inc
cmc
adc
sti
push
cmpsl
inc
mov
lods
enter
or
es
out
inc
pop
mov
push
ss
cld
xchg
push
mov
mov
cwtl
ja
inc
add
arpl
je
lock
loopne
rorl
sub
mov
sbb
in
ja
fmuls
or
imul
push
sbb
inc
addr16
lcall
sbb
sbb
popa
push
fsts
xchg
pop
push
ret
sub
rcll
stc
pop
jb
pop
push
outsl
sub
data16
cwtl
leave
and
mov
icebp
or
push
into
sbb
xchg
leave
lock
and
pop
push
cmpsl
pop
loopne
dec
ret
push
in
out
outsb
sbb
and
mov
das
sarl
stos
push
cmpsb
sub
adc
test
push
cmp
dec
loop
jle
cmp
mov
orb
adc
dec
cmpsl
rorl
inc
lds
data16
in
lret
rorb
fs
adc
es
adc
pop
and
sahf
push
pmulhw
lcall
pop
test
add
jo
das
adc
cmpb
xchg
push
andb
pop
mov
aas
cwtl
cvtps2pi
std
jg
xchg
inc
lcall
int
inc
push
stc
incb
adc
repz
and
clc
fidivrl
lods
sub
jno
push
xor
je
pop
aad
je
mov
clc
sub
jbe
sub
movsb
imul
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
xchg
sub
subl
xchg
enter
adc
stos
movlps
lahf
sarb
xor
mov
lret
dec
adc
aam
push
cmp
jno
aas
adc
pop
xchg
lret
mov
sahf
lods
cmp
call
dec
mov
mov
and
mov
test
loop
cwtl
cmp
mov
xchg
movsb
insb
addr16
and
adc
pop
scas
jne
push
aas
sbb
or
test
pop
mov
sbb
ror
fstpt
repnz
push
daa
mov
fistps
leave
xchg
and
dec
pop
sbb
out
mov
push
std
mov
cs
push
sub
movsl
jecxz
dec
xchg
and
stos
jp
mov
push
cs
jns
ficompl
adc
icebp
adc
dec
imul
inc
pop
xor
nop
xchg
dec
fmull
popf
mov
adc
fcomip
dec
decl
adcb
lret
lods
jns
push
or
in
mov
adc
adc
and
popa
or
rcrb
in
push
add
ljmp
lahf
pop
addl
sub
or
movsb
mov
add
bound
imull
idiv
inc
sub
negb
into
pop
xchg
call
shll
lods
sbb
mov
and
fisubl
mov
insb
cwtl
adc
orb
cmpsl
push
fwait
mov
mov
pop
mov
lahf
sbb
inc
aam
jle
or
jo
or
sahf
jge
ret
orl
push
add
mov
sbb
jo
stos
dec
test
stos
fcoms
loop
mov
cmp
and
ret
mov
pusha
and
fdivrs
and
divl
enter
fcomip
adc
int
mov
and
xor
test
jecxz
push
insb
jns
fdivs
js
mov
loop
mov
jl
or
sete
jns
and
push
lea
ret
ja
cwtl
mov
lods
les
mov
adc
xchg
fisubrs
xchg
xor
push
mov
dec
pop
xchg
movl
mov
mov
and
sub
or
mov
imul
mov
jmp
loope
mov
and
les
aas
fwait
adc
stos
movlps
sbb
das
mov
in
xchg
rcrl
scas
inc
mov
repnz
ss
pop
sbbb
sub
imul
add
dec
cli
leave
outsb
mov
mov
shll
shr
fs
adc
xor
or
xlat
jns
or
shlb
mov
std
sbb
lret
nop
push
jno
xchg
xchg
out
xchg
pushf
inc
iret
aaa
pop
insl
pop
pop
dec
lods
push
lock
daa
dec
pusha
insb
rcl
int
inc
push
imul
lock
inc
stos
jne
out
cmp
xor
ret
mov
lods
std
mov
mov
push
push
call
adc
xchg
dec
dec
dec
mov
sub
shll
outsl
shlb
cmp
popa
into
adc
cmp
les
jb
mov
arpl
ds
cs
mov
xor
cmc
dec
into
repnz
rcrl
fstps
testl
iret
nop
clc
mov
out
inc
sbb
sbb
and
out
jecxz
jno
iret
aaa
jno
pop
push
push
sub
aam
frstor
mov
scas
repz
push
jle
int3
add
test
fwait
pop
std
lret
jo
stos
fbstp
inc
dec
sbb
fadds
mov
and
dec
into
lods
dec
dec
jae
mov
movsb
cmp
cmc
imul
or
mov
sbb
std
and
shll
xor
or
out
ljmp
sbb
out
daa
xor
lret
into
xchg
adc
pop
aad
out
push
fcoms
xchg
movsb
add
sbb
fwait
pop
push
ljmp
inc
xchg
addb
sub
ja
pusha
dec
mov
hlt
stc
sub
pop
inc
add
xchg
pop
push
mov
jecxz
mov
xchg
cmp
and
out
loop
int3
mov
fmul
inc
push
jns
sub
sub
xchg
in
icebp
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
jmp
inc
or
pushf
ds
fdivrs
cltd
adc
pop
adc
adc
sbb
or
xchg
rorl
inc
jne
lcall
test
push
xorb
mov
cmp
pop
aad
dec
pop
mov
cmpsl
leave
jno
lods
ss
mov
jle
mov
or
je
cmovns
jbe
out
mov
movsl
mov
out
into
sbb
xchg
mov
push
push
and
cmp
jle
sbb
btc
inc
and
adc
sub
fsubs
clc
shll
adc
stos
nop
xor
out
mov
fcom
push
xchg
xlat
push
icebp
cmp
ficoml
push
jp
add
out
dec
pop
push
loope
push
push
mov
mov
pop
outsb
pop
adc
xor
jle
mov
dec
mov
ret
adc
loopne
arpl
loopne
xor
inc
popa
mov
add
xchg
sti
jb
nop
aad
or
gs
cmp
mov
mov
xchg
pop
lcall
adc
ljmp
dec
fildl
and
push
pop
mov
pusha
js
jge
push
movb
psubd
jp
inc
add
or
sbb
mov
fdivs
outsb
xchg
mov
sbb
jns
pop
out
addl
push
push
xchg
mov
bound
lods
xor
add
stos
jp
jmp
aam
sub
fiadds
adc
mov
repz
mov
std
cmp
dec
or
or
inc
popa
sti
dec
and
cmp
inc
mov
pusha
pop
mov
mov
loop
or
mov
and
dec
aad
loopne
mov
nop
push
xchg
arpl
call
bound
sub
push
sbb
xchg
stos
mov
repz
mov
jl
out
out
in
mov
and
mov
adc
out
loope
es
jmp
fsubrs
inc
lea
lret
dec
mov
lcall
testl
xlat
stc
das
and
iret
jo
push
insl
jb
mov
mov
insl
pop
subb
movsl
xchg
add
dec
mov
push
aam
jp
gs
sysenter
pop
scas
mov
mov
sbb
push
fmuls
and
neg
cmpsb
lcall
dec
pop
stc
fwait
ret
shrl
sbb
mov
aaa
test
mov
push
nopl
jge
dec
mov
jbe
add
push
ds
hlt
push
iret
or
stc
pushl
mov
lds
cmp
popa
push
inc
lock
cmpsl
nop
ss
xlat
cltd
jne
mov
fcmovbe
fyl2x
addb
stos
inc
dec
inc
sub
fs
loopne
sahf
cld
cmp
cmp
xchg
or
mov
adc
inc
jle
ds
out
lea
clc
mov
clc
and
loopne
jl
jae
les
test
push
add
je
iret
mov
cld
inc
fisubl
rorb
jmp
mov
jl
push
add
or
adc
cmpsb
mov
ljmp
enter
shll
lret
arpl
jecxz
mov
lock
jl
imul
push
in
clc
cli
les
xchg
mov
cmpsb
repnz
ret
pop
lods
inc
mov
jp
lret
or
cmpsl
cmp
xchg
dec
rolb
ret
dec
repnz
jo
cli
insb
cli
xchg
std
lret
mulps
addr16
cmp
stc
rorb
inc
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
jmp
pop
pop
scas
outsb
scas
pop
sbb
cmp
push
push
jg
push
xchg
adc
pop
adc
adc
inc
div
in
inc
inc
jmp
dec
jne
sarl
lods
fimull
fst
scas
loopne
push
shlb
js
in
xlat
ljmp
jmp
xchg
int3
pop
mov
or
sub
out
arpl
inc
cmpsb
ds
mov
fistps
xacquire
fnsave
out
dec
std
aaa
stc
mov
push
sub
das
jp
loope
rol
shrb
fwait
mov
pop
mov
nop
lret
popf
inc
xor
pop
push
sti
dec
test
push
cltd
lcall
ss
lods
add
push
cltd
or
sti
sbb
sti
add
cmp
push
mov
jae
jl
imul
insl
in
push
faddl
enter
mov
sahf
mov
mov
mov
dec
shr
jbe
out
sbb
pop
sbb
jbe
lods
xchg
aad
mov
call
lahf
adc
mov
adc
lahf
dec
add
leave
fcmovne
pop
pop
ss
int
fnstenv
cmp
push
ja
arpl
push
fcmovnb
pop
inc
cs
stos
inc
dec
in
push
sbb
sti
fidivrl
cmp
jbe
cwtl
inc
ds
aas
or
sti
push
adc
sbb
movsl
lcall
push
icebp
xorl
or
les
add
aad
lods
jnp
or
jl
mov
pop
dec
repz
xor
jne
notl
xor
inc
leave
icebp
mov
sahf
jl
xor
pop
sub
jns
pop
mov
fildll
push
mov
insb
sbbl
inc
xor
mov
or
jmp
clc
fbstp
xor
xchg
enter
ja
mov
xlat
add
lret
mov
adc
mov
cwtl
inc
bound
arpl
cmp
das
test
jecxz
mov
xchg
stos
pop
popl
adc
daa
movb
in
inc
fdivl
cs
mov
loop
xchg
sti
jl
outsl
icebp
or
test
push
imul
xchg
sbb
mov
and
mov
das
scas
sub
xchg
or
add
dec
mov
test
jae
sbb
imul
mov
add
xchg
push
ja
scas
daa
int
jecxz
xor
and
ret
lret
mov
adc
test
aad
push
jno
xchg
xchg
rcr
xchg
or
pushf
jns
push
adc
add
lods
cmp
icebp
push
mov
jge
adc
std
pop
sbb
adc
lea
outsb
or
add
jmp
lret
and
clc
scas
js
je
sbb
cwtl
out
popa
xchg
sub
out
or
imul
or
sub
gs
xchg
push
pop
outsl
jae
mov
xor
int3
loop
xchg
adc
daa
dec
inc
cmp
fnstcw
inc
and
mov
dec
outsb
int
or
add
inc
ficompl
fcoml
or
or
scas
ds
mov
jo
xchg
and
sub
cmp
leave
imul
mov
or
xor
clc
cmp
or
call
sti
or
xchg
pop
pushf
test
fsubl
xchg
dec
or
and
xchg
mov
dec
sub
dec
fdivrs
js
sbb
int3
ret
and
jge
jo
lret
jmp
pop
cmp
lods
pop
fwait
and
cmp
or
dec
mov
mov
mov
popa
fstl
icebp
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
ret
loopne
icebp
xchg
stos
mov
stos
sbb
lods
in
mov
adc
movlps
push
xor
xchg
dec
sub
outsb
test
pop
push
pop
xchg
xlat
and
fnsave
xor
adc
aam
mov
out
mov
outsl
push
ds
cmp
enter
lods
push
xchg
repnz
pop
jno
lods
out
sub
adc
sbb
inc
inc
push
push
jne
test
sbb
jbe
lret
lods
xor
xchg
jge
into
dec
mov
pop
gs
ficoms
jp
les
lcall
add
mov
mov
imul
test
push
or
xchg
sbb
bound
cmp
sbb
pop
shll
data16
sbb
sbbb
adc
insl
push
decb
in
inc
sub
nop
bound
dec
rcr
repz
loopne
aaa
lcall
sti
push
mov
fistpll
aas
push
and
ljmp
sub
or
cs
in
shll
shr
xor
xchg
mov
xchg
repz
jae
mov
lock
xchg
popa
push
mov
out
jne
add
fdiv
xor
xchg
mov
xchg
inc
lret
xor
push
pop
adc
sbb
scas
jecxz
add
or
testl
dec
jae
push
cld
jae
push
mov
fcoml
pushf
fisttpll
jno
mov
cmp
fstps
pop
inc
mov
outsb
iret
push
popf
or
stc
ret
aam
mov
lahf
repnz
call
inc
popf
mov
push
sbb
test
repz
jo
dec
and
out
test
adc
lds
bound
in
pop
mull
dec
jp
sarb
inc
into
imul
mov
pop
sbb
and
scas
cmp
mov
push
rcl
notl
mov
fdivr
in
mov
push
or
sub
dec
adc
fidivrl
and
lock
negl
cs
mov
in
stc
mov
outsl
dec
cmp
ljmp
jo
adc
jmp
test
push
sarb
test
mov
cmp
cld
js
add
mov
jae
cmc
mov
repnz
xchg
scas
cmp
sub
popf
fldcw
das
fildll
push
sbb
xlat
sub
sbb
mov
or
mov
loope
aaa
mov
clc
sub
insb
pop
pop
xorb
in
cmpsb
in
cmpsb
add
xchg
int
sub
push
xor
jb
and
scas
frstor
fadds
sbb
test
shl
xlat
inc
mov
mov
cwtl
jp
xchg
dec
sub
insb
inc
sahf
stos
inc
cmpsl
xor
inc
les
add
inc
enter
add
inc
int3
cmp
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
jmp
cmp
iret
sbb
pop
push
lret
test
repz
adc
movlps
mov
mov
and
roll
push
lock
pop
push
test
mov
sub
or
jae
rcl
push
clc
pop
xchg
shll
or
xchg
in
mov
sbb
inc
aad
sahf
aad
fisubs
ret
mov
stc
insb
test
outsl
sbb
fstps
sbb
adc
movsb
and
jecxz
cmc
cs
movl
rol
xor
mov
fchs
into
mov
adc
xor
push
es
into
add
mov
nop
and
pop
cmp
inc
aas
mov
ljmp
int
ret
leave
div
dec
jnp
in
jno
mov
sbb
rcr
mov
call
cmpsb
add
sub
mov
loope
inc
enter
daa
and
into
cltd
aad
cmpsl
test
and
repz
scas
sti
push
jbe
add
fidivrl
lods
sti
xchg
cmp
lds
repnz
adc
inc
pusha
xchg
jge
jl
and
inc
fs
add
shrd
ja
insl
adc
mov
xor
btr
pop
or
in
scas
or
pushf
xor
js
repz
lods
roll
notb
pop
sti
dec
sub
imul
push
jecxz
imul
fisttps
sbb
imul
inc
insl
jl
out
daa
out
and
js
mov
negb
xor
mov
les
inc
cmp
lret
popa
inc
cmp
lods
adc
mov
out
jns
loopne
sarb
movb
fsubl
cli
xchg
lods
sbb
jb
jbe
or
lcall
rorl
ds
cmp
and
adc
movsl
push
push
orb
inc
scas
xchg
jp
js
fsts
jl
cmp
outsl
lds
test
aaa
xor
jmp
imul
lahf
add
adc
cmp
lahf
stos
aam
cmp
jnp
addr16
mov
or
push
push
in
mulb
call
lods
sub
cmp
sub
pusha
ret
outsl
sahf
cmp
jp
int3
jbe
push
xchg
sub
dec
es
movsl
and
imul
ret
mov
mov
aad
jbe
fsubl
pop
pop
ss
loop
fistl
push
add
cmp
jecxz
mov
fstl
jl
mov
sbb
cltd
xchg
in
pusha
xchg
dec
sbb
xor
push
jg
js
mov
jp
test
add
xchg
popa
push
aaa
rol
cmp
mov
mov
ja
cmp
push
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
jmp
inc
in
sbb
sbb
fisttpl
std
jle
jge
adc
movlps
loop
xchg
jmp
xchg
mov
shll
stos
sbbl
fcompl
xchg
test
cltd
out
mov
in
pop
ljmp
repz
imul
add
insl
jno
mov
jnp
mov
sbb
std
iret
lret
mov
push
mov
scas
cmp
pusha
mov
xchg
fiadds
push
or
enter
jle
ja
push
and
pop
loope
cwtl
mov
mov
movsb
mov
pop
sub
sub
mov
jg
xor
aad
pop
ss
inc
xchg
cld
or
pop
pop
push
add
sti
xor
mov
or
or
sarl
out
mov
in
ret
cmp
imul
sub
xor
inc
xchg
or
in
cmpsb
push
mov
test
push
inc
icebp
inc
add
sbb
cmp
cmp
icebp
adc
xor
mov
mov
mov
jo
xchg
mov
sbb
xchg
xor
std
add
int
dec
movsl
pop
repz
inc
test
icebp
jp
pushf
insb
xchg
cmp
jp
xor
lcall
inc
xor
xchg
fsubrs
call
mov
mov
iret
in
movb
xor
frstor
mov
es
dec
adc
lahf
bound
cwtl
stos
cld
outsb
mov
inc
jle
mov
inc
in
mov
iret
sbb
setno
faddl
cmp
fcompl
fcomp
mov
outsb
test
add
jo
cmp
shrl
mov
scas
cmp
into
mov
mov
and
fmuls
xchg
or
cmp
lods
cld
gs
cmpsl
inc
adc
sbb
je
and
call
dec
out
ret
mov
cmp
into
cmp
pop
dec
add
out
and
sbb
mov
orl
stos
pop
adc
mov
adc
int3
aam
xchg
mov
mov
jbe
cwtl
sub
in
adc
sub
inc
test
roll
movsb
pop
sbb
xchg
ds
fcomps
or
mov
jle
mov
mov
lods
lahf
mov
xor
test
loopne
enter
inc
mov
adc
sbb
jns
jge
or
jmp
cmp
mov
mov
shlb
ljmp
cs
mov
leave
test
xlat
movsb
xor
icebp
xlat
popf
mov
jnp
sbb
push
mov
cli
mov
in
inc
shr
pop
out
sti
pop
jmp
xchg
jb
imul
enter
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
jmp
and
sbb
loope
stos
mov
jae
adc
mov
pop
mov
ds
push
jne
ja
xchg
movsb
inc
aas
popf
inc
add
fidivl
leave
popf
cli
aam
mov
cmpb
out
in
cltd
test
cmc
scas
lahf
dec
pushl
add
out
inc
scas
xor
xchg
mov
xchg
xchg
pop
gs
adc
and
scas
pop
mov
jns
mov
mov
into
and
jnp
mov
test
push
imul
rcrl
icebp
imul
mov
lret
sti
clc
into
cs
adc
push
dec
dec
sbb
xor
rcr
loop
fxch
pushf
jns
pushf
mov
data16
sahf
mov
outsl
xor
push
mov
sub
mov
outsb
test
loop
ja
pop
mov
pop
bound
outsl
loope
jno
ljmp
mov
xchg
inc
fistps
ds
aaa
ss
push
lcall
mov
add
aaa
adc
inc
push
push
mov
mov
push
cwtl
inc
sbb
test
arpl
pop
cmc
dec
popl
add
push
sub
idivb
sbb
stc
scas
fistl
push
push
cli
and
insb
int
movsl
mov
and
movsl
movsl
outsb
jge
xlat
jge
jno
notl
mov
xchg
pop
data16
ret
popf
add
lret
in
test
adc
data16
jl,pt
add
into
inc
sbb
dec
adc
cmpsb
sahf
cmp
and
mov
adc
les
sub
test
jno
mov
fldl
idivb
mov
scas
push
in
es
in
lret
push
cmp
cli
mov
inc
loopne
add
sti
and
and
dec
mov
test
leavew
imul
ja
out
scas
pusha
mov
cmpsl
push
push
aaa
fists
cmp
cmp
and
in
add
xor
jae
mov
int
out
mov
xchg
rolb
lods
mov
push
scas
aad
push
fadd
in
jmp
cwtl
enter
mov
xor
lods
mov
xor
cs
sbb
test
xchg
inc
addl
jge
js
dec
data16
jns
add
insl
xor
jmp
popa
inc
les
jae
cmpsb
dec
push
lock
inc
push
jno
test
mov
cltd
pusha
and
js
ret
popf
leave
mov
std
inc
jecxz
add
aad
dec
sti
add
cmp
cmpsb
push
gs
jnp
pop
int
jae
fists
stos
pop
push
movsb
add
pop
dec
sar
cmpsb
ret
popa
stos
add
fisubrs
lret
inc
mov
stc
cmpsl
xor
mov
jmp
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
jmp
push
daa
sahf
xchg
sbb
add
lahf
mov
mov
add
adc
push
into
xor
mull
hlt
lds
push
cltd
lea
icebp
pop
jmp
xor
xchg
pop
test
jge
mov
mov
out
and
mov
xor
mov
lods
bound
xchg
jo
movsl
mov
inc
out
push
add
les
inc
outsl
adc
sub
dec
imul
or
dec
pop
dec
insl
or
inc
inc
cli
mov
adcb
mov
pop
push
sbb
jg
ret
nop
test
fcoms
stos
xor
ss
lds
aas
lret
cmc
cwtl
adc
push
fistpll
cmpsb
mov
dec
fsubrl
divb
test
aam
inc
adc
daa
dec
mov
jmp
pop
mov
push
in
out
sarl
jecxz
xchg
push
out
ljmp
imul
jnp
push
jl
aas
lret
lret
inc
add
jmp
xor
ja
pop
js
pop
jno
mov
divl
push
lds
iret
push
mov
adc
mov
xchg
int3
imul
jb
jge
pop
xchg
ret
rcll
mov
ds
mov
mov
insb
addb
fimuls
test
jbe
pusha
cwtl
jl
adc
jns
mov
lock
repnz
xchg
cmpsl
mov
popa
inc
mov
repz
sbb
fmul
ljmp
sub
sub
test
mov
lock
jae
add
scas
xchg
hlt
nop
cwtl
ficomps
inc
sbb
jmp
in
sub
xchg
jo
cmp
les
push
sarl
pop
out
je
enter
dec
mov
jmp
fabs
popf
add
pop
aad
dec
inc
mov
sbb
popa
cmpsl
stos
fmul
dec
push
mov
add
test
rol
or
cmp
aam
jne
mov
and
inc
fldenv
fsubrs
sbb
gs
mov
daa
pop
inc
rclb
je
hlt
cli
pop
dec
mov
outsb
in
jmp
jp
out
add
call
add
scas
rolb
add
pop
ss
adc
call
outsl
inc
xchg
mov
fs
dec
nop
imul
or
xor
clc
outsl
pop
andl
popf
cmp
popf
inc
pop
ja
add
leave
hlt
sbb
or
rorb
xchg
insb
ja
jl
mov
les
jb
pop
shl
arpl
inc
mov
cwtl
xchg
ret
add
cmp
jp
outsl
xchg
in
addl
nop
addr16
inc
or
subb
inc
int3
sbb
adc
lahf
mov
ljmp
or
xor
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
jmp
pop
mov
sbb
sbb
mov
hlt
jl
inc
xor
adc
pop
jne
mov
lods
pop
cmp
movsl
and
andl
push
jg
fidivrl
and
pop
xor
fwait
mov
insb
sub
sbb
in
dec
cld
ljmp
popa
inc
adc
pushf
and
int3
es
or
mov
hlt
in
and
aaa
adc
popf
ret
in
mov
jne
mov
int
out
adcb
repz
jecxz
pop
or
xor
dec
bound
xchg
sub
dec
jae
cmp
dec
popf
jae
or
adc
int3
movsl
std
inc
fsubrs
or
mov
adc
cmc
fistpll
push
movsl
pop
setbe
xchg
sbb
fsub
mov
cmp
dec
test
bound
in
stos
and
jo
frstor
jbe
mov
mov
adc
mov
neg
cmp
cmp
mov
cli
lods
adc
pop
pop
pushf
stos
add
je
insb
int3
daa
jecxz
fsubs
or
xor
push
int
outsl
xlat
mov
inc
jp
rolb
into
dec
aas
sbb
adcl
pop
ret
mov
pop
mov
push
push
adc
fadds
add
cmpsl
fcomps
sbbb
test
jecxz
and
aad
arpl
int
insl
fcmovbe
sbb
aas
inc
adc
hlt
mov
enter
xor
and
popa
pusha
dec
daa
pushl
in
cmp
ds
jp
fsubrl
repz
sbbb
and
xchg
cli
aam
shrb
dec
fdivl
and
outsb
leave
jp
pop
loopne
insl
test
les
dec
add
sub
mov
aas
pop
addr16
push
popf
add
stc
xor
pop
mov
inc
pop
mov
inc
inc
cmc
sub
xor
mov
jle
shrl
cli
push
shrl
jns
sbb
jae
push
jl
jecxz
and
fidivl
lods
addr16
sbb
lahf
dec
jae
add
adc
sahf
dec
push
adc
sub
push
sbb
or
mov
lret
and
lahf
sbb
in
leave
dec
sbb
fcomi
add
jecxz
ljmp
ds
vmovups
xchg
mov
mov
les
push
rcl
push
pop
jns
fidivrs
into
fdivs
lods
cmp
mov
jbe
dec
pushf
mov
xchg
cli
sub
adc
adc
jo
sub
ds
rcll
sub
stos
mov
pop
cmpsb
das
inc
mov
add
add
cmpsl
pop
jo
cmp
xor
sub
push
popa
add
sbb
out
dec
orl
add
add
add
push
add
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
jmp
xchg
mov
ret
sub
lcall
adc
jb
adc
loop
out
jne
mov
jbe
loope
xchg
sbbl
out
out
add
decl
pop
jae
dec
inc
adc
incl
jns
push
and
push
mov
xor
push
pop
sbb
mov
jl
imul
mov
sbb
jno
inc
ljmp
mov
stc
inc
dec
loopne
movsl
ljmp
push
fsubrl
insb
icebp
inc
out
loopne
rcll
or
pop
insb
aaa
fs
fsubrs
adc
scas
push
sub
pop
lret
add
sbb
aam
pushf
jmp
insb
sti
cmp
push
mov
icebp
jno
cmp
fstp
imul
lahf
mov
xchg
and
cltd
adcb
mov
cmp
aaa
fs
lea
inc
mov
jnp
dec
int3
stos
dec
mov
rcll
int
out
inc
xchg
sub
push
test
shrb
xor
push
out
pop
adc
xchg
stc
repz
mov
push
sub
nop
leave
mov
daa
pusha
dec
mov
or
inc
lret
fadd
mov
sbb
sbb
adc
cmp
mov
push
cli
cmpsb
stc
xor
mov
mov
popf
xchg
xchg
xchg
jmp
pop
daa
enter
ret
xchg
repnz
popa
xor
jnp
std
add
lock
push
clc
mov
fists
ss
cmp
lret
push
sub
fbld
mull
sbb
out
insl
mov
lahf
inc
stos
clc
add
inc
scas
mov
sbb
out
inc
sub
sub
ret
add
jle
push
into
ret
push
fidivl
movsl
cwtl
pusha
shrl
sbb
sbb
popa
inc
leave
cmpsl
pop
cmp
nop
fidivl
test
add
ret
xchg
jge
mov
test
andl
mov
hlt
jmp
clc
cmp
xchg
or
sarb
cmp
imul
stos
or
mov
cmp
mov
loop
or
fsts
icebp
scas
fldl
dec
mov
add
mov
cmpsb
fdivs
and
cli
add
lea
inc
and
negl
mov
dec
sbb
pop
xor
sub
mov
xor
test
and
and
cmp
inc
outsb
ljmp
and
mov
pop
inc
or
mov
push
leave
jae
fcomps
jo
xor
mov
loopne
cmpsb
js
cmp
ja
xchg
sub
movsl
int3
mov
dec
push
xlat
cmp
scas
sti
adc
sti
mov
mov
arpl
dec
fcoms
fbstp
int
xchg
xchg
cmp
and
or
sbb
add
int3
outsb
je
inc
jno
cs
mov
adc
or
add
arpl
jge
mov
lods
xchg
in
sub
jg
test
jnp
std
orb
and
mov
and
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
jmp
movsb
pop
rclb
push
cmpb
sub
adc
jp
adc
mov
loope
imul
cmp
scas
or
arpl
push
sub
and
imul
fdiv
pop
push
adcl
and
jno
cmp
test
fldcw
jl
aaa
or
int3
adc
xor
or
iret
cmp
mov
repz
inc
push
test
sbb
aam
maskmovq
imull
adc
sub
in
fisttps
sub
pop
out
popa
enter
xor
mov
or
into
lea
and
or
std
lds
adc
and
lods
mov
xorl
imul
push
mov
dec
fidivrl
repz
mov
add
add
andb
jge
add
jp
pop
xchg
cmp
lea
push
and
jecxz
repnz
and
outsl
jbe
scas
lods
gs
mov
pop
cmp
cmp
iret
pop
lds
and
mov
push
aas
sub
ret
add
idivb
push
dec
add
mov
xchg
pop
dec
cmp
dec
in
jns
push
cmp
out
enter
mov
setnp
xchg
jae
push
ljmp
push
mov
xchg
nop
mov
cmp
mov
mov
inc
dec
popf
jecxz
std
enter
negb
jnp
iret
inc
cmp
xchg
aaa
push
adc
mov
lcall
nop
mov
or
inc
push
jb
mov
adc
mov
add
xchg
or
mov
test
sahf
ljmp
arpl
pop
bound
cmp
outsb
lods
shll
cmp
add
mov
out
mov
inc
push
jg
jle
cli
sub
dec
and
call
adc
arpl
jp
stc
insl
incb
cmp
xchg
mov
sbb
ss
adc
out
sbb
mov
bound
insb
sub
lret
mov
inc
mov
and
popa
sub
pop
lret
lods
sahf
testb
adc
mov
shlb
ljmp
jnp
jb
lock
into
xchg
push
mov
fwait
out
jle
lret
sahf
pop
adc
in
stc
fisttps
cltd
mov
cld
mov
and
outsb
aad
jo
lods
push
loopne
repz
outsb
imul
adc
sbb
loopne
adc
aaa
sti
scas
lcall
inc
sbb
enter
dec
inc
push
inc
orb
es
push
adc
xchg
stos
dec
incl
or
jno
shrb
jnp
mov
inc
pop
in
lret
hlt
cli
jmp
inc
les
and
lods
adc
xor
and
adc
test
sahf
pop
adc
test
cmc
cmp
adc
cmp
sub
jae
popa
push
cli
outsl
aam
bt
pop
mov
gs
and
add
inc
or
sbb
mul
and
jne
mov
mov
inc
cld
mov
add
inc
clc
roll
add
inc
hlt
adc
add
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
jecxz
in
bound
pop
jne
inc
stos
xor
push
pop
adc
jp
adc
jb
sub
dec
scas
mov
fdivrl
out
inc
enter
scas
xchg
adc
fisubl
lods
outsb
push
jb
cmpsb
out
fmull
stos
aam
sub
scas
repnz
in
mov
in
pop
clc
push
jl
dec
fs
inc
pop
and
lea
mov
mov
into
sbb
inc
xchg
movsl
ret
sbb
or
sub
pop
adc
lahf
insb
xchg
or
jo
mov
les
mov
rcl
xchg
mov
sbb
inc
out
inc
mov
daa
and
out
cwtl
mov
jns
sub
adc
cmp
jge
cltd
mov
sti
sbb
mov
cmovp
sbb
divb
mov
fmulp
push
pop
cmpsb
xchg
add
inc
jne
adc
sbb
addr16
sbbl
xor
sbb
mov
ljmp
or
icebp
fcomip
or
pop
jle
enter
sub
fstpl
data16
arpl
push
negb
icebp
stos
pop
ss
daa
dec
inc
test
cmp
imul
call
push
sub
push
push
cmp
test
and
mov
jl
bound
stc
outsb
das
or
xor
subb
adc
fbld
or
inc
mov
testb
mov
cli
pop
aad
and
imul
mov
andb
inc
loopne
mov
ds
inc
cmp
in
pop
or
out
in
dec
inc
adcb
add
cwtl
inc
fsubrs
aas
jae
push
cwtl
adc
mov
sub
mov
pusha
adc
mov
ss
pop
dec
pop
jmp
push
dec
jne
lcall
xor
lret
imul
mov
mov
add
jae
ljmp
cmpsl
jp
adc
ficompl
lds
fldcw
stos
movsl
pusha
jecxz
ds
xor
inc
scas
dec
sub
popf
mov
hlt
loop
inc
adc
inc
les
cmp
jne
adc
adc
int3
int3
or
lea
into
mov
stc
jo
sub
pop
pop
subb
sbb
push
loopne
pop
mov
jp
xor
dec
or
push
xlat
ret
scas
movsb
sbb
mov
outsb
aad
movsl
into
cmpsb
les
ja
clc
mov
mov
pop
test
sbb
mov
adc
lock
leave
pop
aad
adc
out
stos
push
sub
movsl
popf
filds
repz
xorl
jne
or
ret
ja
pop
mov
jl
shll
lds
shll
jg
mov
pop
les
and
push
push
outsb
cs
scas
fldt
lock
and
xor
stos
pop
es
popf
mov
out
sbb
ficoml
mov
xor
push
ds
fwait
mov
push
mov
das
in
lods
push
jae
dec
push
bound
mov
jp
mov
shrd
int
aaa
add
sahf
hlt
mov
test
mov
and
lea
mov
shr
or
mov
jmp
pop
pop
mov
push
fisttpll
add
adc
adc
inc
shll
inc
mov
imul
lods
or
sub
cmc
lcall
or
push
push
push
mov
aad
psrlq
sbb
push
push
mov
ret
sbb
inc
pusha
mov
or
data16
cmc
lahf
lcall
nop
sbb
sahf
lods
icebp
js
jnp
movsb
dec
lock
fidivrl
add
sbb
daa
inc
je
jge
out
cmc
test
cmp
add
jp
je
pop
iret
test
mov
cmp
xor
pop
call
add
aas
mov
push
jo
lahf
lret
sarl
in
lret
or
clc
int3
outsb
inc
adc
fldcw
movsb
out
cmp
sbb
fisubrl
cld
push
popl
fcmovnu
jb
movsb
mov
test
push
xchg
popf
sbb
mov
or
push
in
inc
pop
cmp
push
adc
repnz
ret
push
sbb
inc
scas
aaa
mov
mov
les
jmp
dec
jp
icebp
jmp
loop
test
test
jp
dec
pop
dec
jbe
mov
lock
fistl
into
mov
cmpsl
push
pop
push
push
out
rcrl
rcrl
lods
cmpsl
rclb
push
adc
xchg
ds
jg
pop
push
and
je
imulb
loope
push
ljmp
nop
aaa
mov
insl
adc
lea
push
xchg
aam
fbstp
push
les
fs
decb
jg
adc
push
cmp
loope
mov
sub
xlat
pop
arpl
push
cli
pop
aad
mov
imul
dec
add
inc
lods
or
add
xchg
add
dec
jp
les
fistl
ljmp
dec
and
scas
dec
push
inc
in
sbb
dec
add
sub
mov
repz
mov
jle
hlt
xchg
sub
mov
mov
cmp
aas
mov
test
push
jmp
leave
sbb
stos
or
lock
lret
sub
pop
test
inc
xor
dec
aam
enter
sarb
dec
pop
shrw
xchg
movsb
bound
pop
ljmp
mov
mov
mov
jae
mov
mov
bound
or
aas
ret
out
stc
cmc
sbb
and
jnp
insb
adc
loope
in
fstps
mov
xlat
ret
mov
es
add
icebp
rcrl
lock
adc
dec
adc
adcl
lock
push
sub
pop
rcr
push
sahf
push
jge
mov
jg
inc
pop
pop
mov
jmp
push
lret
mov
sbb
std
jb
add
sbb
aaa
std
stc
test
push
mov
jno
push
sbb
andl
je
inc
hlt
ret
aam
adc
cmp
test
and
add
int
mov
dec
jae
mov
iret
and
mov
in
repnz
add
cmp
jbe
pop
leave
ret
push
mov
sub
mov
add
push
push
add
push
or
mov
sbb
mov
shrd
cmpl
movzbl
movl
mov
jmp
mov
mov
jne
push
push
push
pushl
push
pushl
call
orl
and
mov
mov
sbb
sub
negl
shr
cmpl
movl
mov
jmp
movzwl
jg
push
push
pushl
call
add
movzbl
adc
mov
adc
movzbl
sbb
xor
xor
xor
mov
sub
sub
mov
adc
mov
movzwl
or
mov
mov
movzbl
xor
xor
xor
mov
xor
mov
or
neg
mov
mov
sbb
shl
mov
sbb
shrd
sub
xor
adc
shr
xor
or
add
mov
jmp
jnp
add
mov
ficoms
push
add
jle
inc
adc
lea
adc
adc
cld
cmpsb
and
rclb
repz
xchg
in
xchg
push
lods
int
pop
imul
cwtl
rol
xchg
mov
iret
das
ds
mov
cmc
lret
cmpsl
mov
mov
xor
pop
and
ljmp
into
fs
jg
in
inc
jo
or
in
lahf
add
int
fnstcw
mov
ds
push
into
cmp
aas
rcrl
xchg
push
sub
movsb
and
add
cld
jo
les
sbb
inc
and
popa
insb
add
mov
cmpsb
je
imull
cmc
sbb
jp
dec
addr16
push
out
ret
mov
and
xchg
lcall
loope
mov
popa
xchg
in
js
sbb
pop
call
mov
fcomi
and
lds
sub
lods
insb
popf
cmc
outsb
fidivrl
xchg
pusha
cmp
fwait
mov
and
and
mov
aad
outsb
mov
push
movsb
push
testl
scas
mov
enter
sub
pop
xlat
lods
out
jno
pop
mov
js
xlat
sbb
outsl
arpl
push
add
and
jo
mov
jnp
fsubl
inc
or
mov
iret
aas
mov
das
dec
cmp
dec
jp
loope
fsts
cmp
xor
mov
mov
mov
out
jo
or
mov
jns
bound
ss
and
mov
loopne
sbb
jae
inc
repnz
jns
and
clc
in
cmp
lods
loopne
jmp
sbb
ret
xchg
ficoml
cmpsb
adc
jge
sti
pop
sarl
movsb
lds
pop
mov
dec
cli
cltd
push
and
push
mov
int3
xor
cmpl
pushf
inc
adc
fcomi
xlat
push
adc
out
fstp
inc
mov
mov
movups
sub
scas
push
xor
add
sbb
in
mov
sbb
mov
mov
in
mov
dec
pop
fisubrl
fwait
call
sbb
push
dec
mov
xor
jnp
adc
das
insl
repz
cmp
xchg
hlt
rcl
inc
repnz
lea
mov
mov
mov
jmp
roll
xor
sub
ss
inc
sub
mov
add
jb
inc
addr16
es
xchg
cmp
out
mov
in
mov
sub
icebp
cmpsl
add
xor
fimull
sti
insb
mov
ljmp
shlb
add
loope
add
xchg
mov
sub
les
loopne
adc
lea
adc
js
cld
ljmp
add
add
sahf
adc
mov
shr
lret
pop
roll
dec
push
aam
xor
xor
mov
cmpsl
ljmp
and
stc
jnp
test
push
scas
or
ficoml
mov
xchg
cli
lret
mov
popf
jns
call
out
aaa
mov
insb
and
jno
loope
in
mov
or
add
shlb
fwait
inc
jb
mov
inc
fwait
add
pop
loope
lcall
test
add
adc
std
jl
fdivr
popa
pop
pop
addr16
sub
sahf
cld
mov
pop
jne
pop
decl
mov
mov
or
int3
and
callw
jb
std
pusha
and
cmp
ljmp
mov
shlb
cli
lock
test
jb
mov
sub
mov
std
push
addr16
sub
jmp
inc
pop
mov
out
add
ret
cmp
ret
sbb
arpl
cmp
clc
xchg
add
fists
or
sbb
sbb
cmpb
xchg
and
cmpl
dec
pop
mov
loope
inc
loopne
mov
push
imul
mov
mov
movd
rcrl
pop
sub
ljmp
in
ret
jo
fistps
loopne
imul
xchg
ja
xchg
orb
jno
fstl
xchg
mov
sbb
push
xor
sbb
insb
jnp
pop
sub
push
loop
cmc
pop
and
fsubl
add
test
jns
or
inc
shlb
ret
repz
and
fwait
ljmp
jne
scas
popa
aam
int3
inc
xor
lods
cli
inc
cs
orl
iret
mov
mov
orb
out
add
cmp
shl
xor
jmp
vprotw
mov
push
dec
scas
lock
ljmp
cmp
mov
mov
arpl
movb
adc
cmpsb
icebp
mov
xchg
stc
in
cltd
std
je
sbb
aaa
stos
jns
sub
push
sub
in
hlt
int
dec
leave
iret
fsubrs
cmp
inc
push
fdivrl
xchg
ljmp
or
dec
hlt
mov
xchg
sahf
push
inc
fdivs
xchg
mov
in
sbb
in
push
jl
mov
mov
sub
xchg
cwtl
jns
stc
imul
xor
sub
jb
mov
repnz
outsl
cmp
lock
int
mov
cmpl
movl
not
mov
jmp
mov
jg
push
push
push
call
sbbl
adc
andl
mov
mov
xor
xor
or
mov
adc
adcl
neg
xor
or
mov
mov
sub
or
mov
mov
xor
or
mov
sub
sub
mov
xorl
mov
or
mov
xor
mov
movzwl
sub
mov
cmpl
mov
mov
mov
jmp
mov
jle
push
call
sub
and
subl
or
or
adc
mov
mov
cmpl
movzbl
mov
jmp
mov
jb
push
push
call
mov
xor
xor
sub
or
xorl
adc
sub
sbb
mov
shl
mov
sub
xor
or
xor
sbb
mov
xor
adcl
shld
shl
mov
mov
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
xor
xor
add
sbb
xor
xor
mov
cmpl
mov
mov
mov
mov
jmp
movl
movl
jg
push
call
movl
and
sub
subl
movl
mov
shld
movl
shl
cmp
movl
jne
movl
cmp
je
and
mov
xor
or
and
mov
push
movl
pop
or
xor
shl
mov
addl
xor
adcl
shr
addl
or
mov
or
mov
mov
mov
mov
cmpl
movzbl
mov
jmp
mov
mov
jl
pushl
push
pushl
push
call
mov
add
inc
mov
and
sub
mov
jmp
add
int3
sub
inc
les
pop
inc
adc
lea
adc
or
loopne
lahf
rol
mov
jns
and
jge
xchg
mov
out
scas
mov
sub
xor
enter
inc
adc
movsl
mov
imull
xchg
add
mov
mov
push
xchg
mov
leave
mov
dec
lcall
aad
mov
dec
add
mov
aas
xchg
jecxz
ffree
scas
push
das
hlt
ret
stc
lock
insl
scas
cs
adcb
push
fnsave
mov
or
cmp
jmp
dec
pop
push
or
jl
xor
or
dec
les
sub
xchg
or
jecxz
jne
adc
xchg
mov
aad
out
inc
pushf
lods
mov
lea
imul
xor
add
popa
push
imul
push
subps
adc
mov
ret
fldcw
mov
jge
dec
in
inc
sub
jecxz
and
pop
dec
in
pop
xor
push
inc
mov
lock
mov
fwait
je
jns
aam
adc
adc
cmp
push
jp
mov
cmp
shlb
pop
jp
fsts
mov
and
icebp
hlt
xchg
fstpt
jnp
sbb
or
pusha
jmp
das
inc
out
mov
jbe
popf
into
sbb
imul
mov
or
jl
jg
mov
xchg
imulb
imul
shll
mov
cwtl
fcompl
nop
xor
fcmovne
repz
mov
add
inc
adc
xchg
sbb
push
dec
jmp
jb
sub
enter
loopne
fwait
out
icebp
pop
adc
mov
cmp
ret
sbb
mov
mov
add
pop
cmpsb
in
jg
jne
jns
movsb
inc
or
and
lods
mov
sbb
idivl
xchg
jbe
pop
mov
imul
pop
add
movsb
inc
aas
enter
sbb
or
not
xor
mov
or
rcl
dec
xor
lods
dec
je
andb
pop
cmp
out
cmc
adc
pop
adc
iret
add
in
xor
xlat
xlat
mov
movb
xlat
wbinvd
mov
or
push
push
mov
jecxz
jp
mov
pop
inc
loop
popf
je
adc
outsl
lret
cltd
subb
cwtl
jnp
or
arpl
push
cli
cmp
iret
das
fsubs
pop
sub
in
dec
shll
mov
out
mov
in
mov
sbb
lock
cmc
lock
shrl
clc
insb
ss
addr16
push
pop
sub
mov
subl
add
mov
cmpl
movzwl
movzbl
mov
mov
jmp
movl
movl
ja
pushl
call
or
and
or
xor
mov
adc
adc
mov
xor
mov
lea
andl
mov
addl
mov
xor
mov
xor
xorl
xor
addl
shr
subl
shl
or
mov
movl
add
mov
mov
xor
xor
andl
shr
addl
shl
sbbl
or
subl
push
lea
push
subl
lea
push
call
cmpl
mov
mov
jmp
mov
movzwl
ja
pushl
push
push
call
adc
movzbl
sub
and
mov
xor
adc
or
sub
xor
xor
mov
and
mov
cmpl
movl
mov
mov
jmp
movl
movl
jae
push
pushl
pushl
pushl
call
sbb
sub
adcl
or
sbb
xor
add
mov
sub
and
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
jmp
mov
pop
cmp
shlb
cmpsl
xchg
mov
adc
fstpt
aam
mov
xchg
mov
dec
jl
jmp
adc
data16
xchg
mov
jns
mov
push
daa
cmp
lret
and
cltd
xchg
or
and
mov
rep
fisubl
es
ljmp
stc
add
xchg
loope
outsb
stos
lret
inc
cmp
lds
inc
sub
out
les
dec
mov
das
lcall
insl
out
inc
fldenv
cld
push
cmp
or
adc
scas
add
inc
fs
jg
xchg
adc
inc
xor
jae
or
adc
and
jge
dec
les
sbb
outsb
cmp
pop
enter
jge
stc
jae
fldt
test
decb
stos
loop
jecxz
push
enter
xchg
aas
xor
aas
pop
mov
popa
lds
cwtl
jne
dec
xchg
lret
sbb
ret
icebp
sub
fwait
popf
std
daa
cmpsl
inc
dec
mov
dec
xchg
cltd
pop
and
xchg
push
sbb
xchg
pop
sub
dec
jmp
shlb
int3
int3
mov
dec
pop
negl
mov
sti
aam
in
push
fidivrs
negl
loopne
sub
lods
pop
iret
jge
xchg
mov
push
cld
dec
lods
mov
cmp
and
icebp
xchg
push
inc
push
pusha
dec
cmp
aas
fs
pop
pop
or
hlt
adc
icebp
repnz
call
mov
out
inc
bound
cmpsl
sub
outsl
cmp
pop
fistl
mov
cmp
test
adcb
mov
sub
and
and
mov
cmpsb
popl
dec
sbb
fcomip
jmp
add
push
xlat
dec
jle
sbb
mov
dec
cmp
in
fdivl
into
and
ret
cmp
scas
cld
push
loopne
loop
fldt
arpl
test
ss
cmp
adc
imull
fstpt
push
lds
out
fs
pmulhuw
insl
jnp
add
dec
sub
movsb
push
sbb
repnz
shll
jb
pop
stc
fsubs
adc
dec
jae
daa
sbb
js
lahf
aaa
jmp
pop
jp
insl
mov
loope
mov
cmp
push
dec
mov
arpl
pop
repz
mov
cmc
ja
xchg
push
mov
jmp
push
jo
pop
mov
or
xor
inc
xchg
or
cmp
imul
cmp
dec
lcall
mov
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
jmp
xchg
sbb
sbb
popf
cmpb
movlps
call
jae
fdivrs
push
test
lahf
aaa
fstps
sub
adc
mov
cmp
jno
loopne
push
xchg
ds
loop
and
hlt
xor
sbb
cli
push
fstpt
xchg
push
repz
and
setg
xchg
sub
dec
scas
aam
mov
sub
mov
mov
stos
mov
repnz
xchg
and
clc
lcall
lea
out
cmpsl
data16
je
sub
es
cltd
jnp
arpl
addr16
call
xchg
adc
out
sub
and
mov
pop
inc
ss
fadd
and
inc
mov
fstps
loop
jbe
dec
or
rolb
adc
push
int
xchg
dec
repz
push
rorb
loop
mov
pop
iretw
or
cmpsl
and
pop
pushf
fsubrl
fcoml
shll
cmp
fsub
xor
mov
cmpsb
cli
mov
lahf
cmp
push
in
xchg
bound
xor
iret
ss
fidivrl
gs
rol
pushf
xchg
pop
and
scas
cmpsl
pushf
aad
xchg
push
and
mov
push
xlat
xor
movsb
mov
lcall
in
or
rol
or
cvttps2pi
push
ljmp
call
imul
mov
call
outsl
and
cmp
std
pop
shlb
or
push
popa
jmp
in
loopne
jo
add
out
subb
mov
popf
js
fldenv
xchg
fwait
sbb
fnstcw
lret
jbe
je
sarb
dec
mov
fwait
adc
jo
scas
jg
add
ja
push
mov
call
mov
fnstsw
repz
inc
sub
xchg
adc
and
or
xor
mov
fmull
xorl
addr16
sti
insl
jb
test
int3
hlt
mov
lock
xchg
sub
cmp
loope
cltd
ds
int3
pop
imul
into
or
ficoms
xchg
movsl
repz
mov
adc
dec
dec
pop
into
ret
or
in
into
adc
jmp
test
test
insl
stos
enter
fs
mov
fnstenv
mov
sub
mov
in
les
ret
or
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
jmp
mov
add
sub
jle
sub
cwtl
test
mov
movlps
sbb
xor
jb
int
mov
or
inc
sbb
jb
icebp
inc
dec
clc
push
adc
and
insl
loop
jmp
lods
jmp
daa
seto
cmc
out
jne
movl
cmp
test
mov
icebp
std
scas
pop
sub
sub
xchg
jecxz
arpl
add
xor
sub
push
xor
int
cmc
das
dec
repnz
js
xor
xchg
fucomi
inc
lret
mov
arpl
jmp
arpl
jg
shrl
push
adc
ds
imul
mov
xchg
ficompl
inc
cmc
icebp
inc
xchg
sbb
adc
lahf
xchg
je
xchg
hlt
and
push
fstpt
setae
imul
ljmp
mov
inc
xor
sub
stos
fs
flds
int
cmp
in
mov
int
add
aad
mov
cltd
pop
mov
movb
dec
fs
sahf
mov
mov
cmp
push
lcall
and
jp
aas
std
pop
scas
test
and
out
fidivrl
push
mov
mov
push
cld
mov
test
es
div
sti
fs
and
dec
push
test
jmp
xlat
cs
xor
push
sbb
popf
mov
out
and
leave
leave
sub
mov
lcall
jae
in
test
jne
jmp
mov
cmp
xor
addl
shld
cmp
cmc
ss
std
jno
popa
jge
call
int
or
lock
pop
push
ret
enter
aaa
rclb
inc
fldcw
popa
push
popa
jge
movsl
dec
push
fdiv
lea
sbb
mov
mov
cmp
cs
sbb
push
or
sbb
mov
rcll
dec
scas
mov
xchg
push
cmp
sub
addr16
mov
sbb
adc
push
mov
xor
cld
pop
jno
xchg
sub
in
mov
js
call
hlt
leave
pop
push
sbb
ss
scas
shlb
orl
gs
ret
mov
push
push
pop
pop
xchg
jp
stos
ja
inc
pushf
aaa
jle
cmpsl
in
xor
mov
push
sarb
push
jl
cmpsl
fucomip
push
or
lock
pop
je
bound
insl
push
or
shll
fbld
push
stc
xor
out
clc
dec
mov
mov
xor
xor
or
push
add
jmp
and
lods
and
js
dec
fdivrs
lea
adc
xchg
adc
ljmp
pushf
or
cmp
testl
mov
mov
push
ret
repnz
stos
xchg
data16
jb
ss
jl
dec
stos
repnz
std
lods
pop
cmp
xchg
out
dec
cmp
icebp
jo
pop
rcll
xchg
xchg
mov
push
add
adc
popa
dec
scas
pop
int3
inc
dec
loop
xchg
clc
jecxz
dec
in
insb
js
repz
jg
lock
faddl
dec
or
pop
or
or
sub
fnsave
xor
daa
leave
pop
call
sbb
lea
add
inc
fiaddl
icebp
ficomps
pusha
ret
rorl
inc
push
xchg
mov
mov
jbe
lcall
fwait
mov
xor
cmpsb
xlat
jp
pop
pop
xor
add
test
shll
sbb
adc
lock
int
mov
jmp
pop
das
mov
dec
fs
fidivs
movsb
mov
into
addr16
and
mov
dec
loope
imul
add
xchg
xor
jg
imul
cmc
orb
xlat
aas
pop
das
les
adc
je
cmpsb
in
add
aas
or
es
sarb
sbb
push
add
in
insb
incl
jae
out
pop
xchg
in
fs
xchg
arpl
mov
cmp
xchg
add
loope
mov
test
loopne
and
in
inc
cltd
pop
fs
lods
movsb
loop
cltd
push
mov
xlat
fisubrl
mov
push
jg
push
jg
and
push
loopne
push
jae
xchg
xor
pop
push
mov
xchg
jns
mov
mov
pushf
ret
mov
pop
fistpll
lret
pop
mov
mov
mov
in
mov
jp
test
jecxz,pn
fisttpll
jle
rorl
scas
ss
lods
push
les
cmp
stos
add
mov
scas
adc
dec
popf
enter
lret
xor
push
jnp
pusha
inc
data16
popa
lock
repz
lahf
icebp
pop
push
cltd
mov
and
push
sti
pop
add
movsl
loopne
mov
cmp
jge
xchg
repz
sbb
movsl
scas
jbe
sub
insl
and
or
test
jnp
idiv
or
xor
test
push
jge
xlat
xor
or
in
sbb
pop
push
xchg
xor
movsb
ss
xchg
jle
jno
xor
mov
scas
out
inc
subb
xchg
stos
dec
push
lea
push
shl
call
jmp
outsl
xchg
pop
test
add
mov
movlps
or
and
mov
push
into
out
mov
jge
sub
push
sub
push
sti
mov
jle
pushf
or
jg
push
shrl
cmp
popa
and
mov
jae
call
js
ret
jno
pop
xor
mov
cmc
jmp
outsb
int3
xchg
data16
push
mov
aad
push
and
and
repz
loop
inc
push
jns
cmp
sub
push
data16
sarl
xchg
stos
mov
movsb
divb
testb
das
sbb
sub
push
aam
ljmp
mov
dec
mov
fcoms
xor
leave
xor
aas
jne
fbstp
push
fistpll
xchg
std
pop
popf
or
jl
jno
outsl
scas
imul
sti
mov
cmp
push
dec
mov
clc
call
inc
sbb
mov
lret
frstor
dec
cmp
add
lret
dec
push
xlat
cmpsl
push
arpl
mov
cli
aam
aam
jb
lahf
mov
subl
xchg
pushw
outsb
add
mov
sbb
mov
enter
andl
xchg
and
push
cltd
inc
jp
dec
cmp
pop
andb
cli
cmp
hlt
push
leave
aad
adcl
call
sub
test
test
lcall
adc
mov
push
jecxz
bound
inc
sub
jo
pop
ljmp
cmp
and
mov
jmp
lret
mov
addr16
sbb
pop
cmp
sbb
xorb
sub
outsb
jo
in
mov
shlb
sub
stos
js
dec
ret
push
jnp
outsb
daa
and
lods
dec
data16
test
test
es
pop
in
shr
cmp
push
mov
bound
aaa
push
subl
sahf
fwait
mov
dec
pop
or
cwtl
int3
mov
mov
push
ds
mov
stos
push
daa
inc
sub
std
xchg
int3
test
aam
or
xchg
push
mov
or
in
addr16
inc
stc
subl
inc
xor
mov
ret
cltd
mov
xchg
je
xor
daa
mov
ret
test
sub
inc
mov
fistpl
mov
mov
insl
clc
mov
xchg
push
mov
repz
inc
out
imul
push
xlat
nop
repz
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
jmp
jge
jbe
jne
jge
das
adc
loopne
push
sbb
adc
sbb
sbb
hlt
inc
cs
sub
outsb
pop
cmpsl
es
and
and
push
mov
push
pop
icebp
sub
cmp
pop
mov
mov
push
movsl
imul
sub
inc
lret
push
inc
insl
mov
stos
ret
add
inc
fdivrs
jl
jb
mov
inc
mov
adc
mov
ret
sbb
aaa
std
ret
dec
adc
jge
xchg
int
int3
insb
in
cmp
test
jge
add
cli
push
xor
or
inc
movsb
xchg
mov
mov
out
push
push
mov
ret
mov
add
mov
adc
cwtl
std
push
dec
sub
jmp
push
cld
sahf
mov
test
inc
fstp
data16
fs
je
add
sub
sub
cmpsb
adc
pusha
adc
sahf
enter
add
push
lods
mov
jns
xchg
xor
jg
iret
ja
shl
mov
popa
lret
lods
cwtl
xor
or
pop
dec
xchg
push
in
push
insb
out
dec
test
or
dec
gs
mov
xor
xchg
or
sbb
aas
into
enter
scas
out
pusha
pusha
icebp
or
adc
clc
test
std
jge
sub
jo
or
or
lea
mov
or
add
mov
stc
xor
adc
xchg
mov
pop
inc
adc
bnd
ljmp
int3
adcb
clc
add
jecxz
pop
sahf
in
adc
frstor
aas
mov
insb
xlat
add
fst
sbb
lds
adc
xchg
and
push
icebp
das
adc
stos
sub
push
mov
fdivrs
adc
push
outsl
out
movsl
incb
mov
pop
add
inc
jp
dec
cbtw
inc
pop
scas
fwait
add
imul
xor
nop
jg
push
mov
add
pusha
lcall
pop
in
lea
or
push
movsb
sub
jns
sti
cs
push
scas
jae
mov
push
popa
sbb
pop
xchg
movsb
mov
push
pop
div
jmp
mov
mov
inc
cmpsl
jae
push
cld
inc
xchg
mov
into
enter
xor
mov
jae
std
push
dec
aaa
or
fildll
into
and
pop
loop
cmp
fdivrl
fdivr
outsb
pop
sub
jae
in
adcb
inc
pop
repz
xor
notl
push
es
xor
pop
inc
fdivrl
imul
fidivs
scas
pop
and
and
std
cmp
sbb
cs
add
dec
fnstsw
lcall
push
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
adcl
or
mov
mov
jne
cmpl
movl
movl
movl
jmp
mov
mov
jne
push
pushl
pushl
push
call
adcl
sbbl
add
orl
xorl
subl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
fs
push
stos
sbb
dec
loop
mov
dec
mov
mov
sbb
arpl
cmpsb
addr16
call
pop
int
lahf
ja
dec
icebp
faddl
xchg
lds
fsubs
fstpl
pop
mov
jb
and
je
mov
dec
addr16
loopne
rcl
sub
cmpsl
add
pop
sub
clc
xchg
shlb
xchg
sub
lss
and
xchg
sub
stos
negl
loopne
insl
test
sti
add
mov
ficompl
mov
movsb
in
es
jg
std
jbe
push
mov
fistpll
sbbb
jns
sbb
cld
dec
repnz
push
jl
mov
or
xor
push
pop
sbb
ret
inc
cmp
mov
test
lods
or
sahf
or
addr16
xchg
stos
inc
addb
sbb
cmp
inc
std
jl
pop
push
push
sarb
pop
loop
push
sahf
cmp
out
mov
mov
dec
rcrl
push
mov
jge
and
mov
lea
add
js
xor
lds
push
arpl
mov
sbb
mov
push
inc
mov
out
jecxz
adcl
stos
repnz
daa
add
jl
inc
xchg
loope
lret
imull
mov
cmpl
or
push
sbb
dec
fxam
push
pusha
lea
dec
mov
mov
cld
ret
aaa
mov
scas
lahf
daa
mov
sahf
out
imul
pusha
xchg
or
dec
pop
add
push
das
test
dec
or
in
iret
jecxz
lahf
sbb
adc
dec
jmp
mov
xchg
inc
fs
ret
ret
mov
pusha
orl
add
ffreep
sbb
daa
lcall
push
mov
or
aaa
int3
pop
es
sub
ja
pushf
iret
stos
dec
ds
mov
sub
push
add
add
stos
mov
inc
cli
test
xor
push
loope
push
or
rcrl
xchg
or
lcall
bound
jge
int
sbb
aaa
fldlg2
push
xor
fisubl
test
mov
and
lret
outsb
mov
mov
aam
rcl
mov
mov
xchg
std
sub
lahf
sahf
sub
jns
mov
push
sbb
mov
xlat
aas
xchg
in
in
stos
adc
fildl
addl
repz
cmp
mov
mov
sub
lea
lret
ss
sub
xchg
out
dec
scas
test
sub
imull
arpl
bound
xlat
or
push
leave
js
lahf
cs
scas
pop
pop
or
or
repz
jg
lret
adc
inc
dec
sbb
out
fdivl
and
mov
rolb
pop
jmp
imul
push
pop
scas
ret
pop
push
or
lea
pop
iret
jmp
popf
push
jp
je
cmp
adc
push
xchg
push
aas
gs
into
sbb
movsl
xchg
adc
cli
sbb
cmp
ss
mov
inc
aas
mov
xchg
outsb
jecxz
inc
and
xchg
orl
sub
bound
jo
add
outsb
mov
pop
xchg
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
jmp
imul
scas
std
dec
and
adc
stos
aaa
unpckhps
mov
lock
sbb
cmp
push
adc
inc
cmp
cmp
push
cmp
xor
and
jnp
mov
jl
dec
cmp
push
test
push
loope
data16
loop
das
mov
fcmovu
push
imul
xchg
dec
cmc
and
jge
mov
sub
fisubl
jns
imul
xchg
xor
dec
xchg
xlat
stc
in
sub
jmp
push
cmp
cmpsl
das
mov
inc
push
popf
jp
dec
fnstsw
pop
mov
xchg
dec
fdivs
mov
shrl
lock
xchg
popf
clc
test
sub
rcl
data16
mov
xchg
sahf
iret
jae
fldln2
test
jmp
push
push
sub
fiadds
rolb
lods
inc
je
and
inc
adc
add
into
es
cwtl
std
adc
inc
repnz
popa
mov
das
ret
ret
or
lock
pop
test
xchg
leave
pop
outsl
adc
sbb
ljmp
mov
push
mov
push
mov
lret
daa
lods
pop
outsb
ljmp
add
sub
adc
inc
jb
inc
clc
push
rcl
lock
lahf
xchg
sbbb
les
dec
dec
iret
and
gs
mov
inc
jno
push
cmp
mov
out
fists
xchg
in
orl
mov
mov
test
gs
xchg
lock
pop
idivl
aas
mov
cli
movsb
adc
or
pop
lret
jp
daa
fisttpl
pop
sbb
iret
jp
es
daa
push
push
adc
xchg
xchg
adc
aad
sbb
lret
jnp
push
push
push
xor
out
pop
dec
inc
fsubs
sbb
mov
movsl
cmpsb
testl
add
mov
push
jne
jae
sub
jae
or
andl
fnstenv
arpl
mov
mov
sbb
mov
inc
aaa
js
cmp
scas
add
mov
xchg
jb
add
push
movsl
or
jno
xor
inc
mov
or
in
push
push
lahf
pop
sarl
scas
adc
lret
mov
mov
inc
repz
cmp
cmp
sbb
nop
popf
fistl
mov
lcall
popa
mov
pop
dec
mov
lods
mov
lock
enter
idiv
inc
dec
lock
sarl
cs
lret
sti
add
dec
dec
pop
cmp
out
push
cmc
mov
or
imul
out
arpl
mov
push
je
lods
movl
in
push
leave
test
or
in
mov
outsb
mov
jl
mov
xor
mov
outsb
idiv
mov
adc
cmpsl
lds
insb
cmp
add
push
xchg
js
addr16
bound
sub
mov
ret
adc
sub
jne
add
rcrb
outsb
outsl
push
aas
cmp
addl
pop
pop
rcll
decl
pop
add
int
test
das
stos
mov
or
mov
ret
rorb
ret
mov
ret
dec
xorl
dec
cmp
cmp
js
mov
and
in
lods
xor
or
leave
jnp
add
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
jmp
lret
lahf
push
pop
sbb
leave
pop
jmp
call
mov
mov
push
ljmp
mov
mov
dec
mov
xchg
mov
std
pop
enter
add
nop
out
rcrb
sbb
sub
or
push
dec
push
xchg
jbe
loopne
push
mov
aas
xor
fldenv
call
or
mov
xchg
dec
scas
inc
jle
jnp
dec
mov
pop
xlat
imul
jg
add
aad
dec
mov
jmp
push
in
inc
popa
int
push
outsb
insb
sub
jmp
lock
gs
jl
movsl
stc
lcall
add
out
pop
or
in
call
clc
jnp
mov
stos
or
ss
xchg
mov
sahf
std
imul
xor
and
jg
jmp
push
movsb
push
xchg
push
repnz
dec
push
jmp
inc
xchg
dec
repz
arpl
adc
sti
in
xchg
scas
xchg
stos
sbb
js
pusha
das
fwait
add
push
push
cmp
pop
jbe
ja
jo
icebp
aas
scas
es
and
and
sub
jnp
pop
mov
sub
fimuls
cmc
call
jl
add
dec
call
stos
sub
aas
mov
jnp
int3
push
mov
push
mov
fildl
jl
mov
pop
outsl
mov
arpl
cmpsl
push
inc
in
xchg
jns
loopne
mov
push
xchg
imul
push
test
rorl
sub
jno
ljmp
je
xchg
dec
gs
mov
and
outsl
iret
vmovdqa
fldl
and
push
in
sbb
mov
ret
into
mov
xor
cli
pushf
mov
cwtl
mov
mov
mov
cmpsl
enter
mov
gs
mov
cmp
cli
leave
stos
xor
xchg
jg
cwtl
ret
stos
mov
popf
push
pusha
and
int
shlb
popf
push
pop
int3
mov
xchg
aad
mov
mov
mov
movsl
pop
xor
lret
push
or
shlb
scas
fwait
jnp
andl
test
adc
pop
out
xor
dec
pushf
sbb
push
rol
imul
in
jl
in
ret
inc
cli
sub
mov
adc
jge
negb
push
mov
fistpll
mov
stc
ljmp
popf
mov
test
and
inc
rorl
loopne
dec
jnp
adc
lea
mov
arpl
mov
movaps
lods
sub
lock
lret
dec
mov
sbb
out
cmpsl
in
add
out
fidivrl
mov
stos
and
jmp
dec
push
sub
pop
xor
pop
mov
pop
outsb
fisttpl
xor
test
add
xor
sahf
cld
data16
mov
add
fsubrs
fbld
arpl
shl
push
xor
lea
xor
lahf
nop
add
enter
aas
hlt
clc
scas
mov
inc
mov
sbb
out
in
sub
push
lods
rcrb
and
lods
hlt
mov
test
stc
scas
mov
inc
rcrb
sbb
cmp
popa
xor
jmp
sub
cmpsl
mov
or
sub
sarl
jge
push
push
adc
inc
mov
test
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
call
mov
movzbl
push
call
test
jne
xor
jmp
adc
mov
cmpl
movl
movl
movl
jmp
movzbl
jbe
pushl
call
orl
addl
adc
sbbl
andl
mov
xor
mov
jmp
xor
push
or
cli
sbb
pop
in
push
call
adc
and
stos
pop
push
popl
scas
adc
cmp
mov
cmp
in
dec
sahf
inc
orl
sbb
imul
push
push
mov
shll
xchg
mov
int3
dec
push
or
mov
in
lea
cs
test
mov
push
xlat
enter
adc
push
lcall
shr
rcl
sarl
imul
xchg
jno
fisubrs
pop
lods
cmc
mov
sub
or
and
mov
sub
jno
or
int
pop
out
int3
shll
jp
nop
mov
jns
movsb
or
push
stc
call
mov
sarb
inc
fwait
aaa
or
jne
lods
test
sub
ljmp
xchg
adc
add
or
in
dec
jne
xchg
jo
adc
bound
push
shr
scas
jle
jo
cld
adc
mov
data16
cmpsb
mov
out
cmc
mov
lds
fucomp
shl
sbb
and
pop
mov
dec
out
push
out
mov
push
mov
subl
test
dec
mov
pop
call
fiaddl
sbb
loop
std
inc
out
enter
insl
int
push
push
adc
outsl
inc
mov
add
pop
mov
das
jle
sar
shrb
jl
idivb
push
adc
jmp
loopne
ret
sbb
adc
loopne
and
add
inc
std
push
inc
add
xor
cwtl
push
pop
fs
mov
cmp
cmc
mov
aas
hlt
fucomi
mov
dec
inc
push
push
and
sbb
leave
and
or
sub
push
pop
bswap
inc
stc
inc
pop
outsl
dec
lea
ljmp
cmpsl
lds
lcall
mov
and
gs
pusha
pop
scas
and
enter
mov
stos
fld1
inc
out
movsl
insl
dec
aaa
int
outsb
push
int3
in
inc
adc
bound
lea
fsincos
jl
cmc
push
cmp
add
or
in
stc
mov
aaa
stos
jl
aas
add
test
fcoml
test
insb
inc
dec
xchg
fdivrl
mov
and
xor
xchg
mov
cmpsb
and
dec
out
fmull
and
ss
push
fucom
inc
push
icebp
pop
pop
pushf
mov
cmp
xchg
xchg
lcall
add
mov
cmpl
movl
movl
jmp
movl
mov
je
push
call
addl
subl
and
andl
movl
orl
movl
adcl
push
mov
add
pop
mov
cmpl
movl
movl
movl
movl
jmp
not
movl
jl
pushl
push
push
push
push
push
push
push
call
subl
subl
addl
adcl
andl
neg
mov
xorl
mov
movl
mov
movl
mov
andl
movzwl
or
cltd
movzwl
xorl
idiv
cmpl
mov
movl
mov
mov
jmp
movl
movl
jne
pushl
push
push
call
xor
xor
mov
and
or
mov
mov
sbb
movzwl
sub
sbbl
movzbl
sub
mov
sub
mov
movzwl
addl
or
mov
or
mov
cmpl
movl
mov
mov
mov
jmp
movl
movl
jae
push
pushl
push
pushl
call
sub
sub
adcl
mov
or
addl
mov
mov
mov
movl
mov
mov
adc
mov
sbbl
sub
sbbl
mov
andl
xor
sbb
jmp
mov
sbb
push
test
mov
xchg
movlps
xor
stos
movsl
xor
mov
xchg
sub
in
xor
adc
stc
into
lods
fwait
mov
xchg
out
and
test
push
outsl
sub
js
mov
add
stos
push
cmp
test
and
shr
cmp
and
dec
xchg
sbb
adc
sub
jnp
pop
sbb
mov
call
into
and
scas
test
mov
dec
sub
adc
test
adc
xchg
mov
or
adc
insb
fdivrl
sbb
adc
cmp
bnd
mov
push
imul
and
repnz
push
js
pushf
out
mov
xchg
cmp
cmp
jp
pushl
sub
addr16
sbb
fxch
and
and
fiaddl
cld
fnstcw
add
ljmp
mov
repnz
jle
leave
push
in
xorl
popf
scas
add
push
in
cmp
nop
inc
mov
leave
or
enter
dec
pop
mov
and
lahf
pusha
mov
ret
push
jge
les
sub
cmp
xchg
push
pop
sbb
dec
inc
lock
daa
add
sti
inc
lds
int3
or
enter
and
pusha
dec
xlat
sbb
rcr
or
push
mov
dec
jae
mov
icebp
sti
xchg
test
clc
aas
ret
enter
and
jmp
sbb
dec
rcrb
test
and
fcmovb
call
test
sub
mov
adc
divb
pop
out
aas
into
test
mov
sub
push
adc
inc
and
rorl
dec
out
sbb
addb
fadds
out
adcb
mov
push
and
jo
dec
jle
sbb
push
sahf
mov
jae
inc
test
orl
iret
inc
nop
pop
add
stc
adc
add
fistl
jmp
inc
rorb
jmp
jge
mov
mov
xchg
imul
movsb
xchg
int
movq
and
aad
sub
mov
cmpsl
jg
scas
add
jle
pushf
cmp
pop
ljmp
test
cmp
adc
fistps
mov
push
stos
fucompp
repnz
pop
divb
arpl
stos
and
fnsave
mov
insb
out
mov
into
dec
popa
test
out
sub
dec
or
jbe
data16
arpl
int
cli
shl
push
rcrb
sbb
add
rol
jne
inc
add
add
mov
movl
cmp
movl
jb
sbb
movl
movl
movl
cmpl
movzbl
mov
jmp
movl
mov
jbe
pushl
call
sbb
mov
sub
mov
and
inc
movl
and
mov
cmpl
mov
movl
movl
mov
jmp
mov
jb
pushl
pushl
push
push
call
andl
sbbl
mov
sbb
movzbl
or
xor
xor
xor
xor
orl
add
mov
orl
xor
sbbl
div
mov
add
sbbl
and
pushl
pushl
call
movl
movl
mov
adc
movl
cmpl
movl
mov
mov
jmp
movl
movl
je
push
push
call
adc
xor
xor
mov
sbb
xorl
or
mov
xorl
mov
adcl
and
addl
or
mov
subl
and
xor
adcl
pushl
pushl
addl
call
not
pushl
dec
movl
movl
xor
movl
subl
movl
or
movl
cmpl
mov
mov
not
mov
jmp
movl
mov
jl
pushl
push
push
push
push
call
xor
and
sbb
adcl
movzwl
or
movl
movl
xor
movl
mov
dec
mov
andl
sub
sbb
mov
or
orl
and
xor
jmp
or
ja
mov
jle
idivl
stc
adc
adc
jns
jo
lea
test
imul
jg
mov
loope
aas
mov
jns
inc
mov
jno
sbb
adc
daa
out
dec
xlat
imul
xor
adc
shlb
xlat
std
dec
and
or
cmc
mov
pop
lret
shl
jl
mov
push
sarb
mov
mov
cmp
or
sub
ljmp
ret
loope
and
sbb
aaa
jne
pushf
out
shrb
inc
lock
sti
in
psrlw
shll
dec
ret
lahf
push
lret
daa
pop
sbb
mov
aam
mov
sub
icebp
js
add
push
sbb
jne
mov
push
sub
sbb
sbb
adc
or
imul
push
ret
gs
add
pop
cmpsb
int3
sub
xchg
imul
mov
cmp
pop
sbb
or
stos
xchg
sbb
dec
insb
leave
imul
mov
fstpl
dec
fsts
push
mov
sub
lock
mov
in
enter
adc
xchg
rcrl
lret
adc
mov
dec
test
test
or
mov
fwait
mov
popf
ss
outsl
arpl
mov
xor
pop
jbe
imul
jge
inc
pop
cli
add
imul
insb
mov
push
push
ja
insl
push
cmpsl
gs
mov
loopne
in
fwait
pop
stos
jge
mov
adc
nop
roll
mov
adc
cld
ret
adc
or
clc
or
sbb
mov
sbb
sti
jmp
jb
das
mov
jmp
xlat
repz
pop
push
xor
push
lret
lock
jne
js
or
pop
test
push
mov
push
jp
movsl
insl
mov
inc
out
inc
cs
xor
cmp
cmp
in
xor
lea
cltd
stos
adc
xor
xchg
push
lret
mov
ja
mov
shl
xchg
xchg
inc
sbb
dec
sbb
movsb
stos
jne
es
inc
mov
and
lds
insb
sbb
sbb
rcrb
inc
dec
frstor
ud2
inc
cmpsb
xchg
xlat
fists
xchg
ret
fsts
push
dec
xchg
mov
scas
pop
mov
cli
and
scas
xor
inc
or
cmpsb
lret
decl
mov
sahf
loop
mov
push
sub
mov
les
scas
xor
ljmp
daa
repnz
addl
sub
movl
pushl
xor
mov
mov
andl
add
xorl
and
cmpl
mov
movl
jmp
movl
je
call
or
or
not
or
mov
sub
mov
xor
and
pushl
sub
mov
mov
andl
imul
xor
or
mov
movl
sub
pushl
sbbl
call
adcl
dec
movl
jne
movl
cmpl
mov
movl
mov
mov
jmp
movl
movl
je
pushl
push
call
or
xor
mov
and
mov
sbb
mov
add
movl
mov
mov
movl
mov
xorl
call
lea
mov
cmpl
movzwl
mov
mov
movzbl
jmp
movl
not
jb
call
and
xor
or
sbb
neg
orl
mov
mov
sub
and
neg
lea
mov
mov
mov
sub
mov
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
call
add
xor
neg
xor
add
mov
adc
xor
xor
xor
add
sub
sub
xor
xor
mov
sub
xor
sub
cmpl
mov
mov
jmp
movzwl
movl
jbe
push
push
call
sbb
sub
mov
mov
add
adc
addl
xorl
xor
sbb
xor
add
shl
shr
or
and
mov
dec
mov
orl
mov
mov
sub
mov
xor
mov
mov
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
adc
sbb
sub
adc
movl
mov
adc
mov
mov
xor
orl
xor
or
and
mov
addl
push
xorl
pushl
addl
lea
adcl
push
subl
shl
call
addl
lea
andl
push
mov
subl
mov
lea
push
andl
mov
movl
lea
sbbl
mov
xorl
mov
mov
adcl
push
call
orl
push
sbbl
push
pushl
sbbl
call
and
mov
xor
mov
inc
mov
mov
add
shr
cmpl
not
movl
movl
movl
jmp
movl
jg
push
call
inc
sbb
adc
add
sbb
cmpl
mov
mov
jmp
mov
ja
push
call
and
adc
sbb
sbb
mov
xor
add
sub
or
shl
cmpl
mov
mov
mov
mov
jmp
movl
jne
push
call
add
mov
sbb
adc
sbbl
sbbl
adcl
or
mov
cmpl
mov
movl
movl
jmp
movl
jle
pushl
push
pushl
pushl
pushl
call
adc
xor
xor
add
xor
or
sub
xor
mov
sub
xor
add
adc
and
or
xor
mov
sub
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
jmp
incb
dec
dec
cmp
or
sbb
js
out
adc
adc
jle
lret
adc
mov
push
in
je
orb
xchg
loope
rol
ret
jae
data16
xchg
xor
sub
add
lcall
call
cwtl
xor
nop
add
mov
push
push
push
pop
xchg
repnz
int3
cld
mov
dec
inc
mov
sub
aas
dec
test
insl
sbb
notl
mov
push
aam
xchg
out
mov
mov
iret
inc
fnstenv
cmpsl
rcr
pop
mov
data16
mov
movsb
mov
dec
add
in
xor
mov
je
jno
cmp
mov
dec
sub
xor
jg
or
out
sub
mov
dec
cmp
mov
or
lock
cmp
popa
in
sbb
push
pop
mov
arpl
rorb
add
mov
nop
call
mov
push
aam
cld
ret
push
sbb
dec
add
push
dec
out
xor
pushf
xor
jle
imul
and
pop
sbb
and
lcall
push
and
push
add
hlt
lock
stos
ljmp
out
or
xorb
test
adc
adc
test
fbstp
xchg
inc
outsb
sub
out
cmp
nop
inc
dec
mov
mov
mov
mov
inc
and
fistl
pusha
les
inc
imul
jno
and
ficoml
cmp
lcall
xchg
or
push
es
into
push
pop
loopne
add
mov
icebp
lds
xchg
push
lds
hlt
xchg
and
mov
jp
loope
pushf
lcall
data16
addl
out
dec
lea
mov
std
or
push
xchg
cmp
aad
out
cld
int3
adc
lret
pop
das
adc
or
xor
imul
aad
inc
or
fidivs
jns
jle
repz
mov
fpatan
sub
mov
in
stc
fs
bound
cmc
or
sarl
pop
xchg
andl
adc
fwait
sub
xchg
outsb
push
adc
cmp
leave
xlat
jo
mov
push
loope
jle
jb
out
lret
push
in
cltd
jnp
xchg
lret
xor
push
aam
lcall
add
xor
mov
pop
xor
movsl
gs
cmp
lods
pop
roll
les
imul
fsubs
push
daa
and
or
adc
inc
mov
movsl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
jmp
ss
adc
sub
xchg
mov
lret
sub
adc
inc
mov
cltd
shrb
inc
ret
enter
test
cltd
jbe
ja
jbe
cmp
sub
shll
and
jp
jp
mov
mov
scas
dec
mov
nop
sarb
push
mov
sub
mov
sub
loop
jp
out
push
xchg
jb
fldl
cmc
jno
movsl
adc
mov
add
add
lds
orl
movsb
movsb
lret
loope
and
jge
inc
loop
add
inc
push
hlt
in
jecxz
pop
sar
xor
popf
fists
sbb
jmp
mull
pop
insb
mov
jecxz
xor
int3
push
int3
cmp
lea
push
ss
jmp
sahf
popf
xor
popa
and
fcomip
mov
mov
into
mov
fists
inc
dec
cmpsl
fisubl
sub
scas
jns
leave
insb
movaps
das
stos
mov
das
out
dec
adc
cmc
cmpl
sub
out
test
repnz
enter
add
sbb
icebp
xlat
push
jmp
xor
xlat
xchg
fidivs
xor
jp
dec
lret
lret
sub
mov
xor
fdivs
fdivl
mov
jno
adc
out
pushf
xchg
or
xchg
push
movsb
mov
cmp
fcmovne
cmp
repnz
call
dec
xchg
fmull
es
adc
ljmp
subb
addr16
loop
sahf
nop
and
xor
mov
subl
rcr
out
in
popf
cmp
inc
lcall
mov
push
iret
mov
in
aas
pop
inc
jecxz
ja
xchg
int3
adc
inc
out
jge
loopne
mov
insl
inc
adc
add
jl
lods
les
jp
mov
add
fmull
cltd
pop
sbb
popa
flds
mov
es
cltd
lea
imul
adc
lds
lcall
xchg
lods
push
cwtl
sbb
cmp
popa
xor
sub
pop
jmp
je
call
scas
xchg
inc
or
mov
mov
loopne
adc
xchg
xor
ret
fistpl
push
das
mov
out
imul
sub
pop
fstp
mov
loope,pt
dec
sbb
out
enter
test
xchg
inc
popa
jno
mov
lock
mov
sub
sub
repz
fldenv
js
jno
cli
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
jmp
cmpsb
xchg
mov
jns,pt
sahf
lods
mov
in
adc
add
jmp
push
push
cli
xor
jne
mov
xchg
subl
std
xlat
mov
cmp
mov
xchg
daa
sbb
jl
xlat
adc
sub
cld
in
inc
in
shrb
cwtl
adc
ja
adc
jmp
sbb
pop
fldenv
xor
fdivl
cmp
outsl
pop
ror
sub
popf
in
ljmp
cmpsb
inc
lods
jne
cld
test
cmp
dec
ljmp
adc
xlat
and
xorb
addr16
rol
pcmpgtb
aad
push
push
sbb
add
and
xchg
push
xchg
mov
xor
mov
icebp
mov
push
mov
fstps
fiaddl
cmp
mov
stc
leave
arpl
sub
mov
and
aad
and
and
or
jmp
push
and
daa
in
pop
movl
jns
shlb
cmp
imul
out
pop
cmp
pop
cli
xorl
dec
cmp
and
xchg
rolb
sbb
jecxz,pt
sbb
lods
enter
push
sub
outsl
hlt
inc
mov
pop
cmp
adc
cmp
and
pop
aas
lock
mov
out
jo
cmp
adc
and
add
icebp
dec
pop
rcll
jmp
inc
inc
jmp
insb
add
nop
emms
cmp
add
jo
mov
mov
jae
sbb
subl
push
mov
cwtl
scas
lods
cmpsb
jecxz
pop
pop
jo
mov
ljmp
icebp
adc
cmovp
mov
dec
push
jle
dec
jo
fdivp
inc
or
fcoml
sarb
subb
pmovmskb
out
xor
mov
fistps
push
lock
inc
push
ljmp
ljmp
popf
mov
lahf
aam
clc
icebp
loopne
xchg
jbe
fcomps
mov
aas
dec
dec
es
loopne
xchg
fnsave
aam
sbb
mov
or
pop
pop
sbb
cmpl
lods
mov
lock
scas
sub
movsl
mov
cld
fisubrl
push
jp
jbe
or
shrb
scas
cmpsl
fdivl
push
xor
leave
and
mov
jo
xor
int
jge
test
fistpll
out
and
fistpl
fisubs
fstpl
sbb
mov
or
outsb
pusha
sti
or
sbb
and
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
jmp
cltd
add
cltd
fstp
jmp
lods
sbb
adc
adc
inc
call
cli
movsl
mov
clc
repz
and
rcl
lret
arpl
stos
mov
and
jne
ljmp
push
clc
std
mov
pop
inc
cmp
sahf
test
frstor
lahf
loopne
jg
or
daa
loopne
sbb
add
xchg
inc
out
cmp
xchg
mull
out
cmpsb
or
movsl
fsubl
cmpsl
test
jb
ja
xchg
clc
repz
aas
and
jns
js
addr16
add
loop
xchg
mov
testl
shll
fs
fwait
pop
out
mov
pop
jns
push
outsb
fiaddl
mov
les
rorl
test
idivb
test
je
pop
test
sub
rcrb
add
mov
cmc
dec
jp
dec
adc
add
jae
adc
repnz
or
inc
incl
lods
test
adc
testb
xor
outsb
or
mov
jg
xor
push
cmp
sub
lcall
cmpsb
jae
mov
pop
dec
dec
sub
loop,pn
jmp
mov
daa
inc
jp
shl
sub
mov
test
ss
dec
ja
fs
pop
dec
cmp
or
cmp
jae
stos
jae
mov
push
mov
pop
jmp
adc
cs
stos
add
out
das
xor
test
mov
cmpsl
pop
xor
and
jne
aaa
loop
inc
mov
push
add
stc
bound
cltd
mov
adc
nop
mov
or
data16
xlat
adc
adc
and
fstl
mov
shl
andb
mov
xchg
dec
xor
movsl
stc
sub
aad
and
popf
shrb
ja
jecxz
add
mov
jl
jae
pushl
fcmovne
sub
add
stos
sbb
cltd
inc
fstps
cmp
stc
jl
push
xchg
hlt
outsb
scas
mov
inc
cmpsb
cmpsl
pop
add
and
ret
adc
mov
int
in
ret
out
addr16
push
sub
xchg
popl
add
adc
jno
test
int3
iret
adc
push
es
sub
jns
xchg
mov
call
xor
fisubrl
ja
jb
loop
dec
add
ds
icebp
jb
insb
inc
mov
mov
cmc
push
je
pop
leave
pop
lds
rcrb
xchg
call
cmp
dec
mov
dec
in
movsb
movl
rorl
or
add
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
jmp
cmp
cltd
fistps
sbb
mov
xchg
movlps
fmuls
push
cmpsb
arpl
in
sbb
test
popf
pusha
decb
out
sbb
adc
fisubrs
mov
mov
mov
dec
aad
aam
mov
ds
incb
xchg
xor
lock
rcrb
repz
insl
xchg
xor
adc
and
std
mov
cltd
es
xor
sub
imul
andl
mov
sub
and
and
aad
ljmp
push
or
adcl
adc
fadd
mov
jb
scas
dec
sbb
or
je
sub
outsb
xchg
cmpsl
mov
pushw
notb
imul
das
addl
inc
outsb
adc
push
popf
inc
cmp
in
dec
add
pusha
mov
push
fisubl
jg
push
ljmp
push
xor
call
sarl
mov
push
ja
iret
jmp
repz
or
jle
pop
iret
es
int3
sub
sub
dec
and
push
xchg
push
mov
xchg
pop
sbb
lods
dec
fsubl
jns
pop
pop
insl
push
inc
inc
inc
fwait
mov
xor
mov
pop
rcll
lock
mov
adc
mov
adc
lock
jl
mov
aad
xor
mov
lock
mov
or
out
cmp
mov
pop
stos
scas
outsl
test
rorl
push
push
or
cmp
xor
sbb
inc
cmp
cwtl
jbe
lock
fists
lea
shrl
idivl
cmp
scas
cmpl
shrb
jp
hlt
pop
cmp
aad
push
int3
cmp
dec
dec
adc
jno
pusha
lret
das
mov
adc
push
jl
jmp
xchg
fimuls
in
pusha
aad
in
int3
lock
sti
iret
dec
stos
jecxz
jne
jg
xor
pop
xchg
fwait
iret
sub
movsl
mov
pop
and
gs
pop
inc
bound
in
xor
push
dec
xchg
lods
ljmp
cmp
sysexit
mov
insl
inc
sub
sahf
cltd
hlt
clc
push
aam
sbb
mov
inc
adc
test
int
mov
or
push
cmc
mov
fsubp
xor
orl
pusha
fsts
cwtl
dec
repnz
jmp
and
mov
lds
pop
jne
sahf
xchg
nop
cmp
ss
out
or
mov
mov
aad
fstp
addl
shll
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
jmp
pop
xor
jge
cmp
loopne
mov
js
aam
adc
out
loope
sahf
lds
xchg
inc
insl
jl
in
in
lods
lahf
push
lds
fs
lods
jno
push
outsb
cmc
sub
xchg
idiv
mov
imulb
ret
mov
stos
mov
in
cmp
jl
or
inc
cmpsb
arpl
sub
mov
adc
outsl
int
adc
lock
jmp
shll
pop
les
and
inc
xor
mov
aas
cs
sub
push
ja
aam
stos
xor
dec
insb
fmul
inc
inc
jmp
cwtl
or
sub
pop
jne
and
outsl
or
xchg
mov
ret
fcomp
inc
jge
out
dec
inc
pop
adc
popa
test
lea
ror
inc
sbb
mov
pop
andb
into
sbb
cmp
in
aam
adc
lcall
cmp
imul
adc
les
jl
mov
loope
cmp
shl
pop
adc
pusha
push
xchg
jne
push
jmp
lock
hlt
cmc
imul
punpcklbw
sbbl
into
daa
and
dec
ret
out
mov
bnd
mov
or
sbb
cld
pop
or
xchg
push
popa
dec
lret
xchg
mov
sti
es
mov
pushl
repz
cmp
fldcw
fdivr
inc
mov
push
test
ret
cmc
mov
pop
lahf
inc
in
adc
js
cmp
in
cmp
cmp
pop
test
test
ja
pop
ret
pop
mov
repnz
mov
mov
cmp
test
cmp
loop
mov
mov
ret
adc
mov
jb
mov
loop
sahf
stos
sahf
or
mov
enter
mov
ret
shlb
fcomip
in
enter
les
test
xor
lds
mov
or
pop
out
mov
into
mov
std
iret
jo
cmp
test
fwait
popf
iret
sub
std
jns
pop
testl
addr16
gs
cmc
fdivrl
int
pop
rclb
sub
cs
lret
cmp
jae
sbb
and
sbb
sahf
cmpsl
mov
jp
adc
pushf
adc
jo
add
mov
in
pop
loope
push
mov
xchg
or
bound
xlat
das
popa
lea
test
xlat
xchg
push
insl
gs
shlb
jnp
mov
fmulp
addr16
adc
sub
or
lahf
arpl
xor
out
sbb
add
stos
pop
int
xor
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
movl
push
mov
mov
and
push
sbb
push
movl
movl
sub
movl
or
mov
movl
mov
xor
andl
div
imul
sbbl
mov
xorl
xor
and
mov
mov
sbb
mov
xor
orl
div
add
sub
mov
movl
cmpl
movl
not
mov
mov
jmp
mov
mov
jbe
push
call
adc
movzbl
sbb
mov
mov
or
and
mov
mov
sub
or
inc
sub
movl
cmpl
mov
mov
mov
jmp
movzwl
ja
call
adc
sub
sbb
inc
xor
movl
mov
orl
add
xor
cmpl
mov
movl
movzwl
jmp
movl
notl
jae
pushl
pushl
pushl
push
push
push
call
or
and
or
incl
mov
mov
and
and
xor
sbb
imul
addl
mov
and
sub
mov
mov
mov
and
movl
orl
movl
adcl
movl
movl
mov
sub
imul
mov
andl
imul
cmpl
mov
movl
mov
jmp
movl
movl
je
push
push
call
orl
xorl
xor
or
mov
or
mov
xor
xor
sbb
mov
jmp
pop
sahf
and
out
scas
sarb
rclb
adc
mov
sbb
cmp
pop
movsl
das
sub
mov
mov
in
xorl
jno
ret
lea
in
aam
mov
addr16
in
rep
and
adc
mov
out
lahf
test
andb
jb
sbb
jns
leave
sub
adc
cmpsb
inc
adc
inc
fsts
mov
jg
jnp
jnp
ja
pop
shll
loope
sbb
in
in
incl
lcall
stos
and
and
push
stos
jae
pop
dec
jmp
sarb
std
cli
fs
mov
adc
xor
inc
cmp
cmpsb
ficoml
xor
sub
sbb
imul
pop
pop
mov
andl
dec
or
fwait
jge
inc
cli
inc
inc
lods
xchg
aam
outsl
repnz
or
fcomps
push
int3
push
jle
xor
xor
fistpll
cwtl
ficomps
pusha
jnp
rolb
jno
xchg
mov
into
scas
lods
in
rclb
push
sub
popf
sub
loopne
pop
adcl
int
and
in
pop
xchg
push
mov
incb
dec
mov
or
xchg
pop
xor
push
xor
xlat
dec
mov
sti
inc
xor
das
ret
pop
fnstcw
addl
xor
mov
xchg
in
dec
pop
call
test
dec
mov
jno
fstps
ficomps
xchg
imul
out
das
gs
dec
test
test
inc
push
push
mov
fwait
add
inc
mov
inc
in
sub
mov
inc
aad
jecxz
mov
rcr
jp
repnz
stos
lea
pushf
pop
push
lock
pushf
lcall
nop
and
mov
dec
movsl
popa
sub
pop
sub
push
pop
mov
jns
xchg
popa
mov
iret
loope
sub
jae
mov
mov
jne
cwtl
nop
icebp
ja
mov
jmp
stc
leave
xor
inc
je
add
incl
add
inc
add
lret
leave
and
add
xor
mov
subl
xor
cmpl
movzwl
mov
mov
jmp
mov
mov
jg
push
pushl
call
add
adcl
adcl
add
and
mov
add
orl
mov
mov
sbbl
lea
mov
or
movl
movl
sbb
movl
mov
or
xor
cmpl
notl
movl
not
jmp
movl
movl
jbe
pushl
call
or
xor
andl
movl
add
adc
mov
orl
or
and
add
cmpl
movl
mov
mov
jmp
movl
mov
jbe
push
call
and
add
xor
subl
and
add
xor
cmpl
mov
mov
mov
jmp
movl
jb
push
call
add
xor
add
sub
sub
xor
add
mov
add
subl
or
xor
mov
or
add
cmpl
movl
mov
movl
mov
jmp
mov
mov
jge
pushl
pushl
call
andl
sbbl
andl
movzbl
sub
add
adcl
xor
mov
movl
orl
movl
adc
movl
mov
and
add
cmpl
movl
mov
mov
mov
jmp
movl
movl
jle
push
call
xorl
xor
and
orl
orl
inc
mov
sub
mov
subl
lea
movzbl
sbb
mov
or
sub
xor
or
or
mov
mov
movl
movl
mov
or
add
xorl
imul
mov
imul
xor
movl
mov
div
sub
movzbl
or
mov
xorl
movl
sbbl
movl
movl
mov
mov
addl
xor
movl
div
sub
imul
adc
add
mov
orl
xor
xor
sbb
mov
div
xor
mov
movl
cmpl
movzwl
movl
jmp
mov
jge
pushl
call
not
or
adcl
adc
dec
add
movl
and
movl
cmpl
movzwl
mov
jmp
mov
movzwl
ja
push
push
push
push
call
adcl
adc
and
and
addl
mov
mov
sub
movzbl
xor
shr
and
sub
and
mov
imul
mov
subl
and
mov
adcl
jmp
cltd
adc
xor
sbb
js
insl
jle
scas
into
adc
adc
cmp
mov
jno
pushf
mov
sbb
nop
lahf
push
aaa
or
inc
mov
je
xchg
jge
data16
fnstsw
inc
cmpsb
jmp
inc
mov
jb
ljmp
cmp
sub
sbb
or
pusha
mov
adc
out
cmp
in
cmpsb
adc
cmc
push
mov
jge
aad
insb
mov
jno
mov
xlat
sub
es
mov
inc
pop
fiadds
movsl
or
ficompl
arpl
fwait
mov
sub
rclb
sbb
test
imul
mov
insl
inc
pop
jmp
jecxz
cmp
cmp
testb
push
push
add
rorl
sbb
les
stos
lock
and
clc
je
adc
rcll
stc
movd
ljmp
pushf
out
int3
mov
adc
insl
mov
aas
aas
ficomps
rol
add
mov
xchg
add
in
dec
pop
push
adc
sbb
sub
sti
push
push
stos
jmp
sub
xor
loopne
mov
fimuls
je
mov
repz
int
lods
loopne
aad
sub
xchg
xchg
pop
push
scas
and
jae
cmp
bound
mov
mov
scas
les
sub
sarb
lds
mov
xchg
stos
jl,pn
aad
push
or
inc
mov
int3
imul
and
in
outsl
arpl
xchg
dec
push
and
test
incl
lahf
cmc
jge
or
mov
mov
jbe
pop
xor
jp
xchg
mov
push
pop
dec
std
js
in
lret
in
outsl
dec
daa
inc
mov
add
adc
or
outsb
adc
shll
adc
test
decl
rol
fcom
push
add
cmpl
mov
mov
mov
mov
jmp
mov
jne
pushl
call
notl
addl
orl
andl
and
movl
mov
sbb
or
mov
or
sub
adcl
mov
cmpl
mov
movl
movzwl
jmp
movl
mov
jg
pushl
pushl
push
push
call
add
sub
adc
movzbl
sbb
adcl
and
or
movl
mov
sbb
movl
addl
movl
cmpl
movl
movl
jmp
notl
jne
push
push
call
sub
xor
xor
mov
adc
or
orl
adc
andl
adc
mov
adc
movl
adc
movl
xor
xor
add
movl
movl
mov
add
or
mov
movl
sub
xor
mov
addl
imul
add
imul
or
mov
or
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
push
push
pushl
push
call
or
or
xorl
sbb
xor
xor
subl
mov
lea
addl
push
call
and
mov
mov
jmp
test
mov
jbe
mov
mov
movlps
clc
insl
inc
xor
push
or
repz
pushf
ljmp
dec
xor
lcall
fcomps
cs
sbb
xor
adcl
mov
xor
outsb
cmp
cli
xchg
mov
xchg
xchg
mov
stos
cmp
mov
inc
rcr
into
pop
das
xchg
push
sti
and
notb
loope
adc
in
xor
scas
sarl
fistps
mov
push
xchg
loop
ljmp
push
movsl
cltd
hlt
movsb
mov
mov
sub
add
lcall
jbe
ror
std
imul
jbe
popf
push
dec
lock
push
mov
dec
mov
xorb
add
sub
push
pop
xchg
pop
lock
in
rorb
push
inc
push
int
xchg
sbb
movsl
and
jp,pt
inc
jmp
jb
jo
insb
cmp
pop
jle
jmp
in
mov
arpl
dec
mov
out
dec
mov
gs
out
add
call
jae
xchg
mov
mov
pop
xchg
inc
dec
cmp
imul
into
xor
int
ficomps
in
je
addb
aas
js
mov
iret
xor
sub
mov
jb
cmpsl
cmp
faddl
cwtl
gs
jg
ja
inc
sub
cwtl
cwtl
lret
cmpsb
dec
dec
pop
push
les
movsl
jb
pop
mov
div
into
sub
add
lock
sub
test
mov
notb
add
add
and
rcrb
jge
inc
clc
jo
insb
imul
push
push
movsl
ret
shll
ljmp
es
cwtl
dec
xchg
dec
rcll
xor
push
arpl
push
lods
add
test
popa
mov
out
pop
ss
imul
int
pop
rorl
pop
es
mov
mov
add
add
cmpl
mov
mov
jmp
movl
movl
ja
push
call
add
add
dec
orl
addl
adc
and
cmpl
notl
mov
movl
jmp
movl
je
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
sub
xor
xor
mov
xorl
div
cmpl
movzwl
movl
jmp
mov
jbe
push
push
push
pushl
call
adc
movl
orl
sbb
adcl
xor
mov
mov
sbb
add
xorl
jmp
pop
and
and
cmpsb
js
adc
adc
adc
repnz
loopne
xor
arpl
cmpsb
pop
sub
sbb
xor
add
xor
fcom
loop
jmp
push
sub
sub
call
sarb
jmp
xchg
addb
xchg
cmc
pusha
and
xchg
xchg
out
xor
inc
popa
dec
adc
rcll
mov
scas
mov
push
xor
jg
enter
idivl
push
mov
mov
jmp
cmpb
vmwrite
adc
lea
inc
enter
mov
test
rcll
fwait
in
test
das
aam
cmp
shlb
test
xchg
mov
push
push
sbb
mov
les
dec
sarb
lods
pop
pop
xor
jmp
jecxz
mov
int3
pop
callw
loopne
push
pusha
pop
inc
test
in
fldenv
cmp
jge
xchg
xchg
push
js
loop
cld
das
insl
mov
mov
mov
mov
mov
lret
aas
push
dec
clc
clc
xlat
shrb
and
mov
test
mov
cmpsb
inc
pop
orb
jmp
cmp
leave
out
int
shrb
test
cmpsl
add
insl
push
jno
cmpsl
fisubs
mov
mov
loope
dec
dec
fstpl
or
xor
cmp
mov
sub
jae
dec
xor
rcrl
pop
xchg
cld
inc
test
dec
test
rcl
and
mov
xor
leave
in
inc
lcall
push
sub
dec
mov
jae
std
imul
inc
xchg
popa
dec
bnd
test
jnp
cld
loopne
xor
pop
test
cmpb
dec
xor
lea
lea
and
adc
je
dec
shl
sbb
cmp
sub
and
and
out
shll
imul
repnz
clc
add
dec
hlt
fsubp
dec
xor
mov
push
or
leave
mov
pop
mov
neg
movl
movl
movl
movl
adc
movl
or
movl
xor
movl
movl
xor
add
sbb
mov
movl
cmpl
movl
not
jmp
not
jbe
push
push
call
xorl
or
subl
add
adc
sub
addl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
call
mov
or
xor
sbbl
neg
mov
or
movl
movl
add
mov
cmpl
movl
mov
jmp
movl
mov
jae
push
call
or
movzwl
or
mov
sbbl
sub
inc
xor
add
sub
xor
mov
add
mov
movzbl
or
and
movzbl
sub
mov
sub
sub
jmp
xor
es
and
jmp
js
mov
insb
leave
ret
enter
adc
das
dec
jge
dec
jp
cwtl
cmp
mov
test
pop
repz
scas
leave
mov
notb
lds
stc
xchg
lods
lret
sub
dec
cwtl
jmp
mov
mov
in
sbb
adcb
or
xor
fs
popa
pop
xor
and
cwtl
jle
lcall
pop
dec
mov
jne
jle
ret
pusha
test
repz
popf
xchg
and
dec
push
out
jecxz
jnp
iret
adc
jle
xlat
adc
inc
das
loope
adc
adc
pusha
popa
fnstenv
popa
add
sub
pop
cld
ds
mov
mov
xchg
pop
je
scas
lods
xchg
out
lret
ret
dec
repnz
rcrb
jmp
mov
jbe
cmc
pop
sub
adc
mov
push
xchg
sbb
xchg
inc
lahf
cmp
jb
sbb
push
stos
inc
popa
dec
fiadds
push
xor
and
mov
mov
fs
dec
dec
add
jo
cld
je
mov
mov
sbb
xor
mov
aas
or
popf
dec
xor
insl
lea
mov
push
jnp
ss
in
sahf
inc
or
cmp
pop
pop
js
or
cmp
push
pop
cwtl
pop
jbe
mov
and
rol
mov
mov
or
cmp
and
xchg
pop
lods
jg
xchg
clc
push
push
popf
shrb
in
add
scas
xchg
divb
test
push
dec
jne
mov
imul
jne
fistl
inc
gs
pop
jge
push
mov
and
dec
rcrb
cmp
lds
mov
mov
xchg
pop
xchg
daa
and
stos
mov
jl
cli
dec
mov
xchg
aam
push
sub
cwtl
push
iret
lret
inc
outsl
sub
int
jge
mov
fwait
andb
ljmp
xor
inc
add
mov
mov
movl
jmp
movl
jle
push
call
and
subl
adcl
movzwl
adc
xor
sub
cmpl
movl
mov
mov
movl
jmp
movl
jb
pushl
push
push
call
sub
and
adc
adc
imul
xor
jmp
nop
push
push
sub
sbb
jle
push
and
mov
adc
mov
inc
mull
fdivrs
mov
and
inc
xchg
scas
fldl
iret
xchg
sub
cvttps2pi
jmp
xlat
inc
loopne
mov
xor
adc
sbb
mov
fs
lods
cmc
clc
adc
push
xchg
add
fadds
xor
cmc
out
ss
es
jmp
fs
mov
shll
ds
add
sbb
jl
ficomps
sti
popa
sub
push
mov
xchg
xlat
mov
fisttpl
or
arpl
imul
loope
fisubrl
sub
pavgb
cmp
stos
in
rcrl
mov
push
movsb
ret
pop
lret
sbb
inc
cs
or
add
cmpl
test
sbb
mov
xchg
adc
hlt
lret
loope
and
gs
cwtl
cld
xor
fidivrl
ljmp
inc
popa
xchg
mov
in
int3
fcmovnbe
fs
inc
and
push
fstps
fmuls
mov
mov
sahf
out
xchg
xchg
fs
shr
or
mov
xchg
rcll
lahf
push
xchg
cli
sub
popf
mov
jae
mov
outsb
jle
xor
jge
leave
xchg
pushf
std
popw
mov
in
mov
cmp
lods
rorb
fnsave
push
cmp
inc
or
fs
ljmp
aas
cmp
jbe
inc
or
adc
jp
and
cmpsl
in
cs
adc
mov
pop
jge
jecxz
xchg
shll
mov
in
jnp
jns
pop
jecxz
in
jo
add
rorl
out
aad
xchg
cmpsb
pushf
aam
jg
out
xor
mov
dec
arpl
cmpsb
adc
or
std
icebp
mov
mov
test
fidivl
inc
lock
push
mov
jae
bound
addr16
test
mov
inc
sub
loopne
les
pop
xchg
pushf
stos
xchg
mov
sub
xor
test
incl
testb
adc
test
sub
inc
add
xor
inc
add
notl
not
jmp
movl
je
push
call
movzbl
adc
mov
sbb
sbb
xor
subl
mov
mov
sub
or
or
mov
jmp
loop
out
cmpsl
inc
sbb
inc
mov
mov
xor
adc
nop
push
mov
push
push
push
outsl
xor
inc
mov
test
pusha
or
mov
push
xor
dec
push
sub
stos
push
lods
movsb
sbb
rolb
stos
sahf
hlt
sub
jae
dec
dec
jb
mov
dec
je
inc
add
mov
in
sahf
lea
xchg
pop
sub
fdivs
popa
inc
add
inc
aam
cmp
popf
test
imul
push
cmpsb
lods
adc
scas
pop
jp
jno
ss
jns
subl
clc
xor
and
enter
gs
or
lods
pushl
pop
lea
sub
je
lods
inc
jmp
push
mov
shll
pop
and
imul
jns
push
aam
jb
sti
mov
scas
cltd
hlt
sbb
push
lods
fwait
inc
pushf
mov
sbb
mov
pop
adc
xchg
dec
mov
outsb
adc
xor
xor
inc
icebp
movlps
jns
jnp
dec
filds
xchg
ret
jne
je
sub
sub
mov
mov
mov
fdivrs
fs
lret
xlat
test
hlt
dec
fld
mov
std
xor
mov
test
jmp
mov
jge
xor
xor
pop
jno
mov
out
call
mov
test
jne
out
test
dec
xchg
arpl
clc
or
xchg
aad
lods
aam
test
jne
jmp
mov
add
sbb
jo
aaa
scas
inc
ficoml
inc
leave
insb
jle
insb
inc
inc
push
pop
sbb
or
rcrl
loope
loopne
fcmovnu
sub
rep
lret
int
jge
jge
imul
jns
movsb
jnp
cmp
shr
fucom
jmp
mov
push
ja
test
or
push
xchg
cmp
arpl
aas
out
out
adc
pushf
mov
push
loope
xchg
jge
loop
adc
imul
lock
xor
or
add
xor
or
mov
sub
sub
mov
adc
lea
andl
and
movzbl
add
mov
mov
sub
add
mov
movl
adc
movl
cmpl
mov
notl
jmp
mov
jg
push
push
call
sbb
or
or
add
inc
sub
subl
movl
andl
movl
mov
cmpl
movl
movzwl
mov
jmp
mov
jge
pushl
pushl
call
add
xor
xor
and
and
movl
sbb
mov
mov
adcl
xor
andl
xor
xorl
mov
call
mov
mov
decl
mov
addl
mov
addl
xor
xor
adcl
mov
subl
call
decl
or
dec
or
add
mov
sbb
mov
xorl
xor
xor
mov
call
cmpl
mov
movl
mov
mov
jmp
mov
ja
pushl
push
push
push
push
call
subl
mov
or
or
and
mov
xor
or
mov
mov
decl
mov
add
mov
xor
andl
xor
subl
mov
cmpl
movl
movl
mov
jmp
mov
movzwl
jne
push
push
pushl
push
pushl
push
call
andl
subl
addl
subl
sbbl
subl
movl
mov
sbb
mov
notl
mov
mov
addl
call
adc
mov
adcl
or
sbb
mov
addl
or
incl
push
sbbl
push
sbbl
push
andl
push
call
mov
cmp
jne
sub
mov
mov
subl
xor
andl
xor
andl
mov
movl
call
sbb
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
inc
adc
cmp
pop
pusha
js
adc
adc
movlps
add
out
loope
mov
std
add
inc
push
xlat
mov
stos
cmp
adc
gs
push
dec
push
sbb
lods
and
jmp
sub
mov
pop
mov
ret
xchg
or
sbb
inc
das
pop
ds
int3
mov
gs
xchg
mov
sarb
sar
sbb
dec
xor
xorb
nop
inc
cwtl
cli
jl
cmp
call
mov
adc
pop
and
clc
popf
ja
pop
out
daa
iret
cld
mov
icebp
mov
sti
dec
mov
mov
imul
cmpsb
xor
cmp
pop
rcrb
pop
mov
jno
repz
lret
test
fisubs
dec
inc
or
lret
add
fxch
ljmp
cmp
lock
shlb
xchg
cmp
cmp
mov
xor
xor
jns
dec
pop
sub
fs
inc
or
sub
jo
pop
push
out
out
xor
out
aaa
sbb
outsb
pshufw
dec
inc
in
mov
or
mov
adc
and
add
data16
arpl
pop
inc
mov
pop
jnp
fs
fistps
ss
cmc
mov
sub
pop
stc
push
sub
iret
ds
sub
xchg
pop
in
mov
test
aas
enter
fnstenv
push
inc
inc
leave
aas
out
jmp
jecxz
mov
sub
mov
pop
push
sbb
push
mov
mov
je
and
stos
lcall
xchg
and
lret
pop
imul
popa
mov
mov
add
cmpsb
jl
int3
xor
in
cmp
pop
outsb
das
fimull
movsl
push
or
shrb
inc
add
xchg
push
mov
mov
mov
cwtl
and
pop
xchg
mov
pop
mov
pop
lret
ds
sti
ret
ja
sbb
cwtl
rcl
inc
pop
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
jmp
leave
out
loope
pop
sub
xor
jle
lods
adc
adc
xchg
out
xor
pop
pop
and
rolb
das
mov
xchg
inc
lcall
dec
fisttpl
adc
add
jg
adc
imul
and
sahf
mov
sub
inc
cwtl
adc
and
ret
mov
test
mov
adc
aam
and
mov
or
stos
mov
insb
int3
pcmpeqw
jnp
std
xor
lods
mov
test
loop
jne,pn
mov
mov
ret
mov
jp
pop
pusha
mov
sub
mov
cmpsb
fadds
or
and
sbb
xor
xchg
mov
push
gs
loope
adc
pop
shl
sbb
pop
or
sub
pop
mov
lock
cmp
sbb
lds
dec
push
dec
es
out
mov
ss
xchg
push
mov
pusha
sub
dec
xlat
jno
inc
inc
dec
adc
sub
insb
xor
or
lods
xor
cmp
lock
sub
inc
cwtl
cmp
iret
inc
fwait
enter
out
cmpsb
call
sub
in
mov
inc
cli
pop
cld
fidivrl
push
gs
ljmp
dec
sarb
cmp
inc
aas
cmp
sbb
stos
or
iret
aam
int
inc
std
xchg
push
inc
ror
mov
dec
xchg
dec
add
sbb
ljmp
loopne
dec
std
mov
loop
xchg
std
push
jle
ljmp
xchg
loope
xor
jno
pop
inc
cmp
je
fistps
arpl
cmp
cmc
ret
ja
std
jns
xorl
in
movsl
or
fs
mov
cmpsl
push
or
and
xchg
stc
or
pop
xor
cwtl
inc
aam
jle
popf
movsb
jge
mov
pop
mov
cmp
ret
iret
in
std
dec
sahf
mov
and
push
mov
lcall
rorl
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
jmp
mov
popa
sahf
sbb
lods
insb
mov
mov
adc
movlps
add
xchg
xor
jno
jp
push
insl
push
test
push
popa
or
push
and
call
mov
stc
sub
cmp
cmp
sti
das
mov
movsl
loop
int
push
mov
mov
push
jmp
cmc
fdivrl
test
lods
pusha
push
mov
lret
fistps
add
cli
or
cltd
sbbl
sub
mov
cmc
mov
into
lock
jp
dec
mov
out
jle
xor
mov
mov
cmc
sbb
or
mov
add
je
loopne
jnp
scas
inc
out
bound
pop
mov
jbe
test
lahf
and
xchg
mov
out
push
cwtl
xchg
test
icebp
xor
inc
int
lret
inc
add
adc
mov
inc
js
pop
xor
pusha
dec
cmp
popa
sbb
std
out
inc
stos
ss
xchg
adc
jge
pop
mov
or
repz
js
pushf
cmp
lods
fistl
xor
pop
scas
stos
sub
aas
dec
stc
fiadds
or
cmp
pop
push
testb
fisubrs
cltd
gs
cmp
popf
pop
ss
in
outsb
mov
mov
jbe
push
adc
inc
js
das
repz
sbb
das
add
jmp
xor
push
pushf
ljmp
ret
outsb
insl
subb
lahf
je
fbld
push
mov
inc
sbb
inc
mov
es
sub
dec
insb
bound
hlt
test
cmp
outsb
sbb
mov
notl
aam
or
jge
loope
movsb
scas
aas
outsb
rcrb
sub
iret
sbb
rorb
pop
mov
inc
push
xchg
push
add
cmp
mov
xor
in
pop
mov
mov
mov
dec
jbe
mov
sbb
push
dec
cli
push
fldcw
imul
icebp
sub
imul
aad
xchg
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
jmp
add
xor
and
aas
loope
xor
js
or
push
movsb
adc
adc
cld
sub
jbe
mov
je
enter
jmp
sub
into
jno
jmp
out
ret
mov
push
xlat
xchg
xor
mov
rcrb
fwait
and
jnp
mov
pop
sub
or
stos
andb
push
inc
cltd
and
or
mov
push
sbb
iret
std
cmp
out
fwait
xlat
in
sub
jb
pop
jmp
sbb
enter
inc
sub
stos
add
jne
lock
cltd
xchg
jno
gs
sbb
mov
ja
ficoml
inc
or
mov
and
mov
imul
shlb
fadds
xchg
sbb
rcrb
hlt
sbb
andl
or
sub
aam
imul
pop
aaa
imul
jge
stos
mov
xlat
fsubr
jno
in
decl
into
aas
mov
scas
and
lret
ja
lea
idiv
lcall
mov
push
fldl
popf
xchg
nop
scas
das
imul
andl
fwait
in
scas
mov
lods
sub
pushf
lds
adc
xor
imul
dec
int
insb
int
and
and
aad
push
jbe
xchg
lret
xchg
xor
ss
adc
xchg
in
dec
mov
sub
xor
inc
addb
outsb
add
adc
fdivrs
test
push
jmp
imull
movsl
pop
into
mov
mov
jnp
ljmp
push
fcomi
fidivs
out
shrl
je
pop
shrl
push
ficomps
xchg
mov
cld
mov
jnp
push
mov
mov
pop
cmpsb
leave
mov
cwtl
add
pop
loop
rcrb
cltd
fsubs
sbb
or
cmc
std
cmp
or
mov
adc
pop
fsubrl
dec
mov
rcrl
inc
in
add
lret
movsb
outsb
xchg
lods
aas
cmpsl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
jmp
insl
xor
jb
push
sub
div
stos
mov
adc
adc
cmpsl
sbb
add
cmc
sub
sub
dec
arpl
mov
leave
mov
xchg
push
dec
inc
or
lret
inc
cmpl
xor
sbb
lods
sarl
push
mov
imul
lret
and
sahf
xlat
data16
sub
xor
into
inc
lock
fstpt
xor
leave
std
xor
out
mov
mov
or
daa
pop
adc
sbb
and
xchg
jo
mov
fs
pusha
scas
mov
rcll
out
aas
pop
sub
mov
popf
imul
movl
add
lea
stc
daa
or
lret
xor
mov
lahf
sti
inc
xchg
adc
les
mov
ljmp
jmp
add
jle
cmpb
mov
scas
mov
fldenv
call
rcl
fistps
movsb
repz
mov
call
lea
out
ret
and
adc
imul
sti
mov
mov
mov
push
sahf
mov
mov
pop
js
sub
push
mov
inc
xor
outsl
sahf
mov
sbb
pop
int3
out
movsl
jns
dec
xor
mov
lods
clc
stos
mov
ljmp
orb
mov
xchg
in
mov
inc
popf
xor
cwtl
push
pop
loopne
daa
orl
adc
mov
jbe,pt
mov
mov
ret
jae
mov
and
pop
subb
mov
dec
sbb
push
adc
jmp
cs
jp
lcall
rorl
inc
push
cmp
icebp
pop
add
xlat
sub
push
adc
mov
cmpsl
cmp
vpsrad
sti
pop
mov
dec
aam
add
sub
add
xchg
sub
jge
imul
bnd
push
cmp
negb
sub
das
jl,pt
nop
ljmp
in
and
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
jmp
pop
cli
xchg
ret
xchg
lods
imul
xor
addr16
jbe
or
orb
int3
adc
mov
cli
xor
cmp
and
jp
arpl
rcrb
je
scas
cltd
add
dec
fs
mov
into
add
xchg
cli
popa
mov
mov
hlt
mov
xor
push
xor
add
inc
cmc
popa
xchg
dec
jo
out
adc
add
pop
mov
jle
adc
inc
scas
and
outsb
mov
mov
sbb
push
data16
sbb
inc
icebp
call
push
movsb
std
xor
fsts
add
gs
mov
sub
test
stc
adc
inc
jmp
mov
push
les
jle
mov
rclb
mov
pop
movsb
inc
adc
pop
xchg
push
test
jns
jnp
adc
leave
jl
push
adc
or
cmpb
adcl
push
dec
outsb
int
push
adc
loope
mov
adc
push
add
inc
jecxz
xchg
ds
jmp
cmp
jecxz
xorb
jmp
das
cmpsb
pusha
in
js
mov
adc
fwait
inc
xchg
lcall
push
mov
jp
fistps
pushf
test
mov
mov
jbe
push
inc
mov
push
xor
mov
dec
sahf
std
cmp
jg
xorb
jne
fisttpll
pop
les
xchg
jge
out
pop
fwait
or
adc
pusha
adc
insl
dec
lea
xchg
add
aad
or
xor
or
mov
std
xor
jmp
lret
push
loop
add
daa
pop
jno
hlt
cmp
cli
stos
mov
leave
push
pop
mov
lods
sbbl
scas
rcr
fstp
mov
xchg
subb
xor
jg
xor
jae
xchg
push
sub
pandn
pop
jae
fdivrl
xor
xchg
mov
sbb
or
jg
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
jmp
stos
cmpl
and
sahf
sarb
cmp
adc
movlps
daa
shlb
push
outsb
xchg
repz
dec
fwait
or
cwtl
or
dec
and
dec
inc
test
mov
movsb
dec
aam
pop
xchg
mov
div
pop
and
mov
aam
mov
mov
aaa
push
adc
pop
jecxz
xor
arpl
jbe
dec
xlat
jae
aad
mov
inc
js
push
and
lret
jb
stos
int3
cli
mov
pushf
sub
xor
idivl
fninit
pushf
clc
dec
fldl
or
in
std
jl
cmp
out
pop
loope
stos
sub
sbb
jne
cmp
xchg
stos
mov
lea
push
cmp
fucomi
sub
cmpsb
jo
cwtl
lahf
fnstsw
mov
push
in
push
xor
imul
in
lret
sbb
adc
push
idiv
mov
bound
mov
lock
cmp
bound
dec
je
les
xor
sub
or
out
mov
dec
adc
pop
jns
ja
movsb
xchg
sti
data16
sbbb
notb
les
sbb
pop
stos
cmp
mov
mov
test
fsts
pop
lock
insb
outsb
jno
mov
lods
stos
lods
and
clc
movsl
mov
lahf
cmp
xor
mov
lock
loop
jmp
mov
xchg
adc
scas
out
mov
and
mov
push
call
sub
pop
push
cmove
jle
inc
nop
add
fucom
pop
popf
add
outsb
jle
or
push
es
jnp
shlb
in
test
ljmp
fidivs
adc
sub
add
cmp
mov
out
lods
stos
int
push
out
add
std
dec
xchg
xor
shll
sub
sub
add
pushf
sub
ja
test
jg
mov
test
push
cmpsb
cltd
pop
dec
push
std
movsl
ret
mov
sarb
scas
inc
inc
xchg
push
and
jge
ror
add
pushf
pop
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
jmp
and
lret
sbbl
js
pop
insb
insb
rclb
adc
ljmp
jb
inc
insl
pop
inc
xchg
mov
push
dec
icebp
arpl
lret
mov
mov
inc
add
in
xchg
sbb
das
pop
mov
pushf
jno
mov
cmp
call
cli
stos
mov
jb
in
pop
dec
jne
ljmp
pop
or
pop
insl
add
jns
inc
cmpsb
mov
add
fldl
adc
imul
mov
loope
movsb
daa
repnz
add
mov
pop
jmp
jmp
std
push
insb
subl
daa
jae
out
adc
jbe
cmp
cmp
ljmp
xor
pop
push
outsl
sbb
dec
test
sub
iret
pop
mov
mov
xchg
cwtl
mov
pusha
lods
das
test
jno
lahf
nop
lahf
push
sub
or
sarb
pop
iret
jg
out
stos
and
inc
cwtl
adc
lea
fdivs
xchg
call
aaa
les
cmp
arpl
lods
inc
outsb
cmp
pop
pop
fcoml
push
mov
push
cmpsb
fstps
cmpsb
daa
mov
test
stos
stos
or
inc
test
mov
push
shl
xchg
sbb
out
enter
aad
push
add
enter
add
je
xchg
xchg
sahf
or
mov
and
pop
outsl
jmp
mov
setne
sub
xor
loop
add
jle
dec
and
popa
test
shrb
cwtl
sub
xchg
and
arpl
data16
nop
or
into
inc
ss
push
xchg
fcmovnbe
sbb
icebp
int
movsb
add
dec
mov
out
xor
xor
push
das
sbb
mov
push
pushf
xor
xchg
mov
cmpb
and
cltd
jge
mov
adc
lods
fldcw
mov
adc
inc
mov
lahf
inc
jp
cmp
push
fwait
lret
or
sub
enter
movl
movl
movl
movl
lea
mov
mov
movzwl
jmp
pop
pop
lods
mov
and
pop
mov
xchg
outsb
insb
xchg
adc
rcr
shrl
lds
in
mov
negb
in
into
out
adc
rorb
push
push
rcl
mov
adc
aas
and
shlb
out
jge
push
mov
roll
sub
push
xor
sbb
inc
sbb
inc
xlat
jecxz
xchg
sub
push
imul
inc
fldcw
loope
loope
push
mov
stc
mov
push
push
mov
jle
mov
and
push
push
lods
adc
push
cmc
pop
repnz
mov
fldcw
stos
les
xor
jnp
imul
mov
push
jno
cwtl
adc
frstor
jg
das
jnp
mov
ljmp
or
dec
lods
mov
out
sbb
daa
jp
pop
fcomps
mov
cmc
push
addr16
mov
test
xchg
pop
fldcw
dec
mov
and
xor
rcrl
imul
mov
cmp
jmp
sbb
mov
xchg
add
inc
scas
push
push
mov
ret
sbb
mov
push
mov
sbb
das
sbb
xchg
xor
pop
adc
loop
pop
cmp
lds
adc
mov
clc
testl
mov
loop
mov
rolb
push
xor
std
nop
movsl
and
je
push
xchg
inc
dec
push
es
push
loope
jl
pop
mov
push
xlat
aam
adc
sbb
push
inc
mov
adc
outsl
aad
push
in
bound
loop
push
dec
cmpsb
in
lahf
sbb
fucomp
mov
in
xchg
cmp
daa
mov
cmp
das
lret
xchg
cmpsb
mov
pop
loop
imul
jne
mov
mov
icebp
mov
push
lret
adc
icebp
sbb
jle
xchg
mov
mov
js
lret
test
add
nop
inc
aas
xchg
popa
sbb
lea
clc
inc
mov
add
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
jmp
dec
sbb
sbb
sbb
sbb
scas
sbb
jmp
mov
movlps
ja
cmp
pop
add
jg
inc
ret
daa
ret
popa
push
dec
push
enter
pop
jmp
pushf
xor
mov
in
pop
mov
sbb
sahf
dec
dec
dec
jg
xchg
cmp
lcall
sahf
jmp
rcll
scas
fimull
cld
fisttps
add
ja,pt
ror
adc
jae
fcompl
sub
jnp
xchg
and
ud1
push
nop
jae
jne
pop
dec
xchg
mov
mov
lahf
imul
lock
mov
push
adc
xor
dec
jecxz
mov
add
mov
mov
dec
aaa
ljmp
call
fisubrl
lret
sub
mov
lods
clc
rorb
lods
int
loope
bnd
add
mov
or
mov
dec
cmpsl
dec
gs
mov
inc
movsb
pop
and
clc
rcr
and
or
add
imul
xlat
repnz
lret
adc
add
ret
movsb
mov
lds
dec
mov
push
cmpsb
aam
out
cmpl
ret
and
sub
subl
insl
icebp
aad
cmp
subb
inc
cmpl
insb
cmp
popf
cmp
cmp
mov
adc
xchg
dec
int
leave
jmp
add
notb
into
aas
hlt
mov
xchg
cs
mov
mov
stos
or
xchg
or
pushl
or
mov
dec
or
dec
repz
push
xor
inc
pushf
and
or
sub
mov
push
ret
ja
xor
add
fcoml
out
lds
cmp
inc
mov
pop
push
and
aam
stos
fisttpll
loop
div
ds
dec
xchg
cmp
js
cld
ja
pop
and
addb
sbb
jns
mov
lret
fmuls
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
jmp
push
pop
inc
ficomps
clc
les
out
mov
adc
lock
dec
int3
arpl
cmpb
stos
pop
xor
push
dec
or
in
jns
psubsb
dec
adc
pop
pop
lcall
mov
mov
xor
jmp
das
mov
popf
xlat
insb
jge
mov
cmp
sbb
xchg
jno
cmpsb
pop
mov
pop
push
inc
hlt
sbb
mov
ljmp
and
lock
fnstcw
jle
fsubrp
iret
outsb
and
shrb
xor
lret
leave
jns
sub
and
pop
mov
popf
outsb
xchg
mov
pop
sbb
jp
cmp
sub
ja
jnp
cmp
rcrl
mov
lahf
jp
jb
les
fcomps
cmp
call
push
testb
mov
out
jmp
loop
and
jns
pushf
cmpsl
je
xlat
out
sbb
xchg
flds
sub
inc
imul
mov
mov
pop
insb
dec
xchg
fwait
jne
or
jg
xchg
sahf
xchg
mov
popa
fbld
jl
xorl
and
add
rorl
lret
dec
sub
lock
lods
sub
dec
xor
out
or
pop
repz
jmp
rorl
push
cmp
cmp
jns
loop
ja
pop
mov
sub
cmp
sbb
jno
pusha
repz
clc
xchg
jecxz
mov
stos
aaa
sub
xchg
movsb
dec
bound
sbb
push
sub
xorl
ret
mov
jnp
aad
push
mov
xor
dec
xor
push
sub
cli
lods
inc
inc
mov
push
inc
sub
add
in
movsb
aaa
and
cmp
shll
scas
mov
mov
decb
pop
mov
ds
xor
xor
cmp
sub
lods
out
mov
xor
es
xor
lea
pop
cltd
ret
test
bound
movsl
imul
or
add
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
out
add
popa
cmpsl
aad
stos
lds
lods
mov
movlps
mov
mov
pop
lock
pop
push
cmp
fcoml
push
mov
xchg
aam
dec
loope
repz
daa
test
pop
push
push
addr16
sub
mov
shufps
xchg
mov
cmp
cmp
es
in
dec
in
frstor
inc
icebp
hlt
lahf
movsb
push
mov
xchg
pop
pop
jns
xchg
adc
jns
or
fistl
push
cmp
sub
xchg
icebp
lret
fldcw
pop
subl
data16
stc
adc
push
into
into
mov
adc
pop
rol
xor
popf
inc
xor
cmpb
aad
jbe
int
mov
lcall
or
cs
in
mov
adc
into
sbb
mov
imul
movsb
leave
or
jle
pop
pop
mov
dec
push
mov
jae
jle
and
cmp
push
dec
ja
out
inc
movsb
es
stc
push
fldt
shrb
ss
sbb
idivb
insl
jnp
jbe
pop
int
lods
xchg
inc
jle
or
pop
cmp
pop
mov
push
inc
dec
inc
xlat
test
imul
pop
je
cld
rolb
nop
ja
pop
mov
mov
insl
out
push
lret
test
lret
mov
repnz
icebp
xchg
movsl
adc
add
xor
sub
movl
fwait
mov
sbb
mull
jbe
ds
cld
adc
mov
cltd
push
mov
xchg
insl
cmc
movsb
cwtl
test
xchg
addr16
popf
mov
mov
fdivp
jle
xor
mov
xor
insb
cltd
pushl
pop
and
push
je
aam
pushf
lahf
cs
cwtl
pop
subb
sbb
pop
fistps
cmpsl
push
cs
jb
cmpsb
push
divb
in
loope
jne
dec
mov
xchg
push
xchg
xchg
sub
jbe
addl
daa
sub
test
gs
mov
mov
xor
xor
mov
call
or
jmp
mov
or
mov
push
push
cmp
adc
adc
xor
jno
lahf
aaa
adc
insl
hlt
pop
xor
sbb
fisttpll
daa
push
int
xor
xor
push
test
movsb
jbe
push
adc
mov
adc
faddl
dec
fisttpl
xchg
sub
sti
adc
lcall
in
out
lret
xchg
xchg
lods
shll
imul
jae
ficompl
cmp
adc
fidivrs
pop
lret
jmp
xor
gs
cmc
jle
loope
lds
mov
jmp
mov
adc
notb
fwait
xor
pop
out
aas
mov
pause
xchg
cmpsl
add
cmc
dec
jbe
inc
aas
std
and
jp
mov
test
adc
cld
daa
push
iret
pop
or
cmc
cmp
cmp
add
icebp
sbb
push
dec
xchg
imul
jnp
aad
jns
aam
psubusb
enter
cmp
adc
inc
shlb
dec
pusha
mov
add
popa
jge
je
test
imul
pop
cmpsb
dec
sahf
sbb
mov
push
push
jmp
iret
xchg
sub
pop
testb
cmp
jp
sub
rol
mov
sahf
fildl
lcall
iret
push
xor
sub
es
outsl
pop
or
lret
sbb
inc
jmp
xchg
cmp
test
pop
mov
fsubrs
cmpsb
sub
sbb
sbbl
or
xchg
mulb
imul
stos
into
jg
jb
inc
push
adc
sbb
sbb
ljmp
or
cmp
lret
xchg
and
int3
jno
test
sub
add
inc
mov
xor
popf
xchg
shrl
dec
mov
sbbl
adc
outsl
repnz
jmp
testl
push
adc
adc
les
fwait
test
in
pop
cmp
mov
fildll
ret
or
add
mov
mov
cmp
jmp
stos
js
pop
and
mov
les
stos
or
adc
movlps
cwtl
insl
sbb
sbb
lret
push
aam
and
cmp
pushf
jmp
mov
mov
xlat
scas
loopne
inc
push
mov
xchg
push
and
adc
and
scas
and
je
test
popf
cltd
call
nopl
and
add
xlat
pop
push
mov
push
adc
mov
mov
mov
loop
les
lcall
or
and
cmp
fidivrl
mov
mov
push
test
adc
cs
negb
dec
in
mov
dec
lahf
cmpsl
cmp
or
scas
mov
sbb
jb
jmp
xor
jno
xchg
popa
or
int
insl
xor
cli
mov
iret
sbb
incb
or
data16
sbb
pop
mov
xor
cmove
inc
das
in
shlb
loop
adc
jp
mov
adc
mov
orl
fmulp
mov
adc
stos
ljmp
std
dec
sahf
fwait
lret
pop
xchg
inc
mov
ret
addr16
subb
jns
insb
add
int
xor
cld
dec
loop
lahf
cmp
test
shl
push
std
js
sub
jecxz
inc
or
mov
inc
movsl
stos
je
xchg
inc
loopne
mov
pop
dec
movsb
stos
into
addr16
int3
popa
test
jp
push
loop
pop
xchg
mov
pop
xchg
mov
es
jae
xor
movl
mov
lods
add
pop
mov
jb
mov
jmp
int3
ret
dec
mov
test
fcomps
mov
pop
ret
push
xchg
mov
xchg
xchg
jmp
stos
fdivrl
mov
or
int
fistps
dec
fwait
outsl
jns
or
outsb
mov
in
mov
mov
jle
or
jb
nop
call
sbb
imull
mov
lods
daa
test
aad
pop
jno
insl
and
mov
xor
test
add
add
decl
decl
mov
addl
add
mov
sar
jmp
ds
in
mov
xchg
js
cmc
push
mov
enter
mov
call
mov
es
xchg
addr16
and
xor
xor
fwait
or
lea
jns
xor
adc
dec
inc
adc
inc
mov
or
test
pop
xor
popf
xor
mov
push
and
fcompl
outsl
mov
jecxz
dec
push
repnz
lods
cmpsb
dec
fbld
inc
sub
mov
into
mov
fbld
ljmp
jno
call
adc
xor
loop
add
ret
push
xlat
jge
pop
in
sub
mov
lods
mov
xchg
test
rcl
pminub
sbb
mov
iret
testl
inc
jbe
in
mov
fwait
xchg
dec
orb
jno
fcomi
cmp
jle
pop
add
push
ret
lret
cmpsl
mov
adc
addb
jae
dec
lods
add
sub
jnp
jmp
mov
jle
inc
jns
stos
decb
sbb
mov
decl
aaa
lods
insb
sub
cmpl
and
fidivrs
fwait
lret
std
xchg
mov
inc
decb
sub
lea
push
test
inc
cld
call
add
cmpsl
lret
lock
xchg
mov
pop
stos
nop
pop
dec
lea
sahf
adc
mov
lock
cmp
mov
or
and
dec
jnp
das
scas
pop
pop
pop
cs
xor
es
mov
iret
inc
jg
mov
lcall
loope
mov
mov
add
or
mov
inc
fbld
hlt
mov
insb
fnstsw
scas
ljmp
out
incb
je
leave
mov
jecxz
or
jb
adc
sub
and
int3
sbb
dec
adc
mov
pop
or
fisubrs
mov
mov
adc
jbe
or
aad
push
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
jmp
jns,pn
xchg
pop
subl
js
sahf
fdivrs
enter
sub
ljmp
push
scas
push
stos
mov
inc
pop
mov
cmpsl
ss
jbe
xor
mov
aam
lods
and
mov
dec
addr16
faddl
jb
dec
fisttps
jae
out
sub
sbb
mov
data16
xor
sub
je
cmp
inc
stc
cmpsl
jo
stc
mov
or
adc
push
sbb
into
cmp
pop
mov
inc
jo
adc
and
xchg
mov
sahf
test
popa
cwtl
cmpsb
out
or
sub
aaa
movhps
ret
insl
scas
aaa
dec
fstps
push
jbe
out
cld
inc
fists
jb
and
dec
cmp
aam
mov
or
dec
pop
add
xlat
push
fwait
aam
add
loop
je
push
cwtl
sbb
subb
push
je
stos
into
lock
call
add
adc
xchg
movsl
add
cmpsl
je
lock
fldcw
cmpsb
jo
cld
repnz
or
lock
xor
pop
jnp
insl
addr16
addb
hlt
pop
rcll
fmull
adc
in
inc
jns
ret
cmc
push
mov
fsubr
loope
pusha
mov
movsb
push
repnz
pop
stos
je
cmp
fs
push
jbe
or
cld
out
aam
out
sub
movsb
pop
es
pushf
sbb
sbb
xchg
mov
and
lock
jae
sti
xchg
mov
mov
jno
andl
sub
shrb
mov
fisubs
jmp
cmpb
sbb
mov
and
push
xchg
test
movsb
out
cmp
pop
xlat
sub
mov
lds
lods
sti
in
sbb
mov
cmpsb
add
mov
sub
fsubr
xor
dec
vminss
in
mov
je
mov
out
and
movsl
inc
xor
lahf
inc
mov
divb
test
hlt
adcl
add
loopne
dec
sbb
inc
mov
or
lahf
decl
test
decl
pushl
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
jmp
arpl
or
push
test
cmpb
movlps
mov
pop
loopne
push
mov
aam
push
fdivrl
mov
pop
push
and
in
gs
mov
mov
add
mov
ljmp
cmp
push
and
inc
aas
cmp
dec
mov
cli
push
inc
sub
mov
jge
stc
ret
adc
test
pop
xlat
jecxz
jb
and
scas
cmp
fs
shr
ljmp
jecxz
lods
xchg
adc
lahf
and
gs
cltd
ret
test
mov
sti
mov
sub
adc
mov
fisubrl
stos
nop
aad
into
mov
push
lock
popf
push
jmp
addb
icebp
xor
sub
sub
out
pop
mov
inc
std
call
ret
fs
roll
push
push
loope
cmp
xchg
jno
ror
push
arpl
mov
add
bound
sbb
xor
mov
push
mov
test
pusha
cs
xchg
test
imul
sub
dec
insb
fstpl
xchg
notl
inc
sahf
pop
add
or
insl
bound
push
aaa
testl
xor
and
add
push
sarl
mov
mov
imul
outsb
cmc
jl
dec
cmp
in
into
stos
inc
test
jno
jne
dec
inc
or
jg
inc
test
adc
jns
add
add
add
jbe
jl
add
sbb
mov
in
mov
add
imul
and
jle
xchg
daa
pop
lret
sub
inc
test
adc
popf
jns
sbbb
lret
aad
ret
lods
pop
in
jg
mov
sahf
stos
cmp
lahf
testl
pop
push
mov
mov
cmpsl
mov
fnstcw
mov
mov
jnp
repnz
in
jns
dec
scas
mov
sub
cmpsl
pop
xor
icebp
mov
fmuls
decl
pushl
xor
mov
call
or
or
movsbl
cmp
je
jmp
xorl
jns
sbb
pop
lods
int3
mov
jle
push
adc
stc
adc
jmp
and
repnz
cmp
inc
push
push
add
ja
xchg
xchg
cmp
adc
dec
imul
imul
xor
inc
dec
mov
add
bound
dec
pop
jge
das
scas
stos
jmp
stos
cs
mov
sbb
push
xchg
cld
insl
mov
xchg
dec
test
cmp
fadd
add
push
mov
cmp
arpl
sbb
xor
rol
push
sub
mov
outsl
test
jmp
add
lea
and
jp
bound
adc
icebp
xchg
popf
jne
lcall
ficomps
outsb
lahf
pushf
pusha
sub
aas
hlt
cmp
adc
mov
scas
mov
cmpsb
les
mov
mov
loopne
xchg
ret
insb
test
push
mov
sbb
sub
lret
shlb
fistpll
and
push
js
sbb
imul
shrl
push
and
jl
nop
loop
xor
loop
imul
xchg
int
cs
scas
cs
cmp
ds
pop
mov
or
lods
pop
pop
lret
ret
sbb
or
mov
out
jo
and
mov
adc
in
rcrl
mov
and
sub
jp
pushf
icebp
data16
orb
dec
fsubl
data16
sub
cmp
dec
xchg
pop
mov
sbb
jle
test
aam
and
dec
mov
cmp
ljmp
jbe
int
pop
or
mov
outsb
cmp
add
cltd
jmp
int
xchg
jbe
add
jmp
inc
xchg
dec
pop
fildll
fidivs
push
repnz
add
or
ret
les
xchg
xor
or
push
adc
lods
sbb
push
mov
pop
leave
daa
out
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
jmp
adc
fldl
out
cli
pop
push
cmp
fs
adc
lret
push
jge
lods
pop
push
add
or
dec
pop
push
lods
mov
stos
or
enter
push
adc
cld
adc
mov
pop
pop
or
sbbb
divl
enter
mov
sar
arpl
repnz
fbstp
sub
in
mov
pop
cwtl
xchg
call
out
cmpsl
shl
movsl
sub
pop
sbb
push
imul
add
adc
lret
xchg
cmp
imul
adc
sbb
pop
ljmp
movsl
mov
mov
mov
ja
adc
mov
cmp
lahf
mov
mov
les
loope
int
adc
jb
and
mov
imul
sarb
add
push
pop
outsb
mov
js
sbb
and
cmovno
es
andl
xchg
pmulhw
jnp
movsl
lret
aas
sub
test
ja
xor
movsl
xor
push
jp
stc
jp
mov
push
ljmp
imull
addr16
xchg
mov
vhsubps
or
jg
mov
xchg
sahf
jnp
mov
sbb
pushf
add
dec
mov
aaa
movsb
aaa
rcll
sbb
adc
push
test
mov
ss
lahf
ss
xor
and
xor
adc
or
insl
fcompl
inc
push
or
sti
xchg
jge
inc
jae
in
stos
adc
cmp
push
jmp
push
ret
sub
ja
sbb
mov
sub
xchg
or
imul
inc
push
push
js
jl
adc
xchg
cmpsb
add
add
scas
sti
shrl
xor
push
into
test
mov
push
sbb
outsl
mov
das
scas
shr
add
fdivl
mov
sbb
sub
cmpsb
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
jmp
out
in
in
mov
mov
inc
pusha
adc
adc
sbb
jle
jmp
loopne
hlt
mov
mov
fsubs
dec
cmpsl
add
imul
add
aam
ljmp
xorb
gs
mull
lahf
sbb
sbb
int
pop
xchg
sub
jg
fnstcw
int
cmc
mov
mov
inc
jo
rcrb
pop
adc
add
mov
in
cltd
pop
outsb
xorl
cwtl
sbb
nop
push
pop
cwtl
stos
shlb
mov
fsubr
dec
cmp
cltd
inc
test
ljmp
rcll
das
inc
roll
fiaddl
pop
cmp
push
testl
aas
xor
xor
pop
jne
cli
ds
aaa
or
insb
ds
fldenv
stc
int
push
sbb
out
js
fs
dec
dec
ds
roll
inc
mov
test
ret
pop
stos
and
repnz
xchg
adc
fiadds
into
loop
xor
mov
imul
dec
movsl
inc
into
pop
inc
in
pushf
cld
mov
in
cltd
daa
and
and
test
push
push
xchg
jae
das
push
or
jae
sbb
cmp
mov
pop
dec
or
in
arpl
push
cmpsb
loop
aad
cmp
pop
push
mov
mov
jns
mov
stos
rolb
pushf
push
adc
adc
enter
sub
fbstp
sbb
movsl
fcmove
mov
push
fwait
mov
dec
xor
xchg
add
or
ljmp
idivl
adc
cmp
add
fwait
subb
jo
loopne
pop
xor
add
cmp
pop
jle
into
adc
sbb
cmpsb
cltd
aad
push
icebp
loope
or
call
and
aam
cltd
mov
fidivrs
xorb
sub
das
int3
mov
xchg
out
jp
orl
test
dec
push
test
sahf
mov
test
test
add
sub
mov
movl
jmp
adc
add
jnp
bound
ss
and
adc
adc
andb
call
out
dec
add
lds
jns
cli
pop
movsb
ds
sbb
xchg
xor
xchg
cs
inc
mov
test
xor
lods
cmp
imul
rcrb
sti
push
push
fimuls
mov
mov
loop
js
push
jo
xchg
jle
jne
loope
mov
pusha
cli
pop
add
xor
jo
cmp
pop
mov
fadd
sub
sbb
mov
mov
test
mov
pop
outsl
in
pop
mov
addl
test
jne
cmp
in
add
jl
aaa
or
loop
and
fiaddl
adc
in
daa
dec
xchg
adc
loope
or
sbb
jne
out
inc
loope
sarb
pop
daa
mov
in
add
sub
push
cmpsl
std
icebp
mov
out
mov
push
and
xor
cmc
sti
mov
lret
push
push
js
mov
lods
cmp
jge
pusha
lock
fisttps
push
jl
inc
xor
dec
dec
xchg
push
stos
inc
mov
int3
ret
jecxz
mov
push
pop
test
hlt
cmp
icebp
sti
dec
lock
pusha
inc
xchg
jne
push
push
mov
lcall
ficomps
mov
adc
jb
leave
mov
and
push
push
sbb
xor
fcmovbe
sub
cmp
sbb
push
mov
cmp
jbe
dec
mov
out
jl
outsb
dec
addr16
popa
in
cmp
push
and
sub
psraw
jb
out
out
hlt
push
push
bnd
in
inc
push
lcall
jnp
fstps
pop
cmpl
rorb
stc
dec
jp
xor
push
repz
sub
sub
adcb
stc
mov
cmp
insl
pop
inc
push
mov
loop
jle
fsts
enter
mov
imul
lods
aaa
andl
ljmp
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
jmp
or
addl
leave
pop
pop
cwtl
cmp
push
jo
lods
stos
pop
adc
adc
imul
sahf
jb
aaa
mov
mov
dec
out
pop
sub
inc
mov
aam
or
mov
mov
lea
mov
xchg
xor
inc
push
rolb
testl
ficoms
sbb
and
bnd
inc
insl
or
xor
xchg
imul
add
in
mov
dec
cltd
aam
push
lret
cld
xor
iret
subb
aam
jno
ret
leave
sub
ja
inc
test
adc
int
icebp
xchg
aad
push
sub
testl
insb
rcrb
sub
jbe
jp
addl
or
movsb
lods
outsb
fdivl
dec
pop
mov
dec
add
aam
push
sub
sbb
jmp
mov
add
flds
mov
and
cmc
in
repz
je
push
jne
notb
imul
xor
sub
sub
nop
icebp
shl
add
insb
js
and
stos
xor
mov
mov
pop
inc
xchg
inc
mov
leave
stos
ret
xor
rcl
imul
shl
pusha
and
xchg
add
xchg
xchg
sub
push
lods
lcall
mov
out
stc
mov
jnp
addr16
dec
sbb
fsub
jbe
sahf
push
pusha
cmp
mov
pop
xor
int3
mov
jae
dec
ret
sub
out
cmp
mov
mov
inc
lods
fisubrl
into
leave
ljmp
xchg
dec
mov
movsl
call
aad
shr
in
sub
add
daa
xchg
ja
mov
sbb
rorl
or
push
pop
hlt
loope
in
enter
js
lahf
jecxz
mov
jg
mov
lret
fucomip
inc
out
jle
ds
test
mov
xor
enter
fisubs
enter
test
dec
push
pop
das
push
mov
nop
cwtl
ds
loope
jo
sbb
mov
in
pop
fwait
stc
xor
dec
push
sub
rcrb
jg
out
je
stc
call
jmp
jl
sub
pop
gs
fistps
cltd
fdivrs
loope
cli
mov
cwtl
scas
xchg
adc
mov
pop
cmpsb
test
imul
push
xchg
add
mov
jo
fs
add
xchg
sub
cmp
and
inc
pop
inc
mov
fnstcw
test
and
pop
scas
inc
les
jbe
test
mov
or
cmpsb
clc
cmp
test
sarb
into
fldt
sub
pop
orb
shlb
imul
mov
xchg
test
stc
divw
lds
adc
dec
rcrb
repnz
sub
rorb
jb
xchg
sar
shrb
mov
or
movl
jne
mov
xor
mov
sbb
xor
movzbl
adc
div
xor
xor
sub
mov
mov
movzwl
sub
mov
xorl
div
mov
mov
movl
jmp
sbb
mov
xor
mov
mov
add
mov
adcl
shr
movl
rcr
shr
movl
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
movl
cmpl
je
add
jmp
fwait
mov
xchg
sbb
push
push
push
adc
adc
in
mov
cmpb
in
jecxz
mov
out
or
pushf
in
shll
mov
out
or
inc
arpl
mov
pop
jle
inc
fucomip
negl
loopne
push
mov
or
rcr
shll
fwait
test
loopne
lret
add
data16
ss
out
xchg
movsb
mov
cmp
arpl
xchg
cmp
test
fnstsw
mov
xchg
pushf
std
dec
xor
in
daa
push
aad
sbb
mov
fsts
sahf
fs
ds
popl
sub
cmp
cmpl
jge
in
and
int3
or
inc
xor
adcb
dec
aas
sbb
push
or
js
test
loop
lods
rorl
jb
popf
lea
xchg
adc
sbb
fwait
jns
in
xchg
enter
or
lret
loopne,pt
mov
xor
pop
add
jmp
js
cmp
mov
aas
xor
pop
xchg
movsl
insl
out
int3
ret
sahf
in
lods
mov
filds
mov
push
push
jge
xlat
sti
jle
jge
fnstcw
adc
jns
movb
icebp
jae
cmp
loop
imul
push
jne
shll
fs
xchg
lods
lds
xor
cld
fwait
out
push
aaa
add
leave
mov
leave
dec
cltd
test
push
lds
pop
dec
insb
xchg
cmpsl
mov
andb
hlt
jle
sub
add
pushf
lret
cmp
sub
sahf
shrb
lods
jmp
jp
mov
push
shll
jecxz
ljmp
pop
repnz
mov
pop
mov
fimull
in
fisubrs
test
arpl
sub
fmuls
rclb
xor
cld
sbb
push
sub
mov
dec
repnz
fldl
xchg
hlt
xor
mov
sbbl
or
ds
adc
cmc
ss
push
or
out
in
icebp
stos
hlt
sub
in
add
xchg
mov
mov
add
loop
repz
sbb
sub
je
mov
repz
insl
cmpb
sbb
fisubrs
call
ss
cwtl
cmp
inc
push
pop
lret
out
and
lcall
sbb
pop
add
lock
mov
or
dec
xor
shll
cmp
mov
nop
sbb
scas
fidivrs
and
mov
ret
fs
mov
loopne
cld
repz
fldt
mov
movsb
lds
movsl
sub
jns
test
pop
or
jecxz
stos
dec
std
push
mov
push
inc
bound
or
push
test
push
das
pop
mov
or
pop
frstor
test
pushf
add
sbb
shlb
adc
fadds
inc
mov
subb
outsb
mov
xchg
loopne
lret
cwtl
daa
mov
es
fisttpll
imulb
repz
ror
dec
push
fcoml
mov
not
mov
pop
movl
pop
pop
leave
ret
movl
cmp
jae
movl
cmp
jae
sbbl
shld
shl
ret
mov
orl
xor
adcl
and
shl
ret
xor
xor
ret
