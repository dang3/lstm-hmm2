push
mov
sub
mov
mov
inc
mov
sbbl
sub
push
mov
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jge
push
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
mov
movl
jmp
movl
jle
push
call
xor
sub
and
movl
movl
mov
add
add
add
mov
add
mov
adcl
sub
mov
sbb
xorl
mov
orl
andl
orl
jmp
loop
jns
cmp
lcall
decb
adc
adc
adc
lds
fisttpl
lds
lods
add
in
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
cli
mov
testl
imul
rorb
or
adc
cwtl
sub
adc
enter
cmpsb
mov
mov
aam
int3
stc
xor
cmc
jmp
das
add
mov
das
mov
iret
mov
out
xchg
mov
and
fldcw
lock
adc
pop
daa
gs
or
cltd
aad
sbb
iret
iret
mov
add
mov
inc
adc
xor
xchg
add
adc
daa
inc
dec
dec
dec
cltd
jne
test
adc
in
push
test
jbe
pop
jle
push
mov
pop
jp
out
mov
mov
jmp
mov
mov
daa
shrl
add
cmp
js
gs
pop
ja
sub
adc
adc
xchg
gs
aam
cwtl
out
lock
nop
je
test
push
movsl
cwtl
pop
or
and
cmp
addr16
idivl
mov
adc
enter
in
out
cmp
or
out
pop
sub
mov
xchg
or
and
rcrl
adcl
rorl
xchg
push
insb
adc
aaa
pop
add
test
loope
leave
stc
repnz
fwait
push
js
inc
fcom
push
shll
jb
jecxz
jnp
inc
jb
ja
pop
stc
sahf
sub
and
or
push
and
mov
pushf
push
fs
push
sub
mov
jns
or
clc
pusha
inc
mov
mov
xchg
push
lret
scas
fs
negl
popa
sti
pusha
fs
xor
push
jle
lret
mov
mov
or
jmp
jns
mov
js
push
mov
xor
gs
jb
stos
mov
add
adc
xchg
iret
jns
into
int
adc
lahf
push
nop
mov
pop
inc
cli
ds
movsl
ds
inc
cmpsl
inc
pop
pop
popa
push
loopne
les
pushf
out
lahf
into
stc
mov
add
insb
xlat
ret
enter
pop
push
out
out
out
inc
jno
stos
push
pop
or
or
sbb
js
cmp
xchg
jno
leave
mov
mov
jecxz
sbb
into
mov
cmpsl
or
sbb
insb
and
iret
in
inc
popf
ficompl
inc
fcmovb
cmc
arpl
into
xor
lock
push
sbb
data16
mov
data16
mov
or
sub
lods
les
pop
scas
out
sti
fcmovbe
call
les
inc
push
in
stos
mov
cmp
xchg
hlt
lods
lock
andb
stc
fisttps
pop
push
add
inc
inc
lods
pop
insl
add
xor
out
dec
xchg
movsl
sahf
mov
pusha
sbb
cmp
push
lea
mov
cmpl
mov
mov
movl
mov
jmp
mov
mov
jne
pushl
push
push
call
and
adcl
andl
xor
or
mov
movzwl
and
mov
and
mov
add
movzbl
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
mov
jb
pushl
call
movzbl
adc
and
sbb
movzbl
xor
mov
or
sbbl
mov
cmpl
movl
movl
jmp
mov
mov
jg
push
push
pushl
pushl
call
sbb
dec
xor
sub
or
mov
sub
mov
add
shrd
shr
and
mov
mov
sub
mov
subl
xor
orl
xor
movl
or
xor
jmp
ljmp
cltd
daa
mov
push
arpl
int
adc
int
adc
and
pop
sbb
or
dec
mov
dec
add
out
dec
push
pop
push
push
fildll
mov
pusha
mov
xchg
inc
push
dec
mov
sbb
jl
pop
leave
jg
loop
push
pop
cmc
daa
shr
iret
aas
dec
inc
in
sub
movsl
pop
pop
pushl
sarl
int
mov
lahf
test
sarb
test
sti
pop
aaa
or
scas
pushf
mov
pop
je
mov
adc
sub
loope
cmp
sbb
cmpsb
in
xchg
push
lods
ja
sub
test
jno
sbb
mov
cwtl
fcompl
in
mov
cmp
push
push
push
dec
jo
inc
mov
aas
adc
inc
sarl
push
fisttpll
shl
sbb
or
fnsave
sub
or
arpl
flds
aas
xchg
mov
sub
ficomps
push
xchg
je
adc
stos
movb
xor
daa
xchg
mov
out
decl
pusha
add
add
or
test
pop
pop
push
leave
push
pusha
popa
sub
mov
mov
cmpsl
insl
pop
pop
sbb
insb
jecxz
mov
pushf
bound
outsb
fmull
fcomps
repz
mov
ss
iret
loope
jo
dec
cmp
sub
movb
pushf
push
mov
push
lds
int
roll
mov
mov
pushf
dec
into
out
sbb
adc
aam
mov
mov
xchg
push
xlat
mov
decl
and
sbb
sbb
inc
xchg
mov
out
add
loop
stos
mov
pop
mov
pop
push
out
out
or
aas
cmp
cmc
pop
insl
ret
jns
xor
adc
cs
and
popa
mov
outsl
mov
jle
out
pop
mov
imul
mov
lret
orl
lahf
push
mov
jo
repz
arpl
sub
and
push
push
dec
clc
inc
pop
pop
add
jle
xchg
pop
push
jns
mov
shlb
dec
loop
mov
fbstp
daa
jb
bnd
daa
pop
cmc
pop
test
repnz
pusha
scas
dec
mov
sarb
stc
or
inc
js
and
add
andb
jnp
es
sbb
loop
add
sbb
icebp
cmp
rolb
fstpl
dec
dec
punpckldq
lea
and
mov
lea
cmp
pop
cld
lret
call
push
xor
mov
xchg
sahf
mul
add
aaa
std
mov
je
cmc
test
int
pop
mov
cmpxchg
sub
pop
sbb
add
and
xor
add
push
lea
mov
shr
popa
dec
and
daa
insl
mov
push
add
jp
std
xor
stc
sub
push
popa
ljmp
dec
push
loope
lea
and
ds
pop
pushf
fs
inc
scas
dec
cwtl
mov
dec
test
cmp
sbb
mov
sbb
inc
jle
jl
cmp
aam
dec
into
fs
jb
push
add
leave
jle
rcrb
mov
cmpsb
leave
shlb
cmp
add
adc
movl
movl
movl
jmp
mov
jle
pushl
push
pushl
pushl
push
call
sbb
addl
add
xorl
add
movl
sbbl
movl
sub
movl
xor
xor
and
movl
sub
movl
sub
movl
sbb
movl
sub
movl
cmpl
movl
movl
jmp
movl
mov
jb
pushl
pushl
push
pushl
push
call
andl
notl
andl
orl
addl
sbbl
movl
sbbl
movl
xorl
movl
xor
movl
movl
cmpl
movl
movl
movl
jmp
mov
jbe
push
push
push
push
call
subl
adcl
movl
adcl
sbbl
adcl
movl
sub
movl
movl
adcl
movl
negl
movl
cmpl
movl
movl
jmp
movl
jbe
push
pushl
pushl
call
adc
addl
orl
sbbl
notl
adcl
xor
movl
movzbl
xor
movl
cmpl
movl
mov
mov
jmp
mov
je
push
push
push
push
call
xorl
negl
xorl
subl
andl
adc
sbb
movl
inc
movl
mov
xor
mov
xorl
shl
mov
or
mov
mov
subl
push
xorl
push
adcl
push
subl
push
adcl
call
and
mov
sbb
mov
adc
xor
xor
or
add
mov
mov
xor
sub
mov
adcl
jmp
into
mov
and
daa
cmp
adc
int
adc
mov
inc
ljmp
push
lahf
stos
adc
xor
and
jle
loopne
dec
popa
es
pusha
aaa
aad
cltd
inc
clc
aad
fstpl
jl
mov
add
lea
mov
adc
ret
daa
fs
push
leave
cmp
daa
icebp
xchg
out
mov
jg
push
leave
pop
int
popf
lahf
mov
scas
inc
outsl
repz
jnp
or
xor
lods
shl
scas
mov
cmp
clc
sbb
repz
cmpl
enter
cmp
into
cmc
loopne
dec
dec
inc
int3
pop
push
and
call
mov
out
adc
mov
pop
mov
mov
mov
mov
gs
addr16
and
sub
outsl
test
shr
xor
mov
push
cmp
and
fisttps
mov
push
push
cld
mov
lds
push
pop
int
push
mov
aaa
push
icebp
xchg
and
ss
xchg
test
mov
cmpsb
jae
adc
daa
xchg
mov
shlb
out
pop
push
int
test
sub
push
bound
mov
jle
outsb
or
dec
push
mov
mov
in
out
pop
sub
ficomps
jns
adc
sahf
or
mov
popf
mov
inc
not
mov
jae
cltd
adc
pop
jns
ds
mov
jl
sbb
les
xadd
mov
imul
mov
jno
push
orb
dec
pmaxsw
stc
fildll
addr16
push
pop
xchg
cs
xchg
je
ljmp
mov
mov
dec
pop
sbb
jge
xor
inc
movsl
mov
pusha
aaa
aas
mov
test
jmp
xchg
mov
jl
mov
mov
mov
imull
jge
lcall
leave
pop
sbb
xchg
cmpl
sub
xchg
lods
cwtl
fdiv
xor
sbb
and
mov
mov
xlat
mov
aad
sti
sbb
sbb
adc
call
push
or
push
rcll
out
sub
xchg
or
dec
mov
cmc
int3
rorl
addr16
dec
or
je
pop
sbb
push
xchg
jge
test
inc
inc
pop
jecxz
leave
jns
sub
xchg
andb
pushf
movsl
sbb
adc
lds
pusha
xchg
cltd
or
cmp
sub
xchg
in
push
stos
push
cmp
push
ds
out
cli
sahf
sarb
rcll
jo
in
and
push
inc
insl
sbb
enter
das
dec
faddp
xor
insl
sub
jne
fsubrp
xchg
sbb
push
notl
sub
scas
cmpb
inc
je
mov
out
lock
ljmp
cmp
and
push
scas
mov
push
mov
pop
jmp
mov
mov
jle
mov
xchg
inc
sarl
enter
jl
pop
and
dec
and
ljmp
bound
dec
stc
outsl
mov
mov
sbb
lods
xor
sbb
test
mov
xor
loopne
sub
gs
loop
aas
out
movsb
mov
push
subb
stos
push
xchg
test
idivl
cs
decl
icebp
in
add
add
mov
or
and
xor
mov
or
andl
xor
movl
cmp
jmp
xlat
test
push
xlat
popa
dec
lcall
cmp
adc
int
adc
leave
stos
and
jmp
sub
fcmove
fsubl
jmp
scas
out
in
pop
mov
scas
mov
push
js
mov
stos
test
pop
cld
out
xchg
rep
adc
mov
add
neg
mov
push
les
lods
push
pop
js
pop
lret
mov
add
scas
lret
push
jle
sbb
push
in
pop
xor
pop
call
js
ljmp
pop
scas
adcl
adc
stos
xor
popa
cwtl
icebp
fisubrl
popf
cmc
cmp
fyl2x
inc
push
cmp
sti
push
jno
loope
std
dec
aam
movsl
mov
lods
push
addr16
into
dec
push
push
xor
xor
and
shlb
nop
cmpsb
mov
je
jb
insb
jg
lret
mov
inc
icebp
and
loopne
mov
add
ja
fstps
mov
in
roll
push
iret
fcomip
pop
aad
ror
add
jmp
cs
cmp
imul
adc
sub
stos
mov
nop
and
icebp
mov
es
sbb
ret
ss
subl
movb
sahf
popa
sbb
out
in
outsb
xchg
fwait
mov
and
sbb
pop
pop
jne
dec
js
mov
insl
into
shr
adc
jnp
mov
or
ljmp
clc
test
sub
push
cmp
adc
mov
dec
mov
bound
insb
push
xchg
sub
mov
sbb
sbb
lods
outsb
pop
dec
add
mov
cmpsb
cmpsl
cli
mov
out
dec
jb
sbb
xchg
push
pop
sbb
inc
call
push
gs
dec
mov
mov
or
xor
push
sbb
leave
stc
xor
mov
out
ss
loope
adc
or
insb
xchg
push
movsl
cltd
adc
push
movsl
push
add
outsb
fs
add
rolb
jo
push
xorb
sbbb
dec
scas
xchg
rclb
aad
enter
int
add
push
push
and
jnp
lret
xchg
mov
and
or
and
and
adc
add
mov
jne
jg
mov
push
jp
fldt
dec
sub
popa
mov
into
xchg
mov
movsb
and
out
mov
out
inc
xchg
aad
js
and
stos
inc
repz
pop
sbb
dec
adc
test
dec
out
add
mov
mov
sbb
ss
pop
pusha
das
mov
adc
push
xor
mov
xchg
enter
mov
daa
inc
mov
aaa
nop
mov
shlb
js
lret
and
sti
stos
mov
dec
push
adc
pop
mov
outsl
pop
addl
fists
ss
mov
add
dec
das
sub
lods
aam
les
rcl
pushf
lahf
inc
pop
inc
cli
jae
xchg
pop
dec
jecxz
xor
sbb
jnp
popa
mov
imul
dec
push
inc
out
jno
jbe
adc
push
fcmovnu
adc
mov
fldl
pop
add
clc
inc
jae
es
es
inc
xchg
dec
mov
test
jge
mov
jns
rcll
test
pusha
add
add
mov
mov
cmpl
mov
movl
movzbl
jmp
movl
jae
push
push
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
shrd
shr
add
mov
mov
andl
shl
xor
addl
xor
or
mov
mov
movl
cmp
jne
mov
cmpl
not
mov
movl
jmp
movl
movl
je
push
pushl
push
push
call
adc
xor
or
mov
adc
not
decl
xorl
sub
and
mov
sub
cmpl
mov
movzwl
mov
jmp
movl
movl
jle
pushl
pushl
call
sbb
adc
add
sbb
sbb
movl
mov
xor
mov
mov
sub
mov
shrd
xorl
jmp
lcall
add
js
imul
notl
adc
adc
adc
jge
das
hlt
sbb
pop
imull
push
pop
sbbb
lret
lret
inc
es
or
dec
xor
out
fdivrl
lods
movsb
sbb
hlt
iret
xchg
iret
xchg
mov
fisttps
sbb
mov
loop
add
or
sbb
pop
mov
inc
jle
fstl
pop
xor
add
xchg
push
dec
jg
aas
xor
in
mov
gs
jl
pop
mov
stos
test
jecxz
or
mov
xor
addr16
push
inc
int3
push
in
mov
pop
pop
lods
sub
mov
enter
cmc
and
lea
addr16
daa
pop
fxch
jmp
sub
cmpsb
pop
nop
pop
call
stos
ret
lods
arpl
sbbb
movsb
and
sti
or
rorb
js
movsl
arpl
add
push
sub
jg
add
fs
push
mov
imul
test
or
xchg
in
int3
out
mulps
repz
clc
add
ret
movsl
cltd
xchg
fldenv
pop
js
ret
xchg
stos
into
jg
leave
push
add
fsubr
and
aas
ffreep
pop
mov
out
inc
out
mov
fmull
fwait
jne
dec
mov
stc
das
arpl
jns
mov
mov
sti
xor
fsubrl
mov
push
mov
lret
xor
xor
shrl
inc
in
into
aas
ljmp
pop
add
xchg
test
mov
das
or
or
int3
andl
dec
cli
adc
leave
loopne
daa
into
rcr
loope
test
inc
movsl
adc
pop
icebp
iret
mov
cmpb
mov
fsubrs
ror
lds
adc
enter
scas
sti
and
mov
dec
mov
mov
pop
xchg
push
fwait
inc
cmp
fldt
mov
nop
imul
jb
pop
xchg
int3
mov
mov
icebp
dec
sbb
xor
sahf
lods
sub
mov
call
mov
jne
repnz
or
mov
fwait
mov
xchg
call
fimull
std
lds
mov
jbe
cmp
lret
iret
adc
insl
and
roll
scas
scas
xchg
mov
push
cmpsb
mov
test
mov
cmc
nop
dec
xchg
cmpsb
jno
push
cwtl
sub
mov
lret
cmc
mov
mov
xchg
stos
mov
mov
jl
pushf
sub
in
bound
sub
mov
push
pop
mov
mov
add
mov
and
dec
sbb
xlat
push
pushf
imul
mov
dec
int3
cmp
jo
push
xlat
sub
lods
mov
dec
sub
sbb
xor
or
test
insl
sbb
cmp
ret
jp
jnp
inc
ljmp
inc
scas
mov
xchg
in
rol
outsb
shl
loopne
inc
out
incb
fs
addr16
mov
cmpl
sahf
inc
push
lcall
push
imul
fwait
adc
aam
sub
jno
pop
mov
sbb
adc
lret
push
add
xchg
pop
mov
mov
dec
mov
pop
fldl
add
ret
filds
ja
in
repnz
cmpl
mov
mov
jmp
movl
jle
pushl
pushl
call
sub
add
notl
sbb
xor
dec
sub
mov
xor
orl
shr
sbbl
mov
adcl
xor
andl
or
shl
cmpl
mov
mov
movl
jmp
movl
movl
je
pushl
pushl
call
notl
and
sub
and
not
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
jle
push
pushl
pushl
call
sbbl
adcl
movzbl
sbb
mov
movzbl
and
mov
movzbl
sbb
mov
add
add
mov
mov
mov
shrd
or
shr
cmpl
movl
mov
movl
mov
jmp
mov
je
pushl
call
and
and
sub
or
mov
mov
or
sub
and
mov
mov
xor
shl
adcl
xor
or
xor
mov
mov
shrd
shr
mov
sbb
mov
cmpl
movl
movl
mov
jmp
movl
not
ja
pushl
push
call
mov
xor
or
sub
add
mov
sbb
inc
mov
mov
sub
add
or
mov
sbb
mov
xor
xor
or
andl
shl
lea
subl
mov
mov
andl
shrd
subl
shr
cmpl
mov
movzwl
mov
movl
jmp
mov
movl
jb
pushl
push
push
pushl
call
xorl
neg
or
movzbl
sbb
movzbl
xor
mov
xor
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
je
pushl
call
movzwl
add
mov
add
movzbl
and
or
subl
neg
mov
cmpl
mov
movl
movl
jmp
mov
jge
pushl
call
sbb
xor
inc
mov
sub
mov
adc
adc
cmpl
movzbl
mov
jmp
mov
mov
jl
push
call
movzwl
and
movl
add
sbb
movzbl
sub
sub
xor
mov
xor
subl
or
orl
shl
xor
imul
mov
and
mov
mov
andl
shrd
andl
mov
mov
xorl
xor
shr
subl
mov
mov
sub
mov
xor
adcl
or
sbbl
shl
sub
mov
cmp
mov
mov
movl
jg
or
mov
sub
mov
movl
shrd
mov
xor
mov
sbbl
xor
movl
shl
xor
adcl
or
shr
or
mov
mov
adc
mov
mov
mov
addl
mov
sbbl
shrd
shr
adcl
mov
mov
movzbl
sbb
mov
addl
xor
xor
or
shl
addl
imul
andl
sub
movl
jmp
mov
adcl
mov
notl
shrd
mov
add
mov
addl
xor
movl
shl
xor
or
xorl
shr
xorl
mov
mov
mov
cmpl
mov
mov
not
jmp
movl
mov
jg
push
pushl
push
push
call
xor
xor
xor
sbb
addl
orl
neg
xorl
and
cmpl
movl
movl
jmp
movl
jle
pushl
call
xor
xor
mov
sbb
dec
not
mov
adc
cmpl
mov
mov
mov
jmp
movl
movl
jg
pushl
push
push
push
call
xor
add
or
mov
movzbl
and
notl
adc
or
adcl
sub
mov
shrd
shr
mov
mov
jmp
xchg
icebp
mov
icebp
out
loopne
scas
push
out
cmpsb
out
adc
int
adc
push
negb
push
fistps
xor
dec
jae
lcall
lret
mov
test
dec
xchg
jb
mov
bndldx
mov
orl
sti
xchg
jnp
shlb
stos
adc
cld
jge
mov
add
pop
xchg
ret
pop
scas
xlat
and
insb
push
push
mov
call
mov
imul
jl
mov
adc
jmp
push
out
shr
push
xor
clc
or
sub
jne
in
das
repnz
dec
push
clc
je
cmp
xor
dec
out
cli
loopne
adc
divl
sbb
inc
mov
dec
fstl
cmp
sub
jle
cmpsb
jnp
mov
ret
ret
in
xchg
push
mov
jae
xchg
outsl
mov
std
fidivrl
xchg
jg
xor
lods
push
sub
lods
ss
arpl
inc
lea
push
scas
mov
add
fsubrp
icebp
test
push
mov
loopne
xor
pavgb
lcall
mull
sbb
dec
loope
sub
or
aad
xlat
in
shlb
add
mov
enter
mov
mov
movsl
orb
jl
add
jbe
jne
orl
push
xchg
mov
lahf
jb
movmskps
shll
pushl
and
dec
lea
xor
inc
ja
test
in
adc
mov
mov
icebp
loope
pop
mov
or
cmp
adc
mov
stc
into
stos
scas
sub
daa
pop
out
lea
icebp
leave
adc
inc
push
and
dec
sarb
ja
setge
jmp
pusha
add
xchg
xor
pop
clc
jg
incl
pusha
dec
shrl
mov
cltd
inc
adc
ljmp
dec
lcall
sub
mov
pusha
aad
sub
scas
sahf
stc
mov
sub
rorl
push
cmp
and
imul
dec
into
or
or
mov
lds
sbb
or
jg
loopne
mov
movsl
and
push
test
xchg
jp
lds
push
xchg
stos
sub
lahf
cmp
popf
push
and
or
sbb
inc
popf
lods
push
scas
mov
xchg
adc
fmull
xor
inc
xchg
test
fsubl
mov
imul
mov
cwtl
pusha
jno
frstor
dec
pop
and
dec
inc
daa
pop
sarb
ss
iret
pop
movsb
add
das
adc
rolb
das
push
inc
pop
sbb
jns
int3
hlt
stos
out
adc
cmp
ss
or
divl
out
outsb
sbbl
mov
dec
out
dec
inc
stc
xor
and
lds
inc
cmp
stos
outsl
push
add
or
jge
add
int3
adc
shll
sub
inc
movsb
rcll
and
in
bound
jae
add
pop
insb
aas
or
jns
xor
pop
test
test
in
mov
stc
mov
xchg
arpl
jp
inc
jmp
loopne
cmp
push
and
daa
fcmove
cmpsl
push
dec
xchg
push
sub
hlt
mov
pop
adc
cmpsb
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
jmp
lret
lea
push
push
and
xor
mov
in
adc
int
adc
mov
into
outsl
xchg
idivb
addb
push
mov
shlb
in
mov
sti
shrl
fisubs
and
gs
mov
ss
pusha
mov
and
adc
pop
sub
adc
or
fistl
lret
arpl
xor
jmp
in
push
int3
mov
loope
dec
xlat
or
add
std
movsb
lods
fnstsw
jno
xor
ret
mov
dec
jns
mov
rcr
imul
push
push
inc
imul
outsb
xor
xchg
inc
and
dec
das
jg
jae
mov
std
xchg
subl
mov
repnz
mov
icebp
fldl
sbb
or
and
stos
jno
mov
pop
push
ss
cmp
adcb
sbb
cmc
jb
xor
movsb
movsl
ljmp
inc
mov
aas
push
inc
fwait
bound
aaa
outsl
pusha
inc
aaa
or
mov
push
sahf
or
mov
sbb
int
addr16
stos
mov
lcall
inc
jg
hlt
mov
xchg
stos
sbb
xchg
or
push
leave
cld
fistpl
jns
idiv
mov
pop
pusha
jg
subl
rorl
ret
and
mov
cltd
pop
in
ret
sbb
mov
in
in
inc
test
pop
fldlg2
test
mov
pushf
rorl
sbb
fdivrl
mov
repz
scas
lock
hlt
cltd
mov
out
je
pusha
inc
inc
and
inc
mov
pop
cmp
ss
fsubrs
in
in
or
call
mov
pop
or
sub
dec
inc
out
test
inc
insb
xor
imul
fsubrp
push
pusha
call
test
int
js
mov
or
je
push
imul
dec
pop
mov
call
xor
das
push
ljmp
mov
jmp
jno
jmp
scas
push
jmp
fmuls
pop
lock
repnz
scas
jl
push
lret
daa
sub
xor
test
rorb
xor
xor
ss
push
jae
rcrb
mov
jmp
nop
mov
repnz
out
push
lret
out
cmp
cmpsl
mov
lret
sub
insb
lret
jge
push
push
push
loop
mov
inc
inc
xchg
inc
cmp
sub
pop
push
mov
jns
frstor
outsb
cmpsb
jae,pt
es
sti
push
loope
cwtl
sti
call
iret
pop
dec
movsb
std
ret
sub
push
jne
push
cs
cmpsl
ficompl
dec
ss
adc
cmc
hlt
sbb
loopne
xchg
into
rclb
stos
subb
or
xchg
cmp
add
shll
fadd
lods
popf
sbb
lods
inc
in
call
mov
xchg
push
xor
mov
lods
add
rclb
adcb
adc
dec
fimull
scas
cmpl
inc
sub
and
mov
mov
and
cs
xchg
mov
daa
sti
jo
fstl
dec
dec
and
out
sbb
xor
add
mov
int
icebp
mov
stos
addr16
scas
dec
std
mov
movl
mov
movl
mov
mov
mov
shrd
shr
jmp
fsubrs
fldenv
jnp
push
push
out
adc
adc
adc
test
dec
scas
out
mov
fmull
mov
mov
dec
out
push
sahf
dec
mov
push
rcl
pop
or
push
std
in
stos
rcrl
pop
mov
push
sbbl
pop
shll
add
out
ds
mov
xor
push
sub
out
outsl
jne
mov
push
push
adc
fdecstp
pop
xchg
cmpsb
aas
gs
mov
clc
cmpb
xchg
lods
insl
lea
sub
mov
ljmp
push
xchg
ret
arpl
sbb
push
xchg
mov
adc
rcrb
scas
xacquire
pop
and
add
sbb
cmp
push
xchg
push
hlt
lods
mov
test
dec
pushf
push
test
pop
adc
stos
ja
out
sbb
inc
adc
cli
or
mov
mov
fcompl
int3
push
cltd
push
adc
pop
mov
idivl
pop
xchg
mov
xor
inc
leave
adc
stc
xor
ficoml
jmp
stos
fdivrl
in
popf
inc
hlt
sub
call
dec
nop
movsb
aad
sub
out
mov
out
jmp
cmp
sti
mov
lock
jb
inc
shr
lret
dec
xlat
movsb
xlat
test
fstpt
adc
xor
mov
push
and
pop
adc
xchg
out
xchg
pusha
incb
into
test
adc
insl
in
xor
jo
in
adc
icebp
mov
cmp
mov
vpcmpeqw
pop
lock
mov
xorl
mov
lds
sub
fisubs
and
dec
imul
xor
rcrb
cli
or
movsb
sbb
jb
insb
rolb
cwtl
cmp
pop
jle
jne
jp
jnp
sbb
dec
in
and
test
shll
pop
mov
or
sti
dec
in
sti
push
sub
ljmp
call
jnp
jmp
jmp
push
fucom
cmp
out
xchg
xor
shlb
and
loope
aam
inc
sbb
ror
xchg
and
mov
mov
in
out
mov
scas
mov
mov
leave
addr16
jo
sti
sbb
mov
pop
ret
je
jnp
push
outsl
jnp
stos
imul
imul
push
cmpb
adc
sarl
std
cltd
das
je
mov
mov
cmpsb
int3
imul
add
push
xchg
in
sub
jnp
jns
outsb
inc
dec
or
test
daa
push
cmp
lcall
mov
push
cmpsl
pop
movb
and
fistl
in
cli
aaa
xchg
push
and
dec
data16
cld
sbb
lock
stc
or
inc
push
fs
cmp
scas
and
subb
pushl
jmp
sbb
mov
lret
mov
loope
out
ds
sti
lods
insl
xchg
jp
jmp
adc
or
inc
sti
and
lret
aaa
and
xor
out
mov
mov
dec
and
ds
jg
fcmovnb
sti
inc
inc
or
das
xor
push
fcoml
es
sbb
jg
outsb
nop
xchg
iret
xchg
insl
dec
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
jmp
orb
mov
outsl
loopne
ficoms
adc
adc
adc
fstpl
outsb
pop
adcb
add
negb
je
dec
sahf
out
out
mov
xor
mov
lcall
push
scas
cltd
stc
push
cmpsb
sarl
fists
lret
jae
ss
fmuls
addr16
shlb
mov
cli
aam
fadd
iret
jo
leave
xchg
dec
mov
mov
ret
push
pop
inc
cwtl
mov
or
push
inc
lret
and
test
or
sbb
aas
out
repnz
out
xor
mov
fxch
jb
and
movsl
push
mov
sub
dec
movsl
or
cmp
lock
popa
test
mov
test
fcomip
ret
loopne
jl
fmuls
mov
inc
gs
roll
cld
push
pusha
inc
repz
stos
push
les
and
sub
push
inc
mov
in
xchg
xor
and
cmp
sbb
xchg
push
test
sub
outsl
sbb
sub
mov
les
dec
and
call
inc
add
cwtl
outsb
jno
scas
or
pop
cmpsl
rclb
test
pop
or
jmp
add
inc
mov
add
mov
jp
scas
add
pop
movsl
inc
pop
cmpsl
fwait
sub
or
lcall
pop
adc
nop
adc
pop
mov
stos
jno
jnp
sbb
xor
clc
repz
xchg
rcll
xchg
outsb
add
cmpsb
push
mov
cld
sub
repnz
push
sbb
inc
scas
pop
inc
mov
push
lods
lea
add
jb
pop
pop
out
imul
enter
ja
cld
mov
push
mov
nop
ja
push
mov
sbb
movsl
or
add
adcl
push
movsb
cltd
fwait
mov
in
dec
ss
inc
sbb
in
adc
jnp
sahf
and
inc
mov
jle
pop
out
leave
aas
or
fwait
add
movsl
lods
jne
ja
js
arpl
mov
pop
das
xor
sub
and
das
pop
xlat
jl
pop
jecxz
imul
jnp
lcall
pop
push
mov
data16
pop
jns
dec
test
xchg
movsb
mov
adc
in
xor
sbb
out
push
cltd
dec
and
sub
dec
imul
out
mov
nop
je
ficompl
pop
cld
or
and
cld
lea
sub
daa
mov
lods
pop
mov
sti
mov
mov
insb
and
ret
mov
subb
adc
scas
xchg
sbb
bound
cmp
mov
dec
fildll
stos
sbb
sbb
xlat
jne
xchg
popf
in
xor
sbb
push
mov
aam
and
sahf
mov
dec
and
subl
adc
rorl
ja
jbe
sbb
sub
sub
push
jl
mov
and
jp
stos
sbb
popa
xchg
mov
fimull
jp
cmc
mov
sbb
outsb
ja
add
mull
adc
jo
push
mov
mov
pushl
jl
xchg
cli
add
sbb
rolb
cltd
xor
mov
mov
shl
jmp
fmuls
sbb
imul
insb
jge
adc
int
adc
jns
jnp
in
inc
pop
push
lret
ss
sbb
cmp
mov
out
adc
imul
pop
dec
loope
xor
xchg
outsl
mov
loop
add
inc
pop
sub
mov
adc
clc
mov
sti
lea
push
sti
inc
imul
jae
outsb
popa
or
cs
in
sti
adc
xchg
push
cmp
sub
jmp
and
lods
mov
aas
scas
push
orb
ja
and
lods
sbb
push
ret
lret
es
mov
idivl
lcall
inc
sbb
pop
cmpsl
mov
divb
int3
nop
stos
cmpl
jmp
in
jo
int
dec
xchg
out
push
or
adc
inc
scas
icebp
ret
lods
rol
mov
enter
push
and
leave
or
std
out
xor
fildl
push
and
rcrl
push
push
add
dec
imul
imul
xchg
cmpsb
sub
sub
add
out
push
and
fst
and
mulb
push
imul
and
jecxz
jecxz
inc
xor
dec
and
test
test
inc
testl
arpl
xchg
testl
dec
pop
enter
movsl
pop
inc
jge
div
dec
les
int3
cmp
jl
pusha
test
adcb
in
or
and
iret
push
mov
out
in
jg
lahf
fs
call
pop
cmc
push
push
ret
fs
inc
jmp
cmc
repnz
jbe
imul
and
mov
and
xor
lea
xchg
inc
iret
or
and
xor
xchg
pop
ds
jle
dec
cmp
int
inc
pop
dec
pusha
pusha
pusha
loopne
or
cmpsl
mov
xlat
push
sbb
add
das
fwait
divb
jno
popf
pop
pop
fdivrl
out
rclb
mov
push
fdecstp
testl
imul
push
std
mov
jae
xchg
jne
sbb
lea
mov
xor
subb
push
sti
clc
outsl
ds
outsb
jae
mov
xchg
mov
mov
sbb
mov
cmp
cmp
pop
inc
mov
mov
dec
std
arpl
dec
mov
rclb
test
mov
ret
mov
sbb
cltd
inc
test
daa
and
xchg
popa
mov
inc
lea
xchg
mov
mov
jp
xor
jg
sub
jmp
cli
lock
daa
roll
xrelease
lret
add
jecxz
or
jl
jbe
jp
xchg
mov
aas
testl
cmp
rcrb
sarl
xor
orl
push
pop
popf
sar
or
adcb
prefetch
or
adcl
cmc
xchg
sub
stos
push
sahf
sarl
fcmovnu
xchg
add
dec
into
je
repnz
sti
popf
scas
stos
int
daa
into
sub
loopne
mov
inc
jmp
xor
ret
dec
adc
mov
rcr
and
int
sub
inc
inc
push
scas
sti
mov
cli
es
fiaddl
shr
mov
dec
out
jno
jle
pop
mov
mov
push
mov
dec
jecxz
dec
add
inc
cmp
sub
push
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
jmp
dec
or
push
sub
loopne
ror
js
int3
adc
int
adc
stos
call
cmp
into
ret
mov
sbb
loopne
inc
imul
adc
lcall
jbe
mov
inc
pop
dec
call
addr16
pop
add
xchg
setbe
sbb
mov
mov
daa
sub
jg
scas
mov
fcomps
pop
adc
mov
mov
sbb
arpl
xchg
int
jbe
aas
or
leave
je
pop
and
jecxz
xor
outsl
push
xchg
and
mov
aaa
add
inc
mov
mov
mov
or
test
aad
cmp
scas
clc
sub
pop
imulb
or
add
push
push
dec
mov
mov
dec
cmpsb
divps
es
cmpsl
pop
cmp
pop
enter
sub
dec
push
in
xor
xchg
push
cmp
and
les
jecxz
daa
pop
mov
insl
hlt
xor
lods
sub
push
aam
sbb
dec
mov
mov
pop
add
dec
outsb
fsubs
cmp
sub
adc
mov
mov
mov
ja
push
leave
pop
inc
inc
clc
jnp
sbb
dec
jne
sbbb
push
inc
loope,pt
pop
imul
add
jb
or
xchg
loop
stc
or
cmpsb
jne
aaa
mov
fsubrs
mov
fidivrs
add
outsl
jnp
aas
mov
dec
mov
jmp
mov
or
xchg
enter
fcoms
ret
in
inc
ret
in
fsub
loope
daa
into
and
iret
cwtl
add
fucomip
inc
inc
jle
cmp
ja
inc
notl
std
out
bound
mov
std
inc
cmp
test
lock
xchg
insb
or
dec
stc
xor
add
popf
mov
mov
imul
and
aad
jns
insl
in
push
xor
push
adc
iret
cmp
std
pop
outsb
inc
aam
add
xchg
pop
out
xchg
cmc
dec
rclb
pop
xor
mov
imul
imul
mov
mov
std
mov
xor
lds
imul
mov
push
or
jne
cmpl
add
popa
int3
call
scas
xor
or
push
ss
adc
and
std
inc
pop
push
xchg
aas
scas
push
cmp
sbb
cld
inc
cmp
fs
fistps
and
mov
inc
cltd
loop
or
les
test
out
xchg
in
jle
stos
shlb
mulb
sub
or
push
xchg
out
iret
mov
xchg
es
adc
dec
inc
xchg
adc
cmp
mov
mov
mov
bnd
mov
push
fsts
pop
enter
cmp
xchg
imul
jg
mov
daa
jbe
or
jge
stos
push
pushf
sarl
sub
sub
inc
fimuls
sete
lcall
cmpsl
rcl
shrb
xchg
dec
push
imul
cmp
and
ficoms
or
fisubl
push
xor
jmp
inc
jae
and
iret
xchg
sub
imul
xchg
push
adc
xchg
ss
mov
es
loope
mov
pop
std
jne
cltd
fwait
out
xchg
sub
mov
loopne
inc
fs
inc
and
sub
pop
xchg
popl
ljmp
adc
rorb
ret
cld
dec
not
jmp
adc
push
inc
daa
sbb
lods
insb
jbe
les
int
adc
pop
push
insb
loop
test
lahf
add
outsl
inc
pmaxsw
test
add
aad
inc
add
xchg
shrb
jb
lods
mov
push
pop
cmc
insb
shl
jecxz
jmp
fimull
fucom
shll
leave
loopne
mov
dec
ffree
ds
and
or
je
hlt
push
and
comiss
dec
leave
xchg
inc
mov
testl
push
movsb
jle
add
mov
rcl
fs
in
adc
push
jnp
jns
mov
popf
imul
xlat
repnz
call
push
jb
sbb
addr16
sub
aam
ljmp
gs
loope
xchg
sbb
xorb
push
decb
in
sub
add
sbb
ss
ss
in
mov
push
sub
xchg
or
sbbb
subl
mov
cmp
lret
add
je
sbb
int3
xor
scas
out
into
xchg
mov
push
cmp
js
pop
addl
mov
adc
push
mov
push
cmp
addr16
dec
or
dec
fcoml
mov
mov
dec
dec
stc
es
and
xchg
jae
inc
push
cmp
add
aas
nop
and
js
adc
xchg
xor
lret
jmp
jge
sub
dec
mov
insl
stos
sbb
adc
cli
ljmp
jge
mov
xor
pop
dec
scas
cmpsb
sbb
js
pop
fcomps
adc
mov
push
out
xor
jg
sub
mov
insl
sub
addb
stos
arpl
jbe
rcrb
mov
std
shrb
ds
scas
fistl
nop
adc
outsb
push
xor
add
push
and
scas
xlat
stos
xchg
cmp
lret
xchg
dec
imul
js
shrb
inc
fadds
inc
mov
je
data16
ret
div
mov
jne
bound
sub
mov
addl
mov
mov
call
movsl
shll
cmp
cmp
popa
cmp
jne
inc
xor
add
push
stos
or
and
mov
into
insb
jbe
xchg
mov
xor
gs
xchg
xchg
jns
dec
inc
cli
mov
mov
cld
jecxz
inc
push
fdivs
push
fs
dec
ja
add
cltd
jns
test
repnz
xor
sbb
lods
rorl
dec
xor
js
das
leave
mov
push
push
fidivrl
mov
jp
repz
repnz
push
xor
rcl
pop
fnsave
mov
fwait
sub
clc
jno
dec
shll
test
push
xchg
fimull
cmp
dec
cmp
andl
lock
push
iret
dec
lret
es
adc
jl
imul
les
sbb
out
je
or
adc
ret
cmpsl
addr16
pop
jnp
or
call
loope
sub
cmp
xlat
scas
iret
es
xchg
pop
inc
adc
dec
and
add
leave
and
cmp
rcl
pusha
inc
flds
pop
aas
inc
in
mov
dec
movl
and
mov
mulb
ret
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
jmp
jp
lds
sub
mov
ret
int
adc
shrb
xor
hlt
sbb
and
repnz
pushf
into
in
cmp
scas
sub
dec
mov
mov
xchg
sub
hlt
sbb
shll
xorl
mov
popa
imul
adc
adc
jge
rcll
add
popa
mov
xor
jl
jnp
scas
mov
xchg
leave
fistps
in
mov
mov
pushf
inc
push
scas
push
cmc
mov
xchg
pushf
sub
sub
stos
gs
out
lea
jl
cltd
loopne
fdivrl
aaa
push
ret
sbb
pop
sbb
push
in
jl
into
or
hlt
aam
push
sar
testb
sbb
mov
pop
jb
fdivrs
addr16
adc
ret
jecxz
xor
xor
cwtl
or
ja
sub
pusha
adc
sub
mov
dec
mov
pusha
pop
add
das
popa
and
jb
ret
pop
add
icebp
or
aad
or
out
xchg
jp
insl
iret
mov
mov
inc
cmp
ret
ror
fnstsw
ret
adc
lods
inc
iret
fiadds
mov
xor
and
add
testb
xor
fidivrl
xor
cmp
dec
pop
xchg
enter
xor
lds
add
mov
pushl
cmp
fbld
jnp
icebp
dec
sbb
in
bnd
fs
out
dec
stos
xchg
les
int3
xor
push
xor
add
fbld
push
fwait
insb
jo
cwtl
jg
add
pop
andb
inc
loope
es
push
xchg
enter
jns
out
xor
in
dec
arpl
test
jbe
shlb
daa
mov
xchg
inc
rolb
inc
shr
nop
cmp
xchg
scas
fimull
mov
fstpl
sub
outsl
sbb
scas
jb
std
inc
test
sub
shlb
test
ljmp
idivl
rcll
jae
sbbl
lods
mov
sub
movsl
inc
xchg
and
sbb
hlt
dec
popa
fcos
xchg
xor
inc
mov
jns
xor
mov
or
dec
loop
adc
pop
lock
fwait
add
out
enter
dec
lea
pop
call
mov
fldt
clc
leave
cmpsb
push
mov
xchg
xor
dec
scas
inc
and
jo
cmp
sbb
dec
lods
pop
pop
ffree
pop
mov
add
int3
js
mov
mov
scas
testl
loope
jmp
xchg
mov
fldcw
add
mov
mov
js
enter
cmp
push
scas
adc
pop
add
dec
ret
mov
int
pop
xchg
pushf
movsl
mov
iret
push
lahf
add
cmp
imulb
popf
repnz
mov
enter
jmp
push
jg
and
or
into
in
andb
les
mov
adcb
push
cmp
fcomps
subl
pop
xchg
bound
inc
cmpsl
xchg
in
fisttps
nop
push
jmp
pop
fsts
pop
dec
sub
push
jae
xor
add
shlb
rorb
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
jmp
imul
sbb
xor
int
adc
mov
mov
xor
dec
and
mov
repz
pusha
xlat
lds
scas
mov
sbb
dec
rep
or
fdiv
roll
sub
sub
in
mov
insb
push
out
jb
push
adc
arpl
jmp
sarb
mov
test
dec
insl
push
fwait
sub
or
push
dec
mov
jae
push
pushf
cli
fcmovbe
jno,pt
inc
dec
mov
or
jle
jmp
pop
and
cmp
loope
mov
and
mov
cmpb
aas
in
lcall
in
push
dec
dec
and
fdivs
scas
inc
out
clc
mov
mov
rcrb
jl
test
cwtl
nop
pop
cld
mov
cmp
mov
test
jle
sub
insb
fmull
out
lock
jecxz
and
lret
mov
out
lods
jmp
lahf
jmp
push
push
push
lock
addr16
ffree
sbb
push
push
stc
outsl
imul
dec
pop
ret
inc
sti
fldl
adcb
adc
pop
sbb
ss
jecxz
outsl
jmp
mov
pop
inc
mov
cmp
jge
aad
sub
dec
nop
loop
es
or
sbb
stos
and
push
jns,pn
jp
add
popf
jno
daa
fsubrp
gs
mov
inc
icebp
mov
jns
test
adc
aad
out
or
in
jle
dec
sarl
or
pop
ja
test
loopne
arpl
mov
xchg
add
cmp
imul
lods
in
int3
loope
sahf
idivl
stos
daa
push
push
sub
push
movsl
sbb
sub
xchg
ja
lahf
lahf
push
add
bound
push
dec
jno
fcmovnu
cmp
sbb
xchg
mov
sub
adc
add
jno
push
rol
imul
inc
and
inc
mov
inc
test
nop
icebp
js
rcrb
xor
lods
ss
lea
nop
ficompl
ret
mov
push
lret
or
mov
or
xor
mov
insb
scas
test
pop
inc
in
jp
inc
call
or
cli
fs
and
in
lcall
mov
test
push
or
arpl
jne
aam
push
int
xor
jno
fimull
movsb
cmp
adc
push
and
fsubr
movsb
dec
pop
pop
les
out
pop
xor
lahf
and
push
adc
mov
mov
in
push
loop
xor
sub
adc
stos
jo
xor
pop
ljmp
sub
fidivrl
insb
js
or
adc
orb
jmp
iret
xchg
outsl
stc
repz
dec
push
sub
cmc
jbe,pt
test
sti
aam
sbb
and
xchg
mov
add
out
lcall
jnp
jne
andb
les
scas
stc
negl
lahf
mov
lock
push
lret
mov
pop
mov
imul
ss
cs
test
and
in
movsl
test
cmp
jne
mov
adc
pop
scas
lret
lret
cmp
cwtl
es
inc
adc
enter
ja
std
push
in
hlt
repnz
enter
cld
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
jmp
repz
mov
pop
pop
lods
mov
outsb
insb
pop
mov
adc
adc
adc
shrl
ret
dec
jecxz
sahf
shll
repnz
test
loope
aaa
xchg
aam
clc
ljmp
lahf
out
sub
fidivl
dec
xor
add
insb
or
xor
stc
pop
add
push
fimuls
sbb
insb
incl
mov
mov
fmull
int
movsl
int3
fidivrs
lds
jo
sub
mov
pop
mov
aad
push
popf
cs
sbb
cmpsl
jle
jnp
sub
mov
out
mov
cmp
adcl
sbb
or
adc
roll
dec
inc
int
mov
iret
roll
pop
and
imul
mov
aaa
adc
dec
dec
sbb
cld
mov
inc
enter
mov
notl
ret
add
add
scas
addr16
push
mov
push
movsl
lcall
push
cld
ss
pop
addr16
inc
jns
lods
stos
add
outsl
leave
xchg
data16
and
popf
mov
push
mov
and
pop
or
add
jae
mov
lcall
and
mov
jae
inc
mov
cmpsb
sbb
popl
dec
std
int
inc
pop
sub
push
fdivl
insl
cs
mov
and
cmp
cltd
mov
icebp
aam
pop
outsb
mov
popa
pushf
inc
add
movsb
xlat
nop
div
and
idiv
dec
push
dec
cmc
and
cmc
loopne
inc
rcrl
push
cmc
cmp
mov
xchg
lods
xchg
insl
xlat
pop
inc
fsubrl
in
and
dec
sub
xor
dec
xor
mov
push
popf
shlb
sbb
decb
repz
jns
mov
xor
sub
push
mov
xchg
push
dec
div
inc
jmp
or
adc
push
pusha
imul
mov
add
loopne
bound
xchg
out
rcr
cmp
jbe
mov
jo
jnp
bound
xchg
sbb
pop
add
mov
aam
pop
cmp
test
rcll
or
das
test
ljmp
outsb
outsb
rep
hlt
sarl
ficomps
aaa
popa
mov
shr
push
jb
sbb
jmp
data16
das
in
inc
faddl
cmp
push
int
lcall
lret
adc
and
lds
mov
popw
lds
pushf
mov
mov
or
insl
xchg
and
pop
dec
movsb
jbe
fcmovu
dec
lret
ss
adc
dec
mov
mov
mov
jl
and
int3
xchg
cmpsl
pusha
inc
add
dec
xchg
xchg
jg
jo
sub
js
ficoml
sarb
frstor
pushf
outsl
cmp
flds
sbb
pop
fwait
dec
loop
push
cmp
pop
sub
enter
and
pop
jne
dec
pop
dec
xor
mov
xorb
pop
push
iret
pop
and
push
in
into
mov
shlb
xchg
shrb
aam
jb
testl
gs
sti
pushf
pop
mov
dec
dec
in
das
in
das
cmp
xor
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
jmp
mov
push
jle,pt
lock
lods
shrl
adc
push
xor
jb
ds
sub
mov
xchg
fwait
sub
jbe
mov
movsl
mov
cmp
mov
xchg
jb
sub
jge
cwtl
in
sti
sti
dec
inc
dec
mov
fimull
adc
scas
mov
lcall
mov
pop
add
jbe
xchg
aam
lock
jnp
sarb
jae
add
cmpl
and
fucomp
out
shr
sub
out
das
pop
int
jp
loopne
cwtl
roll
dec
nop
rcll
repnz
loop
jae
std
mov
enter
mov
jle
add
mov
insb
push
pop
mov
inc
add
lods
scas
push
push
sub
out
ret
xor
and
iret
cmpsb
sbb
mov
sub
mov
jmp
jb
cmpl
test
and
push
jbe
add
pop
sub
cmp
xchg
xchg
xchg
and
and
jb
nop
mov
mov
xchg
push
cli
daa
bound
push
fwait
ja
and
jl
jg
sahf
ficomps
inc
dec
inc
jecxz
lret
mov
pusha
dec
xadd
xchg
es
fisubrl
sarb
mov
out
imul
adc
cmc
inc
lds
popf
decb
sub
test
test
add
push
leave
cwtl
add
sbb
cltd
cmp
fwait
or
pop
adc
sbb
jle
jmp
push
jbe
push
or
cmc
cmc
adc
repnz
subl
div
or
dec
ss
jae
scas
popf
mov
test
rcll
arpl
jo
xchg
jae
scas
pushf
mov
jae
in
jge
int
fcmove
aad
adc
inc
or
mov
fsubr
mov
loope
xor
add
ja
sub
mov
in
adc
sub
loopne
inc
lods
rcr
jne
cmp
and
add
scas
pop
adc
xlat
movsl
repnz
notl
mov
scas
repz
and
cmpsl
and
push
add
in
data16
pop
cmp
lahf
out
outsl
rcl
sbb
movsb
mov
lret
in
mov
jae
stos
mov
or
mov
movsb
pop
lock
dec
out
adc
les
xchg
sbb
dec
cwtl
inc
mov
aaa
jns
rolb
lock
push
lret
movl
mov
mov
push
gs
jno
inc
cmpsl
les
ss
cmp
cmpsb
lret
addl
lret
and
push
inc
and
das
push
test
fidivrl
cmp
div
pop
notrack
inc
shlb
dec
sbb
ja
and
popf
jge
outsb
and
xchg
inc
jle
fldl
mov
dec
add
sbb
sbb
xor
enter
lcall
loopne
sahf
lods
ss
repz
pop
push
in
inc
js
jle
mov
and
xor
jecxz
bsr
sbb
adc
pushf
jge
cmpsb
dec
call
dec
aaa
ret
lahf
jb
test
test
cmp
mov
adc
xchg
inc
shll
iret
aam
sbb
popf
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
sbb
sbb
out
stos
lds
push
adc
adc
adc
aad
sbb
iret
jae
nop
sbb
cmpb
push
xor
push
dec
jg
iret
cmp
add
cs
cmp
fistl
and
push
push
cmp
or
dec
and
pop
sahf
adc
add
sub
jo
xor
mov
test
ljmp
fst
out
mov
int3
mov
sarb
repnz
js
movsb
jb
cmp
push
push
mov
mul
mov
xchg
dec
repnz
negl
sbb
shrl
lahf
repnz
mov
pop
mov
cltd
into
or
jns
pusha
push
lcall
popf
in
mov
cmc
stos
ds
jmp
adc
rcrl
cwtl
sub
fsubp
loop
mov
mov
dec
pop
sbb
push
loop
fisttps
fucomi
push
jno
cltd
sbb
dec
fs
aad
pop
and
cmp
lcall
mov
out
stc
cmp
pop
mov
sub
imul
dec
stos
pop
and
jno
faddl
imul
adc
jl
loope
inc
push
lea
cmpsw
xor
in
sub
in
jmp
dec
cmc
mov
movsl
scas
or
in
ficompl
jne
arpl
dec
aam
pop
daa
jb
mov
dec
jp
or
inc
lock
add
push
es
jmp
pop
mov
movsl
adcl
fsubl
ds
stc
xor
sub
push
dec
fs
lret
pop
lds
jl
stos
mov
push
sbbb
or
inc
mov
je
jg
dec
js
sub
mov
cli
and
mov
aas
hlt
idivl
push
sbb
cld
sbb
int
mov
pop
popa
pop
fiaddl
nop
es
pop
dec
push
mov
cmp
cli
mov
add
adcb
push
shrb
mov
cmpsl
lods
les
mov
pop
mov
outsb
mov
xchg
cmpsl
je
cltd
shrb
dec
scas
jp
mov
dec
mov
pop
fwait
mov
jle
movsl
daa
push
fimuls
inc
mov
push
flds
sbb
stos
inc
es
add
out
add
inc
fwait
add
cmp
popf
dec
cmp
stos
int3
lods
js
adc
pop
std
insl
adc
sahf
ds
scas
xor
pop
adc
jecxz
imul
mov
dec
jecxz
insb
pop
cmp
dec
dec
sub
int
mov
and
jecxz
jg
sarb
stos
cmp
insl
in
daa
pop
in
rcll
std
and
aas
add
dec
aam
xchg
pushf
cwtl
cwtl
mov
xchg
add
cs
loope
ljmp
mov
jmp
jnp
adc
push
push
call
or
jo
enter
and
ja
loopne
ss
scas
pop
or
jb
cli
jnp
pop
push
div
aad
mov
xchg
push
fdivl
insb
lahf
pop
lret
xchg
and
into
js
or
aas
mov
pop
mov
sahf
inc
xchg
push
xchg
pushf
aaa
shll
cmp
cmp
jle
cli
iret
mov
stc
pop
adc
push
sub
jge
pop
jge
pushf
ljmp
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
jmp
adc
jmp
repnz
ret
push
jae
lods
sub
adc
adc
push
xor
push
fucomp
orb
cmc
xlat
cmp
notl
lret
ja
scas
sbb
dec
xchg
lock
lods
sbb
pusha
outsl
dec
fidivl
pop
push
cs
je
sbb
faddl
ret
lret
sub
add
pop
lock
push
dec
sub
pop
inc
loopne
dec
push
add
push
ficoms
je
ljmp
pop
stos
mov
call
ds
ficomps
popf
test
les
mov
fstpl
popa
sahf
sbb
daa
loop
adc
or
cmp
int
dec
inc
ret
xor
cmp
cmp
sbb
push
inc
jnp
movsl
pop
cmp
mov
stos
or
ja
std
lods
gs
pop
mov
es
add
test
xchg
jnp
pop
icebp
xor
jb
xchg
mov
sbb
push
adc
std
mov
addr16
es
ret
add
add
lods
cli
loopne
mov
lret
jae
dec
mov
mov
or
adc
cli
adc
push
inc
out
add
sbb
dec
inc
pop
pop
cli
push
stos
pop
sbb
sub
cmp
cmp
in
xchg
mov
and
mov
sub
add
lret
push
in
mov
in
add
clc
leave
adc
jbe
insb
lods
mov
mov
add
sbb
pop
pop
mov
inc
and
cltd
stos
xchg
mov
out
sbb
mov
jnp
dec
outsb
jecxz
jo
test
dec
xchg
xchg
imul
lds
loop
jne
cli
or
dec
mulb
sarl
stos
roll
int
pop
hlt
and
mov
insl
sbb
push
jae
mov
dec
xor
pop
leave
in
jecxz
sarl
inc
sarl
ljmp
sub
sbb
popf
mov
enter
pushf
cli
mov
std
mov
and
data16
loopne
icebp
push
inc
xlat
fcomip
pop
mov
pop
mov
pop
xorl
into
fstpt
inc
inc
leave
in
lret
sub
or
inc
clc
movsb
cwtl
inc
cltd
xchg
and
test
xchg
std
lcall
arpl
mov
sub
outsl
dec
ficomps
lret
push
jns
arpl
inc
xchg
jne
sbb
popa
lret
cmp
in
mov
xlat
hlt
hlt
cmc
jmp
cmp
out
and
pop
mov
hlt
add
sbb
dec
xorb
sub
push
jmp
in
add
pop
js
pushf
ret
dec
popa
sbb
rcll
dec
jo,pn
ret
popa
enter
cmp
xchg
dec
dec
int3
and
and
imulb
push
mov
pop
test
daa
sub
cmpsb
sbb
inc
movsl
inc
pusha
out
shl
mov
mov
test
in
rcrb
push
push
add
int3
lock
shr
xor
dec
xchg
outsb
xchg
adc
mov
call
mov
sbb
jo
xchg
jecxz
sti
cmpsl
inc
xor
mov
loop
rcll
pop
lret
sbb
push
imul
cmp
aam
sbb
sbb
and
in
pop
rcr
fidivs
inc
in
add
sub
inc
push
or
push
pusha
sub
add
xchg
stc
xor
xor
xor
mov
mov
jmp
mov
jmp
or
jge
pop
push
dec
cltd
cmc
leave
lcall
xchg
adc
int
adc
dec
inc
jecxz
and
xor
adc
inc
add
clc
cmp
cmp
aaa
insl
outsb
loopne
jp
cmp
add
inc
jae
jmp
xchg
dec
andl
mov
out
fwait
lcall
mov
jg
pop
in
add
mov
int
mov
lahf
xchg
jb
push
mov
fildl
jle
mov
imul
pop
lret
xor
mov
into
dec
bound
dec
sahf
out
stos
mov
sbb
int3
jecxz
and
decl
and
dec
movsl
pusha
mov
push
cli
dec
ja
inc
movb
xor
sub
sahf
je
xchg
popf
pop
xlat
inc
cmp
cmp
jl
test
orb
test
test
ljmp
push
stos
xchg
jle
mov
int3
jns
pusha
xchg
xor
push
in
popf
pop
out
insb
and
daa
shrl
in
push
sbb
fildl
push
mov
cs
imul
inc
movsb
fdivrl
mov
aad
loop
movsl
adc
cmp
dec
adc
pop
push
mov
xchg
popa
dec
push
mov
dec
lds
addb
sti
push
in
test
stos
std
aad
bound
out
mov
ljmp
mov
sbb
out
and
sub
mov
ja
xchg
add
dec
ret
sub
insb
das
push
inc
cltd
outsl
push
mov
push
mov
testb
dec
pop
sbb
shl
data16
fcmovnb
add
daa
jo
cmp
push
lcall
add
add
movsb
xchg
dec
lcall
dec
xchg
js
jno
pop
out
lea
mov
aaa
leave
insb
cmc
pop
ret
mov
cld
mov
sbb
fisubl
fidivrs
push
imul
pop
pmaddwd
loope
adc
mov
loope
dec
add
call
add
add
or
xor
xor
repnz
or
fistl
outsb
adc
dec
add
pusha
jns
and
pop
mov
xchg
push
xlat
out
mov
lcall
pop
test
mov
add
aas
testb
test
in
mov
daa
jmp
mov
call
dec
ffree
and
push
sti
rorl
cmpsl
mov
sub
loopne
mov
xchg
js
adc
pop
lret
js
test
mov
int
fs
shl
imul
push
out
ds
cld
jns
push
out
jle
mov
push
mov
push
test
sbb
xor
out
or
movsb
pop
sahf
xor
inc
xor
aas
xchg
sub
leave
push
movl
jae
sub
mov
adc
mov
sbb
repz
cld
arpl
mov
or
fcoms
stos
xchg
sbb
pop
dec
adc
dec
mov
sub
push
dec
lcall
xlat
fwait
aam
les
mov
xor
les
in
cmp
movsb
cmpsb
in
filds
sbb
int3
je
add
adc
adc
mov
mov
mov
sahf
cwtl
and
gs
cmp
and
int3
lret
cwtl
lretw
rolb
pop
sbb
fxch
inc
rol
add
pop
mov
push
popf
stos
dec
lods
mov
sbb
cwtl
in
push
xor
jb
dec
in
add
movsb
pop
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
jmp
stc
sub
xor
stos
insb
lcall
adc
ret
xchg
jo
and
ss
push
sub
adc
in
add
add
jle
scas
sysret
mov
jns
cmp
jmp
das
xor
adc
repnz
lds
mov
dec
sbb
bound
icebp
jecxz
sarb
aad
dec
xlat
mov
push
aas
mov
or
jno
xor
add
xor
repnz
pop
mov
and
or
mov
out
mov
and
stos
stos
xor
xchg
and
ds
jbe,pn
pop
pop
inc
mov
fwait
push
cs
sub
and
ljmp
xchg
xor
sbb
jo
pop
subb
mov
inc
jae
mov
insl
mov
jae
popf
dec
ss
add
dec
adc
pop
xchg
and
test
cmc
jne
ja
mov
xchg
pushf
sub
fimull
sub
ss
jg
push
inc
sub
sbb
jmp
xor
cld
inc
jns
imul
movsl
repz
hlt
xchg
and
adc
sub
gs
cmpl
jp
imul
lods
and
and
jo
mov
inc
and
mov
mov
adcl
xchg
in
cwtl
xchg
aaa
fldl
and
dec
dec
aaa
test
sub
or
sbb
mov
ret
mov
call
cld
mov
fs
push
shrb
xchg
pop
rol
mov
aam
in
cwtl
popf
dec
rcl
es
mov
dec
dec
arpl
popa
ret
pop
popa
cltd
or
inc
ja
nop
mov
push
das
test
inc
add
inc
jne
out
add
nop
and
jge
and
sarb
xor
mov
arpl
jno
or
jl
adc
mov
sbb
cmpsl
pushf
fbld
in
mov
xchg
or
enter
sub
aam
div
mov
test
pop
dec
test
push
lea
scas
addl
adc
jge
enter
push
cmp
push
mov
stos
mov
push
cmp
add
out
dec
xchg
jl
or
and
adc
mov
xchg
sub
sub
cmpsb
loopne
jle
test
inc
xchg
or
xor
sarb
and
repnz
fisubs
inc
cmp
add
rolb
pusha
jmp
jb
or
loope
enter
in
dec
cli
lods
mov
inc
imul
es
cli
mull
repz
sbb
enter
push
ljmp
jae
sbb
adc
cmp
cmpsb
iret
dec
int
mov
xor
cmpsb
jmp
jecxz
jno
jecxz
jp
scas
sub
jp
std
lods
outsl
jnp
push
decl
notb
in
mov
inc
movsl
scas
add
jmp
push
sbb
mov
das
call
enter
in
fstps
mov
stos
push
mov
test
rolb
loope
mulb
xor
inc
fsubl
maskmovq
imull
mov
sbb
cmp
adc
leave
pop
pop
push
in
ret
das
call
movsl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
jmp
dec
popf
shll
pop
das
popf
ffreep
mov
imull
mov
int
adc
ja
ljmp
int3
icebp
shll
pusha
shrl
es
jnp
pushf
mov
xchg
pop
in
out
pushf
xchg
push
decl
push
jge
pop
daa
jg
push
pop
or
cmp
sub
popa
mov
add
and
rolb
data16
pop
jae
add
push
imul
cmp
push
mul
hlt
mov
jbe
iret
and
popa
xor
mov
rolb
call
mov
push
xor
dec
cmpsb
inc
loopne
inc
jecxz
scas
xor
jns
and
sbb
cmp
sub
push
ret
jo
mov
inc
cmp
adc
pusha
test
das
fmul
or
lds
clc
dec
leave
add
shlb
mov
sahf
cmp
mov
cwtl
jne
pop
mov
fildll
out
ret
mul
sub
jg
sbbl
dec
lret
pop
orl
fwait
xor
push
lahf
pop
or
push
jge
arpl
loopne
xchg
daa
or
pop
in
adc
dec
add
mov
push
in
call
mov
sahf
adc
and
jns
dec
rcr
cs
xchg
and
roll
inc
add
and
cmc
dec
mov
and
jecxz
or
cmc
pop
outsl
xor
popa
int
sbb
pop
dec
rcrb
xchg
cmp
jg
lock
stos
fs
in
lcall
jle
jns
insl
int
mov
mov
mov
push
imul
jg
mov
mov
jae
out
aad
mov
leave
push
dec
stc
rclb
mov
sbb
nop
and
xchg
sbb
and
cmp
jno
dec
test
pop
sbb
sbb
ret
sbb
pushf
mov
pop
cmpsl
cmpsb
mov
fdivrl
mov
or
cmpsl
and
js
stos
fsubp
jmp
pop
enter
xchg
pop
sar
sbb
mov
inc
push
inc
loope
sub
add
lret
cmp
test
in
jae
xchg
cltd
jae
mov
adc
ds
fstpt
fnstsw
ret
fbld
mov
pop
rolb
fwait
loopne
pop
lcall
mov
std
mov
push
lock
sub
stos
xchg
popa
push
inc
mov
rolb
aad
adc
or
lcall
xchg
test
loopne
push
movsl
ficoml
rcll
push
inc
insb
mov
es
rorb
sbb
mov
addl
jmp
inc
bound
outsb
jo
popa
jns
xorb
mov
mov
mov
enter
mov
xor
xor
aas
daa
sbb
cmc
lods
dec
jbe
adc
dec
add
dec
jp
shr
mov
mov
sarb
stc
xor
dec
pop
xchg
fldt
xchg
inc
pop
push
lcall
push
cli
sub
cltd
or
movsl
aad
push
xor
inc
add
stos
in
mov
cmp
sub
pop
mov
sti
cmp
inc
out
fnstenv
jb
jg
add
je
int
scas
popf
add
sbb
hlt
dec
dec
mov
mov
pop
sub
out
mov
lret
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
imul
imul
jmp
test
int
adc
ja
imul
adc
xchg
xchg
sub
adc
divl
mov
stos
push
mov
outsb
repz
lea
inc
test
dec
enter
sub
int3
int3
mov
jne
filds
pop
jp
mov
shld
out
pusha
bound
imul
shll
sub
mov
popa
pop
clc
dec
in
mov
inc
mov
inc
lahf
cmp
adc
push
cmpsl
fwait
cs
lods
sahf
add
stos
and
mov
std
movsl
pop
mov
and
push
xor
jge
pusha
cmp
shll
inc
sub
faddl
cmp
int3
pop
push
and
ret
mov
daa
dec
lcall
jp
lahf
es
rcrb
in
data16
daa
xor
push
je
push
in
test
icebp
pushf
icebp
mov
xchg
ror
mov
add
loopne
fdivl
cs
aam
xchg
adcl
sbb
push
lret
cwtl
pavgb
xchg
push
mov
inc
sub
inc
push
push
int
push
mov
in
and
inc
mov
bound
push
inc
loop
cmp
mov
sub
repnz
lods
add
mov
test
inc
dec
int
mov
addr16
xor
fldenv
xor
outsl
aad
rcrb
mov
out
jno
test
stc
mov
jb
outsl
pop
int3
scas
and
loop,pt
or
sbb
repnz
cmpsb
sub
xchg
filds
icebp
arpl
sbb
or
sub
or
xor
add
sbb
sbb
jl
addr16
mov
cmpsl
fstpt
sarb
xchg
dec
add
call
pop
test
fildll
cs
cmp
pop
mov
dec
jl
lret
or
mov
lahf
jg
repnz
cmp
mov
ror
and
test
repnz
add
sub
in
popa
mov
test
shlb
or
jns
mov
push
or
js
xor
shl
mov
inc
inc
cld
inc
inc
pop
mov
adc
push
test
adc
xchg
sarb
jle
jae
sub
lea
jp
cltd
xor
cld
mov
mov
scas
jns
fisubl
mov
xor
mov
jmp
fcomps
cld
xlat
pop
xchg
mov
hlt
sahf
push
jns
ficompl
testl
mov
mov
dec
add
out
sub
pop
loopne
and
jle
test
inc
lret
jnp
enter
pop
sub
push
lcall
pop
in
xor
ret
sub
xor
pop
add
es
mov
mov
mov
fists
jae
or
or
mov
inc
in
fisubl
add
adc
ss
cmpsb
xchg
shlb
out
add
rcpps
and
in
and
mov
jae
push
mov
orl
and
insl
jp
je
fdivl
sub
in
pop
fldl
fsubs
pop
mov
mov
or
xchg
dec
rorl
mov
xor
add
pushl
push
push
call
mov
jmp
xor
sbb
stos
push
mov
push
je
adc
adc
adc
jb
sbb
stc
or
fwait
and
cmp
sbb
jge
aas
pop
ss
mov
mov
stos
adc
imul
xor
iret
push
ret
xchg
ficoms
jae
test
lock
cmpsl
or
inc
dec
outsb
jl
fs
cmc
hlt
xchg
and
adc
in
and
adc
or
mov
jne
into
sbb
sub
pop
pushf
insl
sub
std
sbb
jns
pop
and
clc
imul
dec
sbb
jle
lods
xchg
xor
sub
sbb
push
or
jmp
xor
sbbb
push
xor
xchg
je
adc
xorb
and
xchg
ret
nop
test
add
xchg
rorl
jmp
and
mov
or
sbb
or
inc
push
mov
pushf
xor
jns
add
sub
pop
arpl
mov
rcrb
cmpsl
mov
mov
mov
scas
pop
sbb
ja
sub
mov
bound
fstps
stos
out
scas
das
movsb
out
cmpsl
sahf
cmp
lahf
test
cmp
mov
sub
loopne
xor
subl
mov
lahf
sub
cmp
in
shll
ret
or
add
inc
mov
call
in
mov
flds
lret
add
insl
push
dec
ret
mov
dec
cmpsb
dec
aaa
js
push
dec
inc
xchg
loope
pop
sub
sbb
add
repnz
cmp
stc
ds
cli
mov
jp
mov
shll
sub
fidivs
fcomps
insl
sub
cld
xor
subl
mov
sub
es
cli
adc
movsb
rclb
ss
mov
mov
test
rorb
fidivl
std
jmp
xor
sbb
xchg
jae
push
and
lea
aaa
adc
ret
hlt
add
jp
mov
aaa
movsb
jno
xor
mov
mov
insl
fwait
push
insl
movsl
pop
or
lcall
jbe
adc
xchg
lret
cmpsb
xchg
xchg
bound
mov
cltd
cmp
iret
addr16
jle
push
xchg
mov
push
inc
and
mov
out
jl
push
xchg
lods
fldln2
sbb
les
cmp
dec
loopne
sub
mov
add
inc
sub
xor
or
outsl
insl
cmp
out
loop
sub
js
pop
shll
data16
pop
cwtl
xor
xchg
fadd
fists
aam
mov
stc
aaa
mov
cmp
repz
mov
stc
adc
iret
and
out
mov
sbb
inc
adc
idivl
lods
mov
int3
jno
jb
shll
mov
das
loope
inc
mov
and
jae
ret
mov
push
mov
add
add
mov
popf
or
fldcw
mov
in
mov
aas
out
adc
mov
out
fimull
jo
incl
mov
cmp
jb
jbe
lods
sar
dec
mov
mov
mov
andl
shrd
jmp
ja
jle
sub
xchg
mov
outsl
rorl
mov
int
adc
fimuls
xlat
jb
push
ljmp
pop
and
xchg
xlat
ficompl
rol
std
mov
out
bound
sahf
adc
fidivs
aas
xor
rclb
mov
bsr
or
pop
cltd
xlat
cmp
pop
rolb
push
enter
iret
push
nop
mov
xor
idivb
sbb
je
jp
mov
popf
loopne
cwtl
loope
mov
jo
adc
pop
movsb
lods
push
and
insb
jg
mov
test
bound
fists
adcb
mov
cmp
mov
divb
rclb
int3
cmovnp
adc
jp
in
sub
xchg
stos
aam
pop
add
ljmp
cmp
repz
jno
jb
dec
cmp
push
dec
ljmp
std
xchg
fxch
adc
in
sti
mov
test
cld
cmpb
std
jns
sub
push
adc
sub
push
divl
in
imul
pop
pop
add
flds
mov
aad
cmc
adc
cwtl
mov
std
push
sahf
in
mov
ficoml
into
int
cmp
scas
adc
mov
cli
mov
jg
jns
out
subl
dec
mov
ficomps
subb
sub
jge
adc
in
or
cmp
jns
add
sbbb
lods
xor
dec
fstpl
xchg
push
adc
xlat
lret
test
inc
push
cs
ss
push
inc
sub
dec
push
fxch
es
fldpi
xlat
inc
insl
lcall
pop
jl
andb
mov
fldenv
std
mov
ja
mov
std
ja
push
jg
test
xorb
adc
dec
fisubrl
xchg
call
mov
push
scas
sub
cmp
sbb
lahf
dec
lret
cmp
xchg
mov
bound
daa
pushf
movsl
das
std
scas
lods
push
mov
and
dec
int3
js
mov
cld
push
jp
cmp
jns
or
push
iret
inc
insl
push
jecxz
data16
scas
adc
and
loop
es
pop
xchg
pop
sbb
jmp
sarb
subb
sub
arpl
cmp
js
xchg
ja
sbb
jae
dec
add
scas
fmull
cmp
cli
daa
pop
jg
xor
or
inc
mov
imul
movsb
ljmp
shlb
mov
out
int3
mov
cli
mov
add
ret
adc
add
xrelease
dec
enter
sbb
jg
jbe
cld
sbb
adc
test
shlb
aaa
dec
cmp
jb
mov
push
mov
sbb
push
subl
adc
stc
in
jae
cmp
outsb
mov
inc
xchg
mov
std
push
fs
sahf
pop
gs
roll
adc
sub
mov
add
cmpsb
or
mov
cmc
and
ss
lods
fisubl
and
outsl
fbstp
pop
adc
inc
adc
xchg
mov
icebp
and
xlat
xchg
add
push
and
push
adc
fwait
mov
jmp
add
sub
mov
shr
shr
xor
push
xor
mov
mov
mov
push
jmp
bnd
test
add
adc
int
adc
scas
and
loop
push
or
fs
lret
push
mov
jecxz
aam
pop
mov
stos
hlt
dec
xchg
hlt
mov
adc
sbb
aad
stos
jne
int3
cli
sbb
dec
dec
lds
mov
or
jbe
int
push
inc
dec
jns
das
mov
ror
lcall
jl
loope
or
sub
imul
or
jno
or
repnz
dec
push
inc
shr
into
sbb
insl
int
rclb
xor
cmpsl
mov
adc
cmp
scas
aaa
sbb
cmpsl
xor
pop
mov
adc
mov
shlb
scas
jns
sti
adc
loope
aas
pop
or
flds
dec
xchg
sbb
push
inc
inc
and
shrl
xchg
std
mov
repnz
stc
fstpt
mov
repnz
repnz
test
loopne
lret
mov
xchg
je
xor
subl
inc
mov
jne
dec
jecxz
jge
popa
xor
xchg
mov
xor
cmpsl
jno
mov
fcompp
dec
jo
cmp
mov
jge
sbb
and
sub
jae
inc
ds
inc
sbb
test
sub
sbb
inc
and
loopne
in
stc
xlat
add
stos
dec
push
or
icebp
bound
sti
aam
push
stc
inc
adc
mov
pop
sbb
fisttpl
mov
dec
mov
lahf
jmp
icebp
shr
adc
xor
sbb
mov
lods
bswap
repnz
aaa
testb
jg
jb
aaa
jl
mov
cmpsl
in
repz
test
int
xor
repz
xchg
loopne
jmp
insb
sahf
xchg
jecxz
call
push
push
mov
pop
and
jo
mov
std
adc
aas
repz
mov
mov
fistps
inc
add
movsl
fidivs
add
dec
sub
testl
jne
stos
jo
fdivp
test
cmp
inc
repnz
lret
jae
in
nop
dec
js
or
fisubl
adc
pop
sbb
adc
xor
and
push
loopne
fldenv
xchg
lahf
cmpb
aas
xchg
les
inc
or
fldenv
xchg
ret
sub
fwait
cwtl
ret
jno
push
pop
sub
in
adc
mov
into
movsb
or
out
adc
xor
cmc
fldt
or
inc
popa
add
leave
pop
add
fcmovnu
pop
js
mov
mov
inc
inc
cmp
imulb
dec
inc
and
cmp
mov
fcmovnbe
daa
push
sti
jl
hlt
int3
sub
addr16
in
jo
popf
mov
sbb
mov
test
mov
adc
pop
lcall
daa
or
push
jmp
push
imul
cli
ss
push
mov
push
pop
in
aad
mov
cmp
push
jl
stos
and
sbb
inc
mov
movsb
pop
mov
stos
cmp
aaa
fstps
std
mov
das
inc
xchg
repz
xchg
mov
fcomip
test
adc
mov
iret
aad
lock
dec
addr16
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
sbbl
jmp
test
sub
sub
shlb
adc
push
adc
adc
xor
ljmp
das
or
xlat
sbb
popf
push
mov
aad
dec
pop
jl
mov
jmp
loopne
jmp
jl
or
repz
jae
push
loop
xor
xor
push
sbb
pop
dec
ret
fstl
mov
sbb
ds
push
xchg
icebp
cld
or
call
adc
sbb
fcmovnu
mov
push
jae
jmp
inc
push
mov
mov
mov
adc
pop
in
sti
xor
jne
lock
sub
int
in
sbb
into
mov
mov
pop
pop
pop
push
jb
arpl
pop
iret
ss
inc
push
sub
loopne
push
in
inc
pop
and
aaa
dec
shll
mov
fucomip
daa
mov
outsl
mov
push
adc
pop
mov
jecxz
lds
inc
jg
sahf
xor
dec
and
and
daa
xchg
mov
movsl
push
xchg
loopne
shlb
gs
jns
fildl
adc
daa
fisubrs
xchg
test
lahf
add
mov
adc
ss
cmp
fwait
lea
punpcklbw
cmp
aad
mov
fists
shlb
inc
lret
pop
les
repz
loop
inc
decb
xor
ja
mov
ret
les
sub
xchg
pop
jge
adc
test
fs
inc
inc
arpl
inc
pop
add
add
sub
and
fwait
cmp
aad
pop
divl
pop
or
int3
lret
mov
cwtl
mov
xchg
inc
movsl
int3
imul
or
jmp
xor
cmp
adc
in
xor
sbb
dec
fldz
pop
adc
cmp
mov
cmp
lods
pop
jg
push
mov
xorb
nop
jno
mov
ja
jp
out
jns
loope
sbb
std
jno
inc
or
jne
or
mov
mov
leave
jb
in
hlt
xchg
addl
pop
mov
inc
or
sbb
lea
mov
and
pop
test
leave
xchg
sub
aad
gs
xor
sub
adc
jmp
mov
gs
pop
jo
negb
sti
sbb
ljmp
and
jmp
fs
lock
sbb
lock
hlt
and
mov
stos
pop
jge
inc
call
jb
mov
ja
mov
test
sbb
subb
or
hlt
shl
ret
fcomps
lret
ror
sbb
inc
dec
bound
imul
outsb
rcrl
xor
int
jecxz
leave
pop
xor
sub
pop
ficoms
or
add
add
dec
mov
sbb
dec
mov
pop
inc
out
js
xchg
xchg
rclb
shl
mov
js
outsl
push
shl
push
mov
push
rcl
xor
or
inc
lcall
pop
dec
xor
lea
xor
push
pop
push
cmp
outsl
ljmp
rolb
fcmove
out
dec
rcl
dec
jbe
dec
sub
xchg
jne
aam
imul
neg
ficomps
iret
sub
xorl
rorb
add
xor
jge
rcr
cmp
inc
je
mov
mov
xlat
mov
mov
bound
pop
fsubs
mov
in
loopne
idivb
mov
mov
xor
push
sbb
pop
xlat
pop
ret
jmp
ret
and
mov
pop
hlt
dec
fildl
cmp
xchg
sbb
adcl
inc
notb
push
jne
pop
xor
pop
shrd
movl
shr
ret
movzwl
sub
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
add
movl
or
mov
mov
cmpl
mov
mov
mov
movl
jmp
movl
movl
ja
pushl
push
push
pushl
push
pushl
pushl
call
xor
adc
andl
adc
sub
add
addl
movl
cmpl
mov
mov
movl
jmp
movl
mov
jne
call
or
movzbl
sub
mov
and
or
mov
or
xor
mov
or
movl
adc
movl
sub
movl
push
movl
xorl
movl
and
push
sub
movl
sbb
mov
andl
mov
push
push
addl
push
call
xor
mov
mov
movl
push
movl
or
adcl
push
or
xor
xor
push
andl
push
call
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
not
je
push
pushl
push
pushl
push
pushl
pushl
pushl
push
pushl
push
push
pushl
call
orl
notl
adc
mov
sbb
add
and
inc
mov
addl
push
orl
push
addl
push
push
decl
call
cmpl
movl
mov
mov
jmp
movl
jne
pushl
push
call
add
add
adc
mov
xor
add
sub
or
mov
and
mov
mov
or
cmpl
movzwl
movl
movl
jmp
movl
movl
jae
pushl
call
adc
xor
xor
adc
orl
add
mov
add
mov
subl
movl
mov
xor
movl
mov
xor
add
sub
and
movl
adcl
movl
jmp
fcmovne
mov
test
fisttps
out
adc
adc
adc
adc
or
sbb
in
pop
xchg
mov
sbb
ror
adc
mov
mov
in
sub
fcmovnbe
pop
and
mov
outsl
or
out
mov
lcall
fwait
dec
out
pop
sarl
dec
pop
in
xchg
fwait
push
imul
call
add
bound
fs
xor
mov
sahf
sub
cwtl
sub
sbb
int3
jmp
xchg
xchg
addr16
and
call
cli
dec
jp
data16
rorb
lcall
cs
add
jns
inc
cmp
daa
aas
stc
cmc
fisubrl
rcrb
sub
xchg
sarb
xchg
paddd
js
jbe
xchg
loope
mov
in
in
add
lods
add
sub
jnp
adc
pop
clc
aam
pop
into
lret
in
sbb
pusha
jb
cwtl
xor
out
mov
adc
xor
jne
push
mov
pop
cmp
jle
cmc
in
jo
ret
in
popf
not
popa
lods
cld
fisubl
add
ljmp
mov
sbb
int3
loope
mov
aad
dec
lock
lds
inc
xchg
mov
cmp
stos
cmp
es
movsb
pop
jnp
je
je
aad
mov
ret
insl
stos
and
mov
scas
add
popa
lods
in
xor
sub
fstpl
ret
orl
xchg
lcall
inc
add
xchg
jge
push
cs
lret
pop
loopne
push
or
pop
cmp
cmp
mov
sub
lods
call
add
sub
mov
jb
icebp
iret
pop
mov
stos
shll
lret
lods
dec
ret
in
aad
lods
test
pusha
stos
ret
dec
pop
add
mov
xor
push
es
stc
les
test
lods
repnz
sub
clc
cmp
and
stc
stos
dec
pop
add
test
cltd
mov
pop
mov
ret
ret
mov
sub
push
ret
insb
inc
and
outsl
cmp
jno
bound
xlat
fsubrp
mov
lods
pusha
cmpsb
jb
mov
cmp
or
movsb
mov
and
int3
je
lret
add
adc
dec
jo
ja
fidivrl
mov
mov
test
aaa
mov
sahf
in
mov
dec
repz
shrb
in
popl
push
inc
adc
mov
imul
fldt
inc
push
sbb
xor
movb
mov
add
lea
jp
fistpl
sbbl
imul
pop
loopne
mov
out
stc
and
dec
rolb
sub
xchg
pop
cltd
add
pop
stc
pop
dec
sbb
les
repz
mov
in
xor
fdivrp
loope
jmp
jecxz
mov
push
push
or
or
xor
pop
jecxz
cld
int
and
out
mov
sahf
test
mov
push
imul
dec
and
mov
lods
sbb
ds
cli
mov
int3
cmp
sar
mov
xchg
imul
test
bound
loop
push
or
sub
mov
insl
loope
stos
jl
mov
cmc
rcll
inc
adc
lea
inc
sub
sub
and
jo,pn
mov
sub
in
rcrb
lahf
popa
imull
jmp
xor
push
xchg
cmpsl
push
push
jbe
lods
cwtl
jmp
push
push
loope
sbb
xchg
mov
jb
lods
jge
leave
arpl
inc
fadds
add
add
not
mov
mov
movl
jmp
movl
mov
jg
pushl
pushl
call
add
orl
sub
adc
movzwl
add
mov
mov
sbb
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
jmp
in
mov
sbb
sub
jle
add
mov
xor
adc
cmp
push
and
mov
fstpt
popf
orb
jmp
add
jecxz
cmp
xchg
dec
jno
mov
fistpll
inc
scas
cmp
into
loope
or
lock
push
xchg
std
xor
push
ss
mov
dec
add
pop
scas
inc
or
cmp
or
push
sbb
imul
fmull
mov
fsubl
stos
xor
test
fildl
sbb
add
mov
jl
sub
and
xlat
or
sub
int
fcomi
add
adc
push
inc
fists
or
sub
in
xchg
xchg
pop
jle
inc
jg
jne
repnz
je
mov
lds
pushf
pop
pop
cld
sub
and
xor
pusha
mov
mov
dec
mov
sbb
lcall
test
mov
and
ret
inc
dec
jo
xchg
faddl
jl
insl
jae
repnz
mov
mov
cmp
movb
movl
inc
jl
cmp
sub
jnp
rcrb
pop
in
pop
pop
fcmovbe
dec
test
orl
push
cmp
mov
jae
adc
clc
jmp
jp
dec
sti
mov
push
push
push
and
fcomip
add
xor
cmp
xor
das
add
jns
and
iret
cs
shrb
mov
pop
cmp
lcall
hlt
cwtl
mov
in
int
imul
jp
xchg
test
adc
ss
repnz
xchg
mov
push
in
js
dec
shll
fsubl
dec
pop
xor
cmpsl
sub
lcall
xchg
movsb
mov
dec
pop
inc
mov
inc
popa
cmp
adc
dec
mov
repz
sbb
push
bound
push
ljmp
jecxz
aaa
pop
jle
jae
stos
loopne
push
mov
cmc
mov
aam
pop
pop
dec
mov
insl
clc
or
pop
xor
xchg
xor
aaa
stc
mull
jl
adc
aaa
call
fistl
pushf
xor
lods
xchg
in
std
call
dec
mov
imul
lea
dec
adc
pop
insb
sub
daa
addr16
sub
add
stos
adc
mov
push
bound
sbb
dec
sub
loopne
out
imul
test
xchg
negb
rorb
or
pop
jp
push
fmuls
push
xchg
mov
xor
mov
add
add
adc
cmp
pop
lea
push
sbb
rcrb
adc
ror
cmpsb
test
mov
and
cs
fxch
pop
pop
stos
xlat
lret
mov
mov
sbb
dec
insl
lds
arpl
cmp
jl
xchg
dec
loop
jns
dec
fadds
dec
rcrl
push
pop
inc
dec
popf
js
mov
dec
ret
outsb
xor
push
push
jne
jge
cwtl
mov
add
xchg
sbb
fdivl
in
cmp
xchg
popa
test
mov
adc
dec
add
loope
loopne
xor
lods
sbb
xchg
shlb
fadds
movsb
xor
shrb
inc
cmp
and
stos
pop
mov
adcb
aas
scas
jns
jmp
popa
rolb
dec
pop
test
sub
push
enter
fistps
sub
das
jb
or
out
pusha
scas
dec
dec
shll
test
inc
inc
sub
in
lcall
jbe
lret
aam
scas
xor
int
add
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
jmp
enter
pop
xor
push
push
push
pusha
js
dec
adc
xor
adc
and
jl
jl
test
shlb
popa
push
push
jle
in
sub
test
or
xor
dec
insl
or
xor
jno
fsts
mov
in
scas
or
xor
push
mov
sbb
and
fwait
jecxz
add
jge
scas
or
push
push
dec
dec
adc
fldcw
mov
jmp
test
xchg
adc
movsl
xchg
mov
jle
lahf
in
mov
xor
int
sbb
cld
adc
push
insl
ss
inc
cmp
mov
shlb
jg
cmp
insb
into
push
imul
add
pushf
sbbl
mov
notl
dec
pop
dec
hlt
ljmp
sub
lret
and
lahf
jecxz,pt
sti
jecxz
mull
mov
out
aam
jg
dec
and
adc
dec
add
cs
aaa
enter
mov
xchg
jl
test
int3
mov
test
shll
jge
test
sub
mov
push
inc
add
fs
and
or
or
movsb
mov
ljmp
mov
insl
jle
mov
pop
arpl
pop
xchg
mov
xchg
and
mov
rcrl
and
mov
cmp
or
mov
or
dec
and
je
mulb
push
adc
xchg
sub
fdivr
imul
sub
ss
or
xchg
mov
sbb
push
pop
lcall
fsubr
and
mov
or
or
push
std
movb
mov
insb
push
cld
xchg
push
mov
aad
test
sub
mov
xchg
inc
xor
or
dec
sti
daa
jp
jnp
push
dec
xor
mov
out
stos
jecxz
dec
enter
lock
loop
or
dec
cmpsl
adc
test
mov
mov
mov
mov
out
adc
push
insl
jecxz
dec
add
jecxz
mov
push
and
and
jg
jno
push
flds
test
test
out
and
lahf
pop
sub
lcall
and
stos
push
jp
mov
pop
out
cmp
or
add
pop
fwait
mov
idivb
sbb
in
ja
bound
pop
xor
mov
pop
out
stos
jb
mov
call
ds
dec
add
jb
je
notl
dec
mov
in
lds
aam
adc
add
mov
call
sbb
int3
jmp
or
test
popf
inc
or
mov
dec
pop
icebp
add
jmp
outsl
add
push
mov
loope
adc
js
fs
out
add
frstor
ficomps
cs
sbb
dec
push
mov
jecxz
sbb
and
mov
mov
add
pop
es
test
jne
flds
int3
xor
xchg
out
adc
stos
or
rorb
fisubrs
scas
xlat
dec
int
xlat
sub
xorl
hlt
mov
sub
sub
arpl
std
cmc
cwtl
mov
popf
std
popf
inc
push
test
xchg
fcomps
push
mov
jmp
outsl
mov
dec
lcall
popa
popf
jno
add
int
xchg
repnz
and
loopne
out
mov
cmpsl
into
cld
mov
pushf
fs
or
xchg
fimull
or
add
sub
int
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
jmp
pushl
and
push
mov
gs
adc
xor
adc
test
pop
sbb
mov
cmp
mov
ds
inc
cmp
ficomps
push
lods
and
fwait
subl
cmpl
daa
aaa
lret
xor
stc
adc
lea
repnz
daa
sbb
dec
adc
xor
lret
cld
push
pop
mov
call
loope
dec
inc
inc
mov
sbb
mov
or
pushf
mov
push
or
push
sub
sbb
adcl
lret
sub
out
out
js
scas
inc
movsb
mov
aaa
jmp
add
js
inc
in
inc
jae
push
adc
lcall
push
sub
and
sub
scas
sub
mov
jle
pop
push
inc
les
out
sbb
push
dec
push
mov
lcall
jbe
inc
xchg
iret
xor
lds
in
mov
push
xchg
int
lahf
mov
xor
inc
sbb
out
daa
push
cmp
xchg
mov
rolb
and
inc
xchg
inc
push
stos
jg
or
dec
andb
hlt
xlat
push
ljmp
sbb
gs
mov
inc
xchg
xor
pop
xor
outsl
cmp
lret
out
fsts
repz
ljmp
dec
xor
push
roll
add
lcall
cmp
adc
mov
add
add
mov
xor
movb
or
daa
inc
lret
push
fisubrl
sub
mov
mov
push
orl
fs
loope
sbb
mov
xorb
sub
enter
scas
pop
inc
adc
cmp
inc
mov
scas
lret
mov
pop
dec
cs
sub
mov
push
pop
jle
push
in
ret
subl
pop
mov
xchg
shll
mov
dec
addr16
xor
jno
inc
xchg
jle
mov
push
mov
inc
add
in
popf
inc
dec
lods
aad
imul
cmc
cmp
pop
aam
sbb
and
lds
das
mov
rclb
cmp
jmp
and
jb
stos
pop
pop
mov
dec
dec
or
lcall
out
add
jno
ds
lahf
adc
insb
fldenv
cli
dec
sahf
and
jae
cli
test
scas
aad
ret
xchg
movsl
mov
xlat
bound
aam
or
jle
sub
mov
mov
imul
lods
and
movsl
and
xor
inc
call
lea
clc
mov
xchg
pop
sub
repz
pop
aaa
pop
cs
inc
fcomps
test
enter
xchg
mov
jo
cmp
imul
add
inc
or
call
mov
sbb
mov
in
push
pop
packssdw
add
pop
sub
push
push
clc
sub
adc
jnp
jmp
sarb
movsb
jb
jle
push
popa
sub
leave
xor
popf
xchg
insl
pop
imulb
int3
mov
and
jae
out
jbe,pn
out
ds
fisubrs
xchg
jl
xchg
lods
loope
lea
in
test
lgs
xlat
pop
cmp
pop
mov
add
or
adc
mov
mov
fcmovnu
jne
push
movsb
mov
or
jle
lods
jb
xor
dec
test
bound
fstl
outsl
popa
outsl
pop
pop
das
sarb
pop
xchg
bswap
lret
adc
leave
incl
push
inc
idivl
lods
cmp
mov
add
inc
mov
add
fcoms
ja
scas
stc
aam
sbb
dec
add
mov
fwait
lea
push
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
jmp
adcl
dec
in
enter
js
cmp
adc
adc
adc
xor
push
loopne
outsl
xor
xchg
fistps
ret
daa
test
sbb
xor
lret
les
out
jno
or
insl
mov
mov
cmpsb
sbbl
dec
jb
stos
sub
popa
jecxz
out
data16
add
sub
push
mov
arpl
push
std
or
push
mov
sti
sbb
mov
mov
cmp
outsl
js
mov
mov
mov
cmp
rorl
lret
ljmpw
pop
pop
sub
lock
xchg
mov
lds
and
dec
xor
popf
mov
sbb
lcall
rcrl
mov
xor
add
es
cli
ss
sbb
mov
roll
lret
lcall
jnp
into
dec
adc
ljmp
inc
arpl
aaa
xor
test
cmpl
sub
ret
jecxz
jmp
sarl
mov
mov
mov
fs
or
inc
sbb
adc
fisubs
rorb
xlat
mov
push
cmc
cmp
sahf
andb
inc
adc
push
xchg
inc
popa
xchg
inc
xchg
add
jecxz
sbb
push
xchg
sbb
inc
ds
ficomps
adc
leave
xchg
leave
sub
fadds
mov
fwait
mov
addl
pop
xchg
stos
or
sbb
pop
push
iret
rcll
jecxz
cmpsb
test
or
xor
sar
rcl
mov
jne
arpl
andb
ret
sub
mov
push
push
inc
stos
xor
dec
fdiv
and
mov
and
rcl
jp
rcrl
sbb
xor
aam
jbe
cmp
out
rcll
fbstp
add
mov
ljmp
popa
push
addr16
or
inc
hlt
fbld
sub
dec
mov
rorb
pop
out
not
push
repz
int
rcrb
mov
and
jge
mov
or
roll
jle
insb
rcr
decb
sub
ss
negl
push
cmp
insb
les
sbb
ja
loopw
push
addl
push
in
ret
out
lret
out
je
in
push
shlb
popf
or
xor
xor
cmp
mov
mov
xchg
mov
jae
sub
mov
shll
jl
lds
int3
xor
fisttpll
add
ret
jae
mov
rcr
or
mov
pop
xchg
or
mov
inc
dec
jecxz
filds
push
leave
adc
subb
cmc
cld
popa
sbb
push
jge
xlat
or
pop
cld
or
mov
xor
outsl
loope
pop
and
jle
lahf
sub
dec
scas
outsl
in
js
incl
or
loopne
sbb
xchg
outsb
and
test
push
lahf
push
dec
mov
cmp
dec
adc
push
test
sub
cmp
mov
or
aas
in
call
cmp
scas
fwait
cmp
inc
loopne
add
leave
loope
or
imul
das
fs
js
loop
xchg
imulb
jnp
insb
add
xor
loop
iret
mov
cwtl
loop
cmp
test
jecxz
sub
inc
test
cmp
lock
sub
mov
inc
sub
mov
or
mov
daa
loopne
icebp
mov
out
mov
push
sbb
xor
call
imul
push
popf
push
loopne
inc
stc
xchg
jno
dec
popf
mov
jo
movsl
xchg
add
nop
addr16
lahf
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
jmp
js
jb
sub
cmp
mov
mov
xor
adc
adc
adc
in
aas
mov
pop
aas
pop
mov
adc
cmp
int
mov
cwtl
mov
inc
call
out
mov
out
mov
sbb
sbb
push
and
addb
lock
mov
pcmpgtd
leave
sbb
sbb
push
das
mov
sbb
inc
lds
inc
or
mov
cmp
push
push
jmp
icebp
scas
pop
out
ss
outsl
in
test
shr
shlb
jle
shrl
xchg
xor
test
pop
jb
inc
push
pop
iret
mov
movsl
les
sub
or
cld
xchg
fs
aad
xchg
or
aam
lock
jo
loopne
jmp
jnp
sarl
dec
jmp
fbstp
popa
popa
outsl
and
pop
mov
dec
cmp
sbb
aas
das
enter
cmp
hlt
enter
mov
out
dec
std
out
outsl
loop
inc
xchg
cmp
pop
or
jns
enter
xor
loopne
lahf
adc
sub
mov
and
loop
popf
inc
xchg
push
das
inc
cmp
jb
push
lcall
xchg
outsl
das
das
test
and
add
ret
movsb
adc
arpl
push
cltd
cmp
pxor
cld
loope
aam
jnp
loop
dec
ret
call
movb
testl
xor
dec
fwait
inc
cmp
decb
adc
xor
pop
in
aaa
ror
imul
das
neg
rolb
jne
cmpsb
jg
fdivrs
fldenv
sub
fnstcw
aad
xchg
int
pop
scas
jg
mov
or
sub
inc
fsts
mov
or
xchg
jmp
pop
pop
push
daa
pop
mov
int
push
and
dec
lea
xor
pop
xchg
adc
mul
mov
pusha
nop
test
xor
and
xchg
or
bound
dec
dec
into
pop
or
notb
adc
xchg
rol
cmc
jl
insl
iret
in
mov
shrb
jle
push
jecxz
mov
add
adc
in
inc
sub
and
mov
or
les
sarl
cs
xchg
cmc
xor
stos
jl
xor
aad
popa
imul
cmp
shlb
or
divb
pop
aas
and
add
divb
sarb
sbb
lds
adc
pop
dec
xor
dec
mov
lret
jno
inc
dec
mov
repnz
cmpsl
dec
xchg
sbb
mov
fwait
jnp
andl
mov
mov
cmp
rcrl
mov
leave
mov
sbbl
rcll
lods
neg
ljmp
sub
sbb
adc
call
out
pusha
loope
push
clc
daa
cwtl
in
mov
inc
pop
js
shrl
adc
int3
sbb
sbb
scas
push
xchg
pop
adc
int3
fisubs
push
in
aaa
ret
sub
mov
push
shlb
inc
push
sub
movsl
adc
sahf
mov
out
sbb
call
repz
cmp
jg
std
into
sub
mov
aam
test
sbb
pop
nop
pop
incl
aam
mov
scas
dec
dec
sbb
inc
cld
in
ja
movb
fcomps
cmp
or
inc
mov
xorl
xchg
xchg
xchg
cmp
inc
adc
lods
rolb
xor
jmp
mov
popa
lcall
mov
js
sub
adc
adc
adc
xchg
pop
int
jne
sub
aad
mov
xchg
sti
rorb
mov
mov
pushf
sbb
std
pop
jns
lahf
notb
sub
sub
lret
or
mov
pop
jmp
aad
or
fidivrs
push
movsb
ficoms
and
pushf
std
pop
loopne
and
std
or
popf
xor
int3
pop
mov
xchg
or
pop
fdivrs
imull
fidivrl
dec
nop
daa
mov
push
insl
pop
arpl
mov
jns
cmp
in
outsb
fists
enter
fiadds
dec
mov
and
mov
mov
ljmp
push
shll
daa
and
out
inc
aad
repnz
pop
push
jmp
insb
adc
mov
add
mov
adc
push
mov
mov
mov
fcmovnu
jo
sbb
cli
jae
aaa
mov
fwait
pop
cmp
ljmp
xor
and
adc
or
sahf
popf
mov
xor
pusha
pop
and
inc
lock
les
cmp
mov
push
cmp
frstor
push
insb
sti
fnstsw
fidivrs
js
clc
mov
movsb
xor
jns
daa
cmpsl
out
notl
xchg
imul
cmp
dec
mov
jmp
ss
mov
mov
mov
jmp
dec
pop
push
dec
mov
sbb
cwtl
mov
cltd
test
sub
scas
inc
repz
xor
sub
cmp
inc
and
insl
push
lahf
ficomps
add
imul
dec
pushl
sbb
int3
xchg
mov
push
les
aas
lahf
movl
test
push
mov
mov
outsl
mov
aas
mov
stos
xchg
xchg
movsl
les
dec
mov
xor
xchg
dec
aas
mov
shl
mov
dec
adc
addl
cwtl
arpl
mov
inc
ret
cmp
repz
cmp
call
pushf
out
das
and
ljmp
lea
hlt
adc
jmp
mov
adc
into
push
cli
sub
jno
ss
mov
mov
lahf
pushf
ror
cmp
popw
daa
cmp
cwtl
xchg
sub
out
lret
sbb
dec
inc
fiadds
jmp
lret
or
mov
clc
mov
inc
dec
lret
mov
sbb
lods
mov
xchg
dec
int
jmp
lock
xorl
mov
in
push
mov
in
xor
insb
stc
call
fists
mov
stc
xchg
pushf
sub
mov
leave
rcl
mov
cli
enter
or
sbbb
push
cltd
mov
rclb
xor
fldcw
mov
shll
negb
ss
inc
push
add
cwtl
cld
cmp
pushf
fiadds
iret
loope
sbb
or
rcl
xor
out
out
and
jmp
push
cmp
inc
mov
mov
outsl
sbb
call
sub
sbb
dec
cmp
cli
cmp
ljmp
jge
aad
inc
mov
mov
jmp
xchg
int
cmp
add
mov
or
cmp
lock
push
pop
faddp
addl
jne
sahf
mov
shrb
idivb
xchg
popf
sub
xchg
inc
xchg
jmp
mov
xchg
rorb
mov
pop
repnz
mov
movsb
sahf
sub
aas
xor
icebp
inc
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
test
sbbl
pop
sbb
jle
xor
int
adc
fmull
adc
lcall
cltd
jns
jmp
pop
outsb
or
arpl
push
cwtl
inc
or
mov
call
or
ror
mov
jns
js
adc
sti
leave
push
dec
xchg
nop
or
je
dec
aam
pop
ret
xchg
push
mov
jo
rcl
and
out
lea
mov
in
ret
test
jp
mov
jns
mov
pop
or
or
lret
mov
iret
or
cmp
loopne
mov
mov
cmp
mov
xor
mov
mov
repz
call
jg
jnp
iret
ret
stos
push
mov
push
cmp
fldl
pop
dec
or
jb
addr16
cmpl
mov
stc
roll
sub
xchg
push
mov
and
add
andl
sub
pop
sahf
lock
hlt
push
pop
fldcw
xchg
pusha
imul
or
daa
leave
out
sbb
mov
push
push
xchg
sbb
iret
or
test
fs
pushf
movsl
insb
and
and
xchg
js
les
sub
ret
outsb
movsl
or
and
andb
and
pop
test
mov
movsb
xor
ret
mov
stos
dec
push
aam
notl
xchg
in
mov
imulb
aas
inc
dec
inc
scas
adc
inc
xlat
pop
je
pop
xchg
add
ds
ret
cmpsl
fidivrl
jecxz
pusha
ljmp
test
int3
icebp
lcall
ss
adc
mov
ret
xchg
ja,pn
enter
sbb
movsl
lock
push
mov
cmpsl
xchg
xor
jp
adc
orl
mov
cmpl
arpl
pop
mov
add
xorl
sub
fs
cmc
mov
call
cld
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
jmp
xchg
add
cmp
scas
insb
inc
aas
jmp
xchg
sbb
adc
movlps
mov
int
fcmovb
imul
int3
xlat
xor
in
cs
jl
loope
lods
push
xchg
jns
or
add
cmpsb
jo
mov
ds
scas
mov
cmpsb
pop
mov
cltd
imul
ss
lods
decb
mov
jp
enter
cmpl
dec
repz
dec
enter
pop
addr16
je
call
adc
jnp
enter
sbb
lds
mov
cmpl
orb
push
lahf
fwait
push
add
adc
sarl
lock
adc
pop
arpl
repz
divl
inc
dec
pop
add
pop
cmp
xor
add
loop
adc
mov
jb
in
lods
cmpsl
les
lahf
test
shlb
out
js
loope
sbb
out
movsl
mov
mov
imul
addl
adc
and
pop
push
sbb
cmp
insb
cmp
cmp
rclb
es
push
gs
repz
mov
aad
lods
out
adc
lret
fsubrl
jns
setns
ljmp
adc
mov
xchg
xor
fcoms
fmuls
mov
push
icebp
sti
push
cld
dec
pop
xchg
pushf
pop
mov
xchg
out
inc
add
jno
ja
int3
mov
bound
mov
jns
sahf
push
outsb
pop
jae
adc
dec
bound
ljmp
out
loop
shll
loop
ficompl
mov
stos
cltd
xchg
aas
fisttps
and
cmp
shl
add
aaa
sbb
xorb
out
nop
aam
push
sub
adc
or
push
in
sbb
movsb
loope
roll
or
leave
jmp
in
pop
pop
rorb
xor
movl
movl
movl
movl
mov
jmp
outsl
or
or
popa
imul
nop
js
cwtl
sti
jle
sbb
adc
movlps
jp
xchg
test
repz
jp
adcb
aam
fs
test
and
stos
lods
add
fwait
in
adcl
mov
cltd
push
or
sub
cmc
imull
dec
pop
mov
cmp
mov
std
ds
cmpsb
imul
pop
dec
ds
cmp
and
cmp
fists
adc
cmp
les
stos
adc
push
adc
mov
es
add
adc
insb
clc
xor
in
mov
mov
jg
jmp
out
dec
movsb
cmp
ja
fdivl
iret
xor
xchg
stc
movsl
enter
jno
fldz
jnp
jbe
sub
pop
inc
sub
xchg
les
fs
pop
push
sbb
pop
sub
aaa
inc
aas
sub
aas
sub
das
call
adc
or
test
mov
xor
fwait
or
int
nop
aaa
in
in
and
xor
jmp
sbb
dec
test
rcrb
sub
jge
leave
inc
add
xchg
mov
pop
movsb
fmull
in
xchg
xchg
test
mov
out
inc
push
sub
dec
loope
fstpt
decl
test
mov
popa
xor
dec
aam
pop
ret
sbb
addr16
test
or
jp
out
inc
dec
inc
stos
cs
sub
mov
dec
sbb
loopne
xchg
jae
mov
jno
repz
movsb
jmp
mov
cmpb
iret
jno
fsubrl
push
les
pop
mov
addr16
dec
dec
out
stos
mov
xor
int
cwtl
hlt
add
out
mov
aam
aad
icebp
lret
fwait
mov
js
or
bound
cmpsl
xchg
mov
notl
adc
mov
and
push
addb
mov
add
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
jmp
and
cmp
aaa
sbb
bound
sarb
call
adc
fmull
adc
add
push
xchg
push
mov
popa
roll
push
xchg
add
cld
rol
lods
xor
jge
mov
xor
clc
or
cmpsl
pop
sub
cmp
dec
test
dec
adc
call
cli
popf
out
jmp
stos
or
jb
add
mov
mov
cli
dec
sahf
jg
sub
icebp
js
out
pushf
sub
idivb
xchg
out
decl
lock
sub
subl
in
aam
jnp
enter
jecxz
cs
daa
cmpl
push
in
rolb
mov
ss
and
jno
inc
pop
outsl
insb
sub
add
loope
test
cs
dec
mov
xchg
clc
fwait
idivl
cs
or
shr
or
cli
out
out
lods
adc
or
out
sahf
in
inc
cltd
lret
xchg
jecxz
stos
out
div
and
inc
les
out
call
data16
mov
mov
dec
mov
inc
int3
out
pushf
xchg
add
movsl
mov
cmp
jns
je
jmp
into
gs
in
pop
sbb
repz
add
jbe
add
sbb
pusha
in
insb
add
icebp
or
sub
int3
ja
fisttps
dec
push
pop
mulb
enter
lret
imul
lds
push
pop
cmp
mov
push
call
outsb
mov
int
jbe
lahf
pop
xor
dec
inc
mov
cld
incl
lea
nop
ss
ret
mov
mov
stos
or
push
push
jo
xor
test
xchg
mov
or
fcmovnb
sbb
movsb
shlb
adcl
inc
pop
mov
jmp
mov
fisttpl
fwait
mov
or
pop
out
std
inc
xor
mov
out
push
insl
push
jle
rorl
ljmp
pop
sub
xor
add
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
jmp
mov
xor
jns
fldln2
jle
xchg
je
in
adc
adc
movlps
sub
lods
loopne
fcmovbe
fcomps
add
std
cli
inc
pushf
das
and
pusha
push
or
int
or
pop
xchg
cmp
scas
test
cmp
rclb
cli
call
jae
sub
cmpsb
jp
inc
imul
sub
push
dec
xchg
push
jae
add
mov
and
lret
pushf
stc
and
pop
jne
mov
out
cld
add
in
outsb
cmp
pusha
adc
push
mov
stos
pop
scas
movl
or
sbb
ds
inc
mov
fisttpll
and
xchg
and
les
ja
cmc
adc
jp
sbb
mov
add
add
or
inc
dec
test
mov
jmp
in
or
and
push
shll
push
sbb
clc
rcll
mov
icebp
loope
mov
out
mov
sarb
inc
adc
add
inc
and
cmp
jb
xchg
push
push
or
mov
jnp
jnp
xchg
int
cli
call
and
cmc
clc
std
or
xor
lahf
inc
cli
add
cwtl
movsb
and
inc
adc
jae
sbb
lret
and
jmp
xchg
push
push
mov
outsl
insl
jecxz
mov
xor
mov
dec
sub
clc
dec
ds
and
int
mov
repz
xchg
das
lds
xor
push
sbb
mov
sub
adc
jnp
pop
mov
imul
jb
sarb
or
les
dec
in
push
jns
into
cwtl
enter
dec
lds
lret
xchg
cmc
movsl
and
fldl
leave
lcall
mov
push
shrl
dec
rorl
push
mov
lea
lahf
les
jne
outsb
aam
mov
bound
jecxz
mov
sbb
ljmp
mov
xorb
in
cmp
add
roll
mov
cs
dec
jae
mov
mov
adc
fmull
adc
xor
lds
fisttpll
mov
test
cli
jle
push
jb
sahf
adc
pushf
mov
jg
bound
lret
add
add
and
push
loope
movsb
int3
out
jle
ret
pushf
lea
jle
andb
cmp
lcall
mov
or
jns
movb
or
dec
and
push
lcall
cs
into
jp
and
dec
jno
popa
mov
div
sbb
icebp
sbb
pop
imul
and
mov
ss
add
inc
hlt
movsl
popa
cwtl
rep
inc
sub
jle
test
jmp
mov
pop
mov
shll
add
out
gs
jno
jecxz
lcall
and
mov
push
js
ret
push
fcompl
inc
gs
adc
pop
data16
cltd
xchg
out
sbb
aaa
fwait
pop
iret
out
dec
aaa
jns
js
mov
cmp
scas
cmpsb
cmpl
dec
cwtl
pop
and
push
xor
mov
fwait
out
enter
sbb
mov
test
frstor
push
repnz
lods
adc
filds
mov
outsb
out
test
cmp
ljmp
pushf
jge
stos
in
shrl
add
lcall
and
xchg
lret
loop
fistps
xchg
cld
xor
or
jo
pop
adc
popa
int
outsb
sahf
mov
push
rorb
cmp
sub
xor
jmp
xor
les
mov
jo
dec
imul
test
jl
lcall
or
cwtl
mov
out
dec
dec
dec
or
or
js
cld
xchg
jecxz
leave
pop
lret
bnd
and
cltd
push
dec
ror
push
shrb
xchg
add
sub
faddl
mov
cmp
shl
icebp
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jmp
mov
aaa
cmpsl
sbb
test
xor
js
or
adc
movlps
and
xor
or
sub
aaa
in
test
push
les
sbb
lods
adc
xor
lock
pop
lahf
fwait
jp
dec
xchg
ja
mov
pop
arpl
inc
sub
loope
int3
inc
mov
inc
inc
mov
lods
js
fistpll
mov
outsb
gs
inc
and
fldl
dec
test
dec
or
enter
inc
jno
push
aam
ss
sbb
add
mov
push
adc
cmp
mov
and
dec
test
gs
inc
adc
dec
inc
xor
and
leave
popa
arpl
in
cmpsb
shll
pop
inc
pop
incl
movsb
lcall
cld
shrl
xor
mov
int
cmc
add
dec
or
mov
cltd
fimull
in
jl
pushf
imul
mov
jp
mov
sub
fstps
call
xchg
mov
stos
push
pop
add
int
inc
cltd
and
aad
mov
mov
cli
xchg
xchg
insb
jno
sub
pop
lret
aaa
scas
lret
mulb
jg
rcrl
aaa
push
stos
sbb
mov
inc
test
ficoml
push
xchg
pop
dec
cmp
pop
jl
pop
xchg
lcall
imul
xor
sbb
faddl
lods
sbb
call
jl
fistl
xor
and
loop
add
lcall
mov
adc
or
fisttps
loop
sti
lock
xor
inc
push
in
pushw
cmpsb
jecxz
andl
jg
and
sti
aam
sbb
push
or
insb
mov
xchg
movsb
fs
lahf
aaa
inc
pusha
xor
push
or
out
inc
or
add
outsl
xchg
je
out
cmp
popa
or
fidivrl
mov
adc
mov
sub
xor
inc
in
sub
loopne
cmp
add
inc
fdivrl
cmp
add
inc
in
int
add
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
jmp
popa
pop
fimull
dec
sbb
dec
neg
mov
inc
push
adc
fmull
adc
cmp
aam
hlt
dec
or
mov
adc
xchg
dec
pushf
push
in
mov
xor
sbb
cltd
dec
jp
bound
std
push
jmp
mov
test
icebp
dec
scas
fdivs
aas
jbe
or
mov
mov
testb
xor
sub
shlb
mov
rol
push
xor
mov
mov
aas
nop
pop
into
inc
pop
call
aaa
int
in
fsubs
and
mov
pushf
mov
xchg
ret
or
jle
jl
int3
mov
mov
xchg
ljmp
shrb
sbb
mov
mov
jmp
xchg
fidivl
mov
in
inc
add
jmp
xor
mov
int3
or
add
aam
std
jp
add
adc
and
add
das
test
mov
xor
or
xlat
push
mov
inc
adc
int
and
popa
sti
push
stc
jno
divb
sbb
lret
imul
scas
imul
dec
js
hlt
cmc
aad
insb
or
pop
sbb
dec
and
popa
test
out
or
inc
inc
xchg
movsb
sub
cmc
sbb
lret
scas
fwait
jae
cmp
cmp
ljmp
stos
shlb
cmpsb
jecxz
inc
push
lcall
inc
or
pop
sub
or
imul
jl
arpl
mov
movsb
or
add
repnz
lret
pop
pop
push
push
xchg
dec
sub
push
push
jecxz,pt
add
inc
mov
add
shrb
fbstp
loopne
mov
mov
pop
dec
adc
mov
pop
sub
mov
pop
outsb
in
in
add
scas
inc
imul
and
jnp
loope
out
xchg
push
ret
xchg
call
cmp
jb
jmp
add
cmpsb
pop
sahf
aaa
xor
mov
mov
push
add
adc
movlps
enter
shlb
mov
mov
adc
int3
shl
adc
mov
pushf
out
call
mov
test
cmp
shlb
sub
daa
pop
sbb
dec
test
insb
int3
fistpl
or
jb
push
dec
je
adc
xchg
cmp
mov
push
shll
insb
and
mov
outsl
fldcw
faddl
ret
sub
mov
jmp
daa
add
push
mov
jle
lahf
bound
test
jecxz
outsb
popa
mov
adcb
xchg
divb
enter
and
lret
addr16
cmpb
inc
xchg
mov
hlt
cmp
mov
mov
xchg
cmc
gs
adc
xchg
outsb
adc
imul
scas
mov
lahf
popa
es
or
xchg
add
mov
loope
andb
in
xchg
imul
sub
out
rcrl
js
sti
scas
inc
leave
cmpsl
dec
fstpt
int3
icebp
fcomp
pushf
mov
xchg
jbe
fmuls
roll
data16
xchg
or
mov
cmpsb
enter
int3
xchg
popf
gs
mov
data16
push
mov
cmpsb
imul
xchg
jbe
pushf
and
shll
add
insl
add
push
aaa
movsl
ds
pop
mov
lahf
pop
pop
mov
hlt
xchg
mov
rcrl
aaa
sbb
es
jg
fistpll
repnz
cmpsl
negl
addr16
test
ret
mov
adc
jae
mov
sub
lahf
int
jge
fcomi
xlat
das
outsl
mov
jne
int
out
xchg
pop
or
in
es
pminub
mov
cmp
in
jo
je
insl
out
sbb
dec
jb
decl
push
adc
out
cs
sub
insl
inc
into
xor
negl
aas
loope
fildl
inc
or
ja
add
inc
or
dec
add
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
jmp
ja
fistps
pop
ja
outsl
popa
ss
adcl
aad
adc
fmull
adc
cltd
fucom
fistpll
lret
sub
pop
repnz
jp
mov
data16
cmp
rorl
mov
and
test
loopne
dec
xor
dec
jbe
stc
sub
xlat
pop
adc
jg
jo
mov
mov
outsl
push
sbb
pop
adc
pushf
dec
xor
enter
jns
cltd
pop
shlb
nop
sbb
popl
aam
adc
xchg
xchg
shlb
mov
lret
jecxz
gs
das
stc
js
test
sub
aaa
adc
lods
sbb
daa
mov
outsl
movsl
dec
int3
push
adc
sub
adc
dec
lea
outsl
push
test
mov
ds
or
lds
and
jle
sub
or
sahf
lret
cmp
mov
cmp
xchg
out
dec
jno
movb
pop
ja
je
cltd
push
test
push
add
and
imul
add
test
mov
xor
mov
loope
mov
nop
lret
xor
daa
in
daa
sbb
or
mov
test
pop
sbb
jae
mov
movsb
test
mov
into
imul
test
push
and
jp
sahf
inc
shlb
jae
add
mov
subb
popf
aas
mov
btc
shl
rclb
inc
enter
xchg
cmpsl
call
xchg
push
mov
adc
dec
adc
xchg
sub
ss
ror
mov
inc
jnp
cmp
fiadds
adcl
inc
mov
xor
push
outsb
push
jb
popf
stc
cmp
mov
inc
std
ss
cmp
pop
pop
mov
sar
andb
popa
adc
xor
dec
pop
jge
pop
in
xchg
lret
lods
in
fsubl
mov
lock
shr
loop
add
nop
clc
mov
outsb
cmp
test
jbe
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
jmp
lock
clc
test
inc
imul
shlb
adc
fmull
adc
out
sbb
pop
adcb
sub
fimuls
addb
dec
pop
and
jp
cld
xlat
leave
push
push
xchg
mov
jb
insl
xchg
aaa
std
and
xchg
cmp
fwait
adc
dec
ljmp
mov
dec
aaa
and
sub
and
dec
aaa
mov
mov
sbb
mov
movsl
ds
mov
cmpb
and
repnz
lcall
in
mov
shlb
shl
jg
cltd
add
push
notb
mov
andl
xchg
xchg
mov
sbb
rcrb
in
repnz
lret
pop
data16
insl
push
xchg
adc
or
inc
push
rorb
mov
cmpsl
jmp
in
movsb
push
xchg
bound
add
cmp
inc
lds
xchg
xchg
aaa
repz
aad
rcr
mul
cmpsl
mov
mov
add
test
push
subl
fidivs
mov
lret
inc
xchg
xchg
test
fists
lret
sarb
dec
jmp
xor
repnz
adc
and
jne
xor
mov
aad
cli
mov
mulb
add
sbbb
mov
dec
insb
add
jle
ljmp
insl
jmp
mov
push
ret
and
push
jae
outsl
aaa
ljmp
sti
ja
jbe
in
xchg
mov
dec
sbb
out
sbb
loop
adc
push
pop
push
lea
push
cmp
repz
xor
adc
mov
add
pop
fmull
mov
pop
or
pop
xor
push
jmp
into
push
jmp
leave
pushf
xor
cltd
xchg
sbb
fwait
aad
mov
hlt
pop
mov
and
ljmp
das
pop
add
std
inc
mov
pop
insl
sub
into
sar
aaa
dec
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
jmp
mov
pop
mov
insb
pop
dec
punpckhdq
adc
fmull
adc
inc
add
fbld
dec
pop
dec
data16
nop
inc
jbe
and
adc
inc
out
dec
and
sub
stc
mov
sbb
sub
into
pusha
addr16
ljmp
pop
fidivs
ret
into
jmp
cmpb
add
daa
insb
js
and
mov
int
cmc
push
addr16
mov
sbb
jge
push
call
fstl
fcompl
rcrl
icebp
jbe
test
pop
pushf
movl
hlt
ds
mov
cmp
insb
int
and
jb
ds
enter
dec
sti
sub
cmp
inc
mov
pop
je
addr16
lret
outsl
pop
pop
pop
sbbl
mov
imul
sbb
push
test
ljmp
loopne
inc
mov
les
repz
subb
shrb
ret
xchg
dec
push
sbb
add
or
xchg
dec
xchg
lds
xchg
aam
iret
jo
cld
push
rcrl
pop
pop
add
cwtl
mull
cmp
scas
mov
mov
adcl
pop
xchg
adc
pop
out
dec
lret
pusha
cmpsl
mov
cmp
int
out
pop
inc
push
dec
enter
sbb
popf
dec
fs
ss
sbb
pop
int
movaps
mov
add
sahf
lea
aam
cmpsl
sbb
icebp
xor
outsl
and
mov
or
xor
loopne
cmp
or
lret
outsl
sbb
adc
dec
xor
movsb
sbb
out
mov
test
fisubrs
push
xor
xlat
sub
enter
jnp
addl
popa
adc
icebp
xchg
cltd
arpl
jle
adc
mov
lret
loopne
fildll
insl
jmp
and
inc
clc
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
jmp
push
jb
adc
mov
xor
cmpsb
dec
mov
sub
adc
adc
es
dec
lock
in
in
add
mov
mov
mov
loop
arpl
call
lea
sbb
daa
shll
sub
sbbl
or
jo
mov
cs
addr16
xchg
outsb
add
push
outsb
xchg
xlat
enter
fsubs
mov
subl
iret
mov
mov
int
or
fdivs
ds
insb
dec
cli
std
jbe
stc
sbb
sbb
loop
pushf
das
mov
sub
jb
pop
push
inc
mov
push
sub
push
iret
addl
scas
xchg
shlb
xchg
inc
adc
or
stos
mov
mov
cmpsb
dec
mov
clc
je
dec
das
mov
pop
sbb
sub
mov
jmp
mov
jo
jno
xlat
gs
pop
inc
sti
mov
jp
or
gs
or
loope
inc
jp
and
mov
ficoms
aad
push
or
xor
imul
add
dec
icebp
xor
push
insb
add
mov
pop
xorb
movsl
adc
fcoml
mov
out
sbb
leave
inc
sti
adc
loopne
dec
outsl
aad
push
lahf
cmp
das
push
jge
cmpsb
lcall
pop
xor
fs
dec
idivl
adc
pop
fwait
xchg
hlt
jecxz
enter
les
mov
lret
jge
pop
cmp
pusha
std
mov
sub
push
inc
cmpsl
pop
add
xlat
fcompl
mov
adc
mov
fisttpl
inc
arpl
xor
inc
sbb
lock
or
inc
sti
sbb
addr16
movsb
in
insb
sub
sbb
arpl
or
gs
dec
subl
pop
shrb
pop
inc
pop
out
sub
gs
dec
loop
jae
dec
lahf
cmpb
sub
add
jle
xor
mov
jae
cmpb
cmpsb
out
int3
mov
cltd
add
fsubrl
push
cmp
test
imull
pop
shrl
rsqrtps
mov
sub
push
fwait
dec
mov
enter
push
xchg
cwtl
pop
fisubl
std
adc
add
lock
inc
cwtl
sahf
out
divl
clc
in
shlb
cmpsl
sbb
dec
ds
dec
cld
mov
test
in
insl
or
mov
fldcw
push
cli
adc
mov
lret
js
out
insb
sbb
int
ret
xchg
push
or
out
std
loope
xor
cli
sbb
jno
or
test
rolb
inc
lret
xor
cld
mov
out
push
mov
push
enter
and
gs
cmpsb
adc
xor
add
xchg
or
and
lods
mov
test
mov
enter
sub
xor
adc
mov
hlt
push
sbb
in
test
ljmp
mov
xchg
xorb
aaa
scas
in
insb
dec
jb
jne
pop
mov
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
jmp
imul
in
push
pop
loop
xchg
js
mov
adc
jo
adc
or
in
dec
jns
sahf
inc
xchg
adcl
shl
sti
fnstsw
into
dec
xlat
push
fcmovbe
or
mov
mov
fidivrl
lret
test
mov
pop
stos
mov
and
pop
mov
int
jb
and
int3
dec
xor
in
cmp
test
mov
imul
cmc
fnstenv
xchg
push
pop
outsl
movsb
into
mov
sar
mov
adc
mov
cli
outsl
incb
fxch
sbb
aad
aas
inc
inc
lock
lcall
adc
or
inc
lods
mov
xlat
out
test
cwtl
into
fsubs
mov
ret
mov
mov
pop
div
gs
mov
mov
inc
lahf
icebp
lea
sti
stc
outsl
sbb
push
mov
adc
loop
push
mov
ret
test
movsl
es
psubq
jnp
stc
cmp
and
or
ljmp
sbb
fwait
jmp
cli
scas
mov
je
fbld
mov
mull
stc
and
mov
rcrb
fcoms
push
dec
and
out
inc
xchg
mov
jo
lds
inc
lahf
pop
pop
mov
mov
andb
bound
xchg
inc
xor
xlat
dec
dec
cmc
sti
je
std
adc
sbb
scas
xlat
ja
pop
adc
cli
dec
roll
xor
fdiv
cmpsb
loopne
pop
pop
fsubrs
pop
imul
stos
add
enter
out
repz
lds
stos
lahf
scas
out
movsb
fstp
movsb
aas
adc
cmpsl
mov
jbe
push
sbb
cmpsb
jbe
push
repz
or
lods
lods
int
xchg
cmp
cmp
or
mov
pop
shl
mov
push
neg
inc
sub
and
mov
pop
inc
inc
sbb
iret
adc
cmpsl
xlat
xor
stos
ret
sbb
call
mov
sbb
pop
mov
pop
aad
cld
insb
dec
sub
lahf
mov
sti
xchg
add
and
pushf
jbe
ret
and
frstor
sbb
jecxz
push
lret
or
mov
aaa
popf
aam
inc
imul
sbb
and
test
cmp
pop
int
or
scas
pop
ss
mov
roll
inc
fmuls
and
mov
jmp
and
lds
aas
pop
jb
and
cmp
gs
mov
ret
or
and
mov
dec
ret
hlt
dec
adc
daa
nop
add
mov
or
sti
scas
in
scas
mov
mov
dec
sub
mov
leave
mov
call
fs
repz
mov
data16
mov
jmp
cltd
pop
sub
cmp
cli
cmpsb
and
insl
lods
xchg
iret
mov
push
rorb
mov
mov
out
outsl
daa
shr
fidivs
cld
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
jmp
mov
jo
pusha
popf
sbb
mov
inc
mov
in
adc
jo
adc
lods
lcall
push
inc
dec
push
or
mov
data16
enter
jge
pop
jge
outsl
push
cltd
movsb
lods
js
push
xchg
or
loope
inc
add
mov
rclb
clc
out
js
pop
adc
mov
movsl
adc
mov
xchg
divb
mov
sub
loopne
rcll
repnz
inc
pop
add
jne
sub
xor
mov
fdiv
insl
cltd
cld
mov
es
push
movsb
stos
and
mov
jecxz
sub
mov
add
jmp
dec
xorl
or
loope
mov
rol
icebp
aam
mov
cmp
mov
adc
push
in
rclb
add
mov
jne
insb
and
repnz
add
adc
mov
push
das
leave
and
enter
imul
pop
ret
push
mov
xor
sbb
sahf
mov
dec
push
rcrl
pop
leave
jns
movsb
mov
mov
add
lcall
add
test
dec
shr
add
ret
fsub
out
adc
shll
sub
xorl
insb
inc
dec
inc
mov
data16
gs
dec
pmaxsw
or
pop
test
in
test
sarb
jnp
fwait
test
push
xchg
fadd
inc
fdivrl
mov
fsubr
sbb
xchg
subl
xor
jae
jne
add
movsl
xchg
xchg
add
mov
jae
sti
sbb
xchg
std
in
adc
scas
mov
pop
pop
sbb
push
pop
xchg
xchg
pop
roll
cli
pop
jmp
rcl
and
test
hlt
xor
pop
push
data16
lock
test
popf
movsb
cli
cwtl
mov
mov
jecxz
pusha
ret
out
mov
mov
mov
movsb
subl
inc
inc
pop
jecxz
dec
lahf
dec
gs
hlt
in
inc
rorl
sub
pop
hlt
test
andb
xor
cltd
mov
xchg
ja
data16
sti
or
lret
push
iret
cltd
in
pop
cmp
test
movsl
jne
sbb
imul
jno
or
lcall
frstor
sbbb
aam
add
out
test
xlat
call
xchg
push
sub
test
dec
insl
aaa
pop
ret
sbb
loop
xchg
subl
push
decb
jmp
pop
clc
inc
mov
loope
leave
movsl
loope
fadd
aam
mov
jae
pop
dec
aas
bound
or
and
in
adc
jo
shll
out
pushf
and
test
cmp
adc
push
rolb
xor
add
or
in
hlt
insl
ret
aad
xchg
pusha
mov
xchg
ss
mov
test
push
xchg
das
sahf
stos
aam
out
shrl
dec
dec
cmc
stos
pop
stc
lock
fs
cmp
loope
inc
inc
sbbl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
sbb
or
jmp
bnd
and
jo
adc
aas
sbb
dec
pop
inc
test
pop
dec
test
mov
xlat
in
adc
mov
push
xchg
fbstp
daa
vpsubd
adc
mov
sbb
dec
and
xchg
in
imul
add
sahf
mov
das
inc
pop
xlat
int
sbb
jmp
pusha
xchg
xchg
mov
push
pop
sub
mov
push
test
jne
adc
aaa
movsl
mov
cmp
movsb
and
insb
aad
fisttps
xchg
sti
xor
fwait
mov
inc
iret
daa
inc
inc
scas
mov
shr
lcall
mov
mov
mov
add
and
mov
mov
mov
mov
xchg
pushf
cmp
stos
sbb
adc
mov
or
test
sub
mov
dec
xchg
mov
loopne
or
and
pop
scas
subb
pop
push
jb
sbb
mov
mov
xchg
stos
sbb
hlt
mov
sub
aas
lret
dec
out
xchg
add
adc
or
adc
and
xchg
outsl
and
repz
sbb
jne
test
bound
mov
aaa
aam
outsb
inc
imul
nop
cmpsb
push
lret
pop
mov
mov
or
cmpsl
fnsetpm(287
outsl
in
fidivrl
das
add
xchg
mov
mov
mov
std
jmp
cli
xor
sbb
pop
leave
test
jne
mov
imul
mov
xchg
xor
sbb
or
sbb
in
mov
pop
cmp
rcl
popa
pop
and
jmp
into
ficoms
ds
leave
insb
mov
or
mov
inc
pushf
or
mov
jo
jge
jp
pop
and
out
sbbb
xor
cmpsb
add
pop
jo
insl
mov
mov
imul
loopne
mov
ja
xor
cwtl
nopl
cmp
popa
jns
imul
add
lret
or
add
pop
mov
sbb
imul
xlat
int
movsl
mov
push
test
aad
popf
scas
jnp
lret
xor
mov
bound
pop
and
pop
and
or
shll
xchg
int
dec
stc
pop
enter
and
or
adc
mov
inc
test
mov
xor
pop
inc
mov
mov
lret
aam
in
or
jle
inc
ja
jl
jmp
xchg
cmc
lock
xor
cld
aaa
nop
and
nop
fdivl
cmp
cltd
push
sub
jmp
imul
xchg
in
push
inc
add
mov
push
in
sti
add
dec
pop
lcall
mov
sbb
jb
fcom
inc
add
mov
pusha
push
adc
inc
jns
inc
ds
rorl
jae
mov
loope
push
push
mov
pop
mov
mov
std
jbe
adc
mov
lock
inc
clc
cmp
mov
or
and
mov
movl
mov
mov
jmp
jg
inc
dec
and
cwtl
lods
scas
inc
mov
jo
adc
push
or
dec
iret
aam
fadds
push
add
imul
push
dec
leave
or
and
data16
fnstcw
cmp
in
pushf
pop
and
in
xchg
push
mov
filds
ds
loop
sub
mov
or
loop
fidivs
call
jecxz
mov
xchg
push
mov
pop
pop
xchg
fldl
fs
sub
hlt
bound
or
out
inc
mov
mov
sbb
clc
jl
movsl
push
push
or
lock
ja
out
sbb
xor
cmp
xchg
and
outsb
and
aad
into
adc
fcompl
popa
mov
ss
mov
sti
xor
shll
inc
pop
shrb
fadds
xchg
cmp
inc
add
jmp
mov
mov
xlat
dec
mov
and
jbe
jmp
dec
aam
push
mov
js
lahf
in
jae
aam
out
add
jne
jmp
cmp
data16
scas
mov
fidivrs
mov
add
insl
or
mov
repz
test
push
in
js
mov
aam
cmp
mov
mov
addr16
repnz
mov
jp
pop
es
sbb
out
jg
add
fs
inc
mov
mov
mov
inc
out
add
into
push
iret
out
fs
and
push
aas
push
cmpsl
imul
iret
adc
jnp
sarb
sbb
loop
xchg
inc
mov
xchg
adc
imul
add
cmpsl
push
push
jg
mov
xor
ficompl
fcmovnbe
pop
push
enter
jge
test
xchg
cmp
out
inc
repnz
mov
inc
outsb
out
stos
push
pushf
scas
aad
cmpsb
insb
or
int
and
test
push
rcrb
dec
sub
pop
xchg
jge
xchg
inc
mov
lahf
notl
mov
cmp
lret
xor
into
mov
cmp
data16
xchg
cmp
mov
or
cltd
add
stos
out
mov
add
dec
xor
loop
outsb
mov
rorl
sub
fstl
lret
sbb
or
inc
xchg
fldcw
pushf
or
out
mov
lea
test
lods
les
pushw
rorl
and
shr
mov
lahf
xchg
jns
gs
test
and
clc
movsb
inc
js
test
es
push
roll
pop
inc
mov
decb
js
fbstp
pushf
shl
rcr
and
mov
enter
push
and
pop
add
xchg
jbe
xchg
test
pop
lahf
push
clc
fstpl
mov
add
repz
das
mov
call
dec
jo
add
add
mov
xor
inc
pop
pop
ss
mov
aad
sub
js
xlat
push
mov
jg
pop
cmp
cld
mov
pop
mov
mov
add
adc
or
mov
or
jmp
xchg
decl
cmp
adc
stos
xor
lret
adc
jo
adc
bound
xor
lahf
ss
ds
jns
add
mov
scas
xlat
rcr
loope
jg
add
fcmovne
xchg
cmc
out
jmp
mov
or
sbb
clc
sbb
or
aad
mov
mov
cmpsl
mov
outsl
xor
sub
sbb
xchg
inc
cli
or
movsl
cmp
pop
repnz
icebp
dec
addl
imul
xchg
mov
bound
xor
mull
das
test
jnp
adc
sbb
adc
add
pop
inc
jb
mov
test
push
lds
inc
jnp
cmp
mov
popf
jno
mov
and
xchg
cltd
rolb
fwait
dec
jb
xchg
cmpsb
mov
push
dec
lea
or
pop
cs
lods
fisttpl
sbb
mov
mov
icebp
add
mov
clc
cmp
or
lods
dec
rclb
out
dec
out
lea
or
xor
out
xchg
push
in
lods
shrb
negb
add
cmpl
cs
pop
add
out
adc
push
stc
xlat
lea
jmp
and
loopne
pushl
and
pop
int
imul
dec
pusha
nop
in
mov
scas
stc
rclb
lcall
sbb
test
andl
popf
imul
imull
sbb
fstpt
imul
cmp
fstp
jb
pop
jnp
repz
popf
cld
or
fucomip
popa
push
or
push
sbb
pop
ror
jbe
test
je
enter
loop
leave
in
in
loope
insb
rclb
pop
push
stos
mov
add
jo
mov
sahf
insb
cmp
arpl
iret
jle
fwait
xor
cmpl
xchg
dec
jno
outsl
xchg
pop
pushf
dec
push
rolb
sbb
xor
fs
sub
xchg
stos
mov
inc
in
js
dec
push
fisubs
dec
mov
loope
cltd
xlat
or
sbb
pop
cld
or
daa
pop
loop
dec
dec
test
cwtl
inc
inc
hlt
mov
mov
sarb
dec
repnz
decb
fcmovnu
stos
aas
xchg
adc
ret
jl
mov
jg
xchg
dec
pushf
cmpsb
fstps
rcl
xchg
arpl
scas
jg
lds
mov
out
sub
mov
test
and
ret
decl
test
dec
into
adc
pop
inc
push
mov
and
push
lahf
pop
jmp
stos
mov
loopne
mov
push
mov
and
and
imul
adc
sbb
test
dec
out
xor
xor
jne
add
inc
adc
in
and
adc
jno
adc
mov
arpl
adc
pop
adc
imul
sbb
in
cmp
out
fdivl
xchg
fisubl
inc
das
loope
and
push
adc
add
mov
ljmp
sbb
int3
xchg
hlt
test
enter
mov
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
jmp
sub
cmp
mov
push
leave
adc
jo
adc
jno
xchg
sub
adc
imul
inc
popf
push
in
pop
mov
cmp
je
sbb
bound
mov
inc
nop
lret
mov
adc
imul
xchg
fcmovne
cltd
xchg
xor
cmpl
mov
push
nop
in
lods
jo
test
lds
push
cs
out
lret
call
clc
mov
sahf
dec
and
ret
cmp
shlb
mov
xor
push
push
push
mov
adc
ljmp
dec
adc
cmp
bnd
sti
sbb
or
sub
pop
sub
adc
push
pushf
sti
iret
lods
aam
mov
lods
add
imul
enter
mov
push
pop
xor
fidivl
int3
push
or
push
aam
mov
jo
and
add
incb
out
pushf
push
mov
pop
fwait
aad
out
xchg
add
imul
hlt
ret
xchg
aas
push
jg
xor
xchg
int3
mov
or
sbb
js
push
push
mov
imul
jb
push
lret
fiaddl
push
sahf
cmpsb
into
stos
xchg
jp
in
sub
mov
out
cmc
mov
daa
or
push
popa
push
leave
negb
inc
mov
paddusw
mov
and
ret
sbb
pop
test
xlat
xor
xchg
push
test
push
repnz
sub
mov
cmpsb
and
mov
jne
mov
add
sbb
adc
cmp
fwait
stc
frstor
shl
in
data16
and
orl
jle
sbb
ret
adc
loopew
dec
mov
dec
inc
es
xor
arpl
xchg
push
cli
lea
sti
jnp
cmp
xor
sub
lcall
cmpl
adc
xchg
ret
push
or
fwait
inc
loopne
out
cs
pushf
mov
and
stos
sbb
xchg
adc
push
aad
ret
filds
inc
fnstsw
and
nop
rclb
lret
mov
xor
jno
fwait
cmpsb
cltd
int
mov
ret
add
pop
inc
out
inc
ja
sbb
test
push
jmp
aad
ss
jle
mov
test
jl
imul
sub
cltd
fsubrp
cltd
or
sbb
test
cwtl
sbb
shrb
stos
add
ret
nop
xchg
ret
sub
out
shrl
fnstsw
jmp
pop
cli
test
mov
es
and
loop
or
xchg
mov
inc
movsb
sarl
aad
lcall
dec
std
call
shll
adc
cltd
xlat
push
sub
dec
cmpsb
mov
or
sbb
xchg
sarl
push
or
add
int3
cmp
pusha
mov
push
test
in
popf
rolb
ljmp
sub
rcll
push
push
int
stos
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
jmp
xchg
xorb
daa
cltd
sbb
fisubl
adc
jo
adc
push
xor
pop
pop
cld
shrb
sub
adc
jno
or
inc
pop
adc
cmp
jg
mov
adc
pop
mov
inc
enter
jno
bound
xchg
mov
xchg
push
cmc
gs
or
and
adc
mov
pop
ret
jb
incb
push
mov
stos
sbb
in
cli
shll
push
loopne
inc
lcall
enter
dec
push
loopne
std
movsb
jb
lea
or
adc
fistpll
rol
imul
mov
loopne
out
es
bound
cmpsl
add
call
imul
push
xor
out
adc
loope
sbb
mov
daa
push
and
pop
shrl
inc
push
push
sbbb
or
mov
call
jb
mov
cs
popf
or
inc
pop
sub
ret
cld
push
mov
test
xchg
outsb
in
push
lods
jb
xchg
cmc
xor
push
mov
fstl
fstpt
sbb
add
fsub
jle
push
sub
mov
push
divb
out
jo
mov
int
test
push
adc
cmp
xchg
ja
inc
push
cltd
in
mov
repnz
popf
call
jecxz
mov
adc
xor
stc
negb
aas
cmp
fdivs
jb
in
add
xchg
pop
sub
xor
jle
rolb
out
lock
aas
repnz
or
mov
nop
cmp
jmp
es
xor
dec
es
daa
out
jbe
call
pop
pop
sbb
pusha
mov
cmp
add
sbb
out
dec
xor
cmp
int3
fyl2xp1
adc
jmp
cs
cmp
setne
cmp
dec
and
mov
js
jmp
out
inc
adc
inc
fidivrl
lahf
rcll
les
push
inc
cmp
sar
outsl
pop
sbb
movl
int3
or
jmp
scas
and
rorl
jecxz
es
inc
pusha
stc
in
fistpl
jmp
push
sbb
xor
scas
nop
mov
xor
sbb
adc
push
insb
imul
and
add
int3
xchg
mov
test
sahf
add
inc
in
or
sbb
sbb
jmp
inc
dec
clc
pop
cmp
inc
ret
jecxz
xor
xor
dec
ja
push
jle
fwait
mov
call
out
leave
fs
ret
cmp
lcall
in
repnz
mov
roll
sbb
mov
inc
add
jo
cs
pusha
dec
bound
dec
inc
lret
add
mov
in
push
pop
lret
inc
inc
es
jle
testl
inc
sub
ds
mov
daa
jg
xchg
adc
hlt
iret
or
mov
cmp
dec
jne
push
stos
cmp
cs
in
test
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
jmp
jmp
dec
test
lods
add
mov
adc
adc
lahf
ja
loop
xchg
or
cmp
cmp
lds
idivl
cmp
adc
andl
xchg
sub
sti
xor
sbb
xchg
mov
push
clc
lahf
pop
jne
imul
sbb
in
mov
mov
hlt
mov
mov
pushf
cmpl
daa
fdivrl
lret
pusha
sbb
pop
sub
jg
pop
sti
and
pop
mov
mov
jne
ds
in
xchg
lret
mov
jns
nop
cmp
inc
sahf
gs
imul
and
prefetch
jae
int3
ret
xlat
push
or
in
mov
jl
mov
imul
dec
mov
push
add
movhps
rol
divb
or
push
sub
mov
int
es
jmp
nop
dec
pop
pop
adc
ret
fisubrl
ljmp
pop
iret
gs
sbb
xor
fiadds
sub
aad
shlb
mov
sub
jecxz
jno
jbe
mov
xchg
inc
xchg
jo
addr16
pop
mov
or
ljmp
mov
add
pushf
cmc
dec
arpl
cli
movsb
rolb
int3
test
movsb
xchg
insl
loopne
cli
or
jecxz
or
aam
cwtl
scas
push
xchg
repz
push
or
sub
clc
fsub
mov
out
es
out
insb
dec
cmp
dec
test
daa
mov
scas
dec
lea
outsl
cli
dec
mov
iret
sahf
xchg
loopne
xor
add
sarl
nop
test
outsl
lret
loop
pushf
sub
jo
popl
inc
lret
pop
fisubl
and
xor
push
dec
mov
sub
aaa
cmp
cmp
push
xchg
and
add
or
lahf
dec
sub
les
jge
and
xor
pushf
xchg
fadds
xor
cmc
insb
cli
repz
sahf
or
sbb
push
pop
pop
addl
sub
sub
int3
xchg
mov
mov
inc
adc
ret
sbb
sub
cmp
mov
out
in
sub
mov
lret
ljmp
add
jae
sbb
fstpl
leave
call
push
push
into
jmp
dec
or
mov
mov
inc
bound
jbe,pt
or
add
and
mov
adc
sub
outsb
or
pop
pop
mov
push
shrl
jae
mov
mov
pop
gs
xor
sahf
pop
fdivl
inc
jns
adc
pop
test
js
jo
cmpl
lret
hlt
in
dec
xor
jnp
inc
jmp
lcall
and
cmpsl
in
push
push
mov
xor
outsb
mov
jns
int3
add
leave
xor
sbb
adc
stos
sbb
pop
cmp
add
imul
sbbl
mov
insl
pushf
call
rorb
fwait
mov
mov
and
pop
pop
inc
dec
push
push
jbe
stos
fld
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
jmp
dec
pop
divb
inc
and
mov
imul
das
stos
sub
fildl
xchg
arpl
loop
loop
sar
jae
pop
push
lret
ret
push
xchg
cmpsl
jnp
popf
push
in
lcall
mov
dec
stc
xchg
mov
es
lock
mov
cmp
sbbl
cmpsl
jp
push
adc
push
fsubrl
jg
fldt
loopne
test
hlt
push
and
mov
xor
sub
xchg
sarl
stos
mov
jbe
sbbb
jg
test
fcompl
aaa
xchg
cmc
dec
pop
lret
xor
xor
into
enter
xchg
ja
mov
pop
in
pusha
cltd
push
lods
xor
int3
pop
out
xor
add
sub
xchg
enter
add
inc
push
push
fnstenv
push
sbb
daa
loop
mov
and
shl
mov
imul
aad
fldl
push
jo
xchg
incb
push
stos
mov
dec
mov
xor
add
fxch
ja
push
hlt
mov
aaa
and
lods
xor
out
je
push
xchg
mov
xor
data16
call
mov
jl
repnz
mov
dec
dec
test
jb
mov
in
fwait
xchg
fcmovb
xor
stc
bound
sub
cmp
add
scas
push
xchg
dec
lods
stos
pop
cltd
cli
ljmp
out
xor
jne
das
arpl
mov
hlt
pusha
xor
movsl
mov
push
mov
add
mov
loop
std
sub
int
xchg
jbe
lret
sbb
pushf
sbb
add
inc
mov
xchg
pop
jbe
ljmp
mov
jo
pop
in
clc
mov
mov
or
jb
pop
mov
mov
test
cmp
lret
jae
pop
xchg
jbe
nop
es
pop
addr16
lahf
cld
sbb
imul
imul
cmp
out
jecxz
xchg
cmp
pop
loopne
dec
pushf
fld
push
push
call
mov
mov
or
or
push
add
push
jmp
push
pop
push
js
cmp
adc
shlb
aas
insb
stc
mov
daa
ficoms
pop
pop
test
mov
add
pop
das
fcmovb
in
mov
lods
xchg
sbb
sub
sbb
pop
dec
test
jl
jp
repz
cmp
add
arpl
ljmp
pop
sub
jno
sub
lods
movsb
sti
inc
ja
sahf
add
push
xchg
inc
fsub
mov
xor
sub
outsb
call
xchg
jae
stos
mov
mov
add
cmp
add
add
pop
int3
hlt
pop
xor
int
in
mov
mov
mov
enter
aad
aaa
imul
mov
je
mov
scas
ljmp
ret
xor
sbb
test
xchg
mov
xor
push
stos
cmp
mov
jbe
scas
dec
cld
push
cmp
shrb
mov
movsb
in
push
clc
xlat
decl
mov
lahf
mov
add
or
icebp
xchg
xorl
mov
push
out
fincstp
and
shlb
pop
lcall
cltd
mov
mov
or
lret
add
test
lds
loop
dec
mov
dec
inc
jo
dec
pop
and
je
inc
sub
mov
pop
xchg
inc
pop
xor
pop
mov
and
dec
pushf
sbb
ds
sbb
imul
push
cwtl
mov
push
cwtl
inc
aad
movsb
jle
daa
mov
inc
inc
mov
mov
aam
ret
je
jmp
adc
pop
pop
xchg
mov
and
adc
das
out
mov
inc
in
mov
scas
adc
mov
pop
ljmp
test
cmp
out
test
rcll
sbb
stos
testl
outsl
lret
pop
cmpsl
push
insl
push
jl
jecxz
outsb
add
xor
sub
loope
xbegin
xor
fdivl
jp
mov
cli
cmp
add
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
jmp
cltd
sbb
sbb
cltd
sbb
xchg
bound
sbb
mov
adc
loopne
push
ljmp
pop
xor
cltd
mov
adc
push
cmpsb
aaa
and
add
sbb
cmp
or
mov
out
xchg
and
or
into
loopne
sub
adc
test
add
scas
push
jb,pn
iret
cmp
in
adc
nop
in
sub
jbe
cmp
cltd
mov
gs
pop
push
mov
cmp
or
xchg
mov
das
sbbl
dec
push
push
mov
cli
gs
je
jne
stc
fs
js
ss
cmp
or
out
insl
lods
and
dec
mov
lods
pop
push
nop
mov
xchg
sub
lds
mov
mov
sbb
mov
cmp
pop
fadd
sti
jbe
popf
push
push
sbb
sbb
dec
push
aam
into
xor
and
lahf
sub
or
fdivrs
mov
xchg
sbb
push
push
or
insl
bound
mov
and
xor
add
in
push
stc
mov
xlat
mov
or
es
out
addr16
sbb
cmpsb
dec
dec
sbb
imul
scas
sbb
cld
jae
cmp
fucomi
popf
out
movsb
shll
scas
aas
mov
clc
out
and
shr
add
cmp
jl
cmp
in
push
add
lret
mov
stc
cmc
imul
cmpsl
dec
insl
push
int3
fiadds
lret
dec
and
xchg
or
lret
pop
or
dec
bound
pop
repz
mov
lret
cld
cmpsb
hlt
cmpsl
dec
scas
pop
or
cmp
push
pop
mov
fwait
pop
lods
icebp
add
scas
push
jne
push
add
movsl
mov
jp
fwait
pop
mov
pop
outsl
jae
xchg
jg
test
push
or
cmp
scas
lcall
pushl
xor
mov
fcmovbe
pop
and
rolb
lock
cmc
jno
mov
inc
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
jmp
pop
mov
pop
mov
nop
or
stos
movlps
out
dec
xor
mov
xchg
xchg
inc
sbb
mov
loop
sbb
shlb
mov
lret
hlt
jno
xchg
cmp
jmp
inc
outsb
rolb
lcall
xor
insb
push
psubw
inc
mov
sbb
mov
into
addr16
in
and
repnz
mov
push
dec
scas
mov
push
cmp
sarb
fstps
outsl
insb
orb
fadd
xor
movsl
mov
scas
xchg
xor
push
ja
mov
jns
cwtl
mov
aad
mov
repz
mov
and
and
adc
aaa
es
jbe
xor
inc
gs
ja
aam
and
pushf
insb
aad
bound
cli
and
movsl
lcall
mov
gs
lcall
sti
in
scas
call
icebp
mov
adc
xor
movsb
xchg
jbe
test
dec
movsb
fldl
jg
fs
pop
xchg
in
mov
enter
adc
movsl
fsts
xchg
inc
gs
or
xchg
xchg
popa
fisubrs
ret
int
xchg
mov
or
fsubr
test
jg
mov
add
gs
gs
ret
fcoms
icebp
pop
fs
sub
aaa
mov
push
mov
scas
xchg
push
clc
ds
xchg
int3
sub
push
jae
mov
pop
adc
push
int3
mov
and
jge
xchg
sub
mov
cld
je
stc
inc
es
or
dec
sbb
push
cmp
scas
loope
daa
fsts
aas
inc
popa
or
ss
jnp
das
push
out
in
popa
cmp
repnz
xchg
cmpsb
not
add
mov
les
or
inc
fs
jns
sahf
lcall
inc
xchg
push
sbb
dec
int
cltd
enter
and
mov
sub
push
leave
add
pop
inc
add
push
push
fcomps
fstl
outsb
pop
scas
in
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
xchg
sub
subl
enter
mov
adc
stos
movlps
pop
js
xor
mov
push
push
vmovdqa
xchg
inc
push
pop
repnz
jge
jns
hlt
inc
ret
mov
and
xchg
and
mov
mov
not
add
lcall
jne
mov
mov
xor
jae
pop
mov
cmp
fld
loopew
xchg
sub
jmp
fs
mov
pop
xor
xor
inc
mov
inc
repnz
cmp
xchg
push
push
pop
sub
inc
mov
mov
pop
xchg
or
mov
gs
dec
push
out
mov
pusha
ljmp
out
cld
push
int
adc
sahf
mov
xor
pushl
cmpsb
lock
in
ret
idivb
sti
xor
mov
repnz
out
pushf
and
cmp
push
jnp
hlt
xlat
cmp
pop
in
or
in
push
push
cwtl
cmpl
fmulp
add
sbb
or
jno
int
fldenv
inc
not
add
and
add
lods
clc
aaa
lods
divl
into
sbb
scas
mov
jle
imul
enter
mov
sbb
and
or
xchg
fisttps
cmp
shll
cmpsl
lret
and
sub
cmpsl
inc
lahf
inc
cmp
or
test
or
push
dec
nop
filds
arpl
imul
push
push
mov
mov
pop
and
or
inc
xchg
outsl
jbe
dec
fistpll
popf
jecxz
mov
dec
cmp
movsl
dec
test
inc
push
adc
adc
inc
mov
and
lds
fs
addl
pop
pop
inc
movsl
dec
outsb
add
fistpll
je
pop
and
rorb
or
push
sbb
clc
cwtl
out
sub
inc
and
xlat
out
cmp
out
add
inc
xor
dec
or
xchg
movsl
insb
cmp
push
sbbb
add
mov
mov
and
sub
or
mov
imul
mov
jmp
loope
mov
and
les
aas
fwait
adc
stos
movlps
ja
push
call
jle
mov
addr16
fwait
cmp
fdivrl
bound
push
dec
fsts
sti
add
cs
ret
cmpsl
adcl
adc
jecxz
ds
push
xchg
and
ljmp
stos
out
and
rorl
popf
mov
or
ja
sbb
xchg
loope
jae
lock
or
jns
fidivs
and
sarl
xchg
das
clc
or
sbb
pop
pop
dec
mov
push
sti
sbb
test
into
subl
sub
mov
leave
bound
or
arpl
sbb
push
ds
jb
dec
jl
or
dec
sarl
push
mov
push
mov
push
sub
rcll
jmp
leave
xor
andl
arpl
das
cmpsl
daa
jge
fs
es
data16
orb
cmp
sarb
jp
xor
movsb
sbb
sub
xor
and
add
push
rolb
push
adc
lds
add
loope
xor
adc
movsl
inc
push
mov
pop
xchg
push
imul
mov
data16
or
xor
push
pop
out
ljmp
movsl
in
add
mov
adc
push
pop
adc
mov
and
xchg
lods
xlat
mov
and
sbb
push
inc
xchg
in
push
xor
sbb
mov
test
jne
mov
repnz
fcoms
iret
movsl
imul
pop
cmp
and
inc
sbb
jecxz
jb
or
or
int3
int3
lods
out
cmp
push
divl
inc
sbb
sub
ja
mov
xlat
xor
and
xchg
repz
cmp
mov
and
sti
ja
pusha
sti
int
scas
mov
and
js
jnp
push
mov
sbb
jno
test
xlat
lret
fwait
sub
scas
add
xor
or
loope
aas
ficomps
subl
pop
iret
mov
or
test
in
insl
cmp
xchg
mov
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
jmp
inc
or
pushf
ds
fdivrs
cltd
adc
pop
adc
adc
sub
fnstcw
push
push
in
cli
xchg
mov
add
xor
push
xor
xlat
fildll
int3
push
pop
loope
loop
and
xchg
or
mov
popf
inc
andb
and
xchg
outsb
jge
rcr
and
sbb
adc
xor
pushl
sub
roll
xchg
les
js
sub
stos
jp
inc
lods
jb
sbbl
popa
movb
js
stos
es
cmp
and
loopne
push
cmp
sbb
mov
test
lret
outsl
inc
das
push
mulps
out
cs
jbe
jp
jp
adc
mov
xlat
add
das
into
xor
std
pop
mov
lods
xchg
xor
mov
mov
cmpsl
push
add
dec
pushf
sbb
sub
out
ss
and
js
popf
or
dec
jne
in
sub
aaa
mov
and
mov
sub
fs
out
inc
xchg
ja
adc
or
cltd
dec
aad
mov
pop
pop
cltd
jae
addr16
fs
pushf
and
cmc
in
inc
rolb
inc
adc
adc
cmp
dec
inc
xlat
loope
fwait
dec
mov
cld
pop
inc
nop
mov
mov
jno
cmp
dec
mov
aam
call
cmp
cmp
xor
mov
movsl
arpl
mov
stos
xchg
mov
aad
popf
lds
add
test
pop
pop
lods
ds
push
push
jae
cmpsl
cmc
cmp
jno
imul
cs
sbbl
pop
insl
xor
nop
aas
rcll
add
mov
add
push
mov
xor
lods
xor
mov
lret
push
pop
es
xchg
push
dec
jmp
lahf
adc
pop
mov
cwtl
xor
xchg
les
lcall
cmp
jl
mov
hlt
stos
mov
pop
out
push
pop
movb
mov
idivb
mov
daa
je
push
and
push
or
jnp
push
cmp
add
arpl
and
cli
push
mov
scas
bound
add
or
rcrl
clc
xchg
in
mov
inc
es
es
lcall
and
xchg
sbb
xchg
shrb
test
push
rcrb
loop
aam
xchg
pop
mov
jl
mov
stos
jnp
add
jnp
out
call
jbe
and
fnstsw
xchg
adc
sub
mov
add
mov
push
mov
jb
addr16
push
mov
push
sbb
and
adc
repz
push
shll
xchg
push
cli
or
pop
arpl
aas
test
das
cmp
inc
leave
pusha
loopne
lahf
add
mov
daa
add
sarl
inc
jmp
sub
mov
push
in
je
mov
mov
inc
pushf
sub
hlt
rcll
pusha
xor
xchg
inc
xor
iret
dec
insl
inc
inc
loopne
mov
jne
xchg
and
jp
mov
shlb
sbb
cmp
ffreep
outsl
mov
pusha
or
fsubrs
lds
aaa
imull
arpl
int
hlt
arpl
cmp
fidivrs
mov
cmp
cmp
pop
dec
adc
cwtl
add
or
insb
dec
add
push
repz
fwait
and
pop
cs
jbe
cs
pop
in
xchg
or
lahf
xchg
adc
sbb
inc
dec
fs
dec
pop
or
xchg
push
mov
call
pop
or
movsl
xor
subl
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
jmp
pop
pop
scas
outsb
scas
pop
sbb
cmp
push
push
and
adc
pop
adc
adc
push
inc
outsb
pop
or
sub
xchg
clc
jp
jmp
es
addr16
enter
pop
jbe
inc
stc
pop
outsb
push
out
aad
dec
and
clc
repnz
int
cs
mov
and
cmpsb
xor
repz
or
popf
test
int
push
mov
xor
in
pop
xchg
pop
jmp
inc
xchg
mov
inc
sub
push
or
lds
out
lret
inc
repz
fsubrs
lds
jmp
pusha
xor
and
adcl
js
mov
rorl
sub
sti
add
test
cld
sub
adc
jb
andb
xchg
lahf
pop
enter
push
pop
jno
mov
cmp
inc
jnp
test
push
rorl
cld
push
jnp
movsl
jb
test
xchg
jb
sbb
js
ja
imul
mov
mov
dec
jne
xchg
lea
clc
xlat
push
mov
and
gs
mov
push
ret
sub
xlat
xor
adc
fnsave
mov
gs
jno
imul
pop
int
xchg
jecxz
xchg
cmpsl
lock
sahf
sbb
jge
or
ds
or
mov
mov
fsub
cmp
push
inc
arpl
arpl
pop
xor
push
aas
stos
pop
stc
mov
cmc
cmc
aad
xchg
sub
loop
fdivrs
mov
outsb
stos
decb
adc
filds
loopne
shll
adc
mov
jge
int3
cltd
les
fstps
test
dec
jb
shlb
imulb
icebp
add
adc
mov
xchg
ss
cmc
inc
imul
jp
push
loop
ja
push
daa
push
pop
mov
sbb
aaa
pop
gs
fisubrs
in
es
jbe
aad
and
das
leave
pushf
mov
das
xchg
rcl
es
or
gs
shrl
aas
sbb
push
hlt
leave
shlb
popa
sub
popf
mov
inc
loop
dec
push
inc
insb
pop
arpl
cld
sbb
xchg
testl
inc
movsl
movsb
mov
mov
mov
add
test
adc
xor
sbb
adc
push
mov
mov
cmc
pop
dec
inc
sub
xchg
jo
jmp
cmp
jae
lret
rol
loope
andb
jbe
shl
inc
dec
or
add
pop
mov
cld
and
outsl
xchg
shll
inc
sub
loop
fldl
sub
add
test
add
sbb
inc
add
or
xor
orb
sub
fimull
arpl
arpl
sub
std
xor
movsb
xor
xor
adc
pop
jmp
testl
jns
insb
jo
enter
add
push
mov
in
ss
aas
pop
sbb
outsb
dec
mov
push
int
xchg
les
xchg
leave
ret
dec
cwtl
mov
test
add
in
icebp
sub
pop
xor
xchg
lds
xlat
enter
shlb
dec
cmp
push
insl
loopne
mov
pop
xchg
scas
ret
mov
dec
jo
mov
aam
adc
jne
cmp
mov
cld
xor
data16
xchg
sahf
xchg
mov
sub
mov
push
push
xor
in
pop
xor
sbb
jb
cmpsl
fiadds
imul
push
sub
cmp
jo
rorl
gs
pop
inc
in
ljmp
and
add
add
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
ret
loopne
icebp
xchg
stos
mov
stos
arpl
inc
stos
in
mov
adc
movlps
pop
push
data16
or
and
test
cmpsl
mov
cwtl
bound
data16
fildll
mov
loop
push
add
adc
jo
add
inc
lds
ret
ret
fcomps
mov
dec
aad
pop
lahf
negl
loope
or
inc
lods
xor
push
in
adc
xorl
xchg
clc
pop
pusha
cli
inc
mov
pop
adc
mov
pushf
dec
cmp
ret
loop
pop
incb
push
les
fwait
sub
scas
out
sub
mov
scas
adc
pop
mov
into
jns
movsb
adc
pushf
fmulp
scas
fidivrs
and
loopne
mov
add
lock
lods
scas
xchg
jg
int3
adc
popf
jl
xchg
or
mov
cltd
leave
or
mov
cld
test
cld
sub
test
jg
shlb
pop
push
es
dec
add
in
push
les
int
cmpsb
xchg
and
popa
pop
sbb
jns
mov
add
movsl
aam
mov
fimull
push
add
dec
repz
icebp
mov
inc
push
movsl
dec
fcompl
outsb
inc
push
movd
outsb
pop
loopne
out
lods
lret
add
dec
cmp
xor
cld
adc
imul
jmp
mov
out
out
or
js
pusha
mov
scas
outsl
aas
jg
test
int
in
add
and
dec
mov
dec
ja
pop
push
f2xm1
std
mov
fldl
addr16
push
stos
lret
insl
insb
mov
sub
add
shrl
xchg
testb
or
pop
call
jp
cs
sbb
inc
pop
out
jmp
fwait
insb
jb
jle
std
inc
cmp
cmp
adc
mov
hlt
sarb
fstpl
cmpsl
out
or
das
mov
dec
add
shll
mov
popf
mov
xor
xchg
xchg
pusha
push
push
jecxz
sbb
mov
jecxz
xlat
dec
dec
jns
jnp
mov
sbbl
dec
out
sbb
mov
mov
dec
mov
mov
push
shl
or
jp
xor
pop
pusha
mov
adc
mov
stos
icebp
ficoms
fbld
xchg
popa
or
xor
subb
and
sahf
insl
in
test
dec
mov
fwait
gs
cmc
shrb
imul
or
and
mov
mov
subl
js
lcall
stos
test
jb
jmp
jecxz
mov
cwtl
pop
notb
sub
fsubs
mov
add
dec
xor
jmp
or
lods
lea
inc
pusha
pop
and
rolb
clc
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
jmp
cmp
iret
sbb
pop
push
lret
test
repz
adc
movlps
xchg
loopne
sbb
fwait
nop
fwait
sbb
xor
cmp
adc
scas
or
in
mov
pop
lods
sub
lea
data16
sbbl
in
testb
jno
adc
lcall
cmp
inc
insl
es
push
aaa
lret
adc
fsub
scas
repnz
push
jecxz
into
icebp
arpl
lret
jecxz
push
dec
push
fwait
aas
ror
lds
jb
loopne
out
mov
out
and
dec
sbb
push
xor
inc
loop
jae
adc
inc
jno
scas
lods
das
fsubp
push
lahf
pop
mov
push
mov
std
cmp
repz
or
lock
xchg
mov
enter
insl
hlt
cltd
aaa
jle
pmovmskb
div
ret
incb
push
das
ja
pop
sub
and
push
es
repz
fcmovb
filds
sbb
mov
adc
es
mov
jnp
je
test
dec
rorl
stos
xchg
cmp
sar
add
xor
push
jmp
ret
mov
lds
pop
dec
push
and
push
fsubl
pop
pop
repz
scas
sub
cli
xchg
mov
sahf
ja
test
out
inc
adc
cmp
mov
leave
cmp
subl
jno
and
and
das
mov
mov
pushf
cmp
pop
aas
sbb
mov
mov
xlat
add
pop
jno
mov
neg
call
mov
or
adc
adc
lret
sbb
out
jns
cmp
test
xor
lods
jne
mov
jmp
pop
add
inc
shlb
out
adc
jmp
cwtl
fwait
add
mov
mov
rep
mov
pop
xor
and
lahf
icebp
imul
or
jbe
add
and
rcrb
daa
ret
cmpsb
bound
lds
lret
push
icebp
mov
push
mov
cs
cmp
cmp
shlb
lahf
cwtl
push
int3
out
and
mov
js
sbbb
inc
xlat
jp
out
mov
push
repnz
into
dec
incl
aam
mov
inc
mov
das
cltd
pushf
xor
mov
or
mov
xchg
addr16
cli
mov
out
jae
cmc
icebp
or
jecxz
inc
mov
imul
push
cld
scas
dec
dec
idivl
test
in
fcomip
xchg
mov
and
add
mov
mov
lahf
repz
out
pop
adc
pop
and
mov
sub
lea
clc
sub
into
rol
or
sbb
subl
outsl
insl
inc
loope
add
dec
jmp
das
mov
aam
push
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
jmp
inc
in
sbb
sbb
fisttpl
sub
add
adc
movlps
mov
jecxz
jmp
xchg
je
sahf
daa
js
push
inc
cli
into
dec
or
cmpsl
enter
sub
sar
cli
jl
mov
icebp
mov
es
adc
sbb
je
in
inc
jbe
cmpb
mov
ja
repz
pop
in
push
loope
inc
xchg
dec
outsl
repz
sbb
sbb
adc
push
and
mov
dec
jl
cmp
mov
add
sbb
add
cmc
dec
sti
lock
pop
pop
xchg
xchg
pop
in
push
push
into
lods
add
pop
or
test
xchg
faddp
call
mov
lret
repz
xor
stc
fldcw
sub
pop
jecxz
push
sbb
mov
js
repnz
mov
in
and
roll
shll
fisttpl
xchg
hlt
movsb
cmp
sbb
cmp
mov
in
or
mov
cmp
insb
test
fcoml
xor
ljmp
loope
dec
jmp
je
cwtl
out
jnp
adc
sbb
cmp
mov
mov
inc
gs
movsl
pop
insb
es
sub
jle
aaa
jbe
mov
xchg
cmp
dec
insb
dec
sub
cld
je
outsl
add
or
aaa
jbe
dec
pop
adc
inc
fs
jno
pusha
test
and
bound
add
fisubs
xor
cmpsb
push
jge
and
adc
mov
jne
push
bound
xchg
insb
jb
xchg
cmp
imul
aam
lret
cmp
mov
mov
pop
nop
jne
sub
subb
xlat
dec
fsubrl
add
or
jae
sahf
xlat
pop
pop
or
xchg
or
lods
sbb
mov
stos
movsb
pop
xchg
aad
mov
loopne
daa
clc
adc
jne
adc
inc
sahf
and
std
and
fiadds
mov
mov
sbb
aaa
arpl
mov
sub
sub
push
mov
and
xchg
push
imul
adc
rolb
xorl
mov
add
and
icebp
in
and
aad
fcoml
rorl
rolb
xchg
movsb
or
or
or
sti
cli
nop
pop
ss
or
aas
dec
push
xchg
out
leave
jp
test
sub
ds
pop
add
and
into
mov
in
aaa
cmp
rcl
repz
dec
sub
jne
enter
inc
mov
ret
aad
out
fdivrs
les
mov
cmp
jbe
push
jno
xchg
dec
outsb
sbb
loope
in
mov
sbb
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
jmp
and
sbb
loope
stos
repnz
jae
adc
jae
xor
and
popa
add
sub
xor
pop
pop
jno
icebp
jbe
loopne
mov
icebp
sbb
movsb
adc
cmp
test
insb
or
out
out
mov
mov
stc
xchg
mov
popa
fisubrl
cmpsb
mov
jecxz
mov
jg
jne
xorl
ret
insl
cwtl
enter
daa
pushl
inc
jnp
sbb
ds
mov
aas
roll
jbe
push
jnp
outsb
inc
pop
mov
aaa
xor
out
cmp
jecxz
adc
adcl
push
fsts
xchg
jle
scas
adc
and
addr16
push
xchg
hlt
xchg
jg
int
jbe
cmp
adc
cmp
mov
xchg
fstpt
inc
sub
jle
mov
ja
jge
jmp
adc
cs
mov
cltd
inc
repz
xchg
sub
cmpsl
or
cltd
sub
fdivrl
push
ljmp
cs
clc
jecxz
aas
insl
lds
xor
push
push
jecxz
movsl
pop
and
fsubrl
bound
lods
hlt
jo,pt
bound
cld
jne
into
xchg
xchg
mov
add
xchg
je
push
out
test
jge
xchg
jmp
pop
push
movsb
and
jge
adc
jns
cmp
xor
iret
in
xchg
xchg
xchg
pop
ja
pop
mov
mov
call
pusha
adc
mov
sub
cmp
call
mov
lret
push
pop
pop
sub
pusha
jmp
mov
lcall
mov
cmp
fwait
dec
jo
ljmp
das
out
scas
lds
sub
clc
cld
lea
jnp
daa
pop
icebp
jmp
in
xchg
cmp
push
dec
push
pop
stos
bound
or
mov
cmc
xchg
push
dec
sub
jno
mov
pop
cltd
dec
enter
aad
gs
rolb
jo
sub
outsb
mov
push
les
xchg
inc
jb
xor
push
fs
aas
out
orl
into
jne
cmp
pop
xchg
shr
shlb
inc
cmp
out
pop
mov
mov
jbe
pop
cltd
xchg
leave
push
push
pop
or
pop
inc
and
lods
dec
int
jl
addr16
xchg
cmp
cmp
popf
aad
sub
jae
sar
xorl
insl
mul
test
dec
inc
pop
cmpsl
inc
ja
sub
xchg
pop
movsl
movsl
pop
ss
sbb
mov
fs
pusha
sbb
mov
pop
adc
add
sub
lret
lcall
sub
jns
push
lret
sub
xor
or
cmpsl
mov
and
cmp
shlb
ficoml
jp
pop
mov
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
jmp
push
daa
sahf
xchg
sbb
add
lahf
mov
mov
add
adc
test
pop
mov
pusha
repnz
jns
in
dec
mov
sbb
sub
add
push
popa
pop
mov
cld
dec
in
jecxz
ss
adc
push
push
pusha
xchg
std
inc
cmp
enter
pop
lret
cmp
data16
push
movsl
rcl
push
bound
mov
lret
push
in
push
add
in
adc
mov
cmpsb
dec
adc
stos
jge
or
jnp
mov
sbb
and
pop
fadds
xor
std
cmp
gs
shl
mov
icebp
aam
mov
xor
dec
cmp
cmp
cld
fmulp
daa
enter
inc
dec
cmc
adc
mov
mov
pusha
cmp
push
das
push
rcll
loop
inc
mov
xor
push
imul
mull
insb
arpl
dec
adc
jne
jg
repnz
push
test
fwait
test
test
mov
outsl
mov
pop
jo
sub
movsl
adc
sbb
bound
in
arpl
sub
aas
outsb
dec
ljmp
xor
pop
adc
jge
popa
mov
cmp
adc
adc
sub
adc
ret
mov
filds
dec
jb
popa
xlat
ret
push
sti
movsb
dec
sub
ljmp
leave
popa
and
rorl
xchg
stos
xchg
push
xchg
dec
loop
lea
jbe
pop
fcomps
loop
inc
aas
stos
xchg
dec
rcl
fs
push
push
int
je
sbb
push
ffree
xchg
notb
aaa
int
add
inc
and
xor
push
test
lock
cmp
gs
xlat
mov
decl
in
repnz
lahf
mov
sbbb
jae
mov
loop
stos
add
fbld
lods
test
in
sbb
inc
jmp
lods
push
add
imul
popa
xchg
repnz
mov
cli
lds
cmp
gs
test
pop
sub
adc
inc
pusha
hlt
push
ljmp
mov
test
aas
mov
adc
and
icebp
xchg
and
scas
sub
cmc
pop
inc
push
mov
mov
pop
mov
cmp
call
pop
scas
mov
nop
and
hlt
sbb
test
xchg
ficomps
xor
cmpsl
int
movsb
daa
iret
cltd
jecxz
and
add
in
push
repz
ds
and
rcll
dec
stos
lds
fisubl
push
mov
sub
stos
rolb
jle
jge
add
cmpsb
ljmp
mov
orb
cli
pop
adc
add
push
loope
jbe
cwtl
out
xor
sbb
fldcw
mov
popf
daa
push
das
jmp
aas
xor
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
jmp
pop
mov
sbb
sbb
mov
hlt
jl
and
loopne
repz
or
lcall
in
xor
push
hlt
int3
cmp
pop
sbb
jp
inc
or
and
fdivl
data16
mov
rcrb
stos
jns
inc
mov
fs
add
and
add
enter
jge
mov
jo
jns
shlb
sbb
popf
in
push
mov
push
mov
push
mov
mov
push
out
xchg
mov
add
dec
jmp
in
or
jmp
mov
int3
shr
sbb
enter
push
or
inc
fwait
mov
jns
and
push
inc
arpl
cmp
imul
int
je
push
pushf
sub
stos
mov
addl
in
mov
pop
test
pop
inc
sub
push
icebp
insl
js
sti
imul
add
adc
fs
in
add
test
in
ss
jle
stc
popa
aas
sbb
xor
xchg
mov
sti
and
lahf
xchg
mov
sti
addl
mov
mov
xchg
cmp
aam
mov
arpl
enter
xor
ret
shll
popf
dec
sub
stos
lock
daa
or
push
cld
shl
and
inc
pop
stc
mov
arpl
fistpl
adc
cltd
sub
sub
jp
fistl
rclb
cmp
sbb
idivl
cmpl
shrl
test
hlt
insl
pushf
or
repz
hlt
dec
dec
adc
cmp
pusha
jo
cmpsl
test
stos
test
lds
fcoml
insl
fistpl
adc
lcall
adc
xlat
cli
inc
cli
inc
in
outsl
ret
ret
fsubrl
loope
rcr
jo
aaa
hlt
push
dec
jbe
pop
xchg
sarl
mov
xor
lret
lcall
jne
push
or
aad
negl
xlat
dec
fwait
sub
lea
add
pop
xchg
aaa
and
test
leave
in
js
ljmp
xchg
scas
sub
push
aas
stc
outsl
jno
cmp
mov
inc
aam
mov
sub
insb
jb
jl
push
mov
mov
stc
cmpsl
imul
test
loope
mov
mull
sbb
fisttps
pop
in
scas
cli
aad
mov
xchg
decb
fists
add
jp
sti
cld
out
and
shlb
rcrl
sbb
aas
mov
mov
adc
addr16
loope
add
out
aad
inc
out
adc
mov
xor
enter
leave
and
add
mov
push
andb
cli
jne
inc
sub
inc
fldl
inc
lods
cmp
xchg
pop
dec
out
cmp
incl
jns
jecxz
mov
jecxz
jge
orb
or
add
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
jmp
xchg
mov
ret
sub
lcall
adc
jb
adc
cltd
int
out
pop
add
inc
mov
push
lods
lret
jno
pop
sub
outsb
inc
lods
orb
pop
jl
jg
repz
mov
mov
and
xchg
inc
jmp
leave
adc
xchg
hlt
cmpsl
mov
int3
flds
push
xchg
fbstp
mov
mov
aam
into
fisubl
and
inc
fisubs
in
fisubrl
movsb
test
jle
das
decl
push
addb
mov
fbstp
jmp
sahf
inc
gs
sahf
mov
sub
jge
jl
cmp
adc
pushf
push
cmp
add
fstpl
stos
mulb
sbb
or
aas
jnp
mov
dec
add
inc
xchg
arpl
icebp
fisubrs
cmp
imul
mulb
jl
popa
push
xor
das
stos
out
jg
pop
add
movsb
push
or
stos
dec
in
add
cld
outsl
cli
or
xchg
xchg
push
pop
inc
inc
xor
add
xor
inc
outsb
ss
scas
rclb
repz
xchg
imul
das
jl
pop
mov
mov
in
mov
add
sub
imul
or
add
push
pop
loopne
loopne
sbb
out
movsl
jo
adc
mov
aad
fimuls
mov
cmp
arpl
js
dec
add
push
adc
cld
addb
dec
sti
mov
cmp
and
daa
xchg
ret
loopne
nop
dec
int3
lods
scas
inc
xlat
and
sub
cmp
sbb
jbe
cmpxchg
jo
push
iret
mov
dec
xchg
inc
inc
mov
mov
jne
pushf
mov
push
lds
or
sub
adcl
xor
jnp
xor
pusha
enter
mov
fwait
xchg
adc
push
subb
repnz
push
sbb
adc
xchg
out
inc
push
mov
and
or
inc
dec
sbb
xchg
and
mov
aas
dec
sti
or
pop
pop
push
push
imul
inc
adc
fs
mov
mov
shrb
mov
dec
sti
aaa
sbb
pop
xor
jne
test
les
addr16
cmp
and
and
dec
jns
xor
dec
js
jmp
out
mov
sbb
jo
jne
fnsave
mov
cs
mov
pop
in
lock
jge
mov
or
sbb
aam
clc
lods
inc
call
or
lods
inc
lea
xchg
push
cmp
xchg
pop
test
adc
movsl
faddp
jge
jo
and
dec
add
add
rcl
cmc
movsb
fnstenv
fstl
int3
mov
fst
icebp
xchg
cmp
add
lea
inc
xor
mov
cwtl
sub
fcoml
dec
xchg
adc
jns
xor
or
xor
push
jmp
adc
ljmp
ss
jge
push
movsl
jmp
sbb
xchg
mov
std
cmp
js
adcl
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
jmp
movsb
pop
rclb
push
cmpb
mov
pop
adc
jp
adc
xor
loop
xor
in
les
xor
mov
fnstcw
xchg
ljmp
sub
xchg
pusha
jg
push
les
ret
sub
fcompl
mov
ficompl
dec
add
jp
ss
popa
subl
shrb
pop
pop
fsubrs
roll
ret
std
loope
es
fwait
jo
mov
ljmp
and
pop
insl
mov
sbb
jle
cli
aam
adc
fdivs
cmpsl
mov
loopne
popa
in
fsts
mov
pop
fsqrt
cmpsl
mov
call
andb
pop
xor
cmp
jle
or
sbb
outsl
mov
adc
mov
into
stc
dec
les
sbb
pop
aas
ret
xchg
and
mulb
lock
mov
fldcw
adc
push
sub
lahf
mov
hlt
mov
iret
js
rclb
cmp
mov
test
xchg
mov
aam
nop
mov
push
mov
pop
dec
mov
das
leave
adc
cmp
push
rol
mov
shll
pop
arpl
cwtl
jbe
stos
mov
daa
add
sbb
ja
jb
sub
and
leave
andb
loope
inc
jnp
jb
shll
scas
or
gs
dec
inc
push
xchg
adc
imul
mov
cmpsl
fldcw
cld
in
pushf
sub
inc
sti
loope
inc
and
ds
push
shl
sbb
xlat
jb
movsb
mov
mov
jno
ret
cmp
fcomp
inc
shrb
pop
and
mov
mov
adc
or
and
js
int3
inc
push
pop
add
int
fcoml
and
or
xor
push
hlt
sbb
int
cwtl
test
movzbl
out
xchg
aad
dec
aas
cmp
nop
and
clc
sbb
ja
push
popa
jo
cs
jmp
loope
sub
sbb
cmp
sub
in
ficoml
add
jb
fisttpl
pop
mov
mov
nop
icebp
xchg
outsl
mov
lods
imul
push
leave
test
mov
add
push
pop
push
ss
call
inc
test
sub
loop
bound
iret
arpl
jo
fadds
lock
nop
dec
mov
jae
push
sbb
jb
or
mov
xchg
cmp
adc
push
xor
dec
jns
cmc
push
cmpl
popa
cmpsb
rol
mov
adc
inc
popf
push
cli
inc
int
mov
dec
xor
xchg
fidivl
arpl
mov
mov
push
sub
mov
popf
cmpsb
lcall
dec
call
sbb
adc
add
das
lds
into
inc
lret
push
das
push
das
insb
mov
int
inc
stc
adcl
mov
enter
nop
push
or
stc
jae
movsl
jo
inc
test
testb
mov
cmc
xchg
daa
cmc
sti
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
jecxz
in
bound
pop
jne
inc
stos
cmp
sub
pop
adc
jp
adc
lret
out
xor
lret
adc
adc
adc
jmp
out
jmp
mov
iret
and
sarb
mov
out
dec
lock
jecxz
push
mov
leave
cmp
leave
out
out
or
mov
filds
mov
jne
inc
inc
fisubrl
or
int
imul
adc
jp
stos
test
mov
cwtl
jae
ljmp
push
daa
mov
enter
aad
fsubs
mov
std
mov
push
jb
xorb
out
fucomip
sahf
pop
sub
adc
sarl
fcoms
inc
mov
inc
jecxz
sub
adc
js
sub
cmp
and
mov
test
stos
andb
dec
rclb
xchg
cli
and
arpl
inc
loopne
cmpsl
or
mov
and
inc
xor
mov
lcall
push
inc
xor
mov
jbe
dec
pop
jp
fisttps
xchg
sub
pop
xchg
jnp
jp
mov
ret
repnz
imulb
cmp
jmp
aad
add
sbb
aad
sbb
mov
je
ss
pusha
push
push
fildl
sbb
jg
cli
add
cs
xchg
in
dec
fs
and
cwtl
cmpsb
das
sub
pop
inc
std
nop
xchg
loopne
mov
and
xchg
add
push
sub
and
mov
inc
jmp
mov
push
xor
cli
shrl
adc
pop
add
jne
test
fcmovb
mov
mov
push
adc
movsb
push
neg
and
xchg
fcmovu
sub
sti
mov
fnstsw
fdivl
fwait
out
int3
dec
or
pop
into
jmp
mov
pop
and
xchg
mov
xor
jmp
andps
dec
out
cmp
fcmovne
mov
and
jmp
popf
push
mov
jo
jo
cmp
push
dec
add
in
scas
into
pop
addr16
lret
mov
add
adcb
movsl
jb
cmpb
fisttpll
xchg
fiadds
lods
sbb
je
lcall
fs
adc
stos
inc
ret
nop
inc
aam
mov
inc
mov
outsb
or
ja
adc
or
mov
pop
test
xchg
out
cmp
dec
mov
andb
sub
cmp
sub
rclb
mov
cld
xor
ds
or
enter
jb
outsl
int3
icebp
add
or
sub
sbb
and
shrb
xlat
lods
dec
adc
mov
ja
sti
xor
mov
mov
sbb
cmp
repnz
lock
pop
cmpsl
fucomip
xor
mov
aas
pop
xchg
fs
imul
nop
das
jmp
jno
sahf
or
mov
lret
push
test
imul
call
outsl
dec
mov
shrl
add
lods
insb
inc
inc
lods
add
adc
jne
and
lea
mov
shr
or
mov
jmp
pop
pop
mov
push
fisttpll
dec
mov
jp
adc
fcomps
inc
fs
push
jecxz
mov
xor
mov
mov
xor
lods
popa
mov
ret
imul
or
frstor
sub
mov
sysenter
push
sbb
fdivrl
addr16
jl
jl
dec
sub
cmp
fldl
faddl
jo
ds
xor
filds
test
fwait
jbe,pt
outsb
imul
cmpl
loop
mov
ljmp
pop
pop
pop
test
in
or
mov
mov
movsb
push
stos
popf
jae
pop
adc
dec
push
hlt
xchg
mov
xor
lret
nop
adc
mov
sarb
daa
out
mov
inc
sub
inc
add
xchg
adc
pop
push
int
sti
decl
dec
mov
mov
movsl
nop
sbb
push
in
mov
pop
sbb
pop
push
mov
mov
pop
push
sbb
icebp
adc
xchg
dec
insl
mov
mov
and
fsubr
movsl
in
lcall
loope
xchg
cmp
dec
mov
add
scas
push
andb
lods
cmp
rcrb
add
aas
lret
hlt
mov
sti
es
mov
shll
lcall
inc
mov
add
jle,pt
pushf
push
mov
push
mov
xchg
mov
and
out
pop
jmp
xchg
push
cmp
and
push
ror
mov
or
cld
enter
mov
ds
xchg
inc
push
and
movsl
fs
cmpsb
outsl
jno
popa
or
cmpsl
mov
sbb
xor
enter
mov
cmp
fwait
mov
int3
xor
dec
sub
add
xor
push
subl
and
adc
test
mov
test
jns
mov
push
fldenv
std
test
pop
mov
sti
dec
lahf
movsb
pop
int
add
out
xor
out
xchg
xlat
sub
adc
in
dec
cli
dec
movsb
or
adc
mov
dec
add
adc
pop
xchg
mov
movb
cwtl
cmp
push
cmp
push
stos
sub
std
or
insl
imul
lods
or
stos
dec
and
pop
int3
inc
jb
adc
pop
jb
or
lods
jb
aad
xchg
pushf
repz
jge
cli
pusha
fwait
sbb
ljmp
insb
jne
fcmovnbe
pop
fistps
out
sahf
mov
sbb
and
insb
xlat
sub
clc
sub
cmpsl
push
mov
xchg
jecxz
les
add
jae
sub
xor
cmp
lahf
jp
gs
mov
nop
lahf
out
pop
or
fs
add
daa
push
mov
push
cld
out
pop
sbb
movsb
les
sbb
lods
pop
out
or
ja
dec
xchg
pop
jmp
dec
mov
cld
repnz
cld
aad
sub
inc
fwait
pusha
mov
and
in
mov
int
inc
jo
push
mov
ja
rorb
pop
jle
stc
mov
push
inc
add
cmp
jbe
pop
leave
ret
push
mov
sub
mov
add
push
push
add
push
or
mov
sbb
mov
shrd
cmpl
movzbl
movl
mov
jmp
mov
mov
jne
push
push
push
pushl
push
pushl
call
orl
and
mov
mov
sbb
sub
negl
shr
cmpl
movl
mov
jmp
movzwl
jg
push
push
pushl
call
add
movzbl
adc
mov
adc
movzbl
sbb
xor
xor
xor
mov
sub
sub
mov
adc
mov
movzwl
or
mov
mov
movzbl
xor
xor
xor
mov
xor
mov
or
neg
mov
mov
sbb
shl
mov
sbb
shrd
sub
xor
adc
shr
xor
or
add
mov
jmp
jnp
add
mov
ficoms
push
adc
outsb
inc
adc
lea
adc
repnz
das
mov
dec
imul
dec
jl
lret
push
ja
xor
gs
orl
mov
push
mov
mov
lock
mov
in
xchg
mov
popa
cmp
enter
in
in
test
lret
and
fadds
stos
xorb
xchg
xchg
inc
jg
push
enter
dec
jb
pop
cli
push
add
cmp
and
sub
sbb
jbe
dec
xchg
push
int
mov
aad
cli
adc
rcl
dec
adc
or
or
mov
xchg
ret
mov
push
sub
cs
testb
fisttpl
inc
arpl
addr16
inc
es
inc
daa
fstpl
dec
aas
pop
jne
jecxz
aam
loope
mov
or
xor
and
imul
das
insb
enter
sub
mov
add
jl
or
push
cld
pop
daa
pop
out
push
inc
cld
jg
mov
xor
jbe
xor
loopne
roll
mov
sub
test
sbb
xor
or
test
sarl
mov
inc
mov
mov
cmpsb
jmp
enter
mov
jle
push
mov
out
into
lods
fnstenv
push
std
es
stos
ret
subb
ds
mov
sub
aam
mov
mov
or
mov
mov
loope
lret
and
daa
push
dec
sub
pop
sub
mov
push
jbe
pop
clc
rclb
sbb
sub
xor
call
adc
adc
inc
xor
popa
jbe
sar
stos
test
inc
add
out
incb
inc
out
jbe
out
sbbl
and
sub
daa
insl
jp
xlat
popa
aam
inc
insb
push
sub
adc
jne
or
int
push
inc
fabs
xchg
push
in
daa
xchg
int
sbb
jns
add
push
iret
and
jns
testl
push
xchg
out
or
test
outsb
mov
and
int3
sbb
cmpl
sbb
mov
add
sbb
cltd
or
lret
pop
add
es
lcall
jbe
js
lahf
inc
in
pushf
iret
or
loopne
outsb
add
into
cmp
std
sub
push
sub
stc
std
test
adc
ss
mov
dec
not
and
mov
mov
sbb
xchg
outsl
out
mov
pop
sbb
mov
adc
push
jmp
mov
adc
jmp
xchg
mov
sub
les
loopne
adc
lea
adc
jp
out
fsts
jl
pop
push
repnz
mov
and
dec
es
pop
lret
sbb
mov
fldcw
out
arpl
dec
pop
sbb
sub
inc
sub
sub
sahf
clc
pusha
jnp
int
insl
hlt
jg
divl
ljmp
pop
add
mov
movsb
xchg
and
jmp
out
in
rorb
das
fldt
fnstsw
push
mov
pop
in
cmp
mov
push
mov
insl
push
les
push
push
pop
pop
jb,pt
shl
xchg
dec
hlt
xor
mov
push
sbb
arpl
fmull
lods
mov
mov
ret
test
xlat
adc
rolb
push
mov
insl
ret
xchg
jl
data16
mov
scas
cli
jle
test
repnz
fstps
outsl
mov
jo
mov
mov
sub
pop
xchg
push
push
add
aas
cmp
inc
mov
mov
sbb
inc
adc
fildll
lret
outsl
test
roll
test
ret
cld
mov
xchg
popf
mov
dec
mov
test
rclb
shll
jo
leave
inc
sub
loope
dec
add
xchg
add
adc
hlt
mov
fwait
scas
and
repz
dec
fdivr
movsb
dec
and
mov
adc
add
int
jmp
adc
or
mov
jl
rcrb
popl
or
scas
jecxz
mov
add
repz
mov
or
mov
jmp
adc
fwait
sbb
and
jbe
add
sbb
daa
add
repz
mov
cli
dec
xor
ja
shlb
cwtl
clc
out
sub
xchg
adc
inc
adc
icebp
loopne
lods
mov
adc
lods
call
mov
test
fisttpll
xchg
out
jo
daa
out
cld
icebp
int
setbe
inc
cwtl
xor
sbb
nop
lahf
pop
outsb
mov
loope
lods
ss
in
subb
jb
js
cmp
outsb
xchg
mov
int3
test
shrl
push
or
mov
lea
fsubrl
arpl
aam
mov
ds
jle
aad
mov
test
lcall
pop
sbb
add
push
mov
mov
cmpl
movl
not
mov
jmp
mov
jg
push
push
push
call
sbbl
adc
andl
mov
mov
xor
xor
or
mov
adc
adcl
neg
xor
or
mov
mov
sub
or
mov
mov
xor
or
mov
sub
sub
mov
xorl
mov
or
mov
xor
mov
movzwl
sub
mov
cmpl
mov
mov
mov
jmp
mov
jle
push
call
sub
and
subl
or
or
adc
mov
mov
cmpl
movzbl
mov
jmp
mov
jb
push
push
call
mov
xor
xor
sub
or
xorl
adc
sub
sbb
mov
shl
mov
sub
xor
or
xor
sbb
mov
xor
adcl
shld
shl
mov
mov
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
xor
xor
add
sbb
xor
xor
mov
cmpl
mov
mov
mov
mov
jmp
movl
movl
jg
push
call
movl
and
sub
subl
movl
mov
shld
movl
shl
cmp
movl
jne
movl
cmp
je
and
mov
xor
or
and
mov
push
movl
pop
or
xor
shl
mov
addl
xor
adcl
shr
addl
or
mov
or
mov
mov
mov
mov
cmpl
movzbl
mov
jmp
mov
mov
jl
pushl
push
pushl
push
call
mov
add
inc
mov
and
sub
mov
jmp
add
int3
sub
inc
les
pop
inc
adc
lea
adc
ljmp
stos
loopne
pop
fwait
xchg
sbb
or
fwait
push
shlb
mov
pop
out
push
jb
js
icebp
lret
ss
movsl
dec
iret
sbb
jmp
and
jmp
push
push
mov
inc
push
in
fidivrl
xor
dec
xlat
cltd
sub
in
pop
stos
sarb
sbb
mov
and
mov
int
mov
inc
pop
xchg
and
cmp
adc
push
scas
shlb
sbb
movsl
movsb
or
fistpll
mov
inc
cmp
jns
and
out
adc
jnp
push
push
mov
sub
iret
jno
push
icebp
fists
fcmovne
xor
aaa
cmp
out
xor
jge
push
jo
sbbl
pop
mov
or
pop
rolb
stos
into
fsubrp
in
fwait
sbb
adc
xchg
xor
sbb
movl
fidivrs
rol
lret
in
jle
sahf
test
fndisi(8087
pop
mov
mov
stos
push
cmpsb
in
int3
lds
inc
xor
jmp
mov
scas
add
aas
lret
or
sbb
sbb
push
or
jl
dec
sub
mov
sub
lcall
inc
mov
hlt
adcl
stos
and
inc
push
sub
cmp
inc
nop
push
inc
scas
loopne
push
sbb
or
sub
bound
scas
cmc
pop
inc
ja
inc
pop
cltd
div
loope
int3
repz
in
mov
mov
cmc
adc
ret
dec
push
jno
outsl
popf
push
in
push
dec
bound
pop
int3
push
mov
pop
and
test
inc
mov
inc
into
mov
jne
orl
jmp
test
popl
xor
das
push
cmp
sbb
dec
or
mov
xor
push
mov
push
inc
inc
mov
mov
addl
add
inc
add
fldl
js
loop
mov
outsl
push
call
call
mov
add
outsb
loop,pn
xor
mov
mov
les
scas
dec
test
arpl
push
push
or
fcomp
and
aad
mov
sbb
cmpsb
xchg
sbb
xchg
outsb
fsubr
js
or
push
in
xchg
sbb
fs
mov
inc
lock
mov
out
imul
mov
mov
fldt
mov
subl
add
mov
cmpl
movzwl
movzbl
mov
mov
jmp
movl
movl
ja
pushl
call
or
and
or
xor
mov
adc
adc
mov
xor
mov
lea
andl
mov
addl
mov
xor
mov
xor
xorl
xor
addl
shr
subl
shl
or
mov
movl
add
mov
mov
xor
xor
andl
shr
addl
shl
sbbl
or
subl
push
lea
push
subl
lea
push
call
cmpl
mov
mov
jmp
mov
movzwl
ja
pushl
push
push
call
adc
movzbl
sub
and
mov
xor
adc
or
sub
xor
xor
mov
and
mov
cmpl
movl
mov
mov
jmp
movl
movl
jae
push
pushl
pushl
pushl
call
sbb
sub
adcl
or
sbb
xor
add
mov
sub
and
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
jmp
mov
pop
cmp
shlb
pop
out
jb
lret
aaa
adc
lea
adc
aaa
test
add
add
mov
adc
push
popf
sub
xchg
inc
ds
arpl
data16
js
push
stos
xor
xor
fadds
icebp
int
mov
hlt
inc
lods
inc
jne
push
std
cmp
mov
fucomi
jge
insb
push
xorl
imul
mov
lahf
jle
sti
sbb
rcrl
test
jecxz
jecxz
sbb
inc
aam
inc
push
js
xchg
iret
push
pop
jecxz
mov
adc
and
shlb
fidivs
inc
cmp
xchg
es
das
adc
movsb
out
mov
jo
jbe
movsl
int3
sub
popf
add
adc
push
mov
push
std
or
andl
popf
ss
test
enter
jl
sbb
fistpll
sar
cli
sub
xor
jle
and
pushf
push
fildl
add
call
repz
les
insb
push
insb
and
or
test
fcmovne
pop
test
sbb
mov
jl
int3
les
cmpsl
mov
imul
fsubrl
das
lret
xchg
mov
hlt
fidivrl
jns
mov
jnp
out
cli
jle
dec
sub
orb
jnp
mov
lds
in
dec
and
xchg
sarl
jg
ja
mov
and
xchg
lods
fcmovnu
icebp
cmp
ja
xchg
inc
push
les
loopne
call
or
dec
lods
ret
dec
loopne
test
sub
pop
ss
outsb
rcll
clc
frndint
xor
nop
xchg
pop
lret
lds
pusha
data16
daa
in
clc
jg
push
inc
mov
add
push
pop
sti
sbb
dec
pusha
lods
pop
clc
lea
and
inc
in
lahf
xchg
mov
dec
fwait
int3
xchg
ret
xchg
or
mov
or
and
sbb
mov
xchg
cli
mov
pusha
test
xchg
dec
mull
pop
jp
js
sub
movsb
in
jg
mov
repnz
pop
xchg
stos
mov
cmp
movsl
das
aaa
jno
mov
mov
inc
ljmp
dec
add
and
test
ret
fcoml
imul
dec
xchg
sarl
dec
jae
add
insb
jle
aaa
rclb
in
incb
jl
arpl
je
nop
adc
fimull
xchg
lahf
push
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
jmp
xchg
sbb
sbb
dec
test
lea
adc
loopne
imul
cmp
jmp
cwtd
dec
push
dec
sarb
cmp
push
rorl
scas
scas
cwtl
cmc
cmp
push
xor
sub
cld
mov
push
clc
sti
xor
cmpsl
cmp
fmuls
lods
ret
int
add
sbb
pop
ss
mov
cltd
fnstsw
lds
into
pop
out
jl
dec
popf
inc
pop
call
or
mov
negl
aaa
sbb
push
jp
pop
sbb
fsubrp
stos
and
adc
or
cs
cmpsl
or
loopne
pop
fdivrp
xor
mov
mov
push
sahf
movsl
mov
cmp
jp
fdivrl
call
adc
cmp
movsl
sbb
pop
fwait
mov
cs
es
mov
loopne
lahf
sahf
jns
out
xchg
xchg
cmp
adc
es
cmpsl
inc
push
mov
pop
andl
xchg
cld
leave
inc
cmpb
pusha
pop
rcrb
in
dec
xlat
outsl
xor
rclb
out
loopne
pusha
hlt
inc
roll
dec
lret
push
push
fisubl
push
cmc
sbb
xlat
xchg
inc
push
shll
sub
insb
mov
aad
or
inc
mov
cmp
push
sti
and
fcoms
and
cmp
aaa
sbb
dec
stos
lods
faddl
add
xchg
lret
fstps
xor
rcrl
enter
inc
mov
imulb
inc
dec
loop
xchg
lock
imul
dec
mov
stc
pusha
fisubs
cmp
cmpsl
imul
jno
jmp
push
insl
push
push
cmpsl
cmp
cltd
jecxz
mov
orl
cmp
enter
cltd
dec
push
push
pop
xor
data16
xor
mov
jnp
icebp
mov
add
or
pop
sub
subb
or
jae
push
enter
sbbb
xchg
push
fmuls
push
imul
and
push
and
cmc
adc
mov
cmpsl
push
push
push
cmp
int3
adc
mov
ljmp
lcall
mov
cltd
je
movl
das
sub
mov
mov
push
daa
xor
lods
test
mov
xchg
call
mov
and
out
test
mov
jg
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
jmp
mov
add
sub
jle
sub
imul
adc
xchg
gs
dec
stos
add
into
mov
add
fcompl
adcl
mov
mov
stos
mov
sbb
jo
and
int3
jns
or
ret
lret
cmp
test
loopne
pushf
dec
xor
sbb
out
sbb
or
or
sub
and
roll
pop
and
das
xor
add
jbe
lods
xchg
jp
mov
sti
add
mov
stos
sub
xchg
sbb
inc
adc
add
and
std
adc
into
pop
jnp
fbld
nop
mov
test
into
mov
in
idiv
stos
cwtl
out
adc
mov
fidivrs
push
je
sbb
bound
arpl
pop
jl
mov
aad
ss
shlb
leave
hlt
pop
mov
pusha
push
sbb
movsb
aas
sub
cmp
dec
das
and
and
mov
daa
pop
lock
cli
jae
pushf
out
sub
jmp
hlt
int
in
popf
push
lret
subl
xchg
imul
xchg
mov
xor
dec
int
daa
push
scas
xchg
in
inc
mov
in
jge
jecxz
xchg
and
in
pop
arpl
adc
dec
pop
push
cmc
and
or
push
dec
cs
clc
xchg
cli
lods
xchg
push
or
scas
dec
push
pop
dec
push
sbb
mov
add
jbe
add
sbb
jecxz
inc
insl
xchg
das
imul
popa
mov
repz
jmp
xor
add
aam
xor
sub
bound
mov
add
jle
ljmp
push
sti
sbb
push
push
xor
fisubs
push
sbb
xor
pop
dec
arpl
jne
cmp
jbe
fmuls
xchg
in
jg
pop
mov
and
cmpsl
jl
scas
mov
dec
addr16
test
mov
push
mov
loop
mov
xlat
xor
or
aam
push
stos
inc
dec
in
mov
xlat
mov
mov
jae
test
lods
pop
stos
xchg
push
mov
push
mov
int3
movsl
jne
dec
and
mov
xchg
test
shll
inc
in
loope
sti
pusha
jb
mov
andb
xor
xchg
cmp
lret
push
ja
inc
and
cmc
mov
push
cs
hlt
data16
std
mov
pop
std
lock
xor
or
leave
sub
loopne,pn
test
je
cmova
dec
push
xchg
cli
pop
icebp
cwtl
outsb
ficomps
or
xor
or
push
add
jmp
and
lods
and
js
push
mov
adc
repz
shll
xchg
xor
fs
dec
mov
andb
add
cmp
mov
push
jo
jo
in
pop
aas
shr
test
nop
xor
fs
pop
iret
loope
cmp
sub
xor
and
leave
dec
sti
aaa
in
rorl
jns
sub
add
mov
movsb
dec
pop
pop
subb
jns
cmp
jl
mov
sbb
ja
adc
aaa
xchg
add
outsl
mov
test
push
jb
dec
cmp
cwtl
adc
cmc
inc
pop
cltd
mov
cmp
arpl
push
adc
xchg
jecxz
into
or
pop
js
jno
out
outsl
sbb
sub
fs
inc
xorb
push
out
xchg
in
dec
cmp
je
mov
and
mov
mov
stc
xor
shr
mov
aad
into
lock
mov
mov
ss
fidivrs
into
mov
xor
pushf
mov
adcl
leave
imul
push
or
push
jno
cmp
pop
pop
out
daa
lret
jnp
dec
pop
jno
orb
pop
sub
xor
sub
test
mov
xchg
add
es
arpl
mov
iret
push
dec
aas
sbb
add
sbb
ret
ljmp
or
push
idivb
mov
xchg
repz
inc
nop
cs
jle
stos
shll
mov
lret
inc
out
stc
test
movsb
shrb
ret
fidivrs
daa
and
sbb
fmull
fcomip
cmove
mov
not
xor
in
iret
add
cmpsl
adc
dec
jbe
icebp
pop
icebp
mov
sbb
je
ret
repnz
mov
fidivs
inc
cmpb
sub
sub
adc
add
gs
push
stc
stos
out
scas
or
cmp
mov
cld
pop
movsb
insb
push
out
mov
mov
inc
or
ror
repnz
inc
push
out
cmpb
add
and
shl
daa
mov
add
adc
push
jmp
lds
dec
xorb
pushf
mov
es
ret
xchg
les
or
mov
mov
fsubp
fldt
cmp
or
stos
call
pop
pop
cmpsl
mov
and
aaa
fwait
adc
and
dec
xor
hlt
dec
jecxz
out
or
pop
dec
rcll
inc
push
shl
call
jmp
outsl
xchg
pop
test
add
mov
movlps
inc
out
xor
pop
dec
hlt
testl
clc
out
loopne
jno
jecxz
pop
dec
or
icebp
pop
xchg
les
das
loop
dec
dec
inc
out
inc
loopne
mov
sbb
adc
and
add
pop
movsl
test
sarb
cmc
push
sbb
jo
cmp
xor
adc
popf
subb
pop
push
fisubrl
adc
cmpl
lods
lcall
imul
and
cmp
aas
mov
outsl
and
or
mov
adc
dec
das
mov
test
subl
push
pushf
cli
sbb
shrl
test
xor
stos
scas
outsb
loopne
fbstp
int3
push
and
popa
fisubrl
cmp
cmp
mul
stos
cmpsb
std
cmp
cs
adc
lahf
shl
mov
movsb
fisubs
lahf
mov
js
stos
scas
push
mov
out
ja
rdmsr
xchg
dec
fildll
fisttps
pop
testb
xlat
pushf
add
lock
add
test
sub
mov
lea
lcall
dec
mov
lahf
xchg
lahf
cmp
movl
cmpsl
popf
xlat
popa
pop
roll
fistpll
sub
call
std
push
jle
ljmp
sbb
add
pop
mov
or
adc
xorl
fprem1
xchg
lock
mov
dec
sbb
outsl
xchg
dec
mov
subl
in
pop
pop
lods
add
push
cwtl
bound
cmpsb
xor
push
inc
jmp
sahf
popf
push
and
repnz
push
cmp
xor
xchg
cmc
or
or
movsl
push
pop
xor
lret
add
in
or
mov
and
adc
xchg
or
int3
lods
sub
cmp
fadd
fimuls
xchg
push
lret
icebp
lock
ds
je
rcll
mov
aaa
inc
jns
mov
add
mov
test
movsl
hlt
inc
pop
outsb
mov
shr
cmp
adc
pop
xchg
div
out
mov
in
hlt
out
scas
lea
adc
inc
inc
inc
mov
ret
fwait
mov
pop
mov
xchg
adc
pop
push
jecxz
call
pushl
inc
cltd
sub
jns
xlat
jle
pop
lock
ror
aas
loope
les
adc
jne
add
das
sbb
leave
jns
orl
xchg
iret
fmul
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
jmp
jge
jbe
jne
jge
das
adc
fs
sbb
adc
push
jmp
andl
aaa
std
fidivrl
jbe
jle
iret
shrl
lods
xchg
movsl
mov
ljmp
ficoml
lods
cmpsl
or
mov
jo
or
sbb
fwait
out
sub
pop
inc
cltd
icebp
or
inc
mov
or
andl
icebp
test
addr16
loope
push
add
std
pop
xor
repz
cld
addr16
adc
jmp
and
xor
add
pop
mov
sarl
jo
mov
gs
cmc
inc
arpl
out
into
xchg
pusha
push
sbb
jle
loop
pop
hlt
xchg
lret
sub
mov
mov
sbb
lret
je
les
orb
ljmp
push
and
mov
cmp
fwait
jne
pop
dec
scas
push
or
cmc
push
in
and
inc
arpl
arpl
mov
adc
sub
jno
push
pop
fwait
xor
in
xchg
dec
or
imul
pop
sbb
shrb
sub
in
cmpsb
shr
cmc
pop
in
jl
gs
repnz
frstor
dec
fs
mov
cmpsl
pop
scas
and
bound
fsubr
into
nop
nop
loopne
xchg
ret
and
xchg
repnz
in
aaa
or
add
movsb
xchg
std
fs
cmp
adc
aad
in
mov
mov
xchg
pop
sub
fisttpll
add
ret
dec
add
ljmp
shll
cmc
lret
pushf
cld
idiv
ds
push
aaa
xlat
cmp
frstor
push
cltd
repz
add
icebp
xchg
sub
xor
andl
js
jg
aad
lea
jbe
out
dec
imul
ja
jmp
xchg
jne
iret
rorb
stos
mov
adc
push
push
mov
cmpsb
or
push
sub
mov
cmp
icebp
mov
xor
sub
sbb
xor
ficomps
lods
inc
mov
or
in
mov
push
or
mov
pop
and
mov
dec
insb
fcmovbe
push
sbb
cwtl
jge
xchg
test
icebp
cmp
pop
gs
sarb
inc
push
mov
jge
in
mov
xchg
bound
rcrl
dec
inc
push
inc
mov
pop
add
push
mov
push
sub
pushf
sub
aaa
clc
sbb
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
adcl
or
mov
mov
jne
cmpl
movl
movl
movl
jmp
mov
mov
jne
push
pushl
pushl
push
call
adcl
sbbl
add
orl
xorl
subl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
fs
push
stos
sbb
dec
loop
bnd
stos
nop
sbb
adc
lret
lcall
std
and
in
ret
in
mov
lds
adc
imul
out
mov
xor
jnp
imul
mov
flds
sub
int
nop
cmp
ljmp
dec
lock
mov
shlb
pushf
mov
cs
loopne
pusha
xchg
addr16
mov
xor
sbb
inc
jle,pt
test
pop
mov
adc
mov
test
cltd
push
movsb
notb
cmp
repnz
push
mov
mov
adc
jmp
std
repnz
cmp
pop
repnz
and
jmp
out
adc
dec
adc
adc
add
sub
in
mov
pop
ficomps
sub
or
mov
lds
fdivr
or
jb
fmul
adc
rcrb
inc
xor
in
idiv
push
jne
mov
pop
jne
scas
xchg
inc
pop
push
add
pop
bound
xor
mov
adc
xchg
pop
movsl
mov
pop
lds
jle
sahf
ja
aad
xor
mov
mov
cmpl
stos
js
fisttpll
adc
mov
sub
mov
xor
in
mov
sub
icebp
das
fidivl
popf
xor
lret
ret
mov
dec
lea
sub
aaa
popa
in
or
and
std
pusha
sti
jmp
enter
cmp
insb
lods
push
idivl
daa
xchg
cmp
xor
cltd
test
lds
cmpsb
adc
push
mov
sbb
sti
dec
aam
or
sbb
mov
jno
in
jg
pop
out
mov
xchg
sti
jmp
cmpsb
sarl
mov
lods
sbb
pop
xor
mov
xchg
cld
mov
sub
jno
lds
mov
dec
shl
popf
mov
pop
cmc
and
lret
gs
push
push
xlat
adc
lea
adc
xchg
dec
test
pop
int3
lret
pop
fiadds
imul
push
pop
adc
dec
std
movb
push
negl
xchg
leave
xor
mov
popf
outsl
pop
and
cli
aaa
mov
loopne
loope
roll
fsubp
aad
xchg
sbb
mov
inc
loope
popa
fimuls
in
jno
sahf
cmp
ret
inc
jecxz
popf
sbb
dec
jp
pop
adc
aam
ret
aad
inc
pop
test
and
sti
sub
mov
add
mov
mov
jmp
and
test
imul
arpl
fsubs
mov
jo
mov
and
mov
sahf
jg
pop
pop
xchg
fwait
jmp
testl
ret
inc
je
imull
int
pop
fidivs
cmp
mov
loop
decl
cmp
and
idiv
xchg
scas
dec
adc
repnz
jge
test
push
jle
in
push
lds
loopne
scas
mov
das
or
stc
in
mov
lea
jge
mov
cwtl
mov
aas
push
popf
and
rcll
test
popl
test
mov
loop
mov
imul
mov
enter
aaa
cmc
andl
add
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
jmp
imul
scas
std
dec
and
adc
unpckhps
mov
testb
scas
push
mov
std
popa
inc
lcall
sub
dec
decb
aaa
sub
xchg
out
inc
mov
inc
std
call
div
pop
or
and
ret
subl
cs
jnp
or
sbb
ljmp
js
faddl
xor
cmp
fistpl
ret
pop
mov
mov
xor
rclb
pop
fbstp
aad
lret
add
adcb
sbb
xchg
icebp
cld
push
lds
stc
mov
pop
xchg
test
mov
std
jecxz
mov
mov
push
mov
subl
enter
adc
out
xchg
clc
and
xor
into
das
in
and
sar
push
gs
sub
fsts
enter
fimuls
cmpsl
push
dec
mov
and
adc
fs
lret
aaa
xchg
stos
cmpsl
loope,pn
arpl
movsb
repz
xchg
jmp
fstl
dec
popf
mov
xchg
pushf
mov
dec
cs
rclb
cli
pop
jo
leave
and
xchg
adc
push
or
fadd
mov
cmp
out
cmpsl
mov
and
pop
add
cli
hlt
cmp
mov
outsb
jecxz
cmp
adc
es
aam
and
movsb
jns
add
test
js
inc
sbb
mov
ljmp
loopne
insb
insl
adc
data16
push
mov
xor
push
bound
push
add
daa
les
imul
push
mov
cli
imul
mov
push
pop
test
mov
adc
or
jecxz
sub
repz
pop
insl
xchg
mov
sbb
adc
ror
xchg
dec
pop
stos
mov
pop
jno
stos
jmp
lea
cld
and
fimull
or
inc
xchg
pop
inc
pop
fildl
cli
mov
pusha
testb
pop
xchg
jo
sub
sub
stos
xchg
push
lcall
repnz
dec
adc
iret
pop
push
mov
fwait
or
xchg
rorb
int3
inc
ds
sub
loope
or
and
jecxz
mov
dec
lock
cmp
lock
gs
inc
popf
sub
inc
push
in
xor
scas
cli
push
in
loope
inc
nop
mov
inc
call
xchg
add
ss
stos
movsb
jbe
adc
ja
pop
imul
or
out
scas
lcall
mov
or
xchg
add
mov
sub
sbb
inc
sbb
push
addr16
jecxz
mov
or
xchg
adc
ljmp
std
fsts
inc
int
inc
jb
in
mov
popa
shl
pop
lahf
sti
dec
add
or
jae
lret
push
fldcw
pop
dec
mov
xor
fs
jo
jl
pop
dec
push
dec
and
stos
mull
jmp
out
push
xor
sti
or
sbb
inc
adc
jle
sarl
sbb
negl
ljmp
cmpb
xor
cmp
sbbl
in
jb
cmpsb
out
shll
pop
pop
add
test
or
xlat
sbb
sbb
cmp
jmp
leave
jnp
add
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
jmp
lret
lahf
push
pop
sbb
leave
pop
jmp
call
js
pop
adc
adc
xor
mov
sahf
lea
jecxz
pushf
sbb
rcrl
fmull
jb
inc
mov
je
adc
divl
test
xor
mov
out
xor
sub
fistpll
adc
pop
xchg
sbb
jmp
sbb
mov
mov
leave
movsl
xchg
sbb
pushf
out
mov
test
int
sbb
sbb
clc
test
ret
push
mov
xchg
push
out
pavgw
sbb
lods
xchg
arpl
outsl
jmp
std
les
inc
out
cmp
cld
sahf
mov
into
xor
push
ss
ds
jecxz
or
adc
cmp
test
scas
jo
cmc
cmpsb
js
mov
cmp
adc
ss
ss
pop
inc
inc
push
out
cmp
sub
and
dec
fcomp
pop
addr16
mov
shr
push
hlt
loope
mov
mov
sub
inc
cmp
fwait
and
or
cld
mov
xchg
adc
ret
add
or
mov
popa
push
mov
pop
cmp
add
xchg
mov
inc
cmp
jg
cmc
movsl
dec
mov
jbe
lds
cltd
mov
orb
mov
stc
addb
mov
dec
or
jmp
cld
int
scas
insb
push
cmp
stc
jae
mov
pop
test
adc
mov
scas
arpl
jmp
iret
add
repnz
sbb
cmp
or
jmp
mov
and
rorb
cmp
pextrw
jne
aam
jp
fadd
mov
jmp
xorb
xor
rolb
gs
in
loopne
sub
add
pop
jge
aad
sti
push
call
xchg
push
xchg
mov
addr16
arpl
lahf
fimuls
fwait
orl
sub
mov
insl
leave
mov
cmp
add
sub
test
je
push
icebp
mov
in
or
pushf
cmp
dec
je
cmpsb
lods
test
jge
pop
adcb
inc
dec
inc
jg
jne
pop
aad
sbb
adc
in
lods
mov
lods
data16
push
stc
subb
popf
pop
jg
lahf
and
stos
xchg
push
fs
ljmp
sbb
fists
je
pop
lret
popa
mov
test
pop
cwtl
mov
lcall
inc
daa
jmp
lds
insl
lret
lea
pushf
xchg
das
aaa
jo
jnp
jmp
aas
sbb
mov
fcomp
mov
ljmp
cmc
mov
xchg
cs
loope
push
pop
lahf
pop
inc
inc
aaa
popf
add
imul
cmp
mov
pop
cmp
imul
jae
mov
das
filds
xchg
movsl
and
fsubrl
inc
push
xor
arpl
psubusb
lea
adcl
nop
add
stos
stc
loope
dec
popf
iret
enter
lret
js
mov
andb
in
mull
ds
ffree
lea
xchg
mov
xchg
jae
add
popf
xchg
test
js
jae
rol
push
jae
rcll
and
push
mov
shrb
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
call
mov
movzbl
push
call
test
jne
xor
jmp
adc
mov
cmpl
movl
movl
movl
jmp
movzbl
jbe
pushl
call
orl
addl
adc
sbbl
andl
mov
xor
mov
jmp
xor
push
or
cli
sbb
and
mov
xchg
movlps
xor
scas
xchg
loope
cmp
ljmp
mov
jns
mov
inc
xor
pop
arpl
xor
mov
hlt
imul
popa
fdivrs
fs
jl
mov
add
mov
jg
mov
ret
mov
inc
hlt
xchg
insl
push
xor
fsubr
jg
cmp
inc
aaa
stos
xlat
stos
jmp
rcrl
enter
pop
sub
dec
push
xor
and
jno
mov
ss
adc
xor
mov
push
sub
and
xor
xchg
loopne
testb
dec
push
rcrb
scas
dec
pop
xchg
xchg
push
xor
push
out
jnp
pop
lahf
cmp
sub
add
gs
adc
les
dec
xchg
popa
fisttpll
jmp
add
gs
mov
jle
inc
sbb
lcall
test
icebp
iret
push
faddl
pushf
pusha
xor
cmc
test
insb
sahf
pop
jge
jns
sub
inc
cmp
cli
jo
jle
jnp
mov
loop
sahf
xchg
pop
add
out
lods
jbe
test
push
ss
iret
jbe
in
push
dec
xor
les
mov
mov
out
out
xor
imul
and
or
sub
leave
pop
mov
mov
lcall
sub
test
sub
mov
jb
ret
inc
xchg
push
mov
mov
test
lret
stos
bound
faddl
jnp
imul
pop
scas
es
mov
test
fstl
bndstx
adc
imul
lock
sbb
shrb
sbb
xchg
lret
pavgw
xchg
dec
lret
stc
sti
out
insb
xchg
mov
push
xor
loopne
sahf
pop
test
into
cld
push
add
stos
mov
test
xchg
or
loopne
rcrb
arpl
cmp
fdivl
inc
or
rclb
cmpsb
fdiv
mov
jbe
test
fistl
xchg
call
jne
sbb
imul
inc
cmc
fisttpl
and
outsl
mov
mov
cltd
or
inc
mov
rorb
cmp
mov
insb
fsubl
inc
faddl
repnz
inc
mov
fs
dec
sbb
fisubrl
pop
push
dec
ret
les
dec
outsb
push
cltd
or
inc
cmp
loope
fisttps
or
mov
test
and
mov
mov
cmpl
movl
movl
jmp
movl
mov
je
push
call
addl
subl
and
andl
movl
orl
movl
adcl
push
mov
add
pop
mov
cmpl
movl
movl
movl
movl
jmp
not
movl
jl
pushl
push
push
push
push
push
push
push
call
subl
subl
addl
adcl
andl
neg
mov
xorl
mov
movl
mov
movl
mov
andl
movzwl
or
cltd
movzwl
xorl
idiv
cmpl
mov
movl
mov
mov
jmp
movl
movl
jne
pushl
push
push
call
xor
xor
mov
and
or
mov
mov
sbb
movzwl
sub
sbbl
movzbl
sub
mov
sub
mov
movzwl
addl
or
mov
or
mov
cmpl
movl
mov
mov
mov
jmp
movl
movl
jae
push
pushl
push
pushl
call
sub
sub
adcl
mov
or
addl
mov
mov
mov
movl
mov
mov
adc
mov
sbbl
sub
sbbl
mov
andl
xor
sbb
jmp
mov
sbb
push
outsb
xchg
js
std
adc
adc
xorl
pop
jl
mov
lods
sub
jns
dec
icebp
fwait
jno
push
les
ds
ficoml
jg
test
xor
sub
aam
addl
mov
add
sbb
adc
or
fwait
xchg
sbb
mov
cltd
dec
lret
mov
clc
lret
mov
popf
dec
add
adc
dec
xchg
fcoms
mov
cli
sbb
xor
add
imul
pop
sbb
pop
nop
jns
stc
fucomi
dec
push
xor
test
adcb
out
cwtl
jmp
lret
xchg
inc
out
add
cmp
outsl
mov
sarb
sub
fbld
add
lahf
mov
loope
pop
in
mov
cs
fists
xchg
and
mov
pop
in
out
aaa
loop
mov
ds
or
xor
cmpsl
fs
mov
pop
std
fidivrs
lods
jmp
addr16
fidivs
int3
jo
pop
fstps
push
push
in
icebp
insl
out
fstp
lcall
test
scas
popa
and
mov
push
into
mov
push
scas
rolb
add
test
and
pop
stos
lahf
repnz
leave
daa
pop
xor
fisttps
xchg
fidivs
mov
pop
insl
lret
cld
in
clc
fldt
mov
pushf
ret
and
pop
dec
or
aam
rdmsr
jno
nop
inc
jge
adc
daa
cmc
push
add
inc
out
jmp
mov
push
rol
cli
adc
cmp
lcall
lea
and
jb
cmp
xchg
pusha
rorb
dec
pop
lock
adc
jae
cwtl
int
jle
sbb
xor
pop
add
adc
ficoml
cmp
movsb
push
pop
pop
mov
ret
pop
stos
push
sbb
sbbb
test
push
loope
test
fiadds
sbbl
aad
xorb
push
pop
cmp
test
aaa
mov
dec
ja
dec
jle
fsubrs
scas
add
popf
xlat
jbe
xchg
loop
ret
or
pop
sub
sub
mov
push
mov
stc
jnp
inc
inc
fwait
mov
lock
repnz
jp
jnp
test
iret
add
add
movsb
stos
mov
pop
xchg
neg
roll
pop
cmp
push
jbe
cmc
xchg
mov
stos
dec
pop
cmp
mov
mov
fnstenv
outsl
movsl
sub
scas
fsubl
add
sbb
add
rol
gs
add
add
mov
movl
cmp
movl
jb
sbb
movl
movl
movl
cmpl
movzbl
mov
jmp
movl
mov
jbe
pushl
call
sbb
mov
sub
mov
and
inc
movl
and
mov
cmpl
mov
movl
movl
mov
jmp
mov
jb
pushl
pushl
push
push
call
andl
sbbl
mov
sbb
movzbl
or
xor
xor
xor
xor
orl
add
mov
orl
xor
sbbl
div
mov
add
sbbl
and
pushl
pushl
call
movl
movl
mov
adc
movl
cmpl
movl
mov
mov
jmp
movl
movl
je
push
push
call
adc
xor
xor
mov
sbb
xorl
or
mov
xorl
mov
adcl
and
addl
or
mov
subl
and
xor
adcl
pushl
pushl
addl
call
not
pushl
dec
movl
movl
xor
movl
subl
movl
or
movl
cmpl
mov
mov
not
mov
jmp
movl
mov
jl
pushl
push
push
push
push
call
xor
and
sbb
adcl
movzwl
or
movl
movl
xor
movl
mov
dec
mov
andl
sub
sbb
mov
or
orl
and
xor
jmp
or
ja
mov
jle
mov
mov
xchg
movlps
xchg
loopne
bound
fisubrs
fsubrl
add
and
cmp
adc
xlat
cmp
adc
lods
jecxz
mov
lret
cmp
dec
fcmovu
movsb
push
shl
aas
fldl
cmpsb
mov
push
out
mov
inc
dec
lods
inc
pop
dec
lret
push
jmp
xchg
xor
cmc
lcall
aaa
pop
sbbb
xlat
xchg
nop
cld
pop
fs
aad
xchg
es
mov
fcmovb
out
pop
xor
popa
pop
movsl
sbb
call
dec
js
test
ds
ret
fiadds
add
mov
ret
lret
fdivl
dec
dec
adc
ret
std
mov
out
sbb
sbb
adc
dec
pop
fistl
jmp
or
pop
stc
outsb
cwtl
push
xor
mov
push
hlt
aaa
call
xchg
mov
sub
mov
in
xlat
sbb
mov
xchg
nop
push
lcall
ret
xor
jae
push
jmp
mov
nop
repnz
lcall
je
sbb
ljmp
lret
rorl
fildl
push
repz
popf
sub
imul
xchg
ret
or
jns
test
imul
mov
or
loop
mov
dec
pop
mov
jmp
lret
icebp
xlat
push
adc
fistpl
jbe
aam
fwait
jge
sub
shll
xor
or
xchg
cwtl
inc
adc
fcoms
dec
in
mov
fldcw
fsubrl
pop
and
leave
sbb
imul
mov
xchg
add
xchg
scas
jp
ret
bound
scas
inc
pop
or
dec
je
scas
or
aam
cmp
imul
aam
xor
popf
scas
jns
xchg
jle
outsl
cs
lret
inc
sysret
pop
add
xor
mov
int
sti
xlat
aad
stos
and
sub
shlb
add
loop,pt
repz
imul
xor
leave
je
in
loopne
inc
adc
mov
sbb
add
js
je
push
imul
mov
add
movsl
and
test
push
pslld
insb
and
mov
cltd
imul
xor
pop
xchg
shlb
ficomps
mov
loop
inc
orl
lahf
addl
sub
movl
pushl
xor
mov
mov
andl
add
xorl
and
cmpl
mov
movl
jmp
movl
je
call
or
or
not
or
mov
sub
mov
xor
and
pushl
sub
mov
mov
andl
imul
xor
or
mov
movl
sub
pushl
sbbl
call
adcl
dec
movl
jne
movl
cmpl
mov
movl
mov
mov
jmp
movl
movl
je
pushl
push
call
or
xor
mov
and
mov
sbb
mov
add
movl
mov
mov
movl
mov
xorl
call
lea
mov
cmpl
movzwl
mov
mov
movzbl
jmp
movl
not
jb
call
and
xor
or
sbb
neg
orl
mov
mov
sub
and
neg
lea
mov
mov
mov
sub
mov
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
call
add
xor
neg
xor
add
mov
adc
xor
xor
xor
add
sub
sub
xor
xor
mov
sub
xor
sub
cmpl
mov
mov
jmp
movzwl
movl
jbe
push
push
call
sbb
sub
mov
mov
add
adc
addl
xorl
xor
sbb
xor
add
shl
shr
or
and
mov
dec
mov
orl
mov
mov
sub
mov
xor
mov
mov
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
adc
sbb
sub
adc
movl
mov
adc
mov
mov
xor
orl
xor
or
and
mov
addl
push
xorl
pushl
addl
lea
adcl
push
subl
shl
call
addl
lea
andl
push
mov
subl
mov
lea
push
andl
mov
movl
lea
sbbl
mov
xorl
mov
mov
adcl
push
call
orl
push
sbbl
push
pushl
sbbl
call
and
mov
xor
mov
inc
mov
mov
add
shr
cmpl
not
movl
movl
movl
jmp
movl
jg
push
call
inc
sbb
adc
add
sbb
cmpl
mov
mov
jmp
mov
ja
push
call
and
adc
sbb
sbb
mov
xor
add
sub
or
shl
cmpl
mov
mov
mov
mov
jmp
movl
jne
push
call
add
mov
sbb
adc
sbbl
sbbl
adcl
or
mov
cmpl
mov
movl
movl
jmp
movl
jle
pushl
push
pushl
pushl
pushl
call
adc
xor
xor
add
xor
or
sub
xor
mov
sub
xor
add
adc
and
or
xor
mov
sub
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
jmp
incb
dec
dec
cmp
or
inc
scas
insb
push
out
adc
adc
cwtl
shlb
insb
idiv
sub
loop
fsub
xor
dec
push
decl
mov
dec
jg
adc
leave
mov
fldt
shrl
or
jle
push
dec
lds
jo
mov
adc
ret
sahf
push
sbb
loop
push
mov
xlat
fs
std
fildll
sub
adcb
test
cmp
lret
repnz
cmp
cmp
xchg
xchg
xor
into
or
pop
addr16
xor
cmp
mov
inc
fwait
loope
mov
inc
add
cmp
or
int3
and
mov
adc
xchg
push
jnp
into
out
fldenv
dec
cltd
int3
mov
adc
icebp
jg
push
daa
fisttpll
mul
lcall
cs
pop
xor
cmp
mov
pop
ss
mov
cmp
inc
fildl
rol
jg
xchg
mov
js
fucomi
or
add
cwtl
and
xchg
addb
jae
test
or
xchg
test
stc
cmpsb
shll
dec
pushf
hlt
movsb
jne
loope
fwait
pop
in
je
imul
int
out
push
xchg
xorl
add
hlt
mov
sub
lds
insb
cs
insl
jmp
push
adc
jle
pop
add
pop
dec
aaa
pop
and
inc
ffree
push
jecxz
push
mov
test
jbe
inc
and
mov
adc
jg
sub
lea
xor
lds
ret
inc
call
fdivs
add
mov
cmp
xorl
aad
pop
push
stos
dec
adc
push
jmp
es
mov
addl
push
sahf
ja
das
sub
lock
pop
jle
inc
loopne
xchg
lahf
lds
jmp
add
xchg
and
jecxz
aam
xchg
add
lret
fldcw
iret
mov
push
test
dec
lods
pushf
jge
jae
fsub
test
mov
xor
mov
push
or
flds
push
dec
xchg
aaa
add
clc
frstor
test
mov
xchg
outsl
push
filds
mov
pusha
or
xor
loopne
mov
inc
xchg
hlt
adc
das
out
mov
jle
nop
sbb
pop
gs
pop
dec
and
in
and
push
mov
sbb
mov
shl
aaa
inc
inc
adc
and
pushf
jnp
add
inc
and
and
add
dec
and
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
jmp
ss
adc
sub
xchg
mov
aaa
push
or
xchg
movlps
enter
stc
or
or
jne
push
xor
arpl
pop
ljmp
pop
jns
xchg
sbb
sub
stos
and
add
lods
mov
push
xchg
mov
nop
mov
xchg
cli
jnp
rorb
cmc
hlt
lods
rorl
adc
or
cld
dec
repnz
and
fildl
lahf
outsl
aam
ja
dec
jo
je
push
pop
xchg
loopne
leave
roll
jmp
adc
in
pop
int3
mov
shlb
mov
push
inc
push
pop
mov
pop
adc
imul
loopne
cmc
ret
or
iret
sbb
icebp
push
lods
addl
pop
push
lods
jle
out
mov
cmp
loop
mov
pop
nop
jbe
ljmp
test
in
push
mov
or
push
xchg
pop
into
into
stc
push
sbb
neg
or
loop
xor
inc
adc
insb
clc
ja
push
mov
insb
pop
dec
cwtl
in
sub
sub
cmc
fdiv
cmc
insb
sbbb
sub
and
pop
and
sub
adc
fwait
out
and
xchg
and
jecxz
into
icebp
cmc
in
and
jl
pop
fdivs
iret
mov
lea
push
insb
cmp
inc
jne
mov
lock
mov
mov
inc
cli
add
int3
inc
movsl
mov
ss
dec
and
fsts
das
es
ljmp
cli
mov
sbb
test
and
ljmp
or
insl
ja
xchg
jmp
cwtl
sub
jmp
paddsw
and
or
inc
xchg
loope
insl
jl
jmp
mov
test
repnz
adc
push
lret
or
dec
repz
or
ljmp
ret
nop
sub
repz
repnz
in
shr
jns
repz
or
mov
pop
inc
lea
fstps
lock
movsl
push
test
fwait
mov
jg
arpl
adc
fbstp
mov
mov
orb
add
jns
pop
addl
sub
jno
pop
xchg
sub
push
mov
add
adc
inc
pushf
loope
xchg
fs
sbb
or
jo
repz
pop
push
mov
into
pop
out
mov
aad
test
xlat
jmp
cmpsb
arpl
lea
push
mov
jl
mov
nop
jle
bnd
add
dec
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
jmp
cmpsb
xchg
mov
jns,pt
sahf
lods
xor
test
xchg
movlps
pop
dec
imul
xlat
xchg
add
shlb
out
sub
push
jge
popa
fstpl
mov
inc
mov
inc
bound
aas
fmulp
sbb
mov
xor
add
push
jns
insl
add
push
sub
mov
cld
enter
sbb
sub
sub
jae
addb
cmpsl
pop
jno
xchg
daa
scas
in
xchg
cmpsl
and
mov
cmp
out
fs
das
cld
cld
pop
subl
mov
mov
sti
nop
or
and
adc
and
clc
mov
in
ror
test
cmp
je
repz
movsb
inc
sarb
adc
jg
inc
pop
inc
shll
fcmovbe
inc
and
clc
sub
fstp
xchg
subb
sbb
dec
mov
cs
dec
insb
push
shl
xchg
outsl
cltd
sub
xchg
je
hlt
and
jno
cmp
ds
outsb
lds
inc
or
adc
inc
mov
enter
imul
xor
popa
int3
idivb
pop
mov
adc
rorb
jnp
es
mov
pop
call
sub
popf
xchg
push
into
jmp
jno
or
jg
and
push
cltd
push
out
aas
cmp
es
es
push
es
xchg
push
lods
in
pop
xor
repz
stos
xor
repz
inc
ja
ret
push
aad
add
sti
or
loopne
jmp
sub
out
inc
xchg
outsl
cmp
jle
sub
scas
adc
cmpsb
pop
fsubr
push
add
sub
mov
xchg
mov
jmp
jae
je
dec
and
bound
lcall
jbe
iret
ret
jo
xor
out
push
cmp
push
or
fimull
aad
jle
mov
xor
imul
push
inc
popa
stos
pop
add
push
mov
stc
jnp
xor
xchg
fstps
test
push
push
mov
mov
mov
imul
and
mov
das
jmp
fnsave
add
and
fnstenv
lahf
xchg
sbb
add
mov
xor
mov
rcll
jp
xlat
and
push
xor
dec
jp
cmp
inc
cmp
mov
jns
mov
sbb
aaa
pop
test
enter
addr16
data16
inc
in
jge
in
cltd
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
jmp
cltd
add
cltd
fstp
jmp
lods
pop
mov
jle
loopne
adc
add
jmp
leave
out
rcll
lds
xchg
in
add
xor
test
jno
mov
test
xor
jmp
repz
xchg
lret
jnp
rcrl
lods
fnsave
push
pushf
mov
popa
xchg
mov
ret
cli
mov
or
frstor
loope
in
ror
ljmp
adc
movntps
and
pushf
mov
and
data16
imul
and
ss
insb
xchg
mov
loope
xchg
cmpsl
lods
mov
xor
pop
je
xchg
jnp
jp
cmp
insb
xor
sub
les
movsb
xor
lret
cld
imul
ror
pop
in
in
jnp
or
mov
xor
sub
hlt
fs
dec
sbb
sarl
or
adc
ret
adc
es
mov
sbb
adc
repz
imul
cmp
mov
jb
add
add
adc
lret
push
jl
adc
mov
push
jo,pt
mov
in
hlt
movsb
mov
adc
loope
je
mov
mov
daa
lds
movsb
xor
push
test
rolb
mov
cmpl
add
inc
leave
out
push
lahf
das
cmpsl
fcomps
lea
or
lds
fdivl
ja
sbb
movntps
jbe
inc
sub
sahf
ds
sub
fisubrl
jg
push
sbb
sub
test
addr16
pop
or
sub
and
test
movsl
jle
ja
push
add
sbb
arpl
pop
sarl
insl
or
push
pop
xor
movsb
outsb
out
and
test
and
and
inc
nop
iret
fs
ret
sub
idiv
inc
icebp
mov
andl
movsl
add
xor
cmpb
dec
jne
insb
mov
test
and
mov
fwait
std
sub
nop
xor
push
aad
int
mov
jmp
movsl
adc
out
sub
push
subl
or
pop
or
adc
or
in
add
lods
mov
outsb
mov
jno
xor
cwtl
push
mov
xchg
mov
into
pop
inc
adcl
lods
or
mov
xchg
or
inc
and
int
es
lods
pop
jmp
push
jmp
leave
pop
and
push
pop
shld
shl
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
jmp
cmp
cltd
fistps
sbb
stos
ficoms
adc
shll
cs
stos
pop
push
mov
dec
sarb
ret
dec
cmpsb
ret
not
ja
adc
adc
sub
or
fscale
cmp
lcall
and
lret
adc
das
fwait
inc
jnp
rolb
test
stos
imul
xchg
ljmp
xor
in
dec
loope
pop
call
mov
js
mov
adc
ljmp
std
mov
xchg
test
jl
mov
nop
sub
jo
sbb
repnz
outsl
sub
push
bound
enter
into
xchg
icebp
push
or
push
jb
lods
jecxz
scas
or
into
xchg
jp
sbb
lret
popa
adc
in
sbb
enter
fimull
jbe
mov
jle
loope
sti
lcall
fs
and
call
jle
push
push
std
push
sub
add
rcll
mov
and
mov
stos
mov
movsl
jb
push
cmp
outsl
adc
push
pop
mov
outsl
jns
cmc
das
pop
xchg
cwtl
lret
mov
ljmp
test
mov
add
imul
cmp
mov
xor
push
test
lret
sub
insb
jns
xor
stc
fwait
or
jae
icebp
dec
sbb
lods
cmp
ret
jmp
clc
inc
jmp
push
xchg
cs
je
lods
mov
cmp
and
mov
inc
jge
aaa
int
lret
mov
pop
xchg
sub
or
daa
inc
cmpl
lret
fisubl
cmp
insb
add
fisubl
les
insb
cld
into
and
dec
out
lds
mov
jo,pn
jne
push
cmp
fcomi
bound
fucompp
ret
mov
addr16
xchg
std
xchg
cmpl
xchg
add
cmp
xor
mov
jae
cmovnp
adc
mov
fs
dec
push
pop
jg
aaa
jae
out
xor
sbb
ret
movb
mov
imul
outsb
jle
subl
inc
mov
aam
es
jae
pop
fnstsw
mov
xchg
rorl
mov
xor
daa
xchg
xchg
mov
shl
ds
and
loope
dec
ret
and
movsb
in
xchg
adc
lcall
jno
notl
jecxz
or
fisttps
shll
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
jmp
pop
xor
jge
cmp
loopne
js
adc
adc
int
icebp
xor
mov
popf
imul
mov
aas
outsb
aas
leave
jg
mov
or
in
fiaddl
in
sub
out
cld
jae
lea
mov
pop
push
inc
and
cmp
mov
mulb
dec
push
test
rcr
enter
in
jb
sbb
popf
mov
jno
mov
inc
xor
lds
xchg
dec
clc
cmp
mov
push
sbb
fnsave
lcall
js
mov
inc
mov
dec
mov
test
mov
inc
js
mov
sti
dec
cmp
sub
sub
jno
xchg
leave
ret
test
fldcw
adc
mov
cmp
out
xchg
xchg
loope
out
out
rcr
push
lret
sub
test
push
push
jo
xchg
or
dec
sbb
sub
mov
in
sbb
mov
and
dec
sbb
mov
scas
test
ret
mov
enter
mov
push
sti
pop
ficoms
cmp
sbb
jle
cmp
pop
push
jmp
adc
pop
loop
xor
mov
mov
sub
inc
add
xor
lcall
pop
jns
cs
mov
jl
adc
mov
mov
lock
xchg
in
and
insl
mov
outsl
dec
sbb
pop
stos
loopne
dec
out
daa
hlt
into
xchg
jmp
mov
push
aad
sbb
xchg
push
sbb
pop
icebp
call
or
pop
or
inc
inc
les
mov
movsl
jge
popf
enter
das
sbb
lret
xor
sarb
clc
xor
xor
mov
jmp
addr16
mov
add
sbb
and
pop
add
inc
ret
pop
loop
fndisi(8087
sub
ret
popa
jecxz
cld
adc
mov
test
or
jb
cmpsl
mov
cmpb
xlat
clc
mov
subl
mov
pop
add
test
push
stos
jbe
es
inc
add
xchg
ret
les
mov
pusha
mov
lret
push
mov
pusha
sbb
fcmovu
in
mov
mov
mov
out
sub
cmp
dec
addr16
inc
jl
in
cmp
mov
xchg
xchg
out
pop
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
movl
push
mov
mov
and
push
sbb
push
movl
movl
sub
movl
or
mov
movl
mov
xor
andl
div
imul
sbbl
mov
xorl
xor
and
mov
mov
sbb
mov
xor
orl
div
add
sub
mov
movl
cmpl
movl
not
mov
mov
jmp
mov
mov
jbe
push
call
adc
movzbl
sbb
mov
mov
or
and
mov
mov
sub
or
inc
sub
movl
cmpl
mov
mov
mov
jmp
movzwl
ja
call
adc
sub
sbb
inc
xor
movl
mov
orl
add
xor
cmpl
mov
movl
movzwl
jmp
movl
notl
jae
pushl
pushl
pushl
push
push
push
call
or
and
or
incl
mov
mov
and
and
xor
sbb
imul
addl
mov
and
sub
mov
mov
mov
and
movl
orl
movl
adcl
movl
movl
mov
sub
imul
mov
andl
imul
cmpl
mov
movl
mov
jmp
movl
movl
je
push
push
call
orl
xorl
xor
or
mov
or
mov
xor
xor
sbb
mov
jmp
pop
sahf
and
out
scas
sarb
rclb
adc
jecxz
xchg
mov
cmp
push
push
notl
enter
pusha
mov
pop
xor
pop
inc
sti
ret
jecxz
jle
adc
xchg
sub
xor
mov
in
cmp
pop
sub
sbb
ja
mov
stos
js
movsb
and
clc
and
lds
pop
push
sbb
int3
inc
inc
sub
inc
insl
cmp
shll
push
dec
inc
enter
and
loop
pop
mov
sbb
xchg
imulb
sahf
pop
mov
into
jbe
pop
notb
push
inc
sbb
xor
sbb
fiaddl
lahf
dec
in
je
mov
xchg
and
into
lret
adc
test
jecxz
adc
aas
dec
pop
add
cmp
dec
xchg
ficoml
scas
pop
jl
cmpsb
fs
clc
shlb
push
push
xor
mov
pop
imul
add
mov
and
jno
push
xor
xor
mov
hlt
roll
mov
test
sub
insb
adc
hlt
jne
icebp
mov
mov
push
sarb
mov
pushl
test
cmpsb
outsb
insb
mov
cli
loop
sub
cmp
cld
xchg
xchg
hlt
test
mov
je
adc
push
or
fsubp
jle
mov
insb
dec
dec
dec
xchg
pop
mov
cltd
ss
mov
popf
or
xor
xchg
mov
rorl
cmc
cld
in
inc
cmp
adc
mov
push
jb
dec
mov
into
inc
mov
mov
jno
jo
dec
add
mov
add
pop
paddw
inc
aas
dec
add
mov
stos
and
push
out
jnp
lock
sbb
std
jnp
insl
push
jmp
sub
outsb
xor
mov
mov
sbb
jmp
repnz
mov
lods
or
stos
mov
fidivrs
mov
mov
sub
dec
stos
push
hlt
mov
bound
pop
je
out
jge
stos
pusha
mull
arpl
imul
mov
subl
and
dec
or
xor
mov
subl
xor
cmpl
movzwl
mov
mov
jmp
mov
mov
jg
push
pushl
call
add
adcl
adcl
add
and
mov
add
orl
mov
mov
sbbl
lea
mov
or
movl
movl
sbb
movl
mov
or
xor
cmpl
notl
movl
not
jmp
movl
movl
jbe
pushl
call
or
xor
andl
movl
add
adc
mov
orl
or
and
add
cmpl
movl
mov
mov
jmp
movl
mov
jbe
push
call
and
add
xor
subl
and
add
xor
cmpl
mov
mov
mov
jmp
movl
jb
push
call
add
xor
add
sub
sub
xor
add
mov
add
subl
or
xor
mov
or
add
cmpl
movl
mov
movl
mov
jmp
mov
mov
jge
pushl
pushl
call
andl
sbbl
andl
movzbl
sub
add
adcl
xor
mov
movl
orl
movl
adc
movl
mov
and
add
cmpl
movl
mov
mov
mov
jmp
movl
movl
jle
push
call
xorl
xor
and
orl
orl
inc
mov
sub
mov
subl
lea
movzbl
sbb
mov
or
sub
xor
or
or
mov
mov
movl
movl
mov
or
add
xorl
imul
mov
imul
xor
movl
mov
div
sub
movzbl
or
mov
xorl
movl
sbbl
movl
movl
mov
mov
addl
xor
movl
div
sub
imul
adc
add
mov
orl
xor
xor
sbb
mov
div
xor
mov
movl
cmpl
movzwl
movl
jmp
mov
jge
pushl
call
not
or
adcl
adc
dec
add
movl
and
movl
cmpl
movzwl
mov
jmp
mov
movzwl
ja
push
push
push
push
call
adcl
adc
and
and
addl
mov
mov
sub
movzbl
xor
shr
and
sub
and
mov
imul
mov
subl
and
mov
adcl
jmp
cltd
adc
xor
sbb
js
mov
adc
adc
mov
shl
mov
push
cmp
stos
cmpsl
enter
outsb
mov
cmp
cmp
outsl
jecxz
sub
jae
or
or
loopne
xor
pushf
sbb
and
xor
jnp
nop
xchg
jge
stos
cmp
stos
mov
int
mov
mov
inc
pop
inc
fcmovnb
inc
mov
inc
icebp
pop
jmp
xlat
rcll
outsb
or
int
ret
cs
xchg
jae
bound
fsubl
dec
and
sub
or
pushl
push
outsl
cmp
icebp
movsl
push
jle
xchg
shrb
cmp
mov
and
lahf
xchg
jne
dec
bound
rorl
cld
movb
lahf
cmp
out
lret
test
xchg
cmova
insl
fndisi(8087
xor
sahf
cmpsb
pushf
pop
repnz
sbb
ja
repz
dec
test
xchg
lea
add
std
pop
inc
aas
push
and
push
popa
sub
loope
mov
fbstp
push
xor
pushf
xlat
cmpsb
dec
xchg
pop
sbb
xchg
push
xchg
lcall
repz
fld1
rolb
push
out
lea
dec
xor
aam
xor
clc
sahf
sub
dec
insl
icebp
cld
gs
mov
dec
loopne
std
xor
dec
cli
jbe
sub
loope
lahf
in
outsb
xchg
xchg
ror
pop
outsl
xor
push
xchg
xchg
pop
pop
xor
sti
fs
jmp
lds
jae
decl
and
test
fisubrl
dec
xchg
loop
push
cmp
mov
cli
cmc
adc
iret
data16
jle
push
pushf
dec
imul
int3
iret
aam
in
inc
sti
outsb
jp
fisubl
mov
adc
xchg
push
push
aam
call
mov
jmp
and
aas
scas
cmp
dec
mov
hlt
ds
sub
movsb
movl
fsubrl
in
nop
sarb
movsb
das
js
xchg
pop
jge
test
fdivrl
dec
push
sahf
aam
shll
add
test
decl
rol
fcom
push
add
cmpl
mov
mov
mov
mov
jmp
mov
jne
pushl
call
notl
addl
orl
andl
and
movl
mov
sbb
or
mov
or
sub
adcl
mov
cmpl
mov
movl
movzwl
jmp
movl
mov
jg
pushl
pushl
push
push
call
add
sub
adc
movzbl
sbb
adcl
and
or
movl
mov
sbb
movl
addl
movl
cmpl
movl
movl
jmp
notl
jne
push
push
call
sub
xor
xor
mov
adc
or
orl
adc
andl
adc
mov
adc
movl
adc
movl
xor
xor
add
movl
movl
mov
add
or
mov
movl
sub
xor
mov
addl
imul
add
imul
or
mov
or
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
push
push
pushl
push
call
or
or
xorl
sbb
xor
xor
subl
mov
lea
addl
push
call
and
mov
mov
jmp
test
mov
jbe
adc
push
lret
enter
fldpi
lds
xor
xchg
xchg
cmp
popf
xor
jmp
pop
push
and
inc
int3
xor
aad
fs
jle
adc
into
xorl
aad
mov
sub
xor
cmc
push
mov
mov
dec
adc
adcl
fwait
mov
or
jne
push
xor
pop
jns
sbb
xchg
leave
mov
shrl
test
pusha
cmp
jbe
js
into
and
repz
mov
sbb
ljmp
movsb
add
dec
insb
flds
into
scas
cltd
xor
data16
pop
loop
notl
popa
mov
push
xor
jecxz
xchg
cli
js
aas
fsubr
sub
cmp
ss
loope
daa
mov
add
test
or
daa
lods
lea
lea
jp
loope
lcall
cmp
xor
mov
mov
mov
mov
lcall
ds
jp
scas
mov
inc
ljmp
xlat
cmpl
cmp
push
or
shlb
cmp
aaa
ud0
scas
movsb
add
push
jl
outsb
jbe
inc
aas
ds
sbb
cmc
pop
int
xor
into
pushf
les
cs
push
jge
rclb
add
cmpsl
cmp
push
mov
cltd
ljmp
lods
xor
hlt
mov
sub
pop
addr16
in
insl
xor
loop
ljmp
or
clc
push
sub
test
es
loop
mov
jo
cmp
inc
sub
divb
jg
pop
push
add
int
mov
outsb
xchg
sahf
mov
jl
mov
dec
xchg
pop
xchg
pop
or
inc
imul
in
popa
pop
aad
in
stc
push
pushf
push
pop
pop
lret
repz
mov
rcll
sub
xchg
mov
dec
xor
repnz
xor
mov
add
add
cmpl
mov
mov
jmp
movl
movl
ja
push
call
add
add
dec
orl
addl
adc
and
cmpl
notl
mov
movl
jmp
movl
je
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
sub
xor
xor
mov
xorl
div
cmpl
movzwl
movl
jmp
mov
jbe
push
push
push
pushl
call
adc
movl
orl
sbb
adcl
xor
mov
mov
sbb
add
xorl
jmp
pop
and
and
cmpsb
js
push
adc
adc
aaa
mov
lahf
stos
out
sub
pop
inc
push
ffreep
call
dec
enter
mov
lret
mov
and
mov
sbb
mov
mov
push
xchg
outsl
lock
stos
push
jbe
xchg
pop
outsl
cmp
lods
icebp
insb
add
out
shlb
outsb
push
loopne
mov
nop
in
and
movsl
push
test
notb
mov
dec
pop
insb
cmp
dec
in
mov
cmp
lcall
fs
pop
sbb
dec
jmp
inc
push
xchg
xor
outsl
pop
xchg
adc
js
xchg
cmc
andb
push
and
jne
jle
movsl
add
out
jbe
add
mov
movsb
mov
or
ss
rolb
xor
push
mov
lcall
xor
mov
sbb
addr16
nop
pop
jmp
sub
cli
loop
adc
call
leave
arpl
pop
subl
sbb
sub
ss
loopne
fistps
sbb
cld
rcl
fwait
mov
mov
pop
loopne
imull
xchg
inc
mov
fdiv
sbbl
enter
xchg
dec
std
xchg
lea
les
push
sub
sbb
into
dec
jg
ffreep
in
data16
and
pop
sbb
mov
in
mov
pop
pop
shlb
roll
dec
int3
stos
pop
andl
pop
adc
adc
pop
movsl
add
push
fs
cli
lods
jmp
dec
xchg
xchg
in
jp
sbb
dec
scas
or
xor
test
add
es
and
scas
pop
pusha
loop
addb
mov
es
jle
in
mov
fists
mov
xchg
lock
mov
push
cmp
push
fadd
test
pushl
jp
add
inc
mov
movl
movl
adc
movl
or
movl
xor
movl
movl
xor
add
sbb
mov
movl
cmpl
movl
not
jmp
not
jbe
push
push
call
xorl
or
subl
add
adc
sub
addl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
call
mov
or
xor
sbbl
neg
mov
or
movl
movl
add
mov
cmpl
movl
mov
jmp
movl
mov
jae
push
call
or
movzwl
or
mov
sbbl
sub
inc
xor
add
sub
xor
mov
add
mov
movzbl
or
and
movzbl
sub
mov
sub
sub
jmp
xor
es
and
jmp
js
bound
mov
enter
enter
lods
in
and
cmp
adc
ds
inc
inc
push
in
ds
pop
pop
std
cmpsl
cmp
pushf
ja
mov
add
add
mov
loopne
ja
pop
test
push
xorl
shrl
pop
stos
push
xor
daa
cmp
cmpl
cld
mov
in
shll
arpl
fsubrp
push
insb
cld
dec
loope
push
mov
mov
push
cltd
mov
testl
outsl
sbb
outsb
sub
rcrb
cmc
int
dec
adc
in
mov
add
mov
js
stc
rorb
enter
sbb
adc
ret
stos
fwait
insb
in
nop
add
adc
iret
sbb
add
ss
sbb
lods
and
inc
mov
pop
sub
ret
ss
mov
shlb
adc
and
cld
or
xchg
push
xor
push
sahf
movsb
cmp
sbb
ret
faddp
fildll
pop
mov
sub
add
imull
ss
js
or
sarb
and
jb
into
mov
test
mov
xchg
out
ret
xor
mov
mov
sbb
xchg
push
imul
mov
or
lcall
pop
dec
ds
sbb
stc
test
pop
dec
inc
and
pop
lds
push
mov
lods
arpl
add
push
xchg
and
or
or
and
into
cmp
in
pop
fcmovb
out
fs
jecxz
mov
mov
pop
xorl
jb
push
movsl
inc
adc
add
mov
fdivl
sbb
adc
add
mov
inc
mov
icebp
js
inc
or
pop
jno
movsb
inc
repnz
dec
cmp
in
ds
ja
std
mov
cwtl
cmp
pop
or
shl
cld
fldenv
lret
cmp
inc
insb
andl
ljmp
and
inc
add
mov
mov
movl
jmp
movl
jle
push
call
and
subl
adcl
movzwl
adc
xor
sub
cmpl
movl
mov
mov
movl
jmp
movl
jb
pushl
push
push
call
sub
and
adc
adc
imul
xor
jmp
nop
push
push
sub
sbb
jle
jle
mov
enter
out
imul
jbe
fmull
pop
mov
push
popa
scas
movsl
sub
jle
mov
adc
dec
add
cmpsl
imul
call
scas
push
jno
bound
fisttpl
stc
jno
add
test
cwtl
hlt
sub
push
test
push
push
cld
cmp
lds
aam
adc
insl
cld
xchg
pusha
loop
test
and
push
pop
inc
xor
adc
mov
loop
sbb
cli
push
mov
add
mov
jle
inc
add
outsb
andb
adc
fstpt
in
fsubr
jg
jle
ror
add
jbe
xchg
cmp
dec
in
pop
pusha
xor
fcoms
dec
ljmp
sbb
sub
js
cmp
sub
iret
fisubrs
xor
js
test
and
fs
roll
enter
loopne
pop
stos
es
dec
xor
sub
insb
ljmp
popa
ret
mov
jmp
mov
jae
out
mov
out
hlt
hlt
scas
sub
gs
add
adc
dec
sbb
xchg
jge
mov
out
daa
xchg
adc
test
in
nop
je
in
dec
xchg
or
jne
inc
aam
cmpsl
xchg
and
xchg
adc
dec
pop
xchg
loopne
cltd
cmp
out
test
adc
mov
and
jecxz
lret
stos
popa
xchg
jns
out
push
into
repnz
loopne
xor
das
jge
outsl
sbb
popa
pop
fndisi(8087
lret
xor
inc
add
pop
sbb
mov
push
shlb
xor
sub
sti
movsb
and
push
push
inc
dec
cli
loopne
addl
stos
pop
lret
mov
fcmovne
adc
cld
int
fnstsw
fisubs
and
sbb
pop
test
mov
inc
sbb
sub
adcl
xor
es
pusha
push
jp
and
pusha
dec
addl
jecxz
outsl
addr16
xchg
andb
mov
jo
incl
testb
adc
test
sbb
inc
add
and
inc
add
notl
not
jmp
movl
je
push
call
movzbl
adc
mov
sbb
sbb
xor
subl
mov
mov
sub
or
or
mov
jmp
loop
out
cmpsl
inc
sbb
inc
mov
nop
js
mov
adc
mov
sbb
je
and
insb
mov
cmp
xchg
test
in
fnstsw
push
into
dec
in
cmp
sti
mov
fs
push
repnz
es
mov
mov
xchg
rorb
div
jbe
inc
fidivrl
mov
jge
lret
pop
push
push
pop
fisubl
mov
lock
cmp
push
or
dec
push
lods
sbb
cmp
xor
or
shlb
sbb
cmpsl
dec
jo
push
mov
sbb
sub
loop
push
stos
dec
push
or
fidivrl
and
push
inc
xchg
scas
and
dec
outsb
and
lods
mov
or
test
out
ds
adc
subb
or
out
clc
sahf
and
incb
lods
xchg
shlb
xor
and
adc
inc
push
mov
adc
mov
mov
and
cmp
inc
aas
jge
xor
movsb
shrl
pop
mov
pop
int
xchg
push
jmp
das
sbb
cmpsb
sub
out
sbb
jnp
adc
arpl
mov
xchg
pop
fwait
sub
setg
cli
lea
lcall
sbb
xchg
popf
sub
int3
mov
xchg
sbb
mov
pop
andb
daa
lret
jl
and
push
mov
into
mov
mov
ss
leave
out
iret
movl
push
scas
push
xchg
mov
repz
ret
dec
aaa
outsl
mov
mov
push
int3
mov
and
pop
mov
mov
in
into
inc
push
inc
jo
shlb
push
xchg
cmp
in
xor
inc
fcompl
into
add
addr16
rcll
lret
into
cmp
xchg
movsl
call
xor
cwtl
dec
push
sbb
push
in
fs
leave
insb
adc
mov
fisubrl
fisubl
mov
xor
xor
or
add
xor
or
mov
sub
sub
mov
adc
lea
andl
and
movzbl
add
mov
mov
sub
add
mov
movl
adc
movl
cmpl
mov
notl
jmp
mov
jg
push
push
call
sbb
or
or
add
inc
sub
subl
movl
andl
movl
mov
cmpl
movl
movzwl
mov
jmp
mov
jge
pushl
pushl
call
add
xor
xor
and
and
movl
sbb
mov
mov
adcl
xor
andl
xor
xorl
mov
call
mov
mov
decl
mov
addl
mov
addl
xor
xor
adcl
mov
subl
call
decl
or
dec
or
add
mov
sbb
mov
xorl
xor
xor
mov
call
cmpl
mov
movl
mov
mov
jmp
mov
ja
pushl
push
push
push
push
call
subl
mov
or
or
and
mov
xor
or
mov
mov
decl
mov
add
mov
xor
andl
xor
subl
mov
cmpl
movl
movl
mov
jmp
mov
movzwl
jne
push
push
pushl
push
pushl
push
call
andl
subl
addl
subl
sbbl
subl
movl
mov
sbb
mov
notl
mov
mov
addl
call
adc
mov
adcl
or
sbb
mov
addl
or
incl
push
sbbl
push
sbbl
push
andl
push
call
mov
cmp
jne
sub
mov
mov
subl
xor
andl
xor
andl
mov
movl
call
sbb
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
inc
adc
cmp
pop
pusha
js
negb
mov
adc
movlps
test
or
jmp
inc
cli
addl
jne
imul
push
xchg
sbb
sub
hlt
pop
repnz
loope
or
add
adc
test
pop
pop
and
mov
or
push
lret
idiv
mov
loopne
dec
rorl
out
dec
out
aad
test
inc
leave
mov
data16
xchg
pop
stc
xlat
insb
jns
notb
movsb
out
push
mov
pop
add
testb
les
xchg
jno
repnz
inc
inc
push
stos
xor
dec
jl
cmp
in
and
jg
push
sbb
mov
movsl
sbb
loop
cmc
inc
ret
jge,pn
cmc
push
pop
ljmp
rcrl
in
loope
dec
pusha
mov
ret
sub
fmuls
add
xor
les
lea
or
and
gs
pop
mov
mov
dec
fs
mov
out
mov
xchg
cwtl
adc
inc
xchg
jle
shr
stos
add
ss
nop
gs
mov
jne
cmpsb
sub
outsb
shlb
and
ret
insw
fxch
mov
test
push
imul
das
jle
mov
stos
pop
in
jg
adc
fldl
xor
adc
mov
ret
fwait
xor
mov
mov
adc
mov
test
add
mov
add
shlb
es
movsb
outsl
cwtl
cld
mov
inc
jb
in
insl
jmp
insb
movsb
test
test
lahf
std
cmp
pop
push
lret
push
dec
mov
xor
loop
or
xchg
je
sbb
test
mov
adcb
ret
cmp
xchg
mov
sbb
das
push
mov
cmp
mov
pop
push
pop
sbb
pusha
push
cmpsl
cmpsb
jg
ds
xor
jecxz
or
mov
popf
xchg
shll
pop
mov
mov
in
shrd
mov
jge
xor
or
cmp
movsb
mov
fmuls
inc
dec
jl
xor
fmuls
fdivr
decl
pushf
inc
add
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
jmp
leave
out
loope
pop
sub
scas
push
jmp
lcall
adc
int
lock
inc
cmpsl
aaa
jns
icebp
loop
das
lock
aad
pusha
mov
dec
test
std
sub
test
fwait
aad
mov
pop
jmp
lret
je
pop
hlt
pop
ss
clc
call
out
sbb
lea
cltd
cli
push
icebp
sbb
jo
fsubs
sub
fs
stc
out
ds
shr
shrl
xchg
sbb
jge
fisubs
xchg
add
jp
dec
cmp
xchg
cmpsb
push
aas
sbb
sbb
shlb
ljmp
scas
pop
outsb
inc
sub
mov
ja
cmp
mov
add
fadd
xchg
mov
adc
xchg
inc
cs
pop
cmp
add
cs
inc
leave
adc
sbb
cmpsl
lahf
xchg
and
mov
into
outsl
jmp
jg
xor
inc
sbb
addl
mov
orb
dec
add
xor
sarb
dec
add
cmp
daa
sbb
jle
xlat
ret
rolb
add
aas
out
inc
jle
dec
aas
mov
push
push
cld
mov
xchg
jb
ds
mov
sti
idivl
add
adc
mov
sbb
xchg
or
pop
out
add
inc
popa
in
cld
lods
repz
das
nop
lret
sub
imul
mov
pop
hlt
aaa
or
mov
adc
mov
mov
sub
hlt
inc
add
fldl
or
add
frstor
sub
cmp
add
imul
shlb
movb
inc
stos
hlt
fisttpll
cld
outsl
jne
mov
pop
lea
mov
or
shrl
int
out
jg
mov
cmovo
and
int3
lds
pop
data16
loope
mov
cs
dec
cld
dec
xchg
out
jae
pinsrw
pop
std
pop
mov
cld
mov
lcall
rorl
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
jmp
mov
popa
sahf
sbb
lods
insb
outsl
push
outsb
insb
dec
test
adc
movlps
imul
xchg
std
push
push
mov
jno
fistpl
dec
in
sub
movsb
xchg
inc
scas
mov
and
push
cmpsb
stos
jo
add
push
insb
inc
inc
inc
dec
out
hlt
cmpsl
mov
jb
push
in
fcomps
lods
jns
sbb
popf
pop
leave
xor
sub
fstpl
and
call
mov
jbe
rorb
and
cmp
shlb
mov
mov
fs
in
mov
jecxz
jae
lock
mov
sub
inc
cwtl
xchg
inc
mov
jnp
cmpsl
push
mov
xchg
in
fimull
and
pop
lods
cmpsb
adc
mov
aam
outsl
or
and
jp
xor
into
pop
fcompl
outsl
add
rcrl
ja
scas
mov
addr16
fldl2t
dec
out
inc
fldt
cmp
and
cmpsl
mov
outsl
in
or
mov
sub
rcrb
push
je
cmp
les
add
push
fisttpll
mov
fs
dec
nop
and
sub
inc
sti
loopne
loope
xlat
xor
in
arpl
mov
mov
inc
loopne
or
imul
jne
mov
scas
fldcw
dec
movsl
adc
in
xchg
pop
pushf
js
pop
pop
xor
or
unpcklps
js
subl
jno
bound
adc
inc
adc
or
push
ret
add
dec
shrb
mov
je
insl
mov
pop
sbb
and
push
jl
inc
pop
cmpsl
int3
add
das
xchg
cmp
addr16
lret
sbb
mov
bnd
std
les
dec
pushf
dec
lret
jl
lret
dec
cmpsb
mov
insb
adc
dec
inc
aam
out
repz
outsl
mov
inc
sbb
es
lods
test
mov
adc
cmpsb
mov
test
pop
sub
xor
je
mov
or
inc
dec
add
cmp
add
addr16
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
jmp
add
xor
and
aas
loope
xor
js
mov
adc
adc
ss
call
in
dec
cmp
sti
inc
sar
xor
sbb
sub
mull
mov
popa
mov
jo
es
push
or
lods
mov
lcall
mov
and
pop
rolb
ret
pop
mulb
pop
clc
insl
dec
leave
sub
jle
shrb
outsb
iret
das
gs
inc
outsl
retw
fld1
gs
fsubs
fcompl
loop
cmp
daa
adc
scas
sub
ja
xchg
int3
inc
push
stos
popa
mov
mov
sub
lret
icebp
or
int3
mov
out
lret
mov
adc
lea
xor
outsb
cli
scas
addr16
les
push
sbbb
lret
pop
push
sbb
outsl
mov
cmpsb
jmp
cmp
rorb
adc
daa
stos
sbb
xchg
mov
ds
mov
sub
jae
shl
ss
lds
mov
dec
sbb
jg
adc
xlat
push
pop
shll
cmp
lea
scas
daa
jmp
cmp
sbb
mov
mov
push
push
sbb
jge
mov
stos
lret
mov
ljmp
mov
fisubl
pop
cmp
out
cmp
jg
call
jne
shl
out
cmpsb
fimuls
cmp
and
movsl
sub
adc
testb
stos
mov
jnp
rcll
fwait
call
repz
mov
ljmp
dec
inc
sub
jg
fmulp
cmp
jne
mov
mov
cmp
xchg
add
mov
cltd
testl
nop
test
insb
mov
sbb
repnz
dec
xor
std
sbb
outsb
cli
aaa
push
push
insl
test
adc
pop
mov
fnstcw
dec
or
push
jae
imul
cs
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
jmp
insl
xor
jb
push
sub
cwtl
jb
mov
adc
adc
dec
lahf
loopne
mov
fidivrl
fsubrl
mov
xchg
push
jne
sbb
pop
mov
sub
pop
fwait
js
lahf
xor
jmp
xchg
xlat
sarl
ret
icebp
leave
mov
cmp
jecxz
ds
inc
inc
dec
xlat
inc
xchg
inc
fsubp
in
mov
mov
shr
dec
fdivl
xor
wbinvd
fldenv
sbb
aas
or
adc
dec
push
repz
movsl
movsl
mov
sarl
sbb
mov
pop
pop
mov
adc
xchg
dec
add
addr16
xchg
or
xchg
popa
movsl
ret
aad
sbb
pop
sub
enter
sbb
xor
es
fmull
adc
jle
jle
ja
jno
pop
nop
popf
jmp
inc
orb
aaa
dec
ja
pop
mov
add
into
filds
xor
push
dec
rcrb
add
dec
mov
das
insl
inc
ficompl
or
sub
std
je
ja
pop
in
mov
scas
mov
mov
mov
mov
or
repz
es
out
pop
imull
xchg
imul
ja
push
mov
stc
and
push
stos
inc
pop
adc
adc
cmp
push
jb
test
add
mov
mov
adc
push
aam
jmp
mov
je
stc
scas
imul
hlt
and
fnsave
shrl
fwait
xchg
in
aas
call
outsb
push
or
mov
loopne
sahf
subb
in
stos
push
mov
in
sub
mov
jl
ja
fyl2xp1
ds
shll
iret
in
cmpsl
pop
pop
loopne
loope
and
aaa
mov
clc
and
lahf
ja
push
adc
int
jns
adc
imul
lods
xor
and
pop
icebp
pop
outsl
jbe,pn
inc
mov
pop
mov
into
out
fisttps
xchg
jae
in
cmpsb
cmp
sti
dec
fcomps
xchg
pop
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
jmp
pop
cli
xchg
ret
xchg
push
pushf
adc
adc
pop
hlt
sbb
ficoms
stos
xor
dec
sahf
mov
add
pop
lea
mov
cmp
orl
fildll
jmp
cli
leave
mov
es
push
dec
dec
xlat
decb
and
cmpl
je
stos
cmpsb
imul
add
inc
xchg
sbb
xchg
adc
sub
jae
or
iret
cltd
roll
leave
xlat
adc
mov
into
aas
jne
dec
mov
push
mov
jle
cli
inc
jl
movsl
pop
cmpsb
lods
popa
andb
rcll
pop
xchg
xchg
mov
dec
mov
scas
xchg
mov
and
cltd
shrb
mov
mov
push
sub
inc
mov
mov
insl
push
subb
stos
aaa
out
js
aam
icebp
pusha
mov
adc
or
lods
xchg
xlat
fcoml
jnp
shlb
mov
inc
push
mov
push
jg
mov
es
sub
inc
fdivrl
and
lret
push
or
mov
rorl
stc
push
mov
cmpb
sbb
fldenv
rolb
push
popa
subb
mov
mov
stos
repnz
and
xor
and
call
inc
test
rorl
adc
fisubrs
mov
ljmp
sahf
test
sub
jp
jge
divb
pop
xor
fwait
mov
mov
cmpsl
rorl
lea
xor
movsb
xchg
dec
cwtl
insl
shld
xchg
or
in
sbb
mov
inc
rcrb
mov
or
imul
cli
out
in
in
pop
rorb
xlat
test
push
jmp
loopne
fstpl
or
cmpsb
nop
adc
inc
sub
xchg
faddp
rcll
jp
push
movsb
inc
pop
inc
sbb
sbb
cltd
imul
jnp
jno
jl
insb
arpl
xlat
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
jmp
stos
cmpl
and
sahf
sarb
jae
push
cwtl
adc
adc
test
enter
push
add
xor
inc
out
lods
nop
inc
or
je
pop
jle
into
sbb
xchg
test
xchg
insb
lods
rclb
in
mov
adc
lea
aad
xor
popf
loopne
mov
dec
fwait
out
sbb
and
push
adc
mov
outsl
add
or
cmpsl
add
inc
sub
mov
mov
mov
aas
or
xchg
cmp
lods
sub
push
rcll
cmp
and
cmc
add
jle
aaa
bound
xchg
xchg
mov
fadd
mov
dec
mov
icebp
mov
in
jge
scas
lahf
cmpsl
mov
push
adc
sbb
scas
pushf
mov
cmp
lock
adc
pop
ret
ret
clc
inc
pop
rcll
jae
in
cmc
aas
push
fcmovu
fnstsw
add
outsl
mov
cmp
iret
out
sbb
divb
lret
loop
jmp
call
xchg
insl
xchg
or
xor
sahf
add
mov
loope
stos
incb
pop
jecxz
imul
push
scas
push
loop
rcl
mov
decl
mov
jmp
inc
ror
clc
in
cmpsb
mov
loopne
testl
xor
xchg
and
mov
cld
xor
add
lcall
mov
push
scas
icebp
push
mov
sbb
sub
and
mov
pop
sbb
lods
icebp
pop
sbb
adc
mov
inc
push
mov
sub
cmp
ret
lea
mov
ja
ret
incl
push
stos
aam
and
fwait
rclb
pop
loopne
jnp
push
insb
push
imul
mov
imul
xorb
test
pop
mov
xchg
cmp
loope
xchg
mov
xor
mov
pop
cmpsl
push
dec
shlb
lret
lock
movsb
jno
jmp
iret
jns
push
and
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
jmp
and
lret
sbbl
js
lret
cmp
rclb
adc
jns
mov
push
repnz
adc
rorl
adc
dec
and
jmp
and
lea
mov
outsl
fs
mov
mov
imul
mov
adc
xchg
filds
cmp
jmp
push
movsl
mov
xor
pop
xor
popa
imul
mov
subl
repnz
add
mov
sub
loopne
lret
icebp
pop
sbb
and
push
push
gs
pusha
mov
hlt
pop
or
add
or
std
dec
add
std
add
ret
in
pop
jmp
cmp
xor
xchg
and
dec
aaa
jb
mov
push
sub
sbb
aas
dec
push
aad
sbb
fimuls
adc
dec
dec
arpl
sahf
sub
pusha
sbb
faddp
sub
inc
out
fcmovb
loop
cmc
xchg
daa
add
add
lret
pop
clc
mov
scas
jno
push
pusha
stos
fistpl
or
std
insl
inc
aam
xor
ds
mov
cmc
push
mov
cmc
shrb
pop
push
out
jl
xor
mov
mov
push
and
inc
in
lods
shrl
repnz
lea
lea
jl
andb
pushf
mov
aaa
out
sbb
in
enter
jle
inc
push
xchg
cmp
adc
pop
js
xchg
mov
mov
push
or
push
fwait
dec
fmul
pop
dec
or
inc
mov
inc
sub
jl
inc
movsb
push
fsubrs
pop
cmp
in
inc
pushf
adc
mov
scas
dec
lock
mov
aas
pop
arpl
out
mov
aas
test
testl
push
inc
jmp
add
imul
sub
rol
mov
push
fs
insb
daa
adc
dec
jns
lods
xor
jno
faddl
mov
mov
adc
pushl
lret
adc
fmuls
and
pushl
imul
fmuls
sbb
decl
decl
decl
mov
and
inc
add
add
pop
lods
mov
and
pop
mov
pop
pop
mov
enter
sub
cmp
addr16
mov
in
mov
pop
dec
push
idivb
jbe
stos
jbe
xor
jge
inc
add
gs
jnp
jmp
cli
xchg
mov
gs
test
mov
bound
jae
ret
pop
icebp
dec
mov
cwtl
lret
pop
iret
xchg
in
out
jo
xchg
pop
fnsave
jp
push
dec
dec
pop
outsb
js
out
iret
add
adc
bnd
jo
into
jl
pop
fs
jb
sbb
inc
add
add
pop
fldcw
fiaddl
test
push
mov
sbb
lret
add
pop
sub
cmp
out
push
mov
jl
test
roll
movsl
pop
add
jns
adc
shlb
nop
sbb
cmpsb
and
mov
faddl
mov
inc
fs
inc
ficoms
int3
add
bound
pop
xchg
jbe
jg
cmp
mov
addr16
fldt
mov
push
xchg
mov
add
pop
pop
mov
cmp
xchg
sub
xor
push
jbe
xchg
les
xchg
pop
push
push
xchg
outsl
mov
sub
je
fcoms
scas
push
icebp
lahf
jbe
push
mov
out
and
jae
fisttpll
repz
shrl
jbe
popf
sahf
fimull
xchg
lds
jl
jecxz
int
jb
lret
dec
clc
jecxz
jno
sbb
repnz
je
adc
test
xor
aas
sub
or
pop
mov
pop
hlt
pusha
popa
cmpb
cld
aaa
pop
aaa
inc
sbb
add
insb
add
mov
imul
push
cmp
roll
push
xchg
repz
mov
scas
ret
das
add
arpl
leave
add
sbb
nop
imul
bound
jno
push
shlw
shll
xchg
sub
cld
cmpsl
shll
out
mov
int
mov
outsb
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
jmp
dec
sbb
sbb
sbb
sbb
scas
sbb
cwtl
jo
jle
mov
adc
mov
loopne
adc
popf
das
add
mov
testl
cltd
arpl
lea
push
fsubrl
test
lcall
ret
push
jnp
adc
xchg
mov
jnp
data16
pop
cmp
mov
xchg
int3
push
mov
mov
leave
pop
mov
pushf
js
cmp
cli
xor
subb
jnp
adcl
dec
sarb
cmp
mov
popa
clc
aam
int3
lea
lcall
xchg
sbb
push
clc
and
cmc
inc
pop
movsl
and
ljmp
cli
and
testl
pushf
pop
sbb
and
cmpsb
sub
xor
movsl
insl
into
test
mov
mov
enter
repnz
adcb
addr16
in
pop
mov
addr16
stc
repz
pop
push
cltd
daa
pop
or
inc
aas
in
dec
cltd
fwait
xor
iret
pop
mov
popa
pop
out
sub
or
je
popa
push
dec
adc
out
add
int
daa
lret
jns
inc
lcall
sbb
fiadds
aad
loop
fimull
nop
ret
and
or
mov
push
and
lret
jae
cmpsl
out
inc
mov
pushf
out
add
dec
shll
popf
pop
lods
testl
daa
mov
mov
jno
dec
xor
leave
mov
xor
enter
dec
xor
mov
push
movsl
mov
sub
inc
into
xor
jno
cmc
mov
fsts
mov
leave
inc
pusha
ljmp
in
stc
les
jge
test
in
inc
add
cwtl
mov
scas
cmp
rorl
outsb
repnz
or
sub
cwtl
cmc
and
dec
add
xchg
fmuls
ret
jnp
popf
andl
ss
cmpsl
jo
cltd
loop
je
imul
or
decl
test
decl
pushl
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
jmp
push
pop
inc
ficomps
clc
les
out
mov
adc
call
pop
push
xchg
into
das
mov
stc
mov
dec
lea
cmp
sti
or
stos
idiv
movsl
into
stc
inc
jp
or
test
or
mov
and
cmpb
fwait
mov
and
scas
imul
mov
and
adc
mov
add
sbb
inc
scas
cld
out
jg
loope
xlat
in
ss
inc
lds
lahf
cli
rcll
jnp
out
loopne
xor
mov
push
push
loope
out
fcmovnb
cmp
sbb
or
jne
push
mov
gs
leave
in
pop
cli
fsubl
push
and
iret
ljmp
xorb
or
repz
mov
jle
cmp
popf
mov
ds
lret
lods
fimuls
enter
in
sti
test
cmp
jle
xor
dec
cs
xchg
xchg
push
rorl
add
daa
sub
dec
xchg
aas
cmpsb
xor
jp
jg
xchg
adc
jg
incb
popa
inc
mov
sub
add
ljmp
jecxz
mov
lcall
xor
xchg
pop
sbb
inc
jno
ret
rol
xchg
push
jne
sub
cmpsb
push
mov
cmp
jp
movsl
xor
mov
sahf
bound
fstps
hlt
add
shl
adc
rolb
jne
sub
adc
imul
lahf
mov
cmpsl
test
pop
mov
jg
outsl
dec
jecxz
lret
pop
inc
ret
in
outsb
inc
and
mov
and
ficompl
stc
sbb
out
pop
imul
pop
test
test
leave
fwait
pop
popf
cli
rcrb
enter
ret
dec
lds
stos
cltd
cmp
fwait
mov
add
ss
lods
loope,pt
int
insl
xor
es
rorb
jle
out
loop
and
cmp
cmpsl
mov
push
jmp
mov
std
mov
bound
mull
adc
sub
lcall
imul
repnz
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
out
add
popa
cmpsl
aad
stos
scas
pop
jb
mov
movlps
orb
inc
mov
xchg
popa
jmp
clc
mov
insl
hlt
jno
cmp
lahf
lods
lahf
insb
andb
popf
fildll
inc
addr16
lret
and
mov
cmp
push
jne
pop
shll
aam
mov
addr16
mov
shlb
lock
xor
pusha
aam
xchg
sti
push
jmp
push
inc
adc
lret
and
mov
and
add
cmp
adc
push
ja
mov
outsb
bound
lcall
mov
mov
sub
insb
leavew
cmp
and
hlt
ret
dec
das
lret
sub
push
pushf
jbe
sub
inc
jge
push
cmp
aam
pop
sahf
xlat
mov
sbb
loopne
in
fwait
mov
and
lahf
movsb
loope
and
outsb
mov
lods
adc
pusha
adc
mov
ds
mov
xor
jl
xor
dec
xor
adcl
add
adc
test
adc
in
imul
in
ljmp
adcb
out
push
adc
xor
stc
in
lds
inc
jmp
pusha
cmp
push
loop
test
lds
lret
jle
leave
jmp
sbb
fwait
cmp
and
adc
lods
testb
push
enter
leave
test
sbb
in
gs
cmp
mov
cmp
push
jp
jp
jle
cmp
mov
adc
popf
jo
push
jmp
jg
outsl
leave
les
pop
les
fists
call
adc
pop
adc
xor
cmc
frstor
cmp
mov
dec
ret
sub
out
ljmp
aad
std
push
cmp
mov
lock
gs
mov
sbb
fwait
jnp
imul
mov
mov
daa
mov
push
mov
mov
mov
xor
xor
mov
call
or
jmp
mov
or
mov
push
push
pusha
dec
mov
enter
and
lds
inc
inc
outsl
inc
ret
cmp
ds
outsb
push
mov
and
push
shld
shrb
and
mov
jecxz
ljmp
in
test
dec
sbb
test
cmp
sti
mov
cmova
xor
in
lcall
arpl
or
cmp
repnz
clc
or
rcrl
mov
jmp
cmp
push
lock
sti
fdivl
jae
mov
push
aaa
adc
jge
fisubs
ja
xchg
ss
mov
in
loope
jae
fstl
arpl
loopne
fistl
jle
jge
fs
aad
daa
jae
nop
jae
imul
dec
jl
addr16
dec
jne
loopne
mov
push
ss
data16
fistpll
xchg
add
mov
lods
fucomp
out
sbb
test
clc
lcall
lahf
aaa
push
sbb
pop
nop
push
jns
js
mov
aaa
mov
out
xchg
test
sbb
rol
jns
bound
jno
out
lret
lcall
mov
adc
rcl
and
les
mov
mov
add
aad
xchg
aaa
hlt
push
cmp
outsb
cmp
mov
in
int
jno
mov
popa
push
ja
in
movsb
and
cmp
mov
fnstsw
cs
pop
jae
dec
xor
sbb
and
cs
icebp
pop
cmp
rolb
cmp
out
jg
push
dec
sub
test
fstp
adc
sbb
in
mov
xor
loop
mov
xchg
adc
loope
mov
add
cmpsl
jecxz
mov
jae
mov
mov
or
mov
or
sti
pop
sub
aas
inc
mov
add
jbe
movsb
push
inc
jo
lods
mov
and
test
movsl
jo
hlt
sbb
ljmp
push
sti
scas
xchg
adc
sbbl
jo
or
add
mov
mov
cmp
jmp
stos
js
pop
and
mov
push
dec
in
jle
js
adc
movlps
loop
aad
jp
and
frstor
sub
stos
pushf
mov
clts
pusha
mov
fwait
jae
or
insl
dec
out
lcall
rorb
sub
adc
mov
push
clc
ror
xor
loope
jae
sbb
sub
pop
mov
lds
jmp
pop
out
fs
pop
sub
adc
xor
int
push
mov
dec
push
daa
xor
in
les
ja
cmpsb
and
cs
jb
mov
insl
xor
pusha
hlt
lcall
mov
or
stos
pop
aam
push
cltd
or
push
push
dec
mov
orb
lahf
mov
xchg
pop
je
add
cmp
mov
in
mov
or
jp
push
movsl
lds
and
xor
xchg
and
leave
into
clc
mov
mov
in
dec
cmp
test
jb
outsb
mov
in
pop
mov
cmp
lcall
sbb
mov
shl
imul
inc
stos
rcl
arpl
pushf
or
dec
dec
xlat
sub
test
pop
imul
rorb
pop
mov
fstl
lahf
sub
mov
inc
ljmp
fldl
sbb
imull
xlat
mov
call
rcrl
sbb
rorb
xchg
pop
sub
fwait
sub
ret
adc
out
lock
push
inc
jae
and
aad
pop
jo
jle
push
xor
mov
push
cmp
dec
mov
addr16
insb
push
mov
scas
mov
adc
in
les
mov
or
push
adc
cmp
cltd
push
inc
mov
push
dec
push
mov
cmp
xchg
add
xchg
adc
out
jno
aam
les
sbb
mul
sti
push
nop
iret
je
mov
mov
movzwl
xor
movzwl
sar
jmp
ds
in
mov
xchg
js
cmc
std
jle
je
adc
movlps
sub
jmp
xchg
insb
pop
push
push
mov
idiv
shll
cmc
jb
xor
sub
pop
jno
mov
adc
pop
filds
pop
jo
les
loope
test
inc
hlt
xchg
xor
jb
jle
in
leave
leave
xchg
mov
data16
add
mov
jns
mov
jnp
push
arpl
jmp
sbb
xchg
movl
andl
fidivs
scas
xor
cmc
dec
ljmp
pop
pop
stos
cwtl
xchg
and
mov
fdivrs
xor
mov
js
pop
sub
sti
cmc
inc
ss
mov
sub
sbb
mov
dec
repnz
aaa
mov
mov
jae
cmp
jp
test
out
pop
pop
mov
pop
mov
mov
ja
pop
or
imul
hlt
cltd
add
push
sbb
sbb
xchg
add
cmpsb
scas
cli
inc
or
mov
sbb
inc
loope
stc
scas
mov
pop
rolb
mulb
enter
gs
lods
add
jb
stos
mov
jge,pt
fsubrp
test
iret
or
ss
sub
cmpsb
std
and
xchg
xchg
sub
add
dec
sbb
inc
mov
or
cltd
scas
jns
cmp
and
repnz
ret
push
jo
dec
xchg
repnz
pop
fs
iret
out
movsb
sub
lock
ret
add
xchg
mov
and
xchg
and
inc
pop
jae
rcll
int
pop
js
je
dec
out
lahf
ss
das
js
dec
orl
pop
daa
imul
pop
sbb
cmp
sub
int3
pop
pop
arpl
lds
push
pusha
outsl
insl
xlat
movsb
pop
inc
into
inc
add
or
ljmp
add
push
sub
repnz
movb
mov
xor
aad
imul
cli
mov
cmpsl
in
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
jmp
jns,pn
xchg
pop
subl
js
out
jle
jo
adc
movlps
push
mov
inc
outsb
pop
mov
or
push
gs
xor
into
inc
or
cmp
arpl
sub
rol
movsb
mov
je
xor
je
jno
cmp
cmp
push
sub
ja
rcl
push
sti
mov
cli
pop
push
mov
lea
fldcw
xor
pop
inc
mov
sbb
or
pop
sahf
or
push
cmp
sbb
arpl
insl
or
mov
fs
out
lods
rcll
inc
xchg
xchg
push
sti
inc
cmp
sarb
mov
shlb
sbb
pop
ret
hlt
push
shll
fnstsw
filds
inc
or
xchg
test
xor
clc
sbb
jns
lret
xchg
call
xchg
sub
outsb
imul
ja
scas
loope
shll
inc
and
pop
xchg
sarb
or
xchg
push
scas
lea
shlb
fdivrl
or
stc
push
psllq
adc
xor
mov
shrb
dec
fmuls
push
outsb
fisubrs
inc
add
enter
cmp
pop
adc
jae
or
mov
mov
cmp
xor
cmc
mov
add
ret
add
lods
stos
test
test
insl
cmp
xchg
arpl
les
bound
das
cmpb
adc
or
int3
cs
push
adc
jmp
cmp
leave
movsb
pop
lods
mov
mov
je
aas
dec
cmp
popa
stos
dec
xchg
jge
xor
push
lret
sub
mov
jo
jns
cmc
xchg
cld
mov
dec
lcall
cmc
sub
pop
loope
dec
or
dec
lds
adc
mov
int3
and
leave
pop
arpl
testb
dec
xor
or
dec
mov
cld
inc
ds
xchg
adc
test
les
adc
push
insb
call
aad
add
imul
and
decl
pushl
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
jmp
arpl
or
push
or
loopne
es
adc
adc
sub
sbb
dec
mov
jno
decb
or
scas
mov
pop
imulb
fstpt
inc
mov
inc
in
or
pop
andl
adcb
pop
mov
jbe,pn
jnp
xchg
stc
ficoms
and
jp
cli
pushf
call
pop
pop
ret
lods
sub
gs
push
test
inc
mov
mov
jns
jle
cmp
mov
mov
mov
std
jmp
cmp
lock
xchg
daa
fwait
mov
and
idivb
adc
js
andl
aam
sbb
lock
loop
or
pop
loop
lcall
iret
movsl
jb
insl
popf
cmp
outsl
fs
adc
ljmp
lods
inc
ficompl
cmp
mov
xchg
push
sbb
mov
mov
lcall
nop
rcrl
lret
mov
test
xor
loope
sub
dec
and
jl
dec
push
mov
xchg
mov
cmp
repnz
loope
mov
into
and
lds
std
lds
adc
nop
mov
imul
push
mov
sbb
outsb
dec
xchg
pop
pop
insb
sbb
or
clc
fxch
test
movsb
inc
xchg
jb
sub
rcr
sbb
shll
ror
dec
cmp
inc
or
arpl
pop
test
repz
xchg
pop
fstps
add
jle
lods
test
cwtl
pop
push
lods
sub
repz
mov
ret
aam
push
xor
xchg
cmp
faddl
lods
mov
into
je
data16
rcr
scas
fnstenv
loope
mov
jb
into
test
add
pop
xor
test
ja
sub
leave
push
xchg
xor
daa
and
jmp
xorl
pop
jle
cld
inc
sub
dec
inc
sti
out
pop
mov
in
in
idivb
sar
in
pop
adc
outsl
negb
cld
movsl
mulb
dec
enter
enter
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
jmp
xorl
jns
sbb
pop
lods
ja
cmpb
movlps
ss
loopne
fistpl
push
mov
mov
les
addb
outsb
int
subl
jbe
xchg
push
pop
insl
sub
ss
int
inc
and
dec
xchg
push
dec
out
shr
xchg
push
mov
fadds
les
lods
add
lahf
inc
cmpsl
dec
mov
notb
ljmp
sub
add
idivb
test
int
ret
add
jno
out
sbb
mov
jbe
mov
movsb
inc
inc
stos
std
fwait
notl
dec
test
pushf
call
mov
repnz
mov
push
in
out
ss
cmp
xor
or
outsb
pusha
ljmp
ret
loopne
inc
sbbl
mov
pop
call
sbb
daa
and
stos
pop
cmpsl
lcall
ds
mov
adc
idivb
gs
shl
xor
cmp
in
aad
inc
lock
fwait
push
inc
inc
xchg
pop
ret
in
sub
mov
inc
out
xchg
dec
popa
xlat
mov
in
xchg
test
sbb
push
popa
sub
cmp
push
inc
xor
in
js
dec
out
scas
loop
lods
fiaddl
xchg
inc
dec
add
aaa
xchg
xchg
mov
dec
cmpsl
scas
ljmp
mov
repnz
mov
mov
jl
ljmp
adc
loop
insl
leave
pusha
loope
lods
jmp
or
inc
or
jle
xchg
sub
mul
in
sbb
sbbl
shrb
mov
lea
or
rorl
pop
cmp
mov
xchg
ret
xor
add
inc
and
imull
stc
dec
xlat
pushf
das
or
push
pop
sbb
nop
mov
movsl
xchg
enter
sbb
dec
cmp
sbb
cmc
push
xor
sti
clc
xchg
mov
daa
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
jmp
adc
fldl
out
cli
pop
push
fdivrl
enter
pop
ja
ljmp
leave
sarb
push
rcrl
inc
rol
gs
gs
and
pop
outsb
mov
add
add
scas
nop
in
sbb
out
adc
push
aad
idiv
mov
xor
push
mov
nop
pushf
fsubr
sbb
stos
pop
fcoms
je
fwait
or
arpl
nop
push
popf
sbb
inc
aaa
iret
out
jb
jb
sub
out
pop
or
jg
mov
jge
xor
imul
push
jg
mov
add
sbb
roll
or
cltd
aaa
inc
inc
gs
and
adc
xor
push
push
sbb
cmpsb
xor
cmp
lea
xchg
loope
cmp
sti
pop
hlt
jno
insb
scas
inc
lcall
pop
es
subl
pop
addb
push
les
or
mov
jnp
pushf
test
push
stos
xor
xchg
shll
je
into
shll
divb
aaa
rol
test
push
jle
lea
cmc
mov
and
cmp
pop
movsl
inc
xchg
in
mov
leave
xchg
xchg
dec
jecxz
lea
mov
push
push
add
push
cmp
pop
or
pop
inc
sbb
or
insl
xchg
enter
mov
xor
sbb
movsl
dec
xchg
mov
loope
out
lds
ljmp
icebp
xchg
push
pop
xor
popa
dec
push
test
jae
or
out
int3
std
cmp
loopne
and
jnp
addr16
loope
js
push
roll
push
or
es
icebp
popa
inc
cli
inc
jno
mov
cmpsl
cmp
clc
test
call
aaa
push
jmp
outsl
arpl
mov
jno
sahf
jnp
pop
mov
sahf
rcrl
jp
jb
jnp
mov
pop
inc
stos
and
adc
pop
outsl
int3
xor
lds
sub
sub
cmp
fnsave
decl
test
decl
pushl
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
jmp
out
in
in
mov
mov
inc
pusha
adc
adc
jns
loope
fsubrl
cwtl
jle
hlt
adcl
adc
sub
mov
stos
imul
xor
inc
fidivl
aad
cltd
stos
mov
mov
jo
inc
adc
cmp
outsl
cwtl
movsb
and
adc
jae
lea
popf
lds
daa
mov
lock
divb
movsb
dec
scas
sub
push
sbb
loope
stc
cmp
push
inc
andl
jne
xor
push
cmp
cmp
xchg
inc
dec
add
xchg
xor
jns
add
test
and
das
mov
out
and
ret
sbb
jns
lea
fcom
ss
mov
out
push
xchg
sti
push
das
gs
sahf
mov
andb
int3
sub
scas
and
or
stc
lock
addr16
add
push
cmpsb
xchg
cli
lock
inc
dec
pop
repnz
lret
mov
pop
aaa
push
jp
xchg
xchg
jns
outsb
sarl
mov
shlb
pop
jb
adc
addr16
pop
repz
outsb
scas
jne
test
pushf
xor
dec
xchg
cmp
mov
mov
jo
in
and
stos
fucom
xor
or
dec
rcl
push
fisubs
inc
das
sbb
arpl
pop
sub
cmp
and
add
xor
jmp
add
mov
push
hlt
enter
test
dec
outsb
pop
lcall
mov
sub
cwtl
pop
insl
or
fwait
ja
adc
pop
les
sbb
cmp
cld
out
cli
sub
dec
xchg
popa
or
pushw
jbe
outsb
fisttpll
mov
call
and
or
or
into
cmp
xlat
mov
imul
and
sub
subb
iret
inc
cltd
inc
ljmp
mov
jnp
mov
xchg
mov
add
incl
add
add
mov
inc
test
add
add
inc
add
add
jbe
add
jnp
bound
ss
andb
adc
movlps
cmpsl
mov
jns
xchg
push
idivl
sti
or
lcall
lea
das
or
cmp
xchg
adc
inc
and
pop
cmpsl
into
enter
mov
aad
jp
fwait
xchg
push
aaa
scas
daa
rcrb
xorb
xchg
inc
cmc
mov
dec
mov
adc
mov
fwait
stos
js
or
cmp
ret
in
sbb
repnz
push
jnp
sbb
xor
lods
xchg
push
jae
faddl
xor
rolb
xchg
lea
pop
push
mov
and
mov
scas
enter
mov
adc
cltd
mov
jae
add
rolb
mov
add
cmp
and
movsb
gs
nop
int
jecxz
xor
xchg
and
xchg
and
cmp
test
or
xchg
insl
ret
push
fcomps
add
or
mov
daa
scas
out
ljmp
roll
insl
ja
push
lret
cmp
call
lods
inc
add
hlt
fiaddl
mov
jo
aad
popf
pusha
lret
cmpsl
rorb
mov
in
add
mov
pop
mov
adc
push
ss
std
out
pop
imul
xchg
jmp
mov
push
cmp
mov
jnp
clc
mov
fwait
ja
jnp
push
pop
adc
shlb
jns
mov
into
in
adc
mov
adc
add
rcl
sub
cli
sub
lock
lock
lret
add
adc
mov
test
imul
rcrl
mov
aas
mov
in
stos
test
stos
and
cmp
mov
dec
fcmovu
jg
ret
repnz
mov
push
jl
push
das
mov
loope
sbb
sarb
inc
fcoms
pop
mov
shlb
and
and
sbb
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
jmp
or
addl
leave
pop
pop
cwtl
cmp
ds
push
push
pop
adc
adc
stos
ss
or
mov
icebp
inc
push
por
pop
es
aas
jecxz
shll
iret
xchg
jl
pop
rorl
and
fistpl
xor
mov
pop
push
dec
popfw
push
push
jbe
mov
mov
pushf
ss
mov
jmp
cmc
sbb
fists
fidivl
push
push
sbb
jno
jbe
xor
mov
mov
and
xor
dec
jnp
cld
lret
int
or
pop
fistpl
jg
pop
xchg
aas
leave
es
aaa
push
jmp
fdivr
mov
in
lock
fwait
push
cwtl
xor
addr16
mov
add
mov
in
ja
adc
rclb
add
mov
stos
dec
mov
xor
ret
inc
mov
sbb
add
mov
aad
cmp
out
mov
jo
pop
ds
sub
repnz
mov
addl
sub
lods
mov
push
xchg
fdivrs
mov
scas
in
inc
push
sub
mov
cmp
fisubs
pop
dec
lret
cs
jne
xchg
cmpsl
lods
ss
loopne
test
mov
stc
incl
or
cltd
addr16
add
pop
int3
inc
movsb
xchg
fdivrl
mov
fwait
dec
push
xchg
adc
aaa
aam
dec
xchg
pushf
nop
shll
mov
mov
int
pop
push
and
adc
testb
pop
push
xor
xchg
add
fistpll
dec
xor
inc
scas
lea
mov
popf
aaa
cli
inc
pop
push
inc
into
mov
fdivrs
jecxz
mov
xor
shr
sar
ret
cmc
rsm
add
push
mov
adc
adc
xchg
int3
add
sub
out
jg
xor
push
loope
xor
jb
nop
and
lret
stc
add
scas
cmp
adc
lods
dec
lcall
in
cwtl
shrb
mov
xchg
incl
lods
jl
dec
push
mov
mov
sub
lret
pusha
lahf
daa
mov
inc
fwait
dec
hlt
xor
fdivrp
push
jmp
hlt
cmp
mov
mov
adc
dec
cmpsl
lea
xor
out
mov
mov
movsb
dec
xor
shr
stos
lret
cmpsl
ficompl
sbb
sub
pop
js
sub
dec
xchg
and
adc
cmp
sub
call
and
adc
cli
sbb
sub
loop
rolb
clc
mov
popf
hlt
aaa
test
cmp
enter
push
adc
pop
or
int
and
xor
jno
incb
leave
jo
loop
hlt
cmpsb
push
cltd
iret
rcr
jge
or
xchg
dec
cmp
ret
movsl
out
fwait
xor
stos
stc
push
ljmp
pusha
inc
or
scas
lcall
or
movl
jne
mov
xor
mov
sbb
xor
movzbl
adc
div
xor
xor
sub
mov
mov
movzwl
sub
mov
xorl
div
mov
mov
movl
jmp
sbb
mov
xor
mov
mov
add
mov
adcl
shr
movl
rcr
shr
movl
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
movl
cmpl
je
add
jmp
fwait
mov
xchg
sbb
push
push
push
adc
adc
movsb
fxch
mov
inc
mov
insb
nop
dec
test
adc
xchg
aaa
xchg
popa
sub
out
idivl
jmp
push
jbe
adc
fs
xchg
mov
pop
fisubs
int3
lea
and
mov
jl
fnstenv
xlat
mov
dec
xchg
add
lcall
lods
int
test
or
loope,pt
xchg
cmpsl
out
xor
ss
add
mov
es
imul
xchg
add
lods
adc
or
call
jne
jae
pop
sbb
and
in
jmp
jg,pn
icebp
shll
or
adc
push
jbe,pn
fisubl
cli
jecxz
fcmovnb
mov
test
rcrb
cmp
cmc
mov
cld
leave
adc
add
push
in
add
xlat
cwtl
mov
mov
icebp
mov
into
mov
outsl
mov
mov
clc
jecxz
jb
data16
popa
mov
int3
sbb
in
popf
cmp
out
push
daa
adc
in
imul
out
or
jle
push
pop
stc
rol
enter
ror
jle
int3
jle
push
stos
sub
pop
stos
jns
push
push
and
pop
daa
xlat
xchg
push
stos
pop
sbb
lea
jge
scas
lahf
or
movb
push
and
push
sub
lds
push
lds
xchg
cli
push
mov
and
int3
arpl
jne
sub
mov
push
push
add
pushf
pusha
mov
rcll
dec
xor
lret
cld
or
jns
or
adc
mov
gs
sbb
mov
xor
or
test
and
adc
iret
xchg
in
xor
std
test
loop
icebp
fwait
mov
jb
daa
or
jno
jnp
insb
mov
and
and
loop
or
jb
in
adc
or
in
xor
iret
mov
and
xlat
xor
insl
mov
mov
or
ret
stos
push
or
gs
ret
xchg
stos
inc
dec
repnz
repz
inc
adc
xor
mov
pop
add
loop
ds
dec
adc
aad
sarl
aam
inc
mov
push
movsl
jg
imull
out
jne
inc
xchg
call
pop
or
mov
mov
iret
push
pop
xor
sbb
push
sbb
fwait
push
stos
cmp
hlt
int3
mov
mov
addr16
mov
and
cld
cmpsb
bnd
lret
fwait
push
lea
rorl
dec
mov
push
pop
stos
cli
mov
jge
pop
imul
cmpsl
enter
inc
call
push
loope
mov
sbb
pop
xor
js
inc
aad
xor
sub
pop
cwtl
imul
and
dec
cwtl
cmp
daa
xchg
adc
mov
mov
cltd
pop
push
jge
mov
fstps
daa
pop
fisubrs
mov
adc
jno
inc
jl
insb
push
cmp
jecxz
sbb
scas
shrb
popa
stc
jle
je
mov
lods
loope
sbb
push
rorb
dec
orb
lock
in
pop
mov
mov
not
mov
pop
movl
pop
pop
leave
ret
movl
cmp
jae
movl
cmp
jae
sbbl
shld
shl
ret
mov
orl
xor
adcl
and
shl
ret
xor
xor
ret
