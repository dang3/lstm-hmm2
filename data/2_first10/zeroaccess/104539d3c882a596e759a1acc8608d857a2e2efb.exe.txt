push
mov
sub
mov
adc
push
adc
push
movl
cmpl
je
cmpl
jg
jmp
push
push
pushl
pushl
push
pushl
call
mov
dec
mov
jmp
push
mov
sbbl
xor
andl
mov
mov
sbb
mov
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
sbb
mov
sub
mov
mov
inc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
xor
movl
orl
mov
xor
sub
add
and
mov
mov
mov
xor
mov
mov
andl
xor
xor
inc
mov
cmpl
ja
jmp
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
push
pop
orl
sub
and
add
subl
movl
adcl
mov
xor
xor
or
jmp
scas
cltd
and
add
cwtl
int
mov
xor
pop
addl
xor
je,pn
jo
into
ja
jae
dec
aam
clc
imul
insb
pusha
into
pop
push
cmp
dec
jle
mov
sub
push
pop
in
inc
int3
ret
in
xchg
sub
xchg
xor
pusha
mov
aad
insb
fcoml
and
aaa
jb
shrb
lock
xor
and
cmpl
fwait
dec
or
jecxz
imul
xor
push
or
lods
push
shll
cld
imul
jno
add
mov
in
pop
rol
xchg
mov
les
mov
add
cltd
mov
xor
lcall
mov
push
xchg
iret
xchg
mov
movsb
cld
and
cmp
shll
adc
dec
shlb
mov
test
es
mov
dec
or
jge
call
sbb
test
mov
push
rcll
adc
lock
cs
and
push
cmp
int3
cmp
jno
lahf
stos
adc
sbb
lock
add
or
popa
sbb
mov
pusha
cmp
in
pop
aam
pop
xchg
enter
push
mov
mov
pop
inc
cmc
aad
and
xorl
cmp
jo
inc
xchg
enter
daa
out
sub
push
push
sbb
cli
add
adc
testl
push
adc
and
mov
inc
mov
mov
inc
xor
clc
int
xchg
outsb
mov
mov
sub
out
push
std
adc
mov
ret
clc
call
jg
mov
pop
inc
test
andl
cld
je
or
stos
mov
xchg
ss
ret
mov
mov
mov
jno
mov
jno
inc
mov
out
scas
dec
stos
jae
mov
mov
pushf
inc
mov
sbb
int3
push
push
fldl
dec
lea
sub
xor
daa
jecxz,pt
mov
sub
sub
push
jmp
mov
ljmp
jne
push
andl
mov
xor
ja
aam
out
mov
pop
shll
cld
sbb
mov
andps
ds
gs
jno
cmpsb
pusha
inc
mov
decb
out
push
jno
rorl
je
lds
movsl
leave
pushf
cwtl
addr16
sbb
adc
push
mov
mov
or
add
push
mov
pop
int
in
fsubs
dec
ss
mov
scas
xchg
push
mov
daa
inc
fstpt
jecxz
mov
sub
imul
inc
in
mov
xchg
scas
xchg
fsubl
xchg
aas
or
orl
imul
lret
jb
push
pushf
jle
inc
shll
push
pop
sub
push
or
addr16
inc
loopne
test
mov
push
push
mov
xor
xchg
pop
je
scas
cmpsb
fwait
jns
xor
sbb
sub
inc
ljmp
cmp
mov
jecxz
stos
sub
inc
out
mov
mov
cmp
mov
cmpsl
jg
jns
xor
mov
jmp
ja
outsb
cmp
or
jg,pn
dec
xchg
jg
add
jg
insl
and
mov
push
loopne
aad
cld
adc
dec
popf
and
es
sub
sbb
mov
pop
outsb
mov
addl
mov
lock
stos
adc
shll
hlt
inc
xlat
sbb
mov
mov
xor
enter
jl
mov
test
mov
ljmp
add
daa
xchg
pushf
hlt
out
lahf
inc
lcall
cli
popa
inc
pop
dec
fidivs
push
and
add
cmp
outsl
dec
int
adc
rcrl
bndldx
jmp
vmovapd
pop
inc
outsb
or
js
sbb
mov
lcall
mov
mov
ret
or
and
int
int3
lock
inc
xor
cltd
jmp
iret
adc
inc
and
push
lcall
ljmp
push
arpl
push
dec
jl
dec
std
inc
and
lahf
mov
dec
or
add
mov
or
jmp
std
insl
shlb
stc
lds
lahf
jg
stc
sbb
pop
std
add
add
push
scas
gs
aas
pushw
je
ret
cmp
mov
data16
push
enter
sti
push
and
out
inc
jmp
sbbl
mov
orl
out
fwait
idivb
stos
addb
movsl
fisubl
jg
jb
pop
loopne
mov
push
xchg
sbb
fs
add
sub
aas
addb
repz
fldl
fimuls
xchg
sub
cmc
dec
fldenv
push
lret
push
sbb
jp
adc
and
test
dec
std
xchg
arpl
mov
xchg
inc
jb
mov
jecxz
cli
andb
lcall
adc
jo
daa
xchg
imul
xor
jbe
dec
push
addl
lcall
add
jne
ret
jae
scas
mov
pushf
int
cmp
shll
adc
inc
push
pop
std
push
out
mov
insb
fstpl
inc
xlat
inc
mov
add
mov
mov
jns
hlt
out
cwtl
lret
mov
and
pop
cltd
or
jecxz
sbb
ljmp
pushf
mov
les
xor
xor
roll
repz
dec
xchg
mov
sbb
cmp
into
and
or
push
lea
roll
xchg
jno
cld
push
lret
shll
xor
sub
jno
cld
push
gs
gs
icebp
pop
iret
mov
out
rcpps
fidivrs
sti
fcoms
dec
fldl
jnp
xchg
shlb
lock
jno
out
nop
jno
test
sti
arpl
fcmovb
subl
mov
pop
mov
outsb
adc
in
adcl
push
icebp
test
sti
cmp
mov
out
or
mov
inc
inc
repz
jp
std
lea
sub
mov
mov
nop
lods
das
xor
add
rcll
and
mov
pop
adc
fcmove
aad
inc
addb
mov
add
repnz
scas
cmpsb
enter
scas
fisubrl
leave
ret
mov
dec
jb
cwtl
jb
jbe
sti
cmp
sbb
mov
pop
mov
sbb
mov
shlb
aad
mov
jl
mov
and
pop
outsb
std
push
mov
decb
xor
les
xor
jno
hlt
cmovle
in
xchg
push
push
pop
xor
adcb
sbbb
int3
xchg
adc
aas
jmp
test
hlt
pop
je
mov
fwait
into
xchg
xchg
fdiv
mov
add
arpl
and
dec
push
in
fbstp
sar
adc
mov
jp
stos
lahf
and
adcb
in
enterw
stos
aaa
shlb
ljmp
int3
xchg
add
xor
mov
add
lods
xchg
divl
mov
imul
js
or
call
xchg
repz
repz
cmc
inc
xchg
xchg
mov
and
xchg
insb
rorl
or
or
es
or
mov
ret
cmp
adc
xor
in
clc
mov
les
cwtl
add
inc
push
pusha
insb
incl
push
xchg
aaa
xor
jl
pop
and
hlt
loope
push
mov
ret
incb
and
cltd
sub
in
sbb
push
andl
dec
adc
or
ret
testl
stc
es
mov
das
and
and
xchg
cmc
addr16
dec
ficomps
int
fnstenv
pop
mov
movsb
push
cmp
xor
fwait
xorb
dec
push
inc
push
sbb
mov
fisubrl
cmp
xlat
jbe
hlt
and
jne
mov
push
push
mov
mov
int3
or
mov
fimull
shr
xchg
dec
or
out
jecxz
push
repnz
daa
ret
sbb
add
insl
xchg
xchg
xchg
mov
insl
fidivrl
movsl
cmp
ror
cld
testl
pop
out
and
sub
mov
adc
push
sub
into
mov
jg
cmp
inc
push
into
pop
pusha
pop
rclb
inc
rcrb
pusha
or
push
pop
outsl
mov
mov
lods
jae
push
push
mov
mov
test
inc
in
lret
mov
or
test
ss
outsb
xchg
sarb
sub
xchg
xchg
add
pop
hlt
js
mov
into
sbb
aad
movsl
sub
jbe
jae
adc
jae
push
jp
xor
jns
dec
mov
sahf
mov
jmp
dec
mov
xchg
sub
lds
sub
stos
pop
loope
lds
jae
cld
sbb
sub
xor
sub
lret
mov
in
stos
adc
imul
mov
nop
dec
enter
xchg
dec
and
pop
pop
pushf
dec
scas
pop
dec
and
sbb
jmp
maxps
jp
cltd
dec
xor
cmc
dec
mov
cmpsb
sbb
sti
out
jmp
adc
inc
imul
shll
mov
mov
ret
lret
movsl
mov
ret
aaa
lock
lds
push
xchg
aas
fincstp
repnz
js
out
push
sub
pop
mov
xor
push
mov
cmpsb
mov
popa
jle
adc
dec
aam
loop
js
pop
ds
pop
les
hlt
cmp
push
adc
mov
lcall
jge
fstpl
cltd
sbb
repnz
or
jge
pop
cs
mov
into
xor
pop
insl
mov
lcall
pop
sbb
fisubs
hlt
lds
xchg
clc
arpl
pushf
imul
out
dec
cli
sub
es
and
add
into
or
mov
rolb
pusha
mov
adc
sahf
inc
clc
stos
movsl
push
cmp
pop
ds
jne
pop
leave
inc
insl
dec
test
inc
out
xchg
add
lods
cmp
adc
cmp
aaa
and
or
sub
sarl
mov
movsl
out
or
ss
and
mov
sbb
xor
shlb
push
int3
les
fidivs
out
xchg
mov
add
test
cmp
dec
adc
iret
int
imul
cmp
movsl
sub
mov
aas
in
ret
aaa
cs
mov
cmp
lea
jg
ret
insl
sbb
fimull
push
lock
sbb
mov
pop
add
decb
pop
insb
jp
movsb
or
adc
sahf
push
push
lcall
and
sbb
mov
inc
pop
dec
lods
test
fwait
cmpsl
pop
imul
adc
xor
lea
xchg
inc
aad
sahf
ds
sbb
xchg
into
mov
test
xchg
imul
ljmp
and
jmp
mov
cmc
js
inc
movsb
add
cli
add
xor
dec
mov
call
xchg
sti
jnp
jge
or
sahf
iret
push
jno
adc
or
inc
gs
incb
xlat
ret
shlb
dec
mov
mov
stos
or
pop
mov
adc
or
push
insl
dec
shll
fwait
inc
ficomps
pop
clc
cmp
pop
cmp
add
mov
cmp
inc
movsl
mov
add
adc
icebp
into
xchg
inc
xchg
shlb
xor
js
les
mov
sub
cmp
rep
jle
ljmp
cmpl
insl
sub
idivl
mov
icebp
es
out
cwtl
sub
aas
test
or
jecxz
out
hlt
jae
push
jmp
pop
xor
mov
movsb
xor
sbb
mov
outsl
xchg
loopne
std
es
int
inc
fcmove
ret
sbb
cmp
test
sub
out
and
insl
repnz
xor
fcmovb
or
mov
sub
lods
mov
insb
xor
fs
aaa
js
adc
ljmp
test
arpl
lods
sub
jmp
mov
adc
insb
jmp
enter
lahf
mov
jo
mov
xchg
mov
fwait
jl
pusha
or
in
sbb
in
and
es
sbb
testl
and
mov
cmpsl
dec
and
popa
or
adc
and
aaa
mov
add
testl
adc
inc
cmpsl
inc
subps
mov
add
sub
dec
xor
mov
push
sbb
sahf
pop
jbe
push
sbb
lock
repz
into
mov
sar
mov
fidivs
jo
or
xchg
add
es
data16
xchg
js
pop
lret
fistpl
mov
fsubs
mov
inc
inc
adc
jno
push
int3
adc
jo
push
cmp
sahf
pop
loope
jne
outsb
cmp
rorl
shlb
bound
mov
dec
les
push
mov
jno
jae
gs
les
cli
cmp
mov
mov
xor
mov
sbb
xchg
mov
add
mov
or
sti
enter
out
jecxz
add
loope
and
jge
pop
insb
lcall
xor
scas
fistps
or
in
nop
shrb
loopne,pn
jno
jae
out
jmp
lret
push
shlb
outsl
jbe
add
pop
dec
pop
sbb
xchg
aaa
int3
imul
scas
psubb
in
pop
mov
pop
out
and
push
scas
mov
arpl
pop
in
outsb
pop
inc
out
cmp
jns
aas
fwait
adc
mov
mov
add
inc
mov
cmp
jmp
shl
inc
mov
fs
sub
test
fmul
mov
nop
test
xor
ret
mov
aad
cmp
pop
int
dec
cli
adc
jge
fwait
and
fdiv
pop
dec
shlb
out
sub
pop
adc
stc
les
inc
mov
inc
loope
mov
aas
popf
adc
pusha
imul
cs
lahf
mov
rorb
push
xor
adc
xchg
insb
xor
out
cmp
fs
dec
xor
dec
jl
sbb
ss
dec
sbb
mov
xchg
push
mov
popf
popf
xlat
mov
je
jo
or
add
dec
push
sbb
or
icebp
jp
add
fs
pop
jg
test
and
and
xor
shlb
fcmovbe
jo
add
push
dec
mov
add
sub
imul
cmp
rorb
xor
cs
jnp
adc
fs
call
dec
push
sbb
mov
cmp
ja
stos
and
arpl
sbb
pop
fimuls
inc
imul
and
lods
pop
adcl
in
dec
sbb
push
int
cmp
push
scas
lea
mov
add
xor
push
xchg
dec
xchg
inc
out
std
xor
rolb
pop
mov
pushf
cmc
xchg
mov
push
sbb
in
mov
imul
mov
xchg
movsb
and
cld
loope
inc
stc
movsl
push
popa
and
inc
and
pop
sbb
cmp
cmp
xchg
mov
ret
mov
adc
loop
mov
sub
cmp
int
lods
jno
lret
mov
or
xchg
mov
pop
loope
hlt
lcall
repnz
jno
xor
sbb
popf
and
mov
nop
sub
mov
push
sub
fwait
sub
fwait
sar
cmpsb
mov
sub
sbb
mov
out
ljmp
pop
dec
xchg
and
sbb
mov
movsb
cmp
mov
mov
xor
jl
fisubl
add
scas
push
fstps
rol
sbb
and
cmp
add
popf
rorl
push
aad
repz
inc
lods
mov
out
fsubrs
mov
cmp
int
mov
mov
pop
mov
fiadds
clc
cmpb
jae
or
or
and
insb
std
cmp
xor
cmp
dec
mov
or
xchg
rorb
inc
xchg
test
mov
sub
inc
lods
push
ss
push
jle
aam
sbb
into
push
push
mov
cmpsb
mov
add
xchg
icebp
imul
pop
sub
mov
int
jge
int3
in
pop
mov
jg
adc
cmp
mov
mov
gs
loop
aad
mov
push
sub
jmp
sbb
mov
movb
addr16
jp
cs
xor
pop
ja
pop
mov
xor
sub
pop
or
pushf
mov
pop
lcall
push
dec
scas
sbb
xor
mov
or
int3
std
in
divb
and
or
cmp
gs
or
jmp
ret
inc
mov
imulb
idivb
scas
pop
pop
out
sahf
dec
xchg
sbb
daa
je
scas
popf
mov
cmp
loope
mov
out
cmc
inc
outsb
sbb
movsl
pop
jle
fwait
stc
sub
adc
add
cmp
loopne
sti
mov
fdivrl
push
nop
dec
loope
into
es
insl
lea
addb
popf
xor
xor
into
into
push
jge
xor
mov
adc
pushf
push
push
xor
fists
dec
sub
cltd
rcll
add
xchg
mov
adc
sbb
gs
in
mov
insb
dec
pop
pop
roll
cmp
fstpl
enter
repnz
into
sub
xor
fimull
dec
stos
int
ljmp
xchg
gs
insl
ja
arpl
es
or
ret
push
mov
jne
sub
sbbb
cmpsl
mov
pop
fst
in
mov
inc
daa
lea
cwtl
xor
mov
cmpsl
gs
add
mov
incl
push
push
pop
fcmovbe
lret
iret
shrl
das
add
xchg
inc
movsb
jnp
mov
movsl
shl
pusha
sahf
inc
jns
iret
scas
xchg
jnp
push
movsl
mov
das
cmp
and
addr16
add
pushf
cltd
incl
add
sbb
das
in
add
repnz
sti
pop
rorb
jle
mov
ljmp
loopne
mov
push
adc
out
dec
add
addr16
cmp
mov
stc
push
aad
jecxz
push
xor
outsb
mov
xlat
popl
fsubr
fwait
cwtl
mov
aaa
jae
mov
pushf
in
mov
jmp
or
xchg
adc
ficompl
lea
test
xor
outsl
mov
inc
xchg
push
lock
adc
xor
jg
cmp
pop
push
or
inc
mov
cmc
pop
lret
mov
sti
int3
test
push
fdivrs
scas
jnp
pop
enter
ss
push
lahf
jae
xchg
psubusb
les
insb
std
leave
mov
insb
das
lea
lds
xchg
pop
ljmp
mov
outsb
stc
int3
pop
movb
rolb
sbb
ret
repnz
in
adcb
mov
add
add
push
arpl
fisttpll
lock
rclb
push
lods
arpl
xchg
imul
xchg
pop
out
or
mov
std
cld
inc
xlat
add
sub
insl
and
xor
sahf
mov
pushf
test
sub
jl
push
mov
sbb
ds
insb
jb
jp
sbbl
in
push
push
mov
xchg
jo
cs
lcall
xchg
adc
add
dec
add
les
sbb
xchg
push
rcrb
cmp
push
mov
int3
arpl
enter
dec
adcb
aas
mov
insb
aad
push
jns
mov
repnz
and
addl
ficompl
push
sbbl
lahf
test
dec
stos
sbb
lret
cld
insl
lret
xor
cmpsl
aas
icebp
xor
sbb
pop
pop
mov
add
sbb
popa
loop
and
rcr
mov
inc
sarl
imul
sbb
fnsave
mov
inc
gs
scas
divl
fidivrs
cmp
into
add
add
loope
aad
mov
dec
pop
popa
fisttpl
les
stos
in
lods
negl
jns
rep
cmc
dec
ds
packssdw
lahf
aaa
nop
cmp
or
add
xorl
pop
movsl
test
ret
adc
loope
cs
das
lods
push
or
push
scas
and
outsl
sbb
imul
push
out
adc
inc
sbbl
and
inc
xor
cmp
xor
sbb
push
jmp
xor
sti
fs
ja
jp
adc
jl
dec
rol
pop
and
rcll
imul
ja
sbb
addr16
mov
or
mulb
dec
fs
mov
sub
push
dec
cltd
sbb
fidivrl
pop
mov
pop
sub
inc
movsb
fistpl
lods
data16
sbb
lahf
cmp
arpl
lret
stc
das
add
adc
js
and
cmpsl
test
and
cmp
add
rcll
inc
xchg
xor
js
loopne
fldcw
in
add
int3
lods
jae
inc
xor
aam
sbb
mov
jo
jo
sbb
rolb
add
xchg
aam
sub
sbb
test
sahf
sub
loopne
pop
cmp
cli
sub
mov
mov
pushf
xchg
cltd
imul
rclb
mov
and
cmpsb
sub
stos
mov
lds
mov
in
test
adc
and
aas
xlat
cmpsb
movsb
int
and
test
adc
ja
call
jae
shrb
shlb
sti
loope
add
dec
lods
push
test
sar
sub
into
jno
imul
jle
out
ljmp
out
and
mov
sub
imul
xchg
cmp
xor
adc
cwtl
xchg
mov
into
insl
push
lods
insb
mov
outsb
push
out
incb
gs
sbb
mov
inc
push
in
xchg
es
sub
nopl
mov
mov
xor
inc
fs
push
sub
fiaddl
inc
imul
jmp
pop
imul
ret
loope
push
add
lods
inc
dec
xor
jnp
cmc
in
cmp
cmp
pop
popf
adc
ret
push
aas
xor
outsl
mov
adc
pop
xchg
mov
dec
inc
pop
aam
cmp
dec
dec
sbb
test
push
xchg
mov
mov
fcomps
in
leave
into
or
lret
inc
pop
cltd
mov
fdivl
cmpsl
ficompl
jae
push
loop
cmp
out
or
aam
test
insl
jb
xchg
shrl
test
cmp
or
pop
pop
inc
dec
arpl
aaa
cmp
push
gs
add
cmp
aas
xor
inc
shl
jb
xchg
mov
cmpsl
movsb
adc
loopne
jae
ja
and
repz
mov
scas
loope
inc
cmc
push
in
addr16
out
mov
in
push
out
dec
add
jo
cmp
inc
mov
xor
sbb
mov
sti
in
adc
inc
mov
imul
xor
arpl
pop
fs
mov
inc
cmp
mov
gs
xor
scas
pop
xlat
stos
dec
es
mov
mov
jg,pt
mov
sub
fdivrs
fbld
or
xchg
mov
dec
and
loopne
nop
cmp
cmpsb
or
adc
lret
daa
sbb
jle
clc
pop
ret
and
mov
jae
dec
push
and
ror
in
pop
outsl
enter
jns
mov
or
lret
xlat
lahf
ret
out
push
jnp
mov
int3
lods
adc
out
push
iret
fildl
sub
jl
ret
pop
data16
out
popf
roll
divl
xlat
dec
imul
xor
adcb
ja
gs
dec
jge
call
call
sub
mov
incb
sahf
jle
aad
scas
sub
and
add
popf
stc
cld
jns
outsb
stc
inc
popl
inc
jb
int3
mov
jle
push
push
xor
sub
or
mov
cltd
cwtl
mov
ds
bnd
mov
fldt
enter
xchg
in
jle
scas
mov
dec
sub
add
call
pop
dec
jnp
inc
cwtl
imul
push
mov
add
sbb
mov
data16
or
mov
or
add
testb
and
mov
stc
jg
aas
lods
data16
xchg
lods
ss
into
ret
ret
clc
push
hlt
xchg
sub
xchg
pop
cld
mov
std
xor
mov
inc
mov
insb
push
adc
les
push
imul
adc
jmp
cli
push
repnz
bound
xor
ficoml
jbe
outsb
shll
xchg
and
inc
cmp
ds
repz
dec
sbb
cmpb
bnd
lds
adc
scas
xor
lds
lds
dec
mov
mov
cs
jp
daa
push
popf
or
shll
aas
jnp
mov
mov
fnsave
mov
cmc
cs
lods
mov
pop
adc
sub
add
imul
cmp
jmp
cs
sahf
es
inc
pop
leave
ficomps
xor
fs
hlt
insl
jns
ret
sbb
sbb
jne
jns
or
cwtl
test
fwait
aad
loopne
popf
cmp
bswap
in
mov
mov
xor
cmp
into
shl
jb
xchg
mov
sub
mov
jno
dec
mov
xchg
pop
iret
xchg
gs
pop
cs
mov
insb
add
xor
nop
xchg
imul
iret
pusha
xchg
into
sub
xchg
mov
adc
mov
fwait
repz
dec
aas
shrb
xor
test
add
enter
add
xlat
and
push
sub
cltd
loopne
fildl
in
xchg
addr16
subl
push
in
fdivs
push
sahf
dec
add
lret
mov
aad
or
je
push
jo
adc
cld
mov
sbb
es
daa
ljmp
pop
out
mov
mov
pop
aas
fsubrs
fidivrs
fimuls
push
jp
xor
push
test
xchg
mov
mov
pop
sub
fisttps
jl
loope
leave
sbb
push
push
nop
jbe
int3
scas
repnz
dec
xor
pop
pop
xchg
enter
les
pop
std
mov
movsb
outsb
std
mov
adc
pop
adc
jbe
rcl
push
sbb
int
sbb
js
xchg
xor
pop
sub
ss
xor
sub
push
ror
xor
jle
jg
js
fwait
leave
xchg
jp
fwait
dec
shlb
shl
inc
push
jmp
test
cmp
mov
adc
sub
stos
pop
cmpsb
sbb
mov
jg
data16
js
push
xor
dec
mov
imul
out
jbe,pn
sbb
test
test
movsl
int3
je
fstpt
shrb
or
sti
loope
ljmp
inc
int3
lret
add
mov
call
imul
mov
and
pop
add
repnz
and
mov
xchg
jge
iret
test
pop
outsl
mov
lods
mov
push
add
mov
add
sti
fistl
pop
cmpl
mov
xchg
lock
or
loop
push
pusha
fbld
lods
lahf
jle
push
mov
adc
lock
mov
dec
aas
sub
and
fdivp
push
xor
fwait
jae
pop
push
add
lahf
push
and
sti
mov
xlat
adc
scas
lret
es
call
jne
cmp
notl
jmp
gs
sar
sbb
popf
jle
mov
ds
mov
loopne
hlt
movsb
testl
adc
rcrb
cwtl
mov
or
nop
loopne
push
dec
dec
cmc
test
lock
scas
fidivs
mov
js
fstpl
push
decb
loopne
jg
adc
cmp
rolb
sub
pop
sub
popa
xor
add
out
pop
xor
or
cli
inc
xlat
movsl
xor
and
cmp
cmpsb
rol
xchg
xchg
imul
add
les
aad
mov
and
push
inc
data16
jg
testb
rcrl
adc
lods
lea
mov
and
cwtl
jmp
sbb
xchg
mov
orl
xchg
lds
je
loop
push
mov
das
pop
shlb
xor
pop
fs
push
movsb
xlat
inc
stc
xor
sarb
xor
loope
iret
test
cmp
sbb
jae
outsl
out
lret
push
ljmp
jnp
pop
bnd
ret
mov
add
xlat
add
jle
ja
sti
sbb
out
or
xchg
fneni(8087
sub
push
dec
clc
lret
subb
aam
or
push
push
cld
push
sub
pop
pop
inc
iret
inc
sbb
push
fstps
or
mov
mov
push
adc
ret
adc
ret
in
out
fcmovb
inc
notb
div
out
xorb
ja
mov
cmpsb
lds
ret
stc
jb
cmc
stc
pop
add
popa
mov
loopne
or
mov
xchg
push
rorb
jg
cmp
push
and
pop
dec
sbbl
js
insl
jge
sbb
and
push
int3
lret
insb
mov
lock
leave
inc
mov
sub
imulb
xchg
lods
ret
or
push
and
aam
js
test
dec
jge
icebp
lock
xor
imul
xor
out
sub
lods
sub
andl
and
jbe
outsl
sbb
jns
mov
out
pop
cmp
xchg
or
xchg
xchg
sub
cmpsb
inc
jno
jle
movsb
pushf
fwait
pop
test
mov
in
mov
or
mov
xor
movsl
mov
push
loopne
mov
ret
aad
add
push
repnz
pushf
adc
jg
cld
imul
cmpsl
repz
push
mov
fs
mov
cmpsb
dec
ret
in
into
xor
inc
add
sahf
push
mov
pop
jmp
and
rcll
movl
mov
or
mov
mov
adc
mov
mov
sbbl
mov
xor
add
orl
mov
lea
mov
mov
xor
sbbl
add
orl
mov
subl
lea
push
neg
mov
subl
xor
add
push
mov
push
movl
pushl
call
xor
add
and
mov
mov
mov
mov
mov
sub
sub
movl
mov
mov
xorl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
pushl
pushl
pushl
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
negl
mov
xor
or
xor
mov
neg
xor
mov
sub
mov
mov
movl
mov
movl
mov
movl
cmp
movl
je
xor
mov
jmp
or
inc
mov
insl
mov
inc
pop
addl
or
or
sahf
ret
sbb
or
inc
adc
jmp
das
mov
std
aad
push
leave
jnp
xor
ds
mov
dec
out
xchg
sub
dec
enter
dec
stc
enter
add
mov
mov
dec
push
push
adc
adc
pop
push
not
sub
cmc
outsl
xchg
pop
das
jnp
or
lea
in
imul
imul
shlb
push
lods
loop
mov
ss
call
xchg
bound
sbb
mov
dec
push
nop
sub
fcoms
xor
ret
adc
enter
xchg
mov
and
inc
cltd
lahf
xorl
push
dec
cwtl
and
sbb
jge
push
xchg
dec
mov
mov
sti
dec
push
iret
pop
cmp
dec
push
imul
adc
ljmp
mov
dec
test
mov
rcr
jle
outsb
es
inc
fwait
scas
xchg
ret
sbb
out
or
xor
fwait
xor
pop
jbe
dec
stc
pushf
fsubp
jnp
je
inc
inc
out
mov
into
sti
lahf
jecxz
add
xlat
lahf
adc
mov
push
out
popf
mov
iret
xor
repnz
repz
ja
clc
lods
mov
rorb
jle
scas
in
mov
push
pop
mov
in
sbb
lock
or
sahf
scas
push
xor
sub
or
aaa
test
mov
xchg
cmpsb
or
mov
xchg
or
xchg
fisubs
call
pop
inc
mov
sti
out
push
out
mov
adc
xlat
arpl
filds
fcoml
sti
pop
sub
mov
in
test
or
add
sti
sbb
mov
not
testb
movsl
std
fwait
add
aad
int3
sahf
jmp
push
mov
mov
addr16
lds
leave
mov
dec
icebp
aad
push
loop
cli
and
js
les
stos
push
inc
scas
popf
xchg
sbb
sbb
mov
inc
nop
push
mov
jmp
nop
jae
fadds
cltd
cmp
outsb
adc
sbb
mov
xor
addr16
hlt
ss
aas
jo
pop
cmpl
popf
or
ror
mov
hlt
imul
push
stos
icebp
repnz
jg
and
repnz
jg
loopne
cmp
jg
imul
pop
shll
sub
mov
fs
fisubrs
xchg
shrl
xor
imul
push
data16
out
cwtl
stos
push
test
xor
hlt
insb
pop
dec
das
orps
jp
xchg
add
or
test
test
lea
push
test
rorl
sbb
movswl
cmp
xor
sbb
das
js
cmp
popf
lret
or
sti
ret
dec
lret
pop
and
jg
pop
inc
or
dec
stc
push
sbbl
into
or
xlat
fcoml
mov
and
sub
mov
inc
dec
mov
mov
adc
jmp
imul
pop
sbb
sub
or
int3
mov
out
dec
and
fwait
push
test
int
lret
aas
sub
sti
repnz
cmc
int3
in
xlat
mov
in
jno
sub
mov
stc
jp
jb
das
fimuls
cmp
enter
and
dec
js
in
mov
loopne
add
push
mov
and
imulb
mov
xchg
sti
out
enter
loopne
dec
popa
mov
insb
sub
push
lods
std
push
push
mov
outsb
adc
cmp
push
pop
and
push
fwait
jns
hlt
sbb
ds
mov
cltd
adc
cmpsb
movsb
inc
sarl
mov
mov
addl
push
add
sarb
arpl
lahf
jne
fisubl
inc
and
lods
sbb
arpl
push
cmc
push
roll
leave
mov
lea
add
dec
daa
jmp
xchg
pop
jge
pop
ret
fisubl
sbb
aad
xchg
inc
out
sbb
adc
dec
subl
and
add
sub
out
xchg
rdtsc
fcoms
inc
add
fisubs
push
sbb
jmp
lret
repnz
push
dec
cwtl
pop
cmp
inc
pop
fs
inc
jecxz
aas
mov
loope
or
sbb
lahf
test
test
das
mov
insb
repnz
mov
int
cmp
daa
inc
mov
inc
std
pop
ficoml
mov
and
or
ss
movsl
mov
fists
mov
dec
push
pusha
out
ret
xlat
pusha
nop
or
cmpsl
mov
mov
je
imul
adc
inc
add
bound
xchg
and
das
mov
popf
ljmp
sarl
xor
testb
aam
movsb
insb
jbe
fildll
lods
in
sar
cltd
test
mov
cmp
add
bound
add
ret
jb
bnd
push
add
imull
mov
push
adc
sbb
xchg
push
inc
or
mov
fisubl
mov
add
cmp
ja
cmp
sbb
lcall
sub
lock
je
inc
push
enter
xor
or
xchg
inc
dec
rcr
mov
xchg
std
xor
jnp
or
mov
mov
and
jbe
dec
enter
jmp
mov
xchg
dec
or
fsubs
adc
sti
add
inc
cmpsl
loop
lahf
ret
dec
clc
jno
loop
sbb
add
rcl
and
stc
cmp
enter
shll
xlat
or
sbb
push
cmp
or
inc
test
sub
jle
lods
lret
fmuls
mov
das
adc
cwtd
icebp
pop
adc
pushf
jle
nop
xchg
and
pop
jl
add
push
faddp
test
cmpsl
mov
sub
cli
inc
push
mov
pop
mov
js
mov
clc
jl
inc
in
adc
jmp
movsl
ret
stos
insl
ljmp
push
push
loop
mov
inc
pop
movsl
fsubrs
xchg
fsts
out
jle
lds
sbb
into
outsl
movsl
sub
fcompl
xor
daa
fwait
sbb
clc
sbbl
sub
cvtps2pd
lds
xchg
stc
test
addr16
pop
int3
xchg
lds
jmp
push
xchg
xor
push
pushl
dec
mov
call
cltd
fst
fsubr
add
jbe
aaa
pop
mov
out
dec
test
pop
cli
xchg
mov
fstpt
stos
pop
mov
adc
push
outsl
test
ficoms
mov
pusha
mov
or
push
mov
nop
mov
adc
mov
fldcw
jae
sub
lahf
mov
cmp
mov
mov
sar
sbb
pop
or
movsb
add
push
loop
mov
pop
cmc
fcom
ds
adc
repnz
push
mov
inc
xchg
pop
mov
shrl
jbe
sbb
push
mov
inc
add
sbb
mov
and
in
subl
or
xor
das
ja
adc
xor
sbb
ljmp
jns
cmp
add
scas
mov
add
sbb
mov
and
pusha
fcomps
jecxz
jns
jns
mov
data16
sbbl
jle
push
sbb
addl
aam
adc
pushl
jl
orb
out
or
js
jge
inc
sub
xchg
jnp
pop
sub
sbb
fisubl
inc
sbb
aam
ss
ljmp
cltd
mov
add
and
out
jns
mov
hlt
add
movsl
mov
mov
hlt
pushf
cli
mov
mov
in
dec
scas
nop
stos
mov
movsb
xlat
add
push
adc
mov
jae
shlb
lret
outsb
das
ret
sub
mov
adc
data16
sub
pop
and
imull
mov
cmpsb
xchg
filds
out
je
cmpsl
pop
xchg
jecxz
mov
es
and
inc
jns
mov
lret
cmp
pushf
cmc
fdivrs
pop
out
dec
mov
xor
adc
jle
leave
push
repnz
adc
lock
pop
aas
call
push
cmp
insb
and
jle
in
mov
daa
jecxz
inc
mov
fisubl
and
mov
jno
jno
lock
or
mov
icebp
and
popf
sbb
es
out
xor
pop
add
arpl
ror
xlat
dec
movlps
xchg
iret
xor
js
or
ljmp
rorb
aas
cmp
add
inc
sahf
addr16
dec
adc
push
xchg
loope
mov
or
out
cmp
jle
pop
data16
mov
sub
arpl
in
push
lcall
cmp
mov
add
movsl
ja
shl
pop
dec
add
jns
cli
lret
fcoml
movl
call
decb
movsl
aad
loop
sbb
jne
xchg
jno
jnp
mov
push
xchg
shll
iret
fimuls
mov
mov
rcl
cmp
sub
stos
lock
jle
rcrb
ds
lock
sub
sub
jge
inc
dec
into
fdivs
cmp
mov
test
cmp
daa
inc
fisubl
dec
xchg
xor
fsts
lock
enter
xor
gs
jg
data16
mov
lahf
xor
fmulp
push
xchg
insl
pop
sbb
mov
adc
stc
insl
xor
cmpsl
mov
rep
cld
push
test
jge
rcll
jbe
mov
scas
loop
adc
inc
push
scas
bound
push
inc
push
aam
push
es
je
addb
cwtl
sbb
cmp
xchg
enter
push
xor
push
inc
cli
jecxz
pop
pushf
movsl
mov
xchg
fwait
push
or
ljmp
jg
outsb
int
pop
jmp
add
or
pop
mov
sub
sub
scas
xlat
out
jo
mov
lret
push
addr16
bound
jnp
lret
pop
in
and
mov
add
les
mov
insb
xor
dec
enter
orl
add
icebp
and
push
mov
gs
push
cwtl
cld
and
out
ss
mov
cmpsb
inc
in
cmp
adc
sub
jge
mov
cmpsl
mov
daa
mov
out
adc
mov
call
mov
fs
adc
lods
cmp
out
test
leave
pop
gs
fstps
pop
or
mov
mov
cmc
dec
negb
andl
dec
mov
jne
mov
arpl
imulb
popa
nop
lods
push
cmp
cmpsl
mov
mov
jmp
sbb
mov
mov
jo
mov
cmovg
ja
or
adc
notb
mov
xor
mov
mov
fs
js
out
out
std
xor
sbb
in
pop
sahf
mov
dec
es
sub
mov
xor
mov
lcall
push
or
jnp
jb
pop
sub
dec
cmp
int
or
mov
rolb
pop
sbb
popa
dec
push
imul
das
int
addl
aas
out
mov
sbb
pop
in
ret
xor
or
sub
adc
lahf
cmp
out
ret
out
jl
mov
mov
daa
xor
dec
aad
lock
sub
out
jne
shr
mov
stos
add
jl
outsb
movsl
xor
popf
mov
sub
mov
xchg
cwtl
dec
jmp
mov
push
pop
repnz
js
dec
inc
pop
push
daa
and
or
mov
sbb
adc
ds
sbb
movsb
sbb
adc
dec
decl
jo
jbe
cmp
adc
imull
mov
cmp
mov
cmp
pushf
jbe
daa
jp
leave
aas
and
jb
scas
cmp
xchg
inc
push
adc
inc
out
push
and
inc
clc
popa
push
xchg
dec
add
cmp
adcb
push
mov
sbb
cmp
cmp
sub
inc
mov
pop
jp
mov
pop
cmpsb
scas
call
shrl
shrb
and
out
mov
iret
shrl
loop
xchg
sbb
in
adc
sbb
or
clc
sub
add
inc
in
xlat
adc
add
das
jg
orl
fbstp
cmpsb
push
enter
pop
call
adcl
sub
into
mov
cmp
in
movsl
jmp
push
das
in
or
xor
xor
incb
in
arpl
popa
dec
add
lcall
xor
lea
out
insb
inc
and
in
inc
icebp
sub
and
mov
or
cld
test
fbld
cmp
shlb
adc
xchg
cld
sub
mov
inc
cmp
cmc
pushf
loop
mov
insb
test
in
aas
lock
mov
lcall
dec
jbe
out
les
push
ds
lods
jmp
scas
and
or
cmp
sbb
mov
add
jno
push
mov
push
mov
in
jbe
or
leave
pop
mov
jne
daa
sbb
or
mov
mov
sub
push
int
stos
push
lds
dec
push
push
mov
xchg
loop
xchg
dec
mov
sarl
hlt
mov
adc
aas
jnp
cmpsb
cmpsb
add
inc
adc
lods
fildl
es
dec
mov
hlt
gs
xor
in
jg
mov
loope
and
push
jns
repnz
xchg
mov
pop
pop
enter
loope
mov
cmpb
fcomps
movsl
pop
std
in
push
movsl
out
repz
jle
or
add
call
xor
xchg
and
arpl
adc
sbb
cli
mov
mov
cmpsl
fs
sets
shll
inc
adc
in
loop
iret
sti
sbbl
dec
dec
mov
aam
xchg
xchg
inc
push
popf
stos
maxps
sub
adc
lret
in
pop
mov
je
call
mov
pop
inc
cmovle
cli
test
inc
cld
push
mov
mov
pop
pop
xchg
movsb
nop
pushf
scas
adc
stc
push
clc
and
pop
xor
divb
loopne
cltd
fwait
add
mov
inc
test
cli
stos
gs
mov
lods
clc
ljmp
pop
sbb
push
popa
fcos
pop
shll
push
jno
pop
mov
scas
movsb
test
pop
lahf
pop
dec
mov
fnstsw
mov
mulb
sbb
repz
test
xor
xlat
and
fmuls
dec
mull
stos
mov
cmp
call
dec
xchg
add
addr16
jg
das
cmpsl
stos
out
das
rorl
enter
push
jo
pop
test
and
pop
inc
in
out
xchg
stc
cmpsb
nop
mov
and
cmpb
dec
ds
and
adc
cmp
ja
mov
or
ljmp
arpl
or
inc
add
mov
fsubrs
movsl
cmc
adc
or
push
in
xor
imul
rcrl
mov
movsb
xor
mov
mov
mov
mov
mov
fistpll
xchg
repnz
xchg
mov
pusha
adc
rol
sub
adc
int3
cltd
ret
cmp
out
and
insl
push
pop
dec
loopne
cmp
jns
mov
test
aaa
test
outsb
add
cmp
or
sti
cmovns
out
shlb
mov
mov
push
in
mov
shlb
xchg
mov
shrb
jb
mov
sbb
adc
pop
fnsave
inc
pop
in
out
xchg
mov
push
loope
fsubrs
int3
sbb
mov
insb
je
inc
imull
add
repz
push
inc
xor
leave
test
dec
std
xchg
xor
cmp
adc
mov
adc
mov
divl
sbb
cmpsl
xchg
imul
cmp
lcall
hlt
ror
fldt
push
pop
lret
lret
add
mov
daa
in
std
faddl
sbb
or
sahf
cwtl
push
pop
lahf
popa
and
aas
shl
cmp
lock
sbb
xchg
or
insl
fs
imul
pop
inc
xchg
cs
loopne
dec
xor
xchg
mov
sub
sbb
hlt
add
mul
mov
outsl
adc
and
popa
mov
loope
outsl
add
adc
add
ljmp
subl
pop
aaa
fisubrl
mov
cmp
out
push
push
lret
cltd
in
sub
shl
jg
clc
call
popa
mov
cltd
cmc
lds
mov
inc
and
shlb
sbb
aaa
or
cltd
icebp
mov
mov
dec
push
xlat
lea
mov
jnp
int3
inc
mov
adc
or
fwait
out
pop
test
pop
pop
sub
imul
movsl
mov
sub
inc
mov
inc
lods
sar
add
hlt
ds
cltd
data16
mov
loop
test
inc
loopne
fidivs
push
dec
push
cs
or
adc
fs
push
dec
dec
add
cltd
cmpsl
fs
jmp
pop
imul
scas
lret
or
pop
bound
mov
xchg
paddd
dec
ficoms
or
mov
pop
inc
inc
test
xor
adc
mov
adc
add
cwtl
or
adc
testl
pop
push
insb
es
movsb
adc
fs
rcrb
mov
push
inc
pop
sub
push
out
mov
in
push
pop
lret
push
jbe
mov
xlat
and
xchg
and
or
or
cmpsl
es
movsl
mov
scas
lea
test
mov
cmp
jmp
bound
sub
lods
inc
xchg
adc
loope
out
inc
jle
int
sahf
push
pushf
gs
xlat
cld
mov
sub
loopne
mov
andl
shr
ljmp
imulb
sub
sbb
int
cmp
aad
lock
sub
jle
lahf
bound
popa
je
inc
sbb
mov
movsl
iret
dec
push
xchg
mov
fxch
les
cmpsl
fwait
mov
imul
add
push
pop
add
rclb
xchg
sbb
xchg
mov
cltd
call
or
push
insl
or
js
jno
lret
or
inc
in
movsl
sbb
daa
fistps
cmp
and
hlt
aam
mov
icebp
mov
popa
bound
int3
jb
mov
stos
fs
in
mov
sahf
mov
mov
ret
add
in
es
test
scas
das
clc
aam
push
jo
add
loopne
inc
jmp
movsb
sub
adc
in
xor
push
dec
cmp
fs
cmp
fadds
lcall
stos
adc
popf
mov
xchg
jg
and
hlt
push
push
cmp
cmp
mov
fstps
inc
call
sub
inc
pop
sub
sub
and
push
jmp
or
dec
sub
pop
pusha
pop
push
ljmp
cwtl
psubsw
xor
jo
inc
ss
repnz
pop
add
or
in
inc
xor
imul
ja
test
icebp
adc
adc
mov
in
push
dec
jl
mov
or
aam
lods
add
push
sub
pop
inc
push
add
xchg
icebp
out
dec
xchg
ja
jecxz
mov
pop
clc
inc
sub
mov
ret
inc
cmp
int3
xor
decb
in
lret
shll
cmp
push
das
pop
cmpsl
cmpsb
int3
xor
or
clc
out
cwtl
mov
sub
jae
pop
xchg
jge
sbb
pop
cmp
push
outsb
add
jge
sbb
adc
xor
mov
sarl
testl
das
in
popf
adc
mov
ss
jle
hlt
cld
mov
jnp
movsb
sbb
das
lret
jecxz
popa
fnstcw
jb
sbb
mov
addr16
sahf
inc
add
addl
mov
adc
andb
add
loopne
add
jne
pusha
jl
mov
imul
mov
xchg
sti
push
inc
add
imul
inc
js
repnz
xorl
movsb
jb
push
hlt
push
jge
mov
addr16
adc
sub
jo
movsl
or
push
mov
movsl
sub
cmp
rcrb
pop
mov
push
imul
jbe
mov
mov
xchg
sub
loop
sbb
call
adc
mov
jno
nop
fisubs
pop
ret
mov
push
jbe
mov
stos
add
les
mov
xchg
adc
mov
xchg
les
ja
pop
jp
int3
push
mov
push
lahf
xor
rolb
or
std
pop
and
xchg
dec
cmp
ret
scas
test
or
sub
cmp
jbe
lea
cld
ret
adc
cwtl
mov
mov
aad
cmp
xor
jmp
ja
in
mov
adc
push
lret
and
in
sti
popf
loop
outsl
push
push
pop
sub
mov
push
subl
inc
dec
inc
sub
nop
mull
dec
push
mov
and
jne
push
adcl
sub
push
pop
adc
sub
in
popl
cmp
cmp
leave
fcmovu
add
test
lods
pop
sub
ror
lock
sub
dec
loope
ljmp
sbb
into
dec
sbb
stos
ds
push
adc
sub
aas
ret
pop
xchg
or
inc
enter
shlb
pop
add
xchg
test
mov
dec
dec
mov
test
sub
scas
in
dec
adc
gs
bound
mov
imul
mov
cmpsb
or
pusha
push
imul
fs
fdivrs
std
mov
cld
pop
push
push
sbb
sbb
inc
adc
ja
mov
dec
lds
insl
ljmp
push
rolb
mov
out
rdpmc
mov
xchg
imul
pop
pop
sbb
cmp
js
sub
fisttpll
sub
rcll
test
xor
aas
pop
xchg
mov
mov
jno
add
and
xor
xchg
fwait
add
push
jno
or
dec
lock
aaa
ljmp
std
loopne
pop
int3
pop
imul
jge
push
jo
inc
push
mov
xor
jb
jnp
in
cld
aad
push
subl
cmp
push
fdivs
sub
lods
jae
ja
jne
negb
mov
lds
sub
sbb
scas
mov
add
pusha
movsl
test
jp
nop
cmp
inc
mov
jo
fdecstp
jo
mov
dec
xor
je
sub
push
xchg
pop
inc
mov
jbe
adc
jnp
outsb
push
les
xchg
addr16
icebp
pop
jmp
arpl
jg
xchg
adc
push
lods
sub
mov
lahf
cmp
or
arpl
lcall
in
aaa
push
icebp
cmp
inc
ror
es
movsb
shlb
repz
outsb
push
jno
mov
lods
popf
cmp
or
lahf
arpl
es
aas
push
js
push
mov
sub
sbb
negl
mov
aad
stc
js
push
mov
or
dec
cmp
sbb
cmp
ja
xor
adc
rolb
xchg
jecxz
xchg
scas
xchg
insb
outsb
push
mov
imul
test
mul
xor
mov
scas
jno
int
pop
negl
or
mov
mov
pop
and
jecxz
cli
sub
cltd
adc
outsb
cwtl
pop
into
ficoml
pop
adc
push
cmp
add
mov
mov
test
jno
imul
adc
fimuls
pop
and
and
sub
push
sbb
push
jecxz
jb
loope
xchg
pop
es
mov
jns
sub
dec
outsb
inc
imul
or
mov
cltd
in
imul
loope
mov
addr16
test
pop
adc
sbb
ja
shrb
sti
and
ljmp
adc
sub
jge
add
enter
popa
push
xchg
stc
ret
fldt
imul
mov
icebp
push
adc
daa
sahf
dec
mov
lock
icebp
fcomp
bound
xchg
jb
test
daa
inc
sbb
mov
fwait
dec
js
and
jo
lods
rolb
das
stc
jl
inc
mov
pushf
xchg
scas
movb
adc
inc
in
lods
ljmp
mov
xchg
add
orb
in
ljmp
fldt
cmp
lds
imul
mov
xchg
mov
ds
adc
or
mov
iret
adc
mov
mov
pop
mov
jle
pop
xor
aaa
mov
jmp
setge
decb
sbbb
push
in
fidivl
bound
ja
cltd
pushl
mov
stos
lcall
leave
and
nop
in
in
or
mov
push
push
pop
mov
xchg
xchg
out
mov
rclb
xor
mov
nop
mov
pop
sub
fwait
aad
pop
jae
dec
jle
inc
xchg
inc
push
push
fstps
jmp
add
jnp
js
push
adc
imul
ret
mov
ds
cmp
jne
mov
xor
mov
test
or
jnp
or
jnp
mov
in
cli
push
add
add
dec
movsl
inc
mov
sbb
fmulp
nop
divb
push
scas
cmpsb
cli
xchg
ret
std
mov
out
pop
cmc
repz
pop
or
xchg
fdiv
jb
std
jmp
divl
aam
repnz
inc
clc
sbb
xchg
jge
xlat
xchg
lock
iret
hlt
fistpll
orb
mov
jne,pn
push
fdiv
insb
sub
xchg
add
mov
pushf
fcoml
les
xchg
out
repnz
ljmp
sub
lcall
ljmp
add
jo
xlat
rcl
enter
xor
out
push
jmp
sub
or
xchg
mov
sbb
out
pop
cmp
pop
xlat
cltd
and
imul
cmp
mov
mov
call
xrelease
js
and
or
lock
pop
cmp
int3
test
lds
xchg
mov
popl
dec
inc
hlt
adc
push
shrb
pop
add
scas
out
cmp
xor
cld
push
add
lcall
pop
cwtl
stos
xchg
and
sbb
imul
pop
jmp
xor
xchg
movsl
dec
popa
popa
dec
mov
xchg
and
insb
pop
ja
cmp
test
jp
jp
dec
ja
mov
add
xchg
pop
mov
pop
mov
mov
sarl
dec
into
jbe
shrb
xor
pop
sub
cmpsl
leave
cmp
arpl
or
ss
test
xchg
in
in
jns
test
or
xlat
push
push
popf
cli
out
mov
jge
test
pusha
in
fcmovbe
push
mov
ret
enter
lock
stc
dec
cmp
fs
sbb
clc
or
jnp
or
inc
aad
xlat
fidivs
cs
std
cmpsb
sbb
ss
cmp
mov
add
cs
sbb
test
outsb
jno
jae
xor
sti
inc
or
mov
iret
and
loope
pop
je
push
fstpt
pushf
pushf
popa
rclb
out
and
xchg
xchg
cmp
in
add
adc
stos
jl
mov
xchg
lods
adc
pushf
fldcw
xchg
jp
aad
mov
arpl
add
in
int3
clc
cmpsb
fyl2x
test
rol
pop
ret
mov
imul
mov
out
mov
jo
iret
and
xlat
pop
mov
imul
orl
clc
repz
int
mov
roll
jbe
aaa
loopne
pop
in
outsl
cmp
mov
data16
bound
cltd
xchg
adc
mov
popl
push
and
je
out
int3
loopne
sti
pop
aaa
aam
loope
sbb
inc
push
pusha
clc
xchg
bound
xor
jge
sbb
mov
add
loopne
jg
popa
adc
pop
popf
lock
shll
lds
dec
dec
stc
gs
pop
add
and
xchg
or
sub
shll
out
imul
shll
hlt
lahf
mov
mov
sbb
loope
test
xor
rcrb
mov
adc
mov
cltd
mov
negl
mov
push
mov
sbb
jns
inc
imul
stos
dec
mov
dec
xor
in
mov
or
push
jmp
fcomi
arpl
bound
xchg
jne
ficomps
shl
adc
enter
lock
cmp
xor
sbbl
jno
sub
cwtl
iret
inc
punpcklbw
lret
mov
cli
outsb
pop
idivb
out
notb
inc
dec
mov
push
jne
xchg
data16
xor
inc
dec
lock
xchg
and
mov
popf
pop
jge
filds
push
js
mov
push
sub
jns
xor
sub
rorb
bound
push
pop
inc
xchg
out
cs
dec
jl
aam
adc
jnp
add
jge
pop
mov
jg
movl
dec
out
xlat
ror
test
xchg
cld
pop
fmuls
cmp
fidivl
jge
adc
push
mov
pop
mov
sbb
push
xchg
or
sub
dec
xchg
dec
add
mov
iret
pop
and
divl
jno
bound
mov
loopne
mov
or
add
sbb
cmc
stos
notb
xorl
cltd
push
bnd
pop
fs
mov
scas
fs
sub
iret
sub
cmp
popf
pminub
faddl
mov
xor
sbb
mov
xor
add
loope
xchg
adc
jge
mov
in
and
popa
repnz
test
lret
sarb
mov
ja
jns
add
xor
je
aam
mov
push
popf
in
sbb
adc
imul
inc
push
push
xchg
add
adc
test
mov
subl
xor
addl
xor
lea
andl
xor
or
inc
mov
cmpl
jge
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
xor
orl
div
or
mov
xor
xor
sbb
mov
xor
orl
xor
sbbl
sub
cmp
jmp
mov
loope
addb
fistpl
xchg
or
addl
fldenv
cmp
les
pop
or
xor
dec
pusha
movsl
cmp
std
movsb
and
scas
sub
dec
inc
outsl
xor
cltd
push
popa
std
testl
add
lds
mov
fidivl
mov
mov
adcl
stc
jmp
dec
xchg
add
jne
adc
mov
add
scas
mov
adc
push
mov
arpl
or
push
jno
in
stos
xorb
hlt
add
add
xchg
pop
mov
push
jb
in
pop
cmpsb
mov
cmpsl
mov
cmpsb
xor
repz
push
push
inc
iret
dec
sbb
xchg
pop
mov
lret
mov
test
scas
test
sbb
std
xor
test
mov
sub
pop
cmp
add
mov
loope
pop
jo
dec
repnz
idiv
or
das
pop
push
pop
pop
divb
jecxz
into
inc
stc
adcl
xchg
dec
pushf
ja
sub
pop
mov
stc
pop
test
aas
pusha
popf
testl
inc
xchg
out
jl
jb
sbb
arpl
dec
lret
cmp
xchg
in
test
negl
stos
dec
stc
imul
cmpsl
inc
or
lds
xor
or
cmp
or
push
loopne
cmp
jp
push
mov
in
pop
mov
add
ret
inc
pop
call
or
xchg
subl
sahf
lods
js
icebp
cmp
dec
sbbb
or
sbb
cli
mov
shll
pushf
sub
sub
cld
cmpsl
push
jns
and
pusha
inc
negl
ficomps
mov
movsl
push
or
in
inc
loop
sub
sbbl
xor
inc
out
mov
mov
imul
ret
xchg
ss
in
sbb
shlb
rol
aam
popa
ss
jne
jbe
or
jns
in
pop
jge
sbb
add
dec
dec
mov
ds
addr16
mov
push
cmp
xchg
cmp
ret
sbb
dec
xchg
dec
faddl
sarb
sub
jmp
fnstsw
fidivl
cltd
push
adc
loopne
fimull
arpl
and
mov
or
fwait
push
pop
nop
lods
inc
mov
cwtl
fistps
fadd
inc
fwait
push
fidivl
sub
inc
cmc
pop
push
dec
push
adc
enter
sti
xchg
inc
lahf
and
stos
pop
adc
roll
repnz
push
decb
rcl
lds
jns
jp
inc
cwtl
mov
add
sub
inc
repz
jb
xor
mov
rcrb
dec
xor
fsubrp
aad
sub
jmp
inc
aas
lret
sub
jl
dec
fstpl
mov
or
sub
or
fisubs
and
mov
or
sbb
std
fisubrl
cs
sbb
pop
js
pop
mov
push
jo
cld
dec
insl
les
add
aas
sbb
jle
ja
shrb
push
inc
insl
lahf
xor
stos
push
mov
jmp
mov
mov
mov
cmpsl
add
inc
mov
mov
or
movsl
cmp
mov
sub
dec
fdivs
add
and
in
or
dec
dec
xchg
xor
in
sbb
repnz
cs
cmp
pop
mov
in
lock
call
jmp
adc
lret
adc
pusha
sub
push
inc
push
and
insb
xchg
insl
arpl
mov
je
mov
mov
stc
inc
je
mov
jo
mov
jl
div
or
adc
dec
and
rcr
cmpsl
repnz
adc
mov
cmp
icebp
jno
jno
mov
inc
inc
loopne
bound
xor
xchg
bound
outsb
sub
cmp
hlt
fwait
adc
inc
lea
movsl
dec
leave
ret
dec
movsb
pop
sbb
dec
stos
incb
jmp
pop
les
jge
mov
lods
nop
push
ds
xchg
mov
mov
or
iret
scas
xchg
xor
xor
pop
aam
popf
mov
xchg
das
popf
das
in
cwtl
not
push
lahf
lret
cli
lds
test
push
jecxz
int3
fstps
xchg
popa
xchg
cs
sub
dec
lcall
leave
add
sub
loopne
push
outsb
ds
cmp
pushf
and
mov
push
cld
cmp
test
xor
xchg
mov
sbb
gs
data16
mov
in
pop
test
dec
int
ss
pop
ja
pop
mov
sub
push
inc
rcrl
cltd
clc
ret
loopne
add
int
inc
inc
jne
mov
add
cwtl
out
ljmp
ljmp
rorb
mov
lds
les
stos
sub
rcrl
lret
cmp
jae
stc
mov
or
pusha
add
adc
dec
pop
inc
and
jbe
dec
and
push
sarb
aas
cmp
inc
dec
dec
imul
dec
das
int3
push
inc
mov
or
test
jo
into
pop
lret
mov
hlt
cltd
mov
add
emms
dec
jmp
xlat
repnz
popf
int3
sti
jo
popf
es
enter
add
mov
sub
adc
pop
int3
testb
and
inc
sbb
in
andb
xor
mov
push
aas
push
add
aaa
adc
clc
dec
sbb
push
jns
fsubrp
push
sub
dec
and
movsl
fsubl
addr16
icebp
icebp
cmc
daa
leave
xchg
and
aas
pop
jae
push
cmp
push
mov
repz
jbe
cmp
cmp
ja
mov
cwtl
push
jge
mov
mov
xor
jne
loop
adc
mov
cli
hlt
mov
xchg
roll
in
fnsave
cmp
fisttpll
popf
dec
push
fstps
insl
push
cmc
enter
and
xchg
lret
jns
mov
notb
scas
mov
cmpsl
adc
loop
push
push
orl
xchg
jg
sbb
cmp
das
inc
mov
std
fsubl
outsb
adc
or
xor
push
or
fldt
idivl
es
cmpsl
cmp
insb
xorb
dec
cmpsl
fildl
leave
mov
lock
add
adc
pop
ret
xchg
sarb
vpshld
arpl
cwtl
xchg
or
xor
insb
xchg
lret
popa
lcall
hlt
jbe
mov
mov
cmp
dec
jmp
push
lods
fcmovnbe
ret
jno
test
adc
scas
xor
sbb
loopne
lcall
nop
imul
insb
sbb
incb
sub
mov
add
push
inc
adc
loopne
sar
jbe
push
mov
daa
fdivs
sbb
rcr
push
daa
xchg
mov
xchg
in
in
ds
test
fiadds
cmpsl
repnz
fidivrl
jnp
cmp
repz
push
pop
daa
xor
divl
out
sub
imul
lock
cmp
inc
scas
test
leave
dec
sub
xchg
mov
ret
addb
xor
pop
stos
sbb
aaa
sub
pop
fidivrs
mulb
enter
aas
ljmp
fidivrs
test
stos
fisubl
and
fsubrs
mov
push
out
push
mov
mov
sbb
cmp
sub
mov
push
sub
inc
ret
pop
inc
rolb
aas
jns
jno
test
popf
sub
arpl
and
or
jp
pop
add
dec
lock
mov
ds
mov
xchg
add
imul
sub
test
sub
jl
movb
xchg
xchg
test
movsl
mov
ja
bound
or
imul
mov
mov
mov
sub
repz
lret
ja
jle
xor
and
jmp
sbb
test
sahf
mov
xchg
hlt
std
ror
lret
cmc
popa
xor
xor
orb
into
iret
icebp
adc
stc
sub
inc
test
lods
lret
sub
fcomip
in
mov
dec
stos
out
insb
push
inc
cmp
mov
and
enter
add
xchg
ficoml
or
stos
sub
pop
movsl
mov
mov
mul
cmpsb
je
push
cmp
or
mov
pop
pop
iret
lcall
xorb
movsb
iret
mov
adcl
push
and
push
push
jne
dec
clc
daa
add
push
int3
cmp
out
out
icebp
dec
das
sbb
aas
pop
outsl
nop
cmp
mov
nop
xor
daa
jbe
mov
fidivrs
pop
push
add
mov
inc
stos
stc
insb
inc
mov
sbb
xchg
ret
cmp
shl
mov
add
nop
xchg
sbb
int
push
fs
scas
push
loopne
adc
imul
dec
loopne
jp
sub
int3
aas
inc
mov
neg
inc
jno
je
xchg
sti
mov
or
push
sarb
jecxz
shll
add
xchg
or
inc
mov
and
and
and
xor
test
out
inc
mov
mov
pusha
lahf
ds
cmp
pop
jecxz
out
repz
and
xor
bound
xchg
cmp
bound
mov
nop
ds
iret
out
pcmpgtd
lret
jmp
push
insb
and
jp
or
ljmp
push
pop
cmp
sti
int3
mov
setle
and
inc
jo
adc
fcompl
mov
jno
mov
and
testl
pop
jb
and
out
call
lret
mov
mov
loop
outsb
or
out
icebp
les
in
push
shll
mov
adc
popa
int3
or
nop
and
push
mov
pop
sbb
les
jae
sub
lods
mov
xchg
into
sti
cld
push
loop
arpl
pop
cmp
mov
push
lahf
outsl
cld
push
lods
add
xor
pop
pop
inc
mov
pop
add
mov
adc
jmp
adc
in
sbb
loopne
adc
cmc
and
imul
pop
dec
loope
jg
add
mov
cmp
jmp
xchg
incb
add
mov
fsubrs
push
movl
loope
or
notb
out
mov
lret
std
idivb
mov
fcoml
jle
mov
jo
jbe
mov
sbb
dec
lods
nop
nop
cld
cld
or
cmp
or
xchg
jle
in
push
xlat
adc
adc
int3
add
movsb
outsb
out
xlat
imul
lcall
pop
aaa
rolb
add
xchg
out
mov
lahf
fnsave
pop
sbb
jo
cmpb
mov
cmpsb
insl
fmuls
enter
add
fcmovnu
jnp
enter
xlat
lahf
dec
mov
or
push
stc
lea
xchg
fists
insl
dec
lods
bound
sbb
fmull
fmulp
lods
stc
lods
mov
shl
jge
sbb
outsl
lahf
scas
inc
and
lock
push
dec
aad
fsubr
or
into
lods
pop
dec
in
ficompl
test
or
subl
add
xor
lods
pushf
or
dec
jg
testl
mov
jae
dec
xchg
mov
push
dec
imul
sbb
jp
mov
lds
call
loopne
insb
nop
jo
aaa
jne
cmc
push
lds
daa
lods
or
cmpsb
pop
das
jns
cld
sbb
cmpsl
dec
les
cmp
adc
sbb
sti
lods
ljmp
scas
les
fmull
pop
fdivrl
sbbb
xchg
shrb
and
or
and
popf
rcl
inc
add
pop
out
xchg
ja
mov
cmpsl
rolb
mov
sahf
fcompl
or
add
xor
mov
pop
and
aas
mov
es
adc
cmc
fsubp
push
or
inc
dec
mov
insb
ljmp
mov
int3
dec
mov
sub
cmp
loope
cmp
pop
aad
push
add
dec
mov
mov
dec
lret
jne
mov
xchg
adc
add
inc
xchg
aam
jnp
jo
pushf
aam
bound
cmp
fcomps
gs
add
nop
mov
cmp
and
lea
xchg
lock
mov
jp
out
sarb
mov
enter
jecxz
int3
cmp
jp
mov
push
jno
testb
xchg
mov
test
testb
jecxz
jbe
and
adc
jmp
es
bound
mov
add
mov
inc
imul
adc
cmp
test
call
mov
push
iret
and
cmc
mov
sbb
cmp
lods
icebp
cmp
pop
add
mov
and
push
add
push
dec
mov
cmp
cmpsb
fcoml
pop
test
clc
test
dec
xchg
mov
push
test
xchg
mov
xor
mov
mov
adc
cmp
mov
xor
xor
mov
ja
lcall
dec
dec
and
cmp
push
pop
dec
dec
or
outsl
enter
xchg
mov
pop
insl
fcmovbe
or
shrl
jmp
inc
les
inc
jmp
jbe
mov
push
jbe
repz
dec
mov
xchg
std
jne
test
hlt
mov
test
ja
pop
push
enter
mov
out
jmp
and
or
push
test
and
lcall
test
stc
leave
mov
mov
jnp
or
into
cwtl
das
pop
mov
add
lea
fcompl
ffreep
jnp
sti
std
jge
arpl
std
jb
mov
mov
or
loop
ret
das
mov
jbe
out
mov
and
mov
pop
clc
jle
or
loope
popa
cwtl
imul
pop
insl
sbb
adc
and
inc
inc
inc
jmp
sub
inc
cld
mov
push
popa
xchg
mov
jle
jecxz
jbe
pop
inc
cmp
or
jbe
inc
jmp
or
inc
leave
aaa
mov
pop
rcr
daa
movsl
hlt
cmp
aaa
movsl
dec
lock
xor
adc
insl
cmpsb
inc
imul
adc
dec
cmp
fdivr
fisubrl
ret
xor
es
dec
sub
pushf
icebp
mov
lret
or
sub
xor
and
pop
jns
insl
cmp
popf
imul
sbb
push
cltd
sub
pop
fisubrs
std
mov
lea
iret
sub
or
hlt
or
outsb
xchg
outsl
inc
cmpsl
or
pop
lret
notb
rolb
call
jb,pn
insl
insl
js
loope
mov
pop
in
xorl
cmc
cli
mov
push
sbb
or
adc
xor
xchg
sahf
sbb
mov
daa
xor
cwtl
xor
pop
stc
mov
test
out
aad
lea
mov
outsb
sbb
jo
inc
mov
stc
mov
ret
sub
add
mov
or
pusha
ja
clc
mov
jle
and
data16
mov
loop
ret
rclb
push
es
fs
xchg
xchg
cli
mov
cli
cli
jne
into
aam
ret
sbb
nop
sub
repnz
or
add
jmp
push
inc
cmpsl
jmp
pusha
pop
xor
or
sub
jmp
popa
out
inc
cwtl
adc
push
repz
adc
mov
aas
fisubrl
fistps
insl
inc
inc
int
or
sti
xchg
fisttpl
mov
inc
pop
add
les
and
daa
sti
jmp
clc
dec
call
and
in
dec
push
sarb
cmp
bound
mov
mov
and
daa
mov
dec
mov
aaa
add
outsl
push
in
push
pusha
mov
repz
mov
xchg
insb
mov
in
rcrb
dec
aam
bound
mov
loopne
insl
sti
hlt
add
pop
push
fadds
sub
test
push
insl
aas
pop
sbb
nop
js
ljmp
movsb
sbb
pop
cltd
pop
add
xchg
sub
push
popf
jmp
sub
add
mov
xor
mov
xor
clc
movb
inc
je
mov
shrb
sbbb
int3
gs
sahf
xchg
dec
add
and
sbb
stos
push
mov
mov
mov
shrl
shrl
cmc
into
mov
les
out
ljmp
inc
divb
pop
loope
push
pop
lahf
cmp
push
insb
xor
lahf
rorb
notl
push
dec
mov
xchg
push
icebp
sarl
mov
sahf
mov
sahf
or
mov
xchg
outsb
call
scas
xor
fs
mov
mov
push
arpl
mov
bound
xor
mov
jmp
pop
iret
or
add
cmp
add
mov
out
lahf
pop
lds
add
cmp
add
push
jno
aas
jmp
mov
movsl
outsl
insb
or
lds
pop
lods
push
mov
inc
sbb
push
pushl
xchg
ret
dec
cmp
cmpsl
mov
arpl
and
or
rolb
clc
repnz
int
fisttps
mov
pop
dec
dec
adc
mov
dec
xchg
loopne
xchg
sbb
out
cwtl
inc
stc
lcall
jbe
mov
xchg
ljmp
out
add
xor
enter
jno
out
lahf
xor
cmp
jbe
or
sub
mov
roll
mov
dec
negl
jo
adc
fldl
sbb
outsb
adc
push
rcr
add
mov
inc
nop
fadds
adcb
xlat
cmp
cmpsb
scas
dec
sub
fadd
movsl
jmp
and
pop
sub
mov
lds
sti
add
gs
fs
adc
inc
sub
enter
jnp
or
cli
cwtl
rcl
adc
das
mov
jecxz
cmp
xlat
imul
mov
xlat
shlb
int3
movsb
mov
inc
push
mov
je
sarb
jge
mov
mov
xchg
or
dec
jno
cmc
xchg
adc
adc
pop
int
out
jecxz
aam
pusha
call
pop
cltd
mov
jbe
push
and
and
xorb
inc
dec
pop
loope
shll
mov
pop
insl
xorb
dec
mov
cli
jo
push
clc
sub
repnz
shrl
cmp
call
mull
jp,pn
test
jno
pop
cltd
lock
cld
inc
jns
sbb
or
xchg
aad
mov
fildl
pop
negb
sbb
in
std
lods
push
push
out
setle
bound
cmp
add
shll
jnp
sub
push
dec
jle
int3
mov
pop
push
mov
fisttps
xchg
jge
data16
jno
dec
or
lret
in
sub
iret
lock
cmp
es
data16
xchg
push
and
sub
mov
enter
ret
inc
xchg
adc
mov
nop
mov
insb
insb
aad
subb
aam
add
mov
sbb
lret
imul
mov
stc
sbb
mov
mov
dec
xor
mov
xchg
xor
fisttpl
imul
xlat
ljmp
dec
jae
xchg
hlt
inc
add
int3
pop
inc
data16
and
loopne
sbb
rol
lock
pop
mov
add
pop
adc
sbb
lret
daa
add
dec
xchg
adc
daa
aam
push
repnz
mov
jl
sbb
push
cmpsl
xchg
dec
and
ret
jg
movsl
jo
imul
sbb
xchg
mov
cmp
xchg
lea
jno
dec
mov
aad
imul
je
pop
jne
lods
adc
sti
notl
leave
rorl
lret
imul
push
xchg
in
sbbl
cmp
addr16
testb
sub
jo
aaa
mov
ja
in
jl
mov
xor
icebp
outsl
pop
xchg
adc
push
cmp
inc
popa
cmpsl
sahf
out
sbb
imul
xor
pop
or
cmp
aaa
cmp
insl
addr16
lcall
psubq
das
rclb
repnz
mov
push
add
fs
mov
mov
cmp
lock
das
sub
xor
mov
movsl
mov
pusha
loope
pop
sub
mov
dec
test
xchg
xchg
imul
idivb
push
push
call
mov
aad
xorl
nop
icebp
sti
xor
and
jl
mov
jmp
jnp
jg
jecxz
jae
dec
dec
xor
lds
and
jbe
out
add
ja
lds
mov
bound
inc
rcll
stc
xchg
and
xchg
in
inc
and
adc
test
icebp
adc
popa
cmp
and
rorb
icebp
in
mov
cmpsl
sub
sbb
jbe
mov
mov
mov
sbb
sbb
mov
push
jb
out
popf
adc
sub
jo
int
sti
lcall
frstor
shrb
add
pop
mov
dec
in
push
ret
sbb
addr16
cmp
mov
int
and
je
mov
mov
pop
pusha
ss
or
rorb
or
movsl
jne
xor
in
test
cmp
subl
daa
jae
call
rorl
pushf
or
test
jge
fisubrs
inc
fs
movsb
cld
inc
cmp
aaa
inc
mov
cmp
fsubrs
std
outsb
insl
leave
lds
fmul
xor
xchg
dec
in
ret
nop
ljmp
rclb
stos
jo
inc
lret
leave
xchg
push
lods
jo
mov
push
inc
and
rclb
loope
mov
aad
sub
fs
dec
xor
cmp
xor
mov
in
pop
rorb
sahf
mov
mov
insl
jb
sbb
int3
retw
incl
shl
mov
push
out
xchg
adc
jns
xchg
fnsave
sub
lcall
lret
xor
cmp
mov
mov
test
mov
xchg
cli
ja
jns
stc
jne
mov
push
int3
leave
mov
adc
sub
adc
lcall
in
cmp
stos
xlat
outsb
sbb
pop
dec
jno
arpl
fsubrl
sub
fwait
aad
sub
xchg
dec
add
sbb
icebp
enter
mov
adc
xor
jl
jmp
das
dec
sub
push
pop
in
fs
xor
test
in
jne
cmp
sbb
imul
stos
nop
std
mov
xor
pop
js
call
lea
test
pop
cmc
stc
jecxz
loope
in
mov
push
repnz
sbb
cmp
loope
jmp
sbb
mov
lahf
outsl
adc
ret
out
and
inc
xchg
pop
mov
gs
jo
adc
repz
movsb
loop
push
in
xchg
rcrl
mov
pop
sub
cld
cli
loopne
sbb
das
dec
jp
lods
leave
shll
gs
je
pop
xchg
pop
adc
pop
aaa
jnp
pop
mov
in
loopne
into
shl
aad
stos
frstor
sti
das
and
cmc
xchg
jno
out
ret
and
fs
adcl
xlat
out
call
mov
inc
orl
sub
and
rcrl
sbb
and
addr16
out
test
mov
pushf
and
and
mov
jne
insl
or
leave
inc
cmpsl
or
sar
pop
ljmp
aad
int
clc
mov
call
lahf
testl
fs
addr16
and
pop
mov
xchg
fstpt
pop
sub
mov
mov
push
sbb
aad
outsl
jns
shll
lret
std
sub
mov
xchg
xor
mov
inc
fsubp
sub
mov
push
fidivrl
jle
xchg
ret
xchg
xchg
sbb
lea
test
xchg
outsl
mov
xchg
or
cmp
sbb
dec
test
mov
ret
test
dec
xor
inc
loopne
pusha
mov
mov
rcrb
rcl
mov
into
xchg
test
add
jle
pop
fwait
aas
mov
jge
lods
loope
dec
pushf
subb
jnp
sub
mov
xchg
fcomip
add
cmpsb
mov
and
and
outsl
nop
push
push
or
popf
rorl
sbb
mov
cmpsb
out
mov
inc
adc
xchg
sti
flds
hlt
sub
pop
sub
arpl
call
lock
stos
das
or
mov
aaa
cmp
jle
outsl
pop
les
push
out
cs
mov
insb
rcl
cmp
push
mov
faddl
cmpsl
cld
mov
xrelease
push
cs
lcall
cmpsb
shrl
ljmp
jle
push
mov
mov
dec
out
pop
jbe
fmuls
stos
fnsave
jl
sbb
jmp
rcll
mov
mov
lods
fisubrs
in
movsl
xor
mov
xor
push
add
cmpb
mov
xchg
lea
xchg
sub
sub
dec
iret
sub
pop
in
mov
pop
rcl
enter
popf
cltd
mov
fimuls
aad
in
xabort
repz
cmp
pop
cmc
push
das
or
les
add
leave
xchg
hlt
jecxz
jnp
push
push
cmp
jno
cli
dec
xchg
jae
jnp
into
insl
xchg
sub
fdivrl
shll
stos
mov
lea
push
jge
dec
insb
sub
into
add
movsl
cmp
movsb
sub
mov
pop
loop
sbb
lods
leave
jmp
sbbl
sub
xchg
out
lcall
pusha
mov
clc
shl
pop
or
cld
daa
mov
sbb
inc
movsl
loop
mov
addr16
in
jnp
or
ret
sbb
xchg
pop
sar
pop
sarl
notl
idivl
fdivrl
cmp
mov
push
dec
stos
icebp
sbb
mov
xchg
mov
in
xchg
rorl
arpl
int3
mov
jo
push
push
xor
repz
int3
cmc
dec
into
shlb
dec
xchg
and
push
les
inc
jbe
lods
cwtl
mov
mov
stos
add
jge
pop
gs
jno
sbb
pop
mov
andl
int3
sub
lea
aad
insl
cmovp
jecxz
stc
or
outsb
ret
out
jbe
adc
xchg
jno
push
mov
mov
dec
pop
in
ljmp
cli
adc
test
nop
cmp
out
subb
jle
mov
jp
stos
push
dec
data16
in
imul
sub
loop
pusha
incl
pusha
push
inc
aaa
and
mov
test
inc
pop
xchg
and
mov
ljmp
cmpsb
mov
fiadds
and
jae
lahf
in
outsl
mov
add
cs
xchg
jecxz
iret
add
lcall
mov
test
aas
mov
cmp
aad
cmp
out
in
add
pop
ljmp
popf
xchg
mov
inc
lock
in
cld
add
aas
dec
ds
jne
xor
lret
sbb
inc
xchg
inc
lods
pop
push
clc
dec
movsb
push
imul
mov
or
leave
pushf
xchg
mov
sahf
xor
mov
jp
or
pop
mov
inc
mov
int3
iret
jno
mov
add
xchg
lods
shrl
xor
xor
mov
aas
pop
mov
jl
int3
pop
sub
sub
incb
adc
loop
sbb
adc
nop
stc
ret
mov
pop
jne
hlt
repnz
jecxz
ds
adc
shrb
fwait
mov
xchg
ljmp
lahf
lea
cld
movsl
lcall
dec
xchg
and
jge
add
adc
and
mov
add
lret
pop
mov
mov
push
sbb
inc
dec
push
mov
test
dec
fidivl
mov
jg
cmp
adc
add
insb
hlt
fsubr
pop
lock
adc
ret
cli
fwait
jo
inc
int3
xor
cli
and
in
mov
push
in
sti
adc
insl
add
loopne
and
pop
icebp
es
insb
or
pop
mov
in
mov
arpl
cmpsl
stos
pop
xchg
lea
sbb
add
add
aaa
mov
xchg
mov
sbb
repnz
adc
nop
clc
jecxz
mov
lcall
out
add
dec
cmc
xchg
push
popa
dec
xchg
jno
or
xor
adc
rclb
mov
dec
insb
cmpsl
push
mov
ljmp
test
loop
daa
ss
test
out
pop
and
sbb
cmp
jg
inc
sbb
sub
movsb
es
push
in
mov
cmpsl
mov
mov
loopne
push
into
inc
aad
jns
icebp
shll
hlt
mov
aad
dec
lea
pop
outsl
aaa
fs
and
dec
repnz
or
pop
rclb
jl
push
imul
or
mov
jno
inc
bound
adc
test
push
mov
jge
dec
add
rclb
daa
lock
xor
xlat
jno
movlps
mov
or
inc
pop
scas
dec
repnz
aaa
xor
pop
bound
nop
sarl
scas
jb
or
push
push
push
das
mov
ror
dec
and
pop
add
stos
inc
mov
inc
fmull
and
pop
and
dec
add
or
mov
rcrl
sbb
push
cmp
inc
cli
lods
mov
fxch
and
jl
pop
insl
test
xchg
adc
jae
xchg
add
js
leave
sbb
push
dec
es
inc
push
popf
cmp
mov
outsb
cmp
add
add
push
xchg
or
adc
pushf
mov
fcomps
das
sub
out
push
xchg
jb
jbe
xor
in
subb
fcomp
xchg
stc
cltd
pop
addr16
xchg
loope
or
xor
inc
pop
mov
push
stos
sub
int3
add
popl
cmp
loope
lea
insb
nop
xchg
and
fyl2x
inc
call
or
lods
add
xchg
orb
aam
int3
and
ffree
and
add
jb
mov
fimuls
test
inc
hlt
neg
mov
adc
mov
mov
notl
xor
orl
xor
orl
add
add
mov
cmp
jae
add
lea
mov
subl
mov
addl
xor
add
lea
movl
mov
mov
mov
cmp
jbe
xorl
addl
jmp
addl
or
mov
xor
andl
inc
andl
incl
add
movl
cmp
movl
jb
andl
mov
inc
mov
cmpl
jb
jmp
push
push
pushl
pushl
call
cmpl
jb
mov
mov
xor
mov
xorl
sub
add
mov
xorl
xor
xorl
sub
addl
ror
sub
xor
xorl
mov
decl
mov
andl
mov
inc
mov
cmpl
ja
jmp
call
cmpl
jb
mov
xor
mov
subl
sub
andl
xor
movl
cmp
movl
jne
add
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
movl
push
movl
cmpl
je
cmpl
jg
jmp
pushl
push
pushl
call
xor
xor
dec
mov
jmp
movl
and
mov
push
mov
subl
xor
push
mov
add
addl
mov
mov
xorl
test
je
mov
adcl
mov
mov
mov
and
mov
xor
adcl
add
xorl
mov
mov
decl
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
xor
mov
movl
cmpl
je
cmpl
jbe
jmp
push
call
mov
dec
mov
jmp
xor
movzbl
adc
mov
add
movl
cmpl
je
cmpl
jle
jmp
push
push
push
call
xor
add
dec
mov
jmp
mov
subl
mov
xor
negl
add
andl
xor
or
inc
mov
cmpl
jg
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
addl
sub
lea
xor
sbbl
jmp
inc
arpl
and
xchg
sahf
pushf
ja
dec
cmpsb
push
iret
adc
orl
xorl
mov
pmulhuw
xor
mov
xchg
rol
cli
out
imul
in
sbb
mov
and
neg
mov
aaa
out
pop
mov
inc
fdivrp
or
sbb
sub
cltd
pop
cmpsb
or
dec
adc
dec
push
fldt
dec
shll
imul
loop
sahf
xor
mov
sbb
scas
call
lock
loope
push
or
push
in
test
jne
sbb
int3
jmp
aad
lods
stos
andb
and
jne
cmp
push
gs
push
sbb
xchg
rol
pop
cmp
sarb
shll
cmpsl
jns
imul
mov
and
and
lock
stc
or
fwait
repz
sbb
pop
imul
sti
and
inc
loope
je
mov
cmp
imul
fs
adc
cmp
sarl
ljmp
push
hlt
mov
pop
cs
ss
adc
jne
outsl
pop
jge
je
jb
inc
push
sbb
ljmp
fistpll
pop
and
notb
inc
jl
ss
or
pop
xor
stos
imul
pop
jbe
test
ljmp
test
xchg
dec
xor
xchg
mov
inc
je
out
xchg
mov
fldt
sub
mov
cmpb
std
lods
fwait
add
jns
test
pop
insl
pop
cmp
jbe
loopne
or
outsl
dec
jno
test
push
jmp
loope
sbb
mov
cmpsl
push
rcrl
fldt
arpl
jns
xchg
out
rcrl
std
adc
out
je
aaa
and
cmp
pop
push
movsl
jnp
int
xor
push
fdivl
jp
xchg
mov
push
push
and
test
jecxz
xchg
jnp
rcl
test
cs
testb
fidivrl
xor
cmp
pusha
jno
pop
mov
jbe
inc
repnz
mov
mov
cwtl
loope
cmc
sub
inc
inc
jne
xchg
add
popl
xor
mov
xchg
subl
imul
lret
jo
push
loope
and
xor
ja
add
icebp
and
roll
sbb
lods
cmpsl
stos
xor
cli
or
lcall
sbb
jecxz
stos
stos
ds
sarl
fldz
cmp
andl
and
xlat
and
xor
sub
loopne
push
cli
jmp
mov
shl
pusha
pushf
rolb
mov
lock
jmp
fwait
push
and
test
sub
pushf
int3
je
jb
and
mov
adc
xor
dec
fnstcw
mov
inc
push
outsl
add
jae
jle
inc
add
cltd
into
jmp
cs
bound
add
jno
hlt
mov
push
pop
insl
cmp
xor
push
dec
or
and
add
fsts
xor
pop
or
iret
pop
lret
lret
pusha
dec
add
pop
cwtl
sbb
addl
leave
jle
ja
fcompl
or
or
and
push
xchg
mov
sub
fstl
xchg
insl
sbb
paddsb
dec
mov
test
je
sub
xchg
adc
sbb
stos
pop
std
push
inc
xchg
adc
pop
push
rolb
pop
dec
push
inc
das
mov
mov
dec
loope
fbstp
lahf
icebp
mov
add
call
scas
dec
xchg
stc
fsubs
aas
outsb
mov
jbe
std
add
sub
mov
and
test
aad
test
lcall
movsb
jb
loope
stos
lret
pop
test
push
shlb
aaa
in
into
mov
cmp
jo
xchg
and
sbbl
push
xchg
popf
jb
add
jge
cltd
xor
mov
dec
inc
fildl
in
xchg
insb
mov
push
jmp
jge
cld
xchg
fwait
sub
cmp
nop
pop
lret
inc
inc
fptan
out
sbb
cmp
jmp
hlt
xor
mov
pop
push
pushf
xchg
push
mov
popa
iret
pop
aaa
pushf
dec
std
fisubl
and
and
pop
decl
xor
xchg
mov
sub
decl
xchg
push
jns
cmc
xlat
jmp
jns
fdivr
sbb
jns
movups
fbld
adc
cwtl
je
cmp
leave
sbb
adc
xchg
in
dec
repz
adc
jl
push
and
xchg
fbstp
inc
gs
dec
mov
add
bnd
repnz
sbbl
imul
or
aaa
lods
pop
add
aad
in
add
scas
cmp
rorl
fldenv
lods
mov
frstor
cmc
xchg
mov
cmp
test
outsl
mov
call
imul
or
lods
or
add
add
out
enter
outsb
mov
insb
subl
jle
mov
leave
mov
adc
sbbb
les
aaa
jo
xchg
jge
push
ret
adc
pop
je
jne
push
jmp
insl
cmp
adc
add
jb
bound
cmp
daa
daa
fiaddl
cmp
mov
nop
inc
cwtl
out
fldenv
mov
ffreep
sub
add
fidivrs
xchg
outsw
cmpxchg
inc
rcrb
jle
in
lods
sbb
mov
insl
or
pusha
pop
into
lds
mov
into
ret
enter
sub
push
je
out
sub
sbb
push
add
lahf
insb
adcl
hlt
sbb
sub
mov
sub
popa
pop
jns
dec
mov
scas
std
pop
pop
je
push
es
movsl
jle
add
xchg
cmc
int
js
cmp
loopne
insb
cmp
daa
or
and
push
cmpl
xchg
aad
pop
in
xchg
xlat
adc
xlat
add
cmc
mov
pop
ja
dec
push
xchg
adc
inc
stc
test
je
mov
mov
jp
sbb
enter
test
add
dec
cs
rol
data16
mov
rcrb
cmpl
imul
in
repz
aaa
gs
cli
movsl
sbb
and
std
and
sub
mov
pop
lcall
mov
fadd
fnstsw
sub
jecxz
rcrb
pushf
xor
cmp
sahf
dec
shr
aaa
std
arpl
lcall
subb
pop
es
add
fwait
es
pop
es
add
add
sub
icebp
stos
fwait
add
sub
test
mov
fnstsw
lret
lea
add
mov
and
mov
jle
in
decb
cmp
out
sub
and
cmc
mov
test
push
adc
mul
push
rolb
xor
cmpb
fs
imul
into
fnstcw
shlb
or
mov
and
add
mov
jae
jmp
das
subb
push
jl
pop
mov
jg
hlt
mov
aad
sub
mov
arpl
popf
icebp
push
dec
add
or
aas
scas
push
pop
pop
jne
inc
sbb
test
dec
arpl
xchg
test
stos
push
pop
cld
and
ret
xchg
and
sahf
xor
in
insb
sbb
daa
inc
repz
add
inc
stc
sarb
repnz
cld
ret
dec
xchg
dec
jne
mov
or
jae
dec
rcll
push
mov
and
stos
loope
inc
jl
idiv
mov
xor
jmp
imul
loop
push
jnp
pop
shlb
or
inc
xchg
pop
cltd
or
jae
and
es
ljmp
jne
jl
adc
shlb
xchg
jle
mov
jne
outsb
scas
lea
orl
cmp
pop
shl
push
cmp
shlb
mov
xchg
jae
sub
sbb
cmp
jne
sub
sub
xor
or
rolb
leave
mov
and
xor
std
push
outsl
sub
cmc
xchg
js
addr16
aaa
cmp
cmp
pop
push
jnp
andl
push
data16
bound
or
lds
inc
mov
test
scas
fdiv
ret
popa
ljmp
fisubl
sbb
adc
inc
sarb
add
push
fildll
int3
imul
sti
lahf
imul
mov
testl
push
scas
jne
mov
incl
cmpsl
push
iret
adc
fstl
sbb
sbbb
mov
sbb
sahf
outsl
mov
hlt
push
mov
lods
jge
scas
mov
ljmp
dec
jl
dec
push
imul
and
pop
aas
cmp
movsl
popf
movsb
ja
fisubrs
loop
mov
dec
repnz
sub
inc
mov
ja
sarb
jnp
pop
les
rcr
dec
fmul
lret
dec
lock
pop
push
or
aam
xor
lods
je
out
out
sub
xchg
jo
cmp
jns
push
push
ret
fnstsw
pop
sub
loopne
add
adc
mov
sub
and
ds
add
ror
mov
xor
sti
inc
mov
sbb
insl
push
sub
mov
arpl
mov
inc
outsl
and
ja
test
rep
or
cli
mov
dec
das
and
xor
or
jo
xchg
inc
cwtl
cmpsl
jno
repz
aad
ja
out
and
xchg
ja
inc
and
inc
and
mov
jns
ror
gs
xor
xor
xor
push
outsl
push
jecxz
mov
icebp
aas
jb
mov
push
arpl
sbb
fldenv
jno
aas
mov
pop
out
sbb
std
stos
mov
xchg
push
movsl
aam
out
xchg
aaa
jns
sbb
arpl
adcl
icebp
addb
arpl
imul
mov
sbb
imul
das
popf
jns
add
shll
les
sar
sbb
ss
mov
loop
xchg
jle
mov
adc
xchg
addl
push
repnz
xor
xchg
cmp
jp
ja
in
push
sbb
pop
push
adc
movsb
sbb
add
cwtl
sbbl
push
mov
sub
adc
decl
push
das
push
cmp
inc
mov
sub
stos
neg
in
pop
hlt
dec
fs
ja
into
lds
cmpsl
ficomps
stos
dec
in
les
sub
sub
jmp
ret
mov
jl
jbe
push
or
inc
adcl
into
ss
xchg
inc
jecxz
xchg
cmp
mov
or
pop
pushf
cmpl
repnz
inc
pop
sbb
cmp
incb
inc
xor
sbb
cltd
pushf
add
popa
pop
popf
loopne
out
out
jno
in
pusha
push
mov
push
lods
lods
or
call
inc
xor
dec
sbb
outsl
cwtl
mov
pop
out
in
and
bound
cmpsl
faddl
mov
mov
insl
sahf
sbb
and
cltd
and
push
call
call
dec
dec
mov
and
inc
dec
xchg
dec
adc
mov
cwtl
adc
aaa
pop
or
adc
mov
cmp
sub
les
lds
push
and
out
cmp
add
rcr
subl
xchg
out
jl
sahf
insl
rcll
pop
lods
int
and
ficomps
aam
adc
xchg
cmp
mov
iret
sbb
popl
jnp
push
dec
repnz
test
outsl
or
push
pop
lock
mov
jns
push
lret
jne
xor
or
popl
jge
and
add
jns
sub
jno
cli
fdivrp
std
test
push
push
fisttpl
jne
sub
adc
push
daa
push
mov
call
mov
adc
add
jg
cmp
fdivr
or
push
and
adc
pushf
sub
hlt
test
xchg
dec
ljmp
stc
cmp
lret
mov
std
adcl
out
imul
notl
jb
in
adc
mov
mov
adcl
test
push
mov
cmp
and
leave
xor
mov
outsb
jmp
push
sbb
and
fsubrl
rcr
push
rol
arpl
xchg
sub
or
mov
jmp
dec
or
jb
loop
lcall
ret
xchg
cltd
xchg
paddusb
add
repnz
mull
daa
ficomps
adc
in
dec
mov
dec
jbe
xchg
test
pusha
loope
fs
ja
inc
daa
cs
xor
or
cmp
std
or
jb
loopne
xor
dec
and
aad
xor
add
retw
xor
test
fwait
push
dec
jae
add
test
pop
and
xlat
and
or
and
int3
popf
sar
ror
into
mov
dec
add
mov
pop
pop
cmp
adc
les
daa
testb
outsl
inc
popa
ret
pop
dec
mov
and
ficoml
mov
mov
aam
and
xchg
xor
cltd
ja
scas
mov
push
xor
ret
shlb
js
sub
push
adcb
pusha
mov
add
jl
push
or
fwait
mov
push
jmp
lret
jecxz
mov
test
push
push
and
int
js
lods
and
daa
out
adc
xchg
loopne
add
daa
jmp
outsb
adc
test
pop
scas
mov
adc
imul
mov
xchg
aam
mov
xor
or
test
adc
push
lret
jecxz
icebp
sub
lods
in
test
xor
inc
mov
pop
cli
jp
adc
or
imul
xchg
cmp
dec
iret
add
mov
outsb
call
cmpsl
mov
add
addr16
outsl
push
cmp
pusha
xchg
das
lcall
fs
aam
xchg
mov
push
addr16
adc
and
inc
lods
lea
sahf
and
and
adcb
sbbl
scas
es
push
lcall
sub
fs
lds
or
out
jg
into
test
jbe
and
lahf
or
mov
fs
cmp
jae
mov
mov
dec
fwait
pop
push
clc
push
or
cltd
xchg
fdivs
mov
outsl
pop
adc
aam
stos
out
push
ss
sarb
jae
jmp
inc
pop
loopne
fcmovb
pop
sub
test
pop
or
pop
mov
inc
and
rol
lret
imul
sbb
add
inc
mov
inc
xlat
fildll
subl
push
fisttps
not
and
daa
inc
cmp
push
inc
out
lock
and
adc
hlt
shrl
leave
inc
stos
pop
sti
loopne
shll
xor
add
push
hlt
cmp
jnp
lock
mov
xchg
mov
xorb
push
pop
inc
shrl
add
in
pop
out
pop
fdivl
out
ljmp
clc
cltd
push
jo
in
and
jno
in
inc
pusha
inc
enter
rcr
mov
push
sub
insl
sbb
inc
jb
das
ds
je
sbb
loopne
andb
das
dec
mov
push
pushf
jmp
mov
inc
push
mov
push
push
ljmp
or
xor
enter
test
mov
mov
dec
bsf
mov
mulb
xor
cwtl
movsl
push
test
lock
je
add
mov
mov
test
mov
clc
adc
in
xor
scas
fcmovu
int
add
mov
mov
xchg
subl
packuswb
sbb
adc
push
dec
inc
jg
sub
test
stos
xor
in
mov
jmp
sub
push
and
adc
pop
int3
push
mov
mov
rcrb
cmp
insb
inc
incl
mov
das
fists
adc
jbe
cmp
mov
or
cmc
xchg
fnsave
add
mov
aas
ljmp
std
push
sbb
into
je
cmp
repz
mov
pop
lret
lret
pop
xchg
fadds
sub
inc
mov
mov
movsl
inc
mov
jnp
or
es
or
loope
popf
xchg
ret
mov
mov
test
cmpsb
outsl
roll
and
mov
fsubrs
mov
add
fldcw
out
insb
jge
inc
sahf
jp
out
jge
sbb
in
mov
aas
mov
test
add
pop
mov
xchg
xchg
inc
xlat
push
mov
xchg
cmc
add
gs
filds
loop
std
push
movsl
add
or
ss
decb
cmp
sahf
mov
cwtl
xchg
call
test
mov
xchg
mov
mul
dec
mov
push
cld
data16
addl
cmp
imul
and
add
ret
jp
pop
cmp
lahf
pop
dec
in
mov
jmp
ret
sub
insb
leave
rorb
mov
fs
inc
xor
pushf
fldt
test
lcall
cli
bnd
adc
pusha
push
out
int
jno
mov
lcall
push
or
lods
add
xor
out
and
incl
nop
jmp
test
xorb
inc
ljmp
ret
aad
pushf
imul
fs
mov
test
sbb
mov
pop
or
xor
inc
sub
mov
fdivs
jne
and
adc
ljmp
mov
mov
popf
adcb
dec
sub
push
sahf
clc
sub
sbb
mov
xor
or
in
jae
out
adc
mov
inc
mov
fs
cmp
aaa
xlat
inc
and
out
add
cmp
pop
cli
mov
or
repz
cltd
sub
test
add
and
mov
sub
stos
popa
adc
and
pop
or
dec
jno
sahf
mov
push
movsl
daa
rcrl
sub
add
push
jp
dec
jbe
aas
pop
mov
mov
mov
jae
and
push
mov
cmpsb
xlat
fwait
sbb
mov
sbb
push
adc
mov
push
jo
xchg
ret
and
and
pop
addr16
jle
out
mov
mov
jle
inc
adc
mov
movsl
xor
xor
arpl
adc
push
cltd
lret
xchg
jecxz
adc
push
fucomip
or
inc
dec
push
mov
mov
sbb
cli
xchg
pop
fldl
dec
jecxz
push
cmpsl
in
xor
mov
xor
lds
shrl
inc
jne
pop
out
out
jp
adc
mov
pop
push
sti
dec
inc
fcmovnb
inc
mov
push
or
or
mov
mov
leave
mov
dec
in
pop
jbe
ret
fimull
fdivrp
cmp
enter
je
repz
popf
xor
jmp
and
push
fs
mov
sub
ljmp
bnd
mov
rol
add
lea
push
jecxz
jne
mov
pusha
xor
rorb
popf
inc
sbb
inc
cmpsl
dec
pop
xlat
icebp
dec
xor
sbbb
sub
ret
fstl
ret
ss
imul
jae
fistps
cmp
cmpsb
push
adc
popf
adc
ficompl
scas
or
pop
sub
push
push
lods
xor
lods
int
mov
sbb
fistpll
xchg
and
push
xor
cwtl
fwait
subb
lods
xor
adc
mov
cld
mov
dec
pop
out
popf
gs
stos
pop
xor
or
mov
cld
mov
mov
and
call
aaa
movsb
push
cmp
movb
sti
dec
cmp
pop
add
add
pop
sbb
bound
pop
mov
mov
jb
pop
movl
mov
stos
ss
pushf
daa
je
ja
add
fistpl
add
xchg
gs
outsl
pop
push
das
call
cmp
jns
xor
dec
xchg
cmp
loope
cmc
int3
sub
outsb
jmp
loopne
pop
enter
clc
pop
mov
mov
incl
add
jne
pop
mov
sarb
and
sbb
inc
mov
out
pop
mov
xchg
outsl
cwtl
loopne
pop
xor
enter
test
and
inc
mov
dec
sub
lahf
shrb
and
and
je
fdivr
sub
xchg
bound
cmpsl
mov
aas
rol
dec
jne
sub
jne
call
sbb
dec
jmp
xcrypt-ecb
cmpsl
mov
dec
cmp
cmc
dec
inc
out
jb
dec
xlat
popa
ret
xlat
popa
jl
cmp
scas
insl
adc
xchg
cmp
nop
leave
xor
das
xor
xor
mov
mov
insb
push
fisubs
mov
push
lods
aad
sbb
test
dec
push
pop
in
inc
shl
pop
inc
add
iret
clc
loope,pt
sti
pushf
aad
in
mov
lret
push
push
jbe
lods
pop
dec
push
push
sbb
jae
jmp
popf
mov
mul
rcll
pushf
dec
pop
sbb
sbb
xchg
mov
adc
jb
push
loop
sahf
pop
std
call
fcomp
xchg
adc
addr16
and
mov
fstpt
insb
pop
inc
inc
test
mov
xor
orl
jg
add
test
mov
ss
mov
dec
xor
sub
mov
cld
mov
jb
jl
repz
jno
add
test
scas
cltd
rol
push
scas
xor
pop
ljmp
faddl
lods
xchg
aad
nop
add
stc
pop
into
in
loopne
data16
lahf
adc
jbe
xchg
out
jmp
inc
outsl
pop
loopne
cld
sub
push
aam
jne
push
jecxz
jbe
and
adc
and
adc
arpl
dec
ss
mov
xor
pop
sub
xchg
add
mov
fdiv
inc
fisttps
loop
add
mov
dec
into
into
inc
out
mov
lahf
xchg
jae
mov
jl
lret
mov
adc
xchg
xor
push
pop
fldl
jecxz
push
jae
add
loope
pop
xor
mov
int3
or
pop
and
test
mov
test
testl
jb
add
push
mov
rolb
push
hlt
inc
xlat
movsl
mov
jle
sahf
mov
stc
push
movsl
xor
jns
je
jne
mov
loop
inc
shlb
mov
test
xchg
sbb
lods
or
arpl
cmpsb
icebp
jae
add
sbb
or
jge
scas
sbb
mov
xor
aaa
cs
mov
movsl
mov
lret
aas
orl
xchg
or
pop
insb
push
out
rcll
gs
bound
inc
imul
sbb
adc
push
jecxz
addr16
popf
sub
pushl
outsb
ffree
dec
sbb
jns
out
loopne
lret
cmp
sub
cmp
mov
xor
inc
rcr
outsb
nop
mov
mov
sbb
daa
int
insb
push
push
xchg
call
or
movsb
dec
mov
push
out
mov
shl
pop
cmp
xlat
pop
ss
inc
in
fwait
cwtl
xchg
jb
lds
aaa
pop
mov
pop
push
imul
enter
in
adc
cmp
cmp
xchg
psubsb
xor
addr16
add
xor
cmp
push
fs
test
push
pop
std
popa
mov
shlb
cmp
and
orb
adc
mov
push
cli
xorl
dec
inc
sbb
sbb
jge
inc
repnz
mov
inc
ret
inc
adc
testl
bound
in
jae
ljmp
adc
int
mov
fcoms
les
icebp
gs
adc
sti
in
xchg
cwtl
fdivrs
cmp
mov
add
loope
cmp
loop
cmp
popl
sbb
push
pop
adc
jae
stos
fcomi
sbb
jae
adcl
xchg
xlat
xor
cli
test
jb
pop
fdivp
icebp
enter
les
daa
bound
hlt
mov
shll
test
push
ficompl
mov
loop
inc
or
sbb
jne
test
xchg
sbb
pop
push
dec
hlt
int3
lods
mov
inc
xchg
and
scas
das
cmp
or
aaa
push
mov
mov
out
push
stos
mov
add
outsl
shr
popf
es
lret
fs
mov
mov
inc
out
cmp
sub
addr16
fwait
and
mov
xor
pop
xchg
movsb
sahf
fisubrl
insl
add
push
adc
inc
movsb
jnp
cmp
jnp
mov
scas
adc
lret
pusha
mov
jp
pop
outsl
pop
mov
push
movsb
lea
icebp
add
cmpsb
fbld
in
mov
not
jb
outsl
push
mov
lahf
jmp
mov
mov
inc
aad
mov
sahf
mov
inc
mov
imul
mov
test
cmc
sti
gs
inc
lea
fisubl
inc
sub
aam
fst
js
push
les
loop
jl
jle
test
orb
out
mov
cld
aad
add
push
sbb
andb
xor
roll
stos
loop
loope
mov
jo
dec
push
add
mov
jg
or
shll
inc
inc
mov
adc
jg
push
mov
mov
loop
jbe
adc
fisubrl
icebp
push
imul
fisubrl
jecxz
mov
sbb
gs
inc
pop
cmpsb
ret
lret
xchg
mov
inc
mov
call
fs
es
xchg
aad
mov
mov
shrb
adc
fsubrs
mov
stos
push
into
mov
call
xchg
xor
les
mov
dec
mov
icebp
inc
cmpsb
mov
rcll
fsts
or
inc
push
add
fidivrl
movsb
mov
inc
mov
xor
cmp
mov
and
int3
jno
xchg
lahf
sub
sti
lcall
in
mov
push
popf
jns
out
push
xchg
imul
fisttps
inc
daa
sbb
dec
mov
pusha
mov
ret
clc
aam
cmp
int
dec
pop
ficoms
push
testb
cmpsb
jo
pop
pop
cs
shlb
ss
dec
lods
in
xor
add
jns
movsl
cmovl
dec
in
jne
pop
shlb
std
cld
jg
sti
in
jmp
sbb
arpl
addr16
xchg
or
mov
in
rcll
mov
sub
cmpsb
pushf
mov
push
clc
orl
hlt
into
fwait
sub
pop
push
rolb
ss
lods
dec
adc
cltd
cmpsl
pop
pop
push
mov
in
call
sbb
adc
pop
push
fdivp
iret
cs
rorl
push
inc
shlb
in
div
add
fs
push
gs
ds
adc
xchg
fisubl
mov
xchg
fldl
mov
xchg
adc
inc
std
jecxz
sbbl
jge
push
add
push
push
push
sbb
xor
sbb
push
pop
fistpll
sub
add
xor
fsubrs
dec
test
sub
fidivrl
in
push
in
jo
int
and
lret
or
mov
divb
push
add
adc
mov
xchg
faddl
pop
popf
sbb
mov
inc
shr
or
in
mov
scas
jno
xlat
cwtl
sbb
jae
push
push
out
cmp
jmp
pop
cld
fwait
xor
push
dec
xor
pop
add
sub
xorl
sbb
scas
and
shr
mov
jmp
sbb
push
je
sub
popa
jge
cld
pop
xchg
xlat
mov
inc
shl
push
inc
mov
lret
adc
loope
mov
movl
imul
dec
or
mov
mov
rolb
stos
fdivl
fidivrs
xchg
shll
or
bound
inc
jmp
cmpsl
mov
addr16
add
jns
out
addl
iret
lea
inc
dec
mov
or
test
fwait
pop
leave
jle
mov
add
sarb
mov
pop
and
movb
loop
out
lcall
leave
add
jp
rolb
test
push
mov
lret
int3
stos
shll
pop
pop
mov
pop
adc
cli
inc
test
jmp
xlat
sbb
mov
fcmovne
fcmovu
push
sbb
jle
lret
xchg
sub
mov
test
mov
and
pop
jge
insl
aas
shr
ljmp
jg
js
pop
or
das
daa
ret
and
sbb
and
iret
xchg
sbb
jnp,pn
rcr
and
inc
aaa
ficompl
loop
sub
adc
xlat
mov
clc
mov
stos
insl
push
outsb
sub
aad
push
fsubs
sbb
push
add
dec
xchg
sbb
and
add
test
gs
test
dec
jg
mov
in
fldt
sahf
sub
xor
add
jne
and
sub
jne
inc
mov
pushf
mov
mov
xchg
cltd
xchg
xchg
push
sbb
fs
push
and
out
imul
rcrl
int3
scas
stc
sub
adc
jge
loopne
mov
cmp
jecxz
cmc
flds
push
scas
fsubrs
dec
mov
push
lock
aad
sub
and
add
fistpll
ficoms
add
cmpsl
add
dec
mov
repz
movsb
ds
jecxz
ljmp
or
mov
pop
mov
jl
nop
data16
cmp
out
push
movsl
adc
icebp
mov
imul
cmc
jmp
or
adc
nop
fld
dec
pop
add
out
dec
cmc
fcoms
mov
mov
mov
ljmp
fnstsw
je
jnp
lcall
setae
mov
outsl
mov
cld
cmp
cmp
xor
sub
loope
mov
cli
stc
inc
push
test
mov
inc
js
sahf
cmp
adc
or
enter
das
repnz
dec
inc
scas
arpl
pusha
jp
cmp
sub
scas
ret
outsl
incb
test
les
in
jg
push
push
mov
dec
fcoms
daa
outsl
dec
xor
movl
cmp
je
mov
andl
xor
addl
add
cmp
movl
jne
xorl
pushl
call
and
mov
xor
xor
mov
sub
or
mov
sbb
mov
xorl
xor
add
movl
cmp
movl
je
orl
pushl
notl
pushl
sbbl
call
mov
or
mov
mov
xor
andl
add
cmp
movl
je
xor
mov
mov
orl
mov
xor
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
push
push
push
push
pushl
call
cmpl
jb
mov
add
movzbl
adc
mov
adc
mov
sbb
jmp
test
pop
sahf
andl
sbb
push
pop
lock
xchg
out
jmp
and
orb
int3
mov
add
pusha
xchg
fimull
jo
xorl
dec
adc
ds
mov
adc
imul
pushf
fcmovnbe
mov
jne
sbb
scas
mov
dec
int3
push
push
mov
cmc
adc
sahf
dec
mov
sarl
sbb
xchg
xor
outsb
je
cs
sti
sbb
lea
icebp
int
sub
cmp
fs
stc
andb
out
or
inc
dec
mov
out
inc
sub
scas
xor
bound
inc
push
add
mov
insl
out
addr16
xlat
and
insl
dec
mov
dec
pushf
aam
inc
ja
shrl
or
jp
pop
mov
mov
mov
leave
lea
pushf
xor
xor
fmull
dec
pop
sub
xchg
rclb
dec
ss
lds
mov
pop
inc
stc
stc
mull
inc
test
pop
cmpsb
sbb
and
jmp
xchg
adc
gs
cmp
cmp
mov
clc
jp
cmp
pop
repz
dec
jne
and
in
mov
addr16
sbb
daa
addr16
popa
arpl
daa
xchg
into
pop
mov
fidivrs
xchg
scas
clc
jle
cmp
jge
adc
pop
mov
pusha
mov
fisttpl
out
inc
loope
shrb
xor
hlt
sub
in
jl
xlat
ss
xchg
adc
adc
aaa
rcrb
mov
dec
push
in
and
aad
sub
insl
test
addr16
mov
dec
bound
out
outsb
push
mov
jg
adc
test
lods
fldt
dec
loope
add
adc
fld1
call
adc
repz
int
imul
dec
add
imul
or
adc
daa
repz
adc
add
mov
add
ret
inc
insb
xor
adcl
jae
jno
cmpsl
dec
sti
adc
add
cmpsl
aas
ret
sub
cltd
test
les
daa
mov
xor
pop
into
push
test
jnp
xor
cmp
rclb
push
movsb
jp
xchg
je
into
stc
ss
rcll
inc
data16
stos
adc
outsb
mov
dec
push
or
cltd
jge
mov
into
ja
or
adc
inc
sbb
icebp
mov
mov
mov
nop
test
addb
or
push
dec
loop
shll
jp
push
roll
add
daa
enter
daa
xchg
push
int
xchg
cmp
lret
orb
cmp
cmpsl
mov
mov
sbb
add
pop
into
test
or
int
inc
jp
push
es
pop
mov
xor
sbb
call
xor
loope
mov
sti
call
into
cmc
in
jnp
jmp
pusha
fldt
dec
mov
int
push
icebp
adc
jb
pop
rolb
mov
or
ficoml
popa
scas
stos
sbb
lds
stos
rcrl
imul
je
push
inc
lahf
sbb
xchg
ljmp
rorl
jno
xchg
movsl
je
cmpsb
loope
xor
cmp
adc
push
call
push
inc
insb
xchg
in
ret
xchg
iret
cmpsb
in
sbb
inc
lock
jmp
sub
es
pusha
aaa
sbb
lret
fcomps
fstl
fs
cwtl
xor
jno
xchg
test
stos
imul
xor
pop
inc
sub
lret
mov
xchg
faddp
repz
cmpsl
fnsave
cvtps2pd
dec
arpl
jo
push
cltd
aas
movsl
mov
outsb
pop
xchg
or
push
lods
mov
pop
popa
sub
push
push
dec
outsl
xchg
mov
mov
ret
inc
mov
cmpsb
cmpsb
insl
adc
inc
mov
mov
in
mov
xchg
cltd
and
and
push
sahf
ret
test
lea
mov
ljmp
sub
inc
shll
and
jb
and
nop
dec
std
pop
in
pop
aam
gs
push
cmpb
mov
adc
inc
repnz
adc
inc
outsb
cmp
sbb
popa
clc
enter
cltd
push
cmp
mov
or
mov
shlb
shrl
mov
outsl
in
mov
stos
ja
jnp
pop
pusha
xchg
and
dec
shlb
and
cld
xor
repnz
mov
lret
mov
and
inc
in
xchg
jne
out
jl
mov
scas
mov
jns
or
jnp
cmpsb
test
xchg
sti
ret
inc
out
pop
pop
stos
aas
fimuls
mov
or
test
imul
dec
repnz
mov
out
push
sub
lods
push
leave
mov
add
ds
xchg
ljmp
imul
push
pop
mov
inc
xchg
cld
sub
inc
inc
lret
dec
mov
cmp
pusha
jl
test
ss
mov
pop
pop
mov
out
or
add
sub
mov
dec
xor
jecxz
call
into
xor
dec
stos
cmp
sub
pop
push
outsl
ret
lds
sub
dec
pop
lret
xor
jle
adc
jmp
mov
jbe
cmp
cli
hlt
mov
xchg
jp
xchg
cmp
jl
cmc
cld
mulb
ja
mov
out
mov
xchg
xchg
and
pop
out
mull
call
pop
dec
call
frstor
push
xor
out
mov
int3
mov
cmp
cltd
and
movb
pop
xchg
insl
mov
sub
adc
pop
jno
xchg
xor
push
inc
or
lds
xor
and
ds
xor
test
lgs
aad
into
mov
movsl
add
pop
das
lret
push
cwtl
int3
daa
mov
mov
mov
pop
jb
cmpsl
cmpsl
gs
ror
inc
adc
push
add
dec
rorl
mov
xchg
adc
sbb
pop
jecxz
inc
xor
lea
jno
or
repz
repz
xchg
pop
inc
xchg
push
ffreep
cmp
add
mov
mov
bndldx
sub
outsb
push
mov
cwtl
aam
push
xlat
jb
jge
lcall
pushl
imul
mov
push
pop
or
stc
xor
sub
xor
jo
rcrl
jp
jno
ret
jne
into
into
mov
in
mov
scas
mov
inc
lret
ljmp
jno
and
inc
adc
jb
mov
xchg
push
js
insb
pop
int3
mov
mov
xchg
aam
fs
or
lret
jbe
inc
rorb
stc
std
push
gs
lret
xchg
enter
cmpsb
scas
xchg
dec
mov
pop
xor
or
bound
scas
sub
scas
jo
repz
add
xchg
sbb
sub
jge
out
sub
mov
ror
mov
inc
fsubl
xor
cltd
and
adc
sub
mov
mov
jns
ds
jg
xchg
jmp
push
outsb
or
test
sbb
std
xor
cmc
inc
mov
or
push
dec
pop
cld
lods
andl
add
inc
test
xchg
jo
data16
jno
negb
addr16
xlat
mulb
loopne
mov
ja
mov
sub
xor
mov
adc
not
in
jge
jecxz
stos
fildll
mov
dec
dec
or
add
mov
dec
dec
xchg
jl
jb
xor
cmp
mov
add
sub
call
jp
mov
std
mov
push
std
mov
imul
lret
pop
mov
ja
les
push
and
jp
mov
jns
fwait
adc
repz
dec
mov
shl
aaa
xchg
andl
mov
scas
fisubrs
mov
stc
je
mov
mov
xor
mov
mov
cmp
xorb
lds
cli
pop
adc
leave
addl
mov
push
sbb
cs
call
mov
push
xchg
mov
inc
notb
sub
les
cmp
add
pop
fbld
and
and
cmpsl
out
add
cmp
mov
xchg
mov
mov
sub
or
sbb
xchg
push
mov
sbb
xchg
sbb
sti
aam
dec
popf
cmp
dec
cmp
icebp
jl
sarb
xlat
cmpsl
das
jl
test
or
add
mov
sub
ss
icebp
mov
jne
mov
pop
cmp
mov
pusha
ret
add
or
stos
sub
adc
dec
push
ret
push
lods
mov
push
jecxz
pushf
and
repnz
add
loopne
jb
sbb
lods
xor
scas
lcall
mov
inc
xor
push
repz
test
and
cmp
add
mov
sub
inc
push
xchg
cld
xor
adc
xlat
icebp
mov
clc
ljmp
mov
addr16
addl
and
xchg
in
fwait
push
and
lea
rol
fists
mov
jnp
jne
les
inc
inc
sbb
xorb
cmovb
inc
pop
pop
xchg
fwait
or
fmulp
fildll
pop
jp
pop
out
sbbb
adc
dec
push
dec
dec
rcr
or
int3
dec
inc
dec
xor
sbb
mov
mov
jb
dec
xor
sub
shlb
shlb
int3
and
rcr
adc
dec
test
adc
js
inc
imul
dec
outsb
xor
sbb
les
cmp
add
mov
push
xor
xchg
repnz
xchg
and
aas
dec
sti
dec
or
adc
push
insl
shlb
adc
cmpl
sbb
mov
inc
iret
stc
aad
add
test
mov
pop
inc
xchg
lcall
add
pop
pop
lahf
daa
sbb
jno
scas
lods
mov
aas
fistpll
inc
aam
push
cmpsl
imulb
jno
pop
lods
mov
rorl
cmp
lea
scas
cmc
jmp
push
pop
and
bound
mov
xchg
outsl
xor
test
xor
jp
sbb
shlb
xchg
ja
push
add
test
push
xchg
mov
rcll
test
enter
inc
push
add
add
sbb
ret
cmp
pop
or
aad
std
xor
call
js
dec
adc
sbb
lret
adc
clc
xchg
fisubs
xorb
aaa
cli
pushf
mov
jle
out
aad
cwtl
mov
and
mov
in
inc
mov
int
pop
data16
adc
sti
jne
nop
popa
ret
sub
add
sbb
or
cs
scas
mov
mov
rcrb
or
xchg
ds
xor
adc
mov
push
dec
adc
testb
xchg
fidivrl
adc
push
push
data16
ja
daa
jbe
ret
inc
xor
fimuls
cmpsb
jbe
mov
push
adc
mov
and
lret
ds
in
test
pop
adc
es
je
inc
adc
nop
cli
scas
mov
xchg
cmpl
mov
push
test
add
fwait
shlb
stc
pop
aaa
adc
xchg
add
inc
adc
and
fildl
int
mov
inc
pop
xchg
cs
in
ss
pop
lods
adc
cmp
cwtl
xchg
jle
insb
or
dec
xchg
pusha
les
ljmp
test
ret
aad
push
pop
les
jle
ds
popa
addr16
lods
sbb
inc
adc
je
test
out
dec
call
adc
and
push
jne
divl
sbb
mov
arpl
push
inc
pop
inc
sbb
pop
movb
aad
popf
out
inc
pop
in
mov
cmp
jle
pop
or
cs
daa
push
in
call
push
inc
push
dec
jo
adc
cmp
cmpsl
sub
pop
pop
dec
inc
pusha
mov
into
cld
mov
icebp
sbb
xchg
xchg
dec
jmp
sbbb
imul
push
cs
inc
or
ja
sbb
outsb
mov
cmpsb
sbb
jmp
hlt
jbe
cmpsl
push
jl
ljmp
ljmp
add
mov
cmp
lods
imul
mov
scas
pop
dec
pop
addr16
stos
pusha
mov
stc
xchg
ss
add
mov
mov
cmp
test
lahf
aas
mov
or
adc
sub
sbbl
dec
xchg
mov
and
mov
pop
and
or
or
stc
add
cmp
adc
xorl
jmp
and
cmc
icebp
int
push
xor
mov
push
and
sbb
adc
out
ret
ret
int3
push
xchg
jge
pop
pop
pop
push
fucomp
iret
in
dec
push
jmp
outsl
roll
xor
ss
pop
dec
push
lods
aad
lods
add
jmp
nop
mov
orl
mov
adc
push
adc
xor
rcrl
cmp
or
rcrb
call
rclb
mov
mov
adc
and
stc
clc
mov
mov
lods
shl
push
mov
iret
xchg
xchg
in
lods
dec
mov
lcall
cmpsb
mov
dec
test
aas
repnz
xchg
push
push
mov
mov
pop
cmp
pushf
push
movsl
mov
outsb
pop
ret
cmp
or
bound
out
lret
jle
jno
iret
sbb
add
xor
xor
cmc
mov
frstor
xchg
lahf
pop
es
aas
testl
popf
rcl
jo
dec
jmp
dec
and
push
xchg
or
jl
lcall
aam
insb
mov
mov
inc
das
in
jp
outsl
jge
loopne
fs
test
gs
loopne
iret
repz
mov
movsl
sub
in
ja
adc
insb
cmpsl
lahf
xor
rcll
or
and
xchg
fmull
stc
insl
sub
movsb
add
pushf
es
ss
dec
mov
mov
adc
imul
xor
lahf
mov
scas
or
mov
and
mov
aam
fldenv
ljmp
xor
xchg
cmp
scas
mov
loopne
inc
mov
ja
or
out
push
sub
out
jp
jns
cmp
testb
mov
sbb
xchg
push
mov
scas
daa
enter
pop
mov
loopne
inc
test
push
push
mov
jb
push
mov
repnz
jmp
push
inc
ret
add
int3
or
test
lds
xchg
cmp
loope
xlat
push
mov
loopne
add
mov
pop
fcoml
dec
cli
jp
and
mov
xor
mov
mov
jg
and
lret
outsb
roll
xor
aas
and
and
sbbb
idiv
shll
lret
pop
and
scas
sub
mov
int
and
fnstsw
nop
outsl
iret
xchg
mov
aaa
sbb
test
jp
dec
adc
rcr
sahf
mov
cmp
outsb
shrb
in
icebp
enter
add
push
fucomp
push
cld
push
gs
repz
mov
aas
mov
std
mov
sub
cmpsb
bound
push
mov
adc
mov
movsb
push
shrb
push
sbb
lretw
xchg
stc
fiaddl
int
int
test
fisubrl
push
mov
fwait
je
fsubs
xchg
sahf
std
sti
je
mov
or
pop
cs
imul
or
int3
xchg
jmp
in
fsubl
jne
fldenv
mov
jmp
lea
and
call
xchg
add
lea
or
pop
es
mov
fimuls
into
in
shr
mov
sbb
ja
mov
iret
and
xor
lds
loope
dec
das
mov
inc
sub
ret
mov
xor
or
lods
fildll
in
jmp
sbbb
mov
icebp
cli
adc
adc
xlat
mov
sub
dec
cmp
cmp
ss
or
push
andb
fdivl
sahf
push
call
lret
cmc
pop
pop
dec
xlat
sbb
repz
fisubrs
cmp
inc
xchg
shr
nop
in
les
std
shlb
push
aad
sub
dec
fwait
cli
and
mov
xchg
mov
xor
or
or
stc
mov
pop
lea
jg
aas
cmp
rolb
idivb
cli
mov
repnz
mov
jecxz
pop
out
in
mov
xchg
out
sbb
push
cmp
push
inc
mov
cmp
notl
imul
pop
inc
inc
stos
cmp
lods
lods
fwait
and
sub
pop
pop
test
push
pop
out
shrl
inc
aas
loopne
push
fmull
test
pop
cmp
xchg
push
add
lcall
push
and
popa
out
pop
mov
or
shrb
pushf
xchg
xchg
dec
jns
ljmp
push
sarl
adcl
icebp
rolb
daa
lods
or
test
add
xorl
pusha
fdivr
jbe
add
mov
xchg
lods
inc
fsubrl
outsl
jb
pusha
pop
repz
test
inc
je
jmp
mov
ret
mov
rolb
xchg
cli
and
loopne
decl
aam
inc
das
mov
mov
mov
push
jbe
enter
cmp
lods
out
insl
mov
mov
sub
mov
jbe
add
or
ret
lret
cmp
fsubrs
mov
jno
ret
shld
sbbb
sub
rorl
jns
nop
sbb
ret
cmp
clc
sub
int3
mov
out
xlat
out
fidivl
pop
divl
je
ljmp
cmc
sbb
test
daa
and
clc
lcall
jecxz
rolb
sbb
mov
or
js
shrl
xlat
mov
out
test
hlt
inc
inc
inc
movsb
repnz
mov
xlat
jns
xchg
ja
das
ret
mov
cld
lcall
stos
dec
popa
dec
cmpb
in
xchg
test
clc
jb
enter
mov
dec
xchg
ret
pop
inc
cmp
sbb
sbb
popa
int
push
cmp
pop
or
jle
out
and
ds
add
mov
cmp
or
jge
sahf
mulb
movsl
dec
loop
sbb
pusha
je
sbbb
push
lahf
inc
pop
cmp
inc
test
stos
lahf
inc
insb
scas
sbb
mov
int
xlat
frstor
ja
mov
add
xchg
rclb
pop
pop
lock
cmp
adc
push
stc
stos
xchg
bound
add
fstpt
add
jg
pop
arpl
jbe
sti
cmp
je
movsb
xor
or
push
cltd
mov
cmp
inc
pop
pop
push
xchg
in
int3
es
add
mov
clc
mov
lods
mov
cmc
outsb
fwait
push
pop
cmp
mov
fstpt
sub
and
cmp
push
ud1
jb
ss
inc
enter
sbb
loop
mov
test
push
in
imul
mov
push
push
std
inc
push
or
mov
xchg
inc
fwait
mov
into
aas
and
into
test
fidivrs
jae
mov
mov
inc
rorl
fcmovnu
shll
test
xchg
ljmp
fcmovu
pop
out
rcrb
sub
insl
arpl
inc
cmpsb
int
mov
out
and
push
imul
daa
aam
hlt
xchg
sbb
fldt
fs
dec
push
outsb
icebp
adc
cmp
xchg
ret
xor
mov
jmp
in
adcb
cmpsl
hlt
pop
sbb
loope
jns
mov
dec
stc
mov
idiv
pusha
popa
or
insb
outsb
mov
pop
jmp
lds
sbb
test
sbb
outsb
xor
dec
je
insb
xor
mov
push
or
leave
ficomps
movsl
jbe
mov
cmp
add
nop
xchg
movsl
into
ljmp
add
and
ret
adc
push
jno
leave
add
add
pop
icebp
or
mov
lcall
call
mov
cmp
sbb
jecxz
sub
mov
pop
fcompp
unpckhps
dec
add
sub
lea
pop
out
jmp
and
lahf
add
mov
scas
pop
loopne
mov
xchg
xlat
sbb
jl
sub
lods
mov
mov
fwait
mov
adc
mov
insl
push
sbb
stos
jno
movlps
test
add
pushf
mov
cld
inc
mov
sahf
cmpsl
movsb
xor
test
mov
int3
mov
sub
imul
lock
flds
arpl
mov
pop
cmp
loopne
adc
into
imul
clc
and
fs
or
sbb
push
push
push
mov
lcall
mov
xchg
fwait
mov
ljmp
push
nop
aas
fwait
cmp
mov
jbe
inc
insl
dec
insl
push
daa
sbb
fcoms
cli
push
or
mov
ret
iret
cltd
in
test
mov
out
cwtl
hlt
dec
loopne
mov
testl
cmpsb
jbe
mov
jb
stc
aam
sbb
imul
aam
out
in
lret
in
adc
sbb
pop
imul
fistpl
out
dec
hlt
mov
clc
iret
mov
aaa
cmpsl
jbe
inc
jl
push
or
xor
loopne
js
inc
jbe
xchg
mov
loopne
sub
add
test
stos
inc
and
push
out
data16
cmpsl
test
jo
pop
lcall
js
mov
test
fisttpl
fnstsw
or
stos
enter
test
mov
xlat
push
sbb
or
cmpsb
mov
fwait
xchg
xchg
scas
cmpsl
faddp
jmp
xor
and
jge
dec
rorb
daa
or
std
mov
xor
fsubp
mov
dec
or
shrl
mov
inc
sub
popf
pop
fs
icebp
in
subl
test
xchg
jmp
adc
shlb
scas
jmp
add
cmp
mov
sub
jbe
mov
push
ficomps
xchg
add
fcoml
adc
bound
fs
fadds
icebp
test
sbb
ret
xor
cmp
dec
roll
out
fdivs
data16
lods
push
pop
xchg
leave
xor
push
mov
push
loopne
jae
dec
xchg
rcr
sbb
and
shrb
jg
mov
jl
and
repz
outsl
mov
jg
fwait
jnp
aam
add
cmpsb
div
xchg
push
inc
jno
scas
xor
jmp
or
adc
mov
jbe
push
add
mov
ja
pusha
sub
pop
cmp
xchg
inc
mov
or
fisubrl
pop
std
dec
out
addr16
dec
popf
sti
ja
imul
pop
mov
in
pop
push
lods
mov
push
popf
xchg
jmp
sub
imul
mov
and
adc
sbb
push
test
or
mov
movsl
push
outsl
adc
cmp
mov
cli
and
sahf
mov
push
add
hlt
xor
push
repnz
xchg
and
dec
or
mov
cmp
pushf
mov
inc
in
flds
fisubl
jle
test
shrl
mov
sub
xchg
rclb
lret
es
sbb
inc
dec
fistpll
xchg
mov
fwait
popa
inc
in
pushf
shll
lret
test
nop
sub
ljmp
or
test
cmp
pop
inc
xchg
mov
xchg
std
stos
mov
inc
mov
push
jb
mov
fcomps
push
cs
imul
in
xchg
inc
enter
lods
mov
adc
pop
outsb
inc
shll
fsubp
loope
mov
rolb
ss
clc
clc
int
insl
sbb
rcrl
imul
mov
adc
push
cmp
ljmp
xorb
sbb
inc
sub
push
jo
dec
inc
in
arpl
fisttpl
jl
lret
xchg
mov
aam
cwtl
push
mov
jmp
test
int
lcall
xor
lods
addr16
fcomps
mov
cmp
sub
mov
divl
in
cmc
js
xchg
cmpsb
and
outsb
push
dec
dec
mov
push
inc
out
icebp
add
rorb
inc
push
arpl
push
inc
pushf
jp
shl
and
lcall
pop
jmp
jmp
inc
int3
pop
adc
in
into
inc
jae
xchg
push
shll
sbb
fistpll
sub
push
int
xor
ds
push
dec
adcl
es
pop
mov
adc
mov
dec
or
jnp
into
jle
rclb
stc
and
in
xchg
pop
adc
jnp
popa
dec
sarb
dec
sbb
or
in
ja
cwtl
stos
into
dec
cmp
sub
fs
xchg
ss
stos
js
fcompl
movsl
pusha
jbe
iret
shll
ds
push
das
inc
mov
push
loope
movsl
in
dec
xor
mov
fdivl
ret
stos
xor
jecxz
cmpsb
push
out
testb
lods
or
outsl
je
adc
xor
and
cmc
and
cwtl
mov
mov
add
jae
int3
loope
pop
lcall
push
aaa
mov
sahf
lea
mov
xchg
or
sbb
stc
mov
pop
ficomps
fisttpl
insl
push
add
dec
aam
test
sub
jbe
or
mov
jle
or
cmp
fimuls
and
sarb
ljmp
mov
xchg
inc
jae
fsubp
and
lahf
and
push
pop
lcall
or
xor
xchg
rorl
jle
in
mov
or
loop
xchg
ljmp
dec
loop
frstor
test
mov
xchg
or
shrb
sti
xchg
sahf
xchg
outsb
pop
jns
sub
dec
jb
mov
dec
loope
jmp
or
shl
pop
pop
mov
fistpll
sub
iret
push
fwait
adc
jl
xor
xchg
sub
sbb
out
es
adc
ret
xor
mov
jb
rolb
repnz
repz
outsb
clc
imul
mov
cmp
movsl
int
sub
arpl
lahf
bound
and
jb
cmpb
jle
inc
pop
jno
mov
nop
sub
fsts
or
ljmp
or
stos
out
sbb
sbb
jb
pop
dec
pop
push
mov
jo
shr
int3
sub
xchg
add
mov
subb
adc
test
inc
scas
js
nop
dec
leave
xor
add
sub
xchg
xchg
push
inc
into
push
push
popf
popf
mov
sub
test
stos
scas
inc
xor
add
lahf
movsl
scas
fs
pop
inc
pop
rcll
aaa
jne
imul
sti
lods
xchg
adc
push
and
sarl
mov
ja
mov
jecxz
repnz
in
pop
cld
loope
dec
mov
addr16
movsl
lahf
scas
pop
insl
and
xchg
mov
fsts
pop
cwtl
lods
and
movsb
sub
iret
cli
pop
mov
clc
and
mov
aam
and
fcmovnu
inc
mov
movsb
or
mov
lahf
jmp
into
or
lods
sti
dec
jne
ficoml
mov
push
xchg
adc
mov
lret
out
cltd
push
mov
mov
pop
in
sbb
and
enter
dec
push
push
ret
lods
adc
push
xor
lcall
out
add
xchg
out
hlt
pop
popf
inc
cmp
mov
scas
pop
loopne
loop
mov
adc
add
shl
sub
out
sahf
lahf
sbb
dec
mov
pop
and
inc
jp
mov
inc
int
es
das
mov
imul
inc
or
add
jno
dec
add
mov
add
enter
push
cwtl
inc
and
mov
pop
xchg
jmp
std
adc
jge
imul
adc
jl
mov
fcoml
pop
pop
lods
mov
ret
in
sarl
push
push
push
les
hlt
out
or
mov
dec
jp
daa
jo
pushw
arpl
leave
mov
scas
test
dec
pop
out
xchg
xor
rorl
jge
fnsave
cmpsl
cld
push
repnz
inc
lahf
jae
fwait
dec
shlb
jae
jns
cltd
in
icebp
mov
sbb
pop
jecxz
out
sbb
addr16
clc
sub
loop
mov
lock
ss
enter
jmp
dec
sub
clc
out
jo
adcl
fists
mov
xor
and
pop
mov
mov
xlat
adc
cmp
lea
xchg
stos
cmp
out
or
mov
add
aaa
fists
jg
sti
fsubl
iret
pop
sti
or
fs
jno
sub
inc
das
and
stc
das
js
jecxz
negl
mov
push
pop
jl
dec
inc
cmc
cs
inc
popf
push
cld
jmp
inc
std
or
idivl
in
cmp
lock
adc
cmp
inc
sbb
repz
sar
int3
stos
imul
jns
xor
sbb
divl
mov
xlat
outsl
mov
lret
cmpsb
sub
popa
clc
mov
lods
jl
int
sub
dec
pop
call
xchg
mov
sbb
cmp
xchg
je
pop
cmp
push
std
dec
bound
filds
xor
ret
adc
leave
sbb
fsubs
and
pop
fnstsw
aaa
pop
mov
xor
int3
xchg
pop
insb
or
add
mov
jge
lcall
loopne
cmp
dec
out
jbe
mov
sbb
lock
out
dec
sub
cltd
mov
lods
or
sub
jl
test
scas
out
fstps
cli
cmp
inc
fcmovne
jb
dec
add
and
add
stc
sbb
jecxz
adc
pop
out
fwait
sbb
inc
mov
xchg
fs
xchg
pusha
mov
inc
xchg
hlt
scas
cmp
shlb
andps
dec
popa
push
dec
bound
inc
sbb
adc
xor
or
jmp
cmp
cmp
je
pushf
cmp
sub
pop
xchg
cltd
dec
sar
in
dec
aad
pop
cltd
push
xchg
mov
and
in
orl
rcrb
int
adc
jns
cli
out
mov
mov
sbbl
add
andl
mov
mov
mov
addl
add
movl
mov
movl
jmp
or
mov
xor
mov
adcl
add
mov
xor
mov
mov
xor
andl
add
movl
cmp
movl
je
movl
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
jmp
adc
jl
mov
bound
mov
orl
orl
cmp
and
push
andl
out
xchg
lods
xor
and
jmp
mov
and
and
adc
js
rorb
cmc
dec
jo
movsl
xorb
inc
fcomip
lea
ficomps
jno
xor
mov
aaa
mov
movb
enter
pusha
jge
jnp
cmc
and
mov
and
in
jg
mov
in
add
movhps
xchg
inc
mov
lcall
notb
dec
mov
popf
fptan
iret
push
fwait
xchg
popa
icebp
adc
cmp
mov
push
jp
sub
jbe
xor
mov
jbe
dec
fadds
push
decl
jo
aam
inc
insl
inc
lcall
lds
pop
jecxz
and
cmp
sbb
mov
cmp
jg
and
popa
int
scas
jle
push
repz
int
hlt
int
inc
clc
mov
sub
hlt
dec
inc
xchg
xchg
sub
pop
shl
lods
push
sbb
and
icebp
addr16
aam
push
pusha
xchg
pop
out
in
mov
jmp
scas
jo
outsl
seta
lods
imull
mov
sbb
mov
jle
out
ja
fstpl
push
jno
out
sbb
pop
mov
cmpsl
fnstenv
mov
iret
aaa
lahf
add
jp
add
xchg
mov
mov
mov
ds
mov
rcrb
cmpsb
dec
xor
pop
mov
pop
xchg
inc
xchg
gs
push
or
js
cmp
mov
lock
ret
into
xchg
mov
stos
subl
jl
cmp
sarb
lea
inc
hlt
ds
xor
bound
or
lret
shr
in
mov
arpl
xchg
mov
pop
add
xchg
sbb
push
testl
shll
xchg
pop
shl
clc
push
push
repz
stos
xor
shlb
stos
mov
dec
xor
cmp
push
pop
pusha
test
xchg
test
dec
jp
stos
ljmp
insb
and
mov
dec
pushf
sub
pop
popf
dec
xchg
xchg
cmp
mov
andl
negb
fistl
dec
stc
lods
xchg
mov
xchg
mov
rclb
xchg
xor
inc
hlt
inc
adc
xlat
gs
scas
and
loope
cltd
lds
xor
mov
or
loopne
sbb
add
mov
sbb
inc
inc
mov
mov
or
dec
adc
ljmp
rcll
and
mov
pop
cmp
aad
imul
repnz
aaa
sub
sub
add
sbb
mov
xchg
xor
std
inc
pop
insl
lods
cmp
xorb
pop
or
add
rorb
push
cmc
xchg
scas
mov
pop
mov
in
cmp
ss
pop
pop
push
loop
and
movsl
ljmp
adc
into
push
fmul
add
hlt
pop
fsubrs
scas
or
lock
bound
sbb
xchg
mov
daa
mov
test
mov
fisubl
ljmp
add
xor
push
insb
in
scas
dec
int
mov
mov
icebp
xchg
cld
imull
mov
inc
or
lock
and
fstl
mov
add
stos
mov
bound
sub
inc
xchg
outsb
mov
fsubl
test
fstpl
stc
mov
shlb
fstl
jmp
insl
out
std
ja
fimull
aad
lock
sub
jne
pop
in
push
mov
lock
xchg
arpl
nop
orl
rcrb
test
scas
push
sub
lret
outsl
fidivl
ficompl
mov
das
pop
js
xchg
addb
cld
stc
and
in
xchg
dec
imul
aam
mov
cmp
icebp
loopne
pop
insb
cli
xlat
shrb
mov
xchg
negb
sub
insb
inc
cmpl
stos
add
das
mov
lods
jmp
scas
loop
mov
dec
loope
add
fdivr
test
adcl
clc
clc
cmp
mov
leave
add
jmp
dec
movntps
and
mov
adc
fisttpl
cltd
add
xor
outsl
cltd
mov
ret
add
popf
repnz
fucomp
push
pusha
and
adcl
add
mov
cli
or
fisttpl
imul
ss
adc
data16
pop
push
sbb
jae
jcxz
stos
sahf
inc
xchg
popa
mov
mov
outsb
lea
pop
mov
inc
cmpsl
mov
cli
enter
fsts
jb
sub
push
out
setl
adc
movntq
pusha
mov
adc
cmp
out
rcrl
push
push
inc
ds
and
and
jecxz
xor
cmpsb
adc
arpl
or
add
xor
or
xchg
xor
pop
arpl
lahf
sahf
lock
loope
mov
shll
add
lods
mov
adc
mov
out
sub
push
jmp
push
and
inc
xchg
cmpb
sub
out
mov
mov
ret
call
push
mov
xchg
outsl
dec
clc
lahf
ss
xchg
arpl
mov
mov
nop
and
fistpll
xor
call
jp
iret
xor
shll
outsb
push
adc
pushf
imul
push
out
mov
dec
cmp
iret
scas
add
push
xchg
je
mov
xchg
push
add
das
shlb
dec
out
ja
add
mov
mov
and
lds
flds
xchg
repz
or
cmp
pop
es
lret
dec
or
aad
push
xor
stos
ljmp
jb
push
xchg
cltd
mov
mov
jb
in
push
arpl
xchg
cld
pushw
mov
mov
add
ljmp
and
gs
dec
in
sub
dec
leave
das
jb
xchg
loopne
rcrl
sahf
xor
push
outsb
sbb
lock
sbb
sahf
push
scas
xor
push
lret
xchg
mov
adc
mov
sbb
popf
scas
loopne
jbe
inc
mov
mov
aas
loope
jns
pop
aam
fisttpl
cmc
mov
lahf
add
pop
xlat
sbb
inc
mov
fldl
loope
loop
nop
inc
add
addr16
dec
xchg
xchg
add
push
fdivrs
cmpsb
add
insl
cmc
fidivl
jg
fmull
xlat
mov
inc
add
xchg
lods
push
jae
sbb
and
xchg
mov
aas
push
ficoml
sub
pop
mov
cmp
dec
rolb
notb
dec
mov
or
js
cmp
mov
enter
jae
cmp
jp
insl
mov
rorb
mov
xor
popa
dec
jp
add
scas
popa
cmp
mov
in
cmp
adc
imul
nop
push
sti
xor
lret
push
sbbl
nop
mov
dec
lds
add
pop
add
xchg
out
loope
push
mov
sub
lods
and
cmp
stos
out
xchg
push
popl
sbbl
call
das
sbb
mov
mov
fnstcw
es
test
nop
fimull
mov
sti
sbb
inc
imulb
inc
or
xchg
cmpsl
jmp
lahf
movsl
jl
cmp
lea
dec
mov
scas
and
or
mov
pushf
sbb
push
cmpsb
pop
adc
test
xorb
adc
lods
nop
lahf
lahf
aad
int3
mov
ljmp
out
ret
dec
sub
mov
icebp
mov
sarl
jmp
mov
aad
push
jo
pop
xchg
cmpsb
fstpt
rcrb
cmp
out
ret
dec
dec
cmp
scas
mov
repz
dec
mov
cmp
pop
in
fwait
xor
leave
fimuls
jne
fldz
jg
daa
mov
push
aas
ljmp
ljmp
cwtl
es
pop
out
sub
in
fiadds
and
jge
out
mov
inc
lcall
add
loop
mov
sarb
js
or
dec
inc
mov
push
mov
cltd
int3
loope
sub
push
mov
push
xchg
and
dec
push
sti
dec
jecxz
cltd
rorl
in
sub
dec
mov
add
imul
mov
std
lods
in
dec
call
je
js
imul
cld
jl
add
xor
das
insl
add
lods
rcll
jl
movl
xchg
fadds
cmp
cltd
shlb
fisubs
call
aam
xor
push
cmp
cmp
mov
adc
mov
jbe
lcall
cmpsb
jge
fdiv
xchg
mov
lds
loope
lret
push
adc
test
bound
adc
cltd
mov
or
and
idiv
mov
xchg
jmp
loope
stos
cltd
xlat
sbb
outsl
xchg
sub
icebp
loope
sbb
loop
inc
jns
scas
clc
dec
cmp
aas
dec
mov
cmc
sbb
cld
fisttpl
aaa
loope
movsl
call
mov
popf
cmpsl
push
sbb
dec
adc
inc
mov
and
push
test
call
imul
jnp
stos
dec
aam
aas
lds
insb
inc
sbb
mov
push
and
pop
out
clc
dec
test
mov
cmp
add
mov
xchg
cmp
mov
or
inc
inc
cmp
popa
lods
mov
das
cmc
iret
lods
push
pop
fidivl
leave
dec
jns
xchg
in
jns
pop
sbb
fcmovnb
movsl
iret
sub
test
adc
out
push
jb
push
call
mov
enter
push
in
sbb
inc
cmc
mov
pop
mov
out
and
cmp
push
insl
je
aas
icebp
pushf
fwait
loop
mov
jecxz
xchg
fisttpll
mov
cmp
xchg
iret
bound
inc
dec
xchg
fwait
lea
mov
push
loopne
loope
sub
lods
xchg
mov
ret
adc
jae
jne
test
jg
xchg
pop
pop
outsl
enter
repz
or
inc
jl
jle
rcll
imul
pop
movsl
std
or
mov
adc
sbb
repz
fs
lcall
iret
aaa
or
fwait
fwait
or
test
stc
popf
test
sarl
das
fiadds
gs
popf
mov
and
mov
cli
xchg
or
iret
mov
mov
movsb
sub
out
mov
ficomps
cli
aas
ss
cmp
cmp
pop
xchg
push
sbb
imul
loop
out
test
fs
movsl
pop
xlat
jo
les
xchg
pop
jle
and
jbe
mov
mov
cwtl
idivb
pop
lods
aam
scas
shlb
inc
mov
add
subl
add
or
repz
insl
int
pop
movsb
adc
mov
int
mov
xchg
outsb
shrb
dec
xchg
aas
mov
sub
xchg
cld
jp
popa
jns
and
pop
stc
lock
scas
lds
dec
jnp
sbbb
xor
int3
gs
sub
jmp
cmp
lods
jbe
and
cmpsb
dec
sub
aaa
mov
int3
lds
xor
fimuls
xor
push
loope
jb
sbb
scas
xor
int3
sahf
fsubrl
clc
test
fisubs
fidivrs
adc
inc
or
inc
sbb
jg
call
mov
in
sub
mov
stos
mov
mov
stc
in
mov
ss
repnz
adc
xchg
sbb
xor
jo
push
arpl
mov
iret
out
push
push
notb
push
mov
shlb
mov
lcall
in
test
sbb
je
xor
rolb
dec
cwtl
addr16
shll
lds
add
dec
je
jnp
or
iret
and
int
leave
push
pusha
sbb
inc
mov
in
push
loopne
in
cmpsl
adc
mulb
test
xchg
ja
add
ds
push
or
ror
xchg
mov
mov
fwait
dec
in
out
fbld
add
fists
and
imul
les
mov
movsb
inc
mov
or
mov
adc
aam
movsb
and
push
pop
jne
fwait
push
xchg
dec
jmp
or
sub
in
push
xor
cli
push
clc
sbb
arpl
int
stc
or
cmp
adc
push
sti
ljmp
out
or
aam
mov
cmc
sbb
and
inc
pop
into
sub
or
xchg
adc
xchg
jno
xchg
movsl
pop
lock
loopne
dec
add
sti
ret
dec
and
imul
cmp
lods
dec
repz
bound
sub
pusha
xchg
and
mov
push
mov
jo
sub
mov
add
das
imul
pinsrw
jne
shlb
adcl
push
sbb
mov
add
imul
inc
mov
cmp
sbb
mov
in
or
cli
adc
insl
fiaddl
sbb
fimuls
lret
lretw
data16
xchg
stos
mov
imul
mov
in
dec
dec
mov
dec
adc
out
fs
cs
sti
scas
rorl
inc
xor
add
sbb
sarl
andl
sahf
xchg
cmp
clc
stos
lahf
shrl
adcl
icebp
push
mov
popf
cmpsl
rclb
push
pop
xor
lcall
jae
lock
push
and
mov
repnz
sbb
pop
xor
mov
mov
jl
std
sahf
pop
sub
je
push
push
idivb
loope
xchg
cld
pushf
lret
scas
or
add
adc
xor
mov
sub
mov
mov
mov
int
cli
xor
xor
sub
sub
add
jmp
xchg
and
push
pop
loopne
mov
mov
jno
push
jbe
out
les
aaa
mov
movsb
fimull
xor
insl
inc
sbb
adc
in
dec
jecxz
mov
loop
andb
push
dec
loop
cmp
popf
and
and
ret
movsb
out
mov
lret
andl
mov
lock
stos
sub
enter
mov
scas
mov
jae
std
and
lods
test
mov
lods
ja
fists
mov
sub
or
sbb
je
pop
adc
sbb
lcall
adcb
xor
aaa
push
ret
jns
int3
push
jne
cmc
insb
xchg
or
mov
or
cs
dec
cmp
test
cmpsl
ret
adc
rolb
push
ss
xor
sub
push
push
pushf
cltd
enter
or
inc
jp
mov
sub
and
and
fcom
fdiv
ficomps
lock
sub
imul
fs
adc
ffreep
lret
stos
lods
xor
and
test
lret
loope
xor
fimull
out
lea
add
lds
pop
loop
cli
popf
loope
ss
ljmp
cmpb
lahf
jb
push
imul
data16
mov
pop
aam
das
ret
jno
pop
out
jnp
cmc
sub
and
outsl
jmp
mov
ja
pop
sahf
es
sub
gs
shrb
add
bound
aam
das
std
jne
xchg
ret
pop
rorb
mov
pop
std
cmp
fcomps
sub
mov
add
pop
jmp
shrb
int
jl
sahf
repnz
imul
mov
loopne
dec
cli
jecxz
into
mov
arpl
int3
xor
xchg
fisubs
jo
dec
movsl
add
mov
pop
js
mov
stos
lret
dec
lods
jno
out
push
and
xchg
jnp
sbb
mov
sahf
mov
ret
and
ss
in
gs
je
sub
pop
inc
outsb
pop
nop
adc
mov
adc
sbb
xchg
ret
jp
jnp
xor
and
push
jmp
cmp
push
lods
std
popa
add
rclb
ds
cmp
sub
mov
notl
mov
data16
test
jb
into
inc
stc
push
lret
cld
je
mov
out
fiaddl
fs
xor
insl
js
xor
shl
push
xchg
cli
sub
fdivl
adc
fadd
xor
ja
pop
aad
jnp
int
add
xor
jp
fwait
jae
pop
mov
add
adc
loop
mov
cli
mov
cltd
sub
add
ret
jl
insb
jle
adc
fstpt
dec
ret
inc
aas
push
in
loope
loop
inc
or
int
jae
subl
ljmp
jo
and
shll
popa
ss
adc
inc
orb
imul
mov
gs
inc
xor
sub
sub
rcl
adc
lcall
mov
ret
test
fwait
jb
sar
pop
dec
push
fiaddl
adc
sub
sbb
loop
mov
dec
in
or
mov
mov
dec
out
movsb
stos
add
mov
jb
cwtl
or
les
lahf
jo
inc
adc
imulb
pop
lods
iret
cmp
jmp
xchg
mov
fucom
popa
pop
and
adc
shlb
ds
sbb
add
subb
or
jbe
push
fs
jle
and
cmc
call
inc
mov
sub
cmp
popf
pop
js
xor
cmp
rcll
add
sub
add
or
pop
enter
cmpsb
fsubrs
lahf
int
or
adc
ds
xor
jecxz
or
shrl
jle
mov
out
and
xchg
jle
addl
jmp
ret
add
jbe
sbb
cs
dec
and
pusha
xor
in
fbstp
scas
add
sbb
dec
mov
xor
scas
dec
aas
adc
xorb
outsb
addl
add
ljmp
add
inc
push
mov
xor
insb
push
movsb
scas
mov
xchg
loope
adc
dec
gs
mov
mov
ss
test
mov
subl
sub
adc
sub
push
lret
loop
xchg
insl
jge
imul
clc
add
stc
push
cli
sbb
sbb
sbb
stos
xchg
ret
shll
outsl
lods
jl
sbb
mov
cltd
popa
cmp
sbb
test
int
dec
sti
sub
xor
jnp
ret
lcall
xor
inc
imul
xchg
aad
adc
dec
mov
movsl
inc
mov
sub
out
xor
btc
addr16
fs
xchg
pusha
pop
add
cmp
mov
push
lods
dec
pop
jo
pushl
loop
fs
or
mov
adc
push
mov
push
cld
test
or
adc
adc
xchg
mov
shlb
adcb
ss
jae
in
xchg
int3
shlb
and
and
jge
sbb
int3
inc
arpl
sbb
ds
mov
xor
cld
cmp
in
jge
arpl
and
sub
cmp
mov
push
pop
xor
in
testl
add
push
fwait
fwait
xor
fidivl
push
in
or
fldt
sbbl
ljmp
jbe
mov
and
or
mov
xchg
addr16
dec
into
inc
sbb
leave
and
cmp
add
inc
repz
pop
div
fcoms
cltd
dec
xor
cmp
pop
dec
xor
push
or
adc
jb
push
mov
fildll
negl
cmc
movsb
mov
adc
iret
scas
sti
pop
outsb
dec
cmpsl
jbe
xlat
repnz
adc
ljmp
pop
daa
mov
xchg
inc
movsb
popa
andb
mov
pop
je
and
sub
sub
test
and
xlat
xchg
popf
das
xchg
push
dec
out
inc
jne
es
popf
push
cmp
dec
jb
sub
lea
xlat
lret
insb
gs
cmpsb
sti
pop
insl
or
mov
sub
mov
sub
out
out
sub
mov
sub
add
adc
test
inc
jle
imul
movsb
push
lock
cltd
cmp
pop
xchg
or
test
mov
adc
clc
flds
add
sub
fistps
push
xchg
adc
cmp
push
shl
hlt
pop
or
push
loope
pop
fisubl
lret
mov
mov
fisttpl
pop
repz
jb
jae
dec
push
mov
in
in
push
das
mov
lods
stos
inc
mov
pop
dec
cltd
xor
xchg
mov
mov
js
jnp
sbbl
test
xchg
ficoml
fstpt
aas
hlt
jge
push
adc
or
sahf
imul
or
cmp
out
cwtl
sub
movsl
mov
int3
in
fs
pop
mov
enter
xchg
pop
test
dec
mov
adc
shrl
loop
inc
arpl
sti
movsl
jne
stc
add
sbb
push
cmp
cli
xchg
and
dec
adc
out
xor
push
xchg
sub
xchg
js
test
jmp
hlt
in
leave
cmp
outsl
and
xchg
mov
pushf
jne
push
jno
mov
cld
jmp
push
dec
and
push
inc
imul
jle
test
mov
stos
out
mov
aaa
sub
loop
mov
imul
lret
jo
arpl
out
notb
fs
out
jle
jno
imul
jge
mov
jbe
adc
arpl
imull
xchg
test
sub
ficoms
imul
std
jge
xor
or
push
and
lret
mov
cltd
lret
cmp
dec
push
sbb
fxtract
cmp
xor
jge
popf
sbb
adcl
iret
mov
sbbl
int3
flds
lret
std
xor
dec
jnp
ret
add
loopne
jmp
and
out
inc
cltd
mov
pop
test
fimull
cmp
leave
xor
icebp
mov
mov
dec
xor
adc
in
xchg
and
std
sahf
fcmovnbe
xchg
icebp
clc
inc
push
xchg
cli
fcompp
int
test
add
xchg
pop
add
mov
and
xor
iret
cltd
shrb
fildl
test
sub
inc
jne
mov
je
rorl
loope
cwtl
ja
jp
fs
jg
xlat
push
sub
inc
push
stc
mov
or
leave
and
clc
mov
jl
sbb
loope
loopne
sub
jns
and
iret
jle
push
jg
jb
jne
and
shl
sub
icebp
add
pop
and
loopne
xlat
icebp
outsb
push
xchg
jb
sahf
jmp
mov
pop
pop
repz
jle
fcomp
cmc
mov
inc
dec
or
adc
push
test
lcall
aas
xchg
dec
xchg
cmc
int3
mov
inc
fists
push
mul
sbb
and
xor
push
pop
mov
mov
bound
sub
lea
idivb
cltd
out
xchg
nop
stos
xor
add
out
std
dec
jbe
in
push
lods
xor
and
stos
xchg
dec
lods
mov
iret
mov
xchg
mov
inc
mov
cmp
add
jecxz
push
out
loope
mov
jb
sti
lcall
cmp
repnz
ficompl
mov
ror
sbb
popf
push
xchg
inc
adc
pop
int
jle
sbb
mov
dec
mov
lock
pop
orl
shll
xor
jmp
js
fisubl
xchg
adc
shl
or
lock
add
icebp
jmp
aas
incl
cli
inc
test
mov
ss
push
cmp
cwtl
jns
int3
enter
nop
inc
leave
clc
or
inc
lea
loop
lcall
mov
jae
lahf
xor
ret
shrl
fisubl
adc
mov
xchg
pop
push
xchg
jg
pop
pop
xor
repz
sbb
fwait
push
repnz
inc
sbbb
sbb
lods
add
jae
jbe
xor
ds
push
rorl
jne
movsl
sub
into
fdivl
test
lods
es
cmpsl
sti
daa
scas
fildll
sbb
rcll
adc
and
push
pop
data16
push
dec
and
mov
loopne
imul
andl
imul
insb
mov
fcoms
or
cwtl
push
jb
stc
dec
xchg
mov
pop
pop
jnp
adc
int
mov
or
mov
sbb
xor
sti
cmpsb
movsb
add
mov
pop
shl
std
test
xchg
cmp
icebp
insb
jb
ljmp
sub
pmaxsw
jns
cmp
repnz
out
xchg
lahf
cwtl
sub
repnz
push
leave
rcr
test
daa
push
jae
stos
ds
jns
pop
mov
inc
xchg
aam
or
mov
pop
jl
mov
addr16
jb
xchg
pop
ret
sbb
stos
push
je
leave
and
ds
bound
push
inc
mov
inc
or
ret
adcl
xor
sbb
fstl
jnp
mov
sub
ljmp
in
sbb
mov
cmc
mov
pop
sbb
sti
xchg
dec
data16
xor
add
xchg
jo
mov
cmpb
fs
dec
or
mov
inc
subl
adc
dec
lret
xor
jb
enter
cs
outsl
lret
pop
pop
out
sbb
add
pop
mov
inc
scas
test
scas
pop
ljmp
jns
pop
aad
mov
inc
mov
sarl
std
or
cld
dec
xlat
jno
pushf
rol
enter
adc
movsl
fwait
mov
xchg
data16
adc
xchg
xor
pop
push
lea
add
out
inc
sub
inc
jno
ds
adc
pop
ror
aas
adc
test
and
arpl
pop
push
mov
or
mov
sbb
add
testl
arpl
pop
push
cli
sub
scas
mov
loope
test
inc
pusha
call
fsubrs
dec
fdivrp
dec
out
pop
daa
jg
mov
add
lock
adc
push
mov
enter
movsb
lds
sub
andps
mov
xchg
fnstsw
sub
xor
dec
xor
mov
jb
lea
mov
mov
popa
lcall
push
xchg
rep
dec
shl
mov
pop
ret
lods
jo
mov
sbb
push
int3
mov
adc
mov
sub
gs
pop
fs
mov
sbb
sbb
cs
idivl
rcl
pcmpeqw
sti
ja
pop
jne
enter
push
cmpsb
mov
clc
dec
inc
sub
push
mov
push
cmc
or
stos
pop
mov
sub
sbb
lahf
pop
pop
cmp
sub
call
fnstcw
jno
movsl
ja
xor
lcall
lods
leavew
mov
fnstsw
or
popl
out
sub
pop
aaa
subb
mov
iret
insl
and
inc
popf
aaa
jecxz
dec
push
aad
pop
sbb
xchg
ret
pop
ret
mov
xchg
push
pop
in
mov
xor
out
cmp
insl
and
or
imul
pop
mov
addr16
xchg
stc
out
push
sub
shll
outsb
xchg
xchg
fs
mov
and
xchg
scas
es
lds
cmp
xchg
int3
test
popa
pop
inc
add
into
cltd
xchg
xor
cmp
shrb
ljmp
insl
test
and
aam
and
test
movsl
arpl
xchg
lea
add
sub
stos
xor
je
xchg
mov
jb
insb
rcl
jb
jl
std
mov
mov
test
loop
jge
lock
mov
jne
lods
cltd
repnz
xor
mov
fwait
inc
enter
shrb
push
xchg
mov
jb
mov
sbb
call
mov
pop
arpl
pop
mov
jb
fidivrl
xchg
dec
into
movsb
aas
int3
aas
lds
xchg
mov
mov
fs
add
add
jmp
cltd
add
push
sbb
jmp
xchg
sar
sub
fbstp
lea
andb
mov
pop
cltd
fstps
mov
pop
movsb
icebp
jb,pt
sub
insl
fisubrl
mov
outsb
xchg
psraw
pop
or
shrb
fbstp
lcall
and
loopne
in
push
daa
add
mov
outsl
jmp
jp
mov
add
jge
adc
push
popa
test
lret
aaa
push
xor
in
and
lock
xchg
fs
and
jle
pop
mov
jg
je
aam
fmuls
cmp
push
or
mov
mov
adc
cmp
adc
adcb
and
push
mov
scas
cli
test
addb
fsubp
test
jp
pushf
fsubrl
pop
push
loopne
loop
sub
ja
clc
dec
repz
and
jecxz
and
stos
push
mov
fsts
popf
sbb
arpl
daa
pop
mov
fidivrl
jne
jo
inc
sti
jp
xchg
push
jg
inc
lcall
xchg
movsb
mov
pop
popf
shl
jb
mov
mov
push
pusha
pop
jbe
bound
mov
and
lea
int3
fimull
jnp
aaa
jne
movsb
jae
or
daa
mov
in
sbb
add
mov
push
mov
cmc
jns
mov
stc
dec
adc
ret
lcall
cs
lock
addb
jmp
pop
sbb
push
push
sahf
movsl
movsl
loopne
dec
in
movsb
or
in
cltd
test
cmpsb
xor
fistps
xchg
scas
pop
mov
add
cmp
add
add
adc
lcall
hlt
sub
xchg
icebp
xor
imul
subl
imul
cmp
and
clc
jl
fsubs
out
sub
or
pop
pop
inc
out
pop
rep
inc
cmp
test
cs
push
sub
in
aad
daa
fisubrs
shrb
test
xor
test
icebp
jb
add
loopne
add
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
jmp
test
jl
out
mov
sti
loopne
cwtl
mov
pop
addl
push
xchg
outsb
mov
imul
push
adc
cmpb
outsb
les
dec
loope
aam
dec
roll
and
cli
outsb
loope
lds
adc
mov
add
cli
xchg
orl
xor
xchg
mov
push
pop
daa
cli
scas
pop
add
push
add
repz
cs
dec
stos
adc
fcmove
or
sti
pop
ja
or
push
mov
mov
push
gs
xor
lcall
fpatan
xchg
xor
pushf
pop
call
cltd
lods
add
bound
push
sar
cmp
push
mov
jmp
sbb
push
pop
inc
das
push
fcmovb
push
jle
xchg
push
out
mov
je
fsubrs
mov
xchg
sbb
xor
mov
and
shl
in
arpl
dec
jl
lea
jbe
cmc
sbb
dec
lods
shlb
out
outsb
fldl
jg
pop
popa
mov
das
adc
xchg
adc
xor
push
adc
sbb
mov
inc
fidivrl
inc
btc
call
les
ret
jne
adc
int
pop
mov
jo
movsb
aam
sub
mov
aad
and
das
lret
lods
sbb
stos
out
jg
cmp
nop
and
sbb
add
mov
lods
push
mov
imul
roll
xlat
lret
nop
ljmp
fdivrl
dec
stos
dec
xchg
sub
jmp
mov
ja
popa
push
cmp
jb
in
rorb
cmp
ret
dec
jo
jmp
sarb
sub
ret
xchg
adc
dec
lret
int
test
out
in
out
lods
fcompl
imul
pop
rcrl
mov
mov
outsl
inc
or
negb
mov
or
add
icebp
jbe
jns
ret
clc
sbb
nop
pop
lock
jp
jecxz
mov
out
ljmpw
jmp
jo
adc
pusha
inc
aaa
xchg
and
adc
je
lcall
push
jg
ret
lock
inc
fiaddl
les
lahf
mov
in
push
adc
pop
imul
stos
jns
add
ret
mov
mov
xor
xor
fs
sbb
repz
push
test
pop
xchg
push
and
pop
push
fwait
pop
popa
out
lds
mov
movsb
inc
cld
cld
cmp
rorl
aas
mov
and
sbb
sub
pop
mov
daa
mov
adc
jnp
jge
xor
cmc
xchg
inc
mov
add
push
inc
adc
les
inc
clc
sbb
mov
loopne
repnz
mov
and
mov
cli
cmpsl
lret
pop
cli
dec
clc
dec
cmp
js
and
mov
mov
dec
cmpsl
inc
jo
rcl
lods
inc
mov
adc
mov
std
outsb
leave
out
push
add
jp
push
js
lds
mov
and
push
push
push
leave
adc
popf
lds
stc
je
adc
pop
shrb
testl
in
ja
in
in
mov
push
pop
arpl
sar
adc
push
xchg
iret
popa
push
or
cmp
movsb
fdivs
fimull
cmp
scas
insl
out
mov
jmp
push
clc
mov
out
dec
xchg
add
push
xchg
out
mov
ret
test
jb
add
sbb
test
lcall
test
or
arpl
cwtl
je
xchg
mov
or
jnp
add
les
sbb
in
stos
insb
jo
inc
daa
mov
xchg
pop
inc
fwait
movsb
ret
xchg
xchg
jae
in
sbb
dec
jge
pop
xchg
jmp
ret
inc
mov
jne
test
lods
xor
fcmovb
lods
xchg
in
or
adc
jp
lods
idivb
dec
and
xor
sub
test
mov
std
sbb
mov
jp
jle
mov
leave
mov
mov
dec
xor
mov
pop
aas
push
das
mov
cmpsb
push
bound
movsb
and
adc
aas
push
push
xor
push
push
scas
std
inc
movsl
andb
je
adc
in
sbb
xor
xlat
dec
xlat
cwtl
cwtl
into
and
or
xor
pop
inc
mov
cmpsb
cmp
mov
imul
dec
adc
mov
das
push
bound
outsl
adc
xlat
dec
aam
pop
jno
and
je
and
int3
mov
cmpsl
mov
pop
pop
ret
xchg
popa
mov
divl
call
mov
mov
pop
ret
sbb
push
movsl
stc
data16
jecxz
dec
out
shlb
mov
rcr
in
repnz
decb
ficoms
in
mov
mov
sbb
push
mov
rorl
push
subl
mov
dec
insb
test
clc
lea
inc
lods
scas
sub
sbb
xlat
mov
out
cmp
add
ja
mov
lretw
ss
testl
andb
jecxz
pop
jg
xchg
mov
aaa
xor
cli
or
push
into
lods
leave
dec
sbb
inc
addr16
xor
jg
lds
mov
xchg
add
adc
mov
inc
xor
int3
loop
dec
mov
fwait
sub
adc
call
stos
nop
cmp
test
push
not
stos
jbe
push
push
popf
lret
je
jle
ja
in
fidivrs
scas
sub
adc
jae
stos
push
or
mov
icebp
rcll
adc
roll
xchg
aad
xor
ja
scas
lea
lret
or
cmp
xor
add
pushf
xor
lret
mov
daa
dec
outsl
push
push
sbb
imul
dec
xor
test
dec
jmp
outsb
neg
lcall
fstpl
jg
lret
xchg
insl
clc
enterw
out
pop
add
lds
mov
sbb
adc
mov
inc
xor
adc
mov
sbb
cmpsl
mov
inc
mov
mov
xchg
aam
in
nop
cmp
movsb
or
dec
aas
adc
fiaddl
pushf
imul
nop
add
inc
in
outsb
add
xor
leave
stc
cmp
add
jge
mov
test
lahf
lahf
popa
lcall
stos
push
xchg
push
xlat
pop
xchg
js
popf
pop
lods
nop
aam
repz
sbb
imul
outsb
sti
jnp
push
cmp
pop
and
mov
and
out
std
bound
out
hlt
inc
dec
aad
shll
pop
movsl
out
jae
jle
subl
add
jns
das
pop
push
pop
inc
cmc
mov
nop
out
cwtl
pop
xchg
or
sub
fistl
mov
mov
scas
icebp
jmp
and
mov
jne
ret
sbb
fsubrp
pop
arpl
sbb
dec
mov
push
into
xchg
mov
cmpsl
repz
jge
cmpsl
mov
cmpsl
cmp
xchg
pop
sub
hlt
lahf
mov
jl
inc
mov
les
sti
push
fisubrl
mov
cmp
cmp
mov
rol
dec
pop
xchg
mov
mov
push
xchg
in
or
mov
test
out
xor
imul
lahf
stc
dec
mov
adc
cmp
pop
mov
in
imul
cli
mov
mov
mov
xor
push
scas
inc
movsl
imul
dec
and
pop
bound
xchg
inc
xchg
or
dec
into
rorb
cmp
imull
jae
aad
fstpt
fdivrs
fcomp
stos
sbb
push
jbe
pop
lret
mov
xchg
roll
dec
jo
movsl
test
inc
outsb
les
xchg
jns
ja
aaa
add
bound
fs
adc
sub
stos
adc
imul
pop
inc
mov
mov
or
insb
mov
jmp
dec
imul
addr16
lods
mov
adcl
fstl
enter
push
pop
outsb
loopne
rcll
out
test
shlb
mov
test
fld
lea
inc
sahf
cmpsb
sub
hlt
outsl
mov
add
rcr
in
mov
mov
adc
movsb
push
pop
ds
xchg
out
push
xor
adcl
movsb
aad
cltd
clc
jne
push
pop
push
jl
xchg
mov
arpl
push
push
xlat
and
cmp
aam
jae
inc
push
pop
cli
inc
daa
mov
adc
imul
mov
test
xchg
mov
cwtl
jns
and
outsb
add
xchg
push
xchg
add
jnp
push
xchg
xchg
sbb
das
rcrb
int3
jmp
add
add
cmp
jg
idivl
lcall
fwait
test
mov
push
mov
inc
cli
out
adc
mov
cmp
pop
aaa
or
jecxz
aas
pop
mov
fdivl
sbb
js
jo
outsb
test
adcl
pop
mov
cmpsl
inc
lret
cltd
popa
nop
addr16
ja
mov
in
xor
sub
arpl
int3
movsb
jno
dec
pop
jns
or
cli
leave
adc
ret
lcall
mov
or
pop
jbe
and
test
mov
or
sub
adc
mov
int
jbe
add
lds
rorb
xchg
mov
xor
pusha
add
and
les
pop
add
jp
stc
scas
mov
leave
jg
and
ds
adc
adc
jb
xchg
inc
add
sbb
jne
scas
testb
cmp
frstor
inc
dec
shrl
insb
or
sti
push
sbb
sub
add
xor
cwtl
nop
sbb
rcll
jle
fdivs
leave
popa
loop
jne
scas
iret
arpl
aad
xchg
das
jp
test
call
mov
out
cmp
imul
xchg
dec
lret
scas
xchg
pop
xor
jmp
insl
mov
ret
dec
decb
sahf
adc
pop
cld
xchg
mov
decl
cmpl
xor
fnstcw
cmp
push
ja
add
jo
pop
call
call
in
adc
push
sbb
cmp
cwtl
int
inc
sub
jg
mov
jo
mov
pop
and
mov
push
cmp
enter
sub
cmp
fwait
lods
adc
into
xchg
aas
outsb
add
pop
inc
cmpsb
test
pop
sbb
mov
out
jg
orl
and
lcall
rcll
sub
test
stos
push
sub
popa
ret
jmp
mov
shll
or
dec
pusha
dec
mov
cs
call
pop
and
sti
filds
mov
outsb
cmp
dec
lock
sbb
inc
or
jns
aam
les
mov
fnsave
jg
push
mov
jp
ljmp
mov
aaa
mov
xor
rorl
movsb
xor
ficomps
jl
fmull
or
int3
idivb
cmp
js
jne
push
sar
ret
push
imul
mov
inc
mov
xchg
ja
push
mov
mov
add
push
fsubrp
orb
fbld
lock
add
idivb
mov
cld
les
into
ret
fstl
hlt
xchg
mov
adc
mov
mov
pop
fs
xor
int
popa
mov
dec
ret
out
ret
lods
xchg
pop
loope
jl
clc
std
ficoml
daa
mov
cld
into
add
pop
mov
mov
dec
xorb
sub
cmp
lahf
stos
arpl
inc
sbbb
scas
rolb
add
xor
mov
xchg
stos
push
into
imul
mov
mov
not
push
scas
and
out
leave
fmulp
aad
inc
nopl
xor
adc
in
jecxz
sbb
addr16
jle
shl
outsb
sarl
in
imul
and
mov
or
inc
shll
fdivr
push
and
lds
jne
divb
aad
mov
mov
xchg
sub
push
mov
in
dec
mov
in
arpl
dec
rclb
inc
xchg
and
scas
std
dec
scas
mov
push
aas
and
inc
sub
jl
clc
ss
pop
arpl
bound
jmpw
inc
sbb
inc
lods
push
dec
dec
mov
xchg
mov
shll
cld
inc
shrl
inc
jne
daa
mov
jg
xor
push
stos
aaa
mov
push
iret
ret
add
jmp
fwait
test
adc
scas
insl
add
push
xlat
fucomp
add
inc
jns
int
pop
shll
xchg
xchg
sub
xor
enter
mov
pop
aam
cs
pop
mov
out
inc
pop
inc
insb
or
lock
insb
mov
popf
insl
cmp
fcomps
lret
xor
rolb
jnp
imul
in
test
das
ja
pop
mov
dec
or
aad
pop
mov
int
mov
mov
and
repnz
sbb
in
and
int
mov
arpl
sbb
movsl
pusha
lea
mov
cli
iret
adc
dec
inc
enter
cs
lea
push
mov
shrl
nop
mov
call
les
jns
aaa
adc
cmp
jg
testl
adc
pop
or
flds
sub
mov
int3
mov
mov
loop
lret
push
out
sbb
loope
sbb
dec
or
out
imul
cmp
and
xor
push
fistps
scas
shll
adc
sbb
subb
fdivrp
ljmp
fwait
sahf
sub
xchg
and
cmp
or
in
push
js
xorb
mov
das
in
jne
pop
lods
call
out
icebp
mov
lahf
mov
inc
ja
les
test
in
int3
xchg
mov
pop
int
mull
adc
fimull
daa
mov
movsl
jae
adc
dec
sub
pop
inc
loop
push
sub
and
cmpsl
mov
insb
fstpl
lahf
in
clc
fsub
cmpsl
sub
jae
cmp
push
popa
sbb
gs
mov
dec
xchg
aam
xchg
add
pusha
dec
cmc
mov
jle
mov
mov
cmpsl
loope
xchg
movsb
push
mov
cmp
outsb
cmp
rorb
rcrl
jb
insb
movsl
push
pop
or
and
out
mov
addl
sbb
xchg
jge
jge
bound
mov
jp
out
jge
add
icebp
shll
dec
test
enter
aam
cwtl
shrl
push
or
mov
jne
clc
ret
js
daa
in
aad
or
in
stos
push
loopne
jecxz
jno
push
add
sub
loop
lods
ds
inc
sbb
and
js
and
add
add
imul
filds
roll
add
nop
dec
jge
jno
sbb
sub
cmp
xchg
popf
loop
mov
or
jle
filds
clc
dec
aas
mov
jge
flds
sbb
push
mov
and
xor
popa
push
arpl
sbb
stc
jmp
mov
sarb
scas
jg
pop
enter
in
cmp
sub
scas
loopne
mov
xor
jnp
push
stc
divl
les
inc
aam
in
cld
cmp
aam
outsl
lahf
js
lds
xchg
xchg
ljmp
das
mov
icebp
je
jl
jno
scas
sbb
pop
adc
xor
pop
adc
fsubrl
aas
fwait
in
cmpsl
xor
loop
fwait
mov
cmp
sahf
imul
sub
aam
scas
push
sbb
jle
ret
mov
push
xchg
xor
lods
add
lds
ljmp
fdecstp
jbe
lods
int
je
in
fwait
adc
mov
dec
call
cmpsl
aaa
ljmp
jbe
mov
fistl
jmp
pushf
setne
mov
sbb
ja
cltd
leave
pop
lcall
cli
sbb
push
mov
pop
xorl
testl
rcl
enter
call
or
adc
test
sbb
jmp
hlt
or
fldl
leave
int
pop
jns
mov
adc
sbb
cmpsl
and
cltd
mov
add
out
mov
call
nop
mov
into
loop
cmp
mov
int3
std
aaa
pop
pop
fcoms
lods
inc
and
jl
sahf
rorb
sbb
outsb
testb
imul
addb
mov
cmc
sti
pop
or
jmp
or
mov
imul
mov
adc
xor
cmp
filds
pop
mov
das
xchg
jo
fucomip
lods
outsl
xor
pusha
push
imul
mov
lods
adc
push
xchg
xor
shll
mov
stc
push
mov
pop
fnstsw
sbb
imul
popa
jns
clc
sub
popf
dec
arpl
jo
not
cli
mov
lods
addb
divps
and
dec
imul
pop
pop
push
xor
cmpsb
ret
lret
mov
in
in
push
inc
popf
fimuls
mov
addb
xor
adc
es
jo
cmp
aam
adc
and
inc
add
ja
repz
scas
rorl
je
xor
or
repz
lock
inc
xor
icebp
xor
out
insb
aaa
insl
push
xlat
fisttpl
mul
push
push
pop
mov
iret
lret
iret
stos
add
lcall
mov
stos
add
dec
fcompl
cs
lcall
lods
lods
jne
add
mov
dec
mov
shl
xor
add
aaa
fwait
xchg
loope
mov
movsb
dec
xor
xchg
ret
sub
push
lea
out
popa
sbb
insb
adc
sbb
xor
lret
jbe
add
mov
dec
jecxz
sub
ret
mov
jne
or
push
loopne
mov
push
fldenv
je
sbb
sbb
pop
addr16
xor
mov
pop
mov
faddl
sbb
push
mov
int
lock
sub
sub
jmp
lret
push
add
sarl
in
dec
mov
xchg
inc
sbbb
ret
das
mov
xchg
push
mov
adc
int3
popf
popa
daa
aam
xchg
ja
push
fbld
and
mov
scas
daa
in
sub
addl
adc
lret
xorb
pop
cmpb
pop
mov
scas
push
dec
adc
mov
addr16
popf
movsl
or
or
inc
and
fstp
int
mov
leave
inc
inc
and
push
je
call
dec
pop
xlat
scas
lcall
dec
into
dec
into
xchg
push
stos
stos
sub
cmc
dec
dec
aad
sahf
sub
out
subl
and
loope
fcomps
mov
add
push
loope
movsl
dec
xchg
ficompl
out
mov
out
mov
lret
xor
lcall
imulb
sarl
cmp
dec
test
in
aaa
sti
xchg
push
ss
push
mov
in
mov
out
push
xor
ret
sbb
sub
add
push
inc
mov
dec
lods
xor
std
bound
inc
dec
mov
dec
enter
mov
aaa
cmpsb
mov
inc
jecxz
inc
push
repnz
pop
frstor
jg
push
fsubl
jecxz
mov
lahf
inc
dec
push
add
xchg
ficomps
arpl
adc
dec
jmp
mov
test
shrl
xchg
pop
in
aam
pop
cmp
enter
cmpsb
push
bound
mov
sbb
pop
popa
jbe
sahf
nop
repz
push
stos
cmp
sbb
mov
lret
mov
mov
faddp
outsl
xor
enter
rclb
add
mov
out
cmp
movsb
push
add
add
jl
push
cwtl
cli
xchg
sbb
icebp
iret
pop
stos
xchg
add
fnstsw
jne
jno
fwait
movsb
sbb
movsb
testb
lret
cltd
sbb
data16
gs
xor
pop
out
stc
jbe
sbb
lcall
sub
popa
sti
ficomps
sbb
mov
fs
aaa
mov
mov
and
int3
jge
mov
mov
xchg
faddl
pop
fistpll
ret
dec
imul
pop
mov
das
lods
xchg
sbb
shrb
jg
aam
mov
add
nop
and
jg,pn
and
jb
cs
mov
xlat
xor
test
daa
sub
jp
mov
xor
addr16
sub
nop
lea
sub
add
inc
fcomip
into
sbb
les
hlt
cmp
xchg
out
add
nop
xlat
ss
xor
mov
push
adc
ljmp
loopne
fildl
loopne
mov
xor
adc
cmp
lods
fcmovbe
mov
adc
mov
xlat
in
push
jge
inc
add
andb
shll
mov
icebp
clc
cwtl
stos
push
rorb
lds
ds
and
push
adc
adcl
adc
out
insl
xchg
adc
lds
adc
push
data16
xchg
mov
stc
dec
cmp
pop
loopne
sub
inc
and
and
mov
pop
in
mov
sub
xor
movsl
inc
pop
pop
cmc
xchg
out
fcmovne
flds
adcl
jne
sbb
andl
out
fcomip
clc
shl
push
gs
icebp
sub
les
lcall
pop
aad
inc
inc
or
adc
mov
insb
cltd
mov
inc
loopne
nop
mov
dec
js
jmp
xchg
aaa
test
out
pushf
scas
addb
and
gs
sub
mov
pop
mov
loope
out
enter
push
std
mov
push
int3
xchg
cmp
lds
rcll
mov
push
imulb
cltd
xor
lods
lret
push
xchg
and
adc
pop
lret
aas
mov
and
enter
mov
sbb
outsl
mov
adc
xor
dec
xchg
test
std
or
in
sub
pop
repnz
xor
popa
stos
adc
shlb
or
test
pop
jnp
pop
adc
dec
cld
je
gs
adc
je
jae
pop
pushf
add
and
sub
or
mov
out
aam
mov
std
pop
es
loope
in
std
in
push
mov
jl
cli
mov
aas
popa
or
dec
inc
push
xchg
mov
and
push
jns
icebp
or
add
bound
test
mov
or
cmp
cmpsb
add
out
test
cltd
sub
pop
mov
lods
jp
es
out
xchg
adcl
repz
outsl
leave
pop
or
jecxz
inc
or
mov
jno
testb
aaa
std
sti
les
movsl
mov
loop
nop
pop
lret
sbbb
or
inc
mov
icebp
fcmove
jmp
mov
push
repz
lods
add
mov
mov
cli
ljmp
mov
push
es
lock
iret
jl
cmp
mov
addr16
popf
test
ljmp
rcr
cs
or
dec
std
xchg
aam
and
js
pop
adc
sti
addb
push
xor
sbb
mov
andb
xchg
rclb
popa
test
adc
clc
pop
mov
int
jo
scas
pusha
out
popf
mov
inc
fstpl
out
addr16
in
ljmp
mov
ja
andl
xor
scas
fistpl
fbstp
cmc
xor
pop
sbb
cld
shrb
movsb
add
and
dec
ja
int
sbb
lret
iret
das
std
dec
adc
sbb
sti
inc
and
dec
cmpsl
or
jo
aas
data16
hlt
arpl
test
lahf
mov
into
aas
pop
lock
out
scas
test
and
and
rorl
jno
loope
mov
fs
adc
scas
push
mov
dec
xchg
arpl
cld
jle
xchg
mov
outsb
inc
pop
xchg
pushf
cmpsl
jb
adc
loopne
ret
inc
and
sahf
roll
mov
lds
and
subb
in
stos
jle
leave
mov
int
sub
sub
and
jg
dec
inc
lock
push
jmp
lcall
fisubl
mov
inc
xchg
pop
ret
add
cmp
inc
mov
mov
or
inc
sbb
jg
push
pop
imul
ret
out
in
cli
fwait
cld
lret
mov
das
jp
push
psrlq
mov
adc
scas
xor
leave
iret
fildll
iret
sbb
test
out
add
gs
std
dec
sarl
dec
jle
popa
arpl
mov
add
pop
mov
mov
imul
mov
lods
outsb
shll
pop
int3
adc
dec
repnz
je
fsubr
in
fnsave
bound
mov
mov
les
mov
and
cmpsb
jmp
frstor
pop
push
fdivl
sbb
dec
xchg
cmp
loop
xlat
dec
mov
xlat
gs
and
cltd
mov
cmp
lds
and
sub
pop
nopl
mov
cmp
pop
and
loop
dec
adcl
push
mov
xlat
jp
cmp
sub
adc
fwait
out
outsl
jns
sub
inc
popf
xor
mov
out
fcoms
insb
sti
lods
insb
push
andb
xchg
int3
movsb
ret
xchg
loop
jge
cmpb
lock
dec
cmp
nop
adc
movsl
adc
aad
push
push
jl
jne
mov
adc
addr16
aas
cmpsl
adc
icebp
sbb
jge
jg
test
push
loopne
sahf
push
data16
and
test
mov
xchg
repz
out
add
inc
dec
push
push
sbb
aaa
out
mov
jp
mov
or
mov
cmp
outsl
and
das
jb
adcl
mov
imul
out
pop
xlat
mov
mov
xor
ret
sub
mov
addr16
jge
popl
test
ficompl
int
mov
mov
sbb
dec
pushf
scas
shll
pop
decl
enter
lods
out
fcompl
enter
sbb
js
enter
jle
movsl
leave
movsb
xor
or
add
js
jmp
rclb
mov
or
push
push
mov
xchg
stc
cmp
inc
sub
int
jl
or
and
sti
insb
subl
loope
bound
jnp
cmc
adc
fadd
imul
clc
sub
inc
inc
push
sbb
rorl
add
mov
pushw
scas
or
pop
in
movsl
fsub
in
dec
and
sahf
shr
mov
pop
das
cmpb
roll
jne
out
aaa
xchg
push
ja
mov
xor
fnsave
or
imul
sbb
insb
pop
fcompl
cmp
in
sti
roll
idiv
xchg
repz
xchg
pop
mov
xchg
cmp
ficomps
stos
add
das
xor
pop
inc
lods
pop
or
xchg
mov
sahf
cltd
ret
cld
xor
pop
and
sbb
xchg
sbb
or
inc
into
dec
xor
std
push
cmp
lods
cmpsl
sbb
andb
sub
lock
shll
cmc
push
ds
repnz
push
pushf
add
loop
pop
xchg
pop
xchg
or
push
mov
and
test
dec
rcll
or
xor
xlat
jge
gs
scas
test
roll
jle
fisttpl
inc
out
jb
leave
clc
and
and
sub
push
mov
xor
xchg
mov
dec
aam
and
adc
in
sbb
jns
outsb
movsl
fisubrl
imul
je
mov
inc
adc
in
mov
push
roll
data16
data16
xor
movsb
cmpl
bound
ds
lahf
add
dec
mov
mov
inc
scas
push
fwait
and
add
notl
subl
add
mov
daa
cmp
fcoms
push
loope
insl
push
decb
ficoms
popa
add
fsubrl
shlb
pusha
mov
fsubrs
push
xchg
fs
out
jge
outsl
sbb
jo
lock
dec
mov
pop
xor
in
pop
iret
xor
xchg
gs
push
jns
test
mov
shll
add
jmp
adc
aam
xchg
repnz
push
push
sub
dec
pop
ret
adc
je
lods
popa
xchg
cmp
test
rcrb
incl
mov
clc
stos
ret
mov
shlb
test
push
pop
mov
call
imul
popf
jb
mov
push
and
subb
sub
sbb
fidivl
rcrb
stos
sub
negb
addr16
ljmp
mov
cmpsl
cld
shlb
xchg
in
gs
outsb
push
movsl
adc
bound
loopne
ret
push
pop
jne
add
stos
jbe
lret
mov
mov
cli
sbbl
sbb
cmp
std
leave
stos
data16
les
enter
loope
xchg
or
sbb
iretw
mov
add
ljmp
ja
jmp
scas
pop
mov
arpl
cs
adc
popf
xchg
push
lock
aam
test
mov
push
sub
cli
in
adc
in
cmp
call
arpl
jae
sbb
xor
push
cmpsw
pop
push
popf
inc
sub
movsb
pop
lds
xorl
cli
daa
mov
jp
fdivrp
push
mov
sti
sbb
les
repz
and
repnz
cmp
das
jg
rorb
adc
adc
push
dec
xchg
js
mov
add
iret
lea
popa
out
inc
arpl
cltd
mov
movsl
stos
and
cmp
ss
pop
dec
mov
add
sti
pop
inc
sbb
pop
fisttpll
cmp
leave
xchg
rorb
or
inc
mov
xor
test
cmp
jae
mov
inc
stos
mov
xor
adc
or
adc
shl
insl
cwtl
movsl
stos
sbb
mov
jp
xor
enter
and
pop
push
std
push
jnp
mov
sub
outsb
lods
jmp
lock
mov
cmp
jmp
out
adc
xchg
fisubrl
push
stos
lret
and
jo
fmull
int3
outsl
lock
inc
push
clc
movsl
fst
mov
adc
arpl
fstpl
jmp
popa
int
out
adc
inc
ret
xor
or
mov
pop
xchg
clc
push
lods
lcall
cmp
test
rdmsr
mov
xchg
pusha
movsl
lret
mov
mov
push
movb
in
jg
xchg
call
pop
inc
xchg
jmp
popf
add
xchg
adc
pop
in
outsb
mov
addl
das
or
or
pop
js
pop
cmpl
cmp
pop
in
sbb
cli
pop
mov
test
pop
jnp
jno
out
out
leave
mov
xchg
in
mov
cmp
add
xchg
addb
fucomp
stos
xorb
js
cs
push
push
pop
pushf
mov
clc
cmpsb
es
and
add
mov
scas
lea
insb
lods
enter
xor
dec
adc
loop
jl
adc
stos
cmp
test
xlat
out
xor
mov
push
mov
adc
pop
aas
and
push
sbb
push
stos
xor
mov
jae
sti
push
mov
mov
inc
mov
lods
jae
cs
sbb
and
out
cld
push
aaa
leave
in
gs
and
and
push
adc
scas
jbe
jns
add
int3
cltd
cmp
or
and
jnp
sbb
cmpsl
push
popa
dec
sbb
add
xchg
pop
or
dec
lcall
push
and
rolb
movsl
adc
inc
in
xchg
dec
cmc
in
cld
rolb
int3
icebp
inc
test
mov
dec
or
aas
jecxz
shrb
movsl
leave
clc
push
mov
adc
notl
pop
sbb
sahf
incb
test
mov
test
sahf
push
mov
out
pop
mov
xchg
add
imul
in
test
arpl
xor
xchg
jns
sub
fisubs
js
sbb
add
xlat
dec
mov
inc
loopne
cmpsb
js
pushf
and
inc
test
icebp
add
insl
dec
sbb
add
and
mov
or
sbb
push
loopne
imul
xchg
inc
shll
data16
xor
mov
fwait
or
stos
cmc
jbe
ss
repnz
fistl
mov
addl
clc
jecxz
mov
inc
movsb
es
xor
sbb
dec
or
nop
les
jmp
pop
mov
jg
int3
inc
add
push
mov
repz
ljmp
pop
arpl
sub
mov
mov
xchg
xchg
cmp
loopne
jl
rcll
jb
xchg
ljmp
mov
dec
daa
mov
fnstcw
mov
or
fistpl
cmc
aad
pop
scas
jge
inc
call
aad
in
dec
lcall
jbe
fmul
adc
push
sarl
mov
out
adc
repz
and
jo
and
cmp
fsubs
fucom
lahf
jle
xchg
push
test
push
into
mov
lods
pusha
add
mov
pop
addr16
cmpsb
shlb
pop
mov
cli
mov
pop
or
cwtl
jg
xchg
bound
cmp
test
push
xor
movsl
fnsave
test
push
gs
leave
mov
and
inc
pop
cmp
adc
fwait
es
push
ljmp
and
mov
push
popf
or
jae
jmp
repnz
cmp
push
dec
jp
push
out
sti
cltd
fistl
popa
icebp
fcompl
push
sub
lret
sub
sbb
inc
push
xchg
pop
mov
sbb
andl
lds
mov
lods
xchg
rorl
add
clc
inc
rclb
mov
cwtl
shrb
frstor
lahf
lds
mov
rcrl
cmp
mov
mov
jmp
add
into
js
xor
mov
add
ja
jne
sbb
pop
sbb
sub
or
xchg
dec
xchg
out
mov
enter
jl
shll
testb
push
jno
popa
ljmp
lret
rorl
ja
sti
xchg
shlb
insl
mov
in
inc
out
lea
fcmovnbe
fucomip
jno
pop
test
pop
je
psrlq
cltd
xlat
cli
test
xor
int3
jae
jno
adc
mov
nop
mov
sub
and
das
push
jg
testb
lea
enter
push
ljmp
mov
in
gs
dec
mov
sub
push
xchg
fldenv
das
test
mov
or
dec
loopne
aam
pushf
add
movb
loope
insb
sub
dec
pavgb
aam
or
popa
mov
cltd
cmp
stc
jns
jle
cmp
xchg
cs
push
mov
mov
outsl
pusha
outsb
xor
int3
and
xchg
pop
xlat
or
or
jge
arpl
sub
call
push
xchg
cmc
test
add
xlat
adc
ja
popf
pop
shr
rcrb
loop
rolb
rorb
les
rorl
mov
pop
cwtl
jae
cmp
push
jge
cltd
or
xor
mov
pusha
int3
iret
mov
dec
loopne
imul
mov
jmp
lahf
cld
push
adc
cmp
jle
lahf
jge
or
xchg
lock
dec
mov
es
mov
daa
mov
rol
sub
inc
sti
cmp
ss
xchg
mov
int
hlt
popa
xor
dec
inc
push
or
sbb
jne
stos
fnsave
sub
ror
daa
push
or
jmp
das
mov
pushf
sub
sarb
leave
xchg
push
xchg
and
sub
dec
pushf
mov
fxch
outsb
push
sarl
or
add
repnz
and
cmp
inc
outsl
inc
push
dec
push
push
mov
in
and
aaa
jno,pn
mov
xchg
sbb
addb
cwtl
enter
pop
inc
cmp
dec
fisubl
cltd
outsl
adc
enter
pop
shll
push
aam
push
movsb
cs
sbb
xchg
jmp
or
xchg
rorl
cmc
mov
mov
sub
pop
add
xor
test
cli
mov
mov
insl
sahf
xor
fidivrl
cmp
mov
mov
scas
stc
jbe
arpl
mov
insb
xlat
push
arpl
fwait
scas
adc
test
test
ds
and
es
or
fucom
push
jmp
aaa
inc
inc
dec
jno
packsswb
push
add
dec
xor
enter
cs
mov
loopne
mov
mov
sarl
fmul
jecxz
int
sub
mov
sbb
xchg
or
out
icebp
push
mov
lahf
sbb
pop
mov
icebp
pop
lahf
sub
adc
mov
aad
rclb
and
shr
mov
filds
push
int3
stc
cmp
imul
cmp
sub
sbb
js
insb
js
jge
cmpl
int
mov
incb
jne
mull
in
mov
cld
and
mov
testl
dec
test
push
pop
xor
dec
ja
pop
pop
lahf
xor
ss
aas
jle
cld
lcall
mov
cli
cld
dec
lock
loopne
xchg
out
mov
fmull
aam
xor
fwait
push
insb
xchg
test
sysexit
js
idivl
push
and
jmp
call
repnz
pop
pop
ss
cld
xor
sbb
mov
mov
inc
ret
mov
and
jmp
into
cmc
in
mov
or
cmp
jnp
push
sbb
adc
sti
popf
sbb
sbb
add
mov
stos
aad
shrl
xor
cs
xor
shlb
mov
js
movsl
xchg
stos
and
ljmp
push
mov
or
cmp
xor
lahf
scas
loop
adc
inc
hlt
dec
dec
push
mov
mov
outsb
pop
mov
adcb
mov
bound
mov
pop
fs
sub
jmp
jne
stos
jl
push
xchg
repnz
mov
stos
push
test
mov
sahf
xchg
fsts
cmp
xchg
jbe
pop
dec
inc
sti
sbb
imul
int3
fistpl
mov
mov
and
cli
test
out
xor
jbe
movsb
inc
xor
test
movsb
mov
mov
in
sbb
adc
mov
lods
data16
sbb
jb
hlt
fiaddl
in
ss
pop
xchg
mov
mov
scas
das
xor
dec
clc
out
xchg
sbb
movsl
loope
mov
daa
adc
mov
loop
mov
enter
sahf
out
pop
pusha
jo
lea
sub
mov
testl
subl
or
push
xchg
mov
or
aad
mov
mov
mov
movsl
inc
js
test
cmp
and
stc
jo
jle
scas
sbb
cmpsl
aaa
mov
std
icebp
aaa
sub
and
and
push
mov
mov
push
mov
dec
in
iret
push
clc
aas
cs
idivl
pop
inc
jp
lret
push
rorl
inc
arpl
aaa
lds
xor
lretw
jp
xor
aad
cmc
and
shll
sub
and
jnp
xor
fisubs
adc
xchg
dec
dec
or
shll
imul
pushf
out
scas
sub
orl
push
mov
xor
and
jbe
cmpsb
jmp
int
inc
sahf
mov
imul
cs
xor
mov
jle
push
sub
jg
dec
fsubrp
ret
cwtl
push
stc
daa
sub
outsl
ljmp
jne
dec
dec
loop
in
int
fdivrl
mov
jecxz
sub
repnz
fidivrl
sub
xlat
push
dec
add
xchg
dec
ljmp
or
lods
lods
bound
sub
add
xorb
jp
ds
cmp
hlt
cmpsl
cmpsl
xchg
or
loop
jnp
jns
stos
xchg
adc
add
push
xor
sti
aam
or
pop
dec
cmc
in
mov
mov
and
xlat
test
cmp
inc
and
lods
stos
out
cmp
lock
add
mov
sbb
dec
loope
clc
adcb
adc
cmpsl
mov
add
aam
push
test
lret
icebp
inc
jae
mov
fcomi
push
ret
dec
hlt
pusha
or
shlb
adc
dec
aaa
imul
in
clc
and
or
adc
mov
push
sub
mov
lds
cwtl
pop
mov
xor
jmp
out
pop
out
mov
ret
cwtl
fldenv
fisttpll
pop
push
mov
push
xlat
add
jb
and
add
mov
mov
mov
decl
mov
out
dec
rcl
mov
inc
cli
jmp
jl
mov
push
sbb
nop
sbb
mov
add
and
xchg
rcrb
add
adc
lods
sbb
sbb
push
lret
out
jmp
jge
dec
adc
testl
cwtl
mov
stc
jnp
cld
insb
aad
gs
out
jge
jo,pn
mov
sub
cs
addr16
jno
sahf
stos
adc
xchg
push
cmp
add
stos
xor
in
xor
push
lock
aad
arpl
jno
pop
xchg
into
sub
cmpb
movsl
sbb
aas
jne
call
nop
inc
inc
ja
js
xchg
addr16
rcr
andb
jb
and
fwait
adc
adc
add
sub
push
push
out
rcrb
fdivl
int3
sub
adc
dec
mov
shrl
bound
cmc
mov
xchg
push
mov
dec
xchg
outsl
js
sbb
inc
or
ret
pop
jmp
insl
mov
mov
shl
insl
adc
dec
jns
dec
adc
pop
mov
jbe
mov
or
sub
pushf
cmp
and
inc
js
sub
mov
mov
aaa
jg
movsl
mov
mov
cmp
cs
addr16
pop
out
shlb
and
insl
mov
and
mov
leave
popa
shll
jg
mov
sub
dec
xchg
lock
ds
into
and
lds
jge
inc
xchg
push
pushf
jmp
int3
sbb
jns
fcoml
fmull
or
imull
iret
pop
mov
jno
add
inc
mulb
ja
mov
cmp
add
dec
stos
lcall
in
add
and
mov
or
fwait
in
lods
jl
mov
add
add
inc
iret
sub
stos
fs
nop
push
sarb
cmpsb
mov
rcr
push
icebp
fldenv
pusha
sub
push
scas
into
sub
or
or
mov
sbb
dec
add
jecxz
pop
sbb
out
adc
movsl
out
fisttps
fmul
jns
rolb
dec
repnz
xchg
cmpsb
push
or
roll
icebp
sbb
mov
call
clc
mov
mov
test
or
add
les
cs
xchg
fwait
addr16
lock
mov
repnz
je
sbb
popa
bnd
dec
add
aam
push
pop
jmp
push
push
loop
sub
ret
sbb
add
mov
cmp
iret
xor
int
lods
or
cmp
push
or
pop
fs
mov
cld
enter
stos
scas
jo
lahf
sub
xchg
mov
inc
cs
fucomi
add
jle
sbb
rorl
pop
insb
mov
js
rcll
jmp
mov
outsl
and
rcrb
pop
leave
mov
in
out
mov
out
pop
or
stos
mull
xchg
and
rclb
ja
cs
sarl
stc
lods
mov
mov
pop
out
pop
sbb
mov
inc
call
imul
pop
push
jns
das
mov
pop
fiaddl
stos
inc
pop
mov
ja
outsl
sahf
adc
xchg
data16
lds
rclb
push
in
mov
call
pop
rolb
out
add
xchg
push
mov
ljmp
mov
and
dec
fistl
add
push
mov
dec
xor
sub
aas
flds
arpl
sahf
sub
xor
repz
sar
and
cld
ja
sbb
insw
pop
push
out
xor
mov
add
jg
or
jge
inc
shll
sub
xor
xchg
ds
xor
mov
mov
pop
cmp
jnp
call
adc
push
push
pushf
imul
pop
das
and
dec
add
ds
int3
out
jno
inc
inc
push
loopne
cmp
icebp
push
jns
sub
mov
je
xchg
cmp
enter
sub
jne
lea
xor
hlt
mov
out
xor
sbb
dec
gs
hlt
add
aam
xchg
pop
shlb
dec
adc
ss
xor
mov
in
xor
inc
jne
push
jmp
rcrb
mov
xor
push
into
cs
aam
push
or
mov
ret
xorb
imul
ret
outsb
idivl
pop
dec
lcall
sub
sbb
and
and
cmp
lods
hlt
push
cltd
inc
into
sti
hlt
and
flds
push
scas
mov
daa
dec
inc
notl
popf
adc
popf
jecxz
inc
scas
lods
mov
iret
nop
cmp
push
divl
mov
in
mov
xchg
aas
dec
inc
sub
inc
repz
xchg
aas
es
push
out
arpl
push
testb
scas
and
sub
repnz
mov
loopne
mov
push
push
cmp
rcrb
pop
or
push
clc
test
inc
insb
scas
pop
or
adc
or
lds
jo
out
mov
and
idivb
cmove
pop
jno
cld
cs
fisubs
cmpxchg
pop
push
out
rorb
cwtl
push
mov
cmp
imul
mov
inc
repnz
fadds
add
push
loopne
enter
pushf
fmull
lret
popa
stos
jl
loopne
repz
bswap
dec
cmp
fwait
nop
aam
stos
push
sub
pop
add
jns
out
arpl
mov
or
mov
cmp
mov
in
xor
sbb
call
inc
scas
dec
push
xor
cmp
mov
push
sbb
or
cmp
test
inc
inc
add
sub
cmpsl
mov
xchg
sti
push
pop
mov
mov
cmp
push
adc
push
mov
dec
lret
jns
adc
inc
add
fs
orl
mov
movsl
xchg
mov
testl
sbb
shl
push
inc
loop
faddp
add
repz
xor
pusha
arpl
adc
lret
sbb
xor
pushf
dec
or
pushf
mov
fmul
ljmp
xchg
dec
sub
out
push
adc
add
push
mov
sub
lock
data16
mov
imull
mov
loopne
mov
outsb
sbb
rorb
jmp
mov
sub
andl
cmp
mov
and
fisubs
cmp
adc
ljmp
sbb
out
addb
bound
in
push
pop
sbb
and
push
pop
mov
hlt
jbe
repnz
xchg
scas
push
and
stos
xchg
ja
mov
lret
fidivs
adc
cmp
mov
imul
sub
aaa
mov
ret
fcoml
ss
push
or
js
into
xor
sub
push
aaa
lcall
add
mov
mov
push
int3
outsb
rcll
cltd
mul
call
xabort
aad
dec
les
xchg
pop
lea
mov
out
jbe
ret
adc
repz
cmp
lock
sarl
xchg
xchg
mov
mov
pop
dec
aas
dec
test
jecxz
and
das
sub
pop
es
mov
lds
lea
cmpsb
jp
lret
rcll
iret
pop
repz
inc
jl
cmpsl
lds
jns
pushf
mov
mov
arpl
test
das
cmpsb
repnz
cmp
lcall
repz
jle
lahf
rcl
inc
sti
add
pop
inc
sbb
cmp
lock
lock
push
dec
clc
pop
mov
dec
add
test
into
xor
adc
imulb
lock
adc
inc
adc
popa
sbb
mov
push
mov
jl
xchg
inc
mov
leave
jecxz
out
fisubl
adc
add
ret
ror
mov
shrb
outsl
gs
mov
push
adc
mov
or
insb
xor
cmp
mov
push
cltd
test
dec
mov
ljmp
xchg
mov
packssdw
jge
pop
dec
scas
and
call
xchg
jge
jns
push
scas
xchg
add
or
push
and
cmpl
scas
add
add
sub
loope
pop
push
mov
andl
push
xchg
hlt
notb
ljmp
jbe
clc
lods
or
lods
pop
pop
mov
cmpb
lods
jmp
add
aad
shl
ficomps
xchg
add
dec
movsl
mov
jp
jne
in
mov
arpl
pop
dec
out
xchg
scas
rcr
cmpsl
jne
pop
jne
in
sbb
lcall
add
sarb
cmpsl
cli
repnz
add
fcompl
adc
jg
aas
adc
pop
cmc
mov
sub
xor
xchg
adc
subb
inc
mov
inc
inc
punpckhwd
pushf
cmp
bound
xorb
jl
jl
add
orb
lcall
push
adc
daa
pop
inc
pushf
in
loop
daa
pushf
lock
jge
pop
push
mov
rcrb
lret
lahf
cld
jp
xor
pushf
sub
lock
fstp
stc
sbb
sub
inc
test
sbb
and
icebp
jae
jb
pop
inc
xor
stos
outsb
fnsave
pop
fistps
adc
push
jmp
les
sahf
sbb
mov
sub
lret
fs
mov
testb
add
xorb
movsl
dec
aaa
pusha
pop
es
cmc
xchg
push
pop
test
xor
sub
jnp
fwait
movsb
pop
dec
pushf
cmpsl
dec
dec
mov
cmc
imul
test
mov
pop
fisttpl
lods
dec
add
inc
jge
jg
mov
dec
jp
mov
out
sub
clc
fld
cmp
hlt
cld
test
faddl
fnstsw
popa
jp
leave
dec
pop
push
xchg
out
xchg
icebp
lret
add
dec
mov
mov
pop
data16
or
cmp
inc
dec
sbb
mov
loop
sub
loopne
mov
ss
pop
jno
or
fisubrl
mov
stc
xor
mov
and
cmpsl
cs
iret
loop
stos
shl
clc
stos
cmp
jno
sbbl
lret
enter
dec
movsl
dec
popa
and
rcr
sbbl
mov
cmpsl
add
les
inc
and
js
push
sbb
pushl
daa
or
in
shlb
shl
int
rcrb
push
jbe
adc
and
pop
cmpsb
test
jge
aaa
and
mov
clc
fucomp
jbe
push
mov
cmp
pop
push
inc
add
jecxz
xor
dec
mov
dec
sbb
push
aam
repz
xchg
push
push
rcrb
sbb
push
vcvtps2dq
lahf
les
mov
lea
mov
shlb
pop
ret
daa
lods
mov
sarb
mov
jmp
add
xor
andl
cmp
fbld
negb
mov
xchg
cmpl
cmp
mov
jo
stc
jne
inc
scas
pop
xchg
cmp
int3
mov
lods
sub
cltd
loop
movsb
mov
inc
push
push
mov
ljmp
inc
inc
adc
add
cld
shll
push
popf
jle
roll
shlb
fs
stc
dec
hlt
sbb
inc
movsb
mov
hlt
sbb
push
lods
push
test
mov
ja
loope
xlat
sbb
mov
cwtl
jno
insl
add
mov
push
cmp
lcall
bnd
mov
mov
or
xchg
sbb
aas
out
mov
repnz
fsubrs
imul
shll
mov
sbb
or
pop
outsl
test
shll
es
mov
mov
cmc
inc
movsb
dec
lret
xor
les
addr16
mov
insl
push
leave
imul
call
mov
jecxz
mov
jle
imul
mov
adc
jp
add
test
push
scas
push
jns
mov
stos
mov
ret
jbe
inc
pushf
ret
clc
mov
xor
pop
lret
bound
mov
mov
mov
enter
andb
jmp
adc
mov
clc
or
or
sahf
mov
mov
cmc
test
mov
in
ds
std
adc
sbb
mov
xor
push
and
sub
jns
or
pop
inc
scas
iret
fsubrs
pop
lret
mov
add
sbb
jecxz
dec
jno
cmpsl
mov
lds
sbb
movsl
adc
mov
mov
daa
jg
pop
mov
jnp
xlat
jne
daa
xor
or
in
adc
sbb
mov
jne
fwait
mov
into
mov
in
fldl
fucomi
mov
xchg
jl
cld
push
pop
jb
nop
push
push
pop
mov
lea
push
test
stc
mov
xchg
inc
push
lahf
and
xor
movsl
fnsave
pusha
aas
add
sub
clc
fnstenv
cmpsb
pop
shll
xchg
enter
xlat
cltd
or
std
int3
sbb
pushf
add
stos
inc
nop
mov
cmp
je
xchg
pushf
enter
mov
push
lock
pushf
and
gs
in
push
fisttpl
sbb
push
rorb
lret
dec
pop
xchg
xchg
jb
mov
dec
sti
lret
hlt
in
aas
push
ret
lods
mov
inc
push
jmp
mov
inc
mov
enter
cltd
inc
jno
push
xchg
push
xchg
or
mov
fisubl
dec
into
xor
mov
les
stos
pusha
mov
and
movb
mov
ljmp
sarl
aad
in
mov
repz
and
mov
mov
push
adc
jne
in
movsl
inc
cmp
mov
lods
popl
xchg
and
sbb
lods
aam
and
in
aad
rol
sbb
inc
dec
add
mov
mov
mov
daa
stos
rorl
popf
fcmovne
mov
or
fsincos
sbb
gs
xor
loope
sbb
push
xchg
mov
and
adc
push
shll
insb
stc
fidivrs
mov
mov
xor
popf
arpl
mov
push
cmpsb
cltd
jo
ja
addl
adc
fidivrl
xchg
daa
ljmp
xor
flds
xchg
in
cmpsb
cmp
inc
ret
sub
mov
adc
pop
sub
sub
xchg
jle
or
aam
gs
fldcw
jb
mov
imul
stc
pushf
mov
xchg
dec
mov
out
icebp
add
jo
das
add
aaa
xlat
adc
stos
aad
and
sbb
inc
inc
bound
int3
ret
fldenv
stos
popf
idivb
or
jmp
shll
clc
fsubs
mov
jg
movsl
outsl
mov
push
roll
data16
jae
xchg
inc
shlb
call
xchg
scas
sbbl
pop
sub
shr
mov
add
test
out
cmpsl
stos
lods
cltd
lock
ds
data16
push
mov
mov
xor
jge
test
hlt
cs
sahf
adc
push
ret
inc
in
mov
leave
outsl
shlb
xor
or
es
lret
sub
cmc
mov
inc
jmp
in
shlb
xchg
data16
pop
aaa
xchg
popa
and
inc
xlat
movsb
cmp
sub
or
psrld
push
jle
stc
jp
es
cwtl
mov
in
andb
test
out
test
jns
lahf
xchg
rcrb
loop
iret
pop
repz
push
xchg
mov
sar
push
leave
dec
xchg
lahf
repnz
loopne
xchg
mov
test
bound
ficomps
fidivs
add
xchg
sub
call
cmp
andl
lds
in
or
dec
adc
lock
xchg
cmpsb
psubusb
sahf
sub
cltd
int
mov
test
fimull
sbb
int3
pushf
cli
imul
iret
mov
sbb
mov
jmp
hlt
jo
cmpsb
fistpll
test
sbb
mov
icebp
call
xor
pop
aaa
stc
sbb
hlt
push
adc
push
mov
divl
mov
adc
fistpll
mov
push
es
fmull
setno
aas
xchg
adc
xor
pop
cwtl
sub
insb
iret
loopne
cs
jle
inc
sub
loope
fidivrl
jmp
xchg
mov
jecxz
stos
in
dec
dec
push
xchg
call
out
imul
rorl
sbb
orl
xchg
xlat
jne
cmpsb
sbb
iret
mov
outsb
jl
rolb
mov
std
mov
in
loop
xlat
adc
mov
mov
pop
xor
inc
mov
loope
loopne
sbb
mov
ror
lret
sub
inc
fisubl
xor
xor
and
cwtl
mov
push
pop
mov
mov
inc
fucomi
nop
jle
arpl
xchg
roll
mov
jns
jmp
rolb
sub
mov
addr16
pop
mov
xlat
leave
jecxz
scas
cltd
mov
jle
ja
std
push
ds
jmpw
mov
outsb
push
jl
cmp
push
fnstenv
fldcw
cmp
nop
pop
ss
fbld
cwtl
mov
push
addr16
or
jl
inc
sbb
sbb
mov
jl
adc
les
lods
sbb
add
pop
mov
out
xchg
xor
mov
sbb
mov
arpl
adc
mov
sub
imul
lea
add
fiaddl
push
pop
loopne
adcl
std
adc
sar
pusha
xchg
out
sbb
xlat
sbb
movsl
outsb
jns
ds
aaa
cmp
std
shl
sbb
pop
dec
jbe
inc
lcall
cmovs
ud2
ror
dec
xlat
mov
rol
xor
data16
fimuls
and
pop
pusha
xor
repz
ret
loopne
lods
xor
push
call
jbe
cld
cmp
fldcw
bound
icebp
sbb
jecxz
xor
jnp
movsb
inc
ja
add
out
sbb
insb
cld
stos
push
into
loop
orb
push
lahf
sub
mov
push
test
stos
pop
shl
lods
int
ret
jg
mov
lods
or
lea
fisttps
cld
add
scas
dec
or
xor
sub
or
push
push
mov
inc
dec
dec
sbb
push
add
xchg
fisubrs
push
pop
js
xchg
bnd
ljmp
jnp
adc
stc
jle
fcmovnu
rorb
and
dec
jecxz
aas
cltd
lock
mov
and
es
pop
mov
jo
sub
out
cmc
lahf
jle
stos
and
fisttpl
dec
or
pop
xor
mov
jno
adc
ja
adc
jge
enter
and
sarb
sub
pop
mov
sub
hlt
and
clc
sbbb
inc
push
test
mov
insl
movsb
push
jg
test
test
sbb
sahf
data16
pop
ss
xlat
lahf
or
out
mov
scas
jnp
hlt
cmp
mov
inc
adc
push
sbb
pause
stos
lcall
jp
adc
or
loope
xchg
into
xchg
addr16
stos
pop
imul
call
mov
roll
dec
xchg
scas
jns
adc
loop
add
inc
and
or
pop
out
inc
out
das
push
adc
into
pop
fwait
and
jae
aad
and
lea
mov
dec
or
mov
pushf
or
mov
mov
repz
inc
lock
and
shlb
in
push
mov
or
or
push
push
repz
xor
xchg
test
nop
ror
sub
inc
divl
pmullw
test
mov
jp
loope
add
ja
outsb
pusha
cmp
mov
inc
sbb
xchg
dec
adc
nop
and
cmp
push
push
jno
ja
sbb
pop
add
pop
xchg
stc
mov
arpl
addl
inc
rcr
mov
les
lahf
cmp
popa
sub
ss
push
or
outsb
or
pusha
cmc
callw
negl
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
call
jmp
mov
mov
xor
sbbl
add
xorl
mov
mov
and
xor
and
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
mov
push
push
or
xchg
jo
and
gs
jmp
addl
ds
repnz
mov
push
cld
add
xchg
and
jo
arpl
jns
inc
inc
std
sbb
addr16
movsl
js
xlat
scas
or
xor
or
testl
mov
flds
add
mov
aad
lea
out
sub
stc
fbstp
leave
std
adc
pop
push
fcmovu
leave
and
push
movsb
xchg
jg
out
cwtl
hlt
xor
push
mov
push
mov
daa
add
dec
cwtl
shrb
in
xchg
pop
xchg
aas
jmp
ret
jge
dec
out
sub
pop
punpckhwd
sahf
pop
lret
mov
add
inc
adc
dec
mov
dec
push
test
imul
loope
insl
test
dec
mov
daa
cltd
adc
mov
adc
dec
jo
push
lods
or
mov
adc
inc
mov
in
cltd
sub
sbb
and
mov
adc
sbb
pop
ss
dec
sbb
or
in
lcall
lret
jns
ja
out
inc
andl
xchg
pop
cmp
mov
xchg
testb
sar
idivl
int3
cmp
scas
jmp
xchg
hlt
or
sarb
js
add
lahf
into
outsl
es
cmp
dec
cli
pop
clc
mov
pushf
dec
sbb
adc
add
pop
xchg
jno
fnsave
es
rcrl
push
and
xor
in
rcl
or
sub
jns
ds
xchg
xor
dec
jge
xor
xor
and
push
in
and
stos
out
mov
loop
sub
pop
call
movsb
jo
xor
shr
push
aaa
mov
sbbl
in
cmpsb
pushf
mov
sub
popa
stos
adcb
pop
icebp
int
mov
jecxz
sti
sbb
pop
int3
imul
imul
dec
roll
pop
xor
add
adc
xchg
mov
std
jo
mov
mov
pop
or
inc
movl
lods
scas
push
mov
add
pusha
cmp
notl
cltd
cmpsb
jb
addl
cld
idivb
jecxz
lds
adc
dec
in
mov
cwtl
sahf
mov
add
sub
jge
lahf
fsts
xchg
sbb
adc
fimull
sub
push
push
imul
mov
lock
cltd
test
pop
push
nop
jp
push
jp
int3
addr16
icebp
into
pusha
xchg
xchg
fimull
in
or
cmp
inc
cmpsb
mov
adc
and
sti
xor
pop
mov
in
push
jecxz
xchg
pop
pop
adc
sub
sbb
mov
jbe
push
popa
ds
fadds
inc
jo
pop
dec
stc
or
hlt
repz
lods
lods
adc
std
out
mov
icebp
dec
pop
push
iret
fdivrl
cmpsl
aam
fdivs
add
lods
hlt
add
sbb
test
mov
sub
cmp
mov
mov
mov
dec
xor
leave
xchg
and
jno
rcll
pop
mov
sbb
pop
pop
fwait
xor
push
cmp
nop
push
pop
lcall
popf
or
cmp
pop
cld
jg
push
std
aam
ljmp
rclb
mov
sbb
fsubl
sub
test
jnp
lock
mov
pop
push
iret
dec
mov
fnstenv
mov
xor
dec
mov
leave
mov
test
lds
loope
in
adc
ds
jle
jns
aad
and
das
int3
mov
out
push
std
neg
pop
popa
lock
mov
dec
pop
xchg
push
push
pop
test
leave
jecxz
fsub
sub
fiadds
lret
adc
inc
push
push
push
push
lods
cmpsb
push
out
jmp
mov
and
decb
ficompl
lret
pop
es
cltd
call
popf
jb
test
jns
pop
mov
sub
jmp
bound
mov
shll
cs
ret
pop
xchg
jecxz
xor
shll
fstpl
jl
jnp
mov
push
testb
or
dec
sbb
inc
push
into
loope
adc
out
rcll
mov
pop
cmc
add
fsubp
cwtl
jecxz
push
mov
mov
loope
and
fsub
out
ss
mov
cmp
cmpb
xor
ret
scas
inc
lock
and
jb
or
pop
leave
pop
aas
push
outsb
mov
insl
push
xchg
movsb
ds
clc
call
push
repnz
pushf
adc
adc
hlt
cld
pop
shl
cmp
cmp
mov
xchg
and
dec
imul
sbb
scas
arpl
movb
xchg
das
dec
jns
int
stc
xchg
aas
xlat
mov
repz
mov
daa
fcmovnb
xor
sbb
shrl
int3
adc
pop
sarb
int
es
push
iret
fwait
js
mov
cmpsb
sti
cwtl
jbe
loope
sbb
js
enter
das
ljmp
xchg
sbb
pop
cs
xlat
pop
lcall
ja
push
ret
mov
addr16
inc
outsb
sbb
es
int
imul
adcl
mov
mov
lock
fsubrl
push
mov
pop
cmpsb
sar
and
lock
jle
arpl
mov
push
rcl
xor
mov
cli
dec
lcall
and
mov
js
out
pop
insl
retw
hlt
rcll
xor
mov
push
out
loope
dec
xor
and
jo
push
fiadds
test
push
call
sbb
sub
fisttpll
mov
int
sbb
xor
pop
jmp
divb
and
repnz
mov
fisubs
mov
lcall
stc
push
push
mov
lods
sahf
sub
mov
mov
push
sub
xor
and
sbb
xor
sub
dec
arpl
and
push
sbb
jae
mov
adc
gs
inc
fildll
lret
fcomip
fwait
inc
add
insb
mov
inc
jae
or
add
push
mov
rcr
pop
test
not
test
fs
jmp
fcoms
push
pop
sti
vmwrite
js
int3
sahf
shll
adc
inc
dec
add
test
and
push
aaa
xchg
sar
mov
sub
addb
imull
popf
arpl
inc
cmp
and
sarb
fs
call
pop
push
pop
dec
clc
jecxz
sub
push
rcrl
js
add
mov
adc
push
icebp
mov
jecxz
shlb
outsl
jb
fmull
fbstp
xor
jno
xchg
mov
loope
bound
test
dec
inc
sub
in
stos
aam
addl
ror
jae
imul
imul
out
ja
shll
or
jo
lea
insb
lds
jns
ja
push
aas
dec
xor
iret
cmpsb
aas
aas
jne
mov
dec
xchg
push
clc
mov
std
cmp
dec
call
mov
stc
dec
pop
fsubs
inc
lods
xor
out
jae
outsb
sub
jmp
iret
adc
lea
mov
in
ds
sbb
sbb
loopne
xchg
jmp
call
mov
aas
fimull
inc
mov
pop
addr16
jl
sbb
cmpsb
out
push
test
test
xchg
sarb
mov
int3
pop
mov
outsb
cltd
loope
jbe
or
jle
mov
sbb
arpl
push
andl
test
sbb
scas
xchg
ljmp
adc
mov
nop
mov
and
ljmp
cmp
jg
xchg
pop
push
and
jle
bound
or
iret
mov
sub
lahf
mov
mov
insl
xor
cmp
ja
lods
test
jbe
dec
enter
adc
dec
adc
mov
iret
or
shld
dec
sbb
mov
call
out
pop
adc
lahf
or
push
sbb
shrl
xor
in
stos
cld
pushf
mov
cmp
sbb
into
dec
dec
lods
jo
mov
inc
fcomp
movsb
cmp
aaa
push
in
out
pop
movsl
mov
push
outsl
jne
test
shlb
sub
jmp
jo
mov
mov
xchg
dec
mov
gs
ds
pop
roll
ficoms
outsl
out
int
xor
leave
pop
arpl
cmpsb
shlb
and
pop
iret
dec
js
jb,pn
repnz
jmp
outsl
cli
or
pop
loop
pop
jns
sbb
mov
mov
lret
js
jnp
movsl
andb
icebp
movsl
aad
cmpsl
aaa
rorb
sub
inc
pop
cmc
cmp
into
lock
imul
repnz
push
ja
cmp
lds
pushf
push
pushf
or
jge
xchg
faddp
cmp
inc
popf
sbb
jecxz
out
addb
aam
loop
mov
int3
movsb
pop
lahf
and
dec
inc
leave
xor
or
xchg
sub
cli
dec
lock
test
lret
add
cld
push
dec
inc
fwait
shr
scas
lods
or
mov
ret
int3
add
xor
lds
mov
ljmp
adc
and
pop
sbb
push
nop
out
xacquire
cmp
test
jno
into
add
pop
pop
xchg
mov
inc
pusha
inc
mov
and
mov
stos
or
mov
and
mov
pop
cld
out
sbb
push
jmp
mov
in
in
rorb
jle
aad
or
push
out
jae
iret
push
cmc
inc
mov
xor
jle
jl
adc
nop
or
out
mov
push
adc
test
jmp
into
inc
mov
call
ficompl
pusha
xchg
pushf
adc
stos
mov
loope
sbb
pop
dec
or
sbb
sub
std
popa
ret
or
aam
xor
cltd
js
scas
insl
sub
cmp
jmp
dec
and
inc
xchg
insb
inc
and
sbb
pop
shll
sti
in
adc
xchg
mov
mov
or
pop
shlb
add
testl
sbb
adc
mov
push
or
xchg
or
mov
mov
mov
std
mov
mov
inc
rorl
inc
cmp
lcall
add
pop
or
jg
push
sahf
jae
mov
ret
add
cltd
addr16
in
mov
stos
jl
mov
das
rep
fisubrl
shrl
dec
push
inc
and
inc
push
addr16
ds
enter
jns
dec
mov
pop
mov
inc
or
mov
mov
or
icebp
jne
fs
lret
or
jl
inc
icebp
jnp
mov
sub
adc
in
xchg
leave
push
data16
mov
popf
or
dec
enter
jge
bound
fists
iret
jnp
lock
movsl
pushf
or
or
sub
jno
jmp
out
mov
out
cmpsl
aad
popf
repz
sbb
pusha
sub
fwait
mov
xchg
push
sub
sub
jge
and
mov
mov
inc
iret
push
push
pop
jnp
neg
fnstenv
dec
mov
xchg
push
into
cmp
test
in
and
fistpl
in
jp
push
out
testb
add
cs
mov
xchg
cmpsl
hlt
cmp
mov
jne
repnz
orb
dec
dec
or
les
fnstsw
mov
cmp
stos
pop
and
int
mov
fwait
mov
push
cli
xlat
iret
push
repnz
ret
jle
orb
mov
mov
jge
sub
ss
jbe
add
addb
xor
jb
push
std
imul
mov
jge
mov
insl
jl
lods
or
in
push
pop
pop
mov
inc
je
sub
adc
jns
sbb
push
in
cmp
inc
jecxz
fcmovne
xor
in
adc
inc
add
es
push
int
pop
dec
popf
subl
test
mov
out
mov
cli
sub
test
jg
cmp
das
call
push
jecxz
sbb
movsl
sbb
loop
sub
sbb
inc
fistpll
and
add
icebp
and
imul
adc
imul
call
aam
xor
fucomip
and
dec
aas
pop
add
cwtl
rsqrtps
cmc
fisttps
jmp
push
jnp
frstor
sbb
pop
lcall
sbbb
icebp
mov
bound
jecxz
push
loope
push
mov
add
xchg
enter
xor
mov
cmp
cmp
push
lock
enter
aaa
adc
pop
aad
repz
fimull
movsb
and
stc
pop
lcall
outsb
sub
inc
adc
scas
sub
add
int
push
cli
sahf
enter
cmpsl
pusha
pop
mov
lahf
int3
jnp
fsubs
mov
stc
sub
push
mov
mov
or
orl
rcrl
add
push
jmp
mov
in
dec
insb
inc
leave
jnp
pusha
xchg
test
scas
out
sbb
and
bound
xchg
or
fisubrs
int3
cmc
rolb
mov
mov
adc
lret
pushf
adc
sti
pushf
mov
cmpsb
pop
cmpb
movb
enter
mov
jp
xor
fwait
mov
inc
jbe
dec
pop
imul
std
sub
dec
jmp
mov
cmp
subb
cmpl
jb
or
fstl
cld
sbbl
xor
fdiv
xchg
aad
test
es
sub
sub
xchg
enter
mov
pop
rclw
cmp
pop
lds
cmc
xor
sub
out
ja
scas
icebp
xchg
icebp
int3
mov
cmpsb
cmp
mov
add
inc
jno
xlat
cmp
sub
pop
nop
or
leave
or
inc
sbb
dec
dec
push
xor
adc
bound
inc
enter
xor
jl
test
or
add
rcll
xchg
sub
fsubrl
sub
sti
push
fsubl
fcomps
mov
sub
pop
stos
push
scas
and
inc
xor
push
gs
fcom
adc
or
mov
fwait
sbb
xchg
iret
xchg
aas
je
or
add
dec
xchg
fsubrp
inc
push
pop
jge
aaa
mov
cmpsb
movsb
push
pop
mov
flds
dec
lock
mov
leave
sub
outsl
jns
ds
xchg
in
ds
sub
in
bound
mov
ds
jb
push
adc
mov
outsb
rcll
addr16
ja
cmp
in
fstpl
notl
jg
xchg
fistl
adc
dec
dec
inc
test
imul
outsl
test
push
int3
mov
jbe
shll
sbb
mov
mov
mov
mov
dec
jp
nop
sub
add
insb
stos
orl
push
je
cmpb
rcrl
rclb
and
xor
add
repnz
mov
aaa
popa
cld
pop
xor
bound
cmp
test
and
push
pop
out
jg
ss
mov
pop
sub
xor
aaa
sbb
je
mov
jg
repnz
lcall
rcr
inc
int
out
test
add
mov
mov
add
xor
ds
xchg
sbb
cmp
dec
lock
cmpsl
lret
jns
jb
mov
jp
and
jp
cmpsl
cltd
loopne
jae
cli
mov
divb
lret
and
xor
cmp
adc
push
jnp
push
je
inc
dec
into
outsb
mov
add
cwtl
rclb
pop
lods
sub
jnp
jbe
popa
jle
pop
out
jl
aas
mov
cmp
and
icebp
imul
cltd
scas
sti
or
rclb
das
aad
pop
sub
push
mov
enter
add
xor
cmc
enter
stos
xchg
xor
cmpsb
dec
daa
mov
pop
and
sub
cmpsb
loop
lcall
push
imul
and
bound
sbb
xchg
scas
xchg
dec
in
push
and
fbstp
repnz
or
jnp
xchg
bound
lods
call
das
mov
ss
clc
inc
sub
adc
push
push
mov
mov
fisttpl
fsts
outsb
mov
cmp
jae
lock
rcll
mov
sbb
inc
jl
pop
inc
push
sub
fwait
stos
ss
mov
aaa
cli
jnp
inc
fs
mov
xor
mov
adc
cwtl
mov
bound
lock
lcall
addr16
in
in
xor
sub
pop
int
push
inc
xchg
jmp
xchg
pop
and
jg
lcall
inc
inc
adc
xchg
fstps
sbb
shll
repz
stos
sbb
push
addr16
in
out
pop
lock
ss
insb
jno
jns
mov
and
jne
test
ljmp
or
jge
outsl
call
adc
xor
rcrl
lret
pop
lock
outsb
arpl
mov
in
dec
sub
inc
inc
aam
sub
fstp
or
mov
sar
xchg
in
pop
popa
enter
je
mov
jnp
jmp
repz
inc
mov
or
dec
mov
addr16
mov
fisubrl
add
popa
xor
shrb
jnp
outsb
stc
icebp
popa
pop
dec
out
xor
movsb
in
je
out
or
dec
mov
sbb
add
incb
int
pop
lods
pop
popa
notb
iret
jmp
xchg
or
jno
orl
lret
jecxz
inc
cld
xlat
mul
mov
sbb
out
rcrl
or
cmp
repz
jg
and
sbb
int
pop
add
mov
inc
lods
push
addr16
cmp
fidivrl
adc
call
dec
movsl
loopne
dec
bound
xchg
ficompl
pop
mov
inc
add
xchg
cltd
lahf
adc
mov
mov
je
imull
push
mov
mov
shrl
popa
push
sub
sbb
pop
add
adc
dec
shl
repz
push
addb
and
jo
bound
push
je
jmp
lock
jb
ret
pop
call
push
pop
pop
push
mov
sahf
or
push
mov
jae
loope
addr16
loop
sub
lcall
enter
mov
loope
or
xor
ret
xchg
add
movsb
xchg
cmp
or
idivb
mov
daa
jb
xchg
mov
icebp
pop
cmc
mov
sub
sti
repnz
xchg
insb
cmp
shrb
lret
notb
sub
into
mov
sub
fisubrs
icebp
add
pop
outsb
dec
lcall
inc
scas
lods
xchg
xrelease
adc
cld
mov
movsb
sub
mov
and
jp
pop
stc
out
sbb
jle
out
test
xchg
inc
dec
or
popa
inc
into
mov
and
lea
xor
mov
iret
inc
scas
pop
daa
shl
xchg
fldcw
call
rep
int3
xor
les
dec
adc
lds
mov
out
std
dec
cmp
aam
mov
enter
xor
loope
sbb
jne
and
xor
fnstcw
loop
pop
arpl
jmp
push
sbb
sahf
divb
inc
sar
xchg
call
xacquire
out
inc
addr16
pusha
into
test
add
aam
or
test
lret
ja
push
movsl
scas
or
outsb
xlat
leave
pop
into
mov
jne
push
or
push
jne
jg
mov
aas
jg
leave
mov
lahf
test
dec
cmp
mov
sub
push
push
adc
xchg
pusha
cmc
adc
xor
les
add
push
or
push
or
test
je
adc
hlt
xchg
int
cmpsl
push
shll
sbb
or
jp
adc
sti
scas
sub
fwait
pop
repnz
gs
bound
push
pop
xchg
jge
and
add
mov
mov
icebp
lret
in
ret
cmp
iret
pop
mov
in
xchg
sub
mov
cmpsb
sbb
mov
sbbl
xorb
sub
nop
or
icebp
adc
aas
mov
call
test
sbb
inc
sti
or
sub
pushf
cs
ds
dec
sub
fdivrl
ret
xchg
adc
andb
jle
xchg
imulb
add
sub
inc
cmp
fwait
inc
dec
xchg
fsubl
test
inc
je
popf
mov
aam
pop
mov
iret
aas
push
push
aas
mov
push
push
lods
mov
cld
xchg
arpl
outsb
movsl
cltd
or
jo
mov
push
push
shll
push
xor
dec
loope
mov
ret
push
sbb
repnz
into
out
lcall
add
push
call
add
pop
pop
xchg
push
int3
stos
mov
enter
adc
fs
jno
adc
or
dec
pop
shlb
cmp
incl
lcall
mov
mov
jne
xchg
insb
mov
popf
je
movsb
in
fidivs
btc
les
add
push
sub
scas
mov
xchg
push
sub
cmp
fists
dec
mov
sbb
add
addr16
add
in
adc
xor
aaa
dec
in
movsl
in
push
out
pop
inc
inc
mov
sbb
mov
imull
jne
stos
mov
xchg
dec
pusha
add
cltd
daa
sahf
or
push
mov
aad
sbb
popf
insl
out
add
and
mov
ja
xor
push
mov
in
ja
jns
stc
repz
out
pop
data16
or
mov
iret
xlat
into
ret
scas
bound
cltd
push
inc
mov
xor
push
call
testb
stc
lods
std
mov
or
jge
sbb
movsb
and
aaa
shr
arpl
sahf
mov
dec
lods
mov
dec
test
dec
jno
int
push
inc
fs
leave
push
ret
mov
lock
sub
dec
bound
sbb
xchg
and
ja
fidivrl
dec
push
jnp
and
loope
or
sbb
pop
data16
dec
orb
outsl
imul
add
push
inc
inc
cmp
mov
add
sub
fwait
rolb
pop
jnp
xchg
stos
je
mov
es
cwtl
pop
jl
pop
movsb
inc
outsl
mov
imul
sarl
mov
pop
xchg
test
mov
inc
cmc
andl
cmpb
jne
push
add
pushfw
pop
push
add
mov
mov
sub
lret
pop
adc
popa
popf
mov
mov
jae
test
xchg
inc
andl
flds
adc
out
mov
mov
cmpsb
fld
clc
loop
sub
mov
lcall
fstl
adc
lods
or
test
inc
jo
lds
int3
out
in
mov
sbb
popa
outsb
outsl
fdivl
dec
inc
dec
sbb
add
outsl
push
sub
outsl
into
lret
rclb
pop
jo
into
inc
out
ret
or
idivb
inc
scas
subl
inc
mov
clc
jle
and
stos
out
rolb
push
popf
inc
in
push
add
xchg
fimull
mov
sub
mov
movsb
dec
lcall
mov
xchg
add
lods
or
add
jbe
popa
aam
outsb
pushf
mulb
and
ficompl
pushf
sbb
stc
cltd
xor
xor
daa
cmp
mov
mov
mov
jp
push
dec
sub
sbb
pushf
scas
lea
push
and
inc
es
clc
xor
into
lcall
jnp
jle
adc
push
mov
push
aas
push
shlb
pop
jbe
xor
jp
mov
mov
push
in
hlt
fcmove
ljmp
rclb
aam
push
iret
enter
add
loop
jle
nop
stos
xor
shrl
aaa
adc
icebp
jmp
jp
jo
xchg
outsb
lea
ja
flds
ja
or
add
dec
mull
out
clc
mov
pop
lds
push
mov
lds
dec
aad
call
mov
aas
or
repnz
call
or
test
dec
and
lahf
inc
cmpl
jl
jb
mov
pop
xchg
ljmp
sarb
fidivs
cmp
mov
in
sbb
pop
daa
sar
sbb
stos
enter
mov
add
and
lret
dec
mov
aas
imulb
cmp
lret
or
xchg
lea
mov
pop
adc
or
shl
jno
push
sbb
insl
cmp
iret
loop
mov
movsb
out
jmp
negb
cmpsl
bound
pop
add
mov
loopne
dec
cmc
push
sub
xlat
aad
mov
iret
jbe
cwtl
js
loopne
fstl
xor
test
pop
cld
inc
out
out
stos
mov
cld
push
pop
push
scas
call
rclb
push
sub
loopne
and
cltd
stos
push
xchg
in
stos
push
mov
push
mov
cmpsb
sarb
sbb
repz
aaa
ss
int
jbe
jle
mov
loopne
adcb
xor
hlt
jecxz
cmp
cmp
jge
fsubr
push
and
and
nop
push
andb
xchg
dec
push
mov
sbb
pushf
in
into
in
lock
add
xor
cli
adc
outsl
loope
repnz
pushf
sbb
int
repz
sub
or
cmpsb
jb
adc
enter
call
lahf
cwtd
dec
or
push
insb
lahf
lock
add
pusha
arpl
daa
sub
dec
fdivr
jg
in
shrb
adc
arpl
push
inc
adc
mov
imul
mov
mov
adc
ja
sbb
int
cmp
sarl
lods
cmp
adc
xor
add
popf
xchg
jno
fadds
sub
mov
inc
ja
mov
jmp
movsb
push
jnp
scas
mov
in
push
movsl
jo
jb
jb
jae
jbe
aad
push
mov
adc
add
and
pop
push
out
lret
mov
add
out
or
imul
jecxz
out
out
jb
jae
cmpsb
push
and
push
push
pop
iret
push
out
hlt
sub
dec
mov
int3
in
scas
nop
adc
test
pop
in
mov
loope
pop
rcrb
pusha
pushf
cltd
sub
lods
hlt
jg
push
ds
or
pop
mov
mov
dec
hlt
into
xor
popa
mov
lahf
cwtl
cmp
sub
cmpsb
xchg
or
mov
mov
out
scas
outsl
and
out
xchg
push
insl
adc
enter
cmpsl
mov
jns
mov
adc
lods
mov
out
cmpsl
mov
repz
cld
daa
fidivl
add
mov
aam
jl
ja
inc
mov
jmp
sahf
arpl
inc
loopne
pop
push
lock
lods
nop
push
sbb
ljmp
cmp
adc
mov
mov
movl
or
mov
mov
dec
mov
jae
stos
aam
sbb
aas
imul
sub
jmp
xchg
mov
dec
cmp
pop
sub
test
jecxz
pop
add
lcall
xlat
imul
cmpsb
shll
test
sbb
xchg
ljmp
pop
jne
fwait
pop
or
insb
mov
sub
int3
adc
mov
pop
add
and
imul
or
inc
nop
in
call
sbb
dec
or
test
or
fchs
shlb
adc
sbb
adc
cli
jns
dec
leave
and
leave
mov
cmp
inc
fiadds
mov
je
test
cmc
push
mov
adc
outsb
push
add
mov
ljmp
inc
push
cwtl
aas
in
ja
push
insl
cmpsb
xchg
inc
fimull
adc
int3
dec
shrl
or
data16
add
ret
mov
mov
push
push
lods
mov
sti
push
sub
pop
jg
out
pop
mov
push
sbb
movb
enter
ljmp
ja
fidivrl
daa
jmp
ja
nop
ss
nopl
adcb
mov
sub
pop
in
mov
test
loope
sub
pop
test
push
pushf
int3
push
mov
ret
mov
cmp
insb
mov
mov
std
or
adc
xchg
lret
jne
dec
pop
push
pushf
pop
ja
fnstsw
out
fcompl
outsl
mov
mov
sub
xchg
push
and
add
xchg
aas
aad
pop
mov
repnz
loop
or
sbb
pop
insb
loope
pop
jae
divb
xor
dec
aaa
test
push
mov
push
int3
dec
push
inc
pop
das
xor
lahf
xchg
daa
insb
ror
xor
fildl
popa
xchg
push
jg
jge
cltd
das
xchg
call
xchg
and
addr16
jge
std
repnz
aam
test
nop
adc
pmaxub
push
sub
repnz
icebp
jno
lret
xor
scas
xor
lock
sarb
adc
mov
xor
rolb
add
inc
push
xchg
and
stos
adc
cmp
das
popf
pop
fmuls
or
sub
xchg
mov
xor
in
push
mov
jge
pop
addr16
jmp
inc
mov
sub
sub
mov
out
mov
stos
jno
add
out
mov
mov
sti
add
push
add
ret
movsl
fisttps
push
icebp
mov
adc
popa
sub
push
out
fldenv
out
adc
sbb
std
mov
sahf
cwtl
sub
cmp
lea
outsb
fisubrl
jge
addr16
fnsave
outsb
fcoms
call
aas
cmp
add
push
fwait
push
loopne
lods
add
out
comiss
push
cli
fsubr
lock
daa
test
jl
inc
push
lret
xchg
xor
lods
and
xchg
jnp
pusha
stos
jae
push
fcomip
jge
clc
or
xor
movnti
call
outsb
or
adc
push
in
enter
je
lds
push
stos
xchg
fimull
push
dec
test
adc
lret
jp
inc
or
adc
add
or
ds
ljmp
pop
pop
mov
dec
adc
or
shlb
or
andb
xchg
aad
add
adc
adc
scas
push
fnstenv
sahf
add
mov
stc
jg
jecxz
inc
push
jg
es
dec
push
adc
pusha
lods
orb
pop
leave
ret
push
mov
sub
or
mov
adcl
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
add
sbb
movzwl
sbb
mov
movb
and
lea
mov
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
pushl
pushl
pushl
push
push
call
cmpl
jb
mov
andl
mov
inc
mov
cmpl
jge
jmp
call
cmpl
jb
mov
xor
movl
inc
andl
mov
sbbl
movl
push
movl
movl
cmpl
je
cmpl
jb
jmp
push
pushl
push
push
call
mov
dec
mov
jmp
mov
push
orl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
sbb
mov
mov
push
add
jmp
incl
mov
mov
inc
movl
cmp
jb
not
mov
xor
movl
add
jmp
movzwl
or
mov
adc
mov
adcl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
addl
add
sbbl
movzwl
andl
mov
andl
xor
xor
inc
mov
cmpl
jle
jmp
push
push
pushl
call
cmpl
jb
mov
movl
movzwl
xor
add
movl
mov
mov
mov
inc
mov
movl
cmp
jne
and
mov
sub
mov
xorl
xor
and
add
mov
mov
sbbl
jmp
mov
xlat
and
mov
js
es
or
inc
pop
addl
xchg
xor
pop
movsb
mov
push
mov
and
xor
ljmp
ss
pushfw
jo
dec
lret
in
cmp
jbe
push
aam
scas
and
enter
shll
pop
aad
fisubrs
subl
cwtl
push
cmpsl
ja
mov
lret
mov
icebp
ja
popa
cmp
push
mov
hlt
test
push
cmc
xor
sbb
jmp
adc
push
lods
inc
pop
testl
inc
push
mov
imul
repnz
xor
push
sbb
jle
fistpll
push
out
hlt
adc
cwtl
popf
sub
inc
cmp
mov
pusha
dec
test
lea
aas
enter
adc
push
cli
lods
push
fistl
int3
mov
popf
call
sbb
push
aaa
lcall
and
jge
js
test
xor
pop
push
scas
lock
fists
xor
pop
cmc
jne
outsl
lods
nop
int
movb
repz
in
ljmp
insl
loop
cmp
mov
cmpsb
and
cwtl
mov
add
ret
jmp
fwait
sub
jg
and
pop
push
cmpsl
lret
imul
and
fcoml
mov
es
pop
mov
in
mov
rcll
dec
pop
push
loope
push
cmpsl
adc
push
cmp
jae
or
in
rolb
cmp
sub
in
xchg
jb
push
out
cmp
rolb
lcall
call
in
out
ficompl
rcl
imul
sbb
loop
mov
jae
and
mov
push
lret
dec
mov
fbld
sub
sahf
stos
cmp
jne
inc
mov
mov
lds
lods
out
sbb
push
fdivrs
mov
add
call
mov
mov
jnp
mov
push
jne
orl
mov
ret
ds
lahf
sarl
inc
push
xor
enter
imul
and
stos
push
pop
imul
mov
fmull
or
fcmovbe
imul
addb
repz
fs
lsl
inc
cmp
push
rcll
pusha
xor
cmp
cmpsb
mov
stos
sahf
shlb
nop
or
filds
mov
jo
hlt
repz
mulb
mov
cmp
dec
add
je
inc
test
bound
test
inc
pop
sahf
int3
int3
dec
mov
xor
xor
icebp
and
pop
shlb
mov
add
fistpll
cmpsl
adc
in
in
rorl
arpl
arpl
cltd
jecxz
pop
les
test
mov
cld
jmp
adc
push
xlat
rorl
mov
push
mov
js
je
aad
cmpsl
clc
cmp
sub
or
test
pushl
leave
int3
leave
adc
ljmp
into
sub
cmp
cmpsl
push
and
loope
or
pop
sub
stc
addl
test
jp
rcll
push
mov
repz
and
mov
xchg
ja
pushf
and
shlb
mov
ret
out
test
xorb
cmpsb
mov
fwait
bnd
arpl
inc
xor
push
ret
mov
shlb
push
mov
cli
push
pusha
xor
idivb
out
shlb
clc
or
or
adc
jne
dec
mov
imull
mov
push
mov
inc
sub
xchg
lods
pop
out
sub
imul
cmc
mov
pusha
imul
out
jns
mov
fisttpl
mov
mov
pop
sti
dec
mov
sub
inc
adc
imul
dec
in
mov
adc
xor
sbb
scas
outsl
rcrb
xchg
inc
cmp
insl
cmpsb
mov
bound
shlb
scas
push
pop
xchg
mov
repz
add
fdivrl
das
xor
aad
test
repz
fadds
outsl
and
insb
scas
mov
xor
xor
jge
push
add
push
lods
jo
lds
jl
jge
enter
les
add
insb
mov
jae
pop
popa
ret
stc
add
cli
les
into
ss
adc
daa
hlt
inc
xor
or
loope
inc
loope
pop
fs
inc
cmpsb
fldenv
mov
mov
roll
sbb
popf
jg
and
das
or
dec
mov
mov
sub
or
pusha
xchg
icebp
or
test
fs
jnp
movsb
popa
fsts
je
inc
out
ret
pop
mov
add
lahf
and
ficompl
and
adc
clc
cmp
lds
sub
add
xchg
stos
popa
inc
xor
sbb
sbb
push
xor
lods
icebp
scas
mov
or
idivl
imul
es
jb
aas
js
bound
mov
lds
cmp
fildl
mov
in
adc
mov
jg
popa
mov
fwait
push
dec
inc
dec
mov
xor
pop
inc
xchg
mov
pop
inc
idivb
fsub
push
xchg
js
je
clc
cmp
lods
les
jb
cmp
mov
xchg
jo
inc
daa
lods
aam
mov
dec
push
ljmp
lcall
and
in
inc
pushf
jno
inc
add
out
jge
mov
push
adc
cmpsb
or
mov
loop
adc
out
inc
hlt
fwait
push
adc
daa
aas
dec
sbb
jo
mov
jmp
mov
cmc
shl
inc
out
jb
sub
sbb
add
mov
mov
lods
xchg
das
xor
mov
xor
add
adc
mov
cld
addl
inc
cmp
mov
movsb
std
aaa
xchg
mov
dec
fucom
imul
sbb
xchg
mov
call
aaa
push
addr16
into
xchg
xchg
jge
hlt
mov
sbb
das
inc
xchg
xchg
push
fcmove
cltd
dec
call
pop
xchg
xor
push
sub
sub
add
pop
sbb
jmp
adc
push
mov
inc
pop
cmp
mov
and
xorb
mov
mov
mov
pop
add
mov
cmp
xchg
ret
out
stc
leave
mov
jmp
movl
leave
imul
pop
inc
lods
gs
jl
stos
push
shrb
pop
mov
enter
out
mov
enter
subb
ja
stos
cmpsb
pushf
fstpl
jg
dec
inc
add
decl
xor
leave
sbb
out
stos
dec
fstps
jo
and
pusha
push
popf
add
scas
mov
cmc
fnstenv
insl
sar
mov
in
cld
xor
cmp
push
fisttps
int
addr16
clc
imul
jns
pop
xchg
imul
in
mov
and
or
xchg
fadds
cmp
pop
stos
les
mov
jb
test
jmp
shlb
mov
imul
adc
or
mov
dec
adc
fists
into
dec
lcall
fsubs
dec
call
xchg
jl
push
adc
sub
repz
jbe
and
testl
pop
repnz
addb
int
jnp
hlt
and
sub
pop
cltd
ljmp
xchg
mov
cmpsb
fimull
xor
das
aaa
pop
lds
xor
ret
xchg
dec
int3
mov
jae
in
addb
jge
adc
pop
dec
jbe
lock
dec
fwait
insb
in
push
ds
or
arpl
xchg
cmp
mov
rcr
mov
fcompl
roll
pop
fidivrl
lahf
fdivrs
jl
ret
and
dec
push
mov
out
sbb
hlt
xchg
gs
shlb
push
jge
outsb
mov
jmp
inc
mov
pop
fistps
icebp
arpl
dec
inc
or
out
mov
adc
mov
xchg
je
lea
testb
icebp
gs
xchg
push
test
mov
lock
ja
mov
rclb
roll
adc
or
jl
push
loop
jmpw
pop
bound
push
leave
ja
dec
xor
inc
jl
insl
test
jmp
sub
daa
dec
cmpsb
or
sub
cmp
and
and
push
pushf
out
jne
sub
lahf
cmp
add
out
sbb
xchg
xor
stos
sbb
cltd
fcoms
les
mov
inc
daa
scas
fmuls
push
pop
or
hlt
sub
push
push
imul
mov
add
xor
push
add
aaa
and
fidivs
mov
fwait
lcall
push
sbb
push
mov
call
xor
popa
loop
push
pop
push
dec
mov
iret
mov
in
push
xchg
xchg
in
arpl
iret
inc
dec
mov
pop
adc
and
mov
mov
imul
adc
mov
aas
ja
jo
mov
test
sub
jp
mov
and
mov
mov
mov
dec
xchg
xchg
loop
mov
movsb
mov
dec
sti
addl
inc
mov
jg
mov
lods
pop
ss
movsl
js
popf
sarl
fdivrs
pop
inc
cmp
aas
and
lret
push
stos
mov
add
ret
xor
mov
dec
mov
or
sar
dec
add
jb
xchg
loope
sbb
adc
pop
aaa
or
xchg
fs
dec
and
sub
dec
push
push
add
push
lcall
shrb
pop
cmp
stc
subb
xor
iret
push
sti
shlb
pop
fwait
fwait
in
sbb
shlb
pushf
test
jmp
pop
ljmp
jne
fiadds
scas
subl
aad
and
mov
out
jmp
add
lea
cmp
popf
pushf
mov
daa
sbb
sub
enter
lock
push
movsb
jp
nop
sarb
xchg
jle
dec
sub
mov
cmp
fstpl
push
ret
in
jno
and
or
jg
add
and
cld
mov
leave
adc
mov
push
add
dec
xorl
inc
xchg
test
loop
mov
and
xor
mov
sar
pop
xchg
push
in
inc
inc
test
aam
fidivl
adc
add
dec
imul
out
cmp
shrb
pushf
mov
cmp
insb
pop
or
push
jmp
int3
in
pop
jbe
cmp
xchg
ljmp
loope
dec
int
shll
cmp
pop
inc
scas
add
cvtpi2ps
imull
stc
in
sar
mov
cmpb
push
dec
and
adc
fnstcw
lods
inc
scas
jne
mov
mov
into
imul
mov
sbb
loopne
ret
andb
sarl
xchg
mov
xchg
add
xchg
adc
add
je
xchg
cmp
ret
sbb
ds
mov
cmp
pop
inc
outsl
sarl
ficomps
into
stos
mov
stos
or
mov
outsl
mov
cmp
shlb
movsl
les
xchg
or
and
ret
xchg
cld
pop
lock
ret
fdiv
push
mov
mov
mov
xchg
stos
pop
xchg
ret
xor
lret
fwait
cmp
mov
js
andl
lret
cmp
outsl
mov
out
mov
fstps
test
mov
push
pop
cmp
dec
xlat
imul
popf
inc
pop
test
jecxz
and
inc
lea
mov
add
push
mov
cmpsb
sbb
lock
sbb
out
movb
pop
icebp
sbb
popf
or
ss
stc
daa
cld
or
out
lret
xchg
lret
xor
orb
and
add
mov
add
iret
sbb
xchg
mov
lcall
xchg
cltd
addr16
sbb
ret
ljmp
cmp
dec
shrb
fdivl
mov
push
lret
or
cmpsb
popa
testl
or
push
orb
inc
jge
clc
add
scas
jecxz
mov
stc
bound
xor
fisubs
add
clc
in
ljmp
and
pusha
ljmp
outsl
mov
loop
and
arpl
pop
xor
cli
jecxz
leave
cmp
pop
lods
mov
push
or
dec
jae
fmuls
cmpsb
sub
les
rcll
cwtl
mov
mov
and
jge
or
lahf
sti
and
aaa
ret
mov
mov
inc
loopne
subb
fs
rolb
hlt
test
sbb
sbb
loopne
aad
mov
mov
pushf
ja
cmc
call
push
mov
in
jb
out
adc
inc
test
jbe
les
cld
mov
shr
mov
das
adc
xchg
add
hlt
lds
push
pop
or
stos
mov
inc
sar
xor
movsb
mov
sub
clc
out
std
movsb
inc
jno
aam
sar
sbb
sbb
mov
sbb
inc
jecxz
mov
or
in
icebp
jg
es
mov
lcall
sahf
aad
out
and
jbe
bnd
fs
out
xor
das
stos
jecxz
xor
and
rsm
mov
sub
out
add
push
mov
ljmp
hlt
adc
in
cmp
subb
sub
imul
jmp
in
pop
fnsave
fsubs
adc
or
test
scas
lods
in
mov
and
push
loopne
ret
gs
js
imul
xchg
in
repz
lcall
pop
dec
jmp
mov
aas
adc
mov
lret
call
mov
cld
sbb
sbb
pop
inc
fldt
fimull
inc
icebp
hlt
push
mov
fwait
out
inc
push
sar
jmp
inc
push
xchg
clc
xchg
out
loopne
scas
mov
popf
stc
cmpsl
stc
push
pop
ja
scas
and
jp
dec
jl
test
addb
out
jo
dec
or
in
jecxz
dec
and
insb
scas
cmp
subl
add
add
sti
push
into
daa
mov
pop
sub
mov
adc
stos
pop
mov
pop
je
adc
stc
test
outsb
sbb
xor
xchg
push
xchg
ja
and
pusha
push
fisttpl
out
dec
and
dec
int3
mov
mov
sbb
xchg
xchg
xchg
sub
je
lcall
dec
xchg
cmp
addr16
nop
adcl
xor
xor
mov
fldenv
clc
out
push
jmp
in
insl
mov
sbb
stos
jl
fisttpll
sbb
fidivl
jae
sub
divl
jg
jl
lret
out
in
xor
mov
movsb
jecxz
xchg
cmpsl
test
es
movsl
push
cld
ret
leave
mov
repnz
ret
push
bound
int3
push
push
sbb
xchg
pop
adcb
or
pop
aas
fwait
and
cs
jno
aam
out
ljmp
sbb
inc
xor
sub
insb
add
daa
jmp
jo
xchg
cmp
jnp
sub
or
std
push
cli
and
cmp
and
rol
in
sub
insb
push
mov
addr16
dec
pop
loop
in
icebp
xchg
push
fucomi
cli
xchg
fsubl
sti
mov
loop
mov
ret
jne
and
test
sub
or
jo
icebp
inc
jecxz
xor
insb
flds
clc
je
jb
jb
jmp
adc
lret
movhps
xchg
mov
loope
cmp
jle
dec
add
popf
mov
mov
inc
jno
xchg
mov
into
mov
cli
pop
fistl
pop
lea
arpl
jo
mov
mov
mov
mov
leave
jo
mov
dec
pusha
cs
mov
jecxz
popf
dec
mov
jae
js
adc
test
mov
icebp
jno
push
and
jno
sbb
movsb
dec
es
or
popf
shrl
loop
test
mov
ljmp
insl
sbb
jl
jl
xor
pushf
cmpsb
int
sbb
xchg
into
dec
or
dec
or
push
je
aaa
jne
or
xor
out
cmp
sbb
cmpsl
dec
and
outsl
and
movb
inc
rcll
aad
fnstsw
mov
and
xor
inc
push
jecxz
inc
mov
push
mov
push
int3
push
push
lret
sub
mov
fwait
aas
out
jbe
int
movl
sbb
rorl
rclb
fcomps
mov
roll
or
mov
xchg
stc
loope
jmp
repnz
cmp
inc
lods
test
add
jns
inc
cltd
cmp
xchg
stos
push
dec
or
cli
hlt
jb
dec
push
mov
dec
inc
add
lahf
mov
inc
mov
push
inc
pop
insb
xchg
pusha
aas
dec
xor
lock
sti
clc
pop
adc
and
jmp
inc
and
ret
jne
test
xor
les
pop
aas
cmp
test
add
outsb
sahf
jno
stos
out
sbb
mov
in
xchg
fnstcw
lods
mov
mov
ds
pop
xchg
ficompl
xor
mov
imul
push
cmp
dec
jmp
push
dec
out
lods
xchg
paddusb
out
cltd
aad
into
repz
or
ret
gs
mov
inc
das
ret
mov
outsl
xlat
ljmp
lret
in
cmc
push
push
or
cmp
push
lock
and
cmp
arpl
and
push
sub
mov
test
and
fistpl
sahf
daa
pushf
mov
loope
jge
inc
pusha
mov
add
adc
mov
inc
sub
cmp
fstpt
out
in
cmp
arpl
sbb
jbe
push
fxtract
add
pop
lahf
add
ja
aam
subl
pop
in
lcall
test
sub
inc
and
rorl
inc
add
jne
sbb
mov
jg
xchg
fs
testl
and
adc
or
orb
xor
nop
cld
aad
cmp
push
mov
mov
in
notl
fstl
ss
add
cmpsl
inc
mov
pop
lds
mov
maxps
cwtl
filds
incl
jae
popf
fisttpl
and
jb
outsl
adcb
jnp
ss
jb
sbbb
ja
dec
sti
mov
es
and
mov
jae
pop
push
addb
push
jnp
fnstsw
sub
cmpsl
in
dec
cmp
stos
pop
inc
testl
xchg
jne
mov
or
xchg
bnd
or
fdiv
scas
sbb
mov
in
dec
jg
adc
and
pop
cmp
call
cmp
sub
dec
fcompl
scas
and
sbb
mov
bound
cltd
adc
pop
insb
sbbl
sbb
pushf
imulb
loope
ds
mov
inc
scas
pop
loop
push
xchg
sub
shlb
push
cmp
inc
cs
xchg
frstor
xchg
in
aaa
push
mov
neg
leave
int
cld
xchg
leave
xlat
mov
daa
sub
sub
aam
adc
out
push
pop
cmc
cmp
cli
pop
jmp
push
out
aad
jge
dec
iret
mov
xchg
ret
jb
fs
sbb
jmp
cmpsb
and
mov
pushf
ja
pop
xor
inc
mov
cmp
cmp
mov
xchg
jb
inc
sub
ffreep
sub
sub
test
pop
sbbl
js
adc
fldcw
xchg
cmp
mov
aam
dec
pusha
adc
or
stc
and
inc
mov
push
push
push
pop
ljmp
sbb
stos
fldenv
fistpll
mov
sub
push
inc
dec
loopne
mov
sbb
test
aam
mov
sub
pop
je
jbe
and
test
or
cmp
cwtd
mov
aad
leave
pop
leave
es
mov
cs
dec
pop
xchg
js
adc
cmp
ret
push
fsubs
adcl
xor
loop
xor
pop
aam
mov
roll
pushf
aaa
adc
pop
xchg
clc
mov
xor
jne
push
ss
mov
fisubrl
cmp
push
mov
mov
sbb
movsb
and
adc
lcall
jmp
neg
inc
inc
test
js
testb
iret
jnp
dec
mov
testb
arpl
push
dec
enter
xchg
sub
xchg
shrb
mov
test
add
mov
out
fdivr
rdpmc
mov
mov
lds
int3
rcll
adc
xchg
stc
and
cmp
xchg
dec
leave
add
xor
cmpl
mov
mov
push
push
xlat
push
add
xchg
negl
ljmp
mov
jmp
cmp
adc
xor
insb
sub
lock
jb
imul
sub
dec
loope
push
stos
push
sub
movsl
xchg
rcl
add
daa
cmp
xchg
movsl
xor
jle
xchg
dec
lret
loopne
test
adc
pop
cld
in
arpl
ds
xor
dec
mov
ds
mov
call
bound
loop
jb
clc
dec
adc
xchg
fnstenv
cwtl
sub
and
adc
dec
jae
sub
cmp
jae
pop
mov
jge
daa
sub
mov
movsb
gs
xchg
cli
ret
out
int
loop
das
out
or
jl
or
sbb
cmp
jecxz
push
lock
das
adc
pop
sahf
or
iret
pop
sbb
mov
jb
mov
fcomps
dec
and
lods
lods
mov
push
pop
inc
xchg
inc
ss
pop
jle
pop
jb
lret
leave
stos
lock
xchg
sahf
call
xchg
jns
lret
xchg
push
mov
test
mov
dec
adc
xchg
mov
shl
inc
call
pop
aas
xchg
mov
mov
xor
mov
jge
test
push
dec
or
cmp
cmp
or
mov
icebp
test
mov
push
ret
sti
insl
jmp
fcoml
xchg
fildl
scas
or
fnstenv
test
xchg
in
popf
gs
movsb
out
cwtl
je
outsb
decb
mov
cmp
in
dec
and
repnz
sbb
jbe
repz
out
sub
mov
lahf
adc
dec
push
add
mov
jbe
xor
into
cld
xor
and
popf
ret
inc
inc
pop
cs
in
cmp
jmp
in
movsb
popf
fnsave
mov
sti
sub
pop
popf
cmp
and
xchg
sub
sahf
pop
adc
and
sbb
and
inc
scas
fidivrs
push
or
call
stos
mov
aas
push
sbb
stos
daa
sub
mov
sbb
lds
dec
and
test
jae
shll
pop
ss
in
imul
ja
insl
dec
test
add
dec
mov
inc
jbe
adc
int3
and
data16
mov
imul
pop
gs
xor
ret
js
pop
or
loope
dec
insl
mov
mov
jae
arpl
jle
shrb
cli
xchg
aas
mov
mov
insl
xchg
sahf
pop
mov
pop
inc
loope
shr
cmp
and
pop
inc
mov
xor
cs
xor
cwtl
mov
xor
xchg
jns
xor
pop
jb
lods
psrlw
push
shrl
dec
and
mov
inc
in
mov
lds
data16
adc
sbb
jge
xchg
ret
std
and
mov
pop
data16
call
into
add
sub
jmp
shll
adc
loopne
or
add
inc
scas
xchg
into
lret
xor
dec
xchg
cmp
push
push
sbb
je
dec
mov
loopne
pop
xor
insb
adc
and
push
push
fimuls
mov
mov
jno
sub
or
mov
mov
pop
mov
mov
into
rolb
pop
adc
jmp
cmp
sub
fadd
jnp
ret
push
fidivl
sbb
sbb
jge
pop
or
movsb
xchg
xchg
aaa
pop
or
adc
or
pop
jbe
jl
sub
push
nop
enter
std
xchg
pop
mov
leave
mov
pop
push
movsl
daa
dec
lahf
and
push
add
and
repnz
shl
xlat
sbb
lds
shll
cmp
jae
insb
arpl
fs
xor
lcall
popf
out
sbb
cmp
gs
js
sbb
adc
popf
jne
inc
stc
rcrb
adc
fdivl
fmuls
and
push
and
mov
inc
pop
movsb
mov
ds
sbb
mov
ljmp
add
out
lahf
js
outsl
xchg
jbe
add
sbb
cmpsb
hlt
sub
push
pop
aam
or
test
rclb
lods
adc
inc
sbb
push
add
push
test
mov
push
push
dec
xchg
loopne
pop
jnp
sub
in
call
lret
jno
push
jmp
ffreep
dec
popa
sbb
sbb
in
push
xchg
pusha
pop
rcl
mov
push
push
nop
mov
std
or
cs
sti
pusha
and
jg
outsb
lahf
stc
jmp
stos
push
mov
in
in
mov
sbb
dec
jmp
lea
push
sbb
loope
xchg
out
pop
xor
scas
shrl
outsb
nop
sbbl
shrb
xchg
lahf
jns
inc
fs
mov
not
mov
hlt
jae
pop
jmp
xlat
cwtl
enter
jge
jo
pop
jecxz
mov
outsl
lods
or
ds
lret
dec
ljmp
push
movsb
mov
popa
lea
sbb
loope
shll
pop
je
push
cmp
mov
jge
adc
das
ja
jmp
imul
push
int3
nop
loopne
cs
int3
in
out
jae
push
push
jg
enter
lods
cmp
es
push
stc
lcall
inc
dec
or
arpl
in
sbb
lcall
sbbb
xchg
ds
int3
loope
xlat
ret
iret
or
and
inc
sbb
or
xchg
scas
and
adc
in
loope
sub
adc
popf
sbb
pop
ss
hlt
jp
xchg
pop
mov
sub
lret
push
add
lea
loopne
inc
adc
leave
xor
into
mov
repnz
test
cmpsl
add
push
jg
push
mov
enter
cwtl
ljmp
dec
loopne
sbb
sub
inc
sub
cs
mov
rcrb
mov
xor
jmp
loopne
ror
mov
dec
pop
push
add
xchg
test
int
adc
xor
jg
jp
sub
pop
and
mov
sbb
lods
adc
push
cmpsl
sbb
cmp
mulb
push
push
popf
cmp
js
pop
add
push
mov
idivl
adc
lods
dec
xor
push
push
pop
sahf
push
xor
or
mov
mov
mov
in
test
mov
pop
push
lea
inc
cmpsl
adc
movsb
sub
mov
inc
sti
cwtl
les
mov
mov
and
add
scas
inc
jne
imul
movsb
cmpsl
sbb
xchg
mov
js
mov
nop
pop
adc
xor
sub
mov
inc
pop
lahf
jbe
cwtl
outsb
cmpsl
jg
ljmp
das
cmpsl
and
mov
xchg
cmp
movsl
outsl
mov
sub
dec
test
mov
hlt
cmpb
cmc
jno
jb
mov
popa
or
jae
adc
lret
enter
mov
adc
mov
mov
mov
mov
add
xchg
lods
inc
mov
xor
jmp
jl
cmpsl
jg
mov
and
push
push
mov
mov
nop
scas
jb
cltd
add
push
pop
or
in
pop
je
or
sti
or
dec
into
add
lret
mov
js
sti
cmpsb
movsb
adc
mov
stos
jbe
imul
mov
xchg
insb
movsl
fidivs
test
or
stc
test
fcmovu
xor
add
test
fwait
sbb
or
sub
enter
repz
pusha
jle
jle
pop
add
and
leave
and
lea
pop
jb
dec
jp
mov
cli
in
xor
push
jge
mov
sub
clc
sbb
xchg
pop
out
inc
repz
pop
movsb
sbb
dec
ljmp
icebp
fldt
stos
cmovns
leave
xchg
or
out
jne
cmc
cs
fidivrs
cwtl
and
ret
dec
dec
or
fwait
jnp
cmpl
fidivs
cmc
fnstsw
inc
mov
xor
or
arpl
mov
movsl
adc
push
jp
int3
pop
and
jmp
mov
sbb
cltd
sub
ss
add
hlt
xor
jmp
jle
cwtl
pop
xchg
cmpsb
idiv
out
shll
or
cmp
push
shll
arpl
in
out
pop
ljmp
lods
mov
std
rorb
push
inc
mov
out
popa
aad
popf
add
add
inc
cmp
into
mov
xchg
xchg
test
add
mov
test
icebp
mov
rcr
jecxz
cmp
mov
mov
mov
in
xchg
mov
cmc
cmp
mov
mov
jns
xorb
adc
mov
cmpsb
jl
movsb
sub
pusha
adc
push
adc
enter
shll
pop
dec
mov
push
insl
or
sub
sbb
mov
bound
pop
mov
loope
ror
push
and
int
xlat
or
cltd
in
push
cmp
xchg
inc
arpl
jo
dec
cmp
test
ss
js
out
inc
xlat
mov
dec
scas
jmp
cli
arpl
adc
mov
pop
cmpsl
add
gs
mov
cs
cmp
xchg
jo
mov
rclb
pop
out
in
fcomps
mov
jo
xor
push
sbb
enter
pusha
push
mov
dec
int
cwtl
std
cmc
jne
sub
xor
add
adc
mov
addl
movl
movl
movl
movl
mov
movl
cmpl
je
cmpl
ja
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
xor
mov
mov
xor
movl
cmpl
je
cmpl
ja
jmp
push
call
xor
xor
dec
mov
jmp
add
mov
mov
je
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xor
xor
sub
sub
sub
sub
xor
adc
mov
adc
jmp
add
testb
and
mov
pushf
rol
sbb
addl
adcl
push
cwtl
xchg
int3
pop
mov
loopne
pop
mov
jns
cmp
daa
pop
push
mov
inc
mov
sbb
mov
pop
lret
pop
dec
cwtl
enter
aas
jne
jb
push
jg
negb
cmp
mov
adc
jmp
push
sbb
push
sub
stos
int
out
mov
mov
mov
out
adc
xchg
cli
xchg
popf
jb
inc
dec
adc
inc
es
mov
xlat
and
push
adc
inc
or
xor
frstor
lock
pop
ja
jmp
lret
stc
mov
and
fwait
and
cmp
shlb
or
repnz
dec
pop
and
ficompl
bnd
xchg
stc
js
push
ja
inc
mov
aad
aam
sbb
aad
ljmp
pop
notl
ds
insb
xchg
dec
js
and
mov
ficoms
movsb
clc
in
dec
aaa
adc
stc
scas
scas
mov
movsl
pop
mulb
mov
test
sbb
dec
cmp
loopne
leave
cmp
adc
pushf
icebp
ja
fisttpll
imul
jge
in
mov
fsubr
test
inc
sub
stos
std
push
inc
inc
cmp
cmp
adc
stc
sub
movsl
jmp
cmp
cmpsl
dec
sti
imul
cmc
int3
mov
sbb
into
xlat
pop
sbb
mov
rol
shrl
popa
add
pop
inc
aad
out
add
psrad
cli
sub
ret
lods
cli
xchg
push
sub
stos
cmp
push
ret
inc
sbb
scas
jno
cmpsb
les
xchg
mov
fs
daa
mov
dec
push
inc
xchg
insb
jo
cli
outsb
push
push
jl
jecxz
add
mov
orl
cmp
test
leave
add
ret
outsb
in
adc
mov
bound
mov
int3
imul
xor
fisubl
sub
ret
je
sub
or
add
and
xchg
shl
aad
mov
iret
sub
lock
and
test
and
hlt
pop
gs
mov
dec
mov
cmp
into
je
or
inc
mov
dec
dec
loope
jecxz
or
hlt
cmp
test
adcb
jle
mov
mov
and
xor
inc
push
mov
movsl
inc
mov
outsb
js
in
push
jo
sub
neg
sbb
lret
ficoml
sub
dec
mov
pusha
jne
ljmpw
rclb
lods
ds
das
xor
lcall
push
inc
rcrb
push
xchg
jecxz
dec
aas
mov
push
sarb
or
jmp
xor
add
sti
push
aaa
xchg
dec
ja
ret
push
les
push
jne
sub
das
nop
mov
jno
clc
lret
dec
xchg
loop
lods
cmp
push
sahf
jg
fnstsw
jbe
add
daa
mov
sbb
xchg
xchg
pop
xchg
pop
out
jnp
clc
cmp
adc
rcrb
mov
scas
add
add
pop
into
test
push
mov
movsl
mov
mov
pushf
push
sbb
lea
shlb
xor
mov
mov
ficoms
inc
cmp
mov
xchg
lods
out
ds
jmp
movsl
inc
adc
cmp
and
sub
mov
adc
xchg
dec
andb
pop
enter
pop
aas
outsb
imul
add
pop
and
and
ficomps
or
fsts
pushf
mov
add
out
dec
pop
or
cli
xor
sub
lcall
xchg
dec
imul
jle
leave
jns
jle
xchg
loope
xchg
mov
mov
mov
shlb
sbb
aam
xor
pop
es
clc
cmc
in
push
leave
popa
pop
mov
stos
adc
or
mov
pop
cltd
mov
test
and
dec
insb
dec
jge
and
loope
pusha
inc
jecxz
outsb
mov
loopne
lret
dec
lcall
enter
fcompp
out
jmp
and
pushf
sarl
cmp
shlb
cld
sub
lock
inc
imul
sbb
jns
std
scas
popl
mov
sbb
ljmp
or
push
and
mov
loop
adc
sub
cmp
test
mov
mov
jle
je
test
and
adc
outsl
cld
rclb
inc
scas
pop
cmp
xchg
pusha
xchg
imul
mov
cmp
adc
and
cmc
pop
pop
aas
cmc
mov
push
mov
int
pop
jnp
jns
xchg
clc
sbb
scas
imul
fsts
add
rcrl
fidivrl
dec
xor
lcall
xchg
aas
clc
mov
and
ja
inc
ss
sbb
mov
rcrl
mov
push
negb
gs
or
outsl
ja
clc
jae
inc
jmp
or
pop
mov
sbb
outsl
insl
es
and
pop
inc
mov
and
dec
add
mov
shl
mov
mov
mov
lahf
push
jge
test
push
xchg
sub
ret
pop
push
dec
and
mov
pop
stos
push
cld
cmp
xchg
leave
enter
rcll
out
mov
fcmovbe
rorb
aas
mov
push
loop
ret
pop
scas
xor
push
sbb
lahf
inc
mov
xchg
ds
movsl
inc
add
arpl
sbb
jp
dec
add
sub
jbe
xor
repnz
push
pop
jno
and
shrd
xor
icebp
xchg
push
push
nop
mov
mov
ret
push
mov
in
lds
and
hlt
fidivrs
push
sti
jmp
jmp
and
rol
sbb
jle
push
into
test
in
or
roll
aam
js
outsl
sub
xchg
icebp
hlt
xchg
movl
add
cmp
ja
mov
push
js
int
and
dec
jo
mov
dec
out
outsb
rorl
fsubrl
xor
mov
call
mov
mov
push
subl
adc
inc
ds
and
mov
push
jo
dec
sub
jo
jb
popa
les
imul
xchg
dec
cli
outsl
dec
cmpb
mov
adc
push
xor
mov
and
movsb
out
pop
or
loop
test
cmp
repnz
addr16
mov
sub
cmp
in
xchg
fisubrl
cmp
icebp
ds
mov
inc
pop
or
cmp
push
cwtl
and
push
into
push
mull
jne
fnstsw
xor
or
pop
clc
daa
pop
movsb
nop
iret
push
imul
xor
add
stos
fisttps
sub
mov
sub
aad
loop
jb
in
cmp
in
xchg
xchg
out
mov
and
add
in
rol
jp
sub
loop
push
aas
incl
jns
push
mov
mov
repnz
jmp
int3
mov
sti
mov
and
shll
inc
mov
js
js
mov
add
out
test
loopne
mov
sub
cmp
pushf
sahf
sbb
cwtl
daa
xlat
pop
jns
xlat
mov
bnd
xor
repz
pop
lods
and
aam
cmpsb
fwait
aaa
adc
mov
cmp
ljmp
xchg
mov
sub
bound
cmc
cmpsl
xor
cmc
cmp
add
enter
mov
incl
call
pop
cmp
insl
push
std
cmp
mov
pop
sub
inc
dec
fdivr
sbb
mov
testb
jnp
clc
or
sarl
stos
mov
daa
dec
xchg
lds
push
inc
lds
mov
ret
xchg
cmp
scas
jmp
aas
insb
out
ret
pop
sub
sar
pop
sahf
int3
sbb
mov
mov
out
mov
pop
sbb
xor
enter
jbe
insb
test
push
outsl
paddusw
push
inc
notl
jmp
inc
jl
mov
lea
xchg
ss
sbb
lock
or
jmp
stos
dec
test
cmp
je
arpl
lds
pop
or
inc
lret
inc
das
or
mov
or
fsts
imul
mov
xchg
push
test
int
ljmp
mov
sub
add
and
or
out
jns
scas
adc
inc
in
ss
dec
jb
sbbl
sub
push
insb
dec
sub
pop
fbld
add
add
cmp
jne
ret
push
mov
ret
aam
push
pop
jbe
bound
push
imul
nop
dec
sar
fdivs
xchg
jne
pop
shrl
fsincos
mov
lahf
pop
sub
and
cmc
in
sub
data16
fmul
xor
shr
rcll
sahf
sbb
push
test
inc
xchg
dec
inc
clc
push
add
and
stos
mov
aas
dec
mov
aas
cmp
insb
es
addr16
jae
adc
adc
addr16
jnp
xchg
jecxz
cmp
jno
ret
xchg
cwtl
lds
adc
xchg
mov
lcall
cmpsl
dec
daa
arpl
stc
fimuls
lea
inc
js
dec
fiaddl
mov
stos
add
and
sti
fsubrl
dec
sbb
mov
test
or
je
decl
cmp
imul
sub
jl
jmp
rcrb
xchg
iret
add
in
insl
and
add
hlt
push
fcoms
mov
int3
xchg
jl
sbb
push
popa
ds
sub
mov
mov
push
daa
xchg
cli
sarb
enter
clc
ds
rol
mov
in
cmpsb
loopne
xor
movsb
jp
xor
pop
mov
sub
sbb
push
clc
stc
cmp
cwtl
insb
dec
jle
xchg
mov
stos
xor
push
push
shrb
aad
daa
inc
lds
stos
imul
push
xor
lret
or
inc
pop
outsb
sub
leave
adc
insb
cwtl
fwait
xchg
pop
fisubs
xlat
sbb
imul
sbb
or
inc
pusha
pop
arpl
mov
pop
mov
imul
or
std
aad
mov
das
sbb
and
cmp
push
jns
jmp
in
outsb
imul
es
pop
iret
rdmsr
mov
dec
mov
jnp
js
and
jno
and
fidivs
mov
inc
mov
cmp
pop
inc
mov
repz
cmp
xchg
jno
fdivrl
jg
push
pop
stos
mov
cmpsl
mov
icebp
testb
mov
jg
cmp
jne
lds
inc
jge,pn
mov
stos
lret
mov
push
lahf
pop
in
pop
imul
jnp
sbb
mov
push
clc
push
gs
dec
jecxz
hlt
jle
gs
mov
mov
add
in
dec
leave
cwtl
sbb
int3
mov
push
xor
enter
cmp
stos
pop
lods
xchg
loope
popa
aam
sub
fisubs
adc
or
dec
loop
pop
emms
sub
adc
adc
or
mov
iret
sub
insb
mov
daa
sub
lahf
leave
out
popf
mov
cltd
insb
es
insl
mov
push
xor
or
cmpsl
push
test
insl
leave
add
insb
loopne
mov
out
xor
and
inc
fldt
push
jae
dec
xor
icebp
stc
mov
cmp
cmpsb
aam
xor
or
mov
jno
mov
jle
hlt
push
bound
jne
insb
add
leave
call
call
enter
push
add
adc
adc
insl
dec
mov
ss
and
rclb
sarb
pop
push
xor
in
xchg
sub
rcrb
push
pop
out
or
rolb
sub
cmpb
mov
dec
insb
loope
fisubrl
cmp
push
scas
mov
or
movsl
mov
ljmp
mov
jge
lahf
lock
push
scas
imul
push
ficoml
dec
inc
das
neg
sahf
sbb
pop
arpl
pushf
add
push
push
cmp
iret
daa
dec
xchg
sbb
adc
arpl
das
adc
add
ror
pop
xor
push
sti
fsubrl
movsl
in
xchg
cld
xor
and
pop
push
push
sbb
mov
lret
add
xor
dec
jle
or
mov
mov
daa
pop
stc
mov
sbb
out
fidivrl
and
movsl
sbb
sbb
push
ljmp
sahf
pop
test
es
subl
jl
stos
lret
pop
loopne
jb
aad
mov
adc
cmpsb
mov
inc
aad
adc
scas
shrb
dec
ljmp
inc
mov
xchg
mov
pop
fstl
std
push
xlat
adc
dec
loopne
imul
sub
ss
in
mov
pop
mov
pop
ja
je
pop
and
clc
jae
in
cli
rcr
js
pop
fsubl
idiv
fcoml
popa
es
jnp
jne
cmp
mov
bswap
jecxz
pop
aad
mov
mov
and
add
leave
push
jns
std
adc
push
xor
push
cld
inc
imul
ds
rorl
jle,pn
mov
sbb
in
sahf
enter
outsl
test
xor
push
ds
and
fimull
adc
test
adc
mov
in
cltd
outsl
inc
pop
pop
imul
test
test
cli
sbbb
loopne
jge
inc
cmpsl
xor
fwait
pop
test
test
xchg
adc
mov
xor
xchg
into
xorb
dec
add
pop
mov
pop
push
adc
adc
push
addr16
adc
mov
ss
sub
outsl
movsb
repnz
jno
lock
pop
cmp
inc
or
lahf
xor
sub
and
sarl
imul
or
imul
adc
inc
mov
mov
sub
rolb
icebp
loope
jno
jge
push
xchg
pop
call
jbe
lret
pop
push
out
and
mov
cmp
int
xchg
scas
sbb
or
cwtl
adc
add
enter
mov
das
mov
mov
mov
sar
out
and
cmp
xor
mov
adc
cmc
repz
or
frstor
adc
into
test
jae
mov
shrl
dec
lret
pop
icebp
addl
sub
dec
jg
mov
lods
iret
clc
clc
adc
mov
cmpsl
pop
add
int
and
adc
int3
adc
int3
xchg
push
inc
aad
mov
int3
mov
insb
cmp
imul
cli
jmp
enter
fistps
lds
aas
push
mov
fcomi
pop
decb
inc
pop
xor
sbb
lock
fstpt
xor
push
adc
fldenv
mov
movsb
or
sbb
and
xor
push
iret
movb
movsl
jecxz
xchg
dec
jecxz
mov
mov
jo
xlat
cli
mov
fidivrs
sbb
push
in
push
test
jb
dec
pusha
mov
add
pop
mov
push
mov
lods
mov
mov
and
and
mov
adc
ja
pusha
jns
aad
sbbb
loopne
or
push
imul
int3
pop
pop
enter
hlt
ret
stos
jge
jl
sub
and
std
xchg
push
stc
or
xchg
daa
dec
add
push
mov
shll
pop
andl
std
or
int
sbb
push
jecxz
leave
fs
and
clc
ljmp
in
icebp
xlat
aaa
popf
or
cltd
jle
mov
xchg
lret
add
mulb
pop
adc
inc
jne
mov
jl
mov
aad
push
out
aaa
xor
adc
dec
int3
stos
insl
mov
push
pop
sbb
xor
adc
sub
bound
push
jbe
jecxz
jg
inc
pop
mov
out
aam
sub
pop
test
cmp
jmp
add
movsl
lret
gs
jmp
iret
notb
pop
scas
jl
push
add
ret
cmp
pop
popf
scas
mov
or
sbb
mov
or
xor
mov
mov
sahf
out
imul
sub
push
test
cld
push
imul
inc
sbb
push
imul
sbb
idiv
enter
cs
scas
dec
pop
mov
fcompl
ficompl
ss
cmp
cmovl
in
xchg
rcr
and
jae
dec
pop
adc
ss
paddw
push
std
call
pop
hlt
cwtl
cmpsl
xchg
dec
call
das
adc
cmc
in
fidivs
jo
ss
push
inc
rol
cmpsl
cs
inc
rolb
jmp
adc
sub
fdivr
dec
icebp
xor
xchg
adc
and
stc
lahf
and
lea
lds
pop
mov
jle
xchg
nop
popf
popf
lods
fstps
or
jecxz
xlat
sbb
sbb
js
jne
pop
ss
negb
xchg
mov
add
jnp
and
pushf
aaa
movsl
xor
pop
fwait
mov
nop
lock
push
adc
jge
mov
loop
sub
pop
or
pop
icebp
mov
and
out
add
xor
pop
pop
popa
out
std
mov
dec
mov
push
test
cmc
dec
aam
pop
dec
cmpsl
jg
in
dec
ljmp
mov
fucompp
xor
dec
test
dec
mov
out
test
jecxz
mov
hlt
cmpsb
arpl
icebp
mov
scas
popf
and
lods
mov
lcall
stos
sub
push
shl
mov
push
mov
jne
xchg
loope
mov
scas
jmp
mov
cmpsl
insl
cmc
popa
sub
fisubs
mov
jnp
adc
into
in
xchg
pushf
or
andl
dec
insb
adc
bound
cmp
roll
mov
mov
xor
or
out
aaa
mov
push
es
pop
push
sub
mov
dec
and
sbb
xor
inc
je
push
inc
inc
adc
sbb
adc
inc
dec
es
in
divb
mov
pop
cmpsb
inc
pop
pusha
fdivs
jbe
sahf
xor
incb
mov
mov
mov
rorb
inc
and
ret
xlat
insl
outsl
dec
movsl
jmp
push
push
movsl
int
fwait
cmp
lret
aas
sbb
cmp
pop
loope
sbb
push
shr
enter
xchg
ja
adc
push
nop
fldcw
stc
or
aam
rcl
je
sub
inc
add
sub
mov
push
xor
cmp
sub
cmpsl
lds
out
aam
test
pop
inc
jbe
mov
pcmpgtb
rolb
std
movsb
lods
in
hlt
pop
mov
mov
cmp
pop
mov
sub
bound
repz
jge
gs
cltd
cmpsl
sub
repz
int
pop
loop
cmp
cmp
xchg
mov
mov
repnz
pushf
cld
lret
adc
xor
pushf
pop
mov
aad
mov
in
int3
mov
jg
std
subl
push
rolb
mov
sbb
push
push
mov
sub
sub
or
or
dec
ret
je
scas
inc
inc
ss
mov
int3
inc
mov
pusha
es
jecxz
int
add
xchg
inc
dec
mov
jo
cmp
idivb
or
inc
loop
dec
fstl
mov
repnz
scas
cli
mov
clc
lahf
lahf
data16
lret
stc
and
clc
enter
fiaddl
adcb
mov
cmp
or
jne
jge
imul
xor
pop
sub
outsb
fistl
cmp
arpl
adc
aad
mov
xor
mov
movsl
ljmp
fs
mov
xchg
or
jno
fldl
out
outsl
jp
sti
push
jecxz
mov
adc
jp
pop
cmpxchg
fcmovb
test
mov
pop
jmp
mov
push
imul
add
scas
sub
mov
pop
das
js
sarl
ds
loop
mov
daa
mov
cwtl
ss
cmpsl
repnz
into
testb
sbb
and
fdiv
int
dec
not
and
mov
mov
mov
test
imul
sbb
push
xor
lods
mov
das
movsl
cltd
xor
sbb
inc
mov
arpl
jp
xor
xchg
imul
push
lahf
jo
mov
jns
inc
pop
add
mov
xchg
xchg
or
lret
sbb
call
mov
lods
pop
test
dec
cld
sbb
aaa
jle
sbb
and
sub
stos
sbb
dec
pop
mov
add
sbb
bnd
mov
pop
aam
xlat
cmp
xchg
xchg
mov
mov
cs
sub
mov
dec
mov
int3
int
fisubrl
adc
ds
add
leave
and
movl
jno
xor
pop
cmc
jl
ret
std
aas
push
fwait
aas
fmuls
ljmp
jae
pusha
inc
mov
lret
push
cltd
xchg
sub
in
and
or
leave
insl
int
das
adc
loopne
mov
mov
jl
bnd
fsubrl
mov
jne
pop
pop
not
pop
jp
imul
xchg
bound
cmp
lods
add
les
pop
shrb
dec
jb
mulb
sub
cmp
sbb
inc
js
stos
jbe
bound
je
lods
pop
loop
and
inc
mov
mov
scas
cmp
push
xor
cmpsb
and
cs
repnz
flds
xchg
mov
sbb
push
sti
xchg
pop
and
fcoml
mov
jno
fadds
jbe
pop
int
push
sbb
mov
andb
sbb
sahf
pop
xor
jne
outsb
cli
jge
fsubrp
iret
imul
push
and
pop
xor
add
push
ret
mov
lcall
icebp
clc
call
call
repnz
mov
loopne
adc
into
orl
mov
xchg
sub
fdivl
xor
test
mov
dec
test
xor
stc
icebp
dec
fstpt
pop
out
js
ret
pop
dec
sbb
mov
mov
inc
adc
in
push
mov
movsl
jbe
inc
hlt
pop
dec
loope
fs
pusha
sub
mov
aad
bound
pop
jo
adc
int
insb
mov
jo
push
fiaddl
push
pop
sarb
mov
adc
adc
loopne
cmp
inc
sub
xor
sti
sub
pop
adc
mov
stc
outsl
and
add
je
cs
insl
das
divl
inc
or
mov
flds
leave
cmp
cmp
mov
add
dec
imul
sbb
lds
pop
push
add
out
sub
and
xchg
add
lods
outsb
pop
aas
sahf
dec
scas
aad
mov
cltd
mov
aam
cmpsb
mov
lea
jl
insb
loop
cmpl
add
bound
outsb
and
and
repz
negb
xor
mov
mov
or
inc
mov
jae
jmp
negl
imul
jecxz,pn
mov
insl
outsb
dec
loope
fadd
sbbb
jne
cmp
cmpsb
sbb
movsl
mov
sub
mov
mov
sub
or
sub
and
test
mov
sbbl
jecxz
aaa
push
pop
jne
jp
mov
jp
sbb
sub
xchg
dec
adc
pop
sub
mull
std
jnp
mov
outsl
inc
loop
mov
xor
imul
push
jb
shrb
dec
dec
movsb
pop
jb
repnz
xchg
sbb
xor
popf
call
mov
sub
cmc
sbb
or
outsb
fcomps
sub
jmp
fs
les
mov
fnsave
int3
add
push
or
lods
daa
sbb
loop
inc
add
jns
fsts
out
cmpsb
pusha
pushf
rorb
pop
mov
lret
and
push
mov
fwait
inc
pop
adcl
mov
ja
fcmovnu
xor
data16
data16
cld
imul
ljmp
ret
dec
cmpl
inc
hlt
iret
mov
mov
inc
pushf
stos
dec
push
stos
add
xchg
inc
popf
std
fcoms
std
daa
inc
mov
or
dec
dec
jo
sahf
add
add
lret
fidivs
dec
xchg
jp
xor
jo
inc
aas
sub
push
mov
sbb
rcrb
cli
add
aam
adc
das
popf
cltd
and
int
fstps
add
mov
jmp
mov
ja
mov
jb
adc
fwait
sbb
sbb
jnp
mov
dec
dec
push
cmc
sbb
dec
mov
xchg
sbb
jne
xor
sbb
mov
dec
stos
cmp
dec
push
push
push
xchg
inc
js
mov
jbe
out
xorl
rcl
test
mov
mov
aad
mov
insl
push
add
jae
pushf
scas
in
xlat
push
lods
outsl
mov
lods
ret
jle
and
cmpw
out
in
ficompl
xor
mov
mov
push
jp
mov
pop
push
pop
cmpsb
loop
shrl
mull
dec
es
adc
stos
insb
push
in
dec
pop
mov
or
xor
fdivl
daa
add
mov
stos
mov
adc
lods
or
lds
push
test
mov
lods
rcrb
stc
adc
aam
sti
sbb
jmp
into
lods
mov
aad
pusha
pop
cwtl
or
mov
xchg
inc
sub
outsb
sub
imul
sbb
jo
and
rcrl
adc
mov
xchg
aaa
add
jge
jb
xlat
mov
mov
pop
xlat
or
das
and
sbb
sbb
inc
je
int
pop
push
or
sub
inc
inc
push
negb
or
jle
repz
loopne
mov
push
cmp
hlt
cli
inc
outsb
rcrb
add
cli
inc
jae
mov
cmp
push
inc
jmp
rcl
cmp
push
pop
cmp
arpl
fdiv
xor
je
roll
arpl
pop
or
dec
pop
into
sub
jmp
imul
aad
hlt
xchg
ficompl
inc
jp
push
cmp
xchg
lahf
arpl
les
shlb
sbb
jecxz
dec
add
xlat
dec
sbb
mov
xor
jnp
jecxz
dec
lahf
inc
imul
mov
add
adc
push
fisttpl
xchg
ja
ja
sbb
fldcw
push
bound
jl
data16
in
jb
ficomps
jne
dec
jl
xchg
clc
mov
cmc
sub
in
sbb
jns
out
out
or
cmp
nop
cmpsl
pop
and
jns
repnz
dec
lret
nop
aas
stc
out
mov
cld
mov
pop
outsb
bnd
fsubp
outsl
mov
sbb
pushf
imul
mov
sub
mov
cmp
mov
lea
dec
sahf
lds
or
push
inc
repz
and
loope
pushf
or
push
fimull
dec
ljmp
cmp
test
cmp
push
mov
or
push
adc
and
push
clc
xchg
or
fnstcw
jns
insl
sub
cmp
lock
adc
add
ja
jbe
sub
add
in
mov
in
push
mov
ss
sub
fsubs
bound
and
sti
mov
xchg
out
dec
mov
mov
xor
addr16
mov
or
mov
popf
push
pushl
xlat
aas
xchg
mov
mov
pop
lds
pop
bsr
insb
aam
jbe
xor
mov
das
ds
jo
inc
mov
clc
es
dec
imul
sar
inc
xchg
jge
iret
js
nopl
mov
addl
xlat
adc
xchg
sub
mov
int
lock
stos
or
cwtl
add
shr
jnp
scas
xchg
dec
es
pop
mov
pop
sbb
cmp
sbb
cmc
test
sbb
or
mov
nop
mov
fisubs
rcl
xchg
cmp
pop
int
ret
xchg
xchg
and
mov
sub
lods
xor
cwtl
loop
out
dec
dec
mov
mov
mov
in
into
add
cmp
outsl
push
loopne
sub
test
aas
dec
and
iret
xor
outsl
js
mov
push
cmp
jbe
inc
cltd
out
add
enter
aam
in
sahf
mov
push
je
gs
outsb
and
cmp
adc
and
mov
addr16
mov
mov
push
push
fbstp
adc
shl
add
es
adc
add
inc
or
pop
mov
pop
test
dec
icebp
mov
xor
ud0
subps
pop
lret
scas
aad
loope
and
pop
or
sbb
insb
test
mov
lahf
cmpsb
inc
enter
inc
ljmp
pop
decb
jb
add
inc
mov
add
adc
pop
test
jmp
pop
pop
test
repz
and
and
je
xor
orl
xchg
negl
xchg
out
repnz
push
xor
in
push
sub
bound
js
xor
pcmpeqw
mov
cltd
pop
and
icebp
jno
ja
adc
add
and
lahf
dec
mov
sub
sub
fidivrl
lret
inc
cwtl
and
lods
jge
jnp
nop
sbb
js
ret
test
mov
add
xchg
cmpsl
adc
loope
pop
ret
cmpsl
in
out
or
pop
leave
in
hlt
mov
mov
fisubs
or
push
leave
stos
inc
cmpsl
divl
aam
movb
mov
ljmp
test
push
push
outsb
cli
cmp
dec
in
cmc
sub
cwtl
add
ja
sub
lods
xor
sti
jge
or
mov
andl
jg
add
lcall
imul
enter
pop
jge
dec
mov
std
pop
iret
aaa
add
mov
test
mov
outsb
cmc
stos
or
dec
xchg
sahf
jl
lock
jg
or
into
adc
test
mov
arpl
add
cmpsb
and
haddpd
scas
xor
and
int3
adc
sub
test
jl
mov
cmc
in
xor
sbb
jl
mov
cmp
jg
dec
das
mov
push
pop
mov
pop
push
or
popa
lods
outsb
pop
ret
jp
push
push
cmpsl
cmpsl
aaa
jecxz
in
into
or
mov
mov
in
bound
push
or
adc
mov
subl
add
imul
sbb
mov
orl
mov
sub
mov
add
orl
or
mov
mov
sbb
mov
movzwl
sub
mov
xor
mov
adcl
add
sbbl
xor
or
mov
andl
xor
xor
inc
mov
cmpl
jbe
jmp
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
andl
xor
or
inc
mov
cmpl
jl
jmp
push
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
jmp
xchg
jmp
addl
mov
jl
inc
pop
addl
out
push
xchg
data16
sub
filds
ja
aas
and
or
adc
xchg
push
sub
sbb
stc
dec
dec
sub
cli
dec
pusha
add
mov
add
jp
mov
push
repnz
dec
lock
lcall
inc
jg
push
out
sub
data16
jl
push
dec
daa
test
push
pop
bound
fdivrp
and
sub
jae
cwtl
and
cmpsl
addr16
rol
dec
sbb
mov
leave
inc
outsl
dec
insb
xchg
loope
hlt
fisttps
push
fcoms
icebp
add
sub
adc
les
sub
inc
shlb
mov
add
push
pop
and
jp
jmp
in
or
js
cmpsl
dec
lods
aas
outsb
fildl
fnsave
pop
sub
sbb
sbb
jl
nop
lea
pusha
dec
icebp
lods
inc
int
ret
dec
and
xchg
or
int3
xchg
mov
push
mov
mov
pop
and
xchg
push
jmp
test
mov
push
pop
jl
inc
dec
mov
in
data16
aam
jae
cmp
xor
jl
mov
push
push
das
inc
fwait
popf
repz
mov
sbb
pop
xchg
aaa
lret
shll
mov
mov
cmp
es
popf
ds
cmpsl
aaa
fisubs
mov
fs
sbb
cmpl
daa
cwtl
adc
cs
ret
xor
sbb
outsb
pop
into
daa
mov
adc
fs
sbb
loop
mov
add
lret
popa
mov
pop
addl
push
push
inc
inc
sbb
aaa
shrb
fcomp
sub
or
ja
pop
or
mov
jge
cld
cmpsl
ja
mov
mov
push
add
dec
cmc
ror
xlat
push
cmp
adc
xorl
dec
mov
popf
loope
push
push
out
popf
ficoms
jecxz
stc
mov
mov
push
mov
rcl
and
leave
pushf
dec
repnz
sbb
cld
cld
dec
jae
fcomp
push
xor
add
dec
inc
pop
aad
jp
repnz
dec
fstpt
mov
es
inc
negl
insl
out
xchg
push
mov
or
cltd
mov
aad
icebp
in
mov
push
mov
jg
jns
mov
test
clc
sub
lret
xchg
adc
ret
popf
icebp
rcrl
and
clc
popf
sub
cmp
movsb
xlat
push
in
in
jmp
jae
js
xor
push
push
sub
bound
add
cmp
fisttps
mov
xlat
movsl
jmp
pushf
loope
push
imul
or
jb
or
test
rcrb
push
test
mov
or
pop
push
inc
or
xor
xchg
shlb
aad
dec
pop
ljmp
fnsave
fisubs
mov
adc
popl
shlb
negb
mov
push
ljmp
iret
mov
popf
mov
pop
push
and
test
adc
out
mov
or
push
dec
pop
pusha
lea
cmp
mov
xchg
dec
movsb
js
sbb
std
xchg
mov
push
pop
mov
outsb
jge
sahf
movsb
mov
dec
in
push
out
inc
ljmp
jns
out
add
inc
mov
leave
ljmp
out
lock
stos
sbb
aad
popa
pusha
ret
adc
adc
adc
dec
adc
xchg
jmp
pop
sub
add
dec
add
push
test
loop
lea
in
loop
inc
gs
mov
xchg
add
rorb
rcl
outsb
dec
test
clc
or
adc
sbb
popa
insl
push
clc
jg
xor
mov
xchg
loope
lret
lret
xor
popa
dec
adc
clc
je
pop
cmp
adcb
lods
mov
mov
sub
jmp
pop
pop
push
imul
es
sub
sar
xchg
mov
mov
loop
loope
pop
dec
inc
pop
jg
or
pop
stos
xor
mov
ja
mov
push
repz
and
lods
and
stos
nop
dec
xchg
ret
stos
shrb
leave
fbstp
fbld
dec
imul
add
mov
xor
push
ss
pop
fs
imul
mov
rolb
or
xchg
adc
jns
xchg
cmpsl
mov
test
xchg
pusha
mov
sbb
mov
ds
imul
cmc
hlt
jl
imul
sub
loop
jmp
loop
or
aas
jae
fwait
cmp
or
test
cmp
movsl
push
rorl
mov
mov
and
sub
dec
add
imul
inc
cmp
or
push
pop
lret
movl
mov
mov
mov
std
es
jb
and
jle
cmp
sub
push
push
nop
sub
mov
cmpsl
in
inc
jne
jae
push
test
arpl
xchg
ret
xchg
xor
mov
cld
sbb
test
insb
push
sti
cs
jmp
push
push
cld
movsb
mov
mov
shlb
bound
fidivrl
xchg
adc
xchg
ret
aam
or
lret
jnp
jb
cltd
mov
inc
mov
adc
xor
xchg
cmp
inc
in
add
es
xor
jno
iret
xchg
xchg
mov
cmp
cld
clc
xor
dec
std
dec
mov
sbb
pop
or
or
sub
jae
mov
and
mov
aaa
cmpb
jmp
push
js
xchg
mov
adc
orb
jb
cs
insb
mov
dec
mov
inc
sub
dec
mov
mov
sti
addr16
pop
xor
push
test
add
inc
daa
or
mov
pop
adc
add
ss
add
push
sti
in
fs
notb
int3
daa
movsl
push
cmp
pop
dec
jae
push
lahf
or
jae
pop
add
out
out
and
mov
imul
lods
pop
testl
sahf
xor
sub
lods
sub
icebp
ds
mov
and
xlat
adc
mov
cli
scas
dec
lret
call
cmp
rcrb
insb
imul
mov
pop
push
lds
roll
inc
and
lcall
xchg
lret
and
lock
jno
into
mov
jns
mov
jo
sbb
xchg
es
fildll
addr16
fnstsw
dec
ss
or
pop
dec
int3
loope
movsb
rcrb
sbb
psubd
jns
jns
pop
insb
mov
ret
imul
mov
push
gs
inc
cmpsl
mov
xor
mov
or
rclb
sub
and
add
test
cmp
mov
push
hlt
or
add
daa
sbb
cmp
pop
xor
jo
pop
into
popa
cltd
cmc
ja
shrl
cs
inc
dec
lcall
sub
add
dec
aam
insl
jns
out
dec
out
lahf
or
das
gs
xchg
and
lcall
inc
inc
mov
pop
lret
imul
xlat
in
inc
sti
push
ja
cmpsb
gs
inc
xor
lret
scas
lds
inc
mov
sbb
sbb
pop
subb
lahf
push
pop
push
jg
xchg
pop
jp
add
mov
aad
js
dec
daa
jmp
cmp
mov
push
pop
mov
es
popf
addl
imul
add
testl
fs
arpl
jno
pop
adc
pop
mov
pop
call
mov
jmp
outsl
lods
push
stos
and
adc
ljmp
lahf
dec
stos
ret
fst
inc
cmp
repz
fidivl
cmpsb
mov
fdivrl
jp
cmpsb
rcrl
neg
dec
inc
mov
mov
dec
cld
pop
jae
pop
insl
mov
and
ljmp
movb
ljmp
shll
mov
pop
xchg
testb
iret
ss
sti
or
jg
dec
xchg
push
cmp
xchg
js
cmp
fstpt
jp
push
daa
das
fistpl
xor
xchg
fs
popf
pop
adc
hlt
lret
fidivrl
insb
mov
pop
mov
std
scas
stos
rcll
stc
nop
cmp
out
cmp
fsts
test
in
mov
add
pusha
aam
lods
in
je
data16
pop
in
or
fcmovb
sub
or
fnstcw
test
ja
jno
cwtl
xchg
les
test
fucomp
inc
sbb
je
data16
xor
imul
cltd
popf
in
lock
and
push
dec
data16
outsl
add
roll
pop
loopne
xor
fidivrs
les
jg
sti
cmp
aam
arpl
inc
lcall
sub
mov
sbb
pusha
dec
lret
jge
dec
pop
sub
imull
inc
pavgb
fldcw
xchg
mov
or
xchg
fisttps
lods
xchg
in
insb
dec
mov
adc
jne,pt
or
loop
dec
or
pop
stos
ret
mov
into
mov
and
or
add
sbb
add
pop
mov
je
dec
adc
imul
stos
or
add
xor
inc
fisubs
pusha
movsl
adc
dec
xor
sbb
inc
xorb
movsb
xchg
lds
push
mov
sbb
adc
or
or
mov
fistl
fcoms
xorl
add
daa
mov
xchg
loope
jmp
test
pop
mov
and
popa
jp
les
es
xchg
cmp
mov
adc
adc
stos
cmpsl
jns
hlt
insl
cmp
fidivrs
movsb
test
xchg
testl
and
mov
leave
lahf
lods
js
add
fcmovne
sub
push
xchg
aad
inc
frstor
jne
repz
xchg
mov
fisubl
and
inc
xor
and
leave
jo
js
jbe
inc
rcll
bound
push
xchg
mov
add
jns
mov
adc
insl
mov
cmc
lods
or
std
push
cli
stos
fiaddl
cmpsl
ficoms
inc
push
out
mov
adcb
les
xor
sar
js
ljmp
scas
scas
or
pop
leave
out
jae
inc
mov
pop
fidivrs
mov
jge
fidivl
jno
pop
jns
imul
mov
xchg
jno
xor
aad
jo
add
ret
mov
adc
js
push
daa
pop
push
jecxz
ljmp
test
xchg
dec
ja
lds
stc
stos
lds
dec
fistps
popa
aaa
push
jg
add
mov
out
pop
adc
sub
frstor
dec
stc
push
jge
pushf
or
loop
adc
leave
jno
mov
les
and
cmp
cmp
inc
inc
push
xor
push
xor
fistpl
pop
cmp
loopne
negl
shl
ljmp
fsts
insb
fwait
push
push
xor
cltd
dec
pop
inc
push
pusha
fcompl
mov
daa
adc
jbe
fsub
enter
xchg
sbb
adc
aad
arpl
adc
pop
imul
sbbl
or
mov
xlat
push
negl
push
inc
out
das
mov
enter
dec
icebp
into
sub
push
and
js
sub
push
mov
sbb
jl
mov
call
cwtl
hlt
insl
pop
pop
jge
dec
je
jp
call
das
mov
push
xor
das
mov
in
cmp
add
add
xorl
adc
loopne
pop
les
xorb
sbb
ret
jo
sub
test
mov
push
fnsave
xor
sub
push
or
cmpl
jl
sub
xor
mov
sbb
shlb
insb
roll
dec
sub
lgs
cs
addr16
push
fiaddl
scas
scas
cmpsb
outsl
adc
xchg
mov
test
inc
sbb
vpaddq
es
mov
pusha
sub
or
lahf
gs
ds
jne
inc
push
sub
xlat
mov
pop
or
mov
shr
in
push
es
add
lcall
testb
add
cli
xor
sub
xchg
ljmp
adc
push
stos
sbb
sahf
sub
and
push
xchg
push
mov
push
fs
push
cmpsl
push
andb
fsts
jecxz
cmc
push
popa
xor
xchg
in
ret
jge
jg
je
jle
or
into
cmp
dec
adc
mov
jmp
sub
cmovnp
stos
push
xor
mov
into
xor
pop
aam
xor
daa
call
sub
xchg
enter
addl
jle
sahf
mov
pop
nop
push
adc
or
dec
lods
dec
or
sbb
xchg
mov
add
ss
jo
stc
insl
and
jns
fiaddl
xlat
imul
enter
fwait
xadd
inc
mov
push
and
and
jbe
mov
leave
dec
pusha
das
adc
lock
and
cmp
add
pop
jmp
lea
jmp
mov
xchg
or
mov
mov
and
push
add
jge
ret
push
aam
add
cmp
pop
ds
rcrb
in
shll
push
dec
fisttpl
sub
adc
add
repnz
adc
nop
aaa
xchg
pusha
sbb
jb
clc
fadds
mov
or
dec
sub
sub
jae
leave
adc
sub
je
add
xchg
or
xor
xchg
sbb
jno
jb
loopne
pop
mov
repz
pushf
dec
mov
inc
clc
shlb
push
fists
addl
sahf
stos
xor
adc
outsb
lahf
xchg
adc
mov
mov
sar
movsb
cs
test
pusha
jo
popf
sbb
xor
in
xchg
adc
loope
add
popa
inc
fdivl
loopne
pop
ss
divl
sub
add
xchg
mov
inc
or
and
or
xchg
fstpl
jae
lret
pop
and
push
adc
push
popa
push
mov
sbb
lock
push
xchg
orl
out
cmpb
push
jb
inc
imul
dec
sbb
arpl
es
in
orb
xor
retw
ds
xor
hlt
lods
loope
je
sub
fwait
cltd
xchg
mov
jp
out
jnp
sub
or
es
add
mov
xor
adc
arpl
mov
mov
mov
in
xor
jae
mov
sbb
push
sbb
sbb
ds
aas
sahf
cwtl
bound
rcrb
in
call
mov
test
sub
gs
add
leave
mov
add
iret
xor
out
pop
aad
push
push
jne
fiadds
pop
call
and
fistps
push
sub
repz
fwait
repnz
call
lods
imul
test
mov
push
xchg
pop
mov
fistl
fisubl
ljmp
xchg
roll
jbe
repz
jae
in
sbb
mov
test
icebp
test
pusha
hlt
pop
sti
in
lahf
aam
add
sbb
cmp
cmpsb
mov
ficoms
xor
std
inc
add
pop
mov
in
and
cltd
mov
or
mov
je
ss
loopne
push
push
or
xchg
lods
test
icebp
cmp
aaa
enter
dec
cmp
sbb
shl
subb
xchg
jge
pop
cwtl
sub
dec
jmp
fildl
and
add
pinsrw
push
outsl
data16
dec
test
dec
scas
push
out
mov
dec
insl
jmp
aaa
or
push
sub
or
push
lods
fidivs
add
shrb
mov
and
lret
add
inc
cmp
xor
stc
jl
push
nop
sti
mov
sarl
hlt
jnp
test
mov
mov
sbb
subb
mov
sbb
shl
jae
popf
push
movsb
or
mov
cmp
daa
iret
bound
mov
and
fisubl
fsts
lods
and
jmp
fistl
pushf
pop
sub
mov
arpl
dec
nop
dec
mov
idivb
pop
push
imul
das
cmp
or
jae
push
pusha
cltd
sbb
mov
in
mov
aam
shll
push
adc
mov
sarl
xchg
cmpsl
mov
outsb
add
mov
out
and
inc
in
lret
hlt
dec
lcall
and
mov
lahf
push
and
clc
pop
adc
iret
xchg
cmpsl
and
mov
fdivrs
lods
sub
mov
movsl
mov
aas
lret
jmp
mov
adc
loop
cld
xor
dec
enter
sti
adc
mov
mov
ret
sub
out
pop
loope
inc
xchg
inc
ss
jbe
pop
push
jl
push
mov
push
jae
out
incl
adc
neg
mov
cmc
xor
popl
lcall
iret
cs
lods
jae
aaa
push
dec
mov
movsl
mov
pop
pop
mov
loope
mov
pop
adc
pop
fstl
sub
fsubrs
jle
mov
mov
imul
fnsave
aad
xchg
dec
push
out
and
aas
push
xor
test
xchg
ss
jns
nop
sub
pop
fbld
repnz
out
repz
cmp
enter
in
mov
orb
ds
push
iret
dec
and
cmp
xor
enter
push
les
leave
je
jge
dec
scas
pop
mov
dec
adc
in
mov
faddl
pop
ja
mov
fs
mov
test
and
test
das
add
sbb
cmpsl
fldt
out
inc
inc
push
pop
cltd
test
or
mov
sbb
mov
pop
inc
pop
rol
push
out
xchg
inc
aas
in
fldenv
xor
sarl
adc
cmp
adc
or
cwtl
loope
dec
sbb
pop
and
or
jbe
lahf
push
lret
sub
mov
cld
fsubrs
lret
lods
data16
dec
frstor
les
jo
sbb
shll
and
or
mov
loope
loop
xchg
fcomps
jns
out
pop
xchg
push
jno
enter
jae
xchg
sarl
sbb
fstpl
jbe
adc
push
fwait
mov
jnp
fidivrs
sbb
cmp
mov
test
test
stos
mov
ds
jb
sti
mov
xor
jge
push
pop
mov
bound
dec
das
or
xchg
test
sub
popa
cmp
mov
jecxz
cmp
movsl
pop
aam
dec
loop
inc
dec
clc
and
repnz
mov
ljmp
nop
xor
jae
jo
xor
push
popf
cs
push
andb
ret
aaa
fdivrs
int3
xchg
insb
and
sub
hlt
and
cmpl
les
pushl
push
xor
push
xchg
add
movsb
inc
les
punpckhwd
nop
pop
adc
add
mov
ljmp
push
scas
jle
xchg
and
push
cmp
rolb
sbb
cld
imul
movsl
inc
cld
arpl
insb
and
scas
addr16
cs
add
mov
daa
add
inc
daa
push
lods
xchg
ja
insl
imul
lock
out
adc
inc
mov
mov
dec
imul
hlt
jns
and
insl
loopne
or
rol
mov
aaa
lahf
js
out
dec
mov
lock
and
add
add
pop
int3
xor
out
push
hlt
jns
iret
loop
mov
lods
bound
adc
popf
fdivl
arpl
int
add
imul
nop
push
pop
or
mov
jo
outsb
push
bound
mov
cmp
mov
cli
daa
sub
push
add
push
cld
mov
arpl
inc
clc
bound
mov
dec
insl
nop
adc
pop
mov
fchs
fstpl
popf
jge
xchg
pop
cmp
jl
jne
push
repnz
lcall
insl
fs
sti
clc
sbb
scas
mov
test
cmp
jno
adc
cld
mov
pop
lds
mov
mov
push
mov
ljmp
rcr
cli
xchg
call
and
into
or
shrb
xchg
je
or
jl
fildll
movsl
mov
aas
pop
loopne
cmp
xchg
adc
rcrl
out
push
lds
inc
cmc
mov
loop
and
int3
lahf
push
fidivrl
shll
not
dec
cltd
xchg
jne
into
roll
cmp
rorl
ret
movsb
xor
popf
arpl
cmpsl
jne
cmc
mov
sarl
outsb
mov
sahf
stc
fsqrt
xchg
xor
add
jae
mov
xor
cli
mov
add
mov
push
lea
inc
and
xchg
xchg
push
mov
xchg
pop
dec
in
jl
cmp
or
rcrb
hlt
mov
addr16
aad
lods
aad
cmp
out
cltd
xchg
outsl
lahf
or
out
cmp
pop
xchg
adc
sbb
leave
add
xchg
push
inc
cmc
pop
xorl
pushf
add
dec
jg
pop
mov
pop
in
orb
cmpl
inc
dec
xchg
fdivs
lods
mov
add
jg
bound
movsb
pop
sub
cmp
outsb
add
push
test
test
xor
sub
mov
xchg
cmp
lods
dec
lock
arpl
push
lea
or
mov
pop
push
and
mov
fldl
or
sbb
mov
cwtl
jmp
sub
sbb
repnz
call
xchg
fistpll
aaa
jb
dec
in
lds
sub
cmp
sbb
sub
xchg
mov
inc
cmp
test
pop
or
jl
js
idivb
out
call
fwait
bound
ret
loop
bound
mov
ds
call
sarb
adc
fdivp
int
xchg
sbb
cmp
push
mov
lahf
adc
xlat
adc
pop
mov
lret
lahf
bound
ffree
xchg
fpatan
mov
hlt
loope
pop
out
or
stos
sub
inc
push
xor
fiadds
and
rorl
xlat
pop
gs
mov
xchg
push
les
mov
fists
xchg
dec
xchg
mov
leave
in
and
movsb
jbe
ss
in
xchg
mov
jb
add
pop
or
jge
xchg
mov
pop
sub
mov
adc
sbb
add
shll
fcmovne
dec
add
es
mov
mov
jecxz
sbb
addr16
push
add
mov
xchg
ret
inc
mov
lea
pop
test
fwait
xchg
insb
out
mov
inc
out
push
test
xlat
jle
insb
shld
and
bound
in
daa
ror
and
adc
and
ficoms
movsb
jno
icebp
push
xor
add
sub
pop
sahf
mov
or
jl
enter
and
jg
jle
sbb
jp
es
push
sahf
mov
cli
mov
or
jmp
dec
mov
xchg
push
xchg
jne
dec
lret
jl
arpl
xchg
lock
mov
phaddw
repz
test
lret
mov
stc
mov
xchg
pop
lahf
lret
cli
pop
test
mov
outsb
dec
es
jp
js
cmp
jl
dec
and
cmp
mov
andl
aas
out
movsl
loope
das
lcall
out
movl
xlat
mov
popf
mov
fisttpll
jle
push
lds
cmpsb
std
daa
arpl
imul
dec
and
mov
jp
mov
fdivrp
sbb
inc
sti
or
mov
shll
adc
cmc
push
fs
and
scas
dec
jae
inc
sub
mov
std
and
in
mov
pop
add
cmp
out
into
pop
sbbl
cwtl
rclb
add
mov
mov
jp
mov
fwait
jo
pusha
je
shlb
push
aad
xchg
sbbl
sub
icebp
cld
fstl
fistpll
mov
es
ret
cmp
and
lret
jg
jecxz
adc
jns
repnz
pushf
push
add
add
stos
push
xchg
mov
dec
xchg
shll
inc
std
sub
dec
dec
pop
mov
in
pop
rorl
add
iret
sarb
xor
fs
xlat
in
and
push
loop
push
in
push
xor
loopne
cmpsb
lds
jmp
xlat
mov
mov
mov
add
cmp
pop
xor
and
sub
mov
mov
aad
push
es
and
add
rol
xor
pop
mov
popa
loope
xcrypt-cfb
cmpsl
in
and
ljmp
add
add
xor
aaa
mov
xchg
xchg
add
cmp
push
repnz
shr
sbb
repnz
out
cmp
ret
cmp
dec
xchg
and
gs
movsb
cld
in
jae
mov
bound
loop
and
fnsave
xchg
mov
sbb
push
rorb
aas
pop
xor
mov
sub
lods
fildll
lahf
inc
popf
push
adc
fs
testl
mov
mov
sbb
outsl
mov
cmp
cmp
movsl
movsb
mov
mov
cmpsb
repz
enter
sub
inc
ret
cmpl
jo
cmp
arpl
push
lods
out
xchg
fiaddl
sub
pop
adc
and
push
push
or
shr
fsubl
dec
xor
in
mov
out
mov
js
lods
daa
mov
test
xor
jl
fisubs
mov
pop
push
or
push
ljmp
jl
fcmovne
test
adc
inc
inc
mov
mov
data16
fsubrs
cld
mov
cltd
xchg
push
mov
adc
popa
loop
xor
or
imulb
dec
imul
iret
dec
loope
lods
or
ret
mov
scas
adc
sbb
test
in
push
pop
add
sbb
imul
pop
mov
pop
dec
push
sbb
insl
cld
cmp
inc
mov
mov
or
ret
ret
jns
jnp
cmp
adc
sub
fs
jle
adc
pop
iret
in
mov
in
fs
sub
test
mov
iret
adc
adc
xor
sbb
dec
xor
rcl
or
lret
decb
adc
xchg
jecxz
jno
mov
sarb
fwait
fwait
movsb
adc
add
inc
inc
push
push
mov
xchg
cmp
sub
add
cwtl
xchg
rolb
cmp
xor
and
pop
icebp
cli
int
xchg
nop
mov
lods
sub
xor
lea
push
fwait
pop
cmpb
jmp
ret
mov
shlb
xor
xchg
lea
mov
xchg
in
cs
jbe
mov
xchg
cmp
rcll
push
fldl
or
push
dec
rcl
je
jne
sbb
int
test
pop
jo
bound
mov
popf
inc
push
mov
jo
repz
inc
fisttpll
mov
dec
test
xchg
fdivp
sub
out
pop
inc
add
mov
xchg
inc
cwtl
dec
mov
es
inc
leave
and
aas
filds
sarb
aad
xchg
loopne
mov
bound
push
stos
push
xchg
into
pop
lcall
das
imul
sub
loope
cbtw
cmp
sbb
or
insb
bswap
outsl
fbstp
stc
popa
aad
sub
cmp
arpl
sbb
cmp
mov
rorl
mov
adc
dec
jl
xor
daa
push
pop
mov
push
aaa
test
rol
shrl
or
call
sbb
pop
test
xchg
push
adc
movb
cltd
sbb
mov
idivl
int
adcl
mov
or
cmpsl
mov
int
out
addr16
andb
jmp
lods
aaa
sub
mov
pop
pop
mov
outsl
daa
mov
mov
jp
xchg
and
cmp
add
pop
sarl
popf
cld
jae
call
loope
popf
outsb
mov
in
icebp
sbb
inc
sbb
jns
pushf
and
imul
xchg
cmp
fwait
into
sbb
mov
ret
pop
dec
add
mov
pop
iret
mov
cmpb
fsub
xchg
jge
jb
dec
adc
pop
pushf
stc
les
outsb
clc
cld
sti
fistpl
stos
fs
push
popa
inc
xor
test
and
push
adc
dec
in
push
push
push
mov
mov
test
insl
mov
dec
int
into
daa
add
pop
jne
mov
or
xchg
testl
cltd
fisttpl
dec
sahf
repz
xor
lock
loope
cmp
scas
aad
push
dec
repnz
loop
cmp
outsb
imul
fwait
aaa
push
test
jb
mov
mov
js
cmp
outsb
sub
push
fdivl
das
fs
push
push
fisttpll
mov
out
adc
movsb
push
pop
repz
jp
xor
dec
cmp
imul
sbb
lods
adc
sahf
shr
dec
xchg
inc
xchg
enter
sub
ficoms
scas
xor
add
push
scas
mov
mov
dec
icebp
ret
xchg
cld
mov
aam
and
gs
mov
ret
mov
divl
outsl
dec
cld
jle
inc
fildll
ljmp
rcll
or
cld
push
push
cmp
pop
push
into
faddl
scas
aam
push
cld
xor
pop
mov
fstpl
inc
xor
hlt
and
test
test
sub
push
sahf
shll
cld
shl
push
xchg
add
and
mov
xorl
mov
mov
lea
mov
mov
mov
sub
movl
cmpl
je
cmpl
jge
jmp
push
push
call
mov
dec
mov
jmp
add
and
mov
mov
subl
xor
adcl
add
movl
jne
jmp
adc
mov
subl
sub
xor
sbbl
mov
decl
mov
xorl
mov
andl
xor
xor
addl
sub
sub
xor
mov
mov
mov
jmp
sbb
mov
sbb
mov
xor
xor
orl
sub
movzbl
sbb
mov
sub
xor
mov
movl
cmpl
je
cmpl
jle
jmp
push
push
call
xor
xor
dec
mov
jmp
mov
mov
add
imul
mov
mov
mov
add
or
mov
jmp
in
in
xchg
lret
jge
pusha
dec
fstpt
pop
addl
push
jp
ja
fistps
or
sub
cli
mov
popf
dec
pextrw
push
xorb
cmp
mulb
sar
mov
adc
int
inc
push
test
and
stos
aaa
cwtl
pop
sub
dec
mov
and
mov
jmp
push
loopne
and
test
sub
enter
or
pushf
out
ror
outsl
loop
jg
push
imul
jge
aam
aaa
inc
pop
enter
add
test
xchg
gs
jns
fcomps
xchg
cmp
jnp
test
addr16
addl
sahf
mov
dec
outsl
repnz
jmp
mov
addr16
mov
out
lret
stc
add
mov
ftst
stc
mov
cmc
repz
and
pop
in
jbe
jae
jmp
jns
pop
enter
inc
dec
daa
loopne
insl
xor
adc
inc
dec
loope
fldcw
push
mov
lea
jp
sahf
rclb
xchg
loopne
pop
cmp
push
sbb
pop
outsb
mov
mov
out
adc
mov
addl
lret
test
jg
test
cmp
inc
loope
lock
jmp
mov
nop
or
lds
dec
cmp
stos
jp
pop
ret
scas
call
ret
nop
aas
xchg
cld
mov
add
mov
cmp
push
mov
insl
adc
dec
mov
push
loopne
popa
pop
decl
ret
lea
xchg
dec
push
fiaddl
scas
in
out
and
rcl
xchg
lea
pop
pop
clc
jmp
sub
inc
leave
pusha
mov
jo
inc
fists
test
and
shlb
shll
fwait
sar
fbstp
int
and
insl
pop
and
pop
inc
pop
inc
imul
dec
mov
scas
or
sub
outsl
in
sti
loopne
ja
std
daa
add
mov
shlb
test
cs
push
in
fisttps
adc
outsb
cmpsb
push
adc
std
sbb
and
sub
mov
jge
xlat
pushf
mov
mov
rcrb
adcb
fisttpll
jp
mov
cmp
and
je
inc
inc
mov
push
jo
stos
loop
xchg
add
rcrb
loope
enter
cmp
daa
push
cmp
lds
leave
xchg
inc
sbb
cmp
lahf
inc
ja
sub
and
faddl
scas
xor
scas
popf
in
mov
mov
lret
lcall
stos
inc
inc
loop
imull
inc
sub
sarb
push
mov
mov
dec
push
test
xchg
push
dec
daa
and
xchg
shl
test
in
xlat
or
mov
cmp
test
push
mov
dec
xor
test
pop
rol
mov
enter
add
stos
pusha
mov
and
sbb
pop
icebp
xor
cwtl
movsl
cmp
movb
mov
sbb
cs
push
mov
fisubs
loope
jne
pop
test
mov
lcall
fmuls
cmpl
out
jp
and
dec
inc
xor
push
mov
jb
outsb
icebp
je
push
xlat
mov
mov
jo
push
iret
ss
loope
xor
arpl
push
das
cmp
clc
shr
clc
lods
cmp
push
fildl
js
adc
shlb
enter
dec
out
jle
sbb
push
pop
dec
pop
pop
sub
lahf
test
push
lods
mov
push
into
sub
imull
jle
out
jae
aad
inc
notb
loope
mov
insl
dec
jcxz
pop
dec
movhps
ror
repz
cltd
add
cli
mov
sub
jo
pop
ss
lahf
pop
sub
or
mov
mov
icebp
ss
fsubrs
adc
push
and
add
push
xchg
jno
nop
ret
sbb
dec
xor
addr16
sub
jge
pop
inc
hlt
pminub
cld
bound
ljmp
mov
cmp
adc
pop
divb
xchg
lret
out
xlat
inc
dec
xor
aas
aam
daa
mulb
adc
adc
pop
jno
xchg
ror
push
gs
pop
ret
test
divb
push
xchg
and
mov
and
jmp
pop
mov
mov
cmp
pop
push
dec
jnp
dec
mov
jecxz
cmpsb
push
rclb
ds
bound
std
and
dec
jp
xor
ror
std
cmp
inc
es
sbb
aas
or
mov
adc
vshufpd
cmp
or
cmp
cs
sbb
icebp
sbb
out
inc
xchg
aaa
negl
cwtl
dec
pop
mov
lods
scas
jl
scas
sub
mov
push
adc
sub
inc
dec
push
ljmp
fcmovnb
hlt
dec
popa
dec
cwtl
lret
cmp
pop
loope
out
xor
dec
cltd
push
cmpsb
scas
sub
in
mov
les
out
xor
inc
insl
push
fstpl
sbb
test
sub
clc
dec
dec
mov
movsl
mov
push
mov
cmc
mov
or
and
add
sub
and
filds
ret
mov
repnz
scas
jle
add
pop
cltd
scas
mov
out
sahf
push
inc
pop
cmp
imul
loope
push
mov
sti
jae
sahf
in
add
xorb
xor
lret
cmpsl
mov
cwtl
stos
lahf
add
cli
pop
sbb
sbb
mov
ss
mov
adc
adc
jle
push
jmp
sub
jb
cmpsb
add
add
gs
push
lcall
les
daa
das
cld
mov
xchg
push
mov
inc
lcall
mov
das
pop
je
popa
in
sbb
fiadds
adc
pop
push
add
lea
xlat
xchg
movsl
add
push
cmpsb
pop
add
jp
jge
ret
repz
push
jne
push
sbbl
shlb
mov
fcom
pop
lds
fwait
punpckhwd
stos
scas
loope
ret
int
mov
adc
inc
or
push
pop
sbb
out
scas
xchg
pop
mov
xchg
jns
inc
and
adc
shrb
out
jo
std
jge
aam
xchg
lcall
mov
es
jo
hlt
mov
mov
mov
mov
push
adc
std
vmovaps
dec
add
sbb
cmp
andl
push
pop
stos
add
into
jno
sub
test
ss
sub
inc
and
lret
icebp
dec
mov
loop
sbb
sarb
mov
mov
pop
push
scas
enter
add
inc
lds
adc
sarl
pop
std
nop
out
sbb
jle
add
xchg
aas
lret
sysenter
out
and
dec
jno
hlt
popl
inc
lods
mov
xor
enter
jge
inc
push
adc
movsb
lods
mov
sub
movsb
das
test
stos
fwait
lret
push
jae
adc
mov
popf
aas
pop
mov
rcrl
or
dec
mov
lods
xchg
cmp
xchg
jb
cmp
iret
mov
imull
xor
loopne
in
jb
mov
aas
int3
mov
lock
jle
xchg
xor
pop
test
pop
lret
xor
outsb
adc
mov
or
pmuludq
sbb
pop
sar
jg
insb
jne
push
or
call
mov
and
jle
repnz
mov
xchg
out
mov
sub
mov
xor
aaa
push
cli
mov
and
lods
daa
or
ja
push
jge
or
xchg
cmp
sub
daa
push
jmp
pop
mov
mov
cmp
xchg
rorb
xor
addr16
dec
jno
xor
test
lret
stos
dec
mov
mov
sub
dec
cmp
bnd
mov
jno
test
fsubs
cltd
xor
mov
sarl
mov
js
sub
dec
xchg
pusha
aaa
pop
repz
mov
pop
in
jp
cmpsb
push
fcoms
loopne
jp
pop
cld
test
les
add
mov
test
cltd
pop
adc
xchg
mov
das
mov
lea
mov
xchg
daa
adcb
mov
iret
xor
std
push
adc
into
scas
xchg
xor
lcall
push
std
jge
clc
cmpsb
int
fs
or
je
out
daa
xor
daa
fs
adc
pushf
loopne
mov
pop
hlt
gs
jns
mov
cmp
cmpb
imul
dec
aad
loope
jecxz
or
outsl
or
push
aam
sbb
sbb
mov
push
push
lret
cmp
ljmp
xchg
out
and
lahf
xor
fnsave
jl
sbb
xchg
jne
xor
xor
in
repnz
sub
push
fildll
xchg
arpl
ja
in
pop
dec
andl
xchg
popf
fists
dec
pop
iret
jae
pop
stc
adc
adc
lds
dec
out
in
mov
gs
xor
push
mov
mov
lea
jp
aad
ss
xchg
dec
or
sbb
ds
and
adc
outsl
loop
data16
sub
sbb
inc
je
pop
add
addl
dec
jle
push
ljmp
push
adc
add
or
and
lds
xchg
fimuls
xor
sbb
loopne
imul
loope
dec
xchg
std
aam
and
sbb
call
adc
cmc
pusha
jne
dec
loope
arpl
pop
add
sbb
mov
sbb
leave
ss
lcall
pop
mov
fisubrl
add
jbe
sub
iret
lods
and
inc
and
in
mov
add
and
movd
add
repnz
lods
jbe
sahf
sbb
pop
out
mov
ljmp
cmp
jne
movsb
push
hlt
cli
mov
fs
shll
inc
dec
xor
test
lcall
xlat
and
fnstenv
jns
daa
mov
aam
push
cmpsl
mov
subb
js
dec
xchg
mov
outsb
std
repz
sbb
imul
clc
add
mov
fildl
sub
adc
push
cmpsl
data16
inc
push
dec
adc
cltd
hlt
or
popa
test
aas
scas
cmc
add
jo
jge
adc
fnop
leave
push
repz
aas
pop
les
clc
jno
jne
pop
cs
adc
sbb
fistpl
ss
adc
fwait
mov
testb
dec
fsqrt
scas
call
stc
in
mulb
js
rorb
fnstenv
lret
xchg
mov
push
xchg
sbb
mov
xor
mov
daa
sbb
xlat
and
movsb
mov
mov
xor
jb
lret
and
sub
push
pushf
xor
dec
xchg
mov
test
pop
and
sub
adc
pop
call
rol
dec
mov
and
cmp
enter
mov
sub
xchg
aaa
test
xor
push
add
aam
mov
jmp
aas
mov
add
stc
std
pop
inc
mov
std
push
es
inc
test
hlt
jbe
pop
inc
insb
and
fs
sti
mov
daa
mov
pop
inc
cmp
aad
push
jl
pushf
cmpsb
aas
aam
push
or
pop
leave
ja
mov
dec
sub
int
add
and
mov
fildll
push
jno
cmp
push
movsb
or
sbb
push
mov
cmpl
mov
in
sbb
mov
dec
cmp
into
testb
xchg
add
xor
imul
push
push
xorb
gs
mov
gs
or
das
mov
and
pop
adc
bound
xchg
movsl
rcll
hlt
inc
adc
lcall
sti
mov
pusha
mov
jne
dec
mov
or
daa
sub
push
sbbb
pop
jbe
jl
inc
adc
stos
fsubrl
out
scas
shlb
dec
jge
mov
xchg
dec
je
adc
pop
jecxz
adc
xchg
aad
mov
aaa
nop
addr16
dec
sarl
out
icebp
mov
clc
push
sbb
and
ljmp
aad
in
inc
jecxz
mov
sahf
pop
dec
sbb
xor
xor
mov
adc
cmp
sbb
sub
add
popa
ret
sub
movsb
lods
jecxz
adc
pop
ds
or
out
daa
mov
mov
cmpsb
or
xchg
mov
fwait
mov
adc
fdivrl
xchg
add
push
out
jb
das
and
movsb
sub
imul
jae
or
add
mull
push
adc
sbb
dec
sbb
lds
std
mov
or
xlat
ss
xor
fldenv
sub
shr
jmp
js
mov
mov
sahf
jae
push
data16
sarl
fmulp
nop
pushf
loope
lock
xchg
jmp
mov
btr
mov
xchg
push
leave
dec
out
xchg
add
jmp
mov
pusha
lods
ds
mov
test
mov
addl
xchg
es
xor
repz
add
jecxz
loope
pop
and
or
push
adc
sbb
or
stos
ficoml
fsubrs
std
push
push
daa
aas
pushf
adc
int3
sti
xchg
jae
add
in
adc
jno
sub
call
dec
std
or
out
lcall
popa
in
mov
std
addr16
pop
in
and
xchg
sub
sahf
ljmp
je
pop
lret
mov
lret
mov
mov
mov
out
movsb
mov
xchg
mov
js
dec
lcall
xor
and
je
push
sbb
add
pop
mov
push
cmp
xor
jle
repnz
scas
call
push
sarb
popf
cmp
cmp
dec
and
lods
jns
or
ds
adc
test
mov
mov
dec
and
aam
rcll
inc
or
sar
pop
cmpsb
sub
jl
dec
mov
stc
xor
fsts
je
xchg
rclb
sub
adc
mov
lea
into
insl
test
cmp
cmp
xor
dec
lahf
jo
ljmpw
xor
mov
cmp
xor
fsubrl
jecxz
mov
sub
lret
sub
adc
push
repz
dec
ljmp
or
mov
xchg
cmpb
jle
push
dec
mov
xor
sbb
iret
adc
xor
mov
imul
dec
ret
and
adc
jae
out
xchg
pop
stos
int
add
je
int
bnd
and
hlt
mov
dec
sub
and
and
gs
sti
shrb
sub
mov
out
xlat
int
das
pop
dec
mov
dec
pop
lahf
jge
cs
add
cmpsl
loope
pop
cmc
cmp
cmpsl
mov
and
aam
mov
dec
inc
mov
adc
xor
insb
mov
mov
cwtl
int3
stos
xor
push
aam
jns
data16
stos
push
test
es
scas
add
inc
decb
test
pop
fcoms
adc
loope
icebp
cmpl
aas
cmp
popl
cmp
lods
add
mov
lcall
or
sub
outsb
mov
push
out
ss
das
pop
xchg
jmp
pop
jb
nop
xor
aas
mov
push
jae
and
dec
sahf
push
pop
shrl
insb
rcr
mov
lock
shlb
inc
call
outsl
addl
push
adc
out
jp
xchg
dec
gs
mov
inc
inc
inc
sbb
lock
lahf
lods
xlat
nop
jl
decb
gs
test
mov
mov
and
push
lods
pop
sbb
int3
xchg
xchg
mov
call
mov
or
enter
and
notl
stc
je
push
xchg
mov
add
int
adc
or
lret
xchg
scas
jo
lret
cmp
pshufw
xchg
gs
cwtl
mov
loope
mov
popa
je
push
les
dec
inc
das
data16
sbb
out
mov
push
rol
in
in
cmp
mov
mov
test
test
jle
jge
xor
out
xchg
outsl
scas
sub
mov
in
xor
xor
cmp
push
cs
jns
fidivrs
or
cli
sbb
add
repnz
or
ds
xchg
adc
loope
or
insl
push
or
pop
or
xor
inc
dec
rcll
mov
add
mov
add
mov
aam
sahf
push
inc
jne
cs
jns
bound
lea
adc
addr16
in
cmpsb
jecxz
and
loope
stos
sti
imul
cwtl
and
cli
pusha
pop
push
mov
scas
repnz
dec
mov
dec
jnp
lds
pop
mov
push
cltd
pop
and
push
imul
test
mov
jo
xchg
xorb
fs
clc
and
xor
sub
negb
nop
dec
ret
or
lds
adc
and
sbb
fwait
add
cmpsl
and
pop
mov
dec
pop
movsl
xchg
cmpsl
inc
loop
pushf
jb
cs
mov
lods
imul
or
addb
and
out
cmp
or
add
sahf
sub
in
sbb
mov
inc
mov
adc
mov
bound
std
push
clc
adc
inc
mov
xlat
cmp
jle
insb
jnp
jns
or
xchg
repz
cmc
or
shrb
jnp
jge
call
adc
imull
sbb
jb
or
inc
ss
jmp
outsl
lea
fnsave
sahf
int3
clc
lcall
xchg
stc
test
fstpt
xchg
out
fwait
cmc
mov
ret
cmp
adc
into
mov
pop
xlat
roll
filds
sub
ja
and
push
sub
loope
pop
adcb
movsl
sbb
data16
in
push
popl
and
lds
jmp
pusha
jbe
xor
shr
sbb
cmp
push
call
icebp
sub
faddl
push
iret
add
iret
in
pop
xor
jae
call
add
jbe
jp
movsb
movsb
and
mov
xor
push
ret
out
mov
jg
pop
sub
xchg
or
push
add
dec
mov
jmp
mov
push
cmp
mov
insb
adc
test
imul
gs
push
out
pop
fs
jae
cmp
or
stos
std
adc
scas
jge
test
mov
lret
mov
outsl
inc
int3
je
stos
les
mov
inc
shll
adc
sub
sar
and
add
cmp
jle
flds
in
insb
sub
lret
jno
push
cmp
cmc
fdivrp
popa
out
add
mov
mov
mov
pop
or
mov
jge
jbe
test
cmc
mov
push
gs
out
sbb
add
in
inc
lds
lods
in
test
mov
ret
jae
jbe
shlb
cmp
push
scas
movsl
or
jle
call
or
je
ret
ds
imulb
out
ljmp
sbb
filds
addr16
pusha
gs
cmp
imul
lods
cmp
mov
ljmp
pop
mov
shlb
fs
in
fsubrl
mov
push
push
lds
out
sub
stos
cltd
mov
aad
pop
sbb
daa
aaa
mov
sbbl
and
fildl
out
test
sbb
sbb
push
dec
pushf
mov
mov
in
out
adc
mov
add
mov
fsts
push
cld
mov
pop
push
iret
fsts
xchg
clc
add
or
and
popf
hlt
movsb
roll
popl
cmpsl
jae
in
mov
stc
xor
stos
call
jne
mov
sbb
test
pop
sub
mov
sbb
cmp
enter
stc
insl
inc
pusha
xor
add
mov
movsb
mov
adcl
adc
insb
mov
add
shll
ljmp
push
lcall
in
sbbl
es
sbb
in
test
mov
dec
rcrb
add
cmp
push
pop
pop
or
adc
mov
frstor
dec
imul
xchg
lock
jbe
jmp
adc
lahf
outsl
or
inc
aam
inc
lods
sub
cs
lods
sbb
or
negl
sub
dec
ds
adc
pusha
mov
test
mov
adc
fdivp
lods
lret
cmpl
ficoms
pop
xchg
les
mov
inc
push
jne
inc
cmpb
sarb
adc
test
adcl
jmp
loopne
or
imulb
dec
dec
inc
jg
jbe
inc
ret
jge
cs
fs
and
sub
xor
lcall
ftst
loope
das
add
fsubrp
add
enter
test
push
xchg
sub
and
mov
scas
or
jle
jecxz
inc
mov
add
dec
sti
inc
sub
jp
sbb
pop
push
mov
cmp
movsb
scas
es
ljmp
mov
rcll
cltd
pop
jb
pop
cmpl
mov
scas
nop
iret
and
stc
lret
mov
jnp
insb
dec
pusha
in
xor
add
lea
pop
aam
push
incb
jae
pushf
and
xchg
out
outsb
in
and
neg
push
cmp
addr16
mov
enter
stos
ret
leave
and
mov
imul
or
cmp
movsb
andl
sub
add
xlat
and
mov
push
mov
pop
shl
arpl
nop
jne
mov
xlat
lock
mov
in
or
mov
inc
fnstcw
mov
loopne
sbb
xchg
andb
mov
cwtl
xor
mov
jne
xor
and
add
push
dec
test
cwtl
dec
mov
lahf
adc
push
xor
out
out
pop
and
ljmp
adc
frstor
ja
in
stos
inc
pop
sub
addb
cmc
gs
lret
mov
fimuls
jno
aad
mov
and
push
lds
push
push
js
push
inc
lcall
cmpsl
dec
dec
mov
in
pop
adc
test
adc
aam
push
pop
mov
ja
push
mov
add
orl
mov
mov
sub
sahf
cmp
add
xchg
inc
das
add
add
mov
inc
pop
jp
xor
and
test
call
fisubrl
lea
mov
pmaddwd
mov
cmp
fsubrl
jnp
aam
leave
cmp
jge
jb
lret
xor
mov
mov
js
dec
in
ja
arpl
mov
neg
push
push
push
cld
mov
mov
mov
insl
add
pop
mov
pop
test
mov
addr16
aas
dec
and
cmpsb
ljmp
push
test
out
fisttpl
pop
iret
ret
scas
cmp
stos
outsb
cmp
xchg
inc
or
ss
fimull
clc
pusha
fdivrl
lret
mov
sbb
pop
nop
imul
xlat
mov
jle
cmpsl
int3
and
nop
add
xchg
cli
ljmp
push
dec
mov
or
into
leave
fidivs
repz
int3
mov
cmp
mov
mov
scas
call
ja
int
pop
sbb
in
cli
pop
out
pop
pop
jnp
xor
dec
cmc
in
xor
inc
jb
add
popf
sahf
xchg
divb
insb
out
mov
dec
ss
add
out
call
jecxz,pn
in
fimull
xorl
rorl
aaa
and
mov
dec
mov
inc
inc
dec
repnz
into
cmp
shrl
in
clc
cltd
es
rorb
jb
cmp
scas
mov
and
loop
enter
into
mov
andl
pop
sbb
dec
std
mov
jle
outsb
lretw
dec
push
xchg
stc
leave
add
pop
push
pop
dec
cmp
testb
das
xchg
jb,pt
pushf
and
cmp
jne
pop
inc
or
shl
int
jbe
arpl
push
subb
push
push
mov
loop
fs
aas
mov
rorl
inc
jnp
pop
jae
or
sbb
imul
add
inc
mov
mov
jne
and
push
cmp
jae
aad
cld
data16
jg
sub
or
stc
or
sbb
pusha
cmpsl
pop
cld
loopne
dec
lahf
aam
cmp
mov
lock
cmp
jae
in
adc
xchg
jns
jmp
jmp
test
jecxz
ds
sbb
int
outsl
adc
sbb
sub
sahf
xor
aad
ret
xchg
inc
leave
ffreep
inc
xchg
iret
int
pop
push
jno
adcl
jl
xor
popa
lock
aaa
cmp
aam
imul
xor
dec
and
jae
roll
sbb
xor
sub
push
insl
loop
aas
sub
decb
pop
push
push
ret
jne
test
mov
mov
mov
out
or
xchg
and
ror
push
out
dec
push
movsl
lcall
enter
cmp
lret
sub
mov
imul
sub
xchg
dec
cmc
cmpsb
jle
in
dec
mov
mov
or
insb
outsl
cmp
cld
dec
jns
xor
sbb
int
call
xchg
mov
sbb
push
negl
and
xor
ja
fiaddl
add
mov
jmp
insb
lods
stc
push
in
jecxz
xchg
ret
aam
std
push
push
and
and
xor
cli
mov
cmp
and
jae
dec
rorl
push
push
or
imul
daa
jle
xchg
push
repz
dec
shrb
mov
lret
fs
cmp
xchg
sub
daa
loop
test
subl
loop,pn
das
mov
mov
sub
dec
insb
inc
add
mov
xorb
cmpsb
call
lods
push
jnp
movsl
mov
pop
cmp
outsb
xor
shl
pop
push
jb
sub
lret
adc
lea
jp
dec
insb
jne
push
and
mov
ljmp
mov
cmpsb
out
dec
movsl
cwtl
jns
sbb
fistps
loopne
mov
adc
push
push
imul
ret
addr16
rolb
add
outsb
sub
mov
jns
insb
adc
fwait
divb
cwtl
in
mov
cmp
or
notl
into
xor
sub
pop
outsb
mov
lds
imul
jo
imul
sub
cs
test
data16
dec
out
jne
xchg
push
xchg
mov
sbb
ret
xlat
dec
inc
adc
add
int
sahf
mov
jecxz
mov
cmp
daa
jp
int3
sub
outsl
pop
push
out
call
je
jb
xchg
pop
je
into
outsl
fdivs
add
lock
mov
push
rcrb
cmp
sbb
je
iret
shlb
lods
or
ja
xor
adc
inc
jle
or
mov
call
fbstp
outsl
in
fucomip
push
shl
mov
lock
fcoml
insl
push
add
jg
out
sbb
dec
inc
ds
iret
xor
cmp
xchg
sub
add
and
add
pop
cmpl
je
xor
test
xor
jmp
pop
cmpsb
sub
push
inc
xorb
into
jle
mov
mov
pop
lret
sbb
loop
push
outsl
jo
and
and
adc
jne
lods
test
push
mov
inc
out
mov
jl
lret
adc
add
jg
stos
cmc
mov
outsb
fists
jbe
aas
cmpsl
lret
in
pop
mov
push
mov
inc
std
push
cmp
mov
dec
mov
sbb
mov
cwtl
dec
mov
cmpl
mov
or
sub
cld
pop
or
push
mov
dec
push
pop
int3
sbb
aas
nop
cmp
and
aaa
xor
pop
fcoms
xchg
adc
hlt
rol
mov
and
mov
cld
mov
pop
adc
stos
xchg
sub
test
ret
repz
pop
lock
jp
lahf
mov
int
push
out
ss
inc
push
das
and
shrl
mov
jnp
mov
clc
jae
lods
stos
jne
and
loope
push
or
sub
cld
sub
ljmp
mov
push
inc
xor
ss
xchg
and
cmp
mov
mov
mov
push
int3
dec
mov
add
push
jae
dec
leave
inc
mov
test
pop
mov
cmp
ja
cli
sub
push
sub
inc
inc
sbb
push
add
ljmp
fcompl
mov
jge
sti
mov
ja
sub
cmp
and
fwait
in
div
sub
jb
insb
pop
mov
fists
dec
sub
repnz
bound
test
dec
push
mov
mov
mov
lea
add
cwtl
shrb
cmp
cltd
addb
add
cmpsl
jg
pop
out
and
push
popf
xor
inc
jp,pn
cmp
push
and
sub
mov
sbb
jl
add
or
lret
ds
pop
imul
lcall
add
adc
fucomi
nop
xlat
aaa
mov
and
call
sbb
lret
inc
xchg
or
pop
faddl
ljmp
or
cmc
ret
add
cld
adc
aaa
lahf
fstps
lret
mov
mov
adc
push
aaa
lods
xchg
cmp
adc
call
pop
mov
adc
stos
cmp
cmpsl
js
cli
lds
jmp
mov
pushf
adc
cmp
and
fldl
lcall
jle
mov
jp
pushf
dec
sub
xchg
stc
and
orb
mov
push
jnp
add
sub
outsb
roll
dec
add
sbb
repnz
pop
adc
and
fstpt
jne
js
mov
in
bound
rcl
jo
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
jmp
and
mov
jmp
adc
addl
mov
inc
das
jnp
adc
imul
arpl
jmp
xor
push
lahf
and
js
int
nop
inc
rcr
fiadds
or
fcomps
or
sub
mov
dec
cmp
cmpl
inc
push
jge
jno
push
or
cmp
fs
int3
insb
out
mov
sbb
inc
outsb
loopne
dec
dec
cs
mov
enter
dec
int
cmp
and
mov
int
sub
icebp
jl
dec
add
int3
fldl
pop
mov
push
dec
xor
cmpl
jo
dec
movsl
lret
int3
xchg
mov
mov
mov
insl
sti
and
mov
sub
int3
inc
xor
sbb
mov
fwait
sub
push
pop
cmc
out
aam
sbb
cmp
lret
mov
push
dec
pop
mov
ja
aaa
mov
jle
adc
push
xchg
cmc
mov
dec
dec
into
push
mov
jg
dec
push
popa
int3
add
add
stos
sbb
out
out
cld
inc
dec
out
popa
ljmp
scas
xchg
and
inc
jo
cmp
push
outsl
xchg
clc
add
jns
sub
dec
daa
mov
aam
sub
gs
das
popf
xchg
mov
or
fildll
adc
mov
int3
xchg
mov
leave
xchg
pop
outsb
dec
sti
movsb
js
or
or
cmp
or
nop
testb
pop
ja
lcall
jnp
inc
adc
mov
or
and
cltd
jo
cmp
xor
adc
xor
pop
hlt
insl
je
xlat
nop
push
ja
jmp
jne
mov
adc
mov
lods
sbb
hlt
jmp
xchg
fs
dec
fldl
xchg
sub
rorb
nop
jecxz
orl
sub
pop
shlb
add
aam
cmp
mov
pop
roll
cmovne
cmp
je
iret
inc
push
push
cmp
and
je
aas
xor
push
loope
adc
or
and
jge
test
mov
cwtl
adc
sarl
std
and
fucomi
xchg
hlt
mov
shlb
jne
jno
cmp
add
int3
fdivs
mov
stos
lahf
or
xchg
or
dec
jb
ret
sbb
mov
push
lcall
stos
ret
andb
sahf
push
mov
add
cli
mov
mov
movsl
nop
fnstsw
scas
pop
cld
aas
push
push
dec
inc
sbb
movsl
cli
cwtl
jae
out
or
adc
inc
test
cli
das
or
adc
hlt
cmp
inc
sbb
xchg
out
stc
ficoml
jae
mov
inc
out
pop
sbb
mov
sbb
mov
shll
xor
into
daa
mov
mov
js
rcl
sbb
adc
and
push
cmp
fldt
jns
xchg
jns
dec
jne
shll
jge
jl
sub
sub
pop
mov
daa
lods
lahf
icebp
pop
in
gs
or
loopne
mov
adc
imul
lret
jl
or
jo
mov
push
xchg
or
repnz
and
and
xor
mov
lea
push
pop
pop
sub
lret
and
push
or
shrl
out
pop
test
mulb
mov
loop
or
mov
xchg
xor
inc
outsb
cmpsl
push
jp
mov
xchg
clc
add
fucomip
sbb
pusha
add
push
scas
inc
lret
adc
pop
jg,pt
pop
xor
and
add
inc
fstpt
fisttpll
and
pop
dec
mov
outsl
mov
bnd
push
mull
fistpl
jp
or
push
popa
into
mov
xor
std
cmp
in
jecxz
mov
stos
cwtl
movsl
mov
sbb
or
test
mov
push
jns
cmp
jns
dec
inc
dec
sahf
loope
pop
pop
xchg
rorb
ljmp
ljmp
lods
pop
mov
xchg
sahf
pop
adcl
mov
test
xchg
xchg
out
sbb
push
jno
cmc
cli
out
push
or
mov
add
movl
xchg
push
arpl
jmp
in
repz
dec
pusha
xchg
and
mov
push
repnz
popa
push
cmpb
adc
sub
mov
adc
cmc
push
fwait
enter
mov
lock
negl
inc
cmc
shrl
popf
enter
lcall
adcl
aaa
call
inc
adc
mov
aam
lea
orl
sbb
adc
mov
shlb
mov
sbb
scas
lea
and
inc
push
jo
mov
sahf
xor
dec
int3
xor
lret
pop
fwait
adc
adc
out
push
push
and
dec
adc
data16
adc
adc
dec
jecxz
push
pop
or
lods
sub
mov
and
ds
rorl
mov
imul
inc
xor
popf
adc
fsubp
push
inc
dec
xor
shrb
xchg
xchg
inc
xchg
stc
pop
popa
push
sub
shl
mov
mul
sub
das
cld
pop
add
mov
sub
popa
rcrb
xchg
jne
dec
call
xchg
cmp
nop
into
lea
push
imul
je
pop
dec
ds
push
jmp
add
lods
pop
sbb
ja
fwait
mov
outsl
mov
sahf
xor
sub
shlb
in
das
mov
mov
in
xchg
lret
sbbl
xchg
lods
lds
dec
dec
cmpsl
add
lahf
xor
aad
popa
push
xchg
mov
xchg
jnp
pop
add
xor
lahf
dec
cmpsl
cwtl
test
sahf
iret
xchg
cmp
sub
loop
mov
cld
or
fcoms
mov
sbb
ljmp
setb
add
fs
inc
iret
rcl
dec
les
into
enter
test
loop
cltd
mov
sbb
insl
stos
mov
addr16
in
sub
jle
loop
lret
cmpsb
insl
bound
pop
aad
idiv
fwait
sti
pop
repnz
jne
imul
mov
lea
bound
or
and
ds
dec
pop
movsb
dec
push
xchg
jmp
push
fsts
outsl
lock
call
je
movsb
mov
or
fwait
loope
mov
jb
fwait
les
repz
addr16
aam
push
shll
add
fidivl
inc
add
cmp
mov
adc
scas
sti
sub
ret
rcrb
dec
sub
insb
mov
jle
push
mov
test
aaa
scas
addr16
xchg
js
sarb
std
aam
xor
push
cmp
clc
mov
xchg
loope
movb
xchg
les
mov
sub
mov
cmp
dec
fcmovbe
dec
imul
jmp
imul
jnp
sahf
out
mov
adc
leave
lds
sbb
push
jmp
push
cs
ljmp
dec
push
ror
jg
adc
sub
ret
adc
bound
adcb
dec
iret
sub
js
jae
sub
jmp
dec
fistps
fs
inc
add
sub
adc
xchg
and
outsb
pop
push
mov
lods
push
and
nopl
cmp
gs
enter
clc
sahf
push
sahf
mov
and
push
pop
fsincos
and
cltd
inc
out
add
movsb
inc
cmp
cmpsl
lods
lods
lret
div
xor
fnstsw
sbb
push
mov
dec
or
insb
pusha
sbb
leave
jmp
push
push
into
shr
xchg
jae
sub
add
xchg
cmpsb
jae
push
cmc
mov
ljmp
ror
int3
dec
mov
out
push
add
xor
cmp
mov
push
cmp
mov
mov
lds
adc
test
xchg
cmp
mov
stos
jge
adc
call
sbb
mov
cmp
fnstsw
jb
scas
mov
testb
imul
mov
lcall
mov
jge
xor
loop
subb
in
dec
mov
pop
mov
rclb
repz
add
icebp
jne
xchg
mov
pop
mov
loopne
push
cmpsl
dec
shll
and
add
pushf
mov
adc
cmp
pop
negl
and
fs
lret
sub
icebp
test
cltd
in
pusha
fwait
add
jecxz
inc
das
mov
pop
xchg
inc
repz
ret
mov
dec
test
rol
ja
sub
jl
and
mov
cs
call
dec
mov
push
inc
cld
lods
and
and
std
sub
xlat
outsl
sub
mov
stos
pop
pushf
and
xor
data16
repz
and
test
mov
xchg
cmpsl
inc
pop
test
shrl
jno
adc
pop
movsl
mov
xor
push
push
les
jbe
push
add
adc
mov
mov
cmp
mov
mov
popa
mov
xor
outsb
movsl
ret
mov
js
push
je
fucom
dec
pushl
les
insl
call
xlat
mov
push
inc
aas
fadds
ds
fcmovu
into
sti
xor
mov
cld
fisubs
pop
xor
cmp
xor
js
loope
int3
loope
enter
sarl
in
dec
ja
jns
pop
out
sub
xor
ret
lret
adc
pop
stc
inc
rorb
inc
push
pop
mov
xchg
jge
and
mov
pop
lret
pop
inc
out
fmulp
ret
or
cmpsl
push
rorb
cwtl
push
jb
sub
in
add
cmp
mov
inc
bound
jg
pavgw
aaa
mov
sbb
mov
push
xchg
loope
cld
xchg
ret
pop
inc
sbb
imul
xchg
add
push
cmp
in
jnp
dec
shll
xor
je
addl
pop
xchg
dec
mov
mov
sbb
fcompl
pop
out
jae
stos
imul
arpl
mov
xchg
test
xor
mov
and
rorl
push
mov
mov
bound
mov
mov
push
cmc
inc
jne
push
inc
add
xchg
inc
lea
xchg
jno
jl
or
pushf
fisttpll
jecxz
ret
rol
pop
imulb
out
adc
sub
xor
add
dec
sbb
mov
add
sbb
or
pop
imul
and
ja
movsl
push
mov
shufps
jl
into
int3
dec
mov
fs
add
repz
mov
xorl
fdiv
cs
mov
mov
xor
ds
mov
fadd
ret
push
and
ds
mov
or
cmp
test
insl
rclb
xchg
add
stos
jecxz
enter
mov
shl
lcall
stos
call
jmp
test
xchg
sbb
mov
sbb
into
and
dec
sbbb
stc
ret
ret
fdivrl
or
xchg
sub
shl
mov
mov
xor
jae
imul
mov
mov
shlb
mov
lds
lcall
push
mov
lods
jno
inc
lahf
jne
loop
aam
push
out
aam
mov
xor
gs
mov
pop
andl
adc
gs
mov
xchg
punpckldq
mov
sub
push
es
fcomp
mov
into
mov
scas
icebp
sbb
inc
add
push
cmpsb
das
cmpsb
xchg
dec
data16
jle
lea
add
daa
xor
adc
ljmp
xchg
jno
mov
in
inc
popa
and
adc
fimuls
jecxz
cmp
xchg
and
or
jle
cmc
dec
cld
sub
mov
inc
or
test
and
arpl
aam
add
and
push
mov
mulb
and
gs
inc
xchg
ds
lahf
inc
push
scas
lea
into
mov
inc
dec
pand
mov
imul
and
jno
int3
ffreep
add
orb
test
xor
pop
pop
insl
pop
xchg
mov
pusha
pushl
adc
inc
das
add
sahf
push
xchg
insl
hlt
xchg
pop
lcall
cltd
and
inc
ds
movsb
scas
jmp
movb
fimuls
test
rolb
jb
push
push
inc
mov
dec
call
loop
sti
nop
sub
xchg
inc
mov
rcll
fsubp
movsl
inc
outsb
and
and
lds
std
push
pop
mov
or
or
sar
scas
inc
leave
iret
int
outsb
mov
fidivl
ret
jg
sbb
imul
cmpsb
repnz
mov
andl
or
aaa
iret
jp
fst
fisubrs
data16
iret
pushf
cmp
or
int
cmp
mov
pop
mov
js
mov
mov
sbb
and
inc
scas
xor
movsl
sbb
loopne
xor
mov
add
in
lahf
loop
adc
mov
in
push
cli
push
sub
pop
mov
repnz
xchg
push
dec
adc
xor
pushf
inc
fnstcw
push
xor
lea
clc
adc
jbe
pop
xchg
jns
fnsave
aam
dec
popa
push
insb
sub
cmpsl
roll
fcmovnu
mov
sbb
repnz
out
jo
add
xchg
imul
xchg
inc
cld
mov
gs
or
popa
stc
mov
shl
jmp
xchg
imul
out
mov
mov
outsb
sbbl
repnz
or
sub
jmp
shll
jle
mov
mov
out
push
jae
inc
add
xchg
roll
aam
cltd
sub
lcall
mov
mov
iret
xchg
jae
pop
mov
inc
mov
mov
std
into
jno
rolb
cmp
jg
into
mov
out
cli
lods
jg
negl
cmpsl
pop
sub
sahf
ljmp
xchg
inc
sub
cmpsl
fnstsw
icebp
clc
pop
xchg
pop
fists
rcrl
gs
sbbl
pop
cld
fs
in
leave
addr16
inc
sbb
fdivl
out
inc
add
ret
add
cmp
push
enter
mov
or
mov
idiv
fbld
push
inc
adc
inc
push
shlb
imul
sbb
clc
iret
fidivrs
cmp
das
shll
inc
mov
js
add
sub
pop
loopne
dec
jg
add
movb
aam
dec
leave
sub
lret
insl
adc
xchg
adc
and
sub
mul
loopne
and
xchg
movsl
xor
xlat
and
jb
jg
scas
pop
mov
jbe,pn
mulb
pop
ljmp
cmp
es
push
out
jl
mov
jbe
andl
aaa
movsb
movsb
dec
cli
jl
paddb
mov
or
mov
mov
xchg
push
push
mov
inc
dec
xor
cmp
idivb
pop
loop
push
adc
inc
pop
lcall
pop
testb
mov
ds
mov
sar
push
sub
rorb
int3
jmp
cmpsb
scas
push
dec
pop
loope
pop
jg
pop
aam
dec
pop
mov
loopne
push
cmp
push
mov
lahf
cmp
xchg
cmpsl
jle
adc
jnp
call
sub
push
lea
cmp
adc
invd
sub
xor
in
push
pop
xchg
sub
sbb
mov
divl
arpl
in
shll
loopne
std
pushl
rorb
fs
cwtl
int3
mov
lods
scas
lcallw
mov
ss
jp
xor
push
hlt
dec
or
dec
idivl
loopne
test
adc
inc
mov
add
or
or
pop
jnp
inc
sbb
pop
mov
lock
lods
jmp
inc
stos
cmp
and
dec
cltd
xor
mov
lods
divl
mov
cli
mov
cltd
sub
movsl
xchg
push
mov
lcall
sbb
add
mov
and
mov
mov
cltd
ds
sahf
pop
fstps
push
xor
mov
movsb
adc
mov
rcl
ficomps
mov
pop
in
lods
or
sti
pop
cld
arpl
into
xchg
sub
mov
addr16
mov
repnz
jo
mov
fnsave
inc
xor
xchg
and
add
cltd
xchg
cmc
insb
dec
loop
sahf
hlt
xorb
in
iret
repz
das
enter
push
insb
outsb
cmp
or
jbe
push
add
mov
and
adc
fs
aad
pop
push
and
mov
jae
dec
inc
std
clc
out
push
dec
xchg
mov
mov
sbb
cmpsb
iret
lahf
cltd
sub
mov
out
nop
mov
lcall
inc
mov
orb
inc
aam
adc
dec
stc
cmpsl
popf
ret
sub
mov
mov
or
fsubrl
out
xor
cmpsl
stos
cld
fadds
jne
jmp
decb
mov
test
das
ret
fldcw
xor
lods
sub
jb
xchg
call
mov
rcl
jle
xor
hlt
imul
push
cmp
mov
or
push
dec
mov
cwtl
dec
push
je
sbb
popf
lahf
mov
jle
faddp
add
sarl
fs
es
or
sub
ds
add
lret
jbe
aam
cmp
mov
jg
xor
adc
outsb
lea
mov
sub
mov
adc
movsb
push
push
jecxz,pt
out
pop
icebp
repnz
xor
fnsave
xlat
call
ss
jae
nop
icebp
loop
into
les
jo
adc
inc
xlat
movsl
outsb
scas
scas
mov
and
aam
int
inc
xor
mov
jb
fisubs
clc
loopne
in
xchg
xor
out
sub
jg
sti
xchg
cmp
or
shll
dec
mov
ja
jno
xor
sub
sub
xchg
jle
xor
popa
xchg
push
into
mov
sahf
adc
jecxz
pop
ja
push
cmpxchg
sbb
test
in
and
jl
mov
xchg
lcall
dec
fwait
andl
test
test
push
rorl
rcrl
stos
or
xchg
xchg
cmpsl
adc
decl
cmp
loope
in
adc
mov
dec
roll
pop
xor
cwtl
cwtl
pop
or
cld
aad
out
push
rorl
mov
icebp
jge
mov
cmp
mov
jp
in
aad
in
cmp
jle
fldt
popa
mov
imul
cmpsb
loop
out
lcall
jg
pop
movsl
jg
ds
cmp
xor
int
dec
push
imul
out
xlat
notl
test
subb
lahf
dec
dec
dec
hlt
mov
jne
mov
xor
pop
and
rcrb
push
jl
inc
pop
sahf
mov
loopne
enter
in
outsl
sti
pop
lock
mov
enter
cmp
sti
pop
into
and
push
aas
push
xchg
xchg
pop
pop
fists
setb
insb
stc
push
mov
add
push
popf
cmp
cmp
test
xchg
rorb
push
or
xchg
daa
out
leave
dec
ss
fisubrs
mov
xchg
mov
rcl
jle
nop
not
jge
xor
lock
dec
cmp
lret
cltd
xlat
cli
jle
das
movsl
jge
mov
mov
scas
adcl
fsubl
sbb
aaa
out
add
test
adc
out
gs
cmpsb
jp
jg
inc
es
clc
add
jae
fimull
inc
std
aam
jmp
jo
fnstsw
aam
ficoml
mov
fdivs
sbbb
ror
aad
xor
in
mov
jmp
stos
cwtl
enter
dec
mov
jmp
xchg
ljmp
fwait
add
xchg
xchg
fcompl
mov
ret
sbb
push
int
xor
aas
lret
jmp
mov
dec
jmp
or
mov
in
dec
jle
mov
fldenv
inc
mov
out
or
repnz
fs
fsubrl
or
add
xchg
sti
and
mov
push
iret
sarb
rorl
fs
mov
jne
inc
adc
and
pusha
out
pop
iret
pop
shll
add
and
scas
pop
movsb
in
xchg
stc
rcrb
out
idivl
or
js
and
jle
jl
lret
cmp
addr16
jg
mov
ret
nop
jg
adc
popa
cmp
mov
xor
test
inc
and
or
add
lods
and
and
lahf
add
addl
cli
push
add
adc
pop
cmpsb
dec
dec
sbb
das
add
int3
fdivrl
fs
inc
jle
movsb
es
adc
int
pusha
jmp
lock
push
fs
je
adc
pop
jecxz
je
rcrb
xor
push
jb
mov
or
push
or
and
ret
mov
inc
inc
cmp
lods
scas
aad
scas
and
fs
mov
outsb
xchg
fmul
loop
aaa
imul
pushf
mov
enter
or
data16
push
lds
pushf
jecxz
dec
pop
aas
js
gs
push
pop
shrl
xchg
repnz
ret
int
and
sub
xchg
lcall
popa
les
js
and
lcall
cmp
xchg
out
out
sub
jbe
icebp
mov
sub
inc
jecxz
or
in
xchg
dec
in
shlb
xchg
inc
pop
loope
cld
comiss
push
test
sbbb
push
sbb
and
lock
sbb
hlt
loop
das
adc
ret
mov
mov
cmp
sbb
lahf
sbb
sbb
pop
jge
testb
jge
jle
inc
aaa
movsb
sahf
mov
cmp
xchg
imul
xor
push
cmp
pop
xlat
xor
setp
repz
mov
orl
js
sbb
les
movsb
sub
mov
or
jae
mov
push
sbb
push
pop
dec
pop
jmp
xlat
in
pop
dec
xchg
gs
sti
adc
lret
in
arpl
mov
lock
mov
push
fsts
outsb
sarb
out
ret
mov
lds
ret
faddp
xor
clc
sbb
push
pop
inc
and
cld
in
scas
xchg
dec
lret
in
xor
xchg
add
xor
dec
dec
xchg
adc
loop
loop
lret
stos
mov
lds
cmc
push
nop
jbe
xchg
lods
sbb
pop
fidivrl
pop
inc
lock
ret
ljmp
rcrl
popa
xchg
push
dec
jg
and
dec
mov
dec
mov
call
ja
adc
cli
shrl
jno
mov
lret
jp
lock
shrl
movsl
sti
hlt
cmp
sub
arpl
enter
subl
aad
jl
jp
pop
ret
lds
add
sub
clc
aaa
jg
push
push
add
loope
xchg
gs
xchg
fcompl
icebp
lahf
push
call
push
pop
dec
push
dec
or
loopne
inc
sbb
add
xchg
scas
jbe
mov
outsb
sbb
in
xor
cmp
jo
push
cwtl
fldt
cmpsl
inc
sti
xor
aad
int3
mov
popw
add
sbb
lret
or
sub
ffreep
outsl
jo
imul
jle
push
mov
dec
ret
jnp
inc
inc
mov
jo
sbbl
and
xchg
and
xchg
test
movsb
daa
out
mull
int3
arpl
push
mov
push
adc
lock
dec
cmp
pop
loop
add
in
cmp
hlt
lea
or
xor
adc
pop
pop
and
and
mov
clc
call
cltd
daa
in
out
fdivrl
xchg
lahf
int
fldenv
xchg
push
mov
push
lods
fwait
or
push
xor
push
lea
push
gs
imul
pop
das
push
int3
in
jg
sbb
xor
out
fsubl
out
ss
dec
sarl
fwait
push
mov
xor
sub
sub
push
pop
sbb
cld
push
and
sbb
inc
or
fildll
daa
rclb
jae
dec
lods
sub
cmp
imul
jo
mov
sub
sti
loop
or
xor
std
mov
cmp
mov
push
mov
loopne
aas
dec
repz
jp
xchg
cmp
outsl
xor
xchg
mov
and
adc
jmp
xor
fldt
outsl
cmp
sbb
sbbb
les
push
jmp
pop
push
pushf
push
out
in
xchg
or
repz
jle
outsl
jle
mov
cmp
ficoml
lea
sub
jge
inc
mov
cmp
sub
int
and
test
jge
inc
adcb
and
shll
rorl
enter
sbb
pop
mov
sahf
aam
outsl
push
xor
das
jb
jmp
mov
dec
shlb
cmpsl
pop
sbb
and
push
mov
pop
cmpb
les
dec
adcb
jns
mov
insl
cli
pusha
xchg
mov
cltd
adc
inc
cli
insb
sbb
enter
mov
and
pop
insb
shll
jge
cmp
adc
or
mov
sti
int
sti
shll
loopne
stc
repnz
inc
repnz
cmp
jb
das
inc
cwtl
bound
mov
sar
rorb
jno
sysenter
insb
mov
sahf
sbbb
mov
push
mov
stos
std
mov
rcrb
dec
jle
cmp
push
arpl
cmpb
push
mov
add
pop
mov
sub
fistps
pop
rorb
clc
imul
out
ss
xchg
jns
lock
mov
adc
cli
pusha
leave
mov
fsubrl
jecxz
fisubrs
or
mov
rcrl
int
into
ljmp
inc
pop
stos
movsb
pop
outsl
iret
repnz
pop
lock
in
loopne
sub
cltd
scas
sub
fcmovb
cmp
mov
cli
cli
arpl
cld
enter
xchg
loopne
xchg
pop
fwait
add
jae
in
bound
dec
pop
cmp
shll
sbb
cld
push
insb
fistpll
jp
mov
fwait
cmp
mov
daa
mov
push
insb
mov
insl
repnz
pusha
sbb
push
pop
xor
in
xor
and
sbbl
xchg
mov
inc
es
xchg
scas
mov
testb
testl
and
jmp
into
xchg
fdiv
jnp
add
popa
adc
xor
das
lret
sub
inc
cld
xor
test
into
out
pop
shlb
adc
stos
jno
cmp
insb
jl
subl
repnz
sub
or
adc
fwait
mov
sbb
and
inc
insb
aam
mov
mov
stos
pop
cmp
dec
aad
dec
in
data16
sbb
pop
dec
push
sbb
jl
add
lahf
or
sub
les
adc
test
data16
pop
adc
orl
movsl
mov
and
lock
add
test
mov
lds
xorl
int3
adc
lahf
mov
aas
pusha
ret
sub
dec
lret
jne
inc
pop
push
inc
jae
icebp
mov
add
lea
adc
rolb
sahf
fcmovnb
and
xor
aaa
lds
adc
mov
cmp
xchg
mov
mov
mov
dec
xchg
outsl
lea
xchg
xchg
leave
imul
xor
xchg
out
cmpps
mov
sbb
add
movb
xchg
xchg
and
fcmovne
mov
sahf
lds
and
jl
bound
mov
insb
jl
add
mov
mov
inc
in
mov
xor
lret
sub
pusha
bound
mov
dec
mov
std
je
ud1
test
mov
push
inc
daa
in
jle
inc
test
xchg
sub
jne
dec
clc
insb
test
xor
xor
dec
push
hlt
adc
mov
mov
mov
jge
xchg
or
cmp
adc
inc
inc
mov
xor
push
push
sub
shll
daa
mov
mov
or
lock
mov
repz
dec
in
mov
jl
repnz
into
jl
bswap
in
ljmp
pop
fists
or
ljmp
xchg
add
lods
jmp
xor
clc
stc
push
push
mov
add
mov
mov
xchg
add
dec
shr
ljmp
push
sub
pop
cmp
popa
cmp
rclb
and
ret
pop
out
or
mov
xchg
xor
cmp
out
cmp
dec
sbb
add
loope
fistl
test
arpl
stos
add
pushf
cwtl
mov
push
cmovns
inc
pushf
iret
stc
shll
sahf
push
push
sbb
xchg
call
xchg
aaa
leave
pusha
orb
mov
int
addr16
pop
mov
outsl
scas
xor
outsb
repnz
dec
clc
lea
int3
mov
add
pop
rcll
add
adc
fldl
and
and
sub
xorb
inc
or
inc
gs
jle
loope
imul
lret
aam
iret
jle
pusha
sarl
notl
xchg
adc
cmpsl
fsubrp
xchg
cmc
lods
gs
mov
push
adc
in
fistpll
inc
push
jae
jg
sarb
fcmovne
push
sbb
into
mov
int3
xchg
fidivl
push
cmp
cmpsb
test
xor
mov
outsl
pop
in
lret
inc
ds
jno
and
mov
or
add
dec
or
lahf
mov
inc
adc
mov
inc
scas
fwait
mov
add
xchg
and
sbb
push
mov
sbb
stos
mov
insb
sub
fidivl
shl
mov
xor
jecxz
dec
xchg
push
pop
std
mov
testl
inc
movl
int3
scas
lock
icebp
sti
xor
or
xchg
jl
out
dec
xchg
aad
loop
mov
insl
loop
bound
or
sbb
add
into
jle
sub
or
and
cmp
mov
push
jnp
rorl
jno
mov
push
lock
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
jmp
sbb
aam
mov
cltd
push
inc
in
mov
jl
jno
addl
fnstcw
inc
sub
inc
int3
cmp
shrl
sub
fistpll
xor
test
mov
aas
icebp
mov
fstpt
mov
clc
pop
lret
dec
mov
xchg
iret
data16
sahf
out
dec
sub
repz
sub
xchg
jmp
fistpll
xorb
dec
inc
jmp
push
in
push
lahf
icebp
shlb
clc
sarb
flds
sbb
xlat
repnz
idivl
je
subl
ret
mov
push
inc
mov
out
jbe
fs
orl
out
inc
cltd
mov
outsb
jge
imul
stos
adc
rclb
sub
fidivl
mov
jge
jmp
inc
aas
mov
mov
aas
pop
jecxz
cwtl
jl
lret
xor
ds
ffree
jno
xchg
scas
jo
xchg
enter
gs
sub
shl
pop
popf
rcrb
rol
mov
xchg
clc
and
lcall
ret
ja
mov
xchg
xor
ret
pop
fisubrs
xchg
sbb
insb
lret
outsl
push
xchg
inc
cld
mov
adc
push
or
mov
shl
ret
rcll
sbbb
push
lret
bound
jle
pushf
and
js
loop
loop
mov
and
mov
sub
cmp
pop
insl
inc
dec
incl
mov
mov
jne
pop
push
mov
nop
mov
out
inc
je
sub
out
sbb
sbb
mov
sbb
mov
jecxz
mov
lock
xchg
pop
lods
movsb
loopne
cmpsb
sub
xor
xor
mov
mov
pop
ret
push
mov
jle
adc
adc
pushf
stc
mov
dec
outsl
loop
dec
push
mov
jge
pop
xor
incb
sub
out
enter
or
lret
test
inc
jmp
cs
xchg
xchg
aam
jo
xor
cld
pop
out
repnz
push
fisubrs
pop
in
mov
ret
lds
add
shll
and
sub
inc
jecxz
iret
xchg
xor
outsb
or
fisubs
icebp
and
data16
sbb
into
mov
or
popf
mov
fsts
and
cmp
push
xor
lret
repnz
rolb
fdivrl
sbb
adc
popf
call
add
fwait
mov
adc
cmp
pop
clc
into
sub
or
jp
push
into
aad
add
and
add
inc
pop
jmp
and
jmp
xchg
out
subb
clc
and
pop
cld
jmp
mov
mov
jne
sub
mov
adcl
xor
push
repz
jne
daa
or
xchg
aam
xchg
xchg
lods
pop
rcl
mov
ret
lcall
mov
mov
lret
outsb
add
jge
dec
test
jne
mov
lock
inc
and
jl
cli
or
rcrb
aas
movsl
dec
sub
xor
dec
add
push
inc
dec
push
pop
jg
mov
xchg
popf
ficomps
push
insb
push
sub
das
call
aaa
pop
pop
mov
mov
mov
sarb
outsl
cmp
lods
cmc
popl
ret
lods
repz
lock
mov
int
popf
test
mov
call
cmpsl
fcompl
in
xlat
mov
adc
flds
mov
fildll
xor
enter
jp
rcr
cs
add
stc
sbb
xchg
pop
out
push
repz
repnz
xchg
int
ret
into
mov
rep
xor
adc
lret
call
adc
sub
mov
loopne
cmp
xor
inc
pop
xchg
adc
cmp
adc
stos
mov
pop
fnstenv
sbb
leave
mov
ss
mov
xchg
fstpl
inc
pop
enter
xchg
sbb
pop
in
imul
int
dec
or
shlb
cmpsl
ja
pop
inc
or
je
cmp
mov
push
cmc
pop
decl
mov
cmc
pop
and
mov
mov
and
test
bswap
inc
pop
iret
pop
es
popa
dec
jle
test
push
jne
mov
out
sahf
push
cld
mov
mov
adc
por
and
sub
fwait
sahf
adc
pop
test
sub
mov
je
mov
cli
pop
testl
test
jmp
jb
fldcw
mov
inc
repnz
or
jl
clc
sub
inc
or
push
daa
pop
push
outsb
in
cmc
dec
cmp
fmuls
xchg
pop
jl
js
sub
and
mov
mov
mov
into
jmp
jecxz
jnp
cwtl
unpcklps
nop
scas
jmp
and
xchg
iret
mov
in
and
fwait
addr16
repz
pop
push
insl
sti
mov
das
sub
cltd
aam
adc
push
mov
dec
les
lds
sahf
xor
in
sahf
dec
lcall
icebp
jmp
add
xor
dec
sarb
cs
cmp
sbb
or
xor
mov
out
out
clc
test
dec
add
loopne
in
jecxz
cs
mov
loopne
pop
rorl
push
lods
xchg
pop
sahf
pop
into
js
push
mov
inc
popa
outsb
mov
mov
leave
adc
test
sbb
jmp
call
add
nop
adc
aas
int
in
cmpsb
lds
pop
repnz
lahf
mov
fildll
adc
lods
negl
sub
imul
cmc
into
in
mov
add
push
shlb
sahf
movsb
jmp
incl
mov
and
mov
jmp
and
scas
enter
loop
pop
pushf
xchg
lock
stos
mov
push
xorb
pop
je
out
in
xchg
out
lods
inc
aam
push
ja,pt
sub
sbb
lods
and
xlat
adc
cmp
call
cmpsl
adc
cmp
scas
ret
cltd
das
xchg
bound
in
xchg
dec
loop
jg
enter
push
mov
adc
jno
push
sbb
xlat
xchg
les
mov
xchg
je
aas
push
test
sbbl
inc
pusha
lcall
jb
pushl
jne
adc
dec
jg
leave
sbb
inc
or
in
mov
mov
mov
jne
clc
mov
xchg
in
movsl
fst
sub
xor
icebp
repnz
shll
mov
mov
mov
in
fstp
push
push
arpl
jnp
adc
push
and
add
lds
cli
adc
cli
mull
das
push
pop
sub
loopne
lahf
add
les
hlt
pop
pop
sbb
add
movsb
in
or
pushf
jge
xchg
mov
fldenv
jge
push
pop
pop
inc
inc
pop
pop
das
cmp
cltd
cltd
cmpsb
mov
sbb
aad
fistl
sbb
xchg
dec
push
es
sbb
xchg
and
add
insb
pop
insb
repnz
fsubrl
xchg
out
ret
pop
xor
push
shll
into
rcr
push
cli
xor
and
mov
xchg
pop
fwait
pop
mov
icebp
rclb
arpl
int3
ss
dec
mov
xchg
jg
or
out
pop
je
enter
inc
adc
inc
mov
cmp
cmpsl
push
hlt
bound
push
test
loopne
sbb
js
test
dec
fdivl
jl
add
mov
lret
sbb
pop
je
xor
mov
and
add
and
daa
add
rcrl
scas
in
and
int
pop
jp
push
and
addr16
ret
fdivr
inc
xor
xor
ret
xor
stos
jb
jecxz
std
xchg
insl
in
xorl
fwait
icebp
inc
jne
xor
mov
out
xchg
ljmp
push
pop
pushf
cmc
das
cmp
pusha
out
packsswb
mov
and
vmptrld
lcall
jb
test
sub
clc
hlt
test
mov
inc
lahf
loop
lret
sarl
insb
lret
pop
xor
xor
mov
outsb
cltd
faddl
xlat
xlat
pop
or
cmpsl
rolb
mov
jns
xchg
aaa
cmc
es
ss
cwtl
cmp
enter
mov
or
jp
icebp
sub
pop
adc
sbb
push
xor
dec
sbb
scas
mov
jge
cmc
cltd
mov
into
sub
fsubrs
or
lock
jp
in
fadds
aaa
xchg
mov
adc
pop
ss
pop
fidivl
hlt
popf
bound
lea
leave
push
movsl
or
pop
es
mov
fwait
es
shll
sub
pop
xor
dec
or
fstpl
inc
mov
or
mov
mov
hlt
xor
negb
xor
cli
mov
adc
xchg
rcl
and
add
mov
hlt
jnp
adcl
repnz
ret
gs
and
flds
push
cli
cmp
inc
int
dec
ret
cmpsb
xor
out
mov
inc
mov
pop
dec
jmp
cltd
movsl
roll
test
shl
call
inc
xchg
shl
enter
and
aaa
mov
out
ret
ds
cmp
popa
sub
sub
sub
mov
xor
dec
fiaddl
jmp
test
call
inc
push
adc
mov
adc
aas
or
stc
jnp
cmc
test
test
sub
out
and
sbb
fsubl
dec
cld
and
mov
bound
cmc
mov
jge
sbb
call
in
cld
fsub
cmp
popa
dec
or
pop
cli
nop
mov
cmp
sub
sbb
push
jae
aam
add
mov
imul
xchg
dec
pusha
test
es
sbb
inc
mov
xchg
jecxz
mov
pusha
mov
roll
push
pop
lods
mov
mov
dec
and
add
lcall
xchg
pop
or
pop
fsubs
cmp
enter
mov
lcall
cld
fucom
lock
mov
push
imul
test
in
sbb
enter
pusha
gs
lock
mov
dec
mov
xchg
out
adc
add
and
mov
or
xchg
push
ret
dec
add
xchg
push
lods
ds
cmpb
mov
push
and
mov
and
iret
pop
dec
ja
aam
test
ljmp
outsl
lcall
pop
movsl
lock
dec
cwtl
leave
sti
mov
inc
mov
orl
mov
xor
sahf
rcll
clc
mov
shlb
fcompl
mov
cmp
push
cs
cmpsl
xchg
mov
lea
leave
gs
outsb
adc
mov
int3
xor
mov
or
mov
addr16
push
aaa
lock
sub
js
xor
lcall
fidivrs
cwtl
lods
xchg
nopl
xchg
cld
dec
jae
add
jp
mov
les
push
mov
jle
mov
xchg
sahf
cmp
hlt
aad
or
lods
fcoml
fldl
and
push
adc
jo
sahf
std
int
subb
add
sub
shlb
stos
push
jmp
aaa
ljmp
in
pop
jecxz
movsl
sbb
or
pop
add
rorb
ss
pop
and
xlat
sahf
ret
clc
sbb
outsb
cli
int3
ja
xchg
mov
dec
dec
das
es
jmp
inc
mov
xor
lock
roll
push
jae
xchg
test
sbb
dec
pop
and
loope
add
add
aad
jge
mov
mov
out
inc
push
mov
movsb
push
xchg
dec
lds
imul
jbe
jb
and
jmp
pop
cmp
xchg
fwait
mov
pop
sbb
std
mov
stc
pop
loop
adc
jbe
push
repz
cmpsb
cld
movsb
stc
mov
and
mov
icebp
add
inc
xor
adc
addr16
and
mov
sti
adc
mov
add
mov
mov
and
xor
rorl
mov
mov
lds
sub
push
jecxz
and
popf
or
cmp
mov
test
aaa
sahf
sbbl
int
mov
mov
shll
lret
stos
sbb
push
xor
pop
jne
mov
jb
call
call
fildll
fcomi
lret
cld
or
xor
jge
lahf
fisubrl
lods
jmp
xchg
sbb
xchg
push
pop
lahf
movsb
ljmp
jo
lcall
cmp
jmp
incl
popa
xchg
xchg
pusha
sub
pop
push
cmpsb
mov
mov
inc
aas
lods
ret
out
or
mov
dec
data16
add
cld
push
sbb
fmuls
popf
sub
insb
popf
or
jae
adc
cli
inc
add
and
mov
call
gs
push
adc
mov
sub
sub
leave
add
mov
fidivrs
xchg
or
add
xchg
out
movsl
dec
daa
out
movsl
mov
lds
sub
pop
sbb
jae
sub
aaa
push
add
mov
inc
push
dec
xchg
stos
jp
sub
sti
mov
aaa
stos
mov
jmp
ljmp
call
stc
inc
jmp
jge
pop
mov
xor
or
mov
cmp
cli
fstpt
popa
dec
push
in
ret
mov
jbe
popf
jmp
sahf
fs
cmc
adc
xor
lret
add
adc
mov
shrl
sbb
mov
add
add
sbb
test
pop
jo
filds
inc
mov
sbb
adc
cmc
ds
jno
test
rorl
jecxz
int3
cmc
repnz
lret
mov
dec
or
or
cld
inc
add
or
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
sbb
push
adc
mov
incl
mov
movl
mov
inc
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
pushl
pushl
push
pushl
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
movl
movl
cmpl
je
cmpl
jg
jmp
call
xor
add
dec
mov
jmp
movl
mov
mov
xor
xor
xor
sub
or
mov
xorl
addl
mov
sbbl
mov
addl
sub
adc
mov
add
orl
adcl
mov
adc
mov
sub
xorl
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
orl
adc
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jg
jmp
call
mov
dec
mov
jmp
movl
sbb
lea
sub
mov
movl
andl
lea
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
call
jmp
mov
mov
neg
mov
xor
orl
add
mov
xor
xor
xor
or
sub
sub
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
push
call
mov
dec
mov
jmp
mov
adcl
mov
andl
add
push
mov
andl
mov
mov
sbb
mov
xor
neg
mov
add
movl
cmp
je
movl
mov
movl
jmp
sbb
mov
xor
adcl
push
add
add
xor
mov
xor
mov
adcl
add
movl
push
movl
adc
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
xor
subl
xor
movl
cmp
movl
jne
movl
cmp
movl
jne
push
movl
jmp
xor
mov
andl
xor
add
subl
xor
orl
add
movl
adc
notl
xor
xor
cmp
jne
cmp
jne
mov
xor
movl
cmpl
je
cmpl
jbe
jmp
push
push
pushl
call
mov
dec
mov
jmp
add
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
pushl
call
jmp
mov
mov
xor
notl
add
imul
dec
mov
xor
add
cmp
mov
movl
je
mov
add
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
mov
sub
mov
jmp
mov
xor
mov
mov
mov
xor
mov
sub
mov
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
jg
mov
mov
xor
mov
sub
mov
jmp
mov
xor
add
add
mov
mov
mov
xor
add
not
and
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
je
mov
xor
mov
sub
add
mov
jmp
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
mov
add
mov
mov
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
movl
sub
movl
push
push
adcl
push
xor
orl
push
call
addl
mov
sbbl
lea
push
sbbl
push
orl
call
movl
cmp
movl
je
xor
movl
jmp
movl
mov
push
lea
xorl
push
push
push
xorl
push
call
imul
cmp
jne
subl
lea
adcl
push
push
call
movl
cmp
movl
jne
andl
pushl
push
call
addl
mov
or
movl
movl
cmpl
je
cmpl
jl
jmp
push
push
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
movl
adc
lea
mov
or
mov
lea
and
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
call
jmp
mov
sbb
mov
addl
mov
mov
mov
sbb
xor
adcl
mov
addl
add
notl
mov
movl
mov
cmp
movl
jne
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
adcl
mov
adcl
xor
subl
add
addl
mov
mov
xor
notl
add
sbbl
mov
mov
sbbl
xor
subl
add
mov
andl
xor
xor
inc
mov
cmpl
jg
jmp
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
addl
mov
negl
mov
xor
xor
xor
mov
mov
mov
mov
andl
mov
subl
movl
adcl
mov
xor
movl
mov
addl
xor
subl
add
movl
jmp
lea
push
decl
push
adcl
call
movl
cmp
jne
addl
push
andl
lea
push
push
push
push
call
orl
imul
movl
cmp
movl
jne
orl
lea
push
push
addl
call
movl
cmp
movl
jne
xorl
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
pushl
pushl
push
pushl
push
push
call
mov
dec
mov
jmp
mov
adcl
xor
lea
push
andl
mov
inc
mov
cmpl
jbe
jmp
call
cmpl
jb
mov
sbbl
xor
lea
push
mov
pushl
subl
call
mov
mov
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
adc
lea
movzwl
xor
mov
mov
adcl
xor
xor
add
mov
xor
lea
movl
mov
movl
cmp
jbe
or
mov
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
call
jmp
mov
xor
mov
and
mov
addl
sub
adcl
xor
subl
mov
andl
lea
mov
lea
mov
xorl
lea
subl
push
push
subl
call
movl
cmp
jne
push
lea
push
andl
push
subl
push
adcl
push
addl
call
xorl
imul
cmp
movl
jne
lea
adcl
push
andl
push
xorl
call
cmp
movl
jne
sbbl
lea
push
push
call
cmp
movl
jne
adcl
push
andl
lea
xorl
push
subl
push
push
push
sbbl
call
imul
cmp
movl
jne
andl
lea
negl
push
push
xorl
call
movl
cmp
jne
lea
xorl
push
andl
push
subl
call
movl
cmp
movl
jne
adcl
push
lea
push
adcl
push
subl
push
subl
push
adcl
call
imul
cmp
movl
jne
subl
lea
push
adcl
push
xorl
call
movl
cmp
jne
xorl
lea
push
push
andl
call
movl
cmp
movl
jne
andl
push
adcl
lea
orl
push
sbbl
push
xorl
push
andl
push
notl
call
imul
cmp
movl
jne
xorl
lea
push
orl
push
call
cmp
movl
jne
subl
lea
addl
push
push
adcl
call
cmp
jne
orl
push
orl
lea
push
adcl
push
andl
push
push
call
orl
imul
movl
cmp
movl
jne
adcl
lea
push
andl
push
subl
call
movl
cmp
jne
adcl
lea
push
sbbl
push
adcl
call
cmp
jne
push
movl
lea
addl
push
notl
push
push
orl
push
call
imul
cmp
jne
lea
push
push
xorl
call
cmp
jne
xorl
lea
andl
push
push
decl
call
movl
cmp
movl
jne
xorl
push
addl
lea
push
push
andl
push
push
call
imul
cmp
movl
jne
sbbl
lea
xorl
push
push
orl
call
movl
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
xor
mov
sub
add
movl
mov
mov
sub
or
mov
push
mov
movzbl
add
xor
mov
xorl
push
sbbl
mov
add
cmp
movl
je
mov
and
mov
addl
xor
xorl
xor
sbbl
add
adcl
add
adc
movl
xor
sbbl
mov
incl
push
xor
xor
neg
xor
andl
mov
inc
mov
cmpl
jg
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
movl
orl
mov
xor
add
mov
sub
sub
movsbl
mov
sub
movzbl
or
mov
andl
xor
cmp
movl
jne
xor
xor
xor
mov
movl
push
mov
adc
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
push
sub
mov
andl
mov
movl
and
push
mov
or
mov
add
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
mov
out
add
add
add
add
xor
add
nop
push
add
nop
inc
add
add
add
push
push
inc
push
pop
dec
fmulp
cmpsb
lret
mov
mov
ljmp
pop
push
imul
inc
imul
inc
js
arpl
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
inc
inc
mov
cmp
jb
xor
lea
movzbl
xor
inc
inc
mov
cmp
jb
xor
lea
movzbl
xor
inc
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
inc
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
lods
outsb
lods
repz
xchg
testb
xor
xchg
lea
imul
fwait
or
fwait
or
mov
lea
xchg
lea
xchg
fwait
cltd
mov
test
xor
mov
xchg
mov
lea
push
push
cmpsb
jb
push
notl
mov
test
cmpsb
test
push
push
mov
ret
add
jmp
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
inc
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
dec
xor
cmp
je
push
push
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
dec
xor
cmp
jne
mov
pop
pop
cmp
je
xor
xor
mov
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
inc
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
inc
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
