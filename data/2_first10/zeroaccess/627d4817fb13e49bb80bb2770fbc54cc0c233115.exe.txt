add
add
adc
add
add
add
cmp
add
add
add
add
in
sub
movl
mov
adc
mov
movl
xor
mov
push
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
pushl
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
xor
xorl
mov
notl
jmp
dec
dec
xor
fcoms
jp
testl
jl
jl
mov
xor
xor
ja
or
testb
cmp
lret
sbb
mov
or
rol
or
sbb
out
outsl
add
mov
mov
je
fisttpl
jecxz
and
aam
dec
incl
mov
loope
pop
sub
jae
lret
cwtl
sub
mov
loopne
cmp
sub
or
sbb
outsl
insl
jb
cmp
jns
cmp
add
movsb
add
rol
add
jge
mov
daa
sbb
addr16
loop
xchg
int3
test
mov
push
cmpsb
pop
adc
mov
lret
adcl
mov
xorl
mov
adcl
jmp
inc
in
xor
inc
in
xchg
jl
jl
jl
jl
mov
std
or
rcl
dec
nop
dec
lea
xchg
mov
mov
ret
mov
cs
ljmp
cmp
add
scas
pop
in
mov
out
or
sti
dec
rcl
aaa
push
cmpsb
jge
push
mov
pop
in
xor
sbb
mov
shlb
jb
insl
sub
js
sbb
movsb
cmp
enter
add
fldenv
lahf
jmp
in
mov
pushf
jno
dec
xor
and
mov
xor
jecxz
xchg
aas
push
mov
xchg
and
cmp
push
mov
arpl
sbb
xor
test
movl
je
and
mov
and
jmp
xchg
or
mov
dec
popa
enter
sti
lods
call
jl
jl
mov
add
mov
stos
jo
jbe
inc
ret
iret
cmpsl
in
mov
push
cmp
jl
sub
and
mov
xor
test
lcall
inc
aaa
or
push
leave
pop
in
hlt
cmp
lds
mov
stos
scas
sub
cmp
in
in
xor
shlb
add
or
sub
imul
push
gs
aaa
mov
fcompl
loopne
jecxz
pop
cli
cli
popa
hlt
push
inc
jge
xor
stc
jae
fwait
std
xor
push
sub
sbb
stos
push
repz
push
cld
lock
or
mov
xchg
lds
dec
mov
xor
mov
sub
mov
sbb
imul
andl
mov
movl
cmpl
je
cmpl
jne
pushl
call
xor
or
dec
mov
jmp
xor
add
inc
mov
add
mov
subl
xchg
xor
sub
or
xor
mov
movzwl
xor
mov
or
mov
mov
xor
jmp
ficoms
loop
sbb
movsb
out
jae
ficomps
push
jle
jl
jl
jl
outsl
fptan
fwait
stos
shll
rcrb
into
addr16
imull
mov
xchg
lock
lods
rcrl
out
or
adc
lcall
jl
lea
jnp
or
and
scas
add
xchg
test
scas
mov
fidivl
dec
ret
and
push
ret
cli
arpl
xor
push
add
je
xchg
and
fidivl
adc
popw
js
sbb
ja
outsl
fdiv
pop
cmp
sub
out
lds
mov
adc
out
xchg
xrelease
jle
cltd
clc
mov
jmp
add
repz
lods
addr16
jge
stc
icebp
sahf
dec
xor
jl
jl
jl
test
rcrl
pusha
jp
lcall
hlt
sub
fsubrs
repnz
rorl
xor
and
xor
pop
aam
cmp
rorl
fildll
lret
test
filds
jns
jns
scas
in
add
aaa
sbb
loop,pn
lret
repnz
and
push
notb
xor
insl
push
addr16
test
mov
xchg
in
mov
pop
add
movsb
scas
mov
push
stos
or
inc
jbe
xchg
ret
cmp
ljmp
push
popf
ret
in
push
cmp
sti
xor
jmp
lea
lea
ficompl
btsl
xchg
daa
outsb
mov
sbbl
xor
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
mov
mov
mov
movl
je
mov
xorl
xor
jmp
in
iret
lcall
mov
push
mov
jl
jl
jl
aad
cmp
push
pop
pop
and
int
scas
cmpsl
popa
mov
faddl
test
and
fbld
aas
loope
pop
out
test
dec
imul
stos
aam
insl
roll
jge
lock
or
cli
mov
fldlg2
push
bound
clc
scas
inc
and
ficompl
pop
negb
add
pop
xchg
popf
inc
pop
cmpsb
add
jle
das
pop
imul
push
cld
sbb
mov
movsl
and
paddusw
jmp
scas
out
xchg
dec
xchg
add
xchg
xchg
jno
push
jno,pn
addr16
enter
pop
mov
movl
cmp
movl
jne
pushl
addl
call
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
jmp
fdivr
ljmp
into
outsl
inc
or
jo
jl
jl
jl
mov
mov
insb
inc
lock
jl
addr16
sub
jno
aas
mov
push
push
scas
cmp
rol
pushf
mov
jle
call
in
fsubl
les
add
inc
imul
repz
jns
sub
mov
ss
push
mov
iret
aaa
nop
sub
out
lcall
cwtl
pop
sbb
arpl
ret
inc
rcr
test
sbb
xchg
mov
cwtl
adc
mov
adc
pop
stc
jge
in
inc
sbb
test
jg
test
mov
mov
fwait
inc
xchg
sbb
inc
imul
mov
xor
mov
adc
mov
xor
adcl
add
movl
cmp
movl
je
subl
pushl
jmp
js
dec
mov
jnp
hlt
push
cmpsb
imul
lods
out
jo
jl
jl
jl
push
cmp
fstps
adc
mov
dec
xchg
xlat
das
jns
pop
xchg
icebp
or
sti
mov
sarb
fwait
mov
dec
aas
ret
aad
scas
sub
std
fwait
inc
pop
sub
fisubl
imul
call
mov
adc
in
dec
pop
mov
xchg
movsb
fisttps
repnz
push
clc
je
xor
mov
out
mov
sbb
and
fmuls
dec
xor
jge
cmp
mov
out
xchg
aad
cli
xchg
enter
adc
das
jae
xor
adc
pushl
call
jmp
cld
mov
mov
dec
mov
aad
push
bound
mov
inc
enter
sbb
push
xchg
pusha
mov
push
out
xor
into
dec
push
ficompl
pop
in
adc
push
mov
nop
out
aad
or
inc
jecxz
out
push
dec
hlt
xor
inc
sahf
mov
mov
sub
cld
sbb
fldpi
ds
add
or
mov
ds
gs
repnz
push
enter
aam
repnz
sarb
xchg
dec
in
clc
jmp
cmpsb
fcmove
sahf
scas
mov
pop
rolb
icebp
popl
hlt
shll
cmp
stos
ja
mov
mov
sub
in
mov
in
mov
add
mov
xor
add
movl
cmp
movl
je
mov
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
subl
jmp
inc
adc
jns
lret
push
insb
jno
leave
inc
in
jb
jl
jl
jl
sbb
and
pop
arpl
ficomps
xor
fstps
addr16
pop
dec
out
daa
pop
and
add
push
adc
cltd
mov
and
mov
sub
jmp
xor
push
mov
cltd
nop
cmp
sub
int
cmp
push
sti
lds
or
fadds
ret
fnsave
xchg
jno
xchg
pop
std
fadds
hlt
mov
push
jmp
xor
pop
addr16
push
xchg
fbld
fwait
push
outsb
xchg
dec
sbb
jmp
icebp
je
push
or
ljmp
sub
inc
lods
gs
mov
mov
popa
or
rolb
loopne
loope
push
in
mov
andl
add
movzbl
and
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
notl
add
xorl
mov
jmp
cmp
mov
cmp
mov
jl
mov
fstpt
mov
mov
aas
cld
pushf
sbb
cmp
add
inc
lods
add
sub
fisttps
xor
cmpsb
xorb
mov
call
xchg
std
je
ss
scas
add
inc
and
or
test
cli
mov
sahf
int3
jns
fcomps
cld
xchg
hlt
sbb
sbb
and
fldl
inc
aaa
push
jnp
mov
mov
adc
js
jg
dec
and
and
lods
in
cmc
repnz
ret
daa
pop
pop
lcall
sub
js
push
sub
cmp
fisttps
pop
pop
inc
add
add
add
add
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
xor
mov
jmp
xor
mov
sub
mov
jne
jl
jl
jl
pop
xor
insl
in
nop
fisttps
push
push
insb
fwait
shll
inc
fs
push
mov
add
imul
lret
outsb
cmpsl
pusha
sub
add
jo
pop
xbegin
pop
call
mov
mov
fbstp
je
adc
xchg
push
in
daa
cmpsl
test
mov
pop
div
inc
mov
add
int3
push
call
aam
adc
out
ds
xchg
push
jno
test
out
inc
mov
xorb
jp
fnstenv
sub
xor
sbb
and
sub
loope
xor
icebp
mov
and
mov
add
lea
mov
push
pushl
jmp
pop
jecxz
xchg
mov
jb
daa
cmpb
in
je
jl
jl
jl
fistl
xchg
sub
mov
mov
and
into
leave
aas
es
mov
pop
jg
lods
jo
sub
or
cmpsb
bound
mov
ds
mov
mov
mov
pusha
lods
int
xchg
sub
cmpsb
push
ret
inc
les
mov
shlb
cltd
add
nop
sub
xchg
dec
aad
aas
add
aad
shlb
jbe
adc
imul
inc
xor
sti
xor
xor
mov
es
add
sahf
fwait
mov
sbb
insb
inc
add
bnd
lods
jl
jne
jmp
or
mov
mov
push
int3
xchg
xchg
int
ret
cmpsl
test
ja
jl
jl
jl
jb
push
test
jae
push
sahf
sahf
loopne
lret
adc
or
push
jb
in
dec
adc
mov
orl
sub
mov
popf
lcall
stos
cmp
fbstp
dec
dec
push
xchg
fsubrl
push
or
out
std
fs
mov
jle
inc
mov
add
lock
add
pop
or
or
pop
fcompl
pop
lock
xor
cwtl
repz
inc
mov
pop
mov
xchg
jg
mov
fstl
mov
mov
in
imul
and
icebp
adc
push
iret
lods
ficoml
pop
adc
add
mov
mov
xor
add
cmp
jne
jmp
dec
xchg
pop
add
arpl
adc
lcall
jl
mov
cwtl
add
sbb
push
mov
sub
clc
ss
push
mov
fnsave
pop
jnp
cmp
push
cs
cwtl
xlat
and
in
mov
adc
out
sti
fprem1
dec
cmp
pop
xor
iret
es
in
and
lock
in
sbb
cmp
or
stos
pusha
push
sahf
cmpl
cli
leave
stos
popf
shr
xor
imul
mov
cwtl
into
push
and
std
lret
xchg
push
mov
sub
fidivrs
stc
add
adc
cmp
dec
in
jb
repz
in
xchg
pop
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
jmp
lods
adc
ljmp
cmpsl
lods
xchg
jbe
jl
jl
jl
enter
or
outsb
aaa
inc
and
and
js
movsb
pushf
sbb
or
jp
pop
cltd
hlt
fidivrl
mov
and
out
movsb
in
and
push
cmp
aad
insl
lahf
in
sub
fdivr
nop
lcall
addb
pop
ror
jg
cmp
out
popf
push
mov
icebp
mov
cwtl
insl
push
sub
stc
cli
and
pop
mov
mov
scas
inc
and
dec
std
stos
or
push
shrl
test
pop
shlb
dec
add
push
mov
adc
inc
leave
dec
cli
mov
mov
mov
jmp
xchg
sub
cltd
cmp
mov
pop
jno
fmull
jl
mov
out
and
into
add
add
mov
mov
sbb
ljmp
xor
ret
test
add
cltd
push
test
mov
jbe
xor
test
rcrb
ds
popa
sbb
or
outsb
shlb
and
imul
xchg
pop
add
push
or
aad
lcall
mov
outsl
scas
scas
xchg
stos
add
pop
test
cmp
jne
mov
sbb
cli
jbe
ljmp
mov
pop
pop
xor
popa
rcrl
push
stc
aad
test
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
jmp
cmp
cli
test
insb
mov
jl
mov
mov
mov
xor
outsl
repnz
enter
pop
push
and
and
imul
adc
add
orb
ljmp
xchg
jne
int
popa
push
seto
sub
imul
dec
aas
mov
shll
mov
jge
nop
jb,pn
stc
call
or
rcl
push
and
into
cli
xchg
mov
inc
jae
sbb
arpl
pop
call
popf
or
in
cs
dec
insb
faddl
int3
mov
shrb
fsubl
ljmp
outsl
loop
and
loope
inc
or
add
inc
call
mov
jmp
and
rep
lods
sti
pop
xorl
push
in
or
jl
jl
pop
imul
adc
adc
daa
test
rcll
xchg
je
mov
adc
stos
movsl
xchg
js
gs
add
sub
nop
adc
dec
mov
mov
aam
xchg
xchg
jae
push
pusha
aad
jmp
stos
inc
js
jne
pop
sar
in
inc
mov
mull
mov
jno
mov
sahf
outsl
pop
in
sub
and
dec
loope
cmp
mov
imul
rclb
dec
imul
dec
jno
lret
mulb
cmc
clc
dec
mov
add
jno
arpl
scas
add
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
jmp
xlat
pop
cmp
pop
insl
jnp
sbb
mov
repz
sar
or
jl
jl
cltd
adc
mov
lds
icebp
gs
lahf
jno
rcl
jle
cs
loop
ds
sahf
lods
out
pop
orb
test
push
loop
out
jbe
inc
jp
cmp
test
cmp
push
sbb
clc
mov
add
adc
btc
and
cmp
sti
mov
and
pop
ljmp
stos
mov
pusha
fstpt
jns
aaa
cmp
lret
cmpsb
jnp
dec
lret
jns
xor
adc
mov
fcoms
add
inc
in
iret
jmp
jl
ret
loope
aad
mov
jmp
mov
mov
xor
jmp
fsub
mov
clc
mov
nop
ljmp
jl
jl
ret
fildll
lcall
cmp
iret
insl
out
xchg
pop
imul
mov
inc
cwtl
or
jecxz
sbb
add
repnz
test
movb
ljmp
fsubrl
aam
add
pop
and
xchg
sub
add
mov
fcom
pop
repnz
aas
aas
add
xlat
push
jle
out
lret
test
and
js
gs
pop
push
jmp
rorb
sub
xor
dec
pop
or
mov
arpl
les
stos
leave
popa
add
mov
jmp
pop
fimuls
cltd
push
mov
pop
mov
or
jl
jl
gs
inc
shl
pop
and
hlt
inc
ja
arpl
and
fldl
addps
lds
mov
and
pop
or
jbe
jb
push
mov
aam
jecxz
je
mov
adc
sbb
ljmp
push
xchg
or
sbb
pop
movsb
into
inc
and
sub
imul
xor
je
or
mov
inc
push
aam
arpl
or
div
stos
xchg
shll
jo
outsl
in
aam
scas
xor
add
mov
and
xlat
sub
nop
lret
xor
xor
lea
add
call
xor
inc
cmp
jmp
jmp
inc
insb
jns
jmp
loope
pushf
sbb
mov
jl
jl
jl
lcall
fbstp
dec
inc
jl
in
rol
jne
xor
mov
mov
ds
cmpsb
cltd
jbe
mov
stos
xor
mov
sub
inc
aas
xor
or
fsub
pop
fisttpll
xchg
push
arpl
pop
ret
jnp
cmp
ud1
stos
mov
inc
dec
int3
mov
cmp
out
xchg
dec
fbstp
lea
mov
stc
jo
push
jo
in
leave
pop
xor
loope
dec
outsb
push
xor
jbe
scas
dec
daa
repnz
mov
out
jo
jp
sbb
faddp
mov
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
jmp
jns
inc
ds
mov
cmp
mov
or
jl
jl
jl
or
mov
xchg
cwtl
mov
pop
sub
leave
dec
pusha
movsl
fsubrp
mov
inc
sub
mov
rcl
insb
lods
dec
and
inc
adc
and
mov
and
adc
stos
pop
cli
push
xchg
xchg
cld
orl
jnp
sub
mov
test
popf
xchg
mov
pusha
mov
insb
lcall
cld
xchg
iret
in
jae
add
jnp
lods
cli
fidivrl
jb
mov
or
push
sub
inc
sti
or
or
out
mov
mov
jbe
out
in
and
hlt
ljmp
add
jmp
in
test
sti
mov
ret
aam
jl
jl
jl
adc
pusha
mov
push
mov
sub
hlt
std
cmp
fisubs
and
jle
popf
imul
push
out
xchg
arpl
idivl
mov
clc
or
scas
mov
xchg
imul
ret
pushf
loop
mov
mov
ss
leave
into
sub
cli
jecxz
add
add
shrl
push
or
cmp
xor
adc
sbb
lret
add
out
sarl
ja
loope
bswap
and
or
mov
lods
cwtl
xchg
cmc
or
adc
test
dec
xor
add
jmp
dec
jge
cmpb
jge
push
loope
inc
add
mov
jl
mov
int3
sub
pop
incl
pop
xchg
call
or
mov
pop
test
cmp
jns
pop
pop
mov
mov
jb
mov
in
rclb
mov
lea
jmp
sub
lods
add
dec
loope
xchg
and
push
jne
fmull
mulps
and
inc
sub
add
xor
aad
fstl
jp
jge
push
cs
or
inc
leave
fwait
out
and
cwtl
cmc
cwtl
mov
xchg
sbb
incl
sbb
nop
mov
daa
loop
ds
or
xor
loop
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
push
push
call
mov
dec
mov
jmp
mov
movl
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
jmp
sbb
insl
std
pop
mov
xor
dec
clc
push
jl
into
jg
jl
je
dec
pop
dec
mov
xor
and
imul
or
fucomip
add
es
stos
mov
leave
or
mov
xlat
into
pop
or
xchg
in
sub
mov
cmc
outsl
inc
test
fwait
scas
pop
sbb
pop
ljmp
scas
cmpsl
mov
add
test
movsl
bound
pop
icebp
xor
mov
cmp
add
insb
push
push
mov
dec
adc
into
mov
cmc
test
xor
adc
inc
pusha
pop
ret
jnp
call
div
mov
add
xor
jbe
hlt
cmpsl
push
stos
scas
push
insl
cmp
pop
push
rcrl
mov
lahf
or
xchg
loop
cmp
test
mov
jb
aad
xorb
arpl
jbe
iret
lods
loop
fs
xchg
adcl
pop
andl
push
fwait
and
test
repnz
dec
or
inc
repz
pop
jnp
push
cmpsl
ds
call
and
mov
mov
adc
xor
imul
pop
adc
nop
adc
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
jmp
jp
pop
cmp
jge
mov
push
ret
add
je
add
jg
jl
shrb
lds
test
or
adc
stos
stos
ja
sbb
iret
cmp
lahf
sarb
imul
sti
popf
dec
sbb
mov
orb
lret
loop
xchg
push
pop
in
adc
loopne
mov
push
out
fidivrs
push
imul
or
sub
dec
lahf
fcmovbe
sbbl
and
test
out
dec
xchg
push
or
fwait
add
pop
xchg
sbb
jg
and
pop
test
out
xchg
jmp
in
fwait
mov
fnstsw
mov
mov
pop
test
pop
push
sbb
iret
int3
into
adc
mov
xchg
mov
adc
in
jnp
ds
push
shld
dec
out
inc
sbb
and
mov
add
sbb
daa
push
fs
dec
sub
cmpsl
jbe
push
sub
mov
mov
inc
mov
aad
mov
sti
xchg
testl
nop
jge
cmc
inc
mov
and
sbb
mov
fbld
push
mov
jge
scas
mov
mov
mov
jbe
inc
xchg
cmp
jbe
pop
mov
jmp
jno
in
cli
insl
cmpl
rcll
sbb
jl
into
jg
jl
icebp
xchg
imul
push
mov
daa
nop
sbb
mov
aam
mov
and
outsb
leave
cltd
cmp
std
push
xchg
dec
and
iret
cli
test
inc
hlt
fwait
ret
std
pop
or
adcb
mov
loop
addl
lods
test
adc
pop
movsb
loop
inc
lahf
mov
aad
out
sub
jl
ss
cs
mov
push
xchg
add
jge
sub
jecxz
xchg
ljmp
and
dec
repz
pop
aad
daa
fsubr
mov
or
push
dec
icebp
cmp
les
stos
xchg
movsl
mov
cmc
dec
out
cli
popa
jecxz
dec
push
xchg
or
mov
adc
popa
mov
dec
mov
mov
pop
ljmp
jmp
xlat
out
sti
xchg
scas
jmp
mov
xchg
lea
jcxz
pusha
pop
pop
rolb
add
mov
scas
nop
pop
imul
stc
mov
xlat
sub
outsl
movhps
icebp
mov
adc
inc
jmp
decb
jge
ja
sar
inc
nop
movsb
fimuls
mov
xchg
push
jmp
push
mov
out
push
cmp
xorl
add
in
mov
add
mov
movzwl
or
sub
mov
or
mov
andl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
pushl
call
jmp
mov
addl
xor
cmp
je
mov
xorl
jmp
rolb
loopne
dec
push
mov
xor
call
hlt
jl
jl
add
mov
xchg
fwait
jle
fdivl
ss
jns
push
pop
adc
jns
out
pop
fwait
daa
sbb
int3
mov
cmp
xor
dec
loopne
bound
sbb
mov
mov
mov
getsec
dec
repz
lcall
imul
push
js
jp
leave
pop
sub
mov
or
lock
pop
pop
enter
xchg
sbb
js
cmp
jmp
sahf
and
cwtl
inc
js
cmp
fucomp
fwait
sti
cli
and
add
jl
jl
es
insl
dec
mov
jno
inc
movsb
or
pop
mov
dec
jno
scas
repnz
cli
rcl
mov
add
stc
lahf
lahf
fsubl
push
pushf
nop
inc
mov
dec
aaa
lcall
jg
dec
mov
stos
mov
hlt
push
jg
push
sbb
inc
sub
in
xchg
inc
xor
push
mov
mov
fcoml
xchg
push
sub
pop
cmc
fs
add
dec
xor
cmp
jne
mov
add
jmp
mov
xor
jmp
ficomps
mov
adc
xchg
add
jl
mov
fs
in
dec
sub
out
scas
adc
in
inc
rorb
dec
mov
movsl
into
pop
jl
sub
cmpsb
imul
adc
subb
jle
adc
sub
notl
ja
aam
cld
loopne
cmc
ret
mov
shrl
scas
popf
pop
jp
ror
dec
test
mov
nop
cmpb
dec
call
scas
adc
stc
mov
ds
and
repnz
jl
pop
js
ret
push
inc
add
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
push
mov
and
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
xorl
mov
movl
mov
xor
movl
xor
mov
and
jmp
loopne
enter
sti
in
cmp
jg
dec
jg
jbe
jl
xor
jl
sub
dec
mov
push
sub
jmp
jp
lds
and
or
sub
inc
ljmp
out
mov
je
push
jae
fdivrp
mov
int3
sub
js
mov
das
pop
dec
f2xm1
adc
jmp
xor
in
lea
ja
push
rclb
jle
orb
and
lret
les
fimull
cmp
xchg
es
sub
or
jge
inc
ja
in
jno
sub
call
jae
xor
stos
mov
out
lds
pop
sarl
xor
jmp
test
icebp
sbb
mov
cmp
in
pop
push
sub
hlt
mov
sbb
cli
xchg
mov
xorb
fsubr
pop
dec
add
sbbl
mov
call
test
lds
sbb
aam
cmp
popf
lds
push
mov
or
and
insl
gs
mov
sbb
cltd
mov
mov
sub
xchg
dec
stos
das
in
repnz
aad
scas
cwtl
xchg
es
mov
dec
addr16
mov
fisttps
mov
lods
mov
cmp
inc
sarb
sarb
add
adc
mov
mov
mov
sub
xor
mov
xor
not
add
add
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
adc
movl
adc
movl
movl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
or
movl
movl
movl
or
mov
movl
xor
or
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movl
mov
orl
jmp
std
xor
mov
add
test
cmp
mov
into
pop
jl
xor
jl
mov
shrl
or
dec
push
ret
adc
sub
lea
xor
loop
push
int
jo
adc
ret
sbb
xor
mov
inc
mov
fwait
jecxz
mov
xor
xor
mov
loopne
xchg
testl
fisubrl
fst
pop
push
jge
out
add
dec
fwait
xchg
sbb
cmp
mov
lods
test
rorb
lea
jo
aaa
pop
jns
mov
sub
lea
cltd
mov
fisttps
aaa
adc
jno
xchg
jnp
ljmp
das
pusha
cwtl
mov
inc
iret
insb
jb
test
stc
sbb
xor
fadd
jmp
mov
lahf
jp
dec
mov
adc
xchg
mov
or
inc
sub
jecxz
xor
inc
lods
jne,pt
cmc
or
push
test
addb
xor
mov
pop
mov
lods
cmp
adc
dec
sbb
mov
push
xor
andb
lret
mov
xchg
hlt
sbbl
adcl
mov
xorl
xor
xorl
add
movl
cmp
movl
jb
xor
mov
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
call
jmp
xor
mov
mov
sbb
add
jmp
jno
movsl
imul
pop
clc
push
out
jp
push
jl
xor
jl
mov
lea
push
dec
ss
andl
xchg
cmp
cmp
pop
mov
sbb
mov
jecxz
sub
sbb
and
jmp
jmp
fmulp
test
mov
sbb
xor
or
and
ds
sbb
xor
fsubrs
sbb
dec
andb
pop
int3
xchg
dec
mov
sbb
jae
pop
sub
les
push
jo
cmp
aad
push
rclb
in
lock
jnp
xchg
sub
jb
sti
and
push
pop
es
add
xor
or
or
mov
sahf
fs
or
outsl
lods
imul
fstpt
sbb
sbb
mov
mov
inc
movb
push
ficompl
les
xor
lret
mov
jge
lcall
push
lahf
into
loop
xor
pop
fcomps
mov
jbe
jae
xchg
loopne
cmp
adc
mov
out
jp
test
popf
push
cmp
movb
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
add
imul
mov
mov
sbbl
sub
cmp
ja
add
mov
xor
notl
add
movl
jmp
movzwl
or
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
jmp
dec
xchg
call
sub
adc
repnz
mov
jl
xor
jl
and
xchg
cmpsl
cwtl
mov
jg
push
insb
add
and
cmp
inc
cmp
push
lock
push
pop
loop
cmp
aam
push
push
cld
iret
aam
jb
loop
mov
iret
xchg
pop
inc
out
int
sbb
xchg
adc
xchg
cwtl
iret
out
mov
outsl
insl
fldenv
sub
xchg
cmpsl
and
inc
insl
inc
iret
outsb
into
xchg
movsb
jb
addb
inc
jmp
aam
add
dec
js
push
ss
sub
pop
sbb
idivb
and
test
shll
ja
andb
sahf
jae
and
sbb
mov
sub
hlt
outsl
mov
mov
adc
jae
stc
daa
mov
daa
test
sbb
std
cmp
mov
and
outsl
lret
movsb
sbb
cmp
xchg
and
lret
sbb
insb
repz
push
lock
jmp
lret
inc
dec
arpl
sbb
pop
lods
sbb
arpl
xor
jne
dec
lret
stos
subb
mov
rcll
or
jae
xor
and
lea
shlb
clc
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
jmp
sbb
cs
mov
cmovae
add
sbb
jg
jl
and
mov
push
pop
jl
push
mov
mov
and
lahf
jo
push
in
adc
xchg
call
out
push
test
jns
lods
mov
pop
iret
sub
inc
mov
mov
push
push
pop
int3
mov
xlat
stos
mov
ljmp
adcl
mov
xor
mov
sbb
in
jbe
loop
inc
cmp
add
stos
pop
mov
in
cmpsb
fwait
and
je,pn
movsl
ror
repz
test
lea
inc
leave
or
push
arpl
les
pop
push
pop
xor
push
pop
cmp
mov
pop
mov
daa
loope
dec
or
or
cmpsb
fistps
mov
out
std
push
jns
imul
les
in
lods
mov
push
adc
js
jmp
dec
inc
and
jb
inc
push
mov
push
imul
xor
push
inc
mov
jnp
fisttpl
cmpsb
push
daa
add
push
mov
std
out
call
loopne
aad
and
pop
sub
pop
in
pop
iret
and
es
xchg
add
add
add
add
cld
xor
xor
jmp
dec
inc
fdivr
fidivrl
gs
shr
movsb
push
jl
xor
jl
lds
cld
inc
aad
unpckhps
test
lret
mov
das
or
cltd
clc
xchg
dec
mov
icebp
sub
scas
push
jl
add
les
mov
dec
mov
mov
lods
es
lcall
faddl
inc
or
loope
scas
fsubl
mov
hlt
adc
mov
insb
mov
je,pt
mov
mov
push
add
arpl
fildl
xchg
xchg
decb
add
into
or
das
das
or
je
cmpsl
or
pop
incl
outsl
in
jae
fmuls
ret
std
fs
arpl
sbb
or
les
sub
ds
test
testb
xchg
gs
fs
je
push
mov
clc
jmp
inc
into
cmpsb
mov
mov
mov
xor
or
and
cmp
xchg
loopne
mov
les
aam
cld
leave
jae
scas
mov
sahf
jno
outsb
gs
sbb
lods
mov
push
out
dec
scas
frstor
scas
sub
test
mov
rorl
scas
xlat
mov
jmp
fwait
bound
pushf
stc
insl
fwait
jge
les
jg
jl
xor
jl
fs
and
push
pop
push
cltd
lret
test
mov
add
pusha
push
fbld
xchg
cmp
jl
out
inc
inc
sbb
pushf
pop
lea
ljmp
outsb
movsl
js
ds
pop
outsb
sub
cmovo
mov
push
call
lock
shll
les
rorb
fidivs
insb
scas
jne
dec
or
cmp
xchg
push
enter
xor
dec
lret
bound
mov
and
imul
rcrl
adc
fcmovbe
add
pop
mov
jecxz
cmp
pop
mov
mov
into
je
push
stos
fisttpl
nop
sbb
sbbl
mov
jmp
ret
dec
pop
jp
sarb
out
xor
movw
popf
adc
sbb
aas
pushf
stos
jl
cmp
ds
aaa
out
mov
mov
or
or
aad
adc
nop
fiaddl
mov
pop
xor
sbb
xchg
or
pop
jecxz
cmpsl
push
xchg
mov
inc
fstpt
imul
lods
add
ror
mov
mov
jmp
psraw
out
frstor
push
xor
jl
and
jle
xlat
jno
jb
xchg
xadd
addb
stos
push
add
push
hlt
incl
adc
or
dec
pop
jne
xchg
cmpsl
in
adc
inc
iret
fdivrp
mov
cmp
imul
popf
and
cmp
jns
mov
out
bound
das
ss
mov
inc
sub
cwtl
and
call
adc
push
jmp
cmc
ret
lret
test
jns
les
fisttps
push
sub
jmp
stos
mov
sbb
sti
inc
fisttpl
mov
pop
push
and
lret
jno
pop
xor
test
pushf
sub
mov
movsl
sbb
and
arpl
mov
fs
mov
arpl
pop
rcl
xor
inc
dec
jmp
and
mov
clc
jle
jne
stc
ds
mov
jl
xlat
jp
xor
shl
dec
insl
mov
rclb
jp
cmp
mov
mov
dec
mov
jnp
pushf
popa
gs
shlb
imul
loop
jnp
loope
xor
jge
push
movsl
sbb
jg
ja
xchg
and
mov
push
sbb
sbb
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
jmp
mov
dec
stos
lcall
ss
jl
xor
jl
inc
shl
mov
pop
mov
pop
mov
jae
hlt
or
xchg
into
xchg
shll
xor
js
sub
mov
cmc
push
rcrl
fists
cmp
stos
or
mov
push
leave
sbb
and
inc
xchg
lea
outsb
daa
mov
mov
dec
and
dec
push
sbb
movsl
je
mov
cmpsb
mov
mov
adcb
lcall
inc
das
hlt
dec
test
xchg
cmc
adc
jnp
sub
cmp
add
inc
xor
or
push
enter
lret
add
push
inc
notl
sub
ja
xchg
push
pusha
pop
inc
popf
add
adc
dec
aad
mov
jo
cmc
mov
add
jp
dec
sbbb
pop
int
and
dec
inc
sahf
ud1
xchg
clc
push
mov
popa
mov
sbb
inc
mov
xchg
icebp
hlt
sbb
dec
jge
pop
xor
fxch
or
lods
inc
cmp
push
clc
out
mov
push
divl
repz
jnp
scas
xlat
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
jmp
int
mov
mov
push
inc
add
xor
jl
mov
jno
sti
fsubl
pop
repz
jns
mov
jge
xor
dec
fsubrs
movsl
ror
push
push
fcompl
add
pop
adc
test
inc
mov
or
inc
negb
sbb
hlt
sbb
pop
dec
aam
or
test
loop
rcrb
jne
cs
pushf
imul
jl
xchg
dec
idivl
inc
add
push
xchg
push
loop
xchg
jp
push
fdivs
jecxz
xor
scas
mov
gs
daa
loop
add
dec
xchg
outsl
lcall
aaa
sub
gs
mov
fnstenv
icebp
int3
ret
fs
xor
mov
xor
sbb
and
push
inc
inc
jb
adc
mov
cmp
or
ffree
dec
cld
jnp
decl
daa
mov
je
in
sbb
sbb
orl
mulb
loopne
or
fsubl
inc
and
into
push
ja
ret
pusha
sbb
stc
in
mov
ss
sbb
outsl
push
mov
cmpb
mov
inc
int
test
push
lock
push
hlt
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
jmp
adc
iret
sbb
and
inc
adc
jg
jl
pop
jb
outsl
out
popf
fistps
mov
xor
es
cmpl
mov
or
gs
add
ds
jg
push
inc
adc
inc
aas
aaa
andb
mov
and
clc
mov
cwtl
pop
in
push
xor
mov
loope
mov
xchg
dec
popa
add
aad
dec
add
push
jae
loop
and
xor
jno
outsb
js
or
dec
aad
cmp
cwtl
out
inc
add
and
lods
xchg
sub
mov
roll
sbb
movsb
cmp
xor
loopne
and
adc
nop
cmpsb
stc
ret
pop
push
push
in
lea
inc
sbb
push
inc
repnz
sarl
repnz
fsub
pusha
push
push
cmp
sub
mov
aas
jnp
ss
nop
cld
stos
cltd
lods
cs
or
jnp
aam
inc
mov
popf
adc
pusha
repz
ret
cs
or
mov
jb
ret
xor
dec
das
hlt
jbe
loopne
xchg
inc
mov
lret
pop
add
cwtl
push
add
jne
jne
movsl
int3
rorl
call
in
mov
mov
mov
mov
xor
xor
add
add
imul
add
jmp
stos
outsb
cmp
fnstsw
lods
sbb
push
adc
jg
jl
bnd
aaa
je
ret
push
ja,pt
mov
adc
ljmp
aam
push
into
in
jecxz
scas
push
jno
push
inc
xlat
inc
stos
ds
or
mov
pop
incb
cmp
cld
sub
data16
popa
repnz
push
hlt
jb
repnz
or
shrb
stos
fistps
sub
maskmovq
divl
fdivrs
mov
outsl
lahf
xchg
sub
nop
fsubp
jecxz
loop
out
and
je
mov
pop
xchg
out
out
aas
shlb
jae
mov
lret
sti
jecxz
or
dec
stos
mov
xchg
lret
jmp
notb
shl
xlat
xchg
jmp
ljmp
loopne
dec
or
fists
aad
mov
js
mov
shlb
fimull
divl
mov
pop
sub
or
mov
jmp
mov
jge
ja
decl
sub
cmp
stos
push
lahf
lcall
adc
jle
shrl
mov
mov
inc
ficoms
dec
mov
push
cltd
cmp
test
stc
dec
or
jnp
dec
ret
mov
mov
mov
jmp
or
push
cmp
dec
shrl
fs
adc
jl
or
fs
and
iret
repnz
xor
addr16
hlt
inc
aas
scas
xor
je
adc
cmp
jb
jno
lea
das
push
nop
fs
xchg
or
jns
out
mov
mov
fucomi
cmpsb
mov
ret
xor
sub
ret
jg
lods
lahf
mov
and
pop
or
push
iret
hlt
inc
jno
adc
int
push
xor
add
leave
sbbb
sti
sahf
xchg
shl
add
or
movsb
sbb
jmp
pop
push
ret
imul
jge
and
push
sar
inc
aas
cmp
testl
xor
xchg
cli
mov
push
sub
test
mov
xchg
pop
inc
xorb
dec
addr16
into
out
jp
fwait
mov
xor
or
dec
jge
aas
xchg
into
in
adc
xor
dec
add
in
cmpb
mov
add
ficomps
outsl
sbbl
inc
jmp
jb
mov
push
adc
or
or
scas
ss
loop
push
cmp
pushf
addr16
fwait
lods
add
rorl
scas
xlat
mov
xor
sub
mov
mov
jmp
push
pop
inc
cmpl
jb
or
leave
sbb
jg
jl
sbb
hlt
enter
sbb
or
scas
lahf
dec
cltd
push
loop
add
clc
iret
jbe
test
inc
jnp
shlb
imul
out
shlb
jb
jle
fildll
xor
pushf
jmp
lcall
in
scas
push
lds
movsl
lcall
popf
fstp
insl
mov
pop
pop
mov
sub
in
stos
loop
jp
imul
cmp
sbb
pushf
ret
pop
test
iret
adc
rcl
fstp
mov
int
adc
sub
jnp
add
sub
jbe
mov
pop
adc
or
xlat
insb
iret
test
sub
xor
jmp
sub
xchg
shll
xchg
fst
pop
or
insl
cld
aaa
cmpsl
mov
push
test
leave
sbb
ret
lret
div
add
or
mov
jns
mov
testl
outsl
in
xor
clc
fisubl
adc
cmpsb
int3
lahf
test
pop
push
xchg
xlat
pop
pushf
sbb
xor
adc
adc
add
ret
sub
mov
pop
cmc
roll
data16
repnz
pusha
xchg
cmp
fsubs
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
jmp
jecxz
out
jge
sti
mov
pop
cmp
popw
jl
xor
jl
cmpsl
push
imul
test
pop
faddl
ret
adc
fidivrl
push
add
aas
sbb
adc
movsl
push
push
mov
jb
and
mov
es
in
fists
xor
sub
xchg
xchg
stos
adc
adc
int
mov
lahf
cmpsl
insl
in
sub
inc
push
aam
sub
xchg
mov
imul
cmp
mov
jp
sub
adc
or
cs
sbb
add
or
sar
ss
das
dec
outsb
add
xchg
lods
add
rclb
inc
jge
pushf
xor
divl
fiadds
loope
inc
pop
push
push
shll
fnsave
cmp
pop
jl
scas
jo
nop
pusha
loope
pop
ja
andb
fwait
cltd
add
jp
mov
push
jne
cmp
shll
int
mov
inc
xor
push
push
mov
lahf
mov
imull
jne
add
cmc
addr16
repz
push
popa
inc
scas
popf
adc
jns
shlb
mov
jge
scas
ficoml
sub
in
or
pop
xchg
xor
popa
in
cmpsl
push
xlat
or
ss
and
jecxz
add
mov
fimuls
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
adc
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
pushl
call
jmp
movzbl
adc
mov
adc
jmp
shrl
sti
insl
fs
push
clc
sub
jl
bound
idiv
sbb
push
pop
movsb
cld
pusha
and
sahf
add
mov
movsl
adc
cwtl
push
nop
in
outsl
push
movsb
push
cmp
andl
jmp
mov
repnz
scas
ja
cmp
push
insl
in
add
xor
in
jge
hlt
and
mov
cmp
fcmovbe
inc
xchg
jmp
lods
jge
or
inc
push
or
or
xlat
add
in
xor
sbb
test
sub
add
pop
sti
pop
cmc
cmpsb
ret
es
repz
jmp
mov
adcl
icebp
lcall
sub
jo
jp
pop
mov
mov
aas
xchg
or
repz
int
adc
jo
push
filds
mov
push
cmpsl
sti
insl
popf
dec
nop
xor
stc
imul
add
movhps
xchg
subb
cmp
mov
jmp
shl
xchg
fs
jns
adc
jne
stos
and
and
jl
bound
jns
cli
cvtss2sd
frstor
adc
and
or
repnz
xor
test
mov
sub
lret
rcrl
loopne
or
es
dec
xchg
jg
rclb
and
lret
lock
leave
inc
data16
loope
lret
pop
push
scas
mov
jne
je
inc
or
js
mov
push
pop
daa
das
push
jbe
call
repnz
cmovno
std
out
inc
jg
shrb
or
jge
cs
jecxz
in
pop
inc
sahf
dec
mov
js
xor
out
in
lock
lock
pop
rol
mov
shlb
add
test
or
cmp
pushf
sahf
ds
icebp
jl
cmp
pop
test
in
lcall
pusha
xchg
insl
fidivs
sub
outsb
cmp
pop
xorl
xor
add
subl
mov
mov
xor
push
addl
mov
mov
subl
add
xorl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
xor
mov
jmp
enter
inc
lea
mov
sub
iret
es
sub
jl
bound
ja
icebp
stos
mov
inc
test
push
gs
in
adc
dec
stos
pop
mov
mov
or
sahf
fcoml
cmp
not
rcrl
pusha
push
fildl
clc
out
mov
pop
aaa
call
arpl
ret
lahf
and
outsb
cmc
mov
xchg
into
dec
call
out
add
stos
add
enter
mov
mov
dec
sub
gs
inc
fwait
pop
jnp
stos
ljmp
ror
mov
clc
js
pop
dec
mov
and
sbbb
push
jmp
xor
jb
test
jg
sub
jne
inc
inc
cwtl
jo
scas
sub
add
enter
inc
loop
and
jecxz
stos
pop
fdivrs
rol
mov
adc
sbb
adc
cmc
fwait
pop
aas
div
mov
and
or
mov
pop
ret
push
mov
push
xor
xor
xor
or
sub
sub
movl
movzwl
adc
jmp
insl
je
xchg
jge
fs
mov
push
adc
jl
sbb
jl
and
jbe
test
insb
dec
inc
push
pop
arpl
adc
rorb
iret
movsb
push
iret
dec
fwait
js
and
lods
inc
xchg
fisubrs
mov
and
inc
adc
xor
sub
loopne
lret
xchg
insb
pop
add
popa
sub
or
movsb
mov
fisttpl
lahf
ficoml
aaa
cli
sub
iret
insb
jl
push
paddsb
add
jge
repz
addr16
dec
inc
push
aaa
js
cltd
mov
hlt
jl
inc
dec
in
scas
inc
sbbl
sbb
aam
xchg
in
pushf
xlat
lret
leave
cmp
addr16
cvtps2pi
imul
dec
in
mov
push
mov
dec
xchg
adc
xchg
or
sti
push
xchg
loope
sbb
into
xchg
or
dec
repz
dec
jns
mov
jb
into
adc
loopne,pn
dec
mov
rorl
cs
sbb
cmp
fisubl
popa
mov
repz
add
and
int3
push
xchg
xor
outsl
mov
cld
mov
or
mov
notl
jmp
xor
push
jp
fnstsw
mov
mov
sub
jl
packuswb
inc
aaa
mov
repnz
sub
cmp
test
dec
push
mov
aad
dec
sbb
or
mov
les
xchg
test
dec
imul
cmp
lcall
or
fcmovb
orl
ret
jp
aas
std
mov
pop
jae
jl
ss
jge
add
dec
fistpl
mov
xor
lret
outsb
in
pop
adc
xor
les
fwait
xchg
sbb
outsl
adc
aas
jo
mov
jae
add
xchg
in
bound
dec
jo
es
and
mov
ljmp
jne
in
cmovg
jne
lret
add
cmp
mov
sub
adc
icebp
sarb
pop
cld
or
je
aam
adc
adc
push
jnp
jmp
rcll
pop
mov
or
dec
xchg
cld
shlb
mov
dec
sub
andb
push
aaa
lcall
cld
es
jecxz,pt
or
lods
repz
add
orl
mov
neg
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
mov
mov
mov
mov
mov
mov
jmp
in
insl
push
jge
imul
mov
xor
sbb
jl
shlb
jnp
mov
sahf
sahf
xor
mov
cmp
mov
xchg
cmpl
push
mov
xor
fistpl
leave
mov
outsb
lods
fmulp
lock
notb
repnz
mov
mov
pop
hlt
outsb
adc
add
adc
sub
xchg
cmpl
xor
in
jne
sahf
mov
xor
leave
push
in
clc
push
add
and
mov
sbb
push
jae
sub
rcr
shlb
push
mov
push
out
mov
push
and
cmp
fxch
addr16
shl
jnp
setno
xorl
movsl
stos
frstor
mov
mov
aad
loopne
sti
jae
xchg
mov
or
orb
scas
jle
mov
inc
rorl
xchg
enter
js
or
xor
orl
or
lahf
test
cmp
or
inc
and
adc
test
jmp
pop
loope
sbb
lret
mov
sub
jl
sbb
jl
xchg
dec
shrb
cmp
inc
push
in
pop
fnstsw
jecxz
lea
push
xchg
push
pop
or
in
sub
inc
mov
pop
or
lods
repz
lret
sub
sbb
clc
jo
jbe
push
pop
jl
xchg
bound
and
lea
or
scas
mov
pop
and
mov
sbbl
mov
loopne
mov
scas
sbb
dec
push
aam
and
add
fdivr
adc
dec
inc
or
mov
test
mov
rcl
pop
adc
mov
fists
inc
xchg
or
sub
outsb
or
rolb
stos
testl
cmp
movsl
jge
cmp
es
jne
lcall
pop
out
fwait
ret
stos
out
add
cmp
jae
in
ficoml
xchg
xchg
dec
arpl
mov
push
or
add
std
push
add
jl
outsl
push
sti
inc
clc
shll
test
pop
dec
jno
lock
xor
add
add
mov
xor
add
leave
ret
push
mov
sub
adcl
jmp
or
dec
or
dec
aad
aas
adc
inc
test
fiadds
jg
jl
aad
jbe
insb
sub
fistpl
lret
mov
mov
add
sub
mov
mov
mov
fmul
cmp
popf
and
test
mov
pushf
out
mov
ret
loope
push
push
mov
and
cwtl
add
push
xchg
lret
into
pushl
les
inc
jecxz
cmpsb
mov
sbb
stc
data16
pop
jecxz
pop
ficompl
adc
and
inc
mov
cmp
mov
push
push
call
jns
add
mov
push
cmp
cmp
fcmovnu
dec
sbb
push
and
fnstcw
icebp
lock
add
popa
sub
out
push
mov
in
subl
jge
jbe
push
push
xlat
test
adc
ja
lods
cmovl
jge
push
adc
fidivs
push
dec
dec
imul
dec
dec
mov
mov
mov
subl
mov
neg
movl
adc
movl
mov
xorl
push
orl
push
adc
push
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
out
sub
sub
jmp
sub
adc
or
pop
cmpsl
ret
aad
test
mov
adc
rcl
adc
push
cmp
ret
pushf
sub
testb
xchg
adc
pop
rorl
cwtl
int
push
or
lea
push
dec
ljmp
sub
dec
lret
aam
xchg
fisubs
out
rorb
add
sub
mov
fcoms
xchg
or
stc
mov
cwtl
insl
ss
or
mov
cmp
dec
push
inc
push
imul
push
xchg
and
inc
movb
dec
push
add
cmc
lds
mov
dec
sub
fcoms
pop
mov
mov
adc
adc
fdivrp
jnp
cmp
lds
mov
mov
mov
mov
dec
in
lahf
subl
mov
in
mov
lcall
inc
notb
out
mov
xor
movzwl
xor
mov
jmp
icebp
popa
jno
loope
mov
add
insl
dec
mov
jl
jg
jl
loop
push
into
cld
pop
ret
out
mov
mov
pop
jge
pop
push
sub
stos
pop
xor
rolb
mov
xor
leave
call
shrb
lcall
divl
scas
aad
addl
dec
jo
push
inc
cmpsl
rcrb
sbb
call
inc
dec
add
sahf
or
imul
adc
bound
rcrl
add
jl
mov
pushf
mov
iret
add
xor
arpl
out
movsl
mov
test
lea
mov
pusha
repnz
inc
jge
sahf
js
fcoml
aad
mov
jp
add
aad
sub
cwtl
pop
xor
test
ret
stos
imul
inc
or
repz
mov
sub
inc
in
loope
or
aaa
hlt
add
aas
or
inc
jecxz
cld
cmp
add
add
cmp
mov
mov
movl
cmpl
je
cmpl
jne
push
call
xor
or
dec
mov
jmp
movl
movl
movl
movl
or
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
call
jmp
xor
mov
addl
xor
sbbl
add
mov
orl
movl
movb
or
mov
xor
add
sbbl
mov
decl
mov
xor
adcl
add
xorl
push
mov
xor
sbbl
add
xorl
push
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movzbl
xor
mov
negl
xor
add
orl
jmp
sarl
sarl
sub
cmp
jl
jg
jl
pop
sbb
inc
ss
popa
sub
test
xor
xor
cmp
aam
call
push
or
sbb
loopne
xchg
dec
cmpsb
xchg
pusha
xchg
repz
add
clc
ss
aad
aaa
in
decb
ljmp
call
jo
adc
inc
lahf
hlt
jo
test
or
jbe
daa
rclb
cmpsb
add
popf
sub
lahf
gs
jmp
pop
in
dec
aaa
xchg
sub
cmp
jnp
cmp
and
mov
les
dec
cld
mov
outsl
fs
xchg
jmp
fucom
cmpsb
lock
push
je
sub
jp
jae
xor
dec
lea
and
stos
jecxz
pop
jnp
repz
imul
lock
xchg
pop
in
mov
scas
push
daa
insl
push
fwait
loop
cmp
dec
pop
scas
loop
mov
daa
adc
movsb
mov
insl
push
xchg
aas
mov
push
xor
jg
nop
addb
lea
addl
push
orl
pushl
addl
jmp
push
repz
adc
aas
cmp
jl
jg
jl
pop
xchg
xor
ss
inc
adc
xor
stos
and
push
xor
mov
or
mov
sub
xchg
and
cmp
repz
sub
out
dec
jbe
ljmp
lret
jp
cmp
cli
inc
mov
adc
lret
push
frstor
stos
lcall
inc
push
imul
push
out
dec
outsb
sub
sbb
xor
jmp
push
jbe
popf
adc
adc
and
jl
or
sarb
sti
jae
fidivrl
pop
push
stos
cmp
loopne
fldenv
mov
mov
dec
das
repnz
dec
sbb
cmp
ret
data16
and
mov
ret
mov
cmp
fists
es
and
cmc
xor
movsl
notb
fcomps
test
sub
fxch
lods
add
xchg
mov
cli
sbbl
sub
push
in
jmp
xchg
pop
cmpsl
inc
adc
sub
loope
ret
jl
or
lods
test
lods
dec
daa
xor
fucomi
lcall
sbb
lds
push
movsb
lret
xor
or
gs
pushf
mov
xorl
rorl
mov
xor
mov
outsl
push
mov
adc
push
in
xor
popa
fnstenv
and
jne
ficoml
out
mov
mov
xor
das
out
or
in
adc
sub
jp
outsl
and
mov
sub
fnsave
xchg
adc
mov
loope
xchg
fldt
dec
mov
mov
push
insb
mov
jp
jnp
lds
xchg
ret
dec
push
pop
adc
out
pop
shl
loope
fdivrs
cmp
mov
test
xor
jb
jb
std
into
pop
jle
call
add
repz
mull
adc
fs
loope
xchg
sub
mov
pusha
push
add
mov
enter
push
scas
cli
stos
call
test
je
sbbl
lea
push
mov
xor
add
push
mov
jmp
dec
add
cmpl
fnsave
xchg
mov
add
faddl
or
jns
fwait
sarl
jp
cwtl
pop
pusha
jnp
rcrl
inc
push
pop
ret
jle
inc
std
or
adc
xchg
add
pushl
lods
int
scas
pop
push
lahf
daa
mov
pop
add
out
mov
mov
jne
in
outsl
je
mov
lods
mov
or
and
push
pusha
dec
sub
add
insl
shrl
cmp
fisttpll
je,pn
mov
out
pop
push
mov
inc
jecxz
push
lods
call
aad
mov
outsl
out
imul
ss
aas
xchg
mov
push
inc
data16
stos
es
and
or
test
push
xor
xor
es
push
test
jae
das
jns
mov
push
aas
mov
ljmp
xor
push
out
mov
sbb
and
xchg
in
add
test
fnsave
stos
add
add
daa
add
add
dec
into
hlt
jge
jge
fnstenv
data16
jl
or
movsl
sub
inc
xchg
and
cmp
call
in
push
push
pop
xor
das
lods
mov
aam
push
pop
mov
andb
not
daa
inc
incb
loope
push
addr16
fs
sub
push
jle
pop
sbb
and
imull
int3
add
xchg
mov
imulb
fs
rorl
sub
and
mov
jno
adc
ret
inc
mov
arpl
aam
mov
mov
xor
pop
inc
mov
cmp
adc
sbb
xchg
xchg
mov
dec
scas
call
cwtl
and
lret
cmp
pop
adc
test
inc
adc
test
das
inc
and
jmp
loopne,pn
jg
or
pusha
mov
mov
sbb
int
jns
mov
sub
mov
or
adc
inc
inc
sub
mov
sub
jb
xchg
mov
notb
fsubp
mov
mov
jmp
shr
dec
pop
pop
jns
insl
adc
dec
divb
or
sbb
push
cmp
adc
jmp
int3
cmc
adc
jge
test
jno
pop
mov
cmp
jle
sbb
shlb
jo
mov
xchg
xor
push
and
jb
inc
mov
push
test
adc
jbe
in
scas
andl
es
or
divl
in
leave
rcr
cmp
or
add
loopne
jnp
add
or
setns
xor
push
inc
push
and
jbe
and
sbbb
xchg
mov
orl
push
in
xchg
test
in
aad
push
movb
sahf
test
adc
pushf
mulb
push
and
fs
jns
scas
push
lcall
xor
out
add
dec
jns
inc
mov
lahf
sbb
lret
xchg
mov
pop
loop
mov
fcmovbe
or
add
inc
pop
lea
mov
popa
fucomp
out
cld
out
testb
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
jmp
xor
mov
and
testb
sbb
jl
or
and
cmp
daa
or
in
push
leave
rorl
clc
in
mov
pop
mov
or
int
cmp
nop
sbb
stos
mov
bound
addl
xchg
fisubs
mov
test
test
jne
adc
mov
inc
add
scas
leave
mov
aas
cmp
or
ficompl
xchg
mov
xchg
mov
fdivl
dec
jp
outsb
pop
fs
pop
add
aad
in
mov
into
lcall
pop
push
insl
popf
mov
pop
pop
roll
add
repz
sahf
and
mov
or
sbb
fmulp
xchg
ss
shl
sbb
int
pop
cltd
pop
add
push
or
pop
push
lahf
test
ljmpw
mov
or
push
jae
jns
dec
sahf
mov
in
fildl
imul
or
mov
outsl
icebp
int3
call
mov
xor
mov
sub
jmp
or
and
jnp
jnp
gs
push
and
cmp
jg
jl
mov
add
pop
mov
sbb
sarb
push
push
xor
xor
imull
stc
xor
movsl
mov
pusha
imul
popa
mov
rcll
push
movlps
test
xchg
int3
add
fimull
cmc
cmp
xchg
inc
jmp
test
mov
sbb
mov
shrl
scas
clc
mov
mov
sbb
cmpsb
or
adc
mov
sti
mov
mov
mov
in
jns
sbb
mov
out
fwait
lcall
out
jb
push
loope
ljmp
mov
push
rcrl
iret
ret
inc
je
xchg
push
jl
pop
in
sub
dec
mov
xchg
push
lea
mov
cmpb
loopne
push
stos
xor
out
xor
pop
mov
out
xchg
jne
or
xor
mov
push
dec
cmp
adc
and
xchg
jecxz
sub
and
jo
or
sub
mov
add
jmp
xchg
out
std
push
gs
repz
sbb
daa
cmp
jg
jl
xchg
rorb
int3
mov
add
rcr
rcrb
mov
in
sub
cmpsb
out
or
mov
xchg
push
and
lcall
sbb
aam
adc
mov
loope
es
cwtl
and
in
out
iret
xchg
add
sbb
cs
or
roll
mov
int3
adc
aam
add
or
push
jnp
push
push
jno
lcall
subl
out
mov
mov
pushf
inc
push
xor
mov
jno
push
lret
xchg
out
out
push
loopne
mov
lods
mov
dec
in
test
mov
fwait
sub
ljmp
pop
adcl
mov
mov
movsl
in
add
sbb
rcll
mov
pop
xchg
pop
xor
sbb
enter
push
jo
xchg
push
cmc
xchg
js
fsubrl
xor
rorb
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
jmp
scas
stos
fs
js
addr16
xchg
cmp
mov
or
testb
popa
repnz
pop
test
dec
std
aad
shlb
mov
pop
and
int3
and
ss
mov
shrl
add
fwait
sti
out
and
out
mov
and
cli
mov
les
mov
roll
aaa
pushl
mov
xchg
shlb
rcl
aad
mov
pop
cmp
push
xor
lea
jbe
sbb
jb
jo
outsb
rolb
xor
movsb
mov
insl
ficoms
das
jg
and
mov
mov
mov
mov
and
mov
imul
xchg
mov
sub
xchg
xor
int3
out
mov
pop
cmp
push
jns
push
stc
dec
push
add
pop
cli
sbb
or
cmpsb
cmp
jo
mov
mov
lods
andl
popf
pop
push
adc
mov
push
aas
xor
and
inc
add
xor
add
xor
add
xor
daa
add
add
lret
mov
insl
lods
test
jo
lds
jl
jg
jl
in
mov
imull
cmp
inc
xor
mull
loop
adcl
pop
inc
lods
sahf
cmp
arpl
andb
dec
xchg
addr16
lods
add
ja
in
mov
mov
sarl
test
shlb
xor
or
hlt
dec
adc
add
movsl
pop
inc
push
cwtl
pop
push
shlb
mov
jbe
xchg
xchg
clc
stos
mov
xor
pop
out
mov
pop
insl
jae
dec
mov
adcl
and
rol
xor
pushf
cmp
imul
test
ss
sbb
insb
pop
stos
in
mov
jg
push
shr
call
sub
inc
push
cwtl
add
xor
xchg
lret
pop
xor
pop
aam
cmpsb
in
mov
pop
int
ss
and
stc
xor
int3
and
cmp
or
pop
sub
push
pop
call
mov
mov
jmp
gs
add
jge
jecxz
stos
insb
sub
aas
jl
or
shlb
lahf
ds
scas
and
xchg
out
cld
icebp
inc
cs
movsl
ja
jecxz
out
jo
push
loope
mov
mov
out
insl
push
loope
fwait
jno
xchg
mov
cmp
cwtl
test
mov
cmp
out
rorl
fsubs
div
mov
fists
or
sbb
pop
dec
popa
out
xchg
cld
cmc
test
inc
mov
insb
jp
mov
stos
stos
jle
out
scas
gs
xchg
scas
jae
or
mov
loope
dec
jg
mov
testl
pop
test
fimull
insb
out
insl
inc
sbb
add
push
pop
cmpb
push
dec
enter
femms
mov
and
mov
inc
push
es
mov
sarl
xlat
lahf
rcrl
jle
pop
js
imul
bound
and
inc
scas
pop
repnz
push
in
das
and
lahf
mov
mov
and
out
ret
mov
mov
or
pop
mov
scas
sbb
cltd
xchg
or
pop
leave
ret
push
mov
sub
xor
movl
movl
orl
jmp
push
repz
pop
stos
lea
nop
push
sub
movsl
pusha
jecxz
jl
push
jg
jl
loop
sub
hlt
jno
out
sti
cmp
sbb
cmp
test
loope
mov
push
mov
mov
add
jae
icebp
cld
mov
mov
sbb
mov
xor
sbb
push
in
mov
int3
push
add
mov
xchg
and
mov
inc
in
inc
arpl
mov
andl
lods
subl
dec
jb
in
pop
sbb
sub
mov
mov
clc
bound
jp
mov
aas
sti
inc
jne
xchg
lock
adc
mull
push
mov
xchg
jns
mov
add
xchg
adc
mov
inc
jae
sti
jg
sub
push
daa
loop
sub
pop
push
xchg
mov
jge
aas
mov
and
mov
out
sti
lea
jne
mov
sub
xor
push
adc
or
inc
push
ficoms
mov
lcall
cwtl
dec
scas
mov
mov
or
mov
add
add
add
add
add
or
cmpl
jne
push
call
cmpl
jb
orl
mov
xorl
lea
and
jmp
divl
test
pop
jnp
js
ds
mov
lea
jl
push
jg
jl
iret
jl
add
sar
cmp
aad
fadd
and
ret
and
cmp
dec
nop
rorl
test
lock
adc
fs
fstl
mov
push
ljmp
out
xchg
arpl
adc
mov
idiv
inc
jmp
adc
dec
push
es
inc
or
enter
push
or
lea
fistpl
mov
je
mov
pop
dec
jae
rcrl
es
cwtl
jmp
imul
mov
xor
mov
pop
inc
outsb
insb
inc
bound
jp
jns
in
jge
icebp
pop
aas
subl
push
cli
les
inc
inc
adc
rorl
in
mov
insl
cmc
dec
cmp
jl
cs
pushl
sbb
lods
fadds
mov
sbb
add
repnz
sbb
pop
xor
or
sub
inc
sbb
inc
fsubr
xor
add
movsb
flds
xor
xchg
daa
xchg
xor
jg
jl
rcrl
loope
outsb
cmp
cmp
outsb
adc
mov
mov
sub
int3
push
les
pop
fs
rcrb
pop
xchg
ret
aas
sbb
push
and
imul
cwtl
pop
lret
xchg
popaw
lds
jne
repnz
je
dec
fnsave
jne
mov
jo
add
std
pushf
pushl
mov
xchg
lret
dec
or
sub
ja
mov
sbb
test
xor
lods
adc
loop
div
subb
faddl
pop
rclb
inc
add
jg
sahf
xor
push
imul
out
and
dec
int
rcr
ret
sub
jg
cltd
clc
fs
mov
pop
cmp
int
mov
mov
cltd
cwtl
inc
xor
jno
sub
mov
jb
fisttps
jg
int3
sbb
scas
pop
add
das
adc
cwtl
lods
pushf
mov
add
mov
sbb
push
lea
mov
mov
adc
push
push
mov
orl
mov
mov
mov
and
mov
xor
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
adcl
jmp
adc
in
data16
mov
ljmp
jl
jg
jl
lea
add
outsl
jle
lods
jbe
push
out
inc
imul
setge
cli
out
dec
pop
test
insl
out
outsl
sbb
pop
mov
mov
lret
ficompl
push
bound
dec
hlt
call
out
pop
test
xchg
fcmovnb
in
bound
and
pop
xor
xlat
dec
inc
push
roll
jl
ljmp
cld
pushf
cmpb
lods
loope
lret
ret
jns
jmp
loopne
popf
lret
fstps
jo
test
nop
add
xchg
ret
jge
mov
adc
ds
adc
lock
or
stos
mov
cld
dec
inc
sub
adc
push
lods
test
xchg
addb
adc
mov
or
jp
nop
pop
xor
imul
dec
iret
xor
popf
jns
mov
mov
add
mov
jmp
cmpsl
jno
xor
push
sub
test
mov
fld
add
sbb
rolb
add
push
add
add
andl
add
movl
jmp
ss
call
pop
fcom
xor
xor
jl
jg
jl
sbb
out
mov
cs
pop
pop
mov
int
data16
inc
or
test
into
mov
arpl
inc
add
cmp
in
pop
setg
cmp
or
xchg
mov
dec
mov
aas
add
fldcw
jo
jbe
sub
rcrb
add
adc
clc
add
push
int3
cs
cltd
iret
outsl
cmc
movsl
hlt
decl
push
adc
inc
std
test
aam
shlb
lods
sub
pop
test
ja
shll
mov
mov
xchg
jg
pusha
pop
iret
or
xchg
scas
pop
lcall
mov
pop
mov
cltd
shlb
lahf
mov
xorl
mov
jnp
inc
push
cmp
movsb
add
addb
ds
ret
jmp
repz
aaa
xchg
scas
stos
repz
jne
pushf
cmpl
imul
adc
aas
loop
sub
push
lret
and
repz
mov
mov
movl
movl
cmp
je
mov
and
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
push
push
pushl
call
cmpl
jb
lea
mov
xor
xor
mov
sub
xor
jmp
lea
mov
std
inc
nop
ffree
je
gs
jl
clc
jle
inc
jmp
sti
popf
xchg
mov
fwait
sub
jbe
notb
sub
lret
lea
xchg
test
cmp
pop
sub
jns
cwtl
mov
jmp
jne
movsb
es
jo
jno
mov
insb
rcrl
arpl
xchg
cwtl
in
jecxz
mov
scas
pop
cs
lds
fnstsw
aaa
mov
mov
lret
rcrb
rclb
pushf
add
in
jg
xchg
xchg
sub
push
cli
sbb
sarl
xor
mov
mov
sub
sbb
jbe
and
into
lret
repnz
jbe
or
inc
sub
sub
inc
sbb
add
movsl
std
jmp
sti
pop
cmp
les
lds
test
or
sbb
or
aaa
sbb
xor
ja
dec
push
fsts
pop
jbe
mov
and
pop
inc
inc
mov
xor
adc
xor
jo
mov
push
test
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
imul
mov
mov
cmp
je
mov
jmp
fsubs
jp
jp
mov
xchg
fisttps
aas
mov
push
jg
jl
mov
lahf
or
sahf
xchg
nop
out
cmp
cli
fs
adc
outsl
jp
bound
mov
notl
hlt
lds
jbe
divb
jae
pop
inc
rcrl
in
mov
ss
mov
icebp
add
mov
imul
ret
hlt
sub
dec
in
xchg
lea
aaa
mov
xor
ljmp
push
pop
jne
bound
cwtl
stos
les
xchg
mov
mov
sbb
mov
fsqrt
pop
push
mov
cmp
sarb
mov
xlat
mov
jmp
xor
jne,pn
das
aam
mov
mov
adc
inc
mov
mov
mov
mov
es
mov
pushf
negl
xchg
adc
add
inc
dec
xor
test
mov
jecxz
sub
flds
fs
cmp
mov
mov
push
xor
fisubl
sbb
pusha
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
jmp
jnp
lds
cmp
adc
sub
jl
push
jg
jl
and
sbb
jns
lock
pop
cmp
or
stos
icebp
jno
mov
ds
fsubr
insl
repnz
imul
cltd
sbb
les
cmc
std
int
inc
es
jg
test
test
xor
push
cmp
add
ret
sub
xchg
mov
cmc
movsl
enter
pop
inc
cmp
mov
mov
pushf
add
jmp
xor
fnstcw
aam
adc
jae
push
int
jb
sub
jp
addr16
leave
loop
dec
dec
xlat
inc
sub
and
outsb
cmc
shlb
cs
mov
cwtl
fsts
dec
cmp
dec
insl
xor
faddp
hlt
add
lret
mov
pop
jbe
test
sahf
cmp
into
add
dec
pop
dec
sti
rclb
ljmp
mov
stos
xchg
iretw
and
loop
xchg
in
push
sbb
cmp
in
inc
or
pop
fsubrl
hlt
mov
or
cmp
je
mov
jmp
push
add
jge
jnp
and
nop
or
leave
jl
push
jg
jl
loop
push
test
jp
iret
push
cmpsl
sar
sub
cltd
retw
lds
aas
xchg
mov
cmp
int
pusha
sahf
xlat
or
cmp
rcrb
sbb
int
stos
xor
adc
push
pop
dec
push
out
bound
fsts
mov
sarb
inc
cmp
xchg
cmp
mov
xchg
and
sbb
fmulp
lods
adc
cmp
sub
mov
loop
cmp
jne
dec
push
cltd
cli
mov
out
and
pop
lock
gs
cmp
xchg
out
int
adc
daa
sbb
ljmp
out
fwait
mov
cmp
push
lods
xchg
mov
mov
mov
iret
daa
dec
xchg
cs
ds
std
cs
xorb
add
jae
xchg
pop
in
mov
aas
pop
repnz
sti
insl
mov
add
jmp
inc
cmc
test
in
xor
outsl
mov
cli
push
es
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
jmp
pop
fst
jge
out
jnp
inc
sub
jl
push
jg
jl
orb
inc
in
pcmpeqw
cmp
adc
inc
mov
jmp
push
or
xchg
iret
cltd
stos
or
mov
inc
dec
adc
add
pop
jnp
jp
in
sbb
push
pusha
inc
pop
daa
xchg
jg
incl
mov
mov
mov
xor
jne
mov
mov
fwait
jno
pop
mov
add
mov
mov
imul
stc
or
call
mov
mov
fistpll
lret
stc
and
test
jae
lcall
push
test
and
test
xor
insb
test
adc
inc
neg
lods
jmp
in
cltd
pop
or
mov
dec
cmp
sub
out
sub
outsl
scas
fdivr
test
pop
add
ds
mov
arpl
sbb
lods
mov
mov
jo
fs
inc
outsb
adc
icebp
cmp
and
stos
adc
loopne
repnz
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
push
xor
push
movl
sub
movl
xor
or
sbb
mov
mov
decl
push
addl
mov
xor
mov
xor
adcl
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
add
jmp
xchg
and
and
out
mov
sbb
shl
lret
jl
mov
repz
stos
mov
adc
sub
inc
sbb
mov
stos
mov
push
test
xchg
ljmp
add
movsb
dec
lcall
fidivrs
adc
mov
sbb
push
mov
popa
cmpl
jne
add
adc
mov
sbb
fstp
add
mov
negl
rorl
mov
pop
pop
lods
dec
cli
mov
call
scas
mov
movl
cmp
jne
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
jmp
mov
jns
std
ficomps
jo
sti
ja
jae
jl
mov
add
sub
daa
inc
fs
popf
adc
sbb
loope
data16
fsubrs
scas
xor
arpl
pop
movsb
lret
jmp
xchg
push
xor
push
nop
out
lds
push
adc
aas
aaa
stos
shl
mov
add
push
xor
fs
lret
popa
imul
insl
adc
jbe
jg
imul
inc
js
std
mov
outsb
aas
lret
aam
icebp
push
inc
sti
sbb
sub
sbb
gs
stos
mov
jl
sbb
cmp
je
sbb
aas
ss
bound
roll
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
xorl
call
adcl
test
movl
je
orl
xor
jmp
subl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
orl
mov
movl
push
push
push
call
movl
cmp
je
orl
push
addl
push
adcl
push
adcl
push
sbbl
push
push
call
jmp
or
mov
and
mov
sub
movl
lea
adc
mov
add
lea
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
movzwl
sbb
mov
mov
xor
mov
movl
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
orl
push
movzbl
sub
mov
mov
movl
xor
subl
push
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
add
mov
movzbl
mov
cmp
movl
mov
movl
je
neg
mov
xor
add
imul
mov
jmp
xor
xor
add
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
call
cmpl
jb
mov
mov
xor
inc
add
movzbl
sub
mov
mov
mov
orl
mov
sbbl
xor
sbbl
add
movl
cmp
jne
mov
sbb
mov
xor
add
mov
sub
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
xor
mov
mov
orl
mov
mov
xor
xor
dec
add
sbb
mov
add
lea
dec
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
and
mov
adc
mov
sub
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movzwl
and
add
adcl
mov
mov
lea
or
mov
add
mov
sub
mov
xor
adc
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
subl
mov
sbb
movl
xor
mov
xor
mov
movzwl
xor
add
movl
mov
sub
mov
xor
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
add
movl
cmp
movl
jne
movzbl
adc
mov
mov
mov
orl
xor
orl
add
movl
cmp
jne
dec
mov
sbbl
mov
adc
xor
xorl
add
movzwl
sbb
mov
dec
mov
mov
sbb
xor
adc
mov
sbbl
sub
add
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
mov
cmp
je
mov
movl
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
jmp
mov
cmp
jne
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
add
mov
sub
mov
addl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
movzwl
sub
mov
movb
lea
mov
and
jmp
mov
icebp
test
stos
mov
cmp
daa
jg
jl
sub
cwtl
jg
rcl
mov
or
pop
cmc
pop
daa
in
jecxz
xchg
nop
insb
test
jp
pop
out
cwtl
subb
xlat
mov
ficoml
mov
inc
punpckhwd
nop
arpl
cmp
mov
inc
mov
adc
mov
fdiv
cmpl
cli
ss
jle
mov
rcrl
add
and
insb
sbb
push
mov
mov
testb
inc
arpl
push
mov
lea
fcoml
cwtl
iret
or
cmpl
dec
ss
aaa
aas
ss
gs
lods
bound
xor
bound
aad
jle
out
sub
int3
jge
jns
sub
sub
sahf
jnp
je
xlat
xor
add
mov
inc
push
or
jg
add
push
cltd
adc
mov
fsubrs
sbb
lret
sti
dec
mov
push
call
int3
iret
lods
lock
sahf
ljmp
sub
adc
adc
das
lods
lret
sub
fisubrs
inc
incl
add
or
add
in
inc
add
jnp
add
sub
movl
mov
sbbl
movl
movl
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
call
cmpl
jb
xor
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
jmp
xor
mov
add
jmp
movl
mov
movl
mov
inc
movl
cmp
jb
mov
xorl
mov
addl
jmp
cmp
bound
push
pop
jmp
adc
mov
mov
int
jl
jg
jl
sarl
lock
mov
ljmp
xchg
inc
sti
aad
add
sbb
loop,pt
dec
mov
or
lret
mov
repz
sbb
jb
ret
aam
les
or
mov
scas
adc
pop
outsb
aad
fisttpl
xchg
mov
cs
adc
add
jge
pop
dec
mov
subl
jb
sbb
call
dec
sub
hlt
rcr
das
mov
in
push
push
int
leave
xchg
jecxz
sub
out
fisubrl
xchg
dec
bound
dec
xchg
mov
aaa
mov
movsl
inc
iret
sub
in
scas
ror
fsubr
pushf
pushf
pop
pop
mov
lcall
cli
icebp
movsb
cmp
mov
and
les
adc
push
xchg
dec
fidivrs
xchg
and
jns
cmp
adc
nop
fisttps
mov
pop
arpl
ret
jmp
mov
fcomi
inc
xchg
sub
cmp
or
insb
pop
in
daa
in
cli
or
push
mov
test
pop
ss
pop
jo
adc
mov
add
movl
cmp
movl
je
addl
push
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
jmp
push
ss
std
push
jge
pop
add
or
push
jno
jl
daa
jg
jl
jae
xor
inc
popf
shlb
inc
jl
add
push
inc
mov
das
mov
and
sahf
out
adc
std
jmp
fstpt
dec
lahf
divb
je
lds
movsw
xor
in
mov
stos
jnp
js
insb
push
rorb
aaa
xchg
jg
add
addb
out
mov
out
mov
shrb
mov
xlat
test
sub
inc
addl
fimull
cmpsb
jnp
mov
adc
sbb
push
push
andb
cmp
loop
push
loopne
inc
lock
cwtl
das
lea
jle
es
call
and
xchg
push
out
mov
aas
fucomp
hlt
xchg
sti
lret
int3
pusha
inc
xchg
call
leave
cmp
adcb
lods
imul
inc
nop
adc
insb
fs
movsl
pop
jbe
push
dec
pusha
iret
sub
jp
mov
adc
inc
loop
popf
pop
push
or
out
cmp
inc
in
xchg
dec
shlb
jmp
add
inc
jne
inc
test
enter
and
mov
add
inc
xchg
add
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
jmp
add
clc
pop
clc
sbb
sti
insl
sbb
sub
cmp
jl
daa
jg
jl
mov
jns
xor
cs
and
push
xor
add
mov
sbb
and
push
or
add
jge
push
add
mov
std
leave
popa
lret
aas
ss
sub
adc
jecxz
xlat
imul
push
fsts
push
in
lods
imul
mov
push
rcrb
ljmp
out
mov
sub
pushf
lret
mov
sbb
sbb
ds
xor
mov
dec
adc
ret
xchg
lret
adc
mov
sti
repnz
mov
testl
and
xchg
mov
inc
pop
stos
sub
adc
pushf
cmp
mov
int3
addr16
addr16
in
dec
mov
loopne
std
push
sub
sub
jl
mov
push
stc
push
movsb
lcall
mov
ja
mov
out
push
and
lcall
sub
scas
sbb
mov
lods
cli
ja
lahf
pop
pop
add
mov
fildl
fs
lock
std
add
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
sub
mov
jmp
push
xchg
fs
fs
data16
pop
sbb
jecxz
jl
lret
jl
inc
fistps
icebp
adc
sahf
lods
xor
fisubrl
sbb
sbb
cld
jmp
fidivrl
outsl
inc
dec
xor
leave
xor
inc
adc
and
in
je
dec
jecxz
xor
xchg
push
push
xchg
xlat
repnz
jb
ret
jb
mov
andb
add
mulb
cmp
fs
pop
stos
push
aam
popa
dec
push
jle
push
xor
xor
mov
sub
lock
lds
addr16
jl
mov
xchg
in
test
jbe
dec
push
sub
sbb
xchg
sub
xchg
cmpl
movsl
into
pusha
inc
cmp
jnp
aas
fcmove
inc
ja
lahf
movsl
lods
outsl
lret
push
pop
add
lret
inc
mov
mov
shr
push
mov
xor
xor
push
stos
adc
pop
loop
test
push
or
inc
rorl
out
mov
dec
inc
push
mov
test
fmuls
orl
lahf
popf
loopne
xor
push
pop
mov
popf
lret
pop
fcmovne
cmp
sbb
aaa
shll
repz
scas
mov
inc
xor
add
add
mov
add
add
add
bound
arpl
cltd
jp
fldenv
mov
jl
lret
jl
mov
clc
test
sub
dec
andl
add
lret
pop
or
mov
push
cwtl
addr16
inc
hlt
out
add
pop
ljmp
xchg
inc
lahf
jne
sbbb
loope
and
cld
pop
fimuls
dec
mov
sbb
loop
dec
push
stos
jp
lcall
lods
inc
xchg
ss
inc
adc
push
xchg
inc
sub
aad
xchg
mov
push
fdivs
inc
out
cmp
and
sbb
and
in
pop
mov
fbstp
push
ret
negb
jp
push
hlt
push
sbb
movsl
dec
xchg
mov
aas
sbb
jmp
pop
fisubrl
fildll
daa
dec
sbb
jmp
popl
xlat
jnp
adc
xor
mov
rcrl
cmp
pushf
xor
test
or
test
push
sbb
std
lret
mov
jge
mov
push
and
cmp
insb
inc
xor
leave
out
iret
ret
orl
call
mov
xchg
fldcw
xor
das
int3
fsubrs
sbb
movsl
and
mov
imul
movsl
xor
cmp
dec
ret
cmp
movl
jne
or
mov
mov
adcl
add
mov
xor
or
sub
and
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
mov
xor
push
mov
mov
add
cmp
jmp
mov
mov
test
cmpps
jl
mov
popf
xor
fs
sub
sbb
rolb
lods
cmc
test
jecxz
add
out
repz
adc
xchg
stos
inc
mov
mov
pop
int
rolb
and
aam
ret
add
das
fdivrl
int
mov
xchg
add
bound
pop
inc
aam
test
mov
imul
incl
xor
sub
call
jge
subb
push
pop
lret
out
fcmovne
mov
int3
jecxz
fiadds
mov
cmpsl
sbbl
outsb
ljmp
test
and
lea
cld
jo
rolb
jb
pop
shll
loop
mov
popa
ds
ss
cmp
repnz
ss
mov
mov
mov
enter
xchg
es
and
lea
movsl
ret
cmp
mov
in
bnd
sub
ret
xchg
pop
push
enter
cwtl
cmp
mov
shlb
mov
cmpsb
mov
test
jnp
sahf
in
xchg
test
test
fisubrl
pusha
out
xchg
sbb
lahf
pop
mov
lock
or
daa
shl
ds
je
mov
jmp
jmp
xchg
test
loopne
bound
add
lds
jg
jl
ljmp
dec
add
lock
jg
in
adc
and
pop
cmp
movsb
xor
into
inc
xor
cltd
mov
dec
div
mov
fs
dec
popf
out
aam
ljmp
std
repnz
mov
inc
dec
add
hlt
out
and
lock
in
insl
bound
imul
fildl
lcall
sti
out
mov
jne
nop
cmc
iret
and
mov
push
arpl
and
das
sub
rcll
pop
imul
cli
imul
adc
pop
pop
mov
adc
shrl
push
xlat
addr16
add
lea
test
cwtl
xlat
jg
push
aaa
add
push
mov
pop
cmpsb
clc
mov
fsubrs
jge
sub
dec
push
mov
xchg
xor
dec
dec
imul
add
push
sbb
cltd
dec
or
cmpsl
ljmp
jp
push
lret
xor
mov
in
push
aaa
xor
jl
cmp
cwtl
sbb
adc
mov
push
jmp
pop
push
cmp
jmp
aam
rolb
pop
fs
jge
fisubs
les
jg
jl
movnti
mov
jbe
dec
dec
les
mov
dec
jmp
and
leave
movsb
add
cmp
mov
std
inc
sub
icebp
dec
pop
les
adc
xor
xorl
mov
or
icebp
into
insl
mov
adc
mov
ficoms
hlt
adc
push
cmp
mov
mov
decb
push
or
jmp
std
data16
out
lods
add
scas
jbe
sub
mov
aaa
push
movsl
stos
stos
mov
or
sahf
xchg
test
push
push
scas
mov
or
inc
std
sbb
repz
jns
dec
shr
and
outsl
pop
jmp
mov
sbb
rorb
lahf
mov
jnp
scas
pop
leave
ds
nop
xchg
xchg
clc
mov
das
aas
add
dec
test
or
ret
nop
pop
adc
mov
xchg
cmc
and
fxch
add
loope
sbb
ffree
jg
add
jae
mov
add
repnz
in
adc
and
and
movsb
incl
inc
ror
in
cmpsb
lds
icebp
stc
xor
add
jmp
mov
xor
add
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
rorl
test
inc
aas
inc
lea
pushl
mov
mov
out
cld
call
fisttps
jmp
out
incl
xlat
lea
inc
ljmp
incl
aaa
add
pop
movl
ffreep
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
lds
add
adcb
add
add
mov
cld
push
decl
push
mov
call
mov
add
test
call
jge
mov
fcom
add
mov
add
add
imul
push
fisttps
test
aam
lret
add
rcl
movl
jl
test
jmp
incl
loope
aam
test
out
mov
mov
add
call
lret
cld
incl
out
xor
mov
cld
jl
mov
add
mov
decl
add
inc
xor
inc
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
movl
inc
add
mov
test
add
incl
jmp
faddl
jge
adc
mov
sahf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
inc
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
jl
add
mov
inc
lret
inc
iret
jb
mov
enter
xor
mov
pushf
lea
add
inc
mov
xor
add
mov
fmuls
xor
mov
aad
pushf
xor
mov
clc
enter
mov
test
clc
incl
xor
test
test
ds
pushf
inc
mov
outsl
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
rdtsc
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
sahf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
sahf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
sysexit
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
sahf
shll
lret
or
add
in
push
mov
bound
int
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
sahf
lret
cmp
call
inc
inc
mov
mov
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
bound
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
test
clc
inc
inc
mov
sub
mov
dec
bound
inc
add
dec
bound
inc
add
inc
add
movsl
pushf
inc
dec
lea
push
xor
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
rdtsc
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
sahf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
sysexit
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
sahf
shll
lret
or
add
in
push
mov
bound
int
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
pop
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
sahf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
loope
inc
call
inc
mov
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
sub
test
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
rorl
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
in
push
push
incl
mov
loope
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
shlb
add
mov
lea
push
enter
testl
enter
negl
or
inc
in
in
sub
inc
in
push
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
loope
inc
stc
xlat
ss
aas
in
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
andl
lret
mov
add
lret
pushf
and
pop
rcr
test
clc
add
xor
pushf
add
add
inc
push
rcrl
inc
fsts
mov
nop
rolb
mov
add
pop
add
or
mov
add
call
add
add
push
inc
orb
leave
dec
dec
add
call
clc
inc
inc
mov
enter
mov
xor
xor
or
sbbb
int3
test
clc
inc
mov
fmuls
sub
add
leave
xor
jl
add
add
or
test
clc
or
xor
inc
sbb
mov
xchg
pop
add
mov
add
mov
mov
mov
xor
add
inc
jge
mov
xor
add
push
jne
mov
decl
add
cmp
push
inc
inc
add
add
mov
mov
mov
sbb
inc
add
push
clc
add
mov
jne
mov
add
add
lea
lea
xor
ret
mov
add
push
inc
inc
add
test
jne
mov
mov
push
pop
inc
decl
rclb
xor
addl
mov
push
jbe
mov
ret
dec
inc
jmp
mov
cld
push
mov
add
push
push
inc
jmp
add
add
inc
ret
mov
mov
sub
mov
mov
rolb
inc
add
inc
add
clc
inc
ljmp
xor
add
mov
mov
inc
fdivs
loop
add
add
ljmp
add
add
add
mov
dec
incl
test
sbb
add
mov
add
and
dec
mov
dec
call
inc
add
cmp
inc
add
jb
mov
cmp
lret
mov
test
andnps
decl
inc
add
mov
inc
hlt
mov
xchg
add
xor
add
mov
mov
mov
push
push
inc
mov
call
inc
adc
decl
aam
push
add
xor
lcall
cmp
test
clc
inc
and
mov
cmp
je
mov
add
sbb
dec
dec
mov
mov
add
add
jne
mov
cmp
jb
mov
mov
mov
inc
je
push
add
push
mov
in
shlb
test
call
inc
inc
rorb
jmp
mov
mov
loopne
sbb
inc
inc
push
lea
lea
or
js
mov
incl
call
inc
add
decl
test
mov
add
add
incl
add
data16
push
call
mov
cld
inc
test
inc
mov
sbb
inc
test
rorb
add
add
add
popw
test
cmp
jbe
lea
add
mov
sub
mov
mov
in
mov
jb
incl
mov
sbb
push
mov
movl
add
mov
mov
pushf
mov
lea
decl
movb
pusha
jmp
mov
xor
xor
add
in
mov
addl
mov
data16
addl
push
loope
inc
add
mov
out
incl
and
test
incl
jl
leave
add
test
outsl
fiadds
mov
test
in
incl
loope
inc
data16
inc
call
add
filds
inc
inc
xlat
xor
pushf
jl
leave
icebp
inc
add
mov
fdivp
mov
in
test
inc
inc
mov
cld
inc
out
rclb
inc
mov
mov
and
inc
cmp
jne
movl
lret
inc
add
lea
xor
add
inc
adc
test
add
movb
jl
add
mov
mov
sbb
add
loopne
adc
or
inc
loop
xor
or
jl
inc
add
adc
repnz
xorb
adc
dec
repnz
mov
adc
call
adc
inc
push
flds
mov
fcmovnb
xor
sbb
addl
inc
mov
sbb
xorb
add
decl
add
incl
mov
lret
enter
inc
jne
mov
mov
mov
mov
ud2
xchg
xor
dec
mov
sbb
cmp
push
pop
adc
andb
mov
push
mov
adc
in
inc
inc
fildll
mov
inc
subb
ljmp
lea
xor
mov
stos
mov
push
test
mov
push
ret
mov
sbb
rcl
inc
inc
into
mov
cwtl
movl
call
add
jmp
inc
or
rol
dec
adc
incl
add
push
push
add
test
or
out
pushl
add
push
out
xor
jmp
andl
mov
sbb
addb
mov
incl
push
pop
clc
mov
orb
mov
lea
inc
ljmp
pop
inc
mov
mov
rclb
incw
lea
stos
add
mov
adc
pushl
decl
dec
push
loopne
adc
call
mov
sbb
loop
ds
dec
mov
sub
inc
mov
xor
decl
add
push
add
mov
jbe
test
inc
push
addl
pop
add
ret
decl
mov
mov
cwtl
mov
test
rorb
lea
mov
push
decl
pushl
call
lea
mov
mov
mov
inc
dec
mov
xor
decl
call
lea
incw
cmp
decl
jmp
inc
jmp
dec
lea
jge
mov
lock
mov
mov
roll
push
str
xor
add
add
inc
rdpmc
mov
dec
inc
add
mov
data16
jne
push
adc
jne
ljmp
call
or
mov
mov
addl
mov
add
push
xor
dec
mov
mov
jl
push
mov
rcl
mov
mov
push
ret
push
pop
leavew
inc
sbb
in
xchg
push
shl
addl
mov
cwtl
or
setl
inc
add
test
xor
add
xor
mov
test
movb
adc
add
roll
mov
incl
ljmp
adc
jne
call
mov
pushl
inc
test
dec
add
dec
inc
mov
add
add
adc
and
jp
sysret
pop
add
cmp
sub
dec
mov
ret
clc
mov
addl
jnp
pop
add
xorl
adc
jge
mov
cld
test
add
add
negb
add
pop
add
add
inc
test
mov
fisttpl
mov
push
add
test
add
add
mov
add
add
mov
call
or
dec
or
inc
dec
addl
scas
dec
add
lock
mov
call
rclb
xor
adc
mov
mov
nop
rolb
mov
push
or
xor
sti
cmp
dec
test
or
ret
or
pop
add
xor
inc
mov
push
inc
mov
or
sti
dec
sub
cld
mov
mov
add
jne
cmp
jns
pop
jge
cmp
cld
inc
iret
or
jae
xor
jmp
mov
lea
mov
in
testb
jge
add
mov
cmp
hlt
adc
jl
clc
js
pushl
mov
clc
add
mov
call
inc
popa
jge
cmp
xor
rcrb
push
or
push
sub
in
add
fistl
sbb
test
inc
mov
cld
je
cmp
rorb
adc
mov
sbb
push
inc
mov
add
or
cld
mov
jge
xor
mov
hlt
iret
pop
inc
jbe
cmp
adc
push
add
dec
divl
sbb
mov
test
je
mov
or
cmp
jbe
mov
or
jg
add
dec
add
je
mov
mov
mov
adc
jmp
xor
pop
rcrb
ret
cmp
push
xor
sar
xor
xor
pushf
or
add
pop
mov
push
add
push
adc
push
xor
mov
in
dec
add
nop
iret
add
push
dec
sahf
mov
add
add
cmp
je
add
mov
pop
mov
sahf
fbstp
add
pop
pushf
mov
xor
ud0
add
add
or
dec
inc
mov
xor
mov
mov
fdivs
push
or
inc
imul
loopne
sbb
jg
inc
jne
mov
adc
fiadds
jne
mov
clc
test
xor
xor
mov
cld
jb
add
adc
rcr
add
add
pmaxub
dec
decl
xor
add
cmp
hlt
mov
faddl
xor
add
cmp
clts
jp
decl
xor
add
jne
mov
xor
lea
jb
add
add
add
add
adc
pop
mov
hlt
add
jmp
incl
xor
in
push
inc
mov
hlt
add
mov
dec
mov
fcompl
enter
add
mov
in
and
mov
mov
cld
pushf
dec
sahf
xor
add
mov
cld
add
xor
pop
mov
cld
sbb
dec
mov
jne
mov
fadds
mov
push
fdivs
decl
lcall
inc
inc
xor
add
cmp
mov
fadds
mov
test
sahf
push
xor
out
mov
or
in
sbb
add
jne
mov
mov
cld
test
sahf
fbstp
ret
call
xor
add
mov
cld
dec
mov
cltd
inc
inc
mov
cld
lea
xor
add
inc
je
mov
cwtl
movb
add
sub
lock
mov
aam
ljmp
mov
in
inc
mov
cld
jmp
rorl
mov
fadds
add
xor
add
pop
hlt
pop
push
ret
mov
mov
xor
add
rolb
mov
or
inc
mov
xor
add
clc
jne
add
xor
lea
add
jb
add
inc
jne
add
or
inc
scas
xor
in
jne
mov
or
icebp
sahf
shll
mov
lsl
cmp
cltd
mov
add
mov
call
jge
sub
xor
jge
xor
add
mov
xor
add
jne
xor
jmp
mov
cld
mov
clc
leave
xchg
or
push
mov
cld
in
icebp
jnp
add
jae
sub
inc
call
push
call
xor
add
ret
xor
inc
loopne
jne
mov
push
jge
xor
in
test
add
mov
xor
xor
add
cmp
mov
xor
add
cmp
mov
add
add
or
ja
mov
cld
pop
stc
mov
in
jge
mov
or
icebp
add
jae
add
push
jne
mov
add
icebp
jmp
cmp
xor
clc
pop
repnz
out
pop
testl
pop
add
pop
jge
xor
add
xor
xor
repnz
clc
mov
rcll
stc
or
mov
in
sahf
jne
mov
or
sahf
xor
add
mov
mov
lock
push
inc
jne
mov
in
mov
clc
repnz
decb
mov
cmpl
clc
call
hlt
add
clc
inc
jne
mov
clc
test
xor
mov
in
xchg
roll
sbb
cld
clc
pop
pop
xor
add
inc
hlt
mov
or
add
test
add
mov
sbb
rclb
add
add
mov
and
data16
pushf
or
rcll
xor
mov
add
inc
inc
mov
add
cmp
inc
push
mov
mov
lock
xor
mov
xor
pushf
aam
xabort
dec
inc
xor
inc
add
add
dec
mov
cld
mov
xor
pushf
dec
mov
xor
mov
xor
push
xchg
xor
add
incl
mov
in
inc
or
rclb
add
push
inc
call
leave
push
add
mov
or
jo
cmp
add
add
mov
or
mov
cmp
roll
mov
dec
dec
sbb
cld
mov
test
cmovne
test
add
into
xor
add
mov
faddl
mov
nop
into
add
mov
mov
invd
mov
mov
mov
push
push
cmp
fmuls
call
rcl
rcl
call
inc
jne
jmp
sbb
dec
or
mov
sbb
dec
and
push
add
cmp
je
push
and
add
or
inc
adc
inc
and
push
push
sub
push
mov
sbb
dec
mov
add
jge
add
mov
mov
cmovne
xor
xor
or
roll
dec
add
dec
jbe
mov
cld
mov
bswap
push
lret
xor
mov
and
or
daa
xchg
push
push
adcl
push
xor
add
decl
sbb
rolb
and
mov
enter
mov
push
add
add
addl
mov
rorl
mov
inc
dec
mov
inc
mov
call
or
mov
inc
push
mov
into
mov
mov
lea
mov
push
xor
mov
sub
mov
loopne
lret
push
dec
mov
lods
xor
add
mov
xlat
dec
sarb
jne
mov
fsub
add
xor
out
mov
hlt
mov
mov
in
jb
push
inc
push
jl
leave
cmove
lods
add
mov
or
xor
or
into
in
lret
xchg
gs
add
mov
fsubs
inc
lea
push
lea
fadds
mov
inc
add
mov
fmul
rorb
add
inc
inc
je
mov
sbb
add
add
jmpw
or
lret
jne
mov
in
add
enter
sbb
inc
ljmp
and
inc
test
add
rorb
data16
call
ret
test
inc
orb
sub
stc
test
mov
lea
call
pop
add
xchg
add
add
push
cmp
fdivs
add
lea
test
je
mov
decl
push
add
inc
sbb
push
or
mov
cmp
mov
inc
pop
add
add
push
decl
or
adcl
push
jno
add
push
clc
sar
xchg
add
jne
mov
mov
sub
rolb
loopne
dec
mov
mov
call
add
add
add
add
jmp
xor
pop
lcall
ret
mov
mov
add
push
and
adc
add
dec
or
sbb
cmp
pop
push
add
mov
and
xchg
add
add
cli
loope
shlb
dec
ret
sub
pushf
inc
mov
and
incl
xor
pushf
jb
add
add
mov
hlt
inc
data16
mov
jmp
mov
or
inc
add
mov
mov
mov
add
sbb
jne
sub
sahf
mov
and
add
lock
test
add
push
inc
in
mov
ret
push
test
add
inc
shlb
pop
add
loopne
inc
pop
xor
mov
fdivrp
pop
mov
hlt
addl
cmp
lock
add
add
push
or
add
data16
lock
jge
mov
test
sbb
mov
inc
jge
pushaw
xor
data16
jne
mov
inc
or
lock
mov
mov
in
or
mov
call
sbb
push
mov
lock
pop
jne
mov
retw
minpd
str
jne
xor
mov
cld
add
add
sar
mov
mov
lock
es
mov
clc
jne
jge
mov
or
add
push
xor
add
add
mov
or
mov
add
mov
mov
or
fisttps
clc
ja
mov
or
sahf
sti
add
add
fbld
pop
mov
or
mov
hlt
add
mov
or
mov
or
mov
mov
adc
stc
mov
mov
or
mov
or
add
cmp
mov
xor
mov
add
jge
mov
pop
clc
cmp
data16
mov
xor
pop
jge
mov
lock
jge
ltr
add
hsubpd
data16
jge
mov
dec
xor
minpd
data16
jmp
mov
sarw
mov
jb
add
pop
mov
clc
jne
data16
jnp
pop
inc
add
data16
mov
data16
icebp
sbb
jne
mov
call
mov
in
data16
repnz
xor
inc
mov
call
add
ret
jge
mov
mov
add
data16
mov
add
mov
data16
pop
test
pushf
add
into
fistps
push
mov
mov
mov
push
repnz
lock
jne
mov
cld
mov
xor
mov
mov
push
sub
mov
mov
add
dec
cmp
jne
mov
mov
stc
jge
data16
xor
data16
lock
ds
pop
add
rorb
inc
mov
in
sarl
pop
or
push
mov
mov
or
cmp
je
mov
mov
add
push
mov
mov
pushf
sub
add
xor
dec
str
cmp
int
mov
xor
mov
xor
lret
push
add
push
add
cmp
sti
mov
mov
cld
add
data16
roll
mov
lret
in
add
pop
lret
ret
enter
pop
movl
pushf
call
add
in
add
mov
clc
xor
add
cmp
je
push
pop
sysexit
leave
dec
bound
mov
int
mov
lret
add
jne
lea
add
ret
inc
xlat
add
add
or
ret
add
jne
lea
add
lret
mov
cmp
fs
ss
je
xor
inc
inc
add
ss
pushf
push
je
xor
mov
andl
add
in
push
mov
pushf
cld
mov
mov
or
ret
or
or
lret
add
mov
adc
iret
mov
dec
push
mov
mov
rclb
add
ret
jne
mov
xor
callw
cmp
fs
mov
pop
sub
add
xor
cmp
cmp
jne
cmp
clc
pushf
pop
mov
push
xor
mov
psubsb
icebp
lea
clc
pop
inc
mov
push
xor
mov
adcl
add
inc
sub
mov
addl
orl
cmp
mov
decl
dec
mov
mov
mov
xor
mov
push
leave
mov
push
test
sahf
in
xor
mov
clc
test
xor
pushf
dec
mov
in
mov
push
icebp
add
roll
add
roll
xor
pushf
dec
movl
clc
or
xor
pop
dec
dec
lea
add
dec
inc
sub
orl
cld
adc
scas
or
pop
xadd
jb
add
inc
sub
mov
lock
icebp
add
clc
pop
mov
data16
add
xor
add
lea
add
add
inc
adc
dec
mov
mov
mov
lea
add
inc
in
incl
leave
add
push
roll
sbbl
sarb
jbe
mov
or
push
mov
mov
jne
jmp
mov
push
push
mov
add
xor
sub
mov
inc
inc
mov
dec
sahf
xorl
orl
leave
jbe
mov
in
inc
in
mov
or
dec
inc
xor
mov
mov
cld
test
push
inc
mov
sahf
pop
xor
mov
inc
or
sar
dec
lea
in
decl
mov
cld
inc
inc
inc
mov
jmp
mov
mov
push
sahf
xor
add
inc
xor
pushf
std
xor
inc
fadds
inc
mov
inc
sahf
xorl
cmp
mov
clc
sub
inc
call
pop
inc
sahf
pushl
adc
std
dec
decl
inc
push
call
add
xor
add
add
inc
cld
add
mov
orl
test
clc
inc
inc
mov
pushf
or
inc
adc
jne
xor
xor
pop
add
ret
je
push
mov
mov
mov
in
inc
orl
push
test
xor
mov
add
add
mov
or
add
xor
inc
inc
add
xor
add
mov
sub
lret
mov
jae
lea
xor
jne
or
or
pushw
jne
cmpxchg8b
mov
jne
call
cmovge
xor
add
sub
or
add
inc
cmp
mov
subl
enterw
shlb
pop
or
mov
dec
inc
data16
push
jb
jmp
incl
mov
or
jo
test
jmp
incl
mov
pop
lock
push
dec
mov
dec
ror
rolb
dec
lock
pop
in
cmp
clc
xchg
cmp
jne
xor
jmp
mov
jne
call
mov
add
inc
jne
mov
mov
mov
add
stos
add
mov
les
xchg
iret
add
inc
jl
out
cld
add
xchg
add
push
pop
add
paddq
xchg
add
adc
test
incl
incl
rorb
decl
inc
inc
incl
data16
rclb
mov
lock
jle
mov
mov
jge
mov
adc
enter
dec
or
mov
lods
ja
mov
pop
lea
inc
clc
inc
outsb
lea
push
inc
mov
pop
mov
jae
cmp
adc
pop
inc
sbb
mov
or
cmp
mov
cld
xchg
add
add
lea
adc
or
faddl
push
add
push
inc
add
push
adc
mov
fdivr
cli
dec
add
add
add
xor
cmp
mov
lock
rcl
pop
add
pop
dec
cmp
mov
add
push
dec
in
mov
push
pop
mov
add
add
add
inc
mov
hlt
push
decl
push
add
pop
or
jns
ret
jmp
mov
in
jge
sysexit
cmp
cmp
sbb
pop
add
jae
mov
lcall
mov
mov
fdivs
xor
movl
add
push
ret
mov
jne
mov
faddl
xor
push
or
icebp
incl
rolb
inc
stc
mov
lock
add
dec
add
mov
call
sbb
mov
pop
jge
lea
decl
or
leave
fadds
dec
add
xchg
add
mov
mov
or
dec
pop
mov
in
pushf
mov
push
call
add
cmp
add
add
mov
mov
mov
sub
add
clc
mov
add
dec
push
xor
xor
in
add
inc
jmp
xor
mov
adc
xor
jne
mov
mov
hlt
pop
add
in
push
in
dec
push
xor
mov
mov
in
dec
addb
add
mov
test
dec
push
mov
mov
clc
into
dec
lret
lock
test
push
jge
push
enter
dec
cld
jmp
pushf
inc
mov
sub
int
mov
mov
adc
enter
jmp
xor
mov
or
call
cmp
fs
add
leave
rorb
push
inc
in
mov
or
lock
test
clc
rolb
xor
pushf
add
mov
cmp
sub
jmp
mov
lock
mov
push
icebp
xor
mov
enter
add
cld
scas
add
dec
mov
xor
xor
add
add
test
mov
adc
je
xor
xor
add
add
rorl
enter
icebp
or
lock
enter
lret
or
mov
cld
bswap
pop
mov
in
hlt
pop
jne
xor
xor
jbe
mov
clc
pop
mov
mov
clc
mov
adcl
inc
in
xor
inc
cld
xor
add
inc
test
clc
hlt
inc
test
inc
inc
aad
xlat
pushf
mov
mov
xor
mov
xor
add
pavgb
test
dec
inc
mov
cld
xlat
enter
lret
add
leave
jne
mov
enter
lret
scas
out
jmp
mov
cld
add
xor
jmp
xor
add
rorl
dec
mov
cld
lea
mov
mov
xor
enter
stc
add
call
pop
xor
sub
enter
inc
in
xor
clc
xor
pushf
ss
pushf
call
mov
loopne
inc
test
clc
add
push
mov
push
inc
push
mov
mov
mov
xor
dec
cld
mov
or
into
inc
iret
or
add
mov
xor
xor
mov
hlt
bswap
roll
xor
mov
xor
call
enter
mov
lock
inc
mov
inc
inc
enter
inc
mov
mov
roll
add
push
into
in
movb
dec
or
xorb
add
add
in
push
inc
mov
adc
push
xchg
popa
iret
dec
sahf
mov
clc
add
cmp
jne
addl
or
or
push
dec
jnp
dec
xlat
mov
call
lsl
cld
sti
lahf
mov
mov
clc
iret
dec
lret
xor
lea
dec
inc
mov
mov
int
sub
lock
mov
in
xor
pushf
xor
jne
mov
in
dec
mov
nop
add
pop
mov
mov
ret
mov
mov
mov
dec
add
jo
push
inc
jne
mov
push
push
ret
push
inc
xor
add
jnp
jg
ljmp
inc
mov
push
cmp
dec
xor
cmp
jne
orl
jmp
mov
push
add
add
add
cmp
mov
sbb
mov
xor
mov
xor
pushf
test
clc
adc
test
xor
lock
xor
add
mov
sbb
mov
rolb
iret
or
cmp
xor
or
xor
add
mov
inc
inc
mov
mov
mov
cmp
dec
decl
inc
mov
or
sbb
inc
inc
mov
or
dec
push
dec
inc
rclb
push
inc
decl
rolb
inc
inc
mov
sbb
inc
push
xor
lea
cmc
xor
add
mov
inc
inc
mov
ret
inc
add
adc
test
clc
inc
inc
mov
loopne
enter
inc
test
mov
sbb
dec
ret
sub
add
xor
lea
lods
jb
add
sar
xor
inc
int3
xor
xor
pushf
adc
inc
les
test
clc
inc
inc
pushl
hlt
pushf
jne
mov
or
bound
clc
lea
cmp
shl
mov
or
dec
imul
incl
inc
add
pavgb
movl
clc
iret
inc
lock
lret
fmull
mov
test
mov
loopne
inc
loopne
inc
loopne
xbegin
adc
jb
mov
inc
inc
push
mov
incl
mov
loopne
rol
test
dec
push
decl
push
mov
add
cmp
add
call
clc
test
xor
pushf
mov
or
iret
test
mov
in
pop
dec
add
add
dec
mov
in
dec
or
iret
add
testl
test
add
add
mov
or
add
cmp
add
mov
mov
lock
dec
test
dec
add
cmp
or
mov
dec
push
lea
lods
mov
clc
cli
or
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
clc
rorb
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
in
add
add
mov
in
mov
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
cli
or
cmp
je
mov
ret
or
lock
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
lock
rorl
jb
add
ja
sbb
xchg
enter
inc
decl
loopne
jb
add
dec
adc
add
inc
rcll
mov
xor
jb
add
jne
decl
add
repnz
inc
mov
mov
shll
mov
movsb
add
push
adc
inc
pushl
mov
add
mov
test
inc
mov
lret
mov
sbb
inc
mov
xor
enter
inc
add
cld
test
sahf
jne
mov
fsubrs
decl
hlt
xor
sbb
call
pop
or
dec
adc
push
add
cmp
je
mov
or
push
lea
clc
or
push
inc
or
pop
call
test
jne
mov
movsb
xlat
inc
push
push
or
push
decl
dec
adc
roll
sbb
dec
je
push
call
test
inc
iret
add
clc
jmp
mov
test
or
add
inc
mov
mov
and
push
mov
rolb
iret
orl
push
clc
jmp
add
mov
jmp
addl
pop
inc
pop
sbb
inc
add
clc
and
mov
and
mov
and
mov
and
xor
push
mov
xor
mov
mov
mov
push
add
mov
cmp
mov
dec
add
push
adc
push
cmp
and
mov
and
xor
jb
add
inc
and
lea
and
push
jmp
cli
and
clc
and
call
jmp
dec
aas
or
cmp
bswap
mov
add
and
mov
mov
or
inc
jmp
addl
push
inc
sbb
dec
test
movb
xor
pushf
inc
jmp
addl
jne
or
or
jne
call
mov
add
adc
add
add
add
incl
push
cli
add
shll
inc
jmp
xor
test
cli
incl
incl
and
mov
or
and
and
add
push
and
and
add
ss
incl
xor
mov
and
pushf
pushf
clc
decl
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
in
jp
jp
jnp
adc
popf
lret
insl
mov
pop
add
clc
mov
out
fsub
fdivrl
fwait
lcall
insl
test
iret
stc
xchg
mov
lcall
shlb
xor
ss
test
loop
ret
test
jbe
stos
iret
es
xchg
sti
std
inc
cmc
sbb
popa
enter
insb
add
fmull
jle
fwait
lret
mov
lds
out
jge
int3
push
jle
rorl
pop
in
mov
lods
mov
jmp
or
sbb
lods
add
mov
push
mov
stos
mov
scas
jne
push
sbb
mov
dec
push
je
js
xchg
inc
shrl
mov
rcr
jle
adc
mov
repz
addb
stos
rsm
inc
adc
jns
xor
push
sbb
xchg
test
loop
fmuls
imul
mov
enter
mov
loopne
and
add
dec
fyl2x
jp
call
cmp
decl
test
inc
dec
xor
cmp
fisubl
ror
dec
xchg
push
cwtl
adc
mov
or
inc
xchg
jb
fstpt
testb
mov
pop
loopne
arpl
fldenv
mov
mov
jo
push
mov
adcl
iret
pushf
into
jbe
pop
out
test
in
repnz
xor
inc
punpckldq
jge
jbe
cli
test
cmp
or
mov
sub
dec
std
mov
mov
fldcw
test
sub
add
jnp
mov
and
xchg
pop
out
adc
inc
call
rclb
xor
fs
scas
xor
jo
out
sub
lcall
js
or
fistpl
shr
lahf
adc
enter
sub
lds
icebp
repz
sahf
iret
add
mov
shr
add
cwtl
xor
jmp
sub
inc
jb
mov
lret
mov
cmc
mov
inc
pop
cmpsl
adc
ret
push
pop
and
inc
or
adc
pop
jno
xor
cmc
in
aam
add
ds
jnp
cmp
mov
fidivrl
dec
imul
push
ss
int3
pop
push
jb
out
pop
and
jae
jne
out
ret
dec
xchg
jp
jmp
and
pop
mov
cmp
dec
push
adc
mov
or
jmp
push
mov
mulb
push
aas
jmp
pop
and
cmc
out
mov
dec
adc
mov
cltd
dec
and
scas
sbb
cltd
add
loop
in
mov
mov
pop
mov
adc
jne
cld
cmp
push
movsb
cwtl
loopne
testl
jbe
xor
pop
sub
mov
fcomps
xor
aaa
cmp
jle
pop
and
lods
bound
sbb
inc
imul
or
mov
inc
xor
push
cmp
lods
jno
ret
fldcw
data16
pop
sahf
bound
push
ret
push
pop
inc
pop
dec
int
lcall
mov
mov
pop
shl
rcrb
mov
add
and
ss
es
pop
rorl
sbb
xor
adc
ret
pusha
adc
push
sbb
jmp
adc
cmpsb
sub
filds
or
jo
cmp
and
femms
xchg
sbb
scas
push
push
inc
addb
pop
push
mov
and
add
aam
jecxz
mov
adc
outsl
pop
sbb
sbb
clc
xor
aad
pop
sbb
push
cld
scas
call
adc
inc
mov
mov
pusha
lock
pop
mov
push
and
mov
mov
lods
inc
xchg
scas
fs
addr16
push
je
test
popa
cmp
rcr
add
daa
pop
cld
int3
pop
popa
xor
jno
mov
aam
mov
dec
jmp
ljmp
xchg
mov
stos
jno
or
mov
into
pop
mov
popf
ss
fwait
int3
int
mov
cmc
mov
pop
pop
popf
cli
dec
fs
es
neg
jbe
movsb
dec
sbb
jmp
test
das
mov
sbb
mov
pop
xchg
lahf
inc
test
out
lcall
add
or
mov
scas
pop
push
popf
jge
add
out
pusha
mov
sub
push
hlt
scas
push
loopw
jbe
iret
xchg
xchg
mov
cmp
mov
sub
push
lcall
stos
mov
lods
cmc
mov
arpl
pop
test
pushf
orl
and
fdivrl
xor
pop
arpl
mov
xchg
cmp
inc
xchg
adc
scas
mov
adc
lret
mov
pop
imul
imul
pop
adc
out
pop
pop
mov
xlat
adc
repnz
sub
cmp
pop
icebp
jns
sarl
nop
sub
icebp
pop
add
rcrl
cmp
bound
sub
jge
hlt
mov
adc
icebp
sub
and
imul
orl
cmp
adc
push
inc
pop
push
or
xchg
fstpt
scas
mov
fs
in
push
pop
mov
pop
test
fst
add
sbb
sbb
or
and
jo
pusha
xor
add
cmp
lea
and
inc
iret
pop
stos
icebp
mov
inc
fwait
ds
mov
mov
fcoml
lock
mov
or
xchg
loop
cmp
and
sti
loope
cs
lret
mov
fcmove
lock
pop
cmpsb
xchg
adcl
sbbl
stos
je
fucom
out
dec
sahf
and
sbbb
sbb
rorl
jecxz
cli
push
int
mov
arpl
int
inc
lretw
popa
sbb
out
cmp
outsl
jg
inc
scas
sbb
xor
cmc
dec
ja
lea
sbb
call
xchg
insb
lret
sti
repnz
testl
shl
enter
inc
mov
in
bound
hlt
aas
les
jle
lods
icebp
fsubrl
int
repnz
imul
adc
xor
shlb
lods
mov
lcall
add
xchg
mov
sbb
ds
adc
call
add
push
bound
ljmp
inc
inc
xor
scas
sbb
gs
jo
das
and
lcall
xchg
dec
dec
popa
leave
gs
mov
test
or
jns
int
outsl
sahf
shrb
adc
shr
js
cmc
icebp
insl
adc
mov
loope
push
sub
stc
popa
cmp
xchg
xchg
out
and
addb
addr16
sar
mov
lea
shll
dec
or
adc
or
sbb
in
fsubs
mov
mov
int3
push
imul
shlb
in
shll
jno
das
orl
mov
mov
aas
pop
add
dec
mov
loope
jle
shrl
adcb
lods
aaa
mov
push
mov
or
pop
loopne
cmpsl
ffreep
ret
aas
inc
ret
xor
xor
scas
sbb
ret
cmp
sub
jg
mov
xchg
and
out
adc
mov
sub
jnp
fcmovne
aam
movsb
fwait
add
in
adc
jg
into
sbb
jp
popa
pop
adc
mov
push
mov
ljmp
cmp
mov
sbb
xchg
sti
outsb
fiadds
shll
and
xor
lods
adc
fists
icebp
lock
ja
mov
iret
cltd
mov
fs
lods
scas
mov
mov
arpl
jecxz
pop
or
popw
in
cmpsl
loop
sti
sub
mov
sub
add
xor
inc
jp
adc
cmp
enter
push
cmp
adc
sub
lods
pop
jl
inc
insl
rorb
mov
fldt
adc
mov
iret
cmp
mov
or
xor
push
sbb
jbe
mov
adc
lret
cld
adc
in
mov
xlat
fucomip
pop
lock
and
push
jmp
bound
ds
adcl
push
jl
cmpsb
pop
or
sahf
leave
mov
push
imul
in
int3
xorb
sahf
and
cmp
iret
call
les
les
rclb
pop
sub
loopne
stc
gs
or
mov
jg
clc
sub
xor
aas
cld
pop
dec
and
sti
ljmp
icebp
outsb
scas
sub
loop
and
pusha
push
adc
xchg
jmp
int
insl
pop
mov
mov
xchg
add
push
aas
sbb
dec
insb
mov
dec
das
sub
mov
aaa
test
repz
mov
mov
test
mov
adc
mov
arpl
les
test
xorl
neg
sbb
ret
pop
orb
cmpsl
in
sbb
test
mov
cmpsb
test
mov
lret
mov
cli
rcr
mov
fdivp
push
inc
icebp
movsl
xor
rorb
push
in
popf
lcall
shr
sbb
cmp
push
in
push
xchg
mov
repz
lahf
addl
aas
sti
ja
xchg
pop
xchg
push
xorb
scas
xor
sub
or
cmc
out
sbbb
push
pop
insl
mov
push
dec
cmp
push
fidivrl
or
jo
popa
push
jg
sbb
add
and
sarl
jp
idivl
sub
sub
mov
aaa
stc
push
lock
xchg
xor
cmpsl
pop
mov
cs
mov
data16
enter
lods
popa
rorb
pop
pop
mov
mov
lds
jno
aad
mov
mov
mov
les
add
std
mov
and
test
incb
out
xor
or
jecxz
insb
mov
mulb
loope
xchg
leave
jmp
sbbl
lods
pop
pop
popw
xor
rcrb
loopne
mov
pusha
dec
ja
adc
adc
mov
aaa
cmp
dec
fwait
sub
adcl
jo
and
jb
pop
cmpsb
mull
adc
aas
aas
lea
push
cmpsl
or
popa
in
sarl
lcall
or
cmpsb
loopne
dec
movsl
pop
push
sub
movsl
jge
ficoms
sbb
in
pop
push
jecxz
dec
mov
add
cmp
in
mov
push
or
push
xlat
sub
and
push
into
test
inc
cli
mov
sbb
dec
mov
jecxz
mov
cld
add
jecxz
adc
out
pusha
jecxz
insl
in
movsl
test
inc
shrb
cmpsl
fs
sarb
mov
mov
pop
es
xchg
sahf
insb
pop
cli
sbb
jnp
out
sbb
aam
mov
in
lods
lods
inc
outsl
xor
fdivp
out
lock
and
mov
and
sub
and
jl
push
jg
fnstcw
pop
test
add
cmp
pop
repnz
jbe
jl
cmc
js
mov
inc
mov
pop
lods
sub
jbe
dec
mov
cli
movsl
mov
das
or
ss
xchg
sub
and
imul
out
int
rolb
xor
gs
mov
aaa
pop
jle
mov
test
xchg
cmp
shlb
add
lret
push
loopne
data16
insb
inc
mov
stc
popf
mov
xchg
push
scas
inc
loope
and
add
leave
xchg
add
mov
add
push
and
outsl
cmc
push
pop
xor
mov
insb
lret
lods
cmp
loop
bound
pop
fimuls
dec
popf
insl
ss
add
popa
ret
icebp
inc
sti
mov
pop
dec
xchg
test
pop
je
fcoms
pop
xor
add
scas
pop
mov
and
dec
gs
repz
pop
mov
push
divl
loopne
xor
pop
xor
mov
scas
sub
lret
lcall
and
mov
pop
jl
cmpsl
sbb
adc
cmp
out
sti
jle
and
cmp
in
jnp,pt
out
sub
xchg
iret
sub
daa
hlt
int
repnz
and
setne
cs
outsb
lret
iret
shr
scas
movsb
mov
je
pop
lock
cmpsl
fsubr
fcmove
mov
xor
cmpsb
cld
imul
push
push
gs
pop
cmp
aaa
imul
inc
dec
popa
test
enter
addl
xlat
push
dec
add
mov
negl
cmp
adcl
int
shlb
cmp
idivl
popf
fmull
es
add
add
fs
mov
aam
add
scas
out
lock
and
icebp
fistps
cmp
pusha
xchg
shr
hlt
stc
adc
or
movsb
mov
and
xchg
adc
and
and
jmp
rcl
mov
inc
test
dec
sbbb
lock
mov
decb
jge
ret
int
cmc
aaa
mov
push
insl
fwait
sbb
scas
std
mov
mov
sarl
xlat
push
jb
inc
das
inc
xor
out
mov
nop
jg
push
fcmovnu
sub
std
filds
cmp
mov
loop
xchg
cmp
and
fimull
dec
sub
ljmp
aad
imul
mov
sbb
scas
stc
or
push
loopne
dec
adc
jae
xchg
pop
jl,pt
sbb
out
sbb
lret
mov
aam
outsl
out
xchg
add
add
sti
adc
lock
xchg
mov
mov
je
push
out
pop
xchg
dec
sub
adc
mov
sbb
push
and
mov
es
les
ss
mov
int3
ja
sub
mov
mov
pop
loope
cmp
xor
cmp
xor
lret
fdivrp
es
unpcklps
inc
push
mov
es
mov
les
lock
sahf
aas
sbb
lahf
mov
sbb
jmp
cltd
inc
jnp
push
ja
cs
dec
pop
arpl
mov
fistpl
cltd
stos
push
negb
cmp
pushf
xor
xchg
inc
adc
fdivrs
leave
xchg
nop
jge
test
dec
push
scas
xchg
outsl
loope
notl
scas
bound
xor
push
rorl
loopne
sbb
dec
cmp
loopne
dec
xchg
mov
pop
mov
or
out
cld
ret
sbb
test
cwtl
or
es
lea
cmp
jge
xchg
jecxz
inc
in
loope
loop
mov
jge
stc
je
and
adc
pop
leave
dec
subb
fwait
cli
sti
xchg
jo
fs
inc
pop
sub
dec
push
lods
push
add
mov
xor
inc
and
sahf
lods
adc
sbb
fidivrl
push
push
mov
ja
mov
xchg
fisubrl
jle
pop
std
cmpsb
xchg
and
xchg
inc
ja
add
lahf
ljmp
jl
mov
aam
in
lods
xchg
sbb
sub
pop
lods
sarl
dec
add
gs
jmp
stos
notl
sbb
sub
push
pop
adc
fildl
mov
test
mov
popf
fisubs
ror
aaa
shlb
mov
xchg
es
dec
push
dec
lock
cmp
jo
out
rclb
lods
shrb
mov
sbb
jno
out
mov
rcrb
cmp
shlb
arpl
add
and
ret
add
inc
dec
cmp
hlt
jne
dec
sub
pop
inc
ret
pop
rcll
sbb
xchg
fimull
scas
xor
mov
cli
shrb
mov
repz
push
pop
test
ss
mov
out
xor
out
stc
and
inc
push
sbb
push
mov
aas
sbb
cmc
cmp
rclb
cmc
enter
xorb
add
leave
add
sub
jmp
adc
inc
xor
out
ds
repz
jno
fisubs
mov
ja
cmp
xor
mov
in
mov
ja
scas
mov
call
stos
data16
ds
cmc
mov
jne
adc
test
in
inc
adc
xchg
imul
test
mov
mov
lods
mov
dec
xchg
test
ljmp
bound
cld
sbb
mov
fistpl
mov
jbe
sahf
pop
mov
fsubp
add
enter
neg
pop
arpl
mov
push
outsb
cltd
adc
test
xchg
push
inc
sbb
jmp
rorl
in
mov
xor
adcb
lods
mov
lock
add
popf
arpl
fstl
movsl
xchg
or
les
clc
rcll
sbb
pusha
mov
aaa
sub
inc
shll
rcrb
mov
mov
test
lcall
into
dec
xchg
stos
xchg
pop
sub
push
inc
clc
jae
xor
dec
fmuls
and
push
mov
dec
cmpsl
add
add
call
fistpll
mov
add
jmp
enter
jmp
jae
pop
je
sti
and
pop
mov
rorl
push
std
add
lea
out
jno
push
scas
pop
imul
dec
fcomps
sub
test
sbb
mov
test
cwtl
cli
test
pushf
pop
lods
lret
idivl
insb
dec
or
pop
or
fucomi
test
jb
imul
out
xchg
shrb
xchg
aaa
push
repz
jne
jecxz
test
push
pop
sbb
and
sbbl
jo
les
jnp
movsb
pusha
fisubrs
jge
adc
mov
sbb
sbb
push
xchg
ja
sbb
in
xchg
mov
push
mov
test
mov
jns
and
inc
pusha
gs
repz
push
inc
cmpsb
lock
jo
dec
and
xlat
mov
jle
int
bound
jns
insb
fmull
adc
or
outsl
mov
mov
xlat
scas
nop
aaa
adc
cs
je
mov
or
enter
gs
movsl
xchg
xchg
and
sbb
adc
bound
sahf
out
or
or
mov
or
xor
mov
lods
or
cmp
bound
test
daa
sub
mov
hlt
pop
lcall
xor
xor
jo
xlat
ja
icebp
inc
pop
fcmovnb
ficoml
add
pop
add
cvtps2pi
mov
data16
enter
and
adc
insb
sti
or
ret
mov
inc
scas
fucomi
call
add
out
mov
repnz
or
push
mov
popf
mov
mov
fwait
cltd
adc
int3
jge
fldt
mov
mov
movsl
mov
mov
xchg
cwtl
mov
add
add
ss
or
pop
in
testl
dec
pop
sub
add
and
jnp
shll
push
xor
call
divl
pop
div
iret
gs
mov
movl
shll
mov
std
cmpsb
jnp
in
lods
mov
ror
add
negb
movsb
jg
out
pop
lahf
lds
sub
repnz
mov
arpl
inc
outsb
mov
adc
dec
pushf
lds
std
mov
lahf
pop
pop
lret
push
out
push
test
or
fisttpl
out
insb
jo
or
ffree
add
lcall
repz
imul
outsl
rol
incl
inc
jle
xor
nop
sbb
clc
add
dec
mov
jge
jb
lcall
jg
xchg
xor
pop
pop
xor
test
sbb
sub
movsb
cs
out
test
fdivrl
or
out
outsl
scas
mov
lcall
iret
js
enter
cs
imul
shl
or
fbstp
cmp
imul
xchg
pop
jb
int3
sbb
xor
add
test
cmp
pop
repnz
mov
jecxz
sub
lods
xchg
xlat
insl
test
adc
jnp
xorb
pop
leave
xchg
cwtl
xor
mov
mov
ss
popa
mov
lahf
movsl
inc
insb
imul
jecxz
ret
add
out
rcll
jmp
aad
fidivl
mov
pop
addr16
movsl
in
add
mov
dec
add
mov
xchg
and
stos
inc
jae
dec
cli
adc
rcl
or
pop
data16
pop
jne
or
scas
int
dec
jne
adc
jg
or
sbb
ds
addr16
xchg
lock
push
xchg
adc
mov
pop
jne
icebp
scas
iret
insb
fidivrs
test
jl
and
jne
mov
mov
or
aaa
ja
add
iret
cld
fs
jbe
and
bound
and
cli
cmp
and
fnstenv
and
loope
lret
mov
shrb
xchg
insl
cmp
mov
push
cmp
mov
loop
fidivs
js
add
mov
xlat
push
sarb
adc
stc
call
test
jmp
sub
sub
icebp
push
dec
stos
sahf
push
les
int
xchg
jge
adc
push
dec
enter
mov
in
into
test
int
loope
cli
jno
push
adc
jmp
inc
mov
scas
inc
or
inc
ss
cs
mov
imul
cmp
lahf
rorb
add
mov
idivl
lods
sbb
cmp
ss
mov
movsl
jnp
xor
push
and
fsubrs
mov
rcr
adc
xor
push
adc
shrl
xchg
add
ss
add
cmp
and
xor
dec
xor
cmpsw
inc
push
cmp
je
mov
jb
xchg
in
jl
js
fidivs
popa
push
cmc
cmp
cmpsl
andl
pop
test
fdiv
dec
jns
jmp
les
cmp
sbb
or
outsb
mov
adc
in
inc
add
and
ficoms
add
std
sub
out
mov
fwait
addb
mov
sub
pop
cmp
enter
gs
pop
jge
subb
jbe
aaa
or
xchg
xchg
cld
in
xchg
sbb
xor
xor
movsl
enter
or
and
pop
jl
jmp
in
and
aad
lret
push
jmp
xchg
lods
aaa
adc
mov
aam
es
loopne
iret
pop
js
jl
xor
clc
sub
xchg
outsb
cmpsb
jns
xorb
lahf
jp
fs
ss
lods
adc
cld
jecxz
add
push
loopne
mov
adc
pop
or
add
push
rcrl
mov
adc
add
rolb
lahf
loopne
aas
or
out
sub
fidivrs
mov
ret
jae
movsl
or
scas
fstpl
cmpsb
push
fdiv
adc
lods
or
arpl
std
push
es
shrb
adc
ss
jmp
test
in
adc
xchg
xchg
outsb
pop
sub
test
sbb
mov
fidivrs
mov
pop
pop
adc
mov
mov
ret
and
mov
shlb
mov
icebp
rcr
aaa
outsl
mov
fucomip
xor
xchg
xchg
sbb
xchg
stos
cmp
jecxz
subl
test
inc
scas
mov
sbb
jg
add
mov
dec
testl
dec
outsl
add
xchg
ljmp
sub
and
push
insl
add
ss
jnp
and
loope
ret
pop
mov
out
sub
and
cmp
pop
jno
cmp
dec
mov
xor
jbe
inc
inc
pop
inc
add
adc
sbb
arpl
sub
xor
pop
mov
inc
push
stos
pop
xchg
add
dec
andl
gs
fwait
jge
dec
clc
in
xchg
pop
xor
add
jns
push
push
nop
xor
jns
or
cmp
xor
outsl
inc
mov
mov
out
pushf
jmp
sahf
mov
ljmp
adc
or
push
xchg
sahf
sbbb
pushf
adc
xchg
lahf
scas
sbb
cmp
mov
mov
pusha
daa
add
push
gs
xchg
xchg
cmp
rol
cmp
mov
sarl
xchg
push
and
xor
pop
iret
fs
in
sarb
mov
sbbb
inc
leave
cmp
movsb
add
xchg
or
mov
icebp
push
lahf
mov
pop
add
push
lods
divb
arpl
das
mov
clc
mov
mov
push
fs
lods
jb
loope
or
sub
mov
stos
or
sub
std
inc
or
fildll
popf
push
mov
mov
sbb
jno
stc
nop
test
loop
and
popl
adc
dec
or
in
mov
testb
lods
push
jbe
pop
shll
sbb
aaa
loope
fcmovu
movsb
xchg
dec
xchg
aas
xchg
fxch
add
ljmp
push
leave
xchg
mov
dec
jns
jmp
add
add
movsl
pop
xor
int
ficoms
mov
add
fistpl
xor
adc
jb
cmp
shll
xchg
sub
jbe
xor
xchg
inc
shrl
dec
push
fmull
shlb
rcll
add
and
inc
jb
pushf
mov
mov
mov
and
sub
call
dec
stos
pop
jge
adc
xchg
or
and
push
sbb
xchg
nop
cmc
push
frndint
out
mov
movsb
sub
insl
nop
fistl
push
dec
mov
mov
dec
jp
dec
cmp
js
jo
lret
pop
movsb
inc
mov
and
icebp
repz
fimull
cmpb
mov
jbe
imul
xchg
add
sub
outsl
jo
inc
jmp
insl
push
aas
cmp
lahf
mov
ret
cld
fildll
mov
cmpsl
gs
adc
xchg
jmp
xor
fnstsw
movsb
aam
lret
movsb
push
out
sbb
hlt
jnp
hlt
dec
xor
shr
push
add
icebp
dec
stc
das
inc
xor
insb
sub
je
sbb
popa
dec
pop
or
fists
pop
korw
call
daa
clc
in
cltd
adc
fidivs
je
andl
pop
push
orb
cld
xor
bnd
hlt
pop
add
dec
call
dec
les
cmp
cmpsb
in
jns
xor
mov
inc
cwtl
pop
ret
enter
cld
jge
sub
jb
loop
or
jno
mov
xor
adc
sbb
cwtl
dec
ljmp
cmp
mov
push
ret
jne
pop
ja
jl
xchg
xor
fsubrs
sbb
pop
mov
and
add
fcom
cwtl
or
mov
cmp
jmp
xor
or
loope
scas
adc
in
inc
xor
mov
sbb
insb
jecxz
and
arpl
sahf
or
aam
mov
inc
jmp
cmc
lods
lret
sbbb
out
lea
and
cmp
mov
aad
xor
mov
cli
mov
mov
pop
movsb
enter
sub
dec
mov
sub
fcompl
mov
mov
pop
cli
adc
xchg
int3
pop
inc
mov
cmp
cmp
mov
outsl
fidivs
xor
cmc
sbb
filds
ds
jmp
cmp
and
cld
cmp
stc
imul
setle
push
pop
int3
mov
pop
and
pop
leave
sbb
aam
jbe
xchg
push
cmp
cmp
dec
call
leave
leave
sbb
pop
push
lahf
or
test
in
pop
std
dec
out
cmp
out
pop
cmp
cwtl
shr
or
scas
ret
adc
mov
jae
insl
sbb
ds
lds
push
movsb
not
in
rol
jg
cmp
xor
test
mov
out
dec
or
mov
clc
fsubrs
jmp
xchg
lods
add
test
mov
mov
push
mov
cmp
cs
jae
add
test
enter
cmpsl
dec
mov
push
sub
pop
cmp
rcl
iret
pop
mov
pop
cmc
xchg
pop
pop
out
mov
movsb
js
mov
add
lods
scas
arpl
inc
adc
addr16
mov
js
and
fimuls
xchg
dec
test
or
clc
push
dec
mov
ljmp
pop
and
movsb
notl
and
adc
imul
je
ss
bound
add
fstps
mov
loope
popa
xchg
jg
aas
cwtl
xlat
nop
dec
repnz
cmpsl
push
repz
ficoms
dec
xchg
hlt
dec
add
jnp
push
into
ret
imul
sub
imull
gs
xor
addl
mov
xor
jne
cli
jne
cmp
pop
mov
pop
das
sub
or
mov
pop
cmp
mov
and
dec
sahf
and
in
sahf
out
pushf
cld
fwait
fwait
xchg
jno
jb
lret
cli
push
clc
push
icebp
mov
sbb
test
fldt
push
sbb
push
fwait
xchg
ret
enter
cmp
insb
pop
and
xor
js
adc
aas
imul
jp
shrb
lcall
push
adc
in
push
mov
jl
mov
mov
pushf
mov
popf
pop
xchg
out
cmpsb
adc
jecxz
stos
ja
fwait
mov
xchg
push
adc
setp
sub
jno
jb
dec
inc
mov
popf
repnz
inc
sbb
cld
mov
adc
dec
mov
pop
pop
mov
arpl
pop
gs
call
cmp
lret
push
push
aas
pop
pop
xchg
jmp
in
mov
sahf
lret
cmp
pop
or
iret
add
int3
ficoml
adc
adc
loop
cmp
dec
inc
int3
lds
addl
mov
insl
aaa
insb
dec
and
sbb
test
shll
stos
and
es
stos
jl
movsl
sbb
arpl
ret
mov
sbb
lcall
pop
jne
dec
mov
inc
das
shl
das
ret
rol
mov
add
cmpsb
out
ljmp
sub
cmp
push
ds
push
push
popa
js
mov
icebp
push
mov
dec
mov
pop
scas
push
push
pop
stos
cmp
flds
and
jl
sbb
in
aam
jmp
leave
jmp
test
aam
jp
xchg
inc
ljmp
hlt
cmp
mov
dec
jbe
inc
out
adc
mov
cmp
push
and
add
dec
shll
imul
cld
pop
jecxz
ret
xor
lcall
enter
inc
mov
cmp
mov
pop
andl
dec
dec
inc
clc
lcall
mov
lcall
lock
cmc
add
das
icebp
scas
aas
push
push
jae
push
les
pop
mov
aaa
xor
pop
push
rcl
cmp
xor
mov
lea
push
ss
push
int
xchg
repnz
mov
mov
adc
push
nop
jle
cmpsl
cmc
adc
or
and
push
jmp
dec
mov
lret
xor
jb
ret
and
push
cmp
cmp
mov
push
mov
out
bound
stc
push
add
out
nop
fidivs
inc
stos
cmpsl
nop
xor
mov
fldt
mov
out
dec
fistpll
push
cmp
ret
and
jno
push
push
mov
dec
add
add
daa
jbe
idivl
mov
push
adc
jae
add
and
inc
or
mov
sub
add
xchg
je
or
jg
andb
jo
pop
sbb
dec
lea
jmp
jg
mov
push
repnz
cmp
mov
arpl
sub
pop
and
insl
out
or
mov
aad
into
xchg
movsl
mov
lahf
mov
and
xchg
mov
pop
adc
sub
pop
popa
jnp
adc
sbb
xchg
pop
lods
xlat
dec
add
test
ja
repnz
lods
fnstcw
jnp
setb
movsl
cli
dec
mov
loope
lcall
adc
xchg
test
es
inc
fmuls
push
add
inc
call
inc
movsb
fcompl
cmp
inc
mov
push
ret
lret
or
sarl
les
xchg
mov
cs
ljmp
xlat
push
lret
cmpb
fistpll
mov
mov
or
notl
mov
lahf
pop
sub
aaa
xchg
stc
in
mov
imul
lods
jp
push
push
mov
ret
fadds
mov
mov
std
mov
dec
in
xor
fistpll
dec
or
iret
sahf
movsl
scas
and
mov
mov
dec
roll
mov
sbb
fwait
repnz
fisttpll
xchg
sub
mov
adc
test
test
pop
shll
inc
out
cltd
jae
xchg
outsb
aaa
fs
mov
inc
jmp
movsl
mov
mov
hlt
out
bound
aas
xchg
icebp
dec
movsb
mov
and
mov
pop
or
push
loopne
jmp
sbb
jo
in
sub
xchg
dec
and
and
dec
and
cmpb
jp
mov
sub
jne
xchg
lods
mov
jns
out
sub
mov
arpl
push
sub
mov
dec
sub
mov
jnp
mov
mov
test
int3
pop
xchg
imul
daa
push
cs
imulb
out
adc
push
xchg
cs
int3
test
mov
loop
push
out
mov
or
sarb
dec
pop
jg
mov
call
imul
jnp
addr16
jae
or
jle
push
mov
sub
add
mov
mov
xchg
add
inc
jecxz
dec
stc
imul
or
xchg
outsb
cld
sub
push
mov
inc
hlt
pop
jle
out
add
inc
gs
cld
mov
jno
lods
in
adc
movsl
mov
mov
decb
sub
lret
scas
ficompl
pop
mov
add
shll
fmul
pusha
and
add
and
je
ret
mov
xchg
mov
in
outsl
jae
jmp
xorl
jle
imul
push
gs
mov
dec
sahf
pop
fimull
std
cmp
sub
jbe
lods
je
adc
sub
or
rorb
dec
jno
or
mov
lret
outsb
lea
repnz
call
jns
psubsw
sbb
fistps
lods
fildll
adcb
nop
push
pop
mov
scas
add
lods
lods
pop
mov
int
mov
and
cmp
cmp
repnz
lcall
xchg
jnp
inc
mov
mov
les
icebp
scas
leave
sti
cmpsl
fs
insl
test
mov
jmp
and
jnp
pop
dec
lds
hlt
sub
add
pop
push
bound
or
sub
pushf
mull
xor
sbb
mov
lods
movsb
scas
addl
push
std
xchg
dec
mov
lahf
adc
int3
daa
sub
movsb
mov
pop
pop
pop
mov
add
mov
push
cli
xchg
sbb
jno
testl
enter
or
sbb
test
cld
shll
add
jg
dec
adc
push
and
adc
and
push
sbb
xor
cmc
jl
jnp
iret
cmp
mov
mov
mov
mov
ss
enter
cmp
mov
push
aam
movsb
jecxz
inc
rcr
mov
xchg
or
sahf
jge
icebp
insl
jle
push
int
dec
ret
push
in
cmp
add
add
push
xor
jge
mov
daa
push
xor
or
jp
mov
jns
lds
test
in
dec
popa
in
jae
cmc
dec
paddusw
sub
pop
ret
aam
jle
ret
mov
dec
faddl
repz
sbb
push
in
ret
or
and
in
xchg
sysexit
push
mov
in
mov
out
cs
add
lahf
jle
add
hlt
xlat
cmp
lods
and
or
push
mov
pop
xchg
jae
inc
out
movsl
inc
pop
mov
jecxz
repz
inc
fistpll
mov
mov
cs
mov
add
dec
cld
icebp
push
daa
jae
dec
in
pop
push
popa
fwait
gs
daa
jbe
add
fdivs
mov
pop
std
lods
cmp
xor
les
mov
call
leave
insb
pop
int3
arpl
mov
movlps
fisttps
lods
ret
stos
jecxz
cmpsl
adc
iret
mov
mulb
fistpll
iret
sub
pop
movsl
push
jmp
inc
jns
dec
xor
nop
xor
out
in
and
mov
push
cwtl
loop
mov
and
mov
inc
push
nop
sti
mov
mov
and
scas
mov
xchg
sub
mov
push
jge
mov
inc
int
popa
jno
mov
inc
bound
pop
jmp
pop
aas
lahf
sbb
pop
push
aas
bound
adc
pop
inc
lods
fs
fldt
scas
jns
jge
dec
pop
push
cltd
mull
jmp
loopne
jo
pushf
mov
or
push
out
or
mov
jg
dec
cmpsb
mov
adc
adc
mov
push
ficoml
mov
push
aam
mov
pop
sbb
cmpsl
mov
inc
cmp
push
push
inc
cmpsb
mov
inc
xor
xchg
arpl
inc
lods
out
dec
sub
inc
or
scas
lret
arpl
and
popa
add
aad
xchg
call
jmp
stos
push
ja
rcll
inc
or
mov
sbb
add
jnp
adc
lods
push
adc
punpcklwd
add
adc
shlb
add
js
add
xor
aaa
add
push
pop
inc
dec
xor
inc
ss
xor
pop
dec
inc
add
pop
xor
dec
inc
pop
xor
push
pop
xor
push
cmp
add
push
xor
dec
inc
pop
xor
dec
inc
aaa
add
push
xor
pop
inc
inc
push
pop
inc
pop
push
add
xor
xor
inc
add
xor
xor
xor
push
pop
inc
add
push
pop
inc
pop
push
xor
add
xor
inc
cmp
push
cmp
push
xor
cmp
pop
push
dec
dec
add
pop
pop
dec
cmp
cmp
add
xor
dec
inc
xor
pop
cmp
add
xor
push
push
inc
pop
push
xor
push
inc
push
pop
dec
xor
cmp
inc
inc
pop
push
pop
push
dec
pop
push
xor
pop
push
push
cmp
dec
push
push
dec
xor
dec
dec
xor
push
dec
cmp
pop
inc
dec
pop
inc
push
push
pop
inc
add
xor
dec
cmp
push
push
add
dec
xor
xor
inc
dec
xor
ss
dec
cmp
push
push
aaa
xor
xor
pop
push
push
push
dec
pop
inc
add
pop
xor
pop
xor
inc
xor
xor
xor
push
xor
dec
xor
push
add
pop
add
push
add
xor
pop
add
add
push
add
add
dec
add
xor
pop
add
push
add
add
xor
pop
add
add
add
xor
inc
add
inc
add
xor
add
inc
add
add
inc
add
pop
add
add
push
add
pop
add
dec
add
add
inc
add
xor
add
inc
add
add
add
pop
add
xor
pop
add
add
push
add
add
pop
add
dec
add
xor
add
dec
add
add
aaa
add
inc
add
add
inc
add
xor
add
inc
add
dec
add
push
add
inc
add
add
add
pop
add
add
dec
add
add
cmp
xor
pop
add
add
pop
add
pop
add
add
add
push
add
add
xor
pop
add
inc
add
push
add
dec
add
cmp
aaa
add
add
dec
add
pop
add
inc
add
xor
dec
add
push
add
add
dec
add
dec
add
xor
add
add
or
add
rolb
add
or
add
xor
add
pusha
pop
add
loopne
add
adc
add
sub
add
pop
or
adcb
cmpb
add
mov
or
adc
add
lock
addb
add
add
add
add
add
add
add
in
push
add
in
push
add
add
addb
add
add
add
add
add
add
add
sbb
add
add
add
add
add
dec
pop
add
add
add
add
pop
add
test
add
lcall
xorb
add
loopne
add
add
add
add
add
add
add
incb
add
insb
adc
add
add
subb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
inc
or
sbbb
addb
add
add
add
add
add
add
add
outsb
or
xorb
addb
sbbb
cmpb
add
mov
add
add
add
add
add
add
add
rorb
add
jae
add
call
add
add
add
add
add
add
add
jmp
add
add
add
add
sbb
subb
add
dec
add
addb
add
add
add
add
add
add
add
repz
add
add
js
add
add
add
add
add
add
add
or
adcb
add
test
add
rolb
bound
add
fadds
addb
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
push
add
xor
add
or
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
repz
add
add
add
add
add
add
or
add
add
add
add
add
add
adc
add
in
add
add
add
jle
add
adc
add
add
add
add
or
add
add
add
add
add
add
in
add
add
add
shll
or
add
add
add
add
add
insl
add
or
add
add
add
add
jbe
add
or
add
add
add
add
add
jg
add
or
add
add
add
add
add
mov
add
add
add
add
add
xchg
add
adc
add
add
add
add
fwait
add
or
add
add
add
add
movsb
add
adc
add
in
add
add
add
sub
add
in
add
add
add
inc
mov
add
or
add
add
add
add
add
add
adc
add
add
add
add
add
adc
add
in
add
add
add
adc
add
in
add
add
add
mov
add
sbb
add
add
add
add
or
add
add
add
add
add
add
in
add
add
add
int
add
adc
add
add
add
add
incb
add
or
add
add
add
add
add
pop
add
or
add
add
add
add
adc
add
add
add
add
add
or
add
add
add
add
add
add
pop
add
inc
add
xor
pop
add
pop
add
aaa
add
add
xor
dec
add
cmp
push
add
add
dec
add
add
add
push
add
or
inc
add
add
add
dec
add
push
add
add
add
aaa
add
add
add
cmp
cmp
inc
add
xor
dec
add
inc
add
dec
add
add
add
push
add
pop
add
add
or
dec
add
push
add
push
add
add
xor
or
inc
add
push
add
xor
add
add
add
push
add
add
add
inc
add
add
add
xor
push
add
dec
add
add
inc
add
add
xor
pop
add
inc
add
add
pop
add
add
or
push
add
push
add
add
add
dec
add
push
add
push
add
or
pop
add
dec
add
xor
aaa
add
inc
add
add
add
cmp
dec
add
xor
inc
add
add
cmp
pop
add
dec
add
add
add
dec
add
pop
add
add
xor
dec
add
add
dec
add
pop
add
dec
add
push
add
xor
inc
add
add
pop
add
add
add
cmp
cmp
push
add
add
add
push
add
pop
add
xor
add
add
add
push
add
add
dec
add
xor
xor
pop
add
add
pop
add
aaa
add
add
add
add
add
add
inc
add
add
inc
add
pop
add
add
cmp
cmp
push
add
xor
add
pop
add
push
add
add
add
push
add
push
add
add
add
add
add
push
add
inc
add
pop
add
push
add
pop
add
add
xor
inc
add
pop
add
pop
add
add
push
add
xor
inc
add
inc
add
add
push
add
xor
pop
add
or
push
add
add
xor
pop
add
push
add
inc
add
pop
add
add
add
dec
add
pop
add
push
add
push
add
add
xor
pop
add
push
add
dec
add
inc
add
dec
add
add
jmp
jle
js
aam
push
iret
call
pop
add
xor
inc
mov
enter
nop
movsb
enter
jb
cmp
mov
shrb
mov
clc
push
inc
dec
cmc
lea
dec
dec
mov
push
or
in
dec
push
test
dec
jmp
or
xchg
lcall
imul
pop
inc
or
and
fucomi
mov
pop
aam
push
pop
mov
jnp
into
jecxz
pop
scas
mov
outsl
repnz
mov
add
inc
pop
cmpsb
cs
movsb
je
ja
leave
cli
mov
push
cld
adc
push
aam
js
cmp
xor
xor
sti
sbb
lea
fs
test
push
test
lcall
push
lret
jae
lods
es
iret
add
xchg
push
and
imul
in
mov
add
lds
mov
push
int
imul
mov
push
leave
sbb
adc
dec
cli
inc
leave
loope
lret
pusha
mov
fwait
sub
fcompl
xchg
popf
sbbl
bound
in
std
inc
in
jnp
lahf
jl
fs
jmp
lcall
push
xchg
add
jmp
adc
mov
add
mov
mov
ror
bound
incl
jl
xor
xchg
cmp
push
pushl
and
test
nop
insb
lahf
mov
lock
mov
xor
stos
lahf
out
dec
ja
loopne
adc
dec
jmp
xchg
test
push
mov
cmp
xor
lods
push
aad
clc
aas
add
ds
pop
sub
adc
les
rcl
cmp
sbb
fcmovnb
lea
or
out
popa
dec
psrlq
xchg
xor
test
ja
add
add
rcll
dec
sbb
test
push
rcrb
push
outsb
pop
push
cmp
into
adc
dec
push
insl
cmp
mov
das
jnp
inc
add
pop
cmpsb
sub
stos
push
or
dec
lret
stos
insb
popf
jno
sub
or
movsl
int3
sti
pop
pop
mov
mov
and
and
mov
aad
subl
aas
dec
xchg
mov
mov
inc
out
scas
cmpb
in
aam
adc
jno
dec
inc
and
pop
in
jp
mov
je
push
jo
sti
movsb
loopne
cmpsb
cmp
inc
ljmp
outsb
or
cmpsl
cltd
xchg
ljmp
xor
mov
in
cmp
and
pusha
mov
cld
int
mov
pop
mov
out
mov
pop
aad
adc
out
fnstsw
ss
bound
in
stos
movsl
dec
sub
and
xor
mov
inc
jg
out
add
fstp
and
adc
cmpsl
clc
xchg
lods
in
cwtl
pop
pop
mov
pop
loope
dec
jnp
mov
mov
jg
xchg
outsl
dec
xor
pop
mov
dec
call
lds
jmp
pop
outsl
fdivrl
or
cmp
lock
adc
push
xor
test
jbe
sub
jle
dec
mov
inc
cs
jmp
adc
push
jno
add
insb
lahf
xor
mov
in
std
lcall
lods
or
push
jl
ljmp
mov
inc
push
cmpsb
ja
jb
aad
enter
sub
cmp
dec
aam
adc
and
outsb
xchg
int3
iret
nop
sub
sub
rcll
sbb
lds
nop
mov
outsb
jp
cwtl
les
lahf
or
or
hlt
push
lea
es
imul
sub
sub
mov
and
sbb
shrb
add
push
sbbl
aam
pushf
jl
sbb
jle
xor
je
mov
push
icebp
pushf
sbb
cmp
xchg
dec
lret
shll
out
fsubrs
into
push
test
push
mov
xchg
sbb
dec
sub
adc
int3
daa
add
jecxz
ljmp
jo
cmc
and
cmc
and
fadd
push
pop
jnp
lret
decl
jp
pop
inc
inc
mov
or
and
pop
inc
aam
emms
pop
mov
dec
add
mov
push
mov
arpl
stc
ljmp
xchg
lret
outsb
mov
pop
inc
and
lock
adc
sbb
ror
shll
pop
add
mov
pop
sub
leave
mov
cmpsb
sbb
std
add
xchg
push
xlat
pop
xchg
sti
pop
fimuls
in
addr16
jge
jno
loop
sti
inc
ljmp
loop
popf
mov
add
xlat
pop
lea
divl
nop
jmp
fucom
outsl
cmpsl
in
and
data16
cmp
and
rcll
repnz
jns
lcall
jp
pop
mov
jne
sbb
mov
mov
push
dec
cld
xchg
out
outsl
popf
test
xchg
gs
in
sahf
push
scas
cmp
mov
mov
xlat
push
push
mov
xchg
inc
or
filds
outsl
dec
dec
lock
enter
repz
pop
cmp
add
inc
adc
andb
adc
lret
cmp
mov
or
stc
adc
add
int3
xor
dec
xor
aad
out
out
or
imul
cmp
add
js
mov
ret
addr16
add
mov
sbb
dec
ljmp
or
jnp
pop
clc
adc
enter
add
pusha
lods
or
lock
mov
jge,pt
mov
int3
test
ds
adc
jo
test
add
movsl
adc
push
mov
inc
mov
adc
into
jmp
stos
popf
fsts
inc
in
fadds
popa
mov
cmp
adc
lock
out
jl
mov
jp
sub
aaa
cmp
jecxz
fwait
mov
push
mov
mov
pop
sahf
rcrl
divb
xchg
dec
dec
or
dec
xchg
pop
fcomip
popf
int
sub
dec
addr16
outsl
in
sbb
movb
jmp
ficoml
xchg
pop
lret
jmp
sub
inc
inc
xchg
aaa
mov
cmp
adc
ss
or
or
sub
mov
dec
daa
jl
sbb
hlt
or
and
add
add
and
mov
pusha
aaa
xchg
add
fcompl
mov
sti
inc
sub
cmp
daa
repnz
arpl
xchg
add
fsubl
test
mov
push
inc
inc
popa
inc
addr16
jnp
ss
shll
pop
inc
lret
clc
in
pop
mov
fs
inc
pop
fnstsw
dec
sub
aas
movsl
les
arpl
adc
mov
insl
punpcklwd
stos
inc
jle,pn
xor
stos
cmp
dec
xor
and
clc
popa
inc
out
sarb
lret
ds
mov
and
or
int3
mov
jno
fsubrl
xchg
int3
xchg
xchg
or
fwait
mov
mov
jecxz
outsb
inc
decb
sti
cmp
dec
dec
leave
cld
mov
jp
xchg
scas
lcall
cmp
fs
sahf
pop
push
fisubrs
jl
call
dec
fwait
mov
xchg
mov
and
mov
out
mov
into
jbe
xchg
sbb
mov
mov
leave
fwait
sub
mov
push
sub
cmpb
daa
fiadds
xchg
jge
mov
rclb
fildll
inc
lret
cmpsl
ret
pop
repnz
ror
or
aas
jmp
or
negb
cmp
xchg
dec
push
fsubr
test
fstpt
pop
dec
or
test
mov
xchg
push
popf
scas
xor
data16
jnp
pop
clc
jo
adc
int3
arpl
mov
shll
jns
xchg
dec
mov
xchg
cld
adc
dec
mov
ja
push
jg
cmp
push
adc
mov
insl
leave
and
mov
inc
add
es
lods
add
dec
cltd
lar
or
out
call
orl
xchg
push
mov
leave
sub
mov
cltd
push
or
push
cld
adc
xor
test
xor
out
aas
fstp
xor
shlb
das
fnstcw
pop
mov
pop
push
xchg
sub
pop
pop
aaa
fdivl
cli
or
jnp
pushf
push
daa
jno
or
insl
mov
aad
jecxz
ljmp
cmp
pop
fs
inc
int3
mov
cs
jbe
jp
ret
jae
xchg
jno
into
push
mov
lock
and
fwait
call
movsb
adc
cmpsl
scas
cmp
xor
cmpb
std
pop
loopne
call
out
mov
rorl
shrl
lahf
mov
sub
dec
or
rorl
jns
outsb
leave
popf
inc
std
add
pop
arpl
mov
imul
iret
fsubs
lods
cwtl
ja
in
mov
mov
arpl
pushf
xor
mov
imul
jl
jmp
popa
repz
les
dec
push
sbb
sub
es
mov
scas
jb
mov
and
jb
cmp
lods
fwait
jge
int
loopne
add
cltd
cmp
xchg
mov
push
mov
or
jbe
dec
jecxz
lcall
xchg
jmp
and
inc
out
jno
xchg
arpl
jbe
and
add
mov
lahf
scas
xchg
sub
cmp
adc
xor
dec
mov
lahf
push
inc
jg
sbb
hlt
sub
mov
mov
pushf
pop
in
push
jge
lock
mov
pop
imul
mov
outsl
jge
cmpsl
das
push
xor
xor
jp
jbe
dec
cmc
add
sub
addr16
adc
int
fcomps
popa
mov
pusha
filds
and
adc
and
outsl
sub
ret
sbbb
xor
add
jbe
movsb
and
mov
int3
mov
leave
jb
dec
mov
mov
mov
mov
push
lods
clc
fisubl
fisttpll
mov
dec
insl
push
mov
or
inc
add
shll
mov
jae
adc
test
and
lret
cmp
jno
test
sbb
stc
mov
lods
xor
outsl
and
xlat
aas
aaa
aam
jge
out
negb
pusha
negb
ret
shrl
fld
push
xchg
xor
sub
gs
cmpsl
fisttps
daa
ljmp
arpl
in
xor
pop
and
fwait
aam
mov
leave
movsb
iret
std
jae
pop
push
ja
insb
mov
ret
and
xchg
setns
cmp
or
or
push
sbb
movsl
jmp
jmp
jbe
ja
ror
jp
in
aaa
jbe
xlat
cld
cmpb
xchg
repz
dec
mov
jg
inc
insl
imul
imul
cmp
mov
movsl
mov
xchg
push
and
test
jne
pop
lret
jmp
and
adc
iret
popf
lods
or
xchg
and
lds
stos
or
shl
pushf
jae
cmp
jb
pop
jnp
adc
xorl
fidivrl
mov
sahf
sbb
imul
sbb
sti
sub
loop
adc
lahf
mov
dec
or
jmp
pop
jl
jecxz
testl
incl
mov
mov
sub
dec
mov
notl
rcl
sahf
xchg
mov
adc
in
push
pop
lret
adc
xchg
jmp
jle
divl
sub
mov
and
jae
iret
push
aas
aas
repz
les
inc
jne
inc
or
dec
sahf
dec
pop
mov
sbb
mov
xor
and
push
push
and
mov
pop
loope
adc
pop
test
fidivrl
jmp
pushf
inc
testb
outsb
packsswb
push
clc
test
pop
sub
shrb
mov
xor
cmp
pusha
lods
fs
lods
mov
or
in
mov
push
dec
les
fwait
loopne
add
dec
lret
and
dec
cs
pop
dec
jno
inc
jge
dec
test
lahf
repnz
clc
enter
in
ss
mov
or
dec
mov
lds
rclb
cmp
in
sbb
mov
fiadds
add
rorl
adc
aam
fmull
into
pop
inc
loopne
and
mov
leave
inc
xchg
test
inc
aad
mov
xchg
sbb
in
mov
xchg
cld
imul
scas
cld
or
cmpsb
mov
cmc
notl
sarb
stc
xchg
sbb
xchg
fistl
repz
adc
sub
rcr
rcrl
rolb
and
push
out
icebp
sub
inc
pop
push
mov
ret
add
dec
scas
ror
push
pop
mov
cmp
loop
add
dec
in
inc
cltd
push
ja
adc
nop
adc
dec
pusha
and
lock
call
inc
mov
int
mov
stos
lahf
sub
lcall
inc
xor
ret
clc
jp
lods
sahf
and
dec
jns
push
data16
gs
daa
pop
inc
mov
sti
jmp
cs
ja
mov
mov
cld
pop
lds
jnp
or
mov
xor
xchg
mov
inc
sbb
sbb
gs
mov
imul
mov
scas
orb
idivl
lods
jno
shufps
mov
or
add
into
xchg
cmpsl
outsb
jnp
aaa
cmp
lds
into
cmp
mov
pop
icebp
fsubl
or
mov
pop
xorl
push
ret
stos
lahf
jb
lods
mov
fcompl
mov
add
pop
das
xor
mov
in
inc
shrl
mov
lret
clc
push
pop
and
hlt
pop
sub
jecxz
mov
jno
jb
mov
add
pop
jnp
add
adc
pop
sub
sbb
pop
shlb
insb
or
xchg
outsb
test
sahf
imull
add
jno
cwtl
fnstsw
cld
cltd
shr
or
jle
dec
dec
dec
sti
jp
mov
mov
stc
lock
mov
in
daa
pop
or
hlt
daa
loop
cltd
fwait
push
mov
add
cmp
out
cld
xchg
dec
pop
xchg
loop
xor
mov
in
mov
sub
std
mov
test
adc
test
scas
dec
rclb
jge
and
fcoml
test
mov
repnz
push
push
test
out
inc
movsb
inc
adc
int3
xor
gs
icebp
lods
bnd
xorl
cli
cli
mov
push
jb
adcb
clc
sub
shl
add
fcoms
scas
xchg
or
es
cmp
sbb
pushf
in
pop
adc
cltd
add
mov
dec
xchg
addb
mov
adc
adc
mov
outsb
int
subb
int
mov
jo
popf
ds
stc
and
mov
pop
movsb
pop
xrelease
sub
dec
frstor
or
fcomps
iret
mov
mov
xor
jno,pn
out
fyl2xp1
mov
dec
pusha
mov
loope
push
repz
sbb
fcompl
and
and
push
mov
scas
popa
mov
dec
int
sub
or
enter
jecxz
cltd
popf
daa
mov
xchg
jg
push
dec
cmp
push
add
dec
cltd
mov
adc
out
lods
jecxz
sub
pusha
pop
cmp
sub
lea
jnp
or
pop
push
rorb
sub
jle
das
add
pop
clc
addr16
adc
stos
or
hlt
imul
out
jl
js
sub
mov
and
stc
or
lock
lahf
lods
sbb
iret
sub
mov
add
sarb
cld
push
cs
xchg
lods
sub
cmp
and
mov
xchg
jle
xor
or
mov
outsl
popf
lret
and
or
cwtl
imul
xchg
inc
test
cmp
mov
push
popf
jno
ret
xchg
enter
or
std
outsb
mov
and
xchg
mov
jmp
decl
xchg
xchg
mov
pop
mov
or
sbb
cmp
fildl
cli
insb
push
mov
test
outsb
int
sub
repz
xchg
xchg
rcll
mov
mov
fisttpl
mov
lds
mov
dec
lret
add
stos
test
mov
insl
popf
in
fisttpll
lret
sub
jb
cli
xchg
or
addl
das
sarl
and
cmp
inc
cmp
adc
fnstsw
sbbb
push
cmpsb
ja
inc
adc
jl
fs
cmp
les
imul
adc
inc
and
test
pusha
xchg
add
push
cltd
jle
std
push
insb
dec
push
ret
jg
mov
cmp
pop
push
ret
pop
shlb
je
lods
or
push
adc
jg
xchg
les
popa
and
push
fadd
fsub
lcall
popa
je
jno
pop
stos
mov
xor
xchg
push
push
insl
aam
out
aad
dec
and
out
fsubrl
mov
rcr
mov
rol
test
pop
mov
pop
mov
adc
scas
cmp
adc
mov
push
mov
xor
and
loope
push
xor
in
sub
lds
pop
in
lret
sub
add
add
adc
lret
insb
sub
push
mov
add
xor
adc
fbld
adcb
cmp
push
sub
sub
dec
mov
cli
hlt
pop
ljmp
fsubl
mov
dec
repnz
cmp
dec
and
in
or
jmp
mov
or
xor
es
jne
repz
sbb
out
xchg
loope
xor
pop
in
adc
iret
roll
pop
fimuls
imul
or
ret
leave
mov
nop
xchg
es
in
imul
repz
in
mov
mov
or
sub
fldl
push
cmp
mov
into
dec
aas
mov
dec
or
inc
std
adc
inc
leave
mov
pop
push
adc
xor
fdivl
push
fimull
sub
cwtl
or
jg
not
es
fdivrp
jp
outsb
paddsb
fildll
cmp
jno
mov
mov
inc
iret
sub
in
cld
mov
stc
mov
mov
rcrb
pop
outsb
lahf
lret
fiadds
stos
dec
rol
cli
out
xchg
adc
sbb
pusha
sbb
gs
or
sub
xchg
and
adc
jns
in
lock
mov
or
popa
ret
rcrl
jno
lock
int3
stc
scas
std
stc
in
hlt
ds
inc
in
lods
sub
xor
add
imul
repz
outsb
iret
pusha
aas
mov
out
int3
and
outsb
and
repz
movsb
adc
movsb
dec
leave
incb
pop
add
mov
cwtl
fwait
inc
push
pop
out
lds
out
test
adc
sti
push
xor
les
in
sub
ficoms
test
cmp
xchg
lods
stos
and
jns
inc
cli
cs
js
push
ficomps
cmpsb
xor
and
pop
dec
shl
xchg
pop
xorb
pusha
setno
in
cmpsl
push
xor
outsl
inc
xor
out
sub
cmpb
fucomp
and
repz
push
or
ret
mov
add
mov
pop
repz
popa
ret
arpl
aaa
stos
dec
leave
mov
mov
mov
out
mov
jae
push
cmpsl
xor
aas
insl
push
pop
lret
cmp
lea
fxch
push
in
jle
push
or
mov
insl
cmp
sub
ds
pop
or
aam
sub
sbb
push
jmp
aam
jl
mov
ds
sub
sub
jns
mov
sub
sti
or
add
dec
xchg
push
xor
sti
sahf
sbb
inc
push
aad
xlat
test
dec
incl
lds
add
testl
jno
repz
jmp
ret
or
into
mov
ds
int3
lock
out
ret
out
in
mov
pushf
push
push
and
adc
adc
pop
aad
enter
adc
je
test
cmpsl
vsubps
sub
sbbl
int3
mov
add
aad
icebp
cmpsb
jo
in
ja
mov
xorl
and
test
push
add
pop
repnz
in
in
or
cmp
icebp
xlat
sub
in
jg
pusha
and
cmp
sbb
sub
jbe
lods
dec
xchg
fwait
sub
jno
in
adc
mov
aaa
sbb
rcrb
repz
mov
cmp
sbb
sub
fiaddl
xchg
int
cmp
fnstenv
aaa
clc
mov
in
cmpsb
jmp
or
movsb
dec
bound
call
ret
insb
iret
mov
push
lock
cmc
sbb
nop
push
movsb
in
jl
popa
jbe
adc
sbb
sahf
push
clc
adc
dec
imul
ja
lret
repz
jne
insl
mov
mov
test
scas
repz
hlt
rol
arpl
lock
push
iret
out
lods
lock
jecxz
and
popa
cmc
and
xlat
mov
lock
inc
mov
lret
and
cwtl
jno
xlat
or
mov
lock
flds
js
inc
inc
daa
nop
add
xchg
mov
and
popa
repnz
fsubrl
and
ret
push
imul
xchg
push
mov
lcall
stos
add
fucomip
dec
xlat
inc
push
mov
add
mov
std
les
jns
fsts
push
or
push
cmpsl
push
daa
lds
inc
stc
incb
call
outsb
lea
xchg
sbb
repz
push
outsl
aam
inc
xor
jp
dec
insb
pop
rcrl
and
popf
out
sub
or
and
jle
repnz
jle
cmpsb
cli
sbb
popf
bound
xorl
dec
jae
imul
jbe
push
add
sub
iret
dec
and
bound
mov
cmp
sbb
sbb
push
shrb
mov
mov
push
loop
inc
mov
mov
popa
aad
xor
inc
jo
jge
fdivl
je
mov
js
sub
je
xchg
scas
shrl
xchg
push
fs
lcall
gs
sbb
mov
mov
push
popf
mov
push
out
gs
repnz
dec
push
mov
xchg
or
fsts
mov
lahf
gs
lea
shll
mov
testl
sti
mov
cmp
sub
cmp
mov
push
mov
or
pop
sub
mov
arpl
xchg
ffree
push
and
xchg
add
dec
and
lods
sbb
sti
or
lods
scas
in
popf
inc
test
mov
in
xlat
add
sbb
adc
dec
lret
or
pop
repnz
out
add
jl
add
lea
adc
movsl
jno
mov
sahf
mov
outsl
and
mov
push
cmpsl
shl
mov
sahf
imul
push
sub
pop
xchg
call
shl
fs
cmp
pop
mov
loopne
ret
test
lret
jne
push
lret
jae
les
adc
pusha
sbb
dec
lods
cld
inc
rcll
push
fsubrl
daa
shll
cli
dec
mov
testb
mov
inc
int3
dec
jb
loop
dec
adc
adc
shll
mov
ja
push
mov
rep
dec
ja
sti
mov
dec
add
pop
mov
cmpsl
cmp
leave
ja
sbb
push
jne
addr16
or
outsb
add
jecxz
outsl
stos
xchg
test
pop
sub
push
mov
inc
das
aaa
mov
lock
add
stc
andl
cmp
xchg
adc
outsb
negb
repz
cmp
insl
gs
push
push
sub
or
and
cmpsb
xor
jge
mov
jno
dec
mov
mov
and
sub
mov
and
inc
arpl
pop
in
push
push
int
and
outsb
inc
jp
and
sub
sub
or
xor
dec
movsb
mov
arpl
mov
xor
fwait
and
cmp
add
jmp
into
and
dec
stos
cs
out
lret
mov
mov
out
xor
daa
inc
mov
mov
and
testb
cmp
jle
pop
je
in
jb
xchg
jmp
sub
es
and
add
sarb
std
nop
pop
pop
and
lock
call
sbb
add
inc
add
mov
add
xchg
mov
aas
inc
xchg
mov
mov
dec
mov
out
lahf
loopne
lcall
mov
mov
sub
xor
pop
cmp
cmp
test
xor
xor
stos
and
adc
mov
xchg
xchg
sbb
pushf
lods
pop
lcall
add
fsubrl
xor
sub
call
idiv
ficoms
inc
and
inc
xorb
pop
add
push
mov
mov
lods
insb
xchg
jmp
push
js
cmp
xchg
addb
and
rcr
xor
inc
sahf
mov
stc
xchg
outsb
mov
xor
insl
and
daa
cwtl
les
inc
jb
jp
adc
sti
xor
rorb
daa
popa
add
xor
xor
or
push
ret
cmc
inc
dec
push
aas
pop
leave
mov
addr16
and
adc
mov
fsubl
lods
pop
add
sbb
or
inc
out
adc
sub
aaa
add
sub
push
loope
dec
sub
and
inc
jecxz
mov
push
jg
dec
jb
mov
leave
push
movsb
push
les
stos
sbb
leave
dec
push
mov
dec
xor
cmp
leave
ds
sub
pop
shrb
push
shlb
aas
dec
vmovhpd
inc
adcb
ljmp
inc
repz
inc
lret
insl
pop
rcll
adc
xor
xchg
jmp
dec
mov
jnp
mov
push
rcrl
jne
push
push
in
pop
jp
pop
fistpll
pop
sbb
xchg
add
pop
and
inc
inc
gs
inc
imulb
sbb
nop
mov
stos
je
sub
xchg
fnstsw
add
lret
in
fcmovnb
shl
fnsave
add
ja
testb
repnz
arpl
imul
ret
ficompl
jmp
or
out
iret
sti
sbb
outsl
inc
jnp
call
xchg
cmc
jle
pop
mov
cld
and
scas
and
mov
cmp
jo
mov
out
xchg
jo
push
or
int3
push
cli
in
inc
and
lds
cmp
shll
aam
call
sub
shll
out
test
sti
mov
scas
xlat
jo
xlat
sti
shlb
pop
add
sub
leave
xchg
xchg
xchg
mov
outsl
cmp
fisttpll
or
scas
imul
out
out
test
adc
jnp
xor
sub
testb
aaa
or
addb
sarb
xchg
hlt
adc
push
add
testb
pop
dec
fnstenv
jp
xchg
aad
test
cmp
or
mov
fnsave
dec
lea
jmp
mov
cmp
insl
addr16
jmp
aaa
leave
movsb
cmc
mov
leave
pop
insb
mov
xor
lcall
lods
ret
mov
jno
pop
gs
cld
or
lret
adc
jp
fldl
cmpsl
imul
xor
dec
daa
cmpsl
pusha
test
xor
inc
jecxz
mov
ds
and
inc
mov
xor
push
mov
loope
nop
sub
scas
icebp
sahf
inc
sub
pop
scas
jb
sub
scas
pop
or
fnstenv
xchg
cmpb
cmc
out
sahf
inc
arpl
ret
inc
mov
orl
xchg
sbb
div
push
aad
insl
dec
push
sar
hlt
sbb
xchg
xchg
push
mov
dec
lcall
sbb
out
scas
fnsave
pop
lahf
dec
sarl
push
out
test
outsl
and
mov
pop
pop
in
dec
lahf
cltd
jg
das
sbb
push
shlb
imul
add
and
xor
cmc
bound
repz
pop
mov
and
pop
not
jnp
cld
push
nop
xor
mov
inc
jno
call
bound
and
sbb
cmpsb
jmp
addr16
cmpl
mov
popa
mov
mov
jecxz
popf
movsb
shll
cwtl
outsl
cmp
fsubrs
movl
xchg
inc
sub
lods
repz
jmp
xchg
pop
add
sbb
roll
cmp
mov
ds
mov
and
xchg
inc
and
cmc
xchg
arpl
mov
cmp
testl
enter
mov
mov
mov
jl
cmc
or
call
inc
ficoml
xlat
aam
dec
push
insb
and
ds
not
pop
mov
sahf
xor
arpl
stos
adc
je
and
jae
xor
jecxz
and
stos
push
es
repz
dec
movl
or
add
inc
icebp
sub
sti
inc
mov
sahf
mov
hlt
xorl
xor
idivb
inc
mov
in
add
lock
mov
movl
adc
ljmp
mov
xchg
cmp
jle
push
dec
ret
dec
push
jbe
fmulp
jg
sub
sti
pop
inc
xchg
adc
jecxz
jecxz
rorl
notl
pop
ss
dec
adc
fstl
push
das
mov
fnstsw
inc
rcr
sub
cmp
pop
jns
jbe
jbe
pop
fdivs
mov
aam
xchg
sbb
mov
lahf
rorb
rcl
es
lcall
jl
push
std
and
dec
push
cmpl
jns
fnstcw
dec
cmp
xchg
adc
loop
loop
xor
scas
cs
mov
push
enter
das
flds
je
pop
mov
xor
icebp
pop
cmp
aaa
lds
mov
jne
mov
or
shrl
int
lret
testb
iret
mov
pop
push
cli
outsl
daa
or
adc
push
es
cli
das
call
xor
push
cmpl
out
ljmp
test
in
push
sahf
data16
mov
inc
sub
fnstsw
int
movsb
cmp
and
and
das
inc
push
cli
pop
cmp
adc
addb
rorb
inc
cld
jbe
sbb
jae
aas
jbe
and
inc
xor
cmc
push
sahf
es
xchg
pop
and
jmp
cmc
xchg
push
test
hlt
ret
nop
ss
xor
imul
aad
add
enter
fcmovnu
inc
ds
sbb
inc
push
sbb
mov
push
mov
cmc
out
insl
scas
pop
mov
test
fidivrs
loope
mov
mov
jo
push
movsb
add
gs
outsl
xchg
mov
rcrl
add
jb
sbb
jg
sub
inc
mov
in
mov
out
pop
imull
jne
add
add
or
pop
cltd
shll
push
add
and
fidivrs
mov
cmpsl
jmp
icebp
mov
add
ret
cmp
cmp
out
push
cmp
or
jnp
addr16
add
jnp
mov
stc
punpcklbw
pop
add
push
ds
sti
je
jle
mov
and
negb
mov
xor
fisttpll
jno
repnz
or
jae
cld
fildl
pop
add
dec
and
jo
pop
cmp
inc
push
mov
xchg
pop
scas
in
fdivrs
push
cmp
push
or
adc
and
clc
dec
popf
mov
in
fistpll
jl
in
pusha
jp
fcmove
xor
orb
das
stos
pop
jbe
add
jae
int3
xchg
push
jbe
xor
enter
or
hlt
push
mov
push
mov
cmp
ret
jb
push
and
pusha
pushf
inc
inc
shr
xchg
hlt
or
add
add
jmp
insb
mov
fisttps
ret
subl
add
xor
sub
jl
mov
push
jmp
repnz
imulb
xor
fs
jge
int
push
or
sub
mov
xlat
pop
test
mov
cli
aas
push
or
shrb
ret
xchg
jl
xchg
pop
xchg
and
mov
arpl
ret
and
xor
jbe
sub
and
sbb
sbb
fs
cmpsb
sub
shrb
pop
jb
mov
popa
pop
sub
jae
or
mov
cld
iret
imul
or
dec
ss
sub
xor
pop
push
pop
dec
xor
sbb
les
fcmovu
lods
xor
mov
gs
sbb
bound
jmp
xchg
mov
mov
data16
movsl
mov
dec
mov
push
mov
ss
push
mov
inc
mov
push
das
in
pop
icebp
jge
jge
push
cs
sbb
xchg
pop
gs
js
ja
lahf
cmp
bound
mov
jb
rcll
jl
xchg
push
pop
stc
xor
sub
bound
xchg
jl
dec
inc
pop
and
xchg
out
mov
sub
test
jmp
jmp
push
mov
sub
and
inc
push
lods
test
lock
dec
adcb
xchg
jbe
int3
lea
push
cli
mov
sub
xchg
aad
sub
aas
jbe
leave
pop
outsl
jl
push
dec
push
mov
inc
add
fcoml
std
dec
cmp
jns
xlat
divl
decb
movsb
mov
stos
sbb
push
addb
dec
pop
ret
push
xchg
push
out
and
and
out
lds
add
mov
cmp
jo
movsl
dec
xchg
inc
or
adc
loop
aaa
cmp
mov
rcrl
and
ss
int3
xor
ss
into
stos
loop
jle
jle
xchg
lcall
mov
pop
inc
rolb
jecxz
out
push
jle
negb
sub
inc
imul
sub
mov
mov
and
push
push
cmp
movsb
adcb
test
xor
jnp
dec
mov
dec
pop
outsb
jp
xchg
ror
orl
mov
out
int
scas
mov
xor
xchg
daa
sub
xchg
int
movb
jo
mov
in
pop
cld
outsb
fsts
sub
movsb
push
add
mov
aad
dec
mov
sbbb
inc
dec
leave
xchg
sub
add
xchg
adc
pop
cmp
cmp
fs
push
add
sub
outsb
or
hlt
inc
jne
adcl
adc
or
imul
or
loop
lcall
popa
enter
cmc
ss
outsl
daa
hlt
dec
stos
xlat
incl
jle
popf
test
pop
pop
sbb
adcb
cmc
dec
cmp
mov
sbb
or
mov
push
add
loope
xor
add
pushl
sub
xor
adc
mov
pop
mov
lret
and
pop
jno
mov
mov
jp
add
lahf
mov
sbb
push
push
in
iret
pushf
push
das
ja
aas
enter
inc
sbbb
repz
mov
push
pop
jns
add
sub
dec
stc
repnz
ljmp
pop
cmp
inc
jns
les
mov
and
aam
and
xor
mov
pop
jmp
loope
movsb
push
scas
and
clc
xor
or
outsb
lock
adc
mov
sub
cmp
test
jge
ficoms
ficompl
call
outsb
cmp
mov
xchg
loope
cmp
cmp
cmpb
in
dec
repz
xor
mov
sub
dec
int
daa
pop
mov
inc
sub
or
push
jns
push
pop
ja
sub
cwtl
fst
dec
out
cmp
mov
cmc
inc
xchg
xchg
call
outsb
jnp
jecxz
inc
sti
mov
fcoml
sbb
lret
push
mov
insl
jne
dec
mov
int3
push
leave
pop
test
test
js
outsb
popa
leave
gs
push
call
shlb
mov
clc
mov
std
sbb
add
xchg
loope
adc
mov
fldenv
shrl
movsl
cmp
cli
pushl
xor
jle
push
cmovo
jb
add
mull
and
or
and
test
cmp
ficompl
and
cmp
stos
cwtl
push
mov
lret
push
ror
lret
dec
sbb
enter
shrb
movsl
fistpl
pop
enter
test
mov
sbb
sbb
push
into
repz
xor
and
test
and
popf
movsl
icebp
xchg
insl
pushl
or
cwtl
clc
sub
jmp
xchg
test
testb
rolb
cltd
gs
test
adc
add
jge
mov
jmp
sub
push
jb
mov
dec
je
sub
stos
mov
add
adc
mov
add
fistpl
inc
xchg
or
jg
push
sbb
seto
cmp
cs
call
test
pushf
pop
xchg
push
mov
adc
test
ds
test
sbb
mov
add
in
jle
ret
repz
std
jle
loope
mov
inc
je
push
bound
add
mov
mov
out
jle
test
addr16
xchg
push
dec
hlt
cmp
pusha
dec
jmp
mov
scas
cmc
leave
push
rclb
jmp
xor
fsin
pop
adc
push
push
loope
mov
vpunpckhdq
adc
nop
js
lea
lret
lock
pop
ljmp
push
jle
daa
mov
jnp
push
addr16
mov
aas
mov
movsl
roll
aad
testb
mov
lods
inc
movb
jmp
sub
rorb
cmc
ss
xlat
loop
inc
or
or
mov
mov
adcl
xchg
outsl
push
leave
push
cmp
push
mov
ljmp
and
add
bound
cmpsb
daa
jo
add
adc
dec
or
mov
push
and
xor
and
mov
aas
xor
pop
mov
push
sbb
xchg
mov
cmp
xor
sbbl
shrb
pop
faddl
mov
and
dec
test
je
ds
stos
mov
daa
loope
test
jnp
idivl
cmp
es
roll
mov
dec
lods
dec
das
cli
aaa
mov
jle
dec
mov
jno
jbe
cmp
cmp
cwtl
in
jecxz
and
add
les
test
inc
pusha
imull
cmp
inc
ret
icebp
lock
lret
jne
pop
dec
and
iret
scas
xor
loop
mov
stc
push
mov
inc
push
mov
jo
pop
cltd
pop
roll
hlt
push
test
adc
xor
push
dec
icebp
stc
sarb
dec
adc
and
rcrb
and
xor
in
scas
icebp
pop
out
out
xorb
jmp
pop
negl
inc
push
sub
mov
or
xchg
js
xchg
in
ds
ret
jmp
pop
mov
lds
push
pusha
xlat
pusha
pop
cmc
ljmp
dec
pop
pop
inc
xor
sarb
xor
not
pop
sub
daa
cmpsb
push
icebp
cmpsb
leave
jae
adc
outsl
addl
or
sub
fidivrl
ret
dec
push
mov
push
mov
and
sbb
mov
mov
xchg
push
test
push
aam
nop
leave
add
xchg
push
es
jle
mov
ficompl
pusha
rol
xchg
sub
dec
add
scas
inc
jle
pop
lret
add
mov
push
mov
xlat
mov
daa
mov
push
lret
outsl
push
ljmp
push
fsubl
shlb
test
std
cmp
cwtl
cs
mov
cmpsb
xchg
xor
fcmovne
mov
lock
cmp
pop
sub
inc
fwait
pusha
jecxz
inc
cli
mov
daa
std
dec
push
test
outsb
cltd
scas
jecxz
pop
ret
xor
cmp
repnz
scas
aad
xor
mov
daa
test
loop
fs
sbb
cmp
lock
jb
lods
add
push
js
pop
or
sbb
xor
adc
add
and
rclb
pop
stc
in
mov
and
idivl
incl
xorb
fwait
insl
cmpsl
adc
lock
push
push
push
add
inc
jmp
clc
movb
dec
xchg
imul
or
jno
sub
pop
in
cmp
pop
inc
adc
inc
xchg
movsl
pushf
pop
xchg
or
popa
xchg
xchg
cmp
xchg
cwtl
inc
addr16
faddl
push
insb
push
mov
mov
pop
push
iret
cmp
or
pop
addr16
movsb
mov
cltd
jo
dec
test
adc
mov
push
pop
or
fs
xchg
jbe
mov
xchg
dec
xor
sbb
pop
mov
sub
cmove
scas
and
jle
push
mov
jp
jmp
arpl
add
bound
jg
or
ds
sub
mov
and
jp
mov
mov
cltd
stos
sbb
jge
scas
gs
mov
ds
lret
repnz
scas
xor
xor
push
dec
out
sbb
fwait
add
test
jae
mov
pop
xchg
iret
aam
fs
outsl
lds
add
push
ds
inc
lods
mov
out
shlb
jb
repz
lods
stos
lahf
insb
iret
mov
jno
dec
xlat
mov
cmc
loope
sahf
in
push
fs
pop
or
sar
loop
js
loope
push
stos
rolb
pop
insl
mov
pop
mov
incl
mov
push
xchg
push
mov
sub
sahf
fldl
and
pop
fisttps
xchg
jp
fisttpl
fwait
xchg
icebp
cmp
ja
test
mov
sbb
mov
inc
bnd
and
aaa
adc
inc
cmp
xchg
out
pop
cmp
or
xchg
or
repnz
int3
xchg
lret
cmp
dec
aam
cld
rcrb
inc
test
sbb
cwtl
cmpsl
add
aas
enter
mov
pop
sahf
sub
lret
dec
xor
bound
cmp
in
and
xchg
test
pop
scas
pop
adc
subb
inc
loope
push
mov
dec
outsb
jg
pushf
fwait
aad
xor
fiaddl
cmp
jne
mov
dec
sub
pop
mov
nop
daa
add
or
push
std
stc
lods
arpl
loopne
push
sub
and
out
inc
test
fidivrs
les
dec
cmpsl
jge
call
ret
sahf
mov
push
pusha
loopne
lock
dec
xor
pushf
push
aad
jno
adc
dec
sbb
mov
inc
push
lret
mov
fsubrs
jg
push
add
scas
outsl
push
xor
and
loope
xchg
test
cmp
hlt
test
xchg
out
jbe
test
ljmp
sbb
pop
je
sti
dec
sub
scas
cwtl
je
and
xor
xlat
inc
push
inc
add
mov
add
lret
cltd
lcall
push
pusha
out
or
push
popa
mov
outsb
xor
imul
outsb
and
mov
push
sub
push
fnstcw
ja
or
xchg
jnp
int3
stc
xchg
and
movsl
jbe
jecxz
ss
jp
fstl
xchg
mulb
jae
cltd
fs
adcl
add
mov
jmp
lret
lret
pop
loopne
nop
imul
inc
js
push
mull
les
in
arpl
xor
movsb
clc
mov
pop
addl
shr
sti
cmp
and
xor
jnp
pop
xor
add
jb
es
shll
and
bound
dec
adc
push
stc
jg
mov
sahf
sbb
lods
mov
xchg
lods
lock
ja
faddl
xchg
cmp
mov
xchg
dec
ljmp
mov
pop
flds
pop
pop
inc
mov
lcall
ja
int
ds
cmc
mov
fdiv
xor
enter
xchg
xchg
movb
push
add
or
test
insl
mov
xor
xor
xchg
enter
cli
sbb
mov
push
and
shrb
mov
xor
inc
arpl
mov
inc
add
xchg
xchg
dec
imul
filds
mov
lds
inc
movsl
repz
dec
aam
aad
jbe
xor
mov
subl
cld
icebp
xchg
xor
and
add
lods
add
sub
ds
push
jne
and
out
dec
inc
dec
lods
int
sub
and
cmc
idivb
add
int3
sub
loope
add
rcll
mov
or
jno
lock
pop
in
sub
cmc
mov
sub
xor
cmp
jne
sub
push
pop
and
lret
popa
mov
jnp
sbb
in
add
test
out
pop
scas
addr16
ljmp
and
stos
mov
into
push
xor
gs
or
xchg
push
sbb
lea
hlt
sbb
aas
inc
mov
xchg
mov
loop
std
xor
adc
cwtl
dec
call
push
insl
mov
into
dec
lret
out
les
adc
repz
push
cwtl
out
fwait
dec
lea
or
xor
inc
bound
sbb
mov
mov
xchg
xchg
aaa
sar
lods
rorb
ja
sbb
cld
in
arpl
lods
sahf
jl
rorb
loope
or
loop
inc
test
push
pop
pusha
repnz
mov
dec
xchg
pushf
jns
jmp
xchg
clc
mov
push
fbstp
mov
mov
lea
jg
sub
gs
jl
xchg
lods
jae
push
cwtl
mov
sahf
add
cs
shlb
aas
lcall
icebp
das
jns
pop
popl
je
mov
loope
daa
lds
push
mov
inc
sub
adc
push
lahf
cmpsl
std
push
insb
leave
or
xor
mov
scas
jmp
xchg
mov
in
dec
lret
pop
jg
jno
ficoml
and
pop
insl
push
cld
cmpsb
adc
fwait
mov
dec
repnz
jbe
out
pop
pushf
xchg
cmp
fadds
insl
xchg
in
mov
arpl
xor
lods
mov
rorb
popa
cmp
ljmp
mov
aaa
push
push
pop
xchg
popf
int
roll
aaa
jp
addr16
dec
and
mov
fdivs
in
mov
inc
jae
add
push
jmp
jecxz
das
daa
mov
jecxz
stc
sub
fimuls
lods
cmp
stos
cmp
pop
mov
popf
push
pop
dec
cmp
insb
lock
es
dec
test
mov
int
das
push
in
into
fwait
jmp
bound
add
roll
int
cmp
xchg
pop
mov
cli
fsubr
enter
sub
sbb
inc
mov
xor
fstl
push
push
test
cs
pop
fadd
rcrl
notb
xchg
or
mov
out
je
out
mov
loop
push
lock
cli
les
pushl
push
xor
mov
dec
pop
or
cmpsb
imul
xor
dec
cs
and
add
push
fcomps
push
pusha
xor
fnsave
xlat
cli
icebp
inc
push
and
gs
mov
sahf
leave
lods
loopne
jecxz
mov
xchg
pop
mov
push
pop
fs
jo
dec
cmpsb
out
aaa
jge
clc
hlt
dec
fmull
pop
jne
xchg
negb
jb
push
jnp
nop
filds
pop
lods
adc
imulb
and
pop
lcall
xor
aam
cmp
mov
out
cli
cmpps
pop
aad
cmp
inc
dec
add
ds
or
add
popl
xchg
lea
mov
pop
inc
push
pop
fcoms
filds
cmpsl
testb
divl
and
xor
dec
sbb
out
loop
aaa
scas
scas
mov
inc
stc
sbb
in
mov
inc
push
fdivrp
repnz
outsl
aaa
jo
and
mov
cmp
repnz
xchg
xchg
push
popf
jge
cwtl
pusha
inc
mov
outsl
jmp
into
test
mov
push
xor
nop
sbbb
outsl
mov
add
mov
mov
mov
gs
mov
inc
jo
pop
test
lcall
sbb
filds
pusha
adc
and
roll
test
test
add
sub
push
cld
push
push
mov
mov
jl
or
xchg
mov
jle
stc
scas
loope
push
sbb
icebp
inc
pop
loope
push
push
xor
sets
cmp
cmp
ret
sbb
sub
or
dec
and
mov
pop
sub
addr16
jecxz
stos
ljmp
pusha
inc
in
mov
dec
pop
mov
ljmp
imul
add
jge
cmp
jbe
pop
or
mov
fidivrs
adc
test
inc
xchg
fs
push
dec
dec
cmp
dec
imul
mov
mov
jne
mov
imul
mov
js
insl
scas
and
pop
loope
not
rol
iret
xlat
in
jmp
xor
mov
or
in
les
jmp
add
sbb
mov
cmp
pop
add
dec
iret
iret
pop
cmp
sahf
push
inc
adc
pop
xchg
ret
stc
out
and
adc
jae
scas
cwtl
or
add
cmpsl
addr16
fcompl
je
frstor
pusha
cmovb
out
cmp
lcall
pop
xchg
aad
stos
rcr
inc
mov
cmp
cmp
cltd
testl
mov
leave
ret
fildll
xchg
ret
or
popa
push
in
mov
adc
in
je
mov
fstps
pop
outsb
sub
mov
aaa
gs
push
je
incl
xchg
pusha
xor
and
fwait
or
xchg
add
add
clc
sahf
out
or
aaa
xlat
gs
add
and
xchg
jbe
jne
dec
out
insb
cmp
rolb
fnstsw
xchg
dec
adc
dec
icebp
dec
pop
fmulp
out
fnsave
mov
inc
mov
in
out
sub
mov
pop
lret
fld
in
gs
dec
ja
inc
mov
nop
fldcw
push
in
jmp
rcl
cmp
ret
cmp
inc
cmp
pusha
sbbb
clc
mov
xor
test
outsb
popf
fildl
insl
fisubl
jecxz
das
stos
push
mov
ljmp
xchg
pop
add
cmp
mov
mov
imul
popa
fucom
lea
idivl
mov
or
test
push
sub
stos
inc
sbb
inc
ret
sub
and
bound
xchg
lods
mov
sub
leave
push
adc
popa
fbld
dec
in
in
in
roll
scas
inc
mov
cmp
int
mov
xchg
jo
loopne
mov
mov
and
das
pop
sub
push
inc
jbe
in
xchg
in
pop
xor
sub
jae
das
adc
push
xor
fwait
sub
cwtl
int
out
cli
mov
inc
push
clc
out
cli
cltd
or
in
aaa
cmp
push
add
adc
mov
cmp
adc
leave
lret
scas
jno
push
adc
push
loop
add
daa
addr16
call
popa
aad
lret
js
cmp
repnz
scas
or
sub
testl
xlat
loope
mov
loope
dec
xchg
scas
pop
xor
add
outsb
xchg
mov
xchg
repz
sqrtps
jns
std
out
xchg
jl
shll
outsb
mov
jns
pop
dec
push
mov
xor
cli
xor
adc
das
mov
subb
je
icebp
mov
aaa
jmp
xchg
mov
or
jb
cli
adc
jmp
cmp
jmp
mov
inc
xchg
cld
sub
push
repnz
subl
and
imul
pop
and
jmp
jae
mov
or
nop
in
out
loope
push
mov
enter
loopne
orl
negl
mov
inc
stos
adc
jg
into
pop
mul
jmp
mov
dec
inc
fnstcw
mov
add
inc
adc
mov
push
imul
xchg
sbb
popa
push
push
jb
dec
dec
xor
loop
loop
sbb
cmpsb
mov
mov
pop
push
pop
ljmp
aad
and
cmc
scas
jg
pop
push
loopne
sub
call
bound
xlat
xchg
sahf
mov
mov
cmp
cli
jl,pn
fsubl
inc
adc
aad
iret
mov
xor
jg
test
jge
adc
inc
or
popa
cmp
xor
pop
mov
push
xchg
add
xor
loop
notl
mov
sbb
adc
outsb
les
aas
icebp
inc
fs
das
dec
lcall
pop
divb
mov
xor
adc
movsl
push
enter
sarb
fs
cld
cmp
cmpsl
in
inc
jne
ds
pop
nop
stc
sub
lock
mov
pushf
push
aaa
mov
jp
mov
shl
ficoml
jp
add
pushf
fstpt
test
sahf
dec
jmp
cmp
xchg
daa
jo
push
pop
mov
test
inc
pop
shrb
xchg
or
je
push
push
in
mov
insb
mov
int
sarb
pusha
imul
mov
mov
mov
aaa
es
jmp
enter
cmp
mov
sub
outsl
out
mov
scas
repnz
pop
imul
xlat
insb
mov
shll
dec
mov
push
mov
adc
insb
andl
cltd
mov
mov
or
int3
xchg
mov
push
mov
adcb
cmpsl
outsb
iret
inc
sub
cltd
add
jo
loope
mov
xchg
aas
adc
adcl
and
xchg
outsb
imul
popf
push
adc
gs
mov
outsl
pusha
push
popf
mov
cmpsl
subb
ret
out
int
mov
je
adc
sub
into
pushf
and
data16
ficompl
sbb
adc
adc
xchg
ljmp
sub
jle
pop
and
or
cmp
les
test
and
mov
mov
sub
pushf
fsubs
sbbb
push
outsl
xor
shlb
and
dec
adc
vpmovzxwq
cmp
test
loop
lods
stc
sbb
mov
mov
outsl
mov
pop
shll
adc
pop
in
inc
xor
fcompl
mov
in
pop
mov
dec
mov
or
inc
xchg
sbb
cld
nop
sub
mov
push
mov
sbb
xchg
mov
push
dec
fiadds
test
outsl
jo
dec
mov
data16
push
roll
andb
jnp
xchg
and
adc
aad
mov
roll
addl
pop
sbb
cmc
sub
xor
mov
enter
das
add
and
sarl
repnz
fnstcw
fwait
cmpb
push
cltd
push
arpl
rclb
sbb
clc
cmp
int
fcompl
sub
jp
dec
maxps
jg
orl
mov
test
cmpsb
cmp
sahf
mov
test
sti
cmp
sbb
pop
xchg
dec
cmp
add
jecxz
icebp
inc
dec
jmp
dec
faddl
or
sbb
hlt
mov
addr16
jno
inc
subb
repz
sbb
testl
mov
inc
in
aam
fldt
mov
dec
xor
fcoms
call
pop
hlt
imul
add
sahf
movsb
hlt
scas
jbe
loope
ljmp
adcl
stc
sbb
mov
or
jle
sbb
les
or
push
or
push
loope
xlat
dec
and
sub
stos
and
test
jno
sbb
test
faddl
cmc
lret
js
jae
jmp
push
xor
sbb
xchg
xchg
xor
dec
shll
xor
repnz
add
add
rclb
aad
adc
add
and
sbb
movsb
fwait
jns
jmp
push
pop
sahf
jnp
adc
mov
dec
mov
cmp
pop
int3
test
adc
or
mov
dec
cmpsl
frstor
jno
in
dec
add
lods
mov
in
or
popf
lock
and
popf
movsl
adc
push
cmp
adcl
int3
sti
and
stos
fcomip
sub
sbb
sar
sbb
lret
mov
jbe
sti
ret
push
ror
cli
out
dec
negb
aas
jp
scas
std
pop
mov
test
cmp
in
add
leave
pop
jmp
xchg
addr16
test
int3
call
mov
lods
ja
popf
xor
adc
mov
sub
cli
dec
lret
adc
dec
pop
xor
push
adc
sbb
push
pop
imul
jg
out
je
xor
push
push
sarb
lods
sub
add
das
and
les
sub
cmp
sub
fidivs
cmpsb
xor
xor
adcb
vcvtsi2sdl
icebp
and
xchg
inc
inc
rolb
push
icebp
scas
xor
arpl
pop
jbe
shl
out
lea
lret
add
aad
dec
dec
lods
fs
gs
stos
cmpsb
jbe
filds
push
jb
lcall
cli
out
mov
stos
jmp
xchg
movsb
in
je
stc
gs
insl
xor
fucomp
rcrl
inc
sbb
frndint
cmp
jl
inc
mov
jae
filds
mov
push
add
ficoml
lcall
push
idiv
sbb
mov
cltd
jecxz
scas
fistl
mov
call
nop
mov
push
xorb
loopne
or
and
pop
fsubs
xor
jmp
and
add
out
std
icebp
push
sahf
add
and
adc
sbb
cwtl
cmp
ficoml
jb
dec
and
ss
aam
repnz
jo
add
repz
pop
jae
mov
jae
int
dec
mov
imul
out
mov
clc
sbb
sbb
pusha
dec
jbe
repnz
or
pop
pop
sub
stos
adc
imul
imul
mov
mov
lds
pop
aaa
sbb
xchg
rclb
mov
in
xchg
stos
movsb
xor
outsl
sub
enter
stc
mov
push
sbb
fildl
push
pop
cmpsb
lods
in
cld
cltd
inc
dec
sbb
out
stc
sub
in
shlb
cltd
clc
repnz
jo
cmp
lcall
ljmp
add
icebp
rorl
into
cli
ljmp
cwtl
mov
sbb
push
or
mov
pop
imull
gs
mov
pop
mov
imul
jl
or
fs
lods
xchg
leave
jne
andl
push
scas
xor
cmp
xlat
jg
leave
stos
paddsb
jl
mov
mov
fildll
jnp
leave
mov
rol
outsl
sub
and
lcall
xor
nop
mov
xchg
mov
lahf
push
stc
call
cli
cmp
cmp
adc
jb
sti
sbb
cmp
mov
cmp
popl
adc
movsb
mov
inc
out
lods
ds
cmp
push
insl
jns
call
jle
cmp
xchg
ds
test
hlt
adc
and
xchg
stc
test
mov
xchg
loop
shrl
mov
mov
pop
int3
mov
lahf
les
in
jno
xchg
test
or
bound
insl
mov
cmpsl
cmpsl
xchg
hlt
ret
rol
imul
test
and
cs
lret
fsts
pop
dec
sbb
pop
test
mov
jle
add
fidivrs
xlat
dec
and
and
rcrl
ret
xor
jmp
jl
lret
fildl
dec
or
enter
dec
mul
sti
jb
mov
adcl
jo
les
push
mov
dec
jbe
test
xchg
shll
in
push
out
loopne
imul
test
aad
shl
iret
jo
dec
xchg
cmp
xchg
push
sbb
out
pop
rorl
mov
loop
mov
shrl
sbbb
sti
les
push
mov
jmp
rep
test
rsqrtps
stc
jae
jmp
in
mov
cmp
incl
mov
pop
ret
pop
inc
xchg
sub
mov
sbbl
jns
xor
add
nop
and
lods
xor
and
scas
and
and
insl
cmc
out
push
sti
icebp
dec
push
and
and
fdiv
sbb
jnp
sbb
gs
sub
inc
push
push
fs
add
enter
into
pop
divb
std
inc
jno
scas
aas
add
mov
jbe
inc
ja
stos
cmpsb
sub
jle
push
sbb
inc
mov
in
and
mov
adc
push
cmp
scas
movsb
or
iret
lds
xchg
push
mov
in
mov
pop
mov
xor
addl
andl
mov
add
btc
cmpsb
cwtl
shll
scas
ret
jb
pop
popf
inc
xor
imul
imul
inc
test
cli
into
lods
out
into
mov
mov
sub
inc
arpl
out
or
and
roll
xchg
int
xorl
fwait
cltd
or
aad
in
jmp
add
cmp
mov
ds
mov
shr
mov
xor
sahf
and
ds
add
inc
movsl
leave
ret
cmpsl
gs
lret
dec
and
jbe
fcoml
and
inc
sbb
sahf
xor
ss
add
roll
sbb
push
add
das
mov
stos
movsb
loopne
mov
cld
adc
rolb
mov
inc
je
test
sti
rorb
mov
jbe
arpl
push
mov
bound
cmp
mov
in
jge
dec
div
fnstenv
inc
pop
dec
cmp
xor
loopne
scas
mov
sbb
mov
mov
xchg
pop
mov
adc
pop
cmp
inc
fdivrs
inc
mov
xchg
movsb
addr16
xor
scas
outsl
mov
insl
insl
daa
xor
mov
dec
out
ret
adc
test
add
xor
loope
icebp
mov
in
jnp
xchg
sahf
adc
add
and
subb
pop
roll
repz
xor
push
cwtl
xchg
inc
int3
ljmp
je
jle
cmpsl
fbstp
fistpl
mov
enter
xchg
inc
in
sbb
cmp
lret
or
mov
mov
shr
bound
cmpsl
icebp
mov
adc
xchg
fs
mov
pmulhw
xor
push
sti
mov
mov
lahf
push
negb
in
leave
sarb
mov
std
cmp
inc
mov
mov
inc
or
dec
fmul
push
xor
mov
pusha
xlat
xor
or
int3
mov
mov
addr16
repz
in
sarl
cwtl
and
inc
fdivs
ret
pop
pop
add
fildl
xor
inc
ljmp
cld
imul
push
mov
adcl
outsl
and
cs
imul
add
aad
subl
and
ret
cmp
cld
xchg
sbb
push
aaa
pop
out
cmp
mov
and
pop
inc
inc
js
mov
lahf
out
popa
repnz
or
mov
insb
xchg
mov
jge
push
fwait
test
aam
stos
cmp
nop
xchg
mov
inc
jae
jp
mov
bound
loop
adc
call
adc
pop
arpl
add
push
pop
push
stc
mov
sub
sub
bnd
inc
into
rcrb
bound
dec
shlb
adc
scas
addl
mov
mov
inc
lcall
xchg
int
jb
cwtl
xchg
sbb
mov
fstl
cmp
ds
fdivl
imul
cmp
fbstp
scas
js
push
aas
and
cmp
inc
lock
push
jo
xor
sti
cmp
jecxz
or
iret
iret
sbb
stos
test
adc
scas
in
add
cwtl
leave
jp
jmp
xlat
shrb
cmp
icebp
nop
movsl
jp
mov
fmull
ret
dec
xor
xor
push
int
into
push
daa
bound
into
decl
insl
js
pop
imul
or
adc
dec
cmp
mov
xchg
stc
xchg
dec
adc
je
mov
xlat
dec
cmp
out
lods
adc
sub
mov
dec
dec
loope
mov
sub
sub
add
jle
sbb
imul
stos
shlb
or
sbb
dec
mov
imul
mov
push
add
and
mov
aad
lcall
stos
int
aad
andb
pop
and
inc
mov
lret
sbb
data16
mov
mov
jle
push
gs
add
or
arpl
out
mov
frstor
cmp
outsl
nop
inc
arpl
push
push
cmp
cli
rolb
lock
fldenv
pop
mov
xchg
inc
es
add
mov
rorb
mov
push
roll
sub
push
fcomps
jbe
cmp
add
cltd
jp
cmp
inc
jns
add
int3
aas
scas
ss
or
jl
xlat
mov
add
shl
fadds
scas
movsl
add
mov
pop
and
push
iret
incb
pop
ds
or
mov
aaa
add
or
imul
faddl
out
rorb
ljmp
rol
mov
in
stc
je
clc
cmp
or
fimull
dec
sbb
lret
push
and
iret
adc
sub
mov
mov
out
xor
imul
iret
sbb
xchg
sbb
xchg
and
push
scas
data16
jmp
das
fcomps
in
inc
sub
pop
out
lret
test
mov
inc
hlt
and
and
repnz
dec
addr16
test
xor
in
movsb
dec
icebp
sbb
xchg
lds
test
and
cmp
xor
push
jl
out
inc
mov
rol
or
inc
xchg
mov
add
jecxz
inc
cmp
xchg
lods
loopne
pop
dec
inc
xchg
aad
jae
jmp
call
movsl
pop
or
or
gs
andb
je
mov
xchg
pop
pushf
add
rcrl
sbb
cwtl
cmp
test
xchg
mov
lcall
jl
pop
push
add
call
in
pop
mov
mov
inc
fbstp
xchg
cmpsl
xlat
xor
jo
xor
orb
pop
insl
loope
adc
cld
fxch
iret
or
stc
shll
out
imul
or
addl
jmp
xor
ljmp
mov
adc
push
dec
mov
jo
insl
lretw
pop
push
mov
fsubrl
movsb
fs
movl
test
js
pushf
and
adc
stc
xor
add
paddb
pop
sbb
inc
mov
and
test
in
mov
sahf
mov
loope
out
aas
insl
les
pop
cltd
push
ljmp
addr16
aaa
fdivrl
push
mov
cli
xor
pop
mov
mov
jge
xlat
mov
mov
out
jbe
jnp
mov
sar
repz
clc
fildl
aaa
and
leave
test
pop
rclb
bound
mov
adc
into
pop
negl
mov
call
fldt
bound
add
mov
in
in
xor
cmp
jmp
inc
jo
lahf
xor
daa
add
fiaddl
mov
or
inc
jo
pop
push
mov
js
ss
pop
leave
mulb
adc
loope
xchg
dec
jmp
pop
xchg
clc
iret
inc
test
sbb
cmp
add
pop
pusha
jp
out
cmp
adc
rcrb
jb
pop
adc
jmp
mov
cmp
enter
or
push
fsubr
shlb
inc
mov
mov
pop
popa
leave
mov
jns
mov
paddb
push
lahf
bound
ficoml
or
daa
dec
in
inc
push
sub
mov
xchg
add
into
push
mov
imul
mov
mov
or
pop
xchg
lods
nop
scas
jne
or
add
xlat
mov
shrb
add
and
stc
push
pop
or
inc
sti
add
mov
sub
adc
or
pop
cmp
das
mov
or
adc
and
in
mov
mov
cmpsb
call
stos
push
ret
in
mov
je
fcoml
cmc
xor
cmp
rcll
sub
outsb
fisubs
roll
inc
mov
cmp
jne
loope
loop
mulb
sbb
rcll
mov
cwtl
movsb
and
sbb
popa
sbb
mov
add
inc
lods
shrl
xchg
dec
jecxz
push
cld
adc
repz
add
mov
cmc
ret
dec
cmp
roll
je
out
bound
shrb
mov
xor
add
jae
lcall
mov
daa
push
xor
sub
or
or
add
out
sti
sub
jle
cmp
cmp
test
add
jg
push
push
push
sub
out
inc
shl
subl
cld
add
orb
xor
popa
lock
insl
mov
xor
fisubrl
dec
adc
cmp
pop
shll
imul
insb
insb
sub
popf
je
mov
sub
mov
cs
out
or
sbb
cwtl
add
stc
mov
lret
inc
push
je
jle
out
pop
push
rcrb
lds
lea
dec
call
sub
sub
inc
icebp
mov
jae
loope
inc
adc
enter
push
cmc
sbb
enter
jle
cmp
mov
popa
adc
int
dec
sub
rcrb
or
pop
call
sub
loopne
sbb
stos
inc
movsl
jnp
lock
aas
cltd
jo
mov
std
cld
into
xlat
ja
jns
mov
inc
mov
test
xchg
into
mov
ja
lcall
push
push
cld
push
ja
push
pop
pop
mov
jae
out
sbb
pop
nop
and
jns
std
ficoml
repz
rclb
aam
mov
cmp
add
jecxz
jge
and
pop
cmp
into
bound
iret
notb
movsl
mov
add
push
jmp
push
dec
dec
call
dec
int3
adc
stos
adc
scas
xor
mov
cmp
jns
nop
outsb
fcomps
cmc
test
add
into
loope
add
in
push
in
jecxz
fmuls
xlat
push
call
pop
mov
jmp
gs
adc
pop
andb
adc
push
loop
hlt
iret
push
xor
out
dec
xchg
push
shll
fwait
mov
imul
sub
or
dec
jmp
cmc
and
push
sarb
sbb
lock
jbe
out
cmp
cmp
enter
xchg
hlt
fdivrl
imulb
pop
outsb
or
dec
jnp
add
push
sub
cmpb
add
lret
lret
fwait
jbe
xor
stos
pop
or
adc
mov
bound
test
xchg
push
lods
or
inc
out
adc
int
jae
ficoml
mov
mov
xchg
iret
dec
xor
mov
sub
aam
ret
pop
bound
fadds
xchg
call
test
push
mov
call
js
xor
lods
mov
sbb
dec
sub
aaa
jne
and
cs
dec
scas
xor
iret
cmc
into
int
cmpsl
sbb
mov
inc
adc
dec
mov
push
aam
test
dec
lea
xor
jne
and
pop
leave
add
add
push
das
cmp
dec
pop
repz
les
dec
call
daa
cmpl
pop
fcomp
and
das
dec
xchg
mov
adc
and
push
xchg
jne
je
pushf
mov
pop
popa
mov
dec
outsl
pop
jle
add
sub
nop
mov
bnd
scas
add
mov
repz
mov
out
sbb
push
test
stos
mov
stos
fcoml
jmp
pop
xor
and
mov
and
adc
popa
mov
xor
das
jbe
out
test
sub
imul
or
cmp
repnz
cmp
dec
mov
push
pop
inc
push
xchg
andb
es
nop
adc
sub
nop
mov
test
pop
fs
jmp
or
gs
divb
mov
mov
int
sub
stos
insl
test
lret
fnstcw
mov
or
dec
dec
cs
test
push
js
add
adc
scas
stc
nop
addr16
jmp
inc
mov
mov
inc
fnstenv
hlt
cli
adc
ss
test
mov
in
add
jnp
testl
and
adc
pushf
push
insb
xchg
fisubrs
jecxz
aas
cmp
ficoml
sub
push
outsl
jb
fstps
sti
push
lret
sbb
and
daa
call
pushf
xchg
lret
add
cmp
mov
jbe
in
sbb
pop
or
inc
shll
fcmovbe
adc
jecxz
nop
push
sti
inc
movsb
push
xor
pop
cmp
hlt
sbb
xchg
pop
push
sub
jbe
jns
add
xor
ss
dec
movsb
xchg
add
and
xorl
xor
push
sti
das
inc
cmpsb
stos
dec
push
fwait
scas
mov
sarl
pusha
sarl
xor
adc
aam
cwtl
cmpl
daa
adc
mov
mov
call
sub
enter
out
adc
xor
int3
pop
fistpl
xchg
inc
nop
xor
xchg
mov
lret
scas
sbb
cwtl
test
push
xchg
loope
mov
mov
outsl
fistps
in
inc
imul
test
or
repnz
sub
dec
sub
push
call
sub
pop
pop
sbb
xor
sub
add
shll
in
lea
stos
fcompl
inc
pop
out
add
addr16
cwtl
shll
bound
data16
lret
in
mov
sub
pop
int3
js
iret
cmp
test
add
dec
or
push
push
mov
add
test
outsb
fiaddl
test
pusha
or
add
add
pop
mov
pop
es
loopne
leave
fildl
add
inc
xor
sahf
mov
call
xor
inc
imul
in
pop
aam
fiaddl
mov
je
fstps
sub
cmpsl
sarl
ret
ja
jecxz
dec
pop
arpl
loop
cmpsb
cmpsl
pop
ret
cmpsl
dec
jg
fldenv
cmp
pop
leave
jno
data16
sbb
mov
hlt
dec
test
andl
jb
sbb
or
jg
rcr
and
and
scas
mov
cld
mov
outsl
pop
and
cmp
cli
cmp
movsl
arpl
pop
jge
or
mov
mov
std
enter
mov
jge
cmp
mov
jns
rcll
sub
push
add
hlt
xor
mov
or
mov
test
push
in
xchg
dec
out
pop
icebp
mov
mov
pop
rorb
add
push
test
mov
jp
pop
rol
loope
sti
cli
add
jg
pop
mov
mov
lret
sub
je
gs
mov
xchg
ljmp
xor
pop
xchg
movsl
sub
aas
jno
jns
shl
lret
repnz
jae
mov
dec
lret
in
add
adc
pop
das
je
dec
sti
cmp
imul
xor
xor
dec
dec
out
adc
add
sbb
stos
mov
aaa
adc
push
push
scas
mov
in
xchg
adc
das
fistps
add
sbb
enter
std
pushf
lea
test
jl
call
out
ss
mov
in
imul
enter
bound
mov
and
inc
cmp
sub
inc
inc
mov
ds
xchg
add
rcrl
and
add
cli
sbb
pop
push
push
mov
shl
pause
popa
andl
mov
pushf
pushf
ljmp
jbe
stc
fdiv
pop
dec
pusha
xchg
mov
dec
scas
add
lock
lret
stos
mov
mov
test
es
pushl
cmpl
fs
mov
insb
lahf
pop
dec
inc
aad
out
mov
fs
je
adc
in
cmp
ds
mov
lock
fs
aaa
and
movsb
xor
es
sub
daa
cmpsb
call
mov
ja
insb
mov
pusha
add
hlt
inc
jnp
jge
adc
pop
xlat
out
test
dec
sti
repnz
hlt
in
clc
or
and
sbb
add
inc
xabort
ds
pop
pop
repz
mov
mov
bound
dec
adc
pop
jae
pop
in
mov
sbb
xor
aas
fwait
repnz
mov
pop
repz
aaa
mov
lock
int
push
adc
pop
lds
mov
addr16
fwait
xchg
pop
vpunpckhqdq
lcall
cli
cwtl
adc
inc
inc
ja
and
dec
dec
incl
dec
sahf
pop
jge
insb
mov
and
mov
aaa
notl
imul
inc
idivb
pusha
inc
out
mov
outsb
mov
nop
mov
iret
sti
xchg
pop
lret
inc
and
imul
loopne
mov
leave
cmp
or
imul
jl
xchg
fcom
ja
imul
loopne
call
les
cs
inc
popa
test
or
sbb
test
ds
out
xlat
fidivrl
jae
divb
or
sti
cmp
pop
pop
iret
in
in
xor
cmc
cmc
icebp
mov
daa
inc
xor
insl
mov
popa
push
scas
sub
pop
push
lods
stc
cmp
mov
cmp
mov
adc
jmp
jae
insb
test
xchg
ss
and
hlt
lcall
add
cwtl
es
sbb
fisttps
pop
cmp
push
hlt
sahf
ljmp
push
push
xchg
push
cltd
jmp
cmp
fs
xchg
dec
pop
and
or
shl
or
pop
adc
test
test
lret
mov
sbb
dec
mul
add
xchg
mov
cld
jmp
js
mov
bound
push
hlt
xlat
xchg
lret
idivl
pop
push
cli
mov
dec
or
cltd
sub
loopne
jmp
and
mov
push
or
lahf
arpl
xor
gs
jmp
jmp
push
cltd
push
loop
push
lret
cmp
scas
mov
mov
notb
cmp
stc
cmpsb
xor
xchg
jecxz
pop
mov
das
xor
pop
inc
leave
mov
or
imul
les
adc
arpl
in
mov
insb
pop
and
jb
rcl
hlt
gs
ja
aad
xchg
inc
sti
xchg
xchg
jo
push
mov
in
cmpb
enter
enter
push
into
loopne
sbb
push
divb
xchg
je
and
sbb
popa
adc
loop
shlb
imul
testl
xor
inc
insb
jns
scas
dec
mov
mov
lock
lahf
test
arpl
ja
in
push
pop
in
pop
dec
lcall
push
popa
pop
dec
jae
mov
jecxz
cs
in
jg
sub
int
fildl
mov
fbstp
jno
leave
adc
cmp
mov
imul
mov
fistpl
movl
jnp
push
or
dec
call
inc
inc
loop
rcr
inc
dec
inc
push
int
mov
out
add
mov
mov
cmp
push
cmpsb
jg,pt
in
fmul
scas
cmp
iret
jge
jmp
jle
pusha
sub
dec
jp
pop
mov
pop
cmp
xor
xor
in
ficoms
pushf
notl
lahf
jbe
cwtl
dec
xor
dec
add
adc
or
inc
idiv
scas
jge
enter
into
inc
popa
sbb
push
repnz
mul
dec
cmp
push
cmp
xor
fcmovu
pusha
xchg
int3
call
adc
jl
and
and
clc
mov
mov
stc
out
pop
jb
ret
or
dec
xor
leave
seta
pushl
insb
pop
jne
movsb
rorb
clc
ds
cmp
pop
gs
mov
into
scas
and
xor
jl
or
hlt
sbb
sub
test
xchg
out
data16
cmpsb
pop
jbe
xor
gs
pusha
fcom
ret
sub
xchg
aad
xor
out
add
mov
sbb
add
add
add
mov
fidivrl
add
and
adc
xchg
lcall
pop
aam
mov
cli
pushf
adc
shlb
add
lock
outsb
neg
hlt
mov
lds
jnp
and
addr16
and
xlat
int3
addr16
adc
mov
scas
adc
gs
les
fwait
stos
sub
es
push
add
scas
je
in
outsb
cmpsl
loopne
imul
repz
mov
gs
stos
sub
psubsb
jb
scas
fbstp
inc
mull
mov
and
mov
in
clc
jle
sub
rcl
mull
test
imul
dec
xchg
aas
test
das
dec
enter
into
cld
push
pop
jl
pop
in
outsl
or
jne
mov
add
sub
fdivrs
out
test
xor
adc
pop
add
jmp
adc
xchg
lods
sub
push
fldcw
fwait
icebp
add
fucom
sahf
movsl
or
cwtl
push
out
pop
inc
push
cmpsl
es
cmc
xchg
jp,pn
stos
jmp
cltd
cwtl
xchg
xlat
xchg
mov
scas
outsl
jne
and
pop
adc
add
jecxz
data16
movsb
add
sub
mov
in
jl
in
subb
dec
adc
fcoms
stos
jne
cwtl
pop
mov
mov
dec
out
hlt
lds
add
shlb
cmp
inc
mov
push
inc
or
stos
or
negb
cmovl
lea
adc
je
adc
fs
pop
mov
adc
sub
pop
idiv
xchg
hlt
decb
add
push
pop
pop
nop
popf
cwtl
cmp
sbb
sbb
addb
and
xor
inc
adc
rcl
lock
inc
cmpsb
outsl
push
ds
shrb
std
dec
lds
mov
insl
inc
dec
xor
popl
adc
jb
inc
pop
and
cmp
cmpsb
or
or
xorl
mov
xor
push
aad
not
test
sbb
sbb
aad
xor
in
jo
mov
mov
jns
xchg
or
xor
mov
mov
mov
sub
dec
pop
stc
inc
xor
adc
movsb
or
into
xchg
xchg
clc
mov
enter
mov
cs
fdivs
jl
data16
jmp
nop
or
mov
or
dec
inc
xchg
adc
das
push
mov
xor
pop
xlat
inc
inc
inc
das
lret
test
xchg
xchg
orl
lods
lret
adc
mov
jo
or
cmp
xor
adc
mov
xor
int3
leave
xor
sub
fwait
scas
jmp
aaa
ret
xlat
sbb
push
sti
cwtl
lcall
ret
push
pushf
leave
out
and
jmp
inc
loop
int3
sti
pop
xlat
sbb
pop
rcl
nop
mov
pop
xor
cmp
cld
xchg
sub
cmp
lods
frstor
cmpsl
fwait
addr16
iret
repnz
test
hlt
push
out
cmc
adc
stc
sarl
test
add
and
test
cmp
rorl
ljmp
cmp
enter
lods
sbb
jb
sbb
pop
jmp
dec
pop
and
insb
sub
ret
andb
popa
fstp
jnp
pusha
in
icebp
cmp
fs
jg
add
enter
je
jmp
pop
cmp
les
xchg
outsb
xor
orl
pop
inc
cmc
loopne
stos
lcall
sbb
mov
dec
ret
sbb
imul
xchg
pop
test
xlat
or
inc
cmp
mov
loope
imul
ret
xor
in
pop
mov
shrl
sbb
and
adc
cmpsb
adc
and
repnz
sarb
xor
pop
sub
ret
int
in
jno
call
shr
mov
out
inc
lcall
cmpsb
or
lea
xchg
pop
mov
les
int
movsl
mov
aad
push
insl
adc
pop
lods
jb
std
enter
mov
or
add
repz
jnp
int
mov
imul
mov
mov
pop
inc
dec
mov
sahf
push
dec
mov
mov
aas
sahf
cmp
movsb
insl
mov
fwait
sti
ds
imul
imul
sub
sub
jnp
add
xor
inc
aad
cwtl
and
push
std
out
xor
cmpsb
xor
pushf
vandnps
push
jge
push
ret
loop
sbb
bound
pop
mov
test
or
clc
test
daa
jno
or
or
xor
dec
adc
cmpb
mov
ja
pop
pop
sbb
dec
in
xor
aad
cs
add
loop
jae
pop
test
shlb
hlt
sub
xlat
or
icebp
sbb
leave
xor
ret
or
pop
pop
jae
adc
int
sbb
icebp
push
dec
mov
push
push
lret
cmp
mov
in
popa
xlat
int3
sbb
insb
loopne
adc
jp
pop
icebp
mov
xchg
push
loopne
jns
push
push
repnz
fdivrs
fidivrs
push
cmp
leave
jbe
jbe
xchg
popa
ret
aad
lcall
xorb
mov
insb
mov
mov
lret
cmpsl
xchg
push
movsb
out
jg
xor
cmovb
hlt
scas
ss
mov
test
ja
mov
sbb
in
imul
outsb
outsb
push
mov
push
jl
lret
jnp
je
push
mov
or
outsl
or
or
pop
jnp
xor
add
push
cmc
fcoml
hlt
xchg
fsubs
ret
jecxz
lret
lahf
push
fnstenv
cmp
not
cmc
pop
inc
dec
jg
je
mov
add
jb
push
js
and
pop
into
adc
adc
lods
adc
and
mov
mov
add
sarb
adc
decb
sbb
in
je
and
mov
or
pop
nop
out
inc
pop
xor
inc
push
std
scas
jp
cmpsb
in
stc
inc
roll
mov
add
cwtl
aaa
fwait
mov
lret
pushf
stos
outsl
neg
dec
adc
popf
jp
je
sti
or
pop
rcr
jb
inc
popa
lcall
data16
ds
sbb
aaa
sub
pop
sti
push
mov
and
push
jno
pop
xchg
dec
or
adc
aas
pop
push
jb
stc
xor
int3
xor
add
loop
inc
repnz
in
ss
xchg
repz
mov
pop
mov
dec
or
mov
xchg
inc
pop
daa
ljmp
or
xchg
clc
sub
insb
jmp
in
cmpsb
jne
pop
mov
lods
pop
iret
jb
xchg
insl
cwtl
cmp
out
xor
add
jg
or
stos
jl
cwtl
rcrl
inc
loope
or
jns
mov
addr16
mov
dec
lahf
das
sub
inc
inc
ljmp
ja
jns
inc
mov
pop
movsb
fs
add
scas
test
jmp
das
mov
or
enter
loop
clc
rclb
dec
pop
dec
cld
xor
pusha
pop
add
call
lahf
pop
push
aaa
stos
das
inc
test
jmp
cmpsb
cmpsb
imul
adc
in
shlb
mov
push
inc
std
hlt
repz
inc
in
jae
and
inc
sti
sbb
loopne
mov
dec
sub
int
xor
fimuls
outsb
dec
ds
shlb
cwtl
dec
loopne
das
pop
push
push
mov
jle
push
jecxz
mull
call
scas
or
push
aam
and
shrb
addl
dec
dec
add
test
mov
push
das
lcall
ja
aam
and
add
add
sub
jmp
fiaddl
idivl
pop
jae
dec
pop
mov
jecxz
push
jb
mov
jmp
int3
cmp
and
and
aam
push
sub
cmp
gs
insl
loopne
scas
fsubrl
push
cmp
push
mov
inc
add
or
push
mov
adc
jnp
mov
loope
stc
movsb
push
dec
mov
sub
xlat
push
push
mov
and
fwait
cmp
push
mov
mov
push
xor
in
mov
adc
fwait
add
jne
xor
push
movsb
popa
inc
xor
stos
loopne
cmp
lret
jns
cwtl
adc
outsl
sbb
stc
or
loopne
dec
or
addr16
push
sbb
sbb
jmp
cmc
lahf
movsb
test
mov
test
jnp
inc
loopne
hlt
jmp
xchg
inc
adc
and
inc
sbb
mov
call
mov
loop
mov
inc
mov
out
pushf
popa
pop
mov
aad
adc
xor
xor
test
adc
xchg
pop
sbb
cmp
int3
dec
mov
mov
add
in
incl
std
dec
in
in
sqrtps
fdivs
in
cmp
sbb
subb
test
movsl
stos
jnp
shll
jecxz
repz
xor
les
jae
aam
sub
xor
xchg
in
xchg
mov
int3
addl
nop
sub
lods
hlt
call
mov
jp
inc
xor
cmp
iret
idivb
test
xor
add
jp
in
adc
cli
xchg
shld
mov
stos
inc
adc
int3
jp
lea
sti
mov
jb
testl
mov
sub
pop
andb
gs
mov
gs
jge
lret
dec
push
mov
jge
roll
push
push
mov
testl
xor
in
inc
lcall
mov
jne
mov
test
andb
mov
negl
jo
pop
lds
mull
mov
movsl
adc
call
cmc
xor
testb
sbb
adc
cmpsl
loop
sbb
inc
shrl
popf
fsubrl
hlt
dec
ds
repz
outsl
lahf
leave
int3
push
push
in
aam
sbb
out
lcall
and
push
dec
cltd
out
mov
xchg
mov
ss
add
fwait
and
clc
in
jo
push
loop
mov
insl
lret
pop
ds
pop
dec
rolb
push
xor
js
push
jnp
sub
mov
mov
in
xchg
pop
out
icebp
data16
jns
xor
cmpb
inc
adc
movsl
cltd
scas
or
or
mov
dec
and
fcompl
inc
fwait
adc
inc
jns
jp
jge
lret
mov
inc
mov
outsl
xor
fisubl
pop
sbb
je
cld
or
add
mov
pop
les
aas
mov
xor
adc
push
jmp
scas
lret
jbe
fidivs
adc
fxch
rolb
cmpsl
iret
or
xchg
outsl
cmc
mov
sbb
xchg
cmp
popa
jb
add
jecxz
dec
out
stos
mov
jg
leave
mov
mov
xchg
test
je
jb
enter
or
cli
push
mov
iret
das
lods
xchg
fnsetpm(287
cmpsl
push
pop
cmp
daa
in
jle
mov
bnd
push
outsb
sbb
sar
out
dec
stos
jns
mov
add
push
xchg
int
gs
inc
cmp
stos
adc
push
push
adc
jae
pop
xchg
mov
imul
jnp
ret
insl
cmc
mov
js
sbb
cmpsl
or
dec
xchg
loope
cmp
add
and
out
cmp
cmc
call
les
int
mov
pop
cli
aas
lock
dec
xchg
and
cmp
xor
push
test
add
fld
lret
dec
mov
jle
popa
lret
popf
mov
add
inc
jg
jne
outsb
into
pushf
subl
inc
test
sub
adc
dec
or
ja
pop
repnz
mov
push
push
pop
dec
dec
in
outsb
xlat
sub
out
inc
arpl
xchg
and
add
scas
push
dec
int3
imul
dec
add
lahf
dec
push
outsb
cltd
xor
dec
mov
sbb
imul
mov
sub
stc
xchg
cmp
jo
subl
jno
lret
cld
lods
fs
cmc
pop
inc
mov
push
movsb
or
imul
stc
jge
rclb
cmpsl
movsl
lret
xor
das
andb
mov
jb
lock
mov
ffreep
cmp
mov
jbe
aam
inc
or
ds
mov
in
push
xorl
sub
push
cmp
mov
icebp
daa
jbe
pop
xor
sbb
ret
int3
xor
fldcw
dec
movsb
mov
push
lea
into
out
popf
adc
xchg
push
xchg
add
and
loopne
mov
push
jge
into
bound
outsl
push
shlb
xor
mov
je
enter
stc
xor
loope
data16
jp
pop
dec
mov
daa
pop
pop
fwait
pop
cmc
in
adc
into
sbb
jg
push
outsb
cmp
pop
movsl
mov
iret
adc
movsl
jl
add
mov
lods
iret
gs
sbb
xchg
pop
xchg
inc
push
stc
add
inc
loopne
mov
add
jbe
fstl
in
outsl
xor
out
aad
movl
cmp
or
lds
mov
iret
adc
mov
iret
jmp
ljmp
mov
inc
insl
pop
cwtl
ret
sub
dec
ljmp
mov
add
mov
mov
pusha
cmp
pop
push
test
and
scas
fdivl
add
jecxz
jecxz
cmp
and
ljmp
int3
sub
imul
push
or
icebp
or
push
lods
pop
stos
icebp
arpl
push
lea
loopne
loope
push
inc
mov
cwtl
xchg
push
or
movl
add
mov
int
xchg
xorb
and
outsb
or
inc
jl
xchg
cs
sub
sub
or
inc
add
outsb
std
mov
add
mov
out
sbb
xor
mov
xchg
mov
sub
movsb
jp
repz
or
sbb
add
out
pop
test
mov
in
mov
mov
inc
test
popa
jmp
sbb
out
xchg
outsb
movsl
adc
je
fcoml
outsb
mov
adc
icebp
xchg
divl
aad
adc
test
adc
arpl
mov
popl
dec
cwtl
mov
in
nop
insb
sub
scas
and
or
fs
mov
ret
popa
clc
jp
cli
inc
or
xchg
mov
jmp
loop
jmp
fs
xlat
mov
ds
ja
int
fs
jbe
test
test
pop
mov
add
cwtl
lahf
jl
or
pop
insl
and
loop
js
xchg
add
xor
add
mov
sbb
test
jp
rol
cmp
ror
lock
nop
xchg
jne
outsb
in
and
pop
add
lock
cltd
push
push
inc
jg
ret
xchg
mov
and
xchg
mov
and
inc
sbb
cmpsl
call
pop
popf
jns
es
lods
mov
subl
xor
mov
cmp
pop
adc
mov
les
pop
mov
xor
pop
sbb
mov
es
nop
test
pusha
and
pop
imul
lods
adcb
loope
into
repz
daa
mov
js
add
jne
mov
sbb
and
sahf
loopne
cs
ficoms
jl
or
call
push
jge
lock
mov
sub
rcll
fldenvs
jnp
cmpsl
enter
lods
out
je
outsl
stc
mull
iret
xchg
push
jge
nop
sub
cmp
rolb
iret
mov
mov
popa
fdiv
sub
and
adc
and
jp
test
pusha
shll
movsb
sub
rcrb
shrb
arpl
test
jmp
dec
jge
jb
or
test
leave
xor
negl
repnz
jno
xor
push
lds
pop
and
lcall
lds
and
in
cli
pop
jnp
xchg
jg
nop
xchg
bound
repnz
inc
out
push
in
cmp
dec
mov
lret
cmpsl
mov
cltd
pusha
popfw
leave
out
sub
lock
mov
pop
push
add
push
rolb
ss
mov
bound
ss
hlt
ret
jl
out
repz
mov
cmp
out
mov
test
mov
inc
data16
and
or
lcall
push
iret
aam
test
inc
sbb
and
mov
pop
add
lcall
sub
and
sub
xchg
sar
out
daa
xor
jnp
or
test
add
mov
sbb
aam
scas
jecxz
jecxz
mov
add
ret
and
cmc
xor
add
jecxz
mov
popf
lods
fwait
testl
insl
sbb
or
inc
xchg
fildl
fldenv
scas
out
sti
loopne
fbld
insl
rcrl
and
out
jno
adc
lahf
mov
es
xchg
shl
mov
push
cmc
push
out
mov
sbb
cwtl
jne
mov
adc
sar
bound
jb
adc
arpl
adc
sub
enter
fisttps
mov
insl
mov
or
inc
je
lea
mov
in
mov
jb
jge
or
mov
xor
rep
sbb
fs
mov
inc
mov
mov
adc
jae
jnp
scas
test
mov
int3
shlb
jle
adc
adc
scas
xlat
cmp
divb
pop
xor
nop
cmp
adc
push
xor
movsb
dec
xchg
mov
icebp
xor
mov
les
adc
and
jmp
cld
or
in
loope
ss
sbb
dec
pop
adcb
data16
inc
jmp
add
and
mov
hlt
sbb
pop
call
stc
sbbl
sub
pop
scas
cmp
ja
mov
dec
adc
xchg
add
xlat
leave
sbb
xlat
lret
pushf
ds
enter
ds
xor
das
fwait
push
xchg
notb
adc
ret
enter
int3
lahf
jmp
stos
das
and
addl
dec
cld
xchg
xchg
mov
jae
push
or
dec
nop
icebp
in
movsb
test
pop
jecxz
xchg
imul
pop
mov
and
inc
int
stos
loopne
mov
inc
dec
movsb
adcl
mov
dec
lret
test
jae
mov
in
xchg
out
jmp
mov
fbstp
lods
add
movl
add
mov
cli
pusha
xchg
mov
fisubl
sbb
fistpl
cmp
int3
xor
xchg
mov
add
add
sti
mov
ds
ret
pop
xchg
jl
add
and
mov
fimuls
dec
add
xor
popa
mov
pop
mov
mov
arpl
lods
and
push
rcrb
xchg
push
lods
cmp
hlt
daa
mov
repz
ficoms
push
shl
fldlg2
subl
lea
jge
mov
in
jp
adc
cltd
lret
pop
and
cld
xchg
adc
daa
cmpsl
outsl
adc
cmp
xchg
movsl
adc
sbb
pop
iret
leave
gs
arpl
in
dec
cmp
mov
lcall
outsl
pop
outsb
shl
xchg
and
jp
sbb
inc
add
loopne
cmp
les
mov
pop
push
jnp
cmp
dec
cmp
insb
sbb
mov
jge
ret
adc
decb
xor
or
loopne
loopne
push
dec
xchg
jno
xchg
mov
mov
adc
mov
stos
hlt
sub
outsb
filds
xchg
sbb
adc
pop
jge
fstpt
imull
icebp
pop
push
nop
sub
pop
push
addb
sarl
es
loop
sbb
xchg
mov
inc
push
scas
out
mov
lret
jne
scas
gs
adc
call
dec
lcall
loope
push
cmpsl
cmp
inc
lcall
xor
jl
and
push
push
xor
popa
enter
loope
loopne
cmpsl
int
movsb
das
xchg
jp
ds
pop
xchg
es
cmc
xchg
out
push
mov
mov
rcl
shlb
arpl
sub
stos
cli
rcl
xchg
mov
fwait
xor
jecxz
jo
popl
popf
mov
inc
sahf
mov
aad
push
xchg
fnstsw
ds
scas
std
or
pop
push
mov
into
add
lahf
jae
ja
out
jbe
pushf
cmpb
mov
mov
iret
pop
test
and
xchg
push
repnz
lahf
and
scas
cmpsl
adc
mov
or
mov
loopne
mov
pusha
sub
into
mov
dec
adc
imul
ja
jae
ljmp
push
sbb
popf
mov
sub
int3
pop
icebp
enter
mov
dec
mov
cmp
test
adc
inc
inc
loopne
push
sub
dec
ds
nop
out
push
inc
nop
cli
sub
push
jb
jne
mov
jge
adc
imul
sub
add
lea
fstpt
iret
stos
inc
mov
add
xor
push
fdiv
clc
int
js
aam
sbb
or
out
mov
mulb
out
lock
cmc
mov
mov
insl
or
cld
pop
leave
xor
cmpsl
scas
add
fcmovnb
jge
int3
mov
dec
hlt
outsb
mov
fstpt
jl
imul
imul
jp
and
dec
out
cs
inc
mov
sbb
mov
push
push
or
in
jge
cmpsb
pop
pop
push
pop
into
aam
and
push
leave
in
inc
pop
ja
and
jp
sbb
fisubl
test
ds
mov
sub
adc
aad
mov
mov
push
dec
addr16
and
insb
aam
or
addl
out
jbe
jns
mov
jle
and
inc
dec
jne
and
add
out
push
out
inc
push
rcr
mov
pop
and
addl
pushf
push
fmuls
push
jmp
aas
jp
ret
and
movaps
adc
ja
mov
ja
cld
pop
inc
add
mov
sti
pop
adc
js
loopne
orl
gs
sbb
pop
adcb
or
dec
test
xchg
fidivs
cld
popf
shlb
cli
adc
icebp
add
dec
shll
sbb
mov
mov
adc
test
outsb
scas
dec
sub
adc
add
inc
sub
jecxz
pop
sbbl
xor
adc
nop
add
fsub
inc
test
jecxz
in
jle
aaa
pop
adc
jl
repnz
add
inc
xor
push
xchg
add
fs
inc
leave
dec
inc
inc
out
ret
pop
jnp
inc
pop
xor
xor
pushf
mov
jg
sbb
cs
dec
sti
filds
sub
xchg
js
sarl
sbb
jo
pushf
sub
mov
and
cli
pop
mov
ja
sbb
mov
cmpsb
jae
test
loope
outsb
adc
add
xor
dec
leave
mov
jne
rol
or
out
push
icebp
sahf
pop
adc
push
mov
jl
add
cmp
cmp
sbb
inc
push
or
mov
lret
test
sahf
sbb
gs
inc
test
dec
test
jl
cmc
imul
mov
dec
jecxz
cld
pop
jns
or
jge
add
mov
add
test
mov
mov
sbb
inc
ljmp
inc
clc
mov
and
scas
int3
sub
mov
test
loopne
xor
mov
mov
jnp
lds
clc
mov
adc
adc
test
xor
mov
sub
and
ss
jae
xchg
sub
rclb
sarl
add
fnstenv
fidivs
fcoms
mov
push
push
mov
ret
ficoml
add
add
insl
pop
add
sub
or
inc
or
out
pushf
and
pop
fstpl
sti
int
mov
sub
push
push
cmpsb
jecxz
and
aad
sbb
jle
insl
pop
mov
sub
lds
xor
and
ret
out
jo
pop
push
dec
and
mov
lahf
cmpsb
xchg
dec
and
sti
incb
mov
nop
pop
pop
clc
imull
jnp
pop
add
test
or
mov
data16
jne
xor
mov
stos
test
mov
insb
push
ficomps
sub
imul
popa
daa
dec
cmp
jmp
dec
ljmp
pop
test
fsubs
mov
faddl
adc
gs
push
jns
repnz
leave
adc
scas
ficoms
call
cmp
ja
jp
pop
scas
jbe
pop
push
jb
pop
scas
imul
push
pop
mov
iret
outsb
and
lds
pop
cmp
or
daa
sar
push
sbb
inc
incb
push
jecxz
arpl
push
xchg
lret
add
and
or
push
mov
add
and
push
and
test
subl
gs
mov
push
xchg
xor
and
push
add
aas
xor
adc
rol
jno
xor
das
loope
push
xchg
outsb
mov
xchg
scas
stc
fldl
pop
sbb
jae
cmp
adc
insl
scas
push
mov
mov
cmp
pop
inc
mov
clc
or
adc
xor
xchg
inc
mov
lahf
jno
in
add
inc
mull
test
mov
mov
jle
cmp
gs
imul
inc
loop
xor
test
cmp
lock
pop
aam
pop
or
nop
or
push
lret
les
jo
dec
shl
mov
jb
xor
popf
sarb
mov
gs
sub
movsb
fcompl
cmpsb
fadds
push
cld
cmp
loope
inc
push
push
pusha
mov
push
scas
sub
loope
xchg
jne
adc
jne
dec
or
test
aas
jge
int
push
jmp
sub
pop
js
lea
xor
sbbb
decb
push
test
fs
adc
adc
push
orl
inc
adc
mov
sub
xchg
dec
fcmovnbe
sahf
dec
push
inc
jmp
in
repz
fistps
and
xlat
lods
or
mov
repz
ja
loop
iret
push
mov
sbb
enter
mov
hlt
mov
adc
inc
insl
jmp
mov
ds
rcrb
outsl
jnp
rolb
add
add
or
ffree
or
dec
fs
jns
int
push
jne
and
rol
mov
test
sbb
psubusw
cmpsl
std
insl
hlt
lahf
test
insl
sbb
sub
ret
xchg
adc
inc
cmpsl
sub
fucomi
push
adc
std
out
push
xchg
dec
icebp
test
ret
aas
push
pop
orb
inc
out
jb
pop
test
or
movsl
inc
sub
sub
push
into
loop
dec
mov
push
inc
pop
pop
daa
stc
int3
sub
pop
mov
mov
mov
mov
iret
jl
cmp
test
scas
lret
outsb
nop
cmpb
jmp
push
mov
orl
inc
sbb
add
in
dec
jmp
lods
test
movsb
shl
je
mov
jg
add
sar
push
fmuls
xchg
mov
mov
add
sub
push
inc
xchg
lock
fcoms
clc
out
xchg
xchg
repz
out
adcb
mov
pushf
and
cmc
iret
and
aaa
jbe
shrb
jecxz
repz
jo
aaa
adc
outsl
add
fmul
decl
mov
and
cmp
sbb
mov
vmovntps
xor
jbe
lcall
or
xchg
incb
xchg
movsb
fwait
cmp
subl
sbb
andb
push
mov
int3
aad
mov
push
cmc
mov
es
popa
mov
insb
mov
outsb
mov
pop
mov
repz
jbe
mov
enter
cwtl
cs
ret
pop
push
into
loope
hlt
mov
sub
xorl
and
pop
adc
aaa
pop
and
lods
mov
mov
jbe
stc
add
pop
cmpsb
or
movsl
scas
mov
mov
test
pop
fbld
xchg
mov
xor
jo
sete
xchg
inc
jp
insl
pop
sub
aaa
arpl
enter
mov
fidivrl
xchg
cmpsb
adc
jns
jle
jg
cli
jo
pop
js
ud0
inc
cs
loopne
cmp
sub
mov
repnz
jecxz
cmp
into
incb
cli
push
shll
jp
fadds
call
in
mov
add
mov
mov
pop
in
dec
dec
sbb
repnz
add
je
xor
sbb
pop
cli
cld
pop
xor
push
cmc
ljmp
pop
stc
pop
add
int
int
or
adc
movsb
cltd
fldl
cmpsl
xchg
bound
lods
xchg
js
icebp
xorb
fdivrs
mov
pop
or
pop
movsb
push
loopne
sbb
cmp
iret
mov
push
xchg
inc
xchg
or
add
or
rcll
fisubs
nop
xor
mov
jge
jo
mov
and
add
or
lcall
leave
xor
sub
leave
and
dec
push
sbb
out
mov
stos
js
scas
xchg
pop
push
pop
movsl
stos
cmp
mov
dec
rolb
sti
push
cli
push
mov
cmp
push
adc
mov
ja
cmpsb
call
ljmp
popa
xor
cmp
sbb
jne
into
sbb
push
or
enter
loope
mov
sbb
lea
or
clc
pop
dec
mov
add
adc
cld
mov
out
mov
xorb
sub
jle
push
in
icebp
pop
push
in
jecxz
jl
jae
arpl
lea
fdivrl
jne
or
push
jnp
push
jbe
or
ljmp
push
call
andb
mov
cmc
lods
jle
es
push
add
pushl
lret
orl
xlat
or
inc
or
dec
xor
dec
lcall
lods
ljmp
ljmp
imul
inc
pop
mov
in
lahf
dec
in
jle
xor
fisttps
xor
jns
or
loop
in
out
mov
sub
mov
ja
movl
or
push
cvtpi2ps
jns
sar
xor
dec
popf
push
and
pop
rorl
in
sahf
xor
pop
pop
or
int
ret
mov
or
dec
mov
jne
jecxz
lret
mov
push
cmc
mov
dec
adc
xor
cmp
das
mov
jle
jns
lcall
xchg
sarl
lods
orb
sarb
pop
std
xor
xchg
dec
addr16
icebp
daa
mov
dec
mov
scas
les
lock
and
and
dec
sarl
fidivs
scas
out
mov
pop
fdivl
mov
or
pusha
rorb
add
pop
cmpsb
adc
mov
test
push
add
and
mov
and
mov
push
push
cwtl
mov
jg
xchg
outsl
sbb
sti
loope
xchg
pop
mov
scas
dec
leave
xor
mov
dec
lea
jecxz
or
pop
iret
fstpl
ret
add
out
and
sub
fldt
adc
sub
dec
in
xchg
ss
test
jne
inc
cmp
mov
clc
push
jmp
out
insl
imul
or
and
inc
cmp
add
sarl
ds
mov
rorl
icebp
cmp
outsl
jae
sub
stc
cmp
cmp
mov
jnp
jecxz
sarb
cmp
outsl
lret
popa
fsubrs
test
adcb
fwait
rorb
pop
sbb
adc
or
les
mov
mov
inc
shrb
inc
inc
testb
and
mov
sub
shlb
rcrl
xchg
int
jge
stos
cltd
cltd
idiv
in
ljmp
out
adc
cmpsl
add
paddb
pop
jle
fwait
push
imul
imul
test
icebp
lock
repz
pop
cmp
jno
inc
jle
aad
or
out
push
lods
data16
xor
iret
lods
jae
push
imul
jg
mov
in
sub
fcomps
stos
cmc
inc
xlat
bound
cli
jmp
ja
adc
push
mov
scas
push
xchg
xor
movsl
mov
fcomip
mov
push
mov
jle
addb
jae
add
xor
sbb
jge
sbb
xor
adc
lret
mov
mov
in
icebp
adc
sub
lahf
pusha
jecxz
cs
push
pop
in
sahf
add
push
mov
fiadds
xchg
pop
jp
or
fadds
rcl
push
fs
mov
mov
scas
aas
cs
loopne
mov
test
in
cwtl
js
mov
push
jne
aad
mov
adc
sbb
rclb
mov
test
add
ss
cmpl
mov
call
data16
ljmp
loop
jb
imul
push
jnp
and
outsl
mov
add
fwait
int
jp
mov
xchg
ss
jnp
test
push
sarb
out
push
ror
leave
mov
dec
stos
daa
sub
sub
jae
loopne
scas
divl
mov
inc
daa
or
fcmovb
jb
ficoms
insb
shlb
in
inc
add
mov
jmp
mov
xchg
mov
add
les
cmp
cs
out
loop
mov
icebp
adc
fstl
add
enter
jmp
mov
adc
aad
mov
in
cmp
add
int
cltd
push
out
pusha
and
push
inc
xor
cmp
out
out
cmp
mov
pop
cmp
je,pn
dec
data16
xchg
mov
xchg
mov
xchg
test
jmp
pop
ljmp
mov
shrl
jnp
push
and
sub
push
js
and
mov
cmp
mov
xchg
jle
cltd
dec
inc
addr16
pop
xorb
inc
outsl
in
mov
aad
or
pushf
adc
fs
stos
xchg
push
sbbl
loopne
inc
lret
inc
scas
outsb
pop
lods
dec
sahf
inc
or
xor
xchg
insl
or
sahf
out
dec
js
mov
loop
cmp
lock
xor
lret
aaa
sbb
out
aad
xorb
fldt
adcl
adc
jno
cmp
fstps
in
pop
scas
ds
mov
lea
pop
pop
jns
push
or
out
mov
lret
loop
mov
inc
lods
cmc
sti
out
sbb
outsb
in
loopne
je
lock
xor
adc
sub
testl
xchg
jmp
sbb
adc
cld
or
adc
or
incb
stos
sbb
or
stc
or
lds
inc
sbb
or
mov
push
pop
sbb
cltd
cld
cmpsl
icebp
add
int3
jmp
push
lea
cltd
mov
xlat
dec
aam
push
ret
jns
mov
fs
fistpl
ss
xchg
repnz
xor
call
jecxz
sbb
pop
cmpsl
lods
stos
add
adc
mov
repz
add
out
jl
push
arpl
pop
xlat
stc
xor
pop
push
cmp
loope
div
incl
aad
xor
push
out
shrb
and
push
das
ds
jae
aas
mov
mov
xor
sub
les
add
dec
adc
fldenv
out
xlat
adc
sbb
and
xchg
cltd
mov
fidivl
or
cli
xor
sahf
leave
repz
and
cmp
inc
jge
sub
inc
mov
mov
stc
sub
sbb
lock
stos
out
and
rol
dec
xor
cmp
imull
ds
push
dec
pop
repz
adc
outsl
jp
lock
push
imul
bnd
pop
pop
rolb
adc
addr16
std
pop
xchg
mov
jge
xlat
xchg
lds
mov
insb
inc
inc
and
out
call
pop
add
push
push
mov
jns
push
push
stc
fildll
cmpsl
gs
adc
xchg
dec
call
xchg
pushf
mov
pop
pop
and
push
sub
pop
mov
mov
mov
popf
pop
imul
xchg
jo
lret
xchg
mov
and
out
push
dec
jne
xchg
add
mov
mov
js
inc
ss
sti
jbe
mov
sub
lret
mov
sub
push
add
inc
pop
sbb
and
jmp
popa
nop
push
sbb
jle
ds
jne
mov
cltd
sbb
fwait
mov
push
add
inc
cmp
jbe
jns
sbb
mov
pushf
or
xchg
mov
or
nop
ret
lds
subl
call
sar
push
fcomps
mov
push
pop
pop
and
mulb
mov
in
push
stos
xor
jp
repz
or
dec
pop
push
lea
sti
pop
lods
into
fisttpl
sub
adc
and
jne
cmpsb
pusha
outsl
mov
pop
mov
push
and
rolb
idivb
mov
adc
mov
push
imul
movsl
sub
sub
dec
cmp
push
xchg
add
outsl
bound
sbb
mov
push
adc
shll
lahf
jg
cltd
cmp
or
les
or
in
cmp
pop
std
fimull
push
mov
pop
movsb
daa
mov
inc
push
mov
sbbb
data16
test
rolb
lods
sbb
jp
dec
mov
cld
dec
fcomps
push
sbb
std
sbb
sub
lods
aaa
cmp
sbb
test
or
pop
ret
mov
jae
mov
lret
cltd
mov
xchg
sub
pop
xlat
xchg
std
jl
mov
sbb
fbld
incb
scas
jl
mov
lcall
lahf
das
xor
imul
xchg
pop
jno
sub
push
adc
mov
mov
dec
call
sub
xchg
gs
rorb
cltd
std
in
jb
xor
lret
ss
fcoms
sbb
or
xchg
or
jo
stc
shll
mov
popf
pop
inc
mov
lods
cli
and
sub
int3
push
repnz
and
sbb
in
mov
shll
cmp
sahf
rcll
lds
repz
lods
sub
stos
inc
in
ss
dec
push
pop
cmp
fsubl
sbb
iret
inc
adc
popa
lcall
mov
adc
clc
jge
gs
sti
fistl
stc
lock
mov
fwait
outsb
lcall
pop
mov
inc
shll
push
mov
jl
arpl
cmp
or
test
xchg
jns
jnp
jns
xor
add
es
sbb
cmp
fcoms
out
mov
mov
pop
lea
jle
inc
cmp
popl
orl
lret
aad
mov
xchg
xchg
addb
add
and
loope
add
dec
call
mov
fsubrl
insb
inc
rcll
sbb
xor
pop
icebp
fld
mov
idiv
xor
out
jl
pop
ljmp
xchg
sub
adc
push
jg
mov
push
ss
aad
jae
bound
pop
imul
cld
or
jmp
out
fldcw
mov
mov
call
mov
sub
sbb
cwtl
inc
mov
hlt
hlt
inc
popf
rcl
roll
jmp
stos
push
inc
data16
into
jge
adc
dec
pusha
out
aaa
adc
test
inc
xchg
pop
or
gs
subl
frstor
iret
nop
outsl
popa
movsb
rol
leave
nop
mov
dec
jnp
popf
pop
or
sub
fbld
ljmp
cmp
call
gs
push
push
and
push
mov
fmul
ljmp
mov
cmp
adc
cli
or
xchg
dec
inc
in
icebp
js
sbb
arpl
push
decl
xchg
stos
sti
jbe
lock
push
std
xor
in
jbe
sbb
out
and
push
je
jge
xchg
xchg
mov
mov
incb
lds
lea
push
gs
sti
push
loopne
or
sbb
mov
repnz
pop
cli
push
in
mov
das
and
gs
imul
mov
imul
pushf
cwtl
and
xor
ja
dec
sbb
xor
insl
test
out
out
ja
cmpsl
cld
test
push
out
mov
push
mov
ret
test
outsl
pop
dec
in
loopew
int
movsb
mov
sub
es
or
ret
adc
fisubl
out
imul
inc
fcmovnbe
xlat
addr16
les
popa
add
sub
fimuls
jns
fdivrs
lods
call
adc
call
lock
xor
mov
mov
or
lcallw
add
bnd
mov
lcall
mov
stos
test
stos
dec
in
ficoml
cwtl
orl
sub
or
pop
push
les
cmp
jmp
adc
lcall
xchg
cli
adc
push
jg
xchg
dec
pushl
xchg
xorl
jg
push
or
add
and
push
ds
xor
int3
jecxz
out
jecxz
sbb
test
add
push
jp
push
icebp
sbb
movl
outsb
lods
push
xchg
gs
inc
pop
popf
xchg
lea
mov
aad
repz
add
fsub
jns
mov
int3
pop
mov
pop
cmp
lods
sub
insl
cmp
iret
jb
mov
ja
aad
push
out
dec
inc
out
ss
mov
scas
inc
test
xor
lret
push
inc
sbb
push
shr
scas
scas
jl
fdecstp
repz
jbe
lock
aad
icebp
adc
cmp
push
push
add
xchg
fs
xchg
mov
jp
inc
cltd
inc
mov
fsubp
addl
sub
ss
lea
cmpsb
cmp
mov
mov
cltd
lods
cmp
das
out
cwtl
dec
mov
test
pop
clc
mov
push
cmp
and
push
inc
in
fnstenv
sti
imul
clc
add
add
pop
sbb
add
or
mov
fldt
inc
loop
jae
inc
mov
and
repz
data16
fimull
adc
movsb
pusha
dec
mov
cmp
add
clc
add
ret
subl
aad
push
leave
jmp
inc
jnp
sbb
cmpsl
mov
jae
mov
lahf
js
inc
push
push
mov
shl
int3
xchg
and
sahf
call
xor
inc
mov
pop
pop
das
cmpsl
out
sbb
jg
add
push
inc
icebp
mov
cld
jl
test
sub
add
es
andb
loopne
mov
push
mov
jae
adc
jnp
pop
mov
movsl
cmpsl
gs
adcl
cltd
dec
shl
aaa
das
je
movsb
enter
and
push
imul
cmc
sbbb
out
xor
test
fdivr
xchg
jbe
pop
jmp
insb
pushf
mov
mov
push
cld
adc
js
imul
repnz
add
add
sahf
fidivrl
add
rolb
jmp
add
and
ret
sti
and
cmpsb
insl
cmp
bound
test
mov
cld
mov
cwtl
mov
cmpsl
sbb
sbb
or
outsl
mov
adc
sbb
push
mov
sbb
add
iret
xchg
push
sub
sahf
imul
movsb
movsl
sbb
fwait
imul
pop
out
mov
or
sti
imul
cmpsl
cmp
sarb
in
cmp
mov
ret
movsb
je
push
or
and
sub
mov
dec
mov
fcmovnbe
sub
outsl
stos
add
sbb
insl
lret
push
loope
mov
test
xor
jg
mov
adc
fmul
mov
lock
lahf
push
mov
test
push
push
iret
sbb
jle
push
aad
push
jnp
lock
andl
call
addr16
xlat
fsts
ret
pop
pop
add
add
push
adc
cmp
rolb
imul
xchg
mov
and
out
sti
out
pop
dec
mov
sbb
xchg
popw
push
push
clc
loope
pop
mov
sub
jl
jnp
insl
jo
lcall
ljmp
xor
push
inc
xor
clc
add
xlat
cmpsb
mov
sub
mov
mov
or
ret
jecxz
lcall
out
sbb
int
repnz
out
cs
mov
out
mov
fistps
insl
into
mov
test
nop
cltd
out
sarb
out
adc
xchg
sti
pusha
out
out
es
lcall
ljmp
bound
push
jle
and
sbb
xchg
cmp
sub
xor
dec
aad
sub
lcall
mov
flds
mov
jno
fucomip
xchg
sbb
ret
dec
leave
std
mov
add
mov
sbb
and
jnp
aam
or
cmpl
pop
inc
push
mov
jns
pop
push
xchg
jg
cmpsb
cmpsb
xchg
data16
loop
bound
push
in
jb
sub
lods
cs
and
dec
outsl
inc
mov
dec
pop
out
ret
xchg
mov
mov
pop
negl
pop
mov
in
inc
inc
jl
ret
std
inc
int
movsb
mov
lds
sbb
arpl
imul
lods
push
and
push
js
out
loop
sbb
cmpsb
jne
xchg
xchg
pop
das
mov
jnp
jnp
pop
lea
out
sbb
dec
jae
lock
std
add
testb
xchg
pop
add
into
fbld
or
loopne
add
xor
out
inc
lret
ja
lods
sbb
das
test
mov
dec
sahf
dec
ja
ljmp
mov
ljmp
stc
shrb
cmp
cmp
push
ret
sbb
in
inc
inc
insb
xchg
in
cmp
imul
jle
mov
push
test
nop
adc
sub
pop
dec
daa
cld
daa
mov
jle
repnz
xor
mov
vpcmpeqb
mov
xor
insb
mov
in
pop
idivl
nop
lods
inc
daa
adc
in
pushf
cmp
cwtl
sbb
std
arpl
mov
insl
iret
xor
lea
pop
or
rorb
mov
lock
pop
mov
inc
andps
mov
inc
lea
push
scas
subl
sti
fdivs
fs
test
ja
mov
mov
inc
jns
mul
orl
cmp
adc
pop
push
pusha
inc
xor
ss
loope
pop
inc
mov
sub
fnstsw
les
and
xor
out
inc
mov
lods
sbb
test
adc
mov
pop
pop
lods
sbb
push
pop
or
test
pop
ljmp
data16
stos
sub
sbb
inc
adc
and
std
in
ds
mov
aas
add
lods
hlt
add
int3
xchg
cmp
jge
mov
and
sbb
inc
push
dec
push
int3
adc
lret
or
and
cmp
pop
push
aaa
movb
cmc
jbe
jle
test
mov
xorb
andb
xor
push
and
mov
dec
pop
ja
lea
in
sub
mov
lcall
xor
jge
daa
orb
test
push
sub
cmpl
mov
xchg
mov
pop
nop
popa
ds
pop
fnstenv
subl
fwait
mov
inc
xchg
fildl
cltd
mov
inc
mov
pop
jl
adc
push
movsl
dec
imul
add
mov
pop
fcmovnu
iret
mov
inc
add
cmp
imul
scas
mov
or
cmp
mov
sub
dec
add
jno
fistpll
hlt
mov
jb
or
mov
pop
add
fdivs
pop
pop
push
sbb
rol
inc
imul
arpl
jnp
orb
sbb
cli
xchg
or
jp
inc
mov
nop
ja
stos
cmp
bsf
test
jecxz
ficoms
and
pop
pop
test
lea
out
js
movsl
cmp
mov
push
imul
mov
jg
test
movsl
jg
jbe
orb
into
int3
add
dec
inc
jb
cmp
insl
movhps
or
cli
test
subb
movsb
into
stos
shl
jns
cltd
push
cwtl
adc
dec
lahf
incl
xor
xchg
xor
mov
cmp
je
push
dec
inc
xchg
imul
xchg
shll
adc
bound
mov
mov
loope
sub
fmull
decb
sbb
push
test
mov
sub
pop
push
cmpsb
xor
jge
sub
shlb
push
jge
arpl
leave
pop
int3
jle
rcrl
iret
jle
out
and
ret
mov
and
addl
push
shll
in
imul
mov
push
int3
sub
cwtl
ret
xchg
or
dec
adc
lret
cmpl
xchg
jg
xchg
jecxz
add
ja
xchg
popf
mov
test
test
add
cmc
jl
ret
dec
ds
pop
fucomp
inc
ret
xchg
out
dec
scas
sbb
ds
les
push
fcoms
shrb
pop
and
imul
je
std
iret
rcr
xor
pop
adc
cmp
loope
shlb
sbb
xor
adc
data16
pop
sub
rclb
push
out
fnstsw
insb
jecxz
dec
insl
popa
mov
mov
jbe
das
fwait
jnp
xchg
arpl
xchg
push
lods
sub
roll
lfs
das
dec
jmp
xor
pop
aaa
adc
pushf
sbb
and
xchg
in
js
mov
ret
mov
fnsave
cltd
add
mov
sbb
std
xlat
fs
fisubs
pop
dec
sub
mov
push
dec
lret
xor
or
pop
jmp
jl
fidivl
pop
mov
fwait
push
insl
test
cmp
nop
insb
data16
aad
fwait
jb
out
enter
pop
scas
dec
cmp
mov
js
cmp
into
pushf
push
pop
pop
shll
dec
repz
dec
sbb
ret
mov
gs
push
mov
aam
ficompl
int
cmp
jne
cmp
loop
scas
ja
dec
cmp
scas
repz
push
out
outsl
push
pop
rolb
je
pop
loop
into
repz
jp
out
stos
popa
int3
jne
mov
aaa
pop
inc
xchg
ficompl
add
adc
vmovq
insb
lret
mov
in
mov
fstps
fisubrs
mov
dec
add
aad
inc
ficoms
xchg
cs
movsl
xlat
sub
sbb
push
loopne
out
test
and
cmp
xchg
cmp
mov
sahf
push
pop
jne
or
sub
mov
add
and
in
mov
push
pop
add
shll
sbb
mov
iret
lods
and
or
jmp
jecxz
mov
ss
mov
xor
sub
mov
mov
adc
push
xchg
dec
daa
lcall
mov
je
cmc
jne
xor
cld
scas
cmp
xor
or
ds
cmp
scas
call
fdivp
add
jae
jo
jno
mov
popa
cld
adc
loope
xchg
jae
insl
xor
ret
xchg
sub
sub
insl
repnz
in
pop
mov
test
cld
popl
ret
xorl
sub
shr
popa
dec
sub
inc
rorl
adc
movsl
mov
lds
xchg
push
mov
push
lahf
xchg
mov
out
pusha
dec
mov
je
xor
add
lret
adc
xor
ss
mov
xor
add
mov
push
cmpl
lock
dec
ljmp
jmp
and
push
xor
jmp
roll
jg
cmpsb
sbb
das
xlat
jmp
stos
jae
sub
popa
dec
lcall
les
lods
stc
fsubrp
repz
pop
pop
int
shlb
iret
test
bound
loopne
push
je
dec
fisubrs
mov
mov
sub
cmpsl
lea
ret
into
orl
popa
bsf
or
lods
sub
pop
or
or
cmpsb
out
in
in
mov
and
test
mov
add
and
mov
out
in
add
push
cmp
sub
fcmovnbe
sbb
insb
popl
repnz
cmc
jge
loope
pop
lret
loop
and
stos
outsb
pop
adc
rorl
jb
jmp
dec
xchg
fcoms
xor
ja
jp
push
rcl
adcl
in
mov
add
jno
jbe
inc
test
cli
xchg
inc
stc
xor
cmc
xor
daa
mov
lock
xor
cmp
stos
in
ret
sbb
push
cmp
inc
les
sbb
stos
or
and
lea
fldl
sbb
testb
xor
mov
call
and
outsb
lock
out
insl
jne
mov
mov
mov
lret
xchg
mov
xchg
dec
jl
pop
outsb
fidivrs
jbe
cli
xchg
pop
ds
arpl
adc
out
test
cmp
xlat
push
mov
push
xor
jbe
or
inc
lea
scas
dec
mov
scas
fisttpll
lret
xor
jecxz
inc
test
insb
repz
sahf
ret
cmp
adc
aad
jae
test
inc
repz
test
push
push
out
or
add
neg
dec
xlat
dec
cwtl
into
cltd
mov
dec
push
popf
loopne
inc
pop
outsb
mov
pop
popa
add
cmp
lods
ljmp
or
xor
in
test
pop
pushf
cmp
in
popa
cmp
xchg
repnz
xor
mov
ja
mov
cltd
repz
pop
idivb
int
cmpsb
cmpsl
mov
add
leave
js
icebp
dec
sub
shl
push
lock
xlat
jo
cmc
pop
mov
xchg
inc
imul
add
and
mov
xor
xchg
mov
ret
nop
insb
dec
add
xor
fst
cmp
iret
fnstsw
xchg
test
mov
test
sub
inc
stc
mov
out
mov
and
icebp
cmpl
or
aas
shrl
movsb
and
std
fiaddl
adc
fnstcw
xor
je
push
rcr
repz
mov
mov
push
rcrl
xchg
jno
das
jno
push
or
mov
inc
and
es
mov
jo
jb
push
xlat
push
jmp
aam
mov
call
adcb
sarl
or
aas
leave
stc
cltd
cmpsb
inc
jns
movsl
cmp
out
jne
add
jb
xor
lea
lods
jl
mov
popf
pop
mov
gs
sbb
dec
sub
ljmp
es
mov
in
pop
aad
jecxz
push
stc
clc
xchg
outsb
adc
mov
cs
ljmp
mov
push
jmp
pop
jl
adc
xor
cmp
lahf
out
fcoml
push
aaa
pop
clc
ds
aad
fsubl
and
bound
lods
pushf
inc
mov
mov
pop
ljmp
xor
bound
pushf
std
popf
mov
data16
adc
add
add
mov
sahf
and
inc
mov
adc
add
dec
lret
pop
icebp
jnp
insb
inc
mov
pop
cmpsl
addr16
jnp
adc
push
outsl
pushf
enter
inc
addr16
mov
popa
sub
jecxz
call
push
mov
scas
test
and
jecxz
insl
inc
dec
sahf
xchg
repz
test
jecxz
mov
mov
mov
lods
rorl
stos
xchg
mov
mov
shrb
xor
out
popa
ja
xor
dec
mov
xchg
hlt
adc
rolb
dec
jb
popa
and
mov
mov
pop
in
into
xchg
adc
xchg
jno
mov
adc
push
add
negl
popa
cmpsl
xchg
aas
mov
jecxz
into
cwtl
jmp
inc
adc
subb
repz
xor
pop
and
cltd
inc
js
leave
mov
loop
movsl
hlt
aad
mov
mov
sub
jnp
jb
push
push
sbbb
adc
add
or
fwait
stos
xor
out
jne
mov
mov
pop
pop
cmp
divb
fadds
fisubrs
push
lods
out
in
dec
or
pop
mov
imul
ror
mov
fdivr
sub
or
aaa
mov
add
fistps
inc
jnp
xchg
jp
dec
inc
mov
scas
cli
adc
mov
jl
pop
lret
icebp
or
mov
addr16
mov
orl
add
ss
bound
push
mov
rolb
xchg
aad
jb
or
add
popf
jle
xlat
jl
xor
lea
popa
ficoms
and
push
add
cltd
daa
dec
in
mov
fs
test
mov
or
xor
mov
push
stos
aas
sahf
in
in
mov
inc
das
insl
dec
mov
mov
or
mov
sub
adc
jnp
jg
dec
faddp
int3
sar
jp
mov
dec
leave
inc
pop
mov
jbe
in
and
out
push
imul
or
or
das
gs
pop
sub
mov
dec
loop
fimuls
jb
stos
stc
divb
push
adc
mov
ss
lahf
jo
xor
add
mov
cmp
push
xchg
inc
jl
xacquire
xchg
int
dec
imul
add
fdiv
scas
data16
mov
push
xchg
lret
push
xor
inc
fwait
cwtl
xchg
sub
mov
dec
and
lahf
outsb
jecxz
mov
ret
fadds
loopne
ret
jae
ret
aaa
pop
lods
aas
loope
and
push
add
insl
ja
sbb
jge
out
cli
jecxz
sbb
shl
jl
rol
lahf
push
cmp
test
daa
imul
inc
sub
sbb
xor
or
test
mov
int3
in
out
pop
xorl
movsl
in
imul
test
sarb
pop
xor
dec
lahf
push
mov
cmpsl
mov
push
data16
mov
das
adc
pushf
sub
das
in
addr16
push
cld
cmp
dec
jge
pushf
loopne
pop
pushf
xchg
push
and
mov
sub
out
mov
sahf
test
inc
dec
jp
ljmp
xchg
inc
xchg
cmp
dec
ja
fs
mov
movb
addr16
dec
and
mov
ds
fucomip
push
cmc
lss
mov
aas
shlb
mov
outsb
pop
sbb
jnp
loop
aas
and
iret
lret
or
pusha
cmp
push
arpl
fisubrs
jl
push
push
jns
mov
scas
int
mov
outsl
shr
in
xchg
out
stos
ja
ljmp
add
pushf
sbb
jae
pop
out
fldl
inc
lods
sub
jo
cli
jg
push
aad
fcoms
pop
ljmp
imul
xchg
stc
pushl
adcl
mov
mov
lods
jbe
lea
repnz
push
adc
dec
sub
mov
add
out
xor
adc
mov
pusha
std
jmp
fildll
rclb
fwait
pop
mov
xor
sbb
xchg
scas
roll
sub
sub
test
push
and
es
pop
inc
cmp
xchg
xor
pop
cmp
insb
pop
les
ret
mov
jp
sarb
mov
inc
cmp
mov
lahf
cmp
idivl
mov
sbb
in
sub
mov
mov
jbe
xchg
inc
movsl
cmp
or
leave
rcl
repnz
add
inc
push
int3
xchg
rclb
push
inc
xchg
sub
add
je
xchg
fwait
cmpsl
dec
pop
arpl
outsl
jle
aas
repnz
es
xchg
fistl
inc
into
mov
iret
mov
icebp
call
nop
xchg
jo
ret
dec
scas
cmp
adc
shlb
lcall
in
aas
mov
xor
lcall
mov
out
nop
mov
js
push
xor
mov
outsl
xor
pop
xchg
or
je
test
push
and
add
sub
pop
outsb
ror
jmp
jle
xor
lock
dec
insb
sbb
popf
and
sahf
mov
cmc
inc
cmp
lcall
leave
inc
mov
aam
and
mov
int3
jne
mov
jecxz
mov
xor
add
pop
and
dec
icebp
int3
pop
jae
into
rcll
push
in
js
cmp
shl
push
sahf
cmpsl
pop
push
adc
lret
scas
lds
fstps
fldcw
mov
cmp
push
mov
aas
repnz
dec
sahf
jge
or
outsl
lcall
gs
mov
jo
data16
outsb
xor
mov
and
je
loope
repnz
push
push
cmp
lret
bound
out
cwtl
xor
idiv
jle
icebp
xor
outsb
pop
sub
test
pop
or
loop
stc
jns
sub
cmc
dec
cs
mov
mov
ss
scas
cmpsl
bound
data16
xchg
pop
int
and
arpl
lahf
loopne
call
and
movsl
incb
pushf
int
push
gs
mov
dec
int3
cmp
test
fldl
mov
mov
inc
or
mov
lret
cmp
push
filds
sub
jae
mov
adc
jb
jae
lock
cmp
adc
mov
cli
cmp
mov
outsb
mov
and
aam
daa
push
cli
push
adc
das
sub
cmp
pop
dec
fldcw
push
sahf
es
subl
ret
repnz
xchg
jecxz
mov
jne
punpckldq
push
inc
xchg
inc
jb
shrb
adc
sahf
xchg
adc
dec
aad
xchg
lods
push
sahf
jno
jl
push
pop
scas
call
sbb
push
cltd
dec
into
repnz
jg
cmp
cmp
ss
mov
jno
jo
mov
mov
push
pop
and
movsl
inc
lock
into
push
cwtl
ss
aas
jp
daa
leave
cmp
xchg
add
push
in
add
xor
mov
xchg
loopne
sbb
mov
iret
rorb
gs
add
inc
pop
fsubrl
mov
jbe
stc
pop
or
bound
inc
loopne
sub
mov
jge
adc
fcmovb
mov
mov
pop
cld
pop
xchg
shlb
cmp
xor
sahf
pop
sub
repz
jg
or
js
ja
pop
pop
jg
dec
push
or
stos
push
out
idivl
out
sbbl
sub
and
fisttpll
in
adc
hlt
adc
adcb
add
cmpb
mov
fadds
test
xchg
ljmp
fnstcw
sub
gs
cmp
insl
sub
daa
push
ret
jmp
insb
test
ficoms
iret
aam
dec
adc
call
test
sti
mov
out
inc
pop
call
test
adc
das
scas
dec
stc
xor
xchg
mov
jne
mov
out
mov
fcomip
adc
enter
xchg
dec
lods
dec
inc
pusha
pop
popa
jl
mov
movsl
sub
pusha
popf
sub
push
mov
mov
scas
addb
push
fisubs
xchg
test
lods
mov
dec
or
sub
lar
and
in
aaa
sub
push
xchg
mov
and
push
inc
dec
push
ds
push
add
lahf
dec
ja
subb
mov
xchg
dec
mov
sbb
xchg
lods
sub
mov
roll
pop
fwait
sub
adc
fs
out
pop
jmp
lods
lods
repz
mov
cmp
push
ja
xchg
jmp
sub
arpl
xchg
adc
icebp
sbb
lds
pop
mov
sub
sbb
imul
cwtl
xlat
mov
bound
inc
inc
xchg
fcomip
repnz
iret
push
mov
mov
add
inc
sahf
fdivr
cli
lock
jmp
or
stos
call
xchg
mov
mov
lods
xor
push
int
in
js
leave
jl
in
adc
pop
stc
adc
loopne
xchg
jp
mov
idivb
movsb
mov
pop
in
mov
data16
jl
adcl
js
movsb
mov
loopne
push
jp
mov
xchg
add
xor
push
les
and
je
dec
cmp
neg
jb
fcmovnb
popa
cmp
aad
in
stos
mov
js
jnp
cli
xor
cmpsl
stos
shlb
mov
push
sub
push
aam
push
sahf
inc
in
jns
enter
loope
xchg
test
pop
sahf
mov
push
incl
lea
filds
nop
or
jmp
pop
jae
mov
bsr
mov
sub
jmp
dec
xchg
xchg
and
mov
jno
inc
and
rol
xchg
in
pop
pushf
push
jnp
ljmp
mov
lds
push
jecxz
gs
mov
pop
mov
push
sbb
outsb
in
sbb
cltd
test
fadd
inc
mov
add
cli
inc
out
testl
inc
cmpsl
sbb
test
cs
adc
insl
dec
movsl
jo
ret
adc
push
pop
mov
add
push
xchg
loope
mov
mov
mov
sbb
and
inc
push
outsl
scas
fistl
pop
sub
push
je
ret
jnp
loope
cmp
cwtl
mov
jecxz
dec
mov
mov
stc
sub
aam
std
xchg
mov
aam
sub
cwtl
fs
pop
ror
xor
das
mov
in
insb
or
mov
insl
fwait
pop
mov
lea
lcall
imul
loopne
rcrl
pop
pop
dec
mov
daa
orb
sbb
jp
sti
int
cmc
popa
add
rorl
aaa
cltd
rcr
lods
movsl
xor
mov
cmp
insl
jae
lahf
std
pop
call
jle
inc
rcl
adc
call
bound
push
data16
lahf
xchg
cmp
sub
xor
jnp
cmp
and
mov
add
imul
sbb
fadds
dec
fcmovu
ds
cmc
inc
jno
enter
and
and
pop
leave
jne
lods
enter
lea
jb
fsubrp
clc
xchg
orb
push
xlat
rcl
inc
test
mov
adc
mov
mov
test
mov
mov
lahf
jbe
xor
mov
lahf
sbb
outsb
mov
sub
jecxz
insb
push
cmc
mov
ficoms
jne
push
pop
shrb
add
fcomp
std
xor
cmc
rcrl
or
jg
jo
pop
daa
imul
stos
aam
aas
leave
fisttps
pop
out
mov
pop
and
arpl
pop
cmp
lret
in
xlat
add
and
mov
mov
sar
out
jl
or
jno
jb
into
add
inc
dec
sub
jecxz
outsb
xchg
jne
adc
inc
xlat
int3
aad
ss
fnstsw
movsb
in
lret
mov
int3
mov
mov
gs
andl
js
push
cmp
cli
popf
jbe
jo
in
xchg
stos
push
es
lods
and
addr16
jl
fcoms
scas
test
mov
bound
fwait
pop
adc
stos
lcall
ret
cmp
mov
jl
pusha
xchg
xor
cli
jge
xor
fimuls
test
lods
jecxz
iret
mov
push
dec
ds
shll
jg
int
iret
mov
call
mov
jmp
add
add
lahf
arpl
mov
es
inc
add
and
mov
fstpl
inc
addr16
mov
rclb
aas
xor
ret
fcmovnb
pop
imul
insl
dec
stos
cwtl
rcll
sbb
pop
leave
int3
add
cmp
out
imul
out
shll
insl
sti
fistpl
fists
cmpsb
adc
nop
mov
out
scas
and
sarl
xchg
cwtl
cld
adc
or
int
sbbb
les
addl
bound
mov
add
push
bnd
xor
inc
lods
mov
cmp
popa
fcmovu
outsb
cmp
das
sub
and
imul
aaa
jecxz
jle
mov
jg
cltd
jg
aad
std
or
pop
pop
daa
inc
sub
lret
sbb
adc
xchg
jecxz
jle
rcll
pop
idivl
cmpsl
mov
mov
movsl
repz
call
cmp
rclb
sar
ja
dec
push
xlat
mov
mov
push
out
outsl
ret
jno
mov
xlat
cmp
imul
push
push
out
and
dec
in
mov
rolb
adcl
sbb
add
shll
sti
dec
adc
or
add
jle
jno
jecxz
pop
sti
mov
int3
sbb
jl
rcrb
cmp
call
jns
dec
cmp
cmp
jbe
inc
xor
push
loopw
xchg
xor
inc
lods
push
call
fcomps
test
mov
stc
sub
testb
jecxz
div
stos
xchg
cwtl
scas
xchg
and
aam
mov
sub
not
mov
loopne
jo
pop
mov
mov
xlat
std
stc
aad
push
pop
push
mov
cli
aas
in
jp
adc
xor
sbb
inc
xchg
testb
mov
jecxz
pushf
cmp
lahf
movl
sbb
enter
out
pop
sti
push
adc
xor
data16
pop
inc
xchg
xchg
xor
jp
add
test
in
xor
fildl
fnsave
retw
iret
mov
jns
nop
inc
mov
cltd
mov
dec
and
aam
mov
mov
adc
xchg
das
popf
movsl
ret
mov
cmc
push
in
xor
stc
movsb
mov
push
imul
rcll
push
stc
adc
adc
aas
fadd
xor
loop
mov
ret
mov
mov
scas
aam
and
push
lcall
mov
sbb
jle
inc
cmp
mov
mov
mov
cmp
mov
and
pop
cmpsb
inc
dec
icebp
ret
mov
mov
lcall
cmc
test
shll
ret
lods
mov
or
jl
jnp
mov
adc
ljmp
xchg
movsb
mov
loopne
dec
mov
les
mov
fisttpl
mov
push
inc
out
sarl
into
mov
dec
or
mov
add
cwtl
adc
lea
ds
or
xchg
lock
in
cmp
clc
cmp
rolb
push
outsb
inc
cmp
or
and
push
call
adc
jbe
sbb
and
pop
sub
pop
shrb
or
mov
pushf
jns
sbb
xor
dec
dec
push
fdivs
sahf
jl
icebp
clc
push
push
mov
push
repz
das
movsb
cmpsl
mov
cmpsb
rcrb
scas
sub
mov
test
push
popa
xor
data16
mov
idivl
adc
sarb
ficompl
xchg
insb
insl
mov
rcll
shlb
sub
push
jno
inc
les
loop
or
addr16
addr16
call
mov
push
inc
in
out
xchg
inc
outsb
pop
dec
int
mov
mov
mov
push
lods
xchg
es
jo
add
sbb
shrb
mov
xchg
push
or
jbe
jmp
and
inc
inc
addb
rcl
mov
ss
mov
mov
xlat
push
xchg
and
mov
sbb
push
push
jge
sahf
mov
and
push
test
lret
cld
sub
out
lock
add
daa
shlb
test
mov
inc
stos
push
data16
jg
xor
lret
jecxz
stos
pop
add
in
mov
sbb
or
adc
mov
mov
dec
xor
pop
ss
dec
cpuid
mov
sti
and
jecxz
test
je
add
dec
fdivl
jmp
stc
xor
jp
adc
sub
adc
cmpb
lods
ret
lea
mov
sbb
in
dec
mov
or
sbb
pop
cmp
pop
sub
push
push
or
mov
add
push
mul
sbb
rcrl
lcall
push
ret
les
stos
aaa
mov
call
dec
jb
xchg
sbb
jp
cmp
cmp
push
insb
xor
xor
icebp
dec
push
or
jae
aas
popf
xor
add
or
in
lret
fs
out
repnz
push
xor
lock
int3
or
je
jnp
jb
inc
loopne
pop
fsubrp
cmovl
mov
leave
js
push
xor
dec
mov
push
call
pop
sti
adc
push
leave
inc
jb
jae
mov
mov
lcall
cmp
mov
dec
sbb
call
clc
xchg
insl
in
push
sbb
dec
mov
xor
xor
mov
xor
fs
lock
jo
xchg
test
xchg
mov
es
xchg
leave
xchg
outsb
int
stc
push
sbb
adc
imul
ljmp
subl
sub
sbb
orb
and
pop
or
test
push
addr16
notb
dec
add
cli
enter
jo
stc
pushf
fisubs
pop
bound
repnz
popa
pop
push
jo
bound
data16
mov
xor
flds
push
lcall
sub
addr16
pop
out
sbb
popa
inc
inc
and
xchg
mov
push
fimuls
movb
subl
and
pop
movsl
fucomp
dec
in
xor
add
insl
les
mov
jae
hlt
lea
pop
add
mov
subw
push
xchg
cld
cmpsl
push
test
xchg
and
idiv
cld
adc
mov
xlat
jecxz
inc
js
fistl
fcmove
jo
push
js
outsb
pusha
cli
push
nop
inc
addr16
adc
iret
in
addb
jle
rcr
xor
fstpl
xchg
sub
adc
inc
jl
xchg
inc
fwait
outsb
cmp
fadds
xor
dec
fsubr
fistpll
loope
dec
push
mov
ret
jge
push
test
cmpsl
shlb
dec
out
cmc
push
jmp
cmp
popf
mov
or
daa
push
pop
call
outsb
stc
cmp
push
sbb
inc
pop
mov
rcll
xchg
bound
rcrl
mov
lods
pop
pop
push
loope
pop
xchg
lcall
dec
fdivrs
les
add
in
dec
dec
jp
dec
lfs
int3
cmp
xchg
ja
jl,pn
mov
pusha
push
sub
jl
sarl
lock
into
loope
mov
xchg
add
outsl
sarb
dec
jmp
sbb
setne
dec
insb
mov
mov
pushf
iret
mov
cmpsl
addl
mov
push
pop
imul
mov
and
lret
sub
sub
stos
shr
repnz
mov
bound
dec
push
lahf
fwait
lret
adc
cld
enter
test
mov
rcrb
sbb
sahf
or
call
pop
inc
push
les
sbb
cld
sar
jno
xchg
fldenv
and
pop
gs
or
sub
dec
push
jbe
cmp
lea
jp
mov
mov
ljmp
arpl
fistpll
outsl
ud1
stc
jecxz
push
gs
mov
popf
sub
es
movsl
and
xchg
cli
cmp
and
iret
jo
das
dec
lds
mov
jbe
movsl
dec
roll
push
loopne
pop
mov
jmp
sbb
xorb
inc
pop
fwait
sbb
dec
cltd
ja
ljmp
clc
add
adc
fistpll
pop
fdivrl
xchg
out
mov
mov
leave
mov
popf
pop
lock
mov
fnstenv
pusha
pusha
out
jb
fdivrl
movsl
pop
dec
lret
js
notl
or
push
movsb
xchg
pop
popf
jne
jge
aam
rclb
fwait
jg
sub
push
stc
adc
sbb
add
dec
or
or
out
stos
hlt
loop
sub
adc
imul
neg
add
mov
dec
xor
pushf
lock
arpl
and
rclb
clc
add
dec
lds
pop
cs
mov
sub
xchg
fs
cmpsb
sub
sbb
test
jg
pushf
pop
jnp
xchg
mov
js
and
aas
insl
fldt
sub
fidivrs
inc
adc
ss
jne
xchg
xor
xchg
cmpsb
imulb
nop
ja
push
xchg
loop
dec
enter
push
sub
clc
or
jp
dec
sub
test
cmp
addr16
jnp
inc
repnz
and
loopne
ds
push
sub
inc
mov
std
out
aam
xor
push
clc
mov
pop
xchg
pop
xchg
and
dec
or
bound
mov
sbb
in
leave
int3
xor
fcmovu
add
mov
fdivl
inc
add
lea
testb
or
pop
pop
adc
lea
sahf
adc
jae
sbb
es
fwait
repnz
out
ds
xchg
lcall
addb
clc
jmp
stos
sub
and
jo
dec
lds
mov
add
stos
xlat
pop
mov
xchg
ss
push
out
je
cmp
pop
xor
in
inc
repnz
shrb
mov
adc
push
mov
rorb
add
sbb
push
cmc
fwait
cmp
fwait
test
adc
push
push
lods
xor
inc
shll
jnp
xchg
cmp
mov
int3
xor
insl
jns
cwtl
xor
ljmp
test
outsl
rcrl
add
cmp
shrl
inc
sbb
pop
aam
mov
hlt
in
xor
popa
lods
xchg
adc
out
lcall
popf
push
mov
aad
out
jmp
pop
outsb
xchg
loop
es
stos
pushf
ficoms
pop
into
cmp
mov
sbb
bound
jae
push
push
lret
inc
push
lahf
push
push
jbe
aaa
andl
inc
mov
cmpsb
xor
lret
or
jp
pushf
xlat
xor
fnstsw
leave
mov
mov
pushl
leave
dec
cli
movsb
movsb
push
add
cwtl
arpl
leave
cs
popa
xor
rorb
dec
sarl
mov
into
mov
ret
out
hlt
out
or
test
and
cli
mov
cmp
jns
sub
orl
out
jne
inc
cmp
dec
pop
sbb
dec
inc
fneni(8087
sbb
stos
scas
test
movsb
add
jecxz
inc
and
lahf
cmp
pushl
int
repz
add
sub
sbb
lods
sub
std
dec
or
xchg
jmp
cli
out
cmp
xor
lock
stc
xchg
jp
dec
jmp
mov
push
pop
movsl
aas
push
push
pop
mov
ror
inc
fsubrl
sbb
inc
sbb
jnp
in
lock
adc
pop
adc
scas
rcr
sbb
and
rcrb
mov
jnp
push
push
inc
ss
push
nop
xchg
lods
cmp
ljmp
push
decl
inc
xchg
xchg
push
inc
roll
xor
add
jge
mov
pop
or
dec
mov
pop
scas
hlt
aam
push
cli
sarl
loope
mov
loopne
adc
cld
or
sub
cmp
mov
addl
jns
push
aaa
je
cmp
sbb
pop
add
push
fistl
mov
fistl
xor
rclb
es
sbb
mov
push
xchg
add
inc
out
out
call
push
stos
outsl
add
scas
clc
xchg
dec
jle
aaa
adc
aas
call
mov
xor
pushf
sub
out
cmp
pop
outsl
add
out
push
sbb
cmc
in
ret
pop
or
adc
test
add
cld
jg
and
mov
add
and
xchg
xchg
mov
jbe
dec
inc
ljmp
mov
jecxz
or
push
xchg
pop
repz
movsb
and
xor
out
jns
ret
jmp
insb
cmpsb
enter
add
out
out
lret
gs
ds
jmp
addr16
mov
cmpl
js
push
or
jnp
loopne
test
mov
in
push
imul
fcmovu
and
jo
add
jne
shrb
sahf
inc
sahf
daa
xlat
sbb
pusha
test
mov
jp
fwait
fdivrs
push
sahf
aam
inc
dec
jge
popl
outsb
ret
test
nop
add
sbb
mov
dec
jmp
in
divb
mov
cmp
add
and
add
or
add
dec
fildl
mov
push
lods
xchg
push
test
sub
inc
fcomps
dec
mov
rorl
jns
push
pop
lea
test
popf
mov
xchg
add
or
adc
mov
add
ret
dec
stos
out
fidivrl
add
lods
xor
and
push
dec
xchg
subl
dec
cmpsb
push
sub
push
js
stos
popf
pop
jae
iret
aaa
shrl
aaa
mov
xor
nop
push
sub
adc
mov
jmp
add
nop
out
xchg
test
lods
notb
jne
sbb
cli
shrd
movsl
or
adc
testb
cli
jg
in
in
adc
lcall
mov
pusha
pop
enter
leave
xor
pop
icebp
jnp
mov
lock
jno
sub
xchg
inc
imul
inc
jmp
lret
pop
test
push
sti
xchg
sub
sub
dec
cld
movsb
push
dec
mov
movsl
push
pop
out
mov
std
or
pop
in
push
dec
add
cs
mov
and
fdivrs
lret
xchg
sub
xchg
add
lods
ss
push
aad
rcrb
and
sbb
je
out
sahf
sub
pop
test
rolb
aas
sahf
cmp
cmpsb
sub
or
pop
push
jp
mov
xchg
add
mov
cs
adc
mov
lds
or
fs
mov
dec
rol
or
flds
bound
or
fiadds
pop
sqrtps
adc
fsub
decl
jo
test
sub
lcall
add
call
testb
mov
add
and
cmpl
fildl
mov
addl
mov
mov
shr
sub
xor
test
repz
add
hlt
pusha
jb
pusha
cmpsb
mov
ret
xor
jmp
sub
outsl
pop
pushf
pop
and
xchg
push
inc
fidivrl
nop
mov
cmpsl
lea
out
add
and
sub
cmp
movl
addr16
push
push
loop
pop
fisttps
ljmp
pop
push
addr16
add
xchg
jge
cwtl
jno
out
add
or
lcall
js
xchg
in
leave
aam
ret
jmp
xor
les
int3
pushf
push
xorl
xorb
push
jge
pushf
mov
movsl
and
cli
in
int3
leave
jmp
cld
in
fwait
mov
or
xor
push
or
outsb
dec
cmp
dec
xchg
mov
jle
jl
gs
loopne
sbb
dec
and
negb
adc
jae
mov
fwait
mov
or
ljmp
stos
xor
jge
add
inc
andl
jg
in
pop
rcll
jg
insl
mov
sbb
popa
pop
inc
dec
nop
fistl
push
mov
clc
jmp
jnp
xchg
mov
cmp
mov
lea
int3
adc
mov
in
xor
dec
dec
adc
arpl
cmp
cmpsb
in
jmp
test
mov
movsl
stc
pop
mov
mov
pop
sbb
cmc
jb
mov
es
repz
jecxz
add
inc
mov
jmp
mov
out
xchg
pop
mov
cmp
lock
iret
jge
sarl
pop
fmul
jo
push
and
mov
or
subb
sbbb
loope
lock
shrl
adc
test
std
mov
outsl
repz
rclb
insb
xor
mov
enter
cmp
or
ficomps
outsl
mov
push
mov
push
in
call
xchg
mov
sahf
ljmp
adcb
xor
pop
testb
adc
fs
xlat
pop
pusha
out
imul
es
jl
mov
push
lea
enter
pusha
xchg
call
sahf
cli
lahf
adc
xor
es
sbb
xor
jmp
push
sub
bound
and
imul
popa
jmp
gs
lods
dec
mov
and
das
sub
adc
sbb
lahf
jmp
stos
or
divl
adc
scas
mov
push
add
mov
and
mov
jbe
and
rorl
mov
or
scas
mov
test
mov
pop
xchg
movsl
fadd
ret
dec
stos
mov
loopne
int3
mov
inc
in
lcall
jl
stc
pop
pop
cwtl
jae
sub
ret
jg
inc
clc
ljmp
cwtl
add
std
xlat
rorb
dec
pop
repnz
insl
stos
mov
push
and
or
dec
enter
xor
aad
out
push
jge
es
xorl
mov
jg
aad
fcompl
push
pop
outsb
cmp
dec
nop
pop
cmp
adc
dec
push
movsb
inc
hlt
fnstcw
adc
test
ja
divb
xor
lcall
push
fmulp
xchg
repz
mov
dec
mov
xlat
and
pop
xor
inc
mov
add
push
stos
inc
fisttpl
sub
pop
push
and
jnp
push
xchg
lods
adc
out
sahf
scas
insb
inc
jnp
inc
enter
pop
int3
out
and
xchg
mov
out
movsl
xor
pop
sub
or
repnz
push
out
ja
jnp
es
xor
addb
inc
or
add
add
stc
out
inc
std
fidivrs
movsb
dec
pusha
adc
test
pop
add
pop
rclb
js
xorb
arpl
jle
movsb
cmp
test
and
aaa
or
pop
sub
pop
std
xchg
aad
sti
inc
push
or
mov
jno
sub
jnp
xchg
outsl
enter
pusha
lahf
divb
addr16
shlb
loopne
jl
push
lock
inc
and
and
lock
test
push
sbb
cmp
jge
inc
nop
xchg
mov
adc
gs
out
or
clc
loop
push
push
mov
pop
lds
les
sarb
js
arpl
xor
scas
dec
dec
shll
mov
sbbl
shlb
and
mov
xchg
arpl
cli
nop
and
pop
aad
dec
fldenv
movsl
inc
mov
pusha
outsl
orb
jp
jb
push
mov
mov
mov
imul
imul
dec
shl
jns
mov
push
in
and
dec
aas
or
inc
mov
fistps
dec
sbb
aas
das
inc
ret
mov
in
lahf
jno
mov
cmp
test
jle
or
adc
cli
push
push
push
inc
add
lret
mov
or
mov
mov
cmp
into
add
pop
and
pusha
inc
jp
adc
xchg
loope
adc
pushf
fwait
outsl
popw
sub
mov
in
pop
loope
fsubr
push
repz
inc
mov
xor
lahf
popa
xor
int3
or
fisttps
cmp
fbstp
pop
rorb
das
das
pop
loopne
stc
adc
mov
bound
les
dec
dec
mov
cmp
andb
mov
cld
sub
aad
rorb
ja
popa
push
ljmp
fldt
sub
arpl
sbbb
xor
sub
arpl
sub
in
xor
cmpsb
lods
add
push
add
test
mov
pop
cmc
pop
hlt
aas
adc
fstp
outsb
rclb
inc
pop
aaa
push
mov
insb
pusha
mov
into
ss
pop
subb
mov
sahf
mov
pop
fwait
push
shlb
lea
and
dec
mov
into
lahf
inc
sbb
dec
xchg
lods
mov
data16
sbb
sub
cmpsb
or
mov
push
cmp
mov
push
xor
jo
call
sub
mov
xchg
push
jmp
inc
push
int3
jp
popf
test
shlb
mov
fadds
push
jp
sbb
shlb
mov
sub
lods
mov
fistpl
adc
xlat
xchg
jnp
mov
sub
insl
sbb
mov
cmpsl
push
and
fcoms
push
and
cmp
stos
aad
call
or
in
popf
lcall
xlat
inc
fstps
inc
test
stc
pop
pop
daa
jg
add
jo
dec
xchg
jmp
repz
nopl
and
mov
cwtl
xor
stos
inc
xchg
mov
add
gs
and
pop
movsl
jl
in
mov
jb
fistpll
js
loopne
ds
addb
push
out
pop
mov
arpl
xchg
pop
push
dec
fwait
pop
push
jnp
jl
lret
clc
push
cmpsl
outsb
rclb
iret
lret
call
jo
mov
gs
adc
shrl
shll
pop
aad
jno
loope
add
or
les
xchg
add
jbe
hlt
mov
xor
les
stos
movsb
insl
stos
pop
mov
pushf
inc
negb
loop
xor
lods
or
jge
lret
std
mov
sbb
and
adc
or
ret
mov
mov
insl
aas
mov
cs
pop
movsl
imul
test
mov
arpl
jecxz
shll
mov
daa
xchg
push
xchg
imul
pop
cmp
mov
adc
mov
mov
sub
lods
test
fsts
push
loop
lock
stos
test
jp
or
push
push
mov
mov
sub
mov
dec
ret
fcmove
mov
into
or
daa
les
mov
arpl
inc
pop
mov
inc
test
std
add
xor
fisubl
mov
jb
cmp
sahf
add
mov
mov
xchg
test
lretw
ss
mov
repz
fdivs
cs
xchg
incb
sahf
jmp
mov
jp
aaa
outsl
adc
pop
fnstcw
jno
frstpm(287
notl
in
jnp
fimuls
sti
adc
inc
add
jl
in
testl
pop
mov
pop
out
test
add
cmp
loop
mov
mov
inc
out
shll
mov
lret
clc
xor
and
es
mov
imul
dec
mov
sub
push
push
jge
lahf
mov
mov
xor
mov
dec
mov
call
fsubr
pop
xchg
xchg
js
fldt
out
insl
add
lds
mov
mov
imul
sbb
mov
das
pop
xor
adc
arpl
mov
loopne
clc
outsl
sti
lods
test
jl
sub
lret
popa
and
in
jne
mov
cli
xchg
adc
or
out
pop
or
mov
ficoml
pop
das
ja
mov
hlt
cmp
jbe
mov
mov
inc
lods
fisubrs
inc
sbb
mov
aad
outsl
cmp
cltd
inc
ds
and
jb
jbe
cmp
mov
mov
stos
inc
test
in
dec
add
jns
cmp
xor
sub
insb
mull
stc
fdivr
insb
xor
ret
and
dec
inc
add
outsb
add
fstl
pop
test
dec
outsb
icebp
fldt
sbb
add
xor
loop
stc
sub
xchg
dec
cmp
faddl
pop
shll
jb
sub
mov
pop
outsl
add
sbb
out
adc
mov
sbb
in
fs
mull
pop
add
sub
ss
jmp
or
sub
lds
jmp
fmull
mov
mov
fimull
push
test
pop
mov
push
mov
xor
insl
xor
lcall
int3
sarb
lret
ja
daa
inc
call
xchg
movsb
aam
add
pop
pop
sbb
out
out
pop
into
push
hlt
push
mov
std
mov
pop
js
jae
xchg
pop
lahf
mov
enter
repnz
bound
mov
inc
xchg
sahf
xchg
or
cmpsl
mov
cmp
aad
jne
call
xchg
push
lahf
jns
adc
call
hlt
imul
jno
in
outsb
or
jb
jge
xchg
daa
pop
push
xchg
test
push
out
aas
add
pop
js
mov
loope
push
popa
mov
pop
stos
mov
das
add
add
or
mov
dec
test
pop
mov
sub
sub
and
mov
insb
xchg
sub
shlb
push
aad
push
sub
jbe
adc
xorb
xlat
and
bound
ret
int
push
leave
mov
jl
scas
adcb
adc
add
add
sub
mov
fdivrs
mov
addr16
xor
and
dec
xchg
test
push
into
cmp
popf
outsl
rol
pop
jne
aas
lods
xor
aas
mov
in
fmuls
fcmovu
jmp
dec
subb
inc
and
sbb
pop
ss
xchg
jmp
xor
sbb
jne
dec
cmpsb
dec
and
scas
aaa
popa
loopne
sub
test
xchg
inc
shl
fisubl
lahf
ds
dec
in
mov
jmp
pop
repz
mov
pop
stc
enter
sub
add
jns
stos
jo
mov
jle
bound
cmp
mov
push
lods
mov
xchg
pop
dec
shr
cmc
mov
cmp
pop
jo
dec
je
and
or
mov
ds
mov
and
sbb
fucomi
arpl
dec
adc
jne
js
mov
stos
dec
pop
and
fs
jns
and
iret
ljmp
sub
cmp
xor
xor
push
cmpsl
flds
data16
jmp
stos
pop
push
cli
mov
aaa
fnstsw
mov
idiv
jae
rcl
iret
cmp
adc
loop
aas
clc
pop
in
mov
lds
fstl
or
lods
sbb
or
dec
cmpsb
in
mov
dec
cmp
or
mov
cltd
movsl
lcall
mov
mov
inc
jecxz
rol
rolb
xchg
xchg
in
inc
adc
aas
mov
jge
push
push
ja
movsb
adc
scas
ja
xor
popf
loop
mov
nop
add
arpl
popa
rcr
xchg
push
rorl
xchg
in
mov
inc
inc
mull
sbb
dec
dec
daa
push
rol
mov
pop
lods
adc
mov
cld
jbe
scas
xor
jmp
repz
xorb
adc
lahf
fnstsw
and
shll
add
add
push
mov
iret
mov
push
push
stc
iret
lahf
out
xor
cld
xor
mov
cmc
push
adc
shlb
jmp
push
sbb
push
adc
insb
sub
dec
stc
mov
fidivrl
sbb
hlt
add
imul
add
les
pop
jmp
out
push
cmc
imul
jecxz
cltd
jl
cmc
xchg
jp
fldcw
test
xchg
test
jbe
jp
lret
and
jbe
addb
shl
bound
or
mov
loopne
pop
lahf
std
scas
mov
cltd
jge
push
cli
sbb
flds
fcomps
or
fsub
in
inc
test
addr16
cld
pusha
ja
dec
mov
push
notb
mov
xor
shr
repz
mov
idivl
fbld
jno
insb
cmp
add
mov
out
mov
in
mov
pop
insl
fists
rorl
xor
mov
add
sbb
lods
sub
inc
xor
aaa
push
mov
ret
add
xchg
xor
ret
imul
shrl
dec
out
sti
sbbb
out
mov
loopne
fwait
loop
pop
cmc
add
in
inc
push
adc
aam
sub
popf
mov
sar
push
push
mov
daa
xor
add
or
mov
inc
mov
and
or
aad
dec
and
xor
or
adc
inc
ds
sti
repz
push
add
mov
add
pop
xchg
inc
test
fbstp
pushf
xchg
sbb
mov
lods
bswap
pusha
repnz
push
and
push
ss
lds
ret
cmp
mov
stos
dec
pop
jp
inc
test
jecxz
add
jbe
mov
sub
xor
repnz
add
outsb
jbe
and
xchg
xchg
push
push
cmp
jle
lcall
imul
clc
xor
sub
mov
add
imul
inc
lcall
iret
jle
push
int3
pop
cmp
mov
flds
movsb
call
adc
sub
lret
sbb
mov
out
out
jp
xchg
call
mov
pop
les
inc
popa
or
xor
push
loop
dec
cmp
cwtl
arpl
mov
movsl
movsb
add
mov
jle,pn
mov
sbb
push
clc
data16
mov
xchg
mov
ja
add
jecxz
lahf
test
fmull
jo
dec
sbb
mull
and
jns
inc
and
jge
dec
sbbb
sub
out
fbstp
or
ffree
push
mov
adc
test
sub
in
sbb
push
xchg
test
out
xchg
mov
ficompl
negb
push
test
cmpsb
pop
pop
in
pop
movsl
icebp
and
cmc
addr16
aas
sarl
fdivrl
int
in
xchg
and
xchg
dec
cld
xor
daa
fildll
cld
lcall
test
mov
or
push
lock
push
lods
push
rol
push
mov
insl
stos
mov
sbb
dec
push
psllq
sub
xchg
lods
jns
jge
out
roll
mov
imul
nop
js
leave
or
mov
mov
in
jae
xor
dec
xor
jp
mov
xchg
add
fwait
dec
fistl
push
jp
insl
push
sub
divl
scas
push
mov
add
in
and
aas
fcomip
out
or
sahf
mov
and
ror
out
pop
jbe
popa
ffreep
adc
fcompp
enter
aam
mov
jmp
in
sub
jb
xchg
int
inc
sub
adc
outsb
mov
es
jge
jmp
mov
fs
fcmove
pop
les
addr16
shufps
push
outsl
xchg
shrb
cmp
aam
xor
inc
mov
mov
in
dec
push
dec
cmp
xchg
mov
xor
lds
jmp
mov
ret
xchg
je
adc
mov
call
dec
jno
jl
add
adc
jns
lahf
mov
jnp
adc
sahf
imul
inc
inc
adc
jle
jo
cltd
aaa
push
xchg
stos
adc
aad
mov
popa
xchg
stos
test
cmp
bound
or
popa
mov
mov
in
and
orb
push
pop
js
inc
sub
jmp
sbb
in
push
cmp
inc
cmp
frstor
insb
push
jmp
inc
or
dec
sub
aad
and
mov
std
jmp
cmp
and
out
xchg
ret
push
xchg
rol
push
mov
mov
paddsb
ror
adc
rolb
int3
inc
dec
adc
xor
pop
out
js
mov
inc
stc
jg
lods
and
add
aad
popf
mov
addb
call
or
xor
inc
std
and
xchg
pop
mov
cmp
ficoml
rorl
xchg
cmpsb
in
insb
sub
xorb
iret
xchg
push
mov
sbb
out
lock
pop
add
stc
nop
clc
flds
iret
mov
mov
xchg
mov
adc
sti
clc
sbb
fs
or
and
fildll
fs
out
in
inc
fadd
and
fidivrl
adc
pop
insb
jb
movsb
mov
inc
add
in
jmp
xchg
fcomip
mov
pop
ljmp
pop
icebp
mov
or
pop
sub
push
adc
mov
test
stc
add
outsb
inc
push
xor
fidivrs
inc
enter
and
lahf
bound
cmp
push
fcomps
mov
call
cmpb
pop
pop
imul
leave
and
pop
outsb
popf
rcrl
and
sub
sbb
xor
into
xchg
sbb
test
or
sbb
aas
mov
loopne
subb
mov
jae
lock
and
pop
sbb
xor
jp
mov
and
xchg
xchg
pop
jbe
push
mov
stos
pushf
fsave
adc
imul
xchg
scas
aam
lcall
mov
and
lahf
cli
lock
sbb
cmc
dec
and
out
sbb
aad
pop
jl
sub
inc
xchg
pop
xor
cmc
push
out
inc
jp
pop
jmp
xchg
out
jae
or
dec
xchg
stos
pop
push
shlb
sub
in
sub
sbb
dec
dec
jne
aas
cs
push
aas
imul
sarb
pushl
cltd
ficoms
mov
add
adc
insb
sarb
hlt
rcrb
pusha
fdivl
call
adc
adc
jge
ret
arpl
repz
mov
cmp
loopne
xor
jle
pushf
xorl
and
imul
mov
sub
jmp
fnstcw
js
or
pop
mov
xor
ss
mov
aas
dec
pusha
test
push
mov
pop
out
sarb
and
aad
pop
hlt
fnstcw
lret
pop
xchg
inc
jb
mov
cmp
xor
sbb
cmp
pop
mulb
popa
xchg
jmp
inc
adc
in
scas
adc
jmp
int3
xor
shll
pop
dec
mov
jge
dec
dec
repnz
gs
mov
popf
mov
and
jl
mov
mov
cmp
push
or
and
xchg
xor
or
scas
js
pop
fistpl
and
fs
shrl
aaa
lcall
idivb
add
jb
cmp
add
dec
mov
inc
jle
in
insb
test
fwait
sub
fs
xchg
into
repz
sbb
nop
sbbb
idivl
loope
lods
sti
jle
int
dec
cltd
cmp
jns
mov
sbb
mov
loope
in
jl
mov
pop
out
pop
jmp
jbe
dec
sti
bound
mov
ss
loope
push
and
inc
daa
rcll
push
stos
sub
sahf
add
lock
mov
stos
test
and
aam
sub
lcall
pop
pop
and
mov
add
in
dec
int3
jno
fistpl
push
loopne
jge
mov
les
out
hlt
loop
out
outsb
iret
hlt
lret
loopne
mov
push
sub
mov
cmp
bound
add
shl
fistpll
int
adcl
pushf
mov
movsl
add
lods
roll
xor
pop
dec
rorb
mov
fwait
inc
adc
lret
rorb
add
arpl
popa
fidivl
pop
or
mov
inc
dec
pop
dec
mov
push
adc
add
mov
ret
loope
mov
or
ret
inc
imul
push
aas
lods
mulb
loope
call
outsb
mov
adc
mov
scas
faddl
orb
shlb
mulb
sbb
mov
or
mov
aaa
out
bound
icebp
aad
adc
lea
cli
enter
mov
in
es
lods
pop
fdivl
jl
mov
jb
pop
mov
or
cmp
movl
xor
icebp
jb
jns
xor
bound
cmp
adc
in
push
cmp
cltd
std
movsl
pop
sub
adc
ret
jb
inc
cmp
xor
sbb
mov
dec
sub
arpl
call
ljmp
xor
and
jg
icebp
jecxz
roll
fnstsw
push
movsb
push
ret
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
mov
xlat
lea
std
ret
cwtl
or
add
pop
inc
and
or
adcb
mov
push
jnp
push
sbb
cmp
lahf
push
stos
sub
daa
pushf
pop
lods
jecxz
sbb
out
std
repz
sbb
jb
sti
cmp
faddl
mov
or
mov
xchg
cmp
add
clc
add
inc
call
add
orl
ds
cmpb
subl
and
xchg
nop
ficomps
in
aaa
pusha
test
jo
adc
jb
jno
jns
cmpl
cld
mov
lods
mov
aas
cli
es
cmpsl
cmp
cltd
rcll
mov
std
and
jns
mov
andb
xor
lods
std
adc
mov
xor
sub
repnz
adc
test
mov
cmc
xchg
movsb
lods
lods
in
mov
addl
cltd
adc
cli
pop
lods
enter
dec
arpl
push
pushf
hlt
adc
mov
loopne
outsl
lock
adc
mov
pop
shrb
in
shrb
add
cwtl
shl
fs
shlb
mov
into
mov
insl
setno
loopne
arpl
aaa
sub
cmpsl
mov
inc
push
push
xchg
icebp
mov
cmp
jmp
push
mov
pop
inc
dec
jno
aas
lods
jns
dec
cmpsb
push
xchg
dec
sub
jg
lret
add
inc
xchg
mov
push
fldz
add
inc
inc
je
sbb
cli
pop
popa
mov
inc
icebp
jbe
int
push
push
sbb
add
movsl
in
cmp
jbe
mov
in
jmp
inc
fsubs
dec
sbb
push
enter
sub
pop
aad
ljmp
nop
test
xor
xlat
or
pop
int
pusha
push
lock
ficomps
sbb
or
mov
xor
cli
dec
jecxz
fdivl
stc
mov
pop
cmp
inc
mov
pop
push
or
fcompl
pop
adc
aam
and
fwait
mov
fnsave
add
jecxz
ss
lds
bound
loopnew
shll
fistpl
mov
insb
les
leave
iret
aaa
in
fmul
dec
pop
mov
out
outsl
in
xchg
arpl
fcmovnu
test
pop
sub
cmp
in
fisubrs
std
addl
test
arpl
push
xor
mov
and
scas
insl
sub
sar
or
push
repz
movsl
es
mov
packsswb
xchg
mov
jp
lods
add
sub
addr16
and
mov
or
outsb
mov
xor
jbe
test
into
sti
adc
pop
add
arpl
or
addl
out
sub
gs
rorb
insl
xchg
sub
mov
or
add
dec
push
mov
cmpsl
adc
push
cmc
gs
addr16
adc
out
dec
jns
sub
mov
lret
gs
jnp
jl
sahf
adc
inc
jo
sbb
push
bound
addr16
lock
nop
jl
inc
and
dec
daa
imul
arpl
push
sbb
jno
movsl
inc
roll
jle
mov
xchg
sbbb
ds
dec
stos
insl
mov
mov
test
call
xor
cmp
inc
loop
int
pop
mov
loop
mov
daa
nop
mov
inc
out
jns
mov
adc
sbb
je
movsb
imul
mov
test
cmc
and
push
or
aas
adc
lods
fcomip
mov
cmp
pop
aad
adc
cwtl
mov
xchg
xchg
cmp
jp
xchg
cmp
cmp
dec
test
xchg
outsb
mov
mov
shll
sub
jl
clc
or
aam
mov
cmpsb
push
jnp
loopne
xor
insb
test
fdivl
std
fdivr
cmpsb
lods
std
or
mov
mov
movsb
sbb
adc
sti
and
hlt
sub
adc
popf
xor
sbb
mov
jg
mov
add
out
sub
push
cld
cmp
mov
or
mov
fxch
lret
lock
insl
mov
mov
inc
push
and
repnz
inc
test
lods
ss
int
cltd
jo
arpl
fldenv
nop
and
ret
push
xchg
sete
ds
pop
rcrb
inc
jae
xor
fcoml
ret
fdivrl
addr16
lods
daa
nop
call
es
pop
pop
ds
push
push
sub
mov
pop
adc
push
dec
hlt
sub
jne
adc
dec
dec
aam
sub
add
xchg
jo
pusha
jne
jl
scas
jecxz
push
push
aas
cmp
stc
or
fwait
pop
push
jecxz
lret
out
and
sbb
xor
cmp
cmp
fs
aaa
xor
sub
jle
jmp
cld
cmovle
or
subl
les
das
jae
lock
fcoml
jae
test
mov
inc
popw
mov
pop
pop
nop
shrb
inc
mov
das
mov
call
icebp
jecxz
pusha
and
das
sahf
or
dec
into
push
je
test
rcl
mov
cmpb
mov
jne
repz
nop
and
shlb
pop
mov
push
stos
addb
loope
hlt
xchg
pop
cmp
cmp
cmp
lock
add
fbld
adc
aaa
inc
subb
mov
movsl
cmpsb
gs
pop
decb
xor
mov
xchg
add
or
push
adc
push
out
loope
add
pop
push
add
jp
mov
rcll
mov
xchg
fadds
and
popf
xor
test
adc
push
cs
mov
shll
push
out
xor
inc
add
mov
jbe
int3
std
add
test
andl
int
sub
inc
movsb
loop
scas
inc
xlat
bnd
iret
addl
push
aam
ret
lods
imul
mov
pop
js
popa
popa
or
gs
xlat
pop
shll
inc
lds
xacquire
mov
pop
in
fists
cld
cmp
ret
add
add
jg
stos
mov
stos
aas
mov
pop
add
mov
push
loope
movsb
mov
inc
test
inc
jne
inc
sub
test
sahf
cmpsl
sar
rolb
into
vmwrite
ds
push
daa
shrb
ret
dec
jg
mov
pop
scas
sbb
push
xlat
pop
mov
mov
xchg
push
pop
xor
pusha
mov
lock
jecxz
mov
push
or
cmp
test
cli
pusha
cmp
mov
mov
loopne
cmp
inc
popa
cmpsb
test
sahf
repnz
mull
adc
stc
xor
mov
cwtl
imul
jo
push
adc
sbb
xchg
cmp
sbb
xor
sub
lcall
dec
mov
jnp
push
cltd
orl
hlt
sbb
dec
push
mov
popa
pop
xchg
xor
repnz
cmova
xchg
nop
jge
pushf
mov
xchg
and
add
xchg
push
test
add
mov
sbb
jp
jmp
pop
loopne
js
or
mov
sti
sub
dec
mov
xlat
shl
jmp
pop
out
cwtl
pop
pop
std
mov
aad
jecxz
daa
gs
addl
repnz
stos
mov
les
ds
push
xor
rcll
xor
cmp
mov
mov
bound
jg
push
addr16
les
add
outsb
mulb
push
pop
es
xor
outsb
push
fdivs
dec
aad
inc
push
imulb
add
dec
roll
push
cwtl
jae
jb
rorl
xor
aad
es
xor
add
xchg
stos
nop
pushf
les
aas
sar
aas
add
hlt
xor
es
sarl
add
inc
dec
adc
imul
mov
sti
loop
sti
jecxz
in
lcall
addr16
cmpsl
adc
cmp
fsubrs
jns
sbb
xchg
imul
lret
push
sub
cmc
dec
mov
jb
pop
or
add
ljmp
fldcw
sub
cmp
push
fmul
adc
cwtl
andb
sarb
jg
shrb
mov
lahf
sub
jl
sub
in
cltd
pop
stos
out
pop
scas
lds
sbb
sub
ss
punpckhwd
cld
xor
loope
pop
testl
stc
stc
clc
jl
stos
out
aaa
idivb
shr
cld
push
push
mov
int
lock
cmc
inc
fsubr
neg
insb
mov
inc
rcll
mov
mov
xchg
out
sub
int
sbb
dec
jne
xor
cmp
push
aas
cli
mov
and
mov
mov
lahf
fst
insb
or
xchg
pushl
dec
xacquire
iret
addr16
xor
pop
loope
mov
in
adc
sar
fsubl
adc
cwtl
decb
push
pop
loopne
sbbb
test
aaa
sbb
xor
rorb
test
mov
mov
mov
les
sub
cltd
jnp
dec
loope
mov
and
xchg
in
or
cmp
ja
mulb
push
lret
int
jp
in
cwtl
ljmp
jmp
cs
cmpl
xor
loope
sbb
test
xor
call
insb
xchg
cs
push
mov
bound
mov
mov
mov
ficomps
xchg
jle
shrl
add
cltd
sarl
mov
imul
cmpsl
jp
inc
aam
pop
das
orl
mov
inc
jge
nop
hlt
adc
out
or
testb
rcll
fildl
inc
adc
fbld
ljmp
push
push
and
mov
mov
pop
or
adc
scas
pop
inc
mov
popa
push
aas
mov
test
xor
divl
scas
xor
fdivrl
push
fists
inc
jle
cli
fisttps
mov
add
or
lods
adc
mov
and
out
sub
cmp
jno
cmp
popf
jbe
sub
sti
outsl
out
mov
int3
dec
ss
sbb
jmp
shrb
lods
mov
and
sub
data16
push
inc
std
fstpl
mov
pop
xor
xchg
xorb
mov
or
mov
dec
pop
ret
push
lahf
push
mov
xor
stc
add
andl
ja
mov
inc
sub
fistpl
adc
ficomps
cmp
pop
cmpsl
fnstcw
ret
dec
pushf
mov
in
cmp
out
mov
icebp
push
fsubs
repnz
in
pop
xchg
mov
mov
outsb
mov
mov
cld
mov
cld
cmp
fadds
xchg
in
fbstp
sarl
dec
mov
movsl
cld
inc
hlt
mov
dec
shrb
xchg
ja
shll
fprem
aas
popf
jle
xor
dec
pop
push
stc
movsb
cmp
repnz
cltd
lret
dec
push
xor
mov
sub
js
fcomps
lods
mov
imul
js
loop
mov
push
add
arpl
push
test
xchg
xchg
push
into
and
mov
cmp
addr16
scas
hlt
js
dec
filds
pop
xor
mov
stos
insl
sbb
inc
pop
jg
fsubrs
and
mov
ret
ret
fcoms
lds
sub
pop
xchg
mov
into
or
or
dec
iret
sub
out
pop
lcall
push
sub
pop
test
dec
and
or
ret
cld
dec
insl
fldpi
cmpsb
ret
or
ljmp
addl
fldenv
and
das
outsl
rolb
inc
sbb
test
shl
dec
dec
cwtl
call
sbb
adc
fwait
pop
aas
push
nop
aam
pop
xchg
insb
daa
push
mov
mov
and
addr16
mov
test
out
sbb
js
into
cmpsb
adc
cmp
pop
mov
sub
add
test
fcomip
ljmp
testb
cmp
insl
pop
ljmp
scas
jge
mov
dec
add
sub
mov
mov
pop
mov
add
fcmovnbe
mov
out
or
sti
mov
mov
sbb
jnp
xor
lret
push
sbb
cs
add
add
je
out
cmp
repnz
mov
xchg
sbb
add
push
into
pop
mov
pop
inc
add
cld
enter
outsl
repnz
fsubrs
xor
in
in
andb
adc
pop
fidivl
das
lock
lcall
movsl
test
sub
adc
inc
mov
or
jecxz
cltd
push
xchg
cmp
fcmovnb
daa
jb
movsl
mov
inc
flds
pop
xchg
jno
inc
xor
movsb
icebp
test
mov
lret
push
mov
repz
cwtl
cli
xor
sub
sbb
dec
shrb
into
ds
adc
in
cmc
xor
jns
jbe
insl
and
cmp
je
outsb
mov
lahf
loope
loopne
sbb
inc
add
pushf
stc
test
xchg
popf
and
pusha
cmp
cs
dec
jp
pop
dec
jae
enter
inc
mov
loope
mov
push
mov
jge
enter
inc
data16
or
clc
push
lds
push
mov
test
push
leave
les
dec
mov
cld
dec
fldcw
cmc
jge
or
xchg
popa
stos
daa
sbb
adc
sbb
sahf
mov
dec
jg
jne
xchg
inc
cmp
les
das
pop
jg
sbb
js
gs
movsl
rcll
lock
pop
adc
repz
pop
inc
xor
inc
sbb
movhps
sub
cmc
fidivrl
mov
add
mov
cmp
addr16
loope
sbb
sbb
daa
stos
shrb
lret
int
pop
fisubs
jl
shrb
pop
cmpsl
ror
and
cmc
stc
test
add
jnp
adc
jge
jle
outsb
adc
sbb
inc
dec
push
add
lds
inc
cmp
mov
push
mov
lret
mov
int3
pop
xlat
dec
outsb
int
dec
xor
fimull
push
xor
mov
add
lcall
cmp
dec
pop
push
daa
lock
out
xlat
mov
addr16
stos
pop
mov
subb
mov
and
and
loopne
dec
aas
push
sbb
ror
mov
jne
or
lods
loope
outsb
enter
loope
and
lds
clc
mov
into
add
inc
mov
out
fisubrl
les
jb
cmc
test
ljmp
idiv
test
cmp
mov
push
xchg
fcoml
mov
test
loop
adc
gs
push
inc
push
or
subl
xchg
inc
xor
mov
sarl
scas
movb
add
cmp
xor
addl
int3
enter
adc
frstor
insl
sbb
rcrl
movsl
es
scas
and
push
ret
addr16
or
push
rcrb
sbb
sbb
movsb
mov
mov
out
call
mov
and
rcr
or
ja
adc
sbb
inc
icebp
mov
stc
mov
jl
mov
xor
imul
dec
mov
push
jo
fsubp
adc
and
adc
cmp
cld
xchg
fbld
stos
push
enter
out
pop
sti
insl
inc
and
mov
inc
enter
shlb
push
sbb
mov
sti
jo
stos
pop
je
cmc
mov
shlb
fwait
and
icebp
lods
imul
mov
mov
out
and
push
and
insl
jae
mov
inc
sti
jl
mov
sbb
movb
pop
pop
int
sahf
mov
test
mov
adc
es
xor
push
mov
mov
add
jmp
adc
pop
mov
popa
jno
dec
push
test
cmp
pop
mov
jmp
sbb
fs
cmp
rorb
cmp
xchg
popf
or
mov
push
mov
push
std
daa
mov
inc
sahf
fidivl
aam
mov
lods
mov
mov
fidivrl
mulb
aaa
mov
dec
cmc
sti
fistpl
int3
jl
dec
mov
xchg
xor
mov
pop
enter
mov
es
cmp
les
add
fwait
xchg
fldenv
mov
mov
inc
fucom
shrb
xchg
cwtl
nop
pop
cmp
sbb
or
cs
adc
and
lret
popa
mov
insb
xor
adc
fisttpl
mov
sahf
js
rcrb
mov
xor
loopne
das
or
in
pop
mov
mov
push
cwtl
sub
sub
dec
shrb
in
pop
add
mov
fs
add
cmpsb
nop
stos
outsw
pushf
push
mov
cmc
incl
cwtl
sbb
jb
repz
cmpsl
sahf
inc
dec
add
int
enter
in
cmpsl
popa
mov
xchg
or
dec
sahf
dec
mov
cmp
fdivp
mov
out
arpl
jmp
stos
add
hlt
and
xchg
xchg
or
pop
adc
out
or
lcall
mov
lret
nop
sub
out
cmp
jbe
sarb
das
enter
xchg
cmp
jnp
data16
outsb
adc
push
insl
arpl
ss
jp
inc
insb
inc
or
das
jle
xchg
inc
push
inc
cmp
xchg
fs
nop
ret
lea
das
pusha
ret
inc
mov
sahf
jo
int3
int3
popa
fmull
and
out
fiaddl
jecxz
xlat
sbb
out
adc
cmpsl
js
dec
and
nop
js
mov
mov
xchg
mov
add
sti
sahf
dec
fistl
mov
sarl
aas
ljmp
aam
xor
pushf
fidivrl
adc
and
sbb
xchg
add
mov
jl
lret
xchg
cli
jae
lahf
test
not
lds
sbb
sahf
or
fwait
pop
fdivl
xor
xchg
and
loope
dec
testb
movsb
add
sbb
inc
pop
clc
es
scas
push
stc
xchg
ds
daa
mov
dec
cmpb
leave
je
pop
mov
iret
jno
movsb
xorl
dec
add
imul
mov
sbb
int3
fnsave
imul
mov
mov
sbb
daa
mov
dec
sub
dec
xor
aas
lcall
mov
ficoms
iret
dec
sbb
aaa
dec
pushf
sbb
sbb
add
add
andb
cld
loope
out
xchg
pop
and
add
adc
push
sbb
dec
gs
sbb
aaa
mov
mulb
bound
xor
adc
test
adc
cmp
xchg
aam
test
test
jmp
addr16
pop
dec
push
aas
lock
sbb
mov
jecxz
xchg
rol
sub
cwtl
and
pop
pop
pop
jp
insb
and
inc
jmp
jle,pn
jns
lret
fs
ja
aas
dec
je
mov
lcall
cmp
cmpsb
dec
sbb
add
push
mov
lcall
lods
mov
test
or
add
xchg
jo
cmpsl
adc
sub
mov
dec
lds
js
shrb
lock
call
push
movsl
test
popf
pop
xchg
push
push
divl
imul
int
inc
adcb
dec
out
mul
retw
mov
fdivl
frstor
gs
loop
cwtl
sbb
mov
lock
shl
pushf
subb
nop
aad
xchg
rcr
nop
jecxz
repnz
ret
mov
and
aad
lds
jp
sbb
pop
sub
pop
jo
inc
pushf
xor
dec
cld
push
or
xor
movsb
dec
out
sbb
jecxz
dec
arpl
mov
leave
dec
fstl
sbb
nop
and
and
xor
sbb
rcrb
lods
call
out
icebp
jne
sub
sar
sbb
stc
mov
sbb
mov
cmp
pop
push
andb
adc
lea
sub
push
leave
inc
dec
xchg
pop
and
aaa
jno
hlt
cmp
out
push
xchg
push
pushf
sahf
mov
dec
jnp
outsb
xorb
scas
loop
inc
int3
and
sub
into
inc
lahf
dec
ds
popf
and
xchg
fs
inc
jae
dec
xor
and
inc
cwtl
add
mov
cs
xlat
test
mov
cmp
adc
and
lea
or
dec
adcb
cs
bound
in
or
int
mov
xorl
cmpsb
scas
xchg
and
leave
sbb
ss
mov
fidivrl
cmpsl
mov
stos
ret
lods
push
mov
mov
dec
adc
cmp
push
dec
ret
in
loop
mov
ljmp
inc
pop
loope
pop
rcrb
pop
pop
icebp
test
xor
adc
int
mov
mov
adc
js
mov
pusha
xor
test
bound
incb
cmp
or
lcall
les
adc
mov
into
jb
and
cmpsb
add
pusha
dec
cmp
andl
mov
outsb
fildl
sub
lea
push
out
push
insl
cwtl
and
cld
stc
aas
cmp
cli
leave
paddb
mov
fs
int
arpl
mov
mov
leave
pop
icebp
ret
or
pop
push
mov
test
xlat
enter
mov
scas
xchg
std
in
movsb
mov
addb
jmp
xchg
sub
test
fiaddl
clc
dec
stos
gs
test
cmp
push
popa
aad
shrb
daa
fwait
mov
lret
in
lahf
inc
fs
orl
cs
test
sbb
pop
pop
aas
mov
dec
int3
mov
pushl
jae
cmp
enter
pushf
pop
push
scas
dec
mov
mov
test
push
push
adc
cmp
push
mov
int3
jns
push
test
es
mov
jmp
sbb
int3
inc
adc
and
out
xor
push
out
or
js
xchg
repz
shrl
std
jb
pop
mov
push
jmp
in
mov
xor
jne
cmp
xchg
pop
ret
repz
lock
jno
insb
and
jmp
xor
pusha
rolb
repz
add
dec
ret
cmc
jne
leave
aas
arpl
xor
bound
pop
cmp
xorl
stos
je
aas
pop
add
sbb
icebp
mov
adc
push
mov
jns
aaa
adc
inc
cli
ficoml
jle
or
inc
mov
cmp
cmp
icebp
mov
or
jmp
dec
dec
mov
lahf
incb
pop
mov
stc
addl
pop
aad
aas
push
dec
mov
xchg
frstor
inc
jae
aad
sarl
sbb
mov
call
or
iret
mov
sub
popf
addb
fdiv
push
mov
lds
push
ja
jb
call
sahf
shlb
jne
out
xchg
dec
js
lea
mov
inc
jmp
les
adcb
js
aam
leave
out
das
or
mov
cmp
jns
lahf
mov
xchg
jmp
cli
stos
in
inc
lcall
fldcw
pop
out
stos
shlb
movsl
jno
cmp
mov
jg
push
lock
dec
dec
xorl
mov
mov
icebp
xchg
inc
jae
xor
and
push
xor
aam
sbb
xchg
mov
mov
push
int
jge
inc
lods
jae
or
je
fistps
icebp
pusha
sub
bound
or
cli
add
adc
lahf
mov
aad
pop
cmpb
push
sub
pop
lds
cmpsb
lcall
lret
shll
xchg
sub
sbb
sbb
mov
cltd
lret
jnp
rclb
cmpsl
pcmpgtd
andl
out
sti
in
fsubs
addb
in
pop
pusha
fstps
pop
xchg
dec
orl
in
pop
sti
inc
add
adc
aam
adc
mov
cltd
shlb
push
cwtl
push
cld
add
mov
cli
mov
out
dec
loopne
mov
xchg
lea
push
inc
fists
or
xor
push
fdecstp
pusha
test
cmp
adc
xor
cmp
xorl
adc
xchg
movsl
insb
into
jl
mov
popf
std
cmp
mov
out
daa
push
push
push
sub
popf
push
imul
dec
clc
add
test
movsl
ja
mov
mov
outsb
pop
or
push
mov
mov
ret
sub
xchg
adc
xorb
movsb
stos
and
ja
mov
fwait
iret
mov
dec
jge
xchg
daa
aas
mov
clc
cmp
stc
xchg
nop
rcrb
les
add
mov
jg
fists
lods
add
and
jns
xor
sub
in
pop
jns
scas
mov
xor
xchg
dec
mov
inc
nop
jge
inc
aas
cli
lret
push
fdivl
pop
mov
popf
dec
movsl
loopne
jo
pop
aaa
lods
testb
sbb
or
in
jp
jae
cmp
xchg
adc
enter
cmp
lods
inc
and
sub
popa
loope
aas
lds
and
insb
push
push
mov
pop
pop
mov
cli
dec
lcall
mov
fs
subl
xor
mov
pop
add
push
mov
in
mov
and
add
clc
adcl
mov
aam
scas
xchg
add
xor
mov
cmp
mov
mov
mov
cld
xchg
add
jbe
fnsave
inc
sub
push
clc
out
mov
in
lods
scas
sarb
jle
mov
daa
sbb
movsl
daa
sub
sbb
push
shlb
or
adc
mov
xchg
out
dec
sub
lods
mov
mov
xchg
push
nop
xchg
ljmp
gs
jo
fisttps
jge
xchg
ror
stos
je
aad
xchg
sbb
jns
pop
std
sub
shrb
popa
inc
shlb
sahf
or
aaa
cmp
roll
inc
cmpsl
test
repz
dec
shr
lods
jp
sub
adc
lods
ret
aam
mov
xchg
add
cmp
fs
in
call
ds
js
shll
mov
insb
fsub
xchg
scas
push
pop
push
add
jp
dec
fwait
pop
callw
in
sahf
int
cmpsl
xchg
repnz
in
jp
out
xor
enter
fnstenv
shl
shll
xchg
sti
mov
cmpsl
push
cltd
fists
mov
adcl
xlat
jge
or
popa
inc
jns
inc
and
ljmp
xchg
sahf
faddl
insl
fists
repnz
mov
in
or
and
pop
ret
xlat
xchg
pop
aaa
and
mov
loop
out
hlt
mov
sub
lods
repz
iret
mov
adc
inc
sbb
push
addr16
pop
ret
popa
and
jnp
loope
lods
inc
sbb
or
cmp
sub
xchg
add
jg
mov
push
xchg
pop
sub
jl
push
popf
mov
test
and
push
pop
xor
pop
push
mov
shll
adc
scas
outsl
push
out
adc
leave
pop
cmc
sub
mov
out
call
idivl
xchg
push
or
push
daa
jne
mov
push
cmc
xor
fld
fisttps
dec
pop
jge
and
push
ja
add
ss
push
xor
ret
xor
in
dec
cli
add
pushf
push
aad
int3
xchg
sbb
inc
add
stos
push
loope
lahf
cmovo
lcall
ja
inc
mov
je
into
test
or
dec
insb
iret
fwait
nop
push
jge
mov
inc
add
dec
dec
movsb
inc
mov
cltd
std
psubb
iret
movsl
jns
cmp
mov
inc
cmp
push
or
cs
push
js
xor
mov
addr16
insl
cmp
sub
jle
and
aam
mov
sub
test
hlt
inc
das
and
bound
mov
test
fs
pop
in
les
mov
popl
in
cmp
mov
outsb
adcl
sbb
pop
mov
popa
lret
inc
dec
sbb
adc
cmp
push
fcmove
sarb
inc
fwait
jo
inc
fwait
mov
test
out
stos
in
add
mov
out
lret
std
icebp
mov
fisubrs
pop
mov
movsl
sbb
cmpsb
or
mov
movsb
std
or
mov
xchg
pop
ret
mov
ljmp
enter
sub
mov
jbe
or
mov
clc
pop
fwait
pop
movsl
jge
ret
shl
mov
dec
mov
loop
mov
enter
sub
rclb
adc
mov
in
push
outsl
adc
mov
fcmove
mov
out
adc
loop
imul
ja
or
stos
jmp
and
jnp
ret
dec
push
mov
and
lods
fwait
stc
cmpsl
femms
mov
or
mov
insb
add
or
testl
add
or
inc
lea
mov
rorl
loope
push
xchg
in
shlb
mov
shr
or
push
mov
je
xorb
pop
lock
and
cltd
jnp
mov
fstpl
scas
xchg
incl
dec
out
jp
mov
testb
xorb
sub
dec
mov
and
add
aas
add
insl
mov
mov
fcomi
int
adc
mov
popa
sub
mov
inc
xchg
mov
std
test
repnz
pusha
cld
mov
mov
std
es
fs
inc
insl
bound
jo
pushf
outsl
popl
mov
mov
cmpsl
into
bound
push
test
jo
sbb
rorb
aad
je
pusha
sub
jge
lahf
imul
jge
inc
aad
adc
xor
push
mov
push
mov
xorb
fstps
xchg
push
push
fidivs
shrb
insl
push
pop
loope
jo
dec
mov
push
movl
shll
je
pop
inc
xchg
add
or
movsb
popl
sarl
mov
inc
je
jbe
scas
mov
push
xor
mov
add
orl
fcmovne
in
addr16
pusha
inc
lods
movsb
cwtl
xchg
lea
dec
cmpl
mov
jle
or
sub
insl
dec
aam
imul
mov
xlat
push
sbb
xor
mov
mov
rolb
dec
sub
stos
jle
sbb
dec
jecxz
inc
push
cltd
inc
js
arpl
je
cmp
sub
sti
repz
es
in
flds
imulb
out
adc
or
imul
or
jle
adc
or
sub
xor
pop
ficoml
cltd
mov
gs
repz
mov
repz
mov
xchg
lods
jmp
add
add
add
add
push
adc
and
cmp
add
adc
add
add
in
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
sbb
sub
xor
cmp
ss
ss
ss
ss
aaa
imul
aaa
xorb
aaa
lcall
aaa
ret
aaa
shll
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
loope
out
hlt
cmp
or
add
add
dec
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
xor
inc
cmp
pop
cmp
add
or
add
push
xor
xor
jae
jns
test
mov
xor
xor
xor
xor
xor
xor
xor
addr16
xor
cmp
arpl
xchg
xchg
xor
mov
xor
pop
aaa
jb
jnp
test
mov
xchg
aaa
sahf
aaa
lods
aaa
mov
shll
aaa
into
aaa
call
cmp
cmp
cmp
cmp
cmp
pop
cmp
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
idivl
cmp
adc
and
daa
cmp
cmp
cmp
cmp
xchg
cmp
cmp
sub
cmp
jae
jle
xchg
movsl
cmp
lret
cmp
fidivrs
cmp
dec
ds
ds
ds
add
xor
xor
dec
xor
pop
xor
ja
xorl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xlat
xor
jno
jle
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
dec
cmp
lahf
movsl
loope,pt
jmp
clc
aas
add
add
add
add
or
adc
sbb
xor
inc
xor
pusha
xor
insb
xor
mov
lahf
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pusha
xor
xor
xor
xor
repnz
xor
xor
xor
xor
jl
dec
cmp
nop
ds
fstpt
add
add
add
add
xor
pushf
xor
xor
xor
xor
xchg
xor
scas
xor
int3
xor
sbb
daa
aaa
sub
xor
jbe
xchg
cwtl
cmp
cmp
in
cmp
cmp
cmp
push
cmp
push
cmp
cmp
sbb
add
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
xor
je
js
xorb
xor
lods
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
xor
inc
xor
pop
xor
xchg
xor
scas
xor
into
xor
in
xor
or
adc
sbb
sub
xor
ds
ss
ss
ss
jo
jnp
xchg
mov
xchg
ss
ss
fdivs
fbstp
in
in
divl
add
or
push
aaa
and
aaa
aas
aaa
inc
aaa
push
aaa
pop
aaa
data16
imul
aaa
xorl
aaa
mov
mov
aaa
aam
out
in
aaa
stc
aaa
or
push
cmp
sbb
and
sub
xor
cmp
cmp
data16
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
outsl
cmp
cmpl
mov
sarb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
bound
jle
test
xchg
cmp
cmp
sarb
fnstsw
out
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
cmp
jle
test
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
cmp
jno
ja
jg
test
add
add
cmp
xchg
xor
xor
xor
xor
xor
xor
xor
xor
jne
nop
xor
xor
xor
movsl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
ss
push
xor
jl
xchg
xor
xor
cmp
inc
aaa
push
aaa
pop
aaa
push
aaa
xorl
cltd
aaa
lahf
aaa
xor
test
lods
cmp
xor
aas
ds
ds
ds
jnp,pt
sahf
mov
rolb
add
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
add
add
add
xor
xor
xor
xor
xor
xor
xor
xor
push
add
push
xor
and
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
sub
pop
xor
je
lods
xor
sbb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
addb
add
add
mov
cmp
cmp
cmp
mov
add
add
add
ss
ss
ss
add
add
or
