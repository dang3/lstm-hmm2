push
mov
sub
mov
movzbl
mov
mov
movl
movl
cmp
movl
jne
or
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
xor
sub
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
push
push
push
pushl
pushl
call
xor
or
dec
mov
jmp
add
push
xor
or
adc
mov
mov
add
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movzwl
not
and
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
push
mov
movzwl
mov
mov
mov
movl
movl
mov
jmp
sbbb
cltd
js
mov
push
rcrl
jo
jo
jo
jo
rcl
aad
ror
rol
pop
push
add
lods
add
xor
ret
adc
mov
add
mov
sbb
lods
sarb
or
sahf
jp
inc
lods
push
sub
mov
stos
js
roll
jmp
mov
dec
fcomps
pop
test
sub
mov
pusha
nop
mov
and
jmp
out
repnz
xchg
xor
jbe
xlat
and
add
adc
xor
or
fldl
xor
pop
push
or
pop
fstps
jno
mov
ja
sbb
xor
into
cmpsb
or
int3
and
inc
mov
sbb
xor
adc
pop
daa
out
xor
mov
repnz
test
add
shll
mov
push
movsb
push
xchg
mov
inc
aam
sbb
jl
xor
popa
js
push
rol
loop
insl
outsl
addr16
dec
lret
loop
hlt
xchg
jbe
dec
adc
stc
js
push
stc
pop
and
lea
inc
push
test
aaa
inc
stc
rclb
sahf
decl
mov
pop
faddl
and
lcall
xor
adc
jmp
int
pop
mov
inc
sahf
mov
xor
loope
dec
cmc
pop
fists
sbb
hlt
adc
mov
push
and
xor
push
out
xor
inc
clc
cmpsl
jb
mov
push
add
inc
jl
inc
das
rcl
inc
xor
xor
cmp
pop
sub
movl
push
sti
out
bound
jns
addr16
aad
rcr
inc
shlb
fistpll
out
xchg
cli
add
shl
lods
daa
inc
push
or
addr16
adc
jo
pop
jl
mov
dec
ror
push
stc
mov
jle
fiaddl
lret
cld
loopne
in
push
and
xor
jmp
clc
icebp
mov
icebp
ficompl
inc
jb
jle
jo
jle
jo
cmp
insb
xchg
je
adc
lahf
xlat
clc
and
cmp
cmp
lret
pop
movsb
or
bound
sub
das
daa
stc
jp
add
loope
sahf
test
lcall
les
dec
mov
xchg
pop
imull
xchg
jmp
out
sub
fcmove
std
mov
popf
into
inc
cmp
add
pop
mov
jmp
jns
scas
aad
mov
mov
aaa
xlat
js
stos
push
pop
fmuls
mov
and
aas
movsl
loopne
jns
andl
sbb
cmp
inc
in
icebp
pop
push
mov
inc
scas
ljmp
cld
loopne
popf
dec
stc
mov
or
and
or
movsl
shl
ffree
sbb
insb
lods
xor
lods
xchg
inc
mov
sbb
push
popf
and
outsl
in
mov
push
inc
inc
enter
xor
and
daa
mov
mov
cmpsb
adc
xor
xchg
loopne
jns
fisubs
jecxz
mov
cmp
lret
loope
shll
jecxz
rorb
rcrb
xor
mov
pushf
pop
mov
fistps
xchg
mov
mov
add
xor
and
insb
fwait
movsb
mov
in
sub
xlat
cmp
sbb
out
arpl
sub
xor
lret
dec
negl
push
push
push
out
push
frstor
inc
adc
push
data16
ja
rolb
dec
leave
sbb
xor
rolb
inc
cmp
push
or
mov
inc
add
sahf
movl
jecxz
push
rorb
dec
sti
mov
flds
jle
add
jle
stos
pop
out
sbb
sbb
sub
jg
insb
imul
rorb
fmuls
call
add
lods
dec
lods
imul
push
outsb
cs
jo
jo
jo
jo
stc
test
incl
pop
fstl
xchg
cld
mov
cmpsb
dec
aas
mov
add
add
and
sahf
cmp
push
repnz
mov
pop
xchg
jnp
or
mov
or
data16
jp
clc
cmc
sarb
pop
nop
jge
push
add
lods
cmc
push
sbb
push
enter
daa
cld
loope
lods
jmp
and
std
xlat
icebp
and
jns
jge
lret
adc
repz
das
adc
mov
mov
and
aaa
add
sub
ret
icebp
add
inc
lods
pop
scas
sub
sub
aam
sub
and
ja
nop
das
ljmp
inc
mov
ja
stos
jecxz
adc
sbb
dec
sub
sub
cmp
nop
scas
sub
daa
dec
push
lret
xor
jb
mov
cmc
and
ficoms
jb
int3
fbstp
cltd
jecxz
dec
insl
fwait
arpl
es
adc
fnstsw
sub
movsb
test
jno
adc
fidivl
jg
mov
fwait
loop
and
shlb
lcall
pushf
push
mov
xor
push
lea
repnz
arpl
add
loopne
fsub
mov
xchg
subb
sti
xchg
cmpsl
xchg
cmpsb
sub
dec
and
cltd
cmpsb
adc
cmp
nop
fldenv
sub
arpl
das
mov
mov
sahf
and
xchg
cwtl
adc
outsl
aam
outsb
enter
nop
push
fucomp
mov
outsb
into
xor
mov
adcb
mov
mov
fldt
dec
aam
es
mov
scas
mov
mov
rclb
loop
lods
aam
cltd
out
cmp
push
arpl
cltd
testb
xor
inc
sti
les
test
repz
outsb
pop
sahf
dec
add
out
incb
push
add
in
imul
inc
cltd
mov
mov
movl
mov
mov
xor
xor
xor
add
add
div
mov
cmp
je
movl
lea
mov
jmp
int3
sub
push
mov
mov
jo
jo
jo
sbb
sbb
xor
cmp
popa
mov
xor
mov
jmp
nop
or
jp
fs
les
outsl
mov
popf
push
or
jle
ret
outsl
xor
inc
push
scas
daa
add
sbb
cmp
xor
mov
popf
pop
mov
cmpsl
mov
mov
xchg
stos
repnz
dec
clc
sub
addr16
xor
add
add
fs
hlt
and
rolb
or
in
mov
adc
sub
sub
mov
std
dec
aam
gs
mov
je
sbb
mov
jbe
xchg
mov
pusha
cmpsl
leave
push
les
clc
bound
push
pop
inc
mov
add
xchg
dec
ret
mov
test
pop
and
lds
pop
mov
ret
pop
addr16
xchg
mov
lcall
and
aas
iret
adc
test
roll
movsl
fs
ficoms
jno
xor
sarb
fwait
mov
adcb
aam
mov
fidivs
dec
or
push
adc
lcall
imul
xlat
test
or
int
out
das
jp
xchg
mov
lret
rcl
adc
sub
mov
mov
cmp
iret
xchg
in
lcall
test
xor
jo
leave
pushf
lea
lods
dec
mov
int3
sbb
add
cld
mov
push
mov
outsb
sbb
das
mov
push
call
xchg
inc
sti
cmc
jno
dec
dec
mov
mov
mov
outsb
jbe,pn
pop
xchg
push
cli
sub
mov
cmpsb
sahf
aam
loopne
mov
sub
xor
cmpsb
and
mov
mov
imul
mov
mov
cmp
je
mov
orl
jmp
mov
jmp
popa
ja
add
xorl
adc
mov
or
fdivl
jo
jo
jo
imul
pusha
subl
dec
sbb
mov
mov
mov
xor
imul
or
ret
mov
lods
aam
xlat
mov
lock
fstpl
mov
cmpsl
mov
sbb
test
push
mov
test
imul
mov
add
push
mov
into
repz
subb
mov
rcrl
icebp
pop
stc
cmp
dec
add
push
sbb
in
stos
cmp
push
push
push
dec
or
xor
outsb
scas
pop
or
ret
pop
in
pop
movsl
mov
pop
cmp
repnz
push
rcrb
jo
push
out
adcl
insb
xchg
sub
xor
out
je
sub
jp
pop
fnsave
xchg
sub
cmp
sub
cli
into
lret
pop
or
sbb
mov
das
mov
add
jnp
rcl
or
pop
gs
mov
lods
aas
adc
loopne
sbb
and
hlt
pop
mov
pop
push
ja
cmpb
or
mov
fcoms
out
sbb
fs
jae
sbb
xchg
mov
dec
cmp
aam
mov
dec
fsubp
das
mov
arpl
pop
movsl
outsb
jmp
and
xor
es
lock
add
mov
inc
ret
or
mov
imul
imul
in
ljmp
fistps
mov
xchg
jl
call
icebp
xchg
sahf
xchg
aas
sbb
push
ljmp
push
adc
hlt
or
aam
xchg
iret
pop
inc
movsl
lods
mov
repnz
ljmp
or
pop
clc
jge
dec
gs
mov
mov
sbb
out
clc
add
int3
lds
cmp
or
cmp
call
insb
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
jmp
cld
test
jb
stos
inc
inc
cmp
and
jo
jo
jo
jo
sbb
mov
push
shll
into
shrl
adc
adcb
mov
mov
xchg
dec
fadd
sti
cmpsl
mov
adc
xlat
sarb
inc
mov
jb
xor
cmp
shll
mov
in
bound
es
add
sbbl
cs
cli
jle
sbb
xor
lcall
cmp
dec
test
jg
out
sbb
mov
push
mov
or
into
ds
nop
add
cs
aam
cltd
rolb
jae
jbe
and
pushf
in
jl
stc
xchg
xchg
imul
pop
ss
mov
mov
add
inc
and
xchg
aas
loope,pt
add
popa
mov
mull
cli
int
add
into
dec
xchg
pushf
push
jns
mov
sub
mov
add
stos
loop
and
test
pop
ret
jae
leave
pop
xchg
outsb
cli
mov
mov
mov
cli
outsl
pop
sbb
leave
sbb
mov
hlt
in
fldenv
pop
shl
out
adc
mov
add
cmovg
lret
pop
pop
insl
daa
pusha
xlat
rcl
xchg
pop
push
dec
fnstenv
fldlg2
lock
stos
shll
push
fildl
movsl
xor
stos
jecxz
jmp
push
ja
movsb
add
adc
jns
dec
jl
xor
xchg
push
stos
xor
cmp
jne
xlat
push
leave
negb
fwait
movsl
nop
scas
adc
stc
fwait
push
adc
nop
enter
mov
sub
mov
and
mov
or
icebp
into
nop
dec
leave
stc
outsb
inc
inc
xor
icebp
dec
pop
inc
pushf
jmp
fcompl
clc
cmp
add
cmp
jmp
ret
gs
cmpsl
insb
sbbb
jo
jo
jo
adc
pop
out
lret
push
cmc
or
add
push
add
in
loop
jo
jge
into
rclb
out
or
inc
cmp
loop
adc
fidivs
or
sbb
je
idivb
loopne
outsb
or
rolb
xor
loop
push
clc
out
in
repz
inc
aad
xor
std
mov
xor
mov
sti
mov
pop
sub
icebp
insb
push
adc
pop
pop
nop
outsl
lea
test
lret
push
or
scas
aam
mov
scas
add
and
jb
mov
push
push
inc
ret
cmp
push
mov
arpl
fiadds
mov
pushf
test
sub
loope
test
lods
je
test
adc
pop
scas
in
lret
loopne
inc
into
inc
mov
mov
inc
std
jo
int
or
push
mov
sarw
mov
mov
pushf
fbld
insb
sbbl
ret
mov
or
mov
mov
push
mov
enter
sbb
rcrb
cmp
lock
xchg
xchg
mov
ss
adc
ljmp
cmpsb
adc
sbb
aas
aad
and
mov
movsb
xor
adc
lds
sbb
cmpsl
jo
cs
stos
lret
xchg
scas
out
fpatan
xorl
lods
lea
sar
and
sahf
cld
insl
out
mov
push
lret
mov
mov
add
jb
cmp
pop
mov
pop
loope
rol
lock
mov
xor
xchg
in
pop
in
mov
movsl
cmp
idivl
inc
bnd
mov
lcall
cmp
cltd
icebp
rol
mov
lcall
xorb
stos
cmc
xchg
sub
jno
or
jg
je
mov
xor
add
mov
mov
jmp
jp
sbb
cltd
ja
jno
sbb
sub
jo
jo
jo
jo
and
into
inc
pop
push
lea
sbb
inc
xor
mov
xor
in
movaps
push
jge
rorl
xchg
xor
scas
rorl
push
xor
xchg
adc
call
add
xor
sub
mov
pop
push
xchg
mov
inc
or
mov
dec
cmc
pop
jno
loopne
je
imul
das
and
xchg
add
repz
jo
push
dec
xlat
push
inc
pushf
adc
lds
and
dec
and
dec
cmp
stos
mov
fsub
fiadds
push
cli
cmpsl
mov
xchg
mov
rcrl
adc
iret
lahf
scas
cli
in
cmp
dec
push
dec
orb
in
insl
jle
mov
leave
or
sti
push
jo
dec
xchg
adc
jecxz
das
fistl
loop
mov
aad
add
clc
ss
dec
fnstenv
scas
mov
cmc
movsl
stos
aas
mov
aaa
test
xchg
pop
adc
mov
pushf
cmpsl
xchg
lret
mov
xlat
in
aaa
sahf
lea
adc
movsb
dec
xor
inc
test
loopne
push
xor
ds
sub
sbb
and
mov
adc
pop
int
mov
xor
sbb
cmp
xor
inc
and
fnstenv
insl
jmp
mov
das
outsl
bound
in
fwait
and
pop
fs
xchg
inc
repnz
cwtl
adc
cltd
pop
jmp
pop
and
out
cmp
ds
mov
cs
jl
das
dec
lods
loopne
xchg
mov
loopne
or
sub
test
mov
arpl
mov
in
out
stos
int3
bound
adc
arpl
sti
lds
int
enter
rcll
ret
call
mov
mov
xor
mov
add
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
jmp
and
jae
xor
mov
jo
jo
popa
jo
dec
outsb
lcall
jg
or
fbstp
mov
dec
insl
loop
out
test
mov
dec
test
jecxz
mov
fisttpll
loop
cmp
nop
insb
cmp
mov
in
mov
mov
sbb
pop
xchg
mov
push
mov
shll
mov
rol
popf
pop
daa
mov
jno
mov
mov
jmp
cltd
in
repnz
ret
cld
adc
fnstsw
lea
xchg
mov
add
xor
nop
out
idivb
mov
xor
cs
or
jae
stc
scas
jp
jbe
jbe
and
and
xorb
cwtl
push
stos
pop
xor
jbe
pop
dec
dec
enter
lahf
or
test
mov
cs
dec
mov
push
cltd
adc
shr
cmpsl
push
sub
cmp
jge
insb
jp
push
arpl
cmp
push
aad
lcall
mov
js
mov
push
or
out
pop
xchg
push
jno
cmp
inc
leave
sub
push
loop
pusha
stc
dec
fwait
pop
push
dec
add
mov
ds
mov
jns
and
jmp
cmp
pop
in
push
mov
xlat
sub
push
dec
mov
shlb
or
clc
or
xchg
nop
mov
lea
js
jnp
rolb
cli
repz
into
std
xor
xchg
jl
adc
and
push
mov
repz
mov
es
je
add
mov
mov
dec
add
dec
mov
addl
mov
xchg
jns
sti
jp
movb
and
inc
aas
push
adc
mov
fucom
sub
mov
dec
movsl
dec
adcb
push
scas
cld
in
pusha
fxch
push
jmp
inc
hlt
mov
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
jmp
cs
add
popa
push
in
jno
imul
jo
jo
jo
jo
pop
icebp
sub
push
cmp
movb
fsubs
cmp
cwtl
aas
mov
xchg
push
mov
pop
xor
jmp
mov
out
adc
fldl
in
div
jbe
sbb
xorb
jecxz
or
push
mov
xor
mov
jle
jmp
std
cmp
push
or
insb
ds
fldenv
mov
ret
cld
xor
xchg
push
and
pop
xchg
jmp
sub
inc
adc
test
push
add
xor
jns
int3
mov
lods
ljmp
cwtl
mov
mov
incb
and
sbb
addr16
sbb
lock
fdivr
fisttps
call
or
pop
cmpsb
sbb
sbb
fdivrp
cli
enter
add
xor
or
hlt
sbb
pop
jp
js
rcl
adc
lods
fcoms
cmpsb
sub
in
repnz
hlt
xor
dec
fadds
dec
mov
mov
imul
push
xlat
cwtl
and
push
out
jno
int
lcall
mov
jg
ret
imul
in
dec
push
push
dec
inc
addr16
daa
cmp
mov
adc
in
scas
jae
ljmp
sbb
cltd
push
cmc
and
stos
push
insl
push
xor
mov
inc
decl
clts
and
fs
cmp
cmp
sub
inc
sbb
add
call
cli
dec
stos
inc
xchg
and
inc
rcll
orl
ret
mov
popa
xchg
dec
lods
jns
fisttps
rorl
sub
pop
push
movsl
pop
sti
icebp
fcmovu
mov
inc
dec
arpl
xor
add
shll
addb
lahf
icebp
outsl
imul
lods
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
or
push
movzwl
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
mov
mov
mov
xor
push
mov
or
xor
sbb
mov
sbbl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
jmp
imul
cmp
jae
jl
dec
mov
jo
jo
mov
sbb
sti
aas
or
and
inc
push
cwtl
add
pop
inc
out
and
cmp
adcl
test
cmp
mov
pop
addr16
rorb
push
popf
das
push
movsb
push
xchg
cmp
mov
stc
mov
mov
cmp
xor
sub
add
inc
movsb
jmp
inc
adc
pop
repz
je
mov
je
fiadds
jmp
enter
mov
lea
mov
and
movsl
gs
sub
lods
dec
sub
cmpsb
xor
ret
aas
movsb
outsl
lds
jns
clc
icebp
inc
call
xchg
cltd
sbbb
push
sbb
cmp
ss
sub
shlb
or
mov
ficoml
cli
add
pop
inc
daa
jg
lret
out
or
fcomps
das
leave
lahf
aad
daa
inc
and
je
enter
xchg
pushf
lcall
sbb
pop
mov
pop
xchg
xchg
and
push
stc
lea
or
cmp
shrl
sbb
sbb
dec
int3
out
jnp
jmp
or
cmpsl
arpl
ss
jno
jp
andb
inc
inc
add
sub
shl
jmp
pop
mov
cmp
test
popa
ror
dec
sarl
cwtl
adc
xor
cmp
movsl
mov
or
dec
cmpsb
adc
pusha
bound
mov
ret
and
lock
sbb
stos
mov
jns
inc
mov
push
sbb
push
or
cmp
mov
mov
xor
xchg
and
cli
fbstp
or
repnz
mov
push
imul
nop
repz
cmpsb
mov
fisttps
popf
pop
stos
subb
xchg
push
out
mov
insb
shr
inc
loopne
dec
add
stos
daa
push
fstp
je
push
cwtl
inc
loop
loope
cmc
jecxz
mov
ja
test
stos
mov
subb
out
mov
add
pop
notl
push
pop
mov
xor
daa
pop
rcr
addr16
ds
adc
dec
push
outsl
fldenv
imul
es
out
xor
ret
js
mov
loopne
or
pop
pop
inc
sbb
test
mov
mov
pop
jge
icebp
aas
xchg
lods
xor
lods
push
idivl
enter
lock
or
dec
dec
xchg
stos
and
xchg
mov
cmpsl
push
stos
rol
jo
dec
dec
or
lcall
sub
cmpsl
push
push
push
scas
push
adc
add
cmp
ja
push
jmp
jmp
mov
ja
push
aas
xchg
out
jge
das
mov
jo
jle
jo
add
xchg
dec
mov
je
inc
pop
in
cmp
mov
negl
fmuls
jecxz
fisttpll
pop
sub
or
push
lods
and
in
inc
divl
jo
sub
fsts
dec
decl
icebp
das
pop
xchg
xor
movl
es
cs
fs
xor
test
cld
outsb
mov
jmp
cmc
dec
adc
pop
inc
lahf
std
push
inc
loope
jl
xchg
adc
test
daa
xor
xchg
inc
and
xchg
stos
pop
jae
pop
fs
sub
xchg
dec
add
adc
cld
mov
lds
roll
pop
sti
in
and
mov
sbbb
inc
mov
dec
rcrl
sbb
in
popa
sbb
fsubl
mov
rorb
jbe
scas
icebp
lods
push
int3
xor
mov
mov
jecxz
cmp
push
outsl
aas
adc
and
sub
adc
xchg
sarl
cmp
add
dec
dec
jb
jbe
mov
and
or
push
add
shll
iret
mov
dec
mov
int
mov
xchg
dec
aaa
dec
sbb
inc
push
jo
adc
push
and
aam
int
add
outsl
pushf
out
and
jno
xor
aas
mov
dec
outsb
jecxz
xchg
aad
sub
imul
pop
lods
aam
arpl
jne
int
push
inc
out
out
sbb
pop
enter
inc
push
or
sub
or
insl
mov
ret
call
iret
in
repz
inc
mov
cli
scas
lea
cmpsl
std
cmp
popf
clc
fsubrs
mov
inc
addr16
mov
xchg
movsl
or
mov
clc
les
mov
scas
loopne
xorb
mov
ds
xchg
mov
jnp
cmc
ja
outsl
subb
out
xor
in
cmp
sbb
or
lods
daa
and
iret
jg
sbb
jmp
jo
xchg
cmp
adc
leave
sub
mov
xchg
or
fmuls
xchg
jno
add
push
mov
sbb
out
dec
cltd
jno
and
es
cmc
fidivrl
fisttps
in
sub
movsl
lods
insb
sti
push
sarl
loope
clc
sub
inc
fs
std
dec
and
scas
push
cmp
mov
aam
mov
push
add
sbb
test
sub
mov
pusha
ret
or
jb
add
cld
xor
add
jmp
fistl
loope
lds
add
ret
pop
jo
mov
pop
and
mov
mov
push
sub
add
sub
push
mov
clc
mulb
jo
adc
xor
sbb
loope
pusha
and
popf
and
rclb
test
cli
sbb
adc
xchg
iret
xor
jmp
xor
in
mov
rcr
mov
je
jno
cltd
outsb
lods
int
sbbl
jns
hlt
lods
mov
fsubrs
popa
fmulp
pop
or
cmpsl
fldenv
adc
push
cmc
insb
sahf
mov
pusha
sub
cmpsl
dec
sub
pop
inc
push
mov
sub
xchg
jecxz
dec
jno
xchg
loop
pop
fmul
pop
fcmovu
movsl
in
ret
test
addl
inc
cld
fs
pushl
mov
repnz
jno
jbe
dec
adcb
push
dec
fsincos
mov
ret
add
mov
data16
inc
outsl
mov
test
inc
cmp
dec
mov
pop
addl
cltd
sub
test
push
adc
xlat
mov
push
push
cmc
dec
ljmp
mov
jbe
mov
and
pusha
movsbl
fwait
aas
and
adc
cltd
lret
fstpt
mov
cs
les
adc
lods
cmpsl
pop
rcll
bts
dec
imul
sub
push
jge
sub
and
xchg
adc
push
mov
inc
jns
jb
pop
pop
push
movsl
femms
or
jmp
ret
les
xchg
popa
sub
push
jo
xchg
outsl
push
pusha
mov
push
addr16
loope
jg
jl
call
adc
sbbb
mov
rolb
xor
mov
and
mov
mov
push
ficoms
ss
nop
mov
movsb
cwtl
lret
or
sub
xor
sub
mov
arpl
fwait
sub
jnp
push
cmp
stc
mov
bound
je
repnz
cs
add
mov
arpl
mov
pop
mov
jle
mov
fdivrs
movsb
mov
xchg
bound
sbbb
stc
aam
pop
xlat
mov
jno
jle
pop
pop
filds
inc
fs
or
pushf
inc
push
cmp
int
jnp
jge
xchg
push
inc
lahf
repz
sbb
push
insb
test
vpcmov
clc
fdivrl
pop
inc
imul
mov
imul
mov
xor
add
jmp
jecxz
fcoms
out
icebp
icebp
pop
xchg
aaa
aas
pusha
icebp
rorb
jo
mov
insb
pop
add
sub
pop
repz
aas
cmpsl
jge
inc
out
mov
cli
nop
je
insl
out
add
and
pop
pop
pop
addr16
or
inc
add
testb
int
dec
shl
aas
cmp
xchg
fwait
inc
inc
out
pop
sbb
iret
adc
inc
add
sbb
arpl
and
cltd
pusha
js
aad
push
int
lock
cmp
mov
jnp
cwtl
fsubs
addr16
push
fiadds
and
repz
repnz
outsb
mov
or
push
jmp
insl
fcoms
inc
jmp
bound
mov
loope
std
and
adc
loope
dec
xor
xor
dec
into
clc
nop
push
mov
mov
bound
mov
jl
mov
pop
and
out
hlt
scas
push
inc
mull
jae
xchg
push
lcall
mov
movsb
arpl
xor
stos
sbb
mov
stc
clc
in
cmp
cmpsb
push
je
add
mov
insl
inc
test
pop
xor
inc
xchg
outsl
mov
aas
push
es
sub
lds
adc
mov
ret
xchg
aas
mov
mov
lcall
cmpps
popf
cmp
or
mov
sub
frstor
inc
lea
or
popa
adc
shlb
insl
cmpsl
aaa
jbe
sub
dec
das
repz
dec
cmp
pop
push
sahf
jle
fbld
xchg
scas
js
push
and
test
ss
mov
shlb
mov
fmull
push
push
add
mov
test
movsl
ljmp
inc
push
aas
pop
and
lret
jle
loopne
iret
and
xchg
rorl
leave
jb
mov
or
mov
xchg
push
leave
loope
in
pop
sbbl
rorb
pop
add
mov
push
adc
fcomps
in
jo
sub
stc
fcomps
or
jne
xchg
cld
mov
lds
xor
ss
out
arpl
bound
jle
xchg
mov
mov
lcall
and
inc
push
sbbb
sub
xorps
push
aas
mov
adc
int
lock
popa
aam
clc
lock
fisttpl
xchg
push
sub
mov
pop
filds
xchg
ficomps
xor
mov
clc
inc
inc
enter
test
pushf
jb
add
cld
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
adc
mov
addl
mov
adcl
xor
adc
mov
andl
add
movl
movzwl
mov
orl
movb
not
lea
mov
or
jmp
out
out
jno
in
or
and
adc
cmp
test
dec
cltd
add
mov
sahf
pop
or
ljmp
or
cmc
test
cmp
outsl
xchg
ss
xchg
xchg
fisubrl
hlt
or
stos
dec
out
push
nop
or
divb
fidivl
push
out
enter
mov
repnz
jne
adc
std
xchg
mov
cmp
sub
xchg
or
dec
cmp
sbb
jnp
imul
sub
stc
sbb
mov
andl
adc
push
scas
sub
mov
jno
jae
paddusw
xchg
jne
add
rcll
and
imulb
mov
das
jo
push
pop
imul
movsb
push
mov
int3
cmpsl
mov
xor
cltd
sti
dec
mov
icebp
fwait
popa
ss
adc
jo
pop
lahf
pop
mov
shl
dec
lds
push
mov
jb
cld
xor
mov
cld
enter
mov
inc
mov
loopne
fwait
and
mov
roll
and
cld
mov
xchg
xchg
lahf
stos
dec
cli
add
dec
repnz
add
adc
jns
popa
dec
and
mov
dec
cmp
movsl
push
icebp
add
add
push
mov
pop
inc
mov
repnz
xor
mov
in
mov
mov
and
or
mov
ljmp
addr16
fnstsw
movsb
js
in
sbb
jns
cwtl
outsb
jae
dec
add
xor
std
in
xchg
mov
add
enter
in
lods
pop
jle
imul
push
out
into
sbb
push
add
and
jle
sub
pop
fs
mov
adc
loop
cmp
hlt
out
jne
pop
mov
js
sbb
clc
xor
mov
lock
push
push
stc
shr
dec
dec
ret
mov
adc
pop
mov
stos
xor
adc
js
repnz
mov
aad
inc
jmp
out
mov
outsb
jl
enter
dec
ljmp
std
or
jns
pop
xchg
lret
or
push
jbe
mov
mov
test
daa
push
add
adc
aas
xchg
mov
adc
pop
push
push
in
insb
or
insb
sti
xor
dec
cmp
sub
pop
lahf
lahf
mov
arpl
xchg
rcrl
test
add
push
push
mov
ret
xchg
das
inc
xor
mov
fdiv
imul
sbb
pop
stos
jns
xchg
filds
lods
xchg
and
ret
xchg
mul
shlb
fs
xor
movsb
rcl
lret
lahf
push
jl
or
or
fnstcw
dec
mov
incb
pop
scas
cltd
pop
jmp
cmp
popa
ljmp
fidivs
inc
sarl
scas
lea
cmp
inc
jl
mov
movzwl
adc
mov
subl
xor
sub
andl
mov
negl
movl
jmp
fists
cltd
mov
addr16
push
and
and
cmp
add
mov
std
fmul
or
mov
daa
mov
movsb
and
jbe
mov
push
cmc
mov
sub
aad
test
pop
or
sarl
inc
sahf
fs
xchg
jb
imul
pop
test
mov
in
pop
aad
paddusw
pop
pop
add
dec
or
mov
cli
mov
or
dec
cmc
js
inc
movsl
sbb
outsb
shlb
pusha
dec
outsb
push
leave
insl
out
sbb
and
push
xchg
cmp
pushf
jg
mov
int3
test
or
or
lds
repnz
adc
sbb
mov
cmp
stos
dec
stc
sarb
add
xchg
mov
shll
mov
cmc
jo
fildl
or
jno
sbb
aaa
jmp
lea
or
xchg
sub
sub
mov
out
mov
mov
mov
std
jge
mull
or
rol
jno
xor
sbb
inc
enter
sbb
pushf
mov
jns
shll
mov
clc
xchg
outsl
pop
mov
enter
out
sub
push
cltd
pop
adc
cmp
sbb
mov
repz
es
or
aam
bound
ficoms
insl
imul
sti
add
out
adc
div
sarl
popf
dec
outsb
insb
push
stos
jge
and
pop
fdivs
hlt
dec
jne
test
daa
push
mov
jnp
in
add
decb
divb
lea
jbe
jmp
adc
sub
aam
jns
xchg
add
dec
fistps
lahf
cli
add
xchg
xor
es
subb
adc
push
inc
inc
dec
dec
movsb
xchg
loopne
add
addr16
sbb
sbb
adc
sti
xchg
mov
and
cltd
jp
cmp
sub
loop
scas
dec
push
mov
pop
xlat
xlat
dec
loope
cmp
lahf
gs
jge
mov
je
orl
fwait
outsl
jge
in
jb
mov
aaa
mov
lahf
mov
dec
aas
adc
xorb
jnp
jbe
dec
sbb
push
mov
imul
push
inc
popf
rorl
sub
lret
mov
cmp
std
cmp
dec
jno
mov
leave
in
repz
in
mov
bound
leave
inc
jl
enter
push
mov
adc
fwait
push
pop
rcl
inc
xchg
pop
in
int3
in
adc
jmp
call
pop
pop
sahf
stc
fidivs
data16
sub
loopne
push
movsb
cmp
arpl
or
mov
pop
lods
sub
push
add
inc
dec
pop
mov
cmp
mov
sarb
lcall
inc
ror
mov
xchg
imulb
cmp
outsl
rorl
sub
data16
pop
arpl
push
inc
lock
clc
mov
push
xor
mov
adc
mov
add
movl
jmp
mov
movl
mov
movl
jmp
jge
lret
in
icebp
ss
inc
mov
sbb
cmp
inc
jmp
cmpsl
lret
adc
lea
into
adc
notl
mov
mov
test
enter
cmpsl
jae
pop
push
adc
sub
push
rcll
inc
fs
pop
int3
cld
cmp
adc
nop
jl
daa
scas
les
pop
add
sbb
out
and
dec
pop
inc
sub
sub
negl
in
fidivl
push
sbb
test
and
lahf
xchg
mov
push
ja
jne
cmpsl
xor
out
test
pop
outsb
lods
daa
fprem1
icebp
jnp
mov
add
fsub
movsl
dec
test
jl
stos
jne
hlt
shll
add
or
inc
pop
jo
insb
jecxz
pusha
aad
inc
add
repz
adc
inc
scas
add
push
inc
dec
jge
cmp
pop
jbe
bound
or
add
sub
rcrl
fadd
shlb
clc
loop
mov
sbbb
movsb
sbb
fwait
lock
cmp
and
es
or
mov
sub
jnp
movsb
fdivrl
mov
cs
fmull
sub
xchg
dec
jecxz
fsubl
cmpsl
cmp
es
ds
pop
xlat
jl
loope
push
scas
enter
adc
orl
push
pop
cwtl
pop
xor
and
add
dec
mov
pop
notl
xor
push
cwtl
int
std
dec
adc
add
stos
mov
aaa
das
mov
fbstp
mov
ficoms
loope
lret
scas
jb
sbb
ljmp
and
xchg
dec
out
clc
fs
lds
cwtl
xor
call
adc
cwtl
aaa
jns
into
add
in
mov
xorb
scas
cmpb
cmpsl
mov
add
push
ds
push
fs
mov
mov
dec
xchg
mov
cmp
fs
cwtl
push
push
sti
dec
mov
mov
rolb
jno
push
loop
mov
xor
inc
mov
rolb
hlt
cmp
jne
sbb
sbb
adc
add
in
rcrl
dec
pop
xchg
xchg
out
jl
cmp
imul
mov
xchg
mov
adc
xchg
out
test
dec
xchg
lahf
je
lds
push
insb
jb
dec
addr16
in
enter
dec
or
shrl
jl
cli
je
mov
setp
in
sbb
lret
sahf
imul
sbb
mov
cmpsb
fistl
adc
mov
mov
jg
inc
ja
inc
call
xor
cmp
dec
fbld
ljmp
and
ja
xor
popf
fs
loop
push
lods
dec
mov
pop
les
or
ljmp
cli
jl
les
mov
cwtl
mov
pop
mov
pop
test
cld
sti
clc
gs
pop
inc
not
loopne
clc
inc
cmp
movl
jmp
leave
daa
rclb
repnz
jecxz
cmpsb
dec
psubsb
jo
cmp
jnp
jecxz
mov
pop
out
dec
scas
xchg
xchg
cwtl
dec
xchg
fwait
or
pop
outsl
movsb
iret
jp
lcall
out
test
sbb
fwait
test
xchg
or
ret
adc
enter
les
divl
repnz
sbb
jle
and
dec
xor
jmp
mov
cltd
adc
loopne
leave
outsb
dec
sbb
scas
popa
push
pop
pop
idivl
maxps
and
test
leave
sbb
jnp
call
dec
pop
or
cmp
cld
pushf
mov
dec
hlt
mov
fdivrl
push
cmc
xor
pop
jbe
pop
stc
arpl
cld
jae
mov
inc
cwtl
mov
repz
jno
jl
and
data16
pop
lret
pushf
test
mov
and
xor
mov
sbb
lock
je
sub
add
xor
mov
rorl
aad
jbe
bnd
mov
dec
lds
mov
mov
push
xchg
cld
rcll
arpl
xchg
lret
add
daa
mov
es
add
sub
push
mov
mov
in
mov
and
popf
and
fsts
add
loope
icebp
mov
pushf
adc
scas
dec
or
sub
pop
nop
aaa
dec
adc
shr
scas
stos
jge
gs
mov
mov
shlb
sub
fwait
jmp
cmpsl
lret
loopne
scas
sbb
pushf
lret
jns
push
mov
mov
aas
repz
jo
mov
test
xor
jno
shl
push
adc
orb
mov
leave
fyl2xp1
mov
add
scas
cmpsl
push
mov
lcall
lret
mov
into
shlb
mov
adc
arpl
mov
jne
imul
and
push
pop
cmp
add
cmpsl
js
or
mov
pop
cld
push
sbb
or
pop
adc
insl
push
mov
cmpsb
jo
mov
cmp
cmova
out
jo
mov
adc
and
ljmp
pop
jns
std
cmp
push
lcall
aas
insl
push
push
pop
adc
shl
add
inc
imul
xor
push
jbe
jl
mov
jno
pop
cs
andl
add
jmp
out
sbb
sub
call
xor
aam
add
add
in
sbbl
push
dec
and
outsb
sbb
pop
xchg
xchg
jb
jmp
sti
xchg
xor
push
mov
mov
lds
adc
fdivrs
jecxz
pop
scas
mov
cmp
mov
popf
in
daa
aas
bound
mov
arpl
shlb
mov
mov
push
dec
add
sub
or
or
test
inc
adcb
shlb
push
mov
lea
jb
and
mov
jmp
push
jge
add
jb
inc
sbb
add
pop
fs
jo
cmp
push
mov
pop
sub
sbb
add
aas
and
in
cmpsl
into
dec
cmpsl
aaa
addr16
push
and
outsl
mov
push
repnz
ret
aam
mov
add
mov
popa
ja
mulb
popf
fdivl
ret
outsl
and
ret
push
xlat
test
push
push
cs
je
pop
mov
jb
pop
ss
sub
push
cmc
and
xchg
outsl
rcrb
pop
sahf
je
mov
push
xchg
pop
addr16
xchg
not
jecxz
cmc
push
lcall
cmp
or
js
cmpsl
dec
dec
or
sbb
lahf
loope
mov
fcoml
mov
sub
push
mov
idivl
cli
cli
movsl
jle
add
xchg
fildl
icebp
add
cmpsl
dec
sbb
rcr
adc
dec
cld
jb
test
jmp
shr
shll
pop
decb
xadd
rolb
in
loopne
adc
jle
xchg
add
xor
insb
pushf
xorb
aaa
adc
jg
int
fcmovnb
mov
lock
mov
dec
leave
sub
fmuls
movsl
es
ljmp
and
mov
and
nop
dec
cmp
inc
fbld
adc
int
pop
sahf
pushf
out
sarb
push
xor
cmp
xchg
push
xor
jns
std
inc
dec
fisttpll
nop
jle
jbe
and
lret
xor
imul
and
test
add
call
sbb
out
rcrb
movsl
test
enter
xlat
out
ja
xor
mov
clc
pushf
sbb
adc
sub
pop
sub
mov
in
mov
rorl
lock
fsubs
lret
cmpsb
and
mov
iret
jno
pop
adc
mov
mov
test
sbb
or
faddl
lea
dec
sub
mov
ret
into
frstor
pop
adc
dec
push
insl
aaa
lods
test
in
lods
adc
sbb
pop
inc
xchg
nop
cmpsb
out
dec
lock
cltd
and
stc
and
aaa
dec
mov
out
sub
subl
lret
outsb
xor
fcmovnu
dec
pop
mov
push
test
out
int
adcl
and
cmpsl
jl
inc
mov
mov
sub
fxch
leave
or
aas
lds
in
xchg
dec
mov
ret
xor
jae
arpl
lcall
pusha
xor
xchg
imul
int3
add
out
sub
adc
hlt
mov
outsl
cld
lret
xchg
push
ficoml
or
mov
mov
mov
icebp
sbbb
push
pop
or
mov
add
xor
mov
mov
fsubr
sub
fdivs
mov
xchg
mov
scas
icebp
insl
fisttpl
add
cmp
movl
je
add
push
adc
push
mov
mov
andl
xor
mov
add
addl
movzwl
andl
mov
sbbl
mov
addl
movzwl
sbbl
xor
addl
jmp
fdivl
dec
rsqrtps
icebp
inc
sub
arpl
jo
cmp
lods
push
adc
movsl
add
cmp
outsb
xchg
imul
push
push
dec
in
lea
nop
xchg
mov
stc
cwtl
out
pop
mov
mov
add
xor
add
lods
pop
xor
adc
sbb
xor
je
inc
add
mov
shlb
mov
icebp
push
cmp
xor
cmp
aad
inc
ja
das
add
xor
lock
enter
inc
pop
push
add
inc
mov
jl
push
pop
dec
cmpl
xor
sbb
sub
or
or
xchg
mov
mov
test
jg
push
rol
xchg
mov
lods
dec
jle
adc
mov
das
add
add
clc
xchg
adc
sub
jmp
sahf
dec
dec
data16
cmc
mov
out
fldcw
jb
jge
jo
push
and
add
aam
inc
pop
clc
insb
dec
es
fsubr
adc
mov
mov
mov
or
dec
dec
xchg
cmpsb
mov
stc
lea
out
xchg
adc
lods
jmp
shll
stos
inc
mov
jbe
sub
cmp
in
in
xor
mov
ja
pop
xchg
lret
gs
dec
and
enter
ret
xchg
sub
pusha
lahf
ljmp
fcmovb
sbb
js
sbb
jg
mov
mov
dec
push
mov
mov
mov
std
sahf
nop
clc
lret
adc
cmpsl
ret
aad
sbb
mov
sti
push
nop
jnp
push
lret
mov
mov
aad
fisubrl
sahf
mov
sub
push
insb
pop
xchg
sub
sub
lahf
push
cwtl
je
rcrl
mov
ds
push
cli
bound
loopne
sub
nop
mov
and
xlat
filds
xor
xchg
adc
nop
cli
add
add
inc
test
daa
sbb
sub
fdivrl
in
test
pop
add
push
mov
rclb
pop
insb
inc
mov
aad
rorl
inc
xor
popa
adc
mov
cmp
movsb
pop
dec
xlat
cmp
inc
hlt
add
sbb
stos
lods
adc
dec
inc
shufps
call
mov
cltd
scas
test
mov
ffreep
pop
movzwl
out
mov
inc
adc
in
fsubrl
arpl
jmp
loope
or
pop
aad
cmpsl
push
shlb
dec
hlt
push
cltd
xchg
movsl
xor
add
mov
jecxz
out
cmpl
mov
xor
xor
dec
xacquire
mov
adc
sbb
shr
cltd
mov
std
test
cmp
clc
fbstp
add
popf
cmp
mov
dec
and
inc
pop
dec
and
out
pusha
les
lods
movsb
je
push
out
sub
shl
push
popf
es
sbb
sub
in
repnz
inc
pop
shll
jne
sbb
shlb
jecxz
jbe
cli
jo
add
movl
mov
movl
mov
jmp
or
daa
arpl
fisttpll
decl
xchg
jo,pn
cmp
outsb
js
ja
cli
test
pop
mul
repnz
cli
adc
and
jge
imul
imul
add
dec
push
jnp
fcmove
movsl
xchg
inc
mov
das
and
sbb
les
adc
movsl
fildll
arpl
stc
adcl
mov
xor
jecxz
outsl
sub
jae
insb
jo
into
mov
addr16
mov
test
sbb
adc
sbb
je
dec
out
xorl
mov
sbb
adc
xor
push
jecxz
mov
pop
lret
nop
xchg
cmp
hlt
enter
cld
sub
cwtl
mov
mov
pop
fbld
sub
mov
dec
imul
in
pusha
dec
sbb
mov
lfs
or
add
mov
and
add
rorl
scas
mov
xchg
cli
inc
ja
leave
xchg
test
gs
jb
and
ret
or
fstpt
test
xor
sbb
mov
out
jne
insb
rorb
dec
out
xchg
mov
dec
sub
xor
sub
loop
pusha
add
js
adc
cmp
ja
fcoml
data16
pop
cmp
cld
pop
push
mov
int
cld
outsb
lods
adc
bound
hlt
add
push
repz
sub
shrb
rol
roll
sahf
xchg
mov
dec
out
sub
sbb
std
out
pop
popf
sbb
aam
pop
adc
mov
outsl
add
xchg
dec
fildll
jo
push
xchg
pop
stos
jl
lds
push
push
pop
dec
push
mov
ret
ss
pusha
mov
jl
and
jns
lds
sub
pop
lds
stos
dec
pop
mov
aaa
in
mov
xchg
mov
or
fbld
and
sub
popf
shll
cli
aam
sarl
cmpsb
xchg
fildll
add
pop
or
aam
xchg
push
or
bound
outsl
push
and
push
push
or
insl
xchg
lods
jg
pop
jne
in
aam
rorl
sub
aaa
es
leave
rol
ljmp
scas
pop
sbb
dec
les
adc
inc
lods
pop
cmp
aam
leave
pop
jg,pt
hlt
lea
mov
xchg
out
inc
mov
lret
fisubs
idivb
test
nop
add
aas
push
loop
pop
js
pop
aaa
fwait
jns
add
int3
or
cmp
ret
loope
jbe
or
mov
ud0
push
mov
popf
testl
shlb
ficomps
cmc
add
sbb
xorb
add
adc
leave
ja
data16
in
cmp
loopne
fcoms
xchg
dec
pop
or
out
lret
sub
cltd
cmc
inc
dec
jb
sbb
lcall
sub
lods
and
xchg
push
adc
ja
inc
hlt
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
jmp
xchg
roll
icebp
lods
add
sar
fdivs
sub
cmp
dec
push
ljmp
jb
mov
and
dec
pop
inc
les
jns
pop
push
in
cmp
lods
push
outsl
popf
mov
mov
scas
sbb
stos
push
push
add
jmp
adc
dec
sbb
pop
mov
dec
xchg
negb
es
mov
insl
add
mov
jbe
mov
adc
mov
lcall
jo
scas
mov
xor
ret
dec
test
mov
adc
sar
in
es
fidivl
add
mov
inc
loope
inc
or
movsl
mov
ficoml
xor
push
dec
and
repz
fisttps
mov
mov
aas
sbb
and
xchg
movsl
sub
cmp
cmp
add
dec
jae
and
cmp
xor
mov
sub
cmpsb
ljmp
jo
ss
push
xor
cmc
or
jecxz
xchg
sti
stos
pop
xchg
test
inc
cmpsl
jae
imul
pop
scas
or
ja
cld
test
push
cltd
cmp
push
data16
and
pushf
sub
jne
mov
or
and
pop
outsb
clc
cmpsb
mov
jmp
pop
mov
jg
or
daa
mov
jg
leave
xor
cmp
sbb
sti
movsb
xor
mov
and
push
adc
push
cmp
adc
and
mov
pop
popa
sbb
mov
add
or
loopne
pop
mov
or
cmp
sti
xchg
mov
jne
or
and
cmp
loop
sbb
fstl
add
push
sarl
shrb
adc
roll
xchg
xchg
dec
lock
inc
popf
pushf
inc
mov
and
testb
in
xchg
sub
cmpsl
nop
jmp
jp
pushf
mov
ljmp
cmp
lret
sahf
out
fists
add
in
xor
jns
sub
addl
les
iret
fisubs
stc
test
sbb
cmp
insl
mov
jle
aaa
daa
enter
xchg
and
clc
ss
add
xchg
inc
fidivrl
sbb
inc
fwait
mov
repnz
push
inc
leave
pop
push
adc
jb
in
pop
and
imul
jecxz
clc
pop
out
add
cmp
mov
dec
dec
xor
cmpsb
cmp
push
cwtl
sub
push
adcl
es
inc
ror
bound
ficomps
push
repnz
ret
aas
mov
enter
or
or
shll
mov
lret
mov
int
mov
adc
popf
nop
clc
xchg
mov
leave
cmp
sarl
sbb
imul
mov
xor
les
leave
ret
push
mov
push
mov
mov
sbb
jmp
pop
scas
sbb
push
pop
mov
sbb
jo
stos
jle
jo
fisttpll
jge
push
pop
stos
mov
stos
xchg
lds
or
in
cld
adc
imul
add
testl
or
lods
ds
icebp
into
outsl
scas
add
out
xchg
lods
inc
cmp
pop
mov
inc
pop
test
mov
and
mov
sub
xchg
insl
jp
lods
mov
in
dec
ret
mov
outsb
outsl
and
clc
test
inc
jg
or
pop
das
ja
mov
push
test
xchg
pop
jbe
xacquire
cli
inc
shld
push
mov
dec
lret
or
mov
cmp
jbe
jae
js
ficoms
and
xor
iret
fdiv
push
cmp
jecxz
jae
lret
mov
cld
sub
imulb
pop
or
popfw
push
out
sub
mov
mov
dec
cmp
xchg
sub
scas
mov
imul
or
jbe
push
inc
pushf
lret
jo
jno
out
mov
dec
out
movsb
ja
cmp
les
xchg
std
fstl
test
paddusb
or
sub
loopne
aas
mov
and
addl
jmp
cmpsb
lcall
xor
mov
dec
shr
into
fs
push
cld
dec
or
and
out
cmp
out
out
dec
sti
mov
jle
rcll
decb
sub
addr16
mov
add
ljmp
pop
pop
mov
movsb
mov
fwait
inc
lock
data16
out
mov
mov
pop
cs
xor
add
cmpl
pop
nop
jno
popa
cmp
and
push
xchg
jmp
fmull
or
dec
sub
jge
cwtl
test
out
jl
mov
push
xchg
cmp
into
mov
push
push
cmp
jge
aaa
xlat
movl
xchg
repnz
mov
cmp
mov
mov
test
call
add
outsl
cli
cmc
jo
shlb
mov
clc
sbb
jp
popf
fmull
fsts
nop
dec
rolb
inc
cmp
add
jecxz
and
mov
and
xchg
cmp
jae
pop
js
jo
in
or
popa
jne
test
fcoml
cmp
mov
xchg
inc
pop
stos
lock
and
cmp
sub
add
lods
mov
cld
loop
and
fdivs
ror
xchg
mov
pop
mov
mov
cmp
sub
addr16
std
inc
add
add
mov
jmp
ja
and
dec
xchg
xor
xor
jo
sbb
sub
imull
push
add
xlat
dec
push
push
xorl
adc
rcrb
aaa
sbb
adc
pop
mov
cmp
pop
fdivrs
ja
push
fisubrs
sbb
push
dec
or
cltd
clc
mov
jno
testl
dec
movsb
mov
aas
ljmp
push
frstor
pop
push
cld
add
jne
jg
jae
cltd
jne
mov
cltd
inc
pop
lret
xor
or
cld
jb
icebp
and
call
scas
test
arpl
xor
adc
sub
xchg
cmp
push
jo
dec
jns
xor
sub
jg
aas
push
dec
mov
mov
add
cwtl
orl
incb
gs
push
inc
mov
push
inc
mov
and
lcall
sti
daa
inc
jg
jno
int3
jbe
cmp
lahf
fnstsw
inc
test
outsl
movsl
nop
adc
pop
jmp
dec
sub
cmpsb
mov
ja
mov
or
ret
fwait
mov
mov
jb
je
inc
mov
sbb
add
dec
sbb
adc
mov
and
cltd
push
pcmpeqw
mov
loopne
or
xchg
jns
ds
in
push
push
adc
push
jne
loope
insl
aad
fs
add
iret
and
shl
jbe
jmp
add
mov
push
mov
mov
ret
fists
push
int3
push
jo
icebp
pop
inc
cmp
xor
fnsave
push
push
inc
add
cwtl
push
mov
push
mov
sbb
sub
leave
push
out
es
nop
or
inc
fnstcw
xor
xchg
xchg
push
lds
xchg
insl
mov
hlt
scas
pop
aaa
rorb
lret
pop
cld
and
mov
push
inc
sub
loop
push
push
push
mov
pop
push
stc
xchg
movsl
andb
push
lods
sub
add
sub
mov
add
int3
mov
adc
call
push
adc
das
jae
add
sti
mov
idivb
mov
fcmovnb
cmpsl
bound
movsl
jns
mov
scas
or
cmp
cmp
and
in
jp
xchg
mov
fiadds
lret
jne
inc
push
mov
and
mov
dec
gs
ja
mov
dec
add
flds
inc
call
xchg
push
imul
xchg
jo
lea
adc
and
inc
clc
xor
jnp
add
movl
and
mov
sbb
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
call
xor
xor
dec
mov
jmp
mov
add
xor
and
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
jmp
xchg
imul
fildll
xor
stos
jle
jo
imul
mov
subb
inc
mov
mov
add
stc
in
jle
rcrl
push
in
mov
inc
cli
cmp
add
imull
mov
add
testb
scas
push
adc
pop
shll
and
fcoms
imulb
sbb
push
in
aad
push
out
pusha
mov
xchg
adc
mov
push
ljmp
cmpsb
pop
mov
mov
mov
push
negb
lods
cwtl
xor
xchg
hlt
add
mov
xchg
pop
pop
ret
pop
ret
sub
mov
xchg
or
lahf
dec
aam
int
mov
outsb
jae
add
fsubrl
rcr
in
mov
mov
adc
fstps
sub
clc
mov
jbe
pop
sub
adc
mov
jp
je
test
pop
ljmp
roll
jl
push
add
pop
xchg
sbb
fistps
mov
sub
fldenv
fmulp
dec
imul
mov
add
scas
jb
adc
cmc
repnz
pop
neg
pop
cmp
pop
stos
dec
adc
jecxz
lock
out
xchg
insl
push
sub
mov
gs
mov
sbb
push
sbbb
sbb
xor
mov
lock
sbb
stos
pop
sbb
cmp
pusha
cmpb
push
loop
cmp
adc
out
inc
jno
and
mov
aas
adc
lods
imul
push
dec
aaa
adc
jo
sbb
mov
incb
push
rcrb
cmpsb
cmp
into
push
push
inc
jp
mov
mov
test
and
jo
dec
leave
sahf
ret
subb
mov
adc
lret
xor
scas
mov
out
repnz
cld
jne
jne
in
repz
repz
mov
or
hlt
movsl
adc
xchg
add
cwtl
lods
xchg
jnp
insl
iret
aad
rorb
fisttps
aas
mov
or
mov
or
hlt
dec
orb
adc
pushf
jmp
in
outsl
cmp
pop
cmp
adc
in
sub
or
into
in
push
sub
jle
das
iret
notl
xor
mov
push
sub
lcall
jle
das
cmp
jge
lahf
add
cmp
stos
sbb
mov
out
jo
fcmovnu
idivb
ret
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
addl
movl
mov
mov
adcl
mov
xorl
xor
jmp
fidivl
jle
jne
jb
sub
adc
jo
jg
jo
push
ret
dec
push
pushf
sub
sub
test
aaa
adc
fidivs
imul
mov
mov
dec
mov
and
insb
adc
and
lret
inc
call
stc
jg
movsl
xor
mov
in
add
jb
mov
push
adc
les
cmp
cmp
fdivrp
xchg
and
xor
mov
push
push
je
lds
leave
xchg
mov
dec
out
shrb
movb
mov
insl
movsl
icebp
fdivrs
in
mov
mov
shrl
sub
lret
mov
sub
xor
out
fimull
xor
outsb
nop
dec
ret
add
je
addr16
or
das
mulb
sub
inc
je
js
mov
ss
call
imul
inc
cmp
ljmp
mov
out
inc
roll
imul
fs
into
dec
movsl
adc
xor
mov
in
mov
mov
cmpsb
mov
ds
jo
add
xchg
dec
jecxz
cmp
mov
std
cmpsl
fcomi
sub
push
repz
pop
sbb
pop
adc
sti
mov
ret
scas
cmp
imul
push
pushf
test
mov
dec
arpl
imul
in
fdivrs
pop
and
xor
imul
mov
roll
or
in
add
mov
mov
xor
push
sbb
mov
or
mov
sbbl
add
adcl
mov
sbb
mov
adcl
mov
subl
mov
or
jmp
out
hlt
arpl
popa
xchg
insl
hlt
pop
xor
data16
cmpsl
jg
jo
loop
icebp
aas
cmc
inc
or
cwtl
mull
dec
test
call
clc
enter
iret
js
leave
fiadds
lret
inc
arpl
cli
es
out
scas
add
outsl
cmp
jp,pt
mov
or
scas
mov
push
add
decb
xor
iret
adc
outsl
bound
out
mov
subl
cltd
adc
sbb
xor
fwait
adc
push
fldenv
cmp
pop
daa
pop
imul
test
and
xor
adc
and
pop
call
mov
fsub
insb
add
aaa
fwait
xlat
sti
insl
push
pop
or
or
jo
daa
or
ret
sub
xor
arpl
outsb
iret
adcb
dec
movsl
pop
mov
adc
std
hlt
jmp
pop
sub
in
mov
push
sbb
jno
arpl
test
test
jne
gs
mov
scas
fadds
pop
adc
dec
std
inc
xchg
mov
in
inc
js
dec
cmp
mov
movsb
push
inc
lret
mov
dec
pop
cmc
leave
fdivr
jle
xlat
mov
push
out
jae
scas
daa
aad
cmp
cmp
mov
loope
rep
cmp
aad
sub
leave
std
repz
sbb
ficoms
dec
rcll
pushf
push
mov
jae
imul
loopne
aad
mov
inc
in
clc
scas
pop
push
push
push
cmp
movsb
xor
inc
nop
movsb
mov
mov
subl
mov
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
xor
add
jmp
jge
gs
gs
sti
ret
pusha
jo
fidivs
jo
cmpsl
jg
jo
xor
outsl
cmp
cli
daa
into
xchg
sti
pop
and
lods
mov
xchg
mov
xor
aaa
xor
addr16
and
mov
xchg
cltd
mov
or
imul
cmp
mov
decb
cmp
adc
in
cmp
pushl
dec
int
and
rcrb
imul
ret
sbbl
pop
adc
mov
jge
arpl
sbb
dec
sarb
daa
dec
xor
mov
or
push
fldl
jno
jno
add
sbb
xchg
mov
mov
xchg
shrl
in
xchg
mov
xlat
inc
loop
gs
pop
pop
loopne
or
jne
inc
mov
dec
sbb
pusha
das
push
jg
pop
inc
mov
pop
jne
popf
jg
sbb
xchg
push
xchg
xor
data16
aas
cmovo
mov
xchg
lret
insl
and
data16
pop
sbb
push
lahf
jecxz
cmpsl
xchg
add
out
xor
scas
adc
cwtl
out
fwait
pusha
cmp
fs
ljmp
das
mov
hlt
clc
adcl
fisttpl
popa
and
loopew
fsubp
inc
sub
pop
pop
insl
mov
nop
or
inc
aaa
cmc
sbb
dec
test
pop
loopne
neg
push
or
xor
xchg
jg
pop
pop
mov
pop
aas
lock
stc
ret
int3
cmpsl
fcmovnu
lret
xor
stos
lret
cmp
jnp
stos
mov
rcrl
sbb
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
push
adc
movl
mov
sbb
mov
mov
xor
add
mov
sub
mov
sub
mov
andl
mov
mov
jmp
mov
jg
inc
rorl
jae
pop
dec
mov
cmp
loop
jo
adc
sbb
out
rorl
mov
mov
inc
mov
jle
addl
cmp
mov
add
jecxz
cmp
mov
aam
pop
fidivs
lods
out
int3
adc
into
push
pop
rorb
addr16
xor
cmp
sub
int
fildll
pop
inc
push
mov
inc
jnp
gs
repnz
rcrb
cmp
js
xchg
push
enter
jnp
ss
cld
int
pop
mov
cmp
add
fiaddl
cmpsb
xor
push
xchg
lock
out
jbe
adc
or
cmc
std
frstor
test
mov
mov
and
and
movsb
push
sub
out
xor
adc
push
fisubl
ljmp
dec
mov
gs
inc
mov
xchg
sub
xabort
inc
jmp
cmp
sahf
xor
mov
daa
nop
mov
mov
jne
pop
js
or
jb
mov
out
andl
pushf
test
shlb
mov
xor
into
cmp
xor
movsw
jns
decb
or
addl
xor
mov
mov
dec
xchg
popf
push
lret
call
mov
push
push
repnz
psubsb
dec
cmp
add
adc
aam
je
mov
decl
adc
push
or
sbb
pusha
loop
icebp
movsl
inc
lock
outsb
lcall
xchg
stos
rorb
xlat
hlt
loopne
stc
enter
icebp
lea
pushf
add
jg
sbb
pop
and
pop
mov
add
or
mov
les
push
or
and
stos
sti
mov
lock
mov
ja
fbld
test
push
pop
xchg
dec
es
cwtl
and
xorb
xor
divl
dec
test
out
pop
dec
jae
rcr
push
and
adc
cltd
xor
lcall
sarb
inc
ficomps
insl
cmp
loopne
enter
nop
lods
and
xor
cmpsl
roll
dec
xchg
nop
cmpsl
pop
dec
sub
push
adc
mov
mov
adcl
mov
mov
orl
mov
subl
mov
andl
mov
mov
test
mov
jne
mov
jmp
sub
test
pushf
test
aad
movsl
cmp
loop
jo
into
insl
insb
out
inc
scas
sbbl
scas
mov
sub
sub
into
hlt
test
pop
and
cs
ret
sbb
movsb
adc
push
cmp
ffreep
pop
xor
cld
jb
cmp
into
test
xchg
inc
lret
ret
jg
jmp
add
insb
adc
pop
imul
imul
cmp
in
xchg
jecxz
xchg
and
add
mov
sbb
jle
xlat
movsl
inc
je
and
pushf
lock
in
fbld
push
or
adc
pop
sub
enter
jnp
mov
test
ljmp
pop
mov
scas
lock
aaa
rolb
lret
adc
lahf
jns
daa
and
pop
mov
sub
and
xchg
sub
outsl
mov
lret
sub
ja
dec
sub
xchg
xchg
sbb
sub
aas
pop
nop
pop
ret
xchg
push
jne
mov
mov
lret
aad
inc
mov
data16
aad
mov
adc
push
stc
lahf
ret
jge
and
add
inc
ror
sub
and
jg
mov
add
push
jnp
mov
mov
jmp
out
orl
push
dec
xor
jmp
pop
movsl
jbe
adc
leave
frndint
mov
int
jno
arpl
cmp
lea
xchg
shrl
icebp
adc
data16
pusha
lds
sbb
call
ret
push
insl
stos
lcall
inc
sbb
push
cmp
test
jnp
aaa
aas
andl
fwait
inc
fwait
lea
loope
sahf
in
push
enter
mov
aam
roll
fnstsw
sar
cwtl
inc
and
rcrb
push
mov
and
ret
adc
lds
xchg
add
sbb
insl
popf
dec
mov
or
sbb
xlat
mov
pop
xchg
repnz
xchg
xor
xchg
pop
xlat
inc
sub
pop
and
xchg
push
adc
mov
push
lahf
pop
je
push
nop
pushf
cli
into
jmp
xor
hlt
scas
jg
jge
fs
pop
or
test
xor
add
leave
ret
push
mov
sub
mov
mov
mov
subl
mov
xorl
movl
incl
movl
subl
mov
push
push
push
movzwl
and
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
add
xorl
mov
movl
jmp
inc
jae
pop
sub
jae
and
mov
sbb
jmp
and
jo
out
xchg
xor
les
sub
outsl
leave
xchg
addr16
pop
xchg
jle
inc
int3
dec
dec
mov
sub
ljmp
xchg
pop
or
push
cmpsb
test
pusha
aaa
aad
es
xchg
dec
mov
sbb
push
cmc
mov
fmull
xchg
cmc
imul
sub
in
repz
ljmp
push
or
xchg
cmc
decl
push
int3
testb
dec
pushl
andb
and
popf
fldenv
shr
fimull
dec
xor
jle
sbb
std
inc
adcl
je
jl
lcall
add
xchg
leave
or
incl
cmp
adc
mov
testl
push
mov
jnp
sahf
je
cmp
leave
out
cmc
lret
sbb
mov
pop
fsub
mov
inc
inc
scas
mov
test
pop
lods
or
scas
pop
fnstsw
xchg
fcoml
or
sysexit
bound
jns
mov
shlb
mov
enter
lock
xor
bnd
cs
cmc
jo
adc
pop
pop
pop
cmp
sbb
cmp
mov
bound
into
int
rcr
mov
inc
sbb
mov
inc
enter
mov
shr
mov
lock
cmp
repz
push
sub
pop
mov
mov
rcr
in
or
mov
pop
ficompl
cmp
loope
mov
lahf
lahf
pop
inc
sbb
pop
and
push
movsl
push
jmp
rorl
cmp
imul
mov
ljmp
test
cli
int
cmp
cmp
fildl
pop
mov
in
mov
push
ss
pushf
push
sbb
cmp
sbb
ljmp
movb
inc
xchg
test
or
mov
fstps
movsb
lahf
and
sti
lods
inc
stos
and
aam
push
push
mov
mov
jmp
std
adc
test
aam
shld
sub
pop
and
bound
adc
sbb
aad
cmpsl
icebp
dec
add
cld
aaa
add
jle
or
movsb
xchg
into
dec
jp
push
mov
push
adc
cli
icebp
pop
cmpsl
xlat
arpl
aad
dec
or
xchg
test
sbb
ret
and
imul
movsb
sti
popa
push
mov
fsubp
sbb
mov
push
rcrb
into
cmp
loop
pusha
dec
sub
sbb
int3
adc
gs
inc
push
cmp
cltd
inc
pusha
jno
cmp
shl
xor
outsb
stos
fldt
jo
pop
push
pop
push
insb
mov
jb
test
ljmp
pop
ret
mov
in
fsubp
sub
adc
or
js
xlat
rorl
xchg
movl
adcl
movl
movl
add
jmp
sbb
sarl
lahf
popa
sti
arpl
ret
and
jo
shr
jnp
das
fdivs
sub
popf
sbb
aaa
aad
cmp
xchg
out
add
cmc
xchg
or
bound
sub
xchg
push
and
aaa
loopne
push
enter
ret
pop
int
push
mov
mov
xor
jge
lock
out
das
push
mov
cmp
out
adc
pop
xlat
xchg
int3
and
push
nop
sub
movsb
sbb
test
dec
clc
in
mov
int3
and
and
sub
es
sub
and
jecxz
leave
int3
and
pop
sahf
or
les
mov
xchg
loopne
orb
stc
push
inc
dec
jecxz
or
pop
daa
fists
scas
xchg
rcr
mov
push
aad
inc
adcl
rcrl
mov
mulb
inc
loopne
cltd
pop
das
or
or
push
mov
out
cmp
in
popf
lods
je
inc
xchg
jae
imul
ret
xor
pop
sbb
shrb
xchg
outsl
repnz
data16
sub
cmp
dec
mov
adc
stos
test
loope
or
cltd
pop
xchg
outsl
mov
cmp
mov
repnz
addl
lret
or
mov
orb
sti
fidivrl
test
cs
cltd
pop
aaa
cmc
popf
sahf
adc
std
and
mov
aas
push
adc
add
mov
in
or
jno
ret
lea
cmc
je
cld
xchg
jb
cmp
cmpsl
cwtl
mov
mov
lods
jb
and
xorb
aad
icebp
pop
insb
push
cmpl
shll
jbe
xor
into
and
dec
add
dec
cmp
in
inc
nop
add
jp
mov
sahf
inc
cmp
mov
adc
mov
roll
pop
jnp
insl
and
xlat
sti
or
ds
movsl
and
in
xor
std
cwtl
movhps
icebp
iret
stos
dec
lea
cmpsb
clc
push
adc
jbe
mov
test
push
jne
mov
jne
divb
leave
or
outsb
push
loopne
mov
es
mov
scas
ljmp
enter
mov
stos
xor
pushf
enter
cmp
repz
ss
roll
adc
or
mov
shlb
fdivrl
mov
mov
loop,pt
lds
mov
lock
scas
out
leave
cmpsl
inc
push
movsl
adc
sub
fwait
lods
lds
adc
je
push
push
mov
and
stos
loop
xor
xor
jecxz
clc
and
aam
cli
out
push
jecxz
pop
mov
cmp
xor
out
pushf
mov
fcompl
xchg
clc
clc
push
mov
pop
jne
stc
mov
fwait
mov
and
jle
iret
cwtl
xchg
btc
sar
inc
add
out
add
movb
notb
add
movl
add
in
test
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
andl
add
orl
mov
adc
jmp
or
rcl
cmp
pop
jns
popa
jmp
data16
test
jo
and
lret
shll
int
fwait
lea
lds
jecxz
scas
push
dec
in
push
and
xor
inc
loope
or
mov
stos
jno
aaa
or
jne
mov
les
jmp
arpl
adc
cmpsb
jb
dec
and
push
and
inc
test
adc
jne
testl
sub
movsl
cmp
pop
push
push
popf
mov
call
scas
or
add
add
stos
jo
aas
jns
sti
jge
dec
push
lock
das
add
fcoms
mov
pop
xchg
rol
xchg
mov
and
jns
aad
mov
sbb
xchg
andl
dec
aas
cltd
loopne
sti
lods
mov
cli
xchg
cmp
repz
stc
jnp
lods
ljmp
pop
mov
call
repnz
sub
loopne
hlt
sahf
fcompl
inc
ficompl
lds
repnz
gs
mov
pop
test
into
pop
insb
fldenv
gs
mov
test
push
ret
lea
push
xchg
xor
test
fisttpl
popa
pop
jp
xchg
rcll
push
jae
cmp
notl
int3
push
ret
mov
or
aaa
xor
jmp
jo
loope
addl
sbb
jnp
or
mov
jge
or
pop
jl
cmp
mov
and
test
push
out
push
xchg
mov
jmp
sub
xor
fiaddl
push
aam
shlb
pop
lea
enter
or
icebp
mov
pop
int
mov
rcrl
lds
test
ss
stc
mov
mov
adc
inc
popa
xchg
sub
out
adc
popa
gs
rorl
mov
lods
cmp
and
bswap
sub
daa
mov
pop
dec
mov
sbb
or
mov
inc
insl
dec
flds
or
pop
and
loopne
add
vunpcklpd
pop
jg
xorl
data16
call
cmp
inc
add
insb
aam
xor
cmpsl
cmpb
es
pushf
or
and
iret
sete
xor
incl
cwtl
mov
out
faddp
clc
or
sub
xchg
xchg
jmp
jne
rcrl
inc
mov
imul
push
mov
push
flds
faddl
subl
hlt
inc
push
xor
and
sub
jb
cltd
sub
fsubr
sub
sub
sbbb
dec
ret
push
mov
in
push
pop
jl
cmp
sub
aam
lock
lcall
mov
or
push
sbb
sub
ljmp
notl
mov
pop
stos
xchg
lods
jge
xchg
ljmp
add
adcl
push
inc
mov
sbbl
xor
add
push
mov
orl
xor
addl
add
xorl
push
lea
push
addl
pushl
adcl
pushl
call
adcl
test
je
lea
sbbl
push
mov
jmp
xlat
and
insb
push
aaa
pop
push
push
sahf
inc
daa
dec
jecxz
int3
jo
and
jo
insb
and
stc
lea
jecxz
pop
sub
adc
fcmovnbe
imul
scas
rcrb
mov
ficoml
sahf
mov
xor
xchg
insb
push
xchg
inc
or
add
mov
sbb
xchg
mov
ja
jae
out
scas
and
adc
pop
pop
in
sub
push
jb
pushw
hlt
pop
cmpsl
scas
add
orb
movsb
pop
scas
jo
std
int
ret
subl
loope
inc
cmpsl
pop
push
jno
pusha
andl
and
fisubrl
pop
mov
push
xchg
sub
cmp
pop
sbb
rcrl
jmp
ss
pop
mov
sahf
or
test
out
int
imul
es
ror
shl
data16
dec
fdivrs
call
test
xor
mov
sub
sti
pop
adc
adcl
push
inc
dec
jp
pop
mov
dec
jne
filds
push
icebp
imul
mov
dec
arpl
cli
mov
lahf
dec
data16
mov
adc
mov
fisubrs
outsl
lea
sbb
adc
push
or
outsl
or
dec
jl
adc
es
mov
repz
mov
gs
out
mov
cmp
push
loop
mov
scas
or
xchg
rcr
cwtl
popf
les
mov
scas
subb
adc
jo
jae
rolb
ficomps
adc
sbb
out
push
dec
adc
gs
enter
shrl
lea
and
dec
aad
loopne
out
cmp
je
aam
sbb
cmpsb
ret
dec
movsl
pop
mov
test
adc
gs
sarl
test
or
es
mov
test
push
jle
mov
ret
out
aaa
test
out
or
xchg
daa
test
adc
hlt
cs
dec
add
xlat
stos
xor
xchg
ficoml
hlt
push
push
insl
mov
cs
sub
call
lods
repnz
xor
jno
jecxz
xchg
lret
out
pop
movsb
add
jl
mov
rorl
loopne
cltd
int3
mov
mov
xchg
sti
pusha
pop
push
data16
ffreep
sub
xchg
imul
outsl
aam
dec
in
or
cli
push
xor
sbb
test
mov
add
push
xor
cwtl
fistl
add
inc
sub
cmp
inc
or
adc
push
repz
test
arpl
fiaddl
push
cmp
pop
sub
sbb
lcall
out
adc
into
and
inc
arpl
ds
add
push
mov
add
push
mov
mov
pushl
jmp
sahf
das
or
mov
mov
pop
mov
sub
aaa
push
leave
jo
and
jo
cmpsl
pop
dec
cmp
xchg
test
pop
cmp
jg
xchg
inc
out
lock
push
mov
pop
push
cmp
rcrb
inc
lock
dec
add
jns
popa
inc
decl
inc
pop
sub
add
je
movsb
out
push
pop
cld
mov
adc
stos
xchg
or
and
in
fnstcw
xchg
and
inc
push
xor
mov
in
xchg
sub
jne
int
jne
push
fisubrs
fdivrs
push
ja
dec
notb
jge
rolb
aam
and
jmp
std
push
xchg
jge
mov
and
nop
mov
xchg
fists
das
jp
repz
aad
rcrb
mov
scas
cmp
mov
adc
out
cmpb
dec
push
sbb
mov
xor
jbe
daa
subl
ja
loop
fwait
xor
cld
leave
test
mov
adc
cs
nop
pop
sub
sbb
jae
jns
push
xorl
xchg
mov
in
mov
pop
daa
pop
cmpsl
test
sub
pop
xor
lods
clc
lock
pop
cltd
mov
or
lret
ss
rclb
jle
test
iret
mov
push
pusha
dec
mov
les
insl
mov
orl
jb
sbb
popa
mov
pop
lea
addr16
aad
mov
gs
and
fcompl
push
push
shrb
mov
adc
cmpsl
add
gs
imull
insl
push
xchg
mov
adc
sub
imul
scas
xchg
test
jge
and
lods
push
out
pop
ret
push
inc
out
xchg
bound
js
in
fiaddl
dec
mov
cmovns
adc
cmp
jno
jns
outsl
pop
aas
cmp
cs
pop
cmpsb
xchg
scas
add
repnz
and
loopne
out
cltd
test
ret
jecxz
sbb
jbe
add
pop
mov
adc
jg
loope
ret
shl
jns
inc
dec
or
pushf
orl
cmp
bound
out
mov
imul
push
adc
pop
jecxz
je
push
js
js
loope
sub
mov
movsb
in
lock
std
gs
inc
mov
mov
idivb
out
and
mov
mov
adc
sub
cmp
scas
adc
dec
mov
and
mov
jge
xchg
and
dec
jge
xor
mov
jbe
jge
cmp
adc
orb
xchg
dec
movsl
cwtl
nop
dec
mov
push
inc
or
xorl
shl
cmpsl
push
out
mov
mov
pop
int
pop
sbb
cmp
lret
pop
movsl
push
sbb
sbb
bound
js
imul
imul
imul
cmp
clc
cmpl
jmp
in
outsl
pop
outsl
jne
data16
test
pushf
inc
into
lock
aad
jo
jge
jo
popf
leave
inc
sub
cltd
xchg
iret
pop
popf
popa
cmp
roll
lcall
inc
arpl
ret
in
dec
pop
xchg
xchg
popf
imulw
sbb
fwait
mov
push
mov
ret
sbb
sbb
ss
data16
sbb
inc
jg
iret
dec
mov
fld
inc
add
mov
lods
pop
jnp
pop
stos
mov
push
out
cmp
jmp
loope
pop
out
jge
loope
inc
out
dec
popf
sarl
jp
pop
sarb
inc
out
ljmp
ret
clc
in
lcall
mov
pop
cmp
jne
das
mov
rorb
ljmp
and
mov
mov
test
pop
add
xor
push
mov
clts
cmpsl
xlat
sbb
add
out
sub
aaa
dec
jle
pop
jp
inc
fistpll
xor
loope
jb
lods
ret
adc
push
repnz
mov
out
xchg
jbe
std
xchg
or
enter
push
jecxz
ljmp
cmp
xor
lret
adc
cmp
int
xor
xor
or
xchg
mov
adc
fsubl
or
les
push
lock
iret
dec
add
movsb
nop
pusha
jmp
js
lock
cmp
or
cmp
ljmp
gs
mov
fwait
dec
movsb
mov
int3
jae
popa
es
mov
idivl
push
aaa
insl
icebp
fsubrl
jmp
ljmp
movsl
adc
fistpl
mov
rol
hlt
pop
imul
sbb
scas
and
sub
fdivrs
jb
cwtl
or
rcll
mov
cmp
divb
or
fcompl
mov
aas
jno
fisttpl
add
jmp
popa
in
sbb
and
jp
std
into
sarb
mov
incb
in
pop
sti
lret
test
dec
insl
push
add
movsww
in
mov
mov
call
mov
fmul
jge
loopne
mov
out
loope
jnp
fdivs
inc
in
mov
insb
mov
shrb
sbb
stos
jecxz
mov
cmp
imul
adc
dec
jp
fwait
mov
or
adc
jb
xchg
pop
mov
mov
push
lods
xchg
outsl
mov
adc
mov
and
and
int
xchg
pop
push
scas
cld
cli
xchg
pop
mov
ret
push
aad
out
movsb
jne
test
jne
adc
int3
mov
fwait
add
adc
push
shrl
push
add
cli
jns
cwtl
lcall
outsb
push
mov
in
aaa
or
iret
mov
ds
notl
icebp
push
sbb
mov
fwait
sahf
adc
sarl
mov
push
fstpl
ljmp
or
test
and
shl
imul
adc
cltd
cmp
adc
add
inc
loopne
test
call
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
jmp
ja
mov
mov
rolb
jmp
and
jo
leave
out
repz
shll
lods
int3
push
sub
imul
sbb
mov
test
out
sub
aaa
in
mov
fiadds
mov
mov
mov
xor
xchg
push
rolb
add
pushf
mov
dec
xchg
cmp
xchg
arpl
test
add
pop
push
mov
clc
push
dec
xor
icebp
pop
inc
div
lret
mov
pop
xor
or
dec
cld
add
popa
push
pushf
sbb
xlat
ss
jbe
mov
idivl
cmc
xorb
dec
and
mov
mov
pop
pop
lea
jmp
je
outsl
add
add
ds
call
out
pop
movsb
scas
int
xchg
sub
ja
out
inc
cld
in
push
in
in
into
pop
xor
icebp
mov
pop
inc
push
mov
or
clc
fst
test
sbb
jnp
or
mov
mov
adc
out
pop
mov
sub
cwtl
fstpl
mov
scas
dec
xchg
pop
outsl
fadds
xchg
push
sbb
cwtl
ret
scas
push
adc
scas
lods
icebp
and
pop
push
cwtl
pop
xchg
sbb
cmc
sub
jnp
mov
mov
fsubl
mov
xor
add
cmp
jo
out
mov
lahf
xor
xor
sub
add
push
push
in
and
dec
and
sbb
inc
loope
movsl
enter
adc
or
sti
mov
outsb
xchg
aad
pushf
sbb
or
addl
mov
rorb
fsubrl
andl
adc
jnp
or
cmp
daa
out
lcall
mov
insb
aas
ljmp
mov
gs
jno
and
pop
sbb
add
mov
data16
movsb
dec
mov
ds
cmp
sbb
mov
add
cmp
repnz
inc
enter
sub
subb
mov
stos
xchg
das
loope
scas
jno
enter
jnp
pushf
adc
cli
mov
outsl
lea
jp
xorl
mov
hlt
outsl
and
pusha
mov
xlat
int
mov
fcmove
push
adc
cld
outsl
clc
jo
aad
shl
popa
out
and
cmp
jne
and
or
and
xchg
and
scas
mov
leave
shll
in
imul
icebp
lcall
push
sbb
lahf
xor
add
fs
cli
outsb
lret
sub
sbb
xchg
cmp
push
sbb
mov
mov
adcl
or
mov
adc
addr16
pcmpgtb
icebp
add
pop
mov
inc
fucomp
xor
or
add
dec
add
add
fisttpl
jp
xchg
mov
out
jo
and
jo
pop
dec
clc
add
fwait
inc
xchg
mov
or
stc
push
mov
test
xor
mov
jg
inc
push
sub
pop
push
out
pop
lahf
add
cmp
add
push
inc
jne
fwait
push
and
ja
push
fstpl
ficomps
inc
outsb
clc
jo
cmpsb
lods
xchg
fstps
mov
outsb
xchg
or
sub
je
push
in
outsb
cmp
jo
int3
das
aam
jb
mov
jle
pop
cmp
movsl
in
and
movsb
sub
push
lods
iret
jo
fs
xor
aam
out
divb
xor
int
icebp
dec
add
adc
into
hlt
test
push
mov
out
adc
xor
cmp
cmpsb
push
test
loop
dec
fldcw
xchg
mov
inc
iret
mov
push
dec
stc
insl
mov
loopne
stc
xchg
movsb
sbb
cmp
mov
and
xor
xchg
lods
jno
or
aam
popa
xchg
loope
mov
add
nop
stos
insb
dec
xlat
mov
test
push
lcall
add
int
inc
test
push
dec
ffreep
xchg
mov
xchg
lcall
jno
in
xor
mov
cmp
imul
sar
push
rolb
ret
lds
or
fcomi
lahf
add
mov
dec
lret
inc
or
mov
mov
push
arpl
and
push
loopne
shl
inc
sahf
fnclex
jns
leave
jno
insl
pushf
in
jnp
xchg
lahf
push
icebp
or
sbb
push
repz
xchg
aas
add
cmpsl
ss
add
js
dec
adc
sti
incb
mov
cmp
incb
adc
lret
popa
xor
dec
inc
xor
add
mov
jge
imul
xor
test
movsb
cltd
xor
in
and
lock
mov
or
and
ret
inc
xchg
mov
pop
hlt
or
xchg
ja
xor
adc
fmul
dec
mov
insb
sti
fldenv
cmp
ror
and
mov
mov
ret
inc
cld
pop
sbb
rorl
outsb
push
pop
inc
push
loopne
mov
jl
enter
sub
cs
sbb
pushf
incl
ret
cltd
les
sub
or
scas
fmull
pushf
mov
push
test
stos
xchg
adc
and
movsl
inc
mov
add
adc
repz
xor
std
or
ret
pop
movsl
mov
push
fwait
rorl
mov
mov
mov
lds
mov
int
jnp
lods
pushf
lock
jecxz
fldl
mov
push
add
mov
sbb
dec
lods
pop
popa
push
inc
pop
push
pop
adc
arpl
lods
cld
pop
xchg
lea
jne
pop
sti
out
push
test
orl
push
jmp
mov
fwait
xchg
fwait
jae
roll
rcl
pushf
xchg
fdivl
and
jo
add
push
in
sub
lret
sbb
shlb
dec
inc
addr16
add
inc
test
lds
sbb
xchg
inc
pop
mov
out
mov
push
pop
cmovno
mov
arpl
xchg
pop
mov
fnsave
cli
insb
addr16
add
iret
aam
test
sbb
dec
lret
insb
xorl
test
xchg
aaa
xor
xchg
out
es
jno
cmpb
add
sbbb
jecxz
jecxz
rclb
xchg
xchg
sti
mov
xchg
jno
lds
cltd
pop
cmc
jnp
sub
inc
or
add
mov
xchg
pop
push
pusha
lret
into
adc
adc
adc
sbb
repnz
aam
jae
and
jp
xchg
push
dec
jl
scas
insb
insl
jo
stos
pop
jbe
dec
bound
jo
sarb
test
inc
dec
nopl
xchg
mov
adc
aam
je
dec
adc
fs
sub
push
or
and
lods
ss
in
enter
sub
xchg
insb
lcall
cmc
pop
jl
inc
filds
pop
imul
arpl
sbb
jge
cmpsl
xchg
xchg
nop
push
mov
jns
or
or
sbb
ljmp
jp
push
lret
movsb
pop
movsl
push
mov
movsb
and
xchg
push
dec
outsb
repz
scas
pop
int3
cs
insl
sbb
jmp
jne
cmpsl
cli
add
mov
imul
int3
xor
mov
push
std
pop
sub
push
jb
mov
xor
add
dec
jno
sahf
adcb
xor
test
test
inc
xchg
cmc
stc
data16
push
scas
inc
dec
insb
enter
push
mov
stc
out
sub
mov
push
stos
mov
popa
mov
push
add
pushl
iret
sbb
cmpsb
cs
push
cld
int3
sub
ret
pop
ja
outsl
add
push
push
sbb
out
addr16
lock
daa
xor
jle
cmc
xor
clc
dec
push
loope
data16
fcoml
std
xchg
dec
adc
pop
push
outsb
jl
sbbl
fcoms
stos
pop
sbb
enter
mov
push
pop
shrb
push
loope
cmp
lds
in
mov
and
mov
mov
push
mov
loop
push
lds
lcall
mov
test
ffree
imul
lods
add
nop
pop
xor
shlb
subb
test
nop
xor
out
imul
ret
sub
insl
ss
aas
add
xchg
nop
pop
add
lods
pop
out
int3
dec
das
jae
pop
push
xor
lahf
jns,pt
pushf
cmc
mov
mov
insb
lods
jle
test
mov
mov
or
fsub
pop
test
sar
or
jne
mov
mov
pushl
lea
jmp
mov
push
mov
bound
jo
and
jo
pop
mov
outsl
adc
sub
shrb
gs
pop
sbb
add
in
in
xchg
inc
inc
test
fldt
jg
push
sbb
imul
loope
mov
sti
pop
clc
jl
ss
sbbl
add
xchg
mov
cmp
inc
xor
icebp
dec
fistl
repz
fcoms
adc
push
or
dec
in
mov
jp
mov
insb
movsl
bound
mov
xchg
push
js
fcomi
cmp
lods
add
jno
loope
bnd
cwtl
inc
adc
in
fcoml
push
push
pushl
movsl
lds
xchg
faddl
or
adc
mov
xchg
add
scas
push
mov
in
rorl
fsubl
lods
pop
mov
mov
or
cmp
push
sbb
inc
fwait
push
rolb
xor
inc
adc
push
sub
inc
shl
push
dec
cmp
sbb
or
mov
into
ds
and
inc
fs
fidivs
icebp
push
mov
xor
jp
xchg
pop
test
pop
ja
cli
pushf
inc
dec
mov
or
ja
add
cli
push
pop
cwtl
dec
xchg
fidivs
mov
adc
scas
jg
fs
add
pop
mov
mov
mov
jl
jno
pop
inc
fildl
sahf
mov
inc
mov
int3
out
and
xlat
xorb
or
cmc
mov
in
outsl
push
insl
dec
loopne
mov
nop
xchg
daa
xorl
leave
sbb
add
sbb
and
push
and
and
ljmp
js
dec
out
jmp
cmp
loop
imul
cld
shlb
dec
jecxz
fisubrs
popa
mov
cmc
mov
inc
add
or
xchg
jecxz
cmp
movsb
xchg
stos
push
and
push
dec
in
into
add
sbb
cmpsb
dec
cmp
mov
mov
mov
xlat
into
mov
fstps
ja,pt
mov
js,pn
inc
pop
adc
xor
cld
jno
lea
cmpsl
ljmp
jae
into
xor
sbb
sub
sbb
ljmp
sbb
or
in
jl
mov
add
lds
leave
xchg
push
and
popa
loope
cld
or
xor
sarb
mov
and
int3
mov
xor
mov
lcall
cmc
hlt
jg
and
or
cmp
imul
sub
out
sbb
call
fwait
subl
pop
int
push
mov
sbb
xor
lret
sbb
or
sbb
out
pop
loope
arpl
outsl
and
sarl
xchg
jecxz
add
test
adc
ret
pop
mov
xor
aam
pushl
lea
jmp
add
out
out
xor
call
sarb
jo
jge
jo
je
xor
adc
mov
jg
imul
cli
sub
add
lock
dec
mov
es
jg
in
in
scas
lock
pop
jne
sub
jne
lock
mov
push
cmp
sti
pop
sbb
mov
xchg
xorb
pop
inc
es
insb
popf
out
cmp
cmpb
and
stc
lea
inc
add
outsb
popa
jnp
out
or
rcr
and
and
ret
movsl
push
push
fdivrp
jns
std
xor
imul
stc
push
xchg
sub
pop
xorl
addb
int
push
outsb
cmpsl
repz
mov
nop
pop
cs
pop
cli
xchg
js
jnp
jp
push
add
mov
nop
dec
dec
inc
loop
xor
je
inc
nop
mov
jo,pn
popf
sub
ljmp
jnp
movb
adcb
arpl
mov
dec
ja,pt
out
testb
sbb
mov
jl
stc
shrl
and
add
xchg
xor
inc
sub
cmpl
iret
std
cmpb
loopne
in
xor
mov
ljmp
mov
dec
dec
push
idivb
insl
push
aaa
hlt
cmc
and
shlb
xchg
pop
leave
mov
bnd
ret
mov
mov
les
mov
into
call
mov
sbb
push
add
orb
adc
push
lods
jne
pop
jg
dec
sub
jo
sbb
repz
xchg
jno
xlat
jmp
jl
pusha
icebp
fs
push
mov
ror
push
ljmp
and
movl
icebp
cmpsl
add
outsl
clc
fstps
sbb
dec
mov
push
xchg
adc
mov
jmp
lods
adc
xor
repz
ds
push
movsb
aaa
xchg
jno
out
fsubl
xchg
icebp
pandn
mov
add
mov
mov
test
loope
inc
mov
push
adc
dec
pop
out
fisttps
jmp
inc
jae
inc
mov
mov
ss
add
rcll
in
leave
loope
pop
pop
imul
cld
jp
mov
mov
nop
xchg
sub
out
shlb
pop
pop
cwtl
lods
roll
add
xchg
pop
stc
jb
jecxz
imul
pop
inc
ret
sub
in
std
xor
lret
jae
mov
sub
addl
int
sbb
adc
addr16
iret
push
add
cld
xchg
mov
sbb
push
das
pop
fwait
imull
jne
fstpl
or
and
in
jmp
adc
push
lods
adc
mov
mov
pause
dec
cmp
add
repnz
into
xchg
inc
sahf
dec
mov
rorl
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
jmp
cmpsb
jnp
or
lahf
jo
sbbb
daa
loop
jo
jge
jo
jp
cmp
roll
rorb
inc
mov
xchg
mov
jg
shlb
pop
push
sbbb
daa
outsb
lahf
add
fistl
xchg
mov
add
mov
xchg
insb
pop
or
adc
pop
sbb
add
sub
das
and
pusha
xchg
mov
stos
add
andb
in
aaa
pop
pop
fists
adc
test
iret
or
pop
inc
dec
add
inc
xor
adc
cs
sbb
ret
rcll
fiadds
jmp
test
xchg
dec
cs
addr16
xchg
xor
adc
inc
push
adcl
scas
and
xlat
jmp
sti
adc
jge
pushf
sbb
mov
mov
add
push
mov
out
out
cmp
gs
addl
in
idivb
lock
daa
ret
int3
or
lds
pop
push
dec
mov
dec
call
dec
hlt
adc
inc
mov
or
movsb
mov
int
out
xchg
inc
repnz
and
add
setbe
and
movsl
cld
bound
mov
jbe
outsb
xor
push
cwtl
mov
ljmp
add
push
xlat
shl
xchg
push
xor
aam
dec
jmp
and
inc
aaa
and
iret
or
adc
jbe
outsb
hlt
add
mov
mov
push
in
adc
repnz
test
add
lcall
dec
xchg
mov
push
in
pop
cld
into
sbb
sbb
aam
xchg
aad
adc
lcall
pop
jbe
mov
mov
shlb
test
ss
lds
push
dec
je
ja
pushf
add
pop
xchg
sbb
sub
xchg
pop
add
addr16
sub
fldcw
mov
mov
mov
sub
shll
cmp
nop
cmpsl
mov
inc
scas
jb
or
int3
mov
pop
xor
and
imull
mov
pop
dec
inc
ss
in
fdivp
nop
and
adc
inc
mov
imul
rorb
jg
cmp
pop
scas
cmpsb
je
xor
push
push
add
pop
jo
push
mov
or
dec
mov
fdivp
imul
cli
aad
or
mov
imul
mov
das
sbb
push
cmp
fstps
lea
imul
mov
mov
ror
push
mov
mov
push
and
mov
inc
enter
jl
inc
out
imulb
xorl
fldt
mov
mov
js
cmp
fistl
enter
xchg
mov
pop
scas
out
fwait
imul
sub
push
add
and
inc
add
dec
add
add
mov
ja
add
xchg
or
jo
jge
jo
sub
push
ljmp
push
shlb
in
or
dec
adc
adc
mov
xor
out
or
nop
popf
insb
or
out
cli
ds
ret
cmc
int3
sub
outsl
rol
adc
jecxz
xchg
lds
lcall
cmpsl
test
inc
ss
test
inc
popa
iret
pop
aaa
rcrl
ret
mov
aas
movsb
fs
lret
insb
add
std
adc
add
icebp
jb
lret
sub
jmp
les
les
mov
or
data16
cli
out
mov
push
cmp
push
dec
add
in
mov
and
pop
jge
je
aas
cmpsb
lret
inc
stos
in
jbe
cmp
mov
test
jp
bound
add
pop
test
mov
jg
nop
ret
mul
or
push
sarl
call
pop
insb
sar
loop
cmc
xor
adc
mov
jp
add
mov
pop
cwtl
enter
mov
sbb
movsb
lds
jl
ror
mov
add
imul
sub
jp
mov
xlat
xor
mov
pushf
xchg
mov
pop
xor
dec
mov
push
cmp
xchg
dec
rolb
stos
pop
iret
sbb
xchg
cmp
sbb
mov
dec
repz
and
outsl
shl
sub
mov
ds
cmp
cmp
movsl
mov
mov
xchg
xchg
rcll
orl
decb
and
idivl
popf
sbb
dec
push
adc
mov
or
mov
repz
cmp
clc
mov
add
int3
mov
cltd
sahf
out
int
outsb
add
popf
push
cmpsb
pop
repnz
xlat
movaps
xor
jno
pop
or
icebp
cld
test
stc
and
mov
insl
ja
out
lahf
lcall
das
push
cltd
aam
dec
insl
repnz
aaa
jb
pusha
insl
hlt
fcompl
test
je
adc
aam
mov
xchg
push
add
cmpsl
push
push
pop
lea
out
cmp
or
pop
inc
dec
daa
push
out
aam
sbb
mov
xchg
leave
cmpsb
pop
and
cld
aas
ret
std
add
andb
loopne
cmpsl
imul
aad
mov
inc
dec
test
dec
mov
out
and
mov
sub
call
fwait
xchg
cmpsb
and
xor
or
cmp
sub
pop
lea
cmp
mov
clc
je
adcb
dec
in
setnp
and
jbe
jbe
cltd
sub
jecxz
shlb
cltd
ljmp
ret
lret
aad
sub
pop
fsts
sub
pop
jmp
xor
aam
lds
and
movsl
pop
roll
mov
cmp
pop
mov
jge
jg
aam
aam
or
pop
leave
ret
push
mov
sub
push
subl
mov
sbb
mov
mov
mov
sub
imul
mov
movl
neg
movl
mov
mov
or
mov
add
mov
adcl
mov
xor
xor
mov
sbb
mov
jmp
arpl
cmc
xchg
cmc
arpl
pop
das
testl
jge
jo
adc
pop
aas
ret
test
mov
ljmp
pop
mov
fdivl
fwait
inc
in
adc
cmp
push
mov
add
rorl
out
jb
ds
push
lret
pop
and
xchg
push
sbb
mov
pop
orb
loop
pop
push
pop
dec
and
pop
mov
add
xchg
cmp
or
loopne
movsb
or
xlat
out
and
hlt
fs
jne
xchg
loop
pop
outsb
out
xchg
xor
int
or
int
daa
idivb
leave
sbb
inc
or
mov
aad
in
push
jno
xchg
dec
jmp
sti
popa
sbbb
mov
js
test
xchg
sbb
cwtl
jmp
or
mov
cmpsb
daa
pusha
ss
hlt
mov
lret
mov
lds
addr16
pop
mov
nop
fucom
xor
pop
push
imull
or
stc
ffree
and
mov
cmp
fistpll
inc
dec
test
add
test
jns
cs
pop
sub
ror
jl
ret
adc
xorl
out
jae
sub
test
loope
movsl
mov
sub
mov
stos
push
popw
addr16
enter
lock
rorl
xor
and
sbb
neg
push
jne
sub
adc
out
mov
mov
mov
faddl
jbe
out
enter
cwtl
jne
xchg
jnp
pop
mov
clc
lahf
ljmp
mov
jbe
adc
pop
stos
addl
xchg
daa
enter
outsl
ljmp
iret
pop
neg
cmp
pop
data16
test
push
sahf
ljmp
rolb
imull
and
into
or
repnz
adc
and
rclb
aam
stos
mov
cli
inc
dec
xor
adc
ret
push
pop
adc
pop
call
pushf
push
mov
xlat
fs
jg
inc
or
out
dec
or
jo
mov
inc
daa
cmpsl
stc
es
xor
inc
in
es
test
cs
lret
je
imul
int3
xchg
dec
mov
popa
es
hlt
aam
fcomps
sar
jge
insb
dec
js
cmp
lods
movsl
negl
popf
push
sahf
xchg
popf
and
jns
cli
dec
sbb
cmp
lahf
jae
sub
and
inc
lret
shrb
icebp
out
testl
xchg
xchg
or
xchg
mov
scas
dec
sbb
movsl
sbb
into
enter
pushf
mov
movsb
dec
enter
adcb
dec
xchg
jecxz
outsb
xor
mov
jmp
mov
dec
lds
push
jge
sahf
insb
imul
loop
xchg
test
ds
lcall
mov
leave
inc
add
lea
sbb
jb
mov
out
pop
mov
mov
sti
mov
fs
inc
lock
out
cmp
fwait
or
cmp
mov
pop
mov
clc
sbb
in
pop
leave
cmp
js
lds
jnp
shl
ss
hlt
mov
bound
mov
adcb
adcb
mov
sbb
jmp
sub
outsb
andb
into
dec
stc
add
xor
mov
mov
and
xor
adc
add
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
adcl
jmp
xlat
mov
mull
mov
leave
shrl
call
jo
pop
or
ds
fidivl
lock
imul
clc
inc
push
add
gs
or
pop
pop
jmp
std
add
jmp
add
and
outsl
ja
jge
out
imul
pop
pop
repnz
pushf
fnstcw
xlat
mov
cs
out
xor
notb
jns
jb
comiss
and
ds
aad
movsb
inc
fldcw
xor
mov
xchg
push
insb
add
cmp
aad
out
jne
jne
cmp
dec
dec
mov
inc
xadd
sbb
fstpt
push
xor
aad
xor
lcall
adc
mov
popf
jp
aaa
arpl
or
stos
rol
mov
pop
fiaddl
in
ss
pushf
testb
cli
mov
movsl
fsubl
sbb
or
xchg
out
jle
pop
cli
mov
xor
ja
or
xchg
call
push
inc
rcrl
stos
mov
mov
mov
sbb
repz
loopne
xchg
or
iret
aas
in
bnd
or
push
mov
gs
ror
jne
mov
xor
fildl
pop
cmpsl
clc
inc
aas
std
iret
push
repnz
cmpsl
icebp
mov
mov
ret
and
xor
sbb
mull
cli
gs
xor
xchg
movsl
inc
sub
test
aas
and
pop
sbb
repnz
pop
ljmp
sbb
pusha
adc
in
xchg
lds
xchg
cwtl
pop
insl
call
add
inc
dec
stos
adc
outsl
inc
jbe
dec
and
cmp
inc
mov
mov
stc
adc
cmpsl
pop
jns
rcrb
pop
scas
xor
in
adc
push
cmp
cli
push
lcall
out
cmp
loopne
fnstenv
scas
xor
leave
lret
mov
jae
inc
out
gs
test
add
stc
shrl
jns
jg
into
ljmp
fwait
pop
sbb
mov
inc
pop
cmp
das
xchg
ds
mov
div
cmpsl
nop
pop
sarl
add
mov
push
call
jp
ffree
gs
hlt
cmp
movl
sbb
sbbl
mov
out
test
pop
fiadds
cmp
ljmp
ret
add
inc
into
shll
leave
push
xor
in
push
mov
pop
ds
mov
jnp
xchg
xchg
ss
dec
jbe
mov
cmp
std
xchg
dec
movsb
ret
out
sahf
lret
sbb
loop
loope
loope
inc
mov
in
dec
shrl
stos
test
mov
xlat
jnp
push
ds
jb
lods
icebp
jno
xchg
jbe
ficompl
push
fadds
xor
sub
inc
andl
xchg
mov
dec
inc
mov
mov
shl
xlat
aam
std
xor
sbb
cmpsb
pusha
cwtl
imul
lret
das
add
mov
sub
sbb
inc
loope
adc
pop
mov
lea
push
jp
and
jno
or
or
cli
push
out
addb
xor
test
mov
or
sbb
mov
rol
inc
cld
roll
fdivs
test
aam
test
inc
add
add
add
sldt
add
rorb
adc
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
add
movl
andl
jmp
into
iret
cmpsb
cmp
sbb
cmp
jo
jge
jo
gs
add
dec
xor
aam
pop
cmpb
add
xchg
aam
into
sti
mov
xchg
adc
and
mov
in
xchg
outsb
aaa
push
or
mov
xor
js
sub
cmpsb
ja
dec
data16
sbb
jl
and
stc
mov
in
mov
and
and
inc
mov
xchg
add
adc
es
add
push
aas
orl
cmp
sub
push
or
inc
jecxz
aas
cmpsb
add
xchg
jg
jne
push
pop
or
lds
xchg
loope
adc
mov
out
sub
incb
lcall
aaa
outsl
and
sub
add
mov
lods
jns
mov
mov
pop
and
in
fisttps
icebp
adc
push
push
xlat
test
cmp
out
imul
shrb
leave
dec
pop
ss
jl
sbb
inc
dec
push
dec
into
loop
lea
fwait
xchg
jae
loope
jecxz
dec
xchg
jno
daa
stc
clc
cmp
movsl
push
jb
pop
int3
add
data16
loop
xor
js
pop
hlt
imul
inc
xchg
mov
lret
imul
and
mov
dec
mov
leave
out
lret
ret
mov
and
mov
jae
rorb
cmp
loopne
xor
insl
ror
outsl
mov
jnp
xchg
mov
inc
orb
fdivp
adc
sub
xchg
hlt
jno
leave
icebp
and
lahf
ljmp
outsb
sub
or
xlat
sbb
fistpll
rcl
inc
or
pop
pushl
and
pop
push
add
ds
out
sahf
lods
aam
push
mov
cmp
inc
cmpsl
fs
mov
jne
inc
push
mov
sbb
mov
xor
add
int3
pop
pop
pusha
mov
lret
out
mov
jbe
aas
stos
xchg
mov
xchg
xor
cmpsl
enter
pop
fmuls
dec
fwait
iret
in
bound
mov
push
cltd
adc
xor
or
fwait
mov
adc
pop
or
adc
test
push
leave
cld
rorl
pop
insl
stos
mov
push
aam
or
pop
push
and
adc
jo
add
call
push
push
gs
imul
rcrl
addl
popf
ljmp
pop
push
icebp
cwtl
jno,pt
xchg
adc
ror
or
add
pop
mov
cwtl
jg
mov
pusha
ja
mov
iret
adc
outsb
sub
daa
lcall
cmc
inc
fidivs
mov
ja
sub
mov
and
jbe
xchg
lcall
rcr
jecxz
jmp
mov
nop
mov
jno
lahf
add
push
cltd
xor
imul
sub
jge
fldt
cmp
push
push
add
mov
ja
dec
scas
xchg
bound
push
fisttps
jno
pop
push
stc
mov
lret
aad
pop
arpl
fstpl
mov
enter
les
in
or
ljmp
fadds
fstl
ficoml
shrb
hlt
pop
mov
xchg
movl
movl
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
movl
adc
mov
xor
sub
mov
add
movl
cmp
movl
je
movl
push
movl
jmp
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xorl
sub
mov
add
mov
jmp
addr16
xchg
jno
ja
dec
in
std
gs
lahf
jge
jo
mov
push
cmp
lods
jecxz
mov
test
dec
insl
in
int
mov
push
mov
je
jl
aas
mov
xlat
test
das
in
push
sahf
dec
xlat
loopne
dec
xchg
jmp
or
sbb
pop
xchg
scas
ds
pop
and
aas
mov
dec
lods
call
es
shlb
mov
jnp
int
imul
lret
pop
test
movsl
sub
sbb
das
movsb
and
cwtl
mov
add
arpl
mov
outsb
fistpl
jmp
lock
mov
popa
loop
jmp
pop
jecxz
push
and
xor
pop
nop
cmp
inc
push
jno
imul
cli
inc
xchg
xlat
sbb
pop
and
and
dec
imul
xor
inc
push
push
into
int3
mov
xor
push
addr16
dec
mov
xchg
inc
lret
arpl
dec
mov
icebp
sub
mulb
aas
insb
int
sarb
jge
push
cwtl
icebp
cmp
pop
cltd
inc
aad
adcb
out
out
sbb
adcb
push
cmp
ja
das
jbe
add
sahf
arpl
mul
mov
je
out
sub
mov
ss
out
mov
and
and
fisttpl
cmp
sub
sbb
stc
loope,pn
in
push
adc
cmp
pushf
mov
xchg
sbb
mov
mov
xchg
inc
dec
pop
mov
and
in
mov
push
xchg
dec
dec
mov
jmp
lret
mov
mov
lods
std
mov
js
inc
loop
dec
and
test
cmp
mov
cmp
call
mov
push
movsl
adc
mov
and
cmc
lret
mov
jmp
xor
mov
and
popa
add
mov
xchg
xchg
xchg
push
and
dec
rorb
dec
push
adc
adc
js
in
cmpsb
add
cmp
xchg
xchg
cmpl
cli
xchg
rcll
cmpsl
in
xlat
fistps
call
mov
jnp
lcall
outsb
mov
ja
push
call
int
xor
cmc
pop
mov
cmpsl
cmpsl
rol
fldcw
xor
jmp
cltd
cli
inc
lret
clc
xor
and
sub
xchg
sahf
idivl
jl
xlat
mov
rcrl
pop
inc
add
aas
add
mov
test
popf
sbb
dec
aas
cmpsb
sub
inc
sbb
rcll
cmpsb
sahf
aaa
repz
add
ljmp
pop
mov
sti
frstor
adc
movsb
loope
adc
mov
pushf
hlt
pop
ljmp
addr16
imul
ds
dec
add
jnp
mov
sarl
pop
pop
pop
xchg
je
ret
xchg
cmovl
or
rcl
adc
or
inc
or
cli
test
adcl
stos
pop
popf
pop
jmp
inc
in
mov
mov
mov
pop
mov
sbb
rclb
sub
xchg
xchg
cmpsb
push
cld
dec
fcompl
or
sub
fistpll
mov
mov
scas
pop
xor
xorl
add
movl
cmp
movl
jb
mov
sbb
mov
xor
sub
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
pushl
call
mov
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
add
sbb
add
imul
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
jmp
xor
mov
mov
jae
jg
ja
dec
and
lahf
jge
jo
push
mov
xchg
jnp
leave
repz
cmp
lds
sahf
ja
setg
mov
pushf
mov
xchg
ljmp
mov
mov
cli
xor
inc
mov
pop
xchg
popf
cmp
lock
icebp
fstpt
pop
inc
xchg
fistl
xchg
es
fdivl
ljmp
jne
or
cmpsb
fisttpll
fistpl
push
xchg
push
inc
mov
jo
and
cmp
ss
pop
push
and
cmp
xchg
and
in
fsubl
push
aas
lods
or
fldcw
mov
movsl
std
repz
jb
cmp
mov
shl
mov
jle
ss
add
repz
js
add
push
insl
dec
cmpsl
es
add
in
jne
xchg
pusha
icebp
repz
sub
enter
inc
fcmovbe
cmp
mov
xchg
cmpb
push
cs
lds
jl
xor
sub
andl
adc
inc
repz
cmp
scas
lea
lds
mov
mov
or
loop
sti
mov
aaa
ret
rcll
aad
enter
mov
in
cmp
mov
cmp
dec
mov
pop
insl
dec
mov
jb
orl
inc
insl
loope
shl
adcb
mov
ficompl
pusha
add
inc
inc
ds
push
stos
std
or
fwait
scas
and
aam
jl
dec
shlb
pcmpgtb
mov
lret
in
mov
pop
or
bound
lahf
pop
rorl
sbb
jnp
jle
fdiv
fldt
test
jae
and
push
add
cmc
js
xchg
jmp
dec
or
push
into
add
sub
push
cmpl
adc
andl
jns
xorl
aaa
pushf
or
or
hlt
outsl
std
es
mov
pop
jno
lock
lock
je
outsl
jo
mov
add
movsl
xorl
jle
add
insl
mov
push
sbb
stos
jnp
sub
sti
mov
sub
and
mov
sbb
test
aad
mov
ss
xchg
inc
inc
cmp
aad
mov
pop
ja
data16
xor
sbb
leave
and
sub
cmp
dec
adc
sbb
add
sbb
xchg
xor
mov
adc
sbb
sbb
push
fidivrs
cmp
add
xor
into
pushf
push
test
arpl
and
stos
sti
outsb
stos
pop
xchg
movsl
sub
rorb
push
sahf
push
iret
push
add
mov
mov
add
push
cld
imul
mov
shrb
cmc
bound
pushf
inc
cld
inc
pop
ljmp
jnp
pop
mov
inc
sbb
int3
mov
faddl
idivb
addr16
pop
jo
ja
in
jge
jae
leave
pop
mov
sub
sbb
popf
movsl
lea
mov
push
lds
cmp
cs
sar
sub
inc
movsl
pop
or
mov
xchg
adc
inc
sbb
shr
mov
jne
sub
lret
aas
pop
mov
mov
jge
jo
jnp
mov
insb
lock
cld
outsb
negb
adc
jle
jle
adc
mov
sub
mov
loop
aas
mov
shll
call
out
bound
xlat
add
push
add
outsl
sub
add
mov
xchg
lods
or
pusha
iret
push
mov
sub
inc
ds
cmp
cmp
cmp
fcomps
sahf
loop
lret
sbb
sti
fstps
fldcw
xchg
and
nop
mov
mov
cwtl
mov
xor
mov
cmp
dec
sbb
xor
inc
cmpsl
add
sub
fsts
mov
jmp
es
push
ja
ret
es
jmp
xor
or
cltd
dec
add
rorb
dec
inc
xchg
mov
add
cwtl
out
or
adc
jmp
movsb
out
dec
pop
jns
mov
mov
fdiv
ret
pop
inc
nop
out
adc
mov
sub
popf
mov
sarb
movsb
push
aas
and
pop
repz
sub
test
fidivrl
pop
mov
jmp
lahf
outsl
sub
aam
and
sub
or
imulb
inc
dec
push
idivl
mov
xchg
inc
and
fcompl
pusha
dec
stos
dec
sarl
stos
pop
nop
fs
pop
cmp
hlt
cmp
lcall
sarb
cmp
lock
repz
subb
lcall
das
movsl
arpl
mov
mov
xor
push
pop
dec
test
sbb
pop
shll
call
repz
ljmp
or
xor
lahf
cmp
lahf
adc
dec
cmp
popf
push
jb
pop
or
ficoms
sbb
std
into
adc
lahf
push
out
and
movsl
stos
push
cvtps2pi
gs
mov
xchg
icebp
xchg
xor
sarb
and
sti
mov
pop
add
movsb
jno
arpl
test
aas
mov
mov
adc
loopne
and
jmp
xchg
loope
pushl
aaa
jecxz
jecxz
adc
or
lods
fistpll
fbld
aad
or
push
add
mov
in
adc
out
add
jno
sbb
movl
stc
jnp
add
dec
loope
outsl
sbb
sub
pusha
inc
add
arpl
xchg
mov
gs
mov
sub
aam
inc
pusha
cmp
sar
sub
adc
pop
dec
cmp
add
sbb
and
lods
int3
pop
pop
pop
push
xchg
in
test
andb
stos
cltd
sbb
repnz
dec
cmp
sahf
dec
jnp
xchg
cs
addr16
pop
rcll
mov
aam
out
add
dec
fisubl
mov
adc
push
fdivrl
pop
lahf
xchg
inc
xchg
push
call
pop
stos
sbb
adc
icebp
push
cmpsl
cmp
cmpb
sbb
cli
adc
push
xchg
xchg
sbb
and
ja
cmp
ret
out
out
mov
scas
xlat
mov
mov
sub
cmp
ja
mov
jmp
mov
jmp
cmp
mov
loope
loop
pop
test
gs
lahf
jge
jo
outsl
push
aas
sbb
popa
add
int3
mov
push
inc
push
ret
sbb
sarb
andl
inc
pushf
shll
jmp
mov
jge
test
shr
out
ds
insl
mov
jo
jmp
mov
insb
and
mov
sub
fstp
mov
cli
xor
js
sub
lahf
out
mov
inc
popf
mov
sbb
test
sub
fidivl
mov
xor
int3
cmp
sbb
inc
lahf
and
lds
adc
adc
push
fldcw
dec
clc
push
sub
inc
inc
xor
dec
ss
shlb
outsl
jae
fstps
iret
mov
xchg
stos
push
jo
xchg
dec
clc
inc
adc
in
mov
enter
or
xor
dec
jecxz
addl
add
xor
sub
jmp
jp
stos
nop
lock
loopne
call
add
ss
jnp
sub
sbb
ja
ljmp
popf
cmpsl
inc
inc
jp
add
out
pop
xchg
inc
sbb
adc
and
sbb
je
mov
in
jne
xchg
sbb
mov
call
xchg
cmp
mov
int
leave
cwtl
testl
fcmovnu
push
and
leave
sarl
pop
loopne
lods
popf
mov
sub
mov
push
dec
and
test
shl
cmp
xchg
adc
xor
hlt
clc
or
jnp
mov
and
shrl
mov
or
insb
cmp
cmp
leave
xlat
xor
ret
insb
mov
push
add
mov
inc
jns
push
mov
and
movsl
push
xor
lods
call
sub
dec
xchg
jae
aam
nop
into
notl
xchg
adc
xchg
shl
xchg
jno
sbb
mov
xor
lcall
mov
test
jne
add
or
inc
jl
sbb
add
xchg
xchg
pop
fiadds
mov
lahf
or
cld
add
xor
in
pop
dec
out
inc
adc
xor
xorb
lock
and
mov
insb
mov
jg
call
dec
mov
sahf
fidivl
and
push
repz
sbbl
cmp
pop
jl
xchg
pop
test
cli
cmpsb
je
cmp
mov
imulb
inc
sub
mov
dec
incl
fsubp
mov
cmpsl
pop
mov
das
iret
and
dec
add
xor
cmp
lock
lea
das
pusha
xchg
jp
loopne
lock
ficomps
and
dec
cmp
imul
and
add
xor
fwait
iret
dec
insb
rclb
mov
repz
int
adc
lret
decl
sbbl
pop
shll
fcmovu
mov
pop
xorb
mov
lods
cmp
lahf
lret
jae
jbe
sarl
push
in
test
bound
outsb
bound
jbe
fadds
movsb
std
sbb
pop
mov
aam
xchg
ds
lret
stos
cmc
mov
fadds
lret
rorb
mov
imul
or
sub
inc
imul
jns
jbe
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
xchg
fcomi
push
jb
mov
shlb
mov
lahf
jge
jo
xchg
sbb
fwait
pop
lods
xchg
push
daa
and
sarl
loop
cld
popf
cltd
jle
cmpsb
test
mov
push
es
hlt
sbb
xchg
adc
jmp
push
leave
bound
iret
mov
push
mov
call
pop
dec
jo
mov
mov
ss
or
and
mov
pushf
push
jecxz
xchg
push
inc
inc
sarb
bt
repz
add
mov
pop
ret
xchg
pop
or
les
fnstsw
scas
das
sub
mov
jg
inc
push
jne
inc
cmp
rcl
lret
popf
add
sub
hlt
mov
dec
push
dec
mov
ljmp
pop
les
and
sbb
mov
mov
inc
inc
mov
push
sbb
cmovo
in
out
lds
inc
inc
dec
jne
fisttpll
or
ret
test
push
xchg
lahf
clc
jmp
cmp
in
mov
inc
dec
inc
or
into
xor
aaa
dec
mov
cs
dec
mov
dec
cwtl
mov
jmp
insb
lret
lods
lods
push
and
xchg
pop
mov
mov
adc
or
adc
ss
xchg
sbb
push
xor
rorb
mov
test
das
push
lods
push
xlat
sbb
mov
adc
mov
insb
or
hlt
pop
mov
push
cmp
pop
loope
add
or
mov
ja
jl
push
or
test
js
dec
xor
inc
shr
cmp
leave
mov
in
es
inc
lock
outsb
cmc
lods
test
or
mov
mov
es
es
cmc
jmp
test
pop
push
ud2
push
xchg
out
dec
xor
lret
ffree
mov
pop
dec
or
sbb
clc
and
gs
cltd
dec
xchg
daa
and
xor
test
fs
fidivrs
shlb
xchg
aas
push
je
out
mov
ja
xor
sub
nop
shll
fistl
test
cli
insb
shll
sbbb
jno
adcl
xchg
add
sbb
das
jbe
jb
call
call
inc
or
push
repnz
jbe
and
jle
dec
out
or
xchg
pusha
pop
xchg
dec
lock
sub
xchg
pcmpgtw
cmpsl
jge
jle
fs
daa
mov
pop
push
test
out
or
inc
mov
pop
js
fstps
aas
repnz
or
insl
sbb
lods
dec
mov
jg
xor
fldenv
lea
adc
repnz
js
xor
mov
mov
iret
testb
jnp
cwtl
xchg
mov
fsubs
xchg
pop
or
push
stos
je
test
xchg
sbbb
jmp
mov
scas
std
cmp
and
movsb
lds
es
jae
mov
sbb
sub
jo
sbb
mov
sbb
xchg
xchg
inc
repnz
sbbb
in
or
mov
fisttpll
jb
mov
cmp
aad
adc
fstl
sub
fwait
in
jo
repz
push
mov
and
adc
rorl
pop
add
lahf
test
outsl
fldl2t
sbb
cmp
inc
sbb
popf
pop
arpl
fistpll
fimull
xchg
add
add
add
add
cld
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
jmp
xchg
dec
inc
inc
inc
push
xchg
dec
fdivs
adc
jo
lahf
jge
jo
mov
push
ljmp
icebp
xchg
imul
popa
add
push
xor
ja
dec
mov
mov
add
inc
cltd
orl
in
mov
sub
mov
mov
mov
or
icebp
scas
movsb
imul
enter
movsb
push
and
cmp
or
add
repnz
dec
and
inc
fsts
push
inc
test
push
daa
mov
inc
push
ret
and
push
sbb
loop
xchg
inc
cmpsl
movl
jnp
add
stos
fistpl
push
mov
xchg
or
cli
add
sbb
dec
push
daa
les
in
adc
xchg
adc
jne
pop
push
pushf
pop
sbb
test
loop
sti
out
push
inc
xchg
jns
push
add
mov
push
jns
or
ja
ret
sbbb
xchg
stos
in
pop
loop
mul
incb
push
in
mov
jbe
ss
fs
jl
roll
mov
int
and
inc
or
mov
dec
js
cli
lret
push
mov
in
jnp
mov
dec
lods
adc
pop
stos
xchg
push
sub
and
mov
in
sub
jp
adc
xor
cltd
lahf
pop
mov
cmp
ja
lret
in
mov
mov
push
xlat
fmull
scas
testl
outsl
cwtl
andl
xchg
loop
xchg
jae
push
cld
dec
mov
jge
mov
sub
fisttpll
xchg
push
leave
daa
mov
lret
jecxz
loope
lret
xchg
in
aas
out
les
pop
cmp
and
fbstp
sti
jmp
repnz
dec
push
push
hlt
xchg
add
xor
push
aas
pop
daa
sti
xchg
xlat
aad
add
fnstcw
les
cltd
cs
fwait
lahf
je
pop
dec
push
loop
out
lret
aaa
test
mov
fisubs
test
sub
push
sub
adc
push
inc
xor
pop
mov
aad
jnp
mov
cmp
add
test
addr16
pop
sti
std
divl
push
fdivrs
jae
or
mov
add
mov
push
movsl
pop
jmp
pop
mov
inc
std
cmp
add
js
outsb
in
jb
cltd
xchg
sbb
orl
and
test
xchg
imul
xor
xlat
loopne
outsl
adc
jp
fnstenv
nop
cltd
mull
dec
jge
jecxz
xchg
cmp
pusha
sbb
pop
dec
inc
movnti
and
cmp
sbb
push
out
data16
and
inc
jecxz
dec
aaa
testl
mov
xchg
inc
xchg
mov
mov
test
repz
mov
int
loop
nop
cmpb
imull
in
push
cmp
mov
push
mov
or
rcr
push
inc
aam
jmp
mov
in
jge
lea
stc
idivb
call
adc
inc
mov
mov
adc
adc
jne
push
cmpsb
int
jecxz
fsubrp
mov
dec
push
repz
addr16
pop
xor
fsts
xor
push
pop
mov
in
cmc
icebp
mov
sub
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
jmp
lcall
out
mov
jnp
mov
lahf
jge
jo
fwait
rcrb
mov
cmp
dec
jb
dec
mov
iret
hlt
push
dec
rorl
adc
lock
push
add
xor
inc
cld
add
in
pop
inc
fadd
ficoml
lcall
insl
xor
mov
sti
or
xor
scas
jl
incl
adc
pop
push
mov
int
push
inc
sub
push
mov
xor
xor
or
stos
ret
add
push
pop
repnz
jno
mov
mov
mov
out
out
cmp
fwait
push
jo
mov
mov
and
js
mov
inc
scas
dec
sbb
or
lea
ja
xchg
filds
js
add
ret
mov
movsb
ss
push
in
js
and
popf
movsl
jecxz
imul
in
arpl
pop
jmp
fs
sbb
das
bound
inc
ficomps
cwtl
outsb
or
in
and
mov
in
lret
insl
loope
sub
jno
jns
fisubrs
inc
clc
jae
sbb
pop
in
out
inc
sbb
mov
nop
movsl
adc
xchg
test
push
sbb
pop
sub
les
leave
outsb
je
push
jne
testb
imul
outsb
out
aad
ljmp
push
shll
mov
lock
movsl
outsl
mov
add
and
sbb
pop
je
scas
or
adc
addr16
ret
sbb
mov
sub
xor
xor
xor
mov
pop
int3
xchg
sahf
cmp
lcall
or
mov
insl
int3
test
loopne
pop
roll
jne
test
pop
dec
inc
cmp
ja
jnp
push
sbbb
adc
jecxz
cmp
mov
dec
jbe
pop
loop
inc
and
out
xor
cs
inc
push
jno
xlat
div
mov
jns
push
jns
sub
mov
je
pusha
cmp
das
pop
js
les
sbb
xor
cld
jb
daa
loope
rep
dec
lahf
pop
fs
popa
xorl
fistpll
sub
arpl
rcr
aad
xor
icebp
adc
ja
jne
nop
sub
mov
cmc
fwait
cmc
cmp
and
imul
cld
inc
out
mov
and
loopne
decl
mov
add
fwait
push
in
xchg
rcrb
filds
lret
xor
ljmp
jp
jle
stos
xacquire
push
xchg
push
testb
scas
test
inc
test
mov
dec
fnstsw
aad
hlt
rorb
sub
aad
and
jge
test
dec
pop
das
pop
xchg
clc
mov
xor
cli
repnz
mov
std
add
test
push
xor
std
pop
jne
aam
loopne
out
inc
fadd
addl
xchg
pop
add
cld
sub
jbe
out
mov
scas
lds
out
scas
and
xor
mov
jns
xor
inc
xor
outsl
js
xor
sahf
jge
and
outsb
push
ficoms
mov
xchg
stc
sbb
fimull
ret
adc
push
jecxz
aam
fwait
sbb
push
ss
cmp
sub
out
cmp
or
mov
sbb
jne
addr16
ss
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
xchg
dec
push
adc
push
xchg
dec
lock
pop
mov
xchg
mov
lahf
jge
jo
dec
mov
rorb
sbb
jae
das
lds
pop
inc
cmp
inc
stos
mov
das
insb
bound
out
sbb
popf
mov
mov
popf
data16
cmp
pop
push
pusha
mov
xchg
pop
nop
or
arpl
mov
add
xchg
outsl
mov
mov
or
lcall
lcall
lret
adcl
mov
xor
aaa
daa
stc
test
aam
jae
out
sahf
mov
mov
ret
jmp
movsl
inc
mov
inc
popa
push
outsl
loop
rorl
cmp
aam
xor
push
mov
int
xchg
hlt
jl
push
shl
inc
lret
mov
into
pop
lret
dec
mov
in
aad
fs
icebp
push
hlt
jnp
out
bound
xor
and
xchg
ret
jne
sbb
xchg
sub
sbb
xchg
mov
loopne
jmp
ficomps
xor
pusha
aam
lea
push
cs
sub
push
nop
sahf
mov
mov
pop
mov
insb
inc
std
mov
sbb
add
sbb
jmp
jl
out
faddp
inc
in
push
shll
and
aam
sbb
out
jle
add
mov
inc
out
cmp
or
mov
sbb
push
adc
popf
rol
movsl
scas
inc
dec
stc
scas
inc
fwait
inc
inc
and
adc
mov
adc
jno
loope
mov
jne
loop
or
inc
js
out
ljmp
insl
ljmp
ret
sub
int3
inc
std
add
cltd
js
and
adc
xor
xchg
inc
mov
scas
mov
mov
gs
in
xchg
repnz
int3
outsl
shr
inc
mov
jno
fistpll
int3
andl
rorl
popa
cmp
lcall
adc
cmpsb
enter
in
or
js
aaa
xor
pop
sar
pop
inc
xor
and
movsb
jb
dec
icebp
lods
jne
pop
shr
aas
aam
dec
insl
in
jmp
icebp
enter
pop
std
loope
inc
mov
repz
shl
mov
loope
les
push
js
lea
pop
daa
movsb
and
xchg
adc
lret
int3
negl
cld
neg
fucomip
movsl
pop
add
xchg
push
mov
jecxz
pop
sub
nop
lret
jns
cmp
mov
xchg
mov
inc
mov
inc
lods
dec
pop
and
divl
and
xchg
push
inc
test
or
cmpsl
fbld
mov
mov
repz
mov
mov
call
dec
jno
xchg
icebp
xor
mov
lahf
mov
es
stos
ja
cmpsb
push
xor
in
lds
push
testl
repz
mov
movsb
adc
stos
adc
push
cmp
mov
push
cmp
push
mov
fdivr
mov
and
sub
adc
shll
stos
repnz
lret
pop
fstpl
mov
rcrb
inc
mov
pop
div
lock
inc
mov
inc
test
out
out
call
cld
jmp
pop
add
enter
xchg
dec
pop
sub
inc
push
outsl
hlt
je
push
outsb
sbb
testl
loop
sbb
sbb
int
or
add
mov
mov
mov
mov
xor
jmp
sbb
pop
pop
pop
pop
sbb
adc
adcb
in
xchg
jo
lahf
jge
jo
jge
test
fmuls
xor
int
xchg
mov
cmpsl
and
cmp
out
jmp
mov
mov
lock
jae
xchg
test
sbb
add
int
loope
dec
mov
push
cmp
push
iret
out
leave
inc
and
mov
insb
clc
ljmp
out
adc
loop
imul
fstpt
jg
sbb
xor
cmpsb
mov
sahf
and
mov
push
xlat
pop
call
mov
mov
dec
decl
adc
loopne
clc
les
mov
outsb
ret
aas
addr16
dec
inc
pop
lea
pop
push
jle
mov
cltd
pop
and
jp,pt
mov
jp
les
repnz
mov
lock
mov
xor
fistpll
mov
push
add
dec
jae
sbb
rol
or
pop
adc
mov
ljmp
mov
and
cmp
add
nop
push
cld
popf
lock
inc
cltd
es
lock
fs
inc
bound
in
jp
cwtl
xor
test
sub
cltd
pop
popa
xor
xchg
mov
mov
rcll
xchg
in
sti
pop
inc
mov
in
xchg
push
push
ds
sub
insb
sbb
pushf
insl
xchg
xor
das
add
arpl
pop
int
xchg
push
add
repz
into
add
rol
jle
je
jmp
inc
in
mov
xor
pop
hlt
mov
or
stos
pop
sbb
arpl
imul
imul
roll
sub
mov
pushf
push
lea
hlt
pop
rol
imul
sbb
or
jno
cmpsb
fcoms
cmp
xchg
out
in
push
test
repz
icebp
jb
ret
inc
das
mov
es
push
and
sbb
clc
addr16
cmp
sub
data16
shll
mov
jb
in
aad
fdivl
add
adc
add
push
repz
mov
pusha
adc
or
loope
mov
push
test
lods
mov
and
jmp
and
pop
mov
fcmovnbe
inc
cmpsb
das
cmp
and
pop
sbb
fdivrl
cmp
mov
cltd
sti
adc
or
popl
xor
push
leave
mov
pop
scas
cmpsl
scas
mov
jae
loope
testb
mov
mov
sub
insb
sbb
shrb
lret
and
insl
icebp
sbb
add
in
mov
xchg
and
mov
or
inc
jl
fucom
leave
negb
sbb
lock
subb
pop
cmpsb
push
add
and
or
mov
push
dec
pop
es
push
cmp
repnz
ret
scas
and
into
xor
sub
dec
cmpsb
out
mov
dec
pusha
jl
adc
insb
int
popf
rorl
xchg
or
pshufw
xor
pop
and
mov
icebp
es
les
inc
mov
test
lock
pop
fistpll
jo
imul
add
sub
in
jg
adc
in
ret
gs
mov
call
clc
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jmp
mov
popa
jbe
xchg
orl
jo
lahf
jge
jo
or
test
repz
repz
test
sarb
mov
or
sub
mov
sti
ljmp
es
call
in
lea
push
pop
cli
mov
fdivl
push
and
mov
mov
mov
iret
dec
inc
mov
enter
and
mov
icebp
and
andl
icebp
jbe
test
adc
sub
adc
fdiv
adc
push
or
sbb
shlb
push
jbe
push
andl
mov
arpl
mov
adc
dec
xlat
stos
faddl
cltd
dec
push
cmp
push
xchg
push
int3
pop
lcall
loopne
orl
mov
out
data16
out
pop
roll
cmp
lea
jmp
jns
stos
ror
addr16
adc
mov
int3
xchg
adc
push
xlat
and
pop
push
fwait
jg
aad
lds
and
or
push
xor
stos
dec
sub
adc
sbb
jo
loopne
inc
push
or
mov
outsl
loopne
cmpsb
push
repz
and
jge
xor
test
jns
or
mov
cmc
movsb
adc
pop
mov
jecxz
jmp
xchg
stos
cmpsl
pop
pop
arpl
mov
loope
lahf
inc
out
pop
dec
jne
cmp
iret
leave
pop
and
sbb
fcmovnbe
push
sub
cmpsl
jbe
push
cld
sub
add
mov
popf
out
clc
cmpsl
std
jb
nop
fisubrl
jno
inc
jl
negb
jne
push
lret
push
and
jne
shlw
push
push
push
enter
pop
inc
scas
in
inc
sbb
dec
and
sbb
pop
lds
dec
push
idivl
push
jno
push
mov
add
xor
xor
out
push
fwait
lret
loop
ljmp
xchg
add
jb
subl
add
insb
jae
mov
adc
bound
test
outsb
xchg
test
fcoml
mov
pop
adc
ja
mov
cmpsb
stc
in
arpl
loopne
add
jle
xchg
icebp
inc
rolb
insb
lea
aad
and
sub
adc
cltd
es
js
aam
or
scas
aaa
hlt
jbe
loope
sbb
xchg
ljmp
add
sahf
pop
insb
cmp
ss
mov
jno
sub
cmp
fs
inc
divb
add
lret
out
inc
xchg
repnz
jmp
jg
lret
push
push
sti
stc
dec
add
fisubs
jmp
sub
in
push
mov
cs
or
filds
cwtl
mov
out
pop
arpl
adc
or
addr16
iret
inc
sbb
push
jbe
inc
mov
ja
pop
xchg
xor
xor
outsb
addl
cmp
fs
aaa
xor
mov
mov
jns
cli
lods
mov
addr16
test
call
fnstenv
mov
add
push
out
adc
xlat
xchg
pop
int3
or
icebp
dec
aas
mov
jbe
mov
mov
xor
add
imul
mov
xor
add
jmp
xor
out
icebp
xor
cmp
lods
les
repz
stos
popf
jo
lahf
jge
jo
add
sub
mov
shlb
jo
aaa
mov
clc
push
jne
out
jmp
stc
xchg
in
fldt
pop
nop
ja
enter
inc
jo
cltd
adc
jecxz
fstpl
xchg
sub
add
mov
scas
and
sarb
jae
dec
int3
pop
sarl
push
outsb
pop
sub
add
and
inc
push
mov
lds
test
xchg
mov
ret
push
inc
and
inc
dec
add
sbb
sahf
dec
mov
sbb
das
jp
hlt
or
mov
sub
inc
sub
push
add
test
dec
sar
sub
or
dec
fcompl
daa
xor
xlat
sub
sti
xor
loop
test
inc
mov
mov
jo
ss
jmp
jg
mov
jmp
sti
out
es
xor
xchg
out
xchg
ss
cltd
out
es
insl
pusha
pop
push
adc
or
add
pop
sub
insb
fimuls
mov
repnz
xor
in
dec
sahf
xchg
stc
jo
push
movsl
mov
or
pop
push
push
outsb
jl
mov
push
inc
ret
notl
scas
fwait
std
mov
inc
jnp
mov
jb
inc
jge
sub
repz
lcall
adc
leave
jmp
cmp
jge
pop
push
mov
ret
xchg
fdivl
scas
loope
cli
in
movsb
push
fwait
xor
pop
lock
dec
inc
jbe
clc
insb
jl
imul
call
inc
jg
inc
xchg
push
aas
jae
leave
mov
fistpl
mov
ja
lret
das
pop
adc
xor
icebp
mov
mov
cmpsb
jnp
loopne
add
loop
mov
sub
sub
imul
lea
pop
into
cmpsl
push
fidivl
jb
hlt
sub
cwtl
or
mov
pop
xor
inc
or
or
test
jge
stc
fstpl
jl
ret
in
cmp
cmp
sub
out
sub
movsl
cmp
xlat
aam
pushf
adc
pusha
mov
out
xor
in
cwtl
xchg
inc
pop
sbb
sbb
into
loope
mov
xor
add
mov
notb
jle
or
or
xchg
je
mov
gs
xchg
data16
xchg
test
mov
stos
imul
orb
sbb
sbb
xor
jae
ret
push
sub
mov
aam
jp
xchg
js
fisttps
clc
dec
dec
mov
adc
call
imul
adc
adc
jnp
lock
add
aam
in
jne
mov
scas
jmp
pop
mov
pop
mov
sbb
cli
ja
leave
xor
outsb
shll
xor
cli
scas
ss
sub
pusha
cmp
insb
mov
xor
sub
pop
enter
or
lret
lret
or
xchg
push
lock
adc
sbb
sub
fnstsw
jns
in
testb
mov
and
jnp
xchg
mov
stc
mov
pop
std
pop
mov
pop
repz
fst
cltd
or
stos
push
sub
xchg
push
mov
jge
lea
mov
mov
xor
mov
sub
jmp
out
inc
push
jno
ljmp
mov
jo
lahf
jge
jo
mov
fstps
jp
jne
mov
andl
add
sti
icebp
cld
imul
xchg
pop
sub
daa
mov
push
xchg
jmp
mov
jmp
or
xchg
out
jnp
xchg
test
add
les
jne
jno
imul
push
repz
imul
jne
sahf
test
jle
pop
enter
dec
mov
mov
popf
mov
add
jp
loope
cwtl
leave
sarb
pop
mov
out
push
inc
xchg
inc
out
lock
adc
mov
je
xor
sub
xchg
and
shlb
mov
cli
cmp
push
jne
lods
clc
mov
addr16
shll
mov
sarb
cmp
jle
test
cmp
jl
sar
popf
into
mov
mov
std
jg
sub
mov
lods
push
xchg
mov
icebp
lahf
adc
into
inc
sbb
aaa
mov
aad
push
mov
push
jnp
dec
sub
pop
enter
and
jl
and
adc
sub
pushf
int
out
xchg
pop
xchg
xchg
push
adc
test
jecxz
stos
sbb
mov
sahf
inc
lahf
sahf
fists
mov
ss
je
mov
mov
dec
std
add
mov
sub
add
adc
out
and
sbb
dec
ret
lock
push
dec
cmpsb
imul
add
cmp
je
in
or
push
leave
lea
push
xor
add
aas
daa
addr16
sub
sahf
lret
sbb
aad
add
dec
and
sbbb
ss
mov
or
repz
push
cmpsb
fwait
popf
scas
fucom
mov
decl
push
lahf
push
scas
mov
and
repz
scas
and
loop
cmc
pop
popa
pop
leave
push
inc
sub
push
mov
xchg
jmp
inc
inc
sbbb
mov
popa
test
and
push
pop
or
bound
add
xchg
orb
cmp
cmp
iret
push
testl
push
sbbl
cmp
gs
pop
cmp
mov
nop
cli
push
mov
jl
shrb
or
push
add
test
rcrl
push
cwtl
sahf
popa
xor
pop
jbe
daa
or
and
jns
dec
push
push
push
scas
adc
fnsave
lds
push
xchg
int
out
cmpsb
rcr
sub
std
outsl
clc
popf
sub
loopne
stos
jmp
mov
sbb
cmc
test
mov
bound
xchg
cs
test
xchg
add
mov
push
mov
cltd
and
push
inc
popf
mov
mov
sbb
jbe
pop
scas
mov
pop
jnp
dec
fisubl
push
loop
stos
sub
mov
dec
inc
cmp
hlt
mov
call
lahf
jno
addl
jno
dec
jne
scas
mov
repnz
sar
pop
daa
out
mov
popf
das
or
mov
data16
cltd
push
ja
cmp
mov
loope
push
jecxz
cmp
mov
push
and
mov
sbb
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
orl
push
sbbl
call
andl
test
jne
xor
movl
jmp
adcl
push
call
sbbl
test
movl
je
call
cltd
movl
cmp
jne
movl
cmp
jne
push
push
adcl
push
push
push
push
push
xorl
push
orl
call
movl
jmp
push
call
test
je
sbbl
push
andl
call
movl
jmp
push
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
movl
lea
adc
mov
adcl
lea
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
add
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
or
mov
or
mov
mov
push
mov
subl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
jmp
mov
add
mov
mov
mov
movl
cmp
mov
movl
je
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
xor
andl
add
imul
mov
movl
jmp
sbb
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
or
xor
sub
add
mov
mov
mov
xor
add
movl
cmp
jne
subl
pushl
andl
pushl
adcl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
adc
mov
mov
xorl
push
push
mov
xor
not
push
mov
add
sbb
jmp
sub
gs
mov
fstps
cmpl
daa
inc
adc
lahf
movsb
or
cmp
jg
ret
mov
or
fst
fwait
iret
fwait
clc
aad
push
cmp
cmp
je
or
dec
push
cmpsl
data16
jle
add
gs
inc
mov
mov
imul
aad
add
xor
pop
call
loopne
xchg
mov
jno
xor
out
cld
adc
insb
mov
and
dec
loop
adc
repz
adc
mov
sub
pop
xor
xchg
add
stos
out
pop
xchg
xor
call
xor
or
int
outsb
test
fwait
daa
jmp
out
sbb
orb
inc
js
insl
mov
test
dec
xor
or
sub
mov
push
fildl
mov
push
sub
sub
and
cmpsl
sbb
scas
jmp
jge
pop
sub
pop
adc
movsb
cmp
add
pop
mov
dec
push
cmpl
aad
or
popa
ja
sarl
dec
adc
std
aam
cmpsb
push
mov
mov
adc
pop
mov
aad
or
push
mov
cmp
inc
sub
ret
xchg
testb
mov
lea
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
imul
mov
sub
mov
and
mov
sbb
xor
add
mov
jmp
icebp
ja
pop
inc
scas
icebp
jno
push
inc
movsl
xor
out
cmp
jo
fistps
lods
xor
iret
dec
ja
push
sub
add
sub
iret
inc
mov
cmp
pop
mov
movl
push
cmc
fbstp
and
in
shlb
adc
test
add
shlb
add
inc
test
jl
aas
enter
jle
frstor
test
leave
fsubrp
jb
mov
das
outsb
pop
movsl
sbb
and
aaa
jmp
push
les
mov
push
je
or
shll
je
xchg
mov
sbbb
cs
add
out
lcall
xor
or
rclb
addl
push
scas
pop
mov
mov
shlb
ret
mov
push
div
movsl
lea
cmp
outsl
js
push
mov
sti
in
xchg
cltd
lret
sbb
cmp
pusha
sti
scas
cmp
out
pop
pop
iret
testl
add
insl
cmp
shll
and
adc
push
jmp
dec
stc
xor
cmc
xchg
fs
push
jnp
test
outsl
into
pusha
mov
subl
jns
dec
dec
push
cli
in
pop
fstpl
xor
stos
loope
lea
cwtl
movsl
or
inc
call
and
lea
mov
jmp
rorl
sbb
mov
mov
jo
daa
xchg
mov
push
sub
mov
out
ret
mov
pusha
ret
cmp
arpl
insl
shrl
sub
xchg
rcll
lahf
inc
jne
stos
mov
fld
aaa
movsl
fs
pop
out
movsl
sub
add
ss
or
mul
pop
mov
jle
sar
insb
mov
scas
lahf
hlt
cmc
scas
push
sub
lea
mov
mov
mov
das
push
je
cmpl
xor
int
enter
shll
shl
stos
mov
mov
sbb
out
movsb
out
mov
inc
daa
movsl
sub
mov
out
sarb
lcall
mov
mov
xor
xor
dec
xchg
pop
push
lret
in
cmpl
fsubs
je
test
mov
cmp
insb
aad
shrb
icebp
mov
imul
dec
iret
dec
out
jle
fsubs
push
adc
pop
xchg
and
stos
mov
xlat
push
mov
dec
shrl
cmp
push
ror
mov
aad
pop
push
sbb
mov
rclb
filds
orl
out
xchg
and
ja
push
movsl
pop
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
neg
mov
add
xor
add
sub
mov
mov
adc
mov
mov
adcl
jmp
cmp
in
fcomi
jecxz
icebp
xor
iret
cmpsb
ja
push
jnp
mov
jo
xor
daa
in
mov
push
es
or
adc
fidivl
inc
add
cs
push
cmp
rolb
or
icebp
cld
adc
out
xchg
imul
sub
scas
push
jns
or
lcall
ret
int3
cli
xor
lret
cmp
popf
in
fisubrs
sbb
les
inc
jae
push
or
inc
lods
das
lods
call
test
mov
jmp
and
lock
cmp
fs
jae
dec
leave
loop
push
out
xor
jp
cmp
xor
movsb
ret
fldt
cmpsl
xor
lods
push
dec
test
fnstsw
setno
push
bound
push
test
pop
negb
jns
mov
loop
push
push
cmpsl
cmpsl
push
pop
mov
ret
dec
cmp
sbb
pop
hlt
test
inc
mov
and
aad
std
cld
push
mov
xchg
data16
out
push
xchg
sahf
imul
or
mov
cli
cld
add
pop
dec
and
fwait
cmp
sub
lds
repnz
jmp
jmp
mov
adcl
mov
xorl
movzwl
add
neg
movl
sbb
mov
mov
sbb
mov
xorl
xor
andl
add
cmp
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movzbl
adc
mov
xorl
mov
andl
xor
notl
add
movl
cmp
movl
jmp
fistpl
shlb
frstpm(287
push
mov
ret
jg
jo
or
mov
pusha
mov
xchg
xor
or
sbb
stos
inc
js
into
ret
mov
jge
es
pop
push
and
cli
mov
fistpl
pushf
jnp
stc
xor
fistpll
popa
xor
add
loopne
pop
adc
mov
js
je
inc
mov
leave
out
pop
xlat
stos
daa
mov
cltd
fst
pushf
gs
push
and
loop
or
bound
push
subb
sbb
mov
jo
pop
cmc
movsb
jne
mov
adc
jb
and
or
or
or
iret
inc
or
and
orb
cmp
outsl
sbb
push
lret
cwtl
loop
sub
lret
dec
popa
ss
cmp
push
inc
adc
push
mov
sbb
lcall
iret
shlb
pop
cltd
dec
mov
nop
pop
nop
push
cmp
push
lds
sarb
xor
xor
shrl
cmp
adc
outsb
sbb
addr16
push
jb
cmp
jmp
xor
push
cmp
sbb
jne
orb
xor
testb
mov
stos
rclb
je
cmpb
js
out
add
mov
pop
iret
xor
add
add
mov
sbb
mov
adc
xor
add
mov
sbb
mov
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
jmp
or
shrb
mov
inc
pop
mov
xchg
inc
jb
scas
jo
ret
jg
jo
push
inc
jecxz
jmp
test
lahf
icebp
jne
sbb
xorl
mov
jmp
jge
dec
and
and
repz
sub
outsb
aas
sub
push
push
pop
dec
cs
in
jb
lahf
mov
adc
ficompl
popf
mov
in
mov
xchg
out
scas
mov
enter
push
lods
jne
fwait
lods
add
pop
xor
mov
stos
stc
lahf
cltd
lcall
rol
xchg
loopne
sahf
push
xchg
movsl
fnstcw
mov
jb
push
enterw
pop
mull
mov
xor
push
ss
xchg
imul
mov
repnz
push
popf
std
mov
adc
and
cwtl
xor
xchg
adc
and
stc
rorl
xchg
fbld
push
cld
mov
jb
lret
dec
pop
test
aam
push
in
dec
pop
or
gs
mov
test
scas
and
fwait
movsb
mov
pop
popl
and
mov
xchg
mov
xor
fnsave
roll
pop
sbb
dec
cmc
popa
adc
mov
movzwl
jmp
movntps
push
rep
mov
push
jle
pop
adc
mov
jg
jo
dec
push
das
sbb
jmp
fiaddl
js
shl
push
test
test
leave
xchg
sub
aam
pushf
cmp
jp
mov
ret
xor
jo
jge
data16
psubw
daa
scas
icebp
mov
popf
cmp
xor
xor
mov
dec
jnp
pop
es
inc
mov
pushf
mov
loope
rolb
cmc
scas
adc
clc
dec
testb
dec
iret
or
popa
fdivrp
icebp
ljmp
shll
xchg
pushf
ret
add
pop
inc
daa
and
loopne
mov
push
popa
mov
arpl
lds
and
xchg
or
mov
int3
add
mov
mov
jno
mov
mov
sub
push
imul
adc
sub
rcrl
adc
cmp
hlt
rcrb
nop
out
test
or
pop
mov
fwait
sub
test
jne
imul
outsb
jl
das
addr16
shl
cmp
mov
push
jmp
push
iret
mov
mov
pop
add
cmp
outsl
push
and
sar
mov
push
gs
stc
popa
jg
xor
sub
sub
mov
jmp
jmp
int3
push
icebp
xchg
icebp
je
in
pop
mov
xchg
repz
lods
jo
ret
jg
jo
stc
mov
push
sub
mov
jl
ds
outsl
xor
lret
rorb
frstor
push
cmp
mov
adc
std
ja
test
jns
in
les
into
sub
les
pop
js
mov
fdivs
popa
and
xlat
mov
dec
mov
loop
or
das
sqrtps
iret
cwtl
addr16
sbb
and
pop
out
jl
rol
or
mov
mov
mov
aaa
xchg
dec
mov
or
pop
xor
cmp
cmp
push
nop
and
ss
call
xor
out
pusha
dec
or
lods
lret
outsb
fs
dec
add
iret
xor
mov
add
push
in
push
fistpl
push
jnp
dec
dec
idivb
adc
or
mov
and
mov
mov
popf
xchg
ret
jno
fwait
outsl
mov
sub
sbb
mov
cmpb
jb
add
pusha
pop
mov
lcall
push
iret
cmpsl
subb
movsb
add
rcll
mov
stos
test
xor
lea
mov
mov
cmp
jmp
mov
enter
lea
leave
inc
inc
cld
and
jo
ret
jg
jo
inc
xchg
iret
mov
ficomps
cmp
and
inc
aad
aad
adc
subb
mov
into
jae
dec
icebp
push
jg
xor
cltd
and
arpl
xchg
mov
push
push
pop
ja
xchg
xchg
lods
pop
imul
bound
push
cmc
xor
idivb
loope
mov
aam
xchg
xchg
and
outsl
scas
xchg
push
andl
insl
cs
cwtl
xor
xor
fisubrl
push
xchg
add
jge
add
aaa
pop
std
ret
movsl
ljmp
and
or
bnd
xchg
push
dec
addr16
and
mov
ret
imulb
mov
enter
nop
rol
and
cmp
fiaddl
push
inc
mov
adc
fsubrs
sub
lock
cmp
mov
jmp
pusha
dec
mov
jp
xchg
lret
sub
in
dec
in
ljmp
sub
jp
shlb
les
jle
hlt
cmp
push
or
cmpsb
lcall
xchg
mov
fidivl
rcl
add
lahf
popa
mov
inc
sub
inc
popf
cmp
les
inc
mov
sub
enter
test
add
mov
jmp
lods
ret
jno
insl
popa
fdivrs
xchg
test
sbb
ret
jg
jo
popa
mov
ficoms
dec
insl
sbb
shll
imul
ss
outsb
xor
sete
mov
insl
adc
jl
xchg
test
aad
add
adc
push
test
dec
je
cmp
shr
jne
pop
sub
push
loope
pop
jp
mov
dec
adc
pop
loop,pt
xorl
and
es
adc
nop
data16
push
ror
outsb
loop
roll
cwtl
add
jo
aaa
pop
xchg
fcmovb
and
add
jg
pop
add
es
cmp
repz
stos
sahf
ret
xchg
push
sub
fldt
and
out
mov
jg
pop
mov
inc
jae
imul
and
dec
popa
xchg
mov
inc
mov
sbbb
pop
in
sub
pop
xchg
and
push
mov
push
sub
add
adc
je
mov
xchg
mov
mov
sbb
movsb
adc
or
loopne
fists
jecxz
mov
mov
cltd
mov
lret
xchg
pop
fcoml
cmpsl
pop
cmp
lea
push
leave
mov
mov
push
movl
jmp
mov
mov
xor
add
cmp
je
mov
jmp
dec
int3
cmp
mov
add
shl
fsubr
ss
jo
ret
jg
jo
fcmove
data16
iret
js
cmp
dec
adc
sbb
test
jl
mov
fistpl
sbb
stos
pop
mov
test
iret
test
jnp
jle
cmp
cs
push
fstps
repnz
sbb
iret
in
pop
mov
lods
out
in
fsubrp
pop
dec
sbb
outsb
sahf
daa
sbb
mov
push
pusha
push
movsl
jno
lret
iret
jae
stc
xchg
hlt
and
push
cmc
std
mov
fwait
dec
sti
aas
shrl
cltd
dec
popf
test
jnp
aad
push
lahf
push
je
loop
enter
inc
pop
cmp
mov
mov
jp
inc
jecxz
push
sbb
addl
mov
mov
and
push
pop
sub
in
xor
cmp
jecxz
divb
insb
mov
dec
add
pop
in
cmpsb
push
incl
push
rclb
je
std
push
jb
inc
jb
out
inc
aas
imul
xchg
ja
cld
mov
in
repz
imul
xchg
jb
sub
lret
test
inc
add
into
sbb
mov
subl
pop
testl
sub
sbb
push
aaa
or
movl
hlt
cmp
mov
add
add
ror
icebp
imul
popa
icebp
inc
sarl
jo
ret
jg
jo
sbb
fcmovu
jb
sub
dec
jb
iret
aas
cmpsb
fisttpll
andl
cld
aaa
addr16
int3
stos
mov
adc
imul
je
movsb
sbb
dec
sarb
pushf
dec
popf
add
int
sti
or
pop
sbb
pop
xor
jbe
out
aaa
dec
pushf
int3
popa
inc
add
jae
je
clc
test
push
pushl
pop
add
pop
lock
xlat
orb
lahf
mov
lret
in
or
js
pop
push
call
mov
mov
ficomps
xchg
and
rorl
pushf
mov
mov
shlb
jg
mov
cmpsl
test
sub
sub
xchg
std
xchg
daa
sbb
jno
adc
jge
add
mov
mov
add
jb
push
xchg
aas
arpl
lahf
rcrl
mov
daa
popa
das
and
pop
or
adc
sub
sub
xchg
push
mov
sbb
and
inc
add
jmp
jmp
fnstcw
out
ds
jne
pop
daa
repnz
inc
js
push
cmp
jno
cmp
lods
popf
mov
in
push
cli
inc
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
jmp
pop
out
dec
mov
mov
testb
dec
call
mov
jo
jg
jo
cwtl
xor
inc
inc
scas
xchg
xchg
popa
cmp
insl
pop
push
sub
jne
test
cmp
aaa
loopne
shlb
push
lods
das
inc
jp
jecxz
sbb
xor
test
sub
jg
pop
dec
adc
int3
push
mov
mov
cld
pop
and
add
in
fsts
ret
fsubrp
jnp
hlt
outsb
pop
outsb
add
xchg
inc
mov
inc
inc
xchg
xor
out
pop
nop
pop
pop
mov
test
out
sbb
lret
aas
sub
push
shlb
push
jecxz
loope
fmull
filds
sbb
pop
mov
mov
xchg
mov
in
xor
inc
jae
ret
addr16
ret
push
xchg
push
cmp
cmp
pop
fs
push
sahf
in
iret
cmp
xor
pop
push
or
add
lahf
movsb
mov
push
mov
adc
es
push
fxch
push
and
dec
mov
es
dec
out
in
filds
add
jecxz
inc
cli
imul
lahf
sub
xlat
scas
xchg
js
data16
mov
in
mov
jp
daa
and
daa
cmp
cmp
inc
inc
es
imul
push
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
ds
adc
dec
xor
flds
mov
rclb
call
cld
into
jp
inc
cld
shll
mov
imul
xor
mov
cmp
add
and
xchg
xor
or
lods
sbb
inc
lret
cmpb
test
mov
outsl
jno
lcall
js
scas
dec
sub
xor
sbb
adc
mov
fnstsw
sti
xor
push
into
sub
lock
leave
sbb
cmp
ljmp
inc
xchg
andb
and
out
push
jnp
jle
rcrb
test
mov
subl
negb
xor
sbb
mov
lahf
and
les
mov
in
xchg
cmpsb
cmova
cmp
jns
adc
pop
movsl
cmp
out
xor
sub
inc
shlb
sub
loop
or
fstps
add
mov
jle
scas
mov
mov
mov
and
fcmovne
adc
xor
mov
pop
pinsrw
es
out
test
inc
dec
add
mov
push
popa
sub
rorl
inc
test
cld
push
inc
pop
mov
movsb
popa
out
fwait
or
push
push
pop
jl
push
push
repnz
cmpsb
stc
and
pop
jl
cmp
sbb
popf
jle
addr16
mov
in
push
std
pop
out
and
scas
jl
or
jle
out
outsb
inc
fcoml
dec
jp
pop
inc
mov
out
xor
mov
cmp
insl
fnsave
mov
mov
mov
popf
int
popf
mov
inc
pushf
jmp
test
imul
dec
push
test
xor
cmc
leave
lods
shr
pop
pop
xchg
jae
mov
pop
addr16
daa
sbb
idiv
fcmovnbe
xor
divl
movsb
lcall
fidivs
jg
fildll
inc
ret
js
test
xchg
mov
mov
jae
push
dec
insl
mov
sub
xchg
push
loop
test
jg
mov
and
test
ss
mov
test
pop
fimull
shlb
pop
add
mov
test
xchg
dec
pop
sub
lret
mov
jmp
pushf
xor
loope
in
inc
mov
ficoms
les
mov
xchg
xor
xor
xchg
mov
adcb
pop
push
outsl
loopne
cmp
ret
inc
lahf
push
sarb
push
push
sub
rcll
aas
and
mov
ljmp
mov
and
sbb
lcall
mov
test
out
pusha
jbe
negl
jp
sub
lods
lds
lds
out
xchg
push
jo
push
aas
and
inc
pop
adc
sti
les
mov
aam
inc
mull
pop
rcr
add
lret
out
movsb
xchg
mov
ret
fsubrs
ljmp
jl
addr16
dec
iret
adc
xor
out
jae
mov
hlt
loope
ljmp
lods
cmpsl
fcoms
lock
inc
fwait
ret
dec
mov
loope
add
lds
add
mov
cli
xor
testb
inc
add
mov
jo
jge
jo
and
push
pop
in
add
inc
xlat
sub
mov
pop
cmc
push
add
jecxz
out
mov
std
rcll
int3
cmp
xchg
mov
dec
sub
jb
xchg
lock
add
jecxz
xchg
sub
push
cmp
dec
je
test
fildl
push
push
jl
lds
fistpl
cltd
repz
mov
insb
gs
mov
jns
jbe
orb
leave
div
stc
mov
adc
test
cmp
sbb
les
roll
aas
sbb
scas
pop
scas
xchg
ret
mov
int
daa
outsl
insl
pusha
lret
cmp
in
shl
xor
test
repnz
imul
imul
je
push
xor
les
and
clc
pop
rolb
pushf
pop
mulb
insb
mov
ss
pop
cmp
std
mov
jecxz
inc
mov
xchg
stos
inc
pop
mov
cmpl
sarb
jno
out
lret
cld
dec
nop
pop
push
shr
mov
gs
jmp
mov
leave
mov
adc
outsl
jmp
and
push
jb
loop
les
ljmp
cmpsb
jg
daa
add
popf
and
push
xchg
ficoms
push
push
inc
mov
sub
subps
jmp
sub
xchg
mov
xor
cmp
lret
repz
lds
pop
jb
icebp
xor
pop
dec
int3
pop
add
imul
les
jmp
inc
repnz
push
push
jmp
into
out
jle
popl
sbb
out
mov
imul
ret
lods
fwait
cvtdq2ps
rcl
int
fdivs
or
aas
out
loope
add
pop
fisttpll
sub
enter
es
jne
cmp
mov
jp
ja
dec
sub
pop
pop
in
push
or
jg
iret
cmp
inc
push
jl
inc
into
jl
xor
inc
into
imul
sbb
and
pop
and
xlat
push
or
bound
aas
iret
jmp
dec
daa
adcb
fsubr
sbb
add
fstl
mov
and
sbb
jl
adc
jbe
lock
loopne
adc
inc
pusha
xchg
mov
rcrb
push
aad
mov
fwait
push
addb
cwtl
fwait
arpl
mov
push
pop
cmp
cmpb
pusha
les
inc
pop
nop
mov
imul
sub
ja
jnp
jg
loopne
pop
xor
or
ljmp
mov
ds
stos
xchg
jns
cltd
nop
fisubrs
adc
scas
das
ret
nop
out
fs
es
pop
aas
xchg
fscale
call
push
leave
fbld
out
daa
in
and
jno
mov
fimull
fsub
jns
cli
mov
loop
mov
jnp
pusha
dec
sbb
insb
mov
xchg
push
xor
enter
push
xchg
cli
cmp
pop
f2xm1
into
sbbl
xor
sarl
and
notb
stos
cmpsb
mov
push
pusha
pop
lahf
mov
sahf
push
test
js
push
leave
out
mov
adc
in
and
mov
or
jnp
cli
jecxz
or
mov
jnp
ficoml
sub
iret
and
pop
inc
cld
xor
or
loope
add
cmp
add
xorl
xor
movl
cmp
jne
mov
mov
and
mov
mov
movl
add
mov
jmp
fcmovnbe
aam
repz
push
jae
push
cmp
pop
xor
jge
jo
les
or
adc
xchg
push
mov
pop
ja
mov
add
push
jae
in
sbb
jmp
push
inc
out
jmp
sub
pop
pop
push
es
pop
adc
sbb
inc
push
jbe
fildll
pop
gs
pop
mov
mov
push
and
xor
dec
mov
insl
enter
lea
stos
cld
sub
test
js
call
aam
xchg
ljmp
pop
lret
add
dec
bound
outsb
sarb
xor
pop
jns
xor
pushf
mov
test
and
jb
aad
mov
lcall
xor
sbb
mov
cmc
mov
jecxz
xchg
scas
xchg
mov
in
jl
fucomp
into
icebp
cmp
cmp
je
jb
mov
push
pop
xchg
cmp
stos
or
xchg
mov
or
in
jae
das
push
sub
xor
xor
cmp
repz
jae
cmp
push
add
xchg
xor
pop
jbe
int
sub
repnz
pop
xor
testl
jg
mov
add
pusha
xchg
cmp
mov
test
pop
xor
pusha
call
lahf
jo
mov
dec
pop
or
test
mov
and
jnp
or
inc
add
sub
not
jl
mov
sbbb
cltd
data16
xlat
ds
pop
adc
xor
mov
adc
mov
jge
arpl
mov
mov
iret
into
cmp
xchg
scas
sbb
bound
cmp
jae
mov
xor
hlt
sub
imul
push
mov
xor
jp
jne
adc
call
icebp
or
xchg
jecxz
push
in
or
testb
sub
out
pop
ss
scas
jge
imul
push
movsl
dec
add
jns
mov
dec
add
cmp
cmp
ret
lods
outsl
adc
pusha
mov
pop
pop
xor
mov
mov
cmp
jmp
in
fstl
shll
mov
add
mov
rcll
mov
adc
sbb
adcl
es
mov
shl
aad
ljmp
cmove
cltd
shll
data16
lcall
jg
cmc
add
sub
or
jb
and
mov
dec
inc
negb
out
xor
mov
dec
in
pop
popl
dec
mov
pop
pop
ja
je
push
jp
jg
das
imul
inc
popa
jno
dec
fwait
lock
or
test
cmc
imul
jne
hlt
mov
ljmp
sub
enter
push
xchg
lea
out
adc
pop
or
mov
xor
add
adc
in
push
pop
push
je
dec
repnz
xchg
jno
lea
adc
andb
enter
stos
add
jmp
out
shll
dec
hlt
les
add
pop
adc
test
mov
cwtl
jg
jns
call
or
sub
push
loopne
cmpsb
or
arpl
mov
dec
ds
daa
repz
test
xchg
mov
xchg
dec
sbb
mov
jmp
insl
push
xlat
mov
pop
inc
lock
add
mov
mov
add
mov
xor
sub
push
sbb
jmp
lods
das
mov
mov
lcall
pop
mov
jo
mov
sub
xor
cmp
leave
arpl
push
jbe
std
pause
mov
pop
pop
pop
outsb
sti
dec
aas
insl
adc
xor
pop
call
jmp
mov
mov
push
imul
xor
mov
loop
rcl
decl
xor
out
jnp
sbb
adc
or
fwait
dec
sbb
push
dec
rolb
jno
push
arpl
lods
inc
in
cwtl
xlat
push
fcomi
inc
jp
sbb
mov
stos
ret
sub
push
push
pop
fsubs
and
roll
test
xchg
das
iret
push
xor
andl
and
call
pusha
fwait
add
mov
nop
xchg
add
push
ret
das
inc
mov
mov
in
jge
test
mov
mov
inc
dec
jmp
push
test
std
inc
cmp
push
pop
sbb
stc
jl
mov
mov
loopne
int
mov
rcl
ret
push
mov
aad
imul
xchg
xchg
mulb
mov
mov
popf
inc
lods
mov
out
adc
les
ss
aas
stc
adc
xchg
movsb
mov
sahf
outsl
jo
dec
rclb
mov
push
xlat
or
adc
push
pop
mov
add
xor
dec
push
outsb
pop
pop
pop
sub
push
hlt
mov
cltd
pop
mov
aad
sti
jg
sbbl
mov
nop
sbb
fisttpl
repnz
jne
and
sub
and
sub
pop
jge
jne
and
adc
mov
jl
mov
arpl
cmp
cltd
xor
out
je
mov
cwtl
ss
mov
jae
push
xor
inc
pop
stos
push
mov
pop
mov
inc
icebp
rcrl
adc
jne
insb
lret
adc
add
int
fisubrs
add
out
shl
mov
push
data16
and
push
push
imul
call
xacquire
xchg
and
pop
and
cmpsl
ret
jge
mov
mov
cli
push
xor
cmp
stos
mov
push
daa
add
push
push
xchg
pop
pop
pop
gs
mov
clc
mov
repz
push
mov
lea
lcall
mov
lods
dec
and
std
js
cmc
scas
fs
lahf
cld
push
aad
addr16
nop
ficompl
scas
mov
in
dec
xor
and
lcall
fdivrl
mov
cmp
lods
lcall
mov
mov
xor
outsl
in
ss
xor
xchg
std
pop
dec
imul
xchg
rcll
aam
jl
testb
xchg
pushw
sbb
or
jg
pop
aas
xchg
mov
bound
xchg
test
addl
push
pop
jle
mov
sahf
sub
ljmp
movsb
shlb
dec
sub
popa
fidivrs
je
jbe
lret
mov
daa
popf
add
arpl
cs
dec
sbb
lods
data16
shr
pusha
xchg
jae
mov
or
xchg
sub
inc
stos
xor
es
add
mov
add
jmp
outsl
mov
or
imul
dec
stos
imul
inc
jo
mov
sub
ret
push
mov
or
mov
movsl
bound
sbb
shlb
pushf
loope
cmp
repz
ss
push
cmp
movsl
jmp
xchg
iret
and
sbb
mov
ss
mov
add
mov
cmpsb
cli
fiaddl
daa
mov
int
dec
add
adc
and
jo
test
pop
or
aas
fbld
adc
pop
cmp
push
outsl
clc
arpl
and
add
in
js
or
inc
stos
mov
sub
test
add
add
cmp
das
mov
rcr
fidivrs
iret
shrl
pop
sub
jg
fsubrs
into
mov
push
sub
outsb
or
loopne
imul
clc
pusha
jle
dec
out
sahf
push
push
cs
aaa
inc
ret
adc
pop
mov
pop
in
dec
sub
fidivl
pusha
mov
hlt
call
sbb
cli
lea
mov
in
mov
pop
inc
push
std
sub
faddl
jno
shl
push
insl
faddl
sbb
jbe
int
lds
mov
jle
scas
repz
dec
lea
mov
mov
imul
rclb
mov
fwait
adc
jl
imull
fcomps
xor
push
inc
pop
dec
std
cmp
outsb
jnp
ds
cli
inc
push
call
xor
and
xor
push
adc
insl
in
popf
sti
and
leave
inc
out
jecxz
push
sub
in
jecxz
fdecstp
repnz
push
clc
mov
jle
lret
loope
sub
test
mov
movsl
adcl
xchg
or
pop
mov
pop
and
xor
stos
ja
and
enterw
mov
push
xor
add
jmp
daa
add
adc
jns
in
and
xchg
and
shll
je
pop
lret
es
and
fldl
and
in
cmc
lods
mov
push
jo
pop
or
adc
adc
in
jmp
rep
cmpsb
in
je
in
aam
mov
mov
mov
cwtl
lea
jecxz
lcall
mov
mov
aam
adc
and
into
sbb
cltd
inc
push
jne
arpl
fcmovnbe
xchg
in
adc
test
xchg
aad
push
push
sbb
mov
pop
or
movsl
lods
pop
cmp
sbb
fcoml
cmc
lcall
insb
sub
push
fstpt
dec
test
mov
pop
push
dec
inc
and
enter
xor
mov
lock
sbb
inc
mov
jb
pop
pop
sbb
call
mov
rcrb
or
not
cmp
stos
sbb
dec
mov
sub
lock
pop
in
orl
cld
shll
and
cmpsb
sub
xlat
adc
pop
imul
push
xor
mov
fcoml
jmp
pop
inc
or
cmp
in
ja
insb
or
lods
mov
fisubrl
test
jnp
nop
dec
das
mov
push
iret
push
dec
std
adc
and
movsl
xor
divl
xor
andl
dec
int
jns
test
dec
lahf
std
push
inc
push
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
jmp
outsl
mov
jae
dec
cmpsl
repz
das
ret
scas
ds
jo
pop
jge
jo
jp
popf
and
sti
add
and
je
add
cmc
daa
stc
ds
outsb
jo
jne
rorb
dec
sub
imul
pop
std
negl
jmp
outsl
dec
shll
gs
cltd
sub
andb
stos
gs
sub
ficompl
inc
in
sbb
iret
jmp
sub
mov
repnz
dec
inc
adcl
xchg
ja
dec
jne
insl
aaa
scas
add
or
push
add
lret
dec
xor
out
sub
add
dec
shrl
je
adc
inc
inc
jecxz
popf
mov
mov
sbb
cld
jmp
loope
scas
mov
add
das
pop
mov
or
sub
stos
test
iret
cmp
cmp
cmc
test
lahf
lahf
cmc
fs
and
cmpl
mov
test
xchg
xlat
in
das
imul
or
insl
icebp
in
arpl
loope
mov
mov
mov
sub
lcall
int
lds
or
mov
bound
push
mov
pop
hlt
jb
add
jno
ja
lcall
pushf
mov
loop
icebp
mov
bound
xchg
ret
je
fs
and
xlat
shlb
popa
push
xchg
push
or
rolb
push
fists
shlb
mov
inc
loopne
jno
gs
sbb
iret
xor
mov
insl
cmp
cmc
in
dec
icebp
inc
sbb
rorl
jno
cmp
pop
test
dec
in
stc
xchg
std
add
push
pusha
sbbl
pushf
int
xchg
mov
daa
dec
dec
ja
out
sbb
adc
xor
call
and
jg
or
jnp
es
movsl
hlt
outsb
cmp
fnstcw
mov
xlat
test
xor
stos
mov
hlt
dec
sub
mov
inc
mov
aad
jle
mov
jge
xor
mov
xchg
mov
or
pop
imulb
pop
outsb
mov
jl
das
ds
push
pop
xor
inc
not
stos
fcomip
jns
mov
in
adcl
sbb
sarb
jnp
int3
mov
mov
pusha
cmp
push
hlt
or
ficomps
inc
inc
in
mov
mov
or
std
add
cld
shrl
movsb
mov
push
pop
sbb
insl
aam
cmp
adc
loop
sbb
cli
repz
dec
push
inc
in
cmp
test
mov
adc
sub
lds
pop
mov
fadd
or
jb
dec
aam
push
mov
cmp
ret
test
or
inc
cmp
hlt
es
pop
lret
xchg
mov
mov
inc
add
cmp
add
or
and
jnp
cli
pop
int
loope
in
les
ds
jnp
jle
fcomp
cltd
add
mov
xchg
jae
das
out
mov
insb
xchg
in
dec
mov
enter
mov
loope
loope
int3
mov
int3
push
dec
xor
push
inc
in
xchg
adc
stos
cld
mov
xor
jge
cmc
mov
insl
xchg
or
jmp
mov
sub
sahf
push
stos
insl
lock
jb
jg
cmp
rorb
aas
xchg
sub
xor
xchg
inc
cld
mov
cld
mov
movsl
fldt
arpl
lret
push
or
mov
mov
add
sub
adc
mov
push
mov
xor
movl
jmp
xchg
shll
push
paddsw
es
jo
pop
jge
jo
cmp
jo
je
imul
sub
test
lods
adc
cmp
div
push
aas
test
inc
je
xlat
movsb
mov
sbb
cwtl
sbb
iret
push
mov
aaa
cmp
push
in
test
or
pop
and
test
adc
mov
call
mov
repnz
clc
cwtl
mov
les
mov
call
fidivrl
subb
jnp
out
xchg
sub
mov
mul
filds
push
mov
out
shll
mov
adc
xchg
mov
adc
xchg
pushl
inc
sahf
aas
add
add
adc
cmp
inc
orb
sub
mov
xchg
dec
cmp
mov
adcb
fs
ret
icebp
jle
out
inc
add
movsb
test
xchg
pop
aam
cmpsl
inc
mov
sub
fnstsw
out
xchg
add
fstpl
mov
loop
jo
xchg
das
stc
sti
mov
dec
cwtl
adc
mov
inc
sar
lods
insb
scas
scas
add
fucomip
ret
and
mov
mov
fcoml
mov
in
out
jae
out
mov
or
sub
dec
push
mov
shl
pop
cmp
dec
je
xchg
inc
cmp
pop
xchg
out
loope
sub
cwtl
hlt
in
xchg
iret
adc
int3
jmp
xchg
pop
xchg
sub
shl
or
jle
and
cmpsl
cmpsb
cmpb
dec
sar
fisubs
push
cmp
ljmp
push
sti
push
or
add
movsl
push
adc
and
jns
fxch
sub
scas
mov
and
push
jns
xchg
xor
imul
jmp
and
mov
aad
repnz
mov
xchg
adcl
scas
movsl
lea
outsl
xchg
mov
jae
jg
jle
sti
and
xor
xor
das
mov
test
jl
sub
scas
jp
gs
or
mov
push
xchg
imul
or
sarl
jbe
dec
insl
sarb
int3
dec
mov
add
pop
push
fidivrl
imulb
or
movsb
in
nop
sub
out
adc
sbb
ret
inc
ljmp
mov
outsb
jp
xchg
pop
pop
xchg
setnp
nop
fsub
xchg
imul
or
int3
dec
sbb
repnz
in
sub
lret
je
cmp
xchg
outsb
lret
repnz
cli
dec
fwait
dec
xchg
out
jno
addr16
push
fdivr
rcrl
xchg
in
nop
sbb
outsb
sbb
jl
mov
inc
pop
or
ret
xchg
into
pusha
popa
dec
movl
insl
cmp
stos
les
ss
jns
xor
ret
pushf
or
mov
xchg
sahf
xchg
test
call
lea
adc
mov
cwtl
xchg
jbe
mov
fs
inc
adc
mov
movsb
push
cmp
pop
pop
sti
lret
cmpsl
cmpsl
and
mov
xchg
cld
jle
ss
or
nop
jge
in
adcb
sub
sti
mov
xor
cld
ret
push
flds
pop
outsb
sar
cltd
enter
int
mov
fstp
inc
subb
loope
loope
sub
ljmp
test
mov
xlat
nop
sub
je
jne
xor
dec
mov
or
fisttps
xor
scas
pop
es
mov
sub
mov
icebp
cld
inc
add
js
add
test
or
add
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
and
leave
adc
adc
call
out
mov
jo
pop
jge
jo
inc
pusha
leave
add
cs
pusha
xor
xchg
inc
cmp
push
jns
xchg
rolb
fwait
pop
xor
lahf
xchg
inc
xor
sbb
xor
testb
icebp
icebp
out
lret
xor
cmp
push
lds
xchg
cmp
cmpsb
mov
inc
cmc
lds
insb
mov
lods
popa
jns
push
dec
push
pop
xchg
xor
lock
cwtl
bound
dec
push
push
add
jns
or
adc
sahf
xor
les
pop
xchg
add
inc
push
divl
push
into
loop
aam
adc
out
test
push
imulb
outsb
or
push
out
movsb
movsb
xor
outsb
hlt
repnz
xchg
mov
fisubl
addb
imul
adc
push
sahf
or
jnp
jae
jb
jge
aam
sti
mov
sub
in
jg
pop
mov
fcmovu
jecxz
jb
sbb
jmp
xchg
out
mov
insl
lcall
and
mov
sub
cli
notl
cwtl
xchg
mov
jo
mov
ret
adc
inc
jg
inc
roll
jo
or
nop
dec
dec
jp
xor
mov
adc
xchg
jne
nop
xchg
ficompl
int3
sub
lods
fwait
in
es
jbe
repz
sbb
push
jb
ror
les
filds
and
jmp
imulb
repz
jns
pop
mov
inc
dec
mov
scas
std
outsb
xor
sbb
inc
pop
ret
sbb
std
int
aaa
jge
dec
and
mov
sub
sbb
mov
or
adc
je
push
cmp
cli
inc
bound
iret
cmp
sbb
fstl
sbb
movsl
cmp
inc
test
icebp
pop
push
fwait
and
xchg
jecxz
fnstsw
cli
pop
xor
cmp
xlat
mov
cmp
or
mov
movsl
les
mov
es
loop
mov
lcall
imul
pop
mov
xchg
push
inc
mov
and
adc
jg
inc
mov
outsl
adc
js
mov
je
ror
mov
or
aaa
les
sub
out
add
jb
cwtl
xchg
movsb
jbe
stos
push
and
dec
jo
inc
inc
push
sub
add
fsubr
mov
add
enter
lret
pop
mov
adc
or
sub
xor
pop
pop
clc
add
outsb
jmp
fstpt
pop
push
in
out
mov
sub
mov
adc
adc
enter
push
cmp
loop
push
aas
mov
cs
xor
lea
mov
add
popl
lock
fcmove
sbb
mov
popl
in
dec
xchg
mov
stc
aaa
dec
cli
out
xorb
loopne
testb
cmp
sub
push
testb
in
cmpsb
test
popa
cwtl
sub
fcomi
xor
roll
cmp
or
mov
leave
les
aad
sti
sbb
arpl
pop
mov
push
ss
cmp
rcrl
cmc
add
push
mov
test
inc
and
je
pop
xor
test
sub
ret
pusha
xchg
in
enter
fstpl
lock
int
jno
fnstenv
xchg
rol
xor
nop
in
adc
std
sub
frstor
nop
lock
orb
cli
pop
enter
xchg
xchg
test
out
pop
cld
xor
push
pop
in
dec
aaa
push
decw
ret
cmc
cld
inc
add
jg
add
rol
jp
inc
add
add
cmp
movl
jne
jmp
js
stos
loopne
jae
cmc
pop
sub
add
jo
pop
jge
jo
ja
es
xchg
mov
add
mov
mov
leave
xor
push
enter
mov
mov
scas
and
stc
mov
xchg
sahf
fcomp
jo,pn
or
inc
clc
std
unpcklps
xcrypt-cfb
cmpsl
and
mov
push
popa
out
jae
call
bound
bound
mov
aam
mov
insb
std
in
mov
in
xor
aaa
mov
mov
lret
dec
test
mov
push
lret
mov
cmp
cmc
cmp
int3
xor
jg
push
test
xor
mov
js
jae
push
lock
cmc
sbb
hlt
mov
pop
push
lahf
sub
cmpsb
add
or
mov
xchg
cld
push
addr16
loope
xchg
dec
sub
out
outsb
daa
imul
push
ja
fcmovnbe
mov
sub
pop
and
adc
add
pusha
loope
hlt
mov
and
xchg
jle
adc
and
cwtl
imul
dec
add
or
adc
sbb
sahf
push
sbb
lods
out
fsubrs
sbb
add
push
sbb
sbb
jg
loope
pop
pop
lea
mov
push
outsb
jae
flds
mov
jmp
sbb
xchg
pop
je
fidivl
lret
stc
dec
test
cmp
movsb
andl
mov
xchg
out
mov
movl
cmp
pop
xchg
inc
movsl
adc
sub
cmpl
sub
loop
jbe
push
xor
out
movsb
js
sbb
in
adc
push
std
testb
sbb
cmp
mov
jge
data16
jg
dec
pop
cmpl
pushf
push
xchg
jne
fs
les
jb
mov
std
pop
add
popa
je
xchg
xchg
cmp
and
add
cs
push
push
mov
jae
lahf
fimuls
mov
int3
cli
lds
xchg
and
jecxz
adc
cmp
pop
push
or
fimull
mov
jns
scas
dec
fisttps
mov
outsl
cmp
sbb
mov
sbb
jp
cwtl
stc
push
test
push
pop
mov
stos
pop
aad
rorl
sarl
and
xor
mov
mov
mov
lea
mov
gs
shrb
imul
and
sub
mov
pusha
pop
popf
movsb
mov
xchg
mov
push
or
lret
jmp
push
loope
and
aad
shrl
pusha
cmpsb
fildll
cli
call
scas
xor
scas
mov
dec
mov
nop
or
pop
adc
mov
mov
adc
fldcw
mov
loopne
push
and
inc
push
out
mov
andb
pop
int
add
andb
and
xchg
push
sbb
in
cld
ret
cmp
jp
cld
inc
aam
push
cmp
iret
aas
lret
mov
test
inc
test
pop
jne
pop
mov
nop
cmpsb
sbbb
stos
roll
lods
repnz
fildl
jne
mov
imul
outsl
pusha
pusha
cmpsl
outsb
lods
int3
ror
mov
dec
or
movsl
cmp
pushf
cltd
out
out
iret
and
jo
repnz
iret
add
ds
jp
popa
pop
aam
movb
cld
hlt
xchg
cmc
mov
lahf
mov
mov
enter
add
sub
inc
add
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
jmp
mov
cwtl
test
jb
jb
xchg
adc
rcrl
jo
pop
jge
jo
addb
cltd
sbb
sarb
pop
inc
imul
mov
push
mov
lcall
or
jae
loop
sti
fwait
rcrb
push
dec
popa
pop
out
data16
sbb
imul
fsubs
ss
rorb
test
dec
adc
mov
sbb
lock
ror
int3
or
call
lods
sub
push
push
sbb
outsb
inc
movsb
pop
and
xchg
fbstp
sbb
dec
mov
cmp
outsb
cmpsb
shl
xchg
mov
mov
cmp
pop
popf
xchg
pop
inc
daa
lods
lods
lahf
iret
jbe
sub
int3
ljmp
test
and
jnp
mov
pushf
out
add
popa
test
or
sub
adc
sub
stos
mov
rcrl
xor
movsb
xor
xor
dec
or
pop
add
mov
xor
xlat
mov
fstps
jnp
inc
stc
xchg
mov
and
lret
or
sub
mov
clc
mulps
dec
pop
jmp
call
or
push
push
push
enter
pop
xchg
mov
inc
jge
mov
fcmovbe
out
cmp
cmpsl
inc
fmul
stc
imul
adc
cli
sub
pop
subb
enter
stc
lcall
push
in
loopne
push
adc
fiadds
cmp
push
fsubrs
mov
xchg
stos
data16
data16
scas
jno
stos
cmc
movsl
pop
jmp
xchg
cmpsl
in
jbe
addr16
jno
dec
mov
iret
cmpsl
jp
fnstenv
push
mov
ret
jg
and
daa
xchg
outsl
push
scas
mov
fisubrs
cld
sarl
xchg
mov
cmpb
push
xchg
nop
mov
or
mov
faddp
lcall
mov
mov
sbb
hlt
mov
sahf
sub
add
push
sub
mulb
lods
icebp
test
jp
or
lock
jb
in
aad
faddp
mov
mov
push
loop
inc
aad
push
adc
lea
popf
jmp
lcall
sbbl
out
outsl
or
into
movzbl
mul
stc
or
stos
push
or
inc
push
xchg
push
cwtl
xor
fistpll
jge
imul
mov
xlat
stos
ljmp
push
pop
jb
and
cmp
sub
adc
popl
and
push
push
inc
stos
les
sbb
repnz
movsl
xchg
loope
mov
jp
icebp
popa
std
repnz
rep
mull
shlb
push
sub
or
sbb
mov
sbb
mov
lcall
inc
pop
sub
daa
mov
ja
push
mov
rcr
mov
inc
in
xchg
std
inc
psrlw
push
xchg
pop
push
icebp
sti
testl
adc
pop
pop
cwtl
fiaddl
dec
fidivl
mov
pop
imul
pushf
sbb
sub
xor
add
sbb
data16
adc
and
pop
in
dec
fwait
pop
scas
test
lods
dec
mov
and
incb
adc
dec
mov
mov
int3
and
and
out
bound
into
out
scas
mov
aam
sbb
xchg
insb
adc
xchg
xchg
dec
lret
pop
scas
hlt
lods
rorb
dec
mov
or
loopne
aaa
adcb
stos
mov
mov
mov
add
pop
pop
ret
push
mov
sub
and
movl
mov
adc
movl
sbbl
mov
subl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
xor
sub
mov
sbbl
jmp
mov
mov
pop
dec
xor
pushf
fstpl
jo
jle
jo
das
std
and
cmp
jne
inc
popa
cmpsb
xor
xor
rorb
mov
pop
lock
jl
idiv
add
outsb
mov
stos
sbb
into
stc
or
xor
call
xchg
aad
lahf
call
xor
mov
rorl
inc
xchg
rclb
movsb
sahf
cpuid
and
out
into
and
mov
push
aam
pop
cmpsl
pop
add
mov
and
fwait
adc
sub
mov
aas
cmp
loopne
or
jb
cld
push
imul
xor
sbb
lock
lret
mov
scas
les
jmp
shlb
cmpsb
popf
xor
add
xor
or
in
cmpsb
cmp
aas
inc
roll
out
icebp
add
adc
push
mov
xor
mov
jns
pushf
testb
test
lahf
mov
inc
ret
and
fisubs
test
rorb
add
xchg
pop
fdiv
jne
arpl
jge
xor
mov
sub
mov
and
inc
mov
jns
push
test
sbb
in
lods
out
fwait
pop
js
cmpb
pop
addb
cmp
scas
xchg
xor
call
enter
fldl2e
mov
in
dec
bound
movsl
pop
cld
iret
aaa
repz
xchg
lock
repnz
inc
rol
daa
mov
xor
inc
dec
cmp
cmpsl
xchg
js
jns
push
fistps
outsl
rol
int
ja
popf
add
push
xor
jno
icebp
cmp
lcall
aas
ffree
adc
inc
movl
nop
xchg
pop
outsb
stos
xchg
dec
jne
sar
or
loope
sbb
add
jecxz
cmc
adc
jns
mov
ror
mov
mov
shlb
sbb
ret
sbb
inc
in
fsubl
cld
mov
dec
ja
fadd
push
movl
xchg
cmpsl
push
decb
sub
aad
pop
jne
mov
lahf
aad
pop
and
xlat
push
mov
cwtl
jge
dec
loope
sbb
adc
dec
push
push
daa
outsb
fdivr
mov
xchg
jp
lahf
cmp
adc
pop
push
xchg
daa
in
xor
pop
xlat
jecxz
arpl
outsl
jne
mov
cs
sub
push
stos
mov
stos
sub
hlt
xlat
aaa
arpl
icebp
cmp
das
sub
dec
sahf
adc
mov
aad
or
insl
call
lret
subl
jmp
hlt
xor
fwait
repz
inc
xchg
aaa
adc
jo
jle
jo
and
push
in
or
out
loope
das
ret
or
mov
jmp
dec
xchg
xor
out
jmp
fsubr
push
lea
jp
push
pop
sbb
addr16
or
shlb
mov
add
test
jno
rclb
in
pop
lret
lods
shl
push
or
mov
aaa
or
push
and
jne
fstp
popa
std
out
ja
out
push
inc
pop
inc
gs
inc
push
aaa
adc
dec
xor
rol
or
xchg
jne
mov
faddl
rorl
in
pop
lret
test
jl
inc
jne
pushf
sbb
or
adc
and
aas
movsl
orl
xchg
xor
mov
xchg
sbb
xchg
sub
mov
and
test
test
add
dec
ja
cmpsl
cmp
inc
jno
mov
js
mov
xlat
inc
xor
xchg
insb
mov
inc
push
stos
mov
add
lods
or
div
test
fdivrl
negb
xchg
js
bound
or
pop
fimull
clc
aas
std
inc
sbb
int
xchg
adc
scas
rorb
sub
out
mov
ja
xchg
pushf
dec
in
mov
push
repnz
mov
les
cmc
icebp
std
sub
test
sbb
xchg
or
arpl
dec
std
inc
jns
xor
add
lahf
lcall
sbb
lret
inc
call
xchg
inc
xchg
push
test
jns
rdmsr
iret
mov
out
push
sub
fcompl
push
jecxz
push
pusha
je
sti
fsubl
push
sbb
xchg
add
movsb
mov
insl
sub
add
mov
lds
pop
stos
mov
iret
shlb
sbb
push
mov
fists
in
movsb
pop
fisubl
dec
cmpsb
mov
mov
jmp
add
jb
xor
ja
mov
cmpsb
push
cltd
push
out
add
fidivrl
mov
jge
dec
loope
dec
addr16
push
rcrb
jae
mov
rcrl
ret
stos
icebp
outsl
test
repz
push
lea
pusha
and
stos
in
xchg
dec
dec
dec
mov
and
sbb
out
add
lock
pop
js
cmp
test
jp
pushf
inc
cmp
mov
mov
sbb
ja
clc
sahf
jge
cld
mov
xor
shll
outsl
inc
js
cmp
loopne
in
adc
jbe
inc
add
add
add
sldt
add
leave
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
push
xorl
push
test
jmp
mov
mov
jne
jne
sub
or
pop
jo
mov
dec
push
fwait
adc
mov
imul
shlb
jl
in
mov
push
hlt
ja
testb
dec
pop
neg
popf
adc
mov
jg
dec
mov
lds
addr16
aaa
cli
leave
lahf
data16
dec
jp
xchg
mov
pop
das
fs
subb
cmpsb
inc
scas
cmp
ret
fistl
inc
es
push
xchg
cmp
cs
roll
fs
ljmp
push
cld
sbb
daa
and
push
inc
sar
dec
lds
mov
pop
or
fldenv
pop
push
je
std
mov
cmp
inc
out
loope
push
pop
ss
jbe
sbb
cld
xchg
dec
maxps
xor
out
xor
sub
cld
test
dec
mov
sub
push
adc
lcall
cmpsl
int3
ja
rcll
ret
fcomps
xchg
pop
insb
enter
sti
push
pop
subb
scas
pop
dec
push
dec
push
add
push
in
xor
cmc
pushf
pushf
add
mov
dec
xchg
imul
mov
jmp
jecxz
mov
mov
jmp
and
mov
out
lcall
sti
mov
xor
lds
imul
xor
push
lahf
sub
sbb
cmp
fimull
bound
mov
jb
test
jmp
sarb
pop
les
sbb
dec
fdiv
mov
and
es
loope
mov
jno
jl
insb
xchg
push
nop
push
aad
movsl
add
mov
pop
sbb
ljmp
test
popf
cmp
aaa
xor
shll
jne
clc
ds
clc
and
js
rcr
inc
in
loopne
aam
std
push
pushf
ret
xchg
jnp
inc
cmp
in
add
enter
sar
adc
jo
mov
inc
jae
cld
addl
lahf
orl
mov
jl
aam
jecxz
sub
mov
int
pusha
pop
or
inc
call
jno
fcoml
in
popf
mov
imul
inc
lahf
sub
ljmp
test
inc
or
dec
flds
xlat
or
add
test
and
sbb
push
mov
arpl
pop
adc
sbb
and
es
outsb
mov
loope
inc
out
pop
pop
mov
push
push
call
ds
dec
lcall
test
imul
fs
ret
mov
jmp
ds
outsb
les
mov
dec
sbb
xor
test
add
add
and
inc
add
dec
in
add
pop
add
add
add
je
cmpl
jne
push
push
push
push
pushl
push
push
call
mov
dec
mov
jmp
and
imul
mov
add
add
mov
sub
mov
jmp
lret
sbb
inc
loopne
push
mov
rorb
ja
cmp
adc
jo
jle
jo
sbbb
lret
sbb
sbb
test
push
cmp
or
jmp
stos
fwait
test
cld
fcomps
negb
mul
pop
jl
idivl
mov
outsl
cmpl
insb
adc
hlt
insb
shrb
sahf
jmp
iret
inc
jbe
aas
or
addl
sub
aaa
lods
cmp
xor
shl
int3
mov
mov
cmpsb
int
cmc
push
lahf
jbe
mov
mov
movsb
push
mov
mov
pop
cmpsb
mov
aad
in
pop
pop
sahf
js
lock
lock
inc
daa
sbb
pop
jge
cmp
ret
rcll
pop
or
dec
shll
lahf
cmp
xchg
in
inc
fmuls
mov
data16
xchg
addr16
xchg
inc
sub
and
sahf
jo
xchg
push
shll
pushf
jmp
cmc
int
sub
dec
imul
sbb
jae
cmp
ss
jbe
pop
pop
jge
leave
dec
jae
mov
repnz
mov
aad
fmuls
dec
imul
subl
jnp
push
or
mov
inc
inc
cltd
loope
lods
cmpsl
add
push
mov
enter
xchg
repz
sub
lret
pusha
leave
add
cld
pusha
inc
mov
sub
pop
push
movsl
aas
cmp
jae
sbb
lret
sbb
mov
xchg
cmc
xchg
mov
mov
cmp
xor
fidivl
add
sbb
dec
out
fstpt
std
sub
aas
ja
push
call
in
adc
cmp
jp
mull
inc
push
fwait
cltd
xor
cmp
and
dec
icebp
push
jo
cmp
imulb
pusha
inc
sub
nop
lods
in
testl
or
in
daa
call
sbb
je
mov
pushf
jo
push
xor
sub
call
push
sub
and
sahf
xor
fsubrs
pop
inc
push
and
outsb
rorb
or
adc
dec
jb
adc
test
pop
push
adc
xchg
outsl
pop
in
lcall
shll
imul
ljmp
pushf
adc
or
fistl
pop
cmpsb
xchg
jbe
enter
inc
mov
jae
out
sub
push
into
sahf
mov
add
lret
xchg
int3
push
in
das
or
xor
cmpsb
xchg
shr
xor
and
shrb
movsl
push
sbb
push
lret
shll
cmp
scas
xchg
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
sub
xor
jmp
call
jno
popa
push
xchg
arpl
jo
mov
or
sub
add
pop
cli
push
xchg
fldenv
inc
pushf
push
xor
ret
mov
push
imul
fnstcw
out
inc
cmp
sti
mov
xor
dec
insb
loope
sub
mov
mov
jnp
mov
dec
imul
cmp
pop
sti
outsl
sbb
sbb
mov
adc
mov
decb
pop
pop
push
xchg
lea
in
jle
es
in
xchg
push
mull
push
cs
cmp
xor
xchg
lock
cmc
jl
jge
mov
mov
xor
nop
loope
mov
stos
jno
and
int
cs
and
cmp
ret
mov
iret
insl
jecxz
in
sub
pop
outsl
arpl
push
pop
push
dec
jle
cmp
icebp
stc
test
aaa
out
inc
mov
aad
aaa
or
nop
rorb
jge
in
rclb
in
imul
enter
testl
lods
insl
pop
sbb
test
or
and
inc
lcall
push
mov
sbbl
mov
inc
rorl
push
push
xchg
int
divl
sub
lcall
add
push
imul
clc
xchg
jbe
fistpl
jmp
test
in
and
arpl
into
fists
loop
lret
xor
cwtl
inc
push
pop
aas
call
loopne
xchg
fdivrs
mov
push
mov
jle
cmpl
mov
es
pusha
imul
lods
cmp
int
lods
xchg
jl
fistps
inc
fmuls
je
add
lock
mov
ss
inc
or
test
test
das
pop
lret
stos
dec
dec
push
sahf
movsl
loop
dec
pop
xlat
push
popf
push
mov
jbe,pn
adc
fidivl
xchg
fldenv
dec
push
arpl
mov
or
imul
in
shrl
out
dec
jnp
inc
iret
sub
xor
out
call
jns
sub
sub
aad
iret
out
fistpl
stos
insl
pop
sbb
jno
mov
pop
pop
das
stc
dec
jg
inc
mov
mov
addr16
dec
popf
test
les
loope
add
jl
push
add
jp
or
dec
incl
or
push
fimull
xor
hlt
iret
lock
test
sarl
xchg
pop
in
sub
sub
push
aam
jne
adc
mov
xor
mov
xor
adc
xor
jmp
push
popa
jne
add
cmp
xchg
rol
dec
mov
jle
jo
daa
sub
es
push
imul
ljmp
or
outsl
mov
jbe
and
jbe
push
mov
cmpsl
mov
sahf
dec
hlt
and
sub
test
cld
sbb
rcr
pop
xchg
dec
xchg
clc
leave
mov
fnstcw
xchg
pop
xchg
jmp
jmp
fdivs
cmp
cwtl
fldenv
jecxz
mov
mov
jle
test
cwtl
insb
rcrl
mov
in
adc
push
clc
xchg
call
sub
in
lods
stos
sub
test
mov
jp
frstor
cmp
repz
shrl
push
into
mov
fbld
fildl
loopne
stos
mov
scas
adc
lea
lock
add
adc
ficomps
push
xor
adc
pop
jecxz
xor
sbb
fnstenv
push
popa
int
cmp
fadds
or
jecxz
mov
andl
push
or
mov
test
jl
pop
hlt
int3
sub
add
pop
cmp
clc
inc
pop
mov
loope
mov
push
ret
xor
sbb
dec
jne
push
loop
push
aam
mov
jle
cmpsl
xchg
mov
fwait
pushf
mov
xchg
mov
out
in
push
push
xor
arpl
fisubrl
inc
or
dec
pop
jnp
ss
es
lcall
xlat
and
pop
cli
imulb
xor
pop
jae
or
gs
jl
orb
pop
iret
test
jmp
rorb
lock
cmpsl
sti
and
lods
icebp
test
cmc
dec
sbb
push
fsubrp
sbb
inc
faddl
movsl
xor
loopne
cmpsl
leave
inc
test
mov
adc
or
xchg
mov
push
mov
mov
inc
push
mov
sub
in
cmp
push
loopne
dec
and
mov
imul
mov
movsb
xor
cwtl
scas
mov
das
xor
mov
loop
fisttpll
mov
aaa
ret
mov
andb
dec
pop
outsb
aad
cmpsl
loop
and
inc
addr16
sbbb
adc
jb
orb
das
or
cmpsb
pusha
jge
popa
sbb
pop
push
outsl
or
sti
les
ds
rcrl
cmpsl
cs
aad
mov
cwtl
sub
jno
add
gs
jno
cmpsb
lods
je
inc
sti
mov
scas
add
mov
mov
mov
je
notl
mov
xor
xorl
add
jmp
inc
mov
jp
adcb
mov
cli
in
outsb
jo
mov
mov
jmp
xchg
ss
cmp
mov
je
movsl
sbb
fistl
jnp
mov
and
jle
gs
in
sarl
popl
pop
pop
scas
push
ljmp
jns
gs
loopne
adc
push
or
xor
jmp
sbb
xchg
dec
sub
subl
mov
sbb
jno
mov
pop
lret
lods
and
rolb
fmuls
mov
pop
cmp
dec
sarb
adc
xchg
dec
xchg
lds
pop
inc
inc
xorl
xlat
xchg
xchg
ret
mov
int
pop
mov
mov
cmp
out
enter
inc
inc
into
xor
xchg
enter
cmc
sbb
cmpsb
movsl
mov
aad
xchg
cmp
test
mov
cmp
or
test
movsl
enter
mov
cmp
mov
adc
inc
dec
lock
sub
movsl
sub
divl
lods
scas
inc
lcall
push
xor
jae
hlt
xor
fidivl
outsl
inc
adcl
sub
outsb
dec
iret
and
adc
or
mov
lods
sbb
sbb
mov
mov
xchg
fwait
mov
sbb
lds
adc
pushf
jnp
nop
cmp
leave
xchg
lret
out
dec
jnp
pop
push
jae
shr
add
xchg
imul
hlt
dec
push
stc
push
inc
mov
sub
rcll
and
imul
mov
xor
out
insb
pop
inc
push
mov
les
pop
pop
add
aam
pop
pop
lds
fs
and
ss
xchg
mov
clc
xchg
and
or
add
dec
push
cmp
aad
add
cli
mov
ljmp
sbb
loopne
sbb
adc
andl
icebp
out
dec
xchg
or
ljmp
aam
jle
pop
mov
enter
xchg
or
and
jae
mov
jo
jl
adc
addb
mov
test
or
and
aas
jne
dec
mov
scas
xchg
jb
lret
loope
push
dec
cmpsb
outsb
inc
fsubrl
xchg
or
xchg
sub
shrb
xor
inc
iret
loopne
mov
mov
adc
ret
dec
shlb
sub
cmp
jne
pushl
jmp
and
lods
shrb
in
add
in
imul
jle
jo
out
push
lea
scas
out
fists
imul
repnz
xor
jle
sbb
lcall
fcomps
inc
data16
adc
push
push
add
outsb
sub
es
fdiv
repnz
repz
inc
mov
mov
or
push
mov
jno
sub
pop
mov
movsl
stos
scas
push
neg
mov
repnz
std
xchg
cmpsb
es
mov
jmp
fistpll
jecxz
int3
test
jns
ret
pop
sahf
jmp
stos
int3
rcrb
jge
pop
mov
outsb
into
scas
rcrb
gs
ja
out
sub
mov
pop
aas
pop
and
jbe
xchg
jne
jg
in
push
icebp
jo
dec
jne
mov
add
pop
popa
jne
shll
adc
gs
sbb
jno
mov
mov
lds
sti
lahf
in
int
roll
mov
insb
jg
cmp
xchg
clc
imul
std
xchg
add
inc
mov
scas
in
and
pusha
int3
insb
pop
pop
mov
rcrb
xor
adc
mov
mov
pop
stos
mov
xor
or
dec
test
xor
adcb
mov
adc
jns
cmp
movsl
rclb
cmp
cwtl
cs
pop
mov
scas
mov
add
fdivs
mov
and
jnp
xchg
mov
ret
cmc
popf
push
jnp
mov
mov
cmp
data16
cs
adc
sub
mov
stc
fwait
shr
inc
popa
in
ffreep
movb
push
cmp
xchg
and
insl
and
sbb
sbb
inc
mov
xor
in
jp
enter
shlb
das
sbb
fists
pop
ss
ds
add
push
shlb
inc
and
int3
mov
or
jns
sbb
bound
aas
jmp
movsl
inc
cmp
adc
imul
rcl
inc
aas
dec
loop
mov
inc
out
lods
jne
mov
cmp
inc
pop
wrmsr
inc
into
pop
inc
mov
test
stos
dec
pop
fsubrl
and
fisubl
dec
pushf
cld
sbb
jmp
and
cli
ror
in
shrl
adc
sub
imul
push
shll
mov
sti
sub
scas
je
lret
add
shrl
test
mulb
push
xor
rorb
mov
pop
bound
dec
jp
gs
out
xchg
test
adc
scas
shll
cmp
mov
les
call
jmp
pop
insl
and
xor
insl
jp
or
mov
ds
jle
jo
mov
call
dec
jge
push
repnz
jb
pusha
inc
ret
out
ljmp
jae
add
lea
and
aam
push
or
ja
add
cmp
jnp
ja
inc
test
add
je
jnp
inc
fiaddl
lds
cmp
cwtl
jge
jo
ret
pop
cmpsb
pop
das
aad
sbb
xchg
pop
jg
fwait
stos
cwtl
hlt
inc
cs
or
rorb
pop
jmp
aam
or
fsubs
stos
addb
push
adc
mov
sub
xchg
cwtl
inc
jne
nop
out
stc
mov
into
jo
xlat
add
push
aam
js
rcrl
rcl
inc
enter
dec
xor
lods
xchg
xchg
pop
bts
movsb
jns
std
in
scas
sub
in
cli
aad
sub
mov
adc
adc
xor
pop
xchg
arpl
sbb
lret
adc
fdivrl
sbb
cmovne
sbb
mov
inc
xchg
pop
mov
arpl
jle
aad
add
add
xchg
popa
pushf
insl
mov
jne
imul
lret
ljmp
xchg
mov
mov
test
fs
pop
movsb
negl
sbb
and
pop
pushf
pop
cmp
xor
pop
cltd
mov
pop
or
lret
mov
imul
dec
add
fdivr
xor
adc
inc
sbb
loop
gs
ret
push
ljmp
scas
and
and
fldt
jae
push
insl
or
sbb
sub
mov
jo
inc
scas
xchg
mov
gs
push
mov
rcr
dec
les
fcompl
das
xchg
pusha
fmuls
in
cld
fsubl
scas
push
call
mov
nop
jle
ret
scas
cs
stc
das
in
jg
push
movsb
lcall
pop
xchg
dec
cs
mov
inc
mov
dec
pop
push
mov
adc
mov
imul
insl
test
sbb
subb
jbe
xchg
bound
fbld
repz
jno
fsubrl
pop
mov
dec
lods
pop
push
add
pop
mov
push
rclb
push
jle
test
cmp
scas
jmp
hlt
aad
in
mov
scas
dec
push
nop
test
mov
lods
and
cmp
iret
in
movsb
shl
lock
ljmp
mov
pop
push
push
jno
lods
dec
inc
xchg
mov
int
push
mov
aas
jae
add
inc
adc
mov
xorb
pop
aaa
mov
loopne
inc
cld
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
xor
add
cmp
movl
je
pushl
decl
pushl
xorl
call
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
or
mov
adcl
xor
decl
add
movl
cmp
je
not
mov
mov
mov
xorl
jmp
lods
mov
loopne
outsb
push
repz
scas
fidivl
jo
mov
idiv
sbb
lret
jecxz
das
sub
arpl
push
mov
sbb
sbb
imul
cs
outsl
mov
jle
loopne
cmp
pop
sbb
cmp
jns
ja
insl
divl
push
stc
xor
pushf
pusha
jb
mov
lahf
js
xchg
addr16
scas
int3
sub
lret
test
imul
lret
gs
mov
sbb
or
mov
mov
mov
js
movsb
jp
push
mov
jp
or
mov
sub
in
out
aad
xchg
xchg
lret
hlt
call
mov
mov
fstps
or
movsl
or
imul
out
sbb
es
cmc
enter
pop
xor
into
cs
xchg
push
inc
aas
outsl
push
aad
jbe
popf
hlt
and
in
test
pop
and
mov
pop
rcll
fidivl
repz
dec
xlat
es
mov
inc
std
mov
fiaddl
hlt
mov
fisubrl
ljmp
mov
fdivl
outsb
add
push
and
je
int3
cmpb
and
std
cltd
cmp
sbb
mov
aas
mov
ljmp
addr16
lock
push
lcall
and
xchg
jae
lods
pop
mov
sti
imull
mov
popa
addr16
ja
gs
jecxz
int3
mov
in
aad
xor
adc
out
add
loope
jle
xchg
mov
scas
dec
fs
push
pop
mov
jbe
lods
cltd
test
jns
sahf
jne
jp
pop
xchg
cli
cmp
lea
ret
pusha
push
and
push
jbe
aaa
sbb
inc
mov
cmp
testb
push
push
and
sbb
mov
push
jb
nop
push
jb
pop
cmpsb
addl
xchg
jl
push
mov
jge
dec
jle
push
shrb
mov
stos
cmp
pop
adc
mov
outsb
mov
out
mov
sub
das
in
aas
test
cmp
sbb
xchg
fadd
cmp
or
xchg
fcomi
or
xor
xchg
aas
cmpsb
sar
int3
cmp
lock
dec
aad
mov
dec
sub
fsubrl
adc
popa
inc
push
hlt
pop
cltd
mov
cld
pop
push
xlat
pop
test
sbb
js
sub
or
push
adc
lods
jns
jae
cmp
and
pop
mov
imul
out
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
orl
add
mov
or
mov
mov
sbb
mov
addl
add
add
mov
mov
mov
add
neg
xor
and
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
add
lea
mov
push
jmp
add
xor
inc
cld
xchg
loop
mov
sahf
xorb
mov
dec
les
das
sub
jo
in
pop
imul
cs
gs
jl
mov
sar
ret
cs
ljmp
subb
add
or
repnz
sbb
mov
int
filds
les
shlb
std
scas
push
divb
es
push
out
fdivrs
inc
in
adc
test
bound
xor
inc
sbb
imul
dec
sub
loop
jl
dec
xor
xchg
xlat
ret
loopne
push
xchg
inc
sbb
adc
popf
mov
loopne
mov
fnsave
lcall
mov
inc
cmp
jae
or
cwtl
aaa
xchg
dec
adc
imul
mov
pop
or
ret
push
ljmp
push
jl
mov
dec
or
fstps
dec
xchg
repnz
std
or
dec
xchg
ret
pop
jno
mov
cmp
lret
mov
sub
jg
jbe
sbb
shrb
call
xor
iret
mov
fs
jbe
loopne
cwtl
mov
orb
mov
or
xchg
fwait
push
fidivrs
cmp
and
push
bound
into
sbb
adc
lock
outsl
push
jmp
fdivrs
cmp
xchg
xor
sub
cwtl
insb
mov
lock
mov
xchg
cmpsb
cmpb
push
outsb
gs
jb
out
add
out
dec
jmp
push
orl
bound
mov
mov
lea
xchg
push
fisubl
push
jp
pop
lcall
loop
inc
in
cmp
and
pop
pusha
jp
push
stos
dec
inc
mov
imul
or
or
xor
mov
adc
jns
mov
xrelease
sahf
mov
imul
pop
sahf
lods
leave
hlt
sub
mov
js
jmp
daa
inc
dec
sahf
dec
out
jle
sbb
cmp
sbb
mov
cld
cli
test
inc
ret
lahf
stos
pop
fcomi
shr
push
cltd
in
stc
add
cmp
out
std
nop
fdivl
stos
dec
clc
mov
mov
mov
loope
outsb
mov
mov
enter
pop
scas
jp
and
xrelease
enter
sub
push
mov
push
fidivs
fsubrl
sub
adc
sar
jne
call
mov
jmp
ret
sbb
sub
jno
pop
or
sub
mov
adc
lahf
in
out
decl
insb
rcll
mov
ret
js
fdivrl
ret
jmp
popa
and
adc
pop
addr16
cld
lods
adc
pop
jno
add
dec
lock
inc
and
das
xor
test
imul
cmpsl
je
or
pop
and
mov
jle
in
popa
mov
jmp
jecxz
cs
sbb
lret
les
or
out
sbb
and
jns
mov
or
push
mov
popa
stos
lcall
dec
dec
or
jmp
mov
aad
pop
mov
mov
mov
sahf
xor
rorl
or
adc
lcall
faddp
push
pusha
insb
outsb
js
cltd
add
xchg
sar
sub
mov
jb
es
faddl
or
cmpsl
fcoml
insb
and
pop
add
in
and
add
pushf
sub
jnp
out
jb
adc
dec
xlat
lahf
lds
in
xchg
pop
adc
add
sbbb
mov
xchg
loopne
xor
mov
repz
xchg
loop
pop
adc
divb
jb
addr16
push
push
cmp
inc
ret
inc
fs
push
inc
int3
or
add
xor
inc
adc
lods
jo
gs
leave
fisubs
sahf
cmp
pause
cwtl
jne
or
jp
adc
pop
add
imul
loop
mov
xchg
ljmp
jns
and
loope
es
aad
fcmovnbe
aad
mov
push
jne
test
test
cmpsb
xor
aaa
mov
xor
push
sbb
mov
rorl
scas
sbb
lret
xchg
sub
mov
push
popa
testl
in
cwtl
int
cli
not
popf
test
or
fistl
imul
push
xor
pop
test
popa
pop
xchg
jns
inc
or
stc
es
jnp
adc
and
or
cmp
mov
jg
sbb
adc
or
leave
sbb
and
iret
jp
hlt
fsubp
sbb
mov
push
cmc
xchg
mov
or
or
ret
mov
push
call
loopne
adc
shlb
test
add
rclb
loop
cmp
pop
add
outsb
outsl
pop
or
enter
adc
xchg
jne
out
xchg
or
mov
xor
jmp
add
mov
jb
jge
jge
push
insl
loope
jge
jo
jle
jo
dec
test
out
and
movsl
ret
in
mov
repnz
or
call
jae
and
mov
cs
fcmove
mov
xor
jno
loop
scas
les
das
mov
mov
addr16
loope
mov
ss
push
mov
push
dec
gs
adc
or
and
lcall
push
cmp
xor
inc
pop
xchg
mov
push
inc
mov
jl
fscale
stc
fldl
enter
arpl
fnstsw
stc
dec
xor
int3
xchg
add
mov
jle
jmp
cmp
cltd
adc
adc
stc
imul
adc
add
inc
or
mov
jl
test
xor
mov
sub
push
loope
leave
xchg
and
inc
mov
and
or
movsl
cmp
mov
push
jecxz
inc
mov
clc
in
aam
les
nop
push
int3
push
iret
arpl
cmp
or
outsl
or
push
or
fistpl
mov
push
out
dec
in
add
cmp
adcb
stos
add
xchg
rol
and
mov
mov
int3
push
mov
mov
call
pop
addr16
and
push
push
adc
push
mov
dec
pop
jnp
xchg
jbe
xor
mov
jae
sub
push
inc
inc
stos
cmp
cmp
addb
test
and
test
jne
stc
addl
mov
push
mov
or
cs
sub
or
sub
adc
fsubrl
cld
pop
ss
andb
clc
sub
stos
push
mov
leave
xchg
fisttpll
xor
sbb
or
mov
adc
into
mov
leave
in
shll
cmc
dec
mov
xchg
mov
dec
xor
dec
test
pop
mov
les
lcall
inc
mov
rcr
into
stos
lds
fldl
hlt
push
js
je
test
pop
movsl
adc
loope
jns
and
mov
fidivrl
ret
out
movsl
and
jecxz
inc
popa
xchg
fdivrl
jg
dec
add
xor
or
cmp
imul
sub
mov
daa
sub
test
xchg
cmpsl
ffreep
out
arpl
push
scas
jns
dec
cld
into
add
add
jb,pt
dec
mul
out
dec
testb
xchg
fisttpll
xchg
mov
mov
pop
inc
inc
cmp
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
icebp
sbb
imul
outsl
stc
mov
jnp
jo
jle
jo
cmp
icebp
scas
mov
and
xchg
and
mov
fstps
lods
mov
pop
or
sub
mov
push
push
mov
imul
inc
inc
scas
sbb
cli
ss
call
mov
sub
out
out
xchg
pop
xchg
ror
add
push
pop
loopne
and
icebp
pop
stos
or
stc
and
inc
add
push
popf
ror
inc
pop
pusha
movsb
int
sub
in
data16
dec
xor
jo
push
mov
add
mov
xchg
outsb
popl
jmp
push
shl
xor
jns
daa
das
pop
xor
loope
push
lcall
test
clc
and
rcll
adc
pop
jnp
cmpsl
cmp
xchg
cld
fldt
fldl
out
nop
test
testb
popf
cmp
popa
push
in
sub
dec
inc
mov
xorl
call
pusha
fmull
push
pop
nop
adc
jae
lock
xor
rcrb
push
add
add
xor
xor
mov
mov
fisttpl
cmp
push
cwtl
mov
mov
mov
int
push
insb
pop
stc
sub
pushf
sub
sub
jns
mov
adc
pop
xorl
insl
imul
inc
xlat
fmul
std
mov
xor
xchg
in
lea
sub
sti
push
jbe
sbb
jbe
sarl
mov
mov
sbb
xchg
adc
sub
cmp
mov
or
aaa
cwtl
xor
adc
loope
ret
adc
sbb
pop
cli
mov
xchg
push
lock
movsl
adc
jge
scas
and
lods
add
push
popa
push
lret
out
sbbb
cmpsl
les
out
out
ret
pop
cli
mov
sub
xchg
subb
shlb
fstpt
pop
xor
lock
pop
rol
leave
das
pop
pop
add
popa
jno
push
jno
mov
ficomps
pop
scas
or
movsl
andb
xchg
clc
inc
iret
inc
test
mov
ljmp
loopne
inc
hlt
lods
mov
outsb
dec
jmp
jle,pt
lret
call
incl
repz
xchg
pop
adc
or
insb
scas
ret
je
fwait
sub
inc
stos
dec
stos
push
cmp
adc
adc
push
or
fdivl
add
sub
xchg
dec
mov
imul
jmp
aas
fidivrl
sbb
bound
sub
idivb
icebp
movsb
js
jo
jle
jo
lods
mov
cli
push
mov
inc
mov
subl
in
enter
adc
fdiv
xor
enter
popl
data16
xorb
cmpsb
or
and
cwtl
mulb
xlat
je
sub
aas
fadds
fbstp
pinsrw
mov
stos
xchg
faddl
out
adc
cmp
push
jmp
xchg
mov
dec
pop
push
pop
rclb
int3
adc
fs
push
mov
movsb
dec
push
popf
mov
cmpl
pop
jbe
test
add
inc
mov
imul
scas
aaa
jbe
jne
out
test
xchg
pop
outsl
dec
push
repnz
leave
addr16
outsl
out
popf
sar
cmpsl
daa
jecxz
ss
sarb
call
add
sbb
xchg
push
inc
sbb
pop
jnp
lret
fnsave
mov
fidivl
mov
pop
js
inc
xor
add
in
add
icebp
jnp
pop
mov
inc
mov
or
mov
xchg
adc
dec
mov
aas
mov
push
nop
out
add
dec
cmp
addb
lods
cmc
mov
lods
dec
push
movsl
adc
xchg
sbbb
jmp
outsb
mov
inc
bound
aaa
dec
gs
pop
pusha
sbb
cmp
pop
adc
jg
sub
data16
mov
and
insl
jae
stos
and
outsb
mov
stos
jg
loope
mov
mov
and
iret
idivb
sbbb
sub
pusha
xor
add
adc
jno
nop
imul
xchg
dec
cs
clc
mov
mov
sbb
adc
xchg
pop
push
jbe
lods
clc
adc
sub
stos
punpckhwd
mov
push
sub
hlt
rcr
cli
and
mov
adc
mov
out
jno
imul
mov
inc
lods
jecxz
or
pop
in
mov
jle
lret
dec
dec
xor
pop
dec
jg
or
xchg
sarl
sbb
push
mov
dec
xchg
aaa
xchg
out
push
fwait
testb
adc
and
pop
pop
and
popf
fimull
cmp
bound
lret
arpl
les
adc
sarl
daa
jbe
sbb
cs
adc
dec
mov
pop
lret
aad
xchg
sub
jbe
ljmp
rol
pop
sub
sbb
punpckldq
rclb
jnp
push
hlt
adc
sub
mov
mov
mov
xor
mov
jmp
mov
jne
pop
push
fstps
scas
lret
add
jo
stos
add
in
sbb
pop
std
aas
jns
push
mov
lret
outsb
cmp
negb
rolb
xor
std
ljmp
mov
js
jne
out
adc
mov
mov
andb
das
nop
les
daa
fdivrl
setl
hlt
mov
mov
popf
movsl
xchg
mov
ljmp
cmp
cmc
push
lea
cmp
mov
jecxz
dec
xchg
fcomi
jmp
fs
popa
rolb
into
mov
sub
xchg
cli
mov
enter
jbe
mov
clc
cmp
or
shrl
mov
in
pop
jle
sbbl
sub
test
sahf
pop
jmp
cmp
cs
and
out
push
add
pop
mov
idiv
lock
sbb
cmp
iret
adcl
flds
cmp
mov
hlt
mov
cmp
dec
jae
scas
mov
int3
iret
lcall
ss
or
lds
ljmp
shr
jns
pop
repz
jle
sub
rcl
pop
dec
insl
test
and
xor
fcomip
mov
bound
jge
add
jl
inc
inc
xchg
xchg
roll
mov
aam
push
and
push
push
inc
lea
mov
stos
or
fstps
xlat
mov
jge
shrb
dec
mov
in
inc
iret
and
cmp
sbb
pop
jbe
out
sbb
in
sbb
xchg
nop
fcoms
and
jne
cmp
loopne
jle
jb
push
shrb
test
dec
outsl
stos
cld
xor
pop
push
movsl
popa
mov
ja
inc
nop
pop
pop
lods
popf
dec
hlt
xchg
sub
clc
rorb
or
lret
sub
pusha
ret
mov
sbb
mov
cwtl
leave
push
and
adc
jo
pusha
mov
sub
xchg
pop
sahf
mov
out
pop
aas
ret
daa
fistpl
push
imul
in
ds
out
mov
mov
xchg
mov
call
daa
push
dec
out
mov
fcoms
repnz
lahf
stos
cmpsb
fidivs
in
ss
sub
push
into
cmp
pushf
xchg
stos
mov
push
rorb
sbb
sub
cwtl
xor
push
lods
addr16
mov
pop
or
inc
fidivrs
dec
xchg
in
imulb
mov
jle
jo
movsb
xchg
and
pop
ds
add
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
sub
sub
xchg
push
mov
xchg
xlat
add
mov
ds
jno
movsb
setae
sbb
cmpsl
or
icebp
dec
ds
movaps
ficompl
cmp
sub
add
add
fnstenv
cmp
imul
dec
push
les
ds
mov
stos
lock
xor
dec
push
sbb
insb
fimull
dec
mov
mov
inc
cmpsl
mov
mov
pop
addr16
mov
push
or
sti
vpaddb
jl
xchg
fcmovbe
sub
gs
sbb
mov
dec
imul
pop
push
cmpsl
inc
imul
xchg
cld
jae
call
pop
add
xor
sub
mov
out
adc
sbb
mov
ljmp
xor
adc
jle
std
adc
in
push
xchg
mov
pop
inc
push
leave
mul
sbb
xlat
jp
jnp
sub
fisttpl
sub
mov
pop
in
arpl
or
icebp
ljmp
xor
pop
dec
outsl
fidivrs
aas
cmp
jne
xchg
mov
test
pop
cmp
or
test
bound
outsb
lret
jnp
mov
cmpsl
das
push
or
test
mov
popf
mov
mov
xchg
sub
push
xor
in
out
mov
sti
pop
and
cmp
jmp
aam
sub
lret
mov
inc
pop
or
cmp
in
int
mulb
testb
fnsave
sbbl
sub
mov
xchg
ljmp
bswap
adc
scas
jnp
xor
mov
jl
leave
xor
sub
pop
cltd
mov
xor
loop
out
cld
imull
jg
adc
ret
icebp
or
pop
stos
cmp
aaa
mov
sbb
xchg
jmp
and
ljmp
mov
pop
xchg
xchg
inc
in
lods
xor
and
add
arpl
es
sbb
fisttps
lds
testb
dec
jecxz
std
mov
cmp
popf
rol
bound
push
arpl
stos
incb
mov
push
test
xchg
jmp
nop
add
aaa
pusha
rcll
lret
int
push
test
decl
lock
inc
aam
out
sbb
inc
cmp
adc
dec
xlat
imul
arpl
cmp
sub
mov
add
div
mov
jmp
adc
inc
rolb
xchg
int
rcll
test
jg
mov
jge
mov
mov
xchg
in
test
push
pop
push
fisubl
clac
mov
repnz
mov
pop
jne
jg
fimull
sarl
pop
adcl
sub
cmpsb
ljmp
lret
push
or
pop
and
movsb
lods
mov
jno
jne
daa
dec
jle
adc
out
add
scas
sbb
xchg
adc
dec
addr16
sub
out
mov
sbb
andl
mov
hlt
mov
in
mov
out
mov
repz
aaa
jno
push
jnp
push
mov
and
and
enter
rol
insb
outsb
mov
dec
push
es
cmp
lea
and
dec
xchg
and
shlb
push
pop
xchg
add
jl
sbb
call
cmpsb
mov
jno
mov
push
or
daa
es
les
mov
push
mov
inc
mov
std
jp
dec
adc
and
xor
push
inc
push
test
push
sub
xchg
test
dec
jb
hlt
inc
inc
pop
leave
mov
and
aam
das
dec
loop
std
out
leave
scas
daa
inc
inc
daa
push
xchg
mov
or
mov
cmpsl
mov
inc
aad
adc
mov
mov
xchg
xor
push
insb
ljmp
fldl
fiaddl
fisttpll
lea
sbb
fidivrl
xor
push
push
imul
stos
or
ss
xor
aas
jb
add
xchg
sti
iret
xor
pop
bound
imul
ds
adc
add
std
mov
imul
repnz
pop
shlb
xchg
insb
cmp
ja
test
out
loop
bound
fstpt
aaa
jno
lcall
xchg
imul
xchg
xchg
into
shr
or
test
call
push
jmp
sti
mov
add
gs
nop
cmp
mov
dec
jbe
decb
mov
cmp
add
sbb
inc
sub
jl
push
fs
loope
mov
mov
das
cwtl
daa
leave
lods
mov
addr16
shl
mov
imul
in
mov
xchg
push
aaa
mov
mov
push
lds
inc
adc
orl
cmp
sbb
dec
je
pop
es
out
mov
shlb
adc
cmp
jbe
mov
roll
pop
scas
inc
inc
jp
rorl
xor
jmp
sub
mov
popa
pop
xchg
aas
pop
and
sarb
jle
jo
mov
ficomps
dec
loop
sub
ret
ds
adc
dec
fs
jg
pop
fs
push
inc
xor
inc
fdivp
ds
mov
outsl
jge
rcrb
xor
into
ret
mov
jmp
sbb
cltd
adc
jl
imul
andb
sar
or
pop
fdivrl
cmp
test
hlt
xor
or
adc
mov
ss
or
dec
rorl
clc
das
xchg
movsl
sub
incb
aaa
adc
adc
inc
pop
in
xor
sub
cwtl
fldenv
aaa
sub
cmp
jns
mov
shlb
xchg
ret
sub
inc
jb
inc
adc
adc
xor
repnz
sti
arpl
add
fnstenv
push
mov
in
int3
sbb
fisttpl
cmp
repnz
mull
in
iret
pop
aam
or
lods
nop
jbe
lcall
xchg
es
and
push
test
lods
loope
lea
mov
int3
mov
call
jne
xchg
mov
sbb
xchg
sti
cltd
xchg
into
lret
popf
movsl
or
and
sbb
cmp
cmpsb
xor
jl
sbb
jb
pop
adc
sar
cmp
sub
add
fsubrs
inc
mov
cmp
or
push
sbb
out
jmp
fdivrl
inc
or
out
stos
xor
dec
add
jnp
into
out
xlat
loop
fnstcw
sbb
sub
test
pusha
repz
imul
mov
mov
jmp
sbb
or
nop
leave
mov
mov
or
lret
pop
shl
mov
clc
je
mov
push
dec
cmc
jl
imul
das
dec
fidivl
fdivrs
inc
sub
or
sbb
pusha
add
aad
lea
fists
jmp
dec
fisttpll
mov
in
push
push
cmp
mov
call
jg
xor
add
int3
popa
repnz
add
cltd
mov
sarl
loop
test
xor
cmp
daa
andl
and
push
stos
sub
insl
or
arpl
call
add
sbb
std
sbb
cmp
lcall
xor
sbb
mov
icebp
in
popf
bound
cmpsl
push
lock
fdivrs
jge
mov
dec
mov
mov
mov
mov
mov
jmp
dec
fistpll
arpl
pop
jp
lods
mov
orl
jo
mov
cmp
jns
pop
popa
jae
dec
sbb
cmc
popf
scas
adc
or
pop
scas
push
inc
shll
js
pop
pop
adc
or
pop
rcrb
xchg
testb
insl
pusha
das
add
out
mov
jg
clc
inc
jecxz
js
lea
sahf
or
push
xchg
and
and
sub
movsl
pop
into
test
ret
dec
jle
mov
cmp
test
in
xchg
push
repnz
mov
fwait
sbb
mov
and
sub
jle
adc
pop
or
and
and
mov
add
jp
ret
xchg
mov
fldl
repz
fidivrl
pop
or
fnstenv
cmp
outsl
fs
aas
mov
and
pop
dec
aam
adc
pop
mov
in
xlat
adc
mov
jge
or
cli
stc
inc
rcrb
jmp
cld
data16
into
sbb
movsb
inc
fsubrp
add
dec
in
sbb
iret
ss
xor
data16
add
bound
ret
sub
mov
stos
leave
jl
pop
xor
jno
das
enter
test
or
int3
enterw
jno
in
hlt
xor
xchg
lods
cld
sbb
pop
les
insl
and
outsb
test
mov
arpl
test
shlb
mov
addr16
xchg
loopne
xchg
xor
xlat
ret
mov
fisubrl
xchg
jp
repz
sbb
pop
orl
test
aad
sbb
xor
arpl
cmpsb
pop
out
icebp
fisubrl
sahf
dec
dec
sub
jg
loop
push
push
mov
sbb
jns
xchg
test
mov
push
mov
mov
sbb
aad
and
ds
xchg
pop
pop
out
xchg
sub
test
insl
pop
dec
and
jnp,pn
mov
mov
inc
xchg
or
xor
cmpsb
test
scas
dec
int3
push
inc
cwtl
xor
ret
cltd
es
jns
mov
push
push
aaa
mov
shlb
sbb
add
data16
insb
mov
faddl
pop
addr16
mov
jb
or
movsb
frstor
jp
cld
mov
cmp
stos
cmp
pusha
rcl
jae
sahf
mov
pop
mov
pop
mov
mov
pop
push
sbb
xchg
xchg
xchg
mov
js
insb
xor
push
or
rorl
add
call
roll
imul
mov
xor
jmp
adc
iret
cmpsl
aad
jae
jl
jge,pn
mov
cmp
pop
jg
mov
lret
shlb
aam
mov
stos
je
mov
sub
mov
push
fdivrs
les
out
fbld
dec
pop
lret
inc
jo
movhps
hlt
pop
loope
out
push
out
and
mov
dec
jns
cltd
test
sub
outsb
mov
fistl
lret
icebp
lcall
fimull
xor
jae
cmpsb
xchg
and
js
push
in
mov
sub
xchg
rcl
shll
sbb
pop
pusha
add
cmp
and
xchg
sbb
leave
in
lcall
sarb
fistps
pop
jg
js
mov
enter
sub
int3
mov
cmp
jns
movsb
out
mov
and
enter
sub
int3
push
int3
test
lods
xchg
mov
in
movb
mov
and
and
or
fidivrl
cli
push
aam
mov
out
int
cmp
xchg
cmp
cmpl
inc
jnp
in
inc
xor
je
add
popf
stc
test
pop
les
inc
daa
jns
ret
les
decb
into
pop
shr
mov
dec
push
jne
mov
mov
xchg
mov
cmc
movntps
jnp
xor
cmp
mov
xor
in
js
mov
mov
dec
xor
ljmp
adc
iret
jge
jnp
sbb
je
mov
cmp
rcpps
test
lcall
loope
xchg
and
daa
cs
pushl
lcall
mov
lret
test
pop
xchg
xchg
push
loope
mov
test
and
inc
jecxz
fs
in
sub
in
mov
test
shll
daa
or
pop
cld
sub
pop
fisubrs
aam
and
leave
add
pop
out
arpl
imul
or
mov
cmp
aam
add
fldt
loope
mov
movsb
xchg
and
mov
in
cmc
and
movsl
movlps
jb
lds
inc
mov
test
jne
jbe
jno
mov
ds
pop
jb
das
pushf
mov
inc
scas
out
hlt
push
dec
lods
repnz
test
push
fwait
and
cmpsb
jno
cmp
aas
insl
dec
sbb
dec
out
popf
popf
or
pusha
dec
dec
jge
int
xchg
mov
inc
mov
test
cli
les
aaa
in
mov
addr16
or
xor
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
jmp
or
shll
jno
jmp
lds
jnp
adc
jo
jle
jo
cmpsl
imull
movsb
xchg
mov
movsl
adc
dec
pop
add
sbb
push
insl
out
dec
out
stos
hlt
dec
inc
out
rolb
jb
mov
iret
insl
mov
sbb
stos
addr16
or
andb
adcb
jecxz
inc
scas
int
mov
cld
xchg
lret
je
push
pop
inc
nop
loope
lea
ljmp
jp
gs
adc
jb
push
in
jge
fcomps
imul
pop
mov
add
and
dec
repnz
pop
inc
push
pop
xchg
shll
dec
jge
fcompl
and
rol
adc
mov
adcb
jnp
or
stos
mov
xchg
pop
xorb
jns
push
xor
add
lret
mov
cmp
inc
or
lods
popf
hlt
ds
stos
inc
jnp
pusha
je
dec
pop
sbb
mov
mov
test
mov
fidivrs
in
jp
out
lods
ret
or
push
subb
xor
inc
stos
cmp
repnz
mov
icebp
dec
mov
es
sbb
and
js
dec
std
add
pop
cmpsb
fisubs
dec
cmp
xchg
lret
enter
cltd
lock
mov
push
inc
sbb
std
in
dec
arpl
jno
ret
enter
dec
test
insl
daa
out
jecxz
push
cmp
add
add
adc
dec
jmp
into
arpl
jg
es
adc
xchg
fndisi(8087
mov
xor
movsl
mov
lcall
stos
lret
arpl
mov
repz
dec
icebp
mov
inc
ja
cmp
gs
sub
cli
dec
shl
std
or
outsl
pop
sbb
jae
addl
jne
pop
dec
mov
xchg
lock
lcall
ja
stos
xor
sbb
jp
enter
ds
inc
ficoms
xor
jl
insl
jge
mov
aas
dec
outsl
sbb
shlb
int3
mov
xorb
jg
aas
outsl
out
or
xor
push
inc
or
inc
rcr
cld
lret
das
mov
dec
fdiv
ljmp
mov
mov
enter
push
loope
inc
xor
ljmp
hlt
mov
sahf
orl
les
pop
imul
or
mov
es
jo
xchg
push
xchg
mov
mov
pop
lret
xchg
mov
pop
push
pop
inc
xchg
sub
jmp
cmc
icebp
lret
mov
test
jnp
jg
pop
adc
mov
fisubs
xor
or
sub
test
aas
mov
mov
and
pop
xchg
rcll
lods
mov
add
jbe
scas
movsb
mov
stos
or
sub
out
mov
xor
mov
sbb
mov
enter
push
fs
cmp
sbb
mov
aaa
imul
adc
xor
xchg
cmp
xlat
and
lods
add
lret
cs
test
ret
mov
pop
and
mov
xlat
mov
cltd
aad
xor
pcmpgtd
inc
jecxz
insb
test
movsb
fidivrs
shll
in
test
mov
inc
outsb
andl
nop
in
and
adc
mov
mov
ficoml
mov
xor
jno
adc
in
jo
inc
or
mov
lahf
sub
xchg
sbb
std
inc
mov
add
sbb
and
inc
dec
push
jge
mov
ret
and
and
mov
outsl
pop
or
in
push
mov
push
push
enter
lods
pop
mov
mov
jmp
ret
insb
pop
addb
shll
adc
push
std
mov
sub
mov
jb
jge
sub
imul
lret
sbb
dec
scas
frstor
xchg
in
sub
in
into
jg
lock
mov
lods
or
es
add
xor
int
imul
mov
fwait
aas
jnp
push
cld
orl
or
cmp
push
bnd
scas
jg
in
and
dec
push
mov
and
mov
sti
xchg
add
jbe
jae
mov
jns
mov
push
xchg
dec
popa
out
test
jecxz
addw
sbb
outsl
insb
mov
mov
or
mov
fcomip
ljmp
jmp
sahf
mov
test
mov
repz
ljmp
cmp
jge
leave
mov
sub
cmpsb
mov
sbb
xor
xor
and
fwait
movsl
xchg
dec
inc
and
pop
les
jae
inc
sbb
and
pop
movsb
xchg
shlb
mov
lock
mov
dec
popf
dec
adc
insl
jl
mov
sbb
inc
cmpsl
mov
sahf
dec
mov
shr
ljmp
lock
sbb
fidivrs
data16
stc
or
lret
jmp
cmc
std
fs
jno
mov
loope
sub
mov
xchg
jl
decl
movl
mov
dec
dec
or
nop
push
aad
ja
je
ret
orl
das
cmpsb
push
data16
into
mov
ret
push
jne
mov
cltd
cmp
sbb
mov
rclb
mov
fisubrl
in
cmp
sbb
in
pop
push
inc
shrb
dec
icebp
and
push
dec
push
jo
loop
sub
cmp
rcll
popl
push
iret
sbbb
xlat
sub
fnstcw
xchg
ret
dec
pop
test
ret
xor
pop
lret
lahf
add
iret
sub
and
adc
sbb
subl
cli
cmp
lea
inc
int
and
mov
push
mov
dec
push
loop
leave
outsl
fsubl
bound
add
cmc
sbb
cmc
icebp
mov
xor
and
call
pop
stc
movsb
je
bound
pop
jae
test
je
mov
les
shl
or
push
adc
test
jmp
lock
loopne
or
leave
fld
testl
roll
cwtl
jg
pop
sti
in
add
xchg
add
mov
push
push
insb
clc
rcrl
xchg
test
inc
jnp
xchg
int3
cmp
adc
push
xor
incb
negb
and
xchg
jno
ss
add
dec
std
fimuls
cwtl
jns
ljmp
inc
sub
and
stos
mov
cmp
ss
insl
test
gs
dec
out
and
adc
xchg
mov
lods
pop
mov
cmp
and
xor
popf
sbb
mov
xor
std
inc
je
sub
lods
imul
cli
sbb
imul
out
shll
cmpsl
idivl
insb
push
cmp
jbe
xor
ficompl
pushf
hlt
aam
cmp
or
push
adc
xchg
lods
aad
xchg
movsb
or
rclb
mov
xor
dec
sub
test
cld
mov
popa
jbe
push
cwtl
in
or
inc
jp
dec
push
push
inc
test
sub
lock
or
inc
insb
cmp
cs
cmpb
int3
mov
xchg
dec
lods
cld
aas
lret
push
mov
adc
out
sub
repz
test
xor
xor
es
mull
inc
mov
mulb
leave
cwtl
jecxz
or
call
inc
xchg
lahf
sti
mov
pop
xor
and
sarl
and
sti
ljmp
push
mov
sti
dec
mov
jmp
outsb
ds
loopne
outsb
outsb
mov
pop
repz
cmp
sbb
jo
jle
jo
mov
pop
pop
or
out
jns
xor
push
dec
iret
fnstsw
push
pop
sub
push
adc
pmaddwd
pop
jbe
jmp
dec
fiadds
popa
jnp
data16
rcrb
jl
lahf
notb
out
cltd
in
es
ljmp
js
scas
xor
lret
xor
fxch
or
popa
fldenv
int
inc
push
add
jle
dec
cmpsl
push
ss
xor
sbb
pop
arpl
in
xor
cmp
sti
mov
xchg
call
popa
ss
jl
and
sbb
sbb
cmp
imul
sbb
out
sbb
test
add
mov
jne
xor
or
pop
pop
sbb
pop
pop
inc
mov
mov
xchg
aad
ds
add
mov
sub
jns
lret
lahf
add
loopne
bound
das
jae
jg
in
jb
cwtl
lahf
mov
js
xor
xchg
add
and
int
orb
lods
push
or
mov
or
rorl
cmpsl
bound
pop
shlb
xchg
shrb
jo
cmpsb
clc
push
jecxz
lret
push
xchg
xor
daa
mov
inc
jg
loopne
pop
mov
inc
sbb
int3
scas
add
adc
cmp
les
mov
jbe
pushf
cmp
jp
xor
adc
daa
repnz
frstor
jne
mov
dec
dec
mov
stos
dec
jp
jbe
or
dec
aad
out
mov
and
int
pop
in
jae
mov
fmuls
pop
out
dec
arpl
and
sbbl
jo
or
sbb
push
push
cmp
xchg
inc
inc
jbe
xor
sub
add
or
out
fisubrl
inc
clc
fisubs
mov
mov
insb
es
test
imul
call
add
pop
jmp
pop
pop
and
and
mov
mov
ds
andb
or
sub
mov
adc
sub
ja
xchg
sar
add
das
sbb
xor
repz
jecxz
xchg
mov
idivb
rcr
fistpl
cmp
fisubrl
repnz
add
imul
add
xchg
push
xor
mov
jmp
cmp
push
add
data16
and
xchg
lcall
jle
jo
mov
test
jbe
push
pop
cmpsl
jae
pop
push
insl
popf
sahf
dec
push
xchg
pushf
xchg
in
and
jg
xchg
push
mov
imul
jg
xchg
bts
adc
jns
push
jge
or
jl
jge
std
cltd
mov
add
stos
aad
xor
and
pop
les
jmp
addl
aad
pop
stos
push
xor
dec
pop
mov
lods
mov
cmp
mov
cmp
mov
inc
lods
inc
shll
test
sub
call
xchg
pushf
imul
mov
mov
push
insb
mov
lahf
pop
xor
dec
mov
loop
mov
adc
les
dec
test
test
aam
add
xor
jne
subb
pop
sub
push
insb
jp
js
rcr
fsub
popa
add
loop
fdivs
outsl
pop
int
mov
lods
push
test
mov
mov
push
pop
push
idivb
fmull
pop
pop
push
cmp
repnz
add
repz
pop
divl
add
xor
push
cmp
jp
pop
in
jo
cwtl
loope
adcb
ljmp
sbb
call
pushf
pop
ljmp
mov
and
mov
popf
icebp
insl
jae
ds
out
add
sub
xchg
mov
mov
in
mov
xlat
hlt
enter
push
lahf
adc
push
and
add
sub
aam
push
mov
or
js
push
adc
lods
pop
mov
lds
in
cmp
sub
adc
add
test
sbb
pop
js
pop
mov
scas
adc
add
or
mov
mov
lods
jmp
cmpsb
push
inc
adc
and
hlt
dec
pop
cmc
cmp
dec
out
call
and
mull
cld
xor
push
data16
or
ja
movsb
adc
pop
faddp
jmp
or
jnp
test
loopne
loopne
xchg
clc
lods
jecxz
push
inc
mov
cmp
xchg
dec
fildll
repnz
in
cmc
mov
ljmp
sbb
sbb
lret
icebp
lods
les
xchg
sub
rolb
dec
sbb
mov
outsb
sub
scas
mov
in
daa
outsb
sub
mov
loop
adc
out
lea
ficoml
push
sub
add
push
mov
or
sbb
dec
jmp
fsubp
stos
mov
insb
leave
pop
sub
push
add
mov
inc
loope
or
mov
lret
mov
pop
jns
cmpsb
nop
js
pop
stos
cmp
push
les
into
push
or
xchg
hlt
sub
xchg
and
icebp
gs
mov
inc
repnz
gs
sti
jge
pop
lcall
mov
shrb
hlt
ljmp
in
push
mov
push
mov
jo
jae
dec
dec
iret
loope
push
into
sbb
adc
add
mov
arpl
xchg
rclb
sbb
jg
push
xchg
cmp
push
mov
jbe
and
aaa
pop
test
or
and
inc
mov
lock
adc
and
stos
into
daa
sub
lods
mov
jbe
fs
cmc
fcom
dec
jns
lret
ficompl
xor
rorb
inc
in
scas
in
movsb
add
es
push
cltd
jmp
mov
push
pop
loopne
cld
mov
icebp
fwait
dec
sbbb
pop
mov
push
testb
and
cli
push
pushf
adc
jmp
sar
and
in
inc
and
iret
mov
add
mov
inc
ja
jb
xor
lcall
mov
lock
fstpl
rcll
xor
ss
sbbb
mov
mov
leave
ds
sub
jp
sub
pop
ret
inc
mov
pop
cmp
jge
sub
add
push
push
cmp
dec
pop
mov
mov
je
cmpl
mov
add
cmpsl
mov
scas
outsl
pop
sub
das
xchg
pop
mov
mov
imull
lods
inc
push
repz
repnz
jae
sbbl
mov
jne
fiadds
shrb
mov
nop
bound
adc
ficoml
add
and
xchg
jmp
mov
add
fwait
in
out
pop
into
fs
shlb
jb
push
cmc
js
fdivrs
mov
popf
test
mov
or
ficoml
rorl
ljmp
pushw
jbe
rcl
dec
dec
sub
loopne
lea
dec
xchg
ljmp
rcr
mov
adc
cld
sbb
icebp
dec
push
out
addl
nop
lcall
pop
ret
mov
inc
pusha
push
loop
push
shlb
xchg
popf
xor
fucomi
inc
sti
and
push
xorl
in
andl
jp
sub
movsb
jnp
xor
add
pop
mov
pop
jmp
cld
pop
cmpsl
addr16
gs
mov
or
mov
jle
jo
inc
in
shr
cld
in
leave
mov
sub
popf
and
adc
or
lret
mov
ja
jnp
addr16
pop
in
xchg
sub
or
dec
popa
jp
cs
sub
push
pop
and
cmpsl
push
mov
inc
mov
fcompl
xor
dec
popl
lret
stos
mov
movsl
add
addl
ret
cmp
or
mov
test
lock
test
jae
aaa
push
mov
cltd
pop
out
pop
out
mov
dec
out
out
or
outsb
mov
or
scas
pop
test
jo
mov
call
push
pop
repz
movb
mov
sub
pop
pushf
mov
add
insl
sbb
xorb
xchg
out
shlb
jl
sbb
iret
clc
mov
fwait
sbb
in
xchg
popf
push
loope
mov
push
out
aam
sub
test
mov
rep
lock
inc
ljmp
sub
sbb
and
pop
adc
and
out
enter
subl
xchg
dec
push
fisubs
std
fisttpll
fadds
or
pusha
jae
and
jge
sahf
push
mov
hlt
push
jecxz
jmp
jmp
push
xchg
sub
sbb
cmpsl
ret
test
icebp
fisubl
inc
cs
and
sarb
dec
aam
loope
fwait
sbb
cmp
call
xchg
mov
xor
stc
mov
arpl
mov
cmpsl
fisttps
jbe
sub
negb
cmpsl
pop
xchg
add
imul
sbb
lods
add
fisubrs
cmc
sbb
mov
and
sar
and
fucom
mov
aam
sub
out
ficomps
cmpsl
xor
mov
or
push
cltd
cli
push
cmpsb
pop
mov
sub
sbbl
enter
cmp
mov
lods
in
adc
or
jnp
out
push
orb
in
adc
in
sub
or
jno
or
jns
sbb
cli
rol
jg
sub
test
pop
mov
add
loop
push
inc
daa
adc
out
adc
sbb
out
adc
rcl
clc
dec
and
test
lret
sub
sqrtps
mov
or
popa
dec
and
rcr
out
xchg
mov
out
aas
mov
cs
dec
or
jecxz
push
push
rorl
in
loop
cmpsl
shll
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
jmp
fisttps
jecxz
out
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
in
in
cld
jge
mov
fsub
add
mov
add
add
mov
inc
push
fisttps
test
fadds
jmp
fildl
inc
jo
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
ret
cld
incl
out
xor
mov
cld
jo
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
pushf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
cmp
pushf
or
enter
xor
pushf
inc
ds
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
pushf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
pushf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
bswap
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
les
mov
mov
cmp
mov
add
xor
pushf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
fs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
xor
pop
lods
incl
mov
pushf
jo
cmpl
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
pushf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
pushf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
fdivr
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
faddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jo
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
int3
jne
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
and
jo
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
pushf
inc
xor
pop
inc
shl
inc
sub
inc
add
add
loopne
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
leave
inc
add
rdpmc
sbb
mov
cmovne
jmp
inc
mov
sbb
mov
add
out
add
sub
add
jo
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
into
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
ljmp
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
pushl
lcall
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
wrmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
pushf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
or
inc
xor
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
call
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
pushf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pop
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
pop
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setl
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
add
add
enter
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
add
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
incl
jo
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
jno
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ds
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
pushf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
icebp
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
add
into
fs
mov
ret
add
add
add
ds
add
into
ret
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
cmp
fs
or
add
add
push
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
xor
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
add
add
lret
lock
clc
inc
lret
cmp
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
pushf
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
pushf
pushf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
pushf
add
clc
cmp
or
add
xor
or
lea
or
enter
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
mov
adc
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
add
pushfw
add
add
mov
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
aaa
inc
pop
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
pushf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
mov
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
in
into
inc
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
xor
fmuls
test
cld
or
dec
ret
push
inc
dec
mov
mov
push
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
pushl
in
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
push
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
cld
mov
xor
add
dec
jnp
mov
xor
add
mov
mov
xor
rorl
jb
add
ja
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
pushf
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
mov
mov
cmpb
add
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
xor
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
pushf
mov
jge
decl
