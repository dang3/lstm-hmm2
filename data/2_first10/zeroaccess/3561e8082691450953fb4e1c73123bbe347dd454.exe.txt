push
mov
sub
addl
push
orl
xor
sbbl
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
push
call
mov
dec
mov
jmp
mov
movzbl
push
orl
call
cmp
movl
jle
xor
jmp
movl
jmp
push
lea
orl
push
subl
push
call
movl
cmp
movl
je
andl
xor
movl
inc
movl
jmp
jmp
push
decl
push
push
call
movl
cmp
jne
movl
xor
movl
jmp
movl
jmp
xorl
call
test
movl
jne
andl
xor
movl
jmp
sub
movl
movl
adc
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
lea
mov
lea
mov
and
mov
mov
mov
mov
movl
cmpl
je
cmpl
jbe
jmp
push
call
mov
dec
mov
jmp
xor
add
movl
mov
mov
movl
lea
mov
cmpl
movl
jne
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
dec
xor
add
mov
mov
sbbl
mov
or
mov
movl
cmpl
je
cmpl
jg
jmp
push
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
xor
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
pushl
push
push
pushl
call
cmpl
jb
add
mov
mov
or
xor
add
mov
xor
mov
mov
mov
negl
mov
sbbl
mov
movl
movl
cmpl
je
cmpl
jg
jmp
push
push
push
push
push
push
call
xor
add
dec
mov
jmp
movl
movzwl
sub
movl
mov
adc
mov
mov
mov
movl
sbbl
movl
sub
movl
mov
xor
add
movl
mov
jmp
sub
mov
negl
xor
or
mov
lea
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
mov
negl
xor
orl
lea
movl
cmpl
je
cmpl
jbe
jmp
pushl
pushl
pushl
pushl
pushl
call
mov
dec
mov
jmp
mov
xor
lea
cmp
ja
mov
xor
mov
lea
push
mov
xor
lea
push
mov
pushl
call
jmp
mov
mov
mov
mov
mov
sub
xor
mov
mov
lea
mov
lea
mov
lea
mov
mov
mov
xor
add
xor
sub
sbb
xor
xor
mov
mov
cmpl
jne
cmpl
je
mov
xor
add
mov
xor
sub
sbb
xor
xor
mov
cltd
sub
sbb
xor
xor
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
xor
add
xor
sub
sbb
xor
xor
mov
xor
sub
sbb
xor
xor
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
xor
add
mov
mov
cmp
jne
mov
xor
add
push
push
pushl
pushl
call
push
push
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
add
cmp
je
movl
movl
movl
movl
lea
push
lea
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
push
mov
add
push
lea
push
call
jmp
lea
mov
lea
mov
mov
mov
mov
push
mov
pushl
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
push
mov
add
push
lea
push
call
mov
mov
pop
leave
ret
push
mov
xor
andl
pop
ret
push
mov
sub
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
push
orl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
add
xor
add
addl
xor
and
mov
xor
sub
movl
sbb
subl
xor
xor
xor
xor
adcl
add
adc
mov
movl
mov
mov
movzbl
mov
mov
cmp
movl
jne
mov
movl
cmp
je
mov
movl
cmp
movl
je
mov
xor
add
jmp
int3
xor
push
fs
je
orl
ret
sti
fwait
jnp
jnp
stos
cwtl
jnp
rol
mov
fcmovnb
cmc
fucomi
ror
ror
int
sar
incb
lret
or
enter
mov
not
lods
out
ror
aam
ret
ret
mov
idiv
or
leave
aam
or
add
in
icebp
sarl
jmp
out
aam
ret
neg
fcomip
xlat
add
enter
mov
call
mov
idivb
push
add
pop
ljmp
les
lock
mov
xlat
jecxz
in
in
jecxz
icebp
stc
call
or
repz
loop
lods
shrl
mov
out
loope
shl
rcr
cli
or
in
fldz
add
mov
mov
mov
aad
lock
add
lret
fsubr
out
sti
leave
add
int3
leave
call
aad
aad
cmc
int3
mov
ffree
stc
sti
clc
fadd
push
call
xlat
loope
scas
aad
in
leave
lock
lret
ret
into
icebp
stc
fcmovu
rcl
fcmovu
out
out
in
cld
fldcw
out
lods
mov
mov
hlt
fnclex
or
lock
loopne
in
stos
shl
loope
icebp
leave
mov
mov
mov
cli
stc
lret
add
inc
add
push
or
jmp
int
in
mov
fidivrs
int3
hlt
neg
rcr
or
out
pmaxsw
mov
out
cmc
clc
mov
aad
sar
lock
cmc
std
lock
out
int
fadd
in
ffree
ror
sti
int3
icebp
lods
mov
mov
add
lock
or
ljmp
shll
mov
call
neg
cmc
enter
add
fldl
or
fld
add
repnz
aad
imul
mov
mov
xlat
mul
into
icebp
aad
icebp
add
std
cld
fsubr
loop
add
mul
out
loopne
in
div
cli
into
loope
out
mov
jecxz
fsub
loop
loope
int
call
loop
mov
mov
in
aam
add
add
add
shr
or
rorb
ffreep
in
scas
in
leave
mov
into
leave
iret
jmp
jmp
fst
movb
out
add
or
fucomip
lret
not
jecxz
ljmp
rcl
cmc
add
hlt
rol
push
or
push
stc
faddl
jmp
mov
lods
mov
aam
clc
fst
std
jmp
xlat
fadd
clc
jmp
fsub
leave
in
loop
in
rcl
int
iret
fsubr
mov
aad
or
out
cli
push
call
imull
in
jmp
xlat
int3
in
shl
mov
mul
aad
or
ljmp
hlt
lock
fnstcw
int3
fucomp
sarl
or
or
out
in
int
loope
lock
rcl
int3
rcl
jmp
aad
ret
test
leave
scas
ljmp
mov
shr
iret
mov
shl
lret
rcl
jmp
jmp
loop
cmc
aad
hlt
repnz
clc
les
in
shr
mov
loope
add
jecxz
stos
shl
shr
fidivl
mov
call
fcmovu
repz
out
out
in
jmp
lret
ret
mov
fucomip
mov
leave
int
out
neg
add
loope
clc
sti
fcmovnu
fmulp
call
int
lret
rcr
jmp
lret
not
fmul
rol
add
jmp
add
ljmp
mov
mov
clc
add
out
repz
in
jmp
loopne
sti
int3
call
rcr
fucomi
fcmovbe
sti
std
add
fisttpl
les
jecxz
ljmp
int
cld
mov
stc
loope
pop
cli
xlat
faddl
push
int3
clc
fucom
mov
shl
divl
jecxz
fmulp
out
loope
xlat
aad
aad
faddp
fcomp
in
rol
repnz
hlt
shr
leave
fdiv
repz
not
add
rcr
out
add
idiv
jmp
jmp
ffree
into
leave
xlat
repz
mov
into
xlat
sti
fcmovu
not
loopne
cli
in
add
lret
scas
shrb
out
rol
jmp
cli
iret
mov
ret
fdivrp
aam
int3
call
mov
shl
mov
clc
fdiv
xlat
out
out
neg
stc
fisttps
into
fisttpl
lret
shr
ljmp
rol
int3
cli
in
ret
cld
fucom
stc
jmp
or
cld
cli
add
repnz
jmp
out
leave
out
lock
out
cli
jmp
repnz
mov
lret
jecxz
into
mov
lret
mov
mov
mov
fnstsw
out
add
lret
loope
int
ror
mov
mov
add
jmp
lock
shl
add
add
out
push
cld
out
scas
scas
int
loopne
int
repz
sar
fcmove
hlt
ret
test
rcr
fistpll
add
int
mov
sar
mov
mov
shr
int3
jecxz
in
add
stc
add
pop
lret
mov
scas
lock
mov
cli
iret
ljmp
repnz
fcmovbe
in
fisttps
fsubrp
pextrw
mov
mov
into
jmp
ljmp
sti
in
shl
ret
aad
add
int3
jmp
leave
iret
mov
out
ffreep
icebp
xlat
iret
int
rcr
mov
fdivp
sti
leave
cld
fadd
mov
icebp
lds
std
in
leave
mov
cld
call
rcr
leave
clc
clc
out
cli
clc
push
shl
repz
jmp
idivb
xlat
test
clc
add
prefetchw
or
imul
ret
neg
fcmovne
icebp
in
aam
int3
fucomip
add
cld
push
fimuls
clc
decl
in
test
out
ret
call
clc
icebp
iret
out
clc
flds
rcr
jmp
jecxz
add
add
mov
lret
mov
fnstcw
stc
rcl
enter
add
flds
call
loop
int
cmc
out
lret
sti
int3
out
mov
mov
pop
fdivr
fsubr
add
test
scas
into
out
lret
ror
in
cmc
iret
fadd
ret
std
testb
test
ret
out
fistpll
aad
in
pop
fcmovnu
loop
repnz
add
jmp
out
mull
shll
mov
add
out
ffreep
mov
mov
mul
in
lret
jmp
out
repz
leave
enter
add
add
mov
fucom
int
ror
ljmp
sti
add
flds
rol
jmp
rol
mov
imull
ljmp
filds
fiaddl
cmc
fucomip
idiv
enter
ret
mov
lret
rcr
fcmove
in
fidivrs
pop
fsubp
lret
ljmp
mov
ret
mov
ljmp
neg
add
rcr
aam
add
filds
fst
mov
in
loopne
icebp
iret
xlat
int3
xlat
lret
mov
fcmovbe
loopne
fneni(8087
incb
jmp
jecxz
mov
loopne
out
jmp
ror
hlt
sti
repz
repnz
stc
enter
sarl
loop
mov
enter
fdiv
loope
mov
aad
loopne
fucomip
jmp
lods
shlb
mov
loopne
clc
mov
call
or
into
ret
loopne
mov
lret
call
cmc
call
in
or
hlt
or
out
cld
test
call
repz
cmc
add
or
pop
ljmp
shr
loope
mov
in
dec
fdivp
std
call
loopne
add
std
cld
out
add
loop
loope
lods
in
mov
aam
mov
into
int3
faddp
add
out
fadds
out
iret
fstp
leave
in
mov
xlat
jecxz
add
lock
aad
fdiv
ljmp
into
ftst
out
shrl
stc
divb
call
not
or
loop
push
push
leave
jmp
fmul
rcl
aad
rcr
out
repz
mov
out
idiv
out
jmp
ror
mov
shl
repz
shll
repnz
in
mov
lret
push
or
shl
repz
mov
repnz
shl
loope
pandn
add
test
sti
lock
aad
lods
idiv
icebp
ret
in
cmc
shl
mov
lret
in
out
mov
rol
out
hlt
call
iret
sar
mov
add
std
add
aam
clc
fisubrs
div
int
neg
aam
not
fst
sti
jmp
sti
std
lret
jmp
fxam
fdivrs
in
in
aad
not
jmp
mov
inc
jmp
or
or
jmp
rol
int3
ror
mov
cli
mov
cld
loopne
flds
fucomi
fdiv
stc
fucomi
int
in
ror
jecxz
in
lock
hlt
sarb
ret
mov
or
add
add
add
leave
mov
lock
mov
in
call
aam
jecxz
jecxz
in
out
out
jmp
test
mul
imul
mov
iret
rcl
sarl
out
out
fcmovu
jmp
icebp
int
cmc
lret
in
out
leave
lret
idivl
fmuls
or
dec
mov
ffree
icebp
shlb
aam
jmp
repz
cmc
fmul
or
loopne
shrl
int3
aam
mov
fsubrp
lock
shl
add
push
out
decb
ret
repz
hlt
in
iret
fcomip
out
int
mov
out
mov
stc
shrl
lret
loopne
into
aam
shl
stc
enter
int3
shl
in
in
jmp
or
adc
fsubr
mov
out
icebp
fcomp
aam
hlt
filds
add
fsubp
add
add
adc
shr
ret
fnsave
shl
loop
jmp
clc
std
stc
shrb
enter
aam
sarl
add
loopne
std
add
fsubr
icebp
jmp
jecxz
icebp
les
out
lock
int3
sti
loope
add
shl
imul
add
or
rcll
repz
into
icebp
in
aad
into
fst
shr
inc
inc
fadd
into
fnclex
jmp
out
jmp
leave
jmp
scas
mov
int
mov
cld
mov
lret
int
cli
loopne
mov
call
out
out
hlt
mov
shlb
sti
pop
fcmovnb
push
fisttps
mov
in
aad
jmp
aad
cmc
leave
aad
mov
cli
xlat
out
les
cli
or
add
in
aad
les
fdivr
in
stc
add
cld
add
ljmp
call
jmp
std
mov
mov
jmp
in
loop
lret
in
ror
shl
mov
icebp
mov
aad
cli
add
or
fxch
in
in
int
in
test
hlt
mov
out
fdivrs
icebp
add
cmc
or
enter
loop
repnz
mov
add
clc
mov
jmp
in
fmulp
incb
in
out
jmp
shr
out
cmc
in
ror
ror
div
mov
loope
sti
or
add
cli
hlt
stc
out
adc
int
mov
not
xlat
in
mov
mov
shl
loopne
in
or
sti
test
or
add
ret
shl
jmp
sarl
mov
lret
add
mov
aam
vpmuludq
out
ror
cmc
cld
fcmovbe
fdivr
repnz
out
enter
fldln2
iret
out
rol
call
ljmp
aam
in
test
in
out
fadd
movsb
aad
loop
cmc
into
neg
mov
into
in
push
fldl
out
fisttpl
in
mov
mov
aam
out
mov
neg
rol
add
fdivr
cld
out
incl
icebp
into
div
fdivl
ffree
cli
cld
add
mov
pop
fcmovb
or
out
add
mov
shr
mov
hlt
les
ljmp
rcr
aam
add
pop
ret
or
push
call
imul
mov
imulb
int
ret
cmc
cli
out
or
fnsetpm(287
add
xlat
repnz
ljmp
fcmovnu
repz
loop
repz
std
rcl
lret
add
in
jmp
repz
les
in
mov
loope
enter
lret
fsubp
mov
hlt
fstpt
ror
clc
repnz
rcr
leave
add
add
sti
adc
in
in
icebp
aam
cmc
aad
loop
sti
fcmovbe
add
test
fcmovu
or
add
enter
in
in
mov
ret
mov
in
call
mov
mov
call
mul
add
fadd
fcmovb
sti
ljmp
mov
iret
icebp
mov
out
not
sti
repnz
jecxz
repz
mul
out
std
lret
rcl
loop
int3
fsubrl
into
int
into
jecxz
jecxz
sti
aam
ret
div
or
jecxz
mul
mov
in
les
loope
iret
loopne
fsub
testl
add
into
rol
shl
in
repz
mov
stc
mov
jecxz
fnstsw
jmp
out
ljmp
lods
cmc
mov
clc
call
pop
aad
ret
fxch
cli
out
add
test
in
call
call
clc
add
in
cli
out
adc
mov
shlb
ret
ret
fdivrl
lock
in
cld
fdivr
shlb
loop
leave
in
lock
stc
xlat
testl
icebp
call
lret
clts
jmp
mov
in
aam
in
out
mov
fdivp
into
sar
lock
clc
add
xlat
fimull
iret
loopne
ljmp
aad
fidivrl
jecxz
stc
hlt
clc
in
aam
or
hlt
fdivr
jmp
repnz
mov
cli
mov
jecxz
sti
or
dec
fmul
in
stos
leave
out
xlat
repnz
cli
aam
add
mov
add
lock
stc
loope
clc
enter
shlb
aad
in
cmc
repz
iret
leave
iret
mov
mov
fnclex
cld
add
ror
mov
out
out
hlt
mov
filds
loopne
hlt
loope
sysret
jecxz
shr
iret
out
lret
out
mov
lods
hlt
int3
call
aad
rcl
out
testb
filds
call
loope
ret
repz
in
in
iret
std
icebp
ret
repnz
mov
or
lret
or
pop
push
in
in
mov
mov
inc
into
mov
add
fadd
clc
stc
movb
xlat
in
lret
clc
mov
clc
repz
in
push
leave
xlat
xlat
std
push
mov
int
out
loope
mov
cli
repnz
call
hlt
ljmp
fmulp
test
in
repnz
into
out
fptan
icebp
not
rcl
icebp
repz
loope
jmp
add
or
add
mov
out
leave
cmc
lock
std
clc
mov
in
xlat
mov
out
lods
shl
rol
mov
shll
jmp
ret
inc
in
add
jmp
scas
repnz
shl
in
in
hlt
in
in
aam
add
lock
lret
aam
push
jecxz
or
jmp
ror
mov
rcr
sti
in
lret
rol
out
add
iret
out
in
jmp
idiv
enter
loopne
int
into
icebp
sti
leave
mov
sti
sti
aam
stc
repz
fdiv
fdivrp
fcomp
or
push
jmp
fisubrl
in
out
into
mov
xlat
mov
cli
out
div
in
add
pop
or
add
pop
push
in
mov
call
mov
in
imul
hlt
add
mov
icebp
loop
add
out
or
ljmp
icebp
mov
jmp
mov
leave
mov
fcmovnb
in
aam
jmp
add
in
lods
in
movsb
lods
call
jmp
hlt
into
mov
std
add
fucomip
ffreep
in
scas
test
mov
aam
add
idiv
jmp
call
repz
fsub
into
shl
rol
sar
fidivrl
cld
rcl
into
xlat
hlt
add
fst
jecxz
add
mov
loop
mov
into
out
out
std
div
add
hlt
ret
lds
ljmp
lds
leave
mov
lods
in
shl
jmp
call
in
ret
fcomp
ret
add
loope
ror
out
out
repnz
int
ror
mov
lock
add
or
in
loop
loop
scas
lods
movsl
int
in
out
rcl
in
mov
idiv
testl
call
int3
lret
lock
mov
enter
hlt
repnz
fadd
out
lret
stos
mov
repnz
call
icebp
fdivl
rcl
in
pop
test
add
iret
or
leave
out
shl
scas
cli
out
fcom
iret
enter
rcr
loopne
std
add
add
xabort
enter
in
mov
into
mov
sar
icebp
add
aam
out
or
lock
in
in
push
adc
mov
aad
imul
mov
in
ror
cld
cld
cmc
mov
add
add
or
adc
lret
mov
mov
mov
sti
out
dec
push
or
cmc
loop
shrl
mov
fcom
add
mov
hlt
in
repnz
in
shr
shl
test
ror
out
idiv
ret
ljmp
pavgb
repnz
lods
icebp
idiv
aam
rol
in
shl
clc
aad
test
jecxz
les
scas
mov
repz
pushl
fcmovnu
out
cli
add
fcmovu
add
enter
in
jecxz
enter
mov
repnz
out
in
mov
fstp
stc
cmc
add
add
test
cld
in
lods
call
mov
clc
mov
add
mov
cmc
loopne
or
mov
int
aam
aam
dec
aad
mov
loopne
push
out
pmaddwd
or
call
in
aam
xlat
mov
cli
ret
rcr
in
jmp
test
in
out
int
test
scas
in
aad
aam
rcr
sti
lock
push
out
lret
mov
mov
int
shll
add
ffree
clc
out
fimuls
ffreep
cld
int3
ljmp
lods
mov
in
mov
in
into
mov
sti
cmc
or
fldpi
out
push
out
mov
into
mov
cli
lods
icebp
enter
lock
movb
fdivr
into
incb
add
into
faddp
out
ror
neg
jmp
ret
icebp
fdivp
loope
mov
fmul
pop
in
loope
lret
rcl
lods
iret
jmp
lret
aad
out
add
hlt
lret
leave
cld
fadds
rcr
jecxz
jecxz
aam
loop
mov
fsubr
ljmp
add
xlat
loopne
or
mov
loopne
mov
fstp
icebp
add
fsub
add
fisttps
aam
in
repz
xlat
sti
into
jmp
repnz
int
sti
add
loopne
std
iret
in
ret
lods
loopne
jmp
loope
icebp
leave
in
mov
cld
mov
jecxz
mov
leave
rcl
mov
jmp
mov
mov
rcr
into
aad
out
repz
repz
out
enter
lret
sarl
mov
cli
xlat
in
stc
mov
int3
add
fldl
add
vmovlps
loopne
iret
call
fucomp
icebp
mov
add
filds
or
leave
out
test
ljmp
out
aad
mov
iret
decl
rcr
movb
jmp
or
mov
call
idivl
mov
stc
ret
stc
clc
fxtract
fisttpl
lods
ret
out
jmp
rcl
clc
in
fucomip
mov
cli
rorb
in
or
add
in
push
fsub
in
in
mov
rcl
sti
rcr
into
mov
rcr
cmc
out
or
or
in
call
faddp
int
mov
mov
rcl
lret
into
mov
rcl
loopne
or
loopne
cli
jecxz
shr
mov
in
test
fcomp
repnz
out
not
lock
cld
push
add
into
add
repnz
repnz
cmc
mov
fcom
mov
in
mov
mov
in
into
or
fnstcw
out
jmp
repnz
mov
stc
mov
loope
pop
std
loop
lret
mov
aam
lock
mov
shl
or
jmp
cli
add
loope
ror
mov
loopne
rcl
mov
test
shl
stc
in
aad
in
out
cld
or
iret
loopne
mov
in
mov
div
int3
leave
sarl
into
rcr
fdivr
sti
rolb
in
mov
ret
leave
out
out
cli
int3
call
in
fdiv
shl
or
shl
pmulhuw
jmp
out
lret
ret
ljmp
shll
cmc
hlt
repnz
stc
lret
sti
stc
aad
cmpsb
iret
scas
repnz
int
aad
jmp
fcmovnbe
idiv
out
ret
rolb
lret
fmulp
fmulp
out
ror
mov
aad
ret
std
fadd
add
jmp
shl
loope
shll
fdiv
shl
mov
clc
sti
mov
iret
les
leave
lods
in
lods
cmc
shl
rcr
call
lock
filds
xlat
cmc
jmp
out
leave
adc
out
shr
mov
ret
jmp
out
mov
int3
enter
jecxz
loopne
aad
mov
into
ljmp
loopne
repnz
mov
imul
repnz
rcr
ret
loope
out
fdivrp
or
ret
in
fcomi
aam
repnz
in
add
ret
xlat
movb
loop
rcr
ljmp
into
in
repz
out
mov
aad
xlat
ret
add
out
stc
add
rcl
lods
mov
mov
icebp
stc
lock
fucom
loopne
lret
in
in
sti
push
fsubrp
ret
rol
lods
shr
clc
sti
faddp
jecxz
leave
in
loope
out
sti
les
into
fucomi
into
rcl
mov
lock
out
jmp
mov
fsubp
out
cld
aad
fsub
or
mov
out
aad
cmc
fcomp
mov
fcmovne
add
ljmp
mov
jecxz
mov
shr
loopne
aad
aad
mov
in
enter
or
repz
lret
out
in
scas
int
std
mov
sti
std
ret
repz
fisttpll
fcmovb
add
ror
lret
mov
mov
rcr
out
icebp
add
in
or
loopne
or
imul
leave
out
aad
mov
aad
mov
in
cld
out
add
fldl
out
add
rol
add
std
add
out
shrb
ret
aam
aam
mov
push
sarl
or
loope
adc
ret
out
xlat
ror
fidivl
mov
mov
cli
aam
fdiv
jecxz
loop
mov
int
iret
stc
out
iret
hlt
mov
ret
rcl
loop
les
aam
iret
add
mov
mov
jmp
fdivrp
shl
repnz
aad
hlt
into
repz
cld
mov
int
ljmp
std
mov
out
jmp
or
jecxz
shl
repz
test
in
out
aam
std
ljmp
call
aam
out
stc
in
std
cld
repnz
mov
std
idiv
add
ljmp
lret
out
in
vpor
cli
icebp
out
mov
add
mul
loopne
mov
mov
xlat
hlt
int
into
int3
aad
sar
neg
fcomi
out
aam
aam
enter
fsubrp
loope
mov
int3
jmp
int
jmp
in
aam
idiv
fxch
aam
ljmp
movb
mov
repnz
rol
cmc
leave
f2xm1
mov
stc
loopne
sar
clc
add
repz
mov
jmp
mov
ror
lret
ljmp
clc
loopne
cmc
lret
or
or
into
call
in
mov
rol
jmp
lds
in
into
pop
or
test
mul
imul
fbstp
faddp
loopne
pop
paddd
fcmovne
or
stos
out
repnz
int3
shl
mov
mov
repz
out
incb
out
ret
test
call
repz
shlb
shl
shll
rcr
sti
mov
dec
cld
les
loopne
leave
lret
fdivl
not
mov
mov
loope
std
flds
or
out
add
loop
ret
mov
fcmovnb
int
in
hlt
aad
hlt
stc
sar
mov
push
leave
cld
int
repz
out
mov
mov
std
add
xlat
int3
fldl
pop
fcom
fsubr
aad
pop
add
rcr
not
in
loope
sar
std
in
sar
ljmp
mov
iret
jmp
mov
int
out
aad
test
idiv
icebp
ret
out
in
cld
ret
add
out
int
mov
mov
mov
cmc
enter
loope
mov
rcl
sar
clc
add
add
or
loopne
mov
mov
int3
mov
cmc
hlt
push
rolb
out
int
rol
mov
faddl
mov
cmc
int
sti
leave
out
lret
test
in
cli
rol
fxch
mov
imull
imul
mov
cld
mov
xlat
jmp
add
leave
leave
mov
hlt
mov
cli
mov
out
rol
ret
clc
fcmovnbe
add
in
int3
loope
lods
mov
ror
leave
xlat
fcmovnu
rcl
sti
fdivrp
in
lock
cli
clc
jmp
jmp
mov
in
call
xlat
leave
lret
stc
mov
mul
repnz
stc
mov
in
lret
lock
div
cmc
std
add
fisttpll
stc
in
in
lret
lret
lods
repnz
stos
jecxz
cli
iret
in
in
stc
std
jecxz
lock
out
repnz
lock
or
push
jmp
jmp
repnz
repz
in
loope
std
cli
loop
loop
or
xlat
stos
mov
xlat
enter
cmc
aam
loop
idiv
stc
mul
cli
or
fldl2e
adc
fsubrl
in
mov
aad
jmp
fcomip
ret
idiv
pop
in
std
rorl
in
mov
iret
in
in
iret
ljmp
cld
int
mov
imul
add
int3
add
scas
out
stc
mov
in
loop
icebp
add
ret
ljmp
in
int
leave
lock
test
mov
stc
jecxz
mov
aad
out
fstp
adc
test
mov
repz
mov
stc
cmc
fucom
ror
loopne
xlat
lret
loopne
aam
loope
call
lret
mov
in
mov
cli
repnz
add
movl
cli
out
shrl
stc
mov
rcr
aam
ret
dec
loopne
loope
in
loop
cld
clc
int
fadd
lock
repz
les
fcomp
rcl
aad
fsubp
ret
cmc
sti
lret
clc
lret
mov
iret
into
sti
ror
mov
mov
add
lds
pmulhw
into
out
shr
lret
fucomi
cli
leave
mov
mov
mul
ret
add
mov
in
add
xlat
ror
imul
lret
mov
mov
mov
in
ljmp
jmp
mov
aad
sti
clc
leave
cmc
aad
sti
loope
std
icebp
repz
pop
cmc
hlt
hlt
leave
add
fsubrp
hlt
lods
mul
rol
lret
lret
add
bnd
lret
or
pop
jmp
into
loope
cmc
mov
stc
rol
mov
sarl
sar
out
idiv
jmp
or
pop
in
in
jmp
lret
int3
fcmovu
enter
std
mov
fcmovnu
aad
cld
std
jecxz
enter
fst
rol
hlt
aad
sti
in
aam
stc
leave
ret
rcl
in
lret
rorl
ret
mov
rol
int3
ret
mov
stc
ret
jecxz
clc
mov
fadd
into
push
icebp
loopne
jecxz
in
mov
lret
fdiv
xlat
sar
cld
fcom
add
loopne
out
shr
call
imul
stos
mov
lock
mov
in
int
hlt
in
icebp
test
sti
std
dec
iret
pop
lds
loope
mov
int3
clc
into
sti
cmc
mov
or
stc
flds
cld
push
int3
adc
fsubr
lret
mov
test
jmp
ret
add
mov
or
or
fxch
adc
lds
bnd
jmp
cld
mov
repz
lret
out
jmp
test
lret
ljmp
xlat
pop
fcmovbe
aam
mov
fldlg2
shl
lret
cmc
aad
test
aad
in
div
std
mov
fsubp
ret
vpmulhuw
fcomi
sti
in
mov
mov
mov
fidivrs
fnclex
add
loopne
add
int3
into
pop
call
fmul
out
cli
fstpt
aam
mov
hlt
or
add
cld
or
into
stos
mov
lret
fcos
rcl
mov
fsub
loopne
faddp
add
aam
loope
ret
fucomp
mov
bnd
clc
int
out
shr
rolb
lock
or
pop
out
icebp
iret
scas
loope
rcl
cli
iret
fcmovnb
fstpt
ret
lds
std
jmp
out
loope
loope
mov
call
repz
int3
shl
push
add
lret
hlt
lret
fildll
lods
in
fmul
mov
fsubrp
out
cli
jecxz
ror
fdivp
sti
out
jmp
mov
cmc
enter
mov
aam
roll
add
ljmp
out
loope
lret
mov
sti
stc
hlt
icebp
clc
aam
in
sti
repnz
add
aad
std
xlat
or
sti
in
jmp
icebp
ret
lret
mov
mov
std
mov
sti
cld
or
iret
enter
cld
rol
into
mov
fdivs
mov
stc
rolb
loopne
fsub
into
adc
stos
scas
mov
int
shr
loopne
mov
sar
aam
into
icebp
stc
sti
push
clc
pmuludq
or
fsubrl
jmp
mov
std
aad
mov
loopne
cmc
mov
lret
ret
into
in
fldlg2
mov
jecxz
call
xlat
out
shr
fcmovu
aam
int
add
mov
lods
mov
lret
iret
jmp
out
call
loope
loopne
push
or
or
repnz
shr
in
shll
add
rcr
mul
shrb
mov
sar
in
aam
cli
out
lock
flds
enter
test
neg
fcmovnbe
in
in
hlt
hlt
mov
push
in
add
loope
cli
loop
in
lret
loopne
in
call
stc
ror
repz
fisttpl
add
add
or
mov
lea
mov
mov
xor
sub
sbb
xor
xor
mov
xor
sub
sbb
xor
xor
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
je
mov
xor
mov
lea
mov
xor
add
imul
mov
mov
mov
mov
jmp
mov
jmp
jmp
mov
pop
leave
ret
push
mov
jmp
in
sbb
in
sub
jnp
jnp,pt
inc
stos
cwtl
jnp
stos
cwtl
jnp
ret
jecxz
fadds
neg
in
out
add
mov
out
rcl
lret
in
iret
mov
icebp
int
mov
loope
or
mov
hlt
add
mov
out
in
in
jmp
ror
xlat
loope
out
loopne
xlat
out
shl
fsubp
add
cli
or
jmp
leave
fptan
clc
fucomip
mov
out
in
cld
fstp
fdiv
loop
enter
into
sarl
fidivrs
fdiv
add
std
cli
pop
loop
adc
jmp
ljmp
stc
lret
cld
cld
in
lret
push
lret
into
or
mov
out
mov
in
enter
sti
into
mov
hlt
in
out
loope
aam
or
repz
mov
mov
cmc
lret
xlat
loope
loop
jecxz
loopne
rcl
fdivr
les
ret
rep
fdivr
fdiv
f2xm1
ret
mov
or
or
or
add
mov
xlat
mov
leave
in
call
aad
lret
jmp
iret
pop
shl
mov
enter
ror
fnstcw
mov
fdiv
aam
stc
xlat
or
or
test
mov
in
neg
fidivs
push
mov
or
decb
ljmp
int
out
out
mov
int3
icebp
mov
mul
fidivrs
cmc
ljmp
scas
out
shlb
f2xm1
out
out
div
inc
icebp
leave
aam
iret
stc
cld
or
mov
jecxz
out
icebp
mov
mov
add
aam
xlat
loop
repz
aad
cli
loop
loop
enter
into
lods
mov
leave
icebp
std
enter
mov
out
int3
add
fadds
in
stc
into
cld
cmc
shlb
xlat
mov
fsubp
xlat
sar
or
jecxz
scas
iret
test
jmp
int
in
aad
fcom
mov
neg
jecxz
push
stc
rol
shl
stos
jmp
lock
mov
ljmp
incl
in
fcomp
loopne
leave
fimull
sarl
mov
mov
out
mov
add
or
ljmp
jmp
shl
jmp
out
repz
rcr
rcr
neg
sti
rolb
leave
add
sti
in
stc
clc
lods
int3
shl
hlt
mov
mov
ljmp
iret
stc
in
movl
leave
into
into
faddp
int3
out
mov
loope
mov
icebp
out
std
call
ret
pop
fxch
out
lret
in
in
loope
movsb
shlb
mov
aad
repz
mul
rcl
xlat
jmp
cli
iret
jmp
loop
hlt
aam
in
ljmp
loope
cld
mov
add
or
ret
lret
lret
repz
out
pop
loop
loope
add
call
vcmpss
int3
shl
sti
mov
call
enter
push
cmc
mov
iret
in
shl
into
fnsave
lret
ftst
lock
fcmovu
hlt
mov
push
or
pop
add
fiadds
add
mov
mov
fidivl
iret
mov
mov
fisttpll
add
add
or
rcl
lret
aad
into
lock
xlat
mov
call
icebp
in
add
add
out
shr
repz
out
out
enter
aam
aam
sti
mov
in
mov
in
in
ljmp
mov
enter
in
jecxz
into
neg
aam
faddp
not
jmp
out
in
in
loope
mov
mov
aam
in
sti
lock
add
fcmovnbe
ffree
ljmp
call
lret
mov
int
rcr
out
call
out
sar
test
mov
aam
mov
jmp
out
mov
in
add
add
cli
add
add
cli
scas
out
mov
shl
repnz
fidivs
repnz
idivb
or
shl
int
aad
in
call
sarl
int
push
filds
decl
adc
test
icebp
call
mov
fdivrp
fadd
ret
mov
loop
std
or
out
loopne
xlat
jmp
shl
shl
cld
ljmp
mul
mov
ffreep
fcoms
ret
int
loopne
mov
mov
out
in
fsubr
sti
hlt
add
int3
cld
iret
mov
icebp
out
call
clc
aad
mov
rolb
loop
loopne
push
repz
mov
mov
divb
jmp
shl
out
fcomi
cli
clc
add
push
out
loope
in
inc
jecxz
ret
loope
sarl
out
in
aad
rcr
into
out
shl
lock
clc
lds
in
shlb
mov
stc
repnz
mov
sar
push
out
leave
fadd
cld
into
call
shr
mov
divl
repz
loop
std
pand
push
or
ret
shll
shll
add
mul
pop
out
or
inc
or
std
or
call
out
leave
lret
cld
mov
loop
aad
clc
jmp
repz
jecxz
leave
divl
mov
fcmovnu
lret
add
std
mov
jmp
in
push
add
mov
xlat
mov
call
enter
aam
cld
in
in
iret
cld
call
out
out
icebp
rcr
shlb
clc
hlt
int
mov
add
push
in
dec
or
lods
jmp
shrb
fidivrl
fnstcw
jecxz
fisttpll
clc
int
lock
scas
lds
lock
int3
out
cli
fld
fsub
or
leave
out
leave
repz
in
rol
out
ljmp
stc
rol
rcr
add
cmpsl
ror
in
loopne
mov
les
jmp
aad
repz
rolb
pop
aam
jmp
lret
or
cmpsb
mov
mov
lret
mov
rol
shl
add
add
lret
in
fcmovnu
out
rol
shl
mov
mov
lret
fdiv
lock
repnz
xlat
or
out
aam
in
out
leave
iret
sti
in
mov
lret
mov
add
ret
mov
filds
or
fiadds
ror
test
lret
lret
mov
mov
in
add
lock
fiaddl
cld
cld
add
adc
stc
jmp
in
icebp
mov
int3
sarb
fdivrp
pop
add
jmp
push
std
or
leave
fisubrs
shr
aam
fcmovnu
in
add
add
cmc
mov
out
leave
jmp
fcmovbe
int3
loopne
int
mov
int3
fcmovnu
or
stc
aam
in
in
out
adc
leave
lods
out
scas
aam
in
in
icebp
mov
aad
add
ret
in
loopne
out
shl
into
into
lock
mov
fcomip
incl
std
mov
call
out
ret
fsub
in
mov
fsubr
out
mov
rcr
add
cmc
ret
jmp
fbld
ljmp
roll
loope
test
cld
add
int
add
test
in
rcl
enter
in
iret
faddl
mul
repz
out
in
or
or
fcmovb
iret
mov
lods
iret
mov
int3
in
add
add
iret
mov
lret
add
loope
in
loope
jecxz
ret
mov
fldlg2
fmul
rcl
loope
add
hlt
rcl
lret
std
add
enter
scas
lods
loop
cli
clc
sarb
fptan
push
idivl
cld
fucomip
jmp
lret
into
loop
fldcw
loop
int3
enter
cld
or
add
ljmp
ret
mul
cli
out
repz
lock
mov
repz
ljmp
jecxz
fsubrp
mov
xlat
repnz
cld
fdivp
fadd
loope
not
shl
jmp
aam
iret
or
stc
adc
mov
shrb
cld
ror
hlt
hlt
repnz
cli
sti
sarb
mov
stc
in
jmp
add
sarl
or
jmp
add
in
ret
mov
icebp
enter
out
idiv
shl
div
add
std
jmp
enter
add
mov
out
repz
mov
clc
iret
mov
out
neg
stc
std
iret
ret
cld
out
test
div
jmp
dec
into
add
stc
out
out
loop
shl
mov
shr
int
movsb
leave
icebp
repz
in
jmp
not
pop
icebp
shl
ljmp
loope
add
loopne
into
mov
iret
ret
mov
mov
out
enter
fcomip
rcl
sti
out
enter
out
cmpsb
movsl
divl
in
xlat
mov
repnz
mov
lock
fsin
jmp
loope
mov
call
out
shl
aad
stc
jecxz
repnz
xlat
sti
add
stc
std
fimull
out
clc
into
mov
out
mov
cli
shl
fsub
mov
jecxz
div
loope
testb
push
enter
rcl
aad
out
leave
in
cmc
mov
fst
rcl
jmp
in
xbegin
mov
rol
ret
mov
clc
mov
jecxz
in
cmc
roll
pop
or
or
loop
or
loopne
imul
aad
out
dec
mov
in
out
add
leave
lock
enter
out
mov
int
mov
lds
int3
fcomp
jecxz
xlat
out
rol
ret
or
add
jmp
test
call
in
repz
out
dec
stc
cmc
xlat
roll
call
lret
scas
sarb
jmp
mov
hlt
jmp
lock
sarl
cli
fstl
or
enter
hlt
jecxz
aad
fmul
aad
clc
sti
repnz
mov
fucomip
leave
out
in
ffreep
shr
leave
mov
cli
lret
in
jecxz
std
into
loope
push
mov
hlt
bswap
into
cld
add
loop
out
in
jmp
add
ret
cli
add
loope
add
test
in
cld
shl
shr
ret
in
in
in
mov
flds
repz
sti
add
clc
stc
loope
add
jmp
test
mov
mov
std
sti
ret
out
hlt
fcmovne
adc
int
rcr
mov
jecxz
int
jecxz
add
xlat
enter
enter
shl
fmul
into
shr
out
mov
enter
xlat
ret
loopne
shr
loope
adc
mov
out
mov
jmp
idivl
fyl2x
fcmovnu
in
dec
fsubr
lds
jmp
loop
aad
mov
in
leave
lock
cmc
icebp
in
fsubrp
out
mov
out
in
jmp
enter
lods
mov
repz
int3
fdivrl
aam
in
pop
scas
in
out
repnz
out
out
fmulp
loope
aad
sarb
jmp
adc
repnz
mov
ljmp
sarb
jecxz
add
out
std
add
fdivrp
shl
icebp
ror
shr
mov
cli
fistpll
mov
cld
lret
fcmovnbe
iret
or
into
fld
lock
mov
in
int
lret
divb
ret
faddl
lret
cli
std
fnstsw
repz
mov
lods
mov
icebp
fiaddl
cli
leave
stc
into
or
in
aam
cli
ror
stc
jmp
cld
push
shl
clc
fdivr
push
loope
rol
into
jmp
enter
lock
ljmp
sti
std
jecxz
lret
fstp
lret
out
aad
test
mov
rol
mov
out
stc
in
int3
out
lret
mov
aad
mov
in
leave
clc
iret
rcl
mov
mov
cmc
fmuls
out
add
sti
or
mov
leave
into
fidivrs
repz
loope
icebp
cld
ror
jmp
or
jecxz
call
out
mul
scas
call
flds
std
loopne
rol
fst
jecxz
fmul
jmp
mov
mov
fcmovnb
repz
mov
lret
sarb
in
sti
rcl
out
mul
clc
sar
rol
lret
repz
mov
jmp
mov
loopne
loope
loopne
lock
stc
add
ret
movsb
xlat
ljmp
mov
enter
loopne
add
stc
mov
bswap
cmpsb
loope
aad
icebp
lret
idivl
rol
mov
cmc
aad
enter
in
mov
enter
mov
sarl
mov
loopne
out
leave
add
jecxz
mov
xlat
aad
cmc
mov
ror
fdiv
rolb
out
not
out
idiv
cmc
fcmovne
hlt
in
in
int3
mov
mov
in
ljmp
fcomp
sar
loop
or
out
filds
push
repnz
out
lods
ror
aad
lock
repz
fst
sar
mov
aam
add
in
or
shr
imul
lock
xlat
repnz
sti
loop
mov
fdivr
fcom
add
jmp
in
mov
loope
hlt
mov
mov
fstpt
hlt
fld
psubsw
loopne
add
rol
out
loopne
cmc
in
mov
cmc
fninit
push
fadd
mul
jecxz
in
aad
std
loop
ror
mov
int3
repnz
stc
cmc
aam
in
lock
out
lds
sar
ror
enter
repz
repz
xlat
stos
loop
xlat
enter
stc
cld
in
out
ror
out
aam
cld
lret
pop
add
in
imull
mov
mov
in
fdivrl
repz
clc
fmull
in
iret
in
ret
ffreep
mov
out
lret
lock
leave
fincstp
add
rol
add
loope
add
add
ret
hlt
leave
adc
aad
mov
in
mov
ret
into
iret
hlt
repz
cmc
hlt
fisttpl
hlt
loope
out
add
jecxz
test
cmc
in
fst
lock
add
mov
jecxz
pop
jecxz
leave
mov
cmc
int
mov
repz
out
iret
fidivrs
loope
fdiv
lds
inc
ret
loope
call
out
out
out
test
hlt
hlt
mov
enter
in
cld
add
out
repz
mov
mov
into
shl
fcomi
out
fdivp
sar
add
in
lret
fchs
fdivrl
mov
shl
fcomip
call
iret
xlat
out
mov
fiaddl
lret
movlps
jmp
aad
fcmovnbe
in
mov
mov
stc
incb
fiaddl
fxtract
in
fucomip
pop
out
jecxz
jecxz
mov
fcmovnbe
fcmovbe
mov
fxch
fdiv
int3
loope
fcomip
out
aam
clc
jmp
fucom
leave
lock
fidivrl
in
mov
add
hlt
rol
fndisi(8087
add
shrb
fcmovne
stc
in
int3
repz
repz
out
fdivp
std
lock
add
lret
stos
lods
mov
shl
icebp
mov
mov
ret
aam
out
lret
in
int
push
fxch
fstp
enter
mov
out
sti
aam
lret
ret
vcvtpd2dq
iret
loopne
hlt
loope
loopne
fmulp
leave
int3
icebp
ror
fbstp
neg
cld
mov
rcl
leave
hlt
clc
cmc
fninit
jmp
out
hlt
cmc
stc
jmp
fucomip
aam
hlt
loope
xlat
cld
lock
or
mov
or
jmp
shr
rcl
rcr
in
add
mov
into
cld
xlat
sarl
jmp
jmp
or
lods
mov
ljmp
mov
xlat
fnsetpm(287
les
mov
int3
call
enter
mov
lock
leave
enter
stc
add
aad
out
lret
into
int3
out
repz
enter
ljmp
aam
rolb
fcmovnb
lret
or
fld
iret
or
repz
int
lock
sti
out
mov
fsubr
repz
out
repz
lods
in
frstpm(287
call
mov
mov
add
add
add
or
int
iret
div
in
aad
mov
mov
loope
repz
hlt
div
jmp
in
pop
fsub
icebp
ret
mov
out
lret
hlt
add
ret
not
clc
loope
std
sti
call
in
mov
int3
out
lock
in
mov
in
clc
ret
clc
cli
div
cld
cli
icebp
cli
ret
out
or
sti
hlt
flds
mov
shrb
fidivrs
int3
pop
aam
cld
stc
or
in
in
int
lret
rol
mov
cli
aam
shl
jecxz
add
fyl2xp1
or
push
fsub
loope
enter
in
repnz
ror
repz
loop
rcr
add
in
in
loop
mov
enter
in
lret
enter
repnz
ret
or
fstp
test
call
in
mov
fadds
repnz
lret
or
fst
mov
mov
int
shlb
call
in
aam
out
dec
xlat
flds
or
mov
ret
out
out
leave
sar
not
clc
enter
cld
stc
add
incl
enter
in
cli
sti
lret
leave
push
rcr
cmc
fdivp
pop
in
fucomi
or
fimull
enter
into
add
ret
mov
mov
repz
icebp
ffree
add
clts
or
or
add
fbstp
mov
cli
clc
out
cmc
int3
ret
fstpt
std
aam
pop
fbstp
mov
shl
out
div
ror
add
shl
add
loope
std
or
fsubrp
jecxz
scas
in
movsb
ret
cmc
lods
lock
fsub
fdivrp
dec
mov
hlt
lock
shr
aad
add
loop
call
in
not
iret
in
lret
mov
std
in
jecxz
call
loopne
mov
enter
mov
repz
mov
loop
add
fadds
leave
repnz
shlb
test
aam
mov
enter
fadd
loopne
add
jmp
or
into
enter
mul
mov
mov
shl
mov
fld
loopne
into
stos
repz
out
call
mov
repnz
fdivr
loop
std
push
loop
jmp
pop
int
xlat
iret
xlat
shl
hlt
rcr
mov
fsubr
jmp
mov
add
or
loop
clc
or
scas
scas
out
repnz
fxch
in
rcl
repnz
mov
in
hlt
in
fadd
fsub
or
loope
int
lret
rol
test
lret
add
out
pop
roll
test
cli
or
mov
test
stc
mov
rcr
jmp
add
lret
fiadds
int3
icebp
mov
repnz
jmp
cli
loope
fnstsw
lret
lret
enter
cli
fnstcw
div
in
mov
jecxz
out
sti
aad
std
rcr
aam
les
out
or
iret
out
in
out
xlat
in
in
int
fst
repz
xlat
not
in
idiv
mov
fucomp
jmp
lods
int3
shl
ljmp
mov
lret
mov
add
testb
testl
jmp
jmp
scas
enter
mov
xlat
int3
loop
iret
pmuludq
clc
fucomip
shrb
mov
test
repz
mov
jmp
jmp
out
iret
mov
jmp
in
in
in
shr
out
iret
testl
sti
cmc
ret
shl
call
mov
icebp
hlt
enter
lock
lret
clc
mov
cli
lar
in
or
loopne
mov
in
shll
cli
loope
fiaddl
repnz
out
jmp
fmul
jmp
hlt
in
repz
mov
mov
out
int3
aam
add
add
in
fadd
loop
in
shl
ljmp
mov
jmp
in
mov
fcmove
aam
out
mov
call
int
mov
cli
fadd
aam
push
icebp
push
pop
aad
fucomi
ret
ret
in
shr
mov
stc
into
out
fcmove
mov
mov
mov
jmp
fsubrs
mov
rol
enter
mov
fstpt
cli
fsubr
lret
ffreep
add
scas
loope
sti
xlat
imul
std
fmulp
fildl
lock
into
mov
fucomp
iret
in
icebp
mov
leave
mov
int
stc
sti
call
shl
fsubrp
add
cld
loop
jecxz
clc
lret
cmpsb
fucomp
into
jmp
rcl
mov
sarl
stc
loope
lret
aad
jmp
out
in
out
repz
leave
aam
jmp
out
loop
rolb
fsub
or
int3
ljmp
hlt
aam
out
idiv
cmc
loop
loope
rcl
div
in
out
push
into
shl
ret
ret
shl
int3
clc
fcmovnbe
sarl
icebp
sar
hlt
fstp
fdivrp
loope
add
lret
ljmp
out
mov
cld
jecxz
div
or
fiadds
loop
enter
in
shll
lods
rcl
call
lock
cld
fdivr
rol
out
out
scas
mov
call
lret
hlt
shl
fstpt
hlt
or
or
cmpsb
rcr
scas
icebp
xlat
int
int3
mov
rcr
faddp
fdivrp
fcmovb
add
or
ffreep
lods
stos
repz
jmp
lods
ror
rcr
jecxz
loope
icebp
xlat
loop
or
repnz
mov
rol
aad
call
out
aad
ret
add
int
loopne
mov
rcr
leave
in
mov
add
or
or
aam
sti
int3
enter
lock
in
enter
aad
fcmovu
shr
int3
roll
fnsetpm(287
ret
in
add
or
ljmp
shl
mov
iret
fdecstp
shll
int
sar
les
in
stc
push
in
shr
iret
lret
out
fst
ror
shr
aad
hlt
fiaddl
add
sar
add
push
or
in
mov
jmp
repnz
out
mov
mov
add
int
int3
out
mov
mov
mov
sar
shl
mov
testl
or
lods
lds
lret
hlt
cld
fmul
aam
fninit
out
or
loope
rorb
sti
adc
out
into
lret
xlat
xlat
mov
fcmovu
mov
add
cli
add
mov
out
int
fldln2
lock
in
aad
repnz
fldl
pop
fstp
jmp
mov
icebp
shl
repnz
mov
not
loope
shl
out
rol
div
loopne
lar
stc
test
sti
not
mov
hlt
test
cld
idiv
cmc
jmp
loope
inc
iret
out
clc
xadd
out
aam
out
clc
fcmovnu
lret
loope
push
mov
mov
or
xlat
repnz
loop
in
int3
sarb
fadd
in
aam
shl
loope
aam
decl
in
mov
shl
fcmovbe
out
mov
dec
cld
rcr
loop
xlat
jecxz
push
pop
fninit
call
fmul
loope
repz
mov
mov
in
vcmpngeps
ljmp
ret
mov
iret
jecxz
hlt
lock
enter
add
pop
shl
add
add
push
loop
in
loop
loopne
fst
in
mov
in
cli
rcl
ret
fcmove
add
fmul
repz
jmp
int3
ror
lock
add
ret
out
into
leave
int3
lods
ror
lods
mov
icebp
mov
jecxz
out
mov
idivb
jmp
shlb
icebp
stc
lods
jmp
jecxz
repz
or
jmp
pop
adc
adc
fucomp
mov
ret
ljmp
mov
roll
add
out
loopne
cmc
out
out
int3
or
enter
mov
iret
mov
testl
in
ljmp
add
repz
mov
repz
mov
jecxz
fprem
add
int3
shr
out
lret
sti
int3
clc
hlt
repnz
in
ret
out
ljmp
fisttps
into
loopne
shr
cmc
lds
repnz
lret
ffree
loopne
mov
leave
std
or
test
stos
shll
lret
cmc
std
out
std
or
cli
int
push
jmp
mov
lock
cli
in
sti
lock
aam
aad
icebp
jecxz
add
fsubr
push
or
jecxz
in
ljmp
mov
out
leave
in
out
fmulp
sarb
leave
int
fcmove
in
mov
shl
out
repnz
iret
in
pop
mul
fucomip
xlat
stc
iret
add
fucomp
shl
out
ror
int3
imul
call
rolb
mov
cmc
loop
fldl
in
add
fmul
loop
call
out
sti
fdivp
repnz
jecxz
call
ret
aam
incb
add
test
out
out
cmc
stc
ljmp
repz
shl
aad
or
cmpsl
jmp
enter
mov
sarl
sar
add
or
jmp
mul
shl
lods
out
jmp
icebp
fdivrs
fmuls
sti
ret
or
mov
into
lods
int3
in
aad
int3
in
hlt
neg
testb
add
aad
cmc
loop
aam
into
call
mov
sar
mov
into
sar
std
aam
add
out
add
sti
add
add
in
shr
cmc
jmp
fldl2t
int
push
add
aam
jmp
psubsw
scas
mov
mov
loop
sti
fcmovnbe
mov
in
ljmp
shl
fcmovnbe
add
lods
ret
xlat
ror
hlt
mov
lods
into
in
fdecstp
mov
in
fcomi
cmc
aad
std
repz
repnz
mov
shr
fcmovne
fldl2t
mov
mov
fimuls
jmp
adc
iret
mov
mov
aam
std
fdivr
leave
mov
ljmp
std
cld
or
mov
shrl
leave
hlt
fidivrs
mov
rcr
ror
push
or
lret
int3
enter
lods
mov
rcl
icebp
repnz
int
ljmp
ret
xabort
testb
add
push
test
lret
aad
ljmp
sti
in
add
mov
incb
out
faddl
iret
int3
cli
loopne
jecxz
lock
in
fcmove
enter
mov
repnz
icebp
cmc
add
loop
in
std
loope
scas
ljmp
icebp
scas
ljmp
rcr
mov
out
or
mov
out
stc
iret
mov
int3
shl
pop
mov
mov
iret
fdivrl
repnz
idiv
icebp
jmp
repz
fdiv
shl
lret
fld
out
or
ret
repnz
shl
out
leave
icebp
out
mov
aam
fiadds
ljmp
or
in
ljmp
clc
repz
fsubr
mul
cli
in
add
or
leave
in
repnz
cmc
int
out
mov
clc
mov
cli
out
out
lock
cld
iret
or
fucom
or
loop
mov
cmc
mov
lret
add
fisttpll
jmp
rcr
push
push
loopne
rcr
mov
repnz
in
rcr
in
sti
shl
neg
mov
pop
loopne
clc
out
lods
into
repnz
aam
shr
mul
std
repnz
repnz
dec
shl
or
lret
in
frstpm(287
loope
mov
in
mov
mov
std
into
cld
idivb
in
lret
xlat
or
fcmovb
ret
iret
jmp
fcom
fsubp
aad
out
clc
rcl
in
icebp
in
shr
iret
into
hlt
hlt
call
testl
repz
ret
ret
int
imul
mov
add
call
sar
out
add
out
iret
loop
in
cmc
mov
idivl
icebp
loope
clc
shl
clc
rolb
shr
jmp
jecxz
loop
jmp
neg
rcr
ror
out
cmc
mov
mov
shl
jecxz
aam
in
fldln2
int3
mov
mov
loop
shl
mov
leave
sar
neg
sti
lret
stc
add
fnstsw
in
shl
sti
out
xlat
hlt
aam
fld1
xlat
frndint
fsubp
incl
fcmovnu
test
loope
add
lds
clc
into
ljmp
mov
call
leave
jmp
leave
int3
ljmp
mov
in
fnstcw
add
add
jmp
into
lock
mov
icebp
les
shlb
in
call
add
ljmp
in
shl
sarl
shlb
movl
loope
std
or
repz
mov
lock
mov
mov
iret
sarl
rcr
std
lret
or
leave
in
sarb
icebp
sti
mov
xlat
repnz
cld
add
test
faddp
adc
out
shrl
mov
std
into
sarb
out
shl
decl
aam
fucom
std
adc
shlb
enter
out
mov
iret
xlat
in
cld
or
lret
call
lret
cli
loop
into
mov
int
aam
mov
fistpll
mov
add
mov
int
push
stos
fsubr
leave
imul
fcmovnbe
out
shl
idiv
cli
hlt
sar
not
repnz
hlt
jmp
inc
fsub
cmpsl
out
int3
ror
test
sti
loop
in
xlat
into
test
jmp
std
sti
out
int3
mov
cli
out
div
mov
shr
fadds
in
idiv
or
fsub
into
shl
lods
out
jmp
sti
mov
fcmovnbe
lock
jmp
sti
cld
iret
loopne
or
int
sti
mov
rcr
xlat
int3
aad
cli
fdivr
cmc
loop
add
hlt
hlt
add
cld
stc
repnz
out
repz
in
repnz
jmp
add
test
or
decb
add
lret
ljmp
lret
sti
out
fdivrl
mov
add
iret
push
or
fsub
xlat
in
rol
mov
xlat
mov
out
sar
jmp
jmp
loope
cli
repz
cmc
jmp
lret
mov
in
ror
in
rol
mov
dec
jecxz
lods
cmpsb
out
lods
lret
mov
shll
std
loop
incl
icebp
fdivr
sar
sar
std
jmp
enter
repnz
iret
repz
repz
ret
icebp
aam
ret
repz
add
fisttpll
fmulp
jecxz
lods
repz
mov
loopne
mov
ljmp
or
rcr
add
in
add
out
in
lock
mov
lret
sti
aad
in
out
fsub
cli
in
ffree
in
sar
iret
filds
psllw
lret
mov
shl
loope
mov
fcmovnb
ror
cli
sti
or
out
in
enter
f2xm1
into
repnz
int3
cmc
cmc
out
repnz
mul
push
loop
stc
fmuls
bswap
fdivl
in
out
mov
out
repz
neg
jmp
ljmp
leave
fcmovb
in
in
cld
mov
ret
inc
call
add
loopne
mov
mov
call
clc
clc
clc
int3
idiv
mov
psubsw
add
push
movl
decl
movl
orl
lea
incl
mov
decl
mov
movl
movl
sub
mov
incl
mov
orl
mov
subl
xor
sbbl
sub
movl
sbb
xor
xor
movl
mov
mov
movl
cmpl
jne
movl
cmpl
jne
sbb
mov
andl
mov
xor
sub
jmp
mov
push
outsl
jbe
loope
inc
pushl
fnstcw
jnp
test
call
scas
mov
mov
push
mov
std
out
loop
out
mov
int3
int3
loopne
leave
aam
into
clc
fldlg2
shl
out
fcmovnu
loop
fisttpl
or
fsubp
rcl
int3
lods
int3
in
loopne
in
out
icebp
fdivp
mov
in
mov
iret
lret
bnd
sar
shl
ljmp
loope
add
testb
pop
cli
loopne
scas
loop
mov
mov
mov
lods
lds
mov
fadd
ret
shl
lret
fxch
clc
push
cld
fld
cmpsb
mov
shr
ljmp
fucomip
fidivrs
cli
shr
push
leave
push
or
push
repnz
lods
mov
shl
repz
in
int
lock
ret
lock
aad
cld
sti
push
jecxz
rcl
fmul
iret
stc
clc
fsubrp
cld
lock
in
loop
add
fdivrl
out
cld
fmulp
out
mov
ljmp
fcomip
cld
cli
fldl
fsubp
xlat
in
loope
loopne
in
out
out
in
frstpm(287
cli
out
fucomp
out
add
fcomp
add
cmc
faddl
fcomip
vpsrlq
loopne
repnz
mov
aad
loop
add
add
stc
or
into
add
lock
in
aam
fld
clc
iret
shr
int3
test
lock
add
loop
mov
out
or
scas
int
mov
not
hlt
jmp
out
aad
mov
add
fcmovnbe
loopne
loop
stc
ficoml
ljmp
cli
in
out
clc
enter
mov
sti
push
cld
loopne
in
ljmp
ret
lret
int3
fsubrp
jmp
fcmovnu
idivl
add
in
lret
decb
adc
iret
into
sar
int3
lret
add
mov
add
lret
icebp
add
cld
iret
out
or
les
mov
jmp
aad
mov
int3
repz
stc
loopne
ret
add
wbinvd
jmp
test
ljmp
movl
mov
ret
jecxz
aam
mov
jmp
aam
aad
loop
repz
add
into
out
leave
or
lret
cli
sti
vpsubw
lret
fnstcw
push
cli
lret
loopne
jmp
div
ljmp
fmulp
roll
rcl
jecxz
cld
repz
jmp
jmp
clc
out
fucom
fistpll
out
jmp
shr
fucomi
jecxz
rcl
loop
fcmovnb
fcmovb
add
fmul
int3
icebp
loopne
fdivl
out
fst
in
hlt
shl
hlt
rolb
jecxz
cld
loope
adc
shr
sarb
aam
sar
shl
sarl
cli
movb
ret
int
adc
ret
scas
lods
out
out
in
out
aam
sarl
ret
repnz
std
sar
div
out
call
jmp
iret
out
sti
fidivrl
rcl
add
shr
ljmp
loopne
shl
lods
cmc
mov
mov
aam
rolb
cld
rol
loopne
add
add
shrb
loopne
aad
stc
fucomi
cmc
in
into
sti
cld
repz
rcr
std
int
repz
ljmp
leave
shl
repnz
out
cld
cli
add
push
sarl
mov
mov
not
ljmp
out
or
add
enter
clc
repz
in
lock
int3
shlb
fnstsw
mov
faddl
fdivr
ret
lret
lret
int3
ljmp
in
fsubrp
shl
ret
cli
rolb
cmc
fsubp
cmc
fsubr
rolb
fcmovnu
clc
into
or
int3
out
mov
ret
jmp
ror
ljmp
cli
mov
sti
lds
in
lret
dec
scas
out
int3
repnz
imul
fsubr
hlt
lock
xbegin
cmc
push
fiadds
sti
into
test
iret
divl
int
mov
ror
int3
std
clc
cld
in
or
fsubr
add
leave
jmp
mov
int
mov
jecxz
repz
cmc
add
xlat
in
fisttps
jmp
jecxz
div
in
xlat
mov
lret
lock
rcr
fiadds
std
loopne
cli
cli
out
in
enter
not
jmp
in
jmp
filds
aam
mov
aad
rcr
in
hlt
call
in
in
lods
jmp
cli
enter
repnz
in
aam
or
sti
pop
fdivr
enter
fnsave
out
in
repz
std
push
lock
or
add
cmc
add
adc
test
test
loopne
enter
fsubr
mov
in
lock
add
movl
lret
leave
fadd
cmpsl
out
mov
neg
lret
mov
add
sarb
mov
fcmovu
push
fucom
clc
mov
shl
shl
call
in
mov
idiv
add
add
loope
mov
add
cli
leave
int
scas
out
rol
mov
lret
in
mov
in
clc
shl
fsubrp
jmp
add
int
shl
mov
ret
repz
mov
aam
add
fsubr
repz
lret
or
jmp
icebp
shl
xlat
ffreep
fistpll
fsub
loop
fadd
fmull
loopne
std
ret
mov
mov
mov
lock
ror
ret
loop
push
out
loope
out
hlt
mov
mov
mov
incb
mov
ror
clc
or
in
out
mov
shl
rol
jmp
mov
sarb
mov
hlt
ud0
clc
fisttps
pop
ret
call
sti
loop
ror
ljmp
mov
cmc
cld
pop
mov
enter
shr
jmp
clc
repz
ret
int3
fadd
add
loope
cli
fdivrp
loopne
loop
cmc
rol
fcmovbe
in
out
jmp
rcr
idiv
bnd
or
shl
mov
mov
lock
jmp
fsubr
stc
ret
add
vpminsw
out
fadds
iret
or
aad
xlat
lret
in
fadd
cld
mov
int3
ret
ret
in
rolb
out
or
cli
shr
icebp
mov
in
shl
in
out
in
cmc
mov
out
std
loope
shl
fstp
out
enter
enter
fucomp
mov
imul
fistpll
add
neg
cld
int3
add
lock
or
jmp
loope
xlat
ret
iret
shr
int3
mov
sar
rcr
out
in
jmp
hlt
or
fcmove
out
int3
rcl
ret
int3
vpsubd
jmp
out
faddp
neg
fdivrl
rolb
inc
lret
out
lods
ffreep
lret
lock
lret
mov
xlat
fcmovnbe
add
jmp
xlat
iret
out
icebp
call
lret
hlt
into
iret
cmc
mov
xlat
add
add
fisttps
add
add
ljmp
hlt
in
xlat
in
out
iret
int3
in
mov
mov
rcl
rcl
enter
mov
sar
out
fdiv
icebp
hlt
mov
fabs
iret
fdivrl
loope
fmul
flds
loopne
ljmp
hlt
shr
vpaddb
hlt
sar
out
mov
roll
fdivp
ret
in
loope
in
out
not
mov
out
cmc
lock
iret
out
pop
mov
add
fucomip
fisttpll
in
shlb
mov
fldl2e
leave
shl
out
sar
ret
pop
rorl
fadd
mov
pop
fdiv
loope
ret
jecxz
jmp
out
add
enter
shl
test
ljmp
mov
call
mov
int3
stc
rol
in
not
or
mov
lock
loop
out
fcmove
shl
rcl
mov
jecxz
iret
idiv
repnz
out
rorb
or
flds
loopne
enter
ljmp
mov
ffree
fcomp
lret
into
int
fstp
fsubrs
hlt
mov
mov
add
loope
aam
rcr
add
fldl
aad
int
call
aam
int3
test
in
neg
add
rol
stc
idiv
aam
aad
out
lret
shrb
rcl
mov
out
fucomip
mov
int
incb
or
rol
in
loop
enter
int
out
mov
out
clc
jmp
shr
in
in
bswap
push
mov
loop
in
out
mov
mov
fdivr
not
in
xlat
lock
hlt
out
out
test
shr
idiv
icebp
shr
int
std
fnstsw
repz
fadd
in
out
loopne
enter
iret
iret
into
sti
stc
not
mov
mov
jecxz
out
or
stc
fadd
out
jmp
mov
stc
fdivrp
sti
out
cmc
rcr
fildl
jmp
les
vpsraw
lret
rol
in
ror
into
mov
mov
std
in
std
mov
mov
push
loope
out
shl
jecxz
into
repz
iret
mov
loop
std
xlat
or
out
cld
out
jmp
scas
call
in
out
scas
stc
div
sti
ret
out
cli
rol
testl
int
out
rcr
aad
sti
mov
xlat
shll
fcmovnu
hlt
loope
or
out
enter
add
in
loop
test
mov
rol
mov
iret
lret
stc
cli
rcl
clc
shl
loopne
pop
out
fdivr
xabort
in
iret
movsl
fucomp
xlat
jmp
rcr
sarb
mov
in
or
add
into
pop
pop
jmp
ljmp
iret
fcmovnu
sarb
mov
stc
jmp
pop
movntq
out
jmp
imul
sti
repz
fcos
sarb
ret
ret
mov
fsubp
fcmove
adc
lock
mov
mov
sar
fmulp
fmull
testl
out
int3
mov
out
not
lods
mov
add
fcmovnu
add
add
ret
filds
xlat
sti
repz
into
clc
sti
iret
mov
cli
mov
mov
loopne
pop
jecxz
add
jmp
lret
jmp
mov
rol
icebp
rcl
out
or
cmc
lret
fst
lds
fcmovnbe
jmp
into
std
rcr
or
or
fucomp
fldl
loop
loope
aam
out
out
shr
int
call
fnstsw
jmp
lret
sarb
iret
aad
out
repnz
out
not
lock
stc
ror
adc
iret
stos
repz
mov
les
lock
faddp
cld
mov
xlat
aam
push
jmp
in
int
mov
lret
out
leave
mov
fdiv
not
mov
fcmove
pop
std
add
or
stos
mov
test
lods
jecxz
lret
repnz
aad
lock
mul
stc
or
push
push
push
lret
pop
test
ret
lret
mov
mov
xlat
mov
jmp
call
in
fadds
out
in
repnz
idiv
sti
mov
add
fldl
vpminsw
cli
rorb
fisttpl
repnz
repz
out
aad
aad
divb
in
loop
add
or
or
add
icebp
cmpsb
lods
call
shl
repz
mov
int
add
incl
loope
out
adc
in
leave
repz
mov
in
std
int
add
into
fsub
cmc
add
fxch
or
or
or
iret
lods
in
out
loop
cli
stc
enter
aam
mov
rcr
shl
sti
fcomip
or
jmp
loop
out
mov
divl
mov
mov
add
rol
lret
std
out
loop
lods
out
mov
mov
out
ffreep
clc
pop
stc
add
std
idiv
call
in
ret
aam
repnz
in
clc
aam
call
shr
cmc
out
iret
testb
adc
fistpll
in
mov
mov
mov
add
ret
jmp
pop
fisttpl
enter
ljmp
scas
mov
aam
mov
mov
fmul
jmp
shl
fmulp
aad
loopne
cmc
rcl
sti
mov
idivl
cmc
loop
clc
add
in
fucomip
mov
jmp
mov
iret
repnz
aad
ret
push
std
lret
jmp
fsubrp
jecxz
shl
mov
in
fcomp
loopne
add
loope
mov
add
jmp
fdivrl
out
mov
mov
cmc
mov
stc
mul
or
iret
out
les
mov
mov
icebp
out
aam
fldpi
cli
jmp
iret
jmp
jecxz
lods
mov
out
enter
jecxz
xlat
rcr
cld
in
hlt
filds
ljmp
scas
jmp
mov
out
enter
divl
loope
repnz
std
ljmp
into
scas
fnsave
mov
jmp
into
cmc
fdivrl
lret
aad
jmp
fsubr
test
rol
stc
repz
add
fadds
mov
fimull
shr
add
call
out
jmp
out
in
repz
out
sti
lret
repz
loope
push
enter
in
shll
leave
shl
out
into
mov
sti
mov
add
loope
call
loope
mov
mov
lret
fiaddl
mov
hlt
mov
jmp
lods
jmp
out
loop
jmp
ljmp
fsubrp
cld
ret
icebp
aam
fsub
or
stc
repz
enter
mov
into
lret
mov
shl
aam
jmp
loope
fldl2t
add
in
cld
add
ror
int
aam
mov
loop
sarl
add
sar
ffreep
or
ljmp
shll
jmp
cli
enter
in
icebp
shl
out
inc
ffreep
in
lods
aad
int
lock
jmp
icebp
loopne
sar
leave
shl
iret
ret
fcom
fucomp
loopne
shr
rcr
mov
int3
out
loop
sar
hlt
pop
ret
out
add
ljmp
jecxz
test
mov
cld
out
aad
pop
in
stc
ret
add
add
fucom
in
loopne
jecxz
scas
shl
hlt
sti
fst
out
rol
int3
rcr
shl
shr
lret
leave
in
mov
ljmp
hlt
fmul
shl
mov
cmc
jmp
out
push
in
mul
in
clc
mov
iret
icebp
add
clc
add
icebp
roll
mov
ffree
in
mov
int
call
std
mov
mov
icebp
repz
add
cld
push
stc
fisttps
shr
loope
call
sti
fadd
repnz
cmc
fmul
sti
fiadds
in
repz
add
shr
fsubr
cmc
shl
fdivs
faddp
rol
mul
fsubp
testl
or
jmp
lret
mov
aad
mov
loope
add
or
out
repz
jecxz
jmp
mov
mov
mov
add
std
ret
fadd
out
or
jmp
cld
jmp
out
shr
ljmp
clc
mov
pop
cmc
hlt
lock
rorl
les
clc
lret
in
in
aad
shl
out
shl
lods
sti
into
icebp
rol
repz
in
fucom
shl
sti
clc
rcl
push
fcmovnb
ret
shl
in
call
rcr
fcomip
int3
out
ret
roll
cmc
ret
lret
xlat
add
add
or
shl
jecxz
xlat
jmp
cmc
cld
sti
jmp
in
loop
cmc
testl
or
lods
jecxz
xlat
ljmp
in
pushl
fdivp
add
out
cli
in
cli
call
ret
mov
not
out
lock
rcr
icebp
repnz
aam
movb
leave
add
fsubp
icebp
ret
icebp
aam
cli
fucomip
fcomp
cmc
fnstsw
stc
cli
clc
psubd
fisttpl
add
mov
mov
lods
mov
hlt
mov
call
add
loop
clc
icebp
lock
or
rolb
out
in
scas
fmul
aad
mov
fnstsw
in
jecxz
in
sti
or
fdivr
mov
into
out
ret
bnd
sti
jmp
xlat
fcomip
stc
sti
cld
aam
jmp
std
add
mov
ljmp
mov
pop
incl
out
enter
ret
lock
leave
int3
out
ljmp
fdivrs
fcmovbe
cld
hlt
ljmp
icebp
lret
in
repnz
int3
into
ror
mov
hlt
fst
in
mov
stc
mov
out
ret
aam
in
fucomi
clc
xlat
ljmp
cli
fxam
add
or
int3
or
mov
leave
out
in
in
mov
mov
into
sti
mov
cli
or
or
push
rcl
int
mov
mov
repnz
std
fmulp
cld
loop
aad
fstp
repnz
fadds
or
jmp
mov
xlat
stc
enter
jmp
idivl
aad
out
clc
rol
out
add
repnz
mov
aad
in
mov
mov
loop
jecxz
out
out
std
shr
lret
sti
lods
shlb
mov
icebp
push
roll
xlat
or
call
sarb
mov
enter
iret
in
out
add
add
out
ficoml
ret
jecxz
stos
rcl
in
test
add
int3
loop
loopne
ret
enter
loop
ret
cli
in
lret
stc
mov
mul
xlat
xlat
fadd
in
shl
cld
in
fdiv
or
stos
repz
repnz
lock
add
rcl
mov
ret
loope
out
fcmovbe
jecxz
jmp
int
lods
mov
lods
cmc
jmp
dec
loope
std
add
loop
out
in
rol
iret
shl
neg
fldl2e
repnz
rcl
fadd
shr
in
in
into
shl
scas
mov
scas
enter
in
fcomi
jecxz
add
fdivp
or
fmul
decl
scas
rcr
jmp
jmp
lret
jmp
mov
shl
stc
faddp
faddl
add
add
ljmp
les
lret
lock
loope
in
loope
jmp
cld
cli
pop
loop
fmul
lret
mov
iret
int
fxam
shll
aad
add
mov
or
lret
loopne
out
out
mov
out
call
ljmp
rcr
ljmp
int3
rcl
repnz
lock
fldln2
stc
ror
in
cld
call
stc
clc
aam
mov
loope
leave
mov
mov
lock
mov
out
mov
aad
rcr
fdivrl
in
or
call
shll
lret
cmc
in
cli
fst
into
shr
ret
add
stc
loopne
iret
into
ficoml
mov
shlb
in
mov
mov
in
enter
or
xlat
out
mov
into
ror
std
xlat
mov
into
cld
out
rcl
rorb
cmc
bswap
in
out
add
out
test
ljmp
enter
mov
flds
in
in
push
movntq
out
ret
mov
in
lret
lods
idivl
add
shl
add
add
out
repz
lods
loop
out
mov
icebp
mov
xlat
leave
out
aad
loop
sti
loopne
cld
flds
cmpsb
test
mov
in
loop
enter
fsin
cmc
jecxz
aam
std
in
push
rcr
clc
stc
hlt
lret
adc
icebp
lods
mov
repnz
lret
iret
out
mov
int3
out
in
mov
fiaddl
in
hlt
pop
add
loope
int3
int
fidivrl
mov
jmp
sti
out
or
mov
repnz
mov
stc
roll
loopne
repz
mov
repz
lods
icebp
repnz
lock
leave
jmp
mov
aad
int3
into
jecxz
xlat
int3
lock
add
sti
ret
ljmp
mov
in
out
lret
in
mov
int3
iret
in
icebp
mov
iret
pop
aad
mov
cli
push
loop
adc
shl
mov
repnz
mov
lock
jmp
aad
sti
cli
ljmp
ljmp
fmul
int
jmp
fucomi
mov
idiv
cld
add
out
iret
fstp
lods
mov
sarl
out
in
loop
aad
mov
leave
add
or
adc
xlat
ljmp
mov
aad
mov
loope
dec
movl
repz
ljmp
out
icebp
fnsave
jecxz
fcmovb
fimuls
add
or
add
iret
jecxz
rcl
shl
leave
out
jmp
fnstsw
pop
cli
fistpll
fsub
or
add
in
in
enter
mov
out
lret
mov
lret
stc
not
int3
push
icebp
not
cld
jmp
fmul
mov
lods
rcl
lds
out
fadds
int
out
aad
jecxz
lret
cli
cli
into
out
lret
lock
shl
int
divl
repnz
rcr
or
in
in
lret
mov
mov
mov
sar
mov
mov
repnz
aad
or
scas
in
mov
sarl
int
int3
jmp
jecxz
jecxz
cli
or
out
loope
lret
loope
rol
leave
mov
fptan
add
aad
fstpt
or
repz
stos
stos
shll
fucomp
mov
ret
loop
add
fucom
mov
cmc
into
aad
out
int3
shr
mov
testb
icebp
neg
out
loope
cli
jmp
scas
mov
mov
ror
mov
repnz
out
fsub
jmp
add
cmc
jecxz
ret
jmp
xlat
aad
lock
call
fcmovnbe
idiv
aam
add
psrld
ljmp
fidivl
jecxz
faddp
add
mov
ljmp
out
in
mov
neg
rcl
out
fcmove
fmul
mov
shl
icebp
fld1
sti
leave
jmp
out
add
rol
mov
out
mov
std
loop
dec
ljmp
lret
cld
loop
iret
scas
ret
lods
in
sti
in
stc
lock
mov
repz
fcmovb
add
ret
push
lret
or
into
fidivs
mov
mov
hlt
repz
cld
in
aad
in
lock
jmp
shl
mov
stc
into
in
out
frndint
fdivrl
mov
aam
jmp
ret
jecxz
icebp
mov
out
hlt
enter
aad
mov
loop
int
xlat
push
push
or
enter
cld
mov
mov
in
aad
repz
mov
std
add
sar
in
int
fcmovnu
int3
repz
fadd
out
out
aam
repz
pushl
ret
in
stc
loope
mov
shl
loop
mov
clc
out
cli
int3
out
out
mul
neg
out
jmp
add
call
mov
in
sti
loop
mov
pop
out
mov
les
in
lods
loop
lret
mov
cmc
mov
mov
add
lret
enter
out
int3
shlb
out
cmc
call
into
push
roll
pop
sti
out
add
in
in
iret
out
scas
mov
ret
in
loop
in
hlt
mov
lock
int3
aam
mov
stc
add
clc
jmp
jecxz
lods
out
vpsubsw
leave
repz
fstp
fdivr
fiaddl
hlt
out
push
add
add
rcll
in
enter
mov
aam
mov
icebp
shlb
cld
add
fimull
or
int3
push
add
lret
shrl
mov
divb
ffreep
add
add
shr
jmp
enter
int
fsubr
rcr
iret
loopne
in
repnz
fsubr
iret
loope
std
cmc
loope
in
lock
aam
add
leave
ret
mov
cmc
in
fidivrl
sti
mov
jecxz
loope
add
push
int3
into
loopne
out
ret
sti
mov
cmc
call
ror
cmc
roll
clc
ffreep
mov
loopne
ljmp
ror
in
fcmovne
aad
clc
rcl
fcmovnb
ret
int
lock
cld
add
in
test
rcr
ret
loope
loopne
fldt
loop
icebp
rolb
sar
out
fsubr
or
scas
mov
mul
mov
repnz
pop
fcmovb
mov
leave
or
int
push
or
fisubrs
sti
lret
in
mov
mov
iret
fcomp
xlat
mov
add
adc
shll
out
shl
icebp
sarb
pop
add
imul
in
fdivrp
in
jmp
mov
lods
mov
xlat
stc
clc
mov
xlat
fdivrl
add
vpminub
add
ljmp
iret
rol
mov
fucomp
mov
add
clc
idiv
fadd
repnz
in
lret
out
in
hlt
int
leave
lock
mov
mov
rorb
roll
icebp
lods
scas
mov
in
test
add
xlat
or
aam
loope
fsubr
leave
loope
enter
fyl2xp1
call
cli
cmc
mov
cld
call
jmp
or
mov
loope
jmp
cli
test
add
out
idiv
mov
or
jecxz
or
or
into
sarl
enter
add
lret
lret
out
sti
loope
mov
rol
lock
int3
cli
mov
fdivrs
int
add
xlat
ljmp
mov
aad
mov
ror
test
loope
pop
into
repz
loop
les
pop
loop
loope
fdivrs
aad
std
clc
cmc
add
out
loop
stc
out
ljmp
in
iret
repz
out
lret
ffreep
sti
mov
sti
fdivr
std
or
lret
in
std
cli
ljmp
mov
sarl
cmc
fnsave
loopne
fiadds
aad
add
or
std
or
shrl
mov
mov
fsubp
call
fstp
incl
xlat
push
stc
fsubr
into
repnz
repnz
out
loope
out
mov
int3
iret
rcr
loopne
jmp
shl
out
loopne
iret
sti
jmp
aad
rcr
aam
mov
sar
jmp
shl
rcl
dec
bswap
fdivrl
loope
les
xlat
xlat
shl
iret
mov
add
add
mov
ror
repnz
mov
repnz
int
cmc
fadd
out
test
out
pop
fidivrs
mov
fcmove
div
aad
fcomi
int3
in
hlt
out
stc
jecxz
cld
aam
add
out
jecxz
jecxz
cli
in
cli
out
into
mov
clc
shll
fsubp
rcl
push
fcmovb
pop
push
les
lods
jmp
cmc
mov
icebp
not
lock
rol
fcomp
iret
jecxz
add
test
mov
out
test
hlt
bnd
aad
out
out
add
rorb
add
add
std
out
stos
enter
mov
out
mov
std
div
mov
div
std
fcmovbe
add
mov
stc
repnz
movsl
mov
mov
sti
loopne
int
mov
fsub
add
add
repz
call
lods
lret
sti
mov
add
add
in
cli
xlat
cld
out
add
fsubs
shlb
clc
inc
mov
add
fstp
loopne
hlt
fadds
sarl
out
fidivl
loope
fsub
in
add
test
or
fnstsw
out
mov
push
mov
sarl
cld
lret
in
fdivr
fadd
out
leave
test
in
out
into
mov
int
lock
ret
flds
jmp
jecxz
fmuls
int3
loop
aad
int
lret
mov
clc
not
ret
mov
lret
aam
enter
enter
lock
jmp
fdiv
lret
fmulp
cli
shr
cld
ljmp
in
leave
in
ret
out
shr
lods
mov
rcr
in
in
lds
add
jmp
aad
aam
mov
mov
add
fstpt
lret
lret
iret
mov
out
mov
scas
vpmulhw
jecxz
out
int
mov
clc
or
or
loop
vpsubsb
aad
repz
roll
fcmovnu
fadd
jmp
clc
fisubrs
rcr
out
shl
iret
mov
xlat
mul
fsubr
or
lds
int
in
lret
test
add
aad
mov
hlt
add
int3
int3
leave
lds
jmp
std
out
std
rcl
loop
inc
repz
in
sti
jecxz
out
dec
fcmovb
into
call
int
imul
mov
mov
ret
sar
mov
aam
cld
fmuls
cli
loope
mov
lret
out
mov
in
out
rcr
mov
in
cmc
fildl
add
cmc
loope
fxch
clc
movb
push
enter
shrl
fidivrl
cli
mov
clc
mov
leave
add
out
ljmp
cmc
fsub
mov
ret
aad
loopne
stc
jmp
lret
mov
in
mov
aam
fstpt
loopne
add
decl
add
enter
jmp
clc
jmp
mov
cld
mov
jecxz
add
or
stos
mov
in
scas
enter
test
mov
add
fildl
fadd
les
out
mov
lods
loop
ret
int
lret
add
ret
add
int3
stc
repz
cli
xlat
call
fdivs
stos
shl
clc
sti
mov
mov
aad
stc
out
fsub
clc
or
shrb
jmp
in
rcr
repnz
jmp
lock
mov
stc
dec
pmaxsw
fcom
test
repz
lock
fnstcw
fldl
cmc
add
call
mov
out
call
lret
mov
mov
or
or
loope
cli
or
lret
fst
into
mov
in
int
aam
in
xlat
fistpll
lock
add
add
push
stc
psubd
pushl
out
lds
bnd
rcl
roll
ljmp
add
sarb
imul
cli
lret
sti
sti
into
lret
incl
int
add
sti
stc
clc
hlt
in
fcomp
lret
mov
loope
mov
rcl
leave
int
ret
ret
loop
ljmp
bswap
fdivl
rol
in
fstp
sti
in
iret
mov
repnz
aad
jmp
adc
in
into
lods
loopne
leave
in
mov
aad
mov
stc
cli
or
ffree
loopne
or
mov
lret
in
mov
mov
add
std
vmovq
or
fadd
ljmp
mov
out
mov
stc
ljmp
fadds
shr
shr
jmp
mov
lods
out
fldpi
imul
cld
out
enter
add
xlat
icebp
hlt
fcmovnb
sar
int
ret
out
jmp
scas
test
fcmovnbe
cli
mov
shr
aad
out
jmp
out
int
or
fadd
shl
mov
xlat
shr
call
mov
rcr
jecxz
push
push
out
hlt
in
out
shr
scas
mov
out
xabort
mov
ret
into
add
add
fst
fstp
leave
out
in
test
enter
mov
out
sti
mov
in
fcmove
aad
stc
fchs
jmp
lods
cmc
mov
mov
loop
iret
pop
loopne
lock
faddp
hlt
leave
out
in
leave
test
loop
mov
les
fnstsw
roll
ja
add
inc
add
xor
adcl
xor
orl
xor
adcl
add
adc
sbb
mov
andl
mov
subl
xor
mov
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
pushl
call
cmpl
jb
mov
mov
sbb
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
push
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
sbb
mov
mov
orl
xor
sub
movl
sbb
xor
xorl
xor
addl
xor
andl
xor
add
movl
adc
mov
addl
xor
sbbl
add
adc
mov
mov
mov
movl
mov
mov
movl
movl
jmp
mov
xor
mov
jmp
jl
push
hlt
pop
nop
leave
mov
mov
or
loop
jnp
cwtl
jnp
pop
fchs
ret
xlat
incl
in
out
push
out
scas
iret
mov
aam
scas
aad
div
xlat
sar
rolb
stc
or
loope
add
mov
in
in
sar
int
lret
in
add
mov
add
fadd
in
out
loope
lods
mov
shlb
hlt
fdivrl
add
ret
in
in
aad
call
leave
lret
in
repz
stc
call
cli
mov
add
std
push
movb
fadd
add
shl
out
imul
int3
mov
fmul
cmc
in
mov
les
push
in
ror
fcomip
out
in
loop
clc
leave
lret
enter
mov
hlt
sti
add
mov
ftst
mov
icebp
leave
in
fstpt
out
std
push
add
jecxz
loope
lret
jmp
mov
movsb
leave
in
loope
not
repnz
stc
rcr
xlat
inc
cld
add
ret
leave
or
lods
rol
loopne
mov
in
aam
stc
fstp
into
loopne
into
stc
add
out
clc
or
jecxz
jmp
mov
xbegin
ret
sar
testl
sar
in
mov
mov
test
lret
shl
int3
call
int3
add
pop
xlat
call
psubusb
lret
shl
mov
mov
out
rcl
loopne
std
jmp
rol
add
jmp
add
jmp
mov
test
cli
fscale
fnstsw
into
hlt
or
cld
add
mov
lret
cli
int3
xlat
int
fnstenv
ret
call
loope
add
lret
int
out
in
rcl
lds
aam
jmp
add
int3
shl
sarl
clc
add
xlat
mov
icebp
into
not
cmc
out
enter
stc
icebp
jecxz
cmc
fcomi
cli
aad
add
loopne
fdivrs
enter
in
mov
jmp
sti
add
fsubrp
or
psubd
ljmp
test
into
in
sti
fdivrp
shl
fcmovu
aad
hlt
lret
loop
or
in
in
into
ret
int3
jmp
out
in
out
sar
jmp
std
movb
lret
lret
ljmp
in
loopne
repz
xlat
stc
int3
fsubr
mov
sar
add
push
paddsb
add
lret
mov
mov
in
mov
repnz
cli
aad
std
clc
sar
cld
stc
leave
ret
pop
fcomip
icebp
rol
shr
shl
repz
stc
fcmovbe
neg
faddp
les
ljmp
movsb
int3
fmul
out
in
lock
ret
fcmovne
roll
ret
lock
out
aam
iret
lret
loope
out
rcl
test
ljmp
mov
fsub
rcr
fcomp
fsubrp
fmulp
mov
repz
loopne
in
fucomp
roll
repz
mov
add
or
add
loopne
cmc
lock
vpsllq
push
std
shl
mov
les
shr
loope
movsb
scas
ljmp
leave
sti
int
jecxz
push
loope
out
lret
cli
or
jmp
jecxz
mov
out
ljmp
not
icebp
cld
xlat
sarl
loopne
std
shr
enter
div
loop
xlat
in
aad
out
ret
sti
add
jecxz
aad
add
add
loope
add
into
shl
leave
lret
int
test
loop
ror
out
in
sti
push
testb
les
jmp
stos
mov
xlat
ljmp
loope
cli
mov
add
mul
call
ror
mov
mov
xlat
mov
iret
in
in
out
fidivrs
lock
lds
mov
out
in
sarb
fdiv
stc
int3
add
roll
fdiv
jmp
add
lret
leave
loope
mov
in
int
fstp
aam
out
cli
add
fcom
loopne
xlat
in
jmp
enter
int
lods
cli
cli
mov
shl
loopne
cld
lret
in
pminsw
jecxz
in
int3
mov
xlat
mov
in
mov
in
repz
out
aam
or
fcmovnb
in
fsubp
in
fdivrl
rol
mov
add
aam
loopne
fdecstp
or
fndisi(8087
adc
mov
jmp
jmp
hlt
neg
leave
mov
div
cli
clc
repnz
jecxz
or
ljmp
jecxz
fnsave
in
neg
fidivrl
aad
fcomp
add
out
loop
add
or
shrl
iret
lret
call
ret
int3
sar
in
ret
jecxz
fcom
fucomp
ljmp
ljmp
mov
loop
add
loop
fildl
out
repz
scas
shl
call
iret
lret
mov
les
sar
lret
out
loop
into
stc
fdivrs
icebp
mov
icebp
sti
mov
push
xlat
movb
fdivrp
paddusb
ljmp
into
cli
mov
lret
shl
ffreep
into
ret
fcmovnb
lret
jmp
mov
xlat
lods
mov
xlat
icebp
jecxz
ret
mov
roll
aam
iret
add
ror
mov
jmp
sarl
loop
icebp
in
cmc
stc
cli
fabs
or
mov
aad
stc
cmc
call
xlat
add
shl
std
sti
sti
lock
call
lods
jmp
cli
fcomp
mov
lret
aam
icebp
pop
hlt
mul
push
ret
fmull
stc
ljmp
ret
icebp
cmc
imul
mov
mov
sti
fimull
cld
cld
fchs
cmpsb
div
int3
jecxz
iret
lret
mov
repz
in
loope
cmc
leave
fisttpl
int3
faddp
imul
mov
shr
lods
fdivr
mov
cld
shl
fucom
out
mov
push
add
test
in
fldt
in
enter
fst
ret
hlt
out
add
std
fimuls
mov
loop
mov
fstpt
fdiv
in
jmp
jecxz
icebp
int3
test
shlb
ljmp
enter
mov
or
faddl
mov
int3
mov
mov
in
stc
loopne
enter
out
xlat
mov
mul
mov
sarl
fdivr
sti
neg
out
adc
ljmp
icebp
mov
lret
jmp
ffreep
mov
xlat
add
ror
loope
mov
in
test
fdivrs
fimuls
or
rolb
fmul
clc
fucom
adc
shlb
rcl
out
xlat
idivl
ret
or
ror
ljmp
ret
ret
shll
mov
in
lock
in
aam
rcr
lret
aam
jmp
ret
mov
lods
mov
in
enter
xlat
div
push
add
stc
in
mov
add
loope
out
into
lock
aam
sar
pop
in
repz
decb
loopne
in
fiadds
iret
out
lock
int3
into
aad
sar
aam
call
mov
aam
sti
decb
loop
or
in
in
icebp
mov
iret
cmc
out
repz
mov
mov
push
or
jecxz
or
aam
or
out
shll
vpand
push
icebp
icebp
fdiv
les
cld
in
add
pop
loope
movsl
scas
mov
int3
rcr
lret
out
fst
add
out
sti
stc
sar
lret
fcomi
out
hlt
out
mov
in
repz
jecxz
jmp
not
mov
add
shr
out
out
aad
in
in
int3
mov
jmp
leave
cli
mov
fsubp
not
out
aam
out
out
lret
into
test
sti
out
hlt
out
mov
fldl
enter
cld
add
ret
repnz
repnz
scas
mov
cld
int
cld
cld
repnz
push
add
icebp
aam
cli
fsubrp
ljmp
out
sti
ror
out
cld
jmp
sti
shl
cmc
out
lret
jmp
rol
not
out
enter
div
fxch
aad
mov
loopne
lock
add
in
out
out
shl
aad
enter
cmc
hlt
aad
out
mov
add
fadds
jmp
stc
out
cmpsb
mov
stc
cli
mov
jmp
cld
mov
add
add
bswap
or
int3
mov
jecxz
int3
jecxz
vshufps
rcl
mov
jmp
push
cld
stc
int3
shl
loopne
in
iret
out
into
mov
fsubr
shr
call
cli
in
lret
jmp
push
cld
in
pop
cld
ret
loop
mov
out
cmc
mov
out
hlt
lret
shl
aad
enter
roll
out
test
mov
rcl
stc
jmp
out
lret
loope
lock
push
jmp
mov
aam
fdivr
lret
ror
icebp
mov
repz
shl
call
idiv
testl
cli
add
in
lock
lret
call
int3
roll
icebp
cli
sti
cld
leave
int3
or
lods
idivb
loope
jmp
sti
stc
not
hlt
idivl
call
mov
aam
iret
stc
mov
std
ret
sarl
add
lret
out
les
rcl
icebp
in
in
div
std
mov
in
or
loop
add
pop
fsubr
rol
in
icebp
fnsetpm(287
sarb
add
out
xlat
cli
repz
repz
loope
or
fucomp
inc
repz
int
sti
mov
mov
lret
mov
cmc
std
mov
pop
movb
sidtl
jmp
stc
or
repz
mov
ljmp
stc
loopne
add
cli
cld
push
or
or
in
shll
in
mov
std
ret
repnz
loopne
rcr
cli
push
int
int
fmul
in
lret
shrl
mov
repnz
jmp
add
fdivr
mov
in
jmp
sti
cli
mov
repz
sti
out
add
or
jmp
in
lret
out
in
fcmovnbe
clc
shr
add
mov
mov
clc
fchs
in
fnop
loope
ret
mov
ljmp
mov
cli
in
loopne
in
test
out
shll
icebp
mov
mov
iret
mov
jmp
fsubr
lods
ljmp
mov
add
rcr
shl
filds
out
add
fiaddl
out
cmpsl
iret
jmp
lods
out
int3
repnz
fxch
mov
push
loop
jmp
loop
jmp
iret
scas
lods
loope
call
leave
in
iret
std
jecxz
repz
fadd
out
aam
enter
shlb
fcmovne
mov
neg
repz
fstp
loop
add
iret
loope
add
ror
mov
in
xlat
hlt
lock
mov
mov
add
aam
rol
loope
mov
les
sti
mov
aam
int3
loopne
fcmovnb
lock
std
stos
mov
jmp
mov
out
jmp
rcr
roll
hlt
sar
in
add
push
out
in
psubb
lret
fbld
into
in
lock
clc
loope
ret
lds
clc
cli
add
sti
in
loope
mov
loopne
out
jmp
mov
sti
call
fcmovb
ret
neg
add
add
or
out
mov
jmp
mov
add
out
lock
leave
stc
out
or
mov
int3
lock
mov
add
int3
mov
add
testb
out
adc
test
in
mov
jmp
mov
aad
mov
pop
jmp
call
fcmovbe
rol
vpmuludq
fidivrl
clc
fcmovnbe
ret
aam
add
prefetchwt1
or
xlat
shl
cli
shr
fcmovne
repz
aad
aam
add
faddp
pop
into
add
loope
ret
not
mov
aam
fcmovb
mov
std
incl
pop
neg
or
loop
loope
shlb
mov
mul
lock
jmp
loopne
enter
or
int
in
out
ror
aad
out
fcompp
call
lock
shr
mul
out
adc
rcl
into
lods
aam
shr
out
mov
fscale
lock
fcomp
int3
push
push
ret
jmp
loopne
icebp
not
jmp
into
loopne
icebp
repnz
xlat
out
ljmp
or
or
hlt
fsubp
int3
repz
out
in
jmp
fsin
jmp
shl
neg
mov
std
mov
stos
jmp
mov
scas
scas
enter
loop
mov
rol
add
fcmovnu
fisttpl
push
jmp
scas
out
ljmp
cmc
rcl
iret
cli
fnsave
enter
in
in
fisubrs
mov
mov
push
clc
shl
shl
hlt
int3
loop
call
or
fmul
add
or
in
in
fsubp
leave
mov
mov
ror
fcmovnu
aam
jecxz
rolb
mov
pop
aam
or
aam
mov
in
ljmp
in
mov
lret
icebp
add
or
add
mov
rol
shl
jmp
iret
int
mov
lds
fcomip
std
clc
ret
loope
jmp
icebp
fcmovne
lret
mov
jecxz
idiv
fisttpll
std
add
pop
ret
repz
shl
out
in
ror
mov
mov
xlat
push
stc
loop
or
iret
lock
mov
out
fcomp
mov
mov
cmc
or
add
loope
or
out
shll
aam
rolb
mov
call
out
iret
into
out
iret
repnz
out
in
fldcw
clc
mov
fcompp
cld
fcomp
enter
into
mov
mov
into
int
fdiv
mov
sar
fiaddl
mov
or
add
or
in
mov
lds
jecxz
jecxz
mov
add
jecxz
fdivr
in
ljmp
mov
cli
sarl
lret
stc
rcr
ffreep
hlt
add
out
out
or
into
or
fdivl
cli
loopne
mov
fsubr
loope
divb
les
add
les
in
out
fsubr
enter
jmp
out
cli
fucom
fmuls
lds
loope
rcl
rcr
out
rcr
scas
mov
fsubrp
call
std
testl
fucomip
mov
test
test
mov
cli
loopne
out
std
mul
hlt
add
in
or
mov
enter
aad
shl
ret
std
shl
aad
xlat
call
jmp
into
lret
aad
jmp
lret
jecxz
shl
call
or
adc
int3
lods
xlat
in
loopne
mov
lret
aad
xlat
add
cld
fyl2x
shr
fsubr
push
clc
ljmp
int
lds
lret
in
hlt
cli
shr
add
add
enter
fldl
shl
scas
in
scas
int3
ret
mov
not
fucomi
into
mov
push
mov
loope
stc
iret
out
rol
in
lret
lret
jmp
lock
mov
or
push
lret
clc
lock
test
hlt
in
mov
out
rol
mov
hlt
jmp
into
fildll
loop
mov
int
ret
loope
ljmp
push
lds
call
mov
neg
call
mov
mov
or
lret
in
in
out
lret
loope
hlt
call
call
add
stc
incl
pmuludq
add
loope
out
mov
shll
lret
add
sar
sar
out
add
or
mov
rol
mov
into
fiaddl
dec
fndisi(8087
repz
vpsubsw
leave
add
cld
cld
rol
ret
repz
bnd
leave
repnz
out
in
mov
xlat
shl
vpmaxub
jmp
aad
frstpm(287
ljmp
in
std
std
cli
std
loope
add
jecxz
or
fucom
out
fisubrl
aam
out
int
int
mov
std
lock
or
repz
rcl
idiv
mov
call
int
loop
jecxz
loop
add
push
jmp
mov
in
les
testl
int3
in
ffreep
repz
loop
sar
lock
fcmovnb
div
stc
idiv
fcomp
fisttpll
push
pop
mov
lret
lret
rol
repz
mov
sti
fcomip
ret
xlat
clc
roll
lods
lock
call
ret
out
neg
aad
in
ljmp
fdivp
mov
lret
mov
mov
leave
into
cli
repnz
add
clc
xlat
std
not
aad
add
cld
call
mov
repz
mov
fnstcw
mov
ljmp
out
ljmp
aam
loopne
std
hlt
lock
iret
int3
out
repnz
test
shl
mov
ror
shr
cld
lret
lret
push
aad
push
fst
loop
add
loope
stc
out
out
loopne
lods
shl
repz
lock
add
add
clc
enter
jecxz
shl
out
fprem
out
in
int
mov
aam
sarb
fucomp
fcmovbe
lret
repz
loopne
mov
hlt
mov
add
add
add
stc
test
lret
out
mov
shr
lds
shl
int3
add
filds
hlt
jmp
iret
add
into
loopne
leave
jecxz
lock
hlt
out
into
shl
shl
icebp
add
out
in
hlt
repz
jecxz
out
in
lods
into
sarb
lock
incb
mov
fadd
out
mov
mov
mov
loop
iret
xlat
mov
sti
cli
fdivp
add
fildl
out
call
add
out
shll
ljmp
shl
xlat
or
aam
lret
fcmovu
push
rol
out
in
in
mov
mov
mov
cmc
fmull
jmp
mov
int
loope
mov
jecxz
leave
lret
into
fcmovbe
out
into
add
shr
int3
loop
fsub
lds
sti
iret
pop
pop
out
out
out
lds
shl
fistpll
repnz
mov
idiv
out
aad
or
fadd
mov
xlat
out
icebp
mov
shl
mov
test
mov
les
or
les
iret
out
loopne
iret
imul
enter
mov
sarb
shl
aad
ret
ljmp
ljmp
shl
fnstsw
rcr
loope
add
decb
out
push
repz
ret
mov
sti
out
repz
fstpt
mov
or
icebp
ret
std
fisubrl
hlt
fcmovu
loope
mov
iret
mov
idiv
repnz
out
cld
out
in
adc
repz
out
in
leave
loope
sti
cli
mov
add
xlat
rcr
mov
ret
lret
fsub
or
repnz
shl
loope
mov
sar
rol
repnz
or
or
fidivrs
aam
int
aad
not
shl
std
loop
neg
fadd
loop
std
in
jmp
fldcw
int3
mov
icebp
mov
std
fcomip
jecxz
or
fcmovne
clc
or
ljmp
icebp
into
shr
out
ljmp
pop
in
sar
enter
int
fcmove
jecxz
jmp
sar
mov
clc
loope
imul
aad
loop
or
mov
add
sti
ljmp
call
loope
rcr
in
decb
add
in
mov
in
repz
scas
jecxz
mov
int3
sarl
aad
in
loopne
psubb
call
fstp
lds
cli
fdivrs
stc
in
ret
out
add
or
lret
call
mov
aam
mov
mov
mov
jmp
add
lret
out
mov
int3
loopne
cmc
hlt
idiv
mov
jmp
xlat
in
add
loopne
test
out
icebp
into
sar
aad
test
loopne
ffreep
or
jecxz
out
add
lret
rcl
lret
lret
imul
enter
cli
cmc
testl
loope
pandn
rol
scas
int3
ret
shlb
iret
idiv
xlat
add
fcmovnu
idiv
mov
jmp
into
int
leave
xlat
mov
in
mov
add
movl
lret
loop
loop
iret
into
mov
cmc
aam
lds
stc
add
mov
pop
into
shl
mov
in
ftst
cmc
call
aad
rcr
ret
cli
jmp
or
icebp
jmp
loope
jmp
call
test
sar
add
stc
out
sti
fdivrp
fcomip
ret
rcl
ljmp
mov
repz
loop
testb
fabs
stc
mov
call
out
aad
mov
cli
ret
ror
sti
fidivrs
not
sti
out
pavgw
mov
mov
jmp
lock
idivl
in
shl
in
add
dec
mov
aam
aad
out
test
mov
hlt
add
add
std
repnz
lods
mov
in
cmc
cmc
into
shlb
mov
add
clc
add
out
out
int
add
ret
shl
int
shl
mov
fdivrs
or
add
fxch
repz
mov
iret
loopne
mov
out
clc
lret
in
cmc
mov
push
add
out
cli
ljmp
loopne
mov
jecxz
repz
not
fstpt
repz
add
add
sti
loopne
jecxz
scas
cmpsb
in
mov
call
call
clc
add
mov
add
bswap
add
mov
ljmp
mov
in
sti
cld
into
out
clc
stc
out
in
add
lret
cmc
aam
ljmp
fcmove
into
int
hlt
icebp
int3
neg
aad
aam
add
loopne
push
add
cmc
mov
mov
mov
add
call
jecxz
call
lret
adc
fcomip
fucom
loope
shr
lock
fsubp
enter
add
add
sti
lret
add
icebp
out
jecxz
mov
mov
mov
leave
std
aam
out
fdiv
in
push
paddusb
or
lret
mov
shlb
out
mov
into
repz
imul
mov
push
in
std
mov
in
ror
mov
mov
mov
lock
fucomip
std
iret
out
filds
push
fneni(8087
cli
enter
clc
in
movswl
scas
mov
stos
cmc
jmp
lret
out
icebp
mov
mov
loop
enter
test
jmp
cmc
out
fcmovbe
fucomp
cmc
add
cmc
cli
sti
aad
cld
loopne
call
shl
mov
rcl
repnz
stc
loop
mov
fdivr
or
add
hlt
in
jecxz
loopne
lock
out
xlat
call
lock
add
cmc
movb
cld
repz
cmpsl
iret
iret
loope
out
loopne
mov
in
iret
shl
sarb
or
stc
pop
sti
clc
add
bnd
jmp
hlt
cli
test
fidivrs
std
or
rol
in
leave
out
mov
out
out
fdivr
cmc
mov
mov
loopne
lock
std
jmp
add
push
vpavgb
out
test
call
mov
xlat
fadd
out
rorl
jmp
mov
fadd
out
scas
enter
in
jmp
div
lock
shr
shl
hlt
lret
sti
repnz
shr
repz
mov
leave
hlt
icebp
int3
ror
mov
mov
fisttps
cmc
fimuls
out
test
in
sar
sti
mov
loop
mov
add
lret
int3
xbegin
fucomi
shl
mov
icebp
loope
lock
in
call
out
hlt
test
into
xlat
repz
cmc
fadds
call
fst
add
push
leave
or
cli
loope
loop
out
mov
lret
mov
repz
mov
rcl
aam
fmuls
add
jecxz
std
stos
int
int
loopne
mov
cld
cli
mul
ret
rcr
fisttpl
mov
lret
mov
in
enter
mov
fdiv
rcr
mov
in
add
mov
jecxz
fstpt
or
ror
ret
shlb
imul
aad
loopne
fucomp
push
inc
lret
jmp
jecxz
int3
mov
lds
ror
mov
shl
sarb
ret
fdivr
or
push
stc
fucom
out
test
fmul
sti
lret
repnz
aam
loopne
std
cld
cmc
stc
incl
loope
fsubr
or
jecxz
ret
scas
in
iret
aad
in
rcl
mov
fnstcw
fadd
or
fsub
int
out
mov
out
out
repnz
mov
mov
int3
or
cmc
cld
out
or
or
test
int
mov
rcl
leave
icebp
leave
sar
aad
mov
out
add
loope
jmp
lock
into
in
aam
mov
imul
idivl
loop
std
cmc
out
aam
out
fmul
in
lret
out
neg
mov
sti
mov
int
jecxz
sar
std
test
add
loope
fucomp
test
in
int
add
repz
lock
lret
mov
ret
repnz
fmul
fcomi
rcl
iret
repz
cmc
clc
repz
or
hlt
or
jmp
mov
clc
int
rcl
rcl
cld
shr
mov
cld
sti
out
or
adc
scas
iret
icebp
lret
cmc
int
mov
int
in
loope
lret
out
loope
or
mov
shl
mov
stc
in
mov
int3
repz
aad
in
pop
hlt
lret
fadds
mov
mov
mov
aad
sar
mov
loope
ret
mov
add
add
or
mov
loop
sar
call
mov
rcr
push
por
decb
loope
lods
ret
xlat
ret
ljmp
fdivr
lock
add
aad
div
enter
push
ffree
repnz
ljmp
jmp
clc
aad
loop
add
fcomip
push
jmp
shr
leave
scas
fcmovne
aad
cli
lret
mov
rcl
push
cli
icebp
ret
xlat
hlt
or
jmp
rol
scas
loopne
mov
ljmp
ret
aad
fchs
fstp
ret
mov
jecxz
not
sti
mov
in
mov
add
jecxz
aam
sti
shl
or
add
in
add
iret
ljmp
stc
enter
add
mov
mov
lret
fiadds
or
test
jmp
loop
in
mov
aam
ret
pop
in
or
les
call
shl
icebp
repnz
fyl2x
repnz
int
fcomip
add
fninit
aam
out
paddusw
lods
int
test
scas
jecxz
int
mov
aam
repz
call
add
jmp
hlt
out
scas
bnd
imul
sti
iret
repz
fdivrp
aad
mov
roll
ffree
hlt
add
fucomp
int
repnz
repz
lret
loop
xlat
aad
out
fadd
add
fcomi
fmul
out
lret
test
jmp
mov
lock
filds
clc
rol
or
incb
add
add
stos
icebp
cmc
leave
shr
hlt
ljmp
enter
cli
inc
jmp
ret
cld
jmp
repnz
clc
mov
in
mov
fstp
int
or
std
mov
lods
ror
mov
out
mov
in
fnstcw
out
or
les
in
iret
lret
loope
leave
scas
int3
in
enter
out
cli
stc
leave
in
std
ffree
imul
push
out
std
out
or
into
in
ffreep
aad
iret
jecxz
lret
out
mov
jmp
in
mov
shl
loopne
sti
psllq
out
shr
loopne
in
lret
sti
mov
in
sarb
fmull
out
les
ror
lods
hlt
ret
shl
sti
lret
jmp
bnd
aad
sti
fcomi
lret
scas
mov
out
mov
aad
cmc
rcr
int3
mov
fadds
out
not
fcmovbe
shl
in
fildl
add
test
out
stc
out
out
fcomip
xlat
cli
mov
xlat
loope
ret
leave
fiaddl
fadd
mov
mov
test
mov
shr
into
xlat
sti
hlt
lock
pop
or
fcomip
filds
hlt
out
jecxz
lock
out
repz
aam
xlat
xlat
stc
int3
mov
lret
add
aam
out
decl
in
mov
shll
mov
into
loopne
ret
clc
sti
add
cli
in
enter
mov
in
icebp
icebp
ljmp
cld
cmc
mov
xlat
lock
ljmp
mov
stc
fcom
mov
jmp
fcmovb
pop
in
fsub
lds
add
out
jecxz
loop
lock
in
mov
leave
out
rcl
xlat
clc
in
fdiv
xlat
mov
aad
paddd
jecxz
ljmp
out
in
in
int
out
cli
leave
repnz
hlt
idiv
ret
add
fcmove
fscale
add
shl
not
mov
lock
mov
aad
cli
cld
ljmp
fadd
fucom
out
mov
fsubrl
mov
lret
hlt
faddp
cld
fsub
lock
leave
loop
lret
int
mov
enter
ror
ror
in
add
jmp
add
shr
jmp
out
mov
out
rep
shl
lret
lret
mov
jmp
sti
repnz
loope
fdivr
jecxz
ljmp
mov
enter
fstpt
cli
fnstsw
fisttpl
add
repnz
mov
enter
sar
repz
jecxz
not
stc
in
in
add
jmp
fisttps
icebp
in
in
shr
mov
out
xlat
neg
sarl
cmc
out
or
fildl
in
fcomip
lret
ljmp
aam
clc
div
mov
push
or
ret
ror
fcomp
loop
cmpsb
jmp
lret
out
out
mov
sti
ret
pop
cmc
fsub
in
pminsw
flds
jmp
mov
icebp
fdivr
shll
repnz
in
jmp
mov
leave
lods
rcl
iret
into
add
iret
mov
rolb
roll
add
loope
fucomp
lret
into
rcr
in
stc
ror
mov
mov
add
loop
in
out
loope
mov
stc
shll
stc
fsub
fiadds
aam
mov
enter
call
int
lret
mov
in
hlt
ret
icebp
in
aad
in
cmc
repnz
out
cmc
ljmp
leave
ret
sti
out
rcl
mov
mov
fildl
cli
in
add
pop
enter
lock
into
lods
aad
loopne
mov
mov
clc
shl
int
lock
fdivrp
neg
fmul
sti
add
in
scas
cmc
lock
loope
rol
movb
fucomip
or
clc
hlt
leave
loope
jecxz
in
call
jmp
mov
ret
aam
add
aad
push
lret
call
into
xlat
loopne
dec
or
mulb
add
sub
inc
sbb
xor
xor
adc
xor
movl
mov
mov
addl
mov
subl
cltd
orl
sub
sbb
xor
subl
xor
mov
movl
mov
movl
mov
movl
mov
movl
mov
cmp
movl
jne
mov
mov
cmp
je
andl
mov
add
movl
mov
jmp
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
mov
xor
sub
sbb
xor
xor
xor
xor
jmp
adcl
ss
icebp
xchg
pop
jnp
stos
cwtl
jnp
loop
sti
call
sti
sar
cmc
incl
lock
ljmp
lods
fsubr
bnd
out
enter
mov
idiv
out
cli
rcr
jmp
out
stc
add
in
in
int
repnz
mov
jecxz
fdivp
in
lock
add
int3
push
faddp
ret
int
rcl
rcr
mov
aam
out
cld
loope
loop
loope
test
lock
repz
clc
jmp
add
stc
add
in
jmp
hlt
int
out
shr
repnz
hlt
into
clc
stc
icebp
out
repnz
loope
mov
ret
cli
pop
pop
jmp
loopne
ljmp
mov
fildl
cmc
ret
mov
cli
clc
in
in
in
into
les
leave
out
mov
jecxz
aam
hlt
cli
mov
shl
clc
or
iret
or
test
scas
call
hlt
int
fdivrp
ret
add
std
vcvttpd2dq
in
jmp
mov
mov
stc
int3
hlt
aam
in
fcmovnu
add
add
incl
or
add
iret
loop
mov
not
enter
fdivp
repz
loopne
in
leave
mov
loop
leave
in
lods
mov
in
out
out
aad
rcr
in
loop
sarl
or
cld
add
add
leave
iret
mov
mov
fneni(8087
mov
shl
in
aad
out
repnz
int3
lds
out
clc
imul
clc
mov
or
or
loope
jmp
ret
imul
loop
shll
jmp
mov
out
mov
out
out
in
idiv
fcmovnbe
mov
cld
hlt
fcmovnu
cld
pop
out
stc
cmc
or
or
jecxz
add
add
lret
mov
icebp
jmp
out
sarb
bnd
mov
in
in
enter
in
lret
jecxz
shlb
mov
int3
vpaddd
iret
add
cli
loop
movsl
movsb
enter
ror
call
lock
int3
sar
sar
add
les
in
out
in
out
enter
mov
mov
rol
out
mov
add
ret
aam
jmp
cli
int
test
vcmppd
fcmovnbe
mov
out
mov
in
cmc
shl
fnsetpm(287
out
or
repnz
out
hlt
stos
cli
mov
mov
mov
fdivr
in
mov
aad
repnz
xlat
fidivrs
into
repnz
jecxz
lock
hlt
or
add
clc
incl
rcl
enter
ret
shrb
jmp
int
mov
xlat
sar
lret
int
iret
ror
call
add
loopne
jmp
ljmp
in
mov
loop
mov
div
int
xlat
jmp
rcl
int
icebp
out
or
out
or
in
cld
jecxz
rcl
mov
mov
cmc
mov
mov
mov
std
rolb
ret
hlt
not
or
pop
jmp
ret
in
test
into
icebp
aam
mov
aad
ret
jmp
std
cli
or
or
lock
ljmp
jmp
out
out
mov
jmp
loope
testb
iret
cmc
or
push
repnz
out
out
lret
out
fdiv
icebp
xlat
int3
sarl
fmull
add
jmp
iret
fiadds
loope
lods
ljmp
mov
mov
sti
loop
call
out
shl
not
out
mul
out
repz
out
repz
mov
add
add
loop
out
out
in
int
mov
call
int3
ret
loopne
aad
fldl
repnz
lds
out
out
mov
int3
dec
fiaddl
int
rcl
or
clc
or
or
in
fxch
bnd
in
icebp
call
xlat
ror
fcomp
out
imul
add
pop
or
loope
in
repnz
fdiv
loope
lret
repnz
push
loope
add
fldcw
out
mov
out
fcomi
dec
clc
add
imul
cmc
add
fucomp
hlt
clc
adc
in
repz
mov
icebp
mov
lock
repz
aam
mov
rcr
ret
mov
mov
mov
fucomp
cld
iret
hlt
add
sti
clc
add
ret
or
enter
fld
xlat
fadd
leave
fcmovnbe
fidivrl
add
std
loope
add
lock
fsubp
or
vshufps
scas
sti
loope
lret
out
sti
shl
mov
inc
std
test
shl
in
add
lods
mul
iret
int
out
hlt
iret
int
fidivrl
flds
jmp
fucompp
enter
test
xlat
jmp
aam
repnz
int3
add
loop
testl
mov
lock
vshufps
rcr
in
add
add
roll
ftst
in
hlt
add
ljmp
loopne
mov
aad
mov
out
xlat
mov
jmp
std
enter
lret
jmp
cmc
lret
cli
fucompp
fstp
sarb
mov
push
add
in
in
icebp
jmp
out
out
enter
sti
add
not
ret
loope
add
stc
in
cli
pop
rcl
aad
loope
mov
stc
fidivrl
into
add
mov
or
leave
or
clc
icebp
in
ret
mul
mov
aam
mov
in
std
into
mov
sti
push
ror
lds
cld
fstp
stc
cli
lret
rcr
in
xlat
in
out
lods
ror
sar
xlat
cli
jecxz
fcomip
add
loope
into
add
call
ror
repz
idiv
aad
shl
sti
repnz
lret
clc
sti
in
stc
jmp
jmp
imul
jmp
imul
aam
cld
int
pop
add
shl
ror
aad
add
or
repz
shlb
mov
mov
sar
add
int
cld
test
sti
mov
aam
mov
aad
fstpt
add
cld
fcmovne
mov
mov
shl
mov
iret
hlt
jecxz
add
cld
mov
cli
ljmp
stos
repnz
movsb
leave
fdivl
mov
mov
aad
jecxz
fmulp
call
mov
int3
into
loopne
aad
mov
lock
shl
std
add
inc
rcr
aam
call
lock
shll
idivb
fildl
cmc
mul
shl
iret
adc
lods
lret
fdivp
mov
in
fcomi
vpor
fcmove
mov
std
stc
add
add
aad
in
out
loop
in
lods
shll
pushl
into
add
aam
pop
loopne
or
jmp
sarb
into
lret
int3
shl
call
push
add
rcl
add
loopne
iret
in
in
mov
aam
loop
mov
mov
std
iret
out
std
fsubp
sti
loope
add
or
lret
int3
ret
sarl
lods
aad
int3
sarl
mov
add
fmulp
jecxz
cmpsb
mov
loope
aam
int3
int
mov
mov
ftst
push
add
add
ftst
ffree
in
mov
into
jmp
idivl
loope
add
ljmp
mov
lods
rol
loope
icebp
lods
cli
mov
repnz
idiv
out
ror
faddl
fmulp
mov
mov
test
mov
mov
repnz
into
sar
icebp
in
fld
out
add
out
rep
out
shlb
out
leave
aad
xlat
cmc
idivb
mov
push
or
test
in
sti
out
shl
in
cli
mov
cmc
call
aad
fucom
jmp
sti
clc
icebp
in
out
fsubp
mov
vmovq
mov
pop
ret
div
mov
mov
pop
ret
int
lods
out
jmp
out
clc
sarl
fst
decl
clc
aam
push
or
loop
mov
in
out
in
leave
cmc
cmc
mov
cli
icebp
fsubrp
add
loope
mov
xlat
icebp
shr
inc
fidivrs
enter
aam
push
hlt
lret
jmp
jmp
jecxz
iret
out
in
xlat
stc
in
rcr
fsubrp
push
lock
xlat
sar
add
mov
sti
ret
stc
sti
mov
shl
mov
mov
out
jecxz
jecxz
into
std
repnz
xlat
scas
int
out
cmc
xlat
aad
mov
fiadds
repnz
cli
ljmp
rcl
fcomip
xlat
rol
sti
mov
shl
fxch
mov
shl
mov
jmp
or
icebp
lret
mov
shl
sti
aad
stc
fdiv
loope
sti
fdivr
pop
lret
sti
adc
rol
call
mul
aam
cli
fcmovu
cli
sti
push
out
jecxz
ljmp
lret
mov
mov
into
into
mov
loope
out
mov
lret
out
stc
in
call
mov
cli
leave
fucomp
jecxz
mov
loope
or
or
repz
in
xlat
cli
repnz
mov
iret
mov
std
mov
cmc
or
movb
cmpsl
mov
aad
in
clc
in
cli
mov
repz
cld
repnz
loope
lret
out
leave
or
out
ljmp
stc
in
ljmp
mov
mov
or
or
jmp
shl
mov
lret
mov
divl
div
sar
push
shl
add
add
cli
add
fld1
jmp
cmc
lods
ret
sarb
clc
out
ljmp
pop
vpsubusb
push
or
push
or
aad
in
icebp
shr
fcomi
aad
mov
aad
jecxz
mov
add
in
fnstsw
fmul
out
call
lret
mov
int
repnz
icebp
out
jmp
repz
jecxz
mov
mov
ljmp
cli
fdivrs
ret
sti
aam
adc
loopne
lret
iret
in
aam
fidivs
rcr
in
mov
pmullw
incl
fstp
ljmp
icebp
idiv
rcr
hlt
ror
call
add
or
jmp
pop
add
repnz
int
mov
sar
jmp
cld
mov
out
xlat
add
sti
stc
lret
lret
shr
call
out
out
rcr
mov
ret
icebp
mov
iret
iret
stc
or
lret
fadd
iret
lods
divb
cmc
int3
cmc
hlt
cmc
out
mov
shr
shl
or
add
mov
mov
ror
lock
std
pop
sarb
out
loop
stc
adc
mov
mov
mov
sti
jmp
ret
mov
fcmovb
loopne
mov
mov
ret
enter
lret
mov
add
mov
fimuls
or
in
fadds
or
cmpsb
les
shl
dec
fcmovnu
fmul
fdiv
icebp
repz
in
jmp
flds
ror
cmpsl
ror
loop
shlx
test
cli
jmp
add
loopne
jmp
lret
add
mov
sti
in
rol
fcomi
loop
fsub
out
repnz
lret
pop
call
iret
in
aad
mov
fstp
lret
cli
div
ret
jecxz
lret
add
fimull
jecxz
push
jmp
fcmovnb
enter
repz
add
out
repnz
shl
out
fdivr
add
lret
leave
test
out
div
in
mov
lds
loop
lds
mov
mov
cli
enter
sarl
shl
cmc
vpor
fdivrp
in
test
mov
ror
jmp
mov
repz
idiv
jmp
or
fsubp
fnstsw
mov
aad
mov
add
ret
fsub
call
lret
lret
loope
mov
leave
enter
jmp
int
in
out
enter
in
cld
add
shl
mov
iret
iret
int3
xlat
stc
std
sar
sarl
aad
fisttps
lret
test
in
out
shll
loopne
fcmove
add
lock
ret
stc
leave
stos
loopne
in
out
iret
fucomi
stc
int
lret
leave
aam
aad
jecxz
aad
add
paddd
enter
jmp
mov
aam
mov
fmulp
shl
shl
or
faddl
fsubr
ljmp
leave
mov
lods
std
add
cmc
out
push
in
cld
fmul
add
pop
std
stc
ret
mov
call
repnz
ror
lock
fcmove
std
loopne
loope
add
rcr
push
shl
loope
movsb
in
mov
aam
in
stc
mov
sti
loop
jecxz
repz
fisttpl
lock
push
add
out
sti
in
aad
jmp
stc
push
in
add
shr
not
enter
fcom
repz
ret
hlt
jmp
hlt
mov
int
cld
mov
roll
loop
into
pop
out
fcomp
mov
ret
ret
shr
mov
fxch
fdiv
lock
lds
pop
or
lret
out
into
shlb
jmp
into
in
repz
stc
add
pop
push
add
lret
out
cld
mov
loope
not
shl
stc
lock
fdivr
mov
fisttpl
add
hlt
call
shrb
mov
repnz
add
out
pop
rol
testl
push
in
loope
into
loope
lods
repnz
repnz
out
sarl
loopne
pop
loopne
fsub
mov
lock
icebp
lods
jmp
add
add
fiaddl
in
fiadds
push
out
loope
lock
test
fcmovbe
mov
add
mov
or
in
lret
shr
mov
imull
leave
cld
bnd
mov
in
xlat
lret
or
call
lods
enter
lret
into
mov
cli
out
jmp
ret
add
call
ret
in
xlat
icebp
mov
mov
cmc
cld
mov
neg
sar
jmp
into
in
cli
loop
les
shl
lock
leave
loop
aam
movl
vpaddusb
mov
leave
rol
int3
mov
add
add
fstp
add
loope
or
repnz
jmp
not
mov
mov
add
jecxz
into
cmc
out
vcmpps
aad
xlat
jmp
aad
jmp
add
ret
xlat
or
lret
add
loopne
lods
jmp
mov
leave
jmp
ret
repnz
cli
or
rolb
fdivr
push
add
jmp
ret
shlb
lds
rol
shl
jmp
add
test
call
test
mov
mov
dec
aad
std
fcmovb
mov
aam
shr
cli
cld
pop
add
out
shll
shr
fdivp
shl
shl
ret
push
jmp
lret
add
lret
lret
int3
scas
cmc
mov
in
pushl
in
fadd
lock
mov
fcomp
jmp
int
out
jmp
icebp
into
leave
mov
mov
fdivrp
mov
lret
add
shl
rcr
out
call
rol
int3
icebp
xlat
shl
repnz
div
int
jecxz
loop
testb
in
push
fisttpll
out
leave
hlt
int
in
iret
shlb
mov
sti
rcl
iret
int
fmul
xlat
shll
mov
mov
out
in
in
test
ljmp
shl
cli
vpmaddwd
cmc
ljmp
add
rcl
fdivr
in
adc
lret
lods
ror
leave
int3
sarb
ror
fsub
fistpll
add
out
bswap
int3
repz
loope
loop
jmp
rcl
ljmp
fcomp
add
loope
out
fsubp
iret
ljmp
lds
icebp
imul
iret
int
idiv
push
aad
fsubrp
loopne
inc
ljmp
scas
mov
ret
pushl
mov
add
ror
hlt
or
int
add
rol
lret
in
mov
enter
cli
ljmp
lock
rol
loope
add
add
push
out
lods
aad
aad
loopne
sarb
icebp
fsubr
loope
clc
clc
mov
out
or
mov
lret
lock
out
in
fdivs
mov
add
aam
in
lret
mov
in
iret
jmp
clc
leave
shlb
fdivrs
hlt
fdivr
add
out
in
mul
mov
fidivs
int3
not
cmc
hlt
add
fmul
loopne
into
int
loop
imul
leave
in
mov
aam
mov
repnz
sar
incb
add
lock
ljmp
out
ret
rol
mov
aam
mov
push
mov
jecxz
out
loopne
repz
clc
in
repnz
clc
loop
fcomip
mov
sti
jecxz
fisttps
push
out
rcl
in
mov
mov
aam
mov
cli
sar
in
out
loopne
mov
rol
int3
clc
mov
in
mov
aad
out
fdivrp
fld1
or
jecxz
or
test
ret
cli
lods
aad
in
repz
stc
add
out
ljmp
mov
cli
clc
mov
bnd
mov
movb
mov
bswap
int3
ret
rol
int3
into
loop
aam
mov
iret
fdiv
cld
add
mov
add
out
cld
out
std
fcom
in
in
ret
out
ret
mul
out
mov
enter
mov
stc
mov
loope
clc
lret
fimuls
ret
leave
scas
sti
jmp
not
shl
jecxz
out
cmc
int
std
add
ljmp
test
shl
mov
mov
out
rcr
clc
icebp
rcl
in
add
repz
mov
out
mov
lret
into
call
int3
repnz
push
lret
push
sti
or
in
stos
fcmovnb
test
mov
lret
out
call
cli
ret
loope
imul
iret
out
fcmovne
fsubrl
lret
lret
aam
leave
std
leave
not
ret
out
jmp
add
fmulp
stc
fadds
mov
jmp
mov
iret
mov
jmp
mov
stc
out
or
push
leave
fimuls
iret
or
imulb
mov
ror
idiv
aam
int
stc
pop
fdivrp
add
or
sti
in
in
jmp
out
jecxz
out
sti
mov
fcom
in
out
fdivp
fsincos
jmp
aam
out
mov
mov
xlat
mov
in
fnstenv
hlt
shl
in
rcl
ret
ljmp
div
idiv
call
lds
out
lock
mov
stc
add
les
mov
in
repnz
fdivr
fdivr
out
mov
filds
cli
lock
shr
cli
or
loopne
out
mov
ffreep
cld
jmp
push
fdivl
ret
hlt
fcmove
hlt
jmp
icebp
rcl
loop
shll
jmp
filds
add
ljmp
cld
ror
test
ret
out
stc
fcmovnu
icebp
ror
stc
std
mov
std
or
movb
bnd
into
stc
mov
lods
mov
hlt
fdivrp
test
std
incl
aad
fsubp
adc
scas
lret
loope
in
shl
fsub
aad
call
mov
xlat
fnclex
push
add
clc
loope
int3
shl
mov
mov
mov
imul
hlt
fldl
cld
sarl
push
aad
loopne
lods
repz
mul
out
shr
jmp
fcmovu
mov
or
clc
hlt
fyl2xp1
leave
test
sti
mov
hlt
mov
shll
pop
repz
or
flds
iret
push
repnz
lods
mov
out
in
repz
lret
fcmovnu
call
mov
neg
jmp
mov
ljmp
aam
call
out
cmc
loop
lret
out
add
out
shrl
out
out
inc
fcomip
add
ret
mov
or
leave
out
out
out
mov
mov
imul
aam
icebp
shl
lock
call
lds
ret
cmc
test
int
in
enter
fcmovnu
sti
add
inc
fcomp
lret
cld
repz
jecxz
in
hlt
icebp
ror
hlt
lret
fcmovnb
aam
repnz
loop
push
or
enter
test
icebp
out
mov
mov
mov
mov
cld
jecxz
out
out
jmp
mov
lret
in
mov
in
clc
cld
mov
xlat
add
xlat
icebp
fdivrp
lret
fiaddl
stc
fisubrs
les
mov
mov
pop
add
in
or
out
in
lret
out
jecxz
scas
scas
hlt
mov
shrl
loope
iret
sarb
mov
or
or
loop
loopne
in
iret
out
in
cli
ror
push
aam
in
lret
clc
leave
fcmovb
fucom
in
stos
cmc
in
rcr
mov
fnstsw
fmul
or
or
leave
or
out
mov
out
fcmovb
jmp
clc
loope
loop
mov
loop
add
repz
fucomip
loope
loop
cli
mov
ljmp
out
testb
add
fcmovnu
or
mov
mov
shr
shr
ljmp
fdiv
fst
ret
ret
fucom
imul
fsubp
or
out
in
in
scas
loope
in
div
stc
mov
mov
stc
repnz
pop
shr
rorb
push
or
shr
vcmpps
fxch
ror
repnz
mov
loope
lret
or
fsin
jmp
shl
shr
idivl
mov
lret
hlt
ret
fucomip
enter
fucom
stos
in
sti
clc
mov
cld
mov
xlat
lock
cmc
or
wbinvd
iret
shl
call
int
rcl
shl
hlt
mov
rcl
cld
add
jmp
iret
add
mov
mov
fstpt
mov
cld
jecxz
cld
fmuls
roll
scas
fsub
rcl
enter
stc
mov
out
jecxz
jmp
hlt
loop
loope
in
pop
in
fnstsw
lret
fucomi
sti
fdiv
jecxz
int3
cli
repnz
in
loopne
fimull
hlt
xlat
lret
stc
fdivrs
jmp
fistpll
std
fucomp
fucomi
enter
rcl
shlb
cld
lret
clc
mov
hlt
fcmovb
add
add
rol
in
int
mov
test
ljmp
mov
mov
fsubr
fcmovnb
lret
add
bnd
xlat
sti
icebp
mov
lock
add
add
ret
loop
or
mov
leave
rol
loope
loope
mov
shl
cmc
add
roll
cld
jecxz
or
test
mov
lock
add
loopne
add
or
cli
cld
test
adc
mov
div
iret
in
aam
dec
mov
add
pop
stc
fucomip
fdivr
iret
mov
out
mov
cli
ljmp
out
mov
shl
in
test
lret
or
icebp
jmp
cmc
rcl
ljmp
aad
clc
add
lret
in
repz
mov
int
fldl2t
mov
in
iret
mov
stc
or
sar
out
add
add
adc
call
mov
cli
in
mov
loopne
hlt
sarl
lret
repz
shrb
mov
mov
fdiv
aam
mov
cld
pop
clc
stc
ljmp
lret
cmc
lret
lods
in
rcr
fdiv
ror
aad
sti
ror
aam
or
out
fsub
fsubr
jecxz
repnz
lret
lret
lret
into
mov
mov
or
ljmp
into
call
in
fyl2x
loopne
mov
fucomp
sarb
cld
fisttps
fcmovnu
push
in
test
fidivs
lret
mov
mov
mov
int
imul
xlat
dec
jecxz
psubsw
cli
cli
push
out
jmp
vcvtdq2pd
rol
repnz
mov
add
cld
imul
fucomi
int3
fiaddl
lods
scas
jmp
lret
jecxz
mov
xlat
mov
out
ljmp
idiv
out
div
aad
pop
add
in
in
divl
ret
mov
pop
cmc
out
in
cli
call
repz
lret
fbstp
cmc
fistpll
or
or
loope
shl
leave
lret
aad
in
lret
mov
into
add
add
hlt
aad
jecxz
loop
loope
out
shl
out
mul
repnz
fcmove
lock
mov
add
testb
rcl
test
loope
mov
in
in
mov
ret
or
jmp
lret
ror
jmp
lret
aad
int
in
rcl
clc
rcr
mov
cld
clc
stc
out
in
add
ret
mov
stc
lret
lret
mov
jecxz
ffreep
idiv
or
jmp
lods
mov
ljmp
fadd
stc
fnstsw
neg
fxch
int
jecxz
call
lret
loopne
in
into
shl
sarl
std
fdivrp
jmp
add
decb
ret
std
in
in
fcomip
mov
lods
mov
out
mov
cli
fdivp
repnz
jecxz
out
out
fimull
in
lods
mov
repnz
jmp
loope
hlt
mov
loop
loope
add
in
in
loope
mov
out
iret
out
std
mov
in
add
jecxz
out
fsubrp
fsub
std
int
repz
shl
ror
jmp
sar
add
repnz
lock
idiv
add
int3
enter
loopne
mov
mov
xabort
aad
into
add
aam
loope
icebp
std
enter
lret
cli
ljmp
sar
stc
lret
test
stc
cld
rol
leave
incb
iret
in
lret
out
icebp
loop
in
cli
clc
enter
neg
loope
faddl
loop
aam
faddp
add
mov
int
fcmovnb
mov
std
out
out
add
mul
roll
add
push
ljmp
in
cli
ror
iret
repz
fdiv
faddp
faddp
lds
ffree
hlt
clc
loope
ret
int3
out
shll
lret
shlb
mov
or
frndint
ret
in
mov
call
lret
idiv
icebp
hlt
rcr
ljmp
incl
lret
shr
imul
divb
lret
std
out
in
sti
repz
mov
fiadds
push
in
loop
mov
shl
shl
rol
mov
roll
aad
mov
stc
jmp
out
or
repz
sti
mov
leave
icebp
aam
fcmovnbe
mov
jmp
ret
mov
mov
lret
lret
cli
cli
fucomp
into
mov
neg
mov
jmp
fucomp
out
fdivrl
mov
xlat
lock
aam
jmp
loop
lock
rol
add
in
std
movb
scas
int3
call
lock
jecxz
lret
add
out
shl
jecxz
iret
add
in
stos
xlat
mov
rcl
lret
xlat
mov
out
mov
add
rcl
fadds
loopne
std
out
in
faddp
in
fdivrl
mov
out
ljmp
int
ret
ret
or
clc
sti
add
or
mov
cmc
mov
fadd
enter
pop
clc
or
loopne
iret
les
rcr
loopne
mov
xlat
int3
xlat
aad
in
into
jmp
add
ret
shl
lret
out
out
fadd
in
out
sti
lods
in
loope
fdivrp
leave
mov
push
lock
push
add
hlt
add
enter
loope
out
lock
cmc
clc
std
out
repnz
repnz
out
rol
out
call
int3
mov
xlat
int
in
cmc
sti
fmul
into
cmc
out
fldz
mov
lds
in
fcmovu
fxch
ljmp
sarb
lret
mov
fadd
jecxz
iret
std
jmp
jmp
test
enter
cmc
mov
fsub
add
ljmp
mov
out
ljmp
mov
std
in
repz
in
loop
jmp
shr
fnstsw
into
add
sti
into
push
sti
add
in
shrb
shr
mov
jmp
loope
mov
aam
leave
loope
add
repnz
mov
mov
mov
fxch
aam
fxch
mul
call
out
fucomip
les
in
out
in
fucomp
cli
mov
mov
aam
push
jmp
hlt
aad
in
repz
xlat
out
fmul
ret
mov
ljmp
cmc
cld
out
mov
inc
cmc
imul
std
in
or
int
mov
mov
out
out
lret
clc
shr
aam
out
loope
icebp
mov
loope
leave
or
mov
leave
ror
enter
in
repz
int3
out
in
div
loop
jmp
add
mov
lods
shl
iret
mov
fcomip
stc
mov
ret
add
std
stc
loop
stos
test
shl
mov
in
mov
fprem1
cli
ret
jecxz
movb
stc
jmp
shr
jmp
fxch
out
mov
sti
lock
ret
lock
idivb
ljmp
fucomi
leave
mov
cld
mov
add
fadds
xlat
mov
fcmovb
fiaddl
fsubrs
mov
mov
out
icebp
add
loop
imul
aad
lret
push
add
repnz
fsubrp
mov
in
in
mov
hlt
out
in
cld
out
add
cld
out
out
flds
clc
leave
fcomi
ret
jecxz
xlat
in
mov
call
aad
icebp
sar
out
ret
clc
clc
aam
or
add
in
out
out
aad
jecxz
jmp
mov
shl
lret
or
loopne
in
lock
out
icebp
enter
aam
std
mov
std
hlt
aad
call
repz
test
cmc
mov
fld
out
lods
mov
in
add
in
ror
add
repz
lret
cld
fincstp
repz
into
aam
aam
jmp
into
in
loope
mul
lock
mov
icebp
mov
sar
xlat
mov
jmp
ret
icebp
rcl
scas
loope
mov
mov
repz
div
sti
roll
aad
stc
or
adc
shl
ljmp
in
int
movl
hlt
cli
fimull
loop
icebp
mov
loope
lret
shr
hlt
fdivp
fdivr
fcmovnu
mov
imul
leave
call
inc
mov
shlb
in
sar
enter
out
jmp
cli
lret
or
rcl
repz
jmp
fdivrs
loope
cmc
enter
enter
fidivrs
aam
icebp
fidivs
clc
add
dec
or
fcomp
or
mov
jecxz
cmc
shl
xlat
clc
lret
jmp
mov
repnz
repnz
enter
cmpsl
int3
in
mov
loope
fcmovbe
ror
call
ror
rcr
add
adc
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
sub
sbb
xor
xor
xor
xor
add
adc
mov
xor
add
adc
mov
mov
mov
mov
movl
movl
mov
mov
mov
mov
cmpl
jne
cmpl
jne
mov
mov
xor
sub
sbb
xor
xor
mov
xor
add
xor
sub
sbb
xor
xor
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
xor
sub
sbb
xor
xor
xor
xor
add
adc
mov
mov
pop
leave
ret
push
mov
sub
subl
push
or
push
movl
or
movl
mov
xor
movl
add
mov
cmpl
movl
je
adc
mov
adcl
mov
movl
mov
decl
mov
sbbl
xor
adcl
add
mov
sub
mov
orl
xor
addl
add
adcl
mov
subl
mov
sbbl
xor
add
mov
movzbl
xor
mov
xor
add
movl
mov
jmp
mov
xor
movl
cmpl
je
cmpl
jb
jmp
pushl
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
lea
mov
sub
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
xor
xor
inc
mov
cmpl
jb
jmp
push
push
call
cmpl
jb
sub
sbb
xor
sbb
mov
sub
sbbl
xor
movl
cmp
movl
je
mov
xor
add
cmp
movl
jne
movl
cmpl
je
cmpl
jg
jmp
push
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
mov
movl
movl
mov
orl
movsbl
cltd
xorl
sub
movl
sbb
xor
andl
xor
movl
mov
mov
movl
cmpl
movl
jne
movl
cmpl
movl
jne
adc
mov
and
mov
add
andl
xor
add
inc
mov
cmpl
ja
jmp
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
and
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
xorl
add
mov
mov
cmp
je
mov
movl
mov
jmp
sbb
mov
adcl
xor
add
movl
mov
jmp
mov
sbb
mov
mov
andl
xor
add
mov
and
mov
mov
sbbl
mov
addl
xor
add
movl
cmp
movl
jne
adcl
mov
sbbl
xor
subl
add
movl
jmp
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
call
jmp
mov
mov
mov
mov
add
movl
add
movl
mov
mov
adcl
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
xorl
imul
cmp
movl
jne
sbb
mov
sub
xor
movzbl
add
add
add
mov
xor
andl
add
andl
imul
movl
mov
movl
jmp
jmp
lea
movl
cmpl
je
cmpl
jbe
jmp
push
call
xor
add
dec
mov
jmp
mov
movl
mov
movl
mov
sub
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
call
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
push
push
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
and
mov
mov
sbbl
xor
add
mov
subl
xor
add
adcl
imul
movl
cmp
movl
je
mov
sbbl
xor
addl
add
mov
imul
addl
add
mov
mov
movl
mov
movl
jmp
jmp
movl
cmpl
je
cmpl
jbe
jmp
push
pushl
pushl
push
call
mov
dec
mov
jmp
mov
dec
xor
adc
add
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
push
pushl
push
push
push
call
cmpl
jb
mov
xor
xorl
add
imul
movl
mov
movl
jmp
sub
mov
xorl
xor
xorl
add
movl
mov
jmp
sub
mov
xor
add
sbbl
mov
and
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
jmp
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
mov
jmp
in
xchg
sub
fs
jbe
jmp
mov
and
jnp
cwtl
jnp
loopne
stc
add
fdivp
add
ret
mov
jmp
icebp
jmp
push
aam
xlat
jecxz
ret
jecxz
repz
lods
lods
loope
ljmp
fdivp
int
fst
call
mov
out
in
fucom
stos
iret
enter
stc
neg
test
call
fmulp
aad
fsubr
cli
fcmovnu
out
repnz
cmpsb
shrb
loopne
in
clc
cld
incl
shl
lock
ftst
shl
stc
or
loope
clc
int3
rol
jecxz
repz
rcl
mov
out
idivb
filds
cld
clc
fsubrp
scas
movsl
shl
loopne
sti
mov
rcr
roll
out
in
sti
jmp
icebp
test
rcl
fucomi
cli
mov
enter
aam
rol
in
repz
mul
fdivp
clc
lret
aam
add
mov
xlat
shl
out
xlat
rcl
aad
fidivrs
add
out
out
cmpsl
scas
icebp
movsb
xlat
mov
call
fcomip
fcmovbe
mov
pop
lret
loope
fucomip
stc
fsubrp
or
aad
loop
call
fadd
call
add
hlt
clc
decl
icebp
sarb
enter
test
mov
cmc
ret
idiv
fdivrp
cld
or
in
mov
test
shl
leave
in
stc
mov
fildl
clc
xlat
ljmp
leave
clc
loopne
in
lret
loope
mov
mov
mov
loope
push
into
fsubr
cld
add
std
mov
or
mov
mov
out
test
mov
clc
fistpll
add
ror
int
aam
repnz
jmp
mov
icebp
out
xlat
add
in
out
out
add
enter
out
mov
enter
shl
faddp
mov
cld
fneni(8087
imul
into
in
fstp
in
lds
out
mov
icebp
aad
fcomip
loop
out
mov
loopne
std
sar
ret
mov
fsubp
mov
out
divl
clc
imul
aad
out
inc
add
rol
push
int
shl
jmp
aad
in
std
hlt
fsubr
sar
enter
loopne
sti
jecxz
lret
in
add
loop
fisubs
ror
xlat
fsubr
out
std
fcmovne
std
ret
aad
or
add
out
loop
call
mov
loop
fdivr
add
fdivrp
idiv
fcomp
int
out
lods
int
fninit
call
out
or
dec
or
int3
out
fdivl
cli
mov
cli
iret
fcomp
icebp
shl
cli
hlt
lret
cli
add
ljmp
xlat
enter
out
mov
xlat
icebp
jecxz
stc
stc
mov
out
in
or
out
lock
out
repnz
in
lret
mov
add
push
pop
rolb
in
push
int3
add
stos
ret
loopne
cli
int
icebp
call
repnz
shl
stc
add
fiadds
add
mov
out
aam
call
fdivrl
int
add
push
jmp
out
loop
faddp
shl
repz
aam
fcmovu
repnz
enter
ret
pop
icebp
testb
jecxz
mov
mov
int
loopne
lods
stc
ror
lock
jmp
fcomp
out
mov
sti
add
adc
mov
mov
cmc
jecxz
testb
shl
fsubrp
mov
rcr
shl
icebp
mov
shr
repz
hlt
ret
mov
test
add
jmp
jmp
repnz
out
ljmp
aad
into
fadds
jmp
fmulp
call
loop
mov
aam
repz
rcl
mov
ret
lock
in
fmulp
leave
aad
stc
cli
shl
mov
call
jmp
sar
cmc
add
in
out
cmc
fsubp
in
out
out
iret
shl
mov
jmp
in
in
mov
mov
repnz
ljmp
jmp
in
div
in
mov
enter
mov
std
in
call
add
in
jmp
sarl
ret
int
loope
jmp
repz
in
jmp
fadd
in
movsb
iret
jmp
mov
ljmp
add
aam
fcmovnbe
jmp
filds
ret
shl
lods
out
ret
jmp
aad
mov
xlat
stc
cld
ret
add
loopne
clc
into
add
lret
cmpsb
int3
out
iret
lret
ljmp
mov
hlt
loope
fisttps
ror
ljmp
in
imul
cmc
sti
aad
jecxz
mov
aad
rcl
fnstsw
in
fdiv
decl
or
mov
xlat
jmp
rcr
std
mov
mov
loop
push
lret
add
icebp
out
aad
in
fdivp
les
movb
ljmp
fstl
jmp
call
lret
in
out
fcmovnbe
lret
icebp
out
in
lock
fxch
loop
add
les
push
add
mov
lret
aam
ret
loope
xlat
sar
dec
add
int3
repz
lods
jecxz
cmc
fdiv
stc
aam
mov
loope
ret
push
clc
add
fildl
pop
jecxz
lret
hlt
enter
fnstenv
xlat
loop
filds
fdivr
add
cli
add
fsqrt
int3
fsub
mov
loope
jecxz
shl
sarb
mov
call
sar
add
mov
std
aam
or
stos
mov
lods
out
mov
loopne
xbegin
hlt
mov
loopne
pop
or
or
int
fucomp
jmp
ljmp
in
mov
test
sar
mov
xlat
jmp
fyl2xp1
push
fisubrs
iret
fcmove
enter
stc
mov
faddl
fcmovb
or
stc
aam
or
cmc
shr
ljmp
jmp
vpsubd
or
or
les
stc
lods
lods
ret
leave
sarb
repnz
shl
loop
ret
mov
stc
jecxz
loope
jmp
loope
ret
out
mov
std
fld
iret
clc
aam
in
loopne
cli
in
or
ret
out
mov
mov
shl
mov
mov
in
mov
testb
add
fucom
int3
iret
loopne
rcl
mov
mov
mov
mov
shr
cmpsl
repz
jmp
iret
ret
repnz
mov
cmc
add
out
shl
psubusb
loop
mov
mov
sti
icebp
in
ljmp
add
or
jmp
into
ret
loopne
jmp
lret
icebp
cld
cli
rcl
out
push
loopne
or
rcl
decb
or
icebp
scas
ror
mov
into
mov
cli
xlat
aad
lock
mov
out
lret
cmc
fsubrl
shl
mov
aam
mov
loopne
repnz
std
out
add
stc
int3
ljmp
out
in
fcom
fcmove
clc
loop
rcl
stc
idiv
stc
add
enter
out
ffreep
in
lret
rol
out
mov
shlb
cld
aad
ffree
rcr
psubusb
or
push
clc
loop
mov
into
mov
call
leave
mov
roll
neg
icebp
add
add
lret
leave
decb
call
in
divb
lret
aam
in
mov
out
lock
add
clc
add
or
enter
loop
int
mov
mov
enter
add
idivb
or
jmp
in
lret
icebp
enter
in
repz
aam
iret
mov
mov
fcmovbe
fldl
out
dec
adc
out
fsubp
shr
out
in
ljmp
jecxz
mov
icebp
xlat
idiv
jmp
scas
icebp
lods
loopne
out
mov
mov
mov
call
flds
shl
testb
lret
or
ret
out
out
lret
int
lret
ljmp
add
testl
fmulp
jmp
repnz
cmc
fcmovbe
mov
cli
neg
loopne
add
or
cld
pop
lret
movsb
rol
out
mov
in
dec
fiaddl
fsubr
div
clc
out
loopne
jecxz
or
mov
jecxz
loope
loope
jmp
neg
ret
loop
jecxz
ret
ret
hlt
or
add
repz
lods
fcmovu
int
std
in
mov
mov
rolb
fdivrp
cmc
clc
add
jmp
inc
ret
jmp
aad
mov
repnz
repnz
mov
or
in
out
jmp
neg
in
mov
call
int
fcmovb
fucom
add
or
stc
into
out
mov
ret
loope
int3
in
mov
add
ret
mov
loope
aad
add
adc
mov
call
out
lret
in
div
mov
cli
aad
fsubr
into
les
lret
shl
cmc
shrl
lods
lock
loopne
shr
fcmovbe
shr
loope
fldl
jmp
imull
sar
sti
mov
fldz
add
ljmp
mov
out
int3
enter
rcl
in
lret
fdiv
call
sti
cmc
pop
fldpi
loope
or
fsubrl
loopne
into
mov
jecxz
shl
add
fdivr
mov
loop
add
shl
lods
imull
mov
fucom
add
add
fincstp
xlat
xlat
ror
int
mov
in
shl
add
cld
mov
cld
out
jecxz
in
std
mov
cmc
out
clc
mov
aam
int3
icebp
repnz
rcl
cld
out
idiv
add
leave
adc
fidivl
imul
fnclex
fcmovb
cli
push
ret
in
or
or
mov
repz
int3
lret
fcmovne
ror
shr
mov
push
or
add
out
jmp
enter
shl
clc
icebp
mov
int
fiaddl
push
fabs
repnz
ret
int
out
clc
mov
shl
ret
in
add
pop
jmp
mov
ret
aam
shr
jmp
aad
out
add
pop
lds
jmp
fcmovne
push
ret
repz
stos
lret
out
mov
mov
fsubrs
hlt
clc
jmp
rcr
jecxz
fcmovne
in
std
into
out
jmp
enter
jmp
cli
in
mov
fsubp
lock
hlt
ret
in
in
fstp
fsubr
lret
lret
in
rol
in
fidivl
cmc
mov
add
leave
out
mov
fisubrs
repnz
lret
rcl
fnstcw
xlat
add
enter
ljmp
in
int3
leave
out
in
mov
shl
icebp
ret
aam
lret
out
or
loope
out
jmp
aam
in
lret
mov
fiadds
iret
aam
icebp
incb
add
sti
out
les
adc
aam
in
loopne
lods
in
out
fcmovnb
cli
cli
int3
out
repnz
push
fisttpll
loop
rol
mov
divl
int3
mov
repnz
mov
aam
or
decl
ljmp
jmp
repnz
icebp
cmc
push
add
aam
clc
lret
mov
mov
in
repnz
mov
mov
xlat
in
cld
add
lret
fdivp
mov
into
lock
lock
out
cmc
hlt
call
adc
mov
mov
ljmp
idiv
aam
ret
lock
fsubr
pop
pop
out
rol
stos
mov
iret
jmp
sti
int
aam
rol
neg
aam
lret
add
lret
out
mov
mov
lret
in
aad
in
cli
leave
out
sar
std
fdiv
push
fxch
sar
out
mov
mov
in
xlat
mov
mov
lret
jmp
ljmp
repz
div
int
int3
mov
mov
in
repz
ret
decb
iret
rcll
stos
jecxz
shlb
in
mov
repz
push
out
jecxz
sti
fdiv
out
fsubr
sti
or
sarb
lock
leave
mov
add
rcr
cld
sti
loopne
xlat
out
fcmovu
into
loop
mov
ljmp
hlt
div
int3
add
repnz
cld
aam
or
out
fucom
jmp
lock
out
mov
int
clc
add
fstp
jecxz
add
flds
into
iret
mov
into
hlt
les
xlat
mov
ret
cmc
loopne
lret
stc
lret
fxam
into
pop
in
bts
fmul
rcr
out
lret
mov
in
not
pop
std
leave
cld
cld
sti
jmp
sti
loopne
shl
loopne
leave
mov
mov
repz
shl
rol
mov
loope
enter
jecxz
lock
call
mov
loopne
iret
loope
in
loop
loope
decb
pop
jmp
vpaddusw
repnz
int3
les
shr
repz
jmp
add
add
vcmpps
ror
leave
leave
repnz
repz
sti
loop
mov
mov
leave
loop
int
shl
aad
int
mov
in
mov
clc
add
std
aam
stc
jecxz
repz
loop
loopne
lods
vpaddsb
iret
repnz
fcmove
div
neg
jecxz
xlat
in
lret
out
std
int3
jmp
lock
in
sti
lods
call
not
les
ret
add
repnz
test
lret
loop
iret
mov
rcl
out
lret
cli
lock
fidivrs
hlt
clc
add
push
in
cmpsb
mov
out
aad
fxtract
lret
jmp
aam
loop
fcomi
aad
sti
shl
repz
ffree
mov
out
in
xlat
fsubr
leave
testl
or
add
fisttpl
or
call
fcmovne
rol
mov
cmc
int3
add
xlat
shr
add
mov
or
out
test
mov
mov
jmp
std
jecxz
jecxz
fsub
add
rcl
or
hlt
bswap
clc
scas
int
lret
cli
stc
cmc
repnz
mov
add
add
mov
add
mov
into
add
lods
iret
in
divl
mov
lock
stc
mov
add
in
mov
in
int3
mov
hlt
jmp
in
in
fdivs
sti
add
out
add
mov
rcl
lret
jmp
mov
out
mov
call
add
shl
mov
aam
fnstcw
out
add
mov
fcmovnu
ljmp
test
jmp
stc
repz
mov
sarb
testb
fdivr
out
in
out
shll
shr
call
repz
or
stc
loope
pop
add
cmpsl
out
in
in
hlt
aad
into
jmp
mov
add
push
rol
ret
add
out
enter
mov
loop
mov
in
sarb
into
hlt
add
rol
fsubp
jmp
ljmp
out
mov
loope
fidivrl
aam
cmc
loope
add
scas
shl
into
fcmovu
aam
lret
fcmovnu
int
repnz
hlt
enter
fdiv
mov
aam
out
in
mov
mov
imul
enter
sti
add
xlat
iret
loopne
shl
mov
fmul
stos
in
lods
mov
in
bnd
ret
cli
enter
stc
std
add
not
jmp
mov
mov
in
call
aam
rol
ffree
ret
vfmadd213pd
lret
loop
cld
mov
in
cld
not
add
int3
lret
pop
in
mov
test
mov
call
int3
cli
cld
out
lock
lock
out
or
loopne
iret
mov
lock
mov
ljmp
sti
neg
ret
out
testb
fscale
out
stc
out
lods
repnz
mov
fdivs
rcl
cmc
not
loope
out
call
fcmovu
push
out
mov
aam
mov
lods
out
in
dec
jecxz
mov
pop
push
in
into
fcmove
in
stos
in
mov
out
mov
mov
mov
iret
call
clc
clc
push
push
jmp
stos
lock
scas
shr
in
repnz
repnz
out
mov
add
hlt
jmp
in
iret
mov
fadd
ljmp
lret
jmp
lock
hlt
stc
lret
add
in
shl
iret
in
out
shl
add
loope
mov
fucomi
clc
fistl
mov
stos
call
std
fptan
call
rolb
pop
repnz
iret
add
jmp
mov
out
cli
leave
rcl
iret
fstp
mov
hlt
mul
aad
ljmp
shl
fucomi
iret
aam
sarl
into
stc
out
add
ljmp
mov
repz
ror
enter
clc
mov
sar
loop
pop
rolb
in
fdiv
push
shrb
shl
aam
shl
int3
fcomp
loop
std
cld
out
dec
pop
lret
add
loopne
mov
lret
cmc
mov
int3
enter
inc
rorl
jmp
loop
iret
into
repnz
test
ljmp
dec
mov
mov
out
mov
lret
mov
aam
rol
std
stc
lock
hlt
mov
push
aam
push
ljmp
mov
in
cli
sar
mov
sti
out
fsub
icebp
or
add
cli
or
les
out
mov
ljmp
mov
shl
int
repz
repnz
cmc
neg
loop
cmc
stc
jmp
lock
jmp
sti
aam
dec
repz
or
in
cli
into
out
add
out
scas
shl
mov
out
divl
lret
repnz
add
or
out
loopne
out
out
lret
out
mov
cli
icebp
mov
fnsave
fdivrl
loope
hlt
in
jmp
adc
scas
iret
int
out
mov
mov
out
repz
out
test
int3
add
lret
fcmovnu
psllq
out
mov
repnz
loopne
mov
xlat
jmp
mov
enter
fst
push
out
in
loope
jecxz
out
repz
clc
cli
mov
stc
leave
add
les
out
loopne
shl
jmp
aad
shl
into
mov
aad
clc
loop
idiv
or
lock
lods
cmc
mov
mov
mov
div
cli
fstp
add
jmp
or
out
cli
cli
mov
clc
mov
add
cli
mov
iret
cli
bswap
adc
int3
shr
jecxz
rcl
aam
in
in
jmp
push
fsub
mov
ret
fdivrp
repz
fbstp
fsub
mov
out
xlat
in
clc
repnz
bnd
mul
or
clc
int3
out
scas
ret
repnz
cld
into
lret
std
out
fstp
jecxz
lret
call
or
mov
call
in
testl
lock
fdivrp
fsubp
enter
jmp
mov
iret
in
mov
fcomp
int3
cli
add
aad
fcmovbe
shr
shr
out
decl
ror
in
scas
repnz
fsubr
div
mov
loop
mov
jecxz
or
lods
mov
iret
mov
clc
call
icebp
icebp
add
clc
in
into
add
lret
call
mov
mov
fyl2x
int3
fldl
mov
fnstcw
in
test
shr
leave
repz
sar
rcl
loopne
aad
mov
fmulp
shl
mov
jmp
int3
aad
xlat
bnd
loopne
ljmp
clc
fcmovb
out
lods
out
in
clc
mov
mov
jecxz
mov
fcompp
stc
in
ret
out
mov
push
stos
ljmp
lret
in
in
call
icebp
fcomip
mov
add
clc
or
rol
into
mov
in
jmp
aam
stc
not
mov
or
jecxz
aad
add
out
in
les
mov
stc
neg
icebp
cmc
jecxz
fstp
sti
or
mov
into
ror
mov
icebp
call
mov
aad
mov
idiv
call
or
lret
loop
lods
aam
sar
repnz
cli
in
fld
mov
mov
fiadds
cmc
loop
out
add
clc
fsubrp
in
lods
int3
jecxz
ljmp
cli
into
fadd
ret
aam
or
add
repz
icebp
fucom
ljmp
in
fucomi
in
cmc
mul
jecxz
mov
cli
or
ror
rcl
call
jmp
fidivs
iret
mov
or
or
out
or
in
out
in
in
out
loope
repnz
in
call
mov
loope
in
pop
pop
mov
shr
mov
mov
repnz
mov
into
aam
neg
loop
stc
ffree
iret
out
in
les
stc
in
fxch
div
repnz
cld
rol
fucom
clc
ljmp
cmpsl
fdivrs
int3
enter
aam
idiv
add
stc
ret
int3
rcr
sti
leave
ljmp
into
mul
in
loop
ror
int3
mov
into
mov
rol
ror
lret
aad
lret
push
add
out
mul
fcmovne
clc
int
fnstsw
int3
hlt
in
ftst
or
fimull
add
in
cmpsb
shl
jmp
mov
sti
shl
int
rcr
ftst
imul
xlat
neg
lds
loope
int3
divl
shr
repz
cli
int
call
aad
in
leave
sti
pop
sti
hlt
or
scas
mov
into
fidivrl
imul
icebp
icebp
fdecstp
mul
add
in
stc
ret
test
loope
mov
jmp
clc
in
fsub
mov
stc
add
or
jmp
stc
cli
aad
loopne
out
call
sti
mov
ror
fdivrp
rcr
fsubr
ret
mov
jecxz
add
rcl
iret
out
loop
mov
fnsave
cmc
add
in
ret
or
enter
lock
lret
mov
jmp
icebp
mov
cld
push
sti
in
lret
rcl
fcomp
out
repnz
leave
mov
aam
cmc
leave
hlt
int3
sti
mov
into
mov
jmp
or
aam
clc
loope
repz
lret
mov
neg
mov
aad
ljmp
cld
call
fucomp
mov
hlt
in
clc
icebp
sarb
mov
mov
in
int
jmp
shll
in
mov
fcomp
lock
push
ljmp
loopne
fdivrl
jmp
icebp
fld
in
fcomp
shl
fcomp
ret
or
ljmp
shrb
mov
stc
repz
out
fucomi
mov
mov
out
clc
fsubr
push
mov
loop
leave
out
cli
in
lret
mov
sti
ret
add
loope
add
cld
cli
int3
loopne
jmp
shll
lret
stc
incb
aam
shl
add
mov
hlt
sar
out
xlat
xlat
repz
mov
vpmullw
xlat
test
in
shl
add
vpaddw
lret
lods
int3
lret
mov
mov
rolb
cld
movb
shl
aam
vpmaxub
sarl
in
into
out
mov
fistpll
rol
iret
fildl
out
or
icebp
out
enter
repz
jmp
mov
xlat
mov
ljmp
mov
imul
jmp
clc
fcmovbe
icebp
mov
mov
fsqrt
add
ret
clc
roll
mov
lods
call
jmp
mov
idivl
or
fucomp
fld
mov
out
call
sar
iret
mov
sti
mov
add
fstp
sarb
repnz
in
add
sar
add
stc
out
loope
into
aam
add
lods
enter
ror
in
mov
aad
fmul
in
add
cmc
shl
pop
push
int
int3
in
mov
ret
out
mov
repnz
lret
out
fcomip
mov
loop
aam
pmullw
adc
int
test
mov
mov
mov
shll
or
ljmp
shlb
clc
cmc
call
fst
out
add
cld
sar
clc
lret
paddsb
fidivs
jmp
stc
fmulp
fdivr
lock
std
jecxz
decl
sti
add
fucomp
mov
icebp
rcl
in
rcr
loop
loop
fcomp
fcomi
or
cmc
or
mov
call
sarl
call
rcl
add
shr
femms
repnz
ret
out
rcl
mov
lods
aad
aam
mov
mov
int3
adc
cmpsl
repnz
enter
ror
fnstcw
mov
jecxz
or
loope
in
lods
ror
int3
lret
in
call
into
int
test
out
or
fdiv
out
call
ljmp
int3
sti
mov
out
faddp
ffree
cld
int
add
ljmp
clc
mov
mov
mov
out
push
std
hlt
inc
iret
out
mov
shl
scas
sar
xlat
jmp
mov
hlt
std
shl
hlt
call
fcoml
in
mov
shl
repnz
in
lds
std
mov
jmp
fdivrp
out
aam
add
in
test
lret
loope
cli
bnd
xlat
repnz
add
fucom
iret
out
cmc
aam
shl
sarl
fdivs
rolb
stc
add
out
add
ljmp
lods
mov
lock
mov
roll
iret
mov
lock
loope
mov
loope
rcl
aad
mov
int
imul
fcomp
mov
or
in
cmc
add
into
out
lret
rcr
out
clc
fcomp
jmp
mov
cld
ret
rorl
icebp
in
std
jmp
mov
int3
fcmovnb
int3
in
int
xlat
clc
fidivrs
aad
mov
or
shlb
mov
cmc
clc
mov
hlt
pop
cmc
add
in
jmp
iret
shl
fdivrl
shl
out
mov
mov
testl
les
push
lret
in
lods
int3
into
loope
sar
into
in
out
fdivr
int
mov
jecxz
add
in
in
les
mov
rcr
fcmovbe
lret
int
aam
loopne
rcr
or
or
or
enter
enter
in
lods
lods
iret
mov
fdivr
sarl
enter
in
int
loope
hlt
in
int3
lock
out
fdivr
fdiv
mov
mov
leave
leave
rcl
call
call
int
mov
roll
iret
int
aam
hlt
add
aad
fld
ljmp
mov
in
hlt
leave
sti
clc
mov
ljmp
clc
mov
out
aam
int3
adc
ror
imul
lret
mov
mov
loop
fsubr
int
add
in
div
in
clts
add
out
out
sti
lret
test
mov
add
stc
lret
pmulhuw
in
call
loop
mov
clc
repz
sarl
add
loopne
fsubp
fdiv
lods
cmc
leave
out
loopne
out
aam
div
mov
pop
mov
add
lret
lret
in
movsb
jecxz
mov
scas
lods
test
cmc
sar
mov
rcr
jmp
add
out
out
rol
ljmp
aad
jmp
out
shl
cld
lret
fsubl
loopne
ljmp
lret
ret
shlb
cli
rcl
aam
out
mov
loope
loop
fyl2x
sti
in
enter
sti
leave
ret
aad
repnz
psubusb
sti
fst
mov
shl
mov
jmp
mov
mov
int3
in
neg
faddl
cld
aam
add
sarb
shlb
lret
repz
repz
not
fnstcw
leave
loopne
fucomi
in
test
rcr
lods
scas
in
aam
enter
mov
clc
or
add
loopne
shlb
loop
int3
shl
ret
sarl
mov
call
loop
test
scas
ret
out
lret
hlt
sti
leave
mov
div
jmp
out
rolb
add
adc
ror
repnz
aad
lods
in
into
stc
cmc
icebp
cld
incb
shl
mov
lret
out
mov
call
fdivrp
mov
mov
repnz
cli
fsubp
les
push
loopne
ljmp
xlat
fnsetpm(287
hlt
mov
mov
in
in
ljmp
ljmp
int
shl
mov
mov
in
cld
mov
or
rcr
test
repnz
cmc
shlb
shl
shl
leave
lret
or
add
leave
add
in
lret
jmp
mov
in
lret
lods
mov
mov
shll
loope
ljmp
repz
aam
icebp
std
mov
mov
or
add
add
lods
les
aam
loopne
mov
out
mov
loop
fadd
or
or
push
stc
ljmp
shr
fnstenv
mov
add
rorl
movb
loop
fcmovnb
call
mov
in
mov
lock
into
in
leave
mov
cld
jmp
psubusw
or
cmpsb
not
lret
stc
mov
mov
imul
in
out
stc
fldl
mov
or
cld
jmp
enter
enter
lock
mov
loopne
ljmp
jmp
bnd
in
hlt
out
hlt
les
fcmovnu
mov
fmuls
cld
out
add
out
lret
mov
leave
jmp
mov
rolb
repnz
clc
lret
aam
adc
out
shl
scas
aad
ljmp
jmp
movl
fcomip
movsl
in
hlt
cli
test
stc
lock
mov
call
jmp
or
fsubr
call
fnstenv
ror
mov
into
ljmp
hlt
aad
in
lock
lock
fucomip
lret
jecxz
ret
enter
fcmovne
mov
shr
ret
idiv
lret
std
jmp
shl
int3
out
icebp
lods
mov
in
mov
fprem
sti
ret
out
rol
frstpm(287
cld
cli
jmp
fmulp
lret
in
mov
lret
mov
out
int3
in
cmc
mov
add
shl
fildl
add
out
or
mov
in
int3
mov
jmp
mov
add
hlt
movl
jmp
dec
leave
jecxz
loopne
in
call
fdivrp
jmp
pop
add
add
shr
into
add
out
out
lret
call
fbstp
mov
rcr
out
cld
clc
or
lods
mov
rcr
enter
fucomi
repnz
clc
add
in
stc
fucom
out
repz
iret
icebp
lods
movsb
in
in
sti
mov
shl
filds
int3
rorl
or
jmp
out
fadd
mov
lret
sti
neg
shll
sarl
add
lock
add
mov
loop
mov
lret
aad
mov
jmp
hlt
aad
ljmp
scas
mov
mov
out
iret
mov
in
ret
inc
add
ljmp
incb
add
add
mov
mov
xor
add
cmp
je
jmp
jmp
mov
mov
xor
add
cmp
je
mov
mov
movzwl
mov
jmp
push
scas
jp
bound
xor
dec
jnp
out
jnp
into
fsubp
in
out
mov
into
hlt
repnz
fnop
cli
mov
fdivrs
aad
cld
shr
mov
mov
cli
enter
cmc
jmp
std
mov
lsl
fsub
enter
call
int
call
in
fistpll
aad
call
enter
loope
call
mov
iret
stc
hlt
in
fucomi
mov
aam
clc
lock
aad
fdivrp
in
mov
mov
mov
aad
fcmovu
jecxz
sar
repnz
shlb
hlt
divl
shr
shr
mov
jmp
sar
out
or
sti
lret
les
rol
aad
dec
mov
mov
repnz
out
in
fadds
jecxz
in
mov
mov
shl
vpmulhuw
mov
rcl
fdivr
enter
in
repnz
repz
mov
cld
iret
into
cli
xlat
mov
sti
or
in
lret
scas
test
aam
out
out
add
ret
mov
movb
jmp
into
scas
iret
lret
mul
loopne
mov
rcr
fdivrl
add
add
cmc
push
in
in
scas
ljmp
fcmovu
in
mov
add
roll
add
mov
enter
aam
faddp
int3
jmp
test
in
int3
in
mov
std
jmp
rolb
loop
in
int
mov
test
int
aad
xlat
call
add
or
repnz
or
pop
out
add
loop
lret
lock
loopne
repnz
out
into
add
in
fsub
aad
or
ret
jmp
loop
in
in
hlt
shlb
mov
loop
fcmovnu
neg
cmc
push
in
sti
push
int3
scas
shr
ret
mov
lret
xlat
cli
out
dec
xlat
iret
ror
rcl
ret
loop
lret
loop
enter
hlt
jmp
mov
fst
movl
cld
cli
or
loope
ljmp
mov
in
loopne
clc
out
icebp
leave
jecxz
add
shlb
ljmp
mov
rcl
call
leave
or
loopne
shlb
roll
ljmp
idiv
add
or
fimull
sti
ljmp
icebp
in
pushl
hlt
mov
jmp
fnsetpm(287
mov
add
ret
in
int3
in
jmp
les
icebp
loop
xlat
mov
lret
loopne
jmp
in
mov
aam
iret
lock
cmc
rol
repz
rcr
testl
in
out
int3
mov
hlt
aad
in
mov
mov
mov
cld
loope
jmp
loopne
enter
in
mov
mov
test
aam
xlat
in
mov
mov
not
call
out
cmc
out
repz
in
neg
int
jecxz
lock
mov
in
lret
or
mov
rol
repz
mov
ror
mov
out
mov
in
add
out
repz
ljmp
lock
mul
fdivrp
shl
loopne
out
call
mov
vpsllw
jmp
mov
loope
jecxz
hlt
fsubp
in
or
repz
repz
idiv
int
in
int3
testb
out
rcr
fscale
add
in
cli
loope
int3
pop
ljmp
lods
mov
mov
in
cmc
div
repz
mov
sar
lret
aam
bswap
shrb
int3
mov
rcr
rcl
sarl
leave
lret
lret
std
repz
imul
fmul
in
mov
mov
aad
in
clc
rolb
repz
stc
or
mov
in
fsubr
in
mov
out
xlat
mov
mov
clc
ret
stc
rol
incb
out
repnz
mov
shl
test
repz
int3
jecxz
icebp
loop
clc
jecxz
sar
stc
int3
shl
iret
test
icebp
mov
repnz
enter
aam
std
in
fdivr
fcmovnu
xadd
std
leave
in
out
repnz
ror
rol
rcr
mov
stc
mov
int3
jecxz
loope
or
cmc
jmp
lds
in
movsl
mov
mov
fsqrt
mov
bnd
in
roll
clc
sti
in
cld
mov
ror
lods
mov
in
mov
leave
leave
into
roll
mov
div
out
call
enter
int3
imul
in
iret
lock
cmc
cmc
int
repnz
cli
out
fdivrp
add
hlt
loop
rol
rcl
mov
sar
mov
repnz
mov
mov
cli
sar
ljmp
or
movsl
in
loopne
not
out
aad
in
jmp
icebp
mov
not
loop
add
ljmp
fucom
loop
jmp
in
xlat
stc
jmp
hlt
rcl
sar
ljmp
ljmp
into
shl
int3
cli
sti
int
aad
in
aam
aam
rcr
in
std
sti
push
std
out
in
iret
loope
mov
leave
out
not
repz
loop
icebp
add
int
stc
rcr
add
incb
sti
incb
mov
mov
in
mov
call
stc
not
repz
loopne
add
ret
shlb
mov
int
fcmove
mov
sti
mov
add
jmp
out
loopne
rcl
stc
xlat
mov
repnz
repnz
loopne
in
sti
enter
out
iret
leave
int3
sti
mov
mov
hlt
lret
icebp
roll
rol
add
leave
cld
pop
loop
cli
fmuls
mov
stc
div
aad
lock
mov
push
mul
add
or
clc
loop
fsubr
in
mov
lret
test
int
fsub
fadd
fdivr
add
rcl
in
jmp
cli
lret
icebp
xlat
jmp
neg
enter
add
xlat
fyl2xp1
loope
in
push
iret
test
out
out
mov
icebp
jmp
icebp
in
fnstsw
in
cli
testl
loope
cld
shr
fmulp
repz
mov
mov
in
shl
cmc
stc
add
add
in
pop
ret
mov
in
ror
out
jmp
mov
shl
hlt
filds
out
jecxz
bnd
aad
lret
lock
mov
ret
repz
ror
pop
push
fprem1
add
fucom
in
out
loop
lods
mov
lock
fldl2e
call
roll
or
pop
std
cmpsl
mov
scas
lret
in
ljmp
mov
add
call
loop
pop
scas
in
lret
lods
sti
ror
call
clc
fdivr
fsub
ret
lret
aam
cld
cld
add
repz
jmp
out
lock
aad
add
lock
rorl
loopne
jmp
int3
ljmp
mov
mov
shr
sti
mov
jecxz
hlt
sar
les
hlt
loopne
ljmp
shlb
out
in
fdiv
ret
out
loope
fsubp
push
jecxz
or
call
mov
out
enter
fscale
loopne
cmc
add
test
jmp
rcr
cli
rcr
clc
call
std
mov
mov
leave
fstp
int
stos
repz
in
iret
lock
repz
add
fiaddl
ret
fiadds
leave
shr
fmul
loop
lret
out
into
rcl
out
mov
std
sar
add
mov
clc
aad
or
mov
div
mov
stc
clc
mov
out
jecxz
aad
lret
int3
stc
ror
repnz
lods
ljmp
stc
mov
cld
fsubp
add
hlt
out
fcmovne
out
rol
repz
out
cli
cld
mov
std
ljmp
in
ror
ret
loopne
aad
repnz
lds
iret
mov
test
loop
mov
scas
icebp
out
iret
int3
loop
into
shl
aam
add
out
int3
fucomp
lret
fsubr
sarb
into
repz
fcomi
mov
ljmp
lock
sarl
fdivr
repnz
call
enter
rol
add
out
add
mov
mov
enter
dec
mov
hlt
in
out
loope
std
std
add
mov
in
test
hlt
out
jmp
in
iret
out
faddp
fadd
ror
movb
out
ret
lret
mov
loopne
sti
cli
shll
out
loope
add
cli
add
jmp
in
rol
aam
iret
ror
lret
jmp
mov
inc
add
cld
sti
loop
iret
ror
ljmp
out
cmc
fsubrp
fstp
fadds
mov
fucom
loop
push
add
ljmp
jmp
enter
rcl
add
sar
add
cmc
std
or
pop
leave
in
ljmp
hlt
iret
scas
int3
mov
sti
leave
in
clc
repz
ffreep
add
add
cli
out
test
lret
mov
jmp
les
lock
loopne
fld
fmuls
push
lods
test
mov
out
fmul
into
out
cli
lock
add
in
loope
cli
cld
lret
out
lret
ret
in
enter
out
out
rcr
std
add
repz
jmp
flds
lds
out
mov
sar
cli
add
out
inc
or
add
fildll
mov
out
repnz
mov
int3
lret
fsubr
fcmovb
loopne
or
add
loopne
adc
iret
into
int
icebp
loope
mov
lret
mov
mov
cld
push
faddl
shl
aam
in
or
lret
aam
out
lock
fnstcw
roll
mov
roll
stc
imul
bswap
lret
fdiv
mov
out
repz
add
rolb
shl
incl
ror
into
in
or
loope
loop
xlat
ljmp
mov
pop
int
idiv
loope
jmp
iret
or
test
lret
rcl
fcom
in
mov
cli
icebp
cmc
shl
add
or
fmul
lds
fnstcw
out
shll
sti
fcomi
add
aam
filds
loopne
call
leave
cli
mov
int3
jmp
mov
icebp
sar
testb
fmul
out
rol
mov
loop
mov
enter
shr
iret
rcr
rcl
faddp
fistpll
repz
lock
aad
out
out
rcl
repz
fstpt
idivb
cld
enter
mov
shr
lret
out
into
fidivrl
out
repnz
in
or
cli
loope
in
out
int3
scas
imul
out
xlat
enter
lret
add
mov
testb
loopne
add
ljmp
fcomi
lret
lret
into
cli
filds
mov
add
rcl
cld
hlt
push
iret
jmp
lods
lock
aam
fdivl
cld
sti
icebp
out
loop
push
adc
loopne
mov
shr
mov
iret
repz
mov
fpatan
shr
jecxz
clc
sti
fld
into
in
lock
fsubp
aam
mov
fadd
faddp
loopne
out
ret
cld
rolb
loopne
jmp
fsubrp
les
fdivrs
mov
rolb
lret
or
add
lock
ror
loop
shl
sti
cli
in
lret
shl
shl
cmc
mov
xlat
iret
into
out
fsubrs
mov
in
mov
fldln2
mov
roll
fstp
ret
or
call
in
fnsave
icebp
mov
idiv
jecxz
loope
mov
jmp
clc
int3
enter
mov
in
mov
in
enter
fcmovbe
loop
faddp
add
loope
out
int
int
ret
div
mov
fcmovne
lock
loop
mov
pand
add
repz
cli
ror
lret
mov
fld
stc
in
aam
add
mul
fmul
out
xlat
lret
int3
ljmp
out
mov
into
add
lret
ffree
dec
ljmp
scas
int
rcl
call
fyl2x
leave
lock
mov
leave
push
clc
filds
mov
ljmp
icebp
cli
ljmp
xlat
out
cli
out
cli
add
lret
fidivrs
call
mov
ret
rcr
rcr
out
fdiv
les
fdivr
lods
in
mov
sti
loopne
shl
out
stc
mov
mov
out
loop
jecxz
out
loope
mov
mov
mov
aam
sarb
stc
add
add
sti
loop
ljmp
shr
in
int3
mov
ror
enter
fsub
in
sar
not
shl
fdivr
repnz
loope
enter
mov
mov
mov
out
loopne
loop
clc
add
add
iret
in
lret
shll
shl
icebp
sti
loope
int3
cmc
lock
fidivrs
or
out
lock
bnd
aad
ret
in
lret
rorl
cmc
or
out
int3
int3
icebp
shrl
rcl
lock
fprem1
into
mov
mov
movb
out
call
or
enter
shlb
int3
mov
fcmovne
int3
mov
jmp
in
in
mov
mov
into
shl
iret
sti
in
fcmovbe
fiadds
sar
add
not
pop
enter
in
or
ljmp
stc
loop
dec
lock
ret
fsub
loop
out
into
jmp
xlat
shr
mov
in
out
mov
in
int3
ret
fildl
mov
loopne
lret
out
rol
leave
out
aam
out
shl
aam
mov
mov
testb
jmp
fsub
repnz
fcmovne
jmp
ljmp
shl
movl
stc
add
mov
mov
hlt
leave
hlt
mov
sti
loopne
fcom
aad
fisttpl
cli
leave
or
cld
shll
hlt
lret
in
fnstenv
clc
hlt
fincstp
in
out
fsubp
fcmove
iret
hlt
add
fucomp
xlat
scas
out
mov
into
mov
jmp
shl
loopne
mov
sarb
in
enter
lods
jmp
rcl
cmc
mov
cli
ret
loope
in
mov
mov
out
dec
loop
repnz
div
mov
out
mov
iret
rcr
sti
idivl
clc
in
int3
lods
test
mov
in
mov
in
fcom
cld
stc
mov
sar
fadd
add
fucom
ret
stos
out
jmp
sar
add
sti
mov
call
out
out
stc
int3
les
in
mov
mov
lret
lock
hlt
add
fmulp
imul
or
adc
ror
shlb
stc
hlt
int
mov
fcomip
aam
stc
add
or
push
or
lock
lret
scas
into
in
aam
fcmovne
dec
repnz
icebp
out
into
pop
cld
fadds
jmp
loopne
decb
add
fidivrl
in
ror
stc
lret
in
out
fcomip
fadd
out
flds
add
stc
cli
into
ret
iret
repnz
mov
jmp
sar
sar
div
add
into
out
cli
out
loope
add
ljmp
call
mov
sti
in
out
add
ret
or
icebp
test
in
mov
repz
ret
fildl
lock
shr
add
stc
out
lret
fucomi
mov
mov
ret
loope
cld
jmp
jmp
in
shr
rcl
idiv
lock
neg
xlat
out
in
int
repnz
in
int
mov
lret
out
enter
sar
add
jecxz
add
loope
call
ror
shl
ljmp
fistpll
add
xlat
out
add
cmc
jmp
mov
ljmp
out
mov
mov
add
roll
mov
pop
mov
repnz
leave
out
shll
jmp
fcomi
ret
add
filds
in
shr
shr
hlt
out
cli
mov
repz
fdivr
hlt
add
repnz
or
or
hlt
in
call
mov
lods
mov
mov
mov
roll
sti
icebp
fnstsw
icebp
loope
shr
xlat
lods
out
rcl
ljmp
shl
in
inc
fadds
decb
shl
stos
rol
mov
divl
mov
mov
fsubr
loope
ror
ljmp
imul
ror
fdivrl
fstpt
ljmp
lret
scas
not
fcmove
cmc
stc
jmp
fmulp
mov
or
idiv
hlt
ljmp
lds
out
sti
hlt
ljmp
cld
ret
flds
aad
push
or
or
div
div
call
hlt
ret
add
push
in
repz
fdivr
loopne
lret
shl
shlb
int3
fstp
mov
iret
fcomi
out
or
in
cli
int3
mov
cmc
xlat
ror
repnz
loope
mov
or
in
loop
in
int3
int
xlat
mov
repz
in
shl
repz
aad
out
fmulp
rolb
cmc
hlt
test
jmp
in
jmp
pushl
rcr
shl
add
pop
add
lret
in
out
leave
sti
test
clc
mov
mov
aad
xlat
clc
fadd
aad
int
lret
into
mov
mov
lret
mov
lret
leave
icebp
mov
test
add
add
add
ljmp
mov
repz
fdivp
icebp
mov
repz
ret
prefetch
or
scas
mov
in
in
cmc
out
fidivrl
mov
ret
lret
fcmovnb
cld
add
loop
jmp
iret
out
mov
out
mov
fcmovbe
aam
push
icebp
in
clc
loop
or
filds
ror
ror
test
rcr
idivl
in
bnd
add
pop
in
mov
mov
mov
lock
cmc
mov
rcl
fucomi
fidivrl
loopne
add
fdiv
xlat
fcomip
enter
fldlg2
leave
mul
cli
rcr
cli
into
sarl
hlt
or
lret
test
lret
in
ror
fnstenv
out
fdivr
hlt
or
lret
enter
loopne
mov
in
loopne
lret
aad
rcl
aad
int3
fcmovne
mov
lret
cmc
std
aad
lret
out
jmp
ret
in
icebp
call
mov
mov
loop
add
sar
jecxz
in
mov
mov
ror
fnop
fld
fxch
iret
ret
out
icebp
int
std
lret
test
scas
ret
rcl
jmp
les
fistpll
or
repz
int
lret
icebp
lret
mov
repz
lods
in
push
xlat
aam
repz
cld
mov
cmc
leave
loop
jmp
cmpsl
mov
mov
enter
aam
mov
add
fdivr
dec
fxch
or
push
clc
jmp
in
ror
jmp
mov
fmul
cld
repnz
add
jecxz
decl
mov
mov
mov
jmp
jecxz
sti
add
clc
sar
test
or
repnz
loope
out
mov
out
iret
int3
cli
in
cld
mov
add
lock
loope
push
push
jmp
hlt
scas
loopne
jmp
mov
clc
add
or
loope
out
or
repz
xlat
lret
out
mov
fidivrs
add
ljmp
fsubr
lret
mov
jmp
out
clc
enter
int3
aad
fcomp
or
in
test
shl
lock
stc
fmul
shl
mov
xlat
sti
lock
add
decb
cld
mov
loopne
shr
out
mov
ret
add
jecxz
pmullw
lods
rcl
ret
stos
leave
ret
ljmp
hlt
mov
aad
sar
mov
vpavgw
loopne
in
mov
in
call
sarb
fcomip
lock
add
out
loope
or
int
mov
shl
mov
int
lret
fcmovu
int3
cmc
ret
roll
add
int
int
fincstp
loope
fst
out
aam
mov
loop
xlat
int3
add
ret
add
mov
shr
in
les
leave
out
mov
ror
hlt
shl
add
add
std
int3
into
fcomi
cli
lock
stc
loopne
out
fdiv
stc
aad
sar
iret
ret
or
enter
lret
rcl
loopne
mov
cli
sarb
ror
fcomip
cmc
jecxz
loopne
or
fsubrp
or
call
out
rcl
mov
sar
test
sar
fadds
lret
flds
loope
stc
fdiv
int
lock
ljmp
in
out
aad
out
add
add
in
jmp
int
in
icebp
rcr
leave
stc
fdivrp
fcmovnu
icebp
jmp
repnz
fstp
pop
into
jecxz
or
mov
ret
ror
neg
mov
lret
std
div
iret
aam
mov
fmull
mov
into
fsubr
lret
jmp
lods
xlat
in
hlt
std
fidivrs
add
add
lret
aad
jmp
paddd
enter
shr
hlt
in
in
in
fcmovnu
fsubr
int3
out
add
add
jecxz
or
in
lret
rcl
shr
lret
ljmp
mov
fldl
into
repz
mov
cli
stc
iret
lret
repz
mov
xlat
mov
not
out
pop
in
filds
ljmp
shll
lret
out
ret
fadd
add
clc
clc
loope
hlt
cli
or
int
ljmp
loopne
rcr
imul
in
hlt
call
out
hlt
imul
in
jecxz
lods
repnz
mov
loopne
aam
icebp
lock
fst
idiv
add
std
add
iret
aam
lret
out
fidivs
leave
in
aad
int3
dec
in
call
add
fsubr
pop
jmp
aam
std
or
icebp
ret
repz
shl
ljmp
xlat
jecxz
mov
sar
mov
in
in
in
mov
ror
stc
mov
fucomp
aad
call
stc
cmc
out
cld
add
or
or
push
or
loope
in
leave
shr
sti
cld
lret
iret
ror
mul
out
jmp
loope
lret
scas
out
rol
sti
shr
std
xlat
into
mov
cmc
out
fmuls
shl
or
jmp
shll
lret
into
fstp
fld1
repz
push
loop
or
adc
repnz
shll
mov
mov
loope
add
jmp
or
mov
ror
sti
aam
out
fsubp
rol
fst
add
rcr
vshufps
into
out
sar
out
add
mov
or
call
add
std
jmp
rcl
out
shr
icebp
in
ret
cmc
aad
out
hlt
cld
jmp
out
in
repnz
xlat
mov
cld
sti
loop
loopne
fcomip
add
std
cld
add
enter
lret
mul
call
cli
into
clc
cli
std
fildl
cli
fsub
fcmovu
push
hlt
enter
or
xlat
mul
rcl
into
enter
std
clc
stc
leave
iret
fdiv
mov
filds
leave
add
test
int
out
repnz
int
mov
shl
jmp
or
mov
mov
stc
repz
cld
hlt
fstp
jecxz
rcl
jmp
loopne
repz
jmp
repnz
out
in
div
ljmp
or
call
int3
leave
loope
repz
jmp
out
lock
mov
out
mov
idivb
cmc
hlt
int3
into
ljmp
shr
mov
into
jecxz
lock
pop
clc
or
call
sti
fcomi
out
mov
xlat
fldlg2
in
cld
shl
xlat
loop
add
sti
out
int
loop
test
mov
mov
enter
sar
call
stc
xlat
stc
hlt
jecxz
in
loop
in
out
test
out
in
lock
mov
loopne
shl
clc
fst
pop
add
verr
stc
lret
into
shl
out
mov
scas
out
call
into
aam
out
ljmp
leave
in
lret
lods
shl
stc
mov
call
std
shl
lret
rcr
inc
loop
fdivr
repz
div
mov
scas
in
in
cmc
aam
aam
loopne
testl
loopne
or
loopne
mov
ret
aam
mov
add
repnz
add
loope
aad
in
cld
add
rep
loop
lock
mov
cli
in
mov
int3
mov
movl
or
rcl
leave
loopne
mov
leave
enter
mov
aam
shr
in
loop
ret
add
into
bswap
int3
loope
out
mov
aad
out
out
fyl2xp1
mov
add
aam
fcmovb
std
out
fcomip
out
enter
fst
mov
loopne
leave
fsubr
mov
cmc
mov
leave
lock
mov
mov
stc
loopne
mov
jmp
loope
aam
iret
sti
add
scas
int3
lret
scas
lret
lock
lret
fsubr
jmp
lock
cli
stc
std
mov
loop
shl
in
fldt
int
shl
lock
or
in
aad
out
mov
cmc
ret
mov
leave
cmc
fdivrs
add
sarl
faddl
in
or
adc
mov
out
mov
aam
stc
out
hlt
std
leave
int3
stc
shl
sar
add
cld
out
std
loopne
int3
fcomip
mov
mov
jmp
loopne
call
in
add
clc
clc
hlt
icebp
out
xlat
stc
add
test
icebp
lock
mov
std
int
sti
div
xlat
testl
int
push
lret
in
in
ffree
imul
leave
out
out
sar
fiadds
stc
lds
aad
out
in
add
faddp
neg
test
std
lret
mov
jecxz
stc
fisttpll
decl
sti
ljmp
cli
stc
enter
hlt
out
loop
in
aad
int3
faddp
repz
add
into
in
loop
mov
shr
out
fchs
out
mov
lret
fdivr
cld
fdiv
mov
add
mul
add
lret
in
ljmp
neg
dec
fcmovne
cld
out
out
stc
or
aam
hlt
fxch
ljmp
mov
mov
mov
mov
jecxz
jecxz
jmp
in
xlat
lret
out
ror
scas
scas
mov
rcl
leave
repz
mov
xlat
aam
roll
cli
add
or
loop
imulb
test
aam
mov
fldl
out
add
in
loopne
jecxz
rcl
iret
fcmovnu
shr
lock
sti
loopne
add
or
stc
fsub
rol
fmul
mov
ror
loopne
enter
mov
loop
cmc
stc
add
or
jmp
int3
mov
ret
clc
ror
hlt
cmc
cmc
ljmp
shl
mov
out
add
or
ror
mov
sti
aam
dec
std
into
mov
add
test
out
cli
cld
clc
out
scas
int
in
iret
mov
f2xm1
in
int3
cmc
icebp
in
mov
cli
into
hlt
loope
lret
shr
lret
out
icebp
out
hlt
in
mov
cld
fstpt
aad
add
incl
or
loop
cmpsb
mov
loope
mov
cli
into
fistpll
shr
loopne
jmp
int
scas
ret
aad
in
out
out
enter
std
cld
mov
in
cld
cmc
add
movb
mov
mov
sti
iret
in
mov
mov
out
in
in
decb
lret
fiaddl
scas
mov
ljmp
mov
hlt
clc
fldpi
out
loopne
clc
sti
fcmovnu
add
repz
jmp
mov
xlat
ffree
push
add
add
jecxz
adc
or
ret
ffree
in
enter
shr
in
ljmp
int3
leave
out
loope
decb
loop
in
scas
mov
into
imul
out
stc
mov
clc
neg
stc
aad
jecxz
out
add
rcl
mov
shl
leave
fcmovnbe
in
mov
xlat
jmp
add
push
fxch
std
ret
test
out
mov
lret
mov
enter
icebp
add
icebp
mov
mov
incb
out
jecxz
lret
mov
leave
fcmove
clc
sti
fdiv
push
loope
ror
neg
or
add
or
int
mov
ror
in
lret
leave
fidivl
hlt
int3
pop
loope
cmc
lret
ret
stos
in
out
shl
int
int3
mov
stc
fdivrs
sar
or
or
std
leave
or
jmp
ror
ror
sti
cmc
jmp
std
rcr
out
call
add
in
in
lods
in
aam
in
icebp
clc
mov
mov
mov
sar
sar
vpavgb
stc
stos
icebp
in
mov
out
int
mov
neg
roll
sti
jecxz
fcmove
ret
enter
divb
lret
in
sti
mov
ret
lock
aad
fdiv
add
fcmovnu
or
fadd
mov
repnz
rcl
cli
in
iret
idiv
repnz
add
add
rorb
fnsetpm(287
ret
repz
mov
lret
ljmp
cli
ret
sarb
loop
loop
or
scas
mov
shr
icebp
out
lret
iret
repnz
shl
idiv
loope
jmp
icebp
out
sti
or
call
mov
hlt
cli
in
mov
test
icebp
cld
add
out
ffreep
fdiv
or
fisttpl
out
dec
ret
scas
lret
enter
ret
fmulp
enter
cli
repnz
mov
std
enter
in
stc
ror
mov
shr
sti
repnz
out
mov
idiv
mov
rolb
fsubrp
iret
cld
repz
jecxz
lret
ret
shl
call
cmc
out
int3
mov
mov
loop
in
jecxz
leave
in
lods
aad
int
out
mul
call
ret
fcomip
fabs
jecxz
or
fsub
fcomp
ljmp
fmul
aad
hlt
idiv
mov
sarl
fmuls
jmp
int3
fmul
int
mul
shrb
sti
int
jmp
sti
add
or
out
push
in
repz
mov
lret
repz
aam
icebp
int3
icebp
in
les
mov
add
stos
scas
imulb
shl
jmp
mov
out
fimuls
add
std
shl
divl
leave
mov
mov
loope
mov
ffreep
mov
cli
por
int3
xlat
repnz
call
loopne
fneni(8087
fcmovnb
xlat
out
hlt
in
pop
repz
cmpsb
mov
test
lods
jmp
jmp
lock
out
icebp
ljmp
lret
loope
out
loopne
in
cmc
cmc
in
mov
add
idivb
leave
dec
dec
mov
shl
lret
jmp
aad
loop
xlat
stc
jecxz
call
cli
ror
mov
cli
mov
mov
jmp
icebp
mov
or
fisttps
mov
out
out
mov
fcomi
out
jecxz
loope
int3
mov
clc
int
test
mov
rcl
xlat
mov
mov
jmp
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
jmp
mov
mov
xor
add
cmp
je
lea
mov
mov
mov
mov
mov
mov
movzwl
xor
add
movzwl
mov
movb
lea
mov
movzbl
xor
add
mov
mov
movl
movl
mov
xor
add
mov
jmp
mov
inc
mov
cmpl
jae
mov
mov
mov
jmp
mov
xor
add
mov
jmp
mov
inc
mov
mov
cmp
je
mov
mov
movzwl
xor
add
movzwl
mov
mov
mov
movzwl
xor
add
mov
mov
jmp
mov
xor
add
mov
mov
mov
xor
add
mov
movl
mov
xor
add
je
lea
mov
mov
sub
xor
mov
mov
mov
xor
add
mov
xor
add
sub
sub
xor
mov
mov
movsbl
movsbl
cmp
je
mov
movsbl
mov
xor
mov
movsbl
cmp
je
jmp
jmp
mov
xor
mov
movsbl
mov
xor
add
cmp
jne
jmp
mov
xor
mov
lea
mov
jmp
jmp
mov
xor
add
mov
mov
jmp
mov
add
mov
cmpl
je
movl
push
pop
push
sub
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
mov
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
je
mov
xor
mov
xor
add
mov
mov
mov
xor
div
lea
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
xor
add
mov
and
xor
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
jmp
ret
ret
jno
ret
rclb
clc
push
sti
icebp
sub
jnp
out
jnp
fst
fstpt
add
leave
in
out
loopne
in
ret
loop
fsub
mov
enter
aad
out
shl
ret
mov
jecxz
enter
int
mov
xabort
cli
call
rcr
pop
fdivrp
sarl
iret
push
add
sarb
ror
mov
rcr
fcmovnb
ljmp
cmpsl
rcl
test
aam
shl
shl
into
fsubrp
into
xlat
aam
or
add
cmc
out
adc
test
out
not
int
mov
clc
ret
aad
aad
loop
fildl
leave
leave
add
in
shll
into
stc
jmp
ret
mul
jecxz
mov
cld
fcmove
call
out
call
rcr
push
stc
mov
fcmovnb
add
jecxz
or
rcl
mov
loopne
mov
int
cli
imul
neg
in
shr
iret
enter
lock
mov
icebp
lock
mov
mov
loop
fadd
add
fiadds
add
stos
loopne
repnz
lock
int
fidivl
mov
or
call
add
repz
jmp
call
in
ret
ret
pop
fcom
faddp
add
out
or
fcmovb
fidivs
test
shl
repz
stc
pop
cld
rol
ret
or
push
shrl
leave
jmp
in
lret
loop
aam
fdivr
rol
vpaddusb
ret
or
leave
loopne
out
scas
shl
in
ljmp
ror
mov
sar
or
fcmovne
or
bnd
hlt
icebp
mov
repnz
fstpt
std
out
xlat
fcomp
into
ljmp
shr
mov
mov
jmp
repz
hlt
xlat
neg
ljmp
ror
int3
leave
cmc
jmp
mov
repnz
ffreep
fdivr
iret
call
lods
shl
rcr
enter
lret
iret
add
fcomi
add
aam
out
add
ret
xlat
lods
aad
divl
clc
dec
pop
hlt
add
out
fdivp
out
adc
mov
mov
mov
int3
shl
cmc
ljmp
loope
loope
incb
loope
in
add
add
icebp
xlat
lret
into
clc
repnz
aad
aam
lds
push
std
mov
lock
lret
enter
cli
ret
mov
lock
hlt
loop
or
movl
lret
int
jmp
iret
into
stc
cld
leave
mov
mov
fcomip
hlt
cld
or
fcoms
fldcw
hlt
hlt
jmp
mov
loop
fucom
mul
cli
cmc
iret
adc
test
mov
icebp
mov
in
dec
fstpt
icebp
mov
loope
shll
loope
ljmp
shl
sar
int3
fcmovbe
fst
sysret
jmp
fucom
in
aad
fadd
stc
loope
mov
in
repz
mov
sti
out
aam
stc
int3
loopne
mov
cmc
loope
loopne
in
mov
shlb
rolb
cmc
sti
out
add
sarb
leave
lock
jmp
jecxz
ret
mov
fadd
pop
xlat
push
testl
loope
repnz
in
out
out
enter
icebp
out
cli
not
roll
in
add
enter
in
shr
std
test
repnz
repnz
clc
jecxz
or
ret
mov
in
shl
in
int3
rcl
aam
stc
xlat
in
sti
rcl
loope
enter
fsubp
or
lret
shr
sti
int3
clc
int
into
lret
stc
repz
std
mov
decb
cld
in
loopne
or
stos
ror
enter
lock
div
fcmovbe
repz
into
out
cli
shr
cli
cli
ljmp
mov
rol
sar
fstpt
int
roll
or
or
or
jecxz
in
cmpsb
mul
mov
in
enter
stc
aam
cmc
out
shl
fcmovnu
add
pop
in
lods
mov
int3
out
in
stc
rcr
shl
mov
icebp
int
fsubp
rcl
fucom
out
sti
or
in
lods
shrb
shl
mov
mov
faddp
add
cli
jmp
aam
leave
push
loope
in
leave
enter
ljmp
sarl
lock
lret
aam
repnz
jmp
shrl
jmp
int3
mov
fst
fpatan
fucom
push
cmc
push
pop
sti
add
push
call
jmp
lods
lret
rcr
repz
int3
shl
mul
add
enter
jmp
repnz
lret
mov
jecxz
ret
aad
in
out
call
jmp
out
shl
sarl
jmp
jmp
ljmp
in
loope
fbstp
mov
dec
repnz
icebp
or
lret
fdivr
fdivrs
int
mov
sar
mov
loop
add
fldl
add
add
aad
lret
shl
mov
mov
in
sti
out
fsubrp
mov
cld
repz
ret
in
incl
out
in
int3
iret
mov
xlat
clc
leave
fdivrl
int3
loope
fdivr
movl
ljmp
mov
mov
in
fistpll
mov
jmp
fimuls
lods
iret
sti
mov
in
mov
enter
mov
mov
ljmp
hlt
shr
aad
out
push
aam
clc
int3
shl
ret
fcomip
add
stc
syscall
test
mov
out
sti
fistpll
fcomi
std
rcr
ffreep
or
clc
pop
lret
out
lret
scas
int
in
leave
out
fnop
out
into
sar
mov
add
add
faddp
or
in
clc
in
mov
jmp
mov
enter
add
jmp
pop
fisttps
scas
fdivp
lods
scas
lock
mov
stc
jecxz
fldl
xlat
in
fiadds
fcmovb
fsubr
in
call
mov
ror
loopne
lock
mov
fcmovnbe
call
mov
imul
or
rcr
shl
in
mov
sarl
fdiv
mov
push
vpsadbw
fcomp
xlat
out
iret
in
shrb
fdivr
iret
fcmove
rcr
add
or
out
cld
rorl
test
fsub
in
int
fistpll
shl
loop
faddp
loop
fiadds
stc
lret
fxch
jmp
movsl
in
ret
ret
icebp
out
lds
cmc
sti
mov
loope
out
fcom
shl
rol
jecxz
lret
int3
in
fidivrl
std
fcmovnb
in
leave
ret
in
cli
int
repz
clc
jmp
xlat
ror
sti
fmul
rcr
add
cld
in
or
shlb
mov
mov
xlat
out
leave
jmp
incb
out
add
out
or
int3
into
out
shrl
aad
shl
add
int3
in
cmc
loop
jmp
leave
cld
jecxz
out
mov
shl
int
mov
jmp
loop
mov
loopne
aam
loope
add
leave
fldl
jecxz
ret
mov
out
mov
lret
rcr
fdiv
sti
fcmovb
shl
inc
enter
or
fst
mov
repz
mov
std
lret
leave
fdivr
mov
call
out
fsub
int
mov
in
cli
icebp
mov
cli
mov
fdivrp
stc
loope
mul
in
stc
fsubr
or
lock
mov
repz
enter
in
mul
repnz
out
add
out
lock
jecxz
mov
fcmovu
lock
aam
add
ror
int3
ret
ret
ret
out
ret
add
shl
test
out
fadd
mov
in
sti
mov
loop
ror
icebp
shl
mov
call
add
out
call
mov
rcl
leave
lret
mov
std
aam
sar
add
push
iret
add
out
out
mov
leave
mov
rcl
sti
out
fiaddl
fstpt
xlat
jmp
in
rcl
call
mov
lret
repnz
loop
aam
aad
or
ret
into
or
leave
mov
shl
lods
aam
clc
mov
ret
fsub
repz
decl
add
in
icebp
ret
out
loope
in
in
repz
fldl
div
mov
cmc
xlat
in
or
out
ror
aam
int3
jmp
int3
xlat
mov
fadd
ror
loopne
repnz
add
fmul
fsubrl
not
out
ljmp
mov
neg
call
call
out
mov
iret
clc
repnz
cli
enter
inc
or
ret
pmulhuw
repz
in
jmp
imul
sar
fcos
shl
mul
fisttpl
std
loop
icebp
test
mov
ljmp
loop
loope
add
leave
aam
add
mov
ljmp
ror
hlt
mov
shr
in
loope
add
push
or
repz
ljmp
std
out
aam
fxch
aad
in
xlat
jecxz
push
hlt
out
aam
iret
icebp
out
loop
out
iret
divl
fdivl
pop
push
cli
inc
mov
out
repz
add
loopne
aam
enter
jmp
add
add
mov
enter
out
in
hlt
in
mov
not
mov
cld
add
rol
fldln2
out
add
repnz
shr
mov
lret
fcmovnbe
std
leave
hlt
hlt
mov
jmp
decl
jecxz
repz
enter
mov
sti
mov
out
mov
fsubr
ljmp
loope
xlat
repnz
ror
les
fucomi
add
mov
dec
clc
mov
ljmp
cmc
int3
lock
loop
mov
into
out
flds
int
jmp
rol
mov
add
repz
mov
clc
sti
xlat
stc
or
loop
scas
shr
fcomi
mov
in
xlat
mov
add
loopne
jmp
iret
push
jmp
mov
ror
call
cli
add
rcl
shl
out
fisttpl
cld
fcmove
loopne
int
in
shl
cmc
rcr
jmp
aam
int3
out
hlt
rol
in
loope
loope
add
rol
push
out
push
fdivl
repz
loopne
mov
in
xlat
rol
out
mov
in
in
clc
add
int3
bnd
hlt
sarb
sarl
jecxz
add
iret
pop
adc
add
call
repz
shl
hlt
loope
ret
rol
ret
loop
testl
out
test
aam
int
into
hlt
repz
cld
fiaddl
stc
push
add
pop
in
loopne
mov
repnz
lret
hlt
int3
mov
loop
leave
jmp
fisttpll
lret
lods
int
int3
ror
shl
into
fdivp
mov
mov
les
aam
fld
or
int3
out
mov
loop
ret
xlat
aad
cli
hlt
loopne
stc
div
fcmovnu
fsubr
or
in
call
ret
shr
loopne
call
loope
aad
flds
in
fmul
mov
loop
mul
shl
int
enter
roll
fxtract
repnz
aad
pop
add
in
mov
in
in
shrb
loop
ret
rcl
int3
inc
sti
fsubp
out
out
mov
into
fidivl
out
fdivs
loope
mov
add
or
in
hlt
int
loopne
loopne
stc
sti
fnop
mov
loope
aad
in
aam
clc
loope
jecxz
add
out
out
lret
in
jmp
hlt
cmc
lret
clc
out
loopne
mov
shl
fdivr
movb
in
aad
aam
mov
cli
mov
loop
push
mov
add
fisttps
ret
xlat
in
mov
jmp
stc
lock
mov
fiaddl
cmc
testb
cld
clc
out
shl
out
repz
int3
fdivrs
jmp
loopne
shl
or
loope
in
repnz
int3
ffree
mul
in
mov
stc
repz
add
std
loope
leave
add
sti
out
out
fsubr
fdiv
loop
jmp
into
cld
int
rcr
div
or
in
fsubr
ljmp
mov
cli
neg
leave
out
sti
jmp
sti
add
aam
repz
add
add
or
mov
shl
cli
clc
lods
leave
out
shll
f2xm1
ret
or
shl
stc
fld
lods
loope
shll
mov
mov
call
xlat
rol
add
ffree
add
lds
int3
fildll
repz
in
mov
mov
ffree
mov
cli
clc
jmp
shl
aad
mov
cmc
fidivrs
cld
rcr
int3
mov
into
in
enter
faddp
lods
mov
repnz
rcl
mov
cli
lock
repz
testb
in
leave
add
ror
xlat
mov
iret
fucomip
fld
shl
fsubr
out
repnz
add
add
fildl
clc
int3
lret
ret
int
in
aam
lock
out
in
cli
loop
enter
fdivr
std
or
cmc
out
sti
ljmp
mov
out
scas
iret
hlt
in
mov
jmp
fcmovnb
fcmovnu
lret
add
rcl
shl
lret
fdiv
lret
call
lret
mov
mov
fcomp
add
or
lds
lret
rcl
mov
leave
shl
rcr
shl
ret
loope
add
icebp
add
fdiv
out
in
jmp
mov
int
cmc
shl
lock
std
std
fcmovnu
xlat
roll
hlt
ljmp
in
lods
xlat
sti
ret
fcomi
leave
lret
mov
in
add
sti
dec
std
cld
aam
enter
xlat
fisubrs
repz
ljmp
fiaddl
in
aam
jecxz
fimuls
fimull
loop
into
test
int3
mov
mov
xlat
into
fsubp
in
pop
repnz
add
or
in
mov
test
mov
mov
in
fsincos
ret
loope
cld
add
les
loope
in
jecxz
in
loop
lods
hlt
mov
mov
mov
into
lock
in
clc
fcomi
hlt
fcmovnu
out
jecxz
iret
cld
iret
ljmp
out
into
in
mov
sar
idiv
repnz
aam
in
bswap
iret
or
mov
ljmp
loop
jmp
mov
or
loope
or
lods
mov
enter
div
fstpt
xlat
loope
or
fisttpl
sti
repnz
jmp
shl
out
lock
fcmovu
rcr
out
aam
add
fimuls
mov
ror
icebp
call
mov
std
pop
fidivrl
call
fdivrs
iret
loopne
enter
int
fidivrs
cmc
or
into
out
enter
into
shll
add
out
fdivp
roll
fsub
pop
fimuls
cli
or
in
jmp
mov
add
loope
mov
or
lret
loope
mov
loop
lret
leave
shlb
mov
clc
not
in
mov
rcl
call
in
ljmp
fidivl
mov
fcmovb
stc
enter
sysret
mov
mov
stc
in
repz
leave
mov
leave
mov
fadds
mov
push
aad
fsubp
lret
sarl
lret
fdivp
jmp
ror
icebp
xlat
add
out
cmc
or
in
fsub
rorl
leave
int
fcom
rcr
mov
in
in
or
enter
decl
lock
shll
hlt
fcom
cld
jmp
loope
std
jecxz
lret
call
call
iret
in
clc
iret
divl
sti
roll
or
std
jmp
push
add
adc
call
cmc
jecxz
lock
sti
in
int3
cmc
sti
loop
fdivr
loope
cli
or
ftst
into
fnstenv
test
cli
fcmovbe
add
clc
lret
fldl
or
out
mov
cli
cli
mov
out
incl
fdivr
div
or
cli
fdivrs
int3
into
lret
mov
aam
roll
test
add
aad
lret
int
test
repz
lock
in
hlt
sarb
mov
repnz
cmpxchg8b
int
ljmp
mov
mov
enter
into
jecxz
add
out
fmull
out
mov
call
sti
sarb
lret
aam
add
cld
sarl
int3
test
shl
mov
mov
shl
mov
pop
fiaddl
iret
in
ror
in
divb
int3
clc
mov
in
loope
fsub
in
cld
add
rol
loopne
mov
rol
jmp
in
loopne
stc
sar
loop
dec
std
push
in
shl
out
hlt
repnz
mov
fldz
cli
test
fucom
out
iret
pop
iret
fimull
shr
rol
test
iret
in
enter
lods
iret
fmulp
sarb
mov
rcr
or
shr
ljmp
mov
iret
into
out
mov
loop
leave
add
int
ret
fdivl
clc
sti
clc
jmp
fdivrs
loope
aam
sti
std
lret
out
out
lret
loope
mov
mov
mov
out
imul
idivl
rolb
cli
cli
in
call
out
loope
lret
fcmovne
lods
mov
ror
in
fsubr
int3
cld
aad
in
loop
jecxz
enter
in
in
mov
mov
int3
mov
idiv
lret
fsubr
loope
in
out
in
aad
rcr
lret
fcmovnb
aad
iret
add
rcl
stc
fucomp
testl
add
mov
enter
mov
aad
repz
rolb
call
enter
shl
sar
mov
aad
cmc
lret
hlt
repnz
lret
out
ljmp
loopne
out
repnz
aad
int3
cmc
aam
loop
mov
in
fcmovnu
clc
or
out
mov
lods
ljmp
mov
fmul
mov
leave
mov
ffreep
push
ljmp
xlat
loop
mov
shr
mov
mov
icebp
mov
or
fadds
push
fxam
int
fcomp
ljmp
into
fxch
mov
out
lock
add
or
cld
call
out
shr
lret
icebp
int3
std
into
into
icebp
into
mov
in
ljmp
loope
lods
lret
shr
mov
iret
mov
iret
repz
ret
jmp
shl
shl
loopne
or
ror
fmul
in
fcmovbe
lret
in
out
in
repnz
aam
pop
add
jmp
scas
movsl
shl
aam
iret
lret
in
mov
loop
fnclex
not
rcr
push
fucom
sti
in
int
rol
leave
into
int
ljmp
clc
icebp
out
repz
roll
or
rcl
fxch
jmp
fidivs
shl
leave
icebp
mov
repz
rol
hlt
lret
cli
fmuls
loopne
shl
in
rcl
leave
div
sti
mov
in
xlat
stc
ret
faddp
add
repz
xlat
iret
int
lret
mov
repnz
mov
loop
rcr
stc
ljmp
enter
lock
aad
shlb
fsubr
mov
rcr
ffreep
call
loop
ret
rcl
lods
mov
aam
int3
mov
inc
push
icebp
or
xlat
leave
lret
loope
add
ffreep
shrl
mov
fcomip
call
add
out
lock
or
cld
in
shrl
loope
ror
enter
loop
into
rcr
mov
fsubr
call
scas
mov
rcl
mov
int
aad
in
lret
std
loop
jecxz
hlt
leave
fninit
out
fsub
jmp
neg
ljmp
repnz
add
rolb
push
mov
psrad
push
add
into
mov
mov
aad
in
fcompp
fdiv
icebp
ret
rcl
cld
scas
mov
rol
lret
mov
in
in
lock
repz
call
cmc
fstp
push
cld
or
enter
lods
shrl
stc
div
hlt
mov
leave
mov
xlat
rcl
jecxz
sti
jmp
out
cli
or
iret
test
test
mov
shr
in
fnstenv
cmc
sarb
leave
loope
repz
mov
fcmovu
mov
div
mov
movl
push
leave
loop
loop
push
add
repnz
fdiv
mov
in
fsubr
mov
lock
aam
fldl2e
or
add
cli
add
fcmovbe
mov
mov
roll
repnz
shr
out
fisttpl
push
iret
or
out
mov
cmc
out
int
sarb
stc
fdiv
testl
iret
or
in
mov
shlb
mov
repz
add
push
out
push
lret
clc
mov
lret
mov
loopne
loope
repz
mov
std
mov
in
sar
icebp
lds
cli
sarb
fadds
cld
out
ljmp
jmp
lret
fdivl
shl
jmp
iret
int3
add
aam
flds
stc
add
mov
mov
lret
fst
mov
jmp
or
stc
bswap
out
shl
sti
sti
mov
mov
add
stc
sar
add
add
fcmove
mov
loop
rcl
lods
lods
icebp
out
std
iret
jecxz
clc
div
cmc
pop
ljmp
add
lock
loop
ljmp
mov
mov
fadds
call
faddl
rcr
fnstcw
enter
in
lock
add
leave
loope
in
in
call
out
iret
sar
aam
mov
add
fisttpll
cmc
add
hlt
or
fiaddl
test
mov
mov
out
repnz
fdivrp
loopne
fdivrs
leave
push
ljmp
rcl
ljmp
aam
in
rcl
add
add
add
shl
add
jecxz
mov
mov
lods
mov
lock
in
mov
icebp
sar
jecxz
fadd
ljmp
fnsave
fdivrp
aad
repnz
sti
rcr
xlat
out
ljmp
int3
lods
lock
xbegin
cli
fucomip
std
testb
ret
iret
jmp
les
mov
mov
xlat
repz
aam
cli
ret
sarb
lret
stc
jecxz
jmp
lock
aad
in
in
fucomip
loop
jecxz
cmc
icebp
out
hlt
lret
int
fsub
shrl
repz
mov
mov
iret
in
cli
fcom
loope
out
loop
loop
fcmovnu
loop
fucomp
mov
rcl
repnz
out
repz
repnz
rcr
cld
jecxz
rcl
call
loop
out
loop
shlb
idivb
iret
cld
into
ftst
hlt
mov
hlt
les
stc
scas
leave
out
ror
std
mov
std
cli
div
loopne
jecxz
repnz
mov
rcr
iret
lret
aam
jmp
into
shl
fldz
repnz
call
into
mov
in
imul
out
enter
test
aam
xlat
fildl
or
shl
lods
int
repz
shl
fcmovu
icebp
call
rcl
out
fiaddl
in
fsubp
add
fucomi
hlt
loope
out
fdivr
lret
add
push
rcr
sti
lret
call
fsub
stos
lock
lret
out
mov
test
in
jmp
rcr
int3
out
cli
loope
call
mov
mov
fdivs
mov
fistpll
out
fcomi
out
in
aad
shr
mov
fdivp
int
out
stc
frstpm(287
shr
push
neg
push
in
loop
int
in
enter
cmc
xlat
in
lret
icebp
xlat
out
in
pop
aad
decb
out
les
test
aad
ror
mov
stc
fsubr
in
rol
in
fcomi
fldl
fcom
iret
loop
mov
mov
lock
sti
mov
icebp
out
mov
fcomp
rcr
loop
dec
loope
add
mov
test
in
fidivl
mov
out
add
fldl
int
in
loopne
lods
shll
mov
add
mov
cli
aad
fiadds
fadds
shr
shr
cli
mov
int3
aad
ret
out
loopne
leave
in
or
jmp
shr
div
in
mov
mov
loope
cld
int3
cli
add
add
ljmp
iret
mov
imul
shr
fistpll
add
xlat
in
pop
enter
ffreep
ljmp
mov
stc
fcom
mov
idivb
fdiv
fnclex
aad
add
int
in
lods
mov
in
lret
sti
in
lret
in
loope
sarb
loope
jecxz
out
int
mov
icebp
ljmp
fcmovnu
repz
cmc
in
cmc
clc
or
fsubrl
int3
lret
out
repnz
out
int
cli
idiv
std
cmc
add
loope
add
or
push
test
loop
mov
mov
fdiv
div
aam
not
hlt
sti
sti
call
loopne
add
add
fisttps
add
loope
into
in
lods
mov
icebp
repnz
xlat
mov
ffreep
hlt
rol
clc
out
or
hlt
fsubr
scas
loopne
out
mov
div
into
jecxz
enter
sar
loop
aam
call
stc
shrb
mov
mov
rcl
mov
mov
or
cmc
ret
in
out
in
icebp
loopne
lret
out
in
sarb
std
xlat
add
ljmp
clc
mov
in
jmp
out
fcomip
jmp
call
lock
in
icebp
fucom
test
fyl2x
rcl
call
lds
jmp
out
sti
loopne
add
cmc
push
in
add
shrl
aad
cmc
mov
loopne
out
mov
cmc
std
lret
rcr
mov
mov
mov
enter
mov
leave
lret
mov
aad
aam
fdivrp
ret
lret
loopne
fneni(8087
iret
out
std
leave
mov
int
fcmovne
rcl
aad
jmp
hlt
fiaddl
cld
mov
in
in
aam
fucom
shl
std
imul
repz
rol
ret
out
jmp
lods
loop
scas
bnd
in
into
sti
clc
in
mov
out
add
or
out
in
mov
mov
fidivrl
lock
shl
rcr
add
loopne
jmp
jecxz
loop
repnz
ljmp
sti
fdivr
repz
in
mov
faddp
push
fcomi
leave
ljmp
loop
ror
test
hlt
push
ret
mov
jecxz
fadd
cmc
leave
cli
lret
lret
mov
rol
in
div
hlt
leave
neg
icebp
mov
add
lock
out
in
lret
repz
aam
aam
hlt
mov
xlat
hlt
pop
jmp
hlt
lret
lret
enter
out
call
dec
mov
ret
ret
mov
add
or
call
ror
into
div
mov
rolb
fimuls
lock
or
in
out
cmpsl
lods
shl
hlt
ret
loopne
int3
imul
leave
int
hlt
fcmovbe
mov
cli
hlt
add
or
push
jmp
mov
repnz
test
cld
shl
sti
loope
clc
test
clc
add
iret
mov
out
loop
ror
shl
aad
hlt
enter
out
fcmovu
out
cld
adc
mov
fadd
mov
sar
bnd
jmp
repz
bswap
in
pop
int3
ffreep
jmp
mov
hlt
fucomp
cld
idiv
loopne
jecxz
in
in
hlt
stc
push
ljmp
int
in
inc
ror
shr
ror
icebp
mov
loopne
mul
or
jmp
out
mov
repnz
mov
iret
enter
rcl
ljmp
mov
loopne
mov
mov
int3
int3
sti
add
fcmove
or
into
or
mov
xlat
mov
jmp
icebp
cmc
fdivrs
add
ffree
cmc
cmc
leave
enter
rcr
lods
int3
mov
repnz
divl
add
idiv
cli
add
loopne
repz
out
mov
mov
out
into
repz
repnz
clc
shr
cld
lret
icebp
mov
mov
fidivl
int
icebp
mov
clc
in
or
fdivrp
loopne
cli
add
mov
scas
out
loopne
aam
out
mov
ljmp
cld
icebp
leave
lret
cli
into
rcl
shl
in
test
int3
ljmp
mov
ret
fiaddl
or
jmp
leave
pop
fxch
shl
leave
in
fidivl
int3
stc
aam
shl
in
in
aad
ljmp
repnz
in
cmc
icebp
in
int3
rcl
mov
fxam
jmp
cli
int
loopne
loopne
add
add
fsubr
mov
ljmp
icebp
enter
jecxz
iret
xlat
testl
cld
adc
jecxz
shl
jmp
jmp
mov
cld
add
add
or
in
mov
mov
sar
shll
add
sar
pop
shl
jecxz
in
repnz
in
out
xlat
aad
mov
enter
mov
loope
icebp
cmc
decb
add
fsincos
shr
in
iret
iret
out
xlat
mov
stc
aad
loopne
std
add
jecxz
jmp
fmul
test
shll
int
ror
xlat
cli
in
std
jmp
jecxz
iret
jecxz
leave
in
into
mov
shrb
mov
lock
mov
loop
sti
loope
std
add
stc
loope
cli
mov
repnz
int3
lods
sti
lock
fmul
std
hlt
mov
add
sti
loop
aam
add
test
ret
in
jmp
out
xlat
std
xlat
int3
fildl
add
in
or
lods
lock
shr
in
out
mov
imul
cli
clc
or
clc
out
pslld
mov
int3
aad
sti
into
aad
cmc
idivl
or
neg
incb
out
enter
scas
into
mov
lret
in
fidivrl
in
ret
add
int3
sar
add
std
add
stos
mov
leave
out
in
test
fcmovnu
xlat
ret
ret
inc
mov
enter
ret
imul
call
fidivl
out
ret
flds
fmuls
or
jmp
scas
loopne
jmp
out
into
neg
aam
frndint
shr
lock
call
clc
mov
into
sti
jmp
jmp
sti
incb
mov
in
call
mov
mov
in
into
mov
aam
aam
std
in
cld
cli
mov
iret
jmp
or
mov
call
div
lret
mov
jecxz
movl
push
or
fsubr
mov
mov
scas
idiv
testb
sti
jecxz
add
add
xlat
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
leave
ret
push
mov
sub
sub
movl
lea
xor
mov
movl
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
lea
mov
andl
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
add
neg
mov
negl
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
xor
xor
dec
mov
jmp
xor
add
mov
mov
sbb
mov
add
mov
mov
mov
xorl
mov
addl
xor
xorl
add
movl
cmp
je
movl
jmp
jmp
movl
mov
movl
cmp
movl
je
or
lea
mov
orl
mov
mov
and
xor
add
mov
mov
mov
sbb
xor
or
add
mov
xorl
xor
notl
add
mov
imul
movl
cmp
movl
je
sub
mov
inc
mov
mov
mov
subl
add
andl
xor
xor
inc
mov
cmpl
jl
jmp
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
addl
mov
adcl
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
andl
mov
inc
mov
cmpl
jbe
jmp
push
pushl
push
push
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
imul
sbb
mov
movl
mov
mov
movl
cmpl
je
cmpl
jbe
jmp
push
push
pushl
pushl
push
push
call
mov
dec
mov
jmp
mov
mov
xor
add
mov
mov
sub
mov
mov
jmp
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
add
mov
mov
sub
mov
mov
mov
mov
add
mov
mov
xor
add
mov
xor
mov
xor
lea
mov
xor
add
imul
sub
mov
cmp
jg
mov
mov
mov
xor
add
mov
mov
sub
mov
mov
jmp
mov
mov
mov
xor
mov
mov
lea
mov
mov
mov
mov
mov
mov
xor
add
not
and
mov
lea
mov
mov
movl
movl
lea
mov
mov
movl
movl
mov
movzwl
mov
mov
xor
xor
add
adc
movzwl
cmp
je
mov
xor
add
mov
sub
mov
jmp
jmp
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
mov
mov
xor
add
mov
mov
mov
mov
xor
add
cmp
je
mov
add
mov
mov
mov
mov
mov
movzwl
mov
mov
xor
xor
add
adc
movzwl
cmp
jne
mov
mov
mov
mov
jmp
pushl
pushl
pushl
pushl
call
leave
ret
push
mov
push
orl
push
sub
lea
adc
mov
mov
xor
mov
and
mov
mov
sub
mov
orl
xor
andl
xor
or
inc
mov
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jb
mov
notl
mov
andl
mov
inc
mov
cmpl
jb
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
leave
ret
push
mov
sub
add
push
addl
mov
xor
add
xorl
mov
movzbl
adc
mov
mov
mov
xorl
mov
movzbl
and
mov
mov
mov
mov
inc
mov
andl
xor
sub
movl
sbb
xor
subl
xor
mov
movl
mov
movl
cmpl
jne
movl
cmpl
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
pushl
push
pushl
call
jmp
mov
subl
xor
xorl
sub
movl
sbb
xor
xor
mov
movl
mov
cmpl
movl
jne
movl
cmpl
je
dec
mov
xor
or
sbb
mov
xor
xor
or
mov
and
add
xor
mov
movl
cmpl
je
cmpl
ja
jmp
pushl
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
movzbl
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
call
jmp
mov
mov
add
mov
subl
sub
mov
xor
movl
xor
mov
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
mov
xor
mov
xorl
xor
xorl
add
addl
mov
subl
lea
notl
mov
negl
mov
xorl
xor
subl
add
mov
adcl
lea
subl
push
mov
adc
mov
orl
xor
orl
add
xorl
push
movl
cmpl
je
cmpl
jle
jmp
push
pushl
push
push
call
mov
dec
mov
jmp
push
mov
adcl
pushl
sbbl
call
mov
orl
mov
mov
addl
mov
sub
mov
sub
xor
cmp
jne
decl
xor
jmp
xor
add
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
jmp
movl
movl
movl
or
mov
mov
mov
sbb
xor
addl
add
mov
sub
mov
sub
movl
mov
movl
movl
cmpl
movl
je
mov
neg
xor
mov
xor
adcl
lea
mov
xor
div
mov
add
xor
andl
add
mov
xor
add
andl
sub
cmp
jne
sbb
mov
xorl
add
sbbl
mov
mov
sub
mov
orl
xor
add
movl
mov
movl
jmp
sbbl
mov
andl
inc
mov
sub
mov
addl
xor
xorl
add
movl
cmp
jae
inc
mov
sub
addl
xor
or
add
mov
mov
mov
mov
mov
cmpl
movl
jbe
movl
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
call
cmpl
jb
add
mov
mov
mov
jmp
and
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
sub
mov
mov
mov
movl
jmp
xor
movl
jne
and
movzbl
xor
sbbl
add
movl
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
push
pushl
push
pushl
push
call
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
add
add
mov
add
movzbl
sub
mov
adcl
mov
xorl
xor
adcl
add
mov
andl
ror
subl
mov
subl
xor
mov
add
orl
mov
mov
mov
subl
sub
subl
xor
movl
cmp
movl
jne
mov
xor
add
mov
adc
mov
andl
xor
add
sub
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
pushl
push
push
push
call
cmpl
jb
sub
xor
andl
mov
inc
mov
cmpl
jle
jmp
push
pushl
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
andl
mov
inc
mov
cmpl
jb
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
movl
cmpl
je
cmpl
jg
jmp
push
pushl
pushl
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
add
sbb
mov
sub
mov
jmp
movl
cmpl
je
cmpl
ja
jmp
pushl
call
xor
add
dec
mov
jmp
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
sub
movl
mov
jmp
mov
movl
mov
orl
movl
movl
movl
mov
and
movl
movl
movl
cmpl
je
cmpl
jg
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
xor
xor
sbb
mov
add
mov
andl
sub
mov
movl
movl
movl
cmpl
movl
je
mov
xor
xor
mov
subl
xor
lea
mov
adcl
xor
subl
div
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
pushl
push
push
pushl
call
jmp
mov
xor
add
mov
xor
add
jmp
test
jb
adc
orb
xchg
jp
add
leave
out
add
leave
in
loope
mov
cmc
cli
mov
hlt
loop
loope
cmc
rolb
cli
lret
fdiv
out
lods
into
test
enter
mov
mov
in
repnz
repnz
shl
cld
loopne
leave
iret
icebp
ror
divb
out
fprem
cli
loope
ret
loope
lock
lock
cld
stc
cld
add
out
scas
ljmp
clc
shll
rcl
mov
repz
shl
add
lret
mov
out
divl
mov
in
hlt
out
mov
shl
clc
hlt
jmp
jmp
mov
sti
mov
repz
leave
aam
icebp
fldz
rcr
repnz
faddl
shl
loop
lret
out
in
out
ret
lods
enter
mov
loopne
loopne
sarl
push
loopne
std
jecxz
scas
xlat
ror
shl
mov
out
cli
xlat
mov
into
mov
jmp
in
in
fdivrl
shl
out
mov
rcl
repz
mov
fcmovnu
clc
aam
out
call
rcl
in
sar
mov
std
iret
out
fcomi
xlat
mov
add
decl
fmul
loop
add
fsubrs
rol
stc
mov
iret
sti
jmp
lret
fadds
rcl
fdiv
pop
ret
rol
jecxz
out
lods
lods
out
lods
leave
lods
int
rcl
shr
in
lret
add
in
repz
push
jmp
lret
in
shl
xlat
lods
hlt
in
lds
mov
cmc
fdivl
jecxz
cld
hlt
or
or
bswap
lods
lods
lods
repnz
lret
mov
lock
fcmovbe
shl
xlat
or
into
ljmp
fcom
mul
aad
add
lret
ljmp
jecxz
lock
lods
mov
xlat
mov
jmp
loope
push
stc
shr
add
fimuls
in
in
fxch
pop
fsubrs
shl
rcl
call
lock
cld
add
mov
add
fsubs
lock
mov
ljmp
cmc
in
std
jmp
cli
out
jmp
std
psrld
iret
in
out
into
out
cmc
jmp
out
cli
icebp
mov
repz
or
add
cld
in
fsub
int
scas
mov
mov
ljmp
mov
call
not
neg
rorb
loope
ljmp
cmc
cmc
mov
sar
enter
out
int3
repnz
push
neg
roll
enter
fdivp
leave
mov
ljmp
ljmp
decb
hlt
aad
cld
fdivr
shl
shrl
mov
mov
lret
mov
out
faddl
or
ror
fdivrs
icebp
mov
call
hlt
in
int3
ret
loopne
mov
lret
enter
mov
repnz
mov
iret
fucomi
fucomi
jecxz
add
ret
sar
into
jecxz
int3
lods
mov
hlt
jmp
xlat
mov
mov
call
icebp
in
shl
leave
aam
push
in
shr
lret
repnz
call
int
cmc
rcr
fdiv
fnstsw
or
or
iret
ror
call
aad
mov
fdivrp
mov
mov
ljmp
rol
lret
fidivrl
fdivl
mov
stc
push
aam
fst
fdivr
cld
or
call
out
cmc
jmp
mov
not
ret
icebp
add
shr
or
int
jecxz
sar
imulb
mov
fld
movl
cld
sti
ficoml
loope
repz
in
leave
fcmovb
mov
clc
rcl
loope
xlat
aam
std
add
aam
add
fsubrp
into
filds
into
mov
out
enter
call
mov
pop
lock
mov
jecxz
loopne
in
xlat
in
int3
in
mov
mov
sar
push
stc
clc
fstp
into
ljmp
lret
hlt
div
in
into
out
fxch
mov
add
idiv
lock
add
lret
int3
cli
aam
clc
aam
aad
cmc
aam
icebp
repnz
loope
lret
call
or
rol
in
lods
cmc
loope
jmp
mov
mov
ret
repnz
in
cmc
add
add
jecxz
push
or
sti
fucomip
in
bnd
fucomi
mov
jmp
aad
add
icebp
int3
add
rolb
lret
fimuls
in
mov
rol
out
fdivs
int
jecxz
idiv
in
ret
shl
out
add
test
aam
sti
out
out
fmul
lock
mov
fxch
loop
add
leave
in
ror
mov
lret
fistpll
mov
out
rol
add
iret
out
repz
mov
mov
in
shrb
rcr
repz
or
fst
movl
shl
in
cmc
lret
aad
aad
stc
aam
out
add
hlt
out
loope
in
adc
jmp
mov
ret
pop
in
rol
in
lret
add
lret
out
div
cmc
jmp
mov
faddl
out
aam
or
int3
out
lock
out
in
in
fsubr
mov
stc
int3
loop
fcomi
fucomp
add
fprem
jecxz
fucomp
mov
xlat
cli
xlat
rcl
lret
std
imul
loop
fldl
jecxz
lock
push
out
jecxz
pop
sti
or
iret
scas
into
not
out
in
loop
aad
clc
repnz
clc
out
add
in
pop
ret
pop
std
or
push
icebp
in
cmpsb
out
mov
sti
repz
cli
into
shr
loope
into
add
clc
rcr
jmp
adc
push
shl
ljmp
icebp
cmc
mov
mov
repnz
or
fadd
fxch
in
fistpll
lret
std
ljmp
rol
neg
cmc
sti
in
push
fdivr
decb
lock
repz
shr
fsubr
mov
not
int
stc
rcl
out
cli
out
jmp
std
loopne
shl
mov
in
mov
repnz
hlt
fbstp
ret
aam
std
fimull
add
aad
cli
int
in
enter
iret
idivl
lock
ret
mov
rcl
push
fsqrt
leave
push
std
fdiv
call
ror
int3
in
not
ljmp
in
aam
ljmp
in
rcr
icebp
in
leave
fcomi
mov
mov
out
add
push
add
clc
fcoms
out
jmp
lods
test
imul
divl
mov
shl
repz
add
out
in
repz
jecxz
aam
mov
repz
cld
cmc
mov
fcom
sarb
fsin
jmp
shl
aam
out
ljmp
int
rcr
cld
sti
jmp
call
scas
jmp
mov
ljmp
loop
out
fmul
call
test
loope
mov
rol
mov
ret
xlat
add
stc
int3
add
lods
out
ror
in
lock
shl
mov
fildl
loopne
loope
fidivs
dec
sar
mov
filds
xlat
shl
ljmp
lret
in
fsubr
loop
out
mov
repz
rcr
add
loope
fadd
add
jmp
add
int
loope
in
aam
out
leave
mov
mov
mov
add
mov
out
mov
lds
mov
fst
filds
not
push
cli
jmp
repnz
in
scas
loop
shr
shr
rcl
mov
cli
out
fimuls
rcl
rol
loop
lock
mov
in
call
mov
repz
xlat
pop
imul
loopne
hlt
push
mov
in
leave
repnz
jmp
leave
aam
ror
fcomp
pop
in
adc
jmp
repnz
int
call
out
lock
cli
cmc
bswap
pop
loopne
loopne
sarl
out
repz
stc
int3
fstp
iret
add
clc
roll
call
push
loopne
test
jmp
fadd
repz
div
repz
lock
cld
sti
std
add
in
clc
fsub
aam
stc
lret
out
call
loop
out
fucomip
repz
cli
rol
xlat
push
div
fmull
fisttpll
out
repnz
in
call
shl
mov
call
cld
rol
mov
or
hlt
shrb
les
mov
mov
shl
add
lds
fildl
in
shrb
out
jmp
enter
lret
sti
fldl
hlt
ljmp
sti
or
out
test
loopne
in
lret
cmc
add
in
enter
sti
sar
loop
out
into
adc
add
out
mov
lock
fsubr
imul
aam
loopne
lock
lret
out
fiadds
in
cld
in
scas
shl
mov
out
int3
xlat
ror
jmp
leave
fiaddl
std
lds
in
loope
or
mov
enter
fucomp
mov
loopne
mov
out
loopne
jmp
out
test
jmp
lds
stc
shl
push
in
fsub
iret
loope
clc
lret
in
shl
repnz
mov
cli
mov
shr
xlat
or
or
out
in
repz
into
mov
call
lret
icebp
mov
ret
sar
lock
ljmp
lret
mov
ret
lret
out
out
leave
icebp
not
mov
add
repz
hlt
cmc
rcr
in
pop
or
in
fucomip
cmc
out
ror
cmc
out
mov
testl
vpaddusb
fnstsw
paddb
clc
fxch
out
mov
xlat
sti
shl
out
stc
mov
mov
repz
jmp
lret
or
lods
test
fucomi
enter
int3
jmp
fldl
aad
aad
out
out
enter
add
lock
mov
icebp
int
mov
ret
add
std
add
in
or
out
lret
call
xlat
mov
repz
out
iret
in
or
cld
std
jecxz
ljmp
rol
cli
fdivrs
add
pop
repz
xlat
fcmovnb
lret
or
lods
into
enter
cmc
stc
mov
jmp
roll
call
ret
add
jmp
ret
shrl
mov
out
mov
repz
std
enter
aam
fcmovb
lock
sti
cld
out
jmp
mov
lock
lret
loope
std
out
xlat
loope
decl
leave
aad
int
push
ror
xlat
movsl
shl
ljmp
lret
fcmovne
not
loop
xlat
clc
mul
loop
fmul
filds
repnz
fst
fmul
in
call
xlat
int
incl
mov
clc
jmp
leave
fmul
mov
mov
mov
stc
in
in
mov
rol
shl
pop
not
or
out
hlt
out
in
mov
ret
shl
mov
ljmp
jecxz
fucomp
rcr
add
add
pop
fmuls
leave
jmp
mov
mov
vpmaxub
int3
fcomi
stc
rcr
out
faddl
clc
cli
or
in
iret
loop
mov
ror
jmp
mov
fdivr
shl
or
enter
bswap
rol
repnz
leave
sti
loop
int
clc
leave
enter
mov
aad
mul
clc
sti
aam
loopne
into
out
out
loope
vshufps
std
jmp
add
shr
out
jmp
shl
icebp
out
in
int3
repnz
int3
in
mov
ret
add
mov
cli
cmc
add
loop
mov
lret
mov
shll
hlt
cmc
fbstp
out
out
or
fcomip
mov
loopne
jmp
clc
mov
in
cli
mov
lret
hlt
bswap
clc
lret
push
jmp
int
mov
mov
shl
call
std
ret
stc
cli
call
add
mov
icebp
out
in
mov
int
out
lock
in
out
or
mov
in
leave
ljmp
mov
in
fdivr
aam
cld
jmp
enter
out
mov
vpslld
stc
testl
add
add
int
mov
rcr
jmp
cmc
mov
mov
fsub
mov
cld
loop
lret
ud0
add
icebp
ljmp
lock
rcl
cli
mov
cld
iret
into
mov
in
add
xlat
in
xlat
lods
fcomi
repz
aad
mov
mov
fucompp
out
lret
leave
jecxz
out
out
mov
enter
mov
shr
incl
in
in
fcomip
in
loopne
fsub
icebp
scas
int3
in
loope
mov
call
fistpll
ret
add
add
sti
fmul
stc
clc
jmp
shrb
jmp
hlt
fcom
cld
add
lar
add
pop
add
scas
enter
loope
mov
sti
hlt
repz
shr
into
repz
ret
shl
loop
in
add
jmp
imul
mov
rcl
jmp
f2xm1
xlat
shl
shr
ror
fcomi
roll
add
loop
in
repnz
enter
mov
sarl
mov
leave
rol
add
jmp
in
into
aad
jmp
sti
mov
fldl
stc
push
hlt
stc
mov
lret
fsubp
repnz
out
ret
cmc
shr
hlt
ror
in
sti
shl
rcr
push
out
std
enter
fcmovu
into
stos
mov
in
mov
not
into
in
shlb
in
iret
out
imulb
fcmovbe
not
mov
int3
fucom
sar
out
ret
test
shl
fcmovne
call
cli
jecxz
loope
ret
add
add
fisttpll
int
out
loop
idiv
int3
out
int3
lock
enter
idiv
hlt
enter
fcmovne
fnstcw
in
push
in
aam
loope
add
mov
aad
sti
lret
in
repz
shll
sarl
out
cli
aam
push
fxch
add
decb
repnz
repz
dec
out
mov
clc
out
fmull
jmp
fdivrp
cli
ret
lods
int
leave
fcomp
lret
add
mov
lret
ret
or
add
lret
shl
ljmp
shr
repz
mov
rolb
call
leave
loopne
fadd
mov
icebp
iret
in
hlt
ljmp
in
add
neg
loope
in
xlat
cmc
aam
or
out
lods
jmp
lret
loope
fcmove
clc
mov
fsubp
add
fcomi
mov
out
sar
add
stc
shr
enter
loope
div
in
test
mov
out
add
out
out
scas
lods
shlb
mov
mov
fdiv
rcl
std
fldl
fsub
out
in
scas
lods
mov
mov
int3
iret
mov
fsubrp
add
rolb
std
add
inc
loope
out
iret
mov
lods
jmp
test
ljmp
mov
jecxz
cli
add
out
repnz
shl
loope
in
mov
mov
fcomi
shl
or
leave
mov
cmc
loopne
int3
leave
lock
cld
sarb
in
fcmovnu
decl
fcmove
in
lock
in
repz
out
cmc
out
mov
iret
mov
testb
aam
ud2
in
cmpsl
test
icebp
lock
mov
loopne
fincstp
loopne
inc
ffree
push
in
out
fucomip
mov
faddp
aam
mov
out
into
out
not
mov
jecxz
mov
into
int
dec
out
jmp
shl
in
out
shll
repz
mov
add
jmp
add
pop
out
repz
jecxz
shll
cli
mov
idiv
in
clc
clc
fdivr
fsub
out
loope
in
in
out
loop
int3
scas
vpsubusw
out
std
mov
fdivrp
clc
add
rcl
add
sti
sti
ficoml
cli
int3
shl
repnz
shl
loopne
fcmove
hlt
rcl
mov
in
out
add
push
or
inc
out
mov
icebp
iret
lods
mov
leave
mov
mov
int
pop
mov
out
fcoml
or
jmp
rol
int
div
mov
add
mov
ljmp
in
iret
scas
iret
rol
out
repz
out
out
not
ret
in
out
add
fdivp
lods
mov
mov
vpsubb
add
aad
rcl
ret
add
leave
iret
pop
sti
jmp
lret
xlat
mov
call
out
add
roll
not
fcomip
stc
loope
lock
stc
shrb
leave
fnstenv
ret
std
cld
neg
loope
ljmp
iret
or
shl
aam
lret
out
rcr
shl
ljmp
flds
or
fiadds
out
fcmovne
test
mov
mov
mov
loopne
add
jmp
out
fisubrl
rcr
cmc
int3
mov
mov
rol
add
enter
mov
rol
ljmp
aad
sti
rcl
jmp
or
std
out
jmp
icebp
test
mov
icebp
into
icebp
in
mov
test
std
aad
or
call
repnz
lret
shl
in
cmc
leave
in
aad
fcomp
add
sar
fdivp
stc
idiv
lret
iret
mov
mov
in
cli
cld
ljmp
in
fld
or
std
mov
icebp
mov
ret
sar
into
jmp
test
aad
clc
fcmovu
std
loopne
ljmp
int
iret
loop
mov
mov
mov
add
mov
fcmovnu
stc
int3
shl
rep
aad
sar
mov
mov
mov
aad
imul
fdivr
out
pop
fucom
loopne
in
loop
out
scas
repnz
lods
mov
lods
in
neg
mov
sti
jmp
faddl
fadd
fmul
ret
loop
or
lret
in
enter
xlat
mov
sarl
pop
add
fisttpl
or
mov
fmulp
mov
jmp
jmp
lret
cmc
ret
clc
iret
fsub
shr
aad
add
add
scas
rol
icebp
into
lret
in
mov
in
out
std
shl
jmp
loopne
lock
mov
jmp
aam
in
aam
ret
fstp
push
ljmp
mov
aad
cmc
stc
mov
cli
in
jmp
rcl
fyl2x
in
add
loope
loopne
loop
mov
lock
mov
icebp
shl
lret
shl
cld
add
mov
fdivr
add
fld
lret
loopne
mov
mov
loopne
repz
sar
add
out
or
adc
lock
iret
into
lret
stc
hlt
in
call
shl
mov
push
fsubrp
stc
call
mov
mov
mov
mov
into
add
repz
lret
not
std
out
bswap
shl
mov
cli
mov
mov
or
add
out
loop
fnstcw
jmp
clc
mov
fld
leave
rcr
out
loope
add
loopne
out
add
iret
lods
enter
fdivp
lock
loop
mov
ljmp
fdivp
mov
loopne
lock
clc
fsin
mov
mov
out
ret
fdivr
std
loope
add
fiaddl
loope
out
mov
aam
mov
add
xlat
cli
pop
out
loop
fcmovne
inc
mov
loope
mov
ljmp
int
mov
fdivp
lret
leave
in
repnz
test
mov
mov
fsubr
mov
aam
leave
iret
std
loope
fcomp
push
shl
add
pop
iret
into
out
vpavgb
stos
ror
int
shlb
mov
cmc
in
mov
or
lods
sarb
mov
vpmuludq
fidivrl
stc
int
fcomi
xlat
jmp
out
add
or
rol
vpmullw
jmp
stc
clc
mov
hlt
std
in
lret
stc
loope
lret
loopne
not
iret
loope
mov
mov
icebp
fcomip
ret
hlt
aad
test
out
iret
cld
in
shl
in
aad
int
out
div
repnz
int3
fstp
mov
add
in
lds
cli
or
ret
loopne
jmp
sar
mov
repz
ljmp
in
fucom
fdiv
fnsetpm(287
push
adc
in
loopne
mov
jmp
call
not
sar
sti
fadd
ffree
sti
xlat
cli
hlt
add
stos
repnz
out
mov
in
fcomi
not
std
mov
loop
mov
fcmovu
repnz
vpsrlw
fcmovne
fptan
mov
repnz
mov
repnz
add
add
fisttpll
enter
shll
rcl
icebp
cli
repnz
mov
add
xlat
icebp
or
enter
stc
jmp
loopne
shrl
repnz
loope
add
in
add
jmp
or
add
in
enter
in
in
cld
repz
mov
in
cmc
testl
loop
in
int
ljmp
std
aad
add
loop
clc
cli
leave
out
out
fsubr
rol
lret
leave
ret
call
cld
fdivs
mov
add
leave
shl
cmpsb
leave
in
lods
mov
leave
cmc
ftst
into
div
idiv
iret
into
fcmovb
clc
add
or
or
ret
shl
fsubr
enter
mov
out
ret
mov
fcomp
jmp
hlt
push
enter
lret
fisubrs
rol
mov
call
pop
lret
ljmp
jecxz
lret
mov
mov
lret
lret
mov
rcr
shl
loopne
xlat
or
out
cld
loop
leave
jecxz
aad
xlat
stc
aad
out
neg
lock
repz
aam
in
div
or
leave
fsub
push
or
divb
leave
icebp
add
hlt
mul
ffreep
fildl
stc
fsubr
repz
mov
mov
cmc
in
lock
repnz
ljmp
add
add
mov
lret
jmp
mov
fadds
mov
or
or
or
call
rol
jmp
ljmp
repz
not
fcmovu
cli
ljmp
mov
sar
shlb
cld
mov
add
stc
rol
fmulp
rorb
fdivrp
adc
cmpsb
out
enter
jmp
call
ret
cli
mov
repz
add
leave
or
rol
ret
scas
mov
into
in
in
mov
mov
mov
ljmp
push
mov
fadd
mov
shr
call
sarb
add
push
out
fdiv
or
mov
xlat
enter
cmc
in
leave
div
pop
loop
push
ret
ret
jmp
repz
loope
loop
ret
ljmp
add
stc
std
shl
add
hlt
hlt
int3
loope
shrb
mov
fcomi
rcl
cmc
in
add
mul
mov
out
call
out
mov
enter
iret
mov
repz
mov
int
add
leave
shll
aad
leave
lret
into
add
mov
clc
aam
mov
test
fstpt
loope
aam
sti
mov
loopne
in
scas
into
shl
xlat
in
lods
repnz
add
jmp
add
rol
ljmp
imul
int
clc
in
mov
in
rolb
std
fadd
fsubrp
aam
decb
mov
ljmp
repz
out
stc
mov
idiv
call
in
stos
mov
lret
jmp
mov
leave
ljmp
iret
fldl
in
cli
rcl
roll
or
iret
iret
lret
mov
mov
cld
repz
mov
mul
std
out
loopne
lret
int
lds
in
clc
mov
mov
rcr
mov
sar
cli
incl
out
or
mov
mov
cli
mov
mov
ffreep
ret
fiaddl
cmc
hlt
or
fcmovnu
fildl
adc
fdiv
leave
not
in
fucomi
cmc
repnz
mov
cli
fsubp
cmc
add
loope
loopne
pop
ficoms
shl
loopne
icebp
hlt
enter
loopne
div
mov
rcl
test
std
or
out
in
mov
into
aam
fld
rcr
repnz
lret
lock
mov
loope
fsubp
neg
add
loopne
mov
ret
hlt
in
shll
shl
mov
add
add
out
in
out
test
out
lret
shl
jmp
cli
std
add
aad
jmp
mul
lret
ljmp
shl
icebp
mov
mov
jmp
std
loopne
fcomi
repnz
out
in
les
icebp
int3
lret
hlt
mov
mov
lret
repz
clc
ret
std
loop
in
in
in
or
jmp
int3
mov
mov
mov
mov
fsub
call
idivl
lock
out
ljmp
cmc
fildl
mov
fcmovbe
fidivrs
aad
xlat
jmp
mov
in
ret
int3
filds
loope
fdivp
jmp
or
mov
in
lret
enter
fcmovnbe
repz
rcl
out
shl
jecxz
aam
or
ret
loop
mov
out
shr
call
std
fcmovnb
pop
faddp
rcl
cmc
ljmp
shrb
mov
mov
int3
mov
add
ret
add
fdivrl
leave
in
in
mov
shr
out
fldlg2
shl
int3
out
imul
ret
mov
sti
lret
jmp
cld
call
leave
int3
out
call
clc
fcmovbe
fcomip
leave
int3
shr
fistpll
fsubr
push
pop
enter
out
shl
enter
fcmovne
mov
loopne
int3
push
les
cld
out
add
or
fdivrp
icebp
in
div
xlat
out
enter
call
fldl
loopne
rcl
lret
out
or
repz
iret
rcl
in
in
add
jmp
les
loopne
or
incl
stc
push
add
out
lods
shl
shr
in
rcr
mov
ret
add
jmp
jmp
loopne
test
ret
mov
in
mov
fmul
fdivrp
faddp
jecxz
mov
out
adc
icebp
lods
test
shl
shl
in
iret
imul
mov
fdivrp
add
or
lret
fmul
in
ffree
shr
mov
int3
mov
hlt
in
fdivrs
aam
adc
in
in
mov
shr
rcl
mov
fcmovnb
pop
dec
add
mov
out
repnz
enter
in
xlat
mov
rcl
cld
sar
in
fcmovnbe
add
jmp
ror
mov
repz
ljmp
mov
jmp
lock
or
adc
in
enter
iret
out
lock
fnstcw
int3
aad
or
std
out
or
in
filds
out
mov
iret
shr
aad
fdivrp
fxch
lret
in
int
hlt
rcr
fcomp
jmp
or
or
out
mov
fucom
sti
int3
sti
out
clc
lock
rol
ffreep
ret
cli
in
fdivrp
jmp
lret
stos
lods
lods
mov
enter
cli
cli
pop
fnstsw
fdivrp
add
lret
or
shl
sti
ret
jmp
cmc
mov
fucomp
out
icebp
push
sar
aam
hlt
int
lods
mov
shl
mov
loopne
shr
mov
out
jecxz
add
icebp
sti
iret
iret
fldcw
into
repz
in
mov
dec
into
mov
add
fcmovnu
in
fldl2t
icebp
in
mov
test
lret
shl
ror
loopne
jecxz
pop
add
leave
or
lret
add
stos
leave
repz
lret
mov
out
fcom
fcmovnbe
pop
sarl
fcomi
scas
into
into
ror
in
mov
jmp
stc
in
jmp
sti
lock
cld
stc
idivl
lret
into
mov
shlb
mov
iret
into
mov
aam
mov
fsub
loop
in
icebp
scas
in
icebp
les
enter
aam
jecxz
stc
loope
add
ljmp
mov
into
lret
mov
into
mov
fnstcw
out
fimull
stc
int
int3
fsubp
test
leave
out
hlt
aam
int
bnd
idiv
jmp
or
or
pop
fcmovbe
in
out
mov
lret
fcmovbe
fdivr
xlat
sti
mov
cmc
std
mov
enter
repz
mov
fsubr
jmp
loopne
les
loop
pop
add
loope
neg
fisttps
lret
cli
in
loopne
jecxz
iret
shl
in
aad
mov
fadds
ret
pop
fcmovnbe
in
lds
sar
add
cli
jecxz
test
lods
mov
icebp
int
clc
aam
shl
sarb
out
ret
out
or
ret
lret
repz
fsubrp
shr
iret
in
sar
push
sti
neg
add
std
push
lds
out
aam
ljmp
fidivrs
add
neg
cmc
cmc
in
repz
jmp
lret
mov
mov
add
inc
flds
fucomp
fsubr
jmp
iret
sti
fnsetpm(287
jmp
mov
fprem1
add
pop
fsubr
add
decb
rcr
repnz
aam
test
out
mov
shl
cli
cli
enter
clc
shlb
out
out
int
aad
cld
mov
ret
ret
or
std
add
in
std
fldl
mov
loopne
out
xlat
in
mov
mov
mov
jmp
icebp
fnop
sar
cmc
psubusw
jmp
fdiv
shl
mov
cmc
mov
cmc
enter
fucomp
int3
int3
ret
loop
les
int3
or
mov
ljmp
int3
mov
int
loopne
aad
cld
hlt
add
ret
mov
mov
neg
in
hlt
mov
ljmp
repnz
std
push
lret
decb
adc
mov
mov
mov
mov
mov
add
enter
fnstsw
fcomp
add
in
int
lock
lret
xlat
in
sarb
call
ljmp
clc
jmp
fdivs
enter
lods
ljmp
out
cli
in
jecxz
or
fucom
fbstp
repnz
in
mov
mov
out
test
ror
out
in
repnz
out
ror
mov
ror
not
mov
in
add
clc
fmul
loop
lods
icebp
call
aam
mov
cli
xlat
mov
xlat
fsubrp
cli
or
in
test
ljmp
mov
mov
aam
call
fsubrl
scas
lock
stc
out
mov
fnstsw
rcl
cld
add
loop
iret
sti
in
in
out
rol
loope
ror
repz
xlat
testb
icebp
in
fcmovnu
shl
pop
div
ljmp
mov
shl
mov
out
clc
int3
lret
int
mov
aad
fildl
lret
in
scas
xlat
out
call
aam
add
icebp
cmc
add
or
icebp
rolb
out
aam
push
jmp
loope
mov
call
mov
add
mov
loopne
faddl
adc
lret
clc
mov
cmc
clc
cmc
xlat
stc
std
loopne
in
cli
testb
in
out
add
leave
jecxz
xlat
loope
out
lret
lret
rol
mov
cld
add
jmp
hlt
into
push
mov
int
repz
clc
mov
into
call
or
loope
shl
push
add
fsub
test
jne
mov
add
mov
mov
mov
xor
add
mov
jmp
mov
inc
mov
mov
xor
add
cmp
jae
mov
sub
xor
add
mov
mov
mov
cmpl
jbe
mov
mov
add
mov
mov
jmp
mov
mov
sub
mov
mov
jmp
xor
inc
jne
movzbl
xor
add
mov
jmp
mov
xor
add
movzbl
sub
mov
mov
xor
add
mov
ror
mov
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
xor
add
mov
xor
add
sub
sub
xor
mov
mov
xor
add
mov
sub
mov
jmp
mov
xor
add
mov
sub
mov
jmp
movl
jmp
mov
dec
mov
cmpl
jbe
mov
dec
xor
push
pop
div
mov
mov
mov
movl
movl
movl
movl
movl
mov
xor
jmp
adcb
push
xor
pusha
push
dec
repz
test
mov
jnp
cwtl
jnp
test
rol
into
aam
aam
lret
mov
cld
enter
add
fdivp
fcomi
add
fcmove
stc
repz
mov
sti
mov
cld
test
mul
sar
hlt
dec
add
fxam
enter
in
loop
cmc
stc
fsubr
ljmp
push
ret
movb
jecxz
in
fcomp
into
in
xlat
ret
lods
test
ljmp
enter
pop
in
fcomip
in
in
loop
repz
jmp
mov
mov
idiv
mov
repz
ret
rol
movb
pmaddwd
fdiv
rcr
ret
ror
loop
in
ror
div
ret
ret
rolb
fdivr
add
paddusb
pmulhw
out
out
lods
lods
lret
sti
test
loope
out
mov
or
add
add
neg
fadd
repnz
cmc
xlat
sarb
not
div
repz
icebp
jmp
cli
lret
into
loope
lret
lret
lret
aad
les
std
lock
fcmovbe
or
or
repnz
mov
not
mov
filds
ret
add
loope
jecxz
fimuls
rcr
int3
iret
aam
out
enter
stc
fnstsw
hlt
fmul
jmp
stc
in
enter
ret
mov
shl
mov
fdivr
mov
add
pop
mov
out
fstp
adc
iret
mov
jmp
enter
repz
lock
cli
or
fadd
clc
add
enter
lret
mov
repnz
out
hlt
ret
jecxz
or
jmp
leave
into
loopne
in
lret
fcom
not
jecxz
idivl
iret
repnz
aad
shl
out
jecxz
fstp
test
shr
out
mov
call
out
shl
lock
mov
out
scas
scas
into
int3
mov
ret
int
aad
hlt
mov
loopne
add
fmull
stc
in
int3
out
mov
mov
lret
fmul
out
ror
in
add
inc
jmp
ret
pop
hlt
or
fmulp
loop
xlat
mov
mov
stc
mov
add
add
rol
loopne
sti
jmp
ret
test
mov
in
mov
fdivrp
fcmovbe
mov
jmp
leave
loopne
lret
repz
enter
jmp
out
iret
cli
out
jmp
shl
int
loop
pop
push
loopne
out
loopne
out
ljmp
fsubr
shl
cli
mov
fucomp
jmp
test
repz
rcr
aam
mov
mov
rcr
aam
fadds
push
int
leave
scas
out
leave
fnstenv
jecxz
idiv
ret
add
hlt
rorb
fcmovne
in
stos
out
ret
out
shlb
clc
in
not
cmc
out
add
or
fiaddl
loopne
lret
mov
mov
mov
lret
mov
add
movb
push
or
in
lods
loopne
repnz
lret
vpsubq
shl
out
jmp
into
enter
lock
out
repnz
out
out
out
iret
rolb
xlat
out
mov
shl
int
fdiv
shrb
aam
mov
rcr
cli
lock
push
shr
aad
jmp
clc
jmp
adc
rcr
int3
xlat
mov
sar
fnstcw
jecxz
std
stc
add
fildl
stc
jmp
loopne
repz
loope
mov
lret
int3
shl
mov
lock
ret
aam
aad
out
or
fsub
repz
ret
out
in
out
mov
ret
loope
shl
ret
loope
fstp
loopne
int
or
mov
mov
aad
in
loopne
int
lret
fcom
out
fcmovnb
add
shr
add
in
add
mov
lret
hlt
aad
aam
lock
rolb
mov
neg
ffreep
inc
out
shl
mov
lds
lods
mov
hlt
out
aam
jmp
add
fcomi
lret
add
lock
enter
lods
rcr
fxch
mov
aad
mov
sar
add
fcmove
flds
out
call
jmp
call
cli
testl
cmc
cmc
clc
lock
in
leave
jecxz
iret
int
scas
shl
mov
lret
aad
mov
stc
sti
hlt
add
leave
or
mov
leave
out
lock
mov
aad
jecxz
cld
jecxz
fdivr
std
or
out
jmp
loopne
mov
aad
sarl
fdivr
neg
bnd
lds
or
loop
clc
jecxz
enter
mov
idivl
in
std
loope
into
in
or
std
rcr
or
sti
cli
fdivrl
icebp
out
lock
fsubr
mov
mov
stc
clc
jecxz
leave
shl
jmp
cld
xlat
pop
push
mov
std
leave
out
sar
ror
shl
clc
idiv
stc
in
mov
in
mov
paddw
fmulp
loop
lock
fucomp
mov
in
enter
mov
mov
fsub
add
into
in
fsubr
enter
lret
rol
in
repz
repz
add
fsub
or
push
into
or
rcl
shll
repz
fadd
out
pop
jecxz
cli
in
or
aam
fdivr
or
push
fcomip
in
call
fucomi
repz
in
loopne
int3
inc
std
movb
or
leave
lods
in
xlat
jmp
mov
iret
mov
neg
icebp
add
xlat
add
fsubp
push
iret
adc
repnz
ror
cli
sar
aad
stc
iret
call
repnz
lds
in
leave
pop
jmp
les
mov
xlat
cli
add
int
icebp
cld
jecxz
add
fcmovnb
psubq
fdivl
into
jmp
fdivr
cld
jmp
mov
loopne
xbegin
in
jmp
in
repz
mov
mov
out
add
ljmp
lock
fcmovne
out
mov
fmul
fdivp
call
fsub
ret
aam
fiaddl
test
ret
ret
vpaddd
imul
sar
add
cli
jecxz
shl
out
fucom
std
adc
in
leave
loope
lret
cli
fidivrs
lock
loop
pop
or
in
rol
lret
ljmp
int3
repnz
in
rcl
loop
not
mul
jmp
cli
in
fldl2e
rcl
ljmp
aad
in
xlat
mov
rol
inc
mov
call
faddp
mov
lods
cmc
enter
out
mov
shr
call
jmp
out
mov
loop
int3
movsl
rcr
not
in
jmp
leave
ljmp
add
in
lret
hlt
std
out
or
fucom
test
enter
mov
hlt
lock
out
fsubr
rol
ret
out
mov
or
jmp
iret
lods
mov
mov
into
cli
stc
std
mov
add
out
pminub
out
mov
int3
sar
lret
icebp
rolb
mov
rolb
or
fimull
int
shr
ror
out
xlat
fcmovbe
aam
mul
fucomi
ret
loop
repnz
std
fucom
iret
lret
lods
vcmpps
xlat
loopne
repz
lock
sar
add
out
sti
jmp
divb
hlt
push
int
idivb
xlat
loope
clc
out
aad
add
into
pop
rol
out
lock
shr
int
in
mov
iret
aad
push
rolb
in
roll
jmp
loop
add
ljmp
aad
in
mov
call
xlat
rcl
ror
jmp
into
add
call
sti
shr
sti
scas
mov
sarl
loopne
hlt
add
into
in
lret
mov
lock
out
mov
shll
sti
add
inc
leave
sti
dec
fiaddl
lret
mov
call
in
sar
mov
in
cld
pop
jmp
jmp
loopne
loope
into
call
in
mov
imul
mov
hlt
loop
stc
add
std
call
lock
fdecstp
call
sti
out
sar
rcl
in
leave
clc
loope
adc
shll
int3
fidivrs
enter
aam
aam
fdiv
aad
repnz
loope
in
into
mov
hlt
mov
repnz
add
add
out
call
add
into
mov
vpor
int
mov
testl
std
add
fucomp
fst
or
loopne
enter
loopne
in
lock
out
int3
in
icebp
int
inc
push
inc
sti
mov
in
in
loop
in
lret
mov
mov
fst
stc
mov
xlat
or
jecxz
add
sti
out
or
int
into
shl
lods
lods
leave
lods
sar
sarb
add
ret
stc
in
add
aad
add
ror
out
repnz
jmp
jmp
fadds
lret
fdivrl
hlt
div
loop
push
lret
iret
out
lret
in
into
icebp
fnstenv
sti
repz
add
out
in
cli
or
mov
mov
lret
in
cmc
imul
mov
out
ret
add
filds
add
mov
loop
jmp
shr
mov
int
mov
idiv
cli
jecxz
add
or
int
iret
int
int3
repnz
repz
mov
aad
in
mul
shl
ret
stc
iret
loope
fucomp
loopne
test
mov
rcr
int3
jmp
mov
loope
out
enter
ret
out
mov
in
mov
not
mov
out
jecxz
or
lods
out
lret
loopne
repz
mov
cld
repz
stc
icebp
rcr
fdecstp
add
stc
rol
ror
lods
out
mov
into
mov
mov
shl
stc
shl
lret
or
in
or
mov
ljmp
ljmp
ret
add
not
push
sti
incb
or
out
mov
sar
test
fsub
mov
jmp
push
jecxz
bswap
shl
ret
mov
mov
out
hlt
mov
mov
push
fdivr
mov
add
lret
or
jecxz
in
lods
mov
sarl
xlat
fcmovnb
shl
xlat
jecxz
fadds
cli
incb
stc
in
mov
enter
rcl
aad
xlat
sar
iret
mov
lret
fcomip
lret
jmp
mov
sti
icebp
mov
jmp
leave
lock
fdivr
filds
int3
sar
rcr
jmp
mov
cmc
lret
pushl
loopne
loop
repz
or
not
fcmovne
out
ret
mov
not
jmp
cld
xlat
mov
clc
fnstsw
or
in
lret
fdivrl
lret
fucomip
fdivp
fcmove
div
add
fucomip
jmp
add
or
add
jecxz
out
jmp
neg
cmc
int3
cld
repnz
repz
loop
jmp
clc
vcvtpd2dq
rol
jmp
int
jmp
aam
std
aam
cli
aam
hlt
neg
add
jmp
enter
jmp
fdivp
call
ret
icebp
call
in
adc
jmp
out
fsubrp
lret
clc
out
rcr
fsubr
add
repz
loope
enter
or
test
scas
mov
mov
lret
in
mov
std
loop
faddp
in
roll
loope
in
or
fxch
out
shl
jmp
mov
lret
ljmp
shl
cmc
or
enter
lods
in
mov
call
enter
mov
or
jmp
hlt
add
out
fsub
out
lods
loop
leave
icebp
out
idivb
neg
fsin
rcr
loopne
lock
out
adc
test
in
xlat
mov
flds
mov
fcmovnu
or
push
out
std
adc
out
scas
lret
shr
jmp
repnz
mov
or
lret
fiadds
jecxz
or
call
jmp
mov
jecxz
mov
add
in
mov
rcl
loope
lds
mov
filds
std
rol
std
add
jmp
fsubp
mov
mov
imul
fcom
cli
mul
ret
cli
rolb
aad
std
aam
shr
or
fst
ror
ljmp
mov
fstp
mov
jmp
idivl
mov
lock
out
mov
mov
int3
incl
fxch
enter
lods
sarl
mov
mov
cmc
mov
fucom
les
out
shl
mov
imull
mov
add
loopne
add
enter
lret
mov
stos
mov
mov
sarl
int
sar
or
sti
push
add
out
xlat
iret
shr
mov
stc
call
neg
mov
loope
lret
ljmp
int
in
test
in
mov
shl
clc
lret
xlat
mov
jmp
loopne
mov
aad
ret
sar
rcl
mov
fmulp
test
mov
aad
lret
cld
dec
iret
loope
cmc
shl
mov
lock
mov
loope
mov
fxch
ffree
jmp
jmp
fucomip
mov
in
loop
mul
mov
cmc
not
fstpt
out
fcmovnb
fmull
or
scas
jmp
lods
in
loop
mov
push
idiv
aam
aad
out
repnz
loop
imul
mov
fdivrs
fldl
hlt
loop
or
icebp
in
loope
icebp
leave
ljmp
sti
neg
mov
fldl
add
hlt
pmaddwd
adc
test
mov
mov
into
aam
mov
push
rcl
rol
or
add
cmc
enter
icebp
out
int3
repnz
mov
out
in
leave
aad
in
out
rol
or
in
or
fsubrs
out
out
mov
repnz
int3
stc
xlat
cmc
icebp
or
in
fisttpl
fmull
add
ffree
lret
mov
fmul
jmp
stc
test
rcl
mov
sar
sti
ror
mov
stos
ljmp
mov
out
lds
div
into
iret
iret
stos
test
aam
mov
lret
cld
fcom
cli
fiadds
loopne
decl
repz
mov
aad
clc
mov
mov
mov
xlat
mov
repnz
aam
out
jmp
call
lret
mov
not
lret
mov
mov
in
fcmovnu
in
rcr
lret
enter
into
jmp
mov
test
mov
out
mov
pop
repnz
or
or
in
sti
int
stos
stos
scas
int3
fmul
test
out
fsubr
leave
jecxz
hlt
in
aad
incb
flds
fcmovne
out
loope
mov
into
call
fstpt
fildl
in
lret
jecxz
out
ret
shl
hlt
lret
ljmp
sar
add
or
sar
add
into
jmp
hlt
aam
jmp
mov
aad
xlat
fcmovnbe
rcr
shl
add
pop
or
lods
lret
in
in
mov
jmp
fcomip
int3
idiv
ret
div
in
push
or
fsubp
leave
push
or
repnz
shrl
neg
out
fucomip
out
add
ret
loopne
or
out
sti
jmp
into
imul
lret
in
rcl
les
in
icebp
out
cli
mov
add
out
fisttpll
jecxz
scas
mov
mov
in
sarl
stc
mov
dec
leave
or
lds
out
hlt
repnz
fcmovnb
hlt
fsqrt
cli
out
ret
decl
jmp
ret
add
loop
mov
iret
leave
loopne
lret
sti
jecxz
push
rcr
fsub
cli
jmp
add
loop
test
mov
fcomip
sti
add
sti
fcmovbe
add
stc
in
lods
iret
ror
lods
call
mov
in
pop
hlt
rolb
repnz
loope
rol
scas
ror
shl
mov
clc
int
incl
sarl
fdivr
or
std
ljmp
mov
mov
in
frstpm(287
jmp
mov
les
add
iret
in
call
test
jmp
out
hlt
fildl
rol
lret
jmp
add
cmc
int
jmp
aad
mov
into
mov
out
out
imul
clc
mov
ret
shl
int
jecxz
in
ror
out
into
imul
int
repz
fcmovnu
shl
fsubr
cld
add
iret
in
rcl
jecxz
mov
rol
aad
xlat
xlat
hlt
in
out
add
repnz
repnz
bswap
out
add
mov
leave
xlat
sar
hlt
aad
ret
out
mul
hlt
in
hlt
iret
enter
int
out
leave
mov
out
neg
clc
cmc
ret
hlt
mov
clc
add
or
stc
in
lods
leave
imulb
mov
enter
clc
ret
fincstp
decl
add
add
std
loope
out
xlat
movsb
cmc
test
fcomi
cmc
int3
ror
cld
mov
loop
fdivr
lret
in
or
ret
out
out
mul
mov
neg
fdivrs
in
fsub
ret
int3
jmp
lret
out
or
call
xlat
in
iret
ret
scas
ror
jmp
jmp
out
rcr
aam
out
fsubrp
aam
cld
hlt
std
push
stos
shr
in
lock
fdiv
mov
iret
sti
mov
in
add
lds
lock
out
mov
mov
cli
neg
cmc
cld
xlat
jecxz
fsubrp
into
pop
in
rcr
cli
loopne
add
fcmove
push
into
int3
iret
test
rol
int3
mov
mov
repz
loop
fcmovbe
call
out
shl
int
aad
mov
add
cld
hlt
fsubr
out
out
push
push
adc
in
fnstcw
ror
aad
ret
repnz
idiv
clc
in
or
stos
fildll
cli
mov
jmp
fyl2xp1
sar
in
repz
add
femms
add
out
mov
out
mov
cli
in
mov
fadd
in
add
loope
sti
add
loope
repz
fdivl
mov
icebp
xlat
rol
mov
out
in
add
out
lds
enter
mov
sti
add
ret
fcmove
ljmp
lods
ret
cli
test
rcl
mov
in
incl
fcmovnbe
incb
push
sti
add
ror
out
in
int3
into
mov
jmp
lret
test
int
stc
loop
movl
ror
xlat
in
shr
rcl
fxch
enter
loope
fnclex
mov
mov
repz
icebp
iret
cli
mov
jmp
aam
pop
loopne
fchs
add
imul
xlat
std
out
call
mov
mov
mov
out
int3
faddl
lret
add
incl
mov
or
cmc
add
int3
or
loope
into
mov
iret
out
jmp
int3
call
aad
fadds
bsf
pop
or
scas
repz
lret
lret
iret
mov
push
or
leave
jmp
out
loop
call
shlb
repz
mov
add
in
jmp
fldcw
sti
shl
lret
fldl2t
mov
jmp
mov
loopne
rol
add
call
mov
mov
cld
stc
in
fcmovne
into
loop
rcr
push
inc
decl
in
fdiv
test
mov
hlt
mov
stc
aam
fabs
add
push
add
lock
sti
add
fdivp
loopne
mov
jmp
iret
iret
out
mov
ret
ljmp
cld
push
in
cmpsl
in
repnz
xlat
in
in
hlt
lret
in
out
loopne
push
mov
out
out
loope
mov
shl
mov
aad
leave
aad
int3
aad
loop
loope
pop
fiadds
add
call
rcr
mov
lock
lock
repz
fdivp
out
push
push
jmp
out
fyl2xp1
stc
incb
lods
iret
lret
loope
mov
aad
iret
mov
fxch
aad
add
idiv
pop
loope
in
stc
out
jecxz
ljmp
std
lret
fdivrp
incl
add
add
push
in
out
repz
leave
hlt
sti
int
out
rcr
icebp
cli
out
sar
clc
push
fsub
lock
xlat
add
in
out
lret
mov
mov
sarb
fdivp
int3
mov
testb
add
fmulp
mov
into
les
lret
hlt
out
xlat
mov
add
aam
loop
add
jmp
in
in
int3
mov
aad
shl
loopne
pop
shl
in
or
in
or
loop
cli
ljmp
aam
shl
icebp
incl
not
fdiv
lret
fucom
scas
call
aam
lret
leave
add
ret
rolb
fadd
out
fsubp
or
or
adc
stos
call
cli
int
hlt
mov
fiadds
cmc
icebp
stc
std
testl
leave
fldl
int3
scas
test
test
repz
mov
repnz
icebp
sti
fcmovbe
in
out
cmc
fdivrp
out
add
ljmp
shlb
cli
cmc
fucomp
repnz
fdivp
ret
std
shl
loope
add
into
fmulp
loopne
shl
leave
xlat
in
mov
ljmp
pop
mov
loop
in
loop
icebp
leave
mov
jmp
mov
add
push
filds
fmuls
add
enter
enter
iret
movsl
mov
shl
mov
mov
fmulp
mov
sar
ret
out
add
ffreep
lods
mov
ror
fcmove
mov
fidivrs
ret
add
out
out
stc
or
icebp
mov
iret
mov
mov
out
mov
lds
enter
iret
out
repnz
stos
loop
lock
idiv
enter
sar
repnz
lret
ljmp
ret
movsb
repnz
lret
aam
call
in
std
cmc
rorl
or
ljmp
lods
fdivl
mov
in
movl
clc
loop
repnz
rcl
in
out
mov
lret
stc
mov
rcr
mov
mov
out
add
out
fnsave
ret
lock
mov
fxch
cli
xlat
push
shl
mov
fcmovne
jmp
lret
leave
rol
mov
in
out
mov
sarb
add
roll
push
in
or
in
jecxz
jmp
cmc
in
out
std
into
in
mov
fucomp
shl
fnsetpm(287
stc
in
repz
jmp
hlt
mov
cmc
lods
sti
mov
call
add
add
fmull
cmc
aam
add
scas
lock
ljmp
mov
fldl
repz
xlat
jmp
loopne
or
jmp
shr
scas
iret
aam
out
cmc
repnz
icebp
call
fmul
xlat
cld
lret
out
loope
cmpsl
repnz
ljmp
rcr
iret
jmp
cld
lock
fadds
shl
enter
lret
jecxz
mov
in
mov
mov
std
sar
roll
icebp
add
in
or
repnz
loopne
mov
loope
fcmovnb
ljmp
mov
clc
add
cli
add
out
lock
enter
hlt
mov
ror
loope
or
incl
int
repnz
mov
enter
sti
stc
testb
in
aam
out
lret
add
add
test
int
not
out
aam
cld
into
iret
ffree
stc
mov
cmc
fiaddl
fldlg2
in
les
sarl
mov
ret
mul
fiadds
in
vpsubb
test
xlat
jmp
int
sarb
sarb
out
fcmovne
in
add
lret
int3
shr
jmp
div
sarl
add
jecxz
pmaxsw
in
ffreep
lret
loop
into
lret
mov
jmp
rol
repz
out
add
stc
stc
cld
add
loop
rol
scas
mov
lods
aam
mov
cli
cld
std
fmul
fcmovnb
lock
fimuls
loop
repnz
repz
mov
in
in
fxch
mov
add
add
jecxz
fsub
into
push
stos
lods
xlat
lods
rol
lock
lret
fld
int3
ljmp
rol
imul
cmc
push
aam
adc
adc
in
mov
in
rol
mov
mov
icebp
fmul
hlt
std
add
cli
add
test
add
iret
out
iret
iret
mov
idivl
lock
mov
aad
leave
fldl2t
lds
loop
lret
out
scas
mov
icebp
repnz
clc
xlat
out
mov
sar
cli
cmc
ret
div
add
ljmp
into
mov
icebp
fucomip
ljmp
cli
ffree
fcomi
stc
lret
out
int
scas
jmp
repnz
lods
out
sar
int
call
sti
idiv
rcl
add
jecxz
fucomi
or
test
mov
repnz
clc
iret
stc
rcr
cld
sti
add
fst
fucomi
decb
hlt
in
or
lock
ror
lods
mov
shr
add
enter
push
mov
decl
add
lock
cmc
mov
lret
rcl
in
into
fcomip
loop
xlat
rolb
vpsrld
mov
mov
int
shl
mov
mov
repz
stc
stc
test
jmp
cmpsb
into
jmp
jmp
out
fcomip
ljmp
stc
out
shl
jmp
add
fdivs
mov
lock
leave
loop
sti
fcmovbe
xlat
out
fldl
int3
in
xlat
mov
in
jmp
ljmp
out
pop
cli
or
or
loope
add
clc
jecxz
shl
stos
int
mov
lods
loop
aam
cli
aam
mov
add
add
in
lret
lret
mov
mov
mov
sti
call
fstp
cli
idiv
hlt
fadd
ljmp
ror
jecxz
loop
rcr
in
out
lret
repnz
std
repz
in
add
add
fcmovnu
add
out
shl
loopne
mov
call
sar
rcr
std
jecxz
jmp
fcmovne
add
shll
hlt
hlt
stc
int3
mov
fdivrl
loopne
ret
fstp
or
ljmp
iret
repz
sar
call
add
leave
into
ljmp
iret
lret
shrl
mov
rcl
fnstenv
lock
jmp
leave
jmp
mov
shl
mov
shl
or
cld
leave
add
or
fucomip
in
shl
mov
mov
iret
in
in
hlt
mov
mov
lret
fadd
stc
leave
add
loop
lret
fcmovnb
lock
rol
in
mov
hlt
loopne
add
out
hlt
call
mov
fcmovne
rcr
fcmovne
clc
out
iret
loope
fucomip
loopne
cld
mov
cld
jmp
jmp
out
into
sar
int
out
mov
cld
mov
add
movl
shrb
vpsubsw
sar
fidivrl
or
or
mov
int3
test
mov
mov
dec
testb
jecxz
xcrypt-ecb
loop
cmc
mov
lret
mov
fadd
fidivrs
in
add
mov
repz
loope
out
repnz
mov
shl
rcl
lds
lret
shl
push
or
fsub
fsub
mov
cli
jmp
mov
in
sti
neg
add
stc
std
leave
in
lds
in
ljmp
jmp
clc
shl
out
loop
mov
fisttps
out
movntq
std
jecxz
imul
ret
ljmp
int3
mov
in
add
add
iret
aam
fdivr
fildll
xlat
int
leave
jmp
mov
cld
mov
fimull
jecxz
stc
lret
test
iret
in
int3
out
cld
in
out
iret
jecxz
roll
fdiv
std
add
in
pop
fbstp
shlb
fnstcw
out
rcl
rcl
stc
cld
faddp
int3
ljmp
lret
repz
sti
add
flds
std
loopne
loopne
or
loopne
mov
mov
int
loop
mov
in
loop
enter
shl
in
ret
ret
aad
test
in
icebp
ret
repnz
cld
rol
lret
shr
in
lods
iret
shlb
fucomip
shl
mov
div
out
decl
push
int
lret
mov
icebp
hlt
sar
icebp
shr
sar
out
rcl
add
testb
fucomip
or
iret
mov
ljmp
fsubr
mov
call
out
loopne
fimuls
rcr
out
out
iret
test
mov
fmulp
sar
std
push
mov
std
fcmove
or
in
mov
mov
call
hlt
add
div
cmc
icebp
div
fprem1
neg
sti
inc
int
jmp
jecxz
out
stos
test
shll
cld
rolb
mov
cli
or
mov
iret
mov
mov
out
hlt
mov
out
iret
loope
stc
out
out
loopne
add
or
shl
scas
scas
out
ljmp
mov
testb
add
fisttpl
rcr
decb
call
scas
shl
aad
mov
mov
in
faddl
cld
idiv
cld
into
ret
cmc
out
test
loopne
mov
loope
leave
in
sarl
iret
int3
mov
or
stc
cmc
cli
jmp
repz
lret
lock
in
pop
or
cli
les
enter
fsubp
ror
ret
fldt
stc
out
int3
clc
add
fstp
icebp
add
add
in
cld
lret
std
repnz
lock
loop
aad
lret
in
stc
repz
hlt
loope
stc
in
mov
iret
ljmp
mul
lods
out
lock
lock
cmc
in
cli
loope
div
fdivp
mov
add
or
mov
aam
leave
fxch
ffreep
lret
test
fldl
hlt
mov
flds
cli
fisttpl
lods
mov
ljmp
cmc
call
stc
roll
shl
iret
loop
fmuls
lret
repnz
mov
jecxz
call
add
jmp
adc
out
out
shr
mov
mov
stc
shl
sti
add
out
fisttps
int
in
lock
fcomp
icebp
std
shr
mov
repz
loope
push
or
jmp
lods
mov
in
into
ljmp
rcl
loope
rolb
decb
rcr
in
les
scas
ljmp
cli
mov
shl
sti
ljmp
in
jmp
repnz
stc
mov
mov
test
lock
sti
in
adc
in
repnz
rcl
in
scas
call
into
icebp
jecxz
mov
loop
testb
dec
fcomip
rcl
mov
call
dec
in
mov
in
jecxz
aam
xlat
sti
jmp
lret
fst
rol
aam
mov
div
leave
ror
add
add
stc
out
push
or
icebp
bnd
div
jmp
enter
out
mov
icebp
in
lret
call
out
lret
mov
leave
mov
sti
add
std
fcmovb
ret
fmul
pop
fsubrp
lods
mov
aam
mov
repz
mov
repz
or
fcomi
out
in
icebp
fsubp
aam
ret
enter
xor
mov
sub
mov
movl
cmpl
je
mov
xor
mov
xor
lea
mov
xor
div
mov
xor
add
mov
xor
jmp
cli
adc
adc
pmulhuw
dec
or
rcr
jnp
cwtl
jnp
std
cld
into
stc
into
fdivr
add
xlat
loop
fucomp
add
into
ret
jecxz
repz
loopne
mov
icebp
ret
lock
out
add
fdiv
mov
int3
leave
repnz
in
shl
loope
cli
sar
add
icebp
or
jecxz
iret
mov
mov
leave
jmp
mov
not
loop
shl
ljmp
add
mov
mov
repnz
loopne
fst
dec
int3
fcmovnb
clc
hlt
jmp
in
call
fbstp
les
in
enter
into
rol
or
sar
out
out
fadd
shr
mov
call
mov
rcr
enter
loop
fcmovnb
push
incl
push
fiadds
in
loop
shlb
mov
cld
loop
jecxz
cli
stc
jmp
cli
out
ljmp
out
shr
mov
add
add
out
test
lret
ftst
lret
loopne
mov
shr
icebp
fcmovbe
cli
fsubr
fnstcw
pop
fdivr
mov
repz
mov
out
in
mov
cld
call
fdivrp
stc
hlt
add
add
jmp
fsub
add
mov
mov
sti
repnz
in
xlat
aad
add
or
int
ret
cmc
xlat
call
fcmovu
cmc
call
loop
loop
div
out
sti
lds
in
rol
icebp
enter
iret
in
mov
aam
mov
in
call
icebp
int
repz
call
repz
add
in
lock
pop
enter
sti
or
jmp
hlt
enter
fistpll
add
out
pop
jecxz
push
cli
fdiv
shl
vmaskmovdqu
leave
mov
shl
lock
loope
in
add
call
int
scas
mov
jmp
cli
into
fmul
xlat
fcmove
neg
aam
shl
sti
add
ret
loope
test
rcl
call
repz
mov
hlt
stc
imul
fndisi(8087
fucomip
push
fsub
in
adc
in
jmp
aam
ljmp
ret
mov
movb
repnz
lock
fld
in
lret
aam
add
mov
push
jmp
add
or
leave
fsubp
int
repnz
loop
out
in
out
ror
fidivrl
fucomi
iret
add
sti
shl
out
mov
idiv
shl
mov
enter
out
mov
or
fcmovne
out
add
rol
test
ljmp
add
fld
shr
mov
lock
cli
pop
add
scas
out
aad
loop
les
rolb
stc
enter
fdiv
fsubrp
lock
movb
add
test
mov
sar
cmc
mov
jmp
cmc
loope
push
call
ljmp
mov
clc
fcmovbe
call
rol
lret
sar
iret
push
or
jecxz
lock
mov
fcmove
lock
jmp
std
fcmovbe
xlat
rolb
out
out
or
lret
lret
lret
in
rcr
mov
idiv
out
shl
add
jmp
out
loopne
hlt
add
into
cmpsb
out
loope
in
lds
fdiv
mov
aad
ret
mov
cld
jecxz
ljmp
int3
repnz
xlat
aad
mov
mov
out
loopne
in
lret
into
int3
rep
out
ret
sti
mov
loop
hlt
add
fsubr
decl
iret
out
scas
lret
ljmp
std
mov
mov
add
out
add
fdivp
fsubrp
test
int
icebp
out
iret
idiv
fdiv
cmc
stc
mov
cli
fiaddl
out
cli
fidivl
ror
mov
ror
fsubr
sti
cmc
rcl
iret
repz
or
rol
in
cld
or
shl
out
out
shr
jmp
fstp
mov
jecxz
filds
fcomp
hlt
pop
out
lret
leave
shr
enter
lret
mov
aad
mov
cli
enter
adc
icebp
loope
icebp
int3
shl
lock
mov
fucomi
mov
movl
add
iret
jecxz
icebp
icebp
lods
lods
sarb
lret
fdivr
fadd
loope
cli
sti
incl
add
jmp
add
std
or
jmp
stc
mov
lds
loop
std
out
fisttpll
jecxz
loop
fmul
or
rcl
mov
mov
mov
into
mul
aad
rcr
mov
ret
in
or
loope
aam
or
lods
ret
in
repz
mov
int
ljmp
std
in
out
in
repnz
stos
shl
mov
lock
faddp
incb
loopne
out
cli
fcomp
repz
lods
loopne
loopne
repz
fcmovb
xlat
test
icebp
loope
fcomp
rol
jmp
fstp
fsub
lods
out
lods
out
vaddsubps
ljmp
add
mov
cmc
sti
out
sti
out
out
into
test
repnz
rcr
out
int
mov
mov
add
fmulp
call
or
out
leave
lods
mov
repz
fnstsw
rcl
loop
out
out
repz
cmc
ret
ret
stc
mov
mov
mov
clc
icebp
or
add
jmp
sti
int3
jmp
dec
not
jmp
std
mov
in
ret
add
push
push
out
hlt
adc
ret
test
hlt
rol
scas
into
mov
std
ror
add
in
aad
lock
add
pop
lret
enter
fld
test
enter
in
sti
lret
jmp
fcmovu
mov
in
clc
int3
lds
loope
clc
fld
stc
ror
stc
xlat
enter
int3
fcmovu
hlt
fldl
call
lods
mul
imul
lret
sti
stc
mov
cmc
fistpll
in
pop
adc
stos
mov
lret
mov
out
out
fcmovu
enter
enter
out
fcmovnbe
ret
ret
loope
out
or
fadd
mov
sti
int3
out
rcl
lock
hlt
into
add
xlat
mov
pop
jmp
adc
out
test
ljmp
lret
mov
rcr
leave
fsubp
cli
add
fmul
lret
in
shl
fsubr
int
cmc
add
clc
repz
mov
add
leave
fsubp
movntq
out
leave
in
fmul
leave
mov
icebp
out
ljmp
cmc
mov
cli
std
sti
dec
in
shrl
ret
test
ljmp
int3
repnz
jmp
hlt
stc
loope
shl
scas
mov
leave
shl
cmc
jmp
mov
add
or
fxch
neg
loopne
test
in
xlat
lods
out
fdivs
ret
fsubr
fucomi
icebp
decb
in
out
clc
loope
pop
shlb
mov
jmp
mov
mov
ljmp
in
enter
repz
loope
hlt
mov
jecxz
icebp
shl
faddp
or
fisttps
call
aad
in
in
mov
aad
clc
mov
enter
call
xlat
lret
ljmp
in
repnz
mov
in
in
mov
mov
jmp
mov
ljmp
cmpsl
call
mov
fxch
ljmp
out
push
fucom
ret
imul
mov
out
jmp
fisubrl
jmp
aam
xlat
shr
fdivrp
stc
mov
or
out
fisttpl
mov
in
sarb
out
lret
hlt
in
std
in
loope
mov
cld
aam
fisttps
leave
mov
mov
ror
call
jecxz
mov
jmp
aam
add
int
fcomp
repz
fmul
ror
mov
int
int3
mov
roll
cmc
rcr
iret
ljmp
shl
repz
aam
sar
leave
neg
fnstsw
or
jmp
in
mov
lds
mov
shl
out
fmul
fcmovbe
sti
fdivrp
fsubp
std
fsub
cli
scas
lods
shl
enter
lret
fdiv
fidivl
repz
cmc
cli
ljmp
lods
xlat
in
mov
scas
shl
hlt
fcomip
in
xlat
loop
loopne
out
add
jecxz
clc
or
iret
mov
in
xlat
mov
add
loope
loop
loopne
testl
lret
int
fcomp
out
in
int3
repnz
lret
std
cli
idiv
int
rcl
repnz
rcl
aad
or
or
iret
scas
mov
cmc
fnstcw
sti
mov
fcmovb
hlt
fdivrp
filds
loope
out
loop
mov
lret
repz
fucomip
add
fst
mov
jmp
push
lds
or
or
lret
cmc
int
int
aad
mov
out
cli
repz
add
push
in
jecxz
add
test
mov
mov
sti
mov
loope
jmp
shl
push
out
xlat
fneni(8087
add
jmp
lods
imul
test
lret
iret
lret
sti
rcr
mov
stc
leave
fcmovne
loope
scas
ror
ret
out
mov
inc
rol
fucomp
rolb
lret
or
int
lret
mov
fst
int
shr
rol
call
cmc
repnz
int3
out
rcr
clc
in
call
fnstsw
mov
cmc
sar
leave
icebp
xlat
rcr
mov
leave
fsqrt
fcomip
cld
shl
shrb
jecxz
fnstcw
stc
mov
ret
inc
ljmp
in
enter
in
loopne
shl
hlt
in
mov
loop
fcmovb
fsubp
aam
rcr
ljmp
mov
shl
in
out
repz
aam
clc
cld
mov
pop
loop
fadd
or
paddsw
scas
out
mov
out
call
int
stc
lret
stc
neg
pop
xlat
aam
sti
lret
in
in
out
iret
loope
shl
stc
dec
mov
clc
cmc
add
fcmovnb
in
jmp
or
in
test
mov
shr
ljmp
cmc
in
testl
cli
jmp
or
mov
rcl
call
repnz
fsubrp
fiadds
clc
out
out
stc
fmul
jecxz
ret
mov
rol
mov
aam
rol
int3
mov
add
sti
push
lds
mov
mov
rcl
mov
enter
mov
rorl
stc
flds
aad
int3
repz
mov
iret
mov
lret
neg
int3
roll
not
testl
fmuls
iret
into
bnd
cmc
lock
in
mov
add
jecxz
call
paddusw
sti
jmp
call
loope
jmp
testb
leave
add
pop
std
mov
scas
mov
rol
sti
jmp
div
mov
ret
add
lds
sti
add
jmp
jmp
lret
out
shr
mov
stc
mov
mov
leave
add
add
or
ljmp
iret
in
mov
mov
cld
hlt
add
out
iret
fcmovu
fadd
ljmp
jmp
fnstsw
mov
xlat
fsubp
jmp
in
mov
fucomip
mov
out
mov
repnz
fmul
iret
out
mov
lock
loope
call
scas
repz
jmp
rcl
in
loop
iret
loope
icebp
mov
lret
pop
or
fildll
mov
mov
aad
clc
icebp
icebp
add
fdivr
dec
add
ljmp
jmp
lret
stos
mul
mov
repnz
int3
xlat
fndisi(8087
mov
jecxz
aam
loopne
jmp
repz
out
call
aad
in
mov
add
out
rcr
aam
cld
mov
lret
shl
mov
jecxz
xlat
mov
fcmovb
xlat
loop
fadd
add
lock
jecxz
ret
in
int3
scas
mov
out
xlat
sar
sarb
sti
push
fucom
out
into
int3
mov
ljmp
aam
mov
shl
repnz
or
clc
stc
in
out
push
adc
loop
jmp
int
jmp
add
fstp
mov
movb
vpsubusw
shl
mov
loop
int
aad
jecxz
ret
mov
loopne
enter
loop
ljmp
aam
sti
not
mov
rcr
rcl
cmc
sar
aad
fcomp
or
add
or
test
lods
scas
loop
call
lret
into
mov
repnz
ret
pop
xlat
fsubr
or
clc
or
in
lock
mov
cmc
into
out
shr
cld
std
mov
enter
call
ret
into
enter
cmc
shl
aam
clc
in
fscale
or
out
out
loop
mov
loope
lret
mov
idivb
sar
testb
in
fiaddl
int
enter
cmc
loope
into
shl
mov
fstpt
fdivr
clc
clc
add
add
fsubr
mov
out
into
out
idiv
ljmp
sti
mov
add
xlat
movl
mov
loop
in
in
clc
cli
cli
in
loop
loop
incl
add
pop
sti
out
mov
enter
jecxz
in
shl
sti
sti
ror
add
shl
in
fdivr
or
fmulp
fiaddl
int
mov
loop
mov
out
fdivrp
int3
mov
cli
hlt
add
ljmp
in
mov
sar
in
add
or
jmp
decb
push
fsubr
into
loop
enter
mov
jmp
in
out
shl
mov
mov
push
rol
mul
out
out
in
mov
lock
cli
mov
add
fsubr
into
add
ljmp
ror
fiaddl
test
push
loop
out
or
add
stos
icebp
shlb
fmul
std
loopne
int3
rcr
std
repz
test
out
jmp
ror
iret
mov
fnstcw
lret
or
xlat
in
int3
int
out
stc
shlb
enter
aam
shl
lret
call
adc
lret
ror
mov
in
fdivrs
jecxz
or
frstpm(287
or
stos
in
lret
in
mov
in
mov
xlat
std
mov
not
rorl
or
stc
aad
add
ror
lret
loop
lock
fmul
fsqrt
jecxz
int3
out
aam
roll
add
out
or
add
stc
lock
mov
mov
lret
out
out
ljmp
hlt
rolb
fcom
cli
cld
lret
les
or
fnsave
lock
cli
int
jmp
mov
ret
cli
lret
push
rcr
push
ljmp
cmc
icebp
in
repz
lock
rcr
fcom
loop
jmp
add
scas
movsl
leave
int3
jmp
icebp
int
cli
enter
hlt
in
cmc
stc
add
in
ret
mov
faddp
mov
loope
jmp
fcmovu
mov
int
add
loop
jmp
in
mov
mov
fstpt
hlt
mov
out
call
std
in
fdiv
out
mov
loopne
mov
mov
sti
shl
aam
xlat
icebp
ret
fnop
call
cli
shr
ror
icebp
shr
call
sti
mov
mov
in
repz
add
int
jmp
lret
rcl
xlat
mov
mov
mov
add
add
out
push
or
int3
rol
sti
lock
mov
fnstenv
icebp
fldl
in
out
aam
fucomip
int3
fsubrl
lret
aad
call
in
in
loope
in
hlt
filds
cmc
in
or
in
loopne
mov
ljmp
call
loope
cmc
cli
test
lret
call
into
xlat
in
mov
shll
fxtract
sarl
fadd
fdivp
out
or
repz
loop
hlt
mov
in
mov
repnz
loope
rcr
out
fcmovne
clc
pop
cli
cli
in
leave
ljmp
fcmove
fcmovbe
jecxz
mov
int
ror
cld
jecxz
fisttps
jmp
add
ror
int
jmp
sti
mov
sar
cmc
cmc
call
jecxz
scas
ret
jmp
mov
iret
in
call
lock
aam
aad
add
int3
in
out
shl
rcr
call
test
fsub
mov
aam
cli
add
loopne
fdivrl
mov
in
ljmp
int3
int
rcl
out
out
loopne
clc
in
push
loop
icebp
jmp
enter
test
sarb
sti
fsub
dec
jmp
out
mov
mov
lret
mov
fsqrt
cli
in
fldl
add
fsubp
or
repz
bnd
jmp
fdivr
rolb
lret
jecxz
out
repz
or
repz
mov
lret
in
out
mov
fst
test
ret
mov
ljmp
in
shl
scas
mov
jecxz
mov
mov
aam
cld
repnz
rol
aam
fisttpll
add
lock
ret
shl
jmp
repnz
testl
add
ret
mov
cmc
vpslld
repz
shl
out
out
into
fabs
stc
mov
cld
sti
jecxz
fsub
into
add
test
out
scas
in
mov
div
test
mov
repz
clc
flds
leave
loopne
out
rol
loope
mov
fxtract
aam
mov
sti
cli
out
add
jmp
incb
call
loopne
jmp
out
ret
icebp
fcmovbe
pushl
cmc
add
fimuls
leave
stc
lret
fabs
loopne
mov
ret
sti
not
aam
add
call
lret
stc
jmp
fsub
imul
lret
out
in
lret
into
int
shl
or
fmulp
fsub
stos
int
cmc
ret
mov
in
sarl
lock
idivl
fsubr
or
test
mov
ljmp
mov
std
cli
mov
cld
jecxz
out
out
rol
mov
lret
stc
shr
mov
test
shl
add
loopne
call
in
loopne
jmp
in
lds
out
mov
sti
sti
lret
aam
add
ret
jmp
fidivrl
mov
out
loope
lret
clc
jmp
or
repnz
in
imul
in
ret
hlt
vpsubd
into
fmulp
ljmp
lock
pmulhuw
add
cmpsl
out
ljmp
fnstsw
shlb
cld
lret
in
cld
lret
or
shlb
rcl
lock
mov
jecxz
mov
fadds
jmp
jmp
faddp
in
out
mov
aam
lret
sti
leave
fdiv
loopne
repnz
lock
faddl
std
fisttpl
fmulp
fisubrs
call
aam
shlb
rol
jecxz
fadds
in
loopne
scas
leave
in
cmc
stc
clc
lret
hlt
mov
fsubp
icebp
loope
push
lock
fsubr
in
int3
into
mov
aad
stc
sti
mov
in
idiv
loop
out
out
fldl
in
lret
pavgw
shrb
cli
shl
call
leave
int3
add
fsub
lret
add
fsubr
lret
in
fucomp
out
shl
xlat
in
sti
out
int3
fsubrp
jmp
call
push
fcomi
fdiv
add
add
out
ljmp
jmp
icebp
mov
jmp
shl
fld
jmp
add
stc
add
fcom
jmp
stos
enter
aam
xlat
int3
mov
loope
out
les
lret
or
lret
lods
int
aam
ret
test
ffreep
mov
enter
in
out
lock
int3
loopne
fcmovb
mov
out
cmc
mov
hlt
loop
lret
push
stc
in
repz
test
leave
int
ror
int3
int3
xlat
shl
incb
add
or
jmp
mov
out
rep
lods
in
xlat
in
mov
repnz
fucom
int
ljmp
add
add
shl
div
ror
fisubrl
shl
jecxz
not
ror
out
call
mov
enter
mov
hlt
ret
jecxz
or
loop
fimull
repz
xlat
in
ret
div
mov
call
mov
repnz
vpsubusb
hlt
ret
ffree
test
mov
into
jmp
ror
sti
fcmovnu
mov
leave
mov
fisttpl
lret
lods
in
in
lods
rol
jmp
icebp
ror
lret
shl
ret
add
loope
or
ret
lret
ftst
vpsrld
mov
stc
int3
shr
or
hlt
loope
pop
lock
iret
shr
ret
fcmovne
xlat
mov
in
clc
repz
rcr
mov
loope
lret
fstp
scas
xlat
mov
mov
in
out
lods
icebp
out
mov
add
add
aam
in
push
jecxz
test
shrl
aad
shl
cli
add
mov
add
cli
fsubr
push
add
lret
loopne
xbegin
mov
leave
fcmovu
shl
fadd
sar
iret
stos
in
out
mov
shl
lret
sti
call
add
ret
not
loopne
in
out
iret
add
scas
cmpsb
fisubrs
mov
clc
xlat
mov
in
loop
mov
cld
loope
pop
add
neg
add
test
out
rcl
mov
out
hlt
rcl
int
out
mov
loop
push
fdiv
std
loopne
movl
out
fcom
iret
jmp
mov
mov
mov
out
loopne
add
cmc
jecxz
leave
in
rcl
repz
ret
xlat
rol
aam
shr
sti
fcmovnu
int3
ret
fnsetpm(287
add
call
in
icebp
rcl
fcmovnb
repnz
repz
call
repz
cli
fiadds
lar
into
mov
out
sar
int3
sarl
aad
not
repz
or
aam
sti
pop
pop
mov
test
mov
out
clc
fdivp
mov
out
faddp
jmp
add
iret
pop
aam
loope
in
fbstp
out
lret
call
add
dec
lret
out
fld
loope
out
scas
mov
lock
fdiv
mov
int3
mov
shl
faddl
ret
shlb
rcr
jmp
shl
mov
cmc
fdivr
jmp
out
cli
push
xcrypt-ctr
cmpsl
fsubp
movsb
cmc
aam
lret
clc
clc
sti
fadd
cld
ret
clc
rcr
add
icebp
scas
lock
sti
sarl
jmp
shl
hlt
in
clc
cld
cmc
jmp
call
shll
mov
rcl
sar
rcr
in
ljmp
leave
stc
into
leave
in
xlat
aam
out
shrb
out
ret
fcmove
mov
lret
lret
loopne
repz
xlat
int
out
fcmovne
aam
idivb
rolb
in
pinsrw
test
rcl
rcl
fcmovu
cmc
aad
int
fst
imul
mov
ret
push
clc
push
fdivs
int3
mov
rcr
cmc
mov
clc
rol
mov
mov
add
mov
call
shll
shll
into
ret
repz
neg
fimuls
pop
cmc
into
jecxz
ljmp
rcr
cmc
lret
int
ret
in
fimull
mov
or
adc
rol
test
hlt
fcomip
out
add
lock
aad
lret
les
push
loop
icebp
cmc
mov
jecxz
enter
repz
out
mov
fistpll
aam
out
loope
lock
leave
shlb
mov
out
hlt
ror
xlat
loop
out
or
test
loop
repz
divb
out
mov
sti
add
or
ror
mov
mov
iret
mov
fdivrp
aad
ret
jecxz
clc
add
call
ret
test
rcl
lods
mov
rcr
out
fpatan
ror
decl
std
movb
into
ror
int
lock
lret
out
cmc
clc
rol
out
shl
flds
pop
cmc
enter
loop
fnsave
rcr
icebp
lds
cli
repnz
add
mov
fmulp
add
out
les
shr
leave
ljmp
int3
fcmovbe
hlt
sti
stc
aad
ret
fsub
push
or
cli
add
jmp
mov
mov
mov
mov
shl
sarl
enter
lret
cli
shr
hlt
jecxz
add
fidivrs
add
out
into
loop
jmp
into
movsl
mov
lock
mov
ljmp
into
loope
rcr
std
mov
in
add
fldcw
mov
aam
mov
sti
mov
std
rolb
loope
xlat
add
loop
lret
mov
out
repnz
mov
mov
jecxz
jecxz
aam
lret
out
in
rol
fdivs
loope
lret
fnstcw
iret
repz
fcos
add
leave
ljmp
mov
mov
out
leave
mov
jmp
leave
enter
lock
stc
lret
sti
out
or
fildll
lock
in
cmc
out
fdivrs
loop
cld
loopne
or
lret
fstp
mov
mov
test
ror
test
loop
faddl
jecxz
mov
cmpsl
in
repnz
lods
xlat
shl
jmp
sti
xlat
mov
shl
shr
add
out
in
out
lods
lock
int3
mov
shl
aad
lret
fdivrl
loope
icebp
in
testb
into
adc
in
cmpsb
fucom
scas
repnz
mov
aam
loop
testl
leave
loopne
or
in
mov
lret
in
shl
jmp
clc
mov
incl
mov
aam
jmp
imull
lret
iret
mov
out
add
loopne
into
jmp
lock
enter
fcmovbe
mov
jecxz
in
ror
cld
mov
fiaddl
mov
aam
jmp
int3
scas
in
mov
out
hlt
lock
into
mov
lock
sti
loop
cli
jmp
or
lods
ror
loope
call
frndint
shr
ffree
mov
iret
sti
test
mov
lret
mov
incb
or
loop
out
or
or
mov
icebp
scas
mov
in
jmp
int3
repnz
push
jmp
fld
out
loopne
fisubrs
enter
in
cli
mov
rcr
loope
hlt
or
clc
rorb
inc
fdiv
leave
shrl
out
mov
in
lret
cmc
add
mov
jecxz
std
fisttpll
or
fcoml
mov
call
in
fidivrl
loop
repz
add
xlat
cli
mov
push
shl
in
ror
rcr
int3
aam
sar
std
jmp
rolb
push
lock
leave
lods
xlat
out
mov
in
mov
std
fmul
in
out
fcmovnbe
stc
lret
test
jmp
div
shl
loope
cli
sti
idiv
imul
call
or
jmp
mov
clc
lret
loope
lock
in
jecxz
lock
cld
fucom
or
shr
icebp
mov
repz
icebp
repnz
int3
fdiv
shl
ljmp
mov
repnz
stos
les
lods
out
fstp
loop
repz
out
mov
add
add
repnz
jmp
icebp
fucomp
shrb
mov
in
sti
xlat
repz
out
out
loop
dec
call
mov
cli
in
call
fucom
xlat
in
fldl
fcom
in
in
into
shl
les
mov
repz
fistpll
in
mov
lret
in
leave
jmp
out
aam
mov
mov
out
in
hlt
aam
loop
rcr
int
fld
out
lret
mov
fcom
stc
repnz
lret
cld
ret
clc
pop
in
pop
aam
in
add
in
enter
fmul
shlb
imul
imul
mov
ret
lock
out
enter
ficoml
fadd
lret
scas
in
mov
rol
call
lock
jecxz
sarb
or
ljmp
mov
jmp
mov
shl
imul
rolb
pop
fsubrp
add
loopne
out
out
into
aam
ror
cmc
cli
fldz
in
icebp
out
repz
lret
out
pop
jecxz
add
or
mov
in
fld1
hlt
leave
cmc
enter
add
loope
rcr
rcr
xlat
add
or
faddp
rcl
ret
out
clc
out
iret
div
xlat
repz
not
ret
mov
std
jecxz
mov
fdivp
lds
ljmp
int
std
in
loopne
jecxz
jmp
or
jmp
lods
in
shll
mov
rol
rol
hlt
cli
add
fstp
or
in
pop
mov
into
in
ret
div
mov
ret
mov
add
leave
or
repz
xlat
call
int
mul
cli
iret
add
loopne
mov
clc
in
in
repz
rcr
fdivp
mov
hlt
leave
add
add
push
rcl
fld
or
fsubrs
out
rcr
ljmp
hlt
stc
push
loop
add
out
or
leave
in
repz
mov
int3
mov
out
sarl
in
loope
out
add
clc
jmp
fisubrl
mov
int3
fdivrp
in
aam
out
add
fcmovnb
cld
in
pop
leave
iret
loope
leave
add
int
repnz
scas
ror
cli
int
filds
add
cmc
shl
fsub
out
or
into
out
rol
out
ljmp
mov
lret
loope
ror
into
out
loop
loope
int3
hlt
mov
clc
call
mov
cli
out
ffree
out
add
jmp
fnstenv
mov
out
rcr
out
sti
loope
lock
movl
fmull
push
jmp
ffreep
shr
mov
sar
int3
out
fsubr
call
fldl
ret
fcmovbe
out
or
or
out
ror
fsub
out
lret
lret
imul
mov
in
call
loopne
scas
scas
in
xlat
leave
out
clc
ljmp
lock
jecxz
jmp
shl
jecxz
push
loop
iret
icebp
mov
cmc
out
rcr
in
shr
into
mov
incl
add
sti
loopne
call
into
xlat
scas
out
repnz
int
loop
shl
add
add
jmp
fidivrl
rcl
imul
sti
divl
out
mov
add
ljmp
enter
mov
xlat
call
mov
aad
ret
lock
sar
jmp
fdivr
jmp
aam
lods
mov
jmp
mov
ret
testb
loopne
int
mov
in
out
aam
mov
leave
enter
shr
into
in
rcl
aam
les
sti
or
out
add
lret
xlat
out
iret
call
icebp
rcr
mov
fsubp
shl
sti
lret
add
icebp
ljmp
into
clc
mov
stc
add
shl
mov
fcmovu
push
std
in
or
ret
out
scas
sti
stc
roll
mov
int3
cli
rcr
out
fmull
cld
stc
shl
mov
mov
in
mov
int
vpavgb
or
decb
adc
stos
jmp
lret
jecxz
mov
mov
sar
mov
out
sar
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
add
mov
jmp
mov
inc
mov
mov
xor
add
cmp
jmp
xorb
lock
cs
repz
jp
add
lret
lret
mov
shrb
mov
mov
mov
out
ret
repz
add
fcomi
rcr
ffreep
jmp
mov
icebp
out
ror
mov
sti
cmc
mov
cli
xlat
xlat
add
rol
icebp
rcl
cli
shr
int
pop
add
in
in
in
call
repz
fsub
shl
fidivrs
add
add
shrl
jmp
in
fsubr
ljmp
cld
cld
sar
rcr
stc
jmp
or
scas
jmp
rcl
les
mov
aad
out
ret
out
add
rol
lods
out
mov
iret
hlt
call
lock
int
bnd
or
sti
cli
ret
loope
shl
ljmp
mov
rol
aam
repz
out
fcom
in
fildl
or
aad
mov
into
repnz
ret
icebp
loopne
lock
jmp
out
out
into
ret
divb
cld
ret
in
lock
add
ffree
cli
fxam
shl
lret
mov
mov
mov
aad
call
sar
call
lds
out
lret
sarl
leave
lret
out
mov
mov
add
or
add
or
mov
int3
repz
repnz
mov
add
hlt
movb
call
int
leave
int3
loopne
loope
mov
sar
mov
add
rcr
fsubr
add
add
out
mov
enter
mov
in
mov
add
fmulp
iret
in
lret
mov
mov
fdiv
into
fdivp
call
ret
sar
cld
roll
add
ljmp
jecxz
out
cmc
aad
out
ret
ret
out
pop
loope
int3
out
out
in
shr
int3
mov
aam
fmul
ljmp
ljmp
loope
add
shl
repz
hlt
int3
aam
out
fdiv
out
out
loopne
cli
jecxz
fmull
lds
or
rcr
mov
mov
in
out
hlt
mov
rcl
add
aad
cld
fstp
or
out
mov
lods
enter
scas
iret
mov
loopne
add
int
lock
aam
call
repz
mov
stc
ljmp
mov
rcr
or
hlt
in
mov
in
mov
call
ret
rcl
or
inc
out
testb
lret
iret
icebp
out
mov
in
mov
fidivl
fucom
loopne
loopne
in
cmc
cmc
or
adc
int3
loopne
shl
lret
sti
test
dec
in
into
fdiv
lock
leave
add
mov
lock
leave
mov
fdivrp
icebp
in
clc
leave
div
loope
or
out
mov
int3
mov
hlt
cld
loope
into
lock
fcmovnb
cmc
jecxz
lret
aad
cli
pop
ret
mov
out
icebp
out
out
lret
mov
jecxz
mov
add
psubd
out
mov
into
mov
les
cmc
fcmovnbe
cli
movb
lock
fadds
fdivrp
jmp
in
mov
mov
idivl
out
shlb
loope
add
or
leave
enter
in
ret
leave
hlt
mov
icebp
clc
out
fucomi
int3
rcl
xlat
rcl
cmc
ret
cli
add
add
fldl
jmp
enter
out
out
loopne
xlat
fcom
mov
in
add
hlt
testb
jmp
stc
mov
out
jecxz
mov
int
hlt
int
call
out
rcr
stc
add
fisttpll
enter
or
ret
in
jecxz
ret
lret
mov
in
lret
out
ljmp
push
pop
fcomp
add
enter
in
ret
imull
fcomip
fdivrs
in
loopne
icebp
fsubr
out
fucom
loope
mov
in
fcomip
lock
loopne
cld
sti
ljmp
or
les
iret
out
in
mov
cld
jmp
mov
add
loope
call
iret
lret
aam
icebp
jmp
leave
rcl
shr
mov
aad
aam
add
add
std
out
scas
out
mov
mov
clc
repz
sti
jmp
hlt
roll
add
pop
neg
or
test
ljmp
mov
enter
add
mov
loop
or
fadd
aad
jmp
fptan
jmp
int3
aam
push
out
add
imul
iret
int
fsub
lods
int
cli
rcr
repz
loope
mov
in
movl
add
fadd
scas
ret
mov
shr
mov
mov
aam
mov
cmc
add
add
enter
mov
repz
int
repz
fstp
ret
or
ret
vaddsubpd
loop
ror
fneni(8087
out
out
mov
sarb
shl
out
aam
jmp
out
shl
loopne
shl
out
mov
out
out
roll
loop
sti
fxch
fcmove
lret
cmc
in
mov
mov
mov
rcl
shl
sar
in
cmc
jecxz
add
or
ret
ret
mov
clc
mov
add
mov
out
cli
clc
adc
push
lods
xlat
ret
fninit
fcmovbe
rcr
shl
stc
ret
mul
shr
sarb
aad
fsubrl
jmp
out
push
jmp
lret
icebp
inc
ret
rcr
lret
add
loope
lods
rcr
lret
mov
into
fdivr
fcom
shr
xlat
fcomp
out
in
sti
into
sarl
into
int3
cli
sar
into
neg
lock
testl
in
int3
jecxz
loop
repnz
in
int
shl
jmp
mov
add
push
testl
jmp
ret
int3
fidivl
enter
ffreep
lock
xlat
cmc
lret
jecxz
fucomi
loopne
int
repz
mov
int3
rcr
clc
out
cmc
jmp
add
icebp
or
stc
add
call
mov
mov
leave
leave
hlt
in
enter
shl
add
loopne
loopne
jecxz
call
call
out
fdivr
hlt
mov
neg
sti
add
mov
out
out
or
loopne
mov
jmp
in
in
mov
stc
call
in
pop
neg
add
fimull
jmp
shrl
lret
out
stc
mov
mov
mov
ret
lret
xlat
cmc
out
leave
add
add
out
rcr
out
lock
mov
mov
ret
or
in
lret
stc
out
call
lret
int
call
mov
cli
ret
lock
faddp
out
or
in
loopne
test
mov
stc
int
fcomp
mov
icebp
add
fimuls
ret
stc
add
in
into
fsubp
repz
in
lret
call
mov
fmul
aad
mov
ret
faddl
in
ljmp
ret
out
out
call
mov
out
add
out
std
int3
out
repnz
int
call
mov
cli
idiv
fisttpll
in
out
fistl
mov
lock
fcmovb
leave
out
out
out
icebp
add
sti
or
decl
in
call
jecxz
iret
mov
ret
lods
divl
mov
mov
fdivr
push
loopne
enter
std
shrb
mov
clc
mov
mov
test
in
incl
add
shl
mov
xlat
lock
test
sti
lret
mov
jecxz
std
imul
out
loop
cmc
in
in
call
add
lret
div
enter
cli
mov
f2xm1
jecxz
mov
mov
or
into
mov
mov
lret
repz
cmc
rcl
faddp
cli
out
stc
loopne
int
in
out
shl
out
fsub
lret
out
sar
out
add
out
fdivrl
stc
call
ret
lret
out
test
mov
mov
hlt
ret
mov
fsubp
or
ret
in
xlat
loopne
shll
std
into
mov
fiadds
div
mov
out
adc
mov
enter
jmp
fnstsw
cli
into
div
ljmp
fisttpl
or
mov
scas
shl
cmc
mov
stc
sti
shr
aam
icebp
loope
fldl
out
or
in
out
add
jmp
int3
loope
divb
in
stc
clc
std
cli
repnz
ret
psrad
add
out
ljmp
mov
int
enter
aad
fdivr
sarl
aad
fildl
add
int3
int3
mov
leave
mov
int
rcr
lock
mov
mov
shl
fcmovb
cli
call
shll
cli
call
sti
clc
sti
mov
shr
in
out
faddp
iret
cli
repnz
shr
divl
test
stc
repnz
mov
add
std
into
or
mov
mov
std
lret
lret
mov
fsubr
clc
add
into
adc
scas
fdivp
mov
loopne
mov
out
fidivs
in
add
lds
xlat
or
or
add
mov
loopne
fcmovb
shl
enter
mov
sarb
stc
clc
push
jmp
int3
lods
mov
ljmp
rcl
loopne
test
jecxz
add
fcomi
int3
add
jmp
iret
shl
mov
icebp
neg
out
sti
out
mov
in
add
fucom
cli
filds
fisttpll
repnz
fdivs
out
ljmp
ror
add
mov
fcos
add
ror
lret
jmp
stc
mov
in
flds
lock
icebp
loop
loop
add
clc
cmpsl
lret
jecxz
xlat
mov
shl
hlt
int
hlt
clc
out
int
cli
ret
or
add
mov
lods
mov
jmp
int
lret
add
pop
add
mov
mov
stc
loope
in
lret
lret
cmc
xlat
stc
mov
push
out
sti
inc
inc
dec
cli
in
ljmp
out
mov
iret
out
cli
leave
sti
shl
add
fsubr
enter
test
test
mov
test
in
mov
ljmp
out
lds
enter
scas
mov
ljmp
mov
mov
add
ret
loop
icebp
std
add
jmp
out
mov
sar
shr
enter
dec
int3
fcomip
std
fdivr
loope
add
add
or
in
jmp
mov
mov
hlt
lret
mov
jmp
fimuls
lret
push
clc
loopne
into
fucom
mov
shl
mov
mov
iret
in
add
icebp
out
clc
testl
push
lret
lods
lret
into
repz
jmp
clc
jecxz
mov
pop
loop
fcmovbe
rol
scas
ljmp
fyl2xp1
jecxz
ffree
out
fdiv
int3
sar
sti
fsubr
int3
out
ror
in
repz
ret
fisttps
ret
fcmovnu
jmp
pop
sarl
jmp
stc
jmp
out
int3
repnz
xlat
aad
shl
ljmp
out
test
ret
mov
out
clc
fyl2xp1
jecxz
std
icebp
hlt
mov
lock
out
ret
add
stos
fcomi
test
mov
aad
out
dec
cli
ret
fadds
rcr
in
fcmovnu
fcmove
out
ret
mov
xlat
int3
icebp
shl
sti
mov
shl
sar
jecxz
jmp
pop
sti
pop
ljmp
ror
fcmovbe
lret
jmp
fcmovnu
jecxz
in
repz
cld
or
enter
scas
loopne
out
mov
aam
call
cld
rcr
mov
mov
leave
std
or
loopne
vpslld
mov
cmc
mov
fildl
mov
rcl
pinsrw
in
mov
sarb
out
out
out
mov
mov
ret
movl
loopne
mov
call
idiv
lock
fsub
in
clc
add
pop
push
loop
or
out
lret
in
aam
repz
jmp
std
out
ret
push
clc
icebp
int
out
mov
imull
repnz
fcmovnu
loop
aam
add
icebp
lret
in
leave
mov
lret
clc
mov
enter
cld
add
flds
rolb
repz
lret
mov
lret
in
out
fprem
mov
sti
ret
fiaddl
fcmovne
cli
ret
fsubrl
mov
divl
sti
cli
mov
filds
ffree
xlat
cmc
mov
mov
enter
rol
ljmp
fcmove
rcr
mov
shr
mov
mov
ror
cli
rol
jecxz
out
mov
icebp
lock
repnz
iret
mov
into
stc
fst
add
fsub
cli
jecxz
push
neg
fisttpll
add
pslld
fnop
cmc
hlt
iret
fldz
fnsetpm(287
out
iret
jmp
mov
jecxz
rol
out
std
out
cld
ljmp
jmp
rol
jmp
rol
hlt
repz
fsub
mov
pop
shr
in
ret
aam
enter
jecxz
cmc
mov
pop
stc
push
add
clc
loop
adc
ret
rol
lret
mov
int
mov
std
out
pop
loope
stc
ret
xlat
lock
loopne
leave
fistpll
shl
aam
int3
out
mov
add
jmp
hlt
out
add
out
mov
cmc
stc
out
enter
stc
sar
cli
stc
mov
in
lds
scas
leave
shrb
stc
aad
mov
iret
mov
out
shl
add
lret
in
cmpsb
loope
div
in
icebp
repz
ljmp
mov
mov
stc
ljmp
fsubp
in
rol
rcl
sarl
call
aad
incl
repz
out
repz
out
jmp
out
mov
pop
add
hlt
fimuls
hlt
fmull
int3
pop
fadd
ret
in
imul
mov
ljmp
rolb
aad
add
call
ljmp
fdivr
xlat
shlb
rcl
fprem1
loope
jecxz
dec
adc
mov
in
ljmp
in
fucomi
add
fsub
into
mov
fldlg2
add
out
loope
divb
leave
fcmovbe
fsubp
jecxz
fldl
out
sti
or
cld
ljmp
scas
int
fmul
loope
mov
sarb
mov
lock
fiaddl
add
int3
into
iret
lret
divl
cmc
enter
add
fsub
in
sar
lret
add
lret
out
into
jmp
mov
ror
int
repz
int
cmc
aam
add
pop
add
push
in
in
mov
jecxz
jmp
iret
pushl
std
loop
add
out
cli
out
shll
stc
into
shr
repnz
in
out
jecxz
aad
jmp
stc
faddl
fimull
loopne
fsubp
lret
out
mov
mov
mov
lock
add
out
ror
jecxz
fscale
or
cld
cld
lds
add
rcl
mov
out
mov
ret
fninit
out
repz
leave
push
fsubrp
push
out
fdivrs
shr
mov
enter
out
cld
int
out
hlt
neg
add
add
clc
jmp
loop
mov
lock
lock
mov
loope
aad
push
flds
clc
rcr
add
shl
out
mov
sti
lock
call
cli
iret
std
rcl
sti
loope
out
mov
cmc
or
cmpsb
int
int
lret
xlat
in
mov
int
loope
fdivrl
in
out
clc
add
or
in
ret
sti
sti
aad
cmc
fnstsw
mov
bnd
ljmp
scas
lret
mov
repz
aam
cld
dec
add
stc
out
push
incb
leave
imul
lock
in
into
pushl
cld
mov
not
in
frstpm(287
loope
mov
loopne
test
out
mov
stc
mov
mov
hlt
fldl
add
ljmp
mov
leave
into
hlt
aad
mov
sarl
pop
cli
out
pop
fucom
lock
out
div
mov
rcl
clc
in
rcr
fcmovu
ror
out
loop
out
pop
ljmp
test
shl
int
jmp
mov
call
clc
add
loopne
aam
pop
std
add
mov
in
in
ljmp
shl
aad
repnz
add
stc
or
loope
fyl2x
mov
rcl
fdiv
aad
std
pop
fucomp
add
mov
fisttps
into
ror
fsubrp
shr
cli
mov
mov
repnz
lret
loopne
aam
add
leave
dec
rol
mov
hlt
int3
rcl
icebp
idivl
shl
bnd
shl
stc
mul
or
jecxz
mov
stc
scas
aam
stc
rcl
jmp
flds
mov
or
decl
fmul
lods
shr
mov
ljmp
fmulp
in
repz
rorb
pop
lret
loopne
xabort
call
shlb
aam
mov
stc
repz
cli
sti
push
sti
div
push
push
or
out
ffreep
loopne
ret
enter
fbstp
repz
fcom
out
fcos
out
repnz
ljmp
xlat
jmp
enter
ret
repz
shl
in
sarb
fcmovnu
paddd
in
lret
dec
xlat
int
mov
jmp
icebp
fisttps
in
fxch
out
into
xlat
bnd
scas
enter
aam
loopne
rcl
icebp
test
push
or
rol
jecxz
stos
mov
in
loopne
test
cmc
mov
xlat
fprem
sar
ret
shr
out
hlt
in
fxch
mov
mov
mov
mov
fdivrp
in
aad
add
lock
add
in
enter
or
shr
lret
enter
into
xlat
mov
roll
loop
into
mov
leave
clc
out
or
mov
in
shl
mov
aad
fcmovne
aam
lret
iret
cli
hlt
aad
fcomp
xlat
out
add
std
mov
lods
loopne
iret
neg
out
lret
cli
jmp
mov
ret
add
add
shl
fsub
mov
stc
lret
stc
repz
icebp
aad
imul
roll
mov
lret
bswap
or
shlb
idiv
fsub
in
repnz
out
sti
add
add
add
mov
mov
clc
cmc
clc
in
jecxz
repz
shl
add
or
leave
mul
add
rol
in
int3
mov
mov
aad
cld
mov
cld
aad
fisttps
out
sti
jmp
int
jmp
ror
cmc
out
into
repz
mov
sti
add
loop
fcmovnu
add
fcom
in
mov
imul
aad
mov
mov
clc
enter
idivl
aam
add
leave
jmp
shrl
test
mov
add
aam
hlt
movl
iret
loop
adc
mov
call
int
cli
fdiv
fcomip
mov
cmc
pop
fucom
cmc
or
int3
out
rcl
ret
in
loop
mov
sti
fnstcw
rol
sar
out
cld
clc
lret
mov
int
fldl2t
jmp
aam
repz
loop
std
add
add
lret
enter
fst
jmp
push
aad
cmc
int3
mov
add
add
push
stc
aam
loop
fsubrp
ret
fadd
rol
ror
out
mov
mov
out
add
mov
add
mov
fsub
shr
out
mov
fst
ret
cmc
lock
out
push
aad
fsub
fucom
add
scas
shl
lds
hlt
in
add
add
push
in
add
iret
sti
add
ret
rol
lods
cmc
mov
aad
mov
lret
enter
loop
jmp
repnz
mov
lret
mov
fld
hlt
out
add
out
in
shufps
adc
int
scas
out
imul
sti
in
fmul
mov
mov
ljmp
in
ljmp
lret
ljmp
iret
repnz
ror
in
loopne
add
fucomip
call
loope
icebp
mov
jmp
rol
int
int
out
pop
incl
out
into
out
add
int3
jmp
mov
in
xlat
in
icebp
aad
ret
mov
stc
lret
enter
loop
out
jmp
mov
in
aam
shl
stc
int
div
loopne
in
leave
enter
mov
in
jmp
std
jmp
cmc
int
out
aad
aad
stc
test
call
jecxz
mov
loope
ljmp
std
int
ret
lock
in
repz
mov
in
mov
mov
hlt
add
repz
add
out
add
fisubrl
stos
cli
shl
enter
mov
out
cld
hlt
ret
loop
in
lret
in
int3
cli
in
in
jmp
in
mov
int3
imul
ret
add
icebp
jmp
incb
stc
fsubp
in
fucomip
jmp
test
mov
out
cmc
lock
loope
push
cmc
loope
aam
add
add
leave
faddp
adc
jecxz
in
int
lods
mov
sar
lret
mov
aam
add
testb
incb
jecxz
xlat
shr
shr
les
jmp
mov
add
fldl
add
ret
leave
hlt
fucom
add
shrl
enter
lock
out
in
iret
jmp
push
repz
pop
out
aam
int3
lock
lock
jmp
rol
mov
in
out
in
hlt
out
or
stc
flds
in
repnz
idiv
test
mov
aam
push
out
fadds
int
mov
mov
out
fcmovne
ljmp
int3
in
aad
pop
loopne
fcomi
int
mov
enter
icebp
xlat
out
lock
ror
cmc
mov
incl
fdivp
fmull
ljmp
scas
jmp
jecxz
int
hlt
sti
lock
mov
add
fcmovnb
or
clc
add
repz
cmc
test
shr
divl
ror
jecxz
fildl
lret
leave
in
std
repz
lock
shr
mov
jmp
int
aam
fstp
add
cld
lret
in
shl
mov
repz
clc
in
fcmovnu
mov
rol
icebp
lock
hlt
sti
clc
lret
or
int3
mov
jmp
iret
icebp
mov
loop
out
out
rolb
ljmp
jmp
rol
mov
lock
mov
mov
xlat
aad
aam
iret
or
stc
add
fcomp
repnz
int
shlb
stc
rcl
out
flds
in
loope
psubq
ret
adc
int
call
repz
mov
mov
xlat
jmp
sti
mov
out
fcmove
ljmp
ror
mov
les
int
leave
aad
lock
xlat
loop
cmc
add
aam
pop
call
mov
in
aam
in
cmc
ljmp
std
cli
add
out
or
fsubr
in
int3
iret
lret
mov
fcmove
mov
out
clc
ljmp
ret
add
sti
iret
into
mov
ret
repnz
not
mov
push
add
fucom
or
add
push
loope
iret
mov
iret
scas
jmp
call
stc
lock
loopne
clc
std
hlt
jmp
jecxz
or
shl
jmp
mov
cli
enter
aam
mov
icebp
cli
mov
add
fstp
adc
cmpsl
lods
movsl
in
int
out
cli
ljmp
stc
loope
cld
int3
mov
fucomp
lret
sarl
mov
mov
enter
jmp
ret
cmc
hlt
ret
clc
iret
or
lret
rcl
lret
shl
rcl
ret
in
clc
mov
repnz
jmp
cli
into
in
into
mov
fcmovnu
leave
fsubp
ljmp
xlat
loopne
fcomi
in
mov
repnz
out
cli
in
fcmovnb
jmp
clc
leave
out
int3
enter
rcl
rol
stc
in
div
fnop
std
out
incb
std
sti
aad
std
lret
iret
in
adc
mov
shl
icebp
cli
rol
fucomp
sarl
lret
fisttpll
or
fxch
mov
shl
icebp
mov
mov
sti
push
loop
repnz
repnz
vpaddb
loop
out
scas
enter
out
out
icebp
repz
rcl
jecxz
rol
lret
loop
iret
add
loop
out
in
mov
shr
aad
push
fldl
push
pop
stc
mov
jmp
in
aad
loopne
loope
stc
fcmovnbe
shr
icebp
in
rcl
add
fcmovnbe
fstp
push
sti
in
sti
loopne
test
in
sti
loope
repnz
mov
mov
testb
sarl
stc
cli
add
or
fsubp
mov
leave
mov
xlat
leave
xlat
sti
out
jecxz
add
ffreep
shl
fcmovb
ffree
add
loopne
lret
in
out
mov
mov
fldl2t
sar
iret
fmul
stc
fucomip
add
rolb
or
out
icebp
jecxz
imul
loope
out
mov
sar
rcl
aam
ret
fnsetpm(287
out
loopne
cmpsl
mov
aam
sar
add
icebp
rcr
cld
add
cmc
fucom
repz
mov
mov
hlt
lret
ror
std
mov
add
or
jmp
scas
in
in
out
loopne
in
repz
mov
sti
mov
std
add
enter
int3
faddp
shr
lock
mov
enter
ljmp
in
sar
lret
or
ljmp
rcr
repz
rcr
rcr
mov
sar
or
scas
movsb
xlat
out
mov
mov
shr
mov
not
mov
jmp
pop
add
mov
movsl
ror
jmp
into
mov
mov
mov
repz
loope
add
add
or
add
into
repnz
lods
mov
xlat
mov
fldlg2
std
mov
rol
lret
fxch
in
fsubr
stos
loope
lods
mov
enter
ljmp
mov
add
leave
aam
jecxz
or
fdivp
scas
mov
loopne
out
not
sarb
add
out
aam
iret
add
loope
shr
into
mov
loopne
repz
pop
aad
add
xlat
stc
out
fcomip
cli
out
cld
iret
fmulp
lock
iret
hlt
lock
mov
fxch
cmc
shl
test
pop
cli
pop
add
lds
rcl
cld
sti
clc
ret
sti
mov
filds
fimuls
leave
enter
jecxz
mov
cmc
lret
in
iret
mov
mov
neg
lock
jmp
paddb
shrb
mov
icebp
in
mov
lock
loopne
fldl2e
stc
in
jmp
test
int
into
cli
out
fpatan
mov
icebp
sarb
add
fmul
repnz
fmulp
lret
call
mov
mov
clc
xlat
mov
decl
add
or
rol
mov
in
sti
fucomip
ljmp
jecxz
jmp
leave
sti
out
in
jmp
shl
repz
mov
fsubr
loope
out
mov
fucomp
in
or
mov
mov
mov
rcr
repnz
loop
cld
ret
loopne
lret
vpaddd
wbinvd
add
in
mov
loope
imul
int
icebp
icebp
xlat
out
lock
shl
add
cmc
iret
lret
add
or
in
mov
hlt
out
lret
aad
call
ffree
add
push
clc
fsub
or
add
mov
repz
iret
jecxz
mov
sarb
stc
pop
shl
lret
or
loopne
into
ljmp
mov
mov
lret
mov
push
fnsetpm(287
cmc
enter
loop
repz
out
std
rcr
fcmovnbe
jecxz
mov
add
loope
fmul
adc
mov
hlt
loope
mov
lock
out
cli
xlat
mov
in
loopne
dec
fcmove
out
lret
test
mov
lock
scas
rcr
lock
std
aam
cmc
fiadds
idiv
aam
cld
add
incl
fadds
stc
cli
fdivrl
rcl
in
mov
jecxz
roll
xlat
rolb
loope
call
mov
in
cli
mov
mov
add
add
loopne
fisttpll
in
rep
in
repz
mov
int
rcl
shr
iret
repz
cld
in
lock
pop
hlt
out
sti
loope
pop
fdiv
int3
out
int3
stc
mov
cmc
lock
add
rcl
cld
shl
jmp
add
or
ljmp
shll
hlt
jmp
or
enter
in
rcr
call
aad
rol
in
out
stc
shlb
mov
loopne
or
add
lock
loope
idivl
mov
clc
fimuls
cld
ljmp
lock
in
loopne
aam
in
mov
sar
out
mov
rcr
cli
cld
fincstp
loop
fstl
adc
enter
divl
int3
hlt
lret
fcomi
rcr
movl
dec
or
fsub
fucomp
lret
out
in
cmc
hlt
xlat
shll
mov
aad
inc
fadds
fmul
or
call
xlat
shl
neg
aam
rcl
cli
aad
fcomi
rol
ljmp
out
jmp
in
ljmp
mov
mov
push
ljmp
repnz
mov
lds
lock
mov
cli
stc
incl
fisttps
iret
lods
rol
in
mov
shl
mov
aad
jecxz
ret
add
ljmp
fnsave
in
out
mov
jecxz
fcmovbe
sarb
or
or
call
out
lods
shl
int
mov
cli
lock
fimull
out
out
or
loope
or
stos
mov
enter
aam
lret
xlat
mov
call
repz
xlat
stc
or
in
in
out
out
ror
lock
mov
add
mov
loop
loopne
rolb
lret
or
hlt
repnz
stos
mov
neg
mov
out
repnz
aam
add
loope
jecxz
scas
rcl
out
out
fdivs
fninit
cli
add
add
out
fisttpll
out
cli
call
fst
out
aam
into
cli
shr
add
mov
ror
add
call
call
shlb
jecxz
out
int3
ffree
mov
leave
leave
add
pop
or
out
leave
mov
lret
les
std
lret
imul
call
les
enter
std
call
sti
xlat
shlb
fcmovnbe
aam
fcmovbe
add
stc
ljmp
cld
fnstsw
mov
rcl
sti
int
stc
into
icebp
in
cmc
lock
xlat
in
std
repz
ret
out
test
in
int3
xlat
mov
roll
xlat
fdecstp
sti
jmp
leave
jmp
ret
out
enter
iret
shll
fcmovu
loop
loop
testl
repz
mov
jmp
mov
fucompp
fiaddl
add
fstp
cmc
push
jmp
test
out
out
in
mov
mov
mov
fsubp
in
cli
loop
sar
int3
cli
icebp
lds
divb
iret
hlt
mov
mov
add
or
ret
shr
div
in
hlt
shl
into
fcmove
neg
rcl
call
icebp
loopne
jmp
dec
jae
mov
sub
xor
add
mov
mov
mov
cmpl
jbe
jmp
lret
sub
shlb
inc
jnp
scas
xchg
jp
add
into
mov
shl
icebp
in
out
ljmp
aam
int3
mov
cmc
vcvtdq2pd
mov
shr
fnstenv
lret
out
cli
mov
out
lret
repz
repz
cli
lret
loop
int
add
ret
fcomip
out
idiv
or
add
fmul
scas
loop
xlat
out
lret
fnstsw
int3
mov
fsubrp
fdivrp
clc
or
icebp
out
in
out
lret
fmulp
int
jecxz
mov
aam
pop
mov
pop
pop
int3
cmpsl
scas
leave
mov
shr
mov
icebp
ret
stc
pop
out
mov
add
std
ljmp
ret
stc
mov
mov
shl
roll
fsub
in
loop
std
cli
leave
out
scas
enter
hlt
ljmp
aam
shl
cli
inc
or
lret
call
ret
ret
loopne
out
jmp
cmc
mov
div
ret
xlat
stc
fucomp
cld
std
lret
mov
hlt
mov
shr
jmp
mov
sti
xlat
aad
or
out
repz
loope
mov
mov
lods
ljmp
call
push
out
out
into
in
loopne
add
in
mov
xlat
aam
cli
shll
sar
fcomip
loope
or
jmp
add
not
lds
roll
fst
repz
add
out
xlat
in
jmp
sti
add
int3
lods
rol
lret
jecxz
leave
int
idiv
std
sar
int3
aad
test
loope
int
scas
shl
jmp
scas
icebp
hlt
sarl
repz
add
std
fisttpl
enter
fsubr
icebp
out
out
fcmovb
aad
out
cli
int
fldl
shl
neg
in
or
fisttps
leave
mov
jecxz
out
repz
test
push
loopne
filds
repnz
leave
out
int
into
mov
mov
sti
cld
jecxz
out
loop
clc
or
pop
call
leave
add
repz
int
mov
mov
in
jmp
stc
in
add
ret
loope
stc
pop
add
out
std
fucom
cmpps
mov
fidivrl
hlt
ffreep
ror
or
aam
adc
mov
ret
out
in
shlb
ljmp
int3
ret
cli
shl
decl
in
fmul
repnz
mov
cli
repz
mov
fiadds
lds
vmovq
clc
in
jecxz
in
in
scas
mul
int
repz
mov
stc
leave
fnstcw
shr
fst
aam
fsubr
les
stc
mov
out
repnz
mov
add
fldl
loop
in
bnd
lret
fcom
hlt
mov
stc
add
mov
faddl
or
les
add
in
fdivs
lret
lods
in
mov
cmc
jecxz
loop
out
loopne
movb
cli
lret
jmp
shl
mov
repnz
mov
in
in
jecxz
ret
hlt
out
aam
fdivrl
loope
add
mov
icebp
loop
out
rcl
clc
shr
sarl
cld
fiaddl
lret
jecxz
jmp
into
out
fnclex
aad
mov
neg
mov
bswap
add
stos
shr
loopne
loopne
rol
not
mov
fsub
test
or
enter
cli
call
mov
loope
lock
jecxz
loope
loope
mov
decb
ror
pmulhuw
mov
xlat
into
lret
out
rcr
rcl
cli
ror
out
sti
pop
mov
leave
lret
inc
loop
repnz
jmp
div
mov
xlat
cli
int3
loop
sar
loop
in
movb
loope
icebp
iret
int3
call
enter
mov
aad
cli
fdivrp
cld
clc
int3
repz
mov
rol
sar
out
std
cmc
cli
leave
loopne
mov
add
jecxz
add
iret
int
ror
leave
mov
out
jmp
in
shl
fdecstp
repz
rol
lret
fildl
add
lods
in
bnd
idivl
in
mov
into
std
hlt
cli
add
add
add
out
repnz
mov
shl
in
mov
in
in
mov
rcl
loopne
rolb
ljmp
lods
mov
in
out
out
iret
out
mov
sarb
int3
rolb
leave
roll
or
or
in
jmp
fcmovnbe
mov
mov
ret
div
lock
add
enter
int3
int
loop
hlt
cmc
shr
mov
out
rolb
les
test
push
or
loope
mov
out
out
clc
jecxz
stc
fldl
aad
rolb
decb
fcomp
out
repz
icebp
fnsetpm(287
clc
lock
repnz
fincstp
fidivrl
push
or
jmp
shlb
shl
idiv
in
repz
call
neg
lock
enter
lret
scas
xlat
mov
in
stc
mov
aam
cli
rcr
lret
shr
ljmp
shrb
mov
mov
std
add
shl
mov
dec
lret
or
shrl
mov
mov
fildl
loop
in
add
std
loopne
fldl
mov
shl
mov
repnz
mov
aad
testl
in
stc
fabs
lret
in
sar
jmp
int3
dec
mov
icebp
rcr
in
cld
flds
cmc
iret
loopne
into
int3
out
repz
leave
in
mov
xlat
jecxz
clc
fildl
ffreep
div
loopne
leave
adc
ret
out
loopne
aad
fucomi
dec
leave
rcr
repnz
add
std
in
out
sar
shl
int
mov
lret
fdiv
lock
mov
sti
aam
clc
rorb
add
ror
ret
ror
lret
xlat
in
mov
lock
std
add
std
test
decl
loopne
rol
jmp
fnstcw
add
out
enter
lret
fcomp
shrb
lock
jmp
fdivrp
add
loope
into
fcmovb
lds
or
mov
in
stc
div
iret
std
call
out
cli
flds
or
sti
loope
clc
in
icebp
icebp
out
lret
call
int3
in
jmp
rcr
idivb
xlat
aad
std
pop
ljmp
divl
repnz
add
sti
int
shl
in
or
mov
into
shll
mov
lock
icebp
hlt
mov
out
repnz
add
add
mov
shr
jmp
icebp
mov
ljmp
add
rcr
cli
or
or
shlb
mov
out
rcl
mov
aam
rolb
loope
testl
cld
adc
mov
ret
cli
cmc
rcl
fcomip
hlt
in
aad
mov
lret
jmp
aam
in
in
leave
fbstp
out
scas
repz
stc
mov
jecxz
not
mov
shr
movl
mov
lock
loopne
fcmovu
mov
mov
cld
push
mov
iret
loop
stos
jmp
out
loop
lods
leave
into
int3
jmp
fdivrl
call
enter
lods
test
sti
cmc
cmc
hlt
fistpll
repnz
rol
fscale
inc
xlat
jecxz
leave
cli
shr
lret
in
aad
lods
rol
cli
fdivrs
ret
fcmovb
repnz
cmc
or
ffree
jmp
out
shl
loop
in
aad
out
mov
sar
lret
aam
mov
lret
fldpi
xlat
jmp
fucomp
fsub
test
mov
scas
mov
aad
std
out
aad
lret
lds
push
les
repz
int
cmc
in
aad
repnz
cli
mov
fsubr
lds
or
mov
in
int3
call
aad
add
mov
rcl
mov
or
ljmp
enter
mov
hlt
mov
std
push
in
call
mov
loop
lret
in
shr
fcomp
int3
ret
stc
loopne
in
ret
in
vpavgw
int3
mov
int
in
sti
xlat
mov
lret
add
sti
mul
jecxz
jmp
ljmp
ret
lret
mov
leave
out
mov
lret
in
into
repz
ret
in
sti
fucom
fst
enter
cmc
jmp
repnz
rolb
repnz
add
shl
in
fldl
cmc
ret
cli
lret
rcr
mov
stc
mov
clc
mov
in
lock
fdivrs
in
repz
test
loop
call
lret
aam
aad
add
ljmp
in
mov
fadd
loope
mov
fdecstp
aam
mov
in
clc
ljmp
in
in
lret
loope
shr
mov
in
into
mov
lods
sar
mov
cli
ffreep
add
or
loop
int
int3
or
rol
lock
mov
div
hlt
sti
mov
repz
rolb
out
cmc
jecxz
fmulp
movl
loopne
iret
cli
out
mov
xlat
call
lock
lret
hlt
stc
fisttps
in
sarl
icebp
mov
stc
mov
ror
out
out
hlt
loope
push
hlt
ljmp
loop
jecxz
xlat
in
shr
mov
lods
mov
repz
mov
rcl
loop
add
stc
fadd
or
lock
mov
fcmovbe
repnz
neg
ret
neg
aam
in
int
repz
lock
loope
lods
shrl
mov
xlat
mov
ffree
cli
loope
out
std
add
loope
add
mov
vpsrlq
xlat
cli
into
repz
clc
pop
out
rcr
fmuls
xlat
clc
loopne
out
add
cmpsb
rcl
cmc
in
int
cli
mov
xlat
cli
int
ret
roll
fcom
clc
cmc
fadds
jmp
mov
fmulp
iret
aam
aam
xlat
add
add
hlt
std
ljmp
stos
loopne
loopne
into
stc
fstpt
icebp
sti
sti
out
les
decb
leave
pop
fcomi
int3
mov
out
lods
repz
clc
cli
fsub
neg
mov
idiv
rcl
add
or
in
jmp
shll
mov
fld1
jecxz
in
rol
add
add
movhlps
in
out
out
out
fcmovb
mov
xlat
repz
add
cli
loop
jmp
call
enter
sti
call
enter
div
shr
fsub
aad
aad
jmp
std
add
icebp
mov
loop
aad
enter
int3
int
not
fcomip
loope
add
add
std
filds
add
jmp
shlb
cld
ljmp
ret
jmp
aam
fisubrl
jmp
lock
out
add
std
std
ffreep
std
ret
aam
aad
prefetch
pop
fsubp
mov
leave
cmc
out
fcmovbe
mov
fcmovnu
lret
jmp
mov
stc
add
neg
push
rol
mov
aad
in
fmulp
out
repz
fdiv
mov
fiadds
into
leave
fidivrl
iret
shl
mov
lret
loopne
add
ret
div
iret
cmc
hlt
out
in
iret
jecxz
mov
cli
lods
in
ror
mov
std
fbstp
ret
jmp
or
out
int
enter
jecxz
mov
in
mov
fcmovnbe
push
mov
lds
loopne
enter
or
mov
lock
fcmovbe
clc
fucomp
fstpt
ret
add
loopne
out
loopne
aad
out
mov
shr
test
fcompp
mov
jecxz
mov
hlt
or
std
enter
rcl
jecxz
stc
in
fxch
icebp
fiadds
call
mov
add
enter
icebp
ljmp
call
cmc
shr
out
add
fdivp
fisttpl
push
or
out
into
ljmp
mov
jecxz
fadds
fdivrs
push
or
ljmp
repnz
sarl
sar
mov
fsub
rol
out
loopne
ret
int
mov
call
mov
hlt
ffreep
jecxz
fsubrp
add
enter
shl
mov
out
loope
add
clc
or
in
stc
lret
jecxz
fadd
jmp
lret
stc
fsincos
out
repz
rol
repnz
pop
icebp
hlt
in
test
fcmovne
fsubr
les
iret
out
lock
std
into
in
fadds
mov
pmullw
into
lret
out
xlat
rol
jecxz
enter
cli
lret
icebp
repnz
iret
into
faddl
out
jmp
jmp
fcmovb
add
enter
loope
hlt
out
enter
mov
add
jmp
prefetchwt1
repnz
mov
ljmp
jmp
out
rcl
loopne
loop
stc
jmp
or
jecxz
stc
adc
ljmp
out
mov
in
mov
in
cld
or
lret
leave
add
lret
rol
loopne
rcl
repnz
ror
in
xlat
fcmovnbe
add
mov
add
cli
push
hlt
std
adc
clc
out
mov
mov
into
call
push
out
sar
cmc
fstp
out
into
stc
lds
mov
scas
fdivs
cmc
fmul
out
jecxz
hlt
or
pop
std
push
fadd
ret
mov
jmp
lock
mov
sti
call
push
fdiv
add
push
in
leave
in
test
rol
lret
lods
in
shl
lret
lock
fucomip
into
mov
rol
add
fcomp
clts
mov
jecxz
mul
call
cmc
dec
in
xlat
out
rcl
ret
out
stc
in
in
in
sti
repnz
xlat
mov
loopne
out
iret
in
rcr
mov
fcomip
mov
fdivrp
std
fadds
fsubr
iret
iret
scas
into
shl
out
fidivrl
rcr
rol
mov
in
in
std
out
imulb
imul
leave
mov
shl
std
add
fstp
lret
leave
cmc
int3
int3
fcomi
imul
rcl
leave
f2xm1
cld
cmc
add
out
hlt
hlt
fst
add
out
faddl
fst
lock
aad
aam
out
in
sti
loope
stc
add
xlat
idiv
jmp
in
lret
out
enter
aam
in
mov
rol
int
hlt
into
sarb
shl
loope
lds
ljmp
fldpi
fcomip
out
out
div
sarl
or
out
or
hlt
call
rcl
out
aam
call
lret
add
loope
jecxz
fcmovb
ljmp
shlb
mov
rcr
stc
lock
xlat
fdiv
sar
fndisi(8087
jmp
fsubrp
mov
out
call
mov
shr
fnstcw
clc
jecxz
jmp
or
sarl
in
fadd
mov
mov
fistpll
rolb
or
test
mov
sti
mov
stc
clc
lret
shl
out
mov
xlat
out
in
loope
add
jmp
div
in
jmp
int
mov
out
cli
mov
cmc
fildl
ret
rcl
loope
lret
mov
cld
mov
in
shl
jecxz
neg
add
ror
loope
iret
ror
out
icebp
cmc
enter
int3
mov
add
push
fcomi
call
icebp
int
ror
enter
std
neg
stc
fnstsw
jecxz
add
in
or
into
stc
int3
cmpsb
in
in
rcl
int
jmp
cld
jecxz
mov
jmp
cld
iret
pop
add
iret
fucom
mov
repnz
lret
cmc
out
in
sarl
mov
aam
call
lods
out
lock
jmp
xlat
in
cld
mov
roll
cld
fdiv
icebp
lock
iret
or
icebp
out
out
jmp
mov
lret
aad
add
aam
loopne
or
shr
scas
out
rol
lock
neg
fldpi
repnz
out
in
shl
rol
lret
dec
decl
mov
in
in
shlb
std
stc
mov
lock
pop
fmul
bswap
repz
leave
loop
int3
jmp
out
mov
mov
rolb
push
loope
or
add
out
test
rol
enter
loop
loopne
fucomi
flds
add
std
fsubr
push
add
in
fucomip
jmp
in
icebp
enter
enter
mov
mov
fisttpll
enter
jecxz
div
divb
int3
idiv
roll
hlt
ljmp
call
lods
sti
loopne
mov
mov
not
add
pop
loop
xabort
lret
add
add
adc
loopne
lret
lret
rcl
int3
repz
mov
rcr
out
std
out
mov
shl
or
out
or
test
shrb
in
loopne
cmc
mov
out
add
in
loope
sti
or
shl
ret
les
mov
repnz
jmp
fucomi
fmuls
jecxz
out
mov
fcmovb
mov
sti
lock
fld
fdiv
mov
ffreep
jmp
push
fmul
ror
ret
in
aad
in
clc
cli
jmp
mov
pop
or
jmp
fcmovnb
call
repz
rol
into
mov
shl
aam
f2xm1
int3
repz
mul
pop
enter
fmul
fmul
ret
fcmovnbe
fcmovu
fst
mov
add
shl
hlt
cli
sar
cld
or
ret
movsb
mov
out
in
stc
mov
sar
add
mov
add
leave
out
ret
ljmp
fst
mov
hlt
loope
aad
out
in
or
test
lret
repnz
lret
stc
in
into
stc
mov
mov
loop
filds
fadd
rcr
or
or
add
lock
mov
cmc
into
out
mov
mov
dec
std
repz
add
shl
lret
loopne
ljmp
loopne
mov
mov
mov
ljmp
stc
sti
int
repnz
int
cmc
rcl
fst
ror
loope
in
fdiv
add
rcl
mov
jmp
mov
fldl2e
in
out
aad
mov
mov
mov
enter
jmp
shl
icebp
repz
fcmovnu
icebp
mov
mov
lret
loope
push
out
fsub
shl
in
repz
lock
fdivrp
repnz
loopne
div
fsub
enter
loop
pop
int3
mov
int
shr
leave
stc
hlt
push
in
ret
out
icebp
add
mov
in
enter
lock
in
lock
call
icebp
lock
in
pop
loope
mov
lods
jmp
lret
shl
out
fmulp
clc
cld
loope
ret
out
clc
lds
or
aam
loop
loope
out
mov
rol
out
enter
incl
rcl
in
pop
sti
or
lret
ret
scas
repnz
sti
repz
in
jmp
jecxz
out
repnz
loope
les
add
icebp
in
icebp
loop
mov
lret
mov
div
into
int
enter
mov
in
loopne
idiv
or
int
call
out
clc
ffreep
mov
mov
std
fsub
fiadds
clc
loope
or
bnd
iret
ljmp
add
sti
fstpt
div
loope
loop
add
test
aad
les
hlt
mov
xlat
add
jmp
add
lret
add
fsubrp
out
mov
mov
rcl
lret
mov
aad
add
push
xlat
lret
or
lock
imul
fdecstp
fistpll
mov
fxtract
out
loope
cld
jmp
mov
aam
lret
fidivrs
clc
pop
out
sar
add
in
paddq
jecxz
pop
icebp
in
in
scas
in
xlat
mov
shl
ret
hlt
loop
xlat
cld
pop
hlt
lret
fucomip
add
mul
shlb
sti
fdiv
mov
xlat
clc
loop
enter
leave
in
repz
in
out
lret
cli
hlt
hlt
iret
aad
shl
add
mov
cld
test
in
or
fchs
in
in
xlat
mov
mov
cmc
loopne
stc
in
shl
cmc
out
in
or
in
in
hlt
mov
iret
mov
out
mov
in
ret
mov
hlt
lock
fucom
cli
repz
out
shl
iret
mov
out
lret
repnz
out
aam
aam
decl
add
add
lret
shl
in
call
aam
shlb
sarl
jecxz
in
in
loop
ljmp
mov
aad
mov
in
out
fcomp
repz
lock
les
lods
out
ffreep
mov
out
repz
int3
mov
sti
mov
icebp
add
mov
fcmovnu
ror
fsub
aad
into
ljmp
int
repz
in
icebp
cli
call
loope
lret
repz
hlt
fdivl
mov
mov
rolb
loopne
mov
out
jmp
not
fadd
fcmovbe
not
lret
mov
ret
cli
ret
cld
in
jmp
fstp
mov
loop
in
mov
out
enter
fadds
mov
out
into
add
lret
ret
mov
ret
jmp
in
into
clc
leave
out
int3
fdivrl
sti
ret
add
fcmovu
mov
ret
repnz
aad
mov
aad
cmc
std
fsin
add
add
or
loop
int3
jecxz
in
mov
repnz
mov
clc
cmc
in
or
ret
fiadds
call
call
jmp
repz
aad
int
int3
sar
jmp
fcmovnu
or
movb
fsub
incb
into
shlb
jecxz
out
call
ret
mov
ret
cld
ljmp
fdiv
rcl
in
int3
fnstenv
fcmovbe
aad
repz
add
lret
mov
mov
out
out
aam
repnz
mov
mov
in
fimuls
std
out
out
repnz
in
ret
fcmovbe
in
int3
mov
xlat
ret
call
repnz
div
in
loopne
fsincos
sar
call
mov
rcr
frstpm(287
stc
hlt
jecxz
std
rcl
imull
mov
fcmove
xlat
sar
ljmp
cli
fadds
cmc
jmp
fmuls
adc
into
in
into
rcl
mov
shl
fyl2xp1
neg
imul
not
in
repz
fsubr
add
in
in
into
add
ret
iret
fsub
into
int3
mov
call
int
clc
fcmovnb
fmul
iret
push
push
incb
mov
icebp
int3
out
in
mov
mov
rcr
std
aam
jmp
shl
lods
ljmp
in
fnsave
lock
roll
lock
hlt
out
fdivl
mov
lret
in
hlt
sti
call
add
fcom
add
add
iret
scas
lret
in
lret
sti
fdivr
fcmovne
int
ret
roll
in
or
roll
or
or
les
mov
mov
mov
lock
out
loope
add
loope
add
fld
call
test
mov
add
add
pop
out
jmp
int
lret
iret
jecxz
jmp
lret
mov
mov
std
shr
cmc
fsubp
ror
mov
in
loop
out
mov
mov
fucomip
enter
imul
std
out
std
std
repz
lret
mov
int3
shll
lock
push
lock
fiaddl
stos
shl
call
fcmovbe
rcr
out
out
mov
add
mov
lret
lret
fnstsw
fdivrl
out
fcmovnu
mov
out
fdiv
fnstsw
clc
sti
or
loop
adc
loop
mov
mov
sti
repnz
mov
icebp
enter
repnz
mov
or
out
mov
loope
scas
mov
shl
aad
in
in
add
fdiv
repnz
out
or
pop
lret
or
in
cmc
lock
repz
aad
roll
std
sar
out
ret
mov
in
push
into
loop
int3
mov
mov
fucomi
in
lret
cld
lock
mov
les
hlt
ret
fld
fsub
fst
mov
jmp
ljmp
mov
loopne
fildl
cli
ret
fisttpl
add
out
jmp
int
mov
repz
shl
in
fucom
jmp
cli
jmp
lock
xlat
leave
repnz
fsubr
clc
fstpt
in
iret
jecxz
repz
call
out
out
mov
jmp
mov
test
lock
out
fxch
incb
ret
mov
in
mov
jmp
cld
mov
std
stc
repz
jmp
out
mov
into
mov
mov
cli
call
ret
not
add
aam
into
fisttps
or
lret
fcmovnb
in
dec
mov
out
ret
mov
sti
cli
aad
or
cld
fsubr
loope
imull
shll
aam
add
or
icebp
aad
enter
loop
loop
enter
mov
stc
in
int
jmp
stc
xlat
ret
push
loope
or
aam
jmp
in
or
int3
xlat
lret
shl
cmc
clc
aad
std
add
aam
icebp
rcl
jecxz
push
jmp
faddp
repnz
mov
sti
out
in
int3
in
enter
push
cli
in
int3
rcl
sti
add
rcr
iret
lret
lds
out
int3
int3
lods
iret
call
fcmovnbe
ret
fnstcw
mov
fsub
in
test
mov
int3
lds
rcl
fdiv
fldl
int
loopne
fdivr
std
or
lret
test
int
shrb
hlt
mov
in
fcmovnb
repz
fcmovnu
add
loop
cld
fidivs
mov
fnstsw
idiv
stc
rorb
shl
into
or
repz
enter
repz
xlat
out
repz
mov
sarb
stc
jmp
iret
out
ror
ror
mov
int3
shll
aam
clc
rol
add
hlt
out
out
or
jmp
fmul
in
ret
out
hlt
sti
repnz
mov
or
cmc
jmp
fmull
in
mov
fcomip
repnz
icebp
sarl
mov
mov
std
jmp
in
into
ror
int3
aam
mov
repz
fcomip
add
aad
in
aam
add
push
add
int3
jmp
int
rcr
ljmp
repz
std
cli
fnstcw
or
call
in
aam
in
aad
cli
in
hlt
icebp
sti
fldl
stos
ret
mov
ljmp
into
into
mov
ret
in
fisttpl
leave
in
in
in
test
mul
lods
call
std
repz
iret
cli
repnz
mov
iret
ljmp
lret
scas
divl
fmul
xlat
not
int3
fcomp
loope
movl
in
add
in
lods
ret
call
repz
shrl
aad
pop
fcom
add
or
fimuls
or
leave
les
stc
hlt
lods
out
out
fscale
fcmove
mov
or
fsubp
call
repz
icebp
ret
mov
mov
fcom
int
ret
cld
fildl
lds
iret
add
out
mov
hlt
jmp
in
jmp
out
hlt
icebp
in
int3
jmp
push
jecxz
or
les
fcmove
mov
jecxz
loop
cmc
int3
lods
leave
iret
leave
mov
sti
shr
ret
add
add
fucomi
icebp
repz
out
out
mov
clc
pop
mov
neg
shr
int
in
faddp
repz
in
jmp
cmc
out
mov
cli
cld
mov
filds
cli
lret
stc
or
loop
mov
xlat
shrb
int3
rcr
mov
stc
fcmovnu
loop
ljmp
out
lret
call
aam
icebp
roll
ret
add
cmc
stc
sti
fsubp
rcr
or
add
fdivr
fbstp
in
mov
in
mov
mov
pop
fcmovbe
mov
jmp
fcomi
into
test
ljmp
fucomip
mov
fucomi
sti
ret
flds
or
int
stos
into
loope
shl
fxch
mov
mov
cli
xlat
jecxz
cli
jecxz
or
call
rcl
ret
jecxz
stc
icebp
mov
ffree
fldln2
cld
out
cld
idivb
in
push
jmp
icebp
mov
sti
rcr
repz
icebp
out
incl
add
jecxz
lret
in
fildl
shr
out
lock
shl
cli
aam
cli
jecxz
xlat
clc
fcmovnb
in
cmc
fucom
fstp
imul
out
or
rcl
shl
lods
in
fcomi
call
in
fnstsw
loop
jecxz
fimull
ror
cld
jmp
test
fsubr
mov
jmp
fstpt
mov
test
adc
shrl
mov
sti
hlt
cli
loopne
mov
faddp
stc
aam
hlt
rcr
clc
or
mov
ljmp
rcl
vpor
repz
cli
shl
in
in
sti
in
enter
out
mov
mov
repnz
iret
sar
frstpm(287
sti
or
add
or
loopne
sti
ror
out
mov
cmc
mov
mov
rolb
in
or
lret
ljmp
jmp
rcr
out
lds
fucom
xlat
add
out
or
ljmp
faddp
ror
repz
mov
repz
aad
jecxz
incl
icebp
mov
wbinvd
fcomp
int3
int
mov
fsubr
mov
mov
loope
fisttpll
cli
aam
into
add
loop
repz
out
rcl
repz
test
leave
test
filds
xlat
jmp
sar
clc
divb
or
or
add
lds
jmp
mov
fld
hlt
mov
fdivr
testl
or
femms
cmpsb
into
rol
in
fcmovnu
shr
ljmp
lock
add
clc
out
in
jmp
rcl
shl
ret
mov
mov
cld
fistpll
rcr
lret
ret
lret
adc
shrb
cli
shll
call
faddp
or
loop
stc
loopne
add
int
imulb
jmp
loop
iret
std
faddp
or
push
clc
std
int
ljmp
jmp
into
icebp
sarl
aad
or
or
push
in
lods
iret
in
jmp
div
hlt
shl
test
fldl
add
cld
cmc
adc
or
mov
repnz
rcr
in
mov
in
mov
sti
ret
fcmovbe
lds
ljmp
jmp
lret
ljmp
add
cld
pop
icebp
jmp
add
out
clc
add
out
shll
iret
mov
mov
clc
leave
stc
fdivr
int
fldl2e
mov
call
fcomi
test
testb
int3
fadd
add
rolb
lar
or
in
in
scas
leave
divl
in
out
clc
lret
imul
mov
push
in
cld
clc
add
iret
std
fstp
int
lds
not
lods
int
add
out
mov
shl
aam
push
out
into
in
les
call
sti
int3
out
lret
fdivp
add
fcomp
iret
mov
aam
std
aad
or
repnz
into
repz
out
hlt
jmp
fstp
loop
loop
ret
cld
decb
pop
loopne
leave
enter
leave
repnz
mov
fucomip
jecxz
fcomip
cld
jmp
add
add
mov
test
decl
incl
mov
mov
jmp
mov
mov
sub
mov
mov
jmp
cmpl
jne
movzbl
xor
add
mov
jmp
mov
xor
add
movzbl
sub
mov
mov
xor
add
mov
ror
mov
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
xor
add
mov
xor
add
sub
sub
xor
mov
mov
xor
add
mov
sub
mov
jmp
mov
xor
add
mov
sub
mov
jmp
mov
jmp
mov
insb
icebp
je
pop
rolb
pop
sbb
pop
inc
jp
add
out
enter
stc
fst
rcr
rcr
in
fcmovu
flds
fdivp
leave
iret
jmp
in
rcl
leave
repz
int3
xlat
dec
ret
add
aad
lret
fmul
call
shl
call
aam
repz
mul
std
shr
add
or
lret
or
enter
fsub
aam
ljmp
add
stc
mov
or
leave
fisttpll
movlps
repnz
test
rol
shr
out
mov
xlat
ror
call
push
mov
push
in
int3
jecxz
loop
ror
loope
lret
call
iret
hlt
rcl
repz
mov
leave
int3
vcmppd
int
in
mov
ror
ret
out
div
or
loopne
stc
out
enter
shr
ror
mov
mov
out
mov
call
jmp
rol
into
into
ret
sti
mov
cld
call
mov
rcl
imul
aam
sti
call
fistpll
mov
out
lret
loopne
test
loopne
in
decl
push
out
mov
rcl
into
cli
fcmove
int3
mov
out
loope
rol
cld
cld
lret
jecxz
mov
mov
mov
in
shr
fadd
mov
flds
mov
in
fcoms
add
lret
loopne
ljmp
lock
rol
in
hlt
add
add
int
iret
in
repz
lock
fcomi
fxam
jmp
fldpi
out
aam
mov
fsub
repnz
imul
in
lods
iret
mov
xlat
xlat
ljmp
jecxz
or
loop
enter
std
mov
lret
cli
out
mov
in
jecxz
shl
in
cli
jmp
iret
call
aam
leave
mov
cli
repz
ljmp
loop
hlt
add
or
cmc
in
fcmovu
adc
jmp
mov
repz
in
int3
repnz
icebp
hlt
fcom
sar
dec
shl
mov
mov
fld
fmul
cld
rcl
idiv
hlt
out
fadd
lock
loope
pop
iret
push
out
out
loop
ret
test
fst
mov
sar
out
jmp
bnd
add
vpaddb
out
int
test
jmp
loope
call
mov
loop
fmuls
xlat
or
iret
push
test
scas
loop
repnz
call
xlat
ret
out
ret
mov
add
out
ror
icebp
cli
cmc
int3
mov
shl
sti
icebp
fcmovb
ret
in
cmc
out
cld
bswap
out
push
loope
out
mov
in
call
lret
cld
mov
out
ret
mov
loopne
lret
or
icebp
enter
in
mov
sarl
icebp
ret
push
jmp
loop
repz
ljmp
call
mov
std
icebp
ret
sti
hlt
cli
aam
add
loop
cld
add
push
lock
int
fdivr
mov
rolb
out
mov
in
into
paddsw
shrb
xlat
out
ror
in
repnz
fcmovnu
push
dec
out
psrad
scas
loopne
shl
sti
int3
in
enter
jmp
xlat
mov
push
loop
test
std
in
enter
rcl
shlb
mov
out
add
stc
add
in
add
or
repnz
aam
mov
mov
lret
rcl
mov
add
lock
hlt
sti
hlt
out
clc
leave
xlat
lock
cmc
scas
cmc
in
rcr
mov
vpinsrw
hlt
rol
shr
aam
in
rcl
mov
fcmovnbe
out
fdivrp
add
loopne
leave
or
scas
in
movsl
in
neg
mov
lock
jmp
jmp
mov
cld
call
adc
ret
mov
enter
repz
fucom
mov
test
ret
mov
mov
shr
scas
leave
fdiv
add
sti
rolb
ret
jecxz
fmulp
ljmp
out
ret
scas
stc
out
in
mov
iret
int3
ret
clc
faddp
clc
xlat
call
or
out
mov
out
int
stc
jmp
iret
fmul
hlt
cli
call
fists
int3
mov
into
shll
in
mov
rcr
add
into
jmp
out
bnd
fadd
jmp
fldcw
in
ret
shl
sti
add
xlat
enter
in
lock
test
loop
shl
sti
cli
int
shl
fst
int
add
loope
rorb
clc
iret
lret
adc
icebp
mov
repnz
ljmp
aam
int
jecxz
fdivrp
add
or
fmull
add
loope
loope
int
mov
divb
mov
fdiv
add
std
cli
loope
or
in
loop
enter
cmc
out
iret
mov
add
mov
or
fcmove
aad
pinsrw
mov
jmp
stc
ret
fdivp
cli
loope
clc
cld
push
enter
int3
jmp
mov
ljmp
int3
mov
mov
testl
or
loopne
in
mov
in
out
mov
mul
lret
cld
int3
not
lret
loope
add
or
out
lods
ror
xlat
out
lock
cld
rcr
in
ror
add
jmp
test
mov
in
mov
in
call
mov
loopne
std
leave
decb
repnz
ljmp
lds
mov
fidivrs
leave
add
shr
stos
shl
repz
fxch
fadd
stc
cli
xlat
ret
rolb
sarb
jmp
add
in
or
int
loope
lock
aam
cli
add
ret
fmul
mov
fsub
in
jmp
lret
out
mov
int3
jmp
fxtract
faddl
repnz
out
lret
adc
shl
test
leave
shr
vpaddusb
stc
mov
icebp
div
or
aam
hlt
push
or
stos
test
fldz
mov
mov
std
aad
loope
shufps
into
icebp
leave
shr
into
int3
rol
leave
lds
ret
aam
lock
fxch
add
or
cmpsb
ret
mov
clc
aad
shr
mov
hlt
add
in
in
or
stos
lret
out
lods
int3
bnd
in
lock
repnz
sti
fcmovu
add
push
aad
aam
int3
leave
out
scas
mov
lret
mov
cmc
loopne
std
cmc
in
rcr
jecxz
in
rol
mov
jmp
into
mov
loop
loope
add
clc
out
cld
in
add
jmp
mov
mov
mov
in
fldln2
sar
repz
aam
add
cld
loope
lock
jmp
lock
into
int
in
shr
mov
mov
into
fcmove
cli
sarl
enter
or
jmp
repnz
loopne
aad
icebp
in
repz
mov
loope
lret
rolb
icebp
shrb
sar
iret
mov
fdivr
iret
mov
rcr
add
loopne
jmp
add
add
in
mov
out
shll
mov
cld
std
mov
shl
in
loope
lods
lods
shr
jecxz
call
aam
into
mov
in
pop
aam
loop
xlat
test
call
enter
stc
out
shll
mov
add
rcr
ffreep
loop
loop
out
test
out
shlb
clc
stc
jmp
std
add
fdiv
lds
fsubrp
faddl
enter
icebp
loopne
leave
mov
fxtract
jmp
mov
rcr
movb
enter
out
adc
ljmp
fdiv
int
sti
std
cli
mov
add
fdivrs
out
imul
rcr
shl
aad
int3
aam
in
loope
shr
ret
aad
sti
lret
fucomi
iret
int
in
imul
out
rol
cmc
mov
leave
out
mov
add
fld
shr
add
lds
mov
jmp
testb
fdivrl
ljmp
fst
mov
ror
mov
lock
stc
iret
int
loope
lock
add
loope
add
call
hlt
xlat
int3
idivb
fcmovnu
loopne
mov
fimuls
clc
les
filds
iret
mov
mov
lret
repz
mov
cld
add
add
loop
cmc
mov
incl
in
into
ret
mov
mov
loope
mov
mov
leave
into
fdivr
repnz
mul
add
fcomi
cmc
cmc
iret
lret
enter
mov
shll
fdivp
loope
mov
loop
lret
loope
shr
in
lret
int
in
mov
mov
dec
mov
stc
flds
ret
mov
idiv
jmp
out
shl
cli
mov
shl
hlt
std
sti
lret
jmp
fadd
cmc
loop
int
lds
leave
mov
in
loopne
clc
push
add
vpsubd
int3
lock
stos
loope
cmc
in
fcmovbe
ljmp
loope
faddp
hlt
fxch
add
ljmp
mov
lret
mov
divb
repnz
add
mul
or
test
loopne
loope
lock
int3
mov
repnz
pop
loope
fdivr
faddp
fadd
out
fbstp
aam
fidivs
add
fsubp
loop
mov
hlt
in
add
stos
loope
in
lods
ret
in
hlt
jmp
lock
sar
cmc
stc
flds
push
hlt
ljmp
movsl
mov
lods
ror
neg
mov
mov
mov
stc
std
jmp
repnz
call
fcomi
shr
aam
aam
cmc
mov
fidivrs
pop
cli
lret
enter
test
mov
mov
sar
std
mov
clc
sarb
jmp
fiadds
leave
out
stos
jecxz
in
mov
icebp
fcmove
int
fcmove
cmc
cld
cmc
out
mul
hlt
lock
out
out
scas
ret
xlat
repz
test
mov
rcl
div
cli
faddl
in
repz
aad
idiv
pop
jmp
shl
xlat
shr
ljmp
jmp
icebp
not
mul
jecxz
add
clc
int3
loopne
ror
fsubrl
repnz
faddp
ljmp
loope
fcmovnu
or
add
ljmp
ljmp
in
cld
jmp
add
sti
vmovlps
into
lock
in
xlat
leave
out
mov
loop
mov
rcl
ljmp
pop
int
loop
in
lods
jmp
sar
not
shl
add
rcr
shl
loopne
hlt
hlt
in
loope
pmaxub
ljmp
icebp
xlat
repz
int
fdivrp
mov
out
out
aad
cld
stc
in
clc
fsub
std
cld
cli
fsubr
mov
mov
ret
sti
int3
mov
fnstsw
out
std
out
lret
push
ljmp
mov
shl
in
add
ljmp
fcomi
call
in
fimull
jecxz
lods
loopne
lods
enter
mov
lret
mov
add
add
std
or
loopne
lods
scas
mov
mul
clc
mov
icebp
xlat
call
loope
or
icebp
fsubp
ret
out
lods
fcmove
mov
fdivr
stc
stc
int
in
fstp
cld
or
out
loop
push
enter
in
mov
mov
ror
mov
int
add
jecxz
jmp
rcr
sti
clc
lret
in
add
jmp
stc
enter
enter
jecxz
add
jecxz
lret
cli
fstp
int3
in
out
ljmp
leave
xlat
mov
cli
stc
into
push
loope
fcomi
xlat
in
sti
jmp
lds
iret
in
out
testl
mov
add
jmp
rol
mov
mov
int3
in
leave
cmc
xlat
fldl
sti
mov
fisttpll
ftst
or
lret
stc
out
in
mov
mov
mov
add
fst
or
rcl
ljmp
shll
out
in
sar
out
cld
aam
mov
shl
in
add
dec
out
leave
jecxz
sar
xlat
out
lods
lock
loop
call
in
in
out
pop
test
shl
int3
sar
ror
mov
call
in
call
call
icebp
loope
xlat
xlat
lock
mov
rcr
test
shl
icebp
aad
fmul
in
decl
in
ror
leave
jmp
loopne
fidivrl
test
ljmp
out
or
fsubp
ret
mov
out
mov
mov
add
ret
loopne
fsubrp
out
loope
sarb
mov
aam
in
icebp
testl
add
iret
faddl
out
leave
repnz
mov
lock
in
out
ljmp
shl
inc
fnstcw
shl
hlt
out
into
shl
lret
int3
in
incb
ret
dec
repnz
rol
loopne
in
mov
mov
mov
rcl
std
into
rcr
xlat
hlt
pop
or
in
hlt
sti
int3
int3
mov
imul
not
mov
lret
lock
mov
int3
mov
cld
fsub
fdivr
or
mov
out
lret
int
xlat
cld
lock
mov
out
flds
mov
loop
test
mov
lock
cld
mov
testb
fstp
jmp
leave
movsl
jmp
cmc
jecxz
leave
mov
in
stc
ljmp
jmp
testb
cli
or
or
loop
out
xlat
leave
lret
iret
lock
repnz
int3
mov
incb
sar
aad
call
icebp
scas
mov
cmc
call
fcomi
sti
sar
loop
clc
mov
loopne
in
enter
fbstp
leave
ljmp
cmc
aam
jecxz
or
mov
rol
ljmp
fcmovnu
sti
icebp
fnstsw
call
sti
lret
out
scas
lock
mov
ror
in
enter
bnd
stc
shl
in
rcr
rorb
jecxz
call
ret
icebp
out
icebp
xlat
icebp
mov
mov
std
out
icebp
loopne
clc
std
hlt
int3
adc
test
test
imul
cmc
aam
rcl
fucomi
not
loope
fnstsw
or
shr
mov
loopne
mov
aad
mov
int
fiadds
out
call
flds
loopne
lret
out
fdivrl
sti
aam
rcr
lret
sti
cmc
sti
mov
xlat
sti
leave
fsub
icebp
ffreep
lret
in
mov
mov
xlat
mov
lret
lret
xlat
repnz
in
fmul
jmp
loop
clc
shl
mov
lret
mov
ffree
fdivp
mov
imul
or
shl
lret
call
iret
shll
shl
call
sarb
loopne
loop
out
or
fstp
loop
fmul
test
mov
aam
neg
loop
fcmovbe
lret
jecxz
repnz
repz
call
mov
add
ret
hlt
out
cli
adc
repz
mov
iret
mov
fdivr
sti
mov
flds
or
clc
push
ljmp
mov
in
repz
clc
call
int
mov
fisttpll
jmp
in
mov
in
jecxz
stc
in
out
mov
mov
loopne
fldl2t
faddl
pxor
jmp
rcl
mov
lret
test
jecxz
idivl
sar
or
jmp
lret
jecxz
lret
lret
mov
int
mov
add
fdiv
loopne
repz
add
loopne
lods
mov
lret
repz
in
shl
out
cli
cld
call
jecxz
hlt
mov
pop
shr
repnz
out
ret
sti
jmp
jecxz
sti
rol
add
cld
or
loopne
lret
out
push
rcr
mov
shlb
jmp
jmp
in
test
loope
syscall
cld
mov
mov
enter
fdivr
repz
cmc
fstp
mul
add
iret
call
mov
lret
ret
out
lock
in
into
cmc
cli
div
push
jecxz
clc
in
fcmove
jmp
add
shlb
mov
dec
jecxz
repnz
rol
pop
add
or
loopne
in
fucomp
in
loope
jmp
mov
ret
push
repz
push
stc
add
repz
in
mov
mov
test
mov
fstp
not
hlt
clc
int3
rcr
cmc
shl
jmp
fnsave
aam
lock
add
std
out
add
lret
out
lret
scas
mov
cmc
mov
fmul
in
mov
fcomp
loop
aad
shl
rol
or
push
or
loope
ljmp
sarb
idivb
loop
loopne
in
cld
mov
mov
mov
xlat
lret
in
sar
lret
mov
mov
or
add
in
or
scas
fmulp
int
iret
cmc
in
sar
iret
fcomi
add
mul
mov
cld
leave
fisttps
fmuls
adc
loope
lods
out
into
mov
int3
out
shr
mov
mov
sarl
fcmove
fisttps
pop
loope
in
mov
loopne
fmulp
aad
aam
loope
xlat
filds
lret
fadd
std
out
repnz
rol
shl
shl
mov
std
add
incl
les
add
fmuls
or
ret
repnz
mov
loopne
enter
fdivs
out
add
lret
rcr
cli
loop
call
scas
enter
mov
out
out
int3
sar
jecxz
sti
rcr
add
not
or
repz
mov
leave
mov
jmp
mov
mov
add
ret
jmp
rol
loopne
cmc
idiv
int3
fprem
bnd
rcr
rolb
add
add
add
int
in
ret
lret
in
fcmove
repz
ljmp
add
fiaddl
push
lret
fstp
or
fst
in
ret
mov
leave
div
xlat
fnstsw
mov
jmp
les
idivl
clc
mov
shl
in
out
ret
lock
add
stc
enter
in
into
jmp
mov
leave
lret
lods
stc
in
in
fcmovne
fsubrp
sti
not
jmp
add
or
add
into
jmp
lods
mov
iret
fstp
les
incl
ljmp
filds
fxch
jmp
ljmp
rol
call
iret
mov
add
or
out
fmul
jecxz
mov
int
xlat
mov
xbegin
mov
repz
cld
push
fildl
out
loop
test
loop
in
out
fdiv
fldl2t
mov
push
in
testl
loope
or
into
fstp
call
enter
xlat
mov
repz
fadds
fsqrt
lret
leave
fcmove
test
scas
rol
mov
in
fnstenv
loop
int
inc
sti
or
out
add
int3
in
ror
in
out
in
icebp
std
not
jecxz
mov
faddl
loope
cld
in
fadd
out
add
ljmp
iret
leave
cmc
int
mov
icebp
loope
leave
leave
in
in
cld
lret
loopne
out
int
shlb
lock
lret
loop
mov
imul
cld
psubusb
iret
fsubrs
cmc
mov
mov
clc
in
aam
call
mov
out
enter
fmulp
fsubs
in
hlt
ljmp
mov
add
rolb
enter
or
stos
lock
repz
mov
repz
leave
out
into
hlt
clc
fdiv
rcl
out
add
int
mov
out
out
out
cmc
out
lret
std
out
icebp
clc
fdivr
add
push
mov
fmul
ror
lret
mov
call
roll
add
mov
ffreep
scas
mov
jmp
out
ljmp
not
std
imul
lret
out
cmc
int3
clc
mov
lods
icebp
iret
mov
jmp
mov
add
rcl
repnz
add
in
int3
add
lret
enter
lock
mov
loopne
add
stc
add
out
ljmp
call
divl
ret
fst
in
cld
ret
paddusw
call
fucom
mov
cmc
lock
fstp
fldl2t
fnstsw
ret
jmp
enter
out
jmp
in
out
fstpt
fdiv
add
add
in
or
test
mul
leave
jmp
fsubrp
fdivr
out
imul
mov
in
loope
paddusw
out
shl
lods
int
leave
aad
ror
lock
loop
cli
add
cli
add
pmaddwd
out
fcmove
or
out
aam
ror
jmp
mov
hlt
mov
cmc
add
jecxz
loop
fsubrp
shl
rol
loop
les
aad
jecxz
jecxz
pop
mov
enter
or
icebp
out
mov
mov
jmp
rcl
add
movb
add
in
add
in
faddp
mov
xlat
shrl
shll
out
fdiv
xlat
or
clc
loope
out
fidivs
jmp
fdivs
int
pop
icebp
add
add
fldl
out
jecxz
or
in
hlt
in
iret
fcmovbe
ljmp
repz
decb
leave
fucom
in
loopne
or
ljmp
mov
iret
hlt
mov
aad
add
icebp
add
shl
clc
out
jmp
jmp
fnstenv
out
std
jecxz
or
or
ror
mov
mov
cli
sar
in
std
iret
icebp
into
stc
add
shl
jecxz
xlat
mul
jmp
adc
call
lock
in
fistpll
mov
jecxz
add
hlt
fscale
or
sarl
int3
fdiv
jmp
mov
repnz
icebp
add
fcmove
fsubrp
incl
test
mov
ret
out
repz
hlt
clc
or
add
ret
mov
into
loop
mov
fld
sar
in
jecxz
into
or
scas
mov
int
fidivrl
int
aam
mov
cli
testb
sti
lds
add
les
mov
mov
xlat
xlat
not
lret
sti
repnz
hlt
jecxz
lret
fsqrt
stc
shl
leave
int3
divl
in
out
fdivrl
cld
shl
int3
xlat
add
or
stc
in
stc
ljmp
cmc
ror
mov
repz
add
lret
rcr
pop
jmp
or
in
ljmp
lock
ror
int
shl
shl
leave
add
push
sar
shr
repnz
sarl
out
iret
add
enter
cmc
cmc
out
ret
add
add
scas
int3
scas
rcr
loope
shlb
int3
mov
add
mov
fcomp
lock
loopne
cmc
mov
mov
ror
movl
jmp
repnz
ljmp
clc
mov
leave
ljmp
mov
fdiv
fimuls
fxch
fstl
fxch
shl
imul
sti
mov
leave
jmp
iret
add
clc
cld
fisttpl
rcr
add
icebp
scas
out
into
shl
lret
hlt
icebp
mov
int3
jmp
test
call
in
lds
loopne
leave
fcomi
les
aam
sti
cmc
lret
hlt
rorl
jecxz
loop
shl
int3
divl
int
int3
in
aad
aam
fdivp
fprem1
in
or
stos
mov
loopne
jmp
mov
std
lock
rcr
in
les
out
add
push
lret
repz
fcmovbe
iret
fdivrs
mov
stc
rolb
aam
hlt
out
or
lock
out
rcl
xlat
jmp
add
int3
aam
or
xlat
lret
push
sti
les
jecxz
or
jecxz
in
iret
in
std
ret
out
mov
dec
loop
aam
lret
mov
jmp
aam
ljmp
mov
add
or
cld
add
shl
shr
mov
sarl
in
mov
rcl
fimull
ret
bnd
cld
ror
cli
mov
sti
test
out
in
out
loopne
mov
ljmp
lret
shl
cmc
clc
mov
repnz
rcr
push
enter
lret
mov
aam
jmp
lret
fldl
aad
mov
lret
add
or
mov
enter
idiv
fnstcw
loope
decb
fstp
ret
add
add
fldt
mov
stc
int3
fadd
repnz
fsubp
icebp
rcr
movl
repnz
lock
shl
out
mov
mov
repz
jecxz
add
loope
cld
fdiv
add
push
fldpi
mov
repnz
mov
mov
loop
out
or
pop
or
loopne
adc
les
stc
mov
mov
fiaddl
cli
testb
loop
cld
fiadds
or
jmp
mov
shr
in
enter
mov
out
or
call
pop
icebp
rol
lret
shrl
xlat
xlat
leave
mov
rol
cli
cld
repz
fcomi
out
add
pop
loope
scas
scas
rol
ror
mov
xlat
into
iret
add
in
idiv
std
idivb
cli
jecxz
add
fisubrs
not
mov
mov
enter
icebp
add
fcos
mov
cli
mov
lock
fidivl
repnz
std
add
stc
ljmp
shll
loopne
mov
shl
jmp
cli
mov
roll
rol
imul
or
fiadds
lods
call
fnsetpm(287
fcmovbe
repnz
mov
cli
lret
add
or
mov
ljmp
ljmp
pop
cli
mov
out
out
decl
loope
iret
fsub
out
lods
repz
cmc
out
ror
xlat
cld
fsubr
leave
loopne
mov
hlt
push
fildl
add
iret
repnz
mov
lock
out
repnz
rolb
in
push
sti
std
in
jmp
jmp
add
lds
hlt
ljmp
not
mov
idiv
std
rolb
sti
pop
out
cld
in
lock
mov
int
int
cmc
xlat
mov
std
mov
add
out
add
loop
lods
mul
mov
shr
in
fistpll
cmc
int
mov
leave
loopne
aam
or
iret
div
mov
ljmp
sti
int
cld
icebp
aam
out
in
fsubrp
jmp
fucomip
loop
loope
cmc
imul
call
enter
std
mov
xlat
psubsw
in
int3
loope
mov
out
out
in
repnz
jmp
testl
or
lret
sti
out
fmul
fsubp
std
into
shrl
into
cli
into
in
stc
sti
int
jecxz
mov
int3
div
fcmovb
sti
push
pop
push
clc
mov
lods
lret
fcomip
lret
xlat
cld
mov
rol
in
add
loop
fldln2
test
ffreep
shr
int
lock
les
into
out
add
add
flds
or
out
lret
xlat
jmp
cmc
in
cli
xlat
xlat
test
repnz
lret
out
lock
repz
repnz
in
lock
loopne
in
in
fsubrp
testb
or
aad
out
lods
aam
mov
mov
in
mul
cmc
enter
loopne
jecxz
jmp
in
mov
testl
ret
jmp
clc
push
out
ljmp
sar
mov
lret
call
cld
out
mov
repnz
push
stc
push
fistl
add
repnz
out
aad
mov
mov
mov
mov
fdivrl
cmc
rcr
add
ljmp
hlt
loop
mov
clc
mov
mov
mov
add
add
fsubr
in
mov
loopne
hlt
fnstcw
shr
ffree
add
clc
aad
repnz
stc
aad
lret
out
in
shrl
mov
stc
ror
hlt
mov
decl
hlt
push
faddp
mov
lods
fcmovbe
mov
leave
into
add
div
jmp
neg
out
add
jmp
ljmp
xlat
enter
call
int3
in
mov
hlt
icebp
mov
cli
loop
fucom
out
scas
call
ror
fucomi
hlt
lock
shl
pextrw
std
or
ret
in
jmp
test
xlat
cld
shr
add
cli
fsubrp
clc
out
fisubs
in
sar
lret
out
mov
in
cmc
xlat
ret
call
fucompp
clc
add
or
add
shr
ret
rol
into
in
mov
call
aad
fsubp
rcl
push
shl
cli
add
push
or
in
jecxz
rol
lret
lods
in
into
out
mov
lock
repz
loop
enter
fadds
out
mov
mov
in
mov
mov
mov
aad
aam
clc
aam
in
into
mov
mov
mov
hlt
stc
mov
shl
aam
std
out
call
out
loope
rcl
rcl
not
in
not
mov
out
out
call
fiadds
add
or
add
loope
lret
les
mov
mov
mov
sarl
psubw
into
loop
in
in
out
out
leave
mov
fstp
loop
loopne
jecxz
sar
fcmovnu
cli
lret
out
or
in
iret
iret
rcl
not
call
out
in
mov
mov
add
in
mov
mov
int
mov
ljmp
std
mov
call
jmp
fmul
cli
loope
fprem
fstp
add
loopne
out
ret
mov
fsubp
pop
fildll
shl
sar
mov
mov
enter
icebp
fdecstp
movb
mov
repnz
in
iret
mov
hlt
fiadds
call
mov
loop
cmc
ljmp
mov
lret
mov
jmp
out
test
or
aam
std
mov
mov
into
fldl
out
sarl
sti
decl
add
iret
sarb
mov
shr
icebp
mov
jecxz
loopne
into
in
lock
std
aam
push
cld
in
cmpsl
test
repnz
repnz
xlat
lret
xlat
ret
out
aad
repz
out
fxch
jmp
clc
jecxz
loope
mov
lock
mov
ror
mov
add
in
cli
add
add
test
lret
call
lods
out
mov
mov
sar
fsubr
jmp
add
or
ffreep
add
clc
fsub
mov
shl
icebp
ret
lret
in
shl
xlat
shl
aad
jmp
jecxz
add
jecxz
mov
stc
lods
clc
cld
out
sti
add
mov
add
call
mov
mov
test
fildl
shl
aad
lret
aam
leave
out
jecxz
fxch
out
sti
out
int
mov
loopne
fcomip
roll
in
or
shr
aad
not
call
mov
out
in
aad
fnstsw
sar
add
leave
or
jmp
imul
out
mov
jmp
sti
idiv
neg
fcmovb
mov
jmp
ret
or
or
mov
rcl
mov
mov
push
pop
add
mov
jmp
mov
xor
mov
lea
mov
mov
jmp
sub
notb
push
je
hlt
push
add
mov
fs
add
loope
out
mov
add
fadds
leave
hlt
xlat
loopne
out
in
clc
mov
clc
mov
incl
xabort
lret
fadd
loopne
out
mov
shl
mov
add
icebp
loope
mov
sti
jmp
fmul
loope
mov
in
mov
rcr
repz
aad
cld
enter
adc
in
lret
ror
mov
ljmp
fiaddl
aad
fsub
fistpll
or
loope
faddp
rcr
mov
jmp
ror
sti
mov
aam
out
fcomip
ret
rol
shl
hlt
fucomip
fmul
shr
lods
lods
test
lret
rcl
cmc
dec
mov
ror
fld
fsub
std
out
rol
mov
mul
mov
enter
fucomi
into
mov
fcmovnu
repz
pop
fcomi
pmaxsw
jmp
fdivp
out
int3
loop
mov
ret
rcr
ret
loopne
icebp
loopne
test
in
repz
cmc
add
mov
not
call
out
rol
ljmp
shl
enter
fsub
in
clc
iret
shl
sarb
or
lret
mov
in
cli
jmp
aad
iret
mov
sti
rol
jmp
aad
fisttps
mov
in
ljmp
std
in
neg
fcomip
clc
neg
add
incb
in
enter
out
shl
sti
mov
cmc
lret
in
out
cli
loop
div
out
loop
ret
rcl
leave
ret
aam
mov
mov
out
in
xlat
out
mov
rol
sar
test
call
call
loope
sti
sar
add
call
add
fdivr
add
push
loopne
lret
fsubr
fsubrl
test
ljmp
ret
std
mov
hlt
or
leave
test
mov
fadd
shl
mov
mov
faddl
call
add
lret
call
clc
mov
icebp
out
leave
mov
int
stc
in
add
pop
jecxz
pop
or
in
jmp
repz
out
lods
jmp
not
test
iret
ror
jmp
aad
sti
int3
repz
jmp
or
xlat
movb
int3
add
loopne
into
out
out
iret
int3
lods
in
fnstenv
std
int
fld
les
out
fxch
lods
iret
mov
mov
lret
mov
loop
fucom
ror
jecxz
pop
faddl
leave
fcmovnu
add
shr
call
jmp
mov
mov
movb
or
or
lret
out
mov
out
jecxz
aad
xlat
fdivp
sar
loope
out
std
repz
ffreep
ret
cli
fcmovne
clc
in
test
shl
mul
mov
iret
jmp
jmp
xlat
sti
call
clc
in
out
repnz
shl
repnz
mov
cmc
into
add
mov
icebp
or
psadbw
ljmp
stos
mov
cli
call
shr
ret
icebp
mov
fcomip
hlt
sti
flds
mov
ret
out
cli
dec
call
cli
rcr
std
sti
jecxz
sti
or
rcl
lret
jecxz
aad
mov
int
test
ret
add
sti
out
jecxz
fst
rcl
hlt
clc
fdivrp
enter
repnz
mov
or
xlat
jecxz
cmc
ljmp
cmc
repnz
mov
out
dec
mov
loop
out
hlt
stc
stc
push
add
icebp
ffree
jmp
out
jmp
in
cmc
idivb
rcl
decb
lret
ffree
stc
lret
out
shr
scas
in
ret
mov
lret
ljmp
out
fst
mov
out
ret
add
or
icebp
out
call
out
fnstsw
clc
stc
rol
inc
jecxz
fldl
ljmp
ret
int
hlt
fld
mov
out
cld
mov
rol
mov
iret
fstp
ret
xlat
out
iret
mov
mov
mov
cli
shr
aam
mov
shl
or
in
mov
scas
rcl
lret
mov
hlt
mov
cli
cli
icebp
stc
ret
loopne
add
add
loopne
or
lods
enter
sar
cmc
leave
imul
jmp
out
repz
hlt
iret
fiadds
jmp
in
cld
jmp
shlb
shrb
fdivrl
mov
hlt
inc
fdivr
add
mov
sar
cmc
cmc
aam
repz
jmp
out
cld
repnz
aad
vaddsubpd
mov
fildl
fcmovnu
mov
rorb
in
hlt
sti
lods
mov
int
ret
in
or
mul
iret
out
in
or
in
lret
not
fidivrs
add
cld
movl
cli
lret
loop
ljmp
in
leave
iret
loope
iret
jecxz
add
loopne
into
loope
icebp
mov
shl
out
rcr
stc
stc
sti
faddp
xlat
cli
out
rcl
jecxz
add
repz
mov
lret
test
call
clc
fcmovb
testb
or
push
out
in
lods
mov
sar
mov
ror
lret
out
loopne
clc
xlat
aam
xlat
lret
fsub
cli
push
lods
mov
into
cmc
out
iret
into
repz
mov
lret
fldl
mov
xlat
out
pop
psubd
fnsave
call
repz
sti
int3
aad
cmc
shl
ljmp
out
or
loopne
imul
mov
in
cmc
mov
hlt
mov
loopne
pop
push
fimull
or
loope
add
in
mov
out
fld
mov
repz
ret
repz
push
imul
leave
fnstenv
aad
repnz
into
fcmovu
lret
sar
loop
aam
lds
add
std
rcr
lret
lods
into
hlt
mov
call
jmp
in
shr
in
mov
push
mov
adc
mov
ret
mov
neg
out
div
mov
add
or
out
fucomp
or
fst
out
call
fdivrl
loope
loope
fildl
or
in
clc
adc
cmpsb
jecxz
shl
ljmp
cmc
fcmovnu
cli
loopne
push
repz
ljmp
loopne
shl
out
mov
cmc
shl
idivb
push
fldl
add
in
loopne
imul
mov
in
mov
call
fucomp
iret
aam
fadd
jecxz
cmc
call
fst
mov
scas
into
ljmp
mov
iret
add
in
fxch
iret
in
loopne
ror
ret
mov
add
test
fadd
add
add
push
add
repnz
sar
loopne
sar
cli
ror
cli
mov
cmc
fnstsw
stc
pop
por
mov
enter
lock
std
lock
in
hlt
hlt
mov
add
fsubrp
leave
jmp
ret
mov
mov
enter
mov
repz
fst
flds
add
psrad
in
stos
in
mov
mov
idivl
faddl
fdivr
mov
shr
ljmp
fucomip
mov
jmp
lods
sarb
mov
fdiv
sar
add
jecxz
out
scas
out
int
vpmuludq
mov
fidivrl
aam
pop
xlat
or
add
add
lret
icebp
fsubr
in
mov
leave
in
clc
in
hlt
mov
icebp
add
repnz
in
sti
out
lret
mov
fcmovu
mov
lock
add
std
fiaddl
out
cli
mov
add
cli
or
rcl
call
scas
mov
leave
ljmp
push
out
lret
lret
fimuls
rorb
movsl
rcl
mov
mov
mov
idiv
fsubrp
cli
add
fnstsw
in
iret
lret
loopne
repz
iret
mov
out
out
out
cmc
fcomp
fidivrs
jmp
pop
ror
call
aad
cli
xbegin
in
int3
fcomp
cld
loope
add
into
cld
add
int
mov
clc
iret
mov
add
aam
in
hlt
rcr
jmp
test
mov
jmp
sar
aam
cld
add
cmc
out
lret
pmaddwd
out
push
out
movsb
cmc
jmp
loop
loopne
ror
out
cld
mov
add
lock
mov
frstor
lds
mov
incb
loop
loopne
add
stc
out
jmp
jmp
stc
out
shr
int3
add
sar
ret
loopne
or
cld
hlt
add
enter
mov
jmp
mov
idiv
fdivrp
mov
mul
out
ffreep
fmuls
push
pop
ljmp
xlat
enter
mov
in
loopne
ret
add
lret
mov
jecxz
loopne
ret
icebp
out
fbstp
fnclex
loopne
in
in
flds
add
out
cld
int3
out
mov
out
shl
fstpt
hlt
ljmp
cli
mov
cli
or
int
fsubr
jmp
mov
repz
int3
sar
stc
div
ret
clc
mov
adc
fcomp
ret
call
rcl
repnz
in
in
aam
mov
aam
add
out
or
lret
xlat
mov
loopne
mov
mov
fldl2e
fldl
or
jmp
rol
mov
aam
scas
iret
iret
cli
ror
leave
mov
out
clc
cld
mov
into
ret
in
jecxz
in
lock
rcr
in
int
cmc
std
ret
or
out
loope
leave
mov
loope
aam
mov
repnz
fildl
testl
or
shr
into
stos
ret
int3
scas
not
shl
in
cli
lock
aad
neg
sti
iret
fsubrp
adc
mov
int
mov
int3
sti
into
sarl
rol
cmc
roll
int
add
fsubp
scas
loope
out
out
fdecstp
stc
in
mov
out
rol
in
fisttpl
jecxz
shl
in
lret
ror
mov
mov
out
sti
mov
in
mov
xlat
sti
shufps
lods
in
lods
jmp
fdivrs
icebp
add
fdivr
add
shl
rolb
add
out
lods
imul
bnd
les
std
fcmovnu
icebp
add
aad
cmc
hlt
rcr
les
repz
in
jecxz
in
sti
cli
into
ljmp
mov
stc
add
aam
fimull
leave
out
add
call
jecxz
loopne
fcmovnb
rol
fcmovnu
add
out
in
inc
jecxz
ret
lret
repz
fidivs
hlt
mov
fidivrs
flds
fld
fmull
add
out
enter
or
mov
fsincos
clc
aad
loop
cli
std
fucom
ret
cld
shl
add
fsubp
call
out
leave
fdivr
mov
f2xm1
call
add
mov
lret
call
shr
int3
repz
aad
out
sarl
inc
add
fucomi
out
leave
or
mov
lret
hlt
sti
loope
repnz
in
mov
lret
sar
cld
rol
in
lret
in
fmul
in
lods
int3
jmp
rcl
fstp
add
hlt
shlb
idiv
or
sti
fdivr
add
loopne
jmp
mov
fucomip
in
div
add
cld
push
out
or
jecxz
jmp
mov
ffree
repz
mov
out
les
ret
sar
std
add
jmp
fcomp
adc
lret
ror
out
stos
out
jmp
clc
loop
fnsave
lret
cli
add
or
rol
out
xlat
rcl
sar
shlb
inc
fstpt
in
fcmovnb
aam
adc
mov
cli
mov
mov
frstpm(287
enter
idivl
stc
or
incl
repz
mov
cmc
mov
les
loop
sar
hlt
inc
add
int
rorl
cmc
icebp
lret
mov
fcmovu
repz
lret
fcmovnbe
add
xlat
in
lret
jecxz
out
out
add
int3
div
jmp
icebp
mov
lock
mul
std
neg
jmp
ljmp
leave
vpaddsb
shl
xlat
mov
mov
dec
std
or
lret
out
or
in
ror
in
shll
call
push
rol
out
mov
in
fdivs
les
in
mov
pop
aad
stc
std
inc
sar
int3
fldz
repz
ret
imul
repz
mov
mov
pop
add
push
hlt
idiv
les
fisttpll
stos
loope
in
in
in
hlt
stc
in
in
imul
icebp
rcr
rolb
cld
cli
shr
or
pop
std
shl
leave
shr
fldt
div
in
in
mov
cld
in
sar
ljmp
jmp
icebp
enter
mov
sar
fcomi
mov
std
out
out
leave
in
lock
shll
ret
aad
clc
std
repz
add
loopne
jmp
test
int3
in
in
fincstp
fptan
xlat
hlt
sti
xlat
shl
add
repnz
in
out
std
iret
or
ret
into
in
aad
xlat
in
sti
icebp
ror
mov
cld
rcr
mov
add
push
mov
ret
in
lret
fcmovbe
stc
repnz
cld
loop
jmp
ljmp
loopne
in
iret
filds
mov
mov
loop
in
loopne
cli
add
loope
lods
rcl
sar
in
lret
into
mov
hlt
loop
out
mov
fdivrl
enter
out
call
sti
hlt
in
cli
lret
fucomi
out
stc
out
fsubr
mov
jmp
repz
stc
std
aam
cli
out
mov
stc
jmp
out
push
flds
into
add
in
mov
out
int3
pushl
loopne
mov
cld
fisttpll
add
les
jmp
clc
fstp
int
stc
stc
out
std
rorb
add
out
out
repnz
call
out
imull
add
jecxz
ret
mul
out
test
add
test
loop
shl
hlt
mov
repnz
push
add
fadd
out
out
lret
in
out
mov
div
rcl
hlt
lock
les
frstpm(287
fdiv
aam
call
in
fucomi
pop
lret
mov
lods
leave
hlt
mov
fcmovb
out
stc
mov
loopne
jmp
jmp
cli
jecxz
lret
cld
mov
mov
scas
fldt
aad
cld
lret
repnz
out
in
std
mov
fyl2xp1
out
rol
shr
int3
iret
hlt
mov
mov
push
xlat
fcomp
faddl
aam
jmp
lret
call
in
stc
mov
sti
testb
clc
rcl
xlat
loopne
add
cli
push
loope
add
test
fcmovnb
xlat
lret
rcr
out
add
std
iret
int3
sarl
enter
or
test
xlat
lret
lods
lret
out
fxch
leave
mov
mov
stc
shl
cld
ljmp
mov
xlat
in
in
fidivl
idiv
jecxz
add
push
rorb
or
out
lods
lock
lret
mov
dec
call
loopne
ljmp
in
fscale
scas
cmpsb
xlat
lret
fcmovnbe
rol
lret
aad
repnz
rcr
cmc
loopne
pop
ljmp
fsubrl
repnz
shr
leave
mov
hlt
int
mov
in
aad
lret
filds
ljmp
enter
jmp
loope
clc
aad
vpminsw
in
add
ffreep
mov
lock
stc
mov
lret
mov
mov
cmc
in
clc
add
fstp
enter
psubusb
out
lret
lods
test
jmp
mov
ffreep
jecxz
rol
std
fneni(8087
add
mov
out
loope
mov
mov
loope
fnop
loop
decb
add
mov
iret
leave
test
enter
hlt
cli
enter
int3
fsubrp
lret
ficoml
fucom
out
jmp
mov
in
icebp
jmp
std
fsubrp
lock
lock
lds
call
hlt
adc
out
mov
lods
in
aam
out
fstpt
push
loope
cld
add
out
loop
leave
iret
loop
leave
jmp
mov
in
cld
faddl
add
out
out
fsubr
loop
sarb
in
into
ljmp
icebp
mov
movb
add
out
std
fucomp
into
lods
loopne
icebp
lret
out
fdivr
add
lock
out
add
leave
cli
push
pop
repz
jmp
mov
hlt
mov
sarl
add
fucom
in
lds
into
out
mov
fcmovbe
fmulp
lret
std
shl
fst
pop
call
add
aam
leave
in
lock
icebp
icebp
fldz
fcmovnbe
fiadds
loop
mov
out
add
lock
decb
std
in
into
shlb
dec
int3
mov
not
jecxz
or
incl
jecxz
add
leave
mov
lods
not
scas
fcomip
mov
loopne
into
add
rcr
pop
fnstsw
or
fcom
fmul
xlat
test
into
mov
stc
fstp
add
lock
div
fdivr
out
call
movsl
ror
test
jmp
loope
mov
ret
call
jecxz
iret
fcom
in
in
in
out
mov
enter
loop
aam
rorb
xlat
ljmp
fucomp
hlt
lret
lret
mov
cli
loopne
in
add
testl
mov
scas
rcl
shl
leave
mov
out
out
aam
inc
mov
rorb
jmp
out
mov
jecxz
sti
lret
mov
fdivrp
mov
enter
loope
ffree
lods
shl
mov
test
ret
enter
add
cli
enter
into
loopne
ljmp
not
call
mov
rolb
aam
fimuls
or
call
ret
call
lods
in
out
hlt
aad
mov
fiadds
loope
psubb
fdivr
jecxz
jmp
in
ret
lret
fsub
loopne
cmc
stc
out
hlt
fsubp
jecxz
ljmp
ret
ret
icebp
out
fcomi
mov
out
jmp
leave
int3
ror
mov
clc
call
stos
test
in
jecxz
out
mov
loope
mov
icebp
hlt
shr
fisttpll
add
ljmp
out
in
cli
shl
mov
mov
out
loopne
cld
lret
lret
push
add
lret
mov
mov
fmul
mov
add
aam
in
adc
in
leave
mov
shl
cmc
call
fcmovbe
out
ret
mov
shl
aam
aam
push
lods
out
in
out
lock
mov
mov
fxch
in
lock
clc
in
add
or
mov
mov
cmc
mov
mov
aam
xlat
mov
stc
add
sar
in
lods
jecxz
bnd
mov
fsub
fucomi
int3
aad
icebp
ffree
repnz
xadd
or
loop
shl
test
out
ror
out
iret
sti
into
int
sarb
fimuls
aam
lock
jmp
adc
lret
aam
int
sti
lret
rcl
sar
hlt
loope
rol
jmp
in
vcvttpd2dq
mov
lock
in
push
into
out
mov
ret
jmp
ret
mov
lock
mov
aad
jmp
enter
neg
aad
cmc
sti
aam
in
repz
loop
add
add
ror
shr
lods
repz
jmp
into
icebp
in
mov
clc
lock
cli
cmc
or
fisttpll
mov
jecxz
mov
fcos
imul
rcr
out
fcomp
out
in
aam
icebp
sar
ret
push
jecxz
ljmp
mov
cmc
in
mov
sti
int3
add
add
fsubp
sti
loop
scas
loope
out
ret
sti
repnz
out
mov
repz
aam
cmc
fsubp
aam
hlt
or
repz
lds
sar
fcmovne
add
div
sar
jmp
faddl
push
aam
add
fucom
faddp
divb
hlt
fdiv
std
enter
loop
mov
add
fmuls
in
cli
call
int
int3
mov
jecxz
fadd
std
jmp
repnz
sar
add
add
fiaddl
fsts
jecxz
out
xlat
in
mov
mov
leave
sti
mov
aam
fiadds
jmp
sar
enter
out
test
loope
int
in
cld
mov
xlat
out
fsub
les
fiadds
cld
iret
enter
lods
in
mov
aam
mov
cli
not
shl
clc
mov
fadd
add
in
mov
jmp
hlt
idivl
lret
mov
lock
les
out
jmp
mov
mov
jmp
enter
ret
in
sti
xlat
loopne
in
add
push
cli
jmp
int
mov
mov
rol
mov
int3
mov
mul
sti
push
int3
les
loopne
mov
mov
mov
shl
in
rcl
add
jecxz
jmp
int3
in
ror
iret
shrb
leave
fcomp
not
mov
ffreep
or
lret
or
scas
scas
out
ret
leave
cmc
ljmp
aad
idiv
mov
in
in
jmp
leave
loopne
mov
in
mov
in
fcmove
jmp
in
out
hlt
cmc
loop
leave
lret
lock
out
aam
icebp
mov
in
fdivr
in
loope
fisttps
loop
or
fsubp
out
into
rol
out
icebp
int3
into
lret
mov
add
cld
cmc
ret
add
clc
leave
repz
enter
out
out
loop
mov
mov
sar
out
fprem1
out
fadd
or
fstl
lods
cmpsb
in
out
mov
enter
int
in
inc
cld
loope
rcr
add
fadd
std
add
mov
repz
jmp
rcl
rcr
std
add
jecxz
icebp
decb
int
or
mov
int
ret
jecxz
mov
mov
sti
out
mov
cld
divl
ljmp
jmp
jecxz
in
mov
repz
leave
call
mov
or
add
in
add
int3
or
shl
mov
int3
into
aad
icebp
shll
pop
xacquire
hlt
in
shl
in
ljmp
aad
sti
mov
stc
fcmovnb
lret
into
int
call
imul
mov
aam
shr
std
clc
out
std
rcl
decl
in
or
pop
fldcw
mov
mov
mov
mov
leave
ljmp
iret
jmp
shlb
rcl
jmp
add
lret
fcmovu
fstp
out
stos
loope
ret
call
out
lret
call
shl
std
lret
add
int
loope
loope
mov
lds
rcl
mov
aad
fcmove
push
les
repz
mov
call
rcl
fadds
ret
add
add
or
enter
leave
mov
icebp
shl
mov
lret
iret
aad
out
repz
push
in
mov
mul
fucomip
fsubrp
jmp
shr
mov
in
sar
mov
push
int3
rcr
shr
idiv
push
decb
adc
in
xlat
jmp
lods
icebp
xlat
rcl
aad
mov
mov
add
rol
fisttpl
add
in
fdiv
mov
lret
divb
cli
call
mov
div
lock
flds
prefetch
or
ffree
icebp
mov
out
mov
clc
in
mov
enter
test
aad
cld
pop
push
repz
jmp
fcomi
jmp
idiv
mov
sti
std
sar
out
push
enter
dec
in
mov
repnz
mov
ljmp
lock
fadds
out
cli
loop
stc
in
in
in
xlat
mov
mov
ret
clc
fidivs
shl
rcl
cmc
lret
cld
add
clc
in
in
imul
lods
mov
pushl
sti
mov
aam
lsl
jmp
ret
repnz
call
jecxz
cld
loopne
in
std
lock
out
fsub
in
jmp
iret
mov
mov
rcl
int3
fstpt
in
loop
mov
in
leave
stc
out
std
scas
xlat
ret
repnz
mov
fnstenv
loope
int
mov
mul
movb
stc
lds
leave
shr
cmc
mov
cli
repz
icebp
divl
add
vpsubb
repz
scas
rcl
lret
lock
mov
call
lock
mov
mov
incl
lret
fldz
test
call
in
ljmp
ret
hlt
fstpt
or
out
hlt
into
in
rcl
in
out
aad
clc
in
xlat
fsubr
aad
mov
icebp
add
stc
rcr
stc
or
jmp
loopne
ljmp
neg
jmp
jecxz
rcl
pop
push
iret
call
movsl
jmp
rol
lret
fcmovne
rcl
hlt
fidivrs
sti
fcomi
loopne
fiadds
out
cli
clc
test
out
aam
repnz
enter
shl
mov
hlt
loope
in
jmp
rcr
or
lret
adc
out
test
mov
in
xlat
leave
clc
int3
add
clc
icebp
mov
add
repnz
lods
in
in
stc
test
enter
xlat
out
xlat
jmp
out
fucomp
in
loop
lods
in
int
ret
xlat
lds
out
hlt
hlt
clc
loope
xlat
or
cli
mov
loop
stos
lret
imul
shl
sarl
in
int
icebp
rcl
fucom
xlat
add
shl
out
out
lret
shll
rcr
loop
fsub
add
aad
in
call
lods
lods
shrl
std
xlat
mov
in
icebp
out
sar
aad
test
ljmp
repnz
iret
dec
hlt
in
repz
shl
stc
push
add
fucomi
add
mov
out
neg
mov
shr
into
add
cld
jmp
out
add
push
adc
rcl
test
out
lock
fxch
xlat
mov
add
mov
add
rorb
add
les
adc
mov
mov
jmp
cld
rolb
in
lds
loopne
fsub
fcmovb
ljmp
mov
mov
neg
fildl
cld
fidivrl
jmp
fmulp
leave
lret
repz
in
mov
in
mov
into
faddl
std
cld
sar
cmc
fadds
ljmp
mov
icebp
mov
repz
add
icebp
rcl
ftst
fadd
or
or
stc
add
rol
fdivl
fucomp
call
shl
out
fcom
shr
in
add
icebp
mov
in
mov
fnsave
pop
mov
std
in
or
in
ret
int
ret
cmc
ret
repnz
fxam
fmul
ljmp
out
in
int3
jecxz
in
mov
div
neg
mov
idivl
lock
ret
in
iret
add
cli
test
into
div
fucomi
mov
fsqrt
mov
mov
fadd
loopne
loopne
fiaddl
loop
call
iret
shr
int3
mov
mov
jmp
shl
in
mov
out
bswap
or
scas
aam
mov
int3
hlt
cld
pop
add
mov
por
or
push
mov
xlat
rep
repz
out
lret
out
enter
fcmovne
fiaddl
rcl
push
add
loopne
push
or
adc
lods
loope
enter
iret
icebp
aam
cld
in
call
fldcw
test
iret
aam
int3
in
fistpll
cmc
add
aad
pop
loop
fsqrt
repnz
mov
fcmovnb
ror
aam
cli
fsin
sarl
aad
aam
jmp
test
in
scas
scas
out
mov
aad
aam
ror
out
std
ret
add
leave
out
add
les
jmp
in
stc
jmp
mov
in
cld
sti
mov
in
ljmp
repnz
jecxz
shll
cmc
add
loope
fcmovb
roll
add
aad
fisttpll
lods
repz
out
jmp
mov
int3
jmp
fidivs
repz
fisttpll
or
in
in
repz
into
icebp
out
cmc
cmc
mov
shr
add
int3
out
clc
or
fsubr
ret
jmp
rcl
lret
repz
mov
lret
stc
repnz
jecxz
loop
fst
add
clc
lret
in
jecxz
icebp
shr
lret
push
out
aad
enter
cmc
testl
in
icebp
mov
xlat
out
jmp
iret
mov
in
roll
mov
or
fucom
jmp
mov
cli
into
mov
stc
aam
fsincos
clc
stc
cld
out
xlat
leave
psubusb
into
cli
mov
neg
enter
cmc
out
rcl
fcmovnu
fstp
lock
mov
out
ljmp
movsb
shl
xlat
call
std
jecxz
std
add
ret
hlt
fdiv
hlt
fucomi
fucomip
out
jmp
div
lock
lods
aad
fsubr
fpatan
cli
jecxz
clc
out
fdivrp
aam
loop
clc
fsubp
jmp
out
out
iret
repz
jmp
mov
ljmp
aad
icebp
loop
in
std
in
mov
stos
mov
sti
jmp
out
ret
repz
mov
add
out
out
push
repz
lods
test
rcl
sar
out
enter
out
clc
add
iret
into
or
or
shl
mov
enter
int
cli
lret
jmp
mov
mov
cli
jmp
add
out
hlt
call
leave
mov
lock
sar
pop
lds
leave
lret
in
mov
repnz
test
int3
mov
lret
divb
cli
hlt
aad
loopne
rol
out
scas
mov
in
loopne
cmc
fdivrl
out
cli
mov
faddl
fldln2
adc
shlb
scas
mov
repnz
mov
add
loopne
mov
icebp
mov
rcr
ljmp
lock
jmp
sti
ljmp
sti
lret
stc
fcmovbe
stc
stc
lret
in
fdivr
iret
imul
mov
jecxz
pop
add
out
in
stos
mov
ljmp
ror
in
cld
mov
bswap
loopne
fmul
jmp
rol
ljmp
fcmovu
out
ret
rorl
fsub
out
jmp
add
rcl
jmp
mov
int
mov
jmp
jmp
mov
rol
fsub
add
lret
loopne
in
out
call
mov
mov
mov
fcom
in
in
mov
fiadds
add
fidivs
aad
ror
leave
jecxz
fucomp
int
in
ljmp
ret
in
in
mov
repnz
fidivl
shr
call
std
ret
ljmp
out
mov
ror
out
cmc
xlat
idiv
fld
shl
add
leave
lock
shl
cmc
mov
rolb
mov
into
fmul
into
rcr
add
or
rol
mov
leave
mov
mov
hlt
in
iret
fsub
loop
fdiv
shl
leave
fcmovne
hlt
or
or
in
leave
shrl
mov
idivl
add
rcl
add
add
ljmp
int
loopne
call
aad
call
fnstsw
hlt
or
fyl2xp1
les
ljmp
cmc
rol
lret
mov
mov
mov
or
sub
xor
cmp
je
mov
add
mov
mov
sub
mov
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
add
mov
imul
mov
xor
add
mov
sub
cmp
ja
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
xor
add
mov
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
mov
movl
movl
movl
movl
movl
mov
xor
add
jmp
ffreep
sub
xor
dec
shlb
jns
add
in
lret
fucomip
out
test
repnz
repz
fprem
mov
add
fsub
repz
cld
or
leave
add
leave
repz
ljmp
mov
icebp
add
in
repnz
mov
lock
loopne
rcr
xlat
clc
lret
cld
mov
add
out
cld
loopne
loopne
shr
test
aad
cli
into
icebp
lock
cli
cmc
faddp
rorb
cli
or
add
rcl
leave
mov
in
into
lret
shl
add
out
clc
out
mov
aad
out
leave
jecxz
rcr
hlt
icebp
mov
scas
mov
mov
mov
cld
not
mul
cmc
add
add
leave
int
loopne
scas
leave
into
repnz
enter
rcl
cmc
out
in
ret
aad
fiaddl
test
jmp
ror
aad
loopne
out
out
lret
mov
jmp
cld
or
jmp
in
jmp
call
ret
loopne
repnz
shl
int3
repz
cld
not
out
std
fmul
or
out
jmp
leave
rol
loope
shl
fucomip
into
fidivrs
mov
or
ret
loop
into
in
in
aam
loopne
in
icebp
mov
leave
mul
repz
add
mov
in
iret
int3
or
les
cli
mov
hlt
aam
mov
call
int
flds
std
add
fneni(8087
lret
in
scas
loop
out
fcmovnbe
mov
fcmove
fcom
rol
cli
int
ret
out
out
or
test
loope
in
out
out
out
mov
jecxz
test
push
add
int
ror
shrb
int3
aad
in
std
aam
aad
clc
int
rol
xlat
hlt
aam
add
out
or
test
clc
aad
mov
pop
neg
rol
add
fsub
jmp
out
lock
ljmp
rcl
ljmp
div
fdiv
cld
jecxz
add
lret
lret
clc
dec
mul
aad
rcr
idivb
jmp
fidivrl
sti
in
shlb
ret
fndisi(8087
les
jmp
ror
jmp
out
into
jmp
rol
icebp
in
mov
call
fsub
add
out
std
in
add
pop
lods
mov
jecxz
mov
dec
hlt
mov
sti
incl
std
mul
add
or
or
fucom
cmpsl
out
ljmp
iret
fcmovnb
in
sar
lret
aam
hlt
aad
loope
fadd
cmc
or
int
test
rol
mov
div
aad
repz
icebp
cmc
add
loopne
add
cli
add
cld
or
fadd
shll
mov
leave
sarb
neg
add
loope
out
fisttpll
or
mov
mov
sti
ljmp
mov
mov
fucomip
shr
mov
mov
ret
mov
int3
rol
fcomp
call
pop
add
rcl
jmp
out
xlat
or
stc
loop
fmul
mov
lods
in
mov
shl
lret
shr
fucomip
shl
out
add
jmp
out
out
mov
rcr
mov
mov
lock
add
out
or
lods
lret
aad
int3
rcr
rcr
mov
into
shl
aad
shl
or
cli
pxor
cli
in
or
enter
divl
jmp
loopne
rol
lock
out
or
loope
repz
into
scas
xlat
test
in
mul
jmp
ret
hlt
mov
mov
stc
fdiv
or
lret
jmp
aad
jmp
ljmp
mov
sarl
or
pop
in
add
mov
xlat
mov
xlat
aam
std
in
clc
ror
loopne
mov
loope
hlt
mov
stc
loopne
ror
in
test
iret
mov
jmp
jmp
out
out
stc
rol
in
out
cld
int3
iret
shlb
leave
repnz
aad
lret
call
in
out
or
cmc
loopne
cld
decl
mov
xlat
repz
icebp
lds
in
repz
lock
add
fcmovb
clc
or
lret
in
rcl
in
ror
out
mov
loop
repnz
out
pop
jecxz
jmp
cli
into
jmp
repz
in
mov
mov
fistpll
sar
or
out
into
loope
cmpsl
lods
enter
loopne
lock
xlat
mov
loope
out
push
fadd
clc
ljmp
mov
lret
fcmovne
aad
mov
mov
mov
fiadds
testb
out
mov
repz
jmp
sarl
icebp
add
or
rcl
shl
in
sti
shlb
out
ret
mov
neg
shl
xlat
xlat
fneni(8087
loop
iret
loop
fucomip
shl
loopne
call
fdivr
fcomi
fdiv
fsubp
or
imul
rolb
out
in
fucom
out
lods
repnz
leave
mov
clc
fdivr
mov
or
loop
or
out
add
mov
loopne
in
lock
add
fnstcw
aad
sar
jmp
test
cmc
cmc
lods
fcmovu
mov
mov
loopne
mov
pop
fdivrp
int
bnd
shr
hlt
mov
rol
lret
std
mov
in
loopne
roll
call
jmp
jmp
xlat
fucomi
jmp
lock
fcom
movb
hlt
flds
mov
mov
hlt
enter
lret
loope
mov
loope
lock
leave
pop
fnsetpm(287
push
call
shr
mov
out
clc
int
leave
call
push
loope
testl
add
rcr
mov
into
leave
fsubr
cmc
repnz
dec
imul
iret
repnz
jmp
add
add
fdivr
repnz
fst
mov
cli
mov
scas
iret
fcomi
cli
xlat
int3
cli
faddl
in
fildl
fcmove
cli
hlt
add
dec
ljmp
cli
mov
int3
add
testl
std
push
loope
add
enter
int
out
shl
rcl
repnz
imul
div
mov
test
push
add
int
aad
in
shl
out
lret
stc
icebp
bnd
in
or
add
aam
hlt
out
lret
out
ret
out
icebp
fcmovnb
xlat
fdivr
mov
rol
rcr
lock
hlt
jecxz
paddw
mul
cli
stc
lret
into
repnz
mul
out
into
int3
out
in
inc
aad
fcmovu
call
ljmp
mov
xlat
cmc
fcomi
add
ffreep
jmp
add
lret
fmul
loopne
icebp
into
mov
sti
fcomip
fldln2
mov
into
add
lds
int
or
shr
imul
icebp
loopne
lret
clc
in
mov
mov
in
lret
fucomp
fadd
shrl
cli
in
bnd
add
rcl
cld
sti
int3
lret
aam
testb
clc
fmulp
rcr
xlat
loop
int
int
fmulp
iret
xlat
fldl
shl
lret
out
out
call
into
into
loope
scas
xlat
xlat
test
aad
rol
jecxz
int
std
sti
rcr
clc
cld
leave
stc
enter
fsub
rcl
leave
iret
hlt
mov
out
mov
divb
fstpt
stc
call
add
in
loopne
jecxz
repnz
rcl
enter
mov
cld
aam
or
or
into
leave
jmp
loopne
aam
in
leave
mov
iret
sti
cld
fsubr
mul
or
decb
in
jecxz
fsub
mov
ror
div
cmc
out
ror
lock
push
add
frndint
ljmp
rol
lret
out
out
mov
aad
sarb
sar
or
in
xlat
shlb
call
sar
fdivr
xlat
in
fimull
jecxz
fsubrp
add
flds
fcmovu
enter
shl
loop
mov
out
mov
icebp
loope
out
add
stc
std
out
out
lods
ret
fisubs
mov
clc
fdivrl
out
repnz
lret
std
ret
rcl
lock
in
ror
lret
sti
ret
aam
add
out
fildl
cmpsl
fsubrp
mov
out
mov
mov
fcmovne
add
ret
push
jmp
shrb
aad
aam
shl
fcmovne
xlat
in
loop
fabs
loope
hlt
leave
loopne
call
iret
ret
out
repz
shl
repnz
aad
lock
leave
in
int
jmp
mov
into
iret
icebp
push
mov
in
movl
aam
jmp
fpatan
std
add
lods
int3
mov
ljmp
lret
ret
fcmovbe
push
mov
push
in
stos
scas
repnz
aam
mov
call
in
shl
loope
in
pop
add
in
call
lods
cmc
shrb
cld
lock
mov
sti
push
lret
ret
pand
fucomi
test
int
iret
jmp
add
rcl
aam
out
jecxz
lret
les
lret
mov
lods
repnz
jmp
add
hlt
inc
shl
add
fcompp
pop
jecxz
shrb
out
int3
out
ljmp
push
push
aad
rcr
add
fucomp
or
int
mov
int3
ret
cmc
loopne
mov
clc
repnz
fst
pop
faddl
loopne
in
add
repnz
jecxz
shl
lret
ljmp
shr
add
repz
fadd
add
cli
int
out
hlt
icebp
ljmp
mov
leave
mov
shl
in
clc
pop
add
repz
ret
ljmp
shr
repnz
roll
aad
or
in
or
jmp
rol
mov
jecxz
hlt
into
clc
fstpt
ret
jmp
in
movl
repz
jmp
iret
enter
mov
fidivl
fldpi
add
in
add
push
repz
call
mov
mov
mov
mov
lret
neg
in
or
out
loope
repnz
stos
in
mov
icebp
roll
call
mov
leave
dec
or
call
repz
cmc
in
mov
jmp
in
loop
sti
mov
loope
aam
in
decb
cmpsl
mov
iret
leave
out
mov
aam
in
fadd
add
adc
into
in
jmp
int
out
stc
std
cld
aad
add
add
in
loop
not
stc
jmp
or
jecxz
hlt
iret
out
ljmp
fcom
add
jmp
fcomip
cli
mov
lods
ret
repnz
sti
fld
repz
add
pop
leave
in
iret
int3
shlb
icebp
jmp
out
mov
lds
std
add
idiv
aad
add
ret
lret
lret
icebp
out
out
cli
aad
or
lret
add
ljmp
out
loope
icebp
repz
shr
out
out
call
shl
mov
or
lret
ffreep
cmpsb
loope
imul
rcl
ljmp
mov
cld
rcl
lret
std
add
bswap
enter
ror
leave
in
in
mov
jmp
out
fdiv
hlt
fpatan
add
call
loope
out
in
icebp
cmc
lods
mov
fpatan
fcomp
test
not
mov
ljmp
int
les
shr
rcl
sti
ljmp
loopne
repz
xlat
frndint
loopne
or
fmull
add
mov
mov
stc
mov
sarl
fdivr
aad
sti
pop
add
filds
mov
not
int3
loopne
mov
mov
xlat
sarl
loopne
dec
add
ret
fnstsw
fsubrp
jmp
cli
add
in
roll
aad
push
in
mov
fnsave
call
mov
fdivr
xlat
add
loop
out
add
out
in
lods
mov
mov
dec
loop
sarl
add
or
aam
mov
mov
cmc
mov
lret
ror
lock
push
add
fdiv
leave
sti
or
faddl
in
fsubrp
into
mov
mov
rcl
in
jecxz
mov
mov
pop
in
in
enter
scas
out
jmp
into
mov
int
out
fdivrp
iret
call
sarl
add
ljmp
icebp
ret
shl
sti
into
fdiv
fdivr
rcr
std
fneni(8087
repnz
loop
add
dec
iret
scas
imull
lret
int3
mov
neg
repnz
test
rolb
loope
ljmp
lret
lock
lret
in
lret
mov
stc
loopne
add
fcmovnb
inc
mul
stc
int3
in
ffreep
loop
lock
out
lock
out
shlb
add
mov
ret
call
mov
mov
mov
or
push
out
add
shl
cmc
mov
mov
mov
sti
cli
xlat
ljmp
loope
ret
out
mov
jmp
test
fsub
stc
mov
lock
cld
out
loopne
mov
out
les
mov
icebp
clc
add
loope
or
ljmp
int3
rcr
sti
aad
ret
cli
fsub
hlt
jmp
out
in
add
add
repz
shl
in
sar
sti
repz
mov
fmulp
test
add
repnz
leave
scas
lret
call
aam
loope
mov
fdivrl
add
lret
shl
jecxz
mov
mov
fucom
ret
mov
fsub
jecxz
loopne
or
shrb
divb
test
int3
incb
fucomp
ljmp
jecxz
aam
lods
int3
mov
hlt
out
fld1
int3
mov
mov
add
fadds
sti
clc
or
int3
in
enter
mov
fcmove
fcmovnu
cmc
loop
loopne
fcmovnbe
rcl
in
add
psubsb
in
ret
out
in
rcr
mov
add
into
roll
ljmp
fsub
adc
jmp
loopne
mov
xlat
imul
repz
add
mov
ror
ret
loopne
dec
out
leave
mov
shl
mov
lock
mov
in
out
iret
int3
idivb
stc
filds
enter
mov
loop
int
xlat
lods
out
enter
jmp
loope
icebp
ret
jmp
repnz
decb
push
in
repz
fidivs
iret
aam
lret
stc
mov
fdivp
rolb
hlt
push
or
xlat
stc
or
in
icebp
mov
rcl
iret
int
ljmp
clc
sti
fadd
pop
rolb
in
enter
shr
mov
in
in
enter
mov
fnstsw
lock
ljmp
or
shl
out
xlat
mov
rcl
aad
mov
jecxz
mov
in
add
or
out
add
out
lret
repz
in
mov
fstpt
mov
fdivr
pop
loop
mov
jmp
in
in
shl
mov
int
clc
leave
ljmp
shl
loopne
in
jecxz
in
test
call
out
cmc
in
out
call
cld
cld
push
add
ljmp
scas
ret
mov
icebp
mov
into
in
fcmove
cld
rcl
out
clc
xlat
loop
push
out
out
in
in
jmp
lock
into
jmp
mov
int
sti
out
ror
jmp
fdivrp
or
enter
hlt
cli
clc
jmp
out
mov
test
fcos
pop
jmp
lds
shr
repnz
in
lds
hlt
mov
jecxz
add
cld
loop
ljmp
icebp
mov
jmp
mov
mov
repnz
loope
rcr
div
add
push
lret
add
loope
shl
cmc
loope
in
lds
sti
rcr
shr
hlt
fcmovnu
cmpxchg8b
lret
jmp
in
out
mov
leave
rol
out
not
repnz
cld
clc
clc
ljmp
shl
fstpt
out
jmp
add
mov
cmc
pop
out
in
int
fyl2x
mov
loopne
out
jmp
mov
fdivp
int
fisttpll
add
loop
decl
pop
jecxz
loop
loopne
int
loopne
mov
ljmp
mul
loope
lret
or
push
lret
stos
ret
out
repz
xlat
mov
mov
fld
cli
roll
vpsubsb
fidivs
cmc
into
into
out
rcl
cld
sar
loopne
stc
fdiv
fucomi
or
lret
fcomip
ret
sti
sti
lret
ror
aad
repnz
fdivrs
in
aam
jmp
scas
vpinsrw
int3
repnz
clc
icebp
jmp
out
rolb
add
iret
lret
loop
mov
into
lret
in
fld
cld
mov
jecxz
add
fcmovb
fisttpll
jmp
aam
ret
mov
repnz
xlat
int3
mov
sar
shl
leave
fcmovu
loope
into
repz
shl
ret
mov
icebp
leave
out
in
add
cli
add
aam
add
icebp
loopne
add
or
mov
mov
stc
out
icebp
xlat
add
mov
mov
fisttpll
fcmovnb
add
rol
loope
hlt
lret
call
rcl
in
out
loope
sti
paddw
loopne
mov
lods
repnz
ljmp
ret
testl
jmp
int
lock
aam
mov
mov
fcmove
ljmp
cli
ffreep
mov
stc
clc
in
enter
lret
mov
jmp
mov
fcomp
stc
mov
jmp
out
cld
faddp
test
mov
in
icebp
shlb
int
aam
add
fadd
or
clc
add
out
scas
ret
mov
shl
test
sti
cmc
mov
in
or
sar
or
jmp
iret
enter
out
mov
lock
sti
loop
push
or
add
or
out
jmp
stos
fsubrs
ror
out
int
in
jecxz
cmc
out
jmp
hlt
out
clc
rorl
fdivrp
or
test
test
stc
out
in
mov
repz
add
add
loopne
fcmovnbe
add
enter
lods
ret
ret
mov
loop
in
in
stc
mov
fcmovne
add
fchs
add
aam
into
cld
loope
out
ror
ret
pushl
shll
lock
add
aam
fldl2t
fdivs
aam
icebp
fdiv
mov
fdivr
pop
lock
or
icebp
cli
fcomp
into
out
adc
in
mov
enter
mov
cmc
in
fcmovb
add
repnz
hlt
inc
add
loop
repz
clc
mov
iret
mov
jmp
rcl
add
fcmovb
push
lds
mov
out
sar
aad
shl
loop
fcomi
not
test
fsub
or
fstp
iret
jmp
lods
ljmp
mov
mov
clc
sar
out
fsub
cld
decl
in
test
mov
ljmp
in
loope
mov
pop
into
leave
psubusb
test
ljmp
fdiv
repnz
fcomi
aad
ffreep
jmp
or
or
jmp
sar
mov
fcomp
lock
neg
cli
add
add
add
sti
add
stc
fadd
iret
aad
repz
in
mov
incl
shl
repnz
ljmp
or
loop
mov
in
mov
fucomi
shr
in
add
add
jmp
lret
mov
fmulp
mov
jmp
jmp
icebp
hlt
mov
ret
add
loope
idiv
sar
or
iret
fnstcw
in
lds
jmp
out
shl
or
fcomp
in
out
ror
repz
out
out
aad
cmc
xlat
repz
fldl
sti
out
loopne
or
enter
fadd
jecxz
loopne
into
loope
inc
mov
cld
loopne
jmp
iret
test
in
ljmp
mov
test
rcl
aad
enter
iret
loopne
shl
int3
cli
mov
icebp
out
out
xlat
loope
test
cli
loopne
std
add
in
repnz
fst
enter
add
idiv
fcmovu
or
cmc
ljmp
scas
aam
ljmp
leave
mov
cli
out
decb
out
rorl
or
enter
stc
jmp
lock
call
int3
hlt
rolb
stc
decb
fisttpll
add
iret
leave
out
in
leave
loop
icebp
call
fcomip
fstp
fdivrs
out
or
rorl
scas
out
test
ljmp
out
enter
imul
lock
rcr
ror
out
add
or
shrl
fcmovnu
ftst
hlt
out
out
aam
sti
fdivr
sarl
out
add
ret
shrl
in
test
repnz
neg
fnsetpm(287
pop
or
stc
cmc
fucomp
cmpsl
loopne
scas
scas
in
ret
out
in
mov
add
ret
shl
mov
in
filds
add
test
fcmovb
std
fcmove
sar
fidivrl
fsub
les
add
or
shrb
out
neg
icebp
mov
aam
mov
ret
add
add
iret
add
int3
in
lock
out
mov
leave
lret
aam
out
into
out
or
lock
ljmp
out
ljmp
jmp
mov
mov
les
mov
xlat
sti
mov
mov
icebp
clc
loop
in
hlt
out
fldl2e
cmc
push
jmp
std
loop
sarb
test
repnz
dec
icebp
in
out
icebp
cmc
repz
fsub
out
jmp
push
fisubrl
fcmovbe
mov
aam
in
jmp
div
fadds
lret
out
aam
clc
enter
ljmp
mov
sti
iret
fcmovne
leave
jmp
idiv
add
aam
mov
in
fcomp
jmp
out
loop
leave
lret
divl
mov
mov
mov
lock
enter
into
mov
fistpll
fcmovnbe
ffree
loopne
jmp
call
mov
stc
mov
mov
lds
mov
or
int3
mov
iret
lods
out
cli
lret
xlat
clc
mov
out
jmp
shr
add
in
jecxz
cld
fnstsw
mov
in
icebp
aam
leave
shl
enter
add
rolb
ret
loop
loope
out
mov
mov
mov
xlat
cli
ret
in
cli
cmc
out
testb
shrb
scas
lret
std
mov
rorb
loop
out
out
aam
in
repnz
rol
shl
aam
repnz
std
fmul
stc
in
std
aam
add
loopne
jecxz
in
leave
cld
stc
mov
into
out
shlb
fdivrl
cmc
rcr
fcmovbe
add
decb
hlt
in
into
out
shr
ror
std
add
cli
icebp
not
mov
mul
jmp
mov
mov
call
repnz
aad
in
xlat
ljmp
rcl
out
hlt
into
out
lock
lret
mov
add
jecxz
sar
fmul
lret
add
mov
iret
lret
cli
loopne
leave
sarb
ret
aam
repnz
or
or
int
aad
cmc
mov
dec
std
out
mov
fcmovnu
rcr
xlat
ljmp
rcl
jmp
jmp
mov
mov
add
add
lock
add
jecxz
or
push
lods
int3
call
mov
mov
cld
xlat
ret
loopne
fcmovnb
into
add
lock
lock
pushl
ffreep
icebp
fprem1
shr
out
cmc
loop
loop
fcom
mov
in
in
in
std
sti
cli
shr
rcr
aad
idiv
loope
fdivrp
or
iret
out
mov
lret
mov
aam
icebp
lock
inc
leave
or
loop
scas
cmpsb
mov
leave
xlat
out
test
fstp
jmp
mov
cmc
fldl
fimuls
ljmp
lret
xlat
repz
repnz
cld
fdivrl
or
lret
dec
repz
into
xlat
out
mov
repz
leave
hlt
lret
fcmovne
std
repz
aam
shl
fdiv
loope
or
add
rcl
leave
leave
fstp
out
mov
add
shl
ljmp
add
stc
out
mov
loop
aam
lods
cli
stc
out
shl
mov
into
sti
test
add
syscall
leave
shrl
repnz
mov
sar
ret
ret
jecxz
out
iret
leave
out
jecxz
fst
mov
jmp
mov
stc
rol
int
lock
ljmp
or
test
hlt
iret
loope
lret
std
sarb
lret
sti
in
in
out
clc
out
test
divl
fsubrp
mov
repnz
or
out
in
jecxz
out
test
repz
shl
mov
not
mov
add
pop
or
mov
mov
loope
mov
cli
ffreep
ret
idivb
jmp
out
fidivs
test
rcr
repnz
mov
inc
ljmp
rorx
mov
call
cli
fdivrp
shr
repz
fadd
lret
add
push
ljmp
sti
rcl
lret
cli
sti
call
fsubr
in
cld
neg
lret
rorl
enter
test
mov
mov
test
aad
pop
rolb
fdivp
mov
or
adc
ljmp
int3
enter
mov
hlt
out
add
or
call
mov
loop
jmp
aam
ljmp
ror
shl
rcr
rorb
ljmp
ror
rol
cmc
aam
scas
int
hlt
fdivp
repnz
into
ret
add
icebp
in
out
adc
lret
iret
shr
loopne
into
hlt
mov
mov
int3
int3
lock
pop
add
add
cld
or
loope
scas
loopne
hlt
mov
mov
mov
std
pop
add
iret
fstp
sti
push
les
lods
out
repz
add
fdivp
jecxz
fsqrt
loop
xlat
add
les
jmp
mov
mov
dec
xlat
fdivrl
or
fsubr
out
repz
stc
mov
aam
loope
pop
mov
ret
decb
ret
lods
mov
enter
cld
aad
add
clc
cmc
lock
fxch
fcmovnu
loope
enter
mov
mov
rcl
test
mov
mov
loope
lock
fmuls
or
fsubr
scas
iret
shl
aam
ret
jmp
jmp
fistpll
ret
clc
decb
leave
clc
in
bswap
fsubr
fsubr
in
rol
rol
hlt
fstpt
fcmovb
clc
cld
fcmovnu
fucomi
in
add
into
loope
mov
into
imul
shl
mov
fildl
out
scas
mov
jmp
lret
lret
in
sti
call
fscale
fcmovne
loopne
mov
add
fcoml
fcmove
out
shlb
mov
sti
mov
inc
rolb
out
idiv
in
push
in
mov
fucomp
out
fcmovnbe
rcl
std
incb
repz
out
in
clc
in
in
hlt
ret
faddl
add
int
clc
add
icebp
out
aad
lods
out
mov
out
ror
lock
cld
cld
loop
add
ret
iret
or
add
scas
ror
rol
jmp
mov
enter
mov
in
or
out
or
lret
stos
fsubr
ljmp
shlb
cld
mov
mov
fxch
or
stc
into
mov
int
icebp
shr
std
ljmp
mov
enter
fsubr
mov
rep
in
mov
repnz
fdivrs
shr
out
add
icebp
or
ljmp
loop
out
repz
mov
testl
in
or
fdiv
filds
imul
repnz
aad
cli
std
lret
fpatan
repz
icebp
mov
out
fimull
fsubp
loope
fsub
mul
cmc
mov
jmp
cli
lret
fistpll
ljmp
out
lods
in
shl
in
fcmovnb
lds
jecxz
flds
leave
lret
cld
in
test
lock
lods
cli
mov
mov
cli
ret
ffreep
or
jecxz
out
cmc
repz
mov
in
int3
repnz
aad
mov
sti
enter
shr
mul
cli
out
out
sti
icebp
fucomip
enter
shr
repnz
mov
roll
out
jmp
jmp
pextrw
fld
loop
aam
cmc
out
out
mov
cli
shr
add
rorb
lret
out
mov
enter
aam
cli
hlt
mov
icebp
mov
lret
fld1
or
pavgw
in
int
in
lock
aad
repnz
std
sar
rcl
ret
ret
sti
jecxz
clc
push
pop
out
mov
int
mov
mov
clc
lret
loop
mov
fcom
fiaddl
cld
fstp
jecxz
shr
shl
mov
iret
mov
sarb
cli
ret
imulb
imul
int3
mov
lret
mov
ljmp
push
call
lods
repz
in
shll
lods
xlat
mov
in
add
std
call
fcomp
fdivp
jecxz
in
not
in
out
lds
add
std
fdivr
in
jecxz
jecxz
call
in
rol
hlt
mov
mov
not
add
sti
in
aad
enter
ror
loope
rcl
test
neg
iret
lret
cmc
loop
ljmp
ljmp
int3
sti
cli
stc
lret
mov
into
cld
mov
movb
fsubr
mov
into
mov
div
mov
cmc
in
ret
add
mov
sar
lock
in
leave
std
lret
lret
mov
enter
lock
aam
fiaddl
in
fneni(8087
lock
ljmp
imul
ret
fcomip
ret
aad
cli
out
fmuls
loope
loop
into
mov
into
fxch
cli
in
ljmp
idivl
enter
repz
out
in
divl
not
sarl
add
icebp
idiv
add
in
jmp
rol
mul
mov
mov
out
xlat
shl
mov
or
lret
stc
mov
loop
iret
fstp
mov
int3
stc
enter
stc
mov
add
mov
in
aam
add
out
scas
scas
ljmp
call
lret
fdivr
enter
cld
cli
or
or
in
pop
out
add
rcl
scas
ffree
in
mov
mov
fsubr
std
mov
mov
hlt
add
fsubrp
iret
ljmp
enter
aam
icebp
add
repnz
push
ret
ret
imul
push
or
mov
out
loop
jmp
call
in
incl
leave
sar
add
incl
repnz
out
aad
fcmovne
in
ret
jecxz
scas
mov
jmp
les
int
cmc
std
sti
cmc
std
loop
cld
stc
call
ljmp
fsubp
sarl
in
aad
add
out
or
repnz
loopne
xlat
divl
clc
out
push
std
ret
cmc
add
out
les
decl
decl
decl
decl
decl
cmp
jae
mov
movl
mov
movl
lea
mov
mov
xor
add
mov
imul
mov
mov
mov
mov
mov
xor
add
mov
imul
mov
xor
add
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
xor
add
mov
imul
mov
mov
mov
xor
add
mov
imul
mov
mov
mov
mov
mov
xor
add
mov
imul
mov
xor
add
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
xor
add
mov
imul
mov
mov
mov
xor
add
mov
xor
add
imul
add
mov
jmp
mov
xor
mov
xor
add
mov
mov
xor
add
imul
or
lea
mov
xor
add
lea
mov
jmp
mov
xor
mov
lea
jmp
scas
in
dec
je
mull
imul
lods
jns
add
ret
aad
jmp
int3
mov
repz
push
in
out
mov
icebp
shl
out
stos
call
rcr
fst
mov
mov
add
push
fcomp
push
sti
std
std
mov
shr
in
repz
mov
out
aad
icebp
xlat
cli
mov
sar
add
stc
fadd
fists
test
mov
ftst
in
lret
int3
jecxz
mov
in
ret
or
add
cmpsl
shlb
repz
rcr
out
fcomp
sti
std
ror
fildl
add
or
loopne
mov
out
scas
hlt
rol
into
enter
fcomip
cmc
sar
out
loop
loope
fucomip
test
int
test
mov
jmp
in
fcmovnb
out
testl
in
in
shr
mov
int
idiv
lods
jmp
lock
lock
fcmovnbe
xlat
pop
fsub
out
add
fnstsw
mov
mov
fucomi
enter
fdivr
lds
stc
add
fprem
fbstp
out
jmp
test
cli
mov
pop
incl
fyl2xp1
cmc
or
fsubp
ret
lret
lods
loope
mov
lret
rcl
ret
jecxz
loop
rol
ljmp
stc
fxch
scas
test
shl
leave
int3
in
into
mov
idiv
mov
add
int
rcl
add
loope
fisttps
hlt
inc
mov
ljmp
call
call
repnz
stc
ljmp
in
rcl
lret
lods
not
fucomip
fucompp
cmc
shlb
lret
out
add
xlat
mov
fsub
lret
cmc
ror
lret
ljmp
mov
jecxz
into
jecxz
jecxz
in
cli
lds
hlt
out
ret
out
aad
add
clc
call
iret
out
int3
shlb
lods
int3
in
mov
shl
sarb
fildl
pop
iret
fiaddl
adc
shl
ret
int3
lods
iret
cli
out
int
call
shl
shl
add
add
pop
fcmovne
ljmp
scas
lods
mov
stc
xlat
int3
hlt
mov
mov
fdiv
loope
out
iret
or
lods
out
int
test
out
clc
add
cld
fdivr
ljmp
jmp
int
in
icebp
int
ror
int
rcr
jmp
loope
div
in
pop
out
pop
repz
fmul
ret
stos
sti
loopne
jmp
lock
mov
mov
les
cld
loope
fadds
in
out
in
loopne
cli
mov
ljmp
int3
add
out
mov
jmp
xlat
test
hlt
mov
rcr
mov
mov
clc
lock
repnz
aam
fiaddl
bsf
mov
scas
mov
aam
stc
ljmp
add
pop
lret
loope
hlt
push
push
scas
mov
mov
repnz
repnz
in
mov
mov
or
push
add
adc
out
scas
lock
mov
cmc
mov
fistpll
jmp
sti
out
adc
out
ror
test
mov
mov
sarb
mov
stc
fadd
cld
shl
add
call
loope
repnz
sti
fnsetpm(287
fcmovbe
lret
add
incl
psubsb
hlt
or
lret
rol
fmulp
repz
repnz
in
mov
int3
cld
sti
icebp
test
in
cld
fmull
jecxz
out
shl
mov
sarl
loope
test
in
add
cmc
add
adc
repnz
int3
enter
mov
mov
mov
in
in
loopne
in
ljmp
int3
in
scas
cmc
enter
clc
xlat
add
clc
cli
out
mov
push
sti
add
fcomp
shl
enter
mov
rcl
mul
ret
out
mov
loop
mov
fcmovnbe
into
lret
mov
aam
fsubr
sar
std
push
mov
out
int3
loope
fsubp
rcl
in
in
mov
lock
add
add
in
ljmp
cli
fcom
in
into
in
mov
cli
mov
cld
fxch
xlat
xlat
int3
mov
incl
call
std
or
out
rcr
repz
jmp
enter
repnz
icebp
aad
or
in
fsubrp
in
fistpll
loope
int3
lret
icebp
cmc
in
fdivp
rol
repnz
or
movb
enter
mov
icebp
jmp
fld
fdivp
idivl
int
xlat
add
xlat
out
add
ret
mov
mov
lock
mov
mov
cli
add
lret
aad
jmp
enter
mov
jmp
aad
ljmp
aad
sar
in
shl
jmp
add
cli
int3
in
test
mov
cmc
mov
mov
loop
jmp
fcomip
loopne
enter
hlt
mov
loope
clc
call
mov
cli
add
in
fdivrp
xlat
jecxz
iret
in
in
mov
rcr
out
aam
iret
ffreep
fcomi
push
out
lret
out
loope
loop
lock
repz
int3
lret
mov
mov
iret
shr
repz
ret
push
std
stc
add
lods
ret
test
leave
mov
rcr
push
mov
add
hlt
aam
xlat
repnz
aam
leave
out
icebp
mov
shr
rcl
jmp
jmp
lret
icebp
mov
fsub
add
ret
in
loopne
loop
rcr
fdivl
lret
bnd
iret
mov
out
out
out
jmp
fsub
jmp
mov
mov
cli
mov
out
jecxz
or
jecxz
aad
iret
or
mov
call
lock
aam
ljmp
mov
cli
bswap
or
in
or
cmpsb
mov
repnz
in
cmc
int
int3
mov
lock
rcr
fcmovu
fsubr
push
int3
scas
out
ljmp
aam
mov
cmc
fdivrp
out
add
pop
fisttpll
in
rorl
shl
mov
repnz
icebp
mov
fst
neg
into
mov
jecxz
call
sti
loop
mov
fmulp
out
mov
repz
into
rcl
jecxz
add
int
add
aam
jecxz
ljmp
icebp
jmp
clc
mov
add
aam
fiadds
stc
add
ljmp
mov
mul
call
mov
vshufps
call
in
lods
loope
shl
int3
fcomip
aam
add
loop
repz
cld
add
rol
in
in
fcmovnu
cmpsl
mov
call
lock
aad
repz
ror
add
ljmp
loope
leave
rol
mov
mov
aad
jmp
push
std
repz
jmp
lods
out
lret
loopne
mov
mov
testb
in
mov
or
jecxz
in
out
scas
mov
jecxz
loope
shl
enter
push
add
mov
shl
clc
add
faddp
mov
in
mov
into
jmp
out
mov
lret
jecxz
add
in
out
out
loop
loope
mov
lret
sti
int3
not
mov
loop
add
std
lret
repz
xlat
rol
xlat
out
lods
sarb
mov
push
fucomp
clc
fcomp
or
ljmp
repz
mov
hlt
test
repz
mov
aad
hlt
loop
add
mov
ret
in
xlat
fcom
mov
fcmovnbe
jmp
movb
shl
or
out
or
loop
mov
out
mov
mov
stc
lret
or
out
ror
leave
ret
lret
out
lret
in
lret
lret
rol
add
hlt
or
fcmove
out
rcl
out
loopne
icebp
mov
add
call
fucomp
add
loopne
enter
fsubr
mov
lock
out
lock
call
fdivr
fcmovb
testl
out
out
mov
repz
mov
shrl
ret
add
add
out
rorb
rol
lret
hlt
repnz
loop
mov
mov
mov
jmp
stc
mov
shl
mov
ljmp
lret
out
out
out
in
test
cld
in
ret
in
in
repnz
in
clc
add
leave
add
out
fidivs
mov
divb
std
cld
cli
loope
in
aam
ret
ror
int
ret
jmp
fxch
std
rcr
in
add
stc
add
aam
jecxz
add
fldl
lret
in
mov
fnsave
mov
fdivrl
fucom
in
out
pop
aad
repz
ror
fucomp
aad
leave
in
ljmp
pop
xabort
or
in
leave
or
out
mov
test
in
int3
clc
enter
call
fstp
fxtract
fstp
clc
or
out
out
ret
int
aam
aad
enter
aam
fcmovu
in
add
add
add
or
out
les
lret
mov
in
aad
fsubp
pop
rorb
ffree
fsubr
fidivrl
lret
mov
shl
repz
icebp
cld
fcomp
add
int
leave
mov
mov
mov
mov
out
clc
sti
into
int
push
loope
les
add
in
out
mov
shr
repnz
aam
hlt
aad
repz
loop
add
xlat
sar
fmull
leave
add
into
mov
not
imul
ror
frndint
add
fstp
mov
rol
jmp
add
ror
scas
shll
cli
int
fbstp
rol
cli
fsubr
out
cld
or
iret
iret
into
rep
xlat
lods
cmc
ljmp
icebp
leave
rol
clc
loop
pop
hlt
hlt
jecxz
repnz
stos
scas
lret
loop
mov
xlat
jmp
aad
aad
clc
idiv
jecxz
or
add
in
add
mov
mov
sti
stc
mov
hlt
xlat
fsub
iret
imul
shr
neg
loopne
call
jmp
movsl
aam
mov
xlat
mov
mov
hlt
in
call
call
mov
int3
mov
mov
mov
clc
pop
fsqrt
cld
jmp
out
jecxz
fisttps
rol
mov
repnz
leave
leave
out
lret
incl
cmc
icebp
fcmovnu
hlt
or
inc
lret
ror
not
shll
jecxz
icebp
std
sar
in
idiv
ret
aam
fdivp
lret
int3
fmul
test
in
in
call
ror
clc
int
sar
rol
into
bnd
jmp
hlt
xlat
xlat
cld
int3
out
loope
aad
lock
std
call
mov
in
hlt
scas
clc
mov
std
lret
iret
std
ret
in
cmc
int3
loop
jecxz
iret
add
lret
fmul
shl
repz
mov
in
fcmovu
int3
cld
in
loopne
or
les
mov
add
mov
not
cmc
vpmaddwd
mov
clc
xlat
fucomp
mov
add
fucom
clc
fstl
repz
ror
lock
shl
loopne
neg
aam
sar
cmc
mov
in
inc
cld
std
or
int
int3
mov
cli
clc
repnz
fdivr
mov
add
in
or
int
loop
mov
lods
lock
div
in
enter
std
icebp
sti
sti
jmp
repnz
jmp
loop
shl
mov
out
out
mov
mov
fnop
in
stc
or
call
ret
shl
in
mov
int3
fisubrl
loop
xlat
ret
aam
loopne
jmp
movl
repnz
lret
enter
mov
icebp
add
fadd
clc
hlt
neg
lds
push
push
out
cmpsb
lods
out
aam
loop
out
leave
divl
add
incl
jmp
cmc
hlt
loope
push
loop
pop
rol
mov
mov
shl
mov
icebp
shr
fsin
out
std
add
fucomi
push
std
adc
in
mov
iret
lret
icebp
loop
mov
hlt
push
repz
fcomi
loopne
call
mov
mov
not
repnz
lret
mov
fildl
mov
aad
jmp
fmulp
mov
ret
out
lods
rol
mov
lock
int3
rcr
add
rcl
out
or
int
add
not
rol
loopne
fnstsw
mov
xlat
add
push
std
bswap
mov
ret
loopne
in
in
out
fidivrs
sti
ret
rorl
pop
or
iret
shl
mov
leave
aam
divl
mov
in
vpsubd
or
aad
out
ljmp
xlat
mov
leave
add
std
fadd
ret
repnz
xlat
leave
ljmp
lock
repz
loopne
loope
sarb
xlat
add
repz
repnz
leave
int3
mov
mov
rcl
mov
iret
jecxz
cld
fsubp
or
shr
sti
loopne
call
mov
out
mov
out
in
lret
sarl
out
call
push
in
jmp
scas
mov
sar
in
repz
mov
add
idiv
lret
enter
cli
fnstsw
into
int
shl
clc
fcmovnbe
add
ret
ffreep
in
invd
add
in
ror
rcr
out
repnz
repz
fcomi
int3
hlt
repnz
mov
in
loopne
stc
or
test
mov
int
out
cmc
ror
mov
fdivr
int
ret
jmp
xlat
aad
sti
add
iret
in
into
mov
stc
stc
fnstenv
out
fsubp
sar
add
enter
out
pop
or
xlat
mov
into
mov
mov
in
sti
add
cli
flds
incb
fcmove
or
lret
jmp
icebp
mov
add
in
or
in
rorb
lds
in
shl
clc
lret
mov
icebp
call
fcomp
lock
leave
enter
ljmp
call
mov
loop
stc
pop
lret
fisttps
lock
fadd
or
call
shr
leave
fsqrt
in
call
vpsrad
jmp
iret
add
mov
int
shl
hlt
mov
aad
mov
or
fisttpl
add
in
or
jecxz
scas
in
jmp
mov
fsqrt
sti
stc
aad
mov
mov
add
out
or
loope
jecxz
ror
cli
mov
jmp
mov
repz
ljmp
mov
mov
cmpsl
in
out
lret
loope
mov
sti
sarb
test
rcl
xlat
ljmp
stc
in
rol
aam
icebp
enter
fdivrs
sar
fsqrt
fcomp
fisttps
add
add
pmulhuw
stc
repz
mov
into
idiv
repz
fucomip
in
icebp
fistpll
fcmovnu
out
mov
out
leave
mov
mov
fcompp
mov
pop
aad
movb
out
leave
push
int
std
in
int3
into
out
shrl
in
mov
into
imul
aam
enter
shl
hlt
add
jmp
in
or
lods
in
in
mov
sti
out
mov
fcom
hlt
enter
add
fsub
or
jecxz
int3
xlat
out
hlt
aam
mov
mov
repnz
loopne
out
in
mov
out
ljmp
int
enter
mov
stc
mov
fcompp
rcl
ret
add
into
aam
repz
jmp
jmp
jmp
jmp
int
add
loope
add
fcmovu
cld
in
mov
mov
in
aad
cld
in
jmp
mov
loopne
iret
add
int
shl
int
out
not
hlt
in
in
hlt
ret
repz
cmc
hlt
neg
ljmp
dec
jmp
test
sarl
mov
loop
out
ret
push
loope
repz
jmp
rol
icebp
cli
cli
mov
into
repz
or
add
stc
or
rol
aad
not
fld
in
dec
lock
stc
icebp
out
add
aad
add
iret
fcmovnbe
add
rol
repz
mov
in
rcl
mov
mov
fadd
rolb
rol
stos
iret
movsl
icebp
into
aam
hlt
ror
cmc
in
call
loop
add
shl
cld
cli
shr
mov
mov
jmp
mov
mov
push
not
mov
lret
loopne
out
shl
out
fcomip
xlat
out
sar
fdiv
fdecstp
rolb
fdivrp
lds
int3
ljmp
in
out
sarb
in
iret
ror
add
pop
lock
add
repz
lds
rol
lods
in
mov
incl
fiaddl
fmul
or
lret
loope
shl
int3
leave
enter
not
iret
sti
xlat
fmul
fcmove
in
aad
lock
out
fdiv
fisttps
adc
out
lods
mov
aad
enter
mov
repz
cli
loope
or
ror
idiv
out
in
lock
out
shl
idiv
not
fdivs
lret
push
neg
in
or
jmp
rolb
int3
pop
test
hlt
sti
int
scas
mov
stc
mov
incb
cli
stc
add
add
ljmp
int3
ror
idivb
add
mov
iret
or
repz
cmc
mov
ljmp
repz
aam
sar
cmc
add
add
mov
mov
icebp
mov
mov
repz
pop
fimull
add
fisttpl
int
lods
out
cmc
in
ror
shl
out
int3
stc
mov
mov
add
in
lret
push
repnz
mov
hlt
hlt
loop
out
repnz
lret
rcr
fiaddl
loop
clc
hlt
out
or
filds
in
mov
imul
leave
faddp
fst
in
mov
stc
repnz
lret
in
por
xlat
test
shr
mov
mov
enter
mul
fcomip
jmp
hlt
loopne
lret
int3
rcl
shlb
repnz
aad
iret
in
shl
add
faddl
ljmp
out
leave
loope
scas
shr
lret
loope
test
xlat
std
mov
in
or
xlat
push
repnz
lret
fdivs
ljmp
hlt
sti
pop
lret
push
sti
enter
test
scas
in
shl
scas
lds
lock
in
mov
in
pop
cli
sti
std
cld
lret
push
push
fst
cmpsl
mov
mov
cli
loopne
in
cmc
icebp
int
enter
push
add
add
fdivr
psubsw
lock
lods
shl
enter
mov
shr
out
add
shl
faddp
aad
fdiv
out
or
loope
lods
leave
lock
leave
rol
fcmovne
mov
shr
icebp
cld
xlat
add
in
std
std
movl
out
mov
icebp
mov
out
shr
xlat
repz
aad
stc
in
add
sti
fsubrp
fsub
in
test
lods
call
call
pop
out
rolb
jecxz
ret
out
add
in
lods
ror
mov
ljmp
mov
sar
out
mov
fdivrs
lds
lret
mov
loope
repz
clc
fstp
add
stc
enter
in
add
fdiv
jmp
rol
sar
icebp
lret
fsubrp
repz
ffree
hlt
or
pop
std
loop
add
scas
lods
loopne
int
shll
stc
repz
add
push
mov
iret
fsubr
fadd
scas
scas
sarb
mov
ret
idivl
faddl
enter
add
int3
mov
ljmp
lock
ffreep
add
ret
mov
lds
in
out
out
out
sti
clc
into
std
fdivp
icebp
rcr
imul
out
aam
add
enter
std
leave
fadd
fsubrl
mov
fidivrl
icebp
out
ret
cmc
loop
int3
add
scas
in
leave
repnz
in
int3
jmp
cmc
mov
cli
sti
fiaddl
sarl
not
enter
lret
or
rol
mov
mov
iret
out
rcl
mov
or
flds
cli
cli
int
mov
cmc
rcr
shrb
add
loop
loop
mov
adc
leave
call
repz
repz
mov
int
icebp
ret
jecxz
out
enter
fcmovnb
out
fcomp
fmulp
int3
loopne
shl
mov
add
pop
lret
fnstsw
ljmp
mov
fcmovnu
aad
aam
leave
out
or
stos
int3
ljmp
stc
cld
jecxz
mov
shl
cld
cli
loop
or
loope
shl
xlat
lods
shl
loop
cmc
mov
int
pop
cld
mov
ffreep
out
std
repnz
imull
mov
int
rcr
stc
shr
aam
fcmovnu
add
lods
mov
ror
xlat
iret
clc
int3
shr
mov
clc
hlt
xlat
loope
or
in
jmp
scas
shrb
test
int
shl
cmc
idivb
hlt
out
leave
neg
lods
in
mov
ret
aad
std
divl
loopne
ret
push
in
xlat
or
loope
jmp
loopne
int
repz
loope
mov
lret
ret
ret
imul
lock
push
rol
or
add
mov
shll
int
jecxz
fcomi
call
stc
repnz
add
or
cmpsb
fadd
aam
mov
icebp
repnz
int3
cld
add
enter
into
lret
in
les
aam
aam
into
icebp
stc
mov
push
add
adc
int3
ret
fidivs
lret
iret
int
add
fucomip
add
shl
loopne
or
repz
int
out
mov
mov
sti
clc
add
push
in
fmuls
in
int3
int
in
test
shlb
sarb
add
ljmp
in
out
loopne
loop
lds
enter
loope
out
shl
cld
out
in
or
clc
icebp
repz
mov
cmc
lock
shl
int3
shl
fcmovu
jmp
jecxz
icebp
shrb
in
cli
fcmovnbe
mov
ret
sar
mov
or
in
stos
mov
in
lret
icebp
mov
mov
cld
cld
clc
in
add
leave
cld
repz
add
shl
leave
enter
out
mov
int
int3
add
loopne
stc
out
out
repz
loop
aad
ljmp
aad
add
add
jecxz
clc
fcomip
mov
fcmovb
mov
mov
enter
fcomp
hlt
mov
lock
rcr
sti
in
mov
les
loopne
faddp
ror
out
ret
out
lods
clc
lret
std
dec
xlat
rcl
push
sti
jmp
icebp
aad
in
add
ror
mov
mov
jmp
lret
call
jmp
add
enter
call
leave
fnsave
hlt
lret
mov
int
in
stc
clc
out
std
push
push
clc
hlt
loop
out
mov
lock
leave
icebp
repnz
xlat
icebp
mov
filds
call
fucomip
ret
mov
shll
out
add
cld
jecxz
pop
ret
shl
in
in
out
rcr
shrl
aad
int
hlt
mov
std
mov
or
ror
add
fucomp
out
lret
aam
jmp
cli
repz
cmc
rol
fadd
mov
loope
aad
hlt
in
add
add
ljmp
scas
hlt
xlat
rcl
idivl
cld
stc
pop
out
or
loop
out
sar
lods
into
shll
lret
dec
lock
ffree
add
rcl
sti
aam
loope
lar
test
enter
ret
mov
rol
call
mov
mov
fcmovu
hlt
sti
in
lret
enter
rol
mov
hlt
int3
in
fst
rorb
ljmp
cli
ljmp
aam
leave
iret
fcmovbe
lret
mov
cli
rcr
hlt
repnz
aam
fcomi
in
clc
in
loopne
enter
lret
iret
enter
loop
icebp
fcom
in
pop
or
cli
or
loop
pop
mov
fst
mov
lret
in
cmc
aad
repnz
sti
mov
sar
or
mul
jecxz
stc
repnz
mov
sti
aad
mov
icebp
dec
fcomip
jmp
cld
ret
loop
jmp
fcmovnu
cmc
lret
out
sti
mov
jmp
mov
cld
enter
out
in
mov
aad
int
rcl
jmp
out
aad
shl
lret
fsqrt
add
in
mov
shlb
fiadds
add
sarl
or
fcom
stc
or
in
loopne
hlt
mov
loopne
in
into
aam
hlt
loopne
rolb
fdivr
jmp
shl
mov
mov
sti
mov
mov
not
int3
or
jmp
add
clc
adc
mov
out
mov
aad
clc
enter
rcl
pop
push
ret
add
adc
scas
lret
xlat
leave
mov
fdivp
aam
rcr
filds
fxch
fldl
decl
cli
shrb
jmp
lds
mov
stc
add
fstp
fsincos
or
loope
loope
lret
stc
in
sar
int
int
loop
in
out
push
in
loop
mov
in
cmc
int
mov
aam
pop
in
rol
mov
push
int
stc
int
ret
enter
scas
hlt
into
std
sti
fiadds
jecxz
mov
incb
cmc
aam
out
in
mov
leave
mov
repz
lock
roll
mov
into
jmp
mov
shrb
hlt
cld
int
repnz
incb
fcmovbe
enter
cld
fldcw
stos
loope
ror
fdiv
in
mov
testb
div
add
out
fxtract
std
int
adc
mov
out
icebp
cmc
into
mul
xlat
fcmovnbe
mov
jecxz
add
aad
jmp
shlb
out
int
in
fbstp
add
add
add
ljmp
adc
cmpsb
fsubrl
mov
out
out
add
rcr
aam
add
hlt
fsubr
enter
out
jecxz
in
fcmovu
enter
fdivr
mov
ret
sti
or
in
cld
shl
fucomip
rol
out
sti
out
scas
jmp
stc
repz
in
mov
xlat
fsubp
add
fidivrs
call
mov
fucomip
mov
sar
jecxz
or
ljmp
ret
lret
clc
cld
leave
fdivrl
add
add
cmc
ljmp
in
fdivl
lret
repz
out
mov
fsqrt
sar
lret
add
push
fcomp
ret
in
ret
shl
lret
vpsrld
mov
ftst
fucomip
out
cli
out
or
in
leave
loop
rcr
aad
divl
enter
fcomp
sar
fcos
out
or
out
shl
call
repz
fstp
loopne
aam
fucomi
add
in
ret
int
repnz
rcl
mov
rcl
push
add
add
or
push
or
call
repz
lret
enter
lock
fnstsw
fcmovnb
in
push
iret
into
add
fcomp
fsubr
lods
mov
aad
jmp
mov
add
in
fxam
mov
fdivrs
in
les
jmp
add
mov
leave
or
aad
or
add
mov
out
clc
sti
test
out
std
mov
mul
add
add
in
out
out
lret
rcl
mov
shr
aam
jmp
cli
fcmovnbe
std
loope
clc
jmp
out
repz
in
mov
into
sti
out
xlat
ljmp
cli
add
add
out
lret
fcmovb
in
out
divb
in
fucomip
mov
sar
rcl
jmp
add
jecxz
in
std
ffree
fsubr
lock
out
mov
rcr
lret
repz
neg
shl
icebp
or
lret
fsub
fmul
or
mov
int3
mov
mov
in
aad
jmp
stc
out
fsub
icebp
loope
xlat
enter
fists
or
shlb
test
mov
aam
idiv
fiaddl
in
repz
add
loopne
leave
aam
shl
icebp
out
mov
ror
faddp
sti
stc
sti
cld
cli
ljmp
ljmp
loopne
sarl
aad
ret
shl
jmp
lret
imul
stc
in
lock
ror
out
enter
mov
out
cli
add
in
out
jmp
mov
shlb
mov
ret
fadd
cmc
push
ret
call
or
pushl
loopne
lock
fdivrs
call
aad
rolb
xlat
ror
add
mov
mov
mov
rcl
fxch
rcr
aad
push
mov
or
icebp
ljmp
in
fbstp
iret
aad
idiv
stc
mov
aam
out
jmp
loope
fidivrl
iret
not
into
in
lock
fcmovne
movb
in
shrl
ret
out
sti
in
fistpll
add
mov
or
in
mov
fucomi
int
leave
enter
rcl
repz
in
add
or
ret
aad
iret
loope
int3
cli
imul
repz
aam
ret
add
add
call
in
vpmovmskb
mov
leave
lret
aam
aad
cmc
xlat
int
test
add
out
fcomp
push
std
cld
out
jmp
sti
out
into
shl
ret
rol
rcr
or
jmp
jecxz
shl
vcmpsd
lock
mov
shl
int
mov
clc
loop
jmp
clc
or
mov
into
shr
fucomi
in
mov
shl
push
repz
std
lret
jmp
test
mov
repz
jmp
fdivr
loop
icebp
int
loop
mov
aad
fldl
fildl
rcr
test
repz
ljmp
fcompp
shl
loopne
sti
out
enter
loopne
repnz
mov
fcmovu
scas
repz
call
mov
push
std
fcmovnbe
or
add
in
lret
lock
cmc
cli
mov
mov
in
add
shr
in
pandn
or
fsubrs
leave
sti
fxch
jecxz
icebp
enter
push
ret
or
push
add
adc
fucomip
shlb
in
out
int
fistpll
loop
clc
mov
or
mov
leave
mov
lret
fucomi
mov
loop
fiaddl
in
or
out
mov
lret
repnz
sar
int
mov
loopne
cli
rolb
add
fsubr
mov
into
into
cmc
mov
rol
mov
fcmovu
ret
rorl
cld
stc
push
repnz
in
mov
jmp
div
mov
aad
fxam
ljmp
adc
lret
leave
stos
mov
call
in
fcomip
iret
loop
mov
or
jmp
clc
loop
in
mov
sarl
fdivl
aam
cli
lret
in
add
div
out
int
leave
lock
rcl
rcr
repz
idivl
mov
repz
shl
lock
ljmp
int3
idivb
xlat
xlat
cli
add
or
call
int
mov
hlt
cld
mov
ljmp
or
in
lods
shrl
mov
mov
jmp
jmp
jmp
mov
xor
jmp
cmp
inc
inc
push
push
cmp
xchg
movsb
data16
adc
jnp
mov
fcos
add
ffreep
add
cmc
push
stc
add
call
int
lock
vpslld
shl
aad
cld
mov
sti
push
or
out
add
ljmp
lret
repnz
aam
stc
in
add
fdivr
out
fsubr
leave
lret
repz
iret
lock
iret
int3
icebp
lret
fcomp
mov
into
mov
int
jmp
jmp
aad
ret
fsub
shlb
mov
int3
aad
jmp
clc
stc
mov
clc
mov
cmc
hlt
leave
add
out
out
out
cmpsb
mov
stos
rol
test
in
loopne
mov
loope
jecxz
add
fsubr
les
mov
loope
cli
out
sarb
hlt
test
loop
out
ret
or
int3
test
ror
int
test
xlat
hlt
fdivrp
mov
mov
cmc
add
rcl
pop
aad
clc
fcmove
jecxz
fmul
iret
mov
lret
mov
filds
aad
in
jecxz
jmp
int3
sti
fnstcw
mov
cli
shr
mov
xlat
enter
loope
fisttpl
clc
xlat
hlt
fiadds
stc
shll
imul
out
in
std
iret
jmp
into
fcmovnu
repz
fsubr
pop
fiaddl
out
in
mov
int3
cmc
int3
jmp
mov
mov
sti
ret
mov
push
int
add
lock
leave
clc
mov
repz
add
cld
push
add
dec
cmpsb
repz
mov
clc
std
repnz
mov
call
mov
jmp
aam
ljmp
mov
out
mov
stc
int
into
mov
fsubp
hlt
into
lret
out
int
call
out
leave
lret
into
sar
loop
in
icebp
rol
rorb
into
or
test
ret
mov
divb
leave
out
loopne
repz
push
mov
xlat
out
fld
mov
movsb
mov
jmp
lret
repnz
sti
jmp
ret
mov
mov
loopne
leave
lret
clc
or
mov
in
ljmp
fdivrp
std
std
mov
clc
loop
fucom
fsin
rcll
out
mov
shlb
fdiv
mov
mov
add
push
jecxz
cld
loope
jecxz
jmp
jmp
fistpll
cld
hlt
ret
add
lock
call
fadd
rol
imul
jecxz
int
call
fpatan
in
into
mov
add
stc
testl
ret
repnz
xlat
fucomi
out
fdiv
mov
icebp
icebp
add
aam
or
fsubp
fmul
dec
lret
stos
lods
test
hlt
cli
cli
sarl
push
cli
aad
stc
sti
faddp
fcomp
or
mov
mov
out
int3
shl
neg
lock
loope
mov
aam
pop
roll
out
out
shl
in
ljmp
shr
enter
or
loope
fiadds
in
shr
lods
call
icebp
shr
mov
imul
mov
fstp
mov
incl
test
loop
mov
jmp
repnz
out
shlb
add
out
jecxz
lret
mov
icebp
ror
in
into
out
jmp
idiv
icebp
aam
testl
add
fisubrl
ljmp
mov
ret
fidivrl
add
in
iret
fdivr
loopne
shl
mov
xlat
enter
int3
mov
hlt
hlt
or
add
loope
out
in
icebp
in
mov
in
out
out
clc
fdivrp
out
call
loope
lret
cli
add
stc
std
lret
push
push
out
rcr
rcl
mov
cmc
call
stc
xlat
aam
clc
mov
jecxz
lock
iret
ret
mov
iret
loope
stc
mov
stc
sar
testl
add
rol
loop
jmp
shl
fdiv
repz
repnz
add
add
jecxz
loop
out
lret
mov
div
ror
fnstenv
out
rcl
or
or
in
out
call
scas
mov
in
sti
fucomi
sar
stc
cmc
lret
add
hlt
loop
add
mov
out
mov
int3
in
xlat
cld
rcr
aam
loop
aad
mov
cli
decl
call
int
lret
ljmp
imul
imul
fadd
pop
fsub
or
fdivp
mov
xlat
out
mov
repz
fxtract
sti
xlat
aam
loope
loop
jecxz
or
loope
into
cmpsb
mov
shr
mov
fadd
fucomi
aad
add
in
add
idivb
ror
fisttpll
jmp
repz
out
in
into
aam
int3
mov
iret
rcl
xlat
out
jecxz
call
shl
loope
mov
shlb
fdiv
mov
ror
aad
push
lret
aam
out
clc
ljmp
ror
ljmp
mov
ret
mov
fadds
sti
jmp
ljmp
out
loope
dec
leave
clc
mov
loope
shl
add
test
les
out
into
rcl
clc
mov
loop
sti
pop
in
fldlg2
out
icebp
fdivs
enter
mov
add
in
or
jmp
in
out
fnstsw
lock
out
lods
cld
jecxz
rcl
pop
fdiv
in
loop
call
scas
into
sarl
shl
sar
add
rcl
aad
shr
int
fnop
icebp
mov
jmp
repnz
jmp
in
mov
pop
fmuls
pop
aad
in
repz
rcl
mov
mov
in
iret
jecxz
sarb
loope
fmulp
or
shr
repnz
loope
jmp
mov
iret
into
fcmove
mov
stc
testb
lret
iret
or
in
out
enter
in
mov
mov
lock
or
pop
iret
jmp
or
xlat
rol
icebp
in
jmp
std
int
mov
std
clc
mov
decb
loopne
repz
movsl
into
lods
vshufpd
mov
leave
clc
mov
mov
mov
add
int
int
int3
mov
loop
into
mov
iret
fnstsw
add
pop
fdivr
enter
ffree
repnz
rcl
rcl
fidivl
lock
push
jecxz
fdivp
in
add
loop
int
faddp
out
lock
iret
fdivp
sti
lret
std
idiv
in
loopne
bnd
rcr
or
or
test
aam
out
cld
not
clc
fdivr
add
sti
lock
sti
fdivr
into
filds
in
imulb
fcmovbe
in
rcr
icebp
shl
iret
cld
in
jecxz
fcmovnbe
cld
ret
add
or
enter
cmc
lret
shlb
mov
rolb
rcr
clc
cld
icebp
mov
shr
icebp
in
repnz
into
lock
shll
out
mov
fcom
pop
mov
leave
or
cli
in
scas
shl
lock
mov
mov
add
add
add
fcos
fdivrp
cld
out
mov
icebp
sti
jmp
clc
dec
rcr
clc
shl
movb
or
loopne
sti
in
fdivp
lods
lret
mov
hlt
shl
jmp
aam
add
cmc
cli
push
push
loopne
std
iret
or
int
aad
aad
int
repz
out
fdivs
cld
add
call
sarl
div
hlt
mov
icebp
fdivrs
push
jmp
hlt
add
or
leave
ljmp
repnz
out
repz
ret
sarb
frstpm(287
fildl
out
lret
int
jmp
lock
xlat
shl
hlt
jmp
cli
aad
repz
bnd
test
jmp
out
mov
rcr
mov
mov
testb
fucomip
jmp
aam
por
in
rol
lods
out
loop
in
stc
cli
hlt
jmp
cld
int3
loopne
pop
fmul
loopne
out
loopne
scas
fnsave
out
cli
sti
icebp
lock
add
mov
test
add
repnz
rcl
mov
mov
in
hlt
clc
sar
std
mov
ret
fcomi
enter
fstl
in
test
loope
test
sarl
mov
int
aam
roll
rcr
or
mov
ljmp
fidivrs
in
icebp
bnd
add
push
into
scas
repnz
lret
ljmp
mov
mov
shr
push
lret
pop
ljmp
jmp
in
sarl
aam
rcl
cmc
add
add
out
lret
jecxz
add
shl
leave
sti
repz
mov
repz
mov
lret
or
movhlps
fmul
mov
mov
in
fcmovnbe
lret
lock
aad
ljmp
lret
divb
shr
fnstsw
repnz
hlt
out
mov
lret
stc
add
mov
icebp
in
in
out
fdecstp
iret
clc
jmp
jecxz
loope
not
fildl
in
repz
not
les
fdivs
shr
repnz
mov
fld
lret
mov
lret
jmp
icebp
fidivrl
or
fmull
push
cld
cld
add
mov
lret
in
mov
stc
in
mov
idiv
rcl
add
loopne
push
loop
into
out
int3
enter
aam
into
repnz
repz
int
rcl
rol
leave
enter
push
repnz
scas
lret
test
call
ljmp
mov
loopne
into
cld
jecxz
xlat
sarb
out
cli
icebp
imul
shl
cli
in
lock
test
int
repnz
les
enter
int
mul
mov
cmc
cmc
ffree
add
ftst
leave
std
push
out
in
scas
xlat
int3
sar
in
mov
cli
into
std
jecxz
loop
not
push
mul
add
rcr
scas
int
ret
hlt
mov
mov
stc
add
or
add
add
mov
mov
out
int3
cli
out
fcmovnu
idivl
movl
iret
aam
add
mov
ret
mov
xbegin
mov
fld
movl
roll
mov
xlat
ret
lret
mov
sar
cld
neg
cli
add
out
fildl
call
mov
enter
shl
add
rol
hlt
fildl
add
iret
xlat
jmp
iret
enter
mov
mov
shl
add
into
repz
mov
aad
mov
out
ljmp
add
pop
in
mov
iret
fsqrt
call
loop
lret
iret
sarb
mov
cmc
cmc
hlt
int
loop
add
sti
sti
add
jecxz
xlat
mov
mov
fsubr
aam
jecxz
aad
add
clc
xlat
fcmovne
add
cli
or
loop
icebp
aad
test
hlt
mov
leave
repz
fcomi
fdivr
fimull
lock
loop
adc
icebp
leave
mov
jmp
shll
mov
mov
or
or
add
adc
fnclex
test
int
leave
in
std
movl
add
in
int
cld
lret
fst
repnz
mov
mov
rcr
aam
out
pop
fucom
add
fsubp
rcl
jmp
divl
test
fld
jmp
rorl
hlt
loop
pop
add
call
lock
ret
mov
hlt
fmulp
in
add
fdivr
cmpsl
scas
test
ljmp
shl
std
mov
mov
sti
jmp
out
in
lret
repnz
in
mov
out
ffreep
aad
stc
ffree
add
add
mov
mov
sarl
mov
std
std
fucom
fmuls
pop
or
ret
fmulp
out
loop
divb
std
mov
clc
icebp
add
fisttpl
lret
lods
mov
icebp
scas
jmp
aam
repnz
in
fcom
lret
clc
aam
enter
test
test
mov
fmul
in
out
into
out
ret
ret
neg
or
leave
repz
lods
loop
repz
jmp
std
mov
xlat
repz
ffree
fmuls
enter
adc
jmp
ljmp
out
sti
clc
mov
cld
pop
ret
jecxz
shr
or
enter
out
repnz
shr
fmul
fucomip
mov
mov
repz
loop
shr
lret
out
clc
clc
fxch
fmul
rol
lods
mov
in
into
in
test
in
loopne
rcr
faddp
enter
in
sarb
mov
hlt
jmp
mov
neg
fdivp
call
fchs
repnz
scas
mov
mov
xlat
leave
shr
jecxz
call
loop
aam
std
fsubr
out
add
ret
ret
lret
mov
int
mov
jecxz
testb
ljmp
or
iret
ret
fmul
int3
sti
call
add
fidivrs
leave
push
pop
adc
cld
out
xlat
scas
call
in
into
hlt
fucomp
int
test
mul
add
filds
push
sti
add
jmp
fucom
mov
out
mov
lods
aad
call
mov
mov
fiadds
fcmovu
bswap
repz
out
call
jecxz
enter
rcl
mov
leave
testb
int
jecxz
hlt
or
add
fst
loopne
int
out
iret
mov
icebp
neg
mov
mov
xlat
lock
add
fcmovbe
leave
sti
hlt
cld
repz
loop
in
out
mov
fldt
lock
aad
add
ljmp
add
fdiv
loopne
shr
fcmovnb
shl
lock
int
in
test
out
cli
call
mov
mov
mov
pop
idiv
fsub
cld
or
or
les
stc
shl
lods
mov
out
aam
rol
jmp
leave
testb
movb
jmp
in
repz
mov
int
xlat
mov
stc
mov
decb
cmc
stc
aam
in
push
stos
repnz
ljmp
shr
call
std
rcr
icebp
jecxz
pop
pop
add
in
out
or
repz
int
mov
les
loope
std
sti
rcr
rcr
in
push
or
iret
mov
shr
int
sti
repz
aam
fcomip
out
out
cmc
rolb
fdivr
neg
inc
std
fsubr
mov
ret
jecxz
jmp
iret
out
stc
aam
stc
int
in
sar
push
out
add
mov
fucomp
lret
out
out
mov
mov
mov
rcl
mov
jmp
add
enter
in
jmp
mov
mov
pop
rcl
add
out
fsub
loop
or
hlt
in
ret
out
divl
pop
repz
testl
call
scas
in
ror
vpsubq
mov
ret
rol
clc
incl
add
lret
in
loop
adc
int3
out
out
ror
jmp
lret
fnstsw
loope
loopne
out
les
loopne
clc
fcmove
rcr
ret
cmc
fcomi
mov
aad
enter
lock
testl
into
in
fadd
in
stos
mov
rcr
call
int
stc
div
cli
aad
aam
out
lret
pop
or
out
in
in
out
aad
out
in
icebp
sar
vpmulhw
or
add
fdivr
out
cmpsl
mov
mov
jmp
aad
sti
repz
repz
rcr
pop
or
out
in
loop
repnz
mov
fcmovne
leave
call
in
sar
shl
in
shr
paddsb
dec
shl
mov
lret
fldcw
loop
fdiv
add
shl
neg
stc
push
sar
or
shr
lret
jecxz
int
fcmovnbe
leave
xlat
mov
mov
shl
icebp
pop
add
add
in
add
out
ret
int3
cli
shl
idivb
sarl
repnz
lret
sti
fsub
jecxz
or
cmpsl
shr
mov
jmp
enter
into
add
inc
rolb
leave
in
stc
ror
fdivl
shr
mov
rcl
mov
cmc
xlat
add
leave
out
jmp
in
mov
in
iret
lret
out
shlb
std
fcmovnu
dec
fsub
out
or
jmp
int3
loope
repnz
hlt
loop
pop
lock
fiadds
hlt
or
fmul
jecxz
incb
repnz
rcr
loop
not
jmp
lret
out
rcl
rcr
shl
push
add
aam
out
out
shl
ror
out
iret
out
out
mov
in
into
ret
ret
div
fld
cld
cli
out
add
repz
in
iret
in
fldl2t
clc
mov
aad
mov
fiaddl
add
dec
jmp
fdiv
shr
cmpsb
xlat
lods
lds
clc
fdiv
mov
idiv
out
out
add
loop
test
jecxz
in
icebp
test
mov
call
in
add
rcr
iret
loop
or
out
mov
sar
in
out
ret
movl
sti
leave
out
int
lods
test
leave
out
mov
iret
int3
fdivp
fucom
aam
div
in
loop
in
or
fsubp
repnz
mov
out
mov
std
mul
aam
rol
loop
add
rolb
in
or
lret
iret
in
clc
stc
in
fdiv
iret
cld
hlt
cli
mov
add
leave
or
fstp
shl
loope
in
ror
out
jmp
in
add
push
mov
in
vpsubw
iret
leave
in
les
mov
call
icebp
loop
rolb
ret
loope
in
jmp
out
mov
lret
mov
int
ljmp
rcr
add
call
loop
mov
ret
hlt
into
in
aam
jmp
icebp
clc
icebp
ljmp
or
fsubr
fnsave
in
shlb
cmc
add
mov
cli
jmp
in
add
leave
out
out
scas
in
vpor
lret
repz
icebp
ret
out
loop
lock
leave
ljmp
int3
ljmp
add
mov
mov
out
xlat
std
stc
push
jecxz
cli
scas
loopne
movsb
loop
ret
lret
cli
in
mov
mov
sar
ret
enter
fcmovnb
movb
testb
int3
std
icebp
fxch
mov
mov
mul
sti
sti
repz
cli
idivl
push
out
in
call
iret
mov
int3
jmp
in
iret
sar
mov
mov
add
fdecstp
incl
movl
ret
div
cmc
lret
repnz
repz
ljmp
cmc
out
call
or
icebp
mov
mov
mov
enter
enter
add
rcr
add
loopne
loope
repnz
mov
mov
fcom
enter
icebp
int
div
cld
icebp
out
rcr
in
fcmovnu
lret
fnsave
repz
shr
rcr
hlt
sti
repnz
mov
or
or
jmp
icebp
mov
loope
repz
stc
mov
std
int3
add
in
neg
std
neg
leave
or
in
into
lret
shr
jmp
aad
into
fbstp
fsub
cmc
rol
aam
out
ljmp
in
xlat
iret
cmc
loopne
lods
xlat
xlat
stc
mov
int
fidivrl
cld
or
icebp
rol
in
fsubr
fdivp
mov
shl
repnz
cld
lock
or
sar
fstp
std
jecxz
mov
aad
sti
repz
mov
enter
loop
jmp
or
fists
rol
fucom
ret
repz
mov
fstpt
rcl
leave
std
int
lret
repz
shl
mov
int3
int
fld
aam
mov
jmp
ljmp
mov
lret
fdiv
idiv
clc
shr
mov
iret
pop
out
jmp
repz
out
leave
out
in
cli
fmul
xlat
fnstcw
ret
sar
or
ljmp
shr
aad
lret
mov
fsqrt
sarl
jmp
repz
int3
shr
stos
mov
out
in
repnz
out
into
hlt
std
in
call
out
rol
fsubr
call
in
fcmove
out
loopne
mov
fdiv
loopne
lret
les
in
lods
int
mov
lret
out
add
fucomi
lret
into
jmp
mov
mov
ljmp
int3
mov
fisttps
aad
aad
cmc
or
into
loop
aam
out
sarb
idiv
in
icebp
div
or
out
out
out
add
add
ret
into
lods
int3
loop
les
ror
mov
in
rcl
in
enter
add
mov
out
mov
cli
fdivrl
in
shl
neg
ret
into
push
in
jmp
lods
loop
fcmovnbe
mov
loop
mov
shl
xlat
add
or
les
add
cmc
jecxz
out
mov
vpmaxsw
int
cmc
sar
lret
hlt
out
in
in
fsubrl
in
idiv
int3
fpatan
clc
out
cmc
int3
stc
call
mov
out
hlt
int
mov
lods
into
call
int3
cld
int
add
sar
fcmovb
jecxz
loop
in
in
fisttpll
out
mov
idivb
call
hlt
fxch
shl
lock
or
call
shr
mov
shl
mov
iret
lret
fmul
aam
int3
rol
testb
leave
iret
icebp
rol
lret
jmp
xlat
mov
fistpll
neg
loop
out
add
loop
into
cld
lock
mov
ljmp
int
iret
int3
fyl2x
loop
loop
cld
add
imul
add
loopne
mov
shr
lods
shl
aam
jmp
mov
loop
add
call
fstp
into
shrl
in
test
out
mov
hlt
fucom
fcmovne
fmull
or
in
leave
stc
std
add
int3
les
shr
call
mov
loopne
rol
shr
add
out
mov
rcl
lock
jecxz
fmul
fdiv
repnz
or
stc
add
mov
aam
into
out
in
int
stc
xlat
cli
mov
or
jmp
mov
repnz
frstpm(287
mov
cli
hlt
icebp
out
out
loope
mov
rol
fsubp
lds
adc
call
leave
lods
aam
mov
cmc
fdiv
loope
add
jmp
out
mov
repz
ljmp
pop
fscale
mov
lret
add
ljmp
mov
shlb
roll
mov
ror
xlat
call
stos
imull
mov
mov
mov
leave
in
mov
out
add
cld
cmc
or
in
out
lret
mov
aam
mov
mov
ret
call
out
adc
out
repnz
clc
cli
mov
fcmovb
loopne
not
aam
mov
loope
ret
leave
scas
lods
jmp
mov
rcl
ret
fidivrs
add
jmp
or
push
ret
mov
mov
idiv
std
filds
xlat
rcl
add
lret
loope
lds
int3
out
shl
out
repnz
ret
out
sti
lods
lret
mov
aam
push
aad
sti
cli
ret
call
lock
cmc
into
int3
fcmovnbe
mov
fldlg2
icebp
jmp
hlt
sti
stc
idiv
add
or
scas
shrb
in
mov
fsub
mov
jmp
push
out
out
lret
int3
icebp
into
fdivl
call
fcmovu
out
incb
add
fcom
add
lret
mov
out
iret
mov
int
mov
repz
jmp
or
fst
sarl
mov
rcr
stc
mov
fstp
add
rol
rorl
or
shl
mov
in
out
in
repz
int
shl
lret
imul
mov
idiv
fucomip
into
fisttpl
jmp
rol
int3
iret
mov
into
out
out
mov
mov
rol
or
push
aam
rol
out
mov
shll
fsubr
loop
hlt
incb
add
or
psllq
sarb
stos
cmc
mov
mov
add
jmp
loop
cld
lock
add
lret
hlt
repnz
lret
mov
in
aad
hlt
add
ret
out
loope
in
lret
lods
xlat
shr
in
lock
fmulp
int3
cli
mov
shl
aam
repnz
or
scas
lret
lods
lret
out
fsubp
ljmp
out
idiv
fucom
shl
add
loope
out
in
ljmp
aam
fstp
add
icebp
jmp
lret
call
or
int3
leave
lock
shrl
rcl
cli
filds
add
pop
push
in
add
lret
stos
jmp
loope
mov
jmp
aad
cmc
rol
mov
clc
fucom
std
or
or
ljmp
out
les
ror
mov
in
icebp
in
cmc
add
enter
leave
lock
mov
mov
loopne
lock
mov
repnz
aam
out
loopne
jmp
call
aam
mov
mov
add
fdivrl
in
loop
add
fmul
rcl
mov
dec
repnz
mov
jecxz
aad
cli
neg
iret
int
pop
enter
fdiv
sti
rcr
mov
lret
icebp
cld
ror
idiv
idivl
ljmp
xlat
jmp
mov
ret
aad
shr
icebp
mov
lock
aad
out
stc
add
fucompp
mov
mov
into
shr
shr
std
lock
ret
call
pop
aad
or
ljmp
int3
lret
jmp
out
out
jmp
lret
rcl
add
in
or
incl
in
adc
fsubr
mov
repnz
lods
jmp
jecxz
repnz
lock
push
int3
lret
mov
mov
mov
enter
fdivrl
jmp
int
int
lret
int3
int3
jecxz
fcom
in
out
into
fiaddl
sti
test
fdiv
out
into
shll
stc
loopne
mov
lret
rcr
hlt
add
loopne
std
fsubrp
decb
add
call
out
lret
lods
scas
into
cli
cli
jmp
mov
roll
ret
in
cld
add
rol
fimull
lret
call
mov
ror
aam
pop
shl
loopne
hlt
xlat
mov
shr
mov
les
ljmp
mov
jecxz
out
mov
out
xlat
imul
out
sti
lods
iret
mov
cmc
mov
int
rcr
fsubp
pop
jecxz
psubsw
jmp
call
not
rcr
out
mov
int3
repnz
repz
out
psubusb
fcomp
les
lods
in
out
scas
fcomip
hlt
mov
cmc
cld
aam
fmul
sti
movl
call
leave
lret
fldl2e
out
push
out
ret
aam
into
loop
aad
rorl
or
or
in
test
not
loop
mov
jmp
aam
enter
idiv
out
add
enter
add
scas
scas
loope
mov
mov
std
fdiv
out
fcmovnb
add
out
or
enter
out
test
int
in
icebp
lock
mov
lock
jmp
ret
out
out
lret
mov
fcomp
out
mov
int
hlt
fsubrp
movb
or
jecxz
scas
mov
sti
neg
in
cli
iret
enter
hlt
aad
hlt
not
sti
jecxz
iret
in
or
add
mov
lods
in
mov
ror
mov
fdivs
repz
loop
add
aad
iret
adc
int3
int3
in
repz
call
mov
lock
shl
xlat
leave
ljmp
mov
test
in
into
iret
cld
clc
dec
fistpll
ret
in
out
jecxz
or
enter
in
leave
mov
repz
cli
aam
rol
ret
fcmovb
xlat
in
out
shr
out
in
repz
mov
sti
fcmovne
clc
fucom
add
aam
shl
std
ret
fmulp
int
mov
ljmp
repnz
add
in
mov
add
in
loope
enter
in
mov
call
int3
cld
clc
add
add
fcmove
iret
sti
in
clc
shl
loopne
in
enter
int3
mov
lock
int
fld
cld
loope
add
pop
out
loop
cld
fucom
repz
lods
loop
lods
int
fdivrp
jecxz
int3
add
ret
or
add
lret
into
loopne
loope
icebp
aam
ffreep
mov
icebp
xlat
xlat
xlat
idiv
fiaddl
repz
out
add
lret
iret
lock
aad
in
aad
jmp
icebp
fiaddl
push
mov
bswap
sar
in
ret
mov
scas
test
out
int
in
mov
aad
lock
aad
add
iret
fcmove
out
ret
aad
fcmovnbe
out
jmp
mov
fsub
rcr
in
xlat
loope
faddp
incb
jmp
leave
jecxz
sti
call
fdiv
repz
test
fscale
ret
or
in
push
loopne
xlat
shrl
mov
shl
xlat
cli
add
loop
or
fnstcw
mov
in
lret
lock
in
fdivp
icebp
out
ret
icebp
fmul
jmp
ror
in
mov
ret
clc
mov
push
sarb
add
mov
out
loope
shl
lods
clc
fcomp
neg
lock
fdivr
or
std
out
leave
clc
loop
mov
sti
aam
fdivs
add
out
fidivrl
or
in
icebp
rcl
lods
cmc
lock
ljmp
incl
fucom
in
xlat
hlt
repnz
out
loopne
repnz
cmpsl
mov
lods
mov
out
leave
aad
not
stc
mul
ffree
ret
out
jmp
loopne
div
fucomi
stc
mov
repz
int3
pop
flds
rolb
loopne
out
jmp
shrb
neg
cmc
imul
ljmp
int
test
in
in
pop
int
add
lods
out
mov
mov
sti
idivl
clc
mov
or
jmp
out
add
shrl
rol
cli
xlat
jmp
mov
loope
loopne
rol
add
stc
push
or
leave
int3
shl
aad
stc
int
fdivr
xlat
add
idivb
clc
jmp
cld
in
mov
iret
out
fsubr
call
mov
movl
mov
fcomp
mov
shl
ljmp
cld
lret
sti
mov
hlt
ret
movb
or
or
shrl
jecxz
mov
mov
mov
lret
ret
out
std
mov
shr
pop
pminsw
shl
mov
out
int
jmp
mov
enter
int3
icebp
out
cld
fsub
vpmaxsw
push
int
fst
mov
fstpt
neg
ret
int
mov
lret
in
loopne
lods
jecxz
loop
cli
ljmp
fmul
repnz
icebp
loop
lock
hlt
clc
int
ret
ret
repnz
ljmp
flds
push
fildl
lock
or
icebp
icebp
repnz
cmc
mov
lods
in
repz
cli
jmp
aad
into
mov
int3
sarl
ljmp
scas
out
sarl
in
idiv
mov
mov
mov
mov
xor
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
adc
mov
lea
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
xor
add
inc
mov
cmpl
jl
jmp
pushl
pushl
push
pushl
call
cmpl
jb
mov
adcl
mov
adc
movl
adc
movl
xor
lea
adcl
mov
mov
or
mov
xor
xor
mov
add
mov
sub
mov
movl
mov
xor
mov
decl
mov
inc
xor
mov
adcl
mov
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
pushl
pushl
call
xor
or
dec
mov
jmp
lea
movl
cmpl
je
cmpl
jl
jmp
push
pushl
call
xor
xor
dec
mov
jmp
mov
not
mov
xor
mov
xor
mov
negl
sub
and
mov
mov
adc
mov
movl
cmpl
je
cmpl
jge
jmp
push
push
call
xor
xor
dec
mov
jmp
mov
andl
xor
or
inc
mov
cmpl
jb
jmp
push
push
call
cmpl
jb
or
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
call
cmpl
jb
mov
adcl
mov
sub
lea
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
push
call
cmpl
jb
mov
sub
mov
neg
mov
subl
sub
mov
mov
mov
mov
or
mov
mov
lea
mov
mov
mov
mov
sub
mov
mov
mov
mov
or
jmp
out
sub
add
stos
test
jnp
cwtl
jnp
xlat
rolb
ljmp
jmp
mov
stc
ror
in
iret
call
lock
jmp
mov
shr
push
icebp
enter
iret
neg
int
repz
leave
lock
std
sti
fcmovnb
jmp
cli
ror
shl
lods
fidivrs
stc
call
fdecstp
lret
cli
mov
fcomp
flds
hlt
shr
in
leave
lods
lret
rcl
lret
into
clc
xlat
enter
xlat
in
sti
int3
int3
clc
add
loope
add
jecxz
or
or
jecxz
lods
lock
lret
mov
mov
sti
xlat
in
add
jmp
call
cli
lods
lods
ret
fdivp
mov
loopne
out
in
mov
mov
shl
paddsb
repnz
mov
idiv
mov
mov
mov
cld
loopne
pop
leave
cli
into
fsub
jmp
out
fdivl
mov
mov
sar
roll
add
add
mov
out
loopne
repnz
push
out
rol
icebp
sti
bswap
or
push
int
mov
out
repz
lods
mov
cld
loop
rol
rcr
out
call
mov
call
lock
in
out
std
aad
mov
mov
loopne
std
ljmp
mov
fdivs
fistpll
mov
enter
pop
in
shrb
cli
in
jmp
loope
lock
loopne
fnstsw
add
int
mov
ror
imul
fdiv
fucomp
mov
mul
std
fisttpl
pop
vpaddd
loop
mov
mov
mov
int3
mov
mov
dec
stc
shl
rolb
sar
fsubp
cld
ret
add
lret
call
icebp
mov
fadds
aad
ret
les
push
pop
mul
out
add
test
in
out
jmp
enter
add
aad
fdivrs
out
sti
cld
in
in
scas
ret
fistpll
lret
mov
into
shlb
repz
add
out
ljmp
mov
shl
in
aad
repnz
cli
sti
icebp
add
decb
in
call
out
lods
mov
sti
call
loope
ret
add
add
or
out
fsubrp
ret
repz
loopne
ljmp
push
hlt
stc
add
decb
jmp
jmp
repnz
in
loop
mov
mov
mov
cmc
loopne
jmp
or
sti
ljmp
aad
mov
enter
mov
fcmove
out
jmp
push
sti
cli
add
loope
out
lret
call
int3
lock
out
repz
mov
hlt
loopne
add
pop
fmulp
loopne
mov
in
ror
rcl
aad
cli
fidivs
add
cli
aam
in
xlat
or
cli
dec
adc
in
ljmp
shll
mov
jecxz
jmp
ror
in
xlat
test
xlat
lds
lret
hlt
div
enter
ret
clc
lret
out
fdiv
in
iret
mov
into
icebp
test
int3
lock
mov
icebp
loop
aam
ffreep
loop
pop
stos
iret
icebp
jecxz
mov
mov
out
int3
clc
idivb
fcomip
loop
jmp
add
out
enter
aam
shll
icebp
loopne
add
mov
push
call
push
shr
ljmp
mov
cli
ljmp
lock
mov
filds
loop
in
jmp
jecxz
mov
mov
icebp
flds
call
out
lock
out
or
loop
jmp
fidivl
stc
out
int
in
std
stc
hlt
mov
jmp
les
mov
out
loope
iret
add
out
mov
out
hlt
out
add
bsr
sti
sti
lret
in
call
shl
add
mul
faddp
fiaddl
or
sti
ljmp
mov
aad
cld
shl
cld
loopne
rorb
fcmovu
xlat
out
ret
hlt
repnz
jmp
std
fadds
jecxz
mov
cli
out
psubusw
out
in
fucom
leave
aad
repz
rcl
hlt
lret
add
aad
add
cld
ret
into
or
loopne
scas
mov
fndisi(8087
call
leave
fnop
out
mov
imul
std
fmuls
lret
pop
jmp
jmp
shl
pushl
icebp
std
mov
out
or
in
std
into
fmul
mov
in
mov
clc
xlat
in
stc
shl
in
xlat
repnz
faddp
add
clc
call
add
shlb
out
mov
mov
add
push
out
leave
iret
shlb
fnstcw
in
lock
add
sti
jmp
sti
loope
out
out
call
mov
int3
aam
in
mov
repz
shl
imul
ret
fcmovu
loop
add
shrb
mov
jmp
stc
lock
lret
sti
leave
jmp
lods
jmp
scas
out
test
call
leave
testb
out
cmc
lock
hlt
idivb
in
repz
ljmp
not
fcom
out
fucomi
mov
rolb
jmp
mov
out
in
call
sti
into
rcl
fidivrl
ret
loopne
div
add
std
clc
fsubr
jmp
mov
mov
mov
rol
jmp
clc
loop
rcr
out
leave
loop
mov
add
shl
add
jmp
cld
hlt
in
rol
or
enter
loopne
cli
cli
enter
idiv
shl
pop
add
lret
lret
loope
add
decl
out
shl
fnsave
in
hlt
out
in
mov
mov
add
out
in
int
mov
sti
call
in
iret
enter
mov
not
fcom
stc
sti
hlt
stc
lret
fsub
test
in
ret
out
fcmovnb
into
sti
repz
jmp
test
add
loopne
pop
loop
lods
repnz
shll
hlt
aam
sti
out
repz
iret
aad
in
std
jmp
std
jecxz
jmp
in
in
int3
in
enter
clc
into
lret
icebp
mov
rcl
ret
jmp
faddl
fsts
test
imul
mov
stc
jmp
in
shl
fucomi
shl
fcomi
fiaddl
fsubrp
mov
mov
rcl
in
lods
lods
fcmovnbe
out
imul
lret
fcmovu
loop
aam
mov
or
lock
lods
jmp
shll
rcl
mov
add
out
in
stc
iret
imull
mov
mov
test
std
fscale
cmc
mov
stc
add
enter
jmp
out
mov
hlt
mov
aam
in
mov
fcomi
sti
add
ret
decb
lods
lods
in
out
out
jmp
mov
fdivrp
mov
sti
in
into
out
out
std
fld1
rcl
out
mov
call
std
out
fdivrs
add
cld
loop
pop
lret
or
repnz
mov
int3
lret
aad
rcl
cld
ret
iret
int
incl
pop
rol
sti
into
out
ljmp
out
in
fdivs
in
loopne
add
decl
jecxz
call
mov
out
div
sti
out
mov
clc
loope
cld
roll
hlt
ret
fadd
in
iret
cli
fnstcw
out
hlt
call
fcmovnu
cld
cld
jecxz
fmul
ret
or
push
ret
iret
test
iret
not
aad
ljmp
repz
or
rcr
faddl
jecxz
call
mov
in
int
in
fcomp
in
mov
fsub
std
enter
out
clc
mov
scas
rol
ret
mov
clc
cli
mov
idiv
aad
sar
add
or
lret
repnz
lods
mov
shl
in
mov
std
sar
add
out
hlt
sar
fdivp
rcr
add
fsubrp
push
in
lret
call
cli
clc
mov
in
mov
jecxz
ret
add
sar
std
out
fldln2
out
scas
lock
enter
rcr
mov
clc
lret
ror
aam
roll
loop
loop
jmp
test
in
cli
in
mov
jecxz
lock
icebp
repz
or
aam
incb
stos
in
ror
sti
neg
cmc
iret
mov
mov
int
aad
icebp
fadd
aad
fimuls
leave
test
shl
mov
mov
hlt
stc
sti
fdivr
add
push
add
pop
aam
in
std
fucom
psubusw
mov
lret
lods
lock
xlat
in
mov
add
add
rorl
incb
add
enter
iret
lods
out
loopne
shll
aad
out
int3
add
or
out
add
fimull
or
in
lock
imul
icebp
fcomi
mov
filds
jecxz
repnz
sti
or
cld
or
ror
fdivl
aam
sar
out
fcmovbe
roll
icebp
add
ret
clc
or
lods
hlt
leave
iret
mov
out
sar
jmp
test
fcmovu
out
ljmp
test
mov
cmc
hlt
fucomp
out
add
fcomip
shr
fdivr
sti
std
into
out
call
int
fcmovu
cld
aam
clc
faddl
ret
fdiv
fcomip
fucomip
psubq
int
mov
int
lock
ljmp
rolb
in
cli
repz
cld
dec
add
jecxz
out
lret
cli
shl
mov
aad
out
movb
fcmovb
loop
fcmovnb
cli
lret
leave
adc
in
mov
ror
not
fiadds
hlt
clc
iret
rcr
pop
rcl
hlt
rcr
or
repz
mov
lods
int
mov
aam
out
jmp
shr
iret
cmc
call
add
in
in
jmp
repnz
icebp
int
ror
cmc
hlt
ljmp
loope
or
ljmp
leave
ret
lods
mov
jmp
leave
not
iret
int
cli
mov
std
enter
repnz
out
enter
les
mov
out
int
std
icebp
aam
or
jmp
in
enter
xlat
call
jecxz
inc
idiv
lock
out
fcom
int3
loop
out
mov
leave
jmp
icebp
iret
lret
pushl
pop
sar
out
or
stc
push
fcmovb
lds
fld
fcomip
ffree
repz
fucomp
call
int
aad
movb
or
add
add
sarl
shl
aam
enter
call
loopne
loopne
into
les
call
call
aam
leave
mov
int3
ret
cmc
add
or
sti
std
int
dec
out
scas
out
repnz
leave
in
fnstsw
cli
div
sar
or
aam
add
lods
lret
rcl
mov
int
in
cli
in
neg
lret
in
mov
xlat
sar
aad
jmp
loop
mov
hlt
loope
mov
fistpll
cmc
ret
fucom
into
push
out
fyl2x
ljmp
into
jmp
mov
aad
add
out
or
or
repz
icebp
mov
not
sti
sarb
shl
fsub
rcr
add
leave
bswap
cli
add
repz
lret
fadd
lret
out
into
mov
loopne
cli
lret
mov
ret
mul
in
cld
ret
fcmovu
sti
cli
std
loop
int
test
mov
stc
ror
mov
repz
cmc
add
neg
ret
aam
std
push
in
add
lods
mov
stc
shl
lret
shll
cli
ffree
pop
add
jmp
loop
fucomp
lods
repz
mov
add
cld
fdivrp
cli
loop
push
xlat
jecxz
lret
icebp
icebp
repnz
shl
in
rol
hlt
in
aad
jmp
cmc
add
sti
ror
or
mov
div
lods
aam
call
icebp
enter
mov
cli
in
std
add
clc
out
fcomp
les
loopne
div
fucomip
in
fcomp
icebp
aam
add
cld
aam
ljmp
out
int
ret
div
icebp
mov
fdivrs
add
sar
or
movl
in
repnz
ret
clc
jmp
out
fcmove
int3
mov
lret
out
lock
icebp
scas
ljmp
mov
shl
add
rorb
in
add
jmp
shl
out
lret
mov
mov
in
aad
mov
rol
testl
int3
jmp
in
sti
enter
iret
mov
int
loopne
fildl
fcmovnb
ffree
or
add
repz
in
int
out
in
test
out
stc
icebp
int3
shr
aad
jmp
jmp
fmuls
vpaddd
dec
mov
shl
clc
repnz
mov
mov
in
in
out
fld
ffreep
mov
jmp
aad
fcomip
lret
cli
out
fdivr
stc
lret
ljmp
push
mov
mov
lods
mov
ror
mov
mov
fcmovnu
into
shr
int
leave
loop
mov
imul
in
in
repz
fcmovb
mov
jecxz
call
mov
mov
scas
int3
test
fdivp
fucomp
shr
hlt
add
decl
jmp
std
ljmp
fcomp
in
ret
lret
loopne
mov
mov
in
mov
icebp
loop
loopne
clc
jmp
shrl
lds
repz
rcr
loopne
lock
fcomp
cmc
leave
in
in
lods
les
repnz
lock
int
icebp
or
loop
cld
inc
jmp
or
test
rcl
sarl
fucomi
sar
fiaddl
xlat
aad
loope
out
out
in
shrl
out
call
in
ret
lock
jmp
lret
or
jmp
rcr
in
xlat
imul
lods
hlt
aad
in
out
into
mov
repz
in
rcr
ljmp
mov
out
test
rcl
jmp
out
mov
or
lret
jmp
fstp
ret
out
jmp
in
aad
jmp
enter
mov
shl
rcr
push
out
iret
fadds
leave
mov
mov
mov
in
mov
not
hlt
shr
jmp
jmp
fxch
loope
mov
mov
hlt
mov
xlat
ret
loop
mov
call
fmuls
int
test
cmc
iret
shr
out
shll
out
mov
rorb
xlat
fimull
or
loope
in
out
in
into
test
lret
stc
ljmp
mov
aad
std
or
loopne
out
iret
or
in
int
mov
shl
repnz
lret
into
clc
std
lock
ret
add
in
adc
ror
not
out
imul
fdivrs
mov
out
rol
xlat
out
stc
call
adc
int
out
ret
fdivl
mov
cli
ljmp
in
pop
add
loopne
or
mov
lods
loop
fucomi
mov
iret
enter
roll
icebp
loop
sti
cld
add
hlt
aam
leave
into
jmp
mov
repnz
mov
test
in
enter
jecxz
push
add
fdivr
mov
out
mov
int
fstpt
out
add
iret
fdiv
scas
int
out
call
fcmovnbe
add
into
ret
add
call
jmp
or
into
mov
out
shll
in
fucom
loope
out
add
loope
jecxz
sti
or
in
ror
jmp
jmp
int3
mov
loope
fcmovb
in
jmp
clc
clc
fucomip
int3
jmp
mov
int3
fadd
ror
sarl
loope
leave
ftst
in
or
rol
loop
mov
mov
scas
lock
in
add
fmul
loopne
add
cmc
fcmovnu
cli
cmc
aam
or
in
test
int
rcr
in
sar
rcl
idiv
shl
ret
out
in
fucomip
fimull
cli
test
ret
lret
xlat
iret
iret
mov
ret
leave
hlt
sar
repnz
or
mov
add
ret
out
lods
jmp
not
in
cmc
idiv
loop
in
ret
out
jmp
add
fsubp
cmpsb
scas
shll
mov
not
mov
in
mov
rcl
cld
sti
incb
stc
or
fimuls
sarl
mov
out
in
aad
fidivrs
loopne
jmp
fucomi
add
into
frndint
out
call
not
into
mov
fdivrs
aad
or
ud0
jecxz
aad
lock
fst
in
hlt
pop
fnclex
in
hlt
rcl
repz
rol
ljmp
fcmove
repnz
into
in
rcr
std
std
aad
leave
sti
loope
out
in
mov
out
enter
add
jmp
lock
in
sti
out
or
lock
loop
mov
cmc
mov
add
movl
jmp
ljmp
in
mov
aam
lret
cli
jmp
rol
ret
xlat
add
mov
jmp
fdivr
cmpsl
out
lods
jmp
test
out
not
fdiv
fildl
mov
jmp
aam
add
int3
fisttpll
mov
mov
repz
mov
in
icebp
mov
rcl
std
testb
int
in
in
repz
cli
in
cmc
std
enter
div
out
or
call
in
mov
out
aad
out
lret
loop
fcomi
mov
fdivr
or
add
psubusb
stos
in
int3
int
aam
mov
repnz
ret
mov
mov
cli
add
fcmovnbe
add
jmp
into
mul
repz
hlt
call
fdiv
repz
flds
cmc
faddp
iret
add
fiadds
or
iret
shl
mov
dec
in
shl
fmulp
in
cli
hlt
fldlg2
idivl
add
leave
into
adc
hlt
rol
mov
in
aam
stc
lock
test
flds
call
mov
rol
in
in
pushl
add
add
loop
add
adc
lret
ljmp
sti
sti
sti
rcl
iret
xlat
mov
aam
clc
or
mov
enter
aad
cld
fdivr
shr
mov
add
add
fdivr
add
lods
fmul
mov
leave
shl
out
mov
mov
out
std
hlt
lret
loopne
into
fldl2t
std
cmpsl
in
imul
ret
shrb
std
iret
shl
idivl
jmp
iret
lret
les
not
iret
stc
out
mov
into
mov
int
mov
in
or
add
or
mov
in
fmulp
mov
add
rcr
out
out
loope
int3
lret
lock
repz
leave
int
mov
mov
std
fcomip
ljmp
leave
lret
loope
mov
loop
shlb
mov
mov
jmp
loop
or
loope
loopne
loope
mov
sti
in
mov
mov
mov
fucomi
mul
add
icebp
jmp
mov
cmc
mov
ror
xlat
fcom
add
out
rorb
loop
or
iret
test
out
mov
jmp
not
fscale
mov
enter
repnz
mov
int3
int3
shlb
fidivrl
fucomip
loopne
add
add
or
mov
mov
out
cmc
into
neg
cli
leave
repnz
pop
jecxz
fiaddl
lret
out
into
repz
mov
fcomi
fcmove
icebp
shr
mov
rcl
or
out
or
or
shl
test
lock
sar
leave
mov
fmul
call
incb
out
faddl
add
lret
rol
mov
in
in
in
mov
mov
hlt
wbinvd
aad
out
cli
in
int3
lods
rep
shl
test
mov
add
ljmp
jmp
fiaddl
leave
push
ret
lret
shl
int
shl
div
loop
neg
call
mov
icebp
repnz
icebp
clc
out
or
or
fdiv
out
jmp
shl
int3
out
fldl2e
loop
in
filds
jmp
cld
in
ret
mov
jmp
int
jmp
repz
mov
or
cli
sti
fcmove
add
or
into
fadd
rcl
aad
out
in
dec
imul
mov
cld
loop
ljmp
in
rol
icebp
mov
icebp
out
xlat
in
repnz
out
ret
aam
mov
add
std
sti
or
mov
mov
mov
mov
in
int3
mov
cli
hlt
loopne
add
int3
cld
or
mov
shl
rol
mov
lret
mov
aam
cld
neg
fucomip
cli
lret
loope
out
jmp
loop
stc
int3
leave
idivb
repnz
shr
aad
mul
in
incl
loop
jmp
loop
enter
stc
ret
jecxz
rcl
add
add
in
icebp
jmp
mov
mov
shl
mov
mov
add
testl
out
sti
shl
mov
sti
sti
fcmovbe
leave
lret
push
pop
in
stc
std
aam
or
aad
loopne
mov
mov
ljmp
fninit
mov
aam
repnz
add
loopne
or
lods
mov
fidivrs
mov
in
int3
jmp
rcr
aam
repnz
clc
ret
ret
pmullw
out
out
in
in
leave
repz
lds
fildl
hlt
icebp
or
loopne
add
stc
add
leave
loope
mov
cmc
mov
int
icebp
lods
out
cli
sti
stc
mov
in
faddl
aam
stc
in
mov
icebp
ror
ret
call
jmp
ret
rcl
iret
repnz
sti
push
ret
or
into
in
mov
shl
iret
clc
sar
mov
int
rol
lret
loop
out
mov
out
cli
repz
iret
mov
leave
idiv
call
mul
loopne
jmp
int
or
lret
mov
lods
scas
int3
lock
mov
inc
fnstcw
push
faddp
test
lods
ljmp
lods
icebp
lret
rcr
icebp
clc
ret
pop
std
in
out
or
aam
fsubr
mov
scas
shl
jmp
loopne
out
fidivrl
sar
rol
ror
pop
bswap
std
add
call
int
ret
lods
aad
lret
ret
cli
push
add
ret
or
or
hlt
clc
out
iret
out
aad
leave
int3
out
repnz
mov
out
loope
movl
or
enter
mov
lret
mov
in
mov
ret
ror
incl
add
movb
iret
leave
iret
rcl
mov
shll
mov
ret
int
rcr
div
rcl
add
lret
icebp
vpor
mov
ljmp
mov
in
pop
or
mov
rcl
mov
stc
sti
call
mov
in
aad
sar
sar
into
or
adc
rcl
in
les
ret
loopne
jmp
out
ljmp
lret
ror
mov
rcl
icebp
mov
rcl
mov
rcl
fadds
fmulp
cmc
hlt
ljmp
loopne
jmp
in
mov
mov
int3
ret
enter
stc
out
icebp
mov
jecxz
iret
aad
jmp
in
stc
mov
ret
hlt
ret
lock
in
sti
icebp
in
movsl
test
into
in
jmp
ljmp
loope
loope
fcmovnu
add
add
in
rol
xlat
mov
lock
int3
call
pop
in
or
jmp
sarb
mov
in
mov
cli
call
xabort
clc
paddq
adc
mov
mov
leave
ftst
in
out
fidivrl
lret
fcmovb
fstp
jmp
ror
test
imul
clc
mov
shl
ljmp
hlt
push
lret
ljmp
mov
mov
enter
out
ror
clc
rcr
fdivr
jmp
add
add
fsubp
ror
sarl
mov
pop
ret
out
or
cmc
or
add
pop
ret
fisubrs
out
in
fbstp
mov
sarl
or
mov
jmp
enter
aam
shr
jecxz
div
clc
loop
fadd
in
lret
or
mov
cmc
aam
icebp
cmc
in
mov
pop
iret
mov
ret
or
push
int
int3
scas
movsb
mov
shl
sti
rcl
iret
int
mov
jecxz
cld
fdivr
add
add
clc
xlat
in
or
or
repz
icebp
int
shr
repz
mov
lock
lret
lret
loop
out
test
out
idiv
fcmovnu
sti
aam
div
sar
repnz
leave
cmc
push
mul
out
add
lock
into
in
out
in
out
fsub
rcr
in
icebp
testl
int3
leave
repz
lods
mov
mov
lret
aad
out
loope
cmc
in
filds
sti
call
add
or
mov
lds
std
out
iret
int
xlat
stc
add
fcmovb
add
lds
in
in
mov
out
into
enter
hlt
ret
fsubrp
add
fdivrs
mov
cli
lret
mov
lret
stc
mov
int
loopne
shl
jecxz
push
cli
or
mul
in
out
repnz
repnz
sti
ror
repz
mov
not
neg
in
push
loopne
clc
in
hlt
out
mov
ror
out
out
in
repnz
enter
clc
rol
fincstp
in
hlt
cli
out
loopne
loop
in
mov
lods
mov
mul
mul
add
std
fadd
ret
iret
fmulp
jecxz
rol
aam
lods
jmp
repz
into
fcmovbe
ret
not
int3
fadds
cmc
std
out
push
flds
jecxz
out
mov
icebp
out
ffreep
fucomp
lret
sarb
stc
sti
sti
rol
fmuls
jecxz
jecxz
lods
rol
mov
loope
fsubr
call
test
out
sti
fcmovnbe
or
cmc
sti
test
scas
aam
loopne
lret
lods
mov
push
mov
int
cli
rcr
paddusb
lods
repz
icebp
mov
hlt
hlt
repz
int
mov
fiadds
cmc
call
std
lret
mov
shll
mov
aad
repnz
loop
add
sti
in
loopne
fucom
mov
in
test
mov
mov
fsub
repnz
out
cmc
fimull
out
repz
enter
loope
mov
in
cmc
lret
hlt
cli
cli
mov
sti
lds
add
sar
in
shl
mov
fnstcw
fcmovb
loopne
por
or
in
rcr
mov
mul
mov
mov
ret
xlat
push
add
ret
push
cmc
out
enter
fbstp
jmp
mov
div
add
add
enter
int3
call
leave
ret
out
mov
rcr
cli
repnz
rcr
rolb
shl
in
add
test
ror
cli
lret
mov
int
into
std
pop
xlat
push
xlat
or
or
add
out
pop
out
jecxz
test
out
out
aad
sarl
cli
add
loopne
xlat
iret
decb
jmp
enter
mov
repz
leave
in
lret
sar
add
iret
out
add
idivb
loope
stc
lods
int
iret
mov
in
rcr
loope
add
clc
mov
add
cli
int
add
out
lods
scas
in
in
hlt
repnz
repz
aam
mov
shl
loope
sarl
aad
push
add
into
ret
in
rol
xlat
in
cmc
lock
in
aad
out
rol
sti
in
add
add
add
rol
out
jmp
mov
loop
call
loop
loope
mov
or
into
out
ret
in
mov
icebp
fnstenv
add
int3
pop
xlat
fmuls
loope
leave
fptan
in
lret
stos
xlat
faddp
shll
mov
mov
cmc
cli
icebp
not
add
stc
iret
add
lret
add
aad
fmul
mov
call
idivl
rcr
or
ret
call
ret
jmp
scas
call
hlt
mov
xlat
mov
pop
idivl
clc
loop
fsub
shr
ret
cli
out
not
mov
mov
push
ret
jmp
ret
in
jecxz
out
loop
xlat
mov
ror
in
iret
jmp
add
add
or
add
in
fisubrl
icebp
mov
fdivrs
iret
in
fdivp
hlt
out
jmp
loopne
xlat
fucom
hlt
call
out
mov
xlat
test
testb
lret
jmp
lock
scas
lock
into
in
cld
neg
mov
stc
add
clc
test
in
adc
ret
test
xlat
test
mov
out
cmc
cmc
add
mov
out
faddp
mov
loop
int3
int3
out
divb
in
out
clc
push
rcr
add
in
out
int
lods
repz
mov
idivl
ret
loope
add
or
lret
hlt
out
add
shl
lock
int
mov
xlat
aad
fnstsw
push
lret
fmul
lret
ljmp
shl
jmp
shll
sti
in
cli
mov
rolb
push
jecxz
mov
shlb
fcmovnu
clc
fdivrp
mov
repz
fcmovnb
in
add
ljmp
jecxz
in
leave
leave
icebp
jmp
mov
in
cmc
jecxz
push
lret
std
cli
into
in
in
mov
mov
fildl
cmc
sarl
cld
adc
jmp
loope
in
icebp
icebp
xlat
les
mov
in
loope
in
test
out
adc
int
lods
lods
rcl
cli
repz
clc
mov
shll
fcos
in
fmulp
loop
add
mov
ljmp
fildl
mov
cmc
les
jecxz
add
stc
stos
mov
loope
shll
mov
fidivrl
add
or
jmp
fsub
rcl
out
lods
xlat
cli
lret
loopne
mov
xlat
jmp
aad
int
in
mov
lods
fnstcw
fidivrl
fnop
push
ret
add
iret
enter
lret
aam
repnz
add
aad
clc
sti
lret
int
repnz
idiv
ror
repz
iret
xlat
jmp
roll
rcr
neg
pop
hlt
add
fsubr
or
fidivrs
out
jmp
fsubrp
cmc
fucomp
ret
std
xlat
ret
add
cli
stc
jmp
mov
test
fcmovnbe
cmc
out
mov
add
loope
aad
fdivr
lret
in
rcr
jmp
sar
mov
sti
mov
in
repnz
loop
add
decl
xlat
fcomp
sti
or
lods
test
test
sar
fdiv
sarl
add
jmp
ror
add
or
add
enter
fcmovnbe
fcomip
idivl
loop
lock
mov
or
adc
lret
call
clc
in
int
aad
loope
fadd
mov
aam
loope
or
shr
ffree
repnz
int3
rol
in
mov
repnz
int3
in
out
add
push
aad
roll
add
mov
mov
shl
fxtract
in
int3
ror
sar
out
in
push
or
ror
mov
iret
icebp
jecxz
iret
loopne
not
mov
jecxz
iret
aam
ret
add
dec
mov
int
out
mov
enter
mov
lea
mov
mov
mov
mov
sub
mov
mov
mov
xor
add
mov
mov
or
mov
mov
lea
mov
mov
mov
mov
sub
mov
mov
mov
mov
or
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
inc
mov
mov
sub
xor
cmp
jne
jmp
jmp
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
xor
add
mov
sub
mov
mov
mov
mov
movl
movl
mov
mov
mov
mov
mov
pushl
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
leave
ret
add
pop
or
dec
add
add
add
add
add
add
icebp
add
add
add
push
push
inc
push
mov
inc
cmp
xchg
test
sub
add
add
pop
dec
gs
insb
outsl
pop
dec
outsb
jae
jb
pop
inc
popa
je
pop
inc
imul
add
pop
or
dec
add
add
and
add
add
add
add
add
add
add
sbb
add
sbb
add
and
add
mov
incb
add
add
arpl
outsb
inc
popa
je
pop
inc
js
add
jae
outsl
ja
xor
gs
popa
addr16
jae
outsl
ja
xor
gs
popa
addr16
xor
or
adc
pop
jne
or
icebp
xchg
or
icebp
xchg
or
jne
jmp
xchg
mov
xchg
jmp
xchg
jmp
xchg
or
pop
popa
popa
ljmp
xchg
ljmp
xor
mov
popa
popa
or
out
bound
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
shll
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
shll
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
jno
popa
xchg
pop
loop
bound
adc
andb
pop
loop
bound
adc
cmp
xchg
pop
loop
bound
adc
fbld
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
inc
popa
popa
xchg
pop
loop
bound
adc
es
popa
xchg
pop
loop
bound
adc
dec
popa
popa
xchg
pop
loop
bound
adc
xor
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
inc
popa
popa
xchg
pop
jne
adc
es
popa
xchg
pop
jne
adc
dec
popa
popa
xchg
pop
jne
adc
xor
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
shll
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
mull
xchg
pop
jne
adc
movsb
popa
popa
xchg
pop
jne
adc
mov
jne
adc
outsl
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
shll
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
mull
xchg
pop
loop
bound
adc
movsb
popa
popa
xchg
pop
loop
bound
adc
mov
loop
bound
adc
outsl
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
loop
bound
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
das
popa
popa
xchg
pop
jne
adc
jae
popa
xchg
pop
jne
adc
jmp
popa
xchg
pop
jne
adc
push
popa
popa
xchg
pop
jne
adc
fbld
xchg
pop
jne
adc
jno
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
or
bound
popa
or
loop
bound
pushl
cmp
jne
dec
pushl
pushl
and
jne
mov
jne
loopne
jne
in
pushl
repz
inc
pushl
lock
and
jne
mov
jne
loopne
loop
arpl
repz
lods
arpl
xor
bound
jmp
mov
jmp
lods
arpl
notrack
das
arpl
out
jmp
mov
bound
jmp
and
or
lcall
popa
pop
loop
arpl
out
xchg
lcall
bound
outsb
push
pop
loop
arpl
fsubs
and
bound
jae
or
bound
test
popa
popa
popa
fcomps
or
bound
lea
and
lcall
popa
pop
loop
arpl
out
xchg
lcall
bound
outsb
push
pop
loop
arpl
fsubs
push
arpl
cmp
or
bound
test
popa
popa
popa
fcomps
or
bound
lea
and
lcall
popa
pop
loop
arpl
out
xchg
lcall
bound
outsb
push
pop
loop
arpl
fsubs
std
arpl
lcall
bound
push
outsb
xor
arpl
test
popa
popa
popa
fcomps
or
bound
lea
repnz
pop
loop
bound
or
bound
popa
in
push
insl
ljmp
loop
push
jmp
bound
and
out
bound
inc
xor
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
shll
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
mull
xchg
pop
loop
arpl
adc
movsb
popa
popa
xchg
pop
loop
arpl
adc
mov
loop
arpl
adc
outsl
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
or
lcall
popa
pop
loop
arpl
or
lcall
dec
push
popa
bound
popa
adc
adc
bound
or
lcall
popa
rclb
loop
arpl
rorb
bound
popa
bound
jne
bound
loop
arpl
fsubs
jecxz
bound
out
clc
cmp
testl
mov
bound
popa
or
or
pop
call
xchg
loop
xor
popa
or
lcall
popa
or
bound
popa
pop
push
or
call
out
bound
pop
fldt
popa
pop
push
bound
jmp
movsl
arpl
xor
bound
jmp
lret
arpl
fs
lret
bound
jmp
shll
out
jmp
shlb
ss
arpl
loopne
jp
popa
popa
xchg
pop
loop
pop
bound
xor
popa
popa
xchg
pop
loop
pop
bound
jecxz
popa
popa
xchg
pop
loop
pop
bound
stos
int3
popa
popa
xchg
pop
loop
pop
bound
in
popa
popa
xchg
pop
loop
pop
bound
mov
pop
loop
pop
bound
loope
popa
popa
xchg
pop
loop
pop
bound
mov
pop
loop
pop
bound
xor
popa
popa
xchg
pop
loop
pop
bound
xchg
int3
popa
popa
xchg
pop
loop
pop
bound
imul
loop
pop
bound
in
popa
popa
xchg
pop
loop
pop
bound
jo
popa
popa
xchg
pop
loop
pop
bound
push
push
popa
popa
xchg
pop
loop
pop
bound
sbb
popa
popa
xchg
pop
loop
pop
bound
sbb
loop
pop
bound
pushf
int3
popa
popa
xchg
pop
loop
pop
bound
jp
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
shll
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
add
xchg
pop
loop
arpl
adc
adc
xchg
pop
loop
arpl
adc
es
popa
xchg
pop
loop
arpl
adc
push
popa
popa
xchg
pop
loop
arpl
adc
add
xchg
pop
loop
arpl
adc
fwait
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
or
lcall
popa
pop
loop
pop
bound
xchg
lcall
bound
outsb
push
pop
loop
pop
bound
jne
test
lcall
popa
mov
bound
or
lcall
popa
or
bound
lea
fsubs
popa
fcomps
or
or
pop
call
pusha
pop
bound
dec
add
imul
or
lcall
popa
pop
loop
arpl
or
lcall
bound
adc
and
push
popa
fcomps
pop
bound
adc
int3
popa
popa
xchg
pop
loop
pop
bound
popa
xchg
pop
loop
pop
bound
pop
shll
xchg
pop
loop
pop
bound
out
shll
xchg
pop
loop
pop
bound
jmp
pop
loop
pop
bound
or
pop
loop
pop
bound
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
shll
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
adc
shll
xchg
pop
loop
arpl
adc
int3
popa
popa
xchg
pop
loop
arpl
or
lcall
sbb
popa
pop
loop
pop
bound
jne
test
lcall
popa
or
bound
or
bound
test
lcall
xor
and
or
lcall
popa
or
bound
or
bound
test
lcall
popa
or
or
outsb
int
sbb
popa
or
lcall
popa
or
or
outsb
int
xor
xchg
or
or
lcall
adc
bound
jne
test
lcall
bound
adc
and
push
popa
jo
bound
arpl
shl
jp
popa
popa
or
or
adc
push
popa
or
lcall
popa
mov
out
adc
adc
bound
or
lcall
popa
rclb
loop
arpl
shlb
xor
or
or
lcall
bound
adc
and
push
popa
jo
bound
pop
bound
repz
leave
popa
popa
or
or
adc
push
popa
adc
fbld
bound
loop
arpl
bound
out
bound
mov
bound
bound
bound
repz
xor
or
bound
push
or
call
fbld
bound
popa
adc
pop
loop
pop
bound
loop
bound
push
loop
bound
pop
loop
bound
bound
out
bound
aaa
cmp
or
lcall
popa
or
bound
popa
or
lcall
test
cmpsl
pop
mov
or
bound
popa
bound
loop
bound
or
popa
cmp
jl
loop
bound
or
popa
or
bound
loop
pop
bound
lcall
xor
push
adc
bound
loop
pop
bound
popa
or
or
or
bound
pop
bound
lcall
or
popa
or
bound
testl
bound
bound
bound
or
popa
or
adc
xchg
pop
push
movsl
or
and
lods
loop
imul
add
jne
or
or
pop
call
mov
or
lcall
popa
lock
popa
popa
lock
pop
popa
popa
or
push
outsl
or
pop
call
xchg
outsb
icebp
push
xchg
pop
jne
or
adc
jne
pop
jne
and
add
add
jne
and
add
jne
lods
loop
imul
add
jne
mov
add
jne
test
lcall
popa
or
pop
int
and
sub
add
ljmp
outsb
sbb
popa
or
lcall
outsl
or
lcall
fs
inc
dec
outsl
or
lcall
popa
or
or
pop
call
cmpsl
pop
xchg
loop
popa
popa
popa
or
sbb
jne
or
lcall
popa
pop
jne
out
cmp
jne
or
lcall
popa
mov
or
call
lcall
fmull
adc
jne
pusha
cld
dec
int3
mov
imul
pusha
xor
push
xor
or
adc
or
loop
xor
rcrb
int
pop
sub
pusha
out
adc
ljmp
jne
test
popa
popa
popa
fcomps
add
and
xor
lcall
popa
xchg
push
int
sub
or
or
pop
call
and
add
and
push
jne
sbb
and
or
call
lcall
cwtl
or
lcall
popa
or
or
pop
call
xor
test
test
lcall
jne
test
lcall
popa
or
pop
int
out
imul
leave
cmp
call
fs
lock
bound
xchg
or
lcall
popa
out
lea
lcall
popa
push
and
movsl
or
push
or
jbe
or
enter
fsubs
inc
dec
dec
pop
rcrb
push
fsubs
inc
dec
dec
pop
rcrb
or
sub
rcl
ror
sub
bound
push
popa
popa
inc
dec
adc
cmp
adc
mull
dec
lock
jo
shl
pop
popa
popa
xor
test
mov
jne
sub
pop
jne
lods
popa
repz
loop
popa
popa
popa
sbb
pop
jg
fs
ret
lcall
arpl
lcall
out
popa
popa
leave
movsb
push
popa
push
push
push
sub
mov
ret
jg
push
push
adc
int
rep
pop
popa
popa
or
fdivrs
push
push
cmpsl
call
jno
maxss
mov
fsubr
push
rcrb
dec
call
xchg
shrb
mull
call
push
sub
lods
pop
arpl
rcrl
popa
mov
lret
rol
bound
into
cmp
das
popa
out
jae
push
arpl
jb
popa
popa
mov
lods
outsl
arpl
imul
mov
lret
lods
xchg
call
or
cmp
mov
xchg
popa
popa
mov
ljmp
popa
lods
push
repz
popa
or
lods
sbb
in
push
sub
xchg
or
sub
int
or
sub
push
pop
mov
lret
sub
popa
popa
das
lcall
sbb
call
or
push
or
dec
pop
dec
push
sub
adc
fwait
imul
test
pop
repz
push
or
dec
pop
dec
push
jo
shll
adc
fwait
imull
popa
out
xchg
sub
pop
popa
popa
push
ljmp
push
sbb
repz
popa
popa
or
gs
stc
notl
popa
fdivs
cmp
imul
push
jo
rorl
sub
mov
push
popa
popa
or
popa
popa
or
gs
int
pop
int
fdivs
imul
jae
outsl
fcoms
fmul
cmp
int3
fdivs
mov
adc
pop
popa
popa
sub
xchg
cmp
jne
dec
dec
push
jne
pop
jne
out
xor
in
div
pop
popa
popa
popa
dec
out
dec
xchg
cmp
mov
jne
aaa
mov
adc
cmp
push
jne
pop
jne
pop
xchg
cmp
jo
mov
and
popa
popa
popa
and
out
xchg
ljmp
out
popa
bound
or
pop
or
sub
cmp
rorb
or
cmpsl
addr16
shll
xchg
push
xor
pop
bound
cs
popa
popa
sub
xchg
or
imul
ljmp
push
mov
mov
out
push
pop
popa
popa
popa
push
xor
imul
dec
lcall
imul
notl
repz
pop
out
cmp
stc
or
jne
sub
popa
pop
popa
popa
popa
push
mov
lcall
sbb
pop
xor
sti
or
popa
pop
lock
xchg
mov
sti
jae
or
popa
popa
sub
xchg
push
adc
mov
aaa
mov
sub
popa
push
sbb
sbb
adc
mov
mov
lret
and
jp
bound
loop
imul
bound
jne
pop
jne
or
bound
xor
call
into
bound
or
bound
xor
call
pop
or
bound
xor
call
adc
loop
bound
test
lcall
popa
pop
jne
and
lods
xor
imul
bound
jne
and
add
jne
aam
popa
popa
and
jmp
bound
popa
popa
popa
and
xchg
popa
popa
popa
and
out
bound
popa
popa
popa
and
int3
popa
popa
popa
and
fbld
bound
popa
popa
or
bound
xor
call
dec
or
bound
xor
call
jecxz
bound
pop
mov
bound
out
lea
bound
bound
and
pop
popa
popa
jae
fcomps
bound
popa
out
lea
bound
bound
and
bound
test
fcomps
bound
popa
out
lea
bound
bound
and
jae
adc
rclb
jne
sarb
loopw
repz
js
popa
out
es
or
mov
std
mov
jp
bound
or
call
pusha
or
bound
xor
call
push
fcoms
mov
popa
pop
jne
or
jb
jne
or
xchg
jne
or
mov
add
push
and
int
pop
add
push
and
int
pop
add
push
jp
bound
dec
or
pop
call
and
mov
popa
popa
cmpsl
xor
popa
or
jmp
int
or
popa
or
cltd
xchg
pop
loop
bound
adc
lcall
or
bound
adc
popa
or
adc
popa
or
bound
push
add
popa
popa
rorb
dec
push
jbe
loop
bound
ret
lea
bound
cli
jmp
xchg
bound
lock
xchg
bound
push
jmp
mov
bound
jmp
mov
out
jmp
bound
ss
jle
bound
jmp
imul
loopne
loop
bound
and
loop
bound
repz
xor
bound
loop
bound
xor
bound
jmp
test
jmp
test
bound
jmp
scas
bound
ret
sahf
bound
out
jmp
test
bound
bound
jmp
stos
bound
hlt
jmp
stos
bound
in
jmp
mov
jmp
mov
jmp
cmpsl
bound
lock
xchg
bound
ss
popf
bound
push
jmp
pushf
bound
sub
loop
bound
loopne
loop
bound
and
loop
bound
repz
andb
adc
loop
bound
xor
bound
jmp
jge
bound
jmp
jl
bound
jmp
andl
ret
sti
bound
out
jmp
jns
bound
jmp
js
bound
jmp
jg
bound
jmp
mov
in
jmp
aad
bound
jmp
aam
bound
jmp
add
lock
cmp
bound
jmp
aaa
bound
push
jmp
bound
dec
jmp
sub
jmp
arpl
and
loop
arpl
repz
in
arpl
adc
loop
arpl
xor
bound
jmp
outsl
arpl
lock
data16
and
loop
arpl
sbb
loop
arpl
fs
inc
arpl
inc
jmp
dec
arpl
lock
dec
arpl
sub
loop
arpl
loopne
sbb
and
arpl
scas
xchg
scas
mov
bound
jmp
cltd
bound
repz
cwtl
bound
adc
loop
bound
xor
bound
jmp
jne
bound
jmp
je
bound
jmp
fwait
bound
sbb
loop
bound
fs
shll
bound
loop
bound
lock
xlat
bound
dec
jmp
bound
loopne
sbb
and
bound
scas
xchg
scas
mov
bound
fcomps
bound
popa
bound
mov
or
adc
popa
popa
rep
jne
popa
rorb
and
popa
popa
bound
aas
mov
popa
bound
fsubs
popa
bound
popa
mov
jo
bound
bound
repz
and
fisttpl
popa
popa
popa
bound
fsubs
popa
bound
popa
mov
jo
bound
bound
repz
jne
popa
rorb
dec
push
xchg
pop
loop
bound
or
bound
xor
call
std
xchg
outsb
mov
popa
or
inc
bound
outsl
or
pop
call
std
sub
mov
pop
popa
popa
and
sub
bound
popa
popa
bound
mov
or
or
popa
repz
sub
popa
rorb
and
popa
popa
bound
mov
and
pop
add
popa
pop
push
and
loop
bound
shl
aam
popa
popa
rorb
add
popa
bound
jne
or
popa
lcall
jo
bound
bound
shl
dec
sub
popa
rorb
add
popa
bound
jne
or
popa
lcall
jo
bound
arpl
shl
pusha
sub
popa
rorb
add
popa
bound
jne
or
popa
lcall
fcomps
arpl
popa
fcomps
arpl
popa
out
lea
bound
bound
and
bound
jae
or
bound
dec
outsl
fsubs
test
arpl
loop
out
or
bound
dec
outsl
fsubs
cltd
enter
arpl
loop
out
fcomps
arpl
popa
out
cmp
bound
bound
shl
sahf
sub
popa
rorb
cmc
push
or
dec
push
lcall
lock
bound
dec
or
pop
call
inc
bound
test
lcall
popa
shlb
and
jne
shl
ss
popa
popa
rorb
bound
xor
call
mov
adc
shl
stc
lahf
popa
popa
shlb
cmp
bound
xor
arpl
push
loop
bound
test
lcall
outsb
push
pop
jne
fsubs
sub
bound
mov
bound
or
push
pop
jne
lock
bound
jne
cmpsl
jne
mov
jp
loop
imul
shl
cltd
jbe
popa
pop
loop
bound
out
cmpsb
or
bound
loop
pop
bound
loop
bound
test
lcall
popa
or
bound
pop
bound
push
bound
or
call
into
bound
xchg
outsb
loope
popa
popa
or
bound
xor
call
pop
xchg
outsb
mov
loop
bound
test
lcall
popa
pop
loop
arpl
out
jl
loop
bound
test
lcall
bound
outsb
push
pop
loop
arpl
or
or
bound
or
bound
or
bound
loop
pop
bound
loop
arpl
scas
inc
jo
rorl
or
bound
or
bound
out
add
mov
bound
bound
loop
arpl
and
jmp
bound
loop
imul
bound
loop
arpl
test
lcall
popa
pop
loop
arpl
or
bound
xor
call
jecxz
bound
loop
arpl
or
add
loop
arpl
daa
loop
imul
arpl
outsl
or
pop
call
xchg
outsb
add
loop
arpl
test
lcall
popa
or
bound
out
bound
or
call
mov
bound
mov
push
popa
popa
or
bound
bound
arpl
outsl
or
pop
call
dec
outsl
pop
loop
arpl
or
bound
outsl
or
pop
call
lds
loop
arpl
test
lcall
popa
pop
loop
arpl
or
bound
xor
call
into
arpl
xchg
mov
arpl
or
bound
outsl
or
pop
call
xchg
outsb
add
popa
or
bound
loop
arpl
or
bound
fbld
bound
loop
arpl
and
sub
bound
loop
imul
bound
loop
arpl
mov
add
loop
arpl
and
add
loop
arpl
and
loop
arpl
test
lcall
popa
pop
loop
arpl
adc
fisubl
bound
loop
arpl
adc
inc
arpl
pop
loop
arpl
or
bound
bound
popa
or
bound
popa
pop
loop
imul
loop
imul
bound
loop
arpl
or
bound
xor
call
mov
bound
mov
arpl
or
bound
xchg
lret
bound
xor
call
mov
bound
mov
arpl
test
lcall
bound
push
outsb
lcall
fisubl
outsl
or
lcall
adc
pusha
add
cmpsl
arpl
sbb
cmpsl
arpl
or
outsl
or
pop
call
mov
bound
mov
arpl
add
mov
bound
xor
call
mov
bound
mov
arpl
or
bound
xchg
lret
bound
xor
call
mov
bound
mov
arpl
test
lcall
bound
push
outsb
lcall
inc
arpl
outsl
or
lcall
adc
pusha
add
cmpsl
arpl
sbb
cmpsl
arpl
or
outsl
or
pop
call
mov
bound
mov
arpl
add
mov
bound
xor
call
mov
outsl
or
pop
call
pop
push
loop
arpl
pop
loop
arpl
lock
bound
loop
arpl
test
lcall
bound
outsl
or
pop
call
cmpsb
arpl
or
dec
or
pop
call
xchg
outsl
adc
pop
call
out
bound
outsl
or
fbld
bound
outsb
push
pop
loop
arpl
out
jl
loop
arpl
test
lcall
bound
outsb
push
pop
loop
arpl
lock
bound
loop
bound
test
lcall
popa
pop
loop
arpl
bound
bound
repz
loop
arpl
or
lcall
popa
rorb
bound
xor
call
or
bound
bound
xor
call
jne
or
popa
adc
bound
loop
bound
test
lcall
popa
cmpsl
loop
arpl
out
bound
dec
arpl
bound
adc
bound
mov
bound
into
bound
repz
popa
popa
or
lcall
popa
rorb
bound
xor
call
or
bound
or
dec
push
mov
bound
loop
bound
or
bound
jne
or
bound
loop
arpl
or
bound
xor
call
sbb
bound
loop
arpl
inc
jmp
hlt
arpl
dec
jmp
jmp
bound
loop
arpl
sub
loop
arpl
inc
jmp
push
arpl
adc
loop
arpl
inc
jmp
dec
arpl
sbb
loop
bound
pop
loop
arpl
out
aaa
or
bound
or
outsl
or
lcall
lcall
bound
and
loop
imul
arpl
test
lcall
bound
push
outsb
push
or
outsl
or
adc
outsl
fsubs
popa
fcomps
lcall
mov
bound
xor
call
sbb
bound
xor
insl
bound
or
bound
xor
call
sbb
bound
outsb
fcompl
popa
or
bound
push
arpl
and
outsb
arpl
lods
loop
imul
bound
adc
adc
bound
loop
arpl
and
add
loop
arpl
test
lcall
popa
rorb
bound
xor
call
loop
arpl
test
lcall
popa
rorb
bound
xor
call
jne
or
popa
add
bound
bound
xor
call
loop
arpl
test
lcall
popa
shlb
push
arpl
or
bound
xor
call
jne
or
popa
and
bound
loop
arpl
test
lcall
popa
cmpsl
loop
arpl
out
or
bound
xor
call
and
bound
xor
mov
popa
popa
and
cmc
arpl
and
add
loop
arpl
mov
add
loop
arpl
test
lcall
popa
or
bound
or
bound
xor
call
add
bound
push
bound
or
call
add
bound
pop
fcomps
arpl
popa
fcomps
arpl
popa
fcomps
arpl
popa
adc
bound
push
arpl
bound
and
bound
loop
arpl
rorb
bound
xchg
fcomps
shlb
add
bound
loop
arpl
or
lcall
popa
rorb
bound
xor
call
or
arpl
or
dec
push
mov
bound
pop
call
lcall
imul
cmp
call
loop
arpl
test
lcall
popa
shlb
into
bound
or
dec
push
mov
bound
loop
bound
or
bound
jne
out
test
or
call
loop
arpl
test
lcall
popa
shlb
and
bound
jne
or
popa
mov
pusha
pop
bound
loop
bound
pop
loop
pop
bound
loop
arpl
lods
loop
imul
bound
loop
arpl
test
lcall
popa
pop
loop
arpl
or
bound
xor
call
jbe
bound
loop
arpl
or
add
loop
arpl
daa
loop
imul
arpl
outsl
or
pop
call
xchg
outsb
add
loop
arpl
test
lcall
popa
or
bound
xchg
arpl
test
lcall
popa
or
bound
mov
push
popa
popa
or
bound
bound
arpl
outsl
or
pop
call
dec
outsl
pop
loop
arpl
or
bound
outsl
or
pop
call
lds
loop
arpl
test
lcall
popa
pop
loop
arpl
or
bound
xor
call
lcall
pop
adc
bound
loop
arpl
or
outsl
or
pop
call
xchg
outsb
add
popa
or
bound
loop
pop
bound
loop
pop
bound
loop
arpl
pop
loop
pop
bound
loop
pop
bound
loop
imul
bound
loop
pop
bound
loop
imul
bound
loop
imul
bound
loop
pop
bound
or
call
popa
arpl
adc
fs
bound
loop
pop
bound
loop
arpl
pop
loop
pop
bound
loop
pop
bound
loop
arpl
xchg
fdivrs
loop
pop
bound
popa
pop
loop
imul
loop
imul
bound
loop
pop
bound
loop
pop
bound
or
call
popa
arpl
xchg
mov
pop
bound
in
pop
bound
xchg
push
pop
bound
or
call
popa
arpl
xchg
mov
pop
bound
or
sub
xchg
push
outsb
lcall
fs
bound
outsl
or
lcall
adc
bound
pusha
add
dec
pop
bound
loop
pop
bound
adc
bound
outsl
or
pop
call
popa
arpl
xchg
mov
pop
bound
testl
lcall
popa
or
bound
push
pop
bound
in
pop
bound
xchg
push
pop
bound
or
call
popa
arpl
xchg
mov
pop
bound
or
sub
xchg
push
outsb
lcall
mull
outsl
or
lcall
adc
bound
pusha
add
dec
pop
bound
loop
pop
bound
adc
bound
outsl
or
pop
call
popa
arpl
xchg
mov
pop
bound
testl
lcall
popa
or
outsl
or
pop
call
pop
push
loop
arpl
pop
loop
arpl
lock
bound
loop
arpl
test
lcall
bound
outsl
or
pop
call
pop
pop
bound
or
bound
dec
or
pop
call
xchg
outsl
adc
pop
call
xchg
arpl
outsl
or
sti
arpl
adc
pop
call
sti
arpl
out
jl
loop
arpl
test
lcall
bound
outsb
push
pop
loop
arpl
lock
bound
mov
or
dec
push
and
or
stc
push
or
sbb
popa
popa
bound
mov
bound
into
bound
repz
jbe
popa
pop
jne
or
bound
xor
call
into
bound
out
or
lcall
popa
rorb
bound
xor
call
or
bound
or
dec
push
mov
mov
movsl
or
jne
pop
jne
or
pushf
xchg
mov
ljmp
mov
lcall
push
jmp
xchg
or
popa
popa
popa
movsb
and
lods
loop
imul
add
jne
pop
jne
or
or
popa
popa
or
or
popa
popa
or
cltd
xchg
pop
jne
or
lcall
popa
pop
jne
or
lcall
popa
pop
jne
or
rcr
xrelease
jne
or
stos
fimull
mov
stc
or
pop
or
mov
cltd
stos
pop
loop
bound
out
xchg
mov
bound
loop
bound
pop
jne
or
lcall
popa
pop
jne
or
lcall
popa
pop
jne
or
lcall
popa
or
and
and
jne
mov
add
jne
and
add
jne
and
add
jne
test
lcall
popa
or
pusha
or
lcall
outsb
xchg
pop
call
xchg
fdiv
mull
or
lcall
popa
pop
jne
or
mov
jne
bound
bound
popa
popa
pop
jne
and
fbld
bound
add
loop
bound
test
lcall
popa
rclb
jne
shl
cli
cmpsb
popa
popa
fsubr
add
out
loop
bound
test
lcall
popa
shlb
add
jne
shl
jae
popa
popa
or
out
bound
jne
or
bound
bound
or
bound
xchg
xchg
cmpsl
pop
call
or
add
lcall
sub
pop
jne
lock
bound
jo
bound
shl
push
popa
popa
and
jmp
bound
loop
imul
bound
jne
mov
add
jne
and
add
loop
bound
pop
jne
adc
out
bound
loop
bound
adc
pop
jne
adc
pop
jne
or
lcall
popa
pop
jne
and
jp
bound
loop
imul
bound
test
lcall
outsl
or
lcall
lcall
bound
jne
or
or
pop
call
xchg
loop
pop
popa
popa
and
bound
loop
imul
test
lcall
popa
pop
jne
or
bound
or
push
pop
jne
or
and
outsl
or
pop
call
mov
or
lcall
popa
shlb
adc
shl
lcall
or
leave
cmp
call
or
outsl
or
pop
call
out
or
bound
leave
cmp
call
or
outsl
or
pop
call
out
or
test
lcall
xor
int
outsl
or
pop
call
out
or
test
lcall
xor
int
outsl
or
pop
call
mov
or
lcall
popa
pop
jne
lock
popa
or
test
lcall
ret
popa
or
outsl
or
adc
or
or
jmp
popa
or
bound
lcall
xor
es
dec
cmpsl
pop
xchg
loop
push
jecxz
bound
popa
test
lcall
ret
popa
or
outsl
or
adc
or
bound
lcall
xor
mov
or
lcall
xor
es
dec
cmpsl
pop
xchg
loop
popa
popa
popa
or
test
lcall
ret
popa
or
outsl
or
adc
or
or
jmp
popa
or
dec
or
or
scas
es
dec
cmpsl
pop
mov
or
test
lcall
ret
popa
or
bound
lcall
xor
movsl
cmc
or
lcall
xor
mov
or
lcall
xor
es
dec
cmpsl
pop
out
or
lcall
popa
pop
jne
out
sti
jo
adc
shl
jno
popa
popa
cmpsl
jne
out
or
lcall
popa
pop
jne
lock
bound
jne
or
or
pop
call
mov
or
lcall
outsb
push
pop
jne
lock
bound
bound
shl
sbb
popa
popa
or
lcall
popa
cmpsl
jne
out
or
lcall
popa
shlb
adc
shl
mov
bound
jne
fcomps
pop
jne
bound
or
dec
shl
roll
popa
popa
or
lcall
popa
cmpsl
jne
out
jo
bound
push
jne
shl
jl
bound
jne
pop
loop
bound
or
bound
or
bound
lcall
pop
jne
lock
bound
jne
mov
movsl
or
jne
pop
jne
or
mov
ljmp
imul
sbb
push
dec
or
negl
or
adc
and
add
popa
or
lcall
popa
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
adc
inc
popa
popa
xchg
pop
jne
adc
es
popa
xchg
pop
jne
adc
dec
popa
popa
xchg
pop
jne
adc
xor
xchg
pop
jne
adc
int3
popa
popa
xchg
pop
jne
or
lcall
outsl
or
lcall
mov
outsl
or
lcall
mov
outsl
or
lcall
fisttpl
lcall
popa
or
or
adc
dec
push
popa
or
or
or
rclb
outsb
adc
dec
push
popa
or
lcall
popa
or
or
mov
or
mov
into
popa
pop
sub
outsb
or
lcall
popa
or
or
mov
or
mov
into
popa
or
or
mov
test
pop
sub
outsb
adc
rorb
lcall
popa
rorb
popa
popa
popa
rorb
cmc
push
bound
pop
push
int
or
jne
or
pop
lcall
leave
cmp
or
lcall
mov
outsl
or
lcall
mov
outsl
or
lcall
fisttpl
or
or
adc
dec
push
popa
or
or
or
rclb
outsb
adc
dec
push
popa
or
lcall
popa
or
or
mov
or
mov
into
popa
pop
sub
outsb
or
lcall
outsl
or
lcall
mov
outsl
or
lcall
imul
jne
rorb
lcall
popa
rorb
popa
popa
popa
rorb
cmc
push
bound
or
lcall
popa
pop
loop
bound
out
xchg
lcall
bound
outsb
push
pop
loop
bound
or
or
bound
or
or
jecxz
bound
in
bound
sbb
sub
or
push
cltd
xchg
or
or
or
push
std
popa
popa
popa
pop
loop
bound
or
or
or
or
or
push
cltd
cmp
jne
or
lcall
popa
pop
jne
or
bound
out
bound
xchg
or
bound
out
bound
jne
test
lcall
popa
mov
bound
popa
or
lcall
popa
pop
loop
bound
out
lea
bound
bound
loop
bound
fdiv
lcall
bound
fsubs
popa
popa
popa
or
bound
bound
or
or
pop
call
xchg
or
pop
call
jg
pop
loop
bound
or
bound
bound
pop
imul
out
bound
pop
call
lcall
imul
bound
rorl
or
bound
bound
fcoms
or
or
bound
bound
push
pop
pop
loop
bound
or
or
bound
or
bound
push
bound
out
bound
jne
or
sti
or
popa
popa
popa
call
loop
bound
push
loop
bound
pop
loop
bound
lock
bound
jne
test
lcall
outsl
or
lcall
mov
outsl
or
lcall
mov
outsl
or
lcall
fisttpl
jle
outsl
or
adc
dec
push
popa
or
or
or
rclb
outsb
adc
dec
push
popa
or
lcall
popa
or
or
mov
or
mov
into
popa
pop
sub
outsb
or
lcall
outsl
or
lcall
mov
outsl
or
lcall
imul
jne
rorb
lcall
popa
rorb
popa
popa
popa
rorb
cmc
push
bound
or
popa
pop
jne
or
push
jne
pop
jne
or
jbe
xchg
pop
lcall
popa
movsl
or
jne
pop
jne
or
push
sub
imul
imul
or
lcall
nop
loopne
jne
jmp
xchg
or
jbe
fisttpl
popa
popa
or
or
lcall
popa
cmpsl
jne
mov
clc
pushf
xchg
mov
mov
lock
popa
popa
popa
or
or
or
pop
call
out
bound
bound
bound
test
int
pop
push
lcall
pop
call
xchg
outsl
or
pop
call
mov
clc
inc
xor
fsub
sbb
push
imul
inc
xor
fsubr
test
jne
test
lcall
popa
mov
clc
mov
and
jmp
mov
xchg
clc
inc
addr16
scas
aad
fs
enter
lahf
scas
push
and
fsubs
jne
test
lcall
popa
or
or
jmp
int
or
popa
or
cltd
xchg
pop
jne
or
dec
push
jle
jne
jo
jp
jb
popa
or
shlb
bound
pop
push
or
call
push
bound
shlb
jle
mov
bound
repz
bound
jne
or
outsl
or
pop
call
out
or
lcall
popa
xchg
mov
xchg
pop
push
movsl
or
and
lods
loop
imul
add
jne
test
lcall
popa
pop
jne
or
imul
mov
bound
shlb
imul
repz
popa
pop
jne
or
xchg
or
bound
mov
repz
bound
jne
jmp
bound
jp
pop
loop
repz
dec
bound
jne
jmp
xchg
bound
loop
repz
push
xchg
mov
xchg
bound
mov
repz
and
or
pop
sbb
xchg
bound
sarb
repz
mov
or
lods
loop
imul
jbe
mov
bound
bound
repz
bound
or
lock
ljmp
aam
mov
add
mov
bound
bound
bound
bound
int
pop
push
popa
ljmp
aam
and
add
mov
bound
bound
bound
bound
int
pop
push
popa
ljmp
aam
and
add
mov
bound
bound
bound
bound
int
pop
push
popa
ljmp
andl
bound
bound
bound
fldenv
popa
ljmp
jg
sub
add
mov
bound
bound
bound
bound
int
pop
push
sti
sub
add
jg
push
loop
imul
bound
bound
repz
arpl
or
out
cs
ljmp
jns
daa
loop
imul
bound
bound
repz
bound
or
mov
or
jne
pop
jne
or
push
ds
cmp
ljmp
cmp
cmp
or
push
jmp
xchg
or
jne
lods
pop
add
jne
or
popa
or
pop
lcall
push
xchg
popa
or
jne
or
popa
or
jmp
xchg
or
pop
jne
or
mov
outsl
or
pop
call
out
or
pusha
push
and
and
fsubs
jne
lods
or
imul
add
jne
and
add
jne
mov
add
jne
lods
xor
imul
cmp
jne
or
popa
pop
jne
or
or
popa
popa
pop
jne
or
adc
popa
pop
jne
or
or
or
pop
call
mov
bound
repz
bound
or
or
push
cltd
xchg
pop
jne
or
lcall
popa
or
xchg
loop
popa
popa
popa
or
pop
jne
adc
shlb
pop
bound
bound
bound
bound
adc
rclb
jne
shlb
lcall
bound
repz
pop
bound
jne
bound
bound
bound
jne
pop
jne
or
dec
pop
jne
or
jmp
jne
or
or
popa
popa
pop
jne
or
adc
popa
pop
jne
or
or
call
or
or
or
push
sub
rorb
jae
or
stc
or
or
sub
push
push
push
lea
lcall
popa
push
and
popa
movsl
or
or
dec
or
or
popa
popa
fsubrs
ljmp
xchg
cmp
popa
popa
or
or
popa
popa
or
or
popa
popa
or
cltd
xchg
pop
jne
or
add
popa
popa
popa
out
or
adc
popa
xchg
out
or
sahf
cmpsl
jne
mov
scas
sbb
lock
popa
fcoms
dec
popa
fcoms
push
popa
fcoms
pop
popa
fcoms
pop
popa
fcoms
dec
or
popa
or
pop
int
or
popa
popa
popa
pop
jne
or
lcall
jne
pop
jne
or
xchg
pop
jne
fcoms
or
jne
or
lcall
xchg
repnz
xchg
repnz
pusha
xchg
fsubs
popa
popa
or
not
bound
fdivl
jne
or
bound
push
jne
pop
jne
or
not
bound
fmull
push
fcoms
or
jne
or
lcall
xchg
repnz
xchg
repnz
stc
xchg
fcoms
popa
popa
popa
or
not
bound
fdivl
jne
or
bound
push
jne
pop
jne
or
not
bound
fmull
push
fcoms
or
jne
or
lcall
xchg
repnz
xchg
repnz
sbb
mov
mull
orl
pop
int
or
push
jne
or
out
repnz
bound
lock
bound
xchg
or
or
cmp
jne
or
popa
fsubrs
ljmp
lock
push
cmp
fisttpl
popa
popa
or
or
popa
popa
or
cltd
xchg
pop
jne
or
jecxz
mov
scas
sbb
lock
popa
or
jecxz
jne
or
lcall
jne
or
sbb
lcall
or
lcall
or
lcall
fcoms
dec
popa
or
stc
or
mov
xchg
or
jle
jne
out
xchg
or
mov
jne
or
pop
fcoms
or
jne
or
pop
xchg
fcoms
popa
popa
popa
or
sbb
fidivrl
jl
jne
or
lcall
or
repz
repnz
cmp
sub
pop
fcoms
out
lods
or
pop
or
pop
movsl
imul
or
stc
lds
jne
or
mull
or
pop
or
imul
sub
sub
sbb
ljmp
out
lcall
sbb
push
and
fsubs
jne
lods
loop
imul
add
jne
pop
jne
or
lcall
popa
pop
jne
and
push
out
enter
cmp
or
call
repz
lcall
popa
pop
jne
or
lcall
popa
pop
jne
or
lcall
popa
pop
jne
or
lcall
popa
pop
jne
and
push
out
enter
cmp
or
call
sbb
popa
cmpsl
push
cmp
or
call
xchg
rorl
push
sbb
popa
or
cltd
xchg
pop
jne
or
lcall
popa
or
popa
out
or
lcall
pop
int
out
mov
lcall
popa
lock
popa
out
mov
lcall
popa
lock
popa
and
lods
loop
imul
xor
test
test
lcall
jne
test
lcall
popa
pop
jne
or
dec
out
or
jle
int
outsl
or
pop
call
pop
mov
or
jle
int
outsl
or
pop
call
pop
mov
outsb
inc
pop
popa
popa
or
lcall
popa
pop
jne
or
lcall
popa
pop
jne
or
jle
jne
pop
jne
or
lcall
or
lcall
popa
pop
jne
or
lcall
popa
or
out
or
lcall
jne
test
lcall
roll
call
lcall
pop
jne
or
sub
add
mov
or
dec
push
pop
jne
or
lcall
popa
cmpsl
jne
mov
bound
or
popa
imul
xchg
fcoml
jne
pop
jne
or
cmc
add
jne
test
lcall
popa
cmpsl
jne
mov
or
lcall
outsb
push
pop
jne
or
lcall
popa
xchg
mov
jne
or
popa
cmp
or
call
imul
cmp
call
push
xchg
mov
bound
or
lcall
popa
cmpsl
jne
mov
or
lcall
outsb
push
pop
jne
lock
popa
and
pusha
xchg
push
xor
mov
lcall
popa
pop
jne
out
imul
leave
cmp
push
pop
jne
or
lcall
popa
or
xor
cmp
popa
or
lcall
popa
pop
jne
or
lcall
popa
pop
jne
or
lcall
popa
cmpsl
jne
out
or
repz
or
xor
lods
or
lcall
popa
cmpsl
jne
out
or
lcall
popa
or
popa
popa
popa
fisttpl
xchg
inc
cmpsl
pop
out
or
bound
xchg
repnz
bound
or
popa
lcall
jne
push
jne
pop
jne
or
shlb
imul
lcall
test
lcall
popa
cmpsl
jne
mov
or
lcall
outsb
push
pop
jne
out
jbe
jne
test
lcall
popa
or
pop
or
xor
negl
lock
arpl
lock
bound
lcall
popa
mov
or
lcall
popa
pop
jne
out
xchg
or
lcall
popa
pop
jne
or
xchg
or
and
lods
loop
imul
add
jne
pop
jne
or
test
lcall
popa
mov
mov
popa
popa
or
lcall
and
sub
add
jne
test
lcall
outsl
or
pop
call
xor
add
push
xor
std
popa
popa
popa
pop
int
or
xor
repz
lcall
popa
mov
sahf
push
imul
popa
pop
jne
and
and
add
jne
or
push
out
xchg
or
notl
jne
or
lcall
popa
mov
gs
popa
popa
or
lcall
popa
pop
jne
out
cmp
jne
or
lcall
fdiv
popa
popa
popa
or
sbb
aad
xchg
popa
popa
pop
jne
or
or
lcall
lcall
jne
or
sub
lcall
or
lcall
outsb
push
pop
jne
or
cmp
outsl
or
pop
call
out
out
fucomi
aaa
or
cmp
outsl
or
pop
call
mov
or
sbb
jne
or
or
lock
bound
push
pop
jne
or
fs
outsl
or
xor
add
mov
push
pop
jne
lock
arpl
or
lcall
popa
out
lea
lcall
popa
push
and
fs
push
mov
loop
imul
add
jne
test
lcall
popa
pop
jne
or
lcall
popa
pop
jne
or
and
jne
pop
jne
or
or
or
or
xor
sarb
pop
push
jne
or
or
or
or
xor
int
pop
push
jne
or
or
or
or
xor
mov
pop
push
jne
or
or
or
or
xor
addr16
cmp
and
ret
imul
cmp
ljmp
mov
jbe
jne
xchg
repnz
or
or
pop
call
push
cmpsl
pop
out
scas
sbb
insb
xchg
popa
popa
or
lcall
popa
pop
jne
or
lcall
popa
pop
jne
or
lcall
or
rclb
jne
fsubr
dec
popa
mov
scas
sbb
cmpsb
xchg
popa
popa
and
lods
loop
imul
and
jne
test
lcall
popa
or
or
lcall
popa
pop
jne
or
or
popa
popa
or
or
popa
popa
or
cltd
xchg
pop
jne
or
mov
adc
mov
jne
or
lcall
popa
pop
jne
or
adc
popa
or
or
adc
popa
or
mov
adc
rorb
lcall
popa
rorb
shlb
sbb
dec
push
jbe
jne
or
shrb
jne
or
mov
popa
popa
or
jmp
int
pop
lcall
bound
repz
or
xchg
pop
int
or
mov
adc
mov
jne
or
mov
outsl
or
pop
call
xchg
outsb
cmp
popa
popa
or
lcall
popa
pop
jne
out
jl
jne
test
lcall
outsb
push
pop
jne
or
cmp
jne
or
mov
outsl
or
pop
call
mov
or
jne
or
int
jg
lcall
mov
or
lcall
pop
loop
arpl
out
xchg
lcall
bound
xchg
bound
sbb
xchg
repz
test
lcall
popa
or
xchg
mov
lock
or
xchg
or
lcall
xor
xchg
repz
popa
popa
lock
bound
adc
popa
or
mov
adc
rorb
lcall
popa
rorb
mov
jne
or
popa
mov
lock
popa
popa
lock
cmp
or
pusha
push
test
lcall
popa
xchg
outsb
gs
popa
popa
adc
imul
arpl
or
lcall
popa
or
bound
push
bound
loop
imul
bound
imul
bound
add
loop
bound
stc
loop
imul
stc
loop
imul
bound
pop
dec
arpl
popa
out
lea
bound
bound
and
bound
jae
or
bound
bound
or
call
dec
arpl
xchg
pop
outsb
int
arpl
out
adc
bound
loop
imul
bound
add
loop
bound
and
add
loop
bound
arpl
add
loop
bound
cmp
loop
bound
jmp
add
loop
bound
cmp
add
loop
bound
add
loop
bound
jmp
add
loop
bound
dec
loop
imul
bound
loop
imul
bound
add
loop
bound
arpl
add
loop
bound
pop
loop
imul
bound
loop
imul
bound
add
loop
bound
cmp
add
loop
bound
cmp
add
loop
bound
and
add
loop
bound
dec
loop
imul
bound
add
loop
bound
push
loop
imul
bound
pop
cmp
bound
out
lea
bound
bound
and
bound
jae
or
bound
bound
or
call
cmp
bound
sub
fucomi
and
loop
arpl
rorb
dec
push
notl
loop
bound
adc
pop
loop
bound
adc
shlb
popa
bound
or
dec
push
lcall
pop
push
bound
or
adc
popa
bound
jne
bound
loop
arpl
pop
loop
arpl
or
lcall
popa
or
bound
push
or
call
imul
popa
popa
popa
adc
push
arpl
pop
loop
arpl
or
bound
bound
lcall
push
imul
cmpsl
lcall
bound
adc
bound
xchg
pop
lcall
mov
bound
pusha
or
adc
popa
or
bound
mov
or
or
popa
popa
or
push
cltd
cmp
bound
cltd
jbe
jne
test
lcall
popa
or
bound
push
or
popa
popa
fcomps
arpl
popa
and
mov
loop
imul
bound
imul
bound
add
loop
arpl
stc
loop
imul
stc
loop
imul
bound
pop
mov
bound
lea
bound
bound
and
jae
or
bound
bound
or
call
mov
bound
bound
adc
bound
loop
imul
bound
add
loop
arpl
and
add
loop
arpl
arpl
add
loop
arpl
cmp
loop
arpl
jmp
add
loop
arpl
cmp
add
loop
arpl
add
loop
arpl
jmp
add
loop
arpl
dec
loop
imul
bound
loop
imul
bound
add
loop
arpl
arpl
add
loop
arpl
pop
loop
imul
bound
loop
imul
bound
add
loop
arpl
cmp
add
loop
arpl
cmp
add
loop
arpl
and
add
loop
arpl
dec
loop
imul
bound
add
loop
arpl
push
loop
imul
bound
pop
sti
arpl
popa
out
lea
bound
bound
and
arpl
mov
or
bound
bound
or
call
sti
arpl
add
lea
bound
stc
adc
cmpsb
arpl
rorb
dec
push
notl
loop
arpl
adc
adc
bound
bound
xchg
arpl
or
dec
push
lcall
adc
stos
arpl
rorb
adc
popa
bound
in
arpl
fcomps
arpl
popa
fsubs
stos
arpl
popa
out
or
bound
loop
arpl
or
adc
popa
or
bound
out
or
bound
arpl
or
bound
bound
dec
or
adc
popa
or
bound
mov
or
or
popa
popa
or
push
cltd
cmp
bound
cltd
jbe
loop
arpl
push
mov
bound
repz
xor
loop
mov
lock
lock
bound
bound
bound
sbb
nop
lock
popa
lock
popa
bound
bound
bound
sbb
nop
lock
popa
popa
lock
popa
popa
popa
bound
repz
lock
popa
popa
popa
lock
popa
popa
popa
or
adc
popa
or
mov
adc
shlb
sub
mov
jne
or
popa
and
popa
or
leave
cmp
call
or
sbb
cmp
adc
loop
arpl
lods
pop
add
loop
arpl
test
lcall
popa
or
shrl
pusha
or
fisubrl
mov
bound
in
arpl
pop
jne
or
pop
push
add
mov
sbb
cmp
adc
in
arpl
pop
jne
or
jbe
push
popa
popa
popa
fsubr
cmp
mov
fcoms
sbb
jbe
movsl
or
jne
xchg
repnz
adc
mov
jne
fcoms
or
jne
or
mov
jae
or
xchg
xchg
or
xchg
xchg
lcall
jne
out
lea
cmp
jne
out
sbb
xchg
or
and
lods
loop
imul
add
jne
mov
add
jne
inc
loop
imul
add
jne
dec
loop
imul
add
jne
pop
jne
or
lcall
jne
or
xchg
lcall
leave
cmp
call
dec
xchg
outsb
ss
popa
popa
or
lcall
popa
mov
dec
pop
popa
popa
or
lcall
popa
pop
jne
or
lcall
popa
pop
jne
adc
pop
jne
or
lcall
popa
xchg
repnz
int
outsl
or
pop
call
push
sub
dec
or
dec
xchg
or
jne
or
pop
xchg
or
jne
xchg
bnd
or
or
pop
call
push
cmpsl
pop
mov
or
lcall
popa
or
pusha
pop
int
lock
push
jne
or
or
pop
call
push
cmpsl
pop
mov
or
lcall
outsb
push
pop
jne
lock
popa
popa
or
or
or
pop
call
xchg
outsb
or
popa
xchg
bnd
xchg
repnz
cmpsl
pop
xchg
outsb
add
popa
xchg
bnd
or
or
pop
call
push
cmpsl
pop
fistpll
xchg
bnd
or
or
pop
call
push
cmpsl
pop
fmull
repnz
push
pusha
xchg
pop
int
xchg
bnd
or
or
pop
call
push
cmpsl
pop
fistpll
xchg
bnd
or
or
pop
call
push
cmpsl
pop
fmull
repnz
push
pusha
xchg
pop
int
xchg
bnd
xchg
repnz
cmpsl
pop
out
or
lcall
popa
lock
push
xchg
bnd
xchg
repnz
cmpsl
pop
out
or
lcall
popa
lock
popa
or
lcall
outsb
push
pop
jne
or
lcall
outsb
push
pop
jne
lock
jne
pop
jne
or
call
lcall
push
jne
or
call
lcall
push
or
call
sbb
outsl
or
pop
call
pop
or
imull
pop
call
lcall
outsl
or
pop
call
sbb
or
pop
call
dec
or
xchg
test
outsl
or
mov
or
lcall
popa
or
or
pop
call
pop
or
imull
pop
call
lcall
xchg
or
lcall
popa
out
lea
lcall
popa
push
and
leave
leave
and
das
loop
imul
add
jne
test
lcall
repnz
cltd
dec
sbb
popa
xor
repnz
or
popa
popa
xchg
repnz
xor
popa
popa
out
or
lcall
repnz
cltd
dec
sbb
popa
xor
repnz
or
popa
popa
xchg
repnz
mov
cmp
push
or
lcall
leave
cmp
jne
out
add
loop
imul
push
test
lcall
outsb
cltd
imul
mull
or
jne
das
loop
imul
add
mov
repz
bound
pop
jne
or
lcall
push
outsb
cltd
dec
sbb
popa
fdiv
lcall
popa
popa
xchg
push
sbb
imul
imul
repnz
cltd
dec
sbb
popa
xor
repnz
or
popa
popa
xchg
repnz
lret
int3
popa
popa
mov
or
push
or
lcall
leave
cmp
jne
out
adc
ljmp
rorl
lcall
popa
or
adc
or
lcall
repnz
cltd
dec
sbb
popa
test
sbb
xor
cmpsl
popa
popa
or
or
lcall
into
popa
or
mull
or
jne
das
loop
imul
add
mov
repz
jne
or
lcall
repnz
cltd
dec
sbb
popa
xor
repnz
or
popa
popa
xchg
repnz
xor
popa
popa
out
or
lcall
repnz
cltd
dec
sbb
popa
xor
repnz
or
popa
popa
xchg
repnz
lret
int3
popa
popa
mov
or
push
or
lcall
leave
cmp
jne
out
add
loop
imul
out
pop
scas
sbb
and
popa
movsl
or
lcall
xchg
repnz
xor
repnz
or
popa
popa
xchg
repnz
xor
popa
popa
out
or
xchg
or
pop
jne
or
pop
jne
out
hlt
scas
sbb
int
xchg
pop
push
and
fsubs
jne
lods
loop
imul
add
jne
test
lcall
popa
pop
jne
and
adc
add
jne
and
add
jne
mov
add
jne
test
lcall
outsb
push
or
or
pop
call
xchg
xchg
mov
fsubr
popa
popa
popa
or
imul
leave
cmp
pop
pop
call
lds
jne
push
jne
or
imul
testl
int
adc
pop
call
imul
or
imul
leave
cmp
pop
pop
call
lds
or
imul
lcall
leave
cmp
push
pop
jne
out
or
imul
leave
cmp
pop
pop
call
lds
or
imul
xchg
pop
lcall
leave
cmp
push
pop
jne
out
mov
imul
lcall
imul
push
and
fsubs
jne
lods
loop
imul
add
jne
test
lcall
popa
mov
or
lcall
popa
or
pop
int
adc
pop
jne
or
call
lcall
push
or
call
xor
outsl
or
lcall
popa
out
or
lcall
sahf
pop
popa
popa
and
sub
lods
loop
imul
bound
jne
pop
loop
pop
bound
loop
pop
bound
or
call
lcall
bound
or
call
push
sub
test
lcall
popa
cmpsl
jne
mov
or
bound
xor
call
push
push
pop
loop
pop
bound
loop
pop
bound
adc
pop
bound
lcall
pop
jne
or
xchg
lcall
test
lcall
popa
pop
loop
pop
bound
mov
repz
bound
loop
pop
bound
jne
or
repz
bound
jne
fcomps
mov
bound
popa
or
fdiv
lcall
or
bound
cmp
push
bound
loop
pop
bound
or
bound
mov
repz
push
bound
loop
pop
bound
or
call
dec
pop
bound
lcall
bound
loop
pop
bound
or
call
or
bound
mov
repz
bound
outsl
or
pop
call
mov
or
bound
or
bound
pop
bound
shlb
bound
bound
xor
call
xchg
or
or
imul
cmp
ljmp
lock
sbb
pop
jne
fcoms
mov
popa
popa
and
fisubs
popa
scas
sbb
pop
jne
out
xchg
sbb
xchg
pop
jne
xchg
bnd
or
sar
outsl
or
popa
popa
pop
mov
repnz
cmpsl
pop
xchg
adc
popa
popa
popa
xchg
bnd
or
sub
pop
xchg
repnz
lock
repnz
outsl
or
popa
popa
xchg
repnz
cmpsl
pop
out
out
mov
or
not
popf
xor
popa
popa
mov
xchg
bnd
or
imull
sbb
jb
bnd
or
not
xchg
repnz
or
push
xchg
lock
repnz
outsl
or
popa
popa
xchg
repnz
cmpsl
pop
mov
and
loope
popa
popa
or
jne
out
mov
cmp
jne
loopne
popa
popa
lock
bound
xchg
bnd
or
imull
sbb
pop
out
xchg
sbb
xchg
pop
jne
fsubr
push
loopne
imull
dec
arpl
xchg
bnd
xor
repnz
or
popa
popa
xchg
repnz
int
xchg
repnz
cmpsl
pop
out
scas
sbb
push
scas
sbb
push
and
fsubs
jne
pop
jne
or
and
popa
popa
fsubrs
jne
test
lcall
popa
lock
popa
popa
jo
bound
bound
jne
pop
jne
or
js
jne
or
sub
jne
or
xchg
pop
jne
or
popa
popa
popa
pop
jne
or
popa
popa
popa
pop
jne
or
popa
popa
popa
pop
jne
or
popa
popa
popa
pop
jne
or
push
fs
push
xor
push
pop
or
lcall
popa
pop
jne
bound
mov
or
mov
popa
popa
repz
push
jne
or
popa
bound
xor
bound
jne
or
lcall
popa
mov
fldcw
popa
or
push
push
ficoml
jne
or
jecxz
int
or
push
push
fidivl
int
or
push
push
pop
int
or
mov
push
pop
jne
or
std
or
mov
xchg
or
jle
jne
out
xchg
or
mov
jne
or
and
jne
test
lcall
popa
pop
jne
and
xchg
popa
popa
popa
or
lcall
popa
pop
jne
out
imul
leave
cmp
push
pop
jne
or
and
fsubrs
popa
popa
popa
or
and
xor
and
popa
or
adc
repnz
jne
or
mov
or
pusha
cmpsl
fidivrl
xor
or
popa
or
push
or
pop
movsl
or
stc
or
pop
movsl
lods
or
lcall
popa
pop
jne
out
imul
leave
cmp
push
pop
jne
or
and
or
lcall
popa
or
xchg
mov
out
push
bound
out
dec
bound
bound
int
outsl
or
pop
call
out
or
xchg
or
out
out
lock
bound
or
xchg
popa
movsl
or
lcall
or
dec
push
loop
imul
mov
int
or
popa
pop
push
fcomi
push
popa
out
scas
sbb
out
pop
scas
sbb
and
popa
movsl
or
jne
pop
jne
or
xor
int
or
popa
adc
cltd
pop
jne
or
popa
popf
xor
popa
popa
out
or
popa
test
sbb
xor
cmpsl
popa
popa
or
push
mov
jne
mov
out
dec
scas
sbb
int
xchg
pop
push
dec
xor
int
or
popa
adc
cltd
push
and
leave
leave
or
push
or
xor
int
or
popa
adc
cltd
pop
jne
or
popa
fsubrs
out
or
popa
test
popa
popa
popa
fcomps
or
or
jne
or
jne
out
inc
or
popa
or
xor
int
or
popa
adc
cltd
push
and
fsubs
jne
lods
loop
imul
add
jne
or
and
adc
add
jne
or
push
icebp
or
lcall
popa
or
or
pop
call
pop
pop
jne
out
imul
leave
cmp
push
pop
jne
or
lcall
popa
or
or
pop
call
mov
popa
or
lcall
popa
or
or
pop
call
out
or
lcall
popa
or
or
pop
call
or
or
pop
call
pop
jne
out
jns
jne
test
lcall
popa
or
or
pop
call
pop
jne
or
imul
or
imul
push
and
popa
movsl
or
mull
iret
and
repz
bound
loop
imul
bound
jne
lods
mov
imul
bound
loop
imul
leave
cmp
call
imul
add
loop
pop
bound
mov
or
pop
bound
or
call
repz
bound
outsl
or
pop
call
pop
pop
jne
out
mov
bound
or
push
pop
jne
or
pop
outsl
or
pop
call
cmp
bound
or
pop
call
cmpsl
pop
les
pop
call
lcall
jne
shl
lea
bound
jne
or
imul
bound
add
bound
or
call
imul
bound
mov
imul
bound
outsl
or
pop
call
xchg
outsb
out
popa
popa
popa
or
or
pop
call
imul
bound
jne
sbb
loop
pop
bound
push
loop
pop
bound
int
scas
pusha
pop
adc
bound
loop
pop
bound
or
call
pop
pop
bound
pusha
or
bound
adc
bound
pop
pop
jne
or
bound
or
push
pop
jne
or
bound
xor
call
xchg
lock
bound
loop
pop
bound
or
call
imul
fs
fs
popa
popa
popa
pushl
sub
jne
daa
pushl
adc
jne
sub
jne
push
pushl
and
jne
and
jne
adc
pushl
pop
pushl
sbb
jne
and
jne
pushl
hlt
pushl
stc
pushl
dec
pushl
dec
pushl
push
pushl
pusha
pushl
pop
pushl
push
pushl
push
pushl
dec
pushl
inc
pushl
inc
pushl
dec
pushl
pushl
inc
pushl
push
pushl
dec
pushl
inc
pushl
inc
pushl
cmp
jne
xor
pushl
aas
pushl
dec
pushl
ret
push
push
pushl
sbb
jne
sbb
jne
out
pushl
icebp
pushl
lock
repz
cli
pushl
in
pushl
in
pushl
pushl
pushl
pushw
outsl
pushl
scas
pushl
mov
pushl
and
jne
mov
pushl
lods
pushl
mov
jne
and
pushl
std
pushl
push
fcomps
bound
popa
out
lea
bound
bound
and
jae
or
bound
test
popa
popa
popa
fcomps
add
cmpsl
bound
xchg
push
loop
bound
sbb
xchg
bound
add
xor
bound
out
sbb
bound
fcomps
bound
popa
or
bound
ficompl
popa
or
jb
bound
push
popa
fsubrs
mov
or
fmuls
pop
loop
bound
or
bound
bound
add
jb
bound
push
popa
xchg
push
outsb
xor
bound
pop
loop
bound
or
bound
bound
loop
bound
pop
loop
bound
or
jb
bound
push
popa
fsubrs
mov
or
fmuls
pop
loop
bound
or
bound
bound
add
jb
bound
push
popa
xchg
push
outsb
xor
bound
pop
loop
bound
or
bound
bound
loop
bound
pop
loop
bound
or
jb
bound
push
popa
fsubrs
mov
or
fmuls
pop
loop
bound
or
bound
bound
add
jb
bound
push
popa
xchg
push
outsb
xor
bound
pop
loop
bound
or
bound
bound
loop
bound
pop
loop
bound
or
jb
bound
push
popa
fsubrs
mov
or
fmuls
pop
loop
bound
or
bound
bound
add
jb
bound
push
popa
xchg
push
outsb
xor
bound
pop
loop
bound
or
bound
bound
loop
bound
pop
loop
bound
or
bound
dec
mov
bound
aas
xchg
or
bound
aas
cmp
cmpsb
bound
push
pusha
pop
adc
bound
or
bound
or
bound
repz
aad
popa
popa
popa
or
sahf
bound
add
or
bound
bound
loop
bound
cmpsl
jne
jae
or
bound
repz
int
push
adc
push
bound
pop
loop
bound
or
bound
or
aad
popa
popa
popa
or
sahf
bound
add
or
bound
bound
mov
bound
and
leave
fcoms
lcall
fsubrs
mov
or
jne
or
xchg
imul
push
or
pop
jnp
push
sub
.byte
popa
