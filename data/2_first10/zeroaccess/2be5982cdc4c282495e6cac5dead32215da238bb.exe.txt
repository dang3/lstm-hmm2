push
mov
sub
sbb
mov
mov
mov
add
mov
decl
mov
sbbl
push
push
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
xor
push
mov
mov
sub
imul
mov
adcl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
or
jmp
test
push
movsb
jb
jl
pop
or
jle
jle
jle
mov
jle
into
xlat
cmp
pop
add
push
gs
xor
int3
and
sbb
inc
fs
out
mov
es
test
call
add
dec
stos
push
sub
sarb
mov
stos
push
rcl
test
pushf
mov
dec
out
dec
call
mov
and
jnp
ret
xchg
sub
loopne
cld
ljmp
sub
add
sbb
outsl
insl
add
cmp
jno
ds
or
adc
jge
inc
dec
aaa
adc
ja
sbb
ds
hlt
enter
popa
inc
fisubrs
mov
mov
mov
cmp
pop
stos
and
xchg
or
loop
iret
pop
fidivs
ficompl
pop
mov
ljmp
jecxz
xlat
call
xchg
mov
je
fcoml
das
xor
pop
scas
daa
push
and
push
dec
repz
push
and
xor
jmp
lcall
push
les
inc
adc
sub
push
jmp
sub
mov
sbb
divb
in
je
sbb
pop
cmp
mov
inc
mov
xchg
adc
and
fstps
cmp
add
popf
lea
insb
cli
ret
add
adc
push
inc
mov
mov
cmp
or
pop
imul
jae
mov
pop
sub
cs
mov
mov
mov
or
incl
fs
lahf
movq
pop
pop
lds
xchg
mov
adc
lea
xorl
mov
adc
mov
orl
mov
xor
xor
neg
add
mov
movl
lea
sbb
mov
mov
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
xor
add
mov
decl
mov
mov
mov
sbbl
mov
adcl
mov
xorl
movzwl
add
mov
jmp
fisubl
addb
lods
gs
aam
dec
xchg
jg
jle
jg
jle
and
xor
cli
out
mov
sbbb
cs
jg
xor
xor
or
or
cli
fidivl
sub
push
mov
and
ret
push
xchg
aaa
rcrb
enter
loope
push
mov
xchg
sbb
mov
dec
adc
adc
sbb
lcall
lds
aas
xchg
jge
push
sahf
addr16
push
bound
test
push
fldcw
pop
std
in
sbb
into
sahf
dec
jcxz,pn
nop
sti
aad
inc
adc
push
fucomp
pop
shll
or
jb
es
ret
leave
dec
pop
sar
bswap
and
fdivs
test
fwait
aad
push
shl
inc
imul
fcom
lods
ficoml
std
jecxz
scas
xchg
test
inc
inc
or
xchg
inc
test
call
faddl
xchg
scas
push
cltd
pop
cmp
mov
add
arpl
fbstp
out
daa
add
sub
pop
pop
mov
movsl
lea
xchg
dec
cmp
cwtl
dec
xchg
mov
mov
enter
filds
jnp
lea
or
pop
and
leave
dec
dec
mov
sbb
jmp
insl
andb
cwtl
mov
nop
pop
sbb
mov
repnz
dec
shlb
xchg
xor
jge
aad
fwait
and
push
int
test
adc
mov
rcll
lahf
cmp
rcr
dec
mov
pusha
gs
push
mov
mov
pop
dec
mov
mov
and
mov
xor
addl
add
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
or
mov
sub
and
mov
mov
addl
xor
orl
add
movl
cmp
jmp
cmp
sub
mov
out
inc
in
jns
jle
jg
jle
jns
cli
aad
sub
jp
mov
pop
aad
mov
dec
adc
xor
les
sbb
popa
addb
dec
setge
lods
inc
inc
sbb
mov
cli
push
cmp
mov
pop
mov
jns
out
add
lcall
push
cwtl
testb
cwtl
aaa
mov
pop
push
adc
add
repz
ret
jmp
outsl
enter
xchg
jge
insl
mov
mov
jmp
fsubs
xchg
dec
ja
gs
mov
hlt
rcl
pop
inc
cwtl
sub
in
lret
jmp
jbe
popa
xorl
aas
movsb
and
ja
mov
loop
popf
mov
mov
xor
mov
push
mov
xchg
pop
xchg
xor
popl
fxch
stos
repnz
ljmp
add
cmp
scas
ss
inc
add
cmc
lock
inc
adc
in
push
push
je
or
add
std
fidivrs
es
xlat
adc
xchg
xchg
test
fldenv
roll
mov
imul
xchg
xor
pop
dec
cltd
out
scas
mov
adc
je
sub
cmp
mov
enter
jg
adc
push
test
push
scas
dec
jle
jnp
inc
fmul
lret
les
jne
and
in
out
call
test
jp
xchg
iretw
cmp
cmpsl
jge
sti
sahf
out
inc
push
pop
pusha
mov
and
fs
inc
test
sub
push
in
adc
mov
or
or
enter
mov
pop
sbb
lea
mov
jne
mov
or
jmp
or
popa
sbb
enter
jnp
jle
jg
jle
xor
jp
inc
add
push
mov
push
inc
fisttpl
sbb
xchg
sbb
sub
addr16
inc
push
orb
sub
cld
and
jge
xor
hlt
sbb
call
inc
into
sbb
jnp
jae
fcmovbe
jmp
fistps
movsl
out
stos
outsb
jns
inc
popa
add
decb
icebp
pusha
and
mov
data16
fnstsw
cli
mov
popa
ljmp
jae,pn
jge
jecxz
aad
cmp
or
push
in
or
jbe
mov
cltd
cld
pop
cmc
cs
sahf
jne
lret
pop
push
fstpl
cld
xchg
out
cmp
movb
sbb
scas
out
xor
aam
jno
subl
out
popf
cld
ret
addb
testb
sub
cmpsb
dec
cmp
jnp
fisubs
jp
mov
pop
jge
cmp
aas
pop
or
mov
xlat
pop
cld
push
sub
mov
or
std
decb
jnp
cmp
test
rorl
cmpsb
jnp
inc
inc
push
negb
out
shlb
or
iret
imul
sbb
cmp
push
ja
xchg
cmp
xor
cmpsl
mov
rcrl
scas
ljmp
or
xorb
aas
mov
out
ret
sarb
sub
or
mov
aam
xchg
loop
sub
xor
mov
test
adc
add
out
lcall
inc
jbe
nop
push
fstp
fiadds
sub
test
jnp
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
xor
add
mov
mov
mov
xor
mov
sub
add
jmp
icebp
jmp
imul
jnp
push
add
jle
jg
jle
inc
faddl
movsl
das
cmp
outsb
sub
aam
adc
hlt
aaa
jb
sbb
rcll
push
mov
loopne
enter
cmc
arpl
push
and
ljmp
cld
push
jg
enter
ret
clc
mov
lock
cmp
movsl
cmpsb
mov
jo
mov
lea
dec
adc
dec
movsl
add
pop
or
andb
mov
adc
fmulp
inc
jp
hlt
jbe
and
stos
ret
mov
xchg
fidivl
xchg
dec
sti
adc
dec
leave
out
sbb
ds
or
or
frstor
push
adcb
xchg
es
cs
inc
cltd
shll
mov
shlb
or
sbb
jg
jnp
mov
inc
ja
lea
xlat
daa
xor
mov
jecxz
inc
jmp
jl
lea
popa
mov
scas
icebp
cmp
and
push
push
lea
ficoms
mov
pop
adc
mov
and
sarb
pop
xchg
push
out
lds
jb
xchg
sbb
jbe
add
or
xchg
cmp
dec
inc
jg
enter
fs
sub
ja
cmp
les
xchg
push
add
xlat
add
notl
loopne
mov
mov
xor
les
sub
dec
lret
and
xchg
pop
lock
or
add
xchg
fs
add
jmp
shrb
inc
or
into
scas
movsb
mov
mov
mov
movzwl
add
jmp
push
mov
test
jmp
loop
mov
jle
mov
jle
or
cmp
jp
jne
cmp
mov
or
pop
sub
sbb
jl
cli
adc
movsl
sbb
movsb
scas
pop
mov
loope
pop
push
je
stos
mov
into
in
mov
jmp
out
or
push
ret
idivl
bound
xor
call
cmpsl
mov
sbb
xor
cld
and
add
pop
sub
fisubl
sbb
add
test
adc
xor
adc
mov
pop
dec
pop
pop
inc
mov
aad
mov
into
dec
jne
mov
mov
jno
lahf
mov
xchg
sti
lods
mov
mov
rcrl
sbb
ss
scas
aaa
xchg
dec
insb
xor
popa
psubw
fldenv
icebp
cld
sbb
popa
bound
xchg
mov
inc
pop
fildll
repz
mov
fucomi
dec
stos
push
mov
cmp
add
cmp
push
xchg
pop
pop
pop
push
test
call
lret
pop
sbb
pop
mov
das
and
ja
sahf
scas
ficomps
iret
clc
inc
test
call
and
int
hlt
ret
mov
hlt
jns
sub
mov
outsb
or
test
je
pop
aaa
cmovne
mov
sahf
sbb
push
cmp
cmp
ret
push
pop
and
repz
fstpt
jmp
mov
jns
inc
adc
xchg
enter
cwtl
xor
mov
repnz
mov
mov
sti
sbb
fisttps
or
dec
or
movb
xor
sub
jmp
xchg
sahf
loopne
icebp
jo
popa
mov
cmp
push
insl
inc
std
rolb
jle
jg
jle
mov
xlat
nop
pop
fidivrs
jl
push
jl
sub
mov
clc
dec
jne
jb
std
sbb
adc
lds
mov
cmp
mov
mov
sbb
popa
mov
test
push
loope
sbb
loopne
inc
jb
lcall
push
jg
iret
or
push
add
mov
add
lret
and
mov
inc
lods
das
rcl
jo
jno
sub
push
pop
xor
bound
pop
sub
sbb
addl
movsb
xchg
popa
test
adc
outsb
xchg
outsl
int
andb
sbbb
mov
lods
sub
mov
sti
dec
mov
inc
jne
jns
or
mov
addr16
fstps
daa
xchg
loope
lcall
mov
pop
hlt
xchg
inc
mov
pop
enter
add
mov
popa
into
mov
jbe
stos
rcrb
out
sbb
jle
pop
inc
ss
add
mov
xchg
mov
das
push
jle
scas
adc
and
sbb
jp
stos
push
xor
mov
sbb
lahf
mov
add
adc
jae
mov
dec
ja
popa
neg
in
imul
test
pop
inc
fstpt
pop
pop
xchg
aam
lods
out
mov
or
jnp
push
outsb
fucomp
mov
mov
cmp
out
adc
jae
pop
aaa
mov
push
cmpsl
rcrl
xchg
icebp
push
fwait
push
adc
dec
jae
mov
inc
rclb
daa
cld
push
imul
ja
mov
and
and
cld
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
jmp
pop
sbb
cmp
push
popa
movsb
insl
std
and
mov
jg
jle
mov
jle
in
pop
jle
and
sbbb
insb
cld
movsb
inc
movsb
and
xlat
lcall
pop
shlb
dec
push
jl
mov
push
movl
mov
aam
push
pop
add
filds
jmp
cwtl
js
mov
lock
push
cmp
or
xor
inc
xchg
icebp
push
rorb
ret
and
adc
cmp
xchg
sub
sub
lods
sub
repz
gs
dec
push
cmp
add
pusha
pusha
sub
mov
xchg
cmpsl
nop
divb
int3
cmp
imul
dec
repnz
mov
cmpsb
imul
lret
xchg
mov
aas
shr
jg
scas
dec
cmc
jmp
pop
jns
aaa
out
dec
in
jns
xchg
jle
insl
push
jne
cli
mov
push
cmpsl
jecxz
test
sbb
xor
mov
mov
hlt
xchg
pushf
enter
int
in
inc
icebp
xchg
addl
mov
pop
loope
insl
mov
fcompl
lock
mov
pop
leave
mov
mov
sub
mov
scas
sti
sub
outsb
adc
or
xor
mov
dec
sti
add
xor
popa
xchg
fsubrs
fisttpll
out
push
in
adc
mov
cld
cmc
pop
jb
sbb
add
fidivl
add
pop
pop
repz
stc
inc
aam
divb
jbe
insb
dec
imul
fdivs
sbb
dec
xchg
push
movsb
and
fwait
stos
es
shll
ficompl
sub
mov
inc
andl
fisttps
mov
mov
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
jmp
je
int3
xchg
int
jne
jae
mov
add
mov
jle
mov
jle
mov
sbb
cmp
fnsetpm(287
jmp
inc
loop
xchg
jae
xor
xor
popf
mov
push
sub
pop
shll
roll
sub
ret
lods
ss
lret
mov
push
or
aas
loope
mov
out
ja
inc
stos
fisttps
jb
or
iret
push
mov
add
lahf
mov
xchg
in
lds
lea
cwtl
ficomps
jne
or
cs
pop
push
jg
inc
and
ljmpw
repz
cltd
mov
cmp
shl
rcr
add
dec
or
mov
test
jb
jmp
add
out
cwtl
jbe
mov
movsb
hlt
inc
stc
mov
cmpsl
mov
rcrb
movsl
mov
push
xchg
add
sti
and
les
ljmp
pop
jns
aam
and
xor
and
out
pusha
jnp
repz
push
nop
inc
cs
pop
fwait
lods
mov
sbb
and
cli
or
cli
dec
popf
insb
add
out
jae
push
fisubrl
jg
lcall
sub
insl
and
in
stos
das
inc
mov
dec
xchg
in
imul
sarl
push
cmp
inc
jnp
add
cmp
lods
pop
cmp
es
adc
pop
sarb
xchg
orl
adc
push
out
mov
pop
mov
imul
xchg
es
cmp
xchg
mov
dec
pop
imul
insb
jnp
mov
dec
clc
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
jmp
xor
inc
pop
pop
jge
arpl
outsb
dec
or
in
or
jle
data16
add
mov
iret
insb
sti
mov
mov
cltd
loopne
enter
ja
xchg
clc
adc
push
js
inc
push
fs
bound
in
adc
cmpsb
outsl
movsl
xlat
out
andb
mov
pop
sbb
add
inc
xor
and
out
and
sti
xorb
push
mov
mov
das
and
mov
jns
loope
pop
fs
or
sbb
repz
mov
jnp
push
inc
cs
mov
jg
xchg
in
mov
iret
cmp
mov
testl
in
cmc
inc
add
sbb
and
xchg
sub
inc
cmp
fwait
daa
pop
enter
cmp
pushf
subl
inc
and
add
ljmp
xchg
inc
pop
test
xchg
scas
movsb
xorb
imul
cs
aad
rorl
xchg
aaa
xorl
adcl
pop
bound
add
inc
cs
fisubs
daa
xor
test
test
incl
xchg
xlat
adc
adc
imul
mov
sub
int
xchg
dec
push
sub
or
pop
ret
xchg
lahf
outsl
lock
cmp
leave
mov
mov
in
mov
orb
sbb
int3
lcall
pop
pop
dec
and
pop
pop
jae
xor
add
jmp
aad
add
sbb
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
jmp
insb
jo
arpl
jge
jno
adc
mov
cmp
mov
jle
sahf
negl
pop
arpl
cwtl
scas
in
sub
push
sub
sub
inc
mov
xchg
bound
ja
imul
adc
pop
dec
mov
aas
jno
add
push
lods
or
loope
ret
dec
pop
or
outsl
arpl
scas
imul
sbb
mov
clc
pop
xchg
out
adc
fsub
push
cs
mov
rclb
inc
data16
jl
cmp
sbb
add
jmp
xor
push
xchg
dec
negb
mov
pop
lods
mov
daa
jb
ss
insb
in
lret
nop
ja
leave
shll
cli
add
mov
xor
push
jle,pt
or
inc
xchg
ret
sub
int
popf
mov
fcoml
cmp
or
mov
clc
mov
inc
pop
fwait
and
cmp
xor
loopne
push
sbb
rcrb
add
or
fbld
mov
cmp
int
mov
mov
dec
xor
pop
mov
addr16
mov
js
lret
ljmp
pusha
inc
dec
sbb
sub
aad
out
mov
adc
pusha
mov
push
add
lret
inc
cmp
lret
push
mov
movsl
dec
aaa
bnd
xchg
test
aas
or
jbe
mov
setbe
in
cmp
mov
jnp
outsl
mov
dec
or
xchg
idivl
imul
ret
test
repnz
sti
push
pop
add
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
sbb
jge
fidivrl
xchg
mov
push
or
push
jg
jle
pop
hlt
lcall
in
or
or
int3
out
mov
jge
loope
aad
and
mov
mov
jo
mov
sarl
jge,pt
int
jne
imul
int
add
push
jg
cmc
call
je
dec
fistps
scas
push
rcrl
popf
mov
push
fidivrl
insl
pop
mov
sub
inc
fiaddl
jl
mov
dec
roll
inc
iret
jmp
push
inc
xor
xchg
mov
clc
push
inc
push
sti
insb
test
and
inc
in
add
fildl
insb
push
aad
jo
jecxz
mov
divb
je
cld
xchg
or
mov
and
jns
sub
or
out
bound
mov
dec
jnp
mov
xchg
push
ss
adc
ret
loop
out
xchg
or
push
out
cmc
nop
push
and
insl
jnp
dec
popa
lods
mov
out
jge
push
sbb
cmp
sbb
lods
fwait
inc
inc
fimull
or
and
add
add
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
jmp
xorl
push
sbb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
add
movl
mov
push
mov
or
mov
xor
mov
push
add
mov
sbbl
jmp
pop
imul
decb
int
or
push
jg
jle
push
rorb
dec
jp
aam
sti
mov
std
outsb
cltd
add
xor
addr16
sub
hlt
xchg
test
mov
mov
arpl
xchg
inc
test
jecxz
mov
inc
xchg
loope
push
add
inc
add
rclb
scas
adc
adc
lock
sbb
fmull
push
push
adc
call
jle
aad
and
out
push
push
repz
cmp
mov
fsubl
out
dec
push
push
daa
xor
cmp
ret
aas
rclb
add
pop
or
cwtl
sti
cmp
xchg
xor
xchg
jbe
lcall
xor
movsb
fcoml
pop
jl
fmul
lahf
iret
fildll
lret
sbb
jno
or
insl
fistpll
add
lret
int
data16
out
fsubrs
lods
jmp
je
std
shlb
sahf
and
out
insb
or
loopne
mov
mov
and
cmp
pop
mov
mov
mov
push
scas
or
daa
shlb
add
cmp
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
mov
mov
xor
mov
xorl
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
jmp
push
nop
outsb
stos
jae
push
jo
sub
lods
jnp
mov
jle
jg
jle
imul
mov
pop
sub
ret
inc
int
fwait
lcall
popf
and
int3
mov
cwtl
jecxz
mov
cltd
and
cltd
loopne
cltd
sub
ljmp
mov
insb
fwait
mov
mov
ret
sub
ret
mov
add
pop
outsl
clc
sarl
mov
mov
mov
clc
pusha
lret
shlb
push
dec
mov
pop
add
sbb
push
cli
scas
insb
mov
out
imul
or
mov
in
add
cmp
pop
mov
ja
mov
addr16
into
mov
sbb
cmp
rcl
fidivs
loopne
dec
imul
hlt
ds
sub
rorb
jmp
inc
daa
in
test
xchg
notl
fmull
push
ss
pusha
rorb
dec
jle
push
arpl
aas
cmp
sbb
das
adc
test
arpl
testb
les
movsb
xchg
int
sbb
mov
push
daa
inc
jg
cld
cmp
loopne
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
sub
and
mov
jmp
inc
dec
fwait
imul
add
lock
push
xor
jle
jns
jle
jne
and
repz
notb
xor
push
jmp
mov
sahf
in
jecxz
cs
mov
js
pop
mov
mov
xchg
pushf
lock
sbb
fwait
aam
dec
mov
cltd
aaa
daa
adc
push
inc
fistl
jns
aad
cltd
lods
scas
roll
adc
inc
mov
inc
sbb
gs
in
jle
or
aaa
cmp
andb
sbb
xor
sub
jno
ja
idivb
std
and
or
mov
dec
dec
bound
sbbl
pop
stos
adc
sbb
rolb
cld
outsb
push
pop
out
pusha
xchg
sbb
jecxz
lret
jge
int
sbb
enter
sub
das
pop
jecxz
mov
mov
cmpsb
jmp
cmp
shll
je
pop
nop
pop
test
adc
ljmp
mov
pop
cmp
cmp
and
call
jmp
cwtl
inc
stc
inc
push
sub
popl
bound
call
pushf
or
testl
jmp
in
xor
cwtl
fsubs
shl
mov
cmp
jg
cmp
lahf
xor
pusha
xchg
mov
lcall
add
pop
aas
and
jbe
sub
xchg
jp
ret
mov
push
scas
fsubrl
jmp
mov
divb
cmc
call
adc
xor
fsubrl
enter
imulb
sub
push
or
add
or
mov
insb
loop
adc
fmull
jo
jg
cmp
dec
push
mov
xchg
fists
push
fstl
stos
xchg
andb
lock
push
test
mov
sbb
mov
push
cmpsb
push
pop
orb
fs
cmp
mov
shr
enter
addr16
sahf
sub
add
rclb
pop
popf
stos
dec
les
das
aad
stos
ror
iret
cmpsb
cmp
sbb
out
insb
cmp
jno
call
lret
inc
mov
ja
mov
adc
xor
loope
xor
mov
inc
dec
testb
push
inc
or
test
into
xor
mov
lret
shlb
xor
mov
addr16
jnp
ds
ljmp
sbb
cmpsl
je
and
inc
ss
test
sub
mov
repnz
into
dec
sbb
and
ret
push
mov
jmp
mov
cmp
cmp
add
inc
jne
or
mov
lcall
pop
add
lcall
or
or
pop
shl
jnp
push
sti
sub
icebp
or
in
mov
pushf
add
sub
mov
add
jae
ret
lods
fs
xor
or
sub
jb
div
push
xchg
testb
mov
popa
inc
inc
sub
mov
aaa
into
test
mov
cmp
push
test
scas
imul
outsl
jge
cmpsl
lds
pop
lock
int
nop
and
adc
mov
fists
push
daa
push
movsl
clc
out
pop
std
andb
cmp
pop
xor
js
in
shl
in
int3
sub
push
sub
mov
cmp
dec
cmp
mov
ds
jnp
jno
xchg
mov
mov
rorb
pop
adc
dec
icebp
roll
xor
in
push
lods
dec
imull
mov
add
inc
and
andl
add
mov
xor
mov
movzwl
mov
xor
mov
mov
sbb
mov
movb
lea
orl
mov
and
jmp
jo
inc
xchg
jo
jne
xchg
or
and
or
jle
push
jns
jle
shlb
adc
dec
mov
lods
pop
push
sub
adc
icebp
ret
dec
enter
adc
mov
mov
repnz
stos
inc
sub
xor
cmpsb
mov
mov
push
sbb
jne
cmc
add
xchg
lock
xor
clc
mov
pop
sub
inc
subl
mov
jo
rcll
ljmp
enter
rcll
addl
fnstsw
push
fistps
mov
mov
mov
sbb
pop
in
rcrb
inc
aaa
fidivs
or
fidivl
sbb
or
sbb
fwait
or
cmc
jns
sub
jno
inc
mov
cmpsl
dec
data16
push
aaa
sbb
push
push
inc
cmp
sbbl
jns
sbb
or
jbe
std
add
stc
sbb
in
fiaddl
mov
jg
or
imul
ret
cmp
mov
sti
xchg
les
add
xchg
int3
cmp
or
out
fbstp
xchg
ss
or
aas
sti
pop
in
pop
cmp
ljmp
repz
dec
jbe
mov
push
xor
jge
dec
mov
js
fdivrl
adc
shlb
fsubs
mov
cld
ret
cmpsl
jbe
rcrb
jmp
loop
ret
cmp
psllw
sbb
sub
mov
sarb
mov
es
dec
jge
jl
and
mov
out
cli
sub
stc
or
in
adc
sub
dec
les
int3
mov
mov
inc
lods
icebp
xchg
mov
ljmp
das
adc
jnp
js
push
inc
inc
js
faddp
or
xchg
inc
in
mov
jle
push
nop
lods
test
lahf
sbb
clc
mov
loopne
popa
xchg
imul
sti
adc
je
mov
outsl
int3
loope
scas
sbb
xor
leave
icebp
in
push
bound
out
sbb
pusha
mov
sub
mov
pusha
dec
scas
popf
cmpsl
stc
jg
cmc
fistl
or
push
push
mov
pop
mov
jg
fsubrl
jge
dec
loope
sub
imul
mov
fcmovbe
mov
movsb
cmp
adc
shlb
mov
pop
push
pop
add
test
adc
arpl
mull
adc
cmp
dec
mov
cmpsb
and
cmp
iret
cmpsl
jmp
imul
mov
loop
mov
mov
sbb
repnz
sbb
xor
adc
mov
sbb
das
dec
lds
xchg
mov
cmp
icebp
and
sbb
dec
push
and
mov
insl
mulb
cwtl
out
clc
mov
aaa
or
lahf
jmp
xor
fistl
test
and
sbb
xor
dec
jne
mov
sti
pop
add
push
mov
test
loope
jg
call
add
or
xor
cmpsb
das
pop
stos
inc
and
inc
inc
cwtl
mov
les
xor
add
int3
repz
jl
test
mov
xchg
sub
psllw
xchg
rclb
mov
inc
stos
xchg
dec
and
dec
dec
jmp
cmpsb
xchg
je
mov
call
lcall
mov
sbb
mov
mov
sbbl
xor
addl
sub
orl
mov
xor
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movl
adc
mov
mov
push
adc
xor
incl
mov
subl
add
jmp
notl
mov
mov
movl
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
jmp
sbbl
jae
out
xchg
xor
jle
push
jns
jle
gs
lret
push
in
inc
jl
inc
cmp
mov
pop
jl
movsl
jmp
enter
adc
mov
in
mov
int3
adc
ja
lea
lsl
iret
pop
adc
mov
lods
xor
mov
negl
mov
ja
cli
xchg
fldcw
loopne
push
out
lea
xor
in
mov
xor
mov
jg
pop
jnp
add
jle
mov
cmpsl
movsl
fsubs
movsb
or
jbe
push
in
mov
ret
sbb
xor
cmpsl
and
xor
mov
loopne
lcall
push
imull
dec
inc
mov
jg
dec
xor
add
xchg
dec
ljmp
test
test
in
mov
aam
movsb
dec
bound
in
pop
push
dec
push
and
dec
jge
mov
mov
data16
add
decb
fistpll
pop
into
test
adc
test
inc
add
aad
insl
xor
push
loope
jo
icebp
int3
push
shlb
cs
mov
imulb
sbb
imul
lahf
ret
jne
pushf
mov
clc
ljmp
and
sbb
test
xor
mov
cli
mov
inc
popf
gs
or
in
xor
push
testl
insl
ret
mov
mov
sahf
xchg
sbb
mov
mov
std
rcrb
pop
inc
jle
lret
jns
dec
in
gs
push
and
inc
or
loopne
bound
jmp
mov
aad
pop
outsl
jp
cwtl
pop
jg
cli
loopne
cmp
mov
fnsave
adc
int
int
pushf
lds
pushf
out
xor
mov
fwait
dec
test
push
test
sub
dec
mov
add
mov
push
cmp
add
push
cs
jmp
test
mov
inc
mov
add
mov
sbb
daa
popf
mov
mov
fwait
das
mov
and
dec
push
add
jbe
push
jnp
jno
test
pop
stos
test
mov
leave
cmp
cld
out
rcrl
or
fdivrp
jb
sarb
stc
mov
stos
cmp
mov
scas
enter
popa
andl
mov
sbb
es
bound
loope
jle
cmc
mov
cmp
dec
rcrb
lea
pop
mov
leave
inc
mov
push
imul
out
jmp
mov
call
adc
in
pmullw
sbb
mov
pop
clc
xor
rolb
mov
loope
lcall
sub
fstps
aaa
scas
sbb
or
dec
ja
pop
pop
loop
add
movsl
data16
mov
inc
pop
xchg
jecxz
fadd
mov
lock
in
test
fcmovb
mov
fs
push
sub
outsb
loopne
insb
and
jbe
xor
mov
stos
pusha
ljmp
or
pop
dec
aas
inc
loop
in
pop
movsb
sqrtps
in
sbb
fisubs
and
pop
inc
cs
fisubl
mov
movsb
std
push
mov
repnz
mov
mov
or
divb
adc
std
mov
imul
adc
sub
pop
pop
iret
pop
cmc
enter
negb
dec
fdivrl
je
xchg
add
cmpl
xchg
pop
mov
sub
out
sbb
jae
xchg
imul
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
jmp
mov
or
push
jge
inc
xchg
add
mov
jns
jle
inc
pop
xor
or
bswap
lods
jmp
aad
out
sbb
sbb
adc
out
mov
xchg
scas
mov
adc
mov
jns
aaa
fisubs
ja
ds
xor
inc
loopne
sti
mov
xor
hlt
push
xchg
mov
mov
imul
push
icebp
or
out
cmp
jne
in
cmpb
sub
pop
lock
jae
mov
testb
mov
into
add
loope
insb
or
sub
shrl
mov
loope
test
lds
mov
repnz
sbb
imul
les
sti
dec
or
sbb
mov
pop
xchg
mov
sub
jae
push
pop
test
xchg
jle
divb
dec
shrb
inc
sub
add
or
lea
fsts
outsb
push
and
inc
rcrl
cli
mov
arpl
mov
pop
jo
lods
scas
adcl
xchg
push
add
in
add
sub
xchg
push
divl
pop
ss
xchg
or
sbbl
sbb
cmc
outsb
or
cmp
hlt
pop
cmpb
std
inc
fdivl
out
sbb
enter
adc
aad
cmp
lret
sub
push
dec
test
cli
jg
jo
sti
clc
inc
adc
fdivr
add
ret
repz
std
push
jle
arpl
outsl
pop
lahf
xor
push
out
pusha
fldl
shrl
dec
subl
dec
stos
mov
lods
daa
and
add
add
cs
sub
inc
imul
add
or
lods
mov
std
or
lahf
pop
mov
and
mov
dec
inc
lret
sbb
insl
lock
push
or
enter
dec
mov
push
mov
push
stc
adc
movsb
aam
into
xor
push
cmp
push
mov
jle
lds
nop
loop
pop
test
ja
repz
out
std
jns
gs
lds
gs
sub
xlat
mov
fwait
in
aas
mov
faddp
jae
sub
imull
pushf
test
xchg
daa
scas
push
out
mov
xlat
mov
dec
mul
and
pusha
add
mov
sahf
adc
call
lea
jno
stc
ljmp
push
daa
dec
in
into
and
cmpsl
outsl
stc
cmp
push
xor
jnp
aas
int3
and
scas
dec
mov
mov
fwait
les
xchg
ds
cli
lock
insb
fnstenv
jbe
icebp
mov
sbb
xor
mov
rcrb
adc
add
xchg
mov
pusha
ds
xchg
sbb
insl
outsb
and
sub
xor
xor
mov
jmp
inc
out
cmp
ss
xor
push
cmp
imul
mov
pop
cli
jno
xchg
mov
mov
adc
xchg
adc
mov
ret
mov
push
cmc
jg
jmp
cli
add
pop
inc
push
test
fists
or
icebp
subb
mov
xor
xchg
subb
pop
mov
das
pop
jnp
sub
std
jbe
xor
imul
dec
lods
aad
cmp
into
ja
mov
sbb
mov
mov
aaa
fists
xor
xor
ljmp
and
int3
loopne
adc
mov
add
mov
push
push
fwait
mov
xor
add
mov
mov
jmp
pop
ret
jge
insb
jae
test
mov
sbb
push
jns
jle
dec
popa
dec
jo
adc
pop
cli
mov
push
jp
jo
xor
and
mov
or
sub
es
sbb
stc
popa
mov
jmp
push
adc
add
repnz
dec
shlb
add
add
icebp
arpl
popf
cli
add
aad
or
xchg
push
xlat
adcl
pop
jae
negl
in
jns
mov
aaa
cmp
loop
push
inc
fs
pop
cmc
iret
sub
aam
xor
sbb
aaa
dec
jl
and
bound
inc
mull
inc
push
cmp
lods
mul
fists
flds
stc
xchg
pop
inc
ret
in
pop
shlb
aaa
fistpl
in
test
std
leave
add
aas
pop
daa
or
lock
or
inc
movsb
add
xor
jns
push
faddp
fistpll
outsl
add
outsl
jl
mov
inc
mov
mov
pop
mov
bound
inc
sub
xchg
add
adc
jg
jbe
jle
push
in
rorb
adc
shll
jmp
push
pushf
inc
mov
mov
stc
sarb
mov
xchg
ljmp
sar
aam
psrlq
mov
iret
cmp
and
imul
xor
mov
jo
repz
xchg
sbb
fistps
inc
nop
test
lea
xchg
fisubs
pop
sbb
jle
pop
ja
lcall
push
jl
xchg
dec
lods
mov
pop
push
xchg
out
in
es
inc
sbb
or
outsb
sub
push
cmp
dec
xchg
lret
xchg
loope
pslld
mov
xchg
adc
int
lcall
sbb
int3
and
jg
gs
sbb
outsl
std
jns
jmp
fdivrl
leave
call
jl
sub
mov
mov
mov
xchg
out
out
jbe
ret
repz
dec
and
jl
pop
dec
data16
cwtl
xor
inc
inc
sbb
popa
mov
test
or
in
mov
mov
imul
jb
pop
xchg
cmp
hlt
std
mov
sahf
lahf
pop
cld
cmp
fldcw
sub
data16
insb
xchg
push
movsl
mov
fwait
jmp
jo
xor
cmc
enter
repz
dec
das
jne
jne
pop
mov
mov
sbb
sbb
ljmp
nop
repz
aas
shr
inc
cli
mov
jnp
pop
mov
stos
cmp
out
dec
insb
mov
jmp
rolb
inc
mov
in
das
pop
mov
outsl
int
insb
mov
mov
cmc
inc
sbb
cmpsb
je
adc
sahf
cmpl
sbb
push
add
or
add
push
shrl
and
lcall
hlt
outsl
stos
jmp
out
mov
scas
cwtl
sbb
add
cmpsl
in
fidivs
lods
mov
pusha
stc
insl
rolb
into
icebp
push
scas
mov
jae
mov
insb
mov
sbb
xor
out
jge
cmp
cwtl
and
outsl
pop
test
xchg
aad
mov
xor
cmp
int3
popf
mov
andl
xor
cli
repz
sub
aaa
lcall
in
jp
je
adc
cltd
jne
stos
inc
mov
je
push
ljmp
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
jmp
enter
cmc
jne
mov
inc
in
dec
jmp
jle
push
jns
jle
into
jmp
mov
lea
pop
hlt
mov
pop
stc
stos
ds
nop
dec
lret
sbb
mov
les
aam
nop
cmp
andb
xor
ror
mov
dec
lds
stos
insl
aad
fcompl
mov
int
aam
sahf
mov
mov
lock
in
and
mov
outsb
test
out
pop
mov
mov
aaa
pop
stos
in
stos
mov
jle
xor
je
cmp
cmp
push
xor
dec
mov
mov
mov
scas
rcrb
push
push
cmp
push
or
xlat
sub
shrl
orl
mov
mov
ja
movsb
jne
mov
jae
js
test
push
jnp
sub
lods
xor
xchg
leave
pushf
pop
iret
mov
stos
xchg
pop
push
outsb
cmp
arpl
aaa
loopne
mov
cltd
dec
pop
or
sbb
not
lret
xchg
jo
sbb
fisubrl
jo
scas
int3
insb
pushl
pushf
outsb
lret
movsb
fwait
movsb
popf
enter
jo
cli
sbb
mov
in
push
into
lahf
add
js
adc
sbb
or
addr16
aam
out
cltd
inc
rcrl
mov
sbb
das
inc
ljmp
or
push
sub
mov
test
lea
shlb
inc
orl
and
ret
xchg
jo
pop
add
outsb
sarb
js
out
enter
mov
dec
fistpll
sbb
pop
mov
sub
sub
xor
lret
pushl
mov
sub
iret
adc
mov
in
mov
pop
pop
sub
add
shr
pop
dec
ret
adc
arpl
dec
sub
cld
ffree
xor
repz
ss
lods
je
add
jp
push
add
adc
mov
pop
push
pop
pop
pusha
xchg
int3
imul
dec
inc
jo
mov
push
aad
hlt
lahf
fwait
ret
clc
push
lds
dec
and
adc
add
ds
lock
mov
aad
pushl
int
es
dec
adc
int3
mov
aam
xchg
xchg
aad
int
cli
std
jle
xor
xchg
mov
shlb
popa
mov
add
mov
ja
inc
lret
and
push
insl
imul
icebp
cld
and
sti
cmp
test
xlat
sbb
outsb
sub
jne
mov
out
sbb
insl
shrb
jg
popf
stc
movsl
insl
outsb
add
aas
mov
addr16
adc
cwtl
mov
xchg
movsl
inc
outsl
mov
lock
filds
push
pop
in
shlb
adc
rcrb
iret
jg
mov
ljmp
cmp
cmp
jns
movsl
and
nop
scas
jae
cmc
fwait
mov
das
je
and
pop
out
and
xor
xor
test
ds
into
inc
stc
insb
jge
frstor
mov
sar
test
pop
xchg
mov
mov
push
popa
sub
xchg
nop
cmp
cmp
out
mov
nop
xor
lsl
popa
xor
push
inc
imul
sbb
loop
test
shrb
push
or
in
call
or
frstor
loop
sti
ficoml
pop
pcmpeqd
add
cmp
je
movl
lea
mov
jmp
push
fdivp
imul
mov
repnz
dec
cmpsl
ret
and
push
jns
jle
out
rolb
inc
adc
cmp
testb
aad
mov
and
outsl
mov
cld
scas
mov
lods
xor
out
cmp
adc
lods
jb
jo
pop
inc
inc
and
daa
fnstenv
dec
push
movntq
sub
push
insl
addl
inc
loope
add
mov
pop
andb
inc
mov
mov
cmp
test
stos
jge
sub
pop
in
dec
pop
cmpsb
popa
mov
leave
aaa
add
pop
pop
or
sbb
sbb
or
or
pop
test
add
push
cmpsb
mov
stos
fwait
dec
testl
pop
cld
negb
push
aam
frstor
stc
stos
test
xor
cmp
inc
popf
mov
mov
or
mov
ss
jle
dec
pop
or
insl
outsl
mov
aam
dec
inc
cmp
in
mov
mov
out
add
out
sbb
push
push
add
fdiv
loope
inc
lcall
and
inc
addl
call
mov
das
sub
and
mov
in
push
aad
out
repz
jbe
adc
and
aaa
das
jae
icebp
aas
jnp
and
out
pop
adc
xor
push
pop
into
mov
fwait
ljmp
and
lea
or
je
sbb
int3
mov
lods
add
cmp
xlat
push
mov
hlt
pusha
lahf
rcrb
cs
adc
xchg
inc
int
movsl
movsl
lods
lods
push
mov
fnstenv
outsl
jae
pop
jns
fcompl
cmpsl
jmp
push
xchg
jne
push
sub
or
lcall
jne
loopne
cmpsl
ret
inc
ror
cmc
lods
mov
add
pop
pop
push
punpckhbw
hlt
sub
sbb
test
aas
fildll
cmp
ret
jns
adc
or
jle
lahf
fmul
mov
in
xor
mov
xorb
jae
and
pop
test
cmpl
stc
dec
mov
mov
mov
insb
shlb
or
ss
mov
xchg
popf
aas
mov
xchg
xor
mov
enter
adc
adc
js
lret
lcall
sarb
inc
outsb
xchg
add
adc
fwait
mov
sahf
mov
hlt
sub
aad
jge
mov
fidivl
jbe
mov
mov
aaa
shrl
cltd
lahf
pusha
mov
jno
pop
inc
sub
daa
inc
push
gs
dec
ficompl
mov
cmove
mov
jl
and
xor
aad
cs
sub
push
mov
ja
stc
out
push
cmpsb
and
mov
dec
sub
cld
das
test
int
call
scas
cmp
sub
gs
mov
test
pop
and
inc
js
fadds
dec
xchg
dec
and
pop
mov
push
adc
ret
sbbb
ss
push
insb
bound
cmpsb
stc
mov
mov
adc
fwait
pushf
ljmp
xor
repz
loopne
sarl
je
cmp
adc
mov
pxor
inc
add
nop
inc
pop
mov
loopne
jb
fldl
cltd
fisubrs
call
lea
sbbl
shll
xchg
mov
add
sub
mov
sti
cmc
fidivs
imul
sub
aas
aam
fistps
paddsw
test
adc
mov
or
inc
in
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
sub
jmp
pop
mov
and
jno
dec
call
hlt
js
sbb
jle
pop
jg
jle
mov
mov
xchg
inc
ljmp
sbb
push
xlat
inc
jae
popf
adc
push
popf
jle
push
rcl
fwait
ds
cmp
xchg
xchg
inc
imul
lods
push
adc
mov
mov
les
mov
pop
sbb
xlat
inc
mov
es
sbb
outsl
sub
mov
jmp
dec
push
fdivl
insl
add
inc
jecxz
and
cwtl
sbb
inc
and
std
bound
aaa
mov
outsb
fs
sbb
mov
dec
jecxz
xor
stos
xchg
push
out
js
popf
dec
mov
sbb
fsubl
add
jns
rorb
mov
push
orl
or
fdivs
push
and
pop
in
out
xor
addr16
pop
sub
shlb
aam
pop
adc
jmp
inc
lds
lret
inc
stos
inc
jle
lahf
cmp
ret
jne
les
lds
push
cmc
sbb
rclb
sbb
popa
fistps
stos
movsl
lcall
loopne
push
jl
jmp
dec
xchg
mov
pushw
fwait
lcall
jbe
mov
sub
jae
fiaddl
and
das
in
test
push
arpl
sahf
cmp
vaddsubpd
mov
pop
jnp
adcb
gs
cli
fcompl
pop
testb
adc
mov
lds
cmp
xor
jo
cld
jp
xchg
aas
mov
and
sub
xchg
jae
adc
je
ds
jp
lret
popf
out
in
dec
add
enter
jo,pt
xlat
mov
pop
in
xchg
dec
push
or
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
pushl
call
mov
dec
mov
jmp
movl
mov
xor
push
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
inc
mov
incl
mov
xor
xor
mov
add
xorl
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
jmp
imul
jge
push
pop
loopne
outsb
add
jle
pop
jg
jle
push
pushf
mov
fdiv
mov
xlat
add
fsubl
add
mov
mov
mov
sbb
idivb
push
push
cmp
lods
cmc
out
sbb
dec
fucomi
sbb
add
movsl
lret
sbb
je
out
or
scas
jo
push
iret
pop
je
in
out
adcb
mov
push
fdivrs
cmpsb
sbb
fcoml
insl
jle
out
sub
insl
je
shll
cmp
ret
loopne
in
push
inc
insb
fsts
imulb
adc
pusha
mov
imul
pop
sahf
or
imul
xlat
mov
in
xchg
xchg
notl
repz
push
leave
fisubrl
inc
shlb
or
mov
les
or
pop
mov
shr
mov
pop
jae
ja
inc
pop
in
es
mov
mov
lods
xchg
loope
cli
cwtl
test
cli
sahf
jmp
fwait
icebp
and
xchg
mov
add
cmpb
cmp
das
ret
jae
cltd
push
sbb
mov
and
xchg
rorb
negb
mov
sub
adc
repnz
inc
xor
jg
xchg
mov
push
pop
push
aad
pop
dec
inc
jbe
mov
jns
nop
inc
fnstsw
fldcw
jl
cmp
lret
movsb
sub
mov
or
add
fildll
cs
cmp
fldcw
sbb
leave
int
jmp
shl
in
cmp
sub
bound
sbb
jnp
push
ja
cmpsb
inc
pop
jae
pusha
push
fisubrs
mov
pop
fstl
mov
push
fst
mov
inc
cld
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
jmp
sahf
jb
push
pop
jl
jb
ret
mov
das
pop
sub
les
jle
xchg
pop
cli
enter
out
loopne
insl
push
mov
sub
xchg
add
cmp
sub
lret
mov
fists
jnp
push
aad
or
jge
mov
jae
out
inc
push
inc
and
pop
pop
out
jns
mov
nop
daa
mov
fs
inc
jecxz
lods
jnp
add
cs
xor
cmc
repnz
fadd
cmpsl
lds
fistpll
gs
in
ljmp
dec
pop
clc
andb
clc
aam
pop
js
add
nop
cmp
inc
inc
mov
fwait
lods
xchg
movsl
pop
push
imul
stos
push
imul
push
js
les
sbbl
jmp
mov
xchg
ds
in
adc
popa
mov
push
push
clc
jl
push
dec
pop
scas
jg
stos
and
mov
mov
cmp
xchg
loopne,pn
xchg
test
xchg
movsb
out
in
roll
sbb
pop
ds
and
enter
push
loopne
arpl
rolb
test
inc
lahf
ret
das
call
adc
inc
fucom
dec
div
test
adc
jns
inc
test
or
dec
imul
jmp
cmp
xchg
sahf
mov
scas
daa
xchg
lock
aad
xchg
xor
pop
mov
hlt
push
xor
dec
nop
jno
mov
cmp
push
das
enter
push
dec
push
mov
shrl
jae
lods
addb
fs
cltd
scas
addr16
sub
push
push
test
adc
mov
cld
pop
nop
aaa
adc
into
cmc
xchg
jns
or
pop
aad
or
cmpsl
push
xchg
pushf
mov
shlb
out
lahf
pop
xchg
sbb
iret
into
sub
mov
addb
or
jp
cmpl
mov
pop
and
xchg
and
mov
lock
sub
mov
fcmovb
sub
sbb
mov
mov
sbb
and
andl
out
jo
call
stos
dec
cmpsl
mov
push
cmpsb
jle
jo
mov
xchg
sbb
fwait
jl
lcall
sub
jnp
ja
jmp
or
add
pop
xchg
jle
dec
xchg
dec
lcall
push
push
loop
mov
mov
js
xor
fldt
mov
push
cmpsl
loope
push
int
pusha
adc
xchg
xchg
ret
jle
repz
inc
pop
mov
dec
pusha
fidivrs
pop
sbbb
mov
pusha
or
rcr
dec
push
mov
int3
jmp
ds
ja
adc
jmp
mov
xchg
inc
sub
inc
scas
add
nop
sub
insb
mov
outsl
js
dec
xchg
cmpsl
insl
mov
cmp
pop
sbb
lret
mov
push
in
lods
cmc
xchg
sub
sbb
es
push
sbb
mov
add
and
xchg
jo
push
mov
movl
mov
jmp
xchg
jb
jg
dec
mov
mov
dec
adc
ss
les
jle
out
dec
xchg
lds
jne
dec
idiv
imul
jns
inc
xchg
loope
and
cmpsl
sub
xchg
mov
fwait
cmp
mov
ljmp
jmp
je
aad
cmp
mov
ljmp
and
add
daa
push
in
add
mov
imul
fsubrs
xchg
cmpsl
or
sbb
ja
cmp
xor
or
xor
xchg
dec
lds
pop
movsl
lea
sbb
or
out
mov
sarl
repnz
aas
outsl
cmp
mov
cmc
or
xor
dec
inc
sar
cmp
test
std
jp
fistpll
faddl
dec
add
hlt
xor
ficompl
out
fwait
mov
dec
xchg
hlt
mov
xchg
or
mov
repz
cmp
jmp
adc
jns
sbb
xor
cmc
push
je
or
aad
adc
inc
dec
mov
jmp
pop
ja
pop
inc
jb
xlat
xchg
pop
fildl
push
push
sti
dec
call
mov
data16
push
or
or
or
sbb
movsb
ljmp
js
sbb
xchg
lock
jno
imull
sub
lods
je
inc
aam
nop
js
jl
push
mov
pop
dec
insb
or
pop
ds
out
mov
mov
orl
add
sub
int
push
inc
movsl
mov
mov
or
sub
xchg
data16
xchg
dec
in
xchg
sub
nopl
sbb
dec
movsb
add
lahf
ficomps
sbbb
fdivr
push
push
out
and
sub
xorl
pop
dec
fnsave
xchg
ljmp
push
in
out
les
mov
mov
shrb
std
lea
mov
push
faddl
int3
inc
sbb
repnz
xchg
lret
insl
dec
sbb
cmp
mov
push
loop
pop
adc
jno
iret
adc
cmp
fadds
out
sbb
loopne
inc
sub
int
lcall
pop
cmp
movsb
aas
pop
sbb
loopne
test
cwtl
outsl
aas
xor
mov
or
cmpsl
mov
xchg
cmp
lods
push
push
mov
aad
pop
cmp
sub
daa
decl
pop
jp
add
pop
xor
or
in
scas
adc
push
jns
xchg
fwait
ss
cmpsl
pop
jle
dec
mov
jo
aaa
into
jg
gs
aaa
mov
cmpsl
xchg
shrl
lret
sub
mov
jnp
ret
and
sub
icebp
aad
dec
sbb
aad
idivl
mov
cmp
pop
popl
insl
jp
fxch
mov
sbb
sti
sbbb
bound
in
pop
pop
addl
out
pushf
xchg
jbe
push
and
mov
mov
dec
test
fs
inc
std
jp
add
loope
mov
jle
sarb
movl
movl
jmp
mov
pop
arpl
jle
pop
scas
out
xor
les
jle
and
aam
out
test
call
xor
cld
pop
into
jbe
mov
daa
hlt
adc
or
push
cmp
adc
xchg
push
or
shrl
mov
cmpsl
dec
popf
and
cmp
push
and
and
cmp
ljmp
push
popa
cmp
xchg
div
scas
mov
sbb
sub
dec
inc
rclb
or
shll
pop
enter
subl
mov
andb
lcall
lret
adc
mov
mov
push
dec
ud1
int
rclb
jnp
imul
pop
or
add
loope
dec
xchg
and
and
not
push
test
and
mulb
xor
and
inc
xchg
lock
mov
cmpsb
add
xchg
sub
xor
mov
mul
xchg
pop
cmp
xor
stos
mov
imul
ret
xor
or
outsb
cmpsb
stos
xorl
popa
xchg
lret
jle
sbb
jae
jb
push
push
push
decl
sahf
adc
or
pop
shll
jp
jo
adc
add
xorb
iret
jle
insb
inc
xor
mov
cmp
adc
enter
adc
and
divb
lods
jnp
or
fnsave
push
mov
mov
xor
fs
sub
adc
jge
iret
aas
jg
outsl
push
fidivs
push
cld
xor
mov
add
dec
xor
out
cmp
insb
push
push
rclb
xchg
and
fnstenv
cmpsb
cmpsl
push
mov
fists
popa
inc
sti
xor
pop
xor
repnz
cmp
dec
mov
ror
push
sbb
jp
iret
cmp
decl
shrb
sbb
xor
or
mov
or
in
mov
mov
popa
daa
inc
and
push
pop
xor
adc
ret
or
pop
cs
lods
push
jnp
mov
or
add
in
rclb
cmpb
dec
inc
dec
scas
cmp
ret
cltd
mov
inc
xchg
cmpb
xchg
addr16
fwait
lods
daa
cmp
aad
fbld
inc
xchg
mov
sbb
fstpt
or
fcoml
mov
mov
push
fisttpll
aaa
dec
mov
call
sbb
mov
push
fwait
push
xchg
je
mov
mov
lret
jmp
imul
xor
and
cmc
out
cmp
xchg
shl
pop
lea
mov
jecxz
hlt
xchg
jb
daa
in
cmp
mov
and
xlat
and
mov
xchg
ss
cs
cld
xchg
and
cmpl
add
add
adc
mov
andl
mov
subl
xor
or
mov
andl
add
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
jmp
movsb
jb
push
cld
pop
gs
call
fs
cmp
jle
jns
jle
ret
pop
adc
xor
hlt
lahf
popf
push
pop
outsb
jmp
or
pusha
and
xor
mov
pop
sub
inc
ss
mov
xchg
divl
cmp
push
scas
or
mov
data16
xor
fcompl
cmp
cmp
inc
cli
loop
shll
and
lds
xchg
lods
pop
push
cli
jo
dec
cmp
in
lds
das
sub
mov
mov
push
loopne
xlat
rcrb
sub
xlat
pop
sbb
xor
test
int
jnp
clc
mov
sub
cld
scas
inc
leave
aas
cmpsb
aam
lcall
ret
lock
std
sbb
jmp
fcoms
mov
aas
and
or
mov
mov
jne
push
int
in
pop
fwait
clc
and
loopne
push
or
cmp
pop
cwtl
inc
mov
lock
call
push
cli
inc
les
pop
ds
mov
sbb
enter
pop
inc
leave
insl
cmp
rcl
mov
push
scas
dec
rcrl
sbb
inc
mov
repnz
scas
jecxz
idivb
movsl
add
mov
add
xchg
fs
push
dec
scas
cmp
in
xchg
and
add
pop
lock
ds
jecxz
lret
ds
mov
repnz
imull
cmpsb
int3
in
in
xor
cmp
lods
or
hlt
rcrl
imul
sub
mov
inc
mov
or
aad
push
loope
add
outsb
push
adc
call
pop
pop
add
mov
popa
js
sarb
cmp
push
pop
jecxz
xlat
pop
inc
scas
pushl
mov
lea
add
cmp
adc
inc
movsl
je
cmp
jae
arpl
jne
shll
mov
and
xchg
and
jecxz
pop
pop
mov
mov
pop
iret
or
out
ja
and
jnp
cmpsl
xchg
cmp
js
dec
popf
lret
dec
cmpb
sub
scas
push
hlt
pusha
xor
adc
ret
in
testl
repnz
jno
xchg
inc
xor
es
in
and
add
add
push
stos
sbb
pop
sbb
popf
out
enter
dec
cli
in
decb
jae
push
cmp
push
mov
mov
cli
xorl
pop
add
cli
lods
scas
cwtl
adc
js
xchg
cwtl
test
je
adc
lods
mov
sub
loope,pn
std
jge
fsts
sbb
xchg
inc
jae
and
sub
mov
xchg
and
lods
inc
jmp
xor
sar
dec
adc
notl
xchg
daa
jb
out
mov
das
lock
push
stos
out
in
mov
mov
xorb
push
arpl
xchg
ljmp
dec
cmc
jle
sbb
test
pop
mov
test
ret
push
mov
sub
movl
movl
mov
mov
sub
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
jmp
and
ss
cmc
lock
sahf
rol
pop
call
jle
dec
jns
jle
jl
sbb
sbb
sbb
les
insb
fstpt
add
cld
stc
out
xor
je
jne
and
pop
cwtl
inc
loop
gs
sbb
push
pop
fs
imul
push
int3
ret
fistpll
lods
adc
sti
por
xchg
xor
sub
inc
shrb
mov
dec
imul
sub
loopne
mov
dec
je
and
sti
pop
cmp
imull
jge
cwtl
mov
sbb
push
dec
push
jmp
fwait
cmpsl
lcall
push
stos
bound
fs
rcr
mov
mov
mov
xchg
aas
mov
xor
lahf
mov
pop
fldt
ds
adc
push
cmp
rolb
sti
push
insb
cmp
cli
xor
mov
lcall
das
in
ja
inc
notb
push
shl
popa
adc
push
addr16
je
in
or
pop
push
out
sahf
je
jge
push
xchg
inc
mov
and
dec
jmp
shlb
mov
and
fstl
pop
mov
jecxz
mov
jl
in
jg
pop
xchg
loop
imul
hlt
clc
pusha
xchg
sub
insl
data16
rcll
in
and
movsl
jle
mov
pusha
insb
add
pop
dec
stos
imul
mov
stos
jmp
call
mov
inc
fbstp
repnz
and
and
push
xchg
lds
dec
aad
cmc
inc
ds
xlat
scas
insl
adc
pop
test
mov
xor
dec
stc
sbbb
bswap
loope
loop
sbb
mov
aam
inc
push
movsl
mov
cmc
inc
xor
ljmp
movsb
es
push
hlt
mov
stc
aas
mov
pop
imul
mov
cmc
mov
shrl
adc
xchg
xchg
mov
dec
lds
jmp
into
jbe
pop
pop
div
add
jno
fisttps
xchg
pushf
mov
sub
pop
and
stc
shlb
lods
rcl
pushf
in
in
adc
hlt
inc
cmpsl
xchg
mov
cmpsl
xor
push
mov
aam
sbb
nop
mov
enter
addr16
jbe
pop
cmp
push
mov
je
addr16
leave
inc
in
adc
and
insl
cmp
mov
adc
add
iret
addr16
out
repnz
test
test
arpl
das
pop
jmp
pop
cmpsb
test
mov
cmp
in
scas
out
outsl
jle
insl
mov
push
push
jl
fwait
add
xor
lock
pop
xor
enter
sbb
imul
lret
mov
adcl
push
or
and
shr
xorl
dec
daa
pop
das
in
in
or
std
xor
mov
out
cmp
jp
imul
add
mov
and
mov
add
sub
hlt
ret
and
cltd
rol
add
push
inc
mulb
movsb
sbb
inc
mov
ljmp
sub
imul
sub
aas
jmp
rcrl
je
out
cmp
lret
stos
in
mov
sbb
loopne
lods
aam
push
lret
inc
pop
xlat
imul
je
push
sbb
push
dec
mov
cs
sbb
inc
faddl
mov
adc
leave
sub
inc
fmull
mov
mov
or
mov
mov
adc
mov
sbb
mov
push
sub
lea
mov
xor
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
jmp
call
mov
dec
mov
push
inc
fldt
jle
dec
jns
jle
jb
cli
clc
call
and
arpl
loop
in
imul
mov
xor
call
sub
test
jbe
cmc
popa
js
xor
stos
sbb
inc
jb
sti
push
push
repnz
stos
lret
adc
pop
push
mov
xchg
enter
out
flds
fldenv
dec
mov
fwait
out
jp
inc
sub
rol
sbb
shll
aas
or
jb
mov
cmp
mov
cmp
jns
push
add
push
inc
in
incl
in
lock
imul
jbe
sub
scas
pop
je
sbb
sub
cmpsb
es
imul
call
ljmp
xchg
push
xchg
repnz
jnp
add
xchg
rolb
sub
popf
mov
dec
rcl
jae
das
jmp
fnstsw
adc
shlb
mov
jmp
push
hlt
xchg
jno
sub
jo
pop
mov
mov
aas
repnz
push
popa
and
jb
call
fiadds
stos
inc
cmp
lcall
add
jne
aad
int3
cmp
or
mov
mov
mov
flds
cmp
pop
add
mov
aaa
mov
test
add
sub
cmp
rcrb
adc
fs
das
out
pop
xchg
mov
or
and
cmp
daa
in
data16
adc
and
mulb
stc
add
aaa
cmpsl
std
ljmp
add
jns
pop
mov
or
or
or
fwait
shlb
out
or
es
mov
sbb
mov
xchg
xchg
mov
fidivrs
dec
pop
inc
cmp
std
xor
jne
lret
push
sbb
js
fdivrs
sbb
shlb
cmp
out
sub
or
push
dec
rorl
rclb
cmpsl
in
mov
jno
jo
pop
shl
es
mov
xor
mov
ja
popa
aam
fidivl
mov
jb
mov
xor
jns
push
cmp
jns
cld
idivl
push
imul
fwait
cltd
loop
xchg
icebp
or
gs
mov
test
popf
gs
cmp
add
push
popf
mov
add
insl
out
mov
mov
inc
imul
lret
push
cmp
clc
mov
sahf
mov
aas
out
fimull
push
sub
or
xor
jmp
popf
js
push
ja
pop
insb
lret
sbb
ficompl
jnp
inc
aaa
jge
out
push
imul
cmpsb
xchg
mov
scas
nop
scas
jg
fucom
mov
cmp
je
out
push
stc
ret
mov
push
and
push
cmp
cmp
out
and
jecxz,pt
dec
lret
mov
in
sub
xchg
push
adc
mov
cli
pop
das
inc
dec
out
mov
lret
push
jg
sti
fsubr
decl
adc
insb
lahf
adc
cli
push
xchg
rol
in
jp
fisttpl
mov
jle
mov
mov
pop
lahf
mov
jbe
cmpsl
add
cmp
pushf
andl
roll
pop
xchg
out
mov
mov
movsb
jo
sub
bound
and
push
xchg
jl
scas
aaa
shrl
jmp
fcomps
in
cmp
rclb
jmp
adc
call
add
sbb
ret
jne
pop
xorb
push
push
xor
mov
mov
mov
mov
xor
mov
xor
sbb
mov
xor
addl
xor
add
sbbl
add
div
mov
jmp
inc
push
sti
sbbl
mov
pop
popf
jle
dec
jns
jle
push
test
dec
dec
sbb
fdivrs
in
or
je
mov
mov
jg
mov
fcmove
rcrl
dec
fdivrl
insb
movsb
daa
push
hlt
dec
shl
in
push
cmpsb
adc
xchg
negb
pushf
out
adc
pop
xchg
inc
cmp
out
gs
negl
stos
mov
xchg
xchg
cmp
sahf
xchg
enter
call
into
pop
sbb
sti
add
sar
stos
cwtl
add
into
xor
inc
hlt
shlb
test
mov
mov
mov
data16
outsl
jge
push
cmp
mov
mov
je
icebp
push
dec
jp
inc
jbe
clc
push
jge
xchg
xchg
xlat
push
and
xlat
fstps
push
lock
jns
imul
or
insb
popf
jmp
mov
mov
daa
sub
xor
mov
fsubrl
and
test
adc
nop
fdivrs
jp
leave
mov
outsl
pop
sbb
out
fcom
ja
and
pop
or
mov
test
mov
fistpl
lods
popf
test
adc
leave
cmp
clc
fcmovnb
or
es
leave
xchg
cmp
mov
jl
jl
mov
sbb
cmp
jne
dec
lahf
add
scas
mov
push
sub
mov
les
cmc
jle
xor
mov
insl
or
sub
or
jg
dec
popf
xor
in
leave
mov
ljmp
sbb
call
adc
sub
fucom
lea
in
cmc
cmp
or
test
in
sbb
iret
es
mov
shl
imul
jmp
adc
lcall
add
rorl
jo
jbe
xchg
adc
dec
and
xchg
lock
jb
mov
sbb
jecxz
sub
mov
inc
scas
cltd
lods
sbb
xchg
pop
mov
dec
or
and
cmpsb
ss
push
lcall
push
fmulp
movsl
les
stc
mov
mov
mov
xchg
xor
push
sub
jl
mov
rorl
lods
xchg
inc
adc
popf
rcrl
xchg
enter
mov
into
fisubrs
mov
subb
es
pop
mov
je
inc
int3
insb
add
jns
jne
mov
or
add
jl
cmpsl
lods
adc
into
ret
cmp
lahf
mov
xor
jb
lds
dec
fmuls
inc
push
lcall
xor
fdivs
adc
lock
sbb
lret
and
jbe
scas
movsl
pop
or
mov
jne
rcl
arpl
int
xor
push
pop
in
int3
fwait
xor
movsw
xchg
jl
add
jns
test
mov
jmp
sahf
pop
push
int3
and
sub
xor
push
aam
rol
ret
add
add
outsl
jne
fdiv
add
inc
mov
mov
fs
jl
push
pop
dec
pmuludq
add
sub
dec
xor
xchg
and
testl
loopne
mov
fildl
inc
push
push
lock
pop
add
data16
adc
popf
ds
fidivl
int
in
push
shrb
lret
cmp
sub
and
hlt
xor
cmp
or
jno
add
and
fwait
movsl
jmp
pop
shrb
in
mov
or
adc
adc
loopne
add
add
add
jmp
shlb
cld
ja
or
out
ret
jle
dec
jns
jle
pop
mov
xor
pop
ss
pop
insl
mov
lret
sub
xor
hlt
xor
ds
pop
scas
pop
popa
fst
or
test
xor
xchg
cmp
cs
push
and
pop
push
imul
mov
in
mov
in
cltd
ret
test
jecxz
and
xor
imul
pop
mov
fwait
ds
addr16
jl
and
add
in
shlb
mov
cmc
push
pop
into
gs
jns
jno
stc
outsl
xchg
mov
jne
mov
mov
andb
adc
adc
cmpl
xchg
les
repnz
dec
sub
test
xor
scas
ds
fwait
lret
adc
pop
lea
xchg
mov
push
dec
lahf
or
in
mov
mov
add
sbb
xchg
ret
in
or
mov
scas
insl
push
aam
in
and
sub
daa
pop
sub
cs
pop
andl
sub
jb
das
in
and
xor
cwtl
jmp
fistps
xor
sti
lret
jle
xchg
dec
out
mov
jmp
aam
mov
movsb
jle
and
push
xor
inc
push
xchg
mov
xchg
pop
inc
addl
fbstp
enter
jns
cld
imul
push
fcoms
fmuls
xor
fisubs
sub
xchg
mov
stc
cld
adc
jno
pop
xor
adc
aaa
pop
mov
sub
and
fxch
jl
rclb
shlb
sub
loop
enter
pop
mov
es
pop
addr16
push
pushf
pushw
mov
sub
in
mov
mov
mov
mov
ficomps
jge
cwtl
jno
outsb
call
ja
inc
xor
fmuls
cmp
adc
push
pop
scas
add
shrb
mov
ficompl
add
adc
shr
popa
ds
fldt
ret
jno
mov
adc
dec
rcrb
sub
mov
shl
int3
fadds
gs
je
adc
enter
aad
push
push
aas
mov
dec
data16
pop
jecxz
xor
jmp
jp
inc
aas
mov
xchg
mov
out
jnp
ljmp
in
hlt
addl
hlt
push
fwait
or
dec
mov
iret
dec
pop
lods
test
lods
sub
sbb
call
into
arpl
dec
and
jl
add
lcall
mov
call
fidivl
fwait
imul
push
mov
adcl
test
cli
mov
pop
push
shlb
in
sub
ljmp
popa
sbb
pop
imul
lcall
scas
sti
stos
adc
jl
jg
and
insl
out
lods
loope
lcall
pushf
test
jns
mov
aaa
movsb
arpl
in
das
enter
ret
sahf
pop
xchg
mov
loope
std
mov
jne
inc
push
mov
aaa
lds
out
or
fisubl
lods
ret
stc
mov
cltd
js
ds
jno
mov
pusha
jle
xlat
lea
mov
js
adc
les
adc
jge
sub
jmp
xlat
push
jno
pop
adc
pop
movl
movl
cmp
movl
je
movl
lea
addl
mov
xor
mov
not
mov
orl
imul
movl
mov
movl
mov
cmp
je
mov
mov
sub
sub
mov
orl
mov
xor
add
pop
pop
jmp
pop
add
or
add
cwtl
sti
scas
aas
iret
jle
dec
jns
jle
xchg
insl
jge
xchg
lret
mov
jmp
cli
dec
aam
xor
sbb
loope
push
cli
cmp
out
das
sbb
popf
pop
pop
xchg
adc
ja
imul
or
daa
call
inc
pop
notl
les
int3
cli
lcall
xchg
mov
mov
lods
xchg
jb
lret
gs
push
stc
shrl
iret
add
imul
inc
repz
or
and
add
lods
ss
push
in
push
pop
outsb
aas
adc
mov
pop
cmp
js
mov
inc
insb
add
push
rep
iret
rcrb
or
mov
rcrl
icebp
rcrb
push
inc
or
pop
loopne
loopne
dec
dec
mov
add
add
inc
mov
xchg
mov
xor
sub
xchg
stos
fs
xchg
lret
rclb
dec
loope
rcrl
adc
stc
lock
sbb
inc
sti
and
loopne
add
add
jecxz
lock
movsl
push
mov
push
ficoms
imul
lret
mov
mov
mov
lret
pop
pop
ud0
cmp
adc
imul
das
out
call
xor
jp
lret
push
mov
and
imul
add
jmp
xchg
xchg
lock
dec
testb
sub
shlb
dec
shl
pop
inc
shr
jp
push
ret
and
jge
xchg
mov
push
std
mov
jg
add
pusha
movsb
adc
roll
mov
lock
xor
in
mov
add
sbb
push
fs
test
repz
jae
mov
cltd
adc
add
adc
popf
psubq
scas
mov
sar
xor
mov
icebp
loopne
iret
xchg
pusha
add
loope
pop
mov
scas
nop
push
sbb
dec
inc
push
xor
scas
xor
lds
out
fnsave
add
fcomp
or
daa
inc
push
icebp
push
je
xchg
js
pop
mov
lea
xchg
inc
aaa
cmp
pop
mov
int
mov
scas
add
jmp
rcr
jmp
cli
mov
xor
add
xor
pop
in
and
out
jge
xlat
jmp
jno
mov
or
imulb
gs
push
xor
cltd
std
cmp
cwtl
and
xchg
push
lea
sbb
sbb
push
and
dec
das
mov
leave
stos
push
sti
aam
fistpll
push
cwtl
or
je
cmp
adc
lret
les
andl
xchg
inc
int
xchg
mov
cmpsb
aad
add
dec
jmp
jo
rclb
pop
mov
inc
in
pop
repnz
inc
dec
jle
mov
ret
jbe
adc
jnp
dec
dec
pop
aas
add
js
scas
test
or
cmovnp
into
pop
pop
out
adc
sub
pop
test
repz
jnp
ds
sub
jmp
imul
dec
ret
inc
push
and
jmp
dec
add
mov
adc
sub
cmc
orb
imul
jge
icebp
js
fisubl
pop
lret
inc
out
icebp
xor
or
imul
test
inc
mov
outsl
or
xchg
inc
cmp
in
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
jmp
ret
or
insl
pop
jmp
pop
sbb
or
jle
dec
jns
jle
push
in
fidivrs
and
mov
jecxz
mov
fidivs
adc
inc
ret
xchg
inc
and
into
nop
sahf
enter
mov
mov
fs
xor
push
push
xor
xchg
sub
cs
std
mov
aam
ret
or
and
leave
dec
push
jns
movlps
scas
fstps
push
cmp
mov
mov
jmp
cmp
mov
dec
cmp
mov
popa
iret
jnp
hlt
xchg
rorl
gs
xchg
movsl
mov
sbb
aam
mov
jne
jmp
mov
mov
es
mov
push
adc
mov
das
lock
mov
ljmp
lods
inc
mov
ret
jmp
insb
pop
fidivs
mov
test
cli
mov
in
lret
jg
xchg
fadd
iret
clc
lret
aad
dec
out
inc
popl
mov
jge
ss
ret
add
rol
jecxz
pop
das
pop
inc
jecxz
lds
rcrb
xor
inc
in
xor
mov
jl
add
arpl
mov
inc
and
pop
cmpsl
jns
or
aaa
fwait
cmc
jb
int
in
inc
out
pop
mov
insb
push
push
dec
lods
lret
addr16
sub
rorb
shl
dec
push
push
cmp
insl
dec
push
outsl
xlat
into
movsb
test
outsb
popf
sub
int3
ljmp
xchg
sti
mov
cmp
int
cmp
aaa
mov
xor
mov
pop
lret
xor
sub
adc
lods
leave
xor
enter
jbe
and
adc
push
inc
rcrb
mov
inc
add
ret
or
scas
je
add
dec
fistpll
ret
mov
movsb
dec
je
rcrb
pop
mov
dec
jnp
inc
xor
jg
adc
out
cmp
jae
inc
inc
mov
jno
cmp
insl
push
and
lret
cs
mov
adc
xchg
dec
jae
lods
loopne
outsl
mov
inc
pusha
xor
dec
insb
cmp
mov
cmpsl
pop
cld
dec
cwtl
cmpsl
enter
popa
aaa
les
inc
stos
gs
mov
lahf
and
cmp
fdivrs
inc
inc
and
cwtl
cmp
mov
xor
flds
lods
xor
mov
xor
mov
lds
int
dec
sbb
jbe
pop
sbb
js
pushf
bound
lret
lcall
int
sbb
pusha
faddl
sub
push
fistl
daa
ret
repnz
imul
imul
iret
mov
mov
cwtl
mov
lods
ret
xor
lret
xor
popf
fsubrp
fidivrs
inc
adc
repz
pop
mov
mov
push
clc
xor
les
and
cmpsl
mov
and
in
ja
int
sub
add
xchg
inc
sbb
cmp
sahf
imul
aam
push
nop
lret
shl
mov
lea
notl
in
ds
inc
shlb
sbb
nop
aaa
jecxz
and
or
mov
inc
loope
xchg
in
ret
mov
dec
push
mov
pop
test
loope
mov
mov
inc
lock
jmp
mov
mov
mov
mov
xor
mov
add
jmp
int
adc
push
pop
dec
xchg
leave
mulb
pop
lds
jle
jns
jle
lret
or
dec
inc
pop
cmp
ja
mov
cwtl
fcoml
insb
and
mov
fimuls
jne
xor
data16
fidivrl
lahf
sbb
add
push
mov
rorb
fcompl
push
lcall
cltd
or
imul
loopne
cmp
mov
out
sahf
in
shlb
pop
test
or
sub
in
test
clc
dec
inc
mov
sahf
fwait
into
stos
push
shr
dec
test
mov
xchg
jbe
cmp
fdivrs
dec
mov
enter
shl
call
pop
ljmp
mov
fistpl
and
jl
xor
ret
enter
repz
ljmp
jne
insb
pop
inc
cwtl
push
outsb
mov
sub
mov
ficomps
xor
adc
push
inc
inc
cwtl
int3
arpl
lahf
sub
aaa
and
lods
std
clc
sub
out
loope
xor
add
add
push
cs
cmp
mov
inc
or
movsb
inc
ja
push
rorb
inc
xor
xchg
xor
jmp
dec
sbb
mov
into
addb
mov
shrb
mov
je
sti
adc
dec
inc
stos
jno
popf
mov
outsl
sub
stc
cmpsl
or
sbb
rol
cmp
push
xor
pop
xchg
leave
out
jle
and
mov
mov
imul
ljmp
out
int
push
push
xor
add
test
mov
stc
leave
xchg
je
iret
popf
cwtl
stos
mov
xchg
jge
lea
jge
adc
xchg
fidivrl
sbb
jg
inc
ret
test
js
push
lcall
pushf
pusha
lock
dec
mov
sbb
jns
inc
jae
inc
into
lret
mov
pop
repz
sub
repz
push
inc
xchg
and
ljmp
jbe
mov
adc
pop
lds
mov
jnp
push
mov
icebp
negl
popf
or
cld
sbb
lahf
or
inc
pop
fildl
adc
add
test
adc
lock
dec
push
dec
icebp
xchg
fwait
cmp
push
push
and
cs
mov
iret
mov
insl
bound
aaa
and
lock
sahf
dec
lds
imul
push
push
sbb
jge
push
in
test
jmp
cmpsb
lcall
cmp
bound
outsb
dec
fisttpl
cmp
or
sbb
or
and
lahf
add
iret
jg
pop
xor
cli
movsl
iret
cmp
int3
fildll
jle
or
das
loope
out
out
in
int
fdivrs
mov
lahf
inc
loop
xlat
mov
fdivs
push
mov
mov
pop
test
cs
out
lock
gs
jmp
mov
adc
jne
xor
pushf
jnp
pop
stos
sbb
jb
ret
lea
dec
pop
ds
adc
mov
and
bound
sti
jns
or
xchg
jbe
adc
bound
or
subl
pop
out
lcall
dec
and
aad
inc
fwait
sbb
cmp
std
cli
fldcw
idivl
push
addl
ja
sahf
stos
stos
and
inc
mov
das
ja
cmpsb
pop
out
loop
fiadds
in
sbb
insb
pop
inc
mov
test
add
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
jmp
fadd
test
rorb
insl
pop
jl
insl
adc
dec
jns
jle
out
popa
lock
cmp
dec
mov
aad
cmp
test
sarb
sbb
xchg
pop
pinsrw
jno
daa
lahf
lock
repnz
jge
gs
ljmp
add
cltd
mov
out
imull
fstpl
push
push
fwait
pop
pop
test
push
divb
adc
test
cmc
imul
loopne
pop
scas
mulb
sbb
fildll
inc
mov
outsb
cmpsb
ret
cwtl
and
shr
pop
xlat
adc
cmpsl
insb
and
adcl
mov
push
mov
jmp
loope
pop
addl
jae
xor
pop
dec
adc
out
stc
fs
dec
aam
std
push
jmp
push
jnp
dec
movsl
fdivrl
hlt
mov
into
xchg
fisubl
outsl
jecxz
shlb
or
jns
stc
ds
jns
loope
out
jp
and
fidivrl
and
push
inc
jmp
sti
adc
add
insb
call
jae
int
iret
ret
pmaddwd
js
and
aas
dec
mov
stc
fistpl
fisttpll
lds
mov
push
arpl
adc
sub
and
xor
leave
fists
outsl
lock
xlat
push
mov
dec
jae
cmpsl
cmp
sar
clc
cmp
sub
inc
aad
adc
int
add
movsb
test
push
jmp
sbb
sub
cli
ret
pop
jp
pop
int
addb
adc
fimull
data16
mov
cld
pop
or
mov
stos
popf
in
fidivrs
int
and
cwtl
addr16
or
lods
xor
das
fisubrs
xor
pusha
js
test
adc
dec
push
imul
pop
cmpsb
pop
mov
mov
adc
push
xor
lret
cs
out
mov
shlb
sub
and
lods
in
and
addl
inc
or
fwait
and
mov
insl
mov
jbe
push
inc
mov
mov
outsb
xchg
mov
cld
clc
fisttpl
sub
stos
clc
mov
int
add
jmp
push
dec
incl
xor
or
push
imul
jge
dec
xor
pop
bound
lock
pop
mov
fists
xor
mov
xor
pop
sbb
cmpsl
xchg
rol
les
dec
fcmovbe
xor
out
fwait
xor
or
mov
imul
push
xchg
pop
lret
and
lret
mov
mov
insb
add
fsubs
cmp
cmp
fidivrs
lods
ss
sub
mov
pop
and
fistpl
enter
push
loop
adcl
cmp
lods
mov
test
sbb
popa
mov
xchg
fs
mov
je
jg
xor
pop
ds
xor
mov
mov
fnstsw
fdivrs
mov
iret
xchg
sub
cmp
enter
sarl
mov
sub
add
push
out
neg
adc
dec
lds
sub
mov
fdivl
xlat
mov
lcall
lret
test
decl
add
inc
pop
jmp
mov
cmp
je
mov
jmp
push
mov
sub
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movzbl
sbb
mov
sbbl
push
xor
or
sbb
push
jmp
jmp
lahf
xchg
mov
sbb
fisttpll
jle
loope
jle
xchg
cmp
repnz
xchg
adc
scas
sbb
dec
mov
imul
in
jecxz
cmp
lahf
xchg
lods
shll
and
push
adc
inc
cmp
in
idivb
jmp
sbb
fdivs
lret
pop
jne
pop
pop
adcl
inc
idivl
xchg
rorb
pusha
aas
lret
mov
mov
sbb
jmp
ret
or
jg
test
out
movsb
test
lods
int
mov
mov
fwait
out
cld
add
pop
mov
adc
out
push
pop
sub
jbe
pop
std
repnz
mov
ret
inc
sbb
jecxz
je
sarl
push
pop
and
and
test
jnp
enter
hlt
imul
mov
loope
out
mov
pop
sub
aas
xor
std
sbb
cmpsl
pushf
rcrb
mov
xchg
cmp
xchg
stos
xchg
lcall
fistpll
cmp
les
into
mov
sarl
scas
cmp
outsl
es
int
jo
mov
inc
inc
sbb
xchg
push
cmp
shll
mov
insb
inc
jb
es
xchg
dec
cmpsl
and
xchg
ja
hlt
filds
js
js
gs
lea
les
out
lods
adc
cmpsb
ja
mov
lret
out
repnz
push
sub
add
pushf
sbb
adc
sbb
outsl
ret
lcall
mov
movb
mov
daa
scas
sub
shrb
xor
jg
out
nop
xor
adc
ret
pop
pushf
xchg
inc
adc
mov
gs
mov
adc
and
add
inc
jns
stc
outsl
out
test
inc
cltd
mov
or
and
scas
sbb
xchg
dec
outsl
mov
orl
push
lds
add
and
push
stos
fisubrl
popa
or
loope
out
cwtl
jl
sbb
mov
inc
dec
mov
das
mov
fimuls
mov
xchg
and
into
aas
mov
js
iret
les
xchg
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
or
mov
add
push
sub
mov
xor
jmp
push
ja
push
aaa
push
jo
mov
jbe
outsb
fdivrs
loope
jle
ret
and
push
mov
cmpsb
cmp
xchg
sti
dec
std
push
into
jnp
sub
jnp
xchg
cmp
aaa
adc
mov
dec
stc
hlt
out
pop
xlat
xchg
scas
and
xlat
push
or
pop
mov
aad
jb
cmp
cld
insl
sbb
xchg
mov
mov
dec
fs
jns
stc
mov
xor
loopne
jns
sbb
call
dec
mov
subl
sti
dec
xchg
fstpl
add
jae
gs
sbb
jbe
lcall
daa
lock
enter
cmpb
add
adc
push
pop
cmp
leave
ret
adc
imul
lret
sti
pop
pushf
cmc
and
lahf
je
std
iret
leave
lret
test
test
loopne
sahf
cmp
nop
push
stc
xchg
repnz
test
adc
push
push
test
mov
scas
stos
inc
movd
out
outsl
es
jns
in
sbb
cmp
cmpsl
xor
adc
adc
mov
sbb
xor
cmpsb
sub
addb
or
mov
push
aad
shl
test
push
outsb
ljmp
adc
add
aaa
lods
in
add
dec
std
adc
push
xor
out
pop
icebp
clc
stos
mov
test
mov
cmp
and
dec
rorb
push
adc
pop
ret
xchg
pushf
loope
popa
addb
sub
lds
xor
clc
xor
adc
je
lret
cld
dec
lret
sub
clc
dec
hlt
int
inc
inc
outsb
inc
addl
and
xor
divl
js
add
enter
pop
hlt
int3
ds
sti
add
int3
std
adc
cmpxchg
in
stc
cmp
fdivp
sub
cmp
test
push
test
loopne
int
push
pop
push
and
lcall
mov
dec
lods
mov
xor
stos
mov
mov
jmp
jmp
xchg
cmp
aad
pop
sbb
push
rorb
test
xchg
je
pop
push
push
fidivs
gs
ljmp
or
test
mov
xor
notl
movl
movl
add
jmp
cmp
jmp
adc
sbb
xchg
pop
adc
jne
stc
pop
rcr
jle
loope
jle
adc
daa
push
xor
jne
jp
push
das
add
cltd
iret
and
sub
mov
push
inc
pop
pushf
mov
mov
popl
data16
testb
inc
out
into
aas
pop
mov
or
js
dec
dec
jg
push
push
or
jae
push
test
flds
and
mov
fisubs
pop
xchg
imul
mov
jecxz
movsb
ja
push
imul
mov
mov
jbe
and
pop
in
or
lret
jo
xchg
call
mov
xchg
mov
jne
imul
sub
rol
sub
jle
mov
mov
or
call
mov
andb
mov
jb
sbb
js
mov
dec
lock
test
insl
sbb
xchg
in
sbb
testb
rcr
sub
and
popa
push
test
movsl
sbb
mov
imul
push
and
ljmp
aam
jp
mov
pop
test
out
or
xchg
lods
xchg
or
or
loopne
push
inc
dec
mov
bound
sub
xchg
dec
js
addb
aam
pop
std
bound
jns
cmpsl
aas
or
cmp
dec
leave
insl
sti
jp
sub
hlt
jle
mov
inc
arpl
mov
or
pop
push
inc
inc
stos
mov
jae
pop
fsts
mov
xchg
dec
stc
inc
lcall
xor
push
xchg
sub
inc
push
in
es
lds
popf
mov
adc
lock
adc
fucomp
int
in
inc
sti
and
mov
fistps
mov
sar
insb
mov
xchg
lahf
xchg
rcl
clc
sbb
loopne
test
mov
xchg
push
aam
hlt
add
inc
test
loope
insl
cmc
pusha
jge
popa
into
aas
leave
in
mov
aad
out
pop
add
adc
xchg
sub
out
inc
es
sbb
ja
mov
aad
test
xor
mov
cld
xchg
sti
add
inc
arpl
push
out
mov
ficoms
fs
mov
arpl
adc
nop
dec
lcall
inc
add
add
mov
movl
mov
mov
movl
mov
movl
mov
movl
jmp
movl
cmp
movl
jne
jmp
call
je
fnsave
inc
leave
cmpsl
outsb
loope
inc
in
jle
js
jle
cli
sub
and
ja
mov
fisttps
and
cmp
bound
lret
sbb
push
andb
test
outsl
mov
shrl
adc
mov
and
ljmp
mov
stos
cmpsb
insb
insb
or
push
dec
xchg
pop
lea
or
call
pushf
lcall
mov
out
pop
mov
cmc
loop
ret
ret
lahf
lds
pop
pop
ja
dec
stos
jle
dec
in
cmpsb
sub
mov
sbb
xor
fidivrs
add
iret
adc
and
adc
and
xor
xor
aam
subb
mov
nop
xor
orb
mov
inc
xor
xor
jecxz
out
xlat
push
cmp
mov
mov
mov
pop
ret
inc
call
pop
dec
mov
rorb
sbb
inc
xor
adcl
popa
sub
mov
cmpsl
nop
pop
push
in
adc
imul
xchg
mov
dec
push
cmp
filds
mov
mov
mov
or
inc
std
lcall
repz
lret
sahf
mov
adc
xchg
mov
push
imul
or
addr16
nop
popf
and
or
fs
aaa
sahf
xor
or
daa
push
rcr
jg
add
aas
lods
into
sub
aaa
mov
add
mov
fadds
mov
je
jmp
mov
in
test
fsts
call
divl
aam
pop
mov
subb
jbe
lret
cmpsl
sub
outsl
lea
pusha
inc
mov
sbb
xchg
sbb
xchg
sbb
sbb
xor
lret
nop
cli
xchg
lock
xlat
push
sbb
xor
or
mov
out
pusha
js
push
das
fisttpll
out
out
dec
insl
out
mov
fsubrl
xchg
jle
lahf
jo
aam
mov
jno
mov
mov
jo
inc
sbb
aaa
subl
mov
les
mov
fidivl
xor
fnstcw
inc
and
in
inc
lret
cmp
cmpsb
xor
arpl
andl
mov
orl
sub
push
mov
or
mov
addl
add
subl
push
decl
call
movl
incl
cmpl
movl
jb
jmp
cmp
jne
movl
mov
mov
mov
mov
mov
jmp
mov
xchg
jno
jno
out
fisttpl
das
loopne
jle
js
jle
daa
call
rcrl
cmc
mov
adc
jae
addr16
lret
cmpsb
push
jbe
mov
ss
cmc
pop
nop
adc
pop
jp
xor
out
dec
sub
fmuls
sbb
out
into
jg
push
push
mov
aad
jno
xchg
pop
lcall
and
pop
xor
dec
call
out
jbe
dec
sub
push
cmpb
jl
push
lret
xchg
arpl
mov
jne
xchg
stos
cmp
ds
push
addb
ficomps
cmp
pop
jnp
inc
shrb
pushf
cli
sarl
and
sahf
and
xchg
mov
sub
insb
bound
push
sub
cmp
xchg
and
and
pop
and
mov
adc
test
scas
add
leave
cmpsl
or
xor
mov
scas
xchg
out
adc
dec
cmp
and
rcrb
ret
sub
ret
mov
movsl
lea
nop
dec
adc
mov
idiv
lock
cli
mov
adc
inc
inc
dec
rorl
out
sbb
add
mov
xor
pop
call
xlat
cmc
push
and
and
jo
or
lret
sti
loop
divps
mov
xchg
mov
xor
jg
xchg
lock
xorl
adc
not
sbb
ret
dec
mov
push
popa
jne
shlb
inc
xchg
inc
movsl
leave
and
mov
jbe
jne
lcall
fs
sub
push
je
movsl
pusha
aad
fildl
adc
or
sbb
inc
test
cwtl
div
push
into
loopne
pop
inc
push
mov
dec
ud2
mov
or
pusha
ret
push
or
icebp
aaa
cmpsl
ret
mov
mov
es
test
jle
push
je
idivl
mov
jb
inc
mov
arpl
or
inc
push
in
popa
ljmp
in
jl
fwait
cmp
loope
incl
push
xlat
inc
adcb
mov
dec
scas
stos
push
test
jle
fmuls
mov
dec
jp
les
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
sub
push
adc
mov
mov
andl
jmp
jns
out
std
jge
or
clc
stos
fsubrl
xchg
loop
jle
jns
jle
jp
daa
ret
sub
mov
dec
jo
push
repnz
gs
idivl
in
jle
push
cs
jno
loopne
push
xchg
and
clc
mov
ss
mov
sbb
add
cli
or
lods
xlat
xor
rorl
stc
js
insb
in
or
in
pusha
es
lods
xchg
xor
shll
cmc
loop
ds
lock
fisubl
and
xchg
push
add
outsl
cltd
add
sub
mov
push
loop
adc
loop
and
xor
add
xor
out
data16
adc
or
loopne
cmp
mov
lods
repz
fimull
in
adcb
int
sub
add
aam
popl
sub
scas
add
inc
add
popa
lcall
out
lret
shlb
imul
ret
inc
insl
jo
mov
pop
mov
or
js
mov
add
arpl
mov
dec
mov
and
pop
lret
pop
pop
lds
adc
subl
stos
push
fs
fcomps
push
push
fwait
cld
fdivs
mov
mov
dec
sbb
lret
push
lock
out
testl
jae
lretw
outsl
xchg
inc
sbb
out
push
hlt
cmp
dec
mov
inc
push
hlt
push
stc
sub
xor
bnd
pusha
in
pop
push
aas
loop
jecxz
sub
add
xchg
xor
adc
sub
xchg
fisubrs
loop
or
or
mov
and
dec
aas
nop
mov
push
jno
jbe,pt
sub
in
xchg
and
das
ds
jbe
xchg
lahf
int
inc
and
push
push
adc
or
add
js
adc
lds
adc
idiv
jbe
inc
aam
daa
mov
pop
scas
stc
add
push
leave
sbb
cld
mov
jb
repnz
xorl
jl
rolb
fucomip
pushf
test
and
and
push
xor
sbb
adc
pop
add
push
cmc
cmpsl
and
mov
sub
out
sbb
push
rcll
cltd
daa
roll
cmpsb
add
cmp
sbb
test
bound
lods
jne
stc
pop
pop
loopne
out
mov
pop
inc
cli
push
sbb
jb
pop
dec
add
test
mov
in
jae
xlat
outsl
mov
fcoms
das
sahf
jns
jl
xor
sbbl
inc
cmpsb
pop
dec
notb
xchg
lock
add
mov
loop
shlb
and
cwtl
imull
cli
xchg
dec
sbb
bound
mov
sub
add
jb
mov
push
push
int3
add
lret
jns
pushf
mov
pop
rcl
adc
int
out
dec
insl
push
mov
mul
pop
loop
xchg
or
sub
push
sub
jg
dec
add
xor
adc
push
lcall
shl
cs
sub
xchg
cmc
cltd
cld
sub
fcmovb
and
popa
and
movsb
addr16
mov
loop
jnp
dec
outsb
pop
and
lods
fisttpl
dec
iret
dec
cmp
mov
das
test
xchg
lods
mov
clc
enter
scas
daa
pop
stc
xor
ret
sbb
dec
in
fwait
adc
ficompl
xlat
cltd
xchg
mov
and
das
or
mov
or
add
cmp
movl
xor
movl
movzwl
add
mov
mov
jmp
jmp
or
std
fdiv
sbb
xor
jle
jo
jle
jns,pn
dec
aad
adcl
sbb
shl
dec
lea
cli
std
das
and
xchg
mov
jge
fimuls
adc
mov
sub
adc
jle
sahf
jp
xchg
push
scas
sub
cmp
sub
xchg
cli
jge
clc
pushf
es
in
xor
in
pop
movsb
stos
dec
dec
mov
xchg
rorl
cmpsb
out
aaa
push
dec
xchg
jmp
outsl
loopne
in
and
ficomps
and
cmp
enter
push
stos
les
std
shlb
loope
add
or
pop
and
fisttps
andl
push
adc
mov
add
inc
sbb
or
mov
ja
adc
push
sarl
bound
leave
push
jecxz
jnp
test
imul
mov
push
dec
in
pop
jp
lods
test
jl
xchg
pop
xor
push
dec
imul
clc
jnp
rcr
inc
sbb
xor
jle
into
nop
rclb
sub
xchg
aad
mov
or
test
xchg
jb
sub
out
sub
movsl
dec
cwtl
cmpsb
pop
dec
add
adc
jl
inc
scas
inc
out
testb
inc
mov
dec
inc
add
imul
in
adcb
dec
inc
mov
movsb
jmp
push
jo
lret
sbb
inc
inc
fwait
lock
andl
aas
push
mov
sbbb
sarb
dec
jecxz
add
pop
data16
and
dec
mov
ret
mov
cmp
pop
pop
cmpb
pop
jmp
inc
ret
mov
inc
movsb
stos
cmpsb
leave
and
and
jae
mov
pop
lahf
ret
and
loopne
out
aas
popa
out
add
sub
negl
shr
leave
in
out
pop
pusha
mov
fidivl
mov
xlat
mov
test
cmpsb
jg
into
mov
jp
cli
or
jo
lret
jns
std
hlt
rcr
sub
jp
sbb
scas
mov
mov
ret
outsb
int3
xchg
cvttps2pi
add
enter
inc
mov
negb
dec
add
sbb
lea
or
lods
ret
loope
or
addr16
inc
popf
clc
shlb
cmpsl
lea
sub
mov
sub
sub
ja
sbb
xor
inc
jmp
sbb
sub
jle
ret
jmp
jo
xlat
and
inc
int
scas
or
js
mov
cmp
pop
in
or
pop
adc
gs
scas
sub
push
ljmp
movsb
scas
es
mov
push
out
push
icebp
in
sahf
scas
pusha
dec
mov
add
lahf
and
lahf
jae
cld
adc
push
popa
lods
inc
adc
arpl
pop
mov
dec
xor
cli
pop
push
and
adc
pushf
popa
jns
dec
aam
outsl
xor
fwait
call
mov
xor
fwait
iret
ljmp
mov
pop
test
dec
xlat
and
ret
push
int
popa
out
icebp
sbb
leave
cmp
enter
sub
mov
pop
jge
mov
jp
aad
sub
mov
lret
xchg
lret
push
loope
lahf
jmp
ljmp
cmp
mov
mov
push
push
fsts
mov
mov
std
rorb
cmp
jb
pop
lock
mov
ss
xchg
push
int3
repnz
xchg
mov
and
addb
pop
pop
mov
adc
movsb
mov
sub
mov
mov
or
xor
xor
add
xor
mov
add
mov
inc
mov
xor
add
mov
movl
mov
mov
sub
add
jmp
xor
xchg
mov
stos
cs
sbb
mov
jle
jo
jle
mov
sbb
imul
xor
cld
push
mov
sbb
add
mov
jae
inc
loop
addr16
sub
ret
add
or
mov
test
adc
das
in
mov
jg
call
out
add
imul
add
mov
cld
jp
scas
inc
push
add
je
pop
xor
mov
pushf
cmp
mov
jo
jmp
les
pop
cmpsl
pusha
mov
pop
pop
mov
jle
hlt
imul
inc
int
cmp
inc
or
sub
sbb
lahf
inc
push
test
sbb
roll
jmp
bnd
push
test
das
fnstcw
mov
addr16
or
dec
and
ret
sub
jae
sbb
rolb
enter
pop
loope
hlt
jp
lret
mov
ss
insb
mov
js
xchg
aas
test
mov
push
fsubl
inc
dec
daa
inc
lcall
loope
pop
pop
shll
and
int
ret
push
loop
jbe
insb
les
inc
jecxz
icebp
shll
out
in
dec
fs
lea
inc
jb
ljmp
sub
xor
mov
sbb
fs
and
or
jg
mov
ret
mov
jne
mov
inc
rcrl
and
adc
sbb
and
cmpsl
add
fdivl
mov
dec
mov
js
hlt
fidivrs
scas
in
or
sti
stos
shrb
mov
in
ss
mov
lcall
xor
lds
dec
mov
into
scas
add
mov
mov
cmp
jp
rcrb
test
xchg
pop
add
add
push
xchg
hlt
pusha
push
lods
xor
mov
dec
fidivs
jmp
cmp
fldt
mov
xchg
ficomps
nop
mov
in
outsl
sub
push
loop
push
xlat
dec
push
inc
pop
pusha
insb
xchg
mov
push
dec
lret
popf
ss
cmp
mov
iret
sub
stos
sub
xlat
data16
out
sahf
pop
mov
out
aad
popf
xchg
popf
sahf
ret
mov
xchg
push
push
pop
or
jnp
adc
test
or
push
mov
mov
xchg
sti
mov
adc
sbb
xchg
dec
adc
leave
rcr
aam
aam
mov
xor
scas
mov
dec
inc
insb
aaa
popa
dec
and
movsl
mov
push
pop
mov
lret
dec
cltd
jno
or
jecxz
iret
add
les
fwait
ljmp
ja
dec
movsb
dec
das
jne
mov
stos
mov
sbb
ss
bound
jecxz
jecxz
loopne
leave
iret
or
aas
push
sbbb
cmp
mov
sub
dec
mov
add
pop
lcall
fwait
jg
outsb
inc
jb
popf
subl
fld1
cmp
push
pusha
lock
xchg
and
das
in
daa
xor
fistl
shll
pop
and
and
xchg
push
jb
out
xor
out
test
pushf
pop
dec
into
sbb
adc
xor
cmpl
push
jns
cmp
inc
or
push
jmp
outsb
gs
and
fdivrs
cltd
or
fistpll
insl
inc
pop
xor
enter
push
jl
test
in
test
pop
out
roll
and
mov
pop
mov
ljmp
imul
xor
mov
cmp
jmp
popa
imul
cld
popf
popa
imul
push
fsts
sbbl
xor
jle
jns
jle
sub
loopne
xchg
shll
mov
and
cmc
dec
test
ljmp
lds
mov
mov
xchg
js
xor
cltd
pop
sbb
aaa
xchg
rcll
sbbb
xchg
lea
cmc
leave
dec
roll
mov
imul
cwtl
sbb
mov
mov
xchg
mov
cmp
jbe
iret
pop
rep
jl
test
aaa
or
cs
ret
fwait
add
clc
subb
mov
pop
jno
outsb
pop
push
cmc
rep
xlat
cmp
and
xor
sbb
fsts
lahf
jecxz
js
lahf
push
adc
outsb
adc
pop
lds
lds
cmc
mov
and
movsl
push
sub
aad
pop
sub
pop
int3
dec
mov
in
pop
sbb
repz
sbb
cmp
rorl
fs
icebp
or
or
mov
pop
push
ja
outsl
mov
adc
adc
loope
dec
mov
cmp
xchg
hlt
adc
test
sub
jg
mov
mov
divb
cld
out
mov
or
fwait
and
pusha
dec
in
cmp
and
aam
in
movd
push
fnsave
imul
mov
sub
stos
in
push
jo
sbb
hlt
es
mov
in
rolb
mov
addr16
mov
mov
and
inc
mov
inc
mov
and
fs
notb
orb
xor
outsb
in
inc
add
or
cs
in
repnz
or
pop
pop
imul
push
aas
lcall
aas
pop
test
sub
testb
call
dec
jno
and
int3
in
xchg
inc
add
push
add
dec
movsl
andl
xchg
sbb
orb
movsb
rorl
or
gs
push
push
fldt
cltd
mov
sub
mov
jmp
pop
pop
fstl
pop
movsb
cmp
xchg
repz
andb
pop
in
adcb
nop
push
testl
lahf
mov
mov
mov
pushf
das
repnz
pusha
loop
insb
mov
push
repz
shlb
loope
or
imul
addr16
mov
and
pop
xor
test
cltd
cmp
leave
fildll
imul
repz
sbb
sar
cmp
int
and
xlat
pop
cli
jns
jmp
out
div
lds
mov
xor
cmpsb
dec
lahf
mov
ds
and
dec
aam
inc
pop
inc
aaa
es
dec
mov
xor
pop
test
push
add
addr16
sbb
mov
in
cmpsb
in
xor
mov
ret
mov
call
imul
mov
test
adc
shrl
aam
push
sti
push
and
fimuls
adc
shl
test
shlb
dec
inc
xchg
push
dec
lret
pop
fmulp
xchg
push
bswap
xor
adc
add
dec
gs
xchg
subb
push
ljmp
push
movsl
daa
lcall
test
out
push
xor
lds
fcompl
adc
into
aas
inc
jecxz
int
adc
shlb
out
es
in
and
pop
xor
or
push
push
or
inc
rol
ljmp
push
daa
jbe
pop
imul
popa
cmp
shrl
clc
lock
leave
inc
adc
cli
mov
stos
xchg
cli
add
xchg
fsubl
jecxz
mov
int3
dec
fmuls
divb
or
xchg
inc
aam
test
test
int3
cmp
cmp
movl
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
pushl
push
call
cmpl
jb
or
movl
sbb
mov
xor
sub
mov
orl
add
cmp
je
movl
push
jmp
xorl
mov
add
mov
addl
sub
movl
mov
andl
xor
addl
add
movl
cmp
movl
jb
mov
mov
sub
xor
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
inc
xor
sbb
add
or
add
imul
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
and
mov
sub
cmp
movl
ja
xor
add
add
mov
orl
jmp
xchg
dec
in
in
test
out
aam
movsb
jp
bnd
jo
jle
push
jecxz
out
mov
pop
daa
imul
scas
mov
xor
dec
inc
dec
in
ljmp
jl
daa
xchg
adc
sahf
lcall
imul
sahf
loop
cwtl
cmp
xchg
pop
sbb
hlt
test
pop
lret
stos
push
int3
mov
mov
push
lock
pop
outsb
adc
jl
xchg
inc
cmp
sahf
dec
addr16
sahf
or
jae
cmp
dec
je
push
and
ss
iret
xchg
inc
fnstcw
adc
jge
or
pop
sahf
jae
push
imull
xlat
or
daa
push
movsb
xchg
testl
clc
xor
mov
cltd
or
jge
outsb
int3
fstl
pop
mov
ljmp
mov
ljmp
ret
xchg
push
mov
rcr
stos
fwait
lods
jo
fs
fwait
out
inc
lret
fcomi
jmp
ret
ljmp
adc
dec
ja
push
gs
adc
inc
xor
dec
popf
iret
jne
ss
mov
or
stc
pushf
shr
jae
pop
sbb
fstps
mov
mov
pop
pop
cwtl
enter
frstor
dec
iret
pause
mov
gs
adc
push
xchg
sahf
inc
insb
or
mov
cmp
stc
and
mov
stos
and
cwtl
imul
lods
mov
test
or
outsl
pop
cmp
ds
test
xchg
push
add
xchg
jno
shll
mov
fcomip
dec
push
push
mov
lods
in
pop
xor
mov
push
fsubl
mov
insb
xchg
test
xchg
push
call
shrl
inc
inc
jne
push
mov
lods
pop
sbb
adc
jae
jae
test
cmp
push
call
mov
mov
inc
ret
mov
mov
faddl
cmp
pusha
enter
dec
cmp
fidivrs
js
add
sar
dec
divl
fildll
cmpsl
mov
pop
push
xchg
mov
fisttpl
or
push
dec
arpl
add
testl
mov
ret
aas
and
cmp
mov
dec
in
fidivrl
push
popa
push
imul
scas
sbb
dec
pop
cmp
leave
jle
jp
stos
sbb
mov
fcomps
push
adc
aas
lock
stc
das
sub
pop
call
or
sar
sbb
inc
movsb
sub
add
lret
cld
inc
shrb
inc
stos
sub
inc
or
jge
dec
aam
sub
mov
mov
dec
jno
test
ja
aas
sbb
mov
xchg
popf
and
xor
xor
out
mov
data16
and
ret
mov
add
mov
gs
test
or
mov
icebp
mov
sti
push
push
mov
pop
out
popa
jbe
push
arpl
or
push
cmp
sbb
xchg
pop
mov
inc
adc
shll
push
dec
test
jo
hlt
pusha
inc
jno
jo
lds
jb
inc
shlb
mov
push
add
xor
mov
repz
jg
inc
stos
rolb
push
int
jmp
cmc
xchg
and
gs
push
and
sub
xchg
dec
xor
or
and
sbb
scas
push
mov
rcr
mov
fnsave
xor
and
popf
scas
and
cmp
repnz
sbb
fidivs
adc
aam
mov
adc
sub
inc
inc
add
inc
add
shr
jno
add
mov
subl
mov
mov
sub
mov
xor
xor
or
add
adc
jmp
test
jne
xchg
in
in
sbb
stos
cld
jle
jo
jle
pusha
dec
std
jb
shlb
mov
aam
outsl
scas
leave
dec
jp
sub
mov
add
xchg
inc
sbb
jle
jno
xor
fs
mov
je
push
pop
stc
lret
fisubl
add
xor
jecxz
shl
lret
inc
add
out
sbb
stos
les
sti
push
jle
mov
call
scas
mov
dec
fwait
imul
mov
add
imul
js
adc
enter
and
mov
xchg
inc
sbb
bound
das
jecxz
push
insb
popa
mov
mov
imull
aam
xlat
testb
xchg
stos
sbb
and
pop
and
fisubl
sbb
pop
inc
das
xor
fmull
movsl
out
ss
xchg
rcll
sbb
inc
mov
negb
out
repnz
and
and
cmpsb
xchg
les
push
lods
rcll
inc
ret
inc
xchg
sbb
cmc
rclb
scas
adc
mov
adc
dec
sti
mov
mov
ds
adc
add
mov
pop
in
adcb
out
ret
cmpsb
cltd
and
loopne
mov
arpl
cli
or
pusha
fwait
pop
adc
push
xchg
loope
lea
daa
cmc
fsubr
dec
mov
fdivl
movsb
rclb
adc
mulb
movsb
clc
dec
negb
mov
xor
push
mov
inc
add
rcll
jns
fdivl
mov
mov
xchg
orb
jb
ret
pop
outsl
and
xor
push
lods
jnp
push
pusha
mov
shrl
push
jo
sbb
pop
stc
adc
aaa
js
lods
sarl
inc
add
cltd
das
cmpsb
mov
cli
out
sbbb
xchg
and
xor
pushf
fucomip
xor
mov
xchg
lods
lret
mov
or
push
push
cmc
xor
xchg
sbbl
xor
inc
pop
or
fstpt
lods
out
outsb
imul
ljmp
aaa
add
inc
mov
jbe
mov
rcr
es
sahf
xchg
dec
xor
dec
push
mov
cmp
mov
insb
push
sbb
insl
iret
insb
outsb
dec
daa
mov
aaa
fisttpll
push
xor
pop
fdivr
int
mov
fldcw
mov
insb
fdivr
test
cmc
std
in
pop
or
shlb
stos
insl
fidivl
rcrb
pop
adc
cmp
cs
mov
or
jge
push
out
pop
sbb
je
add
cmpl
clc
or
in
insl
jb
push
jmp
sbb
imul
or
jmp
and
mov
cmp
mov
fmuls
push
xchg
jmp
xor
ljmp
stos
xor
xorb
cmp
push
hlt
stos
mov
add
sub
push
pusha
jecxz
mov
xor
push
mov
inc
and
test
mov
push
in
mov
lret
dec
cmp
nop
jecxz
add
movsl
add
fadds
ret
or
mov
loop
out
test
insl
xchg
sub
jb
ret
adc
lock
lret
fimuls
fdivrl
test
mov
adc
arpl
and
fsts
adc
daa
in
push
stos
sub
out
inc
fimuls
fisttpll
in
test
dec
push
push
sbb
mov
pop
push
inc
outsb
mov
iret
sahf
leave
jnp
pop
mov
in
stos
ret
test
add
imul
xor
mov
mov
xorl
sub
movl
cmp
movl
ja
mov
mov
movl
jmp
sub
mov
add
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
call
jmp
xor
xor
xor
add
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
push
call
cmpl
jb
add
imul
mov
mov
jmp
aas
andl
push
repnz
pusha
sbb
mov
jo
jle
xor
xchg
inc
jl
push
push
mov
loope
dec
insl
insb
inc
add
enter
fidivrs
testl
ljmp
in
xchg
jb
pop
add
mov
and
pop
mov
mov
data16
mov
sbb
push
push
cld
sbb
cmp
xchg
loopne
aas
and
dec
and
in
fildll
lahf
and
loop
jl
fwait
hlt
push
std
push
in
mov
in
in
or
inc
add
pop
jecxz
xchg
cmp
cmp
push
ret
jg
xchg
sub
jne
jns
ss
xchg
xor
fidivl
mov
imul
out
ds
lcall
pusha
mov
sub
mov
adc
pop
sub
test
lods
sub
test
inc
mov
push
xor
add
pop
in
fnsave
or
rsqrtps
mov
dec
jg
popf
push
loope
mov
fidivrl
aad
push
dec
mov
shlb
test
out
mov
lea
xorl
jo
jne
push
lret
cmp
aaa
cmpsb
jns
repnz
adc
in
rorb
dec
insb
addr16
sbb
pop
sbb
popa
aad
xchg
mov
push
cs
jecxz
mov
inc
les
push
ret
xor
out
jnp
ja
mov
inc
arpl
cli
push
jne
or
cmp
dec
jg
xchg
xchg
pusha
xlat
imul
push
in
sar
push
jle
add
ss
scas
jmp
mov
popa
bound
mov
psrlq
cmc
sub
inc
or
lret
jnp
fildll
fnstenv
dec
imul
ret
pop
jg
or
popa
leave
pextrw
inc
in
out
nop
rcll
call
cmpsl
aad
jmp
pop
repz
popf
mov
pop
mov
pop
jb
xchg
mov
aaa
pop
mov
std
sub
ja
in
adc
fisubrl
jl
xor
push
fisubrl
xor
xchg
xchg
push
jbe
add
je
mov
mov
jl
jmp
xor
lock
out
pushl
insl
imul
jo
or
cmc
mov
cs
cmp
ss
pop
das
mov
out
mov
test
or
dec
in
ja
xor
in
fsubs
xor
jo
sarb
repz
xchg
sub
lea
cmp
inc
push
xor
push
ror
ds
enter
mov
icebp
jno
es
fsubp
xchg
inc
push
sbb
dec
mov
ja
sahf
jb
jo
adcb
stc
testb
and
push
jbe
or
data16
jne
movb
mov
lock
and
jmp
dec
sbb
imul
pop
xor
rol
and
push
and
mov
mov
lods
sti
inc
lahf
or
bound
outsb
inc
gs
lahf
icebp
and
stos
jp
sbb
jbe
fwait
insl
jne
insb
and
mov
adc
leave
mov
xchg
paddq
inc
fdivr
outsl
xchg
lret
fldt
lods
mov
mov
xor
pop
xchg
imul
mov
xor
sbb
js
mov
addr16
icebp
int
mov
rclb
mov
jl
cmpsl
xchg
mov
je
cmpsl
popf
pop
sub
xchg
fildl
xchg
shll
lcall
dec
sub
mov
fdivs
and
mov
out
pop
push
xlat
sub
cmp
ja
mov
jmp
jmp
rorl
aam
pop
rcll
xchg
mov
dec
mov
jle
jns
jle
mov
sarl
ja
fdivl
jp
and
mov
dec
imul
mov
sub
scas
pop
ljmp
adc
std
fs
or
mov
in
mov
jp
dec
push
iret
push
mov
push
mov
and
xchg
ret
jl
test
icebp
or
frstor
mov
inc
call
outsl
jns
cmp
inc
xor
adc
or
cmp
fisttpll
mov
enter
fsubrl
adc
xchg
pop
movmskps
ds
clc
dec
xor
pop
lea
int
scas
ja
ret
ds
in
push
pop
lret
push
sub
rcll
adc
test
add
ret
push
xchg
movsl
in
sarb
xor
sbb
lret
sub
cmc
addr16
stos
adc
xchg
addl
inc
mov
sub
push
loope
lock
repnz
mov
add
pop
mov
lcall
sub
arpl
mov
and
sub
mov
jle
push
jmp
jne
push
mov
fidivl
mov
pushf
daa
popf
or
xor
push
fnsave
add
fwait
mov
in
cmc
mov
test
addr16
ror
imul
aas
pop
sarl
sub
push
sbb
xor
push
outsl
dec
mov
xchg
es
int
adc
shlb
add
out
ret
mov
rcrb
sub
inc
fdivrl
pop
dec
inc
mov
push
jo
das
jb
xor
sub
xor
or
popf
xchg
outsb
xor
sub
fwait
xor
mov
add
les
pop
rclb
sub
mov
insl
clc
mov
ror
mov
cmp
mov
mov
lods
mov
add
outsb
pop
and
or
dec
in
lret
mov
jg
xchg
add
mov
add
lds
cmp
lcall
fnsave
mov
jns
and
dec
jmp
pusha
xchg
mul
jmp
std
sub
icebp
stc
sbb
mov
xor
lock
pop
xchg
outsb
mov
jg
mov
js
push
add
or
addr16
out
pop
divb
dec
mov
mov
inc
dec
cltd
std
call
lea
dec
xor
hlt
flds
cs
mov
popa
lds
popa
jo
adc
xor
out
cmp
push
sub
out
enter
loop
xor
xchg
adc
lods
out
sahf
mov
and
sahf
mov
mov
lcall
andl
aad
jb
lds
int
ret
lods
cltd
lret
aam
ja
call
daa
cmp
inc
data16
nop
pop
gs
repnz
jg
xchg
icebp
daa
jl
out
dec
and
mov
pusha
loope
fs
pop
cmpsl
push
aaa
ror
cmpsb
hlt
sub
loope
cmp
push
iret
dec
or
daa
add
lea
lods
xor
inc
cs
or
int3
stc
lret
jecxz
xor
jo
inc
jnp
pop
cltd
dec
xorb
lret
pushf
push
aaa
int3
loope
rcrl
int3
sti
sub
addb
xchg
mov
in
fcmovne
sbb
mov
ds
insl
orb
leave
rol
add
jae
aaa
test
adc
push
lcall
inc
xor
jns
xor
jle
cmpsl
mov
jo
push
push
pop
cwtl
scas
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
xor
outsl
jne
std
inc
sbbl
daa
sahf
xchg
add
cmpb
jns
jle
leave
fwait
sbb
mov
cltd
nop
int3
leave
ss
outsb
lret
in
sub
out
sbb
cmp
int3
xchg
mov
mov
stos
fdivrs
jmp
daa
dec
jnp
adc
push
add
sti
pop
cld
and
jg
aad
out
mov
pop
popf
mov
rcrb
aaa
add
jg
dec
je
jmp
dec
lahf
loopne
and
push
mov
lret
stos
push
dec
leave
pop
add
xchg
cmp
adc
sbb
jecxz
aaa
mov
out
mov
xor
or
test
push
add
push
test
jmp
popa
xor
enter
mov
std
pop
mov
sti
mull
xchg
mov
adc
sti
add
fimuls
fidivrs
ja
clc
clc
inc
and
ficoml
dec
jo
jp
xchg
outsl
pop
daa
sub
mov
or
dec
fmull
mov
addl
xchg
mov
push
dec
cmpsb
push
bound
jbe
stos
or
fsub
jg
fs
add
loop
mov
cmp
cltd
scas
pushf
mov
mov
mov
add
cmc
sbb
or
jae
sarb
push
dec
jmp
cs
mov
mov
repz
jns
rorb
nop
mov
aad
inc
cli
ret
mov
mov
aas
pop
std
aad
mov
notb
pop
popa
cmp
mov
dec
lock
scas
jnp
mov
jne
sbb
lret
adc
jae
clc
sub
bnd
das
adc
lods
pushf
sbb
mov
cltd
ds
ret
sbb
xchg
push
test
mov
repnz
pushl
into
add
in
cmpsl
test
mov
out
xchg
sahf
repnz
flds
adc
enter
fwait
lods
les
pop
leave
lods
mov
jg
fwait
in
pop
jmp
sub
sbb
mov
rcr
aad
jge
loopnew
jno
loop
ds
cmp
adc
jae
jl
adc
sub
lock
aad
pop
dec
pop
aaa
popa
adc
pop
xchg
imul
sti
jge
add
or
flds
cmc
mull
pop
stos
fucomp
scas
mov
sbb
imul
jmp
mov
das
inc
mov
mov
inc
pop
and
movsb
inc
xor
jecxz
cmpsb
xor
mov
aam
mov
adc
popf
sub
imul
int3
push
add
push
ljmp
mov
inc
xchg
rcrl
or
push
aad
or
sti
push
test
sub
inc
push
popf
pop
loop
sbb
repnz
out
insl
or
repz
into
rcll
dec
fsts
adc
jae
test
cmp
push
gs
bound
jae
test
sti
push
pop
push
dec
cmp
and
rorb
adc
iret
arpl
sbb
repnz
pop
add
push
sbb
jno
cmp
push
jbe
es
xchg
cmc
shll
mov
sub
xlat
negb
push
jno
test
sbb
jl
adc
cmp
sar
int3
out
lret
xor
and
xchg
popf
leave
mov
push
arpl
sbb
mov
and
mov
stos
and
mov
mov
test
mov
xchg
push
gs
std
xor
inc
pop
jae
sti
call
xchg
push
rep
lret
aam
hlt
pop
sti
fldl
ja
sahf
adc
cmpsl
push
adc
jbe
inc
add
sub
cmp
mov
jbe
mov
mov
xor
xor
jmp
test
rolb
dec
pop
repz
scas
mov
jle
jo
jle
adc
leave
jae
sub
scas
or
les
add
push
test
test
mov
push
and
push
movsb
shlb
jl
add
sbb
lahf
ds
mull
cltd
adc
sbb
out
in
int
jb
cmp
push
and
sub
push
push
scas
das
and
cmpsl
mov
loope
adc
sbb
test
jb
mov
and
sub
add
insl
mov
divl
lds
sub
mov
in
push
rcl
mov
daa
jne
cmp
pusha
or
das
xor
iret
aad
dec
sub
lea
sub
popf
lods
mov
int3
out
icebp
xor
or
jp
xchg
or
mov
push
dec
pop
xchg
ja
stos
sar
xlat
xchg
mov
xchg
sti
lods
jp
insl
or
scas
inc
sub
test
push
hlt
mov
mov
adc
cmp
push
inc
xchg
mov
mulb
pop
push
add
pop
inc
ja
imul
or
adc
push
popl
sbb
loope
mov
inc
add
fistps
or
insb
outsl
pop
mov
arpl
xchg
and
out
xor
sti
sbb
repnz
pop
test
push
hlt
fwait
inc
cmpl
test
ljmp
dec
jnp
xor
imul
cmc
xorl
lret
cmc
pop
hlt
push
into
fldenv
fbstp
and
or
xor
mov
push
mov
rcll
push
repnz
subb
outsl
js
scas
push
inc
nop
aas
sub
icebp
loopne
adcb
inc
add
iret
sbb
test
push
jg
push
in
insl
adc
mov
repnz
sub
push
sub
mov
mov
jp
and
push
int3
dec
das
or
stc
dec
sub
outsl
jmp
fs
xlat
xor
dec
push
mov
rclb
lods
inc
andl
out
xor
std
xchg
inc
adc
jno
mov
mov
hlt
push
movsb
fisubs
inc
and
cmp
gs
lods
xchg
insl
fwait
jns
js
movsb
sub
sbb
jge
out
pop
ret
mov
mov
cwtl
hlt
movsl
mov
dec
imul
pop
in
sbb
xor
imul
push
repz
call
inc
or
insb
push
out
jbe
cltd
xor
out
mov
rcrb
leave
mov
jmp
push
cmpsl
adc
mov
sub
and
and
fsubrl
lods
es
pop
jo
pop
jb
pop
xchg
fidivs
stos
cltd
push
jno
jp
cli
test
enter
mov
pushf
pop
mov
cmp
cmc
cmp
mov
ret
xchg
cmc
add
mov
ret
outsb
rorl
imul
gs
or
lock
fcomp
xchg
inc
sbb
js
mov
xchg
push
cltd
inc
xlat
adc
xor
das
mov
adc
test
adc
sti
jae
in
fildll
mov
andb
cwtl
cmpsb
in
sbb
mov
pop
fstps
xchg
dec
hlt
or
jne
cmc
push
push
js
iret
xor
jo
mov
stos
push
dec
pop
filds
cmp
shlb
mov
add
jmp
cmp
dec
mov
shlb
mov
jo
jle
jo
lcall
mov
dec
push
sbb
pop
push
out
dec
inc
sahf
enter
sbb
je
dec
cwtl
push
iret
and
das
test
jns
mov
xchg
pop
or
adc
and
in
insl
insl
add
clc
pop
inc
inc
xchg
cmpsl
xlat
sbbl
jle
mov
and
out
jl
pusha
shlb
add
hlt
jg
imulb
data16
adc
popf
fistps
push
jo
popa
lods
fidivl
cli
sar
cwtl
loop
or
adc
andb
jmp
loop
enterw
sub
lds
pop
cwtl
movb
jl
shll
pop
fwait
cmp
pop
sbb
xor
xor
inc
mov
push
fstl
insb
push
xchg
mov
sbb
clc
mov
rcrl
pushf
and
gs
fldcw
int3
daa
ds
push
mov
mov
dec
and
jne
mov
mov
sub
mov
lea
xchg
add
pop
scas
lret
mov
sbb
movsl
ret
test
sub
mov
add
outsb
push
jecxz
cmp
cmp
sahf
in
cmp
jl
je
out
or
pop
xchg
cmpsl
lcall
pop
xchg
clc
loop
popa
cmpsl
ja
sbbb
cli
mov
mov
std
test
pop
test
cld
xor
cmp
fwait
sub
xor
lds
outsl
mov
lods
inc
pop
fiaddl
mov
add
xlat
sbb
insl
std
ret
pop
loop
and
push
push
pop
movsb
pop
jae
mov
test
jno
pop
insb
pop
test
mov
hlt
cs
inc
add
gs
cmp
call
cmp
adc
repnz
sub
out
and
movsb
push
js
sub
mov
dec
mov
or
sbb
or
fmuls
dec
les
loopne
lret
outsb
out
call
dec
sub
push
nop
stos
pop
sbb
and
cli
mov
in
sub
mov
sbb
leave
ret
xlat
sub
jno
or
inc
mov
and
adc
cltd
imul
fisubs
cmpsl
mov
jecxz
dec
jmp
fmull
ds
repz
js
mov
shll
jecxz
sbb
jns
pop
sub
or
test
loope
mov
outsl
rolb
adc
daa
and
sub
or
fwait
sub
pop
mov
ss
push
inc
bound
ljmp
or
fwait
das
leave
cli
push
xchg
pop
fbld
lahf
addr16
adc
xor
pop
pop
sub
dec
mov
ja
sbb
je
push
in
dec
push
jno
push
lods
pop
push
mov
inc
xor
xor
pop
adc
xor
mov
js
sti
inc
mov
mov
xor
jns
adcb
pop
adc
add
hlt
mov
jp
inc
cmp
jbe
stos
call
xor
pop
lcall
pushf
outsl
test
mov
inc
adc
aaa
mov
sbb
daa
cmpsb
and
adc
lods
insl
test
popa
shrb
cwtl
test
xchg
adc
xchg
mov
bound
pop
adc
lret
adc
pop
int
dec
ficoms
add
sahf
daa
add
pop
add
or
sub
mov
push
jbe
xchg
and
xor
push
rorb
push
jae
jnp
cmpsb
mov
cwtl
repnz
mov
out
mov
xor
jbe
xor
mov
dec
and
movsl
shlb
add
jg
in
cmpsl
pop
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
jmp
sub
inc
dec
idivl
add
scas
rclb
jle
add
dec
dec
jecxz
inc
pop
sub
std
not
mov
pop
ret
pop
fimuls
hlt
ret
movsb
xchg
std
jecxz
mov
ret
shlb
inc
and
cwtl
pusha
or
mov
pushf
push
xchg
dec
pop
lock
repnz
enter
adc
fimull
in
outsb
xchg
imul
icebp
repnz
push
adc
sti
mov
loop
mov
lcall
jno
or
dec
repnz
outsl
pop
inc
sbb
sub
ds
setbe
leave
sub
jno
cmpsl
inc
nop
data16
cmp
jbe
out
xor
mov
js
or
and
and
jo
jb
xchg
mov
adc
daa
pop
mov
inc
pop
mov
mov
push
les
pop
jle
mov
xchg
mov
and
xchg
lret
mov
or
fcom
arpl
iret
imul
enter
fildl
popa
adc
js
xor
daa
popf
movsb
add
test
cmpsl
xchg
add
pop
loopne
decb
leave
xlat
mov
push
insb
adc
xor
fnstcw
inc
sarb
cmp
scas
idivl
cwtl
call
les
out
lock
into
outsl
je
stos
xor
inc
add
inc
push
mov
ficompl
push
incl
pop
bound
or
pop
jcxz
sub
sub
or
adc
divb
and
and
push
mov
pop
cmpsb
mov
gs
xor
js
cld
pusha
sbb
gs
sub
lds
mov
cmp
repz
pop
jp
pop
and
jnp
sub
xchg
sbb
jno
inc
sub
stos
popf
out
loop
pop
loopne
xor
xchg
call
sub
mull
push
jecxz
mov
popa
mov
or
push
adc
xchg
loope
lcall
out
rcl
push
fmuls
and
movsl
or
shlb
adc
adc
lds
xchg
cwtl
addr16
sbb
jl
rcl
loop
idivb
xor
cmp
outsb
ds
cmp
or
or
stc
and
mov
or
mov
scas
pop
jae
subb
repz
test
cmp
pop
aad
adc
addl
xchg
sahf
xchg
arpl
cmp
sub
dec
jecxz
mov
cmp
cwtl
sbb
cmpsl
stos
fists
bound
leave
xchg
ret
lods
lods
adc
fadd
fdivs
clc
add
ret
cmp
pop
icebp
push
pop
cli
fdiv
sbb
push
add
insb
out
inc
cmpsl
shrl
cmp
shlb
repnz
xchg
push
loope
fcomps
jb
leave
pop
gs
jp
movsb
pop
pop
pop
pop
rolb
popa
mov
enter
adc
xor
mov
mov
xchg
outsl
sub
je
cmpsl
fld
jp
jp
rcl
sbb
cltd
mov
rcrb
aaa
xor
jecxz
bnd
ds
cld
jbe
jbe
cmp
pusha
jno
fsubrs
int
outsl
or
xor
xor
stos
arpl
mov
fdivs
cmp
sub
or
xchg
push
lods
adc
lret
jle
sbb
or
mov
push
mov
enter
sub
mov
push
mov
ja
arpl
xchg
lret
loop
inc
mov
imul
in
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
jmp
and
mov
mov
jne
setl
jle
jns
jle
testl
xchg
out
mov
dec
xchg
fld
push
negl
and
mov
outsb
fsubs
push
sti
loope
push
pop
lods
xor
lret
mov
aam
push
adc
or
testb
out
inc
adcl
in
leave
andb
sahf
lods
pop
add
dec
sar
dec
mov
cs
xchg
and
imul
aad
or
jno
cmpsl
inc
lret
push
dec
inc
pop
mov
lea
test
xchg
dec
and
incl
sub
ds
leave
inc
mov
bound
pop
sbb
cmp
or
or
inc
out
out
add
push
loope
inc
aad
dec
roll
xchg
repz
add
das
mov
les
pusha
pop
or
jbe
cltd
nop
rorl
and
jecxz
pusha
sbb
cmp
mov
ficomps
inc
sarl
adc
pop
sbb
lret
pop
negl
push
sbb
adc
push
js
adcb
sub
push
std
scas
sub
mov
mov
push
rolb
in
dec
jae
imul
mov
pop
pushf
fldcw
and
fmull
test
sbb
push
scas
cltd
pop
mov
rorl
xchg
xchg
subb
loope
xor
lods
jg
hlt
fisttpll
jecxz
in
xor
pushf
test
sbb
push
aaa
dec
lcall
mov
fsubl
mov
fwait
push
stos
lea
xor
testb
loope
hlt
test
or
mov
roll
test
or
mov
jnp
sub
std
data16
inc
test
mov
adc
cmpsb
push
insl
popa
stos
xchg
out
pusha
arpl
outsl
das
nop
mov
mov
sub
xchg
mov
push
adc
mov
mov
dec
imul
xor
pop
sub
push
in
or
pop
mov
repnz
ret
pushf
inc
mov
xchg
mov
push
in
mov
pop
mov
xor
jge
mov
in
in
inc
pop
xchg
mov
xchg
jmp
es
dec
testl
clc
pop
jne
lret
push
add
cmpsb
ds
push
fstpt
adc
push
mov
lret
sub
or
testl
mov
add
nop
push
mov
xor
mov
mov
aas
inc
es
mov
pop
sti
jle
rorl
jo
jl
jnp
bound
adc
icebp
clc
push
xor
cmp
je
lcall
aad
xor
or
jl
sub
pop
mov
cmp
pop
mov
enter
stc
cmp
je
loope
cmpsl
mov
mov
jg
std
or
xchg
mov
test
jb
lock
pusha
fadds
out
insb
mov
lret
insb
cmp
or
gs
ja
loop
pushl
add
mov
dec
push
mov
jne
sahf
shrl
pop
inc
mov
pushf
mov
lahf
fsubrl
fcmovb
dec
pop
dec
movsb
pop
pop
hlt
lea
cmp
sbb
lock
inc
cmp
shl
lcall
xor
out
mov
cmp
inc
imul
icebp
jmp
cmp
fistpl
cltd
adc
scas
leave
fsubrl
xchg
inc
add
cli
scas
addb
sub
adc
and
es
xor
mov
aam
lahf
ljmp
inc
jns
aaa
std
cwtl
or
and
movsb
add
outsb
fs
pushf
sub
xchg
mov
jb
or
pop
cltd
jb
add
hlt
xor
xor
add
add
imul
add
mov
mov
mov
jmp
push
and
jl
jge
movsl
sbb
lcall
jle
jns
jle
mov
cmc
outsb
and
inc
lock
mov
mov
sbb
mov
xchg
push
fnsetpm(287
loope
leave
push
leave
xchg
int3
iret
dec
sahf
lea
xor
nop
xlat
ja
shlb
and
inc
sub
inc
add
scas
cmp
stc
xor
int3
add
leave
scas
cld
iret
dec
push
inc
out
jns
movsl
fists
cwtl
jl
cmp
push
fs
mov
sbb
mov
cmpsb
push
push
subb
mov
push
lods
std
mov
popf
cli
push
sub
mov
mulb
lret
cs
ret
lret
jge
xor
jmp
sbb
pop
adc
dec
push
out
sbb
adc
clc
ds
shlb
ds
movsb
addb
data16
pop
push
xchg
andb
mov
popf
popf
mov
push
cwtl
pop
inc
lret
daa
gs
dec
dec
jmp
nop
outsl
and
or
and
lret
rcrl
push
xchg
push
jo
xor
push
std
push
xchg
push
std
mov
jp
movsl
mov
enter
insb
mov
outsb
lods
mov
fildll
stc
jg
xchg
outsb
add
fsub
inc
mov
sbbl
xor
push
aad
jb
lret
push
ficoms
insl
xor
xor
ss
aas
movsl
sbb
and
daa
movsb
mov
mov
push
cli
aad
mov
mov
or
jge
clc
mov
shl
arpl
jnp
mov
adc
test
mov
and
fildl
lret
jge
mov
push
ljmp
inc
vmaxpd
sar
cmp
cld
in
mov
cltd
add
lcall
daa
pmaxub
cmp
cmp
sarl
ret
and
dec
or
lret
loopne
rclb
inc
cmp
sahf
mov
sbb
cmp
scas
cmp
in
mov
or
shrl
aas
mov
xor
push
std
adc
es
cmp
push
jmp
push
push
lret
xchg
adc
test
add
scas
add
repz
xrstors
cmpsl
mov
fnstenv
js
movsb
xor
js
in
ret
popf
mov
and
call
int
ss
mov
pop
orl
rcrl
and
fldcw
inc
mov
xor
clc
push
xor
mov
jne
ss
add
xor
cmp
imul
jecxz
push
push
mov
jmp
out
loopne
xor
or
and
xchg
pop
jb
pop
orb
jne
xor
icebp
dec
push
scas
add
test
ss
dec
mov
fnstcw
arpl
or
push
lret
scas
aas
push
push
fwait
repz
loope
cmp
sbb
pop
aaa
incb
jmp
cmp
std
mov
mov
dec
dec
insl
repnz
shrb
imul
repz
lret
stos
andl
sub
jecxz
xchg
into
mov
ss
inc
ficomps
inc
inc
inc
cwtl
repz
gs
fstpl
out
mov
dec
pop
shrl
aaa
sub
mov
adc
sbb
aam
imul
aam
mov
dec
outsl
push
add
jl
and
mov
xchg
sub
sub
xchg
das
mov
movsl
imul
js
inc
test
sti
int
je
jmp
adc
outsb
sbb
and
mov
sub
outsl
mov
andl
dec
loope
addr16
ljmp
andb
imul
sbb
stos
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
jmp
pop
in
add
insb
xor
fcmovb
popf
xor
lcall
dec
adc
or
mov
loope
xchg
adc
cmp
mov
loop
mov
sub
mov
xor
daa
in
icebp
push
xchg
mov
or
mov
scas
dec
mov
jg
in
cmc
push
xchg
call
mov
xchg
repz
dec
push
and
ja
sub
outsl
push
ds
loopne
inc
inc
cmp
xchg
adc
cli
inc
xchg
adc
out
adc
mov
xchg
je
mov
mov
dec
les
mov
sub
movsl
push
shll
sub
and
dec
nop
cmp
xor
call
cmc
icebp
inc
cwtl
bound
xchg
repz
lods
mov
sbb
mov
sbb
and
addb
ljmp
pop
cld
js
mov
mov
rorb
jnp
cli
sbbl
mov
les
shll
imull
xor
dec
negl
jmp
jnp
add
and
add
mov
je
cmp
mov
xchg
cmpsl
movsl
cwtl
sub
pop
leave
cmpl
aam
pop
lods
jne
sbb
sub
pusha
stc
add
jl
push
mov
mov
int
es
jecxz
pop
popl
pause
test
cmpsl
pop
nop
outsl
test
outsb
inc
call
mov
shrl
shrb
jb
gs
pop
mov
dec
int
mov
jns,pn
insb
das
insl
into
cmpsb
fldpi
xor
jnp
comiss
aas
mov
cltd
xor
push
or
dec
jns
daa
jbe
sbb
sbb
ficoms
push
mov
cmp
imul
mov
xchg
jl
sahf
ficoml
sub
pop
push
rclb
inc
jl
mov
es
adc
add
cmp
in
ds
xchg
cmp
pop
push
fwait
jns
xchg
and
jecxz
insb
in
and
mov
or
int3
mov
and
push
ret
scas
mov
xchg
inc
or
dec
sbb
lcall
repz
cmc
jg
imul
cmp
or
sbb
aas
mov
pop
xchg
testl
dec
push
test
arpl
adc
movsb
add
in
and
stc
cmpsl
dec
sbbl
lock
negl
lret
mov
sbb
rorl
lret
jno
lret
add
adc
sbb
arpl
push
gs
filds
into
test
mov
mov
xorb
fcoml
xchg
lret
jp
cli
add
sbb
pusha
push
aaa
popf
ljmp
push
sub
push
push
dec
mov
mov
inc
jo
push
sub
imul
andb
ret
dec
movl
push
hlt
lock
adc
lea
lahf
add
lcall
push
pop
fcoml
inc
pop
lods
adc
out
cld
sbb
xchg
outsl
or
mov
adc
in
push
sarl
leave
xchg
push
xor
out
sub
xchg
or
bnd
jbe
dec
cmpsl
jge
cld
fimuls
push
sbb
pop
das
mov
xchg
pop
add
inc
sub
push
pusha
stos
into
push
fidivrs
mov
push
repnz
cwtl
inc
xchg
xor
sarl
div
lret
jae
xchg
mov
insb
gs
or
lea
add
stc
in
xchg
xor
ret
test
ljmp
sub
cltd
dec
and
sub
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
jmp
pusha
jecxz
jge
icebp
insb
fwait
mov
xchg
cmp
jle
pop
add
enter
imul
into
data16
pop
daa
and
inc
ftst
pop
pop
adc
lret
pop
test
or
pushf
cwtl
pop
fidivl
pop
pop
xchg
mov
aaa
xor
or
lret
add
nop
das
inc
jp
jge
adc
xor
jle
sub
clc
sub
push
sub
enter
insl
or
jecxz
jbe
adc
or
arpl
mov
sbb
scas
enter
push
cmpsb
inc
fisubrl
mov
push
mov
xchg
fs
inc
lock
push
shlb
add
lods
xor
and
mov
cbtw
dec
negl
lahf
aas
mov
jmp
jle
dec
mov
pop
int3
xor
fcomps
repnz
mov
hlt
dec
dec
pop
mov
cmp
mov
dec
sbb
push
sbb
inc
mov
aad
adc
movb
test
mov
idiv
out
ljmp
into
dec
bound
pop
xor
jne
sbb
jmp
call
sub
aad
mov
push
cmp
mov
fidivs
test
xchg
fistpll
mov
mov
cli
sub
shrb
jns
dec
jge
push
xor
ss
lds
lea
xlat
jge
push
push
scas
push
bound
sbb
push
push
jno
inc
and
mov
adc
fmul
push
push
std
clc
or
pop
daa
nop
adc
and
bound
hlt
push
in
dec
lahf
pop
sbb
jg
std
dec
inc
bound
out
inc
es
pusha
jno
sbb
or
adc
movsb
cli
sub
lret
push
add
mov
xlat
cmp
imul
mov
mov
mov
loop
das
hlt
sets
or
je
test
sarl
mov
push
stos
push
add
stos
cmp
mov
lods
push
adc
cwtl
sbb
dec
sub
dec
pop
les
cmp
adc
sbb
fcoms
inc
xchg
xor
scas
lret
or
filds
pushf
or
xchg
adc
fisubrl
push
fstps
iret
push
addl
push
xor
dec
movsl
out
data16
mov
pushf
decb
sbb
es
rorl
xor
cmp
repz
aaa
enter
outsl
in
mov
cwtl
push
xchg
jmp
jg
and
or
fbld
lods
mov
mov
lret
sbb
xorl
cmp
xor
add
sbb
and
nop
test
dec
shl
mov
pop
push
shll
test
fisubs
pop
arpl
jno
or
test
adc
adc
je
xor
fcmovu
mov
aam
or
cmp
inc
pop
nop
add
bswap
xchg
test
ffreep
in
mov
clc
cmpsb
stos
and
adc
stc
dec
inc
popf
xor
cltd
and
pop
cmc
ja
loopne
push
dec
xchg
outsl
jbe
cmp
xor
movsb
push
add
dec
sub
sub
xor
fadds
mov
adc
jg
lea
sahf
fcomps
and
lods
dec
xor
fwait
ljmp
cmp
sub
push
inc
xor
dec
push
aad
sbb
push
testl
dec
bound
clc
add
mov
lea
jmp
outsb
xlat
shlb
mov
pop
out
jmp
add
mov
jle
xor
popa
mov
add
xchg
pop
mov
inc
jb
mov
aaa
mov
fsubrl
or
lods
jno
not
xor
movsb
mov
inc
insl
test
dec
ret
addb
pop
int
jbe
mov
inc
js
insb
fisubrs
jmp
mov
aad
pop
dec
adc
fs
mov
outsl
in
cmpb
and
xchg
add
or
or
ret
adc
out
in
fiaddl
pop
mov
dec
andl
xlat
dec
mov
push
shl
cmc
pop
push
jns
cmp
xor
push
xor
mov
out
sbb
pushf
call
mov
push
dec
xchg
pop
sub
cmp
addl
mov
shrl
mov
jl
jns
fldt
stos
push
push
bound
mov
lock
cs
jle
fwait
mov
and
mov
mov
cmp
test
mov
sbb
sub
mov
lock
enter
sub
adc
or
fscale
imull
mov
xchg
xchg
fsub
fsubr
jecxz
and
mov
push
or
fcoml
pop
jns
cwtl
rcr
outsl
mov
dec
mov
add
dec
push
cmpsb
in
les
es
sub
ljmp
ds
and
call
xchg
sbb
dec
mov
insb
orl
out
mov
jae
insb
inc
into
call
out
in
push
xlat
loopne
pop
sub
cmp
mov
mov
push
rolb
dec
popa
push
mov
lcall
xchg
bound
push
imul
out
enter
xchg
pop
pop
mov
mov
sbb
ja
outsl
pop
mov
sti
xchg
fsubrl
ret
call
pop
adc
or
mov
cmp
js
sbb
and
test
push
fsubrl
xchg
imul
and
add
adc
popa
insb
sbb
sbbl
mov
inc
sbb
pop
pop
xchg
dec
pop
add
pop
dec
decb
lahf
push
xor
ud0
inc
sub
adc
add
mov
lahf
xor
test
lcall
je
lcall
adc
in
pop
arpl
cmp
in
mov
in
repz
push
adc
pop
pop
fadds
sbb
xchg
pushf
inc
jb
ja
pop
adc
shll
in
mov
mov
mov
aas
sbb
mov
inc
jb
bound
xor
in
fldenv
cmp
outsb
fildll
ficompl
in
mov
adc
into
mov
cltd
mov
mov
push
repz
inc
push
pop
pop
repz
pop
sub
stos
mov
arpl
faddl
call
fcomp
cmpsb
mov
mov
lods
fidivs
daa
jge
jmp
inc
inc
test
adc
in
mov
sbb
xchg
inc
mov
lea
mov
cmpsl
das
xchg
and
mov
inc
inc
enter
xchg
cmc
jle
cmpl
fwait
cwtl
cmp
sti
shll
les
sbb
mov
sbb
dec
adc
icebp
mov
xchg
sub
std
mov
jne
fwait
add
pop
mov
sub
in
leave
sub
push
mov
mov
xor
mov
jmp
sahf
lcall
adc
and
push
mov
jle
jo
jle
popf
cmpsl
ljmp
xchg
lret
in
lods
xchg
cltd
fstps
sahf
mov
in
push
movsl
mov
dec
fdivl
cmp
js
cltd
pushf
mov
inc
mov
mov
sti
daa
imul
dec
dec
sub
jb
push
mov
rdpmc
pop
push
hlt
dec
out
xor
bound
mov
orb
rorb
lods
sbb
mov
inc
or
aad
div
lock
lock
imul
and
mov
dec
pop
test
test
xchg
aas
xchg
fs
push
push
outsl
popf
sub
fwait
xor
cmpb
insl
adc
add
movsb
repz
pop
je
lret
repz
jmp
sbb
adc
sbb
jl
inc
stc
jne
movsl
cltd
jno
test
dec
mov
sbb
push
imul
popf
add
into
dec
or
dec
adc
dec
sub
fbld
inc
sub
lods
sub
dec
in
decb
cmp
incl
push
dec
std
or
test
dec
mov
sub
shrl
sub
into
adc
in
pushl
repz
jle
add
sub
test
fdivl
sub
hlt
pushf
jno
loop
jg
push
rol
adc
test
cmp
outsb
and
push
clc
insl
sbb
jo
cld
lcall
inc
repz
in
jbe
mov
movsl
sti
andl
jg
push
mov
pop
sub
repz
push
jae
fs
and
ljmp
sub
loopne
or
neg
jnp
fwait
adc
dec
mov
sbb
adc
inc
and
sbb
dec
mov
sub
ja,pt
cmpsb
xchg
pop
jecxz
stos
loopne
aam
dec
xor
adc
pop
aaa
pop
mov
jg
test
mov
sub
jnp
mov
adcl
inc
push
mov
into
dec
bound
jg
jecxz
fmul
cwtl
pop
cmp
push
cli
mov
fsubrs
inc
jecxz
push
jmp
sub
mov
scas
loop
jb
pop
push
dec
rcrb
pop
pushf
fsubrs
add
std
xor
lcall
fcompl
push
or
adc
sub
aad
into
add
pop
pop
or
fcomip
clc
das
sbb
stos
xor
mov
ret
and
xchg
lahf
push
or
clc
dec
int
jmp
xor
xchg
sbb
dec
shl
jno
mov
icebp
xor
push
cmp
xlat
or
test
out
pop
push
xchg
pop
cmp
aam
cmp
adc
pushf
inc
dec
mov
push
lods
icebp
xchg
mov
sarb
fs
adc
or
mov
pop
push
jne
push
cli
ljmp
xchg
sahf
in
sbb
bnd
lahf
jg
or
fwait
adc
push
and
mov
xchg
das
movsl
rcrb
jp
roll
jo
cmp
mov
loopne
jl
imul
pop
push
jl
dec
inc
loop
iret
popa
or
faddl
add
repnz
aaa
fldt
ja
dec
sbb
fcmovb
push
sbb
les
rolb
sbb
mov
jge
fstp
movsb
imul
mov
jne
sub
int
mov
push
clc
push
xchg
int
jb
lea
jae
in
inc
mov
mov
pop
scas
add
ret
or
pusha
insb
push
lret
leave
xchg
and
in
insb
faddl
pop
xchg
mov
pop
pop
stos
clc
jne
cmc
mov
add
out
arpl
push
lea
mov
or
lds
cli
add
mov
mov
xor
add
imul
cmp
jbe
pop
jmp
mov
xchg
imul
push
movsb
mov
jo
jle
icebp
mov
out
sub
stc
and
mov
fadds
gs
sbb
loop
jbe
mov
testl
fcmovne
or
jmp
das
aad
jecxz
mov
div
pop
jbe
lahf
xchg
fcompl
jmp
inc
pop
gs
jecxz
ss
push
pop
xor
mov
fwait
sbbb
lods
loopne
push
clc
pop
xchg
pop
cmpsb
inc
pop
sbb
jnp
out
fwait
mov
adc
sbb
mov
int
subl
push
mov
aaa
lret
cmp
add
sti
jmp
jno
adc
stc
fucomi
pusha
xor
adc
test
cmp
inc
rorl
pop
mov
and
pop
movsl
in
xor
fildll
sub
pop
pop
or
push
test
xchg
inc
inc
jge
mov
stc
bound
xor
or
test
or
jl
xchg
add
xor
ret
incl
ss
pusha
fcomi
stos
lret
ret
js
lds
and
nop
xchg
nop
cmp
or
ret
jecxz
dec
xor
fcomi
test
cmp
mov
arpl
icebp
or
ljmp
out
aam
xor
sub
test
or
int
cmp
inc
addr16
mov
mov
out
mov
into
fcmovne
push
loopne
outsb
jg
insl
sub
test
popf
adc
xchg
jne
mov
mov
shl
fxch
test
aas
mov
pushf
jecxz
ds
xchg
push
add
mov
outsl
fistpl
test
push
and
mov
jmp
fldt
or
adc
out
mov
lret
sbb
cld
shlb
aas
shlb
or
imul
iret
out
and
ret
in
push
cs
in
inc
inc
mov
dec
mov
mov
and
ds
sahf
jecxz
lea
repnz
mov
js
mov
dec
or
ljmp
cmp
mov
or
clc
daa
mov
repnz
add
shr
cmc
cmp
lock
mov
adc
cmp
in
mov
mov
mov
jmp
call
pop
xchg
sub
dec
les
push
das
xchg
sub
mov
fdivl
inc
out
adc
bound
inc
cld
and
int3
and
ja
repnz
fnsave
rcll
mov
popf
inc
roll
sub
and
call
rcrl
push
cmp
shrl
stos
fwait
outsb
into
push
cmp
jo
scas
into
pop
and
mov
jns
mov
cmp
cmp
jno
out
loop
in
xor
movsl
repz
fst
push
or
push
jae
movsl
popf
sbb
jecxz
adc
fsubs
inc
xorb
add
fcomps
jle
ja
ffree
mov
gs
shl
or
insl
push
enter
or
mov
push
jb
iret
cmpsb
mov
mov
sbb
arpl
add
int3
cmovns
inc
insb
addr16
out
dec
jae
out
data16
leave
or
xor
fildll
mov
outsl
in
sti
imul
je
bound
cmpsl
out
or
cmpsl
sbbl
cld
clc
push
bound
or
ret
push
daa
into
xchg
hlt
fstpl
clc
inc
lret
mov
faddl
mov
dec
movsb
clc
sub
sub
or
push
mov
sub
sbbl
push
sbbl
push
incl
push
andl
push
adcl
call
test
movl
je
adcl
xor
inc
movl
jmp
add
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
sub
movl
sbbl
lea
movzbl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
sub
lea
mov
adc
mov
mov
xor
or
sub
or
mov
mov
mov
sub
mov
mov
or
mov
mov
andl
xor
sbb
mov
xor
add
mov
mov
movzwl
cmp
mov
movzbl
mov
je
sub
mov
xor
add
sbbl
imul
movl
mov
movl
jmp
addl
xor
sbbl
add
mov
movzbl
sub
mov
xor
adc
add
not
mov
mov
mov
xor
xorl
add
movl
cmp
jne
sbbl
push
movl
pushl
sbbl
pushl
adcl
call
and
mov
mov
and
mov
sub
mov
neg
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
or
sbb
mov
mov
mov
or
movl
or
mov
movl
xor
mov
and
mov
and
mov
orl
xor
subl
xor
adcl
add
mov
adcl
xor
xor
adcl
add
movl
lea
movl
mov
movl
cmp
movl
ja
jmp
adc
mov
addl
mov
xor
xorl
lea
push
andl
xor
or
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movzbl
adc
mov
mov
xor
movl
lea
subl
push
and
mov
adcl
pushl
call
mov
mov
mov
or
xor
lea
mov
or
mov
subl
xor
xorl
xor
add
mov
andl
xor
movl
lea
movl
mov
movl
cmp
movl
jbe
movl
mov
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
add
mov
inc
mov
subl
pushl
orl
sub
subl
pushl
adcl
xor
mov
pushl
call
sub
adc
xor
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
repz
jae
hlt
aaa
scas
aad
test
and
jle
sbb
fidivl
add
jae
dec
jp
fmuls
mov
mov
les
jb
xor
andl
mov
mov
data16
mov
xchg
sti
pushf
add
or
hlt
inc
cmp
shlb
ljmp
shll
and
sarb
enter
xor
in
or
jno
hlt
jae
pop
dec
or
inc
lcall
mov
outsb
jmp
jp
out
lods
pop
ds
sub
jo
sub
fldt
movsb
lcall
aas
das
fdivrs
inc
adc
jb
inc
fwait
sbb
ljmp
xor
jne
fisttpl
sbb
idivl
xlat
scas
sbb
repnz
pop
sbb
in
pop
test
mov
fcomps
lret
mov
sub
testb
scas
adc
movsb
push
addl
fsubp
ljmp
js
arpl
das
inc
icebp
dec
not
scas
pop
add
jmp
idiv
cmp
aam
sbb
dec
mov
lret
mov
xchg
push
xchg
or
mov
cs
jns
fxch
adc
sbb
outsb
xor
cltd
push
ja
test
je
mov
pop
pop
mov
push
scas
jmp
xchg
paddb
ljmp
xchg
jo
or
cmp
cmp
into
mov
sbb
mov
cmp
add
mov
xor
or
pop
out
aas
xchg
mov
and
repnz
mov
and
cmp
sub
pop
mov
sub
orb
arpl
mov
mov
test
ret
cmp
xchg
xchg
cmc
fldln2
mov
and
test
arpl
dec
pop
pop
xchg
adc
insb
sbb
imul
pop
and
mov
pop
jp
test
decl
jb
xor
sbbl
and
push
into
jmp
push
leave
loop
push
rcr
inc
xor
data16
lock
lcall
mov
cmpsb
frstor
jno
mov
adc
cwtl
adc
jmp
je
int3
arpl
dec
into
ja
call
sub
call
xchg
cmp
sub
jmp
pop
loope
mov
add
repnz
std
inc
into
push
cli
notb
jnp
add
sbb
stos
push
jnp
in
push
imul
mov
xchg
sub
jns
repnz
mov
mov
xor
push
std
leave
pusha
add
mov
out
add
inc
pop
cmc
add
cmc
lds
dec
cmc
cmp
std
mov
nop
test
sub
and
mov
xchg
rclb
lret
push
mov
cmc
mov
jo
mov
jg
roll
test
insb
cs
outsb
fs
sti
hlt
xchg
sbb
sbb
pop
fidivrs
push
int3
js
bound
shrl
push
test
mov
aaa
lods
mov
shl
enter
mov
ret
es
lret
sub
sub
movsb
arpl
xor
push
push
mov
movl
movl
push
mov
mov
mov
movl
push
movl
mov
movl
mov
movl
cmp
je
or
jmp
cmc
pop
inc
gs
jge
pop
push
add
and
hlt
jns
jle
and
add
aas
int
cli
into
jnp
or
mov
test
mov
fstl
push
test
jge
cmp
dec
orl
jp
ret
push
sub
clc
in
stc
mov
fstpt
aaa
mov
pop
pop
cmp
ja
add
imul
jns
dec
mov
repz
addr16
pop
call
dec
pop
inc
mov
mov
int
les
pushf
push
pop
xor
pop
scas
sub
fwait
stos
ret
ja
shl
cld
add
mov
rep
add
in
xchg
sub
push
test
push
enter
fadd
mov
ja
xchg
mov
rorb
fwait
mov
out
add
sahf
cmpsb
sub
lods
cli
fsubrs
lds
dec
sub
mov
push
jno
jl
inc
sub
pop
in
sub
jl
fmuls
jnp
aam
out
pop
fsubp
aaa
pop
mov
adc
mov
jae
mov
cmp
jp
jns
fsubrs
cwtl
idivb
test
cwtl
outsl
sub
jno
shll
nop
aaa
xchg
xorl
js
inc
or
arpl
xorb
mov
mov
icebp
into
les
mov
dec
mov
jno
jecxz
inc
sarb
nop
mov
push
aad
cmc
lahf
push
or
inc
imul
sub
dec
jecxz
push
lods
or
fdivr
lock
or
addr16
cmp
aaa
sbb
imul
mov
cmp
insb
pop
dec
aad
js
push
pop
xchg
arpl
ja
aam
mov
mov
lods
jae
xchg
sarb
sti
lret
insl
jle
dec
int3
jne
mov
and
lock
aad
mov
js
or
cmc
xor
inc
movsl
pop
cmp
mov
add
mov
stos
jbe
cmpsb
sub
and
insl
loopne
pop
shlb
popa
xchg
testb
cld
shlb
jp
data16
cmp
dec
sbb
jne
add
and
jp
out
cmc
sub
cld
ret
adc
and
mov
jge
jae
push
or
mov
pop
adc
in
add
pop
out
rolb
loopne
es
repnz
popf
lahf
or
cvtdq2ps
pop
lock
out
popa
or
in
int
popl
and
fcmove
outsb
cmpsb
mov
mov
xchg
push
push
shl
lock
xchg
xchg
and
inc
xor
xchg
pushf
xchg
xchg
rolb
je
repnz
stos
shll
fsub
enter
pop
mov
jae
pop
and
mov
ret
pop
mov
aaa
into
jne
inc
mov
lahf
push
xchg
adc
pop
fs
xchg
add
jl
mov
in
pop
jno
jecxz
xchg
jo
pop
push
and
hlt
xchg
sbb
repz
adcb
sub
mov
stc
jne
call
cld
mov
xorl
xor
add
movl
cmp
movl
je
and
mov
mov
xor
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
and
add
push
pushl
pushl
mov
jmp
pop
pop
cld
sub
mov
push
in
test
rclb
jle
mov
test
mov
push
movsb
lcall
mov
push
mov
into
or
pop
push
nop
push
movsl
in
mov
std
mov
xor
rcll
adc
lret
outsb
dec
mov
mov
ret
popf
lcall
popa
fstps
mov
xchg
dec
in
xor
cmp
divl
mov
or
add
inc
add
call
inc
pop
pop
aad
ja
add
mov
add
mov
mov
testl
pusha
jp
fdivrp
popf
xchg
mov
pop
mov
inc
or
mov
out
adc
faddl
or
movb
xor
add
cltd
pushf
lea
stos
add
adc
jl
call
loop
jne
fwait
dec
mov
cmpsb
xchg
sar
xor
das
push
cli
loope
adc
jecxz
out
adc
lods
out
jo
dec
xchg
inc
rolb
aaa
jnp
pop
in
sarl
pop
mov
les
inc
lods
popa
das
jp
or
aas
ror
ljmp
push
or
cmp
in
insb
push
and
mov
dec
cmp
mov
mov
xor
dec
push
lret
push
stc
sbb
dec
adc
jle
and
push
add
mov
xor
arpl
mov
jae
mov
xor
popa
sbbb
jge
mov
or
push
sub
jecxz
lcall
jo
ljmp
aaa
les
test
jge
cs
xchg
orb
xor
adc
cwtl
mov
adc
jbe
movl
cmp
or
jae
dec
sub
ret
xchg
cli
clc
jno
sbb
mov
dec
fldenv
lods
out
fs
mov
call
subl
cmp
cmp
subl
je
dec
push
mov
push
fcoms
scas
xchg
push
scas
movsb
mov
pusha
and
cmc
aas
sub
adc
mov
outsb
add
imul
out
push
jg
cli
cmp
mov
imul
je
jecxz
cmp
cmpsb
mov
insl
inc
sbb
mov
add
add
stos
jge
repz
ret
fdivr
cwtl
mov
repnz
mov
sub
push
fdivrp
jb
scas
cmpsb
add
stc
aas
pusha
into
xor
cwtl
fldcw
jae
mov
push
pushf
sub
push
rcrb
ffreep
add
jl
cltd
lret
adc
mov
push
sub
add
call
out
mov
mov
pop
aaa
aad
out
or
aad
dec
sbb
stos
outsb
insb
lods
xor
je
aam
jae
ljmp
test
xor
leave
dec
loope
inc
std
xchg
std
lcall
inc
pop
mov
add
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
jmp
in
ss
xor
icebp
add
mov
popf
iret
cmpb
jle
fs
aaa
adc
test
aaa
cmpsb
mov
push
push
xchg
sbb
mov
sbb
push
or
fisttps
push
rorb
sbb
mov
in
outsl
out
cmpsb
sbb
sbb
pop
rorb
dec
jl
cmc
mov
sbb
cmp
push
cltd
mov
mov
aam
cs
ja
daa
mov
adc
mov
sbb
push
sub
gs
lret
pop
fidivs
rcl
scas
xchg
pop
pop
cltd
scas
iret
icebp
in
inc
and
js
stc
movsl
mov
xchg
xchg
and
sarl
ljmp
repz
sbbl
test
xor
sbb
loope
fildll
clc
add
xlat
icebp
add
in
pop
negb
xor
sub
jb
xchg
rcr
pushf
imul
lahf
popa
push
jbe
in
dec
lds
mov
cmp
clc
ret
je
pop
sub
inc
je,pt
dec
addr16
xchg
stos
adc
aam
xor
sbb
ds
movsl
xchg
pushf
dec
cmc
in
lret
inc
pop
mov
out
or
xchg
icebp
lock
mov
popf
repnz
repnz
or
mov
mov
push
sub
add
jp
sbb
mov
shll
js
lret
mov
or
and
inc
jmp
rcr
int3
rcr
jno
dec
lret
psrad
lret
insl
dec
cmc
mov
daa
dec
dec
movsl
data16
ds
push
or
jne
xchg
and
repz
test
je
mov
mov
call
and
sti
mov
and
dec
mov
xchg
outsb
rcrl
inc
pop
add
pop
into
lcall
std
in
into
test
sub
mov
pop
ss
ljmp
cli
gs
dec
mov
gs
or
ret
add
jno
out
addr16
cmpsb
pop
jge
movsl
sbbb
add
cmp
dec
popa
pop
inc
pop
shrb
jnp
adc
cmc
lds
andl
adc
test
dec
mov
fucom
xchg
stos
jno
mov
inc
cmp
in
adc
jl
jae
es
loopne
inc
and
loopne
or
jge
repz
pop
insl
scas
arpl
lar
push
dec
xor
xchg
into
mov
lret
cld
sub
test
ja
pop
adc
andl
pop
push
xchg
rol
lret
ror
popf
aam
cs
sub
iret
mov
mov
xor
mov
aas
enter
mov
xchg
roll
inc
cli
inc
in
xor
dec
sub
call
sub
mov
pop
into
test
or
dec
loopne
pop
mov
imul
mov
mov
ficompl
sbb
adc
xrelease
test
cltd
and
mov
jg
mov
sbb
jp
jns
inc
cli
push
adc
pop
mov
mov
cwtl
enter
mov
or
out
aas
xor
sbb
sub
add
pop
jmp
push
clc
clc
mov
test
adc
inc
jle
hlt
jns
jle
xchg
xchg
push
loopne
fs
insl
mov
pop
xor
cmpsb
push
jo
lea
lods
cwtl
stc
ss
inc
add
cmp
lock
sbb
les
sbb
divl
add
shrl
aad
fstpt
dec
sysret
cmp
or
mov
fisttps
cmc
mov
or
mov
push
dec
cmp
out
dec
lods
xor
adc
fdivrs
jmp
mov
push
enter
stc
inc
sbb
xchg
int3
jae
push
push
and
stos
popa
das
nop
cmpsl
jno
lods
mov
out
test
or
test
cmp
lea
clc
mov
and
movsb
fwait
pop
mov
xchg
cmp
test
sub
sub
push
and
xchg
push
inc
push
xchg
mov
lcall
jo
lahf
xchg
fcmovne
data16
mov
adc
inc
dec
pop
or
mov
xchg
push
pop
adc
leave
shrl
sub
push
jne
insb
cmp
and
ljmp
xchg
add
mov
jmp
cmp
adcl
sub
dec
dec
mov
mov
mov
call
subb
xchg
inc
ror
jo
jmp
pop
or
jg
mov
and
push
cmp
xor
testb
imul
push
fcompl
insl
ret
and
lds
jb
push
out
movsb
fisttpll
nop
lock
jnp
std
xchg
dec
lcall
fs
xchg
mov
push
aam
or
mov
hlt
les
mov
mov
scas
sti
aas
jp
or
mov
rorl
sbb
fdivrl
cmp
cmc
push
test
lds
sti
push
jne
ficoms
mov
sbb
dec
popf
push
repnz
cmp
and
xchg
int
and
loope
and
iret
mov
push
mov
test
andb
popa
and
cmc
push
sub
adc
or
leave
dec
pop
into
mov
clc
sub
adc
mov
or
out
jns
and
push
xchg
pop
call
xchg
cmp
imul
mov
rclb
xchg
xchg
clc
lahf
and
mov
pop
add
leave
cmp
mov
mov
dec
shl
mov
lret
push
je
call
stos
pop
outsl
lods
or
jg
sarb
movsb
sbb
addr16
mov
inc
or
and
sub
cs
mov
cmp
fiadds
jmp
sahf
push
inc
mov
out
sbb
incl
jge
mov
sarl
mov
imul
roll
jae
incb
xchg
sub
dec
push
mov
push
mov
insl
mov
pop
in
xorb
inc
pop
rcrb
adc
mov
leave
repnz
lods
shr
cmp
fwait
add
stc
add
mov
movsb
jne
xchg
daa
iret
inc
cltd
or
fwait
cmp
fisubrs
ss
pop
stos
xchg
add
lock
mov
add
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
xor
mov
andl
mov
add
xor
cmp
movl
jne
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
jmp
mov
jae
mov
sub
jns
or
pushf
jg
jle
adc
push
jg
insl
and
adc
lea
clc
scas
sbb
push
jge
inc
push
mov
add
ja
push
mov
loopne
ret
xchg
into
and
sub
push
dec
dec
fucomip
sbb
mov
rorl
loop
mov
cmp
xchg
xor
inc
jbe
hlt
inc
jo
xchg
mov
addl
out
cmp
out
out
jno
mov
gs
jno
jle
fsub
je
mov
mov
ja
lret
movhps
in
lea
rcl
push
dec
aaa
lods
test
sub
out
xor
cwtl
add
test
or
xchg
sbb
dec
rcrl
push
sarl
push
dec
dec
inc
test
dec
pop
jmp
sub
mov
adc
cmpsl
nop
sub
mov
or
push
and
dec
jp
jg
repnz
sub
fsubl
adc
inc
cmc
inc
push
icebp
or
jnp
jb
xor
cmp
loope
aam
mov
std
mov
lret
loope
aaa
dec
inc
outsb
add
fidivs
dec
inc
xchg
int
cmpb
or
ror
movsl
push
dec
jne
cmp
cmpsb
sbb
aas
ja
mov
test
fildll
adc
mov
int
xchg
aad
add
stos
lods
xchg
mov
les
or
pop
pop
jnp
imul
xchg
movsb
push
lret
jae
xchg
cmp
cmpsb
and
ljmp
adc
fsubrl
cltd
jb
add
mov
add
cmc
mov
enter
cmpsl
mov
lods
cmp
stc
adc
jle
pushf
jg
jle
push
add
imul
xrelease
sar
jns
mov
lock
jl
pop
pop
movsb
cmpl
push
repnz
test
or
xchg
les
addr16
fwait
into
jmp
dec
daa
push
mov
dec
dec
cli
call
lock
sahf
pop
or
pop
popf
cwtl
into
das
loope
aaa
pop
lods
les
jns
mov
imul
and
xor
cmpsb
sbb
pop
jge
sub
adc
mov
mov
or
fwait
jne
ss
cwtl
int
pop
sbb
mov
sbb
arpl
push
out
sbbb
sub
inc
jae
mov
call
pushf
in
mov
lret
scas
xchg
mov
adc
mov
subl
lcall
clc
or
fistpl
push
lods
sarb
pusha
insb
dec
cmpsl
dec
aam
das
sbb
loope
xchg
loope
popf
arpl
js
push
and
shlb
lahf
mov
dec
popf
cmpl
xchg
mov
and
outsl
and
pop
lock
jle
push
imul
pop
push
jb
push
scas
add
dec
jmp
adc
dec
les
pusha
mov
popf
jp
repz
xchg
out
mov
insb
mov
and
sar
mov
adc
daa
pop
adc
test
jle
stc
lret
fnstenv
add
das
sbbb
clc
je
pop
xor
in
test
jmp
mov
dec
xchg
sub
in
ljmp
jo
lret
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzbl
adc
mov
andl
xor
add
movl
jmp
cmp
arpl
mov
arpl
jb
sub
js
jle
hlt
pop
pop
mov
mov
xchg
and
pusha
repz
addb
push
pop
sbb
ret
sub
nop
lods
shr
into
out
iret
incl
test
pop
rcrl
out
push
xor
jbe
mov
add
int3
out
lahf
out
ljmp
ja
ret
in
jmp
ret
inc
dec
mov
mov
movsb
adc
push
mov
cwtl
aas
dec
inc
arpl
pop
jg,pn
push
out
das
xor
popa
int
aam
cmp
into
mov
push
rcl
imul
lods
xchg
inc
sarb
aaa
or
mov
adc
clc
call
enter
push
aas
jno
sti
jg
in
push
leave
push
push
xor
mulb
int
movsl
subb
imull
mov
idivb
inc
out
int
les
sub
outsb
call
sbb
cmp
adc
add
je
mov
or
rcll
imul
popa
or
imul
in
push
stc
cmp
inc
out
dec
adc
or
rcrl
repz
cmp
lea
cmc
xchg
test
inc
push
sub
push
lods
imul
pop
lea
sbb
cld
mov
imul
loop
inc
mov
dec
fstl
les
push
push
lret
cmp
dec
ljmp
test
push
stos
jae
flds
jl
mov
mov
ja
jne
pop
aam
dec
mov
add
fmuls
roll
xchg
loop
push
das
data16
cmp
fnstenv
adc
push
fsubs
fistps
add
outsb
scas
jbe
shl
adc
mov
push
lret
fxch
lea
rclb
js
or
fidivrl
inc
mov
cmp
xor
sbb
movsl
mov
cmp
notb
subb
pop
xor
dec
cld
jmp
and
xor
mov
xor
mov
xorb
xchg
sub
jns
jg
lret
cltd
jg
mov
stos
dec
jnp
push
sbb
fildll
call
push
addr16
cmp
popa
shlb
imul
fwait
rclb
dec
enter
push
xchg
out
xchg
cmp
dec
fidivl
pushf
orb
jae
mov
lret
stos
mov
es
imul
add
xor
push
adc
inc
cmp
add
mov
dec
adc
add
inc
or
inc
cld
cmp
or
mov
push
movl
mov
mov
cmp
movl
je
mov
xor
subl
xor
xorl
lea
xor
cmp
jne
movl
jmp
jmp
inc
lods
xchg
addr16
mov
leave
dec
jle
popf
js
jle
lcall
add
sub
xchg
adcl
dec
bound
ljmp
mov
sub
pop
out
mov
outsb
xor
push
out
add
ljmp
mov
bound
xor
inc
push
mov
jg
pop
mov
nop
lock
sahf
mov
and
lea
push
pop
test
lds
mov
push
ret
hlt
push
fisubrl
sbb
cmp
xor
ret
les
and
xchg
sbb
mov
pop
in
mov
pop
in
sbb
insl
jnp
push
or
into
inc
mov
mov
adc
das
sub
ja
or
add
xchg
popa
outsl
cmpsl
adc
mov
idivb
outsb
hlt
xchg
icebp
mov
pop
inc
pusha
stos
aad
sub
dec
pop
lock
xchg
test
xor
and
add
jl
dec
xor
mov
jno
je
mov
addl
mov
mov
mov
jnp
mov
and
xchg
jae
das
lea
loope
int3
and
jl
lret
or
or
mov
xor
std
cli
push
pop
cmpsl
scas
xchg
inc
dec
mov
and
ljmp
test
sarl
enter
inc
ja
jp
jne
add
adc
dec
lret
pop
int3
sbb
mov
outsl
addr16
shll
mov
gs
aad
mov
popa
rcrl
aam
repz
sarb
insl
mov
mov
in
mov
pop
call
pop
or
mov
sbb
dec
push
mov
ja
jl
imul
in
adc
pop
mov
ret
sbb
add
mov
dec
dec
pop
xor
dec
fcoms
jge
shlb
jno
push
lock
ds
fidivs
pop
xor
js
add
xor
ret
out
and
mov
hlt
dec
std
ja
push
xchg
adc
stos
scas
pop
data16
imul
push
je
ljmp
int3
shr
mov
addl
xor
test
jb
mov
inc
into
scas
testb
out
cmp
int
pop
nop
sbb
test
dec
push
enter
add
mov
xor
add
mov
mov
xor
jmp
jo
rsqrtps
pop
jge
pop
mov
and
push
js
jle
or
xor
mov
std
cmp
sub
jbe
imul
push
int
mov
out
data16
sbb
fildll
enter
les
jns
lea
ja
sti
imul
negl
lea
jno
mov
sub
inc
js
sub
sbb
ret
jnp
sbb
inc
scas
mov
ret
call
jecxz
mov
xchg
outsl
fldt
mov
stos
pop
stc
ja
cmc
jno
mov
jmp
nop
mov
in
sub
cmc
jo
outsl
dec
mov
pushl
rorl
out
fsubrs
mov
inc
lret
mov
add
push
iret
adc
out
push
sub
gs
outsb
insl
push
into
ljmp
addr16
stos
push
inc
adc
ret
xchg
lret
cmp
push
ret
fsubrs
es
testl
dec
dec
inc
mov
popa
mov
fs
jg
add
daa
adc
mov
xor
cld
subl
push
cltd
mov
in
dec
fbld
xchg
test
mov
jp
mov
mov
sbbb
jb
outsl
adc
push
cwtl
mov
sbb
pop
dec
pop
jae
outsl
lods
mov
inc
lret
mov
and
and
jg
xchg
mov
popf
or
loopne
xor
ja
pop
popf
jg
repnz
mov
fbld
rcl
shlb
xchg
inc
inc
xor
inc
fwait
leave
add
sub
out
mulb
mov
mov
cltd
cld
arpl
dec
and
js
sahf
int
mov
xor
jbe
inc
shrd
xchg
pop
cwtl
mov
dec
or
std
out
jl
cs
in
dec
jo
je
jge
push
mov
sub
ja
stos
pop
fsubrl
loop
stc
pop
addr16
and
and
ds
outsb
mov
add
ficoml
shll
sti
test
xlat
aaa
cltd
mov
pop
enter
ds
mov
popa
pop
jmp
int3
fists
xchg
dec
xor
int
int3
adc
aam
nop
xchg
icebp
test
xchg
jae
jg
jae
orb
adc
mov
cli
or
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
movl
mov
xor
movl
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adcl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
mov
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
adc
mov
xorl
add
orl
mov
sbb
mov
xorl
push
movl
push
sbbl
test
je
mov
sbb
mov
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
imul
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
add
jmp
roll
std
mov
xchg
inc
jg
xor
jb
dec
jle
pop
jg
jle
call
cld
cs
xor
sti
mov
int
in
mov
sbb
cmpsb
bnd
mov
mov
mov
mov
scas
popa
mov
mov
arpl
push
sbbb
pop
sbb
or
mov
ficomps
and
push
mulb
xchg
xchg
rcr
cmc
stos
inc
cmp
aas
push
add
dec
jle
insb
cmp
or
inc
push
xor
scas
pop
and
aam
int3
cwtl
int
scas
dec
aaa
insl
mulb
mov
mov
cmpsb
ret
xchg
xor
and
push
in
cmp
subb
xor
xchg
add
add
and
add
js
mov
fists
jb
xor
mov
repz
push
push
push
push
mov
push
cmp
adc
cmc
pop
int
cmpsb
jnp
dec
repnz
add
leave
ror
sbb
and
les
mov
shll
and
pop
inc
xchg
mov
cli
outsb
push
xchg
cld
add
dec
insb
fstpl
or
loope
or
push
outsl
and
jecxz
icebp
in
xchg
mov
or
daa
dec
push
inc
cmp
fisubl
mov
in
xchg
out
std
stc
daa
sub
jecxz
mov
mov
stos
idivl
sub
stos
iret
inc
stos
aam
push
cltd
inc
pop
adc
rcrb
mov
fimull
and
dec
arpl
outsl
inc
jle
into
ljmp
test
int
or
xchg
dec
ret
arpl
rorb
shrb
lock
jmp
mov
mov
ds
cltd
mov
lods
repnz
mov
out
sub
cmpsb
cmpsl
imul
jns
add
or
mov
jmp
lret
outsl
dec
jne
stos
movsb
loope
lods
dec
out
push
outsl
ljmp
jle
in
sahf
rcrb
pop
mov
mov
lret
rcl
rorl
push
adc
test
cmc
fucomip
cltd
fistpll
shll
mov
mov
dec
inc
add
xor
push
bound
inc
sub
pop
les
jp
xchg
bound
adc
shll
or
idivb
shrb
push
rorl
aas
or
ljmp
xchg
mov
lcall
sub
adc
sbbl
jno
or
jnp
mov
negb
mov
inc
mov
lahf
arpl
iret
into
xor
cwtl
jae
cmpsb
dec
aaa
xchg
int
test
dec
lret
mov
mov
movb
push
hlt
adc
test
enter
repnz
notl
cmp
rcr
sub
and
jmp
shrb
nop
mov
mov
sub
ret
pushf
inc
lcall
mov
dec
push
push
ds
lcall
and
iret
aaa
jns
and
sbb
mov
adc
cwtl
mov
dec
jb
cmp
imul
jp
das
std
inc
aaa
icebp
jae
outsb
cmp
mov
das
adc
sub
sbb
xor
insl
inc
in
gs
call
aam
inc
add
jl
push
add
es
xor
push
in
lret
sub
js
add
jns
lds
dec
stc
or
orl
lea
sub
dec
jle
and
out
in
cli
pop
xlat
loopne
sub
xorb
lods
scas
sub
rep
xchg
sub
xor
xor
adc
mov
mov
decl
mov
mov
mov
addl
xor
xor
add
mov
mov
mov
movl
je
adcl
mov
adcl
xor
orl
add
movl
cmp
jne
sbbl
pushl
orl
call
and
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
xor
add
cmp
je
orl
pushl
pushl
subl
call
movzwl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
jmp
scas
repz
add
push
out
sub
fisubs
jle
pop
jg
jle
push
int
jb
mov
xchg
or
cmp
jae
shr
and
push
out
imul
push
push
jo
sarb
rorb
sahf
dec
sub
sub
cltd
mov
pop
mov
sub
dec
jmp
push
xchg
jge
push
inc
rol
jbe
inc
adc
cmp
repz
rcl
out
cmp
mov
clc
jne
jae
mov
addr16
repnz
mull
mov
es
insl
fnstenv
cmp
leave
mov
aam
mov
bound
stc
inc
insl
hlt
adc
fstl
inc
sbb
mov
inc
push
int3
out
faddl
les
mov
cmpsl
mov
shlb
daa
out
pusha
cltd
cwtl
lret
lods
sub
or
sarl
popa
lds
add
xorps
sub
xor
mov
push
and
add
pop
xchg
aaa
dec
dec
push
test
sub
fldln2
andl
outsl
adc
cmpsb
daa
lods
jo
sbb
push
aas
sub
addr16
lock
rorb
xor
jo
imul
loop
aam
inc
pop
xor
push
cmpsl
jne
mov
iret
call
mov
sbb
sub
clc
ds
dec
mov
push
cmp
sub
pop
mov
pusha
clc
dec
ret
je
adc
fisubrl
popa
push
sarl
add
mov
xor
bound
jne
and
lret
add
mov
adc
sub
imul
push
mov
enter
test
test
pop
ss
out
aam
test
inc
jnp
repz
xchg
mov
pop
sbb
push
repz
push
jmp
or
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
jmp
lret
dec
add
je
jge
mov
shll
push
jle
pop
jg
jle
pop
dec
sbb
js
push
div
jae
xor
test
sbb
mov
notb
mov
mov
es
fs
and
cmp
jle
aaa
push
pushf
loopne
nop
sub
or
icebp
fldenv
sbb
mov
and
inc
or
or
mov
push
into
add
or
push
dec
imul
shll
sub
pop
stc
mov
jg
out
pop
xchg
dec
push
in
mov
pop
lret
push
fs
jnp
mov
push
lret
loop
lock
lret
les
andl
outsl
std
icebp
xchg
push
jecxz
sub
shl
mov
xor
int
mov
cmpsl
xor
xchg
adc
movsb
sbb
jl
add
adc
fs
test
sbb
jecxz
or
xchg
mov
adc
add
inc
imulb
hlt
jne
and
mov
mov
fidivl
pop
mov
je
out
arpl
dec
dec
jae
fiadds
mov
int3
xor
idivl
cli
adc
lds
xlat
or
xchg
jno
fcomi
cs
test
jnp
test
cli
cld
mov
jl
ret
cmp
into
jno
xor
inc
xchg
xchg
push
xlat
in
out
sbb
sbb
hlt
in
jle
rorl
sbbb
in
push
fwait
xchg
daa
xlat
jge
mov
cs
nop
pop
popa
fwait
mov
sti
cmpsl
pop
pop
lods
push
stc
lods
outsl
ror
iret
jne
and
ret
cmpsl
push
std
push
xlat
sub
js
andb
cwtl
cmpsl
in
cmp
movaps
cli
sbb
aaa
and
pop
mov
mov
jmp
cmp
jne
xchg
mov
cwtl
iret
push
stos
adc
jle
jg
jle
sarl
leave
das
lods
xchg
fsubrl
sbb
ja
sbb
mov
out
lret
xchg
inc
bound
mov
jns
fcomps
data16
lcall
and
push
outsb
inc
xor
mov
or
push
adc
and
stos
es
ss
jb
sub
shld
add
lds
pop
outsl
int3
std
lods
or
sub
xchg
mov
std
pop
ljmp
xchg
jg
imul
rclb
pushf
idivl
and
iret
adc
iret
dec
and
sbb
jb
push
fs
mov
inc
mov
dec
sarl
arpl
push
aam
fdivrs
pop
inc
lock
xor
push
jbe
cmp
jmp
cmp
dec
dec
in
insl
ds
enter
dec
mov
jmp
lods
subl
and
fs
ja
mov
out
jb
sbb
adc
filds
mov
cmc
sbb
cmp
xchg
out
push
loop
testb
out
jecxz
and
xor
mov
jo
int3
fstl
scas
mov
cwtl
sub
ds
ret
rclb
xor
in
fcoms
inc
pop
out
movsl
jns
mov
push
jp
dec
push
push
movsl
insb
test
cmpsb
hlt
xchg
rorb
incb
and
lea
repz
dec
and
jnp
lret
jo
push
mov
ds
xchg
add
mov
leave
fs
mov
cmp
jb
movsl
loopne
stos
push
cmpsl
adc
enter
xchg
pushf
out
push
sbb
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
jmp
xchg
aam
jne
xchg
in
sub
out
in
jle
jle
pop
jg
jle
xor
cmc
sbb
dec
dec
dec
cs
xchg
xorl
xor
cmp
add
sub
in
cmc
xchg
outsb
fiaddl
mov
mov
sbb
push
sbb
int3
xor
mov
in
add
ret
out
aam
data16
pusha
hlt
xor
fidivrl
insb
das
add
fidivrs
repnz
xor
lock
cmp
add
mov
imul
out
or
xchg
mov
mov
xchg
aad
movsb
pop
mov
cli
mov
inc
add
das
mov
jle
mov
andb
sub
jmp
das
insb
inc
cmpsl
test
and
jo
xor
jne
mov
jecxz
inc
mov
sub
leave
push
push
je
gs
push
test
lea
or
pop
dec
jmp
sbb
shlb
sbb
sahf
adc
jno
dec
or
sbb
std
ss
sti
and
xchg
test
lea
rcrl
mov
setnp
test
in
je,pn
sub
loop
pop
imul
xchg
jne
loope
shrb
daa
mov
cmp
pop
loopne
test
sbb
jp
push
ror
fdiv
jns
mov
aas
or
push
cmp
jno
in
push
inc
dec
hlt
loop
add
xchg
bound
pop
sbb
inc
clc
mov
sub
jmp
jb
pop
enter
stos
dec
mov
mov
insb
test
push
cmc
pop
in
xchg
jb
adc
jecxz
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
jmp
inc
mov
pop
push
outsb
outsl
stos
popa
cmpsb
lods
and
jle
pop
jg
jle
sub
sbbl
jle
adc
pushf
rorb
push
or
outsl
push
lods
sub
mov
notl
dec
popl
jne
rcrl
lcall
cld
dec
mov
mov
pop
or
sbb
dec
lcall
mov
mov
inc
mov
xchg
out
mov
sahf
xchg
cli
mov
cmc
mov
std
iret
cmp
cmpsb
xchg
add
fisubrl
mov
mov
popf
and
pop
pop
out
mov
lret
push
push
cmp
sub
inc
sbb
or
fmull
push
fldcw
add
jecxz
imul
loope
shll
cmpl
xchg
ret
call
xor
popf
push
shl
rorl
mov
in
jecxz
mov
push
ds
mov
arpl
xor
pop
cmp
mov
enter
jnp
je
shrl
int
lret
xor
ds
mov
inc
fcoml
mov
and
bound
int3
out
js
aad
imul
pop
xchg
aad
ficoml
cwtl
test
repz
pop
mov
fwait
lcall
sbb
mov
cmp
lret
pop
aam
outsl
sub
push
repnz
testb
mov
cld
sub
sub
push
clc
xor
andnps
andl
mov
push
mov
pop
adc
adc
loop
inc
shlb
repnz
fdivl
sahf
cmp
int
in
jno
pop
push
dec
pop
mov
shll
jb
xchg
xchg
sub
into
push
cmp
push
fs
jle
sub
dec
mov
out
xor
jmp
aaa
cmp
cltd
int
jno
ja
loope
pop
mov
jle
jg
jle
mov
pop
or
fs
popl
jae
sub
fildll
sub
xor
lahf
imul
cli
cmp
pusha
arpl
shl
daa
insb
cmp
sbb
stos
aad
test
es
enter
inc
pop
outsl
jne
subb
push
decl
xchg
std
mov
scas
cmpb
jmp
gs
dec
mov
xchg
sti
and
rcrl
movsl
pop
jae
mov
jno
movsl
mov
mov
popa
dec
inc
stc
inc
lcall
inc
add
adc
or
inc
push
imul
cmp
jns
addl
xchg
stc
cmp
cld
cs
jmp
repnz
cmp
jle
gs
xor
cli
xchg
orb
cwtl
es
das
xchg
add
aas
rcll
mov
mov
out
inc
mov
xchg
sarb
mov
inc
mov
push
insb
mov
pop
aas
pop
arpl
test
lret
xchg
andl
cmpsl
jmp
andb
leave
mov
xchg
fidivs
xor
adc
rorb
sbbl
lret
add
les
mov
sub
mov
mov
lea
cmp
ljmp
cmpsb
inc
fbstp
insb
addr16
jl
lds
xchg
add
fildl
inc
ss
cmp
int
fisubrs
pop
loope
add
js
ret
xor
or
jbe
mov
out
test
int3
cmpsb
repnz
push
mov
pop
dec
mov
pop
les
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
jmp
ljmp
popa
cmc
xchg
fadds
imul
pop
jg
jle
cmp
sbb
jle
loop
mov
and
shrb
ret
js
cltd
add
cmp
sti
in
push
test
xor
insl
sbb
int
scas
xchg
lock
jge
lcall
ljmp
addr16
out
pop
xlat
repnz
jge
std
sbb
mov
cld
into
ret
and
pop
push
cmp
pusha
rcr
inc
pop
call
xchg
mov
push
pop
mov
push
les
test
mov
lcall
jmp
ss
cmp
bound
out
into
sbb
pushf
lock
jl
movsb
jb
or
adc
xchg
out
adc
ss
mov
push
imulb
sub
lret
out
decl
int
hlt
inc
add
insl
jo
push
and
xorb
outsb
mov
les
push
push
cmp
sahf
adc
xlat
iret
movl
cmpsl
sti
enter
iret
rep
sbb
jae
cmp
into
rorl
mov
cltd
outsl
xor
cmp
pop
sbb
loopne
les
push
repnz
lds
fwait
or
push
ss
popf
call
cmp
inc
call
inc
push
jl
push
imull
hlt
outsb
adcl
push
cltd
loope
xor
lret
mov
dec
xlat
out
cwtl
loope
shll
xor
mov
jp
and
cld
or
scas
daa
add
add
cltd
inc
push
xchg
shll
ljmp
sbb
rcrb
call
clc
or
dec
cmp
inc
pop
dec
adc
xchg
push
fwait
insl
inc
cmp
sahf
dec
inc
jbe
call
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
xor
add
inc
cmp
add
add
add
add
push
add
jl
add
xchg
add
xchg
cmp
add
add
mov
add
les
add
into
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
xor
add
cmp
add
dec
cmp
add
add
pop
cmp
add
add
add
test
add
mov
add
cwtl
cmp
add
cmp
add
add
enter
fdivrl
add
out
add
repnz
add
cmp
add
cmp
add
cmp
add
add
add
cmp
add
add
pop
cmp
add
add
je
add
nop
cmp
add
add
int3
cmp
add
cmp
add
cmp
add
cmp
add
add
sbb
add
cmp
add
cmp
add
add
pop
cmp
add
add
js
add
xchg
cmp
add
add
ret
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
sub
add
cmp
add
pop
cmp
add
cmpb
add
cmp
add
ljmp
add
add
sbb
add
sub
add
cmp
add
dec
add
pop
add
insb
add
jl
add
mov
add
cwtl
add
lods
add
mov
add
fidivrl
add
lock
add
push
aas
add
sbb
add
sub
add
cmp
add
dec
aas
add
bound
add
outsb
aas
add
js
add
xchg
add
xchg
aas
add
movsb
aas
add
mov
add
enter
fidivrl
add
in
aas
add
clc
aas
add
or
add
inc
add
xor
add
dec
inc
add
pop
inc
add
fs
add
je
add
addb
cwtl
inc
add
lods
inc
add
mov
inc
add
loopne
add
lock
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
push
inc
add
pusha
inc
add
jo
add
test
add
inc
add
scas
inc
add
mov
inc
add
call
inc
add
push
inc
add
sbb
add
inc
add
cmp
add
add
pusha
inc
add
add
add
addb
cwtl
inc
add
scas
inc
add
mov
inc
add
faddl
add
inc
add
clc
inc
add
push
inc
add
sbb
add
add
xor
add
add
push
inc
add
pop
inc
add
outsb
inc
add
test
add
add
mov
inc
add
fiaddl
add
inc
add
clc
inc
add
or
adc
add
and
xor
add
inc
inc
add
pop
inc
add
inc
add
jbe
add
mov
sahf
inc
add
scas
inc
add
movb
inc
add
in
inc
add
clc
inc
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
dec
inc
add
pop
inc
add
add
add
jbe
add
mov
add
inc
add
lret
add
inc
add
in
inc
add
add
add
inc
add
sub
add
inc
add
dec
inc
add
pusha
inc
add
insb
inc
add
addb
xchg
inc
add
mov
inc
add
ret
add
inc
add
call
inc
add
incb
add
inc
add
and
add
cmp
add
add
add
push
add
jle
add
xchg
inc
add
mov
inc
add
int3
inc
add
faddl
add
inc
add
push
dec
add
sbb
add
dec
add
cmp
add
add
push
dec
add
outsb
dec
add
mov
add
dec
add
mov
add
rorb
dec
add
add
add
lock
add
decb
add
dec
add
push
dec
add
cs
add
add
add
push
dec
add
stos
inc
push
dec
add
add
add
add
cmp
dec
add
ret
cmp
add
add
add
add
add
add
add
add
add
add
pop
xor
add
add
fs
add
sub
add
add
add
jb
insl
pop
dec
outsl
imul
ja
imul
fs
gs
outsl
popa
jb
dec
gs
inc
pop
inc
pop
inc
cmp
add
add
add
xor
add
add
add
and
add
add
add
aam
add
je
add
mov
add
nop
aaa
add
insb
inc
add
jo
add
dec
cmp
add
dec
add
sub
add
adc
add
inc
dec
add
hlt
xor
add
add
bound
add
add
xor
add
inc
cmp
add
add
add
add
push
add
jl
add
xchg
add
xchg
cmp
add
add
mov
add
les
add
into
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
xor
add
cmp
add
dec
cmp
add
add
pop
cmp
add
add
add
test
add
mov
add
cwtl
cmp
add
cmp
add
add
enter
fdivrl
add
out
add
repnz
add
cmp
add
cmp
add
cmp
add
add
add
cmp
add
add
pop
cmp
add
add
je
add
nop
cmp
add
add
int3
cmp
add
cmp
add
cmp
add
cmp
add
add
sbb
add
cmp
add
cmp
add
add
pop
cmp
add
add
js
add
xchg
cmp
add
add
ret
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
sub
add
cmp
add
pop
cmp
add
cmpb
add
cmp
add
ljmp
add
add
sbb
add
sub
add
cmp
add
dec
add
pop
add
insb
add
jl
add
mov
add
cwtl
add
lods
add
mov
add
fidivrl
add
lock
add
push
aas
add
sbb
add
sub
add
cmp
add
dec
aas
add
bound
add
outsb
aas
add
js
add
xchg
add
xchg
aas
add
movsb
aas
add
mov
add
enter
fidivrl
add
in
aas
add
clc
aas
add
or
add
inc
add
xor
add
dec
inc
add
pop
inc
add
fs
add
je
add
addb
cwtl
inc
add
lods
inc
add
mov
inc
add
loopne
add
lock
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
push
inc
add
pusha
inc
add
jo
add
test
add
inc
add
scas
inc
add
mov
inc
add
call
inc
add
push
inc
add
sbb
add
inc
add
cmp
add
add
pusha
inc
add
add
add
addb
cwtl
inc
add
scas
inc
add
mov
inc
add
faddl
add
inc
add
clc
inc
add
push
inc
add
sbb
add
add
xor
add
add
push
inc
add
pop
inc
add
outsb
inc
add
test
add
add
mov
inc
add
fiaddl
add
inc
add
clc
inc
add
or
adc
add
and
xor
add
inc
inc
add
pop
inc
add
inc
add
jbe
add
mov
sahf
inc
add
scas
inc
add
movb
inc
add
in
inc
add
clc
inc
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
dec
inc
add
pop
inc
add
add
add
jbe
add
mov
add
inc
add
lret
add
inc
add
in
inc
add
add
add
inc
add
sub
add
inc
add
dec
inc
add
pusha
inc
add
insb
inc
add
addb
xchg
inc
add
mov
inc
add
ret
add
inc
add
call
inc
add
incb
add
inc
add
and
add
cmp
add
add
add
push
add
jle
add
xchg
inc
add
mov
inc
add
int3
inc
add
faddl
add
inc
add
push
dec
add
sbb
add
dec
add
cmp
add
add
push
dec
add
outsb
dec
add
mov
add
dec
add
mov
add
rorb
dec
add
add
add
lock
add
decb
add
dec
add
push
dec
add
cs
add
add
add
push
dec
add
add
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
arpl
insb
outsl
arpl
add
data16
outsl
outsl
jb
push
add
arpl
push
add
outsl
ja
outsl
ja
jb
add
gs
popa
jo
pop
je
jo
add
in
jae
jb
push
add
jo
pop
insw
outsl
fs
int3
add
outsl
jb
add
js
imul
imul
popa
add
fwait
add
jo
pop
arpl
insl
outsl
fs
sub
arpl
arpl
add
data16
add
or
je
ja
jo
gs
add
data16
je
add
outsb
jbe
add
arpl
imul
add
jo
imul
add
je
push
add
je
add
mov
outsl
ja
add
test
jae
popa
arpl
add
add
outsl
insb
outsl
ja
jb
fildl
pop
popa
insl
jae
pop
gs
je
add
add
imul
add
outsb
imul
add
jae
bound
gs
add
push
add
arpl
inc
imul
jae
jb
arpl
add
add
insl
outsl
jbe
add
cld
add
jb
outsl
insb
add
and
insb
outsb
add
and
pop
gs
je
call
js
je
add
jo
arpl
call
arpl
add
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
repnz
jb
arpl
add
imul
add
ja
je
jo
add
mov
insl
popa
insb
insb
outsl
arpl
add
pop
pop
addr16
popa
imul
add
ja
arpl
data16
push
inc
push
push
cs
insb
add
xor
dec
outsb
jne
je
insl
dec
outsb
outsw
push
add
sub
inc
gs
popa
jae
inc
arpl
gs
outsl
jo
jo
add
add
outsb
fs
imul
inc
add
dec
imul
add
inc
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
jne
insb
push
arpl
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
imul
ja
jb
insl
push
outsl
imul
push
imul
ja
add
fs
outsb
jne
add
add
popa
bound
arpl
insb
insb
inc
popa
jb
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
add
outsb
fs
imul
rolb
dec
gs
popa
addr16
outsl
js
js
add
outsb
fs
gs
popa
addr16
add
outsb
imul
push
outsl
imul
inc
gs
imul
add
outsl
ja
arpl
insb
insb
inc
popa
jb
mov
dec
outsl
popa
fs
insl
popa
addr16
add
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
add
jo
imul
gs
add
sbb
push
gs
outsl
jbe
push
jb
jo
add
gs
jo
popa
je
push
outsb
add
add
push
imul
popa
jae
inc
add
add
je
insb
addr16
je
insl
push
gs
inc
add
ja
outsb
jne
popa
jb
sub
inc
gs
outsb
jne
repnz
jae
dec
gs
popa
addr16
add
push
add
je
insb
addr16
je
insb
dec
inc
add
mov
push
imul
push
arpl
push
add
sbb
inc
gs
arpl
dec
outsb
outsw
add
add
jo
imul
imul
inc
push
js
push
add
add
outsb
fs
gs
popa
addr16
imul
add
add
popa
jb
outsl
ja
jb
jne
push
add
insl
add
je
imul
outsb
addr16
add
mov
push
popa
imul
jne
dec
fs
add
movl
imul
gs
js
add
cmp
arpl
popa
imul
outsb
add
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
into
add
jae
popa
addr16
outsl
js
add
add
je
gs
popa
addr16
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
aad
dec
gs
popa
addr16
outsl
js
add
add
je
outsb
jne
je
imul
add
fs
outsb
jne
add
gs
jns
je
insl
dec
gs
imul
push
outsb
fs
gs
popa
addr16
add
aaa
add
je
outsb
jne
je
je
add
mov
inc
jb
ja
arpl
add
xchg
add
je
outsl
jns
jne
jae
jb
add
inc
fs
jae
push
imul
arpl
pop
add
je
jns
inc
outsl
insb
outsl
jb
jle
dec
imul
jne
je
insl
add
or
inc
jo
outsb
fs
outsb
jne
add
inc
push
outsb
jne
popa
imul
add
push
je
imul
push
arpl
insb
insb
push
imul
xor
inc
push
gs
add
push
gs
jns
inc
outsl
insb
outsl
jb
add
sgdtl
je
insb
addr16
je
insl
add
dec
add
je
outsb
jne
je
insl
inc
imul
or
inc
gs
gs
je
jo
imul
inc
add
je
popa
jb
outsb
je
movb
outsb
fs
popa
jae
add
inc
jb
popa
je
dec
outsb
jne
add
add
je
popa
jb
je
outsl
jae
sub
push
outsb
fs
gs
popa
addr16
add
test
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
inc
add
je
outsl
outsb
imul
push
add
add
jo
imul
gs
add
out
inc
jb
insl
gs
arpl
add
popa
bound
outsb
jne
je
insl
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
mov
outsl
ja
jb
insl
push
outsl
imul
jb
ja
outsb
imul
arpl
and
push
arpl
insb
insb
push
imul
add
pop
add
je
arpl
add
je
insb
addr16
je
insl
dec
outsb
je
or
imul
add
pop
add
gs
je
dec
arpl
dec
outsb
imul
dec
add
je
outsb
jne
je
insl
dec
outsb
outsw
push
add
pop
add
je
arpl
insb
insb
dec
outsb
outsw
add
add
popa
jb
outsl
dec
gs
inc
add
sub
fs
outsl
je
data16
gs
popa
addr16
add
sti
add
je
insb
popa
jae
dec
popa
insl
gs
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
push
jb
outsl
jb
add
push
gs
imul
js
inc
add
add
popa
jb
outsl
ja
jb
add
xchg
dec
outsb
jae
jb
dec
outsb
jne
add
add
jo
outsb
fs
outsb
jne
add
inc
gs
imul
add
push
gs
arpl
jo
jns
add
inc
gs
jns
inc
outsl
insb
outsl
jb
jb
jae
add
jg
push
push
outsb
outsl
ja
add
inc
push
dec
outsb
jne
add
add
insl
push
outsl
inc
push
add
push
jo
popa
push
add
xchg
push
jns
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
imul
popa
jae
push
add
addb
push
outsb
outsl
ja
jae
outsb
arpl
mov
jb
outsb
je
inc
add
push
gs
imul
outsb
addr16
add
test
push
ja
je
push
imul
ja
add
add
jo
imul
add
inc
imul
jae
popa
addr16
add
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
jne
inc
push
imul
add
inc
push
xor
cs
insb
add
lods
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
je
inc
jb
jae
dec
outsb
imul
add
push
imul
iret
add
insb
arpl
insb
gs
add
popa
je
inc
dec
inc
imul
add
jae
jp
push
popa
insb
gs
add
gs
outsl
inc
js
add
popa
je
inc
outsl
outsb
je
outsb
imul
mov
imul
inc
gs
gs
inc
inc
add
aad
inc
js
push
gs
dec
jne
push
add
popa
je
inc
imul
add
arpl
jae
bound
int
inc
jae
popa
jo
add
faddl
push
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
jae
je
imul
dec
jb
inc
js
and
inc
gs
imul
jae
mov
inc
gs
gs
dec
bound
arpl
mov
popa
je
dec
popa
je
push
push
inc
jb
popa
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
addl
imul
add
add
je
imul
jae
lods
add
insb
jns
gs
gs
add
add
je
bound
je
jb
arpl
add
jae
je
outsb
add
push
imul
add
popa
je
push
outsl
insb
imul
add
push
gs
dec
gs
imul
inc
gs
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
dec
inc
push
add
add
insb
arpl
imul
add
je
imul
outsb
jae
outsl
outsb
inc
js
add
add
je
jb
jae
dec
jb
inc
js
into
add
insb
arpl
push
arpl
addl
gs
gs
inc
js
outsb
je
outsl
imul
xlat
add
insb
insb
push
outsb
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
je
imul
add
je
je
arpl
bound
arpl
cmp
inc
gs
jne
jb
outsb
je
bound
arpl
jno
inc
gs
dec
push
xor
stos
add
gs
je
push
arpl
outsb
add
push
je
jb
inc
outsl
arpl
jbe
inc
imul
add
imul
mov
insb
imul
je
add
inc
inc
dec
xor
cs
insb
add
inc
imul
je
imul
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
add
inc
gs
gs
inc
imul
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
insb
dec
popa
insl
gs
imul
add
gs
jb
outsl
jb
outsl
fs
pop
add
je
gs
jo
imul
add
cmc
add
gs
je
push
popa
imul
insl
gs
add
pop
add
outsb
fs
imul
gs
add
test
dec
gs
jo
outsl
arpl
add
jbe
inc
imul
jns
add
rolb
inc
jb
popa
je
inc
imul
outsb
addr16
add
adc
dec
outsl
arpl
push
imul
gs
push
popa
je
dec
popa
insl
gs
add
dec
outsl
fs
gs
popa
outsb
fs
gs
add
mov
je
inc
imul
outsl
bound
push
imul
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
push
add
jmp
inc
gs
imul
bound
gs
js
add
mov
gs
jbe
outsb
je
add
push
insb
gs
js
int3
add
jae
jb
jo
outsb
push
add
add
gs
je
inc
jbe
outsb
je
add
push
add
je
jns
je
insl
inc
imul
jns
add
push
gs
gs
outsl
outsb
imul
imul
add
fs
imul
js
add
pop
add
insb
jae
gs
popa
insb
jne
add
add
inc
popa
fs
gs
fs
je
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
gs
jae
jb
gs
jne
je
popa
outsb
addr16
inc
add
adc
dec
outsl
arpl
dec
outsl
arpl
mov
jbe
jb
inc
gs
jne
je
outsl
arpl
add
incb
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
loopne
inc
jb
popa
je
dec
jne
gs
add
adc
inc
imul
outsl
dec
inc
dec
add
xor
inc
jae
popa
jo
inc
outsl
insl
insl
inc
jne
arpl
outsb
add
ss
gs
push
inc
outsl
outsb
je
js
add
sub
dec
outsl
jbe
inc
imul
add
je
push
dec
outsl
arpl
add
push
outsb
insb
outsl
arpl
imul
fs
je
insl
push
add
push
add
je
jns
je
insl
push
imul
jae
insl
outsb
je
mov
popa
imul
je
jo
gs
bound
arpl
add
inc
gs
gs
jo
popa
je
inc
add
out
add
je
imul
movb
je
arpl
imul
outsl
bound
inc
jb
add
roll
inc
jb
popa
je
inc
imul
outsb
addr16
add
cmp
dec
jo
outsb
inc
imul
dec
inc
dec
xor
cs
insb
add
push
add
imul
js
add
add
addr16
gs
jo
insb
addr16
add
add
outsl
outsl
jae
inc
outsl
insb
outsl
jb
add
or
inc
gs
imul
push
add
add
je
popa
jbe
inc
imul
add
arpl
fs
xor
cs
insb
add
inc
add
je
inc
imul
jae
add
dec
push
inc
push
dec
cs
insb
add
push
dec
push
jne
mov
inc
add
dec
inc
add
or
dec
ja
cmp
dec
jb
xor
dec
ss
jnp
sub
dec
sub
push
pop
push
xor
dec
cmp
dec
cmp
dec
jb
xor
dec
ss
popa
dec
sub
dec
sub
bound
arpl
dec
jno
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
jb
jae
addl
jo
jno
aas
dec
jbe
cmp
dec
ds
dec
dec
xor
dec
xor
dec
push
sbbb
setae
nop
jo
jno
aas
dec
jbe
cmp
dec
ds
dec
dec
xor
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
mov
add
aas
dec
pusha
dec
cmp
dec
cmp
dec
pop
dec
xor
dec
xor
mov
ret
add
jo
jno
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
ret
psrlq
shlb
jno
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
cmp
dec
cmp
dec
cmp
dec
push
loop
jecxz
repz
jo
jno
jo
jno
ds
jg
cmp
dec
cmp
push
ds
dec
dec
xor
dec
xor
add
adc
adc
jno
aas
dec
add
xchg
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
mov
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
test
mov
add
or
inc
add
fstp
inc
inc
add
inc
inc
mov
jne
mov
incb
mov
dec
inc
add
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
ds
pushf
clc
and
pushf
clc
ljmp
add
imul
pushf
clc
popf
jmp
add
jbe
inc
add
adc
fsubs
inc
add
add
add
inc
add
add
dec
add
dec
add
add
add
add
inc
add
add
dec
add
inc
add
add
dec
add
add
jae
insb
popa
imul
dec
dec
inc
inc
insb
imul
imul
insb
jae
push
insb
imul
imul
imul
jae
imul
imul
dec
dec
inc
inc
push
outsl
imul
push
fs
imul
insb
imul
push
jne
jns
imul
jne
fs
push
data16
add
add
add
xor
inc
add
pop
dec
dec
dec
dec
dec
pop
dec
push
dec
or
dec
add
push
dec
pop
dec
push
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
push
dec
push
dec
inc
dec
pop
dec
dec
dec
push
dec
cmp
add
add
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jno
mov
outsb
jae
bound
add
mov
mov
inc
aaa
inc
jle
jno
mov
imul
inc
xlat
leave
xchg
inc
adc
jge
faddp
leave
xchg
fs
dec
leave
sbb
jno
rorb
add
shlb
xor
inc
push
outsl
push
push
inc
add
dec
inc
add
add
imul
pop
outsb
jbe
jns
push
imul
je
jp
arpl
push
imul
push
imul
push
jb
add
insb
pop
ja
je
bound
in
jnp
jnp
cmc
pushl
sar
fabs
movsl
push
rorb
add
adc
add
mov
adc
lods
add
jl
dec
lock
mov
xadd
adc
adc
cmp
xchg
push
cmp
or
test
jmp
lea
push
in
adc
mov
mov
aad
imul
dec
vpcmpeqb
and
push
inc
jle
in
js
imul
test
subb
cmpsl
fildll
dec
fsubl
out
in
fsubl
insb
loope
pusha
scas
pop
repz
sarl
sbb
mov
or
cmc
sub
dec
jg
pusha
ret
movsb
imul
xor
push
popf
rcrl
adc
outsl
push
sub
int
adc
mov
nop
adc
and
sbb
cmp
pop
mov
or
or
xor
sub
popf
or
fnstenv
dec
lds
popf
movsb
and
add
add
push
pusha
in
jle
cs
pop
ret
lret
out
add
add
add
jns
mov
mov
or
mov
fiadds
mov
sbb
fcompl
rdpmc
in
subl
aad
mov
or
xchg
pop
mov
shlb
rorl
mov
mov
js
js
or
and
repnz
imul
std
push
mov
lock
lret
mov
pop
or
xchg
pop
adc
imul
pop
jbe
cmpsl
aam
jp
sub
mov
stos
or
insl
inc
sub
jnp
mov
lds
sti
sub
jge
pop
repnz
and
inc
or
stc
scas
xchg
inc
jns
add
push
mov
push
testl
test
or
das
out
dec
ror
fidivrl
xchg
inc
mov
popf
jbe
dec
pop
push
xlat
add
add
adc
mov
adc
sbb
add
add
add
pop
fsts
pusha
rcr
ret
push
lret
out
sarl
mov
inc
fcmovu
hlt
lahf
repnz
movsb
xorl
push
push
mov
push
aam
inc
movb
test
jg
or
mov
or
rcrl
iret
pop
test
mov
movl
shrl
in
rcll
push
push
lcall
fbld
sbb
jle
mov
into
mov
mov
or
dec
in
shrl
adc
xor
sub
test
mov
inc
lret
cmp
mov
mov
sub
nop
add
iret
lea
xchg
cmc
pop
adc
nop
xor
insb
or
dec
mov
pop
push
inc
lock
xor
loop
loop
add
add
subl
stos
dec
out
insl
inc
mov
add
add
add
aaa
pop
mov
add
cmp
pop
cmpsl
imul
pop
aas
mov
dec
les
iret
ss
mov
mov
pop
loop
sub
add
mov
neg
frstor
mov
cmpb
sbb
shll
jno
cmp
push
push
jo
xor
jg
mov
int3
mov
mov
mov
push
lcall
cmc
push
cmp
inc
mov
xchg
pop
or
jns
jb
mov
fmull
sub
enter
jl
mov
loope
add
push
stos
lods
gs
std
popa
nop
mov
cmp
loop
xor
or
jae
nop
insb
test
ljmp
inc
fcompl
mov
pop
mov
cltd
xchg
add
xchg
pushl
push
cwtl
rcr
xor
aad
sub
add
inc
or
leave
bnd
cs
ja
jmp
add
into
jmp
ja
test
mov
js
jp
pop
sar
and
cmp
push
dec
gs
outsb
cmp
into
jl
rcrl
adc
pop
test
cli
add
cmp
test
xor
cmp
scas
pusha
cmp
cltd
nop
shlb
js
lods
push
int3
lcall
jno
imul
fbstp
into
sbbb
mov
push
lahf
andps
push
fwait
adc
cmp
and
mov
insl
sub
push
lret
and
sbb
mov
adc
fldcw
mov
stos
pusha
mov
dec
sahf
hlt
sbb
xchg
sahf
leave
ret
add
pop
push
in
imul
mov
repz
jb
aad
cmp
imul
dec
popa
nop
mov
pop
bound
inc
aam
test
add
add
cmc
insl
cmc
out
lcall
sub
mov
add
cmc
add
add
int3
mov
lea
scas
mov
push
rorb
lcall
shrb
xchg
sbb
mov
sub
and
repz
in
movsl
les
les
aad
cmp
aas
inc
loopne
push
aas
mov
sbb
je
cltd
fnstenv
lods
dec
popa
pop
popf
cli
rorb
adc
ss
and
or
cmc
subl
cmpb
lods
lods
shlb
ret
add
sahf
seta
push
addr16
test
mov
fs
xchg
in
and
and
or
repnz
std
push
std
cmc
std
fisubs
addr16
push
jae
inc
js
mov
shl
imul
mov
inc
inc
clc
mov
push
sbb
push
js
dec
push
fxch
je
cmp
mov
add
add
add
outsl
jle
dec
xchg
call
loop
jmp
add
add
add
push
push
cmp
outsb
cmp
push
add
inc
lock
jmp
mov
jl
lds
scas
cmp
cmpsb
jle
adc
push
or
add
int3
mov
sbb
fidivrs
cs
lods
or
rorb
pop
icebp
or
inc
xor
or
sub
inc
or
mov
push
je
add
pop
sub
pop
sbb
xor
sub
sbb
xor
pushf
cmpsb
sub
jmp
lret
mov
aad
jg
out
adc
mov
mov
or
jbe
decl
incb
aad
pop
fisubrl
xchg
inc
out
in
push
stos
mov
cmp
xor
jno
jb
jbe
mov
and
adc
inc
sbb
flds
add
or
and
scas
sti
jle
inc
sbb
inc
aas
in
add
cmc
add
add
popa
mov
cmpsl
xchg
xor
scas
mov
cli
call
and
mov
mov
repnz
and
add
mov
dec
pop
pop
cmp
ljmp
test
and
xor
gs
decl
mov
push
scas
cmp
mov
in
cmpsb
mov
pop
in
test
pop
mov
xor
inc
cmp
int
hlt
jnp
sbb
nop
jle
iret
mov
jae
lahf
loope
push
addr16
sti
add
inc
ffreep
jge
add
mov
hlt
outsl
mov
mov
fs
dec
sbb
push
dec
pop
xchg
inc
mov
lea
sub
out
fs
lods
mov
or
jl
dec
fisttpl
insl
in
incl
or
and
jno
or
mov
stc
sub
add
add
negl
lahf
fiadds
pop
mov
in
add
cmc
add
add
aaa
arpl
fsubs
fwait
mov
orl
or
dec
subps
shr
dec
cmp
sti
std
ret
les
loopne
mull
mov
xor
dec
push
xchg
cmp
mov
xchg
push
shlb
push
sbb
stc
test
pop
lods
xchg
mov
mov
stos
mov
mov
sar
mov
xor
mov
inc
add
aam
rorl
movsl
jbe
ret
or
mov
inc
inc
or
xor
push
and
bound
push
xchg
sub
adc
popa
ds
bound
mov
jle
cld
pusha
push
ljmp
xchg
mov
mov
pusha
enter
movsl
shlb
or
sub
sahf
aam
rorl
fs
sbb
cld
mov
pop
cmp
outsl
jne
add
mov
add
xor
push
jl
jle
insb
pop
decl
jl
sub
add
add
add
mov
test
push
lds
jns
repz
cld
lods
frstor
out
inc
stos
and
push
int3
and
push
ret
int3
xor
sti
ror
push
out
lods
sarl
pusha
loopne
inc
pop
cmp
in
xchg
sbb
sbb
jge
psrad
jae
mov
xchg
out
xor
and
add
pop
inc
or
sbb
mov
insb
leave
xorb
jge
mov
add
loopne
pusha
jb
in
fcompl
dec
aas
pushf
mov
sbb
push
iret
inc
push
mov
mov
xchg
jnp
test
daa
jnp
in
pushf
test
inc
add
push
movsb
cwtl
sbb
aam
cmpsb
sub
dec
sbb
inc
jae
dec
in
cmc
out
dec
or
sub
jb
mov
mov
inc
dec
imul
insl
lea
push
mov
or
mov
adc
pop
ljmp
push
out
add
cmc
add
add
movsb
les
fcomps
orb
mov
push
inc
lahf
or
lods
mov
data16
cltd
push
outsl
inc
and
icebp
fsubp
lds
pop
xor
clc
out
dec
mov
cmp
insl
dec
cmp
mov
lcall
sbb
movsb
mov
mov
or
mov
hlt
js
nop
sbb
xchg
sahf
addr16
pop
int3
cltd
ljmp
mov
scas
rclb
ss
sub
ret
cmpsl
shll
out
ja
jb
cli
mov
mov
inc
jle
mov
idiv
imul
das
imul
sbb
push
jle
push
pop
scas
pop
mov
iret
jno
pop
or
insb
jge
adc
pop
xor
je
out
adc
adc
add
push
inc
cmpsb
xchg
cli
outsb
mov
add
add
aaa
data16
jne
mov
gs
lock
cmc
add
add
cmpsb
mov
pop
add
pop
xchg
cld
ret
adc
cmpsl
ja
inc
imul
rol
leave
fadds
jge
mull
xor
hlt
jge
movsl
imul
fdivrp
pop
popa
push
xchg
adc
mov
inc
xchg
push
sbb
in
mov
inc
es
mov
pop
rorl
inc
or
es
jp
fistl
rclb
push
imul
adc
and
in
adc
or
sub
dec
xchg
adc
adcb
cmp
mov
in
or
fisttps
pop
mov
mov
scas
les
in
dec
jbe
push
push
aaa
fnstcw
jbe
scas
enter
cmpsb
mov
sti
lods
rcl
jl
mov
cs
add
fs
adc
xor
clc
outsl
fdivrl
cltd
ret
cmp
dec
add
add
add
jnp
sti
xchg
rol
imul
stos
lcall
add
lds
fcmovnbe
ljmp
push
inc
push
xchg
loopne
in
mov
fsub
sbb
or
bswap
pop
inc
dec
or
movsl
xchg
sbb
cld
call
mov
imulb
gs
rorl
push
mov
push
adc
add
or
add
adc
add
fistps
adc
or
mov
mov
add
and
shl
mov
mov
pop
mov
inc
imul
dec
lcall
hlt
scas
mov
or
pop
mov
adc
mov
xor
mov
adc
xor
adc
icebp
movsb
xchg
and
add
inc
fistpl
fnsave
adcl
sbb
and
mov
aaa
test
push
add
add
pop
sarl
test
sub
int3
sbbl
add
add
jbe
mov
rcll
mov
sbbb
repz
add
xchg
sbb
insb
jb
fisubrl
lea
lret
test
pop
sub
shll
cmc
sti
fstpl
test
pop
mov
gs
push
push
lahf
test
lock
jle
adc
xlat
fbld
sub
inc
mov
enter
inc
inc
shl
ret
out
pop
pop
adc
xchg
pop
inc
in
pop
dec
mov
bnd
dec
fs
sbb
mov
testl
jo
xchg
or
roll
mov
insb
ret
std
out
insb
out
sbb
call
ret
pop
add
mov
loop
dec
jae
leave
out
daa
iret
fs
lahf
lea
out
int3
or
insb
add
repnz
add
add
repz
std
repz
xchg
scas
ffree
lock
cmc
add
add
cmp
popa
xchg
cli
mov
sbb
ljmp
scas
fwait
mov
push
aad
fldcw
ret
dec
mov
addr16
js
pop
cld
pop
pop
sub
inc
sub
adcl
lods
jnp
sub
xor
imul
add
sar
push
outsl
addb
pop
mov
pop
outsl
mov
jbe
je
add
fidivs
icebp
sub
gs
mov
shlb
push
mov
pop
repnz
pop
push
mov
daa
icebp
xor
dec
jbe
divb
inc
cmpb
fisubrl
jb
in
pop
cmpsl
and
pop
test
icebp
inc
or
lret
stos
ret
pop
mov
dec
lret
mov
mov
test
out
pop
push
iret
icebp
pushf
pop
rol
je
add
cmp
jns
mov
inc
cltd
jns
cmpsl
int
lds
or
add
add
lock
cmp
or
inc
xor
fucom
repz
cmc
add
add
mov
ret
push
and
push
mov
xchg
xor
mov
inc
das
mov
cli
fs
cmp
fstpl
mov
jns
sub
sub
sbb
and
cld
nop
into
lock
xchg
dec
mov
loop
xchg
cmpsb
out
lds
sti
sahf
sbb
add
fldcw
xchg
sbb
inc
mov
or
lahf
xchg
pusha
adc
pop
xchg
mov
aas
lcall
cli
push
repnz
insb
ret
inc
mov
push
loop
sbb
ja
cmp
inc
adc
sub
add
xor
mov
aas
jle
test
inc
stc
add
mov
daa
out
jnp
mov
sbb
push
jp
movsb
mov
subl
mov
mov
push
sti
xchg
popa
loope
mov
push
add
add
mov
mov
push
jnp
add
hlt
add
cmc
add
add
les
mov
pop
fdivl
xor
fldl2e
imul
mov
orb
pusha
xor
cltd
add
aam
iret
pop
aaa
sub
testb
mov
es
rcl
dec
addl
xchg
subb
mov
mov
sbb
cmpsl
push
mov
shlb
cmp
mov
mov
xor
adc
add
pop
push
ret
cs
jmp
lods
mov
mov
cmp
testb
dec
mov
mov
lock
stos
mov
mov
loope
lret
xor
dec
scas
mov
mov
and
mov
add
test
data16
mov
xor
cwtl
pop
cmpsb
mull
mov
sub
jb
scas
fs
lret
xchg
in
mov
pushl
comiss
inc
cmc
add
cmc
add
add
sub
outsl
dec
test
inc
fisubrl
push
push
jae
dec
test
cmp
aas
std
sub
repnz
mov
sbb
insb
xlat
cmp
push
xlat
inc
mov
mov
pop
xchg
mov
mov
out
sbb
mov
xor
inc
in
push
les
xchg
idivb
insl
mov
adc
xchg
lds
jge
adc
dec
or
mov
cmp
shll
pop
lods
orb
sub
lea
ljmp
shlb
mov
faddl
test
loope
inc
cli
push
test
out
call
sarl
cmp
cmp
mov
lds
repz
cmpsl
cmp
mov
and
in
out
shll
iret
loopne
clc
dec
inc
dec
add
jnp
mov
add
sub
in
negl
push
inc
push
xor
testb
cmc
add
add
xlat
test
js
mov
movsb
scas
and
lahf
sub
fldl
xchg
or
lods
mov
sbb
addr16
inc
rcr
arpl
xor
jp
sub
and
or
adc
mov
andl
adc
movsl
iret
fsubrs
stc
mov
mov
mov
or
cmp
aas
cmpb
sbb
mov
sbb
mov
jmp
sub
in
adc
fs
xchg
pop
lods
loopne
repz
and
xchg
arpl
mov
and
xchg
in
int
cmp
test
sub
pusha
mov
dec
std
mov
inc
insb
enter
lcall
push
dec
fbstp
lods
inc
movsl
stos
jb
outsl
std
fistps
cwtl
sahf
push
ljmp
add
add
mov
nop
fmull
sub
cmc
add
add
es
movsb
lahf
push
into
cmpsb
fidivs
imul
push
sub
or
dec
pusha
mov
lret
xor
test
out
pop
push
pop
fsubr
cs
jl
or
jp
mov
or
es
mov
arpl
lret
mov
or
jbe
aam
push
cs
and
push
mul
lret
cwtl
xchg
dec
int
mov
mov
adc
or
movsb
std
add
in
mov
leave
jae
xchg
cmp
xor
hlt
loopne
pop
mov
mov
xor
cmc
adc
shrl
cltd
ret
lahf
out
jecxz
js
insb
sbb
je
out
push
nop
cmp
xchg
fwait
addr16
mov
xchg
sbb
sti
add
mov
sti
flds
add
cmp
mov
push
add
adc
mov
mov
add
cmc
add
add
lret
dec
and
mov
jne
scas
push
lods
inc
scas
cmp
mov
add
test
int
cld
mov
ljmp
jne
repz
les
int3
mov
jbe
sub
inc
adc
leave
imul
jo
cmpb
pop
xor
push
dec
cmc
sbb
mov
ss
es
sub
lahf
test
orl
xchg
or
push
dec
lcall
mov
sub
mov
and
jp
xlat
sub
fsubr
cmpsl
or
sub
jle
mov
adc
cmp
in
lea
js
push
xor
mov
xchg
mov
mov
ret
test
rcrb
stos
adc
xchg
in
xor
adc
jne
sbb
add
out
repnz
add
pop
inc
xchg
pusha
push
movsl
stc
add
cmc
add
add
mov
xor
xchg
loope
lea
inc
jmp
xchg
sub
mov
jnp
mov
mov
in
lods
popf
mov
mov
xchg
roll
test
out
xchg
jne
sub
sarb
inc
in
dec
pop
shlb
fwait
and
jae
loop
test
xchg
pop
mov
cli
dec
outsl
jge
jecxz
loope
movsl
cmpsl
mov
xchg
repnz
adc
mov
in
insl
sub
jge
pop
stos
popl
pop
pop
or
inc
repz
pcmpgtd
pushf
xacquire
sahf
xor
fsubrl
jb
cltd
pop
stos
rcrl
shll
ror
xchg
mov
jbe
xchg
rcr
cmove
push
push
test
es
inc
js
sahf
push
jg
lret
mov
or
inc
mov
add
or
add
pop
mov
push
decl
mov
cli
add
cmc
add
add
xchg
enter
sub
in
push
inc
andb
stc
pop
in
push
fmulp
sub
inc
movl
cmp
imul
in
jle
mov
pop
test
push
cmpsl
push
xchg
das
pop
stos
cmp
jne
jecxz
sub
lds
stos
pop
mov
les
dec
or
cmpsl
fisubrl
xchg
jmp
lods
negl
leave
shl
push
clc
mov
fisubs
jp
enter
ficoml
xchg
and
les
cld
shrl
rorl
push
xchg
mov
in
and
xchg
sbb
sbbb
lret
cmp
and
into
in
xchg
push
xlat
ret
xchg
popa
mov
ljmp
in
jo
mov
neg
lret
xor
imul
sahf
lods
jecxz
fdivl
ljmp
test
lret
sub
mov
lret
xlat
scas
xchg
adc
add
bound
add
and
cmp
sti
fsubp
decl
ret
xorl
add
add
add
pop
pop
mov
test
or
in
push
sub
lock
ret
imul
fcmove
mov
mov
pop
inc
or
jl
sbb
pop
add
mov
inc
daa
std
mov
xchg
cmp
lods
adc
adc
in
pop
lock
das
fstp
cmp
lahf
or
rcl
ret
addb
leave
es
mov
repnz
lret
movsl
push
and
imul
push
decl
mov
mov
xor
ret
inc
add
cmp
mov
in
imul
pop
hlt
dec
mov
or
dec
push
subb
lea
xor
or
pop
xchg
push
out
pop
jle
jmp
inc
enter
movsl
push
lret
adc
aas
push
stos
mov
pop
iret
pop
fldcw
fs
jecxz
notl
and
jnp
lahf
andb
add
add
outsb
xor
or
test
cld
aas
test
add
cmc
add
add
cmc
dec
push
inc
jmp
pop
cwtl
xchg
and
outsl
mov
lcall
shrl
movsl
mov
inc
rolb
push
add
ljmp
cmpsl
add
sub
sub
in
popf
xor
loope
in
dec
cli
sub
jns
lret
xor
pop
pop
shlb
mov
sub
sar
iret
test
out
cmp
push
mov
jmp
clc
sbb
loopne
cmc
pminsw
push
pop
inc
stos
cmp
xor
movsb
inc
fdivrl
lods
sbb
xor
cli
add
sahf
out
xchg
push
imul
js
into
ret
adc
inc
jecxz
insb
mov
lods
pop
ss
xlat
sub
add
cltd
mov
popf
sub
call
sub
xchg
add
add
inc
ror
lock
jnp
jmp
sbb
cmp
add
cmc
add
add
pop
push
loop
fs
jl
out
out
mov
cmp
and
cld
cltd
aaa
daa
jge
loopne
jp
test
in
inc
xor
sarb
loopne
cmp
push
or
daa
mov
test
sarl
cld
cwtl
cltd
mov
inc
pop
fpatan
or
int
scas
mov
cmp
mov
fnstsw
stos
out
loope
xchg
mov
repnz
mov
fnstcw
mov
xchg
xchg
ds
inc
repnz
adc
xchg
push
mov
ljmp
ret
mov
in
lret
shlb
mov
dec
jns
mov
jle
jns
lcall
and
add
mov
jle
movsb
xchg
sub
fs
cmp
push
mov
setne
xchg
pop
sbb
in
les
scas
xor
adc
or
ja
dec
add
add
repz
fimuls
mov
adc
outsb
incb
add
add
add
mov
cmpsl
nop
push
into
and
das
mov
lea
test
sarb
rorb
add
rorb
daa
fimull
ret
scas
mov
cmpsl
dec
xchg
push
and
ja
xchg
jmp
std
std
ret
dec
mov
shrb
outsl
cltd
jp
dec
mov
mov
mov
std
outsl
mov
xchg
mov
or
ljmp
xchg
test
xor
ss
jnp
pusha
jmp
xchg
orb
xchg
xor
inc
and
add
in
or
popf
pop
lods
ret
dec
push
repnz
leave
pmullw
lahf
rcll
fisubl
add
and
ficoms
cmpsb
cld
and
fs
push
pop
push
ficoms
mov
mov
ret
cmp
clc
aas
and
sbb
add
add
out
xchg
jns
out
push
in
cmp
add
cmc
add
add
ret
mov
pop
adc
ljmp
xchg
cwtl
int3
lcall
push
add
sbb
sub
arpl
popa
jnp
jne
push
xor
mov
out
ja
pop
inc
mov
dec
jl
repnz
or
add
xchg
pmaxsw
push
scas
xchg
sbb
pop
mov
cmp
mov
fs
and
xchg
push
mov
gs
pop
push
ds
cmp
gs
or
push
jo
inc
sub
cmp
push
push
mov
adc
cmp
leave
out
pop
aas
inc
xchg
mov
xchg
in
push
add
decb
adc
push
ljmp
jb
pop
or
xor
mov
or
inc
jns
imul
outsb
inc
inc
ss
loopne
out
lret
mov
add
scas
push
repz
cmc
scas
mov
cwtl
loopne
pop
add
add
add
add
cmp
lods
mov
pop
test
jbe
clc
dec
lahf
pop
jmp
in
xchg
lods
jle
inc
out
push
test
sub
pusha
dec
xchg
push
add
inc
add
fidivs
jne
sub
mov
xchg
rcr
orb
fists
shr
push
aad
sbb
test
mov
lcall
push
or
xchg
addl
fldcw
shlb
mov
dec
adc
shlb
cmp
lods
cmc
adc
dec
fcomip
dec
pop
addr16
or
push
xor
pushf
out
pop
loopne
push
and
addb
inc
sahf
xor
arpl
ljmp
push
and
aad
movsb
iret
aad
push
shrb
and
sub
into
cwtl
add
pusha
pop
cmp
insb
pop
dec
outsb
pop
pop
xchg
insl
sub
test
jb
inc
dec
add
add
pusha
rorb
lea
xchg
dec
dec
add
add
add
add
sbb
pop
faddp
hlt
bnd
adc
xchg
test
jmp
daa
xor
aam
sub
cmp
sbb
xchg
jae
inc
or
jae
cs
inc
stos
in
jge
cmc
cmp
sub
pop
and
fldl
cmp
jle
test
mov
inc
jge
imul
ret
or
sub
jnp
movsb
idiv
push
test
jl
fisubrl
dec
cs
out
movsl
addb
inc
hlt
push
decl
bound
test
jo
push
push
icebp
jb
add
clc
frstor
sub
mov
inc
dec
test
bound
cmp
sbb
pop
call
jle
ds
loopne
mov
rclb
push
repnz
push
lods
sub
add
add
gs
testl
cmp
scas
inc
add
add
add
add
adc
pcmpgtb
lret
call
push
imul
insl
pusha
cmp
sti
fistl
ss
mov
pop
lods
jae
pop
cmc
pushw
xor
subb
mov
arpl
pop
movsl
loope
js
out
in
cmp
mov
jecxz
xchg
xchg
push
jb
cmpsl
or
inc
cmp
xor
jbe
std
lcall
dec
sub
jbe
fpatan
out
sub
outsl
sub
and
xchg
aam
or
sbb
loopne
pop
cmp
test
lock
ja
pop
mov
imul
add
pop
push
in
jp
push
push
mov
mov
leave
or
gs
xor
and
jbe
shr
fbld
pop
into
bound
push
por
mov
clc
pop
out
aam
jbe
mov
ficompl
and
daa
lahf
jle
sbb
pop
dec
inc
aaa
add
add
add
add
ficoms
shll
decb
cltd
inc
mov
out
jmp
sub
or
addr16
leave
xor
out
outsb
dec
jle
jl
in
divl
sub
mov
jb
inc
scas
lahf
loope
movl
push
inc
ficompl
mov
jecxz
subb
jnp
xabort
xor
test
fldl
hlt
idivb
shlb
cltd
mov
sub
les
push
in
out
push
stos
test
cmp
rcll
lret
adc
cmc
mov
lock
popa
xchg
mov
addl
adc
in
sub
inc
dec
mov
mov
shll
mov
test
push
ljmp
clc
mov
sbb
mov
xor
imul
jl
repnz
cs
movb
add
xlat
aam
in
sahf
into
sub
add
cmc
add
add
dec
pop
pop
inc
fdivl
jmp
mov
push
repnz
insb
js
sbb
sbb
ret
gs
jl
push
stos
nop
cwtl
call
loop
mov
arpl
xor
xor
pop
scas
rcrb
push
sahf
mov
dec
fdivrl
jp
cmp
mov
cmp
sbb
mov
clc
imul
xchg
pushf
dec
sarl
inc
bound
scas
jb
pop
add
flds
xchg
imul
test
incb
xchg
test
inc
pop
pop
les
ret
and
fadds
push
jle
push
push
ja
cwtl
sbb
sbb
pop
push
sbb
iret
mov
scas
div
fstl
or
mov
xchg
dec
pop
fisubl
mov
rorl
cli
jmp
cmp
push
inc
jle
add
jbe
push
inc
pop
jns
aas
fisttpl
inc
out
add
push
and
add
jg
movsl
xchg
movsl
lea
mov
in
aam
sub
adc
inc
jne
mov
mov
inc
mov
mov
fiaddl
icebp
pushf
bound
lds
repz
sbb
fsubr
pop
sbb
jns
xor
adc
mov
movsl
std
jne
leave
cld
mov
mov
dec
xor
jle
fsts
fisttps
nop
popf
test
lret
out
mov
iret
sub
aas
imul
mov
mov
adc
xchg
arpl
jb
scas
cwtl
pop
sbb
repnz
loopne
adcl
mov
xchg
test
out
sub
push
jb
pop
pop
fnstenv
jp
mov
inc
ret
mov
sub
out
aad
test
test
test
clc
sti
jl
cs
mov
and
add
cmpsb
sbb
jnp
mov
bound
add
cmc
add
add
jo
xchg
test
cmp
dec
lcall
cmpsb
jo
lret
aad
mov
jns
out
sub
mov
xor
out
lcall
cmp
mov
enter
call
push
les
in
std
fimull
das
sub
xchg
push
dec
mov
ja
cmpsl
loop
push
out
jno
cmp
push
xor
sbb
rorl
xchg
and
fidivl
cmpsb
inc
ret
enter
fcomps
scas
out
sbb
pop
mov
jg
push
lcall
and
inc
cwtl
lea
bound
movsl
clc
pop
adc
cmpsl
cli
push
sub
xchg
inc
in
or
and
xor
rolw
and
mov
pop
and
leave
sbb
out
aas
inc
loop
lahf
add
add
imul
adc
pop
add
cmc
add
add
add
jmp
jbe
ljmp
jb
cmp
pushf
adc
mov
jg
xchg
idivl
or
cmpsl
and
negb
scas
or
bound
sbb
inc
rorl
int
rorb
add
mov
inc
jo
dec
lahf
popf
xor
xchg
cmp
mov
adc
adc
insb
scas
inc
fists
mov
mov
push
nop
insl
iret
jns
mov
lret
loop
sub
add
add
in
nop
sbb
xchg
sub
xchg
or
mov
or
or
push
popa
xchg
or
mov
xchg
mov
insb
shlb
idivb
add
mov
sub
cmc
test
mov
aam
std
cmp
inc
shrb
imul
add
add
fdiv
mov
dec
mov
add
cmc
add
add
pop
ja
js
xor
in
mov
sbb
hlt
and
sti
std
push
dec
xchg
test
lods
out
mov
aas
adc
dec
mov
mov
and
scas
scas
movups
jo
push
stos
stos
or
pop
mov
jns
popa
lahf
mov
cltd
xor
and
cmp
test
jge
test
inc
cmp
popf
cli
mov
loop
fs
in
fstpt
mov
mov
sub
push
hlt
cmp
lcall
mov
into
lods
mov
pop
data16
mov
rclb
and
fucomi
dec
mov
das
add
push
ret
andb
mov
pop
mov
out
out
jno
in
nop
cmpb
rclb
jp
test
pop
pop
subl
mov
mov
push
imul
pushf
sbb
pop
insl
add
add
mov
stc
xchg
mov
add
cmc
add
add
call
add
pushf
pusha
insb
fisttps
das
fildl
mov
pop
push
lahf
xchg
ficoms
cwtl
add
mulb
mull
fdivrs
jecxz
dec
xchg
je
decb
xor
push
xor
loope
xchg
aas
fildll
mov
fcomps
and
es
mov
leave
xchg
mov
popa
push
jp
sub
and
lock
hlt
das
aam
stc
orl
out
pop
jb
ret
daa
cltd
jae
mov
jmp
push
outsl
outsl
jno
jo
arpl
push
in
fistpll
mov
mov
cmp
inc
insl
rcr
pop
les
add
push
xchg
pop
xchg
lea
mov
notb
mov
out
iret
push
ss
data16
popa
dec
cld
and
lods
lea
inc
pop
fwait
xchg
pop
idivl
add
jmp
imul
pop
sub
andb
add
add
add
lea
fnsave
aam
pop
adc
insl
test
cld
lcall
bound
adc
lcall
outsb
xchg
incl
push
jecxz
lret
out
sbb
clc
les
orb
xor
adc
mov
lds
loopne
movsl
test
xchg
inc
dec
rcl
enter
mov
and
nop
mov
aad
icebp
mov
sahf
or
pusha
pop
pop
jmp
add
dec
add
cmp
mov
in
loop
shlb
xchg
adc
ljmp
int3
hlt
inc
mov
adcl
inc
in
jmp
or
cmpsl
cmp
sbb
cltd
mov
fidivl
push
xchg
and
insb
es
and
pop
cmp
movsl
aam
dec
fcompl
mov
pop
inc
pop
lods
pop
cli
cmc
inc
mov
jno
or
add
add
add
pop
adc
js
cmpsl
push
ret
push
xor
insb
xor
mov
movsb
aaa
mov
mov
loopne
jo
push
sub
int3
pop
test
mov
rcr
out
aam
push
loope
dec
fdivrl
lret
mov
inc
push
cld
sub
cmp
lods
mov
movsb
fs
dec
dec
and
mov
lds
subl
pusha
mov
cmpsb
mov
repz
mov
jo
lods
cmp
push
or
fdivp
jnp
or
ja
xchg
jecxz
mov
js
jo
in
iret
mov
aam
fidivrs
dec
ss
cld
gs
sahf
pop
cmp
xorb
jp
in
insb
imul
xlat
aaa
imul
adcb
mov
dec
inc
add
add
stos
cltd
inc
popf
jae
out
inc
dec
clc
ret
cmpsl
and
add
add
add
jae
xchg
jmp
lahf
rolb
loop
pop
std
jne
ret
cs
inc
js
in
fwait
mov
mov
push
mov
sbb
or
mov
xchg
push
loope
roll
loope
cmp
in
cwtl
int
push
inc
adc
xchg
gs
mov
shlb
stos
sbb
cmp
xchg
push
aad
cwtl
in
in
inc
xor
pusha
adc
fildll
pop
jo
pop
cmp
xchg
and
test
xchg
fsubrl
cmp
inc
daa
lods
ficoms
and
adc
test
jbe
inc
imul
int3
scas
bound
xchg
loopne
imull
sub
das
mov
ds
dec
shll
mov
pop
and
movsl
add
sub
stos
sub
mov
out
stos
shlb
or
call
add
add
add
aam
int
xchg
clc
loopne
icebp
leave
or
add
add
add
int
and
fnstenv
sub
or
pop
test
insb
cmp
or
mov
inc
les
dec
push
bound
jecxz
sbb
enter
js
test
cwtl
das
ljmp
cmp
aad
push
and
hlt
loop
incb
lea
adc
fnstenv
or
cmp
sbb
mov
mov
sub
dec
add
inc
xchg
fildl
test
jge
sti
xor
or
out
ss
inc
pushf
mov
dec
cs
mov
xlat
aam
inc
push
mov
pop
call
xchg
xchg
or
inc
jbe
bound
mov
ret
jecxz
movsb
sbb
cmp
push
push
pushf
inc
outsl
iret
dec
inc
cltd
xchg
mov
lret
push
inc
enter
outsl
fs
stos
les
mov
int3
inc
push
add
add
arpl
addr16
inc
jmp
and
cmc
add
add
push
imul
push
call
mov
pusha
mov
mov
or
mov
push
jp
sahf
fcompl
in
xchg
popa
int3
stos
lret
lret
sub
jmp
imul
jnp
jnp
dec
sbb
cli
push
pushf
iret
mov
out
dec
test
negb
mov
jns
imul
xchg
add
out
gs
fwait
inc
mov
scas
sbbl
sub
nop
adc
sysret
fwait
or
lock
leave
inc
das
dec
shr
sarb
test
mov
lret
jnp
jg
mov
push
fcompl
add
lret
mov
mov
xor
xchg
scas
or
mov
jle
fwait
cmpb
mov
xorb
mov
mov
addl
add
out
out
pushl
jecxz
cwtl
stc
or
cmc
add
add
or
inc
into
addr16
dec
xor
scas
add
xor
lahf
jp
inc
or
mov
outsb
mov
orb
pop
jb
pop
scas
adc
adc
xor
inc
into
ret
fs
lea
fcompl
cmp
orl
in
sub
or
ret
ja
stc
insb
pop
and
addr16
mov
jbe
jecxz
fsubrs
mov
pusha
inc
jb
push
mov
jno
and
xor
cld
cmpsl
adc
xor
pop
test
add
xchg
pop
mov
loopne
adc
mov
and
pop
or
adc
ljmp
push
daa
mov
ret
shrb
fwait
mov
sbb
cmpsl
fcmovnbe
pop
test
or
or
cmp
mov
mov
and
jnp
add
add
push
scas
out
mov
shlb
stos
lea
add
add
fstps
hlt
into
int3
mov
mov
or
test
dec
pushf
cltd
xlat
in
inc
xchg
jne
aas
fs
aaa
fdiv
dec
icebp
addr16
stos
lsl
in
jl
incl
es
in
fs
add
in
mov
dec
push
int
push
icebp
push
in
jecxz
scas
or
inc
or
imul
or
in
out
xchg
sbb
outsb
stos
push
test
inc
add
push
fs
das
sti
in
stos
aad
cs
pop
and
subb
outsb
fldenv
addr16
xor
popf
or
in
push
and
fldl
mov
lea
test
jae
in
jp
aam
loop
dec
and
jbe
dec
adc
lods
mov
jmp
in
mov
push
cli
mov
pop
mov
jb
ret
or
imul
arpl
and
ss
xor
nop
mov
jbe
pop
je
addr16
add
add
xchg
and
movsl
mov
mov
cmp
scas
adc
lahf
popf
adc
add
add
add
call
idivl
out
push
sub
mov
adcl
dec
adc
or
mov
enter
data16
mov
adc
into
sub
inc
cli
cmp
and
adc
pushf
movb
add
sub
rcll
in
fidivrs
lahf
int3
lahf
cmp
and
mov
fdivl
mov
jae
push
sbb
bound
neg
test
mov
mov
cmp
ret
jns
adc
data16
fwait
test
rclb
es
in
mov
pop
dec
add
movsb
or
js
xchg
cmpsb
lock
lret
out
std
and
inc
popa
or
into
dec
xor
jo
and
sbb
mov
test
push
inc
lahf
lea
push
pop
enter
daa
cli
xchg
cmp
dec
sub
test
movsl
and
add
fdivl
mov
mov
in
xchg
adc
add
add
add
or
out
lahf
nop
lea
rolb
adc
mov
sub
xor
sub
nop
mov
dec
hlt
push
in
js
adc
out
popa
cmp
pop
mov
je
lds
lods
pop
push
push
aam
mov
and
push
pushf
adc
das
stos
dec
outsl
sbb
sbb
xchg
dec
sub
jne
aas
sbb
add
repz
ss
pop
js
les
loope
int3
jne
test
adc
enter
mov
pusha
sbb
cltd
add
inc
xchg
inc
rcl
mov
mov
pop
cmp
xchg
movsl
xchg
gs
inc
sbbl
fcoml
loope
adc
loopne
fwait
sbb
pop
fstcw
inc
adc
ficoml
sub
push
mov
das
add
add
mov
mov
fidivrs
add
add
add
add
loope
repz
test
jns
dec
jae
mov
mov
jmp
out
jecxz
jo
inc
mov
jp
fcos
mov
sbbb
add
test
mov
xchg
aad
popf
sahf
pop
xchg
adc
adc
mov
cmp
shlb
add
shrl
mov
pop
in
push
mov
jmp
mov
and
sbb
mov
jb
int
iret
cmc
repz
je
sub
mov
and
aam
adc
xchg
mov
xchg
mov
push
lea
mov
insl
mov
xlat
cmp
test
dec
cmpl
sub
ret
out
mov
cmpsl
or
outsl
add
cmp
gs
push
adc
popf
inc
sbb
push
arpl
xlat
jmp
pushw
in
dec
sub
lret
into
add
add
mov
or
jl
add
cmc
add
add
pop
mov
test
pop
adc
repnz
outsb
adc
cmp
outsb
data16
mov
arpl
shrb
xor
outsb
sbb
xchg
inc
fidivrs
loopne
sbb
testl
xor
fs
jmp
das
add
or
dec
int
daa
and
mov
push
insb
xor
sbb
enter
test
shlb
loop
push
mov
xor
inc
pop
ss
and
mov
leave
mov
fsub
and
into
mov
js
sahf
dec
rolb
mov
push
fdivrs
xchg
or
arpl
mov
arpl
ret
int3
loop
mov
or
inc
pop
inc
test
jb
jae
mov
sbbb
jge
or
pop
jnp
mov
mov
sbb
out
lock
scas
mov
std
inc
cld
aas
scas
add
add
hlt
fists
lock
jno
add
cmc
add
add
pop
mov
sbb
imul
fsub
pop
popf
mov
stc
pusha
sub
inc
mov
mov
push
outsb
out
stc
out
sub
push
icebp
dec
icebp
pop
enter
cmc
xor
inc
clc
xor
test
jecxz
es
incb
cmpsl
pop
popf
dec
xlat
mov
cmp
sub
aad
push
ljmp
dec
push
cltd
push
sub
or
push
jns
mull
xlat
aam
fcompl
sub
dec
fsubr
add
pop
pop
cmp
pop
clc
xor
jg
dec
insl
sbb
inc
stos
inc
dec
push
adc
or
arpl
clc
add
pop
and
mov
inc
mov
pop
mov
cmp
add
push
xchg
outsb
mulb
stos
mov
sbb
jmp
adc
xchg
and
push
fistpl
icebp
insl
add
add
into
fwait
testb
jnp
fidivrl
adc
add
dec
push
lods
mov
xchg
mov
dec
pop
inc
daa
or
sbb
mov
aad
adc
or
nop
shr
addr16
push
pop
cwtl
sub
jns
sub
in
cld
jecxz
adc
orb
sarb
mov
jno
jmp
dec
out
xchg
adc
rcrb
cmp
mov
add
lret
inc
pop
mov
mov
mov
push
pop
mov
cmp
pop
mov
sti
movsl
ret
dec
shlb
xor
lret
mov
leave
stc
insb
outsb
loopne
mov
prefetch
or
sub
mov
mov
push
and
hlt
je
sub
out
pop
out
repnz
inc
ret
pusha
rolb
insb
pop
or
adc
mov
add
add
xor
mov
pop
mov
repz
mov
add
cmc
add
add
es
fbld
lods
jecxz
stc
mov
xor
cmpsl
cltd
push
jo
test
movsb
push
mov
hlt
xchg
cmp
ss
adc
stc
incl
mov
add
sbb
mov
fisttpll
inc
xor
jnp
out
fstps
data16
into
jae
ja
ficomps
into
cmp
sub
mov
rcl
mov
test
push
xor
pop
xchg
dec
xchg
cwtl
xchg
mov
dec
enter
jbe
lods
pop
mov
repnz
das
aam
xchg
mov
daa
adc
pop
cmpsb
lret
orl
pop
and
push
rclb
pop
imul
pop
xchg
mov
mov
xor
add
lock
mull
mov
push
xchg
clc
movsl
in
cmpsl
roll
cmp
inc
stc
sti
test
fisubrl
sub
dec
dec
insl
movsl
jg
push
add
add
inc
out
aas
mov
sub
jnp
push
push
pop
add
cmc
add
add
jo
mov
pop
pop
push
inc
pop
sbb
or
sub
jnp
into
jae
pop
lcall
mov
fidivrl
mov
mov
mov
mov
and
cltd
lods
ret
lahf
out
cmp
mov
push
adc
xchg
test
lea
mov
ja
inc
cmp
add
cmp
xchg
jne
ret
add
and
jmp
jmp
stc
fistpll
nop
pop
dec
jbe
inc
and
xor
fisttpl
fwait
xor
adc
in
xchg
or
fildl
pop
insl
imul
jp
jne
adc
xor
xchg
pop
test
adc
xor
mov
or
jg
lcall
cmovb
iret
push
lds
mov
and
sub
bound
add
add
bnd
jp
xchg
inc
mulb
and
sbb
add
add
add
cld
pusha
pusha
stc
stos
push
mov
stos
or
dec
xchg
add
shll
push
test
jns
clc
xor
xorb
rcrb
inc
popf
jae
dec
mov
push
mov
cmp
cmp
imul
xchg
fbld
inc
pop
push
pop
or
sti
lds
push
or
push
loop
dec
inc
imul
pop
mov
inc
mov
mov
cli
mov
pop
cmpsl
xor
dec
cmp
mov
adc
cmp
lret
shll
jg
push
std
sub
xor
push
and
stc
and
xchg
jmp
adc
or
push
ret
jno
or
xor
push
mov
push
xor
fdivrs
pop
sub
inc
leave
pop
cmc
xor
or
cmc
insl
aaa
dec
mov
add
sbb
in
out
ja
fbstp
adc
lock
add
cmc
add
add
or
add
pop
sbb
mov
mov
fisubl
add
lods
int
mov
aam
fstl
cld
mov
push
xor
hlt
pop
dec
mov
jl
and
test
aas
lahf
sub
rcll
jg
nop
aas
or
dec
xchg
ret
sub
dec
xor
outsl
inc
into
inc
data16
inc
sub
xchg
sbbl
dec
jns
cmp
sub
push
pop
cmp
mov
aad
mov
and
pop
fs
mov
sub
addr16
sub
sahf
cmp
push
mov
into
inc
ljmp
in
pop
mov
adc
mov
xchg
mov
or
aam
jle
xchg
mov
adc
mov
in
xor
push
std
cmp
cld
fwait
jge
and
js
fcoms
out
cwtl
sti
test
add
add
pop
in
xchg
add
cmc
add
add
popl
in
popa
xor
rorl
push
xor
add
rorl
mov
push
push
cwtl
mov
jo
xor
pop
imul
fwait
push
mov
mov
cld
jnp
ss
popa
outsl
int
popa
mov
mov
decb
inc
xchg
xor
outsb
add
xor
cmpsl
push
xchg
in
pusha
push
xor
xchg
test
shrl
sbb
pop
dec
sub
mov
mov
mov
xchg
cli
pop
pop
mov
sar
sub
pop
repnz
icebp
in
jmp
std
jae
je
aas
iret
xorl
pop
dec
sbb
jb
dec
roll
pop
arpl
insb
test
fwait
xor
xchg
filds
jne
cmp
inc
ds
adc
sbb
sbb
loopne
jp
fdivp
cmp
outsl
or
mov
loopne
pop
scas
pusha
inc
push
lds
add
add
jg
imull
push
testb
push
mov
add
cmc
add
add
ss
push
ret
mov
xor
cmc
pop
inc
mov
nop
int
mov
enter
mov
jp
inc
push
icebp
test
push
push
lods
pop
mov
mov
xchg
imulb
cs
inc
dec
jmp
in
lea
and
xchg
add
fsubrs
push
mov
iret
or
push
push
push
xor
out
push
push
sti
mov
mov
lret
adc
data16
xor
js
push
mov
xor
fcomps
sub
sbb
xchg
and
addl
push
mov
loop
pop
rorl
hlt
pop
test
xchg
inc
out
mov
mov
sub
mov
mov
fwait
lret
fmul
mov
xor
sub
cld
mov
nop
or
imul
scas
sbb
add
add
sti
jg
and
mov
test
sbb
add
add
add
push
pusha
in
pop
pop
xor
or
cwtl
xchg
out
xor
adc
or
cli
xchg
pushf
xor
dec
test
subl
push
addb
pop
push
fldl
pop
jb
cmp
push
inc
pop
xchg
sbb
testl
push
lock
sbbb
inc
mov
mov
xchg
aaa
mov
nop
and
push
jns
xchg
hlt
jp
push
sub
loopne
xchg
inc
sub
pop
or
lods
je
test
inc
mov
pop
test
and
mov
mov
ljmp
scas
in
test
pop
aas
push
rol
fdivrl
sub
dec
dec
cmc
jmp
invd
push
sbb
inc
add
sbb
scas
cmp
shrl
int3
stos
push
fmul
cmp
sub
das
out
push
js
push
add
add
jnp
fldl
out
dec
push
sbb
add
pushf
xor
mov
in
sub
add
pop
fcoml
je
fwait
or
addr16
jbe
les
inc
rolb
mov
push
es
mov
mov
daa
mulb
sub
sti
mov
ss
sub
fistps
push
in
lea
inc
jno
movsl
pusha
push
push
dec
imul
cmp
xchg
loop
dec
inc
dec
push
popa
out
sbb
adc
scas
mov
call
dec
xor
cmc
cmp
ss
jbe
stos
test
push
leave
loopne
jbe
pop
adc
mov
inc
cli
movsl
cmpsl
in
adc
mov
mov
pop
adc
dec
xchg
popa
cmp
inc
nop
add
sub
push
and
add
mov
and
shlb
inc
int3
data16
lods
test
aam
bound
fst
ret
add
outsl
mov
xchg
pop
cltd
mov
das
movsb
xor
push
add
cmc
add
add
outsl
test
imul
call
cmp
notl
ret
cmc
inc
dec
jno
inc
test
lods
add
add
addr16
aad
and
xchg
nop
jo
cs
testb
xchg
mulb
out
mov
mov
push
mov
pop
subl
enter
ret
sub
arpl
repnz
mov
mov
push
outsb
sbb
sahf
jns
sbb
cmc
xchg
imul
adc
mov
xchg
cmp
cmpsb
insl
sub
insb
call
movsb
or
adc
cmp
jp
xor
mov
lret
fimull
sbb
push
mov
pop
sub
std
push
dec
cli
fisubrs
icebp
ss
mov
add
sbbb
loope
jmp
loop
ss
push
add
cmc
add
add
pop
mov
pop
sbb
mov
rcrb
data16
sub
jbe
xchg
out
test
jp
dec
testb
int
sbb
ja
mov
cmp
outsl
pop
xchg
dec
xor
xlat
cmpsl
mov
mov
and
xorl
iret
hlt
in
sbb
lock
sbb
insl
xor
inc
lahf
popa
mov
dec
lret
push
repnz
sub
iret
jge,pn
and
push
idivl
sbb
add
and
sbb
test
subl
fwait
push
lock
mov
sbb
enter
shlb
push
lret
shrl
push
jne
pop
rol
pusha
in
in
lods
loop
lods
scas
jne
out
sarb
lar
sub
add
xor
xchg
lds
icebp
cmp
push
in
pop
add
cmc
add
add
inc
mov
sub
cmp
sbb
sbb
xchg
out
sub
repz
sbb
into
sub
imul
addr16
popa
fidivrs
add
add
pop
xor
cmp
xor
mov
lock
sub
loope
rcr
mov
lds
lock
hlt
das
test
mov
dec
stc
nop
repnz
sbb
scas
dec
dec
xchg
pop
cmp
jle
mov
mov
ljmp
sub
adc
hlt
sbb
jmp
enter
xor
stc
and
add
jo
jnp
sbb
xor
sub
push
or
stos
daa
std
sub
imul
lcall
jbe
cmp
push
or
push
imul
or
push
rclb
xchg
cmp
add
add
cli
inc
jg
int
pop
sbb
or
xchg
loop
add
cmc
add
add
mov
sub
push
jmp
movsl
pushf
mov
stos
ficomps
mov
movsl
push
jmp
xchg
pop
and
mov
inc
leave
xlat
stos
xchg
adc
pop
inc
in
loope
stc
push
jecxz
xchg
mov
xchg
aaa
in
dec
les
adc
xorl
jmp
xchg
mov
dec
mov
mov
fbld
leave
pop
xchg
mov
cmpsl
mov
push
fwait
pop
sub
sub
xchg
nop
es
xchg
jmp
lahf
fnstsw
fdivrp
pop
push
pop
sbb
xor
push
mov
mov
adc
mov
adcb
inc
lret
or
mov
lcall
test
out
add
add
loopne
jg
lock
std
cmp
jle
fisttps
cmp
mov
and
add
add
add
mov
adc
ds
rcr
inc
fcmovnb
and
cwtl
cmpsl
das
jne
sbb
pop
pop
mov
sbb
nop
stos
loope
add
scas
sbb
mov
in
cmp
inc
nop
mov
divb
data16
das
xor
sbb
mov
movsl
loope
into
sbb
fwait
and
data16
adc
das
loope
int
cmc
icebp
dec
dec
jge
lods
jp
sti
lcall
or
fadds
loopne
ds
stos
jecxz
fs
outsl
xchg
xor
insb
add
mov
push
dec
cmp
out
and
lds
sti
int
xor
pop
sbb
xchg
test
mov
jo
sub
lds
or
test
sti
mov
and
sbb
sbb
stc
pop
add
add
iret
xlat
ficoml
aam
xchg
and
add
add
add
jecxz
jno
int
ja
adc
divb
pop
push
xchg
cmp
dec
pop
push
pop
push
mov
test
mov
adc
xchg
mov
mov
lods
cli
or
mov
loopne
or
jbe
scas
out
and
cmpsb
mov
lods
sbb
aaa
nop
lds
jl
add
icebp
and
out
and
and
adc
push
fcomps
sbb
add
iret
lret
js
add
cltd
stos
pop
lahf
pusha
inc
mov
sahf
or
popf
mov
dec
out
notl
dec
xor
sbb
loopne
je
mov
jne
cmp
fidivrs
ret
pop
fadd
movsl
jmp
sbb
cmp
insb
repnz
cmp
fldt
xor
jne
in
push
cli
xchg
push
das
sbb
dec
jmp
dec
scas
iret
outsb
jmp
rcll
xchg
push
aaa
shll
add
add
add
push
inc
cmp
test
xor
jne
adc
les
sbb
pop
push
sahf
cli
pushf
and
sarl
or
jmp
mov
pop
popa
cmp
lret
push
pop
add
inc
incb
cmpsb
mov
loopne
cmp
sahf
mov
dec
fmuls
outsl
lret
stc
jmp
pop
loopne
std
lret
movb
dec
push
inc
jl
or
outsl
lahf
xlat
mov
int3
cmp
xor
testb
jmp
stos
daa
cmp
push
stc
aad
jge
ja
pop
lcall
sbb
loop
sub
xchg
sbb
iret
imull
mov
dec
shlb
fiaddl
insb
idivb
ljmp
or
mov
cs
lahf
jmp
jmp
mov
pop
mov
das
xchg
and
call
lcall
add
add
std
sbb
stc
cld
or
pop
inc
or
add
add
sbb
mov
test
cmp
cli
ret
shl
fisubs
sbb
adc
mov
int
rcl
nop
dec
and
insl
fsubp
sub
inc
mov
ss
ljmp
pop
jae
inc
inc
lret
sbb
add
lret
inc
xchg
mov
adc
je
test
fxch
jg
adc
fimull
or
lret
sub
inc
xchg
out
sub
jb
adc
in
mov
and
scas
xor
jne
in
inc
inc
insl
pop
jp
cmp
pop
outsb
sti
aam
in
push
imul
fldcw
push
fdivrs
mov
das
add
fistl
sahf
and
int
jecxz
mov
and
lods
mov
stos
lcall
sbb
pop
mov
or
negl
xchg
xor
inc
add
add
pop
test
scas
repz
cld
cmp
jl
out
cmp
cmc
add
add
jo
inc
jb
push
adc
sbb
mov
testb
clc
repz
mov
out
adc
add
push
mov
or
dec
mov
loopne
in
inc
sbb
sahf
addl
cltd
pop
shrl
mov
mov
fsub
mov
out
loope
jg
sub
test
insb
xchg
cmp
les
psubsb
xor
pop
ret
inc
mov
scas
shlb
shlb
cmp
mov
or
test
mov
in
lods
jg
jmp
enter
sub
adc
daa
push
loope
loope
cmpl
incl
pop
gs
cmpsb
jae
lods
icebp
fcoms
mov
add
popf
mov
add
add
dec
pushl
sub
test
mov
add
add
inc
in
ds
fldenv
fs
mov
aaa
push
mov
xchg
stc
cld
stos
cmp
cmp
pusha
mov
imull
push
les
test
mov
into
or
inc
mov
lea
push
xchg
fmull
fisttpl
jne
lds
sub
test
aad
sub
mov
mov
mov
sbbb
xchg
dec
in
sub
repz
sbb
lcall
pop
loope
push
cmpl
push
mov
or
jbe
xchg
stos
mov
jo
jne
lock
movsl
cmp
xor
or
sbb
aam
push
mulb
dec
sub
repz
mov
das
in
in
mov
outsl
xchg
xchg
aaa
mov
jno
les
push
jl
push
push
xor
and
in
out
shrl
add
pop
sub
inc
ja
pop
aas
pop
pop
inc
adc
sbb
cmp
add
add
inc
pop
xchg
mov
inc
adcl
je
inc
mov
xchg
add
insb
or
mov
shll
pusha
push
rolb
inc
sahf
inc
xor
scas
add
jmp
mov
cltd
enter
imulb
outsl
js
mov
inc
jecxz
cmp
jmp
xor
jge
adc
add
and
aad
push
jp
jg
cmc
dec
and
pop
cmp
daa
sub
rcrl
mov
lods
data16
jns
lods
and
push
mov
pop
movsl
andl
sbb
jecxz
jnp
icebp
jg
pop
mov
jge
outsb
push
fucomip
ret
leave
mov
imul
enter
mov
sub
xor
jp
dec
mov
lods
dec
add
je
fwait
out
add
inc
lahf
pop
adc
aad
add
add
xchg
jae
ja
div
dec
lods
push
mov
outsb
cwtl
and
add
add
repnz
stos
loopne
xchg
ss
js
dec
jno
mov
sub
push
cld
pop
adc
stos
sub
xchg
out
and
push
jne
je
repz
ss
les
mov
push
lds
mov
fildll
das
jbe
repz
xlat
stos
pop
or
push
add
sbb
push
notb
jp
mov
pop
lret
dec
push
aas
mov
cmpsb
minps
fnstcw
inc
rcll
or
lock
mov
sti
or
push
das
sahf
nop
out
mov
lods
subb
out
inc
xor
jmp
mov
add
jnp
pushf
in
and
xor
shrl
mov
jns
jo
sbb
sub
mov
pop
mov
push
loopne
dec
dec
test
subb
imul
or
into
dec
or
add
xor
cli
std
jg
into
jno
inc
insl
sub
cmc
add
add
aas
pushf
jno
push
jbe
pop
xor
sbb
pop
inc
mov
xlat
push
inc
jecxz
pop
adc
repz
scas
dec
mov
orb
loope
pop
and
push
int3
add
pushf
out
out
pop
xor
dec
lods
loopne
push
sub
jle
popa
enter
xor
cmp
iret
dec
andl
xchg
xor
xlat
mov
std
sub
test
inc
sahf
idivl
lret
fistpl
dec
stos
adc
jecxz
lock
pop
jbe
bound
pop
fsubl
mov
cmpb
add
mov
pop
pop
or
js
nop
adc
ja,pn
fs
push
jge
ficomps
xor
cmp
push
mov
sarl
xchg
or
mov
pop
in
call
insl
ds
negb
sbb
fnsave
or
mov
jne
add
add
add
mov
std
incl
sub
pop
and
add
cmc
add
add
sub
imul
mov
arpl
adc
adc
call
mov
xchg
mov
or
in
pop
add
imul
ffreep
adc
adc
test
int3
mov
adc
cmpsl
jl
pusha
mov
or
lret
out
mov
cltd
mov
pop
pop
add
cltd
cli
mov
pop
scas
div
jg
into
fsubl
jnp
jno
loop
fistpll
int3
hlt
dec
popf
and
mov
cmp
push
outsl
stos
testl
loop
dec
iret
or
mov
rcrb
fsubrl
xchg
cmp
sub
repnz
repnz
add
or
imul
fldt
xor
pop
jb
mov
dec
push
push
lods
jp
ret
dec
fsubrl
xchg
push
add
or
add
add
es
jg
pop
xorl
xlat
pushf
or
imul
add
inc
aaa
cmp
fs
and
lea
xchg
aad
inc
iret
in
jmp
sub
enter
stos
mov
insl
pop
push
jge
seta
clc
sub
inc
xchg
mov
jl
ror
fists
test
sbb
jle
sbb
bound
lods
pop
mov
or
leave
aaa
loope
pop
js
or
mov
mov
sub
arpl
push
mov
xchg
push
loopne
or
jmp
clc
inc
cmp
aad
lods
lcall
jle
inc
xchg
movsl
ljmp
ss
sarl
mov
adc
lret
pop
test
or
lret
jmp
hlt
dec
push
inc
mov
subb
shlb
sti
add
pop
scas
pop
cmp
fidivs
jle
je
sti
or
ja
enter
push
clc
or
cmp
or
add
add
cmc
add
add
xchg
enter
popa
push
loopne
jecxz
stos
fisubrl
mov
push
adc
xor
sbbl
out
pop
mov
out
fsubr
into
push
dec
cwtl
fmuls
ss
ret
icebp
jae
icebp
mov
rolb
inc
jle
adc
pop
pop
cltd
mov
push
push
inc
jnp
cltd
push
jle
jnp
and
mov
xchg
repnz
dec
jnp
dec
dec
fcoml
or
adc
dec
mov
push
or
adc
mov
inc
sti
mov
ret
jnp
pop
mov
or
xchg
or
inc
push
hlt
mov
jno
imul
adc
pop
mov
lock
push
scas
out
add
int3
les
int3
fwait
mov
testl
lcall
push
mov
pop
in
out
pop
adc
das
ja
std
outsl
fsubs
pushl
push
push
or
flds
add
xor
ja
sysexit
jl
daa
push
sub
add
ss
fdivrp
cmpsl
mov
ret
outsl
mov
int
or
shlb
scas
push
xor
sub
inc
jnp
pop
loop
cmc
test
addb
inc
jecxz
and
das
in
pusha
inc
in
popf
or
jg
repz
cmp
adc
cltd
mov
xor
pop
add
mov
pop
faddl
and
sbb
aas
jl
test
dec
pop
fcoms
lret
mov
xor
in
pop
bound
push
lods
mov
push
or
clc
fsubs
bound
invd
add
mov
jbe
lret
mov
sub
inc
nop
push
leave
add
push
push
es
and
scas
dec
dec
xor
push
arpl
pextrw
adcl
into
inc
in
fdivs
in
cmp
add
add
dec
sub
add
add
ficoms
stos
sbb
ljmp
popf
jo
dec
add
cmc
add
add
sub
sbb
push
aam
mov
pushf
sbb
movsb
dec
arpl
repz
and
and
mov
cld
je
fistps
cwtl
shlb
push
daa
rcl
xor
mov
mov
sti
arpl
lret
imul
pop
pop
mulb
lea
or
jecxz
rcll
xor
loop
aam
xchg
enter
cmpsb
xor
xor
ljmp
sub
cs
cmp
hlt
ret
mov
push
push
push
fbld
ss
pop
mov
int3
sub
push
outsb
sbb
enter
sub
pop
cmp
pop
mov
sbb
mov
out
xor
mov
aam
sbb
cli
xchg
lahf
shrb
call
shrb
or
xor
add
add
in
out
sbbb
sbb
cmp
add
add
mov
jle
iret
xor
fcompl
mov
pusha
mov
push
dec
shrl
aam
out
mov
iret
rorl
sub
pushf
sbb
add
test
aam
push
sub
sbb
leave
push
cmc
mov
add
jno
cmp
stos
jae
nop
lahf
xchg
fimuls
lret
lods
das
dec
cmp
pop
stos
sbb
mov
je
mov
xchg
push
xchg
jl
and
add
int3
inc
gs
movsl
sbb
inc
mov
push
jp
sub
jg
dec
sub
scas
inc
arpl
pushf
mov
cmp
ret
lds
imul
test
pop
inc
lret
out
xchg
roll
sbb
inc
xchg
cltd
mov
subl
fucomi
mov
cmc
mov
push
sub
bound
insl
lock
add
sbb
out
aad
jo
pop
movsl
lahf
je
xor
add
add
add
je
rclb
mov
pusha
add
ja
xchg
aad
mov
inc
cltd
jp
insl
mov
pop
inc
push
pop
cld
or
sbb
scas
xchg
sub
popf
sub
or
add
and
mov
stos
xchg
or
imul
mov
xchg
shrl
movsl
inc
pop
pop
icebp
fdivs
jae
push
push
jbe
xchg
dec
lods
push
mov
mov
cmpsb
add
cmpsb
cmp
xchg
adc
push
push
sbb
mov
adc
dec
movsb
js
call
dec
out
jecxz,pn
imull
cmpb
test
mov
and
lahf
and
sbb
outsb
sarb
cli
test
imul
sbb
fildl
lods
out
push
mov
cmpb
add
aam
add
cmp
out
dec
lret
fstpt
daa
xor
add
add
add
pusha
out
inc
ds
sbb
sub
push
push
rcl
or
add
xlat
xor
mov
xchg
pop
lahf
movsb
or
adc
fs
iret
sti
mov
filds
xchg
cmp
mov
lods
jbe
loopne
inc
fidivl
sti
and
iret
mov
imul
arpl
aam
adc
sub
cmp
stos
and
stos
js
jp
sbb
movsb
ljmp
shr
mov
pop
movsl
fs
cmp
mov
mov
xor
adc
js
test
inc
add
jg
imul
sti
out
jae
repnz
pop
call
cs
iret
lret
or
sub
inc
popa
and
inc
sbb
rcll
cmp
cmp
xchg
mov
std
mov
jne
xlat
add
adc
mov
roll
add
test
sbb
out
add
lods
mov
xor
add
add
add
mov
popf
xlat
xchg
sbb
lahf
cs
mov
das
std
nop
xlat
dec
pop
pop
adc
insl
hlt
inc
cmp
int3
mov
or
mov
dec
mov
cmpsb
lret
in
ja
add
pop
mov
mov
mov
dec
movsl
outsb
inc
and
dec
dec
xor
sub
out
ljmp
test
add
push
decb
inc
shrl
sub
mov
xchg
mov
xchg
inc
sub
mov
data16
test
iret
push
inc
push
jge
mov
inc
das
inc
push
dec
adc
aaa
cmp
mov
bound
jns
add
adc
sbb
inc
mov
mov
push
dec
jle
or
mov
js
cmp
aas
jg
sbb
mov
dec
idivl
cld
add
adc
pop
adc
add
cmc
add
add
inc
loope
and
mov
jbe
nop
loopne
cs
lock
repz
or
aaa
es
cltd
stos
in
xor
xorl
in
adc
cmp
xchg
divl
mov
dec
mov
xchg
sub
mov
test
inc
push
aas
popa
inc
dec
hlt
dec
inc
sub
push
lret
hlt
mov
ds
dec
pop
xor
in
mov
jmp
lcall
fwait
pop
mov
fdivr
xor
dec
mov
cmp
pop
cmc
mov
shl
fs
mov
fmull
lret
repnz
iret
mov
mov
mov
jmp
xchg
aas
lahf
mov
xchg
jmp
pop
fsubs
pop
iret
testl
cmp
jge
stos
pop
dec
loope
or
flds
inc
sub
xor
add
ret
mov
iret
mov
clc
xchg
sbb
add
add
add
sub
and
add
jmp
pop
idiv
dec
popf
jg
mov
clc
cmpsb
notb
xchg
add
mov
dec
xchg
sub
in
inc
fbstp
or
add
sub
ret
and
or
repz
dec
in
inc
jl
xchg
mov
cmpsl
push
stos
mov
lds
dec
dec
in
push
aaa
in
inc
mov
push
sbb
mov
jmp
xchg
shl
inc
jmp
xor
movl
mov
jmp
in
out
sub
jns
inc
adc
in
mov
adc
js
repnz
aad
mov
nop
cmc
enter
into
das
rol
push
sbb
pop
lods
jg
shrb
das
int3
and
cmc
push
aad
in
packssdw
mov
push
pop
sub
xor
add
or
sbb
ljmp
cmc
add
add
fidivl
leave
cmpsb
sub
push
je
add
mov
pushf
xchg
mov
xchg
clc
loope
mov
and
rep
or
data16
orb
call
jmp
add
loop
jecxz
cmp
push
repnz
cmp
push
mov
cld
xchg
lods
push
cmp
sti
outsb
popa
test
cmp
inc
jle
fldt
cmp
rclb
lods
aaa
cmpsb
pop
jbe
dec
or
xor
and
cmp
jo
inc
mov
adc
and
cmp
jo
data16
in
pop
xor
imul
cmp
out
pop
test
icebp
daa
repnz
mov
cmp
aam
ljmp
cmpsl
stos
adc
mov
pop
jle
or
mov
jno
inc
adc
enter
fstps
add
shlb
cli
clc
cli
clc
sarb
repnz
inc
aam
xchg
xchg
lock
add
sbb
aas
rcrl
mov
call
inc
dec
jg
or
adc
dec
loop
sbb
adc
mov
dec
mov
shlb
sarb
scas
mov
xchg
push
jo
fs
adcl
lods
iret
nop
mov
fmull
mov
in
xor
pop
pushf
xchg
fidivrl
and
and
lods
repz
aaa
dec
sbb
pop
cld
daa
add
imul
idivb
jecxz
hlt
dec
xchg
js
fldcw
xlat
cmp
push
fisubl
adc
movsl
adc
push
je
filds
mov
hlt
mov
pushf
out
test
cltd
sub
inc
push
in
lea
add
out
mov
int3
jns
mov
pop
cwtl
add
cmp
test
fs
jecxz
or
or
imul
jno
loope
inc
out
pop
adc
insb
mov
xor
fadds
add
test
imul
push
lcall
in
add
cmc
add
add
lret
jno
rorb
and
out
add
adc
sti
roll
call
sbb
mov
adc
fiadds
cmpsl
int3
daa
ljmp
test
ffree
and
xchg
mov
xchg
pusha
sarl
mov
arpl
lods
sub
cmp
pop
add
pop
mov
cmp
pop
sbb
int3
pop
jp
cmc
jle
adc
test
mov
lret
xchg
adc
xchg
mov
icebp
lcall
pop
aaa
inc
xchg
je
popa
dec
mov
mov
insl
lahf
push
mov
sub
stos
adc
mov
or
ljmp
mov
mov
imull
or
push
mov
and
push
std
test
rcrl
movsl
repz
mov
addr16
or
jns
rolb
add
es
data16
cmc
jle
dec
mov
aaa
add
cmc
add
add
negb
bound
loop
push
je
dec
aas
pop
sti
mov
and
pop
shlb
ret
outsl
cmc
xor
mull
mov
and
insb
aam
xchg
fdiv
test
in
mov
jle
mov
addl
int3
push
mov
je
sahf
shrl
sbb
lcall
das
loopne
mov
scas
out
out
shll
call
fldcw
inc
test
sar
adc
lcall
add
add
xchg
enter
les
jge
pusha
aaa
jg
push
scas
mov
sub
lods
fsubp
sbb
movsb
push
push
imul
mov
gs
dec
or
mov
sbbl
push
jne
cvttps2pi
std
add
mov
jg
popl
sbb
add
clc
mov
fldcw
cwtl
cmpsl
and
and
iret
cmp
add
add
add
nop
xchg
aam
shlb
add
xchg
loope
int
mov
pop
push
mov
xor
jo
sub
lods
lock
bnd
movsl
cmc
lods
add
mov
lods
pop
xchg
pusha
repnz
mov
into
imul
and
lcall
sbb
mov
outsl
xchg
mov
xor
inc
add
hlt
jle
pop
sahf
pop
xchg
shl
xchg
clc
cmp
mov
ja
inc
inc
mov
xor
ja
je
mov
or
pop
mov
cmpb
or
push
jl
pop
lds
dec
das
lea
sbb
movsl
insl
push
addr16
mov
push
xor
inc
int3
jae
sahf
sub
dec
mov
imul
mov
movsl
test
enter
pop
pop
scas
imul
add
add
and
push
sti
cmpsl
pop
push
jo
ja
lret
cmp
add
add
add
sub
fadd
cmpsb
popa
mov
loope
stos
insl
mov
xor
sarb
inc
and
and
lret
jge
jae
mov
or
mov
sbb
js
jno,pn
mov
mov
jp
xchg
clc
dec
mov
push
andl
mov
mov
sub
xchg
cmp
sbb
xlat
mov
xchg
adc
fildl
jle
int3
mull
cs
push
mov
push
fisubs
gs
stos
imul
lahf
es
into
out
movsl
jmp
add
cmp
pushf
jne
jo
daa
cli
and
pop
fistpll
scas
std
cld
sbb
sub
fimull
and
sahf
xchg
and
test
leave
pop
cmp
pusha
lret
aam
add
popf
jns
sub
xlat
sbb
repnz
add
mov
std
cmp
sub
iret
mov
add
add
add
mov
jmp
ret
pop
jb
arpl
pop
aam
xor
mov
mov
cli
push
jmp
sub
bound
mull
popf
subb
in
lret
js
adc
call
int
push
jnp
xchg
roll
cmp
clc
sbb
nop
mov
sub
dec
push
mov
in
cmpl
cld
loopne
and
rep
popf
je
dec
es
enter
mov
push
xor
and
dec
enter
mov
and
dec
rcrl
inc
dec
xchg
xchg
adcb
ds
dec
cld
lds
imul
pushf
out
mov
imulb
out
enter
das
scas
mov
imul
sti
maxps
test
imul
or
or
pop
mov
mov
or
ret
add
add
and
jecxz
or
scas
cmp
add
add
add
mov
fwait
stc
sbb
out
movsl
sub
and
and
mov
push
cmpsl
sub
and
push
test
sub
outsb
test
dec
in
popf
insb
iret
dec
cmp
ds
dec
jb
lahf
sub
movsb
and
jmp
pop
xchg
add
cmpsl
pop
pop
pop
test
gs
divb
xor
idiv
insb
jl
pop
mov
aaa
push
pusha
jmp
push
arpl
pushf
adc
push
popa
lods
bound
push
xchg
inc
add
ja
pop
mov
lret
fidivs
in
pop
push
mov
push
adc
data16
stos
jle
test
cmc
sti
aad
imul
arpl
push
mov
aad
push
int
adc
mov
adc
dec
lahf
jge
lret
ret
mov
jae
nop
inc
cmpsl
cmpsl
cmp
pop
mov
mov
or
sub
jmp
loope
add
add
add
xchg
ficomps
push
dec
stos
mov
add
add
cmpsl
add
push
cmp
and
dec
mov
cli
or
xor
cwtl
daa
divl
inc
xchg
inc
into
adc
test
lods
mov
movb
stos
ljmp
push
jecxz
jecxz
mov
out
mov
in
cs
test
ret
lods
push
dec
movl
jb
push
dec
add
sbb
mov
add
shld
cmp
dec
mov
mov
bound
inc
incl
and
mov
pop
dec
rorb
inc
icebp
aam
inc
mov
dec
test
cmp
pusha
sbb
cmp
push
stos
cmp
mov
xchg
jmp
xchg
pop
push
stc
xor
mov
lret
popa
mov
in
adc
sahf
mov
fstl
pusha
lahf
clc
add
add
lods
xor
mov
pop
add
xchg
mov
cmc
add
add
out
inc
sub
daa
push
ret
aaa
xchg
nop
add
fwait
in
pop
jne
ja
loopne
mov
xor
adc
push
xor
aaa
movb
into
mov
xlat
pusha
push
clc
or
ret
xor
in
pop
and
or
inc
imul
pop
add
lods
ret
loop
mov
sub
es
xchg
sbb
push
or
inc
dec
push
mov
mov
jp
sbb
das
xchg
sbb
jnp
loop
ds
mov
jg
and
push
lock
xchg
xchg
push
push
les
push
rol
mov
mull
jno
fcomps
mov
test
mov
out
jno
loopne
xchg
adc
mov
xor
mov
mov
outsb
mov
mov
pop
add
ljmp
cmc
mov
sbb
pop
add
add
lret
mov
cwtl
sbb
inc
lea
add
cmc
add
add
fistpl
neg
xor
sbb
lock
inc
pop
cltd
xlat
sbb
dec
rcrb
mov
push
jo
outsb
enter
or
or
mov
push
popa
sub
pop
loop
mov
idivb
lds
ret
js
pusha
hlt
lock
adc
aad
mov
xor
repnz
outsb
push
test
std
add
jecxz
xchg
add
sahf
imul
popf
lea
pop
repz
imul
inc
sarb
in
out
and
pop
lahf
fcmovu
sbb
sbb
add
out
mov
enter
ds
aas
pop
repz
mov
aas
sti
test
insb
flds
mull
arpl
pop
xchg
mov
adc
pop
sub
xchg
jmp
fstps
popf
dec
sbb
add
add
sti
pop
jge
div
cmp
cmp
push
cmpb
add
add
add
mov
insl
loopne
leave
fildll
cltd
jno
scas
jle
in
mov
movsb
mov
fstp
jbe
sbb
rclb
xchg
clc
mov
in
repz
xchg
popa
push
or
jbe
testb
adc
mov
pop
xorl
adc
ret
cmp
jnp
repz
jg
xlat
cmp
mov
xchg
aam
repz
cmc
xor
jg
pop
push
or
xchg
cmpsb
push
mov
popf
mov
movsl
mov
ds
xor
in
mov
mov
fmull
das
sbb
adc
cmp
dec
inc
ljmp
mov
adc
mov
cmpsl
jae
aas
das
fsubrl
jnp
popa
lock
cmpsb
test
js
je
adc
or
jp
stos
loop
pop
sbbl
mov
add
add
fsub
std
in
popf
jle
es
popf
pop
mov
add
cmc
add
add
cmp
loope
and
xlat
cs
dec
mov
and
rcll
mov
lods
dec
aas
mov
out
and
loop
inc
cmp
lods
test
shl
scas
ljmp
jmp
jle
inc
repz
neg
inc
push
orl
jmp
jb
cmp
sarl
sahf
cmp
test
fcoms
cmpl
imull
insl
push
add
ret
jno
cltd
pop
in
lea
xor
repz
cld
jnp
mov
sahf
xchg
sarb
movsl
jns
or
lret
adc
sub
insl
push
stc
push
mov
clc
in
xlat
clc
mov
add
adc
dec
and
cld
ljmp
bound
hlt
and
lahf
iret
jge
punpckldq
lret
mov
mov
dec
shll
dec
dec
mov
jmp
sahf
stc
cmp
fwait
sbb
sbb
xchg
mov
dec
xchg
fwait
jmp
add
pop
jp
jnp
sti
xchg
jle
popf
loopne
arpl
add
cmc
add
add
lds
and
iret
xchg
push
lds
bound
stc
scas
jne
movsb
xor
mov
mov
ja
mov
and
stos
js
xchg
and
aaa
pop
pop
jl
cmp
andl
fiaddl
xlat
pop
dec
rcrl
cltd
jo
add
ret
leave
in
cmp
sbb
mov
push
sub
dec
incl
mov
ret
daa
jno
jnp
push
cmp
fwait
pop
cltd
fdivl
in
jp
cs
lock
mov
test
rcll
fwait
in
dec
and
andb
adc
jne
loope
inc
out
repnz
je
les
mov
sbb
test
push
xchg
and
or
dec
xchg
cmp
jbe
add
lods
or
cwtl
test
dec
fldenv
cli
inc
test
cld
sti
arpl
outsb
addw
add
push
sti
loopne
cmp
pop
popa
inc
add
cmc
add
add
or
adc
push
pop
and
mov
xor
out
and
nop
xchg
push
insb
gs
push
adcl
loop
adc
repnz
ret
and
dec
inc
outsb
fwait
or
sub
xorb
pop
orl
adc
pop
sub
push
pop
pop
in
das
cmpsl
cmp
pop
icebp
data16
adc
out
sbb
jle
arpl
jl
xchg
push
jge
xor
mov
divl
and
pop
jne
test
mov
adc
lea
adc
aam
les
cld
sub
push
out
cli
adc
jb
mov
inc
lcall
adc
repnz
jle
pop
adc
push
xor
add
push
ret
cmp
and
push
dec
and
cld
je
inc
add
cmc
add
add
pop
sub
scas
jbe
stos
cmpsb
imul
xor
testl
sbb
es
inc
dec
cltd
xor
dec
cmc
fsubr
aad
ljmp
scas
mov
repnz
sub
mov
dec
aad
mov
scas
and
in
sub
loop
and
xchg
mov
mov
push
xor
imul
dec
js
mov
out
fists
xchg
mov
or
cmp
jge
fstl
leave
stc
add
inc
inc
imul
pusha
cmp
sbb
xlat
dec
pop
das
sbb
aaa
mov
stc
int
movl
dec
jmp
enter
iret
inc
popf
sahf
cmp
add
hlt
push
dec
pop
in
xor
mov
xchg
fidivl
cmc
cmp
cmp
arpl
lods
pop
insl
jmp
call
push
push
subl
add
add
cmp
jge
stos
movsl
push
arpl
add
push
dec
inc
add
cmc
add
add
sbbb
mov
sbb
fstl
push
lds
mov
adc
hlt
sbb
jo
aam
and
cmp
jmp
push
xlat
mov
jbe
or
sbb
repnz
push
jecxz
das
call
and
imul
xchg
outsb
insl
adc
sbb
add
or
cwtl
cmp
adc
ret
pop
hlt
inc
ret
mov
pop
lods
std
pop
das
sub
stc
jbe
movsl
dec
leave
cmp
adc
popa
fnstenv
mov
outsb
call
push
aad
xor
sarb
loope
or
and
mov
adc
cmp
jbe
add
adc
xchg
xor
out
aas
xorl
mov
cmp
nop
sub
mov
lds
pop
fs
xor
add
rclb
mov
je
inc
inc
add
cmc
add
add
movaps
fwait
hlt
pushf
push
imul
mov
inc
bnd
ds
mov
shl
enter
dec
xchg
jge
lret
mov
orl
mov
push
cli
fstpl
mov
inc
test
lret
mov
mov
push
pop
cmp
mov
push
push
and
repz
pushf
jbe
and
loop
jle
sahf
sbb
mov
js
mov
inc
inc
sbb
xchg
test
fsubs
lret
sbb
sarl
sti
outsb
xchg
jae
aas
js
aam
shrl
shll
sahf
or
xchg
cmp
ds
and
push
fsubs
fisubrl
imul
xlat
popf
test
inc
mov
cmp
mov
add
add
jbe
idivl
ss
repz
push
xor
add
add
push
popa
cmpsb
mov
mov
xorb
sbb
inc
xor
sbb
dec
pop
outsl
imul
cmp
pushf
pushf
xor
mov
add
mov
cmp
push
es
xchg
fdivs
adc
insl
fimull
sbb
outsb
bound
ja
aam
xor
cmp
shl
rcrb
inc
mov
or
sbb
adc
add
imul
or
lock
sub
dec
push
daa
jnp
imul
add
aad
and
xchg
es
xchg
sub
xorl
mov
add
or
inc
mov
mov
add
popfw
xor
and
push
xchg
sub
push
shlb
add
cwtl
mov
outsb
loopne
sub
sub
xor
add
add
outsb
sub
stos
fs
cmp
xor
sub
add
add
add
push
adc
jnp
stos
out
jo
xchg
push
popf
lcall
daa
cwtl
mov
jecxz
adc
in
shrl
or
xchg
jno
cld
out
sbb
enter
dec
dec
lods
imul
cmp
or
sub
inc
mov
pop
or
mov
xor
xchg
cmp
idivl
popf
cmp
cmp
andb
pusha
fs
divl
cwtl
sub
sti
rcl
add
push
mov
movsl
test
inc
mov
js
jmp
pusha
test
push
fisubrs
dec
decw
pop
rorl
in
repz
add
cmpsl
add
xor
push
sbb
dec
movsl
shlb
test
sbb
rcrb
roll
add
xor
pop
repz
cmp
adc
mov
hlt
sbb
sahf
lcall
add
insb
pop
pushf
scas
fistpll
loop
add
dec
sbbl
add
add
or
shll
xchg
push
dec
fldcw
mov
cmc
fs
bound
add
push
dec
les
add
in
call
dec
sarb
mov
gs
mov
mov
sahf
pop
stos
movsb
aam
add
and
fisttps
scas
xlat
push
loopne
arpl
dec
in
notl
xchg
mov
ja
jae
cmp
push
xlat
stc
xchg
cmp
stos
test
arpl
mov
sbb
rcll
push
imul
aam
and
pop
call
rol
sub
xor
fcomps
jp
clc
push
sarb
push
cmpsl
pop
push
ss
lds
call
xchg
mov
shlb
ss
hlt
xor
aas
stc
adc
rcll
sbb
sbb
add
cld
or
add
sbb
jnp
jnp
cmp
les
ds
adc
add
cmc
add
add
mov
rcrb
das
xlat
mov
mov
sbb
jp
xchg
cmpb
inc
cld
pop
les
je
sub
das
cmp
push
cmp
fcoms
lock
add
xor
call
push
cmp
or
push
inc
ret
xor
decb
icebp
scas
shl
pushf
arpl
push
add
sbb
sub
push
sarb
pop
push
cmpsl
cmovns
pop
and
xchg
insl
mov
dec
test
fstpt
jmp
sub
ficoms
stc
jb
test
ficompl
in
inc
jmp
jl
ss
repz
lret
mov
loopne
hlt
dec
sbb
mov
stos
push
mov
mov
and
rcrl
inc
jns
pop
or
loopne
dec
popf
jae
add
add
adc
incl
arpl
ljmp
add
add
add
pop
arpl
test
xor
lods
ficoms
xlat
movsb
or
test
mov
mov
out
repz
xchg
mov
mov
mov
xchg
adc
inc
je
dec
sti
test
lods
int3
dec
ret
and
in
dec
jno
mov
decl
loop
sbb
das
jae
addr16
fcoml
orl
stos
sub
movsl
fimull
cmc
popa
in
inc
push
fdivs
loop
jae
xchg
cmpsb
pop
movsl
stc
dec
lods
cmp
sbb
cmp
sbb
xchg
loop
test
jp
popa
bound
mov
jmp
pop
pop
and
popa
nop
shll
adc
adc
xor
cld
pop
pop
jle
iret
fld
aas
das
sub
ss
jb
into
and
lods
out
sbbl
aas
sub
sarl
std
ss
xchg
or
loop
xor
outsl
sbb
and
das
cmp
lods
repz
in
pusha
out
incl
add
cmc
add
add
movsb
gs
inc
mov
jae
jle
add
dec
lock
ja
mov
hlt
pop
into
push
dec
or
in
xor
cld
mov
and
data16
jge
rcr
insl
mov
and
fs
fists
les
mov
xlat
test
sub
xor
leave
push
inc
pop
sub
xchg
fldcw
aaa
add
push
sub
out
inc
sti
jo
mov
or
out
cmp
push
mov
cwtl
pop
shlb
sbb
pop
pop
add
fmul
cltd
inc
shr
cmp
xchg
add
mov
std
lds
icebp
dec
xor
popa
pop
cmp
mov
inc
mov
lret
aas
iret
aas
sub
cli
push
stos
push
pop
cmp
or
movsb
rcl
adc
sbb
js
adc
add
add
daa
push
cld
push
std
jmp
push
jg
push
sti
div
clc
repz
add
cmc
add
add
into
mov
cli
sub
wrmsr
push
lret
ret
stos
push
dec
xchg
in
cmp
dec
and
insb
xchg
mov
inc
inc
pushf
mov
add
push
mov
sub
inc
ljmp
sbb
dec
clc
rolb
dec
dec
inc
push
daa
sub
jmp
or
add
stc
push
shlb
push
dec
xor
or
jg
fstps
xor
neg
movsl
jno
dec
cmp
inc
cmp
test
test
leave
dec
rolb
fists
or
pop
jbe
jns
imul
xchg
lret
or
mov
nop
mov
xor
xor
in
jmp
test
fldl
pop
fists
xchg
out
adc
pop
fmull
out
loop
divl
mov
xor
add
add
add
sbb
dec
push
cwtl
adc
out
or
dec
add
cmc
add
add
shlb
fcoms
pop
pop
arpl
mov
rcrb
loope
xchg
xor
ret
rcr
stc
inc
adc
aad
iret
pop
dec
jp
cmp
iret
xchg
cld
dec
cli
lea
pop
lods
mov
xchg
pop
pop
loop
ds
lds
sbb
mov
or
cmp
xchg
mov
jbe
sub
je
jecxz
inc
inc
cmpsl
test
jns
sbb
aad
in
lods
adc
stc
dec
movsl
test
mov
xchg
mov
pop
xor
jns
cs
ss
insl
arpl
mov
sbb
pop
pushf
aad
sbb
sbb
pcmpgtb
xlat
or
rolb
enter
loopne
xchg
cmp
ja
and
mov
in
popf
roll
ss
pop
dec
cmp
or
mov
int3
mov
pop
in
ficoml
xor
fdivr
add
add
idivl
mov
jl
fisttpll
add
add
add
sbb
push
mov
pop
mov
jne
mov
mul
mov
js
adc
popf
push
push
xchg
leave
je
into
ja
mov
sti
out
leave
xor
xor
fwait
sahf
lret
xor
iret
dec
mov
dec
sub
mov
incb
mov
xchg
mov
xor
or
jecxz
in
add
adc
loopne
mov
jb
out
xor
adc
movsl
mov
inc
push
fnsave
dec
jae
test
xor
add
aaa
and
pop
jmp
dec
call
pop
pusha
sub
repnz
loopne
cs
sub
pop
or
push
outsl
cld
xchg
data16
mov
mov
in
add
xchg
sbb
inc
dec
outsl
jmp
xchg
mov
stc
dec
fldcw
test
out
sbb
xor
mov
pop
in
movsl
mov
or
mov
jecxz
add
mov
ja
jg
xchg
lcall
sub
dec
add
cmc
add
add
add
lret
aad
or
aaa
push
pop
or
push
imul
in
xchg
sbb
in
dec
dec
sub
dec
mov
xchg
push
fsts
insb
ret
in
hlt
pop
sti
mov
stos
fidivs
adc
repz
pop
and
lea
repz
cmpl
popa
out
loop
ret
pop
imul
xor
bnd
fsts
sub
jne
pop
outsb
cmp
int3
and
or
fs
sbb
sub
lea
ljmp
mov
dec
mov
arpl
mov
add
addl
sbbb
inc
mov
fwait
lcall
xchg
iret
xor
loope
scas
enter
cwtl
sub
xor
push
or
mov
dec
rol
dec
insl
xorl
ret
add
add
push
dec
lret
jmp
imul
xchg
aad
and
dec
add
cmc
add
add
aad
and
add
mov
es
aaa
in
cwtl
loop
icebp
pop
jecxz
adc
mov
pop
sbb
jp
lods
test
inc
in
push
adc
ret
fsub
movsb
add
sbb
cld
sbb
lahf
out
inc
and
pop
inc
inc
adc
push
loop
bnd
mov
sbb
ret
pushf
addb
clc
push
hlt
inc
nop
aad
movsb
ret
sbb
xor
mov
test
fiadds
xor
lret
pushf
push
jle
mov
sub
or
fisttps
negb
ficomps
loop
rorl
test
lods
cmp
repnz
push
cmp
rcrl
gs
pop
pop
ds
shl
frstor
mov
ss
imul
add
cwtl
loope
std
jge
cwtl
and
stc
inc
das
mov
add
add
inc
daa
lret
in
cli
divl
int
xchg
mov
push
out
ljmp
jns
mov
roll
pop
inc
insb
icebp
inc
fdivs
mov
push
dec
adc
addr16
cmp
jnp
sahf
dec
pop
rol
pop
dec
add
push
icebp
jno
push
lret
xchg
mov
in
loope
mov
xchg
data16
inc
cmp
or
rcrl
sbb
mov
inc
vpaddusw
adcl
inc
test
cwtl
rol
pusha
cmc
or
js
out
xchg
add
adc
cmp
shlb
pop
in
adc
pop
jns
divb
fsubp
mov
jno
cmp
pop
sahf
pop
aas
inc
mov
gs
dec
shrl
lock
pop
sbb
pop
xor
xor
sbb
cmp
cs
and
add
add
jns
clc
mov
shrb
mov
add
cmc
add
add
mov
stc
mov
mov
repz
mov
hlt
lods
xorb
cli
mov
bnd
mov
lock
arpl
xlat
inc
test
mov
cli
push
popl
mov
adc
imul
outsb
pop
mov
test
lret
fstp
mov
pop
jl
jp
xchg
rcrl
dec
nop
xlat
out
jne
adc
addr16
add
lea
push
data16
pop
xor
sbbl
jp
sub
repz
push
pop
daa
leave
xchg
orl
and
cli
nop
das
lret
aas
or
popfw
inc
loope
cmpsl
out
lods
sub
mov
sbb
pop
jbe
subb
aam
aas
mov
les
test
ficoms
mov
push
pop
pop
vandnps
lods
fnsave
mov
xor
cmpsb
sub
add
add
js
ret
jg
mov
pop
jns
cmpsb
push
add
cmc
add
add
jns
pop
ret
mov
sub
push
daa
pusha
mov
subb
push
lret
int
mov
xchg
jmp
mov
fdivrs
aad
outsl
incb
mov
cmp
dec
rcr
dec
repnz
mov
lcall
pop
mov
sub
fsubrs
push
insb
push
rol
xchg
push
shl
ficompl
cmc
jne
jne
stos
mov
rclb
push
rcrl
push
or
clc
push
pop
pusha
hlt
jp
lock
lret
push
adc
pop
inc
scas
xchg
int
lret
das
xor
ret
mov
aas
icebp
sub
inc
ret
faddl
xchg
cmp
loopne
xor
pop
dec
dec
lahf
lahf
adcl
fisttps
add
xchg
test
sarl
push
push
jl
pushf
test
and
add
add
das
mov
cwtl
out
daa
imul
add
cmc
add
add
andb
out
out
sbb
adc
or
addr16
xchg
push
pop
imul
mov
xchg
mov
ret
inc
jns
jl
sbb
inc
pop
test
scas
cld
lret
push
cwtl
scas
je
push
or
or
repz
adc
imul
cmp
imul
lahf
movsb
out
faddl
inc
jb
xor
pop
jne
xor
add
and
lods
or
cmp
cltd
push
push
loop
incb
fcoms
xor
xchg
aad
adc
push
jne
hlt
cmp
repnz
ret
cld
sahf
test
adc
xor
mov
mov
fists
mov
pop
nop
sbb
daa
into
and
cs
mov
mov
fs
mov
push
pushf
les
mov
sti
mov
inc
icebp
hlt
gs
push
sub
popf
icebp
nop
push
add
cmc
add
add
cs
fs
movsl
jne
out
xchg
pop
fwait
aas
outsl
lock
in
mov
jmp
pop
add
pop
xchg
loopne
mov
mov
adc
addr16
mov
faddl
mov
pop
pop
idivl
in
mov
repz
jne
lret
push
enter
icebp
add
cmpsb
sub
insb
fadd
pop
push
in
mov
jmp
cmpsl
sub
and
adc
xchg
xchg
dec
popf
icebp
filds
sub
stos
insl
pop
negl
sahf
or
pop
lcall
jp
nop
and
xchg
mov
sub
movsl
ds
mov
orl
or
or
inc
adc
xor
inc
rcrb
sub
mov
inc
test
negl
add
cmc
sub
notl
movsb
add
add
aas
gs
repnz
and
test
push
add
cmc
add
add
cli
andl
icebp
sahf
mov
mov
pop
mov
in
in
cld
bound
es
add
mov
cmc
dec
nop
push
lea
pop
mov
aad
sbb
jg
repz
push
xor
dec
or
mov
push
pop
xor
push
loope
pop
iret
mov
mov
mov
mov
inc
out
push
and
stos
popf
jl
pop
add
in
mov
jb
cmpsl
in
mov
mov
bound
movsb
sbb
xor
jns
sbb
jmp
mov
and
push
or
adc
pusha
ret
test
pop
hlt
add
fwait
shl
inc
repz
mov
fdiv
xor
fwait
jne
lock
push
xchg
push
mov
sti
cmp
add
add
out
fisttpll
mov
jp
add
cmc
add
add
cmp
andl
js
add
add
and
xor
jp
filds
xchg
mov
push
in
daa
adc
xor
sub
mov
mov
fnstenv
movb
dec
inc
push
cmp
insb
ret
sbb
pop
pushf
int3
lea
sahf
push
in
adc
sbb
adc
sub
clc
pop
aas
cmc
mov
adc
adc
pop
iret
dec
mov
fwait
inc
push
insb
fwait
jns
pop
dec
test
xchg
lock
lds
test
xlat
xchg
add
insb
sahf
mov
lods
or
mov
sti
mov
pop
int
dec
sbb
stc
fsubp
and
adc
int3
sbb
stos
cmp
jg
inc
in
push
daa
lds
dec
inc
icebp
add
sub
jns
mov
aad
dec
mov
push
push
push
shlb
fildll
mov
arpl
outsl
push
add
cmc
add
add
and
sub
jp
aam
lret
jl
push
fldcw
sub
and
jmp
fwait
mov
jge
push
add
dec
sahf
pop
dec
xchg
sub
pop
push
mov
popa
adc
adc
das
cmp
dec
adc
xchg
dec
sub
or
sbbl
mov
fstpl
or
sub
or
lret
xchg
push
or
arpl
xor
shl
xor
cmpsl
lods
negb
rcll
cmp
fsubrs
fisubrs
xor
cli
cwtl
fwait
cmp
jo
roll
xchg
adc
je
mov
dec
or
add
sbb
stc
xor
push
rolb
scas
test
stos
dec
xor
pusha
push
sub
or
jno
data16
stos
scas
ljmp
xor
into
dec
fnstenv
push
sbb
jmpw
fnstcw
mov
in
fs
add
cmc
add
add
jp
negl
shr
stc
repnz
ret
add
subl
lods
mov
cmpsb
jnp
pop
jecxz
test
in
cmc
mov
fld1
xchg
adc
mov
push
lahf
pop
sbb
jle
add
icebp
es
xchg
push
add
cmp
mov
or
dec
xor
fstpl
arpl
ds
ret
dec
push
lock
inc
leave
push
ret
push
and
adc
push
adc
outsb
sti
sbb
push
sar
push
out
outsl
xchg
cmp
loop
fwait
mov
push
int
hlt
push
repz
fdiv
add
jge
dec
loop
pop
rclb
xor
in
add
out
test
shlb
and
lds
psrlq
xor
jecxz
daa
rorl
pop
faddl
or
add
cmp
imul
out
mov
arpl
in
popf
pop
pop
pop
add
cmc
add
add
rcrl
xor
std
bound
aam
lods
xchg
std
fucomp
pushf
xorl
mov
adc
aaa
xchg
add
mov
lods
sub
mov
push
xor
inc
lods
mov
ret
mov
nop
out
fcoml
fwait
addr16
cmp
fs
mov
inc
pop
mov
push
andl
jno
sbb
icebp
add
cwtl
xchg
or
test
fdiv
dec
adcb
pushf
icebp
cmpb
inc
je
int
adc
jno
lret
add
jmp
pop
faddl
pop
inc
pushf
movsb
sub
jp
out
int
mov
repz
test
arpl
nop
pop
dec
mov
dec
adc
mov
adc
ja
or
push
jmp
js
add
dec
stc
mov
clc
add
negb
add
cmc
add
add
dec
loop
add
mov
pop
movsl
xchg
nop
pop
sub
out
and
lret
ljmp
push
jge
aad
sbb
ljmp
and
jb
dec
dec
sbb
inc
ja
ljmp
dec
int
rcll
adc
xor
popf
outsl
ds
mov
int3
fwait
shlb
mov
je
pop
movsl
sbb
dec
lcall
sti
dec
push
cmp
xchg
test
mov
mov
test
mov
mov
pusha
cltd
cmp
adc
repz
jp
adc
sub
inc
bsf
push
gs
je
xchg
call
fsubrs
cs
adc
and
nop
jp
fmul
jmp
or
jmp
inc
xchg
imul
add
xchg
cmp
jle
jg
cld
jo
hlt
leave
std
sbb
inc
pop
add
cmc
add
add
mov
and
mov
push
push
push
jmp
aaa
fwait
mov
mov
rcll
loope
fsubs
into
arpl
mov
aad
lcall
sti
adc
dec
jae
jne
pop
or
dec
addr16
and
incb
pop
inc
xchg
fildll
out
mov
sbb
xchg
cmc
lret
jl
sbb
sbb
dec
add
arpl
inc
insl
sbb
packssdw
bound
mov
cwtl
xor
les
pop
lods
push
and
sub
repnz
cltd
stos
fsubr
and
lods
jp
mov
in
leave
lock
jecxz
push
cs
push
roll
repz
mov
jg
sub
xor
negl
cltd
mov
shll
xlat
or
movsl
popf
pop
inc
popl
add
mov
xchg
mov
mov
sbb
add
cmc
add
add
data16
xor
sbb
ficoml
lahf
ljmp
pop
and
in
out
mov
dec
add
ja
sub
nop
jno
sub
push
jno
sti
dec
xor
ret
pop
push
movsl
in
mov
push
insl
fbstp
xor
outsb
add
call
lods
xlat
test
mov
cmpsb
in
or
int
cmp
push
loopne
dec
adc
ret
add
movsb
add
fildl
gs
xor
out
xchg
sub
push
ret
fstps
sbb
xchg
mov
in
push
jmp
adc
inc
out
ret
sbb
pop
inc
xchg
insb
cmp
jl
adcl
push
notl
pop
inc
pop
mov
ret
pop
je
push
inc
test
je
pushf
pop
cmp
sahf
hlt
lods
ds
enter
add
add
inc
mov
push
push
jmp
sahf
fisubs
dec
imul
pop
add
cmc
add
add
fistpl
push
push
mov
adc
adc
imul
and
andb
fs
insl
dec
stc
ljmp
es
and
bound
pop
add
shlb
aad
ret
xor
test
inc
xlat
mov
mov
and
mov
jle
cmpsl
or
adc
in
mov
pop
popf
pop
push
push
pushf
test
scas
pop
repz
or
jmp
sbb
cmp
mov
stos
icebp
or
mov
or
rcrl
push
mov
cmp
push
subb
xchg
or
cs
jge
fcomps
nop
cmpl
cmc
jge
leave
gs
ss
jo
dec
out
xchg
flds
sbb
or
mov
outsl
mov
add
sub
cmp
dec
mov
mov
add
add
add
fs
and
aam
das
cld
sbb
jmp
out
xchg
push
sbb
push
fisubrs
and
aad
mov
popa
nop
aaa
jmp
pop
imul
mov
cmp
sub
fstps
add
mov
xchg
fcoml
lods
inc
or
jecxz
call
mov
sarl
push
fstl
xlat
dec
xor
cmp
notb
xchg
cmpsb
mov
sti
xor
inc
xor
sar
mov
sbb
add
js
and
pop
dec
in
movsb
lds
out
jbe
pusha
dec
mov
arpl
cmp
lods
mov
sahf
sahf
inc
jo
cwtl
mov
push
rorb
and
popf
inc
fidivs
addr16
add
jb
adc
jge
and
pusha
pop
data16
mov
pop
add
pop
lea
add
or
push
shll
out
xchg
inc
push
cwtl
pop
pop
add
cmc
add
add
or
lcall
jmp
jno
push
xchg
sbb
aas
dec
and
pop
movsl
and
and
lcall
in
in
pop
pusha
roll
dec
inc
rol
loopne
sti
xor
cs
cmc
push
sbb
mov
push
and
rorb
sub
sti
mov
pop
mov
sbb
shl
lods
dec
loopne
notb
push
push
mov
jl
data16
test
cmp
pop
lods
cld
sbb
test
mov
aas
xchg
jae
or
xchg
dec
dec
push
dec
ljmp
inc
pop
jno
cld
sub
outsl
cld
inc
lahf
inc
out
cmc
fldcw
jno
and
sub
loope
xchg
or
add
inc
push
xchg
inc
ja
ljmp
ljmp
cmp
lods
sub
cmc
add
add
out
lcall
inc
and
in
pop
or
add
cmc
add
add
repz
insb
xor
fistps
shll
push
mov
into
test
in
arpl
mov
iret
add
xchg
sub
cmp
push
jg
push
cmp
addb
shll
jle
xorb
xlat
roll
cmp
mov
pushf
push
xchg
and
dec
bound
jno
rolb
mov
popf
aaa
fcomps
test
or
loope
xor
push
xlat
push
outsb
mov
pop
jne
popf
jecxz
cmpsb
mov
mov
in
ret
imul
ret
xor
sbb
pop
xor
or
adc
nop
jb
bound
or
mov
daa
mov
es
pop
stos
scas
int3
xor
cli
cmpsl
out
mov
lock
pop
xchg
ja
push
arpl
lds
xor
icebp
rcr
xchg
push
jecxz
mov
sbb
push
outsb
add
add
jbe
idiv
imul
bound
add
popa
add
cmc
add
add
push
dec
pop
rcll
inc
inc
aas
jp
js
add
adc
or
jmp
dec
pop
mov
in
or
repz
shlb
dec
inc
cmc
pop
mov
push
xor
mov
aam
incl
cwtl
mov
je
jg
jecxz
mov
paddd
add
fwait
jmp
je
or
fldcw
cmp
cltd
sbb
aad
fisubrl
add
mov
jmp
cmp
push
sbb
test
js
int3
out
fdivs
aam
icebp
int3
mov
mov
shlb
lock
and
sbb
jno
mov
popf
jno
sbb
sub
mov
dec
icebp
cs
xor
push
lcall
push
add
shrb
add
xchg
inc
mov
idiv
pop
mov
je
ljmp
add
jae
fwait
cmp
dec
data16
add
add
add
add
insb
js
jmp
jnp
leave
outsl
add
fs
les
fiadds
shrl
mov
cmp
fidivs
sub
mov
sbb
xchg
lcall
inc
mov
les
rcrl
mov
lods
adc
push
push
cltd
cli
xchg
push
adc
jne
cmp
adc
ss
sub
jbe
std
mov
add
loope
and
js
ljmp
mov
xor
cmp
pop
xor
ljmp
inc
xorl
lods
std
outsb
xchg
push
inc
xchg
hlt
outsl
je
in
fidivrl
lods
push
mov
jg
jns
xchg
out
cmpsl
leave
imul
xchg
test
xchg
shlb
adc
xor
or
inc
dec
stc
imul
xacquire
enter
cmp
adc
add
add
clc
mov
or
lds
stos
jmp
add
cmc
add
add
repz
xor
adc
inc
mov
addb
and
int
fs
ljmp
movl
xor
es
mov
fistps
aas
in
pop
dec
fmuls
or
mov
xchg
sub
cld
test
xchg
xchg
sbb
jmp
pushf
add
mov
ret
rorb
repz
mov
jg
and
xchg
sti
push
orb
mov
xor
or
dec
and
pop
xor
sub
push
pop
dec
test
pop
call
roll
push
jg
jb
mov
xchg
stos
adc
and
out
xor
jns
scas
jno
mov
add
add
pop
lock
in
in
pushf
cmpsl
mov
xchg
iret
repnz
mov
repnz
in
xor
std
cmp
mov
push
jecxz
out
dec
add
add
shr
mov
in
insb
aaa
loopne
add
cmc
add
add
or
std
jno
jnp
arpl
jg
adc
and
jno
or
dec
mov
xchg
xorl
out
pushf
mov
jp
sbb
int3
cmpsb
mov
inc
pop
add
push
xor
int
sub
les
cmp
stos
fsubs
jns
fcomi
loope
mov
pusha
mov
jnp
int3
xchg
mov
and
popa
pop
inc
lods
xchg
hlt
cmp
mov
mov
add
mov
in
cmp
jge
inc
add
xchg
daa
dec
and
sar
push
push
out
mov
inc
push
cli
dec
cmp
dec
decl
stc
or
adc
push
cmp
cli
ljmpw
and
jo
sbb
fwait
mov
sub
xchg
mov
movsl
push
jns
cmpsl
cmp
out
lret
js
incb
push
and
test
jb
jge
sub
adc
add
test
or
fdivs
outsb
adc
add
add
add
mov
movsl
stos
xorl
insb
incb
mov
and
and
push
mov
xor
pop
push
inc
pop
pushf
jnp
lea
adc
dec
jnp
inc
push
into
mov
dec
mov
cltd
push
xchg
push
aad
fs
and
fwait
dec
sti
add
out
mov
sbb
pushf
in
insl
pop
lds
loopne
test
in
ja
ficoms
lret
cmp
lods
jo
mov
push
lcall
hlt
jge
pop
cwtl
cmc
dec
xlat
test
jnp
mov
hlt
push
out
adc
pop
int
sbb
ficoms
sbb
repz
dec
jp
pop
xor
xchg
punpcklwd
rclb
out
in
inc
rorl
mov
and
mov
mov
add
mov
and
das
lret
cmp
add
cmc
add
add
sbb
fistpll
fwait
lds
push
sti
sti
jmp
jmp
outsl
adc
xchg
cwtl
stc
pop
inc
repz
push
xor
add
lea
mov
pop
inc
add
decb
pop
mov
add
cmp
dec
jo
fisubl
pop
and
subl
or
rcrb
loopne
xchg
push
decl
fidivs
push
mov
pop
pop
cmp
scas
scas
lock
pusha
shll
add
cs
mov
in
push
inc
sub
pop
xor
sbb
mov
ljmp
fldcw
scas
inc
inc
shrl
cltd
in
lods
call
iret
xchg
repz
fsubs
inc
mov
sahf
inc
dec
imul
xchg
xorb
push
or
mov
or
cmp
movsl
sub
fidivs
push
das
sub
scas
add
add
movsb
jae
jnp
mov
lods
push
adc
adc
mov
add
add
clc
jno
xor
popa
gs
mov
xor
mov
inc
call
shrb
into
lea
dec
fucomi
push
push
push
fs
dec
fcoml
sub
mov
out
ljmp
jbe
dec
add
dec
sub
out
out
xchg
dec
addr16
lahf
cli
ret
and
pop
xchg
emms
push
mov
fisubl
neg
js
fldenv
lcall
dec
lds
pop
shl
sub
and
inc
pop
stc
pushf
xchg
scas
inc
jl
or
xor
stos
lret
fisubrl
psubb
jb
mov
push
mov
testb
popa
and
xor
repnz
dec
test
enter
or
es
int3
cmp
orb
insb
lret
jae
clc
lahf
movsl
iret
pop
fwait
ret
adc
xchg
add
fbstp
scas
adc
lahf
mov
and
mov
add
cmc
add
add
cltd
cmp
out
out
dec
dec
mov
sbb
cli
adc
or
nop
mov
in
pop
push
inc
imul
outsb
js
inc
sbb
stos
in
mov
dec
daa
imul
andb
scas
add
stos
aas
icebp
lea
push
mov
in
push
loope
sbb
mov
clc
xchg
mov
mov
sub
mov
pop
js
popa
sbb
jb
in
mov
sbb
shll
rcll
clc
pop
push
xor
mov
jg
mov
pushf
lret
push
filds
fistl
pop
fimuls
dec
inc
pop
popf
movsl
xorb
out
and
int
es
cmpsl
xor
dec
mov
jle
test
test
insb
leave
pushf
dec
inc
scas
das
pop
add
arpl
mov
add
mov
mov
sub
mov
leave
test
add
add
and
pushf
xchg
les
pop
mov
leave
or
pop
mov
imul
add
or
mov
push
lods
mov
cmpsb
int
sub
mov
push
adc
aam
lds
adc
add
out
add
ret
call
xchg
imul
sbb
aam
xchg
jb
lods
lcall
sbb
push
mov
push
hlt
xor
lods
std
sbb
and
adc
and
xchg
rcl
sub
fstpt
testl
pop
xchg
aaa
sub
jnp
lret
cwtl
icebp
sub
cmp
fcmovu
mov
aas
push
loop
lahf
push
lcall
push
sbb
into
dec
subb
sub
arpl
cltd
cmp
adc
popa
outsl
and
add
outsl
xchg
dec
add
add
push
into
push
cmp
sub
xor
imul
add
ficompl
lahf
xorl
leave
mov
or
scas
cmp
mov
pop
lret
lods
in
aas
sub
stos
sti
jecxz
push
xchg
adc
jo
ds
xchg
aad
mov
into
mov
inc
loopne
or
mov
sahf
jp
iret
push
cmp
lods
divl
inc
inc
fs
adc
les
rolb
cmc
in
mov
push
fisttpll
mov
ja
pop
bound
push
push
stc
sub
cld
lods
stos
mov
mov
stos
lahf
ret
leave
mov
jno
jne
push
cmpsb
inc
dec
mov
add
jge
aaa
jmp
rcr
push
and
aad
enter
pop
mov
mov
mov
jae
push
rcrb
aaa
push
lcall
mov
data16
stc
pop
in
imul
add
and
mov
fisttps
jo
test
leave
xchg
push
add
add
add
pop
ljmp
xor
lds
rcrl
xor
lret
xchg
xchg
inc
ja
out
repz
lcall
in
aam
int
cmc
or
jle
imul
out
dec
lret
cmc
dec
aas
pop
out
cmp
sub
hlt
mov
jbe
mov
lods
je
push
test
mov
ret
aaa
adc
add
adc
xor
jnp
lahf
sub
addr16
pop
pusha
outsl
dec
stos
loope
push
sahf
pop
aad
cmpsl
mov
xchg
sub
mov
js
xor
iret
pop
mov
push
pusha
mov
jp
cld
movsl
loope
data16
inc
jle
cmp
mov
repz
dec
int3
pop
out
mov
adc
jno
lock
test
inc
outsl
int3
xor
xchg
mov
mov
aaa
and
add
lahf
pop
fcmovb
fcmovnb
lahf
pop
bnd
mov
mov
add
add
add
add
jg
xchg
push
mov
jae
push
or
jmp
into
mov
ret
xchg
fildll
stos
mov
or
repnz
sub
notb
pop
stc
mov
xor
cwtl
mov
cmp
mov
push
fsubrp
decl
xchg
cwtl
jge
enter
div
fcmove
cld
jmp
xchg
dec
in
nop
jno
out
iret
and
xchg
test
mov
and
mov
mov
repz
shlb
jnp
test
sbb
out
lds
adc
jnp
aaa
mov
push
jb
cwtl
mov
lret
inc
mov
xor
repnz
pop
xchg
lcall
push
and
pusha
jo
or
popf
outsb
jp
insb
and
or
std
and
pop
scas
rcl
popa
movsl
xchg
imul
add
add
idiv
jg
data16
aad
push
add
cmc
add
add
int3
mov
inc
jne
pop
cld
incb
outsb
add
jmp
pop
and
push
fiaddl
cmpsb
adc
sbb
rcl
jle
into
jl
leave
jnp
inc
jle
mov
dec
and
push
add
fidivrs
scas
jmp
xor
inc
sub
movsb
fcoms
pop
add
xchg
inc
jbe
xchg
repz
in
mov
xor
cmp
int3
testl
jns
outsl
cmp
xchg
leave
daa
mov
in
pop
stc
es
push
pop
into
xchg
les
lret
lods
adc
xor
jbe
sbb
mov
lcall
sbb
inc
sub
dec
xor
xchg
shr
imul
inc
mov
sbb
dec
iret
rclb
jno
adc
xor
imul
sub
out
cmpsb
add
jae
and
xorb
and
add
pop
mov
movsb
inc
gs
jns
add
cmc
add
add
jns
mov
gs
fucom
pop
push
fcomi
call
or
test
push
cmpsb
adc
test
addr16
int
stos
mov
mov
lods
pop
aas
ds
repnz
adc
sbb
fs
mov
push
cld
inc
shll
std
adc
or
es
sbb
mov
cmp
jecxz
push
aaa
cmp
mov
mov
push
cmp
arpl
xor
adc
mov
fstpt
daa
inc
jae
loopne
js
jnp
test
addr16
add
fwait
sbb
or
lret
mov
mov
add
in
jo
xchg
icebp
cmp
sbb
xorb
das
cwtl
or
jbe
dec
clc
mov
sarl
mov
data16
out
xchg
in
add
xchg
fisubl
jle
xor
add
add
repnz
movsb
jle
mov
outsb
add
cmc
add
add
movhps
sub
and
fsubs
push
loop
sub
insl
adc
mov
div
enter
into
push
in
push
fwait
sub
cmp
cmp
shll
stc
in
loopne
xchg
iret
int3
mov
xor
loop
mov
dec
icebp
cmp
push
pusha
jmp
std
imul
mov
popf
or
mov
or
inc
lret
cmp
jge
js,pn
enter
addr16
xchg
xchg
orb
mov
sub
sub
push
cmpb
rcrb
jecxz
clc
mov
adc
insl
sbb
ds
sub
dec
sarb
jmp
xor
jp
out
sbb
mov
pusha
lret
ficoms
xchg
jae
xchg
jl
mov
inc
je
mov
pop
test
out
xchg
gs
cltd
push
inc
test
jnp
outsb
add
add
jmp
sub
dec
cmp
add
cmc
add
add
mov
and
and
sarl
scas
jne
mov
cmp
mov
aad
ret
pop
enter
add
outsl
pop
adc
pop
dec
cmp
je
pop
jmp
cli
lahf
loope
push
mov
icebp
mov
xchg
adc
loopne
int3
ds
in
mov
out
mov
mov
fldt
fs
mov
jnp
push
loope
outsb
outsl
loop
test
mov
mov
aas
scas
sarl
jle
fprem
pop
jg
int
lock
mov
add
jbe
cmp
add
orl
std
jnp
xor
adc
xchg
mov
sub
test
sub
fildll
insl
push
rcrl
inc
dec
add
adc
dec
shlb
xor
call
mov
push
fcomip
sub
or
mov
adc
adc
add
shll
fnstenv
loopne
xchg
or
add
cmc
add
add
sub
jb
xlat
add
shll
lods
dec
aad
cmp
mull
out
pusha
sub
jecxz
loop
adc
lret
ss
in
insl
push
ja
xchg
insl
mov
sbb
arpl
jg
ja
addb
into
cmpsb
fists
mov
mov
cmpsb
call
lahf
sahf
and
lods
xchg
dec
cmpsl
push
lods
push
loope
mov
adc
mov
in
movsb
add
repnz
cltd
js
loope
pop
xchg
cmp
es
sub
enter
push
mov
ja
dec
cmp
jmp
mov
xchg
out
sbb
ja
insl
mov
xchg
daa
dec
sbb
ljmp
cli
lcall
add
mov
or
xor
lds
xor
mov
orb
add
cld
je
jbe
jmp
lea
xchg
adc
push
arpl
add
cmc
add
add
test
mov
jbe
stos
xchg
inc
jg
xchg
imul
dec
sbb
mov
icebp
mov
cmp
insb
mov
out
mov
xor
in
arpl
mov
ret
xchg
filds
ds
and
out
and
out
pusha
push
jle
mov
jmp
pop
fisttps
inc
icebp
cmpb
daa
pop
sub
lods
mov
cmp
add
jno
std
adc
jg
jl
mov
das
in
or
mull
xor
jge
push
data16
xchg
movsb
sub
lods
out
out
into
daa
popf
jge
xchg
push
xchg
mov
sbb
orb
popa
popa
jmp
and
inc
scas
in
add
sti
loopne
movsb
mov
mov
mov
mov
repnz
out
add
add
cltd
jmp
fcmovnbe
cld
xor
lea
pop
test
jb
add
add
add
jnp
addb
push
dec
in
sbb
adc
dec
cmpsb
mov
xchg
stos
and
mov
rol
sbb
cmc
repnz
adc
pop
sub
or
imul
cmpsb
push
pop
and
mov
cmp
popa
push
jp
in
call
js
xor
stc
inc
mov
xor
cmp
iret
adc
mov
sbb
jge
xorb
pusha
sub
out
jae
and
push
and
das
cmp
jg
lret
movsl
lret
mov
dec
lods
out
jns
adc
push
sbb
aam
push
or
xchg
scas
out
sub
cmp
aas
movsb
adc
push
mov
mov
sub
or
icebp
cpuid
cmp
mov
mov
adc
clc
dec
and
mov
jp
and
adc
add
add
push
jg
pop
jne
lock
mov
jae
add
add
add
jmp
dec
inc
xlat
icebp
sub
or
pop
push
fisttpll
ja
fsubs
ds
ljmp
jg
mov
jb
popf
pop
mov
cmp
aas
fnstsw
push
mov
mov
int
mov
aas
aad
nop
adc
in
fstp
jbe
in
in
jo
ja
rcrl
mov
sub
mov
loope
xor
or
inc
sub
or
bound
or
pop
mov
das
das
push
mov
or
xchg
push
in
fstpt
outsl
mov
popf
js
xor
iret
xchg
imul
hlt
xchg
dec
lock
sbb
cwtl
push
test
mov
push
push
arpl
sbb
inc
cmp
xor
sti
dec
pop
and
repnz
mov
add
add
mov
fucomip
addr16
movsb
pop
and
add
add
sarl
jns
cmpb
movsb
imul
lds
nop
jl
mov
in
hlt
js
jg
mov
outsl
les
mov
das
mov
pop
pop
sbb
call
and
in
mov
imul
cld
pusha
pusha
ret
mov
movsb
xlat
xchg
lcall
jb
pop
jg
inc
nop
in
dec
mov
or
cmp
and
cmp
gs
test
jecxz
pop
leave
out
cmp
pushf
cltd
stos
fbstp
dec
dec
sbb
jge
dec
mov
inc
shrl
imul
daa
xor
outsl
xchg
outsl
jno
xchg
cmp
popa
mov
mov
adc
mov
push
or
pop
adc
mov
mov
and
push
les
add
dec
out
iret
jmp
cmpsb
addr16
sub
add
cmc
add
add
jp
jno
sub
cmpsb
movsb
fisubs
test
cmpsl
stc
nop
cmpsb
jge
test
jp
testl
jnp
xchg
inc
outsb
out
pop
pop
in
popa
mov
xlat
ret
sbb
mov
fnsave
cmp
sbb
push
jbe
fldt
pop
or
xchg
add
mov
xor
ret
and
fnstsw
xchg
add
in
mov
fs
mov
sbb
mov
sbb
cs
push
in
pop
pop
loopne
or
test
mov
inc
xchg
mov
sti
mov
ds
imul
push
filds
jmp
push
mov
sub
sbb
jne
lods
push
aam
adc
shrl
lret
in
and
sub
pusha
out
pop
pop
ja
add
cmpsb
push
jnp
std
cmpsb
pop
lods
jne
xchg
loopne
push
sbb
jbe
add
add
add
mov
leave
dec
push
and
out
rcrb
and
int3
sbb
jno
dec
and
mov
fnstenv
stos
dec
int3
loope
cmc
add
mov
dec
loope
or
ds
mov
and
inc
or
nop
push
xor
adc
insb
push
xchg
dec
mov
mov
rcll
mov
push
jbe
outsb
xlat
xchg
mov
xchg
leave
xlat
into
xchg
lahf
push
dec
mov
xlat
addr16
xlat
sbb
je
or
cmp
ja
pop
std
jae
adc
mov
cmpsl
mulb
jg
push
push
pop
in
enter
fidivrl
mov
inc
mov
aam
stc
inc
ffreep
and
pop
out
sti
inc
mov
out
loopne
ds
mov
iret
mov
sahf
mov
pop
add
add
neg
std
stc
idivl
das
add
add
cmc
add
add
lea
arpl
sub
fisubrl
icebp
sahf
repz
or
cltd
call
aam
xor
lret
pop
frstor
test
out
pmuludq
leave
dec
jmp
jnp
sub
and
xlat
push
int
testb
test
adc
or
pushf
cli
outsb
sbb
lds
adc
mov
imul
and
dec
mov
dec
inc
cmc
pop
cmp
push
add
dec
mov
rclb
scas
pop
popa
addl
xor
insb
scas
mov
or
test
out
and
cwtl
mov
xchg
adc
movsb
ret
icebp
push
push
sbb
adc
cmp
std
mov
rcl
add
xlat
xlat
xlat
mov
outsb
lods
mov
inc
push
push
nop
jp
dec
lcall
inc
or
add
push
subb
in
push
mov
push
addl
ja
add
add
add
xchg
fs
ds
inc
push
test
dec
xchg
mov
sahf
mov
repz
hlt
pop
jmp
std
pusha
cmp
lea
adc
sbb
xchg
mov
jecxz
mov
mov
in
imul
loopne
cmp
ucomiss
mov
pusha
mov
imul
add
pop
push
pop
orl
sub
and
loop
xor
mov
fs
insb
loope
jmp
mov
movsb
notb
mov
fwait
ret
insb
int3
mov
std
fstl
mov
pusha
gs
sbb
xchg
enter
loope
pushf
repnz
push
test
jne
cli
imul
stos
fmuls
mov
pop
bound
sbb
mov
mov
movsl
popa
ds
jns
out
jp
lods
or
cmp
add
lcall
out
dec
jg
aad
jne
icebp
out
js
add
add
add
inc
mov
dec
push
outsb
push
in
insl
sbb
xor
loop
icebp
xchg
inc
or
add
cwtl
ss
add
or
xor
push
int
xor
jmp
inc
cmp
mov
in
nop
mov
xchg
xlat
xor
jae
insb
ficompl
out
xor
sarb
add
adc
sbb
cld
and
fcmovu
ljmp
and
or
pop
inc
adc
pop
xchg
loopne
dec
mov
or
add
xchg
lock
push
jg
es
test
and
push
inc
int
sub
fistpll
orl
mov
aas
cmc
add
adc
jno
mov
insb
mov
pop
lods
mov
outsb
pop
rcr
add
add
sub
ja
mov
paddq
jns
add
add
add
mov
fidivrl
adc
js
repnz
negb
mull
aad
xchg
mov
or
xchg
cmp
test
fsubrl
movsl
jle
addr16
xlat
fmuls
arpl
or
cwtl
outsl
jns
ret
rorl
dec
cmp
push
nop
jmp
nop
adc
jnp
adc
int
in
leave
sub
stos
ror
add
fcomps
ret
sbb
xor
ret
or
or
fiaddl
xorl
daa
or
dec
jne
jmp
hlt
push
fadds
xor
mov
int3
jno
mov
js
add
pop
jp
lret
mov
xchg
gs
adc
push
aaa
inc
add
inc
push
ljmp
loopne
sarb
jge
stc
xchg
cmp
xchg
inc
xchg
or
stos
call
push
addl
add
int
mov
jnp
jge
xchg
das
in
push
dec
fdivrs
add
add
add
jae
and
rorb
insb
jbe
scas
shrb
insb
push
add
scas
daa
orl
cmp
lods
jle
xor
loopne
fistpll
xchg
addr16
movsl
mov
jbe
xor
or
mov
outsb
flds
movsl
jecxz
inc
addr16
push
jbe
orb
jge
das
shr
aaa
dec
cmp
js
mov
xor
lea
adc
push
jl
add
mov
fidivs
scas
push
xlat
int
add
lahf
mov
dec
add
sbb
mov
push
arpl
shll
push
add
push
jae
into
prefetcht0
mov
loop
and
jne
xchg
sbb
xchg
inc
adc
stos
and
pop
inc
shrb
aad
cmp
lock
dec
add
add
cli
xchg
jle
mov
mov
or
add
cmc
add
add
xlat
lcall
push
loop
inc
adc
js
adc
mov
sub
push
negl
cltd
jne
sar
repz
clc
repz
es
push
in
inc
out
mov
cmp
std
xchg
add
sbb
stos
loopne
sbb
mov
dec
arpl
xchg
xor
pop
jmp
ljmp
ss
pop
je
fdivs
out
dec
cmp
adc
xor
rcll
insb
adc
pop
cltd
xchg
popa
mov
fisubl
mov
scas
imul
sbb
mov
sub
fwait
ljmp
je
out
mov
and
das
push
xchg
sarl
fsubl
or
xor
mov
test
sarl
js
xlat
jnp
cmpb
sbb
enter
add
add
fwait
jnp
aad
gs
into
add
pop
cmp
ret
add
add
add
shlb
jne
movsl
xchg
inc
cmp
xchg
sbb
xor
test
xchg
cmpsb
jbe
cmovbe
popf
lret
into
jmp
jnp
jb
je
es
push
add
push
loopne
int3
je
and
iret
mov
inc
jmp
and
iret
popa
in
repnz
xor
fcoms
enter
call
out
dec
add
inc
push
lahf
aam
xchg
or
lods
xor
pushf
push
pop
inc
iret
add
cltd
insb
jle
mov
xor
lods
imul
mov
push
cmp
or
pop
adc
addb
sbb
jp
cmpl
dec
sbb
add
in
jmp
dec
ss
testl
sbb
insb
lock
std
add
add
std
mov
enter
jge
jge
add
add
add
rolb
adc
fstl
mov
dec
in
test
pushf
cld
enter
pop
repnz
cmpsb
mov
adc
ds
std
pop
icebp
add
ds
test
inc
cltd
cmp
pop
lret
xchg
stc
int3
cmp
inc
mov
out
lcall
call
cld
out
shl
out
jae
fimull
ficoml
jl
fld1
xchg
mov
mov
cmp
clc
lea
sahf
mov
fs
in
js
and
mov
cli
scas
pushf
add
push
dec
jecxz
and
and
insl
ret
sub
into
call
rclb
das
push
lea
mov
scas
fildl
mov
out
cmp
andb
jns
cmc
js
mov
into
jg
sarb
aam
gs
je
icebp
clc
add
add
fstl
out
push
xor
lods
jle
add
add
add
add
mov
xor
dec
push
sti
xorb
hlt
and
jbe
mov
jns
mov
add
and
int
xchg
push
in
ret
sub
mov
ficomps
aam
mov
and
push
adc
dec
push
dec
test
jmp
pop
mov
cwtl
cmp
push
jecxz
xor
loop
ret
mov
sub
adc
and
mov
aaa
idivl
out
jne
fisttps
mov
wrmsr
pop
mov
push
add
push
loop
mov
add
shl
xchg
popa
adc
dec
lret
jecxz
int
xor
jae
jmp
orl
ret
iret
jge
repnz
add
scas
lret
faddl
push
cli
cld
pop
andb
gs
inc
ffreep
addl
das
push
xchg
stos
sarb
add
inc
in
mov
mov
out
in
pop
test
jp
hlt
mov
add
add
mov
cmpb
dec
jmp
out
mov
stos
addr16
outsb
pop
inc
push
push
cmpsb
mov
loopne
mov
jae
out
into
bound
divl
and
dec
add
xchg
push
out
test
sub
sub
mov
daa
mov
filds
bound
arpl
leave
lret
shlb
xchg
out
cmp
dec
je
mov
in
jae
push
xorl
cmp
push
mov
out
pop
sub
push
and
test
jecxz
insl
mov
pop
adc
popa
fs
xchg
pop
pop
cmp
inc
pop
push
or
fsubp
push
add
mov
push
cmp
mov
or
mov
scas
pop
adc
std
cltd
fwait
sahf
cli
lods
ja
test
das
fidivrs
add
add
divl
bound
in
stc
xchg
addb
cmc
add
add
push
int3
sbb
ss
movsl
sub
adc
shll
inc
sarl
mov
sahf
in
mov
sub
mov
lods
je
sbb
xor
cmp
leave
pop
pop
jo
punpckldq
aas
mov
scas
in
sbb
add
jns
xchg
ss
negb
aaa
and
test
cltd
lcall
aas
ss
sbb
jg
cld
xchg
shlb
incl
pop
xchg
sub
into
aas
sub
jbe
dec
jb
dec
or
imul
repz
repz
jb
xor
mov
fdivrp
lods
repz
scas
xorl
mov
adc
push
cwtl
mov
mov
mov
stos
pop
mov
cwtl
sahf
sub
cmc
loope
int3
xchg
xor
ds
fisubs
sbb
clc
fisubs
mov
push
mov
or
addl
add
das
ret
push
psubq
sahf
mov
das
pop
push
imul
mov
sub
lods
pop
in
push
data16
adc
sbbb
pop
push
ljmp
jae
ficomps
rcll
ljmp
stos
das
push
adc
or
cmpsb
inc
addr16
pop
lds
nop
push
mov
jbe
or
shlb
fwait
int
mov
xchg
xchg
mov
mov
push
cmp
xchg
and
jmp
sub
shl
xchg
jns
and
add
loopne
loopne
push
mov
mov
dec
fcoml
mov
sub
pand
nop
loopne
mov
add
leave
cmp
mov
mov
and
cmp
adc
or
pushf
int
ds
adcb
mov
push
jmp
inc
mov
add
shlb
mov
mov
xchg
addb
add
xor
inc
je
aam
mov
data16
xor
mov
ljmp
sub
pop
nop
popa
jae
lods
sbb
push
clc
mov
push
inc
das
mov
mov
and
jl
sbbb
fsubrp
imul
lcall
mov
xor
dec
mov
ljmp
push
mov
jecxz
pop
jb
aas
mov
clc
mov
adc
mov
pop
call
mov
ds
adc
jnp
in
nop
das
cmp
sbb
stos
adc
xor
xlat
xchg
push
bound
lret
pushf
test
mov
test
xor
jmp
mov
sahf
subl
sbb
push
cmc
sub
lea
pop
jecxz
adc
rolb
jo
clc
aad
and
pop
ficompl
xor
ja
add
add
testl
icebp
jne
add
cmc
add
add
xchg
repnz
ret
cltd
lahf
ljmp
jb
out
pop
jns
gs
pop
sbb
dec
sbb
in
sub
outsl
arpl
and
in
jno
push
pop
sti
push
pop
stos
mov
out
mov
arpl
jg
ljmp
mov
ljmp
xor
decl
xchg
adc
dec
fbstp
pop
add
pop
push
jb
shl
test
mov
lret
cmpsl
jge
and
sub
push
add
out
pop
cmp
out
fstpt
jmp
xchg
adc
push
fimuls
inc
fsincos
mov
rcl
sub
lret
gs
inc
les
xchg
addl
insl
mov
add
lds
lahf
shl
enter
mov
rorl
push
loope
daa
fistpll
xchg
mov
push
xor
lods
add
add
jo
ja
std
stos
lods
and
fstpl
jg
scas
push
add
cmc
add
add
lcall
ss
pop
dec
jae,pt
outsb
jge
xor
stos
sbb
andb
cli
movsb
mov
lret
sbb
fldl
jmp
cmp
sub
jge
sub
fisubrs
dec
mov
lahf
inc
mov
dec
mov
pop
xor
js
outsl
jae
xchg
sbb
or
inc
bound
mov
and
outsl
adc
arpl
cmp
push
ficoml
ss
push
mov
pop
mov
cs
and
data16
mov
inc
jne
sbb
adc
cmc
shll
popa
es
fdivrs
lea
push
repz
sbb
jle
and
adc
aas
mov
nop
inc
roll
ljmp
push
cli
add
cmp
cld
cmp
movnti
decl
xchg
add
cmpsb
arpl
je
jae
int
test
add
add
add
jge
inc
inc
ret
xchg
mov
ret
lds
inc
inc
fsubs
add
xchg
add
in
cltd
adc
pop
add
adc
sub
stos
jns
xor
lods
push
and
ret
fnstsw
cmp
lret
loope
sbbl
cmpsl
mov
sbb
stc
xlat
mov
jno
mov
push
sbb
pop
pop
pusha
xchg
test
push
xor
push
pushf
popf
aaa
push
stos
pop
sub
xor
imul
add
sti
int3
mov
jge
mov
pop
clc
insl
add
fwait
or
pusha
or
test
inc
inc
jge
aaa
lods
loop
out
rcll
sbb
mov
les
addr16
pop
cmp
pop
lock
lds
sbb
sbbb
in
adc
jns
leave
je
xchg
repnz
mov
faddl
add
xor
cli
mov
push
inc
or
cmc
add
add
lret
movb
adc
mov
xchg
fwait
jb
adc
mov
out
mov
add
dec
dec
push
jmp
outsl
inc
xchg
or
cmp
xchg
popa
fistpl
adc
iret
je
arpl
sbb
push
loopne
test
dec
ret
iret
mov
xchg
xchg
xchg
leave
mov
or
and
add
rcr
push
popf
mov
sub
inc
adcl
js
push
or
jns
shll
mov
lahf
inc
dec
imul
movsb
les
into
mov
adc
lret
fnstcw
lret
push
aam
xchg
aad
cwtl
fdiv
ret
icebp
rcrl
sub
mov
cmp
insb
mov
xchg
push
ss
mov
ret
push
lds
pushf
mov
xor
ret
insb
dec
bound
add
test
ljmp
mov
add
cmc
add
add
pop
outsb
dec
add
pusha
mov
adc
insb
sbb
inc
pop
scas
inc
mov
cli
stos
insb
pop
inc
aad
cmpl
add
xor
test
sbb
repnz
lock
mov
inc
mov
mov
or
jl
lods
or
fidivrl
add
call
loope
mov
ret
dec
mov
xchg
xchg
jne
and
pusha
sub
stos
xor
out
fistpll
mov
push
or
and
dec
test
mov
pop
das
je
cmpsb
aad
loope
mov
add
push
bnd
fwait
idivl
inc
jo
inc
cli
pop
cmpsb
sub
repnz
xor
out
cs
adcl
cmp
dec
aas
lahf
xchg
fwait
outsb
jns
sub
subb
fldl
fisubs
adc
add
rorl
xchg
dec
dec
data16
add
xchg
xchg
jns
incl
movsl
pop
mov
add
add
add
inc
addr16
mov
out
and
and
int
mov
xchg
inc
stc
subl
out
mov
mov
jae
and
lods
adc
lahf
add
enter
push
ret
pop
sub
and
test
iret
outsb
lds
fiadds
iret
xchg
sbb
repnz
add
cmp
in
inc
and
cmp
clc
cmp
data16
mov
pop
mov
or
in
sarb
nop
popf
hlt
jmp
xchg
adc
add
stos
and
test
daa
mov
dec
fcompl
lds
in
ffreep
loope
jecxz
inc
aad
pop
xchg
fcoml
mov
dec
in
das
mov
mov
cli
ret
test
xchg
add
add
lcall
push
xor
xor
add
mov
mov
cmp
das
daa
sbb
int3
adc
fsts
pop
in
lret
sub
dec
or
dec
push
sub
pop
pop
aam
mov
or
repnz
cmp
lock
push
and
xchg
cld
clc
stos
dec
push
leave
pop
movsb
lock
es
outsb
fldt
push
adc
sbb
cmp
sti
ja
xchg
add
mov
je
stos
jmp
push
pop
aas
out
sub
rolb
push
mov
jne
inc
insb
or
xor
dec
mov
fwait
sub
push
adc
xchg
ret
jae
pop
mov
nop
mov
add
jo
fiadds
mov
and
in
sub
lods
jns
add
fldt
mov
pushf
je
jnp
fisttpll
adc
pop
push
mov
jns
ja
rolb
call
add
add
mov
idiv
fst
inc
sahf
pop
cmp
add
cmc
add
add
push
xor
cmp
dec
test
sahf
int3
and
mov
sub
test
jle
mov
adc
push
arpl
adc
cmp
rolb
test
stos
mov
add
xchg
mov
leave
movd
cltd
loope
push
push
xchg
sbb
imul
cmpsb
bound
lds
dec
loop
pushf
ret
xchg
lods
pop
out
sbb
xchg
mov
movsb
enter
and
adcb
addl
xchg
mov
or
add
inc
mov
mov
cmp
ja
xchg
push
repz
outsl
sub
lret
jno
adc
mov
mov
pop
sub
jnp
jns
loope
or
out
out
sbb
adc
out
stos
xor
cmp
mov
xchg
jmp
outsl
and
jmp
add
add
call
and
mov
xchg
mov
mov
add
add
add
cmpl
mov
push
xor
daa
xor
adc
sbb
push
jbe
lods
xchg
or
int3
xchg
sbb
sti
pop
shl
lock
mov
adc
cmpsb
sahf
adc
ficoml
dec
sub
loop
sbb
movsb
nop
xchg
mov
sbb
and
movsl
cmpsl
jl
mov
dec
out
inc
ret
cltd
repnz
lcall
testb
inc
das
ficompl
pop
imul
lret
lea
sti
test
faddp
xchg
dec
aam
repz
nop
aam
icebp
mov
pop
push
insl
dec
mov
add
loop
aaa
ljmp
es
and
and
hlt
mov
push
inc
push
fbstp
cmc
xor
aas
dec
mov
inc
cmp
out
out
cmpsl
aas
scas
in
movb
add
add
sti
iret
and
repnz
enter
mov
add
add
add
xchg
mov
std
inc
sarb
fcmove
cwtl
adc
push
fwait
and
lock
adc
mov
fsubs
cmpsl
fsubs
mov
add
ss
pop
movzbl
cmpsl
cmpsl
cmpsb
cmp
cs
test
test
cmp
inc
dec
xor
xchg
clc
adc
lcall
into
sbbb
ret
cmova
sub
sbb
lock
or
das
fiaddl
fildll
fmul
daa
divl
popf
in
jne
xchg
out
enter
cmp
add
out
pop
lea
push
imulb
sbb
inc
mov
incb
xchg
lock
cmp
test
pop
mov
mov
adcb
fcoms
mov
shlb
jge
push
push
add
sub
popf
xlat
lret
push
add
add
outsl
xchg
inc
lahf
sti
hlt
out
cmp
loop
fs
add
add
add
into
in
mov
aam
xchg
pop
and
add
fsubp
jp
jecxz
roll
sub
lret
imul
js
push
jg
pop
call
cmp
inc
cs
mov
iret
dec
mov
and
shlb
pop
pop
xchg
ret
das
jo
dec
push
mov
imul
pop
aad
js
and
inc
sbb
xchg
mov
jle
push
mov
inc
lds
mov
inc
cmpsb
push
out
lds
lahf
xchg
jge
imul
fisubl
ja
out
dec
fistl
cmpsl
adc
rorl
scas
fnstsw
fwait
jmp
push
sub
sbb
inc
test
inc
lods
shrl
stos
jnp
sbb
mov
jno
mov
test
in
xor
or
repz
add
mov
mov
into
filds
xchg
cmc
add
add
or
out
cmp
inc
sti
mov
jnp
les
dec
xor
xchg
mov
adc
inc
ret
inc
xchg
jmp
mov
add
rol
andb
jne
dec
lds
dec
ret
inc
or
icebp
pusha
fs
pop
lods
je
jle
mov
cltd
xchg
pop
out
xchg
add
shlb
push
pop
aam
inc
add
mov
push
sbb
xchg
bound
and
divl
mov
push
inc
out
mov
scas
fldt
dec
pop
scas
add
push
ret
daa
lods
arpl
adc
pop
mov
add
jle
aam
cltd
push
inc
push
jnp
out
iret
stos
movsb
pop
in
or
sub
jb
outsb
mov
out
mov
mov
hlt
jmp
push
mov
add
add
pop
test
ljmp
jp
cmp
add
mov
add
add
add
mov
lods
pushl
fnstenv
imul
cs
and
repz
repnz
aaa
xchg
cmpsl
adc
xchg
mov
ljmp
jb
addr16
mov
sbbl
mov
sub
jns
loopne
sub
stc
mov
loopne
daa
pop
je
xchg
push
cmovae
pop
ret
jo
add
or
adc
cmp
ja
inc
push
ficomps
and
sub
add
cmp
push
int3
inc
shll
in
dec
lds
in
sbb
add
movsb
or
movsl
xchg
ret
movsb
sub
or
mov
into
pop
cwtl
push
nop
das
inc
das
dec
int3
adc
jne
cmp
add
mov
cld
arpl
stos
sub
dec
and
outsb
std
pop
sbb
inc
and
lret
pusha
add
add
arpl
jnp
sbb
xchg
sub
jg
push
and
popl
add
add
add
or
adc
mov
inc
add
xchg
lret
test
lcall
insl
cmc
cmp
es
cmpsb
loopne
and
adc
dec
cmp
push
inc
shrb
and
mov
dec
pop
ss
loopne
xchg
inc
jo
push
jecxz
sub
fstpl
inc
rclb
mov
jno
jle
pushf
ss
and
or
ja
dec
leave
cli
pop
jl
outsb
or
cmp
pop
repnz
mov
stos
sub
fldl
dec
in
out
push
call
pcmpgtb
hlt
dec
mov
push
cli
sbb
outsl
jno
arpl
orl
imul
xor
das
iret
rcl
dec
in
jns
dec
mov
insb
call
out
xchg
xchg
jnp
aaa
cli
push
aad
fsts
pop
push
lret
add
add
aas
or
mov
jno
ja
fistl
add
dec
dec
mov
sub
insb
mov
out
push
adc
push
cli
test
cmpl
dec
adc
movl
cli
adc
je
aad
fildll
sarl
push
clc
push
or
cmp
pop
nop
mov
sbb
push
mov
repnz
adc
pop
jp
leave
jbe
bound
mov
shrl
jle
lret
cmpsl
pop
mov
in
insl
sbb
xor
sar
ret
daa
cli
pop
xchg
out
push
test
inc
dec
dec
adc
outsl
movsb
adc
mov
pop
scas
aam
pusha
hlt
inc
int
xor
stos
js
insb
pop
mov
mov
add
imul
xchg
push
and
cli
rcrl
in
mov
pop
add
xchg
jle
movsb
inc
push
insl
adc
int3
out
add
add
push
outsb
fdivrp
sub
lcall
add
cmc
add
add
push
mov
imull
push
jecxz
mov
movsb
fists
jo
roll
sub
movsb
xor
adc
inc
icebp
lods
call
aas
movb
and
sub
sbb
mov
inc
sahf
mov
inc
xchg
jae
jo
testl
es
je
test
std
push
mov
cld
daa
lahf
negb
mov
iret
or
or
icebp
repnz
sbbl
sbb
xlat
shll
inc
loopne
pop
pop
rcrl
in
ficomps
mov
or
xor
lds
aam
xor
mov
pop
push
addr16
push
ret
lea
fisubrl
adc
mov
pop
cmp
gs
pop
mov
or
sbb
cmp
cwtl
mov
add
cmp
mov
in
leave
mov
jo
xchg
add
cmc
add
add
aas
daa
fsubr
mov
adc
orl
cmp
shl
adc
mov
jo
shl
add
mov
in
lahf
jb
shr
mov
je
xchg
xor
add
pusha
push
pusha
cmp
jae
divl
cmpsb
stc
sbb
pop
pusha
mov
bound
and
scas
mov
cmp
mov
iret
aas
outsl
push
push
lds
fadds
call
inc
mov
sub
js
out
mov
xchg
shl
dec
ret
sbb
xorb
dec
sahf
lahf
xorb
push
iret
hlt
push
aaa
fcoml
cwtl
sub
iret
call
cmp
lcall
xor
inc
jecxz
push
std
xchg
imul
out
pop
mov
xor
fiadds
mov
push
jl
add
dec
push
int
fstp
iret
push
lock
jmp
push
out
dec
mov
add
add
int3
cmp
lea
or
ss
int3
out
push
adcb
pusha
mov
aam
bound
inc
ljmp
and
pop
jnp
mov
sahf
sub
outsl
scas
jmp
mov
cli
and
jns
sub
mov
scas
or
cmp
or
icebp
add
insb
out
in
cmp
lds
inc
adc
push
mov
adc
out
or
sub
mov
loop
fwait
adcl
hlt
pop
dec
hlt
out
imul
repz
mov
cli
lahf
pop
out
add
cltd
fisttpl
arpl
inc
jne
adc
mov
jns
inc
pushf
and
xor
lahf
stc
dec
fwait
daa
enter
pop
and
ds
mov
popa
ljmp
mov
mov
mov
pop
inc
and
adc
jmp
add
add
adc
std
sub
pop
mov
scas
xchg
add
cmc
add
add
jae
inc
push
inc
clc
stos
cmp
pop
jmp
push
cs
into
adc
push
mov
mov
adc
add
fstps
jge
and
movsb
ss
cld
inc
out
adcb
cwtl
push
sbb
or
inc
repnz
inc
cmpsl
mov
sub
adc
outsl
shll
jg
gs
xchg
out
push
cmpsl
daa
mov
pop
pop
loop
fadd
lahf
nop
addr16
or
pop
push
loop
pusha
xor
daa
or
sub
addr16
add
and
into
roll
je
pusha
mov
cmp
es
lret
dec
jnp
in
xchg
mov
cwtl
cmp
jge
testb
les
mov
dec
adc
mov
xor
out
pop
jnp
inc
inc
je
in
lahf
lcall
out
adcl
adc
mov
aad
add
add
mov
push
fists
cmc
add
add
dec
mov
lret
gs
mov
push
pusha
or
adc
mov
jge
mov
adc
pop
lds
or
cmpsw
orb
inc
arpl
daa
jmp
mov
or
dec
sub
int
into
out
dec
sahf
popf
test
inc
aas
adc
adc
push
inc
clc
jne
dec
xchg
mov
push
mov
sub
daa
in
mov
std
test
sahf
bound
fmul
and
cmp
adc
sub
fwait
pop
jl
push
push
fld
js
cmpsb
mov
or
sti
push
js
outsb
mov
jnp
dec
sbb
jo
aad
daa
les
pushf
in
sbb
leave
sub
jmp
pop
xchg
push
mov
xchg
stos
pop
mov
pop
lret
add
xchg
adcl
insl
dec
icebp
aam
push
loop
add
add
les
mov
imul
xchg
add
cmc
add
add
clc
and
ficoms
push
and
jge
icebp
add
addb
inc
jae
ret
jge
jnp
repz
std
inc
pop
iret
enter
sbb
pop
sti
fsubrl
push
ret
daa
lahf
adc
pop
mov
testb
ljmp
stos
sbb
or
movsl
jb
mov
inc
mov
mov
mov
aas
dec
fisubrs
lds
ja
pop
pop
std
imul
ss
sbb
pop
mov
cmp
and
sbb
es
inc
inc
movsl
aam
in
insl
lret
lock
js
lahf
add
dec
and
jge
xor
movsb
stos
sub
sbb
aas
pop
scas
lahf
mov
fisubl
mov
jb
adc
adc
cmp
jae
int
shrl
arpl
es
out
ja
add
add
ljmp
loop
dec
pop
jge
push
jmp
cmc
add
add
sub
or
ss
clc
cmp
jo
stc
add
sbb
out
out
mov
inc
mov
push
mov
cmpsl
add
div
sbb
les
xchg
adc
fstpl
mov
lret
dec
sbb
mov
dec
nopl
or
xchg
imul
pop
jmp
mov
aam
mov
cwtl
dec
or
sti
mov
enter
mov
fisttps
xlat
or
js
loopne
push
sbbb
idivl
adc
pop
cwtl
fadd
inc
xor
pop
or
push
mov
insb
imull
cmp
xor
pop
int3
xlat
pop
rcrb
imul
mov
sbb
sbb
cmc
sti
ss
into
add
xchg
adc
jae
pop
idivb
adcl
icebp
xor
inc
ds
jno
push
in
xor
add
aaa
shlb
cmc
div
rcl
inc
pop
push
and
stc
sbbl
add
dec
outsb
or
push
pushf
lret
cmpsb
pusha
add
pusha
shl
loop
fisttpll
lret
pop
mov
out
jne
outsb
sbb
fisttpll
and
imul
outsb
dec
push
and
mov
mov
or
inc
push
mov
icebp
out
stos
xor
cmc
out
hlt
aam
sbb
xchg
cli
xlat
cmp
out
daa
dec
int3
xchg
or
popa
and
pusha
xor
dec
fwait
mov
inc
sub
cmpsl
sbb
cmc
addr16
mov
mov
fisubl
pop
leave
in
stos
push
or
cmp
or
test
cmp
sbb
loop
int3
outsb
popf
inc
in
in
pop
xchg
or
fldt
sbb
add
add
xchg
inc
dec
fwait
das
sub
jne
testb
fs
dec
pop
add
jae
fildl
or
clc
inc
lea
push
aam
dec
add
mov
fidivrs
fs
call
add
add
push
sahf
rcr
pop
test
cmp
add
cmc
add
add
inc
lret
mov
dec
adc
cmp
or
inc
dec
inc
jmp
pop
or
shlb
cmp
inc
pop
mov
int
mov
insb
cltd
adc
dec
arpl
sub
sub
push
mov
sbb
test
xor
dec
aaa
imul
in
dec
jmp
push
hlt
scas
pop
and
or
lahf
loopne
daa
outsl
sub
xor
and
adc
dec
sbb
add
int
push
loop
repnz
fisubrl
data16
pop
push
mov
faddl
inc
inc
hlt
mov
xchg
mov
adc
add
pop
adc
fs
sbb
cmp
test
mov
push
dec
and
cmp
jmp
popf
mov
lahf
mov
lea
or
outsb
sahf
pusha
andb
add
add
arpl
cmpsb
jcxz
jne
push
inc
loop
sub
insl
lcall
jp
or
movsl
pop
mov
or
sub
sub
pop
sti
pusha
fucom
and
imul
or
adc
loope
dec
pop
sti
mov
jecxz
or
mov
sub
mov
jno
xor
mov
mov
hlt
sub
jbe
pop
stos
aaa
js
std
mov
cmp
lahf
es
sbb
js
cmp
sub
pop
push
or
imul
cmpsb
clc
push
mov
enter
cli
in
stos
arpl
sarl
push
loopne
pop
sbb
popl
jecxz
adc
inc
inc
enter
jp
jae
xor
test
jbe
mov
and
es
repz
loopne
hlt
xor
dec
xchg
jmp
icebp
cmc
dec
sbb
pop
ficoml
testl
jb
int
jl
out
in
add
add
add
clc
jnp
jg
in
cli
cwtl
inc
mov
jge
inc
lods
bound
add
and
dec
mov
es
dec
bound
pop
cmp
mov
sub
gs
test
xchg
fadd
lock
jo
push
adc
addb
pop
inc
pop
cmp
insl
push
adc
lret
mov
bound
cld
and
repnz
push
dec
sti
out
int
mov
lea
xor
stos
mov
cmp
test
or
pop
dec
xor
hlt
add
lods
leave
mov
mov
int
jle
dec
jg
or
sbb
fwait
and
push
xchg
in
ds
mov
sub
inc
popa
scas
mov
into
pop
rcll
xchg
lret
add
or
fsubrs
mov
mov
mov
pop
fabs
sub
ljmp
dec
sbb
call
jo
inc
xchg
lea
and
add
ljmp
cld
inc
push
cltd
das
sbb
push
pushf
add
cmc
add
add
sub
mov
or
adc
aas
gs
sbb
lds
fadds
fdivrs
dec
repnz
shll
aas
hlt
and
popl
popa
jmp
addl
xchg
dec
jmp
pop
mov
push
dec
mov
jb
add
add
cli
jmp
insl
daa
mov
add
ss
sahf
insb
mov
push
mov
insl
incb
divl
out
or
aaa
cmc
xchg
cmp
xchg
rolb
or
cmp
pushf
out
sbb
ja
push
xchg
mov
mov
sbb
mov
cmp
push
in
sub
popf
pop
insb
popf
xor
jl
in
mov
adcl
fwait
imulb
clc
fdivl
repz
sub
scas
mov
adc
sbb
ret
test
jecxz
out
stos
int
sbb
add
jl
sar
std
jle
loop
js
inc
or
add
add
add
fbld
ja
insb
cmp
cli
cmp
dec
cmp
je
bound
push
aaa
jge
sbb
sti
cmp
sub
or
xchg
xchg
mov
outsl
jns
jnp
scas
ja
imul
pop
xor
lret
bound
dec
jnp
dec
push
das
imul
add
add
leave
add
sbbl
or
insb
stos
les
loop
in
jge
sbb
adc
mov
sahf
idiv
repnz
xor
lahf
inc
mov
hlt
mov
aad
add
rorb
pop
mov
hlt
aas
xlat
dec
imul
xor
push
andl
xor
fisubrs
ret
call
loope
fisttps
mov
push
lahf
mov
ror
iret
movb
add
cwtl
or
stos
xchg
cmp
pop
je
mov
add
add
add
rcrl
into
aad
movsb
enter
mov
mov
push
out
js
inc
imul
mov
jo
aam
lods
inc
sar
daa
mov
test
addr16
dec
cmpsb
adc
xor
ljmp
mov
xchg
mulb
lods
outsl
outsb
add
enter
rcr
std
outsl
jb
mov
orb
sub
sarl
mov
mov
sbb
out
xor
dec
mov
pop
xchg
ds
push
hlt
sub
fcmovu
popa
in
sbb
cmp
pop
das
sbb
out
mov
scas
jle
cmp
push
pushf
mov
iret
mov
or
fwait
jbe
leave
nop
rorb
in
shrd
in
sbb
pop
dec
bound
nop
pop
cmpsb
std
dec
add
dec
xor
adc
out
adc
push
lock
mov
movl
add
fwait
and
popa
mov
aad
aam
cld
fmuls
cmc
add
add
push
outsl
push
lahf
cmpsb
jns
int
mov
mov
mov
cld
lock
imul
clc
cs
imul
hlt
add
or
adc
push
test
out
scas
in
mov
inc
push
xlat
sub
inc
movsl
je
jnp
dec
or
sub
stc
sbb
or
shrl
or
imul
fcoml
mov
sbb
das
xchg
loop
arpl
dec
fcmove
cmp
cmp
jae
cmp
sbb
adc
jmp
pop
dec
cwtl
inc
sbb
fsubrs
mov
fimuls
shlb
es
test
imul
xor
add
mov
jns
je
jecxz
xchg
pop
int3
imulb
or
add
add
dec
std
out
xlat
aas
jle
ds
sub
add
clc
push
push
fs
sti
mov
jo
mull
xor
rolb
xor
jne
rol
mov
mov
mov
xchg
pop
testl
mov
mov
mov
pop
cmpl
or
stos
pop
lcall
cmp
pop
pushf
aad
mov
cmc
sub
cmpsb
and
pop
add
pop
xchg
ficomps
jns
dec
scas
outsl
icebp
roll
sbb
sbb
jno
inc
fisubs
stos
into
lcall
adc
jne
outsb
call
cmpsb
test
mov
and
mov
mov
push
icebp
add
sbb
out
int
pop
jns
ret
aad
cli
cmp
in
cmp
jecxz
xchg
jg
cli
lea
mov
pop
mov
stc
call
adc
mov
lock
add
add
mov
mov
jmp
ljmp
add
cmc
add
add
mov
jo
je
jbe
mov
xchg
jmp
push
add
jno
shrl
hlt
mov
xchg
inc
fs
mov
push
test
jo
adcl
xchg
test
adc
push
call
xchg
or
inc
imul
and
lods
dec
rol
dec
lahf
xchg
jae
ficompl
mov
test
xchg
cmp
popa
add
bound
ret
daa
push
shrl
xchg
call
mov
fcomps
dec
and
xor
or
std
pop
push
mov
or
cmp
jno
xchg
xor
andb
cld
or
jecxz
and
je
xchg
sahf
and
icebp
insb
aas
in
in
cli
lds
fidivrs
pop
adc
sti
add
add
or
cmp
jns
aaa
inc
mov
add
adc
sbbl
mov
dec
and
add
add
cmp
je
jecxz
xor
shlb
pop
inc
fidivs
dec
stos
add
mov
fidivs
aas
adc
jbe
add
stos
int
pop
scas
mov
and
orl
mov
inc
mov
lock
sbb
in
loope
fs
lea
fistps
addr16
call
das
clc
xorb
daa
fwait
in
inc
xor
dec
inc
pop
or
add
ljmp
mov
sub
mov
loopne
xor
jae
in
cli
xchg
fimull
jae
or
imul
ret
cmpsb
aam
sbb
out
adc
mov
stos
pop
stc
sub
addl
stos
dec
push
dec
test
loop
mov
and
cmp
insb
inc
jle
inc
mov
ffreep
movsb
push
cli
and
add
fdivrp
push
add
imul
and
or
push
xchg
or
add
xchg
pop
cmc
imul
sbb
arpl
test
add
inc
adc
call
pop
loope
lods
sbb
pop
cmp
or
xchg
ss
xor
push
sub
cwtl
lock
aad
jl
add
mov
adc
dec
jmp
int
add
push
jmp
adc
jle
push
mov
lea
lock
outsb
fnstcw
iret
mov
mov
inc
pop
mov
stos
push
cmp
out
mov
hlt
dec
cmp
shlb
stos
add
daa
ret
push
out
jl
jge
mov
mov
mov
mov
jle
dec
les
pop
fildll
int3
stos
sub
and
sub
mov
pop
xor
and
je
mov
cmp
std
in
add
cmp
push
lcall
mov
add
mov
jge
jg
decl
xchg
or
mov
add
add
add
stc
lret
cmp
jg
lea
or
loope
dec
int
iret
pop
sbbb
ds
mov
mov
cmp
dec
pop
in
lret
or
out
adc
adcl
jo
data16
xchg
xchg
pop
jno
ds
sbb
xor
imul
addl
out
or
dec
rcrl
test
insb
mov
cmp
lods
fsubr
xchg
stc
jecxz
negb
mov
lret
fwait
dec
int
sub
add
lds
mov
insl
adcb
rcl
jge
cmp
fists
and
setg
lcall
mov
aam
adc
add
in
mov
cmp
jge
sub
xchg
push
xchg
push
and
popf
fcmovnbe
test
add
or
vmulps
dec
add
add
ja
out
das
mov
aam
iret
dec
das
hlt
movsb
add
cmc
add
add
hlt
sub
pop
aas
cmovs
inc
movsl
test
push
pusha
lods
mov
push
popf
xor
xchg
lcall
movsl
leave
dec
cmc
inc
popf
cltd
stos
loop
add
ficoml
inc
pop
dec
pop
and
xor
jl
sbb
pushf
insl
idiv
inc
rcrb
mov
fcom
mov
sbb
les
sahf
mov
sub
sbb
sbb
jbe
in
adc
fwait
jbe
sbb
or
xchg
xchg
cs
out
enter
andb
scas
lock
out
jmp
ret
dec
lret
push
xchg
mov
mov
movsb
adc
in
sbb
pop
out
out
mov
mov
clc
mov
adc
adc
enter
loop
ljmp
lret
mov
cmpsl
xor
jmp
insl
flds
add
pusha
test
mov
outsb
mov
add
add
add
push
mov
aam
and
jecxz
in
push
std
add
sbb
add
testb
pop
xchg
fnstenv
mov
fwait
lret
es
xor
out
push
dec
repnz
mov
mov
loop
pushf
mov
xor
stos
fsubrs
insb
out
jp
cmpsb
js
cmp
lret
in
shr
punpckhwd
jg
inc
iret
and
sbb
cli
mov
pop
pop
inc
or
ljmp
scas
cmpsl
daa
sarb
loope
xchg
jle
xor
push
push
push
push
stc
adc
sub
leave
rolb
movl
mov
xor
or
xchg
add
nop
int
cmp
mov
sub
dec
subl
xchg
decb
xlat
push
leave
pop
fwait
dec
dec
jo
mov
fsts
call
xchg
sbb
or
int3
cmpb
or
lcall
mov
add
cmpsb
add
cmc
add
add
je
pushf
jbe
sub
in
xchg
mov
sbb
pop
roll
mov
jo
jne
jne
sbb
mov
pop
call
mov
push
jp
neg
jns
hlt
insb
and
xchg
adc
sub
aad
out
xchg
rolb
xchg
adc
dec
or
sbb
dec
cmp
ret
sbb
dec
popa
repnz
inc
js
test
cld
mov
mov
cmp
add
cltd
stc
xchg
inc
cli
lods
mov
cs
aaa
pop
or
cmp
sahf
mov
ret
cs
dec
shrb
adc
cmp
xchg
data16
rolb
inc
jmp
je
fdivl
jno
lret
cmp
ficoms
ret
jmp
mov
add
inc
scas
lret
jp
mov
add
das
stc
jo
lock
and
inc
push
nop
rcrb
orb
add
mov
mov
cmp
and
ret
cmpsl
add
cmc
add
add
arpl
loop
xchg
inc
fs
lcall
xchg
jl
add
das
jns
nop/reserved
lret
pop
mov
mov
gs
push
or
and
jmp
and
movsl
sub
push
rcrl
add
es
jp
scas
cmp
fadds
sbb
dec
pminub
add
xchg
pop
rclb
loop
adc
mov
mov
jns
adc
sub
dec
fcmovbe
sbb
push
inc
out
mov
pop
andl
popa
ret
adc
jae
ds
sahf
test
mov
sub
cmpsl
bound
adc
testl
dec
jb
jmp
or
xlat
mov
ss
or
lods
clc
cmc
shrb
adc
pop
clc
pushf
jmp
push
add
add
std
mov
xchg
pop
mov
add
add
add
or
mov
iret
aad
lret
xchg
and
xchg
cwtl
frstor
jmp
sbb
aam
lret
and
clc
push
jno
ret
cmp
inc
cmp
or
pop
xor
xor
lods
cmc
lcall
fs
loope
aam
dec
sbb
add
rorb
add
fidivs
pushf
lods
push
adc
fwait
test
fstpl
jl
pop
test
dec
and
in
outsb
dec
int
daa
jl
mov
inc
adc
adc
xor
popf
rcrl
mov
hlt
nop
push
and
imul
out
sub
pop
mov
popf
bound
mov
lds
rcrb
mov
bound
popf
arpl
aam
faddp
cmc
cmp
push
inc
fdivl
stos
push
and
add
add
test
push
pop
repz
call
jb
out
inc
mov
ss
dec
adc
int3
hlt
shlb
subl
xchg
std
xchg
sbb
jns
mov
mov
sub
sbb
adc
notl
popf
call
inc
and
pop
sub
inc
arpl
add
xor
dec
jmp
add
fisubrs
jl
mov
mov
pop
pop
xlat
fisttps
xor
in
test
add
out
cmpsb
in
inc
cld
add
ljmp
mov
test
fistl
pushl
push
iret
je
lods
jnp
aam
and
xorb
stos
mov
mov
js
fsubs
rclb
test
xorl
cwtl
jae
and
fists
cli
mov
or
jg
add
adc
mov
pusha
sbbl
add
rcrl
jl
mov
notl
mov
jge
ljmp
xchg
xchg
and
test
inc
fs
cli
or
out
xor
jecxz
pop
xor
xchg
int3
xchg
pusha
hlt
adc
inc
mov
add
xor
push
dec
and
je
or
xchg
xor
and
gs
fstpt
dec
mov
subl
cmc
mov
nop
aas
dec
psubusb
jo
ficomps
xchg
test
mov
cmc
pop
mov
imul
push
jge
mov
xchg
mov
jecxz
cmp
pusha
sahf
sub
push
std
sbb
and
inc
stos
cs
add
add
inc
pop
sub
loope
lret
or
lock
dec
cli
add
fs
lahf
jge
out
xchg
popf
xor
add
pop
test
stos
hlt
jmp
ljmp
fstl
add
add
add
cmpsl
xor
pop
dec
movsb
inc
push
out
iret
inc
icebp
mov
sub
mov
ja
jb
fldcw
push
clc
mov
movsl
stos
mov
icebp
std
xchg
cltd
int
sub
clc
lds
push
push
sbb
and
mov
call
xchg
lret
push
mov
lock
cmpl
xchg
fsub
cmp
das
loope
into
and
call
icebp
outsb
xor
sbb
mov
aad
push
inc
sbb
repz
dec
or
jno
push
jecxz
xlat
sub
inc
sbb
mov
inc
inc
dec
outsl
in
sub
fisttpll
fldl
sbb
adc
xlat
les
ds
push
mov
push
jmp
stos
xor
pop
dec
sbb
aas
movsl
add
add
push
nop
out
xlat
out
jg
dec
cmp
push
rorl
add
add
add
dec
and
fucom
ljmp
ret
and
sub
mov
push
push
into
add
push
pop
jbe
or
xor
sub
lret
and
lock
push
mov
mov
int
repz
and
add
cmp
or
mov
cmpsl
in
scas
xchg
lcall
push
cwtl
out
shll
pop
cmp
jbe
ja
mov
iret
cmpl
dec
js
adc
or
pop
jae
sub
mov
iret
cmp
pop
sub
push
inc
push
sub
sub
fs
or
add
insl
inc
test
imul
xor
ds
sub
mov
inc
xorl
popf
in
dec
jmp
js
add
insb
dec
or
outsb
enter
cmp
add
add
mov
inc
fwait
lds
xor
aas
pop
xchg
lods
add
cmc
add
add
cmpsb
pop
psrld
test
jg
pushf
mov
mov
push
pop
add
add
sub
fs
push
hlt
pop
cmp
scas
ret
mov
lods
cmp
lock
sub
ss
fcoms
loop
imull
cmp
xchg
lea
push
mov
mov
nop
jg
mov
test
icebp
sbb
mov
ljmp
mov
xchg
inc
in
hlt
xchg
mov
or
xchg
pop
adc
lret
repnz
sub
data16
es
cs
adc
xor
repnz
ds
add
inc
jb
aaa
jns
sub
test
pusha
cli
jae
jmp
xchg
insb
mov
jns
sbb
lcall
jl
sub
ud2
jg
insl
aam
push
fisttpll
and
outsb
icebp
dec
xor
cwtl
setg
lcall
std
clc
jns
ljmp
add
cmc
add
add
or
dec
and
push
sub
sbb
pushf
sub
xchg
and
dec
imul
jb
mov
xchg
and
xor
lods
daa
and
ja
in
pushf
sti
mov
mov
divb
adc
hlt
sahf
test
cmp
scas
shrl
xor
out
xor
or
daa
pop
xchg
pop
rolb
clc
ror
das
fsubrp
inc
clc
sahf
add
xchg
sub
repnz
push
pop
mov
orb
lds
sbb
add
mov
daa
je
add
push
mov
out
ficoml
leave
mov
out
lcall
lret
les
call
push
pop
xor
icebp
push
lds
push
jnp
jp
jp
and
popa
mov
xchg
add
dec
add
add
mov
push
sti
jmp
xchg
sub
xchg
cmpb
add
add
add
repz
adc
mov
mov
cmp
add
pop
aaa
mov
test
xor
mov
adcl
shll
inc
pop
test
in
orb
push
dec
loopne
out
adcb
addl
fidivrl
mov
adc
adc
jnp
fistps
xor
imul
pusha
push
jmp
cmpsl
inc
pop
cmp
add
outsb
jbe
sub
iret
clc
push
in
arpl
xchg
inc
pop
test
xchg
test
cmc
stos
cltd
mov
mov
stos
mov
add
loop
adc
imul
movsb
inc
and
fdivrs
cmpl
mov
add
push
mov
cmpsl
mov
pop
push
repnz
sahf
or
sub
test
repz
inc
out
adc
call
add
add
jecxz
lock
lret
xor
cmc
add
add
jmp
repz
sbb
das
les
sub
cwtl
mov
in
sub
inc
jo
repnz
sub
xchg
xlat
mov
xor
and
add
dec
addb
xor
popa
insl
pop
xchg
or
mov
lea
gs
scas
or
pop
pushf
jge
mov
jmp
cmpb
arpl
or
and
inc
xor
orl
adc
insb
scas
pop
cmp
clc
data16
out
dec
popa
add
sbb
mov
inc
and
inc
pop
test
inc
lret
sbb
xchg
jmp
in
jne
int3
int
pop
sbb
jns
mov
jb
mov
cld
fsubs
imul
xor
rorb
pusha
add
cmp
mov
sahf
stos
xor
movsl
mov
loope
xchg
mov
mov
stos
sbb
ret
add
bound
divl
push
jmp
mov
cld
mov
test
gs
add
add
add
leave
jne
xor
js
stc
ret
jne
ja
ret
lods
cwtl
push
aaa
stos
inc
js
lods
or
jo
adc
adc
jns
out
sub
fs
push
sarl
aaa
sbb
and
mov
mov
dec
and
jae
jg
and
mov
jecxz
push
jecxz
shrb
mov
mov
std
mov
sbb
aam
repnz
lcall
mov
add
mov
mov
imul
ret
pop
jns
xor
insl
xor
test
mov
dec
cmp
push
sti
in
std
and
adc
aam
scas
frstor
ret
rolb
mov
jbe
jl
mov
dec
aad
push
scas
jne
cmp
mov
dec
mov
push
add
mov
mov
dec
das
pop
out
cmc
mov
xchg
and
adc
add
cmc
add
add
adc
add
inc
lret
pop
lock
cmp
xor
or
stos
adc
xchg
push
pop
js
je
scas
repnz
rol
xchg
mov
cmp
scas
push
mov
cwtl
les
xorl
mov
sub
pop
mov
adc
mov
jbe
ds
lret
sbb
popa
pop
cmp
lock
dec
nop
adc
mov
mov
xor
lds
sbb
test
jmp
mov
shll
or
cmp
pop
xor
adc
in
nop
sbb
out
pop
and
sbb
mov
jle
jae
mov
dec
mov
mov
insb
aad
xor
inc
call
sub
cli
fsubs
or
jmp
daa
out
mov
add
fistpll
fucomip
std
dec
std
pop
mov
jns
imul
add
add
add
and
jmp
push
filds
cmc
inc
mov
or
mov
push
and
fimull
sbb
outsb
push
test
fldenv
call
cltd
sbb
sti
mov
fimull
fisubs
pop
stos
enter
or
mov
sub
lock
jle
xor
outsb
mov
nop
lods
ret
xchg
push
dec
ret
fs
js
lahf
ds
jne
inc
aas
mov
and
leavew
mov
enter
int
push
stc
add
jbe
arpl
mov
fsubrs
scas
popa
out
lret
out
pop
test
xlat
add
pop
loope
add
push
in
and
movsl
sbb
scas
mov
int3
inc
inc
push
dec
aas
dec
mov
ds
mov
jecxz
cmpsl
int3
sub
movsl
das
xor
add
fidivs
loop
ljmp
jecxz
jp
inc
mov
add
add
add
test
sbb
lcall
jo
movsl
or
dec
shll
pop
pop
test
xchg
popa
clc
nop
mov
mov
jmp
or
mov
xor
dec
xchg
push
dec
inc
out
lock
sub
and
jns
mov
fcmovb
in
das
hlt
sbb
ds
mov
mov
sahf
jb
mov
xchg
push
mov
in
pop
ljmp
dec
popa
outsl
jb
push
bnd
aad
fildll
jle
push
cmp
jmp
adc
in
loop
loopne
xchg
jo
push
sub
sub
cltd
ljmp
cmp
scas
leave
push
pop
cmp
pop
pop
daa
sub
daa
cmc
sub
and
or
xchg
push
add
outsl
in
lret
add
add
xchg
jg
jmp
std
jge
in
xchg
sub
aam
mov
add
add
add
insb
jnp
cmp
or
sub
shl
mulb
mov
sbb
into
outsb
cmp
add
ds
push
inc
xchg
mov
daa
jno
cli
out
xor
xor
fadds
or
les
test
dec
sbb
xchg
clc
sahf
icebp
pop
fimuls
int3
out
daa
sbb
pusha
or
pusha
daa
pop
rcr
mov
fidivrs
popf
cmp
fimuls
sub
and
mov
cmp
stos
mov
sbb
pop
dec
cmpb
fdivrl
xchg
iret
out
push
lock
mov
adc
arpl
add
and
pop
jo
sbb
les
loopne
out
jne
inc
jb
int3
xchg
mov
fistl
pop
and
xchg
lret
out
int3
mov
inc
push
mov
hlt
test
add
add
xor
std
cmp
dec
xchg
cs
add
add
add
leave
outsl
jl
push
mov
out
xchg
insl
ss
xor
ljmp
or
mov
enter
dec
push
repz
test
sub
cwtl
mov
mov
push
mov
or
cli
into
mov
push
aad
pop
inc
mov
push
out
sbb
cmc
sbb
add
ret
mov
mov
dec
ljmp
push
lret
sbb
popf
sub
xchg
test
mov
add
mov
shlb
xchg
push
jnp
int
aad
jne
cmp
cmp
ja
push
aad
cwtl
aad
jno
rclb
pushf
mov
cmp
sbb
or
cwtl
or
jnp
or
mov
imul
mov
jae
jo
mov
in
cmp
xchg
sti
adc
iret
je
insl
mov
jo
rorl
add
xor
cmp
ficoml
jg
mov
cmc
add
add
mov
inc
dec
fldcw
add
stos
mov
or
push
adc
js
fwait
push
outsl
pop
out
inc
add
int3
inc
add
jmp
dec
stos
mov
sbb
mov
mov
shll
enter
dec
cmp
pusha
es
jbe
push
sahf
push
dec
jmp
cmpsb
cmp
push
sbb
inc
loopne
jne
sahf
sbb
into
xchg
and
pop
push
nop
mov
adc
or
adc
mov
sub
addr16
cmp
mov
pop
dec
sub
mov
pop
outsb
push
cwtl
cld
sbb
movsl
and
cltd
movsl
data16
lcall
jle
fiadds
lcall
sub
xor
sub
pop
mov
jne
mov
dec
movb
popf
pop
adc
sub
shr
xchg
jg
push
jg
div
mov
add
add
jp
les
mov
push
push
adc
mov
add
ljmp
fcomp
xchg
push
call
test
pop
inc
mov
or
sub
push
or
push
push
mov
inc
in
cmpsl
ljmp
or
sub
push
lret
mov
add
jg
xor
stos
pop
or
mov
jle
xchg
negl
leave
mov
out
jle
ja
mov
shl
inc
div
or
cmpsb
and
out
add
xchg
jbe
push
mov
inc
outsl
mov
jg
or
xchg
lret
mov
mov
test
mov
inc
test
lds
js
sarb
pop
js
mov
pop
lret
ljmp
mov
loopne
mov
mov
divb
ror
and
subb
dec
std
enter
cltd
mov
add
add
clc
pop
stc
out
push
insb
xchg
cld
sub
test
add
add
add
in
adc
jmp
loope
mov
clc
ds
cmpb
push
ret
xchg
cmp
jno
test
hlt
mov
mov
xchg
pop
cmpsl
enter
int3
or
test
addb
ljmp
test
and
and
push
test
fildl
add
les
popa
inc
out
cmp
stos
sub
cwtl
imul
xchg
xchg
xchg
sub
in
mov
bound
cmpl
mov
aaa
jne
repnz
pop
pop
push
jno
add
mov
sbbb
pop
lds
aaa
jle
lock
fcoms
enter
cmp
mov
push
push
outsl
dec
push
lea
dec
mov
and
add
add
add
push
mov
lcall
ret
mov
add
add
dec
in
xchg
add
pop
in
sbbb
inc
shll
adc
icebp
mov
cmp
jne
or
and
pop
inc
lret
cmp
push
cmpsb
mov
jo
jle
or
std
xchg
negl
and
fcmovnu
sub
xor
fmuls
cmpsb
in
rclb
xor
xchg
es
push
aad
xchg
pop
and
fmull
pusha
into
and
mov
sbb
leave
sub
in
cmp
mov
inc
xor
cltd
mov
mov
fildll
pop
stos
xorb
sub
cmc
push
scas
pop
lods
sub
pushf
push
mov
into
xor
sub
negb
mov
scas
clc
jmp
push
fmulp
xchg
mov
xchg
sub
int
or
jnp
jmp
add
xorl
insb
scas
mov
mov
idivl
add
fists
cltd
movsb
push
std
push
fildll
jg
les
test
shrl
pop
xchg
mov
adc
outsl
adc
ret
and
lods
jle
jb
jmp
add
outsb
stos
outsl
cmp
es
stos
mov
addb
pop
mov
mov
and
inc
cmp
hlt
ljmp
aad
xchg
incl
test
mov
and
cli
push
cli
arpl
movsb
jb
lods
sub
rorb
sub
shrd
xchg
inc
mov
sbb
push
jno
fs
int
push
sub
scas
loop
sub
pop
sub
xchg
test
aaa
jno
mov
fsubrl
and
pop
jnp
jns
addr16
cmpsl
jbe
fdivs
sub
jnp
jno
jecxz
popa
xor
adc
scas
pop
lahf
dec
lods
add
add
pop
sbbl
fstpl
out
jmp
add
add
add
into
loopne
jae
push
and
imul
out
inc
inc
leave
sbb
xchg
and
mov
test
mov
dec
cmpsl
std
imul
sub
int3
push
dec
aam
xor
hlt
mov
inc
lcall
and
aad
and
mov
sbb
popa
ja
cli
pop
add
sbb
mov
out
mov
inc
jge
push
dec
shll
lret
dec
push
cltd
rolb
xchg
and
sar
loope
jbe
push
mov
stc
shlb
repnz
jbe
mov
movsl
enter
adc
enter
cmp
fwait
shlb
lods
mov
xor
xchg
add
add
dec
in
mov
mov
fimuls
enter
xlat
bound
mov
aad
inc
fimuls
mov
pop
stos
or
push
mov
pop
test
xchg
add
loope
mov
jecxz
out
sub
and
mov
add
mov
iret
sub
into
inc
sub
daa
sbb
pop
dec
xabort
push
mov
jmp
sbb
jp
sti
mov
sub
inc
and
rcl
insb
mov
sbb
xchg
mov
jo
icebp
xchg
lea
cli
pop
testb
cmpsb
out
mov
cmp
pop
and
insb
nop
icebp
mov
js
gs
jmp
mov
xchg
std
pop
lret
out
movsl
xor
daa
aam
push
mov
lds
lds
jae
int3
cmp
jb
and
data16
sbb
outsl
jg
and
mov
push
imul
pop
dec
cwtl
pop
push
add
dec
lcall
cmp
mov
fnsave
push
xchg
ds
popf
sbb
loopne
imul
out
pop
pop
sbb
imul
cld
mov
add
push
xchg
test
jg
jbe
movsb
sub
mov
add
testb
lret
popf
pusha
popa
pusha
stos
xchg
mov
enter
ds
jecxz
jbe
cmp
sbb
jno
xorb
cmp
repnz
movb
pop
cmc
push
pop
loopne
xchg
shlb
repnz
icebp
lods
insl
pop
mov
insl
aam
and
cmpsb
std
mov
into
in
aad
mov
dec
pop
sbb
sbb
mov
mov
mov
test
add
arpl
pop
lahf
loop
ja
cmp
adc
leave
cmp
out
sti
sbb
sub
int3
stc
mov
jge
mov
sub
int
popf
rolb
xor
sub
icebp
xcrypt-ctr
cmpsl
fsubrp
push
sub
and
xchg
repnz
lds
pop
xor
ds
jo
ss
es
ds
jle
test
add
lock
in
lcall
xor
cmp
lret
mov
add
sub
sbb
push
inc
ss
cmpxchg
stos
push
adc
lcall
ror
xchg
jne
push
pop
mov
push
xchg
mov
incl
mov
fs
pop
lods
mov
dec
cmp
mov
shll
subl
repz
pop
and
push
push
popf
pop
pop
stc
jle
popa
stos
jmp
movsl
lock
adc
aad
loope
jnp
movsb
jno
push
mov
inc
push
mov
jl
mov
cld
jo
push
xchg
sub
fimuls
stos
int3
jo
fcmovu
lock
pop
jne
mov
fimuls
lods
mov
mov
xor
lods
and
in
jo
cli
and
cld
push
ficomps
jmp
jb
jecxz
cli
xor
leave
addr16
mov
sbb
mov
mov
in
daa
push
add
add
sub
jg,pt
stos
dec
push
jo
xlat
mov
add
add
add
cwtl
repz
or
rcrb
push
mov
imul
sub
cmp
mov
repz
imul
jbe
jecxz
int3
mov
lods
and
jnp
pop
dec
xor
rsqrtps
cmp
mov
and
insl
fnstsw
hlt
jb
pop
mov
repz
mov
imul
sbb
add
adcl
out
jne
mov
dec
pop
daa
pop
add
fimull
arpl
call
xchg
enter
cli
fistpl
inc
mov
roll
pop
in
int3
xor
fidivrs
enter
adc
xchg
jb
in
cltd
push
imul
push
push
sub
fcompl
out
clc
dec
sub
call
jp
sub
aaa
add
add
out
idiv
outsl
mov
scas
ret
cmp
add
add
add
lret
pop
stos
lods
cmp
xor
push
push
and
jle
les
frstor
inc
je
cmpsb
xorb
mov
pop
adc
arpl
fldt
xor
shr
stos
xchg
ds
sbb
jge
xor
dec
push
push
mov
jge
imul
mov
xchg
lds
lcall
jb
mov
mov
jp
dec
cs
aas
aad
add
jnp
mov
outsb
mov
push
test
dec
cwtl
lahf
stos
pop
lea
repz
push
fadds
ljmp
loop
pandn
or
stos
xchg
rcrb
sbb
cmpsb
data16
divl
popf
sbb
or
mov
adc
clc
pushf
sub
cltd
cmp
insb
mov
shlb
sub
ss
pop
fucomip
sbb
add
add
add
inc
fbld
mov
cltd
lmsw
fldcw
add
add
test
mov
stos
xchg
jecxz
cmp
xor
scas
sub
stos
mov
movl
ljmp
xchg
mov
push
pop
sub
repz
out
sub
xchg
test
pop
scas
leave
sbb
fwait
inc
xor
daa
cmc
cld
es
andl
fstp
jecxz
mov
and
fwait
push
lcall
adc
out
sbb
adc
lods
shrb
xor
movsb
mov
cmp
and
inc
push
call
push
mov
nop
jnp
jo
out
pushf
lret
arpl
in
arpl
fs
mov
cmp
insl
hlt
and
sbb
mov
bound
inc
jg
jmp
sarb
data16
test
jmp
lds
push
push
call
add
ret
cmc
add
add
mov
lret
cmp
xchg
inc
aaa
or
fcoml
sbb
hlt
ss
es
xchg
mov
aam
out
mov
inc
ret
mov
or
subb
jo
stc
pop
lods
xchg
push
jle
add
sbb
or
mov
sbb
js
mov
mov
mov
push
inc
in
popa
ds
or
ror
jnp
dec
xor
add
mov
rcl
jge
push
aas
cld
nop
adc
pushf
scas
cmpsb
mov
cltd
cmp
xor
or
mov
std
jle
xchg
pop
cltd
lahf
sahf
shl
test
test
inc
mov
or
aaa
push
xchg
movsb
testl
push
or
popf
bound
xchg
push
mov
inc
mov
xchg
js
insl
pop
jns
xchg
mov
add
add
std
sti
leave
sti
iret
ljmp
outsl
adc
push
xchg
ret
add
cmc
add
add
push
pusha
or
xchg
fldcw
sub
pop
fsubrl
cmp
pop
gs
popf
or
push
stos
outsl
push
mov
icebp
orl
xor
out
insb
into
mov
cmpsl
mov
cs
imul
fisubl
sub
in
add
inc
scas
popa
mov
xchg
mov
arpl
sub
jmp
or
sarl
test
adc
out
cmp
mov
aas
xchg
and
bound
sub
pop
ljmp
int3
xchg
insl
inc
int
dec
cmc
lock
mov
test
loop
adc
pop
mov
push
inc
push
pop
lock
jae
loopne
mull
mov
cltd
js
pop
lock
push
dec
xchg
pushf
jo
lods
or
shrb
call
add
mov
mov
es
add
add
cmc
add
add
lret
xchg
xchg
fdivrs
xlat
mov
add
in
clc
lcall
and
mov
sbb
mov
scas
cli
cmpsl
add
movsb
aad
jl
inc
sbb
test
out
loope
jnp
inc
push
push
or
pop
aas
push
mov
shr
pop
mov
push
sti
filds
data16
scas
ja
andb
jne
inc
fsts
xchg
push
sahf
nop
add
add
xlat
hlt
mov
add
push
add
xorl
pop
mov
stc
jb
in
lea
xchg
pop
bound
outsb
pop
andb
sub
adc
pushf
and
inc
test
jo
jae
sub
sub
rol
and
ret
mov
and
js
mov
jle,pt
mov
inc
xchg
sbb
add
add
jg
mov
sub
shrd
push
jle
add
cmc
add
add
inc
mov
popf
aam
dec
jp
sub
lods
pop
data16
fs
xchg
bnd
fidivl
setl
ss
bound
sub
jb
xor
leave
pop
mov
lret
loope
stc
lcall
loope
rolb
mov
push
jg
mov
pop
and
imul
adc
xchg
addl
loope
aaa
lods
cmp
aas
pop
data16
mov
xor
outsl
leave
add
pop
mov
jb
in
out
push
pop
or
jge
shlb
pop
in
push
lds
clc
bound
pop
jg
xlat
pop
jg
in
shlb
inc
js,pn
push
inc
in
push
out
jge
sbb
sub
outsb
cmp
daa
fs
fnstsw
mov
sbb
stos
in
es
aaa
inc
sbb
mov
add
add
inc
enter
pushl
out
adc
mov
movb
cmc
add
add
test
pop
loopne
push
iret
sub
cli
mov
int
xor
sbb
dec
cmpsb
in
fisubl
and
test
pop
js
lahf
pop
in
jmp
test
shlb
inc
insb
sub
das
shl
mov
mov
ret
jmp
imul
xchg
jl
arpl
ds
je
leavew
xchg
nop
dec
repnz
lock
hlt
sbb
sbb
xchg
mov
mov
add
aad
roll
cmp
je
jo
mov
dec
int3
jp
add
xchg
sub
jno
das
adc
cmp
xchg
push
les
test
cmc
ljmp
mov
pop
stos
push
cmpsb
pop
mov
imul
pop
sbb
jmp
test
shll
jbe
xchg
xchg
in
add
xlat
pushf
shrb
jb
ret
movsl
and
add
cmc
add
add
dec
pop
dec
dec
jmp
insl
jns
jo
mov
pop
mov
not
jb
int
jno
jp
mov
push
repz
sbb
jnp
rclb
out
icebp
inc
sbb
xorl
ds
in
sub
fadd
sub
in
or
mov
adc
or
mov
ds
push
adc
push
jb
jns
dec
aad
cmc
mov
jl
mov
sbbl
mov
mov
imul
xor
js
sahf
mov
dec
out
xchg
lcall
imul
call
cmpsb
test
inc
out
pushf
stos
repnz
dec
mov
mov
nop
and
enter
and
jno
sbb
adc
xchg
stos
jne
sub
mov
scas
jle
dec
mov
adc
xchg
gs
jle
sub
sti
inc
test
cld
adc
add
add
test
mov
xchg
push
outsl
aad
pop
enter
add
add
inc
jb
int3
loope
xorl
aaa
jae
mov
popa
jmp
popf
lret
mov
test
xchg
push
cltd
sti
inc
js
lea
sbb
add
cmp
dec
ja
je
fld
jno
inc
jno
mov
fisttps
mov
or
negb
mov
jg
les
dec
xlat
mov
add
std
cmp
outsb
push
inc
adc
inc
movsb
cmp
jg
cmp
dec
std
adcl
jle
fxch
mov
jbe
add
faddl
mov
scas
pop
mov
fdivrs
sbb
mov
mov
cltd
jecxz
adc
inc
mov
out
jb
xchg
rcrb
mov
push
enter
dec
xor
fsubl
pusha
in
add
fisubrl
cwtl
pushf
leave
xor
add
jg
jne
jne
jg
out
and
mov
push
leave
add
cmc
add
add
fwait
shrl
inc
sbb
cli
daa
adc
aaa
mov
jmp
or
mov
pop
test
jl
shlb
add
jbe
jg
mov
test
and
dec
mov
push
push
dec
mov
mov
pop
xchg
push
mov
pop
sbb
fiadds
popa
in
insl
leave
cmp
dec
es
push
mov
ret
jp
mov
cmp
sbb
pop
sub
cmpb
mov
in
and
cld
loop
jns
lahf
cmpsb
rclb
icebp
lcall
pop
sub
fpatan
xlat
addr16
fistpl
fdivr
adc
aad
xchg
mov
sub
add
adc
inc
aaa
shll
dec
or
shlb
push
xchg
pop
adc
sbb
mov
cmpsb
fstpl
aam
dec
jae
lret
cmc
add
add
roll
popa
rcrl
mov
mov
sbb
int3
sub
lods
out
lds
in
inc
das
pop
xchg
push
int3
pusha
adc
sti
xchg
int
les
jne
inc
fs
pop
xchg
or
push
das
out
adc
cwtl
sub
cmp
pop
mov
jp
mov
fwait
call
bound
stos
loopne
xchg
cmp
mov
test
pushf
leave
xchg
lret
nop
mul
repnz
xchg
mov
xlat
mov
imul
out
fwait
je
xchg
repnz
sub
les
es
iret
or
xor
sarb
iret
adc
into
mov
xor
push
mov
mov
test
push
push
arpl
and
add
ds
xchg
cmp
add
add
outsb
jle
lods
not
mov
add
fwait
jmp
cmc
add
add
mov
jb
push
outsl
ljmp
nop
push
or
mov
insb
in
pop
mov
cmp
or
push
mov
adc
sub
aam
cmpsl
jne
adc
pop
xchg
mov
pusha
data16
ucomiss
ffreep
push
and
pop
xchg
loopne
cmp
cmp
dec
xchg
sbb
bound
jp
pop
fsubs
popf
inc
sbb
xchg
fwait
push
mov
idivl
sti
ret
push
daa
outsl
or
fsubr
mov
mov
addr16
aas
sbb
or
inc
lods
hlt
rclb
ja
out
and
fs
test
pusha
dec
mov
cwtl
addr16
ret
aaa
cli
pop
fidivrl
subb
push
jmp
xchg
jbe
std
data16
jge,pn
jnp
mov
adc
repz
mov
aam
dec
test
repnz
call
mov
mov
push
xor
das
xor
add
cmc
add
add
sbb
jmp
dec
pushf
repz
xor
sub
adc
sub
mov
add
daa
mov
pop
inc
loopne
adc
inc
adc
adc
inc
cmp
add
lods
in
aam
mov
int
js
test
cmp
cli
sbb
inc
pop
std
clc
ja
push
jmp
add
sub
pop
and
rcrb
jge
lea
imul
sub
cmp
jecxz
xchg
cmp
pop
les
idivl
adc
js
jne
rcrb
jecxz
cltd
inc
mov
inc
push
dec
mov
jle
icebp
je
shll
cmp
jmp
lea
pop
and
fdivrs
jbe
push
xchg
cli
inc
stos
sub
mov
inc
jae
scas
sar
loope
xchg
loop
sti
add
add
out
sti
xlat
ss
inc
movsb
push
test
jg
int
add
add
add
sti
jbe
xor
jne
pushf
gs
dec
lret
call
bound
lds
push
fs
cmc
jno
and
std
int3
iret
push
xchg
mov
pop
scas
jno
ds
xchg
inc
jae
shlb
xchg
push
add
cwtl
aaa
and
add
out
jnp
mov
mov
push
bound
sub
jno
scas
jno
jo
pop
popa
insb
fiadds
idivb
cmc
and
jns
out
stos
in
jns
sbb
jmp
les
add
cmp
or
fs
add
in
hlt
leave
jge
fnstcw
sbb
vmovsldup
test
das
pop
adc
std
lods
pop
mov
clc
and
ljmp
fs
xchg
orl
xchg
dec
subb
add
inc
sub
rcrl
rorb
test
mov
add
add
push
sub
cmp
jg
cmp
sahf
dec
sbb
add
cmc
add
add
mov
xchg
fs
jno
ds
rcr
sbbl
jp
imul
jnp
xor
call
push
sub
xor
mov
xchg
sahf
mov
outsl
rcrb
daa
lods
mov
fs
gs
clc
outsb
add
je
sbb
shll
inc
outsb
dec
rcll
in
pop
mov
mov
lods
sti
test
fimull
push
fwait
mov
pop
outsl
lcall
aam
lcall
test
jg
in
jecxz
add
gs
mov
cld
dec
scas
jbe
stc
test
in
ljmp
jecxz
sbb
sub
xchg
xchg
sub
pop
fiaddl
inc
adc
call
das
in
dec
jmp
jl
push
cmc
mov
arpl
dec
insb
sbb
pop
inc
hlt
add
mov
sarb
adc
add
add
xor
fistpll
out
repz
aam
jle
push
adc
add
cmc
add
add
sub
jg
mov
test
lds
jp
pop
clc
jg
and
or
mov
jae
sarb
lahf
cltd
popf
rclb
mov
xchg
dec
pop
cmp
rcrl
pusha
inc
test
fistps
xchg
pop
mov
xor
jnp
outsl
lcall
stos
dec
push
movsb
or
cmp
je
sbb
in
sub
adc
idivl
fbstp
lcall
std
mov
cwtl
sbb
or
xchg
push
bound
outsl
aad
push
cli
lods
mov
xchg
mov
call
addr16
divb
fnstenv
sti
jg
sahf
push
xor
shlb
or
adc
lock
xchg
adc
insl
dec
cmpsb
or
shll
add
add
mov
jne
jo
jecxz
add
add
add
clc
mov
jge
pop
cmc
cld
adc
fsts
mov
mov
cwtl
xor
push
dec
stos
lahf
sahf
xchg
lods
xor
or
sahf
fs
into
jge
or
xchg
repnz
cli
aad
fs
nop
xor
jg
imul
jne
mov
xor
call
repz
xchg
in
gs
ja
out
movsl
stos
pop
mov
inc
andb
cmp
dec
jge
pop
rcrl
pop
pcmpgtb
push
ja
pop
mov
or
lret
push
mulb
aaa
mov
cmp
dec
or
dec
test
mov
cmp
sub
out
sbb
repnz
mov
jbe
cmpsl
sbb
dec
add
lahf
mov
ret
mov
and
xchg
les
mov
mov
pop
pop
add
inc
scas
stos
mov
testb
add
enter
in
out
mov
dec
leave
inc
ljmp
add
subl
lods
loop
mov
xlat
or
adc
inc
dec
push
adc
aad
jb
mov
jp
mov
fs
fiadds
inc
or
lock
ja
ja
in
ss
dec
push
imulb
mov
or
xchg
jbe
mov
push
fwait
mov
out
incb
mov
repnz
cmpsb
cmpl
fwait
add
mov
jbe
aad
loop
or
cmpsb
jno
cmpsl
push
xor
and
ss
sub
sub
mov
mov
icebp
or
mov
sub
mov
xchg
nop
data16
or
jno
jge
repz
mov
inc
adc
add
cmp
gs
test
jecxz
lds
jl
aad
jo
adc
push
int3
add
push
add
add
add
imul
cmc
call
add
roll
add
add
add
es
pop
adc
or
sub
repz
sub
pop
add
dec
into
adc
out
lahf
push
js
es
pushf
adc
inc
mov
aaa
jl
mov
lahf
add
insl
adc
xor
out
cwtl
lea
dec
jp
or
sbb
sets
jne
xor
sub
mov
outsl
out
inc
mov
hlt
orl
shll
out
cmp
lahf
scas
and
enter
icebp
sub
movsl
hlt
cli
repnz
mov
inc
sarb
pop
inc
sub
jmp
sarl
push
imul
popf
add
push
adc
mov
cld
mov
add
pop
cli
mov
mov
mov
push
and
xchg
pop
add
add
loopne
bound
cmc
or
mov
add
movsl
mov
iret
xchg
xor
xorb
in
add
cmc
add
add
xlat
dec
dec
rcll
in
arpl
mov
pop
bound
lahf
push
iret
mov
in
and
mov
ds
and
insb
cli
addb
int
stos
mov
andb
nop
into
push
xchg
push
xor
int3
jo
int3
or
mov
ffreep
test
adc
ret
sbb
ja
jno
jnp
mov
outsl
xor
mov
int3
dec
pop
push
mov
adc
jl
ror
fimull
ret
jb
mov
lea
je
and
adc
das
int3
out
dec
ljmp
mov
mov
inc
fstp
movntq
out
lcall
xchg
xor
xchg
lock
push
in
and
pushf
pop
cwtl
test
lock
or
outsl
rcrl
pop
pusha
sarb
push
out
loop
fsubp
add
add
out
into
gs
fsts
lods
out
jns
roll
add
add
add
adc
mov
sub
or
cli
push
addb
push
test
sti
sahf
add
xchg
in
inc
dec
xor
inc
out
inc
insb
pop
mov
flds
and
cltd
push
movsl
adc
sub
mov
movsl
ja
mov
sbb
movsl
push
jnp
fisubs
dec
inc
shrl
ret
inc
inc
inc
jno
in
cmp
fcoms
sahf
or
xchg
sbb
out
adcb
mov
lret
bound
ret
inc
push
xchg
shrl
scas
or
clc
pop
pop
imul
mov
in
jge
xchg
lods
cmp
loopne
pusha
or
cmpsb
adc
das
pop
and
xor
daa
or
xor
and
push
aas
pop
xlat
mov
add
jno
std
bnd
add
test
loope
add
add
xchg
and
je
out
mov
lahf
and
aam
add
add
add
leave
xchg
das
mov
mov
iret
shr
and
nop
sbb
loop
or
or
aam
test
xor
jl
aaa
scas
xchg
sub
dec
pop
jno
push
cltd
and
xchg
cli
flds
mov
sahf
out
lahf
push
lds
jmp
ret
nop
push
add
or
scas
sbb
jmp
jmp
leave
jo
leave
xchg
push
sahf
out
mov
inc
int
cmpl
pop
lret
fcmovbe
clc
psubsb
pop
adc
pusha
xchg
cmp
adc
out
ds
jle
lret
repz
shr
int
cwtl
mov
lcall
imul
scas
mov
jecxz
inc
into
out
divb
aaa
into
xor
lds
roll
into
push
ss
jno
mov
mov
iret
jne
inc
lods
sbb
ret
pop
aas
cmc
mov
ja
and
add
add
dec
daa
dec
das
outsb
imul
enter
cmpl
add
add
xor
movsb
or
int3
lods
fcomip
psubw
sbb
inc
pop
xorb
sub
cs
mov
lret
movsb
push
rcll
repnz
pusha
xor
dec
in
insl
cli
xor
dec
xchg
mov
xchg
mov
shrb
sbb
push
or
sahf
push
mov
adc
add
sub
jge
cmpsl
shll
dec
dec
je
jmp
fs
dec
scas
arpl
imul
adc
fs
in
popa
xchg
dec
pop
push
and
adc
scas
ret
pushf
push
shlb
in
dec
clc
adc
repz
or
jge
cmpxchg
cmp
mov
inc
out
idivb
mov
mov
pop
mov
pop
addr16
jne
mov
pmuludq
js
inc
jno
xchg
adc
pop
jbe
testb
add
call
out
lahf
or
fdivs
mov
add
add
jo
adc
jbe
mov
adc
jnp
sbb
cwtl
sahf
fwait
sub
pop
aad
stos
dec
out
adc
fnstcw
adc
mov
js
pop
into
loope
jl
sbb
cmc
arpl
orl
mov
clc
sbb
repz
sub
pop
push
xchg
bound
fistl
loopne
repnz
fsubl
fwait
pusha
cs
andb
push
xor
jno
shll
aam
push
xor
mov
mov
call
stc
and
ret
xor
dec
sti
sub
and
dec
mov
push
lcall
sub
xor
pop
mov
addr16
push
sbb
scas
adc
or
mov
fstpt
sti
jl
into
xchg
ret
add
add
mov
mov
mov
ficoml
or
jl
lods
xlat
add
cmc
add
add
sub
ljmp
dec
test
jg
test
add
test
jnp
fwait
stc
sub
pop
ss
dec
rcll
es
inc
fnsave
jbe
adc
adc
push
jl
pop
cmpsb
xor
leave
and
inc
and
test
std
pop
sbb
and
xor
adc
xchg
mov
inc
mov
das
pop
aad
les
add
das
inc
nop
jbe
lret
into
mov
repnz
sub
fsts
lret
mov
repnz
pop
cmp
cmp
push
and
jns
dec
test
in
mov
mov
push
pop
or
mov
icebp
push
add
pop
loope
jne
repz
inc
ds
cmp
xor
xchg
mov
sbb
push
dec
fiaddl
add
add
add
sbb
sbb
inc
ljmp
cmc
add
add
xchg
xor
jp
mov
dec
adc
jecxz
lods
push
bound
sbb
cmpsl
sbb
mov
adc
out
and
pop
test
adc
cmp
aas
ds
lods
xor
insl
cmp
sub
dec
daa
jae
sbb
sbb
xlat
push
fisubl
outsl
push
jbe
mov
and
insl
popa
les
sahf
adc
jle
leave
sbb
sub
sarl
push
push
pop
mov
pop
sub
adc
sub
xchg
fisubs
pusha
cmp
mov
int3
mov
rcrb
and
in
stc
add
cmp
or
jge
sub
mov
dec
or
dec
sub
or
repz
es
scas
dec
outsl
pop
aaa
mov
push
add
add
ds
sub
flds
add
add
add
fwait
or
adc
bound
sbbl
fisttps
jns
jnp
sub
add
testl
call
out
or
mov
vmwrite
fisubrs
add
add
cmc
mov
jb
loope
dec
jb
pop
push
rcll
jecxz
mov
loop
fimuls
jb
shrb
mov
lods
fs
jbe
or
dec
push
pop
jns
dec
mov
pop
jmp
adc
out
rol
mov
aam
loope
cmp
jns
sub
adc
aaa
mov
or
iret
lret
dec
mov
add
xchg
fisttps
push
rcl
mov
cmp
jg
int
ljmp
in
stos
loope
nop
push
xlat
inc
jmp
lret
cmpsb
xchg
aas
stos
jb
or
sub
fsubl
xchg
and
idiv
lahf
insl
mov
bound
mov
add
cmc
add
add
sub
push
call
mov
cld
pop
xor
sbb
cwtl
enter
mov
cmpsb
inc
sub
xor
or
loop
call
jge
outsb
lcall
aaa
mov
pushf
xor
dec
xor
inc
dec
adc
jnp
insl
out
fldenv
fidivl
and
fisubs
mov
lcall
or
push
xchg
icebp
sbb
js
sbb
ja
lods
mov
nop
sub
inc
push
loop
pop
cwtl
adc
out
pushf
cmp
loop
call
push
sbb
dec
jl
push
xor
les
jnp
test
test
leave
ret
lods
inc
clc
int3
fucom
dec
outsl
outsb
aam
test
jmp
cmp
dec
sbb
xor
xor
mov
insb
cld
dec
mov
rclb
pop
idivb
jmp
sub
ret
add
cmp
jg
loope
cs
dec
push
add
add
add
sub
mov
xchg
gs
shrb
dec
mov
imul
push
cltd
imul
inc
or
outsb
mov
mov
int
rcr
mov
mov
fwait
daa
fs
adc
pop
adc
mov
aaa
cmp
mov
or
jp
push
out
stos
xor
int
inc
push
call
pop
mov
xchg
test
push
xor
insl
repnz
mov
cmpl
push
test
loop
inc
push
ret
insb
pushf
movsb
xchg
sar
lcall
mov
add
mov
test
jne
xchg
test
ret
xchg
sub
xorl
dec
sbb
jecxz
xor
cli
mov
xchg
lret
lds
notb
adc
mov
add
imul
xor
out
jbe
add
cmc
add
add
sub
xchg
pop
mov
packuswb
jns
ret
dec
mov
inc
sub
inc
add
cmp
scas
cmp
sarl
icebp
mov
add
pop
adc
movsl
daa
add
and
ljmp
cmp
pop
mov
or
loop
sbb
mov
push
or
repnz
xchg
sbb
inc
fadd
repz
aad
push
add
mov
jno
cmp
xlat
sbb
xchg
cwtl
push
mov
les
imul
mov
jle
movsb
lock
sub
push
inc
stc
inc
insl
rorb
inc
jle
sar
out
test
ds
xor
fsubrs
sti
sbb
mov
sub
xchg
push
add
insl
add
rcll
inc
mov
adc
add
add
psubusw
push
xchg
fsubrs
fdivrs
add
cmc
add
add
xchg
icebp
bound
pusha
test
mov
scas
fdivrl
mov
lahf
mov
adc
mov
lods
lahf
xor
adc
sbb
inc
std
sti
sub
mov
and
mov
mov
sub
into
ret
inc
sbb
push
mov
jnp
pop
push
pop
fistl
dec
jmp
push
hlt
popa
int
mov
arpl
mov
pop
fistpll
sub
xor
adc
dec
popf
mov
dec
and
gs
xor
aam
in
sub
cmpsl
mov
pop
outsb
jle
popa
cs
in
mov
popa
adc
lret
scas
lods
sbb
frstor
mov
mov
les
lea
popf
and
fisttpl
call
xlat
pop
pop
dec
stos
and
sbbl
fwait
lcall
dec
test
add
in
sbb
sahf
cmc
fsubrp
jnp
mov
scas
cmp
add
cmc
add
add
sbb
es
sub
xor
data16
xor
add
out
mov
ljmp
add
popa
jg
push
subb
pop
test
or
insb
mov
pop
push
cmp
add
gs
fwait
jecxz
iret
cltd
jecxz
leave
aad
orb
in
js
add
jl
dec
test
fwait
dec
adc
and
pop
add
and
mov
fisubl
mov
test
aas
mov
sub
mov
scas
ss
mov
call
mov
test
fdivl
jo
out
loop
adcl
cs
or
push
shll
inc
icebp
addr16
movsb
and
or
outsl
inc
mov
pop
sar
je
push
fcomps
aad
cltd
jl
testl
sub
add
pop
dec
jle
jg
std
fldt
cmp
test
filds
add
add
add
xor
sbb
mov
push
aas
sbb
jge
dec
push
in
clc
cmpsl
jmp
push
mov
popa
add
int
pop
icebp
inc
push
jns
jmp
sahf
int
ljmp
adc
dec
in
xchg
jmp
push
push
adc
decl
or
mov
ret
aam
in
js
push
xor
mov
mov
loopne
test
shll
shr
mov
xchg
sbbl
cs
inc
add
movsb
ss
call
inc
bound
inc
movsb
mov
or
subl
lds
mov
clc
jle
pop
xchg
mov
adc
lods
xor
ret
pop
push
or
jbe
xor
mov
xchg
mov
fimull
xchg
rcl
jbe
add
add
mov
sti
idiv
lods
jne
adc
movsl
sub
dec
loopne
add
add
add
cwtl
mov
out
xor
addl
adc
pop
adc
jp
int3
mov
push
mov
xchg
sub
xchg
clc
xchg
pop
mov
cmc
mov
in
int
cwtl
aam
xor
and
clc
jp
lahf
inc
adcl
gs
and
fldl
pop
dec
lcall
jns
stc
push
je
inc
aad
cltd
popf
je
adc
testb
movsl
xor
je
insl
add
mov
imul
cmp
outsl
pop
jge
and
xchg
pop
rcl
push
jge
push
popf
insl
jg
xor
xchg
mov
dec
stos
testl
stc
cmp
popf
lea
mov
dec
cmp
mov
jns
nop
and
cltd
cmpsl
pop
pmulhw
ficoms
adc
xchg
adcb
pop
push
and
jl
orb
add
add
sbb
jmp
mov
repnz
aas
loope
add
add
add
faddp
shl
sbb
or
jbe
fs
mov
into
xchg
add
jp
test
add
cwtl
sbb
or
ljmp
imul
push
repnz
jecxz
movups
dec
in
and
mov
mov
rorb
ficoms
sbb
adc
or
and
lods
mov
lods
add
inc
and
cmp
and
or
sub
mov
mov
lcall
lcall
mov
js
movsl
jle
adc
add
in
stos
add
cmpsb
scas
incb
lcall
mov
xor
into
mov
adc
push
xor
fdivrp
dec
sub
aam
imul
dec
adc
cltd
mov
push
data16
dec
jge
int
or
fidivl
inc
push
cmp
int3
jecxz
pop
add
add
push
out
jp
dec
popl
pop
ret
add
cmc
add
add
repnz
add
das
mov
outsb
push
popf
cmp
dec
push
out
push
cld
dec
cmp
xchg
push
mov
and
sub
pop
rcrl
cmp
cmpsb
test
sti
sbb
jns
xor
int3
ja
int
stc
inc
inc
mov
cmp
sbb
test
pop
repnz
cmpsl
inc
sbb
sbb
test
jmp
pop
shll
outsl
pop
mov
insb
mov
insl
stc
or
pop
sub
or
lods
imul
mov
aaa
mov
push
arpl
push
pop
xor
hlt
sub
xchg
cmp
cmp
rorb
sbb
inc
ret
scas
in
test
mov
ret
arpl
xor
mov
pop
scas
adc
int3
addl
dec
lods
ret
dec
repz
push
leave
jp
mov
cmpsl
mov
insb
ret
leave
xchg
pop
dec
xor
roll
add
mov
lcall
mov
call
cmc
add
add
dec
stos
lods
movsl
insb
sarb
sub
jno
fistps
in
imull
shr
imul
xchg
lods
add
or
loop
lcall
and
enter
push
shrb
inc
xchg
and
loopne
js
cwtl
adc
jae
add
in
js
das
cmp
shl
and
jb
movsb
sbb
xlat
mov
push
incl
dec
xchg
movsb
or
stos
sub
push
in
xchg
mov
xor
or
mov
xor
fldenv
or
mov
push
lods
aam
sub
pop
inc
add
inc
jnp
ss
data16
out
int
xchg
add
cmp
jge
arpl
insb
push
jne
es
lahf
dec
jno
add
pop
arpl
pop
ss
out
inc
sarb
test
loopne
fwait
or
stos
jge
fdiv
push
add
add
mov
jns
daa
data16
push
in
add
add
add
fdiv
femms
in
lea
in
rorb
pop
push
fiadds
ja
push
mov
xchg
xchg
insl
jo
adc
lods
pop
shl
adc
inc
inc
aaa
dec
mov
and
pusha
or
std
xlat
push
popf
popa
jns
or
cwtl
and
test
insb
inc
push
jecxz
sub
notb
in
push
xchg
in
or
mov
movsl
cmc
adc
gs
push
xor
lret
aaa
push
fistpl
add
insb
or
mov
shll
pop
mov
in
or
aas
cmp
test
add
out
fdiv
jmp
sahf
inc
test
jno
jno
aad
outsl
mov
mov
jecxz
sub
xlat
aaa
sbb
aad
ja
out
xchg
test
sbb
lods
int
dec
dec
jno
sbb
sahf
stc
or
mov
aad
out
arpl
mov
add
add
fadd
fsubp
jnp
push
xor
rclb
in
add
add
add
mov
sub
ss
imul
fcomps
adc
stc
test
in
loop
out
jl
xchg
movsb
jp
stos
in
mov
adc
adc
jmp
outsl
mov
xor
orl
in
pop
scas
xchg
push
sti
jp
jb
adc
lahf
ret
es
in
push
negb
lret
mov
mov
sbb
pop
xor
mov
stos
cmp
cmp
fcomi
shrl
push
dec
fisttps
int
lea
cmpsb
loopne
js
jo
xor
cmp
adc
dec
dec
bound
mov
stc
test
xor
outsb
test
mov
sbb
pop
aas
push
push
arpl
sub
jp
and
cmp
out
xor
mov
push
add
sub
cld
cli
jle
addb
or
add
cmc
add
add
cmp
pop
divb
scas
cmp
jne
cmc
movb
pop
int
loopne
push
sbb
fdivr
jp
xchg
cmp
stos
fidivrl
cmpsb
xchg
add
cld
xchg
pop
cmp
sbb
add
sbb
push
add
mov
xor
add
fdivrs
xchg
inc
repnz
fistl
or
inc
cmp
out
xor
inc
mov
fstpl
bound
pop
sub
call
aas
push
dec
stos
mov
mov
sbb
rorl
jl
mov
add
jno
aad
adc
sbb
push
inc
dec
jb
xchg
flds
mov
mov
dec
rclb
sahf
out
mov
jecxz
jmp
lods
repz
rcl
xor
sahf
enter
cmc
ss
je
jmp
fadds
in
xlat
mov
add
lea
pop
jbe
ja
sti
dec
push
sbb
out
out
add
add
add
push
inc
cmp
cli
add
xchg
cmpsl
add
hlt
movups
xchg
int3
mov
fs
sarl
ss
mov
int3
dec
mov
cld
roll
jbe
in
mov
dec
inc
push
std
mov
jl
dec
stos
push
pop
loopne
aaa
push
jp
xor
mov
inc
xchg
inc
aaa
jecxz
cmc
add
and
rclb
cmp
sti
test
cmc
cmp
mov
mov
test
mov
je
xchg
fwait
icebp
pop
test
clc
stc
mov
data16
pop
mov
scas
cmp
ret
cmp
in
inc
aad
je
push
mov
xor
pop
mov
daa
ficompl
popa
jbe
mov
nop
push
xor
test
pop
xor
add
ror
cltd
outsl
mov
cmc
or
push
aaa
inc
repnz
add
add
add
and
dec
rolb
sbb
jbe,pt
pop
push
push
mov
dec
test
cmp
fildl
into
iret
in
insb
push
sbb
push
xchg
es
dec
stos
testb
inc
jle
mov
pop
xchg
lods
in
test
in
cmp
pop
cmp
xor
aad
mov
stc
repnz
pop
jecxz
mov
data16
add
icebp
sbb
bound
enter
push
push
xchg
push
sbb
jbe
movsb
pop
jb
in
fwait
xchg
cld
mov
iret
movsl
and
out
sub
pop
xor
lcall
cmp
jecxz
aas
xlat
add
mov
or
adc
dec
aam
out
dec
loopne
push
loope
inc
scas
pop
fnstsw
add
push
imul
aad
add
add
ja
decl
jecxz
mov
out
add
cmc
add
add
adc
mov
xor
out
sub
and
sbb
sarl
lea
scas
popf
inc
test
cmp
sub
cwtl
add
bound
pop
mov
ds
les
lods
dec
lock
popf
mul
sbb
cmpb
out
cs
mov
push
std
testb
mov
cmp
pop
ljmp
stos
mov
mov
mov
xor
test
lods
test
ja
push
sbb
insb
xchg
pop
xor
ja
cmp
shrd
cmpsl
mov
ret
dec
outsb
pushl
inc
jae
mov
loope
mull
mov
xchg
jle
lahf
mov
pop
jg
aam
dec
in
mov
ljmp
movsbl
lret
pop
mov
sub
das
mov
dec
sahf
add
add
add
lock
jg
mov
leave
aaa
xor
fsubr
add
cmc
add
add
pop
add
inc
rorl
push
fistpl
ljmp
insb
jmp
inc
mov
push
jno
jl
aaa
outsl
andb
push
jecxz
sbb
mov
sbb
pop
adc
andb
das
and
sub
out
jmp
and
popf
mov
sub
sbb
outsl
pop
mov
gs
and
sbb
jecxz
pop
inc
stc
xchg
cmc
jbe
call
sub
iret
lret
sahf
pushf
sub
inc
xor
test
adc
pop
lock
mov
fistpll
lcall
mov
in
cmp
add
jle
int
mov
cmc
loope
into
outsb
scas
outsb
and
adc
inc
jmp
call
mov
dec
add
add
pop
xlat
fisttpl
jge
adc
add
cmc
add
add
fisttpll
test
je
xchg
push
aas
loopne
mov
dec
jns
push
xor
inc
push
loopne
pop
push
cs
jmp
in
fisttpll
insl
iret
and
fisttpll
dec
adc
lea
fmuls
push
mov
outsl
push
test
loop
push
pop
lds
lret
sub
and
sbb
lds
push
mov
icebp
and
xor
mov
jo
mov
out
fucomi
andl
cmp
in
xor
or
mov
scas
xchg
adc
and
nop
inc
mov
fstpl
jecxz
push
aad
mov
sti
inc
mov
mov
jns
loope
or
iret
jp
scas
repz
xchg
and
movsb
dec
cmp
adc
add
andb
shll
rolb
cmp
addb
add
mov
dec
js
stc
mov
push
nop
aad
xor
enter
add
add
add
ret
xor
inc
scas
in
pop
xchg
rclb
cmp
push
jo
iret
push
push
cmp
adc
sahf
pop
and
cs
jns
icebp
adc
xor
popl
mov
mov
jl
cmp
fstpl
add
or
icebp
add
jb
mov
inc
pop
leave
insb
add
and
or
lods
mov
stos
pop
lds
adc
andb
notl
test
dec
dec
xchg
iret
mov
pop
xchg
mov
cwtl
roll
popf
loopne
into
push
and
imul
mov
dec
sub
jae
mov
or
mov
sub
xor
cs
or
out
jl,pt
jns
push
jmp
pop
jp
insb
mov
push
add
jae
test
pushf
push
jb
add
mov
pop
insb
fildll
decb
add
add
mov
mov
add
add
pop
int3
xchg
subb
push
jmp
dec
test
rol
loop
xor
movl
jo
je
jp
gs
dec
cmc
sbb
jge
dec
maxps
sbb
and
xor
popa
jae
fdivrs
test
cmp
dec
xchg
push
rorb
sub
repz
daa
xchg
ljmp
les
add
mov
jne
xor
dec
lahf
fwait
ds
shrl
data16
ret
push
call
dec
mov
jl
push
sub
lcall
jecxz
inc
ret
xor
sbb
int
jg
mov
adc
arpl
data16
in
mov
testb
stc
hlt
add
hlt
scas
mov
xchg
aad
aas
ficompl
sbb
cs
lds
add
cmp
jnp
sbb
lret
add
cmc
add
add
add
daa
addb
sub
test
mov
push
imull
mov
das
jae
imul
add
int3
xchg
fidivrs
mov
movsb
add
daa
paddsb
push
in
jns
stc
outsb
mov
pop
add
fsubl
gs
mov
adc
or
je
testb
sbb
stos
xchg
imul
repnz
xchg
sarl
push
pop
fwait
int3
aam
jbe
lret
xor
fwait
sub
addl
xchg
sbb
dec
out
push
icebp
mov
xchg
and
ror
pop
xor
lods
pop
testl
enter
pop
mov
outsl
std
push
or
lret
loopne
std
lcall
inc
nop
mov
pop
xchg
mov
ret
roll
out
lods
xor
aas
xlat
jmp
popa
test
movsl
out
add
cmc
add
add
add
out
add
mov
dec
out
xchg
lret
adc
adc
push
mov
dec
jns
jbe
push
notb
xor
out
loopne
out
fldcw
xchg
je
insl
popa
cli
enter
mov
xor
nop
fbld
stc
out
mov
push
test
mov
pop
fwait
pop
mulb
shll
add
je
inc
shll
shll
inc
ss
jns
add
cmpl
lds
add
cmpsb
dec
adcb
pop
js
xor
notb
push
cld
adc
adc
and
xchg
daa
je
sbb
jb
inc
xor
iret
xlat
in
xrelease
pop
mov
push
mov
dec
out
fiadds
cmc
pushf
push
cmp
sbb
movsb
mov
and
imul
sbb
mov
add
jb
scas
cmp
int3
repnz
mov
add
add
add
lock
or
aad
jae
sbb
xor
imul
jno
iret
clc
lock
lret
adc
jnp
xor
rsqrtps
cwtl
call
push
jmp
fstpt
cmp
int
lock
add
xchg
out
adc
lock
daa
outsl
gs
data16
jne
roll
or
sti
fisubrl
push
test
xchg
int
cmp
addr16
dec
mov
push
ss
xorl
xor
mov
test
fdivs
xor
inc
jecxz
js
outsb
xchg
cmp
mov
and
dec
pop
fs
adc
jnp
push
mov
cld
or
sbb
xor
add
push
int
jecxz
lea
jo
push
dec
fsubl
push
ljmp
jb
sub
iret
push
mov
mov
sti
cmp
es
repz
icebp
sbb
int3
add
add
xlat
mov
bound
mov
add
cmc
add
add
nop
sbb
das
pop
stc
lods
lcall
pop
das
inc
and
out
or
adcb
imul
jb
mov
pop
dec
ss
sub
rorb
adc
add
and
inc
or
xchg
sub
push
rcl
mov
mov
aam
sti
or
xchg
jne
jmp
imul
lret
arpl
cmp
adc
adc
mov
adc
testl
pop
cmp
xor
in
sbbl
in
dec
push
xchg
repnz
push
lahf
sub
push
mov
loop
add
shlb
call
inc
adc
sub
insl
jne
test
push
rcll
push
pop
mov
sub
xor
pop
test
int3
sub
xor
add
add
mov
aas
jp
int3
icebp
xor
jmp
add
add
add
scas
xor
clc
pop
xor
jg
jbe
cwtl
xor
push
ljmp
in
xor
lret
int3
dec
sub
mov
dec
add
insl
leave
and
mov
xchg
mov
adc
mov
imul
cwtl
ljmp
adc
mov
je
mov
mov
ljmp
xor
loope
mov
pop
mov
adc
mov
cwtl
dec
dec
out
imul
pop
cmp
jg
outsl
test
xchg
mov
out
fldt
shlb
inc
push
js
push
xlat
int
leave
jg
shll
jae
icebp
mov
movsb
hlt
outsl
xor
rcrl
fwait
aaa
cltd
dec
sti
xchg
and
in
pop
stc
in
mov
ret
jnp
cmp
mov
loope
rcrl
or
pushf
addl
mov
jecxz
pop
addb
add
mov
sti
mov
fwait
and
add
cmc
add
add
rcrl
out
xchg
jo
scas
pop
add
or
mov
pop
fcmovnu
pop
data16
out
int
cmp
dec
adc
mov
push
and
pop
jbe
cmp
dec
push
imul
pop
scas
jmp
int3
sahf
repz
sub
sbb
sarl
fstpl
mov
sbb
into
mov
xor
jecxz
out
push
je
stc
xchg
dec
sbb
add
daa
sub
dec
loop
pushl
inc
sbbb
mov
inc
in
dec
sahf
rolb
dec
outsb
jbe
push
in
or
hlt
mov
in
aaa
inc
ret
mov
int3
dec
and
or
fdivrp
and
pop
lea
mov
fstps
jbe
xchg
shrb
cld
pop
jae
shll
cmpsl
mov
adc
pop
push
iret
adc
pop
jmp
add
add
into
adc
neg
jge
push
xchg
mov
add
cmc
add
add
leave
scas
inc
movsl
push
in
jb
test
cwtl
rorb
inc
and
lcall
jns
push
into
arpl
dec
popa
cmc
pop
and
std
mov
repz
pop
clc
orl
notl
or
int3
mov
ret
xchg
test
rcrb
jbe
mov
stos
push
push
jb
xchg
pushf
sbb
movsl
dec
adc
rcrb
sahf
mov
mov
pop
out
rcrl
adc
adc
mov
into
xor
hlt
xor
inc
sbb
pushf
mov
dec
mov
xchg
addr16
cmpsl
mov
xchg
xor
jnp
test
mov
adc
movl
sub
arpl
les
inc
jbe
sbb
inc
int
add
pop
cmp
outsl
jg
jg
mov
xor
stos
or
add
add
addb
outsb
daa
repz
repz
mov
sahf
jl
mov
or
push
inc
lahf
mov
enter
push
inc
jne
adc
cmpsb
push
push
or
sbb
ud0
jo
xchg
xor
cmp
push
loope
push
out
mov
jo
fimull
das
jnp
scas
nop
add
stos
xor
or
jp
cmp
mov
cli
xchg
jge
xchg
iret
cli
ljmp
fadds
cmc
mov
sub
jle
cmp
push
push
mov
dec
in
dec
sbb
push
jp
add
adc
sti
or
ljmp
jns
stos
jle
sub
sbb
push
pop
in
dec
pop
and
xlat
or
inc
insl
lock
pop
inc
sbb
out
mov
in
adc
mov
movb
cli
pop
or
push
outsb
mov
jae
mov
add
ret
ja
and
aaa
negl
jg
stos
pop
cmc
add
cmc
add
add
addr16
repz
mov
sbb
and
cmp
out
ret
mov
out
int
jae
test
int
lods
testl
aas
mov
icebp
iret
dec
sbb
ss
dec
adc
jmp
add
shrb
pop
repz
and
shll
rol
pop
jns
sub
daa
sub
imul
sbb
icebp
mov
imul
jno
stos
mov
in
xor
inc
push
aas
pop
inc
aam
lods
out
push
pop
sbb
pop
xchg
mov
out
add
fs
sub
test
fwait
inc
sti
es
stc
aas
pop
shlb
push
shlb
pusha
dec
push
loop
ja
in
lock
gs
shll
insl
in
push
sahf
jno
xorl
push
inc
sub
add
add
mov
cmc
mov
stos
ret
dec
testb
cmc
add
add
out
dec
mov
mov
mov
add
popa
cmp
xchg
outsb
ret
fwait
push
xor
orl
add
xchg
and
lcall
sti
movsb
ror
sub
jge
or
mov
out
std
and
adc
jge
sbb
sub
test
pop
xor
mov
push
sti
jno
cmp
inc
pop
cmp
and
repz
jb
push
fisubrs
sub
adc
addl
xchg
lods
pusha
mov
mov
pop
and
dec
rcll
add
adc
add
dec
jecxz
jns
xchg
cmc
mov
out
inc
ljmp
jg
in
adc
fdivrl
clc
push
lahf
outsb
insl
lahf
in
ss
and
xor
sar
lock
lds
clc
jge
adc
cltd
pop
lods
rorl
push
or
das
lea
in
mov
add
jne
cmp
pop
aaa
xlat
cmp
add
add
add
mov
daa
je
ja
out
cmp
addr16
add
pop
test
mov
fistpll
out
lahf
lods
push
lea
fld
lock
pop
js
xchg
or
jns
ret
jl
stos
repnz
push
mov
shrb
push
mov
push
addb
dec
add
ss
push
pop
imul
leave
imul
inc
pop
or
adc
sbb
mov
dec
mov
rcrl
mov
jmp
pop
cmp
cmp
jl
jnp
mov
dec
cmp
fisubl
sub
or
jg
pop
pop
scas
adc
int3
or
mov
outsl
xor
fmuls
fstps
fsubrl
mov
dec
push
sub
xchg
sbb
pop
or
outsl
repz
fs
popa
cmpsl
mov
add
add
imulb
testb
rclb
cmc
add
add
add
in
and
pop
into
adc
lds
jbe
push
xchg
or
loop
mov
into
lret
nop
out
and
sub
pop
jl
pop
ja
ficoms
outsl
lcall
insl
fisttps
cmp
rcrb
cmpsl
bnd
mov
scas
push
jnp
cmpsb
jg
sub
enter
insl
jo
mov
jmp
sub
cmp
mov
mov
push
xchg
push
sbb
dec
fwait
xchg
inc
xlat
cltd
or
test
fcmovne
xor
in
loopne
repnz
test
jle
mov
jbe
imul
jp
sbb
add
xor
aas
mov
xchg
push
mov
movb
fistl
loope
mov
out
dec
mov
outsl
or
sub
push
jmp
pop
dec
cmpsb
insl
in
inc
inc
or
inc
cmpsl
icebp
and
and
add
ret
add
xor
xchg
fwait
bound
in
cmp
cmc
add
add
and
jo
pop
loop
adc
sbb
push
xchg
xchg
shl
sub
sbb
sub
mov
arpl
cmpl
push
ds
mov
mov
popf
popa
lahf
aas
mov
add
push
cmp
lock
lahf
mov
pop
sbb
dec
xor
pop
pop
mov
mov
repz
dec
insb
xorl
out
outsb
test
add
sbb
xchg
std
push
popf
mov
fdivrs
sbb
aas
xor
push
shl
and
mov
xchg
aas
pop
mov
jne
xchg
enter
jnp
xlat
jecxz
mov
pop
aaa
cwtl
test
push
mov
pop
es
pop
std
clc
dec
jae
and
loope
inc
sub
xor
fsts
outsb
cmpsl
jge
adc
xchg
xchg
shll
in
add
dec
mov
stos
lock
test
dec
add
add
ds
in
idivl
pushl
fcompl
cli
add
cmc
add
add
outsl
lds
test
dec
fcomps
and
sub
out
ljmp
or
adc
xchg
fists
lcall
xor
jo
test
ljmp
xor
sbb
xor
push
dec
adc
sbb
adc
add
xchg
xor
daa
fwait
in
dec
ficoms
dec
mov
pop
test
stos
scas
nop
test
rcrl
shll
mov
ret
insb
mov
pusha
nop
push
xchg
fs
xchg
in
mov
fcmovb
movsl
xchg
popa
ja
dec
stc
out
orl
dec
cmp
test
push
mov
gs
inc
push
icebp
push
popa
cli
sbb
jae
or
adc
xchg
dec
insl
mov
push
hlt
xlat
mov
enter
xor
sldt
add
jecxz
inc
cli
aas
push
ljmp
push
sti
add
cmc
add
add
dec
movsl
xchg
lcall
test
jecxz
sbb
arpl
in
hlt
rcr
mov
sub
mov
mov
cmc
pop
scas
in
and
inc
div
mov
jp
mov
mov
mov
adc
fnsave
shll
in
sbb
aas
imul
xor
push
jg
ss
sub
aad
sub
in
movsb
ja
dec
ds
out
lods
xor
sar
mov
test
js
lods
enter
ja
aam
mov
xchg
dec
repnz
cmc
jp
sbbb
sbbb
xchg
hlt
adc
mov
mov
xchg
dec
iret
loopne
add
pop
pop
mov
xor
fucomi
negl
xchg
pop
in
mov
aam
mov
test
cmp
pushf
add
jb
mov
mov
or
add
in
add
mov
lcall
sbb
jge
or
add
cmc
add
add
cltd
mov
in
and
add
aaa
addb
inc
dec
aad
dec
inc
dec
or
jmp
jno
add
stc
jge
sub
sbb
xchg
xor
arpl
cmp
jne
repz
adc
std
adc
dec
pop
scas
icebp
fcomip
divl
loop
mov
xchg
js
mov
xor
add
addr16
sbb
or
or
push
fs
movsl
add
stos
push
sub
push
jge
imul
roll
push
cmp
outsl
dec
or
mov
inc
sub
adc
cmpsl
jae
out
dec
test
out
mov
xor
push
popa
outsb
add
sub
scas
mov
lock
fidivrl
cmpsb
dec
push
push
inc
fs
js
and
add
add
jae
cltd
dec
mov
fs
add
cmc
add
add
jbe
arpl
aaa
lea
rorb
cmc
jg
jnp
push
out
push
clc
cwtl
movsl
cmp
xor
jge
ss
mov
test
mov
mov
mov
fbstp
pop
lock
clc
mov
inc
pop
push
sub
cli
js
jl
inc
ljmp
js
sti
sbb
mov
adc
mov
insl
and
add
stos
jns
mov
mov
adc
sub
fs
jo
add
jmp
shrb
aaa
and
in
sbb
or
dec
int
mov
sbb
xor
cmpsl
data16
inc
sub
xchg
fisubrl
movzbl
out
fistl
test
sbb
mov
pop
inc
loopne
sti
mov
and
inc
jb,pn
es
adc
ja
aad
jmp
add
ds
into
nop
out
cwtl
jle
xlat
movsb
add
add
add
cmc
add
add
cmp
push
nop
inc
or
shlb
dec
mov
test
adc
cmp
xchg
inc
or
in
and
loopne
outsb
cs
movsb
push
and
pop
xchg
jl
mov
test
les
incl
ljmp
sub
pop
jp
cltd
push
in
insb
ljmp
sub
mov
mov
outsl
push
pop
and
testl
cmpsb
arpl
dec
dec
bound
push
mov
or
or
rorl
mov
nop
jmp
mov
hlt
bound
mov
rcrb
je
xchg
and
inc
aad
dec
shrl
jb
leave
dec
mov
mull
pop
scas
pop
pop
mov
cmp
outsl
imul
mov
ss
scas
sahf
jo
loopne
ljmp
mov
repnz
jg
ret
fisttpl
pop
cwtl
pop
lock
mov
jno
test
jg
xor
or
cmp
incb
add
add
add
sbb
loope
sub
pushf
push
add
pop
loope
or
and
jne
insl
in
test
xor
jp
fstl
jb
out
arpl
loop
je
add
mov
push
push
mov
lss
shlb
jmp
dec
stc
fdivp
pop
xchg
lock
mov
dec
loopne
jl
daa
sbb
xchg
add
stc
stos
pop
cmp
popf
xor
fnstsw
shlb
or
shlb
jno
test
pop
sub
stc
sub
lea
dec
in
add
rolb
cmpsb
or
cmc
movsb
adc
adc
sbb
cld
fwait
add
and
aaa
dec
daa
dec
lods
adc
sbb
mov
add
jmp
int3
lahf
xor
enter
int3
outsl
repnz
mov
add
adc
movsb
push
in
cmc
jne
pop
adc
rcrl
sub
incl
add
add
add
outsl
in
int
out
scas
inc
mov
cs
jnp
ret
sti
sbb
into
add
sub
fsubrp
test
loop
pushf
lods
cmpsl
jmp
inc
adc
lret
pushf
testb
enter
insb
cwtl
fsts
or
pop
add
lret
outsl
add
into
lret
push
push
out
cmpl
sbb
sti
fldcw
pop
cmp
ror
insb
sbb
icebp
push
mov
addl
pop
ljmp
mov
add
or
inc
or
xchg
cs
sub
int
in
dec
icebp
jl
call
es
rol
inc
clc
stc
cmp
jle
inc
xchg
or
fs
test
push
mov
xor
out
imul
push
and
cmp
xchg
gs
pop
inc
mov
or
ds
cmp
lahf
repnz
sub
jb
and
orps
add
add
out
shlb
aas
out
fwait
aaa
call
pop
aam
add
cmc
add
add
ds
repz
jmp
sbb
test
pop
lock
imul
pmaddwd
jle
fldenv
pop
sahf
mov
and
jmp
shll
and
mov
and
imul
dec
test
push
push
aam
or
xor
add
pushf
and
in
int3
pop
sub
shlb
xor
es
cmc
push
out
jecxz
js
push
inc
loop
in
shll
popf
and
jp
out
out
in
jle
and
push
in
mov
paddusw
addr16
call
js
or
cmovns
or
adc
xor
insl
jo
loop
int3
push
push
je
test
leave
mov
push
or
andl
xchg
mov
mov
and
cwtl
xor
stos
adc
jle
stos
outsb
add
add
add
mov
lcall
cwtl
xor
add
add
add
add
and
pop
orl
mov
pop
push
dec
ret
mov
cmp
popa
and
mov
cmp
mov
cltd
push
pop
push
mov
popa
gs
dec
repnz
adc
mov
ja
jle
mov
jg
jle
popa
psubusb
ficoml
into
fidivrl
inc
arpl
cmp
test
aaa
into
je
pop
dec
pusha
ret
jo
mov
or
sbb
sub
add
xor
lods
loope
scas
and
lcall
mov
mov
fisubs
lcall
xchg
cltd
fcompl
and
popa
je
push
rorb
clc
xchg
jl
push
movsl
aad
mov
iret
cltd
in
je
fiadds
sub
jo
jno
test
test
add
add
ret
bnd
rorb
cltd
jl
fwait
mov
add
add
add
jb
cwtl
add
or
ljmp
adc
push
addr16
popa
out
sbb
add
int3
lock
shl
test
xchg
in
sbb
std
mov
inc
adc
mov
aam
sub
fxch
pop
mov
jns
fimull
add
enter
add
inc
cmpsl
cli
loop
in
sbbl
inc
mov
sub
xor
xchg
jmp
es
push
hlt
xor
mov
and
xor
or
fxch
mov
shlb
insl
cli
mov
mov
mov
out
mov
scas
sbb
push
fadds
rcr
fs
push
pop
jp
subl
nop
sub
ja
sub
jmp
inc
add
push
in
dec
dec
clc
aam
sub
add
add
std
aaa
mov
lret
jne
gs
or
cmc
add
add
jg
xadd
aad
and
jns
inc
adc
or
add
in
xor
jg
mov
fbld
pop
test
mov
ja
mov
movsb
in
icebp
push
pop
add
fs
sti
repz
sti
inc
jecxz
data16
and
or
into
xor
leave
add
js
push
bound
cmp
inc
jl
stc
mov
loopne
mov
repnz
pop
pop
fdiv
std
bound
cmpb
xor
push
imul
and
jae,pn
push
lahf
jns
mov
inc
inc
punpckhdq
pop
xchg
ja
dec
enter
pop
cmp
nop
ret
jns
mov
flds
sarl
xchg
lahf
mov
shlb
pop
xor
sbb
sqrtps
mov
ljmp
add
insl
aam
mov
fs
xor
add
inc
add
add
mov
cmp
xor
pusha
iret
adc
movsl
mov
adc
jecxz
dec
test
push
shrb
mov
stc
add
mov
lods
mov
dec
push
mov
mov
or
dec
add
add
add
movl
add
lret
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
cltd
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
test
inc
aas
inc
lea
inc
mov
mov
call
out
fisttps
jecxz
call
lea
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
lea
pusha
push
incl
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
ljmp
movntq
movl
test
jmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
jle
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
cltd
mov
or
rorl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
addr16
je
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
aaa
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
and
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
ss
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
cltd
clc
xor
inc
cmp
pushf
mov
test
clc
dec
inc
mov
or
test
clc
testl
enter
ss
pushf
inc
decl
push
xabort
add
mov
mov
les
adc
dec
add
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
mov
test
cmp
pushf
xor
add
inc
dec
cmp
sarl
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
cltd
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
cltd
lret
xor
mov
lea
xor
add
inc
dec
mov
addr16
inc
sub
inc
xor
push
mov
add
inc
decl
add
inc
mov
cltd
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
test
cltd
add
jmp
mov
add
mov
jmp
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
mov
ret
xor
add
ss
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
call
in
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
adc
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
les
inc
push
aas
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
ss
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
pushf
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
xor
inc
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
cltd
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
cltd
cmp
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
nop
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
std
mov
clc
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
jmp
mov
jle
inc
nop
in
inc
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
leave
add
and
inc
jne
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
jmp
jge
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
cmc
or
out
mov
pop
push
cmp
sar
incl
inc
in
jle
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
mov
mov
push
insb
push
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
ss
lea
mov
fadd
dec
lds
out
inc
lea
inc
dec
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
jmp
addb
mov
sub
add
js
data16
idiv
inc
fadd
mov
andl
flds
pop
push
jmp
push
jmp
addl
mov
inc
out
add
mov
outsb
inc
jle
idivb
mov
orl
jb
decl
mov
test
inc
rorb
adc
mov
mov
cmp
test
pushl
mov
add
jmp
pushf
decl
add
data16
add
add
test
inc
mov
mov
inc
cmpb
mov
add
push
mov
call
mov
data16
test
out
lea
test
inc
ljmp
decl
test
incl
test
rclb
test
inc
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
std
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
cwtd
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
jmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
add
lea
push
rolb
xor
lea
test
decl
mov
dec
clc
call
lea
lea
test
popf
push
add
xor
cltd
mov
incl
push
push
inc
shlb
lea
call
test
incl
clc
call
jmp
inc
jae
add
mov
mov
data16
inc
lea
test
inc
dec
test
pushl
jnp
mov
mov
lcall
incl
pop
mov
mov
decl
mov
mov
test
incb
incl
ss
pushf
inc
mov
hlt
test
cmp
lock
test
clc
mov
lahf
lret
mov
add
add
rorb
mov
incl
cld
mov
add
jge
test
sbb
xchg
call
push
inc
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
cld
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
cltd
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
out
adc
jne
mov
fcomps
add
incl
mov
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
add
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
cmpl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
ss
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
cltd
pushf
xor
jne
mov
icebp
icebp
shl
mov
inc
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
cmp
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
testb
dec
mov
mov
xor
mov
in
jge
mov
dec
inc
xor
inc
hlt
ss
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
ss
fdivl
test
push
add
cmp
setns
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
push
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
in
and
or
in
xchg
add
add
push
inc
xor
add
push
push
inc
jmp
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
rol
call
jne
mov
inc
and
fs
bswap
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
cmp
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
idivb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
data16
pushf
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
sti
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
cltd
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
data16
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
jle
popa
data16
into
addr16
add
cmp
add
cld
add
cmp
pop
or
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
pop
mov
je
xor
mov
xor
pop
cmp
jne
mov
cld
push
pop
inc
stc
aaa
test
clc
test
xor
fs
or
decb
lret
aaa
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
data16
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
push
add
add
add
lret
lock
lret
cmp
pushf
jge
aaa
cld
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
cmp
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
cmp
add
data16
dec
fisttps
add
ret
lea
add
ss
call
clc
inc
shll
cltd
push
xor
inc
cmp
jbe
mov
or
inc
test
cmp
in
hlt
push
push
push
push
mov
cltd
cltd
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
cmp
pushf
jb
add
inc
daa
inc
inc
xor
dec
cltd
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
cmp
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
ss
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
ss
pushf
pop
mov
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
incb
cmp
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
ss
pushf
push
movl
inc
cmpb
pushf
addr16
shl
dec
xchg
jmp
aam
test
mov
or
add
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
ss
pushf
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
clc
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
dec
pushf
mov
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
mov
push
ret
call
call
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
cltd
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
leave
call
call
in
jmp
and
call
pushf
inc
mov
pop
push
in
ret
and
mov
and
mov
or
lcall
or
decl
jl
adc
dec
cmp
mov
and
xor
test
jge
push
jmp
adc
dec
pop
ret
push
jmp
mov
add
adc
or
add
add
adc
std
dec
adc
outsb
adc
sahf
xor
add
adc
fs
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
adc
adc
add
push
adc
roll
int
adc
aaa
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
push
adc
sbb
adc
mov
dec
adc
inc
or
add
adc
mov
inc
inc
add
inc
add
inc
add
inc
inc
add
inc
inc
add
push
add
imul
sahf
push
adc
jle
adc
jbe
adc
cmp
add
adc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
adc
dec
dec
adc
dec
popa
adc
adc
add
push
adc
hlt
pop
adc
dec
pop
adc
testl
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
xor
cmp
push
add
push
xor
xor
push
add
inc
pop
dec
push
push
add
pop
aaa
xor
xor
inc
pop
add
cmp
push
cmp
add
cmp
cmp
pop
inc
dec
inc
push
add
xor
xor
inc
xor
xor
xor
dec
xor
add
inc
pop
ss
pop
inc
push
dec
add
push
pop
inc
push
push
push
dec
add
inc
pop
xor
push
pop
pop
xor
push
push
pop
xor
push
dec
xor
xor
xor
inc
pop
pop
xor
push
dec
push
xor
pop
push
xor
inc
add
push
cmp
pop
inc
xor
aaa
xor
pop
inc
cmp
dec
pop
dec
add
pop
push
push
aaa
dec
pop
xor
dec
dec
add
xor
push
pop
push
inc
inc
inc
add
inc
cmp
push
push
pop
dec
inc
push
pop
inc
add
inc
pop
push
inc
pop
inc
ss
push
inc
dec
inc
add
inc
xor
dec
pop
cmp
cmp
push
pop
push
pop
dec
push
dec
dec
inc
pop
dec
xor
push
inc
pop
xor
add
push
pop
inc
push
dec
xor
pop
dec
xor
inc
inc
dec
pop
push
dec
xor
dec
ss
aaa
aaa
dec
dec
add
ss
inc
inc
xor
dec
ss
pop
dec
dec
inc
inc
dec
xor
xor
add
add
add
add
inc
add
dec
add
add
inc
add
add
xor
xor
pop
add
xor
dec
add
pop
add
add
dec
add
add
dec
add
dec
add
xor
xor
pop
add
inc
add
add
push
add
add
pop
add
xor
add
add
dec
add
add
pop
add
pop
add
add
add
add
xor
xor
pop
add
pop
add
pop
add
add
add
dec
add
add
add
push
add
pop
add
xor
inc
add
add
add
add
cmp
push
add
add
dec
add
add
dec
add
inc
add
add
xor
pop
add
add
add
add
add
push
add
xor
pop
add
inc
add
add
push
add
add
xor
xor
xor
xor
pop
add
add
add
inc
add
add
dec
add
add
add
add
add
add
cmp
dec
add
add
pop
add
dec
add
add
dec
add
dec
add
add
inc
push
dec
lock
dec
subl
inc
sbb
add
push
cmp
jne
insl
dec
jb
pop
bound
gs
arpl
js
je
jno
jno
bound
jo
bound
