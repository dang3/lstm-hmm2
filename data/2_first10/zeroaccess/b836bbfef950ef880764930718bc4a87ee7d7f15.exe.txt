push
mov
sub
add
mov
cmpl
movl
not
jmp
movl
not
cmpl
jne
push
call
mov
sub
movzwl
and
add
mov
xor
add
sub
xor
adcl
mov
mov
sub
xor
adc
andl
jmp
jae
insl
mov
and
cmp
add
mov
sahf
adc
sbb
scas
lods
clc
rorb
cs
adc
jno
sbb
mov
and
inc
mov
cld
clc
sub
dec
pop
push
and
fcompl
dec
inc
xchg
lret
xorb
jle
sti
xchg
mov
arpl
jmp
adc
add
mov
and
int
mov
out
in
xchg
cli
pop
notb
pop
movsb
stos
out
movsl
pushf
popf
xchg
dec
cltd
sarb
pop
xchg
cld
pushf
sub
mov
enter
mov
add
or
iret
mov
jns
mov
push
loopne
xchg
out
pop
pop
scas
and
inc
mov
out
mov
and
and
sbb
sub
test
cmp
mov
aam
insl
mov
adc
repz
bound
lods
mov
jbe
stos
inc
js
pushf
pop
cs
inc
jns
ret
jo
inc
lods
xor
mov
xlat
les
add
and
cmp
imul
push
cmp
xor
mov
sbb
cmp
cmpsl
or
push
cmp
sahf
xor
cmp
pushf
add
in
lods
mov
mov
adcl
fsubr
outsl
call
xor
xor
leave
mov
cmp
adc
scas
push
fisubs
dec
aas
xchg
mov
push
ret
inc
lcall
lahf
jge
adc
outsb
push
cmp
pop
shll
pop
jecxz
in
cmp
add
decl
push
testb
daa
insb
hlt
jb
or
xor
rcll
pop
push
je
mov
mov
cmp
cmpsb
sbb
aaa
scas
adc
pop
push
aad
sahf
and
adc
hlt
jo
test
add
mov
repnz
push
cli
xor
xor
sahf
inc
lret
std
aam
jle
ficoms
mov
pusha
jl
in
ljmp
add
jecxz
testb
aaa
inc
push
mul
jae
sbb
loope
mov
fdivrl
and
push
int
test
pop
rolb
cli
daa
inc
xchg
dec
data16
filds
push
pop
mov
dec
push
mov
repnz
jle
int
adcb
jge
ja
popa
cmp
adc
xchg
outsl
sti
mov
int3
stos
add
test
sub
cmc
sub
cmpsb
push
sbb
mov
imul
not
jecxz
cmp
fmul
loopne
pop
inc
icebp
imul
push
cli
add
pop
addr16
ds
int3
in
xor
daa
stos
call
mov
nop
inc
sub
cmp
sarl
xchg
pop
adc
mov
xor
xor
mov
mov
and
repz
mov
movsb
xor
xchg
rcl
movsb
in
insb
and
push
jne
mov
test
push
nop
sub
test
jns
ret
movsl
push
movsb
jp
jg
xlat
xchg
repnz
in
mov
pop
stos
and
icebp
scas
and
and
lret
call
dec
loope
mov
push
mov
adc
insl
sub
dec
ljmp
add
mov
jp
or
mov
xchg
adc
xchg
xchg
and
pop
out
or
fwait
movb
jbe
mov
ret
jbe
dec
mov
push
mov
ret
dec
addl
mov
mov
mov
sbb
mov
mov
mov
and
orl
orl
andl
mov
add
mov
cmpl
mov
movl
mov
mov
jmp
notl
mov
cmpl
jae
push
call
mov
xor
or
sub
or
xor
add
mov
sub
imul
and
or
mov
mov
jmp
outsl
add
das
movsb
out
sbb
jo
adc
sbb
ljmp
xor
inc
fwait
int
mov
cmp
dec
fwait
xchg
sbb
aaa
jmp
pop
xor
orl
adc
cmp
push
or
add
ret
inc
adc
pushf
leave
lock
jns
aaa
fistpll
dec
rorb
mov
mov
and
sarb
mov
or
mov
stos
jnp
enter
and
ss
push
xchg
sub
outsl
or
lock
cli
inc
sbb
mov
and
lds
xchg
cmp
fisttpl
pop
clc
push
fmull
add
lds
or
xor
js
xor
mov
or
add
push
xchg
inc
mov
ja
jle
jl
xchg
and
and
pushf
pop
cli
insb
lahf
mov
sbb
push
test
out
push
inc
push
jo
sub
pop
mov
int3
add
mov
adc
mov
scas
push
movsb
add
xchg
push
shrl
outsb
inc
mov
gs
cmpsb
pop
pop
dec
mov
rorb
sub
sub
test
lea
push
jae
jae
in
sbb
andl
and
loop
cmp
mov
add
mov
out
orl
out
add
add
xchg
mov
ret
int
icebp
jge
out
cmc
xchg
adc
lcall
scas
lods
adc
cs
out
outsb
or
cmp
push
adc
xchg
outsl
or
aam
sbb
push
jl
push
sti
cmc
adc
fbld
mov
pushf
pop
rclb
rcrb
daa
dec
add
sub
sub
jmp
bound
aad
jl
repz
aam
sbb
cs
sub
xor
push
dec
fidivrs
aas
pop
cmpsl
and
hlt
dec
jbe
xor
mov
pop
fucomi
mov
cmp
sti
and
lods
pop
incb
mov
jbe
dec
pop
pop
jb
ss
sti
cmp
inc
adc
push
push
xchg
cmp
std
or
add
rcll
push
add
adc
mov
rcll
jns
xorb
push
dec
add
sub
std
lcall
jle
pop
aam
add
pusha
cli
dec
dec
push
xchg
xchg
xchg
out
xchg
divl
out
mov
lahf
sbb
or
bound
or
enter
xor
pop
xchg
ret
aad
sarl
popf
mulb
sti
pop
adc
and
lock
js
sarb
test
in
adc
aad
or
loope
outsb
mov
inc
pop
sti
adcb
stc
lods
sarb
fucomp
pop
push
jno
add
lea
ret
aas
movsb
or
adc
dec
lock
xor
jne
adc
loopne
jae
push
dec
lret
pop
add
cmp
adc
or
rorb
dec
loop
nop
sbb
jnp
and
sbb
jns
jne
in
in
inc
pop
in
arpl
sbb
inc
sbbl
xor
sub
gs
mov
pop
mov
lcall
push
jecxz
adc
and
xchg
fs
data16
xchg
add
sub
or
stos
lods
icebp
fidivl
cmp
mov
mov
sbb
cmpl
notl
mov
mov
jmp
movl
not
cmpl
jge
push
call
mov
adc
and
add
mov
xor
and
mov
mov
sub
mov
orl
sbb
orl
adc
lea
mov
movl
mov
cmpl
mov
movzbl
mov
jmp
not
mov
cmpl
jg
push
push
pushl
push
call
adc
sbb
neg
adc
sub
addl
xor
mov
mov
add
sub
mov
mov
inc
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
jg
push
push
push
call
sub
or
sub
mov
adc
mov
xor
mov
shrd
cmpl
mov
movl
movl
jmp
movl
cmpl
jge
pushl
pushl
push
call
movzwl
and
mov
and
add
sub
add
or
shr
mov
cmpl
movl
mov
movl
jmp
mov
mov
cmpl
je
pushl
pushl
pushl
push
push
call
sub
movzwl
add
add
sbb
incl
mov
xor
xor
orl
or
jmp
xchg
xchg
je
insb
sub
dec
and
loope
jle
or
sbb
cmp
stc
fcmovnbe
dec
mov
xorb
stos
in
mov
pop
push
lret
inc
std
adc
or
shl
or
inc
out
int3
dec
scas
outsb
outsl
loope
mov
pop
fwait
cmp
das
ret
push
mov
cmpl
pop
and
jno
popa
fwait
pop
in
std
sub
mov
les
je,pt
ljmp
js
mov
sti
fsubrs
push
outsl
mov
fsubrl
bound
lret
mov
inc
mov
adc
xchg
pop
inc
add
jbe
mov
xor
or
jl
test
push
jb
xchg
push
repz
xchg
xlat
loopne
aad
clc
push
push
cmp
lret
mov
popf
repnz
loop
mov
lret
outsb
mov
push
push
ret
shrb
add
ret
int
add
and
adc
mov
xchg
push
jle
popf
and
pop
lret
lds
imul
adc
mov
hlt
int3
sub
jl
ja
dec
jle
pushf
mov
rcrb
out
cmc
adc
pop
mov
in
sub
xor
push
popa
addb
int
mov
pop
lock
jmp
sub
or
add
enter
or
subb
pop
pop
xchg
das
lahf
fs
pop
pop
movsb
ss
mov
xor
add
pop
dec
nop
xchg
or
xor
loope
push
sbb
pop
mov
add
data16
jns
nop
mov
add
cmp
inc
and
aam
imul
data16
lcall
inc
push
cmpsl
dec
loop
lea
xchg
mov
pop
xorl
adc
mov
xchg
ret
mov
jno
adc
inc
or
out
je
jl
sbbb
dec
mov
repnz
pop
outsl
out
mov
or
jb
sub
clc
mov
jp
adc
sbb
cwtl
lods
cmp
stc
push
enter
add
rclb
roll
out
hlt
idiv
out
xchg
lods
pop
lret
aam
cwtl
jbe
or
inc
js
clc
adc
fcomi
pop
test
pop
xchg
loop
sbb
cltd
pop
movsb
iret
dec
pop
push
inc
orl
int3
jge
arpl
lret
shrb
jmp
stc
dec
add
mov
cmc
fwait
ss
dec
dec
std
xor
cltd
cmp
scas
push
js
pushf
roll
js
sbbb
fcoml
scas
inc
push
cmp
insb
cmp
mov
sub
xchg
shl
lcall
cmp
mov
mov
sbb
inc
lods
cmpsl
aaa
mov
stos
xchg
xor
jne
mov
xchg
inc
insb
mov
addr16
push
add
cmp
pusha
jo
jl
push
repz
fidivrs
or
push
cmc
adc
lods
pop
sti
leave
in
loope
inc
add
add
mov
sub
push
test
loopne
in
push
mov
xchg
out
fwait
mov
adc
rorb
in
cwtl
xor
jmp
pmaxub
jns
ret
repnz
out
std
js
mov
mov
inc
xchg
xchg
add
jp
xor
jne
mov
fbstp
testl
and
out
out
jae
sbb
mov
and
adc
sarb
stos
fdivp
mov
movl
mov
adc
movl
cmpl
movl
movl
jmp
mov
mov
cmpl
jbe
pushl
push
call
orl
xorl
addl
and
movl
subl
movl
cmpl
mov
movl
mov
movl
jmp
mov
cmpl
ja
push
pushl
push
call
sbbl
xorl
adcl
addl
andl
sbbl
sbbl
sbb
movl
neg
movl
movl
movl
mov
add
movl
mov
add
movl
cmpl
movl
notl
jmp
movl
mov
cmpl
jle
push
pushl
push
pushl
push
pushl
call
adcl
addl
subl
orl
mov
xor
movl
xor
jmp
stos
fisttpll
aas
and
mov
stos
add
sbb
mov
insl
scas
ljmp
pop
fs
ljmp
cmp
mov
sbb
fs
xor
or
dec
pop
ljmp
inc
adc
inc
fistps
loope
outsb
and
repz
mov
pop
insl
lods
aam
cmp
pop
into
loop
pop
loopne
aas
cmpsl
inc
mov
lahf
call
lods
jb
push
jae
mov
fwait
or
or
ret
add
mov
daa
jns
imul
pusha
adc
hlt
mov
rcrb
int
sarl
loopne
xchg
inc
bsf
fwait
jnp
aaa
fwait
sbb
gs
pop
addr16
push
rep
and
es
es
and
xchg
xchg
push
add
iret
dec
int
mov
loop
mov
jns
jo
xchg
pop
iret
xor
clc
fistpl
rorb
push
and
mov
js
aad
mov
jge
xchg
aam
mov
aam
test
popa
push
sbb
rolb
testb
pop
sub
shll
sub
mov
and
or
in
inc
jno
pop
shrl
pop
inc
pop
test
in
dec
ret
pushf
imul
movsb
mov
loopne
out
add
in
jb
and
mov
jns
dec
xor
add
or
in
ss
loop
out
cltd
cli
rorl
mov
push
movsl
jp
ja
stc
call
imul
outsl
cmp
sub
insb
addr16
jp
jecxz
cmp
cmp
data16
idivb
into
mov
xlat
dec
xchg
or
in
xor
ret
shlb
ficoms
mov
imul
in
sub
outsb
xchg
int
loop
adc
push
neg
xor
shl
adc
cmc
jnp
mov
mov
pop
data16
stos
adc
dec
mov
aad
leave
or
cmpsb
aam
mov
adc
sub
xor
adc
jo
push
mov
addl
sbbl
and
sub
leave
jb
aam
sbb
mov
les
mov
enter
dec
lea
dec
incb
sbb
mov
jmp
enter
jns
arpl
fs
and
xor
loopne
xor
loopne
inc
mov
mov
imul
jmp
test
out
test
les
cmpsl
mov
dec
sbb
inc
lds
lret
xor
mov
ljmp
push
push
jo
je
stos
pop
xchg
bound
push
ljmp
jb
mov
int
mov
les
sahf
or
xchg
shlb
stc
cmc
push
mov
fbstp
cwtl
fisttps
adc
fbstp
or
add
in
push
pop
cmp
repz
fistpl
test
xor
outsb
sub
cwtl
pop
rcl
mov
jp
into
mov
rclb
daa
xchg
xchg
adc
and
pop
loop
out
lock
push
dec
push
mov
ret
inc
add
jbe
pop
ret
lds
and
ja
lods
mov
and
mov
pop
int
aas
jecxz
adc
mov
in
sbb
fidivrl
inc
nop
jb
add
movzwl
adc
movl
adc
movl
cmpl
movl
mov
movl
jmp
mov
mov
cmpl
ja
pushl
push
push
push
call
sbbl
adcl
subl
andl
addl
movl
sub
movl
movl
addl
movl
movl
cmpl
mov
mov
mov
movl
jmp
mov
mov
cmpl
jg
pushl
push
push
push
call
addl
subl
xorl
decl
and
or
mov
and
movl
movzwl
sbb
movl
or
movl
adcl
movl
mov
decl
shl
not
mov
jmp
out
repz
cmp
pop
and
push
cld
sbb
sahf
adc
sbb
arpl
movb
int3
and
jecxz
testb
adc
in
xor
and
cltd
dec
cmp
sti
rcr
sbbb
xor
test
imul
mov
add
mov
mov
lahf
nop
sbb
cmc
add
xchg
sahf
dec
flds
dec
sbb
scas
mov
out
mov
stos
cli
jecxz
hlt
inc
ficoml
and
out
fsubl
mov
add
dec
rcr
popa
cli
and
push
dec
ljmp
pop
roll
add
sub
xor
xorb
mov
gs
mov
scas
sahf
xchg
loopne
cmp
imul
xchg
das
xchg
mov
lcall
icebp
sub
sbb
outsb
out
jae
in
sub
lfs
jmp
sti
pop
xchg
repz
in
add
lahf
inc
xchg
test
je
int3
dec
subl
aam
or
xchg
jne
and
jns
leave
push
inc
gs
mov
mov
xchg
pop
cmp
sub
jecxz
imul
ja
loope
fistpl
loopne
sbb
sub
imul
call
frstor
ret
adc
inc
fcmovbe
xchg
insb
subl
cs
mov
push
xorb
pop
or
add
scas
insl
sbbb
mov
adc
clc
addr16
adc
cmc
rorl
mov
or
mov
addr16
dec
fistpll
xchg
mov
add
pop
dec
movsl
jge
and
sbb
insl
cmovl
xchg
ret
pop
pop
and
cmp
cwtl
sub
es
adc
sub
jb
add
lds
mov
loopne
movsl
lahf
xchg
in
sub
inc
fstpt
sbb
push
mov
cltd
cmp
mov
lcall
repz
and
sub
xchg
mov
jg
xchg
push
cld
rcll
aad
shl
cli
inc
push
call
add
hlt
iret
aad
xor
mov
arpl
mov
mov
mov
jge
popa
push
xchg
nop
popa
mov
mov
fsubs
mov
movsl
fdivr
test
mov
jns
gs
outsl
movsl
jbe
or
iret
jp
notl
jmp
std
std
or
jnp
jl
dec
mov
mov
sub
call
jmp
adc
aas
push
sbbl
call
dec
lods
add
ds
sti
fsubl
ja
adc
adc
lret
mov
sub
in
fildl
xchg
sub
dec
cmp
test
sbb
icebp
mov
xchg
fdiv
ds
out
stc
outsl
stc
mov
stc
fbstp
cltd
push
push
xlat
mov
lret
sub
mov
outsl
in
out
mov
jo
push
cmp
scas
sbb
xor
jg
lahf
aam
cmp
cmpsl
jbe
mov
add
jmp
or
and
outsl
ret
fs
pop
push
imul
add
notb
push
mov
cmpsl
aas
pop
jp
loope
sahf
imul
stc
shlb
insb
outsl
cmp
pop
and
arpl
enter
dec
iret
adc
lds
dec
and
push
inc
in
ret
in
xchg
sbb
dec
jno
les
or
ja
inc
add
inc
add
push
call
mov
not
mov
cmpl
mov
movl
movzwl
jmp
mov
cmpl
jb
pushl
call
mov
add
movl
adc
mov
sbb
mov
xor
and
xor
mov
xor
mov
addl
sub
mov
mov
and
mov
orl
lea
mov
mov
sbbl
or
addl
jmp
nop
movsb
call
int
cmpl
stos
mov
sbb
sahf
adc
sbb
xor
mov
gs
and
mov
jnp
repnz
shrl
scas
pusha
sub
mov
sub
std
std
push
adc
mov
div
jecxz
cmp
pcmpeqw
sahf
mov
jae
pushf
mov
aad
stos
stos
jecxz
cmpsl
xor
pop
cmc
mov
icebp
into
sub
pop
or
mov
lods
dec
ja
pop
mov
mov
push
and
xchg
cmpsl
fnstsw
lret
push
das
xor
bound
out
in
in
jns
mov
mov
mov
add
pushf
push
inc
movsl
pop
cmp
mov
fidivrs
notb
sbb
ret
mov
push
fsubp
mov
iret
push
clc
xchg
cli
xor
adc
fcmovnbe
imul
jns
jns
jne
xchg
mov
rcl
popl
shl
lret
pushf
lods
or
cmpsb
or
std
sti
in
mov
out
dec
mov
cli
inc
sbb
pop
mov
loopne
ret
arpl
adc
mov
cwtl
or
jmp
mov
or
lahf
xorb
pop
cmp
sub
xor
xor
xchg
lock
jecxz
out
jne
jecxz
in
cmp
ljmp
xchg
mov
pop
lcall
add
loopne
aam
sahf
cli
mov
sub
repz
jne
cmc
fists
mov
or
and
adc
or
mov
insl
arpl
clc
aaa
cli
cmp
xlat
add
lock
pushf
in
sub
jnp
cmpsl
out
gs
pop
test
pop
pop
pop
aam
mov
inc
ja
push
mov
add
int3
cmp
lods
loop
sbb
fwait
ja
addr16
ror
jle
pop
std
loope
pop
leave
jns
push
cmp
insb
sbb
add
and
fucomip
outsl
push
addl
add
fists
dec
loope
sarb
fistpll
xchg
shrb
or
mov
outsl
jne
or
inc
stos
jns
jge
mov
pop
sahf
cmp
push
jns
and
outsb
ss
or
scas
dec
scas
cmpsb
out
and
cmp
test
imul
xor
sub
ljmp
je
scas
jmp
test
pop
sti
lods
jnp
cld
adcb
pop
pop
repnz
sub
les
mov
inc
cld
scas
insl
or
cwtl
std
mov
repz
mov
mov
jmp
adc
das
repnz
pop
gs
add
ret
mov
and
mov
mov
sbb
js
pop
outsb
pop
jno
mov
outsl
sbb
and
push
lds
movsl
sbbb
push
jg
xchg
sbb
jns
cmp
pop
sti
push
ret
mov
movsb
lods
add
in
mov
xor
out
dec
gs
xchg
xchg
rolb
adc
lds
insl
addr16
inc
in
cmp
mov
adc
sahf
lcall
pop
lcall
xor
cmp
add
push
adc
xor
mov
test
xchg
ret
rcll
loopne
rorl
fnstenv
xchg
inc
xor
xchg
pop
xchg
add
stc
lds
xchg
sbb
bndldx
add
mov
or
xor
cmp
movl
jne
mov
cmpl
mov
movl
mov
jmp
movl
not
cmpl
jl
pushl
pushl
call
movl
incl
or
add
sub
add
sbb
mov
sbb
shrd
shr
mov
xor
mov
negl
shl
xor
xor
sbbl
or
jmp
and
push
repnz
inc
sarb
jo
test
mov
sahf
adc
sbb
stos
arpl
in
adcl
xchg
or
dec
cmp
sub
pop
fmulp
fnstsw
xchg
scas
push
scas
cs
inc
pop
out
jo
in
mov
sub
cmc
movsb
in
dec
dec
inc
add
or
pop
dec
inc
dec
adc
and
xchg
push
insb
push
loope
and
ljmp
insb
push
nop
adc
mov
or
jo
sbb
in
push
js
adc
push
aas
lods
push
icebp
cmp
andb
jns
test
and
pop
les
mov
aas
mov
insl
fsubl
cmp
dec
cmp
ret
call
movsb
insl
mov
in
lds
mov
ret
hlt
es
xorb
or
mov
mov
aaa
xchg
inc
mov
mov
xor
jo
clc
je
leave
test
push
arpl
mov
jge
out
test
addr16
movsl
ja
out
lock
mov
and
xchg
sbb
dec
sbb
ds
in
and
aad
dec
sub
mov
out
mov
jb
fcmovbe
inc
popa
xchg
rorb
mov
xor
clc
xchg
xor
xlat
add
outsl
add
stc
xchg
cmp
xchg
inc
and
loopne
in
or
mov
cmp
push
sbb
rclb
mov
cltd
call
insb
loopw,pn
dec
jge
cmp
inc
jp
sbbb
je
push
cmp
sbb
subl
xchg
pop
loop
stos
sbb
stc
mov
ljmp
jbe
clc
sub
out
mov
push
mov
and
loop
mov
jle,pn
test
out
cmpsb
cmpl
je
icebp
repz
daa
xchg
cmp
out
adc
push
shll
lret
add
jb
xor
xchg
adc
leave
fstpt
adc
aam
call
push
jne
mov
and
cli
add
xor
add
push
mov
sbb
push
inc
and
leave
jg
scas
scas
jl
lret
mov
dec
mov
movb
or
cwtl
call
lds
inc
clc
or
pop
mov
loope
fcoml
dec
dec
xchg
test
xor
or
jp
jnp
add
lahf
add
and
xchg
push
xor
out
outsb
ret
lea
nop
adc
mov
js
notb
and
adc
cmc
lods
cltd
xchg
sub
rolb
xchg
aam
sarl
jp
and
mov
es
push
mov
ja
mov
clc
cwtl
aaa
add
xlat
cmp
mov
out
cmp
insl
mov
mov
pop
sub
mov
sbb
insb
jle
fwait
aad
push
mov
mov
loopne
test
scas
pop
lret
jb
jg
mov
xlat
mov
jne
sub
inc
popf
out
jp
jg
or
add
jbe
js
jmp
sbb
mov
sbb
rorb
cmpsl
add
movsb
or
fwait
imul
mov
dec
fdivl
dec
in
sub
sub
or
add
in
into
fsub
inc
in
inc
sbb
cli
imul
xchg
aad
mov
arpl
stos
fsub
lret
outsl
pop
or
out
andl
loop
ret
dec
sti
stc
mov
cmp
movl
jne
jmp
sbb
fldt
sbb
or
stos
fstpt
in
sbb
xchg
and
cltd
out
stos
cmp
jg
ss
cltd
stos
imul
cmp
lret
mov
faddl
sbb
xor
in
out
dec
cs
ja
mov
rcrb
mov
mov
xchg
pop
sub
scas
pop
inc
adc
xor
mov
js
daa
sub
dec
lods
push
in
stos
popf
cmp
push
mov
pop
arpl
and
outsl
push
add
or
xlat
out
mov
mov
nop
jb
sub
pop
dec
xor
and
jb
pusha
pop
adc
xor
xchg
lds
or
dec
test
iret
rorb
scas
rclb
mov
sub
fldenv
inc
dec
pop
add
sbb
popa
mov
ret
int3
mov
stos
xchg
aaa
push
lea
out
fisubs
push
mov
ljmp
inc
shl
das
xchg
xor
pop
lret
add
mov
xor
sub
add
callw
xlat
jb
aad
sub
cmp
int
jo
das
jae
xchg
ret
mov
in
test
inc
shrb
add
mov
fisubrl
add
js
mov
fnstsw
dec
ret
je
cmp
popl
inc
mov
push
mov
in
inc
push
sbb
sub
data16
cli
shll
loopne
push
jns
mov
add
xchg
outsl
xchg
rcll
or
push
pop
daa
push
cmpsl
push
int
push
jae
ret
shll
mov
icebp
inc
jno
into
enter
out
in
enter
fsubl
pop
mov
and
xchg
aas
adc
iret
inc
mov
jno
pushf
jb
sbb
stc
xlat
aas
jb
pop
jnp
sarl
mov
in
or
arpl
sub
jno
sti
fiadds
testb
xchg
cmpsb
mov
jle
ds
push
push
out
mov
pop
arpl
shlb
out
jo
rolb
repz
fwait
add
test
rcrb
mov
cltd
or
cwtl
mov
dec
or
pop
mov
nop
in
pop
ficomps
push
push
mov
xchg
pop
mov
xor
inc
jo
popf
xor
es
cmpsl
in
mov
mov
add
movsl
push
imul
push
cmp
cli
ljmp
push
std
cmp
jecxz
adc
sbb
and
popf
repz
xchg
test
jp
outsl
jle
sub
mov
add
push
leave
into
push
or
int
inc
add
or
cmp
sbb
cmp
roll
push
add
mov
sub
push
add
scas
aas
neg
clc
out
xchg
sbb
jns
aaa
mov
xchg
repz
stc
pop
int
or
addr16
cmp
sub
mov
insl
mov
icebp
inc
lea
cmpsl
out
xor
repnz
jns
adc
movsb
repnz
xor
test
push
idiv
inc
insl
cwtl
and
or
ret
push
push
imul
aaa
inc
add
xor
cmpsl
adc
add
fmull
cmpb
repz
rolb
cmp
mov
ja
enter
cmc
pushf
rolb
push
je
mov
fists
sbb
popa
cmc
cltd
dec
push
cmpsl
sub
adc
pop
xor
adc
lret
push
fdiv
xchg
pop
shll
cmpsl
sbb
inc
addb
notl
mov
jmp
not
cmpl
jne
pushl
call
xor
negl
xorl
andl
sbb
or
mov
cmpl
movl
mov
jmp
mov
cmpl
jbe
push
push
call
adcl
sbbl
mov
or
xor
add
adc
mov
xor
orl
mov
mov
and
mov
orl
shrd
mov
adc
mov
xor
adcl
shr
orl
mov
sbbl
xor
orl
or
subl
shl
subl
sub
cmpl
movl
mov
jmp
mov
cmpl
jne
push
call
mov
xor
xor
sub
or
sbb
xorl
xor
sbbl
orl
mov
cmpl
mov
mov
movl
jmp
movl
movl
cmpl
jle
push
call
and
adc
or
add
add
mov
xorl
mov
add
jmp
and
fdivrl
xchg
mov
dec
fistps
sbb
loope
push
jge
popa
fdivrl
or
adc
out
pop
sbb
enter
sub
push
xchg
add
push
out
pusha
mov
mov
pop
mov
scas
jne
inc
outsb
add
and
sbb
jmp
lods
fnstenv
push
repnz
mov
add
stos
in
cmpsb
outsl
pop
jl
jae,pn
cmp
pop
cli
push
call
mov
and
ljmp
fidivl
dec
negl
inc
lret
mov
out
in
jae
pop
and
jno
inc
repnz
dec
enter
mulb
fstps
add
and
and
aas
push
inc
and
jns
mov
cwtl
push
testl
pop
pushf
xchg
rcll
adc
in
call
test
out
pop
and
fldenv
pop
adc
cmp
pop
mov
sbbb
jns
daa
xchg
fwait
adc
test
sub
mov
and
jne
adc
inc
xor
arpl
add
es
sti
mov
sbb
iret
sub
and
lds
mov
fdivr
mov
push
dec
xchg
jo
mov
cltd
dec
sbb
push
mov
add
jbe
jmp
iret
mov
pop
cmovl
push
pusha
push
add
cmpsb
mov
std
cmp
mov
jnp
test
repz
ljmp
jne
jp
testl
scas
test
std
sub
scas
test
das
mov
in
jge
push
jle
adc
ss
mov
cwtl
adc
xchg
out
xor
into
movsl
movsb
in
push
ljmp
les
jecxz
aad
lods
xlat
data16
mov
gs
fs
sbb
xchg
rcl
sub
mov
cltd
cltd
push
cmp
mov
enter
in
xor
adc
dec
das
push
pop
xor
mov
sbb
sub
dec
xchg
mov
in
push
addr16
xor
push
or
test
fadds
test
dec
movsb
xchg
mov
pop
inc
pop
dec
sti
sbb
das
lods
repz
mov
lret
imul
jl
xchg
xchg
test
int3
aaa
mov
aad
mov
lahf
test
mov
fxch
jo
sbb
push
lods
loopne
and
xchg
mov
push
cmp
pushf
xlat
xchg
jbe
inc
iret
ret
rep
xchg
cld
fists
mov
test
cmpl
insl
sahf
add
pop
jecxz
xchg
adc
pop
pop
roll
imul
and
icebp
and
stos
js
movsb
mov
insl
ds
mov
cmp
sar
adc
cmp
mov
jmp
add
mov
jl
push
push
add
in
imul
loop
jg
lods
ret
pop
mov
sub
jae,pn
ficomps
lods
sub
imul
xchg
ss
pushf
cli
sub
shlb
sub
leave
xchg
push
and
scas
cli
xchg
in
das
clc
sub
cmp
pop
add
testl
mov
test
out
int3
pop
scas
push
jecxz
lods
das
inc
shrl
xor
and
dec
sub
sbb
mov
mov
mov
mov
mov
add
shrd
sub
shr
and
mov
andl
jmp
subl
and
sbb
push
xlat
sbb
sahf
adc
sbb
ljmp
dec
add
ret
mov
add
outsl
push
inc
int
shl
aam
insl
pop
mov
adc
mov
add
xchg
xchg
cmp
xor
shrb
push
mov
push
shll
mov
xchg
pop
pop
cli
lret
hlt
or
lea
fidivrs
popf
lcall
js
outsb
adc
cmp
loopne
ja
in
out
outsl
int3
in
rorb
and
out
sbb
outsl
cmp
ja
jnp
test
test
jne
aaa
nop
out
fs
imul
adcb
notl
filds
mov
out
push
test
in
sbb
movsl
clc
cmp
scas
pop
out
lcall
adc
xor
jecxz
xchg
rcrb
ljmp
ljmp
in
pusha
lock
jb
xchg
jle
mov
cltd
jecxz
xor
js
mov
fisubrs
into
fcmovnb
sahf
stc
sbb
xchg
xor
cmpsl
fcoml
incb
fcomps
imul
enter
ret
roll
dec
ficoms
cmp
insb
xchg
and
jl
xchg
adc
push
sbb
rcll
sub
push
cmp
jne
sarb
cli
add
cli
jg
out
or
inc
xor
lret
int
inc
xor
aaa
mov
xor
out
cwtl
jmp
pop
in
xchg
cmpb
push
pop
std
mov
fistpl
jmp
aas
add
in
fimuls
push
dec
ljmp
mov
lods
out
add
push
xorl
sbb
popf
jne
repnz
ljmp
cmp
daa
dec
cmp
xchg
mov
mov
clc
rcr
xor
add
or
xchg
cld
movl
es
xchg
fs
add
xor
test
test
push
jl
mov
jnp
xchg
out
or
movsl
and
jecxz
aaa
dec
lea
sti
sub
inc
and
lods
lock
out
out
daa
mov
jl
jno
out
lret
clc
push
pusha
je
mov
pop
adc
inc
arpl
stos
mov
xchg
and
pop
dec
pop
mov
stos
sbb
cmpb
out
jg
xor
cmp
push
inc
cmp
pop
push
inc
cmp
xor
mov
stos
mov
jbe
xchg
mov
bound
repz
sbb
add
sub
xchg
jle
lret
mov
out
std
rorl
jno
imul
cmp
dec
jl
or
and
and
inc
mov
iret
int
cmpsb
mov
cmp
or
cwtl
pop
jl
fidivrl
shl
mov
jp
aam
fisttpll
mov
xchg
dec
lods
xor
les
xrelease
out
fsubrs
stc
aam
stc
dec
dec
popf
in
cmpsl
mov
mov
push
or
push
jg
cwtl
push
cmpsl
add
jbe
push
xchg
sahf
out
pop
out
int3
roll
cwtl
xor
lea
jae
fdivrl
rcrl
shrb
enter
out
sahf
js
ret
and
xor
lds
out
pop
mov
inc
mov
push
add
xor
mov
in
push
fs
inc
mov
lea
adc
out
test
push
mov
and
xor
or
shl
and
xor
mov
and
or
mov
movzbl
sbb
mov
jmp
xchg
xchg
lcall
stos
out
jmp
push
iret
sbb
sahf
adc
sbb
std
ss
test
movsl
dec
mov
mov
lret
leave
sahf
dec
add
cmpsb
stos
clc
xchg
adc
push
mov
lock
jmp
fcmove
mov
xchg
stos
mov
add
add
mov
cmp
mov
in
bound
fcomps
nop
addl
subl
lea
xchg
sub
nop
push
fsubrp
loop
jecxz
movsl
icebp
test
push
out
in
test
nop
adc
in
es
xor
sbb
push
lea
pushf
mov
jle
inc
subl
pop
add
or
xchg
pusha
nop
xchg
jns
cmp
xchg
aad
push
cmp
jp
outsb
out
pop
stc
inc
mov
in
jp
out
mov
outsl
jmp
fwait
mov
sarb
push
push
adc
xor
or
inc
push
and
inc
jp
into
dec
mov
mov
jge
insl
inc
dec
rolb
sahf
cmp
mov
adc
inc
push
into
stc
mov
add
arpl
scas
lcall
pop
pop
stc
insl
shl
pop
add
add
mov
cs
lods
rcrl
lret
dec
andl
aaa
push
adc
add
stc
mov
rcl
shrl
mov
pop
andb
jbe
and
iret
out
mov
jno
test
mov
jge
mov
int
or
add
xchg
pusha
shll
repz
shlb
inc
mov
pop
fbstp
fistpl
mov
adc
jnp
lret
in
not
xchg
push
jb
insb
sbb
xchg
fnstcw
fdiv
mov
imul
push
push
movsb
fst
ja
xchg
in
and
add
leave
out
inc
ds
arpl
push
sub
lret
push
cwtl
loopne
and
test
pop
xor
ljmp
mov
add
mov
or
icebp
add
stc
sub
pushf
xor
in
adc
jp
adc
iret
jl
mov
loop
cmp
or
push
and
loope
sub
adc
xchg
rclb
xor
enter
sbb
cmp
dec
and
lods
dec
out
mov
dec
jle
sub
pop
test
cwtl
mov
nop
xor
test
into
shlb
add
call
out
cld
shlb
test
fisttpl
push
mov
add
push
jl
and
jbe
adc
mov
out
mov
leave
subl
dec
and
mov
sbb
xchg
scas
pushf
je
imul
sti
movsb
xorl
sbb
mov
mov
shrb
std
test
and
jbe
xlat
or
cmp
lret
ret
jns
jle
stos
push
add
pushf
rcll
out
fcmovb
sahf
shld
inc
xchg
frstor
ficoml
test
inc
mov
lock
insb
inc
icebp
mov
cmpsl
aas
mov
or
sub
imul
scas
jge
out
mov
inc
sbb
lods
pusha
mov
stos
cmp
cs
or
lea
add
mov
inc
aas
pop
insb
sbb
mov
inc
cmpb
sbbl
dec
add
por
mov
dec
mov
mov
mov
gs
shlb
xor
fwait
mov
lods
roll
orl
shr
mov
or
mov
jmp
add
lea
fcompl
pop
or
mov
fcmovnb
sbb
sahf
adc
sbb
out
sub
mov
and
ss
push
push
call
inc
aam
and
xchg
xchg
pop
mov
sub
or
xor
insb
push
mov
cmp
test
stos
push
bound
adc
jle
mov
inc
das
addr16
loope
or
jge
scas
and
sbb
push
mov
mov
dec
mov
int3
mov
jb
inc
or
cmc
jp
stos
cs
inc
pop
dec
cmpsl
into
mov
repz
and
addr16
push
icebp
and
xchg
add
jmp
adc
mov
adc
push
adc
sbb
mov
daa
mov
imul
sbb
xchg
mov
xchg
stos
aad
repnz
loopne
andb
dec
jno
cwtl
lret
nop
ja
dec
push
call
or
imul
out
inc
orl
popf
popf
cmpsb
push
inc
ja
sub
and
add
xchg
outsl
adc
jae
enter
mov
fisubs
and
rorl
pop
push
dec
repnz
mov
and
ds
cli
inc
adc
andl
roll
and
cmp
lds
mov
ds
lods
ror
repz
outsb
adcl
lret
movsl
sbb
ljmp
xor
adc
cmc
insb
insl
mov
jae
call
jge
loop
andl
inc
mov
imul
xor
xor
imul
xchg
lock
lds
push
enter
xchg
test
push
loope
jmp
pop
or
sub
out
js
inc
cmp
testb
mov
or
movsl
fmull
aaa
fnsave
mov
lods
dec
outsb
sarl
mov
rclb
nop
or
ret
ds
jae
cld
cmpsl
and
sbb
jmp
jmp
js
mov
lock
sbb
xchg
inc
push
std
inc
mov
add
jnp
and
mov
mov
sbb
sbb
mov
xchg
push
jl
mov
sbb
xorb
clc
icebp
arpl
push
popa
bound
xchg
xor
out
or
stos
sub
outsl
push
jp
outsl
mov
ss
mov
dec
and
fcom
xchg
lds
adc
cmpsb
push
out
inc
or
lock
jo
add
cli
push
lret
movsb
dec
not
movsl
movsb
jmp
sti
push
dec
test
mov
lods
mov
ror
pusha
ljmp
push
pop
and
and
dec
popf
ret
jmp
dec
jp
or
pop
inc
fstpl
sub
push
jge
jecxz
xchg
iret
xchg
in
js
fildll
jns
xchg
notl
mov
cmp
lcall
xor
push
mov
and
popa
loop
sbb
gs
icebp
daa
lods
repnz
pop
ja
into
pushf
pop
ficoml
cmp
nop
pop
xchg
imul
cmpsb
ficompl
add
adc
iret
int
jb
jnp
add
sub
fwait
mov
add
and
fstpt
xchg
inc
sub
push
out
pop
movsb
xchg
xchg
pusha
int3
or
lods
iret
mov
mov
xor
addl
xor
jmp
scas
ds
and
sbb
fsubrp
push
stos
fwait
dec
push
stos
pusha
rcrl
sahf
adc
sbb
push
sub
mov
push
add
inc
rcr
mov
and
sub
repz
mov
enter
xchg
nop
cmp
jecxz
and
jge
scas
push
mov
rolb
imul
movsl
dec
cwtl
xorl
mov
ljmp
fldl
sti
dec
lret
stc
fisttpl
jbe
loopne
ljmp
out
cmp
cs
test
into
fs
sub
xchg
or
adc
leave
adc
sub
dec
cmp
sbb
hlt
or
mov
cld
jno
incb
dec
adc
call
xor
outsl
lcall
movsb
add
mov
xchg
mov
jns
addr16
add
dec
xchg
stos
sub
stc
push
or
jl
pop
es
xchg
or
push
push
fisubl
mov
icebp
jle
in
push
add
jbe
filds
cmc
cmp
jecxz
mov
cltd
push
test
xor
dec
ret
mov
jno
pushf
dec
sub
ljmp
loop
cmp
mov
mov
fcoms
sbb
test
xchg
sbb
xchg
int3
dec
es
shr
mov
cmp
and
into
aaa
xchg
mov
fcompl
ret
es
cmp
pop
inc
inc
in
fidivl
jbe
xor
jp
inc
cmp
inc
or
cmp
add
push
jnp
testl
inc
aas
fistpl
xchg
jns
mov
aas
ds
cltd
mov
and
mov
mov
out
mov
lret
test
jb
popf
add
mov
cmp
in
inc
int3
movsb
insb
inc
andb
sub
subps
subb
xchg
sbb
fwait
ss
mov
push
add
or
adc
cmp
clc
xor
xor
cmp
test
mov
mov
loop
push
in
in
stc
inc
push
imul
sub
ss
mov
je
jmp
pop
nop
fs
stos
adc
mov
mov
fisttpl
push
test
insl
sbb
test
mov
mov
loopne
push
popa
movsb
jns
mov
pop
mov
adc
shr
in
mov
mov
loop
incb
aas
mov
mov
push
les
arpl
ds
mov
mov
mov
movb
lret
sub
mov
cld
mov
call
mov
push
sbb
dec
in
sub
cwtl
les
movsb
adc
or
xchg
gs
mov
dec
and
xchg
inc
icebp
dec
push
mov
add
bound
xchg
sbb
mov
jg
mov
ret
rclb
mov
stc
mov
stos
fistpl
repz
stos
xchg
mov
in
mov
jmp
jge
lret
lock
das
cmpsl
ret
and
gs
fdivrs
pop
mov
ds
pop
lret
fcmovnbe
stos
cld
xchg
add
mov
push
and
aam
or
add
fwait
xor
xchg
lods
movsb
and
ja
shrl
cmc
out
xchg
fwait
cmc
mov
out
cli
lret
xor
xchg
or
sbbl
shl
lea
adc
mov
or
mov
movl
shrd
adcl
shr
cmpl
mov
movl
movl
jmp
mov
movl
cmpl
jg
push
pushl
call
and
sub
orl
adcl
mov
mov
add
xor
xor
xor
mov
add
mov
mov
add
mov
sub
mov
xor
mov
xor
addl
or
subl
shl
and
imul
mov
mov
shrd
sbbl
mov
sbbl
mov
adcl
xor
shr
adc
mov
mov
xor
movl
or
adcl
shl
orl
sub
mov
movl
cmp
not
mov
movl
jg
mov
xor
mov
sbbl
shrd
sbbl
mov
mov
xor
orl
shl
xor
andl
or
shr
or
mov
mov
cmpl
mov
mov
not
jmp
movl
cmpl
ja
push
pushl
push
call
orl
add
adc
xorl
sbb
cmpl
movl
mov
mov
jmp
mov
cmpl
jge
pushl
pushl
call
incl
mov
mov
sub
imul
xorl
mov
mov
sub
mov
mov
sub
and
mov
subl
mov
shrd
shr
mov
xor
xor
sub
mov
inc
mov
addl
xor
xor
xorl
or
xorl
shl
andl
imul
addl
sub
jmp
addl
mov
cmpl
movl
mov
movl
jmp
movl
movl
cmpl
jae
push
push
call
add
adc
add
andl
dec
xor
or
add
mov
add
mov
xorl
shrd
mov
cmpl
mov
mov
jmp
movl
movl
cmpl
jb
push
push
call
not
adc
neg
mov
mov
sub
mov
xor
or
sbb
cmpl
mov
notl
jmp
movl
cmpl
jb
push
pushl
pushl
push
pushl
call
sub
subl
orl
adc
sub
movl
mov
xor
shl
adcl
xor
xorl
or
shr
mov
sub
mov
jmp
xchg
stc
xchg
out
insb
push
jbe
push
stos
and
sbb
sahf
adc
sbb
or
insb
sbb
shrb
bound
das
mov
ret
cld
es
xor
rclb
adc
jmp
push
pop
loop
lods
fucomip
outsl
jl
ds
das
sahf
lret
mov
or
or
mov
enter
fs
push
inc
xchg
push
movsl
leave
jnp
dec
lret
sub
jbe
xchg
pop
rorb
daa
mov
jle
ja
nop
xor
scas
sahf
lods
cltd
dec
sbb
inc
mov
in
filds
sti
rolb
mov
aad
mov
pop
inc
cmpsl
adc
loop
and
bound
push
jmp
or
pushf
or
mov
out
int
ret
xlat
mov
rolb
or
outsb
dec
xor
fldcw
jp
or
xchg
mov
cmp
fcmovnb
and
lcall
xlat
cmp
sarl
sarl
ds
or
ja
xchg
add
jns
sbb
jb
clc
pushf
dec
dec
stos
mov
sahf
hlt
add
dec
inc
add
fs
pop
xlat
repz
jg
mov
push
xchg
insl
cltd
sub
jno
in
add
setg
mov
mov
lods
inc
add
jle
mov
cmp
insb
mov
ds
mov
insl
or
int
dec
cmp
js
mov
push
fwait
stos
cmp
adc
jbe
bound
iret
je
adc
xor
or
dec
roll
scas
je
mov
cmp
inc
cld
pop
push
cmp
std
push
icebp
dec
lret
shl
cmp
nop
loope
sub
test
and
in
pop
dec
incb
xchg
cmp
rorl
sar
jl
pushl
iret
pop
xchg
inc
inc
scas
bound
js
push
pop
cs
arpl
scas
xlat
jo
daa
and
cmp
enter
or
mov
adc
jbe
mov
pop
aam
sbb
ljmp
cmp
scas
shlb
push
xorl
adc
pop
test
outsb
out
lods
mov
pop
mov
dec
mov
out
inc
jae
inc
cmp
jecxz
dec
dec
sbb
add
pop
in
stos
out
ds
mov
sbb
mov
sahf
or
arpl
add
shlb
bnd
in
jge
aaa
rcll
sub
shr
aad
loopne
xor
ret
fadds
sub
addr16
jecxz
arpl
mov
fbld
insb
mov
jecxz
test
loop
fstpl
orl
mov
add
push
in
lea
sbb
mov
pop
mov
jns
xor
sub
popf
iret
rorb
pusha
mov
ds
test
scas
sahf
pop
pop
movsl
jecxz
cmpsl
ret
push
push
mov
es
adc
ret
and
sbb
lods
dec
rorb
and
sarb
cmp
jb
mov
ret
lds
cmpsb
repnz
notl
sub
sub
cli
insl
cmp
ror
pusha
iret
sbb
cld
jb
shl
add
lret
out
out
pop
scas
sbb
mov
mov
rcll
xor
mov
push
jmp
jne
pop
or
jae
loope
jp
nop
imul
fidivs
decb
imul
cmpl
movl
mov
mov
jmp
mov
movl
cmpl
jb
push
call
adc
orl
negl
sub
sub
mov
mov
shrd
shr
mov
mov
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
jmp
ret
scas
sar
fcmovb
scas
mov
jl
inc
xchg
mov
sahf
adc
sbb
xor
test
sbb
add
divl
adc
cmp
stos
xor
insb
xor
pop
or
jge
sti
xchg
shrl
xor
enter
inc
cmp
xchg
inc
loop
outsl
shr
into
jle
adc
inc
xchg
es
lea
push
and
adc
xchg
inc
and
mov
gs
inc
lods
gs
add
cmp
aad
cwtl
and
popf
push
cmp
cwtl
xor
push
cld
inc
pop
fildl
push
out
sub
lret
push
jmp
rol
mov
mov
cmp
je
xchg
dec
xor
test
mov
sub
cld
pop
xchg
into
adc
sbb
jne
xor
imul
mov
and
stos
jmp
loop
ret
movsb
mov
pop
adc
dec
roll
mov
or
adc
xchg
movsl
je
enter
adc
pop
popa
je
or
sub
mov
push
packsswb
cmp
in
adc
enter
lcall
mov
sub
adc
lods
fisttpll
inc
xchg
mov
fisubs
cld
call
inc
fistpll
cmp
clc
jle
mov
sbb
cld
or
addb
dec
rorb
orb
loopne
ljmp
repz
push
nop
cmp
sub
push
pusha
cmp
fsubp
repnz
push
mov
pop
xchg
dec
sahf
dec
dec
mov
scas
cmp
js
cltd
dec
push
or
xorl
jl
pop
add
imul
mov
test
ficoml
xor
cltd
lods
xchg
mov
cmp
daa
pop
and
mov
stos
or
iret
filds
mov
gs
mov
xchg
dec
jnp
popa
int
xchg
movsb
pop
iret
mov
rorb
xchg
lcall
xlat
icebp
mov
dec
and
dec
xchg
pop
sbb
stos
lds
test
pusha
inc
jmp
es
lods
sub
xor
je
leave
adc
xor
jb
push
mov
pop
cmpb
mov
jecxz
scas
adc
mov
dec
frstor
mov
lods
mov
mov
mov
insl
imul
cmp
jge
xor
imul
gs
sub
or
loopne
cld
sub
or
mov
push
push
and
cmc
popa
fdivl
jle
add
dec
mov
mov
loop
mov
subl
nop
clc
in
or
xor
hlt
aam
call
fstpt
gs
push
push
out
sub
pop
shll
push
test
inc
into
jecxz
cmp
sbb
rcrl
mov
pop
add
pop
pop
out
jno
shrl
lds
aas
aad
pop
fldl
cmp
das
push
shl
aas
mov
mov
je
dec
pop
js
and
xor
int
mov
mov
jb
scas
add
adc
imul
dec
push
add
sub
push
cs
nop
add
adc
out
inc
fnstsw
sub
test
dec
xor
push
arpl
adc
imul
sarb
or
sahf
mov
sbb
dec
and
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
jmp
cmp
lock
shll
xor
repnz
sbb
jle
aaa
cs
pop
rclb
rclb
fwait
dec
inc
into
in
pushf
or
jo
adc
sbb
jo
or
pushf
jae,pt
ret
arpl
jecxz
popf
jae
jmp
sbb
ret
cltd
fbstp
or
fwait
jg
fdivrs
mov
cmpsl
aam
jbe
rorl
adc
ret
add
jle
stc
adc
into
push
rcrl
xor
add
push
out
pop
fxch
test
loope
mov
mov
fdivl
pop
out
cwtl
mov
rolb
imul
and
sub
xor
dec
xchg
sahf
xlat
subb
mov
aad
shlb
mov
mov
jne
xlat
or
fsts
xor
lds
scas
pop
out
mov
add
xchg
xchg
inc
icebp
sbb
add
mov
inc
popf
mov
bound
mov
jl
shl
sbb
pop
shll
scas
dec
jb
or
icebp
loopne
repz
or
test
mov
in
jns
mov
jnp
lods
in
enter
sbb
jmp
jae
or
mov
jbe
popa
cs
ds
iret
sbb
out
xchg
lret
or
push
xchg
and
cmpsl
sub
and
mov
push
icebp
sub
xchg
stc
xchg
xchg
stc
mov
ja
add
test
bound
dec
aas
xchg
leave
xchg
aaa
leave
xor
xor
lea
shl
test
shrd
xchg
jo
addr16
fildl
dec
pop
adc
xor
jg
in
xchg
cmpsb
cmp
shll
out
daa
or
mov
fidivrs
mov
cltd
fistps
xor
and
xchg
xchg
aam
cltd
notl
lods
cmp
in
lahf
pop
and
ljmp
jecxz
pop
stos
cmp
loop
xchg
stos
mov
ds
inc
xchg
hlt
out
cmp
fs
addb
int
jge
cmpsl
ret
jns
sub
pop
jmp
adc
aas
pushf
lods
imul
imul
mov
or
fbld
add
repnz
inc
outsb
xchg
les
or
sub
lods
push
out
push
xchg
dec
fistps
mov
push
mov
pop
dec
imul
sbb
ret
fistl
xchg
mov
adc
pop
into
inc
sbb
filds
popa
push
andb
or
jle
mov
ret
and
gs
fcoml
push
add
cwtl
jo
and
xchg
dec
pop
sbb
jne
inc
shlb
cmp
sub
lea
shlb
mov
fcoml
shrl
mov
fucom
jp
sbb
jae
rorl
push
shr
lds
fcompl
sbb
ljmp
imul
push
and
push
aas
in
jne
mov
ficomps
shlb
xor
ljmp
out
jle
outsb
add
add
rcrb
push
add
fidivl
xor
and
ss
es
rcr
into
cmp
not
femms
dec
pushf
and
dec
mov
mov
bnd
and
adcb
xor
mov
cltd
ss
push
pop
cmp
imul
mov
in
loopnew
push
and
cmpb
js
jb
push
xchg
dec
dec
or
cmp
in
or
cld
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
jmp
sarl
mov
lds
stos
inc
mov
jo
mov
sbb
push
sahf
fidivl
cmp
push
inc
call
imul
ljmp
mov
push
out
cltd
or
rcr
mov
pop
cltd
push
add
fidivs
mov
sbb
cmp
lods
cltd
push
dec
mov
dec
sub
test
mov
adc
sub
xor
pop
jns
push
sub
sbb
ja
xchg
fldl
loope
out
pop
fidivrl
sbb
jbe
inc
sbb
inc
sbb
dec
push
push
cmp
in
push
jle
add
icebp
test
push
mov
adc
ret
push
in
mov
imul
mov
xlat
sahf
jmp
dec
push
insl
jle
mov
ret
mov
je
icebp
mov
shl
xchg
adc
sti
add
mov
mov
sub
scas
std
fsubrs
lock
push
loope
test
xor
shrl
loope
inc
mov
jmp
out
aas
fbld
cmpl
dec
inc
idiv
sub
ss
js
pop
mov
les
std
mov
notl
pushf
lret
xchg
jae
loopne
idivl
push
or
or
sub
pop
outsb
test
in
inc
dec
jnp
push
push
cmc
dec
hlt
adcl
ljmp
insl
sbb
xchg
inc
mov
adc
xchg
ja
adc
es
jb
xlat
push
cli
shl
push
enter
lahf
jnp
dec
mov
or
sbb
fwait
push
jae
jnp
sub
orl
mov
into
push
sub
fstps
lods
repnz
jbe
in
fadds
movl
rorl
mov
xchg
fidivl
clc
lods
popa
aaa
pop
cmp
cmp
nop
adc
mov
out
jns
dec
mull
out
push
dec
and
inc
rclb
ret
and
cltd
xchg
lret
sti
es
fwait
popa
dec
sub
lods
movsb
filds
pop
mov
stos
push
add
and
clc
jle
mov
out
call
pop
ret
cmpsl
mov
cmc
xchg
xor
xchg
jle
push
mov
aam
clc
stos
fmul
cltd
rorb
insb
fs
push
or
sbbb
cmpsl
loopne
xor
xchg
jno
int
xchg
scas
pop
in
arpl
fcmovnbe
inc
sub
dec
mov
stos
xor
test
jne
rcr
mov
ds
test
aad
inc
cli
xor
xchg
std
mov
mov
shl
cmp
jnp
test
fimull
push
and
mov
mov
test
ror
xchg
jecxz
rcr
notl
sti
fdivl
mov
pop
inc
ja
ja
adc
inc
fldcw
xchg
idivl
xor
pop
nop
mov
push
xchg
daa
aam
xchg
scas
outsl
mov
in
xor
inc
inc
roll
xor
or
mov
adc
and
outsl
and
les
xchg
test
mov
inc
test
movsb
ljmp
cwtl
add
or
and
jnp
add
dec
out
and
push
sbb
into
gs
inc
cmp
outsb
test
adc
dec
xor
shl
mov
test
into
jge
andl
in
lret
dec
fisubs
push
negb
dec
std
mov
push
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
jmp
push
sbb
sbb
aas
xor
lcall
sbb
inc
mov
insl
jmp
xchg
push
fcmovbe
xchg
enter
or
pop
out
and
lret
mov
sub
ljmp
cmp
es
icebp
mov
lock
xor
or
lret
or
mov
je
push
cmpl
jmp
push
mov
rorl
push
jne
mov
jmp
mov
stc
sbb
push
jns
lods
push
inc
and
cmc
test
xor
loope
std
push
out
in
xchg
ror
add
xor
rcrl
mov
sbb
scas
push
and
or
pop
inc
cmp
subb
into
pop
xchg
inc
and
add
jmp
sub
icebp
ja
nop
pusha
int3
sbb
insl
xchg
add
or
je
fmull
jp
push
hlt
fdivl
push
inc
mov
xchg
cmpsl
in
sub
shlb
inc
lret
mov
jno
jp
and
mov
hlt
insl
adc
mov
mov
ja
pop
loope
add
psubsw
cmp
or
imul
clc
add
pop
dec
and
stc
fmuls
dec
pop
or
sbb
rcrl
push
xor
push
popa
sub
dec
mull
and
and
dec
insb
repnz
insl
pop
sbb
cmpsl
pushf
rolb
push
fnstenv
and
test
rol
mov
sub
mov
ret
mov
jb
bound
pop
cld
stc
mov
test
rorb
inc
mov
ljmp
daa
hlt
pop
sub
jecxz
jno
cld
fisubs
pop
lahf
stos
mov
cmp
stc
ds
fwait
mov
in
dec
in
jnp
mov
adc
fiaddl
push
arpl
aas
jns
xor
push
and
xor
rol
push
push
mov
dec
jo
pop
xorl
xchg
sbb
xlat
repz
jae
fadd
pop
rcl
sbb
sub
cwtl
add
dec
pop
xor
repnz
add
mov
arpl
out
inc
xchg
and
cmpl
mov
or
das
mov
fldcw
or
adc
and
test
and
push
sbb
das
jle
sbb
outsb
test
jno
xchg
lret
loopne
sub
aam
pop
cs
es
add
inc
adc
xchg
push
inc
pushf
fcom
int3
inc
addr16
das
mov
femms
inc
das
pop
rolb
jmp
cmp
adc
pop
insl
fimuls
in
aaa
movd
inc
xor
mov
push
pop
adc
jmp
pop
dec
lea
negl
adc
ss
std
cli
lret
adc
bound
fwait
xor
push
rorb
adc
mov
mov
mov
aam
dec
addl
push
and
insb
pop
popa
subb
ret
test
cmp
sahf
adc
xor
adc
fsubr
or
xor
cmpsl
rcrl
test
je
std
enter
movsb
xor
sub
add
push
inc
jo
pop
cmpsl
dec
and
fdivr
push
fidivrl
add
lock
stos
lcall
arpl
adc
push
xchg
nop
test
xchg
cmpsl
into
insl
js
pop
movsb
movsb
xor
shrb
mov
push
rorl
out
ficoms
cmp
mov
mov
push
lahf
enter
mov
fidivrl
out
adc
jge
insl
mov
push
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
jmp
arpl
test
ss
scas
addr16
test
sbb
rcr
pop
loope
jge
lret
rcl
cmp
xchg
mov
loopne
push
push
movsl
test
fisubrs
pop
cmp
inc
and
pushf
pushf
and
pop
dec
mov
lods
xchg
leave
addr16
jl
call
mov
sti
in
xor
movl
insl
addb
mov
iret
sub
jns
or
adc
imul
adc
pop
lahf
insb
cmp
dec
jge
sbb
jbe
loop
mov
cmpl
cwtl
mov
push
aad
mov
ret
insl
pop
ljmp
nop
mov
mov
lret
mov
mov
shlb
mov
dec
xchg
xor
into
rcr
mov
jne
popf
insb
add
aad
jae
fiaddl
xchg
mov
xchg
adc
fincstp
dec
inc
push
mov
inc
mov
push
cwtl
cs
push
mov
lods
pop
pop
sbb
lret
sbb
aam
inc
mov
in
inc
adc
fisubs
leave
mov
or
xchg
mov
sub
icebp
or
lret
pop
aad
push
xor
call
pop
sbb
stos
push
daa
push
jle
and
mov
testb
sti
adc
aam
add
repnz
mov
orb
sbb
cmp
lahf
ficoml
out
inc
scas
mov
sub
sahf
faddl
aaa
dec
and
inc
pop
sub
inc
xchg
add
sbb
jb
mov
nop
sti
addb
jns
inc
pop
cmpsl
mov
out
push
xor
push
or
in
xor
imul
cmp
loope
divb
push
jns
sahf
bound
mov
lret
cmpsl
shlb
arpl
outsl
pop
cmpl
mov
ja
fisubrl
pop
lret
mov
and
stos
push
inc
mov
fdivrs
out
scas
xchg
mov
xchg
popl
gs
inc
loop
ds
push
adc
cld
inc
popf
xor
lahf
data16
not
ds
movsb
and
loop
fldl
push
mov
push
sahf
mov
inc
adc
loop
leave
pop
mov
cli
sahf
xor
pop
sbb
sub
adc
pop
mov
and
movsb
push
mov
cmp
mov
aad
mov
arpl
jne
mov
sbb
pop
sub
movsl
xor
mov
sbb
inc
inc
add
shrl
mov
cli
rcl
inc
and
inc
push
fimull
pop
ds
xchg
out
in
cmc
fwait
sub
loope
sbb
repz
pop
cs
das
adcl
cmc
xchg
push
push
mov
out
andl
pop
gs
mov
subb
shrb
in
sub
cmc
xchg
icebp
mov
loop
insb
add
mov
jne
or
ds
inc
lret
icebp
hlt
pop
xor
fldcw
popf
popa
jne
push
imulb
pop
les
mov
push
xchg
fstpt
push
sbb
pop
pop
les
ljmp
subb
fiaddl
adc
mov
xchg
dec
push
add
xchg
mov
cmpsl
stos
inc
adc
stc
iret
lock
fmull
inc
mov
iret
pop
incl
out
loope
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
jmp
fcmovnb
int3
xchg
lods
jnp
sbb
out
mov
sbb
xchg
mov
clc
cs
clc
push
cld
mov
add
mov
pop
jnp
pop
je
inc
adcl
push
mov
aad
scas
cmpb
data16
cmp
xchg
and
mov
add
pop
jnp
les
aaa
cs
ljmp
dec
dec
es
repnz
in
mov
push
mov
mov
sub
mov
clc
mov
inc
lea
add
lods
lcall
fistps
add
jb
sub
push
shll
xor
int
pop
aaa
mov
or
sub
mov
mov
daa
pop
jae
push
jae
jnp
push
bound
pop
push
das
std
inc
out
pop
sub
call
repnz
push
sbb
int
jl
mov
adc
and
jl
and
mov
test
shll
fcom
movsb
outsb
ja
popf
lret
dec
mulb
push
and
rsqrtps
cmp
outsl
ror
jnp
pushf
insb
pop
mov
std
xor
jle
jle
outsl
sbb
test
dec
aad
mov
mov
mov
lcall
loopne
jne
push
inc
cmp
jg
pushf
pusha
dec
push
ss
cmpsl
leave
pop
fs
dec
mov
inc
popf
add
push
and
xor
lret
test
scas
and
pop
cwtl
imul
out
pop
dec
add
aas
xor
out
inc
lods
mov
inc
pushf
daa
jae
and
pusha
xor
and
jle
lods
lock
and
and
jnp
push
sbb
out
lea
fisubrs
int3
dec
mov
jbe
mov
mov
fnstcw
js
lahf
or
bound
mov
vmwrite
pop
pop
cwtl
into
ds
mov
cmp
mov
jmp
lcall
out
pop
ret
subl
popa
and
imul
xor
xor
rorl
es
and
arpl
sbb
aas
lods
adc
mov
roll
arpl
jnp
inc
cli
push
cwtl
lods
jb
mov
sub
fimuls
jae
addr16
pop
sub
and
mov
jo
insl
fwait
mov
push
cmp
add
or
mov
mov
dec
xchg
fldenv
mov
sbb
sub
sbb
pop
and
repnz
mov
sub
aam
mov
and
shl
push
es
int
cmpsl
clc
push
add
mov
xchg
pop
pushf
pop
dec
data16
pop
mov
sti
mov
ret
sub
in
and
cmpsb
dec
out
ret
adc
xchg
jecxz
mov
test
jmp
inc
jbe
push
insb
fadds
dec
pop
hlt
mov
les
jno
push
jg
push
jo
add
lcall
test
push
stos
or
xor
xchg
push
data16
testb
mov
jns
pop
ja
mov
dec
dec
xor
xlat
inc
xor
fcoml
outsl
ret
shl
push
mov
mov
jbe
rolb
xchg
mov
daa
or
cmp
dec
ret
test
stos
jg
cmp
loop
arpl
jmp
ljmp
addr16
iret
inc
jecxz
mov
fistl
mov
js
das
push
iret
shlb
aam
jg
hlt
dec
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
jmp
fiaddl
mov
sub
jnp
mov
sub
push
test
sbb
sub
sub
test
cmpsl
andl
xchg
dec
or
loop
clc
daa
adc
cmp
out
xchg
mov
and
pop
mov
cmpsl
mov
add
outsl
lea
ljmp
aas
or
or
push
push
enter
adc
mov
cmpsl
std
out
sub
push
sbb
sub
dec
mov
adcl
dec
ljmp
adc
enter
dec
push
dec
lret
mov
pusha
jmp
ret
fiaddl
out
or
sub
imul
xlat
jl
sbb
push
das
pushf
loopne
mov
lock
mov
add
sbbl
sarb
jmp
jl
pop
fadds
adc
and
cmp
pop
loopne
in
dec
ds
pop
gs
dec
ja
loope
lods
or
mov
cld
test
xchg
in
sub
push
fsubs
dec
test
orl
pop
jmp
inc
jl
ds
cmc
add
adc
pop
out
inc
push
jnp
lds
negb
fs
xchg
test
mov
movsl
xchg
arpl
xchg
mov
mov
sbb
add
fs
int3
ljmp
sub
mov
insl
mov
cmp
xchg
sub
push
flds
cld
arpl
lea
jno
pop
pop
fistps
adc
nop
int3
fstl
jbe
fs
jo
movsl
xor
insb
mov
inc
cmp
mov
xchg
in
and
adc
fsts
and
and
mov
loope
dec
dec
icebp
rorl
sub
and
je
std
and
popf
inc
xlat
ljmp
rcrl
ss
pop
or
aam
add
into
loope
repnz
orb
mov
out
scas
pop
pop
sub
jnp
xchg
iret
rcll
jbe
rolb
sbb
fcmovnu
aas
xor
adc
push
xor
es
je
negl
inc
xor
mov
shlb
xor
sub
int
sbbl
mov
je
ret
jecxz
std
xchg
cwtl
inc
stos
enter
insb
lahf
dec
inc
inc
mov
repnz
xchg
rcrl
enter
inc
mov
inc
push
lret
rcr
sub
idivb
push
pop
insl
pop
les
fbstp
hlt
test
xchg
aam
je
icebp
sbb
test
sbb
in
filds
and
sahf
sbb
push
fdivs
mov
push
fsubl
or
sbb
mov
test
call
insl
roll
rorb
push
or
scas
or
xor
shl
arpl
roll
mov
loope
clc
lcall
or
xor
je
testb
mov
lahf
push
loopne
aam
gs
rorl
lea
xchg
inc
cs
jne
add
loopne
fildll
push
jmp
cmpl
test
data16
imul
ja
ja
cmpl
ret
in
test
inc
jl
xchg
rorl
iret
dec
adc
jbe
push
cld
in
adc
popf
or
jg
popa
sub
loopne
jno
movl
orb
adc
ss
pop
push
js
xchg
mov
mov
lret
sti
daa
push
mov
and
inc
out
and
pop
imulb
testb
enter
add
enter
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
jmp
mov
jg
cmp
sbb
or
mov
mov
sbb
sahf
adc
sbb
pop
jl
pusha
ds
js
in
sbb
push
add
or
outsl
add
out
pop
in
and
mov
xchg
js
xchg
cmpsl
ret
insl
data16
add
int3
in
sub
mov
sub
mov
mov
mov
fcmovne
cmp
dec
jecxz
ss
decb
push
inc
push
xchg
stc
add
push
fisubrs
loopne,pt
data16
cmp
lcall
fsubr
or
xchg
out
pop
shll
int3
sbbb
not
lret
and
cmc
sub
pop
imul
aad
inc
add
bound
popa
scas
xchg
dec
push
loopne
mov
inc
push
pop
jo
mov
pop
hlt
sti
ss
inc
scas
sub
es
enter
sbb
jns
and
jl
shll
mov
ljmp
sub
inc
in
and
popa
jmp
sti
scas
xchg
push
pop
je
mov
pop
lret
adc
iret
inc
push
mov
dec
push
stos
dec
and
repz
jae
mov
inc
sub
imul
in
mov
repz
jns
ds
in
into
xchg
out
sub
pop
pop
lds
xchg
xchg
mov
sub
pop
fwait
jmp
jbe
loopne
sbb
clc
sti
mov
std
xchg
push
mov
mov
jecxz
sbb
leave
pop
sbbb
mov
push
jl
or
cmp
fimuls
and
mov
xor
aam
push
shlb
inc
mov
rcll
repnz
pop
adc
jo
cmp
fidivs
adc
or
or
add
add
int3
outsl
call
add
enter
or
mov
out
lret
pop
mov
lcall
add
loopne
fidivl
sbb
or
push
or
adc
ds
add
pop
fdivrl
repnz
lock
test
or
jp
sub
icebp
enter
aam
xorb
leave
cli
adc
adc
ja
mov
adc
adc
repnz
cmp
in
pop
sub
mov
inc
add
jmp
incl
sub
adc
lahf
in
adc
or
inc
push
in
sahf
mov
icebp
cwtl
daa
pop
inc
jb
fldt
sarb
sbb
shll
shrl
imul
subl
jo
dec
pop
mov
cmp
jge
lods
lret
in
shl
pop
cltd
fdivr
icebp
enter
mov
cltd
jp
sbb
push
pop
add
cmpsl
xchg
repnz
xor
sbb
imul
dec
test
pop
lds
xchg
mov
add
ror
xor
and
int3
jg
popf
aad
cld
lret
xor
jle
in
or
iret
cmp
aas
sbb
push
clc
mov
repnz
int
dec
imul
sti
add
dec
mov
add
mov
lea
aaa
and
aad
jbe
add
lahf
adc
mov
push
xchg
scas
daa
mov
push
int3
sbb
mov
lds
cmc
and
cmpsb
add
mov
out
mov
jl
and
xor
ds
arpl
dec
fs
or
int3
jmp
repnz
jmp
imul
pushf
pop
jle
or
jo
jne
sbb
pmuludq
or
std
and
fcomip
lds
stc
es
cmc
scas
jae
mov
repz
leave
push
aas
push
adc
or
popf
or
fcmovnbe
mov
popf
add
ljmp
push
loope
rorl
loope
push
je
xchg
jg
clc
int3
fsubr
xor
test
out
sbb
imul
test
out
ret
sub
xchg
int
sub
push
xchg
cli
add
mov
inc
adc
leave
mov
push
or
xor
push
adc
popf
pop
xchg
lods
out
sbb
shrb
int3
cmpl
cltd
sahf
xchg
jmp
xor
inc
xchg
cs
test
lds
cmp
mov
cmp
or
cmc
xchg
andb
jmp
xor
xor
push
jno
sbb
pop
into
mov
dec
push
nop
cmp
jae
mov
push
or
in
sbb
lcall
mov
test
push
xor
add
xchg
test
xor
mov
adcb
xchg
cmp
add
aaa
pop
push
mov
add
imul
mov
mov
push
fldt
outsb
adc
loopne
addr16
shll
xor
iret
mov
nop
and
lock
jmp
cli
sub
xor
shll
test
pop
in
outsb
inc
adcb
push
pop
int3
lret
push
cltd
shrb
shl
add
shlb
mov
in
test
adc
iret
in
ret
js
mov
mov
mov
fwait
pop
push
clc
pop
loope
movsb
sbb
add
pushf
lcall
pop
xchg
shr
std
adc
pop
fsubrp
test
adc
lods
mov
inc
jo
or
pop
rcrl
push
xchg
repz
xchg
arpl
push
add
push
nopl
les
loop
push
subb
add
add
icebp
cmp
repnz
pop
and
in
xchg
movsb
or
cmp
jp
scas
into
subl
push
cs
aas
mov
dec
pop
xor
ljmp
add
push
and
sbb
imul
mov
leave
adc
pop
mov
ja
int
adc
push
and
fidivrs
mov
inc
mov
shrb
xchg
scas
ds
aam
sbb
mov
fcomps
sub
sub
xor
je
mov
test
xchg
jp
jp
in
xor
leave
push
fcoml
push
and
cltd
pop
rorl
fildll
cmpsl
push
or
adc
aam
inc
mov
scas
pusha
mov
out
jae
or
push
fwait
mov
cmpsb
lea
faddl
mov
mov
stc
add
xchg
push
lock
xor
filds
fcmovb
inc
push
xorb
cmc
stos
cmp
lret
les
mov
mov
jge
mov
adc
out
push
xor
push
ss
out
aam
and
mov
xor
es
out
imul
sbb
cmp
mov
jecxz
jecxz
pop
lahf
mov
scas
test
sub
mov
mov
shrd
shl
xor
or
mov
mov
mov
shll
xorl
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
xor
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
jmp
push
dec
dec
testb
cs
sbb
stos
and
sbb
dec
inc
sub
cli
push
mov
cwtl
xor
cmp
daa
pop
fnstcw
cwtl
in
loop
dec
addr16
lods
jns
rcrb
xchg
cs
cmp
addr16
pop
xchg
ret
pop
mov
loop
jmp
inc
pop
cmp
lods
stos
into
add
addr16
sarl
pop
cld
jns
cmpsl
leave
push
enter
lea
lods
cld
iret
jns
adc
jl
cltd
or
add
push
cmpsl
pushl
inc
inc
sahf
notl
mov
sarb
call
push
adc
dec
daa
addr16
stos
add
inc
aad
pop
js
pop
or
xchg
pop
jb
push
pop
sbb
inc
sti
xlat
leave
roll
mov
daa
push
inc
pop
xor
in
adc
in
arpl
xor
mov
push
cmpsb
mov
test
mov
mov
cs
addr16
pusha
or
mov
stos
xchg
dec
repnz
stc
jae
int3
dec
cld
ja
pushf
shl
bound
sbb
rcll
pusha
jmp
out
pop
push
adc
mov
mov
push
in
inc
insl
pop
add
lea
jns
mov
jg
stos
jmp
clc
out
pop
and
shlb
mov
xchg
inc
jp
mov
out
lret
pop
addb
mov
gs
ret
lret
push
pop
mov
ret
stc
add
test
cmp
fbld
push
dec
pop
mov
fisubl
sti
dec
jns
lds
bound
out
or
fwait
ret
movsl
fildll
push
fwait
sarb
cmc
jl,pn
pusha
fnstenv
in
addr16
ss
xor
testl
add
or
clc
dec
pop
mov
hlt
add
sbb
xchg
adc
jnp
inc
repnz
and
mov
gs
cmc
in
imul
push
ljmp
mov
jge
ret
jae
push
cmpsb
mov
pop
dec
test
push
cli
mov
sahf
enter
lea
loop
sub
inc
jp
loopne
sbb
insb
jmp
repnz
jle
rclb
fs
jno
shlb
clc
jns
xlat
mov
xchg
inc
push
pop
xchg
lods
int3
cs
add
ret
xchg
loop
test
add
call
adc
faddl
arpl
xchg
insb
sti
jmp
push
dec
mov
sbb
ljmp
mov
out
mov
xadd
jp
adc
sbb
pop
jp
js
xor
adc
jge
ja
adc
and
mov
adc
cmpsl
and
jmp
outsb
xor
test
xchg
repz
pop
lret
or
adc
jge
or
mov
mov
ds
mov
sarl
aaa
push
adc
sub
pop
push
inc
push
gs
iret
lea
mov
inc
jae
pop
cmp
mov
pop
icebp
sub
dec
cmp
inc
xchg
push
lock
cld
js
inc
cltd
mov
inc
mov
fists
out
adc
je
pop
pusha
ljmp
pop
push
stos
mov
pop
or
out
mov
dec
stos
or
mov
push
repz
stos
fidivs
jns
iret
adc
cwtl
sar
into
leave
cmpsb
or
push
lahf
arpl
movsb
push
cmp
push
sarl
add
pop
pop
imul
cmp
ret
cmpsl
cmp
inc
xchg
mov
mov
shll
xorl
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jmp
xchg
hlt
xchg
addr16
in
mov
xor
sahf
adc
sbb
insb
idivb
or
insl
testb
or
sub
mov
sbb
fsubrl
fcompl
pop
cli
div
ljmp
ss
jo
repz
shlb
adc
enter
jmp
clc
jae
cltd
fadd
dec
push
call
std
lret
into
inc
rcll
nop
inc
arpl
jbe
in
push
mov
incl
mov
ss
leave
push
pop
pop
cmp
iret
pop
test
clc
push
loopne
xor
fwait
cltd
mov
repnz
xlat
fiaddl
js
add
ja
out
out
movsb
sub
inc
cli
aad
sbb
out
jmp
daa
std
in
push
inc
jo
xchg
fnstenv
stc
out
cmc
pop
ret
fsubs
mov
pop
jge
jp
push
xor
inc
cmp
jle
or
mov
add
xchg
mov
sub
sbb
xor
iret
sbb
cmp
stc
jmp
shr
push
rol
xchg
leave
fists
adc
aas
sub
clc
lods
inc
cmpsb
push
pop
lock
add
jmp
xlat
out
out
repz
nop
or
push
xchg
mov
or
loope
cli
js
push
mov
shlb
adc
int
stc
sti
cmp
cltd
cwtl
jbe
adc
cmpb
gs
push
fsubr
cltd
icebp
stos
jo
jb
in
loop
ficoms
mov
xchg
lret
loope
shl
mov
pop
lahf
adcl
xor
lock
es
out
repnz
fbld
mov
insb
shrb
push
push
sub
and
mov
lods
push
sub
adc
pop
add
mov
std
int3
sub
and
add
jbe
mov
rcr
call
push
jle
mov
stos
push
mov
cmc
nop
scas
das
lcall
stos
repz
gs
loop
ret
lds
sbb
js
xchg
outsl
in
rorb
loop
lea
gs
cmpsl
mov
push
cld
add
fdecstp
mov
and
andl
inc
adc
pusha
sbb
sbb
pop
cwtl
pop
into
add
jno
xor
jnp
lret
lahf
dec
push
dec
and
xchg
icebp
sbb
adc
cmp
aas
xor
out
imul
inc
test
lea
sbb
push
xchg
out
decb
aas
add
cli
fisubl
dec
inc
xchg
mov
adc
mov
outsl
es
push
mov
xchg
or
int
mov
jecxz
jnp
loopne
cmpsl
insb
inc
pop
cltd
push
jle
inc
bnd
xchg
xchg
xor
adc
adc
or
mov
pop
jbe
xor
cld
inc
mov
adc
test
cmp
lods
insb
or
mov
out
xchg
test
lgs
mov
pop
xlat
xor
pop
jnp
out
xchg
cmpsl
shrb
xor
add
push
xor
dec
shrl
dec
sub
inc
fwait
icebp
lcall
leave
add
push
jecxz
inc
fs
rep
push
sbb
imul
and
shrb
cmp
xchg
sarb
push
aam
scas
fimull
scas
in
add
cmp
inc
sarl
test
add
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
jmp
or
jns
arpl
pop
faddl
mov
das
pop
sbb
sahf
adc
sbb
int3
or
into
jbe
mov
andl
repz
or
imul
xor
rorb
mov
xchg
sub
test
and
idivl
jb
xor
adc
inc
adc
dec
mov
pop
jno
imul
mov
dec
push
push
mov
lods
idiv
aam
xchg
das
ret
inc
pop
cmc
mov
add
cltd
mov
insb
mov
mov
mov
sub
icebp
stos
dec
ss
aas
xchg
cmpsl
rcrb
popa
cmc
bound
xchg
inc
xchg
das
push
sub
imul
xchg
lea
ds
aaa
sub
daa
xchg
push
loope
fsubs
pusha
adc
add
jo
loop
adc
ja
mov
lds
pushf
jp
cmp
into
pop
pop
and
pop
aas
push
sub
sbb
in
adc
addr16
jno
xlat
xchg
out
lock
mov
jmp
subl
ljmp
jmp
mov
mov
sbb
movsb
jle
mov
xorl
pusha
xor
push
xchg
and
cmp
xchg
out
mov
add
push
xchg
gs
lret
mov
and
jbe
mov
and
xor
stc
cwtl
fwait
pop
jb
ljmp
xlat
andl
in
xor
out
pop
push
rcll
fsubrl
stos
jmp
dec
nop
adc
int3
mov
in
lret
cmp
push
cmp
xor
and
ret
sbb
daa
cwtl
adcb
add
push
into
pop
loope
cltd
sub
cltd
add
nop
mov
xor
jo
or
test
dec
and
inc
adc
cs
sbb
adc
popa
cwtl
loop
call
mov
jg
add
mov
push
les
and
push
dec
xchg
sbb
rcl
adc
shrb
pop
sbb
lret
inc
inc
movsl
insb
loop
ss
in
pop
lret
xchg
sub
add
add
mov
add
cltd
sbbl
ret
mov
sbb
mov
sahf
add
mov
cltd
adc
xor
adc
lods
je
dec
dec
sbb
repz
bnd
cmpsb
in
add
ret
es
repnz
mov
fwait
dec
cmpsl
insl
filds
test
loope
pusha
pop
pop
sbb
and
push
jecxz
mov
repz
andl
aaa
cwtl
lods
lret
push
push
push
jo
ret
jb
pop
xor
mov
movsl
and
bound
ja
push
lahf
xchg
sub
inc
inc
push
orl
pop
mov
add
mov
aaa
push
std
lods
jb
adc
popa
sti
aaa
lock
int
and
mov
and
fstl
jmp
push
js
testb
pusha
iretw
pop
nop
inc
sbb
lea
dec
rolb
inc
sbb
xchg
sbb
dec
xchg
lock
inc
jbe
in
adc
cmp
int3
push
mov
test
mov
movsb
adc
and
ja
call
cs
rcrb
sub
fimull
nop
jl
xchg
ficompl
bound
fcoml
sbb
push
mov
jmp
pop
jno
mov
xchg
aas
inc
scas
mov
push
sbb
sahf
adc
sbb
mov
dec
insl
sbb
pusha
js
sbb
cwtl
nop
dec
push
sbb
pusha
aam
repnz
mov
iret
scas
ds
cmp
mov
test
fisttpll
ja
aas
jno
fistl
hlt
inc
sbb
xchg
sub
jmp
xchg
push
dec
addb
sub
cltd
sbb
leave
push
je
enter
dec
sahf
mov
inc
stos
mov
fisttpl
mov
and
loop
nop
xor
in
jno
hlt
cld
ret
loopne
xchg
pop
inc
push
scas
sarl
out
in
and
and
sbb
test
jmp
jmp
icebp
retw
hlt
xchg
jns
add
push
mov
pusha
adc
lahf
inc
jae
mov
and
cs
in
mov
dec
pop
push
idivl
jp
mov
enter
insb
repz
pusha
sbb
sub
xchg
jo
xor
add
pop
mov
pop
inc
xlat
mov
pushf
xchg
out
xchg
fiaddl
sti
test
in
out
shr
sub
jge
orb
adc
movl
scas
movsb
lds
pop
cmp
mov
mov
aaa
dec
lcall
stc
jge
aas
repz
lods
mov
imul
lock
xor
insb
xor
xorl
and
js
jge
push
jae
cmp
jb
fldcw
cmp
lock
jg
nop
sbb
ret
icebp
add
lock
sahf
fimuls
nop
xor
xor
jo
or
pop
xor
adc
cld
sub
sbb
jle
fcoml
add
sbb
pop
inc
dec
daa
mov
pop
sub
mov
mov
dec
add
int3
push
icebp
and
addr16
decb
stos
jns
dec
mov
mov
cmp
pop
add
cmpsb
mov
bound
xchg
xor
mov
xchg
pop
jge
in
sub
fninit
jmp
outsb
xlat
mov
jp
insl
neg
add
pop
popf
test
enter
js
and
fildll
fidivl
loopne
es
stc
or
sarl
or
and
sub
and
jb
lret
aaa
inc
xor
lds
or
insl
cltd
pop
stos
imul
addl
bound
inc
sub
inc
xor
fcmovbe
and
out
outsb
and
xchg
pusha
icebp
xor
pop
lds
and
pop
add
imul
gs
xor
lods
in
push
lds
nop
jno
testl
push
add
in
cmp
push
imul
mov
and
outsl
outsb
mov
ficoml
test
jmp
mov
xchg
cmp
rolb
les
out
xchg
in
and
add
movsb
push
call
mov
inc
cmp
inc
xor
mov
mov
lock
jge
and
lods
mov
rcrb
in
mov
mov
cmp
loope
sbb
fildl
sbb
negb
push
aad
adc
cmpb
mov
loop
or
test
scas
mov
lods
rolb
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
jmp
and
pop
jb
and
jbe
lock
sahf
adc
sbb
jno
jge
cwtl
ljmp
mov
cmpsl
testb
lahf
xchg
cltd
xor
ret
in
and
das
lea
or
mov
mov
pusha
enter
mov
or
add
add
outsl
cmp
inc
xchg
enter
mov
or
sbb
sub
cmpsl
push
inc
sbb
jge
inc
cmp
push
xchg
idivb
in
div
xlat
mov
mov
add
pop
pusha
jb
xchg
xor
subb
into
mov
sub
pop
jnp
int3
cld
sarl
jbe
lcall
pop
addb
add
out
out
fistl
mov
jno
sub
jb
mov
mov
pushf
adc
mov
xorb
xchg
inc
cmp
sbbb
andl
mov
mov
out
or
cmp
arpl
dec
lret
cmp
sbbl
lods
lods
inc
fidivrs
mov
mov
and
call
mov
add
mov
push
out
sbb
push
iret
and
fistps
mov
aaa
data16
aas
sub
test
mov
cmpsb
push
aam
std
adc
movsl
std
scas
push
mov
pop
xor
cmp
rcll
or
lret
adc
std
push
in
mov
mov
hlt
jge
call
pop
lock
and
fistpll
sti
in
jbe
aad
addb
sahf
fidivl
jae
xchg
and
test
ret
mov
pop
loop
or
dec
lret
xlat
cmpsb
push
pop
data16
lock
jnp
sub
lods
jnp
dec
mov
subb
in
daa
fsubl
mov
push
dec
sbb
adc
pop
scas
xor
mov
cli
arpl
mov
pop
cmc
sbb
fimuls
popf
gs
mov
je
iret
fidivrs
inc
mov
jl
sub
push
add
out
mov
push
inc
jno
iret
add
mov
jo
mov
movsb
jns
xchg
test
push
int3
jge
daa
orb
iret
sub
inc
inc
test
int
repz
cwtl
in
mov
loop
repz
pop
gs
dec
mov
mov
ljmp
xor
enter
xchg
ficoms
insb
icebp
xor
pusha
mov
push
inc
push
subb
jne
push
xlat
add
negl
lret
cmpsb
push
adcb
je
lods
dec
push
popa
fcmove
arpl
jae
cwtl
inc
pop
jo
or
jbe
hlt
repz
push
filds
xor
sbb
aas
xchg
faddp
mov
sbb
xchg
mov
ret
xchg
divb
and
mov
mov
imul
incb
or
decb
cmp
aaa
jno
and
jno
mov
push
mov
sbb
dec
xor
fbld
pop
xor
cmpsb
sub
cmpsb
jae
lret
popa
mov
mov
mov
xchg
scas
xchg
out
mov
ret
xor
or
sti
pop
pushf
or
dec
sti
jae
dec
add
rorb
hlt
dec
xchg
jbe
cmp
adc
popf
dec
xchg
pushf
pushf
jns
jmp
shld
xor
mov
jmp
loop
es
mov
jl
dec
sbb
sahf
adc
sbb
cmp
and
test
cmc
or
addr16
outsl
enter
aam
sub
inc
add
or
mov
test
decb
sub
xchg
lds
sub
mov
fisubrs
gs
shll
cmp
popa
addr16
xlat
dec
jno
sub
sti
out
jp
gs
mov
rclb
inc
inc
sub
adc
shl
test
pop
into
in
shll
cmp
adcl
rcr
xchg
adc
out
test
xor
ret
fimuls
add
sub
into
pop
pop
mov
jle
xchg
mov
mov
into
mov
sbb
addr16
mov
or
sahf
mov
xlat
outsl
dec
verr
dec
aaa
adc
aas
rcll
and
mov
into
adc
add
cs
xor
cmpsl
loop
stos
punpckldq
or
lcall
arpl
fcoml
sub
call
mov
xor
stos
not
dec
inc
sub
rorl
sbb
mov
xchg
mov
decb
and
lahf
xchg
jno
xorl
scas
outsl
mov
lods
jl
cmp
pushf
in
adc
xor
adc
push
cmp
pusha
and
ja
dec
mov
sbb
and
dec
das
stos
jmp
test
push
cmc
and
into
adc
jne
pop
mov
add
and
mov
mov
cmp
mov
ja,pn
test
inc
test
xchg
jp
out
inc
adc
out
mov
mov
testb
fisttpll
imul
jne
pop
arpl
lods
lahf
loopne
popf
fnstsw
mov
insb
mov
jae
cmp
sbb
adc
loope
stos
jge
popf
push
neg
jl
aam
enter
mov
insb
das
mov
cmpb
xchg
jae
inc
sub
stc
mov
jo
les
jl
cmp
aam
inc
in
and
add
pop
mov
ss
mov
clc
dec
sbb
ss
nop
loopne
lea
mov
aas
cwtl
dec
push
sbb
pop
cwtl
mov
scas
aas
jg
xchg
or
adc
dec
mov
shl
leave
movhps
push
mov
lods
mov
in
aaa
pop
imul
push
ss
into
ror
mov
adc
cltd
adc
repnz
mov
je
adc
adc
insb
fldenv
cli
sahf
mov
fwait
in
lea
mov
jl
add
or
sbbb
jo
push
ret
hlt
push
in
out
ss
mov
mov
sbb
cmpsb
xchg
dec
cmp
scas
pushf
pop
adc
je
cwtl
push
or
push
pushf
jp
das
push
mov
sahf
in
jp
out
in
in
mov
sbb
pop
add
addr16
das
mov
or
xchg
lret
mov
ja
les
das
lret
mov
lret
or
hlt
scas
jne
dec
pop
xor
mov
sub
addr16
jle
cs
pop
lret
sub
loope
repnz
dec
sbb
cltd
xchg
shlb
pop
or
and
dec
push
cmp
adc
cmp
cmp
mov
clc
fnstenv
lods
inc
fcomps
out
jbe
lahf
jle
push
and
in
cmp
push
pushf
mov
and
add
add
jne
jns
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
or
cmp
mov
sub
inc
inc
sbb
sahf
adc
sbb
mov
clc
push
mov
stos
je
into
mov
aam
lods
aas
mov
sbb
mov
movsl
roll
bound
ja
mov
pop
pop
or
adcl
xlat
dec
insb
fwait
adc
cmpsl
sub
je
push
xchg
mov
lahf
pop
subl
dec
mov
test
sub
cmp
out
test
pusha
pop
mov
jmp
lret
mov
sbbb
aad
dec
add
jae
icebp
nop
fdiv
rorb
dec
cs
inc
icebp
popa
fildl
cmc
push
inc
sti
arpl
cmpsl
movb
sbb
push
repnz
rclb
outsl
adc
out
dec
pop
or
jbe
movsl
push
lret
mov
jmp
dec
enter
xlat
lret
addr16
mov
repz
cmp
fstp
jge
repz
lock
jle
sti
push
jmp
fisubs
clc
andl
cld
push
aaa
mov
cmp
and
sbb
jp
pop
or
outsl
mov
ds
repz
pop
and
fsubr
cmp
in
push
xor
xchg
sti
stos
sti
popf
xlat
xor
xchg
scas
push
xchg
sub
data16
inc
movsl
and
out
in
mov
scas
jae
pusha
icebp
push
cmp
notl
rol
xorb
test
and
rcrb
jmp
ljmp
push
clc
jge
xorl
fucomip
jae
sbb
xchg
mov
pop
inc
and
orl
mov
inc
ss
imul
imul
push
pop
cmpsb
je
scas
mov
mov
xchg
or
cld
pop
gs
pop
jle
mov
cmpsl
xor
and
pop
and
fwait
xor
pop
sti
nop
mov
je
push
sbbl
je
call
pop
cwtl
ror
stos
daa
pop
pop
pusha
clc
adc
int3
ret
fs
or
cs
dec
jne
push
fildl
xor
push
pushf
rcr
cmp
popa
out
and
pop
dec
push
fisttps
lret
dec
sbb
gs
popa
mov
inc
inc
outsb
xor
fists
add
popa
dec
mov
cmpsl
icebp
test
push
ret
stos
imul
hlt
fisubl
and
bound
ds
jns
aad
jle
mov
mov
pop
or
ret
aaa
add
xchg
out
adc
imul
fisubs
insb
inc
sbb
cmp
lahf
mov
or
dec
adc
mov
jp
xlat
xor
mov
cmpsb
sub
jo
xchg
outsl
scas
fcomps
mov
xorb
gs
outsl
jo
add
jl
repz
inc
push
add
add
or
scas
sub
adc
dec
sub
lods
test
pop
fldl
stos
xchg
cmp
mov
lcall
outsl
jmp
inc
cmpsl
jge
iret
fs
scas
rorl
nop
aad
hlt
call
sub
jmp
dec
jne
rcll
insl
or
cmpsb
sarb
loopne
inc
mov
or
notl
dec
xchg
popf
les
cmpsl
mov
sbb
daa
or
leave
inc
adcl
and
scas
add
jge
lcall
fsubl
outsb
push
inc
fstpt
loope
insb
aad
inc
jmp
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shr
shl
mov
mov
mov
mov
xor
or
mov
shll
xor
mov
jmp
jbe
fstpt
insl
cmpl
stos
int
sbb
sahf
adc
sbb
or
sub
jle
mov
cmp
push
push
xor
jmp
push
and
lret
sbb
fdivs
mov
mov
jne
lock
ljmp
pushf
fsts
sbb
in
inc
dec
cwtl
out
push
data16
mov
leave
push
push
cmp
push
out
mov
pop
or
enter
fnstsw
cwtl
lcall
mov
or
add
push
adc
cmpsb
popf
xchg
sbb
icebp
iret
mov
cmpl
daa
incl
movsb
mov
pushf
rcll
jge
cmp
lea
inc
cltd
mov
and
jb
xchg
xor
in
mov
xor
inc
push
cld
push
insb
pop
inc
sbb
xchg
int3
hlt
mov
push
dec
dec
pop
fbstp
cltd
test
push
sub
or
sbb
ja
inc
cld
imul
je
stc
mov
mov
cmpsb
jge
inc
popa
fwait
jns
popa
sti
mov
pop
popf
push
out
xchg
jl
test
loopne
or
movsl
xchg
cli
in
scas
xchg
cli
adc
fldt
pop
add
lods
mov
mov
call
xchg
mov
adc
sub
xor
pop
sbb
js
and
fdivr
out
cmpsl
push
or
nop
inc
sub
and
stos
mov
scas
ljmp
mov
add
or
mov
es
mov
jge
outsb
xor
lahf
mov
jecxz
sbb
lea
or
mov
ja
idiv
or
lds
pusha
jno
loopne
fisubrs
mov
inc
pop
daa
or
push
and
sub
aam
mov
dec
inc
xchg
jb
mov
lret
int
xchg
mov
sbb
inc
fwait
jmp
nop
mov
pop
mov
jl
and
add
sbb
int3
stc
sub
int
stos
cmp
ret
cmp
ret
in
xchg
lret
mov
hlt
jl
pop
add
jb
subb
cmp
loopne
aaa
insl
arpl
decb
sub
cmp
push
mov
sbb
sbb
pop
pop
arpl
inc
js
and
xor
dec
fwait
lcall
mov
cmpb
jne
and
push
stc
lea
jnp
inc
into
cmp
ss
xchg
add
sahf
jno
nop
sahf
cmp
lahf
in
mov
cmp
iret
jge
dec
adc
iret
push
ror
js
xlat
pop
popl
inc
mov
rcl
mov
push
or
call
test
push
pop
push
fmull
out
jge
sub
outsl
data16
mov
lret
jb
aam
out
enter
push
je
jl
outsl
mov
sub
dec
xchg
es
test
ss
mov
pop
xchg
xlat
mov
iret
in
pushf
dec
mov
or
pop
jp
jmp
jbe
fsts
in
mov
shrl
sti
out
push
jmp
mov
pop
xchg
dec
mov
jne
mov
fldcw
mov
xchg
ljmp
orb
fsts
addl
mov
or
adc
dec
test
pop
cld
movsb
mov
mov
cmc
pop
rcll
push
fisttps
ret
and
push
mov
xlat
and
jnp
pop
out
push
cmp
xor
mov
loopne
push
sub
andb
add
lock
jge
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
jmp
std
dec
mov
sub
fidivrl
test
push
stos
xchg
push
pop
jle
xor
sbb
cli
testl
test
fldenv
push
das
aaa
or
in
cltd
push
stos
out
push
in
dec
jp
push
adc
inc
push
xchg
xchg
pop
push
mov
loope
push
or
and
fildll
rorl
sub
in
mov
xor
pop
jl
mov
cmp
mov
pushf
push
in
xchg
aas
in
mov
add
rep
rcr
jmp
xchg
out
xchg
mov
in
flds
insb
lret
loope
xchg
jle
inc
sbb
sbb
dec
jl
mov
add
or
dec
mov
scas
shr
and
scas
jns
daa
repnz
loop
mov
in
loop
add
nop
jmp
add
scas
negl
fadd
pop
mov
pop
cmp
inc
in
xrelease
pop
cwtl
pushl
push
jno
aaa
mov
mov
dec
lret
xchg
fwait
addr16
addl
cmp
std
jb
jns
jmp
push
xchg
xor
inc
into
mov
popa
ja
xchg
hlt
inc
jno
pushf
jecxz
mov
mov
fsubs
push
push
scas
mov
xchg
push
pop
push
imul
sbb
xchg
jge
mov
loope
inc
cmpsl
fisubrs
cwtl
mov
fs
sub
insl
sub
xchg
insb
mul
loop
ret
and
xchg
push
push
cmp
stc
mov
pop
cmc
jp
popf
imul
clc
mov
je
pop
gs
lea
sbb
push
cs
mov
aas
popa
xlat
mov
jnp
xlat
cmpsl
xchg
repz
mov
int
add
adc
adc
call
rol
imul
push
out
in
cmpsl
test
aad
xchg
cmc
out
and
repnz
pop
fcomps
test
inc
inc
sbb
mov
xchg
cmp
aaa
push
cmp
mov
mov
pop
mov
cltd
sbb
mov
popa
fwait
popf
fistpl
push
int
dec
pop
test
mov
mulb
js
dec
inc
popa
mov
push
repz
add
dec
jg
mov
push
jbe
out
push
test
bound
cmpsl
sub
push
sbb
fidivrl
mov
pop
inc
cmp
mov
add
or
std
ds
pop
add
lea
xlat
repnz
fwait
mov
and
cmp
ret
pusha
mov
lcall
sbb
mov
jg
and
pop
dec
add
sbb
xchg
sbb
and
sbb
pop
xchg
or
cmp
daa
int3
cltd
hlt
ljmp
subb
js
and
hlt
pop
sub
pusha
add
insb
and
jb
and
je
repz
enter
sbb
add
xchg
ret
out
pop
aaa
dec
dec
ret
clc
lret
lcall
les
dec
xchg
idivl
jl
aas
jecxz
loope
sub
push
cli
lret
bnd
notb
pop
aad
xlat
add
pop
cmp
repnz
sub
add
inc
xor
add
ficomps
add
repnz
mov
inc
ret
es
pop
mov
loopne
movl
pushf
sub
mov
mov
arpl
loope
jmp
jne
cmp
add
jmp
arpl
pusha
lock
imul
movl
dec
add
lods
enter
add
ljmp
out
xor
jmp
sbb
jmp
ljmp
jo
or
sbb
adc
xor
pop
lock
push
jnp
vpminub
inc
push
xorb
dec
mov
shll
inc
pop
push
inc
outsb
mov
stc
xchg
push
push
mov
inc
mov
push
add
sub
shlb
jmp
sub
sarb
push
push
pop
mov
dec
repz
clc
js
mov
movl
mov
cmc
out
xchg
cmc
fistl
aas
xchg
stc
mov
inc
lahf
jmp
inc
pusha
xchg
outsl
mov
xchg
push
inc
js
cmpsl
mov
insl
fcmovb
decb
stc
jo
cmp
negb
cld
mov
adc
sahf
sbb
pop
inc
sub
lock
xlat
decb
loope
xchg
outsl
into
xchg
xchg
mov
mov
mov
mov
push
hlt
enter
push
jle
scas
imul
jo
adc
sub
dec
cmpsl
and
pusha
aam
cmpsl
into
push
add
dec
xor
jge
xchg
xor
sub
mov
je
int3
test
inc
sbb
mov
lods
mov
pop
push
xchg
and
or
and
push
mov
fistl
push
mov
lahf
push
cli
ud2
xchg
dec
mov
xor
push
enter
inc
bound
xor
movsl
ret
add
loop
lar
adc
rolb
sub
and
loope
test
popa
add
vmovntpd
lds
ljmp
je
fisubrl
mov
xchg
sbb
sub
mov
xchg
push
cwtl
jge
out
fistpl
sub
cmp
call
xor
lock
pop
jg
xorl
pop
sar
mov
std
or
mov
xchg
cmp
xor
add
push
fildll
cmp
nop
movsb
xor
xor
pop
cmp
movd
jmp
pop
jae
cmpsl
and
scas
sbb
xchg
jmp
xchg
sub
jne
inc
test
lahf
fmuls
xor
loopne
in
or
jle
in
arpl
inc
pop
dec
sbb
jle
outsb
xchg
xchg
pop
jae
inc
std
adc
cs
pop
ret
jecxz
popl
dec
leave
and
into
jmp
iret
cmp
ss
je
sbb
pushl
fsubrs
icebp
movsl
or
movsl
inc
loope
adc
imul
or
lret
add
mov
jo
jge
xor
dec
xor
xor
into
aad
cltd
lret
fstpl
mov
aas
cmp
pop
fnstcw
cmp
lret
inc
xchg
insb
adc
pop
int
add
sub
xor
mov
lahf
sarl
sti
les
inc
nop
scas
imul
jl
dec
rcr
aas
repnz
in
and
orb
push
jb
cmc
dec
scas
inc
xchg
cmp
add
mov
sub
stos
pop
lret
nop
mov
jmp
sbb
andb
ljmp
sub
dec
xchg
mov
dec
jmp
out
test
mov
into
adc
push
add
adc
add
out
add
or
lahf
cli
int
pop
or
adc
ja
fimuls
jge
cli
adc
xchg
xor
out
sbb
cli
xchg
adc
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
shl
mov
mov
mov
shrd
xor
or
mov
mov
mov
mov
shl
xor
or
shr
xor
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
movl
shrd
notl
shr
ret
add
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
movl
xor
mov
mov
not
movl
decl
mov
movl
mov
sbb
movl
jmp
clc
sub
sub
cmp
stos
pop
and
sbb
sbb
ror
dec
daa
cmpsl
stos
test
sbb
les
pop
aaa
testb
outsb
inc
jecxz
test
push
sbb
call
add
dec
and
jl
loop
mov
jle
int
jne
sub
dec
lcall
dec
out
sub
insb
ljmp
jl
popa
nop
dec
push
js
adc
cmp
add
inc
inc
xchg
jl
aad
fisttpll
cmp
or
jmp
mov
fistps
push
or
cwtl
cmp
xor
jns
dec
jno
lcall
js
lret
or
icebp
sub
sbb
loopne
cmp
subl
test
push
or
std
cmp
or
inc
push
sbb
stos
adc
test
mov
jmp
outsb
or
adc
lds
xor
cmp
gs
lock
mov
into
mov
cmp
xor
cmp
mov
adc
iret
push
arpl
imul
jae
fldenv
lods
and
loop
ret
pop
pop
xchg
push
add
shll
pop
mov
sbb
fs
jno
xchg
shlb
cmp
into
rol
xchg
loope
jecxz
movsb
sub
imul
sub
subl
or
inc
bound
mov
push
fsubrs
in
mov
jb
adc
mov
push
and
repnz
jmp
cmp
nop
sub
push
mov
jo
outsb
fidivl
xor
add
enter
stc
mov
pop
fcmove
scas
mov
or
cs
add
mov
psubd
sub
xchg
nopl
mov
sub
lods
aam
daa
and
pop
push
repnz
test
test
mov
das
and
dec
in
ss
cmc
push
jns
push
sahf
outsl
xchg
dec
jo
jmp
dec
adc
jo
sbb
scas
out
and
loop
push
lret
xchg
aaa
cmp
jbe
aas
shl
pop
fxam
cmp
xor
xor
ficoml
jecxz
xchg
jle
or
xor
ret
scas
jo
out
mov
inc
lods
or
add
cmp
stos
shlb
imul
sub
roll
cwtl
mov
fcompl
xor
or
arpl
into
add
ret
jnp
xchg
push
or
ror
cvtps2pi
jne
loopne
loopne
aas
cwtl
popa
popf
cmpsl
mov
hlt
das
xchg
cmp
xchg
lock
outsb
inc
push
or
sar
mov
aad
cmp
call
ret
jmp
sti
add
inc
out
and
popf
lock
sahf
dec
lcall
loope
dec
shl
out
pop
or
int
mov
lock
jno
xchg
adc
sti
ret
xor
fs
sub
das
movsb
jnp
inc
xor
int3
add
das
bswap
jge
rcrl
out
jmp
arpl
push
in
sar
into
icebp
mov
aaa
mov
cli
into
ficoms
adc
ficompl
stos
in
out
inc
pop
fwait
js
add
push
sub
sbbl
push
lcall
sbb
push
les
lock
lock
cwtl
in
dec
push
jo
mov
push
aam
ret
ljmp
pop
and
movb
jge
mov
mov
call
dec
loopne
inc
loopne
outsb
add
xor
push
movl
movl
push
xor
movl
sbb
mov
cmpl
mov
mov
jmp
mov
movzbl
cmpl
ja
push
pushl
pushl
push
call
mov
xor
or
or
mov
adc
xor
or
adc
mov
and
mov
push
adcl
push
andl
jmp
xchg
sahf
push
push
fists
lret
aam
mov
outsb
adc
sbb
add
int3
sbb
hlt
inc
jp
imul
pop
sub
push
int
jne
xchg
dec
out
fsub
pusha
inc
and
sbb
xlat
adc
add
stos
cmp
popf
js
rorl
push
xor
xchg
push
mov
jne
fisubrs
clc
xor
dec
scas
mov
pop
in
out
repnz
scas
rcl
out
inc
test
mov
mov
cmp
insb
stos
cmp
or
lret
call
ret
mov
sahf
fstpl
aam
outsl
adc
add
inc
lret
popf
jae
arpl
add
xchg
pop
add
adc
ret
fistps
pop
dec
mov
pop
pop
inc
sub
lock
mov
adc
stos
add
incb
movsl
out
ja
jb
mov
aas
xor
mov
mov
jb
sbb
fwait
or
cmp
sub
inc
cli
sub
imulb
fistpll
sub
cmpsl
ja
paddsw
push
out
inc
mov
mov
lret
sbb
js
add
pop
cmp
or
out
fcmove
push
dec
pop
pop
lock
fmulp
out
inc
int3
lret
iret
daa
lcall
ja
jp
imul
push
fs
mov
js
jns
scas
shlb
cmp
add
jbe
xor
dec
mov
adc
rcrl
cmpb
sbb
sti
mov
sbb
push
repnz
int
xchg
mov
ret
mov
pusha
xchg
cld
and
rcl
int
xchg
shlb
hlt
arpl
mov
inc
xor
mov
pop
or
das
test
bnd
mov
sub
ss
es
test
jne
sub
ds
call
sub
mov
call
dec
repnz
cli
cmp
lock
mov
push
xor
mov
adc
mov
fstpl
icebp
nop
xor
jmp
inc
punpckldq
inc
push
pop
lods
jle
jnp
push
ja
xor
repnz
sbb
stc
out
pop
mov
jno
inc
fwait
mov
jp
cmpsl
pop
inc
nop
inc
mov
cli
xor
jle
scas
inc
ss
pop
dec
pop
pusha
xor
or
xchg
decl
mov
pop
inc
xchg
inc
ret
jne
aaa
xorb
sbb
js
lods
sbb
mov
scas
adc
inc
lds
add
insl
dec
and
cmpsb
in
and
into
jl,pt
adc
test
ret
mov
in
pop
cli
push
imul
insb
pop
loop
hlt
data16
insb
mov
paddd
sqrtps
in
sub
arpl
mov
je
inc
mov
xchg
jb
outsl
pop
xor
inc
out
js
mov
repnz
mov
das
adc
mov
xor
fldcw
scas
sub
loop
xorb
and
cmc
mov
loope
rorb
push
pop
outsb
cwtl
sbb
shll
jno
das
testb
inc
pop
pop
mov
scas
mov
jg
sbb
cmp
stos
jmp
jae
xor
pop
pop
jge
iret
stc
xchg
xor
mov
stc
daa
dec
mov
adc
xchg
pop
sahf
push
nop
out
jbe
xorb
inc
lea
pop
lea
loope
xchg
pusha
pop
in
mov
xchg
cmc
pop
jecxz
sbb
or
fsubrl
or
add
xchg
and
popa
sbb
cmp
scas
mov
mov
inc
sub
dec
cli
out
dec
mov
or
ret
leave
mov
dec
adcb
lret
addb
addb
cld
mov
ja
inc
add
xchg
add
mov
sbbl
push
or
subl
push
xorl
or
xor
xor
subl
push
push
call
xor
or
adc
mov
xor
mov
andl
push
addl
push
subl
push
push
subl
call
mov
add
mov
cmpl
not
movl
jmp
notl
mov
cmpl
jl
push
pushl
call
xor
and
movzwl
or
add
adcl
sub
cmpl
mov
movl
movl
jmp
movl
movl
cmpl
jbe
pushl
push
call
xor
adc
andl
and
add
movl
movzwl
xor
movl
decl
movl
movl
cmpl
mov
mov
not
movzbl
jmp
movl
movl
cmpl
je
push
push
call
sbb
mov
xor
or
sub
imul
and
sbb
movl
movl
mov
sbb
mov
notl
mov
or
mov
sbbl
jmp
adc
packssdw
jb
jnp
push
sbb
stos
or
sbb
outsb
adc
sbb
mov
in
out
fwait
adc
ljmp
mov
shlb
mov
roll
movsl
popa
and
aas
in
subl
and
push
jp
inc
cmp
and
sbb
test
dec
xchg
push
hlt
add
xchg
loope
addr16
imul
imul
xor
lods
mov
insl
xor
push
xor
sub
sbbl
imul
mov
iret
mov
cmp
bound
lods
shlb
mov
int
ficoms
or
loope
cld
sub
iret
lock
mov
sbb
mov
das
sub
sbb
xchg
mov
fidivl
fcmovnu
insb
fcmovnb
mov
sbb
mov
mov
pop
mov
sub
pop
leave
std
ficoml
adc
mov
and
mov
dec
adc
mov
pop
push
push
insl
mov
mov
out
sbb
outsb
sub
cmpsb
dec
fidivrl
jnp
jne
mov
out
rcr
insb
fcompl
pop
dec
xchg
cwtl
in
xlat
popf
fldl
jo
inc
aam
jo
movsl
cmp
movsb
out
or
pop
arpl
cmc
call
cmp
and
xlat
mov
sahf
xor
in
notb
sbb
in
xor
sub
test
iret
mov
mov
xorl
fst
inc
jl
ds
adc
cmp
sbb
fwait
out
jle
xchg
xchg
xchg
ror
or
popf
jmp
xor
into
xchg
in
icebp
cmp
shl
cld
add
js
or
jl
mov
sbb
mov
gs
push
sarb
les
pop
xchg
inc
mov
clc
sub
xor
and
scas
mov
lds
popa
jae
out
xchg
shll
mov
push
inc
mov
mov
sbb
pop
loopne
std
jae
lcall
popf
cmp
imul
mov
pop
mov
scas
jbe
mov
cmpsl
cmc
push
jle
inc
lock
xor
jo
jmp
and
roll
fwait
pop
cmp
rcll
arpl
push
pusha
jle
pop
push
test
xchg
movsb
mov
mov
rcll
mov
iret
inc
movb
data16
std
scas
int
adc
ds
add
xchg
lcall
ficoms
xlat
call
ret
pop
addb
cli
sbb
call
jb
cmp
pusha
fidivl
inc
xchg
sbb
xor
or
push
xorl
lcall
scas
jae
repnz
mov
popa
lahf
xchg
jmp
in
repz
mov
lods
aas
in
test
push
and
mov
pop
inc
pop
xor
inc
sub
ds
pop
call
lods
xchg
fmulp
test
xor
mov
clc
mov
and
pop
icebp
out
cmp
inc
xor
mov
fstpl
push
out
push
mov
xchg
orl
sub
add
xorb
movsl
pushw
out
aad
insl
add
mov
mov
adc
stos
cmp
mov
xchg
aam
sub
hlt
test
jbe
adc
mov
insl
cmp
adc
lea
scas
xlat
lea
push
xor
push
movsb
lods
testl
scas
pop
jb
mov
push
pop
xorb
movsb
cmp
pop
add
rorb
add
add
add
ret
lock
and
mov
andl
or
cmpl
mov
not
movl
jmp
movl
movl
cmpl
jbe
pushl
push
call
adcl
not
movzwl
sub
mov
adcl
mov
xor
orl
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
jmp
movsl
movsb
test
test
sbb
fdivl
mov
and
sbb
outsb
adc
sbb
and
popa
jp
adc
jg
sub
mov
std
jnp
xor
cltd
iret
cmp
les
aas
pop
imul
test
adc
fs
cmc
leave
out
jo
or
adc
out
jnp
jno
push
add
fidivl
les
mov
fisttpl
push
add
aas
fwait
cwtl
movsl
addr16
lcall
mov
test
mov
cmc
out
jecxz
xchg
sub
adc
mov
dec
adcb
stos
pop
dec
adc
jb
ret
imul
inc
jb
cli
pop
xor
xor
pop
jle
cmp
rorl
sti
xor
test
movsb
scas
cmp
aas
mov
push
xchg
jns
mov
mov
lcall
dec
mov
push
inc
mov
paddw
gs
pcmpeqb
mov
jmp
pushf
movsl
pop
hlt
jg
dec
push
aas
stc
pop
inc
sar
repnz
std
pop
mov
sub
jns
cmp
lcall
push
inc
xor
lret
in
add
xor
lret
lahf
pop
fistps
icebp
std
push
fdivs
andb
xor
ljmp
pop
jnp
xchg
imul
in
aad
loop
inc
cmp
xchg
gs
adc
xchg
mov
lahf
push
dec
sub
les
jbe
push
push
inc
rsm
and
loop
in
addr16
xchg
dec
jp
mov
dec
call
or
pop
mov
push
fwait
scas
cli
inc
inc
bound
lock
in
inc
xchg
xchg
aaa
mov
cmc
popa
sbb
cmc
adc
lahf
sub
mov
call
mov
mov
inc
aam
mov
insl
cld
pop
ja
mov
and
add
jne
jl
lods
push
out
ljmp
repnz
jno
add
or
jge
outsb
mov
lods
dec
in
sbb
and
stos
in
sbb
fisttps
and
xlat
xchg
cmp
ret
lahf
call
jp
mov
mov
sahf
xchg
mov
ret
cli
les
sar
les
dec
rol
mov
xor
lea
xchg
mov
cmp
sbb
xchg
fisubrs
sbb
jbe
and
push
dec
bnd
inc
lods
iret
and
fcmovnbe
jbe
call
dec
lret
xchg
in
xor
dec
jp
mov
lcall
mov
jl
inc
cmp
jo
push
stos
or
mov
sar
jne
mov
adc
xor
into
je
fstl
es
xlat
scas
mov
mov
sub
mov
out
mov
jg
leave
loopne,pt
push
jbe
in
xor
insb
xor
pop
fadds
stos
mov
push
mov
cmc
push
dec
pop
pusha
clc
shll
pusha
orb
mov
xchg
and
sub
and
into
mov
mov
cld
xor
mov
test
ja
cli
lcall
movsl
stos
xchg
out
cmp
rorb
pusha
lret
loopne
sbb
and
out
push
arpl
mov
add
pushf
sub
inc
jge
sbb
mov
addb
not
inc
les
mov
rcrb
in
mov
movl
divl
pop
dec
ret
sbb
popl
cmp
xchg
pop
lcall
push
push
sub
pop
mov
xchg
les
lock
movsl
cmpsl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
jmp
fsts
or
push
jp
jo
es
push
add
sbb
jbe
push
inc
jo
add
inc
ret
orb
inc
fadds
loope
cmp
add
mov
mov
cmpb
jge
mov
and
shlb
push
shrl
or
sbb
sub
adc
pop
sti
imul
je
andb
call
cmc
or
lods
rorb
divb
aad
sbb
outsl
pop
pop
lods
dec
out
add
jl
rolb
js
stc
jbe
int
xor
arpl
pop
sub
das
es
je
lods
push
scas
cmpb
sti
pop
lahf
dec
push
aad
cmpsb
pushf
inc
xchg
in
sti
adc
ret
jae
dec
jb
sbb
in
addr16
mov
cmp
jg
repz
scas
daa
int
mov
sub
leave
mov
inc
inc
sbb
mov
pop
repnz
pop
cmp
push
push
xchg
mov
pop
pop
arpl
sub
adc
jmp
pop
sbb
jg
push
fwait
inc
cmpl
das
inc
xchg
xor
mov
ljmp
int3
negb
lahf
fsubr
sarl
mov
fs
add
int3
mov
cmpsb
jmp
jae
add
ss
adc
add
lahf
add
xchg
push
das
sub
hlt
int
adc
push
mov
js
push
jno
js
mov
movsl
and
fists
repnz
fldz
mov
xor
dec
ljmp
mov
pop
jnp
out
iret
aam
push
inc
xchg
lods
sub
sarb
or
sub
int3
nop
xor
pop
rclb
sbb
and
int3
mov
pop
frstor
push
add
aaa
loopne
notb
sub
jno
hlt
xor
sbbb
push
aas
and
xlat
jnp
sbb
rcl
push
fwait
je
test
ret
dec
movb
xchg
sub
aas
fnclex
xchg
stos
push
loopne
or
hlt
lcall
sbb
popf
jae
aam
ror
lret
sbb
aad
call
sahf
or
ja
mov
dec
lcall
or
dec
repnz
mov
cmp
mov
hlt
push
add
lret
lods
sbb
xchg
adc
test
loopne
dec
inc
sbb
sub
fiaddl
xor
pop
mov
lret
add
cmp
jns
push
dec
popa
jnp
pushf
mov
dec
push
addl
aaa
inc
into
push
sub
ja
repnz
dec
sbb
ret
mov
xchg
jle
push
add
sbb
sub
and
push
inc
cli
int
dec
pop
inc
gs
ret
xchg
jl
lcall
pop
mov
ret
mov
inc
in
cwtl
int3
jecxz
rol
test
daa
movsb
inc
scas
sub
test
and
jle
rcl
hlt
add
dec
rcrl
xchg
cmp
xor
add
xor
sbb
mov
jns
and
push
mov
sub
iret
sbb
and
lds
add
scas
not
mov
and
jmp
sti
sub
in
inc
imul
clc
enter
pusha
jp
push
cmp
dec
ja
insl
cli
xor
and
ss
dec
in
add
cli
loop
dec
shl
scas
idivb
cld
inc
pop
stos
mov
iret
cmpl
jns
popa
xchg
out
fwait
xchg
lods
int3
sbb
mov
push
movsb
js
test
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
jmp
xor
mov
lcall
test
jl
std
sbb
outsb
adc
sbb
jle
fiadds
dec
add
cli
stos
push
or
jecxz
gs
lret
jo
lods
lret
movsl
mov
or
scas
int3
mull
pop
mov
push
dec
mov
mov
pop
inc
iret
das
in
and
cmc
jb
icebp
add
cmp
fwait
stos
test
rcll
xchg
arpl
jge
call
cmpsb
mov
add
ret
cs
cld
push
push
mov
or
daa
inc
jne
jmp
mov
jle
ret
je
sub
xor
roll
leave
call
mov
or
lret
mov
xchg
push
popf
mov
xchg
imulb
mov
outsb
xchg
pop
sbb
movsl
pop
clc
out
mov
cmp
mov
mov
sbb
pop
dec
rcrl
sahf
mov
xchg
cmp
adc
jmp
mov
push
xchg
pop
pop
into
dec
push
xor
jg
dec
int3
das
int
fwait
or
sub
mov
add
push
scas
insl
test
test
stc
or
jns
les
repnz
loopne
sbb
xor
in
pop
rolb
idivl
and
sbb
in
or
jecxz
sub
ljmp
les
dec
popf
leave
sbb
xchg
xor
fsubrl
or
sub
hlt
cmp
mulb
or
lret
inc
nop
mov
jb
mov
fistl
pop
xor
jne
fstpl
mov
mov
jae
pop
pop
dec
push
lock
pop
dec
xchg
or
cmpsb
dec
sbb
icebp
aad
dec
xchg
je
xor
iret
sarl
push
icebp
xor
addr16
paddd
xchg
out
ds
inc
jb
insl
xlat
shrl
mov
insl
inc
xchg
je
mov
test
cmp
mov
pop
xchg
inc
popa
rcll
xchg
mov
insl
scas
movsl
out
sub
sbb
jne
loop
call
jns
daa
lock
cmpsb
aas
pop
jge
mov
and
xlat
ret
cmp
mov
sbb
movsb
in
adc
popa
clc
or
cmp
gs
xchg
xorl
xchg
xor
lock
jl
mov
in
xchg
aaa
or
cmp
xor
mov
ss
test
ficomps
add
mov
movsb
aas
mov
add
ds
or
adc
dec
out
js
aas
push
inc
mov
test
call
jecxz
ljmp
mov
daa
ret
sub
pop
push
movsb
sub
stos
shrb
jle
jecxz
push
aam
shl
test
and
inc
jbe
mov
cwtl
cwtl
add
jne
or
add
mov
iret
xlat
clc
xchg
std
inc
cltd
inc
jle
fidivs
cwtl
sbb
cmp
xchg
push
pop
es
add
out
and
mov
dec
pop
mov
ret
fmuls
arpl
adc
adc
inc
jb
xor
dec
dec
pop
inc
cmp
lret
jmp
or
cli
cmp
xchg
outsl
stos
add
js
cmp
push
mov
dec
addr16
imul
mov
push
and
xchg
stos
mov
test
jp
cli
mov
stos
mov
test
cmp
ja
int3
std
mov
sub
popf
roll
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jmp
xchg
and
cmc
mov
mov
jo
cmc
sbb
outsb
adc
sbb
subl
mov
arpl
in
dec
xchg
cltd
cmpsl
mov
mov
mov
stc
mov
loop
jno
shrb
adcb
fldenv
sahf
popa
cmpsb
push
rcl
cltd
jb
out
push
adc
adc
xor
push
push
pushf
cs
and
pop
jns
add
je
lret
int
mov
lock
inc
sub
lret
scas
shll
inc
sbb
cmp
xchg
push
cmp
dec
sub
inc
xor
dec
adc
repz
mov
mov
call
sub
push
gs
push
jl
sahf
push
rcl
aas
or
dec
lret
inc
mov
push
or
fisttpll
adc
push
inc
in
cwtl
popa
push
xchg
test
jno
xor
out
pusha
ficoml
adc
add
inc
xor
mov
jae
bound
aas
pop
adc
addr16
lea
push
mov
imul
sbb
ss
jno
mov
lock
inc
pop
and
mov
sub
xchg
in
sahf
out
mov
inc
adc
xchg
sahf
xlat
adc
jecxz
adc
add
lcall
cmc
xor
xor
out
push
xor
inc
lods
sub
insl
xor
dec
pop
xchg
or
mov
filds
test
popl
dec
cwtl
cwtl
and
mov
mov
inc
sbb
fstps
les
sub
pop
lea
pop
sub
mov
std
add
adc
pushf
push
mov
pop
cmp
jns
insb
arpl
sub
or
in
and
pushf
push
dec
fisttpl
jne
or
pop
push
subl
test
or
add
bound
pop
mov
xor
mov
push
sub
mov
mov
ret
lea
ret
mov
je
fisttpl
xor
shrb
push
inc
aas
and
jae
into
clc
jne
fs
mov
dec
icebp
fisubrs
outsl
xchg
popa
ror
sub
gs
xor
insl
xchg
sbb
inc
mov
push
jle
lret
ret
mov
pushw
insb
xchg
sub
sub
add
xchg
shlb
inc
push
hlt
outsl
fistpll
or
inc
rcrl
mov
subl
sbb
cmp
jmp
sub
ficoms
jecxz
cmp
mov
cmpsb
sbb
xchg
xlat
jnp
dec
fcoms
fs
cmpsl
arpl
sbb
lods
imul
sahf
ja
inc
gs
hlt
cmpsb
popf
dec
cmp
push
adc
inc
fisubl
push
inc
and
jae
jno
cmp
push
cmpsb
ds
mov
cs
cltd
fcoml
imul
jl
into
std
leave
addr16
jne
sbb
jl
clc
cli
les
lret
jnp
sub
cmpsl
js
mov
dec
dec
pop
sar
xor
rclb
test
rcll
sbb
lcall
int
fstpl
dec
or
cli
lcall
vdivpd
outsb
jge
icebp
pop
mov
out
stos
scas
shrl
pop
mov
sar
mov
loope
pop
cli
shrb
jmp
icebp
das
aam
stos
pop
xchg
push
mov
mov
or
jne
fdiv
fisubrl
nop
insb
mov
scas
xchg
cmc
ljmp
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
jmp
sub
sti
xchg
sbb
xorl
rclb
sbb
addr16
jmp
mov
pop
sbb
dec
psadbw
fisttps
dec
jne
xchg
mov
sbb
pop
adc
loopne
add
pushf
sub
sbb
lods
cmp
iret
scas
adc
push
pop
lret
cmpsl
jle
hlt
imul
adc
and
in
out
out
lds
out
jne
int3
test
dec
repz
ds
scas
shlb
std
ret
sbb
insl
cmp
test
adc
sti
jl
stos
mov
jg
fwait
cs
inc
test
dec
jno
cmp
mov
jg
imull
test
add
aam
imul
jb
cmpsb
rcl
mov
paddusb
hlt
je
adc
mov
lret
fdivrl
shrl
sub
mov
add
les
arpl
aaa
outsl
loop
xchg
cmp
fisubrl
and
in
imul
xlat
mov
mov
push
dec
in
adc
xchg
pop
shll
dec
sub
pusha
pop
sbb
arpl
fs
xlat
roll
mov
mov
mov
jo
addr16
mov
outsl
sub
repz
dec
test
xchg
in
jb
dec
stos
push
lock
clc
dec
pushf
xchg
mov
pop
fld
jno
test
mov
dec
out
dec
sahf
xor
inc
addr16
sahf
lock
call
scas
lcall
adc
inc
or
cmp
jp
push
sub
xchg
add
sub
inc
out
sbb
rdmsr
inc
pop
aam
xchg
jnp
sub
sbbb
outsb
jae
iret
popf
sub
enter
mov
sbb
pushl
add
mov
rclb
nop
mov
jmp
pusha
lret
imul
push
aad
lods
adc
mov
fcmovnb
cmpl
dec
push
clc
sbb
jmp
pop
out
inc
xor
jecxz
inc
scas
imul
clc
repnz
xchg
xchg
or
inc
popf
push
xchg
jnp
xchg
pop
loope
scas
repz
xor
notl
out
cmpsb
inc
loope
pushf
int3
mov
xchg
lock
sub
int
mov
mov
and
out
pusha
popa
add
adc
jecxz
fcoml
lods
lods
add
inc
cmc
addr16
lret
insb
shll
inc
lret
add
repnz
mov
in
data16
clc
mov
pop
ja
scas
sbb
push
mov
mov
xor
inc
cld
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
jmp
nop
xchg
lret
ja
das
sub
sbb
mov
sbb
adc
sbb
ja
imul
adc
and
rorb
shlb
mov
pop
cltd
ja
and
pop
jbe
pop
lcall
iret
ja
inc
sbb
jmp
fmuls
add
and
cmpl
pop
movsb
mov
subb
in
stos
adc
ret
jmp
xorb
sbb
pop
leave
outsl
xor
daa
inc
inc
push
addr16
in
xor
xchg
sub
lcall
call
fcmovnb
psllq
sub
enter
imul
mov
repz
cmpsb
push
stc
or
dec
mov
enter
jnp
xchg
sbb
in
rcrb
and
dec
fs
imul
cmc
mov
sbb
fsubr
adc
sub
mov
repz
xor
push
jne
call
jb
cmc
test
fbstp
in
or
leave
pusha
outsl
sub
cmpsl
gs
mov
adc
sbb
cmpsb
push
jg
negb
enter
mov
or
pusha
adc
or
sahf
pop
and
mov
or
aas
inc
pop
imul
lret
iret
cwtl
cmp
popf
pop
jecxz
inc
mov
mov
mov
dec
add
in
test
clc
sbb
mov
push
xor
xchg
adc
std
test
cmpsb
sarl
lret
sbb
fbld
cmpsb
sub
pop
xor
pop
cld
and
jge,pt
aad
hlt
xlat
sub
mov
loop
sbb
lret
adc
xchg
popa
ret
push
pop
lret
jge
ja
lds
push
ret
rolb
lods
andl
pop
xchg
fstpl
xchg
push
jmp
orb
es
xchg
dec
adc
jmp
push
rcrb
roll
flds
sub
test
in
pop
fcoms
lock
sbb
or
push
loopne
inc
mov
inc
insl
push
pop
pop
sbb
arpl
pop
scas
sahf
and
outsb
push
outsl
dec
sub
pop
mov
fwait
sti
push
xchg
subl
mov
ret
movsl
cmp
pop
inc
jle
pop
bound
adc
lea
adcb
cmp
inc
mov
inc
rcrb
dec
jle
add
rolb
push
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
jmp
test
push
inc
sbb
jnp
inc
sbb
adc
hlt
push
loop
sbb
adc
sbb
data16
pop
jp
sbb
icebp
loopne
jmp
sub
jl
adc
clc
jne
adc
lods
jne
sarl
orl
and
mov
mov
cmpb
jae
fcoms
in
dec
mov
xor
mov
outsl
jae
cs
or
fwait
lock
jns
and
call
shr
vmwrite
outsb
ja
lret
fwait
scas
lds
js
ss
jns
or
jmp
mov
mov
sarb
call
repz
mov
lods
pushw
xor
test
insl
bound
out
jmp
ret
xchg
fildl
xchg
arpl
push
je
in
or
sub
push
fstpl
and
imul
ss
shrb
sub
jl
add
pop
xchg
bound
jecxz
aaa
clc
in
and
and
xchg
lahf
mov
add
mov
mov
sbb
in
dec
mov
ret
sarl
negl
rol
in
sub
sbb
mov
mov
pop
inc
fwait
ljmp
aas
stos
das
aas
stos
bnd
and
dec
cmc
mov
xor
inc
dec
jmp
les
dec
add
aad
mov
lods
lock
shlb
xlat
scas
out
cltd
jae
test
push
test
jns
mov
cmp
lock
insb
mov
add
je
cmpsl
movsl
mov
fistps
jnp
lock
cld
int
sub
rcr
jl
cli
dec
or
xchg
xor
dec
negl
imul
sbb
cmpsl
and
pop
sbb
sbb
cmp
push
push
or
adc
ds
cwtl
jmp
divl
xchg
xchg
pop
push
pop
fninit
xchg
jl
insl
add
fldcw
jb
bound
pmaxub
out
shrb
loop
jle
dec
pushf
mov
mov
xorl
mov
vpsraw
fcompl
inc
jo
mov
stc
fcmove
mov
pop
xor
push
cmpsl
jno
xchg
pop
mov
mov
adc
mov
incb
sbb
popa
pop
pop
repz
popa
push
insl
aaa
cwtl
movsl
insb
or
xchg
jle
shll
test
fisubs
shrb
lret
add
jne
jb
outsb
mov
clc
cmp
lods
pop
push
shr
mov
fdivs
sbb
pop
into
sbb
jae
mov
fcompl
sbb
adc
sbb
jl
fistpll
inc
inc
dec
cmpsl
sbb
mov
mov
scas
push
in
syscall
mov
add
lret
mov
mov
cmp
lds
aas
outsb
mov
outsb
push
inc
adc
sub
int3
add
mov
pop
add
lret
add
pop
aas
aaa
mov
mov
sbb
push
mov
das
rorb
stos
dec
inc
stc
adc
adc
pushf
insb
repnz
popa
andb
cmp
add
int3
dec
repnz
scas
sahf
xchg
out
dec
cwtl
dec
scas
lahf
mov
fs
je
add
jle
mov
or
mov
test
xor
insl
je
xlat
adc
cmp
stos
das
xchg
sub
mov
push
mov
insb
xchg
ficompl
ljmp
dec
cs
adc
pop
sbb
testb
mov
in
shlb
and
popa
cli
push
insb
addr16
pop
les
xchg
push
stc
test
cwtl
adc
roll
adcb
xlat
mov
mov
rcll
jecxz
decb
sbb
cmp
fwait
shl
in
xchg
cmp
addl
mov
xor
ret
clc
mov
dec
pushf
cmp
cltd
ja
pop
fsubrs
insb
sub
xor
mov
add
adc
movsb
sbb
push
inc
sub
inc
and
and
outsb
insb
push
mov
xchg
mov
sbb
fmul
mov
shrl
leave
mov
mov
mov
cwtl
stos
divl
mov
ss
push
pusha
aas
jb
jno
gs
cmp
shlb
inc
jae
loopne
pop
mov
add
push
dec
orb
pop
xorw
fisttps
cmp
clc
jnp
les
mull
pop
mov
cld
por
scas
and
std
push
enter
jle
jne
lds
fwait
push
inc
pop
stc
sub
js
lcall
fldenv
mov
mov
sub
and
ret
push
movsl
rolb
in
roll
fsubrs
mov
push
les
in
add
loope
xor
out
fsubs
and
sti
loop
mov
sbb
mov
aad
or
xchg
push
xor
mov
add
div
mov
xor
div
xor
mov
jmp
aam
sbb
and
test
stos
mov
adc
sbb
push
sub
clc
jnp
out
jnp
mov
adcl
and
add
push
add
jl
jns
aam
ss
cmp
iret
xchg
mov
cmp
fsubr
mov
scas
fbstp
clc
mov
out
ret
cmpsb
dec
mov
push
inc
xchg
and
aad
xlat
cmp
jecxz
jg
repnz
xor
jle
aad
inc
mov
test
es
enter
lcall
ljmp
popa
jnp
leave
mov
xchg
outsb
jp
repnz
push
push
scas
arpl
sub
xor
inc
fisttpll
leave
jo
mov
add
pusha
in
gs
inc
mov
add
fnsave
aaa
jmp
scas
sbb
mov
subb
push
negl
loope
in
or
lahf
das
fisttps
rcll
cmpsb
out
mov
insb
icebp
fdivrl
aam
or
adc
dec
ljmp
mov
mov
ss
out
int3
sub
enter
mov
jp
shrb
mov
mov
scas
pop
add
pop
cmp
xchg
mov
dec
jno
push
xor
scas
mov
inc
push
orl
push
shl
pop
sbb
repnz
push
scas
inc
or
cmp
sbb
dec
and
or
cli
push
jne
bound
cmp
fwait
lret
cmp
mov
hlt
mov
inc
lods
ret
ss
mov
aaa
pusha
jb
jecxz
fistpll
ret
xchg
aam
notl
clc
daa
mov
sbb
jbe
jp
and
mov
pop
and
jbe
add
mov
mov
xchg
and
adc
scas
leave
mov
jno
pushf
sbb
negb
lcall
jecxz
icebp
cltd
pop
sub
mov
jp
ljmp
stos
xor
or
aam
std
sbb
xor
inc
xchg
sbb
fdivs
in
or
xor
sahf
loope
jmp
mov
out
daa
push
jp
lcall
ljmp
push
negl
cltd
std
pop
stc
leave
dec
mov
mov
les
mov
xor
inc
push
orb
in
jo
pop
push
lahf
jmp
push
scas
fisttpl
hlt
leave
call
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
jmp
test
in
gs
les
jo
shll
rcrb
sbb
adc
sbb
xor
sub
cmp
daa
jno
in
data16
test
pop
add
fnstsw
nop
or
rcrl
mov
xchg
fisubl
popf
cmp
insl
jmp
hlt
outsl
lret
add
lds
sbb
mov
or
cmp
mov
ret
jae
cmpsb
sbb
lret
shl
xchg
stc
cli
mov
mov
inc
imul
insb
rcl
mov
sub
jnp
mov
arpl
lods
mov
mull
out
mov
andb
and
int
test
push
jmp
testl
repnz
mov
pop
ss
inc
add
jae
fisttpl
sbb
adc
sbb
fisttps
sub
mov
out
aam
lea
inc
mov
rcrl
xor
inc
inc
jns
mov
mov
add
fldt
mov
mov
lods
imulb
fisubs
stc
aaa
mov
movsb
es
leave
fcompl
movsb
leave
loop
jp
mov
adc
movsb
mov
jecxz
adc
mov
movaps
push
out
je
pop
xor
icebp
mov
sub
inc
dec
stc
ret
cmp
xchg
or
pop
jle
or
xchg
push
aaa
fwait
xchg
imul
push
push
inc
cltd
lea
clc
xor
cmp
push
adc
outsb
iret
insb
js
mov
add
jns
cld
test
clc
mov
lods
add
inc
hlt
mov
jmp
add
adc
dec
cli
cmp
je
lods
mov
sub
dec
jb
dec
adc
mov
jns
inc
push
lahf
shl
pop
sub
pushf
sub
jb
inc
mov
jbe
sbb
lret
pop
pushf
cmpsb
sub
add
leave
lcall
dec
and
in
dec
jecxz
add
add
leave
mov
jle
jbe
push
stc
test
in
dec
mov
mov
popa
adc
add
pop
adc
cli
jbe
sti
hlt
mov
mov
fidivrl
pop
push
sbb
mov
dec
inc
hlt
ss
pop
dec
test
xor
xlat
cmpsb
sbb
adc
dec
fcmovnbe
push
xchg
jmp
fsts
jmp
add
fistl
pop
lahf
insl
mov
pushf
aaa
sub
loopne
add
jno
sahf
or
xchg
daa
mov
imul
jae
int3
icebp
dec
cmp
inc
fdivrl
cmp
add
inc
in
int
add
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
jmp
rep
add
mov
inc
leave
jl
xchg
gs
rclb
sbb
icebp
aas
fists
sub
add
xchg
iret
add
push
add
xor
sub
das
scas
ror
adc
or
repz
adc
xchg
cmpsl
test
xchg
sti
ret
gs
lea
jne
das
pop
and
push
movl
sub
out
mov
mov
out
xorb
xchg
stos
xor
mov
outsl
ds
push
jns
or
inc
jb
scas
popa
daa
mov
mov
jo
push
mov
mov
or
es
insb
xchg
lds
ja
inc
jge
sub
sbb
call
xchg
fisubs
pushf
and
xchg
out
pop
cld
pop
xchg
or
jecxz
mov
addl
pop
and
dec
cld
jg
fisubrs
jl
test
mov
sbb
stc
cmpsl
imul
aas
adc
mov
rcll
mov
jg
pop
dec
and
fcmovnb
aam
loop
xor
inc
imul
loopne
les
hlt
in
push
mov
push
sahf
cmp
enter
in
mov
ljmp
leave
lahf
ss
aas
in
das
ret
inc
dec
inc
mov
sub
or
adcl
movsb
call
fcoml
sbb
pop
mov
iret
pop
cmc
jecxz
mov
cld
call
xor
outsb
push
fimuls
out
loopne
push
pop
pop
mov
rclb
enter
stos
pop
mov
push
ja
mov
rcll
add
imul
mov
imul
das
cmc
and
jp
mov
test
arpl
push
cmp
fdivrl
imul
xchg
test
push
aad
in
jne
adcl
adcb
rcll
loopne
cld
les
fwait
push
inc
mov
sbb
xor
xchg
sbb
lods
push
cs
pop
xchg
das
dec
out
lods
or
bswap
cltd
dec
imul
mov
cli
call
movsl
jl
dec
std
mov
mov
scas
out
push
sub
clc
ljmp
mov
test
mov
loope
sti
push
inc
sahf
and
dec
add
shrl
jmp
xchg
mov
mov
xor
add
jmp
sub
mov
inc
pop
and
leave
out
jle
pop
or
enter
adc
sbb
inc
iret
sub
fsts
sbb
cmpsl
jnp
pop
jle
cmp
push
fmull
popa
cmpsl
adc
mov
mov
movsb
xchg
push
lock
lds
add
xchg
out
mov
pop
imul
mov
cli
leave
inc
sbb
mov
cld
fcoms
sarb
push
and
mov
in
rolb
nop
jp
inc
cmp
cmp
mov
aas
fdivl
inc
cmovs
mov
dec
arpl
pop
mov
dec
add
cmp
decl
into
push
cs
mov
push
cmp
push
roll
jae
pop
mov
pop
cmp
shlb
push
ljmp
nop
xor
aam
rcll
pop
flds
out
sub
xor
jo
and
test
adc
out
sahf
mov
jae
cmc
pop
lret
sbb
mov
inc
pop
jecxz
mov
mov
cmp
xorb
sbb
fndisi(8087
adc
sub
je
mov
outsb
je
mov
push
mov
mov
sbb
subb
and
test
mov
ficoms
mov
push
stc
xor
es
inc
mov
pop
aas
push
mov
in
fnstenv
jne
jbe
pop
scas
and
ret
xor
fnstcw
or
pop
fisubrl
push
sbb
incl
adc
add
add
xchg
mov
frstor
mov
ffree
jns,pt
push
jge
sub
dec
push
xor
dec
and
dec
and
sub
mov
xor
adc
push
in
dec
adc
add
leave
es
mov
push
in
ror
insb
xlat
mov
cltd
xorl
jmp
push
jae
sub
xor
aad
es
pop
and
out
and
cmpl
out
bound
cmc
mov
pop
outsl
adc
push
aas
push
cmc
or
mov
adc
fistpl
lcall
sbb
fcompl
mov
or
loope
dec
xchg
sbb
mov
jecxz
sahf
inc
push
mov
jae
test
and
jecxz
subl
mov
out
adc
sub
adc
fisubrl
xchg
add
push
add
in
cmp
insb
push
mov
mov
mov
xor
dec
jl
or
xchg
in
mov
jb
push
xor
insl
add
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
jmp
mov
and
ss
xorl
rclb
sbb
lods
adc
mov
jmp
jae
sti
lcall
shlb
data16
adc
xchg
jae
outsb
push
ja
or
jg
xchg
sti
jmp
aas
stc
das
dec
sub
imul
mov
and
lods
shll
fsts
into
mov
mov
xchg
jne
dec
push
xchg
enter
ds
test
nop
aaa
xchg
js
dec
aas
ljmp
jbe
test
jmp
scas
ljmp
inc
fs
mov
into
jecxz
mov
aas
cmc
and
jp
je
xor
xchg
jp
dec
loopne
dec
lock
lods
adc
in
test
xchg
dec
dec
nop
inc
sub
fstl
inc
movsb
pop
jno
jo
loopne
mov
mov
inc
out
sbb
mov
push
adc
notl
sub
jno
pop
pop
or
aad
aas
das
jp
dec
inc
lret
fildl
fs
mov
cmp
cwtl
popf
xor
xor
inc
rolb
jmp
add
fistpl
out
cmp
cmp
xor
ds
or
or
fadd
mov
pushf
jbe
push
out
adcb
sub
popa
aaa
or
xchg
rclb
jge
mov
sbbl
dec
cmp
sub
sbb
jl
dec
sub
jb
cwtl
xlat
jb
sbb
sub
xor
mov
jle
lds
sbb
xchg
and
cmp
xor
std
push
cmp
xchg
addr16
sbb
jg
out
push
jl
arpl
and
lahf
aad
pop
xchg
jbe
outsb
jnp
push
call
fidivrl
mov
xor
test
mov
jns
ficoml
bound
jo
jnp
cmp
mov
jecxz
pop
iret
dec
lahf
in
das
mov
inc
repz
test
mov
sbb
daa
insl
mov
sbb
jb
add
lds
mov
mov
fnstcw
dec
cmp
sbb
lods
jnp
jl
fsubl
add
into
xlat
jnp
or
pushf
ret
test
and
movsb
insb
imul
repz
scas
or
nop
dec
add
orl
cwtl
divl
scas
int
mov
into
add
push
and
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
jmp
orb
loop
sbb
call
mov
pop
jo
mov
sbb
push
loope
cs
loopne
ljmp
xchg
shlb
cld
jae
jg
out
out
cwtl
push
daa
es
xorb
add
mov
rcrw
mov
sti
rolb
fwait
mov
rcl
mov
jecxz
mov
cmp
jl
and
ljmp
add
hlt
test
outsb
xorl
xor
ss
addr16
xor
dec
mov
sub
and
jno
loope
andl
mov
xor
hlt
lock
cld
pop
incb
add
lret
push
push
je
rclb
jns
test
insb
adc
jo
imul
pushl
inc
xor
mov
bound
cmp
pop
std
sahf
scas
xchg
inc
outsb
sbb
test
dec
lcall
ja
mull
xlat
or
sbb
jge
pop
jg
adcl
fs
call
and
add
sbb
add
pop
cltd
mov
dec
jno
enter
or
pop
in
mov
mov
outsb
jbe
insb
cmpsl
rol
ja
stc
pop
lea
out
mov
sub
jb
pop
xlat
fcmovbe
fidivs
jmp
pop
mov
dec
arpl
pop
jl
inc
or
or
cli
movsb
jecxz
jg
test
stos
xchg
mov
shrb
jecxz
fxch
dec
sti
sbb
shr
lret
cmp
rcrl
iret
xchg
adc
les
push
clc
aaa
mov
lsl
les
or
lret
mov
pop
daa
test
mov
test
or
adc
or
sti
insb
lds
dec
add
scas
pop
div
and
push
lcall
iret
xor
jle
xor
decb
or
cmpsb
in
shlb
aad
mov
xchg
cs
test
ffreep
pop
pop
push
popa
mov
dec
add
repz
push
call
inc
out
pop
into
xor
aaa
fiaddl
in
inc
std
dec
out
mulb
mov
call
cmpsb
loop
loope
mov
jmp
xor
sub
rol
js
ss
mov
int
mov
pop
shrl
mov
insb
aam
and
xchg
push
rcrl
sahf
in
or
pushf
fimuls
adc
xchg
nop
call
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
jmp
subb
pushf
sbb
pop
mov
jg
push
mov
sbb
fmulp
lret
sub
jno
jnp
push
dec
inc
jae
mov
push
test
pushf
stos
cmp
scas
shll
adc
mov
push
les
out
xchg
mov
outsb
in
pop
dec
mov
jecxz
pop
xchg
stc
pop
push
or
jmp
pop
rclb
dec
ljmp
inc
pop
sbb
inc
popa
bound
dec
inc
pop
pop
outsl
sbb
fcompl
fcoml
xchg
outsb
mov
lea
mov
fwait
lods
sbbl
cld
pop
mov
dec
add
sti
ds
mov
cmc
insl
fstpl
xchg
scas
cmp
and
mov
inc
inc
dec
pusha
jg
stc
ret
jne
jge
je
cmp
cmc
popa
jecxz
pop
jmp
xor
jbe
pop
inc
sub
inc
mov
lods
nop
dec
insb
and
mov
pusha
push
push
mov
dec
ret
jg
sub
push
call
out
das
sarb
pop
jno
je
fdivrp
sub
adc
ret
inc
mov
jecxz
in
pop
fsubl
xor
jmp
ret
fisubs
jl
cmp
int3
jns
mov
xchg
in
sbb
pop
frstor
ret
add
test
and
clc
shr
add
into
fidivl
push
pop
and
mov
xlat
or
pop
cwtl
and
push
xor
cmp
lret
or
or
aaa
lahf
test
mov
push
lahf
aam
nop
mov
xor
xlat
mov
insb
push
mov
aam
and
shl
repz
or
arpl
aaa
or
jns
andb
sahf
call
and
or
xor
jb
push
mov
pusha
cwtl
xorb
add
cmp
lcall
and
pusha
xchg
cmc
fidivl
push
orb
xchg
jl
mov
push
cmp
jnp
stos
scas
lret
loopne
outsl
cmpl
mov
fnstcw
and
jmp
andb
leave
iret
or
pop
mov
je
push
push
mov
dec
shlb
push
mov
out
icebp
lods
stos
loope
xchg
scas
loop
fildl
add
dec
sbb
lahf
or
addl
lods
and
pop
inc
bound
pop
xchg
mov
pop
mov
into
mov
lea
mov
and
add
xor
add
cmp
jmp
cmp
daa
sub
pop
cltd
mov
rclb
sbb
cmpsl
sbb
add
cmpsb
loope,pn
jge
xchg
pop
mov
jmp
fstps
fdivr
lret
rcrl
mov
les
sti
pop
shrl
dec
inc
arpl
lock
or
loop
nop
jp
insb
repz
add
in
inc
xor
xchg
movntps
inc
jecxz
fdivrl
mov
inc
movsb
sbb
mov
xchg
push
pop
std
pop
dec
or
orl
cmpsb
stos
sahf
mov
adc
lahf
lods
pusha
mov
lock
xchg
mov
mov
in
test
mov
add
bound
jle
fsts
popf
fcomi
jecxz
xchg
and
push
jmp
stos
std
pop
addr16
es
ss
mov
in
clc
mov
mov
or
push
rcrl
dec
test
pop
into
xchg
sbb
cwtl
ja
jae
inc
jo
jo
imul
and
sbb
mov
mov
je
rcll
or
jmp
cwtd
mov
and
loopne
lds
aad
test
cwtl
push
dec
cmp
mov
sbb
inc
cwtl
popa
icebp
adc
mov
std
xchg
pop
mov
outsb
xchg
in
mov
pop
xor
mov
mov
adc
out
mov
mov
pop
fistpl
adc
test
lods
mov
jns
push
mov
sbb
mov
icebp
xlat
xor
mov
mov
rcll
movsb
add
icebp
daa
xor
je
fs
mov
push
cli
mov
inc
lds
sbb
pop
push
out
mov
les
mov
jbe
adc
mov
xor
xor
addl
lahf
sub
das
jno
setle
mov
jbe
push
jg
cmp
lods
jbe
or
or
outsb
dec
mov
mov
das
jne
testb
dec
and
add
pop
adc
jle
push
out
sub
push
mov
mov
jge
popf
rcrl
jle
adc
ljmp
push
sub
test
loope
ret
call
shrl
and
sub
inc
sbb
hlt
mov
jb
dec
ljmp
lcall
mov
mov
inc
lcall
in
mov
rclb
sbb
sbbl
mov
adc
cmp
ret
mov
cmp
pop
push
jns
vpsrlq
push
push
ja
push
repnz
insl
ret
sti
scas
in
dec
cltd
repz
and
sbb
pop
and
sti
sbb
xchg
imul
jecxz
ret
and
stos
pop
mov
mov
lcall
adc
add
mov
movq
sbb
xor
fisubl
push
xchg
fmuls
dec
and
and
jmp
jo
push
xlat
pop
cwtl
jmp
cs
xchg
stos
enter
rcrb
mov
cltd
ret
push
adc
dec
mov
aam
sub
mov
or
lds
xor
and
loop
adc
ljmp
int
push
fidivl
xchg
addb
test
sahf
push
cmp
sub
mov
cmc
cs
test
out
les
aas
arpl
push
inc
jbe
test
or
mov
shrb
adc
nop
insl
push
sub
mov
inc
pop
mov
adc
lcall
dec
pand
pop
push
and
cmp
mov
mov
ret
xchg
dec
pop
repz
or
nop
jmp
mov
and
jnp
dec
fsts
and
adc
mov
add
and
xchg
pusha
mov
insl
inc
test
cmp
sarb
les
in
jecxz
scas
and
mov
jle
push
xchg
sbb
jae
push
fsubrp
cmp
xchg
or
mov
mov
jno
daa
pushf
das
sbb
andl
ret
imul
add
gs
popf
jp
xor
cmp
mov
inc
xor
push
scas
je
cli
scas
jl
out
ror
fwait
sahf
pop
dec
lret
and
cmp
and
and
aad
mov
rcrb
push
xchg
fcompl
das
movsl
mov
out
shll
cmp
mov
push
add
cmp
dec
push
add
cmp
push
mov
pop
in
lea
ret
cltd
aam
cs
ret
dec
in
icebp
fildl
or
dec
or
subl
insl
jle
test
sub
mov
push
xor
add
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
jmp
outsb
rolb
jnp
cmp
ret
push
xlat
ja
sub
sbb
out
out
insl
icebp
leave
cmpl
cmp
out
jg
mov
mov
lret
mov
or
sub
sahf
adc
pop
hlt
pushf
lock
bound
bound
inc
and
pop
jns
pop
or
lar
bound
pop
or
pop
ds
mov
ja
in
sarb
xor
es
pop
mov
cmp
cld
jp
pushf
dec
incb
add
sub
int3
xor
and
push
push
or
rolb
sub
mov
and
lods
lcall
push
or
pop
mov
mov
and
adc
jmp
pop
test
jle
imul
xlat
cmp
sahf
mov
add
push
cmpsl
mov
test
push
inc
test
mov
sub
sub
cmpsl
iret
sbb
fcompl
or
mov
mov
xor
jg
inc
adc
nop
push
mull
pushf
cmp
push
scas
les
lret
push
xor
in
adcl
add
xor
lea
in
push
jge
add
je
adc
int3
int3
jae
shll
rep
fnstsw
inc
adcb
fcmove
or
rolb
js
fs
sub
out
int3
aam
cltd
mov
ja
rcll
pushf
cs
bndldx
fsts
add
clc
test
test
inc
add
es
mov
jle
add
pop
jge
and
test
dec
and
adc
xchg
lods
sbb
sub
cmp
test
movsl
rorl
cmpsl
rclb
cmp
loope
inc
add
pushf
mov
cmpsb
cld
sub
sbb
ret
ljmp
xchg
sbb
lret
and
xchg
sbb
test
aad
mov
mov
insl
adc
mov
lahf
sahf
mov
sbb
fisttpll
xchg
lfs
xchg
fdiv
test
pop
xchg
loopne
popf
imul
lret
js
mov
push
and
mov
xchg
je
pop
ja
rcrb
subl
mov
das
jae
push
lods
ret
out
outsb
ficompl
rolb
jnp
in
pop
out
sbb
imul
lret
jmp
out
push
pop
xchg
rorb
clc
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
jmp
mov
pop
mov
stos
and
sbb
shll
sbb
jns
push
sub
mov
lcall
mov
jmp
in
jmp
xchg
cs
pop
cmc
mov
jns
jp
lods
xchg
daa
cmp
cmp
insb
push
add
clc
push
clc
popf
nop
jnp
sahf
pop
sbb
lahf
push
scas
xchg
cltd
cs
push
scas
lea
sahf
ljmp
in
mov
lret
mov
dec
xorb
icebp
fimuls
je
cmpsl
call
scas
faddl
push
xor
cmp
jo
and
int
xor
inc
jl
sub
xlat
arpl
xor
cmp
pop
mov
jb
jns
and
adc
test
mov
roll
adc
in
lods
ljmp
xchg
cld
outsb
or
and
sub
jl
mov
xchg
sub
repnz
fwait
lods
dec
sub
mov
inc
cmp
sti
addr16
js
out
sbb
popf
dec
rclb
mov
std
fldcw
inc
or
sub
sub
add
add
push
dec
sti
or
test
pop
mov
push
decl
fs
push
adc
lcall
mov
jbe
or
repnz
loopne
popa
jmp
movsl
push
adc
enter
and
test
int
dec
xlat
cmp
outsb
in
sub
jmp
mov
mov
jne
pop
mov
mov
es
cwtl
mov
sub
sahf
add
sub
fisubrs
xchg
push
mov
test
jmp
or
iret
and
and
popf
dec
push
sbb
popa
fwait
add
icebp
inc
cs
inc
ret
inc
dec
out
loope
stos
in
sahf
sbb
mov
sti
scas
data16
lds
add
pop
pushf
test
mov
xorb
outsb
push
sbb
adc
push
push
push
inc
jge
gs
mov
mov
cmpsb
dec
cmp
mov
inc
lahf
push
aam
in
nop
clc
fwait
xchg
mov
cltd
mov
decl
mov
inc
mov
push
dec
sbb
mov
mov
popf
cmpsb
jnp
or
and
jmp
xlat
jb
lahf
add
fnsave
xlat
mov
into
and
cmp
jb
pop
js
gs
and
rclb
ja
dec
ljmp
add
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
jmp
fiadds
rcrl
dec
fisubl
out
mov
push
sahf
sbb
mov
lods
mov
enter
loopne
push
adc
rorl
orb
movsb
and
lsl
xor
cmp
test
push
loop
pop
sub
outsl
pop
out
addr16
ss
adc
cli
into
mov
jo
pop
ret
inc
inc
jo
loop
test
mov
into
xor
ss
dec
push
mov
in
xchg
dec
insb
in
sub
call
push
mov
dec
in
jns
adc
ret
sahf
ss
sbb
sarb
pop
sti
xchg
sub
mov
pushf
aas
icebp
push
test
pop
sbb
xchg
mov
push
lods
or
rorl
xbegin
icebp
lock
adc
in
roll
fdivrs
movsl
mov
pop
cmpsb
fnstsw
xor
aad
jb
leave
fnstsw
sbb
sub
pop
dec
hlt
inc
rcrl
outsb
cmc
movsb
pop
subb
or
mov
mov
jb
pop
push
mov
icebp
or
sub
adc
inc
subb
shrl
cmp
dec
aam
insl
add
bound
inc
cltd
mov
ds
cld
rcrb
sti
and
jle
xchg
adc
xor
andl
add
add
pop
insl
fnsetpm(287
add
scas
pop
enter
mov
and
fdivrs
iret
pop
and
cmpsl
jae
push
mov
iret
movsl
adc
mov
sbb
popa
add
dec
loope
jecxz
cmp
ret
sbb
imul
cmp
or
fistl
into
imul
imul
lcall
push
cmpsl
test
test
repz
cmp
sub
add
fsubrl
sbb
lea
jbe
mov
jae
repnz
fdivs
repnz
xor
mov
push
lea
xchg
mov
jnp
mov
cmpsl
sub
inc
mov
in
aam
adc
push
or
fdivrp
inc
adc
lds
int3
shrl
nop
mov
hlt
lods
inc
cwtl
ret
pop
cli
movsl
xor
jne
js
push
adc
push
mov
les
scas
inc
cmp
adc
or
popf
gs
imul
aam
imul
adc
shrl
jmp
sahf
and
icebp
cmpsb
jp
fmull
push
jae
aaa
mov
outsb
mov
xor
xor
mov
div
cmp
jmp
ss
jnp
pop
xor
adc
sbb
adc
sbb
adc
jae
inc
enter
das
and
jno
xor
mov
sub
fsubrs
hlt
mov
xor
js
lret
cltd
ret
gs
sbb
enter
xor
push
sbb
test
std
dec
cltd
fnstenv
in
jbe
aas
lahf
add
xor
pop
gs
jb
mov
lds
xchg
adc
jns
push
inc
bound
push
cmp
sbb
xchg
lods
or
sbb
insl
scas
adcl
stos
cmp
inc
inc
push
frstor
fs
in
lret
mov
ljmp
fmulp
sarl
sbb
add
and
in
es
test
fbstp
dec
ds
xlat
sbb
aas
inc
aam
mov
mov
in
outsb
jge
outsl
ds
ret
mov
adc
out
js
mov
fstps
or
pop
pusha
pop
sbb
and
pop
imul
mov
lea
rcrl
fcompl
jp
je
les
sti
test
ret
inc
repnz
cs
js
inc
push
or
sub
scas
lock
mov
push
popa
and
xor
xor
sub
jne
fcmovb
fcomps
fstpt
pop
sahf
enter
jno
mov
leave
lcall
stos
cmp
fimull
mov
movsb
fisubrs
mov
enter
xchg
push
mov
dec
push
divb
mov
outsb
int
push
in
les
daa
push
loop
fldcw
pop
rcl
push
cld
lea
mov
pop
xlat
push
push
mov
add
cli
inc
cs
pop
movsl
inc
sarl
push
test
lahf
xor
adc
sub
xchg
jmp
adcb
lahf
rol
xchg
addr16
dec
loop
mov
sahf
iret
int
pop
movsb
push
or
fs
sbb
xchg
enter
inc
or
xchg
test
add
cmc
imul
in
and
imul
mov
aas
fs
sub
adcb
lods
xor
stos
sub
xchg
mov
mov
stos
shrb
and
xchg
insl
lea
cs
repnz
cmpl
lcall
dec
in
cmpsb
push
add
jne
cmpsb
mov
popf
sub
mov
lret
repnz
xchg
cld
dec
mov
sbb
jmp
mov
mov
orb
xor
repnz
enter
test
dec
mov
sarb
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
jmp
sbb
cmpsb
fs
mov
jg
mov
sbb
xchg
mov
push
xchg
cmp
inc
push
dec
inc
sub
dec
outsb
imull
jnp
or
test
sbb
leave
out
inc
mov
inc
xorl
mov
and
push
inc
or
test
rcrb
popa
add
jmp
mov
mov
dec
cmp
mov
jmp
aaa
insb
in
cmp
add
sbb
xor
incl
xor
sbbb
pusha
into
push
ret
xor
inc
cld
out
stos
cwtl
lods
sub
repnz
push
popa
pop
into
sti
ja
mov
nop
fcoml
loope
sub
nop
add
ljmp
adc
rol
xchg
popf
add
or
and
hlt
in
push
mov
xorb
mov
pop
std
idivb
mov
repz
and
les
pop
mov
xlat
jno
arpl
gs
push
shl
fsubrl
pop
lcall
popa
jp
mov
arpl
or
ds
xchg
inc
pop
nop
xor
loop
pusha
jl
push
cmp
pop
rclb
dec
jmp
cmp
xor
adc
push
jmp
test
ljmp
ficoml
loope
int
test
es
xchg
stc
popa
in
jnp
je
mov
or
sbb
and
stc
adc
adcb
cmpsl
inc
decb
imul
test
lock
rcl
jle
movsb
imul
mov
sbb
daa
pop
mov
jne
and
xor
and
cmp
ret
dec
in
push
adc
xlat
cmp
inc
pop
mov
push
sti
sub
lods
sti
xchg
xchg
out
loope
inc
loopne
gs
mov
aas
enter
gs
sbb
lock
xchg
xchg
cmp
call
mov
push
inc
jmp
pop
mul
imul
mov
and
xor
sbb
ret
jg
adc
imul
cmp
jb
push
push
jmp
push
dec
ret
mov
addr16
adc
adc
sbb
sub
cmpb
rclb
jo
pop
data16
xor
mull
push
addl
xor
sub
jecxz
shlb
orb
dec
icebp
jle
jge
insb
push
outsl
ss
lds
and
inc
mov
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
jmp
pop
jp
movsb
mov
fsubl
add
jle
mov
sbb
insb
repnz
push
push
loopne
mov
push
mov
mov
mov
mov
shlb
ljmp
adc
pop
addr16
sub
xor
xchg
mov
inc
fs
lds
add
dec
pushf
pop
cld
arpl
mov
jno
lods
mov
lgs
adc
cltd
fsubs
jle
ja
insl
xor
xlat
push
outsl
pop
jmp
or
mov
jge
or
inc
addr16
adc
jns
sbb
outsb
lcall
add
cli
jp
gs
ljmp
xor
sbb
lret
dec
movsb
mov
jo
inc
mov
xchg
inc
lret
pop
addr16
les
into
lcall
push
pushf
dec
mov
roll
push
push
daa
lock
mov
test
and
cmpsb
cmc
sbb
test
xchg
jle
mov
pop
adc
dec
in
lods
int3
lahf
fisttpl
pop
cmp
es
sarb
inc
xlat
sub
nop
ljmp
out
cmp
ret
push
mov
pop
pop
sub
dec
mov
mov
je
jp,pt
sub
call
sub
cmc
mov
jnp
xlat
add
sub
sub
jbe
cmp
adc
and
add
out
adc
jmp
aaa
in
repz
pop
test
hlt
add
lret
fsubs
cmp
into
adc
sub
or
push
sbb
and
cmp
xchg
jno
jnp
int3
adc
adcb
sbb
mov
jg
sub
lcall
adc
dec
insb
adc
jnp
push
xor
jo
mov
test
push
mov
dec
ljmp
dec
pop
ds
mov
mov
fstp
inc
xor
and
xor
sbb
adc
mov
pusha
and
lods
mov
ss
mov
jae
clc
and
mov
xor
adc
cmp
or
sahf
mov
sub
ljmp
push
cmp
pusha
inc
popl
stos
mov
fbld
imul
ret
sarb
das
cmp
hlt
lds
sub
mov
lea
imul
cmp
jne
mov
jb
test
fidivs
inc
mov
jo
push
cs
iret
nop
jmp
scas
xor
cwtl
push
orb
pop
sbb
adc
inc
sbb
sub
stos
dec
pushf
in
dec
movb
jecxz
push
xchg
ss
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
jmp
jno
xchg
mull
mov
ljmp
sbb
pop
jno
push
pusha
mov
jecxz
idivl
cli
mov
pop
nop
xor
sbb
xor
inc
xlat
mov
mov
jb
pop
mov
lahf
and
pusha
enter
inc
nop
test
sbb
mov
out
jne
push
imul
cli
or
jge
out
fcmovnb
mov
dec
or
jns
adc
mov
fisubrl
jnp
pushf
daa
in
sti
imul
daa
fists
add
repnz
mov
and
and
inc
or
rolb
xor
adc
inc
fwait
rolb
cld
mov
test
vmaxps
sub
es
outsl
pop
pop
lret
ds
or
add
jb
jle
out
outsl
in
push
adc
xchg
adc
cwtl
xor
in
push
lock
mov
pop
cmp
xor
or
mov
jmp
inc
mov
sbb
aad
xchg
cmp
xchg
and
es
out
orl
ss
cmpl
insb
sbb
cmpsl
mov
popl
inc
imull
dec
mov
mov
sbb
mov
or
int
shrl
imul
inc
xchg
movsb
jns
pop
fbstp
add
pop
cmpsb
rol
fimull
fstl
loope
les
push
xchg
adc
push
insl
inc
ss
jo
inc
mov
add
mov
stc
jecxz
hlt
add
test
mov
or
cmp
pop
loopne
stos
addr16
fldcw
jb
in
dec
mov
gs
mov
mov
fbld
inc
cli
inc
xchg
or
inc
xor
lret
jbe
aam
in
push
jecxz
fistpll
jl
mov
addl
arpl
jne
dec
jne
adc
push
aas
mov
inc
ljmp
xchg
push
cwtl
mov
fists
mov
jle
ds
in
push
popf
fdivl
or
test
es
sarb
pop
fs
mov
adc
adc
jecxz
mov
repz
xlat
shlb
mov
insb
mov
ret
push
dec
pop
mov
outsl
or
leave
inc
out
cmp
pop
lcall
cmc
test
mov
mov
jg
sub
cmp
ret
sub
nop
int3
orl
ret
sbb
sbb
push
stos
mov
lcall
scas
std
clc
add
xchg
or
xor
fcompl
xor
cld
movl
mov
mov
sub
jmp
test
mov
push
mov
jle
sbbb
lcall
stc
divl
ret
hlt
clc
pop
mov
xchg
scas
in
adc
inc
mov
outsb
scas
int
imul
decl
inc
inc
jnp
dec
xor
lock
inc
dec
mov
outsb
stos
cmp
sbb
pusha
movb
cmpl
orb
lds
push
add
test
pop
jp
test
int3
loop
sub
imulb
push
add
jecxz
lea
scas
push
loope
cli
jne
test
sub
loop
pop
push
pop
int3
test
push
inc
dec
xchg
add
inc
lods
aad
aas
mov
xor
rcrl
sub
aam
pop
and
xchg
daa
out
mov
adc
stos
sbb
es
in
enter
sbb
clc
adc
data16
aaa
in
imul
out
or
lahf
jecxz
xor
fs
fdivl
add
out
push
mov
and
jmp
inc
sbb
lods
stos
scas
pop
sub
adc
or
xchg
mov
fmull
pop
dec
fldt
mov
jne
cmp
or
je
add
cmp
shlb
and
lea
mov
dec
mov
cli
outsl
jno
adcl
es
test
rcrb
fdiv
popf
pop
mov
call
add
mov
jns
test
adc
movsb
aas
and
mov
pop
sbb
lock
or
cmp
rolb
dec
push
dec
xor
push
lret
jno
scas
jbe
xchg
or
shl
add
mov
adc
test
mov
ss
mov
inc
scas
test
pop
or
call
xchg
aad
inc
jl
aad
push
sbb
lret
repnz
enter
xchg
hlt
push
lahf
xchg
dec
lds
lret
ljmp
les
ljmp
shr
popa
jle
inc
je
sbbb
and
idivb
fisubs
cld
pop
mov
out
shrb
push
push
mov
sbb
scas
or
subl
or
sbb
loopne
stos
lcall
push
fstps
stos
jge
lea
sarl
sub
repnz
dec
dec
push
add
pushf
jb
dec
dec
scas
rcll
daa
cli
mov
mov
sub
ljmp
cmp
data16
js
sub
movsl
insl
das
mov
lods
repz
loop
mov
mov
cld
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
jnp
push
jl
mov
mov
sbb
jno
sbb
sub
add
aad
sub
sub
mov
in
or
out
or
lds
jns
mov
imul
outsb
xor
das
mov
jbe
repz
jno
mov
out
fsubrl
mov
divb
jae
jl
sbb
imul
pop
test
sub
push
icebp
ds
sbb
lea
xchg
xchg
jbe
inc
push
mov
mov
outsb
mov
in
and
mov
jo
orb
dec
cwtl
cltd
movb
ret
es
adc
inc
arpl
pusha
movsb
out
cmp
xor
sbb
or
jb
scas
rcl
lods
loope
pop
outsl
daa
lods
lahf
loopne
cltd
pop
bound
pop
daa
popa
scas
xchg
pop
or
cmp
lret
ret
xor
sbb
out
push
flds
mul
pop
inc
mov
add
push
ds
outsl
jmp
push
bound
jge
cltd
jne
sub
pop
repnz
xchg
insl
bound
dec
pop
xor
insl
je
jg
daa
es
lea
mov
decl
jno
mov
jg
and
stc
xor
xor
push
and
or
inc
ja
xchg
dec
add
mov
shlb
sbb
aaa
push
mov
inc
es
mov
pushf
in
inc
and
xchg
out
fists
xor
es
push
or
xchg
hlt
inc
and
sbb
cmp
xor
mov
pop
hlt
imul
xlat
sbb
std
out
outsb
inc
push
sbb
and
scas
out
xchg
lock
add
mov
aaa
popa
dec
test
mov
lods
cli
movsl
mov
push
inc
out
sbb
xorl
pop
loope
aaa
sub
outsb
cmp
push
sbb
test
rcrl
adc
lcall
pusha
mov
imul
cmpsl
push
ljmp
xor
out
daa
movsl
pop
pop
sub
pop
shll
fwait
or
call
sbb
stc
dec
mov
hlt
in
outsb
xor
out
rcrl
push
in
pop
pop
fistl
mov
int
popf
sbb
aam
movl
movl
movl
movl
movl
movl
movl
movl
push
jmp
dec
sub
sub
into
jne
inc
js
sbb
sbb
push
add
into
mov
rcll
xor
xchg
lret
dec
adcb
or
mov
adc
inc
jns
push
notb
pop
aam
xchg
adc
mull
inc
sti
aaa
out
dec
shll
jge
dec
xchg
sub
fs
pop
fistpll
mov
out
mov
sbb
or
mov
push
stc
es
arpl
dec
sub
push
sbb
test
xor
sub
push
daa
aas
and
or
and
xchg
mov
mov
inc
insl
ret
loop
sarl
lods
xchg
subb
dec
std
adc
insl
push
dec
dec
cmp
xchg
lcall
shl
jl
sbb
cs
pop
jo,pn
mov
loopne,pn
push
dec
jbe
or
mov
dec
push
push
and
stc
fcomi
lea
xor
cmp
mov
dec
xchg
lahf
mov
fs
xchg
test
imul
fldenv
aas
out
sahf
sarb
incb
sbb
pop
xchg
mov
gs
mov
outsl
cmpsl
fistl
xchg
scas
mov
mov
subb
out
adc
lea
mov
jns
ret
orl
xor
outsb
add
rclb
mov
enter
dec
and
in
jbe
inc
icebp
hlt
scas
pop
fistl
stos
pusha
decl
add
push
jnp
mov
or
mov
lods
xchg
or
jl
or
pop
out
or
push
arpl
pop
dec
lock
imul
sub
in
loop
test
dec
pushf
jo
sub
fwait
jno
jle
mov
repz
cs
push
xchg
dec
lods
lret
mov
fnstcw
scas
and
outsl
pop
jecxz
ds
mov
imul
sbb
sbb
push
pop
push
shl
inc
push
int3
icebp
ljmp
add
sub
mov
mov
xchg
sub
cmp
cmp
adcl
xchg
sbb
fisubs
stos
ror
sahf
testb
ds
in
test
adc
mov
cmpsb
dec
outsb
lret
loopne
inc
cld
hlt
xor
add
in
adcb
push
push
call
mov
mov
xor
mov
mov
mov
xor
jmp
lds
fisubrs
sbb
pusha
mov
out
mov
jno
sbb
pop
jns
clc
lods
or
imul
outsb
pop
jmp
sub
ja
cmpsl
fisubrs
cmpsl
sub
pop
popf
stos
call
mov
imul
mov
and
sub
test
jmp
mov
adc
adc
or
addl
jbe
mov
mov
rorl
adc
mov
aaa
std
loope
pop
push
pop
jbe
leave
mov
ret
icebp
aas
cwtl
adc
sbb
aam
jo
cmp
lock
test
sbb
js
fnsave
xchg
call
mov
loopne
cmp
test
pop
cs
mov
mov
cld
stos
jl
mov
and
std
adc
notb
jbe
shrl
mov
adc
or
push
dec
negb
push
mov
cltd
add
cmp
enter
popf
jmp
lret
clc
subb
lock
cltd
sbb
dec
cmp
dec
in
pop
mov
mov
in
stos
mov
add
daa
pushf
icebp
lds
or
imul
rcll
mov
rclb
push
cwtl
cs
jecxz
adc
ret
jp
xlat
testl
mov
jae
pusha
test
push
xchg
xlat
mov
sub
int3
scas
pusha
int3
movsb
cs
mov
adc
xor
dec
test
stos
insl
fstps
push
mov
cmp
mov
mov
out
cwtl
cltd
push
push
jbe
arpl
pushf
and
repz
mov
js
imul
xor
aaa
rol
mov
test
movsb
outsl
or
mov
ja
repz
dec
add
mov
cmc
mov
and
xor
dec
or
fucomip
bound
test
faddl
mov
mov
mov
sbb
mov
xor
fisubrl
pminsw
add
add
sbb
cmp
push
xchg
jne
sub
stos
jp
and
sub
lret
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
jmp
loope
lods
aam
mov
gs
imulb
sbb
sbb
inc
jbe
xor
push
insb
cmp
scas
test
jno
mov
jg
ljmp
ficoms
and
cli
shl
pushf
mov
dec
lea
jo
shlb
bound
rorb
inc
stos
popf
mov
and
mov
mul
jo
loop
out
loopne
popa
pop
test
out
mov
inc
stos
jns
xor
ja
fadd
arpl
push
data16
jo,pt
xchg
sbb
mov
mov
sbb
add
lcall
out
pop
enter
mov
jo
jb
add
loop
inc
call
push
xchg
mov
fchs
repz
jno
orl
mov
movsb
rcl
mov
fdivr
jp
xorl
ret
adc
jne
outsb
pop
push
cmp
jecxz
xlat
sub
clc
sbb
mov
fsubrs
or
and
dec
xor
or
insl
ds
and
scas
shll
cmp
cmp
push
xor
decl
mov
out
fisubrs
cmp
rcl
rclb
enter
mov
decl
pop
mov
xchg
shll
ljmp
flds
push
and
push
mov
pop
dec
cmp
outsb
xchg
add
test
movsb
mov
or
mov
movsl
outsb
lods
push
fsubrl
jns
leave
mov
xchg
nop
cwtl
hlt
es
les
xchg
in
movsb
fisttps
jns
ret
lods
orl
or
int
pop
lret
ljmp
arpl
dec
or
lds
pop
rorb
scas
aas
repz
es
jge
and
inc
jg
mov
repz
pop
jl
pushf
mov
inc
in
push
aad
dec
es
popf
sub
sahf
in
dec
outsb
movsb
repz
pop
push
fnstenv
test
repz
xchg
push
rcrl
jmp
lahf
xchg
lods
and
mov
fistpll
xor
stos
add
and
mov
mov
mov
mov
add
adc
or
mov
jmp
pop
and
xor
pop
sbb
pop
jo
push
sbb
sbb
aas
mov
mov
jmp
scas
sbb
sbb
inc
fdivrl
sahf
inc
adc
pop
ds
jno
adc
xchg
pop
into
lods
test
sarl
add
mov
mov
add
fcmovu
inc
popa
fisubl
lcall
rcll
adc
in
loop
incb
addr16
xor
cwtl
pop
lea
mov
shlb
push
dec
cltd
push
test
mov
fistps
insb
add
xor
jnp
rcl
test
das
loope
in
lea
les
ret
xor
sbb
test
clc
fistpl
out
jle
repz
ja
mov
and
outsb
cmp
push
in
inc
mov
push
cmp
jecxz
stos
mull
sub
js
jg
cli
les
fiaddl
fisttps
inc
loop
popf
cwtl
shlb
mov
push
lret
cmp
mov
mov
data16
mov
decb
cmp
dec
mov
lcall
iret
aas
mov
and
xor
push
adc
or
mov
pop
int
add
in
inc
popa
fcoms
jo
jae
mov
addr16
sarl
fcmovb
fcompl
int
sub
sbb
sbb
loopne
inc
push
mov
lret
pop
addr16
adc
or
pop
mov
cs
add
xchg
daa
push
pop
mov
xchg
mov
pop
jns
sub
fidivrs
mov
aad
fisttpl
das
mov
or
jo
push
loopne
in
cmpb
xor
jle
jmp
ret
adc
push
sbb
sub
imul
sub
mov
outsl
test
cmc
pop
pop
jg
pop
test
movsb
sbb
sbb
dec
pop
cld
mov
icebp
push
push
hlt
nop
sahf
rcll
adc
adc
stc
jmp
popl
or
rorb
and
mov
adc
popf
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
jmp
mov
push
jle
inc
inc
jne
dec
aad
push
data16
jno
sbb
mov
lds
mov
cwtl
xor
jp
lret
mov
pop
sahf
dec
mov
adc
lds
test
push
pushf
outsl
adc
xchg
jnp
test
jns
adc
add
pop
ljmp
in
fstps
cmc
ljmp
scas
dec
xchg
sub
pop
int
pop
lea
jno
inc
jnp
pop
push
mov
mov
jnp
mov
fwait
pusha
mov
bound
xor
mov
and
pop
fadd
xchg
mov
xlat
xchg
jp
dec
mov
dec
arpl
fsubp
push
je
ret
inc
add
sub
jns
push
xchg
addr16
leave
dec
xor
push
fistps
cltd
movsb
dec
and
jmp
jmp
insb
fnsave
lock
push
xor
aam
mov
ljmp
jge
dec
shrl
sbb
cmpsb
mov
imul
insb
add
jnp
dec
fistpll
add
mov
inc
ds
mov
lods
jno
and
pop
hlt
addr16
cli
push
add
out
out
sarl
mov
push
aas
movsb
lods
cli
xor
jge
pop
bound
pusha
dec
inc
mov
enter
mov
shll
lcall
dec
ja
cmp
jb
in
in
pop
xor
jmp
cmpsl
aas
aaa
scas
fcoms
jne
or
jmp
xchg
dec
mov
leave
sahf
test
mov
adc
loopne
fnstsw
in
pop
sub
in
jp
push
imul
or
xchg
lock
in
or
lds
xor
jbe
nop
andl
mov
adc
insl
cmp
into
adc
jmp
sbb
sti
xor
nop
shrl
jg
testl
jle
cmpsb
leave
aad
mov
xor
jmp
lds
xor
mov
outsb
push
notb
pop
lds
xlat
stc
mov
dec
sub
jns
push
rorb
scas
xchg
imul
jbe
bound
xchg
je
sbb
pop
cmp
inc
xor
fcmovbe
jno
sbb
mov
in
or
push
out
add
sbb
and
in
test
add
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
jmp
mov
xchg
cli
push
fistpl
jge,pn
stos
arpl
fstpt
pusha
sbb
jno
sbb
xchg
xchg
sub
into
ja
cli
xchg
or
dec
and
dec
icebp
add
mov
adcl
add
sub
lds
or
push
pop
insb
push
or
push
sbbb
cmpsl
sbb
cmpb
movsb
xor
mov
or
mov
imul
mov
sarb
sbb
inc
pop
adc
mov
ret
out
push
lods
aam
mov
ss
subb
push
arpl
scas
jo
jns
mov
cmc
cli
pop
ja,pn
out
mov
pop
inc
movsb
xor
decl
enter
pusha
sti
and
test
icebp
fs
mov
pop
call
push
out
int3
cltd
fs
jo
andl
add
fs
mov
adc
dec
jbe
jg
ret
pop
out
sarb
mov
popa
fistps
dec
in
mov
adc
fidivs
fstpl
outsb
or
push
stos
pop
mov
inc
mov
lahf
repz
rol
rcrb
xchg
cs
repnz
ret
test
xorb
adc
fsts
mov
out
negb
test
jecxz
repnz
out
cmpsb
mov
mov
fisttps
pop
xchg
lock
push
movsl
sub
repnz
ljmp
loop
xchg
js
aaa
clc
insl
jbe
cmp
je
icebp
add
sub
rorl
sbb
or
scas
pushf
repz
sub
adc
mov
adc
adc
lock
sub
and
adcb
push
push
and
inc
mov
je
clc
outsb
jl
cmc
call
adc
dec
pop
aad
out
shrb
rorb
or
mov
testb
imul
test
sub
popf
sub
xor
test
bswap
aaa
inc
out
jle
and
push
insb
fnstcw
testl
ret
fisttps
call
mov
imul
ret
add
adc
push
push
call
mov
sub
push
pop
jmp
jae
mov
sbb
jo
push
cmp
pop
sbb
jno
sbb
addr16
mov
aam
clc
pop
sub
add
sub
out
rol
adc
cmp
add
mov
or
setbe
in
cmp
mov
pop
mov
imul
or
xchg
push
scas
and
push
mov
ret
xlat
add
dec
sbb
lret
test
aam
test
push
mov
lret
aas
ss
leave
ljmp
or
mov
cld
add
or
mov
mov
es
xchg
scas
push
lcall
test
roll
adc
xor
jl
cmpsl
push
repz
roll
das
jg
jae
imul
add
jae
fstpt
lahf
andb
cmp
inc
cwtl
popa
outsb
and
sbb
push
loop
add
push
stos
movb
xlat
xor
out
mov
lcall
or
inc
cmp
or
cwtl
les
sub
and
cmp
xchg
pop
push
adc
lds
repnz
or
lods
sub
fwait
outsb
cmp
push
lss
pop
mov
sbb
mov
sub
pop
fwait
cmp
push
cwtl
rorb
cwtl
outsb
lods
or
xchg
pop
pop
insl
push
mov
push
pop
push
and
fists
lods
rolb
cmpl
push
or
fsubs
insb
sbb
enter
call
pop
popa
call
inc
icebp
test
andb
xchg
out
adc
push
xor
jle
insl
sub
stc
inc
fs
push
inc
pushf
leave
xchg
inc
mov
mov
sbb
mov
les
clc
dec
cmp
cmp
pusha
xor
dec
pop
and
jne
xchg
fstl
sub
jmp
xchg
std
adc
stc
cld
pushf
adc
inc
xchg
jge
xchg
adc
in
mov
push
push
dec
bound
test
andl
ljmp
clc
ja
popf
xchg
and
xchg
outsb
andl
ret
int3
and
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
jmp
icebp
not
xchg
into
xor
jbe
cmc
gs
scas
pop
sbb
stos
adc
sbb
icebp
testl
mov
in
orl
cmp
sub
data16
add
or
sub
and
pusha
test
and
inc
imul
mov
in
add
push
xchg
ds
test
mov
inc
sbb
adc
cmpsb
push
mov
in
sar
movsb
jnp
sub
pusha
jg
pop
jle
or
push
pop
xor
adc
jge
xor
lds
pop
xchg
fisubl
xor
fnstcw
pusha
loop
in
addr16
ret
es
addr16
hlt
in
test
adc
push
xchg
jge
insb
pop
mov
sbb
cmc
jbe
shll
imull
inc
pushf
pushf
stos
or
and
xchg
in
ret
mov
arpl
mov
xchg
hlt
push
pusha
mov
xchg
sbb
sbb
add
test
xchg
cmp
outsl
movsb
arpl
incl
scas
nop
lock
fdivrp
mov
fwait
jb
sbb
mov
std
in
adc
cmc
push
lret
aaa
lahf
mov
inc
in
mov
cmpsb
xchg
dec
cmp
dec
ljmp
rorb
jmp
loope
orl
out
loop
rcrl
sub
jmp
cmp
adc
vmread
mov
test
push
xchg
in
and
cmp
jbe
cmp
and
fstl
mov
out
rolb
rol
rorb
jbe
inc
stos
movsb
cmp
pcmpgtb
js
or
cwtl
mov
mov
aas
outsl
or
push
fadd
sub
call
push
icebp
dec
jb
jbe
repz
push
push
repz
ret
or
sbb
dec
jle
inc
cmp
add
push
popf
mov
daa
fsubr
and
add
out
sbb
jae
enter
xchg
rol
jnp
pop
movsb
jno
jno
test
sbbl
es
adc
mov
shlb
cli
je
adc
aaa
leave
aaa
ljmp
ret
sub
push
andb
mov
ficoml
push
std
pop
jns
subb
cmp
dec
cmc
lods
call
aas
aad
jo
xchg
fdivrs
sbb
stos
jl
cmp
jecxz
imul
enter
xor
and
cmovg
lea
lods
adc
xor
std
mov
lahf
icebp
inc
fstpt
int
mov
in
roll
stos
sbb
jns
and
sbb
pop
pop
in
fisubrl
lret
adc
sbb
push
cmp
and
inc
lods
cmp
mov
bswap
test
cmp
cmc
lret
or
test
int
repnz
jl
adc
aas
xor
inc
mov
getsec
iret
jb
add
jg
insb
fistpl
add
dec
iret
jns
ret
mov
sub
mov
inc
add
sub
sti
dec
fnstenv
jbe
dec
jne
push
jo
mov
xlat
dec
pop
mov
push
and
add
in
out
aaa
xor
popf
xor
addr16
mov
push
cld
cmp
shr
sbbl
stos
pop
xchg
pop
adc
and
cmpsb
push
push
jo
sub
pop
jmp
popa
bound
xchg
insl
mov
pop
pop
jne
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
jmp
cmp
sahf
cmp
mov
inc
push
sbb
stos
adc
sbb
loopne
idivl
aas
leave
jbe
es
movsl
jno
xchg
add
cli
jmp
aad
xorl
sub
jae
clc
dec
or
xorl
sbb
adc
and
adc
lret
leave
rcll
xor
push
dec
mov
lret
je
addr16
xchg
add
cmp
sub
fmulp
xchg
pushf
mov
inc
aas
shl
inc
rorl
xlat
mov
daa
add
and
xor
aad
and
in
loop
mov
pop
pop
mov
pop
xor
and
xor
test
scas
push
test
push
lahf
gs
fs
inc
and
adc
js
push
xor
xchg
adc
popa
inc
in
mov
addr16
and
inc
sbb
jo
aad
scas
lret
loop
pushf
lock
dec
sub
xchg
out
jmp
in
sub
dec
xchg
in
stos
xor
out
push
in
mov
mov
sub
lahf
xlat
sbb
icebp
jle
rcrb
cltd
xor
test
or
aaa
add
pop
rcl
fcmovnu
enter
popa
sub
out
inc
cs
cmp
sti
pop
incl
xlat
lods
mov
lcall
das
pushf
cmpsb
fcoml
add
call
pop
mov
mov
sti
leave
push
or
pusha
dec
add
pop
cmp
mov
scas
ret
out
and
cmp
rcrl
lock
test
fcmovne
mov
add
popf
pop
pop
lock
out
or
cmpb
popa
push
stos
insl
sbb
or
test
pop
pop
shlb
or
xchg
mov
outsb
add
mov
xchg
and
jecxz
fstpt
sub
inc
mov
push
sub
jbe
push
dec
xor
and
mov
xor
or
lock
mov
xor
bound
push
sti
pusha
pop
xchg
popa
xchg
push
js
mov
loop
adc
sbb
mov
push
lret
mov
into
aas
xchg
mov
sub
sarl
pusha
insb
mov
xchg
test
movsl
jo
hlt
in
xchg
mov
push
aas
pop
xchg
lock
in
mov
xchg
add
xchg
popa
movsb
inc
in
sar
add
mov
pop
jmp
ret
neg
dec
pop
sbb
mov
icebp
sub
out
stc
popf
xchg
dec
sbb
adc
xor
jnp
daa
stos
mov
and
cwtl
ja
sarb
out
test
add
out
or
cmp
rcll
sbb
xor
xchg
xchg
adc
mov
xor
in
xor
pop
sub
inc
sti
cmc
xchg
outsl
jne
sbb
loopne
push
and
dec
jbe
out
xchg
xchg
imul
adc
rorb
ror
sub
pop
jb
icebp
mov
testb
sub
jno
jp
or
std
adc
loopne
pop
in
adc
push
mov
jo
push
xor
mov
dec
mov
push
dec
and
adc
stc
mov
jno
and
clc
mov
sub
push
jno
fwait
lods
and
or
ret
gs
jle
mov
insl
mov
and
sub
xchg
aam
xor
mov
jecxz
mov
mov
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
jmp
push
push
jbe
jb
mov
push
xchg
mov
sbb
jecxz
xor
jle
jnp
aad
add
push
push
ret
push
in
and
psubusw
les
shlb
mov
sub
out
call
mov
lahf
arpl
std
mov
xor
mov
addb
pop
inc
ror
aaa
repnz
sbb
adc
aas
jge
push
into
imul
out
dec
cwtl
mov
cmp
push
pop
inc
xchg
sarl
xorl
pusha
xor
aam
xor
imul
in
lods
mov
mov
rcr
and
in
pop
jne
aas
cmp
xor
leave
adc
leave
xchg
outsl
xchg
cld
lods
out
movsb
mov
fs
stos
ret
cmpsl
xlat
lret
sbb
sbb
mov
lea
xor
js
push
std
arpl
in
ficoml
ja
popf
repz
and
dec
int
imul
cs
xchg
enter
sub
test
divb
out
inc
mov
xor
shlb
pop
loope
pop
insb
push
jbe
hlt
aaa
pop
sti
stc
js
pop
pop
cmp
lret
mov
decl
arpl
call
sbb
pop
inc
push
outsb
xor
mov
fs
mov
pop
adc
cmp
jns
pop
stc
lea
cmp
sahf
cltd
test
test
mov
pop
add
test
xchg
in
out
enter
push
sbb
ds
cmc
jmp
jle
repz
add
fisubs
enter
and
pop
or
aaa
sub
xchg
sub
mov
pop
in
mov
sbb
scas
mov
mov
insl
pop
xchg
iret
out
xor
jp
dec
data16
fwait
jnp
test
test
in
dec
lcall
sub
shrb
inc
jle
outsl
mov
mov
in
test
in
xchg
mov
or
or
adc
in
mov
sub
adc
mov
imul
cmpsl
mov
sbb
cmp
xchg
add
cld
xor
cld
mov
pop
imul
test
jbe
cmp
add
jg
cmp
popf
loopne
push
push
add
mov
sbb
pcmpeqd
aad
or
cmp
icebp
out
mov
cwtl
mov
sahf
sbb
bound
popf
jb
push
cmp
outsl
outsl
mov
add
push
aaa
aas
pop
cmp
cmp
pop
punpckhdq
push
xorl
pop
push
in
mov
jno
js
jb
roll
orb
xor
mov
sti
and
lods
int
lcall
lds
stc
aas
lcall
mov
sti
mov
cltd
push
mov
fs
add
or
iret
int
mov
popf
clc
stc
stc
clc
outsb
ja
in
pop
inc
cwtl
call
lods
push
cmpsb
cmpl
bound
mov
jl
cs
mov
inc
dec
xchg
xchg
popl
dec
mov
and
add
mov
mov
sub
dec
mov
or
daa
xor
ja
mov
aaa
call
adc
insb
in
dec
lahf
rclb
sbb
xor
scas
sbb
bound
aas
xchg
adc
push
and
adc
xchg
add
push
push
push
push
call
mov
mov
jmp
or
sbb
jmp
aaa
push
inc
sbb
stos
adc
sbb
xlat
xchg
es
or
popf
jg
iret
je
out
mov
jne
pop
or
fildll
xor
mov
in
jne
scas
or
das
add
pop
mov
xchg
test
mov
out
cmp
je
jmp
push
mov
sti
cs
and
mov
lods
sarl
cli
in
inc
xor
xchg
sub
mov
imul
mov
push
iret
xor
jo
out
or
dec
mov
enter
inc
xchg
xlat
sbb
xchg
xchg
cmp
int3
cmpsb
jns
xchg
movsl
dec
stc
jecxz
jns
mov
out
int
cltd
add
in
jne
addr16
aad
pop
loop
push
jo
mov
sub
mov
popa
sbb
leave
into
push
dec
sub
push
ficompl
mov
icebp
jo
adc
add
push
xchg
cs
mov
add
shlb
cli
cwtl
fs
push
repz
mov
jns
xor
jne
xor
into
mov
cmp
ss
or
cs
icebp
test
xchg
js
pusha
out
and
arpl
cmp
push
ljmp
mov
mov
gs
test
xchg
dec
inc
add
fwait
xorb
inc
xchg
imul
and
arpl
daa
test
mov
dec
push
pop
sub
push
popa
add
mov
and
insl
xchg
sbb
test
adc
mov
mov
push
dec
cmp
push
loope
sub
scas
or
fwait
inc
mov
pop
mov
pop
popf
test
pop
dec
xor
and
jle
outsb
inc
cs
loope
es
xor
out
fisubrs
cli
dec
dec
push
addr16
dec
sahf
lea
or
add
xchg
add
ret
fistps
pop
xchg
push
rcll
dec
inc
sbb
jb
xor
rcr
repnz
dec
jle
lcall
add
shl
popl
dec
push
mov
fistpl
xchg
mov
mov
mull
jmp
dec
add
ficoml
mov
and
or
pop
fcmovnu
xchg
fcomps
pop
dec
pop
dec
xchg
sub
mov
data16
scas
jl
rcrl
mov
jle
fnsave
les
jae
adc
leave
dec
dec
aam
or
rolb
or
push
cmp
adc
sub
loope
inc
xchg
sarb
pop
dec
hlt
clc
jne
ds
pop
lret
mov
lcall
fldcw
nop
std
jno
mov
leave
push
sarb
ret
mov
leave
loop
ret
pop
scas
xorl
jmp
mov
cmp
pop
fldcw
ja
hlt
lret
jecxz
push
sbb
pop
adc
aas
daa
repnz
or
jp
xchg
jno
dec
pop
int
or
pop
inc
pop
outsb
jne
lods
loopne
iret
sbb
cmp
push
js
push
mov
jae
push
mov
movsb
ret
push
mov
out
pop
cmc
pop
cs
fiaddl
shrb
pop
daa
xchg
pop
loopne
push
or
adc
mov
ret
dec
iret
jmp
aad
mov
jmp
push
in
idivb
and
lods
aam
lahf
pop
or
imul
inc
or
cltd
mov
xor
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
jmp
out
inc
jp
jp
sub
xchg
cmp
xchg
jnp
idivl
sbb
stos
adc
sbb
add
inc
rcll
fnstsw
stos
or
lahf
sub
aas
push
jecxz
rorl
pop
data16
int
sub
test
lock
adc
pop
in
mov
adc
adc
lahf
cld
loope
imul
fsub
pcmpeqb
dec
push
xchg
pusha
mov
xchg
pushf
dec
mov
rcr
lcall
sti
inc
push
fwait
dec
out
push
loope
jns
adc
lret
or
ret
cmp
pop
dec
gs
fdivl
cmpsb
cmpsl
add
and
call
add
fldt
int
outsb
ja
pop
pop
lahf
or
dec
leave
cmp
pushf
or
nop
ss
push
sub
xor
in
sarb
aad
movsb
sbb
jecxz
inc
sub
cwtl
mov
jg
lea
dec
and
jnp
lcall
pushf
sub
push
lret
mov
lods
aas
adc
fmuls
dec
xchg
iret
popa
inc
aaa
stc
dec
ds
lods
mov
scas
fwait
dec
sub
loope
pop
mov
xchg
xchg
jge
leave
or
nop
pop
or
inc
lahf
lods
mov
xlat
test
mov
imul
nop
sub
insb
enter
jbe
dec
ljmp
cwtl
push
inc
adc
ret
add
pop
arpl
lea
push
pop
mov
lods
gs
push
aas
push
inc
mov
addr16
push
shll
jl
scas
lods
std
cmp
outsb
jp
push
sub
scas
fdivrl
les
jecxz
dec
pop
sahf
inc
and
out
push
cmc
das
inc
fstpl
sbbl
imul
mov
or
ffree
push
or
adc
mov
jns
jb
dec
sbb
xchg
stc
lds
in
mov
push
jmp
jmp
cmp
pop
add
push
push
push
mov
sub
push
in
mov
outsl
fildl
add
add
negl
inc
xor
push
fbstp
insl
push
sub
dec
mov
stos
and
fsubs
pop
push
sti
pop
lods
lret
mov
out
test
lcall
ss
xchg
and
loope
ljmp
scas
leave
mov
mov
fisttpll
out
cld
stos
mov
lret
stos
push
shl
fildl
fs
mov
sbb
adc
aam
dec
push
fstpt
jnp
adc
push
mov
lods
cmp
lds
out
shrb
or
es
mov
aam
daa
stc
testb
sbb
fs
mov
lods
adc
nop
scas
ljmp
lds
les
sbb
sarb
dec
iret
mov
test
sbb
fcompl
subl
pop
xchg
mov
insb
inc
mov
xchg
imul
cmp
push
or
xchg
lods
mov
push
jl
outsb
mov
mov
sti
ja
mov
xor
sbb
loopne
xchg
xchg
std
rol
lea
sbb
and
push
dec
mov
push
lods
lds
cmp
in
scas
mov
inc
stos
fisubrl
and
lcall
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shl
xor
shr
or
xor
or
mov
jmp
mov
fcompl
stos
test
clc
push
xor
sbb
aaa
jae
clc
shrb
dec
mov
inc
sub
xor
adc
adc
sti
int3
lods
dec
add
sbb
iret
sbb
mov
sub
push
lds
ljmp
sti
cli
or
jns
adc
and
sub
xlat
int
add
pop
mov
call
jbe
fldt
fwait
mov
cli
dec
lds
sbb
insb
sbb
sub
and
mov
arpl
push
pop
cmpsb
lods
jg
lods
cmp
sbb
aaa
xor
loopne
psadbw
push
bound
mov
jp
fdivs
int
add
push
jmp
daa
test
mov
dec
dec
ja
insl
aam
stos
push
or
pop
scas
sahf
pusha
outsb
rcr
jnp
lahf
fcomps
push
repz
sub
push
pusha
outsl
cmp
fmul
insl
out
pop
or
call
hlt
mov
ss
arpl
js
loope
xor
mov
mov
bound
dec
or
and
aam
push
cmp
cmp
jnp
cmp
push
xor
jg
or
ficoml
push
mov
dec
es
pusha
lret
xchg
test
mov
cmc
outsl
jbe
loope
mov
and
xchg
imul
mov
inc
popf
lea
jne
dec
jae
scas
cli
sub
into
xor
mov
test
push
lahf
scas
pushf
out
mov
dec
or
insb
jmp
cmc
adc
mov
mov
lods
imul
dec
sbb
out
fwait
outsl
jns,pt
iret
inc
inc
jmp
pusha
ret
adc
sub
adc
xchg
lds
leave
push
daa
ret
sub
mov
xor
or
push
leave
fdiv
jp
push
pop
or
xchg
adc
xchg
iret
xor
outsl
cmp
inc
inc
aaa
aas
sti
mov
movsl
mov
jmp
fimull
ja
mov
jbe
xor
add
ljmp
sub
mov
mov
dec
mov
jne
ret
adc
xchg
in
stos
pop
das
cmp
mov
rcl
push
bound
dec
inc
mov
adc
fstps
loope
leave
or
js
jne
mov
leave
popa
sub
add
push
push
cmp
mov
incl
cmovae
mov
sub
and
test
fcmovnb
xlat
mov
aaa
sub
pop
shr
subl
sti
cwtl
sbb
js
imul
es
jmp
xor
out
aam
fisttpl
out
dec
dec
test
mov
sbb
mov
mov
aas
inc
mov
cmp
push
es
jbe
adc
inc
loop
cmp
add
or
xchg
jb
pop
mov
and
dec
ret
clc
cwtl
sub
aad
add
dec
push
out
sbb
push
cmc
les
js
shll
mov
dec
adc
pusha
dec
or
inc
push
jns
jp
dec
xlat
or
dec
push
shr
push
orb
adc
and
xchg
sarb
sub
stc
cli
pop
scas
jl
scas
xchg
pop
mov
fwait
or
pop
movsl
mov
icebp
mov
aaa
push
call
test
inc
pop
or
faddl
adc
xchg
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
jmp
jnp
xlat
dec
sarl
jnp
add
lds
fistpll
sub
sbb
adc
sbb
jp
stc
pushf
movhps
jmp
jmp
mov
les
or
fwait
xchg
outsl
pop
cmp
or
arpl
stos
mov
out
test
pop
push
xchg
arpl
pusha
out
test
sub
and
std
mull
jge
sub
dec
jo
lea
dec
mov
in
jmp
sarb
in
push
jmp
data16
into
xchg
sbb
int
jle
or
daa
andl
sub
out
lods
popa
inc
xchg
sub
inc
ret
mov
mov
das
mov
shl
rcll
shr
adc
int
xchg
inc
rorb
fmull
clc
popa
sub
lock
lods
cmp
add
adc
aad
aaa
pop
inc
push
leave
inc
pop
outsb
lods
push
pop
jnp
cmpsl
lds
push
and
inc
sub
inc
in
sbb
mov
lods
mov
push
or
mov
les
in
call
scas
xchg
je
lock
adc
cmp
mulb
and
push
jne
jb
fdivr
fcoml
andb
mov
sbb
popl
lock
mov
add
mov
mov
push
pusha
xchg
stos
or
push
mov
or
movsb
jl
js
setae
mov
lret
out
mov
pop
out
insb
jnp
mov
daa
jno
add
cmpsl
fiadds
gs
cmc
mov
lcall
add
lahf
inc
cmc
pop
xchg
lock
inc
rcrb
mov
cmpsl
mov
and
fidivrs
xchg
xor
es
mov
pop
fisubs
jl
push
ret
pushf
push
lahf
loop
je
lret
cld
mov
cltd
mov
jb
in
popf
mov
sub
mov
sbb
xchg
add
test
rorl
arpl
loop
mov
dec
aas
dec
into
lods
adc
dec
xchg
aad
jmp
mov
test
stc
add
jecxz
dec
scas
popa
outsb
xchg
cmc
pop
stos
aaa
icebp
sbb
xor
or
mov
sub
sbb
adc
out
mov
mov
cmp
lret
stos
fimuls
call
add
test
outsl
loopne
pushf
test
iret
jg
test
jne
outsl
mov
adc
cmpb
sbb
lea
dec
jp
scas
and
push
xchg
mov
pushf
or
xchg
jecxz
and
xchg
pop
test
fimull
aam
dec
and
sub
testb
jns
lret
adc
mov
ss
stos
repnz
or
jge
aas
pusha
repz
jae
sub
std
iret
fdivp
push
adc
xor
cld
pop
lock
dec
rolb
lcall
iret
jl
mov
cwtl
into
jecxz
sub
fnsave
adc
dec
jp
stos
adc
outsl
pop
out
mov
mov
cs
test
cmp
sub
enter
stc
add
ret
repnz
imul
mov
add
cmp
iret
pop
es
in
movsb
imul
jg
sub
imul
mov
les
aad
divb
clc
add
add
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
jmp
push
mov
dec
sub
ljmp
ss
shlb
sbb
adc
sbb
outsl
das
lds
outsl
cmp
pop
je
stc
jnp
insb
aad
mov
in
je
cmpsb
outsl
imul
pop
mov
jmp
mov
sti
cmc
xor
js
imul
sbb
cmpl
aam
lds
dec
inc
stos
sub
and
pop
sbb
dec
xchg
pop
pop
mov
bound
push
jae
out
rorl
push
push
sahf
cld
or
xor
adc
outsb
dec
cltd
inc
sub
loopne
mov
aad
push
scas
shl
mov
cltd
adc
mov
cli
push
test
push
add
push
arpl
cmc
jno
sbb
popa
jbe
dec
fisubs
rclb
and
mov
sbb
test
imul
jle
insl
rcll
clc
movsl
aas
nop
je
cld
rol
out
pusha
jbe
notl
sbb
pop
out
jmp
fiadds
push
stc
add
lret
sbb
leave
jge
xchg
pop
out
addr16
pop
sub
push
out
mov
orb
jmp
hlt
mov
push
mov
or
and
xor
mov
fs
mov
out
inc
dec
pop
inc
shl
push
jno
inc
inc
clc
mov
mov
mov
inc
xchg
xchg
xchg
test
jb
adc
testb
pop
mov
mov
adc
enter
lcall
ret
test
scas
sub
jl
sbb
xor
xor
jmp
fcom
push
subl
mov
fbld
loop
sub
sahf
jp
push
call
and
loop
sbb
xor
pop
clc
dec
add
mov
aaa
sub
inc
fsubl
pop
and
stc
jno
nop
mov
movsl
add
pushf
adc
inc
dec
cmpsl
mov
adc
push
sub
aaa
push
dec
jns
inc
push
cmpsb
jmp
dec
mov
enter
xor
pushl
mov
sub
mov
xchg
sbb
inc
lock
or
jg
or
sti
adc
xchg
lret
add
enter
mov
das
or
xor
dec
mov
ljmp
fwait
mov
cmp
jae
sahf
push
xchg
aas
mov
pop
mov
sbbl
sbb
mov
enter
sub
inc
mov
push
jl
sbb
cld
movsl
test
jne
sbbb
cmp
adc
int3
cmp
sub
in
mov
push
jne
or
out
push
jbe
je
mov
insb
mov
sar
pop
movb
jb
ds
shlb
pop
cmp
fidivrs
cmp
ljmp
sbb
fistps
xchg
in
xor
clc
movsl
lock
push
push
lcall
in
ljmp
sbb
mov
movsl
inc
add
jl
leave
jbe
xchg
nop
adc
test
lret
cs
lret
cltd
xor
push
mov
mov
sub
dec
pop
add
into
lods
xor
loope
cmp
movsl
jge
sub
mov
repz
and
pop
es
fdivs
sti
push
dec
jmp
jg
pop
fnstenv
faddl
dec
cld
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
jmp
lret
mov
pop
inc
repnz
inc
daa
stos
mov
sbb
adc
sbb
outsb
cmc
sbb
push
and
and
shr
das
and
xor
push
cld
push
sbb
dec
je
data16
jb
mov
sarb
call
inc
mov
dec
or
fwait
mov
cwtl
mov
leave
mov
dec
aam
icebp
or
and
inc
test
cmp
aas
loop
fld
inc
rol
and
imul
cs
mov
fists
stos
insl
inc
pop
jecxz
sarb
out
mov
cmpl
out
sbb
mov
sub
xchg
cmp
es
pop
pop
int
cmp
je
xchg
mov
mov
mov
imul
nop
lods
inc
add
testl
neg
out
add
popa
ret
hlt
icebp
jns
int
outsb
sbb
mov
mov
cltd
in
stos
lods
sahf
sbb
lcall
outsl
pop
das
sti
arpl
xchg
or
push
xchg
mov
dec
xchg
mov
pop
mov
pop
add
sahf
aad
sbb
and
bound
ret
xchg
fstl
push
je
iret
es
inc
push
addr16
bnd
pop
movsl
dec
les
out
icebp
add
add
xchg
jns
dec
xor
stos
xor
sub
rcrl
dec
sub
or
rcrb
cli
ficoms
jge
xchg
aad
fisttps
imulb
mov
jmp
cmpsb
loop
arpl
les
xchg
aaa
adc
mov
jae
lret
xor
pop
xor
xchg
and
loopne
ljmp
pop
push
dec
or
xor
arpl
push
mov
mov
ret
loope
pop
dec
xchg
xchg
mov
cmp
ret
cwtl
icebp
sbb
sbb
test
ret
clc
mov
mov
xchg
adc
sbb
imul
mov
mov
push
inc
adc
aam
mov
mov
xor
clc
in
int3
mov
mov
outsl
lds
dec
iret
int
mov
fldt
adc
adc
pop
fistl
and
orb
push
mov
push
push
inc
mov
mov
sarb
xor
test
sbb
sbb
xchg
jb
je
dec
mov
push
fldt
rorl
inc
in
jp
mov
call
adc
adc
rcl
and
out
pop
sub
push
nop
pop
pusha
mov
rcl
or
jle
pop
mov
jge
mov
pop
mov
mov
mov
movsl
outsb
pushf
ja
push
push
mov
idivl
push
add
xchg
add
rol
repz
xchg
add
mov
dec
mov
jnp
sub
jl
inc
enter
adcb
xchg
dec
lret
lods
pop
repz
lds
xor
xor
sbb
pop
xchg
aaa
sub
jo
push
mov
jl
mov
sahf
daa
js
repnz
pop
mov
mov
pop
pop
mov
hlt
xchg
out
pop
movl
adc
mov
mov
mov
pop
popa
stos
roll
rorl
dec
or
fsubs
rorl
dec
rorb
scas
rorl
dec
enter
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
jmp
sbb
cli
sbb
lret
mov
pop
adc
inc
push
push
sbb
loope
sub
stos
adc
sbb
or
push
enter
sahf
mov
push
test
movsb
lock
mov
cmp
jnp
dec
xchg
mov
repz
test
cmc
push
sbb
fisttpll
lcall
fwait
xor
gs
lea
xchg
pop
add
jg
insl
arpl
popa
sbb
imul
add
jp
in
bnd
sub
lods
call
imul
insl
mov
fcomi
cmp
add
fcoms
in
xchg
lods
adc
mov
mov
xchg
lods
addr16
pop
inc
adc
out
add
xchg
add
push
dec
push
push
rcrb
je
sahf
adc
or
leave
pop
push
rol
jmp
mov
and
pop
shll
jae
xor
push
jno
ss
imul
inc
nop
clc
cmp
push
in
lock
pop
and
sbb
es
cs
cmc
adc
icebp
into
xchg
jo
lahf
cltd
adc
pop
stos
pop
shlb
mov
data16
sahf
in
shll
gs
fidivs
xor
inc
repnz
push
les
gs
mov
ds
adcl
mov
test
cmp
mov
cmp
mov
jnp
sbb
idivl
mov
frstor
das
pop
in
adc
les
shll
push
push
xor
in
dec
stos
jbe
sub
xchg
in
add
lahf
and
mov
xorl
rcl
inc
xor
fadd
outsb
mov
sub
dec
jno
rol
jmp
dec
xchg
lods
adc
addr16
repnz
jp
mov
in
loop
gs
aad
xchg
mov
ret
push
loop
xchg
lcall
add
jno
pushf
ljmp
xchg
add
fsts
pop
mov
rorl
and
jae
dec
inc
dec
or
fdivs
cmpsb
popa
cli
pop
cmp
idivl
pop
adc
jecxz
xchg
pusha
in
sbb
sub
mov
sbb
int3
adc
jns
shlb
push
enter
cltd
xor
insl
loopne
sbb
std
xchg
popa
adc
cmp
jle
pop
xchg
add
loop
inc
leave
jo
sub
loope
push
rol
add
lret
outsl
loopne
dec
bound
shll
arpl
jge
data16
cmp
insl
push
test
repnz
sub
andl
roll
mov
lret
adc
out
mov
push
xlat
push
inc
sub
js
jecxz
pusha
push
inc
in
aad
push
mov
stc
sbb
into
mov
in
push
and
int3
imul
imul
sub
adc
scas
xor
xchg
pop
hlt
push
int
sti
add
filds
xchg
rclb
adc
sbb
sbb
xchg
sbb
push
fidivl
mov
cli
movsl
sub
inc
dec
movsl
jno
dec
pop
lret
bound
and
adc
cmp
push
dec
xchg
icebp
inc
sahf
aaa
inc
mov
xchg
fwait
mov
or
dec
sub
mov
popa
push
out
sbb
push
sub
je
repnz
push
fwait
xchg
popf
ret
mov
fiaddl
push
xor
stos
ficompl
bound
nop
sub
bound
xor
mov
add
fmull
or
push
add
inc
and
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
jmp
mov
aas
sbb
sub
xchg
mov
mov
adc
sbb
in
xchg
loopne
push
push
mov
or
movsb
aas
cmpsl
pop
add
adc
in
rcrl
cmpsl
divl
jge
pop
dec
dec
add
dec
ja
mov
imul
xchg
sarb
mov
cmp
nop
scas
jge
pop
lea
rep
psubq
dec
pop
inc
aaa
cltd
stos
lock
outsl
rol
arpl
push
jp
lds
ja
and
pop
sub
jle
jle
repnz
pusha
and
je
fnsave
shr
jo
xchg
and
mov
xlat
xlat
push
out
sbb
pop
and
fbld
int3
test
arpl
mov
mov
nop
push
mov
dec
ljmp
cmp
stos
xchg
mov
mov
aad
pop
jnp
jp
inc
sbb
cwtl
shlb
xchg
aaa
dec
int3
mov
out
xor
xlat
or
inc
pop
call
pusha
xor
jns
clc
stos
sub
cmpsb
sbb
fwait
mov
cmp
cmp
or
sub
sub
push
mov
ret
add
push
jmp
fmul
rorl
mov
nop
mov
mov
push
mov
mov
mov
push
xchg
xchg
lcall
xchg
imul
rcl
sub
xor
dec
push
add
push
scas
inc
mov
cmp
out
xor
fwait
xor
leave
adc
push
outsb
insb
fcomi
pop
inc
mov
shrb
mov
or
and
dec
aam
push
shlb
loopne
sbb
dec
sbb
movsl
xlat
sbb
mov
inc
sub
fcmove
bound
arpl
ljmp
cmp
leave
fdivs
mov
sub
popf
xchg
push
jo
fsubs
es
call
mov
ss
out
mov
leave
push
arpl
ss
add
std
jmp
mov
cmp
cmp
sbb
rclb
jg
cmp
pop
test
add
mov
xchg
fnsave
int3
and
je
mov
test
and
inc
test
lods
call
cs
push
push
mov
icebp
insb
mov
insb
inc
jle
sub
push
add
mov
scas
test
jl
sbb
ss
mov
or
movsb
inc
sub
lods
xchg
aad
push
out
mov
movsb
and
loopne
mov
xchg
ffreep
lahf
lcall
mov
cmp
nop
jb
hlt
fwait
inc
sub
xchg
xor
pop
push
adc
test
xor
pop
sarb
push
mov
int
cld
sub
mov
orl
lods
cld
ret
sahf
subb
mov
pusha
lret
push
inc
push
jae
dec
xchg
push
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
jmp
pop
pushf
lds
pop
pushf
push
cwtl
pop
jo
xchg
cmp
or
sbb
repz
int3
jno
clc
push
stos
inc
cmpsl
sbb
mov
inc
mov
sub
add
jmp
xchg
xlat
scas
jl
xorl
mov
or
dec
stos
cmp
cmp
and
in
sub
mov
shll
adc
add
xchg
mov
call
aaa
jne
fldl
inc
je
jne
ljmp
or
xor
ror
sbb
divl
jge
xor
sbb
mov
hlt
sub
xor
ret
pop
mov
test
xchg
outsb
jo
nop
sahf
scas
pop
out
xchg
mov
repnz
into
loope
push
add
mov
sti
push
mov
jns
sbb
icebp
mov
insl
ja
lret
cmp
mov
add
sbb
mov
or
ss
mov
push
movsl
sahf
cli
movsl
aam
pop
mov
dec
xor
test
mov
adc
jmp
xchg
dec
in
fwait
cmpsb
loopne
loopne
push
scas
js
lcall
inc
push
clc
mov
sub
mov
adc
dec
mov
icebp
ffree
inc
xor
inc
rol
or
test
imul
inc
shll
xor
cli
xlat
sub
mov
in
stos
pop
xor
mov
xorb
push
int
test
aas
cmpsb
push
adc
loope
in
cltd
adc
in
or
mov
dec
cli
jo
cmp
clc
push
push
call
ret
loopne
ss
mov
cltd
lock
insb
mov
adc
in
add
ljmp
inc
js
add
pop
in
xchg
test
mov
pop
iret
scas
inc
cmp
shr
cmp
add
jno
fdivr
popf
ret
dec
mov
sbb
xor
pop
js
je
addr16
dec
xchg
lods
xor
push
mov
rolb
mov
push
outsb
dec
mov
mov
sbb
sub
pop
outsl
mov
mov
data16
jbe
or
lds
pop
test
add
in
mov
jbe
loopne
dec
jnp
sarl
das
adc
das
jge
ljmp
xor
sbb
lret
mov
stos
sub
jnp
add
or
pcmpeqw
inc
inc
mov
sbb
test
out
scas
mov
jb
mov
lret
push
adc
out
mov
addr16
leave
jge
aam
ja
sub
ja
add
sub
jns
sub
js
call
mov
stos
sub
cmp
std
ss
adc
sub
stc
insb
data16
aaa
push
xchg
in
mov
test
mov
sub
or
scas
jno
subb
cli
or
int3
hlt
mov
and
icebp
fucom
sbb
mov
sub
inc
or
xchg
mov
xor
mov
and
mov
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
xor
push
push
push
orl
mov
cmpl
mov
movl
jmp
mov
mov
cmpl
jae
pushl
pushl
pushl
pushl
push
push
pushl
call
mov
xor
or
sub
imul
movzwl
and
xorl
sbb
adc
mov
shrd
shr
mov
and
mov
mov
xor
xor
xor
xor
xor
or
sub
or
mov
xor
adc
or
mov
not
mov
sbb
shl
mov
shrd
adc
xor
shr
sbb
mov
mov
mov
sub
and
mov
cmpl
notl
movl
movl
jmp
movl
cmpl
jge
pushl
push
push
call
addl
inc
add
sbbl
mov
adc
xor
xor
add
or
cmpl
movl
movl
jmp
mov
mov
cmpl
jl
push
push
call
sub
sbb
and
mov
and
orl
mov
mov
sub
xor
mov
cmpl
mov
mov
jmp
mov
cmpl
jbe
push
push
push
push
push
pushl
push
push
call
mov
mov
sub
sub
add
or
add
or
and
mov
xor
mov
or
mov
and
mov
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
ja
pushl
push
pushl
pushl
call
or
or
adc
and
sbb
add
sbb
mov
xorl
mov
sbbl
mov
mov
cmpl
movl
notl
mov
movl
jmp
mov
cmpl
jg
push
push
call
and
sub
xor
xor
sbb
or
sbbl
shl
xor
adc
shld
shl
mov
mov
orl
mov
mov
xorl
xor
subl
xor
movl
movl
movl
movl
mov
movl
cmp
movl
jne
movl
cmp
je
mov
adc
mov
xor
shld
andl
shl
xor
cmpl
not
mov
mov
jmp
movl
movl
cmpl
je
push
push
call
orl
or
subl
movl
mov
add
mov
or
mov
or
mov
xor
mov
mov
cmp
jne
cmp
movl
je
cmpl
movl
movzwl
not
jmp
mov
cmpl
jne
push
push
pushl
push
pushl
pushl
push
pushl
push
call
xor
sbb
subl
sub
add
dec
and
mov
and
mov
push
pop
andl
xor
movzbl
add
shl
cmpl
mov
mov
movl
mov
jmp
movl
movl
cmpl
jg
push
call
add
neg
movl
and
and
movzwl
adc
mov
andl
xor
subl
shr
or
cmpl
movl
mov
movzwl
jmp
not
mov
cmpl
jg
pushl
pushl
call
adc
orl
mov
sub
addl
dec
mov
mov
and
mov
mov
mov
xor
mov
orl
push
cmpl
movl
movl
jmp
movl
cmpl
jle
pushl
call
xorl
subl
sbbl
andl
xorl
pop
orl
sub
mov
add
mov
mov
mov
sbb
lea
mov
and
mov
mov
xor
xor
subl
shr
andl
shl
sbbl
or
orl
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
jmp
sbb
lods
sbb
xor
pop
pop
jle
add
sbb
inc
xor
loope
sub
xor
mov
xchg
test
lcall
sub
mov
dec
or
adc
loop
push
cmp
mov
dec
push
test
lock
jne
adc
mov
sub
jae
aaa
dec
fcmovnb
je
orb
pop
imul
push
xchg
lcall
xor
pop
ret
jo
jmp
pop
subb
mov
sbb
insl
inc
push
adc
aam
or
and
pop
insb
dec
add
fwait
dec
sub
xor
add
rclb
pop
mov
sti
scas
inc
add
jbe
das
jmp
sbb
or
xor
dec
dec
fwait
xchg
pop
xchg
and
sub
push
sub
mov
xor
cli
adc
es
pusha
fwait
call
cmp
dec
add
cmpsb
icebp
push
mov
fs
jns
out
jb
mov
inc
mov
xchg
xor
into
rorb
dec
lock
mov
fwait
or
call
sbb
enter
pop
add
std
int3
int3
ret
pop
add
out
jae
cmpsb
fwait
xchg
cmc
in
ljmp
sbb
sub
in
in
jecxz
lods
cmpsb
jnp
cmp
xor
sbb
sarb
xchg
mov
lock
std
fidivs
push
cmp
sbbb
imul
mov
aas
jno
adc
and
sub
xor
loop
dec
add
loopne
cmp
adc
lret
loope
out
cmp
sbb
inc
mov
push
or
add
inc
push
mov
ficoml
push
mov
lret
mov
and
inc
pop
ret
test
enter
xchg
push
cmc
adc
mov
out
das
sbb
push
rcrb
pop
push
cmpsb
sbb
sbb
jne
pop
shll
cltd
hlt
push
stc
daa
ljmp
fs
dec
xchg
pop
fwait
sbb
insb
mov
lahf
lock
or
jecxz
int
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
jmp
out
mov
dec
xchg
fistps
mov
cld
push
sbb
mov
ret
rcll
jl
sbb
adc
jno
cltd
paddb
lock
repz
and
sbb
push
aas
xchg
sub
ja
ret
fidivs
arpl
adc
aam
lret
insb
mov
pusha
and
jb
jl
inc
push
jp
mov
mov
jg
je
adcl
arpl
adc
pop
ror
push
xor
fidivl
and
addl
jle
in
add
mov
ret
push
lock
rcrb
inc
adc
dec
inc
addb
leave
adcl
sbb
scas
pop
into
lret
cmc
sub
cmp
or
cmp
lods
gs
cmpsb
ds
sti
mov
test
leave
pop
push
inc
test
movsb
pop
add
bound
pop
insb
mov
call
mov
nop
shll
repnz
sbb
xchg
loop
test
pusha
push
outsl
push
sbbb
fsubl
cmpsb
stos
adcb
cld
add
les
out
adc
stc
xorl
call
jl
dec
gs
out
push
xor
mov
test
aam
and
xchg
outsb
sub
push
scas
loopne
ljmp
push
jnp
xchg
mov
in
test
scas
int3
nop
in
scas
pop
insl
lcall
insl
pushf
sbb
and
inc
dec
lods
cmp
cwtl
mov
ds
jecxz
inc
inc
test
out
lcall
inc
testl
push
dec
push
fistpl
mov
sub
rorl
cmpsl
arpl
dec
cmp
and
xlat
add
sub
mov
loop
daa
loopne
cltd
mov
test
je
rorl
sbb
add
out
hlt
mov
cmp
inc
cmp
scas
jmp
in
jne
movsl
dec
scas
xor
mov
mov
mov
push
ret
jno
push
xor
adc
sbbl
in
fmul
jecxz
xadd
inc
push
mov
mov
shrd
shr
mov
mov
xor
jmp
mov
sbb
mov
stc
clc
push
sbb
xchg
lahf
das
xor
aas
je
mov
push
pushf
shl
fwait
imul
ret
mov
cmp
insb
mov
gs
cmpsb
dec
mov
std
int3
addr16
scas
je
mov
cmpsl
push
mov
rcrl
cmpsb
inc
inc
jno
popa
mov
cmp
push
jecxz
icebp
loop
jmp
pusha
rolb
jne
lea
and
mov
cmpsb
int
negl
xlat
inc
adc
xchg
sbb
stc
js
sub
test
push
jl
push
scas
in
sub
push
mov
mov
rol
je
xlat
imul
xor
jge
aas
xor
xchg
stc
jb
jmp
mov
xchg
sub
fidivrl
jmp
data16
movsl
inc
jle
or
insl
faddl
jae
into
scas
out
push
sbb
push
les
and
dec
pop
movsb
jae
paddusw
out
sub
or
popf
bound
push
fisubl
mov
mov
xchg
je
out
fisubs
jnp
lea
pop
scas
xchg
outsl
sub
mov
idivl
mov
pop
jnp
loope
add
or
add
add
movsl
xor
xor
arpl
xchg
cwtl
outsb
sbb
sub
jg
xor
xchg
fbstp
dec
and
adc
cld
push
test
sbb
xchg
imul
inc
mov
es
and
int
int
in
push
mov
push
in
adc
das
cmp
dec
jno
mov
dec
push
insb
or
cmc
inc
and
mov
jns
fucom
inc
and
fwait
mov
mov
push
out
jae
popa
loopne
out
stos
imul
lods
loope
xchg
mov
jbe
jle
insl
push
pushf
clc
add
imul
sub
and
fiadds
out
xchg
test
push
test
push
push
mov
cmp
pusha
loopne
push
or
xchg
and
jmp
pop
inc
or
cmp
mov
aaa
jo
pop
fwait
notb
sahf
mov
test
cmc
addl
loope
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
sub
mov
or
mov
mov
jne
mov
xorl
mul
ret
subl
push
sbbl
mul
addl
mov
xor
add
mov
adc
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
jmp
dec
jbe
imulb
dec
sub
push
mov
loop
jle
hlt
push
sbb
adc
sbb
xor
stc
mov
fnstenv
push
scas
add
mov
outsb
leave
push
loope
mov
rorl
dec
push
test
mov
shll
mov
cmp
mov
lahf
addr16
mov
and
lods
lods
mov
sub
ret
mov
in
inc
mov
xchg
lahf
mov
jb
xchg
mov
out
xor
scas
jmp
mov
mov
scas
aas
fnstsw
sbb
out
sub
or
outsb
scas
in
inc
xor
nop
out
shlb
xchg
jno
in
mov
fsubs
mov
lods
hlt
fcoms
inc
push
push
cmpsb
mov
pop
pushf
xchg
inc
cmc
shlb
cmp
push
ja
cmpsb
or
adc
mov
mov
test
fimull
cmp
test
dec
movsl
push
and
pop
pop
add
xchg
outsl
fildll
mov
aas
ljmp
or
cmp
lods
xchg
test
push
ja
roll
test
icebp
cmpl
dec
jo
push
push
sub
dec
lods
in
fmull
loopne
cmp
stos
or
std
in
pop
rclb
jns
adc
es
cmpsb
shlb
stos
jge
aam
jle
loope
xor
sti
sub
sbb
out
lcall
or
xor
sub
jno
cmp
pop
in
sbb
mov
add
ret
pop
jg
and
add
les
pop
pop
xchg
push
jmp
es
sbbl
push
add
or
dec
test
rcll
sbb
gs
or
cld
sbb
add
test
sbb
sbb
aad
lret
mov
jecxz
insb
ret
and
shll
leave
gs
gs
imul
mov
lea
outsl
dec
cmp
enter
cmp
lock
sahf
inc
jne
repnz
leave
jl
push
insl
mov
mov
jno
movsb
and
xchg
movsb
mov
arpl
sub
iret
adc
fistl
jno
sub
mov
or
dec
scas
repz
pop
pusha
aas
push
repz
cmp
mov
roll
mov
add
mov
xor
fs
mov
test
mov
lcall
in
icebp
or
ja
mov
cld
add
out
fisubrs
or
mov
dec
sbb
in
add
shrl
sar
push
das
testb
lods
addr16
xorl
ja
xchg
cmc
rclb
pop
jbe
iret
add
jecxz
fsts
push
ss
shlb
push
cmpsl
cmpsl
pop
xor
mov
outsl
movsl
loopne
aas
add
jp
subb
mov
sbb
jmp
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
jmp
in
lret
repnz
pushf
pop
stos
movl
inc
out
push
sbb
adc
sbb
scas
mull
mov
mov
or
xor
pop
jecxz,pt
sub
scas
pop
mov
lods
sbb
mov
mov
aam
into
push
bnd
xchg
xchg
inc
repz
mov
sar
ret
lcall
loopne
addb
enter
ret
aaa
bound
sub
mov
lret
test
add
das
inc
inc
push
mov
xchg
fmuls
fcmovnu
jae
add
xchg
stos
hlt
xlat
in
fsubl
stos
mov
add
nop
cltd
jecxz
jmp
enter
sub
mov
sub
or
push
push
mov
arpl
push
add
sbb
inc
shl
dec
push
mov
test
dec
or
pop
jmp
add
aaa
loope
jge
fistpl
sti
jle
pmaxub
lcall
imul
data16
in
filds
push
enter
ret
stos
inc
jns
mov
mov
cmp
sbb
and
push
mov
add
aam
fcompl
jge
inc
out
cmp
imul
js
stc
adc
pop
jns
das
push
fdivs
ss
jnp
push
jmp
pop
push
int
xor
cmp
mov
add
fstp
cmp
jl
cli
andl
xor
jl
jb
and
scas
ret
ja
out
outsl
pop
enter
lds
lds
cltd
mov
xorb
cs
mov
cmp
fistps
ja
icebp
and
sub
gs
jnp
insb
push
push
or
xor
xchg
pop
cmpsb
sti
jecxz
test
jae
add
stos
mov
shr
imul
movsl
enter
lods
cli
cwtl
adc
lds
lods
jb
and
jmp
scas
popf
clc
push
mov
call
mov
ljmp
adcl
push
in
mov
cmpsl
arpl
adc
in
outsl
cmp
mov
sbb
add
data16
mov
fstps
outsl
fwait
inc
mov
cld
add
pop
das
mov
fnstenv
mov
and
out
scas
fdivs
xchg
adcb
push
dec
sar
scas
xor
mov
hlt
aad
imul
jmp
addr16
sbb
cmpsl
cmp
hlt
mov
dec
insl
mov
cmp
mov
pushf
out
call
test
push
mov
inc
and
cmp
dec
nop
sbb
pop
push
mov
inc
insl
pop
and
movsb
xchg
or
je
addl
addb
mov
inc
lds
int
adc
int
mov
enter
pop
add
aam
das
dec
pushf
fiaddl
dec
pop
popf
push
and
int3
xchg
bound
cmp
ret
dec
test
adc
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
pushl
lea
push
call
pushl
pushl
call
push
call
mov
subl
jmp
iret
and
inc
sbb
and
fnstcw
out
sbb
aad
out
arpl
je
xor
outsb
movsl
int
lods
js
ljmp
jo
pop
mov
push
xor
xor
loopne
cmp
jns
adc
in
sbb
mov
popf
dec
mov
test
addl
adc
popa
ret
xchg
xlat
mov
scas
add
or
adc
daa
stos
and
adc
addr16
cmp
lret
cmp
sti
pop
mov
mov
sbb
popf
or
inc
int
fiaddl
pop
dec
sub
nop
pop
daa
outsb
xlat
pop
jecxz
sbbb
in
cmpsl
stos
test
sub
lcall
sub
shr
mov
push
push
das
clc
fiadds
nop
mov
stos
and
imul
cwtl
cmp
sub
call
xchg
shll
inc
mov
ljmp
test
add
lahf
mov
sub
xor
dec
adc
xor
js
insb
iret
movsl
faddl
pop
mov
and
aas
xor
hlt
inc
sti
imul
fldt
jb
roll
sti
divl
add
push
dec
fsubrp
fstpl
push
sbb
fnsetpm(287
push
mov
pop
xchg
jp
test
dec
ja
lret
xlat
bound
push
pop
in
and
data16
lds
and
and
popf
push
or
dec
sub
xchg
notl
mov
out
mov
notl
xchg
push
mov
popf
cmpsb
sbbb
enter
and
mov
mov
stos
shlb
jns
adc
mov
test
cmp
sbb
roll
cmp
push
inc
ficompl
jmp
mov
mov
mov
xchg
mov
cmp
js
gs
sbb
jp
sub
and
pop
shrl
pushf
scas
push
shr
pop
jb
jecxz
imul
into
dec
adc
xchg
fnstsw
push
shlb
loope
stos
inc
pop
push
jmp
test
cmpsl
push
das
icebp
push
jae
xor
nop
and
sub
and
les
ds
mov
outsb
aad
push
sbb
xchg
cwtl
cmpsl
jl
push
mov
xor
mov
xor
pop
jge
ss
ds
ret
outsl
and
pop
popl
adc
adc
pop
scas
fimuls
aam
or
lcall
lods
lret
dec
shll
mov
push
pop
xor
cmpsb
rorl
rcl
push
in
push
jns
insb
jmp
xacquire
adc
jge
pop
shl
jmp
inc
pop
bound
and
ja
jle
fnstcw
dec
lds
sbb
push
xor
mov
inc
pusha
ja
xchg
sti
hlt
dec
lret
add
cmp
testl
or
mov
je
jb
repz
test
mov
add
test
stos
aaa
inc
add
aas
jg
jp
dec
push
lock
push
cs
mul
xchg
pop
and
cmp
stos
test
jp
jns
js
and
sub
mov
int
pop
cs
sbb
mov
xchg
int
aad
cmpsb
xchg
stos
xor
das
inc
push
cli
push
xchg
inc
push
je
fisubs
data16
imul
jns
cmp
cmp
fcomps
sti
push
andl
pushl
orl
call
adc
mov
add
movl
movl
addl
mov
mov
mov
and
mov
subl
xor
xorl
imul
and
sub
xorl
mov
xorl
movl
movl
adcl
movl
add
movl
xor
add
add
mov
mov
addl
sub
and
mov
and
mov
sbbl
xor
sub
imul
mov
mov
cmp
movl
jne
and
movl
movl
xor
movl
movl
add
pushl
cmpl
mov
mov
mov
jmp
movl
cmpl
je
pushl
pushl
push
pushl
call
not
sub
or
mov
mov
and
sbb
add
add
movl
xor
movl
movl
negl
jmp
xor
fwait
clc
dec
arpl
loope
sbb
dec
addr16
jl
jnp
ja
les
leave
fistpl
stc
mov
push
jg
loop
ficoml
sbb
aad
mov
xchg
mov
subl
js
gs
shll
repz
add
mov
stos
cmp
jne
adc
repz
popf
mov
cltd
icebp
shlb
or
cwtl
nop
sub
stos
aam
fnclex
dec
lods
mov
and
fs
xchg
cmpsl
icebp
dec
mov
xorl
or
push
movsl
bound
xchg
pop
nop
scas
cs
cmp
push
mov
push
push
jne
test
frstor
jg
jno
sbb
and
xchg
add
out
test
push
insb
lcall
jbe
dec
scas
lret
test
lcall
pop
enter
ljmp
hlt
mov
rcrl
pop
push
test
sbb
pushf
cmp
loopne
dec
jnp
or
mov
stc
xchg
rclb
es
cmp
inc
inc
sub
push
mov
push
xor
clc
inc
aaa
roll
and
xor
roll
out
icebp
mov
outsl
mov
inc
and
xor
push
pop
jbe
rorl
mov
fisubrl
shrb
not
push
jp
pop
enter
loope
das
xchg
mov
sub
fisttpll
mov
dec
sbb
scas
fcoml
jmp
inc
cmp
dec
mov
jbe
mov
adc
ret
mov
push
insl
and
push
pop
pop
xchg
pop
inc
dec
push
stos
pop
sbb
fistpl
xor
xlat
mov
sar
fisubs
addb
jnp
push
jl
inc
frstor
mov
xchg
push
loopne
add
cld
pop
enter
or
cmp
popa
mov
outsl
or
out
mov
lea
sti
loopne
test
add
test
pushf
shr
add
hlt
add
scas
hlt
cltd
and
mov
movsb
pop
dec
adc
in
out
insl
cmc
sbb
sub
dec
add
sarb
jae
insb
enter
stos
subl
insb
push
testl
ds
fcomps
movsb
sti
iret
dec
ja
inc
xor
push
subb
adc
hlt
or
inc
imul
je
or
push
inc
cmp
arpl
xor
pop
pop
mov
rcrb
aaa
mov
imull
mov
std
sub
lret
mov
xor
dec
dec
xchg
xor
das
mov
fwait
cmp
out
xchg
dec
jmp
test
fsubl
xor
xor
scas
mov
cltd
stos
adc
dec
dec
out
pop
out
sub
push
and
pop
jle
fbld
pushf
incb
sar
movd
sbb
and
jmp
mov
lds
int
xchg
lods
mov
sbb
xchg
das
sub
fbld
sbb
int3
ljmp
ret
popa
mov
andl
push
lahf
lret
jmp
aam
das
lea
jbe
push
repz
push
mov
repz
rcl
xor
nop
sti
nop
pop
mov
xor
xorl
xorb
int
enter
hlt
xor
add
and
aad
add
movl
movl
movl
movl
mov
mov
subl
imul
or
xor
cmpl
mov
mov
mov
jmp
movl
movl
cmpl
jge
pushl
pushl
call
subl
xor
mov
and
xor
mov
or
mov
or
jmp
jp
lock
dec
pop
push
dec
lret
repnz
loopne
mov
fsts
sbb
imul
and
sub
std
repz
lcall
pop
cmpsb
adc
shrl
jb
dec
imul
in
dec
mov
ds
je
in
fiadds
fmull
jg
mov
imul
push
data16
imul
mov
or
or
mov
js
outsl
push
jp
inc
dec
sbb
mov
orl
and
ret
cmp
aad
in
shll
loopne
pop
lea
cmp
inc
mov
cld
das
enter
dec
out
rol
xor
roll
shr
js
push
shlb
xor
shrl
ja
mov
cmp
mov
dec
lcall
stos
aam
mov
sub
jle
out
xchg
adc
int3
push
inc
sub
jns
andl
cmpsb
arpl
pop
ljmp
or
xchg
loope
mov
jae
xchg
dec
fs
mov
jbe
fwait
addr16
mov
pop
cmp
mov
sub
jo
mov
movsl
scas
inc
enter
aaa
xchg
and
and
cmp
les
ds
arpl
scas
ficomps
in
das
hlt
ret
inc
add
sbb
push
test
push
or
and
sub
jge
scas
xchg
in
enter
cmp
cmp
cmc
adc
aaa
gs
sub
popa
test
sub
fs
mov
gs
sub
add
imul
mov
repnz
jmp
xor
and
pop
mov
or
jae
movsb
mov
daa
sbb
sbb
cld
nop
ljmp
mov
pop
fidivl
pop
cmpsb
arpl
xor
mov
aas
sahf
ret
ret
dec
and
rep
fdivs
lahf
push
fxch
lods
cld
incb
imul
nop
cltd
and
lods
fs
add
mov
test
leave
inc
outsb
aaa
lods
xor
fstpl
mov
pop
mov
lds
jbe
loope
inc
nop
xchg
adc
mov
jbe
fs
stos
lret
add
jmp
in
push
das
inc
fnstenv
add
adc
testb
push
fwait
cmp
cli
incb
movsb
bound
mov
icebp
mov
inc
fmuls
pop
cmp
mov
enter
inc
fsubrs
dec
mov
jge
pop
dec
stos
stos
and
imul
imul
pop
jnp
iret
test
imul
aas
hlt
ja
loope
mov
mov
push
insl
lahf
ret
mov
hlt
push
fisubrs
cmp
push
mov
sbbb
lcall
add
adc
push
mov
nop
pushf
xchg
cld
and
popa
js
xchg
jge
insb
repnz
jbe
test
mov
mov
jns
enter
sub
outsl
xchg
insb
mov
test
mov
mov
mov
ds
jae
jnp
lods
push
in
add
lcall
push
cmc
xchg
in
ja
fucomip
xor
outsb
idivb
add
mov
lcall
push
inc
and
cmpl
movl
mov
movl
jmp
movl
movl
cmpl
ja
push
push
push
call
add
add
xor
mov
or
add
xor
push
not
pop
xor
div
mov
xor
xorl
or
mov
xorl
or
movzwl
or
mov
subl
div
xor
xor
cmpl
movl
mov
jmp
movl
cmpl
jl
push
push
call
sbbl
movl
or
xor
or
pushl
mov
or
mov
xorl
pushl
add
andl
pushl
orl
imul
pushl
mov
adc
jmp
and
sbb
sbb
and
rcll
sbb
and
std
test
add
mov
cmp
aad
xorl
cmpsl
push
lret
and
push
gs
mov
cmc
mov
jmp
sbb
decl
xor
dec
cmpsl
mov
xchg
jp
mov
jl
mov
inc
adc
sbb
xor
lods
pop
es
jmp
xor
mov
xlat
jns
add
adc
repnz
adc
mov
cmc
jp
mov
cmp
or
stos
push
outsl
neg
mov
add
sti
fdivrs
scas
imul
lods
mov
jle
lods
push
loop
into
mov
pop
push
mov
fcomps
jb
xchg
popaw
int
stos
push
inc
push
dec
inc
insb
cmp
push
int3
mov
dec
push
mov
add
and
loopne
mov
mov
inc
into
bound
dec
iret
test
lock
dec
jl
xchg
pop
xlat
cmpsl
sub
ret
cltd
xor
inc
dec
loop
into
aaa
aad
jno
inc
jnp
pop
out
jl
stos
outsb
outsl
dec
sub
test
pop
cmp
push
push
cmpsb
mov
data16
sub
gs
movb
sbb
in
fsubrs
mov
mov
jp
ljmp
cli
sarl
ljmp
fs
ret
add
jg
clc
les
mov
rep
sbb
popa
sbb
fnsave
push
imull
lret
jle
xchg
rorl
test
es
cmp
dec
fdivl
test
and
push
lods
push
orb
mov
rolb
mov
jg
jo
mov
and
fmull
pop
adc
jg
mov
push
pop
dec
add
shlb
popf
push
enter
pushf
mov
fxch
cmp
loope
in
movsb
mov
pop
mov
or
xor
aam
daa
sub
xor
xor
mov
push
cmpsb
push
fcmovnb
xor
lahf
ret
lods
fmuls
sahf
fbstp
subb
test
push
cmp
or
movsl
push
ljmp
xor
jle
pop
or
arpl
lea
lcall
add
push
inc
in
fnstsw
and
in
push
push
or
cmc
dec
mov
std
testb
jnp
paddq
jo
xchg
cli
pop
xchg
lret
mov
mov
fildll
jo
bound
and
imul
icebp
sub
fcomip
stos
out
lds
shll
fmul
mov
or
sbb
xchg
mov
xchg
fidivl
push
mov
mov
inc
and
mov
dec
cmp
jnp
sbb
imul
fs
inc
push
por
sub
mov
pop
imul
push
das
inc
out
enter
pop
icebp
xchg
jno
xorl
pop
push
cmc
xchg
subl
insl
mov
repnz
mov
jecxz
pop
xchg
pop
ret
rcl
imul
xchg
inc
sahf
aaa
popa
popf
mov
in
ja
cmpsl
sbb
out
and
dec
adc
fildl
insb
imul
sbb
ds
mov
mul
cmp
inc
js
xor
and
in
mov
int3
jnp
adc
in
sbb
insb
jb
xor
stc
sub
out
ret
mov
orl
xor
adc
mov
div
adcl
and
xorl
or
xorl
pushl
xorl
call
orl
dec
jne
add
movl
cmpl
mov
mov
mov
mov
jmp
mov
cmpl
jb
push
call
movzwl
sbb
adcl
xor
mov
xor
mov
addl
sbbl
mov
mov
andl
movl
mov
xorl
call
cmpl
mov
mov
not
jmp
movl
mov
cmpl
jle
call
adc
orl
xor
add
mov
sub
and
sub
sbb
lea
mov
lea
add
mov
cmpl
mov
movl
mov
jmp
movzwl
mov
cmpl
je
push
call
or
sbb
sbb
xorl
sub
orl
sbb
mov
mov
sbb
jmp
js
push
xor
or
ret
lea
lret
push
sbb
adc
jae
dec
add
jno
ljmp
in
ja
sbb
jo
adc
arpl
push
addr16
dec
xor
or
lea
push
and
insb
push
dec
cmp
sbb
jno
test
cmc
cmpsl
fstpt
imull
cmp
fsts
orps
dec
dec
movsl
adc
divl
fstp
lock
mov
mov
add
lret
and
push
fdiv
into
icebp
xlat
ret
or
sbb
cmp
cwtl
stos
inc
xchg
add
jp
test
mov
subb
mov
shll
jnp
sub
jb
inc
aad
inc
out
cmp
mov
js
mov
sub
ds
or
inc
and
sub
lcall
lret
adcl
lock
es
add
inc
sbb
sbbl
inc
mov
std
jl
jo
mov
je
je
cmp
js
aaa
and
loopne
dec
hlt
iret
bound
add
cmp
lcall
out
fidivl
mov
jne
mov
mov
mov
aam
push
cli
pop
je
sub
cwtl
adc
or
mov
dec
sbb
leave
je
sbb
adc
notb
cltd
fiaddl
adc
sub
add
inc
mov
dec
das
sub
movsb
add
adc
sub
es
ds
sbb
dec
mov
enter
jg
in
out
imul
jno
cmpsl
cs
lods
xchg
sbb
cmp
xlat
xchg
lcall
incb
std
inc
movsb
loope
cmpsb
std
iret
mov
test
mov
sarb
cmp
wbinvd
mov
icebp
lods
mov
dec
inc
pop
std
lea
cmp
sbb
sbb
xor
add
dec
xchg
sbb
int
int
sub
sub
rorl
jmp
push
pop
loop
daa
xchg
and
sub
or
in
fdivr
rclb
das
lds
cmp
or
insl
arpl
out
pusha
lret
aas
and
xor
rcl
stos
mov
and
or
cmpsl
dec
sarl
inc
scas
fimuls
lret
push
cs
xor
push
or
push
cmc
cmpsl
inc
pop
scas
stc
mov
fcoms
addr16
loopne
insl
pop
pop
cmp
mov
dec
mov
lret
push
orl
mov
xor
push
cmc
std
sub
subl
hlt
cli
and
insl
cmp
dec
out
test
or
int
test
ret
in
adc
test
sarl
jmp
shrb
or
ret
iret
fisubrs
adc
imul
sub
in
sub
repnz
mov
mov
push
jbe
mov
movsb
inc
aad
sbb
inc
shrl
out
adc
aas
mov
rcll
cld
cmp
adc
outsb
bound
or
inc
cmp
jno
stos
xchg
and
inc
and
push
insb
add
mov
lahf
sub
insl
cmp
gs
mov
ret
pop
clc
out
dec
cmp
outsb
mov
and
mov
xor
cmpl
movl
movl
movl
jmp
movl
movl
cmpl
jae
push
push
pushl
call
notl
subl
adc
sub
mov
sbb
xor
or
mov
and
xor
and
shl
shr
sbb
or
cmpl
notl
notl
movl
mov
jmp
mov
mov
cmpl
jae
push
push
pushl
push
call
inc
or
xor
sbb
xorl
sub
mov
mov
mov
addl
mov
and
mov
cmpl
movl
movl
mov
jmp
mov
mov
cmpl
jl
pushl
pushl
push
push
call
add
notl
or
movzbl
or
sub
add
mov
adc
jmp
lock
fidivs
push
push
call
aas
or
ret
push
sbb
lret
sub
inc
mov
fisubs
and
xor
jae
aam
pop
aad
or
repz
aad
jne
gs
inc
mov
mov
stos
negb
cltd
icebp
pop
sbb
mov
das
mov
mov
dec
mov
loope
dec
xor
inc
or
xchg
dec
jb
pop
imul
stc
mov
push
loop
sti
xchg
mov
mov
pop
repz
jg
ret
popa
mov
pop
and
and
sbbb
dec
lods
add
pushl
or
loopne
jmp
stc
sub
out
out
mov
rcr
mov
add
int
lahf
xchg
mov
pop
jg
mov
pushl
inc
movsl
das
xor
scas
outsl
jge
data16
cmp
into
xchg
pop
push
in
dec
cmp
mov
or
clc
icebp
cli
imul
xchg
call
cmp
push
lret
data16
gs
sub
int
jae
mov
inc
or
jl
bound
inc
cmp
wbinvd
std
in
ret
out
and
das
and
lea
scas
jge
idivl
dec
or
add
and
cli
aam
jno
les
aas
stc
out
cmp
cwtl
in
push
or
es
add
leave
push
mov
scas
ret
test
mov
out
aas
sahf
adc
xor
or
inc
add
cmp
loop
adc
rcrb
or
fistpl
adc
cmpsl
mov
shl
dec
push
cmc
cmp
inc
add
loope
ret
cmp
jo
or
aas
pop
mov
or
mov
pop
dec
push
jne
insl
inc
mov
pop
test
aam
dec
cwtl
adc
cs
push
lods
inc
js
addl
jl
mov
std
push
gs
cmp
sub
push
adc
push
mov
test
fldcw
adc
jle
mov
lock
adc
ljmp
test
adc
or
pop
sub
jb
jns
ja
adc
inc
je
mov
leave
jno
mov
aas
sub
and
cmp
cmp
daa
loopne
mov
shl
cltd
aam
fwait
dec
cmp
aas
divb
fsubrs
sbb
movntq
out
psubusb
cmpsl
xlat
sub
mov
pop
cmpsl
cld
das
rorb
gs
xchg
pop
mov
mov
data16
push
scas
mov
neg
sbb
roll
stos
imul
push
shll
fcomip
sub
imul
xchg
lret
bound
pop
daa
and
add
out
xchg
lret
mov
adc
dec
mov
pop
and
loopne
mov
int
adc
jge
rcll
mov
adc
bound
das
dec
cmp
add
sub
mov
out
sub
fistpll
pop
rorl
loopne
cmp
inc
into
jle
inc
inc
sub
xor
pop
ficoml
in
add
cmpsb
mov
push
push
fmuls
subb
sub
inc
mov
unpcklps
dec
fdivs
pop
jmp
jae
add
push
lahf
dec
mov
mov
mov
sbb
mov
adc
insl
mov
add
loop
mov
dec
add
cmp
mov
add
add
lods
enter
pop
addb
mov
not
not
jmp
mov
movl
cmpl
jae
push
call
movl
mov
mov
sbb
movl
or
and
cmpl
movl
mov
mov
movl
jmp
movl
movl
cmpl
jge
push
push
push
call
adcl
xor
xor
movl
adc
decl
shr
mov
xorl
mov
xor
xorl
xor
or
cmpl
movl
movl
movl
jmp
movl
mov
cmpl
jne
push
push
call
adc
andl
add
andl
add
mov
andl
push
pushl
lea
subl
push
subl
shl
andl
call
lea
orl
push
mov
mov
lea
push
negl
mov
lea
addl
mov
mov
adcl
mov
sbbl
push
negl
call
push
andl
push
sbbl
pushl
sbbl
call
sub
mov
movzbl
sbb
mov
adcl
mov
mov
shr
add
shl
and
or
adc
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
jbe
pushl
call
movzbl
adc
movzbl
add
and
sub
orl
xor
cmpl
mov
mov
jmp
mov
cmpl
jb
push
push
push
pushl
pushl
call
subl
addl
addl
mov
xor
add
sub
sub
sbb
add
and
mov
lea
neg
mov
add
lea
or
mov
cmpl
not
movl
mov
jmp
movl
movl
cmpl
jge
push
push
push
pushl
call
adc
add
and
mov
mov
sub
or
xor
cmpl
movl
movzwl
notl
jmp
mov
cmpl
jne
call
sbb
notl
and
mov
sbb
orl
adc
and
mov
sub
mov
xor
xor
sub
or
lea
cmpl
mov
not
not
jmp
movl
movl
cmpl
jne
push
pushl
pushl
push
pushl
call
sbb
add
sbbl
subl
movzbl
sub
mov
cmpl
movl
mov
movl
movl
jmp
mov
cmpl
jge
push
push
call
sub
mov
sbb
adc
and
adcl
sbb
xor
xor
mov
xor
movl
add
movl
sub
movl
movl
mov
jmp
xchg
inc
sub
pushf
aas
mov
mov
push
mov
dec
mov
jne
stos
daa
fs
dec
add
push
push
lcall
push
xchg
pop
mov
outsb
lcall
and
xor
ret
dec
xor
call
jns
idivb
in
sbb
push
mov
mov
mov
lea
jmp
mov
test
push
dec
sti
in
out
cwtl
mov
addr16
add
popf
sbb
mov
push
arpl
test
add
iret
call
push
cmp
add
fcmovne
push
bound
sub
xchg
jmp
or
inc
icebp
pushf
jmp
push
push
aas
push
or
out
or
popf
dec
xor
outsb
test
cmc
lods
dec
jl
insl
aad
mov
mov
int
movsl
imul
iret
xchg
repnz
in
mov
and
dec
out
jne
xchg
jnp
xchg
mov
packsswb
movsl
push
sahf
sar
cmc
sar
fnstenv
mov
cltd
xchg
outsl
push
cs
or
adcb
mov
sub
mov
loop
push
cmpsl
ret
mov
shlb
adc
mov
adc
mov
dec
push
push
and
lret
xchg
fldenv
xor
std
mov
sbb
fistpll
mov
lahf
mov
outsl
lods
add
xchg
and
cwtl
cmc
adc
xchg
sub
addr16
scas
arpl
shl
ret
dec
push
bound
xor
shl
test
lds
insl
xlat
nop
or
sbb
cmp
stos
imul
or
fisttps
nop
push
add
cltd
test
xchg
sbb
pop
pushf
lret
stos
add
jns
mov
cmp
int
fs
inc
adc
fwait
test
mov
pop
es
aad
cltd
in
jae
je
mov
mov
testl
fwait
inc
stos
mov
inc
pop
lods
push
adc
jp
hlt
cmp
pop
push
or
or
leave
mov
mov
dec
xor
shlb
jae
fistpl
push
divl
mov
nop
in
mov
mov
stos
std
jnp
data16
dec
data16
xor
sub
out
xchg
out
out
sahf
xchg
ret
stc
sti
mov
in
xor
jmp
xor
sbb
stos
dec
ja
adc
and
mov
adc
int3
push
sub
test
sub
fldl
fadd
and
dec
in
jl
pop
mov
fidivrs
sub
outsl
jl
push
nop
fisttps
or
fidivl
daa
cmc
sbb
xor
orl
inc
imull
stos
inc
pusha
mov
dec
mov
inc
fimuls
pop
dec
ja
jb
ret
cmp
add
sbb
inc
shll
adc
in
sahf
fildl
pop
adc
jle
test
push
imul
adc
sub
imul
fmuls
fisubs
lahf
or
ret
mov
mov
mov
mov
insb
mov
filds
cmpsb
push
mov
push
mov
sbb
cmp
pusha
pop
lahf
scas
popa
in
addl
pop
adc
ljmp
xor
xor
stc
pop
sub
in
adc
pop
mov
lock
loopne
ljmp
dec
imul
and
mov
add
adc
xor
xor
jmp
pop
es
sub
pusha
in
mov
xchg
sbb
outsl
clc
jge
in
mov
adc
mov
push
cmp
xlat
jmp
jno
pop
test
call
popf
daa
stos
sbb
arpl
mov
adc
add
cmp
mov
adc
pop
bnd
in
filds
mov
jae
ljmp
cwtl
out
cltd
je
ja
or
loop
lds
mov
pop
xor
xor
lods
pushf
fwait
jp
jne
cmp
fmulp
cmp
cmpxchg
jle
iret
ret
cmp
shrb
mov
lret
into
jl
pop
push
lahf
push
fldenv
adc
in
sti
shl
into
sub
sbb
sbb
cmpsl
mull
cmp
dec
push
sti
sub
scas
aaa
sti
repnz
repz
lods
lahf
or
insb
iret
xchg
arpl
jle
inc
sbb
test
cli
mov
pop
cmpsl
adc
or
in
rcl
andb
popf
fidivrs
ss
adc
in
iret
jb
push
mov
push
fcom
and
jne
cmp
jb
sysret
aaa
cmpsb
sub
lods
adc
pushl
insb
dec
pop
sub
ja
out
gs
and
pop
xchg
cmp
out
cmpsl
arpl
fdivs
jno
bound
mov
stos
push
sub
dec
repz
push
xor
push
es
adc
sub
mov
outsb
jp
nop
cmp
sub
mov
out
lret
adc
and
lret
inc
jmp
jo
leave
cld
stc
pop
sbb
mov
fs
lcall
xchg
and
lret
pushf
outsb
out
out
int
mov
lock
or
add
sub
sahf
dec
test
sub
jl
jl
mov
inc
jne
cmp
xchg
sbb
addr16
jb
pushw
sub
inc
aaa
lea
loope
popa
jg
sbb
cmpsb
test
icebp
das
out
std
lahf
call
bound
fdivs
ss
mov
add
push
fisubs
mov
cmc
repz
xchg
setl
or
dec
leave
scas
iret
enter
cmpsb
icebp
sar
add
cmp
push
sbb
jb
dec
bound
jb
add
test
mov
mov
loop
cltd
push
repz
or
sbb
jae
xchg
mov
mov
mov
cld
ss
outsb
adc
xor
mov
fdivrp
jo
xorl
push
or
loopne
mov
jnp
pop
mov
ret
repz
inc
or
jge
xchg
dec
push
pop
pushf
in
sub
jmp
add
inc
leave
in
sti
test
and
jne
mov
ds
stos
adc
std
movsb
nop
aad
jmp
dec
inc
fisubrl
sub
jmp
xchg
mov
mov
in
xlat
test
jb
inc
jno
lock
mov
call
outsb
ret
fsubrs
xchg
and
cli
les
sti
push
xchg
mov
je
jl
shll
jns
inc
ret
inc
aas
js
mov
jnp
mov
push
in
cwtl
outsb
cld
mov
aas
clc
mov
aad
inc
sub
push
mov
notb
decl
mov
xchg
lahf
add
mov
or
mov
addl
jne
cmp
data16
sub
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
jmp
lcall
es
lret
mov
lods
push
sbb
xlat
fsubp
fisubs
push
aad
jo
inc
xchg
cwtl
sbb
dec
pop
add
mov
inc
loop
mov
jle
incl
hlt
ficoml
lds
jbe
add
inc
adc
mov
pop
xchg
cmp
jge
dec
push
imul
pop
pop
mov
mov
enter
test
bound
das
sbb
iret
fldcw
pop
movsb
pop
andb
cwtl
test
out
int3
jmp
mov
jle
dec
mov
sahf
rcrb
leave
movsb
aas
mov
sbb
cltd
orb
clc
pop
mov
fiaddl
adc
sbb
mov
pushf
loop
mov
sti
add
insl
jne
xor
mov
in
out
add
addr16
xchg
cmc
push
or
lods
mov
pop
dec
out
pop
adc
lds
xchg
arpl
cmc
cmc
jnp
stos
pop
mov
and
iret
xor
adc
xor
pushf
fwait
inc
xchg
test
sub
push
ret
imul
jmp
sarl
pop
sbb
outsl
pop
aaa
and
mov
and
or
sbb
mov
test
xor
test
xlat
nop
fcoml
push
fldenv
or
ds
in
movsl
imul
das
aad
pop
sub
fldenv
ljmp
aam
sub
in
and
loop
inc
int3
pop
sbb
lods
xchg
xlat
test
movsl
imul
add
add
mov
cmp
lcall
leave
pop
call
xor
das
xchg
test
mov
gs
jecxz
cmp
sbb
mov
lods
cmpb
int3
fidivrl
xorl
mov
jae
imul
pop
sahf
jae
mov
sub
add
xor
and
gs
mov
sbb
jg
and
and
push
adc
sti
addr16
ss
aas
pushf
pop
ret
ret
and
lcall
popl
jmp
lret
adc
mov
cwtl
sbb
xor
daa
iret
cltd
mov
push
int3
mov
cmp
pushf
das
into
sub
mov
stc
push
add
popf
dec
xchg
lret
mov
xchg
add
add
stc
mov
dec
out
push
dec
lods
das
cli
or
mov
popf
dec
jae
stc
add
and
push
mov
cmp
mov
dec
sbb
jp
movsb
pop
xor
mov
jae
cmpsb
pop
pop
scas
pop
insl
adc
ss
or
pop
cmc
ret
jecxz
lret
cmp
cmp
xchg
mov
loope
shlb
inc
xchg
push
scas
icebp
jnp
fsubrl
andl
pop
push
adc
mov
sbb
stos
bound
push
das
andb
cmpsl
jl
cmp
jle
ss
mov
cmp
pop
push
mov
sti
jns
adc
mov
shrl
loope
pushf
lock
mov
mov
inc
mov
mov
pop
xor
repnz
or
hlt
shrd
movsb
lds
insb
mov
popf
adc
sbb
jo
std
dec
push
jle
dec
lods
fwait
cmp
push
push
sub
ljmp
cmpsl
addr16
lcall
call
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
jmp
cmp
arpl
add
sahf
and
mov
mov
xor
repnz
stos
mov
inc
and
pop
jecxz
inc
cmpsl
shll
push
rcll
xchg
ss
lods
scas
ds
mov
push
test
or
xchg
pushf
pop
pop
testb
clc
jne
lock
cli
cmp
jp
or
push
subb
jb
mov
sti
push
push
push
push
mov
jo
mov
push
ss
stos
rcrl
jmp
add
int
mov
mov
xor
push
cld
in
mov
mov
or
push
fidivl
lret
dec
das
pop
xor
cld
mov
fmuls
dec
outsb
nop
and
jg
popa
xor
xor
out
push
cmp
adc
iret
push
jae
imul
add
mov
or
mov
sub
movsl
rclb
mov
mov
jl,pn
lret
mov
popa
loop
sub
jmp
sbb
mov
add
int
gs
inc
xchg
negb
test
mov
mov
loopne
jb
add
sbb
test
cld
add
push
addr16
lahf
sub
int
std
fs
outsb
mov
scas
mov
jle
int3
idiv
jb
jp
xor
jno
xor
xor
into
pop
mov
ja
aaa
push
and
xchg
fwait
lods
xchg
xor
setl
dec
shr
fsub
sub
pop
cld
loope
sub
scas
push
ret
xlat
cmp
or
pop
mov
sub
adc
dec
imul
addr16
cli
fsub
ret
movsb
xor
cmp
sub
mov
sahf
pop
mov
xor
dec
jb
or
les
std
and
das
sbb
subl
cmp
cmc
adc
into
fsubs
cmp
repz
stc
cmpsb
leave
push
and
jns
xor
sub
lret
das
sub
push
adc
sahf
leave
add
stos
xchg
add
sub
sub
push
push
and
ret
xor
adc
dec
push
push
in
inc
push
cmp
outsb
cmc
push
inc
xchg
xchg
fwait
mov
push
sub
jl
or
mov
data16
cmp
or
sbb
dec
shrl
pop
enter
bound
insl
dec
and
sbb
stc
outsb
imul
dec
or
enter
loopne
xchg
dec
cmp
mov
movsl
leave
mov
shlb
loope
in
lret
and
jo
cmp
iret
scas
mov
ja
cld
xchg
cmp
xor
rclb
pushf
test
loopne
mov
xlat
filds
mov
lcall
mov
test
js
add
mov
movsb
sub
outsb
pushf
mov
jge
movsl
and
sub
and
aam
sbb
js
cmp
or
pop
sbb
pop
xor
sub
imul
cld
repz
inc
test
pop
cmpsl
jl
jnp
pusha
pushf
or
push
sub
jbe
dec
ret
and
sbb
mov
jae
mov
push
and
or
and
pop
test
int3
scas
pop
mov
repz
shrb
xchg
stc
and
ds
insb
movsl
add
into
mov
test
pop
and
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
jmp
xchg
loope
gs
fs
aam
imul
lahf
push
sbb
sub
in
fdivl
add
jecxz
aad
in
jo
stos
fs
adc
aaa
add
xor
mov
mov
sub
fcompl
das
out
jns
and
mov
inc
add
in
pop
pop
in
push
out
lods
mov
push
lea
nop
or
cmpb
outsb
dec
ss
xor
loop
test
push
and
xchg
dec
stos
sub
das
mov
pop
pushf
das
mov
pop
sub
cmpsl
aad
arpl
xor
scas
pop
fcmovu
arpl
ljmp
push
fsubr
adc
sub
jo
mov
mov
and
xchg
pop
ret
jmp
push
lahf
cs
mov
sbb
scas
test
push
dec
or
dec
pop
test
xchg
adc
push
dec
jge
aas
cmpsl
shlb
pop
pop
pop
adc
sub
ljmp
ds
sbb
in
dec
icebp
stc
movsl
pop
outsl
sbb
mov
inc
mov
pusha
jg
sub
jp
add
mov
jle
pushf
push
fcoms
test
dec
mov
jmp
test
ret
xlat
dec
xchg
imul
mov
mov
daa
inc
mov
or
loop
out
aaa
shll
push
sbb
add
in
xchg
sbb
movsl
add
add
addr16
and
es
in
cli
iret
push
out
adc
add
jo
dec
sbb
xor
outsb
inc
shll
addb
sbb
or
cwtl
in
lock
into
negb
mov
jmp
js
fsub
jne
or
cwtl
mov
shl
in
mov
xchg
test
jmp
icebp
pop
mov
adc
adc
inc
lahf
in
add
sub
ljmp
push
addr16
loope
xor
call
jnp
stos
test
sbb
jmp
out
jle
mov
mov
aas
jno
sbb
sti
aam
and
sub
push
push
inc
inc
dec
add
int3
cld
fnstenv
or
es
pop
jmp
les
fmuls
lds
xor
mov
xchg
jo
jb
subps
repnz
hlt
shrb
mov
outsb
pop
and
xchg
dec
sbb
call
pop
movhps
dec
loope
xor
fdivrl
in
nop
push
fists
inc
scas
stc
rclb
cmp
pusha
and
test
dec
mov
adc
or
and
and
cmpsl
fs
add
add
jl
shll
cld
lea
decl
mov
out
jle
mov
xlat
out
add
out
ja
mov
xor
arpl
stos
int
test
pop
daa
jmp
in
mov
js
ss
shll
pushf
int
dec
popf
mov
ljmp
mov
cmc
xchg
xchg
scas
add
mov
sbb
mov
push
add
mov
sbb
and
mov
loopne
push
rcr
xor
dec
ret
repz
sbb
push
add
mov
lahf
jge
mov
pop
jle
jg
mov
adc
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
jmp
popa
cmp
cmpsb
stos
and
insl
jnp
jl
bound
pop
xchg
push
sbb
aaa
cs
sti
sub
pop
hlt
jg
add
in
test
lea
dec
jbe
movb
in
fidivrs
aad
mov
pop
cmpsl
mov
notb
jle
mov
enter
gs
hlt
pop
jno
push
xlat
lods
dec
pusha
in
outsl
xchg
sti
gs
inc
repz
cmp
jge
popw
or
mov
push
stos
dec
push
popa
lds
xchg
mov
mov
pushf
movsl
cli
aad
or
hlt
lock
loope
xchg
and
pop
lahf
jae
xlat
cmp
xchg
lret
mov
xchg
je
cmp
icebp
inc
xchg
inc
mov
or
jno
in
hlt
scas
fstpl
dec
fstl
or
inc
das
lods
decl
popf
jns
pop
inc
sbb
test
es
push
sub
pushf
lock
adc
iret
jne
dec
orb
stos
pusha
add
jae
dec
loopne
fisttpl
mov
dec
cwtl
lcall
xchg
push
sub
xor
test
lcall
aas
and
repz
push
push
aaa
rcr
mov
in
dec
xchg
jno
ret
sbb
mov
popa
jo
jo
jnp
hlt
jle
mov
inc
xor
pushf
jg
mov
fs
pop
push
mov
cmc
inc
lds
and
mov
jecxz
fldl
fisttps
stos
jp
mov
jo
es
loope
out
or
dec
mov
test
test
xor
cmp
in
cmp
ja
test
mov
imul
sahf
call
or
fldcw
in
mov
xor
mov
test
mov
xor
xchg
jae
xchg
inc
dec
data16
push
pop
fwait
movb
sub
test
pop
jb
push
shufps
and
fmuls
xor
ret
lret
dec
sub
ss
dec
repnz
pushf
xor
mov
jmp
xor
int3
mov
xlat
fimull
push
bound
leave
mov
cmp
push
loope
aas
sub
add
xchg
bound
test
daa
mov
mov
pusha
sub
inc
scas
sbbl
and
or
popl
or
jnp
push
sbb
in
mov
push
stos
loop
mov
aas
in
push
sti
dec
add
sub
dec
cmc
dec
in
and
aad
cmpsl
cs
pop
mov
pushf
mov
push
rorl
lods
out
fiaddl
push
cmp
loop
or
sbb
cmpsb
pop
scas
add
mov
cmp
loopne
cmp
xor
jb
mov
mov
pop
test
push
adc
in
xchg
ss
cmp
fadd
adc
dec
and
mov
iret
lret
cmp
xchg
inc
dec
shll
pop
js
in
sbb
add
into
sti
inc
pop
dec
fs
stc
es
outsb
jmp
hlt
mov
jbe
inc
add
jmp
or
mov
dec
jmp
push
mov
stos
push
cmp
and
xor
ret
cs
test
pop
dec
test
mov
mov
pop
push
adc
xchg
into
gs
testb
jne
mov
push
ret
or
out
inc
hlt
lods
sarb
arpl
sbb
in
pusha
adc
iret
xor
shrd
shr
mov
mov
mov
jmp
push
or
sbb
push
push
in
mov
mov
pop
clc
aad
js
aam
ret
into
jl
mov
paddb
shlb
lcall
sub
ss
aam
imul
out
repz
mov
pop
push
pop
add
push
in
cmp
in
fistps
push
rsm
mov
or
jne
mov
xor
or
movsl
cmpl
decb
ficoml
pop
shll
das
insb
mov
dec
sub
es
pop
xor
repz
lea
repnz
jb
pop
aam
inc
lock
lret
pop
imul
mov
push
push
sbb
jge
xor
sbb
test
xchg
icebp
pusha
int3
fmull
test
mov
push
xlat
push
or
xor
cmp
cmp
push
xchg
xchg
and
out
mov
push
dec
pop
cmpsb
sub
and
in
rcrl
aaa
shrb
out
out
add
data16
rclb
add
sbb
sbb
sti
outsl
pop
es
nop
xchg
jo
push
sbb
mov
in
movsl
fdivs
lret
mov
xchg
movsl
pusha
or
add
xor
out
mov
sbb
fnstenv
cltd
push
lahf
test
ss
popa
ds
xchg
dec
gs
pop
jnp
jo
cld
adc
cmpsl
out
cmp
inc
cmp
mov
jmp
add
adc
mov
cmp
movsl
stc
mov
sbb
pop
mov
or
sbb
ljmp
jge
cmp
loope
add
or
adc
hlt
lock
dec
cmp
adc
dec
movsl
inc
add
adc
lds
pop
lods
add
rolb
scas
repnz
xor
mov
jge
xor
idiv
add
add
dec
ja
sub
fsubs
or
ret
aam
inc
stc
ret
mov
clc
adcl
fwait
jnp
into
mov
adcl
fadds
sub
pop
addr16
rcrl
xrelease
divl
je
imul
aam
fwait
sbb
push
and
mov
pop
pop
pop
xor
icebp
pop
mov
roll
idiv
adc
or
jmp
hlt
sub
fs
mov
mov
mov
ss
test
sbb
or
mov
cmp
mov
loopne
adc
scas
xchg
xchg
call
xchg
fcmovnb
sub
mov
xor
push
mov
js
mov
out
addr16
int3
test
mov
push
leave
int3
sbb
jle
decl
xchg
xlat
out
fdivrl
icebp
xor
jecxz
lahf
daa
sti
adc
clc
push
in
das
dec
outsb
mov
and
out
or
dec
xlat
mov
cmpsl
adc
popf
aad
add
inc
daa
rclb
movsb
cld
in
lret
adc
pusha
stc
lods
push
jl
jmp
enter
mov
jnp
jno
jl
stc
jg
or
shrb
jecxz
xor
pop
inc
push
inc
js
push
push
loop
mov
ljmp
int3
lds
mov
jo
adc
loop
mov
push
icebp
push
pusha
xor
lahf
lret
pop
inc
mov
ret
dec
push
pusha
cmc
scas
popa
pusha
insl
cmpsb
jnp
push
mov
jg
addl
dec
sbb
push
movsl
and
xchg
stos
out
inc
jae
loopne
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
jmp
push
and
and
arpl
pop
mov
sbb
xor
mov
fstl
or
or
mov
xchg
shlb
ds
out
ret
inc
mov
lods
push
cmp
js
repnz
in
jg
xchg
outsb
movsl
push
dec
add
adc
adc
pop
and
in
test
repnz
mov
subb
psadbw
mov
push
push
insl
jne
sbbl
jae
repnz
mov
mov
fcmovnb
lret
push
mov
jp
inc
xchg
pop
jnp
shl
addl
mov
mul
cmpl
insl
out
test
in
and
xchg
inc
add
lret
mov
push
add
daa
push
jno
test
pop
or
inc
dec
outsb
mov
dec
add
push
pop
dec
dec
jl
ljmp
xchg
enter
mov
add
int3
cmp
xchg
aam
push
test
sub
in
inc
push
in
cli
cltd
pop
das
or
push
insb
dec
inc
fists
aas
lcall
inc
push
jno
and
jb
pop
push
in
sti
out
inc
sbb
mov
aam
cmp
inc
fcomip
repz
leave
sbb
mov
pop
and
in
or
xor
std
xchg
sahf
jge
mov
adc
fld
insl
testb
xchg
inc
inc
test
out
data16
insb
fidivl
mov
xor
dec
push
sahf
call
and
out
cmpsb
add
ljmp
jb
aam
sbb
cmp
cmp
sub
push
mov
loop
scas
push
mov
and
fldpi
clc
std
addr16
xor
add
icebp
test
mov
xlat
movsb
incb
lcall
scas
or
cmp
add
not
and
pop
jle
or
push
adc
fs
push
mov
jecxz
adc
fistps
sub
shr
inc
pop
adc
pusha
cmp
bound
jge
mov
shll
cmp
and
pusha
call
mov
adc
mov
loope
add
add
mov
inc
test
sub
pop
xchg
rcl
push
nop
ds
xor
ret
mov
testl
add
cs
clc
and
push
nop
jmp
mov
mov
test
adc
xor
xchg
pop
stos
or
pop
movsb
adc
xchg
mov
mov
out
xlat
xchg
xchg
or
test
test
xchg
lods
mov
leave
fdivp
in
sti
int3
xor
fcoms
je
or
movsl
cmp
mull
pop
pop
adc
or
mov
rcll
int
mov
push
push
insl
dec
pop
shll
xchg
adc
pop
popfw
das
out
stos
cwtl
lds
xchg
fcmovne
lret
mov
mov
cmp
frstor
rdtsc
in
fldt
push
jle
sub
in
cmp
stos
mov
xchg
jne
and
pop
and
xchg
xor
outsb
or
xor
and
insl
push
arpl
mov
mov
xchg
insb
shlb
mov
shll
scas
cltd
test
xchg
pop
pusha
loope
xchg
xor
xchg
orl
or
jle
add
and
mov
or
mov
add
or
mov
jmp
inc
pop
push
fwait
xor
pop
stos
xchg
lahf
push
stos
add
sbb
enter
inc
add
vmovaps
sub
lods
sahf
les
test
xchg
out
and
mov
push
scas
mov
stc
pusha
xor
sub
mov
xor
leave
test
popf
call
dec
push
xor
xchg
sbb
movsb
ljmp
ficoms
xchg
push
push
add
loop
push
nop
es
pop
aaa
lods
sub
adc
inc
and
xchg
mov
cmp
cli
or
xchg
aad
lea
xor
jmp
jbe
pop
mov
mov
andb
inc
and
mov
inc
mov
dec
xchg
jmp
xchg
cltd
cs
lret
into
lahf
mov
sti
dec
xchg
cwtl
dec
push
sbb
xor
push
mov
jmp
ss
mov
jg
mov
mov
cmp
xor
sub
or
aaa
dec
lock
mov
sub
enter
mov
mov
shlb
add
imul
lods
daa
mov
cmp
mov
aas
inc
mov
mov
popa
adc
mov
ljmp
xlat
push
xor
pop
ds
cmp
flds
adc
sbb
xchg
dec
daa
int3
jbe
loop
pop
arpl
arpl
loope
ficoml
inc
daa
jp
lock
xlat
repz
push
xchg
in
push
sub
jl
aas
and
out
xchg
test
imul
cmp
fnsave
int3
ficomps
jo
pop
xchg
adc
stc
xor
or
sub
loopne
xchg
dec
fldenv
ljmp
orl
push
sbb
inc
sub
push
pop
fstpl
movsl
push
lods
adc
push
cmp
ret
bound
mov
rclb
in
mov
ficoms
ja
add
sahf
imul
lret
dec
jecxz
jno
jo
jae
decl
sub
push
out
adc
fsubs
cmp
repnz
sbb
movsb
test
shll
push
jo
dec
ljmp
sbb
ret
std
sub
faddp
inc
int
pop
orl
push
push
dec
jb
ds
or
clc
je
imul
push
addr16
add
adc
jno
cmp
cmpsb
das
add
out
sbb
xchg
xor
orl
movsb
pop
loope
xchg
lock
push
xchg
loope
jno
sar
ss
cmpsl
or
cmp
or
push
pop
cld
mov
and
pop
insl
enter
or
and
loope
inc
xchg
out
or
pop
cmp
stos
mov
cli
sub
mov
inc
into
xchg
shlb
test
push
ret
mov
jo
or
push
inc
pop
lods
mov
mov
inc
cld
sub
mov
lcall
lcall
add
cmp
mov
mov
mov
scas
fildll
ficoml
xor
ret
and
jne
idivb
lds
fisttpll
lret
fwait
sbb
pop
in
inc
loopne
cmp
sbb
jmp
cwtl
pushf
shlb
ljmp
jnp
enter
or
ret
mov
jmp
rcr
pop
popa
lock
daa
cmpsl
push
lods
lcall
xchg
test
out
das
lea
decl
aam
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
jmp
in
sarb
dec
sbb
icebp
scas
mov
test
jns
sbb
movsb
test
ret
mov
imul
ja
mov
outsl
adc
push
xor
sub
push
jmp
cli
mov
rcll
mov
int3
repz
or
test
and
fsubrs
mov
loopne
aam
je
leave
or
ret
and
andb
dec
fs
das
and
cld
lret
push
jg
loope
xchg
movsb
fsubrl
xchg
lret
jl
icebp
sarb
out
ret
jbe
mov
inc
xchg
xchg
dec
pop
inc
hlt
xchg
nop
addr16
es
mov
pop
jl
or
cltd
rcl
jno
sti
mov
movsb
sti
pop
push
xchg
out
dec
gs
lea
dec
fiaddl
fdiv
sub
sub
and
lahf
and
pop
jg
loope
pop
out
and
mov
and
fwait
sar
add
jns
mov
cmpsb
ljmp
mov
jle
cmp
mov
add
in
sub
jle
outsb
fisubrs
dec
ror
mov
cli
ret
inc
adc
cmc
leave
inc
fimull
bsf
rclb
mov
ljmp
ss
loope
lea
addr16
xlat
mov
cmp
inc
adc
repz
sub
lds
and
dec
std
scas
sbb
xchg
mov
rcrb
pop
fs
or
add
dec
divb
fwait
mov
inc
dec
sbb
xchg
test
inc
push
pushf
cmpsl
dec
cmpsb
xchg
movb
xchg
jo
enter
add
enter
xchg
or
xor
push
jecxz
cmpb
pop
rcrl
aas
add
insb
push
pop
movaps
iretw
jle
push
cmpsb
xchg
adc
sbb
mov
push
push
sahf
cli
out
sbb
pop
mov
push
scas
inc
aaa
dec
mov
inc
mov
out
xchg
add
mov
ja
daa
sbb
in
into
push
lahf
cli
ja
cmp
ds
pushf
jle
push
dec
out
adc
sti
mov
jecxz
leave
jae
inc
lea
fisttps
and
cli
out
jg
push
pop
jno
lock
add
add
adc
dec
es
data16
mov
push
pop
divl
sbb
mov
shrb
mov
jnp
cmp
sti
and
mov
pop
fucomip
imull
jo
stc
cmp
mov
jg
cwtl
sahf
ja
dec
jns
or
dec
pop
mov
sbb
inc
jb
and
daa
mov
mov
enter
test
pop
lret
jae
stc
pushl
stos
insb
xchg
ds
ret
pushl
lods
cmp
imul
jne
mov
test
mov
rclb
or
repz
test
mov
mov
inc
cmp
cmp
push
or
or
push
fwait
mov
mov
cwtl
push
push
lods
stc
and
cmp
lock
push
cmp
lock
fdivrl
xchg
js
les
jecxz
loope,pn
mov
push
sub
or
daa
pop
pop
out
std
rol
pop
pop
ret
aad
push
dec
pop
push
and
fadds
gs
arpl
jae
repnz
mov
arpl
fmull
pop
insl
mov
icebp
movb
push
subl
sbb
mov
out
dec
imul
mov
jmp
inc
and
sbb
daa
and
cltd
lahf
jo
mov
push
sbb
push
loope
aas
cmp
sub
add
mov
push
dec
dec
rclb
scas
pop
pop
adc
or
out
mov
mov
inc
sub
sarb
clc
jg
shll
pusha
fidivs
dec
lahf
and
jb
movsb
mov
pushf
jno
addr16
in
jns
or
xchg
in
or
inc
iret
mov
xchg
xor
mov
lahf
inc
pop
ljmp
aam
xor
pushf
in
or
sub
push
out
jno
dec
or
test
or
repnz
push
sahf
stos
lods
xor
add
or
and
bound
movl
pop
pop
pop
adc
mov
xchg
loop
or
mov
test
popa
loop
out
sete
aad
pop
int
and
and
push
js
or
cmp
ret
je
dec
into
imul
arpl
mov
pop
xor
outsl
jl
psubw
mov
les
loopne
xchg
insb
daa
pop
xchg
inc
popf
mov
jb
lret
xor
iret
jo
lock
lods
adc
fcomp
mov
inc
hlt
stos
and
pop
jmp
push
lret
adc
stos
fsubs
sbb
xchg
push
iret
push
or
sbb
xchg
fimuls
sahf
scas
mov
ja
mov
jle
sub
scas
pushf
dec
adcl
and
xchg
dec
dec
mov
bound
sub
scas
movsb
jmp
dec
cwtl
mov
pop
jecxz
jbe
ss
xchg
cmc
and
negl
sbb
mov
xor
dec
icebp
or
fistpl
push
sti
ja
mov
and
arpl
mov
ret
test
std
xor
jne
sbb
jmp
cmpl
dec
in
sub
loope
adc
or
in
mov
dec
loop
ds
rcrb
mov
mov
cwtl
mov
cmpsl
pop
sbb
or
jne
lcall
mov
movsl
sahf
xchg
pop
arpl
enter
movsb
data16
adc
dec
cmp
pop
ljmp
dec
mov
aad
leave
out
mov
sbb
ljmp
test
push
sbb
add
dec
fucomi
pushf
frstor
mov
out
push
and
jmp
dec
fisttpll
xor
lret
outsb
mov
scas
sahf
fdivrs
in
xchg
vfrczsd
stos
sbb
xchg
dec
pop
jno
jae
jmp
cli
push
mov
in
addr16
js
fistpll
pop
sbb
loope
clc
lahf
push
into
xor
fs
mov
and
hlt
mov
mov
aas
movsl
xchg
pushf
xchg
inc
cmpsb
aas
jle
dec
fsubrs
jae
stos
ror
xchg
pushf
arpl
inc
enter
push
into
inc
sub
cmp
push
or
push
jae
outsl
sbb
jne
jns
in
lret
imul
xor
adc
push
add
cwtl
xchg
je
call
mov
scas
cmp
bound
lahf
sub
in
leave
aam
add
cmp
cmp
repz
rclb
xchg
add
jbe
enter
sbb
jbe
jecxz
je
insb
cmp
lcall
lcall
je
je
je
je
and
je
and
imul
and
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
jmp
push
and
shll
push
and
jmp
cmp
sbb
add
pop
add
addr16
mov
in
je
into
mov
lock
inc
das
out
mov
enter
mov
inc
sbbb
jae
mov
out
daa
push
adc
jne
jle
ja
cmp
das
pushf
mov
sub
adc
aad
stos
cmc
push
inc
scas
fdivl
rolb
cmp
out
lock
xor
lret
mov
stos
cli
lahf
popf
jge
and
inc
js
incl
sbb
jle
cmp
mov
lods
pop
rcrl
inc
mov
jle
xchg
push
ja
rcrl
mov
sbbl
ror
imul
mov
lahf
je
mov
add
cmpl
movsl
sub
fstps
and
cmpsb
mov
mov
roll
pop
jns
lods
inc
cld
add
sti
mov
pop
mov
movl
aam
mov
cmp
ja
inc
bound
les
xor
xor
dec
lods
adc
mov
dec
inc
aaa
insl
pusha
in
in
scas
ja
jmp
mov
add
dec
int3
push
imul
jl
pop
jbe
nop
xlat
pop
cltd
lea
push
jle
stos
jle
in
xor
and
xor
popf
or
outsl
aaa
jecxz
add
pop
jecxz
xlat
sub
sub
scas
arpl
lahf
xchg
sbb
and
cmp
inc
pusha
push
cmp
enter
xor
pop
fcoml
sbb
adc
add
jmp
ret
push
cli
and
push
popf
sub
xchg
cmp
repz
nop
dec
cmpsl
out
aad
push
fsubp
push
repnz
cmp
add
and
xchg
repz
adc
dec
je
inc
mov
sub
out
cs
inc
xchg
and
ficoml
sub
mov
fcomps
sub
imul
icebp
ljmp
cld
fstl
push
je
loopne
inc
add
xchg
cmp
mov
push
out
mov
mov
sar
sub
lods
push
sti
lods
mov
mov
aam
fisubrs
addb
in
mov
add
int
gs
inc
jle
mov
mov
mov
das
shll
xchg
sub
xor
shlb
jbe
outsl
inc
adc
push
sbb
add
cs
mov
mov
and
mov
faddl
jecxz
push
dec
jl
out
popa
stos
sub
mov
scas
fs
imul
clc
insb
sub
out
fbstp
pushf
xor
push
and
aam
add
mov
mov
insl
outsl
push
cmp
fisttpl
inc
repnz
pop
fcoms
cmpsl
add
sti
icebp
cwtl
jo
cmp
xor
fdivs
arpl
lods
and
fsubrs
pop
mov
loope
jmp
imul
int3
cwtl
sub
and
dec
pop
in
pushl
jbe
mov
xor
sub
mov
pop
lret
mov
out
mov
and
sbb
mov
xor
mov
add
jo
dec
pop
cltd
int3
sbb
xchg
les
fsubrs
xor
fs
mov
xor
popa
push
push
mov
or
jmp
fimuls
jle
ds
je,pn
xchg
mov
xchg
arpl
sbb
inc
loope
jge
cmpsb
mov
dec
lret
adc
stos
add
pop
fsubrl
xchg
cmp
lock
push
fs
enter
cwtl
outsb
mov
adc
mov
or
nop
jge
imulb
sub
jae
lea
mov
js
ljmp
int
ret
jle
ret
xor
xlat
push
jbe
inc
xor
testb
loop
push
mov
shlb
lret
add
add
cmp
fsubrp
xor
adc
lret
ljmp
outsl
sub
pop
enter
mov
das
inc
pop
sarl
mov
xchg
popf
adcb
outsb
sub
js
inc
out
xchg
imulb
jae
stos
xchg
jno
push
idivl
rclb
push
jo
shl
shll
jp
arpl
add
cltd
and
mov
jb
cmp
scas
fwait
inc
xlat
mov
mov
jp
cltd
fcompl
shrb
push
imul
cmp
cmp
push
aam
ret
inc
and
sub
insb
push
insl
mov
mov
push
push
test
jns
and
fisubrs
mov
sub
mov
iret
dec
add
das
push
dec
inc
cmpsb
or
bound
ret
inc
addr16
jo
aad
jne
in
dec
movsl
insb
jle
ret
mulb
jl
bound
hlt
pop
or
imul
out
out
and
cltd
jno
adc
fstpt
mov
dec
jmp
rol
pop
push
repz
imulb
inc
fcompl
sbb
push
dec
test
push
xchg
insb
lcall
pop
mov
jmp
call
outsl
test
jns
mov
lock
sarl
in
cmp
movsb
or
fidivrl
jo
and
es
popa
loopne
ret
push
push
addr16
ja
mov
adc
fidivs
inc
fidivrl
xor
repz
xchg
xor
cli
push
jbe
lret
pop
in
jge
mov
rcrl
es
ret
xchg
cwtl
inc
inc
hlt
pushf
add
xor
scas
sbb
in
jo
mov
push
pushl
stc
sbb
or
cmpsb
sbb
mov
and
es
es
out
hlt
mov
or
dec
add
or
pop
cmp
jl
sbb
int3
inc
push
pop
sbb
data16
jge
pop
xor
lahf
mov
mov
test
test
cmpsb
sbb
push
sub
push
arpl
pushf
adc
sub
sub
int3
mov
pusha
inc
or
inc
ret
cmpsl
mov
cmpsb
dec
lahf
cmpsb
mov
add
gs
mov
out
push
cmp
or
je
or
imul
jbe
xchg
ret
aaa
xchg
add
fistpl
mov
add
repnz
mov
mov
out
push
mov
aad
fsubrs
xor
and
lods
rol
adc
je
mov
xor
shrl
sub
and
and
add
cli
xchg
xchg
inc
roll
stc
in
mov
add
inc
mull
dec
movsl
pop
insl
clc
xchg
lret
jae
sbb
xor
pop
imulb
rorl
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jmp
lahf
cmpsb
out
cltd
out
inc
push
push
mov
push
popf
jo
pop
push
sbb
push
xor
xchg
sti
pop
dec
xchg
push
aam
leave
sahf
xchg
dec
int
push
daa
jge
std
mov
sbb
xor
push
sub
fs
ljmp
pushf
xchg
mov
xchg
pop
mov
mov
cmp
mov
mov
int3
fwait
inc
mov
and
imul
jecxz
repz
arpl
push
daa
push
insl
dec
mov
mov
mov
out
bound
aad
js
jno
cmp
mov
shrb
xor
dec
ret
mov
int
aam
pop
aam
cwtl
dec
adc
mov
adc
cmp
insl
leave
cmp
test
cmp
subb
dec
das
dec
pop
fwait
cli
call
or
mov
loope
pop
mov
lods
cmpsb
mov
repz
cmp
and
add
pop
daa
sub
jo
int
iret
fs
fucomi
pop
sub
push
jnp
and
cltd
rcll
je
hlt
pushf
push
add
xchg
push
mov
dec
mov
adc
sbb
test
sbb
out
loop
push
xchg
push
lods
shr
sub
cmc
test
pop
gs
inc
aaa
clc
inc
pop
pop
addr16
dec
push
pop
cld
lcall
adc
sbb
inc
idiv
mov
jbe
sbb
mov
push
shl
sti
ds
fcomps
jg
in
push
icebp
movsb
lock
xchg
in
xlat
pop
inc
sub
push
mov
imul
icebp
cmp
xor
push
dec
inc
test
jbe
jae
push
gs
inc
mov
lds
std
arpl
ss
cs
je
cwtl
fldl
in
push
mov
or
ja
std
adc
inc
inc
fisttps
les
push
inc
aas
add
int3
outsl
inc
cld
jl
jno
lods
aad
inc
or
pop
xor
pop
popa
mov
inc
fwait
aaa
ja
mov
add
pop
jno
mov
lahf
pop
stos
insb
dec
xchg
scas
into
pop
popl
aam
push
xchg
lods
aaa
push
dec
imul
jns
or
xor
les
pop
es
dec
push
arpl
cmpsb
les
jl
bound
inc
xchg
push
out
cmc
into
mov
out
push
clc
mov
and
push
mov
or
gs
stos
inc
xchg
jg
out
cmp
mov
lods
mov
aaa
jb
repnz
mov
leave
xchg
stos
js
ds
jge
ds
mov
mov
jmp
aaa
pop
outsl
xchg
xchg
out
push
fstpt
out
data16
fs
pcmpeqb
xchg
cmpsb
outsl
call
mov
jb
xor
pop
fildll
scas
leave
dec
fidivs
pop
mov
movsl
sahf
fldt
xchg
ret
pushl
dec
xor
rcrl
cmp
jb
dec
xchg
xchg
pop
hlt
push
jecxz
pop
rclb
dec
bound
pop
mov
adc
mov
adc
and
xor
popf
sbb
and
out
ret
mov
movb
aad
lods
push
push
cmp
mov
cmp
sub
sub
mov
inc
insb
pop
push
orb
outsb
insb
mov
outsb
and
cmp
adc
int3
push
hlt
push
mov
lahf
lret
pop
jg
dec
cld
pop
push
mov
adc
stos
stc
testb
adc
pop
ja
jnp
scas
mov
pop
call
repz
nop
mov
and
outsl
add
add
jne
cmp
jne
xor
jmp
mov
mov
jmp
ss
xchg
sbb
sbb
fwait
push
out
jl
mov
jle
push
push
sbb
in
lods
hlt
and
sbb
mov
mov
in
daa
arpl
dec
outsl
je
insl
pop
call
outsl
dec
fwait
cmp
lods
fdivs
flds
push
mov
mov
test
cmc
arpl
lret
sbb
scas
inc
mov
xlat
lock
repnz
mov
push
xchg
push
leave
rcrb
mov
enter
ljmp
mov
cs
xor
dec
or
sub
fwait
repnz
in
rcr
lods
mov
mov
sbb
xchg
push
add
iret
shl
test
inc
gs
lret
shll
in
popf
aaa
clc
xor
data16
mov
cmc
and
jmp
cmpsb
sub
cmp
lahf
and
and
mov
cmp
lret
jle
and
sub
adc
cmpsl
fwait
xchg
mov
rcr
je
shll
lock
xchg
cmp
dec
pop
sub
repnz
or
fcom
lds
adc
inc
aaa
mov
jne
sub
and
ds
test
or
call
or
daa
sti
call
push
pushf
jo
push
in
pop
pop
push
sbb
hlt
addr16
aas
and
mov
pop
insl
and
iret
dec
dec
lcall
dec
dec
movsl
bound
jae
in
sub
push
popa
out
lret
test
sbb
inc
mov
xor
mov
add
mov
adcb
lods
push
enter
or
and
andl
cmp
or
fdiv
and
cmp
add
or
push
mov
ja
test
adc
lea
lret
movsb
inc
pusha
movsl
pop
mov
add
loope
jb
sarl
ret
xor
sbb
xor
mov
dec
mov
push
mov
add
fs
test
arpl
mov
inc
sub
xchg
ljmp
pop
mov
or
frstor
cmpsl
jecxz
sbb
jae
mov
arpl
xchg
hlt
orb
add
loop
push
xchg
jns
ret
adc
stos
test
or
ret
shl
jbe
adc
pop
xchg
xchg
sbb
inc
mov
dec
popa
push
mov
into
mov
push
mov
ss
lods
lock
or
rcrb
hlt
lret
jge
nop
ficomps
jge
sbb
repnz
mov
jae
inc
into
dec
enter
jo
aam
and
es
repz
push
mov
push
jo
in
sbb
mov
call
arpl
mov
lret
dec
push
cmpsl
ss
pusha
or
rcll
cmp
gs
aaa
push
pusha
cmp
xor
cmpsb
jl
sbb
xor
xorl
xchg
sub
push
mov
fwait
lahf
and
xchg
ret
mov
cmpl
enter
out
outsl
jmp
hlt
out
das
and
shlb
std
data16
orl
ror
ret
sub
push
and
mov
add
adc
mov
mov
jmp
mov
push
push
jmp
mov
cltd
lahf
bound
mov
mov
mov
adc
cmp
add
aas
pop
in
pop
push
and
pop
pop
icebp
or
pushf
pop
sbb
scas
pop
or
push
add
aam
repz
aam
inc
pop
shlb
fmull
mov
out
loope
pop
mov
out
pop
push
cmpsb
cmp
mov
xor
jne
movsb
jle
mov
mov
test
ss
or
sub
sbb
adc
lahf
imul
sub
xchg
and
mov
in
and
push
mov
or
mov
push
das
inc
add
sub
mov
aam
es
loop
xorb
jns
lret
pop
test
cmp
and
fstpt
inc
pop
mov
cmp
xor
add
mov
sbb
aaa
inc
mov
les
xchg
lret
lock
test
cs
xchg
movsb
loope
lcall
sub
mov
mov
xor
cwtl
xor
scas
dec
popa
pop
ficoms
dec
into
and
push
test
fistps
mov
in
int3
movsl
ret
pushf
into
scas
or
jle
xchg
mov
scas
fisubrs
and
sub
sbb
add
daa
push
adc
pop
inc
ja
scas
mov
dec
outsb
rcll
aam
adcb
test
pop
or
ds
cmp
pusha
aam
andl
xchg
shlb
ljmp
jns
fisttpll
cmpsl
popf
arpl
adc
pop
out
aam
add
ret
dec
jg
aas
pop
cli
add
fstpt
int3
pop
ljmp
sarl
xchg
das
add
mov
cmp
mov
imul
xchg
ljmp
and
push
enter
bound
xor
rcrl
mov
mov
push
jns
lret
dec
fdivrl
out
push
pop
imul
jno
addb
imul
aad
inc
ljmp
mov
jle
or
loope
lret
dec
cmpsb
scas
push
insb
xchg
mov
pushf
fneni(8087
cli
inc
sbb
fstpt
xchg
add
shll
outsl
adc
negb
jle
xlat
lahf
repz
pop
std
cmp
mov
mov
jne
lcall
ss
shlb
int
mov
and
es
add
rorl
ret
popa
inc
sub
inc
mov
sub
movsb
push
rol
push
lods
mov
hlt
jecxz
lcall
mov
push
jo
pop
insl
sub
scas
scas
ficompl
push
sub
jbe
lods
push
or
push
data16
push
or
push
dec
dec
push
dec
inc
fildl
arpl
inc
loope
scas
dec
ss
jg
ja
aaa
xor
sub
dec
jno
icebp
ja
mov
jo
adc
sbb
and
jg
out
push
xor
mov
xchg
push
sbb
or
adcl
jmp
out
adc
jns
pushf
pop
jbe
in
fstpt
mov
xchg
shrb
clc
cmpb
pop
ret
mov
outsb
pusha
out
pushf
mov
hlt
sti
sbb
or
and
mov
pop
jno
lret
mov
push
push
outsl
das
imul
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
jmp
dec
inc
mov
push
push
push
stos
jne
and
sbb
sbb
insl
jb
push
and
and
xlat
hlt
insl
xor
jge
js
fidivs
in
hlt
sbb
push
jg
andps
mov
dec
jae
and
push
mov
sbb
or
jle
jge
mov
mov
das
lcall
shr
sbb
inc
lcall
test
jl
les
inc
fisttpl
aaa
popa
ljmp
sbb
sub
inc
fs
cmp
out
lcall
jnp
adc
mov
nop
fstpt
push
repnz
ret
jl
sub
fwait
int3
cli
jmp
dec
dec
sti
mov
icebp
add
and
push
lods
add
xor
sub
addb
inc
and
xor
jl
push
lock
push
mov
imul
pop
lea
mov
push
or
pop
outsb
xchg
sub
int3
fisubl
gs
imul
arpl
das
cmc
aaa
pminsw
mov
movsl
stos
fs
leave
out
and
jae
push
xchg
xor
adc
add
or
iret
xor
test
fdivs
fimull
mov
fldl
nop
aaa
sub
test
sbb
es
and
enter
addr16
jmp
mov
sahf
or
and
xchg
roll
sbb
pop
push
scas
push
fisubs
add
sarb
adcb
pop
test
lret
outsb
push
xor
mov
sbb
jecxz
je
lock
cmp
mov
push
or
incb
icebp
rcl
pop
mov
sub
in
sbb
insl
repz
add
adc
xor
ss
stos
sbb
movsb
xchg
xor
test
jne
sbb
dec
movsb
ror
jb
dec
movsb
movsl
out
push
outsl
aam
mov
dec
xchg
fwait
subl
sbb
jbe
push
or
rcll
test
jb
lock
push
loop
pop
add
and
lea
int3
xchg
clc
jmp
or
and
sarb
pop
pop
or
mov
outsb
repz
cwtl
mov
mov
mov
jae
movsb
xchg
dec
fdivrl
shr
dec
mov
rolb
pop
int
jbe
and
arpl
and
orl
ljmp
jp
dec
or
mov
push
stos
jae
mov
icebp
fldt
lcall
cmp
mov
insb
pop
and
aas
fwait
mov
jle
mov
add
cltd
xchg
repnz
repnz
push
icebp
js
jne
push
dec
mov
mov
mov
fwait
or
jecxz
mov
fbld
cld
push
outsb
fs
add
movsb
cld
mov
lods
push
and
pushf
nop
pop
loopne
mov
je
mov
pop
or
les
pop
xchg
outsl
loop
xchg
mov
andb
and
loopne
inc
mov
and
push
add
xlat
cmp
ret
out
pop
leave
pop
or
or
cltd
dec
das
arpl
subb
cmpsb
loopne
xchg
fcomps
adc
imul
rcr
fdivs
loope
pop
push
or
jg
xor
subb
subb
xchg
aas
insl
scas
fsubrs
subb
pop
dec
mov
fs
in
cmp
daa
insl
je
daa
or
mov
rol
inc
and
sbb
add
inc
ret
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
jmp
inc
mov
and
test
aas
push
sbb
in
test
inc
jns
sarb
ret
pushf
inc
lods
mov
jge
push
adc
dec
aad
int
push
or
add
sarb
sbb
mov
das
sbb
sarl
ret
movsl
in
icebp
rorl
or
xor
xlat
and
xor
popf
mov
cmp
lock
call
jbe
out
and
xor
mov
cmp
pop
jbe,pt
in
scas
gs
inc
imul
mov
scas
xor
scas
and
cmc
adc
mov
sbb
pusha
adc
jmp
add
popf
jle
xchg
ljmp
inc
cmc
pop
or
fildll
cmp
fdiv
inc
sbb
adc
roll
scas
push
sarb
pop
pop
into
inc
in
xor
les
add
pop
mov
push
inc
xchg
mov
lret
pop
mov
icebp
xlat
jp
pop
xchg
pop
lea
orb
sub
repnz
jns
jg
sbb
add
sub
sbbb
jns
cld
or
pop
add
test
xor
fisubrs
xor
xchg
pop
pop
outsl
pop
mul
lock
pop
scas
sub
cmpsl
xchg
sub
repz
pop
incl
leave
ja
in
movsl
sbb
ja
stos
popf
inc
pop
loop
and
movsl
sub
jo
insl
xchg
push
cmp
ja
js
sahf
and
jl
push
cld
push
enter
movsb
lods
xlat
test
out
movsl
ja
xchg
out
fdivs
mov
frstor
ret
pop
push
movsb
push
xor
in
xlat
pop
adc
inc
xchg
mov
jno
mov
xchg
adc
out
add
ret
add
or
xchg
push
pushf
push
jmp
stos
cltd
idivl
loopne
pop
test
inc
shrb
mov
adc
pop
mov
add
cwtl
pusha
mov
in
push
push
inc
or
push
call
lahf
adc
fwait
ret
cmc
ror
in
sbb
sbb
call
or
push
imul
aad
pop
mov
scas
pop
push
dec
repnz
mov
fs
inc
push
xchg
adc
sbb
mov
scas
test
sub
stos
xor
mov
push
lret
push
or
cmc
cwtl
pop
cmp
cmp
adc
dec
or
out
sub
dec
fcom
mov
xchg
out
ret
test
mov
mov
xchg
pop
jb
cmp
test
loope
popa
sub
dec
imul
dec
lock
insb
stos
scas
scas
jp
push
dec
cmp
pop
fisttpl
sbb
repz
enter
dec
jmp
fldenv
xchg
movsl
sub
pop
mov
sub
cmpxchg
cli
sub
push
call
cli
call
icebp
icebp
jp
lods
sub
in
xchg
lcall
fmuls
out
js
or
clc
jo
dec
jmp
mov
inc
push
scas
lea
dec
or
sahf
loop
lea
fmul
inc
loopne
xor
popa
inc
and
pop
push
out
mov
cmp
push
fmulp
push
sbb
repz
int3
fs
loop
out
rolb
xor
lret
push
or
adc
testb
jae
jle
jo
jecxz
xor
sbb
scas
ret
and
mov
rcrl
ljmp
jmp
test
nop
lahf
jp
and
xor
and
sbb
pop
imul
or
add
sub
imul
jo
in
test
out
sub
enter
stc
adc
nop
dec
inc
adc
aam
leave
rolb
jb
popa
jge
popf
stc
enter
add
cld
fstps
and
lret
adc
out
xchg
sbb
ljmp
sti
add
push
mov
aad
push
inc
mov
add
rclb
mov
loop
add
pushf
cmpsl
cld
mov
mov
test
and
arpl
xor
aam
clc
loop
jmp
scas
mov
ljmp
or
or
iret
in
inc
mov
mov
gs
jne
adc
and
inc
cs
adc
enter
loope
imul
jl
rol
fcmovne
jl
shl
inc
jp
ds
hlt
xor
push
repnz
xchg
mov
bound
movsl
adc
and
push
mov
fiaddl
xchg
movsl
xchg
pop
loop
jmp
mov
push
pmullw
sub
out
in
sub
and
sbb
lods
add
mov
cld
and
faddl
clc
insl
lret
addr16
sbb
es
xor
in
jo
rorl
xor
lock
fwait
xchg
mov
psubw
push
xchg
cmp
sub
lods
ss
sub
xor
xchg
sbb
in
stos
pop
repz
pop
pop
cmp
lcall
sbb
outsb
loop
mov
hlt
outsl
xchg
les
popf
fdivrl
pop
xchg
lea
imul
sub
and
jb
inc
fdivp
in
sub
jge
pop
popf
stos
jnp
or
movsl
fidivs
sub
loopne
ds
ficomps
adc
fidivs
push
mov
nop
cmpsl
xor
ror
inc
stos
ds
lret
mov
pop
inc
lahf
and
jae
rorb
loopne
push
int
dec
push
insb
pop
ret
and
cmc
push
sub
sbb
mov
enter
xlat
xor
shl
movsl
add
pop
js
jge
mov
pop
lods
rcrl
outsl
push
and
cmp
mov
icebp
push
in
pop
xchg
jnp
xor
fists
repnz
movsl
mov
popa
dec
mov
inc
sub
dec
and
sub
cmpsb
je
xchg
out
clc
dec
xor
popf
or
mov
or
mov
leave
add
mov
aas
dec
ljmp
cld
pop
test
jge
add
imul
mov
jns
lea
fisubs
test
sbb
cmp
icebp
mov
sbb
sub
sub
fcompl
xor
or
cld
mov
in
mov
mov
or
js
sub
mov
test
mov
call
add
or
jae
sub
loopne
stos
jl
cmp
xorb
loope
cli
xchg
jae
jne
xchg
dec
cmp
negl
add
loopne
jo
fsub
loope
push
jnp
out
jg
in
add
sbb
lods
jne
and
cmpsb
ljmp
ljmp
cmp
into
jmp
lret
and
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
or
push
cmpl
movl
mov
mov
movl
jmp
mov
cmpl
jg
push
push
call
sbb
mov
xor
mov
sbb
neg
xor
adc
mov
mov
and
push
mov
mov
sub
imul
push
add
movl
sub
movl
xorl
movl
mov
add
mov
xor
sbbl
div
xor
imul
neg
mov
orl
xor
and
xor
mov
xor
andl
div
orl
sub
cmpl
mov
mov
notl
jmp
movl
notl
cmpl
je
pushl
push
push
pushl
call
add
add
sub
adc
sub
movl
and
mov
mov
mov
sbb
movl
addl
movl
xor
movl
or
jmp
ret
push
sbb
mov
mov
scas
fistpll
das
push
sbb
test
mov
push
push
dec
push
fucomp
push
inc
mov
jno
daa
sub
sub
dec
mov
cmp
pop
xchg
sbb
inc
outsl
mov
jne
or
ss
cmp
js
fs
mov
mov
loope
xor
subb
adc
cmp
mov
pop
xorb
or
fwait
dec
in
inc
pop
das
jmp
fiadds
jns
ljmp
xor
pop
sub
xchg
push
fistl
in
mov
and
into
pop
xchg
cmp
test
sub
divb
mov
dec
adc
xchg
add
mov
push
imul
dec
popa
mov
pop
dec
push
sbb
insb
fwait
outsb
loop
or
adc
in
adc
loop
fisttpl
add
pop
hlt
mov
mov
insb
mov
arpl
cmp
sbb
cmp
pop
mov
je
mov
std
adc
test
pushl
clc
cmpsl
and
and
lret
jle
fs
jb
iret
sbb
lahf
insb
enter
cmp
pop
sub
sahf
outsl
mov
jae
popa
pop
lods
in
cwtl
test
mov
mov
adc
inc
js
jne
jae
out
jge
cmc
leave
loop
pop
in
inc
outsb
push
gs
leave
test
ds
in
inc
add
outsl
lahf
mov
out
dec
push
mov
hlt
jle
adc
scas
or
das
adc
jg
andb
loopne
rcll
xchg
sbb
clc
not
dec
mov
pushl
pop
inc
mov
fistps
and
push
enter
jo
fcom
int3
sbb
in
in
aas
enter
inc
pop
xchg
cmp
jmp
icebp
adc
push
push
and
push
lods
cmpsb
loopne,pn
dec
mov
jo
inc
cmpsb
fwait
mov
frstor
enter
or
pop
push
shr
js
mov
out
fcoml
sbb
push
mov
cmp
xor
stos
es
mov
xchg
je
mov
out
aam
arpl
sarl
mov
in
hlt
cld
pop
stos
mov
xchg
pop
push
outsb
pop
addb
or
sub
das
das
repz
pop
outsl
imul
enter
dec
jmp
mov
add
mov
cltd
pop
or
sbb
add
out
mov
outsb
mov
iret
and
in
stc
stos
aam
add
push
out
cli
lods
int
or
out
mov
jle
in
mov
cmp
es
jno
sbb
dec
xor
jecxz
lods
xchg
arpl
cwtl
stc
lret
cmp
add
aam
repz
sbb
pop
mov
in
or
lahf
roll
pushl
into
push
mov
dec
fistpl
cmp
testb
ret
mov
es
and
add
idivb
mov
insb
xchg
dec
lahf
sbb
mov
adcl
add
xor
xor
sbb
xor
movzwl
sbb
imul
and
mov
cmpl
mov
mov
mov
jmp
movl
cmpl
jb
pushl
push
push
call
sub
inc
and
movl
and
xor
and
and
sub
mov
jmp
adc
fstps
and
cmpsl
repz
push
sub
sbb
shlb
inc
shrb
dec
or
out
mov
jge
xchg
jne
es
roll
in
sub
cld
movsb
cmp
push
inc
push
adc
testb
mov
inc
rorl
sbb
stc
mov
ficomps
pop
lods
pop
mov
daa
mov
insl
in
pop
mov
add
outsb
xor
leave
jmp
inc
xor
aaa
jge
scas
add
pop
dec
xchg
enter
mov
in
push
fstps
sub
inc
das
rcr
cmp
pop
fisubrs
inc
push
clc
stc
xchg
adc
scas
cltd
andb
or
push
or
mov
push
movsb
jp
in
dec
mov
sbb
inc
cld
mov
jmp
xchg
imul
cld
pop
sti
or
cmp
daa
xlat
inc
sti
inc
andl
nop
push
xchg
mov
lahf
mov
loop
andb
movsl
out
xchg
mov
add
adc
and
mov
hlt
inc
xlat
xor
mov
aad
push
lcall
fcom
sti
in
nop
cmpsb
aaa
mov
leave
jmp
arpl
scas
mov
cwtl
aam
sbb
ds
push
daa
push
cld
jmp
movsb
sbb
mov
fiaddl
pop
std
sub
je
je
sub
push
mov
stos
ss
ljmp
loope
stos
ljmp
pop
jle
in
mov
xchg
xor
nop
shlb
jbe
jle
stos
pop
push
lcall
call
sarb
or
mov
xchg
leave
jbe
nop
sbb
pop
cmp
test
cmpsb
add
lret
mov
inc
out
sub
sub
xchg
pop
or
push
jge
xchg
add
sbb
mov
inc
rolb
movsb
pop
mov
adc
ss
ljmp
jle
clc
cmp
push
mov
inc
sbb
jmp
mov
icebp
lds
dec
clc
pushf
inc
ss
pop
dec
dec
mov
orb
jle
add
mov
jnp
sub
inc
mov
bound
insb
jmp
out
lods
adc
xor
bound
pop
push
cmp
fcomps
mov
xor
mov
sbb
test
cmp
xchg
lahf
ficoml
and
inc
pop
lock
sub
addl
fwait
mov
dec
add
insb
pop
cmpsl
repnz
mov
mov
fists
and
call
out
test
and
jmp
jecxz
popa
jle
cmpsb
in
ficoml
push
gs
mov
pop
adc
xor
insl
jg
or
jno
sahf
cmp
jnp
loope
cmpsb
fsubl
repz
adc
xchg
das
pop
fdivrs
pushf
sub
push
sub
sub
fsubrp
cmp
es
pop
mov
mov
call
nop
aad
jnp
sub
inc
nop
mov
add
add
movzwl
mov
mov
jmp
not
mov
cmpl
jbe
pushl
pushl
pushl
push
push
push
push
call
sub
movl
and
or
xor
or
mov
sbb
movl
movl
movl
orl
mov
imul
cmpl
movl
mov
mov
jmp
mov
movl
cmpl
ja
pushl
push
call
sub
incl
add
or
sub
mov
cmpl
not
movl
movl
mov
jmp
movl
cmpl
ja
push
pushl
call
negl
andl
and
movzbl
sbb
mov
subl
and
imul
and
imul
mov
sbbl
and
cmpl
movl
mov
not
jmp
movl
notl
cmpl
jg
push
pushl
push
pushl
push
pushl
push
push
pushl
pushl
call
inc
adc
and
movzwl
add
mov
addl
adcl
dec
subl
or
movl
mov
adcl
xor
or
mov
adcl
mov
xorl
lea
cmpl
mov
mov
mov
notl
jmp
movl
cmpl
jae
push
call
dec
orl
mov
add
sbb
mov
adc
and
mov
mov
mov
xor
movl
not
movl
subl
movl
xor
mov
cmpl
movl
notl
mov
jmp
movl
mov
cmpl
jb
push
push
call
movzwl
xor
mov
add
mov
mov
adc
inc
xor
sub
andl
xor
add
mov
addl
or
andl
add
or
mov
addl
or
add
add
or
xor
mov
cmpl
mov
mov
movl
jmp
movl
mov
cmpl
jne
pushl
push
push
call
sub
xor
add
mov
add
adc
andl
movl
cmpl
mov
movl
movl
mov
jmp
mov
cmpl
jge
push
push
push
call
and
add
adcl
and
sub
subl
movl
or
movl
movl
mov
add
xorl
mov
subl
sub
decl
mov
lea
or
adc
sub
mov
cmpl
movl
movl
mov
jmp
mov
mov
cmpl
je
call
sbbl
xorl
add
andl
or
movl
movl
xor
mov
movzwl
or
add
cmpl
movl
movl
jmp
mov
cmpl
jg
push
call
adc
sbb
movzwl
add
addl
orl
mov
and
imul
mov
addl
imul
xor
mov
div
or
sub
mov
cmpl
mov
mov
jmp
mov
movl
cmpl
jb
push
pushl
call
adc
dec
movzbl
sbb
mov
xor
movzwl
or
xor
add
add
and
movl
cmpl
mov
mov
mov
movl
jmp
not
cmpl
jne
push
push
call
and
mov
or
mov
mov
add
mov
sbb
adc
movl
xor
movl
or
mov
sub
mov
orl
xor
xorl
div
imul
add
cmpl
mov
movl
jmp
movl
movl
cmpl
jne
push
call
and
adc
sub
mov
sbb
mov
andl
add
mov
adcl
xor
or
xor
or
mov
subl
div
cmpl
mov
mov
movl
mov
jmp
movl
cmpl
jbe
push
push
pushl
call
neg
sbb
andl
mov
xor
movzbl
sub
movl
xor
adc
mov
movl
mov
add
mov
movl
xor
movl
cmpl
mov
mov
mov
movzwl
jmp
mov
mov
cmpl
ja
pushl
call
and
xorl
add
or
mov
mov
sbb
sbbl
mov
mov
sub
shr
sub
xor
mov
imul
mov
sbbl
and
xor
mov
sub
mov
movl
movl
sub
mov
xor
or
xor
add
xor
mov
or
sub
mov
adc
movl
sub
movl
movl
cmpl
notl
mov
jmp
mov
cmpl
jne
pushl
call
andl
add
movzwl
and
and
add
mov
mov
sub
and
movl
not
movl
movzbl
or
movl
cmpl
mov
movl
jmp
mov
mov
cmpl
jae
push
call
or
and
adc
adc
sbb
movl
mov
and
add
jmp
test
cmp
pop
cmp
mov
adc
stos
and
push
sbb
cmc
or
nop
mov
out
into
insl
mov
fdivp
jbe
test
xor
push
adc
push
mov
push
cltd
ror
dec
movsb
adc
lea
mov
dec
adc
jns
icebp
je
mov
fs
out
sbb
dec
sbb
jl
add
aad
and
js
or
mov
mov
dec
jbe
in
in
enter
sub
fidivrl
dec
adc
mov
cmpsb
push
xchg
pop
lcall
sub
add
mov
in
pop
lock
pop
in
pop
dec
xchg
pop
xchg
cmc
icebp
aam
aad
sub
add
add
iret
fisttpl
imul
or
add
insb
jg
call
or
rolb
shll
scas
mov
and
dec
outsl
sbb
shrb
inc
out
mov
cld
inc
enter
push
xchg
and
into
mov
aas
mov
cmp
popa
fisubl
and
fdivrs
push
fadds
cmp
or
in
imul
lea
lcall
xchg
idiv
popa
mov
out
dec
jecxz
imul
push
xor
cmp
out
cmp
movsl
mov
pop
push
cs
xor
and
enter
inc
jp
popl
adc
jge
ss
enter
rclb
adc
cmpsl
adc
jmp
dec
adc
ds
leave
sbb
pop
sub
pop
xchg
jns
mov
push
or
or
add
and
lea
push
pop
lret
ja
or
fcmovnbe
call
jbe
adc
jae
sahf
jb
xchg
test
lcall
mov
pop
dec
xchg
mov
xorl
ljmp
mov
jae
in
dec
xor
add
lods
inc
mov
fisubl
sbb
push
into
sbb
in
dec
fs
mov
pusha
fadd
and
repnz
xchg
pop
fimull
aam
xchg
lret
and
sahf
cmpsl
lock
mov
mov
xor
addr16
mov
data16
cltd
and
xchg
in
mov
dec
ja
cltd
addr16
add
divl
data16
pop
test
popf
stos
divl
repnz
sub
sti
sahf
or
shll
cs
cs
arpl
rorl
dec
inc
sbb
add
push
inc
sahf
sbb
loopne
jl
aam
pusha
das
jns
mov
push
arpl
or
scas
popf
out
jbe
pushf
add
imulb
mov
xor
or
idivb
movl
test
xchg
add
or
push
jmp
cmp
jns
nop
push
push
stos
lahf
iret
repz
lret
movsl
xor
lea
int3
into
pop
jnp
and
jmp
jb
aad
inc
mov
mov
mov
orl
sub
mov
add
mov
imul
imul
mov
or
and
mov
subl
lea
addl
push
addl
call
cmpl
mov
mov
mov
movl
jmp
movl
notl
cmpl
jae
pushl
push
pushl
pushl
push
call
adc
xor
add
mov
mov
sub
and
sbb
mov
mov
add
imul
sbb
add
and
cmpl
mov
mov
movzwl
jmp
movl
mov
cmpl
jae
push
call
movzwl
add
adc
addl
and
or
sbb
sub
cmpl
movl
movl
movl
notl
jmp
mov
cmpl
je
push
pushl
call
subl
movzwl
xor
mov
mov
or
xor
add
orl
xor
addl
mov
div
xor
xor
add
adc
mov
sbbl
movl
movl
cmpl
movl
mov
jmp
movzwl
cmpl
jne
push
pushl
push
push
pushl
call
mov
sbb
and
sbb
mov
or
mov
mov
sub
and
adc
movl
movl
adc
movl
cmpl
not
movl
jmp
movl
notl
cmpl
jge
push
push
push
pushl
call
xor
mov
or
mov
mov
and
and
and
mov
xor
movzwl
and
mov
sub
movl
xorl
movl
sbb
movl
jmp
movsl
mov
push
and
stos
pop
fisttpll
lods
sbb
sbb
mov
sbb
popa
mov
test
or
mov
stos
adc
add
jp
cwtl
das
and
inc
add
les
and
cli
jle
mov
in
push
add
and
xchg
xchg
jmp
sbb
out
loope
leave
fidivs
scas
daa
dec
mov
mov
and
xor
cld
cmc
add
repz
shlb
daa
ds
imul
add
add
stos
cmp
sub
aaa
popa
test
mov
clc
fldl
and
pushw
leave
push
and
or
cmp
aaa
jmp
clc
sbb
and
push
dec
xor
sbb
jbe
call
pop
xchg
dec
dec
xor
cmc
es
cmc
jns
or
push
or
xor
or
jle
push
xor
in
test
arpl
jl
xchg
sbbl
lret
leave
sbb
mov
shll
mov
and
mov
mov
hlt
mov
decl
pop
shl
push
lahf
adc
dec
out
fsub
sti
fwait
arpl
scas
adcl
sbb
adc
mov
aaa
dec
add
pop
jl
inc
insb
inc
sub
adc
negl
int
pop
dec
lret
jge
jle
dec
in
mov
ja
sub
pop
ret
push
fimull
sbb
push
xor
movsb
cwtl
add
and
cmpsb
mov
std
adc
aad
and
mov
imul
pop
cmp
inc
fdivrs
pop
push
aad
nopl
roll
lret
add
icebp
repnz
loop
insl
pop
sbb
mov
fdivs
and
mov
popa
test
adc
je
inc
aaa
lret
mov
xchg
sarl
xchg
lret
mov
sub
shlb
inc
mov
xchg
and
mull
push
cmpsb
aam
xchg
mov
adc
arpl
sub
loope
pop
push
or
pop
or
or
and
mov
in
mov
lods
pop
cmp
sbb
pop
cwtl
loopne
and
mov
jb
push
lock
cld
pop
add
xchg
sub
pop
xor
mov
rcrb
les
sbb
loope
test
stc
sub
inc
test
cwtl
movsl
ja
sarb
inc
movsb
shrb
incl
xor
outsl
inc
mov
cmp
out
lods
enter
mov
lret
ror
add
mov
or
mov
inc
jb
push
dec
push
inc
xchg
add
mov
pop
push
mov
xor
xorl
xchg
mov
or
cmp
sub
dec
jnp
outsl
mov
inc
fisubrs
mov
sub
test
in
push
das
inc
cmpsl
out
test
jb
sbb
rcr
pusha
rcrb
lea
or
popw
not
adc
ja
xor
jb
in
xchg
mov
sbb
out
add
movl
movl
movl
xor
movl
xorl
mov
cmpl
movzwl
mov
jmp
movl
movl
cmpl
jne
push
push
call
subl
inc
inc
and
and
sbb
and
mov
adc
mov
mov
sub
and
add
sub
cmpl
mov
mov
jmp
movl
cmpl
je
pushl
push
pushl
pushl
call
mov
or
xor
add
mov
sub
or
mov
or
add
sbb
sub
or
jmp
mov
lds
stos
xorb
aam
mov
mov
jmp
fisttps
andb
aad
jl
lods
hlt
xchg
inc
or
push
sbb
clc
fxch
js
xor
xchg
pop
das
into
lods
cmpsl
sub
xchg
icebp
xor
mov
sbb
jge
jno
stc
outsb
jo
pop
add
pop
jle
rcrb
jnp
arpl
movsb
and
stos
call
pop
call
xor
sub
ret
dec
daa
add
or
xchg
dec
mov
stc
lret
cmp
dec
fs
xor
in
adc
sbb
mov
sbb
mov
pop
ret
add
mov
jg
jo
outsb
pop
stos
cmp
ja
mov
rcll
mov
xchg
jns
mov
push
sub
in
lds
push
lods
xchg
and
jge
jae
mov
sbb
cmp
dec
cs
leave
mov
ret
xor
js
std
xchg
mov
out
cld
int3
fs
jbe
out
push
xor
ljmp
fdiv
rcrb
pusha
std
ss
xlat
bound
mov
in
cli
imul
jp
sub
notb
cli
xchg
divl
push
xchg
sbb
adc
negb
lods
cmp
jp
sbb
fdivs
or
in
jl
out
loopne
dec
pop
or
jno
jne
mov
sbb
pop
pop
pop
or
clc
fwait
add
insw
call
add
mov
xchg
mov
rol
fsts
xor
test
dec
insl
cltd
dec
xor
repnz
lods
mov
inc
jecxz
popa
fnstenv
inc
lret
mov
and
mov
test
cmp
mov
ret
and
fidivrs
shlb
jae
xlat
daa
and
dec
or
or
mov
jl
mov
xor
inc
stos
insl
lahf
stos
lret
mov
sarl
sahf
inc
or
add
dec
insl
xchg
les
jge
int
bound
test
mov
pushf
jle
adc
push
mov
xchg
icebp
and
imul
out
outsl
inc
test
inc
xlat
sbb
punpckldq
aad
add
insb
or
sbb
cwtl
stos
sbb
arpl
pop
mov
out
shrl
jbe
movsl
es
adc
test
jae
adc
push
lret
lods
andb
push
int
fisubl
xor
daa
jns
jbe
mov
ret
pushf
pop
clc
and
push
into
push
and
test
xlat
stos
mov
ljmp
sub
leave
dec
andl
mov
enter
fsubl
jb
push
hlt
dec
das
dec
and
in
rcl
jns
inc
iret
add
cmpsl
test
sbb
fsubs
mov
test
mov
cmp
mov
cld
lock
cmp
in
xor
mov
add
lods
sub
add
add
xor
imul
cmpl
mov
movl
jmp
mov
movl
cmpl
jle
push
push
call
add
xor
adc
xor
mov
or
mov
and
negl
dec
movzwl
sbb
mov
mov
xor
add
xor
add
sub
xor
lea
cmpl
movl
mov
mov
jmp
movl
cmpl
ja
pushl
pushl
pushl
call
neg
xor
or
xor
add
sub
or
sub
mov
sbb
mov
add
subl
cmpl
mov
movzbl
movl
mov
jmp
movl
cmpl
jle
pushl
call
xor
add
xor
mov
sbb
movzwl
or
mov
decl
subl
mov
mov
mov
add
mov
neg
xor
cmpl
movl
movl
movl
mov
jmp
movl
cmpl
jae
pushl
push
pushl
push
pushl
call
sbb
adc
and
sbb
add
mov
lea
and
mov
sub
add
mov
movl
movl
movl
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
jmp
test
fdivr
and
lcall
pusha
cltd
mov
ds
sbb
adc
jns
pop
pop
mov
push
xor
mov
inc
jne
jbe
cld
pop
jns
pop
xchg
jmp
sbb
lahf
int3
ss
iret
in
mov
pusha
dec
imul
mov
xchg
fistpl
fwait
dec
cmp
addr16
mov
mov
lea
hlt
mov
push
jg
js
sbb
dec
xchg
mov
inc
adc
pop
jecxz
fsubrl
sbb
mov
push
clc
lods
enter
mov
loop
iret
test
mov
aaa
movsl
pop
pop
push
imul
mov
jg
add
icebp
jo
xchg
push
cli
test
hlt
adc
mov
scas
leave
or
xchg
mov
mov
leave
sarl
and
imul
call
into
int
bound
xor
idivl
or
pusha
or
out
xchg
adc
inc
mov
xor
dec
sbb
mov
aas
out
fldt
add
movsb
or
call
inc
loope
and
sub
inc
pop
int3
movsb
scas
add
in
xchg
in
xorl
fidivrl
push
mov
aad
test
xchg
popa
push
std
fldt
mov
mov
mov
hlt
stos
pop
jbe
mov
repz
hlt
enter
pushf
iret
push
daa
out
call
lcall
push
add
lea
fwait
xchg
jnp
xchg
lcall
jmp
insl
inc
loopne
inc
mov
inc
mov
mov
push
push
imul
add
push
sub
je
pop
inc
xchg
dec
mov
cmp
fs
in
adc
shrb
mov
jbe
push
sub
imul
js
in
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
movl
movl
jmp
mov
cmpl
jbe
push
call
incl
subl
incl
adc
orl
not
push
push
sbb
mov
or
jne
mov
mov
xor
div
xorl
mov
mov
div
mov
mov
jmp
mov
sbb
mov
cmpl
mov
movl
mov
jmp
movl
movl
cmpl
jle
push
call
xorl
sub
sbbl
dec
not
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
orl
subl
movl
cmpl
movl
je
xor
add
mov
mov
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
orl
shld
movl
shl
ret
inc
mov
subl
xor
and
shl
ret
xor
xor
ret
jmp
es
jno
ja
int3
fsubrl
jo
popa
insb
push
lods
xor
insb
popa
outsb
add
add
addr16
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
outsl
add
add
jne
je
xor
xor
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
or
inc
add
gs
arpl
push
outsl
inc
jne
jae
jb
xchg
and
push
daa
inc
add
inc
add
es
add
inc
push
mov
movsb
popf
movsb
jno
xchg
movsb
or
movsb
sbb
movsb
roll
adc
movsb
popf
movsb
jno
xchg
movsb
or
movsb
xor
movsb
mov
in
xchg
movsb
adc
movsb
popf
movsb
sbb
movsb
fwait
movsb
xchg
sub
cs
push
adc
movsb
fwait
movsb
add
movsb
sbb
movsb
shll
shrl
or
push
pop
outsb
adc
movsb
fwait
movsb
add
movsb
xor
movsb
andl
imull
dec
adc
movsb
fwait
movsb
jae
popf
movsb
sbb
movsb
fwait
movsb
andl
testl
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
pop
movsb
xchg
movsb
push
movsb
mov
inc
rorl
imulb
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
xchg
mov
mov
out
adc
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
andl
imul
push
into
adc
xchg
movsb
cmp
movsb
popf
movsb
jnp
xchg
movsb
fwait
movsb
xchg
movsb
shl
shr
lock
test
cs
push
push
adc
xchg
movsb
adc
movsb
cmp
movsb
fwait
movsb
lea
or
push
push
outsb
adc
xchg
movsb
add
shlb
add
and
inc
add
add
and
inc
add
es
add
add
inc
add
inc
add
inc
add
push
movsb
scas
or
movsb
shlb
inc
add
inc
add
es
add
inc
add
es
add
inc
add
inc
out
cmp
inc
add
inc
add
and
loopne
jbe
pop
cmpsb
add
inc
add
rcl
pop
scas
jle
add
outsl
arpl
pop
xor
cmpsl
mov
xchg
test
and
push
movsb
stos
fiadds
movsb
cmpsb
fiaddl
movsb
mov
fiaddl
movsb
mov
fiaddl
movsb
mov
push
movsb
mov
push
movsb
mov
push
movsb
out
fiaddl
movsb
decl
adc
mov
inc
add
loop
js
lcall
and
add
mov
inc
add
inc
sbb
hlt
clc
sarb
sub
jle
add
add
jl
add
jmp
push
movsb
jg
inc
movsb
push
movsb
inc
movsb
std
movsb
jmp
movsb
push
movsb
dec
movsb
std
movsb
jmp
movsb
push
movsb
jg
std
movsb
jmp
movsb
dec
movsb
inc
movsb
jne
pop
movsb
jnp
dec
movsb
fwait
movsb
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shlb
rcll
into
xchg
dec
xor
sbb
push
je,pn
mov
imul
leave
daa
dec
out
pushf
mov
dec
xchg
lock
inc
or
js
popa
pop
jecxz
movb
cs
aas
inc
leave
testb
jl
mov
jb
pop
sub
inc
add
fbld
adc
popa
arpl
popa
outsl
gs
jae
outsl
insb
gs
in
jg
ja
jp
inc
push
movsl
push
dec
gs
popa
push
jne
jae
imul
inc
jae
imul
jb
gs
lds
xor
fs
push
gs
popa
insl
imul
add
add
push
mov
jb
jno
or
lods
repnz
je
je
js
cmc
outsl
insl
popa
imul
popa
jb
push
imul
mov
jns
outsl
addr16
add
sub
icebp
gs
jae
popa
je
insl
add
in
mov
insl
imul
gs
add
jne
popa
or
popa
push
loope
stos
je
push
popa
jb
jae
imul
loope
aad
jb
imul
je
adc
outsl
gs
imul
outsb
shrl
ja
outsl
popa
outsb
gs
imul
imul
inc
jb
sbb
jo
addr16
jo
fs
xchg
in
jno
iret
jbe
or
cwtl
int
std
pop
fsubrs
dec
xor
stc
inc
adc
dec
sbb
mov
jns
dec
sbb
xchg
cmp
in
jno
iret
jbe
or
int
std
pop
jns
pop
xor
stc
inc
icebp
das
int
mov
mov
jns
xchg
lret
rolb
jno
jbe
or
int
std
pop
fdivs
int
stc
inc
icebp
test
mov
int
mov
addl
rolb
jno
jbe
or
cwtl
int
std
pop
ret
cmp
xchg
stc
inc
adc
test
ret
xchg
aad
lds
iret
jbe
or
int
std
pop
pop
insb
cmp
stc
inc
icebp
push
int
mov
mov
jns
test
lcall
jbe
xorl
sbb
and
int
adc
mov
add
add
lods
clc
icebp
jo
jge
aad
clc
icebp
jo
adc
incl
jo
jo
jo
xor
cwtl
add
add
xchg
or
addb
jecxz
hlt
scas
rolb
sub
iret
pop
iret
push
out
int
adc
out
sub
or
rolb
subb
sub
cmc
sub
in
aad
add
mov
fcmovnbe
out
pushf
xchg
test
fs
mov
iret
int3
call
jno
imul
int
std
xor
movsl
das
pop
push
or
sub
xchg
iret
les
addb
add
addl
adc
inc
jns
fldlg2
es
or
add
mov
add
addl
jns
insl
and
push
add
test
push
add
push
mov
test
lret
addb
in
outsl
rcl
jge
outsl
xchg
addb
sahf
mov
jno
popa
mov
addb
push
jge
push
xchg
addb
jge
push
xchg
addb
rorb
jo
std
xor
movsl
inc
xor
or
addl
addl
int
popf
aam
shlb
or
xchg
aam
int
icebp
int
xchg
or
or
or
pushf
stos
sahf
popa
mov
mov
mov
roll
int
or
adc
int
mov
lods
xchg
lret
rorb
in
push
int
or
daa
addl
or
mov
gs
addl
xchg
or
addb
xor
int
mov
int
xor
xor
lea
das
add
addb
int
mov
cli
test
int
jge
xacquire
insl
insb
shrb
outsl
lods
xchg
inc
addl
lea
cli
test
mov
and
xchg
mov
dec
ja
pop
rcll
int
fidivl
jecxz
xchg
or
in
inc
add
test
jecxz
jecxz
movsl
pop
cmpsb
lods
addb
lods
mov
mov
addb
shll
test
add
leave
int
or
cmpb
movsl
jecxz
mov
in
in
addb
movsl
int
mov
rcll
leave
xor
pop
jbe
jnp
int
xor
movsl
int
cmp
inc
inc
add
jle
clc
or
std
das
pop
adc
cmp
or
add
mov
xor
les
int
sub
stc
xor
sbb
inc
int
inc
int
std
xor
xor
pusha
lret
arpl
test
xor
in
popf
adc
addb
shl
mov
and
mov
jbe
shrl
lods
or
stc
test
int
jne
pop
insl
shl
test
in
xchg
pop
insl
xchg
int
jge
les
xor
les
adc
addb
mov
shll
xor
ja
lret
je
pop
shl
mov
xchg
xor
int
das
mov
push
das
rcll
pop
mov
ja
int
pop
orb
jmp
mov
insl
iret
les
test
mov
xor
mov
insl
add
or
cwtl
int
mov
int
int
jns
mov
sub
add
cwtl
int
jns
test
add
mov
jns
xchg
cmp
add
add
inc
addl
leave
jbe
inc
and
or
int
stc
int
stc
pop
cwtl
lcall
ljmp
cmp
sarl
jbe
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
leave
jbe
dec
and
mov
and
sarb
jbe
or
sarb
ror
jbe
jo
addb
addb
stc
cmp
cmp
sarl
push
rorb
jbe
int
stc
int
stc
cmp
cmp
sarl
push
rorb
jbe
leave
jbe
arpl
lods
pop
addb
addb
add
iret
push
xchg
incl
add
add
lea
xchg
fcmove
jbe
dec
insb
addb
stc
cmp
sarl
cmp
shl
sub
or
int
stc
int
stc
add
cmc
cmpb
sarl
repnz
or
mov
sbb
addb
push
or
int
dec
or
int
mov
cmc
or
rolb
mov
in
or
push
addl
lea
or
pop
addl
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
mov
add
mov
jbe
int
xor
addb
int
adc
adc
add
int
mov
mov
int
xchg
rolb
bound
jno
cmp
push
push
add
add
cmpsl
aad
leave
push
pop
add
add
adc
add
mov
push
insb
add
add
iret
outsb
add
add
insl
leave
push
sub
add
push
cmpsl
aad
leave
push
xor
add
push
xor
cmp
add
mov
push
inc
add
add
iret
addr16
add
add
jbe
int
adc
mov
int
mov
add
addb
mov
leave
jbe
mov
cmp
leave
jbe
xlat
sbb
push
les
add
push
cmpsl
aad
leave
push
nop
add
add
xlat
inc
leave
push
aam
add
cmp
jge
push
faddl
add
mov
shll
add
xlat
sbb
push
pushf
add
add
cmpsl
aad
leave
push
movsb
add
add
xlat
inc
leave
push
lods
add
add
dec
push
jge
push
mov
add
mov
shll
add
ret
sbb
jo
jbe
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
lea
testb
int
mov
lds
psrlq
sub
mov
lea
insl
inc
shrl
or
addl
int
mov
rclb
addl
add
addb
jo
cwtl
xor
lea
addb
int
adc
mov
insl
iret
pop
pushf
add
add
jo
jbe
int
inc
addl
adc
pop
adc
mov
insl
iret
pop
les
add
mov
jo
jbe
int
inc
addl
mov
pop
adc
mov
insl
iret
pop
push
add
add
jo
jbe
int
inc
addl
pop
orb
xor
push
cmp
sahf
clc
add
shrb
pop
shlb
xchg
xor
int
pop
add
mov
adc
int
mov
pop
adc
mov
insl
iret
xchg
add
jo
jbe
int
cmp
push
add
in
test
or
add
pop
sub
sub
lea
ljmp
sarl
push
ror
pop
cmc
incl
add
jo
jbe
int
stc
int
mov
lds
lock
push
ror
pop
xchg
incl
add
jo
xchg
or
xchg
stc
cmp
jmp
shr
sub
inc
jge
mov
jbe
addl
cmp
sarl
repnz
xchg
or
int
cmp
int
mov
lea
sarl
push
roll
xchg
int
mov
lea
shl
sub
mov
lea
insl
inc
shrl
pop
push
incl
add
ljmp
lea
jge
xor
mov
jbe
jo
stc
jl
orb
jne
sbb
jbe
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
push
mov
jbe
int
stc
cmp
cmp
shl
sub
mov
lea
shrl
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
std
inc
shrl
add
int
stc
int
stc
cmp
cmp
sarl
push
shr
adc
lea
or
cltd
shr
xchg
shr
sub
xchg
int
std
inc
roll
or
int
jne
jbe
ret
dec
and
leave
jbe
inc
and
int
inc
cmp
cmp
sarl
push
rorl
jbe
int
inc
int
inc
cmp
cmp
sarl
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
lds
psrlq
sub
mov
lea
push
xchg
addb
cmp
jns
or
lods
sub
jmp
push
jge
jbe
xor
cmp
clc
add
jbe
int
sbb
lds
psrlq
sub
mov
lea
int
sbb
lds
psrlq
push
rorl
jbe
int
cmp
lds
psrlq
push
ror
lea
jbe
int
inc
int
inc
cmp
cmp
shl
sub
mov
lea
pusha
xchg
addb
or
jbe
or
xchg
or
pop
inc
and
leave
jbe
cmp
xchg
and
int
xchg
int
xchg
cmp
cmp
sarl
push
rorl
jbe
int
jmp
addl
add
and
push
xchg
add
add
and
insl
int
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
cmp
shl
sub
mov
lea
rcl
int
adc
or
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
jo
add
int
jo
add
cmp
cmp
ljmp
pop
lea
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
sarl
repnz
int
jge
rcl
int
pop
int
pop
cmp
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
xchg
add
add
pop
xchg
add
add
lds
cltd
sarl
push
rolb
test
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
xor
sub
mov
lea
xchg
pop
cmp
cltd
shr
xchg
shr
sub
das
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
pop
cmp
shl
sub
xchg
push
ror
lea
lea
xchg
push
ror
lea
sub
or
int
popf
int
popf
cmp
shl
sub
xchg
push
ror
lea
or
jmp
cmp
adc
xchg
in
sbb
jbe
int
popf
cmp
cmp
sarl
push
roll
push
int
popf
int
popf
cmp
sarl
repnz
int
lods
xor
jbe
int
popf
cmp
cmp
mov
xchg
push
das
rcl
inc
shrl
pop
adc
add
int
stc
int
stc
int
std
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
stc
int
stc
add
xor
shr
xchg
shr
sub
jno
jo
int
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
or
inc
jge
add
int
stc
in
int
or
push
cmpsb
lods
int
lods
shr
xchg
cmp
lods
sub
int
jne
dec
orl
mov
lea
or
cltd
shr
sub
jmp
push
adc
xchg
mov
jge
jbe
cmp
add
std
add
std
shr
sub
leave
int
std
int
std
shr
xchg
shr
sub
cmp
inc
rcl
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
int
or
int
xor
jbe
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
std
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
jne
jbe
int
mov
lea
shl
sub
mov
stc
or
leave
jbe
imul
imul
gs
into
and
addb
sarl
lds
jbe
rol
lods
xchg
or
int
cmp
lods
sub
lods
lret
int3
das
imul
lret
inc
rcl
jle
jbe
int
mov
jbe
int
mov
jns
or
lods
sub
jmp
push
jge
jbe
cmp
lods
sub
lods
cmp
xchg
jbe
add
std
add
std
shr
sub
lock
and
jbe
in
and
jbe
int
stc
cmp
cmp
sarl
push
ror
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
or
out
leave
jbe
mov
xchg
and
dec
mov
lods
imul
and
xor
jbe
int
lods
int
lods
cmp
jmp
cmp
adc
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jo
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lea
cmp
shr
xchg
shr
sub
jno
jo
int
mov
jbe
int
mov
or
jns
jmp
shrl
jbe
inc
jge
add
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
inc
lea
addb
and
add
mov
lea
add
lea
jmp
add
scas
or
aaa
sbb
add
addb
add
add
add
jno
cmp
add
add
lods
jno
lea
lea
shll
jno
mov
or
int
mov
lea
add
addl
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
add
int
rcl
insl
xchg
cmp
inc
leave
int
mov
lea
addb
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jne
jo
int
lods
or
int
cmp
cmp
or
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lods
add
int
std
or
int
jne
out
or
leave
jbe
inc
and
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
int
push
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
jns
or
jmp
shrl
lea
push
xchg
addb
xchg
int
inc
cmp
cmp
sarl
push
jge
jbe
xor
cmp
clc
add
jbe
int
lods
int
lods
cmp
or
jmp
shrl
lea
int
lods
int
lods
cmp
or
lods
sub
jmp
push
rorl
jbe
int
xchg
int
xchg
cmp
or
lods
sub
jmp
push
ror
lea
jbe
int
push
int
push
cmp
or
jmp
shrl
lea
pusha
xchg
addb
or
jbe
or
cmp
inc
and
leave
jbe
cmp
xchg
and
int
cmp
jns
or
lods
sub
jmp
push
rorl
jbe
int
jmp
addl
add
and
push
jl
add
mull
xchg
int
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
jns
jmp
shrl
lea
rcl
int
gs
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
mov
add
int
mov
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
lods
sub
or
jmp
push
ror
lea
rcl
int
insl
int
insl
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
jl
add
int
jl
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
and
or
jns
jmp
shrl
lea
xchg
insl
cmp
cmp
shl
sub
repz
push
adc
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
insl
cmp
jmp
cmp
lods
sub
int
or
lea
sub
int
cmp
xchg
push
rorl
jbe
int
popf
int
popf
cmp
jmp
cmp
lods
sub
int
popf
int
popf
cmp
shl
sub
aad
repz
push
adc
xchg
in
sbb
jbe
int
popf
cmp
or
lods
sub
jmp
push
roll
inc
int
popf
int
popf
cmp
lods
sub
or
jmp
push
ror
lea
popf
int
popf
cmp
aad
repz
shrl
xchg
inc
das
rcl
inc
shrl
pop
adc
add
int
mov
dec
iret
jbe
add
mov
jbe
int
xchg
addl
icebp
addl
jne
test
addb
stc
int
stc
cmp
cmp
shl
sub
mov
lea
rcl
push
int
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
stos
test
lret
rorb
add
and
int
int
sub
pop
subb
dec
addl
addb
das
add
int
or
das
add
add
int3
addb
addb
add
int
and
mov
or
xor
shrb
mov
mov
mov
das
add
iret
jl
pop
or
add
or
add
cmc
subb
xchg
das
mov
mov
mov
in
push
push
aam
int
add
stc
subb
xchg
mov
sahf
dec
xchg
aam
iret
ficoms
out
int
std
int
push
add
xchg
cmpsb
mov
and
das
mov
sahf
dec
add
add
std
mov
sbb
mov
mov
add
add
mov
pop
out
subb
jo
das
mov
adc
mov
pop
xchg
adc
or
arpl
insl
insb
in
xchg
cmp
lret
lds
sub
jbe
add
xor
fstpl
add
inc
pop
pushf
test
insl
insb
in
fmul
insb
faddl
and
jo
int
adc
fcompl
lea
std
inc
clc
jnp
or
std
or
fsub
inc
pushf
adc
xchg
mov
int
iret
push
ror
push
add
ds
mov
out
inc
stc
fdivs
int
dec
int
in
popf
inc
cld
ja
int
in
mov
out
or
adc
not
dec
int
stc
dec
or
sbbb
cmp
test
lret
rorb
add
push
pop
cwtl
pop
dec
and
leave
jbe
inc
and
int
std
lcall
psrlq
xchg
stos
cmp
shl
sub
or
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
leave
jbe
fadd
loope
int
std
int
std
cmp
cmp
shl
sub
jmp
push
or
cmpsb
dec
int
sub
push
das
add
int
std
int
std
cmp
cmp
shr
xchg
shl
sub
inc
adc
add
int
add
std
int
std
cmp
xchg
shl
sub
inc
adc
add
xchg
int
cmp
shl
xchg
shl
sub
or
inc
icebp
aam
int
std
int
std
cmp
cmp
ljmp
int
adc
adc
test
xor
jbe
int
std
cmp
cmp
ljmp
int
adc
adc
je
xor
add
int
std
int
std
int
std
int
std
cmp
cmp
in
xchg
push
popf
int
adc
adc
ror
jl
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
int
std
or
lea
cltd
cmp
shl
sub
repz
push
jecxz
lea
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
jbe
popa
and
or
in
int
dec
int
adc
xor
jbe
add
in
int
adc
dec
leave
jbe
popl
dec
pop
xchg
xchg
std
cmp
cmp
shr
xchg
shr
sub
or
inc
jge
pop
int
stc
int
stc
cmp
lock
sub
mov
lea
fnstcw
psrlq
sub
int
adc
xchg
push
jecxz
rcl
bound
jo
int
std
int
std
cmp
lock
push
roll
mov
and
jbe
int
popf
cmp
cmp
mov
push
jge
fldt
pop
xchg
add
add
jbe
int
std
cmp
lock
push
roll
mov
and
jbe
int
stc
cmp
lock
push
roll
addl
leave
jbe
fdivr
sbb
int
std
int
std
cmp
xchg
shrl
sbb
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
cmp
shrl
push
jge
jbe
inc
jge
xchg
test
jbe
int
sbb
jbe
int
std
cmp
lock
sub
mov
in
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
in
shr
sub
aam
int
in
int
dec
int
adc
lret
jno
mov
jo
in
push
int
cmc
xchg
int
dec
int
adc
xchg
jo
mov
jno
or
int
std
int
std
cmp
lock
sub
mov
cmc
inc
ror
jbe
int
stc
xor
jns
lock
push
roll
cmp
cmp
repnz
mov
cmc
das
rcl
int
lods
or
stc
cmp
lock
push
roll
int
std
cmp
cmp
repnz
mov
lea
push
or
add
int
adc
lea
insb
sarl
test
int
icebp
push
dec
and
add
int
std
int
std
cmp
lock
push
rcrl
mov
stc
int
stc
in
xchg
jbe
int
std
cmp
cmp
shl
sub
mov
arpl
rorb
add
xor
jbe
dec
and
inc
and
or
cwtl
int
int
std
int
std
sar
shll
xchg
cltd
shr
sub
mov
xchg
mov
das
add
int
mov
xchg
mov
xchg
cmc
leave
jbe
popa
and
int
stc
cmp
rcl
mov
xchg
std
int
std
cmp
cmp
shr
sub
repz
push
fxch
out
pop
xchg
leave
fsubrl
add
int
cmc
int
mov
or
mov
out
xor
pop
int
std
cmp
cmp
in
push
cld
or
add
int
std
int
std
cmp
cmp
shl
xchg
shr
sub
or
mov
xchg
out
cmp
cmp
shl
xchg
shr
sub
jmp
addb
std
add
cmp
sarl
push
cltd
iret
ja
jecxz
inc
cltd
das
add
addb
jo
or
mov
mov
das
addb
in
xchg
int
in
xchg
repz
mov
mov
adc
dec
and
or
int
in
cmp
add
call
repz
sarl
xchg
mov
xchg
in
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
in
int
movsl
addl
mov
push
xchg
add
add
stc
int
stc
cmp
add
call
mov
push
cltd
int
adc
out
inc
aam
in
sub
xchg
std
int
std
cmp
add
call
repz
sarl
cltd
int
test
das
push
test
add
arpl
jbe
cmp
int
lods
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
adc
xchg
addb
and
inc
and
int
std
cwtl
lcall
xor
xchg
mov
sub
or
int
std
int
std
cmp
mov
repnz
or
int
and
jbe
int
in
cmp
or
adc
dec
mov
cmc
int
cmc
cmp
or
adc
dec
lahf
xchg
lea
cmp
or
adc
imul
mov
lea
mov
jbe
dec
and
hlt
mov
insl
das
add
int
dec
push
insl
das
add
int
sbb
insl
das
add
int
and
jbe
int
mov
mov
addb
addl
cmp
mov
repnz
or
int
std
int
std
int
mov
lea
outsb
jo
lea
insl
das
add
leave
jbe
dec
and
int
xchg
pop
int
xchg
cmp
loop
mov
push
popf
or
int
std
int
sub
xor
bound
int
std
int
std
int
and
sbb
xchg
dec
inc
fst
push
cmc
int
adc
lods
int
cmc
cmp
add
call
jmp
shr
sub
int
dec
bound
xchg
jo
add
int
dec
int
xchg
int
jo
jge
xchg
jo
dec
xchg
int
xor
sbb
xchg
xchg
add
mov
or
pop
fs
das
mov
xor
jbe
int
std
int
std
cmp
add
shl
sub
mov
mov
and
jge
add
int
std
int
std
cmp
add
shl
sub
mov
jbe
int
stc
int
stc
add
cmp
repnz
mov
mov
pop
lea
addb
mov
lea
xchg
lea
or
jl
icebp
aam
clc
icebp
sub
xchg
in
xchg
int
jo
outsb
test
test
int
mov
lea
xchg
std
cmp
add
call
jmp
shr
sub
pop
lea
mov
popf
int
test
lds
add
sbb
stc
int
stc
cmp
shr
xchg
add
incl
push
adc
and
jbe
int
stc
int
stc
add
cmp
repnz
mov
lea
mov
pop
lea
add
int
and
sbb
cmp
lea
int
adc
lods
int
adc
sti
call
jmp
shr
sub
int
dec
bound
xchg
xchg
pop
add
push
insl
das
add
int
and
or
or
cmp
add
call
jmp
shrl
add
int
std
int
std
cmp
add
sarl
push
rorl
jbe
pop
push
jl
or
leave
jbe
sbb
shr
lahf
xchg
jbe
dec
and
xchg
iret
inc
shl
xchg
adc
scas
cmp
lea
add
cli
xchg
xchg
add
or
mov
jbe
or
iret
outsb
std
iret
jno
or
or
leave
push
jo
add
sub
pushf
add
add
pop
movsb
add
add
push
lods
add
add
xchg
add
sbb
les
add
popa
lahf
xchg
add
sbb
aam
add
call
iret
faddl
add
leave
push
in
add
mov
add
jbe
and
or
jbe
inc
lahf
xchg
jbe
pusha
lahf
xchg
and
int3
push
jo
add
shr
xchg
add
scas
or
test
add
sbb
addl
add
int
adc
inc
add
add
add
or
iret
jbe
jo
or
push
int
jge
icebp
int
std
int
std
cmp
add
sarl
push
rorl
jbe
int
std
int
std
cmp
add
call
lods
sub
jmp
push
jge
jbe
inc
rcl
xchg
or
in
das
int
int
jne
jbe
int
mov
int
sbb
mov
addl
addl
int
sub
xchg
dec
int
cmp
xor
jo
int
stc
int
stc
cmp
add
sarl
push
rorl
jbe
int
and
pop
mov
push
insl
das
add
add
and
lock
mov
push
insl
das
add
int
and
lock
mov
push
insl
das
add
lcall
push
insl
das
add
int
and
sbb
sbb
or
addl
int
dec
add
and
or
or
cmp
add
call
jmp
shrl
dec
and
int
mov
jbe
shr
xchg
adc
scas
cmp
sbb
insb
cmp
lea
lds
outsb
adc
jbe
leave
addb
sub
pushf
test
jbe
int
sub
outsb
mov
jbe
int
sub
outsb
dec
in
adc
jbe
int
cmp
lea
lds
outsb
adc
jbe
add
or
icebp
addl
cmp
int
arpl
xchg
cmp
test
shlb
xchg
int
jno
das
mov
mov
mov
leave
jbe
dec
and
push
lret
aam
popa
shll
xchg
out
xchg
pop
out
orb
mov
pop
out
cmpb
std
int
std
cmp
add
call
jmp
in
xchg
push
cld
add
std
add
test
sub
adc
dec
and
int
std
int
std
cmp
add
call
jmp
shr
sub
inc
stc
xorb
rorb
add
push
leave
jbe
mov
jbe
xchg
addb
addb
test
lods
addb
addb
addb
addb
addb
addb
addb
mov
stc
cmp
clc
add
repnz
and
movb
addb
or
cmc
icebp
lea
jnp
addb
addb
std
ss
pushf
addb
int
push
jp
addb
int
std
xchg
int
std
xchg
xor
jbe
int
in
sbb
cmpb
int
mov
fadds
jbe
xchg
popa
fists
xor
xchg
int
xor
out
adc
mov
subb
int
xchg
adc
mov
addb
clc
int
icebp
push
out
addb
icebp
adc
pop
push
addb
add
add
adcb
pop
cwtl
lcall
or
adc
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
movsl
dec
bound
addb
dec
pop
and
pop
xchg
mov
stc
xor
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
fisubrl
ret
add
clc
test
push
addb
int
mov
leave
das
sarl
fisttpl
xchg
mov
popa
addb
push
addb
addb
addb
addb
pop
lcall
xchg
lods
int
mov
int
popf
xor
int
xchg
cmpsb
push
addb
mov
ret
jbe
int
icebp
int
or
int
xchg
xor
inc
test
inc
or
rol
addb
cmp
clc
hlt
int
gs
ss
push
addb
add
xchg
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
hlt
int
dec
xor
int
mov
leave
das
rol
int
xor
das
pop
pop
add
add
mov
in
jo
jbe
xchg
aaa
ficoms
pop
mov
jbe
leave
jbe
mov
jbe
leave
jbe
fidivs
ficoms
or
pop
leave
jbe
scas
aaa
ficoms
or
cwtl
lcall
adc
jbe
cmp
cmp
pop
dec
and
out
ficoms
jp
jbe
int
or
iret
xchg
addl
push
ror
je
ror
xor
pushf
test
inc
loop
shr
xchg
int
int
test
insl
adc
cmpsb
mov
or
xchg
in
inc
jbe
das
or
jbe
add
mov
int
stc
push
insl
aam
cmp
out
int
mov
fs
xchg
mov
lret
xchg
add
xchg
stc
xchg
lret
int
lods
or
lret
int
stc
xchg
int
mov
adc
int
cmc
insb
add
std
sarl
push
sarb
rorl
jbe
push
cmc
int
cmc
add
call
repz
shrl
xchg
stc
inc
rolb
int
adc
xchg
stc
int
mov
test
int
stc
iret
adc
int
dec
shl
sub
cmp
or
push
adc
xchg
adc
call
repz
shrl
xchg
stc
xchg
xor
or
inc
lds
pop
outsl
add
add
jbe
int
mov
ljmp
mov
ror
popf
int
cmp
in
or
or
add
in
xchg
or
test
lret
rorb
add
adc
jbe
leave
jbe
dec
and
inc
and
cwtl
or
leave
jbe
into
and
in
inc
sbb
int
std
sar
shll
xchg
repnz
adc
out
xchg
push
add
lea
int
adc
jge
jmp
shr
sub
das
roll
jmp
addb
xchg
stc
cmp
shr
sub
jge
jmp
push
adc
xchg
std
int
std
cmp
cmp
shl
xchg
shl
sub
push
adc
xchg
stc
int
stc
aam
cmp
shl
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
int
in
int
in
cmp
loope
jmp
shl
sub
cmp
in
sub
lock
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
or
int
std
cmp
jmp
shr
sub
xchg
int
cmc
int
cmc
cmp
cmp
ljmp
int
std
int
std
cmp
cmp
shl
sub
repz
push
aad
adc
das
pop
pop
add
add
jbe
int
mov
jbe
arpl
rolb
insl
pop
jbe
aam
pop
jbe
fdivs
lret
or
das
adc
in
addb
lea
lret
or
insb
inc
jbe
subb
stc
std
add
cmpsb
rorb
adc
cmp
addb
xchg
jbe
inc
and
dec
sub
jno
cli
arpl
jbe
int
adc
subl
repnz
or
leave
jbe
into
and
inc
sbb
mov
int
std
int
std
cmp
shl
sub
jns
mov
lea
int
adc
jmp
shr
sub
das
rcl
in
outsb
int
cmc
int
cmc
sarl
push
sarl
lds
jbe
iret
jbe
jo
mov
jbe
int
stc
int
cmc
or
add
jbe
int
std
cmp
lock
push
roll
cmc
int
in
int
in
cmp
shl
sub
jns
mov
std
int
std
cmp
cmp
shr
xchg
shr
sub
xor
int
cmc
inc
jge
mov
jbe
int
mov
jns
lock
push
rorl
jbe
leave
jbe
bound
xchg
addb
jbe
cmp
shrl
jmp
push
jge
jbe
aad
or
int
mov
orb
in
lret
int
stc
das
pop
insl
cmp
or
int
in
int
in
cmp
mov
repnz
int
cmc
sub
int
push
popf
cld
add
int
popf
cmp
or
int
std
int
std
cmp
lock
push
roll
std
int
std
cmp
lock
push
sarl
jbe
int
adc
lea
cmp
cmp
repnz
mov
lea
imul
add
jbe
int
mov
jns
lock
sub
mov
int
stc
test
shll
rolb
in
xor
lret
pop
lcall
addb
roll
cwtl
sub
lahf
xor
std
or
stc
mov
lret
cmp
leave
jbe
adc
addb
mov
jecxz
mov
stc
iret
dec
into
mov
pop
das
mov
mov
das
mov
mov
fs
adc
das
mov
mov
mov
jge
pop
cmc
aam
leave
jbe
sbb
stc
int
mov
jecxz
mov
inc
in
dec
add
leave
jbe
push
addb
int
mov
lret
pop
dec
sub
push
add
add
cmc
sbb
push
jb
add
cmp
arpl
rolb
jecxz
mov
mov
adc
int
add
mov
inc
add
mov
adc
iret
js
or
iret
js
or
iret
js
or
iret
pop
or
cmp
addb
or
jbe
iret
pop
out
addb
pop
xor
pop
iret
pop
inc
addl
pop
xchg
addl
addb
xchg
icebp
or
or
mov
adc
or
and
lea
out
cmp
adc
jnp
ficoms
das
inc
cli
xchg
rcll
xchg
or
mov
out
int
or
cmp
shl
sub
int
mov
addb
cld
push
lock
stc
das
add
adc
mov
or
and
jbe
mov
movsl
int
jge
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
add
add
add
lea
or
lea
icebp
mov
dec
stc
pop
sbb
mov
xor
std
xor
icebp
mov
xchg
adc
add
mov
jmp
and
lea
cmpsb
or
shr
sub
notl
shr
xchg
push
lock
aaa
ficoms
or
or
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
push
comiss
xor
add
int
stc
push
imull
add
int
fs
push
faddl
int
and
jp
int
sbb
cltd
or
xchg
xchg
in
or
or
xchg
cmpsb
cmc
cmp
or
fcom
in
xchg
jbe
int
or
inc
lcall
ja
int
mov
xchg
mov
and
or
xchg
sbb
mov
jbe
or
push
addb
pusha
adc
jo
jbe
int
xor
int
stc
int
in
push
insl
aam
int
std
or
std
test
lea
movsl
push
or
or
int
test
lret
rolb
int
mov
pop
adc
mov
int
cmp
lret
pop
mov
shll
fwait
sbb
cwtl
int
pop
lahf
xor
cmp
jecxz
mov
xchg
add
xchg
das
mov
repz
mov
sbb
lds
sbb
jmp
dec
add
addl
mov
lret
cli
sbb
adc
or
sbb
leave
stos
lds
mov
addb
and
cmc
xchg
aaa
ficoms
or
aaa
ficoms
or
jbe
dec
and
inc
and
out
ficoms
or
fidivs
ficoms
or
int
adc
inc
icebp
xchg
shl
xchg
int
in
int
adc
ljmp
cmp
cmp
push
jns
jbe
iret
jbe
or
int
or
xor
ficoms
or
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
or
nop
add
add
lea
icebp
cmp
shr
sub
jmp
push
adc
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
popf
cmp
in
push
aad
int3
pop
aam
add
int
xor
xchg
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
cltd
shl
xchg
shl
sub
int
std
cmp
mov
shl
sub
xchg
int
adc
int3
pop
aam
add
int
adc
add
shl
sub
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
repz
shl
sub
xchg
int
std
int
std
cmp
in
shl
xchg
push
aad
adc
add
add
push
nop
add
add
jbe
int
std
sar
cmp
or
mov
push
shll
jbe
iret
or
addb
addb
int
push
or
lea
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
xor
repnz
inc
mov
int
lods
int
mov
inc
jge
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
push
shl
sub
cmp
inc
sti
add
int
std
int
std
cmp
repnz
jns
mov
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
or
nop
add
add
jbe
int
int
mov
aad
jmp
shr
sub
or
add
jbe
int
int
std
int
std
cmp
shr
xchg
int
jo
aad
ljmp
aam
add
int
sbb
lea
or
repnz
jns
mov
std
int
std
cmp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
hlt
call
in
push
aad
adc
add
add
jbe
int
std
add
call
repnz
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
int
std
add
cmp
shr
sub
jmp
push
adc
pop
nop
add
add
xchg
std
int
std
xchg
cmp
int3
push
aam
add
int
sub
hlt
call
repz
shl
sub
iret
or
addb
addb
xchg
and
insl
aam
int
in
int
adc
inc
jge
shr
xchg
int
int
int
in
int
adc
fidivrl
lock
push
adc
xor
jo
xchg
push
in
push
int
int
push
lret
or
int
cmc
int
stc
das
inc
jge
shr
xchg
int
cmc
int
stc
cmp
cmp
shl
sub
lea
push
lds
int
inc
jo
lea
or
xchg
xchg
push
int
dec
int
int
xchg
sbb
dec
xchg
sub
lea
int
int
push
xor
int
int
xchg
jbe
or
das
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
or
int
xor
les
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
lea
leave
cmp
add
stc
push
inc
shrl
add
addb
movsb
dec
mov
jge
cmpsb
xor
lea
xchg
das
inc
rcll
jbe
int
xchg
shrl
cmp
cmp
push
or
cmpsb
stc
das
inc
popf
xchg
or
int
cmc
push
out
add
dec
shr
xchg
int
stc
cmp
mov
int
cmc
int
stc
das
inc
or
shrl
shr
xchg
int
stc
cmp
shrl
cmp
push
fcmovne
lea
mov
ror
icebp
or
int
xchg
das
inc
rcll
jbe
int
xchg
shrl
das
mov
cmp
dec
or
rorl
mov
or
and
shrl
ficoms
cmp
fidivs
ficoms
ss
or
cs
int
xor
add
mov
int
xor
xchg
int
orl
push
and
add
in
test
int
adc
jbe
leave
jbe
scas
aaa
ficoms
or
int
jne
inc
jge
shr
xchg
int
insl
int
jne
repnz
lea
cmp
cmp
push
shl
int
inc
inc
mov
int
xor
xor
insb
test
jbe
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
fnstsw
leave
push
sub
adc
push
mov
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
xchg
shl
sub
xchg
or
nop
add
add
lea
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
cltd
cmp
in
push
aad
int3
pop
aam
add
int
sbb
xchg
sbb
icebp
shr
sub
psrlq
xchg
push
adc
xchg
std
int
std
cmp
cltd
shl
sub
repz
push
aad
cmpsb
std
cmp
hlt
call
mov
push
lds
aam
add
int
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
iret
xchg
movsl
or
add
iret
nop
add
add
std
int
std
cmp
int
sub
icebp
shr
xchg
shr
sub
jno
pop
out
addb
addl
add
dec
int
mov
mov
dec
int
cmc
int
stc
das
inc
jecxz
shl
xchg
int
cmc
int
stc
cmp
shr
sub
xchg
cmc
cmp
push
bswap
stc
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
cmp
int
stc
cmp
push
flds
dec
sarl
add
int
or
rclb
xchg
int
add
inc
pop
cwtl
lcall
popf
aaa
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
leave
jbe
dec
mov
cmc
dec
lahf
xchg
and
cmp
xchg
and
jbe
int
sbb
shlb
jbe
int
sbb
add
xor
pop
xchg
fs
popf
int
and
out
int
movsl
das
inc
add
out
int
movsl
adc
cmpsb
mov
shr
sub
pop
push
aad
nop
int
or
int
xor
xchg
dec
iret
xchg
lods
bound
stc
jno
cwtl
add
sbb
jbe
add
mov
cmc
add
adc
in
jo
jbe
jo
stos
clc
add
or
int
sbb
lea
outsb
adc
jbe
leave
addb
lods
int
and
outsb
test
jbe
int
and
outsb
mov
jbe
int
and
outsb
dec
int
and
insb
and
addb
sbb
lea
or
and
xorb
or
int
std
stos
test
lret
rcrb
xchg
int
int
dec
adc
cmp
cwtl
lcall
push
mov
jbe
inc
and
dec
addb
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
int
mov
jbe
int
cmc
int
mov
or
or
pop
jle
addb
mov
insl
mov
sarl
xor
mov
nop
xchg
iret
sahf
int
mov
aad
or
mov
jno
int
mov
leave
xchg
mov
ficomps
or
pop
mov
or
lret
mov
or
insb
add
add
push
add
add
outsb
add
add
add
inc
mov
add
iret
outsb
xor
add
add
xor
add
mov
add
int
mov
add
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
cmpsb
mov
cmp
shl
sub
in
outsb
iret
aam
mov
int
das
mov
cmp
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
outsb
iret
aam
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
incl
add
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
je
push
jbe
add
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
mov
add
or
int
stc
pop
inc
pop
inc
xchg
or
daa
or
int
mov
add
int
mov
mov
xor
pusha
addl
addb
mov
add
int
mov
add
pop
es
push
std
incl
add
xor
push
incl
add
xor
push
addb
add
or
xchg
add
add
jbe
pop
dec
xor
iret
test
add
add
bound
add
pop
push
xor
iret
mov
add
add
pushf
mov
add
int
mov
add
pop
add
addb
add
cmp
adc
cmpb
add
mov
addb
add
pop
lcall
adc
add
int
xor
call
repnz
or
adc
jbe
int
dec
cmp
mov
shl
sub
leave
add
add
add
incl
add
jbe
int
xor
jns
mov
shl
sub
jo
push
stc
incl
add
jbe
int
cmp
push
sbb
add
inc
lret
fwait
xor
adc
icebp
or
int
stc
push
insl
aam
adc
or
fmull
int
dec
int
dec
sar
setl
icebp
shr
sub
jmp
push
adc
xchg
cmc
int
and
dec
das
push
popa
test
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
in
addb
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
add
pop
xor
mov
add
int
mov
add
pop
es
iret
sub
add
pop
daa
xor
iret
xor
add
add
test
add
add
xor
iret
cmp
add
add
mov
or
cmp
add
pop
fwait
xor
iret
inc
add
add
or
or
inc
add
add
xor
iret
dec
add
add
pop
addb
add
pop
cmp
addb
add
jns
movsl
cmpsl
pop
pop
adc
iret
push
add
add
pop
mov
add
jns
fisttps
jbe
inc
jns
loope
pop
fcom
addb
add
jns
lods
push
pop
jnp
addb
add
jns
repnz
ljmp
mov
add
jns
in
int
xor
xchg
xor
icebp
shr
xchg
shr
sub
in
xchg
int
xor
out
cmp
stc
shr
sub
xor
das
pop
mov
int
xor
out
cmp
stc
shr
sub
int
stc
add
adcl
fwait
addb
movsw
int
xor
lea
cmp
sub
repz
push
jecxz
stc
xchg
int
xor
out
cmp
xchg
shr
sub
add
mov
stc
inc
adc
int
xor
icebp
shr
xchg
shr
sub
or
adc
lea
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
movsl
or
add
xor
mov
rcl
int
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
cmp
cli
mov
add
cld
mov
add
cli
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
popa
mov
or
or
int
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
dec
int
dec
cmp
mov
jmp
mov
or
int
dec
int
dec
cmp
cmp
shr
xchg
shr
sub
int
dec
iret
mov
out
shl
xchg
cmp
shr
sub
das
mov
or
int
dec
int
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
int
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
xor
out
cmp
xchg
shr
sub
xchg
or
adc
lea
dec
int
mov
icebp
cmp
shr
xchg
shr
sub
iret
push
nop
incl
add
add
add
jbe
mov
int
xor
xchg
xor
cmp
stos
cmp
shr
xchg
shr
sub
or
add
jbe
int
dec
cmp
mov
repnz
aam
iret
push
adc
int
xor
lea
cmp
mov
repnz
jo
push
and
add
jo
jbe
rolb
int
dec
cmp
lock
mov
mov
push
ror
iret
movsb
incl
add
int3
push
sbb
jbe
mov
int
xor
xchg
xor
psrlq
xchg
add
call
ljmp
sbb
sub
xor
push
jo
add
iret
mov
mov
add
pop
adc
push
bound
add
int
mov
add
int
mov
add
add
sub
jge
or
mov
mov
mov
add
add
pusha
mov
add
iret
mov
or
les
add
int
mov
add
iret
loopne
pop
add
iret
enter
iret
mov
mov
add
mov
add
add
stc
mov
add
int
pop
leave
xor
iret
addb
add
jge
or
aam
add
int
mov
add
cmp
or
add
add
addr16
add
leave
push
lods
add
add
xor
fadds
add
jae
jno
mov
int
xor
xchg
xor
call
repnz
jns
mov
lea
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
addb
das
add
addb
xchg
xor
psrlq
xchg
add
call
ljmp
aad
cmp
add
lea
int
xor
psrlq
xchg
add
call
jmp
jge
int
lea
add
mov
repnz
mov
jecxz
lea
int
xor
psrlq
xchg
add
call
jmp
jge
or
add
lea
int
xor
sti
call
jmp
shr
sub
int
xor
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
pop
pop
add
add
cmpsb
mov
jne
jbe
int
mov
or
insb
test
jbe
int
jge
inc
jge
shr
xchg
int
jne
xchg
jge
leave
cmp
push
icebp
int
cmc
bound
jo
push
cmc
incl
add
repnz
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
iret
cmc
incl
add
mov
leave
cmp
push
rolb
das
push
push
addb
jbe
ficoms
pop
mov
jbe
or
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
xor
repnz
pop
xor
push
repnz
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
pop
xor
repnz
pop
sub
xchg
repnz
int
xor
mov
jle
xchg
lea
inc
rcll
jbe
int
icebp
cmp
shrl
ror
lea
push
jge
dec
int
popf
addl
jbe
int
xor
cmp
cmc
add
sub
and
sbb
adc
test
add
or
adc
add
int
cmp
fcoml
aam
int
cmp
fsubl
aam
int
adc
add
int
cmp
outsb
sbb
push
add
cmp
cmc
mov
stos
test
lret
shlb
xchg
int
jno
cwtl
leave
jbe
dec
and
inc
and
int
std
sar
shll
xchg
sti
sarl
push
jns
mov
int
std
aam
int
std
cmp
cmp
sarl
push
jns
dec
inc
adc
pop
int
xor
jbe
cmp
push
add
push
pop
lret
or
das
push
fcmovbe
dec
add
adcl
fwait
addb
dec
adc
in
addb
lea
lret
or
js
clc
orb
int
stc
cmp
int
stc
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
int
add
leave
jbe
dec
and
xchg
jbe
or
int
adc
add
lea
addl
lea
std
cwtl
lcall
jns
mov
shl
sub
or
int
std
int
std
cmp
mov
repnz
or
int
mov
insb
jo
mov
int
mov
insb
pop
int
mov
push
outsb
xchg
int
mov
sbb
insb
pop
int
mov
jle
jl
icebp
sub
jbe
int
pop
xchg
in
xchg
insb
xchg
or
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
sub
mov
jbe
int
std
int
std
cmp
cmp
repnz
mov
lea
or
jbe
cmp
xchg
and
imul
xchg
int
std
cmp
lock
push
rorl
jbe
int
mov
jbe
add
popf
add
dec
int
mov
neg
add
or
int
adc
insl
aam
int
popf
or
int
movsl
int
dec
xor
or
int
adc
lea
dec
int
movsl
inc
jge
sbb
jbe
int
dec
int
adc
outsb
mov
lea
test
xchg
jbe
inc
and
cmp
xchg
and
or
iret
jbe
or
iret
jbe
or
iret
jbe
or
int
std
int
std
cmp
lock
push
rorl
jbe
jmp
xchg
and
xchg
popf
iret
jbe
jo
xlat
filds
add
jbe
int
stc
cmp
lock
sub
mov
jbe
or
int
xchg
sarl
in
push
popf
or
int
stc
cmp
shl
sub
jns
mov
stc
int
stc
cmp
cmp
shr
xchg
shr
sub
xchg
int
movsl
or
sub
jbe
int
stc
cmp
lock
push
shll
dec
iret
jbe
jo
sti
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
std
int
std
cmp
lock
push
shll
dec
iret
jbe
jo
mov
jbe
int
cmc
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
lock
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
in
int
in
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
cmc
int
int
cmc
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
push
mov
jbe
int
adc
mov
cmpb
shl
sub
jns
mov
je
ror
lea
int
int
adc
and
psrlq
xchg
cmp
shr
sub
lret
rolb
int
in
int
int
in
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
cmc
addb
in
int
int
cmp
shl
sub
jns
mov
je
ror
lea
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
add
in
int
in
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
in
int
int
in
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
xor
jbe
jo
outsl
lods
add
int
pop
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
jbe
int
stc
int
stc
int
stc
int
stc
cmp
xchg
shrl
cmpsb
gs
xchg
cmp
add
std
add
std
shr
sub
hlt
dec
and
int
std
cmp
cmp
repnz
mov
lea
push
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shr
jle
addb
popf
iret
jbe
jo
jge
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shll
iret
jbe
jo
das
cli
add
int
std
int
std
cmp
lock
push
shll
iret
jbe
jo
sti
stc
add
int
popf
xchg
or
add
cmp
jbe
xchg
jo
push
fildl
add
jbe
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
mov
repnz
jo
cmp
jbe
jo
add
jbe
int
std
cmp
mov
repnz
jo
cmp
jbe
jo
jb
add
int
inc
int
inc
cmp
cmp
shr
xchg
shrl
lea
addl
jo
cmp
lea
add
jbe
int
cmp
cmp
jbe
int
stc
int
stc
cmp
shl
sub
jns
mov
lea
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
or
cli
add
int
mov
xor
in
adc
cwtl
lcall
add
xchg
mov
or
dec
int
mov
cmpsb
dec
or
pop
jnp
ficoms
cmp
pop
mov
adc
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
sbb
aad
sbb
das
adc
je
push
ja
xchg
shr
addl
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
popf
int
xor
cli
int
adc
inc
loope
shrl
cli
push
addb
push
popf
int
mov
bswap
dec
int
xor
cmpsb
adc
lods
std
add
std
shr
sub
ficoml
aaa
ficoms
adc
mov
clc
aam
ficoms
adc
mov
leave
sbb
push
jge
cltd
pop
mov
add
aaa
ficoms
cmp
adc
out
ficoms
sbb
das
adc
das
stos
push
in
xchg
imul
and
addb
dec
int
mov
out
cmp
pop
jnp
ficoms
cmp
das
inc
sti
xchg
shr
xchg
cmp
shl
sub
cmc
push
fxch
out
imul
cmpsb
and
and
cmpsb
adc
xchg
fiaddl
aam
add
xor
and
sub
std
add
sub
add
or
or
mov
out
cmp
cmp
das
inc
add
out
int
mov
cmpsb
dec
shr
sub
dec
cmc
cmp
push
clc
int
xor
cli
push
aad
cmpsb
adc
popf
int
int
xor
or
cmpsb
adc
inc
jge
shr
sub
fst
jmp
adc
addb
lock
icebp
sbb
and
mov
cmpsl
cmp
sbb
jbe
int
dec
int
mov
dec
adc
mov
jnp
ficoms
das
inc
jge
int
cmp
cmp
sarl
jmp
adc
addb
divps
test
aam
adc
gs
jo
mov
ss
das
sbb
mov
test
lret
shrb
xchg
int
add
dec
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cwtl
shl
sub
lea
cmpsb
mov
cmp
push
rorb
or
xor
mov
jbe
int
xor
addb
int
adc
adc
test
nop
jo
add
or
lea
jge
shr
xchg
int
mov
xchg
dec
add
and
jns
ficoml
or
iret
jbe
jo
add
sbb
repnz
adc
xor
dec
add
mov
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cmp
fcmovbe
repnz
das
push
rolb
aam
int
xor
lea
inc
jge
shr
xchg
int
xor
xchg
adc
jns
fcmovbe
repnz
lea
shrb
shll
or
adcb
lcall
xchg
inc
int
and
mov
jnp
ficoms
inc
icebp
das
or
addb
test
jnp
inc
hlt
mov
das
add
adc
jno
ficoms
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
cmpsb
aaa
ficoms
test
aam
adc
scas
aaa
ficoms
mov
das
add
adc
mov
ficoms
das
push
into
addl
sub
addl
adc
xor
dec
add
mov
jmp
addl
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
aaa
ficoms
test
aam
adc
fidivs
ficoms
mov
das
add
adc
out
ficoms
in
iret
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
mov
int
dec
xchg
sbb
or
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
fst
out
xchg
adc
addb
clc
ds
xor
adc
xchg
cmp
inc
int
xor
adc
xchg
xor
adc
out
int
adc
adc
jecxz
inc
sti
xchg
shr
sub
fstl
clc
addb
push
clc
int
cmp
aad
cmpsb
inc
cmp
cmp
lea
loope
cmp
shrl
subb
lea
shr
xchg
push
popf
xchg
int
adc
hlt
add
std
shr
sub
insl
adc
aam
ficoms
adc
mov
out
int
inc
add
std
adc
aam
ficoms
adc
mov
lock
and
aad
rclb
or
and
not
aaa
ficoms
cwtl
add
xor
sub
add
sbb
adc
xor
dec
add
mov
or
arpl
sarb
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
aad
clc
int
xor
cmpsb
adc
fsts
or
int
cmp
inc
int
xor
adc
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
cli
cmp
lea
inc
loope
cmp
push
cli
shrl
subb
push
popf
int
cmp
lea
int
cmp
hlt
int
inc
adc
mov
jnp
ficoms
das
inc
jge
shr
sub
jmp
cmp
adc
addb
lds
lea
out
int
adc
repnz
add
std
adc
aam
ficoms
adc
aam
ficoms
shr
sub
insl
adc
mov
hlt
mov
lock
jmp
incl
add
sbb
pop
aaa
ficoms
or
and
jbe
xchg
aaa
ficoms
or
int
adc
cmc
lcall
xchg
int
adc
out
jo
sti
cmpsb
mov
jno
xchg
std
int
dec
or
iret
jbe
add
mov
mov
dec
add
in
add
mov
adc
stos
or
int
std
test
rorb
add
stc
add
inc
cwtl
leave
je
xor
addb
addb
xor
xor
sub
and
sbb
adc
xor
dec
add
mov
int
mov
je
test
je
xor
insl
das
add
int
xor
push
insl
das
add
add
xor
add
xor
add
xor
int
xor
add
int
xor
int
xor
int
xor
iret
jbe
or
int
xor
xchg
or
int
xor
int
xor
int
xor
int
and
xor
aam
mov
add
sbb
or
xor
push
int
fs
xchg
sbb
push
int
xchg
pop
sbb
add
addl
dec
int
xor
xchg
or
or
xor
push
insl
das
push
cwtl
addl
addl
je
test
add
orb
xor
int
xor
int
or
int
or
int
xor
int
int3
addl
dec
int
xor
int
xor
int
popf
addl
or
imul
jns
add
sarl
push
jge
mov
leave
je
mov
je
xor
insl
aam
int
xor
add
adc
jl
cmp
and
add
xor
add
xor
add
xor
add
xor
int
xor
add
in
cmp
aam
and
aam
and
aam
and
je
push
add
in
and
aam
adc
je
cmp
icebp
in
xchg
je
xor
icebp
or
int
xor
push
insl
aam
int
xor
leave
add
and
mov
mov
int
movsl
addl
and
mov
mov
cmp
add
shl
sub
mov
mov
inc
rcl
and
je
test
mov
int
movsl
addl
addb
cmp
push
iret
jbe
or
int
xor
int
xor
int
in
addb
je
test
add
addl
or
or
adc
mov
int
in
addb
mov
sub
lds
insb
jae
bound
bound
add
insb
popa
inc
gs
fs
add
push
outsl
jns
add
jns
popa
outsl
bound
add
push
add
arpl
popa
insb
jne
gs
insl
imul
outsl
jb
jo
ja
gs
jb
bound
add
outsb
addr16
outsb
arpl
add
jne
je
outsb
push
popa
jb
add
jb
popa
insb
insl
je
outsl
ja
jb
jo
insl
jns
push
outsb
push
imul
inc
outsl
popa
insb
popa
imul
je
outsl
outsb
gs
inc
push
jns
jns
jne
imul
outsl
je
gs
outsl
je
imul
jo
popa
insb
dec
outsb
popa
jo
add
je
gs
jae
js
popa
data16
insb
popa
imul
gs
jb
inc
insb
popa
bound
je
insb
jns
push
popa
inc
popa
insb
insb
push
outsl
insl
outsl
jb
data16
jae
bound
add
outsb
gs
je
gs
add
outsl
inc
popa
imul
jo
fs
je
imul
outsl
add
jne
add
popa
add
add
add
insl
add
add
jb
ja
imul
outsb
add
add
ja
imul
push
add
je
jbe
add
je
add
insb
add
imul
outsl
add
je
popa
add
push
add
arpl
imul
add
outsl
add
add
jns
add
insb
add
jns
jbe
popa
add
popa
add
outsl
add
add
jb
jae
imul
imul
bound
outsl
add
imul
js
jae
outsl
add
popa
add
je
add
bound
jns
add
add
add
add
js
imul
imul
popa
add
add
add
ja
insb
add
popa
add
jo
popa
add
imul
add
jbe
add
jb
jne
je
insl
add
arpl
jne
jo
add
jae
outsl
add
imul
outsl
add
jb
jae
outsl
add
add
outsl
add
popa
add
jae
data16
jb
popa
add
add
add
adc
out
adc
js
adc
test
adc
fs
adc
jp
adc
enter
loop
adc
ja
adc
cmp
adc
rclb
adc
sbb
add
add
add
adc
mov
adc
out
sbb
adc
add
jbe
add
addl
cmp
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
or
add
push
adc
cmpsl
outsl
adc
push
popa
adc
add
add
jle
add
adc
mov
adc
aas
inc
adc
pop
and
add
jl
add
adc
inc
push
adc
mov
pop
adc
sub
add
ja
add
sbb
add
adc
or
adc
sbb
data16
xchg
bound
add
dec
adc
in
adc
sub
add
adc
imul
rolb
in
adc
mov
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
and
add
push
adc
testb
add
sbb
add
or
add
pop
adc
adc
cmp
add
sbb
add
adc
push
adc
mov
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addl
addl
pusha
adc
pop
js
add
dec
adc
cmp
adc
aam
adc
or
adc
pop
push
adc
mov
xor
add
and
adc
adc
add
dec
adc
jae
adc
dec
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
addl
cmp
dec
add
add
xor
add
add
add
add
add
add
add
adc
add
enter
in
add
testb
add
xchg
add
add
dec
xchg
add
add
add
add
mov
add
stos
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
pop
xchg
add
add
test
add
mov
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
push
mov
add
add
cmp
add
dec
mov
add
add
js
add
mov
add
lods
mov
add
add
fimuls
add
cli
mov
add
mov
add
add
mov
add
add
dec
mov
add
add
push
add
orb
add
mov
add
add
add
mov
add
add
add
mov
add
mov
add
mov
add
add
mov
add
add
pop
mov
add
add
xchg
add
movsb
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
add
xchg
add
add
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
add
add
mov
mov
add
mov
add
mov
add
mov
add
fs
add
add
je
outsl
jns
jb
jo
jb
jns
push
popa
add
pop
add
outsl
jo
jb
jns
push
add
pop
add
outsl
jo
jb
jns
push
add
dec
add
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
je
outsl
jns
inc
add
popa
addr16
imul
dec
insl
popa
addr16
outsl
jne
je
dec
add
popa
addr16
imul
outsl
jbe
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
push
add
gs
je
inc
imul
imul
jb
insl
push
add
xor
push
gs
popa
jb
je
outsl
jae
cmp
inc
gs
gs
popa
addr16
add
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
sbb
inc
gs
arpl
dec
outsb
outsw
add
add
arpl
outsl
jo
jo
outsb
jne
add
add
outsb
imul
push
arpl
add
popa
jb
jo
gs
add
add
je
insb
addr16
je
insl
push
gs
inc
add
push
outsb
gs
outsl
jo
jo
add
add
insl
outsl
jbe
push
jb
jo
add
push
push
outsb
outsl
ja
add
add
insb
insb
push
imul
outsl
arpl
mov
dec
outsl
popa
fs
outsb
jne
add
arpl
outsl
push
push
outsb
outsl
ja
add
add
jb
insb
insb
push
imul
add
popl
inc
gs
imul
outsl
arpl
add
add
popa
jb
jb
jbe
add
fs
je
push
arpl
xor
inc
gs
outsb
jne
je
insl
dec
inc
add
fs
outsl
je
data16
gs
popa
addr16
add
mov
dec
outsl
popa
fs
arpl
push
add
imul
popa
bound
add
inc
outsl
jb
addr16
jne
fs
imul
add
je
imul
js
inc
add
add
je
gs
popa
addr16
add
add
outsb
fs
gs
popa
addr16
add
das
add
je
arpl
gs
imul
add
imul
popa
jae
inc
js
add
and
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
dec
gs
popa
addr16
imul
inc
popa
jae
popa
fs
imul
add
add
imul
jae
js
repnz
jae
dec
gs
popa
addr16
add
add
je
jo
popa
je
push
outsb
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
test
fs
imul
add
ja
je
je
push
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
cmp
inc
push
jo
jb
jne
push
add
daa
add
je
gs
outsl
popa
jb
push
jns
add
inc
gs
jb
jo
add
dec
add
jo
push
arpl
sub
jb
gs
push
add
push
ja
jb
add
sub
inc
gs
popa
jae
inc
arpl
gs
outsl
jo
jo
add
fs
je
imul
inc
gs
imul
outsb
addr16
add
leave
add
jo
imul
imul
inc
push
dec
gs
push
add
push
push
inc
push
xor
cs
insb
add
xchg
add
insb
dec
outsb
imul
jb
outsb
add
fs
insb
cs
insb
add
dec
outsl
arpl
gs
outsb
outsw
push
add
inc
add
je
jb
arpl
fs
jae
add
roll
inc
jb
popa
je
inc
imul
outsb
addr16
add
sub
gs
popa
outsb
fs
gs
outsl
jne
je
add
add
gs
je
dec
popa
imul
popl
inc
gs
je
insl
dec
popa
insl
gs
add
pusha
add
je
jns
je
insl
push
imul
imul
jns
add
aas
add
fs
imul
add
xchg
add
outsl
bound
inc
insb
insb
outsl
arpl
xchg
add
imul
jne
jb
add
testl
imul
jb
inc
imul
jne
arpl
add
add
jbe
inc
imul
popa
imul
jo
imul
inc
gs
imul
jo
inc
add
and
gs
imul
bound
gs
add
add
jbe
inc
imul
add
jo
inc
imul
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
sub
gs
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
push
add
je
jb
jb
je
arpl
push
arpl
outsb
add
jg
inc
outsl
insb
fs
je
imul
insb
jae
jb
outsb
inc
add
sahf
add
je
outsl
insl
insl
push
imul
add
gs
push
push
imul
inc
push
dec
inc
dec
xor
cs
insb
add
mov
push
outsl
insb
jns
outsl
outsb
add
gs
bound
arpl
add
gs
inc
inc
add
roll
push
gs
arpl
push
arpl
jmp
push
gs
popa
jo
outsl
fs
leave
add
jne
fs
arpl
add
je
insb
je
add
insb
imul
je
add
jge
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
push
gs
inc
js
outsb
je
outsl
imul
push
arpl
gs
imul
inc
js
inc
js
add
add
insb
arpl
imul
add
je
gs
inc
outsl
insb
outsl
jb
add
push
imul
inc
outsl
insl
bound
gs
outsb
add
lods
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
outsl
add
mov
popa
je
dec
inc
push
add
je
imul
movsl
add
gs
je
push
popa
insb
gs
add
dec
xor
cs
insb
add
add
cmp
add
imul
outsl
insl
add
je
outsb
arpl
jb
jb
imul
add
add
add
test
add
test
add
test
add
xchg
add
xchg
add
add
dec
xchg
add
add
add
add
mov
add
stos
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
pop
xchg
add
add
test
add
mov
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
push
mov
add
add
cmp
add
dec
mov
add
add
js
add
mov
add
lods
mov
add
add
fimuls
add
cli
mov
add
mov
add
add
mov
add
add
dec
mov
add
add
push
add
orb
add
mov
add
add
add
mov
add
add
add
mov
add
mov
add
mov
add
add
mov
add
add
pop
mov
add
add
xchg
add
movsb
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
add
xchg
add
add
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
add
add
mov
mov
add
mov
add
mov
add
mov
add
add
