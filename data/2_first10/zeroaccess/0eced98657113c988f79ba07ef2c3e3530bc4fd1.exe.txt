push
mov
sub
push
add
push
adc
push
adc
xor
sbb
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
push
mov
pop
push
call
push
andl
push
push
push
push
xorl
push
sbbl
call
push
addl
push
push
push
sbbl
push
push
push
incl
call
addl
dec
movl
jne
push
sbbl
push
push
andl
call
test
je
mov
adc
imul
mov
mov
movl
mov
movl
cmp
jne
addl
movl
pushl
subl
pushl
andl
pushl
xorl
call
mov
mov
or
mov
xor
mov
mov
sub
movl
lea
xor
mov
lea
mov
addl
mov
mov
adc
mov
mov
add
mov
mov
xor
mov
xor
mov
adcl
add
movl
mov
mov
movl
cmp
movl
jne
mov
mov
mov
xor
add
mov
xor
mov
movzbl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
xor
dec
mov
jmp
mov
or
mov
xor
add
or
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
mov
xor
or
adc
mov
xor
xor
mov
sbb
mov
xor
mov
mov
mov
sub
mov
orl
mov
movl
add
mov
xor
add
mov
add
mov
andl
mov
adcl
xor
xor
sbbl
add
movzbl
and
mov
xor
lea
cmp
ja
or
mov
mov
xor
mov
sbbl
xor
andl
lea
subl
push
sbb
mov
xorl
xor
lea
orl
push
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
mov
andl
pushl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jb
xor
lea
mov
mov
decl
xor
xor
sbbl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
movzbl
sub
mov
mov
xorl
xor
lea
mov
cmp
movl
jbe
add
mov
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
adc
mov
mov
xor
mov
sub
andl
xor
mov
not
mov
movl
cmp
movl
jne
addl
lea
andl
mov
lea
addl
mov
mov
xorl
test
movl
je
adc
mov
mov
mov
sub
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
sub
cltd
mov
mov
mov
or
add
mov
adc
andl
subl
xor
xor
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
push
call
mov
dec
mov
jmp
not
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
negl
add
mov
mov
movl
adcl
xor
addl
mov
mov
xor
movl
mov
cmp
movl
jne
mov
mov
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
negl
mov
movl
mov
andl
xor
add
movl
adc
andl
xor
addl
xor
movl
cmp
movl
jne
cmp
jne
mov
addl
mov
andl
xor
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
addl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
xorl
add
movl
jmp
movl
mov
movl
cmp
je
mov
mov
orl
xor
add
cmp
je
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
movl
mov
mov
mov
adcl
pushl
addl
mov
pushl
addl
add
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
add
mov
mov
orl
pushl
call
mov
mov
movl
mov
movl
jmp
adc
mov
sub
mov
andl
xor
subl
add
cmp
jne
add
mov
movzwl
sbb
mov
adcl
mov
xor
sbbl
add
cmp
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
andl
push
xor
movl
add
xorl
push
xorl
push
andl
pushl
adcl
pushl
sbbl
call
add
mov
mov
sub
mov
or
mov
sub
mov
adc
mov
xor
mov
sub
add
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
incl
mov
mov
mov
mov
mov
mov
mov
sbb
movl
mov
xor
decl
add
mov
sbb
mov
mov
or
mov
mov
and
mov
mov
push
sbb
pop
orl
sub
add
xorl
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
mov
lea
lea
xor
cmp
jne
mov
xor
mov
mov
mov
mov
xor
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
mov
movl
movl
movl
movl
mov
mov
mov
andl
mov
movl
mov
mov
xor
mov
orl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
xor
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
movl
movl
pop
jmp
xor
inc
ret
push
mov
push
movl
movl
mov
addl
mov
add
xor
cmp
movl
jne
add
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
xorl
push
adcl
push
addl
push
push
andl
lea
push
push
adcl
call
push
call
sub
movl
xorl
movl
mov
mov
xor
mov
xorl
add
mov
sbb
mov
test
je
mov
mov
orl
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
sbb
imul
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
add
movzbl
and
xchg
sbb
mov
movl
sub
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adc
add
mov
sub
mov
sub
xor
add
mov
sub
mov
mov
xor
xor
add
add
mov
movzbl
sbb
mov
mov
adc
xor
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
or
mov
orl
sub
addl
lea
xor
andl
xor
movl
cmp
movl
je
sub
mov
xorl
xor
adcl
add
cmp
jne
orl
pushl
call
movl
cmpl
je
cmpl
jne
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
inc
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
add
cmp
movl
je
adcl
pushl
addl
pushl
negl
call
mov
xor
mov
add
mov
subl
xor
subl
add
cmp
je
or
mov
mov
adc
mov
mov
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
jmp
or
xchg
xchg
pushf
cmp
mov
ret
jl
loopne
jl
adc
and
imul
xor
fsubp
push
dec
imul
bound
iret
pop
dec
and
dec
jg
jb
jg
movsb
cmp
ljmp
cld
push
jg
in
cmp
mov
mov
mulps
fldl
lock
sub
dec
push
sub
mov
test
jmp
lret
sbb
jp
arpl
lcall
xor
cmpb
jae
fsubrl
push
jecxz
mov
mov
out
push
dec
push
and
cmp
lods
dec
int3
cmpsl
xor
push
pop
std
push
pop
movsl
stc
push
cli
inc
sbb
jb
mov
push
sti
jge
and
mov
loopne
xor
pop
or
int
mov
addr16
imul
cmpb
ja
insb
mov
push
add
mov
add
jmp
mov
cmp
int3
stc
daa
xchg
and
popf
scas
dec
hlt
dec
mov
aad
push
movb
mov
cld
push
in
in
add
xchg
and
cli
sub
sbb
add
push
adc
outsl
int
mov
jo
out
sarl
inc
outsl
int3
loop
mov
xchg
in
icebp
jg
lds
add
enter
mov
dec
popf
mov
sbb
add
stos
dec
cli
xchg
add
mov
rolb
pop
sahf
cs
bound
sbbb
cmp
jno
shll
jle
xchg
pushf
aam
in
call
and
into
cmp
nop
call
adc
add
mov
repnz
out
in
mov
test
push
xor
test
jl
adc
and
push
cmpsl
cmp
push
sub
lods
mov
insl
jmp
dec
add
lock
push
pop
mov
int
mov
in
fsubrs
pop
cld
in
adc
lods
jecxz
std
je
mov
pop
push
ret
cmpsl
push
pop
jb
xlat
jb
xor
xchg
pop
mov
ljmp
push
inc
pop
xchg
lret
xchg
loopne
insb
dec
movl
out
aas
sub
sarl
jnp
das
mov
jbe
mov
adc
ds
lret
popf
or
pop
pushf
xor
in
fists
inc
imul
mov
ds
mov
enter
push
insl
mov
jge
mov
pop
test
mov
mov
jecxz
sbbl
mov
mov
loope
cltd
frstor
lock
jge
push
jp
cwtl
dec
cmp
popa
dec
outsb
mov
mov
sti
adc
scas
inc
insb
das
or
xchg
ss
stos
jne
fs
hlt
loop
sub
push
sbb
add
call
hlt
sub
dec
repz
jo
stc
mov
mov
mov
mov
cmpl
in
fiaddl
sbb
dec
sahf
xor
cmp
iret
sub
jmp
lock
or
fwait
xor
out
jg
sbb
xor
je,pt
nop
mov
sub
mov
pop
inc
jnp
ja
cmp
mov
jae
and
mov
sbb
pop
pop
mov
stc
stos
xchg
mov
sbb
movsl
es
add
call
jp
add
cmp
lahf
jecxz
orl
mov
inc
int
dec
cmp
scas
or
inc
pop
insl
adc
stos
xor
stos
leave
movsb
or
mov
mov
push
out
push
or
push
pop
ljmp
sbb
jns
or
cli
test
xor
mov
repnz
orb
mov
and
pushf
push
enter
jne
das
push
cmp
pop
pop
mov
test
ss
add
sub
inc
and
dec
aas
sbb
inc
jnp
sbb
mov
es
sub
insb
popa
mov
sub
mov
inc
sbb
daa
scas
pop
jnp
ret
into
jmp
shl
xchg
les
out
div
mov
mov
mov
push
adc
dec
mov
jg
xor
mov
popl
test
movsl
sbb
ljmp
push
int
adc
sub
out
cmc
pushf
and
xchg
popf
fidivs
mov
in
xorl
notl
rcl
addb
mov
popf
sbb
jl
mov
mov
pop
mov
adc
pop
inc
pop
mov
js
pop
mov
pop
and
js
cmp
mov
aad
pop
iret
daa
test
icebp
shrb
or
nop
ljmp
jecxz
movsl
loope
fdivs
or
add
fld
ret
push
and
xchg
mov
xchg
cmp
push
sub
call
stos
pop
mov
or
arpl
or
mov
je
add
popa
push
add
das
sbbl
xchg
daa
popf
cmp
mull
mov
mov
lahf
popa
xchg
jno
sub
movsl
mov
rorl
dec
xchg
fcoms
mov
mull
mov
pushl
imull
inc
cmpsb
mov
sub
pop
cs
pop
dec
or
ret
jge
imul
cmpsb
push
insl
mov
repz
out
cmp
sub
jl
inc
or
in
mov
stos
lahf
push
stos
jge
push
mov
pop
mov
jb
cmc
rcll
pop
cmpb
sub
insl
bound
inc
adc
loope
mov
or
xor
out
pop
popa
and
and
dec
dec
push
xor
test
sub
in
adc
push
adc
sub
xor
enter
nop
push
mov
mov
or
mov
inc
mov
push
das
push
stc
xchg
fdivs
push
jge
andl
sbb
cmp
xchg
lods
jae
add
es
fisubrs
dec
les
or
mov
fwait
lcall
push
jge
icebp
in
dec
in
adc
wbinvd
dec
icebp
scas
push
sysenter
pop
jge
rorb
movsb
jae
clc
bound
js
iret
mov
test
pop
or
jle
and
inc
xlat
and
insb
push
jmp
lods
mov
jmp
mov
jno
push
pop
mov
scas
adc
fsubrl
jg
cltd
xchg
dec
inc
mull
stos
cmp
push
mov
push
jns
mov
mov
ja
pop
jle
push
cmp
push
add
cmp
xchg
scas
pushf
aad
mov
cmp
push
decb
cmp
jl
jns
dec
push
inc
push
test
xor
push
adc
adc
push
inc
sahf
push
mov
popa
cmc
ret
test
aas
out
xor
bound
or
subb
jl
and
movsl
pop
inc
test
test
add
sarb
xor
cmc
jecxz
xor
test
fisttpll
divb
stos
jno
jno
xchg
dec
je
addb
into
das
fstps
mov
sub
mov
push
leave
stc
xor
xchg
negb
loope
ret
or
xor
cmp
stos
and
adc
add
xchg
imul
popf
push
cs
loope
sub
mov
rclb
cmp
mov
jmp
fwait
push
addr16
mov
push
or
ds
fdivp
dec
or
in
rorl
add
fmull
xchg
divl
dec
dec
push
pop
add
iret
push
fisubl
pop
add
xor
imul
lods
xchg
div
push
lahf
loop
fistps
push
je
js
push
jbe
mov
hlt
insl
add
leave
dec
stos
and
or
mov
jle
mov
jp
pop
outsl
xor
mov
je
mov
sub
imull
cmp
push
xchg
jb
dec
in
jo
pop
data16
data16
je
das
mov
xchg
stc
jle
mov
push
lods
loopne
xchg
insb
cmp
jge
imul
mov
fstps
jp
add
movsb
xchg
add
adcb
bound
mov
in
jae
inc
fsubrs
pop
in
xchg
cli
jo
sbb
add
lods
jg
sbb
or
mov
subl
nop
jns
jb
and
push
cmc
arpl
in
fdivl
or
loope
clc
pop
xor
loopne
and
scas
bound
inc
push
mov
hlt
dec
sbb
out
jno
shlb
inc
data16
nop
test
das
aaa
sub
dec
iret
lret
mov
popl
inc
divb
stos
sbb
or
mov
and
movb
sbb
ret
xchg
push
notb
mov
mov
enter
inc
push
mov
int3
mov
and
vshufps
xlat
shl
inc
xor
shlb
insl
ret
fs
lods
sub
jge
or
cmp
ret
sbb
push
xor
xchg
dec
loope
ljmp
insb
or
std
stos
mov
cmp
ja
std
stos
jmp
mov
adc
popa
push
das
mov
push
push
call
subl
mov
inc
pop
leave
inc
jmp
aaa
in
lret
sbb
icebp
lods
pushf
mov
jl
ss
add
xchg
mov
pop
add
inc
inc
hlt
push
std
xor
xchg
and
jae
pop
sbb
imul
pop
icebp
fwait
mov
stos
add
adc
test
cs
cmpsl
sbb
jns
mov
ja
cmp
mov
mov
shl
push
aaa
shll
jo
sbb
fs
add
bound
push
and
aam
dec
ret
or
rorl
addr16
adc
jp
xchg
dec
arpl
lea
call
or
or
movsb
fisttps
xorl
rolb
jnp
insl
xlat
and
fstps
test
or
mov
testl
lea
xor
sub
xor
aaa
push
cmp
popa
movsb
pop
sbb
xchg
dec
test
pushf
test
sub
mov
xchg
imul
incb
adc
pop
mov
bnd
out
pop
push
pop
jno
orb
aas
stc
sbb
jbe
dec
test
lcall
jp
int3
sub
and
mov
mov
jmp
push
pop
push
sub
push
xchg
cli
sahf
sbb
mov
ljmp
sahf
dec
pop
call
inc
les
popf
xchg
xchg
adcl
aam
mov
xchg
pushf
sbb
mov
lock
jne
mov
popf
and
test
push
push
imul
pop
sub
fwait
or
jne
and
scas
sub
cmp
loope
pop
shl
ret
stos
dec
popa
js
inc
jns
std
xor
jge
mov
inc
cmp
subb
mov
aad
and
repnz
jge
ror
int3
xchg
mov
in
insl
sbb
pushf
pop
aad
add
fiadds
mov
xchg
sbb
pushf
mov
fcomps
test
scas
pop
dec
inc
movsl
jl
call
xchg
adc
jle
inc
sbb
xor
sub
fadd
imul
test
sbb
mov
sub
or
filds
xor
sbb
outsl
jg
sbb
xchg
std
scas
data16
icebp
int3
int3
or
test
sub
pop
and
mov
sbbb
push
mov
ss
int3
pop
test
fsts
fisttpll
adc
fdivrl
xchg
mov
mov
mov
push
es
sub
mov
nop
mov
lahf
jnp
sar
pop
daa
xor
das
cli
and
inc
lock
xchg
mov
outsl
sbb
int3
fldt
aaa
int3
nop
xchg
scas
xchg
cwtl
adc
xor
jp
mov
pop
addb
ja
push
jle
cltd
dec
xor
mov
pop
cmp
sub
and
and
push
add
and
lea
cmp
xchg
add
stos
sbb
cld
and
shrb
mov
pop
xor
mov
sahf
xor
xor
push
and
int3
shll
xor
aaa
popf
and
xor
and
faddl
ss
pop
mov
adc
xor
sub
xchg
xchg
movsl
inc
add
sub
pop
nop
add
push
popf
xor
mov
dec
lret
add
mov
ja
nop
out
jnp
nop
dec
mov
ret
notl
mulb
mov
ss
bound
iret
inc
icebp
lahf
push
mov
cmpsb
sub
loop
jns
push
push
popa
test
add
jb
cmp
popa
icebp
in
and
xchg
insl
xchg
loopne
fidivs
cld
dec
mov
xchg
jb
mov
jb
imul
cmp
sbb
jns
int3
dec
addr16
leave
cs
xchg
adc
push
loope
mov
pop
mov
sub
ss
fsubl
sbb
add
stc
xchg
sub
cmpsl
pusha
add
stc
add
or
flds
and
into
mov
es
lcall
in
mov
mov
dec
out
inc
cmpb
sbb
mov
jge
and
pop
xor
out
or
push
xchg
sub
inc
std
aam
in
fwait
pop
insl
shr
enter
imul
pushf
lret
or
push
xchg
sub
xchg
jecxz
lods
out
mov
add
sbb
inc
inc
or
clc
or
popa
xchg
lods
jmp
mov
mov
lds
mov
retw
out
jge
rclb
pop
test
iret
test
fs
sub
imul
mov
push
test
mov
sbb
cmp
repz
scas
xor
scas
es
enter
jb
fisubrs
push
mov
jmp
jg
sub
adc
movsl
lahf
ret
imul
nop
cmpsb
adc
pop
xorl
jae
pop
cmp
std
loope
xor
ss
xor
adc
lods
and
push
mov
xchg
sbb
push
or
testb
flds
out
xor
je
int
std
mov
cmp
or
outsl
mov
loopne
push
in
sarl
mov
xchg
imul
and
lret
mov
lods
xor
mov
repnz
std
in
cmp
scas
inc
mov
mov
pop
and
pop
fwait
push
push
sbb
push
mov
dec
mov
push
dec
push
jp
xchg
aaa
inc
int
sbb
push
pushf
or
shlb
pop
dec
jmp
mov
je
loope
and
push
mov
stc
cmp
js
or
aas
inc
mov
mov
sub
int3
and
push
es
dec
or
les
lock
mov
or
dec
and
and
or
mov
pop
loope
sbb
mov
lahf
gs
push
mov
daa
loop
or
add
lcall
outsl
jmp
ljmp
mov
add
inc
out
pop
mov
lods
fs
test
push
movsl
adcb
cltd
ret
pop
jle
outsl
imul
repnz
push
and
jmp
mov
cmp
dec
stc
mov
and
fists
mov
xchg
or
ror
cmp
popf
and
jp
sarl
das
cltd
add
or
xchg
push
lock
test
fwait
ljmp
repz
dec
pop
mov
inc
pop
mov
js
jb
roll
in
mov
jne
push
aaa
repnz
fndisi(8087
aas
xchg
rorl
test
test
jl
sahf
shl
add
lret
fwait
jb
cmp
jge
stos
inc
stos
into
lds
or
inc
je
lahf
sbb
add
incb
sbb
imul
ss
cmpsb
aam
pop
inc
mov
into
jns
fmul
imull
dec
shlb
imul
pop
add
out
insl
outsb
pop
and
sub
shll
xchg
int
cltd
inc
xor
lds
push
arpl
lret
aas
shrd
cmp
enter
xchg
fldl
push
sahf
adc
cmp
xchg
add
aas
ds
iret
inc
loopne
outsl
in
enter
fnstsw
into
js
sbb
adc
loopne
cld
gs
cmpl
sub
and
stos
sbb
loope
ds
mov
std
scas
pop
inc
dec
stc
jle
mov
add
mov
jl
pop
mov
aam
mov
not
movsb
imul
imul
sbb
jo
or
sti
pusha
test
lds
xor
xchg
int
in
setle
sub
sbb
push
lcall
jne
xlat
pop
mov
jle
cmp
sbb
mov
mov
cltd
in
cmp
test
mov
in
cmc
mov
insl
jne
jg
mov
test
sub
stos
mov
pop
xchg
test
hlt
into
dec
push
adc
addr16
stc
jmp
jmp
mov
pusha
hlt
mov
inc
fmuls
imul
cld
sub
data16
addb
pushf
into
mov
cltd
mov
ss
lret
ljmp
test
test
fldl
add
mov
jg
mov
and
int3
out
ljmp
scas
xchg
push
sahf
into
movsb
loope
enter
xchg
cwtl
mov
mov
std
out
and
movsl
loopne
sbb
loop
cmc
lods
jp
fimull
pop
adc
imul
lret
aas
test
stos
adc
mov
fnstenv
xor
stos
sub
dec
cmp
sbbb
shll
in
hlt
inc
push
aaa
xchg
in
jne
push
fwait
jb
add
ret
and
mov
sub
xchg
push
je
scas
arpl
out
loop
in
aaa
and
pop
adc
or
inc
pop
dec
je
stos
sbb
mov
jecxz
lret
xchg
pop
rorl
xchg
pop
mov
lahf
or
fmul
dec
sbb
mov
pop
js
xchg
adc
test
aas
flds
xor
lahf
push
dec
jae
lahf
adc
ljmp
push
xchg
jbe
mov
jb
adc
ljmp
pop
xor
call
stc
inc
mov
fisubrs
rcll
fcomps
loope
negl
mov
arpl
repnz
jbe
outsl
gs
gs
insb
roll
push
mov
push
inc
add
xor
mov
jge
mov
jne
shlb
jbe
dec
cmc
pop
ds
xor
and
les
cmp
into
mov
pop
lcall
or
cmpsb
and
xlat
mov
ds
ftst
cmp
fstpt
imul
cwtl
int
movsb
pop
stos
push
es
cmp
ret
leave
fadds
cmc
lret
inc
insl
cmc
pusha
rep
loop
movl
cmpsb
dec
sahf
adc
shl
or
pop
push
pusha
pop
outsb
aad
cmp
xor
add
vphaddwq
xchg
mov
lods
lret
das
js
cmpl
xor
dec
cmp
lahf
les
aam
adc
xor
lret
adc
mov
mov
ss
mov
jl
mov
mov
or
xchg
cltd
xchg
cli
jl
test
xchg
repz
arpl
loopne
test
je
into
mov
xchg
xchg
push
push
sahf
into
shll
jns
jne
negw
outsb
mov
stos
shll
aam
mov
jl
adc
cwtl
lahf
jle
mov
push
sub
push
mov
ficoms
fdivl
dec
adcb
test
sub
cmp
mov
push
loope
add
inc
ror
jb
push
mov
cmp
fwait
push
mov
popf
adc
cltd
or
cmpsb
mov
mov
adc
out
addr16
scas
push
push
mov
pop
xchg
inc
outsb
push
mov
jbe
jge
or
imul
out
fadds
mov
scas
lock
movlps
adc
outsb
add
mov
xor
and
push
pop
jg
flds
mov
sti
out
or
jnp
push
insb
mov
mov
aam
cli
ret
mov
mov
pusha
mov
push
lidtl
inc
and
mov
jmp
adc
jnp
sbb
inc
movsl
lret
xchg
jl
mov
or
fsubp
jo
dec
movsl
addr16
sub
sbb
push
fisubs
jecxz
mov
popf
xor
les
ja
mov
cli
ret
jg
mov
and
stc
or
inc
sahf
or
adc
int3
push
mov
jmp
stos
mov
cmp
push
iret
inc
sub
iret
jmp
inc
in
pop
mov
add
mov
es
xchg
repnz
mov
es
and
js
xchg
cmpsl
push
aaa
call
xor
pop
cmpb
leave
push
add
ljmp
data16
in
adc
push
jnp
xchg
mov
clc
pusha
rol
ds
xor
into
mov
pushf
add
les
sbb
nop
lret
out
imul
daa
dec
add
push
fidivrl
xchg
xlat
push
add
std
repz
jno
es
mov
lds
xor
stos
pusha
arpl
imul
mov
mov
gs
mov
mov
insb
adc
int
lret
jno
mov
mov
dec
adc
mov
test
fstpl
lods
pop
orb
xlat
adc
dec
fcompl
add
lahf
and
mov
sub
lret
mov
add
pop
repz
stos
cmp
mov
push
cld
push
dec
push
or
ret
push
ja
pop
loopne
movsb
cmp
vpshuflw
scas
imul
push
sbb
adc
sub
mov
push
pop
push
test
shrb
rcl
ficoml
std
cmpsl
outsb
add
cmp
xchg
push
add
jle
dec
mov
rcr
rdtsc
fs
jg
xorb
inc
dec
adc
scas
out
pusha
xchg
into
jmp
ret
shrl
cld
mov
aam
inc
mov
test
dec
fdivrs
mov
jns
xchg
jno
or
add
shrb
or
sub
jmp
cmpsl
pop
shll
lret
sbb
shl
lahf
enter
test
mov
mov
or
mov
sbbb
inc
pusha
dec
inc
xchg
xor
pop
and
xor
repnz
mov
lea
jge
loop
mov
rcr
adc
mov
stc
lds
ss
gs
dec
cld
cli
sahf
in
push
iret
pop
rcrl
dec
or
and
adc
lea
jl
push
pushf
out
sbb
aaa
sub
iret
push
mov
cmp
ret
aaa
sbb
repnz
mov
xchg
mov
dec
pop
ja
sbb
fistl
mov
push
aad
iret
cmp
or
sbb
in
movsb
push
xchg
out
nop
popa
sub
lret
out
sti
jmp
ror
lock
aad
inc
dec
mov
rcrb
lods
lret
inc
and
inc
pop
call
inc
cs
test
ds
add
addr16
iret
and
test
or
lret
mov
push
ret
sbb
insl
sbb
cltd
cmc
loopne
cmpsl
mov
dec
xor
insb
jecxz
xchg
call
xchg
inc
int3
ss
sahf
sub
add
imul
or
test
pop
xchg
cmp
sbb
or
movb
sbb
pop
addr16
mov
xchg
movsl
stos
movsb
inc
and
repz
add
cmp
push
mov
and
test
ficompl
fstl
and
jecxz
pop
pop
fidivl
mov
add
inc
jmp
pop
inc
sbb
cwtl
lea
imul
xor
lock
adc
std
fwait
call
xor
mov
push
jecxz
xor
shlb
sub
lret
rolb
out
sbb
mov
jb
mov
ret
adc
lods
jb
jno
pop
inc
movsl
in
mov
pop
stc
or
pop
add
push
out
push
jecxz
out
jmp
and
push
push
in
push
pop
xchg
push
outsl
aad
xor
pop
mov
cwtl
cmp
loop
mov
pop
ret
push
mov
inc
fnstsw
fildll
dec
adc
pop
push
fldt
ret
stos
sub
cmp
adc
inc
mov
out
adc
ds
mov
ljmp
xor
enter
movl
rcrl
leave
stos
sub
or
scas
mov
and
sbb
roll
test
jmp
pushf
inc
sub
mov
or
xor
jl
and
add
call
jp
adcb
sarb
mov
test
lcall
or
inc
ja
or
adc
mov
ja
sub
in
adc
sahf
inc
and
adc
sub
icebp
adc
push
xchg
jge
fsubs
fisttpll
mov
sbb
jns
mov
xlat
aad
lods
arpl
sbb
inc
inc
bound
std
inc
sti
add
jb
mov
stos
lods
xor
ljmp
mov
add
lret
dec
repz
push
insl
movsb
ret
dec
inc
cmp
stos
inc
negl
leave
inc
mov
movsl
jle
les
xlat
adc
stos
mov
push
mov
bnd
or
outsb
lods
scas
sub
push
test
or
lods
cmpsb
stc
ret
push
push
and
or
add
push
jbe
bswap
add
push
jnp
xchg
push
je
loopne
cs
xor
adc
inc
mov
and
pop
cltd
sbb
jns
pop
fs
xchg
aaa
push
push
leave
divl
mov
std
mov
iret
or
jecxz
dec
data16
add
outsl
enter
xchg
push
pusha
iret
inc
test
xchg
pusha
lods
nop
popf
std
mov
push
pop
sbb
mov
stc
lret
test
lret
mov
jle
sbb
mov
addr16
pop
add
les
pop
and
shrb
imul
fcompl
or
add
addl
nop
add
sbb
int
cmpl
cmpsb
imul
xor
ljmp
add
and
fisubrs
xchg
adc
test
rcll
fisttpll
addr16
jns
add
ljmp
icebp
rolb
divl
out
pop
mov
dec
sub
mov
inc
fcoms
jb
shl
cmp
cmpsb
mov
mov
dec
shlb
insl
mov
add
iret
and
add
mov
xchg
pop
adc
and
pushf
jne
xchg
add
lret
outsl
subb
jo
xor
push
mov
cwtl
adc
ljmp
stos
pusha
add
mov
push
mov
cs
mov
scas
out
loop
adc
xchg
fstpl
ja
mov
insl
inc
mov
fadds
out
inc
jp
arpl
js
mov
mov
sub
lret
mov
push
jle
jmp
mov
repz
mov
lods
mov
pop
popl
cwtl
jp
popa
or
inc
repnz
imul
xlat
dec
mov
test
push
mov
stos
in
cwtl
jbe
pop
push
or
push
xor
mov
je
or
jne
aad
mov
dec
sub
or
and
or
pop
divb
jno
cmc
rorb
loop
push
dec
cld
cmpsl
imul
mov
int
push
push
mov
push
repnz
mov
inc
rclb
pop
mov
sub
inc
sbb
cmc
jae
adc
mov
fcoms
aas
jl
stc
xor
iret
pop
fcompl
xchg
pop
cmc
test
adc
loopne
add
stos
das
or
hlt
push
jnp
pop
cmp
mov
incb
movsb
dec
pop
test
lret
std
pop
push
mov
add
dec
jg
outsl
sbb
enter
stc
mov
inc
stc
in
push
sub
repz
mov
mov
xchg
xchg
cmp
dec
inc
jmp
and
xchg
dec
ljmp
xor
and
jle
ret
adc
gs
mov
xor
mov
das
ljmp
jne
icebp
inc
cli
push
push
ds
adc
mov
ds
add
push
and
mov
es
mov
dec
xchg
cltd
arpl
das
imul
fs
imul
xchg
fldenv
notl
movsl
or
cli
jne
loop
aad
stos
lret
fcmovnu
hlt
mov
lock
mov
or
fcoml
or
pop
adc
scas
fwait
cmp
ret
add
jb
in
jmp
popa
cmp
lea
sub
outsb
xchg
sub
push
push
mov
and
fmull
ret
outsl
sbb
mov
iret
cli
mov
jae
mov
dec
gs
sub
lods
lret
sub
sub
sub
testb
mov
hlt
push
aas
filds
int
movsl
lods
sub
cld
cmp
and
push
xor
pop
daa
popa
pop
test
xchg
aam
adc
dec
xor
mov
sub
inc
pop
pop
lret
jbe
inc
jns
scas
push
cmc
xchg
jb
popa
insb
inc
ljmp
les
mov
test
rol
jge
pop
pop
push
popa
mov
pop
dec
or
ror
movsb
push
pop
xchg
pop
sub
push
sub
push
movsb
inc
rcll
aam
mov
mov
in
dec
pop
jle
sahf
mov
add
or
arpl
fnsave
sub
sti
sbb
mov
push
mov
dec
adc
mov
movsb
inc
mov
movsb
pop
or
bound
test
pop
or
sbb
xorb
inc
pusha
cmc
movsb
pusha
mov
fbstp
adcb
xchg
jae
stos
jp
enter
sti
es
adc
pop
cwtl
sbb
jle
jbe
insl
shrl
fwait
pop
ja
jno
and
adc
sbbl
jnp
movsl
aad
xchg
fisubl
xor
xor
sbb
mov
dec
ret
or
cmp
xchg
scas
mov
pop
and
loope
test
sub
paddw
dec
out
push
jg
jmp
ret
mov
pop
inc
stc
roll
mov
mov
stc
shlb
rorl
cld
les
les
jmp
icebp
push
inc
jno
push
in
lret
fwait
aad
fisubl
sub
das
ja
add
iret
mov
lcall
push
test
testb
dec
test
ret
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
movl
xor
or
mov
and
lea
mov
push
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
lea
mov
or
mov
and
mov
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
mov
addl
mov
add
sbbl
push
xor
mov
mov
movzbl
sub
mov
mov
adc
xor
mov
addl
add
movl
cmp
je
mov
movl
jmp
mov
movl
cmp
movl
jne
push
jmp
mov
movzwl
mov
cmp
jne
mov
incl
xor
add
mov
adcl
mov
mov
xor
sbbl
add
imul
and
mov
andl
xor
add
cmp
movzbl
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
jmp
imul
stos
sbb
jae
loopne
jl
dec
pop
jl
es
mov
push
mov
push
in
lods
dec
scas
lcall
movsl
dec
jmp
fcoml
std
mov
pop
adc
out
int
mov
dec
out
in
dec
mov
lods
addr16
mov
pop
shrl
enter
xor
dec
mov
repnz
leave
rcr
inc
xchg
dec
into
sbb
jne
push
cltd
or
add
xchg
data16
mov
imul
dec
and
mov
fistpl
mov
stos
pop
xchg
into
inc
subl
addr16
sbb
outsl
jle
ljmp
in
lds
orl
stc
aad
mov
gs
arpl
mov
loopne
inc
add
pop
nop
cltd
push
stc
push
xor
xor
xor
pop
pusha
fwait
dec
push
mov
stc
mov
sub
mov
leave
mov
ss
mov
lahf
test
sub
call
pop
repz
in
add
cli
xor
cmp
rclb
add
out
in
rorb
subb
popa
imul
dec
imul
xor
xchg
out
sub
xlat
xchg
jge
enter
pusha
das
jns
pushf
cli
lret
mov
jnp
pop
cld
leave
or
int
mov
mov
fdivrp
popa
je
rcrl
aaa
xor
jle
fs
std
in
mov
mov
fs
out
test
push
xchg
and
test
pop
into
push
cmp
loop
push
adc
cwtl
jp
fsubr
scas
sti
inc
pop
xchg
dec
mov
push
and
loopne
outsl
xchg
insb
xor
mov
jnp
rcl
aam
sti
or
test
mov
sbb
jg
ret
pop
mov
mov
add
jns
sub
movsl
movsb
popf
ret
xchg
movsb
inc
and
enter
push
xchg
mov
stc
push
int
jge
push
mov
or
lds
mov
adc
sti
mov
ljmp
mov
pop
push
out
cli
movsb
sub
lret
xchg
loope
fsts
inc
lea
jmp
nop
ds
enter
sub
mov
fsubr
in
cmpsl
cmp
add
mov
test
push
int3
sub
mov
push
dec
adc
scas
rcrl
bound
out
xor
cmp
mov
enter
mov
push
cmp
push
in
and
jb
es
add
mov
mov
cld
hlt
sub
sbb
mov
cmp
out
outsb
insb
lcall
sub
dec
inc
gs
cmpsl
adc
daa
xchg
xor
mov
jo
pop
xchg
mov
inc
cmpsb
mov
incl
sub
jo
inc
loopne
clc
jecxz
inc
fistps
add
lahf
xor
mov
popf
push
jp
add
mov
pop
imul
or
xor
pop
lcall
test
out
xor
sub
sbb
pop
in
and
mov
inc
int
lds
xchg
aaa
insl
cmp
clc
inc
test
cli
pusha
jl
pop
mov
out
ret
lea
push
cmpsl
ss
stos
jmp
mov
sbb
jns
dec
mov
mov
icebp
stc
ss
mov
arpl
and
enter
test
inc
adc
mov
cld
cmp
inc
pop
cmpsl
sbb
in
decl
mov
scas
loope
mov
popf
mov
jge
fimull
push
mov
repz
pop
bound
sub
pop
jmp
ss
jae
cmp
push
cmp
and
lahf
les
or
aam
rclb
jo
orl
std
lret
add
bound
pusha
popf
enter
fisubrl
jg
dec
decb
out
gs
mov
xchg
or
nop
sub
push
gs
inc
cmp
cmp
std
push
enter
sbb
add
mov
sbb
stc
push
dec
mov
cmp
dec
xor
mov
lcall
sub
ror
icebp
insb
xchg
mov
popf
cwtl
or
rclb
daa
jl
iret
add
xor
lds
arpl
xor
and
rcrl
mov
pusha
adc
f2xm1
in
orb
mov
out
scas
enter
in
adc
cmp
lret
jnp
adc
mov
lods
mov
nop
rcrl
enter
sub
fldcw
inc
daa
inc
jne
xchg
jge
jno
pop
imul
pop
out
fimull
xchg
lcall
in
adc
mov
cwtl
mov
lea
shrb
rcrb
lods
test
js
idiv
mov
clc
aam
leave
jne
loope
stos
mov
sarb
out
mov
iretw
lods
sti
sar
fcompl
mov
testl
andb
mov
repz
mov
xchg
sbb
jge
arpl
imulb
lahf
add
pop
cmpl
outsb
cmp
mov
test
inc
cmp
mov
cmc
push
lock
loope
cmpsl
outsl
sahf
test
sub
xorl
mov
stos
addr16
sbb
lods
ret
xor
cwtl
mov
outsl
outsb
inc
push
adc
gs
rcr
cmp
dec
jp
enter
loop
pop
cmp
mov
ja
into
aas
fs
int
and
mov
bound
mov
stc
sbb
or
push
sub
out
shl
or
push
push
iret
xchg
loopne
mov
int
sti
or
jae
mov
sahf
call
fiadds
inc
fsubl
hlt
or
xchg
push
mov
mov
in
xchg
or
dec
cli
js
clc
rclb
mov
arpl
idivl
test
dec
pop
mov
sub
fldcw
mov
mov
fdivr
arpl
push
pop
imul
mov
xor
and
mov
add
cltd
shll
dec
inc
ret
cmpsl
cli
les
out
pop
xchg
in
add
cmp
or
xchg
ds
jge
cmp
cwtl
sub
inc
test
push
cli
fnstenv
and
dec
xchg
mov
mov
call
repnz
ja
popa
push
pop
sbb
adcl
int
lahf
jmp
add
fcmovu
rolb
cwtl
push
inc
and
orl
sahf
shll
outsb
pop
and
sti
xor
bound
fucomp
sti
lock
push
mov
jno
xchg
cmpsl
mov
sbb
scas
stos
jne
repnz
gs
mov
xor
aas
les
out
jmp
mov
cs
out
pop
push
int3
arpl
xchg
cmp
fmull
out
out
in
std
xor
stos
inc
pop
xor
push
jae
fcomi
and
jne
xor
mov
inc
dec
fwait
rcr
sub
shrb
shl
jmp
mov
mov
cltd
mov
adc
cli
push
fs
pop
cmc
push
adc
addr16
lret
mov
pop
push
cmpsb
scas
cmpsb
mov
and
sbb
decb
into
insl
pop
xchg
loopne
dec
fwait
cmp
fisubs
add
bswap
repz
inc
dec
stos
mov
mov
ja
pop
mov
xchg
cmp
insb
iret
fwait
xor
sbb
pop
and
pushf
shl
insb
in
popf
lret
sbb
fildl
scas
bound
es
mov
and
push
mov
push
sub
bound
repz
pop
push
scas
jmp
clc
pop
ret
jge
fmul
rcrb
mov
ret
cmp
dec
insl
je
cmpsb
xor
push
shll
or
lods
shll
call
sub
push
es
test
cmp
inc
and
xor
add
ret
and
push
jl
cmpsl
mov
test
lods
insw
push
xor
je
enter
push
rolb
or
imul
inc
jmp
pop
shll
mov
stc
add
dec
imul
fstps
insb
cwtl
mov
adc
dec
add
dec
fwait
je
cmp
add
adcl
sbb
aam
dec
push
mov
sbb
cmc
push
repnz
push
mov
inc
dec
mov
es
push
cld
fcomps
ror
jno
cmp
lcall
add
cli
xchg
iret
test
das
push
xchg
movsbl
aam
outsl
es
idiv
fs
daa
sbb
fs
adcl
movsbl
sbb
js
dec
rcr
mov
stos
pop
das
cmp
andl
imulb
sbb
pop
pop
gs
mov
out
shl
leave
call
adc
jae
jle
push
addr16
inc
mov
fimuls
inc
in
jne
in
jo
mov
jae
sbb
mov
add
test
xor
mov
aad
jg
inc
push
sub
ja
sahf
les
scas
jo
sbb
or
xor
xchg
test
sbb
dec
out
rolb
mov
jle
dec
sub
daa
add
in
xor
sahf
cli
fwait
sub
pop
dec
xchg
push
mov
leave
outsb
or
mov
ljmp
stc
in
push
adc
mov
cmp
aad
xor
cmp
icebp
sub
mov
sbb
inc
mov
cmp
sahf
jns
movsl
push
xorl
cmpsl
cmp
xchg
fwait
leave
pop
dec
xor
dec
test
cmp
daa
jle
mov
and
mov
scas
arpl
push
cmpb
pushf
pop
adc
addl
sbb
jp
mov
lods
leave
shld
inc
ret
cmp
jle
or
shl
out
mov
scas
cmp
scas
loopne
mov
dec
mov
cmp
mov
stos
add
loopne
cltd
mov
popa
xchg
loopne
aaa
fwait
int
imul
incb
bound
test
xor
shrb
test
mov
sbb
inc
mov
push
mov
test
mov
xor
popf
scas
mov
loop
and
cmc
push
clc
push
imul
test
cmp
jecxz
xchg
sbb
mov
out
loope
les
mov
pop
leave
inc
leave
sub
les
xchg
das
test
outsb
loope
dec
inc
sub
push
repnz
shll
push
xor
adc
aaa
and
addr16
cmp
sub
daa
xchg
int3
movsl
add
xor
inc
std
jl
push
inc
cmp
ret
shr
adc
xor
insb
negb
test
inc
stc
mov
in
dec
dec
lea
xor
lea
cltd
in
cmp
loope
fidivs
shlb
xchg
sti
jmp
rcl
stc
into
push
int3
in
out
dec
jnp
or
cmc
pop
xor
in
dec
inc
rorl
jmp
iret
mov
mov
jmp
divb
inc
movsb
and
arpl
push
adc
jae
iret
mov
xchg
sub
sub
mov
cmc
push
repz
xor
cli
jp
mov
adc
sbb
mov
or
sbb
ffreep
push
lcall
inc
add
xor
cmp
outsb
ds
pop
dec
pop
andb
mov
sbb
inc
add
jae
xlat
out
pop
inc
in
fcmove
or
into
adc
int
lods
jo
outsl
mov
cmpsb
cltd
loopne
xchg
inc
movsb
aaa
push
dec
push
dec
lret
cmpsb
in
inc
dec
addr16
leave
mov
dec
mov
je
loop
sub
xchg
jl
inc
dec
jne,pn
xor
pop
inc
mov
and
cld
mov
push
ss
outsl
inc
or
push
jns
cmp
xchg
push
xchg
ds
test
jge
test
into
or
mov
push
cmp
bound
aam
cs
out
push
dec
fmuls
xor
inc
sbb
jmp
mov
pusha
mov
pop
out
clc
xchg
xor
adc
icebp
push
gs
aas
fs
dec
imul
or
rcrb
inc
test
push
xor
pop
push
dec
ds
js
fidivl
cmovns
jle
push
mov
imul
xchg
mov
push
xor
leave
lock
jl
fistpl
mov
shrb
mov
sbb
out
fsubrl
int
mov
aad
movsl
jb
cltd
lret
rclb
mov
mov
cwtl
sbb
aam
mov
fidivs
or
stos
jae
das
pushf
stos
push
jl
lea
push
mov
push
pop
or
loop
je
daa
pop
pushf
push
push
or
cs
xchg
insb
je
les
xchg
test
aaa
cmp
or
mov
jae
lahf
pop
pop
xor
sarb
cmp
lret
or
idiv
cmc
sub
jb
add
loope
mov
xchg
mov
lock
adc
icebp
ss
notl
jno
or
fidivl
fdivr
mov
shlb
andb
testl
aam
scas
ljmp
repnz
pop
ljmp
mov
xor
lea
jbe
cmp
cwtl
inc
inc
mov
add
or
or
cli
inc
add
lret
test
dec
and
call
mov
mov
sbb
pop
jle
cli
fiaddl
sahf
add
jmp
cmpsb
push
xor
imul
popf
lock
jmp
mov
push
jb
adc
push
cld
jg
std
pushf
xlat
add
and
sub
aam
fadds
into
dec
mov
enter
mov
mov
mov
test
jle
pushl
cmovo
pop
add
cmc
jge
popf
jl
mov
push
sbbb
jge
cmpsl
dec
push
jmp
cmpsb
inc
mov
push
mov
fs
sub
push
xorb
sbb
fs
out
movsl
ret
push
pop
cmp
fdivrs
sbb
xlat
cmp
mov
std
add
adc
incb
sahf
ds
sarl
xacquire
shll
mov
je
decb
nop
dec
addl
sarb
or
xor
cli
push
mov
fidivl
mov
sub
repnz
enter
outsb
cmpsb
xchg
ret
inc
adc
pop
jmp
pop
adc
enter
adc
outsl
test
cmp
add
sbb
mov
cmp
aaa
fistl
inc
pop
subl
xor
in
dec
dec
and
xorb
jno
pop
pop
sbb
fildl
ljmp
in
lods
shlb
lea
fcomps
arpl
sub
stos
sbb
mov
aam
inc
mov
sbb
jle
jl
pop
mov
imul
xchg
push
mov
dec
data16
xor
loope
inc
or
lret
dec
push
sub
divb
std
xorl
in
jnp
rcl
call
mov
jb
imul
mov
sbb
push
cmp
cmpsl
xor
testl
jg
rolb
push
xchg
sti
and
fcom
xor
mov
adc
outsb
adc
into
test
cltd
pop
mov
dec
es
sub
out
sahf
das
adc
or
sbb
dec
arpl
insl
mov
xor
dec
insl
cmp
jne
push
add
es
pop
or
push
test
scas
lahf
lret
stc
jge
cmc
xor
push
pop
mov
stos
dec
dec
or
in
ds
andl
iret
mov
shlb
nop
lretw
aam
rol
mov
das
adc
lds
xchg
jg
mov
scas
cwtl
cwtl
lea
fistpl
or
pop
adc
mov
or
inc
imul
xor
in
dec
cmpsb
or
xchg
add
lods
ret
into
jbe
stos
test
pop
je
mov
mov
sti
fisttpl
insl
cmp
and
stos
adc
fisttps
iret
mov
sbb
jae
mov
test
popf
aas
test
cltd
popf
sbb
cltd
popa
insl
insb
cmp
js
pop
xchg
jno
inc
push
cmp
inc
xor
inc
int3
jae
mov
mov
out
xchg
sbb
cmpsl
jp
iret
scas
push
sbb
loope
imul
lahf
cwtl
add
ljmp
sbb
dec
inc
jb
test
xor
int
dec
scas
movsb
sahf
test
bnd
test
shr
adc
dec
shll
adc
int
add
aas
mov
scas
lods
or
mov
mov
jno
mov
dec
inc
mov
testb
les
loope
xchg
jg
add
jo
dec
adc
add
push
cmp
sahf
xlat
imul
inc
call
pop
movsb
and
out
fistpll
test
adc
lret
adc
xor
inc
and
fdivl
pop
inc
inc
outsb
xchg
and
dec
test
nop
ret
jmp
mov
outsl
lods
push
or
sub
add
jbe
iret
repz
jp
negl
inc
dec
mov
cmp
push
pop
cmpsb
outsl
lea
loopne
ss
inc
xchg
xchg
push
loop
andl
or
stos
add
mov
mov
adcb
jne
jp
inc
cli
adc
xor
and
rolb
cmp
add
shlb
test
testb
xor
inc
pop
mov
or
dec
rol
mov
repnz
bnd
adc
out
icebp
adc
iret
aad
popa
hlt
inc
out
sbb
and
rolb
jb
lock
cmc
mov
or
or
dec
xchg
cmp
and
adc
pop
or
or
fbld
jle
cmp
addl
pusha
int
push
inc
jb
cmp
lods
orl
stos
push
dec
dec
fistpl
sub
ja
mov
mov
sub
or
add
push
pop
jns
int
mov
push
shrb
cld
lods
rcll
lret
imul
subb
mov
lock
inc
lahf
cmc
fsubs
xor
mov
in
stos
stos
adc
push
dec
ftst
in
imul
xor
fs
adc
pop
jb
jecxz
mov
or
or
cs
dec
cld
pop
rol
pop
inc
lret
stos
adc
loopne
in
ljmp
add
dec
loope
sarl
lock
ljmp
sbb
mov
out
roll
mov
xor
jmp
cmpsb
mov
outsb
sub
jg
sub
sbbb
and
inc
cmc
mov
je
cltd
push
imul
push
sbb
sbb
lds
mov
cmc
orb
or
sub
inc
mov
push
popa
in
mov
push
push
pop
xor
sbb
adc
xchg
std
pop
jp
sbbl
scas
in
pop
js
xor
clc
inc
dec
jae
or
inc
dec
ret
decb
sub
pop
lcall
fisubs
sub
lret
inc
jns
dec
fs
dec
jl
xlat
pop
test
mov
mov
mov
iret
or
shl
push
jmp
fadd
jnp
mov
push
iret
sarl
cmpsb
idivl
push
xor
fstps
sbbb
jne
xlat
jg
lahf
inc
mov
push
push
int3
mov
xor
sbb
mov
sbb
sbb
ret
imul
push
push
xor
neg
cmp
sti
imul
jno
loope
cs
sbb
addr16
cld
jne
lock
aad
jnp
shlb
mov
mov
cmp
fsubrl
repnz
xor
jns
fiadds
sbb
xchg
in
jp
xor
out
push
sbb
or
aaa
stc
fdivr
fsubs
push
xor
stos
push
push
xchg
lock
or
loopne
js
inc
popl
addr16
mov
mov
mov
aad
fsubl
mov
sbb
movsl
out
aam
xlat
call
lods
pop
rorl
data16
dec
jl
xorl
loop
or
repz
test
mov
lret
dec
fwait
push
adc
mov
fidivl
subb
inc
mov
inc
adc
cltd
adc
cld
jecxz
pcmpgtd
xchg
stc
subb
mov
sbb
dec
sbb
xor
cmp
mov
pop
lret
mov
pusha
repnz
jl
push
push
hlt
sub
enter
mov
lods
sub
dec
mov
jbe
cmpl
or
xchg
sbb
bound
ret
add
iret
ret
mov
test
xchg
adc
sbb
cmp
cmp
ret
jne
popa
out
scas
xlat
in
pop
aam
testl
push
out
lds
push
xor
dec
test
pop
push
fdivrs
pushf
mov
fildll
fwait
push
xor
mov
int
fwait
mov
jp
inc
ljmp
dec
sub
scas
repnz
and
mov
arpl
daa
push
inc
js
popf
leave
push
jbe
dec
pop
mov
xlat
fdivrl
sub
or
das
and
mov
xchg
mov
fcmovb
out
pop
pop
inc
sub
sub
pop
push
fstpl
lds
hlt
sub
jmp
outsb
jb
cmp
push
xchg
ljmp
fdivr
xchg
adc
pop
loopne
iret
sub
xchg
mov
jbe
inc
pop
mov
xchg
inc
jne
test
test
imull
add
and
jae
or
adc
pop
ret
sub
sub
pop
pop
sub
cmpsl
in
sbb
cs
sti
aas
sti
mov
mov
orl
out
add
inc
negb
inc
arpl
sub
not
mov
sbb
push
mov
or
and
jle
negb
test
popl
cs
lods
test
test
mov
sbb
and
imul
push
std
sbb
jp
pushf
in
addr16
insl
and
das
je
lds
mov
iret
push
push
jb
inc
stos
add
push
mov
imulb
jb
dec
sub
loope
ficoml
sub
add
scas
push
xor
std
ss
jmp
mov
pop
mov
xchg
mov
std
imul
aad
shlb
add
jno
mov
filds
ljmp
nop
test
mov
popf
aas
mov
mov
in
outsb
add
fs
ja
fisubs
pop
and
adc
push
jns
movsl
sbb
js
addr16
inc
int3
cmpsl
out
push
xchg
dec
addr16
inc
out
fiaddl
imul
xchg
lods
dec
popa
lods
test
popa
xor
jecxz
cs
popa
sub
xchg
cmp
repz
sbb
inc
call
lret
ja
push
sti
and
adc
adc
dec
adc
aaa
xchg
sahf
lea
xchg
mov
pop
bnd
xor
in
inc
xchg
inc
imul
sub
push
in
mov
jns
and
dec
movsl
mov
push
lds
mov
xchg
cmp
jo
js
int
or
ljmp
xor
int
cmp
mov
vcomisd
clc
and
ret
movsl
or
pusha
popf
shlb
mov
inc
jne
scas
pop
xor
adc
je
loop
aam
pop
pop
and
jl
mov
js
hlt
sahf
insl
jmp
imul
pop
cli
rolb
and
mov
or
pop
add
or
in
es
int3
stc
adc
xor
decb
sbb
mov
dec
adc
test
xchg
outsb
dec
daa
xchg
cs
mov
push
aam
sub
adc
sarl
sbb
mov
mov
or
lret
jmp
bound
fsubrp
adc
mov
adc
jbe
cs
test
test
ja
sub
jl
mov
scas
jmp
clc
lahf
pop
hlt
push
lcall
fsin
sbb
fs
int
push
pop
movsl
jle
mov
cmp
jbe
jb
and
or
cltd
jne
sub
mov
and
sti
jle
sar
sbb
inc
sub
push
and
pusha
mov
fcompl
scas
gs
push
std
in
add
scas
jae
cltd
insl
push
mov
sub
stc
sub
lods
jnp
inc
adc
mov
ja
addr16
sbb
xor
fs
testb
ret
fidivrl
test
push
xchg
into
sbb
sti
dec
lcall
test
xor
out
push
adc
rolb
sbb
insl
mov
jae
les
rorb
push
shlb
stos
fildl
les
loope
fnstsw
or
sbb
inc
pop
ljmp
add
decb
or
subb
jnp
loop
push
fldl
inc
test
shll
pop
popf
or
in
in
inc
popa
leave
mov
and
bound
push
xchg
inc
xor
in
mov
jns
rclb
xchg
add
movsl
push
stos
add
ljmp
dec
mov
es
cltd
ds
jb
fistl
jle
into
pop
jg
xor
add
pop
in
es
xchg
mov
mov
mov
iret
inc
push
fildll
lods
cmp
mov
ret
in
fwait
lds
test
xchg
cmc
ret
daa
xchg
js
imul
punpcklbw
lock
and
push
jge
xchg
dec
mov
pop
aaa
stos
sub
inc
cmp
mov
das
jl
jg
sub
shll
lret
dec
mov
mov
imul
push
pop
rcll
in
push
mov
or
mov
xor
push
movsb
jne
add
scas
mov
js
mov
or
and
sbb
mov
ret
dec
xchg
cmp
adc
xor
jnp
pop
xchg
sbb
js
jge
ds
movmskps
sub
fildl
test
adc
mov
mov
out
jl
mov
xchg
push
jne
mov
or
insl
sbb
cmpsl
push
xchg
push
xchg
mov
popf
lahf
ds
mov
adc
jnp
mov
int3
pop
pushf
xlat
mov
xchg
or
mov
je
fdivs
mov
out
dec
dec
adc
pop
pop
pusha
dec
icebp
xor
or
hlt
and
in
cmp
mov
pop
lret
fidivrl
xchg
lahf
in
or
aas
xor
stc
je
das
xchg
pushw
mov
sarb
cs
aaa
push
sbb
imul
xchg
mov
pop
imul
or
lods
aas
dec
arpl
je
out
and
xor
popf
and
cs
rclb
mov
cmpsb
dec
dec
lds
cmpsl
stos
mov
addl
sbb
pop
iret
pop
inc
pop
xor
dec
jns
push
mov
popa
xchg
mov
push
pop
aad
scas
loope,pn
pop
hlt
js
rcrl
js
jle
enter
and
mov
jp
mov
cmp
jno
push
cmpb
aad
call
xchg
inc
or
mov
adc
mov
add
sub
inc
ret
inc
dec
inc
push
cltd
lahf
movsl
adc
ds
movsb
pusha
out
pop
cld
push
dec
out
pusha
xchg
push
dec
test
cmp
out
and
cmp
cmpsl
sti
push
clc
push
fadd
mov
add
loopne
addr16
push
push
ss
jb
enter
sbb
bound
push
push
push
loope
inc
lods
adc
in
jb
dec
push
mov
mov
dec
rorb
pop
xchg
sti
lea
pusha
xor
fidivrs
loopne
mov
scas
test
rclb
mov
inc
cltd
test
pop
in
xor
push
pop
pop
lahf
and
jns
xor
jmp
mov
bound
das
into
push
mov
rcl
movsl
test
lock
into
dec
js
fadds
daa
pop
jae
mov
loope
cmp
lods
jp
add
sub
nop
adc
insl
test
jbe
dec
stc
or
enter
mov
mov
outsl
mov
roll
cmpsl
and
inc
pop
ljmp
test
lods
test
or
imul
rcll
dec
push
out
add
and
repnz
mov
xchg
test
sub
adc
aad
test
test
lahf
xor
loopne
inc
push
sbb
cmp
jmp
sbb
repnz
mull
ja
dec
sub
pop
daa
push
xchg
mov
or
out
icebp
iret
xchg
ret
mov
mov
jb
test
sbb
sbb
lret
mov
jmp
xchg
loope
push
adc
push
dec
mov
pop
enter
fs
sahf
xor
sbb
sbbb
add
lods
insb
push
outsl
pop
push
movsl
sub
js
sbb
jns
add
inc
mov
sbb
into
ss
iret
jne
dec
rorl
dec
fnclex
inc
das
sub
mov
fisubs
movl
add
out
push
mov
cli
push
hlt
stc
xchg
mov
popa
loope
adc
adc
and
or
push
sub
cmp
movsb
int3
sbb
cld
xchg
cmc
loopne
sub
push
xor
mov
cmp
dec
js
dec
jl
outsb
adc
push
lock
leave
mov
sub
add
aaa
inc
sub
cmp
sti
cmpsl
or
fwait
pusha
or
pop
mov
lds
mov
stc
dec
push
xchg
test
ret
in
lret
ss
xchg
cmp
inc
repnz
add
push
jbe
sbb
push
fbstp
test
mov
andb
mov
cs
and
pop
sti
inc
xor
mov
push
nop
sahf
mov
jmp
sbb
jle
es
in
dec
cmpsl
dec
out
mov
data16
adc
call
xchg
pop
fiaddl
movb
ljmp
pusha
mov
sti
push
loop
jb
nop
xchg
nop
stos
adc
pop
or
fldl
lcall
ds
out
pop
lock
hlt
pop
push
mov
mov
sbb
mull
add
add
in
sahf
pop
jae
sbb
fistps
je
pop
pusha
stos
cmpsb
pop
sbb
imul
xchg
adc
inc
daa
mov
das
in
and
sbb
lahf
pop
loop
into
sbb
pop
mov
xchg
jnp
xor
in
mov
inc
cmpsb
adc
jno
xchg
int
jo
insl
out
lods
jp
cmpsl
inc
lds
mov
out
loopne
stos
xor
in
jb
mov
jl
xchg
mov
repz
fistpl
popl
xlat
icebp
mov
sbb
js
ret
iret
or
icebp
cld
dec
pushl
insl
xor
stc
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
andl
mov
mov
mov
xor
add
mov
movzwl
and
mov
mov
sbbl
xor
adc
push
sub
mov
movzwl
sbb
mov
negl
add
xorl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
push
andl
xor
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
push
call
jmp
and
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
push
mov
mov
xor
xor
mov
add
add
imul
mov
jmp
mov
in
xor
mov
mov
jl
pop
jl
rol
ror
fiaddl
sub
add
out
sbb
jae
fsubrl
adc
dec
pop
pop
mov
push
cmp
xor
xor
rcl
test
stos
xor
jnp
ss
pop
mov
jmp
loop
xchg
push
push
fsubrs
popf
rorb
out
xchg
rolb
les
fnsave
arpl
cmp
sub
jge
cs
fwait
mov
or
push
test
push
mov
push
mov
sbb
sub
push
sbb
pop
dec
dec
xor
fwait
mov
pop
push
ljmp
mov
dec
and
cmp
cmp
mov
push
data16
push
scas
js
mov
add
popa
stc
repnz
cmp
testl
gs
jae,pt
mov
xchg
dec
add
popf
xchg
sbb
jo
stos
jl
xor
sahf
es
xchg
pop
or
mov
xchg
push
and
add
mov
sbb
mov
bound
rcll
les
jmp
test
fdivs
mov
in
jmp
inc
dec
rorb
or
clc
pop
or
inc
lret
test
ja
adc
xor
jge
iret
sub
mov
mov
jle
dec
clc
aad
shrd
insl
loope
hlt
jns
addr16
test
roll
jo
add
add
xchg
sarl
stos
xor
and
mov
xorl
mov
ret
out
mov
inc
pop
inc
mov
subl
cld
rcll
mov
int
sub
sbb
push
js
lcall
rclb
sub
adcb
cmp
icebp
addr16
and
bound
jns
mov
mov
fldenv
jl
mov
xchg
sub
mov
arpl
cmpsb
push
jb
mov
pop
inc
fwait
pop
xchg
mov
lea
call
outsb
sarl
lods
rcrb
jo
ds
fdivrl
mov
lods
ds
adc
stos
shr
nop
bound
sti
pop
fs
inc
popa
dec
or
mov
and
xchg
repz
repz
mov
loopne
lods
mov
stos
sub
lods
cmpsb
or
dec
ret
je
mov
inc
adcb
lock
test
inc
ficoml
xor
jmp
xchg
aaa
je
popf
xor
psadbw
sbbl
in
data16
jp
icebp
push
aam
pop
cs
fucom
jmp
stos
sarl
adc
adc
cmp
in
inc
inc
into
dec
xor
inc
out
mov
nop
bound
sbb
fdivl
imul
cltd
outsb
mov
add
mov
cs
xchg
in
xor
fisttpl
call
mov
lret
lret
lcall
push
sub
out
mov
jno,pn
mov
xor
xchg
cs
imul
push
rolb
lock
push
movsb
loope
divb
mov
add
stos
pop
jmp
inc
pusha
out
rclb
mov
jno
xor
push
shrb
sbbl
rcrb
mov
add
pop
push
mov
or
je
rorl
pop
sarl
xor
js
loopne
clc
and
inc
out
mov
ficompl
jge
sub
adc
ror
rolb
and
lret
xor
adc
mov
outsl
jns
imul
addr16
lds
imul
scas
cs
cmpsl
sbb
test
and
jno
xchg
jg
in
or
repz
or
pop
pop
mov
and
into
loop
in
iret
jecxz
dec
jnp
jl
jno
mov
push
mov
test
sbb
and
addl
or
add
shll
das
xchg
shlb
cmp
cld
shrb
jg
xchg
jb
or
sub
pushf
es
or
pushf
ss
mov
out
cmp
mov
push
cmp
push
hlt
mov
and
pop
xchg
and
jl
sub
mov
nop
ljmp
cli
and
xor
dec
or
mov
leave
jecxz
mov
dec
jmp
xchg
iret
push
sbb
jo
cwtl
out
sbb
push
mov
pop
in
xchg
into
sbb
mov
add
mov
ss
mov
aaa
xor
in
shl
pop
lods
dec
insl
lcall
mov
fxch
mov
test
mov
negl
cmp
add
and
insl
xor
rcrb
jg
hlt
pop
leave
test
sbb
testl
add
push
mov
jb
enter
sbb
mov
aad
xchg
sub
adc
xor
arpl
pop
and
cmp
xor
push
jle
aaa
fldcw
add
addr16
popf
mov
lods
cmp
ret
std
jbe
stc
push
mov
xor
xor
mov
popf
shll
inc
mov
mov
not
xchg
fsubrs
adc
dec
inc
xchg
dec
mov
fcompl
outsb
mov
mov
push
cmpb
sahf
add
js
mov
cmc
add
xchg
mov
movsl
adc
xlat
pop
or
cmpl
sub
adc
and
out
subb
dec
mov
push
or
movsb
scas
push
sbb
mov
add
jmp
adc
les
mov
push
out
jae
jp
out
xor
mov
ja
mov
cmpsb
dec
cmp
dec
xlat
mov
lret
or
pop
cltd
mov
addr16
mov
nop
mov
or
in
bound
push
push
xor
jl
adc
push
or
adc
das
xchg
into
mov
mov
repz
in
mov
es
sub
inc
add
jmp
mov
mov
insl
mov
sbb
ja
jne
push
mov
jge
jg
pop
cmc
mov
mov
arpl
cwtl
int
decl
ffreep
lock
xchg
mov
fmul
jge
xchg
pop
lret
fbld
sbbb
lret
adc
clc
add
push
and
push
testl
fidivrs
outsb
ja
cmp
lcall
out
inc
call
xor
test
out
sub
xchg
cs
mov
adc
pop
loopne
mov
and
mov
pop
imul
idivl
pusha
jae
and
cli
cmp
cmpsb
pop
xlat
sub
outsl
push
out
cmpsb
in
addl
test
mov
lods
and
push
leave
lcall
cld
add
push
or
iret
sub
hlt
daa
shr
pop
inc
push
jb
popf
les
xor
mov
sbb
sbb
push
jp
in
xchg
xchg
ja
call
push
ja
scas
fidivrl
popf
lea
xor
mov
cmp
ds
imul
push
adc
mov
test
mov
add
cmpsb
cmp
aaa
sub
insb
cld
adc
out
sti
push
inc
scas
ss
pusha
in
mov
add
sbb
hlt
sub
bound
cmp
std
xor
dec
pop
rcrl
stc
fldln2
dec
cltd
or
mov
mov
sub
shll
inc
es
mov
and
lahf
mov
rolb
daa
push
orl
add
aas
sub
aad
pop
xor
inc
test
adc
les
push
xchg
xchg
loop
and
cmp
xchg
jg
enter
mov
xor
pop
xor
xchg
iret
mov
mov
dec
adc
inc
jb
sub
enter
iret
testb
pop
pop
sub
xchg
cli
ret
shrl
and
jb
or
cmp
mov
bound
ss
xor
scas
jge
aas
dec
outsl
cmp
cmc
js
cmp
xor
in
pop
js
dec
inc
inc
lock
rcl
sbb
pop
or
add
icebp
sub
cwtl
mov
les
mov
xor
pop
sub
mull
push
ret
test
lock
add
inc
inc
int3
ret
inc
cltd
lcall
add
ljmp
aaa
sub
ljmp
mov
cmp
inc
jl
movsl
repnz
push
out
rorb
int3
aad
es
mov
je
sbb
jge
xchg
xchg
mov
cmp
lock
jmp
not
bound
outsl
out
xor
xor
jge
negl
decl
jge
subl
imul
fs
scas
mov
xor
clc
lahf
cmp
mov
push
lcall
cli
mov
push
jae
jmp
loopne
int
mov
push
sarl
sahf
stos
jge
in
in
mov
mov
leave
xor
xor
sbbb
push
push
mov
dec
lods
sub
adc
decl
lock
out
dec
ret
or
int
sub
cmpsb
sbb
mov
dec
adc
pop
jnp
sahf
xchg
aad
cli
xchg
xlat
mov
int3
outsl
and
xchg
cmovno
and
lret
inc
sub
out
mov
movsl
cli
mov
inc
dec
jne
jle
mov
insb
scas
dec
movsb
pop
push
mov
cmc
xchg
push
mov
mov
push
xlat
fmuls
fsubl
sbb
leave
lcall
jno
jne
push
push
sub
or
xchg
fwait
pusha
mov
testb
cmp
mov
or
fnsave
adc
hlt
mov
in
adc
pusha
ja
dec
pop
vunpckhps
jne
sub
cmp
fs
cmp
int3
dec
pop
sahf
sbb
iret
cmp
lcall
mov
jne
sahf
in
sub
mov
gs
mov
roll
cmp
sahf
inc
adc
adc
rep
cld
arpl
sub
inc
adcl
push
or
push
mov
pop
xor
pop
mov
lds
fwait
cmc
stos
popf
out
push
inc
jmp
xchg
aam
lods
inc
test
insl
enter
lods
cmp
out
push
test
push
xor
pop
cli
or
jl
adc
lods
jo
mov
hlt
mov
mov
mov
cld
mov
lods
arpl
mov
fnstcw
out
add
mov
ja
jbe
and
xor
mov
jo
nop
cmp
sub
add
iret
lods
sbb
out
xchg
lret
inc
mov
scas
movsl
shrl
popl
pop
std
ja
pop
data16
pusha
les
jp
test
popf
add
and
mov
aaa
fwait
ljmp
or
xor
jg
or
sub
test
cmpsb
iret
and
hlt
adc
std
cmp
mul
lahf
out
ljmp
xor
pop
cli
cmp
repz
psrad
cmpsl
jnp
push
xor
mov
test
mov
adc
pop
push
xchg
sub
sbb
lods
fidivrs
and
mov
hlt
sub
in
cwtl
outsl
adc
ret
xchg
pusha
push
xor
lcall
rolb
dec
lds
mov
aad
mov
lods
push
jne
stos
push
insl
js
cs
ss
scas
mov
insb
mov
mov
and
cmp
or
incb
mov
fimuls
fsubl
mov
mov
mov
arpl
mov
pop
mov
mov
mov
mov
adc
xchg
inc
jl
popf
and
test
lock
jl
nop
sbb
cli
leave
fs
cmp
or
add
jle
setge
fnstcw
mov
flds
dec
insl
addl
sti
push
mov
aas
loopne
sub
in
inc
pop
mov
repnz
or
cli
push
sub
xlat
fidivl
int
mov
or
cmc
cmp
mov
mov
fs
dec
outsl
stos
shrb
std
lock
neg
jecxz
mov
mov
sub
pop
mov
mov
outsb
push
jl
dec
mov
sub
aaa
add
push
cmp
in
cld
ret
rclb
sub
nop
lahf
ss
test
popf
adc
rorl
lock
or
mov
jmp
mov
sub
in
fadds
jnp
das
or
adc
data16
push
sub
adc
enter
push
jle
jge
and
mov
mov
pop
sub
adc
addr16
cmp
xor
xchg
in
inc
push
jg
ss
jge
sbb
xor
loop
mov
int3
lcall
shl
pop
mov
popa
ret
dec
pushf
mov
or
dec
mov
pop
jb
pop
rclb
push
outsb
or
dec
jg
xchg
pushf
lret
scas
lods
lods
loope
push
out
iret
jg
je
xor
mov
mov
jecxz
mov
push
mov
sub
ljmp
pop
cmc
adc
loop
mov
inc
push
sbb
lds
shrb
and
and
xchg
int3
or
mov
mov
popf
xchg
or
pop
xchg
test
hlt
jp
push
fidivl
cs
xchg
je
lods
sahf
mov
or
iret
scas
adc
pop
das
jp
popa
out
dec
adc
mov
lea
rcrb
push
sub
mov
push
into
hlt
dec
mov
test
gs
jp
pop
scas
sbb
add
inc
addr16
jnp
shlb
dec
adc
lods
mov
pop
fldenv
add
dec
sahf
xor
jbe
ljmp
adc
cmp
xchg
jae
lcall
js
cmp
cltd
adc
popf
mov
enter
scas
jl
rcrb
add
pusha
mov
or
mov
in
call
xchg
sbbl
jno
cld
mov
dec
insl
in
xchg
inc
mov
cli
and
or
pop
fsubr
jp
fcmovnu
stos
loope
xor
jo
xorl
popa
jl
push
push
fistps
add
add
pop
fs
push
push
mov
nop
cwtl
stc
jns
sbb
icebp
mov
out
scas
sub
idivl
inc
iret
cli
outsb
add
das
adc
inc
shrl
push
pop
in
mov
lods
movl
sub
sub
daa
ljmp
arpl
ror
addb
xor
notl
ret
enter
push
inc
cmp
pop
popf
push
push
pushf
jb
push
add
xchg
sub
xor
in
cltd
jge
xchg
enter
lret
lret
rcrb
xchg
and
aaa
mov
gs
gs
repnz
aam
imul
dec
jmp
pop
mov
or
jecxz
or
dec
mov
out
inc
xchg
aam
in
repz
push
rcl
xor
mov
xchg
jno
icebp
xchg
andl
xor
shl
adc
mov
adcl
es
cld
sbb
mov
xchg
jle
imul
cmc
imul
inc
int
xchg
je
fdivrl
xchg
jo
inc
stc
mov
bound
in
mov
lret
mov
pop
int
add
movsb
pop
inc
insb
popa
lcall
ficoms
mov
stos
inc
xor
xchg
cmp
cmp
fisubl
xor
cmp
sbb
leave
cmpsb
push
jne
mov
std
pop
xchg
or
jp
xchg
sbb
cmp
pusha
jo
xchg
rcll
mov
inc
jmp
xchg
xchg
push
dec
aaa
notb
andb
jo
push
in
inc
sti
ja
or
dec
fstp
out
je
push
ja
test
fstpt
test
je
mov
cmpsb
mov
les
es
dec
adc
adc
popa
sbb
pop
sub
cmpsl
mov
pop
push
push
loopne
pushf
sahf
add
emms
pop
dec
cmp
mov
adc
and
les
shlb
sub
cltd
outsl
gs
testl
adc
mov
std
push
in
mov
xor
xchg
movl
rdpmc
pop
aad
scas
xchg
stos
movsb
roll
pushf
testb
xor
bound
pop
sbb
sub
mov
mov
pop
adc
sub
cmpsl
mov
jns
out
popf
incb
les
fwait
movsl
hlt
push
inc
ss
sahf
mov
mov
xor
jg
mov
test
xor
pop
into
jns,pt
fcoms
or
sub
leave
lock
jg
xor
xchg
jmp
daa
test
into
lds
loope
cli
sbb
mov
pop
sbb
xchg
cmp
inc
cmpsb
xor
mov
popa
test
pop
and
jge
pop
cltd
enter
adc
fcomip
popf
test
mov
scas
or
imul
imul
pop
or
repz
adc
xchg
adc
mov
hlt
xchg
mov
sbb
loope
ficoml
nop
hlt
data16
cmovae
adc
scas
testb
and
test
inc
fstps
jb
call
xor
addr16
sub
popa
dec
movsb
sub
cmp
sub
bound
cmc
pop
addl
outsb
outsb
imul
sub
fwait
pop
xchg
in
lock
dec
call
sbb
sub
test
lcall
data16
mov
xor
sub
jno
sub
aaa
jb
mov
cltd
jb
xchg
dec
push
js
pop
popa
dec
pop
lahf
push
add
push
scas
adc
icebp
in
add
mov
dec
ja
adc
xor
sbb
loopne
jno
jle
scas
out
std
scas
jmp
inc
iret
xchg
or
insb
js
mov
lret
or
jo
imul
pop
mov
dec
scas
loope
adc
das
cmp
js
cs
movsb
out
xchg
push
lods
sbb
and
pop
shlb
xchg
or
mov
push
icebp
aad
lods
jecxz
and
push
popf
neg
andl
mov
jge
inc
in
in
in
sbb
jecxz
mov
push
scas
hlt
lods
or
push
fisttps
add
data16
ret
sub
iret
xchg
outsb
push
dec
xlat
mov
loope
std
adc
ja
pushf
rcrb
ja
pushf
inc
outsl
push
ret
pop
mov
rcll
or
or
in
js
jnp
and
jmp
sub
lret
cs
dec
xor
inc
or
sti
push
jl
push
aaa
out
xchg
sub
xchg
xor
cmp
lock
outsb
stos
xchg
xorl
mov
mov
xchg
jp
mov
xchg
inc
outsb
mov
popa
pop
jge
loopne
mov
ds
enter
jbe
sbb
aam
push
cmpsl
push
pop
jecxz
fistpll
jg
into
mull
popa
imul
sahf
repz
lods
out
cltd
dec
mov
imul
dec
push
aam
inc
shrb
nop/reserved
mov
adc
andl
push
sub
gs
imul
xlat
fwait
dec
rorl
es
cwtl
jmp
and
dec
xchg
leave
insb
or
xchg
pop
jl
adc
dec
into
mov
repnz
movsl
lods
and
out
mov
xchg
dec
sub
test
pop
fisubrl
mov
cmp
arpl
xchg
scas
pop
dec
jne
inc
dec
mov
mov
xchg
push
sti
pop
outsl
popa
mov
jle
add
xchg
les
lret
sub
fwait
inc
packsswb
popl
adc
jecxz
cmp
and
ja
pop
pusha
not
jo
pop
gs
and
sahf
and
inc
jb
cmp
dec
jg
sub
in
push
xor
sahf
aas
jmp
loope
mov
inc
pmaddwd
lret
or
add
in
cmp
imul
outsb
cmp
insl
xchg
add
add
lods
adc
xor
pop
in
and
sbb
jo
mov
mov
jno
adc
out
mov
in
dec
or
dec
mov
movsb
push
sbb
jp
test
add
pop
orb
movb
fimuls
mov
dec
fsubr
ljmp
jge
test
push
jbe
addl
imul
jb
cld
jmp
repnz
pusha
push
and
test
sub
mov
insb
push
call
dec
lea
pop
rorb
sub
inc
imul
inc
pop
pop
mov
jne
xor
es
cmp
shlb
bound
shl
xor
xor
rorl
mov
xor
insl
dec
repnz
outsb
pop
mov
fstps
inc
dec
mov
in
ja
inc
mov
mov
push
or
fsubs
shlb
mov
pop
jne
out
subb
cld
int3
lret
mov
je
cmc
hlt
fdivl
insb
sub
movl
jnp
and
dec
and
push
test
dec
mov
dec
add
jl
or
test
push
iret
mov
mov
mov
jecxz
mov
jbe
xor
jno
or
jo
mov
insb
movsb
idivl
mov
mov
insb
sbb
pusha
sbb
loop
or
push
rclb
mov
stc
pop
lods
jge
aam
jno
mov
add
lds
mov
mov
fwait
mov
pusha
ljmp
aas
jae
lds
sub
pushf
jbe
mov
ja
popa
xlat
repnz
stc
cmp
jge
inc
or
clc
push
push
or
mov
xchg
movsl
inc
mov
pop
inc
mov
mov
adc
dec
fistpll
cmp
cmpb
test
test
mov
mov
xchg
jge
or
out
fadds
mov
sbb
mov
or
daa
push
repnz
clc
stc
stc
or
push
mov
pushf
ficomps
sarl
dec
adcl
in
jmp
inc
shrl
add
and
mov
cmpsl
inc
xor
sub
xchg
aas
ja
jns
ss
dec
sub
icebp
cwtl
into
xchg
out
push
add
adc
sub
cmc
push
and
rcrb
push
loope
xlat
jp
cwtl
mov
jae
xchg
mov
divl
ficomps
push
cmp
push
xlat
std
fsubr
fdivr
mov
aam
dec
loope
jl
xor
mov
adcb
or
cmp
sahf
stc
adc
scas
ja
push
jmp
and
aad
mov
sbb
in
mov
lods
mov
movsl
inc
xchg
xchg
xchg
xchg
pop
cld
push
addr16
push
or
pushf
xchg
mov
mov
sbb
mov
icebp
lds
pop
mov
lds
pop
movsb
mov
mov
das
mov
faddl
or
cmc
rcrb
sbb
fwait
lcall
and
lods
stos
mov
pushw
mov
lods
cmc
mov
es
int3
sbb
iret
repnz
mov
pop
cmp
dec
out
jns
mov
in
pusha
mov
push
cmpsb
jmp
push
add
repz
das
pop
les
test
pop
or
cmp
xchg
dec
adc
inc
xor
xor
push
push
fnstsw
shll
fiaddl
xchg
cmpsb
xchg
loopne
push
lods
xchg
pop
std
mov
mov
pusha
mov
jle
repz
aam
test
and
cmpl
push
mov
aad
lods
and
inc
xor
out
fsub
jle
not
sarb
mov
cmp
mov
inc
dec
sbb
out
adc
fldt
mov
test
inc
inc
scas
pop
mov
jb
addb
sbb
iret
xor
dec
repnz
shlb
xlat
das
xlat
mov
or
push
xlat
test
jo
sub
mov
jns
cmpsl
mov
cmp
addr16
and
data16
inc
pushf
jge
cmp
outsb
add
rorb
in
out
fwait
push
mov
jo
inc
int
fs
cmc
xlat
imul
rorl
mov
sub
push
mov
cmp
mov
sbb
and
test
jns
jb
mov
jno
mov
mov
mov
outsb
ret
push
cwtl
mov
dec
hlt
insl
das
sub
int
in
cmp
or
stos
aas
je
xchg
or
scas
sahf
mull
mov
push
adc
and
jno
lea
mov
pusha
std
cs
jb
pop
jg
aaa
fwait
in
jno
aaa
stc
aam
inc
outsb
or
notb
mov
lods
fisubrl
dec
jge
xchg
scas
mov
iret
xchg
dec
xor
lret
add
ss
lahf
dec
sub
imul
ds
jbe
shl
aaa
clc
test
mov
aad
loop
jo
lock
pop
jp
jl
jo
loope
inc
stos
cwtd
mov
cmpsl
inc
test
xor
xchg
push
or
js
in
cmc
pop
mov
mov
xor
xlat
dec
push
mov
subb
add
test
and
enter
jns
ret
andl
pop
add
daa
and
fidivs
mov
cmp
mov
sarl
mov
es
or
cmc
iret
pop
movsl
xor
das
xchg
adc
pop
or
div
push
push
fdivr
or
enter
or
out
aad
mov
push
mov
mov
aad
cli
sahf
call
mov
icebp
ret
xor
pop
movsb
xchg
dec
and
sbb
lds
mov
jo
movsl
in
insb
or
imul
mov
sahf
repnz
insl
jbe
fdivs
jecxz
mov
dec
mov
sub
fnstenv
xor
sub
and
test
rcrb
sub
xchg
ss
add
stos
push
out
test
lret
mov
std
popa
addr16
lret
cld
jmp
jo
push
cmpsb
add
vsqrtpd
jle
and
ret
xchg
popa
rorb
mov
and
filds
pop
push
mov
in
pop
xchg
test
cmp
mov
mov
fbld
dec
lods
fiadds
cld
pusha
mov
cltd
add
out
sub
nop
mov
and
int
sti
fs
call
jecxz
adc
test
dec
out
sub
movsb
xchg
xor
push
mov
push
add
lret
cld
cmp
popa
cmpsl
sub
dec
addb
test
xlat
jae
sbb
mov
xchg
push
aam
xchg
stos
movsb
pop
lret
ja
inc
insl
mov
cmp
sub
mov
movsl
sbb
jne
dec
imul
pushf
call
inc
std
mov
jno
cmp
imul
sti
pop
shl
call
adc
in
cmpsb
and
xchg
and
shlb
pop
mov
add
cmp
pop
aam
push
div
cs
sar
stos
jmp
pop
mov
push
xor
inc
fmul
notb
dec
in
xchg
or
add
jo
jnp
sub
dec
push
sub
push
mov
jle
xchg
mov
fnsave
mov
sbb
out
adc
mov
dec
dec
loope
js
aam
and
pop
imul
cmp
jg
push
push
mov
stos
mov
pop
cmp
cmp
pushf
lret
cmp
lods
inc
pop
decb
inc
pop
test
mov
push
mov
push
jo
xor
pop
xchg
mov
mov
sbb
sub
or
push
jle
inc
mov
ljmp
ret
adc
das
adc
push
xor
mov
int
addb
hlt
loop
popa
cmp
sbb
ret
ds
stc
add
loopne
data16
insl
and
pop
fisttpl
ja
xor
pushl
jmp
in
mov
dec
xor
dec
mov
insb
sub
xchg
dec
aaa
lret
mov
into
mov
mov
mov
jmp
sahf
int3
outsb
scas
pmaxub
out
pusha
mov
mov
insb
shl
sub
test
jecxz
sahf
leave
sbb
shl
adc
sbb
dec
stos
mov
mov
movsb
popf
or
push
or
xor
jbe
stos
ret
add
nop
sub
push
lret
cltd
js
shlb
clc
sbb
push
mov
orl
pop
je
notl
xchg
dec
stos
addr16
mov
and
add
lods
push
sbb
add
mov
arpl
fisttps
cmp
mov
test
movsl
and
rdmsr
repz
mov
jge
push
pusha
movw
shll
and
bound
ret
call
cltd
jecxz
dec
je
inc
xor
clc
cmpsl
loopne
and
push
shr
icebp
scas
sbb
hlt
insb
and
mov
jmp
or
push
sbb
push
sbb
push
fstp
dec
xchg
pop
inc
dec
sub
lods
aaa
fstl
popf
adc
fcmovbe
sub
mov
bound
fwait
cmp
jnp,pt
adc
pop
xchg
movsb
xor
scas
ret
mov
sub
setno
sub
sbb
cmp
loopne
aaa
clc
pop
insb
fwait
jns
insb
push
add
push
mov
mov
aad
push
je
pop
stos
jbe
or
fdivl
sbb
cltd
sbb
push
inc
dec
xchg
adc
pop
cmp
inc
fildl
shlb
or
push
inc
mov
cmpsb
fnstenv
scas
pop
subl
data16
es
add
cmpl
xchg
pop
cltd
call
mov
mov
push
push
adc
jnp
bound
jb
stos
xchg
lret
mov
frstor
fcmovbe
leave
adc
sub
int
mov
cs
lahf
jnp
push
idivl
push
jecxz
add
repz
jg
dec
lods
mov
ret
fldt
pop
dec
inc
lahf
push
xchg
arpl
ljmp
bound
push
sub
cli
pop
mov
ljmp
or
leave
dec
dec
sbb
jle
iret
xor
pop
in
icebp
repnz
testl
dec
daa
test
loop
sbb
or
add
xor
outsb
pop
outsb
or
xor
push
push
loope
imul
cltd
imul
push
mov
lea
dec
or
out
or
fisttps
cwtl
adc
call
cmp
and
mov
add
inc
xchg
movsb
adc
push
call
jb
je
xor
xlat
sub
test
cs
insb
pusha
dec
ljmp
mov
jae
into
inc
push
xor
gs
int3
lea
and
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
sbb
mov
xor
xor
sub
mov
add
movl
or
mov
push
mov
add
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
add
mov
negl
push
mov
adcl
add
cmp
movl
je
mov
mov
xor
xor
adcl
add
add
adc
negl
xor
mov
push
movzbl
adc
xor
xor
mov
and
mov
add
movl
adc
addl
xor
movl
xor
movl
cmp
movl
jne
movl
cmp
je
jmp
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
sbbl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
notl
mov
adcl
add
movzwl
mov
mov
sbb
movb
add
lea
xor
mov
addl
mov
mov
orl
xor
andl
sub
andl
mov
movl
or
push
jmp
and
add
in
pop
scas
dec
daa
push
jl
pop
pop
jl
outsb
dec
outsb
mov
enter
fs
mov
pop
cmp
scas
es
mov
outsl
push
mov
or
cmp
push
dec
not
cmp
stc
addr16
rcll
outsb
push
jp
std
out
sarb
pop
test
push
insb
sarb
lock
int3
dec
push
gs
sbb
icebp
xchg
push
ljmp
int
addr16
les
into
icebp
call
fs
ljmp
and
pop
inc
mov
or
testb
sub
dec
sub
push
sarl
cld
pop
pop
or
mov
push
pop
pop
mov
out
movb
mov
js
cltd
rcr
ja
fdivs
inc
mov
cmpsb
dec
mov
cwtl
incl
lret
push
lretw
adc
rcll
fwait
das
dec
sti
jnp
hlt
int3
pop
roll
adc
cmp
pop
mov
scas
mov
cld
stos
lcall
loopne
cmpps
arpl
push
ficompl
pusha
jae
adc
cmp
dec
divl
adc
ret
scas
fcmovu
and
jle
das
dec
adc
push
mov
fistps
sarb
sbb
push
es
cmp
xor
test
dec
stos
add
xchg
loope
lea
adc
popf
andl
les
adc
imul
pop
in
push
mov
test
cmp
lods
cltd
ss
push
idiv
pop
push
cli
pop
test
and
aas
movsb
stos
mov
nop
mov
iret
pop
pop
js
js
sti
sub
sti
leave
nop
xchg
pop
dec
psubusw
test
ss
lret
push
ja,pt
in
sbbl
cmp
andb
in
rol
xchg
xor
insl
sub
jnp
out
in
jae
pop
lock
sbb
loop
cmpb
add
cmpl
pop
cmp
sub
dec
mov
xor
mov
call
les
mov
sub
lods
cmp
pop
leave
dec
dec
sbb
push
mov
addr16
cmp
sbb
rcl
insb
or
mov
es
push
outsl
mov
cmp
cmp
fsubr
xchg
aam
icebp
in
jo
ja
shl
das
ret
sbb
rcll
cmp
push
outsb
cmp
and
cmp
mov
sbb
xchg
and
inc
xor
cmp
and
push
pop
mul
pop
push
andl
or
and
mov
and
idiv
inc
sbb
shlb
popf
in
in
cmp
lret
rcll
divb
shrl
push
dec
arpl
add
movsl
mov
and
push
enter
mov
rol
jmp
adc
int3
mov
out
cmc
or
enter
addr16
test
mov
aas
ja
push
sti
pop
addr16
lds
pop
inc
xchg
and
lret
cmc
divb
xchg
mov
lcall
xchg
pop
push
cmpsb
and
addr16
jo
add
pop
lods
push
xor
jle
ret
imul
push
and
cmp
cmp
sub
mov
into
lret
cmp
and
ja
push
cmp
cld
mov
mov
mov
ljmp
push
out
das
mov
and
lods
lcall
shll
xchg
adc
hlt
xchg
pop
popa
adc
xchg
adc
mov
push
fisubrl
daa
add
mov
mov
push
fsts
cwtl
mov
lahf
mov
lods
test
mov
rcll
jl
lods
adc
dec
scas
fsubr
enter
jnp
shl
les
andl
aaa
scas
std
in
and
adc
fisubs
pop
loopne
push
subb
sub
push
aaa
hlt
movsl
lods
sbb
push
mov
movsb
sbb
pop
cmpsb
fcom
mov
push
popl
out
lahf
mov
loop
cmp
mov
inc
repz
test
inc
cmc
push
into
outsl
xor
add
in
fstl
into
jmp
enter
nop
cwtl
rorl
fisubrs
addb
dec
pop
in
xchg
jle
bound
cmpsl
in
xchg
or
mov
mov
popf
mov
inc
or
in
ret
ret
mov
and
pop
dec
dec
add
xchg
ja
loop
bnd
xor
mov
cltd
mov
and
mov
repnz
movsl
shlb
inc
ljmp
push
insb
or
adc
arpl
minps
jl
andb
test
call
jmp
jl
es
push
aaa
add
ret
bound
mov
mov
pop
jb
test
decb
and
arpl
push
jbe
push
jbe
fisubrl
adc
lods
lcall
ljmp
and
pop
mov
aad
mov
dec
cmp
xor
adc
js
fwait
mov
mov
sbb
or
xchg
loopne
pusha
mov
cmp
push
sbb
mov
jecxz
and
mov
inc
ret
jge
lock
sub
inc
stc
dec
mov
jle
inc
in
ret
cmp
inc
mov
lret
cmp
pop
pop
xlat
mov
fists
scas
bound
or
pop
les
dec
mov
mov
pop
int3
xchg
add
add
dec
mov
pop
push
jnp
push
aam
mov
neg
shl
orl
xchg
mov
sub
mov
outsl
inc
sbb
ret
js
mov
mov
add
push
imul
orl
pop
lret
loop
xchg
shrb
movsb
add
arpl
inc
sub
fisubs
lret
xor
dec
push
mov
cmpsl
push
gs
mov
test
int
fdivl
mov
cmp
adcb
xor
enter
jb
repz
iret
xor
pop
rorb
sub
mov
clc
enter
scas
lret
out
mov
jne
xchg
mov
xchg
bound
gs
and
cli
mov
outsb
pop
cmc
lods
test
in
add
shll
rcrb
pop
mov
es
add
loopne
sbb
pushf
push
push
push
mov
roll
icebp
push
aaa
addr16
rorb
loopne
cmpl
or
adc
xchg
iret
lds
or
into
fsubrs
inc
push
ficomps
loope
ss
mov
push
jnp
push
js
add
cmp
aad
imul
xchg
jp
xorl
aam
mov
adc
test
pusha
add
xchg
insl
call
add
push
jle
rcrb
aas
repnz
rol
push
mov
movsb
mov
out
xchg
out
jb
sub
lods
js
int3
pop
mov
mov
cli
jne
pop
ss
add
mov
mov
call
pop
inc
push
inc
sub
xlat
cltd
mov
arpl
jg
xor
shlb
inc
add
or
out
sbb
add
nop
dec
pop
popf
lahf
jecxz
pop
pop
call
sbb
cwtl
test
xor
out
enter
test
xor
inc
jmp
xor
test
sub
jle
mov
pusha
pop
mov
xchg
out
jmp
mov
imul
xchg
movsb
xchg
adc
xchg
insl
bound
mov
sbb
test
mov
add
mov
cmp
sub
mov
cwtl
jae
dec
ja
jle
lret
stc
lret
mov
in
insb
push
add
xchg
adc
repnz
mov
imull
fsubrl
out
and
nop
dec
shlb
mov
sub
xchg
cmp
and
dec
fmull
xchg
add
cs
add
xor
adc
jecxz
and
lock
sbb
and
push
push
jno
cmpsb
orl
xor
rclb
lcall
sub
mov
mov
das
pop
inc
xchg
daa
xchg
cmp
arpl
mov
mov
pop
mov
mov
pushf
stos
in
sbb
je
adc
mov
repz
xor
jl
mov
daa
dec
sahf
mov
jns
popa
inc
mov
into
lock
sub
std
insb
cmpsb
inc
out
xor
xor
or
out
mov
sarl
fisubl
popa
ret
pop
pop
mov
call
lds
loope
dec
das
iret
pop
mov
cmp
adc
js
pusha
insl
cmp
and
push
or
jno
pop
sub
add
shrl
pop
pop
xor
push
push
scas
pop
nop
push
xchg
dec
aas
pushf
push
test
mov
es
jecxz
and
jp
dec
and
mov
psubsw
mov
adc
and
scas
sarl
gs
jne
mov
jno
push
test
add
fstps
add
jmp
xor
pop
lret
add
fnstcw
jnp
cmovl
std
ret
aas
ret
xor
xor
push
mov
jns
adc
jp
add
movsb
fdivp
and
sti
andl
or
mov
call
sbb
fs
jbe
testl
push
cltd
scas
sub
stos
aam
dec
jae
sahf
pop
mov
je
arpl
ret
in
sbb
outsl
mov
sbb
cs
repz
add
fdivrl
outsb
jl
mov
sahf
cmc
dec
adc
ds
or
in
es
pop
ja
insb
in
stos
jbe
mov
push
mov
sbb
jmp
add
push
sbb
lcall
ss
rcl
repz
jg
cmp
je
mov
pop
lahf
add
inc
add
mov
pop
mov
lret
jns
push
mulps
xor
scas
and
push
jno
dec
xchg
pop
jbe
ljmp
cmpsb
mov
std
or
nop
pushf
cld
sbb
inc
mov
pop
inc
scas
mov
aam
push
iret
into
jo
cmp
cmp
aas
push
sub
shll
add
in
lret
mov
xchg
jle
jp
push
mov
push
inc
mov
stc
pop
cmp
pop
jmp
mov
mov
mov
push
int3
lret
and
cltd
mov
adc
sbb
add
cmpsb
push
rcrl
cmp
pop
pop
lds
pushf
shll
jb
fnsave
lret
enter
push
popa
push
movsb
stc
adc
or
hlt
or
pop
bound
cmp
cmp
orl
into
xor
pop
test
imul
ja
sbb
outsb
jmp
shrl
popa
jns
jp
jae
add
pop
adc
into
aam
mov
sub
add
aas
sbb
adc
xor
fsubs
inc
xchg
stc
push
mov
mov
xor
xor
add
addr16
and
std
jae
xlat
movsl
add
testl
xchg
mov
lds
xchg
and
sete
aam
mov
dec
popa
dec
push
jo
jge
dec
imul
insl
dec
sub
pop
mov
scas
dec
sbb
cmc
xchg
mov
push
dec
adc
mov
xchg
addl
pop
push
cmp
gs
enter
icebp
mov
dec
push
adc
int
insl
inc
xor
sbb
lcall
xor
cmp
es
cmp
mov
lods
pop
out
shll
or
and
dec
pop
sub
insb
aam
lods
xchg
sub
adc
xor
movsb
jge
jae
push
lret
lods
mov
push
mov
es
cltd
nop
insl
popa
xchg
xlat
inc
mov
cmpsl
mov
hlt
sub
hlt
shrl
mov
or
xor
mov
mov
push
jo
pop
fisttpll
lret
mov
and
shlb
mov
and
push
or
jbe
fsubp
xchg
mov
jg
pop
lahf
lock
lahf
flds
addr16
push
pop
sub
ss
push
int3
inc
mov
iret
jg
or
push
cmc
xor
and
aam
rcpps
out
xor
push
dec
adc
ret
lret
xchg
sbb
mov
sahf
or
sbb
mov
push
loopne
lahf
mov
or
daa
push
mov
pop
mov
inc
dec
sub
arpl
dec
rorb
push
out
addr16
in
shll
bound
mov
inc
sub
imul
push
mov
mov
test
loopne
cmp
lret
sbb
cmp
mov
mov
xor
fisttpl
iret
mov
xorl
mov
out
mov
jno
ret
iret
mov
inc
mov
sub
push
cltd
int
mov
mov
push
pop
sbb
loop
imul
inc
negb
int3
pusha
mov
fisubrl
mov
dec
das
mov
stos
call
je
fs
aaa
lods
es
ficoms
jno
pop
mov
sub
les
imul
dec
inc
add
and
xchg
add
daa
in
negl
fistpll
hlt
fnsave
xchg
push
jne
xchg
jnp
jmp
scas
fwait
inc
inc
inc
repz
ds
in
add
fiaddl
fs
lock
sub
mov
sbb
repnz
jp
imul
mov
mov
mov
aam
mov
fsub
aas
ljmp
test
aad
mov
push
and
push
cltd
test
adc
pushf
inc
cmp
push
stos
or
sbb
sahf
cmp
dec
mov
ret
fdivs
push
push
xchg
sub
int
xor
test
enter
fmulp
mov
sahf
ret
nop
shl
mov
push
push
imul
lcall
push
test
or
cmp
rclw
loopne
dec
dec
pop
fildl
das
scas
in
sub
dec
and
cmc
idivl
leave
arpl
mov
cmp
mov
sbb
mov
mov
and
and
pause
pop
xor
rolb
and
push
mov
sbbl
aas
sub
pop
aam
ja
repz
in
je
inc
insl
adc
cmp
addb
or
fdivr
jne
sbb
mov
aad
pop
xchg
xchg
loope
mov
stos
xchg
out
push
shll
sarl
mov
mov
imul
lret
cmp
lock
cmp
mov
aaa
fidivrl
das
mov
xchg
or
repnz
pop
gs
sbb
mov
and
lcall
push
ret
setl
jle
mov
mov
sbb
jno
dec
leave
and
xchg
fildl
inc
pop
jl
stos
dec
mov
shll
add
sub
aam
mov
sbb
test
adc
movsb
jne
out
mov
push
jmp
xor
mov
and
aas
dec
out
sahf
in
cs
lea
pop
sub
sub
dec
aad
push
pop
add
in
xchg
mov
lret
pop
push
fisubl
pop
cmp
xchg
into
dec
mov
mov
test
xchg
push
rclb
mov
sahf
clc
jmp
insb
and
clc
je
inc
lds
lcall
sti
sbb
inc
repz
cli
cmpsl
mov
ret
pop
out
lea
scas
push
mov
cmp
pop
shrl
lods
push
idiv
lods
adc
lods
mov
sbb
inc
push
and
adc
jbe
sub
inc
inc
sub
mov
jne
pusha
xlat
jge
cmp
neg
jae
addb
or
push
push
fnstenv
cwtl
ffreep
inc
es
test
cltd
dec
hlt
xchg
lcall
xchg
bnd
fildl
sub
jl
xor
test
or
roll
dec
pop
popf
ficompl
lock
xor
das
inc
hlt
mov
das
add
jno
pusha
add
mov
cmpsl
pop
test
fldt
mov
and
pop
scas
inc
ja
mov
aad
cs
pop
insl
xor
fwait
movsl
iret
arpl
addr16
adc
outsl
and
pop
test
push
xor
xchg
lcall
cltd
js
fcmovnb
cmp
jecxz
loop
outsl
xchg
in
or
jns
out
fcoms
xor
mov
jno
jmp
aaa
mov
or
mov
rcll
dec
jo
dec
dec
sbb
xchg
loope
lret
xor
pop
test
imulb
cmpsl
pop
mov
or
xchg
xchg
rcrb
pop
adc
jno
dec
scas
inc
in
add
cwtl
or
popf
xlat
pop
imul
test
dec
stos
sub
stc
inc
cmpsb
dec
xchg
data16
xchg
clc
xor
dec
iret
das
inc
fimull
cwtl
inc
jnp
sbb
mov
insl
xor
nop
cmp
add
jle
sub
imul
repz
xor
test
or
testl
js
add
fsubrl
int
sub
imul
insb
mov
sub
add
pop
add
lahf
call
bound
jb
add
jle
aaa
jle
js
imul
or
adc
movsb
mov
sahf
cmpsl
repnz
in
sub
daa
xchg
dec
incb
pop
rcrb
adc
push
sub
dec
or
leave
jb
or
cmpsb
loop
orl
push
mov
loop
mov
sahf
sbbl
cmc
inc
sbb
int3
stos
or
fnstsw
adc
in
dec
lret
imul
popf
ud0
ret
or
mov
out
insl
aaa
jp
or
imul
fdivrs
lcall
sbb
lds
add
or
inc
pop
aad
in
sub
push
aam
vmovhpd
dec
sbb
pop
xchg
jmp
sbb
gs
je
call
xorb
in
dec
cmpl
mov
inc
popa
mov
push
divl
and
adc
pop
lock
mov
cmp
arpl
push
sub
jno
add
pop
pushf
mov
dec
adc
or
jp
push
push
loopne
aaa
adc
fisttpl
push
jg
push
mov
pop
test
lret
daa
ja
push
pushf
mov
insb
mov
push
sub
les
fsubrl
mov
push
jne
lret
shlb
inc
inc
or
jo
or
mov
aas
cld
scas
mov
out
dec
sbb
std
or
jns
inc
test
lret
jbe
dec
or
outsl
cmp
bound
lods
loop
dec
xchg
ret
jecxz
mov
and
testb
aad
xor
inc
repz
xchg
dec
jnp
mov
movsb
lods
jge
jg
and
into
adc
mov
pop
mov
adc
into
das
or
das
jno
xor
outsb
adc
sahf
add
test
lret
aaa
scas
flds
jns
cmp
jmp
lea
sbb
jecxz
inc
mov
inc
jo
sahf
adc
push
sbbb
pop
mov
cmp
popf
loopne
imul
in
cmp
add
adcl
jg
jmp
adc
mov
into
xor
inc
enter
push
xlat
stos
jno
pop
ljmp
cmpsl
inc
pop
push
ljmp
sbb
aaa
call
adc
xchg
cmovl
pop
jno
dec
xor
xor
imul
and
xchg
pop
mov
lea
fsts
inc
shl
mov
pop
mov
cli
outsb
add
cltd
into
and
out
push
sahf
cmpl
lods
rcll
jecxz
adc
fisubrs
sbb
inc
aad
loope
cmpsb
mov
jmp
sub
pop
icebp
xchg
test
movsl
ficomps
or
mov
add
sub
mov
lret
push
in
pop
test
jae
aad
test
roll
or
test
inc
pop
pop
enter
gs
cmp
pop
pop
inc
jmp
rorl
mov
pop
sub
jnp
cmp
lahf
jl
sub
das
mov
out
or
push
pusha
cwtl
or
push
sbbl
loopne
das
loop
orl
mov
out
ror
mov
or
cmp
cltd
in
or
into
and
test
imul
in
push
mov
adcl
sbb
pop
cmp
mov
mov
addr16
xor
popa
gs
aad
pop
xor
inc
fisubl
mov
jo
adcb
mov
mov
cmc
mov
mov
ja
cli
sub
sti
inc
sbbb
cmpsl
push
push
fwait
test
sbb
xchg
xchg
sub
sbb
push
mov
or
fisttpll
outsl
adc
stos
insb
test
loopne
pop
inc
jne
movsl
nop
addr16
mov
aas
test
pop
fildll
stos
nop
pop
arpl
lahf
dec
jl
movsl
sub
sub
das
xchg
inc
and
sbbb
pop
dec
mov
outsl
aam
add
dec
mov
orl
dec
cmp
lsl
dec
add
adc
repnz
cmp
call
sub
pop
fnstcw
lock
jbe
jbe
jmp
push
push
push
xor
ftst
out
jg
xchg
xchg
xor
les
mov
pop
std
mov
sub
pop
fnclex
sub
mov
or
mov
jns
sub
jp
ss
xchg
das
xor
xchg
push
lahf
inc
mov
fdivrl
and
pusha
jbe
mov
and
mov
push
jne
jmp
stos
sahf
addl
ret
mov
and
shl
cwtl
sahf
daa
mov
add
test
es
mov
ja
mov
sub
xchg
mov
fnstsw
dec
or
mov
aad
push
cmp
pop
icebp
divl
ret
adc
ret
sti
pop
sbb
pop
sbb
jbe
lahf
aam
sub
pop
pop
or
cli
push
jge
xor
leave
inc
call
mov
xor
pusha
aas
test
push
or
les
cmpsl
dec
lcall
lret
mov
pop
fsubrl
xchg
cmp
jmp
adc
outsl
stos
out
int
mov
or
mov
adc
in
jbe
call
mov
or
or
movl
push
ss
sbb
je
into
scas
pusha
dec
sub
fmull
inc
in
cmpsb
sub
imul
ja
mov
imul
lret
scas
mov
inc
push
xor
mov
test
push
add
jmp
mov
stc
sbb
or
adc
pop
adc
fldt
test
pop
jg
push
adc
and
dec
loope
ficoms
and
mov
mulb
jns
and
lods
mov
loop
mov
xchg
pop
out
xor
rcl
or
xchg
add
in
or
xchg
push
add
fisttpl
aam
sbb
cmp
ja
out
aam
jns
test
and
cmp
hlt
and
call
mov
push
jnp
cltd
mov
sub
adc
push
sbb
daa
repz
jbe
outsb
xchg
dec
lods
and
jmp
aas
and
bound
adc
fwait
push
mov
sahf
bound
pushf
fcoml
insb
pop
in
and
test
sub
push
inc
or
xchg
jecxz
mov
sbb
fistpl
test
jl
jns
mov
into
xchg
dec
jnp
mov
dec
or
ljmp
lods
lock
adc
sti
aas
dec
ds
or
scas
lahf
outsl
push
push
cmp
je
jmp
lcall
pusha
inc
sti
mov
movl
rorl
shll
sbb
enter
fdiv
out
mov
mov
adc
negl
popa
lock
fwait
add
jo
jb
cmpsb
insl
mov
jnp
pop
push
aad
jnp
in
xchg
push
inc
dec
adc
rcrb
lret
xor
cmp
push
inc
lods
iret
stos
fs
leave
rolb
push
add
mov
sbb
pop
js
pop
pop
fmulp
mov
push
test
xbegin
xchg
rcll
mov
mov
adcb
fcomp
and
push
push
icebp
sahf
test
adcb
add
jg
sbb
cwtl
and
aam
sbb
fcmovne
jecxz
push
sti
adc
scas
lock
addr16
xor
inc
adc
mov
icebp
std
sahf
add
shrb
addl
inc
sbb
jge
jbe
sub
xchg
sub
mov
sbb
out
jl
testl
xor
mov
inc
icebp
mov
and
mov
outsl
in
push
and
bnd
bound
pop
es
cwtl
xor
cmp
mov
pop
jns
std
std
lds
lret
bound
out
xchg
shll
sub
inc
push
addr16
or
fs
dec
fists
ds
repnz
or
repz
call
xlat
xchg
icebp
pop
sahf
dec
cld
out
test
cmpsb
aaa
inc
in
jae
cli
mov
inc
mov
popf
lret
jne
stos
fcomp
jl
shlb
adc
cs
mov
aad
jb
push
ffree
mov
aaa
mov
cmpsl
aad
std
jecxz
bound
mov
test
ja
aaa
int
add
daa
pop
and
push
xchg
les
fisubs
jno
xchg
dec
adc
xchg
xchg
test
sub
mov
fcompl
jno
jecxz
into
sbb
push
out
int3
cmp
stos
cli
adc
arpl
adc
fsubr
int3
mov
mov
inc
call
inc
adc
out
out
and
lret
int
insb
add
imul
int3
lcall
es
inc
decb
and
lahf
test
adc
fsubrs
outsl
push
and
mov
js
cltd
dec
imul
jge
inc
cli
loope
insb
mov
filds
jnp
pop
repnz
cwtl
mov
dec
push
iret
push
fisttpll
inc
xor
pop
mov
sub
icebp
sbb
mov
pop
inc
adc
add
cmp
mov
push
push
stos
aam
cld
inc
test
imul
imul
fstps
neg
int3
pop
sbb
cmp
lcall
je
mov
or
in
int3
shlb
jae
out
adcb
loope
mov
lds
cmp
shll
pop
sub
sarb
js
shrb
and
das
push
jge
dec
fists
pushf
or
adc
push
pop
push
es
pop
loope
movsb
out
jne
mov
aas
or
loop
mov
adc
dec
cmp
pop
cld
sub
jnp
int
push
pop
cmp
faddl
imulb
fisttpll
fimull
cwtl
jnp
sub
addb
and
outsl
outsb
andl
xchg
mov
test
imul
sub
pusha
add
push
xchg
jno
lcall
test
mov
movsb
pop
nop
jno
pop
dec
lods
mov
mov
cli
dec
xchg
cmpsb
mov
fistps
cmpsl
clc
int3
adc
cmp
sub
adc
cmp
sub
ret
shlb
xlat
jmp
sbb
push
push
cs
data16
mov
mov
mov
adc
sti
xchg
pop
into
dec
movsl
xchg
add
lcall
dec
lds
je
sahf
and
push
push
cmp
jnp
cmc
ss
js
xchg
ret
adc
inc
mov
inc
or
push
enter
ss
inc
lods
popf
aaa
or
lcall
aas
jbe
ret
pop
jnp
in
es
add
gs
sub
pop
sub
shrd
jnp
and
cli
lds
fists
sbb
fidivrl
pushf
and
or
lods
hlt
mov
and
push
clc
push
shl
scas
cmc
lods
pop
or
mov
mov
mov
jle
cli
mov
mov
addb
cmpsl
int3
loope
shl
sbb
mov
push
cwtl
imul
push
or
mov
cmpl
lods
push
pop
icebp
mov
aad
dec
cmp
mov
inc
dec
jnp
ds
pop
inc
xchg
jmp
repz
clc
add
mov
sahf
or
roll
mov
in
sbb
fistl
sahf
hlt
add
sbb
sbb
jnp
adcl
xor
push
movsb
lods
xchg
call
inc
xor
cmc
bound
out
jge
aam
fistpl
inc
test
mov
sub
pop
inc
leave
jbe
jg
sti
repz
addr16
sti
in
push
lret
xlat
sub
jp
push
xchg
inc
hlt
stos
es
cmpsb
stc
lahf
xor
mov
bound
clc
mov
fwait
and
xchg
lea
mov
insb
leave
lea
inc
mov
lcall
repnz
push
test
inc
lret
mov
rcl
mov
add
adc
pop
adc
xor
scas
mov
nop
out
add
lock
xor
fistps
in
cmp
mov
out
int
mov
rolb
mov
mov
loop
mov
xchg
movsl
sub
xor
aam
cmp
fdivs
aas
jle
sti
enter
jp
adcl
ja
adc
es
mov
pop
fsubs
pop
adc
dec
xchg
test
and
jb
aad
arpl
jle
mov
xor
out
jecxz
shl
or
popf
push
sarb
jg
xor
mov
fstps
ret
addr16
imul
jmp
mov
dec
imul
rcl
inc
dec
dec
cmp
fnstcw
mov
faddl
mov
sbb
jp
jbe
int
mov
js
insl
popf
lock
ret
movups
fistl
cmp
mov
ret
mov
fdivrs
push
adc
ja
jmp
push
mulb
rolb
fisubrl
sbb
fmuls
out
sub
je
stc
test
lahf
gs
mov
repnz
sbb
sub
daa
imul
jecxz
aaa
loope
or
cmp
leave
dec
pusha
lcall
lods
iret
in
mov
and
ret
add
dec
mov
cmpsb
adc
into
enter
push
push
loopne
cld
in
inc
cli
ss
adc
outsb
insb
adc
jmp
fcoms
lods
mov
push
mov
aas
daa
sub
jo
movl
xorl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
push
push
pushl
call
mov
dec
mov
jmp
push
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
inc
xor
sub
mov
movl
push
xorl
add
jmp
mov
notl
mov
notl
inc
cmp
movl
jb
adc
mov
xor
add
jmp
andl
mov
and
mov
adcl
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xorl
mov
add
sbbl
movzwl
xorl
mov
negl
mov
orl
movzwl
xorl
xor
add
mov
mov
inc
mov
cmp
movl
jne
mov
movl
mov
decl
xor
add
andl
mov
dec
mov
xor
andl
add
movl
mov
not
movl
movl
movl
mov
mov
movl
mov
jmp
mov
add
mov
andl
xor
xor
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
movl
mov
lea
mov
mov
mov
lea
movzwl
sbb
mov
mov
andl
mov
add
mov
negl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
orl
mov
mov
add
mov
lea
add
mov
mov
orl
mov
lea
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
sbbl
lea
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jb
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
jmp
sarb
jae
dec
bound
fidivs
pop
jl
xchg
in
mov
adc
mov
out
sub
stos
orb
lcall
adc
mov
push
dec
sub
out
out
js
cltd
cmp
cmp
faddl
gs
mov
rcrb
add
inc
pop
ret
adc
das
cmp
and
cmp
add
mov
scas
mov
xchg
push
adc
xchg
xchg
mov
xor
pop
stc
test
js
ret
and
inc
call
jmp
pop
int3
push
cs
stc
mov
jbe
addr16
cmpsl
dec
enter
or
lods
in
push
loope
adc
lods
aaa
jecxz
pop
mov
cmpsb
cli
nop
scas
dec
lcall
loope
jo
rcrl
cmp
jb
daa
jae
test
jmp
jg
int3
int3
or
stc
rorb
out
lcall
cvtdq2ps
dec
shlb
add
cmp
out
lcall
pop
subl
insb
dec
std
pop
test
mov
cmp
mov
fwait
das
enter
mov
cmp
pop
ljmp
lock
jp
fidivs
std
mov
sbb
iret
mov
adcl
push
mov
into
mov
xchg
int
aam
mov
insl
sbb
ret
jbe
aas
sub
cmpb
inc
dec
into
lret
int3
flds
inc
stos
mov
xor
iret
shr
movsb
sbb
pop
mov
xor
cli
mov
fmuls
int
mov
mov
call
or
push
adc
xorl
push
jmp
inc
movsb
sub
stc
les
cs
enter
imul
ss
pushf
jbe
mov
cmp
add
lahf
je
mov
xchg
test
cld
aaa
jbe
loopne
inc
ficoml
cmpsb
insb
jne
add
jp
xor
xlat
jle
movl
sub
cmp
jmp
test
jno
sub
dec
adc
clc
popf
sbb
adc
or
adc
xor
jp
cwtl
fucomp
cmp
inc
mov
shlb
adc
mov
and
bound
ret
xor
faddl
fsubs
cltd
je
lods
je
je
lock
and
xor
sarl
cli
test
sbb
jae
jno
clc
fsubs
push
dec
je
mov
and
jae
cmp
pop
jns
mul
subb
inc
jb
jno
cmc
xor
lock
fs
pop
loope
js
out
arpl
jno
repz
cmp
inc
inc
cmp
outsl
aas
stos
push
lock
mov
fcoml
mov
movsb
lahf
push
daa
add
inc
dec
fstl
cld
popf
inc
out
jbe
lcall
js
in
cmpsl
sub
push
in
enter
pop
dec
or
es
in
push
xchg
xor
in
loope
gs
outsl
cmpl
int3
test
rorl
popl
push
fcoml
pushf
aaa
in
imul
stos
xor
out
sub
push
cmp
movsb
adcb
lcall
add
cmp
jo
pop
pushf
or
insl
push
lahf
andb
mov
fisubs
sbb
pushf
lods
or
push
mov
add
pop
mov
jo
push
adc
pop
jb
cmp
lock
xlat
jmp
jno
sahf
ds
adc
xchg
jno
sub
lret
mov
rcll
lret
stos
and
pop
in
cmp
pop
xor
shll
pop
push
fstp
movsl
xchg
cmp
loope
jae
adc
loopne,pt
mov
pop
inc
sar
push
lahf
das
dec
in
xor
loop
pop
popf
cli
je
cmpsl
push
aaa
aad
mov
mov
xchg
cmc
and
lret
rorb
icebp
scas
push
pop
daa
cmp
sub
shlb
xchg
inc
push
pop
jbe
cmp
sbb
cltd
aam
test
out
es
sbbl
mov
in
repz
cmc
pop
nop
andb
mov
cmp
jmp
xchg
pushf
jp
jle
mov
mov
fadd
adc
test
out
mov
test
shll
movsb
stos
lds
push
bound
test
outsb
add
ret
sahf
movsb
mov
lods
pop
add
jns
push
insl
add
dec
inc
lcall
mov
cmp
imul
xor
vpslld
adc
stos
add
inc
xchg
jbe
lcall
mov
xchg
mov
int
punpcklbw
in
lcall
add
roll
into
pop
insb
mov
rcrb
push
scas
and
ds
push
add
loopne
mov
ret
rcll
dec
xchg
push
push
loop
xchg
fs
popf
adc
sub
pop
packssdw
mov
sbb
popa
xchg
lods
repnz
aam
mov
push
push
fidivs
movsl
push
lea
xor
sbb
pop
xor
pusha
addr16
insl
mov
push
mov
mov
inc
xor
out
dec
pop
adc
test
xor
cld
std
mov
les
sub
pop
sub
and
pop
aam
pop
sbb
lret
movsl
pop
push
xor
mov
daa
pop
clc
mov
sub
fimuls
mov
scas
pop
inc
jecxz
adc
jl
mov
cmp
aam
cld
lahf
mov
mov
inc
out
or
hlt
bound
scas
and
adcl
push
cmp
jmp
lds
xchg
xor
jnp
jecxz
adc
add
dec
jmp
pop
in
or
andl
and
loope
jae
insl
shll
jl
fdivr
lods
and
mov
pop
adc
mov
ret
iret
sub
dec
sbb
mov
dec
fstpl
mov
test
loope
out
hlt
lods
fld
add
ret
mov
push
lahf
cmc
call
inc
es
mov
and
lods
cmc
push
cmc
mov
dec
mov
add
jmp
pop
shrb
adc
hlt
dec
lock
les
adc
int
pop
int3
data16
inc
loop
add
sbb
outsb
mov
cld
cmp
jbe
shl
push
push
cmp
ret
and
xchg
xor
xchg
fs
xlat
sub
push
ret
mov
les
or
mov
psubq
fcmovbe
stos
insl
ss
pushf
sbb
mov
clc
negb
je
dec
lret
cmp
or
dec
adc
push
test
loope
cmpsl
test
lods
icebp
cltd
leave
in
rcrb
loope
test
xchg
lret
and
xor
sbb
xor
mov
js
xchg
lds
scas
popf
xchg
cmp
jmp
push
inc
adc
negl
mov
push
fisubs
xchg
sub
add
popa
fs
add
test
mov
mov
xchg
pushf
sbb
jb
cmp
mov
lds
inc
adc
inc
scas
aaa
stos
and
loop
inc
mov
push
mov
loop
jbe
imul
fsub
adc
mov
xchg
aad
push
out
aas
push
add
repnz
test
inc
mov
or
insb
sti
fst
je
ja
mov
jns
in
xchg
jl
mov
or
cmp
push
push
xchg
inc
mov
jae
mov
mov
pop
movsl
iret
stos
into
push
cmp
loope
mov
sub
sbb
jl
cmpsb
cs
push
mov
icebp
je
xor
and
pusha
mov
push
sub
fistpl
mov
das
aaa
in
test
dec
xchg
enter
iret
call
mov
sbb
arpl
lea
and
and
inc
jp
fdivrs
inc
dec
push
int3
xor
movsb
hlt
pop
pop
mov
lret
jmp
daa
dec
cmp
jge
fstl
lea
push
in
jnp
scas
adc
loope
push
addl
and
hlt
cli
lds
and
repnz
les
mov
dec
loopne
xchg
or
data16
mov
loopne
push
in
dec
bound
out
or
mov
bnd
test
push
ss
sub
inc
sbb
lret
fwait
popl
in
pop
into
stos
pusha
xor
scas
inc
add
pop
xor
fstp
sbb
loop
mov
ret
push
scas
push
add
dec
test
aas
xchg
jge
aam
ss
pop
push
sbb
imull
push
aad
mov
jl
push
sub
fistl
cmpsl
lret
xchg
inc
cmp
std
mov
mov
cwtl
dec
aad
dec
rcrl
or
xchg
and
inc
mov
mov
subb
jp
arpl
lret
clc
sub
add
push
js
add
roll
sub
popa
scas
sub
fadds
jbe
imul
ja
fs
adc
imul
fiaddl
je
mov
jg
sarl
pushl
mov
pusha
and
or
dec
mov
xor
pop
mov
test
mov
fdivp
xchg
add
and
cli
cmp
mov
out
push
sti
test
fs
hlt
shrb
mov
jno
cmp
cmpsb
popf
cwtl
adc
outsb
add
popa
sbb
xor
dec
es
xor
and
mov
filds
dec
pop
cmc
out
pusha
mov
ja
mov
dec
movsl
jge
mov
jbe
ret
and
sbb
fwait
pushf
adc
cmp
push
mov
fs
push
lods
xlat
in
inc
lcall
jo
shrb
sub
jns
xchg
mov
cmc
pop
dec
xor
jge
lret
insb
mov
filds
mov
ds
and
jge
sbb
cmpsb
add
test
data16
push
arpl
jo
sub
mov
cs
es
int
sub
xchg
pop
jb
stos
and
lret
popa
pop
mov
cmp
pusha
outsl
movsl
inc
das
bound
in
movl
and
imul
inc
mov
pop
mov
inc
mov
pushf
aaa
fcompl
jae
mov
dec
cs
lods
dec
cmc
adc
pop
push
inc
pop
repnz
fs
loop
movaps
push
movsl
sti
push
pop
or
daa
fldcw
mov
mov
sub
insl
test
hlt
pop
adc
lret
ret
xchg
mov
xchg
lret
stos
sbb
sbb
adc
inc
fidivl
test
xchg
push
jl
adc
mov
push
loop
add
bound
xchg
lahf
sbb
or
clc
cmp
push
out
inc
push
dec
inc
bound
push
lret
sub
cmp
loopne
fldenv
lret
pop
jl
rcrb
push
add
push
data16
outsb
mov
sbb
push
fwait
stos
jns
je
sahf
rorb
ss
pop
cmpsl
andl
jbe
dec
xchg
dec
adc
fsubl
andb
cs
in
fbstp
push
mov
add
ret
and
adc
mov
adc
mov
ffreep
pop
xor
mov
push
clc
clc
decl
aad
rol
imulb
mov
pop
xchg
add
push
jg
xchg
push
insl
pop
ljmp
mov
adc
push
aaa
mov
decl
test
scas
ljmp
push
imull
aad
lea
mov
call
sub
imul
dec
mov
repz
gs
adc
push
test
in
mov
fnstcw
icebp
lods
aas
sbb
mov
into
sub
inc
mov
inc
or
lret
sub
dec
inc
sti
push
sbb
add
add
std
fsubrl
or
loopne
jbe
mull
cltd
dec
xor
pop
jle
scas
xor
dec
test
push
mov
dec
adc
mov
fcmovu
jl
into
popa
cmp
mov
dec
inc
mov
cmp
pop
sbb
jl
sub
ret
pop
iret
dec
sub
sub
cmp
dec
loop
jge
sbb
call
xchg
ret
xor
xchg
dec
fwait
cwtl
loop
add
movsl
repz
xor
popa
mov
in
or
adc
dec
inc
movsb
fsubrs
ss
insl
ja
push
rcrb
out
fadds
mov
scas
sbb
dec
dec
shlb
fistl
mov
addr16
xchg
xor
fisttpll
outsl
mov
outsb
test
jnp
sub
sub
add
stc
or
dec
lret
fdivs
cmpsl
add
loopne
dec
sub
movsb
jmp
cmpsl
push
cmp
mov
ljmp
inc
pop
sbb
stc
dec
sbb
je
lea
push
and
xchg
sbbl
xor
std
stos
cmp
mov
mov
movsb
sub
jb
mov
les
ret
jae
push
push
pop
xor
fwait
stc
push
jmp
out
sub
popf
mov
test
xor
fsubrs
xor
jle
pop
lahf
sub
jns
cmp
es
xchg
push
lods
inc
sar
sti
testl
pop
mov
fwait
and
in
je
clc
jb
cli
inc
notl
popf
jmp
xor
jmp
pop
ja
xchg
and
sti
xor
ret
ret
sub
cmp
or
scas
iret
jb
imul
push
pop
xor
jne
and
jae
cltd
or
repz
call
xor
gs
jmp
pop
or
cmp
mov
leave
and
pop
repnz
push
jmp
fwait
sbb
ret
jle
or
mov
xchg
add
cmp
mov
xchg
packsswb
inc
popf
in
stc
pop
mov
fbld
push
js
mov
in
pop
dec
sbb
and
xor
push
mov
int
in
jmp
cli
dec
pop
rdpmc
mov
test
gs
mov
in
aad
jecxz
mov
aas
sub
inc
lret
xchg
popf
imul
sbb
xor
dec
inc
inc
and
out
cmpsb
mov
pop
sahf
mov
xchg
test
push
bnd
pop
out
or
add
add
andps
cmpsl
cmpsl
sbb
in
pushf
xchg
or
outsl
clc
dec
pop
subl
hlt
cmpsl
lock
mov
xchg
int3
cmpl
mov
dec
jnp
mov
pop
lcall
idivl
rol
sbb
out
out
jg
sub
ret
sub
shrb
xlat
mov
scas
mov
es
or
jecxz
pushf
or
movb
and
cwtl
ljmp
jecxz
mov
pushf
dec
add
jbe
dec
push
aad
addb
push
mov
insl
inc
es
push
jo
sub
decb
aad
push
sub
push
sub
leave
mov
mov
xor
imul
lcall
mov
adc
enter
fistps
cmp
add
lods
push
push
push
jmp
aas
testl
xor
jle
iret
sub
xor
std
jns
cli
gs
jle
or
mov
fiadds
sarl
inc
sarb
inc
push
divl
fsts
xchg
and
cmc
push
in
stos
xor
dec
rorb
dec
sub
clc
clc
mov
in
into
mov
push
icebp
inc
cwtl
xor
mull
xor
aaa
fisubl
sbb
scas
nop
xchg
cmp
repz
cmpsl
pop
mov
ds
movsl
xor
je
and
jecxz
inc
call
push
dec
cmp
fstl
cld
push
push
sti
pop
stos
push
push
in
jae
xor
and
and
rol
fdivp
push
xor
lcall
xor
bound
jb
and
jge
mov
mov
ja
xchg
aaa
add
stos
push
xorl
cs
mov
pop
inc
mov
xchg
mov
sbb
or
das
add
mov
cmp
cwtl
cs
ret
mov
xor
pop
sbb
sub
pop
addr16
rorb
mov
dec
fisttpll
sbb
hlt
push
pop
shr
ss
jl
repz
mov
mov
lds
jnp
addr16
pushf
test
out
mov
sahf
inc
push
repnz
test
jne
inc
flds
test
xchg
mov
lea
in
cld
addb
and
int3
jbe
mov
mov
icebp
mov
inc
jl
cmpsb
mov
mov
cmovg
iret
jmp
push
sbb
test
inc
lea
lock
and
xchg
fistl
loopne
sbb
sbb
shll
orb
mov
insl
push
xchg
jp
sub
sub
xor
mov
or
and
push
fwait
cmp
add
cmpsl
jbe
xchg
mov
jle
lahf
clc
arpl
and
mov
repnz
jns
aaa
mov
inc
out
inc
movsb
mov
dec
lods
scas
jns
outsb
mov
pop
mov
push
push
clc
arpl
loopne
fs
mov
iret
mov
pushl
inc
cld
fucompp
or
aam
in
pop
mov
shl
add
pop
adc
sub
imul
stos
ss
imull
lods
or
lods
lcall
mov
cwtl
pop
fistpl
sub
fwait
inc
je
ret
orb
sbb
imul
adc
iret
sbb
call
push
jge
mov
cli
dec
jmp
sub
push
loop
sbb
adc
les
inc
jecxz
test
mov
jno
and
jne
scas
popl
roll
push
in
gs
sarl
mov
sbb
icebp
dec
stos
xchg
mov
sub
negl
popf
test
daa
int
mov
push
mov
fcomps
arpl
push
lock
insl
and
scas
repnz
xor
jo
cmpsb
jno
jno
push
inc
fs
push
jp
scas
pop
lods
iret
jne
and
mov
js
pop
std
jne
inc
xlat
std
jae
push
mov
jne
data16
repz
or
int
mov
and
cmp
rorl
or
mov
flds
es
push
jg
push
cmpsl
fidivs
negl
cmp
pop
mov
movsb
or
push
nop
dec
sbbb
fwait
jns
or
mov
in
push
xchg
adc
push
xor
in
int
mov
imulb
in
in
daa
mov
psubusw
pop
mov
aad
or
adc
mov
inc
in
pop
inc
das
mov
push
out
inc
add
adc
sbb
divb
sbb
test
cmp
add
pop
and
add
and
push
or
sub
and
or
loopne
add
push
dec
daa
dec
into
xor
aaa
sarl
cwtl
push
adc
add
add
or
jno
popa
mov
cmpsb
jb
lds
or
add
mov
mov
add
adc
add
lahf
mov
in
aas
mov
sbb
jo
or
dec
rcll
rcll
rol
cmp
in
mov
mov
fs
push
test
movsl
outsl
popf
into
out
mov
add
lret
push
or
xor
xor
ds
enter
xchg
popa
dec
cmpsb
sub
stos
sbb
cmp
int
out
mov
cmp
cmp
inc
les
shr
add
movsl
adc
inc
pop
xor
out
ret
push
and
push
fldl
mov
les
cs
out
jecxz
in
je
sub
mov
gs
mov
jmp
add
add
mov
repz
stc
leave
shlb
cld
jmp
xor
dec
dec
push
ret
cmc
imul
test
sahf
jle
ljmp
ret
out
mov
int3
push
jae
jl
jg
popa
hlt
test
cmp
push
jp
dec
pop
lea
push
incl
sub
repz
mov
push
mov
lahf
add
movsl
das
or
push
in
cmc
insl
aaa
mov
cmpsb
adc
and
xchg
mov
divl
stos
cld
jns
push
scas
push
es
xor
fisubrl
push
jbe
add
push
jno
add
mov
sahf
mov
fdivp
jl
nop
fsts
push
adc
int
pop
jge
or
jg
mov
and
scas
outsl
dec
insl
jp
sub
jmp
xchg
pushf
cmp
popf
inc
les
push
cmc
pop
das
out
mov
ret
repz
sbb
mov
adc
movaps
cli
jnp
dec
or
cmp
jae
jnp
dec
rclb
xchg
inc
sbb
cmp
outsb
cmp
add
loopne
or
leave
jne
inc
fst
pop
scas
mov
or
mov
xchg
fidivrl
xchg
pop
push
push
daa
enter
or
pop
xchg
jne
pop
push
iret
cmpb
loopne
notl
push
xor
cmp
push
dec
push
mov
test
test
jp
mov
psubsw
push
sub
mov
mov
lcall
loop
adc
lcall
or
sbb
in
adc
jle
add
inc
and
icebp
sbb
sbb
js
fdivrs
lret
mov
in
das
jns
sub
mov
test
sub
jnp
xchg
ds
xchg
dec
fiaddl
cmpsl
dec
mov
jle
cwtl
lock
arpl
mov
fld
mov
xlat
mov
es
sbbl
push
xor
add
xchg
xor
faddl
insb
mov
push
insb
adc
cli
pop
repnz
or
loopne
lock
pop
jmp
dec
shrb
movsb
xor
shll
mov
dec
push
ss
loopne
pop
sbb
icebp
sub
sub
cli
ja
cmpsl
sub
add
adc
fisttps
dec
pop
iret
stos
lcall
lock
adc
daa
push
addr16
mov
adc
sub
xor
xchg
add
sub
out
loop
inc
mov
movsb
xor
dec
std
pushf
and
out
insl
adc
loopne
push
jns
jo
je
hlt
in
addr16
jbe
cwtl
xor
fdivrs
cmpsb
scas
jae
xor
ljmp
addl
insl
mov
sub
mov
fcmovb
shld
jo
push
pop
sub
icebp
xchg
mov
push
or
scas
inc
mov
les
inc
ljmp
dec
xor
xchg
out
jno
cmpsl
xor
jae
out
cmp
or
jg
jnp
pop
lret
imul
xchg
es
push
ljmp
je
cmpsl
aam
xor
orb
sbb
adc
fsubrs
popa
iret
movsl
lcall
mov
ljmp
mov
pop
mov
or
jl
shl
loopne
das
into
or
cmp
jle
fwait
and
mov
stc
test
mov
loopne
or
fsubrs
push
das
jbe
mov
inc
orl
inc
or
or
cmc
loope
rcll
out
pop
lods
shl
mov
fs
dec
lcall
jmp
fwait
mov
xor
out
xor
fstl
in
pop
sub
movsl
pop
je
cmp
mull
mov
inc
out
xchg
sbb
xor
adc
add
mov
rcll
mov
pop
lods
mov
push
xor
or
or
std
int
pop
inc
mov
pop
adc
insl
ret
push
sub
arpl
or
jnp
add
xor
lahf
je
sub
sbb
mov
push
xchg
repnz
test
add
adc
push
shrl
pop
cmp
es
mov
inc
aaa
rcl
lock
mov
push
jl
or
sti
scas
push
icebp
mull
repz
mov
dec
adc
popa
sub
lcall
fistpll
xor
adc
test
into
fcmovbe
bound
add
pop
dec
push
sbb
jge
jmp
popa
mov
addr16
add
sub
fidivrs
pop
fwait
jp
or
jl
lret
notb
in
jmp
sub
sub
pop
sti
xchg
bswap
mov
aas
xchg
cmp
xlat
mov
leave
sbb
hlt
pop
clc
mov
cmpsl
cmp
xchg
mov
sahf
fs
dec
repz
pop
xor
xchg
sbb
mov
mov
mov
mov
xor
not
js
ror
jae
mov
fs
test
lods
jl
inc
pop
out
or
xchg
fnstenv
iret
addr16
jle
pushf
dec
sub
lret
mov
xor
mov
cmp
mov
pop
je
call
push
arpl
xor
lods
fbstp
cld
xchg
push
dec
pop
pop
jnp
cmp
jbe
sahf
popa
loopne
and
xchg
ljmp
fwait
jbe
idiv
fldcw
outsb
xor
push
sbb
push
push
or
xchg
das
jmp
inc
ss
dec
mov
rol
xchg
stc
test
pop
mov
pop
mov
mov
cmp
jb
aam
repnz
gs
cmpl
cltd
add
xchg
xor
popa
lcall
xchg
fnstenv
jbe
out
lcall
sbb
test
fwait
lock
jmp
mov
mov
dec
pop
es
jnp
es
xlat
adc
roll
jne
dec
push
jp
sub
mov
loop
jnp
icebp
lret
inc
push
mov
inc
nop
dec
mov
dec
inc
fcoms
xchg
cli
icebp
sbb
mov
adc
hlt
mov
jb
mov
addb
jle
and
cmp
popa
lcall
push
test
ja
dec
stos
stos
or
test
das
leave
or
jo,pt
nop
sti
filds
mov
js
js
sbb
xor
or
or
push
sbb
xor
jnp
xor
je
dec
xchg
xor
inc
lret
jge
outsl
insl
and
lods
mov
jge
sbb
stos
xchg
fnstcw
arpl
negl
lret
out
add
loop
out
xchg
jbe
or
mov
imulb
sbb
ljmp
sbb
xor
xchg
shrb
aad
push
mov
dec
rclb
xor
pop
mov
stc
movswl
cs
bnd
lods
push
mov
jg
aam
std
mov
leave
jae
outsl
cli
fiaddl
dec
sti
fs
cwtl
inc
lods
out
shrb
enter
loop
hlt
or
xor
pop
pop
icebp
shl
inc
xlat
pop
clc
jge
inc
lods
mov
jns
lods
mov
mov
sub
popf
mov
sbb
stc
leave
loopne
int3
in
stos
sbb
imul
aam
sbb
mov
jmp
jnp
pop
jl
pop
inc
insb
add
pcmpgtw
call
push
lods
call
dec
loopne
les
push
mov
inc
out
lods
andl
loope
sbbb
lret
add
stc
mov
mov
clc
inc
and
dec
stos
inc
arpl
and
daa
icebp
jo
push
call
cmp
pusha
jnp
mov
mov
out
mov
mov
inc
xor
pushf
vcomiss
lea
add
xchg
fwait
mov
cmp
loop
sub
popa
cmp
fbld
arpl
fstpl
jne
lds
xchg
ja
imul
into
push
adc
or
mov
push
adc
in
and
mov
lods
push
jb
out
mov
in
ret
addr16
mov
sbb
adc
dec
in
js
insb
lods
mov
cmp
adcb
ret
jp
mov
pop
xor
insl
test
pop
ret
adc
dec
sub
and
jg
fmulp
popf
ss
xor
add
fwait
jp
dec
add
repz
cmp
daa
les
cmpsl
mov
test
xchg
or
imul
fmull
xchg
sbb
out
xor
adc
das
lahf
iret
roll
mov
imul
test
pop
out
jge
pop
fsts
faddl
mov
inc
jne
movups
movb
sarl
dec
push
fidivl
data16
pushf
xor
popa
pop
addr16
inc
or
xchg
cli
sti
out
push
push
outsl
adc
jns
sbb
xchg
lods
sbb
enter
mov
mov
mov
or
xchg
cs
lods
cmp
jnp
xor
xchg
sub
mov
dec
cmp
pop
mov
cmp
ss
popa
mov
mov
lock
inc
pop
adc
fistl
sub
hlt
sti
imul
insl
loopne
adc
and
addr16
cmp
sbb
cmc
jo
nop
xor
mov
xor
ror
push
pop
xlat
fnstenv
xor
dec
mov
pop
push
out
int3
enter
add
jo
hlt
sub
into
push
and
push
xor
adc
int3
sbb
push
cmpsl
inc
fldt
icebp
sub
imul
mov
es
jp
pop
fs
stc
shll
loope
jmp
fists
mov
cltd
jo
jnp
sbb
sahf
scas
rorl
mov
pusha
xchg
in
outsb
xchg
jne
lods
and
dec
xor
les
popf
pop
pop
int3
or
sub
push
jb
lret
cmpsl
mov
sub
cmp
jg
fsts
jnp
dec
jmp
or
cmpsl
fldenv
add
test
jl
cli
arpl
push
jnp
pop
push
jge
fcomps
jl
ja
adc
dec
sbb
and
sub
inc
or
into
push
imul
and
stos
pop
push
adc
jp
add
testl
call
lock
stos
jmp
stos
int3
mov
jbe
loop
ss
ficoms
jnp
push
mov
xchg
cmp
inc
inc
jae
jb
lods
mov
or
add
xchg
mov
inc
xchg
add
cmp
lret
xchg
jg
cmp
push
ret
mov
sub
xor
shlb
popa
inc
adc
push
jle
xchg
clc
dec
shll
adc
ja
xor
cld
mov
mov
mov
outsb
das
and
ds
ja
push
lret
cmp
push
push
in
adc
pop
insl
rorl
cmp
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
jmp
mov
cmp
mov
pop
int
jl
pop
jl
jae
add
xchg
push
aaa
adc
and
jg
cld
push
add
mov
inc
mov
xchg
or
aad
pop
dec
xchg
xlat
xor
cmp
sbb
jmp
lret
outsb
sbb
mov
jo
cmp
leave
xchg
pop
dec
sub
das
scas
and
fsubrp
mov
enter
cmp
les
xchg
mov
mov
mov
mov
rorl
pop
cld
shlb
daa
call
inc
and
loope
mov
xor
jle
push
int3
icebp
dec
xchg
mov
or
rolb
xchg
and
or
push
sahf
ror
dec
push
push
and
jb
stos
lahf
or
mov
aaa
lahf
xchg
xlat
push
push
or
inc
sub
mov
cli
jl
imull
lods
insb
xor
add
je
jecxz
push
sub
int
and
xchg
dec
fsubp
or
test
imull
fs
fnsave
icebp
inc
sbb
xchg
mov
cld
cmp
jnp
pusha
jo
xchg
dec
mov
xchg
outsl
bt
jne
jle
lret
jecxz
mov
clc
push
push
cmp
faddl
xchg
popa
pop
daa
int3
je
mov
inc
jl
xchg
pop
stos
cmp
scas
in
popf
popa
cmc
out
pop
jmp
popa
addb
les
fstpt
mov
mov
adc
xchg
dec
sub
adc
xchg
push
inc
push
cmp
jge
imul
pop
je
les
iret
outsb
in
mov
pusha
jno
aad
in
cmp
mov
fcoml
sbb
outsb
out
fists
pop
sub
jns
in
into
outsl
xchg
adc
aas
or
xor
ds
or
int
or
int
bound
pop
test
icebp
inc
pop
and
xchg
lahf
jecxz
fsubr
push
nop
fidivl
decl
mov
pushf
aam
ljmp
arpl
jmp
lret
imul
pop
dec
into
hlt
xor
das
mov
fistps
jae
inc
push
pop
call
mov
loope
aam
fwait
jbe
push
inc
ja
jg
lock
leave
xchg
push
out
pop
mov
sti
pop
dec
test
ror
or
daa
xor
sub
hlt
and
dec
sbb
hlt
mov
loop
popa
adc
data16
loop
jbe
imul
mov
outsl
xor
xlat
adc
iret
mov
pcmpeqb
xor
into
mov
scas
lea
dec
and
rcll
nop
jg
aad
outsl
add
jecxz
or
cmpsl
cld
imul
jmp
mov
add
add
mov
push
cmp
inc
xchg
mov
dec
pop
adc
leave
pop
mov
lcall
add
sbb
roll
das
sti
std
test
je
scas
mov
xor
popa
sub
int
push
mov
cwtl
jmp
pop
cmp
adc
or
das
sahf
mov
popf
sbb
dec
pop
pop
popf
xchg
js
sahf
add
cmp
pop
or
in
dec
out
xchg
cmp
sarb
mov
lock
addr16
xchg
inc
cld
inc
lds
mov
icebp
pop
iret
fdivrl
add
repnz
sbb
subl
sub
mov
and
mov
xchg
aad
std
fninit
mov
xor
lahf
repnz
mov
mov
pusha
pop
fadd
lods
fldenv
push
and
cmp
rcl
lahf
or
or
addr16
inc
outsl
push
mov
xor
outsb
rol
clc
outsl
mov
cmpsb
adc
subl
mov
and
adc
std
lret
adc
push
and
jecxz
fnstenv
cld
dec
and
int
jmp
jns
xor
push
mov
jmp
bound
nop
lcall
mov
lea
xchg
adc
add
ss
dec
dec
cmpsb
sub
enter
mov
stos
jp
and
sbb
movsb
pop
adc
inc
rcll
arpl
int
rcll
mov
or
pop
cwtl
pop
xchg
out
cmp
ret
das
mov
inc
sub
cmp
xchg
push
dec
xchg
ljmp
jno
inc
fidivrl
inc
adc
and
insl
mov
outsl
stos
lods
sahf
inc
cmc
sbb
push
jnp,pn
mov
aas
loopne
clc
jl
ja
out
mov
lahf
out
nop
cmpsl
bound
test
mov
cmp
lds
mov
rcl
sbb
ljmp
mov
test
xor
test
xor
shl
mov
loope
xchg
xlat
sahf
ja
sbb
mov
or
xlat
mov
jp
sbb
clc
mov
punpckhbw
divb
mov
loope
add
pusha
dec
push
jmp
push
jle
inc
jl
pop
or
scas
mov
cmp
pusha
inc
dec
sub
push
divl
cli
pop
sub
lock
insl
add
sub
sub
mov
xor
push
cmp
push
ja
cmp
jne
aam
fistpl
inc
pop
fidivs
cmp
mov
xchg
push
jge
mov
in
or
fiadds
xchg
mov
iret
or
idivl
dec
icebp
inc
inc
sbb
out
loopne
shlb
add
pop
das
test
sub
lods
int3
sbb
cmp
aaa
xchg
mov
add
testb
dec
inc
daa
adc
xchg
add
mov
outsl
adc
fstpl
sbb
mov
mov
and
loop
jp
pop
cmpsb
adc
movsb
subl
sbb
enter
inc
and
popf
aam
or
jmp
and
sbbb
sub
pop
xchg
sub
jmp
sbb
dec
imul
sub
jl
or
hlt
cltd
pusha
cmp
sub
cmp
mov
repnz
dec
int3
test
sbb
cmpsb
int
sub
iret
cwtl
dec
je
arpl
push
mov
xor
inc
popa
pop
in
inc
fcomps
and
adc
mov
jbe
push
xchg
sub
in
mov
sbb
mov
push
push
or
push
add
cmp
insb
push
jnp
adc
mov
bound
addb
sub
xor
xor
xchg
mov
adc
cmc
stos
xchg
insb
cs
or
jns
frstor
mov
scas
inc
pop
xchg
xchg
jmp
jle
adcl
mov
adc
cmp
cmpsb
pop
or
out
and
lea
mov
mov
pop
and
pop
adc
cmpsl
test
mov
cmp
sbb
loopne
add
sti
repz
daa
push
outsl
test
push
aam
pop
sbb
xor
pop
movsb
dec
popf
stos
in
inc
sbb
je
ljmp
or
sub
or
cmpsb
xor
mov
jnp
cltd
or
iret
sub
in
repnz
ss
and
jmp
imul
dec
mov
out
jge
lcall
lds
mov
fcomps
xor
imul
addr16
dec
xchg
dec
jl
nop
call
out
xchg
add
fwait
cmp
icebp
call
fdivrs
cmp
addl
dec
sbb
dec
les
imul
inc
cmpsb
add
fldt
fdivr
out
dec
mov
call
scas
xchg
push
sub
mov
enter
mov
std
inc
push
mov
push
push
cltd
cli
inc
cs
xor
or
xchg
xor
daa
xchg
lret
test
jb
std
xlat
roll
push
mov
xchg
xor
les
mov
cmp
aas
cmpsl
test
fists
je
call
inc
pushf
ds
bound
mov
lods
aad
inc
call
cmpsb
cmp
outsl
ss
int
mov
jl
jmp
cmpsl
dec
mov
rol
or
orb
fdivr
ljmp
int3
cmp
pop
loopne
push
icebp
mov
push
inc
dec
popf
icebp
ja
pushf
xor
adc
sub
adc
je
push
leave
pop
inc
stc
sub
push
mov
jg
pop
outsl
repnz
mov
aam
rolb
push
lahf
sbb
loop
movsb
cmp
xor
xlat
jmp
pop
cli
test
push
dec
pop
sbbb
aas
push
xor
jno
sbb
sbb
lret
ficoms
int
or
and
call
cmc
les
or
sbb
in
aaa
adc
sub
sbb
ljmp
inc
stc
dec
es
icebp
mov
mov
pop
dec
mov
sub
cmp
sbb
insl
movsb
xor
mov
imul
js
and
fldl
outsb
inc
xchg
hlt
mov
mov
pop
sahf
pop
mov
jecxz
fists
inc
popf
js
fidivl
js
aad
outsl
push
dec
push
jle
cmp
sbb
scas
cmpl
mov
mov
adc
mov
ds
sbb
outsb
fistps
sub
int3
or
pop
cs
or
insb
aad
cli
ljmp
daa
jge
in
jecxz
push
outsl
xchg
or
mov
or
sub
xor
in
int3
addr16
das
push
jno
xchg
orb
sub
cmpsb
adc
sub
cwtl
fs
dec
cli
scas
mov
push
mov
testb
into
inc
or
xor
or
cmp
xor
loopne
divl
and
adc
dec
xchg
jbe
mov
sti
test
cmpsl
lret
movsl
cmpsl
adc
sbb
jne
sti
aas
cmp
cli
nop
mov
enter
xor
adc
xor
ficoms
pushf
decb
pop
pop
hlt
add
jne
ds
sub
into
clc
sub
gs
adc
sbb
cmpsl
mov
outsb
std
inc
mov
cs
ror
xchg
test
push
outsb
mov
cwtl
adc
nop
add
sub
fistpll
pop
fwait
hlt
mov
leave
pop
and
addr16
or
push
sub
js
xchg
test
into
and
mov
mov
imul
xor
jge
insl
xlat
jle
adc
inc
add
test
cmp
icebp
das
dec
xor
icebp
mov
aaa
mov
nop
call
xorb
sahf
mov
inc
sarl
push
inc
xor
lds
adc
mov
cltd
dec
test
dec
inc
hlt
test
inc
sbbb
mov
insb
mov
adc
jge
movl
xchg
jo
stos
lea
pop
lahf
jbe
push
adc
cs
inc
or
push
clc
movsl
insb
cmp
sub
sbb
inc
in
aaa
lock
loop
ror
mov
pop
flds
or
push
lods
aas
iret
add
lret
mov
push
xchg
and
aad
insl
dec
popa
sar
inc
ficoml
add
dec
lret
imul
sarl
data16
scas
pop
xchg
lea
fldcw
dec
and
xorl
cmpl
and
fs
divb
xchg
ficompl
dec
cld
sub
je
adc
je
xchg
mov
xchg
push
sub
push
mov
add
push
xor
dec
lods
mov
adc
ret
adc
inc
and
adc
xchg
push
jae
push
mov
pusha
rorb
les
aas
jne,pt
sub
fdivrl
mov
shrl
sub
push
ss
xchg
fsubr
lock
inc
adc
into
adc
mov
mov
rorb
cmpsb
sbb
cmpsl
mov
push
mov
xchg
mov
cmc
jle
pop
fwait
rcrl
push
sarb
fdivl
mov
sahf
scas
add
mov
mov
rcrb
daa
jecxz
mov
xor
pop
out
pop
es
or
cmp
mov
cwtl
jg
mov
aad
inc
out
inc
and
mov
and
inc
cmpsl
sub
pop
dec
xchg
cmp
or
mov
lahf
call
pushf
jae
sub
and
in
ss
arpl
jno
inc
sub
and
ss
pop
inc
and
and
into
ds
sub
sbb
and
xchg
test
adc
iret
andb
int3
mov
repnz
in
xchg
mov
imul
divl
pusha
cmpsl
lcall
les
sub
enter
adc
fidivl
and
hlt
adc
jle
je
add
outsl
pop
jne
pop
and
daa
cltd
sub
stos
in
into
shll
mov
pop
and
xchg
push
add
add
testb
shrd
jae
lea
pop
aam
fsubrs
loop
test
xlat
rclb
clc
loope
push
cmp
les
xchg
push
jmp
sahf
out
mov
adc
scas
shll
shrl
inc
sub
loop
leave
jge
jo
mov
lret
mov
fcomp
xchg
or
pop
and
shlb
inc
jl
pop
push
push
pusha
outsb
mull
mov
mov
popa
push
hlt
or
cli
ret
dec
sub
sbb
jmp
jle
in
xchg
out
add
xchg
clc
or
popf
test
mov
jns
cmp
sub
mov
xor
cmp
orl
mov
lods
or
mov
loopne
mov
mov
pusha
lret
loop
sbb
push
pop
test
int
sahf
and
or
repz
ja
pop
xor
mov
shll
es
or
xchg
cld
popf
fdivrs
xor
inc
mov
xchg
repnz
movsb
test
dec
call
mov
xchg
aas
mov
scas
xor
add
lock
and
adc
push
mov
sarb
scas
add
jnp
mov
mov
push
in
add
mov
dec
cmp
lds
mov
xlat
setbe
dec
and
push
lods
inc
std
nop
jl
fwait
mov
jg
jo
pop
fimuls
cld
bound
cmc
and
enter
push
jp
loope
push
sub
jns
push
adc
idivb
pusha
loop
stos
cmp
fdivrs
es
mov
mov
cmp
push
aaa
push
sbb
out
jae
add
imulb
jbe
xor
or
jo
jge
je
insb
fildl
lods
mov
vrsqrtss
fwait
push
sub
lret
mov
ficomps
gs
push
xchg
aas
frstor
ss
stc
fwait
mov
fistl
mov
dec
mov
divl
lea
mov
in
mov
cwtl
fdivr
in
out
push
dec
inc
xlat
imul
pop
les
adc
cmp
cmc
mov
ret
orl
and
or
xor
nop
add
push
mov
adc
aam
inc
cmp
or
scas
daa
cmpsl
ss
dec
dec
mov
cmpxchg
jo
cmpl
adc
mov
pop
pop
stos
mov
adc
arpl
rol
or
test
push
push
jg
adc
add
hlt
jne
popf
mov
push
dec
shr
pop
stc
ret
out
hlt
dec
flds
mov
inc
fimull
mov
or
pop
mov
les
jmp
dec
jns
add
lcall
adc
jae
mov
xchg
xlat
adc
add
notl
mov
vpandn
cli
pop
call
push
ljmp
xor
dec
jl
jmp
ja
test
popf
test
xor
mov
pushf
sbb
dec
jp
lahf
fadd
test
pop
mov
clc
int
ds
sub
lods
and
jne
adc
inc
out
adc
sbb
inc
xor
jno
jp
sub
fmull
fs
cmp
shll
imul
inc
lcall
es
test
bound
stc
ss
dec
mulb
les
lahf
insl
je
fwait
in
push
and
jl
sarb
enter
mov
pusha
adc
sub
sbb
sub
mov
add
mov
dec
pop
sbb
and
adc
sbb
xor
xchg
dec
aas
pop
lret
mov
lock
fiadds
pushl
imul
int3
movsl
adc
insl
xorl
popa
pusha
cmp
js
mov
lcall
fninit
imul
push
decl
flds
fwait
or
xchg
add
add
ljmp
dec
int3
mov
mov
je
rcrb
xlat
cs
add
stos
lods
fwait
les
into
roll
hlt
inc
rolb
mov
insl
sbb
jo
lods
int
sub
jbe
pop
xor
adc
jp
mov
jmp
mov
fnstenv
sub
mov
cmp
outsl
sarb
mov
mov
rcrl
bound
adc
mov
icebp
lods
lock
or
orb
lea
cmp
int
enter
jae
and
xor
mov
mov
imul
mov
xchg
ret
and
cmp
aam
ljmp
hlt
jbe
push
sti
xorb
push
or
lahf
fstps
or
loop
pusha
stos
popf
test
out
mov
rcrl
rorb
add
sub
sub
inc
stos
loopne
sub
jmp
jecxz
and
xchg
test
sbb
pop
and
ds
test
int3
xchg
call
jne
jae
jno
pop
cld
jl
xchg
pushf
rol
fdivrs
ljmp
aad
jnp
lods
pushf
in
jno
test
add
jp
lock
adc
push
cld
push
mov
decb
cmc
call
dec
jb
add
cmpl
out
scas
rorl
cmpsb
movsl
fsts
pop
xchg
popa
call
mov
jnp
jae
cmp
imul
out
inc
loop
sbb
inc
sahf
test
xor
push
adc
jecxz
mov
ja
in
jo
lret
push
subl
insb
rcrb
cmpsl
dec
pushf
loope
gs
shlb
out
iret
hlt
movsb
addl
dec
ljmp
xchg
addr16
inc
jae
jl
pop
popa
cli
inc
fdiv
call
mov
adc
fwait
cmpsb
pop
popf
cwtl
fsub
jns
cmp
popa
aad
arpl
mov
addr16
lret
add
mov
push
scas
sbb
jo
sub
jg
enter
sti
jle
cmpsl
push
xchg
inc
xchg
dec
jle
mov
pop
pop
out
cli
jge
repnz
and
jp
xlat
jmp
cmp
imul
sahf
dec
inc
xor
leave
js
dec
mov
shl
mov
pop
lcall
xchg
xchg
shl
xchg
enter
repz
roll
push
pop
xor
and
lea
mulb
mov
or
movsl
xchg
mov
mov
lea
lcall
loopne
sbb
fsts
test
stos
mov
dec
mov
mov
cmp
jns
inc
pop
xchg
cmp
ficompl
mov
sahf
xor
ret
sbb
sub
cmp
bound
sbb
pop
js
int3
push
pop
cmp
mov
mov
mov
mov
inc
inc
adc
data16
shlb
lret
xlat
mov
in
repz
mov
jns
inc
xchg
std
out
and
outsb
jnp
movsl
pop
jp
shll
insb
cmp
loop
clc
adc
outsb
cltd
inc
jl
in
xchg
sbb
scas
sub
lods
nop
int3
ror
xchg
dec
test
add
out
dec
cwtl
inc
movsl
jle
jle
push
push
ja
dec
sbb
jge
fs
movsl
add
jp
stos
shll
pop
divb
mov
enter
sbb
or
jecxz
outsl
add
add
fstpt
jbe
sub
sub
in
add
inc
xchg
shrb
adc
addb
mov
in
rcr
xorl
pop
jo
pop
xor
push
insl
mov
leave
push
pop
fistps
fstps
frstor
arpl
lret
pushf
dec
push
or
adc
mov
dec
sub
inc
push
dec
fmuls
pop
push
xor
cmpsl
mov
movsb
fsubrl
arpl
imul
pop
in
jg
jecxz
push
loope
dec
mov
lds
push
out
test
push
fmull
fcmovnb
cmp
popf
cmc
cmp
pop
hlt
sub
pop
mov
inc
mov
sub
xlat
cltd
movsb
imul
jno
mov
fisttpl
sahf
and
inc
xchg
jb
out
fcomps
stos
push
jmp
cmpb
test
mov
sahf
dec
inc
enter
jp
test
addl
pop
shr
dec
mov
inc
inc
push
nop
fcmovu
sub
sub
jbe
add
mov
mov
loopne
ljmp
mov
lods
push
pop
pop
adc
and
cmp
movsb
fcoml
sti
roll
lahf
in
and
sbb
pop
xor
bound
mov
dec
inc
inc
mov
rcrl
push
pop
adc
xchg
ja
dec
jge
adc
rcll
sub
jge
ret
hlt
int
push
and
fmull
inc
frstor
push
sbb
inc
mov
add
shr
inc
insl
jmp
hlt
call
mov
scas
das
hlt
out
mov
mov
test
notl
cmpsl
and
movsb
xchg
pop
push
les
test
fdivl
push
sbb
in
or
loop
fnstsw
inc
fdivr
loop
or
dec
or
icebp
sub
test
cs
and
sub
leave
dec
je
lods
cltd
call
mov
lahf
jno
loopne
sub
xor
jno
sti
mov
dec
push
and
cmc
lcall
sar
vsqrtpd
sbb
xchg
shr
xor
dec
cmp
add
jge,pn
jbe
cmp
arpl
je
into
jp
fnstcw
sahf
inc
and
js
imul
imull
sub
mov
js
subl
shl
lcall
es
insl
ss
push
mov
adc
ficoml
faddl
lret
cwtl
inc
inc
rcrl
outsb
pop
test
or
sub
mul
in
in
mov
enter
imul
adc
dec
dec
retw
dec
inc
or
xchg
sub
dec
lea
sbb
test
daa
pop
jno
sbb
xlat
pop
lock
xlat
daa
or
aas
loopne
nop
or
test
outsl
testb
pusha
ret
adc
and
scas
mov
push
push
mov
iret
xor
ja
call
mov
dec
or
xchg
in
or
xchg
xor
sbb
dec
sbbb
aad
out
bound
out
mov
scas
push
in
sub
inc
push
leave
test
pop
cmp
mov
cmp
out
adc
call
lret
push
mov
push
test
loope
adc
pop
push
pmaddwd
xor
push
es
dec
fprem1
sbb
sub
mov
out
ret
jmp
xor
inc
mov
pop
aad
add
cvttps2pi
pop
pop
dec
in
jecxz
adc
hlt
pop
add
aad
jns
push
sbb
jmp
sbb
fmull
mov
or
jne
scas
in
jno
insb
adcl
mov
pusha
outsb
outsl
or
jnp
adc
mov
std
cmpsl
and
and
or
pop
sbb
dec
mov
int
stc
add
xlat
mov
push
xchg
adc
xlat
inc
pop
movsl
hlt
insb
and
xorl
or
pop
push
xchg
das
jp
stc
or
jne
pop
jecxz
outsl
ret
add
repz
dec
cwtl
push
sbb
sbb
adc
sbb
sub
in
xchg
test
outsl
jns
mov
mov
xor
ja
scas
mov
int3
rcrl
mov
mov
adc
cmc
dec
mov
sbb
stc
das
jb
subb
dec
pop
xor
into
push
rorb
dec
dec
cs
cld
adc
in
jmp
sub
and
sahf
push
outsl
fs
sbb
pop
outsl
jnp
fdivrl
movsb
daa
fs
sbb
rol
scas
loope
pop
inc
fs
push
push
imul
push
jb
push
fisubrs
pop
iret
sahf
xor
and
scas
mov
adc
and
adc
pop
test
sbb
xor
movsl
xor
test
push
xchg
pushf
jno
jle
lea
stc
loop
push
mov
loopne
out
dec
test
add
loop
fidivs
rcrl
mov
test
jno
add
mov
mov
repz
pop
xchg
mov
repnz
fstps
dec
movsl
fdivl
shll
mov
and
dec
lret
xchg
mov
jae
mov
dec
dec
aaa
ja
jnp
xchg
sub
insb
dec
jg
jmp
cmc
mov
lock
iret
movsl
adc
lahf
pusha
or
loop
repz
or
repnz
scas
mov
push
mov
shll
clc
dec
nop
xchg
bound
add
test
pop
std
mov
xor
xchg
jle
xchg
jno
mov
mov
addb
or
in
dec
fwait
je
pop
pop
adc
ret
mov
add
aaa
dec
aaa
into
int3
popa
push
pop
sub
sub
pusha
aad
pop
sbb
jb
pop
jns
in
je
rol
mov
hlt
fimull
jg
add
enter
js
int3
pop
out
ret
pop
push
aas
and
sbb
cli
xor
popa
inc
sar
imull
loop
popf
pop
xor
push
mov
and
pop
push
sub
pushf
mov
lcall
icebp
pop
daa
mov
mov
adc
mov
mov
addr16
adc
mov
clc
push
inc
je
cmp
xor
xchg
jge
pop
les
lret
sub
mov
cmc
xchg
call
xchg
aad
out
cmp
pop
subb
outsb
sbb
mov
cld
orl
or
and
xor
cwtl
fdiv
sbb
stos
jns
call
adc
jmp
sbb
cmp
dec
dec
clc
std
lcall
test
das
mov
lcallw
fidivrl
out
pop
scas
shrb
push
mov
push
cmp
jl
scas
ret
mov
mov
in
mov
cmp
fbstp
sbb
rcr
cmp
arpl
dec
sbb
insb
push
je
sub
cmp
rol
push
push
cmpsl
sub
fdiv
std
ds
shl
add
cmp
dec
mov
test
leave
fucomi
mov
push
xchg
or
in
mov
addw
mov
xchg
hlt
xchg
mov
insl
subl
xchg
cmpsb
stc
stos
mov
push
sbb
adc
cli
ljmp
mov
jp
or
pushf
cmpb
dec
aas
pop
cld
sar
cwtl
and
sbb
aas
sub
es
scas
ss
loopne
mov
mov
pop
pop
jnp
je
cmp
push
sbb
xchg
js
and
inc
sarb
xchg
movsl
imul
fwait
pop
mov
mov
push
cli
nop
or
xor
or
addl
xor
inc
jge
jo
out
stc
pop
stc
sti
xchg
adc
or
pop
cld
loopne
sub
xchg
xlat
xchg
aaa
aaa
sahf
sti
in
jp
dec
cmp
mov
mov
xor
daa
imul
mov
sub
add
and
out
enter
sbb
lods
cltd
sbbl
xchg
adc
and
into
sub
outsb
push
sub
dec
lcall
lret
insl
sbb
mov
nop
movhps
jno
sbb
addb
xor
lods
mov
sti
in
insl
insb
in
mov
fildll
inc
add
scas
lcall
mov
push
les
daa
sbb
inc
cld
cwtl
les
stc
sbb
push
mov
call
xchg
lock
lcall
int3
sub
mul
fists
xchg
jae
aas
mov
in
mov
notl
stos
pop
adc
in
xlat
lods
test
dec
lret
jb
jl
xor
lods
cltd
jo
mov
dec
dec
andl
fs
push
enter
mov
xor
ja
sahf
fildl
jb
sahf
adcl
test
fnop
pop
int3
arpl
sahf
rcrb
scas
inc
movsb
mov
inc
fstl
cli
popa
and
dec
jb
inc
scas
pop
inc
out
mov
aad
cmpsl
jp
mov
sub
pop
push
insl
add
sub
ss
push
fadds
xchg
push
cltd
mov
js
push
sub
mov
push
add
mov
sbb
dec
sub
push
test
add
les
jl
das
sub
cli
imul
outsb
pop
cmp
hlt
pop
push
outsb
popf
mov
push
mov
sub
in
shl
ret
cmp
jns
ret
aam
rcrb
sbb
insb
xchg
dec
shl
lret
mov
test
rcll
pop
mov
movsb
daa
adc
xchg
adc
fsubrs
out
push
mov
and
cmp
std
dec
addr16
mov
filds
ss
and
repz
rorb
into
faddl
dec
cmpsl
mov
cmp
loopne
jnp
shrw
mov
and
mov
lret
lods
jmp
loope
lret
pop
mov
jl
mov
mulb
dec
outsb
mov
sub
dec
dec
pop
test
out
and
sub
push
cld
add
or
dec
lock
xchg
sub
fistpll
and
mov
dec
push
stos
sub
sub
xor
stos
push
or
inc
add
cmp
call
mov
scas
push
cmp
inc
scas
sub
cmp
sarl
jb
xchg
mov
pop
popf
adc
push
push
or
xchg
push
repz
aad
jo
pop
sub
in
xor
pop
les
jbe
or
in
scas
rcl
fiaddl
lods
dec
loope
or
scas
iret
fidivrs
pop
push
jbe
ret
dec
nop
shl
imul
mov
in
and
cld
aas
mov
cmpsb
cli
and
cmpb
push
decb
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
jmp
insb
jns
sbb
mov
push
push
xlat
sbb
pop
pop
jl
mov
xchg
xchg
inc
xchg
ret
jl
js
mov
outsb
aam
sub
jnp
int
cmp
int
mov
sbb
mov
xchg
xlat
scas
imul
outsl
xor
dec
ret
xchg
incb
mov
fbld
fstpl
cmpsb
push
xchg
cmp
mov
mov
test
dec
add
jp
mov
mov
adc
les
cwtl
dec
inc
insl
jp
aam
and
mov
insb
or
arpl
test
imul
scas
rclb
lods
inc
sbb
push
or
jae
inc
and
inc
sti
loopne
mov
js
pop
jns
fwait
daa
push
jl
repz
jnp
or
cltd
in
test
shr
gs
aam
mov
xchg
mov
dec
push
push
cmp
push
rorb
and
aam
je
push
xchg
mov
loopne
push
ljmp
stos
mov
dec
mov
push
cmp
and
je
cmp
jmp
inc
xchg
scas
ret
jns
in
in
or
xlat
call
xor
xchg
fwait
mov
or
mov
cmp
mov
pusha
test
rcr
test
lret
lock
pop
loop
iret
inc
jo
fwait
inc
ds
gs
xchg
repnz
daa
cli
je
testl
fsubrs
jnp
inc
call
mov
xchg
mov
cmc
xor
adc
or
fs
lret
xchg
sbb
aaa
adc
push
cmp
mov
push
xchg
pop
or
mov
in
mov
mov
add
roll
mov
xor
dec
int
jmp
addl
in
push
jecxz
movsb
test
out
icebp
scas
pusha
sub
push
cmp
shll
arpl
lret
mov
sbb
cmp
mov
add
repz
xchg
sbb
pop
into
rorl
mov
xor
mov
jge
jns
inc
ss
xchg
cmp
daa
xchg
in
jmp
dec
mov
gs
mov
daa
lock
in
jo
adc
outsb
inc
je
call
test
dec
cmpsl
or
and
mov
sbb
mov
lret
xchg
adc
insl
cmpsl
stos
pop
and
jp
ja
fistpll
data16
inc
scas
pop
push
popa
rol
loopne
mov
sbb
pop
mov
mov
push
rcll
xchg
xchg
in
aam
xorb
push
pop
int3
rcl
insl
dec
cltd
mov
mulb
pop
pop
dec
xlat
scas
push
adc
loop
pop
mov
mov
push
lcall
dec
adc
xchg
mov
fisttps
or
in
fs
into
dec
dec
xor
call
add
cltd
mov
cmp
shl
ret
mov
cmpl
incl
mov
cs
inc
je
push
bound
push
addps
cmp
out
test
ret
xchg
push
jbe
or
and
loop
lock
loop
mov
adc
cmp
les
fwait
or
jp
xor
mov
sahf
rcrl
inc
popa
in
out
scas
jmp
rclb
sub
sti
call
addr16
out
dec
and
jns
jbe
pushf
cmp
cmp
lret
jge
aad
icebp
adc
lahf
mov
cmp
loope
mov
mov
into
arpl
xchg
jecxz
int
popf
push
data16
imul
mov
lods
lock
insl
xchg
mov
test
xor
add
nop
inc
lea
cmc
sub
cld
add
aas
out
subb
mov
stos
add
adc
es
in
xchg
outsb
out
daa
pop
push
aas
cmp
xlat
imul
mov
and
out
and
in
sub
push
and
add
inc
push
pusha
add
add
adc
mov
xor
push
addr16
repnz
inc
sbb
aam
inc
jb
shrl
pop
jb
lcall
insl
je
mov
aam
testb
out
ss
roll
mov
mov
jge
fidivs
add
fstps
or
mov
aam
and
roll
fcomps
jns
dec
push
xchg
cmp
or
and
in
je
jne
pop
movsl
adc
out
sahf
cmp
and
push
fisubl
or
xchg
dec
aad
or
in
movsb
jmp
cmp
jge
int3
dec
test
xor
pop
mov
imul
outsl
out
mov
jecxz
or
lahf
or
push
les
roll
rolb
cltd
in
cld
ja
out
cmp
fidivrs
cs
dec
out
mov
clc
lea
mov
insl
jmp
add
mov
xor
sahf
or
add
popf
xchg
inc
in
jo
loopne
xchg
mov
jl
dec
pop
push
rorb
repz
insl
xchg
push
fs
adc
mov
jge
jp
les
xor
or
lods
or
lcall
mov
pop
pop
xchg
cmp
ljmp
cmpsl
in
push
push
add
scas
ja
mov
fwait
gs
jne
xor
xchg
andb
imul
ds
lods
jo
xchg
mov
jo
test
mov
jae
push
ret
shll
pop
mov
mov
jl
std
sbb
push
mov
adc
lahf
std
mov
mov
jb
iret
aas
dec
or
sub
jp
pushf
inc
sahf
pop
jg
scas
jbe
addr16
pop
fisubrs
cmp
out
negl
mov
or
push
lods
push
and
jb
adc
pop
test
pop
les
xor
jnp
or
lock
mov
gs
scas
fiadds
and
enter
xchg
xchg
ljmp
gs
xor
jbe
data16
mov
or
and
pop
jae
xor
push
pop
pushf
or
scas
mov
or
lock
aaa
div
cmp
lods
std
out
jnp
or
push
mov
test
leave
fiadds
mov
xor
aas
xchg
cltd
out
test
mov
jnp
sbb
adcl
movb
loop
push
mov
mov
outsb
scas
inc
mov
je
cmp
inc
xor
outsb
jns
lahf
jae
push
mov
jns
push
mov
adc
call
sub
filds
adc
popf
das
loop
sub
popf
iret
push
mov
in
ja
sbb
leave
xchg
in
scas
xchg
mov
ficompl
push
push
push
and
hlt
adc
mov
popl
sbb
dec
and
scas
xchg
and
pop
cmp
mov
mov
inc
stc
shlb
push
pop
add
push
stos
cli
add
cwtl
xlat
leave
xchg
lret
cld
ljmp
icebp
mov
sbb
add
mov
pop
mov
mov
mov
outsb
stc
pop
inc
xchg
int
xchg
or
sub
fsubrs
sahf
pop
cmpsl
mov
outsl
xchg
mov
icebp
pop
lods
or
gs
loop
in
sbb
test
mov
test
outsl
out
addr16
popa
popf
sar
push
das
or
out
cltd
mov
stos
arpl
push
jbe
mov
inc
dec
ret
outsb
and
push
fwait
xchg
pop
mov
push
pop
adc
add
movsl
jmp
xor
mov
lcall
cmp
jmp
insl
cmp
pop
fbld
lret
mov
lock
fnstcw
jnp
sahf
inc
lahf
mov
ss
pop
lret
mov
ss
pop
sub
lds
jae
lds
shrb
nop
inc
std
inc
out
adc
out
pop
iret
mov
mov
stc
pop
rorl
outsl
repz
sub
xor
cld
pop
fwait
je
mov
mov
fcomps
dec
mov
js
and
movb
pop
cmpsb
lea
out
pop
xor
add
jp
inc
and
xchg
xor
testb
dec
subl
rdmsr
in
add
in
dec
insb
mov
pop
insl
adc
data16
mov
fwait
fwait
rorb
outsb
imul
sbb
xchg
mov
repnz
aas
int
inc
idivl
add
stos
push
xor
mov
sbb
dec
cli
mov
addb
mov
inc
pop
arpl
repz
fisubrl
adc
mov
xchg
clc
pop
pop
test
cmp
mov
test
add
sub
mov
das
adc
adc
loope
aaa
lods
inc
call
repnz
ljmp
imul
xor
add
das
or
pop
or
jae
adc
jne
stc
sti
mov
and
adc
jne
or
add
or
push
inc
pop
adc
loope
fwait
mov
lock
addr16
cmp
call
fdivl
mov
popa
cmpsb
leave
in
jmp
xchg
push
aas
pop
insl
fcmovb
cmp
nop
jmp
sbb
data16
sarl
or
out
rclb
ja
in
icebp
cltd
fs
stos
sub
out
pop
insb
mov
arpl
jno
dec
in
enter
or
and
es
jge
add
pop
mov
stos
decl
sub
stos
jecxz
mov
mov
clc
fisttpl
sub
push
test
imul
dec
ds
rclb
int
adc
inc
inc
mov
rcrb
mov
xchg
cs
stos
out
scas
xor
adc
aaa
mov
or
fadds
mov
loope
mov
mov
push
hlt
shll
pop
std
hlt
mov
xchg
pop
sbb
cs
xchg
ret
mov
cmp
mov
cmp
jne
aad
push
jo
xor
adc
cli
repz
mov
inc
sbb
js
pop
lds
je
out
sti
ja
addr16
and
adc
lea
lock
adc
mov
mov
repz
jbe
mov
xchg
aad
sbb
rcrb
jmp
sbb
push
sub
loopne
xor
aaa
stc
or
ds
xchg
dec
or
fildl
lahf
es
pop
ror
add
pushf
adc
mov
adc
stos
stos
cwtl
push
push
pop
imul
push
mov
xchg
js
or
gs
cltd
movb
call
outsb
inc
in
mov
jg
sbb
out
ficoms
ret
mov
sub
outsl
push
imul
mov
or
dec
sti
frstor
pop
xor
enter
mov
xlat
pop
xchg
je
cmp
ljmp
insl
loop
push
movsb
std
iret
mov
out
inc
loop
test
fistpll
sbb
or
jo
leave
add
cmp
lcall
cmp
or
mov
arpl
sbb
mov
dec
cmp
jecxz
inc
imul
push
push
pop
jl
mov
sahf
mov
mov
or
sub
adc
in
loope
pop
jp
pushf
push
divl
sub
pop
test
lods
mov
adc
inc
ficomps
fisubrs
ss
mov
pop
lods
stos
mov
mov
sbb
dec
into
jmp
cmc
mov
inc
les
out
hlt
js
subb
sbb
movsl
pop
cmpsl
in
mov
imull
fs
mov
in
xlat
cmp
test
dec
lods
ret
jg
repz
pop
sub
aad
in
repz
hlt
dec
xor
nop
leave
jp
out
push
dec
mov
xchg
fstpl
nop
rolb
jmp
imul
loopne
xor
call
test
jns
les
push
cmp
pop
mov
xor
dec
imul
mov
bound
push
fisubl
into
lock
xchg
ds
mov
lods
enter
jnp
and
sar
sub
pop
push
aas
std
pop
leave
cli
xor
nop
mov
xor
js
movsb
mov
xor
test
cmp
xchg
aad
cmp
outsl
xchg
aaa
aaa
jle
cs
popa
mov
add
and
out
sub
cwtl
fwait
js
cmc
xchg
movsl
repnz
popl
dec
sub
xor
cwtl
sbb
les
test
daa
js
decl
in
push
mov
cmp
jge
cltd
sub
push
rol
test
or
pop
xchg
mov
lods
xor
ljmp
push
push
push
std
pop
repnz
imul
jmp
mov
addr16
mov
xor
push
bound
ficompl
xor
jo
inc
jmp
hlt
repz
in
sahf
jb
sub
cli
daa
ror
daa
xchg
inc
mov
enter
jle
sbb
shr
push
movb
pushl
push
mov
outsb
inc
or
sub
or
fwait
enter
scas
int3
in
cmp
fimuls
rolb
or
sub
fiadds
fistps
xchg
outsb
roll
push
pop
jmp
and
inc
sbb
jle
pop
push
inc
mov
push
scas
cmp
add
rclb
pop
pushf
pop
and
pop
mov
icebp
and
inc
xchg
test
lds
gs
lret
and
push
push
pusha
incb
movsl
imul
std
int
adc
sbb
cld
aaa
insb
popa
pop
sub
imul
xchg
cmp
faddl
cmpsl
add
sub
push
out
test
mov
insb
lcall
cmpsl
mov
xchg
xor
fadd
ja
and
lods
test
mov
and
jg
add
ss
loop
imul
fsubr
dec
int3
sub
dec
in
xchg
jge
lock
inc
mov
adc
ficomps
mov
adcl
inc
mov
insl
sub
aam
add
mov
lock
bnd
cwtl
fwait
or
cmp
push
dec
sbb
pop
and
lahf
test
fimuls
sbb
aad
sti
repnz
xchg
add
roll
aaa
push
lods
push
and
dec
sti
sub
jmp
cmp
or
pop
aad
adc
inc
push
sub
dec
fs
fnstsw
jnp
repnz
mov
in
mov
pop
sub
loope
mov
mov
inc
popf
outsb
stc
movsl
push
cli
pop
ret
imul
and
xchg
loop
mov
popf
rclb
insl
mov
in
fdivl
repz
jge
adc
jae
xchg
es
pop
scas
insb
sbbl
into
jg
in
xchg
mov
pop
sbb
push
mov
dec
popf
mov
xchg
mov
lds
mov
pop
aam
xor
add
sarb
out
sbb
jbe
and
add
cltd
cmp
in
and
addb
jns
xchg
dec
outsl
or
mov
rclb
adc
outsb
call
ret
cltd
outsl
cli
adc
gs
jne
nop
jp
fwait
pop
out
and
add
xchg
gs
insb
push
int
cltd
fst
mov
or
lods
sarb
filds
adc
dec
pushf
movsb
ljmp
sahf
fs
outsl
daa
mov
fs
xchg
fbld
cli
xor
mov
aad
jmp
cmp
mov
popf
and
xchg
xchg
xchg
repz
push
out
repz
out
xchg
sbb
test
jge
test
add
ficompl
ja
add
jo
lret
jo
test
add
in
leave
pop
fistpll
faddp
mov
daa
pusha
jno
push
je
lcall
push
cltd
es
je
pop
jle
jae
push
jle
lds
lahf
fcompl
adc
and
dec
inc
inc
add
mov
int3
xchg
add
add
push
sarl
mov
mov
aad
and
and
sub
and
mov
dec
test
xchg
add
loope
xchg
push
rcll
pop
test
dec
mov
scas
hlt
mov
jmp
or
ret
and
ret
loopne
pop
adc
xchg
add
push
out
lret
dec
sub
mov
mov
mov
fisttps
movsl
lret
mov
pushf
push
mov
pop
mov
mov
inc
mov
imul
adc
pop
cmp
enter
fucom
test
test
mov
test
int
mov
sub
rorb
jne
andl
fs
inc
jl
or
fs
pop
mov
imul
inc
das
mov
movsl
jb
adc
dec
lods
pop
jle
sti
xchg
xor
xchg
mov
jnp
rol
daa
and
add
inc
ja
enter
popf
sbb
in
xchg
fwait
pop
xchg
mov
insl
mov
aad
rolb
add
add
inc
hlt
add
lock
in
pop
test
movsb
and
in
das
jae
push
jno
repz
loope
adc
pop
sar
cmc
sub
mov
mov
mov
nop
add
nop
mov
mov
jp
jo
in
jle
jmp
adc
mov
rcll
cmc
push
mov
cmpsl
js
scas
xchg
jl
int3
jne
dec
shll
repz
adc
ret
repnz
jle
fstpl
scas
push
xchg
push
mov
jno
pop
loopne
jmp
out
inc
imul
sub
sbb
mov
sahf
sbb
orl
shrl
sbb
and
shlb
sbb
or
jg
mov
and
dec
outsb
and
fidivrs
movsl
mov
jp
push
ffree
sbb
add
cltd
jo
lcall
xor
outsl
mov
jne
enter
xchg
xor
jle
movsl
xchg
pop
xor
sbb
dec
sbb
pop
out
or
imul
xor
jmp
pop
mov
mov
inc
adc
or
cmp
in
movsl
cwtl
and
cli
es
and
mov
mov
ljmp
loopne
movsb
sub
fdivrp
adc
negl
lcall
shrb
mov
call
popf
add
xchg
imul
pop
xchg
xor
jo
adc
sarl
es
cmp
lret
ds
mov
arpl
in
movsb
aad
pop
or
fiadds
popa
iret
jne
sub
mov
xor
add
scas
imul
ret
push
or
pop
nop
ss
lea
test
fildl
fcomp
push
or
add
aaa
jmp
call
xchg
sub
mov
scas
cmp
imul
sub
je
test
or
popf
or
xchg
gs
add
shll
jmp
jbe
jge
popa
or
into
scas
movsl
data16
mov
enter
mov
aam
ss
ret
jle
and
lret
cmc
outsl
js
inc
daa
mov
pop
mov
mov
dec
call
xor
out
cmp
push
xchg
and
dec
loope
cmp
mov
adc
sbb
xlat
fiaddl
cltd
mov
gs
ret
nop
xchg
jge
pop
add
sbb
roll
test
mov
inc
mov
in
push
ljmp
lret
xchg
mov
loop
sbb
cmp
mov
rorb
mov
xor
inc
xchg
loopne
dec
int
or
pushf
dec
lods
push
mov
es
sub
scas
jp
dec
in
and
scas
sbb
pop
xor
push
mov
cli
inc
jnp
jg
cmp
lret
fwait
push
mul
lcall
lds
mov
nop
cwtl
xor
xchg
adc
mov
cwtl
mov
cmp
add
sahf
mov
xchg
push
jo
ficompl
and
mov
shrb
sbb
das
andb
in
or
xchg
rcrb
pop
outsl
inc
lds
mov
pop
loope
push
popf
ror
sub
rcr
xor
out
and
aad
xchg
jg
sbb
aam
mov
cmp
fwait
pop
add
sti
inc
lds
xchg
into
lds
push
in
mov
test
mov
int3
pop
cmp
stos
push
jbe
out
subb
mov
xchg
out
clc
push
enter
dec
xorl
push
xchg
loop
inc
jmp
xor
inc
mov
lahf
or
and
pop
push
int
sub
ret
repnz
sub
bound
fdivs
sub
cld
and
popf
orb
jno
aas
xchg
es
insl
jo
sti
mov
sbb
add
movsl
sub
movsb
mov
add
and
inc
lods
mov
cmp
pop
xor
mov
fstp
push
clc
xor
and
pop
add
sub
mov
push
pop
or
faddp
movsb
ja
leave
sub
cmpsb
into
jge
push
rclb
push
test
xchg
adc
iret
cltd
stos
inc
sub
jae
inc
out
pushf
sbb
lock
js
add
xchg
lret
mov
gs
lcall
fcompl
adc
int3
in
enter
sar
jle
mov
ss
xchg
sarb
sub
fcmovbe
inc
inc
movsb
inc
cld
js
mov
mov
jnp
scas
xchg
adc
cs
in
adc
or
jo
jg
add
leave
xchg
enter
scas
scas
sub
adc
xor
push
repz
aam
sbb
insb
add
mov
mov
in
pop
or
lahf
aaa
pop
add
sub
notb
icebp
outsb
stos
add
sti
pusha
stos
push
inc
int
and
push
into
push
jae
mov
rol
ja
mov
cmc
test
xchg
mov
xchg
loop
pop
push
mov
lea
repz
push
inc
imul
add
sysexit
push
aas
aas
fs
pop
jmp
cmpsb
xchg
fsubs
adc
mov
fwait
out
movl
cmp
cltd
cld
ss
xchg
xchg
push
test
scas
mov
jnp
or
jle
jns
inc
or
pop
pushf
xchg
sbb
push
cmp
loope
addr16
jl
call
inc
lock
inc
popa
repz
sti
dec
xor
pushf
popa
ljmp
mov
nop
inc
dec
fdivs
dec
into
xchg
in
arpl
dec
xchg
dec
push
mov
mov
add
aaa
pushf
shll
out
aam
xchg
lods
cmpsb
into
mov
lock
push
jg
and
loopne
and
lcall
dec
jle
es
mov
in
pop
daa
add
rol
add
nop
stos
inc
mov
dec
push
in
int
mov
pop
pop
jne
fcom
inc
fdiv
xor
adcb
and
mov
in
xor
xchg
jne
pusha
pop
popf
pop
pop
or
jge
sti
xor
aam
mov
inc
pop
mov
loop
enter
mov
cltd
in
xorl
stos
inc
in
ljmp
pop
nop
push
stc
cld
sbb
fadds
xchg
inc
sub
int3
cmp
popf
scas
xor
xlat
in
push
cmp
sub
inc
shl
js
loopne
mov
fists
in
or
fnstcw
dec
stos
test
dec
or
lcall
stos
sbb
addr16
xor
out
push
bound
mov
in
iret
scas
repnz
or
test
mov
mov
add
pop
ds
mov
out
add
mov
or
mov
add
or
mov
out
fdivs
and
and
out
xchg
inc
iret
push
xchg
imul
jle
scas
push
push
and
aam
dec
sub
jle
daa
insb
add
ja
and
rcll
pop
daa
and
sbb
jns
shrb
pop
ljmp
call
sub
jge
and
mov
ja
lret
adcb
mov
mov
jne
mov
into
data16
jp
cmp
hlt
bound
push
add
out
les
mov
sub
dec
and
pop
mov
push
pop
push
gs
inc
mov
add
push
and
lods
fwait
cmp
sbb
and
and
mov
repnz
aas
jb
xchg
bound
cmc
xchg
mov
test
mov
push
push
pop
dec
mov
fs
ja
or
cwtl
xor
fdivrs
scas
jl
and
and
mov
add
int
insl
cmpsl
fsubr
fiadds
xchg
inc
mov
xor
pushf
sti
and
and
mov
sti
pushf
cmpsl
xchg
cmc
aad
loop
cmpsl
popf
in
cmp
out
adc
fidivl
ror
dec
cld
ficoms
enter
ja
lahf
xchg
fcom
jge
into
cmp
test
fcoml
adc
push
xlat
lds
push
movb
sahf
add
xor
mov
out
imul
rolb
jae
mov
jl
mov
fisubrl
shrl
xchg
sub
mov
mov
faddl
or
repnz
les
mov
lret
push
pop
cvtps2pi
pop
mov
lods
aaa
icebp
bound
xchg
jmp
repz
dec
dec
outsb
int3
pop
pop
movsb
sbb
push
sbbb
pop
xchg
push
or
sub
into
inc
movsl
lock
mov
or
cmp
incb
cmp
mov
push
push
adc
pop
les
cmp
or
xchg
pop
jl
in
scas
stos
xchg
lcall
jo
outsb
movsb
jbe
pop
gs
movsb
lods
std
sub
mov
incb
out
jbe
sub
adc
lcall
dec
jle
ja
loopne
and
rcll
mov
push
pop
pop
ss
loop
pop
sub
sbb
jns
xor
aam
dec
es
ss
xor
std
stos
or
sahf
xchg
pop
add
fistps
mov
mov
adc
mov
mov
dec
push
adc
arpl
pop
iret
loop
fwait
jecxz
pop
mov
ds
imull
cmpsl
fisttps
inc
imul
push
test
mov
cld
jp
xlat
inc
sub
arpl
jo
push
xor
popf
push
pop
test
dec
cmp
sub
cmc
pop
mov
xchg
jo
adc
xlat
call
mov
jmp
and
mov
and
mov
dec
ret
push
mov
pop
cmp
gs
call
fwait
xor
dec
cmp
jnp
or
sbbl
out
dec
mov
rdpmc
xlat
xchg
mov
hlt
cmp
sub
jp
rorb
push
insb
dec
into
subb
fs
ss
roll
sub
dec
cli
stos
or
add
sbb
xchg
enter
bound
out
lds
fldcw
inc
jb
cmc
pop
xor
jbe
aad
divb
jns
ret
cmp
je
xchg
pop
push
xor
jb
xchg
daa
insl
xadd
lea
mov
mov
mov
out
mov
mov
sbb
stos
sub
xchg
xor
iret
incb
inc
lods
add
aas
add
jbe
call
push
sub
add
inc
add
je
and
mov
out
popf
scas
test
in
andl
push
cltd
cmp
sbb
xchg
in
mov
sbb
dec
mov
mov
cmpsb
hlt
inc
in
mov
icebp
jl
cmp
popa
in
jge
jmp
ja
std
popf
fwait
mov
cmp
inc
scas
inc
sbb
hlt
jne
sysexit
cli
lods
dec
dec
scas
pop
and
mov
mov
or
cwtl
shrb
dec
lret
or
jmp
cmp
inc
cmpl
out
inc
rcll
jb
pop
sbb
mov
push
push
or
dec
filds
push
fnstcw
clc
jnp
mov
faddl
adc
outsl
mov
into
sub
bound
inc
fiadds
insb
cmp
jl
sbb
dec
push
rclb
jmp
out
cmp
imul
iret
js
jne
sub
fsubrp
jp
jp
add
daa
sub
adc
mov
inc
ja
mov
ja
rcrl
rcrb
dec
dec
pop
add
sub
movsb
jle
dec
mov
arpl
sahf
inc
sbb
fstps
icebp
test
es
push
adc
or
hlt
jg
pop
mov
jmp
dec
stos
aam
in
in
lret
push
mov
or
icebp
pop
aaa
shll
bound
addr16
cmp
adc
filds
rcl
aaa
enter
test
sbb
push
fst
and
inc
daa
push
sub
ljmp
sub
pushl
inc
inc
inc
add
popa
shrl
mov
adc
mov
stc
jp
or
dec
iret
shl
je
push
xor
mov
lods
jnp
mov
jbe
mov
movsl
and
jmp
adc
aas
in
lcall
in
das
sub
shll
jmp
mov
mov
cli
and
mov
add
jle
movsl
fisttpl
push
loope
xor
mov
jl
nop
scas
pop
test
xchg
dec
movsl
cmp
add
pop
pop
jae
sti
stos
jns
xor
ljmp
int
ret
arpl
jecxz
leave
push
sbb
push
add
int3
mov
sub
mov
mov
and
mov
fldcw
mov
xor
sbb
cmpsb
jnp
xor
hlt
push
and
push
test
in
imul
stc
jl
stos
cmp
int3
test
mov
cmpsl
mov
mov
or
iret
jl
mov
sbb
fmul
mov
enter
test
out
xchg
lds
lea
mov
adc
mov
push
ja
nop
jmp
repz
cmpsl
adc
add
out
cmc
push
mov
push
jae
add
or
push
aad
call
pop
psrad
and
rcr
in
enter
int
fimull
xchg
ss
sarl
inc
popa
sub
jne
mov
inc
adc
je
rcrb
in
gs
push
cld
mov
or
test
outsb
sbb
outsb
fistl
add
sbb
inc
divb
frstor
cmovge
pop
mov
sbb
pop
fmuls
inc
inc
sub
dec
out
or
sbb
mov
push
pop
jg
pop
pop
push
repz
adc
int3
push
in
in
cli
sbb
dec
rolb
pushf
test
inc
sub
pop
mov
insb
cmpsb
mov
cld
sbb
and
add
sbb
fwait
rcll
dec
dec
push
ds
cmp
fistpll
pusha
mov
xchg
xchg
fstpt
stos
fwait
jg
add
inc
adc
mov
ret
pop
fcoml
out
push
mov
mov
cmp
incb
sbb
push
out
adc
pop
sar
lret
and
pop
int
push
and
frstor
xor
push
enter
add
mov
pop
pop
pop
leave
ret
jne
adc
std
push
adc
aas
adc
sbb
adc
sbb
add
push
adc
out
jg
add
dec
adc
mov
jns
add
inc
adc
sbb
inc
add
cmp
inc
add
cmp
inc
add
cmp
inc
add
add
add
add
add
add
add
inc
cmp
add
scas
inc
adc
inc
cmp
add
adc
push
adc
cmp
add
sbb
add
adc
idivb
inc
add
cmp
cmp
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
adc
subb
cli
adc
sbb
adc
pop
inc
adc
sbb
adc
in
pop
adc
pop
sub
add
add
inc
add
add
inc
add
add
cmp
add
aaa
adc
cmpl
adc
push
dec
adc
mov
adc
lock
add
adc
outsb
or
add
add
add
push
push
inc
push
fidivrs
xlat
inc
lods
ss
mov
inc
cmp
jae
popa
insb
insb
and
je
pop
push
outsb
fs
dec
push
pop
dec
popa
imul
outsl
insb
fs
dec
outsb
arpl
gs
dec
outsb
outsw
inc
jo
add
add
add
add
add
cmp
add
add
add
add
add
mov
cmp
add
mov
cmp
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
