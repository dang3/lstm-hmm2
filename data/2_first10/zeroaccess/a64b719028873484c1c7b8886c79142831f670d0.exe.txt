push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
or
mov
mov
mov
sbb
mov
mov
orl
push
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
push
jmp
enter
fldenv
add
lret
fiaddl
jl
jl
addb
jl
aam
ret
rol
in
lret
fmul
cli
icebp
fmul
aam
loop
cli
rcl
xchg
mov
loopne
cli
jmp
leave
xor
icebp
xor
neg
aad
int
fnclex
out
repz
ljmp
out
ret
clc
fxch
in
leave
icebp
hlt
dec
cmp
rolb
repnz
in
fildl
shl
sub
shl
xlat
stc
aas
adc
out
out
test
mov
iret
cld
fdivp
jecxz
hlt
jecxz
aaa
ret
fcmovu
neg
in
iret
out
lock
in
lock
in
aad
jmp
sti
call
aam
int
int3
out
ds
fmulp
sti
out
fmuls
hlt
icebp
rol
repnz
aad
xor
lret
sarl
cld
hlt
cmp
ret
loopne
out
sti
xchg
call
divb
out
cmp
cmp
aas
xchg
cmc
aam
std
out
loop
std
repz
shl
fcmovb
fcmovbe
lret
repnz
loop
cmp
addl
xchg
clc
repz
shl
stc
ss
cmc
loopne
filds
fcmovu
xlat
fcomp
ljmp
xor
push
rcl
in
aad
in
fcmovnbe
stc
test
in
lea
in
repz
fcmovne
icebp
in
call
sub
test
nop
rorb
into
in
div
int
loop
aad
rol
xlat
in
loope
sti
jmp
xchg
clc
idivl
shll
lock
clc
cmc
out
faddl
in
ljmp
popl
out
call
sti
cmp
int3
rcl
cli
jecxz
fildl
popl
hlt
in
in
loop
test
out
loope
cmp
std
sti
not
mov
ljmp
call
sub
repnz
into
fcmovnu
loop
loopne
cmc
sti
orl
icebp
cmc
clc
vcvttsd2si
jmp
cmp
in
in
enter
cld
in
xchg
in
out
call
stc
sarl
out
into
cld
in
sti
aas
sarl
enter
testl
jmp
xor
cli
stc
xlat
repnz
ss
movl
mov
and
ret
lock
fdiv
call
testb
jmp
repnz
repnz
in
stc
int3
cli
cmp
rcl
aam
and
cld
in
in
int
int
int
call
in
int3
int3
fcomip
or
fnstsw
hlt
ret
ret
aad
in
jecxz
loopne
xor
in
fcmovbe
in
ljmp
loop
call
loopne
jmp
cmpb
iret
enter
fprem1
fcomp
fdivr
out
repz
out
in
out
out
mov
into
mov
fdivs
stc
ljmp
ret
aad
hlt
decl
fucomp
fmull
xor
hlt
shl
into
cld
shr
cmc
ljmp
out
cld
les
sar
fdiv
das
xor
lock
imul
cmp
rcr
mov
sub
cs
int3
repnz
std
xor
fcmovbe
sarl
stc
fildl
enter
fmul
out
mov
mov
lret
shll
xor
aad
filds
in
leave
mov
xchg
ljmp
aam
enter
cmp
hlt
jecxz
hlt
leave
addb
mov
cmp
icebp
repz
iret
icebp
neg
into
lock
mov
enter
out
jmp
stc
mul
aad
xor
sti
xlat
cmp
shl
jecxz
ljmp
xchg
jmp
clc
aaa
int3
int
repz
in
dec
test
decl
ret
stc
xor
shl
call
fcmovbe
test
loope
mov
fisttps
repz
xor
shr
cmp
sbb
rolb
in
rcr
jecxz
ljmp
dec
or
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
enter
lret
xor
inc
int
xchg
in
addb
jl
add
not
xlat
jmp
loopne
filds
loopne
fnstsw
mov
divl
fucomi
cmc
shll
xor
cmc
shl
icebp
in
ret
xlat
in
ret
mov
int3
lret
xchg
call
xor
aam
repz
addl
mov
call
shrb
shlb
hlt
lock
iret
hlt
cld
aas
shl
sar
aas
decl
fmulp
int3
leave
icebp
test
loope
jecxz
int3
fcomi
test
xlat
or
repnz
fcomi
call
fdivrp
leave
into
lret
out
fnstenv
jmp
fistpll
sub
xchg
lock
in
orl
int3
sub
icebp
out
cli
rolb
fsub
clc
mul
test
jecxz
repnz
out
xor
int3
into
jmp
cli
cmp
in
aam
cmc
cld
in
in
cmc
mov
cld
leave
cli
out
xchg
xchg
xor
ljmp
fcmovnu
cmp
test
out
sbb
stc
enter
out
fisttps
imul
leave
aad
aad
jmp
int3
ret
bnd
aas
sti
and
test
loopne
in
in
fsubp
in
ror
out
vshufps
loop
out
out
std
rolb
in
jmp
in
std
leave
ljmp
mov
shr
call
or
test
addb
clc
cmp
xlat
icebp
enter
loopne
test
cmc
test
xchg
aas
out
cli
out
filds
int3
lret
cmp
cmc
call
cmp
std
div
add
fiaddl
out
int
out
xchg
loope
iret
in
fld
out
leave
xlat
loop
aas
loop
out
ret
imul
cld
out
mov
das
xor
in
iret
hlt
in
rcr
iret
xchg
aas
loopne
addl
lret
leave
xor
shr
fscale
fsin
aad
std
std
lock
mov
in
lea
jmp
in
int3
cmp
fcomp
iret
lret
xchg
call
int3
test
nop
xchg
in
xchg
repnz
jmp
enter
std
repz
in
filds
out
test
fiadds
xchg
cmc
repnz
cmp
icebp
in
cmp
ret
out
stc
test
roll
mov
loopne
cmc
loopne
div
xor
ljmp
aas
std
fimuls
fxch
mov
loopne
ljmp
ljmp
test
xchg
dec
cld
sar
rcl
jmp
imul
in
ljmp
cmp
call
call
ljmp
aaa
fmulp
rcl
jecxz
hlt
sar
cmc
mov
hlt
fcomi
fdivrp
xchg
das
neg
xlat
fcmove
xlat
in
cmp
idiv
aas
repnz
stc
out
int
fisttps
in
loop
imul
cmp
loope
aad
sarl
mov
mov
mov
ljmp
jmp
fmul
loop
in
fmull
test
xor
int
loopne
fidivl
cmp
cmp
cli
cmp
fmul
repz
shlb
cmp
out
stc
in
cmp
aas
test
aas
fucomi
fstp
fildl
in
jmp
ret
xor
call
jmp
out
shl
out
mov
fimull
fisttpll
idiv
cli
xlat
cs
clc
ljmp
xlat
loope
jmp
int3
mov
test
in
call
fmul
ljmp
cli
aas
jmp
testb
mov
rol
ret
xlat
cs
fdivp
testb
flds
lea
repnz
xor
in
rcr
into
sarb
ror
jmp
testb
adc
in
jmp
cmp
aam
hlt
sar
repnz
xlat
hlt
ror
mov
mov
leave
repnz
jmp
in
int3
xor
xor
xor
cli
loopne
clc
neg
jmp
loopne
sti
cmp
in
int3
xchg
out
xor
shl
ret
xor
hlt
xor
mov
mov
inc
add
add
add
add
je
cmpl
jne
pushl
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
adc
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
mov
lea
mov
mov
sub
and
mov
jmp
lret
aad
fcmovu
adc
int3
dec
inc
add
addb
jl
int
cmp
rolb
into
int3
fcmovnb
mov
xlat
in
aad
repz
xlat
adc
loope
repnz
stc
lea
iret
xchg
xchg
out
loop
lock
iret
in
hlt
shr
adc
out
test
std
call
out
xchg
out
ljmp
jmp
aaa
ss
in
jecxz
in
sti
orl
xor
fisttpll
jmp
cmp
in
out
out
lret
cmp
faddl
test
mov
fdivrp
fsub
xor
rol
cmp
cld
cli
in
in
loop
ds
mov
out
test
enter
repnz
int
rol
hlt
in
in
sti
std
fcmovnbe
int3
stc
shl
loopne
mov
jmp
xchg
xlat
in
loop
bnd
cld
add
std
std
cmp
addb
out
mul
in
repz
test
aad
aam
loop
xlat
into
stc
cli
mov
xchg
xchg
lret
in
in
shr
enter
repnz
jmp
cmp
int3
call
in
hlt
repz
xor
vpsubusb
lock
repnz
std
addb
loop
fisttpl
xlat
call
out
xlat
xlat
aam
sti
call
cli
shl
xor
out
fucomip
lret
cld
sub
in
ret
rcr
xlat
aad
cli
fsubr
ret
cmc
call
enter
into
loop
jmp
ret
cli
fbstp
sti
cmp
cmp
rcl
sbb
xlat
mov
mov
ljmp
sar
in
leave
shr
in
hlt
fsub
fsub
sti
test
neg
or
in
mov
shll
ret
jmp
jmp
jmp
in
stc
into
not
loopne
hlt
clc
in
addb
divb
iret
in
xor
stc
int
lock
cmp
jecxz
mov
in
mov
xor
ss
stc
cmp
in
lret
aam
icebp
neg
out
jmp
in
mov
repnz
xor
fadd
sarl
int3
frndint
leave
dec
jecxz
out
fadd
test
xchg
in
out
xor
fdiv
in
cmp
rcr
aad
or
aad
xchg
jmp
in
xor
in
cld
cli
aad
in
ljmp
rcl
fsubrp
lret
testb
iret
xor
out
ljmp
cli
cli
filds
clc
fcmovu
into
xchg
xchg
loop
icebp
rol
cmc
fnstsw
fst
loopne
icebp
lock
cmp
fcmovnu
fcmovu
fcmovne
ljmp
aam
sti
out
cmp
test
in
test
enter
in
jecxz
or
adc
stc
out
int3
cmp
ss
fstpt
into
repnz
xchg
stc
out
xchg
lret
orl
xor
clc
cmp
fcmovu
cmp
rolb
xlat
fiadds
repz
divl
aad
out
hlt
idivb
loopne
shl
ds
ret
fucomip
fildl
xchg
loopne
xlat
sub
ret
iret
aaa
test
cmp
sarl
fstpt
enter
loope
fcmovnb
lret
xchg
mov
repnz
jmp
repz
cmp
fildl
in
rolb
rolb
jmp
std
jmp
call
or
fcomp
vpsadbw
enter
loope
orb
enter
enter
lret
cmp
ret
test
enter
xchg
fisubrs
xlat
hlt
clc
neg
out
cmp
jecxz
test
cld
cli
clc
xor
in
enter
nop
rolb
ret
xor
ret
cld
sti
cld
cmc
sti
or
leave
jmp
rcl
mul
cmc
cmp
out
fcmovb
fcmovb
rcl
aad
cli
out
sub
jecxz
xor
call
in
fiaddl
std
cmp
mov
test
in
xchg
xlat
repz
lret
cmp
fmul
cmp
out
out
cli
out
cmp
test
ljmp
divb
xor
in
xor
aaa
stc
in
sbb
mov
and
mov
orl
jmp
rol
aas
ror
daa
jae
lea
or
add
loop
call
clc
fdiv
repnz
out
aam
iret
fsub
cmc
cmc
shl
ret
fiadds
int3
roll
loopne
repnz
xor
sar
aas
out
fdivr
cmp
leave
xchg
rorl
aam
aad
cld
shl
int3
ffree
fsub
icebp
in
loop
jmp
xchg
fcmovnu
decb
shr
out
ljmp
add
enter
sub
mov
xchg
fld
cmp
repnz
repz
shl
sbb
repz
lret
lea
adc
jmp
stc
repz
out
clc
fnstsw
in
cmp
leave
fpatan
leave
or
addb
lret
xlat
int
cmp
enter
hlt
sar
cld
rol
mov
fcmovne
out
int
jecxz
aad
xlat
ljmp
std
out
aas
aam
in
fneni(8087
xchg
ror
aas
enter
test
jecxz
shl
stc
in
fmul
fcomi
icebp
cmp
loop
sbb
xchg
jmp
mov
out
cli
cmp
neg
cmp
shll
jecxz
mov
repnz
out
sub
test
int3
stc
in
stc
ljmp
iret
ret
shl
hlt
loop
sbb
fiaddl
into
jmp
clc
call
cmp
add
cld
mov
xor
out
ftst
cmp
cmp
jecxz
fucom
add
cld
out
mov
jmp
rol
fld
lret
iret
cmp
repnz
stc
ret
cli
fnstsw
aam
enter
test
aad
ret
sub
enter
loope
aas
cmp
xor
fsqrt
filds
leave
nop
fmulp
fsubrp
rcl
xor
fucomi
fstp
into
lret
cmp
cmp
out
aam
test
test
repnz
stc
out
fmul
aad
in
int3
fmulp
repnz
jecxz
test
les
ror
ljmp
ds
decb
int3
sti
cli
sti
jmp
int3
rol
int3
xor
cmp
out
aad
cmc
xlat
call
out
addb
ror
out
iret
add
jmp
call
rolb
orb
lock
aad
ljmp
lret
repz
aas
cmp
fiadds
decl
cmc
cmp
leave
aad
cmp
fneni(8087
cmp
hlt
aam
mov
test
in
out
in
mul
rcr
hlt
cmp
hlt
xlat
enter
cmc
rol
fdivrp
fldl
faddp
sti
loop
lock
cmc
cmc
out
out
fisubrl
iret
jmp
xor
in
fdivr
fcmovnbe
fdivrp
mov
fimull
rcl
cmp
cmc
rcl
jmp
ljmp
ret
fld1
nop
lock
ljmp
lock
ffreep
fldl
cld
test
into
loop
div
cs
stc
repz
fldl
ret
fimuls
nop
addb
lret
xlat
stc
aaa
loope
fucomp
stc
sti
test
cmp
loope
mov
jmp
repz
xlat
cmp
imul
lret
in
cmp
aad
jecxz
in
mov
xchg
loopne
ljmp
aam
clc
lret
aad
rcl
mov
out
sti
fsubr
iret
addl
cs
int
out
cmp
dec
into
sti
jecxz
out
cmp
loope
fmulp
enter
rol
ret
not
les
out
jmp
loope
out
ret
jecxz
lret
clc
xchg
in
into
test
xor
stc
shl
sbb
aad
adc
in
test
jmp
sti
out
out
in
shl
xor
out
lret
icebp
out
fsubr
lock
vpsubb
aad
mov
fadd
jecxz
shl
test
loopne
xor
shlb
aad
sti
fstpt
ret
cmp
repnz
repnz
leave
lret
jecxz
incl
jecxz
repz
das
aam
xlat
in
roll
hlt
in
xor
xor
add
mov
add
add
mov
movl
lea
jmp
ror
rcl
fcmovnu
ror
and
std
mov
push
jl
addb
jl
in
mov
xlat
sti
ljmp
lret
stc
xorb
aas
cld
fcom
xlat
call
mov
shr
cmc
lock
sub
xlat
roll
cmp
repnz
call
icebp
mov
shl
in
rcl
repz
out
cmp
into
jmp
aas
sarb
call
out
in
orl
sarl
hlt
repnz
rcl
shr
cld
std
ljmp
ret
into
and
std
rcr
out
enter
iret
test
ds
jecxz
ret
hlt
loop,pt
ret
iret
mov
into
aas
das
repnz
call
out
cli
in
iret
fnstcw
ss
fmulp
or
leave
loope
in
in
sub
ss
sarl
cmp
cmp
aad
loope
jmp
out
jmp
hlt
or
int3
lret
icebp
aam
fld
in
xor
cmp
repnz
repnz
rcr
rorb
fcmove
loopne
fsub
fsubp
in
rcl
in
in
into
std
ds
cmp
cmp
fxam
lret
loope
popl
xor
cmp
fsub
xlat
call
stc
jmp
ret
fnclex
cld
xchg
rcll
clc
sub
dec
cmp
iret
rol
aad
rcl
fadd
xchg
fdivr
in
in
fdivp
call
fdivl
repnz
cld
repnz
cli
call
in
into
in
out
aam
hlt
rcl
aam
in
enter
out
cmp
cli
test
fmulp
out
rclb
ret
into
imul
cmp
cmp
rcl
icebp
cld
jecxz
clc
in
pop
fisttps
ljmp
cli
fdiv
cmc
xor
aad
in
ret
sti
hlt
addl
mov
aaa
leave
lock
call
fld
out
jmp
fcmovu
loopne
xchg
pop
xor
repz
hlt
imul
aam
idiv
in
xor
rcr
aad
xchg
fucomip
int3
cmc
lock
in
in
lret
cmp
jmp
lret
aas
hlt
cmp
loope
std
loop
rorl
int3
std
sub
loop
ror
leave
ljmp
ljmp
in
ret
xchg
call
jecxz
repz
lret
idivb
into
fnstcw
int3
ljmp
sar
xchg
jecxz
in
aaa
int
vpaddsw
repnz
std
xor
repz
ffreep
out
enter
cld
icebp
in
in
xor
out
jecxz
in
iret
cmp
fsubr
ffree
loop
clc
jmp
cld
out
out
incb
aam
icebp
hlt
shll
std
or
sti
mov
out
mov
mov
stc
int3
ss
ss
clc
lock
faddl
fsubp
in
test
int3
enter
out
int3
fldpi
incl
xchg
orb
in
xchg
sub
int
icebp
les
aad
fxch
ljmp
test
sti
mov
out
faddp
lock
in
hlt
stc
imul
sar
repnz
cmpb
mov
cmp
mov
mov
sub
aad
cmp
cmp
call
std
cmc
cmp
cmp
ret
loop
xchg
rcll
aad
xor
cmp
stc
shr
rol
fcmovb
loop
ds
stc
mov
xchg
rorb
hlt
out
lock
ret
aam
out
stc
aad
cmp
loop
sub
loope
repz
sti
out
aam
fsubr
fucomi
lret
aam
xlat
fprem
fldl
out
into
icebp
xor
sti
lds
aad
loopne
ret
incb
sti
aad
int
xchg
test
mov
fnstenv
divl
fdivl
loopne
test
roll
stc
ljmp
xor
int3
aad
repz
loopne
adc
leave
jmp
shl
stc
out
out
fidivs
loope
leave
xor
hlt
fcomp
rcl
test
test
test
sbb
mov
out
cs
aam
out
in
xor
sti
in
xor
out
test
stc
test
loopne
inc
in
mov
jmp
aam
into
lret
rcr
fstp
les
add
lcall
jl
not
xor
xlat
xor
enter
cmp
cmp
out
in
icebp
into
in
mov
ljmp
xor
ljmp
xchg
cli
test
fsub
loop
inc
xlat
fnstenv
xor
not
xlat
aas
cld
divb
roll
mov
incl
xchg
test
stc
cmp
fcmovnu
out
fmul
lds
movl
imull
out
sub
out
ss
aas
iret
std
push
shl
fld
in
into
fucom
lret
repnz
shl
jmp
fprem
ror
out
repz
idivl
add
jmp
mov
nop
sti
std
xchg
fcom
fyl2xp1
aam
repnz
rcr
xchg
fcom
testb
xchg
out
sti
xor
enter
rcr
xlat
xrelease
aam
cmp
loope
xchg
mov
ror
divb
xor
ljmp
ret
lret
out
cli
in
xchg
in
rol
xor
sbb
cli
vpavgb
sbb
cli
test
clc
jmp
jecxz
int
repnz
iret
xor
cmp
jmp
ret
iret
rorl
mov
xchg
iret
sti
xor
out
lock
aaa
lock
loope
xlat
testb
into
iret
int
call
rol
fucomp
jmp
fildl
aam
int
in
jmp
xor
aad
stc
aam
repz
repz
and
ret
rol
loop
sti
ret
test
call
out
into
out
hlt
out
imul
fcmovnu
sarl
test
mov
int
xchg
shl
out
cmp
xor
sarb
ljmp
mov
in
loop
out
out
sbb
out
sub
stc
hlt
cmp
loope
ss
cmc
sar
frndint
sbb
mov
aad
into
cmp
out
fdivl
fcmovnb
jecxz
fadds
aam
stc
out
into
ror
cli
out
iret
sub
enter
cmp
hlt
neg
sub
out
cmp
mov
xchg
fisttpll
loop
repz
test
fcomip
fdiv
cmc
fcmovbe
test
in
in
mov
int
nop
cmc
les
shlb
lret
out
loope
aas
fcmovnu
xorl
in
imul
mov
out
rcl
int3
sar
clc
into
aam
out
fadd
rcr
les
sti
call
repnz
shl
ret
out
fsubr
repnz
aad
loope
out
loop
enter
xchg
xchg
mov
test
fcmovu
out
out
loope
in
loop
test
fdivrl
loop
fstp
lret
mov
rorb
sti
icebp
icebp
hlt
cs
call
jecxz
aad
out
rcr
fldl
fdivr
enter
xor
das
xlat
idivb
aad
fcmove
sarb
in
fndisi(8087
lret
mov
fcmove
fdivrp
sub
iret
xlat
xor
cmp
enter
ret
jecxz
fadd
loope
mov
shr
fiaddl
aaa
xor
int3
lret
aad
in
xchg
roll
popl
nop
icebp
hlt
jecxz
xor
fsub
into
out
in
cmp
cld
test
cld
xchg
int3
cld
icebp
out
repnz
shlb
enter
fcmovne
into
cmp
ret
fcmovu
ffree
out
cld
aam
call
repz
vpaddsb
cld
lret
repz
cld
repz
in
sub
loope
leave
addl
hlt
aad
lret
loopne
addl
sub
out
test
fsubr
in
xor
int3
xor
xor
out
fnstcw
loopne
repz
addl
addb
lret
iret
in
jmp
cmp
loopne
jecxz
std
cmp
ljmp
std
xor
aas
cmc
into
stc
shl
loop
and
call
xor
shll
ret
sar
xor
jecxz
add
into
xchg
fadds
fdivr
loopne
jecxz
in
xor
add
mov
mov
mov
mov
mov
jmp
ret
rcl
rcl
aad
shrl
dec
into
add
sbb
add
jmp
iret
xor
ds
sti
loop
loope
aas
in
fistl
fdivs
xor
sti
icebp
sar
sbb
out
sar
xchg
out
xchg
stc
in
cmc
in
aaa
aad
fmul
clc
int3
sub
fnstcw
fdivrp
in
in
icebp
adc
xchg
div
sub
in
fidivl
enter
cmp
cmp
and
div
leave
loop
out
fcoml
xor
iret
icebp
rcl
sar
in
testl
jmp
roll
fmulp
aad
loop
cmp
into
loopne
sar
loopne,pt
mov
jmp
test
faddp
xor
loop
fnstcw
leave
repnz
neg
clc
std
jecxz
std
loope
fcomip
mov
enter
iret
xor
shr
ljmp
rcl
bnd
lret
loope
or
iret
fisubrs
sub
cmp
xor
repz
fdivr
in
fsub
mov
repz
in
std
in
loopne
shl
das
enter
call
fcmovnu
aas
cmp
jmp
in
sub
into
cmc
out
sub
ret
shlb
cmp
cmp
std
xchg
sar
jmp
lret
xlat
fildl
and
hlt
xor
rol
out
aad
lret
jecxz
test
xlat
fiadds
mov
mov
repz
enter
stc
fldlg2
rcr
into
aas
leave
fildl
cmp
test
ljmp
lret
hlt
fcmovnu
incb
test
out
cli
ret
ljmp
loop
cli
hlt
xor
fsubr
aad
out
xlat
out
rolb
out
loop
shl
ret
repnz
sti
sarl
and
neg
mov
mov
shl
sub
aad
stc
cmp
iret
aaa
fsubr
xor
ret
lds
cld
out
loope
out
int3
int3
rcl
shl
icebp
cmp
aad
idiv
cli
xlat
int3
out
shl
xchg
fdiv
in
call
orb
out
sarb
cmc
rcr
cmp
faddp
aam
xlat
fcompp
fdivr
ret
in
jmp
call
fxch
cmp
repz
rcl
aad
cld
cli
aad
fildl
loope
lock
int3
xor
xor
cmp
std
cld
in
std
repnz
cmc
in
mov
jmp
cld
lret
out
iret
jmp
jmp
fdivrp
div
sub
in
test
in
jmp
out
fmull
jmp
cld
fst
fnstenv
sar
out
ret
sub
shl
cmc
lret
lret
fcmovu
in
lret
cmp
sti
int3
add
loope
int
cli
rcll
lock
jmp
in
cmp
sbb
aas
aam
loopne
hlt
rol
hlt
test
loop
mov
in
xchg
cld
leave
hlt
jecxz
jecxz
fsub
aaa
xlat
int
faddp
loope
addb
ljmp
sub
leave
hlt
enter
cmp
aas
xlat
jmp
fneni(8087
loop
in
repz
ss
xor
call
clc
cmp
sub
mov
xlat
in
iret
out
mov
pushl
aam
ss
fprem1
out
bnd
jmp
jmp
test
jmp
test
xor
repnz
aaa
sub
ret
fcomp
cld
test
out
lock
cmc
mov
iret
fdiv
fdiv
shr
icebp
cmp
ss
repz
out
aam
hlt
fucom
addl
jmp
aad
cs
aam
lret
int3
rcr
in
test
mov
test
xchg
loopne
ror
mul
std
xor
out
idivb
divl
jmp
rol
xchg
fadds
in
in
test
sub
sarl
cmp
hlt
sti
int3
cli
in
add
loopne
fxam
out
mov
int
xchg
in
in
shl
rol
ret
repz
xor
aas
lret
mov
fldl
mov
out
xor
repnz
cmp
ljmp
loope
aam
aam
fadds
in
xor
xor
lock
mov
jmp
sarb
enter
fidivl
mov
jle
cmpsb
sbb
jl
inc
shr
add
neg
aam
int
iret
lret
cmp
xchg
aaa
xor
neg
fldln2
std
lret
sbb
xchg
rcl
cmp
lret
sub
xchg
hlt
aad
out
cs
sar
lret
aas
iret
clc
std
addl
cmp
ljmp
sub
into
test
iret
cmp
shl
cmp
sbb
shl
ret
rolb
cs
xor
fcom
xor
cmp
xor
lock
hlt
int
popl
aam
cmc
hlt
out
xor
cmp
fmul
cmp
iret
aam
fxch
fadd
leave
shr
jmp
loop
hlt
hlt
out
lret
testb
loop
fcmovnu
sub
ljmp
xor
cmp
ss
cmp
out
int3
out
loope
lock
rorl
iret
jecxz
jmp
cmp
call
filds
call
mov
sub
xor
out
rcl
incl
in
cli
fcmovnu
int3
clc
lock
rcll
xlat
xor
repz
out
repnz
std
in
fneni(8087
clc
xchg
call
xchg
int
icebp
into
bnd
in
cmc
out
loope
out
ret
xor
jmp
mul
in
loop
into
mov
xchg
cmc
les
ss
xor
rcr
std
fcmovu
loopne
stc
sar
leave
jmp
div
loope
loop
xchg
in
das
out
enter
cmp
cmp
repnz
repnz
lock
clc
jmp
in
cli
iret
shl
xchg
shl
not
ss
jmp
ror
aam
jecxz
loope
fcmovnbe
adc
faddl
into
in
loopne
ret
loop
aad
clc
call
iret
out
fldl
neg
int3
orb
clc
stc
fcmovu
aam
shl
call
cmp
in
fadds
sbb
loopne
hlt
jmp
out
cmp
call
sar
iret
shl
fadd
mov
fcmovne
icebp
fiadds
ret
lock
fprem1
out
ds
loopne
out
add
in
cld
lock
rol
lret
xor
cld
div
enter
cmp
vcmpss
ffree
mov
fisttps
lock
out
cld
shl
cld
clc
mul
shr
jmp
movl
xor
ret
cmp
not
ss
fcmovbe
faddl
xor
jmp
lds
aas
cmp
in
out
addb
jmp
in
icebp
ret
orb
in
icebp
cli
test
fiaddl
fcmovnu
jmp
fadd
ljmp
call
fucom
xor
test
leave
fimuls
out
enter
sub
xor
clc
out
hlt
hlt
aaa
ss
sbb
cli
shl
cmc
mov
xchg
loope
sti
std
call
out
xor
out
jmp
in
cld
aam
test
std
loop
jmp
das
xor
jmp
aas
lock
rcl
xlat
enter
jmp
or
loop
out
das
shr
ret
cmp
lret
cld
ds
idivl
ret
cmc
xchg
fsub
in
mov
mov
addl
aam
hlt
cmp
repnz
fld
rcl
in
cld
test
jmp
iret
clc
xor
sar
cli
cmp
cmp
shl
test
testb
xchg
loope
xor
repz
hlt
lret
ds
loope
leave
fisttpll
lret
nop
roll
jmp
jmp
rcl
cmp
loopne
xchg
loop
loopne
fsubr
fdivr
mov
xchg
xor
sarb
out
cmc
mov
into
icebp
fadds
rcr
in
cld
stc
test
icebp
cld
mov
xlat
cmp
xor
std
sti
aad
in
xlat
sar
out
call
fimull
in
mov
call
cmp
fldl
mov
test
jmp
sub
xchg
xchg
jecxz
rcl
test
jmp
sarb
movzwl
add
mov
mov
mov
xor
add
cmp
jmp
iret
leave
rcl
fstp
leave
repz
push
insb
enter
jl
addb
jl
cmp
out
mov
sti
mov
idiv
ror
icebp
stc
int3
stc
xlat
repz
cmp
xlat
mov
test
icebp
int3
jmp
int
out
out
in
hlt
cli
fidivrs
enter
jmp
nop
xchg
in
call
jmp
cmp
aam
adc
call
fiaddl
loopne
xor
xor
icebp
leave
fucomp
lret
jecxz
jecxz
aam
out
xchg
jmp
iret
aam
call
cmp
aas
cld
lock
cmc
xchg
out
xchg
call
divb
rcr
xor
rcl
stc
loopne
repnz
clc
enter
lret
nop
xchg
leave
aam
fnstenv
ffree
jmp
cmp
aas
and
hlt
ret
mov
jmp
iret
out
das
sar
sti
cld
xor
aam
in
cmp
faddp
xchg
sarl
cld
lret
fisttpl
shl
jecxz
jmp
ss
out
out
clc
ret
fmul
jmp
or
test
xor
out
sti
neg
out
clc
fmul
cli
test
in
loope
in
mov
clc
mov
cld
in
fdivp
icebp
aad
ret
fbstp
cli
cmp
cmp
aam
test
enter
in
xchg
test
repnz
out
iret
ror
shl
fcom
test
loop
ret
fstp
enter
in
loop
jmp
shrl
not
fcomip
enter
in
xor
sub
mov
in
in
cli
xchg
fucomip
in
das
aaa
in
xlat
leave
call
rcl
int
xlat
shl
ret
in
incb
cmc
out
into
fsubr
aaa
in
cld
sti
div
fdiv
icebp
into
in
in
mov
dec
out
fdivp
das
in
loop
iret
aad
icebp
shl
ljmp
mov
mov
roll
cmc
out
cmp
cld
lock
fdivrp
in
cmp
jecxz
cld
test
out
in
out
xlat
repnz
fst
fcmovu
lock
fcomi
out
loop
std
clc
int
or
faddp
xor
call
ljmp
sarb
ret
shl
in
stc
out
in
jecxz
inc
shl
icebp
hlt
repz
cmp
int3
repz
shr
cld
jmp
xchg
shr
icebp
repnz
ljmp
repnz
aad
test
cli
aad
out
ljmp
mov
mov
xor
rcr
in
sarb
jmp
cmp
adc
clc
jecxz
cmp
ljmp
out
xor
in
shl
out
shl
xlat
lock
xchg
mov
jmp
shr
out
rol
aam
test
clc
cmp
jmp
hlt
aad
xchg
mov
loope
in
in
sub
xor
out
clc
clc
cmp
cmp
jmp
int3
rorl
not
stc
cs
out
xlat
iret
repz
aas
loope
int3
cmc
mov
ret
rolb
enter
jmp
rol
jmp
shl
sarb
hlt
out
loopne
xchg
fmull
xlat
mov
cmc
into
cmp
int3
cmp
lock
loopne
hlt
fcmovnu
in
xchg
adcb
fnstenv
cmp
sti
sar
jecxz
shl
cmp
in
idiv
out
mov
in
repnz
int
xor
aad
sti
fldl
aas
aas
jecxz
testl
jmp
out
xor
repz
aad
sar
icebp
loop
aad
repz
cmc
loopne
int3
addb
in
repnz
shlb
xor
in
cmp
fcmovu
rcr
loop
clc
ret
fdivrp
clc
leave
ds
ret
xchg
shlb
hlt
cli
repz
cmp
sbb
fnsave
test
xchg
ret
jmp
iret
loopne
loope
xor
xor
lret
sarb
sti
cmp
cmp
jmp
fmul
mov
hlt
int3
lret
xor
jmp
cmc
shr
sti
into
ftst
div
div
xlat
mov
popl
xor
enter
call
in
icebp
rcl
out
leave
loop
jne
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
jmp
int
lret
xlat
int
es
adc
scas
lss
jl
add
loop
ljmp
into
test
lret
std
cli
cld
lret
aas
shl
lock
faddp
mov
popl
xlat
xlat
fdivr
xor
cmp
ds
repnz
jmp
enter
out
xchg
imul
ds
ret
xor
clc
addl
repnz
and
lret
stc
std
lock
lret
subl
loopne
out
aam
ds
cli
xor
vaddsubpd
fcmovnbe
jmp
call
aam
out
fcomp
into
cmp
icebp
into
sar
into
and
rol
flds
fimuls
aaa
das
ret
repnz
jmp
lock
testl
aad
leave
xchg
loop
lret
out
test
xor
int3
into
ret
into
cmp
lret
cmp
fsubr
in
neg
mov
int
rcl
test
out
aam
cmp
cmc
filds
xchg
out
shr
lret
int3
int
lret
int3
cmc
aad
cld
out
cmp
stc
fsqrt
jmp
clc
not
test
test
in
in
in
nop
loopne
out
jecxz
dec
fdivrp
fbstp
aas
movb
jmp
int3
repnz
xchg
shll
xor
repz
repnz
aad
in
in
neg
fcomip
loopne
out
aam
out
lock
xor
fidivs
repnz
ret
rcl
jmp
loope
or
test
lock
int3
lret
out
in
shr
out
lret
lret
flds
in
stc
jmp
int3
xchg
in
shr
ret
shl
cmp
fcomip
cmp
in
mul
cmc
call
in
lock
in
out
xlat
ds
cmp
ror
ffree
shl
cmc
mov
jmp
clc
in
int
test
cmc
aaa
cmp
cli
in
dec
int3
int3
fcom
test
rcr
cld
mov
jmp
call
jecxz
repz
call
hlt
in
loope
ror
stc
roll
test
iret
in
incb
test
repz
addb
cmc
mov
xchg
mov
ljmp
bnd
xor
in
lret
aad
loope
loope
xlat
xlat
ljmp
in
aaa
shl
icebp
xor
repz
cmpb
ret
mul
xchg
cmc
loop
jecxz
xchg
ljmp
fcomip
sti
sti
cmp
shl
repz
into
xor
test
cs
loop
stc
ror
in
ror
fcmovbe
in
xchg
in
lret
test
into
xchg
out
stc
repz
cmp
xor
ret
cmp
cld
dec
int3
jmp
shl
aam
jmp
sti
shr
fcom
icebp
loopne
neg
shl
lds
mov
fucom
xchg
xchg
shr
leave
xor
out
repz
jmp
rcl
out
and
cld
call
jecxz
mov
into
cmc
sub
lock
stc
cmc
leave
cmp
aam
shl
test
out
fsubp
in
out
enter
jmp
rol
fcmovu
cmp
faddp
out
adc
clc
addb
iret
xchg
fdivp
xchg
mov
xor
xor
sarl
neg
out
aas
in
jecxz
cmp
in
test
mov
jmp
nop
jmp
ret
sarb
out
jmp
out
shl
test
cmp
test
int3
lret
ljmp
shlb
into
int3
aad
call
into
ljmp
test
lret
icebp
jecxz
fadd
int
in
cmp
fdiv
ss
aas
loop
neg
in
and
fldlg2
xchg
mov
loopne
lock
cld
shl
loop
sti
rcl
sti
xor
ret
xchg
cmc
repz
xor
hlt
shr
xlat
sar
xlat
in
rcr
jmp
filds
mov
int3
cmp
out
shl
into
lock
jmp
fdivrs
repz
out
sti
stc
fcomi
mov
out
cld
loop
nop
faddp
lret
int3
xor
icebp
lock
lret
rcr
fidivrl
and
fsubr
out
fdivrp
xchg
loop
lret
ss
icebp
enter
imul
int3
ds
roll
lret
jmp
jmp
test
mov
jmp
into
les
rcr
fxch
enter
mov
mov
sub
add
xchg
repz
lret
repz
sar
rcl
shr
clc
loopne
cld
clc
test
in
mov
in
cmp
repnz
out
jmp
cmp
out
in
jmp
rcr
clc
xor
std
cld
cld
inc
xchg
dec
cmc
lock
call
xlat
repz
loope
addl
faddp
stc
ljmp
cld
rcl
loop
ljmp
out
out
rol
div
lock
std
test
test
lret
out
fcmove
repz
int3
rcr
cmc
fcomi
std
addb
std
lret
jmp
out
int
cs
aam
enter
shl
fcomp
loop
hlt
idiv
jmp
cld
mov
fucomi
mov
lret
test
lret
sar
sarl
sar
sbb
std
test
loopne
into
rcr
rcl
ftst
enter
repz
fcomp
std
aas
cmp
fildl
lret
mov
filds
lret
aaa
xor
icebp
lret
cmp
mul
in
in
call
fsubrp
repz
xchg
mov
out
jmp
shl
aam
icebp
in
iret
cli
fcomip
shl
ds
ret
call
xchg
or
ljmp
std
cmp
mul
cmp
into
repz
stc
aam
enter
sar
loop
ret
neg
aaa
cmp
ds
stc
fiaddl
iret
loop
sti
fcomip
out
xor
clc
fstp
aaa
sti
out
clc
fdivr
incb
fmulp
jecxz
in
xchg
icebp
loopne
call
shlb
enter
out
mov
ret
fiadds
repnz
shr
int3
fsincos
cmp
stc
out
fdiv
repz
ret
clc
into
fdiv
shl
jmp
ss
call
rcl
in
loopne
int
aas
jmp
fmuls
test
divb
cmc
out
jmp
int
pushl
aam
xbegin
into
fcoml
lock
call
lock
ret
out
in
or
in
aaa
in
lret
jmp
repnz
out
neg
call
f2xm1
cld
loope
stc
not
test
popl
iret
iret
shr
repnz
fidivrl
lock
aad
inc
jmp
leave
fmulp
out
cli
shr
aam
in
fnop
xor
icebp
int3
fucomp
cld
fdivr
loopne
clc
cld
test
mov
lret
in
out
das
enter
sarb
cmc
aas
test
fadds
lret
mov
jecxz
loope
mov
ret
idivl
in
stc
ds
neg
ret
bnd
call
jmp
int
xchg
loopne
lret
leave
lret
cmc
das
call
fcomi
sbb
rcl
addb
lret
jmp
enter
xlat
iret
repnz
cmp
hlt
test
repz
xor
out
test
fucomi
jmp
ret
in
in
fxch
cld
lock
addb
mov
repz
out
cmp
fcomi
fstpt
fidivrl
testl
leave
aad
out
mov
lock
xchg
call
into
fstpt
hlt
mul
fnstsw
enter
fnclex
loop
shl
in
fucomip
repz
shr
jmp
fadd
cmp
jecxz
jmp
mov
jecxz
fldz
ror
test
lret
idivl
shl
aas
ljmp
fadd
add
vpor
roll
xor
stc
shl
aas
cmp
adc
orb
jecxz
icebp
lret
aad
lret
sti
out
lret
aam
filds
loope
jmp
xchg
jmp
fsubp
lret
hlt
iret
xor
shl
out
sarl
call
fst
cmp
xlat
call
xor
rcr
into
sti
repz
fmul
hlt
and
repnz
cmp
in
mov
out
mov
out
in
out
stc
in
repz
lret
icebp
sar
sbb
fld
dec
lret
movl
in
out
repnz
cmp
cmp
call
out
roll
cli
jecxz
out
mov
jmp
xchg
xor
mov
mov
xor
jmp
enter
vpsubusb
sub
xor
push
das
jl
addb
jl
xor
lock
xor
aam
aam
cmp
hlt
fsubr
loope
shl
enter
or
cld
lret
ss
lret
fxch
clc
fstpt
lock
fcmovbe
rol
hlt
fimuls
fimull
int3
stc
in
lock
cmp
aam
in
fiaddl
fisttpll
xor
ror
xor
int
bnd
jecxz
out
icebp
div
neg
idiv
fimull
iret
loope
out
cmp
leave
test
shlb
not
ret
stc
fucomi
out
int3
fsubr
fcoms
out
aaa
iret
xor
rol
aad
cmp
ljmp
mov
cld
sti
clc
clc
stc
repz
das
div
in
loop
out
out
in
fidivrs
xlat
stc
lock
out
out
mov
out
call
enter
xor
jmp
in
lret
cmp
repnz
cmp
test
aad
xlat
leave
iret
ljmp
loope
repnz
fcomi
repnz
sar
std
ffree
cmp
fdivr
test
into
xor
mov
test
sub
call
sbb
aad
shr
in
jecxz
cmc
std
int3
divl
fadd
fst
fucomip
int3
sar
rcr
cmc
cld
loope
cmc
enter
enter
test
xor
out
iret
out
int3
icebp
cmp
loope
idiv
sar
std
jmp
fimuls
in
sub
fcomp
clc
lret
stc
adc
jecxz
div
fldl
xor
decl
leave
cmp
call
fmul
rcl
fcomi
test
fimuls
xchg
test
call
jmp
out
aad
out
ds
shr
in
les
shr
icebp
lock
test
jecxz
icebp
ss
int3
stc
cmp
loopne
fucomp
roll
lret
ffreep
or
in
xchg
xchg
lret
sub
ret
fstpt
xlat
into
cli
shl
out
out
std
idivb
mov
mov
xor
loopne
repz
in
loope
iret
loope
sar
testl
call
shrb
in
shl
enter
ljmp
in
rorb
mov
xchg
sar
out
ljmp
out
aas
aas
std
cmp
rcr
std
xchg
xchg
nop
cld
std
mov
xor
xor
ret
xor
jmp
jmp
ljmp
out
stc
fimull
cld
faddl
aaa
repnz
fnsave
leave
icebp
rolb
test
ret
hlt
fucomp
mov
xchg
ljmp
cmc
out
int
divl
aas
fcomp
addl
leave
fimull
xor
in
call
cmc
cmp
call
rol
mov
xchg
and
iret
leave
ret
out
xor
repz
stc
cmp
std
loope
in
fdivr
leave
sti
shl
rorl
shl
out
xor
hlt
ret
neg
ret
testb
mov
sub
std
xor
jmp
aas
jecxz
std
out
loopne
fcomp
hlt
addb
mov
adcl
jmp
cmpb
mov
xlat
or
fucompp
mov
aam
shll
repz
icebp
sti
in
cmp
rcl
cmp
stc
loopne
fldl
rorl
xor
into
icebp
call
ret
test
aad
repnz
lret
fimull
ret
stc
into
in
cmc
rcr
call
cmc
shl
ret
in
aam
loopne
lret
out
repnz
xlat
in
xor
ret
ret
test
fmuls
lret
call
shr
cmp
cmp
idiv
jecxz
fcmovne
fdivr
mov
mov
roll
xlat
cmp
int3
fdivrl
cmpb
ret
cmp
aam
jmp
shr
shr
lret
into
int
int3
cmp
int
xlat
rolb
sar
loop
fsub
loop
xor
aad
jmp
xor
rcr
rcl
lret
out
ret
repnz
xchg
mov
out
int3
xor
lret
mov
sub
add
mov
mov
mov
movzwl
add
mov
jmp
iret
int3
ror
fcmovu
frstor
movsl
je
mov
insl
xchg
xor
add
dec
int3
xor
lds
roll
xlat
jmp
std
out
int
xor
loope
ret
leave
aam
leave
loopne
out
fadd
add
mov
mov
call
leave
sarl
cli
cld
ret
cmp
hlt
cmp
loop
rol
leave
rcll
loop
out
clc
cmp
jmp
lret
cli
cli
repz
cmp
rol
ljmp
int3
in
loop
lret
int3
iret
enter
neg
fdivp
int
test
out
call
fmulp
int
cld
in
ffreep
in
xlat
out
ss
fdivr
test
test
cli
mov
fucomi
adcb
fucomi
cmp
ror
sti
sbb
fcom
repnz
fdivrp
sti
nop
fiaddl
icebp
jecxz
shl
sti
xor
call
stc
sarl
stc
fadd
cmc
xlat
ret
mov
call
ljmp
cmp
aaa
cmp
repz
rcl
stc
repnz
jmp
loopne
mov
loop
aaa
repnz
out
fnstsw
cld
idiv
sti
sbb
call
enter
lock
xor
out
out
xor
xor
lret
push
aas
mul
ret
cmp
cld
sar
sti
sbb
shrb
repz
xlat
fidivrl
in
rolb
leave
testb
in
repz
xor
cmp
faddl
div
div
int3
in
ror
or
int
xor
jmp
rcl
sar
fcmovnu
hlt
mov
in
leave
fcmove
cld
xor
out
enter
cmp
iret
cmp
sbb
xchg
pop
out
ljmp
out
dec
cld
repnz
ret
aas
xchg
cli
out
jmp
xchg
cmp
shr
out
das
out
out
ror
iret
cmp
cmc
sbb
loope
roll
test
in
icebp
int
rolb
xor
fcmovbe
lret
out
out
xor
ret
fcmovu
out
stc
jmp
lea
leave
aam
fcmovnbe
xor
call
cmp
xchg
sub
jmp
sbb
loop
call
jmp
ds
int3
ret
ret
ret
repz
fucomi
loopne
loopne
mov
aam
cmp
int
mul
in
into
in
enter
call
lret
jmp
loopne
ror
out
sar
fcmovne
shl
vcmpps
loop
lock
xchg
in
fucomip
sub
xor
out
call
cmp
mov
hlt
xlat
call
jmp
xchg
out
lret
icebp
sarl
cmp
lret
lret
lock
lock
fmulp
test
lret
shll
out
shr
rcl
hlt
fcos
repz
shl
in
in
incb
nop
and
jecxz
sub
in
into
into
frndint
call
ljmp
rolb
jmp
loop
mov
repz
xor
fucomp
aad
cmp
xchg
fucomip
hlt
fdivrp
loop
out
repz
loop
icebp
xor
out
loope
cmp
hlt
xlat
shl
in
aas
clc
int3
xchg
int
loope
ljmp
shl
jmp
cld
cmp
fdivrs
jecxz
sar
or
sti
rcr
shrb
icebp
aam
lret
shr
shll
leave
cli
cli
out
xlat
aad
icebp
cmp
call
mov
fsubr
cld
loop
cmp
xor
lret
in
ljmp
cmp
rol
test
leave
ljmp
ss
shl
stc
repnz
xor
iret
sbb
in
call
out
xor
shll
cmc
in
ror
jmp
sti
out
repnz
addb
test
mov
loop
xor
cmp
jmp
cmp
fdivp
cmp
incl
out
in
loope
cmp
cmp
cmp
leave
leave
testb
into
test
aam
cs
xor
sti
out
aaa
shl
ljmp
loop,pt
mov
int
fiadds
das
xor
ret
xor
int
cmp
stc
mov
mov
jmp
ret
int
xor
sub
jl
addb
jl
in
cmp
loop
lret
fimull
aam
xor
hlt
lret
shr
call
idiv
shr
ret
leave
or
in
mov
rcll
repz
aaa
fdivl
fdivrs
cli
cmp
shl
aam
fcomp
sti
in
test
iret
decl
fsubr
lret
fucomi
fidivrl
out
loopne
out
leave
cmp
sti
call
loopne
out
cs
cli
ror
fnstenv
std
cmp
rcr
sti
test
neg
call
out
into
xor
sti
in
cld
std
rcr
shl
addb
ret
fcmovbe
loope
test
rcll
int3
cmc
jmp
fsubrp
div
std
shl
loopne
hlt
shl
cld
rorl
in
ror
in
in
jmp
cmp
aad
roll
rolb
xchg
lock
xchg
xor
cmp
fcomp
leave
stc
aas
aaa
aam
xor
cmp
jecxz
aam
inc
sti
out
fsubp
std
mov
aam
aad
aad
fcomp
enter
loope
jecxz
fdivp
repnz
fucomi
int
out
cmp
xor
hlt
in
out
iret
ds
clc
in
ffree
loop
mov
in
mov
out
aas
loopne
cs
aad
cmp
in
loop
loopne
rolb
enter
int3
fimuls
lret
in
cmp
jmp
fbstp
rolb
and
in
aam
hlt
call
ljmp
cmp
ror
sub
mov
in
sub
sarl
out
loop
mov
cld
rcr
cmp
ds
repnz
mov
fdivr
out
nop
repnz
xchg
into
in
iret
clc
xor
vpsubsw
fcomi
int3
icebp
sar
xchg
faddp
rcr
int
sti
int3
sti
icebp
rolb
xor
xor
cmp
out
div
shr
stc
mov
lret
fsubr
sub
shll
shlb
jmp
int
jecxz
xchg
cmc
out
xor
stc
std
lret
aam
aam
loop
neg
fucom
into
hlt
cmp
cmp
aam
out
orb
shl
xchg
adc
hlt
sti
ss
lock
test
hlt
in
fcomi
clc
mov
xchg
lret
shl
aam
cmc
in
aad
rcl
xor
repz
ret
test
into
rolb
xchg
ror
hlt
icebp
int3
hlt
rcr
cmp
idivb
or
adc
int
les
fmull
int3
shl
aad
neg
cmpl
lock
idiv
int
out
in
int3
xchg
mov
aad
shl
cmp
cmp
lret
jmp
sti
cmp
stc
sbb
jmp
sbb
repnz
iret
repnz
sti
aaa
sbb
lock
test
std
repnz
out
lock
jmp
xor
call
aaa
fsubp
fsub
lock
idiv
fdivrp
out
xchg
xchg
out
iret
lret
rol
into
sarb
xlat
in
out
repz
test
stc
imul
jecxz
lret
and
in
aas
shlb
leave
ss
aaa
int3
sar
jmp
cmp
in
icebp
mov
hlt
lds
mov
out
leave
in
xor
loopne
into
sbb
jmp
loop
jecxz
icebp
shrb
jecxz
fsubr
aam
shl
std
cmp
idiv
in
add
fisttpll
les
xor
leave
cmp
int3
ret
int3
ss
lock
out
in
lret
out
iret
int
lea
loop
cmp
fidivs
sti
cli
add
mov
fcmove
cmp
rol
out
leave
shl
std
xlat
aad
xlat
cmc
fcomp
repz
aad
leave
fmulp
int
mov
and
xor
aad
rol
leave
fstp
int3
cmp
aad
mul
loopne
leave
loopne
xchg
ror
hlt
adc
loopne
jmp
cli
lret
or
int3
fstpt
cli
ljmp
nop
call
xor
in
enter
ss
cld
rolb
loopne
ljmp
int3
repz
ljmp
sarl
test
aas
cmp
fnstenv
lea
jmp
rcl
int3
iret
rol
shll
or
sub
addb
jl
test
sbb
test
hlt
xor
xor
iret
ljmp
test
test
cli
flds
mov
jmp
aad
xlat
in
xor
lret
fiaddl
ftst
mov
jmp
hlt
enter
fdivrp
iret
sub
hlt
in
div
enter
out
repz
lret
shl
jmp
rcl
stc
loop
stc
filds
sub
icebp
out
hlt
int3
rcr
fmul
xor
adc
fld
fstp
sti
ljmp
jmp
test
sar
fcmovnbe
xlat
clc
fcomi
cmp
fcmovnu
loop
xor
in
jmp
fdivp
aam
lret
aad
in
std
jmp
xor
jecxz
repz
in
lret
fstp
test
ljmp
shlb
cld
div
loop
frndint
jecxz
roll
fcmove
leave
sti
jmp
ror
ret
lock
xor
shr
fnstenv
std
jmp
xchg
mov
shl
repnz
fdivrs
cmp
cmp
cld
cli
repnz
cmp
sar
mov
in
orl
lock
jmp
cmc
shr
enter
loope
imul
loopne
sti
repnz
lret
cld
cld
fucomi
in
lock
xor
lret
call
loopne
in
loop
les
in
fcom
cli
fucom
loope
in
lock
shl
lret
fstp
cmp
cmc
clc
sbb
fdiv
sbb
enter
mov
lret
cmc
xor
enter
sub
cmc
clc
test
mov
orb
xor
lock
fucomi
shr
loop
sar
cmp
shl
ljmp
in
aad
ret
mov
fidivl
out
sar
loope
leave
lock
in
fildl
out
movl
jmp
out
std
cli
xlat
add
loopne
inc
and
shl
lret
adcb
ss
icebp
clc
in
cld
cmp
shl
mov
out
fdivrp
in
lret
in
jecxz
add
enter
loopne
cmp
out
jecxz
aas
jmp
ljmp
into
idivl
call
ror
lock
repz
orb
xlat
ss
fcmove
call
cli
faddl
xlat
jmp
cld
lret
out
mov
shlb
fucomp
fsubr
cmp
loope
fsub
stc
loopne
jmp
loop
rorb
fcomp
enter
shr
ret
shl
cld
sub
cld
fisttpl
xchg
shr
out
enter
cmp
fiadds
fisttpll
into
out
cld
cld
icebp
out
loopne
fucom
cmp
cmp
jecxz
cmp
mov
ret
fsubrp
int3
sbb
jmp
out
into
cli
test
repz
fsub
mul
shl
cld
jecxz
enter
in
faddl
aam
repnz
lock
fnsave
or
rcl
ffreep
ret
xchg
fsubr
xchg
aam
lret
cmp
aad
lock
in
aam
enter
in
fisttps
shl
das
call
aaa
out
sti
shl
in
in
repnz
ret
loopne
ds
in
test
xor
cmp
call
stc
rcl
xor
in
addl
icebp
ljmp
cmp
repz
cmp
sbb
jecxz
aad
hlt
lret
mov
repnz
out
xchg
int3
loopne
loop
fcmovbe
cld
ljmp
filds
fsubr
lret
std
test
mov
fcomp
lret
xor
in
std
shl
cld
mov
xlat
xchg
addb
xor
enter
int
sarl
repz
cmp
in
jmp
mov
rorl
xor
lret
ss
sarl
in
iret
adc
test
jmp
addb
sti
repz
hlt
rol
les
lret
leave
aam
testl
movzwl
cmp
jmp
lret
rcr
int
orb
add
lds
jl
addb
jl
mov
fxch
ljmp
cmp
repz
fstp
roll
cmp
in
test
clc
fucomi
in
sarl
xor
rcl
repnz
repnz
aad
in
ret
aaa
cmp
aam
aad
shr
mov
mov
fsub
leave
fcmovnu
sti
into
mul
leave
lds
loop
ljmp
stc
jecxz
shl
test
loopne
in
and
leave
lock
icebp
sti
cli
loopne
cmp
cmp
aas
sti
xlat
test
lret
in
loope
loop
in
sti
repnz
out
sbb
test
shl
xchg
fcmove
test
into
mov
test
shll
rcr
repnz
cld
cld
fcmovne
idiv
iret
jmp
and
ljmp
repz
repz
lret
cmp
push
cmp
test
hlt
jmp
in
cmc
int
cs
in
ljmp
aas
cld
xlat
loope
repnz
mov
in
lret
xchg
out
fxch
std
cmp
fnstsw
fsub
cmc
out
xrelease
icebp
jmp
divl
in
xor
lret
repz
rcl
in
ds
xchg
stc
jmp
test
jmp
clc
call
xor
xor
xor
clc
cmp
aas
fdivrp
lret
addb
fimuls
int3
xor
out
iret
xor
cmp
sti
sar
cmp
jmp
icebp
shl
test
ret
fucomi
enter
ror
fsubrp
test
hlt
inc
mov
test
jmp
xlat
xor
jmp
shl
jecxz
cld
mov
ljmp
sar
rcll
fcomi
clc
cmp
aam
aam
icebp
aam
rol
xlat
xor
jecxz
mov
not
enter
stc
lret
aam
repz
shl
or
fucomi
mov
in
ret
ss
sti
cld
div
sar
in
ret
sar
in
fiaddl
mov
mov
sub
sub
lret
fxch
ss
roll
std
jmp
clc
cli
fisttpll
loop
lock
hlt
cmp
in
in
cld
cli
loop
idivl
repnz
test
cmp
loopne
in
roll
in
xor
out
repnz
out
ljmp
fdivp
or
loope
call
xchg
xor
repnz
out
stc
sti
sti
rcl
rol
repnz
rol
in
stc
loope
out
fsubrp
test
icebp
into
jecxz
iret
cmp
aas
lret
div
aas
test
in
ffreep
or
in
idiv
stc
loop
enter
sub
int3
hlt
in
int
jmp
cld
rol
out
cmp
cmp
movb
xchg
repz
stc
jmp
rcr
out
std
out
cmp
cmp
cmp
leave
repz
stc
out
loop
loope
out
ds
xor
out
ds
cld
repz
mul
hlt
ljmp
loopne
enter
xor
ljmp
in
icebp
cli
aas
ret
rorl
fdiv
enter
out
xor
ljmp
neg
iret
add
ret
loope
jecxz
hlt
cld
clc
mov
ds
xor
cmp
rcl
cld
shr
out
fimuls
in
iret
std
into
mov
lret
test
shll
xor
repnz
clc
shl
fstp
lock
jmp
dec
xchg
mov
ret
xchg
jecxz
shl
aaa
lret
aam
cmp
xor
ds
jmp
jmp
in
test
fmul
leave
call
in
out
rcr
lret
fnstsw
hlt
div
sbb
call
test
repz
aad
in
lret
xor
cld
leave
iret
out
cmp
out
std
fmull
icebp
lds
out
int3
cmc
clc
out
sub
int3
repz
stc
repnz
aad
std
mov
out
orl
lret
icebp
shl
test
call
fcomip
aam
ljmp
xchg
in
ljmp
sti
cld
sar
rol
out
add
loop
mov
in
mov
orl
push
or
add
sub
jmp
rcl
rcr
fcmovbe
xlat
ja
inc
mov
fadd
jl
addb
jl
jmp
in
in
stc
cld
jmp
loop
loopne
aas
cld
hlt
orl
cld
iret
hlt
fcomip
repz
xlat
div
shlb
out
stc
cmp
ret
xlat
cmc
out
out
inc
pop
xchg
test
xor
hlt
fcmove
ds
not
test
test
jmp
jmp
ret
lret
lock
ss
lret
enter
test
mul
stc
test
jmp
mov
in
aad
hlt
clc
cs
ljmp
imul
enter
mov
icebp
iret
or
repnz
xor
xlat
rcl
cmp
rcl
les
mov
in
in
testb
repnz
out
xor
call
lock
idiv
test
mov
lret
mov
test
mov
in
rol
shl
out
aam
fcmovbe
cmp
fxch
out
shr
out
lret
int3
test
iret
lret
lret
jmp
int3
cmc
sti
enter
cmp
movb
into
xchg
jmp
mul
ljmp
cli
shl
jmp
repnz
mov
call
sti
rorl
lock
std
aaa
jmp
out
add
cld
in
addl
leave
nop
out
in
call
cli
fmul
lret
repz
shl
out
mov
std
repnz
iret
cs
in
fcmovne
in
loopne
idiv
out
cmp
jmp
lea
xchg
test
loop
ret
out
iret
xor
hlt
xor
rcl
shl
sar
loope
int3
icebp
out
xchg
out
out
jmp
cmp
hlt
and
addb
cld
loop
int
int
and
das
xor
hlt
xor
in
out
out
cmp
clc
ret
mov
lret
fldl
xchg
add
xor
les
idivl
clc
shl
flds
clc
mov
xchg
xchg
sub
icebp
ror
int3
in
iret
out
ljmp
hlt
jecxz
enter
loopne
xchg
aad
leave
ljmp
rcr
aam
lock
repnz
hlt
out
out
out
xchg
xchg
nop
rcll
jecxz
fnstsw
cmp
aaa
inc
hlt
testb
icebp
shl
shr
icebp
rcl
aam
fsubrp
aas
ljmp
loop
cli
les
mov
cld
xchg
xor
icebp
stc
aam
sti
cli
sti
sti
enter
repnz
xchg
call
in
lret
std
sub
out
loope
out
clc
lret
cmp
cli
sub
clc
cmp
mov
cld
jecxz
rcr
sti
loop
icebp
in
clc
loop
in
cmp
cli
hlt
aaa
not
ret
clc
repz
mov
mov
ret
lock
iret
cld
into
aad
out
icebp
sub
repz
cmp
in
fnop
jmp
in
mov
lock
orb
cmp
ss
in
cld
ret
cmpb
mov
leave
clc
in
xchg
test
in
test
loopne
in
iret
icebp
fidivl
cmp
cmc
cmp
loop
out
les
mov
cmp
jmp
std
in
fdivrs
hlt
repz
mov
cmc
in
ljmp
jecxz
ss
in
ss
shl
into
cmc
cmp
rcr
shl
cli
in
div
in
call
xchg
faddl
idiv
cli
ljmp
stc
xchg
fcmovnb
movb
jmp
shrb
jmp
cmp
aam
xor
cmp
sarl
rol
leave
lds
mov
jmp
cld
lret
xor
loopne
sub
fdivr
cmc
in
cmc
rolb
ret
cli
enter
popl
out
ljmp
ret
and
call
cmp
faddp
xchg
fcmovbe
vpand
lock
ds
out
hlt
cli
leave
add
xchg
loop
fnstenv
cmc
clc
xor
dec
cmp
rcl
in
clc
fsub
in
fucom
and
int3
xor
out
fcomip
repz
neg
repz
fdiv
in
fcmovb
loopne
lret
int3
adc
shl
in
cmp
sub
mov
jmp
jmp
rcl
rol
fstp
shlb
imul
jl
add
repnz
lret
sar
shl
test
shr
incb
call
rol
jmp
rcr
call
sar
fdivr
cmpb
mov
xchg
decl
xor
ljmp
ss
ret
hlt
sub
ljmp
aam
fldcw
ljmp
jmp
ret
clc
fld
test
cld
jmp
fiaddl
ds
int
std
cmp
icebp
std
cmp
test
cmp
sti
cmpl
test
fsubr
xlat
enter
cld
repnz
cmpb
aad
xlat
mov
in
ljmp
mov
iret
xor
div
test
sti
int
repz
test
jmp
out
in
loope
jmp
cmp
iret
fdivrl
in
test
cli
addl
hlt
cld
idiv
fsubp
jmp
iret
lock
sar
lock
lock
xchg
div
fimull
xor
lret
xor
loop
cmp
bnd
fsubr
in
lret
std
in
enter
iret
mov
icebp
loop
shl
xor
xor
cmp
loope
roll
and
loopne
dec
loop
in
xchg
enter
clc
in
into
cmp
icebp
cld
jmp
out
out
ret
repz
ret
mov
repz
mov
lds
not
lret
cmp
shll
sbb
mov
fisttps
icebp
rcl
xor
test
call
cmp
mul
enter
fdivrp
mov
neg
sub
cmp
leave
into
rol
or
into
in
xlat
mov
mov
xchg
test
fldl
enter
not
leave
rcl
lock
test
inc
hlt
enter
int
incb
aam
rol
aaa
cmc
fptan
aad
out
sti
cli
fdivr
rcr
add
test
cmp
clc
xlat
inc
mov
fbstp
out
xor
out
aaa
neg
repz
aas
sbb
loop
call
fchs
in
ficoms
sub
ljmp
in
ljmp
loop
adc
shr
ljmp
in
int3
clc
bnd
cmp
repz
mov
rorb
leave
hlt
fcom
ljmp
sti
cli
filds
loopne
addb
fcmovbe
loop
ljmp
cld
aas
rcr
cli
and
cmp
mov
and
int3
hlt
cmp
cmp
cmp
ljmp
ret
stc
rol
ret
sti
dec
loop
lock
xchg
shl
fcmovne
shl
aaa
icebp
int3
repz
lret
xlat
xchg
mov
cli
mov
shl
mov
out
loope
ret
xor
shr
in
loope
sub
ret
test
jmp
test
xchg
shr
iret
icebp
aad
aaa
hlt
ret
call
sar
mov
ljmp
xchg
sub
xor
ret
xlat
out
repz
cmp
into
out
fcmovnbe
cli
out
and
jecxz
lret
lret
iret
rol
cmp
out
rcl
cmp
in
xlat
sti
ret
sti
hlt
in
fstp
mov
std
rolb
aaa
cmc
stc
rcl
icebp
aam
rcl
repnz
ds
fsubp
lret
into
out
loop
out
hlt
in
aam
fcomp
leave
out
sti
stc
lock
int
test
cmp
enter
stc
int3
rcll
xor
hlt
fyl2xp1
out
lock
int
fadd
shl
loop
fildl
lret
sti
repnz
lret
fdivr
fidivl
cmp
aas
clc
sti
out
idivl
sbb
sti
aad
leave
cli
into
fucomip
mov
aam
std
icebp
call
out
rcr
sar
fdivrp
xchg
rorb
into
test
shl
enter
in
jmp
repnz
test
jmp
enter
xchg
out
aam
icebp
shlb
ret
in
in
stc
cld
mov
adc
aam
out
ss
icebp
aaa
cmp
icebp
test
clc
hlt
call
in
std
int
nop
xchg
lock
aam
sarl
sti
cmp
rcl
xor
lea
mov
jmp
mov
lret
fnstenv
pop
in
shr
iret
jl
addb
jl
aam
cld
fcmovnu
vpaddd
clc
in
test
sar
lret
rcl
lret
lret
std
aaa
xor
aas
ds
out
aam
out
leave
int3
nop
xchg
mov
ret
neg
aaa
aam
lret
iret
loop
rcl
mov
cli
std
fcmovnu
cmp
test
out
cmp
repz
cmp
rcl
sar
xchg
std
and
out
into
jmp
int
icebp
ret
div
repz
stc
in
cmp
hlt
lock
lret
call
xchg
jmp
not
ljmp
cmp
or
repnz
std
loope
out
in
loopne
in
fucomp
into
loopne
aam
out
ret
fst
cmp
test
fcos
int
into
in
xchg
in
test
aam
imul
clc
cmc
cmp
repz
shr
icebp
ds
test
clc
out
loopne
in
aam
out
ljmp
loopne
int3
addl
fsubrp
mov
stc
leave
icebp
in
fdivp
lret
shl
xor
aam
int
in
cmp
div
ffreep
std
lret
ljmp
xchg
out
in
shr
les
out
repnz
xlat
ss
cmc
cmp
sar
jecxz
filds
mov
std
xchg
hlt
ss
iret
cmp
stc
stc
lock
in
repnz
fmul
loop
fisttps
mov
xor
ftst
aaa
aaa
repz
out
cmp
test
repz
ret
sti
icebp
fcomi
out
icebp
out
repz
repnz
stc
call
sarb
fmulp
xchg
xchg
rolb
enter
into
repnz
cmp
ret
stc
sbb
iret
out
xchg
icebp
imul
xor
xor
int
fnstsw
clc
or
sar
clc
in
jmp
in
out
mov
icebp
in
hlt
call
repz
cmp
jecxz
loop
cmp
xchg
call
shrb
ljmp
jmp
sarl
ret
ffree
aam
jecxz
mov
lret
fildl
lret
sub
enter
cmc
imul
int3
aad
aas
fcmovbe
in
jmp
in
mov
aad
icebp
into
xor
sar
enter
cmp
rolb
call
in
out
call
sub
rcl
repz
shl
repz
clc
xlat
mov
loopne
test
fcomp
cmp
adc
test
mov
addb
ss
lret
fmul
into
cmp
loop
hlt
roll
aad
lds
xchg
lea
jecxz
xor
call
in
ret
in
xchg
shr
in
fiaddl
xchg
int
cmc
rcl
test
in
aad
ss
repz
sub
test
enter
mov
loope
shl
repz
fscale
fsubp
ljmp
call
jmp
nop
lret
rcr
rcl
jmp
cmc
aaa
xor
fdivr
shr
out
out
leave
ds
cmp
fcomp
call
ljmp
fdivr
cmp
xlat
xbegin
test
orl
loope
lret
call
cmp
fcmovne
cmp
adc
ret
int
loop
sub
hlt
jmp
out
hlt
enter
loope
ljmp
out
out
out
in
xor
repz
fidivrs
idivl
cld
stc
rcl
fdivr
ret
stc
int3
leave
xchg
out
divl
cs
sti
lret
shll
fiaddl
loopne
shr
fsubp
in
ror
jmp
int
jmp
fldcw
clc
enter
ffree
loop
bnd
fcmovb
aam
test
into
fucomip
test
aam
stc
cs
aam
cmp
push
cld
cmc
xlat
xchg
stc
jecxz
sbb
lret
into
ljmp
int
xor
hlt
neg
ret
cli
lret
jmp
lret
aam
ljmp
add
ds
int3
enter
iret
cld
out
lret
fnstenv
fnstenv
fistpll
iret
cmp
repz
inc
hlt
cmp
je
mov
jmp
ror
lret
int
loopne
and
outsb
sarl
add
enter
or
int3
fnstsw
mov
icebp
sub
int3
in
lret
sar
lret
fcmovbe
int3
hlt
jmp
not
jmp
fcomip
in
icebp
int
cmp
int3
aad
xor
enter
cmp
xlat
out
inc
cmc
decl
xchg
xchg
out
aad
ret
jmp
aaa
iret
fucomip
ret
out
filds
cmp
out
aaa
call
aad
xor
fcom
sarb
loop
jmp
out
in
xchg
shr
shr
xor
cld
lret
xor
fsub
ds
sti
in
in
orl
cmc
shr
enter
in
cmpb
neg
cld
mov
test
mov
mov
in
out
sarl
int3
aad
rcr
xor
xlat
shl
out
out
mov
lret
into
shlb
fnstsw
aad
repnz
sub
fcmovnb
cli
mov
call
fiaddl
xor
cmp
clc
sar
in
xchg
not
leave
fsubrp
int3
sti
fdiv
repz
leave
lret
loop
sti
in
cli
iret
in
ds
out
rcr
cli
lds
cld
loope
rol
lret
icebp
lret
sbb
clc
fdivr
in
mov
in
sti
xchg
fld
in
sub
out
repnz
test
out
hlt
rol
repnz
orl
iret
out
test
int3
xor
cmp
out
fcom
rcr
cmp
stc
lret
xlat
lds
repz
lret
jecxz
xlat
leave
stc
ror
aas
in
ljmp
aad
cmc
in
and
ret
fidivs
cmc
fdiv
stc
int3
out
loopne
loope
xchg
ror
loope
mov
mov
decl
fdivs
leave
cmp
aam
fstp
shl
fmul
lds
int3
in
loop
test
repz
les
repnz
cld
in
stc
loop
aad
leave
jecxz
call
jmp
cld
in
fsubr
lret
ljmp
filds
lock
fisttpll
ret
cmc
out
les
std
stc
in
rolb
inc
addb
test
in
call
in
sub
xor
out
aaa
ss
fscale
fsub
sbb
cld
ljmp
fsubr
iret
sub
rol
cmp
aad
out
cmp
fninit
cmp
fmulp
ret
out
neg
fstl
xor
xor
imul
fdivr
stc
repz
xchg
fdivrp
test
enter
fsubr
cld
lock
ljmp
fidivrl
fninit
test
repnz
mov
int3
mov
in
sub
lret
repnz
cli
out
stc
cmp
test
fsub
in
lret
shl
ljmp
fxch
out
sti
int3
fcmovne
shl
filds
mov
std
mov
test
mov
loop
cs
ret
cli
icebp
int
ss
out
std
in
addb
xchg
in
in
cmc
in
call
hlt
shl
aam
lret
icebp
cmp
leave
fldl
int3
repz
lock
shr
fnstcw
xor
in
shl
idivb
loopne
std
xor
std
out
nop
in
xlat
ds
ret
in
leave
leave
jmp
out
cld
fnop
rol
roll
xchg
loope
shrb
in
out
in
lret
cmp
shl
bnd
in
mov
lds
mov
mov
aam
sub
call
cmp
in
out
xlat
out
mov
loopne
xchg
shl
ror
xor
enter
ds
aad
rcr
mov
in
cld
fldln2
addb
jmp
ret
cli
out
xor
fcmovu
repnz
repnz
mov
sub
ror
leave
out
icebp
icebp
enter
jmp
vcvtpd2dq
ds
aad
jmp
adcl
int3
enter
cmp
xlat
hlt
into
xor
ret
aad
fucom
inc
lret
in
rcl
in
jmp
sar
in
fst
cmp
adc
mov
test
add
xor
add
jmp
ret
lret
enter
dec
dec
data16
jl
addb
jl
int
xchg
dec
in
enter
clc
icebp
cld
push
lret
in
fnstcw
cmc
add
sub
out
lret
mov
loope
repnz
out
xor
aas
imul
fcomip
hlt
fsub
add
rcr
nop
repnz
icebp
lock
std
repz
aam
fnstsw
shr
test
cmp
leave
cmp
fsubp
mov
lock
lock
lret
fst
xlat
cmp
fcmovnu
hlt
jmp
mov
mov
sti
and
loop,pt
out
cli
cmp
xor
out
push
in
roll
std
test
repz
out
iret
call
sar
fcomp
shl
cmp
call
fcomp
mov
jecxz
les
rcr
enter
sarl
rol
fsub
in
rcl
hlt
cmp
lret
mov
in
loope
cmc
stc
in
fdivs
fsub
aaa
call
cmp
mov
loope
xchg
leave
ret
icebp
repnz
int
fstp
test
aas
fisttpl
lret
mov
sti
xchg
xchg
loopne
int3
fdivr
hlt
cmc
out
into
cmc
shr
fst
sbb
cmp
xlat
cmp
cli
jecxz
xchg
std
in
ror
loopne
iret
aaa
out
ljmp
fdiv
jecxz
jmp
xchg
out
out
ljmp
cmp
cld
aas
rcr
icebp
icebp
ret
hlt
repnz
jmp
test
xlat
in
jmp
leave
out
cmp
faddl
rol
mov
mov
movb
stc
fcom
das
idivl
ds
enter
xlat
in
cli
sti
call
xchg
loop
addl
clc
out
fdiv
cmc
aam
repz
fcmovne
cmp
fdivr
ljmp
in
loope
leave
sarb
int3
cmp
rcl
fistpll
xlat
test
repnz
xchg
in
clc
out
repz
xchg
shl
out
xor
cli
into
int3
iret
cmp
int3
icebp
icebp
fstp
lock
jecxz
fdivrp
les
int
int3
out
out
xlat
cli
out
xlat
fld
fsub
icebp
lock
in
adc
loope
leave
jecxz
jmp
fnstenv
out
mov
clc
xlat
fnstcw
ds
loopne
xchg
out
fdivr
sar
iret
iret
repz
lock
fnsave
in
fcomip
shl
sub
sbb
fiadds
aas
xor
into
xlat
stc
cmp
loopne
out
enter
out
iret
in
xor
jmp
cmp
rcl
stc
ret
aam
xchg
adcl
aam
int3
ss
sar
cmc
fsubp
repnz
jecxz
enter
sbb
mov
cli
int3
repz
ljmp
xor
sti
sti
rcl
cmp
test
test
stc
in
mov
cmc
shl
int3
out
int
shl
cld
lret
and
cmp
mov
loopne
int3
xchg
ljmp
into
in
loop
hlt
ljmp
cmp
ret
ljmp
mov
aam
loop
out
clc
sti
cmc
cld
repz
ret
xlat
ds
clc
int
mov
call
loope
ret
shlb
in
loopne
jecxz
int
ds
loopne
cli
movb
iret
xchg
into
mov
ror
fldz
fdivrl
sar
cmp
hlt
and
cmc
in
fld
out
shr
icebp
not
loop
ljmp
ss
xlat
movl
fsubr
cmc
aaa
call
xor
clc
fucomip
cmp
addl
mov
std
in
std
or
aam
clc
shr
aam
call
cmp
cmc
out
in
mov
out
mov
stc
cmp
iret
leave
iret
cmp
hlt
xor
fucom
mov
clc
call
mov
int3
xchg
xor
stc
fidivrl
cmp
repnz
adc
std
hlt
shl
movl
in
loop
int
rcr
cmp
ret
cmp
clc
hlt
roll
fucomip
in
sbb
xlat
aam
cmp
aad
cmp
out
int3
ds
into
clc
ret
cld
lret
fldz
lock
mov
jmp
ret
aad
lret
enter
test
fidivrl
add
icebp
out
jmp
cmp
rol
repnz
in
sbb
ljmp
mov
mov
out
aam
enter
out
inc
sti
fistpll
in
stc
xchg
mov
enter
vpslld
ljmp
test
aas
fldl
pause
aad
xlat
xor
sar
aad
shl
repz
shl
in
in
jmp
std
fildl
cli
xor
repnz
cmp
aad
repnz
cld
aas
aas
jmp
lret
test
shl
xor
cmp
out
sub
xor
jecxz
cli
iret
out
leave
fisttpll
cmc
int3
in
aad
cmp
cmp
mul
lds
in
loop
repnz
int
fyl2xp1
fsub
repz
clc
loop
cmp
cld
orb
out
icebp
lock
ds
hlt
xor
aam
lret
out
aad
rcr
shl
ljmp
fmul
xchg
inc
ret
shrb
in
rcl
lret
loopne
aam
fiaddl
leave
lea
fsub
into
repnz
ret
int3
aam
aam
lock
flds
testl
fcoml
lock
fsub
sarb
jmp
xchg
ret
testb
lret
in
repnz
in
ljmp
clc
jmp
shl
loopne
shr
xchg
vcvtdq2pd
call
ret
cmp
repnz
fld
addb
jmp
call
shr
test
shl
idiv
sar
out
xchg
lret
leave
std
mov
shr
into
loopne
jecxz
ret
iret
push
cmp
cmp
out
iret
into
call
fmuls
mov
xor
in
lret
lret
repz
xchg
mul
sar
fcomi
int3
mov
loop
sti
jmp
fnstsw
loope
repz
clc
enter
ds
loop
orb
xor
hlt
fistpll
out
into
neg
jecxz
lock
fmuls
in
cld
out
lret
in
int
xlat
iret
sti
pushl
fcomip
rol
sti
shl
sbb
cmp
mov
out
into
call
aam
ljmp
leave
test
sar
cld
xchg
cli
neg
xor
xor
icebp
lret
repnz
stc
aam
aad
out
fdivr
xor
repz
sub
cmc
call
aam
lret
sub
cmp
in
jmp
std
lret
lret
cmp
out
in
out
fsub
jmp
ss
rcl
cld
enter
fsqrt
addl
aaa
into
xor
cmp
fsubrp
out
cmp
cmp
xor
cli
mov
mov
roll
ljmp
fdiv
fucomp
shl
out
call
loop
jmp
into
icebp
call
into
xor
sub
xor
aad
ds
shl
into
fisttps
fcoml
sbb
div
fcmovnu
lret
cmp
ret
out
out
fadd
mov
fmuls
in
icebp
xor
ljmp
cmp
aam
loope
xlat
cmp
lret
jmp
shr
xlat
in
cmc
cs
jmp
ljmp
cli
jmp
mov
mov
mov
xor
leave
ljmp
lret
ret
ret
out
mul
call
jecxz
shr
int3
in
lret
hlt
lock
xlat
icebp
loopne
cmp
lret
loop
jecxz
nop
mov
xchg
out
jmp
fcomip
lock
lret
ret
aad
loope
and
fsub
test
popl
xor
clc
ds
in
aam
xlat
in
jecxz
test
loope
mov
mov
iret
ror
clc
aaa
out
fcmovu
cmp
xlat
fnstenv
out
in
loope
loopne
int3
and
call
aam
ret
fidivrl
cmp
sti
into
cmp
out
cmc
shr
mov
ror
shr
repnz
mov
xor
add
jmp
rol
rcr
jbe
mov
xor
and
jl
add
xor
hlt
call
cmp
sti
sti
fdivrp
jmp
fists
sar
enter
repnz
int
in
aas
cmp
leave
clc
std
fucomp
in
xchg
shl
jecxz
fsqrt
aaa
int3
xlat
aaa
jmp
jecxz
xlat
xchg
fdivr
repnz
fucomi
test
in
xlat
leave
shr
lret
loop
ret
aad
ds
cli
xlat
mov
in
jmp
xor
cli
ss
rcl
hlt
fdiv
fcmovnu
enter
mov
leave
lock
in
hlt
aad
cmp
repnz
loop
roll
out
out
xchg
jecxz
jmp
fcom
jmp
cmc
cmp
loopne
stc
loope
enter
fcmovu
xor
into
cs
lret
jmp
ljmp
add
fdivr
jmp
xchg
sti
fmull
sar
fdiv
cld
aam
repz
in
fildl
test
fcomip
jmp
out
xor
out
repnz
loope
out
cmp
int3
out
jecxz
cmp
out
test
fst
in
fnstenv
lret
repz
iret
cmc
lock
ljmp
jmp
cmc
loope
rcl
xlat
divl
aam
sti
xor
loope
out
out
idiv
loop
nop
rcl
xchg
xor
ret
xor
icebp
fcmovu
out
int
call
in
ret
aas
sbb
out
leave
adcb
fcmovne
repz
fsubr
fmulp
in
fdivl
out
cmp
cld
in
in
lret
lret
aam
xor
xor
int3
out
repz
fld
test
ljmp
out
sub
in
xor
int
faddp
cmp
shr
out
call
adcb
xlat
fld
cmp
lret
int
shr
in
aas
repnz
aas
mov
fstl
cld
in
aad
int
shr
int
out
fdivl
xor
cmp
xchg
cld
cli
enter
mov
in
enter
aas
lret
int
clc
loop
rcr
leave
mov
decl
xchg
shr
jecxz
xlat
xor
sti
fdiv
clc
ds
cmp
test
flds
out
std
iret
shr
enter
neg
loope
out
repz
int
xlat
cld
out
repz
loop
fcmovbe
mov
orl
iret
mov
in
shr
repz
int
int3
repnz
call
int
lds
fmul
hlt
leave
aaa
jmp
shl
ffree
aad
loope
frstpm(287
flds
das
loope
xor
fcmovnbe
iret
ss
cmp
lret
jecxz
loop
loope
loope
cld
clc
incb
in
loopne
mov
icebp
enter
rol
mov
fdivr
fcmovu
jecxz
repnz
fdivp
cs
out
icebp
aaa
cli
shl
in
fst
ds
fld1
xor
out
sub
jmp
cs
call
call
loopne
mov
in
orl
aad
sti
cmp
sarb
div
sar
xchg
faddl
clc
fxch
lret
inc
shll
fld
fdivr
ss
in
in
out
stc
aad
xlat
out
loopne
ror
nop
in
call
enter
xor
fnstsw
clc
clc
fadd
hlt
shr
cmc
div
fucomi
addb
stc
out
xor
sarl
fcomp
faddl
cmp
test
sbb
in
in
xor
icebp
cmp
sub
sti
xlat
out
cld
lret
rcl
rcr
repz
cmc
neg
in
in
out
loopne
test
rcr
cld
aas
neg
ljmp
neg
fdivr
jmp
fsub
mov
in
xlat
test
aam
idivb
ljmp
out
jmp
in
loop
pop
icebp
fmulp
call
xor
repz
int
in
test
mul
cli
fdivr
mov
lret
repnz
enter
int3
clc
shl
repz
fldln2
std
cmp
push
ret
stc
or
test
in
jmp
xor
xor
cmp
je
mov
mov
mov
mov
lea
add
jmp
mov
fcmovnu
jnp
clc
mov
int
addb
jl
addb
jl
out
in
repz
out
xlat
ret
std
jmp
fiaddl
xchg
lret
xor
into
loop
divb
repnz
sarl
int
dec
xchg
cli
fcomp
movb
repnz
in
loope
xor
in
int3
cmc
fst
repnz
cmc
sti
rorl
xlat
cli
sti
repz
repnz
cmc
rcr
icebp
repz
cmp
stc
cmp
iret
stc
cld
in
xchg
stc
sti
ds
std
repz
mov
lock
int3
lret
in
in
stc
stc
leave
loopne
clc
cli
in
in
xchg
loop
xchg
aam
sar
cmp
sarl
idiv
sbb
repnz
test
movb
fucomip
shl
out
into
stc
sbb
cmp
icebp
xchg
sti
icebp
into
in
fnstenv
rcr
repz
int3
test
ret
test
addl
leave
xor
out
int
jmp
rcl
ret
ret
mov
hlt
call
int
in
cs
lret
xor
sti
repz
aad
in
loop
fucomi
fucom
std
mov
into
stc
divl
stc
into
cmp
clc
aaa
enter
cld
iret
repnz
shr
fisttpl
xchg
out
rcr
in
aaa
into
sti
aam
lret
fcomip
ret
loopne
aam
rorb
mov
nop
repnz
rcl
out
aam
int
out
xor
cmp
jecxz
cmpb
fcmovnb
jmp
cli
out
fisttpll
cs
xor
std
test
and
sar
shl
lret
fmul
loop
mov
mov
cmc
icebp
xor
shrl
pushl
lock
in
repz
clc
into
test
leave
test
iret
in
in
cld
in
out
out
out
lret
incl
leave
mov
cmp
neg
int3
int3
lret
icebp
shl
jmp
fnstcw
icebp
or
cmp
mov
ret
into
fmul
shl
fsubr
sub
cmc
enter
into
icebp
out
cli
stc
loop
loop
aad
test
xchg
sub
out
out
fld1
out
jmp
leave
addb
call
fld
cld
out
sbb
roll
out
ss
ss
fdivrs
cmp
ds
fsubr
out
neg
jecxz
test
out
icebp
xor
lret
sar
xor
into
in
xchg
testb
lock
orb
ss
icebp
out
fildl
aad
or
or
icebp
xchg
jmp
int3
jmp
lret
repnz
cmpb
clc
mov
stc
test
fiaddl
xchg
repz
clc
ljmp
repz
xchg
leave
int
cld
ljmp
leave
cmp
adc
fcmovb
jmp
out
xchg
xchg
nop
in
fildll
int3
xor
in
cmp
fiadds
sti
leave
stc
fadd
out
cli
enter
loope
out
jmp
iret
cli
in
ss
xor
aad
lret
push
clc
into
lret
xchg
rcl
neg
sti
rcl
adc
iret
std
xlat
cmp
test
out
lds
hlt
shlb
fmul
cld
fxch
neg
cmp
rcl
stc
mov
aad
xchg
xchg
add
lock
iret
aad
cmp
rcl
int3
cmp
std
rcl
xchg
hlt
test
or
shll
rcl
aad
in
les
jmp
cli
repz
test
mov
int3
call
sub
sub
xlat
fsubr
leave
aam
ss
repz
add
test
fadds
bnd
fucomi
enter
xor
lret
lock
ds
fsubr
ljmp
out
icebp
shll
call
sbb
cmc
out
cmp
out
test
lret
int3
shr
int
rcr
in
cmp
std
cmp
in
cld
cmp
int
ds
call
jmp
out
cld
xchg
xchg
loope
xor
ret
int3
aam
cmp
lret
enter
ljmp
rcr
loope
mov
xchg
test
repz
out
enter
cmc
cli
rcr
fcmovu
mov
jmp
int
xlat
int3
int
cmc
or
negb
call
jl
jecxz
std
rol
lret
in
in
ficoms
into
cs
in
jmp
and
out
aad
ret
test
aam
sar
lret
in
jecxz
ror
xor
xor
loope
cld
cli
xor
sti
mov
test
lret
int3
aam
in
xor
hlt
repnz
loope
roll
xchg
loope
in
cli
int3
in
out
xor
ror
sar
xor
in
cmp
ret
ds
in
aad
lock
in
clc
test
int
dec
mov
aaa
in
not
stc
sti
inc
sti
cmc
adc
test
orl
hlt
das
aam
in
call
enter
sbb
std
fdivrp
faddp
addb
xor
std
repnz
cld
roll
cld
sar
xchg
jmp
fdivr
lock
iret
bnd
rol
sub
cli
jmp
iret
xlat
neg
iret
into
mov
sbb
ror
int3
enter
stc
jmp
ror
rcl
cmp
xlat
enter
addl
in
in
jmp
mov
iret
out
cmp
fucomp
out
ds
cmp
enter
mov
int3
cld
test
aaa
xor
leave
enter
cmc
cmp
ret
xlat
ss
cli
rol
test
cli
mov
addb
stc
jmp
in
call
xor
fst
rcl
jmp
int
xchg
lret
test
call
cs
inc
aas
hlt
aam
std
sub
out
sar
cmp
mov
fsub
filds
ror
leave
aaa
lock
pushl
cmp
rolb
ret
in
hlt
cli
mov
sti
into
adcb
sti
icebp
cmp
lret
rol
rcl
stc
ljmp
loope
jmp
aad
cmc
out
sti
fnsave
out
cli
flds
cli
testl
xchg
loop,pt
xlat
cmp
cmp
aam
repnz
test
addb
mov
dec
sarl
rol
cmp
std
cmc
fucomi
cmp
clc
in
cmp
fsubr
and
ds
xchg
jmp
repnz
into
fucomi
ljmp
sti
cmp
fsub
mov
mov
fucomip
jecxz
into
in
lds
call
cmp
sti
repnz
hlt
out
jmp
in
call
fstp
xchg
iret
das
stc
lret
lock
sarb
shl
lret
into
shl
sti
mov
loop
sti
clc
in
fstp
loope
loopne
ror
stc
shr
repnz
call
cmp
clc
and
test
std
sub
hlt
cmc
jmp
fidivrl
cmp
cli
cmp
in
lock
jecxz
or
lret
into
rorb
ret
shlb
sar
hlt
out
incb
popl
jmp
int3
call
ss
in
fcos
jmp
icebp
out
fcmovnbe
jecxz
addb
ror
loope
in
rcl
shll
cmp
sti
aad
shl
sti
out
cmp
sbb
repz
cmc
xor
int
int3
fcomp
jmp
lock
icebp
in
ret
les
fldl
out
xlat
xor
fcmovnbe
test
lret
hlt
in
xlat
icebp
test
aad
jecxz
stc
into
orl
jmp
out
call
flds
fisttpl
xchg
iret
in
xchg
in
in
lret
lock
cmp
enter
cmp
lock
mov
and
loope
fcmove
xchg
jmp
iret
repz
call
add
jmp
sbb
idiv
fimuls
xor
xor
cmp
hlt
hlt
aas
fcmovnu
fcmovnbe
sbb
aas
addl
test
out
into
iret
repz
into
into
sar
clc
fcos
ret
test
out
clc
out
xchg
loope
lret
jmp
aam
repz
repz
sarb
shl
in
repnz
jmp
xor
fsubr
xor
sti
stc
aad
out
fidivrl
idivl
cmp
idivl
hlt
mov
dec
fucomi
mov
addb
out
xor
fnsave
cld
rol
xchg
lock
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
jmp
leave
aam
fld
fpatan
cwtl
jp
imul
push
adc
jl
addb
jl
in
out
lds
loope
lret
iret
cmp
sar
loope
incb
call
int
icebp
xchg
cs
lock
shl
enter
push
cmp
xchg
ffreep
test
aam
enter
lret
in
shl
leave
cmp
repz
fdiv
out
ret
sar
fnstcw
mov
ljmp
mov
in
out
jmp
in
fdivl
call
sbb
mov
jmp
or
xchg
adcb
xlat
ljmp
fadds
clc
cld
in
fdivr
call
xchg
fdivp
ret
sar
in
repnz
adc
imul
aam
sub
in
into
icebp
shl
lret
das
mov
xlat
ror
int3
shl
aam
icebp
and
lret
iret
rcl
xchg
xchg
rol
into
int
xor
cmp
fdivrs
loop
cmp
fistpll
loope
xlat
out
sub
jmp
iret
cmp
call
xlat
out
cli
cmp
enter
out
jmp
xchg
cmp
fcmove
xlat
cmp
fcmovbe
repnz
out
call
lret
mov
xor
loop
shr
lret
fmulp
adc
jecxz
fsub
lock
jmp
orl
ljmp
aam
cmp
shl
cmp
sar
mov
test
in
xor
xor
fmul
out
ljmp
cmp
rorb
rcr
hlt
in
out
das
xor
out
cmp
xor
sti
loopne
sti
mov
or
lret
xchg
in
out
into
test
out
in
cli
ror
testb
flds
sub
out
fsubrl
mul
iret
fcomi
cmp
ror
test
repnz
repnz
call
lea
repnz
std
fadds
clc
in
mov
in
fdivl
aad
cmp
lret
ljmp
loopne
in
fdivr
addb
ljmp
out
rcr
iret
cmp
clc
aas
clc
ds
std
aad
mov
stc
sti
in
mov
int3
lock
in
fsub
cmp
cmp
sarl
out
incb
cli
lret
std
call
loopne
shl
out
xor
cmc
neg
fdiv
fdivrl
xchg
ror
loopne
lret
imulb
repz
repnz
fcmovnbe
cmp
in
out
fstp
xchg
cli
or
mov
enter
sar
repnz
cld
cmp
into
xor
ds
clc
rcl
loop
shll
repnz
idiv
cli
shl
clc
sarl
sti
ret
aas
jecxz
ret
filds
fcmovne
aad
xor
aad
lret
cld
clc
shl
xlat
in
in
shl
sub
fdivr
ror
mov
out
loop
fpatan
xor
cmc
stc
xor
cmp
loope
out
mov
iret
loope
out
iret
out
into
ss
sar
into
in
repz
ret
loopne
mul
testb
int3
repz
int3
aaa
in
xor
aad
fstpt
cli
rcl
sar
call
ret
leave
cld
call
int
loop
addl
icebp
out
iret
sti
iret
loope
out
fiaddl
jmp
lock
ljmp
aaa
jmp
cmc
cli
xchg
leave
leave
clc
orl
out
int3
iret
sub
enter
lret
test
cli
stc
fnstsw
fiaddl
pop
mov
fsub
in
aad
shl
sub
out
hlt
cli
jmp
aam
sti
clc
mov
fucompp
fcom
lret
int
faddl
ret
xor
in
lret
out
jecxz
rcr
rol
clc
ret
fldz
mov
ret
loope
jmp
shl
hlt
std
cmp
std
cmp
jecxz
sti
call
xlat
in
out
xchg
call
out
ss
cmp
icebp
not
sar
cmc
fcomp
ret
sti
mov
int
in
repz
aaa
icebp
lock
cli
into
fstp
call
call
jmp
ror
int
fcmove
mov
push
outsl
cmp
cwtl
repz
addb
jl
cmp
jmp
int3
shl
fcomi
in
cli
xchg
adcl
les
aaa
aad
xor
ds
aam
fildl
cli
testl
ss
cmc
out
clc
xor
cmp
aam
stc
adc
frstpm(287
out
mov
aad
clc
in
out
lret
aaa
stc
ffreep
out
aam
cmp
xchg
adc
loopne
or
nop
mov
cmc
div
into
fdivrs
shr
aad
jecxz
repz
cmc
push
jmp
fadds
xchg
ret
icebp
stc
repnz
icebp
ljmp
jecxz
xchg
fdivp
out
sub
out
lock
ror
xor
cmc
xlat
aam
adc
cmp
sbb
fmulp
decl
addl
fucomip
cmp
fmul
jecxz
addl
in
lea
lock
into
hlt
cmp
shl
fcmovbe
neg
test
in
fmulp
rol
xor
clc
fcmovne
fcomip
xor
into
in
loop
aad
jmp
add
xchg
hlt
mov
jmp
jmp
aas
fucomi
lock
ret
clc
cmp
jmp
jmp
repz
mov
stc
cmp
hlt
cmp
lret
rcl
cmp
fcomp
xchg
in
leave
test
mov
iret
out
lret
std
cmc
call
xor
cmp
in
xchg
aad
fldl
mov
fiaddl
cmc
cmc
call
rcl
hlt
filds
loop
hlt
fiadds
nop
in
out
aad
rol
aaa
cmp
hlt
lret
into
icebp
ss
cli
hlt
clc
into
lock
fsubp
ds
rcl
in
mov
int3
cld
xor
rcr
into
ss
cli
rcl
xlat
lock
cmp
neg
int3
lock
call
cmp
ds
cld
enter
mov
hlt
mov
out
ret
cmc
cmc
xor
enter
cmc
xchg
cmp
leave
repnz
fildl
lret
cmp
clc
lret
in
shl
inc
repz
ljmp
jmp
into
sti
xor
ljmp
jecxz
shl
adc
mul
les
int
fistpll
xor
fcmovnu
out
rcl
aas
xlat
iret
loop
in
stc
fucom
fcmovu
idiv
ds
jmp
sub
fcmovnu
call
fdivr
rol
testl
xchg
hlt
test
int
not
out
cmp
hlt
sti
lock
sar
neg
fdivr
loop
icebp
xor
icebp
aaa
std
xor
std
adc
cmc
mul
loope
xchg
fimull
cmc
lock
cs
shl
xor
fsubr
iret
idivb
in
shl
ret
in
fsubr
addl
cmp
lock
int
cld
std
clc
icebp
cmp
in
cld
mov
test
cmp
xlat
cmp
ljmp
jmp
loopne
cld
xchg
int
icebp
nop
test
shr
int3
int3
neg
aad
cli
clc
xlat
cmp
aas
test
repnz
jmp
ret
ljmp
iret
xor
cmp
fmul
stc
out
repz
sti
incl
enter
out
loop
rcl
aam
hlt
ror
sar
out
dec
aam
repnz
mov
call
ror
out
int3
hlt
clc
sar
int3
add
cmc
fadds
mov
or
out
icebp
in
ret
cmp
fdivrl
out
lret
enter
cmp
shl
ret
jecxz
in
fimuls
mov
aaa
lret
enter
out
aad
stc
aas
aam
call
jmp
loope
aam
jecxz
adcl
call
hlt
ss
ss
in
fmuls
enter
mov
loope
lock
std
int3
shl
fstpt
in
iret
lock
incb
orl
repnz
cmp
cmp
add
mul
xchg
cld
iret
mov
sarb
je
mov
jmp
xlat
ror
ror
xlat
fisttpl
lock
arpl
icebp
push
idivb
add
xor
fldt
hlt
aas
faddl
addl
std
in
loopne
xchg
xchg
das
out
lret
rcl
cmp
cmp
lret
ffree
and
ret
flds
icebp
aad
jmp
stc
sarb
repnz
out
enter
f2xm1
loop
cmp
fdiv
fiaddl
loop
in
clc
lds
in
xabort
jmp
inc
hlt
adc
fcom
test
xchg
repnz
xor
in
into
fcmovu
aas
sarb
out
fdivrs
imul
leave
xlat
mov
in
xchg
neg
aad
cmp
sar
int3
ret
jecxz
xchg
ret
cmp
mov
call
loop
idiv
sti
aas
out
int
repnz
std
fildl
out
call
ds
xor
lds
ljmp
cmp
icebp
fcmovu
ret
ret
in
test
in
and
mov
fxch
aaa
xor
xor
idiv
rcr
aas
std
out
rcr
fdivp
enter
lds
fucomp
hlt
xor
out
jmp
in
xor
enter
vpsraw
adc
decl
sti
loopne
das
lock
lock
enter
lock
cmc
sti
ds
in
test
ljmp
lret
out
hlt
lock
ds
adc
icebp
std
mov
test
in
mov
jecxz
sub
bnd
icebp
cmp
fdivr
rolb
faddp
and
lret
fdiv
in
ljmp
loope
jmp
shl
rcr
iret
hlt
cmp
fsubp
cmc
incb
fcmovnbe
out
iret
in
divl
shr
icebp
sti
repnz
xlat
int3
aam
loope
cmp
add
in
in
in
mov
jmp
icebp
in
aas
shl
jmp
xlat
int3
fdiv
cld
out
out
loope
clc
std
mul
test
decl
ljmp
call
xlat
shl
jmp
loope
std
leave
and
aad
ljmp
cli
cmp
stc
out
xlat
loope
mov
loop
out
loope
mov
fcom
jmp
fnsave
leave
lret
clc
cmc
cmp
shl
in
ljmp
loope
out
cmc
xor
out
cli
lock
fdivr
cmp
xlat
icebp
rcr
sarl
rcr
addl
rcl
int
ss
icebp
rcl
fcom
cmp
clc
cmpl
test
std
int
ror
fiadds
cmc
rol
ror
int3
out
rcr
cmp
shl
clc
hlt
xchg
in
lret
cld
test
imul
xor
out
cmp
out
cld
aad
cmc
xlat
in
rcl
fmull
icebp
xchg
xor
rcl
in
cld
in
call
push
in
cmp
hlt
repz
mov
jmp
xchg
std
aam
jecxz
lret
leave
icebp
roll
xchg
xchg
xchg
cli
hlt
lret
loope
in
shr
shr
xlat
xor
cli
out
repnz
mov
loop
loop
xchg
call
jmp
cli
lret
xor
xor
cmp
decb
out
fisttpll
out
cli
fucomi
cmc
fcos
cmpb
aam
aas
testb
lea
fmulp
xor
in
hlt
lds
loope
cli
cmp
adc
neg
fdivr
test
fsub
cli
mov
mov
shll
sti
fdivs
lret
cmp
out
testb
loopne
std
test
repz
in
ror
cmp
out
std
lock
idiv
icebp
mov
lret
lret
sbb
cli
cld
fadd
mov
aaa
aad
in
int
xor
fucomp
hlt
cmp
ds
test
std
fucom
in
repz
in
cmc
xor
fdivrl
aam
fiadds
loopne
mov
iret
shl
test
in
xor
test
cmp
aad
ds
repnz
aad
cld
out
lret
sub
in
pushl
ljmp
std
in
aam
repz
lea
nop
fsubp
xor
aad
call
inc
sbb
adc
mov
jmp
enter
xlat
xor
aad
xor
mov
add
mov
jmp
leave
iret
xlat
rcr
flds
cwtl
pop
dec
scas
enter
cli
jl
addb
jl
call
ror
rcl
clc
mov
mov
mov
ljmp
aaa
xor
call
loop
aam
xchg
shl
jecxz
xchg
in
call
xor
call
stc
cmp
test
xchg
nop
cmp
das
xor
repz
rcr
repz
and
std
mov
orb
aam
cmp
xor
out
shll
ret
ret
testb
call
repnz
lock
call
fucomp
ds
cmp
std
ds
in
in
addb
aam
out
shll
lret
repnz
lock
ffree
test
in
mov
dec
decb
in
idivb
ss
cmp
repz
rol
loop
stc
test
sbb
lock
popl
ret
ret
out
xor
in
aam
clc
cmp
aam
fmuls
shr
ljmp
cmp
cmp
in
jecxz
cld
mov
xchg
xchg
sub
repz
lret
clc
fidivrs
loope
cld
cmp
in
fdiv
fucomi
ljmp
leave
xor
cmp
sti
lret
ds
cld
shl
cld
in
fucomp
fsubr
int
decl
stc
xlat
in
call
ljmp
fsub
in
sub
mov
out
in
xchg
cmc
int
in
into
not
jmp
shl
testb
enter
out
test
out
ss
aad
repz
loop,pt
rcr
mov
mov
out
xchg
call
shl
cmp
aaa
int3
out
cmp
into
test
mov
jmp
aad
int
fmul
cli
idivl
int3
jmp
lret
push
std
repz
fldl2t
addb
aas
xor
loop
test
call
shl
rcr
clc
loopne
test
xchg
adcb
clc
aaa
repnz
aad
cmp
rcl
fcmovnbe
clc
cmc
fsubrp
fstp
test
iret
movl
out
call
icebp
sub
faddl
shr
das
enter
call
addl
fcomp
mov
jecxz
lret
aad
hlt
repnz
into
cli
in
test
xchg
aam
flds
enter
lock
aad
ror
rol
out
xlat
fucomip
leave
sar
aas
ret
loop
sti
test
enter
repnz
lret
shr
rcl
test
aam
cmc
in
lock
call
aam
jmp
test
xor
aam
ljmp
sbb
cmp
loop
lret
lret
mov
mov
in
xor
icebp
icebp
xor
cld
iret
ds
cmp
call
xchg
int
loopne
in
call
in
call
lret
fndisi(8087
cmp
fcomp
call
out
std
in
ds
ljmp
ds
cmpb
stc
adc
test
mov
repnz
xchg
xor
in
aam
rcl
enter
test
add
stc
add
leave
in
in
loop
leave
aam
ret
xlat
ror
rcr
sarl
repz
cli
in
int
mov
stc
ret
std
mov
div
jecxz
enter
int
cld
out
in
out
xchg
xchg
sbb
into
lret
repz
aam
lret
stc
hlt
int
aad
cmp
ret
lret
lret
iret
xchg
xor
hlt
leave
sarl
int3
out
int3
in
std
addb
xor
fcmovb
sti
loop
sub
aad
jmp
cmc
out
fmulp
loopne
sti
into
std
fsubp
incb
clc
nop
fildl
int3
int
fucomp
fdivr
aam
neg
int3
test
cmp
xbegin
int3
iret
cld
loope
out
cmc
loope
in
xor
in
xor
cmp
ret
mov
sti
mov
out
clc
xchg
xchg
out
out
xor
loop
leave
out
fstpt
into
lock
jmp
leave
int
int
int
mov
aam
sbb
loopne
cmpl
cmp
clc
leave
shr
sti
mov
sbb
int3
out
into
in
in
icebp
out
adc
cld
jecxz
rcl
idiv
test
fucomi
clc
faddl
aas
lret
out
repnz
icebp
cmp
ret
fucomi
xlat
rcr
hlt
stc
sti
in
mov
loope
int3
lret
xchg
out
hlt
ljmp
lret
cmp
lock
jmp
icebp
in
test
fcmove
mov
jecxz
cmp
sti
aaa
stc
jmp
hlt
cmc
xlat
loop
mov
mov
rol
clc
clc
in
icebp
cmp
clc
cmp
fmulp
std
ds
mov
int
mov
in
repnz
mov
xor
in
ret
xor
out
clc
iret
ljmp
leave
shl
leave
in
filds
loopne
imull
cmp
div
out
ss
fldz
sti
roll
cmc
fcmovbe
xchg
xchg
out
lret
lret
jmp
call
cmp
aad
cmp
sub
xchg
test
loop
in
call
leave
shl
in
cli
fsincos
sti
test
fldl
les
lret
xchg
icebp
in
xor
shll
leave
out
dec
cmp
jecxz
fdivrl
icebp
cmc
hlt
in
jmp
rolb
stc
cmp
lret
cld
aad
shll
loope
aam
cld
mul
fadd
and
rcl
ror
xor
out
enter
out
loopne
repnz
aad
loopne
decb
cli
fists
xor
out
cld
idivb
repnz
in
mov
in
ret
out
ljmp
aaa
fcmove
in
int
sar
out
repz
out
cmp
incl
shl
xchg
in
ret
xor
out
cmp
fcmovnu
ds
fdivrl
clc
cld
incb
fmul
mov
cmp
shlb
stc
repnz
fmul
jmp
cmp
movl
std
lret
out
out
enter
out
in
push
ss
sar
aas
aam
test
cld
test
xchg
jmp
repz
cld
hlt
aad
fdivrs
addl
mov
testb
fld1
icebp
lock
lock
test
cmp
fnstsw
in
in
test
lret
and
rcl
hlt
imul
cmp
ljmp
aas
ret
leave
sub
test
ret
mov
xchg
std
repz
idivb
lret
int
cmp
loope
adc
in
cli
hlt
xchg
mov
ljmp
lret
out
call
lret
shl
mul
leave
mov
cld
ljmp
enter
aad
cmp
lret
jmp
repz
into
cmp
fst
in
ret
stc
lret
or
out
icebp
call
xlat
lret
cmpb
add
clc
aas
ret
std
ljmp
addl
ffree
lock
fsub
fucomip
icebp
ds
faddp
fcmove
out
int
ljmp
ds
loopne
xlat
aas
cld
icebp
aad
test
mov
sbb
jmp
jmp
xchg
out
hlt
in
ror
aam
cli
cmc
sarl
sti
shr
jmp
std
cli
enter
fstl
rcl
repnz
in
in
call
std
bnd
fldl
int
in
mov
aam
fxch
shr
fsub
lret
aad
fld
fadds
jmp
fisttpll
jecxz
lret
fxch
lock
hlt
jecxz
cld
cmp
loope
enter
xchg
lock
loope
stc
ret
aaa
ljmp
ret
out
cmp
lret
xchg
xlat
into
hlt
out
int3
hlt
lock
cmp
aas
neg
ljmp
xchg
nop
mov
ret
cmc
stc
xor
ffree
cld
ds
cli
stc
hlt
sar
cld
ret
in
out
mov
in
aam
jmp
out
cld
cmp
clc
fcmovu
sti
fdivr
jmp
xchg
test
in
mov
mov
xor
cmp
cmp
fsubr
fucom
flds
jecxz
and
ffree
xchg
xchg
aam
shl
leave
ror
rcr
into
cli
fdiv
fdiv
test
leave
add
add
aad
leave
lret
fstp
aad
mov
popa
fnsave
add
or
jecxz
jmp
shl
and
xor
loop
cmp
ss
repnz
loope
fucomi
sub
mov
leave
mov
cli
lock
shll
lret
call
int
neg
test
sub
fucomi
sbb
lret
out
rolb
int
shl
clc
xlat
clc
out
stc
idiv
incb
loope
hlt
ds
test
in
jecxz
ror
aaa
shr
in
iret
neg
cmp
lock
loope
ret
test
loop
shll
loopne
iret
fdivs
ljmp
jecxz
orb
test
out
loop
jmp
out
int
shr
ret
xor
cmp
ds
filds
in
out
in
shl
jmp
shr
icebp
ljmp
fdivr
shl
roll
icebp
enter
call
fdivp
call
fcmovnu
shll
hlt
roll
jecxz
in
in
mov
in
jecxz
enter
leave
ljmp
cli
ds
in
into
fprem1
fcom
ret
test
in
xchg
loop
repnz
xor
in
in
cmp
fcmovnu
lock
movb
sti
fstp
xrelease
shl
fcmovnu
sti
fdivr
sar
shl
out
fucomip
loope
enter
xlat
xor
jmp
mul
adc
cmp
out
repz
movb
mov
clc
cli
xor
repz
iret
fucomip
icebp
sub
cmp
loop
jmp
mov
out
in
clc
cmc
xor
ss
cli
repz
aam
aad
fcmove
imul
ds
test
dec
orb
jmp
hlt
or
lock
fucomip
test
and
out
jmp
xchg
incb
int
xor
sti
out
clc
inc
icebp
cli
cmp
stc
mov
int
cs
ss
out
idiv
cmp
stc
enter
xbegin
xchg
rol
in
ljmp
aaa
fldl
jmp
fisttpll
mov
out
lds
repnz
test
in
fiadds
test
test
fucomi
out
in
jecxz
mov
lret
in
hlt
aam
out
fsub
xor
dec
lock
jmp
ret
shr
mov
xchg
mov
aaa
imull
out
in
iret
aaa
cmp
cld
ds
aam
loopne
xchg
cli
lock
fsubrp
xor
out
mul
repz
cmp
std
fstpt
ds
mov
xchg
in
mov
out
out
sub
aad
cmp
lret
loope
ret
clc
shr
cmc
repz
jmp
xchg
repnz
shl
repnz
cmp
clc
shl
ret
sub
enter
out
std
lret
test
sti
test
int
cli
in
shl
cli
aam
jecxz
xabort
repz
and
jmp
aad
repz
out
cmp
ss
fcmovbe
rcl
roll
iret
enter
fimuls
hlt
cli
xor
lret
loopne
loopne
icebp
std
cmp
fstp
lret
fsubrp
call
out
jmp
shrb
into
cmc
aaa
fprem1
shr
jecxz
shl
incb
xchg
mov
lret
loope
shlb
out
fucomp
xor
imul
int3
in
icebp
fucom
cmpb
aad
out
out
iret
loope
and
mov
xor
lret
xchg
in
test
fcmovnu
into
into
repnz
cs
stc
aam
cmp
cmpb
mov
test
in
mov
fsts
mov
ret
out
sti
ljmp
cmp
fadd
fdivr
mov
sbb
out
decl
ret
aaa
sar
aam
cmp
fsub
std
loop
enter
leave
fcmovne
int3
lret
in
imul
int3
int3
shl
lret
out
cmp
adc
in
stc
cmp
test
out
rcl
xor
xor
cmp
sti
rol
cmp
testl
nop
xchg
in
out
out
fnclex
cmp
xlat
div
ror
sti
push
leave
loop
in
lds
or
xor
cmp
je
mov
mov
jmp
rol
lds
aad
aad
lcall
add
addb
jl
incl
rcl
sar
ss
aad
cli
int3
fcompp
rol
in
mov
lret
in
leave
ret
shr
out
aaa
lret
shll
xlat
std
shl
out
cmp
aam
sbb
fmuls
ljmp
cmp
call
int
std
clc
ds
fcomi
cld
faddp
in
loopne
repnz
in
in
fcomi
fnstsw
int
fcomi
ror
div
leave
incl
xchg
shl
int3
vcomisd
sti
std
xor
xor
icebp
aad
test
in
fildl
mov
xchg
mov
hlt
aam
cmp
cmp
repz
std
clc
not
rcl
sar
mul
in
test
rorb
lret
out
xor
into
int
cmp
fdivrp
repz
mov
out
lret
out
shl
fdivr
lock
into
ret
hlt
testb
lret
fdivr
in
enter
xor
shl
aad
pushl
not
ljmp
jmp
fsubr
in
nop
decb
jmp
in
cmc
rcl
cmpl
idiv
movb
lret
ljmp
in
in
out
lret
out
ljmp
jecxz
testb
out
test
xlat
shl
enter
ss
ds
lock
cmc
div
cli
fdivrp
mov
xchg
in
test
xor
jecxz
lds
ds
sarb
imul
fcmovnu
out
iret
fdivrp
sub
cs
shl
jmp
or
rcl
test
ds
enter
addl
fchs
xor
fdivrl
lret
div
cmp
call
in
int
fdivr
in
repz
jmp
lret
test
neg
in
jmp
icebp
jecxz
mov
fdivl
rcl
jmp
cmp
test
orl
ret
ror
loop,pn
cmc
fmul
or
fcmovb
mov
sti
filds
cli
movb
in
lret
int3
iret
cmpl
int3
jecxz
aad
fdivr
ljmp
int3
or
ror
cmp
rcr
into
xlat
fcmovne
shl
cmp
out
mov
mov
mov
xor
std
sti
ffree
xor
fdivr
ret
shl
cmc
loop
fmull
xchg
rcr
jecxz
jmp
ret
ret
std
lret
std
loope
out
sub
repnz
int3
fucomp
test
sub
fsub
hlt
lret
clc
call
fiaddl
cmp
ret
cmp
vpand
jmp
out
mov
into
xor
das
jmp
fnstenv
cmc
into
idiv
or
ret
roll
out
mov
call
cmp
cld
cmp
int
xlat
fcompp
xor
mov
int3
fst
incl
hlt
enter
lret
xor
cmp
in
fdecstp
out
incb
icebp
iret
cld
addb
in
int
cmp
clc
aas
cmp
vpor
in
int3
adcb
divl
fucomi
in
fdiv
or
ret
sbb
in
hlt
in
xlat
xchg
movl
les
fmul
aam
idiv
or
mov
ljmp
into
or
shr
in
lock
fnstenv
sti
ret
xlat
in
fneni(8087
xlat
div
in
out
call
in
in
repnz
div
cmc
int
out
in
xchg
cli
fsubp
out
in
ljmp
aam
fmul
cmp
rcl
out
loopne
cmp
loopne
cld
ret
aad
cld
xchg
int3
jecxz
xor
idivb
mov
sti
fucomip
adc
cmc
jmp
lret
test
lret
test
in
shlb
mul
not
cmp
ss
in
cld
repz
jmp
xlat
fildl
int
loopne
xor
aam
fcmovnu
fistpll
rcr
cmp
fmulp
std
fdivrp
and
lock
int
fld1
cmp
sar
lock
jmp
fdivrp
fcmovb
fsubrp
leave
xlat
out
ljmp
xor
add
jmp
xlat
aad
rcr
fstp
insl
and
jl
sar
rcl
xlat
xor
aas
cmp
std
icebp
jecxz
fadd
out
xor
enter
icebp
aam
aaa
sarl
aas
cld
loope
hlt
fcmovu
ds
cmc
int
cli
test
sub
lret
shl
fdivr
cli
sbb
xchg
ffreep
fucomi
cmc
ror
out
in
enter
into
sub
fucomp
xchg
movl
repz
aam
aam
fdiv
mul
sar
loopne
addb
ror
leave
int3
inc
in
out
loopne
jecxz
into
shl
xlat
sar
lret
aaa
cmp
div
shl
xchg
mov
fsubr
cld
cld
fdivp
mov
call
int
fldln2
out
ror
aad
test
rcl
aad
ret
loope
ljmp
xor
jecxz
out
fdivp
aas
icebp
into
sti
repnz
mov
rorl
xchg
loopne
test
aad
cmp
cmp
sti
xor
roll
ret
mov
mov
cmc
divb
vpsrlw
fistpll
sub
into
ret
xlat
call
in
cmp
lret
lret
in
jmp
std
imul
cmc
cmp
fnstcw
repz
repz
jecxz
out
loope
in
xchg
in
in
clc
in
out
out
div
repnz
jmp
lock
into
fcomp
not
out
lret
std
mov
iret
shr
ret
jmp
cmp
std
loop
add
out
ret
mov
ret
enter
nop
decl
enter
repnz
loope
repz
std
loope
stc
inc
ret
test
mov
xor
hlt
iret
xor
cmp
fnstcw
stc
sarl
cmp
in
test
repnz
sti
jmp
ds
call
leave
cmp
shl
test
xchg
fadds
loope
icebp
jecxz
shl
in
repnz
fcmovbe
sti
idiv
cmp
jmp
rolb
repnz
in
xlat
in
aam
cmp
iret
cmp
and
xlat
aas
adc
loop
fsubp
leave
xor
ror
leave
sti
repnz
into
cmp
iret
clc
sbb
fsub
sub
jmp
sub
ds
aaa
cmc
cmp
xchg
xchg
std
ficoms
loopne
cmc
cmp
not
call
adc
sar
out
imul
xchg
test
fisttpll
xor
ljmp
in
loop
stc
xchg
ds
jmp
out
mov
in
vpxor
cmp
xlat
cmp
int3
sarl
aad
cli
std
mov
in
cld
in
out
lret
nop
aad
out
aaa
xor
cli
repz
lret
in
icebp
sar
cmp
clc
aad
test
loope
cld
xor
int3
jmp
cmp
cmp
ss
rcl
and
aam
into
fsubp
fimuls
rcl
ljmp
sar
fnstcw
clc
fstp
jmp
mov
iret
cld
xchg
test
mov
loope
hlt
lret
std
enter
int
sar
repnz
xor
mov
orl
xlat
aam
cmp
aas
jecxz
fcmovu
adc
mov
call
rcl
mov
fsubp
ror
fst
call
ljmp
std
cmp
mov
xchg
shl
shr
in
call
cmp
loope
ret
repnz
shr
xor
and
neg
shl
iret
std
aas
cmp
aas
aas
fnstsw
cmpl
loope
div
xlat
int
rorl
int3
sub
fincstp
xor
int3
cmp
fcom
aas
std
rcr
std
loop
test
addb
xchg
repnz
aas
shlb
fcom
hlt
out
cmp
iret
fcomip
loop
add
std
lret
ret
loopne
les
xor
int3
fdiv
lock
loope
cmp
test
ds
fcmovnbe
fisttps
lret
in
shr
xor
fmul
enter
std
fstp
in
jmp
fsubr
fsubr
fsubrp
mov
jecxz
cmp
fdiv
loope
cmc
icebp
and
rcr
hlt
out
jmp
loop
mov
lret
lret
add
push
add
jmp
ds
leave
fstp
ret
lds
ret
jl
add
iret
cmp
clc
xlat
into
sar
lock
in
filds
lret
sub
shl
into
cmp
aam
in
neg
fildl
out
std
testb
mov
xlat
int
cld
int3
std
lret
repnz
out
faddl
in
xchg
xchg
test
lock
imulb
repnz
neg
fcmovu
fdivr
int3
in
cmc
ror
nop
mov
test
out
repnz
lock
sarb
cmp
loopne
cli
cmp
lock
cmc
aam
int
cli
mov
rorl
cli
ret
fidivl
sti
int3
aad
in
into
xchg
loope
cmp
cli
enter
std
fsubrp
xchg
rol
aaa
xor
test
shl
cmp
repz
xchg
fadds
filds
repnz
cmp
shr
cmp
xchg
in
jmp
in
xchg
fildll
iret
sar
lret
into
into
lock
rcl
xlat
rcl
mov
call
repz
cmp
int
out
out
not
xlat
cmp
loope
lret
roll
xor
icebp
int
sti
stc
fildl
fdivp
fld
hlt
in
mov
nop
mov
loopne
cmc
loopne
ret
fcmovnb
std
cmp
loop
cmp
leave
shr
xchg
mov
enter
hlt
out
not
cmp
call
aas
faddp
aad
cld
ftst
mov
jmp
into
jecxz
aaa
aad
aad
cmp
cli
fsubr
div
sti
faddp
enter
testl
jecxz
loop
aaa
out
cld
call
out
in
roll
hlt
lret
jmp
aaa
icebp
out
hlt
not
std
cmc
shr
incb
lock
mov
out
rcr
mov
incb
ss
xlat
std
not
icebp
out
in
frstpm(287
test
cmp
xor
loop
shl
rcl
rol
ret
sarl
jmp
cli
cmp
out
sar
std
call
loop
out
into
in
ret
xor
rcl
fdivrs
lock
in
test
stc
fcomp
fcomip
cld
mov
call
cld
sub
lock
test
icebp
call
iret
jecxz
cli
shr
loop
int3
icebp
in
mov
repnz
int
int3
ror
int3
cmp
icebp
lock
in
faddp
incb
loopne
fcmovnbe
repz
sub
std
in
into
stc
sar
int
ror
sti
aad
aas
xchg
mov
in
shl
sar
repz
lret
repz
out
rol
mov
orb
lret
in
aaa
hlt
loopne
idivl
clc
rcl
lock
fildl
aad
xchg
std
flds
bnd
loop
in
out
aas
dec
out
cmp
testb
loope,pt
fcmovnu
rcl
lret
faddp
xor
int3
in
aad
out
sarb
rcl
addl
mov
rcl
iret
fmul
lret
divl
ror
lret
cmp
cmp
loopne
loope
mov
clc
loop
in
test
aas
jecxz
xor
fcmove
cli
out
cmp
fdivr
fstpt
roll
mov
clc
vpaddw
mov
loope
xor
out
sarl
rcr
repz
std
loope
icebp
cmp
mov
call
iret
icebp
out
shl
jmp
cmp
call
out
test
shr
clc
iret
loop
xchg
lret
call
cmp
cmp
repnz
ret
sti
cmp
test
xchg
stc
test
clc
in
sti
xchg
int3
xchg
in
xor
xor
fdivr
cmp
out
cmp
mov
ret
cld
iret
ljmp
lret
xor
out
lock
repnz
fndisi(8087
cmc
call
test
enter
xchg
sub
out
out
enter
out
cmp
stc
fcomi
std
cld
orl
cli
mov
int3
das
das
cmp
fdivs
xlat
incl
in
icebp
rcr
cli
fildl
xchg
shl
cld
call
stc
repz
fidivs
fdivr
cmc
out
addl
lret
test
in
cmpl
lods
std
add
add
jmp
ror
int3
fcmovne
inc
clc
adc
movsl
incb
addb
jl
loopne
cmc
out
loope
xchg
loop
test
ror
fmul
popl
cmp
repz
cmc
xor
idiv
jecxz
neg
fcmove
fldln2
out
lret
cli
in
out
fxch
xor
in
xor
in
clc
loope
rcr
loop
int
stc
add
test
mov
shr
aad
repz
cmp
divb
iret
stc
ffreep
aaa
xchg
cmp
rol
hlt
or
int
xchg
xchg
and
out
lret
xor
cmp
jmp
stc
repz
jecxz
leave
fcmovnbe
leave
loopne
in
mov
in
xor
leave
lret
xor
shr
xor
stc
std
lock
xchg
xor
mov
ret
iret
loopne
ret
cmp
iret
xlat
cld
roll
in
filds
sti
in
fcmovbe
out
xor
loopne
aam
call
sti
test
aas
loopne
rcl
orb
pause
jecxz
rol
xor
xor
rcr
xchg
loop
ret
in
loope
loope
imul
xor
fcmove
cmp
ds
test
cld
roll
test
call
jmp
loop
out
in
repz
ror
ret
rcl
in
loop
out
lret
jecxz
test
mov
das
test
xor
inc
idivl
cld
hlt
rcr
call
test
mov
int
mov
enter
in
aaa
aam
cmp
into
neg
orl
notb
out
leave
out
xor
xor
out
lock
hlt
in
cld
in
fsubp
clc
fisttpl
loope
lock
call
out
into
out
aad
shl
hlt
fld
fldl
cli
nop
xchg
cli
mov
enter
leave
clc
rcl
lret
jmp
les
sti
enter
jmp
jmp
stc
sti
aaa
in
lret
hlt
fcmove
ds
test
fcmovne
out
lret
icebp
xchg
les
out
int
lock
repz
idivl
in
xchg
sbb
in
in
xchg
out
cmp
aad
stc
cld
out
fdivrp
sar
stc
idiv
sti
fnstcw
test
into
mov
rcl
ljmp
sarl
cmpb
clc
ret
out
fcomi
jecxz
enter
fcmove
in
lret
out
ss
shlb
sar
cmp
repnz
aas
out
aad
mov
ljmp
fldl
sarb
cmp
repz
loop
fcomi
aad
stc
out
fstp
lret
loop
fisubrs
into
enter
iret
aaa
rol
repz
loopne
ret
ljmp
mov
mov
sub
cmp
cmp
fmul
fcmove
not
shl
cld
filds
fiadds
jecxz
repz
int
neg
stc
fcmovbe
shl
in
out
aam
loopne
aad
ljmp
xorl
xor
sar
out
ds
ret
icebp
call
rcl
xor
ror
xlat
push
cmc
lock
fcomip
loop
idiv
in
xchg
sti
cld
xchg
iret
loop
out
loopne
int3
ljmp
rcr
faddl
hlt
in
out
xchg
and
test
rcl
xlat
sti
cmp
ds
loopne
lock
idiv
xlat
cmc
fsubr
int3
clc
cli
loop
out
cmc
cmc
xor
xor
cmp
lret
fistpll
out
ret
out
in
mov
or
repz
xor
xor
out
clc
cmp
cmp
ror
sub
sbb
jmp
in
fcomp
int3
lea
int
rcl
fdivl
xlat
fistpll
out
shl
cmp
into
xchg
ljmp
xor
shl
out
fcmovu
fcomp
jecxz
repnz
clc
out
sti
les
enter
loope
sarb
hlt
in
cli
out
cli
out
lret
aas
ret
into
stc
loope
call
shl
shl
int3
in
fnstenv
jmp
int3
enter
int
cmp
repnz
mov
mov
faddp
mov
ficoml
fsubrs
std
loope
clc
cmp
ret
flds
stc
in
fucomi
xor
jmp
cmc
fcomp
cmp
stc
leave
clc
fdiv
aas
cli
lock
rorb
call
mov
mov
pushl
call
mov
cmp
jmp
lret
leave
aas
lret
int
pop
push
icebp
inc
loop
into
lcall
rorl
loope
mov
in
jecxz
lret
divl
hlt
xlat
repz
call
filds
loope
rcl
xlat
fxtract
lock
fucomi
test
shl
in
addb
mov
fildll
ror
std
xor
cmp
repnz
in
sti
lock
in
jmp
clc
out
cmp
rcl
rol
shl
xlat
stc
jmp
repz
test
inc
cmpl
sti
mov
into
lret
shlb
repnz
lock
enter
ret
sbb
ffreep
ret
jmp
mov
aad
aad
cmc
fdiv
cmc
xlat
int
stc
iret
fsub
addl
fmul
cli
mov
repz
jecxz
in
clc
sarb
loop
ret
out
jmp
jmp
cld
mov
out
xor
xlat
cmc
int3
imul
loope
adc
testb
int
jmp
loop
lock
ret
stc
shlb
repnz
ljmp
stc
fdivp
and
fcmovnu
fmuls
mov
in
fucomi
into
lock
divb
fsubr
fcmovne
out
jecxz
rol
call
int
fmulp
lret
fsub
int3
aaa
neg
stc
xor
std
loope
call
mov
xlat
aaa
sti
repz
clc
filds
cmc
out
call
jmp
rcl
cld
out
xor
lret
enter
in
loop
rcr
jmp
loope
out
in
xor
call
neg
cmp
cmp
loope
aas
div
rol
fcmovne
test
test
xor
in
out
rcr
neg
jmp
ljmp
leave
mov
fucomip
mov
xchg
cs
xor
hlt
enter
shl
cmc
shr
aas
jmp
in
mov
jmp
out
mov
and
out
stc
xlat
aad
int
cli
cmp
stc
loop
and
div
cmc
out
fadds
imul
ss
out
cli
cmp
rol
in
fmul
in
fcmovne
enter
out
loop
stc
out
vmovntdq
lock
aam
cli
ret
fdivp
loopne
fildl
sti
lret
lock
xchg
shl
stc
rcl
int
lret
ljmp
incb
in
out
test
shl
divb
lock
cld
cld
cmc
repz
sar
call
leave
out
in
jecxz
out
into
rol
xor
jmp
clc
shl
into
repnz
cmp
loope
std
call
icebp
cs
fcmovnbe
jmp
shl
cmp
sti
cmp
in
in
fimuls
mov
mul
ret
xor
out
movb
hlt
fadd
hlt
cld
cli
loop
jmp
xchg
xchg
xchg
icebp
rcl
lret
fidivl
ss
cmp
rcl
iret
cmp
in
call
stc
xchg
fchs
shr
xchg
in
shr
iret
lret
cli
leave
clc
cld
cmp
div
repz
aam
mov
loop
jmp
stc
iret
shr
lret
rcr
in
repnz
cli
clc
cmp
shl
fisttpll
fcmove
in
jmp
lret
jmp
std
out
out
shl
cmp
fcmovnu
xchg
mov
shl
xchg
in
sub
fucomp
fmul
div
xlat
jecxz
aam
fsubr
sar
cld
fldl
mov
xchg
into
xchg
shr
int3
icebp
cmc
into
shr
sti
in
ljmp
repnz
ljmp
jecxz
fsubp
repz
repnz
loop
enter
aam
sar
in
bnd
dec
leave
sbb
xchg
lds
lret
cmp
repz
ret
mov
in
in
repz
loop
loope
fucomi
leave
int3
cmp
fdivl
xlat
cmp
out
fmul
xchg
orl
lret
stc
jmp
in
in
fst
cmp
repnz
test
std
ffreep
clc
mov
fsubr
loop
nop
in
rcl
sti
cmc
call
aad
into
lock
out
leave
ret
in
stc
in
call
out
cmp
out
out
cmp
xlat
int3
lock
loope
fadd
rol
cmc
je
mov
mov
jmp
iret
iret
ror
ror
xlat
fnop
and
xor
gs
push
sahf
jl
addb
jl
notb
cld
repnz
call
rcr
dec
ret
shl
clc
out
xchg
lret
lret
out
repnz
ljmp
fscale
clc
stc
neg
xor
and
filds
mov
cmp
cmp
mov
int
int3
aaa
out
int
dec
ret
jecxz
call
fldz
stc
fdiv
lret
in
stc
clc
ljmp
lret
cmp
cmp
shr
xlat
out
std
out
out
mov
test
icebp
lock
xor
mul
ret
enter
lock
loop
fadd
leave
fldl
stc
fmuls
jmp
cmc
aam
aad
aad
cmp
test
mov
cli
testl
int
enter
cmp
fiadds
lock
and
in
testb
mov
ret
stc
jmp
aaa
std
ret
aas
shl
fld
fdivr
and
mov
fimuls
aas
cmc
jecxz
xbegin
cld
in
test
filds
jmp
rorb
icebp
fnstenv
cli
cmp
in
repz
int3
leave
fsubr
iret
lret
int
rol
icebp
out
cmc
std
in
xor
xlat
loop
rorl
cmc
fdivp
in
sub
lret
loop
out
dec
lret
xchg
rol
decb
nop
call
aaa
jecxz
aaa
out
std
hlt
icebp
out
shl
int3
fcmovne
sti
ret
idiv
test
mov
in
xor
test
shr
cld
ss
cmp
loop
testl
fldl
stc
lock
fcmovnu
aam
sbb
xlat
xchg
ret
test
mov
shl
xchg
lret
out
shr
lock
shll
ffree
ds
testl
lea
ss
int3
cmp
rcl
ret
lds
nop
iret
xchg
in
cld
ror
icebp
xor
out
out
fucomip
out
ljmp
in
test
into
int3
loope
xchg
test
jmp
cmp
shr
std
int3
fst
sar
std
loop
stc
mov
test
sub
lret
hlt
cmp
out
xorl
loop
repnz
mov
mov
cld
in
iret
test
hlt
icebp
les
enter
repz
loope
call
fstp
icebp
lock
or
enter
call
loopne
shr
cmp
enter
out
ljmp
hlt
sar
hlt
lret
int
lock
rcr
lock
ret
cmp
mov
cli
out
dec
loopne
loope
div
not
cld
fnstenv
test
hlt
out
xlat
fucomi
xchg
adcl
fcmove
lret
aas
fildl
addl
rcl
loope
jmp
call
enter
fadds
test
cld
loop
loope
int3
ljmp
repnz
fst
cmp
mov
xchg
test
iret
hlt
xor
lret
stc
out
jmp
stc
and
rol
sar
fsubr
out
xchg
out
fucomip
repz
ljmp
hlt
in
fcmovb
xchg
neg
clc
in
int3
and
loope
fucomp
repnz
hlt
call
adc
icebp
lds
sar
cmc
adc
lret
mov
xor
xor
iret
cld
leave
rcr
int3
fdiv
in
fsub
fidivrs
sti
lock
xor
icebp
xor
aam
enter
lret
repz
ret
jmp
in
jecxz
cmp
shll
jecxz
loopne
sbb
aam
jmp
out
xchg
shl
fprem1
in
in
out
cld
call
cmp
neg
mov
out
leave
incl
ss
rol
fptan
enter
adc
hlt
loop
bnd
call
call
xor
int
out
cmp
enter
loope
fucom
cmp
hlt
fyl2xp1
rcr
iret
out
cld
ljmp
or
push
mov
sub
leave
ret
push
mov
mov
jmp
xlat
enter
fcmovbe
cmp
rolb
fisubl
jl
int3
jmp
in
shl
ljmp
jmp
cmp
shl
jmp
and
in
jmp
lret
jecxz
aam
fcomip
stc
out
aam
repnz
in
orb
mov
in
ljmp
cmc
jmp
loope,pt
shl
rcl
jecxz
out
cld
xchg
repz
out
cmp
call
std
iret
ret
flds
xchg
fld
xchg
lock
and
ss
out
fcmovbe
in
fidivrl
loopne
ds
leave
xlat
frndint
roll
not
fnsave
repnz
ds
cmc
fadd
addl
out
ror
and
cmc
imul
int
std
cmp
out
cmp
cmp
cmp
loopne
cmc
fabs
xlat
fadds
call
not
xlat
cs
cmp
aad
rol
rcr
rcr
fldl
xchg
loopne
ret
hlt
jecxz
cli
xor
stc
into
lret
cmp
fisttpll
cld
lret
nop
xor
in
shlb
call
cli
stc
rcr
shl
mov
in
fdiv
xchg
iret
out
out
jmp
shr
cmc
int3
sti
std
xlat
ss
shl
ds
fsubr
loopne
xchg
xchg
cli
int3
jecxz
out
shl
repz
cmc
out
cmc
ljmp
repz
leave
ret
out
and
mov
mov
sub
into
aad
cmc
repnz
int3
hlt
shl
call
jmp
repnz
xlat
fnop
leave
leave
repnz
xlat
sar
idivl
aas
lock
int
cld
xchg
xor
int3
shl
out
clc
repnz
fcmovne
cli
cmp
repz
stc
imul
in
xchg
int3
ljmp
cmp
enter
jecxz,pt
frndint
call
inc
mov
sti
jecxz
ljmp
cli
aaa
divl
into
cli
shl
mov
ljmp
cmc
rcl
jecxz
sub
in
leave
iret
cmp
fstp
jmp
lret
icebp
and
xchg
xchg
fildll
jmp
enter
incl
in
addl
into
aad
jecxz
xor
enter
out
jecxz
test
cmp
sti
lret
in
out
xchg
rcr
repnz
ljmp
aam
fld
fdiv
fdivrp
shl
ret
fsubr
test
sti
iret
repz
ss
cmp
fnstcw
fucom
jecxz
fcmovnb
in
fsub
test
lret
test
repz
in
lock
iret
icebp
cmp
fsub
in
cmp
or
test
mov
call
xor
rcr
in
jmp
cmp
fdivr
cli
test
repz
loope
lret
int
int3
lock
ds
fildl
xlat
enter
shr
fucomip
adc
leave
ret
shl
in
cmc
fcmovnu
lret
xchg
shl
hlt
xchg
ret
jmp
xchg
out
mov
int3
rol
out
aaa
xor
lret
cmp
idiv
loop
into
aad
mov
leave
iret
xchg
iret
in
popl
lret
hlt
test
repz
fsubrp
loope
lds
int3
jecxz
xchg
das
jmp
int
aad
into
sti
stc
test
mov
les
fldl
ret
in
hlt
repz
cld
hlt
out
icebp
clc
stc
into
in
cmc
roll
in
loopne
loop
lock
call
ss
cmp
fistpll
cld
cmp
icebp
loopne
fildl
leave
testl
lret
cmp
sti
fcmovne
int
sarb
out
cmp
cmp
cmp
std
xchg
in
jmp
out
xor
std
enter
cmc
fadd
xor
aam
cmp
cmpl
call
shlb
out
fcmovne
int
xor
aad
int3
int3
icebp
rolb
jmp
and
xchg
out
into
xor
sarl
jmp
cmp
out
rolb
sbb
xchg
jb
add
add
or
mov
sub
mov
sbbl
push
inc
jmp
aas
lret
lret
xchg
sti
bound
add
in
rorb
out
repz
xor
out
into
xor
rcr
icebp
fildl
fadds
mov
cmc
lret
lret
loopne
lret
fucomp
out
lock
cld
ds
fildl
lret
int
in
icebp
int
test
imul
xor
cs
aam
aad
cmc
and
ret
hlt
leave
ror
nop
cld
test
faddp
sti
into
out
cli
call
rcl
cmp
rol
test
lret
fiaddl
xchg
ljmp
icebp
xor
adc
aad
fcmovnu
mul
ret
fadd
sub
out
cld
xchg
in
cli
xor
ss
testb
out
lret
fcom
loop
cli
movb
rcl
fnstenv
ss
std
fndisi(8087
jecxz
int3
fildl
dec
jecxz
mul
sti
jecxz
xchg
in
in
into
out
leave
xor
fucomp
fistpll
xlat
out
faddl
lret
aam
call
int3
sbb
ljmp
fcmove
cmc
fdiv
out
cmp
lock
cmc
lret
mov
fcmovu
lret
bnd
in
cmp
fidivrl
shl
inc
out
ret
call
fdivr
rcll
hlt
aad
fidivl
fsubr
fcom
cld
stc
out
fstp
addb
enter
int3
jmp
call
aad
out
enter
out
clc
fcmovnu
lock
leave
ljmp
mov
lock
xor
lret
fistpll
in
repz
xlat
rcr
mul
xchg
out
fucom
sub
aam
xor
out
ljmp
cld
shl
rolb
loop
clc
cld
mov
std
fdiv
int
rcr
cmp
cmp
cmp
cli
lret
repz
lock
jecxz
fdivp
jecxz
loop
xabort
out
xchg
repnz
cmp
cmp
divb
test
ret
and
fmulp
adc
jmp
les
repz
jmp
test
into
out
std
repnz
fcmovb
mov
sti
mov
loopne
stc
call
sar
iret
stc
out
roll
jmp
ljmp
out
xor
in
int3
into
in
add
cli
call
shl
lock
in
clc
jmp
repz
stc
cli
xchg
out
mov
stc
cld
mov
xor
out
shl
hlt
cmc
cmp
cmp
out
into
into
loope
decb
enter
mov
jecxz
idiv
fadd
in
les
cld
fcomp
aas
call
std
int3
shl
cld
out
fmul
cld
clc
into
fsubrp
aad
call
xor
out
xor
enter
idivl
loopne
mov
fcmove
mov
int3
ret
icebp
xor
call
cmp
xor
inc
not
loopne
xlat
enter
jmp
out
out
int3
mov
jmp
icebp
push
or
lock
sti
leave
loope
fdivrp
test
fmulp
sub
jmp
ss
test
or
loopne
fadds
mov
into
fxch
int
xlat
fcom
in
iret
loope
fcomip
neg
call
int
int
lock
out
shlb
aad
into
aam
rcr
aad
fucom
loopne,pt
mov
jmp
loope
loopne
jmp
int3
call
jmp
into
in
mul
loope
xchg
cli
ljmp
ret
cmp
clc
cmp
fdivrs
fsubrp
xlat
cli
fiadds
flds
std
xchg
and
rcl
in
fcmovnu
cmc
hlt
loope
cmp
mov
in
out
enter
das
into
xor
ljmp
and
rorl
mov
loop
jmp
faddl
shlb
ror
into
lock
in
aam
repnz
std
xchg
ljmp
in
shlb
repnz
cmp
cld
add
out
mov
fxch
shl
cli
xchg
in
xchg
lret
loopne
shll
cmp
into
ds
fadds
jne
subl
xor
jmp
ret
lret
ror
lret
sub
sahf
in
cs
cwtl
adc
jl
jmp
jmp
icebp
in
leave
orl
xor
ror
dec
loopne
aad
add
mov
in
int3
mov
lock
out
sarl
shl
ret
icebp
in
stc
lds
lret
fisttps
loop
in
jmp
jmp
rcl
test
out
cmp
jmp
clc
jmp
ljmp
clc
rol
aam
rcr
xor
test
loopne
jecxz
fisttpl
cld
lock
jmp
neg
stc
repz
aad
fiadds
sub
icebp
xchg
xchg
repnz
lret
in
repz
rol
fadd
out
movb
xchg
in
leave
repz
cmc
sti
xor
in
ret
lock
jecxz
mov
in
fmull
hlt
loop
cli
push
aaa
rcl
adc
lock
loopne
loop
xchg
jmp
loop
repz
into
fdivrs
lret
hlt
sarb
mov
std
call
dec
and
in
xor
enter
jmp
sar
in
in
loope
jecxz
jmp
mov
leave
sub
xor
xor
fadd
cmp
lret
cmp
cmp
loop
aam
fcmove
in
lret
xchg
test
xor
in
ljmp
std
aas
sti
cmp
xor
repnz
fsubp
leave
neg
out
orb
in
lret
ljmp
neg
ljmp
mov
cs
xor
in
divl
xor
ljmp
lret
ret
lret
leave
addb
in
cmp
xlat
in
mov
les
mov
mov
xor
repz
fcomp
ret
cli
fst
testl
in
enter
fxch
out
cmc
cli
cmp
out
rcr
lret
stc
int3
in
xchg
in
xchg
jmp
in
out
sti
ss
fstpt
cmc
int
rol
repz
mov
test
shrl
icebp
idivl
repnz
out
into
xor
jecxz
repnz
shl
test
aam
ljmp
fildll
stc
icebp
repz
in
fdivrl
std
lret
fxch
cld
add
not
rorl
test
sub
loope
out
loopne
rcl
fprem
out
enter
icebp
sar
in
xchg
mul
icebp
cld
hlt
out
fcomp
iret
lret
shl
adc
loopne
hlt
mov
mov
lret
out
loope
les
in
stc
xor
jecxz
cli
cmpl
stc
in
cld
push
fcmovbe
mov
sti
cmp
not
cmp
cmp
cmp
in
rol
in
loop
fisttpll
idiv
out
out
xor
ror
sub
clc
xor
aam
stc
ljmp
out
out
vpmaddwd
fsubr
cmp
lock
fmulp
ror
fdiv
sbb
ljmp
call
iret
int
cmp
out
lret
cmp
loop
xchg
add
enter
xchg
cld
lock
ds
in
lret
in
fnstsw
sarb
fidivrl
cmp
lock
fmuls
adcb
xor
sti
fcos
loope
stc
fdivr
mov
add
fmuls
call
cmc
leave
aaa
out
shrl
out
iret
fnstcw
ret
fnstsw
addl
sar
shl
cmc
cmc
mul
in
neg
in
ds
in
jecxz
in
addb
fnstsw
ljmp
repz
cmp
xor
lret
lret
lock
icebp
rcl
leave
enter
out
out
test
loopne
sub
repnz
ss
xlat
cli
fdiv
cmc
clc
cli
call
mov
repz
shl
ret
rol
fcmovb
lret
cmp
lret
test
test
jmp
out
loope
call
sub
int3
jmp
cmp
je
jmp
iret
aad
aad
aad
aad
mov
pushf
imul
mov
jl
add
and
repz
fcomp
ftst
nop
mov
shl
fdiv
ds
call
jmp
int
sbb
stc
out
testl
int3
mov
jmp
mov
rcl
out
repnz
cmpl
sub
mov
xchg
int3
out
loop
ss
out
rcl
leave
repnz
int3
fxch
std
out
repz
fld
lret
nop
mov
lret
loop
rol
icebp
stc
out
aad
fcmovne
cmp
sti
lock
fstp
mov
in
int
out
out
int
ret
rcr
std
ffree
cmp
rcr
ffree
ret
fadd
clc
jmp
movl
lret
lds
int
in
ljmp
idiv
sti
fcmovu
xchg
mov
leave
cs
in
lock
loope
ljmp
mul
fadd
out
nop
rclb
xlat
jmp
aaa
xlat
cmp
cmp
lock
lds
xchg
repz
mov
ror
int3
std
ljmp
ror
cmc
clc
sti
fsub
std
fiaddl
out
ljmp
lret
sarb
cld
icebp
loop
loop
leave
cmp
mov
test
icebp
repz
loopne
repz
hlt
cmp
lret
loopne
ss
aam
std
ret
fstp
out
jmp
loope
int3
shr
not
jmp
fsubr
loop
iret
xlat
loop
fimull
adc
int3
jmp
repz
aad
clc
hlt
sti
sar
not
cmp
loop
stc
aam
addb
mov
jmp
xor
cmc
loopne
stc
and
shl
orb
or
lret
jmp
xlat
cmp
dec
int3
sbb
std
cmp
sar
ljmp
lret
shr
das
xor
leave
cmp
xor
aas
loope
cmc
into
aam
fchs
ret
int
jecxz
mov
repz
iret
repz
iret
cmp
ds
addl
sar
mov
shl
out
lret
cmp
int3
out
out
cli
repz
stc
fdiv
xchg
mov
rcr
in
loop
std
icebp
cmp
out
and
xor
enter
cli
in
mov
rol
divl
cld
in
idivl
sti
aam
cmp
test
repz
fsubr
out
jmp
rorl
repnz
cld
cmp
cmp
ret
cld
shl
loope
mov
jmp
mov
mov
rol
ds
lret
xor
repz
out
aam
ret
sarl
mov
orl
call
cmp
sarb
cmpl
xchg
mov
repz
clc
lock
idivb
iret
rcl
out
fcomip
sar
neg
and
loope
cmc
enter
clc
cmp
cmp
loopne
std
cmp
aam
aad
fcmove
mov
out
lret
jmp
out
std
cmp
cmp
in
lock
or
shrb
into
ror
xlat
call
aam
loop
shr
rcr
jmp
mov
in
fcmovu
cli
in
xor
xor
xor
cmc
repnz
into
repz
int3
rcl
in
jmp
mov
mov
cld
shl
xlat
shr
xor
sti
in
cmp
shl
stc
fcmovb
fmull
lret
fildl
out
out
out
enter
pushl
cmp
stc
into
idiv
neg
out
cmp
orl
out
lret
cli
in
hlt
aaa
hlt
clc
xor
icebp
stc
mov
mov
mov
fmulp
leave
xchg
out
out
int
sub
clc
xor
std
ljmp
icebp
iret
icebp
aas
cld
jecxz
std
aam
std
in
out
roll
hlt
into
cmp
int3
lret
loopne
faddl
ljmp
aam
cmp
clc
shl
in
xor
std
loope
shl
ret
rolb
int
repz
mov
in
iret
jmp
mov
mov
sub
subl
xor
movl
cmp
movl
jne
xor
jmp
ds
ret
ds
jmp
rcrb
jl
flds
jl
cmp
iret
stc
aas
std
orb
fadd
cmp
mov
lock
aam
ss
push
sar
adc
cld
fld
jmp
mov
leave
loop
fucom
in
loop
loopne
in
out
cmp
stc
faddl
fadd
mov
in
loopne
rcl
loopne
loop
loopne
iret
in
repnz
int
and
loopne
clc
repnz
loope
shl
shrb
div
cmp
fucomip
fstp
in
neg
fcomp
hlt
add
out
in
fucomi
xchg
aad
in
fmul
iret
leave
in
fsubr
fidivrl
roll
loopne
fstp
and
sub
jmp
shr
add
fstpt
jmp
iret
in
out
std
out
xor
enter
fcmovbe
loopne
aad
int
sti
repz
in
jecxz
ljmp
int3
cmp
call
fdiv
fstpt
jecxz,pt
sti
leave
fdiv
int3
loopne
int3
loop
out
in
sti
leave
cmp
jmp
neg
add
in
cli
aam
xlat
or
mov
fidivs
lret
hlt
aad
in
xor
cmp
xlat
adc
in
xlat
sar
ficoms
hlt
fldpi
out
aam
clc
out
fucomip
out
out
clc
out
hlt
mov
movb
nop
in
test
hlt
imul
xor
out
jmp
into
repnz
mov
in
adc
xor
out
icebp
sar
adc
xlat
filds
xchg
icebp
orl
cmc
repnz
xor
lret
clc
test
mov
fisttpll
in
cmc
shrb
loopne
hlt
loop
aaa
in
cmp
ljmp
out
sti
sub
iret
xchg
repnz
xor
repnz
cld
cmc
int
std
loope
stc
hlt
mov
lret
stc
int3
loopne
sub
lds
cmp
xor
fxch
test
fnstcw
ret
icebp
rol
out
testb
xchg
mov
iret
lock
repz
xor
rcr
sti
fsub
repnz
and
loope
in
mov
repnz
cli
cmc
into
neg
dec
loope
sub
xchg
leave
jmp
loopne
jmp
hlt
repz
iret
xor
iret
iret
imul
xlat
fidivrl
cmp
int
aam
repnz
rorb
leave
nop
fcoml
jmp
ss
xlat
xor
rcr
fcom
cmc
hlt
test
testl
aaa
out
out
shl
int3
xlat
loope
fidivrs
fcmovnbe
cmp
xlat
call
mov
mov
xor
xor
int
fsubrp
lock
jmp
mov
mov
repnz
sub
in
cmp
cmp
vpmulhw
test
fsub
out
out
xchg
fst
aam
hlt
clc
fnstenv
sarl
lock
out
out
aad
adc
cli
jecxz
cli
lea
loop
repnz
enter
repz
sar
div
cmp
roll
iret
shr
loope
out
xor
xlat
roll
sti
imul
addb
decb
int3
xor
ffree
repnz
cld
fidivrs
ret
test
idiv
clc
mov
test
iret
leave
out
out
xor
aas
lret
loope
flds
out
mov
jmp
xor
xor
fsubr
cmp
jmp
ss
clc
xchg
out
ljmp
aam
aaa
in
int3
cmp
aad
loopne
mov
jecxz
shl
mov
loope
stc
aad
cmp
into
call
in
addl
mov
in
out
out
or
lret
cmp
fsub
xor
fmuls
int3
cld
cli
leave
into
test
in
xor
cmp
stc
incl
cmp
ret
mov
repz
shl
shr
loopne
mov
add
jmp
mov
andl
xor
jmp
ds
rcr
fcmovbe
rcl
aad
sbb
or
mov
jl
clc
lock
leave
div
clc
cmp
out
out
mov
mov
xor
out
rcr
std
int3
sarb
xchg
enter
mov
orl
cmp
jecxz
idivb
aas
fdivp
in
sti
call
rclb
icebp
xor
test
sar
out
sti
cmp
call
int
call
xchg
enter
lret
fstp
aaa
cmp
std
cmc
cmp
std
in
repnz
fld
stc
mov
icebp
in
xor
repz
sub
clc
ds
test
fstp
and
xchg
and
jmp
aam
fucom
out
in
adc
clc
rcl
xlat
fdivrp
fisttps
ret
rcr
xor
repz
lret
cmp
rolb
xchg
mov
jmp
neg
shlb
ds
fadds
xbegin
lea
int3
icebp
out
xor
imul
sti
cmp
rcl
addb
jmp
fsubr
fiadds
jmp
leave
jecxz
in
out
aad
xor
sarl
xlat
fldl
fldl2e
mov
sti
std
lock
call
into
xlat
jmp
adc
test
out
out
in
lea
xchg
lret
call
sti
lock
cmp
addb
lret
iret
fsub
cmc
rcl
xor
sub
call
rcl
cld
in
ds
call
cmp
xchg
lock
xor
fcomp
enter
fsubr
in
stc
cli
cld
repz
rcr
mov
leave
filds
std
xchg
lock
aad
divb
hlt
cmp
fcmovbe
mov
repz
in
jecxz
mov
loopne
sub
ljmp
fdivrp
rcr
out
cmp
shr
lret
cld
stc
jmp
int
xchg
fdivp
ljmp
aas
loope
cmp
clc
vpaddusw
cmc
mov
leave
jmp
mov
ret
leave
rol
xor
into
stc
xlat
in
rcl
ret
fcmovnu
stc
mov
ljmp
loopne
into
fdivl
sti
lret
xchg
loopne
mov
mov
in
out
xchg
shl
mov
hlt
int
rcl
out
repz
mul
loope
stc
test
aad
in
mov
rclb
shll
in
into
clc
cmp
testl
fst
loope
clc
iret
mov
in
int3
clc
shr
fcomp
cli
fadd
out
in
xlat
std
enter
int
cmp
mov
enter
jmp
lret
int
aad
cli
out
loop
cli
cld
cli
orb
int3
shr
out
sarb
shr
sti
aam
loop
test
test
add
hlt
leave
clc
mov
fiadds
xor
repnz
rcr
ror
cmp
iret
cmp
or
in
addb
mov
cmc
clc
ss
in
rcl
cmp
rcl
int
cmp
mov
enter
cmp
in
out
shl
loopne
das
xor
enter
repnz
out
into
rorl
test
jecxz
in
repz
sub
cmp
sarb
repz
loope
loope
jmp
fucomp
mov
aam
in
ss
in
iret
out
in
fcmove
jecxz
cmpl
fisttpll
loope
in
ds
ror
in
stc
icebp
out
fstp
testl
testb
mov
stc
xor
aad
les
stc
ror
shlb
test
test
mov
cld
sub
lds
out
in
ss
repnz
int3
sti
out
in
rol
aad
aam
clc
loop
lret
loopne
xor
xor
into
jmp
into
ds
in
in
fcompp
repz
out
icebp
int
aaa
rcl
icebp
test
addl
test
mov
mov
xorl
jmp
ds
aam
aam
aad
inc
dec
push
pop
mov
mov
jl
icebp
ret
int
aaa
cmp
cmp
loopne
inc
adc
mov
loope
clc
out
in
mov
fxch
div
rcr
repnz
stc
shl
fsubr
rolb
loope
stc
out
mov
cmc
in
aam
sub
out
xlat
loope
stc
sar
cmp
lds
or
loope
lret
in
mov
icebp
loope
enter
fdivr
std
in
neg
leave
aad
fisttpll
mov
sub
rcl
xor
lret
int
clc
roll
cmp
shl
aam
fiaddl
fisttpll
lock
jmp
lock
loop
cld
ret
idiv
idiv
fsubp
xchg
jmp
icebp
clc
cmc
enter
loope
cmp
aad
lea
in
int
int
leave
xor
aad
lock
out
call
jmp
mov
test
ficoml
imul
loope
cmc
sti
in
icebp
cmp
stc
hlt
aam
out
shl
cmc
aad
mov
jmp
xor
lock
cli
xor
cmp
fcmovnu
xchg
jecxz
mov
out
in
aam
sub
stc
iret
rcl
stc
xlat
sar
call
out
ret
cli
test
out
lret
or
repnz
int3
lret
shr
cmc
cmp
ljmp
fcmovnb
out
fsqrt
out
test
icebp
rol
shl
leave
idiv
jmp
lret
out
repz
test
clc
sar
call
test
repz
ds
lret
out
repz
icebp
fsubrp
in
loopne
loope
out
jmp
jmp
mov
xor
int3
xlat
in
int
sti
aas
ss
repnz
shr
addl
mov
in
mov
int3
xor
jmp
test
neg
xlat
fsub
fcomp
adc
jmp
fcmovu
test
das
call
iret
cmp
into
cli
roll
lret
sbb
in
adcl
repnz
fmul
cld
clc
hlt
hlt
loope
lock
mov
in
std
out
out
popl
fdivr
sti
jmp
int3
xor
test
cld
imul
or
int
ror
xor
icebp
in
icebp
call
fadds
fadds
std
enter
fisttps
xor
fld1
xor
lock
test
fcomp
fcmovnb
loop
in
mov
lret
xor
out
repnz
jmp
into
cmc
cmp
sti
sti
and
sti
cld
aas
out
out
in
cli
loopne
into
mov
leave
leave
int
xor
push
int
lret
int3
les
out
xchg
test
fildl
ret
call
cmp
cmp
repz
lret
call
rcl
ret
lds
in
fnstenv
lret
fninit
repnz
fabs
ds
flds
icebp
xchg
xchg
in
rcr
shl
in
hlt
stc
fnstcw
jmp
cli
loop
ds
in
fimull
sti
lret
icebp
mov
loope
jmp
cmp
idiv
fmul
cmc
fdivr
stc
into
rolb
enter
test
aad
xor
iret
hlt
jmp
repz
divb
in
orb
jmp
cmp
fcomp
fcmovnbe
aaa
stc
out
sarl
xlat
fcmovbe
call
int
mov
imul
xor
in
xlat
iret
shl
test
mov
std
add
lret
into
nop
xor
aam
call
rcr
out
xchg
repz
mov
in
in
out
mov
xor
stc
out
out
aaa
xor
ds
fsub
ljmp
mov
out
in
rcl
into
xor
shl
cmpb
into
repz
out
incl
loop
xchg
test
divb
shr
sub
in
fdivrl
xor
aas
cmp
stc
cmp
clc
clc
sub
loop
int3
in
int
int3
aad
cmc
not
leave
aad
in
fld
jecxz
std
loopne
cli
loope
enter
roll
notl
mov
movl
jmp
mov
xor
or
sub
add
jmp
ret
aad
fstp
int
ja
imul
pop
inc
jl
flds
jl
jmp
fbstp
out
into
int
sbb
out
repnz
rcl
rcl
mov
fcomp
clc
out
faddl
rcl
int
sti
aas
out
int3
fucomi
shl
loope
fdivp
jmp
int
lret
xchg
loopne
test
xlat
shlb
leave
xor
cmp
cld
aam
clc
fsubrp
in
xchg
nop
test
nop
xor
out
xor
jmp
cli
aad
cmp
cmp
mul
fcomi
sub
sar
in
mov
out
addl
hlt
std
enter
loopne
clc
out
addb
mov
cs
lret
stc
xlat
hlt
mul
cli
cli
cli
cmp
fadd
mov
sti
jmp
cli
jmp
lret
xor
lock
jmp
test
nop
lret
cmc
mov
xor
out
cli
into
cmp
cmp
sbb
sti
clc
out
ljmp
call
cmp
std
fcmovnu
cli
in
into
sti
out
fisttps
sub
bnd
fcmovnb
stc
cmp
cmp
aad
cli
xlat
rcr
cli
in
repz
xlat
iret
in
mov
jmp
cmp
iret
idivb
xchg
and
in
in
in
aas
jmp
ss
leave
fucom
iret
xlat
ret
into
fadds
lds
sub
aaa
shr
rol
repnz
fstpt
into
out
shl
movb
rcr
fdivrp
fmulp
xor
ror
stc
int
jmp
out
jecxz,pt
repz
in
xchg
adcl
ss
xlat
shlb
sti
ljmp
inc
add
jmp
fcmove
out
sub
xor
repz
add
stc
addb
jecxz
xchg
jmp
in
ss
into
shl
shl
sbb
out
fndisi(8087
shl
ret
out
mov
mov
lret
xor
ss
not
lock
aad
fcom
jecxz
mov
ljmp
ss
cmp
aaa
in
xor
xor
cmc
call
mov
lret
shl
int3
enter
cmp
int
fdivp
ljmp
mov
repnz
decb
out
loope
fcomi
iret
fidivl
iret
loope
out
cmp
cli
stc
sbb
fcom
std
iret
int
lret
aam
fld
ret
aaa
in
cmp
cmp
cmp
loopne
out
repnz
enter
cli
loope
into
cli
mov
lock
in
in
xor
ss
repnz
xor
cmp
fiadds
and
shl
vpmulhuw
cli
into
cmp
cmp
repz
fcmovnb
stc
test
cli
xchg
into
xor
cmp
icebp
fidivl
jmp
imul
jmp
in
idiv
test
rol
aad
enter
out
adcl
hlt
out
cmp
into
testb
sbb
and
mov
out
lea
hlt
ljmp
enter
test
fdivr
test
rcl
clc
roll
sub
out
hlt
jmp
call
shl
hlt
into
rol
call
mov
mov
in
xchg
fdivp
shl
into
jmp
cld
lret
fdivr
fiadds
cli
repnz
mov
adc
ficoml
rcl
rcr
cli
out
icebp
rcl
int3
in
in
addb
cmp
sub
cs
out
icebp
in
repnz
fcom
out
neg
test
out
cli
xchg
call
lret
icebp
cmp
cmc
push
fdivrp
ffree
test
into
ljmp
sti
lret
xlat
in
aad
fadds
ret
icebp
lock
jmp
test
sub
ret
xlat
enter
stc
fndisi(8087
test
xchg
fsubr
jmp
into
iret
faddp
lret
cmp
rcl
aam
cli
cmp
cmc
cli
out
loop
jmp
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
pushl
call
jmp
mov
mov
jmp
iret
ror
fstp
xlat
ret
dec
or
jae
lods
xor
jl
add
test
int
sar
iret
out
lret
lret
out
iret
lret
xor
std
enter
out
cmpb
jmp
sub
in
ret
xor
out
rol
out
shr
aam
repz
aad
fptan
aam
fisttps
rorl
out
ss
in
fdivr
in
aas
int
cld
sarb
xchg
div
lret
leave
fucomip
repz
ljmp
sti
cmp
cmc
fcmovnbe
aad
loope
xchg
xchg
iret
rcr
repnz
fucomi
cmp
hlt
call
rorb
jmp
ret
mov
repz
cmp
jmp
aas
iret
in
test
out
in
loop
xchg
repz
int
in
repnz
enter
in
cmc
roll
enter
xchg
or
call
jmp
neg
out
int
rol
fdivrl
and
cmpl
ljmp
loopne
sub
ret
call
call
hlt
in
aad
std
call
sti
repz
test
out
aas
cmp
ss
lds
int3
jecxz
aas
rcl
enter
int
enter
fadd
aad
std
ret
int
fmull
push
ret
xor
out
not
in
cli
sub
loopne
les
xchg
sti
test
in
mov
cld
jmp
iret
fcom
std
iret
out
fsubr
cld
sarl
ret
lea
rclb
hlt
xor
sti
lret
fdivl
in
cmp
test
imul
ret
out
mov
loopne
in
sub
out
out
int3
sar
clc
icebp
in
aad
xlat
in
fmul
enter
into
fcoml
out
ss
cmp
adc
shl
cli
aad
ret
ds
into
loope
mov
icebp
icebp
into
repnz
repnz
loopne
test
test
loopne
hlt
cli
fcmovne
shl
test
stc
in
in
fnstsw
leave
ds
in
in
out
aad
call
xchg
xchg
iret
in
in
fcmovne
icebp
std
std
rcl
div
aas
into
cmc
repz
out
orb
into
rcr
sarl
repz
div
cmp
out
cmc
aam
std
test
or
in
loope
aam
in
xor
fcmovnu
clc
jmp
sti
cli
rolb
stc
jmp
cld
jecxz
shl
loope
jmp
stc
in
repz
aaa
in
hlt
fcom
out
fcom
repz
jecxz
ret
test
fmull
mov
ljmp
shr
aad
cli
aad
fiaddl
in
fcmove
fimuls
in
ret
clc
in
sti
lock
iret
out
loop
shl
ds
mov
mov
in
test
loop
stc
in
stc
jmp
clc
out
into
cmp
int
shl
xchg
lret
mov
jmp
xchg
jecxz
sub
int
jmp
cmp
int
cmp
icebp
loopne
jmp
xlat
test
out
into
repz
icebp
xor
hlt
fstp
shl
mul
in
lret
mul
rolb
popl
xor
cs
hlt
das
cmc
xor
out
enter
fadd
filds
lret
fsubr
cmc
xchg
out
lds
jmp
xlat
fucomi
aam
fldl
into
cmp
leave
in
mov
out
dec
int
loope
sub
clc
ror
imul
adc
shr
cld
in
movb
cld
out
div
sub
cmc
hlt
shr
loope
aad
cmp
cld
vpsubusb
xlat
mov
out
test
mov
xor
fucomp
xor
cmp
repnz
and
fdivr
lock
loop
in
out
shrb
xor
xor
xor
int3
roll
cmp
enter
xchg
in
int
in
aam
jmp
aaa
ss
aas
in
fadd
lret
test
in
mov
jmp
aad
fidivrs
jecxz,pt
ret
mov
jmp
lret
aam
fstp
fisubrl
push
int3
jbe
xor
flds
jl
shl
sar
in
mov
mov
fmuls
xor
xor
repnz
enter
stc
out
repz
leave
xlat
loope
stc
mov
out
sub
cmc
xor
shl
clc
hlt
xorb
xor
out
imul
fmul
jmp
sti
lock
jmp
lock
aaa
lret
ret
ror
iret
repnz
clc
fmul
neg
ljmp
ljmp
hlt
shlb
into
xor
stc
icebp
clc
cmp
std
aam
mov
leave
sub
mov
cmc
icebp
sarl
xor
cmp
int3
into
leave
aas
fsubp
aaa
std
fcmovnu
repz
mov
mov
adc
int
xchg
int3
ror
fcmovne
lret
testb
jmp
ret
out
clc
sbb
in
shrb
not
int
cmp
xlat
cmp
cmp
cld
shl
mov
mov
jmp
imulb
into
ljmp
cmc
rcl
fxch
filds
xlat
fcmove
in
sbb
div
divb
out
into
out
jmp
cli
cmp
aam
into
test
mov
in
in
sub
shr
leave
lds
leave
addl
cmp
mov
lret
lock
aas
xor
out
xor
cli
out
jmp
in
cld
ret
fmul
add
lock
in
repnz
call
int
shr
cmc
xlat
cmp
and
leave
nop
xchg
jmp
shrb
ret
hlt
out
stc
aad
clc
cmp
fmul
add
neg
mov
fucomp
lock
fcmovnbe
fxch
jmp
fucom
shl
call
cmp
shl
ljmp
std
enter
out
xor
rcr
out
sbb
hlt
enter
iret
lock
loopne
ret
loopne
hlt
in
stc
jmp
repz
out
loope
ret
stc
lret
out
xchg
fdivrp
call
leave
fstp
cmp
sar
mul
fiadds
fsub
in
jmp
loopne
mov
jmp
xor
cmp
cmp
hlt
shl
std
lret
fndisi(8087
in
enter
xchg
into
mov
fcmovnu
icebp
leave
lret
repz
cmp
ret
frstpm(287
fucomip
call
aad
sub
sub
sti
cmp
fcomip
cmp
in
mov
clc
fcmovnu
lret
call
ljmp
lret
neg
cmc
call
xor
loopne
jecxz
out
jmp
lret
ret
das
aaa
xor
test
sti
cmp
out
out
ljmp
loop
in
mov
int3
leave
ret
hlt
cli
aam
cld
repnz
and
cmc
mov
xchg
lret
loop
mov
repnz
sti
clc
not
std
cmp
leave
sub
rcr
jecxz
call
std
out
mov
call
fdivs
cmp
clc
sar
mov
fdiv
mov
lret
fcoml
in
aam
icebp
int3
aad
fdivr
cmp
loope
hlt
fld
mov
ret
or
fmul
iret
adcl
xlat
iret
clc
enter
cli
sar
fcomp
add
loop
testb
xchg
xchg
lock
fxch
int
test
test
clc
inc
mov
lock
shl
jmp
icebp
fdivr
leave
rcr
hlt
repz
mov
fiaddl
in
shl
shl
xor
fld
fcmovnbe
cmp
fyl2xp1
sar
test
iret
sbb
mov
ffreep
in
lret
out
rcr
in
testb
xchg
jmp
inc
fildl
ret
jmp
loopne
aam
in
xchg
xchg
les
mov
jmp
leave
out
leave
cmp
fdivp
out
cmc
fidivrl
fcomp
fcmovnbe
faddl
mov
test
rcr
cmp
in
cmp
vpsraw
in
int
clc
decb
aad
out
shll
ror
in
repnz
aam
inc
add
or
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
jmp
iret
into
ret
ror
aad
addb
cs
sbb
jl
lret
jl
icebp
into
fdivrl
rol
xchg
in
fcmovnbe
out
cli
xchg
sar
xor
stc
aad
clc
xor
stc
sar
addb
fadds
leave
mov
repz
fsubr
lock
jmp
xchg
ret
cld
fnstsw
cli
xchg
out
out
in
lea
out
xor
fdivr
int
xor
xor
ret
cld
jecxz
mov
jmp
shl
int
clc
cmp
shl
ret
aaa
icebp
repz
ret
decb
test
in
shl
aad
stc
jmp
int
loope
sti
repnz
notrack
loop
lret
sbb
out
lret
out
repnz
lds
rcl
aad
aam
in
jmp
int
jmp
fmulp
into
stc
call
rcr
repnz
clc
loope
test
ret
fucomi
in
cmp
iret
test
out
out
out
fdiv
cmp
aad
adc
enter
out
nop
lock
loope
aad
out
sti
leave
out
xor
hlt
xrelease
loop
loop
or
call
in
cmp
fdivr
cli
aam
ljmp
int3
in
repnz
shl
xor
xor
cmp
leave
neg
repz
clc
fldl
rorb
repz
adcb
in
fucomp
fcmovnbe
cmc
cld
cld
cli
hlt
in
loop
clc
hlt
xlat
hlt
jmp
orl
into
ljmp
roll
rcl
jecxz
ret
loopne
in
test
and
out
xor
call
fsubp
shl
loopne
jmp
clc
lret
out
xchg
xor
imulb
xor
stc
ss
in
cmc
into
hlt
enter
jmp
ljmp
jecxz
cmc
in
xor
fnstsw
int
sbb
sbb
cli
test
enter
in
ljmp
cli
cmp
lret
fsub
cld
push
test
call
mov
in
in
std
loopne
ror
shll
cmp
hlt
fsin
lock
ljmp
hlt
std
cmp
fucomi
ret
lea
ss
call
int
fdivp
iret
stc
xor
cli
out
xlat
testb
ss
repnz
fidivrl
jmp
rol
fyl2xp1
jmp
aam
jecxz
out
out
mov
out
icebp
fnstenv
int
hlt
out
enter
fdivrs
jmp
fcmovnu
jmp
xchg
test
in
enter
icebp
cmp
std
test
cmc
fldz
jmp
ret
repz
adcl
cmp
sarb
loopne
cli
test
std
testl
test
jecxz
lret
shl
enter
lock
out
rol
fld
clc
out
into
iret
xchg
out
rol
out
clc
out
leave
iret
enter
repz
mul
cmp
loopne
mov
sti
ret
clc
repnz
jmp
aam
cmp
fst
xor
lret
lret
fstpt
ret
xchg
cli
out
lret
in
sbb
loope
cmp
aad
icebp
lock
fmul
fcomi
icebp
addl
jecxz
call
in
sub
shlb
cmc
cmpl
jecxz
enter
orb
xchg
int
repnz
out
cli
out
cmp
cmp
aas
rol
rcr
sti
test
xchg
jmp
xchg
test
loopne
ss
stc
cli
in
iret
cld
call
cmp
jecxz
rolb
call
mov
jmp
enter
icebp
div
ret
std
rcr
vpsubusw
mov
fucom
clc
jmp
out
aad
jecxz
iret
clc
clc
out
jmp
fdivr
neg
addl
mov
in
into
into
jmp
in
cmp
icebp
into
loop
add
std
jmp
mov
ss
xlat
shl
fucomip
ror
clc
lock
loop
std
lret
in
test
adc
add
add
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
pushl
pushl
push
pushl
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
mov
add
mov
orl
xor
sub
mov
xorl
add
movzwl
movl
mov
movl
movb
sbbl
lea
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
orl
mov
mov
xor
incl
sub
xorl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
jmp
ret
rcl
rol
aad
nop
push
pop
js
push
ss
jl
lret
jl
fsubp
fcmove
xorb
xor
enter
icebp
sti
shr
cmp
addb
lock
out
in
in
aad
aam
sar
shl
xlat
sar
cmp
out
fmulp
out
lret
int
mov
das
xor
lock
repnz
aaa
sarl
neg
fmulp
loop
loope
frndint
orb
out
ljmp
int
aad
jmp
cmp
cmp
in
leave
fmulp
out
fmul
nop
rcr
loope
loop
xor
cmc
lock
repnz
or
sarb
repnz
mov
fcomp
call
shlb
out
lret
fdivp
aad
ret
repz
mov
aam
int
fsub
leave
out
xchg
jmp
cs
in
xor
cmp
int
loope
repz
sbb
test
in
out
lock
xor
in
out
enter
sti
fcomi
repz
fcom
ffree
add
iret
lret
xchg
add
repz
out
in
repnz
cmc
test
out
movb
in
ljmp
out
leave
sti
call
lret
ss
std
ds
fisttpll
mov
sub
into
cmc
out
sub
sti
clc
enter
ror
fld
xlat
hlt
fcmovu
in
aam
fsubrp
jecxz
add
jmp
xlat
jmp
lret
rcr
cmp
std
in
loop
push
mov
sbb
test
int
test
imull
xor
lret
hlt
cmp
icebp
icebp
cmc
ds
out
inc
fcmovu
mov
cld
xchg
hlt
mov
lret
into
lret
fdivr
cmp
int3
cmp
test
out
out
and
notb
into
jmp
jecxz
repz
lret
lret
xor
ret
addb
in
test
mov
mov
leave
lock
jmp
in
lret
rcl
cmc
ljmp
cmp
leave
in
mov
lret
orl
out
xor
addb
xlat
xchg
mov
mov
xor
aam
xlat
leave
cli
cli
rol
in
fxtract
fildl
lret
or
iret
sub
xchg
call
rol
cmc
ss
std
cmp
in
jecxz
add
fldln2
aam
loop
call
jmp
out
in
out
fidivrl
xlat
imul
aam
out
loope
mov
clc
or
mov
in
xor
cs
xlat
fiadds
stc
icebp
mov
out
inc
leave
mov
rolb
jecxz
ret
cmp
std
cmp
iret
mov
out
enter
fcmovu
cld
test
jmp
aad
sti
fcomi
xor
cmp
faddl
fdivrp
int
int3
ljmp
into
xor
ss
call
sbb
rcr
idiv
lret
sbb
nop
iret
out
int3
loopne
in
shl
mov
ds
out
cmc
out
adc
xlat
testb
rcl
mov
les
out
out
out
icebp
fnstcw
fcmovne
ss
rcl
aas
mov
movl
div
rcl
into
call
int
fld
repnz
cmp
in
clc
fldl
int
das
ret
lock
rcl
push
int
sbb
cmp
out
ffreep
fucom
mov
test
xor
xor
icebp
std
repnz
cmp
out
in
jecxz
sti
mov
cmp
int
lock
test
shl
stc
in
int
fcmovu
in
out
cmp
clc
sar
cld
out
cld
test
into
xchg
rcl
ror
lret
in
fptan
xlat
imul
rol
out
sar
div
nop
in
cld
test
shl
aam
cld
rcr
cli
lock
out
mov
in
ljmp
xchg
cld
fmul
xor
cld
idiv
cmc
into
xlat
iret
ret
test
call
lret
ret
cmc
aad
repz
ss
lock
jmp
cmp
repnz
faddl
xchg
jmp
nop
loop
aad
ret
jmp
repz
movl
mov
mov
push
xor
mov
add
jmp
jmp
aad
shlb
lock
test
jl
add
clc
leave
aas
cmp
in
hlt
xor
push
hlt
imul
lds
xchg
mov
shll
aam
int3
xor
jmp
into
addl
cli
sti
std
call
ror
loop
rcr
rol
in
cld
and
rcl
adc
call
in
out
hlt
xor
iret
fdivr
out
cld
repz
fdivp
out
aam
fdivr
cli
ret
decb
cmc
cs
leave
div
fcomi
fcmovnu
xlat
cld
ds
fdiv
repnz
cld
int3
call
fcmove
call
aad
out
in
fdivrs
xlat
lret
xor
out
lock
jecxz
loop
testb
jecxz
divl
enter
xor
cmpl
jecxz
roll
xchg
nop
jmp
in
sub
fidivl
ror
std
icebp
loopne
jmp
in
icebp
enter
jecxz
xor
in
into
aas
fcomp
sub
out
rcl
fdivp
xlat
xlat
idiv
aam
lret
lock
neg
ds
cmp
div
fiadds
int
xchg
mov
loope
xor
int3
out
out
enter
test
enter
loop
ror
shlb
repz
fldlg2
cmp
stc
roll
aas
aad
fcom
enter
in
cli
xchg
loope
icebp
ljmp
lret
sar
aas
jecxz
std
fnsetpm(287
enter
in
add
jmp
in
out
jmp
hlt
out
div
ss
clc
fdivr
shl
cmc
call
cld
lret
divl
ljmp
fxch
fnstsw
loop
addb
in
mov
sub
repz
into
int3
sti
sar
shl
div
fdivrp
out
cld
fcos
lret
repz
loope
hlt
in
fucompp
xor
loopne
ret
cld
fcomip
mov
stc
in
ljmp
nop
cmc
jmp
shl
fcmovnbe
stc
cmp
in
cmp
frndint
shl
fimuls
loop
int
loope
xor
ljmp
cmp
lock
lock
repnz
in
int3
int
sub
in
out
rcl
ljmp
shl
cmp
mov
lea
in
out
cs
out
int
cmp
cmp
fcmovbe
fcomp
xchg
loope
or
mov
xor
lret
call
out
rolb
mov
loopne
ret
mov
jmp
jmp
xchg
int
lret
repnz
call
repz
cld
cld
mov
mov
mov
call
aam
stc
in
out
xor
in
or
int
sarb
addb
test
in
aas
das
divb
xor
aaa
cmp
jmp
cmp
sti
test
out
ljmp
call
lock
shl
lock
idivb
test
loop
jmp
or
in
out
mov
mul
stc
xor
fcomp
ds
ds
fcomp
xchg
mov
out
shl
stc
jmp
ljmp
fmulp
xchg
call
or
out
test
shl
cmp
lret
in
roll
test
hlt
in
sti
clc
int
jecxz
xchg
ftst
cmp
cli
out
in
jecxz
fnstsw
loop
sti
test
lret
xchg
xchg
xor
int3
out
jmp
ss
cmp
loope
xchg
jmp
jmp
fsub
in
out
and
cmc
xlat
rcl
leave
aam
cli
int
hlt
movl
out
std
shl
ds
repnz
ljmp
fldl
std
jmp
ljmp
aam
ljmp
shl
lret
test
rolb
in
ljmp
icebp
lock
div
ljmp
repz
testb
test
data16
add
rcl
aad
fcmovne
scas
push
mov
push
fimull
pop
jl
lret
jl
cld
lret
cld
ret
mov
xor
stc
iret
fxch
in
xor
adc
shl
test
jecxz
jecxz
loopne
in
mov
out
out
rcl
aaa
repz
xor
lret
shl
loopne
call
clc
jecxz
fdivr
jecxz
int3
jmp
cs
cmp
shl
fucomp
stc
cmp
enter
cli
test
icebp
rcl
in
loop
enter
leave
std
cmp
leave
rcr
ret
repnz
flds
loopne
enter
in
iret
iret
hlt
shl
out
cmpl
out
cmp
stc
mov
jecxz
test
mov
xchg
xor
loopne
sub
xor
hlt
cmp
shl
adc
add
jmp
fldl
in
idiv
std
cld
fldln2
cmc
in
neg
fdivr
rcl
test
orl
xchg
iret
loope
lock
jecxz
cmp
fildl
in
cmp
int3
rorl
ret
aam
ror
jmp
cmp
rcl
fld
std
jmp
lret
test
lret
mov
ljmp
aad
lock
mov
call
xchg
aam
lret
in
xlat
iret
cmp
call
ret
ror
sbb
lds
adc
imul
enter
in
leave
rcl
test
aas
sti
aas
sbb
fists
xchg
aas
stc
aaa
jecxz
repnz
filds
sti
in
cmp
in
popl
out
hlt
call
aaa
fcmovu
cmp
cmp
fcmovbe
add
ljmp
incb
xor
ret
aas
ret
lock
out
inc
jmp
fsubr
hlt
jmp
xor
in
xlat
cld
repz
lock
out
repnz
cld
cmp
mov
loop
int
aaa
sub
cmc
xor
lret
ljmp
test
loopne
jmp
aad
loop
fsubp
loope
rorl
in
cmp
enter
call
rol
xchg
addb
jmp
sub
xor
in
jmp
out
sti
clc
xchg
ret
out
fsub
ljmp
jmp
aad
iret
hlt
iret
cmpb
les
fmul
out
in
into
lea
cmp
fmul
fmul
xor
in
aam
out
cmp
fcmovne
loope
nop
shl
ror
xlat
cli
out
div
loopne
shl
xlat
fst
repnz
fimuls
ffreep
test
in
mov
ret
cmc
fsub
shl
stc
cmp
div
out
aam
stc
in
leave
fiaddl
cmc
aaa
in
iret
hlt
iret
cmp
out
cmp
ret
rorb
lock
xchg
in
sub
loopne
ss
jmp
ds
out
add
lret
cld
jmp
cmp
cmp
cmp
std
out
sar
not
sar
enter
icebp
repz
repnz
sub
xor
aas
cmp
repz
rcl
fldl
loopne
lret
repnz
aad
call
std
out
jmp
adc
fsub
loop
out
sub
in
hlt
xchg
jecxz
aam
out
out
clc
xor
clc
out
in
sbb
xchg
jmp
loopne
fisttpl
repz
xchg
xchg
xor
cmp
cmp
lret
jmp
fnstsw
sar
leave
fdivr
int
jmp
adcb
fcmovne
fnstenv
cmp
ret
sbb
xchg
and
jecxz
jecxz
repz
ret
out
in
cmp
cmp
call
aam
hlt
fdivr
in
int
fmulp
fdiv
int3
cmc
lret
jmp
in
neg
int
out
iret
out
shl
fcmovnb
mov
int3
mov
orb
enter
out
repnz
loopne
std
jecxz
loopne
shl
shl
cld
int
sti
test
cmp
cs
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
jmp
aad
xor
cltd
dec
pop
and
jl
add
int
repz
leave
lret
fiadds
call
cli
test
loop
jecxz
loopne
cs
fldcw
lock
int3
fdivrp
shl
jmp
sub
test
xlat
into
loopne
cmp
fcos
sti
call
ret
xchg
out
in
in
lock
lock
lret
fchs
hlt
sti
aam
cmp
cmp
fsubr
sti
in
adc
fimuls
std
leave
jecxz
in
repnz
aaa
into
call
cmp
xlat
xchg
mov
xchg
out
xor
jmp
sarb
out
aad
fdiv
aam
dec
fcomip
repnz
div
faddp
enter
test
fdiv
call
leave
cmp
aas
clc
sbb
movb
into
out
mov
out
int
ss
cmp
enter
lock
fadds
xchg
lret
xlat
clc
adc
aad
out
lret
cmp
cmp
cmp
call
call
jmp
mov
lret
into
mov
les
in
clc
iret
out
out
cmp
std
ror
int
fucom
into
stc
cld
cli
dec
fimull
std
in
icebp
ret
xor
aad
bnd
icebp
out
rcr
aam
fisttpll
fst
out
into
adcl
les
stc
leave
repz
into
lock
sti
rolb
filds
test
lret
repnz
jmp
rcl
iret
out
rol
fdivp
sti
loope
mov
fcos
fcmovu
call
out
call
cmp
cmp
ror
ret
cmc
ret
leave
std
fmul
fdiv
fsubp
fidivs
xor
hlt
in
aaa
xor
cmp
into
in
test
fdivp
mov
nop
loopne
mov
loopne
aad
aam
xor
into
iret
cmp
xor
leave
lret
leave
mov
adcb
xor
iret
cmc
bnd
loop
aam
lret
xchg
xor
int
jmp
leave
cmp
adc
cmp
sti
neg
test
test
nop
rcl
fbstp
cmc
in
shl
xor
xor
out
cmp
cmp
aas
cld
test
ds
loop
fmull
bnd
jmp
in
aad
loope
lret
idivl
jecxz
sar
sub
and
in
loope
hlt
xor
clc
ror
lock
sti
aad
xlat
lret
std
cmc
fmul
loop
mov
xchg
fidivs
xlat
in
aam
ror
fmul
cmp
fsubp
aam
stc
std
lret
test
out
int
das
in
xor
cmc
out
in
iret
loope
fiaddl
loopne
mov
loop
call
lret
mov
in
ror
stc
fcmovbe
call
cmp
cmp
lock
ret
fsub
fcomip
out
jecxz
in
mov
out
test
loop
sub
stc
das
test
lock
roll
iret
leave
icebp
sub
clc
lock
rol
cs
out
repnz
jecxz
into
cld
ret
in
in
call
enter
out
out
sti
lret
xor
aas
fmul
fptan
loopne
clc
xchg
clc
out
hlt
sti
add
shl
lret
ljmp
xor
lret
out
loop
aad
neg
cli
inc
cld
ljmp
repnz
fidivs
cmp
fdivrp
enter
cmc
loopne
rorl
cld
clc
mov
nop
out
in
aas
test
icebp
imul
fxch
aad
icebp
shl
sti
aad
mov
test
jmp
mov
jmp
ffree
out
sarl
lock
ret
clc
icebp
cmc
lret
sti
clc
cld
dec
fmuls
repz
out
lock
dec
rol
and
xchg
faddp
lret
aam
call
mov
fcmovne
cmp
lock
shl
loop
shr
loope
mov
out
lret
shlb
jecxz
fcomip
xor
aam
jecxz
rcl
xchg
leave
adc
jmp
mov
orb
icebp
aad
adc
jmp
add
add
jmp
ret
int
lret
sub
xor
out
fs
lret
jl
jmp
cld
std
call
mov
enter
repnz
in
aas
cmpl
test
test
cld
loope
ljmp
loop
iret
out
xor
fidivrl
ljmp
enter
int3
mov
in
fdivp
jecxz
fcmovbe
lret
loope
addl
bnd
jmp
lock
lret
int3
loope
in
jecxz
jmp
cmp
cmp
sub
leave
ret
ret
out
enter
into
loope
jmp
fucomip
ds
cld
aas
repz
aad
lret
clc
and
into
pop
shll
leave
hlt
in
divl
cmp
loopne
xlat
into
call
shl
hlt
mov
cld
lret
lret
lret
nop
out
xchg
in
ss
lock
xor
shl
aaa
clc
cld
loop
icebp
rolb
fcmovnb
imul
shl
cli
icebp
int
icebp
loopne
out
fsub
aaa
enter
xor
cld
rolb
out
lret
iret
test
std
in
mov
lret
ljmp
cmp
cld
decb
out
xor
xor
xor
jmp
in
cli
stc
cmp
jecxz
test
out
out
in
jecxz
jmp
jecxz
xor
call
enter
lock
repnz
xchg
fimull
xchg
in
xor
test
clc
xlat
cmp
jmp
in
fdivr
xlat
jecxz
aam
loopne
fldl
xlat
test
cld
jmp
shlb
fadds
loope
leave
fisttpll
shl
sti
fadd
cmp
fistpll
xlat
vpsllq
icebp
fst
flds
ljmp
icebp
aaa
aam
cmp
repnz
repz
out
in
sti
shr
aad
jecxz
inc
test
call
xor
int3
xor
fadd
shr
cld
add
xlat
into
clc
test
aad
std
out
in
mov
mov
out
fcom
xlat
aad
idiv
testl
xchg
int
and
aad
cmp
fdivr
stc
xor
movb
jmp
out
xor
in
rcl
cld
enter
loopne
ss
sar
clc
shr
loope
fiaddl
out
lret
out
xor
rcr
fdivs
shr
fadd
cld
test
fstp
fiaddl
xchg
icebp
enter
ljmp
out
aas
fcmovnu
jmp
int
mov
into
repnz
not
xor
std
leave
idivl
out
cmp
fildl
test
test
call
cmp
loope
aas
stc
jmp
clc
sti
shr
xchg
in
out
call
fyl2x
repz
fadds
movb
lret
int
or
loope
repz
cli
sti
in
enter
aam
loop
std
in
cmp
fxch
loope
lret
rcl
aaa
int
call
sarb
incl
aad
enter
mov
ret
rclb
enter
fdiv
lret
fistpll
cmp
addb
out
lds
lock
shr
fcmovnu
ds
cmp
xor
sbb
nop
xor
cmc
enter
stc
aam
int3
int
ret
rol
fcmovnb
enter
call
repz
jecxz
enter
fcmovnbe
fdivr
int3
fildl
call
out
cmp
mov
div
lret
lds
xlat
fcmovnu
lret
loop
cmp
fdivr
in
fcoml
xor
ret
ljmp
test
rol
sbb
mov
test
sub
in
out
repz
clc
fcomi
jmp
loope
loop
testl
out
rcl
call
fcmovu
cmp
xor
loope
leave
jecxz
testl
rorb
jmp
ds
int
int
int
mov
xor
xchg
test
jl
add
out
in
lret
xor
in
aam
in
out
repz
jecxz
out
cli
lret
ljmp
call
out
aad
icebp
cli
aad
rcl
in
neg
fsubr
lock
nop
fmulp
iret
in
cmp
cmp
adc
mov
aad
out
adc
loop
fdivp
into
aam
jmp
fidivrl
fcmovu
out
out
loope
aaa
iret
fpatan
rcl
sti
loop
in
addl
clc
jmp
out
jecxz
loope
xchg
fcomi
lret
jecxz
vpsubsw
loopne
int3
ror
lret
ror
cmp
xlat
cmc
aam
hlt
cli
aam
in
rcl
orb
enter
imul
into
int3
sub
ror
shr
in
repz
xlat
cmp
fcmovb
lret
in
loop
loopne
into
in
xlat
ss
cmp
aas
fidivrs
cli
cmp
call
in
out
fsub
loopne
mov
jecxz
shl
xor
repz
xor
cmc
xchg
fldl2t
test
test
into
mov
ror
repnz
in
cli
shl
int
lock
ret
lret
into
out
fisttpll
sub
cmp
out
vpaddq
fstp
aam
mov
std
std
xchg
lret
lret
jmp
xor
fsub
bnd
ror
into
and
sbb
in
in
aam
in
clc
ljmp
ret
aad
lret
enter
les
xchg
ret
int3
hlt
xbegin
clc
stc
out
cmp
enter
out
rol
cmp
in
cmc
int
aad
loope
int
test
iret
xlat
jecxz
fadd
enter
icebp
test
icebp
ljmp
in
xor
fsubr
clc
lret
cmp
jmp
mov
in
mov
call
fcomip
aaa
int3
ljmp
ds
les
enter
incb
pop
iret
ret
out
lret
sti
rcr
rcl
aam
mov
fcomip
xlat
mov
out
xchg
jecxz
xorb
in
iret
icebp
shll
xlat
ror
cmc
cmp
fstp
rcl
icebp
leave
sbb
test
lock
out
jecxz
hlt
rol
jmp
rcr
int3
cld
sar
cmp
ds
cmp
std
pop
fiadds
ds
out
leave
cmp
cli
fldl2e
fdivr
clc
loop
orl
out
xchg
fcomip
clc
xor
ror
aaa
sar
xor
out
out
mov
loope
jmp
out
mov
out
call
lock
jecxz
loopne
ret
addl
mov
xor
shl
int3
cmp
aad
idiv
cmp
roll
idiv
loop
lret
rcl
icebp
in
out
fcmove
lock
cmp
inc
vpsubq
in
loope
out
mov
in
out
repz
shll
fdivl
ss
rcr
shl
xlat
out
xchg
clc
ljmp
test
xchg
iret
in
cld
in
into
hlt
in
sar
addb
cld
ror
orb
ss
lret
neg
fcmovu
loope,pt
rol
cli
movl
std
mov
fcom
repz
lret
lret
push
stc
loop
in
sti
fsubr
loop
out
mov
into
cli
call
ret
out
divb
ljmp
loope
call
jmp
jmp
xor
out
xor
in
aaa
call
icebp
cld
addl
cli
and
test
into
in
in
aam
rol
loop
jmp
fldl
test
lret
mov
sub
fnop
std
xlat
fcomp
cmp
in
lock
out
repnz
out
into
fmulp
cmc
cmp
cld
cmp
rcl
fucomi
in
add
bnd
lds
orl
enter
rcl
mov
nop
xor
add
mov
jmp
rcl
ret
fst
xlat
inc
dec
push
lods
add
jl
lret
jl
adc
ret
in
clc
xchg
call
mov
int
div
cmp
lret
fmul
into
ds
stc
fcmovnb
xlat
sti
mov
mov
mov
loop
icebp
cmp
xor
aaa
int3
sar
cmp
sbb
loopne
add
rol
in
int3
call
ret
in
hlt
xor
stc
out
loopne
ret
sar
lds
fmulp
xchg
out
xor
fmulp
out
shlb
into
ljmp
fcmovb
sar
xor
incb
repnz
cld
rol
loope
aam
sarl
faddp
div
xor
hlt
test
cli
in
int
leave
fdiv
jecxz
xlat
sub
jecxz
cmp
push
neg
aas
shr
cli
lock
adc
fadd
out
call
push
rcl
ret
cmp
cmp
rcl
stc
cld
in
jecxz
loop
repnz
cmp
xlat
lret
cmp
cmpl
lret
add
repz
jmp
repz
ror
fcom
repnz
rolb
leave
jmp
std
in
int3
jmp
sub
loop
fld1
repz
cmp
cmp
loopne
shl
fldl
addl
into
in
les
aam
hlt
jmp
or
xrelease
xchg
ljmp
xor
loope
icebp
aam
cli
xor
cmp
roll
int3
nop
sar
mov
shr
cld
xlat
clc
clc
aas
xlat
out
in
xchg
fmulp
xlat
cli
fmull
xor
repz
out
jmp
aad
into
neg
in
cmp
leave
stc
leave
ljmp
roll
in
out
int3
std
cmp
rol
cld
flds
hlt
orb
in
jecxz
int3
jmp
iret
shll
into
fnstsw
cld
test
cli
leave
ljmp
int3
jmp
subb
out
aam
leave
out
iret
lock
aam
jecxz
cmp
mov
xchg
fiadds
cmp
xor
rcl
iret
icebp
sub
int3
xchg
ret
mov
call
xor
shl
ljmp
and
loopne
ret
in
leave
call
shl
ror
xlat
xor
fcmovnbe
das
cmc
leave
std
lock
icebp
shl
fucomp
in
xlat
std
sub
out
repz
in
xlat
fcomp
loopne
cmp
fsubr
rol
stc
jmp
movl
aaa
cmp
aam
int3
ljmp
aas
div
jecxz
jmp
xor
repnz
lea
xor
icebp
shr
icebp
shl
call
sbb
rcr
out
mov
aas
lret
in
stc
test
cmp
hlt
fldl
fcomp
cmp
imul
cmc
dec
aam
sub
in
xor
sar
clc
hlt
ljmp
aad
loopne
dec
loope
roll
rcl
cmp
lret
out
out
cmp
loope
fdivp
cmc
fcmovnu
cmc
shr
test
mov
int
aam
cli
jmp
lret
rcl
rcr
faddl
mov
sbb
in
in
into
jmp
lret
xlat
iret
lock
cmp
xor
loop
fsub
out
cld
clc
or
fmulp
leave
fld
shl
leave
out
jmp
shr
cld
icebp
orb
out
in
mov
in
out
imul
cld
cmp
jmp
cli
fsub
cli
xbegin
testb
mov
rcl
loope
in
rcr
fst
int
out
ret
stc
loop
ret
cli
aam
mov
or
jecxz
cli
shl
cmp
lock
div
xchg
fnstcw
leave
fadd
xchg
out
loope
shlb
sti
ljmp
lret
ret
repz
sar
sbb
loopne
cld
stc
stc
rorl
div
rcl
shr
not
sti
in
sar
in
stc
shl
cmc
fiaddl
jmp
rorb
inc
hlt
jmp
aad
enter
fsts
mov
jl
lret
jl
mov
fadd
out
shr
leave
test
out
aam
sti
aad
iret
ret
ret
fdivr
rol
fiaddl
jmp
fstl
xor
fadd
out
fneni(8087
neg
idiv
xchg
fcmovbe
call
jecxz
ficoml
loop
aad
xor
mul
cli
aas
aas
jecxz
rolb
movl
ret
fstpt
int3
fcom
sti
out
loop
fld
rol
hlt
lret
lret
rorb
in
in
icebp
vcvtdq2pd
test
loope
fildl
call
int
fst
out
das
in
aad
int3
enter
out
iret
aad
in
cmp
in
out
in
out
in
and
xchg
repz
fcmovnb
xor
xlat
neg
iret
aas
sarl
stc
fcomi
in
jmp
mov
in
shr
les
fstp
rcr
shl
into
in
rolb
loopne
into
in
lock
call
in
cmp
out
cmc
cmp
incl
leave
testb
iret
test
int
out
repnz
cmp
incl
lea
sti
loope
in
int
stc
ret
leave
cmp
call
div
call
shl
leave
ret
cld
loop
ljmp
out
xor
cmp
in
cmp
int3
iret
loope
in
jecxz
addl
orl
cld
sarb
cmp
fcomi
test
rol
lret
popl
mov
jmp
loop
xor
stc
divb
cmp
stc
rcl
cmc
hlt
fsubrp
jmp
out
leave
shr
iret
cld
xchg
in
jmp
cmc
shr
cmp
mov
mov
flds
movl
cmp
fcmovne
loop
fcmovnb
xchg
repnz
xchg
out
rcl
leave
cs
enter
iret
rolb
aam
test
out
lret
xlat
xor
cli
sarl
aad
repz
call
fcmovb
xchg
ss
iret
out
fdivr
repz
test
cmc
ret
fdivr
addl
lret
fists
out
xor
enter
repz
icebp
orb
lret
shr
mov
xchg
xchg
xor
neg
cmp
xor
idiv
repz
test
fstpt
mov
jmp
fmuls
xor
hlt
ss
xor
push
cmp
stc
test
jmp
hlt
sub
into
out
lock
xor
sub
hlt
enter
cld
repz
rcr
aam
int
lret
call
jmp
aaa
repz
cmp
cli
hlt
ret
ror
lock
xlat
ss
lock
fcmovnbe
aad
cmp
vpor
mov
fsqrt
test
int3
in
in
aad
out
cmp
cmp
cmp
movl
mov
out
in
out
rcr
fcmove
hlt
icebp
cld
fcmovb
shl
cld
rolb
test
int3
out
repnz
lock
in
lret
int
cmp
jmp
loop
xchg
out
icebp
jmp
out
xor
ljmp
shl
cmp
repnz
jecxz
clc
lret
cld
test
in
repnz
loopne
aaa
fsub
xlat
lock
int
rol
out
clc
cmc
stc
imul
jmp
xchg
jecxz
cmp
xlat
cmp
in
rcl
ret
shl
neg
icebp
addl
cs
fldl2e
out
mov
lret
fnsetpm(287
aad
mov
jmp
into
cli
out
out
out
out
xor
out
xor
ss
aad
sti
fiadds
mov
mov
shr
ds
xor
int3
cld
xor
cmp
jecxz
stc
xor
mul
ljmp
loop
fsubrp
out
iret
aad
icebp
fpatan
inc
jmp
lret
xlat
aas
fst
fcmovne
mov
imul
lret
jl
sti
int3
in
fdiv
xchg
fsubp
ljmp
das
rol
into
out
cs
cmp
fcmovnbe
icebp
xlat
ds
stc
sti
in
mov
shl
ret
ret
hlt
xor
repnz
xor
fdivr
loop
shl
cmp
out
out
mov
mov
hlt
ret
lret
stc
jmp
fsubrp
cmp
out
aam
div
repnz
int3
fimull
ljmp
fcmovnbe
hlt
cmp
hlt
ret
loop
cmp
xchg
xchg
ljmp
iret
jmp
aaa
clc
cmp
clc
sarb
loope
sbb
ret
in
mov
loop
xor
out
rcr
cmp
iret
clc
fcmovne
into
repnz
ret
std
test
ret
imul
mov
aaa
lock
repnz
enter
cmp
sti
sar
hlt
leave
test
in
sti
sub
jmp
ret
xor
fsubr
lock
cmp
fadd
loop
out
in
fildl
cmc
ret
in
cmp
cld
fdiv
sar
cmp
shl
std
jecxz
stc
cld
lock
repnz
sub
jmp
ret
out
cmp
lock
in
lock
cmp
shl
mul
aad
in
cmp
repz
mov
das
xlat
in
clc
in
cmc
lret
aam
aas
loop
addl
fimuls
out
and
cmp
divb
ss
aas
std
jecxz
test
sti
fcmovu
mov
add
mov
fmuls
leave
int
aaa
idivb
cmc
out
sub
xchg
rol
sar
in
mov
ljmp
lds
shr
xor
int3
cmp
int3
out
decl
in
test
loope
in
ret
xor
aam
cmp
repnz
int
fsubp
call
xor
enter
cld
cmp
ds
in
repnz
in
in
out
out
in
in
into
repnz
loope
lock
add
jecxz
in
call
iret
xlat
fsubr
sti
sarb
cmp
loopne
loopne
fcom
cld
cmp
lret
out
in
rorb
ret
aam
aaa
std
std
shl
cmc
fcos
in
loopne
rcr
repz
in
jecxz
in
rcl
loopne
xor
sti
neg
icebp
loope
sti
xor
fucomp
jmp
stc
leave
mov
jmp
xor
ror
cli
cld
in
icebp
aam
cli
cmp
cli
add
loope
aad
out
fmuls
xor
xor
lds
cmp
out
loope
ret
out
fcmovnb
hlt
idiv
clc
incl
out
stc
sti
out
std
iret
cmp
div
cmp
mul
clc
shl
jecxz
xlat
ljmp
mov
jecxz
ret
fcmove
cli
clc
enter
in
or
adc
mov
out
iret
icebp
cld
sub
ljmp
cmp
inc
rorl
out
in
sar
out
rol
cs
iret
stc
sti
xor
adc
test
ljmp
in
and
cmp
shl
fdivr
cmp
neg
in
fcmovnb
call
loopne
fucomi
incb
sub
int
aad
aam
repnz
rcl
rcr
ret
fcmovu
out
call
ljmp
pushl
out
aad
idiv
in
jmp
mov
orl
not
in
out
xor
vpmovmskb
out
cmp
icebp
addb
out
test
lret
shrb
icebp
repz
hlt
ljmp
test
repnz
clc
icebp
repz
divb
xlat
in
ss
loopne
cmp
ds
jmp
movl
lret
cmp
imul
hlt
cmc
xor
iret
loope
or
test
div
int3
and
int3
filds
xor
xor
in
cli
cmc
repnz
int3
xor
fisttpl
rorb
test
lcall
jmp
int
into
fcmove
fst
aam
lods
push
loope
xor
je
jl
lret
jl
faddl
and
cmp
out
cmp
aam
leave
fidivrs
add
loopne
inc
loop
enter
loop
into
mov
into
xchg
out
imul
xor
icebp
lock
idivl
cli
int
xorb
rorl
ffree
xchg
lret
mov
call
int
cmp
cmp
cld
in
roll
clc
std
in
out
les
out
cmp
rcr
out
in
ljmp
rcr
clc
test
ret
loopne
repz
lock
jmp
out
ds
cli
aas
fcmovne
enter
xchg
test
fsub
xor
int3
cmp
cmp
stc
cmp
into
stc
std
rcr
aam
lret
jmp
test
lret
fildl
xor
ror
aam
out
enter
aad
cmp
cmc
test
enter
enter
loopne
in
fcomi
fdivrl
jmp
xor
cmpb
mov
loop
addb
icebp
repnz
shl
cmp
sarb
repnz
in
repz
mov
out
loope
out
addb
cmc
out
iret
lret
loopne
rcl
lock
stc
in
loop
loop
orb
sarl
call
fxch
rcl
cmpl
mov
loope
leave
mov
jmp
loope
xchg
shl
int
cli
stc
in
cmp
ss
cmp
cmp
lret
out
cld
jecxz
rcl
xor
fdivs
leave
out
aaa
aaa
cmp
xor
sbb
repnz
loope
loope
sbb
lret
ljmp
icebp
lret
cmc
fcmove
std
xchg
int
repz
lock
repnz
into
ret
lock
fnstsw
cmc
ljmp
testb
jecxz
mov
hlt
in
loopne
sar
jmp
cmp
cmc
test
rcr
xchg
loopne
repz
out
neg
aam
sti
stc
out
cmp
ljmp
vpaddb
leave
in
addl
out
hlt
aas
out
fadds
xlat
hlt
loop
mov
nop
mov
mov
in
rcl
jmp
rcr
fcmovne
ret
stc
sbb
loopne
icebp
xchg
ljmp
call
into
lock
in
xlat
loope
leave
cld
test
iret
xchg
cmc
test
jecxz
ret
repnz
clc
hlt
cli
fmul
iret
loopne
fdivrs
cmp
jmp
in
testb
rcl
in
xor
fsubrp
rcl
sti
lock
rolb
fstp
sti
dec
addb
xor
aad
hlt
out
aad
testl
loope
jmp
test
inc
hlt
ss
sub
lock
hlt
cmp
cmp
ret
call
jecxz
xchg
lock
out
xor
stc
out
fcmovu
aam
idivl
hlt
loopne
shl
push
xchg
in
xchg
call
jmp
in
aad
xlat
ljmp
fdivr
loope
div
stc
fimull
into
flds
ds
fdivr
into
std
cmp
jmp
rcl
fcmovnu
fmull
mov
addb
loop
cmp
xor
imul
cld
cmp
loop
ss
rcr
ffreep
add
mov
xchg
into
shl
xor
loop
in
out
lock
sar
shl
fdivrp
rorl
into
ljmp
fdiv
stc
repnz
icebp
rcr
repnz
loope
fdivr
ds
test
out
cli
sub
in
xchg
das
sub
shl
hlt
int3
xor
fildl
aas
fcmovnb
shl
cld
jecxz
mov
call
ljmp
cmp
loopne
fsub
aad
fcmovb
mov
jmp
addb
xlat
idiv
int
xor
aam
icebp
fcmovu
cmp
fdivrp
shl
stc
jmp
in
orl
aam
call
fldl
cmc
jecxz
test
std
out
incl
aam
aad
sub
inc
clc
mov
xor
add
mov
mov
xor
add
mov
mov
jmp
sarl
rcr
ret
fucomp
sub
xchg
ret
jl
add
int3
out
call
fdivrl
enter
call
int3
shl
das
out
ljmp
in
xlat
jmp
idiv
hlt
ffree
xchg
jmp
cld
fninit
into
in
rclb
xor
cmp
ret
std
stc
aad
xchg
mov
cmp
call
jecxz
iret
cld
std
test
jmp
decb
fdiv
jmp
stc
xor
repnz
cmp
cli
aas
loop
loopne
xchg
orl
int
shl
xchg
loope
fprem
mul
icebp
das
repz
cmp
cld
loopne
xlat
shr
ret
not
xchg
xchg
loope
ds
out
in
sti
xlat
hlt
xor
sbb
loopne
loopne
loop
mov
mov
aam
cmc
lret
xlat
lret
iret
iret
jmp
std
clc
out
test
mul
loope
fucomi
ljmp
aad
neg
std
cli
iret
xor
ljmp
clc
call
ret
mov
aaa
int3
lret
aam
into
fidivrl
xor
aas
aam
xchg
fcomip
call
in
lea
out
in
ljmp
xchg
roll
jmp
lret
mov
xor
ret
cmp
cmc
cli
in
fcmovbe
in
fsub
aam
ret
addb
in
in
ret
loop
ss
xlat
adc
sbb
rorb
loope
test
rclb
aaa
fstp
icebp
idiv
xlat
addb
sar
loope
fiadds
rcr
sub
clc
aam
leave
cmp
cmp
fdiv
rcr
cld
rcr
mov
in
clc
mov
out
jmp
ror
xor
ljmp
out
fidivrs
leave
cld
les
test
in
int3
int3
int3
ret
int
add
into
test
and
loopne
lds
xchg
cld
sub
xor
cmp
loope
std
fcmovne
fcomp
call
loop
lock
std
in
aam
lds
sti
cmp
out
out
ss
cld
jmp
lock
fcmovu
test
mov
fsub
int3
mov
sub
ss
hlt
aaa
sti
fdiv
in
fdivp
in
loopne
adc
std
test
sub
lock
ds
iret
in
leave
cmp
ds
into
loop
sar
cmc
in
cmc
clc
loopne
and
icebp
ljmp
xlat
stc
int3
icebp
fldln2
rcl
sarb
add
mov
fxch
cmp
lock
cmpb
aad
in
aam
out
call
incl
sti
in
lret
stc
xchg
xchg
shr
clc
iret
jmp
in
fcom
shl
xor
cmp
shr
leave
ljmp
sub
int
in
lock
aad
lret
ret
ds
fcomp
call
incl
std
int3
nop
cmc
in
ret
sar
into
xor
aam
jecxz
in
into
aas
shl
repnz
xchg
lea
icebp
aaa
shl
aad
sti
cmp
out
out
cld
std
mov
jmp
xchg
add
repnz
int3
aas
rcl
aam
adc
ret
stc
mov
iret
repz
icebp
xchg
div
xor
icebp
cli
sarl
out
jecxz
fdivrl
rcr
loopne
test
fdivr
call
aad
jecxz
aam
xor
shr
in
aaa
test
loope
xlat
fcomip
sti
and
jecxz
idiv
out
ret
repz
leave
hlt
rcr
into
jmp
repz
cmc
fiadds
aas
cli
cmp
out
icebp
mov
shl
loop
fsubr
into
aaa
fxtract
loope
sbb
clc
out
faddl
out
xchg
ljmp
icebp
repnz
cmp
cli
vpand
xchg
mov
or
iret
hlt
out
ror
xlat
out
icebp
into
xor
xlat
into
sar
out
enter
neg
mov
test
xor
xor
xlat
loope
int
cli
add
xlat
jmp
jmp
ror
ds
ret
or
fnstsw
push
nop
add
lret
jl
fadd
aam
ljmp
shl
rol
stc
cmp
fcmovbe
jmp
loopne
ret
and
call
in
rclb
enter
int
repz
out
ljmp
stc
ds
mov
cli
mov
ds
enter
cmp
call
xlat
jecxz
std
xchg
loope
xchg
popl
and
repz
cmp
fmul
in
sarl
xchg
incb
jmp
in
xor
in
enter
fld1
int3
hlt
aad
idivl
jmp
test
movl
in
aaa
stc
jmp
icebp
cmpb
cmp
stc
xchg
addl
loopne
xchg
in
out
out
int3
into
div
loope
loope
clc
loope
fsubr
test
jmp
xchg
fsubr
mov
mov
iret
xor
neg
out
repz
idiv
fcmovnb
lret
cli
sbb
lea
int3
shl
aaa
in
aam
in
fsub
cmc
aad
ret
shl
sbb
lret
lret
icebp
xchg
fisttps
aaa
stc
hlt
out
xor
ds
rcr
hlt
dec
xlat
out
std
or
repnz
aad
xlat
jecxz
cmp
in
jmp
fsubp
cmp
cmc
out
testl
nop
adc
out
ror
xor
std
in
cmp
lret
xor
cmp
hlt
mov
out
fxch
mov
xchg
stc
lds
mov
cmp
stc
neg
sar
and
sbb
cmc
jmp
jmp
xor
cmp
sub
mov
repz
rcl
sub
int3
shl
call
loop
aad
lds
cmp
int3
adcb
neg
into
cs
xor
addl
fdivrp
loope
cmc
into
sub
int3
enter
icebp
sbb
cld
cmc
lock
incl
xor
in
out
loop
int3
aad
cld
ror
sbb
out
in
fcmovne
shr
loopne
jmp
xor
ljmp
fdivs
sub
call
clc
icebp
iret
out
test
icebp
leave
aad
fxch
hlt
lock
call
rol
repz
mov
clc
call
xor
xor
xor
in
cli
xor
cmpb
and
clc
in
in
icebp
in
fucomp
jmp
xor
out
fdiv
fcmovnb
sti
ror
out
xor
in
icebp
sbb
sbb
stc
xor
repz
enter
aam
std
hlt
shr
loop
mov
in
in
xchg
shl
aam
cli
ror
cmp
out
in
cli
out
add
xlat
jecxz
not
stc
out
sti
out
lea
out
icebp
xor
aad
std
shlb
sbb
std
ss
cmp
jmp
mov
jmp
cld
int
in
repz
shl
out
std
out
xlat
loope
testl
fyl2xp1
sti
in
call
sub
stc
mov
fdivr
icebp
aaa
out
cld
testb
call
loop
leave
ljmp
test
call
ror
loopne
aad
repnz
fcmovnu
div
enter
mov
loop
in
out
in
cmc
repnz
out
aad
icebp
out
cmp
cmp
fsubrp
aam
in
jmp
iret
xchg
in
fnop
loop
sar
fcomip
cmc
clc
out
adc
fildl
in
or
xchg
out
xchg
xor
out
aad
lret
rol
ror
cmp
neg
out
cmp
sti
fmulp
test
mov
ror
into
aam
out
fdiv
sbb
rcl
div
cld
test
and
std
xchg
in
ror
out
cmc
out
cmp
out
cmp
lret
xor
idivb
stc
ret
xchg
aam
in
test
ljmp
int3
ss
loope
lock
aas
loopne
aam
in
cli
fabs
out
sti
iret
fdivr
int3
aam
mov
cmp
je
mov
mov
mov
jmp
lret
aam
fcomp
aad
andb
jle
aaa
pop
push
jg
lret
jl
lret
fcmovb
in
fdivp
jmp
aad
rcr
cmc
in
jecxz
jecxz
cmp
aam
repz
imulb
fcomip
sarb
repz
adc
cld
aad
loopne
out
loope
out
call
fldl
enter
out
clc
neg
lock
lds
loop
fsubr
into
mov
xor
out
repz
sub
xor
shl
in
cli
fsubr
out
in
xchg
mov
in
rol
sarl
div
cli
fucomp
repz
rorl
xchg
repz
xor
xor
test
cmp
fcomi
fmul
jmp
in
in
dec
aad
jmp
in
fsubr
into
lret
out
rol
aas
call
clc
in
lret
fcmovbe
out
cs
clc
out
int
icebp
call
cmc
ret
fcos
xlat
hlt
xlat
add
out
out
lret
xchg
iret
lret
iret
cmp
in
leave
enter
int
aas
out
shl
enter
out
lock
div
sar
shr
repnz
cmp
sar
flds
lret
xchg
lock
aam
aaa
xor
std
fcomip
call
aas
out
cli
lock
loopne
lret
lock
hlt
shl
aam
cmp
fcom
lock
in
ffreep
cli
cmp
rol
in
hlt
fiaddl
out
ljmp
in
hlt
fsubp
filds
les
ljmp
in
in
aaa
fucomi
jmp
icebp
xor
cld
stc
les
ljmp
xor
ljmp
iret
fcmovnu
fcmovnu
sar
fbstp
sbb
ret
cmpb
clc
jmp
call
shl
icebp
xor
cmc
cli
cmp
cmp
cmc
fcomi
fsub
cmp
cld
into
xchg
fdivr
repz
repnz
in
fadd
jmp
aad
aad
ret
rorl
faddp
shr
lret
into
test
loopne
aas
xlat
mul
hlt
out
sti
in
stc
nop
into
jmp
rolb
imulb
in
icebp
leave
cmp
clc
repz
aad
lret
stc
mov
out
addb
call
into
in
into
add
jecxz
icebp
xchg
ret
fcomp
test
clc
test
test
iret
cmp
ss
out
cmp
cmp
cld
ret
test
iret
cld
jmp
div
enter
xor
xor
shl
rcr
cmc
addl
or
xchg
iret
hlt
out
xor
ljmp
loop
shl
loop
in
fsubrp
out
mov
repnz
lock
fxch
aas
int3
adc
xorb
clc
shl
loope
fldl
fstp
in
ret
cmp
ss
lret
std
cmc
in
loop
rcr
aam
cmp
out
or
test
sub
int3
lret
test
flds
mov
cli
fiaddl
sub
rcr
int
fsub
std
cmp
aaa
ds
ror
in
out
lock
lea
xor
leave
fmul
lock
repz
loop
in
fadds
xchg
mov
sub
out
xor
xor
aam
fcmovnb
idiv
stc
idivb
repnz
clc
repz
mov
mov
std
test
xor
loop
rol
ret
in
cmp
out
cli
shl
jecxz
cmp
out
jmp
std
icebp
lret
in
rol
sub
cmc
sub
cmp
flds
idiv
iret
leave
ret
dec
shr
fxch
repz
incb
fdiv
mov
fcmovb
fmull
rolb
xor
lock
xor
into
jmp
cli
cli
iret
ret
cli
rcr
mov
fucom
jmp
cmc
test
repnz
in
rol
jmp
fabs
lock
cli
fucomi
in
fucomip
orl
in
rcr
sar
ret
cmp
jmp
mov
fcmovnb
in
mov
cmp
sub
jg
lret
jl
les
test
flds
in
ss
repz
shl
cmp
testl
iret
jecxz
adc
icebp
fld
in
xlat
cmc
into
ljmp
leave
stc
hlt
ret
in
xchg
cmc
xchg
int3
ds
lock
shr
call
cmp
fyl2xp1
sti
call
mov
std
lock
ds
xor
idivl
cmp
and
call
loope
lret
add
cli
cld
and
cmc
out
ror
out
sti
aam
loope
mul
loopne
and
and
mov
test
test
lret
shrl
lock
ss
xlat
cli
neg
idivl
fadds
xchg
in
ret
loop
xor
out
in
in
fnsave
test
fninit
lock
clc
call
fsubrp
out
ret
enter
int
ds
out
stc
cli
loopne
jmp
and
xor
rcr
out
sub
jmp
lret
sti
fsub
mov
fmul
fmulp
fucomp
nop
into
fldl
in
aad
fidivs
jmp
sub
stc
out
cli
xor
sbb
mov
fcmovnbe
loopne
hlt
fsubr
out
int
xlat
cld
fincstp
cmp
aas
repz
fstp
stc
std
cmc
out
fisttps
xchg
shlb
cmp
sarb
out
jmp
cmc
icebp
bnd
ret
jmp
vmovq
iret
std
jmp
in
iret
aam
sarb
cmpl
aam
push
in
out
sub
filds
lock
cmp
fucomip
iret
sar
clc
in
cli
in
xchg
std
lret
sub
fmul
sub
icebp
into
int3
fidivrl
std
fdiv
not
faddp
xchg
stc
cld
out
and
in
fadd
ret
sarb
loope
loop
out
sar
ljmp
test
in
iret
into
lret
ret
loop
enter
clc
loopne
test
repz
rcl
mov
xchg
lea
fxch
shl
enter
aad
clc
rcr
stc
out
mov
ret
icebp
leave
call
aad
xor
shr
xor
sarl
lock
jmp
xchg
int3
into
out
test
jecxz
mov
cld
jmp
roll
test
out
movl
loop
sarb
cmc
cmc
ss
xlat
fcmovb
repz
aad
leave
jecxz
xchg
ficoml
out
xchg
mul
ret
in
out
lock
cmp
idiv
orl
xor
in
ss
cmp
test
in
std
ret
aas
cmc
test
addb
lock
into
mov
ret
int3
jmp
fcom
xor
in
aam
div
stc
lret
fucomi
jmp
mov
icebp
cmp
xor
cmp
xor
test
cld
loop
stc
test
int
rcl
ret
xor
iret
ret
std
loope
stc
ret
sar
jmp
in
out
cmc
jmp
lret
lock
xor
xor
repnz
cmp
loope
test
cli
leave
cmp
repz
jecxz
xor
stc
int
aad
int3
cmp
cmp
sti
xlat
ss
aas
test
stc
flds
call
fpatan
sti
hlt
shr
out
std
not
xchg
aam
jmp
xchg
loopne
fiaddl
iret
aad
cmc
hlt
loopne
ret
add
cld
lret
int3
leave
out
ret
shl
repz
fcomi
in
imulb
aaa
cmp
cmp
leave
std
cmp
fildl
in
mov
int
aad
xlat
aam
cmp
cli
cmp
filds
enter
in
mov
rorl
xor
aad
fcmove
cld
loope
int3
lock
fstp
jmp
mov
fcomp
faddp
jecxz
test
shrb
aam
in
iret
fucomi
repz
xchg
mov
rcr
out
jmp
cmc
jne
mov
mov
movsbl
xor
jmp
rcl
rcr
int
add
cli
adc
lret
jl
lret
ss
cmp
aas
std
cmp
adc
rol
xchg
cld
shr
out
repz
iret
ror
ss
xor
fldl
sti
in
idiv
fcmovne
icebp
jmp
ljmp
aas
std
test
lock
rol
aam
jmp
and
xchg
out
call
cmp
not
cmp
ret
test
cld
jmp
in
fisttps
divl
enter
hlt
aam
cmp
cmpb
in
ds
xlat
fsubr
leave
out
xchg
out
lret
out
out
int
enter
lret
ror
sti
repnz
repz
cli
stc
sar
loopne
xchg
mov
out
faddl
leave
xor
enter
ss
fidivrs
fsub
stc
add
out
leave
loope
enter
ljmp
out
icebp
lds
ljmp
jmp
repnz
int
repnz
mov
in
fdivs
cmp
loopne
cmc
cmp
fildl
mov
mov
xchg
test
xlat
out
not
fcmove
int
xor
aas
xchg
adc
testl
hlt
ss
leave
jmp
divb
lret
fdivp
test
aad
and
std
shr
test
jmp
aaa
loopne
ljmp
sti
std
test
xchg
call
sub
fists
ss
sar
out
idiv
xchg
stc
out
fsub
xchg
into
enter
out
nop
int3
xor
leave
loop
sar
cmp
cmp
fdiv
loopne
sbb
cmc
ret
test
std
out
call
jmp
loopne
ror
aas
cmp
mov
std
lds
xchg
nop
rol
cs
jmp
sti
in
imul
jmp
xlat
test
aad
test
or
out
sub
sub
cmp
cmp
addl
xlat
hlt
test
fmul
cli
loopne
loop
in
hlt
out
cmp
fmul
ror
xlat
jecxz
xlat
std
fldl
rorl
leave
xor
repz
fdivrl
sar
in
cmp
clc
out
lds
out
mov
ret
ror
fcmovnbe
std
iret
lret
cmp
repz
in
leave
ret
or
fldln2
fldl
xor
ljmp
repz
fstp
fildl
test
fmulp
out
aam
les
aaa
xor
lret
cli
cld
in
out
cld
ret
std
test
in
int
mov
iret
call
ds
cmp
out
fucomip
mov
test
loopne
mov
addb
fincstp
leave
aaa
xlat
cmp
in
shlb
rol
neg
loope
sti
mov
clc
lret
xchg
loopne
rcl
xlat
icebp
xor
cmc
cmp
cld
std
fsub
std
fdiv
fst
xlat
ljmp
xchg
imul
repnz
hlt
ss
in
imul
fidivrs
test
loopne
mov
xchg
mov
filds
shl
xor
into
cld
loopne
idivb
cli
inc
repz
std
cld
fprem
nop
xchg
test
shrl
into
leave
iret
xlat
loope
repnz
in
cld
fsubrp
enter
int3
int
icebp
cld
std
test
ss
jmp
int
cld
lock
cld
ret
incb
mov
ss
xor
ljmp
aas
in
cmp
test
aad
cld
xchg
jecxz
mov
shr
fprem
cs
aaa
rcr
out
icebp
cmp
out
sub
mov
mov
cmp
aad
ljmp
cli
jmp
inc
aad
lret
ret
jecxz
out
lret
rol
fdivs
xor
ss
int3
cmp
jmp
jmp
xchg
mov
out
leave
out
rcr
lret
repz
loop
out
rcr
rorb
test
in
repz
out
out
ljmp
fcoml
add
movl
jmp
rcl
rcl
roll
push
dec
push
adc
jl
out
in
test
loop
neg
fdivrp
xlat
call
int
nop
aad
mul
hlt
sar
in
iret
aaa
cmc
loope
fnstcw
jecxz
fadds
iret
loope
icebp
rorb
lret
ror
jmp
shr
test
cmc
out
in
fsubrp
iret
stc
fmulp
test
cmp
fdivrs
iret
cmp
in
fcmove
adc
ds
leave
test
mov
jmp
repz
lock
int3
fidivrs
leave
jecxz
shr
shl
clc
fadds
clc
out
repz
cmc
cmc
rol
ror
lret
iret
sar
cli
shl
lret
idiv
clc
into
and
addb
call
in
sti
int
rolb
lock
mov
leave
jmp
xchg
out
sub
ljmp
xlat
shll
cmp
sar
shr
fdivrp
sti
mul
cli
xchg
out
filds
xor
cmp
sar
ror
hlt
aam
repnz
icebp
shl
orb
fcmovu
out
or
rcr
cli
int
out
int
shl
cmc
icebp
lret
idiv
jmp
fcom
cmp
rcl
rcl
cmc
ss
cmp
aaa
addb
ret
sbb
call
das
shll
cmc
sti
cmp
sar
ret
mov
mov
jmp
cmp
in
shlb
shl
out
fsubr
cli
hlt
cli
fdiv
and
test
cmp
incl
les
int
jmp
ss
sti
hlt
sar
fsubr
cmc
cmp
cli
out
testb
lret
in
lock
in
icebp
fucomp
jmp
aas
stc
shl
std
fucomip
xchg
jmp
fdivrp
jmp
out
int3
stc
repz
fmul
frndint
out
out
repnz
ljmp
xchg
xchg
aad
out
repz
aaa
cmp
rcl
rcl
ds
test
stc
mov
out
clc
loopne
ljmp
loopne
rcr
test
jecxz
and
push
mov
mov
out
xor
ss
in
aam
lret
shr
loop
lock
out
ljmp
xchg
jmp
in
int3
lret
ffree
jmp
xlat
into
fnop
fdivr
rcr
in
icebp
int
xor
jmp
jecxz
out
out
stc
aad
shl
iret
test
idivl
fcmove
xchg
nop
mov
imul
int
shl
out
sarb
sti
clc
ss
lds
incl
lea
xchg
xchg
xchg
sub
ret
loop
cli
clc
cmp
ljmp
clc
ror
rorb
jecxz
xchg
mov
xor
iret
mul
cmp
pushl
iret
loop
shr
test
les
in
int
lret
ljmp
into
fdiv
repnz
xor
into
loope
fld
cmp
rolb
out
test
test
hlt
ror
fucomp
aad
aam
repz
rcl
clc
idiv
int3
xchg
fucom
out
aad
ret
xor
ret
sti
lret
out
leave
aas
fsub
loop
fildl
out
loopne
cld
in
out
cmc
ret
icebp
sub
icebp
aad
not
fdivrs
loop
incb
loop
iret
clc
leave
mov
xchg
loopne
sarb
icebp
out
std
rcl
cmp
out
cli
loop
sar
idiv
cld
cld
int3
repz
ss
xor
lret
repz
fidivrs
clc
iret
shl
cli
fdivr
jmp
jecxz
lret
jmp
jecxz
shrl
ss
lret
into
loopne
addb
and
jecxz
repz
shr
out
xor
xor
xlat
out
std
fst
lock
xchg
out
mov
in
iret
decb
xor
xlat
clc
iret
xor
out
ljmp
out
rcr
testl
xchg
aas
jmp
hlt
xlat
lock
std
hlt
out
repnz
test
jecxz
fcmovu
call
ljmp
out
aam
in
repnz
sarl
in
shl
fstp
ds
call
lea
jmp
lret
ret
int
jle
rolb
push
jl
add
mov
out
idiv
test
fdivp
repz
sarb
std
cli
xchg
jecxz
out
call
icebp
in
aad
xor
lock
out
ds
testb
mov
incb
in
loope
std
loope
xor
loopne
fnstsw
cmp
ds
inc
cld
or
lock
int3
in
cmc
int3
hlt
aad
xor
jmp
ror
cmc
into
into
cmp
aad
out
int3
fimull
lret
xchg
out
ror
sar
xor
aad
cmp
out
aas
cld
shr
and
mov
fcomi
fimuls
in
jmp
clc
cmp
cmp
repz
xlat
sti
cmp
stc
and
mov
test
cmp
test
in
xchg
loopne
xor
lock
int3
cmp
adc
faddl
mov
iret
sar
test
jmp
out
neg
jmp
cmp
cmp
rcr
xchg
loop
lea
std
shl
fimuls
shl
repnz
ljmp
rcr
or
in
fmuls
jecxz
int
xor
rcr
fpatan
in
fdivrp
ss
jecxz
out
std
loopne
int3
iret
decb
repz
xor
repz
repnz
icebp
repz
sarb
test
ret
cli
neg
lds
fstl
aam
leave
ss
int3
ss
lret
iret
sbb
mov
orl
mov
hlt
repnz
rcl
fdivrl
repz
cli
fcmovnbe
lock
loope
xchg
mov
shl
xor
cmp
dec
clc
lret
cmp
aam
clc
cli
std
lret
clc
fsubrp
nop
int3
jmp
hlt
int3
in
sub
clc
int3
mul
cmp
cld
repz
mov
mov
stc
int3
cmp
sar
neg
cmp
push
xchg
ret
rol
ljmp
xchg
jmp
sub
in
icebp
repnz
lret
out
cmp
ds
xchg
ljmp
xchg
ror
loopne
out
lret
out
sti
shl
ret
rcl
loopne
cmp
sub
lock
icebp
rcr
out
xlat
test
rol
div
sti
leave
ljmp
in
test
int3
int
clc
ret
in
xlat
sti
fiadds
mov
out
xor
out
std
call
out
jecxz
out
adc
lock
ret
iret
add
xchg
in
sub
ljmp
cli
in
shl
idiv
ffree
cmp
mov
test
test
repnz
call
das
in
sarb
in
test
int3
test
xchg
decb
fdiv
aas
les
fdivs
leave
sar
lret
call
test
aas
cli
sar
sub
xor
int3
shl
lret
fbstp
in
stc
stc
in
test
cld
ljmp
ror
aad
clc
enter
out
fsub
sti
rcl
aad
imul
fcoml
icebp
xor
xor
shll
out
repnz
loop
fstp
cmc
aad
cld
fmul
mov
test
xchg
loopne
in
aaa
in
clc
in
out
call
sar
shl
jmp
movb
out
jmp
test
lret
cld
cli
jmp
fcmovu
test
std
incl
int3
xchg
lock
cmp
ds
shl
rcl
jmp
ljmp
ljmp
cmp
shl
int3
sbb
cmp
in
cld
mov
test
clc
out
sar
repz
out
std
ljmp
aad
sbb
call
xor
xlat
enter
repnz
lock
rcl
neg
icebp
leave
jmp
mov
call
sti
ret
hlt
aaa
fucomp
xlat
cmp
in
loope
fadds
int
out
out
xchg
rol
jmp
out
out
ljmp
addl
mov
jmp
rol
into
ret
rcl
aad
pop
repz
add
cmpsl
in
jg
lret
jl
lock
xor
inc
std
test
fcmove
fadds
hlt
xchg
out
int
stc
aaa
cmp
out
cmp
clc
xlat
sarl
sar
xlat
fcomi
xchg
in
xchg
int3
jmp
clc
int
shr
out
sti
lret
cmp
cmpb
rol
out
sti
int
mov
fdivp
in
repnz
out
std
leave
ss
clc
jecxz
loop
cmc
cmp
mov
iret
aad
cs
shl
out
cli
cmc
lock
shl
icebp
fsubr
cli
idiv
fld
cld
fcomi
stc
std
xchg
icebp
cld
xchg
lret
fstpt
lock
int3
ror
lret
rol
stc
jecxz
sti
fcmovb
ret
fcmovnu
mov
hlt
les
xor
aaa
sti
cli
clc
ds
loope
clc
sarb
test
fldl
xchg
call
icebp
cmp
out
leave
aam
addl
les
xchg
jmp
cmp
stc
stc
lret
out
aas
mov
std
roll
lock
ret
aad
fcmovbe
iret
cmp
out
xlat
icebp
shl
std
ret
fisttps
loop
std
repz
aad
frndint
fsub
in
in
xor
lock
sar
jmp
fiadds
aam
xor
cmp
out
enter
rcl
aas
jecxz
add
loopne
test
jmp
jecxz
and
hlt
int
in
lock
std
icebp
leave
cmp
xlat
cli
out
lds
out
sub
sbb
lock
out
lock
cmc
xor
ret
loop
repnz
loop
xchg
add
repz
call
lret
aam
ror
adc
out
imul
dec
cld
out
test
enter
lock
cmp
fld
aas
aam
call
out
out
mov
xchg
repz
shr
cmp
div
cmp
cmp
cmp
fadds
xchg
lret
lret
xchg
ret
sti
clc
iret
shl
repz
xchg
les
enter
jmp
loopne
lret
ror
int
out
out
idiv
loope
out
out
lock
out
sub
xorl
into
mov
ss
lock
xchg
sar
xchg
test
jmp
lret
xor
or
ffree
aad
in
in
in
icebp
filds
ss
cmp
into
in
sti
fcmovb
cmp
out
jecxz
out
loope
shr
xchg
mov
shl
ss
fcom
cmp
out
aam
loopne
in
test
stc
jecxz
into
loopne
repz
cmp
fdivr
int3
repz
sti
roll
rcl
ljmp
cld
xchg
faddp
ret
repnz
hlt
fsubr
rcr
rol
loopne
sti
cld
mov
sti
in
bnd
call
into
ljmp
fstp
mov
cld
std
lret
clc
jmp
iret
out
out
out
fadd
fnsave
ror
cmp
lret
ds
repnz
repz
loopne
enter
in
mov
rclb
lret
mul
fdivr
in
into
into
aas
fildl
loopne
in
mov
jecxz
lret
lret
ljmp
lret
fdivrs
cli
in
lock
add
int3
lret
hlt
leave
les
xor
cmp
aad
push
aas
flds
not
jecxz
mov
leave
lret
lock
xchg
loopne
xor
lock
int
int
test
div
fiadds
iret
addb
lock
sar
xlat
int3
cmp
sti
dec
jecxz
out
test
fnstsw
fsub
jecxz
xchg
out
cs
lret
call
jecxz
mov
mov
loope
loop
in
in
rclb
cmp
lret
cld
lret
cmp
loopne
in
fisttpl
mov
into
shl
xor
cmp
xor
iret
cmp
test
or
rorl
add
add
add
int3
ret
ds
jge
jae
loope
jg
mov
jg
lret
jl
out
loope
jmp
fdiv
and
out
in
fldln2
aam
shl
xlat
repnz
cld
ds
aad
xor
lret
fildl
xchg
repz
repnz
fxch
fnstsw
fcmovnb
ret
shl
loop
loopne
stc
loop
out
lret
jmp
sarb
in
xor
cmp
repnz
adc
loopne
xchg
mov
xor
aam
not
leave
sub
fidivrs
in
cli
jecxz
repnz
cli
hlt
leave
out
into
fimuls
lret
sarb
stc
cmp
int
ds
fcmovnb
in
mov
enter
lret
int3
vcvtdq2pd
rcr
out
std
sar
loopne
rol
div
test
in
mov
aam
jmp
test
shr
xchg
icebp
cmc
rol
repnz
sti
aad
fldl
xlat
dec
loop
xlat
sbb
in
xchg
xor
cmc
lret
aaa
clc
jmp
in
int
out
fdivr
sarl
testl
out
test
xlat
jmp
into
loopne
adc
ds
stc
out
mov
mul
out
out
repnz
iret
leave
sarb
repz
icebp
sarl
xchg
in
loope
jmp
mov
loop
icebp
jmp
in
sti
aad
jmp
fnstsw
aam
repnz
in
jmp
xchg
sub
loope
ret
lock
cmp
jmp
cmp
iret
cmp
leave
enter
cld
and
lds
repz
out
int
cmp
not
cmc
lds
aad
cld
lret
enter
icebp
ror
iret
cmp
div
ror
fadd
int3
icebp
ds
mov
lret
shr
in
int
ds
rol
out
int
cmp
in
add
fsub
call
loope
out
fucom
mov
das
not
clc
cmp
ljmp
enter
in
in
lret
test
sub
hlt
enter
fyl2x
fadd
rcl
les
mov
jmp
mov
shl
fxam
icebp
sub
cmp
adc
cmp
aam
fcmovbe
xor
loop
cli
ljmp
ljmp
lock
loop
out
out
cld
ljmp
sub
ret
ss
aaa
lret
sarl
cmp
cli
roll
call
mov
loop
xlat
lret
stc
jmp
shr
rcr
xor
fadds
xchg
rorb
out
repz
aam
out
repnz
sti
test
cld
jecxz
mov
mov
out
cli
in
fdivrp
enter
cmp
fucom
cmp
aad
repz
lret
std
rcl
xchg
iret
aam
fdiv
sub
lret
cmp
sti
loope
fsub
fisttpl
mov
xlat
jmp
sar
in
fld
aad
in
fisttpl
lret
ret
jmp
aam
lret
call
aas
rcr
cmp
loop
jmp
mov
in
shl
jmp
xor
out
ljmp
repz
xbegin
mov
in
std
out
fimuls
cmp
cmp
fxam
lock
mov
fcmovnu
add
stc
movb
int
ret
iret
out
call
cmp
add
cli
fmull
sti
loopne
hlt
call
ret
rcl
out
fsubrp
int
aad
into
loope
mul
fdivr
ljmp
ret
stc
iret
repz
sti
iret
out
shl
aam
repz
incb
xchg
xchg
xchg
cmc
sub
fadd
repnz
repnz
ret
lock
sti
cmp
rolb
cli
call
repnz
ret
out
not
loop
ror
fcmovu
bnd
mov
ret
ss
xor
clc
stc
loop
sar
out
rol
lret
idiv
out
out
out
xchg
xor
sar
inc
or
aam
decl
add
add
rol
ds
fcmove
fisubrl
pop
iret
add
jg
lret
jl
lock
call
aam
lock
mov
out
xor
aaa
loope
in
cmp
rcl
fcmovnbe
inc
std
ret
fscale
in
mov
ror
test
div
in
hlt
iret
lret
cld
in
cmp
fdivr
fcmovnbe
loope
loopne
icebp
lret
shl
ljmp
out
ffree
stc
fmul
ds
xlat
mov
cli
mov
in
lock
int3
cmp
aad
sti
clc
out
jmp
lret
fucom
leave
out
test
in
jecxz
xor
cmp
cmp
cmc
cmp
stc
fcomip
shl
ljmp
xchg
mov
in
xor
ror
fmulp
imul
in
clc
repnz
or
loop
mov
shr
in
lock
cmp
call
fucom
xchg
std
int
cld
loopne
xchg
cmc
aas
aam
fdecstp
rol
cmp
cld
out
loope
test
jmp
jecxz
mov
ss
das
fcmovu
out
rcr
jecxz
fnstcw
xor
aam
add
stc
mov
shr
xor
out
cmc
or
sti
clc
ret
rol
mov
cli
loopne
in
shr
shl
sub
out
stc
cmp
sar
aas
jecxz
lds
jmp
int
loop
xor
shr
xor
lock
fnsave
fcomip
int3
and
sti
clc
std
incb
xchg
call
ror
out
icebp
cmp
hlt
cmp
std
test
fadd
fsub
test
fneni(8087
leave
enter
xchg
adc
xor
jmp
aaa
aam
idiv
aas
test
xchg
call
sti
loope
xchg
into
loope
xor
xor
cli
repz
std
hlt
iret
cmp
icebp
sar
call
lock
call
in
xor
sti
in
clc
repz
fsub
xlat
aad
xchg
jmp
xchg
test
xor
clc
aam
out
jmp
ret
rcl
add
jmp
mov
test
int3
ljmp
leave
fcmovnu
cmp
out
dec
fldl
mov
clc
aad
loop
test
xchg
out
cmc
out
xor
cmp
rcl
fcmovnbe
in
aad
idiv
faddp
out
call
jmp
iret
jmp
jecxz,pt
xor
cld
sti
aaa
fcmovne
filds
ds
cli
stc
mov
lock
ret
lret
aam
cmp
neg
cmp
cli
in
rcr
test
test
in
out
out
and
icebp
into
xor
mov
shl
icebp
neg
ret
in
in
leave
aam
xchg
loop
xchg
out
shll
cmp
int3
std
repnz
repnz
call
not
in
mov
mov
shl
xor
jmp
shr
fsubrp
rcr
shl
rcr
fcom
test
jmp
mov
dec
icebp
lret
out
sub
int3
ljmp
xlat
repnz
fnstsw
fcomp
cld
fucomi
mov
mul
shr
test
loope
xor
cmp
xlat
mov
out
out
fnclex
out
fistpll
imul
enter
sti
enter
std
cmp
ret
jmp
jmp
nop
out
xchg
into
clc
sti
repnz
xor
repz
fld
shl
loope
test
filds
loop
add
int3
int3
fcom
int3
cmp
fcmovu
mov
sbb
loop
iret
jmp
fdivl
ljmp
int
ss
rcr
idivb
adc
faddl
jmp
int3
repnz
mul
ror
xor
int3
cmp
shr
fmul
int3
out
fcmovne
hlt
out
in
xchg
out
icebp
loop
xor
roll
fcomp
out
ljmp
out
out
mov
ds
call
ror
push
dec
aas
rolb
mov
rclb
out
shl
ss
out
cmp
cmp
shr
add
add
ds
rcr
fsubr
push
push
mov
or
jg
lret
jl
adc
lret
stc
call
loop
sub
loope
jmp
idivb
aas
clc
into
sar
cmp
add
in
testb
xchg
lret
loop
in
jmp
hlt
cmp
stc
loope
and
rcr
xchg
jmp
in
lock
cli
fidivl
cs
in
cmp
repnz
loope
mov
iret
mov
into
hlt
test
enter
hlt
cld
hlt
loop
sarl
rcl
lret
mov
out
sti
std
jmp
xchg
ss
aaa
cmp
ljmp
jmp
ret
in
clc
loop
lock
into
cs
out
enter
cmc
shl
fadds
xchg
mov
dec
nop
test
int3
lret
xchg
aaa
loop
sarl
lock
int
cmp
cmc
sti
into
fsub
repnz
lret
cld
fcmovnb
ror
jmp
xor
out
cmp
lret
cli
idivb
shl
test
in
std
in
test
sbb
iret
out
xor
cli
fadd
fdiv
repnz
xlat
cmp
into
orb
jecxz
ljmp
loopne
dec
into
cmp
fadd
rorb
sti
jmp
fmull
ljmp
cli
cmp
aad
fcomp
rcr
fdivp
cmc
cmc
loope
cld
sub
fxch
shr
into
int
fdivrp
in
repnz
sti
addl
xchg
ds
ss
ljmp
stc
cmp
std
aam
fadd
ret
lret
mov
fcmovne
in
hlt
fucomip
cld
icebp
ret
addb
std
leave
fadd
in
addb
repz
stc
in
call
lret
cmp
test
repnz
lret
fdivr
loope
cli
lret
repnz
xor
repz
aam
hlt
cmp
ljmp
or
test
out
cld
out
shl
lock
cli
fdivrp
idiv
shl
ret
rol
cld
cld
sub
fcomp
ljmp
jecxz
fmul
int3
into
cmp
out
cmp
repnz
in
addl
loop
nop
hlt
test
shl
enter
fdivr
stc
repz
clc
std
call
enter
test
loop
out
in
aaa
cld
sarl
cmp
rcl
testl
jecxz
int
into
in
enter
lret
fcmovnbe
sarl
sbb
repnz
test
mov
in
into
int3
shl
xor
stc
cmc
jmp
repz
repz
stc
enter
out
sti
into
decl
loopne
sti
in
shll
ljmp
jecxz
bnd
int3
jmp
repnz
shl
xor
in
int3
repnz
clc
dec
test
in
loopne
test
shr
ret
call
sti
mul
lock
lret
fcomip
fcmove
cld
stc
xchg
test
fnclex
and
popl
divl
and
cmp
fcomi
aam
leave
hlt
or
icebp
divl
aam
rcr
cmp
xor
fidivrs
idiv
fldl
ljmp
mov
sub
clc
ret
xor
lock
xlat
cmp
xlat
shl
call
fcmovne
into
fildl
in
icebp
test
std
faddl
aam
sti
in
int3
leave
std
lock
shrb
xor
out
xlat
xor
fstpt
cmpl
hlt
orl
mov
mov
lret
aad
xlat
stc
shl
fcmovb
testl
int3
loop
in
jmp
aaa
hlt
lret
cmp
fdiv
loope,pt
cmc
shl
mov
loop
cld
leave
repnz
xor
rcr
aad
vpand
into
sti
cld
lock
test
loope
sbb
cld
decb
loopne
ffreep
xor
lock
xor
ss
imul
xchg
loop
mov
add
iret
lock
in
mov
add
add
int3
fcmovnbe
int
loope
insl
lahf
xor
jl
add
fld
test
ljmp
clc
fcmovnu
movl
xchg
xchg
lea
xor
xor
ss
aas
hlt
aam
std
shl
xchg
rcl
xor
iret
filds
aaa
in
into
hlt
xor
cld
loopne
cmp
std
out
leave
mov
loope
nop
int3
ret
cmp
lock
cmp
cli
repz
fcmovbe
clc
mov
ljmp
mov
das
clc
xor
cli
stc
faddl
aad
ret
test
clc
fucomip
add
loope
popl
clc
stc
in
stc
push
cld
lret
fsubp
rol
test
test
addl
xlat
int3
lock
sar
cmp
in
ret
aas
lock
loopne
sbb
and
mov
lret
ds
enter
std
sti
fmulp
repnz
test
mov
ljmp
xor
divl
cmc
cmp
aas
xor
cld
cmc
sti
mov
out
in
xchg
hlt
rcl
out
enter
rolb
div
cmc
and
fdivr
nop
cld
sub
xchg
out
leave
repz
fcmovne
fld
ret
cmpl
sti
ret
jmp
int
loopne
aaa
enter
idiv
out
xor
in
sti
std
fnstcw
test
ret
call
loope
out
lock
loopne
int3
clc
fincstp
in
fcmovbe
cld
int
loopne
idivb
xchg
fadds
jecxz
xor
lds
jecxz
in
jmp
cmp
test
lock
cmp
loopne
fmull
shl
aam
aaa
xor
fdiv
cli
std
clc
fbstp
lret
aam
sub
cld
repz
std
test
clc
in
mov
iret
in
repnz
cmp
cli
std
sti
shl
neg
lds
loopne
and
shl
cmc
lret
xor
repnz
enter
xlat
in
cmp
sti
inc
push
cli
xchg
out
loopne
hlt
rcl
sti
imul
in
fmul
in
rcl
fprem1
icebp
test
sbb
ljmp
jecxz
out
call
xor
in
into
repnz
rcr
xlat
fcmovb
mov
cli
lret
sti
fstp
lret
xchg
int
loop
out
lret
cmp
rcr
cli
aad
cld
icebp
aad
rolb
ljmp
in
in
lret
into
int
fcmovu
rcl
loopne
addb
int
test
fcmove
das
xor
loopne
in
aad
cmp
cmp
iret
test
ffreep
out
mov
fimuls
int
repz
in
int3
iret
xor
ds
fcmovu
cmp
mov
in
in
repz
lock
aaa
aam
aam
lock
fdivp
aaa
adc
xchg
cld
call
faddl
out
aaa
aam
iret
ret
ljmp
loopne
cmc
enter
mov
xlat
xor
leave
shll
repz
ds
stc
adc
in
les
jecxz
int
lock
cli
loope
int
int3
sti
cli
xor
ss
aas
ds
loope
loope
in
lret
mov
int3
das
enter
cmp
in
ret
cmc
inc
out
fnclex
ljmp
jmp
jmp
shlb
cs
enter
int
not
test
leave
xlat
fiaddl
mov
out
sub
test
int
testb
dec
xchg
dec
xchg
xchg
lret
ret
shl
out
ror
fcompp
loop
movb
icebp
in
jecxz
rorl
ret
cld
clc
cmp
shr
in
cld
rorb
xchg
sub
lret
lock
xor
idiv
fdivr
and
aas
fildl
push
xchg
int
icebp
xor
fcmovnb
lock
into
ds
out
ret
adc
shl
loop
fdivrp
shr
jecxz
lret
out
shlb
aaa
jmp
cmp
in
cmp
rolb
jmp
iret
iret
sarb
aad
aad
pop
sbb
mov
push
xor
lret
jl
fadds
leave
aad
cli
fst
mov
ljmp
stc
dec
rol
addl
fucomp
mov
loop
jmp
std
cld
aad
rol
aad
sbb
out
out
cli
xchg
incb
xbegin
cmc
sar
lock
rcl
fptan
call
addb
xchg
xor
not
clc
fxch
jmp
cmp
stc
mov
filds
mov
jmp
aaa
cmp
into
cmp
addb
mov
sti
fmull
xchg
in
out
jmp
cmp
into
fsubr
aad
clc
fdivp
repz
popl
loop
loopne
lret
aam
out
out
in
xlat
aam
out
repnz
stc
enter
fdecstp
cld
enter
aam
jmp
in
stc
int3
lret
cmp
repz
aas
aam
fcmovu
sti
mov
test
hlt
xor
cmc
not
fcmovnbe
cmp
into
aas
ret
aas
dec
fiaddl
add
jecxz
ljmp
ror
in
loopne
aam
jmp
testb
out
in
out
in
in
aam
xor
fxch
cmpb
stc
ret
rolb
sub
mov
out
jmp
in
lock
sti
stc
xchg
jecxz
rcl
les
fnstsw
ror
fcmovne
fdivr
out
into
in
aad
in
cld
ret
repz
lret
out
mov
shl
aam
test
lock
iret
stc
cmc
test
shl
ret
mov
out
cmc
out
lret
xor
xor
int3
int3
ds
icebp
hlt
roll
aam
xchg
lret
fmul
out
aam
rcl
repz
das
divb
ss
cmp
sti
inc
test
cmp
enter
rcr
out
jmp
int
into
hlt
in
iret
hlt
lret
leave
std
idiv
aam
stc
div
jecxz
fcmovnb
stc
fdivr
in
iret
lret
shl
in
in
sti
xor
jmp
shl
jmp
aad
shl
std
neg
in
out
call
loop
out
xor
clc
hlt
fnstsw
sbb
rcl
repz
stc
xchg
nop
xchg
std
in
int
xor
enter
out
loopne
jmp
mov
int
xchg
repnz
aad
cli
icebp
cmp
xlat
enter
push
leave
into
int
fcmove
ljmp
loop
lock
ljmp
aad
cmc
test
clc
xchg
mov
int
call
out
clc
cmp
loopne
lock
shl
fincstp
ret
cli
clc
fdivrp
lock
hlt
ret
lret
cli
int
ret
rol
incb
sub
out
rorl
in
neg
stc
out
clc
shl
cmc
cmpb
hlt
in
out
loop
test
out
xchg
lret
cmc
repnz
fcomi
lret
int
fxch
rcr
fdivrp
shl
lret
stc
jmp
fisttpl
shr
repz
rol
out
ss
cmpl
cli
lock
enter
out
xchg
in
nop
cmc
iret
sub
cmp
in
cmp
sarb
sarb
jmp
ret
xchg
in
int
iret
mov
loope
ret
cmc
ret
jmp
aam
cmp
fdivr
vpsrlw
and
jmp
fldln2
mov
xchg
test
xor
ljmp
aam
clc
clc
add
test
loopne
addb
sub
xor
stc
cmp
cmp
fstp
into
fadds
faddl
iret
loop
xor
enter
fsubr
out
frstpm(287
mov
loopne
fucom
sbb
mov
in
out
loopne
leave
imul
cli
lret
clc
fsincos
aad
adc
in
xlat
jmp
aam
iret
mov
nop
jmp
imul
cmp
xor
ror
xor
aas
shl
fdivr
jmp
out
mov
pop
leave
ret
push
mov
jmp
rol
rol
fstp
dec
lahf
push
dec
aas
xor
cmp
jg
add
xchg
out
not
cmc
stc
ljmp
jecxz
test
jmp
ret
mov
mov
fsubrp
add
rcl
out
jmp
ror
sbb
fdivr
xchg
sti
enter
enter
fimull
jmp
in
cmc
fsqrt
fcomi
not
cmp
fimull
jecxz
mov
and
iret
stc
xor
repnz
cld
hlt
hlt
hlt
hlt
fdivr
xchg
xchg
in
xchg
sub
repnz
xor
aad
jmp
jmp
repnz
cmp
mov
clc
sti
xlat
loope
int3
in
loope
shl
hlt
icebp
hlt
in
aaa
aam
ror
loopne
cmp
ret
and
jmp
fsubr
rcl
shr
fnstenv
fdivr
cld
out
loope
in
cli
out
jmp
loop
jecxz
fstl
aaa
xor
jmp
fldlg2
adc
out
shl
call
int
int
shl
xor
xor
xor
cmp
fstpt
inc
aam
sar
mov
mov
leave
in
orb
ss
iret
rcr
enter
shl
out
cld
fimull
mov
loope
incl
idiv
loopne
test
out
std
in
std
loope
in
mov
shr
shl
aaa
lret
into
loope
loop
test
in
fnsetpm(287
faddl
out
std
out
xor
call
cmp
ret
repnz
shl
in
fprem
iret
icebp
mov
cs
int
into
jmp
std
fistpll
orl
mov
or
lock
loopne
in
out
out
cli
in
fsubr
in
xor
div
fcmovnbe
cmc
xchg
cld
lret
lds
mov
mov
call
cld
repz
lret
stc
test
test
cli
fptan
mov
test
lret
enter
lret
loope
fstpt
out
fadd
std
cmp
fcomip
ret
test
mov
fcomi
xchg
out
xor
xor
lret
rcr
test
cmp
fstp
ljmp
ljmp
xor
lret
sti
cld
cmp
loopne
test
ret
loope
out
clc
std
sar
out
ds
xor
not
out
out
loope
sar
cmp
loope
lock
lds
shl
ljmp
leave
leave
cmp
fmul
in
ds
lock
int3
lea
das
aaa
ljmp
in
sbb
div
out
fcos
mov
test
mov
xchg
aam
out
ror
int3
jmp
cmp
fstpt
fidivrs
addb
xlat
stc
loop
fcmovnu
icebp
popl
not
out
leave
cmp
or
loop
repnz
fcmovu
lret
fdiv
mov
call
idivl
cld
int
lock
sti
fucom
cld
loopne
mov
out
mov
aad
aam
fcmove
sar
call
ds
iret
cmp
rcl
hlt
in
test
into
int3
fiadds
out
iret
clc
jmp
cmp
shl
xchg
repz
fcmovb
neg
test
mov
shl
into
out
repz
cmp
aad
out
shl
ret
leave
cld
or
xlat
lea
ror
xlat
ljmp
loope
frndint
and
loop
leave
cli
incb
leave
mov
leave
in
out
loop
rcr
fcmove
sti
shl
aas
aaa
clc
fdivp
out
adc
xchg
jecxz
cli
cli
and
shrl
jecxz
xlat
cld
aam
sarl
std
jecxz
rcl
std
call
ljmp
xor
shr
ss
aas
fcmovbe
out
repnz
fucomp
testl
loope
jecxz
clc
int
aam
lock
rcr
loopne
ds
call
lret
decb
in
ljmp
cmp
icebp
jecxz
cmc
test
icebp
icebp
std
loop
lret
cld
int
rolb
jmp
ret
jmp
sarl
incb
out
lea
ret
in
jecxz
ss
ror
cld
repnz
ds
loope
out
sar
mov
mov
hlt
xchg
lock
int3
lret
shr
iret
rcr
fucomi
aam
ds
jmp
fneni(8087
in
loop
xchg
xchg
cmc
cmp
out
out
fld
cmp
mul
loopne
cmp
loopne
fucomp
jecxz
clc
xchg
divb
cli
sti
neg
loopne
jecxz,pt
jecxz
in
xchg
out
fsubp
fneni(8087
int
lret
xor
push
xor
push
movl
jmp
into
rol
aad
rcl
jmp
add
jl
add
lock
xor
cld
cmp
int3
out
sar
lock
xlat
sbb
mov
rorb
aad
fdivs
out
cmp
cli
adc
cli
call
xor
in
jmp
int
iret
cmp
rorl
fsubr
mov
xchg
in
out
int
out
lret
cmp
icebp
sub
into
iret
not
in
clc
enter
jmp
ficoms
cmp
std
enter
loope
out
fcmovb
hlt
les
std
std
shl
rcll
out
loopne
clc
xlat
lret
cmp
ds
lock
faddp
loopne
neg
in
lret
loop
mov
ret
stc
hlt
xor
in
test
xlat
fsub
cld
in
leave
jmp
hlt
aam
out
xor
aam
hlt
out
fnstsw
ret
loope
imul
repz
vpxor
int
shl
in
int3
fsub
ret
loop
lock
xlat
out
mul
loope
in
loope
out
aaa
in
cmc
xor
out
imul
rcr
clc
iret
ret
cli
cmp
fists
xchg
enter
imul
xlat
cld
xor
in
cmp
fcmovu
in
incl
ljmp
call
out
icebp
cmp
leave
in
hlt
inc
rol
repnz
xchg
int3
cld
jmp
shl
addl
iret
cmc
in
shr
int3
loope
xlat
and
ret
cli
leave
fnsetpm(287
fdivr
in
out
in
shl
in
into
ds
in
int
fucompp
adc
sar
push
ret
add
std
jecxz
test
out
repz
cli
xlat
jmp
ljmp
loopne
in
jecxz
or
lea
in
xor
shll
lret
xlat
fcmovbe
lret
not
addl
push
in
incb
jmp
loope
xlat
in
repz
push
call
rcl
cmp
movb
in
lret
aaa
in
cmp
xor
divb
fadd
sti
repnz
lret
iret
in
int
int
fld
ss
clc
enter
into
loop
test
aad
add
xchg
clc
aam
xor
neg
rcl
ret
loope
cli
fmull
test
rcl
fnstsw
out
sti
shl
int3
xor
leave
int
in
loop
fyl2x
ffree
leave
rolb
test
in
in
out
xor
hlt
icebp
lret
stc
int
cli
ds
icebp
ffreep
mov
neg
xchg
fcoml
lret
xor
aam
iret
shl
fst
aad
aas
cmp
fimuls
test
sti
mov
in
icebp
jecxz
ljmp
loopne
call
sti
lret
std
in
shl
rcl
ret
xor
out
cmp
ror
cmp
repnz
jecxz
cmc
aad
test
lret
fmul
iret
sbb
vcvtdq2pd
in
cmc
cmc
ret
fnsave
cmp
int3
fldlg2
in
cmp
xchg
faddl
in
fmul
mov
neg
aam
hlt
cmp
rcr
cmp
loop
shl
lock
cli
lds
fstl
jmp
cmp
ret
cmp
sar
sbb
xchg
repz
out
vpsubb
jmp
lret
test
test
loop
call
faddl
aaa
fsubr
out
std
fcmovne
divb
in
cmp
frstpm(287
les
ljmp
lock
sub
sarl
enter
in
stc
fdiv
out
repnz
fucomip
clc
jmp
mul
xchg
lret
les
icebp
int
ljmp
repnz
out
out
loope
out
ds
loop
xchg
aad
sub
repnz
fcmovne
iret
lret
into
sti
roll
fneni(8087
lret
jecxz
in
mov
out
inc
xor
test
shr
test
cmp
sti
orb
clc
fimuls
ljmp
iret
loope
aam
loopne
jmp
out
cli
lret
in
pause
rol
enter
icebp
idivl
inc
cmp
jecxz
loope
stc
int3
mov
lret
loop
out
repz
in
icebp
cld
out
cli
aad
iret
xor
loope
jmp
std
fsub
enter
call
into
shr
std
cmp
cmp
cld
shl
cmp
fcom
fdivr
mov
sub
jecxz
xor
std
cmp
jmp
cmpl
cmc
ret
rcl
xor
leave
test
mov
rol
stc
loop
ljmp
cld
test
or
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
push
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
sbb
jmp
rol
enter
aad
add
xchg
push
jno,pt
push
sarb
add
ss
aad
ret
std
xlat
mov
and
testl
ret
cmp
iret
enter
ret
in
cli
ret
fmul
xor
mov
xor
repnz
std
clc
iret
xchg
xlat
out
out
enter
jecxz
idiv
test
cmc
aas
cmp
into
test
ror
call
jecxz
loope
xchg
xchg
hlt
xlat
cmp
cmp
jmp
int3
loopne
roll
jecxz
loope
fimuls
fidivs
ror
jmp
idiv
cmp
idivb
cli
repz
in
and
mov
mov
bnd
fxch
fcmovbe
sarl
int3
out
into
in
hlt
cld
loop
in
fdivr
into
mov
loop
sub
aas
out
faddl
aam
fcmovu
test
jecxz
jmp
mov
leave
out
xor
leave
enter
hlt
fcom
sti
fcom
fimull
enter
shl
loope
xor
loop
icebp
shr
cmp
ss
loopne
in
aas
sar
aam
ffreep
xlat
test
test
div
out
repnz
std
into
enter
shl
fsub
stc
rcl
call
jmp
sub
lock
int3
loopne
cmp
int3
hlt
repz
loope
test
mov
fimull
jecxz
repnz
ljmp
int
shl
xchg
mov
lret
fisttpl
xchg
sub
lock
rol
fistpll
cli
xor
std
in
xor
fsubr
call
xchg
in
mov
aad
cmp
xor
cmp
aaa
rcr
sti
int
std
icebp
lock
std
out
jmp
lret
call
ret
leave
aam
cs
aam
fsub
rcr
xchg
call
in
cli
sbb
in
xor
jmp
icebp
out
or
jmp
test
and
cli
vpsllw
leave
into
ror
lret
repz
fucomp
lret
aas
jmp
ljmp
loope
sbb
in
lock
aam
repz
cmp
cmc
out
call
out
loope
lret
fdiv
fsubrp
xor
sar
ret
cmp
out
fistpll
fcmovnbe
std
in
out
shl
in
xchg
in
in
nop
icebp
mov
xor
les
enter
cmc
icebp
shl
fcomi
jmp
in
fcmovu
loope
in
or
shlb
call
loope
out
fsubr
rcr
clc
jecxz
test
test
ljmp
cmp
cmp
fcomip
aas
xor
rcr
orb
adcb
cmc
hlt
xor
jmp
icebp
fistpll
fdivr
ret
lock
cld
in
inc
out
mov
lret
adcl
cmp
int3
aas
ljmp
cli
cmc
roll
in
fldl
aam
enter
out
sar
clc
cmp
aad
call
loopne
fstl
fucomi
xlat
in
in
xor
stc
in
in
cld
cmc
fisttpl
xchg
ljmp
int3
icebp
imul
aad
cmp
clc
xor
fadds
out
leave
orl
ljmp
ret
int
cli
aaa
jmp
in
neg
movl
mov
xchg
xchg
jmp
jecxz
aad
repz
ljmp
loop
loop
fsubr
jmp
fdivr
lret
sbb
ret
cmc
cmc
repz
out
aad
clc
lock
sti
in
jecxz
idiv
lds
ljmp
into
not
iret
icebp
idivl
mov
in
iret
sti
in
aam
sti
mov
in
and
jmp
loope
in
ret
int3
xor
jmp
fdivrs
sarl
ret
std
rorl
enter
out
xchg
xchg
rol
ret
vpaddsw
adc
loop
cmp
cmp
les
out
shlb
ljmp
cmp
cmp
shl
fcmovnb
sbb
in
cli
fcmovbe
icebp
fsub
xchg
int
shr
clc
aam
fxch
fst
cmp
ds
xlat
lock
roll
loope
mov
out
shl
jmp
xlat
repz
int
shl
clc
shl
in
cld
xor
flds
in
orb
in
aaa
ror
fiadds
sti
aas
rolb
call
lret
repz
xlat
cmp
out
call
aam
cmp
hlt
jmp
cli
xchg
jmp
int3
lock
int
std
hlt
stc
loope
fcmovnb
mov
movzbl
and
mov
mov
adc
xor
or
jmp
int3
ror
fnop
xchg
sti
add
les
add
stc
fiadds
mov
ljmp
ljmp
cld
inc
sarb
cli
fxch
loope
in
orl
hlt
aam
lock
div
cmp
jecxz
aam
call
mov
ret
jmp
shr
rcr
aaa
out
clc
sbb
fcos
stc
cmc
test
in
in
mov
leave
lock
int
lret
into
fdivr
out
cmp
aaa
std
fadd
test
loop
clc
ret
clc
call
aad
xor
xor
cld
cli
fdivr
cld
icebp
cmp
cld
xchg
in
int
in
icebp
nop
in
out
lock
sub
out
icebp
xlat
faddl
cmpb
out
ret
addb
sarb
stc
into
sarl
shl
cmp
xorb
loope
jmp
loope
ffreep
mov
rcl
out
xchg
sub
aaa
cs
into
cli
out
pushl
iret
cmc
shr
stc
cmc
in
adc
fldl
rcl
clc
enter
cmp
aad
cld
fdivr
ds
loop
lea
mov
cmc
icebp
ss
loopne
int3
out
in
divb
repnz
idiv
ds
rorl
loopne
mov
nop
loopne
ret
jecxz
repz
fstpt
iret
into
in
sti
xlat
ffreep
xchg
fcmovnu
fisttpl
ljmp
cmp
out
lock
int
out
mov
fdiv
neg
cli
mov
fmull
int3
in
loop
xor
ds
idivb
loopne
xchg
shl
xchg
mov
mov
adc
lret
int3
loopne
cmp
out
int3
xlat
xlat
aad
sarb
cmp
fiaddl
fcomp
mov
out
imul
into
icebp
lock
std
cli
ljmp
loop
loope
cld
div
fdiv
fcmove
div
cs
into
shl
aas
hlt
lret
cld
fdivp
xchg
int
addb
xor
call
ljmp
mov
out
xlat
cmp
lock
and
ret
into
xor
in
idivl
clc
in
test
cld
mov
iret
nop
xchg
xor
xor
stc
jmp
cmp
fcmovbe
sub
shl
fiaddl
xchg
sub
out
idiv
repz
hlt
fnop
std
cmp
cli
in
lock
fldl
leave
out
in
xchg
xor
xor
fcomi
int3
aam
cld
in
enter
icebp
hlt
neg
clc
fmul
mov
sti
int3
iret
out
out
xor
aam
out
ljmp
xor
sbb
adc
mov
icebp
out
in
aas
cmpl
cli
jmp
fdivr
xchg
fmulp
int3
xor
lock
out
cmp
cli
test
hlt
rolb
fsubr
cld
iret
adc
ds
xor
shl
shl
into
iret
fstp
neg
test
iret
xor
in
xchg
aam
ljmp
fstp
shl
jecxz
loopne
cld
clc
jmp
call
xchg
leave
in
hlt
xor
int3
xor
loope
in
fcmovu
cmc
stc
repz
cli
int
cld
fsub
in
in
out
xor
cmp
int3
xor
iret
div
rcl
loopne
into
sar
inc
aam
cli
leave
in
loopne
in
rcl
hlt
div
idivl
hlt
shr
repnz
loop
out
cmp
leave
rol
in
iret
cli
nop
test
enter
rcl
lret
not
addb
std
out
stc
jmp
lock
in
sub
lock
cmp
lret
fidivl
ljmp
repz
out
out
out
into
addl
hlt
int3
cmp
ds
ss
fcmovbe
test
in
mov
cli
xchg
mov
mul
repz
cmp
cmp
fdivr
cmp
rcl
in
vshufps
leave
in
mov
out
hlt
jecxz
jmp
cmp
lret
int
cmp
shl
and
mov
in
lret
lret
repz
fst
cmc
enter
jecxz
roll
testl
repnz
sar
jmp
into
cmc
stc
icebp
lret
sti
out
repnz
out
shl
hlt
fdiv
iret
in
out
mov
in
out
cmp
cmp
ds
shl
lock
loop
enter
orl
xor
out
lret
lret
addl
call
out
jmp
frstpm(287
vpshlb
hlt
loop
bnd
clc
cld
cmp
test
not
out
fcomp
xchg
xor
jmp
xlat
ror
fcmovu
fcmovne
sbb
filds
push
lret
jg
add
in
xchg
mov
xor
aad
cmp
sti
repz
in
rcr
shl
xlat
xchg
ror
std
out
repnz
lock
loop
leave
leave
out
cmp
clc
ds
jmp
ror
cld
repz
repz
sti
out
fsubr
ds
into
out
test
ret
mov
into
ljmp
jmp
out
std
icebp
xlat
adc
roll
out
test
addl
loop
bnd
hlt
out
cmp
test
xchg
loopne
lret
leave
out
lock
cmp
push
rcr
aad
shl
jecxz
filds
call
xor
cs
cld
ljmp
orb
pop
test
lret
out
in
out
xor
cmp
xlat
idiv
loopne
into
not
in
cld
mov
cld
mov
out
int3
mov
in
ss
xlat
xor
repz
loop,pt
rcr
loopne
loope
stc
loop
in
int3
jmp
mov
in
aam
lret
in
fdivr
stc
movb
rcl
cli
aam
enter
fsub
xchg
leave
xor
in
out
sti
fcmovu
jmp
cmp
int3
ss
out
loope,pt
std
lret
xchg
fadds
out
xor
aad
test
shr
hlt
div
into
rcr
cmc
rolb
ficoml
mov
xor
loopne
shl
clc
cmc
mul
int
fmul
sti
std
in
enter
in
xchg
mov
lock
stc
cmc
div
incl
hlt
repz
roll
out
in
shl
xchg
test
shl
lret
fdiv
int
or
hlt
rcl
jmp
iret
out
enter
orl
ss
cmp
cmp
jecxz
cli
clc
cld
in
test
mov
mov
loopne
in
aad
out
ds
xor
stc
lock
cld
loopne
fldln2
stc
rcl
fcmovb
ljmp
jecxz
mov
out
lret
fnop
fucomip
std
sti
sar
lock
rcl
fst
ljmp
out
icebp
repz
ljmp
shr
imul
jmp
ljmp
fimull
ret
loope
icebp
out
lret
call
jmp
sti
sbb
test
fcmovu
leave
std
cmc
aam
faddl
out
int3
lock
ss
out
cmp
ljmp
loope
std
mov
mov
mov
ftst
ret
out
divb
loope
add
test
jmp
mov
jmp
xor
aaa
shlb
cli
leave
cmp
fcomip
in
lock
lock
cmp
enter
mov
mov
sar
cmc
out
aad
xlat
leave
out
cmp
int
jecxz
rolb
enter
leave
in
iret
xchg
repnz
xor
in
int
xor
xor
cmc
testl
loopne
cli
std
icebp
in
jmp
into
int
stc
xlat
cs
iret
lret
repz
call
in
sar
cmp
xchg
std
test
xchg
hlt
loop
aam
iret
int
div
leave
cmp
int
in
loop
sti
xchg
or
xchg
adcl
aad
neg
cmp
fsubrp
icebp
rol
iret
cld
lock
in
int3
xchg
ror
xchg
aad
int3
shll
fld
ss
xlat
rorl
xor
jmp
sbb
sub
out
repnz
fidivrl
and
xchg
stc
repnz
call
lret
loop
out
call
xlat
xor
repz
cmp
loopne
xchg
rolb
stc
mov
roll
ss
repz
ss
lret
clc
lock
out
call
int
push
lret
shrb
xor
idivl
aad
idiv
shl
jmp
loope
fdiv
std
loope
mov
out
mov
in
stc
shr
rcl
leave
icebp
and
roll
loop
mov
aaa
in
repz
loop
int
aad
ds
fcomi
in
lock
sti
ret
icebp
int
ficoms
int3
lret
aaa
icebp
out
aad
repz
clc
in
decl
in
out
loop
fstp
shl
imulb
repz
ljmp
loope
cmp
fcmovb
jmp
xchg
xchg
xchg
lret
xor
das
out
iret
xor
cmp
not
mov
into
mov
lea
in
fucomp
sti
xor
xor
cli
loop
ds
mov
test
sti
sar
mov
jmp
leave
ds
fstp
fnstsw
aaa
dec
jmp
mov
add
out
loope
divl
icebp
in
ror
cli
shl
fcmovnu
xlat
mov
std
call
fcmovne
xchg
test
ret
cmp
rolb
aad
test
jecxz
test
enter
sub
leave
loope
cmc
repz
leave
out
fcomip
adc
out
shl
fucom
jmp
int3
sbb
adc
out
fxch
stc
lock
icebp
std
sarl
into
faddp
test
fucomi
jmp
in
cld
test
out
in
ret
not
xor
cmc
stc
cli
fdivr
loop
ret
hlt
rolb
in
test
jmp
ljmp
int3
in
stc
icebp
std
sti
mov
stc
in
cld
xlat
decl
jmp
jmp
aam
rcr
sar
fmul
xchg
jecxz
and
mov
mov
lret
xor
xor
cmp
sbb
cmc
sub
cld
ljmp
ret
ret
fdivr
lret
int
icebp
lret
sar
adc
idiv
in
and
int
shl
bnd
cmp
fadds
jmp
mov
fisttps
ljmp
in
out
out
cld
fsqrt
lret
in
sar
fsubr
addl
repnz
jmp
xor
cs
cmp
adc
ret
rcl
lea
test
call
fnstcw
std
std
cmc
jmp
test
push
sar
stc
test
repnz
xchg
ss
leave
lret
cmp
cmc
out
aad
clc
test
ljmp
repz
call
aad
sti
shr
addl
cmp
loope
mov
xor
icebp
xor
repz
aaa
lret
out
out
loopne
in
clc
lock
addb
out
out
not
cmp
sarb
iret
mul
test
ror
xlat
ljmp
loop
aam
imul
int
sar
into
icebp
shll
lret
int3
and
xchg
out
call
lea
loopne
repz
cld
lret
call
cld
xlat
cli
in
addl
jmp
ret
jmp
jmp
cmc
in
repnz
les
std
or
out
out
fcmove
cli
fidivrl
sti
cmp
shl
fiadds
xlat
leave
out
loopne
in
repnz
ljmp
fcmovb
shr
testl
fdivr
int3
xchg
sub
enter
cmp
fucomi
repz
aas
icebp
ds
out
lret
fld
lea
lret
out
jmp
fucomp
clc
idivb
lock
jmp
fadds
xchg
repz
lock
lret
rolb
fnstsw
mov
imul
ds
stc
lret
mov
rcll
jmp
cmp
into
frstpm(287
fnclex
repz
aad
loop
mov
xchg
mov
aad
out
cmp
das
cmp
stc
hlt
xor
cmp
xor
in
lock
neg
cmp
xor
jecxz
rcr
call
sar
mov
idiv
in
adcb
clc
fcmovnb
call
icebp
fcomp
cmp
loope
fsubrp
incl
loope
xlat
in
icebp
in
lret
rcr
sar
int3
jecxz
ror
sar
in
in
out
loopne
repz
repz
fcmove
cmp
aas
out
sarl
ds
fcmovnu
repz
xchg
ljmp
int
in
ljmp
not
incb
les
stc
out
nop
jecxz
jecxz
ror
int
call
lock
ljmp
jmp
test
aas
aaa
out
fnstcw
std
leave
div
fnstenv
ds
fadd
mov
sbb
les
sti
xor
out
leave
hlt
sbb
repnz
jecxz
sbb
out
faddl
icebp
cmp
std
cmp
xor
loop
shl
out
sti
fcmovnbe
enter
repnz
jecxz
xor
fiaddl
fcmovnbe
fdivp
xlat
or
clc
xor
rcll
ret
in
ljmp
fildl
cld
cli
not
add
les
cli
fmul
ss
cmp
addl
aas
mov
int
out
out
mov
rol
ret
xlat
ret
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
jmp
iret
ret
fstp
insb
sub
repz
insl
leave
inc
mov
add
leave
cmp
cmp
aad
call
mul
mov
or
std
icebp
out
sub
in
in
ljmp
rcl
fxtract
fcmove
loop
aam
fisttps
call
jmp
leave
fdivrs
into
loope
loopne
rcr
cli
cli
loope
mov
test
loopne
sub
out
icebp
cmp
jmp
lret
cmp
fdivrp
loopne
test
fsub
mov
fsubr
sub
leave
out
lret
lock
lret
cmc
in
rcr
fiaddl
mov
rol
shll
cmc
aaa
in
cmp
in
jecxz
mov
mov
fcmovnu
repnz
in
aad
in
ss
loop
stc
rcl
lock
in
icebp
out
iret
xor
aad
call
icebp
std
sar
jmp
ljmp
enter
aaa
repz
ret
shlb
call
cmc
fcom
rcl
sti
fiadds
out
shl
shl
loopne
xor
stc
ror
aam
jecxz
sarl
sti
shl
out
aam
jmp
in
mov
sub
loop
cmp
cmp
fcmovnbe
jecxz
test
lock
in
xor
mov
hlt
jecxz
out
fucomi
bnd
rolb
mov
loop
in
stc
loopne
shl
in
hlt
mov
shl
cmp
clc
aam
ds
frstpm(287
test
call
jmp
xor
sti
divb
iret
filds
mov
int
lret
rcll
leave
ffree
fcmove
repz
mul
in
test
sti
clc
clc
fisttpl
xchg
fldcw
jmp
cmp
cld
cmp
xchg
std
test
mul
lock
into
ret
leave
clc
cli
cmp
ljmp
ret
cld
dec
out
loopne
loopne
out
xchg
les
iret
clc
enter
loope
ret
or
cmp
loopne
leave
mov
fdiv
iret
iret
fimull
das
int3
int
clc
les
jecxz
repz
loope
jmp
addb
out
loopne
enter
cmp
faddp
loope
loop
cli
mov
clc
adcl
in
xor
repz
lret
ffree
les
jecxz
out
lock
aaa
sar
aas
lock
loop
lock
fdivr
out
mov
xchg
cmc
xlat
in
repnz
cmp
aaa
div
ret
cli
aam
out
xlat
aam
incl
jmp
iret
shr
repnz
std
aas
fcmovnbe
in
loop
mov
fdiv
out
out
mov
fmul
xor
in
xor
into
cmp
shl
xor
fcomp
fsubp
fnstcw
loope
cli
loope
loope
lret
loope
iret
loope
in
cmp
lock
aad
call
fcmovnbe
neg
cli
ret
in
ror
out
decb
call
cmp
ljmp
fnstsw
in
leave
test
cld
enter
in
loope
out
hlt
cmp
aaa
into
cmp
in
stc
ds
sar
not
stc
ffree
out
loop
repnz
aad
hlt
idiv
cmp
repz
fldl
fcmovne
cli
cli
iret
ljmp
out
lret
pushl
ljmp
cmc
rol
clc
and
and
out
mov
in
hlt
enter
clc
clc
sub
in
fadd
out
loopne
int
xchg
in
cs
ljmp
cmpb
test
out
testl
mov
shrb
clc
fsub
leave
fdiv
std
repnz
cmp
xorb
add
ljmp
call
iret
rcr
jmp
lock
aad
xor
ljmp
xchg
into
loop
repz
iret
xor
icebp
out
cmp
fxch
shl
iret
lock
incb
lret
xchg
enter
xor
xor
loop
inc
int
ds
aad
fcomp
lret
jmp
adcl
jmp
cmc
hlt
in
int3
fdivrl
idiv
in
shl
mov
loop
in
ret
clc
in
out
xchg
call
xor
fidivl
into
ds
out
test
fcmovnb
mov
in
mov
mov
divb
fld
lret
jmp
neg
cmc
ret
hlt
jecxz
rolb
jecxz
mov
sti
cmp
enter
fucomip
lret
mov
mov
mov
mov
mov
xor
xor
add
add
jmp
rol
int3
fcmovnu
fcmovb
and
ja
adc
add
add
aad
repnz
loopne
lret
mov
xchg
mov
fsubr
iret
in
out
hlt
rcl
cmp
repnz
sti
jmp
lock
out
lock
neg
clc
call
xchg
mov
lea
lock
repnz
fnstsw
cmp
ljmp
lret
cli
mov
call
iret
loope
aam
test
lret
imul
roll
loopne
loope
xor
xchg
lock
loopne
int3
repnz
shll
ss
out
lock
rolb
flds
fimuls
out
xlat
ror
sar
aas
int3
faddl
jmp
orb
cmc
vpand
ds
ret
div
ret
addb
ret
cs
leave
std
rcl
xor
out
repz
fucomip
call
sti
clc
std
repnz
rcl
sub
shl
out
fadd
in
iret
shl
loop
fstpt
not
stc
loop
ficoml
in
sub
xor
iret
fsubr
aam
lret
repz
xlat
loopne
addl
push
ficoms
xor
ljmp
vpsraw
lret
cli
out
std
in
lret
jmp
fadd
shlb
cmp
cmc
xlat
cli
sbb
fucomip
fdivrp
jmp
fimull
cmc
aad
xor
imul
idivl
loope
addl
fstl
fnstenv
xor
stc
icebp
leave
stc
cmp
stc
fucomp
xchg
xlat
cli
cld
idiv
test
fdivp
mov
xor
enter
idiv
lock
cld
out
flds
std
cld
mov
in
repnz
loopne
ret
jmp
out
cld
lret
lret
mul
into
loopne
fildl
sti
mov
nop
iret
into
sub
lret
into
iret
fucomp
iret
in
xor
sar
cmc
loopne
jmp
loopne
enter
xchg
aam
out
in
stc
call
into
out
loope
cmp
cld
fildl
jmp
loopne
mov
sti
jmp
lock
shl
repnz
rolb
in
fstp
loope
mov
mul
xor
cmp
jmp
test
and
fcmovnbe
mov
shr
xchg
sti
cmp
leave
in
ljmp
fsub
fdivrl
loopne
fistl
xor
hlt
ljmp
sarb
rcr
rorl
lret
iret
into
leave
icebp
xor
aam
out
imulb
cmp
sarl
loop
rcl
clc
xchg
icebp
xchg
int
pushl
aaa
xor
xor
fcomi
lret
rcl
ret
fmulp
stc
hlt
in
incb
rorb
repz
sti
iret
cmp
loop
test
lock
sti
mov
into
lock
ds
in
int3
xor
cmp
aas
sar
std
rol
shr
cli
std
in
test
xchg
rcl
ret
jmp
fdivr
aad
cmc
in
out
and
fldl2e
orl
sbb
jecxz
in
xor
repnz
in
ds
jmp
rorb
xor
loope
call
in
shl
iret
sar
addl
out
fcomi
icebp
loope
out
xor
int3
call
sti
in
std
rolb
or
orl
out
cmc
int
div
shr
fcmove
cmpb
mul
call
leave
fdivrp
ficoml
in
out
cmp
ljmp
cmp
mov
movb
icebp
sub
xor
std
jmp
testl
sbb
xchg
adc
cmp
xlat
enter
rcr
cmp
aas
rcr
lret
sbb
enter
aaa
shl
call
int3
in
test
clc
mov
xlat
in
out
icebp
xchg
icebp
ret
lret
xor
clc
aas
aaa
xor
iret
cmp
clc
out
xlat
xchg
in
in
int
test
out
cmp
in
sar
aas
fmulp
stc
cmp
inc
enter
ffree
in
and
in
mul
jmp
into
div
jecxz
cli
cmp
clc
mov
xchg
out
lret
fdivr
cld
out
int
xlat
mov
hlt
hlt
cmc
fnstsw
std
hlt
jecxz
fdivr
stc
cmp
fadd
in
call
icebp
out
xor
idiv
cld
stc
sarl
loope
out
fdivrl
fimull
scas
mov
cmp
jmp
iret
aad
ret
fst
dec
cwtl
mov
push
lock
add
ljmp
rorl
idiv
iret
rol
ljmp
out
idivb
push
shl
in
lret
decl
int
in
sub
ljmp
sti
int3
ret
out
rol
add
loop
xchg
xchg
into
nop
ror
sub
int3
cmp
in
cmp
test
fadds
mov
ret
in
std
fcmovne
enter
xor
out
ljmp
cmp
iret
repz
aad
vpaddsb
cmp
lret
xor
rcr
cld
iret
ret
xchg
ret
std
cli
loop
in
test
xchg
int
xor
xor
xor
sti
in
rcl
repnz
sar
cli
out
in
jecxz
std
mov
fdivr
mov
xchg
lock
jmp
jmp
cmp
xchg
cmc
repz
jecxz
std
fcos
xchg
cli
jmp
xor
icebp
xor
aad
cmp
rol
test
xchg
call
repnz
mov
xlat
iret
fnstsw
fnstsw
loopne
idiv
icebp
out
xchg
fimuls
int
ljmp
out
aam
shr
fdivr
aas
iret
loopne
mov
xchg
leave
mov
repz
into
shlb
jmp
out
icebp
into
cmp
jmp
loop
loop
loop
cli
addl
in
in
cmp
cld
ror
aam
rcl
fdivp
in
loope
mov
std
mov
mov
cmp
shl
cmp
ror
ffreep
icebp
icebp
fucomp
test
fcmovnbe
lret
nop
std
incb
xor
aam
lret
ret
sbb
in
hlt
xchg
loop
lret
fisttps
xor
lret
enter
idiv
lock
out
fcomi
repz
fstpt
aad
cmp
cmp
in
cld
int3
cld
loope
sarb
sbb
enter
mov
loop
clc
loop
aad
cmc
ljmp
xchg
xchg
in
loope
iret
jmp
loopne
jmp
jmp
cmp
repnz
int3
clc
ret
into
out
cmpb
jmp
xchg
loope
into
xor
xor
enter
repz
cld
cmp
testb
lock
adc
loopne
ret
xor
shl
loope
cmc
repz
ljmp
out
lret
clc
repnz
aad
lret
into
out
aas
out
sti
test
fndisi(8087
enter
repnz
lock
into
into
lock
idiv
aam
lock
aad
adc
test
cld
fsubp
test
loop
xor
lock
cmp
int3
cmc
fmul
fcmovu
out
aam
aad
mov
test
xchg
xchg
iret
xchg
in
cmc
enter
cmp
hlt
cli
hlt
lock
stc
cmp
sbb
jecxz
mov
mov
fisttpll
repz
sub
shr
cld
int3
neg
aas
out
out
call
aam
mov
test
lea
into
test
cmp
int3
loopne
in
out
and
aad
in
ljmp
lock
in
out
aam
out
rcl
cmp
sti
ds
loop
fst
mov
enter
in
loop
xor
xor
cmp
int
cmp
test
out
in
jmp
aaa
rcl
fptan
enter
ds
fdivr
bnd
mov
int
int3
lock
xorl
clc
out
hlt
cld
cmp
cli
fcmovbe
cld
hlt
jmp
fsub
fcmovnu
mov
in
out
xor
call
fcmove
xor
cmp
sbb
aad
repnz
in
dec
xchg
int
repnz
into
xor
in
rcr
cmp
cmp
aas
std
orl
fsubrp
in
in
in
in
out
not
cmp
jecxz
shl
rcl
xchg
aad
fcmovnu
mov
cli
mov
in
cmp
cmp
ljmp
cmc
fld
mov
cli
repnz
out
ret
in
xor
lret
hlt
cld
fstp
xchg
in
lock
xor
loop
shl
fnstsw
stc
sti
cmp
adc
out
lret
fmul
test
into
xchg
xor
sub
in
xor
fucom
int
in
shl
call
loope
enter
nop
not
xor
jmp
aaa
cmp
iret
addl
out
in
out
out
cld
in
call
stc
loop
cmc
ss
lret
cmp
lock
idiv
ljmp
cld
jmp
iret
int
ret
fstp
sbb
mov
jg
add
lret
jecxz
repz
aam
into
repz
rcl
cmpb
aad
xchg
int3
push
sub
fsubp
leave
xor
int
aad
aad
in
rol
std
ret
loope
mov
out
in
roll
iret
iret
fcmovbe
jmp
shr
cmp
clc
shl
xchg
in
in
dec
mov
enter
int
out
call
xor
roll
in
loopne
or
mov
mov
rorb
jecxz
cmp
aad
fstpt
rcr
rcr
imul
ljmp
aad
cs
jmp
std
vpaddusw
out
cmp
and
shl
in
out
in
test
loopne
xchg
aas
shl
jecxz
aam
cmp
ljmp
shl
aad
out
xchg
xchg
mov
int
mov
loop
xor
sarl
sti
sar
aad
rol
test
test
loop
or
in
ret
hlt
hlt
shr
stc
in
aaa
icebp
shl
repnz
ret
hlt
addl
rcl
call
out
sarb
aam
int3
hlt
xlat
repz
xlat
loope
out
fucom
jmp
stc
jmp
cli
repz
into
aaa
iret
xor
cld
std
sar
repz
cld
cli
cmp
into
dec
xchg
xchg
ror
call
in
fdivrs
repnz
fnstenv
out
fadd
sti
cli
call
stc
loopne
loopne
xchg
aas
out
stc
xor
int3
in
hlt
rol
hlt
fcmovnu
aas
rcr
std
and
idiv
xchg
ljmp
icebp
sti
lock
cmp
clc
cmc
lret
xlat
lock
into
sbb
out
mov
repz
in
out
std
out
out
out
sti
into
cmp
ret
stc
ret
jmp
in
in
fsubr
sub
out
out
int3
sub
call
fmul
or
call
sti
repnz
xchg
lret
test
in
in
ljmp
aad
fmul
test
into
cmp
ffree
loope
int3
xchg
divb
in
int
cmp
loope
sti
cmp
fdivrp
in
lret
cli
out
nop
call
loope
into
ljmp
fcmovbe
stc
repnz
rolb
loopne
mov
out
jecxz
int
cmp
aam
sti
cmp
fsubp
test
ffree
cld
mov
addb
xor
aaa
aaa
flds
std
jmp
fdivr
in
in
in
ror
icebp
sar
iret
cmp
fbstp
aas
aam
int3
fadd
inc
shr
xchg
cli
mov
imul
ror
out
cmp
ds
cli
sar
ret
rcr
test
jmp
icebp
ret
rol
ljmp
stc
std
cmp
idiv
xchg
jmp
jmp
out
lret
lock
sub
xor
cmp
std
bnd
int
faddp
std
call
leave
loopne
mov
jmp
hlt
into
jmp
xlat
or
add
repnz
std
fimuls
jmp
fdivl
iret
idivb
repz
sar
clc
fcompp
jmp
enter
or
ret
rol
ss
aam
shl
roll
out
aam
flds
aad
hlt
out
out
loopne
std
std
cld
hlt
cmp
call
shl
jmp
addb
into
int
lock
xor
cmp
loope
ret
test
fmuls
int
ror
xor
leave
stc
cmc
sti
loope
int
in
cmp
mov
loope
cld
mov
das
out
sti
aad
cmp
jmp
rcl
incl
aam
fmul
fsubr
in
mov
lret
out
in
in
cmp
fcomp
cmp
fdiv
aam
loopne
xchg
call
fimull
sub
loop
icebp
repnz
aaa
neg
out
cmc
cmp
into
fstp
std
ret
cmc
shl
ret
imul
xlat
jmp
loop
out
loope
xchg
sub
shl
cmp
xlat
jmp
fucomp
sub
test
lret
std
leave
sbb
mov
xor
jecxz
ljmp
in
push
sarl
in
mov
cmp
in
mov
shl
xor
out
jmp
icebp
xor
out
fdiv
aad
ret
testb
stc
sub
repnz
aam
shl
out
cmp
jmp
sarb
test
cmc
jmp
test
and
enter
lret
cmp
in
icebp
in
rol
in
test
stc
test
ljmp
mov
pushl
ret
jmp
rol
sarl
rcl
mov
fcmovu
test
jmp
jl
enter
fxch
fldl
clc
out
jecxz
test
xchg
fmuls
rol
aad
jmp
cld
fdiv
in
rol
aad
cmp
jecxz
out
lock
test
in
ret
lock
cld
cmpb
in
repnz
cmp
lds
xchg
loopne
leave
ret
cmp
out
cli
adc
repnz
jecxz
leave
fldl
out
aad
enter
and
cli
lret
fisttpll
xchg
ds
cs
call
sti
les
lds
fcoml
ss
hlt
int3
aad
fdivr
sar
aas
aas
hlt
rcl
ljmp
out
addl
not
shr
xor
rcl
xchg
vpmacssdd
ficoms
xlat
xor
xlat
int
cmc
jmp
iret
aas
sti
ds
xor
cli
mov
in
in
jecxz
enter
cli
lret
hlt
ds
rolb
mov
mov
into
jecxz
test
xchg
in
xor
div
jmp
repnz
rcr
addl
fsubr
jecxz
test
mov
ror
aam
aas
cmp
lock
testb
mov
in
cli
movb
xor
cli
leave
cld
icebp
aad
aas
call
out
xor
leave
ret
add
loopne
into
faddp
in
enter
icebp
stc
in
sti
loopne
out
loopne
repz
xor
in
mov
icebp
mov
cmc
in
cmp
ss
jmp
cli
clc
addb
mov
and
xchg
into
hlt
das
cmc
cmp
xor
aaa
enter
fucom
loope
ret
cmp
loope
xchg
xor
int3
fnstenv
idiv
in
jmp
iret
in
cmp
test
cmc
fadd
fchs
icebp
in
out
out
icebp
fsubr
ret
out
iret
cmp
std
loop
iret
idivb
xchg
fcmovnb
incl
nop
nop
ror
xor
ret
clc
fidivl
xor
ljmp
cmp
out
cli
out
int3
fcmove
faddl
repnz
fucomi
out
clc
into
sbb
not
sar
aam
in
in
int
mov
mov
rcl
xor
fcmovne
shr
in
jmp
aam
fnsave
repz
leave
out
ret
in
fcmove
out
imull
cmc
loop
shl
aaa
aaa
lock
shl
aam
vpsubusb
into
sar
loop
xor
aaa
aaa
aam
ror
fcmove
faddl
loope
jmp
hlt
int
leave
shr
hlt
lret
lret
iret
bnd
out
out
fldl
mov
shrb
leave
out
shll
enter
lret
repz
out
loop
xchg
rcl
test
enter
shr
in
repnz
sarb
cli
loope
repnz
ret
fucom
roll
test
enter
in
or
shll
das
fdiv
repnz
xor
cmp
fstpt
rorb
call
loop
divl
repz
icebp
fidivs
aaa
int
fstpt
clc
ret
mov
xchg
ljmp
in
sub
sub
xor
jmp
ss
repnz
decl
int3
lock
rcl
in
in
xor
jecxz
out
xchg
jmp
out
lea
test
jmp
stc
cmc
ds
sti
loop
out
hlt
call
loopne
loopne
orl
aam
ss
fcom
loopne,pt
int
xchg
aad
aam
hlt
jecxz
cld
cli
out
enter
rol
xlat
ljmp
lret
shl
stc
out
test
enter
test
mov
xor
ss
into
neg
out
int3
int3
cmp
cmp
cmp
jmp
out
in
cld
cmc
in
loope
repz
cmp
fnstcw
rolb
jmp
icebp
roll
in
cmc
repz
fcomp
shl
sti
and
jmp
clc
xchg
mov
push
iret
xor
cmp
roll
icebp
mov
out
cmp
mov
out
aad
lock
out
sti
shr
stc
ds
cmp
fdivrp
shl
in
std
fxch
orb
fiadds
cli
jmp
out
aas
jecxz
fstpt
enter
sti
addl
jmp
idiv
idivb
or
incl
add
aad
aad
push
mov
int3
daa
in
jg
add
hlt
sti
fdecstp
iret
out
sar
test
jmp
fdivr
jmp
xchg
iret
ss
cmp
xor
sti
cmp
stc
hlt
test
ret
fmull
repz
rol
cmc
stc
cmc
sti
cmp
in
aas
rcr
fdivp
movl
mov
in
repz
jmp
cmp
call
aas
jmp
hlt
fimuls
cmp
call
sarl
aaa
xor
aad
aad
std
aad
xlat
mul
hlt
ljmp
loopne
aad
sub
ss
sti
stc
iret
sbb
ffree
cmp
fcos
sbb
mov
shr
clc
hlt
in
xlat
jmp
incl
in
jecxz
out
cli
fldl
lock
int3
xor
into
xor
sarl
int3
test
fscale
hlt
mov
sti
test
lret
jecxz,pn
hlt
hlt
cmc
ljmp
std
roll
xlat
lret
jecxz
xchg
repz
out
call
hlt
clc
test
cli
xchg
test
xchg
in
xor
enter
lret
int3
fcmovu
mov
jmp
xchg
loopne
loope
ss
shr
lock
xlat
fmul
xor
aas
fisttpl
mul
int3
orb
in
out
imul
lret
int3
xor
mov
in
mov
out
and
test
cmc
cmp
rcl
hlt
out
fninit
xlat
loope
aad
fnstsw
loope
cld
int3
shr
ret
mov
xlat
enter
aaa
in
ljmp
mov
leave
fsub
out
loopne
xchg
mov
test
cmp
cmp
repz
loopne
lea
sar
rclb
fsqrt
xor
aad
out
adc
addb
cmp
lds
in
cli
sar
fidivrl
ljmp
out
clc
fdiv
adc
les
aad
rcl
loopne
int3
out
cmp
repnz
enter
ret
ror
mul
adc
jmp
xor
hlt
aam
xor
fiadds
test
fisttpll
faddl
sbb
out
lock
das
repnz
lock
repz
std
hlt
cli
sbb
test
into
fimull
shl
out
xlat
into
xor
ds
div
cmc
into
cmp
std
jecxz
cld
orl
rcr
lock
neg
sti
call
fcmovu
sti
fprem1
sub
in
mov
and
out
enter
stc
icebp
enter
shr
ds
out
fdiv
fucomi
cmp
lock
nop
aad
xlat
ror
into
in
cmp
in
enter
xor
jmp
lret
lock
cli
repnz
ror
lret
out
cmp
enter
in
lock
loopne
mov
test
jmp
out
adcb
loopne
lret
enter
int3
clc
out
cmp
jecxz
sti
fsubp
int
out
iret
hlt
cmc
jmp
cmp
lret
loope
aad
ret
clc
cmc
test
sar
xchg
mov
iret
lret
shll
iret
not
jmp
cmp
cmp
xlat
int3
sti
int
rorl
bnd
lret
lret
test
add
aam
add
loope
jmp
xchg
shl
loopne
lret
lret
aam
ds
ret
shl
ljmp
loope
mov
ljmp
in
out
bnd
aam
loopne
fldl
xlat
lret
call
loope
out
lock
xor
cli
ss
cld
adc
test
fcmovnu
mov
mov
ljmp
in
int3
ss
incb
push
jmp
enter
nop
xchg
mov
loope
test
xor
cmp
ss
neg
neg
sti
jmp
jmp
fiadds
xchg
xlat
ret
call
enter
fsub
cld
int
shl
xchg
mov
in
xor
ss
repz
ljmp
addl
fisttpll
incl
int
aaa
fnsave
xlat
cmp
lret
fld
jecxz
filds
out
in
repz
fstpt
aam
fcmovnbe
lret
addb
or
lret
mov
lret
xchg
std
ljmp
leave
test
repnz
imul
add
mov
mov
pop
leave
ret
push
mov
push
not
push
movl
mov
mov
mov
mov
mov
movl
cmp
movl
jmp
int3
aam
xlat
fst
fldl
mov
or
cmp
jg
std
add
shl
shl
cld
in
xlat
leave
cli
shr
iret
iret
jmp
shr
xor
out
icebp
vpsrlq
cmp
idiv
stc
sar
neg
test
in
loope
mov
lock
cld
loop
in
xor
not
fcomi
rcl
jecxz
clc
inc
shr
aad
leave
sub
mov
icebp
add
sti
cmp
out
loope
aas
sti
lock
shl
mov
int
int3
in
cld
and
ds
cmp
repnz
cld
cmp
sarb
fistpll
fcmovu
clc
sti
mov
out
aas
ljmp
jmp
cmp
out
shl
ret
aam
mov
leave
shl
loopne
mov
shlb
lock
sti
fcmovu
std
in
fadd
ds
mov
cld
xchg
xchg
loop
hlt
test
iret
cmp
sti
int3
repnz
out
cmc
jecxz
loope
fisttpll
icebp
ljmp
clc
lret
clc
lock
icebp
mov
ret
fcmovu
mov
mov
ret
out
repz
sar
int3
sar
out
fistpll
fdiv
repz
call
cli
cli
movl
fcomi
fidivl
roll
ds
nop
lock
fdiv
imul
cmc
cmp
xor
repz
shl
aas
fiadds
in
sti
enter
ret
repnz
fnsave
cmp
cmp
in
fimull
hlt
out
mov
in
loopne
aaa
aaa
shll
ljmp
repz
test
cmc
and
sti
lret
orb
shl
out
sar
cmp
ljmp
shr
ret
mov
cli
in
enter
das
shr
xlat
rcl
lret
div
repnz
cld
cmp
in
cli
leave
mov
shl
and
into
neg
int3
out
iret
cmp
out
int
fsub
loopne
repz
in
mov
test
fidivrl
into
fcmovu
ret
sarl
faddl
xor
in
addb
int
xor
shl
int
aas
addb
out
out
fcomi
leave
shl
cmpb
in
in
xor
loope
in
into
div
fcmove
fcom
filds
xchg
ret
aam
aam
repnz
ds
shl
shl
rcl
in
in
dec
ret
roll
call
std
int
std
hlt
stc
rcr
sti
adc
fmull
addb
call
call
xlat
fiadds
mov
stc
ror
nop
out
xchg
in
out
shrb
in
fdivrl
imul
fdivp
vpsraw
clc
out
call
xchg
int
jmp
ret
aam
cmp
rcl
xchg
cld
aad
and
jecxz
fcom
xor
shl
not
sarl
int
aaa
not
rcr
jmp
std
xlat
shl
frstpm(287
ret
shr
mov
test
imul
in
ror
enter
xor
cmp
ds
jecxz
les
iret
leave
loope
iret
test
out
call
cmp
idivb
jmp
ret
fcomip
jmp
ljmp
aam
cmp
loop
shl
in
fsin
mov
mov
xchg
xor
enter
fxch
fsub
aad
shl
fdivrl
sti
sti
lock
iret
les
fidivs
xor
cmp
rcl
test
shl
add
jmp
mov
lret
int3
in
icebp
xor
aad
in
into
div
div
cmp
rol
addl
mov
cmc
ljmp
out
ss
xlat
ds
aam
into
hlt
aad
std
cmc
fucomip
leave
out
loop
lret
shl
jmp
xor
out
ror
incb
out
in
jmp
lock
int3
out
aam
aad
int
hlt
repz
sarb
aad
test
in
std
and
icebp
rol
int
in
fdivrs
ljmp
clc
jmp
leave
sti
fldl2e
roll
out
int3
jmp
icebp
cmc
fdivr
fisttpll
test
add
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
mov
xor
mov
add
mov
movzwl
not
jmp
rcl
ror
fstp
fldenv
lods
add
std
add
into
loop
xchg
and
mov
repnz
rol
repz
sub
repnz
fcos
ljmp
test
or
rorl
out
icebp
jmp
stc
idiv
aam
into
icebp
fcomp
clc
aam
fsub
aam
loop
xchg
cld
addl
in
out
in
aad
xor
clc
into
clc
fcomip
aam
ljmp
into
in
xor
in
jmp
sti
clc
fdivrp
iret
shl
test
jecxz
in
ret
filds
lret
cld
repz
ret
sti
cmc
in
enter
aaa
icebp
flds
call
out
mov
shlb
cld
fldz
out
in
enter
sti
xchg
aam
mov
test
in
loope
out
in
into
in
lret
fmulp
lock
jmp
call
and
jmp
cmp
lock
cmp
out
xor
cld
repnz
xor
mov
lret
aam
in
sti
xchg
mov
and
in
cmp
in
leave
ds
cmpb
cmp
test
cmp
out
in
fnstenv
xor
shlb
in
std
fsubr
fnstcw
ret
fsub
cmc
aad
shl
lea
test
jmp
leave
call
cmp
ds
loop
or
ffreep
sti
cli
in
lret
loop
ljmp
lret
jmp
out
in
lock
stc
loope
aam
add
loope
cld
in
loope
icebp
sub
aaa
ss
rcl
lret
xor
cld
rol
xchg
lret
out
mov
fisttpll
jmp
fmul
xor
repnz
repz
cli
loope
in
mov
mov
mov
xor
in
cli
lret
icebp
rcl
test
in
sti
loopne
int3
loope
loope
adc
repz
not
xor
jecxz
out
cmp
les
int3
neg
cld
dec
mov
aam
rcl
clc
iret
out
call
shr
in
sti
repz
mov
mov
or
mov
rol
les
xor
jmp
aaa
fsubr
jmp
xchg
jecxz
cmp
lea
or
icebp
shrl
int3
in
fcomp
lock
leave
int
in
fsubp
aas
orl
out
sub
lret
xor
xor
shl
not
fcmovnb
cli
rcr
xlat
ret
fucomip
in
test
mov
mov
ret
int
jmp
repnz
cmp
cmp
lock
cmc
fadd
mov
xchg
aam
jmp
int
fnstcw
fsubr
jmp
ds
cmc
rcr
fadd
jmp
addb
loopne
xlat
ljmp
xor
cmp
in
jecxz
sar
leave
cmp
out
xchg
fisttpl
int3
imul
xlat
icebp
cmp
in
lock
shl
ret
stc
xchg
cli
test
ds
loope
iret
mov
into
into
aaa
fmul
int3
out
sar
loopne
fcomip
in
fucom
roll
lret
loopne
nop
fstp
cmc
in
not
xor
std
aad
ss
imul
icebp
test
rcr
idiv
call
xchg
in
loopne
fmul
in
cld
sarb
ss
in
fcomi
sti
in
stc
ret
ret
stc
rol
out
mov
enter
xor
stc
cmp
std
cmp
cld
addl
fsub
clc
mov
out
ficoms
cmp
enter
jmp
loopne
cmp
cli
ret
stc
vphaddwq
jmp
mov
loopne
fmul
lock
cmp
shl
cld
cmp
xchg
fdivr
fcom
shl
add
addl
shl
in
ljmp
mov
jmp
test
loopne
repz
ret
ret
into
sti
call
ret
loop
xchg
call
cli
icebp
lret
add
xor
jecxz
mul
hlt
xor
clc
aad
in
or
fldz
lret
loopne
shl
call
hlt
cmp
cmp
aas
fldl
mov
fimuls
out
lret
test
lret
hlt
lret
repnz
iret
test
fldl
cli
test
repz
in
leave
mul
shll
cmc
ds
add
jmp
jmp
enter
fstp
fstp
adc
mov
jl
add
cmc
out
xchg
testb
out
rcl
leave
out
stc
shl
loope
cmp
aad
fsub
jecxz
enter
fucomip
in
sub
shl
jmp
cmp
sti
int3
out
ds
fcmovnb
out
notl
mov
idivl
cmp
xlat
sbb
roll
push
movl
xor
loopne
hlt
xor
cs
cmc
cli
rcr
shr
fsub
in
mov
in
lret
cs
leave
fcomip
loop
rolb
sti
jmp
mov
enter
xchg
icebp
div
xor
fcomp
xlat
cmp
fxch
clc
ds
fadd
rolb
in
jecxz
icebp
mov
repnz
mov
les
cs
aad
in
rcr
rolb
leave
loope
orb
cmc
repnz
repz
shr
rcr
test
iret
sub
imul
cld
leave
cld
loopne
and
fdiv
incl
sar
shl
into
lock
xor
out
not
or
enter
xor
roll
ror
cmp
call
icebp
fcmovbe
repnz
xlat
rcr
loopne
jecxz
mov
fcmovbe
xchg
mov
leave
aam
xor
repnz
sti
fucom
test
cld
sar
shl
xlat
mov
xlat
xchg
jmp
jecxz
int3
shll
sar
lock
cmp
dec
jmp
int3
decl
iret
int
iret
icebp
xlat
clc
cmc
shl
sbb
leave
repz
in
jmp
enter
ret
jmp
lock
ss
std
cmp
fnstsw
xor
in
lret
incl
jecxz
sub
out
ljmp
cmp
ret
sti
fld
hlt
repz
jmp
mov
out
or
iret
enter
cmp
xor
test
xchg
mov
out
out
in
out
xor
lret
xor
in
fcomi
shl
lock
cmp
lds
enter
test
xor
aad
clc
in
cmp
jecxz
cmp
repz
cli
fmuls
in
aad
out
icebp
ljmp
fidivrs
ret
aam
ds
hlt
mov
fucomp
into
loop
std
xchg
aad
enter
ss
into
loop
ds
test
cmc
incl
std
mov
lret
nop
test
lock
icebp
ljmp
repz
mov
sti
xchg
nop
sar
rclb
lock
jmp
push
cmpb
xor
out
aas
rolb
lret
icebp
lret
int
enter
cmc
shl
enter
fld
aam
call
orl
sarb
sar
cmp
ss
lret
rol
out
hlt
call
ret
out
rol
out
repnz
out
sar
lret
loope
ret
test
fildl
loope
ds
xor
lret
lret
in
fiaddl
cmp
div
shl
test
sub
in
hlt
jecxz
icebp
iret
aad
xor
aas
cmc
and
addb
clc
mov
in
addb
loopne
out
ret
out
xor
int
loope
or
lret
cli
jecxz
in
jmp
rol
in
in
cmp
icebp
lret
cmp
aad
fucomp
loopne
clc
aam
ljmp
cmc
rclb
repz
xor
xlat
cmp
testl
test
int
mov
aad
fcomp
hlt
xor
fdiv
ljmp
repz
ljmp
std
jmp
cmc
clc
out
sbb
aas
cld
cmp
enter
xchg
out
into
cs
shlb
cmp
iret
cld
repnz
cld
testb
pop
xchg
loope
xchg
into
aaa
repnz
icebp
shr
loope
out
ljmp
fcomip
out
cld
in
ret
rcr
test
lock
loopne
repz
cmp
fdivp
call
repz
ret
into
fstpt
in
rolb
push
jmp
aad
rcr
fstp
sbb
mov
jg
std
add
loope
out
leave
mov
fmull
loope
iret
cs
std
jmp
lret
fcmove
xor
fsubp
mov
lret
nop
out
adc
loop
lret
xlat
out
out
repnz
iret
icebp
fcmovnu
xlat
inc
repz
neg
aam
mov
std
rol
fidivs
shr
fcomi
in
ror
sar
clc
and
jecxz
enter
into
enter
ljmp
shll
into
cmp
aas
repnz
repz
ds
jmp
call
mov
mov
out
repz
fdivrl
repz
inc
xchg
hlt
cmc
add
std
mov
rolb
out
lret
sub
in
fucomi
cmpl
cli
in
leave
fmulp
jecxz
int
fiadds
shl
iret
cmc
int
cmp
aaa
cmp
or
roll
stc
ret
test
rcll
fdiv
xor
cmp
rcl
rcl
fdivrp
fcom
orl
mov
adcl
cli
aad
rcl
in
cmp
shl
std
incb
and
mov
xor
loope
icebp
les
cmc
aas
cmc
jecxz
lret
aad
inc
cmpl
clc
in
test
out
lret
rol
fcomp
xor
fdivp
not
lock
xlat
std
jecxz
fld
xchg
mov
in
iret
call
int3
ror
cli
iret
cmp
rcr
repz
jecxz
ret
out
ljmp
out
stc
test
call
hlt
cli
testb
jmp
mov
lock
in
rcl
call
cmp
cmp
ret
hlt
xchg
inc
enter
mov
loop
lock
ljmp
cmc
aad
aas
xchg
jecxz
fcmovnb
test
rcr
xor
icebp
loopne
int
xor
cmp
test
fcomi
aam
fdivrp
fisttps
in
xchg
icebp
lret
shl
xor
fcmovnbe
fdivp
idivb
adc
std
loop
call
in
repz
fstpt
sarb
idiv
loope
filds
xchg
fisttpll
cld
into
jmp
rol
ror
cmp
shl
sar
inc
fcmovnu
xlat
in
fcmove
xchg
jecxz
mov
out
call
sti
roll
rol
dec
out
leave
mov
xchg
loopne
ret
lret
fld
out
jmp
int3
loopne
sar
in
sar
mov
enter
loope
int3
int3
ror
fcmovnbe
aaa
hlt
call
aam
addb
fucomp
call
icebp
ret
in
fucomi
rcl
fsubr
jecxz
cmp
iret
out
in
loope
stc
aas
in
loop
cld
cmc
std
rol
shr
clc
loop
lret
stc
in
sar
test
ffree
mov
or
xchg
ljmp
das
into
fldz
in
ss
in
jecxz
ret
sti
lds
orb
call
fld
fyl2xp1
cmc
into
aam
repz
test
stc
fdivr
stc
lea
int
in
in
fsubr
icebp
int3
jmp
cld
xlat
lret
cld
rol
lret
fsubp
or
or
xchg
test
lret
xlat
xor
cmp
cmp
icebp
cmp
loope
std
aas
loope
hlt
repnz
jmp
in
xchg
stc
enter
icebp
int3
sti
rolb
fiadds
out
filds
xor
les
aas
loope
std
jmp
loopne
sarb
repz
cld
jmp
lret
out
leave
into
sar
iret
into
cmc
fsub
stc
lret
into
and
aam
cmp
call
addl
cmp
jmp
std
cmp
fcmovb
inc
enter
int3
test
loopne
mov
loopne
fscale
sarb
aad
out
repnz
imul
xchg
cmp
fabs
lret
ljmp
leave
shl
icebp
std
loope
in
ds
sbb
leave
loop
jmp
out
lret
xchg
xchg
in
xor
hlt
enter
cmp
xchg
cli
loopne
repz
lret
mov
test
adcl
xor
sar
frstor
inc
clc
pushl
call
test
je
leave
ret
push
mov
sub
adcl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
aad
xlat
int3
ret
sahf
xor
add
into
loopne
in
clc
jecxz
lret
cmc
xchg
xchg
xchg
dec
leave
div
fadd
ljmp
ljmp
cmc
orl
jmp
iret
in
shr
repnz
cld
in
neg
iret
loope
sti
rcl
rol
loop
leave
jmp
mov
call
stc
int
ror
xlat
icebp
in
repnz
std
call
enter
out
call
xor
xor
loope
loopne
ret
sarb
icebp
fcmovbe
sar
loopne
out
xchg
xchg
rolb
int
cli
out
stc
cmpb
idiv
repz
hlt
fadd
out
lret
ljmp
rcr
sub
lock
repnz
aam
stc
cmpb
sub
jmp
in
mov
lock
lret
loope
xor
xlat
cmp
repnz
imul
sti
fcmovb
cmc
incb
fdivp
icebp
out
call
out
repz
fdivrs
aas
loope
lock
xchg
ret
mul
loope
out
fadd
ror
enter
icebp
cmp
out
loop
repnz
idiv
lret
fdivp
jmp
hlt
lock
ret
shl
std
xlat
ror
aas
fdivrp
ret
repnz
aam
test
addl
in
cmp
jmp
int
cmp
cmp
mov
enter
sar
into
lret
fsub
xlat
ss
std
roll
xchg
out
ljmp
rorb
shll
xor
not
ss
jmp
sti
fcomi
fdiv
mov
test
ror
test
loopne
cmp
sub
ss
hlt
lret
aam
jmp
cld
neg
cli
int3
cmc
hlt
out
shr
xor
sti
shl
jecxz
test
and
test
loopne
out
out
loop
xchg
cld
repnz
ljmp
hlt
cmp
loopne
cmc
call
sub
addl
out
loop
repz
fsubrp
mul
xor
jmp
xor
std
in
out
int
xlat
aam
in
aad
repnz
in
loopne
cmp
stc
ret
leave
ljmp
out
in
mov
aam
sub
xor
xlat
out
fcmovbe
loopne
cmp
in
out
loopne
int
iret
out
in
mov
int3
cmp
idivb
enter
icebp
xlat
cmp
fnstcw
stc
mov
test
aad
xor
mov
leave
fdivrp
aam
sbb
fabs
aam
lret
out
mov
in
in
in
shr
fcomip
lock
icebp
mul
sti
ror
int
fucomip
loopne
jecxz
push
loope
std
mov
stc
iret
repz
idivb
not
xlat
bnd
loop
jmp
loope
out
int
cld
loopne
xorb
sar
icebp
xor
out
shl
cld
cmp
std
repz
decb
adcl
aam
xor
enter
ret
clc
icebp
incb
test
out
test
ret
ret
out
fnsave
out
fcmovu
lock
aam
jecxz
shl
fcomp
test
xchg
mov
out
mov
fmul
cmp
cli
in
aam
in
and
loop
ror
fsqrt
xchg
xchg
loop
addb
not
ror
iret
cmp
cmc
fsubp
test
fcmovbe
out
fldln2
into
fucomip
faddl
imul
in
int3
repnz
rcr
jecxz
ret
repz
ds
filds
in
jmp
into
fcmovnbe
lret
cmp
cmp
repnz
cli
xchg
filds
jmp
jmp
cli
rcl
xor
fimull
sti
loope
in
lret
xchg
hlt
icebp
in
ljmp
fcmovnu
test
rcr
decl
enter
repnz
jecxz
ljmp
in
int3
enter
cmp
testl
nop
fiaddl
icebp
int
icebp
out
leave
fnstsw
cmp
addl
or
loopne
repnz
repz
in
sar
cmp
fidivrs
into
repz
jmp
jecxz
lret
repz
int
hlt
lds
std
ror
fcmovnbe
rcl
std
in
rol
xchg
hlt
sbb
out
cmc
adcb
fcmovnbe
fcomp
out
cmp
lret
cmp
out
movl
and
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
lea
adcl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
jmp
ror
fcmovb
rcr
fs
lods
scas
mov
jg
cmpsb
add
xchg
sbb
or
xchg
aaa
xor
aad
out
out
into
rcr
aas
div
cmpl
testl
sbb
and
xor
aad
xor
int
repz
sti
sarb
cmc
jmp
jmp
call
icebp
in
rcl
fidivrl
dec
aas
jmp
jecxz
iret
lret
xchg
lea
xor
iret
enter
sarl
cmp
mov
test
repz
int
rcl
out
aam
enter
fiadds
shl
int3
lret
cmp
cmp
cmc
aaa
cli
into
icebp
ljmp
loop
div
test
icebp
loop
call
imul
repz
sti
lret
xor
ds
fcomip
xor
fcmovnu
fcmovu
in
jecxz
clc
fimuls
shl
sar
cld
cmp
addb
and
int
mov
aam
fidivs
out
xor
pushl
stc
in
repnz
repz
jecxz
ret
in
int
in
sti
out
out
xor
shll
fmul
out
ror
in
xlat
cmp
repnz
loop
lock
and
lret
and
stc
out
loop
repnz
fcom
out
out
jecxz
mul
in
mov
aad
decl
test
ret
fidivs
fxch
fmul
addl
in
fsubp
icebp
mov
sub
repnz
cli
fsubr
int3
loope
rcr
lock
lock
call
lock
loop
clc
std
int3
out
aam
repz
out
aam
ret
out
mov
out
int
shl
fsub
test
ljmp
cli
in
into
fst
repz
sbb
loopne
mov
out
cli
out
fdivrl
cmp
test
fdiv
loop
orb
jecxz
fsubr
loopne
iret
fsub
cmc
hlt
out
fstp
cmp
in
into
out
frndint
repnz
test
xlat
xor
fnstsw
iret
into
cli
addl
fnstsw
test
fimuls
test
cmc
jmp
iret
jmp
in
out
jecxz
cli
mul
cld
lret
into
loope
mov
jmp
das
lock
imul
fdiv
stc
fucom
std
xor
int3
fucomp
cmc
repz
sti
out
addl
out
div
fmul
hlt
into
cli
fadd
in
xlat
call
lret
iret
decb
enter
cmp
cmp
fcom
rcr
ss
xchg
cld
fldl
mov
loopne
aad
lret
div
in
in
enter
in
cmp
roll
sti
loope
jecxz
xchg
xor
test
in
fsubr
aad
out
mul
icebp
sarl
aam
and
out
loopne
pop
std
jmp
xor
sar
xor
repz
shl
in
out
icebp
in
enter
jmp
std
out
jmp
lock
cmp
stc
rcr
cmp
aam
test
test
lret
out
jmp
shrl
xor
cmp
aaa
jmp
ror
ret
cmp
aam
in
div
test
movl
sar
cmp
lret
shlb
cli
lock
rorb
in
orl
aad
shl
cmc
lret
out
cmp
aam
xlat
cli
xchg
lret
jmp
in
fisttpll
hlt
loop
jmp
testb
sti
loope
aas
loope
sbb
fst
loope
xor
repz
in
cmc
fdivr
sar
std
imul
cld
clc
ljmp
mov
cmp
cmp
aam
cmp
loop
mul
out
jmp
test
jecxz
int3
rol
lock
in
sti
cmp
cli
rcl
ret
cli
addl
into
aam
ret
ret
sar
xlat
leave
loope
loopne
fld
stc
loope
aas
fcmovnu
jmp
test
roll
repz
cmp
shl
leave
fsubr
repnz
cmc
jecxz
rcr
loopne
in
out
fdivp
mov
lret
cli
out
fbstp
std
shl
shr
sti
xor
fiadds
pop
xchg
repnz
shr
jmp
out
out
cmp
int3
cli
sar
ds
fdiv
cmc
fisttpl
ljmp
or
or
xor
push
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
orl
jmp
rol
into
into
fnstcw
insl
pop
sbb
jg
cmpsb
add
ftst
out
cmp
out
fucomp
repnz
fdivrl
in
xlat
shr
stc
cld
leave
sti
fcmovnb
leave
mov
out
fsub
ret
shr
leave
shr
fdivrl
into
loop
cmp
fstp
ret
fsub
iret
icebp
lret
in
out
aaa
shr
aad
in
jmp
cmp
out
test
add
test
xchg
call
ss
repz
shr
hlt
jecxz
repnz
jmp
out
mov
int3
rol
ret
cld
cli
cmp
aad
loopne
loope
test
int
f2xm1
out
xchg
out
into
jmp
enter
xlat
ret
hlt
xlat
fcmovb
xchg
mov
out
and
loopne
iret
fsubrs
ror
fucomi
sub
aas
fdiv
xlat
aas
and
jmp
test
xchg
mov
divl
shr
icebp
call
cmp
test
fstp
out
jecxz
test
ljmp
aad
fmulp
out
cld
cmp
icebp
loopne
mov
stc
push
out
testb
out
jmp
fsub
aas
repnz
sbb
hlt
lock
test
rol
sub
mov
ljmp
out
stc
ds
cmp
rol
roll
iret
rcl
mov
hlt
out
idiv
neg
ror
rol
rcr
test
hlt
cli
cli
cmc
loope
int3
in
lock
clc
hlt
cli
enter
flds
fprem
call
std
jmp
call
ljmp
cs
into
addb
xchg
clc
in
loope
sar
hlt
cmc
leave
jecxz
out
div
xlat
in
cmp
clc
cmp
icebp
aad
in
lock
fstp
out
ror
loopne
mov
in
das
das
clc
sub
cli
cmc
sti
repnz
aas
out
test
clc
test
xor
test
fcomp
rcr
xchg
test
ror
jmp
xor
sub
fdivs
xor
incb
jecxz
incb
dec
mov
stc
int3
out
out
neg
lock
loopne
leave
rcl
vpor
lret
lret
mov
repz
iret
cmp
iret
int3
jecxz
out
repnz
stc
test
loop
enter
fldl
in
xor
aas
int
fnstsw
inc
shl
sti
std
cmc
cld
mov
clc
loope
jecxz
lret
lret
ror
cmp
fst
filds
into
mov
in
out
iret
in
ljmp
ror
out
lock
clc
not
lock
inc
out
test
in
mov
sub
clc
in
leave
cmp
fcmovu
hlt
cmp
std
jmp
lds
nop
fcoml
in
aad
fnstcw
rcr
repnz
loop
loop
out
call
jecxz
out
int
out
xor
sti
rolb
xchg
test
mov
jmp
fdivrp
into
mov
repnz
loopne
ss
hlt
fabs
in
xchg
call
int
mov
sbb
cmc
fdiv
call
lret
out
ljmp
test
cld
shl
in
test
in
fcmove
xchg
sub
in
repz
cs
fcomi
loope
int3
xlat
cmc
shr
cmc
cmc
cld
fcompp
clc
fiadds
loope
fcomi
xor
icebp
fldpi
div
shl
mov
testb
in
sbb
loope
jmp
hlt
cmp
in
rcl
repz
fmulp
sti
jecxz
repnz
enter
rcr
cli
out
sar
cmc
add
test
stc
leave
xchg
in
out
loope
ficoml
loop
aaa
in
fld
cmp
xlat
jecxz
loop
sti
clc
fadd
adc
mov
jmp
out
out
cld
aad
rcr
cmc
sti
test
aad
cli
test
lret
int3
bnd
cmc
fcomi
fpatan
fcmove
ljmp
aad
imul
test
mov
addl
shl
shl
leave
iret
aas
shr
loope
fcmovu
cld
cmp
rol
hlt
leave
fiadds
in
test
fldlg2
lret
jmp
sarb
into
out
out
loope
loope
lea
mov
in
test
cmp
aas
repz
mov
mov
xor
push
sbbl
push
mov
xorl
jmp
ror
rol
aad
ror
fstpt
jno
cmp
xor
jl
add
clc
cmp
sar
sarl
leave
jecxz
lret
aam
in
jmp
loopne
loope
fxch
xor
cmp
jecxz
hlt
out
loop
jecxz
aad
call
mov
xchg
jmp
aad
rcl
repnz
out
in
jecxz
test
idiv
jmp
out
ret
imul
lock
in
ljmp
sbb
fxch
in
xchg
test
xorl
in
test
xor
loope
aaa
fdivp
cmp
fyl2xp1
fadd
in
testb
loope
call
leave
fcmovne
in
std
ret
repnz
fnstsw
test
fisttpl
icebp
xchg
in
in
out
jecxz,pn
in
xor
repnz
fstpt
cmp
into
rcr
sti
hlt
ret
cli
lock
xchg
std
xchg
int3
xlat
out
call
repz
in
into
and
xchg
jecxz
cli
mov
mov
in
cs
aad
stc
lock
ds
ds
aad
enter
sti
xchg
hlt
inc
enter
aam
xlat
sti
clc
neg
in
cmp
cmc
xchg
in
loope
cmp
clc
xchg
lock
ss
aaa
cmp
adc
in
sbb
loopne
stc
out
in
adc
adc
jmp
idiv
cli
out
shl
filds
lock
loope
filds
mov
jmp
rcl
lock
loope
xor
sbb
and
lret
fimuls
sub
repz
shl
xor
cmpb
xor
icebp
in
repnz
test
loopne
iret
icebp
leave
rolb
into
enter
sar
sarl
repz
jecxz,pt
xchg
sub
test
decb
cmp
repz
aad
cmp
push
jecxz
out
fcmovu
ficoms
xchg
lock
lret
xor
lret
fcmovu
out
fdiv
loop
cli
addl
clc
ljmp
clc
aaa
shlb
cmp
fcmovnb
hlt
cmp
std
repz
fucomi
mov
jecxz
in
lock
sarb
xor
out
cli
cmp
loope
xchg
lret
clc
cli
mov
test
call
jmp
fdecstp
lock
test
decl
lret
jmp
repz
lret
lret
xor
jecxz
jecxz
loop
loopne
in
mul
sti
xchg
jmp
repnz
fcmovb
cld
ljmp
cmp
not
rol
int
cld
fdiv
faddl
idiv
in
in
aam
fxtract
jecxz
icebp
rcl
lds
mov
int
cmc
out
loop
iret
sti
aaa
div
cmp
incb
xchg
ljmp
iret
icebp
jmp
std
aam
jmp
cld
add
fcmovnbe
rol
int3
jecxz
mov
cs
in
in
fld
int
aad
shl
in
stc
aam
lock
jmp
leave
repz
repz
repz
aad
out
fidivl
ror
clc
sarl
hlt
out
leave
test
int
jmp
ljmp
aam
jmp
fsub
cmc
cli
aas
out
fucomi
in
call
aad
hlt
aad
shr
cmp
lret
aad
rol
fsub
lock
orb
loopne
lret
xlat
xor
loop
repnz
shlb
shl
idiv
aam
stc
enter
test
out
fsub
loop
fsubr
out
xor
in
int3
cld
cli
lret
fdecstp
rcl
repnz
clc
in
lret
mov
in
lock
stc
icebp
ljmp
aad
ljmp
out
call
xor
aam
enter
into
fnstsw
aas
ret
jecxz
cmc
enter
lret
sbb
cs
in
std
aam
cmpl
iret
stc
lret
loopne
cld
sbb
int
cmp
fstpt
out
xor
xor
int3
clc
xchg
hlt
fldz
mov
xchg
lret
divl
clc
in
ljmp
test
std
cli
stc
rol
int3
in
repz
hlt
shlb
sar
loope
xor
les
shl
testl
in
fcomip
out
ljmp
lock
xlat
cmpb
hlt
rcr
mov
mov
mov
mov
xor
mov
jmp
leave
mov
lret
mov
add
leave
fbstp
jl
add
ret
iret
enter
xchg
decl
shll
cli
loope
loope
icebp
in
testb
call
leave
fsubp
adc
cmp
out
aad
cmp
repnz
xchg
flds
aad
les
rcl
xlat
neg
enter
sti
cmp
sarl
decb
in
out
in
sti
out
out
out
ret
cmc
xor
cmp
aam
cmp
aas
cmp
out
decb
in
fmull
test
aam
sti
fcmovnbe
out
idiv
cli
aad
fst
out
into
ljmp
xor
lock
repnz
lret
cmp
in
int3
fcmovbe
loope
mov
stc
std
mov
sti
movb
lret
jmp
fstpt
test
test
shl
shl
xor
out
icebp
fmull
shl
out
out
out
mov
repz
std
not
rcl
in
stc
lret
stc
into
filds
rol
leave
int3
lret
clc
adc
test
into
loop
cli
loopne
lret
loopne
xchg
xchg
int3
enter
aaa
call
adc
std
fcmovnu
xor
ret
cld
xchg
jecxz
jecxz
fsubp
iret
xor
fnstsw
ss
cld
sub
ds
repnz
idiv
clc
in
in
addb
ror
cld
shl
cmpb
adc
std
rcr
jmp
out
mov
in
jecxz
sub
leave
xor
cmp
cmp
fcmovbe
ds
cli
fsubr
test
in
xchg
into
mov
in
aaa
shr
aad
shrl
xor
icebp
ljmp
cmp
fcmovnbe
fiadds
jmp
loop
in
cmp
leave
loopne
cmp
cmp
idiv
lea
fsubr
lock
jmp
sarl
ror
cmp
ret
loopne
out
addl
jmp
aaa
leave
loopne
fcmovnu
cli
fdivrp
int
loop,pt
shl
cld
hlt
fabs
mov
fmul
sub
in
in
xor
out
aam
lret
fcmovne
loope
in
clc
aad
in
mov
iret
in
cmp
xchg
ret
aad
shl
enter
ljmp
movl
nop
ret
xchg
adc
cs
xor
fmul
aaa
int3
cmp
lock
fsubp
fxch
ret
leave
in
enter
out
xor
cmc
cmc
icebp
cmc
out
ss
out
cld
in
call
not
call
lret
loop
in
out
sub
xor
fdivrs
ljmp
cmc
clc
ror
cmp
cli
stc
cli
cmp
out
xor
ret
not
repz
xor
cmp
aad
xlat
cld
ret
call
out
test
loope
lret
int3
aam
cld
out
cmp
filds
aam
mov
loopne
out
sub
popl
int3
xor
out
jmp
int
shl
ret
out
test
aam
aam
fiaddl
mov
jmp
out
repz
xlat
out
aaa
idivb
shl
loopne
in
lock
lock
mov
cld
mov
jecxz
in
repz
cmc
aam
fcomp
stc
shl
aad
out
hlt
out
repnz
enter
orl
enter
cmp
cli
adc
fld
fincstp
out
ret
cld
in
xchg
out
mov
fucomip
aad
cmc
jmp
cld
icebp
not
fidivrs
hlt
aas
icebp
call
xchg
ljmp
lret
fdivrs
out
hlt
out
lock
aam
enter
fmull
lret
in
in
les
fnsave
hlt
cld
repz
fcomi
cli
idiv
in
xor
loope
test
leave
cmp
out
cmc
into
std
in
aaa
imul
rcr
fcmovbe
shl
in
cli
neg
jmp
rcl
mov
loop
call
in
cmp
fcomp
ffree
cld
repz
loopne
call
shl
call
shr
lret
fdivr
cmp
hlt
lds
mov
ret
cli
out
into
ljmp
lret
call
lock
rcl
cld
repz
faddp
cli
in
jmp
xchg
ror
jmp
xor
out
fcmovne
ljmp
icebp
sti
in
out
in
incl
repnz
aam
imul
out
xlat
lret
aas
cmp
out
in
xchg
lret
in
int3
xor
jmp
aad
rcl
fst
leave
pop
push
fldcw
add
shll
in
call
ss
int
out
cmc
test
out
fsubr
into
iret
in
out
in
icebp
aaa
divl
sti
aad
lock
repz
rol
out
mov
fst
enter
test
lret
mov
in
xor
jmp
fmul
jmp
aas
cmp
hlt
xor
out
mov
addl
divb
xor
clc
call
fdivp
sbb
call
leave
in
rorb
enter
int
rcr
sar
cmpb
cld
cmc
cmc
fmul
into
clc
fcmovbe
nop
mov
sub
int3
icebp
sarl
cmp
loop
int3
fsubr
enter
mov
xor
cmc
neg
enter
sar
shr
in
icebp
fcmovnb
loope
loopne
mov
repz
out
aad
out
aad
ror
stc
ret
rcl
ret
cld
loop
roll
jecxz
xchg
loopne
jecxz
not
idivl
fcmove
out
fucomip
jecxz
aad
aas
rcr
test
out
enter
cli
cmp
dec
fcomi
fnsave
test
shl
cmp
int
jmp
addb
lret
xlat
rol
int
stc
cmp
cmp
aas
cmp
test
sbb
fsub
repnz
int
aam
iret
ss
aas
cld
cmp
loope
sbb
stc
fucomip
lret
xchg
out
into
xchg
loopne
jmp
iret
xor
shl
cmp
into
cld
sub
incb
repnz
cs
lret
ret
repnz
out
xor
cmp
clc
loop
fcmovnb
xlat
aad
clc
out
sti
cmp
shrl
not
xor
cld
std
ss
lock
in
std
adc
enter
lret
ret
cld
mov
jmp
cmp
lret
aaa
sarl
clc
sar
icebp
call
bnd
out
sti
addl
jmp
int3
ror
aam
cmp
out
loope
sti
fmul
les
shr
ror
jmp
lret
cmp
cmc
xor
ds
fsubp
aad
cld
ret
idiv
fucom
or
in
aaa
shr
imul
lock
sti
or
not
mov
rcl
xchg
xchg
iret
rcl
loop
ss
repz
stc
out
and
and
xchg
loop
test
mov
or
loope
das
hlt
out
cmp
into
ss
rcr
rolb
fimuls
fcom
test
shrl
call
xlat
fsubr
fdecstp
repz
ret
faddp
mov
mov
nop
clc
sub
xor
in
std
cmp
in
test
std
fxch
in
jmp
repnz
jmp
cli
xor
lock
sbb
test
test
fucomip
add
ss
enter
cmc
rcl
cmc
adc
ret
test
loopne
xchg
xchg
aam
xor
in
iret
ss
fdivrs
xchg
repnz
fprem1
aam
fdivr
in
mov
in
cmp
ror
cmp
repz
ret
shl
mul
fsubrp
out
jmp
shl
ljmp
stc
enter
cmp
loop
std
aad
loop
fcmovu
or
out
test
call
enter
cmp
out
shl
cld
ds
jmp
dec
lret
call
aad
fnstenv
out
fdiv
repnz
cmp
sti
std
mov
jecxz
ret
out
repz
ss
ror
stc
divb
ds
cmp
xlat
call
jmp
fisttps
in
jmp
clc
fidivrs
jecxz
int
rcr
hlt
xlat
in
ret
jecxz
sub
adc
repnz
ss
lret
cmp
divb
shl
cld
mov
lret
xlat
out
call
jmp
ljmp
int
aad
cmpb
addl
out
shrb
xor
leave
jmp
enter
fsub
fsub
stc
xlat
xlat
xchg
aam
xchg
orl
xor
repz
in
fdivp
cli
jmp
out
into
mov
cmc
loope
out
out
fcmovnb
icebp
jmp
dec
cmp
test
ret
loopne
cli
fcmovb
out
xchg
rcl
in
out
jmp
rolb
movb
jmp
leave
sarl
rcl
int
mov
mov
jl
add
out
not
loope
clc
out
inc
stc
lret
xchg
fstp
lret
repnz
leave
iret
out
cmc
cli
shr
int
aas
shl
out
jmp
orl
std
cmp
ds
into
lret
shl
call
mov
enter
xchg
orl
xor
xor
into
cmp
repz
into
iret
in
jecxz
testl
xchg
jmp
icebp
int
call
fadd
in
cmp
xchg
loope
fimull
in
ds
out
stc
addl
aad
clc
loopne
ret
xchg
ljmp
lock
int3
xlat
loope
loope
stc
ret
mov
ret
xor
std
test
xor
xlat
fmul
jmp
fstp
loope
cli
out
fsub
neg
in
ret
out
lret
xchg
in
iret
mov
aaa
vpavgb
aaa
in
lret
call
fdivr
xlat
ds
mov
repz
out
cmp
test
call
out
cld
jecxz
jecxz
loopne
loop
loope
mov
std
repz
in
cs
sarl
rcr
ror
in
aad
xlat
ret
leave
out
fildl
rclb
ret
ljmp
in
out
test
in
clc
fdivp
ljmp
xchg
jmp
jmp
out
int3
jmp
repz
xlat
fsub
iret
xchg
clc
enter
testl
into
in
out
cmp
in
fcomip
cmp
and
jmp
mov
jmp
test
cmc
cmc
leave
fidivl
aam
shr
hlt
cmp
adc
lret
xchg
hlt
jecxz
iret
rcr
fmul
icebp
rolb
fcom
in
in
fmul
mov
icebp
into
xchg
lock
ret
enter
shl
rolb
aad
fst
hlt
in
orl
cmp
repz
sar
or
flds
call
out
jmp
out
iret
cmp
aam
xor
sar
repz
fdivr
rcl
xlat
neg
in
fucomip
xchg
shl
das
cmc
jmp
leave
stc
sti
stc
repnz
cld
cmp
sarb
out
ret
ljmp
fdiv
jmp
icebp
rcl
repz
stc
cmp
adc
loope
xchg
sub
lds
rcl
cmp
aam
into
rcr
cmp
iret
in
hlt
xacquire
in
lret
mov
icebp
rol
in
int
sti
sarl
cmp
into
into
ret
hlt
adc
adc
ljmp
int3
shl
xor
fstpt
repz
aam
fsubrp
ffree
repnz
cli
rol
xlat
mov
dec
loopne
loope
enter
call
dec
xchg
repnz
jmp
mov
xchg
adcl
aaa
aam
cmp
cmp
add
test
mov
in
out
in
icebp
mov
iret
not
aam
divb
icebp
out
aam
in
in
aad
jecxz
sar
mov
std
orb
sar
std
in
leave
rcr
out
in
cmp
sar
ret
jmp
out
ret
xor
icebp
rol
std
cmp
cmp
cmpl
hlt
hlt
ret
std
ror
loope
call
aaa
enter
fst
ss
loop
in
neg
int3
cld
fcmovu
lock
das
sub
enter
iret
ljmp
ret
orl
loop
sub
mov
hlt
cmp
shr
fdivrl
repnz
incb
out
enter
jmp
call
imul
sarb
fmul
test
lret
mov
addb
xor
loop
sarl
lret
cmc
iret
int3
inc
stc
fiaddl
loop
in
int
in
cmp
shl
cmp
icebp
repnz
ret
sti
cld
ljmp
ror
ljmp
xor
cmp
rol
aam
jecxz
ds
loop
call
mov
in
call
ss
xor
cmp
les
sub
jecxz
test
call
xor
hlt
rcr
repnz
std
iret
ret
loop
repnz
shl
repz
movl
cmp
jmp
mov
leave
ret
int
leave
lret
and
scas
movsl
jg
cmpsb
add
aad
in
ljmp
repnz
jmp
lret
cli
cmc
out
iret
loope
fdivr
out
in
sbb
std
fucomip
test
call
int3
idiv
fcomi
div
cli
in
jmp
xchg
fcoml
aam
rcl
f2xm1
jmp
fchs
fcomip
hlt
mov
stc
fsqrt
loop
lock
ljmp
ror
shl
fcmovnu
int
addb
sti
loopne
and
int3
xchg
jecxz
ret
cmp
cmc
repnz
int3
aam
movl
cld
xchg
xchg
xchg
ljmp
repz
sarb
loope
xchg
enter
and
int3
loopne
repnz
ss
cmp
cmp
hlt
ret
sarb
cld
lret
incl
cmp
xor
out
cmp
sti
neg
fldl
jecxz
out
std
jmp
hlt
jecxz
aad
xlat
cmp
sti
sar
fidivrl
lock
ret
mov
clc
lret
clc
mov
fsub
cli
out
jmp
xor
aaa
sar
cmp
in
clc
shl
sub
stc
jecxz
clc
out
int
lock
lret
xor
in
fucomp
fdivl
neg
aad
faddl
aad
fmul
ret
out
faddp
enter
lds
shlb
ror
ljmp
incb
std
call
in
fsub
divl
shll
fcmovbe
repz
cmp
sbb
fcomp
fsubr
xchg
call
rol
lret
enter
int3
sar
into
std
ror
std
test
aam
jmp
loop
into
out
mov
aad
cmp
icebp
stc
fcomip
out
cmp
shr
shl
fst
cld
fsubr
clc
stc
out
rcll
in
rcl
ss
cmp
in
fstp
repz
ret
call
in
cli
nop
xchg
into
repz
ss
fscale
aas
into
jmp
icebp
out
loopne
loopne
in
cld
aad
sti
leave
into
lock
out
xbegin
adc
int3
clc
std
rcr
jmp
mov
mov
xor
shl
shl
in
rcl
or
sti
xlat
test
cmc
xor
xchg
test
loope
jmp
fsubr
sbb
fsubr
shl
shl
fld
jecxz
loopne
loop
out
rcll
loop
out
in
cmp
ss
fmul
test
fiadds
lret
cld
in
nop
fstl
lock
cmp
hlt
int
loop
adc
jmp
rolb
xchg
lret
std
test
xor
icebp
imul
xor
cmp
hlt
fsubrp
cli
call
jecxz
in
icebp
ljmp
hlt
xor
out
sarl
ror
cmc
fsub
ret
cli
fsub
fdivrp
jecxz
lret
cmc
push
rcl
out
les
lret
ss
xlat
in
loopne
fadd
icebp
add
ds
hlt
lret
cmp
cli
repnz
stc
out
ljmp
lds
in
orl
cmp
rol
cmc
mul
jmp
shl
iret
sar
loope
call
loopne
out
ror
int3
sub
lret
ds
cmpl
mov
sub
cmc
aam
out
aam
xor
aam
loopne
in
sti
test
vpsraw
sub
cmp
in
hlt
aad
xor
sti
in
fsubr
cmc
fdivrp
fcomi
incb
int
cli
orl
sbb
xchg
lds
orl
repnz
rcr
fnstsw
sti
aas
fnstsw
fcmovne
adc
addb
aad
lock
xor
clc
xor
loopne
sti
rol
repz
mov
loopne
ljmp
repnz
stc
std
clc
in
ds
in
leave
sti
out
ret
mul
in
ljmp
xor
fidivl
ss
divl
shr
cld
aas
cmp
repz
test
sub
mov
stc
xor
xor
jmp
xlat
cmp
shl
fdiv
push
xchg
into
out
jmp
in
out
aad
aam
jmp
in
shlb
lret
ds
cmp
xor
stc
cmp
je
movl
jmp
sarl
rcl
rcl
rol
ret
bound
test
jl
add
nop
sub
in
jecxz
iret
das
fnstsw
lret
aam
ret
xlat
jmp
out
icebp
enter
loope
jmp
xor
ror
rcl
test
aad
cld
mov
iret
iret
cli
mov
rcl
in
out
jmp
out
in
cmp
incb
lock
mov
in
fimuls
xor
xor
xor
rcl
lret
out
fstp
enter
out
orb
in
loopne
lret
imulb
lock
or
out
shl
out
cmc
fsub
fldl2e
ficoml
xor
cmp
fucomp
stc
shl
out
clc
idiv
cmc
leave
ret
xchg
xchg
icebp
xchg
ljmp
aaa
out
xor
int
into
iret
out
fcomp
lock
leave
jmp
and
frstpm(287
test
loope
cmc
int
iret
divb
out
cmp
cmp
cmp
cmp
xlat
inc
addb
ror
xchg
rol
repnz
loop
cmp
jmp
lret
xor
fdiv
ret
jecxz
loope
fmul
int3
out
in
int3
int3
lock
aaa
lds
hlt
aas
ror
hlt
ret
test
repnz
out
faddl
xchg
rol
out
in
jmp
out
in
icebp
test
hlt
in
orl
xchg
icebp
call
xor
enter
cmp
ror
ret
cmp
fadd
ror
cld
jmp
clc
cmp
mov
cmc
jmp
ror
jmp
jmp
and
mov
loopne
std
loopne
lret
cli
test
shr
aad
cmp
ror
repz
aas
int
sarl
loope
jecxz
mov
adcl
xlat
in
cmp
leave
iret
cmp
test
shl
fdivr
int3
test
and
int3
shr
jecxz
lock
enter
stc
addb
sti
repz
repnz
in
call
xchg
xchg
sub
shr
in
fbstp
cmp
les
fucomi
xlat
cmc
jmp
jecxz
call
jecxz
rcr
rcl
out
cmp
shr
shl
and
cld
int3
lret
rcr
in
xchg
aad
xor
in
sti
out
repnz
cmp
incb
enter
xchg
xor
rol
repnz
out
shl
repz
inc
cli
xlat
ret
test
ljmp
jecxz
iret
cmp
add
in
inc
loopne
out
mov
xchg
sar
out
aas
ljmp
int3
iret
lock
int
ret
ret
std
in
fmulp
incl
cmc
aam
cmp
repnz
imul
aad
cmp
ffree
lock
loope
int
mov
xor
lret
jmp
aam
repz
mov
xlat
stc
jmp
lret
loopne
repnz
int
fucomp
call
cmc
out
roll
int3
fsts
sub
hlt
jmp
call
cmp
lock
sar
fprem1
mov
std
test
fsubrp
shl
int3
xor
cli
cld
cmc
cmpl
fchs
test
lock
mov
test
in
cmc
ret
ror
icebp
aaa
iret
xorl
xchg
clc
addl
mov
shll
cmp
clc
ss
rcr
in
fcmovnu
call
test
int3
lock
iret
repnz
xchg
aad
loope
fsubr
mov
int
in
in
ror
xlat
lret
cmp
fucomi
repz
aad
clc
out
in
fiadds
mov
xor
repz
out
shr
lret
clc
repz
ret
cld
mov
stc
mov
mov
incl
jmp
ljmp
fdivrs
std
aas
icebp
xor
fdivr
mov
stc
cli
mov
mov
mov
into
in
aam
lret
xor
idivl
stc
rol
hlt
hlt
loope
test
iret
lret
in
repz
fmulp
fcmovnbe
sub
xor
jmp
cld
rcl
cmp
std
jmp
int
out
cmc
aas
jmp
in
leave
iret
jmp
fbstp
sar
stc
sub
out
leave
test
jmp
aad
in
leave
idiv
lret
stc
fdivr
faddp
icebp
xlat
xlat
and
mov
fisttpll
leave
icebp
neg
lea
mov
mov
jmp
sarl
aad
aad
aad
sbb
or
inc
std
push
add
jl
leave
int3
aam
xor
xlat
loope
in
ljmp
rcll
xor
enter
ds
cmp
leave
stc
frstpm(287
jmp
sar
out
enter
icebp
std
out
cmp
xlat
out
into
xor
mov
jecxz
aad
ret
jmp
repz
repz
clc
testb
orb
hlt
inc
xor
out
ss
int3
rol
fdiv
adc
test
loop
orb
jecxz
das
cs
clc
lret
cmp
repz
aas
fmulp
lret
out
cmc
loop
into
xor
jmp
out
icebp
aas
cld
cli
loopne
test
mov
mov
leave
orb
ret
fucomip
ds
aad
repnz
xchg
lret
sbb
aam
in
dec
jmp
icebp
rcr
lock
in
cli
mov
in
fsubr
loopne
lock
ljmp
loop
cld
cmp
cmp
cmp
out
clc
ds
jmp
fcom
rorb
out
xor
into
ss
loope
iret
clc
loopne
repz
mov
test
cli
mov
xor
cmp
cmp
enter
incl
loope
xchg
out
jmp
aas
in
jecxz
idiv
cmp
lret
lock
clc
fdiv
ds
cmp
aam
out
int3
leave
movb
shll
enter
in
iret
fiadds
cmp
adc
clc
mov
xchg
xchg
incb
enter
out
cld
shr
cmp
cld
loope
std
mov
loop
test
decl
div
xor
out
repz
icebp
loopne
shl
faddl
out
mov
int3
xor
ret
fcomp
cmc
into
adc
fidivrs
in
fsub
ret
jmp
out
loopne
test
cs
xor
rcr
rcl
sti
out
jmp
leave
lds
iret
xchg
or
repz
jmp
clc
xor
aam
xlat
rol
enter
fdivrp
in
dec
cmc
ret
cmc
lock
cmp
dec
enter
in
cmp
xchg
mov
iret
in
xchg
loop
repnz
ror
out
jmp
aas
loop
neg
stc
aad
loope
mov
rol
in
shr
xor
fxtract
jmp
fucomip
fcomi
ss
stc
rcr
out
clc
int3
idiv
lret
xchg
mov
aam
in
int
cli
aas
repz
lret
lret
aas
rcl
imul
fmulp
call
cli
jmp
out
call
lret
cmp
loop
lds
ret
leave
mov
fstp
repz
lock
xbegin
idiv
sar
fsub
lret
xor
fmul
loop
repnz
shr
xlat
fcom
loop
aad
fmul
ds
mul
rcr
mov
in
repz
xor
shl
ss
repnz
in
fneni(8087
loope
fsubp
test
loopne
call
call
sub
xor
loope
stc
aad
xlat
hlt
loop
test
lret
in
call
call
in
xor
cmp
in
jecxz
addb
fsubr
xchg
cmc
enter
ss
cmp
fnstsw
fildl
xlat
hlt
jmp
xchg
repz
out
test
iret
shlb
int
cmp
lret
jecxz
xor
repnz
fucomip
rcl
mov
fdiv
sub
shr
rol
jmp
cld
enter
xchg
xlat
sti
or
addb
into
icebp
mov
ss
loop
ss
jmp
rcl
fscale
loop
mov
in
xchg
fimuls
fldln2
aam
cli
cli
xlat
out
aas
lock
in
rcl
neg
rcr
repnz
loope
mov
rol
leave
mov
jmp
jecxz
fucompp
cmp
cmp
loop
in
adc
std
aad
cmp
in
out
incl
les
lds
sub
cmp
idivb
in
adc
vshufps
vfrczps
call
clc
aad
clc
iret
iret
cmp
rcr
out
xchg
std
in
jmp
repnz
das
out
fcmovne
out
cld
out
rol
rorb
sahf
clc
jmp
ret
fcmovnu
aad
inc
pop
inc
mov
pop
mov
cmpsb
add
leave
jmp
les
lock
std
aad
shrl
sar
out
lock
jmp
out
fxch
incb
fildl
xchg
xor
clc
xor
cli
fcomi
int
shr
clc
fcmovnbe
clc
ds
repnz
loope
std
rorb
in
jmp
sti
int3
sti
call
icebp
test
cmp
fmuls
int3
xchg
nop
leave
ljmp
fmul
shl
sbb
lock
stc
cmp
out
sub
lret
ljmp
cmp
int3
cmp
addl
jmp
cld
mov
aaa
ror
icebp
div
cmp
hlt
in
ss
loop
ret
testl
stc
into
in
sub
fnstsw
leave
fdivp
ret
jmp
std
test
rcl
out
in
cld
in
jmp
loopne
call
xor
cmc
test
rcl
cld
xlat
in
ljmp
cmc
xchg
xchg
not
xor
std
sar
fdivrs
sarl
loopne
out
orb
out
out
mov
lock
lock
cld
in
icebp
inc
aas
call
loop
stc
stc
mov
in
xchg
out
int
xchg
repnz
loop
cmc
iret
xor
int3
xor
stc
add
rol
loop
leave
out
or
in
xor
loope
jmp
fdivp
enter
hlt
sti
idiv
in
lret
call
fmulp
xchg
into
stc
in
int
cli
lock
ror
les
or
ljmp
sar
int
fnstsw
cmp
ret
out
fucomip
inc
stc
repz
aad
out
leave
cs
call
cmp
test
cmc
ret
cmc
in
mov
loope
mov
hlt
icebp
int3
shr
xor
cmp
shl
iret
cmp
cld
fsub
rolb
ljmp
cmp
fidivrs
ds
adc
test
out
or
jmp
lret
out
repz
jmp
loope
cli
imul
clc
rcr
neg
in
leave
xchg
test
int3
lret
xor
int
out
cli
into
aam
into
fst
in
xchg
sbb
in
ljmp
cmc
cld
fprem1
lock
clc
not
leave
cmp
cmc
testl
nop
jecxz
mov
jmp
xor
lret
in
aam
cmp
fadd
test
ret
mov
jmp
fidivl
cmp
rcl
cmp
xor
call
fcoml
aaa
aam
imul
int3
cmp
idiv
not
cmp
loop
xlat
in
clc
ret
in
fstl
in
ds
in
jmp
sar
out
in
ror
fucomip
cmp
leave
enter
in
in
in
in
call
out
into
icebp
cmp
divl
aaa
jecxz
xor
ret
xlat
sti
fsubr
fld
sti
mov
aam
into
shl
enter
lret
fistpll
rcl
lret
call
loop
lret
fcom
out
xlat
shr
hlt
loop
cmc
fcmovnu
repnz
enter
out
in
sub
repnz
jecxz
das
ljmp
stc
loop
loopne
ffree
jecxz
fldl
xor
clc
jecxz
rcl
sti
aaa
int3
stc
adc
iret
into
jecxz
mov
loope
int
xchg
lock
xchg
xor
ret
sar
jmp
jmp
hlt
fcomp
ret
rcr
loopne
aam
xchg
mov
out
not
int
jmp
int
rcr
aas
ret
out
fmul
fcmove
or
cmc
xor
cmc
clc
in
repnz
lret
aad
cmp
aas
cld
loopne
test
cld
cld
lock
jmp
xchg
f2xm1
lock
jmp
lret
rcl
jmp
mov
mov
loop
icebp
leave
repnz
shl
out
fdivl
fdivl
clc
std
jmp
xchg
test
std
repz
popl
sti
cmp
fsubr
cmp
jmp
loopne
ret
clc
test
loopne
mov
ret
ret
in
icebp
shl
cli
cmp
cmp
repz
ret
fcomp
cld
loop
ljmp
xchg
icebp
in
ret
icebp
fstpt
clc
fcomi
in
clc
fdivp
aad
cmpl
fmulp
sti
loopne
adc
add
rorb
insb
push
add
mov
orl
mov
xor
jmp
xlat
int
ret
ljmp
jg
cmpsb
add
rolb
ror
fdivrs
lock
fdivp
adc
loope
out
decb
jecxz
mov
iret
xchg
aad
out
cmp
aas
out
repz
rolb
neg
in
iret
cld
loopne
test
leave
ror
iret
shl
int
int
lds
decl
mov
xor
xor
lret
repz
test
stc
fsubr
repnz
lock
cmc
sti
clc
lret
ss
addb
in
out
fdivrp
sub
loopne
xor
out
fsqrt
cmc
ds
call
jmp
jecxz
fcmovnu
roll
stc
aad
cli
in
stc
fucom
cmp
out
fiadds
fmull
lea
repnz
icebp
loopne
lret
int
fdivr
hlt
cmp
clc
fcomp
ret
lret
ret
out
lret
fmul
out
xor
cmp
repnz
cmp
cmp
in
fcom
in
rcr
fcmovnu
lret
leave
std
out
icebp
stc
int3
clc
sub
clc
cmp
jmp
aad
sar
out
out
cmc
fldl
lea
in
ljmp
rcr
repnz
fdivr
jmp
jecxz
decb
xchg
adc
cmc
rol
into
cmp
fidivrs
std
sarb
add
ret
in
iret
in
in
lret
into
das
out
clc
fdivrs
repz
in
out
fdivp
fsub
addl
repnz
icebp
test
ror
ftst
vmovq
xchg
shr
popl
cli
rcl
loopne
out
fsub
jmp
fldln2
cmc
lock
lock
aad
out
rcl
mov
xchg
xlat
icebp
mov
loopne
shrl
ret
into
int
ror
fcomi
icebp
cmc
cld
int
ret
mov
and
orl
ljmp
in
lock
sti
rcl
std
out
fnstsw
mov
xchg
nop
imul
out
loop
iret
iret
cld
fidivs
lret
xlat
loopne
ds
hlt
not
fcomp
rorb
lret
aad
ret
loop
repz
iret
jmp
div
fadd
repz
in
ljmp
int3
in
rol
icebp
xlat
repnz
repz
jmp
fdiv
adc
and
idiv
out
fucomip
out
repz
lock
fcomi
lret
std
mul
not
loop
rolb
test
in
rcl
imul
icebp
sti
rcr
cmp
loopne
rcl
incl
stc
out
cld
xchg
icebp
test
lock
call
clc
aaa
cmp
xor
jecxz
fimull
mov
ljmp
enter
sti
test
rcl
shl
loopne
jmp
out
ljmp
iret
cli
cmp
aas
shr
cmp
aam
out
hlt
fisttpll
jmp
int3
loop
out
sti
out
ss
ds
test
adc
fyl2xp1
cld
hlt
call
xchg
enter
shl
loop
cmp
cmp
fdivrp
lret
cmp
aam
rorb
mov
sbb
xchg
aam
stc
cmp
cmp
out
cmp
clc
lock
hlt
cli
cmp
orb
cld
loopne
loope
enter
clc
aam
aam
ss
fcmovnbe
icebp
out
sti
fcomip
or
lret
jmp
dec
xor
fcom
shl
icebp
repnz
ffreep
ret
cmc
jmp
int
mov
mov
in
ror
not
aad
fcmovnbe
lret
or
rcr
loopne
in
int
mov
nop
loopne
in
int3
loop
sub
aad
ljmp
int3
std
loop
jmp
in
int3
shr
nop
shl
rcl
xor
call
cli
loope
imul
ret
aad
fdivr
lret
in
int
in
lea
in
fdivs
ljmp
div
sarb
lret
addb
call
aam
int
jmp
xor
aaa
int3
aad
shl
cld
and
mov
mov
in
test
stc
cli
out
neg
jmp
loope
aas
stc
xlat
jmp
or
cld
out
out
jmp
rcr
aam
repz
xlat
icebp
jmp
cmp
int3
out
incl
and
fildl
jmp
add
jmp
rol
int
fst
fcmovne
xor
arpl
mov
jl
jecxz
cmp
or
fsubr
ds
loop
cld
stc
sub
mov
in
les
jmp
out
aam
cmp
lock
out
enter
out
orl
jmp
lret
sbb
test
in
jmp
jmp
out
das
leave
iret
xor
in
sti
loope
fstp
loopne
ror
lret
into
fistl
in
ret
aad
aad
fcmovbe
int
loopne
ds
mov
out
jecxz
mov
faddl
in
xor
lock
fidivrl
rolb
sti
loope
lret
addb
xor
dec
out
ret
in
sti
fucom
cld
ret
int3
test
mov
sub
lret
stc
icebp
out
icebp
cmp
fcmovnbe
sarb
rcr
ds
faddl
cld
mov
rol
into
in
test
xor
cmp
cmc
int3
xchg
loope
fcmovu
test
jmp
into
enter
in
xlat
loopne
ret
cmc
sti
aam
int
fdiv
aad
xchg
mov
incl
in
jmp
aam
int
aam
iret
in
aam
cmp
shl
fisttpll
orl
shl
enter
cmp
into
xor
shr
icebp
cld
lock
mov
stc
ljmp
hlt
out
jmp
iret
cmp
in
lret
not
out
ret
cld
int
out
out
leave
loope
fildll
in
in
shl
int3
ds
adc
push
mov
testb
test
repz
das
cmp
ljmp
ljmp
leave
xchg
jmp
and
loop
rol
out
cld
out
cmp
enter
ret
lock
test
fcmove
xchg
xchg
in
not
ret
loop
cmp
ds
incb
fisttps
into
xchg
lret
xor
iret
int3
ror
cmp
rcl
rcr
iret
shl
xlat
cmp
adc
out
in
mov
in
xchg
nop
xor
ljmp
aam
ljmp
incb
cmp
leave
mov
fsubp
rcl
int3
jmp
xor
cmp
cld
addb
jmp
mov
xchg
aad
ret
ret
xor
aad
xlat
cmp
cmc
aam
roll
jmp
mov
enter
ror
std
repnz
fucomip
hlt
loopne
aas
ret
xchg
int
test
or
shl
not
clc
out
cmc
cmp
div
aam
lret
test
cli
inc
mov
loop
loope
lock
lret
out
out
out
rcl
fcmovnbe
stc
hlt
int3
cmpb
fdivr
lret
cld
call
cmp
lock
shlb
xlat
or
std
jecxz
enter
enter
xor
shlb
ljmp
repnz
cmpl
stc
mov
mov
ffree
jmp
cmp
in
jmp
not
ds
cld
sti
mov
enter
inc
int3
jmp
icebp
shr
rcr
sarb
ds
lds
mov
leave
xor
in
in
loopne
vpaddq
rcr
fdivr
cmp
std
addl
ljmp
ljmp
out
loopne
repz
jecxz
xchg
in
shr
cmc
xor
fcmove
fnclex
sti
cmc
lock
jmp
jmp
ljmp
enter
in
stc
lret
div
fildl
repz
xchg
in
out
leave
mov
into
loop
out
xchg
out
repnz
enter
ror
sti
clc
ret
test
lret
test
rcl
xchg
ss
in
jmp
ret
in
aaa
std
addl
lock
in
lret
shl
lret
aam
sti
loope
xor
sti
xchg
sar
xchg
and
ret
int
icebp
aad
xor
int
jmp
loopne
icebp
xchg
addl
into
xchg
icebp
jmp
out
push
aas
call
fstp
mov
enter
test
cmc
fmulp
shr
xor
lret
cmp
rcrl
ret
add
lret
ret
fstpl
fidivrl
adc
ret
jg
cmpsb
add
mul
fnstcw
in
xchg
not
rorl
lock
fdiv
repz
std
in
out
cld
rol
mov
lret
out
in
out
adcl
loop
in
neg
clc
shl
iret
fidivrs
ret
cli
in
loop
shr
ret
stc
cmp
lret
fsub
into
aam
call
mov
fsubp
int3
shr
into
int3
xor
leave
cmp
repz
cmp
out
adc
ljmp
lock
ret
cmp
cmp
aad
lret
lock
xlat
inc
cli
out
mov
jecxz
mov
in
xlat
in
jmp
fcmove
xor
fcmovne
neg
shl
repz
mov
adc
ss
sub
ds
int
cmp
mov
aad
rolb
in
vpaddsb
aas
out
fnstcw
std
cmc
cmp
fchs
test
xchg
mov
iret
call
jmp
out
lock
cmc
ss
std
jmp
loopne
out
call
xor
shrl
xor
rcr
shll
jecxz
leave
repz
frstpm(287
sub
jmp
in
lret
in
fsubr
call
loopne
fcmovbe
aam
cmp
int
shr
nop
fimuls
icebp
ss
repnz
lret
cmpb
loopne
fisttps
in
into
jecxz
aaa
in
fdivs
ljmp
lock
aam
sti
test
loopne
mul
addb
int
int3
cs
cmp
fsubr
cmp
xor
icebp
test
ljmp
enter
xchg
test
xor
call
or
cmp
rcr
jecxz
aas
stc
out
loope
lret
in
ljmp
fdivl
int3
sti
out
aad
stc
sar
mul
mov
in
fucomi
call
out
sub
fcmove
int
int
idiv
hlt
in
cmp
std
call
ficoms
ffreep
repnz
in
sar
repz
aam
fdivp
shl
lock
jecxz
ljmp
fcmovbe
xchg
shl
ljmp
enter
repz
roll
jmp
xchg
xchg
sub
int
loope
aam
out
enter
rcr
out
stc
adc
call
repnz
iret
ror
test
cmp
out
ds
sti
fildl
cmp
in
out
mov
out
cmc
cmc
cmc
into
cli
cmc
iret
lret
sarb
int
into
lds
cmp
enter
mov
int
mov
loope
xlat
ljmp
cmp
cmp
in
clc
rcl
rcl
repnz
loop
mov
cld
xchg
sar
ror
aam
stc
ljmp
xor
clc
call
mov
ljmp
aaa
xor
repnz
sarb
fcmovu
cli
rol
test
aas
fst
loop
mov
int
addb
int3
cmp
in
int
repz
cld
into
xlat
test
fsubp
loopne
mov
loop
ljmp
ror
jmp
not
lock
stc
stc
ror
test
sar
test
aad
out
std
mov
clc
test
ret
stc
xor
shl
int
rcr
cli
hlt
cmp
clc
in
xchg
test
std
repz
out
xor
int3
repnz
out
aam
jmp
fsts
filds
leave
lret
icebp
out
aas
sti
xlat
int
loopne
cmp
inc
out
jmp
repz
icebp
bnd
shl
fdiv
sarl
jmp
fiadds
into
roll
leave
out
xlat
aad
lock
fxch
lock
clc
ret
add
ljmp
loopne
xor
cli
rcr
iret
jmp
lret
clc
fdivrp
fcmovbe
mov
faddl
loop
ljmp
int3
loop
cmp
addb
cli
jecxz
aam
xchg
int
ss
das
fmul
out
lret
ljmp
jecxz
fucom
in
sti
lock
rol
int3
xor
cmp
call
cmp
fprem1
hlt
out
int3
in
jmp
mov
xor
in
repz
div
fxtract
cmp
aas
cld
repnz
out
fcomps
leave
ret
mov
jmp
aam
fcmovnu
mulb
jecxz
aam
jg
cmpsb
add
mov
nop
addb
fcmovne
jmp
std
in
loop
iret
cld
les
loopne
adcb
das
repz
in
in
cmp
ror
cmp
cmp
repz
clc
loopne
aas
int
in
call
lock
icebp
ljmp
sar
in
test
adcl
cmc
out
out
in
std
leave
iret
loopne
out
cmpb
fcomip
jmp
iret
enter
lea
sub
fidivrl
fcmovnu
repz
cld
mov
out
xchg
loopne
out
out
in
xor
xlat
fyl2x
loope
cmpb
call
test
clc
rcl
ds
aad
xor
out
repnz
cli
jmp
decb
out
test
cmp
cmp
hlt
in
loopne
cmp
rcl
mov
mov
icebp
xchg
cmc
hlt
xor
das
aaa
out
cld
aad
out
lret
fcmovnbe
cmp
cld
jmp
int3
icebp
test
in
ljmp
div
f2xm1
lds
repnz
std
cmp
mov
into
xor
iret
fdivrs
cmp
cli
rolb
xor
xlat
call
rcr
nop
hlt
hlt
div
jecxz
shr
imul
aaa
lret
jmp
clc
cmp
rcr
icebp
dec
fisttps
ret
xor
xor
lret
std
cmc
cmp
cli
std
std
aad
int3
in
fcomp
mov
test
in
xchg
aaa
jmp
ret
enter
loope
cli
cmp
mov
fadd
int
icebp
mov
lret
test
int
rcr
fstpt
call
xor
lret
hlt
fld
lock
mov
int
ffree
sub
ret
sub
std
cmp
fsubrp
rcl
clc
icebp
ds
jmp
ret
ljmp
lock
cs
stc
aam
cld
xchg
and
in
sub
int3
enter
lret
out
rolb
aas
cmc
rol
cmc
jmp
xchg
xlat
jecxz
enter
xchg
test
ss
ret
jmp
ds
out
rolb
fxch
fcmove
repz
cmc
hlt
aaa
cmp
leave
idiv
cmp
cmp
iret
cld
repnz
call
test
xchg
std
fdivl
lret
loopne
aad
aaa
fdivrs
ss
lret
int
rolb
jecxz
out
out
roll
jmp
out
shl
cmpl
cmp
incb
lret
iret
out
xchg
aaa
xor
fnsetpm(287
cmp
out
loopne
test
std
in
test
clc
in
lret
cld
rolb
icebp
shl
call
fst
add
fdivrl
ret
xchg
fsub
mov
loopne
loope
into
xor
shll
clc
xlat
lret
icebp
hlt
jecxz
out
cmp
ret
aam
jecxz
lret
fdivp
enter
add
hlt
sti
lret
clc
cmp
ljmp
out
ret
std
fst
call
repz
sub
out
cmp
int
xor
test
sti
mul
ljmp
in
in
lret
xor
in
ror
jmp
ljmp
stc
hlt
repnz
std
cld
xchg
in
sub
int3
sti
jmp
cli
sti
out
idivb
into
ret
testb
lret
leave
loopne
repnz
icebp
in
cmc
ljmp
idivl
out
sti
roll
call
lret
in
leave
ret
loop
cmc
fucompp
sti
repnz
jecxz
ffree
testl
loope
decl
xor
clc
icebp
cmp
ror
sar
loop
hlt
mov
mul
test
test
fucom
out
cli
in
clc
loope
shr
rolb
fsubr
mov
rol
xchg
ljmp
enter
xor
icebp
incb
loopne
repz
out
xchg
fbstp
sarl
aad
lret
fcmovne
std
aad
aad
ret
loop
movb
xchg
xor
ljmp
hlt
fsub
int3
into
into
std
xlat
loopne
or
cld
ljmp
aad
out
ret
fldl2e
rcr
repnz
fcomi
fdiv
loop
out
xchg
in
std
in
xchg
in
call
fnstenv
xchg
add
mov
jmp
int
aas
ror
rcr
fcmove
mov
js
dec
les
cmpsb
add
out
out
cld
lret
fcomip
jecxz
in
into
sti
cld
les
loop
loope
rcr
std
aam
xor
int3
out
xor
cmp
in
fistpll
stc
mov
orb
xchg
mov
loope
shl
ljmp
push
fcomip
test
aam
in
mov
out
fsubp
mov
out
repnz
leave
ss
xor
or
cmp
sar
cmp
dec
enter
lock
aaa
leave
lret
imul
jmp
fcmove
lret
aaa
or
cli
loopne
std
in
fstl
jmp
in
cld
cmp
out
test
sti
push
mov
mov
or
neg
jmp
into
ror
add
cmc
cmc
loope
mov
fmull
fnstenv
aaa
xor
lret
clc
stc
int3
hlt
aas
aad
rcl
out
out
jmp
loop
aaa
ror
ss
in
shr
loope
jecxz
cmc
ret
iret
loope
cmp
cld
test
loope
icebp
mov
loop
rcr
xor
idiv
roll
cmc
jecxz
lret
icebp
jmp
int3
lret
cmc
cmp
cli
cmp
in
fcmove
std
lock
fadd
fsubrp
cld
stc
test
call
lock
lock
fucomi
aam
loop
enter
incl
mov
mov
xlat
xor
xor
jmp
lock
inc
loopne
xlat
ljmp
sti
sub
icebp
jmp
call
std
cli
les
aam
jmp
stc
std
fsubrp
int3
div
rcr
sarl
rcr
in
loope
cmp
shl
mov
cli
cmc
xlat
test
mov
mov
lea
out
leave
idivl
ss
rolb
enter
out
std
shl
and
imul
ljmp
cli
ds
fadd
test
sbb
jmp
out
iret
xor
aam
hlt
shr
aad
filds
repnz
into
nop
lock
xor
lock
std
iret
icebp
ret
stc
testl
in
rol
out
enter
sarb
in
idivl
fadd
in
fildl
test
stc
clc
xor
in
cmp
lock
and
cld
incl
in
xlat
sub
in
sar
cli
in
enter
aam
repnz
in
in
into
adcl
out
sarb
ds
add
les
cli
xor
in
lret
in
repz
aam
rcr
out
test
out
xor
ret
call
mov
lret
std
cmp
call
rcr
jecxz
cli
test
mov
std
mov
out
in
in
out
enter
cld
lret
cmp
jmp
stc
out
mov
cli
rclb
cmp
rcl
not
aad
fcos
idiv
ret
stc
repnz
test
jmp
out
out
xchg
loop
loop,pn
jmp
fst
rcl
repnz
rcl
cmc
ljmp
lock
xor
lock
aas
fidivrs
mul
rcr
repnz
fdivr
jmp
jecxz
and
out
sub
xor
iret
in
cmp
loopne
loop
into
ret
test
incb
mov
xchg
hlt
cmp
fsubrp
aam
loopne
cmpl
ffree
in
movb
jecxz
subl
ror
out
lret
fnop
ds
out
cmp
shl
fcmovb
xlat
loopne
mov
nop
int3
decl
repz
ss
stc
incb
xchg
lret
mov
in
loop
xchg
repnz
repz
ljmp
in
out
xchg
adcb
in
ret
cmp
int
out
repnz
sar
loope
mov
jecxz
mov
lock
cmp
repnz
shr
inc
shl
jecxz
mov
mov
mov
xchg
fists
fyl2x
cmp
out
shr
cmp
ret
loope
les
call
into
mov
xor
in
out
idiv
repz
stc
enter
sbb
add
lock
decl
add
add
rol
iret
aad
aad
adc
lea
cmc
mov
jg
cmpsb
add
repnz
hlt
bnd
fadd
rolb
jmp
call
les
cmp
int3
lret
idiv
rcl
cmp
out
shl
xchg
repnz
clc
incl
icebp
sub
jmp
into
rol
idivl
ds
ret
enter
mov
jmp
mov
lock
enter
hlt
aas
aad
cmp
cli
loop
cmpl
ljmp
rclb
call
sarl
cmp
icebp
xchg
faddl
in
lret
loopne
xchg
xchg
leave
loop
sti
std
clc
enter
aas
in
aam
jmp
in
in
sar
int
out
cmp
std
lret
in
int
ds
rol
in
stc
xchg
out
xchg
in
std
in
int
out
ret
ss
out
stc
clc
cmc
lret
fsqrt
test
sti
loop
out
idiv
out
in
sti
iret
addl
imul
shr
not
fcomp
fst
jmp
shl
cld
cli
repnz
sub
rcl
lret
aaa
cmp
fstp
rolb
sti
fstp
test
hlt
shl
xor
cld
aas
xor
loopne
out
test
cmp
fmul
test
rcl
call
std
fst
shr
out
xor
aam
sti
hlt
orl
in
mov
divb
aam
xor
filds
in
mov
aam
out
xor
ljmp
cmp
aas
and
dec
xchg
mov
stc
loop
aad
div
cmp
cmc
lret
not
idiv
cli
out
sub
jmp
test
xchg
hlt
repnz
xor
leave
sarl
loop
dec
loop,pt
jmp
xlat
lret
rcr
xor
lret
out
fcmovne
int
shll
iret
cmp
test
loopne
mov
enter
or
aaa
in
divl
leave
fidivl
leave
sti
out
shl
test
rcr
std
les
in
nop
ljmp
ss
cli
out
hlt
sub
fldl
fld1
xchg
ret
xor
xlat
rcl
aad
in
jmp
test
fcmovnbe
mov
faddl
xchg
mov
rorl
xor
cmp
clc
cmp
jecxz
aad
fldpi
test
fsub
call
xchg
mov
lret
ljmp
fcomp
idiv
std
aas
test
mov
in
fildl
xor
cmp
ljmp
xchg
jmp
sar
mov
repz
cmc
in
shl
bnd
cmc
lock
loope
aam
in
mov
sti
loope
loope
or
in
in
ljmp
shl
std
stc
neg
std
in
lret
int
std
out
rol
in
in
icebp
fbstp
fcmovnu
shl
xlat
hlt
icebp
in
xlat
cmp
xchg
mov
int3
test
call
jmp
hlt
shl
cmc
cmp
jecxz
fadds
and
rol
loop
aam
shr
lret
in
cmp
jecxz
loope
and
faddp
fsub
ret
call
shll
fxch
out
aas
in
flds
fcmovnb
sti
out
out
jecxz
ret
xchg
xchg
imul
xlat
int3
hlt
out
out
xor
repz
jecxz
cmp
rol
mov
sti
out
mov
cli
lock
aaa
xor
into
cmpl
jecxz
fcmovnbe
orl
loope
xor
aad
aad
xor
into
ror
sbb
ds
in
aad
hlt
call
flds
mov
aad
jmp
cli
cmp
cmp
repz
fcmovnbe
loope
fsubrp
fsubr
call
rcr
icebp
xlat
xor
sti
cmc
clc
xor
cmp
cmp
fiadds
test
int
out
jmp
aad
repz
in
cmc
jmp
out
out
cmp
hlt
movb
jmp
fdiv
in
repnz
cmc
fcmovnbe
test
xlat
lock
ds
cmp
call
out
sti
call
xabort
les
repnz
fadd
repnz
loop
mov
fdivr
xchg
rcl
cmp
lret
cmp
cli
out
in
into
repz
jecxz
mov
jmp
mov
int
mov
jb
rclb
jl
add
orb
xchg
inc
ret
jmp
ljmp
cmc
loopne
not
fiadds
clc
in
xor
in
lret
leave
repz
rcr
test
loop
call
clc
sub
enter
or
repnz
fdivl
in
cmp
lret
fcmovnb
mov
out
into
in
out
xchg
mov
out
xor
out
in
fcom
rcr
clc
repnz
aad
ret
aad
loop
loope
nop
out
out
icebp
ds
out
shl
hlt
icebp
leave
shr
cmc
lock
cli
fldl
mov
sar
fiaddl
fucomi
xor
sti
jecxz
cmpb
clc
out
repnz
fcmovnb
stc
sti
into
int
lret
test
aad
out
neg
enter
cmp
icebp
rcl
iret
rcl
loop
xlat
out
in
lock
test
loopne
in
aad
ljmp
ds
jecxz
stc
jmp
roll
xlat
icebp
hlt
sarb
flds
ret
ljmp
mov
in
not
out
sar
std
ss
aam
hlt
ret
loopne
std
repz
ffree
adc
mov
in
aaa
xor
hlt
xor
icebp
jmp
call
shl
sar
leave
leave
ret
cld
jmp
nop
int3
leave
ror
lock
fmul
cmp
push
clc
cld
fcmovb
jmp
dec
jmp
cld
cld
and
icebp
fadd
cli
sti
cmp
aaa
std
cli
fcmovu
rcr
jecxz
fucom
out
loopne
popl
iret
jmp
shll
idiv
iret
out
adc
cmc
loope
hlt
mov
std
sub
fmulp
std
mov
ljmp
sti
out
cmp
ss
sar
enter
loop
int
shr
into
lock
out
int3
divl
out
xor
fdivr
lock
ret
xchg
mov
iret
loop
mul
shlb
into
cld
int
in
repnz
sti
lock
fcmove
jmp
out
repnz
shlb
loope
ss
clc
icebp
hlt
jecxz
in
loopne
lret
xchg
cli
xchg
int3
fdivl
icebp
fcom
into
icebp
xor
rcr
in
test
and
mov
jecxz
jmp
int3
jmp
cli
repnz
ret
fcmovnu
rorl
addb
out
mov
lret
bnd
sti
ret
fcmovb
inc
into
ljmp
loope
repnz
in
xor
iret
in
repnz
jmp
lock
in
out
incb
in
fisttps
cld
xchg
out
lret
cli
leave
std
lret
loop
xor
cli
in
hlt
cmc
fcmove
out
into
fmuls
out
jmp
call
lock
ret
ret
rcl
test
in
xchg
leave
out
cli
into
jmp
fcmovne
in
ss
fcomi
imul
leave
dec
in
jecxz
fsub
mov
ror
divb
out
repnz
aam
idivb
ds
int3
hlt
ret
lock
aad
sti
leave
clc
idiv
enter
icebp
sub
int
cmp
div
div
into
rcl
shl
loopne
fsincos
out
cld
into
mov
out
leave
cmp
cmp
cmp
fprem1
ds
jmp
out
test
in
sti
in
in
ficoms
int
shr
sbb
icebp
cmc
add
fldl
mov
into
not
enter
aaa
inc
jecxz
jecxz
adc
ret
nop
ret
fdiv
aam
xor
out
aaa
lds
repz
shr
cmp
rcl
test
mov
fucom
lock
out
loope
xlat
fldlg2
hlt
out
enter
in
test
mov
loopne
addl
enter
sub
fdivrl
cld
cmp
ret
in
shl
aam
ljmp
int
clc
ror
enter
sarb
icebp
cmp
out
shr
sti
cmc
fcmovne
sti
ljmp
or
fprem
out
cmp
rcl
out
cmp
rol
ret
call
out
lret
call
cmp
enter
cmp
stc
fldl
fimull
adcb
fstp
hlt
repnz
ror
lret
rcr
ds
ret
test
cld
imul
fmul
jmp
ret
cs
clc
je
mov
jmp
int
aad
fstp
ffree
push
jl
push
jl
jg
cmpsb
add
in
loopne
xor
aaa
stc
hlt
cmp
out
in
out
mov
clc
jecxz
cld
call
int
mov
into
in
cs
xor
out
loope
cmp
sar
bnd
leave
xlat
lret
add
out
enter
cmp
ljmp
sbb
xchg
fsub
cli
ljmp
sar
aam
rol
into
ret
into
icebp
cmp
out
addb
xchg
xor
iret
fldlg2
jmp
test
int3
out
in
stc
lret
mov
fsubr
loope
xchg
in
out
loopne
out
lock
lret
aad
std
fcmovnbe
out
std
sti
sbb
in
in
sti
fisttpl
sub
hlt
cmp
clc
hlt
out
sti
in
out
in
in
loopne
stc
repz
call
int3
jmp
repnz
xlat
iret
ljmp
cmp
in
int3
in
into
std
jecxz
not
ret
mov
leave
or
xor
lock
cmp
cmp
xor
aas
call
xchg
xchg
xor
out
cmp
jmp
hlt
cmp
mov
aas
test
mov
rclb
ret
sti
lret
hlt
sti
int
hlt
icebp
in
jmp
in
sub
jmp
rcr
stc
int
cmp
cmc
jecxz
ret
fsubp
sti
leave
enter
test
jecxz
shl
cli
repz
jmp
shl
repz
clc
std
clc
cmp
test
ds
in
in
repz
iret
lret
lock
xor
repnz
repnz
shr
ret
ror
and
nop
in
sub
ss
xor
ss
repz
sti
fcomip
jmp
flds
lret
jmp
call
icebp
xor
lret
test
cli
out
fst
fstpt
xchg
lea
xor
in
iret
aaa
repz
test
les
rolb
jmp
sbb
rcl
fadd
xor
out
aad
f2xm1
cmp
neg
xlat
mov
hlt
xor
loope
in
out
xchg
xchg
lret
das
jmp
cmp
in
ret
fcmovb
out
loope
out
fcmovne
fcoml
xor
out
cmp
call
clc
in
in
icebp
cmc
shl
adc
int
in
jmp
repnz
stc
fnsave
cmp
cli
rolb
fcos
idiv
std
sti
in
in
idivl
ljmp
in
icebp
incb
filds
int3
cld
or
loopne
rcr
enter
fidivs
icebp
test
lds
cmc
adc
test
out
cmp
in
in
in
enter
lret
cmp
int
mov
jecxz
sti
rorb
xor
into
ror
xlat
fnstsw
adc
lock
jmp
icebp
int3
out
fdiv
loope
ret
in
cmp
idivb
cmp
fadd
cmp
xlat
test
xchg
cld
sub
test
imul
sarb
fcomip
cmp
std
clc
mov
aad
orl
into
out
int
lret
icebp
repnz
into
sbb
in
in
fcmove
ljmp
ret
repnz
cld
cmp
ljmp
addl
out
jmp
out
mov
xlat
repz
xor
xor
int
shl
fstpt
sbb
xlat
fsubp
loop
loope
int
shl
rcl
ss
out
testl
stc
faddl
out
mov
bnd
sti
clc
sti
and
fst
in
cli
fdivr
into
iret
call
cmc
div
sar
fdiv
int3
fcomi
fistpll
lret
fmuls
loop
lock
out
loop
out
cli
test
int3
shl
rolb
loopne
mov
mov
repnz
sar
jecxz
xor
xlat
idivl
shr
int3
cld
xchg
mov
fsub
jmp
jmp
fiadds
iret
xlat
aaa
rcr
call
cmp
not
rol
test
inc
std
sbb
mov
ret
jecxz
ljmp
faddp
cli
jmp
xchg
lret
loopne
cmc
loopne
stc
shll
xorl
jmp
mov
mov
mov
mov
xor
jmp
aam
ror
rcl
fld
sub
xchg
lahf
cmpsb
pop
jg
cmpsb
add
lock
lock
xchg
test
loop
or
xchg
xor
sar
jmp
cmp
rcr
into
aas
cld
mov
mov
jmp
sti
enter
addl
repnz
std
test
div
ds
jecxz
stc
mov
mov
jmp
in
movl
shl
aad
cli
fucomip
xlat
into
adc
fmul
loopne
in
in
lret
in
call
in
out
ror
fmulp
f2xm1
std
out
fsubr
ret
aas
leave
decl
xchg
aam
repnz
in
in
cmc
cmp
jecxz
loopne
cli
inc
in
mov
loopne
loop
in
in
in
icebp
xor
cli
adc
cmp
xlat
adc
xor
ljmp
lds
lret
shl
jecxz
ds
xchg
std
call
mov
xchg
xor
clc
xor
rcl
cmc
jmp
fiaddl
sar
std
in
std
fsubrp
mov
cs
cmc
lret
out
int
cmp
test
in
roll
cli
mov
iret
out
lret
in
iret
xor
ljmp
out
cmp
loop
jmp
fxch
mov
shl
fsub
aad
ss
fcmove
sbb
out
stc
aam
xlat
loopne
xchg
nop
jmp
out
lock
out
enter
faddp
fdivrp
shr
stc
fstpt
testl
rorl
aaa
xor
out
call
rcl
leave
mov
cld
lret
mov
in
mov
lret
ret
fdivrs
cld
clc
loopne
jecxz
fldl2t
call
fcmovne
mov
cli
ljmp
call
xlat
sub
fstpt
sti
fld
fcomp
ffree
in
mov
in
xor
into
into
fidivl
hlt
ljmp
fstp
cli
ret
sar
out
xchg
dec
iret
test
test
ljmp
cmp
cli
int
loop
sar
ljmp
xchg
out
fdivl
rcl
ret
icebp
int
enter
xor
aad
test
cli
out
iret
rorb
out
ds
jmp
fidivrl
int3
call
rol
out
loop
out
out
lret
fimull
ljmp
hlt
ljmp
out
loop
sti
sub
ljmp
in
rol
lret
hlt
jmp
out
xor
lds
lret
loope
cmc
aad
loopne
in
cmp
iret
cld
cli
fcmovnu
loopne
aam
fst
aam
in
test
int3
mov
in
sbb
rcl
ret
aad
fcmove
cmp
clc
std
bnd
mov
mov
test
fcom
mov
hlt
in
fstp
lock
cmp
shl
xlat
ss
neg
ffree
idiv
enter
int
addb
shrb
out
rcr
cmp
ret
lock
hlt
incl
repz
enter
out
rcr
cmp
out
aad
cld
shl
in
ret
loopne
enter
sub
icebp
clc
hlt
lret
cs
fyl2x
icebp
fucom
aas
out
ret
out
orb
cld
push
xchg
xchg
in
jecxz
cmp
iret
into
cmp
hlt
fcmovbe
xchg
clc
into
loop
out
repnz
imul
cmp
repnz
cld
cmp
adc
clc
ret
fcomi
mov
ljmp
sub
xor
aam
rcl
aaa
call
movl
ljmp
out
repnz
leave
adc
clc
in
cmc
rol
loopne
mov
sar
mov
xchg
out
cmc
ror
shr
imul
cli
aam
enter
in
out
xlat
mov
vpaddd
loopne
ret
fcmove
lret
call
cmp
testl
xchg
int
ljmp
int
cmp
out
ds
cmc
add
sub
iret
leave
icebp
int3
into
xor
cmp
cmpb
shl
testl
icebp
loop
clc
out
xor
in
aas
fchs
add
repz
std
test
in
mov
repnz
cli
enter
lret
aam
aam
aas
loop
mov
add
cmp
je
mov
xor
add
mov
mov
jmp
enter
int
insb
push
push
mov
xor
jl
add
xchg
loope
out
in
std
in
lock
ds
jmp
sarb
sti
sbb
mov
hlt
jmp
out
xor
xor
cmp
out
push
repz
repnz
stc
jmp
aad
fsubr
lret
lret
test
icebp
divl
xlat
stc
call
cld
cld
rcr
sar
faddl
fcomip
xchg
int3
ret
out
fcos
shll
loop
incl
enter
xchg
mov
mov
jmp
ds
lret
xor
cmp
hlt
icebp
call
int3
fidivrs
hlt
hlt
ljmp
mov
loope
fdivs
aad
int
hlt
hlt
fdivr
jecxz
aas
ds
jecxz
cmp
leave
int3
in
popl
stc
hlt
leave
call
xlat
shl
jecxz
repz
out
in
call
cmc
in
xor
sar
cmp
inc
aam
jecxz
and
loope
iret
int
sti
fucomp
out
fbstp
in
xor
fdivrp
into
shl
cmpb
into
aad
jecxz
ds
cli
int
mov
ret
fdivrl
std
repnz
jecxz
in
out
leave
jecxz
clc
test
adcl
out
leave
fcomi
cmp
icebp
rcr
cmp
rol
cmp
ret
mov
les
mov
cs
xor
int3
aad
shr
xor
cli
mov
test
in
into
icebp
fsubp
xchg
lock
out
ljmp
cmp
out
fcmovb
std
xchg
vpaddusw
cmp
fdivr
clc
sti
shll
repnz
iret
repnz
ljmp
out
mov
mov
jmp
fidivl
leave
fcomp
xlat
aad
cmp
ds
clc
aam
lret
fsubr
jmp
loope
hlt
shr
loop
clc
in
fucomi
cmc
jmp
xlat
ret
aam
aas
cli
std
sbb
mov
or
in
nop
rol
aaa
int3
out
shr
cmp
fdivl
hlt
shl
sub
lock
cli
loopne
mov
jecxz
int3
int3
stc
in
leave
xor
jmp
loop
les
fcmovu
mov
xor
xor
xor
leave
cmp
fadd
in
cmp
lret
cli
and
mov
mov
das
in
cmp
xlat
clc
enter
xor
out
loop
vpaddsw
mov
shl
in
int3
aam
xor
cs
ss
not
fiaddl
filds
std
jmp
xchg
imul
cmp
fst
clc
ds
cmp
rcl
repz
cmc
clc
loopne
call
call
addb
fmul
cmp
sti
fcomi
xor
icebp
shl
mov
cld
cli
out
out
mov
in
jecxz
loopne
xor
clc
idivl
ss
xlat
int
rolb
cmp
call
rol
enter
xlat
in
stc
in
call
clc
fld
ds
enter
in
mov
mov
iret
mov
stc
into
vshufps
rcl
aas
xlat
loope
cmp
ret
out
call
ljmp
iret
leave
shl
out
cmp
cmc
aas
out
out
roll
jmp
icebp
lds
xor
cmp
lock
in
ror
fstpt
test
loope
fiaddl
addb
enter
iret
aaa
cld
into
lret
cmpb
repnz
jmp
iret
mov
mov
fcomip
test
into
stc
out
ds
in
ret
shl
stc
not
out
leave
vpor
fmul
out
int3
xchg
loopne
repz
in
shl
enter
hlt
in
fdivrs
aad
cld
xlat
sti
sti
mov
in
mov
aad
enter
sub
out
std
std
cli
jmp
cmp
loop
add
dec
neg
loope
lret
xchg
call
out
fnstcw
ljmp
std
int3
into
fildl
ret
int
in
jmp
nop
jmp
xchg
xchg
sar
idivl
repz
out
cmp
lock
ds
cli
sti
fisttpl
div
shll
xor
shr
call
aad
shl
rorb
std
repnz
into
iret
iret
out
xor
cmp
cmp
xlat
loopne
xlat
fcomi
test
enter
call
divb
jmp
int
xor
roll
neg
mov
stc
loop
into
mov
mov
jmp
rcl
rcr
fcmovb
mov
fstpl
xor
lahf
lods
jp
jg
cmpsb
add
xor
enter
xor
ror
loopne
in
jmp
lret
fmul
add
out
xchg
xchg
fisubrs
out
xor
fdiv
jmp
loopne
shl
std
stc
in
shl
int
int3
mov
out
xchg
in
enter
rcr
imul
cmc
out
loopne
std
cmp
neg
ret
cmp
sub
mov
hlt
ret
shr
aam
cmp
lret
sarb
addb
imul
fiaddl
icebp
call
call
xor
push
int
rcr
sarb
jmp
cmc
int
fldpi
sti
lock
mov
icebp
shl
out
icebp
sarb
repnz
ljmp
cld
mov
in
nop
ljmp
fnsave
shr
idiv
cmp
jecxz
idiv
xchg
in
xchg
incl
aad
jmp
aam
sar
lds
stc
cli
ret
aad
out
iret
sti
call
mov
aaa
icebp
repnz
hlt
repz
aam
cmp
sti
ret
jmp
incl
iret
xor
xor
aas
int3
fsubp
out
out
repnz
jecxz
aad
addb
loopne
in
xor
fcmovne
fcmovnb
fcomp
cld
aam
cmp
fincstp
out
in
aad
cmp
enter
in
lret
rcr
fcmovne
fdiv
clc
loope
aam
adc
cmp
call
repz
jecxz
shl
fsincos
ret
xor
leave
ss
std
in
add
lea
shrb
lock
in
rcl
hlt
fdiv
flds
test
loop
cli
leave
lret
ljmp
cmc
fcmovnu
shl
hlt
fcmovne
cmp
fdivr
in
test
hlt
in
call
loopne
xchg
loope
out
sub
into
aaa
fyl2xp1
cmp
jecxz
jecxz
cld
cld
cmc
loop
cmc
leave
loope
sti
loopne
leave
filds
fnstcw
ss
cs
std
jecxz
ds
clc
sti
fcmovb
in
cmp
ret
in
fstp
xchg
mul
int
ror
fcmovnu
out
sti
hlt
clc
loop
stc
call
stc
sbb
loop
rcl
sub
fcom
cmp
rcr
testb
roll
fsubr
std
adc
cmc
in
jecxz
aaa
cli
into
aad
jmp
std
out
filds
out
out
loope
jmp
fmulp
repz
leave
sar
lds
out
aas
cli
out
fidivrs
fdivrp
imul
xchg
out
xchg
shr
xchg
leave
fsubp
int
cmp
fcomp
rcr
aam
aam
fst
lea
fdivp
shr
fdivs
cmp
lret
sarb
std
xchg
fldl
test
out
test
out
in
call
in
fstpt
roll
cmc
cli
idiv
ljmp
call
rcr
out
enter
ret
xlat
addl
call
adcb
lret
aam
enter
rcr
jecxz
repnz
mov
cld
jmp
mov
fucomp
cli
lock
sub
out
divl
call
fsubp
in
ds
shr
fimull
dec
out
cld
ret
lock
fnstenv
lret
jmp
cmp
ret
aas
rolb
xlat
cli
in
loope
jmp
fst
out
xor
sub
repz
enter
ret
incb
cld
in
out
mov
sub
loopne
stc
int3
clc
ret
std
repnz
icebp
cmp
cmp
ret
loop
incl
int
sti
cld
cld
repnz
jecxz
sar
cmp
fnstcw
xlat
sti
jecxz
hlt
std
aad
orb
out
sub
repnz
lret
ret
repnz
leave
cmc
jmp
lock
sbb
aad
int
mov
in
icebp
in
xlat
fsub
shl
stc
jmp
stc
fstp
ljmp
loopne
call
leave
loopne
in
repnz
test
cli
les
repz
enter
loope,pt
xchg
xor
fnclex
loope
xchg
call
rcl
fucomp
rcr
clc
into
icebp
in
into
fcmovb
xlat
out
faddl
mov
xor
rol
in
bnd
hlt
iret
adc
fiaddl
jmp
jmp
fldl
fxch
icebp
shl
in
loopne
cli
out
fdivrp
in
cld
bnd
loop
incb
rcl
stc
cld
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
jmp
ds
leave
fstp
ror
cmp
mov
clc
push
movsb
imul
add
cmp
xlat
fcmovnbe
cmp
repnz
test
leave
sti
sbb
cmp
xchg
in
fsubrs
out
ror
cmp
fildl
cmp
ror
in
clc
fsubr
std
loope
into
cmc
lock
cmp
shrl
imul
hlt
in
not
rcl
sarl
repnz
idiv
add
test
in
incl
iret
jmp
cmc
call
hlt
cmp
sbb
aam
sar
icebp
std
jmp
cld
aam
lret
jmp
xor
fcomp
ljmp
aad
ffreep
lret
sub
xchg
shl
rol
rcl
icebp
cmp
fdivp
fistpll
sbb
clc
test
jecxz
cmc
aam
faddl
ljmp
fucomp
jmp
xlat
ror
faddp
mov
test
ljmp
sti
stc
xor
cmp
jecxz
cmp
fsub
fistpll
xchg
mov
in
into
in
sti
loopne
lock
ljmp
fcomi
std
stc
loop
neg
jmp
test
xchg
ret
cmp
shr
aam
cmp
addl
inc
fdivr
into
xchg
repnz
out
jmp
cmp
jecxz
ret
ffreep
orl
lock
test
ss
aaa
repnz
ljmp
adc
mov
adcb
in
idivb
idivb
hlt
cmp
loop
test
hlt
out
clc
fstp
jmp
mov
xor
hlt
int
ret
std
jmp
stc
sbb
cmp
loop
rcl
leave
std
mov
int3
mov
cmc
ss
leave
jmp
in
out
loope
hlt
sti
loope
div
mov
std
in
xchg
xor
xor
out
cmp
cmp
in
aad
cmc
cld
jmp
mov
int3
std
shl
in
hlt
fdivs
hlt
std
repnz
aad
cmp
xor
xbegin
les
fnclex
mov
clc
imul
repz
lock
addb
loop
call
xor
ljmp
flds
fdiv
ret
or
flds
fsubrp
cmc
ss
lret
lret
iret
out
fdiv
cmp
out
std
not
cmp
add
out
ficoml
out
iret
in
cs
lock
cmc
stc
fcmovu
cmc
test
xchg
sti
jmp
mov
int
xor
out
in
clc
out
shr
not
rol
cmp
jecxz
repz
inc
mov
shl
aas
stc
cmc
vpmaddwd
fxch
aad
cld
adc
loop,pt
rol
xchg
mov
call
ss
xor
idivb
repz
addl
int
fdivrp
fsubrp
cmc
repnz
lret
ss
lret
icebp
cmp
icebp
cmp
in
cmp
mov
fcomip
leave
aam
push
fsubrp
ror
jmp
clc
out
shlb
hlt
aaa
in
repz
clc
repnz
push
test
fcmovbe
mul
out
or
cmc
mov
shl
int
rol
out
hlt
out
ror
lret
rcr
repnz
fld
lret
in
lock
sarb
call
clc
in
ds
fidivs
repnz
xchg
mov
jecxz
fmull
repz
lret
xor
loop
rcr
aas
fsub
faddp
inc
loop
out
out
loopne
mov
fxch
fucomi
xlat
in
cmp
iret
std
fcomi
rcl
f2xm1
and
call
loop
icebp
loopne
loope
in
lret
cmp
div
iret
test
out
fildl
fsubrp
loopne
les
jmp
lock
testb
mov
clc
test
xchg
loopne
ds
vpinsrw
aad
rcl
incl
fst
test
incb
fidivl
xor
repnz
aas
jecxz
jecxz
fnstsw
out
sarb
std
icebp
xchg
cld
loope
xor
stc
fmul
cmp
ss
out
aaa
int
loop
in
loope
jecxz
fdivr
leave
shl
xchg
jmp
clc
fistpll
ss
in
rcr
fcomp
test
fsub
leave
fsincos
nop
test
out
lret
ss
fdiv
sbb
testl
sub
repz
in
stc
repnz
out
leave
out
in
cli
sar
in
shll
cmpl
add
add
int
ret
fcmovu
add
dec
fs
cmpsb
into
outsb
jg
cmpsb
add
clc
aad
in
out
test
decl
fcom
leave
lret
xor
testl
mul
out
xchg
sbb
in
out
rcl
xor
clc
fsubr
adc
in
in
repz
inc
fmulp
loop
mov
ljmp
out
xor
adc
shl
in
int
in
sti
lret
jmp
out
xor
aaa
cmp
icebp
xor
sti
test
out
fcmovu
adc
into
mov
rcl
hlt
loope
into
repz
lret
test
xlat
xlat
add
in
iret
orl
ret
shr
aam
sti
lock
sti
in
cmp
rolb
xlat
in
sti
in
in
in
mov
or
cmp
jecxz
cmp
icebp
std
lock
and
idiv
clc
std
testl
fisubrs
fbstp
in
cmp
sbb
in
out
cli
sbb
out
sarb
cmp
fcmovnu
xlat
sarl
jmp
sbb
std
lret
loop
xchg
out
nop
jmp
fmul
ror
aas
xlat
xlat
stc
fadd
fadd
idiv
clc
lret
fucom
xchg
nop
icebp
repz
xor
shl
cmp
filds
aad
aas
xlat
loop
in
sti
clc
movb
xor
leave
out
out
lock
fstp
add
test
loopne
loop
xlat
loop
out
xchg
mov
repnz
call
fsubp
stc
out
icebp
fldlg2
into
call
dec
and
enter
cmc
lret
enter
fstpt
out
cmp
int
ret
out
hlt
fadds
nop
nop
xchg
shl
loope
cmp
stc
icebp
fcmovne
in
fdiv
in
cld
aas
loopne
aam
mov
call
and
jmp
fxch
in
fdivrs
sti
out
rcl
jecxz
lds
int
icebp
test
rol
out
repnz
out
out
xor
test
int3
xchg
rol
std
filds
in
shl
jmp
xor
out
out
sarl
iret
cmp
shl
out
std
decb
out
int
mov
mov
fld
mul
cmc
jmp
out
fdiv
jmp
fcom
repz
clc
sbb
not
int
or
std
call
in
into
clc
in
fcmovbe
cmp
fdivp
not
ret
clc
jmp
rorb
in
shlb
out
ds
out
in
lock
fcmovb
faddp
loopne
call
cld
mov
repnz
xor
stc
leave
in
hlt
cmp
xlat
ret
sar
in
cmp
icebp
shl
and
xor
test
out
cmp
fcmovbe
lret
fcmovnbe
fiaddl
fisttpll
loopne
aam
xlat
fcmovnbe
lret
sti
cmp
cmp
mul
lock
jecxz
fimuls
xor
vpmullw
xor
shl
or
clc
ret
stc
incl
mov
aad
icebp
xlat
xor
std
fdivrl
lock
fndisi(8087
int3
xchg
out
fisttps
std
out
jmp
hlt
ds
vcvttss2si
int3
lret
cmpl
fsub
loope
ret
sub
jmp
loopne
leave
call
lret
aad
rcr
cmp
out
jecxz
idiv
xchg
xorb
jmp
in
std
neg
ljmp
iret
loope
sbb
fimuls
ret
test
xor
rol
ror
clc
aas
ljmp
aas
not
cmp
mov
out
xchg
cs
jecxz
cmp
icebp
lret
jmp
aas
iret
frndint
cmc
xchg
shl
ret
int
int
fcmove
mov
jecxz
icebp
div
shl
rol
ss
sar
loop
ljmp
int3
xchg
cld
in
ret
not
xor
out
fdivr
sarb
xchg
div
les
and
repnz
shl
das
rcl
div
sti
fstpt
lret
ret
in
loope
xchg
out
rcl
in
hlt
out
loopne
mul
enter
rcr
fstp
aad
fnclex
cld
jmp
mov
mov
loope
out
not
fldl2t
aad
aam
cld
test
ljmp
fucomp
ljmp
in
cmp
xor
repnz
loop
testb
xchg
lret
xchg
scas
xlat
sub
mov
jmp
mov
mov
xor
cmp
jmp
aas
enter
xlat
fcmovnu
mov
pop
outsb
ja
js
jg
cmpsb
add
test
xchg
loopne
shl
aad
cmp
aad
jmp
clc
cmp
cmc
sarb
test
loope
xchg
fstp
in
divl
call
jmp
int
test
les
leave
leave
call
mov
leave
into
cmp
hlt
in
xlat
cmp
repz
cmp
loope
lret
add
jmp
jmp
in
cmp
cmp
call
cmp
cli
addb
fmull
xchg
aad
jecxz
out
call
cmp
inc
jecxz
cld
jmp
jmp
loop
mov
cli
into
cli
xchg
mov
not
shrl
shl
aam
out
ds
rcr
sar
mov
xchg
call
xor
fstpt
into
xlat
ss
fdiv
xlat
fildl
fucomp
fildl
ljmp
xor
clc
loope
test
hlt
icebp
out
xor
clc
loopne
lock
sub
out
clc
loop
sti
xor
loopne
lock
sub
xchg
mul
out
lock
call
sti
cli
loop
cmc
call
fcmove
std
aad
shl
out
fidivl
sar
rcr
sub
sbb
mov
rorl
aam
call
cmp
sarl
cmc
icebp
flds
or
xchg
xchg
aam
xlat
lds
fdiv
enter
sar
out
sbb
mov
xchg
xchg
fmull
lret
out
jmp
ljmp
test
jmp
fadds
mov
in
aad
lret
shr
out
cmp
stc
cmp
xchg
leave
idiv
fdivp
cli
ljmp
vpmulhw
shll
cmp
in
stc
lock
testl
fildl
clc
hlt
xor
int
xlat
in
sarl
repnz
jmp
clc
clc
addb
repnz
ljmp
xlat
add
fcomi
faddp
testl
out
int
shll
cs
ljmp
in
loopne
loope
add
int
hlt
ret
in
in
shl
cli
lock
fiadds
std
loop
sti
ret
int
shl
ror
cmp
enter
enter
cmp
inc
fisttpl
in
mov
mov
aam
leave
lret
fdiv
jmp
loopne
aam
fisttpl
test
xabort
xlat
in
xor
cmc
sub
rcl
mov
stc
xchg
mov
mov
in
cmp
ljmp
repz
std
div
imul
decl
xchg
mov
int
sar
icebp
into
in
lret
into
fsubrp
faddl
fdivrp
cmc
loopne
out
out
jmp
lret
xchg
sub
fldcw
int3
cmp
enter
add
lret
sti
out
shl
mov
cmp
cmp
hlt
lock
roll
into
adcl
rcl
enter
out
clc
fadd
hlt
cli
cmp
neg
xlat
test
filds
out
cmp
in
ss
int3
shr
ret
ret
int
and
jmp
sti
out
nop
sub
loopne
out
aam
leave
in
int3
hlt
rolb
orl
mov
in
ror
stc
in
iret
iret
cmp
xor
in
cmc
aad
test
test
decb
mov
in
sarb
ret
neg
aas
fdiv
int
aas
loop
loopne
aad
jmp
lret
rol
test
int3
cmp
in
iret
icebp
lock
fidivrs
stc
repz
mov
leave
mov
out
lret
iret
stc
fmul
jmp
into
stc
ffree
aas
out
cld
ds
mov
call
loop
icebp
mov
bnd
divb
repnz
fscale
cmp
iret
inc
repz
iret
mov
rorb
sarl
leave
lret
lret
loopne
cmp
ror
ffree
int
mov
int3
jmp
into
sub
call
lock
out
rol
ret
cmp
fstp
test
rorl
sti
test
decl
add
mov
add
add
rcl
rcl
aad
xchg
mov
in
pusha
fistpll
jl
add
fcmovnu
fcomip
enter
shl
sar
loope
fsubrp
testb
sarb
out
fxch
aam
call
cmp
cld
enter
mov
nop
clc
repz
call
aad
rolb
test
xlat
aad
faddl
xchg
addl
cmp
fucomi
ljmp
ds
cli
mov
mov
jmp
out
xorb
das
lret
clc
div
cmc
enter
in
loopne
out
in
neg
xor
into
or
out
ss
icebp
imul
icebp
loope
lock
loope
cmp
mov
call
into
shr
stc
int
fmul
repz
addl
jmp
in
mov
xchg
xchg
out
xor
idiv
out
cli
cmc
ror
sti
sti
xor
ret
ret
clc
out
in
out
mov
xor
in
xor
repz
cli
in
out
in
imul
leave
mov
shlb
in
not
cmc
jmp
iret
std
repz
fdivrp
shl
cli
stc
call
loope
mov
divl
ss
xor
icebp
iret
lret
fdivp
stc
rcr
aas
std
fiadds
fldl
in
cmp
loop
leave
cmp
cmc
hlt
aad
fcmovbe
loop
or
lret
lock
out
int3
xor
xlat
loope
cmp
sbb
cmp
rcr
decl
out
out
shl
in
neg
aam
idivl
fcmovnbe
out
ret
lock
shl
mov
fcmovu
jmp
rcr
mov
lret
sti
into
cld
out
sti
aam
ret
repz
clc
test
sbb
fldz
fcmove
xchg
xchg
out
in
sti
out
call
icebp
lock
xlat
test
adc
mov
or
xchg
xchg
xor
ret
divb
xor
lret
aam
aas
fdivr
out
not
repz
les
mov
test
in
imul
lret
call
jecxz
ffree
rcr
sar
in
ret
dec
lret
and
xchg
in
loopne
jecxz
jecxz
int
cmc
shll
rcl
shl
std
icebp
orl
test
xchg
cld
leave
imul
rcr
shl
cmp
lock
xchg
cmp
xor
sti
loope
sbb
xchg
out
or
icebp
ret
out
in
cmp
aaa
cmp
ds
hlt
ret
out
out
loop
movl
divl
xor
repnz
stc
rcl
rol
cmp
jecxz
aad
add
loop
int
out
xchg
int
xor
in
enter
std
xlat
add
ret
ds
mov
call
mov
xchg
divl
ret
enter
out
jmp
out
in
mul
aam
incb
or
call
stc
jmp
leave
rcl
cmp
fsub
lds
ret
hlt
test
jmp
xchg
fcmovbe
repnz
int3
cmp
stc
xor
stc
int3
repnz
sar
add
addb
xchg
and
jecxz
lock
fadd
enter
lock
lds
ffree
stc
leave
lock
mov
xor
call
div
icebp
fstpt
rol
test
iret
xchg
cli
icebp
jecxz
icebp
repnz
ss
cmp
xlat
aaa
xlat
xlat
repnz
in
call
clc
testl
aad
shr
cmp
loope
fcmovnu
cmp
int3
out
in
fstp
mov
in
nop
int3
xchg
hlt
jmp
xlat
iret
xor
testl
hlt
call
mov
fucomip
iret
in
jmp
iret
fucomip
aam
cmp
repnz
jmp
lret
xchg
nop
fldl
imul
jmp
xor
fcomp
enter
in
in
loopne
repnz
decb
rcl
in
in
iret
xor
in
in
cmp
int
repnz
out
or
ljmp
iret
aaa
ss
int3
cmp
into
adc
hlt
ffree
les
xchg
rclb
xor
cmp
in
out
fistpll
cmp
std
cmp
sti
in
test
fcomp
loope
test
xor
shll
std
ss
adc
loop
rcl
call
roll
rcl
hlt
ss
cmp
cmc
cmp
or
orl
test
mov
jmp
push
mov
sub
incl
mov
push
or
push
mov
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
rol
sarb
aas
rcl
mov
fdivrs
int3
jl
jl
add
jmp
xchg
fcmovu
test
divl
iret
aad
lret
in
in
fdiv
fsub
icebp
ds
cld
repz
lret
mov
rclb
in
out
shr
cmp
enter
jecxz
fcmovnbe
std
cmc
in
in
loop
out
cld
lock
fidivl
aaa
xor
lret
stc
ljmp
cmc
mov
out
sti
in
mov
mov
divl
aaa
ror
sub
aas
lock
clc
mov
and
sti
fildl
fsubp
enter
aaa
stc
repnz
lret
xchg
sbb
cli
and
hlt
test
into
icebp
cmp
ror
ds
out
mov
enter
fisttpll
sar
xlat
out
cmp
jmp
clc
fnclex
repz
xchg
fimuls
sub
cs
rcr
cmp
sar
loopne
ret
jmp
ret
lret
jmp
lret
mov
shl
fyl2x
aaa
xlat
in
ds
xor
mov
in
cli
fists
xor
das
out
fxch
cmc
shll
int
lock
std
test
loop
cmc
shl
ljmp
filds
fcomi
call
fcom
aas
fcmovnbe
loopne
lock
imul
fcmovu
int3
test
icebp
sub
call
ss
cmc
icebp
cmp
mov
cli
fiadds
cmc
in
sarb
lret
lds
xor
cmp
into
std
cmc
cmpl
lret
mov
iret
out
jmp
enter
in
sti
fsubr
jmp
loopne
xchg
hlt
ljmp
shl
aaa
call
iret
jmp
lock
cmp
mov
hlt
leave
xchg
rcl
lret
int
cmp
out
call
loop
test
xlat
fxch
neg
fildl
int3
incb
icebp
xlat
lret
int3
loope
repnz
xchg
les
std
jmp
test
rcr
not
fucomip
test
loope
fmul
adc
test
loop
test
repnz
lret
stc
divb
cmp
ss
int3
ss
aad
std
xchg
lock
xor
shl
faddp
ss
sar
sar
out
out
dec
loop
in
ljmp
rcr
enter
dec
rcr
div
loop
ljmp
xchg
loope
xor
int3
xor
cmp
filds
test
std
loopne
out
icebp
out
jmp
jmp
sti
in
hlt
lret
shl
incl
fdiv
cli
ljmp
mov
repnz
imul
cli
fcomi
fmulp
repnz
repnz
fcmovnu
roll
lret
cli
call
jmp
iret
stc
lret
cmp
sub
aad
xchg
ret
loop
fcomip
icebp
shr
std
cld
cmc
jmp
cmc
enter
clc
in
and
rorb
ljmp
fcomip
out
in
repz
leave
xor
in
cmp
fsubp
cld
in
xor
cmp
test
out
xor
cmc
fst
call
out
cli
ss
ret
incb
int
jmp
cmc
shl
shl
aam
shr
rcr
cmp
int3
mov
lea
int
enter
repz
ror
into
cli
sbb
out
fadds
aaa
cmc
not
jmp
into
into
cmp
in
cli
fdivrp
fcomp
sbb
ljmp
mov
int3
shlb
out
fcmovne
idivb
call
xlat
repnz
stc
leave
sti
in
fisttpl
out
out
shll
cmp
cld
out
std
sti
out
ds
icebp
mov
neg
icebp
out
int
orl
out
aas
fcmovne
cmc
roll
test
call
icebp
mov
loop
imul
sarb
ljmp
fxam
jecxz
testl
out
lock
in
shll
fsubr
cmc
fucompp
cmp
aad
fdivr
in
xlat
stc
loope
sbb
out
xchg
aaa
xor
lret
hlt
int
cld
hlt
in
fsincos
int3
cmp
repz
test
icebp
rcr
int3
xlat
mov
aam
xor
ror
ret
fscale
in
clc
in
out
out
icebp
hlt
ss
sti
repz
int3
int
repnz
test
loopne
out
aaa
xor
out
lock
stc
out
out
xlat
sub
mov
orl
add
sbbl
push
neg
jmp
int
aad
ffree
fstp
stos
push
push
rorb
das
int
jle
jge
jl
lock
shl
call
cmc
out
sub
iret
shl
sub
cmp
cli
idivb
cmp
in
rol
xlat
fmuls
loop
into
addb
call
repz
ss
ds
fiaddl
cld
int
out
faddl
xor
rol
div
rcr
icebp
int
cmp
add
ljmp
xchg
sub
loop
out
cmc
out
aad
out
fsubrp
in
iret
add
ljmp
lock
aad
fstpt
sub
sar
flds
fcomp
sar
xlat
clc
ror
leave
in
xchg
call
in
clc
icebp
lock
fnstenv
rcl
clc
cmp
into
out
in
xchg
xlat
fdiv
in
in
loope
shl
out
cmp
lock
aad
std
rolb
orb
xchg
nop
nop
lock
call
icebp
clc
adc
repz
loop
les
jecxz
xchg
mov
jmp
mov
lock
clc
repz
repz
hlt
icebp
cmp
cmp
sub
fucomp
sti
enter
int3
jmp
lret
hlt
into
sub
fcomp
int
cmp
lret
ljmp
ljmp
xlat
cmp
cli
aaa
jmp
clc
sbb
addl
mov
xchg
sar
imul
cli
aaa
shll
idiv
iret
fsubp
out
in
test
fldl
lret
out
clc
cmp
out
iret
icebp
hlt
not
sti
in
ds
fsub
iret
int
lret
mov
int
fucomi
out
cmp
aaa
repnz
fstpt
incl
xchg
icebp
in
jmp
jecxz
out
repz
dec
shlb
rcl
fucomp
test
fsub
fmul
loopne
ljmp
lret
cmp
icebp
cld
les
mov
clc
out
iret
jmp
xor
int
cmc
aad
out
sti
in
out
cld
out
aam
loope
lret
cli
jmp
out
iret
out
iret
xchg
aas
out
aad
aad
hlt
sar
ljmp
enter
loop
into
nop
filds
icebp
sti
fnstenv
leave
neg
out
fld
in
rcr
xchg
neg
in
fst
loopne
xchg
test
std
stc
int
iret
fdivrp
cmp
out
orb
mov
aaa
aaa
xlat
icebp
stc
jmp
call
lock
aam
enter
out
mov
xor
das
aaa
in
lret
in
divl
rcl
ror
faddl
cmp
stc
fsubp
xchg
lock
xor
sarl
bnd
sarb
cld
ret
out
in
out
out
leave
mov
cs
in
fdivrl
cmp
div
sti
out
repz
shr
mov
clc
cld
ret
out
test
lock
fxch
fdiv
out
iret
fstp
cmp
fsubp
cli
std
cmc
sub
fimuls
out
fmulp
out
aaa
cmp
lock
fcmovnbe
cmp
repnz
cli
xlat
fdivr
xchg
out
xchg
int3
fcomip
xor
loop
xlat
xor
sti
loope
lock
xchg
ds
lret
icebp
fsubr
into
out
div
repz
out
int
cmp
stc
push
loop
cmp
xor
vpsraw
test
cli
enter
lret
call
xor
cld
cmp
cli
into
fsubr
sti
call
in
cld
mov
lret
xlat
cmp
into
jmp
hlt
rol
rcl
cmc
leave
fxch
jmp
int
lock
icebp
leave
xlat
cli
out
fucomi
cmp
xor
sar
addl
xchg
repnz
ror
in
stc
cmc
aam
test
sti
cli
fmull
xchg
mov
fadd
stc
into
repz
in
jecxz
sti
loopne
out
in
fucomip
int
in
xchg
xchg
lret
sub
cmp
int
rcr
into
xor
clc
in
rorl
xchg
faddp
aad
enter
clc
ljmp
aam
jmp
mov
in
int
nop
fsubrp
jecxz
aam
fnop
not
not
iret
cmp
out
stc
in
loopne
hlt
repnz
aam
xor
in
call
fnstsw
in
aam
out
in
jmp
in
out
fxch
jmp
fiadds
out
fsub
repnz
fcomp
into
idiv
ret
loopne
test
sub
rcr
in
ficoms
jmp
call
cmp
lret
fsubrp
jecxz
loop
cmp
in
sti
xchg
in
rorl
cli
ss
lret
lret
or
inc
call
inc
add
scas
arpl
push
fs
add
incb
add
inc
add
inc
hlt
out
pushf
clc
sbbl
jmp
rcl
int3
fstp
arpl
test
lret
jl
add
adc
in
fmuls
xchg
fdivr
aaa
cmc
cmp
cmp
divl
cmp
rcl
stc
faddp
test
mov
loope
out
xchg
dec
jecxz
loopne
call
clc
into
shl
iret
lds
dec
iret
cld
out
int
mov
clc
out
lock
fst
fdivrp
repz
enter
fstp
in
decb
lret
ret
jecxz
ljmp
fsubr
cli
shr
rcr
and
mov
int
icebp
jmp
in
sub
leave
xor
aas
out
xorb
stc
rolb
loopne
or
out
xor
shl
fld
int3
into
shlb
cli
cmp
hlt
repnz
jmp
shr
iret
out
test
xor
in
fbstp
icebp
sar
ds
std
aad
call
stc
fcmovb
nop
shl
call
in
hlt
cmp
idivl
clc
lock
neg
cmp
mov
xchg
jecxz
mov
loopne
fptan
call
clc
in
into
clc
xor
sti
aad
sbb
aam
ljmp
sub
fdivrs
xor
int
icebp
in
test
fcmovu
jecxz
in
sar
mov
xchg
repnz
iret
imulb
cmp
aam
aad
out
test
ljmp
test
call
lret
push
lret
icebp
hlt
xor
leave
test
jmp
repz
ss
cmp
icebp
cmp
idivb
stc
cli
repnz
fcomp
or
sbb
cmc
cmc
into
in
xor
icebp
fcomp
faddl
clc
hlt
incb
mov
repnz
sarl
sarl
lret
into
sarl
cmp
add
ds
in
int3
stc
mov
out
loopne
sarb
lds
int3
jmp
cld
aam
iret
fcmovnu
loopne
test
xchg
lret
test
xor
call
aam
rcl
shl
in
fmulp
clc
cld
lret
in
xchg
enter
xlat
aad
icebp
clc
xor
not
sub
mov
std
adc
sti
xchg
stc
loope
into
out
xchg
iret
repnz
fsubr
fucomp
enter
loope
shl
enter
jmp
in
rcr
into
das
repz
aas
icebp
cmp
cmp
into
in
out
lds
jecxz
out
loopne
hlt
int3
shr
fcom
cli
out
ret
loop
clc
test
mov
in
nop
aam
loop
lret
out
out
out
out
sarl
in
fst
fadd
enter
xchg
mov
jmp
jmp
cmc
enter
repnz
rcl
test
cmp
and
jmp
xor
sub
fptan
iret
sar
aad
shl
ror
mov
fdivrs
testb
xchg
call
xabort
jmp
cmc
cmp
and
out
fsincos
in
sti
in
call
test
cli
cmp
ds
lret
test
clc
aad
fdivr
ret
int
jecxz
mov
xor
cmp
fcmovne
stc
stc
cld
cmp
aas
clc
out
test
loopne
mov
icebp
in
fisttpll
xor
not
fdivr
loope
ss
clc
sti
fdiv
aad
stc
stc
sti
ds
out
icebp
hlt
out
leave
lret
xor
lock
int
aad
loop
fucom
repz
std
fcmovne
aam
in
icebp
fsubp
roll
cmp
int
sti
rcr
xor
clc
add
testb
out
enter
repnz
icebp
shl
int
ljmp
xchg
ret
int
mov
stc
icebp
hlt
cmc
fabs
ror
aam
into
leave
fstpt
loope
sar
hlt
xlat
sbb
lea
call
enter
clc
fcmove
fnstcw
cmc
repz
shl
jecxz
mov
loop
cli
and
loop
hlt
aam
rcr
rcl
call
xlat
sar
testl
addl
int
out
sbb
cmc
xor
fstp
test
cld
fmul
into
jecxz
div
clc
out
aad
rol
ds
cmp
std
lock
jmp
out
lret
into
cli
lock
out
in
fdivr
shl
add
cld
aad
call
call
xor
sar
xor
in
call
roll
jmp
fdivr
cmp
in
xlat
sub
clc
sar
into
cmp
call
iret
rcr
xlat
in
xchg
out
fcmovbe
std
rclb
cmp
fcomi
repnz
out
movl
add
movl
jmp
movl
jmp
xlat
enter
enter
xchg
rol
loop
pop
lret
or
jl
jecxz
fdivr
rcl
leave
testl
test
in
into
stc
fnstcw
call
fcom
rol
inc
aam
fsubr
rorl
shl
call
in
sarl
stc
loop
ror
loope
test
xor
in
enter
int3
cli
xlat
sar
int3
fdivr
lret
fxam
jmp
sbb
mov
lock
not
shr
hlt
ret
cmc
out
mov
fcmovnb
lret
incl
ss
enter
call
loop
sub
mov
or
call
lock
xor
cmp
jmp
fdivr
ss
ljmp
aam
in
ljmp
rol
jecxz
in
jmp
sti
cmp
cmp
cmp
cmp
lock
cld
addb
out
lret
stc
dec
in
sbb
ror
mov
in
sub
in
call
in
in
cmp
shl
cmc
stc
shl
xlat
fiaddl
adc
xchg
out
int3
jmp
shl
repz
cmp
out
mov
jmp
movb
hlt
shl
lock
lret
shl
ds
enter
mov
fucomip
test
call
ljmp
faddp
cmpb
repnz
clc
fcmove
lret
adc
in
aad
icebp
cmc
out
fcomi
into
cld
icebp
cmp
not
fiaddl
jmp
clc
leave
fisttps
lret
clc
xor
fmul
lret
out
jmp
xlat
aas
ret
shl
aad
faddp
fcmovbe
fucomp
shr
lret
sub
xor
iret
sti
xor
fsub
in
xchg
fsub
jecxz
mov
lret
jmp
cld
enter
rcr
cmc
aas
test
loop
repz
addb
iret
lret
jmp
int
into
loopne
stc
out
aad
xchg
test
mov
cli
cmp
repnz
sti
cmc
fabs
fcmovnb
test
rcl
enter
out
fucom
iret
xchg
cs
xor
cmp
stc
test
in
loopne
cli
icebp
out
in
int
subl
cmp
xor
iret
jmp
cmp
cmp
icebp
ds
sti
idiv
clc
stc
int
loop
in
lock
out
lret
fsqrt
jmp
stc
fadds
xchg
enter
lds
jmp
cmp
stc
call
adc
incl
test
fsubr
ret
in
aaa
xor
ljmp
jmp
clc
test
not
std
jmp
loop
test
in
in
mov
in
sti
cli
aam
jmp
test
lds
leave
mov
aad
repnz
out
lret
in
in
icebp
ds
cli
cmp
in
ret
hlt
fiadds
jmp
nop
xchg
hlt
cs
out
into
in
out
in
aas
rcl
cld
sar
sti
rol
ret
clc
ljmp
repz
loope
ljmp
into
sarl
imul
std
sbb
movb
idiv
int
int3
xchg
fmul
int3
repz
ss
in
repnz
out
xor
cmp
mul
ret
ret
jmp
lock
jmp
cmc
aad
repnz
lret
icebp
aas
xor
shl
hlt
aam
not
in
jmp
leave
repnz
neg
int
enter
cmp
clc
in
repnz
sti
cmp
stc
into
icebp
out
xchg
sar
ljmp
loop
out
cld
repz
loop
out
cli
ds
std
fisttpll
dec
out
ds
sub
jmp
flds
loope
lock
cli
into
and
stc
rcl
cmp
out
aaa
cld
call
fdivrs
cmp
cmp
lret
clc
fsubp
decb
aad
stc
jecxz
vpaddusb
incl
call
test
cld
leave
aam
icebp
incl
xor
out
out
sarl
out
call
rcr
lock
aam
fdivr
ret
adcb
sub
repz
cmp
cmp
ret
enter
xchg
xchg
repnz
out
aaa
cli
shr
into
lret
jmp
out
out
testb
in
into
in
out
xor
ror
iret
leave
stc
lret
jecxz
rcr
xlat
test
mov
in
xlat
cmp
cmp
int
fsubrp
stc
shl
xchg
rolb
xchg
loope
adcl
clc
mul
lret
rolb
arpl
loop
add
jne
mov
movl
mov
movl
mov
mov
movl
jmp
aad
leave
fcmovne
fcmovbe
test
decl
adc
jge
jl
fsub
test
fcmovnu
rol
leave
clc
out
fdiv
call
jecxz
lds
icebp
int
fldl
fucom
in
leave
mov
in
mov
into
out
xchg
lret
mov
lret
mov
bnd
out
fidivrs
out
fcomi
hlt
ds
jmp
out
call
stc
test
xor
test
fnstenv
cli
std
fdivr
test
sub
out
mov
sub
hlt
xlat
iret
aaa
into
idiv
jmp
repz
std
int
testb
std
mov
lock
cs
cli
das
ror
in
shll
sar
cld
test
jmp
in
in
iret
rolb
in
hlt
cmp
lock
aas
std
int3
flds
fadds
test
out
adc
xlat
leave
enter
std
iret
fcomi
stc
cli
aam
sti
cmp
lock
test
iret
out
fdivp
repz
leave
aaa
enter
ljmp
mul
loop
mov
roll
xchg
aad
hlt
ret
xor
lock
hlt
xlat
out
out
icebp
jecxz
out
incl
iret
test
mov
mov
int
shrb
repz
div
loope
aad
repnz
stc
cmp
in
lret
cld
mov
jmp
out
fistpll
fidivrs
cld
fildl
adc
int3
xchg
mov
nop
xor
in
cmp
icebp
aaa
cmp
cld
xlat
rcr
cmc
xchg
ret
jmp
cli
jecxz
mov
hlt
icebp
sarb
xlat
out
xlat
iret
hlt
shl
out
loope
stc
repnz
std
stc
leave
ljmp
dec
xor
clc
call
fucomi
enter
loope
ds
jmp
out
in
rorb
in
fsubr
repz
int3
repz
mov
jmp
call
repz
icebp
loop
aaa
out
fmul
shl
test
in
leave
lret
fxch
lret
repz
loop
test
repz
out
sarl
fyl2xp1
cmp
sti
mov
lock
icebp
fnstenv
cmc
out
repnz
xor
into
in
in
ret
test
in
ror
out
mov
fnstenv
not
iret
lret
cmp
shl
shl
aad
sub
std
mov
in
fstpt
lock
hlt
lret
testl
stc
cmp
cld
rol
aaa
ss
in
jmp
aas
and
stc
fsub
lock
loop
clc
mov
mov
xchg
aam
aam
call
xlat
fucomi
ljmp
cli
frstpm(287
cli
fldl2e
leave
fimuls
fsubrs
into
repz
cmp
leave
call
loop
jmp
test
xchg
cli
or
mov
sti
aaa
cmp
jmp
out
stc
lret
in
std
shl
mov
leave
out
cld
mov
xchg
aam
int
ret
lds
xor
in
rolb
int
adcl
loopne
iret
lock
cmp
fnstsw
ret
jecxz
jmp
cmp
call
ljmp
aam
icebp
in
xor
sar
hlt
div
or
into
rcr
mov
fcmovnu
jmp
and
mul
into
cmp
stc
aam
call
cmp
ds
xchg
jmp
shl
call
call
sti
in
aam
mov
ret
in
sbb
roll
test
repnz
leave
std
cmp
xor
div
out
mov
fdivrp
lret
cli
in
and
in
iret
aam
jecxz
in
cld
fcomip
aam
int
cmc
in
out
shl
leave
sti
leave
imul
mov
iret
clc
in
cli
icebp
leave
cmp
rolb
jecxz
leave
fcmovnu
hlt
neg
in
mov
xor
call
xor
xlat
cmp
repz
rcl
jmp
out
stc
repz
fsubp
ret
out
enter
leave
xor
repz
sti
cli
aad
ret
cmp
test
xchg
xchg
jecxz
aaa
enter
fcmovnbe
clc
shl
in
lret
std
cmp
out
clc
in
aas
ds
mov
lock
mov
out
aam
sti
aam
aad
cmp
sbb
out
xabort
shr
in
icebp
shr
loopne
xor
cmc
flds
sar
fcmovb
mov
mov
int3
lea
out
int3
lock
std
fucomi
sbb
cld
fld
in
ret
movl
loope
ret
cmp
aad
enter
cli
cmp
ret
cld
sti
sti
cmp
jmp
addb
ljmp
loope
add
inc
add
movl
cmp
jne
or
andl
or
mov
subl
jmp
int3
ds
rcl
iret
or
adc
jl
add
rcl
fninit
cmc
rcl
faddl
shr
nop
out
fsubrl
shl
leave
xor
mul
in
std
enter
repz
fildl
mov
into
aad
out
out
int3
lock
aam
enter
xor
ret
cmp
fcomip
ror
jecxz
fisttpl
divl
int
out
cli
icebp
clc
aaa
clc
std
repnz
cmp
sarb
jecxz
mov
lea
leave
fcmove
aad
aas
aas
cld
clc
sbb
loop
ret
mov
mov
enter
xchg
ror
out
stc
out
in
xor
fcmovu
cmp
fcompp
leave
hlt
lds
in
xchg
jecxz
jmp
lock
stc
adc
loop
in
mov
lock
in
mov
aad
hlt
cli
ret
cli
loope
loope
fistpll
fimuls
mov
aas
out
clc
ror
rcl
ror
int
lock
ds
faddp
fchs
mov
fsub
into
repz
lock
xor
iret
neg
aas
cmp
idiv
sarl
icebp
lock
loopne
xchg
xchg
shl
loope
ret
into
in
int
aad
cmp
aas
icebp
fucomi
fnsetpm(287
fildl
adcl
sub
out
jmp
stc
aam
rolb
call
repz
iret
rcl
repnz
fstp
leave
iret
fdivrl
jmp
test
xor
xor
enter
jmp
les
mov
int
cmp
icebp
xor
cmp
into
repnz
out
icebp
aad
in
fcomip
call
in
stc
xchg
jmp
leave
xor
int3
shl
stc
shl
xlat
sbb
out
mov
iret
ret
rclb
cmp
leave
xor
in
iret
xor
repz
loope
mov
icebp
jmp
cld
hlt
xor
fcmovb
rcr
xor
cli
cmp
aam
idivl
mov
hlt
int3
jmp
adc
out
out
xor
cmp
hlt
sar
rcl
loop
cld
icebp
test
mov
ljmp
hlt
in
xor
lock
neg
shr
shl
sti
idiv
repz
loopne
in
mov
cs
clc
lret
lret
out
in
mul
cli
clc
stc
ret
in
std
icebp
hlt
xchg
aad
in
repz
cmp
aas
mul
fucomip
fimuls
mov
jmp
mov
in
cmp
int
into
loope
rcr
hlt
incl
lret
mov
jecxz
clc
xor
out
fsubr
into
cmp
std
shl
loop
xchg
testl
xchg
jecxz
sub
into
enter
icebp
fldl
fcmovnu
out
call
cli
int3
int3
leave
shl
shll
ds
int
int3
out
aaa
fxch
idiv
lock
fdivrl
cmp
call
lret
cld
adc
in
cli
in
xlat
int3
iret
into
int3
aad
roll
rcl
int3
into
out
jecxz
aam
leave
in
call
shl
hlt
incb
mov
out
clc
cs
hlt
repnz
fcmovnu
cmp
lret
ret
fimull
les
out
ds
in
repnz
fcmove
cld
aad
rcl
ds
leave
xchg
rcr
jmp
mov
xor
xor
out
in
repnz
lock
cmc
div
lock
ds
jmp
in
ljmp
clc
ss
fidivl
idivb
iret
cmp
cmp
cmp
xlat
enter
xchg
test
int3
rorb
aaa
in
les
lock
aam
iret
ss
cmp
jecxz
leave
fcmovb
clc
addl
sar
rcr
leave
cmp
rolb
shr
dec
clc
mov
fimull
loop
xor
ljmp
aad
in
aad
loope
jecxz
ret
fucomip
in
in
call
idiv
lock
ss
ljmp
repz
fcom
in
aam
sti
mov
shl
xor
out
lret
out
loopne
rcl
out
repz
test
hlt
stc
loope
loop
addb
lret
in
xor
loope
clc
clc
cmc
test
xchg
movl
xor
neg
in
rcr
in
aam
ret
fyl2x
cmp
xrelease
out
icebp
rorb
enter
cli
shl
cmp
loop
adc
repnz
leave
hlt
in
decb
fisttps
sti
jmp
out
aaa
sub
sbbl
push
xor
mov
incl
add
orl
push
call
movl
incl
cmpl
jb
movl
jmp
cmp
movl
jmp
ror
int
lret
xchg
or
cmp
das
fadd
sbb
jge
jl
fucomp
lret
test
rcl
jecxz
mov
iret
mov
cli
repnz
fsubrp
out
xor
into
call
int3
in
test
fdivr
ret
leave
fstp
in
nop
lock
shl
repnz
cli
lret
fldl2e
repz
cmc
fidivrs
jecxz
in
fcmovne
cld
into
test
out
iret
aam
cmp
cli
in
leave
fnsave
fadd
hlt
jmp
test
mov
out
test
in
into
mul
fyl2x
fsqrt
enter
stc
adc
stc
call
cld
fsub
int3
fucomp
xchg
into
fdivp
ljmp
cmc
ror
aas
iret
test
cld
repnz
cli
xor
repnz
cmp
mov
clc
xchg
shl
in
repz
cs
repz
imul
idivb
test
cmp
xchg
incl
das
out
lret
ss
fstp
adc
cmp
lock
repnz
cmp
out
shl
xchg
shr
mov
jmp
ljmp
ret
clc
sti
jmp
out
jecxz
xchg
xor
lock
xor
fcmove
leave
clc
in
cli
ror
shl
xchg
loope
fsubr
cld
cld
orl
enter
xor
in
xor
std
in
aas
out
adc
not
aad
fdiv
in
jecxz
lret
xlat
sar
repnz
cmp
out
and
rcr
into
faddl
jecxz
mov
ffreep
hlt
in
ss
stc
shl
int3
lret
sub
fstpt
into
aam
add
test
out
xor
lock
aam
into
leave
fsubr
lock
ljmp
rcl
test
in
in
lret
fnstcw
hlt
cld
repz
in
cmc
in
clc
clc
fiaddl
fmull
mov
ljmp
cmp
xchg
mov
loopne
nop
in
icebp
aas
in
xor
xor
icebp
fyl2xp1
cmp
cmp
out
jmp
orb
cld
rcl
xor
aaa
fsubrp
in
cmc
lret
into
vcmppd
loopne
xchg
xchg
repnz
ss
cld
fistpll
fstp
jmp
lret
mov
xchg
out
ret
clc
fldlg2
lret
in
out
xor
out
std
xchg
stc
aam
fildl
sti
test
divl
int
cmp
call
sar
repnz
add
repnz
hlt
test
fsubp
rolb
fadd
out
fdivrl
cmp
shl
test
fst
hlt
out
jecxz
int3
jmp
iret
shl
bnd
aam
enter
clc
xchg
out
int
in
xchg
out
xor
jmp
cmp
shr
fstpt
out
cmp
loope
lds
fucomip
lret
mov
out
xor
div
into
cld
cmp
fdivrs
repz
loope
idiv
cmc
fcmovnb
xchg
test
cld
lret
aad
fsubr
fucom
xor
aam
loopne
enter
shr
jecxz
enter
ret
jmp
in
fucomi
int
std
addl
in
or
shl
xor
sub
aaa
call
ljmp
icebp
cmp
jmp
fcmovb
int3
cld
fucomi
mov
loopne
lret
into
ror
out
cli
leave
xor
shl
shl
mov
mov
test
in
or
in
repz
call
int
shl
xor
sarl
cmp
ret
cld
ret
ffree
leave
shr
xchg
fcmovne
jmp
leave
ljmp
clc
loope
jmp
in
int3
mov
cmc
loope
jmp
cmp
in
cmc
loopne
cmp
test
rcl
lret
hlt
or
jmp
repz
out
fmul
sub
aaa
xlat
aas
shl
aam
repz
adcl
ret
lret
fdivr
stc
inc
repnz
rcl
clc
lret
fisttps
xchg
lock
stc
ss
out
into
lock
std
int3
in
fiaddl
call
in
cld
leave
iret
roll
lret
aaa
cmp
lock
sar
ds
fucomi
clc
jmp
test
leave
and
lret
leave
xor
fsub
jmp
rcr
loopne
faddp
clc
in
fcmovbe
int3
out
ror
shr
neg
cmp
aaa
repnz
cmp
xchg
jmp
std
mov
orb
repnz
clc
cli
shl
fldln2
iret
lret
repz
test
clc
cli
cli
loopne
in
out
lret
and
sub
das
call
leave
jne
xor
or
adc
movl
orl
mov
sbbl
mov
xorl
jmp
rcl
lret
rcl
cmp
mov
test
and
jge
jl
icebp
loopne
incl
clc
mov
cli
loop
mov
cli
mov
int
hlt
into
repnz
aad
rcl
int
cmpl
test
std
xchg
addb
cmc
cmp
shl
fnstcw
xlat
fdivp
in
cli
loop
out
ljmp
sti
ret
cmp
int3
in
lret
cmp
aad
jecxz
out
fcoml
ret
lock
stc
ljmp
shl
ds
in
jmp
pop
ljmp
repz
cmp
std
call
loope
test
clc
and
loop
loopne
test
aad
in
out
out
idivb
test
dec
movb
ror
sti
xor
cld
xor
fcmovbe
xlat
mul
repnz
ret
shl
mov
xchg
test
shr
cmp
cmp
in
ror
out
sti
cmp
loop
inc
mov
lret
xor
cmp
into
fsubrp
neg
shl
fcmovnbe
call
call
enter
fdivr
std
cld
loopne
fld
stc
shl
cmp
stc
stc
repnz
ret
fcomp
rol
cli
mov
std
test
roll
cli
fnstenv
clc
cmp
iret
shl
cmp
cmp
fsubr
orl
xor
incl
lock
rcl
div
loope
fadd
cli
in
aam
call
in
fldz
xlat
int3
ljmp
jecxz
stc
enter
fmuls
in
jmp
ds
aam
aad
cli
loope
stc
stc
lret
in
test
enter
iret
ss
ss
fcmovnu
in
shl
test
jecxz
fucomi
out
shl
out
repz
xor
ss
into
in
loope
in
ffree
enter
in
clc
call
jecxz
fadd
aaa
cmp
fcmovnu
ds
ds
repz
ljmp
jmp
loopne,pt
out
cmp
int
lock
out
aad
xlat
jmp
lret
lret
xchg
nop
mov
sub
aaa
cmc
into
cmp
sti
xor
cmp
fildl
out
mov
mov
ror
loopne,pt
rcl
cmp
sti
iret
cmp
cmp
shl
addb
test
jecxz
out
into
iret
lock
jmp
lock
shl
jecxz
enter
mov
in
fsubrp
mov
cmc
cmp
lock
ss
hlt
incb
mov
xchg
fcom
jmp
das
shr
in
cmp
cmp
cli
incl
jmp
stc
fcmovnu
std
incb
mul
repnz
enter
std
loope
sti
hlt
push
in
neg
iret
int
xchg
in
out
int
xor
sti
int
icebp
out
in
int3
shl
jecxz
jecxz
xlat
out
loop
call
leave
out
in
ljmp
das
icebp
out
clc
shll
iret
rcr
cmp
std
fcmovb
test
loopne
addl
lock
stc
lret
loope
in
cld
in
cli
jmp
sti
cli
mov
leave
call
aaa
fnstsw
int3
cmp
loopne
repnz
hlt
fldl
fisttpl
ds
stc
ror
fcomip
fdiv
cli
sarl
fdivr
fld
jmp
inc
addl
xor
fdivs
stc
int
cmp
fcmovnbe
into
leave
cmp
fcomi
test
adc
out
stc
not
ror
ds
sar
cli
loope
rol
leave
loop
loope
icebp
out
lret
xor
into
sti
test
in
icebp
into
int3
fucom
repz
icebp
and
xlat
in
xchg
std
in
loop
loop
aad
rcr
lret
jmp
filds
rcr
iret
test
rcl
xor
cmp
cmp
fcos
in
out
in
cmp
ror
clc
incb
in
in
aaa
aad
icebp
cmp
bnd
xor
test
int
mov
or
in
das
out
aam
out
aam
xor
cmp
loop
cmp
mov
in
jecxz
in
call
xor
sti
int
clc
in
hlt
shl
aad
fst
aam
mov
fildl
shl
loope
cmp
ljmp
hlt
jecxz
clc
leave
enter
jmp
icebp
nop
test
in
ret
in
fucomp
enter
stc
cmc
test
xlat
cli
clc
aas
in
mov
xor
int3
in
ss
call
add
jmp
int
iret
rcl
fsts
fs
push
mov
jl
add
fmul
in
cmp
in
rolb
lret
loopne
mov
repnz
ror
enter
in
or
xlat
test
idiv
testl
aam
sub
into
xbegin
cmp
clc
movb
xchg
ret
leave
xchg
int3
aam
hlt
ljmp
into
cmc
div
loope
lds
repnz
fidivs
imul
cmp
cld
ss
into
jecxz
incb
mov
and
cli
lret
xor
fldpi
clc
lret
xor
int3
lret
std
test
jecxz
lock
stc
cli
out
fyl2x
shl
roll
shl
shlb
loopne
in
ffree
leave
loope
and
in
in
loopne
stc
lock
sarl
not
xlat
xlat
int
jecxz
shl
fsubp
shr
filds
int
hlt
ss
ror
stc
aam
cmc
in
repz
ret
cli
ret
call
lret
aam
xor
fsub
ret
xor
cmp
ds
repnz
sub
ljmp
das
iret
lret
int
repz
out
ds
cmc
lret
enter
call
rol
xor
icebp
xlat
repnz
sarl
neg
int3
shl
hlt
mov
ljmp
ljmp
fmulp
into
cmp
in
ds
cld
lock
fisttps
xchg
repnz
jmp
loopne
xor
stc
cmp
ljmp
hlt
mov
repz
add
in
mov
leave
cmp
in
into
into
frndint
fdiv
cmp
ret
mov
loope
mov
mov
fcmovu
test
rcl
xor
lret
fcom
cmp
cmp
shl
xchg
sti
loopne
rol
in
loop
lret
mov
xchg
repnz
loope
cs
xor
jmp
shr
in
out
xchg
fsub
int
in
orl
fdiv
leave
repz
in
loop
int
sbb
test
in
clc
stc
icebp
xchg
test
into
out
ljmp
cmc
lret
lock
lock
sti
xchg
fcomp
sub
xchg
aaa
xor
in
into
int
cmp
cmp
test
ds
not
fsubr
iret
mov
loop
movl
lret
hlt
sarb
xlat
aaa
stc
std
clc
fcmovb
xchg
in
in
out
in
loopne
xor
aaa
cli
std
in
ljmp
xchg
call
or
stc
leave
in
icebp
fprem
aad
lret
iret
rcr
fst
loope
in
filds
jmp
xor
adc
rol
repz
sbb
in
mov
ljmp
shr
ds
std
cli
sub
int
out
test
cld
mov
call
icebp
cmp
in
mul
jecxz
repnz
loope
addl
rcr
mov
out
enter
fcmovnbe
icebp
shl
lock
xchg
mov
rol
lret
ds
int3
sub
mov
lret
fst
stc
fcom
cmp
lock
stc
ljmp
cli
sti
cld
loope
shll
aam
out
loopne
lret
repz
stc
clc
test
hlt
ds
in
mov
lock
int
ret
rcr
hlt
sar
rcl
shl
shl
adc
into
xchg
int
sub
int3
int
ljmp
shl
in
ds
out
stc
mov
out
xchg
loope
aaa
int
aaa
in
iret
fucomip
std
cld
icebp
shl
icebp
testb
int3
addl
out
in
stc
enter
loope
loop
ret
repnz
fst
fcmovne
mov
lret
clc
xor
hlt
addl
loope
nop
ljmp
sub
leave
fst
cld
cmp
repnz
ret
les
loop
ror
xchg
in
xchg
out
hlt
mov
aad
xor
loopne
repz
aam
fnstcw
ret
mov
clc
rcr
lret
sub
int3
leave
repz
xor
call
add
repnz
repnz
test
in
loopne
int3
cmc
xchg
mov
loope
out
ret
cmp
sar
ljmp
enter
int
nop
cli
out
mov
nop
in
xor
xor
iret
out
out
int
out
repz
idiv
xchg
xchg
lea
ror
out
int
cld
out
test
ret
cmp
out
xchg
jmp
das
fdivp
xor
fcmovnu
mov
mov
jmp
ds
aad
aad
aad
movb
lds
jle
jge
jl
std
into
out
cmc
icebp
into
and
loop
fcos
iret
out
ljmp
out
not
rcr
fdivr
cmc
jmp
into
fildl
xchg
fst
faddl
xor
icebp
jmp
rcl
sbb
loope
out
aad
jmp
icebp
out
lock
loopne
out
lock
xor
stc
std
loope
xor
xchg
and
ljmp
leave
xor
hlt
out
iret
clc
iret
aam
fcmovne
jecxz
lock
cli
test
idiv
jmp
imul
in
in
lock
aaa
out
repnz
sti
std
call
fnop
aas
in
test
fstp
xchg
xchg
out
xor
jmp
cmp
xlat
repz
aas
ret
lds
std
mov
ret
jmp
cmc
xor
aad
lock
jmp
fstpt
ffree
vpmaxub
loope
in
in
cld
rorb
loopne
cmc
idiv
cmp
fidivrs
in
fdivp
int3
test
leave
jmp
fldl2e
std
in
out
lock
das
in
in
aad
icebp
fdivrp
fcomp
cmp
not
fisttpl
int3
xor
fdiv
xor
ljmp
adc
cli
stc
leave
std
cmc
mov
in
loop
loope
repz
cmc
test
jecxz
repz
enter
into
fiaddl
fsub
mov
stc
enter
rolb
aad
call
int
jmp
lock
mul
cli
clc
jmp
leave
ffree
leave
xchg
in
out
ret
cmp
aaa
rcr
loopne
loopne
aam
xchg
mov
testb
cld
enter
das
fdiv
cmp
aad
fstp
shl
xchg
test
jmp
fsts
rcl
xor
aad
rcl
cmp
loope
cmp
shr
imul
xchg
divb
xor
roll
fcom
sar
cmp
mov
pop
out
jmp
int3
fsubr
call
in
cmp
icebp
ds
leave
sar
fsub
lret
test
fisttpll
cmp
fcmovu
aam
in
hlt
ror
in
fsub
loope
aam
testb
mov
div
repnz
std
ljmp
mov
in
mov
mov
in
rcl
out
out
shl
cmp
xlat
jmp
iret
ret
call
xchg
lock
int
out
rcr
ss
sti
rol
ret
jmp
fsub
jmp
dec
xor
fstpt
std
cmc
cmc
cmp
out
xor
loope,pt
addb
out
test
xlat
ss
cmp
sti
xlat
loopne
mov
lret
in
mov
mov
xchg
ret
shl
cmp
cmp
fpatan
repnz
xchg
mov
testl
rcl
aaa
stc
repz
shl
div
int3
repnz
shr
sub
mov
std
jmp
loop
or
in
in
clc
aad
out
idiv
rcl
lds
inc
cmc
jmp
in
out
roll
out
enter
neg
enter
repnz
loope
hlt
movb
fdiv
loope
mov
xlat
xor
xor
loopne
jecxz
int
addb
out
mov
xchg
out
shl
into
sub
cmp
xor
cmp
and
jecxz
vpavgb
test
sbb
xchg
in
out
into
sub
cmp
and
div
fadd
jmp
in
test
in
int
into
out
sarl
xor
repz
in
xchg
repnz
aad
addl
int3
cmp
call
fcomp
fsincos
fsub
stc
jmp
out
xchg
rcl
idivb
idivl
leave
cmp
aam
fxch
rcr
inc
flds
mov
fisttpll
mov
jecxz
enter
cmp
cmp
out
rcl
fcomip
xlat
aam
iret
xchg
iret
and
aad
fdecstp
xor
ss
aam
shl
test
fdivr
rolb
int3
xlat
stc
sub
repz
fprem
ss
addl
loope
addb
movl
cmp
cmp
jecxz
loopne
testl
leave
ror
out
lret
rcr
and
fincstp
mul
in
orl
shl
leave
ljmp
stc
aad
lret
ret
div
stc
repz
xlat
in
leave
xchg
into
out
aad
cmp
jmp
rcl
aad
aad
rolb
push
pop
or
ret
jl
add
ss
ljmp
icebp
jmp
aad
inc
incb
out
sarb
lret
cld
cmp
cmp
add
test
out
clc
out
std
test
loope
lret
int
fnstcw
fnstsw
fstpt
faddp
fsub
in
out
int3
jecxz
clc
sub
int3
call
repnz
clc
fcomi
fcmovnu
ds
fmul
out
mov
loope
fmuls
aam
ljmp
ret
loop
repnz
sub
stc
cld
sbb
mov
loopne
test
int3
rcr
sarb
shr
stc
cmp
std
fcmovb
ret
lret
lret
xchg
in
div
in
aad
cmp
jmp
adc
in
addl
loop
rol
aaa
jmp
ljmp
cmp
repz
xlat
xchg
call
sub
cmp
loop
divl
loope
cmp
in
xlat
repz
aam
leave
mov
cld
int
test
out
shl
loop
xor
lret
cmp
iret
iret
out
int
fst
aam
std
xlat
clc
leave
lret
stc
aas
mov
test
cmp
cli
leave
shl
iret
test
xchg
in
ret
movb
rcl
leave
aad
cmp
lret
repz
ret
aas
lock
adc
in
loopne
in
in
mov
mov
cmc
call
loope
cmp
fucom
ret
rcr
loope
call
icebp
mov
sar
int
enter
std
cmp
rol
fsubp
fdivp
mov
ljmp
repnz
lock
cmp
out
fsubrp
repz
out
test
cmc
xlat
lret
xchg
int3
call
out
cmp
xor
in
imul
cmp
xor
lock
jmp
jmp
mov
fsubr
ret
loop
lret
cmp
fcmovnbe
repz
iret
xor
repnz
cmc
add
movl
xor
test
shl
fsincos
shl
lock
aad
stc
cld
add
lret
icebp
out
out
in
out
fcomi
rcr
fmulp
sti
lock
sti
rcr
int
nop
lea
stc
icebp
bnd
and
fyl2x
clc
call
lret
fldlg2
sti
lret
cmc
icebp
out
leave
fldpi
out
xlat
out
idivb
lret
lret
cmp
clc
sti
sar
rolb
mov
cmp
in
aaa
das
sub
ret
icebp
fdivrs
aad
clc
repnz
cmc
hlt
leave
idiv
jmp
in
aam
leave
int3
cld
xor
fidivrl
lock
stc
rcl
in
in
mov
loopne
fnsetpm(287
loopne
in
stc
xor
jmp
aad
lret
ret
in
ret
jmp
mov
test
lret
xor
iret
aam
rcl
out
cmp
repz
loopne
mov
test
in
leave
incb
lock
aad
jmp
repnz
sub
loopne
hlt
fsubp
lret
loopne
std
jecxz
push
mov
repz
ret
out
cmp
std
hlt
xor
cld
loope
cld
aam
iret
and
cld
sar
into
in
xlat
in
xor
cli
cli
sbb
sbb
jecxz
jmp
mov
xchg
shr
xor
repz
enter
aad
xor
xlat
fsubr
call
fst
mov
xchg
mov
shll
in
cmc
lret
loope
loope
sar
jmp
out
int3
nop
icebp
call
cs
aaa
rol
out
lock
out
ds
loop
lds
movl
aaa
into
out
rcl
out
shl
lock
out
rolb
xchg
std
mov
xchg
iret
out
aad
cmp
cmp
lret
jmp
sar
cli
loop
aad
ljmp
rcr
call
ret
xlat
cmp
stc
stc
fnstcw
aas
test
int3
std
loope
xchg
fists
loopne
not
cmp
xor
lock
rcl
loopne
ret
les
xchg
call
lret
jmp
div
fdivp
lock
fcmovu
loope
clc
mov
mov
lret
into
fmul
aam
call
lock
aad
shl
jecxz
fstp
xchg
loopne
fstl
lock
repz
cld
cmp
loopne
aad
in
addb
enter
sub
aad
lock
lret
jmp
fistpll
ljmp
fcmovu
rcr
loopne
sti
loopne
shl
cli
adc
sub
stc
std
int
int3
aad
sarb
iret
loope
in
jmp
mov
fists
add
mov
lea
mov
mov
xor
add
mov
lea
jmp
into
aad
int3
fcmovnu
aad
add
sub
ret
xor
jl
fidivl
fcmovb
cld
in
ljmp
cmc
clc
mul
mov
f2xm1
or
hlt
jecxz
loop
std
shr
shl
cmp
cmp
cmp
loopne
aas
xlat
repnz
int
int3
in
lock
mov
test
icebp
aad
iret
icebp
call
test
cld
rcl
cli
cli
int
int3
fldl
xchg
aaa
ror
lock
xor
rcr
sar
ret
fmul
ds
cmc
xlat
add
mov
out
xor
les
jecxz
xor
in
clc
sti
fcmovu
hlt
repz
jecxz
ret
mov
enter
mov
imul
aad
shl
ss
div
cmp
sar
aad
xchg
cmc
fucomp
neg
decb
fdivp
imul
repnz
aam
cmp
int3
sarl
flds
ljmp
shl
in
xor
ljmp
lock
hlt
dec
aam
in
cmp
fldpi
int3
test
fiadds
enter
aaa
ss
jmp
out
repnz
cld
testl
sti
xchg
repz
into
sub
out
call
shl
jmp
cmp
sbb
fildl
lret
ljmp
call
fdivrs
not
jmp
stc
neg
lock
stc
leave
jmp
out
rcr
lock
shl
out
rolb
cli
mov
loop
test
loop
xchg
int3
cmc
cmp
into
call
div
xor
lock
shl
out
xlat
jmp
addl
out
sub
xor
ds
fnstcw
test
ret
int
int3
orl
shlb
fucomp
cli
cmp
add
test
loop
adc
fucom
int
lret
aad
cmp
call
sti
push
cmc
std
ds
fabs
leave
in
mov
sti
xor
ss
xlat
cmp
hlt
clc
testb
cld
aad
enter
xchg
jmp
fdiv
cmp
ljmp
add
cli
in
stc
out
aad
out
int3
mov
cld
mov
cmc
fisubrl
ss
std
out
int3
loope
testb
fucom
jecxz
sti
jmp
mov
out
in
out
into
idivl
fdivrp
incl
aad
lret
call
ror
into
out
call
fstp
incl
std
out
jmp
call
jmp
leave
xor
int
hlt
cmp
hlt
clc
repz
fidivrs
in
repnz
in
lret
xor
aam
ljmp
aas
neg
in
xchg
int3
in
rcr
loope
jmp
sub
lret
fdivr
clc
repz
fildl
in
int3
decl
aaa
fnstenv
enter
cmp
lock
push
clc
ds
leave
jecxz
in
addl
clc
int
cmp
jmp
iret
cmpb
rolb
call
out
xchg
ljmp
cmc
cmp
leave
lock
cld
loopne
ds
loop
aas
mov
fmull
ror
xlat
das
lret
cmp
aaa
lret
ss
fistpll
sar
sub
fiadds
fcmovu
out
std
out
idivl
lret
fnsave
int3
xor
loope
iret
shl
cmp
xchg
ret
test
out
out
in
out
jmp
jmp
sti
rolb
in
jmp
leave
fsubp
loop
in
xor
ret
cmp
das
hlt
fucompp
cmp
sarl
lock
cli
fdivr
repz
in
xchg
cs
lret
cmp
ror
jmp
in
cli
mov
std
fcmovbe
test
mov
xor
ss
lock
xor
mul
in
jmp
leave
xlat
call
ljmp
aad
lock
in
and
loop
rol
repz
out
loopne
lret
in
repz
enter
xlat
aam
ds
int
shl
or
hlt
in
cld
loopne
leave
mov
cmc
xor
clc
cmp
aaa
hlt
out
cmp
ret
jecxz
out
rcr
jmp
rcr
mov
xchg
aad
out
sti
out
cmp
ljmp
xor
out
sar
fcmove
lret
lret
xor
ror
aas
shr
fstp
into
lock
jecxz
lret
les
out
iret
ret
loop
rcr
fcmovu
cmp
stc
shl
ret
leave
lret
sti
test
out
fmulp
out
jmp
out
aam
jmp
xor
cmp
out
out
in
mov
loop
repnz
xor
mov
xor
jmp
ror
ror
rcr
frstor
pop
sub
pop
mov
sarb
jl
add
xor
fdivr
fdivrp
repz
fdivrp
cmp
ret
mov
les
repz
enter
sti
ds
aad
inc
repnz
aad
loop
leave
mov
out
int
xor
xor
ss
fxch
lret
incl
fdivrp
in
out
in
cld
out
cld
mov
out
jmp
xor
jmp
loop
hlt
clc
ret
fcmovb
mov
mov
sub
in
out
sarl
sti
iret
cmpl
repnz
mov
out
xchg
test
rcl
test
repz
in
lret
cmp
sar
xlat
shl
in
hlt
jmp
fsub
int3
mov
std
ljmp
loope
xor
shl
xor
aam
cmp
hlt
filds
mov
int
ljmp
xor
sti
repz
cmp
lret
cmp
ror
in
fcmovne
iret
xchg
out
out
xchg
jmp
hlt
xlat
icebp
lret
cmp
fcmovnbe
fdivp
add
loopne
jecxz
leave
lret
mul
loopne
fldl
out
cmp
in
fldpi
cli
int
lock
xor
hlt
xlat
int
loop
std
fdivrp
jmp
rcl
out
out
in
cmp
fmuls
in
stc
in
jmp
mov
sarl
cmp
cmp
fucom
out
loopne
fadds
mov
cld
shll
cmp
std
cmp
cmc
adc
lds
cmp
ds
icebp
xchg
in
shl
repz
cmp
sti
xor
cmp
and
and
icebp
mov
xchg
xchg
shr
lret
loopne
int
lret
ss
rcr
cmp
std
cmp
test
roll
ret
in
cmp
cs
fdivr
jmp
div
add
loopne
stc
mov
mov
iret
ds
xlat
cmp
into
hlt
cmp
cmp
fst
xor
out
loope
mov
rcr
icebp
leave
xor
lret
sarl
call
mul
test
stc
jecxz
int
xchg
cld
ljmp
loop
cmp
ss
enter
loop
aaa
ret
fscale
testl
repz
jmp
lds
ret
into
ror
fsub
fcmovbe
int
out
shl
cmp
call
xor
in
cmp
jmp
in
loope
out
cmp
out
in
ret
out
mov
repz
out
in
lret
std
in
cmp
and
test
addb
out
stc
das
loop
in
leave
ffreep
xor
in
shl
ret
repnz
enter
mov
xchg
ficoml
xor
in
cmp
sbb
addb
out
iret
idivl
vucomisd
xor
out
hlt
fucomip
ljmp
mov
out
mov
xchg
std
lret
jmp
neg
sarl
loope
lock
dec
loopne
loope
repnz
clc
fucomp
out
cli
shr
rcl
bnd
lret
ljmp
loop
in
hlt
xchg
jmp
std
out
icebp
fmul
into
ror
aam
aad
fidivs
icebp
repz
cli
rol
out
shr
xchg
int
xorl
jmp
call
repz
xor
addb
int
fcmovne
sub
out
enter
aad
jmp
into
cmp
test
test
cld
loop
xchg
in
fbstp
out
shl
shl
out
cmp
sti
fst
xlat
rol
fld
in
xchg
fdivp
into
iret
out
iret
shll
jmp
std
leave
in
fidivs
jmp
int3
ljmp
in
lret
fmul
lea
icebp
ret
in
out
out
div
jecxz
loop
cli
aad
rcr
aam
cli
std
cli
stc
push
jecxz
out
out
hlt
cmc
into
cmp
aas
cmp
jmp
cmc
clc
rol
xor
hlt
fsubrp
ret
std
test
jmp
lds
cmp
and
clc
icebp
in
clc
mov
leave
in
out
in
rol
icebp
leave
out
leave
int3
fcomi
fcomp
repz
fcom
imul
mov
iret
in
rol
jecxz
cmp
leave
fnstenv
loope
fcmovu
cld
sti
test
out
in
loopne
addb
xor
lret
leave
clc
fucomi
std
cli
out
out
sarb
lret
int
mov
iret
fbstp
jecxz
cmp
xor
aaa
lock
call
in
jmp
xlat
leave
jecxz
xchg
fmulp
test
lret
ds
hlt
ror
jmp
std
cmp
icebp
cmp
rcl
jmp
call
mov
call
in
ret
push
jmp
lret
ds
lret
rol
loop
pop
sub
jl
add
cmc
sti
xlat
ljmp
fldl
jmp
xchg
xchg
ret
ljmp
ljmp
cmp
loopne
lret
int3
stc
fcmovbe
loope
ss
lock
xor
cmp
int3
xlat
decb
clc
lea
xchg
ljmp
fdivl
aas
cli
cld
stc
test
out
mov
leave
jmp
aam
out
in
int3
aad
loop
filds
in
dec
int
into
ljmp
fmul
aaa
imul
repz
cmp
fcmovb
stc
xlat
cmp
icebp
in
rorb
xor
int3
jmp
enter
lock
lea
cld
into
into
fisubrs
loop
xor
in
stc
stc
aas
loopne
xlat
sti
test
enter
fisttps
out
in
xor
lock
fistpll
and
incb
cmc
or
shr
rol
xlat
into
ret
clc
xor
repnz
int3
stc
faddl
out
out
into
xlat
ret
fsincos
lock
fstp
in
idiv
xchg
fcomp
test
out
loop
mov
out
cs
aad
xor
clc
int3
cli
cli
hlt
repz
test
les
int
lret
aad
in
ljmp
cmp
repnz
idiv
and
xlat
xchg
nop
loopne
shl
out
xor
call
out
fcmovu
hlt
jecxz
aam
cli
fucomi
mov
fadd
loop
cmc
repz
int3
aam
loope
aas
sti
cmp
jecxz
loope
ffree
test
lret
in
int
rcl
xlat
cmp
lret
cmp
fiaddl
cmp
cld
out
xchg
in
add
out
enter
cmp
xor
stc
out
repz
hlt
in
fadd
loopne
sti
mov
xchg
lret
aad
xor
stc
hlt
adc
loope
aam
xchg
mov
dec
ror
fsubp
sub
stc
into
cmp
sti
sti
sbb
rcl
in
leave
call
out
xchg
lock
fstpt
shl
jmp
stc
cmp
cmp
fcmovnu
leave
cli
xchg
clc
out
decb
xlat
in
in
clc
cmc
repz
sti
xor
repz
repz
out
int
fists
loope
in
ret
clc
xor
in
shr
sar
addl
ret
out
xchg
shl
shl
int
aam
xor
in
lds
loopne
int
xchg
lret
loop
mov
ljmp
cld
cmp
into
icebp
incl
cmp
out
int
enter
int3
mov
in
in
aaa
xlat
fucomp
cmp
icebp
roll
stc
test
leave
iret
decl
jmp
repnz
in
out
repnz
hlt
ljmp
orb
enter
ljmp
hlt
in
cmp
out
ret
stc
xlat
cmp
shr
rcr
rol
jmp
enter
dec
hlt
divb
rcr
out
xlat
cmp
loope
adc
jecxz
clc
std
mov
fiaddl
lock
not
xor
into
clc
out
cld
fcmovnb
ret
sti
add
std
mov
or
leave
lock
out
aam
aaa
idiv
into
rol
fcmovne
rorb
lret
stc
lret
fcmovnu
out
xchg
enter
repz
iret
icebp
cli
loop,pt
clc
xlat
fsubrp
faddp
out
fiadds
int
iret
aam
loopne
xbegin
into
cmp
add
aam
fcos
xchg
in
jecxz
mov
xchg
call
shll
imul
xor
roll
cli
cmp
iret
in
enter
icebp
sub
repnz
jmp
ffreep
fistpll
out
movb
xchg
int3
xchg
sar
stc
repz
out
fsubr
jecxz
xchg
fcmovb
loope
ret
jmp
mov
clc
in
cmp
aas
jmp
repnz
cmp
out
aad
in
icebp
mov
fucomp
lock
xor
sti
fdivrs
sar
rol
in
cld
lds
xchg
icebp
adc
ret
xor
into
ljmp
test
fucom
int
in
in
int3
int
call
xor
in
loopne
std
loope
addb
fcmovu
lock
repnz
rcl
fucomp
xor
rcr
repnz
fsub
add
test
out
mov
icebp
xor
mov
push
jmp
rcl
mov
neg
repnz
xor
jle
jge
jl
in
lret
cmp
sti
cld
cmp
fcmove
out
clc
ret
cmc
lret
faddl
into
ret
xor
loop
icebp
cmp
cmp
out
test
movb
nop
fcmovne
repnz
enter
lret
repz
fcomip
lock
fstp
fmull
fucomip
iret
ljmp
sti
int3
loop
sarb
cmp
jmp
xor
hlt
incl
mov
int3
orb
out
out
int3
jmp
lock
loope
cmp
sti
div
les
out
mov
call
aam
sub
hlt
out
loopne
neg
test
rcr
icebp
or
in
mov
in
in
in
xchg
xchg
loopne
cmp
aam
cli
repz
fidivrl
fcmovnb
xlat
fdivr
in
mov
loopne
ret
lret
icebp
lock
fucomip
lret
test
xor
std
testl
hlt
lock
cli
lret
div
rcl
ljmp
sar
test
in
and
in
inc
ret
cmp
in
shr
fiadds
out
fadd
fsub
xchg
fmul
out
xchg
mov
repnz
xlat
sar
test
addb
iret
lret
out
loopne
test
leave
rol
divb
hlt
fdivl
shll
xor
cmp
neg
call
xchg
xor
cmp
int3
in
dec
call
test
cmp
cmc
fmuls
fdivp
int
aaa
in
sar
cld
faddl
cmp
loopne
xchg
iret
out
nop
out
rcl
cmp
in
in
stc
fucomi
into
add
iret
cmc
hlt
cmp
hlt
stc
cld
xchg
in
ret
repz
xchg
xor
sar
hlt
hlt
rol
fdiv
jmp
cli
repz
test
cli
fistl
xchg
mov
cs
leave
xor
divb
int3
shl
int3
clc
incb
mov
xlat
ret
orl
ror
les
fsub
ret
clc
lock
in
xlat
in
loopne
xchg
mov
hlt
sub
cmp
int3
int3
cmp
cli
out
testl
enter
das
ret
cli
int
hlt
int
lret
inc
ret
xchg
clc
cli
addb
mov
out
iret
out
rcl
sub
cli
fdiv
lret
clc
lret
repz
loop
mov
test
fsub
nop
lret
lret
jmp
xor
fcom
xlat
aas
fnclex
les
jmp
mov
xor
in
stc
cld
iret
idivl
iret
incl
in
in
fdivrp
iret
rorl
loopne
xlat
sti
aam
xor
jmp
shl
ret
fxch
out
fcomp
repnz
call
fdiv
jmp
out
into
stc
xchg
ret
fisttpll
fcmovnu
in
test
into
lret
lret
iret
rcr
test
shl
xor
or
xchg
out
std
into
lret
mov
shl
fcmovne
repz
into
out
fcmovnb
int3
int3
jecxz
fdivr
rorb
test
and
loop
stc
call
cs
cmp
fcomp
sti
jecxz
out
ret
clc
addl
loopne
lock
leave
clc
xor
fucomip
aad
test
les
faddl
cli
lret
xchg
test
lret
cmp
loopne
cmp
imul
vpmovmskb
fsubr
lock
aad
aad
repnz
ret
ljmp
fucomp
aam
dec
addb
in
enter
ljmp
and
sti
out
loope
cmp
mul
in
test
in
repz
rcl
lret
lret
out
cmp
ds
lds
out
xchg
out
orb
in
fldlg2
aam
cmp
cmp
aad
fildl
fldl
mov
fidivl
cmp
loope
rol
aad
out
aad
test
loopne
icebp
xor
ljmp
rolb
xchg
lock
mov
lock
out
cmc
divl
iret
out
in
aad
repnz
cmp
in
mov
cld
ljmp
in
rcr
xor
jmp
rcl
loope
clc
enter
loope
call
fcomip
cmp
ret
int3
cmc
into
lock
fmulp
out
rolb
call
fsubp
mov
ds
jecxz
repnz
das
cld
xor
xor
xor
fdiv
cld
hlt
sub
in
xchg
into
pushl
call
jmp
jmp
int
mov
cmp
xchg
loope
xchg
aas
leave
jle
jge
jl
das
xlat
sti
out
cli
sarl
lock
fdivs
loopne
rolb
int
mov
sbb
fcomi
lret
rcl
iret
icebp
in
ds
hlt
ret
test
jmp
out
sar
xchg
out
int3
rol
out
out
sti
ljmp
cmp
rcl
test
ret
fcompp
in
mov
mov
mov
xor
lock
repnz
call
xor
out
cmp
loopne
cli
test
roll
rcl
fstp
fcmovnu
sti
in
push
ds
fld
mov
in
loop
jecxz
xchg
mov
cmc
das
out
hlt
std
in
out
int
loopne
out
cmp
rcl
jmp
adc
jmp
xchg
xchg
aad
imul
lock
cmp
test
repnz
fnstsw
testb
test
ljmp
in
fdivrp
cmp
add
in
fmuls
addl
hlt
call
cmp
test
lock
repz
out
popl
nop
lock
loope
out
lock
lret
cmp
fldl
sti
test
jmp
mov
ljmp
hlt
repz
icebp
lock
rcl
int
hlt
ret
clc
mov
ror
mov
xorl
out
jmp
cli
cmp
mov
in
aad
loope
test
sti
leave
sti
cmp
jecxz
fdivrp
orl
nop
in
jmp
ror
into
cli
ss
cmp
jmp
enter
in
shr
lea
sar
bnd
cld
aad
xchg
fcomp
addl
test
iret
div
leave
loope
xor
clc
cmp
and
test
or
das
loopne
jmp
aam
xlat
lock
out
cmp
stc
mov
loope
mov
in
in
in
fidivl
faddl
hlt
xchg
xor
lock
xchg
adcl
ss
aaa
aad
rcr
rolb
out
mov
rcll
loope
into
xlat
cmp
iret
cld
fcomip
sar
rol
xor
ret
fsubr
test
ds
fsub
int
fcmovnu
lret
cld
ret
cmp
loope
sar
fsub
mov
in
in
xchg
sub
shl
int3
aaa
xor
sarl
fadds
fsubrp
call
fneni(8087
test
bnd
stc
sti
lret
jmp
in
shl
in
rcr
ds
xchg
in
int3
fucomi
fstp
int
out
shl
cs
call
int
cld
aaa
shl
orl
test
repnz
ror
hlt
shr
cld
xor
fistpll
jecxz
call
lret
mov
loopne
aaa
fucom
cld
ds
lock
roll
xabort
test
lock
lret
ljmp
fistpll
cmc
shl
in
xchg
enter
in
out
fcomip
and
into
in
mov
cli
xor
stc
ret
aam
cli
fmuls
xchg
cmc
fdivs
ljmp
cmp
cmp
adc
in
ret
jmp
xchg
sub
lret
cs
stc
neg
clc
lock
les
cmc
sti
mov
xchg
adc
loope
repz
test
aam
ror
fcomp
int3
aad
test
lds
int
fiadds
lret
out
fdivrl
stc
sarl
xor
in
sti
mov
test
repnz
div
aam
fsincos
ljmp
ds
rcl
xlat
enter
xchg
mov
lds
ret
cmc
cmp
ljmp
loopne
sarb
cmc
call
mov
repz
out
cmc
fcom
sti
sub
in
cmp
ror
icebp
iret
repz
clc
repz
test
aam
lret
lret
cmp
jmp
cmp
filds
fimull
xchg
hlt
aaa
repz
out
iret
icebp
xor
fdiv
cld
aas
ds
xchg
enter
enter
or
jmp
in
stc
fucomip
fcmove
iret
cmp
cli
cmpl
fucomip
in
orb
shrl
loop
cli
rcl
cmp
loope
repnz
roll
sti
int3
sti
out
icebp
addb
out
cmp
out
cmp
cld
not
rcl
and
enter
mov
fimuls
cmp
add
jne
mov
xor
add
mov
mov
mov
jmp
rol
leave
rcr
fstp
lds
mov
xchg
cmp
jle
jge
jl
jmp
cmc
jecxz
sti
cmp
shr
sar
fdivrp
in
in
clc
xchg
ret
lret
loope
aam
iret
fcmove
out
loope
cmp
std
xchg
ret
in
xchg
test
out
xor
out
std
fmul
cmp
int
std
sti
repz
add
clc
into
sbb
in
fst
jmp
aad
aas
cmp
repz
fsubr
loop
test
cld
iret
fucomi
call
jmp
xor
leave
xor
xlat
cmc
sbb
ret
mov
loopne
enter
loop
cs
xor
enter
jmp
xlat
out
xchg
testl
fildl
int
int
std
fldl2t
int
repz
div
inc
lret
out
mov
call
xlat
call
fdivrl
fnstsw
in
rolb
orl
mov
xchg
call
xor
xlat
int
aas
in
rcl
loop
xlat
fnsetpm(287
int
cld
test
int3
out
int
out
repnz
aad
fidivrl
ret
xchg
out
lds
out
mov
xchg
idivb
shr
cmp
in
lea
call
aad
rcr
xor
sar
clc
rcr
fcmove
aas
loop
repnz
hlt
ret
loop
dec
xchg
jmp
shl
ss
rcr
jmp
sarb
ds
leave
ljmp
call
out
ljmp
imul
ljmp
jmp
in
stc
fists
icebp
test
jmp
std
fiaddl
ljmp
test
mov
cld
aas
lds
sti
int
cmp
xlat
fdivr
clc
vpmaxub
hlt
ret
out
test
jmp
iret
iret
out
out
in
shlb
in
rcl
aam
shl
cmp
leave
ljmp
cmc
rcl
fldln2
in
jmp
shl
sarl
in
inc
call
in
loope
out
shr
leave
call
aaa
xlat
cmp
jmp
int3
sar
addb
incb
mov
call
fdivr
fmul
fdivp
xor
ret
movb
jmp
cld
nop
xor
int
xor
in
fdivr
cmp
aad
cmc
inc
sti
ds
in
fisttps
xchg
int
xchg
out
ds
repz
cmp
out
in
fucomp
cmp
fdivrl
stc
fldl
mov
jmp
cs
call
iret
std
aaa
cmp
repz
out
aas
fcomip
cmc
incl
cmp
jmp
jecxz
xor
imul
sarl
movl
leave
lock
nop
faddp
enter
enter
aam
loop
ret
fsubp
fsubr
lret
cld
fcmovu
orb
aam
lds
lret
jmp
or
out
sti
test
mov
testl
shr
aam
cmp
out
out
in
repnz
out
rcr
loop
shr
jecxz
fcmovu
jecxz
int3
shl
xchg
shr
xlat
xor
into
iret
aam
lret
shr
cmp
loopne
faddl
fmul
ljmp
ret
xor
ret
icebp
das
rcr
fcmovne
fmul
not
repnz
testb
movb
divl
fxch
lret
lret
cmp
aad
div
jmp
mov
mov
lret
xchg
in
jmp
ror
into
call
fdivrs
aam
ret
ds
stc
mov
ret
sti
loope
cli
mov
ljmp
repnz
cmc
xorb
cld
and
loop
and
cli
sti
addb
loop
cmp
enter
lret
cmc
in
idiv
fdivr
xlat
xlat
leave
testl
into
cs
ljmp
icebp
roll
cli
fdivr
hlt
mov
in
xor
repz
fnstenv
rcl
ret
rcr
std
iret
mov
lret
rcr
iret
hlt
int3
lock
int3
out
loope
loop
in
idivl
std
loope
test
mov
fcomp
repnz
clc
leave
xor
rcr
lock
test
sar
sub
in
cli
iret
stc
loopne
xchg
xchg
jmp
fnstcw
in
icebp
clc
fidivrl
std
fdivp
cmp
rolb
jmp
loopne
mov
into
xor
ss
iret
xor
aad
clc
mov
leave
int3
or
mov
mov
lret
lock
shl
ss
cmp
aad
loopne
repnz
xchg
into
fdiv
call
in
mov
mov
push
pop
sub
add
jmp
ds
rcr
fst
xlat
xchg
icebp
mov
sub
cmp
add
xor
xor
ret
rcr
out
std
cmp
icebp
cld
out
neg
ror
xlat
call
std
sar
test
xchg
leave
ljmp
xor
cmp
idiv
jecxz
xor
std
xchg
mov
addl
ljmp
jmp
add
out
ret
fdiv
cmp
and
xchg
loopne
fsubr
xor
ljmp
fst
cmc
loop
cli
loopne
cmc
loopne
fdivrp
cli
jecxz
jmp
lret
repnz
ret
ss
hlt
shl
fbstp
out
rol
incb
test
out
in
in
mov
cmc
call
aaa
cmp
fcom
fsubr
lock
test
fsub
ret
jmp
in
xchg
xchg
loope
call
cld
into
in
cmp
cmp
xchg
hlt
out
div
neg
enter
addb
cmp
fyl2x
cmp
cmp
stc
sti
ret
shr
mov
decl
aad
aad
cli
repz
cmc
ret
ljmp
faddp
out
mov
std
cld
rcl
xchg
mul
int
in
fcomi
lock
addb
fsub
cli
repz
test
xor
std
aaa
aas
cmp
flds
mov
nop
int3
xchg
jecxz
in
cmp
hlt
fnstsw
cli
jecxz
add
cld
repnz
xchg
mov
lea
ror
cmp
xor
fcom
aas
icebp
ds
in
clc
aad
testl
jecxz
enter
out
fcmovnu
sar
loope
out
repz
call
stc
mov
ret
out
out
sti
icebp
cmp
jmp
sti
lock
aad
call
mov
addb
icebp
out
aad
lret
clc
cmp
shl
jecxz
lock
in
rorb
fcmovnu
xor
icebp
cmc
cmp
jecxz
cmp
test
out
neg
ret
lret
clc
lock
incb
rcr
idivl
leave
jmp
cmp
jmp
std
in
rol
leave
ret
loope
icebp
fst
int3
int
in
shl
xor
aad
inc
sar
out
xchg
mov
les
sub
xor
into
aam
jmp
loop
xlat
jmp
in
test
in
xchg
idivl
rol
jecxz
aad
fcmovnu
aad
cmp
clc
and
stc
loope
in
in
enter
mov
lock
cld
ljmp
cmp
cld
mov
test
in
out
decb
out
aad
in
stc
int
idivl
cmpl
int3
jecxz
testb
lret
fcmovu
aad
ljmp
lret
out
clc
loopne
cmc
cmc
test
rol
not
ds
jecxz
jecxz
sar
in
ror
hlt
lret
imul
roll
xchg
aad
orl
out
rolb
in
jmp
incb
cld
test
enter
in
ret
jecxz
fnstsw
mov
xor
call
in
lock
shl
repnz
shl
loop
fdivr
loop
lea
out
out
das
cli
in
rcr
rcr
hlt
mul
stc
mov
jmp
mov
cmc
out
loop
call
out
call
cmp
div
ret
jecxz
and
into
icebp
test
loope
repz
neg
sarl
lock
lock
ret
fld
test
int
sub
in
fnstsw
aas
fscale
loop
rolb
out
jecxz
test
enter
cmp
cmp
std
fcom
sar
loop
out
mov
fdiv
iret
jmp
in
fcmovu
iret
out
imul
ds
cmp
into
out
clc
aad
std
sbb
mov
shl
loopne
xlat
aam
in
aas
rcr
loope
icebp
sti
out
loopne
leave
mov
xchg
out
int3
orl
int
fucomp
cmp
icebp
fdiv
addb
test
fcoml
lret
xor
ror
aaa
cmp
hlt
jmp
stc
fyl2xp1
roll
enter
int3
into
mov
int
cmp
into
in
lret
lret
loope
repnz
in
sti
in
ljmp
faddp
hlt
repz
std
sti
aaa
aad
sar
into
lds
rcl
jmp
fldl
out
repnz
ffree
adc
ret
cli
loopne
xchg
cli
repnz
xlat
shr
int
shr
cmp
ljmp
test
jmp
addb
mov
mov
xor
lea
cmp
jne
jmp
int
ds
int
lock
mov
jge
jl
lret
in
clc
xor
out
xlat
div
in
std
enter
enter
sub
aam
not
fistpll
cmp
cld
out
ret
jmp
addb
jmp
in
in
repz
rcl
xlat
testl
out
std
mov
ljmp
xor
aam
ss
cmp
ror
int
cmc
rcr
fld
test
into
and
subb
ss
int3
icebp
xlat
repnz
cmc
lret
not
in
out
add
call
in
jecxz
sub
xchg
ret
ret
shl
int
cmpb
cmp
shl
xlat
in
jecxz
int
jmp
xchg
xchg
icebp
aaa
int3
int
jmp
aas
adc
fcomp
xchg
enter
loop
in
lret
xor
loopne
aas
idiv
aam
in
xchg
out
xor
into
in
aad
rol
enter
loopne
ret
fisttpll
stc
iret
test
not
divb
out
fsubrp
ret
fistpll
mul
cli
testb
xchg
aad
hlt
in
in
out
cmp
in
cmpb
mov
xchg
xchg
cmc
out
into
cli
into
lret
jmp
fiadds
out
fmul
fucomip
loopne
stc
in
shl
adcl
aaa
lret
leave
hlt
lret
std
fistpll
cld
sti
leave
ljmp
int
ret
vshufps
cmp
cmp
hlt
filds
mov
lret
sti
std
mov
lock
lock
shl
xorb
jmp
fidivrl
fimuls
in
and
out
divl
cli
aas
hlt
cmp
into
fldl
rcr
xchg
stc
xor
shl
std
cmp
sub
icebp
mul
jecxz
out
repz
in
mul
incl
ljmp
std
lock
xlat
jmp
fsub
cmp
cli
jecxz
icebp
fsubr
lret
call
xor
call
shlb
leave
ret
in
jmp
fsincos
loope
out
xchg
xlat
cmp
lock
cli
out
enter
fcomi
ljmp
out
xor
int
lret
repz
out
addb
clc
jecxz
cmp
rorb
shll
int
loope
test
sti
test
test
fmuls
sub
rol
int3
into
lock
aaa
test
out
jecxz
rcl
clc
enter
icebp
out
not
ror
in
aam
stc
in
jmp
hlt
cmp
cmp
repz
aad
mov
jecxz
ffreep
lock
in
cmp
out
cmp
hlt
loopne
addl
mov
fucom
or
out
icebp
out
cmp
out
jmp
incb
ret
fldl
out
jecxz
loop
mov
into
idivb
lock
ror
repz
icebp
cmp
orl
out
in
jmp
into
fcmovne
std
neg
shl
iret
aam
sar
fcom
cli
xchg
ret
testb
mov
xor
cmp
cld
repnz
repz
jmp
mov
ljmp
lea
out
shr
into
xor
test
out
mov
mov
add
mov
mov
loopne
ljmp
lret
int3
rcr
in
mov
xlat
fadd
out
faddp
xor
ljmp
out
icebp
loope
rolb
loopne
jecxz
stc
lret
out
loope
lock
loop
cmc
xor
imul
icebp
lret
xor
add
out
loopne
test
test
in
hlt
fsub
aas
jmp
adc
lret
aad
test
les
ror
aad
ss
cli
fildl
in
addl
ret
mov
loope,pt
out
out
sub
not
fstp
mov
test
ror
xor
lock
ss
xor
shl
rcr
cld
stc
in
jmp
xchg
mov
mov
leave
repz
aam
clc
cld
not
sub
hlt
lock
enter
jmp
fcmovnbe
std
fcoml
rcl
cmp
fincstp
cmp
call
mov
lret
cmc
jmp
cld
jmp
test
rcr
aad
jmp
out
in
rorl
jmp
int
enter
int
lds
sarl
jle
jge
jl
call
ljmp
in
in
add
fyl2x
in
repnz
ror
out
repnz
bnd
in
out
enter
cmp
pushl
cli
fcmovnb
aam
xor
leave
mov
mov
fcomi
iret
shl
call
int
iret
cmp
fdivs
mov
mov
orb
hlt
aaa
out
xor
fincstp
jecxz
fsubp
int3
fdivrs
add
stc
lret
fdivr
int
mov
cs
fadd
aam
cld
cli
out
ss
icebp
shl
xchg
rol
mov
nop
test
into
fisttpll
jmp
std
cmp
loopne
test
out
fucomp
loope
into
rcl
out
fimuls
int
jmp
imul
stc
call
flds
ljmp
in
repnz
in
out
iret
xor
sarl
sti
aaa
cli
loopne
clc
ret
mov
nop
test
lret
jecxz
fsubr
out
hlt
int
repz
sti
mov
mov
enter
xor
hlt
jmp
shl
cmp
flds
ljmp
out
aam
fld
test
jecxz
rol
hlt
jecxz
jecxz
sti
fsubrp
leave
out
mov
repz
xor
repz
aad
cmp
xlat
cmp
xlat
and
cli
ljmp
ror
rcr
lret
cmp
cmp
sti
in
mov
mov
cld
out
stc
lret
repnz
les
ret
std
xor
enter
loope
fcmovnu
sti
fcmovne
loop
in
mov
mov
xchg
iret
out
jecxz
cmp
cld
fincstp
repnz
cld
fcmovnbe
test
dec
xchg
ror
cmp
out
int
jmp
cmp
loope
cmc
shl
fld1
loopne
test
out
nop
jmp
ss
ret
stc
test
cmp
fiadds
fcmovnu
fisttps
in
iret
lret
repz
fcmovne
call
in
out
shl
repnz
xchg
int
nop
icebp
hlt
lock
lds
cld
aas
clc
cmp
int3
loope
out
jmp
out
out
out
test
in
mov
les
repz
ror
icebp
icebp
and
in
imul
clc
mov
out
leave
repz
xlat
out
out
lock
cmp
repnz
int3
xor
repnz
add
int
lret
xor
fnop
iret
aad
ss
fcmovnu
cmp
shl
roll
loopne
jmp
ret
icebp
in
int
cmp
lret
lret
clc
loopne
hlt
leave
std
cli
jmp
fdiv
repz
int
out
fcmovnbe
clc
rol
iret
rcr
cld
lock
lret
test
sti
mov
shl
jmp
lret
rol
ljmp
jmp
mov
in
lock
in
xor
fnstcw
aam
clc
repz
ds
rcl
jecxz
std
hlt
fsubr
lret
fldlg2
mov
xchg
aad
enter
into
leave
std
enter
aam
cli
stc
xor
orb
mov
xchg
loope
shrl
cs
int
fadd
aas
int
xlat
aam
ds
rol
addl
jecxz
mov
out
xlat
divl
cmp
lret
fmulp
ljmp
lock
neg
ljmp
icebp
in
out
enter
cmc
ret
xor
cld
cmp
aad
sbb
jmp
fadd
jmp
into
aam
loope
shr
das
clc
fnsave
leave
cli
iret
int3
add
xchg
cmp
loop
clc
loope
sub
out
jmp
cli
stc
fstpt
cli
aam
into
into
sarl
cmc
test
jmp
fcomp
testb
nop
in
imulb
leave
into
fldln2
out
std
in
cld
clc
flds
jecxz
clc
xlat
jmp
in
hlt
int3
loopne
out
int3
loop
cs
cld
lret
cmp
idiv
lds
fcomip
fiaddl
loop
loope
iret
shl
fstpt
div
cmp
loopne
in
div
les
int3
in
fsubr
repnz
loopne
das
enter
clc
aas
xlat
int
int
cmp
jmp
lret
idiv
in
out
call
mul
jmp
rcl
aaa
jecxz
idiv
ds
movl
mov
call
shll
aad
in
idiv
sar
iret
idiv
icebp
movb
iret
sbb
faddp
xchg
xchg
out
xor
jecxz
das
repnz
int
cmp
iret
ds
aad
call
loopne
and
lret
out
repz
lock
fdiv
incb
test
pop
jmp
ds
ror
aad
fistl
loop
inc
sbb
jge
jl
decb
lret
enter
hlt
cmc
addb
idiv
loop
in
fildl
xchg
repz
lret
jmp
sti
cld
not
fstp
aaa
jecxz
repz
aad
mov
std
int
fnstenv
hlt
cmp
ds
fiadds
lock
enter
ljmp
aaa
aaa
jmp
out
cmp
leave
aas
xlat
into
lock
loope
fcmovnb
ds
int
xchg
into
xor
icebp
jmp
out
repnz
adc
cmp
ds
in
xchg
aad
das
mul
divl
xor
aam
dec
add
fabs
test
int
in
leave
loopne
in
sub
cmp
out
out
cli
cmp
cmc
aad
fcmovb
sbb
enter
iret
cld
mov
iret
in
fcmovnu
shr
repnz
shl
fucom
out
test
loope
ljmp
hlt
xor
mov
repz
cmc
fucomip
ds
xor
ljmp
repnz
in
dec
sti
jecxz
rol
aam
xlat
ljmp
ret
jecxz
or
xlat
loope
faddl
in
in
lret
into
ss
call
sti
in
jecxz
std
clc
mov
fadds
loopne
lret
in
cmp
cli
lret
cli
sarb
shl
fcompp
incb
fdiv
test
fcmovnbe
fdivrs
jmp
in
jecxz
ret
ret
lea
mov
shl
in
jecxz
int3
in
std
cmp
in
shr
cmp
int3
cli
hlt
fldl
xchg
mov
mov
shll
clc
aaa
xlat
fcmovnb
roll
in
addl
out
call
int3
out
repnz
cld
cli
in
inc
lds
in
shl
fucomip
call
sub
ss
repz
cmp
cmp
cli
ds
idiv
enter
into
clc
loope
aad
repz
sub
ret
repz
fdiv
repnz
repnz
xlat
sar
cld
or
mov
in
nop
in
out
shll
cmc
shl
leave
jmp
sar
fdivr
xlat
clc
xchg
clc
jmp
in
cli
aad
leave
xor
into
aam
lret
cmp
cmc
cli
icebp
test
in
mul
mov
fmull
les
out
in
cmc
int
fcmovb
out
aam
mul
loope
xchg
fsub
in
fdivp
out
xor
xor
shl
lret
out
out
loopne
out
shl
vpandn
repnz
ret
aad
lret
int3
aad
ljmp
vpmulhuw
testb
in
repnz
aam
xor
sti
int
cmp
ret
loop
lret
cli
adcl
in
icebp
out
jmp
cli
jmp
sti
cmp
sarl
out
xchg
cmp
jmp
mov
mov
cmc
lds
xlat
into
xor
aam
loopne
cli
icebp
clc
xor
xchg
std
out
mov
into
mov
repz
int
clc
out
out
sbb
fmuls
lret
test
ror
fxch
cmc
cmp
lret
int
sti
fadd
rol
fdivrl
fcomp
xlat
call
int3
in
sti
shl
xlat
repz
cmp
fcomi
rcl
adc
mov
out
icebp
icebp
int3
in
xor
ret
repz
in
fcmovu
repz
loope
cli
stc
mov
or
lea
xor
hlt
jmp
rcr
cmp
ret
repz
ss
out
ret
iret
jecxz
repz
out
repz
repz
in
stc
leave
into
cld
aad
lret
cmp
orl
clc
stc
loop
orl
int
jmp
call
lret
xchg
std
leave
std
repnz
in
hlt
leave
ss
repnz
ss
out
ret
stc
ds
lret
test
fisttpl
fyl2xp1
ss
jmp
in
xor
fdivr
test
filds
enter
sbb
jmp
rcr
out
cmp
shl
out
stc
mov
add
sti
ljmp
xchg
neg
out
int
cmc
lock
stc
loope
repnz
xchg
test
stc
loop
fcmovne
fisttpll
repz
shl
cmp
push
shr
aam
in
loopne
clc
enter
clc
out
jecxz
test
out
ret
leave
std
aaa
cmp
fdivp
mul
sti
aam
leave
mov
cmc
ffreep
xchg
loope
ret
pop
leave
ret
push
mov
jmp
int3
ret
ds
fst
decl
insl
shll
jl
add
mov
aad
xor
cmc
out
int
cmp
xchg
sti
cmp
lret
loop
rol
out
int
not
aad
repz
div
loopne
rorl
loopne
nop
fucomp
jmp
sti
out
cli
xlat
jmp
icebp
aad
sar
clc
and
int
filds
shr
ret
aam
fdivl
loopne
shl
repz
shl
mov
loope
mov
vpaddb
aam
enter
rolb
loope
aad
mov
mov
jecxz
ret
int3
mov
repz
sub
mul
clc
not
enter
cmp
rcr
out
fst
in
leave
fstp
loop
leave
call
cmc
clc
imul
jmp
not
cmp
cmp
aas
lock
aam
aam
mov
xchg
int
lret
repz
dec
hlt
cli
clc
ret
test
mov
stc
cld
loopne
call
mov
xor
call
ror
cmp
aas
cmp
sar
jmp
icebp
rolb
cmp
enter
fdiv
cmp
iret
ret
shl
sar
fnstsw
cli
icebp
int
std
mov
mov
out
aaa
rcl
sub
fcmovnu
cmp
in
cmp
icebp
leave
cmp
cld
in
int3
icebp
mov
loopne
shr
in
out
sar
fdivl
cmp
fxch
ds
out
xlat
clc
fmuls
loope
loope
xor
fidivrl
sarb
repnz
enter
xchg
std
lret
call
rcl
fcmovu
stc
jmp
rcl
xlat
cmpl
call
fnclex
icebp
fstp
out
ror
xor
repnz
idivl
cli
lret
xlat
ret
adc
jmp
dec
lret
xchg
ljmp
int3
repnz
loope
in
sti
cld
sti
inc
in
jmp
cld
xchg
repnz
xor
sub
out
ss
cmp
rol
rorb
cmp
xchg
fdivrp
xchg
sub
out
aad
cmp
call
lret
int
into
xchg
fsubp
loope
fst
leave
fsubr
incb
shl
xor
sti
cmp
out
int3
fcmove
stc
addl
neg
inc
stc
loope
lock
sar
mul
cmc
icebp
leave
hlt
cmp
int3
faddp
xlat
mov
stc
ret
into
loopne
lret
enter
xor
cmp
fldpi
ljmp
test
ljmp
loop
ss
std
out
aam
leave
loope
aad
xor
in
leave
std
sbb
lret
in
mov
into
hlt
ljmp
lret
idivb
fdivrl
fcmovbe
fldl
fmull
lret
out
clc
loopne
xor
cmp
fucomip
cld
in
cmc
test
sti
fcomip
ds
loope
leave
loope
fsubp
lret
out
sub
cmc
xlat
iret
sarl
cmp
in
not
fcmovnu
out
stc
xchg
xchg
icebp
jmp
icebp
cmp
fstpt
ss
in
repnz
fdivrp
lds
xchg
mov
cli
fsubr
int
hlt
lret
cmp
out
cmc
fdivr
in
int3
loopne
lret
iret
icebp
ret
iret
loopne
cmc
ss
iret
fdivr
shr
sti
into
shl
icebp
xlat
jmp
mov
in
jmp
shl
aad
stc
into
enter
cmp
into
in
repnz
repz
mov
std
ret
in
in
fucomp
out
in
shr
out
lock
call
loop
imul
loope
fcomip
lret
aam
xchg
jmp
xchg
cmc
mov
divl
sar
cmp
iret
hlt
loope
aas
sti
lret
rolb
in
int
mov
int3
cmc
mov
das
lock
int
das
fidivrl
std
aaa
pushl
adc
fsubr
imul
sti
loope
leave
xchg
xor
out
ror
cmp
out
repz
fabs
xchg
fucom
mov
mov
icebp
jmp
repnz
call
aad
in
ffree
aad
mov
loopne
jmp
flds
out
xor
shr
fmul
neg
ret
fildl
fucom
fucomi
call
aad
ror
jmp
sti
cs
cmp
stc
repnz
ret
clc
div
jecxz
hlt
clc
xchg
fcmovnbe
xchg
in
xor
jmp
repz
fst
xor
iret
icebp
in
rcr
loope
fcmove
sti
out
filds
fcmovnbe
lret
out
call
loope
neg
iret
std
aad
push
out
in
shl
mov
cmc
sar
into
out
std
hlt
jmp
std
cmp
fdiv
loop
ret
in
inc
xor
xor
and
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
mov
mov
mov
jmp
rcl
leave
leave
fst
fimull
mov
add
jl
add
int
jecxz
iret
repz
xor
xor
lret
aam
fstpt
jmp
in
cld
sar
jmp
cmp
xchg
sub
out
aad
jmp
lock
sarb
sar
loopne
add
fsub
adcb
int3
ret
call
cmp
in
hlt
fcmovu
fsubp
fsubr
loop
int
xchg
hlt
shr
ss
in
fsubr
lret
sti
repnz
out
fxch
mov
and
sbb
test
jmp
cmp
cmp
out
cmc
in
aad
in
in
fst
cli
jmp
xor
rol
stc
cmc
cmp
hlt
into
fcomi
int3
vpminub
jecxz
fcom
addb
repnz
xlat
int
jmp
fadds
cld
rol
jecxz
cld
orl
cli
int3
or
loopne
into
cmp
shll
aad
out
aad
std
sti
shl
lret
test
cmp
int3
xchg
test
repnz
xor
fldz
fcmovb
cmc
cli
fdivp
fcompp
stc
clc
call
cli
stc
or
jmp
shl
lret
out
lret
cmc
cli
repnz
std
test
test
sti
int3
mov
hlt
cmpb
int3
jmp
fxch
in
cld
aas
lock
fninit
cmpb
in
stc
test
call
out
shl
sti
fdivrs
xlat
ljmp
test
call
aam
mov
fiadds
out
cmp
icebp
int3
out
clc
iret
ds
aad
jecxz
jecxz
sar
stc
call
in
iret
stc
in
cmc
jmp
cmc
stc
fidivrl
sti
jmp
std
mov
jmp
fcmovnbe
cmp
xor
hlt
cmp
shl
repz
xchg
addl
in
repnz
icebp
int3
hlt
int
cmp
icebp
ds
fucom
add
add
out
xchg
repz
std
fnstenv
xor
bnd
ret
xlat
enter
cli
fdivp
nop
call
jmp
xor
std
cmp
loop
shr
cmp
sti
loope
test
fsub
loop
in
loope
stc
fxch
shl
sti
aaa
fdiv
out
lret
aaa
fcmovbe
repz
lret
sar
cli
out
dec
sti
cmc
roll
xor
cmp
xor
repnz
rcl
icebp
aas
xlat
rol
aam
mul
std
in
icebp
in
in
in
aad
aad
ss
ror
cmp
cli
in
ffree
flds
out
in
out
in
sub
call
jmp
sbb
loop,pt
ret
repz
loop
mov
lret
out
xchg
jecxz
lret
shl
lock
sbb
aas
icebp
cmp
aam
fmul
mov
fdivrp
mov
sub
div
fcmovne
xor
repz
aam
shl
fcmovu
jmp
fdivr
out
fsub
aaa
xlat
shrb
cmp
out
cli
cmp
cmp
aam
aam
out
xchg
lret
cmp
mov
idiv
sti
std
sti
jmp
ss
rcr
loopne
idiv
test
fildl
in
mov
jmp
shl
cmp
lret
fsubr
div
ss
sti
ds
fst
fcmovnb
ljmp
cld
call
xor
sti
cmp
clc
into
xor
lret
repz
out
repnz
cld
call
jmp
hlt
lret
jecxz
xor
icebp
jmp
cmp
test
roll
shll
aas
loope
aad
loop
xlat
leave
cmc
fdivr
hlt
out
test
out
mov
fucomip
jmp
aam
fdiv
shr
iret
addl
fsubrp
cld
lock
ffreep
out
cs
out
cmp
stc
enter
fucom
stc
cld
lock
clc
std
test
mov
repnz
leave
into
out
lock
repnz
in
out
loope
xchg
inc
cld
in
mov
sub
in
ljmp
int3
leave
shll
enter
ret
sti
ret
sti
mov
out
int3
out
fadd
rcl
sti
cli
in
into
call
xchg
in
in
mov
in
loope
out
lds
jmp
into
cmp
clc
aam
fisttpll
test
mov
into
test
loope
int3
loop
ss
cld
xor
shll
out
fst
adc
loop
or
repnz
xlat
divl
xlat
aam
repz
ljmp
test
fdivr
movl
xor
hlt
shl
div
jecxz
aas
cmp
movl
subl
jmp
lret
ffree
fst
in
notl
pop
fbld
pop
add
jecxz
out
lret
out
xchg
loope
into
into
les
sub
out
cmp
ds
cmp
aad
loope
in
out
loope
cld
neg
leave
shl
out
aaa
hlt
lret
shl
cmp
fld
stc
sti
lea
vphadddq
xchg
ljmp
in
out
ror
fdiv
cmc
into
fldl
loopne
ljmp
in
loop
aaa
into
int3
icebp
jmp
ljmp
sbb
cld
int
adc
in
hlt
repnz
repnz
fidivrs
loopne
out
cmp
shl
loop
iret
out
xchg
repz
out
std
shr
in
out
cmp
repnz
jmp
lret
int3
mov
fisttps
cmc
not
ljmp
loope
out
out
sar
ffree
in
out
into
lret
loop
loopne
sub
xlat
hlt
out
in
ss
shll
int3
test
fcmovnu
test
xchg
fsub
cld
nop
test
ljmp
in
sar
cmp
icebp
iret
rol
clc
mov
enter
in
int3
call
lock
lret
xor
fnstcw
test
cld
std
rcll
shrb
cmp
cmp
std
in
movl
xchg
nop
icebp
in
shl
cs
xor
cmp
cmp
out
leave
mov
out
iret
lock
cmp
into
das
sti
xor
sti
loope
cli
into
xlat
mov
cld
call
icebp
rorl
ljmp
iret
int3
call
ds
loopne
rolb
mov
jmp
out
xchg
leave
jmp
stc
not
fsubr
ljmp
in
aad
jecxz
fisttps
xchg
int3
out
hlt
cs
fdivp
cld
cli
cmc
test
fcmovu
ret
lret
test
jmp
xchg
decl
out
call
fcmovnu
out
repnz
loopne
test
fucomi
call
hlt
in
sar
hlt
repz
cld
sti
in
roll
ret
in
inc
xchg
mov
cmc
cmc
int3
in
sti
cmp
cmp
loope
adc
call
out
fbstp
icebp
out
fcom
int3
cmp
lret
sti
aad
sti
mul
xlat
call
icebp
out
hlt
mov
aam
jmp
out
iret
xor
xor
sbb
ret
mov
loop
loope
fsubrl
cs
jecxz
std
cmp
repz
std
aaa
rolb
sub
icebp
icebp
out
loope
out
leave
hlt
shlb
rcl
xor
jmp
bnd
into
xabort
rolb
lret
int
hlt
clc
std
clc
repz
cld
div
enter
icebp
xchg
leave
out
into
in
out
idivb
repnz
cmp
lds
mov
xchg
ret
hlt
repz
into
fmulp
jmp
ret
aad
rcr
out
loop
shl
fistl
aam
rcl
cmp
or
call
out
movb
mul
shl
not
shlb
cmp
cmp
std
aad
clc
cmp
cmp
iret
clc
addb
cs
icebp
cmp
repnz
test
shl
mul
stc
loopne
fadds
push
sub
lret
repnz
out
clc
repnz
stc
xor
out
in
hlt
hlt
roll
f2xm1
loopne
shrb
rcl
fcmove
fucomi
cmp
idivb
enter
fcmovb
nop
test
int3
loopne
icebp
lock
aaa
in
out
cmp
clc
loop
repz
shl
sti
out
int3
rcr
int
std
in
cmp
cmp
neg
cli
fnop
stc
cmp
in
rcr
icebp
jecxz
stc
in
in
cld
fcomi
hlt
loope
cmc
sar
call
out
cmp
icebp
jecxz
out
hlt
icebp
fdivr
cli
lret
jmp
xor
repnz
aam
aam
repz
in
cmp
repz
mov
leave
out
jmp
iret
shl
adc
aad
rcr
shl
lock
repnz
xlat
fucomi
fsubp
in
jecxz
fsubr
xchg
cmc
mov
lock
out
xor
xor
rol
cmc
jecxz
movl
out
ret
sub
clc
stc
mov
stc
addl
fsub
sti
orb
test
lock
fsubr
sti
xor
out
movl
mov
subl
jmp
rol
ror
aad
lahf
mov
shlb
add
jecxz
jmp
lret
repz
ror
loop
loopne
loop
clc
aaa
repz
fistpll
sar
aam
test
loop
test
fsubr
test
ficoml
xor
sub
cmp
iret
cmp
faddl
incb
clc
fmull
xchg
in
lds
iret
in
clc
cmp
icebp
cmp
sti
loopne
incl
test
mov
rcr
out
mov
cli
lret
fdiv
fsubp
jecxz
jecxz
imul
out
xchg
int
mov
in
int
cmc
in
test
out
int
cld
iret
lock
in
aad
ffree
in
int
clc
mov
cmp
mov
jmp
clc
in
std
repnz
fcomp
std
fdivrl
xchg
stc
enter
cmp
cmp
call
ror
stc
into
enter
or
shl
xchg
sti
lret
sub
fdivs
xor
int3
divl
fdiv
rcr
fnop
lds
in
out
loop
ret
rcl
shr
xor
out
std
idivl
rcr
icebp
roll
in
nop
sar
mov
hlt
call
xlat
int3
fpatan
fucomip
rolb
shr
ror
out
in
loope
out
icebp
or
out
out
shll
sti
xor
jmp
sar
xchg
enter
jmp
loope
rorb
sti
out
int
cmp
out
cmp
cld
ror
sti
ffree
call
in
loopne
aad
vpaddq
lret
out
ss
cmp
cmp
hlt
aad
in
ret
nop
in
test
dec
leave
not
jmp
out
xlat
shl
xlat
out
push
lds
nop
shl
rol
fnstenv
ret
out
shlb
std
fdivrp
xlat
aad
aam
icebp
repnz
fiadds
in
shr
enter
xor
cmp
fdivp
shr
cld
fcmovu
ret
loop
leave
jmp
clc
out
fcmove
lea
cmp
fdiv
inc
clc
cmp
cmc
ret
iret
fldl
popl
loopne
out
loope
aad
jmp
in
rcl
in
hlt
loopne
rcl
out
iret
cmp
fnstcw
lret
fisttpl
into
sub
loopne
cmp
rol
neg
fcmovbe
in
clc
aad
fcomi
jmp
in
out
call
xor
repnz
xor
call
fcom
loopne
out
les
iret
ljmp
xor
repnz
cmp
repz
aas
hlt
aam
mov
lret
nop
ljmp
lock
sarb
hlt
lret
shr
lret
std
cmp
jmp
xchg
in
mov
mov
xlat
int3
stc
cmc
clc
ret
out
aas
addl
ljmp
vpmullw
cmc
sar
out
in
icebp
lock
cmp
cmp
mov
xchg
in
out
cld
into
int
add
out
icebp
hlt
cmp
out
aaa
out
xor
in
jmp
ret
filds
sub
das
xor
xor
sar
int
addl
fdivp
jmp
into
divb
ss
fidivrl
aad
sar
loop
fucomip
aam
aad
iret
in
sti
jmp
mov
icebp
out
cmp
leave
out
iret
enter
stc
cmp
rcr
mov
in
jmp
xor
loopne
xor
cmp
ljmp
xlat
ljmp
iret
in
sub
ror
aaa
iret
int
rcr
rcr
int3
out
cmp
rolb
loope
int3
xchg
aam
rol
repz
std
ror
ljmp
ds
mov
fucomp
jmp
iret
clc
in
xchg
mul
hlt
in
cmc
call
out
int
aas
ret
iret
shl
ret
ret
mov
shr
into
call
shl
div
sar
in
aad
int
iret
icebp
sarl
fcmovnb
enter
loope
test
in
leave
in
loop
xor
sti
shl
xorb
cmc
roll
int3
orb
aaa
xor
sti
ss
ljmp
fucom
rol
out
fimuls
into
xchg
loopne
out
stc
sti
xor
leave
cmp
ror
in
adc
incb
mov
xchg
nop
repz
ror
ss
cmp
sti
lret
loope
sar
rcl
leave
repz
fiadds
xchg
test
xor
ror
cmp
hlt
repnz
in
repnz
idivb
mov
rcl
loope
xchg
int
out
rcr
loop
xor
jmp
stc
aad
cmp
push
fs
add
add
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
leave
lret
aad
int
cmpsl
mov
out
push
lods
clc
jle
pop
add
lock
mov
fadd
and
out
hlt
fdivs
ror
shl
fcmovu
icebp
shl
decb
cmc
rol
stc
test
call
cmc
fcmovnb
and
rorl
out
jmp
ds
out
sar
aaa
loopne
into
jecxz
lock
mov
lret
jmp
lock
fyl2x
loopne
out
xchg
ret
cli
clc
jmp
xchg
in
in
shr
divl
fucom
fldl2e
aad
repz
dec
imul
int
jmp
call
jecxz
ss
out
xor
shr
lock
cmc
roll
cld
xchg
lock
shl
xchg
jmp
not
in
xor
out
xor
rcl
cld
lret
xchg
cli
cmc
cld
lret
in
xlat
repz
xlat
loopne
cli
fcmovbe
cmp
test
out
clc
out
leave
adc
in
sar
sti
xor
cmc
neg
aas
sti
ret
hlt
jmp
lret
mov
mov
fdivp
loope
rol
xor
shl
ds
loop
loope
xlat
out
call
fmuls
out
loop
out
out
std
jmp
aad
ret
neg
mov
in
movl
in
mov
stc
fcmove
loopne
rcl
xchg
ret
enter
jmp
loopne
ds
xor
enter
out
lret
loopne
lock
cmpl
call
xchg
rcl
xchg
in
ljmp
cmc
cmp
lret
clc
add
cmp
lds
test
std
adc
xor
xor
std
cmp
out
xchg
in
lret
ret
mov
cld
in
fadd
int
sub
stc
into
cmp
cmp
sarl
shl
rcr
aad
in
in
out
lea
lret
sub
int3
cmp
iret
out
fdivr
cmp
test
ret
fsub
sti
int3
in
cld
out
lret
repz
xor
hlt
rcr
std
shl
mul
ret
sub
lret
jecxz
ljmp
sub
jecxz
int
lret
jmp
xchg
sub
aaa
xor
loop
fucomp
shl
cmp
rcl
not
rolb
in
mov
cld
xchg
icebp
sbb
xor
in
iret
xor
cmp
xor
cmp
fcmovu
leave
fxch
or
loop
std
xchg
cmc
repz
repnz
cmp
fstp
repnz
shr
mov
mov
test
fisttpll
test
ljmp
stc
cmc
in
neg
ljmp
xchg
out
aad
cli
fst
lret
jmp
in
xlat
in
sti
cli
in
ljmp
test
loope
repnz
out
cli
cs
lock
loope
repnz
out
sar
ret
jmp
ret
in
mov
fisttpll
aad
hlt
shlb
fbstp
imul
xor
and
test
out
fcmovnu
roll
in
shl
les
cli
ror
xlat
rcr
flds
faddl
filds
loope
aam
cmp
cmp
in
test
fimull
ret
clc
fstl
mov
aam
aam
in
xorb
cld
into
roll
fucomi
mul
jmp
out
out
loop
rcl
int
repz
in
call
rcr
cmp
xchg
xchg
fmul
xchg
popl
int
cmp
idivb
stc
shl
cmc
lret
clc
in
testb
xor
int3
sar
int
out
std
lret
fcmove
ret
rcr
fsub
call
into
ljmp
out
xor
call
faddp
xlat
ds
loopne
fsubr
in
mov
xchg
mov
in
int
out
jmp
jmp
test
movb
std
mov
cs
fcmovne
xlat
cmp
ror
sbb
cli
xchg
mov
add
out
orl
hlt
imul
lock
loope
shl
in
enter
iret
mov
jmp
xor
fcmovnbe
xor
ljmp
repz
fimull
out
fst
repnz
xlat
mov
pushl
shl
loopne
out
ret
xlat
fsubr
in
ljmp
fdivs
cmp
aas
call
jmp
aas
ror
aas
aad
iret
rol
adcb
movsl
es
mov
jle
pop
add
ds
hlt
fistpll
out
stc
call
out
shl
dec
xor
int3
fld1
shlb
cld
fcmovnu
jmp
in
loopne
xlat
decb
fldl
loopne
enter
out
sti
in
iret
and
xor
shl
cli
cli
cld
xchg
out
xor
ds
sub
repnz
fsub
fsub
jecxz
mov
out
fsubp
jmp
cmp
out
in
aad
fprem1
loope
rcl
out
addb
mov
fisttpll
into
ret
ljmp
cmp
sti
faddp
aam
fsubr
fimuls
ss
ds
xor
out
fsubr
icebp
rol
loop
mov
iret
fmulp
nop
int
cs
loop
cld
xor
rcr
fnstcw
add
aas
fucom
testl
fsubr
into
in
cld
in
cmp
iret
int
iret
rcl
loope
stc
sub
cmc
jmp
int3
neg
cmp
shl
lret
in
aad
mov
leave
ljmp
lock
ret
in
ret
lret
in
lret
cmp
cmp
jecxz
aad
into
nop
mov
call
iret
fldl
shlb
test
hlt
enter
test
aad
enter
rcr
shr
lret
xchg
clc
rcl
faddp
fimull
repz
xchg
jmp
idiv
shl
out
int
lret
fld
shr
fimull
and
into
xchg
das
in
xlat
jecxz
cmp
cmp
loopne
loop
cmp
sti
repz
incb
out
xor
fdivr
aaa
aad
in
xor
icebp
cmp
movl
mov
test
xchg
ds
loop
sti
lock
stc
addb
cmc
sbb
jecxz
jecxz
mov
rcr
fsubr
shl
jmp
cmp
ds
enter
addl
xchg
das
sub
ss
std
neg
jmp
cld
jecxz
sbb
mov
cli
xchg
in
repz
shlb
lds
leave
dec
lret
xlat
into
loopne
repnz
lds
int3
mov
out
xchg
in
repz
out
cli
cmpl
xor
mov
leave
ljmp
mov
xor
ljmp
xlat
jecxz
cmp
filds
and
rcll
rol
out
out
fdivrp
int
cmp
and
loop
call
xchg
adcl
enter
aas
lret
jecxz
test
div
inc
test
jecxz
and
out
mov
xlat
cmp
fyl2x
fadd
aad
in
adc
out
stc
in
mov
cmc
lock
shr
fsubr
cmp
idivb
dec
cli
shl
jecxz
loop
incb
shr
lock
out
aam
sar
lock
fmul
int3
xlat
incb
out
out
test
int
stc
jmp
fdivr
ds
mul
or
mov
stc
cmp
stc
stc
enter
xchg
ror
loopne
out
cmc
std
ror
fdivrp
test
rolb
mov
out
iret
call
out
out
leave
cs
cmp
sarb
cmp
test
out
ds
mov
imul
mov
aaa
in
ljmp
shl
cli
out
cld
rol
out
ror
mov
movb
out
out
jecxz
lret
jmp
hlt
adc
loope
test
addb
fimuls
cli
fstp
fstpt
hlt
cmp
out
jmp
fmul
decl
repnz
mov
vpmuludq
lret
sar
rcl
and
cmp
xlat
loop
cli
xchg
loope
mov
xor
enter
lret
call
loop
movl
xchg
loope
mov
lret
xor
call
ljmp
aad
fldl2t
in
dec
adc
out
cli
into
stc
fdivrl
ljmp
clc
aad
adc
fldl
out
lret
jecxz
xor
hlt
cmp
loope
xlat
lret
rcr
out
mov
call
clc
cli
loopne
xchg
repz
divb
sub
sti
std
ds
stc
ret
and
sub
loope
in
repz
in
cli
cmp
call
xor
add
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
sbb
mov
subl
mov
add
xor
mov
mov
sbb
add
mov
xorl
jmp
enter
fstp
fstpl
sub
mov
imul
cmpb
add
rolb
repz
in
ljmp
orb
call
repz
out
loop
test
aad
testb
in
jmp
lret
into
call
fcmovbe
test
fld
fsubr
loope
in
nop
hlt
ror
aam
xor
fcmovbe
cmp
xor
cmc
std
xor
or
nop
cmpb
enter
fsubr
ror
ljmp
shr
std
rcr
and
out
mov
stc
shl
leave
int
sti
enter
lret
iret
ret
sar
fcmovnb
enter
out
rolb
aad
ror
cmp
fdiv
shlb
sarb
clc
fnsetpm(287
stc
fldl
in
xchg
lock
lock
sub
fiaddl
fidivrs
in
xchg
sti
fadds
out
loop
shll
aaa
std
in
cli
aad
cmp
xor
fcmovb
fstp
mov
mov
aad
ret
xor
out
fprem
xor
lret
xlat
out
aad
loop
test
into
aad
decb
call
enter
xor
call
filds
push
mov
ljmp
in
xchg
test
mov
cmp
in
cld
cmp
sarb
aam
std
xchg
add
loop
stc
call
into
faddp
in
aaa
lret
out
cmp
cld
aas
shr
add
stc
icebp
fst
sti
mov
int
and
iret
iret
loopne
xor
ss
or
testl
fistl
xor
shl
out
fsubr
fstpt
fdiv
fiadds
loopne
hlt
aad
in
lret
mov
int3
xchg
into
in
repz
test
cli
lret
sti
lock
cmp
aam
test
fsubr
nop
in
repnz
out
icebp
cmc
cld
in
aad
testb
ret
testl
mov
loopne
ljmp
fst
cmp
rol
ret
mov
out
fimull
repz
orb
lock
cli
cmp
repnz
lret
out
in
jecxz
ljmp
in
sti
out
enter
sar
cmp
ret
out
std
in
std
jmp
sbb
jmp
in
jmp
cmp
loop
into
test
inc
jmp
ret
stc
mov
xchg
in
mov
out
int
xlat
loope
xor
cmp
out
orb
out
repz
loope
rcl
leave
sti
cld
fst
fcmovu
out
clc
adc
repz
fucomip
jecxz
test
jecxz
repnz
in
repz
xor
xor
fcmovnb
cmc
aad
sub
fld
enter
out
into
decb
mul
cli
ljmp
sbb
ret
aas
ror
in
addb
in
not
aad
loop
cmp
out
clc
fmulp
not
cmp
xchg
in
lea
ror
ret
fstpt
ljmp
out
shl
out
repnz
sub
icebp
out
out
out
lret
repnz
xlat
fcmovu
cmp
fdiv
repnz
hlt
in
stc
fdivr
lret
ljmp
clc
stc
sarb
ss
fsubrp
in
test
loop
fcomp
mov
mov
sbb
fucomp
icebp
aam
leave
repnz
in
cmp
xor
or
out
mov
or
lret
lret
xchg
or
ret
shll
cmp
aaa
loope
ljmp
sbb
in
in
dec
in
faddp
fcomip
in
xor
fstpt
fcmovbe
stc
add
enter
test
addb
out
into
call
hlt
shr
cmpl
idiv
jecxz
inc
lret
ljmp
icebp
in
fmulp
stc
loopne
sub
aam
fmul
shr
int
xchg
lock
cli
lret
loope
out
jmp
imull
int
fsubr
ljmp
loop
test
leave
in
loop
jmp
xchg
mov
repz
div
fcom
repz
aas
std
ret
test
loop
loopne
xchg
mov
and
nop
loop
nop
test
xor
ret
in
xor
fxch
in
sbb
xor
repnz
fdivr
call
in
shl
fcomi
repz
div
repnz
fstp
addl
out
out
out
loop
mov
enter
ljmp
incb
test
fisttpl
and
aad
ljmp
cld
movl
test
test
test
add
add
rcl
lret
aad
fstp
sub
cld
aam
dec
pusha
ret
jl
add
out
stc
aas
int
loope
cld
ss
clc
fdivrp
jmp
lret
lret
int3
in
into
aaa
loop
aad
cld
jmp
into
stc
clc
rol
icebp
mov
xchg
in
xchg
sub
fucompp
ror
loope
fadds
div
in
int
fucomp
loopne
jmp
xchg
lock
stc
fxch
divb
cmp
rcr
loopne,pt
ret
clc
rol
xor
lea
out
shl
cmc
fdivs
sar
int
repnz
or
cmp
mov
jmp
cmp
loop
mov
out
cmc
cmp
fmul
shr
std
addl
neg
out
out
test
xchg
jmp
div
into
xor
sarb
jmp
cmp
enter
in
icebp
repnz
aad
rcl
fdivs
not
fcomp
sar
into
xlat
addb
jecxz
in
repz
lds
xor
cmp
or
lock
fndisi(8087
shl
xchg
shl
xor
lret
cmp
cmp
aam
repz
jecxz
int
in
repnz
icebp
stc
out
fsub
fcomp
cmc
loopne
fildl
loopne
stc
mov
out
in
jmp
sar
enter
cmc
int
aam
out
test
sti
xlat
xor
testb
out
in
ret
jmp
hlt
jmp
in
int
loop
sar
faddl
out
fadd
cld
cmc
loop
xor
in
ljmp
out
repz
sar
stc
test
out
out
mov
in
in
xlat
stc
out
ror
aad
icebp
ljmp
repz
loopne
cld
mov
rcll
in
aam
ffree
clc
icebp
std
lock
sti
xchg
loopne
clc
ret
int3
test
int3
loopne
fucomip
jmp
cmc
stc
leave
iret
ss
fildl
fimuls
out
clc
repz
cs
sti
not
cld
pushl
fcmovbe
std
cmp
fld
shl
orl
loop
in
nop
test
shlb
lret
int
aad
xor
loope
sarl
aaa
cmp
or
aad
in
leave
sti
lret
out
iret
xchg
out
ljmp
out
rolb
jecxz
sti
in
aad
sti
ljmp
test
std
repnz
rcr
shl
idivb
fld
loope
mov
in
fsub
mov
out
rcr
ljmp
in
ror
sbb
out
std
addb
out
xchg
cs
hlt
div
enter
stc
incl
in
div
sub
mov
xor
ror
repnz
lock
cmp
jmp
fadds
sar
sub
sub
cmp
sti
in
fnstsw
cmp
cmp
lds
loope
clc
iret
mov
mov
incb
cmp
iret
clc
fcmovnbe
hlt
call
cld
out
test
leave
jmp
out
adc
shl
lret
lock
xor
xor
rolb
leave
ljmp
fmull
lock
in
out
int
fdivrp
hlt
lret
test
inc
sub
cli
addb
xor
int
repz
std
shl
icebp
aad
test
mov
clc
int
xchg
std
xchg
leave
aam
aam
int
ss
ror
cmp
or
ds
jmp
dec
in
mov
mov
mov
xor
int3
out
out
in
leave
ds
fld
fdiv
cli
loope
decl
shl
mov
ret
stc
cld
shl
std
lock
icebp
fiaddl
fsub
lret
xlat
leave
lret
ljmp
stc
cs
enter
int3
fdiv
shl
addb
sti
cld
fmulp
loope
jmp
lret
in
lock
fpatan
std
rcr
aad
test
jmp
in
loope
orl
out
iret
in
ss
int3
out
xor
cld
cmc
fmulp
cli
lret
int
lret
lret
test
shl
leave
jmp
cli
icebp
lret
cmp
std
stc
repnz
mov
loope
loopne
in
sti
rorb
lret
std
lret
lret
in
ret
jmp
in
out
in
int3
ret
out
rolb
in
xor
lret
neg
cmp
ror
cmp
icebp
lock
loope
loop
cld
out
sti
xchg
dec
repnz
cmc
hlt
xor
idivb
fcompp
xor
out
stc
test
int
ficoml
movl
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
mov
xor
xor
sub
xor
movl
movl
xor
jmp
into
aad
lret
rcr
mov
jle
pop
and
jl
ljmp
addb
lock
sti
fiaddl
call
fst
in
stc
cmp
ret
sarb
testb
lret
shl
out
jmp
dec
fmul
out
fcmovbe
fadds
out
sar
cld
xchg
in
jmp
rcl
test
cld
cmp
aad
ljmp
int3
xlat
xor
cmp
xor
cmp
sbb
ss
fcmovnu
xor
fimuls
in
in
lret
ret
shl
icebp
cmp
fmulp
neg
shl
xchg
sar
clc
clc
mov
mov
orl
in
stc
cli
fistpll
shl
ffree
cld
sbb
ljmp
jecxz
xchg
shl
in
xor
lock
loop
fdivrp
out
rorb
out
loopne
hlt
jmp
clc
out
icebp
leave
repz
cmp
aam
shl
call
stc
jmp
out
jecxz
fmul
in
ljmp
rcr
cmp
jmp
sub
jmp
fcmovnb
les
rcl
cmc
sti
in
test
loope
leave
test
jmp
jmp
fsubrp
rol
fnop
std
sarb
lock
cmp
cmc
jecxz
repz
push
ljmp
sub
xor
sarl
shll
out
fsqrt
repz
cmp
icebp
test
adc
test
out
xchg
out
xor
aad
cmp
xlat
fdivr
ror
cmp
test
jmp
xlat
roll
hlt
xor
into
iret
out
fprem
aad
sarl
ret
cmp
fprem
ljmp
cld
call
out
not
aaa
jmp
out
xor
aam
inc
fldl2e
lret
fiadds
cmp
stc
cmp
cmp
sub
faddl
hlt
mov
into
clc
shr
repz
call
lret
idiv
sar
ror
fdivrp
rolb
out
mov
call
leave
fdivr
repz
stc
cmp
fstpt
cmp
aam
incl
in
call
int
in
loopne
out
repz
aas
icebp
lret
mul
std
fdivrp
rcr
mov
xchg
xchg
mov
repz
jmp
aad
stc
fadd
aas
out
fdivrp
ljmp
clc
mov
call
enter
hlt
out
clc
int3
cld
xor
out
ffreep
testb
loop
nop
repnz
aad
jecxz
out
sarl
out
cli
stc
in
lock
lock
jmp
mov
cli
loope
out
dec
int3
xchg
das
rol
stc
cmp
aad
lret
loopne
repnz
adc
fucomi
movb
in
divb
rol
lret
in
into
fndisi(8087
ffreep
cmp
fucom
rolb
clc
test
lock
cmp
cld
lret
idivl
in
lock
xchg
jecxz
test
cld
jmp
xchg
call
jmp
cmp
cmp
repnz
shl
cli
repnz
loope
out
int3
cli
jecxz
mov
xlat
xor
imul
int3
sarl
out
fnstsw
xlat
hlt
jmp
aam
out
in
lock
rcl
repnz
sti
aam
xor
cmp
int3
ret
cmp
add
ret
jmp
mov
int
repz
int
div
repnz
shr
xor
out
stc
out
cli
into
les
mov
sti
addb
out
ror
shll
sti
sti
repz
cld
out
out
filds
enter
icebp
lret
xor
std
cmp
cld
cmp
test
cli
fnstsw
cmp
loopne
rol
lret
out
xor
xor
test
jmp
cmp
stc
adc
xchg
cld
hlt
cli
loop
fcomp
mov
in
iret
ffree
mul
cmc
into
repz
fdecstp
int3
out
jmp
test
ljmp
repz
shlb
ss
in
aas
cmp
repnz
in
fdivrp
xchg
aam
fsincos
out
sti
clc
call
xor
fcomp
rcl
rcr
xor
repz
cli
cli
sbb
rcr
loopne
clc
xchg
loopne
in
lret
xor
mov
ljmp
loop
loop
cmc
ret
cli
rolb
in
xor
sar
loope
ss
aas
loope
xchg
cmc
xchg
mov
in
xlat
out
cmc
fdiv
xor
rcr
fdivr
iret
aam
ds
stc
cmp
fcmovb
loopne
jecxz
fdivr
repz
mov
add
jmp
aad
fstl
xlat
int3
and
pop
add
loop
out
fst
repnz
sarl
loop
jmp
lret
icebp
fdivr
fisttpll
out
fucomi
rol
fcomip
cmp
iret
fiaddl
xchg
ret
in
sbb
xchg
loopne
aaa
jmp
clc
lret
aam
faddl
ffreep
int
out
clc
test
jmp
nop
das
cmc
xlat
xor
in
in
rcl
addl
in
int
out
hlt
int
stc
cli
cmp
jmp
rol
aas
ds
int
loope
rcll
ror
fxtract
push
neg
repz
xor
xchg
orb
ret
cld
fcmove
aas
out
loopne
out
into
stc
ret
clc
in
xchg
repnz
jmp
xor
out
ds
aad
fildl
cmp
mov
std
xchg
or
ret
cmc
loop
jmp
fdivrp
fcmovnu
rcr
jmp
enter
iret
rorl
out
ljmp
iret
cmp
loope
loop
loop
loop
in
iret
mov
into
aam
fpatan
cli
std
in
div
lret
hlt
sbb
cmp
cld
sti
icebp
shl
or
repz
rcr
idiv
fstp
and
cmp
test
mov
int3
enter
out
jmp
lret
ret
fistpll
fst
xlat
cmp
fcomip
jmp
call
jecxz
bnd
in
aad
clc
mov
neg
cmp
sbb
icebp
ds
test
orl
repnz
lock
std
idivb
into
loope
test
and
lret
mov
shl
adc
aad
ljmp
cld
sar
repz
aam
mov
out
les
out
fcomp
shl
divl
cld
std
sti
cmp
int
mov
call
out
shl
call
cmc
ret
loop
test
call
fiadds
jecxz
fprem
xor
in
loopne
rol
repnz
cld
std
std
in
testb
in
mov
out
mul
out
cmc
cmp
out
loope
aas
aad
fiadds
aad
call
test
xchg
jmp
shl
enter
fidivrs
rol
std
frndint
ret
hlt
lret
out
xchg
int3
fmull
xor
ror
fnstenv
cmp
cld
in
out
addb
imul
xchg
loop
out
into
loope
xlat
fcom
enter
clc
icebp
loop
idiv
cmp
or
jmp
fmuls
xor
call
cld
in
roll
mul
ljmp
out
rcl
call
lock
lock
aam
rol
jecxz
xlat
xchg
iret
in
mov
aam
sar
in
icebp
repnz
fcmovne
test
shl
xchg
in
test
fst
xchg
mov
idiv
in
fadd
sti
out
sti
clc
cmp
fcomi
repnz
cmp
ljmp
out
xor
not
std
fxch
cmp
cli
incl
int3
in
stc
aaa
out
fcom
shl
fistpll
int3
into
sub
div
shl
call
sub
clc
xchg
test
xchg
xchg
mov
lret
enter
fucomp
ror
aas
rcl
ds
roll
in
out
rcll
ror
enter
out
aas
fdivs
cmp
repnz
clc
cli
jmp
cli
loope
leave
test
fstp
orb
cli
rcl
cmp
in
jmp
mov
mov
loop
mov
xor
rol
call
out
repnz
out
jmp
mov
push
mov
out
das
aaa
stc
in
leave
cld
neg
in
loop
fdiv
lret
loope
test
xchg
fldl
sti
aam
out
cld
cmp
test
fcomi
repz
mov
movb
out
cmp
cli
jmp
adc
fmuls
ljmp
in
fld1
cmp
out
cmp
fsub
hlt
repz
sti
lea
lret
sti
enter
icebp
xor
jmp
out
leave
in
fnstcw
enter
loope
stc
cli
test
ljmp
test
mov
sub
aad
iret
sar
xor
cmpl
cmp
hlt
addl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xorl
jmp
iret
ror
aas
aad
iret
shlb
lods
jmp
mov
jle
pop
add
xchg
lret
aad
fcmove
out
fstp
cmp
test
jmp
lret
popl
enter
repnz
in
cmp
stc
out
xchg
xlat
repnz
enter
loop
out
loop
call
aad
rcl
cmc
cmp
call
fcmovnb
xchg
ret
fcmovnu
lret
xchg
fisttps
int
xabort
jmp
fdivr
std
lret
cmp
test
fcmovu
idiv
or
mov
mov
hlt
loop
into
idivl
xor
stc
clc
out
fistpll
add
imul
call
out
lock
int3
out
out
xlat
ror
xor
into
enter
jecxz
inc
fcmovu
clc
xlat
out
orl
aam
in
shll
leave
icebp
shr
stc
stc
iret
mov
test
int
out
fisttpll
sar
repz
fadd
out
div
sti
repnz
fcomp
fiaddl
fiaddl
in
loope
xor
shlb
out
repz
repnz
ds
cld
test
fdivr
ret
icebp
fucomi
loope
out
rol
xor
jmp
ljmp
repnz
cld
cli
jmp
or
xor
jmp
cmc
fcmove
fcmovu
dec
ret
cmc
ret
repnz
lds
call
lock
nop
repnz
ret
ror
xlat
cmc
into
mul
int3
shl
testl
in
xchg
xchg
xor
rcr
jmp
mul
aad
jmp
in
out
mov
hlt
enter
xor
loopne
jmp
rcr
stc
xlat
lret
addl
leave
repz
div
sarb
ret
aam
fiaddl
loope
std
mov
fadd
rol
std
in
test
fstpt
ffree
jmp
or
in
shr
mov
ljmp
icebp
out
jmp
into
ret
std
cli
ljmp
std
cmc
test
xor
lret
int3
xor
flds
neg
adc
shr
fisttpll
iret
rol
cmc
ss
lock
ret
incl
xchg
orb
sar
cmp
pushl
in
cmp
cli
stc
xchg
rol
out
and
in
lock
jecxz
in
clc
clc
rolb
rolb
aad
int
icebp
out
xchg
xchg
jmp
xor
cs
lret
rcr
test
fcmovnu
sarb
cmc
ljmp
loope
mov
xor
repnz
into
ljmp
shl
cmc
stc
repz
repnz
mov
call
out
xor
int3
ss
shlb
cmp
jmp
cmc
aam
out
loop
test
ret
loopne
test
cld
out
out
cs
test
icebp
inc
fsub
test
mov
fstp
xchg
in
out
call
call
lock
cmp
shl
lret
out
in
xchg
cld
lock
out
xor
std
ss
fscale
int
xchg
ret
out
cli
sbb
xchg
int3
repz
out
fxtract
int3
lock
test
loop
xchg
xor
cmp
mov
int
out
ret
out
cmc
into
std
addb
ret
repz
xchg
shl
std
mov
int3
out
loop
int3
xor
ss
lock
incl
aam
test
mov
add
xor
aam
in
cmp
clc
leave
clc
in
xlat
cmp
aam
fcmovnu
out
fimuls
ss
leave
ljmp
cmp
imul
adc
stc
call
clc
repnz
ffreep
das
out
cmc
in
lret
ror
sbb
test
fcmovb
cmc
mov
std
in
mov
into
mov
jmp
lret
xlat
out
stc
in
out
ror
repnz
sti
out
xlat
ret
fcomp
in
orl
into
ds
in
cmp
call
lock
fnstcw
cmp
add
leave
out
in
mov
fsubrp
shlb
aas
dec
dec
xor
cli
xchg
icebp
mov
fucomi
loopne
mov
xchg
out
iret
ljmp
ss
sbb
sbb
repz
cli
test
fmuls
mov
ffreep
xlat
int
fucomi
lret
leave
sarl
fcmove
cmp
lock
test
cmp
loope
fdiv
into
in
lret
aad
idivl
aam
int
ljmp
out
ds
out
mov
xorl
add
movl
cmp
je
push
movl
jmp
and
jmp
enter
fcmovnbe
int
pushw
jle
leave
and
stc
mov
jle
pop
add
mov
xchg
fucomp
fcompp
enter
cmp
in
inc
iret
loope
cld
aam
rol
shl
in
in
loope
xchg
rorl
ror
out
into
lock
loope
idivb
div
stc
cmp
mov
jmp
loopne
lret
repz
iret
xor
ljmp
cmc
xlat
jecxz
hlt
shl
in
stc
aam
fmull
jecxz
cld
sub
hlt
fsubr
std
cli
out
fucomp
shl
shr
fmull
mov
mov
sub
aam
in
aad
call
fcmovnbe
mul
stc
leave
mov
out
out
out
xchg
xchg
sub
int
sti
leave
in
icebp
icebp
ljmp
jecxz
mov
fcomp
into
out
out
shrb
les
hlt
lret
fyl2xp1
cmp
icebp
in
in
in
fiaddl
xchg
xchg
aas
out
mul
fdiv
cli
faddp
sbb
cmp
lret
xchg
hlt
cld
ret
aad
fcom
cmp
lret
ret
dec
lret
leave
mov
jmp
inc
lret
aam
xlat
aam
fistpll
cmp
xor
out
loopne
hlt
leave
in
loop
in
call
leave
enter
pushl
repnz
div
rorl
out
lret
jmp
cmc
ret
jmp
in
cmp
iret
loope
lret
in
ds
add
aad
into
in
call
out
ljmp
ds
cmp
out
mov
xlat
test
int3
iret
ljmp
clc
shl
cmp
sub
loop
lret
neg
mov
ljmp
repz
cli
not
sbb
std
shr
lds
fiaddl
aaa
lock
iret
int3
aad
icebp
aam
int
les
ret
leave
test
test
xchg
jecxz
repz
lock
in
fdivp
cli
incl
jmp
jmp
sti
out
cld
loopne
fiaddl
lret
cmp
shr
lret
cmp
fdivp
out
rolb
cld
jecxz
sti
in
mov
aam
cmp
cmc
repz
lret
lret
cld
fcom
ss
incl
sub
leave
loop
test
enter
jmp
sarl
repnz
loopne
icebp
testb
loop
xchg
jecxz
xchg
aad
fxch
jmp
repz
aas
fiadds
lea
out
test
clc
jecxz
adc
sub
leave
lret
dec
stc
fdivr
repnz
iret
stc
idiv
repnz
fdivrp
fucomp
fucomp
jecxz
call
stc
lret
call
std
idiv
rcl
fdivr
out
jecxz
int3
test
icebp
xchg
shr
hlt
xor
out
out
enter
repnz
out
fcmovu
fsubr
and
enter
cli
int3
xchg
into
into
jecxz
xor
aaa
aas
aam
loop
test
rcl
repnz
movb
lret
mov
int3
out
int3
repnz
leave
fcomp
adc
loope
call
fcom
loope
mov
int3
ror
enter
out
fidivrl
loopne
fdivrp
loop
loopne
shl
mov
fildl
ds
ljmp
cmp
iret
fstp
fnstsw
out
out
mul
cld
mov
in
in
xlat
jmp
out
icebp
ror
cmp
testb
sti
test
in
mov
sub
ret
out
cs
ljmp
aas
push
hlt
loop
fdivr
clc
mov
loope
or
les
repz
cmp
repz
cmp
cmp
fmulp
xchg
xchg
xchg
out
sub
aaa
cmp
neg
sar
cli
ljmp
cld
out
out
rorb
repnz
in
rcr
jmp
aam
int3
cmp
jmp
hlt
std
cld
cli
in
test
out
test
jmp
ror
ror
xor
lret
into
in
hlt
mov
fmull
iret
in
int
hlt
imull
cmc
enter
fdivrp
loope
cmp
cmp
xlat
xlat
fiaddl
cld
loopne
ljmp
repnz
leave
leave
fnsetpm(287
stc
out
filds
xchg
iret
jmp
jmp
int
fdiv
int3
ret
in
fucom
in
hlt
cli
cld
stc
addb
sarb
stc
xlat
jmp
cmc
fidivrs
repnz
sti
and
xlat
rol
test
jmp
jmp
lea
jmp
xor
jmp
repnz
jecxz
mov
mov
and
mov
xorl
jmp
leave
aam
xlat
in
fsubrl
mov
add
mov
cld
in
lock
ror
frstpm(287
xor
out
cmc
cmc
int
shl
ret
shl
cmp
xchg
xchg
ljmp
call
fpatan
lret
rcr
hlt
vcmpsd
mov
out
enter
lret
ret
stc
repnz
lock
jecxz
icebp
flds
repz
stc
std
xlat
mov
out
popl
shr
cmp
fdivrs
fsubrp
cmp
repnz
aam
in
mov
cli
hlt
sub
jmp
hlt
jmp
int
roll
filds
mov
shr
hlt
aam
xor
aam
int
shl
imul
repnz
in
sub
mov
out
loope
rol
cmp
ss
call
cli
cld
shl
rcr
out
out
lret
fisttpll
fdiv
fsub
xor
repz
fdivs
jecxz
cmpl
cmc
lock
vmovq
repnz
in
in
cmc
ss
iret
loope
ss
xlat
fldl
leave
aad
jmp
out
loopne
repz
shrb
lock
in
out
ror
cmp
loope
test
fdiv
ret
sub
jecxz
xor
in
div
int
shl
in
fcom
stc
std
movl
fstl
loope
xor
hlt
fnstcw
cmp
std
add
add
std
enter
std
in
fucomip
xchg
cmc
lock
in
stc
cmp
cmp
in
jecxz
aam
jecxz
hlt
fadds
fmul
xchg
div
sar
aaa
rol
out
int3
aas
idivl
sar
test
in
dec
fldl
add
stc
lret
aaa
cli
aas
fsub
sti
and
xchg
rcl
fcmovu
clc
mov
out
xor
repnz
repz
call
loope
fndisi(8087
test
sti
in
fiaddl
shll
lret
cmp
repnz
test
mov
mov
xchg
repnz
lock
hlt
in
into
call
ljmp
decl
iret
ljmp
int
ror
repz
shl
in
and
neg
addb
icebp
rcl
in
das
sar
jmp
cmp
icebp
aam
cld
fucomp
test
mov
int
mul
loopne
xor
repnz
xlat
xlat
ds
xor
inc
loop
jmp
xchg
loopne
lock
icebp
fcmovbe
cmc
call
icebp
rolb
aad
in
fucomi
ficoml
ljmp
loope
lret
cmp
test
adc
roll
jecxz
jecxz
xchg
xor
jmp
shl
out
xor
clc
out
cmp
ret
in
jmp
jmp
in
lret
in
jmp
cli
cli
fsub
fidivrs
adc
adc
xlat
ljmp
test
out
loop
rol
lret
repnz
call
loope
xchg
ds
mov
mov
fmul
rol
out
lock
out
cmp
lock
roll
aam
lret
mov
jmp
ljmp
idivb
cmc
cmp
out
cli
cmp
rol
shl
rolb
mov
cld
lret
iret
aad
cmp
sar
hlt
fcom
loope
imul
fisttpl
xchg
in
idivb
hlt
lock
repz
stc
loope
in
aas
sbb
loopne
out
cld
mov
stc
add
stc
clc
enter
lock
cmp
in
test
fcomp
fcomip
jmp
test
xlat
loopne
in
xchg
in
mov
in
lret
out
shl
ss
jecxz
int3
jecxz
ds
adc
icebp
out
sar
cs
xor
cli
idiv
repz
repnz
addl
jmp
rolb
loop
lds
xlat
fldz
into
enter
in
aam
loopne
xchg
fucomi
nop
rorl
icebp
fucomp
enter
aad
cmp
shl
mov
clc
loope
decl
in
fldl2e
fdivr
cmp
enter
addl
clc
loop
fcmove
cld
iret
iret
aam
xor
xlat
aam
das
cmp
fiaddl
repz
mov
in
into
lea
leave
hlt
cmp
leave
fdivl
cmp
cmc
fiaddl
loop
and
out
fcmovne
test
ljmp
jmp
jmp
cli
xlat
in
repz
jecxz
sub
adc
mov
jmp
leave
aam
rcl
aam
insb
bound
sub
jl
add
in
fcmovb
loop
enter
test
xor
jecxz
out
cld
ror
loope
clc
cmp
rol
stc
test
cmp
fsub
mov
out
xchg
lret
mov
ret
fcomi
xor
cld
out
cmp
into
fcomp
hlt
in
test
ljmp
and
sub
lret
cmp
xor
xlat
clc
cld
icebp
fcmove
into
sti
ret
bnd
in
dec
cld
aaa
ss
jmp
into
cmc
cmp
xor
sti
sti
out
stc
in
fisttps
sub
rol
fld
cmc
cmp
aad
loope
cmp
out
xchg
fucomi
mov
std
lock
push
shr
aam
icebp
cli
out
xor
xor
ror
out
fyl2xp1
xlat
cmc
call
in
lret
aad
in
ror
out
repnz
cmp
int
roll
loope
fiaddl
sub
lret
jmp
in
iret
jmp
ss
clc
cmp
addb
fucom
in
xchg
lock
call
in
out
lret
xor
sub
adc
enter
xchg
rclb
stc
aad
xor
out
stc
cld
repz
test
out
xlat
jmp
lret
lret
out
repz
loop
not
fcomip
aaa
fsubrp
fcmovnu
add
aad
hlt
rcr
mov
fxch
out
loop
or
xor
sti
in
out
ljmp
jmp
int3
out
xlat
sar
out
xchg
in
movl
aad
in
fyl2x
cmp
lret
ffree
in
sar
sar
ret
xlat
hlt
xlat
iret
int3
enter
xor
out
loopne
hlt
cmc
cmp
aad
jecxz
xchg
out
loope
leave
int
xor
cmc
std
adc
in
icebp
cmp
mov
ror
cmp
repnz
div
rcl
vpaddb
orl
in
shl
cmc
xor
fmul
lret
hlt
iret
cmp
sti
jmp
jecxz
cli
filds
decl
lret
in
cmc
lret
std
cmp
enter
ljmp
cmp
fndisi(8087
mov
xchg
enter
icebp
hlt
in
out
cmp
aam
lret
cmc
fdiv
aas
fdiv
sti
cmp
test
mov
shl
shl
aaa
icebp
lret
imul
cmc
cmc
fdivrp
cli
fstp
mov
incb
fld
fidivrl
fcmove
lret
rol
aas
out
out
in
addb
test
repnz
shl
int
sti
in
std
push
xor
sbb
ret
fdivrp
cld
ljmp
mov
repnz
divl
stc
cmp
in
cmp
std
cmc
shl
mov
leave
mov
ljmp
in
in
xor
ss
std
clc
cmp
faddl
ret
jecxz
enter
and
iret
xor
in
cmp
lret
sar
filds
roll
jmp
lock
lock
in
icebp
sti
fptan
cmp
xchg
jmp
sub
jmp
out
in
rcl
xlat
xor
out
neg
fdivrs
rol
test
clc
adcb
aad
aam
xor
rol
ss
out
out
xchg
dec
into
ror
test
aad
xor
xor
sti
div
fxtract
aad
loope
fnstsw
in
jecxz
int3
decb
xor
jmp
stc
shr
xor
repz
test
out
shl
fcmovu
ret
sti
xchg
test
leave
cmp
icebp
fmul
fcmovbe
ljmp
ror
vpaddw
lds
aam
out
xor
rcr
out
cmp
loop
out
test
in
in
sti
icebp
int
xchg
loop
aas
aad
rol
cmp
out
shl
lock
xlat
in
addl
fdiv
into
loopne
xor
out
fnstcw
xor
aas
std
sbb
cmpb
std
loope
out
in
loope
int3
int
shr
rol
loop
rol
repnz
shr
fcmovnu
hlt
not
cmp
mov
in
jmp
nop
in
xchg
out
sub
into
cld
aam
idiv
cmp
ret
jmp
out
out
iret
fucomp
xchg
lock
aam
rcr
repz
jmp
out
aad
in
addb
fsubrp
leave
enter
cmc
iret
aaa
iret
div
out
xor
out
fidivrs
cmp
stc
mov
faddl
ljmp
call
in
loope
aas
cli
loopne
jecxz
mov
mov
leave
xchg
sar
call
icebp
ror
xor
call
test
xor
add
movl
jmp
rol
ret
ret
ret
fwait
cmp
iret
stos
jle
pop
add
test
cld
in
xor
hlt
cs
ljmp
fidivrs
cld
loop
xacquire
out
out
filds
repnz
repnz
aam
leave
in
call
hlt
xchg
ffreep
call
icebp
loope
mov
int3
shr
in
idiv
div
aaa
xor
in
xlat
aam
mov
or
rorb
lock
cmp
call
ds
fldl2t
xchg
out
cld
roll
aaa
xor
xor
cmc
cmp
int
loop
xchg
aad
aam
addl
mov
ret
out
loop
cmp
int
repz
ret
ret
loope
loope
imul
fsubrp
loope
jmp
xchg
ds
jecxz
clc
call
idiv
not
in
repz
aad
in
ljmp
in
xor
xor
aas
add
fcmovnu
shl
xlat
xchg
in
xchg
lret
xor
aaa
ret
xor
icebp
fsubrs
cmc
cmp
loope
clc
cmp
inc
lret
jmp
mov
addb
repnz
in
in
sti
aad
shr
cmp
jecxz
cld
decb
lret
icebp
sti
mov
jmp
int3
lret
neg
fld
mul
hlt
xlat
test
cli
in
aam
cs
loop
fucom
xlat
out
lret
jecxz
clc
out
fdivr
mov
enter
nop
repz
cmpb
ss
std
cli
out
out
sar
sar
cmp
rol
fimull
fisttpl
aam
in
shl
xor
out
std
shr
rcl
sti
lret
sti
loopne
ret
std
push
jecxz
fdivs
int
fdivl
ljmp
xchg
in
leave
fiadds
xchg
cld
int3
into
ret
div
fcmovnb
jmp
xor
cmp
loop
in
in
cli
cmc
loope
loope
jmp
aad
ror
lock
cmp
loopne
repnz
loopne
repnz
movl
jmp
out
ss
cmp
mul
sarb
shl
aad
mov
into
jecxz
mov
xchg
xor
icebp
in
cmc
sub
leave
lock
idiv
out
repnz
icebp
ror
repnz
fchs
loope
lock
xchg
in
cmc
out
das
test
test
clc
cmp
shl
in
neg
iret
cld
in
loop
lret
lret
in
aad
aas
repnz
clc
cmp
xchg
ret
aad
xchg
mov
jmp
test
imul
cmp
cld
call
neg
sti
out
incb
int
rolb
hlt
les
into
std
repnz
not
std
cmp
stc
clc
out
out
int
in
dec
in
ds
ret
enter
lret
xor
loope
in
aad
loop
jecxz
or
int
jecxz
lret
leave
loope
shl
icebp
sarl
sub
test
loop
adc
xlat
loopne
into
imul
ror
xor
iret
rcl
fidivrs
addl
mov
cmc
into
shll
cmp
call
icebp
call
test
cmp
mov
mov
mov
cld
jmp
aad
aaa
cld
cli
ds
test
incl
stc
call
xchg
rcr
jmp
hlt
out
ror
out
sarl
sar
ds
sti
icebp
idiv
testl
loop
cmc
das
xlat
ret
enter
aad
into
loope
out
out
jecxz
loopne
mov
sub
xchg
xchg
aam
xor
repnz
shl
loope
fdivr
out
in
test
xchg
jmp
sub
xor
fucomi
xor
imul
aam
rcr
cmp
fadd
roll
in
fninit
fcmovnu
out
out
repz
rcl
int
lock
std
lret
jmp
test
inc
rcl
xlat
stc
mov
decb
jmp
int3
int
into
fdivs
icebp
in
ffreep
vpsubq
repnz
xchg
test
hlt
stc
clc
aad
repz
cmp
fcmovnbe
sar
shl
fisttps
fmul
repz
leave
lret
fcmovnb
out
fdiv
ljmp
sar
test
frstpm(287
sti
lock
icebp
in
fsubr
iret
cmp
sbb
shl
shl
vpandn
test
rcr
aad
xor
clc
cli
aaa
int3
cmp
lock
fsubp
test
jecxz
std
int
loope
loopne
xchg
loopne
loopne
shrl
fcmovnbe
test
cli
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
orl
jmp
into
ds
rcl
aad
arpl
pop
pop
sub
jl
xlat
div
hlt
repnz
jecxz
cmp
xchg
cld
lock
test
xor
sti
cmp
iret
xlat
repnz
test
in
jmp
test
cmp
call
rcl
in
shl
in
xlat
mov
int
mov
sti
enter
sar
ror
sti
sti
cmp
aam
ljmp
shl
out
call
xchg
call
in
sar
fcmovnbe
icebp
stc
loop
xlat
aam
fst
fidivrs
cli
mov
shll
int3
ret
enter
sti
cld
rcr
shr
loope
shl
cld
hlt
clc
lret
out
orl
in
ljmp
int3
icebp
cmp
ret
stc
mov
clc
addl
ss
in
xor
out
iret
ret
fdiv
lock
icebp
in
fadds
in
mov
lret
out
imul
stc
aaa
divb
in
xor
cld
faddp
repnz
leave
lea
jmp
stc
in
jecxz
std
rcr
xor
out
in
stc
loopne
loopne
jmp
in
lret
cli
clc
out
into
cmp
std
call
sti
idivb
lock
ret
in
out
lret
mul
in
cmp
out
hlt
aas
ss
repz
test
out
out
fsubp
not
call
icebp
int
lret
lock
sbb
fcmovb
xchg
int
sar
xor
jmp
call
sti
ret
sbb
in
out
shl
mov
in
repnz
jmp
clc
mul
fucom
shl
mul
mov
cmc
sub
loop
lea
out
ljmp
out
ret
shl
fcmovu
xchg
ret
icebp
lea
loopne
jecxz
into
xlat
out
idivl
sti
repz
jmp
in
ljmp
sub
cli
call
cmc
lret
xchg
and
mov
mov
in
jmp
lock
loope
in
hlt
ss
ror
fxtract
lock
stc
sarl
orl
nop
in
mov
out
icebp
fcomi
xor
jmp
clc
idivl
loop
in
cmc
mov
lock
stc
in
in
enter
loop
loopne
ret
jmp
repnz
int
std
in
repz
das
rol
clc
aaa
das
in
lock
leave
out
fdivr
mov
ljmp
cmp
in
icebp
int3
cld
cmp
cmp
in
lock
clc
out
in
in
int
out
lea
rcl
out
xor
in
clc
hlt
cld
testl
jmp
mov
int3
fcom
xlat
div
cmp
sarb
cmc
bnd
call
ror
ffreep
xor
ljmp
aad
and
movb
ljmp
repz
sti
clc
out
sti
cmp
ljmp
mul
loope
mov
mov
aam
fld
iret
stc
ljmp
cmpl
loopne
or
in
out
ror
xlat
aad
lock
aad
cmp
jmp
aas
loop
test
ffreep
sti
stc
out
inc
out
call
mov
stc
fsubr
imul
cli
shll
cli
jmp
loopne,pt
clc
leave
rcl
enter
icebp
call
iret
iret
out
out
in
ret
lds
jmp
iret
fsubr
cmc
shl
aam
repz
loopne
nop
icebp
test
xor
icebp
lret
cmp
inc
faddp
fyl2xp1
test
ffree
dec
iret
repz
xchg
in
jecxz
int
lret
ljmp
rcr
sti
fstp
hlt
shl
fcomi
jecxz
mov
xor
rcl
in
cld
cmp
int
std
std
ds
icebp
loopne
fsubr
sbb
mov
out
leave
out
fdivrs
in
clc
aas
not
int
shl
jecxz
std
xchg
in
leave
mov
lret
icebp
out
jmp
aad
cmp
stc
lock
xchg
aam
sti
int3
into
fadds
lock
das
test
out
cmp
fstp
jmp
cmp
fcomp
cld
stc
push
cmp
icebp
lret
xor
out
out
icebp
jmp
into
lock
cli
roll
fsub
addb
test
int3
aad
icebp
ljmp
aad
xor
cmp
aam
decl
leave
cld
cmc
mov
out
loop
xor
jmp
fcomi
xlat
mov
sbb
xor
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
add
imul
mov
jmp
leave
sarb
int
leave
jle
mov
mov
and
or
jl
cmp
in
fdiv
shl
xlat
and
jmp
into
lock
enter
out
enter
pop
lock
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
push
andl
push
subl
push
xorl
xor
lea
xor
movl
or
andl
xor
add
adcl
push
orl
lea
subl
push
push
xorl
lea
movl
inc
subl
xor
negl
xor
call
movl
movl
mov
mov
jmp
adcl
xor
movl
xor
sbb
xor
addl
xor
movl
incl
mov
mov
cmp
jb
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jb
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
andl
movl
sub
lea
mov
sbb
mov
mov
and
lea
neg
mov
xor
or
sub
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
movzwl
sub
mov
mov
mov
add
mov
add
xor
mov
add
not
mov
mov
mov
cmp
mov
movl
mov
movl
je
sub
mov
xor
add
adcl
imul
mov
movl
jmp
sbbl
xor
movl
add
mov
xor
mov
mov
sub
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
jmp
sbb
add
mov
xorl
mov
xor
mov
orl
xor
movl
add
movl
cmp
movl
jne
push
pushl
andl
pushl
andl
call
mov
mov
mov
xorl
mov
mov
mov
mov
movl
movl
andl
mov
and
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
andl
mov
xorl
xor
sbbl
add
movl
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
xorl
xor
sub
lea
mov
mov
xor
orl
lea
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
and
mov
movl
mov
movl
or
mov
mov
xor
addl
add
cmp
movl
je
xor
mov
xor
addl
add
add
mov
mov
mov
sub
and
mov
xor
and
mov
orl
sub
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
xor
add
adc
add
mov
movl
cmp
ja
mov
and
mov
movzwl
sub
mov
xor
add
movl
cmpl
je
cmpl
jne
push
push
push
push
call
mov
dec
mov
jmp
orl
imul
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
xor
add
and
mov
xor
adc
add
add
mov
mov
mov
mov
mov
mov
sub
or
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
push
sub
push
xor
push
mov
call
pushl
pushl
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
je
mov
jmp
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
push
movl
push
movl
mov
movl
push
movl
mov
movl
mov
mov
push
not
mov
movzbl
mov
cmp
movl
je
mov
mov
xor
addl
add
cmp
je
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
sbb
xor
add
push
mov
adc
pushl
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
pushl
mov
call
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
push
movl
mov
mov
sbbl
add
andl
xor
movl
cmp
jne
and
mov
mov
movl
add
mov
mov
mov
movl
xor
and
push
xor
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
movzbl
adc
mov
xor
mov
addl
xor
subl
add
movl
mov
mov
movl
movl
mov
movl
push
mov
movl
mov
cmp
movl
je
orl
mov
addl
xor
adcl
xor
xorl
lea
negl
xor
movl
cmp
movl
jne
jmp
add
mov
xor
addl
add
andl
mov
movl
mov
xor
and
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
adc
movl
dec
movl
mov
push
mov
adc
xor
mov
add
mov
xor
or
mov
add
mov
push
push
adcl
test
movl
je
mov
mov
mov
sbb
mov
mov
imul
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
sbbl
mov
add
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sbbl
mov
xchg
sub
xor
orl
mov
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
sub
mov
xor
sub
xor
add
mov
movl
mov
movl
je
andl
mov
xorl
xor
andl
add
cmp
jne
adcl
pushl
call
subl
mov
movzwl
add
mov
mov
mov
or
mov
sbbl
mov
xor
andl
add
cmp
je
pushl
pushl
orl
call
movl
mov
mov
add
mov
xorl
xor
add
movl
cmp
movl
je
orl
mov
mov
mov
sbb
mov
mov
notl
add
movzwl
sbb
mov
sub
mov
subl
mov
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
orl
mov
mov
subl
add
adc
xor
mov
sub
mov
xor
add
mov
sub
mov
add
xorl
lea
mov
xorl
push
pushl
subl
pushl
orl
call
mov
xor
add
sub
mov
mov
notl
xor
decl
add
movl
cmp
movl
jne
inc
mov
movl
inc
movl
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
